
../repos/ReadStat/.libs/libreadstat.so.1.1.4:     file format elf32-littlearm


Disassembly of section .init:

00003d4c <_init>:
    3d4c:	push	{r3, lr}
    3d50:	bl	4598 <call_weak_fn>
    3d54:	pop	{r3, pc}

Disassembly of section .plt:

00003d58 <.plt>:
    3d58:	push	{lr}		; (str lr, [sp, #-4]!)
    3d5c:	ldr	lr, [pc, #4]	; 3d68 <.plt+0x10>
    3d60:	add	lr, pc, lr
    3d64:	ldr	pc, [lr, #8]!
    3d68:	.word	0x00041298

00003d6c <sas_validate_name@plt>:
    3d6c:	add	ip, pc, #0, 12
    3d70:	add	ip, ip, #266240	; 0x41000
    3d74:	ldr	pc, [ip, #664]!	; 0x298

00003d78 <calloc@plt>:
    3d78:	add	ip, pc, #0, 12
    3d7c:	add	ip, ip, #266240	; 0x41000
    3d80:	ldr	pc, [ip, #656]!	; 0x290

00003d84 <readstat_set_seek_handler@plt>:
    3d84:	add	ip, pc, #0, 12
    3d88:	add	ip, ip, #266240	; 0x41000
    3d8c:	ldr	pc, [ip, #648]!	; 0x288

00003d90 <readstat_set_open_handler@plt>:
    3d90:	add	ip, pc, #0, 12
    3d94:	add	ip, ip, #266240	; 0x41000
    3d98:	ldr	pc, [ip, #640]!	; 0x280

00003d9c <byteswap8@plt>:
    3d9c:	add	ip, pc, #0, 12
    3da0:	add	ip, ip, #266240	; 0x41000
    3da4:	ldr	pc, [ip, #632]!	; 0x278

00003da8 <raise@plt>:
    3da8:	add	ip, pc, #0, 12
    3dac:	add	ip, ip, #266240	; 0x41000
    3db0:	ldr	pc, [ip, #624]!	; 0x270

00003db4 <byteswap4@plt>:
    3db4:	add	ip, pc, #0, 12
    3db8:	add	ip, ip, #266240	; 0x41000
    3dbc:	ldr	pc, [ip, #616]!	; 0x268

00003dc0 <readstat_validate_metadata@plt>:
    3dc0:	add	ip, pc, #0, 12
    3dc4:	add	ip, ip, #266240	; 0x41000
    3dc8:	ldr	pc, [ip, #608]!	; 0x260

00003dcc <readstat_sort_label_set@plt>:
    3dcc:	add	ip, pc, #0, 12
    3dd0:	add	ip, ip, #266240	; 0x41000
    3dd4:	ldr	pc, [ip, #600]!	; 0x258

00003dd8 <por_ctx_free@plt>:
    3dd8:	add	ip, pc, #0, 12
    3ddc:	add	ip, ip, #266240	; 0x41000
    3de0:	ldr	pc, [ip, #592]!	; 0x250

00003de4 <memreverse@plt>:
    3de4:	add	ip, pc, #0, 12
    3de8:	add	ip, ip, #266240	; 0x41000
    3dec:	ldr	pc, [ip, #584]!	; 0x248

00003df0 <iconv_close@plt>:
    3df0:	add	ip, pc, #0, 12
    3df4:	add	ip, ip, #266240	; 0x41000
    3df8:	ldr	pc, [ip, #576]!	; 0x240

00003dfc <readstat_write_spaces@plt>:
    3dfc:	add	ip, pc, #0, 12
    3e00:	add	ip, ip, #266240	; 0x41000
    3e04:	ldr	pc, [ip, #568]!	; 0x238

00003e08 <iconv@plt>:
    3e08:	add	ip, pc, #0, 12
    3e0c:	add	ip, ip, #266240	; 0x41000
    3e10:	ldr	pc, [ip, #560]!	; 0x230

00003e14 <sav_parse_timestamp@plt>:
    3e14:	add	ip, pc, #0, 12
    3e18:	add	ip, ip, #266240	; 0x41000
    3e1c:	ldr	pc, [ip, #552]!	; 0x228

00003e20 <strcmp@plt>:
    3e20:	add	ip, pc, #0, 12
    3e24:	add	ip, ip, #266240	; 0x41000
    3e28:	ldr	pc, [ip, #544]!	; 0x220

00003e2c <__cxa_finalize@plt>:
    3e2c:	add	ip, pc, #0, 12
    3e30:	add	ip, ip, #266240	; 0x41000
    3e34:	ldr	pc, [ip, #536]!	; 0x218

00003e38 <ck_hash_table_wipe@plt>:
    3e38:	add	ip, pc, #0, 12
    3e3c:	add	ip, ip, #266240	; 0x41000
    3e40:	ldr	pc, [ip, #528]!	; 0x210

00003e44 <readstat_type_class@plt>:
    3e44:	add	ip, pc, #0, 12
    3e48:	add	ip, ip, #266240	; 0x41000
    3e4c:	ldr	pc, [ip, #520]!	; 0x208

00003e50 <strtol@plt>:
    3e50:	add	ip, pc, #0, 12
    3e54:	add	ip, ip, #266240	; 0x41000
    3e58:	ldr	pc, [ip, #512]!	; 0x200

00003e5c <read@plt>:
    3e5c:	add	ip, pc, #0, 12
    3e60:	add	ip, ip, #266240	; 0x41000
    3e64:	ldr	pc, [ip, #504]!	; 0x1f8

00003e68 <readstat_error_message@plt>:
    3e68:	add	ip, pc, #0, 12
    3e6c:	add	ip, ip, #266240	; 0x41000
    3e70:	ldr	pc, [ip, #496]!	; 0x1f0

00003e74 <mktime@plt>:
    3e74:	add	ip, pc, #0, 12
    3e78:	add	ip, ip, #266240	; 0x41000
    3e7c:	ldr	pc, [ip, #488]!	; 0x1e8

00003e80 <spss_alignment_from_readstat_alignment@plt>:
    3e80:	add	ip, pc, #0, 12
    3e84:	add	ip, ip, #266240	; 0x41000
    3e88:	ldr	pc, [ip, #480]!	; 0x1e0

00003e8c <readstat_copy@plt>:
    3e8c:	add	ip, pc, #0, 12
    3e90:	add	ip, ip, #266240	; 0x41000
    3e94:	ldr	pc, [ip, #472]!	; 0x1d8

00003e98 <dta_ctx_free@plt>:
    3e98:	add	ip, pc, #0, 12
    3e9c:	add	ip, ip, #266240	; 0x41000
    3ea0:	ldr	pc, [ip, #464]!	; 0x1d0

00003ea4 <deflateBound@plt>:
    3ea4:	add	ip, pc, #0, 12
    3ea8:	add	ip, ip, #266240	; 0x41000
    3eac:	ldr	pc, [ip, #456]!	; 0x1c8

00003eb0 <readstat_set_update_handler@plt>:
    3eb0:	add	ip, pc, #0, 12
    3eb4:	add	ip, ip, #266240	; 0x41000
    3eb8:	ldr	pc, [ip, #448]!	; 0x1c0

00003ebc <memmove@plt>:
    3ebc:	add	ip, pc, #0, 12
    3ec0:	add	ip, ip, #266240	; 0x41000
    3ec4:	ldr	pc, [ip, #440]!	; 0x1b8

00003ec8 <byteswap2@plt>:
    3ec8:	add	ip, pc, #0, 12
    3ecc:	add	ip, ip, #266240	; 0x41000
    3ed0:	ldr	pc, [ip, #432]!	; 0x1b0

00003ed4 <machine_is_little_endian@plt>:
    3ed4:	add	ip, pc, #0, 12
    3ed8:	add	ip, ip, #266240	; 0x41000
    3edc:	ldr	pc, [ip, #424]!	; 0x1a8

00003ee0 <free@plt>:
    3ee0:	add	ip, pc, #0, 12
    3ee4:	add	ip, ip, #266240	; 0x41000
    3ee8:	ldr	pc, [ip, #416]!	; 0x1a0

00003eec <readstat_value_is_system_missing@plt>:
    3eec:	add	ip, pc, #0, 12
    3ef0:	add	ip, ip, #266240	; 0x41000
    3ef4:	ldr	pc, [ip, #408]!	; 0x198

00003ef8 <sav_parse_time@plt>:
    3ef8:	add	ip, pc, #0, 12
    3efc:	add	ip, ip, #266240	; 0x41000
    3f00:	ldr	pc, [ip, #400]!	; 0x190

00003f04 <readstat_variable_get_format@plt>:
    3f04:	add	ip, pc, #0, 12
    3f08:	add	ip, ip, #266240	; 0x41000
    3f0c:	ldr	pc, [ip, #392]!	; 0x188

00003f10 <readstat_value_is_defined_missing@plt>:
    3f10:	add	ip, pc, #0, 12
    3f14:	add	ip, ip, #266240	; 0x41000
    3f18:	ldr	pc, [ip, #384]!	; 0x180

00003f1c <ones_to_twos_complement4@plt>:
    3f1c:	add	ip, pc, #0, 12
    3f20:	add	ip, ip, #266240	; 0x41000
    3f24:	ldr	pc, [ip, #376]!	; 0x178

00003f28 <ones_to_twos_complement2@plt>:
    3f28:	add	ip, pc, #0, 12
    3f2c:	add	ip, ip, #266240	; 0x41000
    3f30:	ldr	pc, [ip, #368]!	; 0x170

00003f34 <sav_ctx_free@plt>:
    3f34:	add	ip, pc, #0, 12
    3f38:	add	ip, ip, #266240	; 0x41000
    3f3c:	ldr	pc, [ip, #360]!	; 0x168

00003f40 <memcpy@plt>:
    3f40:	add	ip, pc, #0, 12
    3f44:	add	ip, ip, #266240	; 0x41000
    3f48:	ldr	pc, [ip, #352]!	; 0x160

00003f4c <spss_parse_format@plt>:
    3f4c:	add	ip, pc, #0, 12
    3f50:	add	ip, ip, #266240	; 0x41000
    3f54:	ldr	pc, [ip, #344]!	; 0x158

00003f58 <submit_columns@plt>:
    3f58:	add	ip, pc, #0, 12
    3f5c:	add	ip, ip, #266240	; 0x41000
    3f60:	ldr	pc, [ip, #336]!	; 0x150

00003f64 <readstat_variable_get_missing_range_lo@plt>:
    3f64:	add	ip, pc, #0, 12
    3f68:	add	ip, ip, #266240	; 0x41000
    3f6c:	ldr	pc, [ip, #328]!	; 0x148

00003f70 <readstat_insert_string_ref@plt>:
    3f70:	add	ip, pc, #0, 12
    3f74:	add	ip, ip, #266240	; 0x41000
    3f78:	ldr	pc, [ip, #320]!	; 0x140

00003f7c <time@plt>:
    3f7c:	add	ip, pc, #0, 12
    3f80:	add	ip, ip, #266240	; 0x41000
    3f84:	ldr	pc, [ip, #312]!	; 0x138

00003f88 <readstat_begin_writing_file@plt>:
    3f88:	add	ip, pc, #0, 12
    3f8c:	add	ip, ip, #266240	; 0x41000
    3f90:	ldr	pc, [ip, #304]!	; 0x130

00003f94 <lseek@plt>:
    3f94:	add	ip, pc, #0, 12
    3f98:	add	ip, ip, #266240	; 0x41000
    3f9c:	ldr	pc, [ip, #296]!	; 0x128

00003fa0 <unistd_io_init@plt>:
    3fa0:	add	ip, pc, #0, 12
    3fa4:	add	ip, ip, #266240	; 0x41000
    3fa8:	ldr	pc, [ip, #288]!	; 0x120

00003fac <pow@plt>:
    3fac:	add	ip, pc, #0, 12
    3fb0:	add	ip, ip, #266240	; 0x41000
    3fb4:	ldr	pc, [ip, #280]!	; 0x118

00003fb8 <uncompress@plt>:
    3fb8:	add	ip, pc, #0, 12
    3fbc:	add	ip, ip, #266240	; 0x41000
    3fc0:	ldr	pc, [ip, #272]!	; 0x110

00003fc4 <memcmp@plt>:
    3fc4:	add	ip, pc, #0, 12
    3fc8:	add	ip, ip, #266240	; 0x41000
    3fcc:	ldr	pc, [ip, #264]!	; 0x108

00003fd0 <readstat_string_value@plt>:
    3fd0:	add	ip, pc, #0, 12
    3fd4:	add	ip, ip, #266240	; 0x41000
    3fd8:	ldr	pc, [ip, #256]!	; 0x100

00003fdc <readstat_schema_free@plt>:
    3fdc:	add	ip, pc, #0, 12
    3fe0:	add	ip, ip, #266240	; 0x41000
    3fe4:	ldr	pc, [ip, #248]!	; 0xf8

00003fe8 <readstat_calloc@plt>:
    3fe8:	add	ip, pc, #0, 12
    3fec:	add	ip, ip, #266240	; 0x41000
    3ff0:	ldr	pc, [ip, #240]!	; 0xf0

00003ff4 <ck_str_hash_lookup@plt>:
    3ff4:	add	ip, pc, #0, 12
    3ff8:	add	ip, ip, #266240	; 0x41000
    3ffc:	ldr	pc, [ip, #232]!	; 0xe8

00004000 <sav_compressed_row_bound@plt>:
    4000:	add	ip, pc, #0, 12
    4004:	add	ip, ip, #266240	; 0x41000
    4008:	ldr	pc, [ip, #224]!	; 0xe0

0000400c <ck_hash_table_grow@plt>:
    400c:	add	ip, pc, #0, 12
    4010:	add	ip, ip, #266240	; 0x41000
    4014:	ldr	pc, [ip, #216]!	; 0xd8

00004018 <realloc@plt>:
    4018:	add	ip, pc, #0, 12
    401c:	add	ip, ip, #266240	; 0x41000
    4020:	ldr	pc, [ip, #208]!	; 0xd0

00004024 <cnxptiee@plt>:
    4024:	add	ip, pc, #0, 12
    4028:	add	ip, ip, #266240	; 0x41000
    402c:	ldr	pc, [ip, #200]!	; 0xc8

00004030 <read_version_and_timestamp@plt>:
    4030:	add	ip, pc, #0, 12
    4034:	add	ip, ip, #266240	; 0x41000
    4038:	ldr	pc, [ip, #192]!	; 0xc0

0000403c <readstat_write_zeros@plt>:
    403c:	add	ip, pc, #0, 12
    4040:	add	ip, ip, #266240	; 0x41000
    4044:	ldr	pc, [ip, #184]!	; 0xb8

00004048 <strcasecmp@plt>:
    4048:	add	ip, pc, #0, 12
    404c:	add	ip, ip, #266240	; 0x41000
    4050:	ldr	pc, [ip, #176]!	; 0xb0

00004054 <readstat_copy_quoted@plt>:
    4054:	add	ip, pc, #0, 12
    4058:	add	ip, ip, #266240	; 0x41000
    405c:	ldr	pc, [ip, #168]!	; 0xa8

00004060 <deflate@plt>:
    4060:	add	ip, pc, #0, 12
    4064:	add	ip, ip, #266240	; 0x41000
    4068:	ldr	pc, [ip, #160]!	; 0xa0

0000406c <submit_value_label@plt>:
    406c:	add	ip, pc, #0, 12
    4070:	add	ip, ip, #266240	; 0x41000
    4074:	ldr	pc, [ip, #152]!	; 0x98

00004078 <sav_ctx_init@plt>:
    4078:	add	ip, pc, #0, 12
    407c:	add	ip, ip, #266240	; 0x41000
    4080:	ldr	pc, [ip, #144]!	; 0x90

00004084 <ck_str_n_hash_lookup@plt>:
    4084:	add	ip, pc, #0, 12
    4088:	add	ip, ip, #266240	; 0x41000
    408c:	ldr	pc, [ip, #136]!	; 0x88

00004090 <spss_measure_from_readstat_measure@plt>:
    4090:	add	ip, pc, #0, 12
    4094:	add	ip, ip, #266240	; 0x41000
    4098:	ldr	pc, [ip, #128]!	; 0x80

0000409c <sas_rle_decompress@plt>:
    409c:	add	ip, pc, #0, 12
    40a0:	add	ip, ip, #266240	; 0x41000
    40a4:	ldr	pc, [ip, #120]!	; 0x78

000040a8 <sav_parse_date@plt>:
    40a8:	add	ip, pc, #0, 12
    40ac:	add	ip, ip, #266240	; 0x41000
    40b0:	ldr	pc, [ip, #112]!	; 0x70

000040b4 <xport_namestr_bswap@plt>:
    40b4:	add	ip, pc, #0, 12
    40b8:	add	ip, ip, #266240	; 0x41000
    40bc:	ldr	pc, [ip, #104]!	; 0x68

000040c0 <strcpy@plt>:
    40c0:	add	ip, pc, #0, 12
    40c4:	add	ip, ip, #266240	; 0x41000
    40c8:	ldr	pc, [ip, #96]!	; 0x60

000040cc <zsav_current_block@plt>:
    40cc:	add	ip, pc, #0, 12
    40d0:	add	ip, ip, #266240	; 0x41000
    40d4:	ldr	pc, [ip, #88]!	; 0x58

000040d8 <zsav_ctx_init@plt>:
    40d8:	add	ip, pc, #0, 12
    40dc:	add	ip, ip, #266240	; 0x41000
    40e0:	ldr	pc, [ip, #80]!	; 0x50

000040e4 <sas_write_header@plt>:
    40e4:	add	ip, pc, #0, 12
    40e8:	add	ip, ip, #266240	; 0x41000
    40ec:	ldr	pc, [ip, #72]!	; 0x48

000040f0 <strtof@plt>:
    40f0:	add	ip, pc, #0, 12
    40f4:	add	ip, ip, #266240	; 0x41000
    40f8:	ldr	pc, [ip, #64]!	; 0x40

000040fc <readstat_schema_find_or_create_entry@plt>:
    40fc:	add	ip, pc, #0, 12
    4100:	add	ip, ip, #266240	; 0x41000
    4104:	ldr	pc, [ip, #56]!	; 0x38

00004108 <readstat_value_type_class@plt>:
    4108:	add	ip, pc, #0, 12
    410c:	add	ip, ip, #266240	; 0x41000
    4110:	ldr	pc, [ip, #48]!	; 0x30

00004114 <readstat_set_io_ctx@plt>:
    4114:	add	ip, pc, #0, 12
    4118:	add	ip, ip, #266240	; 0x41000
    411c:	ldr	pc, [ip, #40]!	; 0x28

00004120 <spss_format_for_variable@plt>:
    4120:	add	ip, pc, #0, 12
    4124:	add	ip, ip, #266240	; 0x41000
    4128:	ldr	pc, [ip, #32]!

0000412c <readstat_parser_free@plt>:
    412c:	add	ip, pc, #0, 12
    4130:	add	ip, ip, #266240	; 0x41000
    4134:	ldr	pc, [ip, #24]!

00004138 <malloc@plt>:
    4138:	add	ip, pc, #0, 12
    413c:	add	ip, ip, #266240	; 0x41000
    4140:	ldr	pc, [ip, #16]!

00004144 <zsav_add_block@plt>:
    4144:	add	ip, pc, #0, 12
    4148:	add	ip, ip, #266240	; 0x41000
    414c:	ldr	pc, [ip, #8]!

00004150 <deflateInit_@plt>:
    4150:	add	ip, pc, #0, 12
    4154:	add	ip, ip, #266240	; 0x41000
    4158:	ldr	pc, [ip, #0]!

0000415c <iconv_open@plt>:
    415c:	add	ip, pc, #0, 12
    4160:	add	ip, ip, #64, 20	; 0x40000
    4164:	ldr	pc, [ip, #4088]!	; 0xff8

00004168 <strerror@plt>:
    4168:	add	ip, pc, #0, 12
    416c:	add	ip, ip, #64, 20	; 0x40000
    4170:	ldr	pc, [ip, #4080]!	; 0xff0

00004174 <sas_validate_tag@plt>:
    4174:	add	ip, pc, #0, 12
    4178:	add	ip, ip, #64, 20	; 0x40000
    417c:	ldr	pc, [ip, #4072]!	; 0xfe8

00004180 <readstat_write_string@plt>:
    4180:	add	ip, pc, #0, 12
    4184:	add	ip, ip, #64, 20	; 0x40000
    4188:	ldr	pc, [ip, #4064]!	; 0xfe0

0000418c <localtime@plt>:
    418c:	add	ip, pc, #0, 12
    4190:	add	ip, ip, #64, 20	; 0x40000
    4194:	ldr	pc, [ip, #4056]!	; 0xfd8

00004198 <__ctype_tolower_loc@plt>:
    4198:	add	ip, pc, #0, 12
    419c:	add	ip, ip, #64, 20	; 0x40000
    41a0:	ldr	pc, [ip, #4048]!	; 0xfd0

000041a4 <modf@plt>:
    41a4:	add	ip, pc, #0, 12
    41a8:	add	ip, ip, #64, 20	; 0x40000
    41ac:	ldr	pc, [ip, #4040]!	; 0xfc8

000041b0 <__ctype_toupper_loc@plt>:
    41b0:	add	ip, pc, #0, 12
    41b4:	add	ip, ip, #64, 20	; 0x40000
    41b8:	ldr	pc, [ip, #4032]!	; 0xfc0

000041bc <ck_hash_table_init@plt>:
    41bc:	add	ip, pc, #0, 12
    41c0:	add	ip, ip, #64, 20	; 0x40000
    41c4:	ldr	pc, [ip, #4024]!	; 0xfb8

000041c8 <__gmon_start__@plt>:
    41c8:	add	ip, pc, #0, 12
    41cc:	add	ip, ip, #64, 20	; 0x40000
    41d0:	ldr	pc, [ip, #4016]!	; 0xfb0

000041d4 <open@plt>:
    41d4:	add	ip, pc, #0, 12
    41d8:	add	ip, ip, #64, 20	; 0x40000
    41dc:	ldr	pc, [ip, #4008]!	; 0xfa8

000041e0 <readstat_double_value@plt>:
    41e0:	add	ip, pc, #0, 12
    41e4:	add	ip, ip, #64, 20	; 0x40000
    41e8:	ldr	pc, [ip, #4000]!	; 0xfa0

000041ec <get_native@plt>:
    41ec:	add	ip, pc, #0, 12
    41f0:	add	ip, ip, #64, 20	; 0x40000
    41f4:	ldr	pc, [ip, #3992]!	; 0xf98

000041f8 <dta_ctx_init@plt>:
    41f8:	add	ip, pc, #0, 12
    41fc:	add	ip, ip, #64, 20	; 0x40000
    4200:	ldr	pc, [ip, #3984]!	; 0xf90

00004204 <readstat_variable_get_type@plt>:
    4204:	add	ip, pc, #0, 12
    4208:	add	ip, ip, #64, 20	; 0x40000
    420c:	ldr	pc, [ip, #3976]!	; 0xf88

00004210 <dta_type_info@plt>:
    4210:	add	ip, pc, #0, 12
    4214:	add	ip, ip, #64, 20	; 0x40000
    4218:	ldr	pc, [ip, #3968]!	; 0xf80

0000421c <sav_parse_long_variable_names_record@plt>:
    421c:	add	ip, pc, #0, 12
    4220:	add	ip, ip, #64, 20	; 0x40000
    4224:	ldr	pc, [ip, #3960]!	; 0xf78

00004228 <strlen@plt>:
    4228:	add	ip, pc, #0, 12
    422c:	add	ip, ip, #64, 20	; 0x40000
    4230:	ldr	pc, [ip, #3952]!	; 0xf70

00004234 <spss_varinfo_compare@plt>:
    4234:	add	ip, pc, #0, 12
    4238:	add	ip, ip, #64, 20	; 0x40000
    423c:	ldr	pc, [ip, #3944]!	; 0xf68

00004240 <sav_decompress_row@plt>:
    4240:	add	ip, pc, #0, 12
    4244:	add	ip, ip, #64, 20	; 0x40000
    4248:	ldr	pc, [ip, #3936]!	; 0xf60

0000424c <readstat_variable_get_display_width@plt>:
    424c:	add	ip, pc, #0, 12
    4250:	add	ip, ip, #64, 20	; 0x40000
    4254:	ldr	pc, [ip, #3928]!	; 0xf58

00004258 <readstat_malloc@plt>:
    4258:	add	ip, pc, #0, 12
    425c:	add	ip, ip, #64, 20	; 0x40000
    4260:	ldr	pc, [ip, #3920]!	; 0xf50

00004264 <readstat_convert@plt>:
    4264:	add	ip, pc, #0, 12
    4268:	add	ip, ip, #64, 20	; 0x40000
    426c:	ldr	pc, [ip, #3912]!	; 0xf48

00004270 <ck_hash_table_free@plt>:
    4270:	add	ip, pc, #0, 12
    4274:	add	ip, ip, #64, 20	; 0x40000
    4278:	ldr	pc, [ip, #3904]!	; 0xf40

0000427c <readstat_por_parse_double@plt>:
    427c:	add	ip, pc, #0, 12
    4280:	add	ip, ip, #64, 20	; 0x40000
    4284:	ldr	pc, [ip, #3896]!	; 0xf38

00004288 <por_utf8_encode@plt>:
    4288:	add	ip, pc, #0, 12
    428c:	add	ip, ip, #64, 20	; 0x40000
    4290:	ldr	pc, [ip, #3888]!	; 0xf30

00004294 <__errno_location@plt>:
    4294:	add	ip, pc, #0, 12
    4298:	add	ip, ip, #64, 20	; 0x40000
    429c:	ldr	pc, [ip, #3880]!	; 0xf28

000042a0 <spss_init_variable_for_info@plt>:
    42a0:	add	ip, pc, #0, 12
    42a4:	add	ip, ip, #64, 20	; 0x40000
    42a8:	ldr	pc, [ip, #3872]!	; 0xf20

000042ac <snprintf@plt>:
    42ac:	add	ip, pc, #0, 12
    42b0:	add	ip, ip, #64, 20	; 0x40000
    42b4:	ldr	pc, [ip, #3864]!	; 0xf18

000042b8 <__isoc99_sscanf@plt>:
    42b8:	add	ip, pc, #0, 12
    42bc:	add	ip, ip, #64, 20	; 0x40000
    42c0:	ldr	pc, [ip, #3856]!	; 0xf10

000042c4 <ck_str_n_hash_insert@plt>:
    42c4:	add	ip, pc, #0, 12
    42c8:	add	ip, ip, #64, 20	; 0x40000
    42cc:	ldr	pc, [ip, #3848]!	; 0xf08

000042d0 <memset@plt>:
    42d0:	add	ip, pc, #0, 12
    42d4:	add	ip, ip, #64, 20	; 0x40000
    42d8:	ldr	pc, [ip, #3840]!	; 0xf00

000042dc <spss_64bit_value@plt>:
    42dc:	add	ip, pc, #0, 12
    42e0:	add	ip, ip, #64, 20	; 0x40000
    42e4:	ldr	pc, [ip, #3832]!	; 0xef8

000042e8 <strncpy@plt>:
    42e8:	add	ip, pc, #0, 12
    42ec:	add	ip, ip, #64, 20	; 0x40000
    42f0:	ldr	pc, [ip, #3824]!	; 0xef0

000042f4 <readstat_variable_get_storage_width@plt>:
    42f4:	add	ip, pc, #0, 12
    42f8:	add	ip, ip, #64, 20	; 0x40000
    42fc:	ldr	pc, [ip, #3816]!	; 0xee8

00004300 <sav_parse_very_long_string_record@plt>:
    4300:	add	ip, pc, #0, 12
    4304:	add	ip, ip, #64, 20	; 0x40000
    4308:	ldr	pc, [ip, #3808]!	; 0xee0

0000430c <readstat_realloc@plt>:
    430c:	add	ip, pc, #0, 12
    4310:	add	ip, ip, #64, 20	; 0x40000
    4314:	ldr	pc, [ip, #3800]!	; 0xed8

00004318 <dta_parse_timestamp@plt>:
    4318:	add	ip, pc, #0, 12
    431c:	add	ip, ip, #64, 20	; 0x40000
    4320:	ldr	pc, [ip, #3792]!	; 0xed0

00004324 <strtod@plt>:
    4324:	add	ip, pc, #0, 12
    4328:	add	ip, ip, #64, 20	; 0x40000
    432c:	ldr	pc, [ip, #3784]!	; 0xec8

00004330 <readstat_variable_get_missing_ranges_count@plt>:
    4330:	add	ip, pc, #0, 12
    4334:	add	ip, ip, #64, 20	; 0x40000
    4338:	ldr	pc, [ip, #3776]!	; 0xec0

0000433c <deflateEnd@plt>:
    433c:	add	ip, pc, #0, 12
    4340:	add	ip, ip, #64, 20	; 0x40000
    4344:	ldr	pc, [ip, #3768]!	; 0xeb8

00004348 <readstat_variable_get_measure@plt>:
    4348:	add	ip, pc, #0, 12
    434c:	add	ip, ip, #64, 20	; 0x40000
    4350:	ldr	pc, [ip, #3760]!	; 0xeb0

00004354 <readstat_variable_get_missing_range_hi@plt>:
    4354:	add	ip, pc, #0, 12
    4358:	add	ip, ip, #64, 20	; 0x40000
    435c:	ldr	pc, [ip, #3752]!	; 0xea8

00004360 <readstat_set_read_handler@plt>:
    4360:	add	ip, pc, #0, 12
    4364:	add	ip, ip, #64, 20	; 0x40000
    4368:	ldr	pc, [ip, #3744]!	; 0xea0

0000436c <readstat_value_type@plt>:
    436c:	add	ip, pc, #0, 12
    4370:	add	ip, ip, #64, 20	; 0x40000
    4374:	ldr	pc, [ip, #3736]!	; 0xe98

00004378 <sas_header_info_init@plt>:
    4378:	add	ip, pc, #0, 12
    437c:	add	ip, ip, #64, 20	; 0x40000
    4380:	ldr	pc, [ip, #3728]!	; 0xe90

00004384 <readstat_string_ref_init@plt>:
    4384:	add	ip, pc, #0, 12
    4388:	add	ip, ip, #64, 20	; 0x40000
    438c:	ldr	pc, [ip, #3720]!	; 0xe88

00004390 <readstat_variable_get_name@plt>:
    4390:	add	ip, pc, #0, 12
    4394:	add	ip, ip, #64, 20	; 0x40000
    4398:	ldr	pc, [ip, #3712]!	; 0xe80

0000439c <ones_to_twos_complement1@plt>:
    439c:	add	ip, pc, #0, 12
    43a0:	add	ip, ip, #64, 20	; 0x40000
    43a4:	ldr	pc, [ip, #3704]!	; 0xe78

000043a8 <readstat_get_variable@plt>:
    43a8:	add	ip, pc, #0, 12
    43ac:	add	ip, ip, #64, 20	; 0x40000
    43b0:	ldr	pc, [ip, #3696]!	; 0xe70

000043b4 <spss_alignment_to_readstat_alignment@plt>:
    43b4:	add	ip, pc, #0, 12
    43b8:	add	ip, ip, #64, 20	; 0x40000
    43bc:	ldr	pc, [ip, #3688]!	; 0xe68

000043c0 <por_utf8_decode@plt>:
    43c0:	add	ip, pc, #0, 12
    43c4:	add	ip, ip, #64, 20	; 0x40000
    43c8:	ldr	pc, [ip, #3680]!	; 0xe60

000043cc <sas_read_header@plt>:
    43cc:	add	ip, pc, #0, 12
    43d0:	add	ip, ip, #64, 20	; 0x40000
    43d4:	ldr	pc, [ip, #3672]!	; 0xe58

000043d8 <spss_measure_to_readstat_measure@plt>:
    43d8:	add	ip, pc, #0, 12
    43dc:	add	ip, ip, #64, 20	; 0x40000
    43e0:	ldr	pc, [ip, #3664]!	; 0xe50

000043e4 <sas_subheader_remainder@plt>:
    43e4:	add	ip, pc, #0, 12
    43e8:	add	ip, ip, #64, 20	; 0x40000
    43ec:	ldr	pc, [ip, #3656]!	; 0xe48

000043f0 <sas_read8@plt>:
    43f0:	add	ip, pc, #0, 12
    43f4:	add	ip, ip, #64, 20	; 0x40000
    43f8:	ldr	pc, [ip, #3648]!	; 0xe40

000043fc <sas_read2@plt>:
    43fc:	add	ip, pc, #0, 12
    4400:	add	ip, ip, #64, 20	; 0x40000
    4404:	ldr	pc, [ip, #3640]!	; 0xe38

00004408 <readstat_copy_lower@plt>:
    4408:	add	ip, pc, #0, 12
    440c:	add	ip, ip, #64, 20	; 0x40000
    4410:	ldr	pc, [ip, #3632]!	; 0xe30

00004414 <sprintf@plt>:
    4414:	add	ip, pc, #0, 12
    4418:	add	ip, ip, #64, 20	; 0x40000
    441c:	ldr	pc, [ip, #3624]!	; 0xe28

00004420 <sas_read4@plt>:
    4420:	add	ip, pc, #0, 12
    4424:	add	ip, ip, #64, 20	; 0x40000
    4428:	ldr	pc, [ip, #3616]!	; 0xe20

0000442c <readstat_variable_get_label@plt>:
    442c:	add	ip, pc, #0, 12
    4430:	add	ip, ip, #64, 20	; 0x40000
    4434:	ldr	pc, [ip, #3608]!	; 0xe18

00004438 <spss_format@plt>:
    4438:	add	ip, pc, #0, 12
    443c:	add	ip, ip, #64, 20	; 0x40000
    4440:	ldr	pc, [ip, #3600]!	; 0xe10

00004444 <spss_varinfo_free@plt>:
    4444:	add	ip, pc, #0, 12
    4448:	add	ip, ip, #64, 20	; 0x40000
    444c:	ldr	pc, [ip, #3592]!	; 0xe08

00004450 <readstat_get_label_set@plt>:
    4450:	add	ip, pc, #0, 12
    4454:	add	ip, ip, #64, 20	; 0x40000
    4458:	ldr	pc, [ip, #3584]!	; 0xe00

0000445c <readstat_variable_get_alignment@plt>:
    445c:	add	ip, pc, #0, 12
    4460:	add	ip, ip, #64, 20	; 0x40000
    4464:	ldr	pc, [ip, #3576]!	; 0xdf8

00004468 <qsort@plt>:
    4468:	add	ip, pc, #0, 12
    446c:	add	ip, ip, #64, 20	; 0x40000
    4470:	ldr	pc, [ip, #3568]!	; 0xdf0

00004474 <readstat_get_label_set_variable@plt>:
    4474:	add	ip, pc, #0, 12
    4478:	add	ip, ip, #64, 20	; 0x40000
    447c:	ldr	pc, [ip, #3560]!	; 0xde8

00004480 <readstat_write_bytes@plt>:
    4480:	add	ip, pc, #0, 12
    4484:	add	ip, ip, #64, 20	; 0x40000
    4488:	ldr	pc, [ip, #3552]!	; 0xde0

0000448c <sav_compress_row@plt>:
    448c:	add	ip, pc, #0, 12
    4490:	add	ip, ip, #64, 20	; 0x40000
    4494:	ldr	pc, [ip, #3544]!	; 0xdd8

00004498 <readstat_set_close_handler@plt>:
    4498:	add	ip, pc, #0, 12
    449c:	add	ip, ip, #64, 20	; 0x40000
    44a0:	ldr	pc, [ip, #3536]!	; 0xdd0

000044a4 <sas_fill_page@plt>:
    44a4:	add	ip, pc, #0, 12
    44a8:	add	ip, ip, #64, 20	; 0x40000
    44ac:	ldr	pc, [ip, #3528]!	; 0xdc8

000044b0 <sas_rle_compressed_len@plt>:
    44b0:	add	ip, pc, #0, 12
    44b4:	add	ip, ip, #64, 20	; 0x40000
    44b8:	ldr	pc, [ip, #3520]!	; 0xdc0

000044bc <por_ctx_init@plt>:
    44bc:	add	ip, pc, #0, 12
    44c0:	add	ip, ip, #64, 20	; 0x40000
    44c4:	ldr	pc, [ip, #3512]!	; 0xdb8

000044c8 <readstat_validate_variable@plt>:
    44c8:	add	ip, pc, #0, 12
    44cc:	add	ip, ip, #64, 20	; 0x40000
    44d0:	ldr	pc, [ip, #3504]!	; 0xdb0

000044d4 <sas_assign_tag@plt>:
    44d4:	add	ip, pc, #0, 12
    44d8:	add	ip, ip, #64, 20	; 0x40000
    44dc:	ldr	pc, [ip, #3496]!	; 0xda8

000044e0 <zsav_compress_row@plt>:
    44e0:	add	ip, pc, #0, 12
    44e4:	add	ip, ip, #64, 20	; 0x40000
    44e8:	ldr	pc, [ip, #3488]!	; 0xda0

000044ec <zsav_read_compressed_data@plt>:
    44ec:	add	ip, pc, #0, 12
    44f0:	add	ip, ip, #64, 20	; 0x40000
    44f4:	ldr	pc, [ip, #3480]!	; 0xd98

000044f8 <readstat_get_value_label@plt>:
    44f8:	add	ip, pc, #0, 12
    44fc:	add	ip, ip, #64, 20	; 0x40000
    4500:	ldr	pc, [ip, #3472]!	; 0xd90

00004504 <sas_rle_compress@plt>:
    4504:	add	ip, pc, #0, 12
    4508:	add	ip, ip, #64, 20	; 0x40000
    450c:	ldr	pc, [ip, #3464]!	; 0xd88

00004510 <readstat_write_line_padding@plt>:
    4510:	add	ip, pc, #0, 12
    4514:	add	ip, ip, #64, 20	; 0x40000
    4518:	ldr	pc, [ip, #3456]!	; 0xd80

0000451c <ck_str_hash_insert@plt>:
    451c:	add	ip, pc, #0, 12
    4520:	add	ip, ip, #64, 20	; 0x40000
    4524:	ldr	pc, [ip, #3448]!	; 0xd78

00004528 <strncmp@plt>:
    4528:	add	ip, pc, #0, 12
    452c:	add	ip, ip, #64, 20	; 0x40000
    4530:	ldr	pc, [ip, #3440]!	; 0xd70

00004534 <byteswap_double@plt>:
    4534:	add	ip, pc, #0, 12
    4538:	add	ip, ip, #64, 20	; 0x40000
    453c:	ldr	pc, [ip, #3432]!	; 0xd68

00004540 <close@plt>:
    4540:	add	ip, pc, #0, 12
    4544:	add	ip, ip, #64, 20	; 0x40000
    4548:	ldr	pc, [ip, #3424]!	; 0xd60

0000454c <readstat_write_bytes_as_lines@plt>:
    454c:	add	ip, pc, #0, 12
    4550:	add	ip, ip, #64, 20	; 0x40000
    4554:	ldr	pc, [ip, #3416]!	; 0xd58

00004558 <spss_missingness_for_info@plt>:
    4558:	add	ip, pc, #0, 12
    455c:	add	ip, ip, #64, 20	; 0x40000
    4560:	ldr	pc, [ip, #3408]!	; 0xd50

00004564 <handle_variables@plt>:
    4564:	add	ip, pc, #0, 12
    4568:	add	ip, ip, #64, 20	; 0x40000
    456c:	ldr	pc, [ip, #3400]!	; 0xd48

00004570 <readstat_variable_get_type_class@plt>:
    4570:	add	ip, pc, #0, 12
    4574:	add	ip, ip, #64, 20	; 0x40000
    4578:	ldr	pc, [ip, #3392]!	; 0xd40

0000457c <readstat_write_space_padded_string@plt>:
    457c:	add	ip, pc, #0, 12
    4580:	add	ip, ip, #64, 20	; 0x40000
    4584:	ldr	pc, [ip, #3384]!	; 0xd38

00004588 <dta_ctx_alloc@plt>:
    4588:	add	ip, pc, #0, 12
    458c:	add	ip, ip, #64, 20	; 0x40000
    4590:	ldr	pc, [ip, #3376]!	; 0xd30

Disassembly of section .text:

00004598 <call_weak_fn>:
    4598:	ldr	r3, [pc, #20]	; 45b4 <call_weak_fn+0x1c>
    459c:	ldr	r2, [pc, #20]	; 45b8 <call_weak_fn+0x20>
    45a0:	add	r3, pc, r3
    45a4:	ldr	r2, [r3, r2]
    45a8:	cmp	r2, #0
    45ac:	bxeq	lr
    45b0:	b	41c8 <__gmon_start__@plt>
    45b4:	.word	0x00040a58
    45b8:	.word	0x000002e8

000045bc <deregister_tm_clones>:
    45bc:	ldr	r3, [pc, #52]	; 45f8 <deregister_tm_clones+0x3c>
    45c0:	ldr	r0, [pc, #52]	; 45fc <deregister_tm_clones+0x40>
    45c4:	add	r3, pc, r3
    45c8:	add	r0, pc, r0
    45cc:	add	r3, r3, #3
    45d0:	sub	r3, r3, r0
    45d4:	cmp	r3, #6
    45d8:	ldr	r3, [pc, #32]	; 4600 <deregister_tm_clones+0x44>
    45dc:	add	r3, pc, r3
    45e0:	bxls	lr
    45e4:	ldr	r2, [pc, #24]	; 4604 <deregister_tm_clones+0x48>
    45e8:	ldr	r3, [r3, r2]
    45ec:	cmp	r3, #0
    45f0:	bxeq	lr
    45f4:	bx	r3
    45f8:	.word	0x00042758
    45fc:	.word	0x00042754
    4600:	.word	0x00040a1c
    4604:	.word	0x000002d0

00004608 <register_tm_clones>:
    4608:	ldr	r1, [pc, #56]	; 4648 <register_tm_clones+0x40>
    460c:	ldr	r0, [pc, #56]	; 464c <register_tm_clones+0x44>
    4610:	add	r1, pc, r1
    4614:	add	r0, pc, r0
    4618:	sub	r1, r1, r0
    461c:	ldr	r3, [pc, #44]	; 4650 <register_tm_clones+0x48>
    4620:	asr	r1, r1, #2
    4624:	add	r3, pc, r3
    4628:	add	r1, r1, r1, lsr #31
    462c:	asrs	r1, r1, #1
    4630:	bxeq	lr
    4634:	ldr	r2, [pc, #24]	; 4654 <register_tm_clones+0x4c>
    4638:	ldr	r3, [r3, r2]
    463c:	cmp	r3, #0
    4640:	bxeq	lr
    4644:	bx	r3
    4648:	.word	0x0004270c
    464c:	.word	0x00042708
    4650:	.word	0x000409d4
    4654:	.word	0x00000314

00004658 <__do_global_dtors_aux>:
    4658:	ldr	r3, [pc, #76]	; 46ac <__do_global_dtors_aux+0x54>
    465c:	ldr	r2, [pc, #76]	; 46b0 <__do_global_dtors_aux+0x58>
    4660:	add	r3, pc, r3
    4664:	add	r2, pc, r2
    4668:	ldrb	r3, [r3]
    466c:	cmp	r3, #0
    4670:	bxne	lr
    4674:	ldr	r3, [pc, #56]	; 46b4 <__do_global_dtors_aux+0x5c>
    4678:	push	{r4, lr}
    467c:	ldr	r3, [r2, r3]
    4680:	cmp	r3, #0
    4684:	beq	4694 <__do_global_dtors_aux+0x3c>
    4688:	ldr	r3, [pc, #40]	; 46b8 <__do_global_dtors_aux+0x60>
    468c:	ldr	r0, [pc, r3]
    4690:	bl	3e2c <__cxa_finalize@plt>
    4694:	bl	45bc <deregister_tm_clones>
    4698:	ldr	r3, [pc, #28]	; 46bc <__do_global_dtors_aux+0x64>
    469c:	mov	r2, #1
    46a0:	add	r3, pc, r3
    46a4:	strb	r2, [r3]
    46a8:	pop	{r4, pc}
    46ac:	.word	0x000426bc
    46b0:	.word	0x00040994
    46b4:	.word	0x000002cc
    46b8:	.word	0x00040c84
    46bc:	.word	0x0004267c

000046c0 <frame_dummy>:
    46c0:	ldr	r0, [pc, #56]	; 4700 <frame_dummy+0x40>
    46c4:	ldr	r3, [pc, #56]	; 4704 <frame_dummy+0x44>
    46c8:	add	r0, pc, r0
    46cc:	ldr	r2, [r0]
    46d0:	add	r3, pc, r3
    46d4:	cmp	r2, #0
    46d8:	bne	46e0 <frame_dummy+0x20>
    46dc:	b	4608 <register_tm_clones>
    46e0:	ldr	r2, [pc, #32]	; 4708 <frame_dummy+0x48>
    46e4:	ldr	r3, [r3, r2]
    46e8:	cmp	r3, #0
    46ec:	beq	46dc <frame_dummy+0x1c>
    46f0:	push	{r4, lr}
    46f4:	blx	r3
    46f8:	pop	{r4, lr}
    46fc:	b	4608 <register_tm_clones>
    4700:	.word	0x00040834
    4704:	.word	0x00040928
    4708:	.word	0x00000308
    470c:	.word	0x00000000

00004710 <ck_hash_str>:
    4710:	ldrb	r2, [r0]
    4714:	cmp	r2, #0
    4718:	beq	4764 <ck_hash_str+0x54>
    471c:	push	{r4, r5}
    4720:	add	ip, r0, #1
    4724:	ldr	r0, [pc, #68]	; 4770 <ck_hash_str+0x60>
    4728:	mov	r1, #0
    472c:	lsl	r5, r1, #5
    4730:	orr	r5, r5, r0, lsr #27
    4734:	lsl	r4, r0, #5
    4738:	uxtb	r2, r2
    473c:	mov	r3, #0
    4740:	adds	r2, r2, r4
    4744:	adc	r3, r3, r5
    4748:	adds	r0, r0, r2
    474c:	adc	r1, r1, r3
    4750:	ldrb	r2, [ip], #1
    4754:	cmp	r2, #0
    4758:	bne	472c <ck_hash_str+0x1c>
    475c:	pop	{r4, r5}
    4760:	bx	lr
    4764:	ldr	r0, [pc, #4]	; 4770 <ck_hash_str+0x60>
    4768:	mov	r1, #0
    476c:	bx	lr
    4770:	.word	0x00001505

00004774 <ck_str_n_hash_lookup>:
    4774:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4778:	sub	sp, sp, #12
    477c:	ldrd	r4, [r2, #8]
    4780:	orrs	r3, r4, r5
    4784:	beq	48c4 <ck_str_n_hash_lookup+0x150>
    4788:	sub	r3, r1, #1
    478c:	cmp	r3, #126	; 0x7e
    4790:	bhi	48cc <ck_str_n_hash_lookup+0x158>
    4794:	add	ip, r0, #1
    4798:	ldrb	r3, [r0]
    479c:	cmp	r3, #0
    47a0:	beq	48ac <ck_str_n_hash_lookup+0x138>
    47a4:	ldr	r4, [pc, #320]	; 48ec <ck_str_n_hash_lookup+0x178>
    47a8:	mov	r5, #0
    47ac:	lsl	r7, r5, #5
    47b0:	orr	r7, r7, r4, lsr #27
    47b4:	lsl	r6, r4, #5
    47b8:	uxtb	r8, r3
    47bc:	mov	r9, #0
    47c0:	adds	r8, r8, r6
    47c4:	adc	r9, r9, r7
    47c8:	adds	r4, r4, r8
    47cc:	adc	r5, r5, r9
    47d0:	ldrb	r3, [ip], #1
    47d4:	cmp	r3, #0
    47d8:	bne	47ac <ck_str_n_hash_lookup+0x38>
    47dc:	mov	r6, r2
    47e0:	mov	sl, r1
    47e4:	mov	fp, r0
    47e8:	ldrd	r2, [r2]
    47ec:	mov	r8, r2
    47f0:	mov	r9, r3
    47f4:	strd	r8, [sp]
    47f8:	mov	r0, r4
    47fc:	mov	r1, r5
    4800:	bl	24680 <__aeabi_uldivmod>
    4804:	mov	r4, r2
    4808:	mov	r5, r3
    480c:	mov	r2, r8
    4810:	mov	r3, r9
    4814:	subs	r0, r4, #1
    4818:	sbc	r1, r5, #0
    481c:	bl	24680 <__aeabi_uldivmod>
    4820:	mov	r8, r2
    4824:	mov	r9, r3
    4828:	cmp	r5, r3
    482c:	cmpeq	r4, r2
    4830:	beq	48d4 <ck_str_n_hash_lookup+0x160>
    4834:	ldr	r6, [r6, #16]
    4838:	add	r3, r4, r4, lsl #5
    483c:	lsl	r3, r3, #2
    4840:	add	r7, r6, r3
    4844:	ldrb	r3, [r6, r3]
    4848:	cmp	r3, #0
    484c:	beq	48dc <ck_str_n_hash_lookup+0x168>
    4850:	add	sl, sl, #1
    4854:	mov	r2, sl
    4858:	mov	r1, fp
    485c:	mov	r0, r7
    4860:	bl	4528 <strncmp@plt>
    4864:	cmp	r0, #0
    4868:	beq	48b8 <ck_str_n_hash_lookup+0x144>
    486c:	ldrd	r2, [sp]
    4870:	adds	r0, r4, #1
    4874:	adc	r1, r5, #0
    4878:	bl	24680 <__aeabi_uldivmod>
    487c:	mov	r4, r2
    4880:	mov	r5, r3
    4884:	cmp	r9, r3
    4888:	cmpeq	r8, r2
    488c:	beq	48e4 <ck_str_n_hash_lookup+0x170>
    4890:	add	r3, r2, r2, lsl #5
    4894:	add	r7, r6, r3, lsl #2
    4898:	ldrb	r3, [r6, r3, lsl #2]
    489c:	cmp	r3, #0
    48a0:	bne	4854 <ck_str_n_hash_lookup+0xe0>
    48a4:	mov	r0, #0
    48a8:	b	48bc <ck_str_n_hash_lookup+0x148>
    48ac:	ldr	r4, [pc, #56]	; 48ec <ck_str_n_hash_lookup+0x178>
    48b0:	mov	r5, #0
    48b4:	b	47dc <ck_str_n_hash_lookup+0x68>
    48b8:	ldr	r0, [r7, #128]	; 0x80
    48bc:	add	sp, sp, #12
    48c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    48c4:	mov	r0, #0
    48c8:	b	48bc <ck_str_n_hash_lookup+0x148>
    48cc:	mov	r0, #0
    48d0:	b	48bc <ck_str_n_hash_lookup+0x148>
    48d4:	mov	r0, #0
    48d8:	b	48bc <ck_str_n_hash_lookup+0x148>
    48dc:	mov	r0, #0
    48e0:	b	48bc <ck_str_n_hash_lookup+0x148>
    48e4:	mov	r0, #0
    48e8:	b	48bc <ck_str_n_hash_lookup+0x148>
    48ec:	.word	0x00001505

000048f0 <ck_float_hash_lookup>:
    48f0:	push	{r4, lr}
    48f4:	sub	sp, sp, #8
    48f8:	vmov	r3, s0
    48fc:	lsr	r2, r3, #8
    4900:	lsr	lr, r3, #16
    4904:	uxtb	r1, r3
    4908:	uxtb	r2, r2
    490c:	uxtb	lr, lr
    4910:	lsr	ip, r3, #24
    4914:	and	r3, r1, #1
    4918:	and	r4, r2, #2
    491c:	orr	r3, r3, r4
    4920:	mvn	r3, r3, lsl #28
    4924:	mvn	r3, r3, lsr #28
    4928:	and	r4, lr, #4
    492c:	orr	r3, r3, r4
    4930:	and	r4, ip, #8
    4934:	orr	r3, r3, r4
    4938:	strb	r3, [sp, #4]
    493c:	orr	r1, r1, #1
    4940:	strb	r1, [sp]
    4944:	orr	r2, r2, #2
    4948:	strb	r2, [sp, #1]
    494c:	orr	r2, lr, #4
    4950:	strb	r2, [sp, #2]
    4954:	orr	r3, ip, #8
    4958:	strb	r3, [sp, #3]
    495c:	mov	r3, #0
    4960:	strb	r3, [sp, #5]
    4964:	mov	r2, r0
    4968:	mov	r1, #5
    496c:	mov	r0, sp
    4970:	bl	4084 <ck_str_n_hash_lookup@plt>
    4974:	add	sp, sp, #8
    4978:	pop	{r4, pc}

0000497c <ck_double_hash_lookup>:
    497c:	push	{r4, r5, r6, lr}
    4980:	sub	sp, sp, #24
    4984:	mov	r2, r0
    4988:	vstr	d0, [sp]
    498c:	ldm	sp, {r0, r1}
    4990:	add	ip, sp, #12
    4994:	stm	ip, {r0, r1}
    4998:	ldrb	r4, [sp, #12]
    499c:	ldrb	lr, [sp, #13]
    49a0:	ldrb	r3, [sp, #14]
    49a4:	ldrb	r0, [sp, #15]
    49a8:	and	r1, r4, #1
    49ac:	and	r5, lr, #2
    49b0:	orr	r1, r1, r5
    49b4:	mvn	r5, #15
    49b8:	orr	r1, r1, r5
    49bc:	and	r6, r3, #4
    49c0:	orr	r1, r1, r6
    49c4:	and	r6, r0, #8
    49c8:	orr	r1, r1, r6
    49cc:	strb	r1, [sp, #20]
    49d0:	orr	r4, r4, #1
    49d4:	strb	r4, [sp, #12]
    49d8:	orr	lr, lr, #2
    49dc:	strb	lr, [sp, #13]
    49e0:	orr	r3, r3, #4
    49e4:	strb	r3, [sp, #14]
    49e8:	orr	r0, r0, #8
    49ec:	strb	r0, [sp, #15]
    49f0:	ldrb	r4, [sp, #16]
    49f4:	ldrb	lr, [sp, #17]
    49f8:	ldrb	r0, [sp, #18]
    49fc:	ldrb	r1, [sp, #19]
    4a00:	and	r3, r4, #1
    4a04:	and	r6, lr, #2
    4a08:	orr	r3, r3, r6
    4a0c:	orr	r3, r3, r5
    4a10:	and	r5, r0, #4
    4a14:	orr	r3, r3, r5
    4a18:	and	r5, r1, #8
    4a1c:	orr	r3, r3, r5
    4a20:	strb	r3, [sp, #21]
    4a24:	orr	r4, r4, #1
    4a28:	strb	r4, [sp, #16]
    4a2c:	orr	lr, lr, #2
    4a30:	strb	lr, [sp, #17]
    4a34:	orr	r0, r0, #4
    4a38:	strb	r0, [sp, #18]
    4a3c:	orr	r1, r1, #8
    4a40:	strb	r1, [sp, #19]
    4a44:	mov	r3, #0
    4a48:	strb	r3, [sp, #22]
    4a4c:	mov	r1, #10
    4a50:	mov	r0, ip
    4a54:	bl	4084 <ck_str_n_hash_lookup@plt>
    4a58:	add	sp, sp, #24
    4a5c:	pop	{r4, r5, r6, pc}

00004a60 <ck_str_hash_lookup>:
    4a60:	push	{r4, r5, r6, lr}
    4a64:	mov	r4, r0
    4a68:	mov	r5, r1
    4a6c:	bl	4228 <strlen@plt>
    4a70:	mov	r2, r5
    4a74:	cmp	r0, #127	; 0x7f
    4a78:	movcc	r1, r0
    4a7c:	movcs	r1, #127	; 0x7f
    4a80:	mov	r0, r4
    4a84:	bl	4084 <ck_str_n_hash_lookup@plt>
    4a88:	pop	{r4, r5, r6, pc}

00004a8c <ck_hash_table_free>:
    4a8c:	push	{r4, lr}
    4a90:	mov	r4, r0
    4a94:	ldr	r0, [r0, #16]
    4a98:	bl	3ee0 <free@plt>
    4a9c:	mov	r0, r4
    4aa0:	bl	3ee0 <free@plt>
    4aa4:	pop	{r4, pc}

00004aa8 <ck_hash_table_wipe>:
    4aa8:	push	{r4, lr}
    4aac:	ldr	r2, [r0]
    4ab0:	add	r2, r2, r2, lsl #5
    4ab4:	lsl	r2, r2, #2
    4ab8:	mov	r1, #0
    4abc:	ldr	r0, [r0, #16]
    4ac0:	bl	42d0 <memset@plt>
    4ac4:	pop	{r4, pc}

00004ac8 <ck_hash_table_init>:
    4ac8:	push	{r4, r5, r6, lr}
    4acc:	mov	r5, r0
    4ad0:	mov	r0, #24
    4ad4:	bl	4138 <malloc@plt>
    4ad8:	subs	r4, r0, #0
    4adc:	beq	4b1c <ck_hash_table_init+0x54>
    4ae0:	lsl	r6, r5, #1
    4ae4:	add	r0, r6, r5, lsl #6
    4ae8:	lsl	r0, r0, #2
    4aec:	bl	4138 <malloc@plt>
    4af0:	str	r0, [r4, #16]
    4af4:	cmp	r0, #0
    4af8:	beq	4b24 <ck_hash_table_init+0x5c>
    4afc:	str	r6, [r4]
    4b00:	mov	r3, #0
    4b04:	str	r3, [r4, #4]
    4b08:	mov	r2, #0
    4b0c:	mov	r3, #0
    4b10:	strd	r2, [r4, #8]
    4b14:	mov	r0, r4
    4b18:	bl	3e38 <ck_hash_table_wipe@plt>
    4b1c:	mov	r0, r4
    4b20:	pop	{r4, r5, r6, pc}
    4b24:	mov	r0, r4
    4b28:	bl	3ee0 <free@plt>
    4b2c:	mov	r4, #0
    4b30:	b	4b1c <ck_hash_table_init+0x54>

00004b34 <ck_hash_table_grow>:
    4b34:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    4b38:	mov	r8, r0
    4b3c:	ldr	r9, [r0, #16]
    4b40:	ldrd	r6, [r0]
    4b44:	adds	r4, r6, r6
    4b48:	adc	r5, r7, r7
    4b4c:	mov	r1, #132	; 0x84
    4b50:	mov	r0, r4
    4b54:	bl	3d78 <calloc@plt>
    4b58:	str	r0, [r8, #16]
    4b5c:	cmp	r0, #0
    4b60:	beq	4be4 <ck_hash_table_grow+0xb0>
    4b64:	str	r4, [r8]
    4b68:	str	r5, [r8, #4]
    4b6c:	mov	r2, #0
    4b70:	mov	r3, #0
    4b74:	strd	r2, [r8, #8]
    4b78:	orrs	r3, r6, r7
    4b7c:	beq	4bd4 <ck_hash_table_grow+0xa0>
    4b80:	mov	sl, r9
    4b84:	mov	r4, #0
    4b88:	mov	r5, #0
    4b8c:	b	4ba8 <ck_hash_table_grow+0x74>
    4b90:	add	sl, sl, #132	; 0x84
    4b94:	adds	r4, r4, #1
    4b98:	adc	r5, r5, #0
    4b9c:	cmp	r7, r5
    4ba0:	cmpeq	r6, r4
    4ba4:	beq	4bd4 <ck_hash_table_grow+0xa0>
    4ba8:	ldrb	r3, [sl]
    4bac:	cmp	r3, #0
    4bb0:	beq	4b90 <ck_hash_table_grow+0x5c>
    4bb4:	mov	r2, r8
    4bb8:	ldr	r1, [sl, #128]	; 0x80
    4bbc:	mov	r0, sl
    4bc0:	bl	451c <ck_str_hash_insert@plt>
    4bc4:	cmp	r0, #0
    4bc8:	bne	4b90 <ck_hash_table_grow+0x5c>
    4bcc:	mvn	r0, #0
    4bd0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    4bd4:	mov	r0, r9
    4bd8:	bl	3ee0 <free@plt>
    4bdc:	mov	r0, #0
    4be0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    4be4:	mvn	r0, #0
    4be8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00004bec <ck_str_n_hash_insert>:
    4bec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4bf0:	vpush	{d8}
    4bf4:	sub	sp, sp, #28
    4bf8:	ldrd	r8, [r3]
    4bfc:	orrs	ip, r8, r9
    4c00:	moveq	r0, #0
    4c04:	beq	4de8 <ck_str_n_hash_insert+0x1fc>
    4c08:	sub	ip, r1, #1
    4c0c:	cmp	ip, #126	; 0x7e
    4c10:	movhi	r0, #0
    4c14:	bhi	4de8 <ck_str_n_hash_insert+0x1fc>
    4c18:	mov	r6, r3
    4c1c:	str	r2, [sp, #20]
    4c20:	str	r1, [sp, #16]
    4c24:	mov	r7, r0
    4c28:	ldrd	r0, [r3, #8]
    4c2c:	bl	24538 <__aeabi_ul2d>
    4c30:	vmov	d8, r0, r1
    4c34:	mov	r0, r8
    4c38:	mov	r1, r9
    4c3c:	bl	24538 <__aeabi_ul2d>
    4c40:	vldr	d7, [pc, #448]	; 4e08 <ck_str_n_hash_insert+0x21c>
    4c44:	vmov	d6, r0, r1
    4c48:	vmul.f64	d7, d6, d7
    4c4c:	vcmpe.f64	d8, d7
    4c50:	vmrs	APSR_nzcv, fpscr
    4c54:	bge	4d04 <ck_str_n_hash_insert+0x118>
    4c58:	add	ip, r7, #1
    4c5c:	ldrb	r3, [r7]
    4c60:	cmp	r3, #0
    4c64:	beq	4d1c <ck_str_n_hash_insert+0x130>
    4c68:	ldr	r0, [pc, #416]	; 4e10 <ck_str_n_hash_insert+0x224>
    4c6c:	mov	r1, #0
    4c70:	mov	r2, r3
    4c74:	lsl	r5, r1, #5
    4c78:	orr	r5, r5, r0, lsr #27
    4c7c:	lsl	r4, r0, #5
    4c80:	uxtb	r2, r2
    4c84:	mov	r3, #0
    4c88:	adds	r2, r2, r4
    4c8c:	adc	r3, r3, r5
    4c90:	adds	r0, r0, r2
    4c94:	adc	r1, r1, r3
    4c98:	ldrb	r2, [ip], #1
    4c9c:	cmp	r2, #0
    4ca0:	bne	4c74 <ck_str_n_hash_insert+0x88>
    4ca4:	ldrd	r2, [r6]
    4ca8:	mov	r8, r2
    4cac:	mov	r9, r3
    4cb0:	strd	r8, [sp]
    4cb4:	bl	24680 <__aeabi_uldivmod>
    4cb8:	mov	r4, r2
    4cbc:	mov	r5, r3
    4cc0:	orrs	r3, r4, r5
    4cc4:	beq	4d28 <ck_str_n_hash_insert+0x13c>
    4cc8:	mov	r2, r8
    4ccc:	mov	r3, r9
    4cd0:	subs	r0, r4, #1
    4cd4:	sbc	r1, r5, #0
    4cd8:	bl	24680 <__aeabi_uldivmod>
    4cdc:	mov	r8, r2
    4ce0:	mov	r9, r3
    4ce4:	cmp	r9, r5
    4ce8:	cmpeq	r8, r4
    4cec:	beq	4dfc <ck_str_n_hash_insert+0x210>
    4cf0:	ldr	fp, [r6, #16]
    4cf4:	ldr	r3, [sp, #16]
    4cf8:	add	r3, r3, #1
    4cfc:	str	r3, [sp, #12]
    4d00:	b	4d74 <ck_str_n_hash_insert+0x188>
    4d04:	mov	r0, r6
    4d08:	bl	400c <ck_hash_table_grow@plt>
    4d0c:	cmn	r0, #1
    4d10:	moveq	r0, #0
    4d14:	bne	4c58 <ck_str_n_hash_insert+0x6c>
    4d18:	b	4de8 <ck_str_n_hash_insert+0x1fc>
    4d1c:	ldr	r0, [pc, #236]	; 4e10 <ck_str_n_hash_insert+0x224>
    4d20:	mov	r1, #0
    4d24:	b	4ca4 <ck_str_n_hash_insert+0xb8>
    4d28:	ldrd	r8, [sp]
    4d2c:	subs	r8, r8, #1
    4d30:	sbc	r9, r9, #0
    4d34:	b	4ce4 <ck_str_n_hash_insert+0xf8>
    4d38:	ldr	r2, [sp, #12]
    4d3c:	mov	r1, r7
    4d40:	mov	r0, sl
    4d44:	bl	4528 <strncmp@plt>
    4d48:	cmp	r0, #0
    4d4c:	beq	4dac <ck_str_n_hash_insert+0x1c0>
    4d50:	ldrd	r2, [sp]
    4d54:	adds	r0, r4, #1
    4d58:	adc	r1, r5, #0
    4d5c:	bl	24680 <__aeabi_uldivmod>
    4d60:	mov	r4, r2
    4d64:	mov	r5, r3
    4d68:	cmp	r9, r3
    4d6c:	cmpeq	r8, r2
    4d70:	beq	4df4 <ck_str_n_hash_insert+0x208>
    4d74:	add	r1, r4, r4, lsl #5
    4d78:	lsl	sl, r1, #2
    4d7c:	str	sl, [sp, #8]
    4d80:	add	sl, fp, sl
    4d84:	ldrb	r3, [fp, r1, lsl #2]
    4d88:	cmp	r3, #0
    4d8c:	bne	4d38 <ck_str_n_hash_insert+0x14c>
    4d90:	ldrd	r2, [r6, #8]
    4d94:	adds	r2, r2, #1
    4d98:	adc	r3, r3, #0
    4d9c:	strd	r2, [r6, #8]
    4da0:	ldrb	r3, [fp, r1, lsl #2]
    4da4:	cmp	r3, #0
    4da8:	bne	4d38 <ck_str_n_hash_insert+0x14c>
    4dac:	ldr	r4, [sp, #16]
    4db0:	mov	r2, r4
    4db4:	mov	r1, r7
    4db8:	mov	r0, sl
    4dbc:	bl	3f40 <memcpy@plt>
    4dc0:	ldr	r3, [r6, #16]
    4dc4:	ldr	r1, [sp, #8]
    4dc8:	add	r3, r3, r1
    4dcc:	mov	r2, #0
    4dd0:	strb	r2, [r3, r4]
    4dd4:	ldr	r3, [r6, #16]
    4dd8:	add	r3, r3, r1
    4ddc:	ldr	r2, [sp, #20]
    4de0:	str	r2, [r3, #128]	; 0x80
    4de4:	mov	r0, #1
    4de8:	add	sp, sp, #28
    4dec:	vpop	{d8}
    4df0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4df4:	mov	r0, #0
    4df8:	b	4de8 <ck_str_n_hash_insert+0x1fc>
    4dfc:	mov	r0, #0
    4e00:	b	4de8 <ck_str_n_hash_insert+0x1fc>
    4e04:	nop			; (mov r0, r0)
    4e08:	.word	0x00000000
    4e0c:	.word	0x3fe80000
    4e10:	.word	0x00001505

00004e14 <ck_float_hash_insert>:
    4e14:	push	{r4, r5, lr}
    4e18:	sub	sp, sp, #12
    4e1c:	vmov	r3, s0
    4e20:	lsr	r2, r3, #8
    4e24:	lsr	r4, r3, #16
    4e28:	uxtb	ip, r3
    4e2c:	uxtb	r2, r2
    4e30:	uxtb	r4, r4
    4e34:	lsr	lr, r3, #24
    4e38:	and	r3, ip, #1
    4e3c:	and	r5, r2, #2
    4e40:	orr	r3, r3, r5
    4e44:	mvn	r3, r3, lsl #28
    4e48:	mvn	r3, r3, lsr #28
    4e4c:	and	r5, r4, #4
    4e50:	orr	r3, r3, r5
    4e54:	and	r5, lr, #8
    4e58:	orr	r3, r3, r5
    4e5c:	strb	r3, [sp, #4]
    4e60:	orr	ip, ip, #1
    4e64:	strb	ip, [sp]
    4e68:	orr	r2, r2, #2
    4e6c:	strb	r2, [sp, #1]
    4e70:	orr	r2, r4, #4
    4e74:	strb	r2, [sp, #2]
    4e78:	orr	r3, lr, #8
    4e7c:	strb	r3, [sp, #3]
    4e80:	mov	r3, #0
    4e84:	strb	r3, [sp, #5]
    4e88:	mov	r3, r1
    4e8c:	mov	r2, r0
    4e90:	mov	r1, #5
    4e94:	mov	r0, sp
    4e98:	bl	42c4 <ck_str_n_hash_insert@plt>
    4e9c:	add	sp, sp, #12
    4ea0:	pop	{r4, r5, pc}

00004ea4 <ck_double_hash_insert>:
    4ea4:	push	{r4, r5, r6, r7, lr}
    4ea8:	sub	sp, sp, #28
    4eac:	mov	r2, r0
    4eb0:	mov	r3, r1
    4eb4:	vstr	d0, [sp]
    4eb8:	ldm	sp, {r0, r1}
    4ebc:	add	ip, sp, #12
    4ec0:	stm	ip, {r0, r1}
    4ec4:	ldrb	r5, [sp, #12]
    4ec8:	ldrb	r4, [sp, #13]
    4ecc:	ldrb	lr, [sp, #14]
    4ed0:	ldrb	r1, [sp, #15]
    4ed4:	and	r0, r5, #1
    4ed8:	and	r6, r4, #2
    4edc:	orr	r0, r0, r6
    4ee0:	mvn	r6, #15
    4ee4:	orr	r0, r0, r6
    4ee8:	and	r7, lr, #4
    4eec:	orr	r0, r0, r7
    4ef0:	and	r7, r1, #8
    4ef4:	orr	r0, r0, r7
    4ef8:	strb	r0, [sp, #20]
    4efc:	orr	r5, r5, #1
    4f00:	strb	r5, [sp, #12]
    4f04:	orr	r4, r4, #2
    4f08:	strb	r4, [sp, #13]
    4f0c:	orr	lr, lr, #4
    4f10:	strb	lr, [sp, #14]
    4f14:	orr	r1, r1, #8
    4f18:	strb	r1, [sp, #15]
    4f1c:	ldrb	r5, [sp, #16]
    4f20:	ldrb	r4, [sp, #17]
    4f24:	ldrb	lr, [sp, #18]
    4f28:	ldrb	r0, [sp, #19]
    4f2c:	and	r1, r5, #1
    4f30:	and	r7, r4, #2
    4f34:	orr	r1, r1, r7
    4f38:	orr	r1, r1, r6
    4f3c:	and	r6, lr, #4
    4f40:	orr	r1, r1, r6
    4f44:	and	r6, r0, #8
    4f48:	orr	r1, r1, r6
    4f4c:	strb	r1, [sp, #21]
    4f50:	orr	r5, r5, #1
    4f54:	strb	r5, [sp, #16]
    4f58:	orr	r4, r4, #2
    4f5c:	strb	r4, [sp, #17]
    4f60:	orr	lr, lr, #4
    4f64:	strb	lr, [sp, #18]
    4f68:	orr	r0, r0, #8
    4f6c:	strb	r0, [sp, #19]
    4f70:	mov	r1, #0
    4f74:	strb	r1, [sp, #22]
    4f78:	mov	r1, #10
    4f7c:	mov	r0, ip
    4f80:	bl	42c4 <ck_str_n_hash_insert@plt>
    4f84:	add	sp, sp, #28
    4f88:	pop	{r4, r5, r6, r7, pc}

00004f8c <ck_str_hash_insert>:
    4f8c:	push	{r4, r5, r6, lr}
    4f90:	mov	r4, r0
    4f94:	mov	r5, r1
    4f98:	mov	r6, r2
    4f9c:	bl	4228 <strlen@plt>
    4fa0:	mov	r3, r6
    4fa4:	mov	r2, r5
    4fa8:	cmp	r0, #127	; 0x7f
    4fac:	movcc	r1, r0
    4fb0:	movcs	r1, #127	; 0x7f
    4fb4:	mov	r0, r4
    4fb8:	bl	42c4 <ck_str_n_hash_insert@plt>
    4fbc:	pop	{r4, r5, r6, pc}

00004fc0 <machine_is_little_endian>:
    4fc0:	mov	r0, #1
    4fc4:	bx	lr

00004fc8 <ones_to_twos_complement1>:
    4fc8:	bx	lr

00004fcc <ones_to_twos_complement2>:
    4fcc:	cmp	r0, #0
    4fd0:	addlt	r0, r0, #1
    4fd4:	sxthlt	r0, r0
    4fd8:	bx	lr

00004fdc <ones_to_twos_complement4>:
    4fdc:	cmp	r0, #0
    4fe0:	addlt	r0, r0, #1
    4fe4:	bx	lr

00004fe8 <twos_to_ones_complement1>:
    4fe8:	bx	lr

00004fec <twos_to_ones_complement2>:
    4fec:	cmp	r0, #0
    4ff0:	sublt	r0, r0, #1
    4ff4:	sxthlt	r0, r0
    4ff8:	bx	lr

00004ffc <twos_to_ones_complement4>:
    4ffc:	cmp	r0, #0
    5000:	sublt	r0, r0, #1
    5004:	bx	lr

00005008 <byteswap2>:
    5008:	lsl	r3, r0, #8
    500c:	orr	r0, r3, r0, lsr #8
    5010:	uxth	r0, r0
    5014:	bx	lr

00005018 <byteswap4>:
    5018:	ror	r3, r0, #16
    501c:	lsr	r0, r3, #8
    5020:	bic	r0, r0, #65280	; 0xff00
    5024:	lsl	r3, r3, #8
    5028:	bic	r3, r3, #16711680	; 0xff0000
    502c:	orr	r0, r3, r0
    5030:	bx	lr

00005034 <byteswap8>:
    5034:	push	{r4, r5}
    5038:	lsr	r2, r1, #16
    503c:	orr	r2, r2, r0, lsl #16
    5040:	lsr	r3, r0, #16
    5044:	add	r5, pc, #116	; 0x74
    5048:	ldrd	r4, [r5]
    504c:	and	r2, r2, r4
    5050:	and	r3, r3, r5
    5054:	lsl	r5, r0, #16
    5058:	orr	r5, r5, r1, lsr #16
    505c:	lsl	r4, r1, #16
    5060:	add	r1, pc, #96	; 0x60
    5064:	ldrd	r0, [r1]
    5068:	and	r4, r4, r0
    506c:	and	r5, r5, r1
    5070:	orr	r2, r2, r4
    5074:	orr	r3, r3, r5
    5078:	lsr	r0, r2, #8
    507c:	orr	r0, r0, r3, lsl #24
    5080:	lsr	r1, r3, #8
    5084:	add	r5, pc, #68	; 0x44
    5088:	ldrd	r4, [r5]
    508c:	and	r0, r0, r4
    5090:	and	r1, r1, r5
    5094:	lsl	r5, r3, #8
    5098:	orr	r5, r5, r2, lsr #24
    509c:	lsl	r4, r2, #8
    50a0:	add	r3, pc, #48	; 0x30
    50a4:	ldrd	r2, [r3]
    50a8:	and	r4, r4, r2
    50ac:	and	r5, r5, r3
    50b0:	orr	r0, r0, r4
    50b4:	orr	r1, r1, r5
    50b8:	pop	{r4, r5}
    50bc:	bx	lr
    50c0:	.word	0x0000ffff
    50c4:	.word	0x0000ffff
    50c8:	.word	0xffff0000
    50cc:	.word	0xffff0000
    50d0:	.word	0x00ff00ff
    50d4:	.word	0x00ff00ff
    50d8:	.word	0xff00ff00
    50dc:	.word	0xff00ff00

000050e0 <byteswap_float>:
    50e0:	push	{r4, lr}
    50e4:	vmov	r0, s0
    50e8:	bl	3db4 <byteswap4@plt>
    50ec:	vmov	s0, r0
    50f0:	pop	{r4, pc}

000050f4 <byteswap_double>:
    50f4:	push	{r4, lr}
    50f8:	vmov	r0, r1, d0
    50fc:	bl	3d9c <byteswap8@plt>
    5100:	vmov	d0, r0, r1
    5104:	pop	{r4, pc}

00005108 <readstat_convert>:
    5108:	push	{r4, r5, r6, lr}
    510c:	sub	sp, sp, #24
    5110:	mov	r6, r0
    5114:	mov	r5, r1
    5118:	str	r2, [sp, #12]
    511c:	str	r3, [sp, #8]
    5120:	subs	r4, r3, #0
    5124:	beq	5170 <readstat_convert+0x68>
    5128:	sub	r3, r4, #1
    512c:	mov	r1, r2
    5130:	add	r2, r2, r3
    5134:	ldrb	r1, [r1, r3]
    5138:	cmp	r1, #32
    513c:	beq	5148 <readstat_convert+0x40>
    5140:	b	5170 <readstat_convert+0x68>
    5144:	mov	r3, r0
    5148:	str	r3, [sp, #8]
    514c:	cmp	r3, #0
    5150:	beq	516c <readstat_convert+0x64>
    5154:	sub	r0, r3, #1
    5158:	ldrb	r1, [r2, #-1]!
    515c:	cmp	r1, #32
    5160:	beq	5144 <readstat_convert+0x3c>
    5164:	mov	r4, r3
    5168:	b	5170 <readstat_convert+0x68>
    516c:	mov	r4, #0
    5170:	cmp	r5, #0
    5174:	moveq	r0, #19
    5178:	bne	5184 <readstat_convert+0x7c>
    517c:	add	sp, sp, #24
    5180:	pop	{r4, r5, r6, pc}
    5184:	ldr	r3, [sp, #40]	; 0x28
    5188:	cmp	r3, #0
    518c:	beq	5208 <readstat_convert+0x100>
    5190:	sub	r3, r5, #1
    5194:	str	r3, [sp, #16]
    5198:	add	r3, sp, #24
    519c:	str	r6, [r3, #-4]!
    51a0:	add	r2, sp, #16
    51a4:	str	r2, [sp]
    51a8:	add	r2, sp, #8
    51ac:	add	r1, sp, #12
    51b0:	ldr	r0, [sp, #40]	; 0x28
    51b4:	bl	3e08 <iconv@plt>
    51b8:	cmn	r0, #1
    51bc:	beq	51d8 <readstat_convert+0xd0>
    51c0:	ldr	r3, [sp, #16]
    51c4:	mvn	r3, r3
    51c8:	add	r5, r6, r5
    51cc:	mov	r0, #0
    51d0:	strb	r0, [r5, r3]
    51d4:	b	517c <readstat_convert+0x74>
    51d8:	bl	4294 <__errno_location@plt>
    51dc:	ldr	r3, [r0]
    51e0:	cmp	r3, #7
    51e4:	moveq	r0, #19
    51e8:	beq	517c <readstat_convert+0x74>
    51ec:	cmp	r3, #84	; 0x54
    51f0:	moveq	r0, #17
    51f4:	beq	517c <readstat_convert+0x74>
    51f8:	cmp	r3, #22
    51fc:	movne	r0, #16
    5200:	bne	517c <readstat_convert+0x74>
    5204:	b	51c0 <readstat_convert+0xb8>
    5208:	add	r3, r4, #1
    520c:	cmp	r5, r3
    5210:	movcc	r0, #19
    5214:	bcc	517c <readstat_convert+0x74>
    5218:	mov	r2, r4
    521c:	ldr	r1, [sp, #12]
    5220:	mov	r0, r6
    5224:	bl	3f40 <memcpy@plt>
    5228:	mov	r0, #0
    522c:	strb	r0, [r6, r4]
    5230:	b	517c <readstat_convert+0x74>

00005234 <readstat_error_message>:
    5234:	cmp	r0, #0
    5238:	beq	5380 <readstat_error_message+0x14c>
    523c:	cmp	r0, #1
    5240:	beq	5388 <readstat_error_message+0x154>
    5244:	cmp	r0, #2
    5248:	beq	5394 <readstat_error_message+0x160>
    524c:	cmp	r0, #3
    5250:	beq	53a0 <readstat_error_message+0x16c>
    5254:	cmp	r0, #4
    5258:	beq	53ac <readstat_error_message+0x178>
    525c:	cmp	r0, #5
    5260:	beq	53b8 <readstat_error_message+0x184>
    5264:	cmp	r0, #6
    5268:	beq	53c4 <readstat_error_message+0x190>
    526c:	cmp	r0, #7
    5270:	beq	53d0 <readstat_error_message+0x19c>
    5274:	cmp	r0, #8
    5278:	beq	53dc <readstat_error_message+0x1a8>
    527c:	cmp	r0, #9
    5280:	beq	53e8 <readstat_error_message+0x1b4>
    5284:	cmp	r0, #10
    5288:	beq	53f4 <readstat_error_message+0x1c0>
    528c:	cmp	r0, #11
    5290:	beq	5400 <readstat_error_message+0x1cc>
    5294:	cmp	r0, #12
    5298:	beq	540c <readstat_error_message+0x1d8>
    529c:	cmp	r0, #13
    52a0:	beq	5418 <readstat_error_message+0x1e4>
    52a4:	cmp	r0, #14
    52a8:	beq	5424 <readstat_error_message+0x1f0>
    52ac:	cmp	r0, #15
    52b0:	beq	5430 <readstat_error_message+0x1fc>
    52b4:	cmp	r0, #16
    52b8:	beq	543c <readstat_error_message+0x208>
    52bc:	cmp	r0, #17
    52c0:	beq	5448 <readstat_error_message+0x214>
    52c4:	cmp	r0, #18
    52c8:	beq	5454 <readstat_error_message+0x220>
    52cc:	cmp	r0, #19
    52d0:	beq	5460 <readstat_error_message+0x22c>
    52d4:	cmp	r0, #20
    52d8:	beq	546c <readstat_error_message+0x238>
    52dc:	cmp	r0, #21
    52e0:	beq	5478 <readstat_error_message+0x244>
    52e4:	cmp	r0, #22
    52e8:	beq	5484 <readstat_error_message+0x250>
    52ec:	cmp	r0, #23
    52f0:	beq	5490 <readstat_error_message+0x25c>
    52f4:	cmp	r0, #24
    52f8:	beq	549c <readstat_error_message+0x268>
    52fc:	cmp	r0, #25
    5300:	beq	54a8 <readstat_error_message+0x274>
    5304:	cmp	r0, #26
    5308:	beq	54b4 <readstat_error_message+0x280>
    530c:	cmp	r0, #27
    5310:	beq	54c0 <readstat_error_message+0x28c>
    5314:	cmp	r0, #28
    5318:	beq	54cc <readstat_error_message+0x298>
    531c:	cmp	r0, #38	; 0x26
    5320:	beq	54d8 <readstat_error_message+0x2a4>
    5324:	cmp	r0, #29
    5328:	beq	54e4 <readstat_error_message+0x2b0>
    532c:	cmp	r0, #30
    5330:	beq	54f0 <readstat_error_message+0x2bc>
    5334:	cmp	r0, #31
    5338:	beq	54fc <readstat_error_message+0x2c8>
    533c:	cmp	r0, #32
    5340:	beq	5508 <readstat_error_message+0x2d4>
    5344:	cmp	r0, #33	; 0x21
    5348:	beq	5514 <readstat_error_message+0x2e0>
    534c:	cmp	r0, #34	; 0x22
    5350:	beq	5520 <readstat_error_message+0x2ec>
    5354:	cmp	r0, #35	; 0x23
    5358:	beq	552c <readstat_error_message+0x2f8>
    535c:	cmp	r0, #36	; 0x24
    5360:	beq	5538 <readstat_error_message+0x304>
    5364:	cmp	r0, #37	; 0x25
    5368:	beq	5544 <readstat_error_message+0x310>
    536c:	cmp	r0, #39	; 0x27
    5370:	beq	5550 <readstat_error_message+0x31c>
    5374:	ldr	r0, [pc, #480]	; 555c <readstat_error_message+0x328>
    5378:	add	r0, pc, r0
    537c:	bx	lr
    5380:	mov	r0, #0
    5384:	bx	lr
    5388:	ldr	r0, [pc, #464]	; 5560 <readstat_error_message+0x32c>
    538c:	add	r0, pc, r0
    5390:	bx	lr
    5394:	ldr	r0, [pc, #456]	; 5564 <readstat_error_message+0x330>
    5398:	add	r0, pc, r0
    539c:	bx	lr
    53a0:	ldr	r0, [pc, #448]	; 5568 <readstat_error_message+0x334>
    53a4:	add	r0, pc, r0
    53a8:	bx	lr
    53ac:	ldr	r0, [pc, #440]	; 556c <readstat_error_message+0x338>
    53b0:	add	r0, pc, r0
    53b4:	bx	lr
    53b8:	ldr	r0, [pc, #432]	; 5570 <readstat_error_message+0x33c>
    53bc:	add	r0, pc, r0
    53c0:	bx	lr
    53c4:	ldr	r0, [pc, #424]	; 5574 <readstat_error_message+0x340>
    53c8:	add	r0, pc, r0
    53cc:	bx	lr
    53d0:	ldr	r0, [pc, #416]	; 5578 <readstat_error_message+0x344>
    53d4:	add	r0, pc, r0
    53d8:	bx	lr
    53dc:	ldr	r0, [pc, #408]	; 557c <readstat_error_message+0x348>
    53e0:	add	r0, pc, r0
    53e4:	bx	lr
    53e8:	ldr	r0, [pc, #400]	; 5580 <readstat_error_message+0x34c>
    53ec:	add	r0, pc, r0
    53f0:	bx	lr
    53f4:	ldr	r0, [pc, #392]	; 5584 <readstat_error_message+0x350>
    53f8:	add	r0, pc, r0
    53fc:	bx	lr
    5400:	ldr	r0, [pc, #384]	; 5588 <readstat_error_message+0x354>
    5404:	add	r0, pc, r0
    5408:	bx	lr
    540c:	ldr	r0, [pc, #376]	; 558c <readstat_error_message+0x358>
    5410:	add	r0, pc, r0
    5414:	bx	lr
    5418:	ldr	r0, [pc, #368]	; 5590 <readstat_error_message+0x35c>
    541c:	add	r0, pc, r0
    5420:	bx	lr
    5424:	ldr	r0, [pc, #360]	; 5594 <readstat_error_message+0x360>
    5428:	add	r0, pc, r0
    542c:	bx	lr
    5430:	ldr	r0, [pc, #352]	; 5598 <readstat_error_message+0x364>
    5434:	add	r0, pc, r0
    5438:	bx	lr
    543c:	ldr	r0, [pc, #344]	; 559c <readstat_error_message+0x368>
    5440:	add	r0, pc, r0
    5444:	bx	lr
    5448:	ldr	r0, [pc, #336]	; 55a0 <readstat_error_message+0x36c>
    544c:	add	r0, pc, r0
    5450:	bx	lr
    5454:	ldr	r0, [pc, #328]	; 55a4 <readstat_error_message+0x370>
    5458:	add	r0, pc, r0
    545c:	bx	lr
    5460:	ldr	r0, [pc, #320]	; 55a8 <readstat_error_message+0x374>
    5464:	add	r0, pc, r0
    5468:	bx	lr
    546c:	ldr	r0, [pc, #312]	; 55ac <readstat_error_message+0x378>
    5470:	add	r0, pc, r0
    5474:	bx	lr
    5478:	ldr	r0, [pc, #304]	; 55b0 <readstat_error_message+0x37c>
    547c:	add	r0, pc, r0
    5480:	bx	lr
    5484:	ldr	r0, [pc, #296]	; 55b4 <readstat_error_message+0x380>
    5488:	add	r0, pc, r0
    548c:	bx	lr
    5490:	ldr	r0, [pc, #288]	; 55b8 <readstat_error_message+0x384>
    5494:	add	r0, pc, r0
    5498:	bx	lr
    549c:	ldr	r0, [pc, #280]	; 55bc <readstat_error_message+0x388>
    54a0:	add	r0, pc, r0
    54a4:	bx	lr
    54a8:	ldr	r0, [pc, #272]	; 55c0 <readstat_error_message+0x38c>
    54ac:	add	r0, pc, r0
    54b0:	bx	lr
    54b4:	ldr	r0, [pc, #264]	; 55c4 <readstat_error_message+0x390>
    54b8:	add	r0, pc, r0
    54bc:	bx	lr
    54c0:	ldr	r0, [pc, #256]	; 55c8 <readstat_error_message+0x394>
    54c4:	add	r0, pc, r0
    54c8:	bx	lr
    54cc:	ldr	r0, [pc, #248]	; 55cc <readstat_error_message+0x398>
    54d0:	add	r0, pc, r0
    54d4:	bx	lr
    54d8:	ldr	r0, [pc, #240]	; 55d0 <readstat_error_message+0x39c>
    54dc:	add	r0, pc, r0
    54e0:	bx	lr
    54e4:	ldr	r0, [pc, #232]	; 55d4 <readstat_error_message+0x3a0>
    54e8:	add	r0, pc, r0
    54ec:	bx	lr
    54f0:	ldr	r0, [pc, #224]	; 55d8 <readstat_error_message+0x3a4>
    54f4:	add	r0, pc, r0
    54f8:	bx	lr
    54fc:	ldr	r0, [pc, #216]	; 55dc <readstat_error_message+0x3a8>
    5500:	add	r0, pc, r0
    5504:	bx	lr
    5508:	ldr	r0, [pc, #208]	; 55e0 <readstat_error_message+0x3ac>
    550c:	add	r0, pc, r0
    5510:	bx	lr
    5514:	ldr	r0, [pc, #200]	; 55e4 <readstat_error_message+0x3b0>
    5518:	add	r0, pc, r0
    551c:	bx	lr
    5520:	ldr	r0, [pc, #192]	; 55e8 <readstat_error_message+0x3b4>
    5524:	add	r0, pc, r0
    5528:	bx	lr
    552c:	ldr	r0, [pc, #184]	; 55ec <readstat_error_message+0x3b8>
    5530:	add	r0, pc, r0
    5534:	bx	lr
    5538:	ldr	r0, [pc, #176]	; 55f0 <readstat_error_message+0x3bc>
    553c:	add	r0, pc, r0
    5540:	bx	lr
    5544:	ldr	r0, [pc, #168]	; 55f4 <readstat_error_message+0x3c0>
    5548:	add	r0, pc, r0
    554c:	bx	lr
    5550:	ldr	r0, [pc, #160]	; 55f8 <readstat_error_message+0x3c4>
    5554:	add	r0, pc, r0
    5558:	bx	lr
    555c:	.word	0x0001fd3c
    5560:	.word	0x0001f4dc
    5564:	.word	0x0001f4e4
    5568:	.word	0x0001f4f4
    556c:	.word	0x0001f504
    5570:	.word	0x0001f534
    5574:	.word	0x0001f558
    5578:	.word	0x0001f574
    557c:	.word	0x0001f590
    5580:	.word	0x0001f5b8
    5584:	.word	0x0001f5e0
    5588:	.word	0x0001f604
    558c:	.word	0x0001f62c
    5590:	.word	0x0001f664
    5594:	.word	0x0001f670
    5598:	.word	0x0001f6d0
    559c:	.word	0x0001f6e0
    55a0:	.word	0x0001f708
    55a4:	.word	0x0001f748
    55a8:	.word	0x0001f78c
    55ac:	.word	0x0001f7d0
    55b0:	.word	0x0001f828
    55b4:	.word	0x0001f878
    55b8:	.word	0x0001f8c8
    55bc:	.word	0x0001f904
    55c0:	.word	0x0001f92c
    55c4:	.word	0x0001f954
    55c8:	.word	0x0001f978
    55cc:	.word	0x0001f990
    55d0:	.word	0x0001f9b4
    55d4:	.word	0x0001f9cc
    55d8:	.word	0x0001f9e8
    55dc:	.word	0x0001fa18
    55e0:	.word	0x0001fa4c
    55e4:	.word	0x0001fa74
    55e8:	.word	0x0001faac
    55ec:	.word	0x0001fad4
    55f0:	.word	0x0001faf8
    55f4:	.word	0x0001fb14
    55f8:	.word	0x0001fb38

000055fc <unistd_open_handler>:
    55fc:	push	{r4, lr}
    5600:	mov	r4, r1
    5604:	mov	r1, #0
    5608:	bl	41d4 <open@plt>
    560c:	str	r0, [r4]
    5610:	pop	{r4, pc}

00005614 <unistd_close_handler>:
    5614:	ldr	r0, [r0]
    5618:	cmn	r0, #1
    561c:	beq	562c <unistd_close_handler+0x18>
    5620:	push	{r4, lr}
    5624:	bl	4540 <close@plt>
    5628:	pop	{r4, pc}
    562c:	mov	r0, #0
    5630:	bx	lr

00005634 <unistd_seek_handler>:
    5634:	cmp	r1, #1
    5638:	beq	5650 <unistd_seek_handler+0x1c>
    563c:	bcc	5678 <unistd_seek_handler+0x44>
    5640:	cmp	r1, #2
    5644:	beq	5670 <unistd_seek_handler+0x3c>
    5648:	mvn	r0, #0
    564c:	bx	lr
    5650:	mov	ip, #1
    5654:	push	{r4, lr}
    5658:	mov	r3, r2
    565c:	mov	r1, r0
    5660:	mov	r2, ip
    5664:	ldr	r0, [r3]
    5668:	bl	3f94 <lseek@plt>
    566c:	pop	{r4, pc}
    5670:	mov	ip, #2
    5674:	b	5654 <unistd_seek_handler+0x20>
    5678:	mov	ip, #0
    567c:	b	5654 <unistd_seek_handler+0x20>

00005680 <unistd_update_handler>:
    5680:	push	{r4, r5, lr}
    5684:	sub	sp, sp, #12
    5688:	subs	r4, r1, #0
    568c:	moveq	r0, #0
    5690:	beq	56b8 <unistd_update_handler+0x38>
    5694:	mov	r5, r2
    5698:	str	r0, [sp, #4]
    569c:	mov	r2, #1
    56a0:	mov	r1, #0
    56a4:	ldr	r0, [r3]
    56a8:	bl	3f94 <lseek@plt>
    56ac:	cmn	r0, #1
    56b0:	moveq	r0, #15
    56b4:	bne	56c0 <unistd_update_handler+0x40>
    56b8:	add	sp, sp, #12
    56bc:	pop	{r4, r5, pc}
    56c0:	vmov	s15, r0
    56c4:	vcvt.f64.s32	d7, s15
    56c8:	vldr	s13, [sp, #4]
    56cc:	vcvt.f64.s32	d0, s13
    56d0:	mov	r0, r5
    56d4:	vdiv.f64	d0, d7, d0
    56d8:	blx	r4
    56dc:	cmp	r0, #0
    56e0:	movne	r0, #4
    56e4:	moveq	r0, #0
    56e8:	b	56b8 <unistd_update_handler+0x38>

000056ec <unistd_read_handler>:
    56ec:	push	{r4, lr}
    56f0:	ldr	r3, [r2]
    56f4:	mov	r2, r1
    56f8:	mov	r1, r0
    56fc:	mov	r0, r3
    5700:	bl	3e5c <read@plt>
    5704:	pop	{r4, pc}

00005708 <unistd_io_init>:
    5708:	push	{r4, r5, r6, lr}
    570c:	sub	sp, sp, #8
    5710:	mov	r6, r0
    5714:	ldr	r4, [pc, #220]	; 57f8 <unistd_io_init+0xf0>
    5718:	add	r4, pc, r4
    571c:	ldr	r3, [pc, #216]	; 57fc <unistd_io_init+0xf4>
    5720:	ldr	r3, [r4, r3]
    5724:	str	r3, [sp, #4]
    5728:	mov	r1, r3
    572c:	bl	3d90 <readstat_set_open_handler@plt>
    5730:	subs	r5, r0, #0
    5734:	beq	5744 <unistd_io_init+0x3c>
    5738:	mov	r0, r5
    573c:	add	sp, sp, #8
    5740:	pop	{r4, r5, r6, pc}
    5744:	ldr	r3, [pc, #180]	; 5800 <unistd_io_init+0xf8>
    5748:	ldr	r3, [r4, r3]
    574c:	str	r3, [sp, #4]
    5750:	mov	r1, r3
    5754:	mov	r0, r6
    5758:	bl	4498 <readstat_set_close_handler@plt>
    575c:	subs	r5, r0, #0
    5760:	bne	5738 <unistd_io_init+0x30>
    5764:	ldr	r3, [pc, #152]	; 5804 <unistd_io_init+0xfc>
    5768:	ldr	r3, [r4, r3]
    576c:	str	r3, [sp, #4]
    5770:	mov	r1, r3
    5774:	mov	r0, r6
    5778:	bl	3d84 <readstat_set_seek_handler@plt>
    577c:	subs	r5, r0, #0
    5780:	bne	5738 <unistd_io_init+0x30>
    5784:	ldr	r3, [pc, #124]	; 5808 <unistd_io_init+0x100>
    5788:	ldr	r3, [r4, r3]
    578c:	str	r3, [sp, #4]
    5790:	mov	r1, r3
    5794:	mov	r0, r6
    5798:	bl	4360 <readstat_set_read_handler@plt>
    579c:	subs	r5, r0, #0
    57a0:	bne	5738 <unistd_io_init+0x30>
    57a4:	ldr	r3, [pc, #96]	; 580c <unistd_io_init+0x104>
    57a8:	ldr	r3, [r4, r3]
    57ac:	str	r3, [sp, #4]
    57b0:	mov	r1, r3
    57b4:	mov	r0, r6
    57b8:	bl	3eb0 <readstat_set_update_handler@plt>
    57bc:	cmp	r0, #0
    57c0:	bne	5738 <unistd_io_init+0x30>
    57c4:	mov	r1, #4
    57c8:	mov	r0, #1
    57cc:	bl	3d78 <calloc@plt>
    57d0:	mov	r1, r0
    57d4:	mvn	r3, #0
    57d8:	str	r3, [r0]
    57dc:	mov	r0, r6
    57e0:	bl	4114 <readstat_set_io_ctx@plt>
    57e4:	mov	r5, r0
    57e8:	ldr	r3, [r6, #32]
    57ec:	mov	r2, #1
    57f0:	str	r2, [r3, #24]
    57f4:	b	5738 <unistd_io_init+0x30>
    57f8:	.word	0x0003f8e0
    57fc:	.word	0x000002e0
    5800:	.word	0x00000310
    5804:	.word	0x0000030c
    5808:	.word	0x000002c4
    580c:	.word	0x000002fc

00005810 <readstat_malloc>:
    5810:	sub	r2, r0, #1
    5814:	ldr	r3, [pc, #24]	; 5834 <readstat_malloc+0x24>
    5818:	cmp	r2, r3
    581c:	bhi	582c <readstat_malloc+0x1c>
    5820:	push	{r4, lr}
    5824:	bl	4138 <malloc@plt>
    5828:	pop	{r4, pc}
    582c:	mov	r0, #0
    5830:	bx	lr
    5834:	.word	0x00ffefff

00005838 <readstat_calloc>:
    5838:	mul	r2, r1, r0
    583c:	ldr	r3, [pc, #56]	; 587c <readstat_calloc+0x44>
    5840:	cmp	r2, r3
    5844:	bhi	586c <readstat_calloc+0x34>
    5848:	sub	r3, r0, #1
    584c:	ldr	r2, [pc, #44]	; 5880 <readstat_calloc+0x48>
    5850:	sub	ip, r1, #1
    5854:	cmp	ip, r2
    5858:	cmpls	r3, r2
    585c:	bhi	5874 <readstat_calloc+0x3c>
    5860:	push	{r4, lr}
    5864:	bl	3d78 <calloc@plt>
    5868:	pop	{r4, pc}
    586c:	mov	r0, #0
    5870:	bx	lr
    5874:	mov	r0, #0
    5878:	bx	lr
    587c:	.word	0x00fff000
    5880:	.word	0x00ffefff

00005884 <readstat_realloc>:
    5884:	push	{r4, lr}
    5888:	sub	r2, r1, #1
    588c:	ldr	r3, [pc, #32]	; 58b4 <readstat_realloc+0x30>
    5890:	cmp	r2, r3
    5894:	bls	58ac <readstat_realloc+0x28>
    5898:	cmp	r0, #0
    589c:	popeq	{r4, pc}
    58a0:	bl	3ee0 <free@plt>
    58a4:	mov	r0, #0
    58a8:	pop	{r4, pc}
    58ac:	bl	4018 <realloc@plt>
    58b0:	pop	{r4, pc}
    58b4:	.word	0x00ffefff

000058b8 <readstat_get_row_count>:
    58b8:	ldr	r0, [r0]
    58bc:	bx	lr

000058c0 <readstat_get_var_count>:
    58c0:	ldr	r0, [r0, #8]
    58c4:	bx	lr

000058c8 <readstat_get_creation_time>:
    58c8:	ldr	r0, [r0, #16]
    58cc:	bx	lr

000058d0 <readstat_get_modified_time>:
    58d0:	ldr	r0, [r0, #20]
    58d4:	bx	lr

000058d8 <readstat_get_file_format_version>:
    58d8:	ldr	r0, [r0, #24]
    58dc:	bx	lr

000058e0 <readstat_get_file_format_is_64bit>:
    58e0:	ldrb	r0, [r0, #52]	; 0x34
    58e4:	and	r0, r0, #1
    58e8:	bx	lr

000058ec <readstat_get_compression>:
    58ec:	ldr	r0, [r0, #32]
    58f0:	bx	lr

000058f4 <readstat_get_endianness>:
    58f4:	ldr	r0, [r0, #36]	; 0x24
    58f8:	bx	lr

000058fc <readstat_get_file_label>:
    58fc:	ldr	r0, [r0, #44]	; 0x2c
    5900:	bx	lr

00005904 <readstat_get_file_encoding>:
    5904:	ldr	r0, [r0, #48]	; 0x30
    5908:	bx	lr

0000590c <readstat_get_table_name>:
    590c:	ldr	r0, [r0, #40]	; 0x28
    5910:	bx	lr

00005914 <readstat_set_metadata_handler>:
    5914:	str	r1, [r0]
    5918:	mov	r0, #0
    591c:	bx	lr

00005920 <readstat_set_note_handler>:
    5920:	str	r1, [r0, #4]
    5924:	mov	r0, #0
    5928:	bx	lr

0000592c <readstat_set_variable_handler>:
    592c:	str	r1, [r0, #8]
    5930:	mov	r0, #0
    5934:	bx	lr

00005938 <readstat_set_value_handler>:
    5938:	str	r1, [r0, #16]
    593c:	mov	r0, #0
    5940:	bx	lr

00005944 <readstat_set_value_label_handler>:
    5944:	str	r1, [r0, #20]
    5948:	mov	r0, #0
    594c:	bx	lr

00005950 <readstat_set_error_handler>:
    5950:	str	r1, [r0, #24]
    5954:	mov	r0, #0
    5958:	bx	lr

0000595c <readstat_set_progress_handler>:
    595c:	str	r1, [r0, #28]
    5960:	mov	r0, #0
    5964:	bx	lr

00005968 <readstat_set_fweight_handler>:
    5968:	str	r1, [r0, #12]
    596c:	mov	r0, #0
    5970:	bx	lr

00005974 <readstat_set_open_handler>:
    5974:	ldr	r3, [r0, #32]
    5978:	str	r1, [r3]
    597c:	mov	r0, #0
    5980:	bx	lr

00005984 <readstat_set_close_handler>:
    5984:	ldr	r3, [r0, #32]
    5988:	str	r1, [r3, #4]
    598c:	mov	r0, #0
    5990:	bx	lr

00005994 <readstat_set_seek_handler>:
    5994:	ldr	r3, [r0, #32]
    5998:	str	r1, [r3, #8]
    599c:	mov	r0, #0
    59a0:	bx	lr

000059a4 <readstat_set_read_handler>:
    59a4:	ldr	r3, [r0, #32]
    59a8:	str	r1, [r3, #12]
    59ac:	mov	r0, #0
    59b0:	bx	lr

000059b4 <readstat_set_update_handler>:
    59b4:	ldr	r3, [r0, #32]
    59b8:	str	r1, [r3, #16]
    59bc:	mov	r0, #0
    59c0:	bx	lr

000059c4 <readstat_set_io_ctx>:
    59c4:	push	{r4, r5, r6, lr}
    59c8:	mov	r4, r0
    59cc:	mov	r5, r1
    59d0:	ldr	r3, [r0, #32]
    59d4:	ldr	r2, [r3, #24]
    59d8:	cmp	r2, #0
    59dc:	bne	59f8 <readstat_set_io_ctx+0x34>
    59e0:	ldr	r3, [r4, #32]
    59e4:	str	r5, [r3, #20]
    59e8:	ldr	r3, [r4, #32]
    59ec:	mov	r0, #0
    59f0:	str	r0, [r3, #24]
    59f4:	pop	{r4, r5, r6, pc}
    59f8:	ldr	r0, [r3, #20]
    59fc:	bl	3ee0 <free@plt>
    5a00:	b	59e0 <readstat_set_io_ctx+0x1c>

00005a04 <readstat_parser_free>:
    5a04:	push	{r4, lr}
    5a08:	subs	r4, r0, #0
    5a0c:	popeq	{r4, pc}
    5a10:	ldr	r3, [r4, #32]
    5a14:	cmp	r3, #0
    5a18:	beq	5a30 <readstat_parser_free+0x2c>
    5a1c:	mov	r1, #0
    5a20:	mov	r0, r4
    5a24:	bl	4114 <readstat_set_io_ctx@plt>
    5a28:	ldr	r0, [r4, #32]
    5a2c:	bl	3ee0 <free@plt>
    5a30:	mov	r0, r4
    5a34:	bl	3ee0 <free@plt>
    5a38:	pop	{r4, pc}

00005a3c <readstat_parser_init>:
    5a3c:	push	{r4, lr}
    5a40:	mov	r1, #52	; 0x34
    5a44:	mov	r0, #1
    5a48:	bl	3d78 <calloc@plt>
    5a4c:	mov	r4, r0
    5a50:	mov	r1, #28
    5a54:	mov	r0, #1
    5a58:	bl	3d78 <calloc@plt>
    5a5c:	str	r0, [r4, #32]
    5a60:	mov	r0, r4
    5a64:	bl	3fa0 <unistd_io_init@plt>
    5a68:	cmp	r0, #0
    5a6c:	bne	5a84 <readstat_parser_init+0x48>
    5a70:	ldr	r3, [pc, #28]	; 5a94 <readstat_parser_init+0x58>
    5a74:	add	r3, pc, r3
    5a78:	str	r3, [r4, #40]	; 0x28
    5a7c:	mov	r0, r4
    5a80:	pop	{r4, pc}
    5a84:	mov	r0, r4
    5a88:	bl	412c <readstat_parser_free@plt>
    5a8c:	mov	r4, #0
    5a90:	b	5a7c <readstat_parser_init+0x40>
    5a94:	.word	0x0001f650

00005a98 <readstat_set_file_character_encoding>:
    5a98:	str	r1, [r0, #36]	; 0x24
    5a9c:	mov	r0, #0
    5aa0:	bx	lr

00005aa4 <readstat_set_handler_character_encoding>:
    5aa4:	str	r1, [r0, #40]	; 0x28
    5aa8:	mov	r0, #0
    5aac:	bx	lr

00005ab0 <readstat_set_row_limit>:
    5ab0:	str	r1, [r0, #44]	; 0x2c
    5ab4:	mov	r0, #0
    5ab8:	bx	lr

00005abc <readstat_set_row_offset>:
    5abc:	str	r1, [r0, #48]	; 0x30
    5ac0:	mov	r0, #0
    5ac4:	bx	lr

00005ac8 <readstat_type_class>:
    5ac8:	cmp	r0, #6
    5acc:	cmpne	r0, #0
    5ad0:	moveq	r0, #1
    5ad4:	movne	r0, #0
    5ad8:	eor	r0, r0, #1
    5adc:	bx	lr

00005ae0 <readstat_value_type>:
    5ae0:	sub	sp, sp, #16
    5ae4:	add	ip, sp, #16
    5ae8:	stmdb	ip, {r0, r1, r2, r3}
    5aec:	ldr	r0, [sp, #8]
    5af0:	add	sp, sp, #16
    5af4:	bx	lr

00005af8 <readstat_value_type_class>:
    5af8:	push	{lr}		; (str lr, [sp, #-4]!)
    5afc:	sub	sp, sp, #20
    5b00:	add	ip, sp, #16
    5b04:	stmdb	ip, {r0, r1, r2, r3}
    5b08:	ldr	r0, [sp, #8]
    5b0c:	bl	3e44 <readstat_type_class@plt>
    5b10:	add	sp, sp, #20
    5b14:	pop	{pc}		; (ldr pc, [sp], #4)

00005b18 <readstat_value_tag>:
    5b18:	sub	sp, sp, #16
    5b1c:	add	ip, sp, #16
    5b20:	stmdb	ip, {r0, r1, r2, r3}
    5b24:	ldrb	r0, [sp, #12]
    5b28:	add	sp, sp, #16
    5b2c:	bx	lr

00005b30 <readstat_value_is_system_missing>:
    5b30:	sub	sp, sp, #16
    5b34:	add	ip, sp, #16
    5b38:	stmdb	ip, {r0, r1, r2, r3}
    5b3c:	ldrb	r0, [sp, #13]
    5b40:	and	r0, r0, #1
    5b44:	add	sp, sp, #16
    5b48:	bx	lr

00005b4c <readstat_value_is_tagged_missing>:
    5b4c:	sub	sp, sp, #16
    5b50:	add	ip, sp, #16
    5b54:	stmdb	ip, {r0, r1, r2, r3}
    5b58:	ldrb	r0, [sp, #13]
    5b5c:	lsr	r0, r0, #1
    5b60:	and	r0, r0, #1
    5b64:	add	sp, sp, #16
    5b68:	bx	lr

00005b6c <readstat_int8_value>:
    5b6c:	push	{r4, lr}
    5b70:	sub	sp, sp, #24
    5b74:	add	ip, sp, #8
    5b78:	stm	ip, {r0, r1, r2, r3}
    5b7c:	ldr	r4, [sp, #16]
    5b80:	ldm	ip, {r0, r1, r2, r3}
    5b84:	bl	3eec <readstat_value_is_system_missing@plt>
    5b88:	cmp	r0, #0
    5b8c:	movne	r0, #0
    5b90:	bne	5bc8 <readstat_int8_value+0x5c>
    5b94:	cmp	r4, #5
    5b98:	beq	5bd0 <readstat_int8_value+0x64>
    5b9c:	cmp	r4, #4
    5ba0:	beq	5be4 <readstat_int8_value+0x78>
    5ba4:	cmp	r4, #3
    5ba8:	ldrbeq	r0, [sp, #8]
    5bac:	beq	5bc8 <readstat_int8_value+0x5c>
    5bb0:	cmp	r4, #2
    5bb4:	ldrbeq	r0, [sp, #8]
    5bb8:	beq	5bc8 <readstat_int8_value+0x5c>
    5bbc:	cmp	r4, #1
    5bc0:	ldrbeq	r0, [sp, #8]
    5bc4:	movne	r0, #0
    5bc8:	add	sp, sp, #24
    5bcc:	pop	{r4, pc}
    5bd0:	vldr	d7, [sp, #8]
    5bd4:	vcvt.u32.f64	s15, d7
    5bd8:	vstr	s15, [sp, #4]
    5bdc:	ldrb	r0, [sp, #4]
    5be0:	b	5bc8 <readstat_int8_value+0x5c>
    5be4:	vldr	s15, [sp, #8]
    5be8:	vcvt.u32.f32	s15, s15
    5bec:	vstr	s15, [sp, #4]
    5bf0:	ldrb	r0, [sp, #4]
    5bf4:	b	5bc8 <readstat_int8_value+0x5c>

00005bf8 <readstat_int16_value>:
    5bf8:	push	{r4, lr}
    5bfc:	sub	sp, sp, #24
    5c00:	add	ip, sp, #8
    5c04:	stm	ip, {r0, r1, r2, r3}
    5c08:	ldr	r4, [sp, #16]
    5c0c:	ldm	ip, {r0, r1, r2, r3}
    5c10:	bl	3eec <readstat_value_is_system_missing@plt>
    5c14:	cmp	r0, #0
    5c18:	movne	r0, #0
    5c1c:	bne	5c54 <readstat_int16_value+0x5c>
    5c20:	cmp	r4, #5
    5c24:	beq	5c5c <readstat_int16_value+0x64>
    5c28:	cmp	r4, #4
    5c2c:	beq	5c70 <readstat_int16_value+0x78>
    5c30:	cmp	r4, #3
    5c34:	ldrsheq	r0, [sp, #8]
    5c38:	beq	5c54 <readstat_int16_value+0x5c>
    5c3c:	cmp	r4, #2
    5c40:	ldrsheq	r0, [sp, #8]
    5c44:	beq	5c54 <readstat_int16_value+0x5c>
    5c48:	cmp	r4, #1
    5c4c:	ldrsbeq	r0, [sp, #8]
    5c50:	movne	r0, #0
    5c54:	add	sp, sp, #24
    5c58:	pop	{r4, pc}
    5c5c:	vldr	d7, [sp, #8]
    5c60:	vcvt.s32.f64	s15, d7
    5c64:	vstr	s15, [sp, #4]
    5c68:	ldrsh	r0, [sp, #4]
    5c6c:	b	5c54 <readstat_int16_value+0x5c>
    5c70:	vldr	s15, [sp, #8]
    5c74:	vcvt.s32.f32	s15, s15
    5c78:	vstr	s15, [sp, #4]
    5c7c:	ldrsh	r0, [sp, #4]
    5c80:	b	5c54 <readstat_int16_value+0x5c>

00005c84 <readstat_int32_value>:
    5c84:	push	{r4, lr}
    5c88:	sub	sp, sp, #16
    5c8c:	stm	sp, {r0, r1, r2, r3}
    5c90:	mov	r4, r2
    5c94:	ldm	sp, {r0, r1, r2, r3}
    5c98:	bl	3eec <readstat_value_is_system_missing@plt>
    5c9c:	cmp	r0, #0
    5ca0:	movne	r0, #0
    5ca4:	bne	5cdc <readstat_int32_value+0x58>
    5ca8:	cmp	r4, #5
    5cac:	beq	5ce4 <readstat_int32_value+0x60>
    5cb0:	cmp	r4, #4
    5cb4:	beq	5cf4 <readstat_int32_value+0x70>
    5cb8:	cmp	r4, #3
    5cbc:	ldreq	r0, [sp]
    5cc0:	beq	5cdc <readstat_int32_value+0x58>
    5cc4:	cmp	r4, #2
    5cc8:	ldrsheq	r0, [sp]
    5ccc:	beq	5cdc <readstat_int32_value+0x58>
    5cd0:	cmp	r4, #1
    5cd4:	ldrsbeq	r0, [sp]
    5cd8:	movne	r0, #0
    5cdc:	add	sp, sp, #16
    5ce0:	pop	{r4, pc}
    5ce4:	vldr	d7, [sp]
    5ce8:	vcvt.s32.f64	s15, d7
    5cec:	vmov	r0, s15
    5cf0:	b	5cdc <readstat_int32_value+0x58>
    5cf4:	vldr	s15, [sp]
    5cf8:	vcvt.s32.f32	s15, s15
    5cfc:	vmov	r0, s15
    5d00:	b	5cdc <readstat_int32_value+0x58>

00005d04 <readstat_float_value>:
    5d04:	push	{r4, lr}
    5d08:	sub	sp, sp, #16
    5d0c:	stm	sp, {r0, r1, r2, r3}
    5d10:	mov	r4, r2
    5d14:	ldm	sp, {r0, r1, r2, r3}
    5d18:	bl	3eec <readstat_value_is_system_missing@plt>
    5d1c:	cmp	r0, #0
    5d20:	bne	5d88 <readstat_float_value+0x84>
    5d24:	cmp	r4, #5
    5d28:	beq	5d60 <readstat_float_value+0x5c>
    5d2c:	cmp	r4, #4
    5d30:	vldreq	s0, [sp]
    5d34:	beq	5d8c <readstat_float_value+0x88>
    5d38:	cmp	r4, #3
    5d3c:	beq	5d6c <readstat_float_value+0x68>
    5d40:	cmp	r4, #2
    5d44:	beq	5d78 <readstat_float_value+0x74>
    5d48:	cmp	r4, #1
    5d4c:	ldrsbeq	r3, [sp]
    5d50:	vmoveq	s0, r3
    5d54:	vcvteq.f32.s32	s0, s0
    5d58:	vldrne	s0, [sp]
    5d5c:	b	5d8c <readstat_float_value+0x88>
    5d60:	vldr	d0, [sp]
    5d64:	vcvt.f32.f64	s0, d0
    5d68:	b	5d8c <readstat_float_value+0x88>
    5d6c:	vldr	s15, [sp]
    5d70:	vcvt.f32.s32	s0, s15
    5d74:	b	5d8c <readstat_float_value+0x88>
    5d78:	ldrsh	r3, [sp]
    5d7c:	vmov	s0, r3
    5d80:	vcvt.f32.s32	s0, s0
    5d84:	b	5d8c <readstat_float_value+0x88>
    5d88:	vldr	s0, [pc, #4]	; 5d94 <readstat_float_value+0x90>
    5d8c:	add	sp, sp, #16
    5d90:	pop	{r4, pc}
    5d94:	.word	0x7fc00000

00005d98 <readstat_double_value>:
    5d98:	push	{r4, lr}
    5d9c:	sub	sp, sp, #16
    5da0:	stm	sp, {r0, r1, r2, r3}
    5da4:	mov	r4, r2
    5da8:	ldm	sp, {r0, r1, r2, r3}
    5dac:	bl	3eec <readstat_value_is_system_missing@plt>
    5db0:	cmp	r0, #0
    5db4:	bne	5e28 <readstat_double_value+0x90>
    5db8:	cmp	r4, #5
    5dbc:	beq	5de8 <readstat_double_value+0x50>
    5dc0:	cmp	r4, #4
    5dc4:	beq	5df0 <readstat_double_value+0x58>
    5dc8:	cmp	r4, #3
    5dcc:	beq	5dfc <readstat_double_value+0x64>
    5dd0:	cmp	r4, #2
    5dd4:	beq	5e08 <readstat_double_value+0x70>
    5dd8:	cmp	r4, #1
    5ddc:	beq	5e18 <readstat_double_value+0x80>
    5de0:	vldr	d0, [pc, #80]	; 5e38 <readstat_double_value+0xa0>
    5de4:	b	5e2c <readstat_double_value+0x94>
    5de8:	vldr	d0, [sp]
    5dec:	b	5e2c <readstat_double_value+0x94>
    5df0:	vldr	s0, [sp]
    5df4:	vcvt.f64.f32	d0, s0
    5df8:	b	5e2c <readstat_double_value+0x94>
    5dfc:	vldr	s15, [sp]
    5e00:	vcvt.f64.s32	d0, s15
    5e04:	b	5e2c <readstat_double_value+0x94>
    5e08:	ldrsh	r3, [sp]
    5e0c:	vmov	s0, r3
    5e10:	vcvt.f64.s32	d0, s0
    5e14:	b	5e2c <readstat_double_value+0x94>
    5e18:	ldrsb	r3, [sp]
    5e1c:	vmov	s0, r3
    5e20:	vcvt.f64.s32	d0, s0
    5e24:	b	5e2c <readstat_double_value+0x94>
    5e28:	vldr	d0, [pc, #8]	; 5e38 <readstat_double_value+0xa0>
    5e2c:	add	sp, sp, #16
    5e30:	pop	{r4, pc}
    5e34:	nop			; (mov r0, r0)
    5e38:	.word	0x00000000
    5e3c:	.word	0x7ff80000

00005e40 <readstat_string_value>:
    5e40:	push	{lr}		; (str lr, [sp, #-4]!)
    5e44:	sub	sp, sp, #20
    5e48:	stm	sp, {r0, r1, r2, r3}
    5e4c:	ldm	sp, {r0, r1, r2, r3}
    5e50:	bl	436c <readstat_value_type@plt>
    5e54:	cmp	r0, #0
    5e58:	ldreq	r0, [sp]
    5e5c:	movne	r0, #0
    5e60:	add	sp, sp, #20
    5e64:	pop	{pc}		; (ldr pc, [sp], #4)

00005e68 <readstat_value_is_defined_missing>:
    5e68:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    5e6c:	vpush	{d8-d9}
    5e70:	sub	sp, sp, #80	; 0x50
    5e74:	stm	sp, {r0, r1, r2, r3}
    5e78:	ldm	sp, {r0, r1, r2, r3}
    5e7c:	bl	4108 <readstat_value_type_class@plt>
    5e80:	mov	r4, r0
    5e84:	ldr	r0, [sp, #128]	; 0x80
    5e88:	bl	4570 <readstat_variable_get_type_class@plt>
    5e8c:	cmp	r4, r0
    5e90:	movne	r0, #0
    5e94:	beq	5ea4 <readstat_value_is_defined_missing+0x3c>
    5e98:	add	sp, sp, #80	; 0x50
    5e9c:	vpop	{d8-d9}
    5ea0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    5ea4:	ldm	sp, {r0, r1, r2, r3}
    5ea8:	bl	4108 <readstat_value_type_class@plt>
    5eac:	cmp	r0, #0
    5eb0:	beq	5ef4 <readstat_value_is_defined_missing+0x8c>
    5eb4:	ldm	sp, {r0, r1, r2, r3}
    5eb8:	bl	4108 <readstat_value_type_class@plt>
    5ebc:	cmp	r0, #1
    5ec0:	movne	r0, #0
    5ec4:	bne	5e98 <readstat_value_is_defined_missing+0x30>
    5ec8:	ldm	sp, {r0, r1, r2, r3}
    5ecc:	bl	41e0 <readstat_double_value@plt>
    5ed0:	vmov.f64	d9, d0
    5ed4:	ldr	r0, [sp, #128]	; 0x80
    5ed8:	bl	4330 <readstat_variable_get_missing_ranges_count@plt>
    5edc:	subs	r7, r0, #0
    5ee0:	ble	6020 <readstat_value_is_defined_missing+0x1b8>
    5ee4:	mov	r6, #0
    5ee8:	add	r5, sp, #64	; 0x40
    5eec:	add	r4, sp, #48	; 0x30
    5ef0:	b	5fbc <readstat_value_is_defined_missing+0x154>
    5ef4:	ldm	sp, {r0, r1, r2, r3}
    5ef8:	bl	3fd0 <readstat_string_value@plt>
    5efc:	subs	sl, r0, #0
    5f00:	moveq	r0, #0
    5f04:	beq	5e98 <readstat_value_is_defined_missing+0x30>
    5f08:	ldr	r0, [sp, #128]	; 0x80
    5f0c:	bl	4330 <readstat_variable_get_missing_ranges_count@plt>
    5f10:	subs	r9, r0, #0
    5f14:	ble	6018 <readstat_value_is_defined_missing+0x1b0>
    5f18:	mov	r6, #0
    5f1c:	add	r5, sp, #32
    5f20:	add	r4, sp, #16
    5f24:	b	5f34 <readstat_value_is_defined_missing+0xcc>
    5f28:	add	r6, r6, #1
    5f2c:	cmp	r9, r6
    5f30:	beq	5fa8 <readstat_value_is_defined_missing+0x140>
    5f34:	mov	r2, r6
    5f38:	ldr	r1, [sp, #128]	; 0x80
    5f3c:	mov	r0, r5
    5f40:	bl	3f64 <readstat_variable_get_missing_range_lo@plt>
    5f44:	ldm	r5, {r0, r1, r2, r3}
    5f48:	bl	3fd0 <readstat_string_value@plt>
    5f4c:	mov	r7, r0
    5f50:	mov	r2, r6
    5f54:	ldr	r1, [sp, #128]	; 0x80
    5f58:	mov	r0, r4
    5f5c:	bl	4354 <readstat_variable_get_missing_range_hi@plt>
    5f60:	ldm	r4, {r0, r1, r2, r3}
    5f64:	bl	3fd0 <readstat_string_value@plt>
    5f68:	mov	r8, r0
    5f6c:	cmp	r7, #0
    5f70:	cmpne	r0, #0
    5f74:	beq	5f28 <readstat_value_is_defined_missing+0xc0>
    5f78:	mov	r1, r7
    5f7c:	mov	r0, sl
    5f80:	bl	3e20 <strcmp@plt>
    5f84:	cmp	r0, #0
    5f88:	blt	5f28 <readstat_value_is_defined_missing+0xc0>
    5f8c:	mov	r1, r8
    5f90:	mov	r0, sl
    5f94:	bl	3e20 <strcmp@plt>
    5f98:	cmp	r0, #0
    5f9c:	bgt	5f28 <readstat_value_is_defined_missing+0xc0>
    5fa0:	mov	r0, #1
    5fa4:	b	5e98 <readstat_value_is_defined_missing+0x30>
    5fa8:	mov	r0, #0
    5fac:	b	5e98 <readstat_value_is_defined_missing+0x30>
    5fb0:	add	r6, r6, #1
    5fb4:	cmp	r7, r6
    5fb8:	beq	6010 <readstat_value_is_defined_missing+0x1a8>
    5fbc:	mov	r2, r6
    5fc0:	ldr	r1, [sp, #128]	; 0x80
    5fc4:	mov	r0, r5
    5fc8:	bl	3f64 <readstat_variable_get_missing_range_lo@plt>
    5fcc:	ldm	r5, {r0, r1, r2, r3}
    5fd0:	bl	41e0 <readstat_double_value@plt>
    5fd4:	vmov.f64	d8, d0
    5fd8:	mov	r2, r6
    5fdc:	ldr	r1, [sp, #128]	; 0x80
    5fe0:	mov	r0, r4
    5fe4:	bl	4354 <readstat_variable_get_missing_range_hi@plt>
    5fe8:	ldm	r4, {r0, r1, r2, r3}
    5fec:	bl	41e0 <readstat_double_value@plt>
    5ff0:	vcmpe.f64	d9, d8
    5ff4:	vmrs	APSR_nzcv, fpscr
    5ff8:	blt	5fb0 <readstat_value_is_defined_missing+0x148>
    5ffc:	vcmpe.f64	d9, d0
    6000:	vmrs	APSR_nzcv, fpscr
    6004:	bhi	5fb0 <readstat_value_is_defined_missing+0x148>
    6008:	mov	r0, #1
    600c:	b	5e98 <readstat_value_is_defined_missing+0x30>
    6010:	mov	r0, #0
    6014:	b	5e98 <readstat_value_is_defined_missing+0x30>
    6018:	mov	r0, #0
    601c:	b	5e98 <readstat_value_is_defined_missing+0x30>
    6020:	mov	r0, #0
    6024:	b	5e98 <readstat_value_is_defined_missing+0x30>

00006028 <readstat_value_is_missing>:
    6028:	push	{lr}		; (str lr, [sp, #-4]!)
    602c:	sub	sp, sp, #28
    6030:	add	ip, sp, #24
    6034:	stmdb	ip, {r0, r1, r2, r3}
    6038:	ldr	r3, [sp, #32]
    603c:	ldrb	r2, [sp, #21]
    6040:	tst	r2, #3
    6044:	movne	r0, #1
    6048:	bne	6064 <readstat_value_is_missing+0x3c>
    604c:	cmp	r3, #0
    6050:	moveq	r0, #0
    6054:	beq	6064 <readstat_value_is_missing+0x3c>
    6058:	str	r3, [sp]
    605c:	ldmdb	ip, {r0, r1, r2, r3}
    6060:	bl	3f10 <readstat_value_is_defined_missing@plt>
    6064:	add	sp, sp, #28
    6068:	pop	{pc}		; (ldr pc, [sp], #4)

0000606c <make_blank_value>:
    606c:	push	{r4, r5}
    6070:	mov	r2, #0
    6074:	str	r2, [r0, #12]
    6078:	mov	r4, #0
    607c:	ldr	r5, [pc, #24]	; 609c <make_blank_value+0x30>
    6080:	strd	r4, [r0]
    6084:	mov	r2, #5
    6088:	str	r2, [r0, #8]
    608c:	mov	r2, #1
    6090:	strb	r2, [r0, #13]
    6094:	pop	{r4, r5}
    6098:	bx	lr
    609c:	.word	0x7ff80000

000060a0 <make_double_value>:
    60a0:	mov	r2, #0
    60a4:	str	r2, [r0, #12]
    60a8:	vstr	d0, [r0]
    60ac:	mov	r2, #5
    60b0:	str	r2, [r0, #8]
    60b4:	bx	lr

000060b8 <make_string_value>:
    60b8:	mov	r2, #0
    60bc:	str	r2, [r0, #4]
    60c0:	str	r2, [r0, #8]
    60c4:	str	r2, [r0, #12]
    60c8:	str	r1, [r0]
    60cc:	bx	lr

000060d0 <readstat_variable_get_name>:
    60d0:	ldrb	r3, [r0, #8]
    60d4:	cmp	r3, #0
    60d8:	addne	r0, r0, #8
    60dc:	moveq	r0, #0
    60e0:	bx	lr

000060e4 <readstat_variable_get_label>:
    60e4:	ldrb	r3, [r0, #564]	; 0x234
    60e8:	cmp	r3, #0
    60ec:	addne	r0, r0, #564	; 0x234
    60f0:	moveq	r0, #0
    60f4:	bx	lr

000060f8 <readstat_variable_get_format>:
    60f8:	ldrb	r3, [r0, #308]	; 0x134
    60fc:	cmp	r3, #0
    6100:	addne	r0, r0, #308	; 0x134
    6104:	moveq	r0, #0
    6108:	bx	lr

0000610c <readstat_variable_get_type>:
    610c:	ldr	r0, [r0]
    6110:	bx	lr

00006114 <readstat_variable_get_type_class>:
    6114:	push	{r4, lr}
    6118:	ldr	r0, [r0]
    611c:	bl	3e44 <readstat_type_class@plt>
    6120:	pop	{r4, pc}

00006124 <readstat_variable_get_index>:
    6124:	ldr	r0, [r0, #4]
    6128:	bx	lr

0000612c <readstat_variable_get_index_after_skipping>:
    612c:	ldr	r0, [r0, #2148]	; 0x864
    6130:	bx	lr

00006134 <readstat_variable_get_storage_width>:
    6134:	ldr	r0, [r0, #1596]	; 0x63c
    6138:	bx	lr

0000613c <readstat_variable_get_measure>:
    613c:	ldr	r0, [r0, #2128]	; 0x850
    6140:	bx	lr

00006144 <readstat_variable_get_alignment>:
    6144:	ldr	r0, [r0, #2132]	; 0x854
    6148:	bx	lr

0000614c <readstat_variable_get_display_width>:
    614c:	ldr	r0, [r0, #2136]	; 0x858
    6150:	bx	lr

00006154 <readstat_variable_get_missing_ranges_count>:
    6154:	ldr	r0, [r0, #2120]	; 0x848
    6158:	bx	lr

0000615c <readstat_variable_get_missing_range_lo>:
    615c:	push	{r4, lr}
    6160:	mov	r4, r0
    6164:	ldr	r3, [r1, #2120]	; 0x848
    6168:	cmp	r3, r2
    616c:	ble	6180 <readstat_variable_get_missing_range_lo+0x24>
    6170:	lsl	r2, r2, #1
    6174:	add	r3, r2, #1
    6178:	cmp	r3, #31
    617c:	bls	6190 <readstat_variable_get_missing_range_lo+0x34>
    6180:	mov	r0, r4
    6184:	bl	606c <make_blank_value>
    6188:	mov	r0, r4
    618c:	pop	{r4, pc}
    6190:	add	r1, r1, r2, lsl #4
    6194:	add	r1, r1, #1600	; 0x640
    6198:	add	r1, r1, #8
    619c:	ldm	r1, {r0, r1, r2, r3}
    61a0:	stm	r4, {r0, r1, r2, r3}
    61a4:	b	6188 <readstat_variable_get_missing_range_lo+0x2c>

000061a8 <readstat_variable_get_missing_range_hi>:
    61a8:	push	{r4, lr}
    61ac:	mov	r4, r0
    61b0:	ldr	r3, [r1, #2120]	; 0x848
    61b4:	cmp	r3, r2
    61b8:	ble	61cc <readstat_variable_get_missing_range_hi+0x24>
    61bc:	lsl	r2, r2, #1
    61c0:	add	r2, r2, #1
    61c4:	cmp	r2, #31
    61c8:	bls	61dc <readstat_variable_get_missing_range_hi+0x34>
    61cc:	mov	r0, r4
    61d0:	bl	606c <make_blank_value>
    61d4:	mov	r0, r4
    61d8:	pop	{r4, pc}
    61dc:	add	r2, r1, r2, lsl #4
    61e0:	add	r2, r2, #1600	; 0x640
    61e4:	add	r2, r2, #8
    61e8:	ldm	r2, {r0, r1, r2, r3}
    61ec:	stm	r4, {r0, r1, r2, r3}
    61f0:	b	61d4 <readstat_variable_get_missing_range_hi+0x2c>

000061f4 <readstat_variable_add_missing_double_range>:
    61f4:	push	{r4, r5, r6, lr}
    61f8:	vpush	{d8}
    61fc:	sub	sp, sp, #64	; 0x40
    6200:	mov	r6, r0
    6204:	vmov.f64	d8, d1
    6208:	add	r5, sp, #32
    620c:	mov	r0, r5
    6210:	bl	60a0 <make_double_value>
    6214:	vmov.f64	d0, d8
    6218:	add	r4, sp, #48	; 0x30
    621c:	mov	r0, r4
    6220:	bl	60a0 <make_double_value>
    6224:	ldm	r5, {r0, r1, r2, r3}
    6228:	stm	sp, {r0, r1, r2, r3}
    622c:	ldm	r4, {r0, r1, r2, r3}
    6230:	add	ip, sp, #16
    6234:	stm	ip, {r0, r1, r2, r3}
    6238:	mov	r0, r6
    623c:	bl	4330 <readstat_variable_get_missing_ranges_count@plt>
    6240:	lsl	ip, r0, #1
    6244:	cmp	ip, #31
    6248:	movhi	r0, #31
    624c:	bls	625c <readstat_variable_add_missing_double_range+0x68>
    6250:	add	sp, sp, #64	; 0x40
    6254:	vpop	{d8}
    6258:	pop	{r4, r5, r6, pc}
    625c:	add	lr, r6, ip, lsl #4
    6260:	add	lr, lr, #1600	; 0x640
    6264:	add	lr, lr, #8
    6268:	ldm	sp, {r0, r1, r2, r3}
    626c:	stm	lr, {r0, r1, r2, r3}
    6270:	add	ip, r6, ip, lsl #4
    6274:	add	ip, ip, #1616	; 0x650
    6278:	add	ip, ip, #8
    627c:	add	r3, sp, #16
    6280:	ldm	r3, {r0, r1, r2, r3}
    6284:	stm	ip, {r0, r1, r2, r3}
    6288:	ldr	r3, [r6, #2120]	; 0x848
    628c:	add	r3, r3, #1
    6290:	str	r3, [r6, #2120]	; 0x848
    6294:	mov	r0, #0
    6298:	b	6250 <readstat_variable_add_missing_double_range+0x5c>

0000629c <readstat_variable_add_missing_double_value>:
    629c:	push	{r4, r5, r6, lr}
    62a0:	vpush	{d8}
    62a4:	sub	sp, sp, #64	; 0x40
    62a8:	mov	r6, r0
    62ac:	vmov.f64	d8, d0
    62b0:	add	r5, sp, #32
    62b4:	mov	r0, r5
    62b8:	bl	60a0 <make_double_value>
    62bc:	vmov.f64	d0, d8
    62c0:	add	r4, sp, #48	; 0x30
    62c4:	mov	r0, r4
    62c8:	bl	60a0 <make_double_value>
    62cc:	ldm	r5, {r0, r1, r2, r3}
    62d0:	stm	sp, {r0, r1, r2, r3}
    62d4:	ldm	r4, {r0, r1, r2, r3}
    62d8:	add	ip, sp, #16
    62dc:	stm	ip, {r0, r1, r2, r3}
    62e0:	mov	r0, r6
    62e4:	bl	4330 <readstat_variable_get_missing_ranges_count@plt>
    62e8:	lsl	ip, r0, #1
    62ec:	cmp	ip, #31
    62f0:	movhi	r0, #31
    62f4:	bls	6304 <readstat_variable_add_missing_double_value+0x68>
    62f8:	add	sp, sp, #64	; 0x40
    62fc:	vpop	{d8}
    6300:	pop	{r4, r5, r6, pc}
    6304:	add	lr, r6, ip, lsl #4
    6308:	add	lr, lr, #1600	; 0x640
    630c:	add	lr, lr, #8
    6310:	ldm	sp, {r0, r1, r2, r3}
    6314:	stm	lr, {r0, r1, r2, r3}
    6318:	add	ip, r6, ip, lsl #4
    631c:	add	ip, ip, #1616	; 0x650
    6320:	add	ip, ip, #8
    6324:	add	r3, sp, #16
    6328:	ldm	r3, {r0, r1, r2, r3}
    632c:	stm	ip, {r0, r1, r2, r3}
    6330:	ldr	r3, [r6, #2120]	; 0x848
    6334:	add	r3, r3, #1
    6338:	str	r3, [r6, #2120]	; 0x848
    633c:	mov	r0, #0
    6340:	b	62f8 <readstat_variable_add_missing_double_value+0x5c>

00006344 <readstat_variable_add_missing_string_range>:
    6344:	push	{r4, r5, r6, lr}
    6348:	sub	sp, sp, #64	; 0x40
    634c:	mov	r6, r0
    6350:	mov	r4, r2
    6354:	add	r5, sp, #32
    6358:	mov	r0, r5
    635c:	bl	60b8 <make_string_value>
    6360:	mov	r1, r4
    6364:	add	r4, sp, #48	; 0x30
    6368:	mov	r0, r4
    636c:	bl	60b8 <make_string_value>
    6370:	ldm	r5, {r0, r1, r2, r3}
    6374:	stm	sp, {r0, r1, r2, r3}
    6378:	ldm	r4, {r0, r1, r2, r3}
    637c:	add	ip, sp, #16
    6380:	stm	ip, {r0, r1, r2, r3}
    6384:	mov	r0, r6
    6388:	bl	4330 <readstat_variable_get_missing_ranges_count@plt>
    638c:	lsl	ip, r0, #1
    6390:	cmp	ip, #31
    6394:	movhi	r0, #31
    6398:	bls	63a4 <readstat_variable_add_missing_string_range+0x60>
    639c:	add	sp, sp, #64	; 0x40
    63a0:	pop	{r4, r5, r6, pc}
    63a4:	add	lr, r6, ip, lsl #4
    63a8:	add	lr, lr, #1600	; 0x640
    63ac:	add	lr, lr, #8
    63b0:	ldm	sp, {r0, r1, r2, r3}
    63b4:	stm	lr, {r0, r1, r2, r3}
    63b8:	add	ip, r6, ip, lsl #4
    63bc:	add	ip, ip, #1616	; 0x650
    63c0:	add	ip, ip, #8
    63c4:	add	r3, sp, #16
    63c8:	ldm	r3, {r0, r1, r2, r3}
    63cc:	stm	ip, {r0, r1, r2, r3}
    63d0:	ldr	r3, [r6, #2120]	; 0x848
    63d4:	add	r3, r3, #1
    63d8:	str	r3, [r6, #2120]	; 0x848
    63dc:	mov	r0, #0
    63e0:	b	639c <readstat_variable_add_missing_string_range+0x58>

000063e4 <readstat_variable_add_missing_string_value>:
    63e4:	push	{r4, r5, r6, lr}
    63e8:	sub	sp, sp, #64	; 0x40
    63ec:	mov	r6, r0
    63f0:	mov	r4, r1
    63f4:	add	r5, sp, #32
    63f8:	mov	r0, r5
    63fc:	bl	60b8 <make_string_value>
    6400:	mov	r1, r4
    6404:	add	r4, sp, #48	; 0x30
    6408:	mov	r0, r4
    640c:	bl	60b8 <make_string_value>
    6410:	ldm	r5, {r0, r1, r2, r3}
    6414:	stm	sp, {r0, r1, r2, r3}
    6418:	ldm	r4, {r0, r1, r2, r3}
    641c:	add	ip, sp, #16
    6420:	stm	ip, {r0, r1, r2, r3}
    6424:	mov	r0, r6
    6428:	bl	4330 <readstat_variable_get_missing_ranges_count@plt>
    642c:	lsl	ip, r0, #1
    6430:	cmp	ip, #31
    6434:	movhi	r0, #31
    6438:	bls	6444 <readstat_variable_add_missing_string_value+0x60>
    643c:	add	sp, sp, #64	; 0x40
    6440:	pop	{r4, r5, r6, pc}
    6444:	add	lr, r6, ip, lsl #4
    6448:	add	lr, lr, #1600	; 0x640
    644c:	add	lr, lr, #8
    6450:	ldm	sp, {r0, r1, r2, r3}
    6454:	stm	lr, {r0, r1, r2, r3}
    6458:	add	ip, r6, ip, lsl #4
    645c:	add	ip, ip, #1616	; 0x650
    6460:	add	ip, ip, #8
    6464:	add	r3, sp, #16
    6468:	ldm	r3, {r0, r1, r2, r3}
    646c:	stm	ip, {r0, r1, r2, r3}
    6470:	ldr	r3, [r6, #2120]	; 0x848
    6474:	add	r3, r3, #1
    6478:	str	r3, [r6, #2120]	; 0x848
    647c:	mov	r0, #0
    6480:	b	643c <readstat_variable_add_missing_string_value+0x58>

00006484 <readstat_compare_string_refs>:
    6484:	push	{lr}		; (str lr, [sp, #-4]!)
    6488:	ldr	lr, [r0]
    648c:	ldr	ip, [r1]
    6490:	ldrd	r0, [lr]
    6494:	ldrd	r2, [ip]
    6498:	cmp	r1, r3
    649c:	cmpeq	r0, r2
    64a0:	ldreq	r0, [lr, #8]
    64a4:	ldreq	r3, [ip, #8]
    64a8:	subeq	r0, r0, r3
    64ac:	subne	r0, r0, r2
    64b0:	pop	{pc}		; (ldr pc, [sp], #4)

000064b4 <readstat_add_value_label>:
    64b4:	push	{r4, r5, r6, lr}
    64b8:	mov	r4, r0
    64bc:	mov	r5, r1
    64c0:	ldr	r1, [r0, #264]	; 0x108
    64c4:	ldr	r3, [r0, #268]	; 0x10c
    64c8:	cmp	r1, r3
    64cc:	beq	6510 <readstat_add_value_label+0x5c>
    64d0:	ldr	r3, [r4, #260]	; 0x104
    64d4:	ldr	r2, [r4, #264]	; 0x108
    64d8:	add	r1, r2, #1
    64dc:	str	r1, [r4, #264]	; 0x108
    64e0:	add	r4, r3, r2, lsl #5
    64e4:	mov	r2, #32
    64e8:	mov	r1, #0
    64ec:	mov	r0, r4
    64f0:	bl	42d0 <memset@plt>
    64f4:	cmp	r5, #0
    64f8:	beq	6508 <readstat_add_value_label+0x54>
    64fc:	ldrb	r3, [r5]
    6500:	cmp	r3, #0
    6504:	bne	652c <readstat_add_value_label+0x78>
    6508:	mov	r0, r4
    650c:	pop	{r4, r5, r6, pc}
    6510:	lsl	r3, r1, #1
    6514:	str	r3, [r0, #268]	; 0x10c
    6518:	lsl	r1, r1, #6
    651c:	ldr	r0, [r0, #260]	; 0x104
    6520:	bl	4018 <realloc@plt>
    6524:	str	r0, [r4, #260]	; 0x104
    6528:	b	64d0 <readstat_add_value_label+0x1c>
    652c:	mov	r0, r5
    6530:	bl	4228 <strlen@plt>
    6534:	mov	r6, r0
    6538:	str	r0, [r4, #28]
    653c:	bl	4138 <malloc@plt>
    6540:	str	r0, [r4, #24]
    6544:	mov	r2, r6
    6548:	mov	r1, r5
    654c:	bl	3f40 <memcpy@plt>
    6550:	b	6508 <readstat_add_value_label+0x54>

00006554 <readstat_string_ref_init>:
    6554:	push	{r4, r5, r6, lr}
    6558:	mov	r6, r0
    655c:	bl	4228 <strlen@plt>
    6560:	add	r5, r0, #1
    6564:	add	r1, r0, #25
    6568:	mov	r0, #1
    656c:	bl	3d78 <calloc@plt>
    6570:	mov	r4, r0
    6574:	mvn	r2, #0
    6578:	mvn	r3, #0
    657c:	strd	r2, [r0, #8]
    6580:	strd	r2, [r0]
    6584:	str	r5, [r0, #16]
    6588:	mov	r2, r5
    658c:	mov	r1, r6
    6590:	add	r0, r0, #20
    6594:	bl	3f40 <memcpy@plt>
    6598:	mov	r0, r4
    659c:	pop	{r4, r5, r6, pc}

000065a0 <readstat_writer_init>:
    65a0:	push	{r4, r5, r6, lr}
    65a4:	mov	r1, #312	; 0x138
    65a8:	mov	r0, #1
    65ac:	bl	3d78 <calloc@plt>
    65b0:	mov	r4, r0
    65b4:	mov	r1, #4
    65b8:	mov	r0, #50	; 0x32
    65bc:	bl	3d78 <calloc@plt>
    65c0:	str	r0, [r4, #24]
    65c4:	mov	r5, #50	; 0x32
    65c8:	str	r5, [r4, #32]
    65cc:	mov	r1, #4
    65d0:	mov	r0, r5
    65d4:	bl	3d78 <calloc@plt>
    65d8:	str	r0, [r4, #36]	; 0x24
    65dc:	str	r5, [r4, #44]	; 0x2c
    65e0:	mov	r1, #4
    65e4:	mov	r0, r5
    65e8:	bl	3d78 <calloc@plt>
    65ec:	str	r0, [r4, #48]	; 0x30
    65f0:	str	r5, [r4, #56]	; 0x38
    65f4:	mov	r1, #4
    65f8:	mov	r0, #100	; 0x64
    65fc:	bl	3d78 <calloc@plt>
    6600:	str	r0, [r4, #60]	; 0x3c
    6604:	mov	r3, #100	; 0x64
    6608:	str	r3, [r4, #68]	; 0x44
    660c:	mov	r0, #0
    6610:	bl	3f7c <time@plt>
    6614:	str	r0, [r4, #20]
    6618:	mov	r3, #1
    661c:	str	r3, [r4, #12]
    6620:	ldr	r3, [pc, #12]	; 6634 <readstat_writer_init+0x94>
    6624:	add	r3, pc, r3
    6628:	str	r3, [r4, #280]	; 0x118
    662c:	mov	r0, r4
    6630:	pop	{r4, r5, r6, pc}
    6634:	.word	0x000000c0

00006638 <readstat_validate_variable>:
    6638:	ldr	r3, [r0, #308]	; 0x134
    663c:	cmp	r3, #0
    6640:	bne	664c <readstat_validate_variable+0x14>
    6644:	mov	r0, #14
    6648:	bx	lr
    664c:	ldr	r3, [r0, #232]	; 0xe8
    6650:	cmp	r3, #0
    6654:	beq	6668 <readstat_validate_variable+0x30>
    6658:	push	{r4, lr}
    665c:	mov	r0, r1
    6660:	blx	r3
    6664:	pop	{r4, pc}
    6668:	mov	r0, #0
    666c:	bx	lr

00006670 <readstat_validate_metadata>:
    6670:	ldr	r3, [r0, #308]	; 0x134
    6674:	cmp	r3, #0
    6678:	bne	6684 <readstat_validate_metadata+0x14>
    667c:	mov	r0, #14
    6680:	bx	lr
    6684:	ldr	r3, [r0, #292]	; 0x124
    6688:	cmp	r3, #0
    668c:	beq	669c <readstat_validate_metadata+0x2c>
    6690:	push	{r4, lr}
    6694:	blx	r3
    6698:	pop	{r4, pc}
    669c:	mov	r0, #0
    66a0:	bx	lr

000066a4 <readstat_set_data_writer>:
    66a4:	str	r1, [r0]
    66a8:	mov	r0, #0
    66ac:	bx	lr

000066b0 <readstat_write_bytes>:
    66b0:	push	{r4, r5, r6, lr}
    66b4:	mov	r4, r0
    66b8:	mov	r0, r1
    66bc:	mov	r5, r2
    66c0:	ldr	r3, [r4]
    66c4:	ldr	r2, [r4, #304]	; 0x130
    66c8:	mov	r1, r5
    66cc:	blx	r3
    66d0:	cmp	r5, r0
    66d4:	ldrls	r3, [r4, #4]
    66d8:	addls	r0, r3, r0
    66dc:	strls	r0, [r4, #4]
    66e0:	movls	r0, #0
    66e4:	movhi	r0, #13
    66e8:	pop	{r4, r5, r6, pc}

000066ec <readstat_write_row_default_callback>:
    66ec:	push	{r4, lr}
    66f0:	bl	4480 <readstat_write_bytes@plt>
    66f4:	pop	{r4, pc}

000066f8 <readstat_write_bytes_as_lines>:
    66f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    66fc:	sub	sp, sp, #12
    6700:	mov	r5, r0
    6704:	mov	fp, r1
    6708:	mov	r7, r2
    670c:	mov	r8, r3
    6710:	ldr	r0, [sp, #48]	; 0x30
    6714:	bl	4228 <strlen@plt>
    6718:	str	r0, [sp, #4]
    671c:	cmp	r7, #0
    6720:	beq	67c8 <readstat_write_bytes_as_lines+0xd0>
    6724:	mov	r4, #0
    6728:	add	sl, r0, r8
    672c:	b	676c <readstat_write_bytes_as_lines+0x74>
    6730:	mov	r2, r6
    6734:	add	r1, fp, r4
    6738:	mov	r0, r5
    673c:	bl	4480 <readstat_write_bytes@plt>
    6740:	mov	r9, r0
    6744:	add	r4, r4, r6
    6748:	cmp	r9, #0
    674c:	bne	67bc <readstat_write_bytes_as_lines+0xc4>
    6750:	mov	r1, sl
    6754:	ldr	r0, [r5, #4]
    6758:	bl	23f78 <__aeabi_uidivmod>
    675c:	cmp	r8, r1
    6760:	beq	67a0 <readstat_write_bytes_as_lines+0xa8>
    6764:	cmp	r4, r7
    6768:	bcs	67bc <readstat_write_bytes_as_lines+0xc4>
    676c:	mov	r1, sl
    6770:	ldr	r0, [r5, #4]
    6774:	bl	23f78 <__aeabi_uidivmod>
    6778:	sub	r6, r8, r1
    677c:	sub	r2, r7, r4
    6780:	cmp	r6, r2
    6784:	bls	6730 <readstat_write_bytes_as_lines+0x38>
    6788:	add	r1, fp, r4
    678c:	mov	r0, r5
    6790:	bl	4480 <readstat_write_bytes@plt>
    6794:	mov	r9, r0
    6798:	mov	r4, r7
    679c:	b	6748 <readstat_write_bytes_as_lines+0x50>
    67a0:	ldr	r2, [sp, #4]
    67a4:	ldr	r1, [sp, #48]	; 0x30
    67a8:	mov	r0, r5
    67ac:	bl	4480 <readstat_write_bytes@plt>
    67b0:	cmp	r0, #0
    67b4:	beq	6764 <readstat_write_bytes_as_lines+0x6c>
    67b8:	mov	r9, r0
    67bc:	mov	r0, r9
    67c0:	add	sp, sp, #12
    67c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    67c8:	mov	r9, #0
    67cc:	b	67bc <readstat_write_bytes_as_lines+0xc4>

000067d0 <readstat_write_line_padding>:
    67d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    67d4:	mov	r5, r0
    67d8:	mov	r9, r1
    67dc:	mov	r4, r2
    67e0:	mov	r6, r3
    67e4:	mov	r0, r3
    67e8:	bl	4228 <strlen@plt>
    67ec:	mov	r7, r0
    67f0:	add	r1, r0, r4
    67f4:	ldr	r0, [r5, #4]
    67f8:	bl	23f78 <__aeabi_uidivmod>
    67fc:	cmp	r1, #0
    6800:	bne	680c <readstat_write_line_padding+0x3c>
    6804:	mov	r0, #0
    6808:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    680c:	sub	r4, r4, r1
    6810:	mov	r0, r4
    6814:	bl	4138 <malloc@plt>
    6818:	mov	r8, r0
    681c:	mov	r2, r4
    6820:	mov	r1, r9
    6824:	bl	42d0 <memset@plt>
    6828:	mov	r2, r4
    682c:	mov	r1, r8
    6830:	mov	r0, r5
    6834:	bl	4480 <readstat_write_bytes@plt>
    6838:	cmp	r0, #0
    683c:	beq	6854 <readstat_write_line_padding+0x84>
    6840:	cmp	r8, #0
    6844:	beq	6804 <readstat_write_line_padding+0x34>
    6848:	mov	r0, r8
    684c:	bl	3ee0 <free@plt>
    6850:	b	6804 <readstat_write_line_padding+0x34>
    6854:	mov	r2, r7
    6858:	mov	r1, r6
    685c:	mov	r0, r5
    6860:	bl	4480 <readstat_write_bytes@plt>
    6864:	b	6840 <readstat_write_line_padding+0x70>

00006868 <readstat_write_string>:
    6868:	push	{r4, r5, r6, lr}
    686c:	mov	r5, r0
    6870:	mov	r4, r1
    6874:	mov	r0, r1
    6878:	bl	4228 <strlen@plt>
    687c:	mov	r2, r0
    6880:	mov	r1, r4
    6884:	mov	r0, r5
    6888:	bl	4480 <readstat_write_bytes@plt>
    688c:	pop	{r4, r5, r6, pc}

00006890 <readstat_write_zeros>:
    6890:	push	{r4, r5, fp, lr}
    6894:	add	fp, sp, #12
    6898:	subs	r4, r1, #0
    689c:	moveq	r0, #0
    68a0:	bne	68ac <readstat_write_zeros+0x1c>
    68a4:	sub	sp, fp, #12
    68a8:	pop	{r4, r5, fp, pc}
    68ac:	mov	r5, r0
    68b0:	add	r3, r4, #7
    68b4:	bic	r3, r3, #7
    68b8:	sub	sp, sp, r3
    68bc:	mov	r2, r4
    68c0:	mov	r1, #0
    68c4:	mov	r0, sp
    68c8:	bl	42d0 <memset@plt>
    68cc:	mov	r2, r4
    68d0:	mov	r1, sp
    68d4:	mov	r0, r5
    68d8:	bl	4480 <readstat_write_bytes@plt>
    68dc:	b	68a4 <readstat_write_zeros+0x14>

000068e0 <readstat_write_spaces>:
    68e0:	push	{r4, r5, fp, lr}
    68e4:	add	fp, sp, #12
    68e8:	subs	r4, r1, #0
    68ec:	moveq	r0, #0
    68f0:	bne	68fc <readstat_write_spaces+0x1c>
    68f4:	sub	sp, fp, #12
    68f8:	pop	{r4, r5, fp, pc}
    68fc:	mov	r5, r0
    6900:	add	r3, r4, #7
    6904:	bic	r3, r3, #7
    6908:	sub	sp, sp, r3
    690c:	mov	r2, r4
    6910:	mov	r1, #32
    6914:	mov	r0, sp
    6918:	bl	42d0 <memset@plt>
    691c:	mov	r2, r4
    6920:	mov	r1, sp
    6924:	mov	r0, r5
    6928:	bl	4480 <readstat_write_bytes@plt>
    692c:	b	68f4 <readstat_write_spaces+0x14>

00006930 <readstat_write_space_padded_string>:
    6930:	push	{r4, r5, r6, r7, r8, lr}
    6934:	mov	r6, r0
    6938:	mov	r5, r2
    693c:	subs	r4, r1, #0
    6940:	beq	698c <readstat_write_space_padded_string+0x5c>
    6944:	ldrb	r3, [r4]
    6948:	cmp	r3, #0
    694c:	beq	698c <readstat_write_space_padded_string+0x5c>
    6950:	mov	r0, r4
    6954:	bl	4228 <strlen@plt>
    6958:	cmp	r0, r5
    695c:	movcc	r7, r0
    6960:	movcs	r7, r5
    6964:	mov	r2, r7
    6968:	mov	r1, r4
    696c:	mov	r0, r6
    6970:	bl	4480 <readstat_write_bytes@plt>
    6974:	cmp	r0, #0
    6978:	popne	{r4, r5, r6, r7, r8, pc}
    697c:	sub	r1, r5, r7
    6980:	mov	r0, r6
    6984:	bl	3dfc <readstat_write_spaces@plt>
    6988:	pop	{r4, r5, r6, r7, r8, pc}
    698c:	mov	r1, r5
    6990:	mov	r0, r6
    6994:	bl	3dfc <readstat_write_spaces@plt>
    6998:	pop	{r4, r5, r6, r7, r8, pc}

0000699c <readstat_add_label_set>:
    699c:	push	{r4, r5, r6, r7, r8, lr}
    69a0:	mov	r5, r0
    69a4:	mov	r7, r1
    69a8:	mov	r6, r2
    69ac:	ldr	r1, [r0, #40]	; 0x28
    69b0:	ldr	r3, [r0, #44]	; 0x2c
    69b4:	cmp	r1, r3
    69b8:	beq	6a30 <readstat_add_label_set+0x94>
    69bc:	mov	r1, #284	; 0x11c
    69c0:	mov	r0, #1
    69c4:	bl	3d78 <calloc@plt>
    69c8:	mov	r4, r0
    69cc:	ldr	r2, [r5, #36]	; 0x24
    69d0:	ldr	r3, [r5, #40]	; 0x28
    69d4:	add	r1, r3, #1
    69d8:	str	r1, [r5, #40]	; 0x28
    69dc:	str	r0, [r2, r3, lsl #2]
    69e0:	str	r7, [r0], #4
    69e4:	mov	r3, r6
    69e8:	ldr	r2, [pc, #92]	; 6a4c <readstat_add_label_set+0xb0>
    69ec:	add	r2, pc, r2
    69f0:	mov	r1, #256	; 0x100
    69f4:	bl	42ac <snprintf@plt>
    69f8:	mov	r1, #32
    69fc:	mov	r0, #10
    6a00:	bl	3d78 <calloc@plt>
    6a04:	str	r0, [r4, #260]	; 0x104
    6a08:	mov	r3, #10
    6a0c:	str	r3, [r4, #268]	; 0x10c
    6a10:	mov	r1, #4
    6a14:	mov	r0, #2
    6a18:	bl	3d78 <calloc@plt>
    6a1c:	str	r0, [r4, #272]	; 0x110
    6a20:	mov	r3, #2
    6a24:	str	r3, [r4, #280]	; 0x118
    6a28:	mov	r0, r4
    6a2c:	pop	{r4, r5, r6, r7, r8, pc}
    6a30:	lsl	r3, r1, #1
    6a34:	str	r3, [r0, #44]	; 0x2c
    6a38:	lsl	r1, r1, #3
    6a3c:	ldr	r0, [r0, #36]	; 0x24
    6a40:	bl	4018 <realloc@plt>
    6a44:	str	r0, [r5, #36]	; 0x24
    6a48:	b	69bc <readstat_add_label_set+0x20>
    6a4c:	.word	0x0001e6e0

00006a50 <readstat_get_label_set>:
    6a50:	ldr	r3, [r0, #40]	; 0x28
    6a54:	cmp	r3, r1
    6a58:	ldrgt	r3, [r0, #36]	; 0x24
    6a5c:	ldrgt	r0, [r3, r1, lsl #2]
    6a60:	movle	r0, #0
    6a64:	bx	lr

00006a68 <readstat_sort_label_set>:
    6a68:	push	{r4, lr}
    6a6c:	mov	r3, r1
    6a70:	mov	r2, #32
    6a74:	ldr	r1, [r0, #264]	; 0x108
    6a78:	ldr	r0, [r0, #260]	; 0x104
    6a7c:	bl	4468 <qsort@plt>
    6a80:	pop	{r4, pc}

00006a84 <readstat_get_value_label>:
    6a84:	ldr	r3, [r0, #264]	; 0x108
    6a88:	cmp	r3, r1
    6a8c:	ldrgt	r0, [r0, #260]	; 0x104
    6a90:	addgt	r0, r0, r1, lsl #5
    6a94:	movle	r0, #0
    6a98:	bx	lr

00006a9c <readstat_writer_free>:
    6a9c:	push	{r4, r5, r6, r7, r8, lr}
    6aa0:	subs	r7, r0, #0
    6aa4:	popeq	{r4, r5, r6, r7, r8, pc}
    6aa8:	ldr	r3, [r7, #288]	; 0x120
    6aac:	cmp	r3, #0
    6ab0:	beq	6ac4 <readstat_writer_free+0x28>
    6ab4:	ldr	r0, [r7, #300]	; 0x12c
    6ab8:	cmp	r0, #0
    6abc:	beq	6ac4 <readstat_writer_free+0x28>
    6ac0:	blx	r3
    6ac4:	ldr	r3, [r7, #24]
    6ac8:	cmp	r3, #0
    6acc:	beq	6b04 <readstat_writer_free+0x68>
    6ad0:	ldr	r3, [r7, #28]
    6ad4:	cmp	r3, #0
    6ad8:	ble	6afc <readstat_writer_free+0x60>
    6adc:	mov	r4, #0
    6ae0:	ldr	r3, [r7, #24]
    6ae4:	ldr	r0, [r3, r4, lsl #2]
    6ae8:	bl	3ee0 <free@plt>
    6aec:	add	r4, r4, #1
    6af0:	ldr	r3, [r7, #28]
    6af4:	cmp	r3, r4
    6af8:	bgt	6ae0 <readstat_writer_free+0x44>
    6afc:	ldr	r0, [r7, #24]
    6b00:	bl	3ee0 <free@plt>
    6b04:	ldr	r3, [r7, #36]	; 0x24
    6b08:	cmp	r3, #0
    6b0c:	beq	6bb4 <readstat_writer_free+0x118>
    6b10:	ldr	r3, [r7, #40]	; 0x28
    6b14:	cmp	r3, #0
    6b18:	ble	6bac <readstat_writer_free+0x110>
    6b1c:	mov	r8, #0
    6b20:	b	6b90 <readstat_writer_free+0xf4>
    6b24:	add	r4, r4, #1
    6b28:	ldr	r3, [r6, #264]	; 0x108
    6b2c:	cmp	r4, r3
    6b30:	bge	6b68 <readstat_writer_free+0xcc>
    6b34:	mov	r1, r4
    6b38:	mov	r0, r6
    6b3c:	bl	44f8 <readstat_get_value_label@plt>
    6b40:	mov	r5, r0
    6b44:	ldr	r0, [r0, #24]
    6b48:	cmp	r0, #0
    6b4c:	beq	6b54 <readstat_writer_free+0xb8>
    6b50:	bl	3ee0 <free@plt>
    6b54:	ldr	r0, [r5, #16]
    6b58:	cmp	r0, #0
    6b5c:	beq	6b24 <readstat_writer_free+0x88>
    6b60:	bl	3ee0 <free@plt>
    6b64:	b	6b24 <readstat_writer_free+0x88>
    6b68:	ldr	r0, [r6, #260]	; 0x104
    6b6c:	bl	3ee0 <free@plt>
    6b70:	ldr	r0, [r6, #272]	; 0x110
    6b74:	bl	3ee0 <free@plt>
    6b78:	mov	r0, r6
    6b7c:	bl	3ee0 <free@plt>
    6b80:	add	r8, r8, #1
    6b84:	ldr	r3, [r7, #40]	; 0x28
    6b88:	cmp	r3, r8
    6b8c:	ble	6bac <readstat_writer_free+0x110>
    6b90:	ldr	r3, [r7, #36]	; 0x24
    6b94:	ldr	r6, [r3, r8, lsl #2]
    6b98:	ldr	r3, [r6, #264]	; 0x108
    6b9c:	cmp	r3, #0
    6ba0:	ble	6b68 <readstat_writer_free+0xcc>
    6ba4:	mov	r4, #0
    6ba8:	b	6b34 <readstat_writer_free+0x98>
    6bac:	ldr	r0, [r7, #36]	; 0x24
    6bb0:	bl	3ee0 <free@plt>
    6bb4:	ldr	r3, [r7, #48]	; 0x30
    6bb8:	cmp	r3, #0
    6bbc:	beq	6bf4 <readstat_writer_free+0x158>
    6bc0:	ldr	r3, [r7, #52]	; 0x34
    6bc4:	cmp	r3, #0
    6bc8:	ble	6bec <readstat_writer_free+0x150>
    6bcc:	mov	r4, #0
    6bd0:	ldr	r3, [r7, #48]	; 0x30
    6bd4:	ldr	r0, [r3, r4, lsl #2]
    6bd8:	bl	3ee0 <free@plt>
    6bdc:	add	r4, r4, #1
    6be0:	ldr	r3, [r7, #52]	; 0x34
    6be4:	cmp	r3, r4
    6be8:	bgt	6bd0 <readstat_writer_free+0x134>
    6bec:	ldr	r0, [r7, #48]	; 0x30
    6bf0:	bl	3ee0 <free@plt>
    6bf4:	ldr	r3, [r7, #60]	; 0x3c
    6bf8:	cmp	r3, #0
    6bfc:	beq	6c34 <readstat_writer_free+0x198>
    6c00:	ldr	r3, [r7, #64]	; 0x40
    6c04:	cmp	r3, #0
    6c08:	ble	6c2c <readstat_writer_free+0x190>
    6c0c:	mov	r4, #0
    6c10:	ldr	r3, [r7, #60]	; 0x3c
    6c14:	ldr	r0, [r3, r4, lsl #2]
    6c18:	bl	3ee0 <free@plt>
    6c1c:	add	r4, r4, #1
    6c20:	ldr	r3, [r7, #64]	; 0x40
    6c24:	cmp	r3, r4
    6c28:	bgt	6c10 <readstat_writer_free+0x174>
    6c2c:	ldr	r0, [r7, #60]	; 0x3c
    6c30:	bl	3ee0 <free@plt>
    6c34:	ldr	r0, [r7, #72]	; 0x48
    6c38:	cmp	r0, #0
    6c3c:	beq	6c44 <readstat_writer_free+0x1a8>
    6c40:	bl	3ee0 <free@plt>
    6c44:	mov	r0, r7
    6c48:	bl	3ee0 <free@plt>
    6c4c:	pop	{r4, r5, r6, r7, r8, pc}

00006c50 <readstat_get_label_set_variable>:
    6c50:	ldr	r3, [r0, #276]	; 0x114
    6c54:	cmp	r3, r1
    6c58:	ldrgt	r3, [r0, #272]	; 0x110
    6c5c:	ldrgt	r0, [r3, r1, lsl #2]
    6c60:	movle	r0, #0
    6c64:	bx	lr

00006c68 <readstat_label_double_value>:
    6c68:	push	{r4, lr}
    6c6c:	vpush	{d8}
    6c70:	vmov.f64	d8, d0
    6c74:	bl	64b4 <readstat_add_value_label>
    6c78:	vstr	d8, [r0]
    6c7c:	vcvt.s32.f64	s16, d8
    6c80:	vstr	s16, [r0, #8]
    6c84:	vpop	{d8}
    6c88:	pop	{r4, pc}

00006c8c <readstat_label_int32_value>:
    6c8c:	push	{r4, lr}
    6c90:	mov	r4, r1
    6c94:	mov	r1, r2
    6c98:	bl	64b4 <readstat_add_value_label>
    6c9c:	vmov	s15, r4
    6ca0:	vcvt.f64.s32	d7, s15
    6ca4:	vstr	d7, [r0]
    6ca8:	str	r4, [r0, #8]
    6cac:	pop	{r4, pc}

00006cb0 <readstat_label_string_value>:
    6cb0:	push	{r4, r5, r6, lr}
    6cb4:	mov	r4, r1
    6cb8:	mov	r1, r2
    6cbc:	bl	64b4 <readstat_add_value_label>
    6cc0:	cmp	r4, #0
    6cc4:	popeq	{r4, r5, r6, pc}
    6cc8:	mov	r5, r0
    6ccc:	ldrb	r3, [r4]
    6cd0:	cmp	r3, #0
    6cd4:	popeq	{r4, r5, r6, pc}
    6cd8:	mov	r0, r4
    6cdc:	bl	4228 <strlen@plt>
    6ce0:	mov	r6, r0
    6ce4:	str	r0, [r5, #20]
    6ce8:	bl	4138 <malloc@plt>
    6cec:	str	r0, [r5, #16]
    6cf0:	mov	r2, r6
    6cf4:	mov	r1, r4
    6cf8:	bl	3f40 <memcpy@plt>
    6cfc:	pop	{r4, r5, r6, pc}

00006d00 <readstat_label_tagged_value>:
    6d00:	push	{r4, lr}
    6d04:	mov	r4, r1
    6d08:	mov	r1, r2
    6d0c:	bl	64b4 <readstat_add_value_label>
    6d10:	strb	r4, [r0, #12]
    6d14:	pop	{r4, pc}

00006d18 <readstat_add_variable>:
    6d18:	push	{r4, r5, r6, r7, r8, lr}
    6d1c:	mov	r5, r0
    6d20:	mov	r6, r1
    6d24:	mov	r7, r2
    6d28:	mov	r8, r3
    6d2c:	ldr	r1, [r0, #28]
    6d30:	ldr	r3, [r0, #32]
    6d34:	cmp	r1, r3
    6d38:	beq	6db0 <readstat_add_variable+0x98>
    6d3c:	ldr	r1, [pc, #136]	; 6dcc <readstat_add_variable+0xb4>
    6d40:	mov	r0, #1
    6d44:	bl	3d78 <calloc@plt>
    6d48:	mov	r4, r0
    6d4c:	ldr	r3, [r5, #28]
    6d50:	add	r2, r3, #1
    6d54:	str	r2, [r5, #28]
    6d58:	str	r3, [r0, #4]
    6d5c:	ldr	r2, [r5, #24]
    6d60:	str	r0, [r2, r3, lsl #2]
    6d64:	str	r8, [r0, #1600]	; 0x640
    6d68:	str	r7, [r0]
    6d6c:	bl	4570 <readstat_variable_get_type_class@plt>
    6d70:	cmp	r0, #0
    6d74:	moveq	r3, #1
    6d78:	movne	r3, #3
    6d7c:	str	r3, [r4, #2132]	; 0x854
    6d80:	mov	r3, #0
    6d84:	str	r3, [r4, #2128]	; 0x850
    6d88:	cmp	r6, r3
    6d8c:	beq	6da8 <readstat_add_variable+0x90>
    6d90:	mov	r3, r6
    6d94:	ldr	r2, [pc, #52]	; 6dd0 <readstat_add_variable+0xb8>
    6d98:	add	r2, pc, r2
    6d9c:	mov	r1, #300	; 0x12c
    6da0:	add	r0, r4, #8
    6da4:	bl	42ac <snprintf@plt>
    6da8:	mov	r0, r4
    6dac:	pop	{r4, r5, r6, r7, r8, pc}
    6db0:	lsl	r3, r1, #1
    6db4:	str	r3, [r0, #32]
    6db8:	lsl	r1, r1, #3
    6dbc:	ldr	r0, [r0, #24]
    6dc0:	bl	4018 <realloc@plt>
    6dc4:	str	r0, [r5, #24]
    6dc8:	b	6d3c <readstat_add_variable+0x24>
    6dcc:	.word	0x00000868
    6dd0:	.word	0x0001e334

00006dd4 <readstat_add_string_ref>:
    6dd4:	push	{r4, r5, r6, lr}
    6dd8:	mov	r4, r0
    6ddc:	mov	r0, r1
    6de0:	bl	4384 <readstat_string_ref_init@plt>
    6de4:	mov	r5, r0
    6de8:	ldr	r1, [r4, #64]	; 0x40
    6dec:	ldr	r3, [r4, #68]	; 0x44
    6df0:	cmp	r1, r3
    6df4:	beq	6e14 <readstat_add_string_ref+0x40>
    6df8:	ldr	r2, [r4, #60]	; 0x3c
    6dfc:	ldr	r3, [r4, #64]	; 0x40
    6e00:	add	r1, r3, #1
    6e04:	str	r1, [r4, #64]	; 0x40
    6e08:	str	r5, [r2, r3, lsl #2]
    6e0c:	mov	r0, r5
    6e10:	pop	{r4, r5, r6, pc}
    6e14:	lsl	r3, r1, #1
    6e18:	str	r3, [r4, #68]	; 0x44
    6e1c:	lsl	r1, r1, #3
    6e20:	ldr	r0, [r4, #60]	; 0x3c
    6e24:	bl	4018 <realloc@plt>
    6e28:	str	r0, [r4, #60]	; 0x3c
    6e2c:	b	6df8 <readstat_add_string_ref+0x24>

00006e30 <readstat_add_note>:
    6e30:	push	{r4, r5, r6, lr}
    6e34:	mov	r4, r0
    6e38:	mov	r5, r1
    6e3c:	ldr	r1, [r0, #52]	; 0x34
    6e40:	ldr	r3, [r0, #56]	; 0x38
    6e44:	cmp	r1, r3
    6e48:	beq	6e80 <readstat_add_note+0x50>
    6e4c:	mov	r0, r5
    6e50:	bl	4228 <strlen@plt>
    6e54:	add	r0, r0, #1
    6e58:	bl	4138 <malloc@plt>
    6e5c:	mov	r6, r0
    6e60:	mov	r1, r5
    6e64:	bl	40c0 <strcpy@plt>
    6e68:	ldr	r2, [r4, #48]	; 0x30
    6e6c:	ldr	r3, [r4, #52]	; 0x34
    6e70:	add	r1, r3, #1
    6e74:	str	r1, [r4, #52]	; 0x34
    6e78:	str	r6, [r2, r3, lsl #2]
    6e7c:	pop	{r4, r5, r6, pc}
    6e80:	lsl	r3, r1, #1
    6e84:	str	r3, [r0, #56]	; 0x38
    6e88:	lsl	r1, r1, #3
    6e8c:	ldr	r0, [r0, #48]	; 0x30
    6e90:	bl	4018 <realloc@plt>
    6e94:	str	r0, [r4, #48]	; 0x30
    6e98:	b	6e4c <readstat_add_note+0x1c>

00006e9c <readstat_variable_set_label>:
    6e9c:	push	{r4, lr}
    6ea0:	subs	r3, r1, #0
    6ea4:	beq	6ec0 <readstat_variable_set_label+0x24>
    6ea8:	ldr	r2, [pc, #36]	; 6ed4 <readstat_variable_set_label+0x38>
    6eac:	add	r2, pc, r2
    6eb0:	mov	r1, #1024	; 0x400
    6eb4:	add	r0, r0, #564	; 0x234
    6eb8:	bl	42ac <snprintf@plt>
    6ebc:	pop	{r4, pc}
    6ec0:	mov	r2, #1024	; 0x400
    6ec4:	mov	r1, #0
    6ec8:	add	r0, r0, #564	; 0x234
    6ecc:	bl	42d0 <memset@plt>
    6ed0:	pop	{r4, pc}
    6ed4:	.word	0x0001e220

00006ed8 <readstat_variable_set_format>:
    6ed8:	push	{r4, lr}
    6edc:	subs	r3, r1, #0
    6ee0:	beq	6efc <readstat_variable_set_format+0x24>
    6ee4:	ldr	r2, [pc, #36]	; 6f10 <readstat_variable_set_format+0x38>
    6ee8:	add	r2, pc, r2
    6eec:	mov	r1, #256	; 0x100
    6ef0:	add	r0, r0, #308	; 0x134
    6ef4:	bl	42ac <snprintf@plt>
    6ef8:	pop	{r4, pc}
    6efc:	mov	r2, #256	; 0x100
    6f00:	mov	r1, #0
    6f04:	add	r0, r0, #308	; 0x134
    6f08:	bl	42d0 <memset@plt>
    6f0c:	pop	{r4, pc}
    6f10:	.word	0x0001e1e4

00006f14 <readstat_variable_set_measure>:
    6f14:	str	r1, [r0, #2128]	; 0x850
    6f18:	bx	lr

00006f1c <readstat_variable_set_alignment>:
    6f1c:	str	r1, [r0, #2132]	; 0x854
    6f20:	bx	lr

00006f24 <readstat_variable_set_display_width>:
    6f24:	str	r1, [r0, #2136]	; 0x858
    6f28:	bx	lr

00006f2c <readstat_variable_set_label_set>:
    6f2c:	str	r1, [r0, #1588]	; 0x634
    6f30:	cmp	r1, #0
    6f34:	bxeq	lr
    6f38:	push	{r4, r5, r6, lr}
    6f3c:	mov	r4, r1
    6f40:	mov	r5, r0
    6f44:	ldr	r1, [r1, #276]	; 0x114
    6f48:	ldr	r3, [r4, #280]	; 0x118
    6f4c:	cmp	r1, r3
    6f50:	beq	6f6c <readstat_variable_set_label_set+0x40>
    6f54:	ldr	r2, [r4, #272]	; 0x110
    6f58:	ldr	r3, [r4, #276]	; 0x114
    6f5c:	add	r1, r3, #1
    6f60:	str	r1, [r4, #276]	; 0x114
    6f64:	str	r5, [r2, r3, lsl #2]
    6f68:	pop	{r4, r5, r6, pc}
    6f6c:	lsl	r3, r1, #1
    6f70:	str	r3, [r4, #280]	; 0x118
    6f74:	lsl	r1, r1, #3
    6f78:	ldr	r0, [r4, #272]	; 0x110
    6f7c:	bl	4018 <realloc@plt>
    6f80:	str	r0, [r4, #272]	; 0x110
    6f84:	b	6f54 <readstat_variable_set_label_set+0x28>

00006f88 <readstat_get_variable>:
    6f88:	ldr	r3, [r0, #28]
    6f8c:	cmp	r3, r1
    6f90:	ldrgt	r3, [r0, #24]
    6f94:	ldrgt	r0, [r3, r1, lsl #2]
    6f98:	movle	r0, #0
    6f9c:	bx	lr

00006fa0 <readstat_begin_writing_data>:
    6fa0:	push	{r4, r5, r6, r7, r8, lr}
    6fa4:	mov	r4, r0
    6fa8:	bl	3dc0 <readstat_validate_metadata@plt>
    6fac:	subs	r8, r0, #0
    6fb0:	bne	7088 <readstat_begin_writing_data+0xe8>
    6fb4:	ldr	r3, [r4, #28]
    6fb8:	cmp	r3, #0
    6fbc:	ble	707c <readstat_begin_writing_data+0xdc>
    6fc0:	mov	r6, #0
    6fc4:	mov	r7, r6
    6fc8:	mov	r1, r6
    6fcc:	mov	r0, r4
    6fd0:	bl	43a8 <readstat_get_variable@plt>
    6fd4:	mov	r5, r0
    6fd8:	ldr	r3, [r4, #228]	; 0xe4
    6fdc:	ldr	r1, [r0, #1600]	; 0x640
    6fe0:	ldr	r0, [r0]
    6fe4:	blx	r3
    6fe8:	str	r0, [r5, #1596]	; 0x63c
    6fec:	str	r7, [r5, #1592]	; 0x638
    6ff0:	add	r7, r7, r0
    6ff4:	add	r6, r6, #1
    6ff8:	ldr	r3, [r4, #28]
    6ffc:	cmp	r3, r6
    7000:	bgt	6fc8 <readstat_begin_writing_data+0x28>
    7004:	ldr	r3, [r4, #232]	; 0xe8
    7008:	cmp	r3, #0
    700c:	beq	7050 <readstat_begin_writing_data+0xb0>
    7010:	ldr	r3, [r4, #28]
    7014:	cmp	r3, #0
    7018:	ble	7050 <readstat_begin_writing_data+0xb0>
    701c:	mov	r5, #0
    7020:	mov	r1, r5
    7024:	mov	r0, r4
    7028:	bl	43a8 <readstat_get_variable@plt>
    702c:	mov	r1, r0
    7030:	mov	r0, r4
    7034:	bl	44c8 <readstat_validate_variable@plt>
    7038:	cmp	r0, #0
    703c:	bne	7084 <readstat_begin_writing_data+0xe4>
    7040:	add	r5, r5, #1
    7044:	ldr	r3, [r4, #28]
    7048:	cmp	r3, r5
    704c:	bgt	7020 <readstat_begin_writing_data+0x80>
    7050:	str	r7, [r4, #76]	; 0x4c
    7054:	mov	r0, r7
    7058:	bl	4138 <malloc@plt>
    705c:	str	r0, [r4, #72]	; 0x48
    7060:	ldr	r3, [r4, #276]	; 0x114
    7064:	cmp	r3, #0
    7068:	beq	7088 <readstat_begin_writing_data+0xe8>
    706c:	mov	r0, r4
    7070:	blx	r3
    7074:	mov	r8, r0
    7078:	b	7088 <readstat_begin_writing_data+0xe8>
    707c:	mov	r7, #0
    7080:	b	7050 <readstat_begin_writing_data+0xb0>
    7084:	mov	r8, r0
    7088:	mov	r0, r8
    708c:	pop	{r4, r5, r6, r7, r8, pc}

00007090 <readstat_get_string_ref>:
    7090:	ldr	r3, [r0, #64]	; 0x40
    7094:	cmp	r3, r1
    7098:	ldrgt	r3, [r0, #60]	; 0x3c
    709c:	ldrgt	r0, [r3, r1, lsl #2]
    70a0:	movle	r0, #0
    70a4:	bx	lr

000070a8 <readstat_writer_set_file_label>:
    70a8:	push	{r4, lr}
    70ac:	mov	r3, r1
    70b0:	ldr	r2, [pc, #20]	; 70cc <readstat_writer_set_file_label+0x24>
    70b4:	add	r2, pc, r2
    70b8:	mov	r1, #100	; 0x64
    70bc:	add	r0, r0, #88	; 0x58
    70c0:	bl	42ac <snprintf@plt>
    70c4:	mov	r0, #0
    70c8:	pop	{r4, pc}
    70cc:	.word	0x0001e018

000070d0 <readstat_writer_set_file_timestamp>:
    70d0:	str	r1, [r0, #20]
    70d4:	mov	r0, #0
    70d8:	bx	lr

000070dc <readstat_writer_set_table_name>:
    70dc:	push	{r4, lr}
    70e0:	mov	r3, r1
    70e4:	ldr	r2, [pc, #20]	; 7100 <readstat_writer_set_table_name+0x24>
    70e8:	add	r2, pc, r2
    70ec:	mov	r1, #33	; 0x21
    70f0:	add	r0, r0, #188	; 0xbc
    70f4:	bl	42ac <snprintf@plt>
    70f8:	mov	r0, #0
    70fc:	pop	{r4, pc}
    7100:	.word	0x0001dfe4

00007104 <readstat_writer_set_fweight_variable>:
    7104:	push	{r4, r5, r6, lr}
    7108:	mov	r5, r0
    710c:	mov	r4, r1
    7110:	mov	r0, r1
    7114:	bl	4570 <readstat_variable_get_type_class@plt>
    7118:	cmp	r0, #0
    711c:	strne	r4, [r5, #224]	; 0xe0
    7120:	movne	r0, #0
    7124:	moveq	r0, #30
    7128:	pop	{r4, r5, r6, pc}

0000712c <readstat_writer_set_file_format_version>:
    712c:	str	r1, [r0, #8]
    7130:	mov	r0, #0
    7134:	bx	lr

00007138 <readstat_writer_set_file_format_is_64bit>:
    7138:	str	r1, [r0, #12]
    713c:	mov	r0, #0
    7140:	bx	lr

00007144 <readstat_writer_set_compression>:
    7144:	str	r1, [r0, #16]
    7148:	mov	r0, #0
    714c:	bx	lr

00007150 <readstat_writer_set_error_handler>:
    7150:	str	r1, [r0, #296]	; 0x128
    7154:	mov	r0, #0
    7158:	bx	lr

0000715c <readstat_begin_writing_file>:
    715c:	push	{r4, lr}
    7160:	str	r2, [r0, #80]	; 0x50
    7164:	str	r1, [r0, #304]	; 0x130
    7168:	mov	r2, #1
    716c:	str	r2, [r0, #308]	; 0x134
    7170:	bl	3dc0 <readstat_validate_metadata@plt>
    7174:	pop	{r4, pc}

00007178 <readstat_begin_row>:
    7178:	push	{r4, r5, r6, lr}
    717c:	ldr	r3, [r0, #308]	; 0x134
    7180:	cmp	r3, #0
    7184:	moveq	r5, #14
    7188:	bne	7194 <readstat_begin_row+0x1c>
    718c:	mov	r0, r5
    7190:	pop	{r4, r5, r6, pc}
    7194:	mov	r4, r0
    7198:	ldr	r3, [r0, #84]	; 0x54
    719c:	cmp	r3, #0
    71a0:	movne	r5, #0
    71a4:	beq	71bc <readstat_begin_row+0x44>
    71a8:	ldr	r2, [r4, #76]	; 0x4c
    71ac:	mov	r1, #0
    71b0:	ldr	r0, [r4, #72]	; 0x48
    71b4:	bl	42d0 <memset@plt>
    71b8:	b	718c <readstat_begin_row+0x14>
    71bc:	bl	6fa0 <readstat_begin_writing_data>
    71c0:	mov	r5, r0
    71c4:	b	71a8 <readstat_begin_row+0x30>

000071c8 <readstat_insert_int8_value>:
    71c8:	ldr	r3, [r0, #308]	; 0x134
    71cc:	cmp	r3, #0
    71d0:	bne	71dc <readstat_insert_int8_value+0x14>
    71d4:	mov	r0, #14
    71d8:	bx	lr
    71dc:	ldr	r3, [r1]
    71e0:	cmp	r3, #1
    71e4:	beq	71f0 <readstat_insert_int8_value+0x28>
    71e8:	mov	r0, #12
    71ec:	bx	lr
    71f0:	push	{r4, lr}
    71f4:	ldr	lr, [r0, #72]	; 0x48
    71f8:	ldr	ip, [r1, #1592]	; 0x638
    71fc:	ldr	r3, [r0, #236]	; 0xec
    7200:	add	r0, lr, ip
    7204:	blx	r3
    7208:	pop	{r4, pc}

0000720c <readstat_insert_int16_value>:
    720c:	ldr	r3, [r0, #308]	; 0x134
    7210:	cmp	r3, #0
    7214:	bne	7220 <readstat_insert_int16_value+0x14>
    7218:	mov	r0, #14
    721c:	bx	lr
    7220:	ldr	r3, [r1]
    7224:	cmp	r3, #2
    7228:	beq	7234 <readstat_insert_int16_value+0x28>
    722c:	mov	r0, #12
    7230:	bx	lr
    7234:	push	{r4, lr}
    7238:	ldr	lr, [r0, #72]	; 0x48
    723c:	ldr	ip, [r1, #1592]	; 0x638
    7240:	ldr	r3, [r0, #240]	; 0xf0
    7244:	add	r0, lr, ip
    7248:	blx	r3
    724c:	pop	{r4, pc}

00007250 <readstat_insert_int32_value>:
    7250:	ldr	r3, [r0, #308]	; 0x134
    7254:	cmp	r3, #0
    7258:	bne	7264 <readstat_insert_int32_value+0x14>
    725c:	mov	r0, #14
    7260:	bx	lr
    7264:	ldr	r3, [r1]
    7268:	cmp	r3, #3
    726c:	beq	7278 <readstat_insert_int32_value+0x28>
    7270:	mov	r0, #12
    7274:	bx	lr
    7278:	push	{r4, lr}
    727c:	ldr	lr, [r0, #72]	; 0x48
    7280:	ldr	ip, [r1, #1592]	; 0x638
    7284:	ldr	r3, [r0, #244]	; 0xf4
    7288:	add	r0, lr, ip
    728c:	blx	r3
    7290:	pop	{r4, pc}

00007294 <readstat_insert_float_value>:
    7294:	ldr	r3, [r0, #308]	; 0x134
    7298:	cmp	r3, #0
    729c:	bne	72a8 <readstat_insert_float_value+0x14>
    72a0:	mov	r0, #14
    72a4:	bx	lr
    72a8:	ldr	r3, [r1]
    72ac:	cmp	r3, #4
    72b0:	beq	72bc <readstat_insert_float_value+0x28>
    72b4:	mov	r0, #12
    72b8:	bx	lr
    72bc:	push	{r4, lr}
    72c0:	ldr	ip, [r0, #72]	; 0x48
    72c4:	ldr	r2, [r1, #1592]	; 0x638
    72c8:	ldr	r3, [r0, #248]	; 0xf8
    72cc:	add	r0, ip, r2
    72d0:	blx	r3
    72d4:	pop	{r4, pc}

000072d8 <readstat_insert_double_value>:
    72d8:	ldr	r3, [r0, #308]	; 0x134
    72dc:	cmp	r3, #0
    72e0:	bne	72ec <readstat_insert_double_value+0x14>
    72e4:	mov	r0, #14
    72e8:	bx	lr
    72ec:	ldr	r3, [r1]
    72f0:	cmp	r3, #5
    72f4:	beq	7300 <readstat_insert_double_value+0x28>
    72f8:	mov	r0, #12
    72fc:	bx	lr
    7300:	push	{r4, lr}
    7304:	ldr	ip, [r0, #72]	; 0x48
    7308:	ldr	r2, [r1, #1592]	; 0x638
    730c:	ldr	r3, [r0, #252]	; 0xfc
    7310:	add	r0, ip, r2
    7314:	blx	r3
    7318:	pop	{r4, pc}

0000731c <readstat_insert_string_value>:
    731c:	ldr	r3, [r0, #308]	; 0x134
    7320:	cmp	r3, #0
    7324:	bne	7330 <readstat_insert_string_value+0x14>
    7328:	mov	r0, #14
    732c:	bx	lr
    7330:	ldr	r3, [r1]
    7334:	cmp	r3, #0
    7338:	beq	7344 <readstat_insert_string_value+0x28>
    733c:	mov	r0, #12
    7340:	bx	lr
    7344:	push	{r4, lr}
    7348:	ldr	lr, [r0, #72]	; 0x48
    734c:	ldr	ip, [r1, #1592]	; 0x638
    7350:	ldr	r3, [r0, #256]	; 0x100
    7354:	add	r0, lr, ip
    7358:	blx	r3
    735c:	pop	{r4, pc}

00007360 <readstat_insert_string_ref>:
    7360:	ldr	r3, [r0, #308]	; 0x134
    7364:	cmp	r3, #0
    7368:	bne	7374 <readstat_insert_string_ref+0x14>
    736c:	mov	r0, #14
    7370:	bx	lr
    7374:	ldr	r3, [r1]
    7378:	cmp	r3, #6
    737c:	beq	7388 <readstat_insert_string_ref+0x28>
    7380:	mov	r0, #12
    7384:	bx	lr
    7388:	ldr	r3, [r0, #260]	; 0x104
    738c:	cmp	r3, #0
    7390:	beq	73fc <readstat_insert_string_ref+0x9c>
    7394:	push	{r4, r5, r6, r7, r8, lr}
    7398:	cmp	r2, #0
    739c:	beq	73b8 <readstat_insert_string_ref+0x58>
    73a0:	ldrd	r4, [r2, #8]
    73a4:	mvn	r6, #0
    73a8:	mvn	r7, #0
    73ac:	cmp	r5, r7
    73b0:	cmpeq	r4, r6
    73b4:	beq	73d0 <readstat_insert_string_ref+0x70>
    73b8:	ldr	lr, [r0, #72]	; 0x48
    73bc:	ldr	ip, [r1, #1592]	; 0x638
    73c0:	ldr	r3, [r0, #260]	; 0x104
    73c4:	add	r0, lr, ip
    73c8:	blx	r3
    73cc:	pop	{r4, r5, r6, r7, r8, pc}
    73d0:	ldrd	r4, [r2]
    73d4:	cmp	r5, r7
    73d8:	cmpeq	r4, r6
    73dc:	bne	73b8 <readstat_insert_string_ref+0x58>
    73e0:	ldr	r4, [r0, #84]	; 0x54
    73e4:	asr	r5, r4, #31
    73e8:	strd	r4, [r2, #8]
    73ec:	ldr	r4, [r1, #4]
    73f0:	asr	r5, r4, #31
    73f4:	strd	r4, [r2]
    73f8:	b	73b8 <readstat_insert_string_ref+0x58>
    73fc:	mov	r0, #33	; 0x21
    7400:	bx	lr

00007404 <readstat_insert_missing_value>:
    7404:	ldr	r3, [r0, #308]	; 0x134
    7408:	cmp	r3, #0
    740c:	bne	7418 <readstat_insert_missing_value+0x14>
    7410:	mov	r0, #14
    7414:	bx	lr
    7418:	push	{r4, lr}
    741c:	ldr	r3, [r1]
    7420:	cmp	r3, #0
    7424:	beq	7448 <readstat_insert_missing_value+0x44>
    7428:	cmp	r3, #6
    742c:	beq	7460 <readstat_insert_missing_value+0x5c>
    7430:	ldr	ip, [r0, #72]	; 0x48
    7434:	ldr	r2, [r1, #1592]	; 0x638
    7438:	ldr	r3, [r0, #268]	; 0x10c
    743c:	add	r0, ip, r2
    7440:	blx	r3
    7444:	pop	{r4, pc}
    7448:	ldr	ip, [r0, #72]	; 0x48
    744c:	ldr	r2, [r1, #1592]	; 0x638
    7450:	ldr	r3, [r0, #264]	; 0x108
    7454:	add	r0, ip, r2
    7458:	blx	r3
    745c:	pop	{r4, pc}
    7460:	mov	r2, #0
    7464:	bl	3f70 <readstat_insert_string_ref@plt>
    7468:	pop	{r4, pc}

0000746c <readstat_insert_tagged_missing_value>:
    746c:	ldr	r3, [r0, #308]	; 0x134
    7470:	cmp	r3, #0
    7474:	bne	7480 <readstat_insert_tagged_missing_value+0x14>
    7478:	mov	r0, #14
    747c:	bx	lr
    7480:	push	{r4, lr}
    7484:	ldr	r3, [r0, #272]	; 0x110
    7488:	cmp	r3, #0
    748c:	beq	74a4 <readstat_insert_tagged_missing_value+0x38>
    7490:	ldr	ip, [r0, #72]	; 0x48
    7494:	ldr	r0, [r1, #1592]	; 0x638
    7498:	add	r0, ip, r0
    749c:	blx	r3
    74a0:	pop	{r4, pc}
    74a4:	ldr	ip, [r0, #72]	; 0x48
    74a8:	ldr	r2, [r1, #1592]	; 0x638
    74ac:	ldr	r3, [r0, #268]	; 0x10c
    74b0:	add	r0, ip, r2
    74b4:	blx	r3
    74b8:	mov	r0, #23
    74bc:	pop	{r4, pc}

000074c0 <readstat_end_row>:
    74c0:	ldr	r3, [r0, #308]	; 0x134
    74c4:	cmp	r3, #0
    74c8:	bne	74d4 <readstat_end_row+0x14>
    74cc:	mov	r0, #14
    74d0:	bx	lr
    74d4:	push	{r4, lr}
    74d8:	mov	r4, r0
    74dc:	ldr	r3, [r0, #280]	; 0x118
    74e0:	ldr	r2, [r0, #76]	; 0x4c
    74e4:	ldr	r1, [r0, #72]	; 0x48
    74e8:	blx	r3
    74ec:	cmp	r0, #0
    74f0:	ldreq	r3, [r4, #84]	; 0x54
    74f4:	addeq	r3, r3, #1
    74f8:	streq	r3, [r4, #84]	; 0x54
    74fc:	pop	{r4, pc}

00007500 <readstat_end_writing>:
    7500:	ldr	r3, [r0, #308]	; 0x134
    7504:	cmp	r3, #0
    7508:	bne	7514 <readstat_end_writing+0x14>
    750c:	mov	r0, #14
    7510:	bx	lr
    7514:	ldr	r3, [r0, #84]	; 0x54
    7518:	ldr	r2, [r0, #80]	; 0x50
    751c:	cmp	r3, r2
    7520:	beq	752c <readstat_end_writing+0x2c>
    7524:	mov	r0, #9
    7528:	bx	lr
    752c:	push	{r4, r5, r6, r7, r8, lr}
    7530:	mov	r4, r0
    7534:	cmp	r3, #0
    7538:	beq	757c <readstat_end_writing+0x7c>
    753c:	ldr	r7, [r4, #64]	; 0x40
    7540:	cmp	r7, #1
    7544:	ble	75a4 <readstat_end_writing+0xa4>
    7548:	ldr	r8, [r4, #60]	; 0x3c
    754c:	mov	r5, r8
    7550:	mov	r6, #1
    7554:	mov	r0, r5
    7558:	add	r5, r5, #4
    755c:	mov	r1, r5
    7560:	bl	6484 <readstat_compare_string_refs>
    7564:	cmp	r0, #0
    7568:	bgt	758c <readstat_end_writing+0x8c>
    756c:	add	r6, r6, #1
    7570:	cmp	r6, r7
    7574:	bne	7554 <readstat_end_writing+0x54>
    7578:	b	75a4 <readstat_end_writing+0xa4>
    757c:	bl	6fa0 <readstat_begin_writing_data>
    7580:	cmp	r0, #0
    7584:	beq	753c <readstat_end_writing+0x3c>
    7588:	pop	{r4, r5, r6, r7, r8, pc}
    758c:	ldr	r3, [pc, #48]	; 75c4 <readstat_end_writing+0xc4>
    7590:	add	r3, pc, r3
    7594:	mov	r2, #4
    7598:	mov	r1, r7
    759c:	mov	r0, r8
    75a0:	bl	4468 <qsort@plt>
    75a4:	ldr	r3, [r4, #284]	; 0x11c
    75a8:	cmp	r3, #0
    75ac:	beq	75bc <readstat_end_writing+0xbc>
    75b0:	mov	r0, r4
    75b4:	blx	r3
    75b8:	pop	{r4, r5, r6, r7, r8, pc}
    75bc:	mov	r0, #0
    75c0:	pop	{r4, r5, r6, r7, r8, pc}
    75c4:	.word	0xffffeeec

000075c8 <memreverse>:
    75c8:	push	{r4, r5, r6, lr}
    75cc:	mov	r5, r0
    75d0:	mov	r4, r1
    75d4:	bl	3ed4 <machine_is_little_endian@plt>
    75d8:	cmp	r0, #0
    75dc:	popeq	{r4, r5, r6, pc}
    75e0:	add	r0, r4, r4, lsr #31
    75e4:	asr	r0, r0, #1
    75e8:	cmp	r0, #0
    75ec:	pople	{r4, r5, r6, pc}
    75f0:	mov	r3, r5
    75f4:	add	r1, r5, r4
    75f8:	add	r0, r5, r0
    75fc:	ldrb	r2, [r3]
    7600:	ldrb	ip, [r1, #-1]
    7604:	strb	ip, [r3], #1
    7608:	strb	r2, [r1, #-1]!
    760c:	cmp	r3, r0
    7610:	bne	75fc <memreverse+0x34>
    7614:	pop	{r4, r5, r6, pc}

00007618 <get_native>:
    7618:	push	{r4, r5, r6, r7, r8, lr}
    761c:	ldr	r5, [pc, #76]	; 7670 <get_native+0x58>
    7620:	add	r5, pc, r5
    7624:	mov	r4, #0
    7628:	ldr	r6, [pc, #68]	; 7674 <get_native+0x5c>
    762c:	add	r6, pc, r6
    7630:	add	r6, r6, #24
    7634:	mov	r7, #8
    7638:	mov	r2, r7
    763c:	mov	r1, r5
    7640:	mov	r0, r6
    7644:	bl	3fc4 <memcmp@plt>
    7648:	cmp	r0, #0
    764c:	beq	7668 <get_native+0x50>
    7650:	add	r4, r4, #1
    7654:	add	r5, r5, #8
    7658:	cmp	r4, #3
    765c:	bne	7638 <get_native+0x20>
    7660:	mvn	r0, #0
    7664:	pop	{r4, r5, r6, r7, r8, pc}
    7668:	add	r0, r4, #1
    766c:	pop	{r4, r5, r6, r7, r8, pc}
    7670:	.word	0x0003dcf8
    7674:	.word	0x0003dcec

00007678 <cnxptiee>:
    7678:	push	{r4, r5, r6, r7, lr}
    767c:	sub	sp, sp, #36	; 0x24
    7680:	mov	r5, r0
    7684:	mov	r6, r2
    7688:	mov	r7, r3
    768c:	subs	r4, r1, #0
    7690:	beq	775c <cnxptiee+0xe4>
    7694:	cmp	r4, #1
    7698:	blt	79f8 <cnxptiee+0x380>
    769c:	cmp	r4, #2
    76a0:	ble	76d8 <cnxptiee+0x60>
    76a4:	cmp	r4, #3
    76a8:	bne	79f8 <cnxptiee+0x380>
    76ac:	cmp	r7, #3
    76b0:	beq	7774 <cnxptiee+0xfc>
    76b4:	add	r3, r5, #8
    76b8:	add	r2, sp, #24
    76bc:	mov	r0, r5
    76c0:	ldrb	r1, [r3, #-1]!
    76c4:	strb	r1, [r2], #1
    76c8:	cmp	r3, r0
    76cc:	bne	76c0 <cnxptiee+0x48>
    76d0:	add	r5, sp, #24
    76d4:	mov	r4, #2
    76d8:	cmp	r7, #0
    76dc:	beq	7768 <cnxptiee+0xf0>
    76e0:	sub	r3, r7, #1
    76e4:	cmp	r3, #2
    76e8:	bhi	7a04 <cnxptiee+0x38c>
    76ec:	cmp	r4, r7
    76f0:	beq	777c <cnxptiee+0x104>
    76f4:	cmp	r4, #1
    76f8:	beq	78f8 <cnxptiee+0x280>
    76fc:	cmp	r4, #2
    7700:	bne	771c <cnxptiee+0xa4>
    7704:	cmp	r7, #1
    7708:	beq	7794 <cnxptiee+0x11c>
    770c:	ldr	r2, [r5]
    7710:	ldr	r3, [r5, #4]
    7714:	str	r2, [r6]
    7718:	str	r3, [r6, #4]
    771c:	cmp	r7, #3
    7720:	movne	r0, #0
    7724:	bne	79fc <cnxptiee+0x384>
    7728:	add	r3, sp, #24
    772c:	ldr	r0, [r6]
    7730:	ldr	r1, [r6, #4]
    7734:	stmia	r3!, {r0, r1}
    7738:	add	r2, sp, #32
    773c:	sub	r3, r6, #1
    7740:	add	r6, r6, #7
    7744:	ldrb	r1, [r2, #-1]!
    7748:	strb	r1, [r3, #1]!
    774c:	cmp	r3, r6
    7750:	bne	7744 <cnxptiee+0xcc>
    7754:	mov	r0, #0
    7758:	b	79fc <cnxptiee+0x384>
    775c:	bl	41ec <get_native@plt>
    7760:	mov	r4, r0
    7764:	b	7694 <cnxptiee+0x1c>
    7768:	bl	41ec <get_native@plt>
    776c:	mov	r7, r0
    7770:	b	76e0 <cnxptiee+0x68>
    7774:	mov	r4, r7
    7778:	b	76ec <cnxptiee+0x74>
    777c:	ldr	r2, [r5]
    7780:	ldr	r3, [r5, #4]
    7784:	str	r2, [r6]
    7788:	str	r3, [r6, #4]
    778c:	mov	r0, #0
    7790:	b	79fc <cnxptiee+0x384>
    7794:	mov	r4, #0
    7798:	str	r4, [sp, #12]
    779c:	add	r3, sp, #16
    77a0:	ldr	r0, [r5]
    77a4:	ldr	r1, [r5, #4]
    77a8:	stmia	r3!, {r0, r1}
    77ac:	ldr	r5, [r5, #4]
    77b0:	add	r0, sp, #32
    77b4:	ldr	r3, [sp, #16]
    77b8:	str	r3, [r0, #-24]!	; 0xffffffe8
    77bc:	mov	r1, #4
    77c0:	bl	3de4 <memreverse@plt>
    77c4:	add	r0, sp, #32
    77c8:	str	r5, [r0, #-20]!	; 0xffffffec
    77cc:	mov	r1, #4
    77d0:	bl	3de4 <memreverse@plt>
    77d4:	str	r4, [r6]
    77d8:	str	r4, [r6, #4]
    77dc:	ldrb	r3, [sp, #16]
    77e0:	cmp	r3, #255	; 0xff
    77e4:	beq	7890 <cnxptiee+0x218>
    77e8:	ldr	r2, [sp, #8]
    77ec:	bic	r1, r2, #-16777216	; 0xff000000
    77f0:	bic	r1, r1, #15728640	; 0xf00000
    77f4:	str	r1, [sp]
    77f8:	ldr	r0, [sp, #12]
    77fc:	str	r0, [sp, #4]
    7800:	orrs	r3, r2, r0
    7804:	beq	78c8 <cnxptiee+0x250>
    7808:	lsl	r3, r2, #1
    780c:	lsr	r3, r3, #21
    7810:	sub	r3, r3, #1020	; 0x3fc
    7814:	sub	r3, r3, #3
    7818:	orr	r1, r1, #1048576	; 0x100000
    781c:	ands	lr, r3, #3
    7820:	streq	r1, [sp]
    7824:	lsrne	ip, r0, #24
    7828:	andne	ip, ip, #224	; 0xe0
    782c:	rsbne	r4, lr, #8
    7830:	lsrne	ip, ip, r4
    7834:	uxtbne	ip, ip
    7838:	orrne	r1, ip, r1, lsl lr
    783c:	strne	r1, [sp]
    7840:	lslne	r0, r0, lr
    7844:	strne	r0, [sp, #4]
    7848:	lsr	r2, r2, #24
    784c:	asr	r1, r3, #2
    7850:	add	r1, r1, #65	; 0x41
    7854:	and	r0, r2, #128	; 0x80
    7858:	orr	r1, r1, r0
    785c:	ldr	r0, [sp]
    7860:	orr	r1, r0, r1, lsl #24
    7864:	str	r1, [sp]
    7868:	cmn	r3, #260	; 0x104
    786c:	blt	78b8 <cnxptiee+0x240>
    7870:	cmp	r3, #248	; 0xf8
    7874:	ble	78c8 <cnxptiee+0x250>
    7878:	mvn	r3, #0
    787c:	str	r3, [r6, #1]
    7880:	str	r3, [r6, #4]
    7884:	orr	r2, r2, #127	; 0x7f
    7888:	strb	r2, [r6]
    788c:	b	78f0 <cnxptiee+0x278>
    7890:	ldrb	r3, [sp, #17]
    7894:	cmp	r3, #255	; 0xff
    7898:	bne	77e8 <cnxptiee+0x170>
    789c:	ldrb	r3, [sp, #18]
    78a0:	mvn	r3, r3
    78a4:	uxtb	r3, r3
    78a8:	cmp	r3, #210	; 0xd2
    78ac:	moveq	r3, #109	; 0x6d
    78b0:	strb	r3, [r6]
    78b4:	b	78f0 <cnxptiee+0x278>
    78b8:	mov	r3, #0
    78bc:	str	r3, [r6]
    78c0:	str	r3, [r6, #4]
    78c4:	b	78f0 <cnxptiee+0x278>
    78c8:	mov	r1, #4
    78cc:	mov	r0, sp
    78d0:	bl	3de4 <memreverse@plt>
    78d4:	ldr	r3, [sp]
    78d8:	str	r3, [r6]
    78dc:	mov	r1, #4
    78e0:	add	r0, sp, r1
    78e4:	bl	3de4 <memreverse@plt>
    78e8:	ldr	r3, [sp, #4]
    78ec:	str	r3, [r6, #4]
    78f0:	mov	r0, #0
    78f4:	b	79fc <cnxptiee+0x384>
    78f8:	mov	r3, #0
    78fc:	str	r3, [sp, #8]
    7900:	str	r3, [sp, #12]
    7904:	add	r2, sp, #16
    7908:	ldr	r0, [r5]
    790c:	ldr	r1, [r5, #4]
    7910:	stmia	r2!, {r0, r1}
    7914:	str	r3, [r6]
    7918:	str	r3, [r6, #4]
    791c:	ldrb	r4, [sp, #16]
    7920:	cmp	r4, r3
    7924:	beq	7940 <cnxptiee+0x2c8>
    7928:	mov	r2, #7
    792c:	mov	r1, r6
    7930:	add	r0, sp, #17
    7934:	bl	3fc4 <memcmp@plt>
    7938:	cmp	r0, #0
    793c:	beq	79b8 <cnxptiee+0x340>
    7940:	add	r0, sp, #32
    7944:	ldr	r3, [sp, #16]
    7948:	str	r3, [r0, #-24]!	; 0xffffffe8
    794c:	mov	r1, #4
    7950:	bl	3de4 <memreverse@plt>
    7954:	add	r0, sp, #32
    7958:	ldr	r3, [sp, #20]
    795c:	str	r3, [r0, #-20]!	; 0xffffffec
    7960:	mov	r1, #4
    7964:	bl	3de4 <memreverse@plt>
    7968:	ldr	r3, [sp, #8]
    796c:	bic	r2, r3, #-2147483648	; 0x80000000
    7970:	cmn	r2, #-2147483647	; 0x80000001
    7974:	beq	79d0 <cnxptiee+0x358>
    7978:	bic	r0, r3, #-16777216	; 0xff000000
    797c:	str	r0, [sp]
    7980:	ldr	r2, [sp, #12]
    7984:	str	r2, [sp, #4]
    7988:	orrs	r1, r3, r2
    798c:	beq	771c <cnxptiee+0xa4>
    7990:	tst	r3, #8388608	; 0x800000
    7994:	bne	7a0c <cnxptiee+0x394>
    7998:	tst	r3, #4194304	; 0x400000
    799c:	bne	7a80 <cnxptiee+0x408>
    79a0:	and	r1, r3, #2097152	; 0x200000
    79a4:	cmp	r1, #0
    79a8:	movne	ip, #1
    79ac:	moveq	ip, #0
    79b0:	beq	7a2c <cnxptiee+0x3b4>
    79b4:	b	7a10 <cnxptiee+0x398>
    79b8:	mvn	r3, #0
    79bc:	strb	r3, [r6, #1]
    79c0:	strb	r3, [r6]
    79c4:	mvn	r4, r4
    79c8:	strb	r4, [r6, #2]
    79cc:	b	771c <cnxptiee+0xa4>
    79d0:	ldr	r2, [sp, #12]
    79d4:	cmn	r2, #1
    79d8:	bne	7978 <cnxptiee+0x300>
    79dc:	and	r3, r3, #-2147483648	; 0x80000000
    79e0:	orr	r3, r3, #2130706432	; 0x7f000000
    79e4:	orr	r3, r3, #15728640	; 0xf00000
    79e8:	str	r3, [sp]
    79ec:	mov	r3, #0
    79f0:	str	r3, [sp, #4]
    79f4:	b	7a54 <cnxptiee+0x3dc>
    79f8:	mvn	r0, #0
    79fc:	add	sp, sp, #36	; 0x24
    7a00:	pop	{r4, r5, r6, r7, pc}
    7a04:	mvn	r0, #1
    7a08:	b	79fc <cnxptiee+0x384>
    7a0c:	mov	ip, #3
    7a10:	lsr	r0, r0, ip
    7a14:	str	r0, [sp]
    7a18:	and	lr, r3, #7
    7a1c:	rsb	r1, ip, #32
    7a20:	lsr	r0, r2, ip
    7a24:	orr	r2, r0, lr, lsl r1
    7a28:	str	r2, [sp, #4]
    7a2c:	and	r1, r4, #127	; 0x7f
    7a30:	add	r1, ip, r1, lsl #2
    7a34:	add	r1, r1, #760	; 0x2f8
    7a38:	add	r1, r1, #3
    7a3c:	ldr	r2, [sp]
    7a40:	bic	r2, r2, #1048576	; 0x100000
    7a44:	and	r3, r3, #-2147483648	; 0x80000000
    7a48:	orr	r3, r2, r3
    7a4c:	orr	r3, r3, r1, lsl #20
    7a50:	str	r3, [sp]
    7a54:	mov	r1, #4
    7a58:	mov	r0, sp
    7a5c:	bl	3de4 <memreverse@plt>
    7a60:	ldr	r3, [sp]
    7a64:	str	r3, [r6]
    7a68:	mov	r1, #4
    7a6c:	add	r0, sp, r1
    7a70:	bl	3de4 <memreverse@plt>
    7a74:	ldr	r3, [sp, #4]
    7a78:	str	r3, [r6, #4]
    7a7c:	b	771c <cnxptiee+0xa4>
    7a80:	mov	ip, #2
    7a84:	b	7a10 <cnxptiee+0x398>

00007a88 <sas_read8>:
    7a88:	push	{lr}		; (str lr, [sp, #-4]!)
    7a8c:	sub	sp, sp, #12
    7a90:	mov	r2, r0
    7a94:	mov	ip, r1
    7a98:	mov	r3, sp
    7a9c:	ldr	r0, [r0]
    7aa0:	ldr	r1, [r2, #4]
    7aa4:	stmia	r3!, {r0, r1}
    7aa8:	cmp	ip, #0
    7aac:	bne	7abc <sas_read8+0x34>
    7ab0:	ldrd	r0, [sp]
    7ab4:	add	sp, sp, #12
    7ab8:	pop	{pc}		; (ldr pc, [sp], #4)
    7abc:	ldrd	r0, [sp]
    7ac0:	bl	3d9c <byteswap8@plt>
    7ac4:	b	7ab4 <sas_read8+0x2c>

00007ac8 <sas_read4>:
    7ac8:	ldr	r0, [r0]
    7acc:	cmp	r1, #0
    7ad0:	bxeq	lr
    7ad4:	push	{r4, lr}
    7ad8:	bl	3db4 <byteswap4@plt>
    7adc:	pop	{r4, pc}

00007ae0 <sas_read2>:
    7ae0:	ldrh	r0, [r0]
    7ae4:	cmp	r1, #0
    7ae8:	bxeq	lr
    7aec:	push	{r4, lr}
    7af0:	bl	3ec8 <byteswap2@plt>
    7af4:	pop	{r4, pc}

00007af8 <sas_subheader_remainder>:
    7af8:	add	r1, r1, #2
    7afc:	sub	r0, r0, r1, lsl #1
    7b00:	bx	lr

00007b04 <sas_read_header>:
    7b04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7b08:	sub	sp, sp, #1408	; 0x580
    7b0c:	sub	sp, sp, #12
    7b10:	mov	r4, r0
    7b14:	mov	r5, r1
    7b18:	mov	r7, r2
    7b1c:	mov	r8, r3
    7b20:	ldr	r9, [pc, #1424]	; 80b8 <sas_read_header+0x5b4>
    7b24:	add	r9, pc, r9
    7b28:	add	r6, sp, #64	; 0x40
    7b2c:	mov	r2, #44	; 0x2c
    7b30:	mov	r1, #0
    7b34:	mov	r0, r6
    7b38:	bl	42d0 <memset@plt>
    7b3c:	mov	r3, #1
    7b40:	str	r3, [sp, #76]	; 0x4c
    7b44:	mov	r3, #60	; 0x3c
    7b48:	str	r3, [sp, #84]	; 0x54
    7b4c:	mov	r0, r6
    7b50:	bl	3e74 <mktime@plt>
    7b54:	mov	r6, r0
    7b58:	ldr	r3, [r4, #12]
    7b5c:	ldr	r2, [r4, #20]
    7b60:	mov	r1, #164	; 0xa4
    7b64:	add	r0, sp, #1248	; 0x4e0
    7b68:	add	r0, r0, #4
    7b6c:	blx	r3
    7b70:	cmp	r0, #163	; 0xa3
    7b74:	movls	r0, #2
    7b78:	bls	7c08 <sas_read_header+0x104>
    7b7c:	ldr	r3, [pc, #1336]	; 80bc <sas_read_header+0x5b8>
    7b80:	ldr	r3, [r9, r3]
    7b84:	str	r3, [sp, #12]
    7b88:	mov	r2, #32
    7b8c:	mov	r1, r3
    7b90:	add	r0, sp, #1248	; 0x4e0
    7b94:	add	r0, r0, #4
    7b98:	bl	3fc4 <memcmp@plt>
    7b9c:	cmp	r0, #0
    7ba0:	beq	7bd0 <sas_read_header+0xcc>
    7ba4:	ldr	r3, [pc, #1300]	; 80c0 <sas_read_header+0x5bc>
    7ba8:	ldr	r3, [r9, r3]
    7bac:	str	r3, [sp, #12]
    7bb0:	mov	r2, #32
    7bb4:	mov	r1, r3
    7bb8:	add	r0, sp, #1248	; 0x4e0
    7bbc:	add	r0, r0, #4
    7bc0:	bl	3fc4 <memcmp@plt>
    7bc4:	cmp	r0, #0
    7bc8:	movne	r0, #5
    7bcc:	bne	7c08 <sas_read_header+0x104>
    7bd0:	ldrb	r3, [sp, #1287]	; 0x507
    7bd4:	cmp	r3, #51	; 0x33
    7bd8:	moveq	r3, #4
    7bdc:	streq	r3, [r5, #24]
    7be0:	ldrb	r3, [sp, #1284]	; 0x504
    7be4:	cmp	r3, #51	; 0x33
    7be8:	moveq	r3, #1
    7bec:	streq	r3, [r5, #4]
    7bf0:	ldrb	r3, [sp, #1289]	; 0x509
    7bf4:	cmp	r3, #0
    7bf8:	beq	7c14 <sas_read_header+0x110>
    7bfc:	cmp	r3, #1
    7c00:	movne	r0, #5
    7c04:	beq	7c68 <sas_read_header+0x164>
    7c08:	add	sp, sp, #1408	; 0x580
    7c0c:	add	sp, sp, #12
    7c10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7c14:	bl	3ed4 <machine_is_little_endian@plt>
    7c18:	mov	r9, r0
    7c1c:	mov	r3, #0
    7c20:	str	r3, [r5]
    7c24:	ldrb	r3, [sp, #1322]	; 0x52a
    7c28:	ldr	r2, [pc, #1172]	; 80c4 <sas_read_header+0x5c0>
    7c2c:	add	r2, pc, r2
    7c30:	ldr	r2, [r2]
    7c34:	cmp	r3, r2
    7c38:	beq	7c80 <sas_read_header+0x17c>
    7c3c:	ldr	r1, [pc, #1156]	; 80c8 <sas_read_header+0x5c4>
    7c40:	add	r1, pc, r1
    7c44:	mov	r2, #1
    7c48:	ldr	r0, [r1, #36]	; 0x24
    7c4c:	cmp	r0, r3
    7c50:	beq	7c84 <sas_read_header+0x180>
    7c54:	add	r2, r2, #1
    7c58:	add	r1, r1, #36	; 0x24
    7c5c:	cmp	r2, #62	; 0x3e
    7c60:	bne	7c48 <sas_read_header+0x144>
    7c64:	b	7c9c <sas_read_header+0x198>
    7c68:	bl	3ed4 <machine_is_little_endian@plt>
    7c6c:	clz	r9, r0
    7c70:	lsr	r9, r9, #5
    7c74:	mov	r3, #1
    7c78:	str	r3, [r5]
    7c7c:	b	7c24 <sas_read_header+0x120>
    7c80:	mov	r2, #0
    7c84:	add	r2, r2, r2, lsl #3
    7c88:	ldr	r1, [pc, #1084]	; 80cc <sas_read_header+0x5c8>
    7c8c:	add	r1, pc, r1
    7c90:	add	r2, r1, r2, lsl #2
    7c94:	add	r2, r2, #4
    7c98:	str	r2, [r5, #144]	; 0x90
    7c9c:	ldr	r2, [r5, #144]	; 0x90
    7ca0:	cmp	r2, #0
    7ca4:	addne	sl, sp, #1344	; 0x540
    7ca8:	addne	ip, r5, #80	; 0x50
    7cac:	addne	fp, sp, #1408	; 0x580
    7cb0:	beq	7f38 <sas_read_header+0x434>
    7cb4:	mov	lr, sl
    7cb8:	ldm	lr!, {r0, r1, r2, r3}
    7cbc:	str	r0, [ip]
    7cc0:	str	r1, [ip, #4]
    7cc4:	str	r2, [ip, #8]
    7cc8:	str	r3, [ip, #12]
    7ccc:	mov	sl, lr
    7cd0:	add	ip, ip, #16
    7cd4:	cmp	lr, fp
    7cd8:	bne	7cb4 <sas_read_header+0x1b0>
    7cdc:	ldr	r3, [r4, #8]
    7ce0:	ldr	r2, [r4, #20]
    7ce4:	mov	r1, #1
    7ce8:	ldr	r0, [r5, #24]
    7cec:	blx	r3
    7cf0:	cmn	r0, #1
    7cf4:	moveq	r0, #15
    7cf8:	beq	7c08 <sas_read_header+0x104>
    7cfc:	ldr	r3, [r4, #12]
    7d00:	ldr	r2, [r4, #20]
    7d04:	mov	r1, #8
    7d08:	add	r0, sp, #56	; 0x38
    7d0c:	blx	r3
    7d10:	cmp	r0, #7
    7d14:	movls	r0, #2
    7d18:	bls	7c08 <sas_read_header+0x104>
    7d1c:	cmp	r9, #0
    7d20:	bne	7f70 <sas_read_header+0x46c>
    7d24:	ldr	r3, [r4, #12]
    7d28:	ldr	r2, [r4, #20]
    7d2c:	mov	r1, #8
    7d30:	add	r0, sp, #48	; 0x30
    7d34:	blx	r3
    7d38:	cmp	r0, #7
    7d3c:	bls	81e4 <sas_read_header+0x6e0>
    7d40:	vmov	s15, r6
    7d44:	vcvt.f64.s32	d7, s15
    7d48:	add	r3, sp, #56	; 0x38
    7d4c:	vldr	d6, [sp, #56]	; 0x38
    7d50:	vadd.f64	d6, d7, d6
    7d54:	vcmp.f64	d6, d6
    7d58:	vmrs	APSR_nzcv, fpscr
    7d5c:	bvs	7fd0 <sas_read_header+0x4cc>
    7d60:	vldr	d5, [pc, #832]	; 80a8 <sas_read_header+0x5a4>
    7d64:	vcmpe.f64	d6, d5
    7d68:	vmrs	APSR_nzcv, fpscr
    7d6c:	mvngt	r3, #-2147483648	; 0x80000000
    7d70:	ble	7fb4 <sas_read_header+0x4b0>
    7d74:	str	r3, [r5, #72]	; 0x48
    7d78:	add	r3, sp, #56	; 0x38
    7d7c:	vldr	d6, [sp, #48]	; 0x30
    7d80:	vadd.f64	d7, d7, d6
    7d84:	vcmp.f64	d7, d7
    7d88:	vmrs	APSR_nzcv, fpscr
    7d8c:	bvs	7ffc <sas_read_header+0x4f8>
    7d90:	vldr	d6, [pc, #784]	; 80a8 <sas_read_header+0x5a4>
    7d94:	vcmpe.f64	d7, d6
    7d98:	vmrs	APSR_nzcv, fpscr
    7d9c:	mvngt	r3, #-2147483648	; 0x80000000
    7da0:	ble	7fe0 <sas_read_header+0x4dc>
    7da4:	str	r3, [r5, #76]	; 0x4c
    7da8:	ldr	r3, [r4, #8]
    7dac:	ldr	r2, [r4, #20]
    7db0:	mov	r1, #1
    7db4:	mov	r0, #16
    7db8:	blx	r3
    7dbc:	cmn	r0, #1
    7dc0:	moveq	r0, #15
    7dc4:	beq	7c08 <sas_read_header+0x104>
    7dc8:	ldr	r3, [r4, #12]
    7dcc:	ldr	r2, [r4, #20]
    7dd0:	mov	r1, #4
    7dd4:	add	r0, sp, #44	; 0x2c
    7dd8:	blx	r3
    7ddc:	cmp	r0, #3
    7de0:	movls	r0, #2
    7de4:	bls	7c08 <sas_read_header+0x104>
    7de8:	ldr	r3, [r4, #12]
    7dec:	ldr	r2, [r4, #20]
    7df0:	mov	r1, #4
    7df4:	add	r0, sp, #40	; 0x28
    7df8:	blx	r3
    7dfc:	cmp	r0, #3
    7e00:	movls	r0, #2
    7e04:	bls	7c08 <sas_read_header+0x104>
    7e08:	cmp	r9, #0
    7e0c:	bne	800c <sas_read_header+0x508>
    7e10:	ldr	r3, [sp, #44]	; 0x2c
    7e14:	str	r3, [r5, #64]	; 0x40
    7e18:	mov	r3, #0
    7e1c:	str	r3, [r5, #68]	; 0x44
    7e20:	ldr	r0, [sp, #40]	; 0x28
    7e24:	str	r0, [r5, #32]
    7e28:	mov	r3, #0
    7e2c:	str	r3, [r5, #36]	; 0x24
    7e30:	ldrd	r2, [r5, #64]	; 0x40
    7e34:	subs	r2, r2, #1024	; 0x400
    7e38:	sbc	r3, r3, #0
    7e3c:	ldr	sl, [pc, #652]	; 80d0 <sas_read_header+0x5cc>
    7e40:	mov	fp, #0
    7e44:	cmp	r3, fp
    7e48:	cmpeq	r2, sl
    7e4c:	movhi	r3, #1
    7e50:	movls	r3, #0
    7e54:	sub	r0, r0, #1024	; 0x400
    7e58:	ldr	r2, [pc, #628]	; 80d4 <sas_read_header+0x5d0>
    7e5c:	cmp	r0, r2
    7e60:	movls	r0, r3
    7e64:	orrhi	r0, r3, #1
    7e68:	cmp	r0, #0
    7e6c:	movne	r0, #5
    7e70:	bne	7c08 <sas_read_header+0x104>
    7e74:	ldr	r3, [r5, #4]
    7e78:	cmp	r3, #0
    7e7c:	beq	802c <sas_read_header+0x528>
    7e80:	mov	r2, #40	; 0x28
    7e84:	mov	r3, #0
    7e88:	strd	r2, [r5, #40]	; 0x28
    7e8c:	mov	r2, #24
    7e90:	mov	r3, #0
    7e94:	strd	r2, [r5, #48]	; 0x30
    7e98:	ldr	r3, [r4, #12]
    7e9c:	ldr	r2, [r4, #20]
    7ea0:	mov	r1, #8
    7ea4:	add	r0, sp, #16
    7ea8:	blx	r3
    7eac:	cmp	r0, #7
    7eb0:	bls	807c <sas_read_header+0x578>
    7eb4:	ldrd	r0, [sp, #16]
    7eb8:	cmp	r9, #0
    7ebc:	bne	8084 <sas_read_header+0x580>
    7ec0:	strd	r0, [r5, #56]	; 0x38
    7ec4:	ldrd	r2, [r5, #56]	; 0x38
    7ec8:	mov	r0, #16777216	; 0x1000000
    7ecc:	mov	r1, #0
    7ed0:	cmp	r0, r2
    7ed4:	sbcs	r3, r1, r3
    7ed8:	movlt	r0, #5
    7edc:	blt	7c08 <sas_read_header+0x104>
    7ee0:	ldr	r3, [r4, #8]
    7ee4:	ldr	r2, [r4, #20]
    7ee8:	mov	r1, #1
    7eec:	mov	r0, #8
    7ef0:	blx	r3
    7ef4:	cmn	r0, #1
    7ef8:	bne	80e8 <sas_read_header+0x5e4>
    7efc:	cmp	r7, #0
    7f00:	moveq	r0, #15
    7f04:	beq	7c08 <sas_read_header+0x104>
    7f08:	mov	r3, #8
    7f0c:	ldr	r2, [pc, #452]	; 80d8 <sas_read_header+0x5d4>
    7f10:	add	r2, pc, r2
    7f14:	mov	r1, #1024	; 0x400
    7f18:	add	r4, sp, #108	; 0x6c
    7f1c:	mov	r0, r4
    7f20:	bl	42ac <snprintf@plt>
    7f24:	mov	r1, r8
    7f28:	mov	r0, r4
    7f2c:	blx	r7
    7f30:	mov	r0, #15
    7f34:	b	7c08 <sas_read_header+0x104>
    7f38:	cmp	r7, #0
    7f3c:	moveq	r0, #7
    7f40:	beq	7c08 <sas_read_header+0x104>
    7f44:	add	r4, sp, #108	; 0x6c
    7f48:	ldr	r2, [pc, #396]	; 80dc <sas_read_header+0x5d8>
    7f4c:	add	r2, pc, r2
    7f50:	mov	r1, #1024	; 0x400
    7f54:	mov	r0, r4
    7f58:	bl	42ac <snprintf@plt>
    7f5c:	mov	r1, r8
    7f60:	mov	r0, r4
    7f64:	blx	r7
    7f68:	mov	r0, #7
    7f6c:	b	7c08 <sas_read_header+0x104>
    7f70:	add	sl, sp, #56	; 0x38
    7f74:	vldr	d0, [sp, #56]	; 0x38
    7f78:	bl	4534 <byteswap_double@plt>
    7f7c:	sub	r0, sl, #8
    7f80:	vstr	d0, [sl]
    7f84:	ldr	r3, [r4, #12]
    7f88:	ldr	r2, [r4, #20]
    7f8c:	mov	r1, #8
    7f90:	blx	r3
    7f94:	cmp	r0, #7
    7f98:	movls	r0, #2
    7f9c:	bls	7c08 <sas_read_header+0x104>
    7fa0:	add	sl, sp, #56	; 0x38
    7fa4:	vldr	d0, [sp, #48]	; 0x30
    7fa8:	bl	4534 <byteswap_double@plt>
    7fac:	vstr	d0, [sl, #-8]
    7fb0:	b	7d40 <sas_read_header+0x23c>
    7fb4:	vldr	d5, [pc, #244]	; 80b0 <sas_read_header+0x5ac>
    7fb8:	vcmpe.f64	d6, d5
    7fbc:	vmrs	APSR_nzcv, fpscr
    7fc0:	bmi	7fd8 <sas_read_header+0x4d4>
    7fc4:	vcvt.s32.f64	s13, d6
    7fc8:	vmov	r3, s13
    7fcc:	b	7d74 <sas_read_header+0x270>
    7fd0:	mov	r3, #0
    7fd4:	b	7d74 <sas_read_header+0x270>
    7fd8:	mov	r3, #-2147483648	; 0x80000000
    7fdc:	b	7d74 <sas_read_header+0x270>
    7fe0:	vldr	d6, [pc, #200]	; 80b0 <sas_read_header+0x5ac>
    7fe4:	vcmpe.f64	d7, d6
    7fe8:	vmrs	APSR_nzcv, fpscr
    7fec:	bmi	8004 <sas_read_header+0x500>
    7ff0:	vcvt.s32.f64	s15, d7
    7ff4:	vmov	r3, s15
    7ff8:	b	7da4 <sas_read_header+0x2a0>
    7ffc:	mov	r3, #0
    8000:	b	7da4 <sas_read_header+0x2a0>
    8004:	mov	r3, #-2147483648	; 0x80000000
    8008:	b	7da4 <sas_read_header+0x2a0>
    800c:	ldr	r0, [sp, #44]	; 0x2c
    8010:	bl	3db4 <byteswap4@plt>
    8014:	str	r0, [r5, #64]	; 0x40
    8018:	mov	r3, #0
    801c:	str	r3, [r5, #68]	; 0x44
    8020:	ldr	r0, [sp, #40]	; 0x28
    8024:	bl	3db4 <byteswap4@plt>
    8028:	b	7e24 <sas_read_header+0x320>
    802c:	mov	r2, #24
    8030:	mov	r3, #0
    8034:	strd	r2, [r5, #40]	; 0x28
    8038:	mov	r2, #12
    803c:	mov	r3, #0
    8040:	strd	r2, [r5, #48]	; 0x30
    8044:	ldr	r3, [r4, #12]
    8048:	ldr	r2, [r4, #20]
    804c:	mov	r1, #4
    8050:	add	r0, sp, #16
    8054:	blx	r3
    8058:	cmp	r0, #3
    805c:	bls	8090 <sas_read_header+0x58c>
    8060:	cmp	r9, #0
    8064:	ldreq	r0, [sp, #16]
    8068:	bne	8098 <sas_read_header+0x594>
    806c:	str	r0, [r5, #56]	; 0x38
    8070:	mov	r3, #0
    8074:	str	r3, [r5, #60]	; 0x3c
    8078:	b	7ec4 <sas_read_header+0x3c0>
    807c:	mov	r0, #2
    8080:	b	7c08 <sas_read_header+0x104>
    8084:	ldrd	r0, [sp, #16]
    8088:	bl	3d9c <byteswap8@plt>
    808c:	b	7ec0 <sas_read_header+0x3bc>
    8090:	mov	r0, #2
    8094:	b	7c08 <sas_read_header+0x104>
    8098:	ldr	r0, [sp, #16]
    809c:	bl	3db4 <byteswap4@plt>
    80a0:	b	806c <sas_read_header+0x568>
    80a4:	nop			; (mov r0, r0)
    80a8:	.word	0xffc00000
    80ac:	.word	0x41dfffff
    80b0:	.word	0x00000000
    80b4:	.word	0xc1e00000
    80b8:	.word	0x0003d4d4
    80bc:	.word	0x000002f4
    80c0:	.word	0x000002c8
    80c4:	.word	0x0003d70c
    80c8:	.word	0x0003d6f8
    80cc:	.word	0x0003d6ac
    80d0:	.word	0x000ffc00
    80d4:	.word	0x00fffc00
    80d8:	.word	0x0001d1f4
    80dc:	.word	0x0001d194
    80e0:	.word	0x0001d00c
    80e4:	.word	0x0001cf80
    80e8:	ldr	r3, [r4, #12]
    80ec:	ldr	r2, [r4, #20]
    80f0:	mov	r1, #120	; 0x78
    80f4:	add	r0, sp, #1120	; 0x460
    80f8:	add	r0, r0, #12
    80fc:	blx	r3
    8100:	cmp	r0, #119	; 0x77
    8104:	movls	r0, #2
    8108:	bls	7c08 <sas_read_header+0x104>
    810c:	add	r3, sp, #28
    8110:	str	r3, [sp]
    8114:	add	r3, sp, #32
    8118:	add	r2, sp, #36	; 0x24
    811c:	ldr	r1, [pc, #-68]	; 80e0 <sas_read_header+0x5dc>
    8120:	add	r1, pc, r1
    8124:	add	r0, sp, #1120	; 0x460
    8128:	add	r0, r0, #12
    812c:	bl	42b8 <__isoc99_sscanf@plt>
    8130:	cmp	r0, #3
    8134:	movne	r0, #5
    8138:	bne	7c08 <sas_read_header+0x104>
    813c:	ldr	r2, [sp, #36]	; 0x24
    8140:	str	r2, [r5, #12]
    8144:	ldr	r3, [sp, #32]
    8148:	str	r3, [r5, #16]
    814c:	ldr	r1, [sp, #28]
    8150:	str	r1, [r5, #20]
    8154:	cmp	r3, #0
    8158:	cmpeq	r1, #0
    815c:	moveq	r3, #1
    8160:	movne	r3, #0
    8164:	sub	r2, r2, #8
    8168:	cmp	r2, #1
    816c:	movhi	r3, #0
    8170:	andls	r3, r3, #1
    8174:	cmp	r3, #0
    8178:	movne	r3, #0
    817c:	moveq	r3, #1
    8180:	str	r3, [r5, #8]
    8184:	ldr	r3, [r4, #8]
    8188:	ldr	r2, [r4, #20]
    818c:	mov	r1, #0
    8190:	ldr	r0, [r5, #64]	; 0x40
    8194:	blx	r3
    8198:	cmn	r0, #1
    819c:	movne	r0, #0
    81a0:	bne	7c08 <sas_read_header+0x104>
    81a4:	cmp	r7, #0
    81a8:	moveq	r0, #15
    81ac:	beq	7c08 <sas_read_header+0x104>
    81b0:	ldrd	r2, [r5, #64]	; 0x40
    81b4:	strd	r2, [sp]
    81b8:	ldr	r2, [pc, #-220]	; 80e4 <sas_read_header+0x5e0>
    81bc:	add	r2, pc, r2
    81c0:	mov	r1, #1024	; 0x400
    81c4:	add	r4, sp, #108	; 0x6c
    81c8:	mov	r0, r4
    81cc:	bl	42ac <snprintf@plt>
    81d0:	mov	r1, r8
    81d4:	mov	r0, r4
    81d8:	blx	r7
    81dc:	mov	r0, #15
    81e0:	b	7c08 <sas_read_header+0x104>
    81e4:	mov	r0, #2
    81e8:	b	7c08 <sas_read_header+0x104>

000081ec <sas_write_header>:
    81ec:	sub	sp, sp, #8
    81f0:	push	{r4, r5, r6, r7, r8, lr}
    81f4:	sub	sp, sp, #224	; 0xe0
    81f8:	mov	r5, r0
    81fc:	mov	r6, r1
    8200:	add	r1, sp, #244	; 0xf4
    8204:	stmib	r1, {r2, r3}
    8208:	mov	r2, #44	; 0x2c
    820c:	mov	r1, #0
    8210:	add	r4, sp, #180	; 0xb4
    8214:	mov	r0, r4
    8218:	bl	42d0 <memset@plt>
    821c:	mov	r3, #1
    8220:	str	r3, [sp, #192]	; 0xc0
    8224:	mov	r3, #60	; 0x3c
    8228:	str	r3, [sp, #200]	; 0xc8
    822c:	mov	r0, r4
    8230:	bl	3e74 <mktime@plt>
    8234:	mov	r7, r0
    8238:	mov	r2, #64	; 0x40
    823c:	mov	r1, #32
    8240:	add	r0, sp, #340	; 0x154
    8244:	bl	42d0 <memset@plt>
    8248:	add	r4, r5, #88	; 0x58
    824c:	mov	r0, r4
    8250:	bl	4228 <strlen@plt>
    8254:	cmp	r0, #64	; 0x40
    8258:	movcc	r2, r0
    825c:	movcs	r2, #64	; 0x40
    8260:	cmp	r2, #0
    8264:	beq	829c <sas_write_header+0xb0>
    8268:	mov	r1, r4
    826c:	add	r0, sp, #340	; 0x154
    8270:	bl	3f40 <memcpy@plt>
    8274:	mov	r2, #164	; 0xa4
    8278:	add	r1, sp, #248	; 0xf8
    827c:	mov	r0, r5
    8280:	bl	4480 <readstat_write_bytes@plt>
    8284:	cmp	r0, #0
    8288:	beq	82c4 <sas_write_header+0xd8>
    828c:	add	sp, sp, #224	; 0xe0
    8290:	pop	{r4, r5, r6, r7, r8, lr}
    8294:	add	sp, sp, #8
    8298:	bx	lr
    829c:	add	r2, sp, #340	; 0x154
    82a0:	ldr	r3, [pc, #496]	; 8498 <sas_write_header+0x2ac>
    82a4:	add	r3, pc, r3
    82a8:	ldr	r0, [r3]
    82ac:	str	r0, [sp, #340]	; 0x154
    82b0:	ldrh	r1, [r3, #4]
    82b4:	ldrb	r3, [r3, #6]
    82b8:	strh	r1, [r2, #4]
    82bc:	strb	r3, [sp, #346]	; 0x15a
    82c0:	b	8274 <sas_write_header+0x88>
    82c4:	ldr	r1, [r6, #24]
    82c8:	mov	r0, r5
    82cc:	bl	403c <readstat_write_zeros@plt>
    82d0:	cmp	r0, #0
    82d4:	bne	828c <sas_write_header+0xa0>
    82d8:	ldr	r3, [r6, #72]	; 0x48
    82dc:	sub	r3, r3, r7
    82e0:	vmov	s15, r3
    82e4:	vcvt.f64.s32	d7, s15
    82e8:	add	r1, sp, #224	; 0xe0
    82ec:	vmov	r2, r3, d7
    82f0:	strd	r2, [r1, #-56]!	; 0xffffffc8
    82f4:	mov	r2, #8
    82f8:	mov	r0, r5
    82fc:	bl	4480 <readstat_write_bytes@plt>
    8300:	cmp	r0, #0
    8304:	bne	828c <sas_write_header+0xa0>
    8308:	ldr	r3, [r6, #76]	; 0x4c
    830c:	sub	r7, r3, r7
    8310:	vmov	s15, r7
    8314:	vcvt.f64.s32	d7, s15
    8318:	add	r1, sp, #224	; 0xe0
    831c:	vmov	r2, r3, d7
    8320:	strd	r2, [r1, #-64]!	; 0xffffffc0
    8324:	mov	r2, #8
    8328:	mov	r0, r5
    832c:	bl	4480 <readstat_write_bytes@plt>
    8330:	cmp	r0, #0
    8334:	bne	828c <sas_write_header+0xa0>
    8338:	mov	r1, #16
    833c:	mov	r0, r5
    8340:	bl	403c <readstat_write_zeros@plt>
    8344:	cmp	r0, #0
    8348:	bne	828c <sas_write_header+0xa0>
    834c:	ldr	r3, [r6, #64]	; 0x40
    8350:	str	r3, [sp, #156]	; 0x9c
    8354:	ldr	r3, [r6, #32]
    8358:	str	r3, [sp, #152]	; 0x98
    835c:	mov	r2, #4
    8360:	add	r1, sp, #156	; 0x9c
    8364:	mov	r0, r5
    8368:	bl	4480 <readstat_write_bytes@plt>
    836c:	cmp	r0, #0
    8370:	bne	828c <sas_write_header+0xa0>
    8374:	mov	r2, #4
    8378:	add	r1, sp, #152	; 0x98
    837c:	mov	r0, r5
    8380:	bl	4480 <readstat_write_bytes@plt>
    8384:	cmp	r0, #0
    8388:	bne	828c <sas_write_header+0xa0>
    838c:	ldr	r3, [r6, #4]
    8390:	cmp	r3, #0
    8394:	beq	847c <sas_write_header+0x290>
    8398:	ldrd	r2, [r6, #56]	; 0x38
    839c:	add	r1, sp, #224	; 0xe0
    83a0:	strd	r2, [r1, #-216]!	; 0xffffff28
    83a4:	mov	r2, #8
    83a8:	mov	r0, r5
    83ac:	bl	4480 <readstat_write_bytes@plt>
    83b0:	cmp	r0, #0
    83b4:	bne	828c <sas_write_header+0xa0>
    83b8:	mov	r1, #8
    83bc:	mov	r0, r5
    83c0:	bl	403c <readstat_write_zeros@plt>
    83c4:	cmp	r0, #0
    83c8:	bne	828c <sas_write_header+0xa0>
    83cc:	mov	r8, #120	; 0x78
    83d0:	mov	r2, r8
    83d4:	mov	r1, #0
    83d8:	add	r4, sp, #32
    83dc:	mov	r0, r4
    83e0:	bl	42d0 <memset@plt>
    83e4:	ldr	r2, [pc, #176]	; 849c <sas_write_header+0x2b0>
    83e8:	add	r2, pc, r2
    83ec:	add	r3, sp, #40	; 0x28
    83f0:	ldm	r2, {r0, r1, r2}
    83f4:	stmia	r3!, {r0, r1}
    83f8:	strh	r2, [r3]
    83fc:	mov	r3, #0
    8400:	str	r3, [sp, #50]	; 0x32
    8404:	strh	r3, [sp, #54]	; 0x36
    8408:	str	r3, [sp, #20]
    840c:	str	r3, [sp, #24]
    8410:	strb	r3, [sp, #28]
    8414:	mov	r1, #10
    8418:	ldr	r0, [r5, #8]
    841c:	bl	23f78 <__aeabi_uidivmod>
    8420:	mov	r3, #101	; 0x65
    8424:	str	r3, [sp]
    8428:	mov	r3, r1
    842c:	ldr	r2, [pc, #108]	; 84a0 <sas_write_header+0x2b4>
    8430:	add	r2, pc, r2
    8434:	mov	r1, #9
    8438:	add	r7, sp, #20
    843c:	mov	r0, r7
    8440:	bl	42ac <snprintf@plt>
    8444:	ldm	r7, {r0, r1}
    8448:	stm	r4, {r0, r1}
    844c:	mov	r2, r8
    8450:	mov	r1, r4
    8454:	mov	r0, r5
    8458:	bl	4480 <readstat_write_bytes@plt>
    845c:	cmp	r0, #0
    8460:	bne	828c <sas_write_header+0xa0>
    8464:	ldr	r1, [r6, #64]	; 0x40
    8468:	ldr	r3, [r5, #4]
    846c:	sub	r1, r1, r3
    8470:	mov	r0, r5
    8474:	bl	403c <readstat_write_zeros@plt>
    8478:	b	828c <sas_write_header+0xa0>
    847c:	ldr	r3, [r6, #56]	; 0x38
    8480:	add	r1, sp, #224	; 0xe0
    8484:	str	r3, [r1, #-216]!	; 0xffffff28
    8488:	mov	r2, #4
    848c:	mov	r0, r5
    8490:	bl	4480 <readstat_write_bytes@plt>
    8494:	b	83b0 <sas_write_header+0x1c4>
    8498:	.word	0x0001cec4
    849c:	.word	0x0001cce8
    84a0:	.word	0x0001cd40

000084a4 <sas_header_info_init>:
    84a4:	push	{r4, r5, r6, lr}
    84a8:	mov	r5, r0
    84ac:	mov	r4, r1
    84b0:	mov	r1, #152	; 0x98
    84b4:	mov	r0, #1
    84b8:	bl	3d78 <calloc@plt>
    84bc:	ldr	r3, [r5, #20]
    84c0:	str	r3, [r0, #72]	; 0x48
    84c4:	str	r3, [r0, #76]	; 0x4c
    84c8:	mov	r2, #4096	; 0x1000
    84cc:	mov	r3, #0
    84d0:	strd	r2, [r0, #32]
    84d4:	cmp	r4, #0
    84d8:	movne	r3, #1
    84dc:	moveq	r3, #0
    84e0:	str	r3, [r0, #4]
    84e4:	bne	8510 <sas_header_info_init+0x6c>
    84e8:	mov	r2, #1024	; 0x400
    84ec:	mov	r3, #0
    84f0:	strd	r2, [r0, #64]	; 0x40
    84f4:	mov	r2, #24
    84f8:	mov	r3, #0
    84fc:	strd	r2, [r0, #40]	; 0x28
    8500:	mov	r2, #12
    8504:	mov	r3, #0
    8508:	strd	r2, [r0, #48]	; 0x30
    850c:	pop	{r4, r5, r6, pc}
    8510:	mov	r2, #8192	; 0x2000
    8514:	mov	r3, #0
    8518:	strd	r2, [r0, #64]	; 0x40
    851c:	mov	r2, #40	; 0x28
    8520:	mov	r3, #0
    8524:	strd	r2, [r0, #40]	; 0x28
    8528:	mov	r2, #24
    852c:	mov	r3, #0
    8530:	strd	r2, [r0, #48]	; 0x30
    8534:	pop	{r4, r5, r6, pc}

00008538 <sas_fill_page>:
    8538:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    853c:	mov	r4, r0
    8540:	ldr	r5, [r1, #32]
    8544:	ldr	r0, [r0, #4]
    8548:	ldrd	r6, [r1, #64]	; 0x40
    854c:	mov	r2, r5
    8550:	ldr	r3, [r1, #36]	; 0x24
    8554:	subs	r8, r0, r6
    8558:	rsc	r9, r7, #0
    855c:	mov	r0, r8
    8560:	mov	r1, r9
    8564:	bl	245ac <__aeabi_ldivmod>
    8568:	orrs	r1, r2, r3
    856c:	bne	8578 <sas_fill_page+0x40>
    8570:	mov	r0, #0
    8574:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    8578:	sub	r1, r5, r2
    857c:	mov	r0, r4
    8580:	bl	403c <readstat_write_zeros@plt>
    8584:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00008588 <sas_validate_name>:
    8588:	push	{r4, r5, r6, lr}
    858c:	ldrb	lr, [r0]
    8590:	cmp	lr, #0
    8594:	beq	8698 <sas_validate_name+0x110>
    8598:	mov	ip, r0
    859c:	mov	r3, lr
    85a0:	b	85b0 <sas_validate_name+0x28>
    85a4:	ldrb	r3, [ip, #1]!
    85a8:	cmp	r3, #0
    85ac:	beq	86a0 <sas_validate_name+0x118>
    85b0:	cmp	r3, #95	; 0x5f
    85b4:	beq	85a4 <sas_validate_name+0x1c>
    85b8:	bic	r2, r3, #32
    85bc:	sub	r2, r2, #65	; 0x41
    85c0:	uxtb	r2, r2
    85c4:	cmp	r2, #25
    85c8:	bls	85a4 <sas_validate_name+0x1c>
    85cc:	sub	r3, r3, #48	; 0x30
    85d0:	uxtb	r3, r3
    85d4:	cmp	r3, #9
    85d8:	bls	85a4 <sas_validate_name+0x1c>
    85dc:	mov	r0, #26
    85e0:	pop	{r4, r5, r6, pc}
    85e4:	bic	r3, lr, #32
    85e8:	sub	r3, r3, #65	; 0x41
    85ec:	uxtb	r3, r3
    85f0:	cmp	r3, #25
    85f4:	bls	86a8 <sas_validate_name+0x120>
    85f8:	mov	r0, #25
    85fc:	pop	{r4, r5, r6, pc}
    8600:	ldr	r1, [pc, #196]	; 86cc <sas_validate_name+0x144>
    8604:	add	r1, pc, r1
    8608:	mov	r0, r5
    860c:	bl	3e20 <strcmp@plt>
    8610:	cmp	r0, #0
    8614:	bne	8620 <sas_validate_name+0x98>
    8618:	mov	r0, #27
    861c:	pop	{r4, r5, r6, pc}
    8620:	ldr	r1, [pc, #168]	; 86d0 <sas_validate_name+0x148>
    8624:	add	r1, pc, r1
    8628:	mov	r0, r5
    862c:	bl	3e20 <strcmp@plt>
    8630:	cmp	r0, #0
    8634:	bne	8640 <sas_validate_name+0xb8>
    8638:	mov	r0, #27
    863c:	pop	{r4, r5, r6, pc}
    8640:	ldr	r1, [pc, #140]	; 86d4 <sas_validate_name+0x14c>
    8644:	add	r1, pc, r1
    8648:	mov	r0, r5
    864c:	bl	3e20 <strcmp@plt>
    8650:	cmp	r0, #0
    8654:	bne	8660 <sas_validate_name+0xd8>
    8658:	mov	r0, #27
    865c:	pop	{r4, r5, r6, pc}
    8660:	ldr	r1, [pc, #112]	; 86d8 <sas_validate_name+0x150>
    8664:	add	r1, pc, r1
    8668:	mov	r0, r5
    866c:	bl	3e20 <strcmp@plt>
    8670:	cmp	r0, #0
    8674:	bne	8680 <sas_validate_name+0xf8>
    8678:	mov	r0, #27
    867c:	pop	{r4, r5, r6, pc}
    8680:	mov	r0, r5
    8684:	bl	4228 <strlen@plt>
    8688:	cmp	r0, r4
    868c:	movhi	r0, #28
    8690:	movls	r0, #0
    8694:	pop	{r4, r5, r6, pc}
    8698:	mov	r0, #38	; 0x26
    869c:	pop	{r4, r5, r6, pc}
    86a0:	cmp	lr, #95	; 0x5f
    86a4:	bne	85e4 <sas_validate_name+0x5c>
    86a8:	mov	r4, r1
    86ac:	mov	r5, r0
    86b0:	ldr	r1, [pc, #36]	; 86dc <sas_validate_name+0x154>
    86b4:	add	r1, pc, r1
    86b8:	bl	3e20 <strcmp@plt>
    86bc:	cmp	r0, #0
    86c0:	bne	8600 <sas_validate_name+0x78>
    86c4:	mov	r0, #27
    86c8:	pop	{r4, r5, r6, pc}
    86cc:	.word	0x0001cb7c
    86d0:	.word	0x0001cb64
    86d4:	.word	0x0001cb50
    86d8:	.word	0x0001cb3c
    86dc:	.word	0x0001cac8

000086e0 <sas_validate_variable>:
    86e0:	push	{r4, lr}
    86e4:	bl	4390 <readstat_variable_get_name@plt>
    86e8:	mov	r1, #32
    86ec:	bl	3d6c <sas_validate_name@plt>
    86f0:	pop	{r4, pc}

000086f4 <sas_validate_tag>:
    86f4:	sub	r3, r0, #65	; 0x41
    86f8:	uxtb	r3, r3
    86fc:	cmp	r0, #95	; 0x5f
    8700:	cmpne	r3, #25
    8704:	movls	r0, #1
    8708:	movhi	r0, #0
    870c:	cmp	r0, #0
    8710:	moveq	r0, #21
    8714:	movne	r0, #0
    8718:	bx	lr

0000871c <sas_assign_tag>:
    871c:	push	{r4, r5, r6, lr}
    8720:	mov	r5, r0
    8724:	subs	r4, r1, #0
    8728:	moveq	r4, #95	; 0x5f
    872c:	beq	8744 <sas_assign_tag+0x28>
    8730:	sub	r3, r4, #2
    8734:	uxtb	r3, r3
    8738:	cmp	r3, #25
    873c:	addls	r4, r4, #63	; 0x3f
    8740:	uxtbls	r4, r4
    8744:	mov	r0, r4
    8748:	bl	4174 <sas_validate_tag@plt>
    874c:	cmp	r0, #0
    8750:	strbeq	r4, [r5, #12]
    8754:	ldrbeq	r3, [r5, #13]
    8758:	orreq	r3, r3, #2
    875c:	movne	r3, #0
    8760:	strbne	r3, [r5, #12]
    8764:	ldrbne	r3, [r5, #13]
    8768:	orrne	r3, r3, #1
    876c:	strb	r3, [r5, #13]
    8770:	pop	{r4, r5, r6, pc}
    8774:	andeq	r0, r0, r0

00008778 <compare_block_pointers>:
    8778:	ldr	r0, [r0]
    877c:	ldr	r3, [r1]
    8780:	sub	r0, r0, r3
    8784:	bx	lr

00008788 <sas7bcat_augment_index>:
    8788:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    878c:	sub	sp, sp, #12
    8790:	add	r7, r0, r1
    8794:	ldr	r3, [r2, #32]
    8798:	add	r3, r0, r3
    879c:	cmp	r7, r3
    87a0:	bcc	88e4 <sas7bcat_augment_index+0x15c>
    87a4:	mov	r4, r0
    87a8:	mov	r5, r2
    87ac:	ldr	sl, [pc, #312]	; 88ec <sas7bcat_augment_index+0x164>
    87b0:	add	sl, pc, sl
    87b4:	mov	r6, #4
    87b8:	ldr	fp, [pc, #304]	; 88f0 <sas7bcat_augment_index+0x168>
    87bc:	add	fp, pc, fp
    87c0:	b	87f8 <sas7bcat_augment_index+0x70>
    87c4:	ldr	r3, [r5, #48]	; 0x30
    87c8:	ldrb	r3, [r4, r3]
    87cc:	cmp	r3, #79	; 0x4f
    87d0:	beq	8838 <sas7bcat_augment_index+0xb0>
    87d4:	ldr	r1, [r5, #84]	; 0x54
    87d8:	ldr	r3, [r5, #88]	; 0x58
    87dc:	cmp	r1, r3
    87e0:	beq	88b4 <sas7bcat_augment_index+0x12c>
    87e4:	ldr	r3, [r5, #32]
    87e8:	add	r4, r4, r3
    87ec:	add	r3, r4, r3
    87f0:	cmp	r7, r3
    87f4:	bcc	88dc <sas7bcat_augment_index+0x154>
    87f8:	mov	r2, r6
    87fc:	mov	r1, sl
    8800:	mov	r0, r4
    8804:	bl	3fc4 <memcmp@plt>
    8808:	cmp	r0, #0
    880c:	beq	87c4 <sas7bcat_augment_index+0x3c>
    8810:	add	r4, r4, #8
    8814:	mov	r2, r6
    8818:	mov	r1, fp
    881c:	mov	r0, r4
    8820:	bl	3fc4 <memcmp@plt>
    8824:	cmp	r0, #0
    8828:	beq	87c4 <sas7bcat_augment_index+0x3c>
    882c:	mov	r0, #0
    8830:	add	sp, sp, #12
    8834:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8838:	ldr	r3, [r5, #16]
    883c:	cmp	r3, #0
    8840:	beq	8890 <sas7bcat_augment_index+0x108>
    8844:	ldr	r1, [r5, #24]
    8848:	add	r0, r4, #8
    884c:	bl	4420 <sas_read4@plt>
    8850:	str	r0, [sp, #4]
    8854:	ldr	r1, [r5, #24]
    8858:	add	r0, r4, #16
    885c:	bl	4420 <sas_read4@plt>
    8860:	mov	ip, r0
    8864:	ldr	r2, [r5, #80]	; 0x50
    8868:	ldr	r3, [r5, #84]	; 0x54
    886c:	add	r1, r3, #1
    8870:	str	r1, [r5, #84]	; 0x54
    8874:	lsl	r3, r3, #3
    8878:	ldr	r9, [sp, #4]
    887c:	mov	r8, #0
    8880:	adds	r0, r8, ip
    8884:	adc	r1, r9, #0
    8888:	strd	r0, [r2, r3]
    888c:	b	87d4 <sas7bcat_augment_index+0x4c>
    8890:	ldr	r1, [r5, #24]
    8894:	add	r0, r4, #4
    8898:	bl	43fc <sas_read2@plt>
    889c:	str	r0, [sp, #4]
    88a0:	ldr	r1, [r5, #24]
    88a4:	add	r0, r4, #8
    88a8:	bl	43fc <sas_read2@plt>
    88ac:	mov	ip, r0
    88b0:	b	8864 <sas7bcat_augment_index+0xdc>
    88b4:	lsl	r3, r1, #1
    88b8:	str	r3, [r5, #88]	; 0x58
    88bc:	lsl	r1, r1, #4
    88c0:	ldr	r0, [r5, #80]	; 0x50
    88c4:	bl	430c <readstat_realloc@plt>
    88c8:	str	r0, [r5, #80]	; 0x50
    88cc:	cmp	r0, #0
    88d0:	bne	87e4 <sas7bcat_augment_index+0x5c>
    88d4:	mov	r0, #3
    88d8:	b	8830 <sas7bcat_augment_index+0xa8>
    88dc:	mov	r0, #0
    88e0:	b	8830 <sas7bcat_augment_index+0xa8>
    88e4:	mov	r0, #0
    88e8:	b	8830 <sas7bcat_augment_index+0xa8>
    88ec:	.word	0x0001c9f8
    88f0:	.word	0x0001c9ec

000088f4 <readstat_parse_sas7bcat>:
    88f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    88f8:	vpush	{d8}
    88fc:	add	fp, sp, #40	; 0x28
    8900:	sub	sp, sp, #436	; 0x1b4
    8904:	mov	r4, r0
    8908:	mov	r8, r1
    890c:	mov	r5, r2
    8910:	ldr	r9, [r0, #32]
    8914:	mov	r1, #104	; 0x68
    8918:	mov	r0, #1
    891c:	bl	3d78 <calloc@plt>
    8920:	mov	r6, r0
    8924:	mov	r1, #152	; 0x98
    8928:	mov	r0, #1
    892c:	bl	3d78 <calloc@plt>
    8930:	mov	r7, r0
    8934:	mov	r3, #200	; 0xc8
    8938:	str	r3, [r6, #88]	; 0x58
    893c:	mov	r0, #1600	; 0x640
    8940:	bl	4138 <malloc@plt>
    8944:	str	r0, [r6, #80]	; 0x50
    8948:	ldr	r3, [r4, #20]
    894c:	str	r3, [r6, #4]
    8950:	ldr	r3, [r4]
    8954:	str	r3, [r6]
    8958:	ldr	r3, [r4, #36]	; 0x24
    895c:	str	r3, [r6, #92]	; 0x5c
    8960:	ldr	r3, [r4, #40]	; 0x28
    8964:	str	r3, [r6, #96]	; 0x60
    8968:	str	r5, [r6, #8]
    896c:	str	r9, [r6, #12]
    8970:	ldr	r3, [r9]
    8974:	ldr	r1, [r9, #20]
    8978:	mov	r0, r8
    897c:	blx	r3
    8980:	cmn	r0, #1
    8984:	beq	9708 <readstat_parse_sas7bcat+0xe14>
    8988:	mov	r3, r5
    898c:	ldr	r2, [r4, #24]
    8990:	mov	r1, r7
    8994:	mov	r0, r9
    8998:	bl	43cc <sas_read_header@plt>
    899c:	subs	sl, r0, #0
    89a0:	bne	970c <readstat_parse_sas7bcat+0xe18>
    89a4:	ldr	r3, [r7, #4]
    89a8:	str	r3, [r6, #16]
    89ac:	ldr	r3, [r7, #24]
    89b0:	str	r3, [r6, #20]
    89b4:	bl	3ed4 <machine_is_little_endian@plt>
    89b8:	ldr	r3, [r7]
    89bc:	eor	r0, r0, r3
    89c0:	str	r0, [r6, #24]
    89c4:	ldrd	r2, [r7, #64]	; 0x40
    89c8:	strd	r2, [r6, #72]	; 0x48
    89cc:	ldrd	r2, [r7, #56]	; 0x38
    89d0:	strd	r2, [r6, #56]	; 0x38
    89d4:	ldrd	r2, [r7, #32]
    89d8:	strd	r2, [r6, #64]	; 0x40
    89dc:	ldr	r3, [r6, #92]	; 0x5c
    89e0:	cmp	r3, #0
    89e4:	ldreq	r3, [r7, #144]	; 0x90
    89e8:	streq	r3, [r6, #92]	; 0x5c
    89ec:	ldr	r2, [r6, #20]
    89f0:	add	r4, r2, #212	; 0xd4
    89f4:	asr	r5, r4, #31
    89f8:	strd	r4, [r6, #32]
    89fc:	add	r0, r2, #428	; 0x1ac
    8a00:	lsl	r0, r0, #1
    8a04:	asr	r1, r0, #31
    8a08:	strd	r0, [r6, #40]	; 0x28
    8a0c:	add	r2, r2, #50	; 0x32
    8a10:	asr	r3, r2, #31
    8a14:	strd	r2, [r6, #48]	; 0x30
    8a18:	ldr	ip, [r6, #16]
    8a1c:	cmp	ip, #0
    8a20:	beq	8a48 <readstat_parse_sas7bcat+0x154>
    8a24:	adds	r0, r0, #144	; 0x90
    8a28:	adc	r1, r1, #0
    8a2c:	strd	r0, [r6, #40]	; 0x28
    8a30:	adds	r4, r4, #72	; 0x48
    8a34:	adc	r5, r5, #0
    8a38:	strd	r4, [r6, #32]
    8a3c:	adds	r2, r2, #24
    8a40:	adc	r3, r3, #0
    8a44:	strd	r2, [r6, #48]	; 0x30
    8a48:	ldr	r4, [r6, #92]	; 0x5c
    8a4c:	cmp	r4, #0
    8a50:	beq	8a74 <readstat_parse_sas7bcat+0x180>
    8a54:	ldr	r5, [r6, #96]	; 0x60
    8a58:	cmp	r5, #0
    8a5c:	beq	8a74 <readstat_parse_sas7bcat+0x180>
    8a60:	mov	r1, r5
    8a64:	mov	r0, r4
    8a68:	bl	3e20 <strcmp@plt>
    8a6c:	cmp	r0, #0
    8a70:	bne	8be4 <readstat_parse_sas7bcat+0x2f0>
    8a74:	ldr	r3, [r6]
    8a78:	cmp	r3, #0
    8a7c:	beq	8b20 <readstat_parse_sas7bcat+0x22c>
    8a80:	mov	r2, #56	; 0x38
    8a84:	mov	r1, #0
    8a88:	sub	r0, fp, #372	; 0x174
    8a8c:	bl	42d0 <memset@plt>
    8a90:	ldr	r3, [r7, #72]	; 0x48
    8a94:	str	r3, [fp, #-356]	; 0xfffffe9c
    8a98:	ldr	r3, [r7, #76]	; 0x4c
    8a9c:	str	r3, [fp, #-352]	; 0xfffffea0
    8aa0:	ldr	r2, [r7, #12]
    8aa4:	asr	r3, r2, #31
    8aa8:	sub	r1, fp, #364	; 0x16c
    8aac:	strd	r2, [r1, #16]
    8ab0:	mov	r2, r7
    8ab4:	ldr	r3, [r2], #80	; 0x50
    8ab8:	cmp	r3, #0
    8abc:	movne	r3, #1
    8ac0:	moveq	r3, #2
    8ac4:	str	r3, [fp, #-336]	; 0xfffffeb0
    8ac8:	ldr	r3, [r6, #92]	; 0x5c
    8acc:	str	r3, [fp, #-324]	; 0xfffffebc
    8ad0:	ldr	r3, [r6, #16]
    8ad4:	and	r3, r3, #1
    8ad8:	strb	r3, [fp, #-320]	; 0xfffffec0
    8adc:	ldr	r3, [r6, #100]	; 0x64
    8ae0:	str	r3, [sp]
    8ae4:	mov	r3, #64	; 0x40
    8ae8:	ldr	r1, [pc, #1696]	; 9190 <readstat_parse_sas7bcat+0x89c>
    8aec:	sub	r0, fp, #304	; 0x130
    8af0:	bl	4264 <readstat_convert@plt>
    8af4:	subs	sl, r0, #0
    8af8:	bne	970c <readstat_parse_sas7bcat+0xe18>
    8afc:	sub	r3, fp, #304	; 0x130
    8b00:	str	r3, [fp, #-328]	; 0xfffffeb8
    8b04:	ldr	r3, [r6]
    8b08:	ldr	r1, [r6, #8]
    8b0c:	sub	r0, fp, #372	; 0x174
    8b10:	blx	r3
    8b14:	cmp	r0, #0
    8b18:	movne	sl, #4
    8b1c:	bne	970c <readstat_parse_sas7bcat+0xe18>
    8b20:	ldr	r0, [r6, #64]	; 0x40
    8b24:	bl	4258 <readstat_malloc@plt>
    8b28:	subs	r4, r0, #0
    8b2c:	str	r4, [fp, #-392]	; 0xfffffe78
    8b30:	beq	9770 <readstat_parse_sas7bcat+0xe7c>
    8b34:	ldr	ip, [r6, #72]	; 0x48
    8b38:	ldr	r0, [r6, #64]	; 0x40
    8b3c:	ldr	r3, [r9, #8]
    8b40:	ldr	r2, [r9, #20]
    8b44:	mov	r1, #0
    8b48:	add	r0, ip, r0
    8b4c:	blx	r3
    8b50:	cmn	r0, #1
    8b54:	beq	9670 <readstat_parse_sas7bcat+0xd7c>
    8b58:	ldr	r3, [r9, #12]
    8b5c:	ldr	r2, [r9, #20]
    8b60:	ldr	r1, [r6, #64]	; 0x40
    8b64:	mov	r0, r4
    8b68:	blx	r3
    8b6c:	ldrd	r4, [r6, #64]	; 0x40
    8b70:	asr	r1, r0, #31
    8b74:	cmp	r0, r4
    8b78:	sbcs	r3, r1, r5
    8b7c:	movlt	sl, #2
    8b80:	movlt	r8, #0
    8b84:	blt	9678 <readstat_parse_sas7bcat+0xd84>
    8b88:	ldr	r0, [r6, #40]	; 0x28
    8b8c:	mov	r2, r6
    8b90:	sub	r1, r4, r0
    8b94:	ldr	r8, [fp, #-392]	; 0xfffffe78
    8b98:	add	r0, r8, r0
    8b9c:	bl	8788 <sas7bcat_augment_index>
    8ba0:	subs	sl, r0, #0
    8ba4:	bne	96a0 <readstat_parse_sas7bcat+0xdac>
    8ba8:	ldrd	r2, [r6, #56]	; 0x38
    8bac:	cmp	r2, #4
    8bb0:	sbcs	r3, r3, #0
    8bb4:	blt	8cb4 <readstat_parse_sas7bcat+0x3c0>
    8bb8:	mov	r4, #3
    8bbc:	mov	r5, #0
    8bc0:	add	r8, r8, #16
    8bc4:	ldr	r3, [pc, #1480]	; 9194 <readstat_parse_sas7bcat+0x8a0>
    8bc8:	add	r3, pc, r3
    8bcc:	str	r3, [fp, #-396]	; 0xfffffe74
    8bd0:	str	r7, [fp, #-400]	; 0xfffffe70
    8bd4:	mov	r7, r9
    8bd8:	str	sl, [fp, #-404]	; 0xfffffe6c
    8bdc:	mov	sl, r8
    8be0:	b	8c18 <readstat_parse_sas7bcat+0x324>
    8be4:	mov	r1, r4
    8be8:	mov	r0, r5
    8bec:	bl	415c <iconv_open@plt>
    8bf0:	cmn	r0, #1
    8bf4:	beq	9768 <readstat_parse_sas7bcat+0xe74>
    8bf8:	str	r0, [r6, #100]	; 0x64
    8bfc:	b	8a74 <readstat_parse_sas7bcat+0x180>
    8c00:	adds	r4, r4, #1
    8c04:	adc	r5, r5, #0
    8c08:	ldrd	r2, [r6, #56]	; 0x38
    8c0c:	cmp	r4, r2
    8c10:	sbcs	r3, r5, r3
    8c14:	bge	8ca8 <readstat_parse_sas7bcat+0x3b4>
    8c18:	ldr	ip, [r6, #64]	; 0x40
    8c1c:	ldr	r0, [r6, #72]	; 0x48
    8c20:	ldr	r3, [r7, #8]
    8c24:	ldr	r2, [r7, #20]
    8c28:	mov	r1, #0
    8c2c:	mla	r0, ip, r4, r0
    8c30:	blx	r3
    8c34:	cmn	r0, #1
    8c38:	beq	96a8 <readstat_parse_sas7bcat+0xdb4>
    8c3c:	ldr	r3, [r7, #12]
    8c40:	ldr	r2, [r7, #20]
    8c44:	ldr	r1, [r6, #64]	; 0x40
    8c48:	ldr	r0, [fp, #-392]	; 0xfffffe78
    8c4c:	blx	r3
    8c50:	ldrd	r8, [r6, #64]	; 0x40
    8c54:	asr	r1, r0, #31
    8c58:	cmp	r0, r8
    8c5c:	sbcs	r3, r1, r9
    8c60:	blt	96bc <readstat_parse_sas7bcat+0xdc8>
    8c64:	mov	r2, #4
    8c68:	ldr	r1, [fp, #-396]	; 0xfffffe74
    8c6c:	mov	r0, sl
    8c70:	bl	3fc4 <memcmp@plt>
    8c74:	cmp	r0, #0
    8c78:	bne	8c00 <readstat_parse_sas7bcat+0x30c>
    8c7c:	mov	r2, r6
    8c80:	sub	r1, r8, #16
    8c84:	mov	r0, sl
    8c88:	bl	8788 <sas7bcat_augment_index>
    8c8c:	cmp	r0, #0
    8c90:	beq	8c00 <readstat_parse_sas7bcat+0x30c>
    8c94:	mov	r9, r7
    8c98:	ldr	r7, [fp, #-400]	; 0xfffffe70
    8c9c:	mov	sl, r0
    8ca0:	mov	r8, #0
    8ca4:	b	9678 <readstat_parse_sas7bcat+0xd84>
    8ca8:	mov	r9, r7
    8cac:	ldr	r7, [fp, #-400]	; 0xfffffe70
    8cb0:	ldr	sl, [fp, #-404]	; 0xfffffe6c
    8cb4:	ldr	r1, [r6, #84]	; 0x54
    8cb8:	cmp	r1, #0
    8cbc:	beq	96d0 <readstat_parse_sas7bcat+0xddc>
    8cc0:	cmp	r1, #1
    8cc4:	ble	8d2c <readstat_parse_sas7bcat+0x438>
    8cc8:	ldr	r0, [r6, #80]	; 0x50
    8ccc:	ldrd	r4, [r0]
    8cd0:	ldrd	r2, [r0, #8]
    8cd4:	cmp	r5, r3
    8cd8:	cmpeq	r4, r2
    8cdc:	addls	lr, r0, #8
    8ce0:	movls	ip, #1
    8ce4:	bhi	8d10 <readstat_parse_sas7bcat+0x41c>
    8ce8:	add	ip, ip, #1
    8cec:	cmp	r1, ip
    8cf0:	beq	8d2c <readstat_parse_sas7bcat+0x438>
    8cf4:	mov	r3, lr
    8cf8:	ldrd	r4, [lr, #8]
    8cfc:	add	lr, lr, #8
    8d00:	ldrd	r2, [r3]
    8d04:	cmp	r5, r3
    8d08:	cmpeq	r4, r2
    8d0c:	bcs	8ce8 <readstat_parse_sas7bcat+0x3f4>
    8d10:	ldr	r3, [pc, #1152]	; 9198 <readstat_parse_sas7bcat+0x8a4>
    8d14:	add	r3, pc, r3
    8d18:	mov	r2, #8
    8d1c:	bl	4468 <qsort@plt>
    8d20:	ldr	r1, [r6, #84]	; 0x54
    8d24:	cmp	r1, #0
    8d28:	beq	9430 <readstat_parse_sas7bcat+0xb3c>
    8d2c:	cmp	r1, #1
    8d30:	ble	8dc8 <readstat_parse_sas7bcat+0x4d4>
    8d34:	mov	r4, #0
    8d38:	mov	ip, #1
    8d3c:	mov	lr, ip
    8d40:	mov	r0, r9
    8d44:	b	8d60 <readstat_parse_sas7bcat+0x46c>
    8d48:	add	ip, ip, #1
    8d4c:	add	lr, lr, #1
    8d50:	add	r4, r4, #8
    8d54:	ldr	r3, [r6, #84]	; 0x54
    8d58:	cmp	lr, r3
    8d5c:	bge	8d8c <readstat_parse_sas7bcat+0x498>
    8d60:	ldr	r1, [r6, #80]	; 0x50
    8d64:	lsl	r3, lr, #3
    8d68:	ldrd	r8, [r1, r3]
    8d6c:	ldrd	r2, [r1, r4]
    8d70:	cmp	r9, r3
    8d74:	cmpeq	r8, r2
    8d78:	beq	8d4c <readstat_parse_sas7bcat+0x458>
    8d7c:	cmp	ip, lr
    8d80:	lslne	r3, ip, #3
    8d84:	strdne	r8, [r1, r3]
    8d88:	b	8d48 <readstat_parse_sas7bcat+0x454>
    8d8c:	mov	r9, r0
    8d90:	str	ip, [r6, #84]	; 0x54
    8d94:	cmp	ip, #0
    8d98:	ble	96d8 <readstat_parse_sas7bcat+0xde4>
    8d9c:	mov	r8, #0
    8da0:	mov	r2, #0
    8da4:	mov	r3, #0
    8da8:	sub	r1, fp, #428	; 0x1ac
    8dac:	strd	r2, [r1]
    8db0:	vldr	d8, [pc, #976]	; 9188 <readstat_parse_sas7bcat+0x894>
    8db4:	str	r8, [fp, #-416]	; 0xfffffe60
    8db8:	str	r9, [fp, #-420]	; 0xfffffe5c
    8dbc:	str	r7, [fp, #-432]	; 0xfffffe50
    8dc0:	str	sl, [fp, #-456]	; 0xfffffe38
    8dc4:	b	8f04 <readstat_parse_sas7bcat+0x610>
    8dc8:	mov	ip, #1
    8dcc:	b	8d90 <readstat_parse_sas7bcat+0x49c>
    8dd0:	ldr	r1, [r6, #24]
    8dd4:	ldr	r0, [fp, #-396]	; 0xfffffe74
    8dd8:	bl	4420 <sas_read4@plt>
    8ddc:	mov	r5, r0
    8de0:	ldr	r1, [r6, #24]
    8de4:	ldr	r0, [fp, #-400]	; 0xfffffe70
    8de8:	bl	43fc <sas_read2@plt>
    8dec:	mov	r4, r0
    8df0:	ldr	r1, [r6, #24]
    8df4:	ldr	r0, [fp, #-404]	; 0xfffffe6c
    8df8:	bl	43fc <sas_read2@plt>
    8dfc:	add	sl, sl, r0
    8e00:	cmp	r5, #0
    8e04:	cmpgt	r4, #0
    8e08:	ble	8ec0 <readstat_parse_sas7bcat+0x5cc>
    8e0c:	ldrd	r2, [r6, #56]	; 0x38
    8e10:	asr	r1, r5, #31
    8e14:	cmp	r2, r5
    8e18:	sbcs	r1, r3, r1
    8e1c:	blt	8ec0 <readstat_parse_sas7bcat+0x5cc>
    8e20:	add	ip, r7, #1
    8e24:	asr	r1, r7, #31
    8e28:	cmp	r7, r2
    8e2c:	sbcs	r3, r1, r3
    8e30:	bge	8ec0 <readstat_parse_sas7bcat+0x5cc>
    8e34:	mov	r7, ip
    8e38:	sub	r5, r5, #1
    8e3c:	ldr	r0, [r6, #64]	; 0x40
    8e40:	ldr	r3, [r6, #72]	; 0x48
    8e44:	add	r4, r4, r3
    8e48:	ldr	r3, [r8, #8]
    8e4c:	ldr	r2, [r8, #20]
    8e50:	mov	r1, #0
    8e54:	mla	r0, r0, r5, r4
    8e58:	blx	r3
    8e5c:	cmn	r0, #1
    8e60:	beq	9438 <readstat_parse_sas7bcat+0xb44>
    8e64:	ldr	r3, [r8, #12]
    8e68:	ldr	r2, [r8, #20]
    8e6c:	mov	r1, r9
    8e70:	ldr	r4, [fp, #-396]	; 0xfffffe74
    8e74:	mov	r0, r4
    8e78:	blx	r3
    8e7c:	cmp	r0, r9
    8e80:	blt	944c <readstat_parse_sas7bcat+0xb58>
    8e84:	ldr	r3, [r6, #16]
    8e88:	cmp	r3, #0
    8e8c:	beq	8dd0 <readstat_parse_sas7bcat+0x4dc>
    8e90:	ldr	r1, [r6, #24]
    8e94:	mov	r0, r4
    8e98:	bl	4420 <sas_read4@plt>
    8e9c:	mov	r5, r0
    8ea0:	ldr	r1, [r6, #24]
    8ea4:	ldr	r0, [fp, #-408]	; 0xfffffe68
    8ea8:	bl	43fc <sas_read2@plt>
    8eac:	mov	r4, r0
    8eb0:	ldr	r1, [r6, #24]
    8eb4:	ldr	r0, [fp, #-412]	; 0xfffffe64
    8eb8:	bl	43fc <sas_read2@plt>
    8ebc:	b	8dfc <readstat_parse_sas7bcat+0x508>
    8ec0:	cmn	sl, #1
    8ec4:	beq	96f4 <readstat_parse_sas7bcat+0xe00>
    8ec8:	cmp	sl, #0
    8ecc:	bne	8fa8 <readstat_parse_sas7bcat+0x6b4>
    8ed0:	sub	r3, fp, #428	; 0x1ac
    8ed4:	ldrd	r2, [r3]
    8ed8:	adds	r2, r2, #1
    8edc:	adc	r3, r3, #0
    8ee0:	mov	r0, r2
    8ee4:	mov	r1, r3
    8ee8:	sub	r3, fp, #428	; 0x1ac
    8eec:	strd	r0, [r3]
    8ef0:	ldr	r2, [r6, #84]	; 0x54
    8ef4:	asr	r3, r2, #31
    8ef8:	cmp	r0, r2
    8efc:	sbcs	r3, r1, r3
    8f00:	bge	941c <readstat_parse_sas7bcat+0xb28>
    8f04:	ldr	r2, [r6, #80]	; 0x50
    8f08:	ldr	r3, [fp, #-428]	; 0xfffffe54
    8f0c:	lsl	r3, r3, #3
    8f10:	add	r1, r2, r3
    8f14:	ldr	r0, [r1, #4]
    8f18:	str	r0, [fp, #-436]	; 0xfffffe4c
    8f1c:	ldrh	r1, [r2, r3]
    8f20:	str	r1, [fp, #-440]	; 0xfffffe48
    8f24:	ldr	r8, [r6, #12]
    8f28:	ldr	r9, [r6, #16]
    8f2c:	cmp	r9, #0
    8f30:	moveq	r9, #16
    8f34:	movne	r9, #32
    8f38:	cmp	r1, #0
    8f3c:	cmpne	r0, #0
    8f40:	ble	8ed0 <readstat_parse_sas7bcat+0x5dc>
    8f44:	ldrd	r2, [r6, #56]	; 0x38
    8f48:	asr	r5, r0, #31
    8f4c:	cmp	r2, r0
    8f50:	sbcs	ip, r3, r5
    8f54:	blt	8ed0 <readstat_parse_sas7bcat+0x5dc>
    8f58:	cmp	r2, #1
    8f5c:	sbcs	r3, r3, #0
    8f60:	blt	8ed0 <readstat_parse_sas7bcat+0x5dc>
    8f64:	mov	r4, r1
    8f68:	mov	r5, r0
    8f6c:	mov	r7, #1
    8f70:	mov	sl, #0
    8f74:	sub	r3, fp, #304	; 0x130
    8f78:	str	r3, [fp, #-396]	; 0xfffffe74
    8f7c:	sub	r3, fp, #300	; 0x12c
    8f80:	str	r3, [fp, #-400]	; 0xfffffe70
    8f84:	sub	r3, fp, #296	; 0x128
    8f88:	sub	r3, r3, #2
    8f8c:	str	r3, [fp, #-404]	; 0xfffffe6c
    8f90:	sub	r3, fp, #296	; 0x128
    8f94:	str	r3, [fp, #-408]	; 0xfffffe68
    8f98:	sub	r3, fp, #292	; 0x124
    8f9c:	sub	r3, r3, #2
    8fa0:	str	r3, [fp, #-412]	; 0xfffffe64
    8fa4:	b	8e38 <readstat_parse_sas7bcat+0x544>
    8fa8:	str	sl, [fp, #-404]	; 0xfffffe6c
    8fac:	mov	r1, sl
    8fb0:	ldr	r0, [fp, #-416]	; 0xfffffe60
    8fb4:	bl	430c <readstat_realloc@plt>
    8fb8:	subs	r3, r0, #0
    8fbc:	str	r3, [fp, #-416]	; 0xfffffe60
    8fc0:	beq	96e0 <readstat_parse_sas7bcat+0xdec>
    8fc4:	ldr	r4, [r6, #12]
    8fc8:	ldr	sl, [r6, #16]
    8fcc:	cmp	sl, #0
    8fd0:	moveq	sl, #16
    8fd4:	movne	sl, #32
    8fd8:	mov	r7, #0
    8fdc:	sub	r3, fp, #304	; 0x130
    8fe0:	str	r3, [fp, #-400]	; 0xfffffe70
    8fe4:	sub	r3, fp, #300	; 0x12c
    8fe8:	str	r3, [fp, #-412]	; 0xfffffe64
    8fec:	sub	r3, fp, #296	; 0x128
    8ff0:	sub	r3, r3, #2
    8ff4:	str	r3, [fp, #-444]	; 0xfffffe44
    8ff8:	sub	r3, fp, #296	; 0x128
    8ffc:	str	r3, [fp, #-448]	; 0xfffffe40
    9000:	sub	r3, fp, #292	; 0x124
    9004:	sub	r3, r3, #2
    9008:	str	r3, [fp, #-452]	; 0xfffffe3c
    900c:	ldr	r5, [fp, #-436]	; 0xfffffe4c
    9010:	ldr	r9, [fp, #-440]	; 0xfffffe48
    9014:	mov	ip, r7
    9018:	str	sl, [fp, #-408]	; 0xfffffe68
    901c:	b	9088 <readstat_parse_sas7bcat+0x794>
    9020:	ldr	r1, [r6, #24]
    9024:	ldr	r0, [fp, #-400]	; 0xfffffe70
    9028:	bl	4420 <sas_read4@plt>
    902c:	mov	r5, r0
    9030:	ldr	r1, [r6, #24]
    9034:	ldr	r0, [fp, #-412]	; 0xfffffe64
    9038:	bl	43fc <sas_read2@plt>
    903c:	mov	r9, r0
    9040:	ldr	r1, [r6, #24]
    9044:	ldr	r0, [fp, #-444]	; 0xfffffe44
    9048:	bl	43fc <sas_read2@plt>
    904c:	mov	r8, r0
    9050:	add	sl, r8, r7
    9054:	ldr	r3, [fp, #-404]	; 0xfffffe6c
    9058:	cmp	r3, sl
    905c:	bcc	9488 <readstat_parse_sas7bcat+0xb94>
    9060:	ldr	r3, [r4, #12]
    9064:	ldr	r2, [r4, #20]
    9068:	mov	r1, r8
    906c:	ldr	r0, [fp, #-416]	; 0xfffffe60
    9070:	add	r0, r0, r7
    9074:	blx	r3
    9078:	mov	r7, sl
    907c:	cmp	r8, r0
    9080:	bgt	949c <readstat_parse_sas7bcat+0xba8>
    9084:	ldr	ip, [fp, #-396]	; 0xfffffe74
    9088:	cmp	r5, #0
    908c:	cmpgt	r9, #0
    9090:	ble	94b0 <readstat_parse_sas7bcat+0xbbc>
    9094:	ldrd	r0, [r6, #56]	; 0x38
    9098:	asr	r3, r5, #31
    909c:	cmp	r0, r5
    90a0:	sbcs	r3, r1, r3
    90a4:	blt	94b0 <readstat_parse_sas7bcat+0xbbc>
    90a8:	add	r3, ip, #1
    90ac:	str	r3, [fp, #-396]	; 0xfffffe74
    90b0:	asr	r3, ip, #31
    90b4:	cmp	ip, r0
    90b8:	sbcs	r3, r3, r1
    90bc:	bge	94b0 <readstat_parse_sas7bcat+0xbbc>
    90c0:	sub	r5, r5, #1
    90c4:	ldr	r0, [r6, #64]	; 0x40
    90c8:	ldr	r3, [r6, #72]	; 0x48
    90cc:	add	r9, r9, r3
    90d0:	ldr	r3, [r4, #8]
    90d4:	ldr	r2, [r4, #20]
    90d8:	mov	r1, #0
    90dc:	mla	r0, r0, r5, r9
    90e0:	blx	r3
    90e4:	cmn	r0, #1
    90e8:	beq	9460 <readstat_parse_sas7bcat+0xb6c>
    90ec:	ldr	r3, [r4, #12]
    90f0:	ldr	r2, [r4, #20]
    90f4:	ldr	r5, [fp, #-408]	; 0xfffffe68
    90f8:	mov	r1, r5
    90fc:	ldr	r8, [fp, #-400]	; 0xfffffe70
    9100:	mov	r0, r8
    9104:	blx	r3
    9108:	cmp	r0, r5
    910c:	blt	9474 <readstat_parse_sas7bcat+0xb80>
    9110:	ldr	r3, [r6, #16]
    9114:	cmp	r3, #0
    9118:	beq	9020 <readstat_parse_sas7bcat+0x72c>
    911c:	ldr	r1, [r6, #24]
    9120:	mov	r0, r8
    9124:	bl	4420 <sas_read4@plt>
    9128:	mov	r5, r0
    912c:	ldr	r1, [r6, #24]
    9130:	ldr	r0, [fp, #-448]	; 0xfffffe40
    9134:	bl	43fc <sas_read2@plt>
    9138:	mov	r9, r0
    913c:	ldr	r1, [r6, #24]
    9140:	ldr	r0, [fp, #-452]	; 0xfffffe3c
    9144:	bl	43fc <sas_read2@plt>
    9148:	mov	r8, r0
    914c:	b	9050 <readstat_parse_sas7bcat+0x75c>
    9150:	add	r0, r9, #38	; 0x26
    9154:	ldr	r1, [r6, #24]
    9158:	ldr	r4, [fp, #-416]	; 0xfffffe60
    915c:	add	r0, r4, r0
    9160:	bl	4420 <sas_read4@plt>
    9164:	mov	sl, r0
    9168:	add	r0, r9, #42	; 0x2a
    916c:	ldr	r1, [r6, #24]
    9170:	add	r0, r4, r0
    9174:	bl	4420 <sas_read4@plt>
    9178:	str	r0, [fp, #-400]	; 0xfffffe70
    917c:	mov	r5, #106	; 0x6a
    9180:	b	9508 <readstat_parse_sas7bcat+0xc14>
    9184:	nop			; (mov r0, r0)
    9188:	.word	0x00000000
    918c:	.word	0x7ff80000
    9190:	.word	0x00000101
    9194:	.word	0x0001c5e0
    9198:	.word	0xfffffa5c
    919c:	.word	0x0000ffff
    91a0:	ldr	r3, [r6, #16]
    91a4:	cmp	r3, #0
    91a8:	bne	954c <readstat_parse_sas7bcat+0xc58>
    91ac:	add	r2, r5, r9
    91b0:	add	r3, r2, #32
    91b4:	ldr	r1, [fp, #-404]	; 0xfffffe6c
    91b8:	cmp	r1, r3
    91bc:	bcc	8ed0 <readstat_parse_sas7bcat+0x5dc>
    91c0:	ldr	r3, [r6, #100]	; 0x64
    91c4:	str	r3, [sp]
    91c8:	mov	r3, #32
    91cc:	ldr	r1, [fp, #-416]	; 0xfffffe60
    91d0:	add	r2, r1, r2
    91d4:	mov	r1, #129	; 0x81
    91d8:	sub	r0, fp, #304	; 0x130
    91dc:	bl	4264 <readstat_convert@plt>
    91e0:	cmp	r0, #0
    91e4:	bne	9660 <readstat_parse_sas7bcat+0xd6c>
    91e8:	add	r9, r9, #32
    91ec:	b	954c <readstat_parse_sas7bcat+0xc58>
    91f0:	ldrb	r3, [r8, #2]
    91f4:	add	r3, r3, #6
    91f8:	add	r8, r8, r3
    91fc:	add	r4, r4, #1
    9200:	cmp	sl, r4
    9204:	beq	9268 <readstat_parse_sas7bcat+0x974>
    9208:	add	r3, r8, #3
    920c:	sub	r3, r3, r5
    9210:	cmp	r9, r3
    9214:	bcc	9618 <readstat_parse_sas7bcat+0xd24>
    9218:	cmp	r7, r4
    921c:	ble	91f0 <readstat_parse_sas7bcat+0x8fc>
    9220:	ldr	r2, [r6, #20]
    9224:	add	r3, r2, #14
    9228:	add	r3, r8, r3
    922c:	sub	r3, r3, r5
    9230:	cmp	r9, r3
    9234:	bcc	9624 <readstat_parse_sas7bcat+0xd30>
    9238:	add	r2, r2, #10
    923c:	ldr	r1, [r6, #24]
    9240:	add	r0, r8, r2
    9244:	bl	4420 <sas_read4@plt>
    9248:	ldr	r3, [fp, #-436]	; 0xfffffe4c
    924c:	cmp	r3, r0
    9250:	bls	9630 <readstat_parse_sas7bcat+0xd3c>
    9254:	sub	r3, r8, r5
    9258:	ldr	r2, [fp, #-412]	; 0xfffffe64
    925c:	str	r3, [r2, r0, lsl #2]
    9260:	b	91f0 <readstat_parse_sas7bcat+0x8fc>
    9264:	ldr	r8, [fp, #-408]	; 0xfffffe68
    9268:	mov	r7, #0
    926c:	b	933c <readstat_parse_sas7bcat+0xa48>
    9270:	lsr	r1, r1, #8
    9274:	uxtb	r1, r1
    9278:	sub	r0, fp, #388	; 0x184
    927c:	bl	44d4 <sas_assign_tag@plt>
    9280:	vmov.f64	d7, d8
    9284:	vstr	d7, [fp, #-388]	; 0xfffffe7c
    9288:	ldr	r1, [r6, #24]
    928c:	add	r0, r8, #8
    9290:	bl	43fc <sas_read2@plt>
    9294:	mov	r4, r0
    9298:	add	r3, r0, #10
    929c:	add	r3, r8, r3
    92a0:	ldr	r2, [fp, #-408]	; 0xfffffe68
    92a4:	sub	r3, r3, r2
    92a8:	cmp	r9, r3
    92ac:	bcc	9414 <readstat_parse_sas7bcat+0xb20>
    92b0:	ldr	r3, [r6, #4]
    92b4:	cmp	r3, #0
    92b8:	beq	9330 <readstat_parse_sas7bcat+0xa3c>
    92bc:	str	sp, [fp, #-404]	; 0xfffffe6c
    92c0:	lsl	r1, r0, #2
    92c4:	add	r3, r1, #8
    92c8:	bic	r3, r3, #7
    92cc:	sub	sp, sp, r3
    92d0:	add	r0, sp, #16
    92d4:	mov	r5, r0
    92d8:	ldr	r3, [r6, #100]	; 0x64
    92dc:	str	r3, [sp]
    92e0:	mov	r3, r4
    92e4:	ldr	r2, [fp, #-436]	; 0xfffffe4c
    92e8:	add	r1, r1, #1
    92ec:	bl	4264 <readstat_convert@plt>
    92f0:	cmp	r0, #0
    92f4:	bne	93d8 <readstat_parse_sas7bcat+0xae4>
    92f8:	ldr	r3, [r6, #8]
    92fc:	str	r3, [sp, #12]
    9300:	str	r5, [sp, #8]
    9304:	sub	r3, fp, #380	; 0x17c
    9308:	ldm	r3, {r0, r1}
    930c:	stm	sp, {r0, r1}
    9310:	sub	r3, fp, #388	; 0x184
    9314:	ldm	r3, {r2, r3}
    9318:	ldr	r1, [r6, #4]
    931c:	sub	r0, fp, #304	; 0x130
    9320:	blx	r1
    9324:	cmp	r0, #0
    9328:	bne	93d4 <readstat_parse_sas7bcat+0xae0>
    932c:	ldr	sp, [fp, #-404]	; 0xfffffe6c
    9330:	add	r4, r4, #11
    9334:	add	r8, r8, r4
    9338:	add	r7, r7, #1
    933c:	ldr	r3, [fp, #-400]	; 0xfffffe70
    9340:	cmp	r3, sl
    9344:	movge	r3, sl
    9348:	cmp	r7, r3
    934c:	bge	93e0 <readstat_parse_sas7bcat+0xaec>
    9350:	ldr	r3, [fp, #-412]	; 0xfffffe64
    9354:	ldr	r3, [r3, r7, lsl #2]
    9358:	ldr	r2, [fp, #-408]	; 0xfffffe68
    935c:	add	r0, r2, r3
    9360:	add	r3, r3, #30
    9364:	cmp	r9, r3
    9368:	bcc	9404 <readstat_parse_sas7bcat+0xb10>
    936c:	add	r3, r8, #10
    9370:	str	r3, [fp, #-436]	; 0xfffffe4c
    9374:	sub	r3, r3, r2
    9378:	cmp	r9, r3
    937c:	bcc	940c <readstat_parse_sas7bcat+0xb18>
    9380:	mov	r2, #0
    9384:	str	r2, [fp, #-388]	; 0xfffffe7c
    9388:	str	r2, [fp, #-384]	; 0xfffffe80
    938c:	str	r2, [fp, #-376]	; 0xfffffe88
    9390:	ldr	r3, [fp, #-444]	; 0xfffffe44
    9394:	cmp	r3, #36	; 0x24
    9398:	beq	95cc <readstat_parse_sas7bcat+0xcd8>
    939c:	mov	r3, #5
    93a0:	str	r3, [fp, #-380]	; 0xfffffe84
    93a4:	ldr	r1, [fp, #-440]	; 0xfffffe48
    93a8:	add	r0, r0, #22
    93ac:	bl	43f0 <sas_read8@plt>
    93b0:	orr	r3, r1, #65280	; 0xff00
    93b4:	mvn	r4, #0
    93b8:	ldr	r5, [pc, #-548]	; 919c <readstat_parse_sas7bcat+0x8a8>
    93bc:	cmp	r3, r5
    93c0:	cmpeq	r0, r4
    93c4:	vmovne	d7, r0, r1
    93c8:	vnegne.f64	d7, d7
    93cc:	bne	9284 <readstat_parse_sas7bcat+0x990>
    93d0:	b	9270 <readstat_parse_sas7bcat+0x97c>
    93d4:	mov	r0, #4
    93d8:	ldr	sp, [fp, #-404]	; 0xfffffe6c
    93dc:	str	r0, [fp, #-396]	; 0xfffffe74
    93e0:	ldr	r0, [fp, #-412]	; 0xfffffe64
    93e4:	bl	3ee0 <free@plt>
    93e8:	ldr	r3, [fp, #-396]	; 0xfffffe74
    93ec:	cmp	r3, #0
    93f0:	beq	8ed0 <readstat_parse_sas7bcat+0x5dc>
    93f4:	ldr	r8, [fp, #-416]	; 0xfffffe60
    93f8:	ldr	r9, [fp, #-420]	; 0xfffffe5c
    93fc:	ldr	r7, [fp, #-432]	; 0xfffffe50
    9400:	b	978c <readstat_parse_sas7bcat+0xe98>
    9404:	mov	r0, #5
    9408:	b	93dc <readstat_parse_sas7bcat+0xae8>
    940c:	mov	r0, #5
    9410:	b	93dc <readstat_parse_sas7bcat+0xae8>
    9414:	mov	r0, #5
    9418:	b	93dc <readstat_parse_sas7bcat+0xae8>
    941c:	ldr	r8, [fp, #-416]	; 0xfffffe60
    9420:	ldr	r9, [fp, #-420]	; 0xfffffe5c
    9424:	ldr	r7, [fp, #-432]	; 0xfffffe50
    9428:	ldr	sl, [fp, #-456]	; 0xfffffe38
    942c:	b	9678 <readstat_parse_sas7bcat+0xd84>
    9430:	mov	r8, #0
    9434:	b	9650 <readstat_parse_sas7bcat+0xd5c>
    9438:	ldr	r8, [fp, #-416]	; 0xfffffe60
    943c:	ldr	r9, [fp, #-420]	; 0xfffffe5c
    9440:	ldr	r7, [fp, #-432]	; 0xfffffe50
    9444:	mov	sl, #15
    9448:	b	9678 <readstat_parse_sas7bcat+0xd84>
    944c:	ldr	r8, [fp, #-416]	; 0xfffffe60
    9450:	ldr	r9, [fp, #-420]	; 0xfffffe5c
    9454:	ldr	r7, [fp, #-432]	; 0xfffffe50
    9458:	mov	sl, #2
    945c:	b	9678 <readstat_parse_sas7bcat+0xd84>
    9460:	ldr	r8, [fp, #-416]	; 0xfffffe60
    9464:	ldr	r9, [fp, #-420]	; 0xfffffe5c
    9468:	ldr	r7, [fp, #-432]	; 0xfffffe50
    946c:	mov	sl, #15
    9470:	b	9650 <readstat_parse_sas7bcat+0xd5c>
    9474:	ldr	r8, [fp, #-416]	; 0xfffffe60
    9478:	ldr	r9, [fp, #-420]	; 0xfffffe5c
    947c:	ldr	r7, [fp, #-432]	; 0xfffffe50
    9480:	mov	sl, #2
    9484:	b	9650 <readstat_parse_sas7bcat+0xd5c>
    9488:	ldr	r8, [fp, #-416]	; 0xfffffe60
    948c:	ldr	r9, [fp, #-420]	; 0xfffffe5c
    9490:	ldr	r7, [fp, #-432]	; 0xfffffe50
    9494:	mov	sl, #5
    9498:	b	9650 <readstat_parse_sas7bcat+0xd5c>
    949c:	ldr	r8, [fp, #-416]	; 0xfffffe60
    94a0:	ldr	r9, [fp, #-420]	; 0xfffffe5c
    94a4:	ldr	r7, [fp, #-432]	; 0xfffffe50
    94a8:	mov	sl, #2
    94ac:	b	9650 <readstat_parse_sas7bcat+0xd5c>
    94b0:	ldr	r3, [fp, #-404]	; 0xfffffe6c
    94b4:	cmp	r3, #105	; 0x69
    94b8:	bls	8ed0 <readstat_parse_sas7bcat+0x5dc>
    94bc:	ldr	r4, [fp, #-416]	; 0xfffffe60
    94c0:	ldrb	r3, [r4, #2]
    94c4:	tst	r3, #8
    94c8:	movne	r9, #4
    94cc:	moveq	r9, #0
    94d0:	ldr	r3, [r6, #16]
    94d4:	cmp	r3, #0
    94d8:	beq	9150 <readstat_parse_sas7bcat+0x85c>
    94dc:	add	r0, r9, #42	; 0x2a
    94e0:	ldr	r1, [r6, #24]
    94e4:	add	r0, r4, r0
    94e8:	bl	4420 <sas_read4@plt>
    94ec:	mov	sl, r0
    94f0:	add	r0, r9, #50	; 0x32
    94f4:	ldr	r1, [r6, #24]
    94f8:	add	r0, r4, r0
    94fc:	bl	4420 <sas_read4@plt>
    9500:	str	r0, [fp, #-400]	; 0xfffffe70
    9504:	mov	r5, #138	; 0x8a
    9508:	ldr	r3, [r6, #100]	; 0x64
    950c:	str	r3, [sp]
    9510:	mov	r3, #8
    9514:	ldr	r2, [fp, #-416]	; 0xfffffe60
    9518:	add	r2, r2, r3
    951c:	mov	r1, #129	; 0x81
    9520:	sub	r0, fp, #304	; 0x130
    9524:	bl	4264 <readstat_convert@plt>
    9528:	subs	r3, r0, #0
    952c:	str	r3, [fp, #-396]	; 0xfffffe74
    9530:	bne	963c <readstat_parse_sas7bcat+0xd48>
    9534:	cmp	r9, #0
    9538:	addne	r9, r9, #16
    953c:	ldr	r3, [fp, #-416]	; 0xfffffe60
    9540:	ldrsb	r3, [r3, #2]
    9544:	cmp	r3, #0
    9548:	blt	91a0 <readstat_parse_sas7bcat+0x8ac>
    954c:	mov	r7, r5
    9550:	add	r5, r5, r9
    9554:	ldr	r3, [fp, #-404]	; 0xfffffe6c
    9558:	cmp	r3, r5
    955c:	bcc	8ed0 <readstat_parse_sas7bcat+0x5dc>
    9560:	ldr	r3, [fp, #-400]	; 0xfffffe70
    9564:	str	r3, [fp, #-436]	; 0xfffffe4c
    9568:	mov	r1, #4
    956c:	mov	r0, r3
    9570:	bl	3fe8 <readstat_calloc@plt>
    9574:	mov	r4, r0
    9578:	str	r0, [fp, #-412]	; 0xfffffe64
    957c:	bl	3ed4 <machine_is_little_endian@plt>
    9580:	str	r0, [fp, #-440]	; 0xfffffe48
    9584:	cmp	r4, #0
    9588:	beq	9778 <readstat_parse_sas7bcat+0xe84>
    958c:	ldr	r2, [fp, #-416]	; 0xfffffe60
    9590:	add	r8, r2, r5
    9594:	str	r8, [fp, #-408]	; 0xfffffe68
    9598:	ldr	r2, [fp, #-404]	; 0xfffffe6c
    959c:	sub	r7, r2, r7
    95a0:	sub	r9, r7, r9
    95a4:	ldrb	r2, [fp, #-304]	; 0xfffffed0
    95a8:	str	r2, [fp, #-444]	; 0xfffffe44
    95ac:	cmp	sl, #0
    95b0:	ble	9264 <readstat_parse_sas7bcat+0x970>
    95b4:	mov	r5, r8
    95b8:	cmp	r9, #2
    95bc:	bls	960c <readstat_parse_sas7bcat+0xd18>
    95c0:	mov	r4, #0
    95c4:	ldr	r7, [fp, #-400]	; 0xfffffe70
    95c8:	b	9218 <readstat_parse_sas7bcat+0x924>
    95cc:	mov	r3, #0
    95d0:	str	r3, [fp, #-380]	; 0xfffffe84
    95d4:	ldrb	r2, [r0, #2]
    95d8:	sub	r2, r2, #10
    95dc:	ldr	r3, [r6, #100]	; 0x64
    95e0:	str	r3, [sp]
    95e4:	mov	r3, #16
    95e8:	add	r2, r0, r2
    95ec:	mov	r1, #65	; 0x41
    95f0:	sub	r0, fp, #372	; 0x174
    95f4:	bl	4264 <readstat_convert@plt>
    95f8:	cmp	r0, #0
    95fc:	bne	93dc <readstat_parse_sas7bcat+0xae8>
    9600:	sub	r3, fp, #372	; 0x174
    9604:	str	r3, [fp, #-388]	; 0xfffffe7c
    9608:	b	9288 <readstat_parse_sas7bcat+0x994>
    960c:	mov	r3, #5
    9610:	str	r3, [fp, #-396]	; 0xfffffe74
    9614:	b	93e0 <readstat_parse_sas7bcat+0xaec>
    9618:	mov	r3, #5
    961c:	str	r3, [fp, #-396]	; 0xfffffe74
    9620:	b	93e0 <readstat_parse_sas7bcat+0xaec>
    9624:	mov	r3, #5
    9628:	str	r3, [fp, #-396]	; 0xfffffe74
    962c:	b	93e0 <readstat_parse_sas7bcat+0xaec>
    9630:	mov	r3, #5
    9634:	str	r3, [fp, #-396]	; 0xfffffe74
    9638:	b	93e0 <readstat_parse_sas7bcat+0xaec>
    963c:	ldr	r8, [fp, #-416]	; 0xfffffe60
    9640:	ldr	r9, [fp, #-420]	; 0xfffffe5c
    9644:	ldr	r7, [fp, #-432]	; 0xfffffe50
    9648:	ldr	r0, [fp, #-396]	; 0xfffffe74
    964c:	mov	sl, r0
    9650:	ldr	r3, [r9, #4]
    9654:	ldr	r0, [r9, #20]
    9658:	blx	r3
    965c:	b	9684 <readstat_parse_sas7bcat+0xd90>
    9660:	ldr	r8, [fp, #-416]	; 0xfffffe60
    9664:	ldr	r9, [fp, #-420]	; 0xfffffe5c
    9668:	ldr	r7, [fp, #-432]	; 0xfffffe50
    966c:	b	964c <readstat_parse_sas7bcat+0xd58>
    9670:	mov	sl, #15
    9674:	mov	r8, #0
    9678:	ldr	r3, [r9, #4]
    967c:	ldr	r0, [r9, #20]
    9680:	blx	r3
    9684:	ldr	r0, [fp, #-392]	; 0xfffffe78
    9688:	bl	3ee0 <free@plt>
    968c:	cmp	r8, #0
    9690:	beq	9718 <readstat_parse_sas7bcat+0xe24>
    9694:	mov	r0, r8
    9698:	bl	3ee0 <free@plt>
    969c:	b	9718 <readstat_parse_sas7bcat+0xe24>
    96a0:	mov	r8, #0
    96a4:	b	9678 <readstat_parse_sas7bcat+0xd84>
    96a8:	mov	r9, r7
    96ac:	ldr	r7, [fp, #-400]	; 0xfffffe70
    96b0:	mov	sl, #15
    96b4:	mov	r8, #0
    96b8:	b	9678 <readstat_parse_sas7bcat+0xd84>
    96bc:	mov	r9, r7
    96c0:	ldr	r7, [fp, #-400]	; 0xfffffe70
    96c4:	mov	sl, #2
    96c8:	mov	r8, #0
    96cc:	b	9678 <readstat_parse_sas7bcat+0xd84>
    96d0:	mov	r8, #0
    96d4:	b	9678 <readstat_parse_sas7bcat+0xd84>
    96d8:	mov	r8, #0
    96dc:	b	9678 <readstat_parse_sas7bcat+0xd84>
    96e0:	ldr	r8, [fp, #-416]	; 0xfffffe60
    96e4:	ldr	r9, [fp, #-420]	; 0xfffffe5c
    96e8:	ldr	r7, [fp, #-432]	; 0xfffffe50
    96ec:	mov	sl, #3
    96f0:	b	9678 <readstat_parse_sas7bcat+0xd84>
    96f4:	ldr	r8, [fp, #-416]	; 0xfffffe60
    96f8:	ldr	r9, [fp, #-420]	; 0xfffffe5c
    96fc:	ldr	r7, [fp, #-432]	; 0xfffffe50
    9700:	ldr	sl, [fp, #-456]	; 0xfffffe38
    9704:	b	9678 <readstat_parse_sas7bcat+0xd84>
    9708:	mov	sl, #1
    970c:	ldr	r3, [r9, #4]
    9710:	ldr	r0, [r9, #20]
    9714:	blx	r3
    9718:	cmp	r6, #0
    971c:	beq	9748 <readstat_parse_sas7bcat+0xe54>
    9720:	ldr	r0, [r6, #100]	; 0x64
    9724:	cmp	r0, #0
    9728:	beq	9730 <readstat_parse_sas7bcat+0xe3c>
    972c:	bl	3df0 <iconv_close@plt>
    9730:	ldr	r0, [r6, #80]	; 0x50
    9734:	cmp	r0, #0
    9738:	beq	9740 <readstat_parse_sas7bcat+0xe4c>
    973c:	bl	3ee0 <free@plt>
    9740:	mov	r0, r6
    9744:	bl	3ee0 <free@plt>
    9748:	cmp	r7, #0
    974c:	beq	9758 <readstat_parse_sas7bcat+0xe64>
    9750:	mov	r0, r7
    9754:	bl	3ee0 <free@plt>
    9758:	mov	r0, sl
    975c:	sub	sp, fp, #40	; 0x28
    9760:	vpop	{d8}
    9764:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9768:	mov	sl, #7
    976c:	b	970c <readstat_parse_sas7bcat+0xe18>
    9770:	mov	sl, #3
    9774:	b	970c <readstat_parse_sas7bcat+0xe18>
    9778:	ldr	r8, [fp, #-416]	; 0xfffffe60
    977c:	ldr	r9, [fp, #-420]	; 0xfffffe5c
    9780:	ldr	r7, [fp, #-432]	; 0xfffffe50
    9784:	mov	r3, #3
    9788:	str	r3, [fp, #-396]	; 0xfffffe74
    978c:	ldr	sl, [fp, #-396]	; 0xfffffe74
    9790:	b	9678 <readstat_parse_sas7bcat+0xd84>

00009794 <sas7bcat_begin_data>:
    9794:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9798:	sub	sp, sp, #396	; 0x18c
    979c:	mov	r4, r0
    97a0:	str	r0, [sp, #172]	; 0xac
    97a4:	ldr	r3, [pc, #1496]	; 9d84 <sas7bcat_begin_data+0x5f0>
    97a8:	add	r3, pc, r3
    97ac:	str	r3, [sp, #196]	; 0xc4
    97b0:	mov	r1, #0
    97b4:	bl	4378 <sas_header_info_init@plt>
    97b8:	mov	r5, r0
    97bc:	str	r0, [sp, #184]	; 0xb8
    97c0:	ldr	r4, [r4, #40]	; 0x28
    97c4:	lsl	r0, r4, #3
    97c8:	bl	4138 <malloc@plt>
    97cc:	mov	r6, r0
    97d0:	str	r0, [sp, #188]	; 0xbc
    97d4:	ldr	r0, [r5, #32]
    97d8:	bl	4138 <malloc@plt>
    97dc:	str	r0, [sp, #192]	; 0xc0
    97e0:	cmp	r4, #0
    97e4:	ble	9a38 <sas7bcat_begin_data+0x2a4>
    97e8:	sub	r3, r6, #4
    97ec:	str	r3, [sp, #176]	; 0xb0
    97f0:	mov	r3, #0
    97f4:	str	r3, [sp, #168]	; 0xa8
    97f8:	add	r3, sp, #212	; 0xd4
    97fc:	str	r3, [sp, #180]	; 0xb4
    9800:	ldr	fp, [pc, #1408]	; 9d88 <sas7bcat_begin_data+0x5f4>
    9804:	b	9918 <sas7bcat_begin_data+0x184>
    9808:	add	r0, r0, #12
    980c:	str	fp, [sl, #12]
    9810:	str	fp, [r0, #4]
    9814:	mov	r2, r7
    9818:	ldr	r1, [sp, #180]	; 0xb4
    981c:	bl	3f40 <memcpy@plt>
    9820:	mov	r8, #106	; 0x6a
    9824:	b	9a00 <sas7bcat_begin_data+0x26c>
    9828:	vldr	d7, [r0]
    982c:	vneg.f64	d7, d7
    9830:	vmov	r2, r3, d7
    9834:	strd	r2, [sp, #200]	; 0xc8
    9838:	bl	3ed4 <machine_is_little_endian@plt>
    983c:	cmp	r0, #0
    9840:	bne	98dc <sas7bcat_begin_data+0x148>
    9844:	ldr	r3, [sp, #164]	; 0xa4
    9848:	ldm	r3!, {r0, r1}
    984c:	str	r0, [r4, #22]
    9850:	str	r1, [r4, #26]
    9854:	ldr	r2, [r5, #28]
    9858:	strh	r2, [r8, #8]
    985c:	sxth	r2, r2
    9860:	ldr	r1, [r5, #24]
    9864:	add	r0, r8, #10
    9868:	bl	3f40 <memcpy@plt>
    986c:	add	r4, r4, #30
    9870:	ldr	r3, [r5, #28]
    9874:	add	r3, r3, #11
    9878:	add	r8, r8, r3
    987c:	add	r7, r7, #1
    9880:	ldr	r3, [r6, #264]	; 0x108
    9884:	cmp	r7, r3
    9888:	bge	98ec <sas7bcat_begin_data+0x158>
    988c:	mov	r1, r7
    9890:	mov	r0, r6
    9894:	bl	44f8 <readstat_get_value_label@plt>
    9898:	mov	r5, r0
    989c:	strb	r9, [r4, #2]
    98a0:	str	r7, [r4, #10]
    98a4:	ldr	r3, [r6]
    98a8:	cmp	r3, #0
    98ac:	bne	9828 <sas7bcat_begin_data+0x94>
    98b0:	ldr	r2, [r0, #20]
    98b4:	add	r0, r4, #14
    98b8:	str	fp, [r4, #14]
    98bc:	str	fp, [r0, #4]
    98c0:	str	fp, [r0, #8]
    98c4:	str	fp, [r0, #12]
    98c8:	cmp	r2, #16
    98cc:	movcs	r2, #16
    98d0:	ldr	r1, [r5, #16]
    98d4:	bl	3f40 <memcpy@plt>
    98d8:	b	9854 <sas7bcat_begin_data+0xc0>
    98dc:	ldrd	r0, [sp, #200]	; 0xc8
    98e0:	bl	3d9c <byteswap8@plt>
    98e4:	strd	r0, [sp, #200]	; 0xc8
    98e8:	b	9844 <sas7bcat_begin_data+0xb0>
    98ec:	ldr	r3, [sp, #176]	; 0xb0
    98f0:	str	sl, [r3, #4]!
    98f4:	str	r3, [sp, #176]	; 0xb0
    98f8:	ldr	r3, [sp, #168]	; 0xa8
    98fc:	add	r3, r3, #1
    9900:	mov	r2, r3
    9904:	str	r3, [sp, #168]	; 0xa8
    9908:	ldr	r3, [sp, #172]	; 0xac
    990c:	ldr	r3, [r3, #40]	; 0x28
    9910:	cmp	r3, r2
    9914:	ble	9a38 <sas7bcat_begin_data+0x2a4>
    9918:	ldr	r3, [sp, #172]	; 0xac
    991c:	ldr	r3, [r3, #36]	; 0x24
    9920:	ldr	r2, [sp, #168]	; 0xa8
    9924:	ldr	r6, [r3, r2, lsl #2]
    9928:	add	r4, r6, #4
    992c:	mov	r0, r4
    9930:	bl	4228 <strlen@plt>
    9934:	mov	r7, r0
    9938:	cmp	r0, #8
    993c:	movls	r5, #106	; 0x6a
    9940:	bls	9954 <sas7bcat_begin_data+0x1c0>
    9944:	cmp	r0, #32
    9948:	movcc	r7, r0
    994c:	movcs	r7, #32
    9950:	mov	r5, #138	; 0x8a
    9954:	mov	r2, r7
    9958:	mov	r1, r4
    995c:	ldr	r0, [sp, #180]	; 0xb4
    9960:	bl	3f40 <memcpy@plt>
    9964:	ldr	r4, [r6, #264]	; 0x108
    9968:	cmp	r4, #0
    996c:	ble	999c <sas7bcat_begin_data+0x208>
    9970:	mov	r8, #0
    9974:	mov	r1, r8
    9978:	mov	r0, r6
    997c:	bl	44f8 <readstat_get_value_label@plt>
    9980:	ldr	r3, [r0, #28]
    9984:	add	r3, r3, #41	; 0x29
    9988:	add	r5, r5, r3
    998c:	add	r8, r8, #1
    9990:	ldr	r4, [r6, #264]	; 0x108
    9994:	cmp	r8, r4
    9998:	blt	9974 <sas7bcat_begin_data+0x1e0>
    999c:	add	r1, r5, #8
    99a0:	mov	r0, #1
    99a4:	bl	3d78 <calloc@plt>
    99a8:	mov	sl, r0
    99ac:	str	r5, [r0]
    99b0:	str	r4, [r0, #42]	; 0x2a
    99b4:	str	r4, [r0, #46]	; 0x2e
    99b8:	cmp	r7, #8
    99bc:	bls	9808 <sas7bcat_begin_data+0x74>
    99c0:	mvn	r3, #127	; 0x7f
    99c4:	strb	r3, [r0, #6]
    99c8:	add	r3, r0, #12
    99cc:	ldr	r5, [sp, #180]	; 0xb4
    99d0:	ldm	r5, {r0, r1}
    99d4:	stm	r3, {r0, r1}
    99d8:	add	r4, sl, #110	; 0x6e
    99dc:	mov	r2, #32
    99e0:	mov	r1, r2
    99e4:	mov	r0, r4
    99e8:	bl	42d0 <memset@plt>
    99ec:	mov	r2, r7
    99f0:	mov	r1, r5
    99f4:	mov	r0, r4
    99f8:	bl	3f40 <memcpy@plt>
    99fc:	mov	r8, #138	; 0x8a
    9a00:	add	r4, r8, #4
    9a04:	add	r4, sl, r4
    9a08:	ldr	r3, [r6, #264]	; 0x108
    9a0c:	rsb	r2, r3, r3, lsl #4
    9a10:	add	r8, r8, r2, lsl #1
    9a14:	add	r8, r8, #4
    9a18:	add	r8, sl, r8
    9a1c:	cmp	r3, #0
    9a20:	ble	98ec <sas7bcat_begin_data+0x158>
    9a24:	mov	r7, #0
    9a28:	mov	r9, #24
    9a2c:	add	r3, sp, #200	; 0xc8
    9a30:	str	r3, [sp, #164]	; 0xa4
    9a34:	b	988c <sas7bcat_begin_data+0xf8>
    9a38:	mov	r2, #4
    9a3c:	mov	r3, #0
    9a40:	ldr	r4, [sp, #184]	; 0xb8
    9a44:	strd	r2, [r4, #56]	; 0x38
    9a48:	mov	r2, #164	; 0xa4
    9a4c:	mov	r1, #0
    9a50:	add	r0, sp, #212	; 0xd4
    9a54:	bl	42d0 <memset@plt>
    9a58:	ldr	r3, [r4, #4]
    9a5c:	cmp	r3, #0
    9a60:	movne	r3, #51	; 0x33
    9a64:	moveq	r3, #34	; 0x22
    9a68:	strb	r3, [sp, #244]	; 0xf4
    9a6c:	mov	r3, #34	; 0x22
    9a70:	strb	r3, [sp, #247]	; 0xf7
    9a74:	bl	3ed4 <machine_is_little_endian@plt>
    9a78:	adds	r0, r0, #0
    9a7c:	movne	r0, #1
    9a80:	strb	r0, [sp, #249]	; 0xf9
    9a84:	mov	r3, #49	; 0x31
    9a88:	strb	r3, [sp, #251]	; 0xfb
    9a8c:	mov	r3, #20
    9a90:	strb	r3, [sp, #282]	; 0x11a
    9a94:	ldr	r3, [pc, #752]	; 9d8c <sas7bcat_begin_data+0x5f8>
    9a98:	add	r3, pc, r3
    9a9c:	ldm	r3, {r0, r1}
    9aa0:	add	r2, sp, #296	; 0x128
    9aa4:	stm	r2, {r0, r1}
    9aa8:	add	r3, r3, #12
    9aac:	ldm	r3, {r0, r1}
    9ab0:	add	r3, sp, #368	; 0x170
    9ab4:	stm	r3, {r0, r1}
    9ab8:	ldr	r3, [pc, #720]	; 9d90 <sas7bcat_begin_data+0x5fc>
    9abc:	ldr	r2, [sp, #196]	; 0xc4
    9ac0:	ldr	lr, [r2, r3]
    9ac4:	add	ip, sp, #212	; 0xd4
    9ac8:	ldr	r0, [lr]
    9acc:	ldr	r1, [lr, #4]
    9ad0:	ldr	r2, [lr, #8]
    9ad4:	ldr	r3, [lr, #12]
    9ad8:	stmia	ip!, {r0, r1, r2, r3}
    9adc:	ldr	r0, [lr, #16]
    9ae0:	ldr	r1, [lr, #20]
    9ae4:	ldr	r2, [lr, #24]
    9ae8:	ldr	r3, [lr, #28]
    9aec:	stmia	ip!, {r0, r1, r2, r3}
    9af0:	mov	r2, #156	; 0x9c
    9af4:	add	r1, sp, #220	; 0xdc
    9af8:	mov	r0, sp
    9afc:	bl	3f40 <memcpy@plt>
    9b00:	add	r3, sp, #212	; 0xd4
    9b04:	ldm	r3, {r2, r3}
    9b08:	mov	r1, r4
    9b0c:	ldr	r0, [sp, #172]	; 0xac
    9b10:	bl	40e4 <sas_write_header@plt>
    9b14:	subs	r6, r0, #0
    9b18:	beq	9b74 <sas7bcat_begin_data+0x3e0>
    9b1c:	ldr	r7, [sp, #172]	; 0xac
    9b20:	ldr	r3, [r7, #40]	; 0x28
    9b24:	cmp	r3, #0
    9b28:	ble	9b50 <sas7bcat_begin_data+0x3bc>
    9b2c:	ldr	r3, [sp, #188]	; 0xbc
    9b30:	sub	r5, r3, #4
    9b34:	mov	r4, #0
    9b38:	ldr	r0, [r5, #4]!
    9b3c:	bl	3ee0 <free@plt>
    9b40:	add	r4, r4, #1
    9b44:	ldr	r3, [r7, #40]	; 0x28
    9b48:	cmp	r3, r4
    9b4c:	bgt	9b38 <sas7bcat_begin_data+0x3a4>
    9b50:	ldr	r0, [sp, #188]	; 0xbc
    9b54:	bl	3ee0 <free@plt>
    9b58:	ldr	r0, [sp, #184]	; 0xb8
    9b5c:	bl	3ee0 <free@plt>
    9b60:	ldr	r0, [sp, #192]	; 0xc0
    9b64:	bl	3ee0 <free@plt>
    9b68:	mov	r0, r6
    9b6c:	add	sp, sp, #396	; 0x18c
    9b70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9b74:	ldr	r3, [sp, #184]	; 0xb8
    9b78:	ldr	r1, [r3, #32]
    9b7c:	ldr	r0, [sp, #172]	; 0xac
    9b80:	bl	403c <readstat_write_zeros@plt>
    9b84:	subs	r6, r0, #0
    9b88:	bne	9b1c <sas7bcat_begin_data+0x388>
    9b8c:	ldr	r6, [sp, #184]	; 0xb8
    9b90:	ldr	r2, [r6, #32]
    9b94:	mov	r1, #0
    9b98:	ldr	r9, [sp, #192]	; 0xc0
    9b9c:	mov	r0, r9
    9ba0:	bl	42d0 <memset@plt>
    9ba4:	add	r2, r9, #856	; 0x358
    9ba8:	ldr	r1, [sp, #172]	; 0xac
    9bac:	ldr	r5, [r1, #40]	; 0x28
    9bb0:	cmp	r5, #0
    9bb4:	ble	9c3c <sas7bcat_begin_data+0x4a8>
    9bb8:	add	r1, r9, #1056	; 0x420
    9bbc:	add	r1, r1, #12
    9bc0:	mov	r0, r6
    9bc4:	ldr	r3, [r6, #32]
    9bc8:	add	r3, r9, r3
    9bcc:	cmp	r1, r3
    9bd0:	bhi	9c3c <sas7bcat_begin_data+0x4a8>
    9bd4:	add	lr, r9, #1280	; 0x500
    9bd8:	ldr	r3, [sp, #188]	; 0xbc
    9bdc:	sub	r4, r3, #4
    9be0:	mov	r3, #16
    9be4:	mov	ip, #0
    9be8:	ldr	r8, [pc, #420]	; 9d94 <sas7bcat_begin_data+0x600>
    9bec:	mov	r7, #4
    9bf0:	mov	r6, #79	; 0x4f
    9bf4:	str	r8, [r2]
    9bf8:	strh	r7, [r2, #4]
    9bfc:	uxth	r3, r3
    9c00:	strh	r3, [r2, #8]
    9c04:	strb	r6, [r2, #50]	; 0x32
    9c08:	ldr	r1, [r4, #4]!
    9c0c:	ldr	r1, [r1]
    9c10:	add	r3, r3, r1
    9c14:	sxth	r3, r3
    9c18:	add	ip, ip, #1
    9c1c:	cmp	ip, r5
    9c20:	beq	9c3c <sas7bcat_begin_data+0x4a8>
    9c24:	add	r2, r2, #212	; 0xd4
    9c28:	ldr	r1, [r0, #32]
    9c2c:	add	r1, r9, r1
    9c30:	cmp	lr, r1
    9c34:	add	lr, lr, #212	; 0xd4
    9c38:	bls	9bf4 <sas7bcat_begin_data+0x460>
    9c3c:	ldr	r3, [sp, #184]	; 0xb8
    9c40:	ldr	r2, [r3, #32]
    9c44:	ldr	r1, [sp, #192]	; 0xc0
    9c48:	ldr	r0, [sp, #172]	; 0xac
    9c4c:	bl	4480 <readstat_write_bytes@plt>
    9c50:	subs	r6, r0, #0
    9c54:	bne	9b1c <sas7bcat_begin_data+0x388>
    9c58:	ldr	r3, [sp, #184]	; 0xb8
    9c5c:	ldr	r1, [r3, #32]
    9c60:	ldr	r0, [sp, #172]	; 0xac
    9c64:	bl	403c <readstat_write_zeros@plt>
    9c68:	subs	r6, r0, #0
    9c6c:	bne	9b1c <sas7bcat_begin_data+0x388>
    9c70:	ldr	r5, [sp, #184]	; 0xb8
    9c74:	ldr	r2, [r5, #32]
    9c78:	mov	r1, #0
    9c7c:	ldr	r0, [sp, #192]	; 0xc0
    9c80:	bl	42d0 <memset@plt>
    9c84:	ldr	r3, [sp, #172]	; 0xac
    9c88:	ldr	r8, [r3, #40]	; 0x28
    9c8c:	cmp	r8, #0
    9c90:	ble	9d68 <sas7bcat_begin_data+0x5d4>
    9c94:	ldr	fp, [sp, #188]	; 0xbc
    9c98:	ldr	r4, [fp]
    9c9c:	ldr	lr, [r4]
    9ca0:	add	r0, lr, #32
    9ca4:	mov	r1, #0
    9ca8:	ldrd	r2, [r5, #32]
    9cac:	cmp	r2, r0
    9cb0:	sbcs	r3, r3, r1
    9cb4:	blt	9d68 <sas7bcat_begin_data+0x5d4>
    9cb8:	mov	ip, #16
    9cbc:	mov	r9, ip
    9cc0:	mov	r7, #0
    9cc4:	add	r5, sp, #376	; 0x178
    9cc8:	mov	r6, r7
    9ccc:	str	r6, [r5]
    9cd0:	str	r6, [r5, #4]
    9cd4:	str	r6, [r5, #8]
    9cd8:	str	r6, [r5, #12]
    9cdc:	add	r3, sp, #380	; 0x17c
    9ce0:	add	r3, r3, #2
    9ce4:	strh	lr, [r3]
    9ce8:	ldr	r3, [sp, #192]	; 0xc0
    9cec:	add	sl, r3, r9
    9cf0:	mov	lr, r5
    9cf4:	ldm	lr!, {r0, r1, r2, r3}
    9cf8:	ldr	lr, [sp, #192]	; 0xc0
    9cfc:	str	r0, [lr, r9]
    9d00:	str	r1, [sl, #4]
    9d04:	str	r2, [sl, #8]
    9d08:	str	r3, [sl, #12]
    9d0c:	add	ip, ip, #16
    9d10:	uxth	r9, ip
    9d14:	ldr	r2, [r4]
    9d18:	add	r1, r4, #4
    9d1c:	sxtah	r0, lr, r9
    9d20:	bl	3f40 <memcpy@plt>
    9d24:	ldr	ip, [r4]
    9d28:	add	ip, r9, ip
    9d2c:	sxth	ip, ip
    9d30:	add	r7, r7, #1
    9d34:	cmp	r7, r8
    9d38:	beq	9d68 <sas7bcat_begin_data+0x5d4>
    9d3c:	mov	r9, ip
    9d40:	ldr	r4, [fp, #4]!
    9d44:	ldr	lr, [r4]
    9d48:	add	r2, lr, #16
    9d4c:	add	r2, r2, ip
    9d50:	mov	r3, #0
    9d54:	ldr	r1, [sp, #184]	; 0xb8
    9d58:	ldrd	r0, [r1, #32]
    9d5c:	cmp	r0, r2
    9d60:	sbcs	r3, r1, r3
    9d64:	bge	9ccc <sas7bcat_begin_data+0x538>
    9d68:	ldr	r3, [sp, #184]	; 0xb8
    9d6c:	ldr	r2, [r3, #32]
    9d70:	ldr	r1, [sp, #192]	; 0xc0
    9d74:	ldr	r0, [sp, #172]	; 0xac
    9d78:	bl	4480 <readstat_write_bytes@plt>
    9d7c:	mov	r6, r0
    9d80:	b	9b1c <sas7bcat_begin_data+0x388>
    9d84:	.word	0x0003b850
    9d88:	.word	0x20202020
    9d8c:	.word	0x0001b718
    9d90:	.word	0x000002c8
    9d94:	.word	0x52534c58

00009d98 <readstat_begin_writing_sas7bcat>:
    9d98:	push	{r4, lr}
    9d9c:	ldr	r3, [r0, #8]
    9da0:	cmp	r3, #0
    9da4:	moveq	r3, #9
    9da8:	streq	r3, [r0, #8]
    9dac:	ldr	r3, [pc, #16]	; 9dc4 <readstat_begin_writing_sas7bcat+0x2c>
    9db0:	add	r3, pc, r3
    9db4:	str	r3, [r0, #276]	; 0x114
    9db8:	mov	r2, #0
    9dbc:	bl	3f88 <readstat_begin_writing_file@plt>
    9dc0:	pop	{r4, pc}
    9dc4:	.word	0xfffff9dc

00009dc8 <sas7bdat_update_progress>:
    9dc8:	push	{r4, lr}
    9dcc:	ldr	r3, [r0, #56]	; 0x38
    9dd0:	ldr	r4, [r3, #16]
    9dd4:	ldr	r3, [r3, #20]
    9dd8:	ldr	r2, [r0, #52]	; 0x34
    9ddc:	ldr	r1, [r0, #28]
    9de0:	ldr	r0, [r0, #32]
    9de4:	blx	r4
    9de8:	pop	{r4, pc}

00009dec <sas7bdat_validate_subheader_pointer>:
    9dec:	push	{r4, r5, r6, r7, r8, r9, sl, fp}
    9df0:	sub	sp, sp, #8
    9df4:	ldrd	r6, [r0]
    9df8:	strd	r6, [sp]
    9dfc:	mov	r5, #0
    9e00:	cmp	r7, r5
    9e04:	cmpeq	r6, r1
    9e08:	movhi	r0, #5
    9e0c:	bls	9e1c <sas7bdat_validate_subheader_pointer+0x30>
    9e10:	add	sp, sp, #8
    9e14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
    9e18:	bx	lr
    9e1c:	mov	r4, r1
    9e20:	ldrd	r8, [r0, #8]
    9e24:	cmp	r5, r9
    9e28:	cmpeq	r1, r8
    9e2c:	movcc	r0, #5
    9e30:	bcc	9e10 <sas7bdat_validate_subheader_pointer+0x24>
    9e34:	adds	sl, r6, r8
    9e38:	adc	fp, r7, r9
    9e3c:	cmp	r5, fp
    9e40:	cmpeq	r1, sl
    9e44:	movcc	r0, #5
    9e48:	bcc	9e10 <sas7bdat_validate_subheader_pointer+0x24>
    9e4c:	uxth	r6, r2
    9e50:	ldr	sl, [r3, #144]	; 0x90
    9e54:	ldr	r2, [r3, #148]	; 0x94
    9e58:	umull	sl, fp, sl, r6
    9e5c:	mla	fp, r2, r6, fp
    9e60:	ldrd	r6, [r3, #128]	; 0x80
    9e64:	adds	r6, r6, sl
    9e68:	adc	r7, r7, fp
    9e6c:	mov	sl, r6
    9e70:	mov	fp, r7
    9e74:	ldrd	r6, [sp]
    9e78:	cmp	r7, fp
    9e7c:	cmpeq	r6, sl
    9e80:	movcc	r0, #5
    9e84:	bcc	9e10 <sas7bdat_validate_subheader_pointer+0x24>
    9e88:	ldrb	r2, [r0, #16]
    9e8c:	cmp	r2, #0
    9e90:	movne	r0, #0
    9e94:	bne	9e10 <sas7bdat_validate_subheader_pointer+0x24>
    9e98:	ldrd	r2, [r3, #136]	; 0x88
    9e9c:	cmp	r9, r3
    9ea0:	cmpeq	r8, r2
    9ea4:	movcc	r0, #5
    9ea8:	bcc	9e10 <sas7bdat_validate_subheader_pointer+0x24>
    9eac:	adds	r6, r6, r2
    9eb0:	adc	r7, r7, r3
    9eb4:	cmp	r5, r7
    9eb8:	cmpeq	r4, r6
    9ebc:	movcs	r0, #0
    9ec0:	movcc	r0, #5
    9ec4:	b	9e10 <sas7bdat_validate_subheader_pointer+0x24>

00009ec8 <sas7bdat_copy_text_ref>:
    9ec8:	push	{r4, r5, lr}
    9ecc:	sub	sp, sp, #20
    9ed0:	add	ip, sp, #16
    9ed4:	stmdb	ip, {r2, r3}
    9ed8:	ldr	ip, [sp, #32]
    9edc:	ldrh	lr, [sp, #8]
    9ee0:	ldr	r3, [ip, #152]	; 0x98
    9ee4:	cmp	lr, r3
    9ee8:	movge	r0, #5
    9eec:	bge	9f38 <sas7bdat_copy_text_ref+0x70>
    9ef0:	ldrh	r3, [sp, #12]
    9ef4:	cmp	r3, #0
    9ef8:	strbeq	r3, [r0]
    9efc:	moveq	r0, r3
    9f00:	beq	9f38 <sas7bdat_copy_text_ref+0x70>
    9f04:	ldrh	r2, [sp, #10]
    9f08:	add	r5, r2, r3
    9f0c:	ldr	r4, [ip, #156]	; 0x9c
    9f10:	ldr	r4, [r4, lr, lsl #2]
    9f14:	cmp	r5, r4
    9f18:	movhi	r0, #5
    9f1c:	bhi	9f38 <sas7bdat_copy_text_ref+0x70>
    9f20:	ldr	r4, [ip, #160]	; 0xa0
    9f24:	ldr	lr, [r4, lr, lsl #2]
    9f28:	ldr	ip, [ip, #208]	; 0xd0
    9f2c:	str	ip, [sp]
    9f30:	add	r2, lr, r2
    9f34:	bl	4264 <readstat_convert@plt>
    9f38:	add	sp, sp, #20
    9f3c:	pop	{r4, r5, pc}

00009f40 <sas7bdat_parse_text_ref>:
    9f40:	push	{r4, r5, r6, r7, r8, lr}
    9f44:	mov	r4, r0
    9f48:	mov	r5, r1
    9f4c:	mov	r6, r2
    9f50:	ldr	r1, [r2, #60]	; 0x3c
    9f54:	mov	r0, r5
    9f58:	bl	43fc <sas_read2@plt>
    9f5c:	mov	r8, r0
    9f60:	ldr	r1, [r6, #60]	; 0x3c
    9f64:	add	r0, r5, #2
    9f68:	bl	43fc <sas_read2@plt>
    9f6c:	mov	r7, r0
    9f70:	ldr	r1, [r6, #60]	; 0x3c
    9f74:	add	r0, r5, #4
    9f78:	bl	43fc <sas_read2@plt>
    9f7c:	strh	r8, [r4]
    9f80:	strh	r7, [r4, #2]
    9f84:	strh	r0, [r4, #4]
    9f88:	mov	r0, r4
    9f8c:	pop	{r4, r5, r6, r7, r8, pc}

00009f90 <sas7bdat_parse_subheader_pointer>:
    9f90:	push	{r4, r5, r6, r7, r8, lr}
    9f94:	mov	r7, r0
    9f98:	mov	r6, r2
    9f9c:	mov	r4, r3
    9fa0:	ldr	r3, [r3, #44]	; 0x2c
    9fa4:	cmp	r3, #0
    9fa8:	beq	9ff0 <sas7bdat_parse_subheader_pointer+0x60>
    9fac:	cmp	r1, #17
    9fb0:	bhi	9fbc <sas7bdat_parse_subheader_pointer+0x2c>
    9fb4:	mov	r0, #5
    9fb8:	pop	{r4, r5, r6, r7, r8, pc}
    9fbc:	ldr	r1, [r4, #60]	; 0x3c
    9fc0:	bl	43f0 <sas_read8@plt>
    9fc4:	strd	r0, [r6]
    9fc8:	ldr	r1, [r4, #60]	; 0x3c
    9fcc:	add	r0, r7, #8
    9fd0:	bl	43f0 <sas_read8@plt>
    9fd4:	strd	r0, [r6, #8]
    9fd8:	ldrb	r3, [r7, #16]
    9fdc:	strb	r3, [r6, #16]
    9fe0:	ldrb	r3, [r7, #17]
    9fe4:	strb	r3, [r6, #17]
    9fe8:	mov	r0, #0
    9fec:	pop	{r4, r5, r6, r7, r8, pc}
    9ff0:	cmp	r1, #9
    9ff4:	bhi	a000 <sas7bdat_parse_subheader_pointer+0x70>
    9ff8:	mov	r0, #5
    9ffc:	pop	{r4, r5, r6, r7, r8, pc}
    a000:	ldr	r1, [r4, #60]	; 0x3c
    a004:	bl	4420 <sas_read4@plt>
    a008:	mov	r5, #0
    a00c:	str	r0, [r6]
    a010:	str	r5, [r6, #4]
    a014:	ldr	r1, [r4, #60]	; 0x3c
    a018:	add	r0, r7, #4
    a01c:	bl	4420 <sas_read4@plt>
    a020:	str	r0, [r6, #8]
    a024:	str	r5, [r6, #12]
    a028:	ldrb	r3, [r7, #8]
    a02c:	strb	r3, [r6, #16]
    a030:	ldrb	r3, [r7, #9]
    a034:	strb	r3, [r6, #17]
    a038:	mov	r0, r5
    a03c:	pop	{r4, r5, r6, r7, r8, pc}

0000a040 <sas7bdat_realloc_col_info>:
    a040:	push	{r4, r5, r6, lr}
    a044:	ldr	r6, [r0, #188]	; 0xbc
    a048:	cmp	r6, r1
    a04c:	bcc	a058 <sas7bdat_realloc_col_info+0x18>
    a050:	mov	r0, #0
    a054:	pop	{r4, r5, r6, pc}
    a058:	mov	r4, r1
    a05c:	mov	r5, r0
    a060:	str	r1, [r5, #188]	; 0xbc
    a064:	add	r1, r1, r1, lsl #2
    a068:	lsl	r1, r1, #3
    a06c:	ldr	r0, [r0, #192]	; 0xc0
    a070:	bl	430c <readstat_realloc@plt>
    a074:	str	r0, [r5, #192]	; 0xc0
    a078:	cmp	r0, #0
    a07c:	beq	a0a4 <sas7bdat_realloc_col_info+0x64>
    a080:	sub	r1, r4, r6
    a084:	add	r1, r1, r1, lsl #2
    a088:	add	r6, r6, r6, lsl #2
    a08c:	lsl	r2, r1, #3
    a090:	mov	r1, #0
    a094:	add	r0, r0, r6, lsl #3
    a098:	bl	42d0 <memset@plt>
    a09c:	mov	r0, #0
    a0a0:	pop	{r4, r5, r6, pc}
    a0a4:	mov	r0, #3
    a0a8:	pop	{r4, r5, r6, pc}

0000a0ac <sas7bdat_parse_subheader>:
    a0ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a0b0:	sub	sp, sp, #12
    a0b4:	ldrd	r8, [r3, #136]	; 0x88
    a0b8:	mov	fp, #0
    a0bc:	adds	r4, r8, #2
    a0c0:	adc	r5, r9, #0
    a0c4:	cmp	fp, r5
    a0c8:	cmpeq	r2, r4
    a0cc:	movcc	r4, #5
    a0d0:	bcs	a0e0 <sas7bdat_parse_subheader+0x34>
    a0d4:	mov	r0, r4
    a0d8:	add	sp, sp, #12
    a0dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a0e0:	mov	r5, r3
    a0e4:	mov	r4, r2
    a0e8:	mov	r6, r1
    a0ec:	ldr	r3, [pc, #1480]	; a6bc <sas7bdat_parse_subheader+0x610>
    a0f0:	cmp	r0, r3
    a0f4:	beq	a154 <sas7bdat_parse_subheader+0xa8>
    a0f8:	ldr	r3, [pc, #1472]	; a6c0 <sas7bdat_parse_subheader+0x614>
    a0fc:	cmp	r0, r3
    a100:	beq	a1b4 <sas7bdat_parse_subheader+0x108>
    a104:	cmn	r0, #1024	; 0x400
    a108:	moveq	r4, #0
    a10c:	beq	a0d4 <sas7bdat_parse_subheader+0x28>
    a110:	cmn	r0, #3
    a114:	beq	a1fc <sas7bdat_parse_subheader+0x150>
    a118:	cmn	r0, #1
    a11c:	beq	a2f0 <sas7bdat_parse_subheader+0x244>
    a120:	cmn	r0, #4
    a124:	beq	a3b0 <sas7bdat_parse_subheader+0x304>
    a128:	ldr	r3, [pc, #1428]	; a6c4 <sas7bdat_parse_subheader+0x618>
    a12c:	cmp	r0, r3
    a130:	beq	a510 <sas7bdat_parse_subheader+0x464>
    a134:	cmn	r0, #2
    a138:	moveq	r4, #0
    a13c:	beq	a0d4 <sas7bdat_parse_subheader+0x28>
    a140:	bic	r0, r0, #7
    a144:	cmn	r0, #8
    a148:	movne	r4, #5
    a14c:	moveq	r4, #0
    a150:	b	a0d4 <sas7bdat_parse_subheader+0x28>
    a154:	ldr	r3, [r5, #44]	; 0x2c
    a158:	cmp	r3, #0
    a15c:	bne	a5e0 <sas7bdat_parse_subheader+0x534>
    a160:	cmp	r2, #63	; 0x3f
    a164:	movls	r4, #5
    a168:	bls	a0d4 <sas7bdat_parse_subheader+0x28>
    a16c:	ldr	r1, [r5, #60]	; 0x3c
    a170:	add	r0, r6, #20
    a174:	bl	4420 <sas_read4@plt>
    a178:	mov	r4, r0
    a17c:	ldr	r1, [r5, #60]	; 0x3c
    a180:	add	r0, r6, #24
    a184:	bl	4420 <sas_read4@plt>
    a188:	mov	r8, r0
    a18c:	mov	r9, #0
    a190:	ldr	r1, [r5, #60]	; 0x3c
    a194:	add	r0, r6, #60	; 0x3c
    a198:	bl	4420 <sas_read4@plt>
    a19c:	mov	r6, r0
    a1a0:	b	a620 <sas7bdat_parse_subheader+0x574>
    a1a4:	str	r8, [r5, #88]	; 0x58
    a1a8:	mov	r2, #0
    a1ac:	mov	r3, #0
    a1b0:	b	a660 <sas7bdat_parse_subheader+0x5b4>
    a1b4:	ldr	r3, [r5, #80]	; 0x50
    a1b8:	cmp	r3, #0
    a1bc:	movne	r4, #5
    a1c0:	bne	a0d4 <sas7bdat_parse_subheader+0x28>
    a1c4:	ldr	r3, [r5, #64]	; 0x40
    a1c8:	cmp	r3, #0
    a1cc:	movne	r4, #5
    a1d0:	bne	a0d4 <sas7bdat_parse_subheader+0x28>
    a1d4:	ldr	r3, [r5, #44]	; 0x2c
    a1d8:	cmp	r3, #0
    a1dc:	bne	a68c <sas7bdat_parse_subheader+0x5e0>
    a1e0:	cmp	r4, #7
    a1e4:	movls	r4, #5
    a1e8:	bls	a0d4 <sas7bdat_parse_subheader+0x28>
    a1ec:	ldr	r1, [r5, #60]	; 0x3c
    a1f0:	add	r0, r6, #4
    a1f4:	bl	4420 <sas_read4@plt>
    a1f8:	b	a6a4 <sas7bdat_parse_subheader+0x5f8>
    a1fc:	add	r6, r1, r8
    a200:	ldr	r1, [r5, #60]	; 0x3c
    a204:	mov	r0, r6
    a208:	bl	43fc <sas_read2@plt>
    a20c:	mov	r7, r0
    a210:	mov	r1, r8
    a214:	mov	r0, r4
    a218:	bl	43e4 <sas_subheader_remainder@plt>
    a21c:	cmp	r7, r0
    a220:	movne	r4, #5
    a224:	bne	a0d4 <sas7bdat_parse_subheader+0x28>
    a228:	ldr	r1, [r5, #152]	; 0x98
    a22c:	add	r1, r1, #1
    a230:	str	r1, [r5, #152]	; 0x98
    a234:	lsl	r1, r1, #2
    a238:	ldr	r0, [r5, #160]	; 0xa0
    a23c:	bl	430c <readstat_realloc@plt>
    a240:	str	r0, [r5, #160]	; 0xa0
    a244:	ldr	r1, [r5, #152]	; 0x98
    a248:	lsl	r1, r1, #2
    a24c:	ldr	r0, [r5, #156]	; 0x9c
    a250:	bl	430c <readstat_realloc@plt>
    a254:	str	r0, [r5, #156]	; 0x9c
    a258:	ldr	r3, [r5, #160]	; 0xa0
    a25c:	cmp	r0, #0
    a260:	cmpne	r3, #0
    a264:	moveq	r4, #3
    a268:	beq	a0d4 <sas7bdat_parse_subheader+0x28>
    a26c:	sub	r4, r4, r8
    a270:	mov	r0, r4
    a274:	bl	4258 <readstat_malloc@plt>
    a278:	subs	r7, r0, #0
    a27c:	moveq	r4, #3
    a280:	beq	a0d4 <sas7bdat_parse_subheader+0x28>
    a284:	mov	r2, r4
    a288:	mov	r1, r6
    a28c:	mov	r0, r7
    a290:	bl	3f40 <memcpy@plt>
    a294:	ldr	r3, [r5, #152]	; 0x98
    a298:	sub	r3, r3, #-1073741823	; 0xc0000001
    a29c:	ldr	r2, [r5, #156]	; 0x9c
    a2a0:	str	r4, [r2, r3, lsl #2]
    a2a4:	ldr	r3, [r5, #152]	; 0x98
    a2a8:	sub	r3, r3, #-1073741823	; 0xc0000001
    a2ac:	ldr	r2, [r5, #160]	; 0xa0
    a2b0:	str	r7, [r2, r3, lsl #2]
    a2b4:	cmp	r4, #20
    a2b8:	movls	r4, #0
    a2bc:	bls	a0d4 <sas7bdat_parse_subheader+0x28>
    a2c0:	mov	r2, #8
    a2c4:	ldr	r1, [pc, #1020]	; a6c8 <sas7bdat_parse_subheader+0x61c>
    a2c8:	add	r1, pc, r1
    a2cc:	add	r0, r7, #12
    a2d0:	bl	4528 <strncmp@plt>
    a2d4:	cmp	r0, #0
    a2d8:	movne	r4, #0
    a2dc:	ldrbeq	r3, [r5, #2529]	; 0x9e1
    a2e0:	orreq	r3, r3, #1
    a2e4:	strbeq	r3, [r5, #2529]	; 0x9e1
    a2e8:	moveq	r4, #0
    a2ec:	b	a0d4 <sas7bdat_parse_subheader+0x28>
    a2f0:	ldr	r3, [r5, #44]	; 0x2c
    a2f4:	cmp	r3, #0
    a2f8:	subne	r7, r4, #28
    a2fc:	subeq	r7, r4, #20
    a300:	lsr	r7, r7, #3
    a304:	ldr	r1, [r5, #60]	; 0x3c
    a308:	add	r0, r6, r8
    a30c:	bl	43fc <sas_read2@plt>
    a310:	mov	sl, r0
    a314:	mov	r1, r8
    a318:	mov	r0, r4
    a31c:	bl	43e4 <sas_subheader_remainder@plt>
    a320:	cmp	sl, r0
    a324:	movne	r4, #5
    a328:	bne	a0d4 <sas7bdat_parse_subheader+0x28>
    a32c:	ldr	r1, [r5, #164]	; 0xa4
    a330:	add	r1, r7, r1
    a334:	str	r1, [r5, #164]	; 0xa4
    a338:	mov	r0, r5
    a33c:	bl	a040 <sas7bdat_realloc_col_info>
    a340:	subs	r4, r0, #0
    a344:	bne	a0d4 <sas7bdat_parse_subheader+0x28>
    a348:	ldr	r3, [r5, #164]	; 0xa4
    a34c:	sub	r7, r3, r7
    a350:	cmp	r3, r7
    a354:	ble	a0d4 <sas7bdat_parse_subheader+0x28>
    a358:	add	r8, r8, #8
    a35c:	add	r9, r6, r8
    a360:	mov	r8, #40	; 0x28
    a364:	mul	r8, r8, r7
    a368:	mov	sl, sp
    a36c:	ldr	r6, [r5, #192]	; 0xc0
    a370:	mov	r2, r5
    a374:	mov	r1, r9
    a378:	mov	r0, sl
    a37c:	bl	9f40 <sas7bdat_parse_text_ref>
    a380:	add	r3, r6, r8
    a384:	ldr	r0, [sl]
    a388:	str	r0, [r6, r8]
    a38c:	ldrh	r2, [sl, #4]
    a390:	strh	r2, [r3, #4]
    a394:	add	r9, r9, #8
    a398:	add	r7, r7, #1
    a39c:	add	r8, r8, #40	; 0x28
    a3a0:	ldr	r3, [r5, #164]	; 0xa4
    a3a4:	cmp	r7, r3
    a3a8:	blt	a36c <sas7bdat_parse_subheader+0x2c0>
    a3ac:	b	a0d4 <sas7bdat_parse_subheader+0x28>
    a3b0:	ldr	r3, [r5, #44]	; 0x2c
    a3b4:	cmp	r3, #0
    a3b8:	subne	r7, r4, #28
    a3bc:	lsrne	r7, r7, #4
    a3c0:	subeq	r7, r4, #20
    a3c4:	ldreq	r3, [pc, #768]	; a6cc <sas7bdat_parse_subheader+0x620>
    a3c8:	umulleq	r3, r7, r3, r7
    a3cc:	lsreq	r7, r7, #3
    a3d0:	ldr	r1, [r5, #60]	; 0x3c
    a3d4:	add	r0, r6, r8
    a3d8:	bl	43fc <sas_read2@plt>
    a3dc:	mov	sl, r0
    a3e0:	mov	r1, r8
    a3e4:	mov	r0, r4
    a3e8:	bl	43e4 <sas_subheader_remainder@plt>
    a3ec:	cmp	sl, r0
    a3f0:	movne	r4, #5
    a3f4:	bne	a0d4 <sas7bdat_parse_subheader+0x28>
    a3f8:	ldr	r1, [r5, #168]	; 0xa8
    a3fc:	add	r1, r7, r1
    a400:	str	r1, [r5, #168]	; 0xa8
    a404:	mov	r0, r5
    a408:	bl	a040 <sas7bdat_realloc_col_info>
    a40c:	subs	r4, r0, #0
    a410:	bne	a0d4 <sas7bdat_parse_subheader+0x28>
    a414:	ldr	r3, [r5, #168]	; 0xa8
    a418:	sub	r7, r3, r7
    a41c:	cmp	r3, r7
    a420:	ble	a0d4 <sas7bdat_parse_subheader+0x28>
    a424:	add	r8, r8, #8
    a428:	add	r6, r6, r8
    a42c:	mov	r8, #40	; 0x28
    a430:	mul	r8, r8, r7
    a434:	mov	fp, #0
    a438:	b	a4e8 <sas7bdat_parse_subheader+0x43c>
    a43c:	ldr	r9, [r5, #192]	; 0xc0
    a440:	add	r9, r9, r8
    a444:	ldr	r1, [r5, #60]	; 0x3c
    a448:	mov	r0, r6
    a44c:	bl	4420 <sas_read4@plt>
    a450:	str	r0, [r9, #24]
    a454:	str	fp, [r9, #28]
    a458:	ldr	r0, [r5, #44]	; 0x2c
    a45c:	cmp	r0, #0
    a460:	moveq	r0, #4
    a464:	movne	r0, #8
    a468:	ldr	sl, [r5, #192]	; 0xc0
    a46c:	add	sl, sl, r8
    a470:	mov	r9, r0
    a474:	ldr	r1, [r5, #60]	; 0x3c
    a478:	add	r0, r6, r0
    a47c:	bl	4420 <sas_read4@plt>
    a480:	str	r0, [sl, #32]
    a484:	ldr	r3, [r5, #192]	; 0xc0
    a488:	add	r3, r3, r8
    a48c:	ldr	r2, [r3, #32]
    a490:	ldr	r1, [r5, #176]	; 0xb0
    a494:	cmp	r2, r1
    a498:	strhi	r2, [r5, #176]	; 0xb0
    a49c:	add	r2, r6, r9
    a4a0:	ldrb	r2, [r2, #6]
    a4a4:	cmp	r2, #1
    a4a8:	moveq	r2, #5
    a4ac:	streq	r2, [r3, #36]	; 0x24
    a4b0:	beq	a4c0 <sas7bdat_parse_subheader+0x414>
    a4b4:	cmp	r2, #2
    a4b8:	bne	a5d8 <sas7bdat_parse_subheader+0x52c>
    a4bc:	str	fp, [r3, #36]	; 0x24
    a4c0:	ldr	r3, [r5, #192]	; 0xc0
    a4c4:	add	r3, r3, r8
    a4c8:	str	r7, [r3, #20]
    a4cc:	add	r9, r9, #8
    a4d0:	add	r6, r6, r9
    a4d4:	add	r7, r7, #1
    a4d8:	add	r8, r8, #40	; 0x28
    a4dc:	ldr	r3, [r5, #168]	; 0xa8
    a4e0:	cmp	r7, r3
    a4e4:	bge	a0d4 <sas7bdat_parse_subheader+0x28>
    a4e8:	ldr	r3, [r5, #44]	; 0x2c
    a4ec:	cmp	r3, #0
    a4f0:	beq	a43c <sas7bdat_parse_subheader+0x390>
    a4f4:	ldr	r9, [r5, #192]	; 0xc0
    a4f8:	add	r9, r9, r8
    a4fc:	ldr	r1, [r5, #60]	; 0x3c
    a500:	mov	r0, r6
    a504:	bl	43f0 <sas_read8@plt>
    a508:	strd	r0, [r9, #24]
    a50c:	b	a458 <sas7bdat_parse_subheader+0x3ac>
    a510:	ldr	r3, [r5, #44]	; 0x2c
    a514:	cmp	r3, #0
    a518:	movne	r3, #58	; 0x3a
    a51c:	moveq	r3, #46	; 0x2e
    a520:	cmp	r4, r3
    a524:	movcc	r4, #5
    a528:	bcc	a0d4 <sas7bdat_parse_subheader+0x28>
    a52c:	ldr	r1, [r5, #172]	; 0xac
    a530:	add	r1, r1, #1
    a534:	str	r1, [r5, #172]	; 0xac
    a538:	mov	r0, r5
    a53c:	bl	a040 <sas7bdat_realloc_col_info>
    a540:	subs	r4, r0, #0
    a544:	bne	a0d4 <sas7bdat_parse_subheader+0x28>
    a548:	ldr	r3, [r5, #172]	; 0xac
    a54c:	add	r3, r3, r3, lsl #2
    a550:	lsl	r3, r3, #3
    a554:	sub	r3, r3, #40	; 0x28
    a558:	ldr	r8, [r5, #192]	; 0xc0
    a55c:	add	r8, r8, r3
    a560:	ldr	r3, [r5, #44]	; 0x2c
    a564:	cmp	r3, #0
    a568:	addne	r1, r6, #46	; 0x2e
    a56c:	addeq	r1, r6, #34	; 0x22
    a570:	mov	r2, r5
    a574:	mov	r0, sp
    a578:	bl	9f40 <sas7bdat_parse_text_ref>
    a57c:	ldr	r3, [sp]
    a580:	str	r3, [r8, #6]
    a584:	ldrh	r3, [sp, #4]
    a588:	strh	r3, [r8, #10]
    a58c:	ldr	r3, [r5, #172]	; 0xac
    a590:	add	r3, r3, r3, lsl #2
    a594:	lsl	r3, r3, #3
    a598:	sub	r3, r3, #40	; 0x28
    a59c:	ldr	r7, [r5, #192]	; 0xc0
    a5a0:	add	r7, r7, r3
    a5a4:	ldr	r3, [r5, #44]	; 0x2c
    a5a8:	cmp	r3, #0
    a5ac:	addne	r6, r6, #52	; 0x34
    a5b0:	addeq	r6, r6, #40	; 0x28
    a5b4:	mov	r2, r5
    a5b8:	mov	r1, r6
    a5bc:	mov	r0, sp
    a5c0:	bl	9f40 <sas7bdat_parse_text_ref>
    a5c4:	ldr	r0, [sp]
    a5c8:	str	r0, [r7, #12]
    a5cc:	ldrh	r3, [sp, #4]
    a5d0:	strh	r3, [r7, #16]
    a5d4:	b	a0d4 <sas7bdat_parse_subheader+0x28>
    a5d8:	mov	r4, #5
    a5dc:	b	a0d4 <sas7bdat_parse_subheader+0x28>
    a5e0:	cmp	r2, #127	; 0x7f
    a5e4:	movls	r4, #5
    a5e8:	bls	a0d4 <sas7bdat_parse_subheader+0x28>
    a5ec:	ldr	r1, [r5, #60]	; 0x3c
    a5f0:	add	r0, r6, #40	; 0x28
    a5f4:	bl	43f0 <sas_read8@plt>
    a5f8:	mov	r4, r0
    a5fc:	ldr	r1, [r5, #60]	; 0x3c
    a600:	add	r0, r6, #48	; 0x30
    a604:	bl	43f0 <sas_read8@plt>
    a608:	mov	r8, r0
    a60c:	mov	r9, r1
    a610:	ldr	r1, [r5, #60]	; 0x3c
    a614:	add	r0, r6, #120	; 0x78
    a618:	bl	43f0 <sas_read8@plt>
    a61c:	mov	r6, r0
    a620:	str	r4, [r5, #68]	; 0x44
    a624:	mov	r1, r4
    a628:	ldr	r0, [r5, #124]	; 0x7c
    a62c:	bl	430c <readstat_realloc@plt>
    a630:	str	r0, [r5, #124]	; 0x7c
    a634:	cmp	r0, #0
    a638:	moveq	r4, #3
    a63c:	beq	a0d4 <sas7bdat_parse_subheader+0x28>
    a640:	str	r6, [r5, #72]	; 0x48
    a644:	ldr	r2, [r5, #88]	; 0x58
    a648:	mov	r3, #0
    a64c:	cmp	r3, r9
    a650:	cmpeq	r2, r8
    a654:	bcs	a1a4 <sas7bdat_parse_subheader+0xf8>
    a658:	subs	r2, r8, r2
    a65c:	sbc	r3, r9, r3
    a660:	ldr	r0, [r5, #84]	; 0x54
    a664:	cmp	r0, #0
    a668:	beq	a680 <sas7bdat_parse_subheader+0x5d4>
    a66c:	mov	r1, #0
    a670:	cmp	r1, r3
    a674:	cmpeq	r0, r2
    a678:	movls	r4, #0
    a67c:	bls	a0d4 <sas7bdat_parse_subheader+0x28>
    a680:	str	r2, [r5, #84]	; 0x54
    a684:	mov	r4, #0
    a688:	b	a0d4 <sas7bdat_parse_subheader+0x28>
    a68c:	cmp	r4, #15
    a690:	movls	r4, #5
    a694:	bls	a0d4 <sas7bdat_parse_subheader+0x28>
    a698:	ldr	r1, [r5, #60]	; 0x3c
    a69c:	add	r0, r6, #8
    a6a0:	bl	43f0 <sas_read8@plt>
    a6a4:	str	r0, [r5, #80]	; 0x50
    a6a8:	mov	r1, r0
    a6ac:	mov	r0, r5
    a6b0:	bl	a040 <sas7bdat_realloc_col_info>
    a6b4:	mov	r4, r0
    a6b8:	b	a0d4 <sas7bdat_parse_subheader+0x28>
    a6bc:	.word	0xf7f7f7f7
    a6c0:	.word	0xf6f6f6f6
    a6c4:	.word	0xfffffbfe
    a6c8:	.word	0x0001af00
    a6cc:	.word	0xaaaaaaab

0000a6d0 <sas7bdat_parse_page_pass1>:
    a6d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a6d4:	sub	sp, sp, #52	; 0x34
    a6d8:	mov	r3, r0
    a6dc:	str	r0, [sp, #20]
    a6e0:	mov	r7, r1
    a6e4:	str	r1, [sp, #16]
    a6e8:	mov	r6, r2
    a6ec:	ldr	r0, [r2, #128]	; 0x80
    a6f0:	sub	r0, r0, #4
    a6f4:	ldr	r1, [r2, #60]	; 0x3c
    a6f8:	add	r0, r3, r0
    a6fc:	bl	43fc <sas_read2@plt>
    a700:	str	r0, [sp, #12]
    a704:	ldrd	r2, [r6, #128]	; 0x80
    a708:	ldr	r9, [r6, #144]	; 0x90
    a70c:	str	r0, [sp, #4]
    a710:	mul	r1, r9, r0
    a714:	adds	r4, r2, r1
    a718:	adc	r5, r3, r1, asr #31
    a71c:	mov	r1, #0
    a720:	cmp	r5, r1
    a724:	cmpeq	r4, r7
    a728:	movhi	r3, #5
    a72c:	strhi	r3, [sp]
    a730:	bls	a740 <sas7bdat_parse_page_pass1+0x70>
    a734:	ldr	r0, [sp]
    a738:	add	sp, sp, #52	; 0x34
    a73c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a740:	ldr	r1, [sp, #12]
    a744:	cmp	r1, #0
    a748:	ble	a89c <sas7bdat_parse_page_pass1+0x1cc>
    a74c:	ldr	r1, [sp, #20]
    a750:	add	r7, r1, r2
    a754:	ldr	r1, [sp, #16]
    a758:	sub	fp, r1, r2
    a75c:	mov	r8, #0
    a760:	add	r4, sp, #24
    a764:	mov	r5, r8
    a768:	b	a7bc <sas7bdat_parse_page_pass1+0xec>
    a76c:	ldr	r1, [r6, #60]	; 0x3c
    a770:	ldr	r0, [sp, #24]
    a774:	ldr	r3, [sp, #20]
    a778:	add	r0, r3, r0
    a77c:	bl	4420 <sas_read4@plt>
    a780:	ldr	r3, [r6, #40]	; 0x28
    a784:	cmp	r3, #0
    a788:	bne	a79c <sas7bdat_parse_page_pass1+0xcc>
    a78c:	ldr	r3, [sp, #8]
    a790:	cmp	r3, #8
    a794:	cmneq	r0, #1
    a798:	beq	a84c <sas7bdat_parse_page_pass1+0x17c>
    a79c:	cmn	r0, #3
    a7a0:	beq	a868 <sas7bdat_parse_page_pass1+0x198>
    a7a4:	add	r7, r7, r9
    a7a8:	add	r8, r8, #1
    a7ac:	sub	fp, fp, r9
    a7b0:	ldr	r3, [sp, #4]
    a7b4:	cmp	r3, r8
    a7b8:	beq	a734 <sas7bdat_parse_page_pass1+0x64>
    a7bc:	str	r5, [r4]
    a7c0:	str	r5, [r4, #4]
    a7c4:	str	r5, [r4, #8]
    a7c8:	str	r5, [r4, #12]
    a7cc:	str	r5, [r4, #16]
    a7d0:	str	r5, [r4, #20]
    a7d4:	ldr	r3, [r6, #136]	; 0x88
    a7d8:	str	r3, [sp, #8]
    a7dc:	mov	r3, r6
    a7e0:	mov	r2, r4
    a7e4:	mov	r1, fp
    a7e8:	mov	r0, r7
    a7ec:	bl	9f90 <sas7bdat_parse_subheader_pointer>
    a7f0:	subs	r3, r0, #0
    a7f4:	str	r3, [sp]
    a7f8:	bne	a734 <sas7bdat_parse_page_pass1+0x64>
    a7fc:	ldrd	r2, [sp, #32]
    a800:	orrs	r3, r2, r3
    a804:	beq	a7a4 <sas7bdat_parse_page_pass1+0xd4>
    a808:	ldrb	sl, [sp, #40]	; 0x28
    a80c:	cmp	sl, #1
    a810:	beq	a7a4 <sas7bdat_parse_page_pass1+0xd4>
    a814:	mov	r3, r6
    a818:	ldr	r2, [sp, #12]
    a81c:	ldr	r1, [sp, #16]
    a820:	mov	r0, r4
    a824:	bl	9dec <sas7bdat_validate_subheader_pointer>
    a828:	cmp	r0, #0
    a82c:	bne	a894 <sas7bdat_parse_page_pass1+0x1c4>
    a830:	cmp	sl, #0
    a834:	beq	a76c <sas7bdat_parse_page_pass1+0x9c>
    a838:	cmp	sl, #4
    a83c:	beq	a7a4 <sas7bdat_parse_page_pass1+0xd4>
    a840:	mov	r3, #6
    a844:	str	r3, [sp]
    a848:	b	a734 <sas7bdat_parse_page_pass1+0x64>
    a84c:	ldr	r0, [sp, #24]
    a850:	add	r0, r0, #4
    a854:	ldr	r1, [r6, #60]	; 0x3c
    a858:	ldr	r3, [sp, #20]
    a85c:	add	r0, r3, r0
    a860:	bl	4420 <sas_read4@plt>
    a864:	b	a79c <sas7bdat_parse_page_pass1+0xcc>
    a868:	mov	r3, r6
    a86c:	ldr	r2, [sp, #32]
    a870:	ldr	r1, [sp, #24]
    a874:	ldr	r0, [sp, #20]
    a878:	add	r1, r0, r1
    a87c:	mvn	r0, #2
    a880:	bl	a0ac <sas7bdat_parse_subheader>
    a884:	cmp	r0, #0
    a888:	beq	a7a4 <sas7bdat_parse_page_pass1+0xd4>
    a88c:	str	r0, [sp]
    a890:	b	a734 <sas7bdat_parse_page_pass1+0x64>
    a894:	str	r0, [sp]
    a898:	b	a734 <sas7bdat_parse_page_pass1+0x64>
    a89c:	mov	r3, #0
    a8a0:	str	r3, [sp]
    a8a4:	b	a734 <sas7bdat_parse_page_pass1+0x64>

0000a8a8 <sas7bdat_parse_single_row>:
    a8a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a8ac:	vpush	{d8}
    a8b0:	sub	sp, sp, #68	; 0x44
    a8b4:	ldr	r2, [r1, #76]	; 0x4c
    a8b8:	ldr	r3, [r1, #84]	; 0x54
    a8bc:	cmp	r2, r3
    a8c0:	moveq	r4, #0
    a8c4:	beq	a8e0 <sas7bdat_parse_single_row+0x38>
    a8c8:	ldr	r3, [r1, #88]	; 0x58
    a8cc:	cmp	r3, #0
    a8d0:	beq	a8f0 <sas7bdat_parse_single_row+0x48>
    a8d4:	sub	r3, r3, #1
    a8d8:	str	r3, [r1, #88]	; 0x58
    a8dc:	mov	r4, #0
    a8e0:	mov	r0, r4
    a8e4:	add	sp, sp, #68	; 0x44
    a8e8:	vpop	{d8}
    a8ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a8f0:	mov	r8, r1
    a8f4:	str	r0, [sp, #36]	; 0x24
    a8f8:	ldr	r3, [r1, #16]
    a8fc:	cmp	r3, #0
    a900:	beq	a950 <sas7bdat_parse_single_row+0xa8>
    a904:	ldr	r1, [r1, #176]	; 0xb0
    a908:	lsl	r1, r1, #2
    a90c:	add	r1, r1, #1
    a910:	str	r1, [r8, #184]	; 0xb8
    a914:	ldr	r0, [r8, #180]	; 0xb4
    a918:	bl	430c <readstat_realloc@plt>
    a91c:	str	r0, [r8, #180]	; 0xb4
    a920:	cmp	r0, #0
    a924:	moveq	r4, #3
    a928:	beq	a8e0 <sas7bdat_parse_single_row+0x38>
    a92c:	mov	sl, #0
    a930:	add	fp, sp, #48	; 0x30
    a934:	add	r3, sp, #56	; 0x38
    a938:	str	r3, [sp, #32]
    a93c:	vldr	d8, [pc, #588]	; ab90 <sas7bdat_parse_single_row+0x2e8>
    a940:	mov	r9, sl
    a944:	ldr	r3, [r8, #80]	; 0x50
    a948:	cmp	r3, sl
    a94c:	bhi	a964 <sas7bdat_parse_single_row+0xbc>
    a950:	ldr	r3, [r8, #76]	; 0x4c
    a954:	add	r3, r3, #1
    a958:	str	r3, [r8, #76]	; 0x4c
    a95c:	mov	r4, #0
    a960:	b	a8e0 <sas7bdat_parse_single_row+0x38>
    a964:	ldr	r3, [r8, #196]	; 0xc4
    a968:	ldr	r5, [r3, sl, lsl #2]
    a96c:	ldr	r3, [r5, #2144]	; 0x860
    a970:	cmp	r3, #0
    a974:	bne	aa98 <sas7bdat_parse_single_row+0x1f0>
    a978:	ldr	r3, [r8, #192]	; 0xc0
    a97c:	mov	r2, #40	; 0x28
    a980:	mla	r9, r2, r9, r3
    a984:	ldrd	r6, [r9, #24]
    a988:	ldr	r2, [r8, #68]	; 0x44
    a98c:	mov	r3, #0
    a990:	cmp	r7, r3
    a994:	cmpeq	r6, r2
    a998:	bhi	ab78 <sas7bdat_parse_single_row+0x2d0>
    a99c:	ldr	r4, [r9, #32]
    a9a0:	adds	r0, r6, r4
    a9a4:	adc	r1, r7, #0
    a9a8:	cmp	r3, r1
    a9ac:	cmpeq	r2, r0
    a9b0:	bcc	ab80 <sas7bdat_parse_single_row+0x2d8>
    a9b4:	ldr	r3, [sp, #36]	; 0x24
    a9b8:	add	r6, r3, r6
    a9bc:	mov	r2, #16
    a9c0:	mov	r1, #0
    a9c4:	mov	r0, fp
    a9c8:	bl	42d0 <memset@plt>
    a9cc:	ldr	r3, [r9, #36]	; 0x24
    a9d0:	str	r3, [sp, #56]	; 0x38
    a9d4:	cmp	r3, #0
    a9d8:	bne	aaa0 <sas7bdat_parse_single_row+0x1f8>
    a9dc:	ldr	r3, [r8, #208]	; 0xd0
    a9e0:	str	r3, [sp]
    a9e4:	mov	r3, r4
    a9e8:	mov	r2, r6
    a9ec:	ldr	r1, [r8, #184]	; 0xb8
    a9f0:	ldr	r0, [r8, #180]	; 0xb4
    a9f4:	bl	4264 <readstat_convert@plt>
    a9f8:	cmp	r0, #0
    a9fc:	beq	aa60 <sas7bdat_parse_single_row+0x1b8>
    aa00:	mov	r4, r0
    aa04:	ldr	r3, [r8, #24]
    aa08:	cmp	r3, #0
    aa0c:	beq	a8e0 <sas7bdat_parse_single_row+0x38>
    aa10:	add	r5, r8, #480	; 0x1e0
    aa14:	add	r5, r5, #1
    aa18:	ldr	r3, [r8, #76]	; 0x4c
    aa1c:	str	r6, [sp, #8]
    aa20:	ldr	r2, [r9, #32]
    aa24:	str	r2, [sp, #4]
    aa28:	ldr	r2, [r9, #20]
    aa2c:	add	r2, r2, #1
    aa30:	str	r2, [sp]
    aa34:	add	r3, r3, #1
    aa38:	ldr	r2, [pc, #344]	; ab98 <sas7bdat_parse_single_row+0x2f0>
    aa3c:	add	r2, pc, r2
    aa40:	mov	r1, #2048	; 0x800
    aa44:	mov	r0, r5
    aa48:	bl	42ac <snprintf@plt>
    aa4c:	ldr	r3, [r8, #24]
    aa50:	ldr	r1, [r8, #52]	; 0x34
    aa54:	mov	r0, r5
    aa58:	blx	r3
    aa5c:	b	a8e0 <sas7bdat_parse_single_row+0x38>
    aa60:	ldr	r3, [r8, #180]	; 0xb4
    aa64:	str	r3, [sp, #48]	; 0x30
    aa68:	ldr	r3, [r8, #52]	; 0x34
    aa6c:	str	r3, [sp, #8]
    aa70:	ldr	r3, [sp, #32]
    aa74:	ldm	r3, {r0, r1}
    aa78:	stm	sp, {r0, r1}
    aa7c:	ldm	fp, {r2, r3}
    aa80:	ldr	r4, [r8, #16]
    aa84:	mov	r1, r5
    aa88:	ldr	r0, [r8, #76]	; 0x4c
    aa8c:	blx	r4
    aa90:	cmp	r0, #0
    aa94:	bne	ab88 <sas7bdat_parse_single_row+0x2e0>
    aa98:	add	sl, sl, #1
    aa9c:	b	a940 <sas7bdat_parse_single_row+0x98>
    aaa0:	cmp	r3, #5
    aaa4:	bne	aa68 <sas7bdat_parse_single_row+0x1c0>
    aaa8:	ldr	r3, [r8, #40]	; 0x28
    aaac:	cmp	r3, #0
    aab0:	bne	aadc <sas7bdat_parse_single_row+0x234>
    aab4:	mov	r3, r6
    aab8:	add	r6, r6, r4
    aabc:	mov	r0, #0
    aac0:	mov	r1, r0
    aac4:	mov	ip, r3
    aac8:	ldrd	r2, [sp, #24]
    aacc:	cmp	ip, r6
    aad0:	bne	ab58 <sas7bdat_parse_single_row+0x2b0>
    aad4:	strd	r2, [sp, #24]
    aad8:	b	aafc <sas7bdat_parse_single_row+0x254>
    aadc:	add	r3, r6, r4
    aae0:	mov	r0, #0
    aae4:	mov	r1, r0
    aae8:	mov	ip, r3
    aaec:	ldrd	r2, [sp, #16]
    aaf0:	cmp	ip, r6
    aaf4:	bne	ab38 <sas7bdat_parse_single_row+0x290>
    aaf8:	strd	r2, [sp, #16]
    aafc:	lsl	r2, r4, #3
    ab00:	rsb	r2, r2, #64	; 0x40
    ab04:	bl	241d8 <__aeabi_llsl>
    ab08:	strd	r0, [sp, #40]	; 0x28
    ab0c:	vmov	d7, r0, r1
    ab10:	vcmp.f64	d7, d7
    ab14:	vmrs	APSR_nzcv, fpscr
    ab18:	vstrvc	d7, [sp, #48]	; 0x30
    ab1c:	bvc	aa68 <sas7bdat_parse_single_row+0x1c0>
    ab20:	vstr	d8, [sp, #48]	; 0x30
    ab24:	mvn	r1, r1, lsr #8
    ab28:	uxtb	r1, r1
    ab2c:	mov	r0, fp
    ab30:	bl	44d4 <sas_assign_tag@plt>
    ab34:	b	aa68 <sas7bdat_parse_single_row+0x1c0>
    ab38:	lsl	r3, r1, #8
    ab3c:	orr	r3, r3, r0, lsr #24
    ab40:	lsl	r2, r0, #8
    ab44:	ldrb	r0, [ip, #-1]!
    ab48:	mov	r1, #0
    ab4c:	orr	r0, r0, r2
    ab50:	orr	r1, r1, r3
    ab54:	b	aaf0 <sas7bdat_parse_single_row+0x248>
    ab58:	lsl	r3, r1, #8
    ab5c:	orr	r3, r3, r0, lsr #24
    ab60:	lsl	r2, r0, #8
    ab64:	ldrb	r0, [ip], #1
    ab68:	mov	r1, #0
    ab6c:	orr	r0, r0, r2
    ab70:	orr	r1, r1, r3
    ab74:	b	aacc <sas7bdat_parse_single_row+0x224>
    ab78:	mov	r4, #5
    ab7c:	b	a8e0 <sas7bdat_parse_single_row+0x38>
    ab80:	mov	r4, #5
    ab84:	b	a8e0 <sas7bdat_parse_single_row+0x38>
    ab88:	mov	r4, #4
    ab8c:	b	a8e0 <sas7bdat_parse_single_row+0x38>
    ab90:	.word	0x00000000
    ab94:	.word	0x7ff80000
    ab98:	.word	0x0001a798

0000ab9c <sas7bdat_submit_columns_if_needed>:
    ab9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    aba0:	sub	sp, sp, #84	; 0x54
    aba4:	ldr	r8, [r0, #64]	; 0x40
    aba8:	cmp	r8, #0
    abac:	movne	r6, #0
    abb0:	bne	acd4 <sas7bdat_submit_columns_if_needed+0x138>
    abb4:	mov	r5, r1
    abb8:	mov	r4, r0
    abbc:	ldr	r6, [r0]
    abc0:	cmp	r6, #0
    abc4:	beq	ac70 <sas7bdat_submit_columns_if_needed+0xd4>
    abc8:	mov	r2, #56	; 0x38
    abcc:	mov	r1, #0
    abd0:	add	r0, sp, #24
    abd4:	bl	42d0 <memset@plt>
    abd8:	ldr	r2, [r4, #84]	; 0x54
    abdc:	mov	r3, #0
    abe0:	strd	r2, [sp, #24]
    abe4:	ldr	r2, [r4, #80]	; 0x50
    abe8:	mov	r3, #0
    abec:	strd	r2, [sp, #32]
    abf0:	ldr	r3, [r4, #212]	; 0xd4
    abf4:	str	r3, [sp, #40]	; 0x28
    abf8:	ldr	r3, [r4, #216]	; 0xd8
    abfc:	str	r3, [sp, #44]	; 0x2c
    ac00:	ldr	r2, [r4, #220]	; 0xdc
    ac04:	asr	r3, r2, #31
    ac08:	strd	r2, [sp, #48]	; 0x30
    ac0c:	ldr	r3, [r4, #40]	; 0x28
    ac10:	cmp	r3, #0
    ac14:	movne	r3, #1
    ac18:	moveq	r3, #2
    ac1c:	str	r3, [sp, #60]	; 0x3c
    ac20:	add	r3, r4, #224	; 0xe0
    ac24:	str	r3, [sp, #68]	; 0x44
    ac28:	ldr	r3, [r4, #200]	; 0xc8
    ac2c:	str	r3, [sp, #72]	; 0x48
    ac30:	ldr	r3, [r4, #44]	; 0x2c
    ac34:	and	r3, r3, #1
    ac38:	strb	r3, [sp, #76]	; 0x4c
    ac3c:	cmp	r5, #0
    ac40:	beq	ac58 <sas7bdat_submit_columns_if_needed+0xbc>
    ac44:	ldrb	r3, [r4, #2529]	; 0x9e1
    ac48:	tst	r3, #1
    ac4c:	movne	r3, #2
    ac50:	moveq	r3, #1
    ac54:	str	r3, [sp, #56]	; 0x38
    ac58:	ldr	r1, [r4, #52]	; 0x34
    ac5c:	add	r0, sp, #24
    ac60:	blx	r6
    ac64:	cmp	r0, #0
    ac68:	movne	r6, #4
    ac6c:	bne	acd4 <sas7bdat_submit_columns_if_needed+0x138>
    ac70:	ldr	r0, [r4, #80]	; 0x50
    ac74:	cmp	r0, #0
    ac78:	beq	acc8 <sas7bdat_submit_columns_if_needed+0x12c>
    ac7c:	mov	r1, #4
    ac80:	bl	3fe8 <readstat_calloc@plt>
    ac84:	str	r0, [r4, #196]	; 0xc4
    ac88:	cmp	r0, #0
    ac8c:	moveq	r6, #3
    ac90:	beq	acd4 <sas7bdat_submit_columns_if_needed+0x138>
    ac94:	mov	r9, r8
    ac98:	mov	r6, #0
    ac9c:	add	r3, r4, #480	; 0x1e0
    aca0:	add	r3, r3, #1
    aca4:	str	r3, [sp, #16]
    aca8:	ldr	r3, [pc, #528]	; aec0 <sas7bdat_submit_columns_if_needed+0x324>
    acac:	add	r3, pc, r3
    acb0:	str	r3, [sp, #20]
    acb4:	ldr	r3, [r4, #80]	; 0x50
    acb8:	cmp	r8, r3
    acbc:	bcc	ace0 <sas7bdat_submit_columns_if_needed+0x144>
    acc0:	cmp	r6, #0
    acc4:	bne	acd4 <sas7bdat_submit_columns_if_needed+0x138>
    acc8:	mov	r3, #1
    accc:	str	r3, [r4, #64]	; 0x40
    acd0:	mov	r6, #0
    acd4:	mov	r0, r6
    acd8:	add	sp, sp, #84	; 0x54
    acdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ace0:	lsl	sl, r8, #2
    ace4:	ldr	fp, [r4, #196]	; 0xc4
    ace8:	ldr	r1, [pc, #468]	; aec4 <sas7bdat_submit_columns_if_needed+0x328>
    acec:	mov	r0, #1
    acf0:	bl	3fe8 <readstat_calloc@plt>
    acf4:	mov	r5, r0
    acf8:	str	r8, [r0, #4]
    acfc:	str	r9, [r0, #2148]	; 0x864
    ad00:	mov	r3, #40	; 0x28
    ad04:	mul	r7, r3, r8
    ad08:	ldr	r3, [r4, #192]	; 0xc0
    ad0c:	add	r3, r3, r7
    ad10:	ldr	r3, [r3, #36]	; 0x24
    ad14:	str	r3, [r0]
    ad18:	ldr	r3, [r4, #192]	; 0xc0
    ad1c:	add	r3, r3, r7
    ad20:	ldr	r3, [r3, #32]
    ad24:	str	r3, [r0, #1596]	; 0x63c
    ad28:	ldr	r3, [r4, #192]	; 0xc0
    ad2c:	add	r3, r3, r7
    ad30:	ldr	r2, [r3, #36]	; 0x24
    ad34:	cmp	r2, #5
    ad38:	bne	ae20 <sas7bdat_submit_columns_if_needed+0x284>
    ad3c:	ldr	r2, [r3, #32]
    ad40:	sub	r2, r2, #3
    ad44:	cmp	r2, #5
    ad48:	movhi	r6, #5
    ad4c:	bhi	ae40 <sas7bdat_submit_columns_if_needed+0x2a4>
    ad50:	str	r4, [sp]
    ad54:	ldm	r3, {r2, r3}
    ad58:	mov	r1, #300	; 0x12c
    ad5c:	add	r0, r5, #8
    ad60:	bl	9ec8 <sas7bdat_copy_text_ref>
    ad64:	cmp	r0, #0
    ad68:	bne	aeb0 <sas7bdat_submit_columns_if_needed+0x314>
    ad6c:	ldr	r3, [r4, #192]	; 0xc0
    ad70:	add	r3, r3, r7
    ad74:	str	r4, [sp]
    ad78:	ldrh	r2, [r3, #6]
    ad7c:	ldrh	r1, [r3, #8]
    ad80:	orr	r2, r2, r1, lsl #16
    ad84:	ldrh	r3, [r3, #10]
    ad88:	mov	r1, #256	; 0x100
    ad8c:	add	r0, r5, #308	; 0x134
    ad90:	bl	9ec8 <sas7bdat_copy_text_ref>
    ad94:	cmp	r0, #0
    ad98:	bne	aeb0 <sas7bdat_submit_columns_if_needed+0x314>
    ad9c:	ldr	r3, [r4, #192]	; 0xc0
    ada0:	add	r7, r3, r7
    ada4:	str	r4, [sp]
    ada8:	add	r7, r7, #12
    adac:	ldm	r7, {r2, r3}
    adb0:	mov	r1, #1024	; 0x400
    adb4:	add	r0, r5, #564	; 0x234
    adb8:	bl	9ec8 <sas7bdat_copy_text_ref>
    adbc:	cmp	r0, #0
    adc0:	movne	r6, r0
    adc4:	bne	ae40 <sas7bdat_submit_columns_if_needed+0x2a4>
    adc8:	str	r5, [fp, sl]
    adcc:	ldr	r3, [r4, #196]	; 0xc4
    add0:	ldr	r1, [r3, sl]
    add4:	cmp	r1, #0
    add8:	beq	acc0 <sas7bdat_submit_columns_if_needed+0x124>
    addc:	ldr	r5, [r4, #8]
    ade0:	cmp	r5, #0
    ade4:	beq	aea8 <sas7bdat_submit_columns_if_needed+0x30c>
    ade8:	ldr	r3, [r4, #52]	; 0x34
    adec:	add	r2, r1, #308	; 0x134
    adf0:	mov	r0, r8
    adf4:	blx	r5
    adf8:	cmp	r0, #1
    adfc:	beq	aeb8 <sas7bdat_submit_columns_if_needed+0x31c>
    ae00:	cmp	r0, #2
    ae04:	bne	aea8 <sas7bdat_submit_columns_if_needed+0x30c>
    ae08:	ldr	r3, [r4, #196]	; 0xc4
    ae0c:	ldr	r3, [r3, sl]
    ae10:	mov	r2, #1
    ae14:	str	r2, [r3, #2144]	; 0x860
    ae18:	add	r8, r8, #1
    ae1c:	b	acb4 <sas7bdat_submit_columns_if_needed+0x118>
    ae20:	cmp	r2, #0
    ae24:	bne	ad50 <sas7bdat_submit_columns_if_needed+0x1b4>
    ae28:	ldr	r2, [r3, #32]
    ae2c:	sub	r2, r2, #1
    ae30:	ldr	r1, [pc, #144]	; aec8 <sas7bdat_submit_columns_if_needed+0x32c>
    ae34:	cmp	r2, r1
    ae38:	movhi	r6, #5
    ae3c:	bls	ad50 <sas7bdat_submit_columns_if_needed+0x1b4>
    ae40:	mov	r0, r5
    ae44:	bl	3ee0 <free@plt>
    ae48:	cmp	r6, #17
    ae4c:	movne	r5, #0
    ae50:	bne	adc8 <sas7bdat_submit_columns_if_needed+0x22c>
    ae54:	ldr	r3, [r4, #24]
    ae58:	cmp	r3, #0
    ae5c:	moveq	r5, #0
    ae60:	beq	adc8 <sas7bdat_submit_columns_if_needed+0x22c>
    ae64:	add	r3, r5, #564	; 0x234
    ae68:	str	r3, [sp, #8]
    ae6c:	add	r3, r5, #308	; 0x134
    ae70:	str	r3, [sp, #4]
    ae74:	add	r5, r5, #8
    ae78:	str	r5, [sp]
    ae7c:	mov	r3, r8
    ae80:	ldr	r2, [sp, #20]
    ae84:	mov	r1, #2048	; 0x800
    ae88:	ldr	r0, [sp, #16]
    ae8c:	bl	42ac <snprintf@plt>
    ae90:	ldr	r3, [r4, #24]
    ae94:	ldr	r1, [r4, #52]	; 0x34
    ae98:	ldr	r0, [sp, #16]
    ae9c:	blx	r3
    aea0:	mov	r5, #0
    aea4:	b	adc8 <sas7bdat_submit_columns_if_needed+0x22c>
    aea8:	add	r9, r9, #1
    aeac:	b	ae18 <sas7bdat_submit_columns_if_needed+0x27c>
    aeb0:	mov	r6, r0
    aeb4:	b	ae40 <sas7bdat_submit_columns_if_needed+0x2a4>
    aeb8:	mov	r6, #4
    aebc:	b	acd4 <sas7bdat_submit_columns_if_needed+0x138>
    aec0:	.word	0x0001a578
    aec4:	.word	0x00000868
    aec8:	.word	0x00007ffe

0000aecc <readstat_parse_sas7bdat>:
    aecc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    aed0:	sub	sp, sp, #156	; 0x9c
    aed4:	mov	r5, r0
    aed8:	mov	r6, r1
    aedc:	mov	r7, r2
    aee0:	str	r2, [sp, #48]	; 0x30
    aee4:	ldr	fp, [r0, #32]
    aee8:	ldr	r1, [pc, #3792]	; bdc0 <readstat_parse_sas7bdat+0xef4>
    aeec:	mov	r0, #1
    aef0:	bl	3d78 <calloc@plt>
    aef4:	mov	r4, r0
    aef8:	mov	r1, #152	; 0x98
    aefc:	mov	r0, #1
    af00:	bl	3d78 <calloc@plt>
    af04:	mov	r9, r0
    af08:	mov	ip, r4
    af0c:	mov	lr, r5
    af10:	ldm	lr!, {r0, r1, r2, r3}
    af14:	stmia	ip!, {r0, r1, r2, r3}
    af18:	ldm	lr, {r0, r1, r2, r3}
    af1c:	stm	ip, {r0, r1, r2, r3}
    af20:	ldr	r3, [r5, #36]	; 0x24
    af24:	str	r3, [r4, #200]	; 0xc8
    af28:	ldr	r3, [r5, #40]	; 0x28
    af2c:	str	r3, [r4, #204]	; 0xcc
    af30:	str	r7, [r4, #52]	; 0x34
    af34:	str	fp, [r4, #56]	; 0x38
    af38:	ldr	r3, [r5, #44]	; 0x2c
    af3c:	str	r3, [r4, #84]	; 0x54
    af40:	ldr	r3, [r5, #48]	; 0x30
    af44:	cmp	r3, #0
    af48:	strgt	r3, [r4, #88]	; 0x58
    af4c:	ldr	r3, [fp]
    af50:	ldr	r1, [fp, #20]
    af54:	mov	r0, r6
    af58:	blx	r3
    af5c:	cmn	r0, #1
    af60:	beq	c03c <readstat_parse_sas7bdat+0x1170>
    af64:	ldr	r3, [fp, #8]
    af68:	ldr	r2, [fp, #20]
    af6c:	mov	r1, #2
    af70:	mov	r0, #0
    af74:	blx	r3
    af78:	asr	r1, r0, #31
    af7c:	strd	r0, [r4, #32]
    af80:	mvn	r2, #0
    af84:	mvn	r3, #0
    af88:	cmp	r1, r3
    af8c:	cmpeq	r0, r2
    af90:	beq	afec <readstat_parse_sas7bdat+0x120>
    af94:	ldr	r3, [fp, #8]
    af98:	ldr	r2, [fp, #20]
    af9c:	mov	r1, #0
    afa0:	mov	r0, r1
    afa4:	blx	r3
    afa8:	cmn	r0, #1
    afac:	beq	b060 <readstat_parse_sas7bdat+0x194>
    afb0:	ldr	r3, [sp, #48]	; 0x30
    afb4:	ldr	r2, [r4, #24]
    afb8:	mov	r1, r9
    afbc:	mov	r0, fp
    afc0:	bl	43cc <sas_read_header@plt>
    afc4:	subs	sl, r0, #0
    afc8:	beq	b0e0 <readstat_parse_sas7bdat+0x214>
    afcc:	ldr	r3, [fp, #4]
    afd0:	ldr	r0, [fp, #20]
    afd4:	blx	r3
    afd8:	sub	r3, sl, #1
    afdc:	cmp	sl, #15
    afe0:	cmpne	r3, #1
    afe4:	bhi	c0b4 <readstat_parse_sas7bdat+0x11e8>
    afe8:	b	c04c <readstat_parse_sas7bdat+0x1180>
    afec:	ldr	r6, [r4, #24]
    aff0:	cmp	r6, #0
    aff4:	moveq	sl, #15
    aff8:	beq	c040 <readstat_parse_sas7bdat+0x1174>
    affc:	add	r7, r4, #480	; 0x1e0
    b000:	add	r7, r7, #1
    b004:	ldr	r3, [pc, #3512]	; bdc4 <readstat_parse_sas7bdat+0xef8>
    b008:	add	r3, pc, r3
    b00c:	mov	r5, r3
    b010:	mov	ip, r7
    b014:	add	r8, r3, #32
    b018:	mov	lr, r5
    b01c:	ldm	lr!, {r0, r1, r2, r3}
    b020:	str	r0, [ip]
    b024:	str	r1, [ip, #4]
    b028:	str	r2, [ip, #8]
    b02c:	str	r3, [ip, #12]
    b030:	mov	r5, lr
    b034:	add	ip, ip, #16
    b038:	cmp	lr, r8
    b03c:	bne	b018 <readstat_parse_sas7bdat+0x14c>
    b040:	ldm	r5!, {r0, r1}
    b044:	str	r0, [ip]
    b048:	str	r1, [ip, #4]
    b04c:	ldr	r1, [r4, #52]	; 0x34
    b050:	mov	r0, r7
    b054:	blx	r6
    b058:	mov	sl, #15
    b05c:	b	c040 <readstat_parse_sas7bdat+0x1174>
    b060:	ldr	r6, [r4, #24]
    b064:	cmp	r6, #0
    b068:	moveq	sl, #15
    b06c:	beq	c040 <readstat_parse_sas7bdat+0x1174>
    b070:	add	r7, r4, #480	; 0x1e0
    b074:	add	r7, r7, #1
    b078:	ldr	r3, [pc, #3400]	; bdc8 <readstat_parse_sas7bdat+0xefc>
    b07c:	add	r3, pc, r3
    b080:	mov	r5, r3
    b084:	mov	ip, r7
    b088:	add	r8, r3, #32
    b08c:	mov	lr, r5
    b090:	ldm	lr!, {r0, r1, r2, r3}
    b094:	str	r0, [ip]
    b098:	str	r1, [ip, #4]
    b09c:	str	r2, [ip, #8]
    b0a0:	str	r3, [ip, #12]
    b0a4:	mov	r5, lr
    b0a8:	add	ip, ip, #16
    b0ac:	cmp	lr, r8
    b0b0:	bne	b08c <readstat_parse_sas7bdat+0x1c0>
    b0b4:	ldm	r5!, {r0, r1, r2}
    b0b8:	str	r0, [ip]
    b0bc:	str	r1, [ip, #4]
    b0c0:	str	r2, [ip, #8]
    b0c4:	ldrh	r3, [r5]
    b0c8:	strh	r3, [ip, #12]
    b0cc:	ldr	r1, [r4, #52]	; 0x34
    b0d0:	mov	r0, r7
    b0d4:	blx	r6
    b0d8:	mov	sl, #15
    b0dc:	b	c040 <readstat_parse_sas7bdat+0x1174>
    b0e0:	ldr	r3, [r9, #4]
    b0e4:	str	r3, [r4, #44]	; 0x2c
    b0e8:	ldr	r3, [r9]
    b0ec:	str	r3, [r4, #40]	; 0x28
    b0f0:	ldr	r3, [r9, #8]
    b0f4:	str	r3, [r4, #48]	; 0x30
    b0f8:	bl	3ed4 <machine_is_little_endian@plt>
    b0fc:	ldr	r3, [r9]
    b100:	eor	r3, r3, r0
    b104:	str	r3, [r4, #60]	; 0x3c
    b108:	ldrd	r2, [r9, #64]	; 0x40
    b10c:	strd	r2, [r4, #96]	; 0x60
    b110:	ldrd	r2, [r9, #56]	; 0x38
    b114:	strd	r2, [r4, #104]	; 0x68
    b118:	ldr	r0, [r9, #32]
    b11c:	ldr	r3, [r9, #36]	; 0x24
    b120:	str	r0, [r4, #112]	; 0x70
    b124:	str	r3, [r4, #116]	; 0x74
    b128:	ldrd	r2, [r9, #40]	; 0x28
    b12c:	strd	r2, [r4, #128]	; 0x80
    b130:	ldrd	r2, [r9, #48]	; 0x30
    b134:	strd	r2, [r4, #144]	; 0x90
    b138:	ldr	r3, [r4, #44]	; 0x2c
    b13c:	cmp	r3, #0
    b140:	moveq	r2, #4
    b144:	movne	r2, #8
    b148:	mov	r3, #0
    b14c:	strd	r2, [r4, #136]	; 0x88
    b150:	ldr	r3, [r9, #72]	; 0x48
    b154:	str	r3, [r4, #212]	; 0xd4
    b158:	ldr	r3, [r9, #76]	; 0x4c
    b15c:	str	r3, [r4, #216]	; 0xd8
    b160:	ldr	r3, [r9, #12]
    b164:	str	r3, [r4, #220]	; 0xdc
    b168:	ldr	r3, [r4, #200]	; 0xc8
    b16c:	cmp	r3, #0
    b170:	ldreq	r3, [r9, #144]	; 0x90
    b174:	streq	r3, [r4, #200]	; 0xc8
    b178:	bl	4258 <readstat_malloc@plt>
    b17c:	str	r0, [r4, #120]	; 0x78
    b180:	cmp	r0, #0
    b184:	beq	c020 <readstat_parse_sas7bdat+0x1154>
    b188:	ldr	r6, [r4, #200]	; 0xc8
    b18c:	cmp	r6, #0
    b190:	beq	b1b4 <readstat_parse_sas7bdat+0x2e8>
    b194:	ldr	r5, [r4, #204]	; 0xcc
    b198:	cmp	r5, #0
    b19c:	beq	b1b4 <readstat_parse_sas7bdat+0x2e8>
    b1a0:	mov	r1, r5
    b1a4:	mov	r0, r6
    b1a8:	bl	3e20 <strcmp@plt>
    b1ac:	cmp	r0, #0
    b1b0:	bne	b1fc <readstat_parse_sas7bdat+0x330>
    b1b4:	ldr	r3, [r4, #208]	; 0xd0
    b1b8:	str	r3, [sp]
    b1bc:	mov	r3, #64	; 0x40
    b1c0:	add	r2, r9, #80	; 0x50
    b1c4:	ldr	r1, [pc, #3072]	; bdcc <readstat_parse_sas7bdat+0xf00>
    b1c8:	add	r0, r4, #224	; 0xe0
    b1cc:	bl	4264 <readstat_convert@plt>
    b1d0:	subs	sl, r0, #0
    b1d4:	bne	afcc <readstat_parse_sas7bdat+0x100>
    b1d8:	ldr	r8, [r4, #56]	; 0x38
    b1dc:	ldrd	r2, [r4, #104]	; 0x68
    b1e0:	strd	r2, [sp, #32]
    b1e4:	orrs	r3, r2, r3
    b1e8:	beq	c124 <readstat_parse_sas7bdat+0x1258>
    b1ec:	mov	r6, #0
    b1f0:	mov	r7, #0
    b1f4:	str	r9, [sp, #40]	; 0x28
    b1f8:	b	b2b8 <readstat_parse_sas7bdat+0x3ec>
    b1fc:	mov	r1, r6
    b200:	mov	r0, r5
    b204:	bl	415c <iconv_open@plt>
    b208:	cmn	r0, #1
    b20c:	beq	c034 <readstat_parse_sas7bdat+0x1168>
    b210:	str	r0, [r4, #208]	; 0xd0
    b214:	b	b1b4 <readstat_parse_sas7bdat+0x2e8>
    b218:	ldr	r9, [sp, #40]	; 0x28
    b21c:	ldr	r3, [r4, #24]
    b220:	cmp	r3, #0
    b224:	moveq	sl, #15
    b228:	beq	c140 <readstat_parse_sas7bdat+0x1274>
    b22c:	add	r5, r4, #480	; 0x1e0
    b230:	add	r5, r5, #1
    b234:	ldrd	r0, [r4, #96]	; 0x60
    b238:	ldr	r2, [r4, #112]	; 0x70
    b23c:	ldr	r3, [r4, #116]	; 0x74
    b240:	str	r2, [sp, #24]
    b244:	str	r3, [sp, #28]
    b248:	strd	r6, [sp, #16]
    b24c:	strd	r0, [sp, #8]
    b250:	ldrd	r6, [sp, #32]
    b254:	mul	ip, r2, r7
    b258:	mla	ip, r3, r6, ip
    b25c:	umull	r2, r3, r2, r6
    b260:	add	r3, ip, r3
    b264:	adds	r2, r2, r0
    b268:	adc	r3, r3, r1
    b26c:	strd	r2, [sp]
    b270:	ldr	r2, [pc, #2904]	; bdd0 <readstat_parse_sas7bdat+0xf04>
    b274:	add	r2, pc, r2
    b278:	mov	r1, #2048	; 0x800
    b27c:	mov	r0, r5
    b280:	bl	42ac <snprintf@plt>
    b284:	ldr	r3, [r4, #24]
    b288:	ldr	r1, [r4, #52]	; 0x34
    b28c:	mov	r0, r5
    b290:	blx	r3
    b294:	mov	sl, #15
    b298:	b	c140 <readstat_parse_sas7bdat+0x1274>
    b29c:	adds	r6, r6, #1
    b2a0:	adc	r7, r7, #0
    b2a4:	strd	r6, [sp, #32]
    b2a8:	ldrd	r2, [r4, #104]	; 0x68
    b2ac:	cmp	r7, r3
    b2b0:	cmpeq	r6, r2
    b2b4:	bcs	b3f8 <readstat_parse_sas7bdat+0x52c>
    b2b8:	strd	r6, [sp, #32]
    b2bc:	ldr	ip, [r4, #112]	; 0x70
    b2c0:	ldr	r0, [r4, #96]	; 0x60
    b2c4:	ldr	r3, [r8, #8]
    b2c8:	ldr	r2, [r8, #20]
    b2cc:	mov	r1, #0
    b2d0:	mla	r0, ip, r6, r0
    b2d4:	blx	r3
    b2d8:	cmn	r0, #1
    b2dc:	beq	b218 <readstat_parse_sas7bdat+0x34c>
    b2e0:	ldr	r5, [r4, #44]	; 0x2c
    b2e4:	cmp	r5, #0
    b2e8:	movne	r5, #16
    b2ec:	moveq	r5, #0
    b2f0:	add	sl, r5, #18
    b2f4:	ldr	r9, [r4, #112]	; 0x70
    b2f8:	ldr	r3, [r8, #12]
    b2fc:	ldr	r2, [r8, #20]
    b300:	mov	r1, sl
    b304:	ldr	r0, [r4, #120]	; 0x78
    b308:	blx	r3
    b30c:	cmp	sl, r0
    b310:	bhi	c138 <readstat_parse_sas7bdat+0x126c>
    b314:	add	r5, r5, #16
    b318:	ldr	r0, [r4, #120]	; 0x78
    b31c:	ldr	r1, [r4, #60]	; 0x3c
    b320:	add	r0, r0, r5
    b324:	bl	43fc <sas_read2@plt>
    b328:	and	r3, r0, #3840	; 0xf00
    b32c:	cmp	r3, #256	; 0x100
    b330:	beq	b3f8 <readstat_parse_sas7bdat+0x52c>
    b334:	tst	r0, #36864	; 0x9000
    b338:	bne	b29c <readstat_parse_sas7bdat+0x3d0>
    b33c:	sub	r9, r9, sl
    b340:	ldr	r0, [r4, #120]	; 0x78
    b344:	ldr	r3, [r8, #12]
    b348:	ldr	r2, [r8, #20]
    b34c:	mov	r1, r9
    b350:	add	r0, r0, sl
    b354:	blx	r3
    b358:	cmp	r9, r0
    b35c:	bhi	c150 <readstat_parse_sas7bdat+0x1284>
    b360:	mov	r2, r4
    b364:	ldr	r1, [r4, #112]	; 0x70
    b368:	ldr	r0, [r4, #120]	; 0x78
    b36c:	bl	a6d0 <sas7bdat_parse_page_pass1>
    b370:	cmp	r0, #0
    b374:	beq	b29c <readstat_parse_sas7bdat+0x3d0>
    b378:	ldr	r9, [sp, #40]	; 0x28
    b37c:	mov	sl, r0
    b380:	ldr	r3, [r4, #24]
    b384:	cmp	r3, #0
    b388:	cmpne	r0, #4
    b38c:	beq	afcc <readstat_parse_sas7bdat+0x100>
    b390:	ldr	r3, [r8, #8]
    b394:	ldr	r2, [r8, #20]
    b398:	mov	r1, #1
    b39c:	mov	r0, #0
    b3a0:	blx	r3
    b3a4:	add	r5, r4, #480	; 0x1e0
    b3a8:	add	r5, r5, #1
    b3ac:	asr	r1, r0, #31
    b3b0:	subs	r2, r0, #1
    b3b4:	sbc	r3, r1, #0
    b3b8:	strd	r2, [sp, #16]
    b3bc:	ldrd	r2, [r4, #112]	; 0x70
    b3c0:	subs	r2, r0, r2
    b3c4:	sbc	r3, r1, r3
    b3c8:	strd	r2, [sp, #8]
    b3cc:	strd	r6, [sp]
    b3d0:	ldr	r2, [pc, #2556]	; bdd4 <readstat_parse_sas7bdat+0xf08>
    b3d4:	add	r2, pc, r2
    b3d8:	mov	r1, #2048	; 0x800
    b3dc:	mov	r0, r5
    b3e0:	bl	42ac <snprintf@plt>
    b3e4:	ldr	r3, [r4, #24]
    b3e8:	ldr	r1, [r4, #52]	; 0x34
    b3ec:	mov	r0, r5
    b3f0:	blx	r3
    b3f4:	b	afcc <readstat_parse_sas7bdat+0x100>
    b3f8:	ldr	r9, [sp, #40]	; 0x28
    b3fc:	ldr	r5, [r4, #56]	; 0x38
    b400:	ldrd	r6, [r4, #104]	; 0x68
    b404:	subs	r6, r6, #1
    b408:	sbc	r7, r7, #0
    b40c:	ldrd	r2, [sp, #32]
    b410:	cmp	r7, r3
    b414:	cmpeq	r6, r2
    b418:	bls	b62c <readstat_parse_sas7bdat+0x760>
    b41c:	mov	r2, #0
    b420:	mov	r3, #0
    b424:	strd	r2, [sp, #40]	; 0x28
    b428:	b	b4d8 <readstat_parse_sas7bdat+0x60c>
    b42c:	ldr	r3, [r4, #24]
    b430:	cmp	r3, #0
    b434:	moveq	sl, #15
    b438:	beq	b4a4 <readstat_parse_sas7bdat+0x5d8>
    b43c:	add	r5, r4, #480	; 0x1e0
    b440:	add	r5, r5, #1
    b444:	ldrd	r0, [r4, #96]	; 0x60
    b448:	ldr	r2, [r4, #112]	; 0x70
    b44c:	ldr	r3, [r4, #116]	; 0x74
    b450:	str	r2, [sp, #24]
    b454:	str	r3, [sp, #28]
    b458:	strd	r6, [sp, #16]
    b45c:	strd	r0, [sp, #8]
    b460:	mul	ip, r2, r7
    b464:	mla	ip, r3, r6, ip
    b468:	umull	r2, r3, r2, r6
    b46c:	add	r3, ip, r3
    b470:	adds	r2, r2, r0
    b474:	adc	r3, r3, r1
    b478:	strd	r2, [sp]
    b47c:	ldr	r2, [pc, #2388]	; bdd8 <readstat_parse_sas7bdat+0xf0c>
    b480:	add	r2, pc, r2
    b484:	mov	r1, #2048	; 0x800
    b488:	mov	r0, r5
    b48c:	bl	42ac <snprintf@plt>
    b490:	ldr	r3, [r4, #24]
    b494:	ldr	r1, [r4, #52]	; 0x34
    b498:	mov	r0, r5
    b49c:	blx	r3
    b4a0:	mov	sl, #15
    b4a4:	ldr	r3, [fp, #4]
    b4a8:	ldr	r0, [fp, #20]
    b4ac:	blx	r3
    b4b0:	b	c04c <readstat_parse_sas7bdat+0x1180>
    b4b4:	ldrd	r2, [sp, #40]	; 0x28
    b4b8:	orrs	r3, r2, r3
    b4bc:	bne	b62c <readstat_parse_sas7bdat+0x760>
    b4c0:	subs	r6, r6, #1
    b4c4:	sbc	r7, r7, #0
    b4c8:	ldrd	r2, [sp, #32]
    b4cc:	cmp	r7, r3
    b4d0:	cmpeq	r6, r2
    b4d4:	bls	b62c <readstat_parse_sas7bdat+0x760>
    b4d8:	ldr	ip, [r4, #112]	; 0x70
    b4dc:	ldr	r0, [r4, #96]	; 0x60
    b4e0:	ldr	r3, [r5, #8]
    b4e4:	ldr	r2, [r5, #20]
    b4e8:	mov	r1, #0
    b4ec:	mla	r0, ip, r6, r0
    b4f0:	blx	r3
    b4f4:	cmn	r0, #1
    b4f8:	beq	b42c <readstat_parse_sas7bdat+0x560>
    b4fc:	ldr	r8, [r4, #44]	; 0x2c
    b500:	cmp	r8, #0
    b504:	movne	r8, #16
    b508:	moveq	r8, #0
    b50c:	add	sl, r8, #18
    b510:	ldr	r3, [r4, #112]	; 0x70
    b514:	str	r3, [sp, #52]	; 0x34
    b518:	ldr	r3, [r5, #12]
    b51c:	ldr	r2, [r5, #20]
    b520:	mov	r1, sl
    b524:	ldr	r0, [r4, #120]	; 0x78
    b528:	blx	r3
    b52c:	cmp	sl, r0
    b530:	bhi	c15c <readstat_parse_sas7bdat+0x1290>
    b534:	add	r8, r8, #16
    b538:	ldr	r0, [r4, #120]	; 0x78
    b53c:	ldr	r1, [r4, #60]	; 0x3c
    b540:	add	r0, r0, r8
    b544:	bl	43fc <sas_read2@plt>
    b548:	and	r3, r0, #3840	; 0xf00
    b54c:	cmp	r3, #256	; 0x100
    b550:	beq	b4b4 <readstat_parse_sas7bdat+0x5e8>
    b554:	tst	r0, #36864	; 0x9000
    b558:	bne	b4c0 <readstat_parse_sas7bdat+0x5f4>
    b55c:	ldr	r3, [sp, #52]	; 0x34
    b560:	sub	r8, r3, sl
    b564:	ldr	r0, [r4, #120]	; 0x78
    b568:	ldr	r3, [r5, #12]
    b56c:	ldr	r2, [r5, #20]
    b570:	mov	r1, r8
    b574:	add	r0, r0, sl
    b578:	blx	r3
    b57c:	cmp	r8, r0
    b580:	bhi	c164 <readstat_parse_sas7bdat+0x1298>
    b584:	mov	r2, r4
    b588:	ldr	r1, [r4, #112]	; 0x70
    b58c:	ldr	r0, [r4, #120]	; 0x78
    b590:	bl	a6d0 <sas7bdat_parse_page_pass1>
    b594:	cmp	r0, #0
    b598:	bne	b5b0 <readstat_parse_sas7bdat+0x6e4>
    b59c:	ldrd	r2, [sp, #40]	; 0x28
    b5a0:	adds	r2, r2, #1
    b5a4:	adc	r3, r3, #0
    b5a8:	strd	r2, [sp, #40]	; 0x28
    b5ac:	b	b4c0 <readstat_parse_sas7bdat+0x5f4>
    b5b0:	mov	sl, r0
    b5b4:	ldr	r3, [r4, #24]
    b5b8:	cmp	r3, #0
    b5bc:	cmpne	r0, #4
    b5c0:	beq	afcc <readstat_parse_sas7bdat+0x100>
    b5c4:	ldr	r3, [r5, #8]
    b5c8:	ldr	r2, [r5, #20]
    b5cc:	mov	r1, #1
    b5d0:	mov	r0, #0
    b5d4:	blx	r3
    b5d8:	add	r5, r4, #480	; 0x1e0
    b5dc:	add	r5, r5, #1
    b5e0:	asr	r1, r0, #31
    b5e4:	subs	r2, r0, #1
    b5e8:	sbc	r3, r1, #0
    b5ec:	strd	r2, [sp, #16]
    b5f0:	ldrd	r2, [r4, #112]	; 0x70
    b5f4:	subs	r2, r0, r2
    b5f8:	sbc	r3, r1, r3
    b5fc:	strd	r2, [sp, #8]
    b600:	strd	r6, [sp]
    b604:	ldr	r2, [pc, #2000]	; bddc <readstat_parse_sas7bdat+0xf10>
    b608:	add	r2, pc, r2
    b60c:	mov	r1, #2048	; 0x800
    b610:	mov	r0, r5
    b614:	bl	42ac <snprintf@plt>
    b618:	ldr	r3, [r4, #24]
    b61c:	ldr	r1, [r4, #52]	; 0x34
    b620:	mov	r0, r5
    b624:	blx	r3
    b628:	b	afcc <readstat_parse_sas7bdat+0x100>
    b62c:	ldr	r3, [fp, #8]
    b630:	ldr	r2, [fp, #20]
    b634:	mov	r1, #0
    b638:	ldr	r0, [r4, #96]	; 0x60
    b63c:	blx	r3
    b640:	cmn	r0, #1
    b644:	beq	b690 <readstat_parse_sas7bdat+0x7c4>
    b648:	ldr	r3, [r4, #56]	; 0x38
    b64c:	str	r3, [sp, #84]	; 0x54
    b650:	ldrd	r2, [r4, #104]	; 0x68
    b654:	orrs	r3, r2, r3
    b658:	beq	beac <readstat_parse_sas7bdat+0xfe0>
    b65c:	mov	r2, #0
    b660:	mov	r3, #0
    b664:	strd	r2, [sp, #64]	; 0x40
    b668:	add	r3, r4, #480	; 0x1e0
    b66c:	add	r3, r3, #1
    b670:	str	r3, [sp, #120]	; 0x78
    b674:	ldr	r3, [pc, #1892]	; bde0 <readstat_parse_sas7bdat+0xf14>
    b678:	add	r3, pc, r3
    b67c:	str	r3, [sp, #124]	; 0x7c
    b680:	str	fp, [sp, #32]
    b684:	str	r9, [sp, #40]	; 0x28
    b688:	mov	r9, r4
    b68c:	b	bcec <readstat_parse_sas7bdat+0xe20>
    b690:	ldr	r3, [r4, #24]
    b694:	cmp	r3, #0
    b698:	moveq	sl, #15
    b69c:	beq	c040 <readstat_parse_sas7bdat+0x1174>
    b6a0:	add	r5, r4, #480	; 0x1e0
    b6a4:	add	r5, r5, #1
    b6a8:	ldrd	r2, [r4, #96]	; 0x60
    b6ac:	strd	r2, [sp]
    b6b0:	ldr	r2, [pc, #1836]	; bde4 <readstat_parse_sas7bdat+0xf18>
    b6b4:	add	r2, pc, r2
    b6b8:	mov	r1, #2048	; 0x800
    b6bc:	mov	r0, r5
    b6c0:	bl	42ac <snprintf@plt>
    b6c4:	ldr	r3, [r4, #24]
    b6c8:	ldr	r1, [r4, #52]	; 0x34
    b6cc:	mov	r0, r5
    b6d0:	blx	r3
    b6d4:	mov	sl, #15
    b6d8:	b	c040 <readstat_parse_sas7bdat+0x1174>
    b6dc:	ldr	r0, [r9, #128]	; 0x80
    b6e0:	sub	r0, r0, #6
    b6e4:	ldr	r1, [r9, #60]	; 0x3c
    b6e8:	add	r0, fp, r0
    b6ec:	bl	43fc <sas_read2@plt>
    b6f0:	str	r0, [r9, #72]	; 0x48
    b6f4:	ldr	r3, [r9, #128]	; 0x80
    b6f8:	add	r7, fp, r3
    b6fc:	cmp	r7, #0
    b700:	beq	bcb4 <readstat_parse_sas7bdat+0xde8>
    b704:	mov	r1, #0
    b708:	mov	r0, r9
    b70c:	bl	ab9c <sas7bdat_submit_columns_if_needed>
    b710:	subs	sl, r0, #0
    b714:	bne	be00 <readstat_parse_sas7bdat+0xf34>
    b718:	ldr	r3, [r9, #16]
    b71c:	cmp	r3, #0
    b720:	beq	bcb4 <readstat_parse_sas7bdat+0xde8>
    b724:	ldr	r3, [sp, #56]	; 0x38
    b728:	add	r4, fp, r3
    b72c:	sub	r4, r4, r7
    b730:	ldr	r3, [r9, #72]	; 0x48
    b734:	cmp	r3, #0
    b738:	beq	bcb4 <readstat_parse_sas7bdat+0xde8>
    b73c:	ldr	r2, [r9, #76]	; 0x4c
    b740:	ldr	r3, [r9, #84]	; 0x54
    b744:	cmp	r2, r3
    b748:	bcs	bcb4 <readstat_parse_sas7bdat+0xde8>
    b74c:	ldr	r3, [r9, #68]	; 0x44
    b750:	cmp	r4, r3
    b754:	bcc	bfe8 <readstat_parse_sas7bdat+0x111c>
    b758:	mov	r6, #0
    b75c:	mov	r5, r6
    b760:	b	bc78 <readstat_parse_sas7bdat+0xdac>
    b764:	add	r7, fp, r2
    b768:	ldr	r1, [sp, #88]	; 0x58
    b76c:	cmp	r1, #0
    b770:	ble	bc0c <readstat_parse_sas7bdat+0xd40>
    b774:	ldr	r1, [sp, #56]	; 0x38
    b778:	sub	r3, r1, r2
    b77c:	str	r3, [sp, #76]	; 0x4c
    b780:	mov	r3, #0
    b784:	str	r3, [sp, #92]	; 0x5c
    b788:	add	r6, sp, #128	; 0x80
    b78c:	mov	r8, r3
    b790:	str	r7, [sp, #72]	; 0x48
    b794:	b	b8d4 <readstat_parse_sas7bdat+0xa08>
    b798:	ldr	r3, [r9, #44]	; 0x2c
    b79c:	cmp	r3, #0
    b7a0:	beq	b964 <readstat_parse_sas7bdat+0xa98>
    b7a4:	ldr	r0, [sp, #128]	; 0x80
    b7a8:	add	r0, r0, #4
    b7ac:	ldr	r1, [r9, #60]	; 0x3c
    b7b0:	add	r0, fp, r0
    b7b4:	bl	4420 <sas_read4@plt>
    b7b8:	b	b964 <readstat_parse_sas7bdat+0xa98>
    b7bc:	cmn	r0, #3
    b7c0:	beq	b8a0 <readstat_parse_sas7bdat+0x9d4>
    b7c4:	mov	r3, r9
    b7c8:	ldr	r2, [sp, #136]	; 0x88
    b7cc:	ldr	r1, [sp, #128]	; 0x80
    b7d0:	add	r1, fp, r1
    b7d4:	bl	a0ac <sas7bdat_parse_subheader>
    b7d8:	subs	sl, r0, #0
    b7dc:	beq	b8a0 <readstat_parse_sas7bdat+0x9d4>
    b7e0:	b	b9e4 <readstat_parse_sas7bdat+0xb18>
    b7e4:	cmp	r4, #4
    b7e8:	bne	bc64 <readstat_parse_sas7bdat+0xd98>
    b7ec:	mov	r1, #1
    b7f0:	mov	r0, r9
    b7f4:	bl	ab9c <sas7bdat_submit_columns_if_needed>
    b7f8:	subs	sl, r0, #0
    b7fc:	bne	b9e4 <readstat_parse_sas7bdat+0xb18>
    b800:	ldr	r4, [sp, #128]	; 0x80
    b804:	add	r4, fp, r4
    b808:	ldr	r5, [sp, #136]	; 0x88
    b80c:	ldrb	r3, [r9, #2529]	; 0x9e1
    b810:	tst	r3, #1
    b814:	beq	bb80 <readstat_parse_sas7bdat+0xcb4>
    b818:	ldr	r7, [r9, #68]	; 0x44
    b81c:	str	r7, [sp, #108]	; 0x6c
    b820:	mov	r0, r7
    b824:	bl	4138 <malloc@plt>
    b828:	str	r0, [sp, #52]	; 0x34
    b82c:	mov	r3, r4
    b830:	add	sl, r4, r5
    b834:	add	r2, r0, r7
    b838:	str	r2, [sp, #80]	; 0x50
    b83c:	add	r4, r3, #2
    b840:	cmp	sl, r4
    b844:	bcc	bb24 <readstat_parse_sas7bdat+0xc58>
    b848:	ldrb	r2, [r3]
    b84c:	ldrb	r3, [r3, #1]
    b850:	add	r3, r3, r2, lsl #8
    b854:	uxth	r3, r3
    b858:	str	r3, [sp, #112]	; 0x70
    b85c:	mov	r5, #15
    b860:	ldr	r3, [sp, #112]	; 0x70
    b864:	asr	r3, r3, r5
    b868:	tst	r3, #1
    b86c:	bne	ba20 <readstat_parse_sas7bdat+0xb54>
    b870:	add	r3, r4, #1
    b874:	cmp	r3, sl
    b878:	bhi	ba18 <readstat_parse_sas7bdat+0xb4c>
    b87c:	add	r2, r0, #1
    b880:	ldr	r1, [sp, #80]	; 0x50
    b884:	cmp	r2, r1
    b888:	bls	b9fc <readstat_parse_sas7bdat+0xb30>
    b88c:	mov	sl, #10
    b890:	ldr	r0, [sp, #52]	; 0x34
    b894:	bl	3ee0 <free@plt>
    b898:	cmp	sl, #0
    b89c:	bne	b9e4 <readstat_parse_sas7bdat+0xb18>
    b8a0:	ldr	r2, [sp, #72]	; 0x48
    b8a4:	ldr	r3, [sp, #116]	; 0x74
    b8a8:	add	r2, r2, r3
    b8ac:	str	r2, [sp, #72]	; 0x48
    b8b0:	ldr	r2, [sp, #92]	; 0x5c
    b8b4:	add	r2, r2, #1
    b8b8:	str	r2, [sp, #92]	; 0x5c
    b8bc:	ldr	r1, [sp, #76]	; 0x4c
    b8c0:	sub	r3, r1, r3
    b8c4:	str	r3, [sp, #76]	; 0x4c
    b8c8:	ldr	r3, [sp, #104]	; 0x68
    b8cc:	cmp	r3, r2
    b8d0:	beq	bc08 <readstat_parse_sas7bdat+0xd3c>
    b8d4:	str	r8, [r6]
    b8d8:	str	r8, [r6, #4]
    b8dc:	str	r8, [r6, #8]
    b8e0:	str	r8, [r6, #12]
    b8e4:	str	r8, [r6, #16]
    b8e8:	str	r8, [r6, #20]
    b8ec:	mov	r3, r9
    b8f0:	mov	r2, r6
    b8f4:	ldr	r1, [sp, #76]	; 0x4c
    b8f8:	ldr	r0, [sp, #72]	; 0x48
    b8fc:	bl	9f90 <sas7bdat_parse_subheader_pointer>
    b900:	subs	sl, r0, #0
    b904:	bne	b9e4 <readstat_parse_sas7bdat+0xb18>
    b908:	ldrd	r2, [sp, #136]	; 0x88
    b90c:	orrs	r3, r2, r3
    b910:	beq	b8a0 <readstat_parse_sas7bdat+0x9d4>
    b914:	ldrb	r4, [sp, #144]	; 0x90
    b918:	cmp	r4, #1
    b91c:	beq	b8a0 <readstat_parse_sas7bdat+0x9d4>
    b920:	mov	r3, r9
    b924:	ldr	r2, [sp, #88]	; 0x58
    b928:	ldr	r1, [sp, #96]	; 0x60
    b92c:	mov	r0, r6
    b930:	bl	9dec <sas7bdat_validate_subheader_pointer>
    b934:	subs	sl, r0, #0
    b938:	bne	b9e4 <readstat_parse_sas7bdat+0xb18>
    b93c:	cmp	r4, #0
    b940:	bne	b7e4 <readstat_parse_sas7bdat+0x918>
    b944:	ldr	r1, [r9, #60]	; 0x3c
    b948:	ldr	r0, [sp, #128]	; 0x80
    b94c:	add	r0, fp, r0
    b950:	bl	4420 <sas_read4@plt>
    b954:	ldr	r3, [r9, #40]	; 0x28
    b958:	cmp	r3, #0
    b95c:	cmneq	r0, #1
    b960:	beq	b798 <readstat_parse_sas7bdat+0x8cc>
    b964:	ldrb	r3, [sp, #145]	; 0x91
    b968:	cmp	r3, #0
    b96c:	beq	b7bc <readstat_parse_sas7bdat+0x8f0>
    b970:	ldr	r3, [pc, #1136]	; bde8 <readstat_parse_sas7bdat+0xf1c>
    b974:	ldr	r2, [pc, #1136]	; bdec <readstat_parse_sas7bdat+0xf20>
    b978:	cmp	r0, r2
    b97c:	cmpne	r0, r3
    b980:	beq	b7bc <readstat_parse_sas7bdat+0x8f0>
    b984:	add	r3, r0, #1024	; 0x400
    b988:	add	r3, r3, #2
    b98c:	bics	r3, r3, #2
    b990:	beq	b7bc <readstat_parse_sas7bdat+0x8f0>
    b994:	bic	r3, r0, #7
    b998:	cmn	r3, #8
    b99c:	beq	b7bc <readstat_parse_sas7bdat+0x8f0>
    b9a0:	ldr	r0, [r9, #68]	; 0x44
    b9a4:	mov	r1, #0
    b9a8:	ldrd	r2, [sp, #136]	; 0x88
    b9ac:	cmp	r3, r1
    b9b0:	cmpeq	r2, r0
    b9b4:	bne	bc5c <readstat_parse_sas7bdat+0xd90>
    b9b8:	mov	r1, #1
    b9bc:	mov	r0, r9
    b9c0:	bl	ab9c <sas7bdat_submit_columns_if_needed>
    b9c4:	subs	sl, r0, #0
    b9c8:	bne	b9e4 <readstat_parse_sas7bdat+0xb18>
    b9cc:	mov	r1, r9
    b9d0:	ldr	r0, [sp, #128]	; 0x80
    b9d4:	add	r0, fp, r0
    b9d8:	bl	a8a8 <sas7bdat_parse_single_row>
    b9dc:	subs	sl, r0, #0
    b9e0:	beq	b8a0 <readstat_parse_sas7bdat+0x9d4>
    b9e4:	cmp	sl, #0
    b9e8:	beq	bcb4 <readstat_parse_sas7bdat+0xde8>
    b9ec:	ldr	fp, [sp, #32]
    b9f0:	mov	r4, r9
    b9f4:	ldr	r9, [sp, #40]	; 0x28
    b9f8:	b	be0c <readstat_parse_sas7bdat+0xf40>
    b9fc:	ldrb	r1, [r4]
    ba00:	strb	r1, [r0]
    ba04:	mov	r0, r2
    ba08:	mov	r4, r3
    ba0c:	sub	r5, r5, #1
    ba10:	cmn	r5, #1
    ba14:	bne	b860 <readstat_parse_sas7bdat+0x994>
    ba18:	mov	r3, r4
    ba1c:	b	b83c <readstat_parse_sas7bdat+0x970>
    ba20:	add	r3, r4, #2
    ba24:	cmp	sl, r3
    ba28:	bcc	bb50 <readstat_parse_sas7bdat+0xc84>
    ba2c:	mov	ip, r4
    ba30:	ldrb	r3, [ip], #2
    ba34:	ldrb	r1, [r4, #1]
    ba38:	cmp	r3, #15
    ba3c:	addls	r2, r3, #3
    ba40:	movls	r4, ip
    ba44:	bls	ba74 <readstat_parse_sas7bdat+0xba8>
    ba48:	lsr	r2, r3, #4
    ba4c:	cmp	r2, #1
    ba50:	bne	ba98 <readstat_parse_sas7bdat+0xbcc>
    ba54:	add	ip, r4, #3
    ba58:	cmp	sl, ip
    ba5c:	bcc	bb58 <readstat_parse_sas7bdat+0xc8c>
    ba60:	and	r3, r3, #15
    ba64:	add	r3, r3, #19
    ba68:	add	r2, r3, r1, lsl #4
    ba6c:	ldrb	r1, [r4, #2]
    ba70:	mov	r4, ip
    ba74:	cmp	r2, #0
    ba78:	beq	ba0c <readstat_parse_sas7bdat+0xb40>
    ba7c:	add	r7, r0, r2
    ba80:	ldr	r3, [sp, #80]	; 0x50
    ba84:	cmp	r7, r3
    ba88:	bhi	bb68 <readstat_parse_sas7bdat+0xc9c>
    ba8c:	bl	42d0 <memset@plt>
    ba90:	mov	r0, r7
    ba94:	b	ba0c <readstat_parse_sas7bdat+0xb40>
    ba98:	cmp	r2, #2
    ba9c:	bne	bb10 <readstat_parse_sas7bdat+0xc44>
    baa0:	add	ip, r4, #3
    baa4:	cmp	sl, ip
    baa8:	bcc	bb60 <readstat_parse_sas7bdat+0xc94>
    baac:	ldrb	r2, [r4, #2]
    bab0:	add	r2, r2, #16
    bab4:	and	r3, r3, #15
    bab8:	add	r3, r3, #3
    babc:	add	r1, r3, r1, lsl #4
    bac0:	mov	r4, ip
    bac4:	cmp	r2, #0
    bac8:	beq	ba0c <readstat_parse_sas7bdat+0xb40>
    bacc:	ldr	r3, [sp, #52]	; 0x34
    bad0:	sub	ip, r0, r3
    bad4:	cmp	r1, r2
    bad8:	movcs	r3, #0
    badc:	movcc	r3, #1
    bae0:	cmp	r1, ip
    bae4:	orrhi	r3, r3, #1
    bae8:	cmp	r3, #0
    baec:	bne	bb70 <readstat_parse_sas7bdat+0xca4>
    baf0:	add	r7, r0, r2
    baf4:	ldr	r3, [sp, #80]	; 0x50
    baf8:	cmp	r7, r3
    bafc:	bhi	bb78 <readstat_parse_sas7bdat+0xcac>
    bb00:	sub	r1, r0, r1
    bb04:	bl	3f40 <memcpy@plt>
    bb08:	mov	r0, r7
    bb0c:	b	ba0c <readstat_parse_sas7bdat+0xb40>
    bb10:	and	r3, r3, #15
    bb14:	add	r3, r3, #3
    bb18:	add	r1, r3, r1, lsl #4
    bb1c:	mov	r4, ip
    bb20:	b	bac4 <readstat_parse_sas7bdat+0xbf8>
    bb24:	ldr	r3, [sp, #52]	; 0x34
    bb28:	sub	r0, r0, r3
    bb2c:	ldr	r3, [sp, #108]	; 0x6c
    bb30:	cmp	r3, r0
    bb34:	movne	sl, #10
    bb38:	bne	b890 <readstat_parse_sas7bdat+0x9c4>
    bb3c:	mov	r1, r9
    bb40:	ldr	r0, [sp, #52]	; 0x34
    bb44:	bl	a8a8 <sas7bdat_parse_single_row>
    bb48:	mov	sl, r0
    bb4c:	b	b890 <readstat_parse_sas7bdat+0x9c4>
    bb50:	mov	sl, #5
    bb54:	b	b890 <readstat_parse_sas7bdat+0x9c4>
    bb58:	mov	sl, #5
    bb5c:	b	b890 <readstat_parse_sas7bdat+0x9c4>
    bb60:	mov	sl, #5
    bb64:	b	b890 <readstat_parse_sas7bdat+0x9c4>
    bb68:	mov	sl, #10
    bb6c:	b	b890 <readstat_parse_sas7bdat+0x9c4>
    bb70:	mov	sl, #5
    bb74:	b	b890 <readstat_parse_sas7bdat+0x9c4>
    bb78:	mov	sl, #10
    bb7c:	b	b890 <readstat_parse_sas7bdat+0x9c4>
    bb80:	ldr	r2, [r9, #84]	; 0x54
    bb84:	ldr	r3, [r9, #76]	; 0x4c
    bb88:	cmp	r2, r3
    bb8c:	beq	b8a0 <readstat_parse_sas7bdat+0x9d4>
    bb90:	mov	r3, r5
    bb94:	mov	r2, r4
    bb98:	ldr	r1, [r9, #68]	; 0x44
    bb9c:	ldr	r0, [r9, #124]	; 0x7c
    bba0:	bl	409c <sas_rle_decompress@plt>
    bba4:	ldr	r3, [r9, #68]	; 0x44
    bba8:	cmp	r3, r0
    bbac:	beq	bbf4 <readstat_parse_sas7bdat+0xd28>
    bbb0:	ldr	r2, [r9, #24]
    bbb4:	cmp	r2, #0
    bbb8:	beq	bbec <readstat_parse_sas7bdat+0xd20>
    bbbc:	str	r3, [sp, #4]
    bbc0:	str	r0, [sp]
    bbc4:	ldr	r3, [r9, #76]	; 0x4c
    bbc8:	ldr	r2, [sp, #124]	; 0x7c
    bbcc:	mov	r1, #2048	; 0x800
    bbd0:	ldr	r4, [sp, #120]	; 0x78
    bbd4:	mov	r0, r4
    bbd8:	bl	42ac <snprintf@plt>
    bbdc:	ldr	r3, [r9, #24]
    bbe0:	ldr	r1, [r9, #52]	; 0x34
    bbe4:	mov	r0, r4
    bbe8:	blx	r3
    bbec:	mov	sl, #10
    bbf0:	b	b9e4 <readstat_parse_sas7bdat+0xb18>
    bbf4:	mov	r1, r9
    bbf8:	ldr	r0, [r9, #124]	; 0x7c
    bbfc:	bl	a8a8 <sas7bdat_parse_single_row>
    bc00:	mov	sl, r0
    bc04:	b	b898 <readstat_parse_sas7bdat+0x9cc>
    bc08:	ldr	r7, [sp, #72]	; 0x48
    bc0c:	ldr	r3, [sp, #100]	; 0x64
    bc10:	cmp	r3, #512	; 0x200
    bc14:	bne	bcb4 <readstat_parse_sas7bdat+0xde8>
    bc18:	sub	r3, r7, fp
    bc1c:	rsbs	r2, r3, #0
    bc20:	and	r3, r3, #7
    bc24:	and	r2, r2, #7
    bc28:	rsbpl	r3, r2, #0
    bc2c:	cmp	r3, #4
    bc30:	bne	b6fc <readstat_parse_sas7bdat+0x830>
    bc34:	ldr	r3, [r7]
    bc38:	ldr	r2, [pc, #432]	; bdf0 <readstat_parse_sas7bdat+0xf24>
    bc3c:	cmp	r3, r2
    bc40:	cmpne	r3, #0
    bc44:	beq	bc54 <readstat_parse_sas7bdat+0xd88>
    bc48:	ldr	r3, [r9, #48]	; 0x30
    bc4c:	cmp	r3, #0
    bc50:	beq	b6fc <readstat_parse_sas7bdat+0x830>
    bc54:	add	r7, r7, #4
    bc58:	b	b6fc <readstat_parse_sas7bdat+0x830>
    bc5c:	mov	sl, #10
    bc60:	b	b9e4 <readstat_parse_sas7bdat+0xb18>
    bc64:	mov	sl, #6
    bc68:	b	b9e4 <readstat_parse_sas7bdat+0xb18>
    bc6c:	add	r3, r3, r5
    bc70:	cmp	r4, r3
    bc74:	bcc	bffc <readstat_parse_sas7bdat+0x1130>
    bc78:	mov	r1, r9
    bc7c:	add	r0, r7, r5
    bc80:	bl	a8a8 <sas7bdat_parse_single_row>
    bc84:	cmp	r0, #0
    bc88:	bne	be8c <readstat_parse_sas7bdat+0xfc0>
    bc8c:	ldr	r3, [r9, #68]	; 0x44
    bc90:	add	r5, r5, r3
    bc94:	add	r6, r6, #1
    bc98:	ldr	r2, [r9, #72]	; 0x48
    bc9c:	cmp	r2, r6
    bca0:	bls	bcb4 <readstat_parse_sas7bdat+0xde8>
    bca4:	ldr	r1, [r9, #76]	; 0x4c
    bca8:	ldr	r2, [r9, #84]	; 0x54
    bcac:	cmp	r1, r2
    bcb0:	bcc	bc6c <readstat_parse_sas7bdat+0xda0>
    bcb4:	ldr	r2, [r9, #76]	; 0x4c
    bcb8:	ldr	r3, [r9, #84]	; 0x54
    bcbc:	cmp	r2, r3
    bcc0:	beq	c010 <readstat_parse_sas7bdat+0x1144>
    bcc4:	ldrd	r2, [sp, #64]	; 0x40
    bcc8:	adds	r2, r2, #1
    bccc:	adc	r3, r3, #0
    bcd0:	mov	r0, r2
    bcd4:	mov	r1, r3
    bcd8:	strd	r0, [sp, #64]	; 0x40
    bcdc:	ldrd	r2, [r9, #104]	; 0x68
    bce0:	cmp	r3, r1
    bce4:	cmpeq	r2, r0
    bce8:	bls	bea0 <readstat_parse_sas7bdat+0xfd4>
    bcec:	mov	r0, r9
    bcf0:	bl	9dc8 <sas7bdat_update_progress>
    bcf4:	subs	sl, r0, #0
    bcf8:	bne	bf34 <readstat_parse_sas7bdat+0x1068>
    bcfc:	ldr	r2, [sp, #84]	; 0x54
    bd00:	ldr	r3, [r2, #12]
    bd04:	ldr	r2, [r2, #20]
    bd08:	ldr	r1, [r9, #112]	; 0x70
    bd0c:	ldr	r0, [r9, #120]	; 0x78
    bd10:	blx	r3
    bd14:	ldrd	r2, [r9, #112]	; 0x70
    bd18:	strd	r2, [sp, #56]	; 0x38
    bd1c:	asr	r1, r0, #31
    bd20:	cmp	r1, r3
    bd24:	cmpeq	r0, r2
    bd28:	bcc	c16c <readstat_parse_sas7bdat+0x12a0>
    bd2c:	ldr	fp, [r9, #120]	; 0x78
    bd30:	str	r2, [sp, #96]	; 0x60
    bd34:	ldr	r0, [r9, #128]	; 0x80
    bd38:	sub	r0, r0, #8
    bd3c:	ldr	r1, [r9, #60]	; 0x3c
    bd40:	add	r0, fp, r0
    bd44:	bl	43fc <sas_read2@plt>
    bd48:	and	r3, r0, #3840	; 0xf00
    bd4c:	str	r3, [sp, #100]	; 0x64
    bd50:	cmp	r3, #256	; 0x100
    bd54:	beq	b6dc <readstat_parse_sas7bdat+0x810>
    bd58:	tst	r0, #36864	; 0x9000
    bd5c:	bne	bcb4 <readstat_parse_sas7bdat+0xde8>
    bd60:	ldr	r0, [r9, #128]	; 0x80
    bd64:	sub	r0, r0, #4
    bd68:	ldr	r1, [r9, #60]	; 0x3c
    bd6c:	add	r0, fp, r0
    bd70:	bl	43fc <sas_read2@plt>
    bd74:	mov	r1, r0
    bd78:	str	r0, [sp, #88]	; 0x58
    bd7c:	ldrd	r2, [r9, #128]	; 0x80
    bd80:	ldr	r0, [r9, #144]	; 0x90
    bd84:	str	r0, [sp, #116]	; 0x74
    bd88:	str	r1, [sp, #104]	; 0x68
    bd8c:	mul	r1, r0, r1
    bd90:	adds	r4, r2, r1
    bd94:	adc	r5, r3, r1, asr #31
    bd98:	ldrd	r0, [sp, #56]	; 0x38
    bd9c:	mov	r1, #0
    bda0:	cmp	r5, r1
    bda4:	cmpeq	r4, r0
    bda8:	bls	b764 <readstat_parse_sas7bdat+0x898>
    bdac:	ldr	fp, [sp, #32]
    bdb0:	mov	r4, r9
    bdb4:	ldr	r9, [sp, #40]	; 0x28
    bdb8:	mov	sl, #5
    bdbc:	b	be0c <readstat_parse_sas7bdat+0xf40>
    bdc0:	.word	0x000009e8
    bdc4:	.word	0x0001a26c
    bdc8:	.word	0x0001a220
    bdcc:	.word	0x00000101
    bdd0:	.word	0x0001a058
    bdd4:	.word	0x00019f38
    bdd8:	.word	0x00019e4c
    bddc:	.word	0x00019d04
    bde0:	.word	0x00019cc8
    bde4:	.word	0x00019a88
    bde8:	.word	0xf7f7f7f7
    bdec:	.word	0xf6f6f6f6
    bdf0:	.word	0x20202020
    bdf4:	.word	0x000194a4
    bdf8:	.word	0x00019484
    bdfc:	.word	0x0001931c
    be00:	ldr	fp, [sp, #32]
    be04:	mov	r4, r9
    be08:	ldr	r9, [sp, #40]	; 0x28
    be0c:	ldr	r3, [r4, #24]
    be10:	cmp	r3, #0
    be14:	cmpne	sl, #4
    be18:	beq	afcc <readstat_parse_sas7bdat+0x100>
    be1c:	ldr	r2, [sp, #84]	; 0x54
    be20:	ldr	r3, [r2, #8]
    be24:	ldr	r2, [r2, #20]
    be28:	mov	r1, #1
    be2c:	mov	r0, #0
    be30:	blx	r3
    be34:	add	r5, r4, #480	; 0x1e0
    be38:	add	r5, r5, #1
    be3c:	asr	r1, r0, #31
    be40:	subs	r2, r0, #1
    be44:	sbc	r3, r1, #0
    be48:	strd	r2, [sp, #16]
    be4c:	ldrd	r2, [r4, #112]	; 0x70
    be50:	subs	r2, r0, r2
    be54:	sbc	r3, r1, r3
    be58:	strd	r2, [sp, #8]
    be5c:	ldrd	r2, [sp, #64]	; 0x40
    be60:	strd	r2, [sp]
    be64:	ldr	r2, [pc, #-120]	; bdf4 <readstat_parse_sas7bdat+0xf28>
    be68:	add	r2, pc, r2
    be6c:	mov	r1, #2048	; 0x800
    be70:	mov	r0, r5
    be74:	bl	42ac <snprintf@plt>
    be78:	ldr	r3, [r4, #24]
    be7c:	ldr	r1, [r4, #52]	; 0x34
    be80:	mov	r0, r5
    be84:	blx	r3
    be88:	b	afcc <readstat_parse_sas7bdat+0x100>
    be8c:	ldr	fp, [sp, #32]
    be90:	mov	r4, r9
    be94:	ldr	r9, [sp, #40]	; 0x28
    be98:	mov	sl, r0
    be9c:	b	be0c <readstat_parse_sas7bdat+0xf40>
    bea0:	ldr	fp, [sp, #32]
    bea4:	mov	r4, r9
    bea8:	ldr	r9, [sp, #40]	; 0x28
    beac:	mov	r1, #0
    beb0:	mov	r0, r4
    beb4:	bl	ab9c <sas7bdat_submit_columns_if_needed>
    beb8:	subs	sl, r0, #0
    bebc:	bne	afcc <readstat_parse_sas7bdat+0x100>
    bec0:	ldr	r3, [r4, #16]
    bec4:	cmp	r3, #0
    bec8:	beq	bf24 <readstat_parse_sas7bdat+0x1058>
    becc:	ldr	r2, [r4, #76]	; 0x4c
    bed0:	ldr	r3, [r4, #84]	; 0x54
    bed4:	cmp	r2, r3
    bed8:	beq	bf24 <readstat_parse_sas7bdat+0x1058>
    bedc:	ldr	r1, [r4, #24]
    bee0:	cmp	r1, #0
    bee4:	moveq	sl, #9
    bee8:	beq	c024 <readstat_parse_sas7bdat+0x1158>
    beec:	add	r5, r4, #480	; 0x1e0
    bef0:	add	r5, r5, #1
    bef4:	str	r2, [sp]
    bef8:	ldr	r2, [pc, #-264]	; bdf8 <readstat_parse_sas7bdat+0xf2c>
    befc:	add	r2, pc, r2
    bf00:	mov	r1, #2048	; 0x800
    bf04:	mov	r0, r5
    bf08:	bl	42ac <snprintf@plt>
    bf0c:	ldr	r3, [r4, #24]
    bf10:	ldr	r1, [r4, #52]	; 0x34
    bf14:	mov	r0, r5
    bf18:	blx	r3
    bf1c:	mov	sl, #9
    bf20:	b	c024 <readstat_parse_sas7bdat+0x1158>
    bf24:	mov	r0, r4
    bf28:	bl	9dc8 <sas7bdat_update_progress>
    bf2c:	mov	sl, r0
    bf30:	b	afcc <readstat_parse_sas7bdat+0x100>
    bf34:	ldr	fp, [sp, #32]
    bf38:	mov	r4, r9
    bf3c:	ldr	r9, [sp, #40]	; 0x28
    bf40:	b	afcc <readstat_parse_sas7bdat+0x100>
    bf44:	add	r5, r5, #1
    bf48:	ldr	r3, [r4, #80]	; 0x50
    bf4c:	cmp	r5, r3
    bf50:	bcs	bf6c <readstat_parse_sas7bdat+0x10a0>
    bf54:	ldr	r3, [r4, #196]	; 0xc4
    bf58:	ldr	r0, [r3, r5, lsl #2]
    bf5c:	cmp	r0, #0
    bf60:	beq	bf44 <readstat_parse_sas7bdat+0x1078>
    bf64:	bl	3ee0 <free@plt>
    bf68:	b	bf44 <readstat_parse_sas7bdat+0x1078>
    bf6c:	ldr	r0, [r4, #196]	; 0xc4
    bf70:	bl	3ee0 <free@plt>
    bf74:	ldr	r0, [r4, #192]	; 0xc0
    bf78:	cmp	r0, #0
    bf7c:	beq	bf84 <readstat_parse_sas7bdat+0x10b8>
    bf80:	bl	3ee0 <free@plt>
    bf84:	ldr	r0, [r4, #180]	; 0xb4
    bf88:	cmp	r0, #0
    bf8c:	beq	bf94 <readstat_parse_sas7bdat+0x10c8>
    bf90:	bl	3ee0 <free@plt>
    bf94:	ldr	r0, [r4, #120]	; 0x78
    bf98:	cmp	r0, #0
    bf9c:	beq	bfa4 <readstat_parse_sas7bdat+0x10d8>
    bfa0:	bl	3ee0 <free@plt>
    bfa4:	ldr	r0, [r4, #124]	; 0x7c
    bfa8:	cmp	r0, #0
    bfac:	beq	bfb4 <readstat_parse_sas7bdat+0x10e8>
    bfb0:	bl	3ee0 <free@plt>
    bfb4:	ldr	r0, [r4, #208]	; 0xd0
    bfb8:	cmp	r0, #0
    bfbc:	beq	bfc4 <readstat_parse_sas7bdat+0x10f8>
    bfc0:	bl	3df0 <iconv_close@plt>
    bfc4:	mov	r0, r4
    bfc8:	bl	3ee0 <free@plt>
    bfcc:	cmp	r9, #0
    bfd0:	beq	bfdc <readstat_parse_sas7bdat+0x1110>
    bfd4:	mov	r0, r9
    bfd8:	bl	3ee0 <free@plt>
    bfdc:	mov	r0, sl
    bfe0:	add	sp, sp, #156	; 0x9c
    bfe4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bfe8:	ldr	fp, [sp, #32]
    bfec:	mov	r4, r9
    bff0:	ldr	r9, [sp, #40]	; 0x28
    bff4:	mov	sl, #10
    bff8:	b	be0c <readstat_parse_sas7bdat+0xf40>
    bffc:	ldr	fp, [sp, #32]
    c000:	mov	r4, r9
    c004:	ldr	r9, [sp, #40]	; 0x28
    c008:	mov	sl, #10
    c00c:	b	be0c <readstat_parse_sas7bdat+0xf40>
    c010:	ldr	fp, [sp, #32]
    c014:	mov	r4, r9
    c018:	ldr	r9, [sp, #40]	; 0x28
    c01c:	b	beac <readstat_parse_sas7bdat+0xfe0>
    c020:	mov	sl, #3
    c024:	ldr	r3, [fp, #4]
    c028:	ldr	r0, [fp, #20]
    c02c:	blx	r3
    c030:	b	c0b4 <readstat_parse_sas7bdat+0x11e8>
    c034:	mov	sl, #7
    c038:	b	c024 <readstat_parse_sas7bdat+0x1158>
    c03c:	mov	sl, #1
    c040:	ldr	r3, [fp, #4]
    c044:	ldr	r0, [fp, #20]
    c048:	blx	r3
    c04c:	ldr	r3, [r4, #24]
    c050:	cmp	r3, #0
    c054:	beq	c0b4 <readstat_parse_sas7bdat+0x11e8>
    c058:	add	r5, r4, #480	; 0x1e0
    c05c:	add	r5, r5, #1
    c060:	mov	r0, sl
    c064:	bl	3e68 <readstat_error_message@plt>
    c068:	mov	r7, r0
    c06c:	bl	4294 <__errno_location@plt>
    c070:	mov	r6, r0
    c074:	ldr	r0, [r0]
    c078:	bl	4168 <strerror@plt>
    c07c:	ldr	r3, [r6]
    c080:	str	r3, [sp, #8]
    c084:	str	r0, [sp, #4]
    c088:	str	sl, [sp]
    c08c:	mov	r3, r7
    c090:	ldr	r2, [pc, #-668]	; bdfc <readstat_parse_sas7bdat+0xf30>
    c094:	add	r2, pc, r2
    c098:	mov	r1, #2048	; 0x800
    c09c:	mov	r0, r5
    c0a0:	bl	42ac <snprintf@plt>
    c0a4:	ldr	r3, [r4, #24]
    c0a8:	ldr	r1, [sp, #48]	; 0x30
    c0ac:	mov	r0, r5
    c0b0:	blx	r3
    c0b4:	cmp	r4, #0
    c0b8:	beq	bfcc <readstat_parse_sas7bdat+0x1100>
    c0bc:	ldr	r3, [r4, #160]	; 0xa0
    c0c0:	cmp	r3, #0
    c0c4:	beq	c104 <readstat_parse_sas7bdat+0x1238>
    c0c8:	ldr	r3, [r4, #152]	; 0x98
    c0cc:	cmp	r3, #0
    c0d0:	ble	c0f4 <readstat_parse_sas7bdat+0x1228>
    c0d4:	mov	r5, #0
    c0d8:	ldr	r3, [r4, #160]	; 0xa0
    c0dc:	ldr	r0, [r3, r5, lsl #2]
    c0e0:	bl	3ee0 <free@plt>
    c0e4:	add	r5, r5, #1
    c0e8:	ldr	r3, [r4, #152]	; 0x98
    c0ec:	cmp	r5, r3
    c0f0:	blt	c0d8 <readstat_parse_sas7bdat+0x120c>
    c0f4:	ldr	r0, [r4, #160]	; 0xa0
    c0f8:	bl	3ee0 <free@plt>
    c0fc:	ldr	r0, [r4, #156]	; 0x9c
    c100:	bl	3ee0 <free@plt>
    c104:	ldr	r3, [r4, #196]	; 0xc4
    c108:	cmp	r3, #0
    c10c:	beq	bf74 <readstat_parse_sas7bdat+0x10a8>
    c110:	ldr	r3, [r4, #80]	; 0x50
    c114:	cmp	r3, #0
    c118:	beq	bf6c <readstat_parse_sas7bdat+0x10a0>
    c11c:	mov	r5, #0
    c120:	b	bf54 <readstat_parse_sas7bdat+0x1088>
    c124:	ldr	r5, [r4, #56]	; 0x38
    c128:	ldrd	r6, [r4, #104]	; 0x68
    c12c:	subs	r6, r6, #1
    c130:	sbc	r7, r7, #0
    c134:	b	b41c <readstat_parse_sas7bdat+0x550>
    c138:	ldr	r9, [sp, #40]	; 0x28
    c13c:	mov	sl, #2
    c140:	ldr	r3, [fp, #4]
    c144:	ldr	r0, [fp, #20]
    c148:	blx	r3
    c14c:	b	c04c <readstat_parse_sas7bdat+0x1180>
    c150:	ldr	r9, [sp, #40]	; 0x28
    c154:	mov	sl, #2
    c158:	b	c140 <readstat_parse_sas7bdat+0x1274>
    c15c:	mov	sl, #2
    c160:	b	b4a4 <readstat_parse_sas7bdat+0x5d8>
    c164:	mov	sl, #2
    c168:	b	b4a4 <readstat_parse_sas7bdat+0x5d8>
    c16c:	ldr	fp, [sp, #32]
    c170:	mov	r4, r9
    c174:	ldr	r9, [sp, #40]	; 0x28
    c178:	ldr	r3, [fp, #4]
    c17c:	ldr	r0, [fp, #20]
    c180:	blx	r3
    c184:	mov	sl, #2
    c188:	b	c04c <readstat_parse_sas7bdat+0x1180>

0000c18c <sas7bdat_subheader_type>:
    c18c:	bic	r0, r0, #2
    c190:	cmn	r0, #3
    c194:	beq	c1a8 <sas7bdat_subheader_type+0x1c>
    c198:	cmn	r0, #4
    c19c:	movne	r0, #0
    c1a0:	moveq	r0, #1
    c1a4:	bx	lr
    c1a8:	mov	r0, #1
    c1ac:	bx	lr

0000c1b0 <sas7bdat_variable_width>:
    c1b0:	cmp	r0, #0
    c1b4:	moveq	r0, r1
    c1b8:	movne	r0, #8
    c1bc:	bx	lr

0000c1c0 <sas7bdat_metadata_ok>:
    c1c0:	ldr	r0, [r0, #16]
    c1c4:	cmp	r0, #1
    c1c8:	movhi	r0, #6
    c1cc:	movls	r0, #0
    c1d0:	bx	lr

0000c1d4 <sas7bdat_write_double>:
    c1d4:	sub	sp, sp, #8
    c1d8:	mov	r2, r0
    c1dc:	add	r3, sp, #8
    c1e0:	vstmdb	r3!, {d0}
    c1e4:	ldm	r3!, {r0, r1}
    c1e8:	str	r0, [r2]
    c1ec:	str	r1, [r2, #4]
    c1f0:	mov	r0, #0
    c1f4:	add	sp, sp, #8
    c1f8:	bx	lr

0000c1fc <sas7bdat_subheader_init>:
    c1fc:	push	{r4, r5, r6, lr}
    c200:	mov	r6, r0
    c204:	mov	r5, r1
    c208:	mov	r1, #20
    c20c:	mov	r0, #1
    c210:	bl	3d78 <calloc@plt>
    c214:	mov	r4, r0
    c218:	str	r6, [r0]
    c21c:	str	r5, [r0, #8]
    c220:	mov	r1, r5
    c224:	mov	r0, #1
    c228:	bl	3d78 <calloc@plt>
    c22c:	str	r0, [r4, #4]
    c230:	mov	r0, r4
    c234:	pop	{r4, r5, r6, pc}

0000c238 <sas7bdat_subheader_free>:
    c238:	push	{r4, lr}
    c23c:	subs	r4, r0, #0
    c240:	popeq	{r4, pc}
    c244:	ldr	r0, [r4, #4]
    c248:	cmp	r0, #0
    c24c:	beq	c254 <sas7bdat_subheader_free+0x1c>
    c250:	bl	3ee0 <free@plt>
    c254:	mov	r0, r4
    c258:	bl	3ee0 <free@plt>
    c25c:	pop	{r4, pc}

0000c260 <sas7bdat_subheader_array_free>:
    c260:	push	{r4, r5, r6, lr}
    c264:	mov	r5, r0
    c268:	ldrd	r2, [r0]
    c26c:	cmp	r2, #1
    c270:	sbcs	r3, r3, #0
    c274:	blt	c2a0 <sas7bdat_subheader_array_free+0x40>
    c278:	mov	r4, #0
    c27c:	ldr	r3, [r5, #16]
    c280:	ldr	r0, [r3, r4, lsl #2]
    c284:	bl	c238 <sas7bdat_subheader_free>
    c288:	add	r4, r4, #1
    c28c:	asr	r1, r4, #31
    c290:	ldrd	r2, [r5]
    c294:	cmp	r4, r2
    c298:	sbcs	r3, r1, r3
    c29c:	blt	c27c <sas7bdat_subheader_array_free+0x1c>
    c2a0:	ldr	r0, [r5, #16]
    c2a4:	bl	3ee0 <free@plt>
    c2a8:	mov	r0, r5
    c2ac:	bl	3ee0 <free@plt>
    c2b0:	pop	{r4, r5, r6, pc}

0000c2b4 <sas7bdat_module_ctx_free>:
    c2b4:	push	{r4, lr}
    c2b8:	mov	r4, r0
    c2bc:	ldr	r0, [r0]
    c2c0:	bl	3ee0 <free@plt>
    c2c4:	ldr	r0, [r4, #4]
    c2c8:	bl	c260 <sas7bdat_subheader_array_free>
    c2cc:	mov	r0, r4
    c2d0:	bl	3ee0 <free@plt>
    c2d4:	pop	{r4, pc}

0000c2d8 <sas7bdat_make_text_ref>:
    c2d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c2dc:	sub	sp, sp, #12
    c2e0:	mov	r6, r0
    c2e4:	mov	r8, r1
    c2e8:	str	r2, [sp, #4]
    c2ec:	mov	r0, r2
    c2f0:	bl	4228 <strlen@plt>
    c2f4:	mov	r7, r0
    c2f8:	add	r5, r0, #3
    c2fc:	bic	r5, r5, #3
    c300:	ldr	r0, [r8, #8]
    c304:	ldrd	sl, [r8]
    c308:	sub	r3, sl, #-1073741823	; 0xc0000001
    c30c:	ldr	r4, [r0, r3, lsl #2]
    c310:	ldr	r3, [r4, #8]
    c314:	add	r3, r5, r3
    c318:	ldr	r2, [r4, #4]
    c31c:	cmp	r3, r2
    c320:	bhi	c368 <sas7bdat_make_text_ref+0x90>
    c324:	ldrh	r9, [r4, #16]
    c328:	ldr	r8, [r4, #8]
    c32c:	ldr	r0, [r4]
    c330:	mov	r2, r5
    c334:	ldr	r1, [sp, #4]
    c338:	add	r0, r0, r8
    c33c:	bl	42e8 <strncpy@plt>
    c340:	ldr	r3, [r4, #8]
    c344:	add	r5, r3, r5
    c348:	str	r5, [r4, #8]
    c34c:	strh	r9, [r6]
    c350:	add	r8, r8, #28
    c354:	strh	r8, [r6, #2]
    c358:	strh	r7, [r6, #4]
    c35c:	mov	r0, r6
    c360:	add	sp, sp, #12
    c364:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c368:	adds	sl, sl, #1
    c36c:	adc	fp, fp, #0
    c370:	strd	sl, [r8]
    c374:	lsl	r1, sl, #2
    c378:	bl	4018 <realloc@plt>
    c37c:	mov	sl, r0
    c380:	str	r0, [r8, #8]
    c384:	ldrd	r8, [r8]
    c388:	ldr	fp, [r4, #4]
    c38c:	mov	r1, #24
    c390:	mov	r0, #1
    c394:	bl	3d78 <calloc@plt>
    c398:	mov	r4, r0
    c39c:	mov	r0, fp
    c3a0:	bl	4138 <malloc@plt>
    c3a4:	str	r0, [r4]
    c3a8:	str	fp, [r4, #4]
    c3ac:	subs	r2, r8, #1
    c3b0:	sbc	r3, r9, #0
    c3b4:	strd	r2, [r4, #16]
    c3b8:	sub	r8, r8, #-1073741823	; 0xc0000001
    c3bc:	str	r4, [sl, r8, lsl #2]
    c3c0:	b	c324 <sas7bdat_make_text_ref+0x4c>

0000c3c4 <sas7bdat_write_string>:
    c3c4:	push	{r4, r5, r6, lr}
    c3c8:	mov	r6, r0
    c3cc:	mov	r4, r2
    c3d0:	mov	r0, r1
    c3d4:	bl	42f4 <readstat_variable_get_storage_width@plt>
    c3d8:	mov	r5, r0
    c3dc:	cmp	r4, #0
    c3e0:	beq	c408 <sas7bdat_write_string+0x44>
    c3e4:	ldrb	r3, [r4]
    c3e8:	cmp	r3, #0
    c3ec:	beq	c408 <sas7bdat_write_string+0x44>
    c3f0:	mov	r0, r4
    c3f4:	bl	4228 <strlen@plt>
    c3f8:	cmp	r5, r0
    c3fc:	bcs	c420 <sas7bdat_write_string+0x5c>
    c400:	mov	r0, #22
    c404:	pop	{r4, r5, r6, pc}
    c408:	mov	r2, r5
    c40c:	mov	r1, #0
    c410:	mov	r0, r6
    c414:	bl	42d0 <memset@plt>
    c418:	mov	r0, #0
    c41c:	pop	{r4, r5, r6, pc}
    c420:	mov	r2, r5
    c424:	mov	r1, r4
    c428:	mov	r0, r6
    c42c:	bl	42e8 <strncpy@plt>
    c430:	mov	r0, #0
    c434:	pop	{r4, r5, r6, pc}

0000c438 <sas7bdat_write_missing_string>:
    c438:	push	{r4, lr}
    c43c:	mov	r2, #0
    c440:	bl	c3c4 <sas7bdat_write_string>
    c444:	pop	{r4, pc}

0000c448 <sas7bdat_row_length>:
    c448:	push	{r4, r5, r6, r7, r8, lr}
    c44c:	ldr	r3, [r0, #28]
    c450:	cmp	r3, #0
    c454:	ble	c4a8 <sas7bdat_row_length+0x60>
    c458:	mov	r6, r0
    c45c:	mov	r7, #0
    c460:	mov	r4, r7
    c464:	mov	r1, r4
    c468:	mov	r0, r6
    c46c:	bl	43a8 <readstat_get_variable@plt>
    c470:	mov	r8, r0
    c474:	bl	4204 <readstat_variable_get_type@plt>
    c478:	mov	r5, r0
    c47c:	mov	r0, r8
    c480:	bl	42f4 <readstat_variable_get_storage_width@plt>
    c484:	cmp	r5, #0
    c488:	movne	r0, #8
    c48c:	add	r7, r7, r0
    c490:	add	r4, r4, #1
    c494:	ldr	r3, [r6, #28]
    c498:	cmp	r3, r4
    c49c:	bgt	c464 <sas7bdat_row_length+0x1c>
    c4a0:	mov	r0, r7
    c4a4:	pop	{r4, r5, r6, r7, r8, pc}
    c4a8:	mov	r7, #0
    c4ac:	b	c4a0 <sas7bdat_row_length+0x58>

0000c4b0 <sas7bdat_write_row>:
    c4b0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c4b4:	add	fp, sp, #36	; 0x24
    c4b8:	mov	r6, r1
    c4bc:	mov	r7, r2
    c4c0:	ldr	r9, [r0, #300]	; 0x12c
    c4c4:	ldr	r3, [r0, #16]
    c4c8:	cmp	r3, #0
    c4cc:	beq	c4e4 <sas7bdat_write_row+0x34>
    c4d0:	cmp	r3, #1
    c4d4:	movne	r0, #0
    c4d8:	beq	c5c0 <sas7bdat_write_row+0x110>
    c4dc:	sub	sp, fp, #36	; 0x24
    c4e0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c4e4:	mov	r8, r0
    c4e8:	ldr	sl, [r9]
    c4ec:	bl	c448 <sas7bdat_row_length>
    c4f0:	ldrd	r4, [sl, #40]	; 0x28
    c4f4:	mov	r2, r0
    c4f8:	mov	r3, #0
    c4fc:	ldrd	r0, [sl, #32]
    c500:	subs	r0, r0, r4
    c504:	sbc	r1, r1, r5
    c508:	bl	245ac <__aeabi_ldivmod>
    c50c:	mov	r4, r0
    c510:	mov	r1, r0
    c514:	ldr	r0, [r8, #84]	; 0x54
    c518:	bl	241b8 <__aeabi_idivmod>
    c51c:	cmp	r1, #0
    c520:	bne	c5ac <sas7bdat_write_row+0xfc>
    c524:	mov	r5, sp
    c528:	ldr	r1, [r9]
    c52c:	mov	r0, r8
    c530:	bl	44a4 <sas_fill_page@plt>
    c534:	cmp	r0, #0
    c538:	bne	c5a0 <sas7bdat_write_row+0xf0>
    c53c:	ldr	r3, [r8, #80]	; 0x50
    c540:	ldr	r2, [r8, #84]	; 0x54
    c544:	sub	r3, r3, r2
    c548:	cmp	r3, r4
    c54c:	movlt	r4, r3
    c550:	ldr	r2, [sl, #40]	; 0x28
    c554:	add	r3, r2, #7
    c558:	bic	r3, r3, #7
    c55c:	sub	sp, sp, r3
    c560:	mov	r1, #0
    c564:	mov	r0, sp
    c568:	bl	42d0 <memset@plt>
    c56c:	ldr	r3, [sl, #40]	; 0x28
    c570:	add	r3, sp, r3
    c574:	strh	r4, [r3, #-6]
    c578:	ldr	r3, [sl, #40]	; 0x28
    c57c:	add	r3, sp, r3
    c580:	mov	r2, #256	; 0x100
    c584:	strh	r2, [r3, #-8]
    c588:	ldr	r2, [sl, #40]	; 0x28
    c58c:	mov	r1, sp
    c590:	mov	r0, r8
    c594:	bl	4480 <readstat_write_bytes@plt>
    c598:	cmp	r0, #0
    c59c:	beq	c5a8 <sas7bdat_write_row+0xf8>
    c5a0:	mov	sp, r5
    c5a4:	b	c4dc <sas7bdat_write_row+0x2c>
    c5a8:	mov	sp, r5
    c5ac:	mov	r2, r7
    c5b0:	mov	r1, r6
    c5b4:	mov	r0, r8
    c5b8:	bl	4480 <readstat_write_bytes@plt>
    c5bc:	b	c4dc <sas7bdat_write_row+0x2c>
    c5c0:	mov	r1, r2
    c5c4:	mov	r0, r6
    c5c8:	bl	44b0 <sas_rle_compressed_len@plt>
    c5cc:	mov	r5, r0
    c5d0:	cmp	r7, r0
    c5d4:	bls	c620 <sas7bdat_write_row+0x170>
    c5d8:	mov	r1, r0
    c5dc:	mov	r0, #0
    c5e0:	bl	c1fc <sas7bdat_subheader_init>
    c5e4:	mov	r4, r0
    c5e8:	mov	r3, #1
    c5ec:	str	r3, [r0, #12]
    c5f0:	str	r3, [r0, #16]
    c5f4:	mov	r3, r7
    c5f8:	mov	r2, r6
    c5fc:	ldr	r1, [r0, #8]
    c600:	ldr	r0, [r0, #4]
    c604:	bl	4504 <sas_rle_compress@plt>
    c608:	cmp	r5, r0
    c60c:	beq	c648 <sas7bdat_write_row+0x198>
    c610:	mov	r0, r4
    c614:	bl	c238 <sas7bdat_subheader_free>
    c618:	mov	r0, #10
    c61c:	b	c4dc <sas7bdat_write_row+0x2c>
    c620:	mov	r1, r7
    c624:	mov	r0, #0
    c628:	bl	c1fc <sas7bdat_subheader_init>
    c62c:	mov	r4, r0
    c630:	mov	r3, #1
    c634:	str	r3, [r0, #12]
    c638:	mov	r2, r7
    c63c:	mov	r1, r6
    c640:	ldr	r0, [r0, #4]
    c644:	bl	3f40 <memcpy@plt>
    c648:	ldr	r1, [r9, #4]
    c64c:	ldr	r0, [r1, #16]
    c650:	ldrd	r2, [r1]
    c654:	adds	r6, r2, #1
    c658:	adc	r7, r3, #0
    c65c:	strd	r6, [r1]
    c660:	str	r4, [r0, r2, lsl #2]
    c664:	mov	r0, #0
    c668:	b	c4dc <sas7bdat_write_row+0x2c>

0000c66c <sas7bdat_write_missing_tagged>:
    c66c:	push	{r4, r5, lr}
    c670:	sub	sp, sp, #12
    c674:	mov	r5, r0
    c678:	mov	r4, r2
    c67c:	mov	r0, r2
    c680:	bl	4174 <sas_validate_tag@plt>
    c684:	subs	ip, r0, #0
    c688:	beq	c698 <sas7bdat_write_missing_tagged+0x2c>
    c68c:	mov	r0, ip
    c690:	add	sp, sp, #12
    c694:	pop	{r4, r5, pc}
    c698:	mov	r2, #0
    c69c:	ldr	r3, [pc, #44]	; c6d0 <sas7bdat_write_missing_tagged+0x64>
    c6a0:	lsl	r4, r4, #8
    c6a4:	bic	r1, r3, #65280	; 0xff00
    c6a8:	eor	r4, r4, #65280	; 0xff00
    c6ac:	orr	r3, r4, r1
    c6b0:	mov	r0, r2
    c6b4:	mov	r1, r3
    c6b8:	add	r3, sp, #8
    c6bc:	strd	r0, [r3, #-8]!
    c6c0:	ldm	r3!, {r0, r1}
    c6c4:	str	r0, [r5]
    c6c8:	str	r1, [r5, #4]
    c6cc:	b	c68c <sas7bdat_write_missing_tagged+0x20>
    c6d0:	.word	0x7ff80000

0000c6d4 <sas7bdat_write_int8>:
    c6d4:	sub	sp, sp, #8
    c6d8:	mov	ip, r0
    c6dc:	vmov	s15, r2
    c6e0:	vcvt.f64.s32	d7, s15
    c6e4:	add	r3, sp, #8
    c6e8:	vstmdb	r3!, {d7}
    c6ec:	ldm	r3!, {r0, r1}
    c6f0:	str	r0, [ip]
    c6f4:	str	r1, [ip, #4]
    c6f8:	mov	r0, #0
    c6fc:	add	sp, sp, #8
    c700:	bx	lr

0000c704 <sas7bdat_write_int16>:
    c704:	sub	sp, sp, #8
    c708:	mov	ip, r0
    c70c:	vmov	s15, r2
    c710:	vcvt.f64.s32	d7, s15
    c714:	add	r3, sp, #8
    c718:	vstmdb	r3!, {d7}
    c71c:	ldm	r3!, {r0, r1}
    c720:	str	r0, [ip]
    c724:	str	r1, [ip, #4]
    c728:	mov	r0, #0
    c72c:	add	sp, sp, #8
    c730:	bx	lr

0000c734 <sas7bdat_write_int32>:
    c734:	sub	sp, sp, #8
    c738:	mov	ip, r0
    c73c:	vmov	s15, r2
    c740:	vcvt.f64.s32	d7, s15
    c744:	add	r3, sp, #8
    c748:	vstmdb	r3!, {d7}
    c74c:	ldm	r3!, {r0, r1}
    c750:	str	r0, [ip]
    c754:	str	r1, [ip, #4]
    c758:	mov	r0, #0
    c75c:	add	sp, sp, #8
    c760:	bx	lr

0000c764 <sas7bdat_write_float>:
    c764:	sub	sp, sp, #8
    c768:	mov	r2, r0
    c76c:	vcvt.f64.f32	d0, s0
    c770:	add	r3, sp, #8
    c774:	vstmdb	r3!, {d0}
    c778:	ldm	r3!, {r0, r1}
    c77c:	str	r0, [r2]
    c780:	str	r1, [r2, #4]
    c784:	mov	r0, #0
    c788:	add	sp, sp, #8
    c78c:	bx	lr

0000c790 <sas7bdat_write_missing_numeric>:
    c790:	sub	sp, sp, #8
    c794:	mov	ip, r0
    c798:	mov	r2, #0
    c79c:	ldr	r3, [pc, #44]	; c7d0 <sas7bdat_write_missing_numeric+0x40>
    c7a0:	bic	r1, r3, #11776	; 0x2e00
    c7a4:	orr	r3, r1, #53504	; 0xd100
    c7a8:	mov	r0, r2
    c7ac:	mov	r1, r3
    c7b0:	add	r3, sp, #8
    c7b4:	strd	r0, [r3, #-8]!
    c7b8:	ldm	r3!, {r0, r1}
    c7bc:	str	r0, [ip]
    c7c0:	str	r1, [ip, #4]
    c7c4:	mov	r0, #0
    c7c8:	add	sp, sp, #8
    c7cc:	bx	lr
    c7d0:	.word	0x7ff80000

0000c7d4 <sas7bdat_emit_header_and_meta_pages>:
    c7d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c7d8:	sub	sp, sp, #388	; 0x184
    c7dc:	str	r0, [sp, #180]	; 0xb4
    c7e0:	ldr	r9, [pc, #1192]	; cc90 <sas7bdat_emit_header_and_meta_pages+0x4bc>
    c7e4:	add	r9, pc, r9
    c7e8:	ldr	sl, [r0, #300]	; 0x12c
    c7ec:	bl	c448 <sas7bdat_row_length>
    c7f0:	cmp	r0, #0
    c7f4:	moveq	r3, #36	; 0x24
    c7f8:	streq	r3, [sp, #192]	; 0xc0
    c7fc:	bne	c80c <sas7bdat_emit_header_and_meta_pages+0x38>
    c800:	ldr	r0, [sp, #192]	; 0xc0
    c804:	add	sp, sp, #388	; 0x184
    c808:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c80c:	ldr	r0, [sp, #180]	; 0xb4
    c810:	ldr	r3, [r0, #16]
    c814:	cmp	r3, #0
    c818:	bne	c850 <sas7bdat_emit_header_and_meta_pages+0x7c>
    c81c:	ldr	r4, [sl]
    c820:	bl	c448 <sas7bdat_row_length>
    c824:	ldrd	r6, [r4, #32]
    c828:	ldrd	r4, [r4, #40]	; 0x28
    c82c:	mov	r2, r0
    c830:	mov	r3, #0
    c834:	subs	r0, r6, r4
    c838:	sbc	r1, r7, r5
    c83c:	bl	245ac <__aeabi_ldivmod>
    c840:	cmp	r0, #0
    c844:	moveq	r3, #35	; 0x23
    c848:	streq	r3, [sp, #192]	; 0xc0
    c84c:	beq	c800 <sas7bdat_emit_header_and_meta_pages+0x2c>
    c850:	ldr	fp, [sl]
    c854:	ldr	r3, [sp, #180]	; 0xb4
    c858:	ldr	r2, [r3, #300]	; 0x12c
    c85c:	ldr	r3, [r2]
    c860:	ldr	r2, [r2, #4]
    c864:	ldr	lr, [r3, #32]
    c868:	ldr	r1, [r3, #40]	; 0x28
    c86c:	sub	lr, lr, r1
    c870:	ldr	ip, [r3, #48]	; 0x30
    c874:	ldr	r3, [r2]
    c878:	subs	r1, r3, #1
    c87c:	bmi	ca30 <sas7bdat_emit_header_and_meta_pages+0x25c>
    c880:	ldr	r0, [r2, #16]
    c884:	add	r0, r0, r3, lsl #2
    c888:	mov	r2, lr
    c88c:	mov	r8, #1
    c890:	ldr	r3, [r0, #-4]!
    c894:	ldr	r3, [r3, #8]
    c898:	add	r3, ip, r3
    c89c:	cmp	r3, r2
    c8a0:	addhi	r8, r8, #1
    c8a4:	movhi	r2, lr
    c8a8:	sub	r2, r2, r3
    c8ac:	subs	r1, r1, #1
    c8b0:	bpl	c890 <sas7bdat_emit_header_and_meta_pages+0xbc>
    c8b4:	ldr	r2, [sp, #180]	; 0xb4
    c8b8:	ldr	r3, [r2, #16]
    c8bc:	cmp	r3, #1
    c8c0:	moveq	r0, #0
    c8c4:	beq	c904 <sas7bdat_emit_header_and_meta_pages+0x130>
    c8c8:	mov	r0, r2
    c8cc:	bl	c448 <sas7bdat_row_length>
    c8d0:	ldrd	r6, [fp, #32]
    c8d4:	ldrd	r4, [fp, #40]	; 0x28
    c8d8:	mov	r2, r0
    c8dc:	mov	r3, #0
    c8e0:	subs	r0, r6, r4
    c8e4:	sbc	r1, r7, r5
    c8e8:	bl	245ac <__aeabi_ldivmod>
    c8ec:	mov	r1, r0
    c8f0:	sub	r0, r0, #1
    c8f4:	ldr	r3, [sp, #180]	; 0xb4
    c8f8:	ldr	r3, [r3, #80]	; 0x50
    c8fc:	add	r0, r0, r3
    c900:	bl	23f98 <__divsi3>
    c904:	add	r8, r0, r8
    c908:	mov	r2, r8
    c90c:	asr	r3, r8, #31
    c910:	strd	r2, [fp, #56]	; 0x38
    c914:	ldr	r4, [sl]
    c918:	mov	r2, #164	; 0xa4
    c91c:	mov	r1, #0
    c920:	add	r0, sp, #216	; 0xd8
    c924:	bl	42d0 <memset@plt>
    c928:	ldr	r3, [r4, #4]
    c92c:	cmp	r3, #0
    c930:	movne	r3, #51	; 0x33
    c934:	moveq	r3, #34	; 0x22
    c938:	strb	r3, [sp, #248]	; 0xf8
    c93c:	mov	r3, #34	; 0x22
    c940:	strb	r3, [sp, #251]	; 0xfb
    c944:	bl	3ed4 <machine_is_little_endian@plt>
    c948:	adds	r0, r0, #0
    c94c:	movne	r0, #1
    c950:	strb	r0, [sp, #253]	; 0xfd
    c954:	mov	r3, #49	; 0x31
    c958:	strb	r3, [sp, #255]	; 0xff
    c95c:	mov	r3, #20
    c960:	strb	r3, [sp, #286]	; 0x11e
    c964:	ldr	r3, [pc, #808]	; cc94 <sas7bdat_emit_header_and_meta_pages+0x4c0>
    c968:	add	r3, pc, r3
    c96c:	ldm	r3, {r0, r1}
    c970:	add	r2, sp, #300	; 0x12c
    c974:	stm	r2, {r0, r1}
    c978:	add	r3, r3, #12
    c97c:	ldm	r3, {r0, r1}
    c980:	add	r3, sp, #372	; 0x174
    c984:	stm	r3, {r0, r1}
    c988:	ldr	r3, [pc, #776]	; cc98 <sas7bdat_emit_header_and_meta_pages+0x4c4>
    c98c:	ldr	lr, [r9, r3]
    c990:	add	ip, sp, #216	; 0xd8
    c994:	ldr	r0, [lr]
    c998:	ldr	r1, [lr, #4]
    c99c:	ldr	r2, [lr, #8]
    c9a0:	ldr	r3, [lr, #12]
    c9a4:	stmia	ip!, {r0, r1, r2, r3}
    c9a8:	ldr	r0, [lr, #16]
    c9ac:	ldr	r1, [lr, #20]
    c9b0:	ldr	r2, [lr, #24]
    c9b4:	ldr	r3, [lr, #28]
    c9b8:	stmia	ip!, {r0, r1, r2, r3}
    c9bc:	mov	r2, #156	; 0x9c
    c9c0:	add	r1, sp, #224	; 0xe0
    c9c4:	mov	r0, sp
    c9c8:	bl	3f40 <memcpy@plt>
    c9cc:	add	r3, sp, #216	; 0xd8
    c9d0:	ldm	r3, {r2, r3}
    c9d4:	mov	r1, r4
    c9d8:	ldr	r0, [sp, #180]	; 0xb4
    c9dc:	bl	40e4 <sas_write_header@plt>
    c9e0:	subs	r3, r0, #0
    c9e4:	str	r3, [sp, #192]	; 0xc0
    c9e8:	bne	c800 <sas7bdat_emit_header_and_meta_pages+0x2c>
    c9ec:	ldr	r3, [sp, #180]	; 0xb4
    c9f0:	ldr	r3, [r3, #300]	; 0x12c
    c9f4:	ldr	fp, [r3]
    c9f8:	ldr	sl, [r3, #4]
    c9fc:	ldr	r0, [fp, #32]
    ca00:	bl	4138 <malloc@plt>
    ca04:	str	r0, [sp, #168]	; 0xa8
    ca08:	mov	r2, #0
    ca0c:	mov	r3, #0
    ca10:	strd	r2, [sp, #160]	; 0xa0
    ca14:	add	r3, sp, #200	; 0xc8
    ca18:	str	r3, [sp, #184]	; 0xb8
    ca1c:	add	r3, sp, #208	; 0xd0
    ca20:	str	r3, [sp, #188]	; 0xbc
    ca24:	add	r3, sp, #216	; 0xd8
    ca28:	str	r3, [sp, #196]	; 0xc4
    ca2c:	b	cbec <sas7bdat_emit_header_and_meta_pages+0x418>
    ca30:	mov	r8, #1
    ca34:	b	c8b4 <sas7bdat_emit_header_and_meta_pages+0xe0>
    ca38:	sub	r3, r6, r1
    ca3c:	str	r3, [sp, #200]	; 0xc8
    ca40:	mov	r3, #0
    ca44:	str	r3, [sp, #204]	; 0xcc
    ca48:	str	r1, [sp, #208]	; 0xd0
    ca4c:	str	r3, [sp, #212]	; 0xd4
    ca50:	ldr	r3, [sp, #184]	; 0xb8
    ca54:	ldm	r3!, {r0, r1}
    ca58:	str	r0, [r5]
    ca5c:	str	r1, [r5, #4]
    ca60:	ldr	r3, [sp, #188]	; 0xbc
    ca64:	ldm	r3!, {r0, r1}
    ca68:	str	r0, [r5, #8]
    ca6c:	str	r1, [r5, #12]
    ca70:	ldr	r3, [r4, #12]
    ca74:	cmp	r3, #0
    ca78:	beq	ca9c <sas7bdat_emit_header_and_meta_pages+0x2c8>
    ca7c:	ldr	r3, [r4, #16]
    ca80:	cmp	r3, #0
    ca84:	moveq	r3, #0
    ca88:	movne	r3, #4
    ca8c:	strb	r3, [r5, #16]
    ca90:	mov	r3, #1
    ca94:	strb	r3, [r5, #17]
    ca98:	b	caf0 <sas7bdat_emit_header_and_meta_pages+0x31c>
    ca9c:	ldr	r0, [r4]
    caa0:	bl	c18c <sas7bdat_subheader_type>
    caa4:	strb	r0, [r5, #17]
    caa8:	cmp	r7, #-16777216	; 0xff000000
    caac:	ldrcc	r3, [r4, #4]
    cab0:	strcc	r7, [r3]
    cab4:	bcc	caf0 <sas7bdat_emit_header_and_meta_pages+0x31c>
    cab8:	mov	r2, r7
    cabc:	asr	r3, r7, #31
    cac0:	strd	r2, [sp, #216]	; 0xd8
    cac4:	ldr	r2, [r4, #4]
    cac8:	ldr	r3, [sp, #196]	; 0xc4
    cacc:	ldm	r3!, {r0, r1}
    cad0:	str	r0, [r2]
    cad4:	str	r1, [r2, #4]
    cad8:	b	caf0 <sas7bdat_emit_header_and_meta_pages+0x31c>
    cadc:	ldr	r0, [r4]
    cae0:	bl	c18c <sas7bdat_subheader_type>
    cae4:	strb	r0, [r5, #9]
    cae8:	ldr	r3, [r4, #4]
    caec:	str	r7, [r3]
    caf0:	ldr	r3, [sp, #172]	; 0xac
    caf4:	add	r7, r3, r5
    caf8:	ldr	r2, [r4, #8]
    cafc:	sub	r6, r6, r2
    cb00:	ldr	r1, [r4, #4]
    cb04:	ldr	r3, [sp, #168]	; 0xa8
    cb08:	add	r0, r3, r6
    cb0c:	bl	3f40 <memcpy@plt>
    cb10:	adds	r8, r8, #1
    cb14:	adc	r9, r9, #0
    cb18:	ldr	r3, [sp, #160]	; 0xa0
    cb1c:	sub	r0, r8, r3
    cb20:	sxth	r0, r0
    cb24:	ldrd	r2, [sl]
    cb28:	cmp	r8, r2
    cb2c:	sbcs	r3, r9, r3
    cb30:	bge	cbb0 <sas7bdat_emit_header_and_meta_pages+0x3dc>
    cb34:	ldr	r2, [sl, #16]
    cb38:	ldr	r4, [r2, r8, lsl #2]
    cb3c:	ldr	r1, [r4, #8]
    cb40:	ldr	r3, [sp, #176]	; 0xb0
    cb44:	add	r5, r5, r3
    cb48:	add	r3, r3, r1
    cb4c:	sub	r7, r6, r7
    cb50:	cmp	r3, r7
    cb54:	bhi	cba0 <sas7bdat_emit_header_and_meta_pages+0x3cc>
    cb58:	ldr	r7, [r4]
    cb5c:	ldr	r3, [fp, #4]
    cb60:	cmp	r3, #0
    cb64:	bne	ca38 <sas7bdat_emit_header_and_meta_pages+0x264>
    cb68:	sub	r3, r6, r1
    cb6c:	str	r3, [r5]
    cb70:	str	r1, [r5, #4]
    cb74:	ldr	r3, [r4, #12]
    cb78:	cmp	r3, #0
    cb7c:	beq	cadc <sas7bdat_emit_header_and_meta_pages+0x308>
    cb80:	ldr	r3, [r4, #16]
    cb84:	cmp	r3, #0
    cb88:	moveq	r3, #0
    cb8c:	movne	r3, #4
    cb90:	strb	r3, [r5, #8]
    cb94:	mov	r3, #1
    cb98:	strb	r3, [r5, #9]
    cb9c:	b	caf0 <sas7bdat_emit_header_and_meta_pages+0x31c>
    cba0:	strd	r8, [sp, #160]	; 0xa0
    cba4:	b	cbb4 <sas7bdat_emit_header_and_meta_pages+0x3e0>
    cba8:	mov	r0, #0
    cbac:	b	cbb4 <sas7bdat_emit_header_and_meta_pages+0x3e0>
    cbb0:	strd	r8, [sp, #160]	; 0xa0
    cbb4:	ldr	r3, [fp, #4]
    cbb8:	cmp	r3, #0
    cbbc:	uxth	r0, r0
    cbc0:	ldr	r3, [sp, #168]	; 0xa8
    cbc4:	strhne	r0, [r3, #34]	; 0x22
    cbc8:	strhne	r0, [r3, #36]	; 0x24
    cbcc:	strheq	r0, [r3, #18]
    cbd0:	strheq	r0, [r3, #20]
    cbd4:	ldr	r2, [fp, #32]
    cbd8:	ldr	r1, [sp, #168]	; 0xa8
    cbdc:	ldr	r0, [sp, #180]	; 0xb4
    cbe0:	bl	4480 <readstat_write_bytes@plt>
    cbe4:	cmp	r0, #0
    cbe8:	bne	cc88 <sas7bdat_emit_header_and_meta_pages+0x4b4>
    cbec:	ldrd	r2, [sl]
    cbf0:	ldrd	r0, [sp, #160]	; 0xa0
    cbf4:	cmp	r0, r2
    cbf8:	sbcs	r3, r1, r3
    cbfc:	bge	cc7c <sas7bdat_emit_header_and_meta_pages+0x4a8>
    cc00:	ldr	r2, [fp, #32]
    cc04:	mov	r1, #0
    cc08:	ldr	r4, [sp, #168]	; 0xa8
    cc0c:	mov	r0, r4
    cc10:	bl	42d0 <memset@plt>
    cc14:	ldr	r6, [fp, #32]
    cc18:	ldr	r5, [fp, #40]	; 0x28
    cc1c:	ldr	ip, [fp, #48]	; 0x30
    cc20:	str	ip, [sp, #176]	; 0xb0
    cc24:	mov	r0, r4
    cc28:	add	r3, r4, r5
    cc2c:	mov	r2, #0
    cc30:	strh	r2, [r3, #-8]
    cc34:	ldrd	r8, [sp, #160]	; 0xa0
    cc38:	ldr	r2, [sl, #16]
    cc3c:	ldr	r4, [r2, r8, lsl #2]
    cc40:	ldr	r1, [r4, #8]
    cc44:	add	r2, ip, r1
    cc48:	sub	r3, r6, r5
    cc4c:	cmp	r2, r3
    cc50:	bhi	cc74 <sas7bdat_emit_header_and_meta_pages+0x4a0>
    cc54:	ldrd	r2, [sl]
    cc58:	cmp	r8, r2
    cc5c:	sbcs	r3, r9, r3
    cc60:	bge	cba8 <sas7bdat_emit_header_and_meta_pages+0x3d4>
    cc64:	add	r5, r0, r5
    cc68:	sub	r3, ip, r0
    cc6c:	str	r3, [sp, #172]	; 0xac
    cc70:	b	cb58 <sas7bdat_emit_header_and_meta_pages+0x384>
    cc74:	mov	r3, #35	; 0x23
    cc78:	str	r3, [sp, #192]	; 0xc0
    cc7c:	ldr	r0, [sp, #168]	; 0xa8
    cc80:	bl	3ee0 <free@plt>
    cc84:	b	c800 <sas7bdat_emit_header_and_meta_pages+0x2c>
    cc88:	str	r0, [sp, #192]	; 0xc0
    cc8c:	b	cc7c <sas7bdat_emit_header_and_meta_pages+0x4a8>
    cc90:	.word	0x00038814
    cc94:	.word	0x00018a74
    cc98:	.word	0x000002f4

0000cc9c <sas7bdat_end_data>:
    cc9c:	push	{r4, lr}
    cca0:	ldr	r3, [r0, #16]
    cca4:	cmp	r3, #1
    cca8:	beq	ccbc <sas7bdat_end_data+0x20>
    ccac:	ldr	r3, [r0, #300]	; 0x12c
    ccb0:	ldr	r1, [r3]
    ccb4:	bl	44a4 <sas_fill_page@plt>
    ccb8:	pop	{r4, pc}
    ccbc:	bl	c7d4 <sas7bdat_emit_header_and_meta_pages>
    ccc0:	pop	{r4, pc}

0000ccc4 <sas7bdat_begin_data>:
    ccc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ccc8:	sub	sp, sp, #76	; 0x4c
    cccc:	mov	fp, r0
    ccd0:	mov	r1, #8
    ccd4:	mov	r0, #1
    ccd8:	bl	3d78 <calloc@plt>
    ccdc:	str	r0, [sp, #20]
    cce0:	ldr	r1, [fp, #12]
    cce4:	mov	r0, fp
    cce8:	bl	4378 <sas_header_info_init@plt>
    ccec:	mov	sl, r0
    ccf0:	mov	r0, fp
    ccf4:	bl	c448 <sas7bdat_row_length>
    ccf8:	ldr	r1, [sl, #40]	; 0x28
    ccfc:	mov	r2, r0
    cd00:	mov	r3, #0
    cd04:	strd	r2, [sp]
    cd08:	b	cd88 <sas7bdat_begin_data+0xc4>
    cd0c:	ldrd	r4, [sl, #48]	; 0x30
    cd10:	ldrd	r6, [sp]
    cd14:	adds	r6, r6, r4
    cd18:	adc	r7, r7, r5
    cd1c:	mov	r4, r6
    cd20:	mov	r5, r7
    cd24:	mov	r7, #0
    cd28:	cmp	ip, r4
    cd2c:	sbcs	lr, r7, r5
    cd30:	bge	cdb4 <sas7bdat_begin_data+0xf0>
    cd34:	b	cd7c <sas7bdat_begin_data+0xb8>
    cd38:	ldrd	r8, [sl, #48]	; 0x30
    cd3c:	ldr	ip, [fp, #28]
    cd40:	lsl	ip, ip, #3
    cd44:	add	ip, ip, #28
    cd48:	adds	r4, r8, ip
    cd4c:	adc	r5, r9, #0
    cd50:	cmp	r6, r4
    cd54:	sbcs	ip, r7, r5
    cd58:	blt	cd7c <sas7bdat_begin_data+0xb8>
    cd5c:	ldr	ip, [fp, #28]
    cd60:	lsl	ip, ip, #4
    cd64:	add	ip, ip, #28
    cd68:	adds	r8, r8, ip
    cd6c:	adc	r9, r9, #0
    cd70:	cmp	r6, r8
    cd74:	sbcs	ip, r7, r9
    cd78:	bge	ce00 <sas7bdat_begin_data+0x13c>
    cd7c:	adds	r2, r2, r2
    cd80:	adc	r3, r3, r3
    cd84:	strd	r2, [sl, #32]
    cd88:	ldrd	r2, [sl, #32]
    cd8c:	sub	ip, r2, r1
    cd90:	ldr	lr, [fp, #16]
    cd94:	clz	r4, lr
    cd98:	lsr	r4, r4, #5
    cd9c:	cmp	r0, ip
    cda0:	movls	r4, #0
    cda4:	cmp	r4, #0
    cda8:	bne	cd7c <sas7bdat_begin_data+0xb8>
    cdac:	cmp	lr, #1
    cdb0:	beq	cd0c <sas7bdat_begin_data+0x48>
    cdb4:	mov	r6, ip
    cdb8:	mov	r7, #0
    cdbc:	ldr	ip, [sl, #4]
    cdc0:	cmp	ip, #0
    cdc4:	bne	cd38 <sas7bdat_begin_data+0x74>
    cdc8:	ldrd	r8, [sl, #48]	; 0x30
    cdcc:	ldr	ip, [fp, #28]
    cdd0:	lsl	ip, ip, #3
    cdd4:	add	ip, ip, #20
    cdd8:	adds	r4, r8, ip
    cddc:	adc	r5, r9, #0
    cde0:	cmp	r6, r4
    cde4:	sbcs	ip, r7, r5
    cde8:	blt	cd7c <sas7bdat_begin_data+0xb8>
    cdec:	ldr	ip, [fp, #28]
    cdf0:	add	ip, ip, ip, lsl #1
    cdf4:	lsl	ip, ip, #2
    cdf8:	add	ip, ip, #20
    cdfc:	b	cd68 <sas7bdat_begin_data+0xa4>
    ce00:	ldr	r3, [sp, #20]
    ce04:	str	sl, [r3]
    ce08:	mov	r1, #16
    ce0c:	mov	r0, #1
    ce10:	bl	3d78 <calloc@plt>
    ce14:	mov	r9, r0
    ce18:	mov	r2, #1
    ce1c:	mov	r3, #0
    ce20:	strd	r2, [r0]
    ce24:	mov	r0, #4
    ce28:	bl	4138 <malloc@plt>
    ce2c:	mov	r5, r0
    ce30:	str	r0, [r9, #8]
    ce34:	ldr	r4, [sl, #32]
    ce38:	ldr	r3, [sl, #40]	; 0x28
    ce3c:	sub	r4, r4, r3
    ce40:	ldr	r3, [sl, #48]	; 0x30
    ce44:	sub	r4, r4, r3
    ce48:	ldr	r3, [sl, #4]
    ce4c:	cmp	r3, #0
    ce50:	movne	r3, #8
    ce54:	moveq	r3, #4
    ce58:	sub	r4, r4, #28
    ce5c:	sub	r4, r4, r3
    ce60:	mov	r1, #24
    ce64:	mov	r0, #1
    ce68:	bl	3d78 <calloc@plt>
    ce6c:	mov	r6, r0
    ce70:	mov	r0, r4
    ce74:	bl	4138 <malloc@plt>
    ce78:	str	r0, [r6]
    ce7c:	str	r4, [r6, #4]
    ce80:	mov	r2, #0
    ce84:	mov	r3, #0
    ce88:	strd	r2, [r6, #16]
    ce8c:	str	r6, [r5]
    ce90:	mov	r1, #24
    ce94:	mov	r0, #1
    ce98:	bl	3d78 <calloc@plt>
    ce9c:	mov	r4, r0
    cea0:	str	r0, [sp, #8]
    cea4:	ldr	r6, [fp, #28]
    cea8:	add	r0, r6, #4
    ceac:	mov	r2, r0
    ceb0:	asr	r3, r0, #31
    ceb4:	strd	r2, [r4]
    ceb8:	mov	r1, #4
    cebc:	bl	3d78 <calloc@plt>
    cec0:	str	r0, [r4, #16]
    cec4:	ldr	r3, [sl, #4]
    cec8:	cmp	r3, #0
    cecc:	lsl	r6, r6, #3
    ced0:	addne	r6, r6, #28
    ced4:	movne	r4, #8
    ced8:	addeq	r6, r6, #20
    cedc:	moveq	r4, #4
    cee0:	mov	r1, r4
    cee4:	mov	r0, r6
    cee8:	bl	43e4 <sas_subheader_remainder@plt>
    ceec:	mov	r5, r0
    cef0:	mov	r1, r6
    cef4:	mvn	r0, #0
    cef8:	bl	c1fc <sas7bdat_subheader_init>
    cefc:	str	r0, [sp, #32]
    cf00:	ldr	r3, [r0, #4]
    cf04:	strh	r5, [r3, r4]
    cf08:	add	r4, r4, #8
    cf0c:	ldr	r3, [r0, #4]
    cf10:	add	r4, r3, r4
    cf14:	ldr	r6, [fp, #28]
    cf18:	cmp	r6, #0
    cf1c:	ble	cf74 <sas7bdat_begin_data+0x2b0>
    cf20:	mov	r5, #0
    cf24:	add	r7, sp, #64	; 0x40
    cf28:	mov	r1, r5
    cf2c:	mov	r0, fp
    cf30:	bl	43a8 <readstat_get_variable@plt>
    cf34:	bl	4390 <readstat_variable_get_name@plt>
    cf38:	mov	r2, r0
    cf3c:	mov	r1, r9
    cf40:	mov	r0, r7
    cf44:	bl	c2d8 <sas7bdat_make_text_ref>
    cf48:	ldrh	r3, [sp, #64]	; 0x40
    cf4c:	strh	r3, [r4]
    cf50:	ldrh	r3, [sp, #66]	; 0x42
    cf54:	strh	r3, [r4, #2]
    cf58:	ldrh	r3, [sp, #68]	; 0x44
    cf5c:	strh	r3, [r4, #4]
    cf60:	add	r4, r4, #8
    cf64:	add	r5, r5, #1
    cf68:	ldr	r6, [fp, #28]
    cf6c:	cmp	r5, r6
    cf70:	blt	cf28 <sas7bdat_begin_data+0x264>
    cf74:	ldr	r3, [sl, #4]
    cf78:	cmp	r3, #0
    cf7c:	lslne	r6, r6, #4
    cf80:	addne	r6, r6, #28
    cf84:	movne	r4, #8
    cf88:	addeq	r6, r6, r6, lsl #1
    cf8c:	lsleq	r6, r6, #2
    cf90:	addeq	r6, r6, #20
    cf94:	moveq	r4, #4
    cf98:	mov	r1, r4
    cf9c:	mov	r0, r6
    cfa0:	bl	43e4 <sas_subheader_remainder@plt>
    cfa4:	mov	r5, r0
    cfa8:	mov	r1, r6
    cfac:	mvn	r0, #3
    cfb0:	bl	c1fc <sas7bdat_subheader_init>
    cfb4:	str	r0, [sp, #28]
    cfb8:	ldr	r3, [r0, #4]
    cfbc:	strh	r5, [r3, r4]
    cfc0:	add	r4, r4, #8
    cfc4:	ldr	r3, [r0, #4]
    cfc8:	add	r4, r3, r4
    cfcc:	mov	r2, #0
    cfd0:	mov	r3, #0
    cfd4:	strd	r2, [sp, #64]	; 0x40
    cfd8:	ldr	r3, [fp, #28]
    cfdc:	cmp	r3, #0
    cfe0:	ble	d0ac <sas7bdat_begin_data+0x3e8>
    cfe4:	mov	r5, #0
    cfe8:	add	r3, sp, #64	; 0x40
    cfec:	str	r3, [sp]
    cff0:	mov	r7, #1
    cff4:	str	r9, [sp, #12]
    cff8:	b	d028 <sas7bdat_begin_data+0x364>
    cffc:	str	r0, [r4]
    d000:	strh	r6, [r4, #4]
    d004:	ldrd	r2, [sp, #64]	; 0x40
    d008:	adds	r2, r2, r0
    d00c:	adc	r3, r3, #0
    d010:	strd	r2, [sp, #64]	; 0x40
    d014:	add	r4, r4, #8
    d018:	add	r5, r5, #1
    d01c:	ldr	r3, [fp, #28]
    d020:	cmp	r5, r3
    d024:	bge	d0a8 <sas7bdat_begin_data+0x3e4>
    d028:	mov	r1, r5
    d02c:	mov	r0, fp
    d030:	bl	43a8 <readstat_get_variable@plt>
    d034:	mov	r8, r0
    d038:	bl	4390 <readstat_variable_get_name@plt>
    d03c:	mov	r6, r0
    d040:	mov	r0, r8
    d044:	bl	4204 <readstat_variable_get_type@plt>
    d048:	mov	r9, r0
    d04c:	mov	r0, r6
    d050:	bl	4228 <strlen@plt>
    d054:	cmp	r0, #8
    d058:	movls	r6, #4
    d05c:	movhi	r6, #2048	; 0x800
    d060:	ldr	r3, [sl, #4]
    d064:	cmp	r3, #0
    d068:	ldrne	r3, [sp]
    d06c:	ldmne	r3!, {r0, r1}
    d070:	strne	r0, [r4]
    d074:	strne	r1, [r4, #4]
    d078:	addne	r4, r4, #8
    d07c:	ldreq	r3, [sp, #64]	; 0x40
    d080:	streq	r3, [r4], #4
    d084:	cmp	r9, #0
    d088:	strbne	r7, [r4, #6]
    d08c:	movne	r0, #8
    d090:	bne	cffc <sas7bdat_begin_data+0x338>
    d094:	mov	r3, #2
    d098:	strb	r3, [r4, #6]
    d09c:	mov	r0, r8
    d0a0:	bl	42f4 <readstat_variable_get_storage_width@plt>
    d0a4:	b	cffc <sas7bdat_begin_data+0x338>
    d0a8:	ldr	r9, [sp, #12]
    d0ac:	ldr	r3, [sp, #8]
    d0b0:	ldr	r5, [r3, #16]
    d0b4:	ldr	r1, [sl, #4]
    d0b8:	cmp	r1, #0
    d0bc:	movne	r1, #808	; 0x328
    d0c0:	moveq	r1, #480	; 0x1e0
    d0c4:	ldr	r0, [pc, #1308]	; d5e8 <sas7bdat_begin_data+0x924>
    d0c8:	bl	c1fc <sas7bdat_subheader_init>
    d0cc:	mov	r4, r0
    d0d0:	ldr	r3, [sl, #4]
    d0d4:	cmp	r3, #0
    d0d8:	bne	d19c <sas7bdat_begin_data+0x4d8>
    d0dc:	mov	r0, fp
    d0e0:	bl	c448 <sas7bdat_row_length>
    d0e4:	ldr	ip, [fp, #80]	; 0x50
    d0e8:	ldr	r1, [fp, #28]
    d0ec:	ldr	r2, [sl, #32]
    d0f0:	ldr	r3, [r4, #4]
    d0f4:	str	r0, [r3, #20]
    d0f8:	ldr	r3, [r4, #4]
    d0fc:	str	ip, [r3, #24]
    d100:	ldr	r3, [r4, #4]
    d104:	str	r1, [r3, #36]	; 0x24
    d108:	ldr	r3, [r4, #4]
    d10c:	str	r2, [r3, #52]	; 0x34
    d110:	ldr	r3, [r4, #4]
    d114:	mvn	r2, #0
    d118:	str	r2, [r3, #64]	; 0x40
    d11c:	str	r2, [r3, #68]	; 0x44
    d120:	str	r4, [r5]
    d124:	ldr	r3, [sp, #8]
    d128:	ldr	r4, [r3, #16]
    d12c:	ldr	r1, [sl, #4]
    d130:	cmp	r1, #0
    d134:	movne	r1, #24
    d138:	moveq	r1, #12
    d13c:	ldr	r0, [pc, #1192]	; d5ec <sas7bdat_begin_data+0x928>
    d140:	bl	c1fc <sas7bdat_subheader_init>
    d144:	mov	r3, r0
    d148:	ldr	r2, [sl, #4]
    d14c:	cmp	r2, #0
    d150:	bne	d23c <sas7bdat_begin_data+0x578>
    d154:	ldr	r2, [r0, #4]
    d158:	ldr	r1, [fp, #28]
    d15c:	str	r1, [r2, #4]
    d160:	str	r3, [r4, #4]
    d164:	ldr	r4, [fp, #28]
    d168:	mov	r1, #4
    d16c:	mov	r0, r4
    d170:	bl	3d78 <calloc@plt>
    d174:	str	r0, [sp, #24]
    d178:	cmp	r4, #0
    d17c:	ble	d364 <sas7bdat_begin_data+0x6a0>
    d180:	sub	r8, r0, #4
    d184:	mov	r7, #0
    d188:	add	r3, sp, #64	; 0x40
    d18c:	str	r3, [sp, #16]
    d190:	str	r9, [sp, #12]
    d194:	mov	r9, r8
    d198:	b	d2b8 <sas7bdat_begin_data+0x5f4>
    d19c:	mov	r0, fp
    d1a0:	bl	c448 <sas7bdat_row_length>
    d1a4:	str	r0, [sp, #40]	; 0x28
    d1a8:	mov	r3, #0
    d1ac:	str	r3, [sp, #44]	; 0x2c
    d1b0:	ldr	r2, [fp, #80]	; 0x50
    d1b4:	asr	r3, r2, #31
    d1b8:	strd	r2, [sp, #48]	; 0x30
    d1bc:	ldr	r2, [fp, #28]
    d1c0:	asr	r3, r2, #31
    d1c4:	strd	r2, [sp, #56]	; 0x38
    d1c8:	ldrd	r2, [sl, #32]
    d1cc:	strd	r2, [sp, #64]	; 0x40
    d1d0:	ldr	r2, [r4, #4]
    d1d4:	add	r3, sp, #40	; 0x28
    d1d8:	ldm	r3!, {r0, r1}
    d1dc:	str	r0, [r2, #40]	; 0x28
    d1e0:	str	r1, [r2, #44]	; 0x2c
    d1e4:	ldr	r2, [r4, #4]
    d1e8:	add	r3, sp, #48	; 0x30
    d1ec:	ldm	r3!, {r0, r1}
    d1f0:	str	r0, [r2, #48]	; 0x30
    d1f4:	str	r1, [r2, #52]	; 0x34
    d1f8:	ldr	r2, [r4, #4]
    d1fc:	add	r3, sp, #56	; 0x38
    d200:	ldm	r3!, {r0, r1}
    d204:	str	r0, [r2, #72]	; 0x48
    d208:	str	r1, [r2, #76]	; 0x4c
    d20c:	ldr	r2, [r4, #4]
    d210:	add	r3, sp, #64	; 0x40
    d214:	ldm	r3!, {r0, r1}
    d218:	str	r0, [r2, #104]	; 0x68
    d21c:	str	r1, [r2, #108]	; 0x6c
    d220:	ldr	r1, [r4, #4]
    d224:	mvn	r3, #0
    d228:	str	r3, [r1, #128]	; 0x80
    d22c:	str	r3, [r1, #132]	; 0x84
    d230:	str	r3, [r1, #136]	; 0x88
    d234:	str	r3, [r1, #140]	; 0x8c
    d238:	b	d120 <sas7bdat_begin_data+0x45c>
    d23c:	ldr	r0, [fp, #28]
    d240:	asr	r1, r0, #31
    d244:	add	r2, sp, #72	; 0x48
    d248:	strd	r0, [r2, #-8]!
    d24c:	ldr	ip, [r3, #4]
    d250:	ldm	r2!, {r0, r1}
    d254:	str	r0, [ip, #8]
    d258:	str	r1, [ip, #12]
    d25c:	b	d160 <sas7bdat_begin_data+0x49c>
    d260:	cmp	r8, #0
    d264:	beq	d2a4 <sas7bdat_begin_data+0x5e0>
    d268:	mov	r2, r8
    d26c:	ldr	r1, [sp, #12]
    d270:	ldr	r0, [sp, #16]
    d274:	bl	c2d8 <sas7bdat_make_text_ref>
    d278:	ldr	r3, [r4, #4]
    d27c:	ldrh	r2, [sp, #64]	; 0x40
    d280:	strh	r2, [r3, r5]
    d284:	ldr	r3, [r4, #4]
    d288:	add	r3, r3, r5
    d28c:	ldrh	r2, [sp, #66]	; 0x42
    d290:	strh	r2, [r3, #2]
    d294:	ldr	r3, [r4, #4]
    d298:	add	r5, r3, r5
    d29c:	ldrh	r3, [sp, #68]	; 0x44
    d2a0:	strh	r3, [r5, #4]
    d2a4:	str	r4, [r9, #4]!
    d2a8:	add	r7, r7, #1
    d2ac:	ldr	r3, [fp, #28]
    d2b0:	cmp	r7, r3
    d2b4:	bge	d360 <sas7bdat_begin_data+0x69c>
    d2b8:	mov	r1, r7
    d2bc:	mov	r0, fp
    d2c0:	bl	43a8 <readstat_get_variable@plt>
    d2c4:	mov	r5, r0
    d2c8:	ldr	r1, [sl, #4]
    d2cc:	cmp	r1, #0
    d2d0:	movne	r1, #64	; 0x40
    d2d4:	moveq	r1, #52	; 0x34
    d2d8:	ldr	r0, [pc, #784]	; d5f0 <sas7bdat_begin_data+0x92c>
    d2dc:	bl	c1fc <sas7bdat_subheader_init>
    d2e0:	mov	r4, r0
    d2e4:	mov	r0, r5
    d2e8:	bl	3f04 <readstat_variable_get_format@plt>
    d2ec:	str	r0, [sp]
    d2f0:	mov	r0, r5
    d2f4:	bl	442c <readstat_variable_get_label@plt>
    d2f8:	mov	r8, r0
    d2fc:	ldr	r5, [sl, #4]
    d300:	cmp	r5, #0
    d304:	movne	r6, #46	; 0x2e
    d308:	moveq	r6, #34	; 0x22
    d30c:	cmp	r5, #0
    d310:	movne	r5, #52	; 0x34
    d314:	moveq	r5, #40	; 0x28
    d318:	ldr	r2, [sp]
    d31c:	cmp	r2, #0
    d320:	beq	d260 <sas7bdat_begin_data+0x59c>
    d324:	ldr	r1, [sp, #12]
    d328:	ldr	r0, [sp, #16]
    d32c:	bl	c2d8 <sas7bdat_make_text_ref>
    d330:	ldr	r3, [r4, #4]
    d334:	ldrh	r2, [sp, #64]	; 0x40
    d338:	strh	r2, [r3, r6]
    d33c:	ldr	r3, [r4, #4]
    d340:	add	r3, r3, r6
    d344:	ldrh	r2, [sp, #66]	; 0x42
    d348:	strh	r2, [r3, #2]
    d34c:	ldr	r3, [r4, #4]
    d350:	add	r6, r3, r6
    d354:	ldrh	r3, [sp, #68]	; 0x44
    d358:	strh	r3, [r6, #4]
    d35c:	b	d260 <sas7bdat_begin_data+0x59c>
    d360:	ldr	r9, [sp, #12]
    d364:	ldr	r4, [sp, #8]
    d368:	ldrd	r2, [r4]
    d36c:	ldrd	r0, [r9]
    d370:	adds	r2, r2, r0
    d374:	adc	r3, r3, r1
    d378:	strd	r2, [r4]
    d37c:	lsl	r1, r2, #2
    d380:	ldr	r0, [r4, #16]
    d384:	bl	4018 <realloc@plt>
    d388:	str	r0, [r4, #16]
    d38c:	ldrd	r2, [r9]
    d390:	cmp	r2, #1
    d394:	sbcs	r3, r3, #0
    d398:	blt	d574 <sas7bdat_begin_data+0x8b0>
    d39c:	mov	r3, #8
    d3a0:	mov	r5, #0
    d3a4:	str	sl, [sp, #16]
    d3a8:	mov	sl, r3
    d3ac:	str	fp, [sp, #36]	; 0x24
    d3b0:	add	r3, r5, #3
    d3b4:	str	r3, [sp, #12]
    d3b8:	ldr	r3, [sp, #8]
    d3bc:	ldr	r3, [r3, #16]
    d3c0:	add	r3, r3, sl
    d3c4:	str	r3, [sp]
    d3c8:	ldr	r3, [r9, #8]
    d3cc:	ldr	r8, [r3, r5, lsl #2]
    d3d0:	ldr	r3, [sp, #16]
    d3d4:	ldr	r4, [r3, #4]
    d3d8:	cmp	r4, #0
    d3dc:	moveq	r4, #4
    d3e0:	movne	r4, #8
    d3e4:	cmp	r8, #0
    d3e8:	ldrne	r7, [r8, #8]
    d3ec:	moveq	r7, #0
    d3f0:	add	fp, r4, #28
    d3f4:	add	r7, r7, fp
    d3f8:	mov	r1, r7
    d3fc:	mvn	r0, #2
    d400:	bl	c1fc <sas7bdat_subheader_init>
    d404:	mov	r6, r0
    d408:	mov	r1, r4
    d40c:	mov	r0, r7
    d410:	bl	43e4 <sas_subheader_remainder@plt>
    d414:	ldr	r3, [r6, #4]
    d418:	strh	r0, [r3, r4]
    d41c:	add	r4, r4, #12
    d420:	ldr	r3, [r6, #4]
    d424:	add	r2, r3, r4
    d428:	ldr	r1, [pc, #452]	; d5f4 <sas7bdat_begin_data+0x930>
    d42c:	str	r1, [r3, r4]
    d430:	str	r1, [r2, #4]
    d434:	ldr	r0, [r6, #4]
    d438:	ldr	r2, [r8, #8]
    d43c:	ldr	r1, [r8]
    d440:	add	r0, r0, fp
    d444:	bl	3f40 <memcpy@plt>
    d448:	ldr	r3, [sp]
    d44c:	str	r6, [r3]
    d450:	add	r5, r5, #1
    d454:	ldrd	r2, [r9]
    d458:	add	sl, sl, #4
    d45c:	asr	r1, r5, #31
    d460:	cmp	r5, r2
    d464:	sbcs	r1, r1, r3
    d468:	blt	d3b0 <sas7bdat_begin_data+0x6ec>
    d46c:	ldr	fp, [sp, #36]	; 0x24
    d470:	cmp	r2, #1
    d474:	sbcs	r3, r3, #0
    d478:	blt	d4b0 <sas7bdat_begin_data+0x7ec>
    d47c:	mov	r4, #0
    d480:	ldr	r3, [r9, #8]
    d484:	ldr	r5, [r3, r4, lsl #2]
    d488:	ldr	r0, [r5]
    d48c:	bl	3ee0 <free@plt>
    d490:	mov	r0, r5
    d494:	bl	3ee0 <free@plt>
    d498:	add	r4, r4, #1
    d49c:	asr	r1, r4, #31
    d4a0:	ldrd	r2, [r9]
    d4a4:	cmp	r4, r2
    d4a8:	sbcs	r3, r1, r3
    d4ac:	blt	d480 <sas7bdat_begin_data+0x7bc>
    d4b0:	ldr	r0, [r9, #8]
    d4b4:	bl	3ee0 <free@plt>
    d4b8:	mov	r0, r9
    d4bc:	bl	3ee0 <free@plt>
    d4c0:	ldr	r2, [sp, #12]
    d4c4:	lsl	lr, r2, #2
    d4c8:	ldr	r4, [sp, #8]
    d4cc:	ldr	r3, [r4, #16]
    d4d0:	ldr	r1, [sp, #32]
    d4d4:	str	r1, [r3, r2, lsl #2]
    d4d8:	ldr	r3, [r4, #16]
    d4dc:	add	r3, r3, lr
    d4e0:	ldr	r2, [sp, #28]
    d4e4:	str	r2, [r3, #4]
    d4e8:	ldr	r3, [fp, #28]
    d4ec:	cmp	r3, #0
    d4f0:	ble	d528 <sas7bdat_begin_data+0x864>
    d4f4:	ldr	r3, [sp, #24]
    d4f8:	sub	r2, r3, #4
    d4fc:	sub	lr, lr, r3
    d500:	mov	r3, #0
    d504:	add	lr, lr, #12
    d508:	add	r1, lr, r2
    d50c:	ldr	r0, [r4, #16]
    d510:	ldr	ip, [r2, #4]!
    d514:	str	ip, [r0, r1]
    d518:	add	r3, r3, #1
    d51c:	ldr	r1, [fp, #28]
    d520:	cmp	r3, r1
    d524:	blt	d508 <sas7bdat_begin_data+0x844>
    d528:	ldr	r0, [sp, #24]
    d52c:	bl	3ee0 <free@plt>
    d530:	ldr	r1, [sp, #8]
    d534:	ldrd	r2, [r1]
    d538:	strd	r2, [r1, #8]
    d53c:	ldr	r1, [fp, #16]
    d540:	cmp	r1, #1
    d544:	beq	d580 <sas7bdat_begin_data+0x8bc>
    d548:	ldr	r3, [sp, #20]
    d54c:	ldr	r2, [sp, #8]
    d550:	str	r2, [r3, #4]
    d554:	str	r3, [fp, #300]	; 0x12c
    d558:	ldr	r3, [fp, #16]
    d55c:	cmp	r3, #0
    d560:	movne	r5, #0
    d564:	beq	d5a8 <sas7bdat_begin_data+0x8e4>
    d568:	mov	r0, r5
    d56c:	add	sp, sp, #76	; 0x4c
    d570:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d574:	mov	r3, #2
    d578:	str	r3, [sp, #12]
    d57c:	b	d4b0 <sas7bdat_begin_data+0x7ec>
    d580:	ldr	r1, [fp, #80]	; 0x50
    d584:	adds	r2, r2, r1
    d588:	adc	r3, r3, r1, asr #31
    d58c:	ldr	r4, [sp, #8]
    d590:	strd	r2, [r4, #8]
    d594:	lsl	r1, r2, #2
    d598:	ldr	r0, [r4, #16]
    d59c:	bl	4018 <realloc@plt>
    d5a0:	str	r0, [r4, #16]
    d5a4:	b	d548 <sas7bdat_begin_data+0x884>
    d5a8:	mov	r0, fp
    d5ac:	bl	c7d4 <sas7bdat_emit_header_and_meta_pages>
    d5b0:	subs	r5, r0, #0
    d5b4:	beq	d568 <sas7bdat_begin_data+0x8a4>
    d5b8:	ldr	r4, [fp, #300]	; 0x12c
    d5bc:	cmp	r4, #0
    d5c0:	beq	d568 <sas7bdat_begin_data+0x8a4>
    d5c4:	ldr	r0, [r4]
    d5c8:	bl	3ee0 <free@plt>
    d5cc:	ldr	r0, [r4, #4]
    d5d0:	bl	c260 <sas7bdat_subheader_array_free>
    d5d4:	mov	r0, r4
    d5d8:	bl	3ee0 <free@plt>
    d5dc:	mov	r3, #0
    d5e0:	str	r3, [fp, #300]	; 0x12c
    d5e4:	b	d568 <sas7bdat_begin_data+0x8a4>
    d5e8:	.word	0xf7f7f7f7
    d5ec:	.word	0xf6f6f6f6
    d5f0:	.word	0xfffffbfe
    d5f4:	.word	0x20202020

0000d5f8 <readstat_begin_writing_sas7bdat>:
    d5f8:	push	{r4, lr}
    d5fc:	ldr	r3, [pc, #216]	; d6dc <readstat_begin_writing_sas7bdat+0xe4>
    d600:	add	r3, pc, r3
    d604:	ldr	ip, [r0, #8]
    d608:	cmp	ip, #0
    d60c:	moveq	ip, #9
    d610:	streq	ip, [r0, #8]
    d614:	ldr	ip, [pc, #196]	; d6e0 <readstat_begin_writing_sas7bdat+0xe8>
    d618:	add	ip, pc, ip
    d61c:	str	ip, [r0, #292]	; 0x124
    d620:	ldr	ip, [pc, #188]	; d6e4 <readstat_begin_writing_sas7bdat+0xec>
    d624:	add	ip, pc, ip
    d628:	str	ip, [r0, #236]	; 0xec
    d62c:	ldr	ip, [pc, #180]	; d6e8 <readstat_begin_writing_sas7bdat+0xf0>
    d630:	add	ip, pc, ip
    d634:	str	ip, [r0, #240]	; 0xf0
    d638:	ldr	ip, [pc, #172]	; d6ec <readstat_begin_writing_sas7bdat+0xf4>
    d63c:	add	ip, pc, ip
    d640:	str	ip, [r0, #244]	; 0xf4
    d644:	ldr	ip, [pc, #164]	; d6f0 <readstat_begin_writing_sas7bdat+0xf8>
    d648:	add	ip, pc, ip
    d64c:	str	ip, [r0, #248]	; 0xf8
    d650:	ldr	ip, [pc, #156]	; d6f4 <readstat_begin_writing_sas7bdat+0xfc>
    d654:	add	ip, pc, ip
    d658:	str	ip, [r0, #252]	; 0xfc
    d65c:	ldr	ip, [pc, #148]	; d6f8 <readstat_begin_writing_sas7bdat+0x100>
    d660:	add	ip, pc, ip
    d664:	str	ip, [r0, #256]	; 0x100
    d668:	ldr	ip, [pc, #140]	; d6fc <readstat_begin_writing_sas7bdat+0x104>
    d66c:	add	ip, pc, ip
    d670:	str	ip, [r0, #264]	; 0x108
    d674:	ldr	ip, [pc, #132]	; d700 <readstat_begin_writing_sas7bdat+0x108>
    d678:	add	ip, pc, ip
    d67c:	str	ip, [r0, #268]	; 0x10c
    d680:	ldr	ip, [pc, #124]	; d704 <readstat_begin_writing_sas7bdat+0x10c>
    d684:	add	ip, pc, ip
    d688:	str	ip, [r0, #272]	; 0x110
    d68c:	ldr	ip, [pc, #116]	; d708 <readstat_begin_writing_sas7bdat+0x110>
    d690:	add	ip, pc, ip
    d694:	str	ip, [r0, #228]	; 0xe4
    d698:	ldr	ip, [pc, #108]	; d70c <readstat_begin_writing_sas7bdat+0x114>
    d69c:	ldr	r3, [r3, ip]
    d6a0:	str	r3, [r0, #232]	; 0xe8
    d6a4:	ldr	r3, [pc, #100]	; d710 <readstat_begin_writing_sas7bdat+0x118>
    d6a8:	add	r3, pc, r3
    d6ac:	str	r3, [r0, #276]	; 0x114
    d6b0:	ldr	r3, [pc, #92]	; d714 <readstat_begin_writing_sas7bdat+0x11c>
    d6b4:	add	r3, pc, r3
    d6b8:	str	r3, [r0, #284]	; 0x11c
    d6bc:	ldr	r3, [pc, #84]	; d718 <readstat_begin_writing_sas7bdat+0x120>
    d6c0:	add	r3, pc, r3
    d6c4:	str	r3, [r0, #288]	; 0x120
    d6c8:	ldr	r3, [pc, #76]	; d71c <readstat_begin_writing_sas7bdat+0x124>
    d6cc:	add	r3, pc, r3
    d6d0:	str	r3, [r0, #280]	; 0x118
    d6d4:	bl	3f88 <readstat_begin_writing_file@plt>
    d6d8:	pop	{r4, pc}
    d6dc:	.word	0x000379f8
    d6e0:	.word	0xffffeba0
    d6e4:	.word	0xfffff0a8
    d6e8:	.word	0xfffff0cc
    d6ec:	.word	0xfffff0f0
    d6f0:	.word	0xfffff114
    d6f4:	.word	0xffffeb78
    d6f8:	.word	0xffffed5c
    d6fc:	.word	0xffffedc4
    d700:	.word	0xfffff110
    d704:	.word	0xffffefe0
    d708:	.word	0xffffeb18
    d70c:	.word	0x000002f0
    d710:	.word	0xfffff614
    d714:	.word	0xfffff5e0
    d718:	.word	0xffffebec
    d71c:	.word	0xffffeddc

0000d720 <sas_rle_is_special_byte>:
    d720:	and	r3, r0, #223	; 0xdf
    d724:	cmp	r3, #0
    d728:	cmpne	r0, #64	; 0x40
    d72c:	moveq	r0, #1
    d730:	movne	r0, #0
    d734:	bx	lr

0000d738 <sas_rle_insert_run>:
    d738:	push	{r4, r5, r6, r7, r8, lr}
    d73c:	mov	r7, r2
    d740:	mov	r4, r3
    d744:	add	r6, r0, r1
    d748:	cmp	r0, #0
    d74c:	beq	d7b8 <sas_rle_insert_run+0x80>
    d750:	mov	r5, r0
    d754:	mov	r8, r1
    d758:	mov	r0, r2
    d75c:	bl	d720 <sas_rle_is_special_byte>
    d760:	cmp	r0, #0
    d764:	beq	d85c <sas_rle_insert_run+0x124>
    d768:	cmp	r4, #17
    d76c:	bls	d810 <sas_rle_insert_run+0xd8>
    d770:	sub	r3, r4, #17
    d774:	lsr	r3, r3, #8
    d778:	sub	r4, r4, #17
    d77c:	uxtb	r4, r4
    d780:	cmp	r7, #64	; 0x40
    d784:	beq	d7e8 <sas_rle_insert_run+0xb0>
    d788:	cmp	r7, #32
    d78c:	beq	d7fc <sas_rle_insert_run+0xc4>
    d790:	cmp	r7, #0
    d794:	addeq	r2, r6, #1
    d798:	andeq	r3, r3, #15
    d79c:	addeq	r3, r3, #112	; 0x70
    d7a0:	strbeq	r3, [r5, r8]
    d7a4:	movne	r2, r6
    d7a8:	add	r0, r2, #1
    d7ac:	strb	r4, [r2]
    d7b0:	sub	r0, r0, r6
    d7b4:	pop	{r4, r5, r6, r7, r8, pc}
    d7b8:	mov	r0, r2
    d7bc:	bl	d720 <sas_rle_is_special_byte>
    d7c0:	cmp	r0, #0
    d7c4:	beq	d7d8 <sas_rle_insert_run+0xa0>
    d7c8:	cmp	r4, #17
    d7cc:	movhi	r0, #2
    d7d0:	movls	r0, #1
    d7d4:	pop	{r4, r5, r6, r7, r8, pc}
    d7d8:	cmp	r4, #18
    d7dc:	movhi	r0, #3
    d7e0:	movls	r0, #2
    d7e4:	pop	{r4, r5, r6, r7, r8, pc}
    d7e8:	add	r2, r6, #1
    d7ec:	and	r3, r3, #15
    d7f0:	add	r3, r3, #80	; 0x50
    d7f4:	strb	r3, [r5, r8]
    d7f8:	b	d7a8 <sas_rle_insert_run+0x70>
    d7fc:	add	r2, r6, #1
    d800:	and	r3, r3, #15
    d804:	add	r3, r3, #96	; 0x60
    d808:	strb	r3, [r5, r8]
    d80c:	b	d7a8 <sas_rle_insert_run+0x70>
    d810:	cmp	r4, #1
    d814:	movls	r0, r6
    d818:	bls	d7b0 <sas_rle_insert_run+0x78>
    d81c:	cmp	r7, #64	; 0x40
    d820:	addeq	r0, r6, #1
    d824:	subeq	r4, r4, #50	; 0x32
    d828:	strbeq	r4, [r5, r8]
    d82c:	beq	d7b0 <sas_rle_insert_run+0x78>
    d830:	cmp	r7, #32
    d834:	addeq	r0, r6, #1
    d838:	subeq	r4, r4, #34	; 0x22
    d83c:	strbeq	r4, [r5, r8]
    d840:	beq	d7b0 <sas_rle_insert_run+0x78>
    d844:	cmp	r7, #0
    d848:	movne	r0, r6
    d84c:	addeq	r0, r6, #1
    d850:	subeq	r4, r4, #18
    d854:	strbeq	r4, [r5, r8]
    d858:	b	d7b0 <sas_rle_insert_run+0x78>
    d85c:	cmp	r4, #18
    d860:	bls	d88c <sas_rle_insert_run+0x154>
    d864:	sub	r3, r4, #18
    d868:	lsr	r3, r3, #8
    d86c:	and	r3, r3, #15
    d870:	add	r3, r3, #64	; 0x40
    d874:	strb	r3, [r5, r8]
    d878:	sub	r4, r4, #18
    d87c:	strb	r4, [r6, #1]
    d880:	add	r0, r6, #3
    d884:	strb	r7, [r6, #2]
    d888:	b	d7b0 <sas_rle_insert_run+0x78>
    d88c:	cmp	r4, #2
    d890:	movls	r0, r6
    d894:	subhi	r4, r4, #67	; 0x43
    d898:	strbhi	r4, [r5, r8]
    d89c:	addhi	r0, r6, #2
    d8a0:	strbhi	r7, [r6, #1]
    d8a4:	b	d7b0 <sas_rle_insert_run+0x78>

0000d8a8 <sas_rle_copy_run>:
    d8a8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d8ac:	mov	r5, r3
    d8b0:	add	fp, r0, r1
    d8b4:	cmp	r0, #0
    d8b8:	beq	d964 <sas_rle_copy_run+0xbc>
    d8bc:	mov	r6, r2
    d8c0:	ldr	r3, [pc, #316]	; da04 <sas_rle_copy_run+0x15c>
    d8c4:	cmp	r5, r3
    d8c8:	movls	r3, fp
    d8cc:	bls	d924 <sas_rle_copy_run+0x7c>
    d8d0:	add	r4, fp, #2
    d8d4:	mov	sl, #15
    d8d8:	mvn	r9, #0
    d8dc:	ldr	r8, [pc, #292]	; da08 <sas_rle_copy_run+0x160>
    d8e0:	ldr	r7, [pc, #284]	; da04 <sas_rle_copy_run+0x15c>
    d8e4:	strb	sl, [r4, #-2]
    d8e8:	strb	r9, [r4, #-1]
    d8ec:	mov	r2, r8
    d8f0:	mov	r1, r6
    d8f4:	mov	r0, r4
    d8f8:	bl	3f40 <memcpy@plt>
    d8fc:	add	r3, r4, #4096	; 0x1000
    d900:	add	r3, r3, #63	; 0x3f
    d904:	add	r6, r6, #4096	; 0x1000
    d908:	add	r6, r6, #63	; 0x3f
    d90c:	sub	r5, r5, #4096	; 0x1000
    d910:	sub	r5, r5, #63	; 0x3f
    d914:	add	r4, r4, #4160	; 0x1040
    d918:	add	r4, r4, #1
    d91c:	cmp	r5, r7
    d920:	bhi	d8e4 <sas_rle_copy_run+0x3c>
    d924:	cmp	r5, #64	; 0x40
    d928:	bls	d9b0 <sas_rle_copy_run+0x108>
    d92c:	sub	r2, r5, #64	; 0x40
    d930:	lsr	r2, r2, #8
    d934:	and	r2, r2, #15
    d938:	mov	r4, r3
    d93c:	strb	r2, [r4], #2
    d940:	sub	r2, r5, #64	; 0x40
    d944:	strb	r2, [r3, #1]
    d948:	mov	r2, r5
    d94c:	mov	r1, r6
    d950:	mov	r0, r4
    d954:	bl	3f40 <memcpy@plt>
    d958:	add	r5, r4, r5
    d95c:	sub	r0, r5, fp
    d960:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d964:	ldr	r3, [pc, #152]	; da04 <sas_rle_copy_run+0x15c>
    d968:	cmp	r5, r3
    d96c:	bls	d9a8 <sas_rle_copy_run+0x100>
    d970:	mov	r3, #0
    d974:	ldr	r2, [pc, #136]	; da04 <sas_rle_copy_run+0x15c>
    d978:	add	r3, r3, #4160	; 0x1040
    d97c:	add	r3, r3, #1
    d980:	sub	r5, r5, #4096	; 0x1000
    d984:	sub	r5, r5, #63	; 0x3f
    d988:	cmp	r5, r2
    d98c:	bhi	d978 <sas_rle_copy_run+0xd0>
    d990:	add	r0, r3, r5
    d994:	cmp	r5, #64	; 0x40
    d998:	addhi	r0, r0, #1
    d99c:	cmp	r5, #0
    d9a0:	addne	r0, r0, #1
    d9a4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d9a8:	mov	r3, #0
    d9ac:	b	d990 <sas_rle_copy_run+0xe8>
    d9b0:	cmp	r5, #48	; 0x30
    d9b4:	addhi	r4, r3, #1
    d9b8:	addhi	r2, r5, #127	; 0x7f
    d9bc:	strbhi	r2, [r3]
    d9c0:	bhi	d948 <sas_rle_copy_run+0xa0>
    d9c4:	cmp	r5, #32
    d9c8:	addhi	r4, r3, #1
    d9cc:	addhi	r2, r5, #127	; 0x7f
    d9d0:	strbhi	r2, [r3]
    d9d4:	bhi	d948 <sas_rle_copy_run+0xa0>
    d9d8:	cmp	r5, #16
    d9dc:	addhi	r4, r3, #1
    d9e0:	addhi	r2, r5, #127	; 0x7f
    d9e4:	strbhi	r2, [r3]
    d9e8:	bhi	d948 <sas_rle_copy_run+0xa0>
    d9ec:	cmp	r5, #0
    d9f0:	addne	r4, r3, #1
    d9f4:	addne	r2, r5, #127	; 0x7f
    d9f8:	strbne	r2, [r3]
    d9fc:	moveq	r4, r3
    da00:	b	d948 <sas_rle_copy_run+0xa0>
    da04:	.word	0x0000103e
    da08:	.word	0x0000103f

0000da0c <sas_rle_decompress>:
    da0c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    da10:	mov	r7, r0
    da14:	mov	r9, r1
    da18:	mov	r5, r2
    da1c:	mov	r0, #0
    da20:	add	r6, r2, r3
    da24:	ldr	r8, [pc, #496]	; dc1c <sas_rle_decompress+0x210>
    da28:	add	r8, pc, r8
    da2c:	mov	sl, r0
    da30:	mov	fp, #32
    da34:	b	da84 <sas_rle_decompress+0x78>
    da38:	add	r1, r5, #2
    da3c:	ldrb	r5, [r5, #1]
    da40:	add	r5, r5, #64	; 0x40
    da44:	add	r5, r5, r4, lsl #8
    da48:	cmp	r5, #0
    da4c:	moveq	r5, r1
    da50:	beq	da84 <sas_rle_decompress+0x78>
    da54:	mov	r2, r5
    da58:	add	r4, r0, r5
    da5c:	cmp	r4, r9
    da60:	bhi	dc04 <sas_rle_decompress+0x1f8>
    da64:	add	r5, r1, r5
    da68:	cmp	r6, r5
    da6c:	bcc	dc0c <sas_rle_decompress+0x200>
    da70:	cmp	r7, #0
    da74:	beq	da80 <sas_rle_decompress+0x74>
    da78:	add	r0, r7, r0
    da7c:	bl	3f40 <memcpy@plt>
    da80:	mov	r0, r4
    da84:	cmp	r5, r6
    da88:	bcs	dbf8 <sas_rle_decompress+0x1ec>
    da8c:	add	r1, r5, #1
    da90:	ldrb	r4, [r5]
    da94:	lsr	r2, r4, #4
    da98:	and	r4, r4, #15
    da9c:	ldr	r3, [r8, r2, lsl #2]
    daa0:	add	r3, r1, r3
    daa4:	cmp	r6, r3
    daa8:	bcc	dbfc <sas_rle_decompress+0x1f0>
    daac:	cmp	r2, #15
    dab0:	addls	pc, pc, r2, lsl #2
    dab4:	b	dbe8 <sas_rle_decompress+0x1dc>
    dab8:	b	da38 <sas_rle_decompress+0x2c>
    dabc:	b	dbe8 <sas_rle_decompress+0x1dc>
    dac0:	b	dbe8 <sas_rle_decompress+0x1dc>
    dac4:	b	dbe8 <sas_rle_decompress+0x1dc>
    dac8:	b	daf8 <sas_rle_decompress+0xec>
    dacc:	b	db40 <sas_rle_decompress+0x134>
    dad0:	b	db58 <sas_rle_decompress+0x14c>
    dad4:	b	db70 <sas_rle_decompress+0x164>
    dad8:	b	db88 <sas_rle_decompress+0x17c>
    dadc:	b	db90 <sas_rle_decompress+0x184>
    dae0:	b	db98 <sas_rle_decompress+0x18c>
    dae4:	b	dba0 <sas_rle_decompress+0x194>
    dae8:	b	dba8 <sas_rle_decompress+0x19c>
    daec:	b	dbb8 <sas_rle_decompress+0x1ac>
    daf0:	b	dbc8 <sas_rle_decompress+0x1bc>
    daf4:	b	dbd8 <sas_rle_decompress+0x1cc>
    daf8:	ldrb	r3, [r5, #1]
    dafc:	add	r3, r3, #18
    db00:	add	r4, r3, r4, lsl #8
    db04:	ldrb	r1, [r5, #2]
    db08:	add	r5, r5, #3
    db0c:	cmp	r4, #0
    db10:	beq	da84 <sas_rle_decompress+0x78>
    db14:	mov	r2, r4
    db18:	add	r4, r0, r4
    db1c:	cmp	r9, r4
    db20:	bcc	dc14 <sas_rle_decompress+0x208>
    db24:	cmp	r7, #0
    db28:	moveq	r0, r4
    db2c:	beq	da84 <sas_rle_decompress+0x78>
    db30:	add	r0, r7, r0
    db34:	bl	42d0 <memset@plt>
    db38:	mov	r0, r4
    db3c:	b	da84 <sas_rle_decompress+0x78>
    db40:	ldrb	r3, [r5, #1]
    db44:	add	r3, r3, #17
    db48:	add	r4, r3, r4, lsl #8
    db4c:	add	r5, r5, #2
    db50:	mov	r1, #64	; 0x40
    db54:	b	db0c <sas_rle_decompress+0x100>
    db58:	ldrb	r3, [r5, #1]
    db5c:	add	r3, r3, #17
    db60:	add	r4, r3, r4, lsl #8
    db64:	add	r5, r5, #2
    db68:	mov	r1, fp
    db6c:	b	db0c <sas_rle_decompress+0x100>
    db70:	ldrb	r3, [r5, #1]
    db74:	add	r3, r3, #17
    db78:	add	r4, r3, r4, lsl #8
    db7c:	add	r5, r5, #2
    db80:	mov	r1, sl
    db84:	b	db0c <sas_rle_decompress+0x100>
    db88:	add	r5, r4, #1
    db8c:	b	da48 <sas_rle_decompress+0x3c>
    db90:	add	r5, r4, #17
    db94:	b	da48 <sas_rle_decompress+0x3c>
    db98:	add	r5, r4, #33	; 0x21
    db9c:	b	da48 <sas_rle_decompress+0x3c>
    dba0:	add	r5, r4, #49	; 0x31
    dba4:	b	da48 <sas_rle_decompress+0x3c>
    dba8:	ldrb	r1, [r5, #1]
    dbac:	add	r4, r4, #3
    dbb0:	add	r5, r5, #2
    dbb4:	b	db0c <sas_rle_decompress+0x100>
    dbb8:	add	r4, r4, #2
    dbbc:	mov	r5, r1
    dbc0:	mov	r1, #64	; 0x40
    dbc4:	b	db0c <sas_rle_decompress+0x100>
    dbc8:	add	r4, r4, #2
    dbcc:	mov	r5, r1
    dbd0:	mov	r1, fp
    dbd4:	b	db0c <sas_rle_decompress+0x100>
    dbd8:	add	r4, r4, #2
    dbdc:	mov	r5, r1
    dbe0:	mov	r1, sl
    dbe4:	b	db0c <sas_rle_decompress+0x100>
    dbe8:	mov	r5, r1
    dbec:	mov	r1, sl
    dbf0:	mov	r4, sl
    dbf4:	b	db0c <sas_rle_decompress+0x100>
    dbf8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dbfc:	mvn	r0, #0
    dc00:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dc04:	mvn	r0, #0
    dc08:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dc0c:	mvn	r0, #0
    dc10:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dc14:	mvn	r0, #0
    dc18:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dc1c:	.word	0x000179cc

0000dc20 <sas_rle_decompressed_len>:
    dc20:	push	{r4, lr}
    dc24:	mov	r3, r1
    dc28:	mov	r2, r0
    dc2c:	mov	r1, #0
    dc30:	mov	r0, r1
    dc34:	bl	409c <sas_rle_decompress@plt>
    dc38:	pop	{r4, pc}

0000dc3c <sas_rle_compress>:
    dc3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    dc40:	sub	sp, sp, #20
    dc44:	str	r0, [sp, #12]
    dc48:	add	r8, r2, r3
    dc4c:	cmp	r2, r8
    dc50:	bcs	dc74 <sas_rle_compress+0x38>
    dc54:	mov	r4, r2
    dc58:	ldrb	r7, [r4], #1
    dc5c:	str	r2, [sp, #8]
    dc60:	mov	r9, #0
    dc64:	mov	sl, r9
    dc68:	mov	r5, #1
    dc6c:	ldr	fp, [pc, #340]	; ddc8 <sas_rle_compress+0x18c>
    dc70:	b	dcec <sas_rle_compress+0xb0>
    dc74:	str	r2, [sp, #8]
    dc78:	mov	r7, #0
    dc7c:	mov	r9, r7
    dc80:	mov	sl, r7
    dc84:	mov	r5, r7
    dc88:	mov	r0, r7
    dc8c:	bl	d720 <sas_rle_is_special_byte>
    dc90:	cmp	r0, #0
    dc94:	bne	dd80 <sas_rle_compress+0x144>
    dc98:	cmp	r5, #2
    dc9c:	movls	r3, #0
    dca0:	movhi	r3, #1
    dca4:	cmp	r3, #0
    dca8:	bne	dd90 <sas_rle_compress+0x154>
    dcac:	add	r3, r5, sl
    dcb0:	ldr	r2, [sp, #8]
    dcb4:	mov	r1, r9
    dcb8:	ldr	r0, [sp, #12]
    dcbc:	bl	d8a8 <sas_rle_copy_run>
    dcc0:	add	r0, r0, r9
    dcc4:	add	sp, sp, #20
    dcc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dccc:	cmp	r5, #1
    dcd0:	movls	r3, #0
    dcd4:	movhi	r3, #1
    dcd8:	cmp	r3, #0
    dcdc:	addeq	sl, sl, r5
    dce0:	moveq	r5, #1
    dce4:	bne	dd38 <sas_rle_compress+0xfc>
    dce8:	mov	r7, r6
    dcec:	str	r4, [sp, #4]
    dcf0:	cmp	r8, r4
    dcf4:	beq	dc88 <sas_rle_compress+0x4c>
    dcf8:	ldrb	r6, [r4], #1
    dcfc:	cmp	r5, #0
    dd00:	moveq	r5, #1
    dd04:	beq	dce8 <sas_rle_compress+0xac>
    dd08:	cmp	r5, fp
    dd0c:	cmpls	r6, r7
    dd10:	addeq	r5, r5, #1
    dd14:	beq	dce8 <sas_rle_compress+0xac>
    dd18:	mov	r0, r7
    dd1c:	bl	d720 <sas_rle_is_special_byte>
    dd20:	cmp	r0, #0
    dd24:	bne	dccc <sas_rle_compress+0x90>
    dd28:	cmp	r5, #2
    dd2c:	movls	r3, #0
    dd30:	movhi	r3, #1
    dd34:	b	dcd8 <sas_rle_compress+0x9c>
    dd38:	mov	r3, sl
    dd3c:	ldr	r2, [sp, #8]
    dd40:	mov	r1, r9
    dd44:	ldr	sl, [sp, #12]
    dd48:	mov	r0, sl
    dd4c:	bl	d8a8 <sas_rle_copy_run>
    dd50:	add	r9, r9, r0
    dd54:	mov	r3, r5
    dd58:	mov	r2, r7
    dd5c:	mov	r1, r9
    dd60:	mov	r0, sl
    dd64:	bl	d738 <sas_rle_insert_run>
    dd68:	add	r9, r9, r0
    dd6c:	ldr	r3, [sp, #4]
    dd70:	str	r3, [sp, #8]
    dd74:	mov	sl, #0
    dd78:	mov	r5, #1
    dd7c:	b	dce8 <sas_rle_compress+0xac>
    dd80:	cmp	r5, #1
    dd84:	movls	r3, #0
    dd88:	movhi	r3, #1
    dd8c:	b	dca4 <sas_rle_compress+0x68>
    dd90:	mov	r3, sl
    dd94:	ldr	r2, [sp, #8]
    dd98:	mov	r1, r9
    dd9c:	ldr	r4, [sp, #12]
    dda0:	mov	r0, r4
    dda4:	bl	d8a8 <sas_rle_copy_run>
    dda8:	add	r9, r0, r9
    ddac:	mov	r3, r5
    ddb0:	mov	r2, r7
    ddb4:	mov	r1, r9
    ddb8:	mov	r0, r4
    ddbc:	bl	d738 <sas_rle_insert_run>
    ddc0:	add	r0, r9, r0
    ddc4:	b	dcc4 <sas_rle_compress+0x88>
    ddc8:	.word	0x0000100f

0000ddcc <sas_rle_compressed_len>:
    ddcc:	push	{r4, lr}
    ddd0:	mov	r3, r1
    ddd4:	mov	r2, r0
    ddd8:	mov	r1, #0
    dddc:	mov	r0, r1
    dde0:	bl	4504 <sas_rle_compress@plt>
    dde4:	pop	{r4, pc}

0000dde8 <xport_namestr_bswap>:
    dde8:	push	{r4, lr}
    ddec:	mov	r4, r0
    ddf0:	bl	3ed4 <machine_is_little_endian@plt>
    ddf4:	cmp	r0, #0
    ddf8:	popeq	{r4, pc}
    ddfc:	ldrb	r3, [r4]
    de00:	ldrb	r0, [r4, #1]
    de04:	orr	r0, r3, r0, lsl #8
    de08:	bl	3ec8 <byteswap2@plt>
    de0c:	strb	r0, [r4]
    de10:	lsr	r0, r0, #8
    de14:	strb	r0, [r4, #1]
    de18:	ldrb	r3, [r4, #2]
    de1c:	ldrb	r0, [r4, #3]
    de20:	orr	r0, r3, r0, lsl #8
    de24:	bl	3ec8 <byteswap2@plt>
    de28:	strb	r0, [r4, #2]
    de2c:	lsr	r0, r0, #8
    de30:	strb	r0, [r4, #3]
    de34:	ldrb	r3, [r4, #4]
    de38:	ldrb	r0, [r4, #5]
    de3c:	orr	r0, r3, r0, lsl #8
    de40:	bl	3ec8 <byteswap2@plt>
    de44:	strb	r0, [r4, #4]
    de48:	lsr	r0, r0, #8
    de4c:	strb	r0, [r4, #5]
    de50:	ldrb	r3, [r4, #6]
    de54:	ldrb	r0, [r4, #7]
    de58:	orr	r0, r3, r0, lsl #8
    de5c:	bl	3ec8 <byteswap2@plt>
    de60:	strb	r0, [r4, #6]
    de64:	lsr	r0, r0, #8
    de68:	strb	r0, [r4, #7]
    de6c:	ldrb	r3, [r4, #64]	; 0x40
    de70:	ldrb	r0, [r4, #65]	; 0x41
    de74:	orr	r0, r3, r0, lsl #8
    de78:	bl	3ec8 <byteswap2@plt>
    de7c:	strb	r0, [r4, #64]	; 0x40
    de80:	lsr	r0, r0, #8
    de84:	strb	r0, [r4, #65]	; 0x41
    de88:	ldrb	r3, [r4, #66]	; 0x42
    de8c:	ldrb	r0, [r4, #67]	; 0x43
    de90:	orr	r0, r3, r0, lsl #8
    de94:	bl	3ec8 <byteswap2@plt>
    de98:	strb	r0, [r4, #66]	; 0x42
    de9c:	lsr	r0, r0, #8
    dea0:	strb	r0, [r4, #67]	; 0x43
    dea4:	ldrb	r3, [r4, #68]	; 0x44
    dea8:	ldrb	r0, [r4, #69]	; 0x45
    deac:	orr	r0, r3, r0, lsl #8
    deb0:	bl	3ec8 <byteswap2@plt>
    deb4:	strb	r0, [r4, #68]	; 0x44
    deb8:	lsr	r0, r0, #8
    debc:	strb	r0, [r4, #69]	; 0x45
    dec0:	ldrb	r3, [r4, #80]	; 0x50
    dec4:	ldrb	r0, [r4, #81]	; 0x51
    dec8:	orr	r0, r3, r0, lsl #8
    decc:	bl	3ec8 <byteswap2@plt>
    ded0:	strb	r0, [r4, #80]	; 0x50
    ded4:	lsr	r0, r0, #8
    ded8:	strb	r0, [r4, #81]	; 0x51
    dedc:	ldrb	r3, [r4, #82]	; 0x52
    dee0:	ldrb	r0, [r4, #83]	; 0x53
    dee4:	orr	r0, r3, r0, lsl #8
    dee8:	bl	3ec8 <byteswap2@plt>
    deec:	strb	r0, [r4, #82]	; 0x52
    def0:	lsr	r0, r0, #8
    def4:	strb	r0, [r4, #83]	; 0x53
    def8:	ldrb	r3, [r4, #84]	; 0x54
    defc:	ldrb	r0, [r4, #85]	; 0x55
    df00:	orr	r3, r3, r0, lsl #8
    df04:	ldrb	r0, [r4, #86]	; 0x56
    df08:	orr	r3, r3, r0, lsl #16
    df0c:	ldrb	r0, [r4, #87]	; 0x57
    df10:	orr	r0, r3, r0, lsl #24
    df14:	bl	3db4 <byteswap4@plt>
    df18:	strb	r0, [r4, #84]	; 0x54
    df1c:	lsr	r3, r0, #8
    df20:	strb	r3, [r4, #85]	; 0x55
    df24:	lsr	r3, r0, #16
    df28:	strb	r3, [r4, #86]	; 0x56
    df2c:	lsr	r0, r0, #24
    df30:	strb	r0, [r4, #87]	; 0x57
    df34:	ldrb	r3, [r4, #120]	; 0x78
    df38:	ldrb	r0, [r4, #121]	; 0x79
    df3c:	orr	r0, r3, r0, lsl #8
    df40:	bl	3ec8 <byteswap2@plt>
    df44:	strb	r0, [r4, #120]	; 0x78
    df48:	lsr	r0, r0, #8
    df4c:	strb	r0, [r4, #121]	; 0x79
    df50:	pop	{r4, pc}
    df54:	andeq	r0, r0, r0

0000df58 <read_bytes>:
    df58:	push	{r4, lr}
    df5c:	mov	ip, r1
    df60:	mov	r1, r2
    df64:	ldr	r3, [r0, #52]	; 0x34
    df68:	ldr	r4, [r3, #12]
    df6c:	ldr	r2, [r3, #20]
    df70:	mov	r0, ip
    df74:	blx	r4
    df78:	pop	{r4, pc}

0000df7c <xport_skip_rest_of_record>:
    df7c:	push	{r4, lr}
    df80:	ldr	r4, [r0, #52]	; 0x34
    df84:	ldr	r3, [r4, #8]
    df88:	ldr	r2, [r4, #20]
    df8c:	mov	r1, #1
    df90:	mov	r0, #0
    df94:	blx	r3
    df98:	cmn	r0, #1
    df9c:	beq	dfd4 <xport_skip_rest_of_record+0x58>
    dfa0:	mov	r1, #80	; 0x50
    dfa4:	bl	241b8 <__aeabi_idivmod>
    dfa8:	subs	r0, r1, #0
    dfac:	beq	dfdc <xport_skip_rest_of_record+0x60>
    dfb0:	ldr	r3, [r4, #8]
    dfb4:	ldr	r2, [r4, #20]
    dfb8:	mov	r1, #1
    dfbc:	rsb	r0, r0, #80	; 0x50
    dfc0:	blx	r3
    dfc4:	cmn	r0, #1
    dfc8:	moveq	r0, #15
    dfcc:	movne	r0, #0
    dfd0:	pop	{r4, pc}
    dfd4:	mov	r0, #15
    dfd8:	pop	{r4, pc}
    dfdc:	mov	r0, #0
    dfe0:	pop	{r4, pc}

0000dfe4 <xport_read_record>:
    dfe4:	push	{r4, lr}
    dfe8:	mov	r4, r1
    dfec:	mov	r2, #80	; 0x50
    dff0:	bl	df58 <read_bytes>
    dff4:	cmp	r0, #79	; 0x4f
    dff8:	movgt	r0, #0
    dffc:	strbgt	r0, [r4, #80]	; 0x50
    e000:	movle	r0, #2
    e004:	pop	{r4, pc}

0000e008 <xport_read_header_record>:
    e008:	push	{r4, r5, lr}
    e00c:	sub	sp, sp, #116	; 0x74
    e010:	mov	r4, r1
    e014:	add	r1, sp, #28
    e018:	bl	dfe4 <xport_read_record>
    e01c:	subs	r5, r0, #0
    e020:	beq	e030 <xport_read_header_record+0x28>
    e024:	mov	r0, r5
    e028:	add	sp, sp, #116	; 0x74
    e02c:	pop	{r4, r5, pc}
    e030:	mov	r2, #36	; 0x24
    e034:	mov	r1, #0
    e038:	mov	r0, r4
    e03c:	bl	42d0 <memset@plt>
    e040:	add	r3, r4, #32
    e044:	str	r3, [sp, #16]
    e048:	add	r3, r4, #28
    e04c:	str	r3, [sp, #12]
    e050:	add	r3, r4, #24
    e054:	str	r3, [sp, #8]
    e058:	add	r3, r4, #20
    e05c:	str	r3, [sp, #4]
    e060:	add	r3, r4, #16
    e064:	str	r3, [sp]
    e068:	add	r3, r4, #12
    e06c:	mov	r2, r4
    e070:	ldr	r1, [pc, #20]	; e08c <xport_read_header_record+0x84>
    e074:	add	r1, pc, r1
    e078:	add	r0, sp, #28
    e07c:	bl	42b8 <__isoc99_sscanf@plt>
    e080:	cmp	r0, #1
    e084:	movle	r5, #5
    e088:	b	e024 <xport_read_header_record+0x1c>
    e08c:	.word	0x000173c0

0000e090 <xport_expect_header_record>:
    e090:	push	{r4, r5, r6, r7, lr}
    e094:	sub	sp, sp, #44	; 0x2c
    e098:	mov	r5, r0
    e09c:	mov	r7, r1
    e0a0:	mov	r6, r2
    e0a4:	add	r1, sp, #4
    e0a8:	bl	e008 <xport_read_header_record>
    e0ac:	subs	r4, r0, #0
    e0b0:	bne	e0c8 <xport_expect_header_record+0x38>
    e0b4:	ldr	r3, [r5, #380]	; 0x17c
    e0b8:	cmp	r3, #5
    e0bc:	beq	e0d4 <xport_expect_header_record+0x44>
    e0c0:	cmp	r3, #8
    e0c4:	beq	e0ec <xport_expect_header_record+0x5c>
    e0c8:	mov	r0, r4
    e0cc:	add	sp, sp, #44	; 0x2c
    e0d0:	pop	{r4, r5, r6, r7, pc}
    e0d4:	mov	r1, r7
    e0d8:	add	r0, sp, #4
    e0dc:	bl	3e20 <strcmp@plt>
    e0e0:	cmp	r0, #0
    e0e4:	movne	r4, #5
    e0e8:	b	e0c8 <xport_expect_header_record+0x38>
    e0ec:	mov	r1, r6
    e0f0:	add	r0, sp, #4
    e0f4:	bl	3e20 <strcmp@plt>
    e0f8:	cmp	r0, #0
    e0fc:	movne	r4, #5
    e100:	b	e0c8 <xport_expect_header_record+0x38>

0000e104 <xport_construct_format>:
    e104:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    e108:	add	fp, sp, #28
    e10c:	sub	sp, sp, #8
    e110:	mov	r4, r0
    e114:	mov	r6, r1
    e118:	ldr	r7, [fp, #4]
    e11c:	ldr	r8, [fp, #8]
    e120:	lsl	r1, r3, #2
    e124:	add	r0, r1, #8
    e128:	bic	r0, r0, #7
    e12c:	sub	sp, sp, r0
    e130:	add	r5, sp, #8
    e134:	mov	r0, #0
    e138:	str	r0, [sp]
    e13c:	add	r1, r1, #1
    e140:	mov	r0, r5
    e144:	bl	4264 <readstat_convert@plt>
    e148:	subs	r9, r0, #0
    e14c:	bne	e188 <xport_construct_format+0x84>
    e150:	ldrb	r3, [sp, #8]
    e154:	cmp	r3, #0
    e158:	strbeq	r3, [r4]
    e15c:	beq	e188 <xport_construct_format+0x84>
    e160:	cmp	r8, #0
    e164:	beq	e194 <xport_construct_format+0x90>
    e168:	str	r8, [sp, #4]
    e16c:	str	r7, [sp]
    e170:	mov	r3, r5
    e174:	ldr	r2, [pc, #92]	; e1d8 <xport_construct_format+0xd4>
    e178:	add	r2, pc, r2
    e17c:	mov	r1, r6
    e180:	mov	r0, r4
    e184:	bl	42ac <snprintf@plt>
    e188:	mov	r0, r9
    e18c:	sub	sp, fp, #28
    e190:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    e194:	cmp	r7, #0
    e198:	beq	e1bc <xport_construct_format+0xb8>
    e19c:	str	r7, [sp]
    e1a0:	mov	r3, r5
    e1a4:	ldr	r2, [pc, #48]	; e1dc <xport_construct_format+0xd8>
    e1a8:	add	r2, pc, r2
    e1ac:	mov	r1, r6
    e1b0:	mov	r0, r4
    e1b4:	bl	42ac <snprintf@plt>
    e1b8:	b	e188 <xport_construct_format+0x84>
    e1bc:	mov	r3, r5
    e1c0:	ldr	r2, [pc, #24]	; e1e0 <xport_construct_format+0xdc>
    e1c4:	add	r2, pc, r2
    e1c8:	mov	r1, r6
    e1cc:	mov	r0, r4
    e1d0:	bl	42ac <snprintf@plt>
    e1d4:	b	e188 <xport_construct_format+0x84>
    e1d8:	.word	0x00017304
    e1dc:	.word	0x000172dc
    e1e0:	.word	0x00016f08

0000e1e4 <xport_process_row>:
    e1e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e1e8:	vpush	{d8}
    e1ec:	sub	sp, sp, #76	; 0x4c
    e1f0:	mov	r4, r0
    e1f4:	mov	r8, r1
    e1f8:	mov	r9, #0
    e1fc:	mov	r5, r9
    e200:	mov	r7, r9
    e204:	add	r3, sp, #56	; 0x38
    e208:	str	r3, [sp, #16]
    e20c:	vldr	d8, [pc, #540]	; e430 <xport_process_row+0x24c>
    e210:	add	fp, sp, #48	; 0x30
    e214:	add	r3, fp, #1
    e218:	str	r3, [sp, #28]
    e21c:	add	r3, sp, #40	; 0x28
    e220:	str	r3, [sp, #32]
    e224:	add	r3, sp, #64	; 0x40
    e228:	str	r3, [sp, #36]	; 0x24
    e22c:	ldr	r3, [r4, #64]	; 0x40
    e230:	cmp	r7, r3
    e234:	blt	e25c <xport_process_row+0x78>
    e238:	ldr	r3, [r4, #72]	; 0x48
    e23c:	cmp	r3, #0
    e240:	subne	r3, r3, #1
    e244:	strne	r3, [r4, #72]	; 0x48
    e248:	ldreq	r3, [r4, #80]	; 0x50
    e24c:	addeq	r3, r3, #1
    e250:	streq	r3, [r4, #80]	; 0x50
    e254:	mov	sl, #0
    e258:	b	e400 <xport_process_row+0x21c>
    e25c:	lsl	r3, r7, #2
    e260:	str	r3, [sp, #24]
    e264:	ldr	r3, [r4, #376]	; 0x178
    e268:	ldr	r6, [r3, r7, lsl #2]
    e26c:	mov	r2, #16
    e270:	mov	r1, #0
    e274:	ldr	r0, [sp, #16]
    e278:	bl	42d0 <memset@plt>
    e27c:	ldr	r3, [r6]
    e280:	str	r3, [sp, #64]	; 0x40
    e284:	cmp	r3, #0
    e288:	bne	e344 <xport_process_row+0x160>
    e28c:	ldr	r1, [r6, #1596]	; 0x63c
    e290:	lsl	r1, r1, #2
    e294:	add	r1, r1, #1
    e298:	mov	r0, r9
    e29c:	bl	430c <readstat_realloc@plt>
    e2a0:	subs	r9, r0, #0
    e2a4:	beq	e418 <xport_process_row+0x234>
    e2a8:	ldr	r3, [r6, #1596]	; 0x63c
    e2ac:	lsl	r1, r3, #2
    e2b0:	ldr	r2, [r4, #48]	; 0x30
    e2b4:	str	r2, [sp]
    e2b8:	add	r2, r8, r5
    e2bc:	add	r1, r1, #1
    e2c0:	mov	r0, r9
    e2c4:	bl	4264 <readstat_convert@plt>
    e2c8:	cmp	r0, #0
    e2cc:	bne	e428 <xport_process_row+0x244>
    e2d0:	str	r9, [sp, #56]	; 0x38
    e2d4:	ldr	r3, [r6, #1596]	; 0x63c
    e2d8:	add	r5, r5, r3
    e2dc:	ldr	sl, [r4, #16]
    e2e0:	cmp	sl, #0
    e2e4:	beq	e33c <xport_process_row+0x158>
    e2e8:	ldr	r3, [r4, #376]	; 0x178
    e2ec:	ldr	r2, [sp, #24]
    e2f0:	ldr	r3, [r3, r2]
    e2f4:	ldr	r3, [r3, #2144]	; 0x860
    e2f8:	cmp	r3, #0
    e2fc:	bne	e33c <xport_process_row+0x158>
    e300:	ldr	r3, [r4, #72]	; 0x48
    e304:	cmp	r3, #0
    e308:	bne	e33c <xport_process_row+0x158>
    e30c:	ldr	r3, [r4, #36]	; 0x24
    e310:	str	r3, [sp, #8]
    e314:	ldr	r3, [sp, #36]	; 0x24
    e318:	ldm	r3, {r0, r1}
    e31c:	stm	sp, {r0, r1}
    e320:	ldr	r3, [sp, #16]
    e324:	ldm	r3, {r2, r3}
    e328:	mov	r1, r6
    e32c:	ldr	r0, [r4, #80]	; 0x50
    e330:	blx	sl
    e334:	cmp	r0, #0
    e338:	bne	e420 <xport_process_row+0x23c>
    e33c:	add	r7, r7, #1
    e340:	b	e22c <xport_process_row+0x48>
    e344:	vstr	d8, [sp, #40]	; 0x28
    e348:	ldr	r2, [r6, #1596]	; 0x63c
    e34c:	sub	r3, r2, #3
    e350:	cmp	r3, #5
    e354:	bhi	e3c0 <xport_process_row+0x1dc>
    e358:	mov	r3, #0
    e35c:	str	r3, [fp]
    e360:	str	r3, [fp, #4]
    e364:	str	r5, [sp, #20]
    e368:	add	r1, r5, #1
    e36c:	sub	r2, r2, #1
    e370:	add	r1, r8, r1
    e374:	ldr	r0, [sp, #28]
    e378:	bl	3fc4 <memcmp@plt>
    e37c:	cmp	r0, #0
    e380:	bne	e3cc <xport_process_row+0x1e8>
    e384:	add	sl, r8, r5
    e388:	ldrb	r0, [r8, r5]
    e38c:	cmp	r0, #46	; 0x2e
    e390:	beq	e3a0 <xport_process_row+0x1bc>
    e394:	bl	4174 <sas_validate_tag@plt>
    e398:	cmp	r0, #0
    e39c:	bne	e3cc <xport_process_row+0x1e8>
    e3a0:	ldrb	r3, [sl]
    e3a4:	cmp	r3, #46	; 0x2e
    e3a8:	ldrbeq	r3, [sp, #69]	; 0x45
    e3ac:	orreq	r3, r3, #1
    e3b0:	strbne	r3, [sp, #68]	; 0x44
    e3b4:	ldrbne	r3, [sp, #69]	; 0x45
    e3b8:	orrne	r3, r3, #2
    e3bc:	strb	r3, [sp, #69]	; 0x45
    e3c0:	ldrd	r2, [sp, #40]	; 0x28
    e3c4:	strd	r2, [sp, #56]	; 0x38
    e3c8:	b	e2d4 <xport_process_row+0xf0>
    e3cc:	ldr	r2, [r6, #1596]	; 0x63c
    e3d0:	ldr	r3, [sp, #20]
    e3d4:	add	r1, r8, r3
    e3d8:	mov	r0, fp
    e3dc:	bl	3f40 <memcpy@plt>
    e3e0:	mov	r3, #0
    e3e4:	ldr	r2, [sp, #32]
    e3e8:	mov	r1, #1
    e3ec:	mov	r0, fp
    e3f0:	bl	4024 <cnxptiee@plt>
    e3f4:	cmp	r0, #0
    e3f8:	beq	e3c0 <xport_process_row+0x1dc>
    e3fc:	mov	sl, #16
    e400:	mov	r0, r9
    e404:	bl	3ee0 <free@plt>
    e408:	mov	r0, sl
    e40c:	add	sp, sp, #76	; 0x4c
    e410:	vpop	{d8}
    e414:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e418:	mov	sl, #3
    e41c:	b	e400 <xport_process_row+0x21c>
    e420:	mov	sl, #4
    e424:	b	e400 <xport_process_row+0x21c>
    e428:	mov	sl, r0
    e42c:	b	e400 <xport_process_row+0x21c>
    e430:	.word	0x00000000
    e434:	.word	0x7ff80000

0000e438 <readstat_parse_xport>:
    e438:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e43c:	add	fp, sp, #32
    e440:	sub	sp, sp, #268	; 0x10c
    e444:	mov	r6, r0
    e448:	mov	r8, r1
    e44c:	mov	r9, r2
    e450:	ldr	r7, [pc, #3304]	; f140 <readstat_parse_xport+0xd08>
    e454:	add	r7, pc, r7
    e458:	ldr	r5, [r0, #32]
    e45c:	mov	r1, #384	; 0x180
    e460:	mov	r0, #1
    e464:	bl	3d78 <calloc@plt>
    e468:	mov	r4, r0
    e46c:	mov	ip, r0
    e470:	mov	lr, r6
    e474:	ldm	lr!, {r0, r1, r2, r3}
    e478:	stmia	ip!, {r0, r1, r2, r3}
    e47c:	ldm	lr, {r0, r1, r2, r3}
    e480:	stm	ip, {r0, r1, r2, r3}
    e484:	ldr	r3, [r6, #36]	; 0x24
    e488:	str	r3, [r4, #40]	; 0x28
    e48c:	ldr	r3, [r6, #40]	; 0x28
    e490:	str	r3, [r4, #44]	; 0x2c
    e494:	str	r9, [r4, #36]	; 0x24
    e498:	str	r5, [r4, #52]	; 0x34
    e49c:	ldr	r3, [r6, #44]	; 0x2c
    e4a0:	str	r3, [r4, #68]	; 0x44
    e4a4:	ldr	r3, [r6, #48]	; 0x30
    e4a8:	cmp	r3, #0
    e4ac:	strgt	r3, [r4, #72]	; 0x48
    e4b0:	ldr	r3, [r5]
    e4b4:	ldr	r1, [r5, #20]
    e4b8:	mov	r0, r8
    e4bc:	blx	r3
    e4c0:	cmn	r0, #1
    e4c4:	moveq	sl, #1
    e4c8:	beq	e4f0 <readstat_parse_xport+0xb8>
    e4cc:	ldr	r3, [r5, #8]
    e4d0:	ldr	r2, [r5, #20]
    e4d4:	mov	r1, #2
    e4d8:	mov	r0, #0
    e4dc:	blx	r3
    e4e0:	str	r0, [r4, #32]
    e4e4:	cmn	r0, #1
    e4e8:	moveq	sl, #15
    e4ec:	bne	e51c <readstat_parse_xport+0xe4>
    e4f0:	ldr	r3, [r5, #4]
    e4f4:	ldr	r0, [r5, #20]
    e4f8:	blx	r3
    e4fc:	ldr	r3, [r4, #376]	; 0x178
    e500:	cmp	r3, #0
    e504:	beq	ed30 <readstat_parse_xport+0x8f8>
    e508:	ldr	r3, [r4, #64]	; 0x40
    e50c:	cmp	r3, #0
    e510:	ble	ed28 <readstat_parse_xport+0x8f0>
    e514:	mov	r5, #0
    e518:	b	ed10 <readstat_parse_xport+0x8d8>
    e51c:	ldr	r3, [r5, #8]
    e520:	ldr	r2, [r5, #20]
    e524:	mov	r1, #0
    e528:	mov	r0, r1
    e52c:	blx	r3
    e530:	cmn	r0, #1
    e534:	moveq	sl, #15
    e538:	beq	e4f0 <readstat_parse_xport+0xb8>
    e53c:	ldr	r6, [r4, #40]	; 0x28
    e540:	cmp	r6, #0
    e544:	beq	e568 <readstat_parse_xport+0x130>
    e548:	ldr	r8, [r4, #44]	; 0x2c
    e54c:	cmp	r8, #0
    e550:	beq	e568 <readstat_parse_xport+0x130>
    e554:	mov	r1, r8
    e558:	mov	r0, r6
    e55c:	bl	3e20 <strcmp@plt>
    e560:	cmp	r0, #0
    e564:	bne	e5c4 <readstat_parse_xport+0x18c>
    e568:	sub	r1, fp, #180	; 0xb4
    e56c:	mov	r0, r4
    e570:	bl	e008 <xport_read_header_record>
    e574:	subs	sl, r0, #0
    e578:	bne	e4f0 <readstat_parse_xport+0xb8>
    e57c:	ldr	r1, [pc, #3008]	; f144 <readstat_parse_xport+0xd0c>
    e580:	add	r1, pc, r1
    e584:	sub	r0, fp, #180	; 0xb4
    e588:	bl	3e20 <strcmp@plt>
    e58c:	cmp	r0, #0
    e590:	moveq	r3, #5
    e594:	streq	r3, [r4, #380]	; 0x17c
    e598:	beq	ed54 <readstat_parse_xport+0x91c>
    e59c:	ldr	r1, [pc, #2980]	; f148 <readstat_parse_xport+0xd10>
    e5a0:	add	r1, pc, r1
    e5a4:	sub	r0, fp, #180	; 0xb4
    e5a8:	bl	3e20 <strcmp@plt>
    e5ac:	cmp	r0, #0
    e5b0:	moveq	r3, #8
    e5b4:	streq	r3, [r4, #380]	; 0x17c
    e5b8:	beq	ed54 <readstat_parse_xport+0x91c>
    e5bc:	mov	sl, #24
    e5c0:	b	e4f0 <readstat_parse_xport+0xb8>
    e5c4:	mov	r1, r6
    e5c8:	mov	r0, r8
    e5cc:	bl	415c <iconv_open@plt>
    e5d0:	cmn	r0, #1
    e5d4:	moveq	sl, #7
    e5d8:	beq	e4f0 <readstat_parse_xport+0xb8>
    e5dc:	str	r0, [r4, #48]	; 0x30
    e5e0:	b	e568 <readstat_parse_xport+0x130>
    e5e4:	str	r6, [fp, #-208]	; 0xffffff30
    e5e8:	b	ee10 <readstat_parse_xport+0x9d8>
    e5ec:	cmp	r3, #8
    e5f0:	bne	ef2c <readstat_parse_xport+0xaf4>
    e5f4:	ldr	r1, [pc, #2896]	; f14c <readstat_parse_xport+0xd14>
    e5f8:	add	r1, pc, r1
    e5fc:	sub	r0, fp, #224	; 0xe0
    e600:	bl	3e20 <strcmp@plt>
    e604:	cmp	r0, #0
    e608:	movne	sl, #5
    e60c:	bne	e4f0 <readstat_parse_xport+0xb8>
    e610:	b	ef2c <readstat_parse_xport+0xaf4>
    e614:	mov	r0, #2
    e618:	cmp	r0, #0
    e61c:	movne	sl, r0
    e620:	beq	e814 <readstat_parse_xport+0x3dc>
    e624:	b	e4f0 <readstat_parse_xport+0xb8>
    e628:	sub	r1, fp, #180	; 0xb4
    e62c:	mov	r0, r4
    e630:	bl	e008 <xport_read_header_record>
    e634:	cmp	r0, #0
    e638:	bne	e618 <readstat_parse_xport+0x1e0>
    e63c:	ldr	r1, [pc, #2828]	; f150 <readstat_parse_xport+0xd18>
    e640:	add	r1, pc, r1
    e644:	sub	r0, fp, #180	; 0xb4
    e648:	bl	3e20 <strcmp@plt>
    e64c:	cmp	r0, #0
    e650:	beq	e7fc <readstat_parse_xport+0x3c4>
    e654:	ldr	r1, [pc, #2808]	; f154 <readstat_parse_xport+0xd1c>
    e658:	add	r1, pc, r1
    e65c:	sub	r0, fp, #180	; 0xb4
    e660:	bl	3e20 <strcmp@plt>
    e664:	subs	r9, r0, #0
    e668:	bne	e8b4 <readstat_parse_xport+0x47c>
    e66c:	ldr	r3, [fp, #-168]	; 0xffffff58
    e670:	str	r3, [fp, #-236]	; 0xffffff14
    e674:	sub	r3, fp, #224	; 0xe0
    e678:	str	r3, [fp, #-256]	; 0xffffff00
    e67c:	ldr	r3, [fp, #-236]	; 0xffffff14
    e680:	cmp	r3, r9
    e684:	bgt	e6b4 <readstat_parse_xport+0x27c>
    e688:	mov	r0, r4
    e68c:	bl	df7c <xport_skip_rest_of_record>
    e690:	cmp	r0, #0
    e694:	bne	e7f4 <readstat_parse_xport+0x3bc>
    e698:	ldr	r2, [pc, #2744]	; f158 <readstat_parse_xport+0xd20>
    e69c:	add	r2, pc, r2
    e6a0:	ldr	r1, [pc, #2740]	; f15c <readstat_parse_xport+0xd24>
    e6a4:	add	r1, pc, r1
    e6a8:	mov	r0, r4
    e6ac:	bl	e090 <xport_expect_header_record>
    e6b0:	b	e7f4 <readstat_parse_xport+0x3bc>
    e6b4:	str	sp, [fp, #-232]	; 0xffffff18
    e6b8:	mov	r2, #6
    e6bc:	ldr	r1, [fp, #-256]	; 0xffffff00
    e6c0:	mov	r0, r4
    e6c4:	bl	df58 <read_bytes>
    e6c8:	cmp	r0, #6
    e6cc:	bne	e7ec <readstat_parse_xport+0x3b4>
    e6d0:	bl	3ed4 <machine_is_little_endian@plt>
    e6d4:	cmp	r0, #0
    e6d8:	ldrheq	r6, [fp, #-224]	; 0xffffff20
    e6dc:	ldrheq	r8, [fp, #-222]	; 0xffffff22
    e6e0:	ldrheq	r7, [fp, #-220]	; 0xffffff24
    e6e4:	beq	e70c <readstat_parse_xport+0x2d4>
    e6e8:	ldrh	r0, [fp, #-224]	; 0xffffff20
    e6ec:	bl	3ec8 <byteswap2@plt>
    e6f0:	mov	r6, r0
    e6f4:	ldrh	r0, [fp, #-222]	; 0xffffff22
    e6f8:	bl	3ec8 <byteswap2@plt>
    e6fc:	mov	r8, r0
    e700:	ldrh	r0, [fp, #-220]	; 0xffffff24
    e704:	bl	3ec8 <byteswap2@plt>
    e708:	mov	r7, r0
    e70c:	ldr	r2, [r4, #64]	; 0x40
    e710:	clz	r3, r6
    e714:	lsr	r3, r3, #5
    e718:	cmp	r2, r6
    e71c:	orrlt	r3, r3, #1
    e720:	cmp	r3, #0
    e724:	bne	e89c <readstat_parse_xport+0x464>
    e728:	str	r8, [fp, #-240]	; 0xffffff10
    e72c:	add	r3, r8, #8
    e730:	bic	r3, r3, #7
    e734:	sub	sp, sp, r3
    e738:	add	r2, sp, #16
    e73c:	mov	r1, r2
    e740:	str	r7, [fp, #-244]	; 0xffffff0c
    e744:	add	r3, r7, #8
    e748:	bic	r3, r3, #7
    e74c:	sub	sp, sp, r3
    e750:	add	r2, sp, #16
    e754:	str	r2, [fp, #-252]	; 0xffffff04
    e758:	sub	r6, r6, #-1073741823	; 0xc0000001
    e75c:	ldr	r3, [r4, #376]	; 0x178
    e760:	ldr	r6, [r3, r6, lsl #2]
    e764:	mov	r2, r8
    e768:	str	r1, [fp, #-248]	; 0xffffff08
    e76c:	mov	r0, r4
    e770:	bl	df58 <read_bytes>
    e774:	cmp	r8, r0
    e778:	bne	e8a4 <readstat_parse_xport+0x46c>
    e77c:	mov	r2, r7
    e780:	ldr	r8, [fp, #-252]	; 0xffffff04
    e784:	mov	r1, r8
    e788:	mov	r0, r4
    e78c:	bl	df58 <read_bytes>
    e790:	cmp	r7, r0
    e794:	bne	e8ac <readstat_parse_xport+0x474>
    e798:	ldr	r3, [r4, #48]	; 0x30
    e79c:	str	r3, [sp]
    e7a0:	ldr	r3, [fp, #-240]	; 0xffffff10
    e7a4:	ldr	r2, [fp, #-248]	; 0xffffff08
    e7a8:	mov	r1, #300	; 0x12c
    e7ac:	add	r0, r6, #8
    e7b0:	bl	4264 <readstat_convert@plt>
    e7b4:	cmp	r0, #0
    e7b8:	bne	e7f0 <readstat_parse_xport+0x3b8>
    e7bc:	ldr	r3, [r4, #48]	; 0x30
    e7c0:	str	r3, [sp]
    e7c4:	ldr	r3, [fp, #-244]	; 0xffffff0c
    e7c8:	mov	r2, r8
    e7cc:	mov	r1, #1024	; 0x400
    e7d0:	add	r0, r6, #564	; 0x234
    e7d4:	bl	4264 <readstat_convert@plt>
    e7d8:	cmp	r0, #0
    e7dc:	bne	e7f0 <readstat_parse_xport+0x3b8>
    e7e0:	ldr	sp, [fp, #-232]	; 0xffffff18
    e7e4:	add	r9, r9, #1
    e7e8:	b	e67c <readstat_parse_xport+0x244>
    e7ec:	mov	r0, #2
    e7f0:	ldr	sp, [fp, #-232]	; 0xffffff18
    e7f4:	cmp	r0, #0
    e7f8:	bne	e618 <readstat_parse_xport+0x1e0>
    e7fc:	mov	r6, #0
    e800:	str	r6, [r4, #76]	; 0x4c
    e804:	mov	r8, r6
    e808:	ldr	r3, [r4, #64]	; 0x40
    e80c:	cmp	r6, r3
    e810:	blt	eba0 <readstat_parse_xport+0x768>
    e814:	ldr	r0, [r4, #76]	; 0x4c
    e818:	cmp	r0, #0
    e81c:	beq	e4f0 <readstat_parse_xport+0xb8>
    e820:	ldr	r3, [r4, #16]
    e824:	cmp	r3, #0
    e828:	beq	e4f0 <readstat_parse_xport+0xb8>
    e82c:	bl	4258 <readstat_malloc@plt>
    e830:	mov	r7, r0
    e834:	ldr	r0, [r4, #76]	; 0x4c
    e838:	bl	4258 <readstat_malloc@plt>
    e83c:	mov	r9, r0
    e840:	cmp	r0, #0
    e844:	cmpne	r7, #0
    e848:	moveq	r6, #3
    e84c:	beq	ec6c <readstat_parse_xport+0x834>
    e850:	ldr	r2, [r4, #76]	; 0x4c
    e854:	mov	r1, #32
    e858:	bl	42d0 <memset@plt>
    e85c:	mov	r8, #0
    e860:	ldr	r2, [r4, #76]	; 0x4c
    e864:	mov	r1, r7
    e868:	mov	r0, r4
    e86c:	bl	df58 <read_bytes>
    e870:	cmn	r0, #1
    e874:	beq	ecd0 <readstat_parse_xport+0x898>
    e878:	ldr	r3, [r4, #76]	; 0x4c
    e87c:	cmp	r3, r0
    e880:	bhi	ecd8 <readstat_parse_xport+0x8a0>
    e884:	mov	r2, r7
    e888:	add	r3, r7, r3
    e88c:	cmp	r2, r3
    e890:	bne	ec00 <readstat_parse_xport+0x7c8>
    e894:	add	r8, r8, #1
    e898:	b	e860 <readstat_parse_xport+0x428>
    e89c:	mov	r0, #5
    e8a0:	b	e7f0 <readstat_parse_xport+0x3b8>
    e8a4:	mov	r0, #2
    e8a8:	b	e7f0 <readstat_parse_xport+0x3b8>
    e8ac:	mov	r0, #2
    e8b0:	b	e7f0 <readstat_parse_xport+0x3b8>
    e8b4:	ldr	r1, [pc, #2212]	; f160 <readstat_parse_xport+0xd28>
    e8b8:	add	r1, pc, r1
    e8bc:	sub	r0, fp, #180	; 0xb4
    e8c0:	bl	3e20 <strcmp@plt>
    e8c4:	subs	r9, r0, #0
    e8c8:	bne	e7fc <readstat_parse_xport+0x3c4>
    e8cc:	ldr	r3, [fp, #-168]	; 0xffffff58
    e8d0:	str	r3, [fp, #-244]	; 0xffffff0c
    e8d4:	sub	r3, fp, #224	; 0xe0
    e8d8:	str	r3, [fp, #-280]	; 0xfffffee8
    e8dc:	str	r5, [fp, #-232]	; 0xffffff18
    e8e0:	str	sl, [fp, #-236]	; 0xffffff14
    e8e4:	ldr	r3, [fp, #-244]	; 0xffffff0c
    e8e8:	cmp	r3, r9
    e8ec:	bgt	e924 <readstat_parse_xport+0x4ec>
    e8f0:	ldr	r5, [fp, #-232]	; 0xffffff18
    e8f4:	ldr	sl, [fp, #-236]	; 0xffffff14
    e8f8:	mov	r0, r4
    e8fc:	bl	df7c <xport_skip_rest_of_record>
    e900:	cmp	r0, #0
    e904:	bne	e7f4 <readstat_parse_xport+0x3bc>
    e908:	ldr	r2, [pc, #2132]	; f164 <readstat_parse_xport+0xd2c>
    e90c:	add	r2, pc, r2
    e910:	ldr	r1, [pc, #2128]	; f168 <readstat_parse_xport+0xd30>
    e914:	add	r1, pc, r1
    e918:	mov	r0, r4
    e91c:	bl	e090 <xport_expect_header_record>
    e920:	b	e7f4 <readstat_parse_xport+0x3bc>
    e924:	str	sp, [fp, #-240]	; 0xffffff10
    e928:	mov	r2, #10
    e92c:	ldr	r1, [fp, #-280]	; 0xfffffee8
    e930:	mov	r0, r4
    e934:	bl	df58 <read_bytes>
    e938:	cmp	r0, #10
    e93c:	bne	eb18 <readstat_parse_xport+0x6e0>
    e940:	bl	3ed4 <machine_is_little_endian@plt>
    e944:	cmp	r0, #0
    e948:	beq	eb00 <readstat_parse_xport+0x6c8>
    e94c:	ldrh	r0, [fp, #-224]	; 0xffffff20
    e950:	bl	3ec8 <byteswap2@plt>
    e954:	mov	r6, r0
    e958:	ldrh	r0, [fp, #-222]	; 0xffffff22
    e95c:	bl	3ec8 <byteswap2@plt>
    e960:	mov	r8, r0
    e964:	ldrh	r0, [fp, #-220]	; 0xffffff24
    e968:	bl	3ec8 <byteswap2@plt>
    e96c:	mov	r7, r0
    e970:	ldrh	r0, [fp, #-218]	; 0xffffff26
    e974:	bl	3ec8 <byteswap2@plt>
    e978:	mov	sl, r0
    e97c:	ldrh	r0, [fp, #-216]	; 0xffffff28
    e980:	bl	3ec8 <byteswap2@plt>
    e984:	mov	r5, r0
    e988:	ldr	r2, [r4, #64]	; 0x40
    e98c:	clz	r3, r6
    e990:	lsr	r3, r3, #5
    e994:	cmp	r2, r6
    e998:	orrlt	r3, r3, #1
    e99c:	cmp	r3, #0
    e9a0:	bne	eb2c <readstat_parse_xport+0x6f4>
    e9a4:	str	r8, [fp, #-248]	; 0xffffff08
    e9a8:	add	r3, r8, #8
    e9ac:	bic	r3, r3, #7
    e9b0:	sub	sp, sp, r3
    e9b4:	add	r2, sp, #16
    e9b8:	mov	r0, r2
    e9bc:	str	r7, [fp, #-252]	; 0xffffff04
    e9c0:	add	r3, r7, #8
    e9c4:	bic	r3, r3, #7
    e9c8:	sub	sp, sp, r3
    e9cc:	add	r2, sp, #16
    e9d0:	str	r2, [fp, #-268]	; 0xfffffef4
    e9d4:	str	sl, [fp, #-256]	; 0xffffff00
    e9d8:	add	r3, sl, #8
    e9dc:	bic	r3, r3, #7
    e9e0:	sub	sp, sp, r3
    e9e4:	add	r1, sp, #16
    e9e8:	str	r1, [fp, #-272]	; 0xfffffef0
    e9ec:	str	r5, [fp, #-260]	; 0xfffffefc
    e9f0:	add	r3, r5, #8
    e9f4:	bic	r3, r3, #7
    e9f8:	sub	sp, sp, r3
    e9fc:	add	ip, sp, #16
    ea00:	str	ip, [fp, #-276]	; 0xfffffeec
    ea04:	sub	r6, r6, #-1073741823	; 0xc0000001
    ea08:	ldr	r3, [r4, #376]	; 0x178
    ea0c:	ldr	r6, [r3, r6, lsl #2]
    ea10:	mov	r2, r8
    ea14:	str	r0, [fp, #-264]	; 0xfffffef8
    ea18:	mov	r1, r0
    ea1c:	mov	r0, r4
    ea20:	bl	df58 <read_bytes>
    ea24:	cmp	r8, r0
    ea28:	bne	eb3c <readstat_parse_xport+0x704>
    ea2c:	mov	r2, r7
    ea30:	ldr	r8, [fp, #-268]	; 0xfffffef4
    ea34:	mov	r1, r8
    ea38:	mov	r0, r4
    ea3c:	bl	df58 <read_bytes>
    ea40:	cmp	r7, r0
    ea44:	bne	eb4c <readstat_parse_xport+0x714>
    ea48:	ldr	r2, [fp, #-256]	; 0xffffff00
    ea4c:	ldr	r1, [fp, #-272]	; 0xfffffef0
    ea50:	mov	r0, r4
    ea54:	bl	df58 <read_bytes>
    ea58:	cmp	sl, r0
    ea5c:	bne	eb5c <readstat_parse_xport+0x724>
    ea60:	ldr	sl, [fp, #-260]	; 0xfffffefc
    ea64:	mov	r2, sl
    ea68:	ldr	r7, [fp, #-276]	; 0xfffffeec
    ea6c:	mov	r1, r7
    ea70:	mov	r0, r4
    ea74:	bl	df58 <read_bytes>
    ea78:	cmp	r5, r0
    ea7c:	bne	eb6c <readstat_parse_xport+0x734>
    ea80:	ldr	r3, [r4, #48]	; 0x30
    ea84:	str	r3, [sp]
    ea88:	ldr	r3, [fp, #-248]	; 0xffffff08
    ea8c:	ldr	r2, [fp, #-264]	; 0xfffffef8
    ea90:	mov	r1, #300	; 0x12c
    ea94:	add	r0, r6, #8
    ea98:	bl	4264 <readstat_convert@plt>
    ea9c:	cmp	r0, #0
    eaa0:	bne	eb7c <readstat_parse_xport+0x744>
    eaa4:	ldr	r3, [r4, #48]	; 0x30
    eaa8:	str	r3, [sp]
    eaac:	mov	r3, sl
    eab0:	mov	r2, r7
    eab4:	mov	r1, #1024	; 0x400
    eab8:	add	r0, r6, #564	; 0x234
    eabc:	bl	4264 <readstat_convert@plt>
    eac0:	cmp	r0, #0
    eac4:	bne	eb88 <readstat_parse_xport+0x750>
    eac8:	ldr	r3, [r6, #2140]	; 0x85c
    eacc:	str	r3, [sp, #4]
    ead0:	ldr	r3, [r6, #2136]	; 0x858
    ead4:	str	r3, [sp]
    ead8:	ldr	r3, [fp, #-252]	; 0xffffff04
    eadc:	mov	r2, r8
    eae0:	mov	r1, #256	; 0x100
    eae4:	add	r0, r6, #308	; 0x134
    eae8:	bl	e104 <xport_construct_format>
    eaec:	cmp	r0, #0
    eaf0:	bne	eb94 <readstat_parse_xport+0x75c>
    eaf4:	ldr	sp, [fp, #-240]	; 0xffffff10
    eaf8:	add	r9, r9, #1
    eafc:	b	e8e4 <readstat_parse_xport+0x4ac>
    eb00:	ldrh	r6, [fp, #-224]	; 0xffffff20
    eb04:	ldrh	r8, [fp, #-222]	; 0xffffff22
    eb08:	ldrh	r7, [fp, #-220]	; 0xffffff24
    eb0c:	ldrh	sl, [fp, #-218]	; 0xffffff26
    eb10:	ldrh	r5, [fp, #-216]	; 0xffffff28
    eb14:	b	e988 <readstat_parse_xport+0x550>
    eb18:	ldr	r5, [fp, #-232]	; 0xffffff18
    eb1c:	ldr	sl, [fp, #-236]	; 0xffffff14
    eb20:	mov	r0, #2
    eb24:	ldr	sp, [fp, #-240]	; 0xffffff10
    eb28:	b	e7f4 <readstat_parse_xport+0x3bc>
    eb2c:	ldr	r5, [fp, #-232]	; 0xffffff18
    eb30:	ldr	sl, [fp, #-236]	; 0xffffff14
    eb34:	mov	r0, #5
    eb38:	b	eb24 <readstat_parse_xport+0x6ec>
    eb3c:	ldr	r5, [fp, #-232]	; 0xffffff18
    eb40:	ldr	sl, [fp, #-236]	; 0xffffff14
    eb44:	mov	r0, #2
    eb48:	b	eb24 <readstat_parse_xport+0x6ec>
    eb4c:	ldr	r5, [fp, #-232]	; 0xffffff18
    eb50:	ldr	sl, [fp, #-236]	; 0xffffff14
    eb54:	mov	r0, #2
    eb58:	b	eb24 <readstat_parse_xport+0x6ec>
    eb5c:	ldr	r5, [fp, #-232]	; 0xffffff18
    eb60:	ldr	sl, [fp, #-236]	; 0xffffff14
    eb64:	mov	r0, #2
    eb68:	b	eb24 <readstat_parse_xport+0x6ec>
    eb6c:	ldr	r5, [fp, #-232]	; 0xffffff18
    eb70:	ldr	sl, [fp, #-236]	; 0xffffff14
    eb74:	mov	r0, #2
    eb78:	b	eb24 <readstat_parse_xport+0x6ec>
    eb7c:	ldr	r5, [fp, #-232]	; 0xffffff18
    eb80:	ldr	sl, [fp, #-236]	; 0xffffff14
    eb84:	b	eb24 <readstat_parse_xport+0x6ec>
    eb88:	ldr	r5, [fp, #-232]	; 0xffffff18
    eb8c:	ldr	sl, [fp, #-236]	; 0xffffff14
    eb90:	b	eb24 <readstat_parse_xport+0x6ec>
    eb94:	ldr	r5, [fp, #-232]	; 0xffffff18
    eb98:	ldr	sl, [fp, #-236]	; 0xffffff14
    eb9c:	b	eb24 <readstat_parse_xport+0x6ec>
    eba0:	ldr	r3, [r4, #376]	; 0x178
    eba4:	ldr	r7, [r3, r6, lsl #2]
    eba8:	str	r8, [r7, #2148]	; 0x864
    ebac:	ldr	r9, [r4, #8]
    ebb0:	cmp	r9, #0
    ebb4:	beq	ebe4 <readstat_parse_xport+0x7ac>
    ebb8:	ldr	r3, [r4, #36]	; 0x24
    ebbc:	add	r2, r7, #308	; 0x134
    ebc0:	mov	r1, r7
    ebc4:	mov	r0, r6
    ebc8:	blx	r9
    ebcc:	cmp	r0, #1
    ebd0:	beq	f138 <readstat_parse_xport+0xd00>
    ebd4:	cmp	r0, #2
    ebd8:	moveq	r3, #1
    ebdc:	streq	r3, [r7, #2144]	; 0x860
    ebe0:	beq	ebe8 <readstat_parse_xport+0x7b0>
    ebe4:	add	r8, r8, #1
    ebe8:	ldr	r3, [r4, #76]	; 0x4c
    ebec:	ldr	r2, [r7, #1596]	; 0x63c
    ebf0:	add	r3, r3, r2
    ebf4:	str	r3, [r4, #76]	; 0x4c
    ebf8:	add	r6, r6, #1
    ebfc:	b	e808 <readstat_parse_xport+0x3d0>
    ec00:	ldrb	r1, [r2], #1
    ec04:	cmp	r1, #32
    ec08:	beq	e88c <readstat_parse_xport+0x454>
    ec0c:	cmp	r8, #0
    ec10:	bne	ec98 <readstat_parse_xport+0x860>
    ec14:	ldr	r2, [r4, #76]	; 0x4c
    ec18:	mov	r1, r7
    ec1c:	mov	r0, r4
    ec20:	bl	e1e4 <xport_process_row>
    ec24:	cmp	r0, #0
    ec28:	bne	ecf0 <readstat_parse_xport+0x8b8>
    ec2c:	ldr	r3, [r4, #52]	; 0x34
    ec30:	ldr	r6, [r3, #16]
    ec34:	ldr	r3, [r3, #20]
    ec38:	ldr	r2, [r4, #36]	; 0x24
    ec3c:	ldr	r1, [r4, #28]
    ec40:	ldr	r0, [r4, #32]
    ec44:	blx	r6
    ec48:	cmp	r0, #0
    ec4c:	bne	ecf8 <readstat_parse_xport+0x8c0>
    ec50:	ldr	r3, [r4, #68]	; 0x44
    ec54:	cmp	r3, #0
    ec58:	ble	e860 <readstat_parse_xport+0x428>
    ec5c:	ldr	r2, [r4, #80]	; 0x50
    ec60:	cmp	r3, r2
    ec64:	bne	e860 <readstat_parse_xport+0x428>
    ec68:	mov	r6, r0
    ec6c:	cmp	r7, #0
    ec70:	beq	ec7c <readstat_parse_xport+0x844>
    ec74:	mov	r0, r7
    ec78:	bl	3ee0 <free@plt>
    ec7c:	cmp	r9, #0
    ec80:	moveq	sl, r6
    ec84:	beq	e4f0 <readstat_parse_xport+0xb8>
    ec88:	mov	r0, r9
    ec8c:	bl	3ee0 <free@plt>
    ec90:	mov	sl, r6
    ec94:	b	e4f0 <readstat_parse_xport+0xb8>
    ec98:	ldr	r2, [r4, #76]	; 0x4c
    ec9c:	mov	r1, r9
    eca0:	mov	r0, r4
    eca4:	bl	e1e4 <xport_process_row>
    eca8:	cmp	r0, #0
    ecac:	bne	ece0 <readstat_parse_xport+0x8a8>
    ecb0:	ldr	r3, [r4, #68]	; 0x44
    ecb4:	cmp	r3, #0
    ecb8:	ble	ecc8 <readstat_parse_xport+0x890>
    ecbc:	ldr	r2, [r4, #80]	; 0x50
    ecc0:	cmp	r3, r2
    ecc4:	beq	ece8 <readstat_parse_xport+0x8b0>
    ecc8:	sub	r8, r8, #1
    eccc:	b	ec0c <readstat_parse_xport+0x7d4>
    ecd0:	mov	r6, #2
    ecd4:	b	ec6c <readstat_parse_xport+0x834>
    ecd8:	mov	r6, sl
    ecdc:	b	ec6c <readstat_parse_xport+0x834>
    ece0:	mov	r6, r0
    ece4:	b	ec6c <readstat_parse_xport+0x834>
    ece8:	mov	r6, r0
    ecec:	b	ec6c <readstat_parse_xport+0x834>
    ecf0:	mov	r6, r0
    ecf4:	b	ec6c <readstat_parse_xport+0x834>
    ecf8:	mov	r6, r0
    ecfc:	b	ec6c <readstat_parse_xport+0x834>
    ed00:	add	r5, r5, #1
    ed04:	ldr	r3, [r4, #64]	; 0x40
    ed08:	cmp	r5, r3
    ed0c:	bge	ed28 <readstat_parse_xport+0x8f0>
    ed10:	ldr	r3, [r4, #376]	; 0x178
    ed14:	ldr	r0, [r3, r5, lsl #2]
    ed18:	cmp	r0, #0
    ed1c:	beq	ed00 <readstat_parse_xport+0x8c8>
    ed20:	bl	3ee0 <free@plt>
    ed24:	b	ed00 <readstat_parse_xport+0x8c8>
    ed28:	ldr	r0, [r4, #376]	; 0x178
    ed2c:	bl	3ee0 <free@plt>
    ed30:	ldr	r0, [r4, #48]	; 0x30
    ed34:	cmp	r0, #0
    ed38:	beq	ed40 <readstat_parse_xport+0x908>
    ed3c:	bl	3df0 <iconv_close@plt>
    ed40:	mov	r0, r4
    ed44:	bl	3ee0 <free@plt>
    ed48:	mov	r0, sl
    ed4c:	sub	sp, fp, #32
    ed50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ed54:	ldr	r3, [r4, #52]	; 0x34
    ed58:	ldr	r6, [r3, #8]
    ed5c:	ldr	r2, [r3, #20]
    ed60:	mov	r1, #1
    ed64:	mov	r0, #80	; 0x50
    ed68:	blx	r6
    ed6c:	cmn	r0, #1
    ed70:	moveq	sl, #15
    ed74:	beq	e4f0 <readstat_parse_xport+0xb8>
    ed78:	mov	r2, #44	; 0x2c
    ed7c:	mov	r1, #0
    ed80:	sub	r0, fp, #224	; 0xe0
    ed84:	bl	42d0 <memset@plt>
    ed88:	mvn	r3, #0
    ed8c:	str	r3, [fp, #-192]	; 0xffffff40
    ed90:	sub	r1, fp, #180	; 0xb4
    ed94:	mov	r0, r4
    ed98:	bl	dfe4 <xport_read_record>
    ed9c:	subs	sl, r0, #0
    eda0:	bne	e4f0 <readstat_parse_xport+0xb8>
    eda4:	sub	r3, fp, #224	; 0xe0
    eda8:	str	r3, [sp, #12]
    edac:	sub	r3, fp, #220	; 0xdc
    edb0:	str	r3, [sp, #8]
    edb4:	sub	r3, fp, #216	; 0xd8
    edb8:	str	r3, [sp, #4]
    edbc:	sub	r3, fp, #204	; 0xcc
    edc0:	str	r3, [sp]
    edc4:	sub	r3, fp, #228	; 0xe4
    edc8:	sub	r2, fp, #212	; 0xd4
    edcc:	ldr	r1, [pc, #920]	; f16c <readstat_parse_xport+0xd34>
    edd0:	add	r1, pc, r1
    edd4:	sub	r0, fp, #180	; 0xb4
    edd8:	bl	42b8 <__isoc99_sscanf@plt>
    eddc:	ldr	r3, [pc, #908]	; f170 <readstat_parse_xport+0xd38>
    ede0:	ldr	r7, [r7, r3]
    ede4:	mov	r6, #0
    ede8:	sub	r8, fp, #228	; 0xe4
    edec:	mov	r1, r7
    edf0:	mov	r0, r8
    edf4:	bl	3e20 <strcmp@plt>
    edf8:	cmp	r0, #0
    edfc:	beq	e5e4 <readstat_parse_xport+0x1ac>
    ee00:	add	r6, r6, #1
    ee04:	add	r7, r7, #4
    ee08:	cmp	r6, #12
    ee0c:	bne	edec <readstat_parse_xport+0x9b4>
    ee10:	ldr	r3, [fp, #-204]	; 0xffffff34
    ee14:	cmp	r3, #59	; 0x3b
    ee18:	addle	r3, r3, #100	; 0x64
    ee1c:	strle	r3, [fp, #-204]	; 0xffffff34
    ee20:	sub	r0, fp, #224	; 0xe0
    ee24:	bl	3e74 <mktime@plt>
    ee28:	str	r0, [r4, #56]	; 0x38
    ee2c:	ldr	r2, [pc, #832]	; f174 <readstat_parse_xport+0xd3c>
    ee30:	add	r2, pc, r2
    ee34:	ldr	r1, [pc, #828]	; f178 <readstat_parse_xport+0xd40>
    ee38:	add	r1, pc, r1
    ee3c:	mov	r0, r4
    ee40:	bl	e090 <xport_expect_header_record>
    ee44:	subs	sl, r0, #0
    ee48:	bne	e4f0 <readstat_parse_xport+0xb8>
    ee4c:	ldr	r2, [pc, #808]	; f17c <readstat_parse_xport+0xd44>
    ee50:	add	r2, pc, r2
    ee54:	ldr	r1, [pc, #804]	; f180 <readstat_parse_xport+0xd48>
    ee58:	add	r1, pc, r1
    ee5c:	mov	r0, r4
    ee60:	bl	e090 <xport_expect_header_record>
    ee64:	subs	sl, r0, #0
    ee68:	bne	e4f0 <readstat_parse_xport+0xb8>
    ee6c:	sub	r1, fp, #180	; 0xb4
    ee70:	mov	r0, r4
    ee74:	bl	dfe4 <xport_read_record>
    ee78:	subs	sl, r0, #0
    ee7c:	bne	e4f0 <readstat_parse_xport+0xb8>
    ee80:	add	r9, r4, #245	; 0xf5
    ee84:	ldr	r3, [r4, #380]	; 0x17c
    ee88:	ldr	r2, [r4, #48]	; 0x30
    ee8c:	str	r2, [sp]
    ee90:	cmp	r3, #5
    ee94:	moveq	r3, #8
    ee98:	movne	r3, #32
    ee9c:	sub	r2, fp, #172	; 0xac
    eea0:	mov	r1, #129	; 0x81
    eea4:	mov	r0, r9
    eea8:	bl	4264 <readstat_convert@plt>
    eeac:	subs	sl, r0, #0
    eeb0:	bne	e4f0 <readstat_parse_xport+0xb8>
    eeb4:	sub	r1, fp, #180	; 0xb4
    eeb8:	mov	r0, r4
    eebc:	bl	dfe4 <xport_read_record>
    eec0:	subs	sl, r0, #0
    eec4:	bne	e4f0 <readstat_parse_xport+0xb8>
    eec8:	add	r8, r4, #84	; 0x54
    eecc:	ldr	r3, [r4, #48]	; 0x30
    eed0:	str	r3, [sp]
    eed4:	mov	r3, #40	; 0x28
    eed8:	sub	r2, fp, #148	; 0x94
    eedc:	mov	r1, #161	; 0xa1
    eee0:	mov	r0, r8
    eee4:	bl	4264 <readstat_convert@plt>
    eee8:	subs	sl, r0, #0
    eeec:	bne	e4f0 <readstat_parse_xport+0xb8>
    eef0:	sub	r1, fp, #224	; 0xe0
    eef4:	mov	r0, r4
    eef8:	bl	e008 <xport_read_header_record>
    eefc:	subs	sl, r0, #0
    ef00:	bne	e4f0 <readstat_parse_xport+0xb8>
    ef04:	ldr	r3, [r4, #380]	; 0x17c
    ef08:	cmp	r3, #5
    ef0c:	bne	e5ec <readstat_parse_xport+0x1b4>
    ef10:	ldr	r1, [pc, #620]	; f184 <readstat_parse_xport+0xd4c>
    ef14:	add	r1, pc, r1
    ef18:	sub	r0, fp, #224	; 0xe0
    ef1c:	bl	3e20 <strcmp@plt>
    ef20:	cmp	r0, #0
    ef24:	movne	sl, #5
    ef28:	bne	e4f0 <readstat_parse_xport+0xb8>
    ef2c:	ldr	r0, [fp, #-208]	; 0xffffff30
    ef30:	str	r0, [r4, #64]	; 0x40
    ef34:	mov	r1, #4
    ef38:	bl	3fe8 <readstat_calloc@plt>
    ef3c:	str	r0, [r4, #376]	; 0x178
    ef40:	cmp	r0, #0
    ef44:	moveq	sl, #3
    ef48:	beq	e4f0 <readstat_parse_xport+0xb8>
    ef4c:	ldr	r7, [r4]
    ef50:	cmp	r7, #0
    ef54:	beq	efbc <readstat_parse_xport+0xb84>
    ef58:	mov	r2, #56	; 0x38
    ef5c:	mov	r1, #0
    ef60:	sub	r6, fp, #180	; 0xb4
    ef64:	mov	r0, r6
    ef68:	bl	42d0 <memset@plt>
    ef6c:	mvn	r2, #0
    ef70:	mvn	r3, #0
    ef74:	strd	r2, [fp, #-180]	; 0xffffff4c
    ef78:	ldr	r2, [r4, #64]	; 0x40
    ef7c:	asr	r3, r2, #31
    ef80:	strd	r2, [fp, #-172]	; 0xffffff54
    ef84:	ldr	r3, [r4, #56]	; 0x38
    ef88:	str	r3, [fp, #-164]	; 0xffffff5c
    ef8c:	str	r3, [fp, #-160]	; 0xffffff60
    ef90:	ldr	r2, [r4, #380]	; 0x17c
    ef94:	asr	r3, r2, #31
    ef98:	strd	r2, [fp, #-156]	; 0xffffff64
    ef9c:	str	r9, [fp, #-140]	; 0xffffff74
    efa0:	str	r8, [fp, #-136]	; 0xffffff78
    efa4:	ldr	r1, [r4, #36]	; 0x24
    efa8:	mov	r0, r6
    efac:	blx	r7
    efb0:	cmp	r0, #0
    efb4:	movne	sl, #4
    efb8:	bne	e4f0 <readstat_parse_xport+0xb8>
    efbc:	ldr	r3, [r4, #64]	; 0x40
    efc0:	cmp	r3, #0
    efc4:	ble	f0f4 <readstat_parse_xport+0xcbc>
    efc8:	mov	r7, #0
    efcc:	sub	r8, fp, #180	; 0xb4
    efd0:	add	r9, r8, #88	; 0x58
    efd4:	add	r3, r8, #8
    efd8:	str	r3, [fp, #-232]	; 0xffffff18
    efdc:	mov	r2, #140	; 0x8c
    efe0:	mov	r1, r8
    efe4:	mov	r0, r4
    efe8:	bl	df58 <read_bytes>
    efec:	cmp	r0, #139	; 0x8b
    eff0:	bls	e614 <readstat_parse_xport+0x1dc>
    eff4:	mov	r0, r8
    eff8:	bl	40b4 <xport_namestr_bswap@plt>
    effc:	ldr	r1, [pc, #388]	; f188 <readstat_parse_xport+0xd50>
    f000:	mov	r0, #1
    f004:	bl	3d78 <calloc@plt>
    f008:	mov	r6, r0
    f00c:	str	r7, [r0, #4]
    f010:	ldrh	r3, [fp, #-180]	; 0xffffff4c
    f014:	cmp	r3, #2
    f018:	movne	r3, #5
    f01c:	moveq	r3, #0
    f020:	str	r3, [r0]
    f024:	ldrh	r3, [fp, #-176]	; 0xffffff50
    f028:	str	r3, [r0, #1596]	; 0x63c
    f02c:	ldrh	r3, [fp, #-116]	; 0xffffff8c
    f030:	str	r3, [r0, #2136]	; 0x858
    f034:	ldrh	r3, [fp, #-114]	; 0xffffff8e
    f038:	str	r3, [r0, #2140]	; 0x85c
    f03c:	ldrh	r3, [fp, #-112]	; 0xffffff90
    f040:	cmp	r3, #0
    f044:	movne	r3, #3
    f048:	moveq	r3, #1
    f04c:	str	r3, [r0, #2132]	; 0x854
    f050:	ldr	r3, [r4, #380]	; 0x17c
    f054:	cmp	r3, #5
    f058:	ldr	r3, [r4, #48]	; 0x30
    f05c:	str	r3, [sp]
    f060:	moveq	r3, #8
    f064:	ldreq	r2, [fp, #-232]	; 0xffffff18
    f068:	moveq	r1, #300	; 0x12c
    f06c:	addeq	r0, r0, r3
    f070:	movne	r3, #32
    f074:	movne	r2, r9
    f078:	movne	r1, #300	; 0x12c
    f07c:	addne	r0, r6, #8
    f080:	bl	4264 <readstat_convert@plt>
    f084:	cmp	r0, #0
    f088:	bne	e618 <readstat_parse_xport+0x1e0>
    f08c:	ldr	r3, [r4, #48]	; 0x30
    f090:	str	r3, [sp]
    f094:	mov	r3, #40	; 0x28
    f098:	sub	r2, fp, #164	; 0xa4
    f09c:	mov	r1, #1024	; 0x400
    f0a0:	add	r0, r6, #564	; 0x234
    f0a4:	bl	4264 <readstat_convert@plt>
    f0a8:	cmp	r0, #0
    f0ac:	bne	e618 <readstat_parse_xport+0x1e0>
    f0b0:	ldr	r3, [r6, #2140]	; 0x85c
    f0b4:	str	r3, [sp, #4]
    f0b8:	ldr	r3, [r6, #2136]	; 0x858
    f0bc:	str	r3, [sp]
    f0c0:	mov	r3, #8
    f0c4:	sub	r2, fp, #124	; 0x7c
    f0c8:	mov	r1, #256	; 0x100
    f0cc:	add	r0, r6, #308	; 0x134
    f0d0:	bl	e104 <xport_construct_format>
    f0d4:	cmp	r0, #0
    f0d8:	bne	e618 <readstat_parse_xport+0x1e0>
    f0dc:	ldr	r3, [r4, #376]	; 0x178
    f0e0:	str	r6, [r3, r7, lsl #2]
    f0e4:	add	r7, r7, #1
    f0e8:	ldr	r3, [r4, #64]	; 0x40
    f0ec:	cmp	r7, r3
    f0f0:	blt	efdc <readstat_parse_xport+0xba4>
    f0f4:	mov	r0, r4
    f0f8:	bl	df7c <xport_skip_rest_of_record>
    f0fc:	cmp	r0, #0
    f100:	bne	f130 <readstat_parse_xport+0xcf8>
    f104:	ldr	r3, [r4, #380]	; 0x17c
    f108:	cmp	r3, #5
    f10c:	bne	e628 <readstat_parse_xport+0x1f0>
    f110:	ldr	r2, [pc, #116]	; f18c <readstat_parse_xport+0xd54>
    f114:	add	r2, pc, r2
    f118:	ldr	r1, [pc, #112]	; f190 <readstat_parse_xport+0xd58>
    f11c:	add	r1, pc, r1
    f120:	mov	r0, r4
    f124:	bl	e090 <xport_expect_header_record>
    f128:	cmp	r0, #0
    f12c:	beq	e7fc <readstat_parse_xport+0x3c4>
    f130:	mov	sl, r0
    f134:	b	e4f0 <readstat_parse_xport+0xb8>
    f138:	mov	r0, #4
    f13c:	b	f130 <readstat_parse_xport+0xcf8>
    f140:	.word	0x00036ba4
    f144:	.word	0x00016f0c
    f148:	.word	0x00016ef4
    f14c:	.word	0x00016ee8
    f150:	.word	0x00016ea8
    f154:	.word	0x00016e9c
    f158:	.word	0x00016e4c
    f15c:	.word	0x00016e4c
    f160:	.word	0x00016c44
    f164:	.word	0x00016bdc
    f168:	.word	0x00016bdc
    f16c:	.word	0x000166cc
    f170:	.word	0x000002dc
    f174:	.word	0x00016688
    f178:	.word	0x00016688
    f17c:	.word	0x00016678
    f180:	.word	0x00016678
    f184:	.word	0x000165c4
    f188:	.word	0x00000868
    f18c:	.word	0x000163d4
    f190:	.word	0x000163d4

0000f194 <copypad>:
    f194:	add	r1, r0, r1
    f198:	sub	r2, r2, #1
    f19c:	cmp	r0, r1
    f1a0:	bxcs	lr
    f1a4:	ldrb	r3, [r2, #1]!
    f1a8:	cmp	r3, #0
    f1ac:	bne	f1c4 <copypad+0x30>
    f1b0:	mov	r3, #32
    f1b4:	strb	r3, [r0], #1
    f1b8:	cmp	r1, r0
    f1bc:	bhi	f1b4 <copypad+0x20>
    f1c0:	bx	lr
    f1c4:	strb	r3, [r0], #1
    f1c8:	b	f19c <copypad+0x8>

0000f1cc <xport_variable_width>:
    f1cc:	cmp	r0, #0
    f1d0:	beq	f1f8 <xport_variable_width+0x2c>
    f1d4:	sub	r3, r1, #1
    f1d8:	cmp	r3, #6
    f1dc:	bls	f1e8 <xport_variable_width+0x1c>
    f1e0:	mov	r0, #8
    f1e4:	bx	lr
    f1e8:	cmp	r1, #3
    f1ec:	movcs	r0, r1
    f1f0:	movcc	r0, #3
    f1f4:	bx	lr
    f1f8:	mov	r0, r1
    f1fc:	bx	lr

0000f200 <xport_write_missing_numeric>:
    f200:	mov	r3, #46	; 0x2e
    f204:	strb	r3, [r0]
    f208:	mov	r0, #0
    f20c:	bx	lr

0000f210 <xport_write_row>:
    f210:	push	{lr}		; (str lr, [sp, #-4]!)
    f214:	sub	sp, sp, #12
    f218:	ldr	r3, [pc, #20]	; f234 <xport_write_row+0x24>
    f21c:	add	r3, pc, r3
    f220:	str	r3, [sp]
    f224:	mov	r3, #80	; 0x50
    f228:	bl	454c <readstat_write_bytes_as_lines@plt>
    f22c:	add	sp, sp, #12
    f230:	pop	{pc}		; (ldr pc, [sp], #4)
    f234:	.word	0x0001675c

0000f238 <xport_finish_record>:
    f238:	push	{r4, lr}
    f23c:	ldr	r3, [pc, #16]	; f254 <xport_finish_record+0x1c>
    f240:	add	r3, pc, r3
    f244:	mov	r2, #80	; 0x50
    f248:	mov	r1, #32
    f24c:	bl	4510 <readstat_write_line_padding@plt>
    f250:	pop	{r4, pc}
    f254:	.word	0x00016738

0000f258 <xport_end_data>:
    f258:	push	{r4, lr}
    f25c:	bl	f238 <xport_finish_record>
    f260:	pop	{r4, pc}

0000f264 <xport_write_missing_tagged>:
    f264:	push	{r4, r5, r6, lr}
    f268:	mov	r5, r0
    f26c:	mov	r4, r2
    f270:	mov	r0, r2
    f274:	bl	4174 <sas_validate_tag@plt>
    f278:	cmp	r0, #0
    f27c:	strbeq	r4, [r5]
    f280:	pop	{r4, r5, r6, pc}

0000f284 <xport_write_string>:
    f284:	push	{r4, r5, r6, lr}
    f288:	mov	r6, r0
    f28c:	mov	r5, r1
    f290:	mov	r4, r2
    f294:	ldr	r2, [r1, #1596]	; 0x63c
    f298:	mov	r1, #32
    f29c:	bl	42d0 <memset@plt>
    f2a0:	cmp	r4, #0
    f2a4:	beq	f2e8 <xport_write_string+0x64>
    f2a8:	ldrb	r3, [r4]
    f2ac:	cmp	r3, #0
    f2b0:	beq	f2f0 <xport_write_string+0x6c>
    f2b4:	mov	r0, r4
    f2b8:	bl	4228 <strlen@plt>
    f2bc:	ldr	r3, [r5, #1596]	; 0x63c
    f2c0:	cmp	r0, r3
    f2c4:	bls	f2d0 <xport_write_string+0x4c>
    f2c8:	mov	r0, #22
    f2cc:	pop	{r4, r5, r6, pc}
    f2d0:	mov	r2, r0
    f2d4:	mov	r1, r4
    f2d8:	mov	r0, r6
    f2dc:	bl	3f40 <memcpy@plt>
    f2e0:	mov	r0, #0
    f2e4:	pop	{r4, r5, r6, pc}
    f2e8:	mov	r0, #0
    f2ec:	pop	{r4, r5, r6, pc}
    f2f0:	mov	r0, #0
    f2f4:	pop	{r4, r5, r6, pc}

0000f2f8 <xport_write_double>:
    f2f8:	push	{r4, r5, lr}
    f2fc:	sub	sp, sp, #20
    f300:	mov	r4, r0
    f304:	mov	r5, r1
    f308:	vstr	d0, [sp]
    f30c:	mov	r3, #1
    f310:	add	r2, sp, #8
    f314:	mov	r1, #0
    f318:	mov	r0, sp
    f31c:	bl	4024 <cnxptiee@plt>
    f320:	cmp	r0, #0
    f324:	movne	r0, #16
    f328:	beq	f334 <xport_write_double+0x3c>
    f32c:	add	sp, sp, #20
    f330:	pop	{r4, r5, pc}
    f334:	ldr	r2, [r5, #1596]	; 0x63c
    f338:	add	r1, sp, #8
    f33c:	mov	r0, r4
    f340:	bl	3f40 <memcpy@plt>
    f344:	mov	r0, #0
    f348:	b	f32c <xport_write_double+0x34>

0000f34c <xport_write_float>:
    f34c:	push	{r4, lr}
    f350:	vcvt.f64.f32	d0, s0
    f354:	bl	f2f8 <xport_write_double>
    f358:	pop	{r4, pc}

0000f35c <xport_write_int32>:
    f35c:	push	{r4, lr}
    f360:	vmov	s15, r2
    f364:	vcvt.f64.s32	d0, s15
    f368:	bl	f2f8 <xport_write_double>
    f36c:	pop	{r4, pc}

0000f370 <xport_write_int16>:
    f370:	push	{r4, lr}
    f374:	vmov	s15, r2
    f378:	vcvt.f64.s32	d0, s15
    f37c:	bl	f2f8 <xport_write_double>
    f380:	pop	{r4, pc}

0000f384 <xport_write_int8>:
    f384:	push	{r4, lr}
    f388:	vmov	s15, r2
    f38c:	vcvt.f64.s32	d0, s15
    f390:	bl	f2f8 <xport_write_double>
    f394:	pop	{r4, pc}

0000f398 <xport_metadata_ok>:
    f398:	ldr	r3, [r0, #8]
    f39c:	cmp	r3, #5
    f3a0:	cmpne	r3, #8
    f3a4:	beq	f3b0 <xport_metadata_ok+0x18>
    f3a8:	mov	r0, #24
    f3ac:	bx	lr
    f3b0:	ldrb	r2, [r0, #188]	; 0xbc
    f3b4:	cmp	r2, #0
    f3b8:	beq	f3f8 <xport_metadata_ok+0x60>
    f3bc:	push	{r4, lr}
    f3c0:	cmp	r3, #8
    f3c4:	beq	f3d8 <xport_metadata_ok+0x40>
    f3c8:	cmp	r3, #5
    f3cc:	beq	f3e8 <xport_metadata_ok+0x50>
    f3d0:	mov	r0, #0
    f3d4:	pop	{r4, pc}
    f3d8:	mov	r1, #32
    f3dc:	add	r0, r0, #188	; 0xbc
    f3e0:	bl	3d6c <sas_validate_name@plt>
    f3e4:	pop	{r4, pc}
    f3e8:	mov	r1, #8
    f3ec:	add	r0, r0, #188	; 0xbc
    f3f0:	bl	3d6c <sas_validate_name@plt>
    f3f4:	pop	{r4, pc}
    f3f8:	mov	r0, #0
    f3fc:	bx	lr

0000f400 <xport_write_missing_string>:
    f400:	push	{r4, lr}
    f404:	ldr	r2, [r1, #1596]	; 0x63c
    f408:	mov	r1, #32
    f40c:	bl	42d0 <memset@plt>
    f410:	mov	r0, #0
    f414:	pop	{r4, pc}

0000f418 <xport_write_record>:
    f418:	push	{r4, r5, lr}
    f41c:	sub	sp, sp, #12
    f420:	mov	r5, r0
    f424:	mov	r4, r1
    f428:	mov	r0, r1
    f42c:	bl	4228 <strlen@plt>
    f430:	ldr	r3, [pc, #52]	; f46c <xport_write_record+0x54>
    f434:	add	r3, pc, r3
    f438:	str	r3, [sp]
    f43c:	mov	r3, #80	; 0x50
    f440:	mov	r2, r0
    f444:	mov	r1, r4
    f448:	mov	r0, r5
    f44c:	bl	454c <readstat_write_bytes_as_lines@plt>
    f450:	cmp	r0, #0
    f454:	beq	f460 <xport_write_record+0x48>
    f458:	add	sp, sp, #12
    f45c:	pop	{r4, r5, pc}
    f460:	mov	r0, r5
    f464:	bl	f238 <xport_finish_record>
    f468:	b	f458 <xport_write_record+0x40>
    f46c:	.word	0x00016544

0000f470 <xport_write_header_record>:
    f470:	push	{r4, r5, lr}
    f474:	sub	sp, sp, #116	; 0x74
    f478:	mov	r5, r0
    f47c:	mov	r3, r1
    f480:	ldr	r2, [r1, #32]
    f484:	str	r2, [sp, #20]
    f488:	ldr	r2, [r1, #28]
    f48c:	str	r2, [sp, #16]
    f490:	ldr	r2, [r1, #24]
    f494:	str	r2, [sp, #12]
    f498:	ldr	r2, [r1, #20]
    f49c:	str	r2, [sp, #8]
    f4a0:	ldr	r2, [r1, #16]
    f4a4:	str	r2, [sp, #4]
    f4a8:	ldr	r2, [r1, #12]
    f4ac:	str	r2, [sp]
    f4b0:	ldr	r2, [pc, #36]	; f4dc <xport_write_header_record+0x6c>
    f4b4:	add	r2, pc, r2
    f4b8:	mov	r1, #81	; 0x51
    f4bc:	add	r4, sp, #28
    f4c0:	mov	r0, r4
    f4c4:	bl	42ac <snprintf@plt>
    f4c8:	mov	r1, r4
    f4cc:	mov	r0, r5
    f4d0:	bl	f418 <xport_write_record>
    f4d4:	add	sp, sp, #116	; 0x74
    f4d8:	pop	{r4, r5, pc}
    f4dc:	.word	0x00016098

0000f4e0 <xport_write_variables>:
    f4e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f4e4:	sub	sp, sp, #236	; 0xec
    f4e8:	mov	r8, r0
    f4ec:	mov	sl, #1
    f4f0:	mov	r3, #0
    f4f4:	str	r3, [sp, #8]
    f4f8:	mov	fp, r3
    f4fc:	mov	r4, r3
    f500:	add	r6, sp, #92	; 0x5c
    f504:	ldr	r9, [pc, #1248]	; f9ec <xport_write_variables+0x50c>
    f508:	add	r9, pc, r9
    f50c:	add	r3, sp, #148	; 0x94
    f510:	str	r3, [sp, #24]
    f514:	add	r3, r6, #8
    f518:	str	r3, [sp, #28]
    f51c:	ldr	r3, [pc, #1228]	; f9f0 <xport_write_variables+0x510>
    f520:	add	r3, pc, r3
    f524:	str	r3, [sp, #32]
    f528:	ldr	r3, [pc, #1220]	; f9f4 <xport_write_variables+0x514>
    f52c:	add	r3, pc, r3
    f530:	str	r3, [sp, #36]	; 0x24
    f534:	sub	r1, sl, #1
    f538:	ldr	r3, [r8, #28]
    f53c:	cmp	r3, r1
    f540:	bgt	f63c <xport_write_variables+0x15c>
    f544:	mov	r0, r8
    f548:	bl	f238 <xport_finish_record>
    f54c:	cmp	r0, #0
    f550:	bne	f7e8 <xport_write_variables+0x308>
    f554:	ldr	r3, [r8, #8]
    f558:	cmp	r3, #8
    f55c:	movne	r3, #0
    f560:	moveq	r3, #1
    f564:	cmp	fp, #0
    f568:	moveq	r3, #0
    f56c:	cmp	r3, #0
    f570:	beq	f7e8 <xport_write_variables+0x308>
    f574:	mov	r2, #36	; 0x24
    f578:	mov	r1, #0
    f57c:	add	r4, sp, #56	; 0x38
    f580:	mov	r0, r4
    f584:	bl	42d0 <memset@plt>
    f588:	ldr	r3, [pc, #1128]	; f9f8 <xport_write_variables+0x518>
    f58c:	add	r3, pc, r3
    f590:	add	r3, r3, #12
    f594:	ldm	r3, {r0, r1}
    f598:	stm	r4, {r0, r1}
    f59c:	mov	r3, #0
    f5a0:	strb	r3, [sp, #64]	; 0x40
    f5a4:	str	fp, [sp, #68]	; 0x44
    f5a8:	ldr	r3, [sp, #8]
    f5ac:	cmp	r3, #0
    f5b0:	beq	f5c8 <xport_write_variables+0xe8>
    f5b4:	ldr	r3, [pc, #1088]	; f9fc <xport_write_variables+0x51c>
    f5b8:	add	r3, pc, r3
    f5bc:	ldm	r3, {r0, r1}
    f5c0:	add	r3, sp, #56	; 0x38
    f5c4:	stm	r3, {r0, r1}
    f5c8:	str	fp, [sp]
    f5cc:	add	r3, sp, #56	; 0x38
    f5d0:	ldr	r2, [pc, #1064]	; fa00 <xport_write_variables+0x520>
    f5d4:	add	r2, pc, r2
    f5d8:	mov	r1, #81	; 0x51
    f5dc:	add	r4, sp, #92	; 0x5c
    f5e0:	mov	r0, r4
    f5e4:	bl	42ac <snprintf@plt>
    f5e8:	mov	r1, r4
    f5ec:	mov	r0, r8
    f5f0:	bl	f418 <xport_write_record>
    f5f4:	cmp	r0, #0
    f5f8:	bne	f7e8 <xport_write_variables+0x308>
    f5fc:	mov	r5, #1
    f600:	add	r4, sp, #92	; 0x5c
    f604:	add	r3, sp, #44	; 0x2c
    f608:	str	r3, [sp, #16]
    f60c:	mov	r7, #2
    f610:	ldr	r3, [pc, #1004]	; fa04 <xport_write_variables+0x524>
    f614:	add	r3, pc, r3
    f618:	str	r3, [sp, #20]
    f61c:	add	fp, sp, #40	; 0x28
    f620:	sub	r1, r5, #1
    f624:	ldr	r3, [r8, #28]
    f628:	cmp	r3, r1
    f62c:	bgt	f804 <xport_write_variables+0x324>
    f630:	mov	r0, r8
    f634:	bl	f238 <xport_finish_record>
    f638:	b	f7e8 <xport_write_variables+0x308>
    f63c:	mov	r0, r8
    f640:	bl	43a8 <readstat_get_variable@plt>
    f644:	mov	r5, r0
    f648:	ldr	r1, [r0, #1600]	; 0x640
    f64c:	ldr	r0, [r0]
    f650:	bl	f1cc <xport_variable_width>
    f654:	mov	r7, r0
    f658:	mov	r2, #140	; 0x8c
    f65c:	mov	r1, #0
    f660:	mov	r0, r6
    f664:	bl	42d0 <memset@plt>
    f668:	strh	r7, [sp, #96]	; 0x60
    f66c:	strh	sl, [sp, #98]	; 0x62
    f670:	ldm	r9, {r0, r1}
    f674:	ldr	r3, [sp, #24]
    f678:	stm	r3, {r0, r1}
    f67c:	add	r3, sp, #164	; 0xa4
    f680:	stm	r3, {r0, r1}
    f684:	str	r4, [sp, #20]
    f688:	str	r4, [sp, #176]	; 0xb0
    f68c:	mov	r0, r5
    f690:	bl	4570 <readstat_variable_get_type_class@plt>
    f694:	cmp	r0, #0
    f698:	moveq	r3, #2
    f69c:	movne	r3, #1
    f6a0:	strh	r3, [sp, #92]	; 0x5c
    f6a4:	add	r3, r5, #8
    f6a8:	str	r3, [sp, #12]
    f6ac:	mov	r2, r3
    f6b0:	mov	r1, #8
    f6b4:	ldr	r0, [sp, #28]
    f6b8:	bl	f194 <copypad>
    f6bc:	add	r3, r5, #564	; 0x234
    f6c0:	str	r3, [sp, #16]
    f6c4:	mov	r2, r3
    f6c8:	mov	r1, #40	; 0x28
    f6cc:	add	r0, r6, #16
    f6d0:	bl	f194 <copypad>
    f6d4:	ldrb	r3, [r5, #308]	; 0x134
    f6d8:	cmp	r3, #0
    f6dc:	beq	f7f0 <xport_write_variables+0x310>
    f6e0:	mov	r2, #0
    f6e4:	str	r2, [sp, #40]	; 0x28
    f6e8:	add	r3, sp, #232	; 0xe8
    f6ec:	str	r2, [r3, #-188]!	; 0xffffff44
    f6f0:	add	r2, sp, #40	; 0x28
    f6f4:	str	r2, [sp]
    f6f8:	add	r4, sp, #56	; 0x38
    f6fc:	mov	r2, r4
    f700:	ldr	r1, [sp, #32]
    f704:	add	r0, r5, #308	; 0x134
    f708:	bl	42b8 <__isoc99_sscanf@plt>
    f70c:	mov	r2, r4
    f710:	mov	r1, #8
    f714:	add	r0, r6, #56	; 0x38
    f718:	bl	f194 <copypad>
    f71c:	ldr	r3, [sp, #44]	; 0x2c
    f720:	strh	r3, [sp, #156]	; 0x9c
    f724:	ldr	r3, [sp, #40]	; 0x28
    f728:	strh	r3, [sp, #158]	; 0x9e
    f72c:	mov	r2, r4
    f730:	mov	r1, #8
    f734:	add	r0, r6, #72	; 0x48
    f738:	bl	f194 <copypad>
    f73c:	ldr	r3, [sp, #44]	; 0x2c
    f740:	strh	r3, [sp, #172]	; 0xac
    f744:	ldr	r3, [sp, #40]	; 0x28
    f748:	strh	r3, [sp, #174]	; 0xae
    f74c:	mov	r0, r4
    f750:	bl	4228 <strlen@plt>
    f754:	cmp	r0, #8
    f758:	movhi	r4, #1
    f75c:	strhi	r4, [sp, #8]
    f760:	movls	r4, #0
    f764:	ldr	r3, [r5, #2132]	; 0x854
    f768:	cmp	r3, #3
    f76c:	movne	r3, #0
    f770:	moveq	r3, #1
    f774:	strh	r3, [sp, #160]	; 0xa0
    f778:	ldr	r3, [r8, #8]
    f77c:	cmp	r3, #8
    f780:	bne	f7a8 <xport_write_variables+0x2c8>
    f784:	ldr	r2, [sp, #12]
    f788:	mov	r1, #32
    f78c:	add	r0, r6, #88	; 0x58
    f790:	bl	f194 <copypad>
    f794:	ldr	r0, [sp, #16]
    f798:	bl	4228 <strlen@plt>
    f79c:	cmp	r0, #40	; 0x28
    f7a0:	movhi	r4, #1
    f7a4:	strh	r0, [sp, #212]	; 0xd4
    f7a8:	cmp	r4, #0
    f7ac:	addne	fp, fp, #1
    f7b0:	ldr	r3, [sp, #20]
    f7b4:	add	r4, r7, r3
    f7b8:	mov	r0, r6
    f7bc:	bl	40b4 <xport_namestr_bswap@plt>
    f7c0:	ldr	r3, [sp, #36]	; 0x24
    f7c4:	str	r3, [sp]
    f7c8:	mov	r3, #80	; 0x50
    f7cc:	mov	r2, #140	; 0x8c
    f7d0:	mov	r1, r6
    f7d4:	mov	r0, r8
    f7d8:	bl	454c <readstat_write_bytes_as_lines@plt>
    f7dc:	add	sl, sl, #1
    f7e0:	cmp	r0, #0
    f7e4:	beq	f534 <xport_write_variables+0x54>
    f7e8:	add	sp, sp, #236	; 0xec
    f7ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f7f0:	ldr	r4, [r5, #2136]	; 0x858
    f7f4:	cmp	r4, #0
    f7f8:	strhne	r4, [sp, #156]	; 0x9c
    f7fc:	movne	r4, #0
    f800:	b	f764 <xport_write_variables+0x284>
    f804:	mov	r0, r8
    f808:	bl	43a8 <readstat_get_variable@plt>
    f80c:	mov	r6, r0
    f810:	add	r3, r0, #564	; 0x234
    f814:	str	r3, [sp, #8]
    f818:	mov	r0, r3
    f81c:	bl	4228 <strlen@plt>
    f820:	mov	r9, r0
    f824:	add	r3, r6, #8
    f828:	str	r3, [sp, #12]
    f82c:	mov	r0, r3
    f830:	bl	4228 <strlen@plt>
    f834:	mov	sl, r0
    f838:	mov	r2, #24
    f83c:	mov	r1, #0
    f840:	mov	r0, r4
    f844:	bl	42d0 <memset@plt>
    f848:	ldrb	r3, [r6, #308]	; 0x134
    f84c:	cmp	r3, #0
    f850:	beq	f964 <xport_write_variables+0x484>
    f854:	str	r7, [sp, #40]	; 0x28
    f858:	mov	r3, #8
    f85c:	str	r3, [sp, #44]	; 0x2c
    f860:	str	fp, [sp]
    f864:	ldr	r3, [sp, #16]
    f868:	mov	r2, r4
    f86c:	ldr	r1, [sp, #20]
    f870:	add	r0, r6, #308	; 0x134
    f874:	bl	42b8 <__isoc99_sscanf@plt>
    f878:	cmp	r0, #0
    f87c:	movle	r0, #11
    f880:	ble	f7e8 <xport_write_variables+0x308>
    f884:	mov	r0, r4
    f888:	bl	4228 <strlen@plt>
    f88c:	cmp	r0, #8
    f890:	ble	f964 <xport_write_variables+0x484>
    f894:	strh	r5, [sp, #44]	; 0x2c
    f898:	strh	sl, [sp, #46]	; 0x2e
    f89c:	uxth	r0, r0
    f8a0:	strh	r0, [sp, #48]	; 0x30
    f8a4:	strh	r0, [sp, #50]	; 0x32
    f8a8:	strh	r9, [sp, #52]	; 0x34
    f8ac:	bl	3ed4 <machine_is_little_endian@plt>
    f8b0:	cmp	r0, #0
    f8b4:	beq	f8f4 <xport_write_variables+0x414>
    f8b8:	ldrh	r0, [sp, #44]	; 0x2c
    f8bc:	bl	3ec8 <byteswap2@plt>
    f8c0:	strh	r0, [sp, #44]	; 0x2c
    f8c4:	ldrh	r0, [sp, #46]	; 0x2e
    f8c8:	bl	3ec8 <byteswap2@plt>
    f8cc:	strh	r0, [sp, #46]	; 0x2e
    f8d0:	ldrh	r0, [sp, #48]	; 0x30
    f8d4:	bl	3ec8 <byteswap2@plt>
    f8d8:	strh	r0, [sp, #48]	; 0x30
    f8dc:	ldrh	r0, [sp, #50]	; 0x32
    f8e0:	bl	3ec8 <byteswap2@plt>
    f8e4:	strh	r0, [sp, #50]	; 0x32
    f8e8:	ldrh	r0, [sp, #52]	; 0x34
    f8ec:	bl	3ec8 <byteswap2@plt>
    f8f0:	strh	r0, [sp, #52]	; 0x34
    f8f4:	mov	r2, #10
    f8f8:	ldr	r1, [sp, #16]
    f8fc:	mov	r0, r8
    f900:	bl	4480 <readstat_write_bytes@plt>
    f904:	cmp	r0, #0
    f908:	bne	f7e8 <xport_write_variables+0x308>
    f90c:	ldr	r1, [sp, #12]
    f910:	mov	r0, r8
    f914:	bl	4180 <readstat_write_string@plt>
    f918:	cmp	r0, #0
    f91c:	bne	f7e8 <xport_write_variables+0x308>
    f920:	mov	r1, r4
    f924:	mov	r0, r8
    f928:	bl	4180 <readstat_write_string@plt>
    f92c:	cmp	r0, #0
    f930:	bne	f7e8 <xport_write_variables+0x308>
    f934:	mov	r1, r4
    f938:	mov	r0, r8
    f93c:	bl	4180 <readstat_write_string@plt>
    f940:	cmp	r0, #0
    f944:	bne	f7e8 <xport_write_variables+0x308>
    f948:	ldr	r1, [sp, #8]
    f94c:	mov	r0, r8
    f950:	bl	4180 <readstat_write_string@plt>
    f954:	cmp	r0, #0
    f958:	bne	f7e8 <xport_write_variables+0x308>
    f95c:	add	r5, r5, #1
    f960:	b	f620 <xport_write_variables+0x140>
    f964:	cmp	r9, #40	; 0x28
    f968:	bls	f95c <xport_write_variables+0x47c>
    f96c:	strh	r5, [sp, #44]	; 0x2c
    f970:	strh	sl, [sp, #46]	; 0x2e
    f974:	strh	r9, [sp, #48]	; 0x30
    f978:	bl	3ed4 <machine_is_little_endian@plt>
    f97c:	cmp	r0, #0
    f980:	beq	f9a8 <xport_write_variables+0x4c8>
    f984:	ldrh	r0, [sp, #44]	; 0x2c
    f988:	bl	3ec8 <byteswap2@plt>
    f98c:	strh	r0, [sp, #44]	; 0x2c
    f990:	ldrh	r0, [sp, #46]	; 0x2e
    f994:	bl	3ec8 <byteswap2@plt>
    f998:	strh	r0, [sp, #46]	; 0x2e
    f99c:	ldrh	r0, [sp, #48]	; 0x30
    f9a0:	bl	3ec8 <byteswap2@plt>
    f9a4:	strh	r0, [sp, #48]	; 0x30
    f9a8:	mov	r2, #6
    f9ac:	ldr	r1, [sp, #16]
    f9b0:	mov	r0, r8
    f9b4:	bl	4480 <readstat_write_bytes@plt>
    f9b8:	cmp	r0, #0
    f9bc:	bne	f7e8 <xport_write_variables+0x308>
    f9c0:	ldr	r1, [sp, #12]
    f9c4:	mov	r0, r8
    f9c8:	bl	4180 <readstat_write_string@plt>
    f9cc:	cmp	r0, #0
    f9d0:	bne	f7e8 <xport_write_variables+0x308>
    f9d4:	ldr	r1, [sp, #8]
    f9d8:	mov	r0, r8
    f9dc:	bl	4180 <readstat_write_string@plt>
    f9e0:	cmp	r0, #0
    f9e4:	beq	f95c <xport_write_variables+0x47c>
    f9e8:	b	f7e8 <xport_write_variables+0x308>
    f9ec:	.word	0x00015ffc
    f9f0:	.word	0x00015f5c
    f9f4:	.word	0x0001644c
    f9f8:	.word	0x00015f78
    f9fc:	.word	0x00015f44
    fa00:	.word	0x00015fc0
    fa04:	.word	0x00015e68

0000fa08 <xport_begin_data>:
    fa08:	push	{r4, r5, r6, r7, lr}
    fa0c:	sub	sp, sp, #140	; 0x8c
    fa10:	mov	r4, r0
    fa14:	ldr	r5, [pc, #1228]	; fee8 <xport_begin_data+0x4e0>
    fa18:	add	r5, pc, r5
    fa1c:	ldr	r3, [r0, #20]
    fa20:	add	r0, sp, #136	; 0x88
    fa24:	str	r3, [r0, #-108]!	; 0xffffff94
    fa28:	bl	418c <localtime@plt>
    fa2c:	cmp	r0, #0
    fa30:	moveq	r0, #39	; 0x27
    fa34:	beq	fb2c <xport_begin_data+0x124>
    fa38:	ldr	lr, [r0, #12]
    fa3c:	ldr	r2, [pc, #1192]	; feec <xport_begin_data+0x4e4>
    fa40:	umull	r1, r3, r2, lr
    fa44:	lsr	r3, r3, #5
    fa48:	mov	r1, #100	; 0x64
    fa4c:	mul	r3, r1, r3
    fa50:	ldr	r6, [r0]
    fa54:	umull	r7, ip, r2, r6
    fa58:	lsr	ip, ip, #5
    fa5c:	mul	ip, r1, ip
    fa60:	sub	ip, r6, ip
    fa64:	str	ip, [sp, #16]
    fa68:	ldr	r6, [r0, #4]
    fa6c:	umull	r7, ip, r2, r6
    fa70:	lsr	ip, ip, #5
    fa74:	mul	ip, r1, ip
    fa78:	sub	ip, r6, ip
    fa7c:	str	ip, [sp, #12]
    fa80:	ldr	r6, [r0, #8]
    fa84:	umull	r7, ip, r2, r6
    fa88:	lsr	ip, ip, #5
    fa8c:	mul	ip, r1, ip
    fa90:	sub	ip, r6, ip
    fa94:	str	ip, [sp, #8]
    fa98:	ldr	ip, [r0, #20]
    fa9c:	umull	r6, r2, r2, ip
    faa0:	lsr	r2, r2, #5
    faa4:	mul	r2, r1, r2
    faa8:	sub	r2, ip, r2
    faac:	str	r2, [sp, #4]
    fab0:	ldr	r1, [r0, #16]
    fab4:	ldr	r2, [pc, #1076]	; fef0 <xport_begin_data+0x4e8>
    fab8:	ldr	r2, [r5, r2]
    fabc:	add	r2, r2, r1, lsl #2
    fac0:	str	r2, [sp]
    fac4:	sub	r3, lr, r3
    fac8:	ldr	r2, [pc, #1060]	; fef4 <xport_begin_data+0x4ec>
    facc:	add	r2, pc, r2
    fad0:	mov	r1, #17
    fad4:	add	r0, sp, #116	; 0x74
    fad8:	bl	42ac <snprintf@plt>
    fadc:	mov	r2, #36	; 0x24
    fae0:	mov	r1, #0
    fae4:	add	r5, sp, #32
    fae8:	mov	r0, r5
    faec:	bl	42d0 <memset@plt>
    faf0:	ldr	r3, [pc, #1024]	; fef8 <xport_begin_data+0x4f0>
    faf4:	add	r3, pc, r3
    faf8:	add	r3, r3, #24
    fafc:	ldm	r3, {r0, r1}
    fb00:	stm	r5, {r0, r1}
    fb04:	mov	r3, #0
    fb08:	strb	r3, [sp, #40]	; 0x28
    fb0c:	ldr	r3, [r4, #8]
    fb10:	cmp	r3, #8
    fb14:	beq	fb34 <xport_begin_data+0x12c>
    fb18:	add	r1, sp, #32
    fb1c:	mov	r0, r4
    fb20:	bl	f470 <xport_write_header_record>
    fb24:	cmp	r0, #0
    fb28:	beq	fb4c <xport_begin_data+0x144>
    fb2c:	add	sp, sp, #140	; 0x8c
    fb30:	pop	{r4, r5, r6, r7, pc}
    fb34:	ldr	r3, [pc, #960]	; fefc <xport_begin_data+0x4f4>
    fb38:	add	r3, pc, r3
    fb3c:	ldm	r3, {r0, r1}
    fb40:	str	r0, [sp, #32]
    fb44:	strh	r1, [sp, #36]	; 0x24
    fb48:	b	fb18 <xport_begin_data+0x110>
    fb4c:	ldr	r3, [pc, #940]	; ff00 <xport_begin_data+0x4f8>
    fb50:	add	r3, pc, r3
    fb54:	add	r2, sp, #116	; 0x74
    fb58:	str	r2, [sp, #20]
    fb5c:	ldr	r2, [pc, #928]	; ff04 <xport_begin_data+0x4fc>
    fb60:	add	r2, pc, r2
    fb64:	str	r2, [sp, #16]
    fb68:	ldr	r2, [pc, #920]	; ff08 <xport_begin_data+0x500>
    fb6c:	add	r2, pc, r2
    fb70:	str	r2, [sp, #12]
    fb74:	ldr	r2, [pc, #912]	; ff0c <xport_begin_data+0x504>
    fb78:	add	r2, pc, r2
    fb7c:	str	r2, [sp, #8]
    fb80:	ldr	r2, [pc, #904]	; ff10 <xport_begin_data+0x508>
    fb84:	add	r2, pc, r2
    fb88:	str	r2, [sp, #4]
    fb8c:	str	r3, [sp]
    fb90:	ldr	r2, [pc, #892]	; ff14 <xport_begin_data+0x50c>
    fb94:	add	r2, pc, r2
    fb98:	mov	r1, #81	; 0x51
    fb9c:	add	r5, sp, #32
    fba0:	mov	r0, r5
    fba4:	bl	42ac <snprintf@plt>
    fba8:	mov	r1, r5
    fbac:	mov	r0, r4
    fbb0:	bl	f418 <xport_write_record>
    fbb4:	cmp	r0, #0
    fbb8:	bne	fb2c <xport_begin_data+0x124>
    fbbc:	add	r1, sp, #116	; 0x74
    fbc0:	mov	r0, r4
    fbc4:	bl	f418 <xport_write_record>
    fbc8:	cmp	r0, #0
    fbcc:	bne	fb2c <xport_begin_data+0x124>
    fbd0:	mov	r2, #36	; 0x24
    fbd4:	mov	r1, #0
    fbd8:	add	r0, sp, #32
    fbdc:	bl	42d0 <memset@plt>
    fbe0:	ldr	r3, [pc, #816]	; ff18 <xport_begin_data+0x510>
    fbe4:	add	r3, pc, r3
    fbe8:	add	r3, r3, #36	; 0x24
    fbec:	ldm	r3, {r0, r1}
    fbf0:	str	r0, [sp, #32]
    fbf4:	strh	r1, [sp, #36]	; 0x24
    fbf8:	lsr	r1, r1, #16
    fbfc:	strb	r1, [sp, #38]	; 0x26
    fc00:	mov	r3, #0
    fc04:	strh	r3, [sp, #39]	; 0x27
    fc08:	mov	r3, #160	; 0xa0
    fc0c:	str	r3, [sp, #56]	; 0x38
    fc10:	mov	r3, #140	; 0x8c
    fc14:	str	r3, [sp, #64]	; 0x40
    fc18:	ldr	r3, [r4, #8]
    fc1c:	cmp	r3, #8
    fc20:	beq	fe04 <xport_begin_data+0x3fc>
    fc24:	add	r1, sp, #32
    fc28:	mov	r0, r4
    fc2c:	bl	f470 <xport_write_header_record>
    fc30:	cmp	r0, #0
    fc34:	bne	fb2c <xport_begin_data+0x124>
    fc38:	mov	r2, #36	; 0x24
    fc3c:	mov	r1, #0
    fc40:	add	r5, sp, #32
    fc44:	mov	r0, r5
    fc48:	bl	42d0 <memset@plt>
    fc4c:	ldr	r3, [pc, #712]	; ff1c <xport_begin_data+0x514>
    fc50:	add	r3, pc, r3
    fc54:	add	r3, r3, #48	; 0x30
    fc58:	ldm	r3, {r0, r1}
    fc5c:	stm	r5, {r0, r1}
    fc60:	mov	r3, #0
    fc64:	strb	r3, [sp, #40]	; 0x28
    fc68:	ldr	r3, [r4, #8]
    fc6c:	cmp	r3, #8
    fc70:	beq	fe24 <xport_begin_data+0x41c>
    fc74:	add	r1, sp, #32
    fc78:	mov	r0, r4
    fc7c:	bl	f470 <xport_write_header_record>
    fc80:	cmp	r0, #0
    fc84:	bne	fb2c <xport_begin_data+0x124>
    fc88:	ldr	r3, [r4, #8]
    fc8c:	cmp	r3, #8
    fc90:	beq	fe3c <xport_begin_data+0x434>
    fc94:	ldrb	r3, [r4, #188]	; 0xbc
    fc98:	cmp	r3, #0
    fc9c:	addne	r2, r4, #188	; 0xbc
    fca0:	ldreq	r2, [pc, #632]	; ff20 <xport_begin_data+0x518>
    fca4:	addeq	r2, pc, r2
    fca8:	add	r3, sp, #116	; 0x74
    fcac:	str	r3, [sp, #20]
    fcb0:	ldr	r3, [pc, #620]	; ff24 <xport_begin_data+0x51c>
    fcb4:	add	r3, pc, r3
    fcb8:	str	r3, [sp, #16]
    fcbc:	ldr	r3, [pc, #612]	; ff28 <xport_begin_data+0x520>
    fcc0:	add	r3, pc, r3
    fcc4:	str	r3, [sp, #12]
    fcc8:	ldr	r3, [pc, #604]	; ff2c <xport_begin_data+0x524>
    fccc:	add	r3, pc, r3
    fcd0:	str	r3, [sp, #8]
    fcd4:	ldr	r3, [pc, #596]	; ff30 <xport_begin_data+0x528>
    fcd8:	add	r3, pc, r3
    fcdc:	str	r3, [sp, #4]
    fce0:	str	r2, [sp]
    fce4:	ldr	r3, [pc, #584]	; ff34 <xport_begin_data+0x52c>
    fce8:	add	r3, pc, r3
    fcec:	ldr	r2, [pc, #580]	; ff38 <xport_begin_data+0x530>
    fcf0:	add	r2, pc, r2
    fcf4:	mov	r1, #81	; 0x51
    fcf8:	add	r5, sp, #32
    fcfc:	mov	r0, r5
    fd00:	bl	42ac <snprintf@plt>
    fd04:	mov	r1, r5
    fd08:	mov	r0, r4
    fd0c:	bl	f418 <xport_write_record>
    fd10:	cmp	r0, #0
    fd14:	bne	fb2c <xport_begin_data+0x124>
    fd18:	ldr	r3, [pc, #540]	; ff3c <xport_begin_data+0x534>
    fd1c:	add	r3, pc, r3
    fd20:	str	r3, [sp, #8]
    fd24:	add	r2, r4, #88	; 0x58
    fd28:	str	r2, [sp, #4]
    fd2c:	str	r3, [sp]
    fd30:	add	r3, sp, #116	; 0x74
    fd34:	ldr	r2, [pc, #516]	; ff40 <xport_begin_data+0x538>
    fd38:	add	r2, pc, r2
    fd3c:	mov	r1, #81	; 0x51
    fd40:	add	r5, sp, #32
    fd44:	mov	r0, r5
    fd48:	bl	42ac <snprintf@plt>
    fd4c:	mov	r1, r5
    fd50:	mov	r0, r4
    fd54:	bl	f418 <xport_write_record>
    fd58:	cmp	r0, #0
    fd5c:	bne	fb2c <xport_begin_data+0x124>
    fd60:	mov	r2, #36	; 0x24
    fd64:	mov	r1, #0
    fd68:	add	r5, sp, #32
    fd6c:	mov	r0, r5
    fd70:	bl	42d0 <memset@plt>
    fd74:	ldr	r3, [pc, #456]	; ff44 <xport_begin_data+0x53c>
    fd78:	add	r3, pc, r3
    fd7c:	add	r3, r3, #60	; 0x3c
    fd80:	ldm	r3, {r0, r1}
    fd84:	stm	r5, {r0, r1}
    fd88:	mov	r3, #0
    fd8c:	strb	r3, [sp, #40]	; 0x28
    fd90:	ldr	r3, [r4, #28]
    fd94:	str	r3, [sp, #48]	; 0x30
    fd98:	ldr	r3, [r4, #8]
    fd9c:	cmp	r3, #8
    fda0:	beq	feb8 <xport_begin_data+0x4b0>
    fda4:	add	r1, sp, #32
    fda8:	mov	r0, r4
    fdac:	bl	f470 <xport_write_header_record>
    fdb0:	cmp	r0, #0
    fdb4:	bne	fb2c <xport_begin_data+0x124>
    fdb8:	mov	r0, r4
    fdbc:	bl	f4e0 <xport_write_variables>
    fdc0:	cmp	r0, #0
    fdc4:	bne	fb2c <xport_begin_data+0x124>
    fdc8:	mov	r2, #36	; 0x24
    fdcc:	mov	r1, #0
    fdd0:	add	r0, sp, #32
    fdd4:	bl	42d0 <memset@plt>
    fdd8:	ldr	r3, [pc, #360]	; ff48 <xport_begin_data+0x540>
    fddc:	str	r3, [sp, #32]
    fde0:	mov	r3, #0
    fde4:	strb	r3, [sp, #40]	; 0x28
    fde8:	ldr	r3, [r4, #8]
    fdec:	cmp	r3, #8
    fdf0:	beq	fed0 <xport_begin_data+0x4c8>
    fdf4:	add	r1, sp, #32
    fdf8:	mov	r0, r4
    fdfc:	bl	f470 <xport_write_header_record>
    fe00:	b	fb2c <xport_begin_data+0x124>
    fe04:	ldr	r3, [pc, #320]	; ff4c <xport_begin_data+0x544>
    fe08:	add	r3, pc, r3
    fe0c:	ldm	r3, {r0, r1}
    fe10:	str	r0, [sp, #32]
    fe14:	strh	r1, [sp, #36]	; 0x24
    fe18:	lsr	r1, r1, #16
    fe1c:	strb	r1, [sp, #38]	; 0x26
    fe20:	b	fc24 <xport_begin_data+0x21c>
    fe24:	ldr	r3, [pc, #292]	; ff50 <xport_begin_data+0x548>
    fe28:	add	r3, pc, r3
    fe2c:	ldm	r3, {r0, r1}
    fe30:	add	r3, sp, #32
    fe34:	stm	r3, {r0, r1}
    fe38:	b	fc74 <xport_begin_data+0x26c>
    fe3c:	ldrb	r3, [r4, #188]	; 0xbc
    fe40:	cmp	r3, #0
    fe44:	addne	r3, r4, #188	; 0xbc
    fe48:	beq	feac <xport_begin_data+0x4a4>
    fe4c:	add	r2, sp, #116	; 0x74
    fe50:	str	r2, [sp, #16]
    fe54:	ldr	r2, [pc, #248]	; ff54 <xport_begin_data+0x54c>
    fe58:	add	r2, pc, r2
    fe5c:	str	r2, [sp, #12]
    fe60:	ldr	r2, [pc, #240]	; ff58 <xport_begin_data+0x550>
    fe64:	add	r2, pc, r2
    fe68:	str	r2, [sp, #8]
    fe6c:	ldr	r2, [pc, #232]	; ff5c <xport_begin_data+0x554>
    fe70:	add	r2, pc, r2
    fe74:	str	r2, [sp, #4]
    fe78:	str	r3, [sp]
    fe7c:	ldr	r3, [pc, #220]	; ff60 <xport_begin_data+0x558>
    fe80:	add	r3, pc, r3
    fe84:	ldr	r2, [pc, #216]	; ff64 <xport_begin_data+0x55c>
    fe88:	add	r2, pc, r2
    fe8c:	mov	r1, #81	; 0x51
    fe90:	add	r5, sp, #32
    fe94:	mov	r0, r5
    fe98:	bl	42ac <snprintf@plt>
    fe9c:	mov	r1, r5
    fea0:	mov	r0, r4
    fea4:	bl	f418 <xport_write_record>
    fea8:	b	fd10 <xport_begin_data+0x308>
    feac:	ldr	r3, [pc, #180]	; ff68 <xport_begin_data+0x560>
    feb0:	add	r3, pc, r3
    feb4:	b	fe4c <xport_begin_data+0x444>
    feb8:	ldr	r3, [pc, #172]	; ff6c <xport_begin_data+0x564>
    febc:	add	r3, pc, r3
    fec0:	ldm	r3, {r0, r1}
    fec4:	add	r3, sp, #32
    fec8:	stm	r3, {r0, r1}
    fecc:	b	fda4 <xport_begin_data+0x39c>
    fed0:	ldr	r3, [pc, #152]	; ff70 <xport_begin_data+0x568>
    fed4:	add	r3, pc, r3
    fed8:	ldm	r3, {r0, r1}
    fedc:	str	r0, [sp, #32]
    fee0:	strh	r1, [sp, #36]	; 0x24
    fee4:	b	fdf4 <xport_begin_data+0x3ec>
    fee8:	.word	0x000355e0
    feec:	.word	0x51eb851f
    fef0:	.word	0x000002dc
    fef4:	.word	0x00015afc
    fef8:	.word	0x00015a10
    fefc:	.word	0x0001595c
    ff00:	.word	0x00015a98
    ff04:	.word	0x00015e18
    ff08:	.word	0x00015ab0
    ff0c:	.word	0x00015aac
    ff10:	.word	0x00015aa8
    ff14:	.word	0x00015a58
    ff18:	.word	0x00015920
    ff1c:	.word	0x000158b4
    ff20:	.word	0x000154c4
    ff24:	.word	0x00015cc4
    ff28:	.word	0x0001595c
    ff2c:	.word	0x00015958
    ff30:	.word	0x00015984
    ff34:	.word	0x00015900
    ff38:	.word	0x000158fc
    ff3c:	.word	0x00015c5c
    ff40:	.word	0x0001592c
    ff44:	.word	0x0001578c
    ff48:	.word	0x0053424f
    ff4c:	.word	0x000156b0
    ff50:	.word	0x000156a0
    ff54:	.word	0x000157c4
    ff58:	.word	0x000157c0
    ff5c:	.word	0x000157ec
    ff60:	.word	0x00015768
    ff64:	.word	0x000157ac
    ff68:	.word	0x000152b8
    ff6c:	.word	0x00015624
    ff70:	.word	0x00015614

0000ff74 <readstat_begin_writing_xport>:
    ff74:	push	{r4, lr}
    ff78:	ldr	r3, [pc, #204]	; 1004c <readstat_begin_writing_xport+0xd8>
    ff7c:	add	r3, pc, r3
    ff80:	ldr	ip, [r0, #8]
    ff84:	cmp	ip, #0
    ff88:	moveq	ip, #8
    ff8c:	streq	ip, [r0, #8]
    ff90:	ldr	ip, [pc, #184]	; 10050 <readstat_begin_writing_xport+0xdc>
    ff94:	add	ip, pc, ip
    ff98:	str	ip, [r0, #292]	; 0x124
    ff9c:	ldr	ip, [pc, #176]	; 10054 <readstat_begin_writing_xport+0xe0>
    ffa0:	add	ip, pc, ip
    ffa4:	str	ip, [r0, #236]	; 0xec
    ffa8:	ldr	ip, [pc, #168]	; 10058 <readstat_begin_writing_xport+0xe4>
    ffac:	add	ip, pc, ip
    ffb0:	str	ip, [r0, #240]	; 0xf0
    ffb4:	ldr	ip, [pc, #160]	; 1005c <readstat_begin_writing_xport+0xe8>
    ffb8:	add	ip, pc, ip
    ffbc:	str	ip, [r0, #244]	; 0xf4
    ffc0:	ldr	ip, [pc, #152]	; 10060 <readstat_begin_writing_xport+0xec>
    ffc4:	add	ip, pc, ip
    ffc8:	str	ip, [r0, #248]	; 0xf8
    ffcc:	ldr	ip, [pc, #144]	; 10064 <readstat_begin_writing_xport+0xf0>
    ffd0:	add	ip, pc, ip
    ffd4:	str	ip, [r0, #252]	; 0xfc
    ffd8:	ldr	ip, [pc, #136]	; 10068 <readstat_begin_writing_xport+0xf4>
    ffdc:	add	ip, pc, ip
    ffe0:	str	ip, [r0, #256]	; 0x100
    ffe4:	ldr	ip, [pc, #128]	; 1006c <readstat_begin_writing_xport+0xf8>
    ffe8:	add	ip, pc, ip
    ffec:	str	ip, [r0, #264]	; 0x108
    fff0:	ldr	ip, [pc, #120]	; 10070 <readstat_begin_writing_xport+0xfc>
    fff4:	add	ip, pc, ip
    fff8:	str	ip, [r0, #268]	; 0x10c
    fffc:	ldr	ip, [pc, #112]	; 10074 <readstat_begin_writing_xport+0x100>
   10000:	add	ip, pc, ip
   10004:	str	ip, [r0, #272]	; 0x110
   10008:	ldr	ip, [pc, #104]	; 10078 <readstat_begin_writing_xport+0x104>
   1000c:	add	ip, pc, ip
   10010:	str	ip, [r0, #228]	; 0xe4
   10014:	ldr	ip, [pc, #96]	; 1007c <readstat_begin_writing_xport+0x108>
   10018:	ldr	r3, [r3, ip]
   1001c:	str	r3, [r0, #232]	; 0xe8
   10020:	ldr	r3, [pc, #88]	; 10080 <readstat_begin_writing_xport+0x10c>
   10024:	add	r3, pc, r3
   10028:	str	r3, [r0, #276]	; 0x114
   1002c:	ldr	r3, [pc, #80]	; 10084 <readstat_begin_writing_xport+0x110>
   10030:	add	r3, pc, r3
   10034:	str	r3, [r0, #284]	; 0x11c
   10038:	ldr	r3, [pc, #72]	; 10088 <readstat_begin_writing_xport+0x114>
   1003c:	add	r3, pc, r3
   10040:	str	r3, [r0, #280]	; 0x118
   10044:	bl	3f88 <readstat_begin_writing_file@plt>
   10048:	pop	{r4, pc}
   1004c:	.word	0x0003507c
   10050:	.word	0xfffff3fc
   10054:	.word	0xfffff3dc
   10058:	.word	0xfffff3bc
   1005c:	.word	0xfffff39c
   10060:	.word	0xfffff380
   10064:	.word	0xfffff320
   10068:	.word	0xfffff2a0
   1006c:	.word	0xfffff410
   10070:	.word	0xfffff204
   10074:	.word	0xfffff25c
   10078:	.word	0xfffff1b8
   1007c:	.word	0x000002f0
   10080:	.word	0xfffff9dc
   10084:	.word	0xfffff220
   10088:	.word	0xfffff1cc

0001008c <por_ctx_init>:
   1008c:	push	{r4, lr}
   10090:	mov	r1, #660	; 0x294
   10094:	mov	r0, #1
   10098:	bl	3d78 <calloc@plt>
   1009c:	mov	r4, r0
   100a0:	mov	r3, #32
   100a4:	strb	r3, [r0, #48]	; 0x30
   100a8:	mov	r3, #20
   100ac:	str	r3, [r0, #608]	; 0x260
   100b0:	mov	r0, #1024	; 0x400
   100b4:	bl	41bc <ck_hash_table_init@plt>
   100b8:	str	r0, [r4, #656]	; 0x290
   100bc:	mov	r0, r4
   100c0:	pop	{r4, pc}

000100c4 <por_ctx_free>:
   100c4:	push	{r4, r5, r6, lr}
   100c8:	mov	r4, r0
   100cc:	ldr	r0, [r0, #616]	; 0x268
   100d0:	cmp	r0, #0
   100d4:	beq	100dc <por_ctx_free+0x18>
   100d8:	bl	3ee0 <free@plt>
   100dc:	ldr	r3, [r4, #652]	; 0x28c
   100e0:	cmp	r3, #0
   100e4:	beq	10138 <por_ctx_free+0x74>
   100e8:	ldr	r3, [r4, #632]	; 0x278
   100ec:	cmp	r3, #0
   100f0:	ble	10130 <por_ctx_free+0x6c>
   100f4:	mov	r5, #0
   100f8:	mov	r6, r5
   100fc:	b	10114 <por_ctx_free+0x50>
   10100:	add	r6, r6, #1
   10104:	add	r5, r5, #280	; 0x118
   10108:	ldr	r3, [r4, #632]	; 0x278
   1010c:	cmp	r3, r6
   10110:	ble	10130 <por_ctx_free+0x6c>
   10114:	ldr	r3, [r4, #652]	; 0x28c
   10118:	add	r3, r3, r5
   1011c:	ldr	r0, [r3, #264]	; 0x108
   10120:	cmp	r0, #0
   10124:	beq	10100 <por_ctx_free+0x3c>
   10128:	bl	3ee0 <free@plt>
   1012c:	b	10100 <por_ctx_free+0x3c>
   10130:	ldr	r0, [r4, #652]	; 0x28c
   10134:	bl	3ee0 <free@plt>
   10138:	ldr	r3, [r4, #648]	; 0x288
   1013c:	cmp	r3, #0
   10140:	beq	10188 <por_ctx_free+0xc4>
   10144:	ldr	r3, [r4, #632]	; 0x278
   10148:	cmp	r3, #0
   1014c:	ble	10180 <por_ctx_free+0xbc>
   10150:	mov	r5, #0
   10154:	b	10168 <por_ctx_free+0xa4>
   10158:	add	r5, r5, #1
   1015c:	ldr	r3, [r4, #632]	; 0x278
   10160:	cmp	r3, r5
   10164:	ble	10180 <por_ctx_free+0xbc>
   10168:	ldr	r3, [r4, #648]	; 0x288
   1016c:	ldr	r0, [r3, r5, lsl #2]
   10170:	cmp	r0, #0
   10174:	beq	10158 <por_ctx_free+0x94>
   10178:	bl	3ee0 <free@plt>
   1017c:	b	10158 <por_ctx_free+0x94>
   10180:	ldr	r0, [r4, #648]	; 0x288
   10184:	bl	3ee0 <free@plt>
   10188:	ldr	r0, [r4, #656]	; 0x290
   1018c:	cmp	r0, #0
   10190:	beq	10198 <por_ctx_free+0xd4>
   10194:	bl	4270 <ck_hash_table_free@plt>
   10198:	ldr	r0, [r4, #612]	; 0x264
   1019c:	cmp	r0, #0
   101a0:	beq	101a8 <por_ctx_free+0xe4>
   101a4:	bl	3df0 <iconv_close@plt>
   101a8:	mov	r0, r4
   101ac:	bl	3ee0 <free@plt>
   101b0:	pop	{r4, r5, r6, pc}

000101b4 <por_utf8_encode>:
   101b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   101b8:	sub	sp, sp, #12
   101bc:	ldr	sl, [sp, #48]	; 0x30
   101c0:	subs	r6, r1, #0
   101c4:	beq	10280 <por_utf8_encode+0xcc>
   101c8:	mov	r7, r3
   101cc:	mov	r8, r2
   101d0:	mov	r5, r0
   101d4:	add	r6, r0, r6
   101d8:	mov	r4, #0
   101dc:	ldr	r3, [pc, #180]	; 10298 <por_utf8_encode+0xe4>
   101e0:	add	r3, pc, r3
   101e4:	str	r3, [sp, #4]
   101e8:	mov	fp, #32
   101ec:	b	1020c <por_utf8_encode+0x58>
   101f0:	add	r3, r4, #1
   101f4:	cmp	r3, r7
   101f8:	bhi	1028c <por_utf8_encode+0xd8>
   101fc:	strb	r2, [r8, r4]
   10200:	mov	r4, r3
   10204:	cmp	r5, r6
   10208:	beq	1028c <por_utf8_encode+0xd8>
   1020c:	ldrb	r3, [r5], #1
   10210:	lsl	r3, r3, #1
   10214:	ldrh	r2, [sl, r3]
   10218:	cmp	r2, #0
   1021c:	beq	1026c <por_utf8_encode+0xb8>
   10220:	cmp	r2, #31
   10224:	bls	10288 <por_utf8_encode+0xd4>
   10228:	cmp	r2, #127	; 0x7f
   1022c:	bls	101f0 <por_utf8_encode+0x3c>
   10230:	ldr	r3, [pc, #100]	; 1029c <por_utf8_encode+0xe8>
   10234:	cmp	r2, r3
   10238:	bhi	10270 <por_utf8_encode+0xbc>
   1023c:	add	r3, r4, #2
   10240:	cmp	r7, r3
   10244:	bcc	1028c <por_utf8_encode+0xd8>
   10248:	add	r9, r8, r4
   1024c:	ldr	r1, [sp, #4]
   10250:	mov	r0, r9
   10254:	bl	4414 <sprintf@plt>
   10258:	cmp	r0, #0
   1025c:	addgt	r4, r4, r0
   10260:	addle	r4, r4, #1
   10264:	strble	fp, [r9]
   10268:	b	10204 <por_utf8_encode+0x50>
   1026c:	ldr	r2, [pc, #44]	; 102a0 <por_utf8_encode+0xec>
   10270:	add	r3, r4, #3
   10274:	cmp	r7, r3
   10278:	bcs	10248 <por_utf8_encode+0x94>
   1027c:	b	1028c <por_utf8_encode+0xd8>
   10280:	mov	r4, #0
   10284:	b	1028c <por_utf8_encode+0xd8>
   10288:	mvn	r4, #0
   1028c:	mov	r0, r4
   10290:	add	sp, sp, #12
   10294:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10298:	.word	0x000154a4
   1029c:	.word	0x000007ff
   102a0:	.word	0x0000fffd

000102a4 <por_utf8_decode>:
   102a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   102a8:	sub	sp, sp, #28
   102ac:	ldr	r8, [sp, #64]	; 0x40
   102b0:	ldr	fp, [sp, #68]	; 0x44
   102b4:	mov	r1, #0
   102b8:	str	r1, [sp, #20]
   102bc:	str	r1, [sp, #16]
   102c0:	subs	sl, r3, #0
   102c4:	beq	1037c <por_utf8_decode+0xd8>
   102c8:	mov	r5, r0
   102cc:	mov	r6, r2
   102d0:	mov	r4, #1
   102d4:	add	r3, sp, #16
   102d8:	str	r3, [sp, #4]
   102dc:	add	r3, sp, #20
   102e0:	str	r3, [sp, #8]
   102e4:	ldr	r3, [pc, #192]	; 103ac <por_utf8_decode+0x108>
   102e8:	add	r3, pc, r3
   102ec:	str	r3, [sp, #12]
   102f0:	mov	r9, r1
   102f4:	b	1034c <por_utf8_decode+0xa8>
   102f8:	ldr	r3, [sp, #4]
   102fc:	ldr	r2, [sp, #8]
   10300:	ldr	r1, [sp, #12]
   10304:	mov	r0, r5
   10308:	bl	42b8 <__isoc99_sscanf@plt>
   1030c:	cmp	r0, #0
   10310:	beq	10394 <por_utf8_decode+0xf0>
   10314:	ldr	r3, [sp, #20]
   10318:	cmp	r3, fp
   1031c:	bcs	1039c <por_utf8_decode+0xf8>
   10320:	ldrb	r3, [r8, r3]
   10324:	cmp	r3, #0
   10328:	beq	103a4 <por_utf8_decode+0x100>
   1032c:	strb	r3, [r6]
   10330:	ldr	r3, [sp, #16]
   10334:	add	r5, r5, r3
   10338:	str	r9, [sp, #16]
   1033c:	add	r4, r4, #1
   10340:	add	r6, r6, #1
   10344:	cmp	sl, r4
   10348:	bcc	10388 <por_utf8_decode+0xe4>
   1034c:	mov	r7, r4
   10350:	ldrb	r2, [r5]
   10354:	sub	r3, r2, #32
   10358:	uxtb	r3, r3
   1035c:	cmp	r3, #94	; 0x5e
   10360:	bhi	102f8 <por_utf8_decode+0x54>
   10364:	ldrb	r3, [r8, r2]
   10368:	cmp	r3, #0
   1036c:	beq	10384 <por_utf8_decode+0xe0>
   10370:	strb	r3, [r6]
   10374:	add	r5, r5, #1
   10378:	b	10338 <por_utf8_decode+0x94>
   1037c:	mov	r7, #0
   10380:	b	10388 <por_utf8_decode+0xe4>
   10384:	mvn	r7, #0
   10388:	mov	r0, r7
   1038c:	add	sp, sp, #28
   10390:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10394:	mvn	r7, #0
   10398:	b	10388 <por_utf8_decode+0xe4>
   1039c:	mvn	r7, #0
   103a0:	b	10388 <por_utf8_decode+0xe4>
   103a4:	mvn	r7, #0
   103a8:	b	10388 <por_utf8_decode+0xe4>
   103ac:	.word	0x000153a0

000103b0 <readstat_por_parse_double>:
   103b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   103b4:	vpush	{d8-d9}
   103b8:	sub	sp, sp, #1072	; 0x430
   103bc:	sub	sp, sp, #4
   103c0:	mov	r6, r0
   103c4:	str	r1, [sp, #44]	; 0x2c
   103c8:	str	r2, [sp, #32]
   103cc:	str	r3, [sp, #40]	; 0x28
   103d0:	add	r5, r0, r1
   103d4:	cmp	r0, r5
   103d8:	beq	1070c <readstat_por_parse_double+0x35c>
   103dc:	mov	r8, r0
   103e0:	mov	r3, #0
   103e4:	str	r3, [sp, #28]
   103e8:	str	r3, [sp, #20]
   103ec:	mov	r4, #1
   103f0:	vldr	d7, [pc, #936]	; 107a0 <readstat_por_parse_double+0x3f0>
   103f4:	vmov.f64	d1, d7
   103f8:	vmov.f64	d3, d7
   103fc:	vmov.f64	d6, d7
   10400:	vldr	d4, [pc, #928]	; 107a8 <readstat_por_parse_double+0x3f8>
   10404:	vmov.f64	d8, d7
   10408:	ldr	sl, [pc, #936]	; 107b8 <readstat_por_parse_double+0x408>
   1040c:	add	sl, pc, sl
   10410:	ldr	r3, [pc, #932]	; 107bc <readstat_por_parse_double+0x40c>
   10414:	add	r3, pc, r3
   10418:	str	r3, [sp, #24]
   1041c:	ldr	fp, [pc, #924]	; 107c0 <readstat_por_parse_double+0x410>
   10420:	add	fp, pc, fp
   10424:	ldr	r3, [pc, #920]	; 107c4 <readstat_por_parse_double+0x414>
   10428:	add	r3, pc, r3
   1042c:	add	r3, r3, #216	; 0xd8
   10430:	str	r3, [sp, #36]	; 0x24
   10434:	vmov.f64	d2, d4
   10438:	vmov.f64	d0, d7
   1043c:	b	106d0 <readstat_por_parse_double+0x320>
   10440:	cmp	r3, r1
   10444:	bhi	10478 <readstat_por_parse_double+0xc8>
   10448:	sub	r2, r1, r3
   1044c:	add	r0, r3, r2, asr #1
   10450:	ldrb	r2, [r3, r2, asr #1]
   10454:	cmp	ip, r2
   10458:	subcc	r1, r0, #1
   1045c:	bcc	10440 <readstat_por_parse_double+0x90>
   10460:	cmp	ip, r2
   10464:	addhi	r3, r0, #1
   10468:	bhi	10440 <readstat_por_parse_double+0x90>
   1046c:	sub	r0, r0, lr
   10470:	add	r7, r7, r0
   10474:	b	104f8 <readstat_por_parse_double+0x148>
   10478:	add	lr, lr, r9
   1047c:	add	r7, r7, r9
   10480:	ldr	r3, [sp, #24]
   10484:	add	r4, r3, r4
   10488:	ldrb	r4, [r4, #104]	; 0x68
   1048c:	cmp	r4, #0
   10490:	ble	104f8 <readstat_por_parse_double+0x148>
   10494:	add	r1, lr, r4, lsl #1
   10498:	sub	r1, r1, #2
   1049c:	cmp	lr, r1
   104a0:	bhi	104f4 <readstat_por_parse_double+0x144>
   104a4:	ldrb	ip, [r8]
   104a8:	mov	r2, lr
   104ac:	b	104b8 <readstat_por_parse_double+0x108>
   104b0:	cmp	r1, r2
   104b4:	bcc	104f4 <readstat_por_parse_double+0x144>
   104b8:	sub	r3, r1, r2
   104bc:	asr	r3, r3, #1
   104c0:	bic	r3, r3, #1
   104c4:	add	r0, r2, r3
   104c8:	ldrb	r3, [r2, r3]
   104cc:	cmp	r3, ip
   104d0:	subhi	r1, r0, #2
   104d4:	bhi	104b0 <readstat_por_parse_double+0x100>
   104d8:	ldrb	r3, [r0, #1]
   104dc:	cmp	r3, ip
   104e0:	addcc	r2, r0, #2
   104e4:	bcc	104b0 <readstat_por_parse_double+0x100>
   104e8:	sub	r0, r0, lr
   104ec:	add	r7, r7, r0, asr #1
   104f0:	b	104f8 <readstat_por_parse_double+0x148>
   104f4:	add	r7, r7, r4
   104f8:	add	r7, fp, r7
   104fc:	ldrb	r4, [r7, #120]	; 0x78
   10500:	ldrb	r2, [r7, #168]	; 0xa8
   10504:	cmp	r2, #0
   10508:	beq	106bc <readstat_por_parse_double+0x30c>
   1050c:	ldr	r1, [sp, #36]	; 0x24
   10510:	add	r3, r1, r2
   10514:	ldrb	r1, [r1, r2]
   10518:	add	r1, r3, r1
   1051c:	cmp	r1, r3
   10520:	beq	106bc <readstat_por_parse_double+0x30c>
   10524:	ldrb	r2, [r3, #1]!
   10528:	cmp	r2, #10
   1052c:	addls	pc, pc, r2, lsl #2
   10530:	b	1051c <readstat_por_parse_double+0x16c>
   10534:	b	10568 <readstat_por_parse_double+0x1b8>
   10538:	b	105bc <readstat_por_parse_double+0x20c>
   1053c:	b	10560 <readstat_por_parse_double+0x1b0>
   10540:	b	106b4 <readstat_por_parse_double+0x304>
   10544:	b	10610 <readstat_por_parse_double+0x260>
   10548:	b	1061c <readstat_por_parse_double+0x26c>
   1054c:	b	10624 <readstat_por_parse_double+0x274>
   10550:	b	10630 <readstat_por_parse_double+0x280>
   10554:	b	10638 <readstat_por_parse_double+0x288>
   10558:	b	10644 <readstat_por_parse_double+0x294>
   1055c:	b	1064c <readstat_por_parse_double+0x29c>
   10560:	vmov.f64	d7, d0
   10564:	b	1051c <readstat_por_parse_double+0x16c>
   10568:	ldrb	r2, [r8]
   1056c:	sub	r0, r2, #48	; 0x30
   10570:	uxtb	r0, r0
   10574:	cmp	r0, #9
   10578:	bhi	10594 <readstat_por_parse_double+0x1e4>
   1057c:	sub	r2, r2, #48	; 0x30
   10580:	vmov	s11, r2
   10584:	vcvt.f64.s32	d5, s11
   10588:	vmla.f64	d5, d7, d2
   1058c:	vmov.f64	d7, d5
   10590:	b	1051c <readstat_por_parse_double+0x16c>
   10594:	sub	r0, r2, #65	; 0x41
   10598:	uxtb	r0, r0
   1059c:	cmp	r0, #19
   105a0:	bhi	1051c <readstat_por_parse_double+0x16c>
   105a4:	sub	r2, r2, #55	; 0x37
   105a8:	vmov	s11, r2
   105ac:	vcvt.f64.s32	d5, s11
   105b0:	vmla.f64	d5, d7, d2
   105b4:	vmov.f64	d7, d5
   105b8:	b	1051c <readstat_por_parse_double+0x16c>
   105bc:	ldrb	r2, [r8]
   105c0:	sub	r0, r2, #48	; 0x30
   105c4:	uxtb	r0, r0
   105c8:	cmp	r0, #9
   105cc:	bhi	105ec <readstat_por_parse_double+0x23c>
   105d0:	sub	r2, r2, #48	; 0x30
   105d4:	vmov	s11, r2
   105d8:	vcvt.f64.s32	d5, s11
   105dc:	vdiv.f64	d9, d5, d4
   105e0:	vadd.f64	d6, d6, d9
   105e4:	vmul.f64	d4, d4, d2
   105e8:	b	1051c <readstat_por_parse_double+0x16c>
   105ec:	sub	r0, r2, #65	; 0x41
   105f0:	uxtb	r0, r0
   105f4:	cmp	r0, #19
   105f8:	subls	r2, r2, #55	; 0x37
   105fc:	vmovls	s11, r2
   10600:	vcvtls.f64.s32	d5, s11
   10604:	vdivls.f64	d9, d5, d4
   10608:	vaddls.f64	d6, d6, d9
   1060c:	b	105e4 <readstat_por_parse_double+0x234>
   10610:	mov	r2, #1
   10614:	str	r2, [sp, #20]
   10618:	b	1051c <readstat_por_parse_double+0x16c>
   1061c:	vmov.f64	d3, d7
   10620:	b	1051c <readstat_por_parse_double+0x16c>
   10624:	mov	r2, #1
   10628:	str	r2, [sp, #28]
   1062c:	b	1051c <readstat_por_parse_double+0x16c>
   10630:	vmov.f64	d1, d7
   10634:	b	1051c <readstat_por_parse_double+0x16c>
   10638:	mov	r2, #1
   1063c:	str	r2, [sp, #20]
   10640:	b	1051c <readstat_por_parse_double+0x16c>
   10644:	vldr	d8, [pc, #356]	; 107b0 <readstat_por_parse_double+0x400>
   10648:	b	1051c <readstat_por_parse_double+0x16c>
   1064c:	add	r5, r8, #1
   10650:	mov	r7, #1
   10654:	vcmp.f64	d8, d8
   10658:	vmrs	APSR_nzcv, fpscr
   1065c:	bvs	10688 <readstat_por_parse_double+0x2d8>
   10660:	vadd.f64	d8, d6, d3
   10664:	ldr	r3, [sp, #28]
   10668:	cmp	r3, #0
   1066c:	vnegne.f64	d1, d1
   10670:	vcmp.f64	d1, #0.0
   10674:	vmrs	APSR_nzcv, fpscr
   10678:	bne	10724 <readstat_por_parse_double+0x374>
   1067c:	ldr	r3, [sp, #20]
   10680:	cmp	r3, #0
   10684:	vnegne.f64	d8, d8
   10688:	cmp	r7, #0
   1068c:	beq	10734 <readstat_por_parse_double+0x384>
   10690:	ldr	r3, [sp, #32]
   10694:	cmp	r3, #0
   10698:	ldrne	r3, [sp, #32]
   1069c:	vstrne	d8, [r3]
   106a0:	sub	r0, r5, r6
   106a4:	add	sp, sp, #1072	; 0x430
   106a8:	add	sp, sp, #4
   106ac:	vpop	{d8-d9}
   106b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   106b4:	vldr	d6, [pc, #228]	; 107a0 <readstat_por_parse_double+0x3f0>
   106b8:	b	1051c <readstat_por_parse_double+0x16c>
   106bc:	cmp	r4, #0
   106c0:	beq	10780 <readstat_por_parse_double+0x3d0>
   106c4:	add	r8, r8, #1
   106c8:	cmp	r5, r8
   106cc:	beq	10704 <readstat_por_parse_double+0x354>
   106d0:	add	r3, sl, r4
   106d4:	ldrb	lr, [r3, #56]	; 0x38
   106d8:	add	lr, sl, lr
   106dc:	ldrb	r7, [r3, #72]	; 0x48
   106e0:	ldrb	r9, [r3, #88]	; 0x58
   106e4:	cmp	r9, #0
   106e8:	ble	10480 <readstat_por_parse_double+0xd0>
   106ec:	sub	r1, r9, #1
   106f0:	adds	r1, lr, r1
   106f4:	bcs	10478 <readstat_por_parse_double+0xc8>
   106f8:	ldrb	ip, [r8]
   106fc:	mov	r3, lr
   10700:	b	10448 <readstat_por_parse_double+0x98>
   10704:	mov	r7, #0
   10708:	b	10654 <readstat_por_parse_double+0x2a4>
   1070c:	mov	r7, #0
   10710:	str	r7, [sp, #20]
   10714:	mov	r4, #1
   10718:	vldr	d8, [pc, #128]	; 107a0 <readstat_por_parse_double+0x3f0>
   1071c:	vmov.f64	d1, d8
   10720:	b	10670 <readstat_por_parse_double+0x2c0>
   10724:	vldr	d0, [pc, #124]	; 107a8 <readstat_por_parse_double+0x3f8>
   10728:	bl	3fac <pow@plt>
   1072c:	vmul.f64	d8, d8, d0
   10730:	b	1067c <readstat_por_parse_double+0x2cc>
   10734:	ldr	r7, [sp, #40]	; 0x28
   10738:	cmp	r7, #0
   1073c:	beq	10778 <readstat_por_parse_double+0x3c8>
   10740:	str	r4, [sp, #8]
   10744:	str	r6, [sp, #4]
   10748:	ldr	r3, [sp, #44]	; 0x2c
   1074c:	str	r3, [sp]
   10750:	sub	r3, r5, r6
   10754:	ldr	r2, [pc, #108]	; 107c8 <readstat_por_parse_double+0x418>
   10758:	add	r2, pc, r2
   1075c:	mov	r1, #1024	; 0x400
   10760:	add	r4, sp, #48	; 0x30
   10764:	mov	r0, r4
   10768:	bl	42ac <snprintf@plt>
   1076c:	ldr	r1, [sp, #1128]	; 0x468
   10770:	mov	r0, r4
   10774:	blx	r7
   10778:	mvn	r0, #0
   1077c:	b	106a4 <readstat_por_parse_double+0x2f4>
   10780:	vcmp.f64	d8, d8
   10784:	vmrs	APSR_nzcv, fpscr
   10788:	movvs	r5, r8
   1078c:	bvs	10734 <readstat_por_parse_double+0x384>
   10790:	mov	r7, r4
   10794:	mov	r5, r8
   10798:	b	10660 <readstat_por_parse_double+0x2b0>
   1079c:	nop			; (mov r0, r0)
	...
   107ac:	.word	0x403e0000
   107b0:	.word	0x00000000
   107b4:	.word	0x7ff80000
   107b8:	.word	0x00015284
   107bc:	.word	0x0001527c
   107c0:	.word	0x00015270
   107c4:	.word	0x00015268
   107c8:	.word	0x00015034
   107cc:	.word	0x00000000

000107d0 <read_bytes>:
   107d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   107d4:	sub	sp, sp, #12
   107d8:	mov	r4, r0
   107dc:	mov	fp, r1
   107e0:	ldr	r7, [r0, #44]	; 0x2c
   107e4:	mov	r5, r1
   107e8:	add	r6, r1, r2
   107ec:	add	r9, sp, #7
   107f0:	mov	r8, #1
   107f4:	mov	sl, #0
   107f8:	b	10848 <read_bytes+0x78>
   107fc:	ldr	r3, [r7, #12]
   10800:	ldr	r2, [r7, #20]
   10804:	mov	r1, r8
   10808:	mov	r0, r9
   1080c:	blx	r3
   10810:	cmp	r0, #0
   10814:	beq	108d0 <read_bytes+0x100>
   10818:	cmn	r0, #1
   1081c:	beq	108d4 <read_bytes+0x104>
   10820:	ldrb	r3, [sp, #7]
   10824:	cmp	r3, #10
   10828:	cmpne	r3, #13
   1082c:	bne	108ac <read_bytes+0xdc>
   10830:	cmp	r3, #13
   10834:	beq	10878 <read_bytes+0xa8>
   10838:	ldr	r3, [r4, #40]	; 0x28
   1083c:	rsb	r3, r3, #80	; 0x50
   10840:	str	r3, [r4, #52]	; 0x34
   10844:	str	sl, [r4, #40]	; 0x28
   10848:	cmp	r5, r6
   1084c:	bcs	108d0 <read_bytes+0x100>
   10850:	ldr	r3, [r4, #52]	; 0x34
   10854:	cmp	r3, #0
   10858:	beq	107fc <read_bytes+0x2c>
   1085c:	ldrb	r3, [r4, #48]	; 0x30
   10860:	strb	r3, [r5]
   10864:	ldr	r3, [r4, #52]	; 0x34
   10868:	sub	r3, r3, #1
   1086c:	str	r3, [r4, #52]	; 0x34
   10870:	add	r5, r5, #1
   10874:	b	10848 <read_bytes+0x78>
   10878:	ldr	r3, [r7, #12]
   1087c:	ldr	r2, [r7, #20]
   10880:	mov	r1, r8
   10884:	mov	r0, r9
   10888:	blx	r3
   1088c:	add	r0, r0, #1
   10890:	cmp	r0, #1
   10894:	bls	108dc <read_bytes+0x10c>
   10898:	ldrb	r3, [sp, #7]
   1089c:	cmp	r3, #10
   108a0:	beq	10838 <read_bytes+0x68>
   108a4:	mvn	r0, #0
   108a8:	b	108d4 <read_bytes+0x104>
   108ac:	ldr	r2, [r4, #40]	; 0x28
   108b0:	cmp	r2, #80	; 0x50
   108b4:	beq	108e4 <read_bytes+0x114>
   108b8:	strb	r3, [r5]
   108bc:	ldr	r3, [r4, #40]	; 0x28
   108c0:	add	r3, r3, #1
   108c4:	str	r3, [r4, #40]	; 0x28
   108c8:	add	r5, r5, #1
   108cc:	b	10848 <read_bytes+0x78>
   108d0:	sub	r0, r5, fp
   108d4:	add	sp, sp, #12
   108d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   108dc:	mvn	r0, #0
   108e0:	b	108d4 <read_bytes+0x104>
   108e4:	mvn	r0, #0
   108e8:	b	108d4 <read_bytes+0x104>

000108ec <read_double_with_peek>:
   108ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   108f0:	sub	sp, sp, #1456	; 0x5b0
   108f4:	sub	sp, sp, #4
   108f8:	mov	r5, r0
   108fc:	mov	sl, r1
   10900:	mov	r6, #0
   10904:	ldr	r7, [pc, #576]	; 10b4c <read_double_with_peek+0x260>
   10908:	add	r3, sp, #1440	; 0x5a0
   1090c:	add	r3, r3, #8
   10910:	strd	r6, [r3]
   10914:	strb	r2, [sp, #1348]	; 0x544
   10918:	mov	r2, #1
   1091c:	add	r1, sp, #1344	; 0x540
   10920:	add	r1, r1, #5
   10924:	bl	107d0 <read_bytes>
   10928:	cmp	r0, #1
   1092c:	movne	r0, #5
   10930:	beq	10940 <read_double_with_peek+0x54>
   10934:	add	sp, sp, #1456	; 0x5b0
   10938:	add	sp, sp, #4
   1093c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10940:	ldrb	r3, [sp, #1348]	; 0x544
   10944:	add	r3, r5, r3, lsl #1
   10948:	ldrh	r3, [r3, #94]	; 0x5e
   1094c:	cmp	r3, #42	; 0x2a
   10950:	beq	10a60 <read_double_with_peek+0x174>
   10954:	ldrb	r3, [sp, #1349]	; 0x545
   10958:	add	r3, r5, r3, lsl #1
   1095c:	ldrh	r3, [r3, #94]	; 0x5e
   10960:	cmp	r3, #47	; 0x2f
   10964:	moveq	r6, #2
   10968:	moveq	r7, #0
   1096c:	beq	109e0 <read_double_with_peek+0xf4>
   10970:	add	r4, sp, #1344	; 0x540
   10974:	add	r4, r4, #6
   10978:	add	r9, sp, #1440	; 0x5a0
   1097c:	add	r9, r9, #7
   10980:	mov	r6, #2
   10984:	mov	r7, #0
   10988:	mov	r8, #1
   1098c:	mov	fp, r4
   10990:	mov	r2, r8
   10994:	mov	r1, r4
   10998:	mov	r0, r5
   1099c:	bl	107d0 <read_bytes>
   109a0:	cmp	r0, #1
   109a4:	bne	10b44 <read_double_with_peek+0x258>
   109a8:	adds	r6, r6, #1
   109ac:	adc	r7, r7, #0
   109b0:	cmp	r4, r9
   109b4:	beq	109d0 <read_double_with_peek+0xe4>
   109b8:	add	r4, r4, #1
   109bc:	ldrb	r3, [fp]
   109c0:	add	r3, r5, r3, lsl #1
   109c4:	ldrh	r3, [r3, #94]	; 0x5e
   109c8:	cmp	r3, #47	; 0x2f
   109cc:	bne	1098c <read_double_with_peek+0xa0>
   109d0:	cmp	r7, #0
   109d4:	cmpeq	r6, #100	; 0x64
   109d8:	moveq	r0, #5
   109dc:	beq	10934 <read_double_with_peek+0x48>
   109e0:	add	r3, r5, #94	; 0x5e
   109e4:	str	r3, [sp]
   109e8:	mov	r3, #300	; 0x12c
   109ec:	add	r2, sp, #1040	; 0x410
   109f0:	add	r2, r2, #8
   109f4:	mov	r1, r6
   109f8:	add	r0, sp, #1344	; 0x540
   109fc:	add	r0, r0, #4
   10a00:	bl	4288 <por_utf8_encode@plt>
   10a04:	mov	r4, r0
   10a08:	mov	r8, r0
   10a0c:	asr	r9, r0, #31
   10a10:	cmn	r0, #1
   10a14:	beq	10a90 <read_double_with_peek+0x1a4>
   10a18:	ldr	r3, [r5, #36]	; 0x24
   10a1c:	str	r3, [sp]
   10a20:	ldr	r3, [r5, #24]
   10a24:	add	r2, sp, #1440	; 0x5a0
   10a28:	add	r2, r2, #8
   10a2c:	mov	r1, r0
   10a30:	add	r0, sp, #1040	; 0x410
   10a34:	add	r0, r0, #8
   10a38:	bl	427c <readstat_por_parse_double@plt>
   10a3c:	cmn	r0, #1
   10a40:	movne	r0, #0
   10a44:	beq	10ae4 <read_double_with_peek+0x1f8>
   10a48:	cmp	sl, #0
   10a4c:	addne	r3, sp, #1440	; 0x5a0
   10a50:	addne	r3, r3, #8
   10a54:	ldrdne	r2, [r3]
   10a58:	strdne	r2, [sl]
   10a5c:	b	10934 <read_double_with_peek+0x48>
   10a60:	ldrb	r3, [sp, #1349]	; 0x545
   10a64:	add	r3, r5, r3, lsl #1
   10a68:	ldrh	r3, [r3, #94]	; 0x5e
   10a6c:	cmp	r3, #46	; 0x2e
   10a70:	bne	10954 <read_double_with_peek+0x68>
   10a74:	cmp	sl, #0
   10a78:	moveq	r0, #0
   10a7c:	movne	r2, #0
   10a80:	ldrne	r3, [pc, #196]	; 10b4c <read_double_with_peek+0x260>
   10a84:	strdne	r2, [sl]
   10a88:	movne	r0, #0
   10a8c:	b	10934 <read_double_with_peek+0x48>
   10a90:	ldr	r3, [r5, #24]
   10a94:	cmp	r3, #0
   10a98:	moveq	r0, #16
   10a9c:	beq	10a48 <read_double_with_peek+0x15c>
   10aa0:	add	r4, sp, #24
   10aa4:	add	r3, sp, #1344	; 0x540
   10aa8:	add	r3, r3, #4
   10aac:	str	r3, [sp, #12]
   10ab0:	str	r6, [sp, #8]
   10ab4:	strd	r6, [sp]
   10ab8:	ldr	r2, [pc, #144]	; 10b50 <read_double_with_peek+0x264>
   10abc:	add	r2, pc, r2
   10ac0:	mov	r1, #1024	; 0x400
   10ac4:	mov	r0, r4
   10ac8:	bl	42ac <snprintf@plt>
   10acc:	ldr	r3, [r5, #24]
   10ad0:	ldr	r1, [r5, #36]	; 0x24
   10ad4:	mov	r0, r4
   10ad8:	blx	r3
   10adc:	mov	r0, #16
   10ae0:	b	10a48 <read_double_with_peek+0x15c>
   10ae4:	ldr	r3, [r5, #24]
   10ae8:	cmp	r3, #0
   10aec:	moveq	r0, #5
   10af0:	beq	10a48 <read_double_with_peek+0x15c>
   10af4:	add	r6, sp, #24
   10af8:	add	r3, sp, #1344	; 0x540
   10afc:	add	r3, r3, #4
   10b00:	str	r3, [sp, #16]
   10b04:	add	r3, sp, #1040	; 0x410
   10b08:	add	r3, r3, #8
   10b0c:	str	r3, [sp, #12]
   10b10:	str	r4, [sp, #8]
   10b14:	strd	r8, [sp]
   10b18:	ldr	r2, [pc, #52]	; 10b54 <read_double_with_peek+0x268>
   10b1c:	add	r2, pc, r2
   10b20:	mov	r1, #1024	; 0x400
   10b24:	mov	r0, r6
   10b28:	bl	42ac <snprintf@plt>
   10b2c:	ldr	r3, [r5, #24]
   10b30:	ldr	r1, [r5, #36]	; 0x24
   10b34:	mov	r0, r6
   10b38:	blx	r3
   10b3c:	mov	r0, #5
   10b40:	b	10a48 <read_double_with_peek+0x15c>
   10b44:	mov	r0, #5
   10b48:	b	10934 <read_double_with_peek+0x48>
   10b4c:	.word	0x7ff80000
   10b50:	.word	0x00014d04
   10b54:	.word	0x00014cd8

00010b58 <maybe_read_string>:
   10b58:	push	{r4, r5, r6, r7, r8, r9, lr}
   10b5c:	sub	sp, sp, #1040	; 0x410
   10b60:	sub	sp, sp, #12
   10b64:	mov	r6, r0
   10b68:	mov	r7, r1
   10b6c:	mov	r8, r2
   10b70:	mov	r4, r3
   10b74:	mov	r2, #1
   10b78:	add	r1, sp, #15
   10b7c:	bl	107d0 <read_bytes>
   10b80:	cmp	r0, #1
   10b84:	movne	r0, #0
   10b88:	movne	r5, #5
   10b8c:	beq	10ba8 <maybe_read_string+0x50>
   10b90:	cmp	r4, #0
   10b94:	strne	r0, [r4]
   10b98:	mov	r0, r5
   10b9c:	add	sp, sp, #1040	; 0x410
   10ba0:	add	sp, sp, #12
   10ba4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   10ba8:	ldrb	r2, [sp, #15]
   10bac:	add	r3, r6, r2, lsl #1
   10bb0:	ldrh	r3, [r3, #94]	; 0x5e
   10bb4:	cmp	r3, #90	; 0x5a
   10bb8:	beq	10cec <maybe_read_string+0x194>
   10bbc:	add	r1, sp, #1040	; 0x410
   10bc0:	mov	r0, r6
   10bc4:	bl	108ec <read_double_with_peek>
   10bc8:	subs	r5, r0, #0
   10bcc:	bne	10c74 <maybe_read_string+0x11c>
   10bd0:	add	r3, sp, #1040	; 0x410
   10bd4:	vldr	d7, [r3]
   10bd8:	vcmpe.f64	d7, #0.0
   10bdc:	vmrs	APSR_nzcv, fpscr
   10be0:	movmi	r5, #5
   10be4:	bmi	10b98 <maybe_read_string+0x40>
   10be8:	vldr	d6, [pc, #264]	; 10cf8 <maybe_read_string+0x1a0>
   10bec:	vcmpe.f64	d7, d6
   10bf0:	vmrs	APSR_nzcv, fpscr
   10bf4:	movgt	r5, #5
   10bf8:	bgt	10b98 <maybe_read_string+0x40>
   10bfc:	vcmp.f64	d7, d7
   10c00:	vmrs	APSR_nzcv, fpscr
   10c04:	movvs	r5, #5
   10c08:	bvs	10b98 <maybe_read_string+0x40>
   10c0c:	vcvt.u32.f64	s15, d7
   10c10:	vmov	r9, s15
   10c14:	ldr	r3, [r6, #620]	; 0x26c
   10c18:	cmp	r9, r3
   10c1c:	bhi	10c7c <maybe_read_string+0x124>
   10c20:	mov	r2, r9
   10c24:	ldr	r1, [r6, #616]	; 0x268
   10c28:	mov	r0, r6
   10c2c:	bl	107d0 <read_bytes>
   10c30:	cmn	r0, #1
   10c34:	moveq	r5, #2
   10c38:	beq	10b98 <maybe_read_string+0x40>
   10c3c:	add	r3, r6, #94	; 0x5e
   10c40:	str	r3, [sp]
   10c44:	sub	r3, r8, #1
   10c48:	mov	r2, r7
   10c4c:	mov	r1, r9
   10c50:	ldr	r0, [r6, #616]	; 0x268
   10c54:	bl	4288 <por_utf8_encode@plt>
   10c58:	cmn	r0, #1
   10c5c:	beq	10ca0 <maybe_read_string+0x148>
   10c60:	mov	r3, #0
   10c64:	strb	r3, [r7, r0]
   10c68:	cmp	r4, r3
   10c6c:	strne	r3, [r4]
   10c70:	b	10b98 <maybe_read_string+0x40>
   10c74:	mov	r0, #0
   10c78:	b	10b90 <maybe_read_string+0x38>
   10c7c:	vstr	s15, [r6, #620]	; 0x26c
   10c80:	vmov	r1, s15
   10c84:	ldr	r0, [r6, #616]	; 0x268
   10c88:	bl	4018 <realloc@plt>
   10c8c:	str	r0, [r6, #616]	; 0x268
   10c90:	ldr	r2, [r6, #620]	; 0x26c
   10c94:	mov	r1, #0
   10c98:	bl	42d0 <memset@plt>
   10c9c:	b	10c20 <maybe_read_string+0xc8>
   10ca0:	ldr	r3, [r6, #24]
   10ca4:	cmp	r3, #0
   10ca8:	moveq	r5, #16
   10cac:	beq	10b98 <maybe_read_string+0x40>
   10cb0:	add	r4, sp, #16
   10cb4:	ldr	r3, [r6, #616]	; 0x268
   10cb8:	str	r3, [sp]
   10cbc:	mov	r3, r9
   10cc0:	ldr	r2, [pc, #56]	; 10d00 <maybe_read_string+0x1a8>
   10cc4:	add	r2, pc, r2
   10cc8:	mov	r1, #1024	; 0x400
   10ccc:	mov	r0, r4
   10cd0:	bl	42ac <snprintf@plt>
   10cd4:	ldr	r3, [r6, #24]
   10cd8:	ldr	r1, [r6, #36]	; 0x24
   10cdc:	mov	r0, r4
   10ce0:	blx	r3
   10ce4:	mov	r5, #16
   10ce8:	b	10b98 <maybe_read_string+0x40>
   10cec:	mov	r5, #0
   10cf0:	b	10b90 <maybe_read_string+0x38>
   10cf4:	nop			; (mov r0, r0)
   10cf8:	.word	0x00000000
   10cfc:	.word	0x40d38800
   10d00:	.word	0x00014b68

00010d04 <read_string>:
   10d04:	push	{lr}		; (str lr, [sp, #-4]!)
   10d08:	sub	sp, sp, #12
   10d0c:	add	r3, sp, #8
   10d10:	mov	ip, #0
   10d14:	str	ip, [r3, #-4]!
   10d18:	bl	10b58 <maybe_read_string>
   10d1c:	cmp	r0, #0
   10d20:	bne	10d30 <read_string+0x2c>
   10d24:	ldr	r3, [sp, #4]
   10d28:	cmp	r3, #0
   10d2c:	movne	r0, #5
   10d30:	add	sp, sp, #12
   10d34:	pop	{pc}		; (ldr pc, [sp], #4)

00010d38 <read_double>:
   10d38:	push	{r4, r5, lr}
   10d3c:	sub	sp, sp, #12
   10d40:	mov	r4, r0
   10d44:	mov	r5, r1
   10d48:	mov	r2, #1
   10d4c:	add	r1, sp, #7
   10d50:	bl	107d0 <read_bytes>
   10d54:	cmp	r0, #1
   10d58:	movne	r0, #5
   10d5c:	bne	10d70 <read_double+0x38>
   10d60:	ldrb	r2, [sp, #7]
   10d64:	mov	r1, r5
   10d68:	mov	r0, r4
   10d6c:	bl	108ec <read_double_with_peek>
   10d70:	add	sp, sp, #12
   10d74:	pop	{r4, r5, pc}

00010d78 <read_integer_in_range>:
   10d78:	push	{r4, lr}
   10d7c:	vpush	{d8}
   10d80:	sub	sp, sp, #8
   10d84:	vmov	s17, r1
   10d88:	vmov	s16, r2
   10d8c:	mov	r4, r3
   10d90:	add	r1, sp, #8
   10d94:	mov	r2, #0
   10d98:	ldr	r3, [pc, #96]	; 10e00 <read_integer_in_range+0x88>
   10d9c:	strd	r2, [r1, #-8]!
   10da0:	bl	10d38 <read_double>
   10da4:	cmp	r0, #0
   10da8:	bne	10df4 <read_integer_in_range+0x7c>
   10dac:	vldr	d7, [sp]
   10db0:	vcmp.f64	d7, d7
   10db4:	vmrs	APSR_nzcv, fpscr
   10db8:	movvs	r0, #5
   10dbc:	bvs	10df4 <read_integer_in_range+0x7c>
   10dc0:	vcvt.f64.s32	d6, s17
   10dc4:	vcmpe.f64	d7, d6
   10dc8:	vmrs	APSR_nzcv, fpscr
   10dcc:	movmi	r0, #5
   10dd0:	bmi	10df4 <read_integer_in_range+0x7c>
   10dd4:	vcvt.f64.s32	d8, s16
   10dd8:	vcmpe.f64	d7, d8
   10ddc:	vmrs	APSR_nzcv, fpscr
   10de0:	movgt	r0, #5
   10de4:	bgt	10df4 <read_integer_in_range+0x7c>
   10de8:	cmp	r4, #0
   10dec:	vcvtne.s32.f64	s14, d7
   10df0:	vstrne	s14, [r4]
   10df4:	add	sp, sp, #8
   10df8:	vpop	{d8}
   10dfc:	pop	{r4, pc}
   10e00:	.word	0x7ff80000

00010e04 <read_version_and_timestamp>:
   10e04:	push	{r4, r5, lr}
   10e08:	sub	sp, sp, #316	; 0x13c
   10e0c:	mov	r5, r0
   10e10:	mov	r2, #44	; 0x2c
   10e14:	mov	r1, #0
   10e18:	add	r4, sp, #12
   10e1c:	mov	r0, r4
   10e20:	bl	42d0 <memset@plt>
   10e24:	mvn	r3, #0
   10e28:	str	r3, [sp, #44]	; 0x2c
   10e2c:	mov	r2, #1
   10e30:	add	r1, r4, r3
   10e34:	mov	r0, r5
   10e38:	bl	107d0 <read_bytes>
   10e3c:	cmp	r0, #1
   10e40:	movne	r4, #2
   10e44:	beq	10e54 <read_version_and_timestamp+0x50>
   10e48:	mov	r0, r4
   10e4c:	add	sp, sp, #316	; 0x13c
   10e50:	pop	{r4, r5, pc}
   10e54:	mov	r2, #256	; 0x100
   10e58:	add	r1, sp, #56	; 0x38
   10e5c:	mov	r0, r5
   10e60:	bl	10d04 <read_string>
   10e64:	subs	r4, r0, #0
   10e68:	bne	10e48 <read_version_and_timestamp+0x44>
   10e6c:	add	r3, sp, #24
   10e70:	str	r3, [sp]
   10e74:	add	r3, sp, #28
   10e78:	add	r2, sp, #32
   10e7c:	ldr	r1, [pc, #152]	; 10f1c <read_version_and_timestamp+0x118>
   10e80:	add	r1, pc, r1
   10e84:	add	r0, sp, #56	; 0x38
   10e88:	bl	42b8 <__isoc99_sscanf@plt>
   10e8c:	cmp	r0, #3
   10e90:	movne	r4, #29
   10e94:	bne	10e48 <read_version_and_timestamp+0x44>
   10e98:	mov	r2, #256	; 0x100
   10e9c:	add	r1, sp, #56	; 0x38
   10ea0:	mov	r0, r5
   10ea4:	bl	10d04 <read_string>
   10ea8:	subs	r4, r0, #0
   10eac:	bne	10e48 <read_version_and_timestamp+0x44>
   10eb0:	add	r3, sp, #12
   10eb4:	str	r3, [sp]
   10eb8:	add	r3, sp, #16
   10ebc:	add	r2, sp, #20
   10ec0:	ldr	r1, [pc, #88]	; 10f20 <read_version_and_timestamp+0x11c>
   10ec4:	add	r1, pc, r1
   10ec8:	add	r0, sp, #56	; 0x38
   10ecc:	bl	42b8 <__isoc99_sscanf@plt>
   10ed0:	cmp	r0, #3
   10ed4:	movne	r4, #29
   10ed8:	bne	10e48 <read_version_and_timestamp+0x44>
   10edc:	ldr	r3, [sp, #32]
   10ee0:	sub	r3, r3, #1888	; 0x760
   10ee4:	sub	r3, r3, #12
   10ee8:	str	r3, [sp, #32]
   10eec:	ldr	r3, [sp, #28]
   10ef0:	sub	r3, r3, #1
   10ef4:	str	r3, [sp, #28]
   10ef8:	add	r0, sp, #12
   10efc:	bl	3e74 <mktime@plt>
   10f00:	str	r0, [r5, #56]	; 0x38
   10f04:	ldrb	r3, [sp, #11]
   10f08:	add	r3, r5, r3, lsl #1
   10f0c:	ldrh	r3, [r3, #94]	; 0x5e
   10f10:	sub	r3, r3, #65	; 0x41
   10f14:	str	r3, [r5, #60]	; 0x3c
   10f18:	b	10e48 <read_version_and_timestamp+0x44>
   10f1c:	.word	0x000149cc
   10f20:	.word	0x00014998

00010f24 <handle_variables>:
   10f24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f28:	sub	sp, sp, #268	; 0x10c
   10f2c:	mov	r5, r0
   10f30:	ldr	r6, [r0, #632]	; 0x278
   10f34:	cmp	r6, #0
   10f38:	ble	11010 <handle_variables+0xec>
   10f3c:	mov	r7, #0
   10f40:	mov	r9, r7
   10f44:	mov	r4, r7
   10f48:	ldr	r3, [pc, #336]	; 110a0 <handle_variables+0x17c>
   10f4c:	add	r3, pc, r3
   10f50:	str	r3, [sp, #4]
   10f54:	add	sl, sp, #8
   10f58:	b	10f80 <handle_variables+0x5c>
   10f5c:	mov	r0, #4
   10f60:	add	sp, sp, #268	; 0x10c
   10f64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10f68:	add	r9, r9, #1
   10f6c:	add	r4, r4, #1
   10f70:	ldr	r6, [r5, #632]	; 0x278
   10f74:	add	r7, r7, #280	; 0x118
   10f78:	cmp	r6, r4
   10f7c:	ble	11010 <handle_variables+0xec>
   10f80:	ldr	r6, [r5, #652]	; 0x28c
   10f84:	add	r6, r6, r7
   10f88:	str	r4, [r6, #8]
   10f8c:	lsl	fp, r4, #2
   10f90:	ldr	r8, [r5, #648]	; 0x288
   10f94:	ldr	r2, [r5, #612]	; 0x264
   10f98:	mov	r1, r9
   10f9c:	mov	r0, r6
   10fa0:	bl	42a0 <spss_init_variable_for_info@plt>
   10fa4:	str	r0, [r8, r4, lsl #2]
   10fa8:	ldr	r3, [r6, #4]
   10fac:	ldr	r2, [sp, #4]
   10fb0:	mov	r1, #256	; 0x100
   10fb4:	mov	r0, sl
   10fb8:	bl	42ac <snprintf@plt>
   10fbc:	ldr	r8, [r5, #8]
   10fc0:	cmp	r8, #0
   10fc4:	beq	10f68 <handle_variables+0x44>
   10fc8:	ldr	r3, [r5, #648]	; 0x288
   10fcc:	ldr	r1, [r3, r4, lsl #2]
   10fd0:	ldr	r3, [r6, #4]
   10fd4:	cmn	r3, #1
   10fd8:	movne	r2, sl
   10fdc:	moveq	r2, #0
   10fe0:	ldr	r3, [r5, #36]	; 0x24
   10fe4:	mov	r0, r4
   10fe8:	blx	r8
   10fec:	cmp	r0, #1
   10ff0:	beq	10f5c <handle_variables+0x38>
   10ff4:	cmp	r0, #2
   10ff8:	bne	10f68 <handle_variables+0x44>
   10ffc:	ldr	r3, [r5, #648]	; 0x288
   11000:	ldr	r3, [r3, fp]
   11004:	mov	r2, #1
   11008:	str	r2, [r3, #2144]	; 0x860
   1100c:	b	10f6c <handle_variables+0x48>
   11010:	ldr	sl, [r5, #12]
   11014:	cmp	sl, #0
   11018:	beq	11090 <handle_variables+0x16c>
   1101c:	ldrb	r3, [r5, #64]	; 0x40
   11020:	cmp	r3, #0
   11024:	moveq	r0, #0
   11028:	beq	10f60 <handle_variables+0x3c>
   1102c:	cmp	r6, #0
   11030:	ble	11098 <handle_variables+0x174>
   11034:	ldr	r7, [r5, #652]	; 0x28c
   11038:	add	r7, r7, #187	; 0xbb
   1103c:	mov	r4, #0
   11040:	add	r8, r5, #64	; 0x40
   11044:	mov	r1, r8
   11048:	mov	r0, r7
   1104c:	bl	3e20 <strcmp@plt>
   11050:	cmp	r0, #0
   11054:	beq	11070 <handle_variables+0x14c>
   11058:	add	r4, r4, #1
   1105c:	add	r7, r7, #280	; 0x118
   11060:	cmp	r4, r6
   11064:	bne	11044 <handle_variables+0x120>
   11068:	mov	r0, #0
   1106c:	b	10f60 <handle_variables+0x3c>
   11070:	ldr	r3, [r5, #648]	; 0x288
   11074:	ldr	r1, [r5, #36]	; 0x24
   11078:	ldr	r0, [r3, r4, lsl #2]
   1107c:	blx	sl
   11080:	cmp	r0, #0
   11084:	movne	r0, #4
   11088:	moveq	r0, #0
   1108c:	b	10f60 <handle_variables+0x3c>
   11090:	mov	r0, #0
   11094:	b	10f60 <handle_variables+0x3c>
   11098:	mov	r0, #0
   1109c:	b	10f60 <handle_variables+0x3c>
   110a0:	.word	0x00014920

000110a4 <readstat_parse_por>:
   110a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   110a8:	vpush	{d8-d9}
   110ac:	sub	sp, sp, #4096	; 0x1000
   110b0:	sub	sp, sp, #52	; 0x34
   110b4:	mov	r6, r0
   110b8:	mov	r8, r1
   110bc:	mov	r9, r2
   110c0:	ldr	r7, [pc, #1696]	; 11768 <readstat_parse_por+0x6c4>
   110c4:	add	r7, pc, r7
   110c8:	ldr	r5, [r0, #32]
   110cc:	bl	44bc <por_ctx_init@plt>
   110d0:	mov	r4, r0
   110d4:	mov	ip, r0
   110d8:	mov	lr, r6
   110dc:	ldm	lr!, {r0, r1, r2, r3}
   110e0:	stmia	ip!, {r0, r1, r2, r3}
   110e4:	ldm	lr, {r0, r1, r2, r3}
   110e8:	stm	ip, {r0, r1, r2, r3}
   110ec:	str	r9, [r4, #36]	; 0x24
   110f0:	str	r5, [r4, #44]	; 0x2c
   110f4:	ldr	r3, [r6, #44]	; 0x2c
   110f8:	str	r3, [r4, #640]	; 0x280
   110fc:	ldr	r3, [r6, #48]	; 0x30
   11100:	cmp	r3, #0
   11104:	strgt	r3, [r4, #644]	; 0x284
   11108:	ldr	r6, [r6, #40]	; 0x28
   1110c:	cmp	r6, #0
   11110:	beq	11144 <readstat_parse_por+0xa0>
   11114:	ldr	r1, [pc, #1616]	; 1176c <readstat_parse_por+0x6c8>
   11118:	add	r1, pc, r1
   1111c:	mov	r0, r6
   11120:	bl	3e20 <strcmp@plt>
   11124:	cmp	r0, #0
   11128:	bne	111ac <readstat_parse_por+0x108>
   1112c:	ldr	r3, [r4, #612]	; 0x264
   11130:	cmn	r3, #1
   11134:	moveq	r3, #0
   11138:	streq	r3, [r4, #612]	; 0x264
   1113c:	moveq	r6, #7
   11140:	beq	11184 <readstat_parse_por+0xe0>
   11144:	ldr	r3, [r5]
   11148:	ldr	r1, [r5, #20]
   1114c:	mov	r0, r8
   11150:	blx	r3
   11154:	cmn	r0, #1
   11158:	moveq	r6, #1
   1115c:	beq	11184 <readstat_parse_por+0xe0>
   11160:	ldr	r3, [r5, #8]
   11164:	ldr	r2, [r5, #20]
   11168:	mov	r1, #2
   1116c:	mov	r0, #0
   11170:	blx	r3
   11174:	str	r0, [r4, #32]
   11178:	cmn	r0, #1
   1117c:	moveq	r6, #15
   11180:	bne	111c4 <readstat_parse_por+0x120>
   11184:	ldr	r3, [r5, #4]
   11188:	ldr	r0, [r5, #20]
   1118c:	blx	r3
   11190:	mov	r0, r4
   11194:	bl	3dd8 <por_ctx_free@plt>
   11198:	mov	r0, r6
   1119c:	add	sp, sp, #4096	; 0x1000
   111a0:	add	sp, sp, #52	; 0x34
   111a4:	vpop	{d8-d9}
   111a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   111ac:	ldr	r1, [pc, #1468]	; 11770 <readstat_parse_por+0x6cc>
   111b0:	add	r1, pc, r1
   111b4:	mov	r0, r6
   111b8:	bl	415c <iconv_open@plt>
   111bc:	str	r0, [r4, #612]	; 0x264
   111c0:	b	1112c <readstat_parse_por+0x88>
   111c4:	ldr	r3, [r5, #8]
   111c8:	ldr	r2, [r5, #20]
   111cc:	mov	r1, #0
   111d0:	mov	r0, r1
   111d4:	blx	r3
   111d8:	cmn	r0, #1
   111dc:	moveq	r6, #15
   111e0:	beq	11184 <readstat_parse_por+0xe0>
   111e4:	mov	r2, #200	; 0xc8
   111e8:	add	r1, sp, #3680	; 0xe60
   111ec:	add	r1, r1, #8
   111f0:	mov	r0, r4
   111f4:	bl	107d0 <read_bytes>
   111f8:	cmp	r0, #200	; 0xc8
   111fc:	movne	r6, #2
   11200:	bne	11184 <readstat_parse_por+0xe0>
   11204:	add	sl, r4, #73	; 0x49
   11208:	mov	r3, #0
   1120c:	str	r3, [sp]
   11210:	mov	r3, #20
   11214:	add	r2, sp, #3744	; 0xea0
   11218:	add	r2, r2, #4
   1121c:	mov	r1, #21
   11220:	mov	r0, sl
   11224:	bl	4264 <readstat_convert@plt>
   11228:	subs	r6, r0, #0
   1122c:	bne	11184 <readstat_parse_por+0xe0>
   11230:	mov	r2, #256	; 0x100
   11234:	add	r1, sp, #3888	; 0xf30
   11238:	mov	r0, r4
   1123c:	bl	107d0 <read_bytes>
   11240:	cmp	r0, #256	; 0x100
   11244:	movne	r6, #2
   11248:	bne	11184 <readstat_parse_por+0xe0>
   1124c:	ldrb	r3, [sp, #4014]	; 0xfae
   11250:	strb	r3, [r4, #48]	; 0x30
   11254:	ldr	r3, [pc, #1304]	; 11774 <readstat_parse_por+0x6d0>
   11258:	ldr	lr, [r7, r3]
   1125c:	sub	r3, lr, #1
   11260:	add	r2, sp, #3888	; 0xf30
   11264:	ldr	r1, [pc, #1292]	; 11778 <readstat_parse_por+0x6d4>
   11268:	ldr	r1, [r7, r1]
   1126c:	add	lr, lr, #255	; 0xff
   11270:	b	11298 <readstat_parse_por+0x1f4>
   11274:	ldrh	r0, [r1]
   11278:	cmp	r0, #0
   1127c:	ldrbne	ip, [r2]
   11280:	addne	ip, r4, ip, lsl #1
   11284:	strhne	r0, [ip, #94]	; 0x5e
   11288:	add	r2, r2, #1
   1128c:	add	r1, r1, #2
   11290:	cmp	r3, lr
   11294:	beq	112b4 <readstat_parse_por+0x210>
   11298:	ldrsb	r0, [r3, #1]!
   1129c:	cmp	r0, #0
   112a0:	beq	11274 <readstat_parse_por+0x1d0>
   112a4:	ldrb	ip, [r2]
   112a8:	add	ip, r4, ip, lsl #1
   112ac:	strh	r0, [ip, #94]	; 0x5e
   112b0:	b	11288 <readstat_parse_por+0x1e4>
   112b4:	ldr	r3, [pc, #1212]	; 11778 <readstat_parse_por+0x6d4>
   112b8:	ldr	r3, [r7, r3]
   112bc:	ldrh	r2, [r3, #128]	; 0x80
   112c0:	ldrb	r3, [sp, #3952]	; 0xf70
   112c4:	add	r3, r4, r3, lsl #1
   112c8:	strh	r2, [r3, #94]	; 0x5e
   112cc:	mov	r2, #8
   112d0:	add	r1, sp, #2656	; 0xa60
   112d4:	mov	r0, r4
   112d8:	bl	107d0 <read_bytes>
   112dc:	cmp	r0, #8
   112e0:	movne	r6, #2
   112e4:	bne	11184 <readstat_parse_por+0xe0>
   112e8:	add	r3, r4, #94	; 0x5e
   112ec:	str	r3, [sp]
   112f0:	mov	r3, #8
   112f4:	add	r0, sp, #2656	; 0xa60
   112f8:	sub	r2, r0, #8
   112fc:	mov	r1, r3
   11300:	bl	4288 <por_utf8_encode@plt>
   11304:	mov	r2, r0
   11308:	cmn	r0, #1
   1130c:	bne	11360 <readstat_parse_por+0x2bc>
   11310:	ldr	r3, [r4, #24]
   11314:	cmp	r3, #0
   11318:	moveq	r6, #16
   1131c:	beq	11184 <readstat_parse_por+0xe0>
   11320:	add	r3, sp, #2656	; 0xa60
   11324:	str	r3, [sp]
   11328:	mov	r3, #8
   1132c:	ldr	r2, [pc, #1096]	; 1177c <readstat_parse_por+0x6d8>
   11330:	add	r2, pc, r2
   11334:	mov	r1, #1024	; 0x400
   11338:	add	r6, sp, #2656	; 0xa60
   1133c:	add	r6, r6, #8
   11340:	mov	r0, r6
   11344:	bl	42ac <snprintf@plt>
   11348:	ldr	r3, [r4, #24]
   1134c:	ldr	r1, [r4, #36]	; 0x24
   11350:	mov	r0, r6
   11354:	blx	r3
   11358:	mov	r6, #16
   1135c:	b	11184 <readstat_parse_por+0xe0>
   11360:	add	r1, sp, #2640	; 0xa50
   11364:	add	r1, r1, #8
   11368:	ldr	r0, [pc, #1040]	; 11780 <readstat_parse_por+0x6dc>
   1136c:	add	r0, pc, r0
   11370:	bl	4528 <strncmp@plt>
   11374:	subs	r3, r0, #0
   11378:	str	r3, [sp, #24]
   1137c:	movne	r6, #5
   11380:	bne	11184 <readstat_parse_por+0xe0>
   11384:	mvn	r3, #0
   11388:	str	r3, [r4, #636]	; 0x27c
   1138c:	mov	r0, r4
   11390:	bl	4030 <read_version_and_timestamp@plt>
   11394:	subs	r6, r0, #0
   11398:	bne	11184 <readstat_parse_por+0xe0>
   1139c:	ldr	r3, [pc, #992]	; 11784 <readstat_parse_por+0x6e0>
   113a0:	add	r3, pc, r3
   113a4:	str	r3, [sp, #40]	; 0x28
   113a8:	add	r3, sp, #80	; 0x50
   113ac:	str	r3, [sp, #32]
   113b0:	add	r3, sp, #72	; 0x48
   113b4:	str	r3, [sp, #44]	; 0x2c
   113b8:	vldr	d9, [pc, #920]	; 11758 <readstat_parse_por+0x6b4>
   113bc:	vldr	d8, [pc, #924]	; 11760 <readstat_parse_por+0x6bc>
   113c0:	str	r5, [sp, #20]
   113c4:	mov	r2, #1
   113c8:	add	r1, sp, #1360	; 0x550
   113cc:	mov	r0, r4
   113d0:	bl	107d0 <read_bytes>
   113d4:	cmp	r0, #1
   113d8:	bne	11fc0 <readstat_parse_por+0xf1c>
   113dc:	ldrb	r3, [sp, #1360]	; 0x550
   113e0:	add	r3, r4, r3, lsl #1
   113e4:	ldrh	r3, [r3, #94]	; 0x5e
   113e8:	sub	r3, r3, #49	; 0x31
   113ec:	cmp	r3, #21
   113f0:	addls	pc, pc, r3, lsl #2
   113f4:	b	11f8c <readstat_parse_por+0xee8>
   113f8:	b	11450 <readstat_parse_por+0x3ac>
   113fc:	b	11450 <readstat_parse_por+0x3ac>
   11400:	b	11450 <readstat_parse_por+0x3ac>
   11404:	b	11478 <readstat_parse_por+0x3d4>
   11408:	b	11548 <readstat_parse_por+0x4a4>
   1140c:	b	11574 <readstat_parse_por+0x4d0>
   11410:	b	1158c <readstat_parse_por+0x4e8>
   11414:	b	116c4 <readstat_parse_por+0x620>
   11418:	b	11838 <readstat_parse_por+0x794>
   1141c:	b	11f8c <readstat_parse_por+0xee8>
   11420:	b	11f8c <readstat_parse_por+0xee8>
   11424:	b	11f8c <readstat_parse_por+0xee8>
   11428:	b	11f8c <readstat_parse_por+0xee8>
   1142c:	b	11f8c <readstat_parse_por+0xee8>
   11430:	b	11f8c <readstat_parse_por+0xee8>
   11434:	b	11f8c <readstat_parse_por+0xee8>
   11438:	b	118b4 <readstat_parse_por+0x810>
   1143c:	b	1179c <readstat_parse_por+0x6f8>
   11440:	b	11938 <readstat_parse_por+0x894>
   11444:	b	119d0 <readstat_parse_por+0x92c>
   11448:	b	11b98 <readstat_parse_por+0xaf4>
   1144c:	b	11c28 <readstat_parse_por+0xb84>
   11450:	mov	r2, #256	; 0x100
   11454:	add	r1, sp, #2384	; 0x950
   11458:	add	r1, r1, #8
   1145c:	mov	r0, r4
   11460:	bl	10d04 <read_string>
   11464:	mov	r6, r0
   11468:	cmp	r6, #0
   1146c:	beq	113c4 <readstat_parse_por+0x320>
   11470:	ldr	r5, [sp, #20]
   11474:	b	11184 <readstat_parse_por+0xe0>
   11478:	ldr	r3, [r4, #632]	; 0x278
   1147c:	cmp	r3, #0
   11480:	movne	r6, #5
   11484:	bne	11468 <readstat_parse_por+0x3c4>
   11488:	add	r3, sp, #336	; 0x150
   1148c:	ldr	r2, [pc, #760]	; 1178c <readstat_parse_por+0x6e8>
   11490:	mov	r1, #0
   11494:	mov	r0, r4
   11498:	bl	10d78 <read_integer_in_range>
   1149c:	subs	r6, r0, #0
   114a0:	bne	11468 <readstat_parse_por+0x3c4>
   114a4:	ldr	r0, [sp, #336]	; 0x150
   114a8:	str	r0, [r4, #632]	; 0x278
   114ac:	mov	r1, #4
   114b0:	bl	3fe8 <readstat_calloc@plt>
   114b4:	str	r0, [r4, #648]	; 0x288
   114b8:	mov	r1, #280	; 0x118
   114bc:	ldr	r0, [r4, #632]	; 0x278
   114c0:	bl	3fe8 <readstat_calloc@plt>
   114c4:	str	r0, [r4, #652]	; 0x28c
   114c8:	ldr	r3, [r4, #648]	; 0x288
   114cc:	cmp	r0, #0
   114d0:	cmpne	r3, #0
   114d4:	moveq	r6, #3
   114d8:	beq	11468 <readstat_parse_por+0x3c4>
   114dc:	ldr	r8, [r4]
   114e0:	cmp	r8, #0
   114e4:	beq	11468 <readstat_parse_por+0x3c4>
   114e8:	add	r7, sp, #1360	; 0x550
   114ec:	mov	r2, #56	; 0x38
   114f0:	mov	r1, #0
   114f4:	mov	r0, r7
   114f8:	bl	42d0 <memset@plt>
   114fc:	mvn	r2, #0
   11500:	mvn	r3, #0
   11504:	strd	r2, [r7]
   11508:	ldr	r2, [r4, #632]	; 0x278
   1150c:	asr	r3, r2, #31
   11510:	strd	r2, [r7, #8]
   11514:	ldr	r3, [r4, #56]	; 0x38
   11518:	str	r3, [sp, #1376]	; 0x560
   1151c:	str	r3, [sp, #1380]	; 0x564
   11520:	ldr	r2, [r4, #60]	; 0x3c
   11524:	asr	r3, r2, #31
   11528:	strd	r2, [r7, #24]
   1152c:	str	sl, [sp, #1404]	; 0x57c
   11530:	ldr	r1, [r4, #36]	; 0x24
   11534:	mov	r0, r7
   11538:	blx	r8
   1153c:	cmp	r0, #0
   11540:	movne	r6, #4
   11544:	b	11468 <readstat_parse_por+0x3c4>
   11548:	mov	r1, #0
   1154c:	add	r3, sp, #4096	; 0x1000
   11550:	add	r3, r3, #48	; 0x30
   11554:	str	r1, [r3, #-2784]!	; 0xfffff520
   11558:	mov	r2, #100	; 0x64
   1155c:	mov	r0, r4
   11560:	bl	10d78 <read_integer_in_range>
   11564:	subs	r6, r0, #0
   11568:	ldreq	r3, [sp, #1360]	; 0x550
   1156c:	streq	r3, [r4, #608]	; 0x260
   11570:	b	11468 <readstat_parse_por+0x3c4>
   11574:	mov	r2, #9
   11578:	add	r1, r4, #64	; 0x40
   1157c:	mov	r0, r4
   11580:	bl	10d04 <read_string>
   11584:	mov	r6, r0
   11588:	b	11468 <readstat_parse_por+0x3c4>
   1158c:	ldr	r3, [r4, #636]	; 0x27c
   11590:	add	r3, r3, #1
   11594:	str	r3, [r4, #636]	; 0x27c
   11598:	ldr	r2, [r4, #632]	; 0x278
   1159c:	cmp	r3, r2
   115a0:	moveq	r6, #5
   115a4:	beq	11468 <readstat_parse_por+0x3c4>
   115a8:	mov	r8, #280	; 0x118
   115ac:	mul	r8, r8, r3
   115b0:	ldr	r9, [r4, #652]	; 0x28c
   115b4:	add	r7, r9, r8
   115b8:	add	r3, r7, #24
   115bc:	str	r3, [sp, #1360]	; 0x550
   115c0:	add	r3, r7, #36	; 0x24
   115c4:	str	r3, [sp, #1364]	; 0x554
   115c8:	mvn	r3, #0
   115cc:	str	r3, [r7, #4]
   115d0:	add	r3, sp, #336	; 0x150
   115d4:	ldr	r2, [pc, #432]	; 1178c <readstat_parse_por+0x6e8>
   115d8:	mov	r1, #0
   115dc:	mov	r0, r4
   115e0:	bl	10d78 <read_integer_in_range>
   115e4:	subs	r6, r0, #0
   115e8:	bne	11468 <readstat_parse_por+0x3c4>
   115ec:	ldr	r3, [sp, #336]	; 0x150
   115f0:	str	r3, [r7, #16]
   115f4:	cmp	r3, #0
   115f8:	moveq	r3, #5
   115fc:	movne	r3, #0
   11600:	str	r3, [r9, r8]
   11604:	add	r8, r7, #187	; 0xbb
   11608:	mov	r2, #9
   1160c:	mov	r1, r8
   11610:	mov	r0, r4
   11614:	bl	10d04 <read_string>
   11618:	subs	r6, r0, #0
   1161c:	bne	11468 <readstat_parse_por+0x3c4>
   11620:	ldr	r2, [r4, #656]	; 0x290
   11624:	mov	r1, r7
   11628:	mov	r0, r8
   1162c:	bl	451c <ck_str_hash_insert@plt>
   11630:	ldr	r7, [sp, #24]
   11634:	add	fp, sp, #1360	; 0x550
   11638:	add	r8, sp, #336	; 0x150
   1163c:	ldr	r5, [pc, #324]	; 11788 <readstat_parse_por+0x6e4>
   11640:	ldr	r9, [fp, r7, lsl #2]
   11644:	mov	r3, r8
   11648:	mov	r2, #120	; 0x78
   1164c:	mov	r1, #0
   11650:	mov	r0, r4
   11654:	bl	10d78 <read_integer_in_range>
   11658:	cmp	r0, #0
   1165c:	bne	11f6c <readstat_parse_por+0xec8>
   11660:	ldr	r3, [sp, #336]	; 0x150
   11664:	str	r3, [r9]
   11668:	mov	r3, r8
   1166c:	mov	r2, r5
   11670:	mov	r1, #0
   11674:	mov	r0, r4
   11678:	bl	10d78 <read_integer_in_range>
   1167c:	cmp	r0, #0
   11680:	bne	11f74 <readstat_parse_por+0xed0>
   11684:	ldr	r3, [sp, #336]	; 0x150
   11688:	str	r3, [r9, #4]
   1168c:	mov	r3, r8
   11690:	mov	r2, #100	; 0x64
   11694:	mov	r1, #0
   11698:	mov	r0, r4
   1169c:	bl	10d78 <read_integer_in_range>
   116a0:	cmp	r0, #0
   116a4:	bne	11f7c <readstat_parse_por+0xed8>
   116a8:	ldr	r3, [sp, #336]	; 0x150
   116ac:	str	r3, [r9, #8]
   116b0:	add	r7, r7, #1
   116b4:	cmp	r7, #2
   116b8:	bne	11640 <readstat_parse_por+0x59c>
   116bc:	mov	r6, r0
   116c0:	b	11468 <readstat_parse_por+0x3c4>
   116c4:	ldr	r2, [r4, #636]	; 0x27c
   116c8:	cmp	r2, #0
   116cc:	blt	11fdc <readstat_parse_por+0xf38>
   116d0:	ldr	r3, [r4, #632]	; 0x278
   116d4:	cmp	r2, r3
   116d8:	bge	11fe8 <readstat_parse_por+0xf44>
   116dc:	mov	r3, #280	; 0x118
   116e0:	mul	r3, r3, r2
   116e4:	ldr	r2, [r4, #652]	; 0x28c
   116e8:	add	r7, r2, r3
   116ec:	ldr	r3, [r2, r3]
   116f0:	cmp	r3, #5
   116f4:	bne	1171c <readstat_parse_por+0x678>
   116f8:	ldr	r1, [r7, #52]	; 0x34
   116fc:	add	r1, r1, #8
   11700:	add	r1, r7, r1, lsl #3
   11704:	mov	r0, r4
   11708:	bl	10d38 <read_double>
   1170c:	subs	r6, r0, #0
   11710:	beq	11740 <readstat_parse_por+0x69c>
   11714:	ldr	r5, [sp, #20]
   11718:	b	11184 <readstat_parse_por+0xe0>
   1171c:	ldr	r3, [r7, #52]	; 0x34
   11720:	add	r3, r3, r3, lsl #5
   11724:	add	r1, r3, #88	; 0x58
   11728:	mov	r2, #33	; 0x21
   1172c:	add	r1, r7, r1
   11730:	mov	r0, r4
   11734:	bl	10d04 <read_string>
   11738:	subs	r6, r0, #0
   1173c:	bne	11f98 <readstat_parse_por+0xef4>
   11740:	ldr	r3, [r7, #52]	; 0x34
   11744:	cmp	r3, #2
   11748:	bgt	11ff4 <readstat_parse_por+0xf50>
   1174c:	add	r3, r3, #1
   11750:	str	r3, [r7, #52]	; 0x34
   11754:	b	113c4 <readstat_parse_por+0x320>
   11758:	.word	0x00000000
   1175c:	.word	0x7ff00000
   11760:	.word	0x00000000
   11764:	.word	0xfff00000
   11768:	.word	0x00033f34
   1176c:	.word	0x00013fac
   11770:	.word	0x00013f14
   11774:	.word	0x00000304
   11778:	.word	0x000002f8
   1177c:	.word	0x00014548
   11780:	.word	0x00014530
   11784:	.word	0x000144cc
   11788:	.word	0x00004e20
   1178c:	.word	0x000f4240
   11790:	.word	0x00013b1c
   11794:	.word	0x00000401
   11798:	.word	0x000139bc
   1179c:	ldr	r2, [r4, #636]	; 0x27c
   117a0:	cmp	r2, #0
   117a4:	blt	12000 <readstat_parse_por+0xf5c>
   117a8:	ldr	r3, [r4, #632]	; 0x278
   117ac:	cmp	r2, r3
   117b0:	beq	1200c <readstat_parse_por+0xf68>
   117b4:	mov	r3, #280	; 0x118
   117b8:	mul	r3, r3, r2
   117bc:	ldr	r2, [r4, #652]	; 0x28c
   117c0:	add	r7, r2, r3
   117c4:	mov	r1, #1
   117c8:	str	r1, [r7, #56]	; 0x38
   117cc:	mov	r1, #2
   117d0:	str	r1, [r7, #52]	; 0x34
   117d4:	ldr	r3, [r2, r3]
   117d8:	cmp	r3, #5
   117dc:	bne	11808 <readstat_parse_por+0x764>
   117e0:	add	r1, r7, #64	; 0x40
   117e4:	mov	r0, r4
   117e8:	bl	10d38 <read_double>
   117ec:	subs	r6, r0, #0
   117f0:	bne	11fa0 <readstat_parse_por+0xefc>
   117f4:	add	r1, r7, #72	; 0x48
   117f8:	mov	r0, r4
   117fc:	bl	10d38 <read_double>
   11800:	mov	r6, r0
   11804:	b	11468 <readstat_parse_por+0x3c4>
   11808:	mov	r2, #33	; 0x21
   1180c:	add	r1, r7, #88	; 0x58
   11810:	mov	r0, r4
   11814:	bl	10d04 <read_string>
   11818:	subs	r6, r0, #0
   1181c:	bne	11fa8 <readstat_parse_por+0xf04>
   11820:	mov	r2, #33	; 0x21
   11824:	add	r1, r7, #121	; 0x79
   11828:	mov	r0, r4
   1182c:	bl	10d04 <read_string>
   11830:	mov	r6, r0
   11834:	b	11468 <readstat_parse_por+0x3c4>
   11838:	ldr	r2, [r4, #636]	; 0x27c
   1183c:	cmp	r2, #0
   11840:	blt	12018 <readstat_parse_por+0xf74>
   11844:	ldr	r3, [r4, #632]	; 0x278
   11848:	cmp	r2, r3
   1184c:	beq	12024 <readstat_parse_por+0xf80>
   11850:	mov	r3, #280	; 0x118
   11854:	mul	r3, r3, r2
   11858:	ldr	r2, [r4, #652]	; 0x28c
   1185c:	add	r1, r2, r3
   11860:	mov	r0, #1
   11864:	str	r0, [r1, #56]	; 0x38
   11868:	mov	r0, #2
   1186c:	str	r0, [r1, #52]	; 0x34
   11870:	ldr	r3, [r2, r3]
   11874:	cmp	r3, #5
   11878:	bne	11894 <readstat_parse_por+0x7f0>
   1187c:	vstr	d8, [r1, #64]	; 0x40
   11880:	add	r1, r1, #72	; 0x48
   11884:	mov	r0, r4
   11888:	bl	10d38 <read_double>
   1188c:	mov	r6, r0
   11890:	b	11468 <readstat_parse_por+0x3c4>
   11894:	mov	r3, #0
   11898:	strb	r3, [r1, #88]	; 0x58
   1189c:	mov	r2, #33	; 0x21
   118a0:	add	r1, r1, #121	; 0x79
   118a4:	mov	r0, r4
   118a8:	bl	10d04 <read_string>
   118ac:	mov	r6, r0
   118b0:	b	11468 <readstat_parse_por+0x3c4>
   118b4:	ldr	r2, [r4, #636]	; 0x27c
   118b8:	cmp	r2, #0
   118bc:	blt	12030 <readstat_parse_por+0xf8c>
   118c0:	ldr	r3, [r4, #632]	; 0x278
   118c4:	cmp	r2, r3
   118c8:	beq	1203c <readstat_parse_por+0xf98>
   118cc:	mov	r3, #280	; 0x118
   118d0:	mul	r3, r3, r2
   118d4:	ldr	r2, [r4, #652]	; 0x28c
   118d8:	add	r7, r2, r3
   118dc:	mov	r1, #1
   118e0:	str	r1, [r7, #56]	; 0x38
   118e4:	mov	r1, #2
   118e8:	str	r1, [r7, #52]	; 0x34
   118ec:	ldr	r3, [r2, r3]
   118f0:	cmp	r3, #5
   118f4:	bne	11914 <readstat_parse_por+0x870>
   118f8:	add	r1, r7, #64	; 0x40
   118fc:	mov	r0, r4
   11900:	bl	10d38 <read_double>
   11904:	subs	r6, r0, #0
   11908:	bne	11fb0 <readstat_parse_por+0xf0c>
   1190c:	vstr	d9, [r7, #72]	; 0x48
   11910:	b	113c4 <readstat_parse_por+0x320>
   11914:	mov	r2, #33	; 0x21
   11918:	add	r1, r7, #88	; 0x58
   1191c:	mov	r0, r4
   11920:	bl	10d04 <read_string>
   11924:	subs	r6, r0, #0
   11928:	bne	11fb8 <readstat_parse_por+0xf14>
   1192c:	mov	r3, #0
   11930:	strb	r3, [r7, #121]	; 0x79
   11934:	b	113c4 <readstat_parse_por+0x320>
   11938:	ldr	r3, [r4, #636]	; 0x27c
   1193c:	cmp	r3, #0
   11940:	movlt	r6, #5
   11944:	blt	11468 <readstat_parse_por+0x3c4>
   11948:	ldr	r2, [r4, #632]	; 0x278
   1194c:	cmp	r3, r2
   11950:	moveq	r6, #5
   11954:	beq	11468 <readstat_parse_por+0x3c4>
   11958:	ldr	r7, [r4, #652]	; 0x28c
   1195c:	mov	r2, #280	; 0x118
   11960:	mla	r7, r2, r3, r7
   11964:	mov	r2, #256	; 0x100
   11968:	add	r1, sp, #1360	; 0x550
   1196c:	mov	r0, r4
   11970:	bl	10d04 <read_string>
   11974:	subs	r6, r0, #0
   11978:	bne	11468 <readstat_parse_por+0x3c4>
   1197c:	add	r6, sp, #1360	; 0x550
   11980:	mov	r0, r6
   11984:	bl	4228 <strlen@plt>
   11988:	lsl	r1, r0, #2
   1198c:	add	r1, r1, #1
   11990:	ldr	r0, [r7, #264]	; 0x108
   11994:	bl	4018 <realloc@plt>
   11998:	mov	r8, r0
   1199c:	str	r0, [r7, #264]	; 0x108
   119a0:	mov	r0, r6
   119a4:	bl	4228 <strlen@plt>
   119a8:	mov	r3, r0
   119ac:	lsl	r1, r0, #2
   119b0:	ldr	r2, [r4, #612]	; 0x264
   119b4:	str	r2, [sp]
   119b8:	mov	r2, r6
   119bc:	add	r1, r1, #1
   119c0:	mov	r0, r8
   119c4:	bl	4264 <readstat_convert@plt>
   119c8:	mov	r6, r0
   119cc:	b	11468 <readstat_parse_por+0x3c4>
   119d0:	mov	r7, #0
   119d4:	add	r6, sp, #48	; 0x30
   119d8:	str	r7, [sp, #48]	; 0x30
   119dc:	str	r7, [sp, #52]	; 0x34
   119e0:	ldr	r3, [r4, #624]	; 0x270
   119e4:	ldr	r2, [sp, #40]	; 0x28
   119e8:	mov	r1, #256	; 0x100
   119ec:	add	r0, sp, #336	; 0x150
   119f0:	bl	42ac <snprintf@plt>
   119f4:	mov	r3, r6
   119f8:	ldr	r2, [pc, #-628]	; 1178c <readstat_parse_por+0x6e8>
   119fc:	mov	r1, r7
   11a00:	mov	r0, r4
   11a04:	bl	10d78 <read_integer_in_range>
   11a08:	subs	r6, r0, #0
   11a0c:	bne	11468 <readstat_parse_por+0x3c4>
   11a10:	ldr	r7, [sp, #24]
   11a14:	mov	r9, #5
   11a18:	add	fp, sp, #48	; 0x30
   11a1c:	mov	r8, #256	; 0x100
   11a20:	ldr	r3, [fp]
   11a24:	cmp	r7, r3
   11a28:	blt	11a80 <readstat_parse_por+0x9dc>
   11a2c:	add	r3, sp, #52	; 0x34
   11a30:	ldr	r2, [pc, #-684]	; 1178c <readstat_parse_por+0x6e8>
   11a34:	mov	r1, #0
   11a38:	mov	r0, r4
   11a3c:	bl	10d78 <read_integer_in_range>
   11a40:	subs	r6, r0, #0
   11a44:	bne	11468 <readstat_parse_por+0x3c4>
   11a48:	ldr	r5, [sp, #24]
   11a4c:	add	r7, sp, #64	; 0x40
   11a50:	mov	r8, #0
   11a54:	sub	r3, r7, #8
   11a58:	str	r3, [sp, #36]	; 0x24
   11a5c:	add	r3, sp, #1360	; 0x550
   11a60:	str	r3, [sp, #28]
   11a64:	ldr	r3, [sp, #52]	; 0x34
   11a68:	cmp	r5, r3
   11a6c:	blt	11ac0 <readstat_parse_por+0xa1c>
   11a70:	ldr	r3, [r4, #624]	; 0x270
   11a74:	add	r3, r3, #1
   11a78:	str	r3, [r4, #624]	; 0x270
   11a7c:	b	11468 <readstat_parse_por+0x3c4>
   11a80:	mov	r2, r8
   11a84:	ldr	r5, [sp, #32]
   11a88:	mov	r1, r5
   11a8c:	mov	r0, r4
   11a90:	bl	10d04 <read_string>
   11a94:	cmp	r0, #0
   11a98:	bne	11f84 <readstat_parse_por+0xee0>
   11a9c:	ldr	r1, [r4, #656]	; 0x290
   11aa0:	mov	r0, r5
   11aa4:	bl	3ff4 <ck_str_hash_lookup@plt>
   11aa8:	cmp	r0, #0
   11aac:	ldrne	r9, [r0]
   11ab0:	ldrne	r3, [r4, #624]	; 0x270
   11ab4:	strne	r3, [r0, #4]
   11ab8:	add	r7, r7, #1
   11abc:	b	11a20 <readstat_parse_por+0x97c>
   11ac0:	str	r8, [r7]
   11ac4:	str	r8, [r7, #4]
   11ac8:	str	r8, [r7, #12]
   11acc:	str	r9, [sp, #72]	; 0x48
   11ad0:	cmp	r9, #0
   11ad4:	bne	11b54 <readstat_parse_por+0xab0>
   11ad8:	mov	r2, #256	; 0x100
   11adc:	ldr	fp, [sp, #32]
   11ae0:	mov	r1, fp
   11ae4:	mov	r0, r4
   11ae8:	bl	10d04 <read_string>
   11aec:	cmp	r0, #0
   11af0:	bne	11b90 <readstat_parse_por+0xaec>
   11af4:	mov	r2, #256	; 0x100
   11af8:	ldr	r1, [sp, #28]
   11afc:	mov	r0, r4
   11b00:	bl	10d04 <read_string>
   11b04:	cmp	r0, #0
   11b08:	bne	11b90 <readstat_parse_por+0xaec>
   11b0c:	str	fp, [sp, #64]	; 0x40
   11b10:	ldr	fp, [r4, #20]
   11b14:	cmp	fp, #0
   11b18:	beq	11b4c <readstat_parse_por+0xaa8>
   11b1c:	ldr	r3, [r4, #36]	; 0x24
   11b20:	str	r3, [sp, #12]
   11b24:	ldr	r3, [sp, #28]
   11b28:	str	r3, [sp, #8]
   11b2c:	ldr	r3, [sp, #44]	; 0x2c
   11b30:	ldm	r3, {r0, r1}
   11b34:	stm	sp, {r0, r1}
   11b38:	ldm	r7, {r2, r3}
   11b3c:	add	r0, sp, #336	; 0x150
   11b40:	blx	fp
   11b44:	cmp	r0, #0
   11b48:	bne	11b8c <readstat_parse_por+0xae8>
   11b4c:	add	r5, r5, #1
   11b50:	b	11a64 <readstat_parse_por+0x9c0>
   11b54:	ldr	r1, [sp, #36]	; 0x24
   11b58:	mov	r0, r4
   11b5c:	bl	10d38 <read_double>
   11b60:	cmp	r0, #0
   11b64:	bne	11b90 <readstat_parse_por+0xaec>
   11b68:	mov	r2, #256	; 0x100
   11b6c:	ldr	r1, [sp, #28]
   11b70:	mov	r0, r4
   11b74:	bl	10d04 <read_string>
   11b78:	cmp	r0, #0
   11b7c:	bne	11b90 <readstat_parse_por+0xaec>
   11b80:	ldrd	r2, [r7, #-8]
   11b84:	strd	r2, [r7]
   11b88:	b	11b10 <readstat_parse_por+0xa6c>
   11b8c:	mov	r0, #4
   11b90:	mov	r6, r0
   11b94:	b	11468 <readstat_parse_por+0x3c4>
   11b98:	mov	r1, #0
   11b9c:	add	r3, sp, #4096	; 0x1000
   11ba0:	add	r3, r3, #48	; 0x30
   11ba4:	str	r1, [r3, #-3808]!	; 0xfffff120
   11ba8:	ldr	r2, [pc, #-1060]	; 1178c <readstat_parse_por+0x6e8>
   11bac:	mov	r0, r4
   11bb0:	bl	10d78 <read_integer_in_range>
   11bb4:	subs	r6, r0, #0
   11bb8:	bne	11468 <readstat_parse_por+0x3c4>
   11bbc:	ldr	r7, [sp, #24]
   11bc0:	add	r8, sp, #1360	; 0x550
   11bc4:	mov	r9, #256	; 0x100
   11bc8:	ldr	r3, [sp, #336]	; 0x150
   11bcc:	cmp	r7, r3
   11bd0:	bge	11468 <readstat_parse_por+0x3c4>
   11bd4:	mov	r2, r9
   11bd8:	mov	r1, r8
   11bdc:	mov	r0, r4
   11be0:	bl	10d04 <read_string>
   11be4:	cmp	r0, #0
   11be8:	bne	11c18 <readstat_parse_por+0xb74>
   11bec:	ldr	r3, [r4, #4]
   11bf0:	cmp	r3, #0
   11bf4:	beq	11c10 <readstat_parse_por+0xb6c>
   11bf8:	ldr	r2, [r4, #36]	; 0x24
   11bfc:	mov	r1, r8
   11c00:	mov	r0, r7
   11c04:	blx	r3
   11c08:	cmp	r0, #0
   11c0c:	bne	11c20 <readstat_parse_por+0xb7c>
   11c10:	add	r7, r7, #1
   11c14:	b	11bc8 <readstat_parse_por+0xb24>
   11c18:	mov	r6, r0
   11c1c:	b	11468 <readstat_parse_por+0x3c4>
   11c20:	mov	r6, #4
   11c24:	b	11468 <readstat_parse_por+0x3c4>
   11c28:	ldr	r5, [sp, #20]
   11c2c:	ldr	r3, [r4, #632]	; 0x278
   11c30:	sub	r3, r3, #1
   11c34:	ldr	r2, [r4, #636]	; 0x27c
   11c38:	cmp	r2, r3
   11c3c:	movne	r6, #8
   11c40:	bne	11184 <readstat_parse_por+0xe0>
   11c44:	mov	r0, r4
   11c48:	bl	4564 <handle_variables@plt>
   11c4c:	subs	r6, r0, #0
   11c50:	bne	11184 <readstat_parse_por+0xe0>
   11c54:	ldr	r3, [r4, #16]
   11c58:	cmp	r3, #0
   11c5c:	beq	11184 <readstat_parse_por+0xe0>
   11c60:	ldr	r3, [r4, #632]	; 0x278
   11c64:	cmp	r3, #0
   11c68:	beq	11184 <readstat_parse_por+0xe0>
   11c6c:	add	r7, sp, #64	; 0x40
   11c70:	add	sl, sp, #80	; 0x50
   11c74:	sub	r3, sl, #8
   11c78:	str	r3, [sp, #28]
   11c7c:	sub	r3, r7, #8
   11c80:	str	r3, [sp, #32]
   11c84:	mov	r9, r6
   11c88:	mov	r6, r5
   11c8c:	mov	r3, #0
   11c90:	str	r3, [sp, #56]	; 0x38
   11c94:	ldr	fp, [sp, #24]
   11c98:	mov	r5, #280	; 0x118
   11c9c:	ldr	r3, [r4, #632]	; 0x278
   11ca0:	cmp	fp, r3
   11ca4:	blt	11d0c <readstat_parse_por+0xc68>
   11ca8:	ldr	r3, [r4, #644]	; 0x284
   11cac:	cmp	r3, #0
   11cb0:	subne	r3, r3, #1
   11cb4:	strne	r3, [r4, #644]	; 0x284
   11cb8:	ldreq	r3, [r4, #628]	; 0x274
   11cbc:	addeq	r3, r3, #1
   11cc0:	streq	r3, [r4, #628]	; 0x274
   11cc4:	ldr	r3, [r4, #44]	; 0x2c
   11cc8:	ldr	r5, [r3, #16]
   11ccc:	ldr	r3, [r3, #20]
   11cd0:	ldr	r2, [r4, #36]	; 0x24
   11cd4:	ldr	r1, [r4, #28]
   11cd8:	ldr	r0, [r4, #32]
   11cdc:	blx	r5
   11ce0:	cmp	r0, #0
   11ce4:	bne	11d00 <readstat_parse_por+0xc5c>
   11ce8:	ldr	r3, [r4, #640]	; 0x280
   11cec:	cmp	r3, #0
   11cf0:	ble	11c8c <readstat_parse_por+0xbe8>
   11cf4:	ldr	r2, [r4, #628]	; 0x274
   11cf8:	cmp	r3, r2
   11cfc:	bne	11c8c <readstat_parse_por+0xbe8>
   11d00:	mov	r5, r6
   11d04:	mov	r6, r0
   11d08:	b	11184 <readstat_parse_por+0xe0>
   11d0c:	str	fp, [sp, #20]
   11d10:	mul	r2, r5, fp
   11d14:	ldr	r1, [r4, #652]	; 0x28c
   11d18:	add	r8, r1, r2
   11d1c:	mov	r3, #0
   11d20:	str	r3, [r7]
   11d24:	str	r3, [r7, #4]
   11d28:	str	r3, [r7, #8]
   11d2c:	str	r3, [r7, #12]
   11d30:	ldr	r3, [r1, r2]
   11d34:	str	r3, [sp, #72]	; 0x48
   11d38:	ldr	r3, [r1, r2]
   11d3c:	cmp	r3, #0
   11d40:	bne	11e70 <readstat_parse_por+0xdcc>
   11d44:	ldr	r3, [sp, #32]
   11d48:	mov	r2, #256	; 0x100
   11d4c:	mov	r1, sl
   11d50:	mov	r0, r4
   11d54:	bl	10b58 <maybe_read_string>
   11d58:	cmp	r0, #0
   11d5c:	beq	11db8 <readstat_parse_por+0xd14>
   11d60:	mov	r5, r6
   11d64:	mov	r9, r8
   11d68:	mov	r8, r0
   11d6c:	ldr	r3, [r4, #24]
   11d70:	cmp	r3, #0
   11d74:	beq	11db0 <readstat_parse_por+0xd0c>
   11d78:	ldr	r3, [r4, #628]	; 0x274
   11d7c:	add	r3, r3, #1
   11d80:	str	r3, [sp]
   11d84:	add	r3, r9, #187	; 0xbb
   11d88:	ldr	r2, [pc, #-1536]	; 11790 <readstat_parse_por+0x6ec>
   11d8c:	add	r2, pc, r2
   11d90:	mov	r1, #1024	; 0x400
   11d94:	add	r6, sp, #336	; 0x150
   11d98:	mov	r0, r6
   11d9c:	bl	42ac <snprintf@plt>
   11da0:	ldr	r3, [r4, #24]
   11da4:	ldr	r1, [r4, #36]	; 0x24
   11da8:	mov	r0, r6
   11dac:	blx	r3
   11db0:	mov	r6, r8
   11db4:	b	11184 <readstat_parse_por+0xe0>
   11db8:	ldr	r3, [sp, #56]	; 0x38
   11dbc:	cmp	r3, #0
   11dc0:	beq	11dd8 <readstat_parse_por+0xd34>
   11dc4:	mov	r5, r6
   11dc8:	mov	r8, r0
   11dcc:	cmp	fp, #0
   11dd0:	movne	r8, #5
   11dd4:	b	11db0 <readstat_parse_por+0xd0c>
   11dd8:	mov	r0, sl
   11ddc:	bl	4228 <strlen@plt>
   11de0:	ldr	r3, [r4, #612]	; 0x264
   11de4:	str	r3, [sp]
   11de8:	mov	r3, r0
   11dec:	mov	r2, sl
   11df0:	ldr	r1, [pc, #-1636]	; 11794 <readstat_parse_por+0x6f0>
   11df4:	add	r0, sp, #1360	; 0x550
   11df8:	bl	4264 <readstat_convert@plt>
   11dfc:	cmp	r0, #0
   11e00:	bne	11f60 <readstat_parse_por+0xebc>
   11e04:	add	r3, sp, #1360	; 0x550
   11e08:	str	r3, [sp, #64]	; 0x40
   11e0c:	ldr	r8, [r4, #16]
   11e10:	cmp	r8, #0
   11e14:	beq	11e68 <readstat_parse_por+0xdc4>
   11e18:	ldr	r3, [r4, #648]	; 0x288
   11e1c:	ldr	r2, [sp, #20]
   11e20:	ldr	ip, [r3, r2, lsl #2]
   11e24:	ldr	r3, [ip, #2144]	; 0x860
   11e28:	cmp	r3, #0
   11e2c:	bne	11e68 <readstat_parse_por+0xdc4>
   11e30:	ldr	r3, [r4, #644]	; 0x284
   11e34:	cmp	r3, #0
   11e38:	bne	11e68 <readstat_parse_por+0xdc4>
   11e3c:	ldr	r3, [r4, #36]	; 0x24
   11e40:	str	r3, [sp, #8]
   11e44:	ldr	r3, [sp, #28]
   11e48:	ldm	r3, {r0, r1}
   11e4c:	stm	sp, {r0, r1}
   11e50:	ldm	r7, {r2, r3}
   11e54:	mov	r1, ip
   11e58:	ldr	r0, [r4, #628]	; 0x274
   11e5c:	blx	r8
   11e60:	cmp	r0, #0
   11e64:	bne	11f54 <readstat_parse_por+0xeb0>
   11e68:	add	fp, fp, #1
   11e6c:	b	11c9c <readstat_parse_por+0xbf8>
   11e70:	cmp	r3, #5
   11e74:	bne	11e0c <readstat_parse_por+0xd68>
   11e78:	mov	r2, #1
   11e7c:	add	r1, sp, #336	; 0x150
   11e80:	mov	r0, r4
   11e84:	bl	107d0 <read_bytes>
   11e88:	cmp	r0, #1
   11e8c:	bne	11fcc <readstat_parse_por+0xf28>
   11e90:	ldrb	r2, [sp, #336]	; 0x150
   11e94:	add	r3, r4, r2, lsl #1
   11e98:	ldrh	r3, [r3, #94]	; 0x5e
   11e9c:	cmp	r3, #90	; 0x5a
   11ea0:	beq	11f20 <readstat_parse_por+0xe7c>
   11ea4:	mov	r3, #0
   11ea8:	str	r3, [sp, #56]	; 0x38
   11eac:	mov	r1, r7
   11eb0:	mov	r0, r4
   11eb4:	bl	108ec <read_double_with_peek>
   11eb8:	cmp	r0, #0
   11ebc:	beq	11f14 <readstat_parse_por+0xe70>
   11ec0:	mov	r5, r6
   11ec4:	mov	r9, r8
   11ec8:	mov	r8, r0
   11ecc:	ldr	r3, [r4, #24]
   11ed0:	cmp	r3, #0
   11ed4:	beq	11db0 <readstat_parse_por+0xd0c>
   11ed8:	ldr	r3, [r4, #628]	; 0x274
   11edc:	add	r3, r3, #1
   11ee0:	str	r3, [sp]
   11ee4:	add	r3, r9, #187	; 0xbb
   11ee8:	ldr	r2, [pc, #-1880]	; 11798 <readstat_parse_por+0x6f4>
   11eec:	add	r2, pc, r2
   11ef0:	mov	r1, #1024	; 0x400
   11ef4:	add	r6, sp, #336	; 0x150
   11ef8:	mov	r0, r6
   11efc:	bl	42ac <snprintf@plt>
   11f00:	ldr	r3, [r4, #24]
   11f04:	ldr	r1, [r4, #36]	; 0x24
   11f08:	mov	r0, r6
   11f0c:	blx	r3
   11f10:	b	11db0 <readstat_parse_por+0xd0c>
   11f14:	ldr	r3, [sp, #56]	; 0x38
   11f18:	cmp	r3, #0
   11f1c:	beq	11f34 <readstat_parse_por+0xe90>
   11f20:	mov	r5, r6
   11f24:	cmp	fp, #0
   11f28:	moveq	r8, r9
   11f2c:	movne	r8, #5
   11f30:	b	11db0 <readstat_parse_por+0xd0c>
   11f34:	vldr	d7, [r7]
   11f38:	vcmp.f64	d7, d7
   11f3c:	vmrs	APSR_nzcv, fpscr
   11f40:	ldrb	r3, [sp, #77]	; 0x4d
   11f44:	bic	r3, r3, #1
   11f48:	orrvs	r3, r3, #1
   11f4c:	strb	r3, [sp, #77]	; 0x4d
   11f50:	b	11e0c <readstat_parse_por+0xd68>
   11f54:	mov	r5, r6
   11f58:	mov	r8, #4
   11f5c:	b	11db0 <readstat_parse_por+0xd0c>
   11f60:	mov	r5, r6
   11f64:	mov	r8, r0
   11f68:	b	11db0 <readstat_parse_por+0xd0c>
   11f6c:	mov	r6, r0
   11f70:	b	11468 <readstat_parse_por+0x3c4>
   11f74:	mov	r6, r0
   11f78:	b	11468 <readstat_parse_por+0x3c4>
   11f7c:	mov	r6, r0
   11f80:	b	11468 <readstat_parse_por+0x3c4>
   11f84:	mov	r6, r0
   11f88:	b	11468 <readstat_parse_por+0x3c4>
   11f8c:	ldr	r5, [sp, #20]
   11f90:	mov	r6, #5
   11f94:	b	11184 <readstat_parse_por+0xe0>
   11f98:	ldr	r5, [sp, #20]
   11f9c:	b	11184 <readstat_parse_por+0xe0>
   11fa0:	ldr	r5, [sp, #20]
   11fa4:	b	11184 <readstat_parse_por+0xe0>
   11fa8:	ldr	r5, [sp, #20]
   11fac:	b	11184 <readstat_parse_por+0xe0>
   11fb0:	ldr	r5, [sp, #20]
   11fb4:	b	11184 <readstat_parse_por+0xe0>
   11fb8:	ldr	r5, [sp, #20]
   11fbc:	b	11184 <readstat_parse_por+0xe0>
   11fc0:	ldr	r5, [sp, #20]
   11fc4:	mov	r6, #5
   11fc8:	b	11184 <readstat_parse_por+0xe0>
   11fcc:	mov	r5, r6
   11fd0:	mov	r9, r8
   11fd4:	mov	r8, #5
   11fd8:	b	11ecc <readstat_parse_por+0xe28>
   11fdc:	ldr	r5, [sp, #20]
   11fe0:	mov	r6, #5
   11fe4:	b	11184 <readstat_parse_por+0xe0>
   11fe8:	ldr	r5, [sp, #20]
   11fec:	mov	r6, #5
   11ff0:	b	11184 <readstat_parse_por+0xe0>
   11ff4:	ldr	r5, [sp, #20]
   11ff8:	mov	r6, #5
   11ffc:	b	11184 <readstat_parse_por+0xe0>
   12000:	ldr	r5, [sp, #20]
   12004:	mov	r6, #5
   12008:	b	11184 <readstat_parse_por+0xe0>
   1200c:	ldr	r5, [sp, #20]
   12010:	mov	r6, #5
   12014:	b	11184 <readstat_parse_por+0xe0>
   12018:	ldr	r5, [sp, #20]
   1201c:	mov	r6, #5
   12020:	b	11184 <readstat_parse_por+0xe0>
   12024:	ldr	r5, [sp, #20]
   12028:	mov	r6, #5
   1202c:	b	11184 <readstat_parse_por+0xe0>
   12030:	ldr	r5, [sp, #20]
   12034:	mov	r6, #5
   12038:	b	11184 <readstat_parse_por+0xe0>
   1203c:	ldr	r5, [sp, #20]
   12040:	mov	r6, #5
   12044:	b	11184 <readstat_parse_por+0xe0>

00012048 <por_write_base30_integer>:
   12048:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1204c:	mov	r6, r2
   12050:	mov	r7, r3
   12054:	orrs	r3, r6, r7
   12058:	beq	12100 <por_write_base30_integer+0xb8>
   1205c:	mov	sl, r0
   12060:	sub	r5, r0, #1
   12064:	mov	r8, r5
   12068:	mov	r4, #0
   1206c:	b	12074 <por_write_base30_integer+0x2c>
   12070:	mov	r4, r9
   12074:	add	r9, r4, #1
   12078:	mov	r2, #30
   1207c:	mov	r3, #0
   12080:	mov	r0, r6
   12084:	mov	r1, r7
   12088:	bl	24680 <__aeabi_uldivmod>
   1208c:	cmp	r3, #0
   12090:	cmpeq	r2, #9
   12094:	addls	r2, r2, #48	; 0x30
   12098:	addhi	r2, r2, #55	; 0x37
   1209c:	uxtb	r2, r2
   120a0:	strb	r2, [r8, #1]!
   120a4:	mov	r2, #30
   120a8:	mov	r3, #0
   120ac:	mov	r0, r6
   120b0:	mov	r1, r7
   120b4:	bl	24680 <__aeabi_uldivmod>
   120b8:	mov	r6, r0
   120bc:	mov	r7, r1
   120c0:	orrs	r3, r6, r7
   120c4:	bne	12070 <por_write_base30_integer+0x28>
   120c8:	cmp	r4, #0
   120cc:	ble	120f8 <por_write_base30_integer+0xb0>
   120d0:	add	r4, sl, r4
   120d4:	mov	r3, #0
   120d8:	ldrb	r2, [r5, #1]
   120dc:	ldrb	r1, [r4]
   120e0:	strb	r1, [r5, #1]!
   120e4:	strb	r2, [r4], #-1
   120e8:	add	r3, r3, #1
   120ec:	sub	r2, r4, sl
   120f0:	cmp	r3, r2
   120f4:	blt	120d8 <por_write_base30_integer+0x90>
   120f8:	mov	r0, r9
   120fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12100:	mov	r9, #0
   12104:	b	120f8 <por_write_base30_integer+0xb0>

00012108 <por_variable_width>:
   12108:	cmp	r0, #0
   1210c:	addeq	r0, r1, #54	; 0x36
   12110:	movne	r0, #54	; 0x36
   12114:	bx	lr

00012118 <por_metadata_ok>:
   12118:	ldr	r0, [r0, #16]
   1211c:	cmp	r0, #0
   12120:	movne	r0, #6
   12124:	moveq	r0, #0
   12128:	bx	lr

0001212c <por_write_string_n>:
   1212c:	push	{r4, r5, r6, r7, r8, lr}
   12130:	sub	sp, sp, #1040	; 0x410
   12134:	mov	r7, r0
   12138:	mov	r6, r1
   1213c:	mov	r8, r2
   12140:	mov	r4, r3
   12144:	mov	r0, r3
   12148:	bl	4138 <malloc@plt>
   1214c:	mov	r5, r0
   12150:	ldr	r3, [r6, #4]
   12154:	str	r3, [sp, #4]
   12158:	ldr	r3, [r6]
   1215c:	str	r3, [sp]
   12160:	mov	r3, r4
   12164:	mov	r2, r0
   12168:	mov	r1, r4
   1216c:	mov	r0, r8
   12170:	bl	43c0 <por_utf8_decode@plt>
   12174:	cmn	r0, #1
   12178:	beq	121bc <por_write_string_n+0x90>
   1217c:	ldr	r3, [pc, #140]	; 12210 <por_write_string_n+0xe4>
   12180:	add	r3, pc, r3
   12184:	str	r3, [sp]
   12188:	mov	r3, #80	; 0x50
   1218c:	mov	r2, r0
   12190:	mov	r1, r5
   12194:	mov	r0, r7
   12198:	bl	454c <readstat_write_bytes_as_lines@plt>
   1219c:	mov	r4, r0
   121a0:	cmp	r5, #0
   121a4:	beq	121b0 <por_write_string_n+0x84>
   121a8:	mov	r0, r5
   121ac:	bl	3ee0 <free@plt>
   121b0:	mov	r0, r4
   121b4:	add	sp, sp, #1040	; 0x410
   121b8:	pop	{r4, r5, r6, r7, r8, pc}
   121bc:	ldr	r3, [r7, #296]	; 0x128
   121c0:	cmp	r3, #0
   121c4:	moveq	r4, #16
   121c8:	beq	121a0 <por_write_string_n+0x74>
   121cc:	str	r8, [sp, #12]
   121d0:	str	r4, [sp, #8]
   121d4:	str	r4, [sp]
   121d8:	mov	r3, #0
   121dc:	str	r3, [sp, #4]
   121e0:	ldr	r2, [pc, #44]	; 12214 <por_write_string_n+0xe8>
   121e4:	add	r2, pc, r2
   121e8:	mov	r1, #1024	; 0x400
   121ec:	add	r4, sp, #16
   121f0:	mov	r0, r4
   121f4:	bl	42ac <snprintf@plt>
   121f8:	ldr	r3, [r7, #296]	; 0x128
   121fc:	ldr	r1, [r7, #304]	; 0x130
   12200:	mov	r0, r4
   12204:	blx	r3
   12208:	mov	r4, #16
   1220c:	b	121a0 <por_write_string_n+0x74>
   12210:	.word	0x0001376c
   12214:	.word	0x000136dc

00012218 <por_write_tag>:
   12218:	push	{lr}		; (str lr, [sp, #-4]!)
   1221c:	sub	sp, sp, #12
   12220:	strb	r2, [sp, #4]
   12224:	mov	r3, #0
   12228:	strb	r3, [sp, #5]
   1222c:	mov	r3, #1
   12230:	add	r2, sp, #4
   12234:	bl	1212c <por_write_string_n>
   12238:	add	sp, sp, #12
   1223c:	pop	{pc}		; (ldr pc, [sp], #4)

00012240 <por_write_row>:
   12240:	push	{r4, lr}
   12244:	cmp	r2, #0
   12248:	beq	12284 <por_write_row+0x44>
   1224c:	sub	r4, r1, #1
   12250:	mov	r3, #0
   12254:	mov	ip, r3
   12258:	b	12268 <por_write_row+0x28>
   1225c:	add	ip, ip, #1
   12260:	cmp	ip, r2
   12264:	beq	12288 <por_write_row+0x48>
   12268:	ldrb	lr, [r4, #1]!
   1226c:	cmp	lr, #0
   12270:	beq	1225c <por_write_row+0x1c>
   12274:	cmp	ip, r3
   12278:	strbne	lr, [r1, r3]
   1227c:	add	r3, r3, #1
   12280:	b	1225c <por_write_row+0x1c>
   12284:	mov	r3, #0
   12288:	mov	r2, r1
   1228c:	ldr	r1, [r0, #300]	; 0x12c
   12290:	bl	1212c <por_write_string_n>
   12294:	pop	{r4, pc}

00012298 <por_end_data>:
   12298:	push	{r4, r5, r6, lr}
   1229c:	mov	r4, r0
   122a0:	mov	r2, #90	; 0x5a
   122a4:	ldr	r1, [r0, #300]	; 0x12c
   122a8:	bl	12218 <por_write_tag>
   122ac:	subs	r5, r0, #0
   122b0:	beq	122d8 <por_end_data+0x40>
   122b4:	ldr	r4, [r4, #300]	; 0x12c
   122b8:	ldr	r0, [r4]
   122bc:	cmp	r0, #0
   122c0:	beq	122c8 <por_end_data+0x30>
   122c4:	bl	3ee0 <free@plt>
   122c8:	mov	r0, r4
   122cc:	bl	3ee0 <free@plt>
   122d0:	mov	r0, r5
   122d4:	pop	{r4, r5, r6, pc}
   122d8:	ldr	r3, [pc, #24]	; 122f8 <por_end_data+0x60>
   122dc:	add	r3, pc, r3
   122e0:	mov	r2, #80	; 0x50
   122e4:	mov	r1, #90	; 0x5a
   122e8:	mov	r0, r4
   122ec:	bl	4510 <readstat_write_line_padding@plt>
   122f0:	mov	r5, r0
   122f4:	b	122b4 <por_end_data+0x1c>
   122f8:	.word	0x00013610

000122fc <por_write_double_to_buffer>:
   122fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12300:	vpush	{d8-d9}
   12304:	sub	sp, sp, #20
   12308:	mov	r9, r0
   1230c:	str	r1, [sp, #4]
   12310:	vcmp.f64	d0, d0
   12314:	vmrs	APSR_nzcv, fpscr
   12318:	bvs	12390 <por_write_double_to_buffer+0x94>
   1231c:	vmov.f64	d9, d0
   12320:	mov	r8, r2
   12324:	vabs.f64	d0, d0
   12328:	vldr	d7, [pc, #616]	; 12598 <por_write_double_to_buffer+0x29c>
   1232c:	vcmp.f64	d0, d7
   12330:	vmrs	APSR_nzcv, fpscr
   12334:	ble	123a8 <por_write_double_to_buffer+0xac>
   12338:	vcmpe.f64	d9, #0.0
   1233c:	vmrs	APSR_nzcv, fpscr
   12340:	movmi	r3, #45	; 0x2d
   12344:	strbmi	r3, [r0]
   12348:	movmi	r0, #1
   1234c:	movpl	r0, #0
   12350:	mov	r3, r9
   12354:	mov	r2, #49	; 0x31
   12358:	strb	r2, [r3, r0]!
   1235c:	mov	r2, #43	; 0x2b
   12360:	strb	r2, [r3, #1]
   12364:	mov	r2, #84	; 0x54
   12368:	strb	r2, [r3, #2]
   1236c:	strb	r2, [r3, #3]
   12370:	add	r0, r0, #5
   12374:	mov	r2, #47	; 0x2f
   12378:	strb	r2, [r3, #4]
   1237c:	mov	r3, #0
   12380:	strb	r3, [r9, r0]
   12384:	add	sp, sp, #20
   12388:	vpop	{d8-d9}
   1238c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12390:	mov	r3, #42	; 0x2a
   12394:	strb	r3, [r0]
   12398:	mov	r3, #46	; 0x2e
   1239c:	strb	r3, [r0, #1]
   123a0:	mov	r0, #2
   123a4:	b	1237c <por_write_double_to_buffer+0x80>
   123a8:	add	r0, sp, #8
   123ac:	bl	41a4 <modf@plt>
   123b0:	vmov.f64	d8, d0
   123b4:	ldrd	r0, [sp, #8]
   123b8:	bl	246cc <__aeabi_d2lz>
   123bc:	mov	r4, r0
   123c0:	mov	r5, r1
   123c4:	vcmpe.f64	d9, #0.0
   123c8:	vmrs	APSR_nzcv, fpscr
   123cc:	movmi	r3, #45	; 0x2d
   123d0:	strbmi	r3, [r9]
   123d4:	movmi	sl, #1
   123d8:	movpl	sl, #0
   123dc:	orrs	r3, r4, r5
   123e0:	beq	12540 <por_write_double_to_buffer+0x244>
   123e4:	vcmp.f64	d8, #0.0
   123e8:	vmrs	APSR_nzcv, fpscr
   123ec:	bne	12568 <por_write_double_to_buffer+0x26c>
   123f0:	mov	r2, #30
   123f4:	mov	r3, #0
   123f8:	bl	245ac <__aeabi_ldivmod>
   123fc:	mov	r6, r2
   12400:	mov	r7, r3
   12404:	orrs	r3, r6, r7
   12408:	movne	r6, #0
   1240c:	movne	r7, #0
   12410:	bne	12454 <por_write_double_to_buffer+0x158>
   12414:	mov	r2, #30
   12418:	mov	r3, #0
   1241c:	mov	r0, r4
   12420:	mov	r1, r5
   12424:	bl	245ac <__aeabi_ldivmod>
   12428:	mov	r4, r0
   1242c:	mov	r5, r1
   12430:	adds	r6, r6, #1
   12434:	adc	r7, r7, #0
   12438:	orrs	r3, r4, r5
   1243c:	beq	12454 <por_write_double_to_buffer+0x158>
   12440:	mov	r2, #30
   12444:	mov	r3, #0
   12448:	bl	245ac <__aeabi_ldivmod>
   1244c:	orrs	r3, r2, r3
   12450:	beq	12414 <por_write_double_to_buffer+0x118>
   12454:	mov	r2, r4
   12458:	mov	r3, r5
   1245c:	ldr	r1, [sp, #4]
   12460:	sub	r1, r1, sl
   12464:	add	r0, r9, sl
   12468:	bl	12048 <por_write_base30_integer>
   1246c:	mov	r4, r0
   12470:	add	r3, sl, r0
   12474:	vcmp.f64	d8, #0.0
   12478:	vmrs	APSR_nzcv, fpscr
   1247c:	beq	1258c <por_write_double_to_buffer+0x290>
   12480:	add	sl, r3, #1
   12484:	add	r5, r9, r3
   12488:	mov	r2, #46	; 0x2e
   1248c:	strb	r2, [r9, r3]
   12490:	cmp	r4, r8
   12494:	bge	12508 <por_write_double_to_buffer+0x20c>
   12498:	vldr	d9, [pc, #256]	; 125a0 <por_write_double_to_buffer+0x2a4>
   1249c:	add	fp, sp, #8
   124a0:	mov	r0, fp
   124a4:	vmul.f64	d0, d8, d9
   124a8:	bl	41a4 <modf@plt>
   124ac:	vmov.f64	d8, d0
   124b0:	ldrd	r0, [sp, #8]
   124b4:	bl	246cc <__aeabi_d2lz>
   124b8:	cmp	r0, #0
   124bc:	sbcs	r3, r1, #0
   124c0:	blt	12584 <por_write_double_to_buffer+0x288>
   124c4:	add	sl, sl, #1
   124c8:	cmp	r1, #0
   124cc:	cmpeq	r0, #9
   124d0:	addls	r0, r0, #48	; 0x30
   124d4:	addhi	r0, r0, #55	; 0x37
   124d8:	uxtb	r0, r0
   124dc:	strb	r0, [r5, #1]!
   124e0:	add	r4, r4, #1
   124e4:	vcmp.f64	d8, #0.0
   124e8:	vmrs	APSR_nzcv, fpscr
   124ec:	movne	r3, #1
   124f0:	moveq	r3, #0
   124f4:	cmp	r8, r4
   124f8:	movle	r3, #0
   124fc:	andgt	r3, r3, #1
   12500:	cmp	r3, #0
   12504:	bne	124a0 <por_write_double_to_buffer+0x1a4>
   12508:	orrs	r3, r6, r7
   1250c:	moveq	r3, sl
   12510:	beq	12558 <por_write_double_to_buffer+0x25c>
   12514:	add	r4, sl, #1
   12518:	mov	r3, #43	; 0x2b
   1251c:	strb	r3, [r9, sl]
   12520:	mov	r2, r6
   12524:	mov	r3, r7
   12528:	ldr	r1, [sp, #4]
   1252c:	sub	r1, r1, r4
   12530:	add	r0, r9, r4
   12534:	bl	12048 <por_write_base30_integer>
   12538:	add	r3, r4, r0
   1253c:	b	12558 <por_write_double_to_buffer+0x25c>
   12540:	add	r3, sl, #1
   12544:	mov	r2, #48	; 0x30
   12548:	strb	r2, [r9, sl]
   1254c:	vcmp.f64	d8, #0.0
   12550:	vmrs	APSR_nzcv, fpscr
   12554:	bne	12574 <por_write_double_to_buffer+0x278>
   12558:	add	r0, r3, #1
   1255c:	mov	r2, #47	; 0x2f
   12560:	strb	r2, [r9, r3]
   12564:	b	1237c <por_write_double_to_buffer+0x80>
   12568:	mov	r6, #0
   1256c:	mov	r7, #0
   12570:	b	12454 <por_write_double_to_buffer+0x158>
   12574:	mov	r6, r0
   12578:	mov	r7, r1
   1257c:	mov	r4, #0
   12580:	b	12480 <por_write_double_to_buffer+0x184>
   12584:	mvn	r0, #0
   12588:	b	12384 <por_write_double_to_buffer+0x88>
   1258c:	mov	sl, r3
   12590:	b	12508 <por_write_double_to_buffer+0x20c>
   12594:	nop			; (mov r0, r0)
   12598:	.word	0xffffffff
   1259c:	.word	0x7fefffff
   125a0:	.word	0x00000000
   125a4:	.word	0x403e0000

000125a8 <por_write_double>:
   125a8:	push	{r4, r5, lr}
   125ac:	vpush	{d8}
   125b0:	sub	sp, sp, #1280	; 0x500
   125b4:	sub	sp, sp, #12
   125b8:	mov	r4, r0
   125bc:	mov	r5, r1
   125c0:	vmov.f64	d8, d0
   125c4:	mov	r2, #50	; 0x32
   125c8:	mov	r1, #256	; 0x100
   125cc:	add	r0, sp, #8
   125d0:	bl	122fc <por_write_double_to_buffer>
   125d4:	cmn	r0, #1
   125d8:	beq	12600 <por_write_double+0x58>
   125dc:	mov	r3, r0
   125e0:	add	r2, sp, #8
   125e4:	mov	r1, r5
   125e8:	mov	r0, r4
   125ec:	bl	1212c <por_write_string_n>
   125f0:	add	sp, sp, #1280	; 0x500
   125f4:	add	sp, sp, #12
   125f8:	vpop	{d8}
   125fc:	pop	{r4, r5, pc}
   12600:	ldr	r3, [r4, #296]	; 0x128
   12604:	cmp	r3, #0
   12608:	moveq	r0, #13
   1260c:	beq	125f0 <por_write_double+0x48>
   12610:	vstr	d8, [sp]
   12614:	ldr	r2, [pc, #40]	; 12644 <por_write_double+0x9c>
   12618:	add	r2, pc, r2
   1261c:	mov	r1, #1024	; 0x400
   12620:	add	r5, sp, #264	; 0x108
   12624:	mov	r0, r5
   12628:	bl	42ac <snprintf@plt>
   1262c:	ldr	r3, [r4, #296]	; 0x128
   12630:	ldr	r1, [r4, #304]	; 0x130
   12634:	mov	r0, r5
   12638:	blx	r3
   1263c:	mov	r0, #13
   12640:	b	125f0 <por_write_double+0x48>
   12644:	.word	0x000132d8

00012648 <por_write_string_field_n>:
   12648:	push	{r4, r5, r6, lr}
   1264c:	sub	sp, sp, #8
   12650:	mov	r4, r0
   12654:	mov	r5, r1
   12658:	mov	r6, r2
   1265c:	str	r3, [sp, #4]
   12660:	vmov	s15, r3
   12664:	vcvt.f64.u32	d0, s15
   12668:	bl	125a8 <por_write_double>
   1266c:	cmp	r0, #0
   12670:	beq	1267c <por_write_string_field_n+0x34>
   12674:	add	sp, sp, #8
   12678:	pop	{r4, r5, r6, pc}
   1267c:	ldr	r3, [sp, #4]
   12680:	mov	r2, r6
   12684:	mov	r1, r5
   12688:	mov	r0, r4
   1268c:	bl	1212c <por_write_string_n>
   12690:	b	12674 <por_write_string_field_n+0x2c>

00012694 <por_write_string_field>:
   12694:	push	{r4, r5, r6, lr}
   12698:	mov	r5, r0
   1269c:	mov	r6, r1
   126a0:	mov	r4, r2
   126a4:	mov	r0, r2
   126a8:	bl	4228 <strlen@plt>
   126ac:	mov	r3, r0
   126b0:	mov	r2, r4
   126b4:	mov	r1, r6
   126b8:	mov	r0, r5
   126bc:	bl	12648 <por_write_string_field_n>
   126c0:	pop	{r4, r5, r6, pc}

000126c4 <por_emit_format>:
   126c4:	push	{r4, r5, r6, lr}
   126c8:	mov	r5, r0
   126cc:	mov	r6, r1
   126d0:	mov	r4, r2
   126d4:	vldr	s15, [r2]
   126d8:	vcvt.f64.s32	d0, s15
   126dc:	bl	125a8 <por_write_double>
   126e0:	cmp	r0, #0
   126e4:	popne	{r4, r5, r6, pc}
   126e8:	vldr	s15, [r4, #4]
   126ec:	vcvt.f64.s32	d0, s15
   126f0:	mov	r1, r6
   126f4:	mov	r0, r5
   126f8:	bl	125a8 <por_write_double>
   126fc:	cmp	r0, #0
   12700:	popne	{r4, r5, r6, pc}
   12704:	vldr	s0, [r4, #8]
   12708:	vcvt.f64.s32	d0, s0
   1270c:	mov	r1, r6
   12710:	mov	r0, r5
   12714:	bl	125a8 <por_write_double>
   12718:	pop	{r4, r5, r6, pc}

0001271c <por_write_double_value>:
   1271c:	push	{r4, lr}
   12720:	mov	r2, #50	; 0x32
   12724:	mov	r1, #54	; 0x36
   12728:	bl	122fc <por_write_double_to_buffer>
   1272c:	cmn	r0, #1
   12730:	moveq	r0, #13
   12734:	movne	r0, #0
   12738:	pop	{r4, pc}

0001273c <por_write_missing_number>:
   1273c:	push	{r4, lr}
   12740:	vldr	d0, [pc, #8]	; 12750 <por_write_missing_number+0x14>
   12744:	bl	1271c <por_write_double_value>
   12748:	pop	{r4, pc}
   1274c:	nop			; (mov r0, r0)
   12750:	.word	0x00000000
   12754:	.word	0x7ff80000

00012758 <por_write_missing_string>:
   12758:	push	{r4, lr}
   1275c:	vldr	d0, [pc, #4]	; 12768 <por_write_missing_string+0x10>
   12760:	bl	1271c <por_write_double_value>
   12764:	pop	{r4, pc}
	...

00012770 <por_write_float_value>:
   12770:	push	{r4, lr}
   12774:	vcvt.f64.f32	d0, s0
   12778:	bl	1271c <por_write_double_value>
   1277c:	pop	{r4, pc}

00012780 <por_write_int32_value>:
   12780:	push	{r4, lr}
   12784:	vmov	s15, r2
   12788:	vcvt.f64.s32	d0, s15
   1278c:	bl	1271c <por_write_double_value>
   12790:	pop	{r4, pc}

00012794 <por_write_int16_value>:
   12794:	push	{r4, lr}
   12798:	vmov	s15, r2
   1279c:	vcvt.f64.s32	d0, s15
   127a0:	bl	1271c <por_write_double_value>
   127a4:	pop	{r4, pc}

000127a8 <por_write_int8_value>:
   127a8:	push	{r4, lr}
   127ac:	vmov	s15, r2
   127b0:	vcvt.f64.s32	d0, s15
   127b4:	bl	1271c <por_write_double_value>
   127b8:	pop	{r4, pc}

000127bc <por_variable_ok>:
   127bc:	push	{r4, lr}
   127c0:	bl	4390 <readstat_variable_get_name@plt>
   127c4:	mov	r4, r0
   127c8:	bl	4228 <strlen@plt>
   127cc:	sub	r0, r0, #1
   127d0:	cmp	r0, #7
   127d4:	bls	127e0 <por_variable_ok+0x24>
   127d8:	mov	r0, #28
   127dc:	pop	{r4, pc}
   127e0:	ldrb	r1, [r4]
   127e4:	cmp	r1, #0
   127e8:	beq	1286c <por_variable_ok+0xb0>
   127ec:	mov	r0, r4
   127f0:	mov	r2, r1
   127f4:	mov	lr, #1
   127f8:	ldr	r4, [pc, #116]	; 12874 <por_variable_ok+0xb8>
   127fc:	b	1280c <por_variable_ok+0x50>
   12800:	ldrb	r2, [r0, #1]!
   12804:	cmp	r2, #0
   12808:	beq	12854 <por_variable_ok+0x98>
   1280c:	sub	r3, r2, #35	; 0x23
   12810:	uxtb	r3, r3
   12814:	cmp	r3, #22
   12818:	lsrls	r3, r4, r3
   1281c:	eorls	r3, r3, #1
   12820:	andls	r3, r3, #1
   12824:	movhi	r3, lr
   12828:	sub	ip, r2, #64	; 0x40
   1282c:	uxtb	ip, ip
   12830:	eor	r3, r3, #1
   12834:	cmp	ip, #26
   12838:	orrls	r3, r3, #1
   1283c:	cmp	r3, #0
   12840:	bne	12800 <por_variable_ok+0x44>
   12844:	cmp	r2, #95	; 0x5f
   12848:	beq	12800 <por_variable_ok+0x44>
   1284c:	mov	r0, #26
   12850:	pop	{r4, pc}
   12854:	sub	r0, r1, #64	; 0x40
   12858:	uxtb	r0, r0
   1285c:	cmp	r0, #26
   12860:	movhi	r0, #25
   12864:	movls	r0, #0
   12868:	pop	{r4, pc}
   1286c:	mov	r0, #25
   12870:	pop	{r4, pc}
   12874:	.word	0x007fe803

00012878 <por_write_string_value>:
   12878:	push	{r4, r5, r6, r7, r8, lr}
   1287c:	mov	r6, r0
   12880:	mov	r7, r1
   12884:	mov	r5, r2
   12888:	mov	r0, r2
   1288c:	bl	4228 <strlen@plt>
   12890:	subs	r4, r0, #0
   12894:	moveq	r4, #1
   12898:	ldreq	r5, [pc, #80]	; 128f0 <por_write_string_value+0x78>
   1289c:	addeq	r5, pc, r5
   128a0:	mov	r0, r7
   128a4:	bl	42f4 <readstat_variable_get_storage_width@plt>
   128a8:	cmp	r4, r0
   128ac:	movcs	r4, r0
   128b0:	mov	r2, #50	; 0x32
   128b4:	vmov	s15, r4
   128b8:	vcvt.f64.u32	d0, s15
   128bc:	mov	r1, #54	; 0x36
   128c0:	mov	r0, r6
   128c4:	bl	122fc <por_write_double_to_buffer>
   128c8:	cmn	r0, #1
   128cc:	bne	128d8 <por_write_string_value+0x60>
   128d0:	mov	r0, #13
   128d4:	pop	{r4, r5, r6, r7, r8, pc}
   128d8:	mov	r2, r4
   128dc:	mov	r1, r5
   128e0:	add	r0, r6, r0
   128e4:	bl	42e8 <strncpy@plt>
   128e8:	mov	r0, #0
   128ec:	pop	{r4, r5, r6, r7, r8, pc}
   128f0:	.word	0x00013074

000128f4 <por_emit_header>:
   128f4:	push	{r4, r5, r6, r7, r8, lr}
   128f8:	sub	sp, sp, #464	; 0x1d0
   128fc:	mov	r5, r0
   12900:	mov	r6, r1
   12904:	ldr	r7, [pc, #284]	; 12a28 <por_emit_header+0x134>
   12908:	add	r7, pc, r7
   1290c:	add	r4, r0, #88	; 0x58
   12910:	mov	r0, r4
   12914:	bl	4228 <strlen@plt>
   12918:	mov	r8, r0
   1291c:	mov	r2, #200	; 0xc8
   12920:	mov	r1, #48	; 0x30
   12924:	add	r0, sp, #264	; 0x108
   12928:	bl	42d0 <memset@plt>
   1292c:	add	ip, sp, #304	; 0x130
   12930:	ldr	lr, [pc, #244]	; 12a2c <por_emit_header+0x138>
   12934:	add	lr, pc, lr
   12938:	ldm	lr!, {r0, r1, r2, r3}
   1293c:	stmia	ip!, {r0, r1, r2, r3}
   12940:	ldr	r3, [lr]
   12944:	str	r3, [ip]
   12948:	mov	r2, #20
   1294c:	mov	r1, r4
   12950:	add	r0, sp, #324	; 0x144
   12954:	bl	42e8 <strncpy@plt>
   12958:	cmp	r8, #19
   1295c:	bls	129f0 <por_emit_header+0xfc>
   12960:	ldr	r3, [pc, #200]	; 12a30 <por_emit_header+0x13c>
   12964:	add	r3, pc, r3
   12968:	str	r3, [sp]
   1296c:	mov	r3, #80	; 0x50
   12970:	mov	r2, #200	; 0xc8
   12974:	add	r1, sp, #264	; 0x108
   12978:	mov	r0, r5
   1297c:	bl	454c <readstat_write_bytes_as_lines@plt>
   12980:	mov	r2, #256	; 0x100
   12984:	mov	r1, #48	; 0x30
   12988:	add	r4, sp, #8
   1298c:	mov	r0, r4
   12990:	bl	42d0 <memset@plt>
   12994:	ldr	r3, [pc, #152]	; 12a34 <por_emit_header+0x140>
   12998:	ldr	r1, [r7, r3]
   1299c:	sub	r3, r1, #1
   129a0:	mov	r0, r4
   129a4:	add	r1, r1, #255	; 0xff
   129a8:	ldrsb	r2, [r3, #1]!
   129ac:	cmp	r2, #0
   129b0:	strbne	r2, [r0]
   129b4:	add	r0, r0, #1
   129b8:	cmp	r3, r1
   129bc:	bne	129a8 <por_emit_header+0xb4>
   129c0:	ldr	r3, [pc, #112]	; 12a38 <por_emit_header+0x144>
   129c4:	add	r3, pc, r3
   129c8:	str	r3, [sp]
   129cc:	mov	r3, #80	; 0x50
   129d0:	mov	r2, #256	; 0x100
   129d4:	add	r1, sp, #8
   129d8:	mov	r0, r5
   129dc:	bl	454c <readstat_write_bytes_as_lines@plt>
   129e0:	cmp	r0, #0
   129e4:	beq	12a0c <por_emit_header+0x118>
   129e8:	add	sp, sp, #464	; 0x1d0
   129ec:	pop	{r4, r5, r6, r7, r8, pc}
   129f0:	add	r3, sp, #464	; 0x1d0
   129f4:	add	r0, r3, r8
   129f8:	rsb	r2, r8, #20
   129fc:	mov	r1, #32
   12a00:	sub	r0, r0, #140	; 0x8c
   12a04:	bl	42d0 <memset@plt>
   12a08:	b	12960 <por_emit_header+0x6c>
   12a0c:	mov	r3, #8
   12a10:	ldr	r2, [pc, #36]	; 12a3c <por_emit_header+0x148>
   12a14:	add	r2, pc, r2
   12a18:	mov	r1, r6
   12a1c:	mov	r0, r5
   12a20:	bl	1212c <por_write_string_n>
   12a24:	b	129e8 <por_emit_header+0xf4>
   12a28:	.word	0x000326f0
   12a2c:	.word	0x00012fe0
   12a30:	.word	0x00012f88
   12a34:	.word	0x00000304
   12a38:	.word	0x00012f28
   12a3c:	.word	0x00012e88

00012a40 <por_begin_data>:
   12a40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a44:	vpush	{d8-d11}
   12a48:	sub	sp, sp, #76	; 0x4c
   12a4c:	mov	fp, r0
   12a50:	ldr	r8, [pc, #1552]	; 13068 <por_begin_data+0x628>
   12a54:	add	r8, pc, r8
   12a58:	mov	r1, #8
   12a5c:	mov	r0, #1
   12a60:	bl	3d78 <calloc@plt>
   12a64:	mov	r4, r0
   12a68:	ldr	r3, [pc, #1532]	; 1306c <por_begin_data+0x62c>
   12a6c:	ldr	r1, [r8, r3]
   12a70:	sub	r7, r1, #2
   12a74:	add	r1, r1, #508	; 0x1fc
   12a78:	add	r1, r1, #2
   12a7c:	mov	r5, r7
   12a80:	mov	r3, #0
   12a84:	ldrh	r2, [r5, #2]!
   12a88:	cmp	r2, r3
   12a8c:	movcs	r3, r2
   12a90:	cmp	r1, r5
   12a94:	bne	12a84 <por_begin_data+0x44>
   12a98:	add	r6, r3, #1
   12a9c:	mov	r0, r6
   12aa0:	bl	4138 <malloc@plt>
   12aa4:	str	r0, [r4]
   12aa8:	str	r6, [r4, #4]
   12aac:	ldr	r3, [pc, #1468]	; 13070 <por_begin_data+0x630>
   12ab0:	ldr	r3, [r8, r3]
   12ab4:	ldrh	r2, [r7, #2]!
   12ab8:	cmp	r2, #0
   12abc:	ldrne	r1, [r4]
   12ac0:	ldrbne	r0, [r3]
   12ac4:	strbne	r0, [r1, r2]
   12ac8:	ldrsb	r2, [r3]
   12acc:	cmp	r2, #0
   12ad0:	ldrne	r1, [r4]
   12ad4:	strbne	r2, [r1, r2]
   12ad8:	add	r3, r3, #1
   12adc:	cmp	r7, r5
   12ae0:	bne	12ab4 <por_begin_data+0x74>
   12ae4:	mov	r1, r4
   12ae8:	mov	r0, fp
   12aec:	bl	128f4 <por_emit_header>
   12af0:	subs	r5, r0, #0
   12af4:	beq	12b14 <por_begin_data+0xd4>
   12af8:	ldr	r0, [r4]
   12afc:	cmp	r0, #0
   12b00:	beq	12b08 <por_begin_data+0xc8>
   12b04:	bl	3ee0 <free@plt>
   12b08:	mov	r0, r4
   12b0c:	bl	3ee0 <free@plt>
   12b10:	b	13588 <por_begin_data+0xb48>
   12b14:	add	r0, fp, #20
   12b18:	bl	418c <localtime@plt>
   12b1c:	subs	r6, r0, #0
   12b20:	beq	13578 <por_begin_data+0xb38>
   12b24:	mov	r2, #65	; 0x41
   12b28:	mov	r1, r4
   12b2c:	mov	r0, fp
   12b30:	bl	12218 <por_write_tag>
   12b34:	subs	r5, r0, #0
   12b38:	bne	1357c <por_begin_data+0xb3c>
   12b3c:	ldr	r3, [r6, #20]
   12b40:	add	r3, r3, #1888	; 0x760
   12b44:	add	r3, r3, #12
   12b48:	ldr	r2, [pc, #1316]	; 13074 <por_begin_data+0x634>
   12b4c:	umull	r1, r2, r2, r3
   12b50:	lsr	r2, r2, #13
   12b54:	ldr	r0, [pc, #1308]	; 13078 <por_begin_data+0x638>
   12b58:	mul	r0, r0, r2
   12b5c:	ldr	lr, [r6, #12]
   12b60:	ldr	r1, [pc, #1300]	; 1307c <por_begin_data+0x63c>
   12b64:	umull	ip, r2, r1, lr
   12b68:	lsr	r2, r2, #5
   12b6c:	mov	ip, #100	; 0x64
   12b70:	mul	r2, ip, r2
   12b74:	sub	r2, lr, r2
   12b78:	str	r2, [sp, #4]
   12b7c:	ldr	r2, [r6, #16]
   12b80:	add	r2, r2, #1
   12b84:	umull	lr, r1, r1, r2
   12b88:	lsr	r1, r1, #5
   12b8c:	mul	r1, ip, r1
   12b90:	sub	r2, r2, r1
   12b94:	str	r2, [sp]
   12b98:	sub	r3, r3, r0
   12b9c:	ldr	r2, [pc, #1244]	; 13080 <por_begin_data+0x640>
   12ba0:	add	r2, pc, r2
   12ba4:	mov	r1, #9
   12ba8:	add	r5, sp, #56	; 0x38
   12bac:	mov	r0, r5
   12bb0:	bl	42ac <snprintf@plt>
   12bb4:	mov	r2, r5
   12bb8:	mov	r1, r4
   12bbc:	mov	r0, fp
   12bc0:	bl	12694 <por_write_string_field>
   12bc4:	subs	r5, r0, #0
   12bc8:	bne	1357c <por_begin_data+0xb3c>
   12bcc:	ldr	ip, [r6, #8]
   12bd0:	ldr	r2, [pc, #1188]	; 1307c <por_begin_data+0x63c>
   12bd4:	umull	r1, r3, r2, ip
   12bd8:	lsr	r3, r3, #5
   12bdc:	mov	r1, #100	; 0x64
   12be0:	mul	r3, r1, r3
   12be4:	ldr	lr, [r6]
   12be8:	umull	r5, r0, r2, lr
   12bec:	lsr	r0, r0, #5
   12bf0:	mul	r0, r1, r0
   12bf4:	sub	r0, lr, r0
   12bf8:	str	r0, [sp, #4]
   12bfc:	ldr	r0, [r6, #4]
   12c00:	umull	lr, r2, r2, r0
   12c04:	lsr	r2, r2, #5
   12c08:	mul	r2, r1, r2
   12c0c:	sub	r2, r0, r2
   12c10:	str	r2, [sp]
   12c14:	sub	r3, ip, r3
   12c18:	ldr	r2, [pc, #1124]	; 13084 <por_begin_data+0x644>
   12c1c:	add	r2, pc, r2
   12c20:	mov	r1, #7
   12c24:	add	r5, sp, #40	; 0x28
   12c28:	mov	r0, r5
   12c2c:	bl	42ac <snprintf@plt>
   12c30:	mov	r2, r5
   12c34:	mov	r1, r4
   12c38:	mov	r0, fp
   12c3c:	bl	12694 <por_write_string_field>
   12c40:	subs	r5, r0, #0
   12c44:	bne	12af8 <por_begin_data+0xb8>
   12c48:	mov	r2, #49	; 0x31
   12c4c:	mov	r1, r4
   12c50:	mov	r0, fp
   12c54:	bl	12218 <por_write_tag>
   12c58:	subs	r5, r0, #0
   12c5c:	bne	12af8 <por_begin_data+0xb8>
   12c60:	ldr	r2, [pc, #1056]	; 13088 <por_begin_data+0x648>
   12c64:	add	r2, pc, r2
   12c68:	mov	r1, r4
   12c6c:	mov	r0, fp
   12c70:	bl	12694 <por_write_string_field>
   12c74:	subs	r5, r0, #0
   12c78:	bne	12af8 <por_begin_data+0xb8>
   12c7c:	mov	r2, #51	; 0x33
   12c80:	mov	r1, r4
   12c84:	mov	r0, fp
   12c88:	bl	12218 <por_write_tag>
   12c8c:	subs	r5, r0, #0
   12c90:	bne	12af8 <por_begin_data+0xb8>
   12c94:	ldr	r2, [pc, #1008]	; 1308c <por_begin_data+0x64c>
   12c98:	add	r2, pc, r2
   12c9c:	mov	r1, r4
   12ca0:	mov	r0, fp
   12ca4:	bl	12694 <por_write_string_field>
   12ca8:	subs	r5, r0, #0
   12cac:	bne	12af8 <por_begin_data+0xb8>
   12cb0:	mov	r2, #52	; 0x34
   12cb4:	mov	r1, r4
   12cb8:	mov	r0, fp
   12cbc:	bl	12218 <por_write_tag>
   12cc0:	subs	r5, r0, #0
   12cc4:	bne	12af8 <por_begin_data+0xb8>
   12cc8:	vldr	s15, [fp, #28]
   12ccc:	vcvt.f64.s32	d0, s15
   12cd0:	mov	r1, r4
   12cd4:	mov	r0, fp
   12cd8:	bl	125a8 <por_write_double>
   12cdc:	subs	r5, r0, #0
   12ce0:	bne	12af8 <por_begin_data+0xb8>
   12ce4:	mov	r2, #53	; 0x35
   12ce8:	mov	r1, r4
   12cec:	mov	r0, fp
   12cf0:	bl	12218 <por_write_tag>
   12cf4:	subs	r5, r0, #0
   12cf8:	bne	12af8 <por_begin_data+0xb8>
   12cfc:	vldr	d0, [pc, #844]	; 13050 <por_begin_data+0x610>
   12d00:	mov	r1, r4
   12d04:	mov	r0, fp
   12d08:	bl	125a8 <por_write_double>
   12d0c:	subs	r5, r0, #0
   12d10:	bne	12af8 <por_begin_data+0xb8>
   12d14:	ldr	r3, [fp, #224]	; 0xe0
   12d18:	cmp	r3, #0
   12d1c:	beq	12d58 <por_begin_data+0x318>
   12d20:	mov	r2, #54	; 0x36
   12d24:	mov	r1, r4
   12d28:	mov	r0, fp
   12d2c:	bl	12218 <por_write_tag>
   12d30:	subs	r5, r0, #0
   12d34:	bne	12af8 <por_begin_data+0xb8>
   12d38:	ldr	r0, [fp, #224]	; 0xe0
   12d3c:	bl	4390 <readstat_variable_get_name@plt>
   12d40:	mov	r2, r0
   12d44:	mov	r1, r4
   12d48:	mov	r0, fp
   12d4c:	bl	12694 <por_write_string_field>
   12d50:	subs	r5, r0, #0
   12d54:	bne	12af8 <por_begin_data+0xb8>
   12d58:	ldr	r3, [fp, #28]
   12d5c:	cmp	r3, #0
   12d60:	ble	130f4 <por_begin_data+0x6b4>
   12d64:	mov	r3, #0
   12d68:	str	r3, [sp, #12]
   12d6c:	vldr	d9, [pc, #740]	; 13058 <por_begin_data+0x618>
   12d70:	add	r3, sp, #28
   12d74:	str	r3, [sp, #20]
   12d78:	add	r3, sp, #40	; 0x28
   12d7c:	str	r3, [sp, #8]
   12d80:	add	sl, sp, #56	; 0x38
   12d84:	vldr	d8, [pc, #724]	; 13060 <por_begin_data+0x620>
   12d88:	ldr	r1, [sp, #12]
   12d8c:	mov	r0, fp
   12d90:	bl	43a8 <readstat_get_variable@plt>
   12d94:	mov	r6, r0
   12d98:	bl	4390 <readstat_variable_get_name@plt>
   12d9c:	mov	r7, r0
   12da0:	mov	r2, #55	; 0x37
   12da4:	mov	r1, r4
   12da8:	mov	r0, fp
   12dac:	bl	12218 <por_write_tag>
   12db0:	subs	r5, r0, #0
   12db4:	bne	12af8 <por_begin_data+0xb8>
   12db8:	ldr	r3, [r6]
   12dbc:	cmp	r3, #0
   12dc0:	ldreq	r3, [r6, #1600]	; 0x640
   12dc4:	vmoveq	s15, r3
   12dc8:	vcvteq.f64.u32	d0, s15
   12dcc:	vmovne.f64	d0, d9
   12dd0:	mov	r1, r4
   12dd4:	mov	r0, fp
   12dd8:	bl	125a8 <por_write_double>
   12ddc:	subs	r5, r0, #0
   12de0:	bne	12af8 <por_begin_data+0xb8>
   12de4:	mov	r2, r7
   12de8:	mov	r1, r4
   12dec:	mov	r0, fp
   12df0:	bl	12694 <por_write_string_field>
   12df4:	subs	r5, r0, #0
   12df8:	bne	12af8 <por_begin_data+0xb8>
   12dfc:	ldr	r7, [sp, #20]
   12e00:	mov	r1, r7
   12e04:	mov	r0, r6
   12e08:	bl	4120 <spss_format_for_variable@plt>
   12e0c:	subs	r5, r0, #0
   12e10:	bne	12af8 <por_begin_data+0xb8>
   12e14:	mov	r2, r7
   12e18:	mov	r1, r4
   12e1c:	mov	r0, fp
   12e20:	bl	126c4 <por_emit_format>
   12e24:	subs	r5, r0, #0
   12e28:	bne	12af8 <por_begin_data+0xb8>
   12e2c:	mov	r2, r7
   12e30:	mov	r1, r4
   12e34:	mov	r0, fp
   12e38:	bl	126c4 <por_emit_format>
   12e3c:	subs	r5, r0, #0
   12e40:	bne	12af8 <por_begin_data+0xb8>
   12e44:	ldr	r3, [r6]
   12e48:	cmp	r3, #5
   12e4c:	bne	132e8 <por_begin_data+0x8a8>
   12e50:	mov	r0, r6
   12e54:	bl	4330 <readstat_variable_get_missing_ranges_count@plt>
   12e58:	subs	r9, r0, #0
   12e5c:	ble	1347c <por_begin_data+0xa3c>
   12e60:	mov	r7, #0
   12e64:	mov	r8, r7
   12e68:	mov	r2, r8
   12e6c:	mov	r1, r6
   12e70:	ldr	r5, [sp, #8]
   12e74:	mov	r0, r5
   12e78:	bl	3f64 <readstat_variable_get_missing_range_lo@plt>
   12e7c:	mov	r2, r8
   12e80:	mov	r1, r6
   12e84:	mov	r0, sl
   12e88:	bl	4354 <readstat_variable_get_missing_range_hi@plt>
   12e8c:	ldm	r5, {r0, r1, r2, r3}
   12e90:	bl	41e0 <readstat_double_value@plt>
   12e94:	vmov.f64	d11, d0
   12e98:	ldm	sl, {r0, r1, r2, r3}
   12e9c:	bl	41e0 <readstat_double_value@plt>
   12ea0:	vmov.f64	d10, d0
   12ea4:	vabs.f64	d7, d11
   12ea8:	vcmp.f64	d7, d8
   12eac:	vmrs	APSR_nzcv, fpscr
   12eb0:	bgt	12ee4 <por_begin_data+0x4a4>
   12eb4:	vabs.f64	d7, d0
   12eb8:	vcmp.f64	d7, d8
   12ebc:	vmrs	APSR_nzcv, fpscr
   12ec0:	bgt	12f1c <por_begin_data+0x4dc>
   12ec4:	vcmp.f64	d11, d0
   12ec8:	vmrs	APSR_nzcv, fpscr
   12ecc:	bne	12f54 <por_begin_data+0x514>
   12ed0:	add	r8, r8, #1
   12ed4:	cmp	r9, r8
   12ed8:	bne	12e68 <por_begin_data+0x428>
   12edc:	mov	r9, #0
   12ee0:	b	12fb0 <por_begin_data+0x570>
   12ee4:	mov	r2, #57	; 0x39
   12ee8:	mov	r1, r4
   12eec:	mov	r0, fp
   12ef0:	bl	12218 <por_write_tag>
   12ef4:	cmp	r0, #0
   12ef8:	bne	13478 <por_begin_data+0xa38>
   12efc:	vmov.f64	d0, d10
   12f00:	mov	r1, r4
   12f04:	mov	r0, fp
   12f08:	bl	125a8 <por_write_double>
   12f0c:	cmp	r0, #0
   12f10:	bne	13488 <por_begin_data+0xa48>
   12f14:	add	r7, r7, #2
   12f18:	b	12ed0 <por_begin_data+0x490>
   12f1c:	mov	r2, #65	; 0x41
   12f20:	mov	r1, r4
   12f24:	mov	r0, fp
   12f28:	bl	12218 <por_write_tag>
   12f2c:	cmp	r0, #0
   12f30:	bne	13490 <por_begin_data+0xa50>
   12f34:	vmov.f64	d0, d11
   12f38:	mov	r1, r4
   12f3c:	mov	r0, fp
   12f40:	bl	125a8 <por_write_double>
   12f44:	cmp	r0, #0
   12f48:	bne	13498 <por_begin_data+0xa58>
   12f4c:	add	r7, r7, #2
   12f50:	b	12ed0 <por_begin_data+0x490>
   12f54:	mov	r2, #66	; 0x42
   12f58:	mov	r1, r4
   12f5c:	mov	r0, fp
   12f60:	bl	12218 <por_write_tag>
   12f64:	cmp	r0, #0
   12f68:	bne	134a0 <por_begin_data+0xa60>
   12f6c:	vmov.f64	d0, d11
   12f70:	mov	r1, r4
   12f74:	mov	r0, fp
   12f78:	bl	125a8 <por_write_double>
   12f7c:	cmp	r0, #0
   12f80:	bne	134a8 <por_begin_data+0xa68>
   12f84:	vmov.f64	d0, d10
   12f88:	mov	r1, r4
   12f8c:	mov	r0, fp
   12f90:	bl	125a8 <por_write_double>
   12f94:	cmp	r0, #0
   12f98:	bne	134b0 <por_begin_data+0xa70>
   12f9c:	add	r7, r7, #2
   12fa0:	b	12ed0 <por_begin_data+0x490>
   12fa4:	add	r9, r9, #1
   12fa8:	cmp	r8, r9
   12fac:	beq	13090 <por_begin_data+0x650>
   12fb0:	mov	r2, r9
   12fb4:	mov	r1, r6
   12fb8:	ldr	r5, [sp, #8]
   12fbc:	mov	r0, r5
   12fc0:	bl	3f64 <readstat_variable_get_missing_range_lo@plt>
   12fc4:	mov	r2, r9
   12fc8:	mov	r1, r6
   12fcc:	mov	r0, sl
   12fd0:	bl	4354 <readstat_variable_get_missing_range_hi@plt>
   12fd4:	ldm	r5, {r0, r1, r2, r3}
   12fd8:	bl	41e0 <readstat_double_value@plt>
   12fdc:	vmov.f64	d10, d0
   12fe0:	ldm	sl, {r0, r1, r2, r3}
   12fe4:	bl	41e0 <readstat_double_value@plt>
   12fe8:	vcmp.f64	d10, d0
   12fec:	vmrs	APSR_nzcv, fpscr
   12ff0:	bne	12fa4 <por_begin_data+0x564>
   12ff4:	vabs.f64	d7, d10
   12ff8:	vcmp.f64	d7, d8
   12ffc:	vmrs	APSR_nzcv, fpscr
   13000:	bgt	12fa4 <por_begin_data+0x564>
   13004:	vabs.f64	d0, d0
   13008:	vcmp.f64	d0, d8
   1300c:	vmrs	APSR_nzcv, fpscr
   13010:	bgt	12fa4 <por_begin_data+0x564>
   13014:	mov	r2, #56	; 0x38
   13018:	mov	r1, r4
   1301c:	mov	r0, fp
   13020:	bl	12218 <por_write_tag>
   13024:	cmp	r0, #0
   13028:	bne	134b8 <por_begin_data+0xa78>
   1302c:	vmov.f64	d0, d10
   13030:	mov	r1, r4
   13034:	mov	r0, fp
   13038:	bl	125a8 <por_write_double>
   1303c:	cmp	r0, #0
   13040:	bne	134c0 <por_begin_data+0xa80>
   13044:	add	r7, r7, #1
   13048:	b	12fa4 <por_begin_data+0x564>
   1304c:	nop			; (mov r0, r0)
   13050:	.word	0x00000000
   13054:	.word	0x40490000
	...
   13060:	.word	0xffffffff
   13064:	.word	0x7fefffff
   13068:	.word	0x000325a4
   1306c:	.word	0x000002f8
   13070:	.word	0x00000304
   13074:	.word	0xd1b71759
   13078:	.word	0x00002710
   1307c:	.word	0x51eb851f
   13080:	.word	0x00012cac
   13084:	.word	0x00012c40
   13088:	.word	0x00012cc8
   1308c:	.word	0x00012ca0
   13090:	cmp	r7, #3
   13094:	bgt	13470 <por_begin_data+0xa30>
   13098:	mov	r0, r6
   1309c:	bl	442c <readstat_variable_get_label@plt>
   130a0:	subs	r6, r0, #0
   130a4:	beq	130d8 <por_begin_data+0x698>
   130a8:	mov	r2, #67	; 0x43
   130ac:	mov	r1, r4
   130b0:	mov	r0, fp
   130b4:	bl	12218 <por_write_tag>
   130b8:	subs	r5, r0, #0
   130bc:	bne	12af8 <por_begin_data+0xb8>
   130c0:	mov	r2, r6
   130c4:	mov	r1, r4
   130c8:	mov	r0, fp
   130cc:	bl	12694 <por_write_string_field>
   130d0:	subs	r5, r0, #0
   130d4:	bne	12af8 <por_begin_data+0xb8>
   130d8:	ldr	r3, [sp, #12]
   130dc:	add	r3, r3, #1
   130e0:	mov	r2, r3
   130e4:	str	r3, [sp, #12]
   130e8:	ldr	r3, [fp, #28]
   130ec:	cmp	r2, r3
   130f0:	blt	12d88 <por_begin_data+0x348>
   130f4:	ldr	r3, [fp, #40]	; 0x28
   130f8:	cmp	r3, #0
   130fc:	movgt	r8, #0
   13100:	ble	13248 <por_begin_data+0x808>
   13104:	mov	r1, r8
   13108:	mov	r0, fp
   1310c:	bl	4450 <readstat_get_label_set@plt>
   13110:	mov	r6, r0
   13114:	ldr	r9, [r0]
   13118:	ldr	r3, [r0, #264]	; 0x108
   1311c:	cmp	r3, #0
   13120:	beq	13238 <por_begin_data+0x7f8>
   13124:	ldr	r3, [r0, #276]	; 0x114
   13128:	cmp	r3, #0
   1312c:	beq	13238 <por_begin_data+0x7f8>
   13130:	mov	r2, #68	; 0x44
   13134:	mov	r1, r4
   13138:	mov	r0, fp
   1313c:	bl	12218 <por_write_tag>
   13140:	cmp	r0, #0
   13144:	bne	13540 <por_begin_data+0xb00>
   13148:	vldr	s15, [r6, #276]	; 0x114
   1314c:	vcvt.f64.s32	d0, s15
   13150:	mov	r1, r4
   13154:	mov	r0, fp
   13158:	bl	125a8 <por_write_double>
   1315c:	cmp	r0, #0
   13160:	bne	13548 <por_begin_data+0xb08>
   13164:	ldr	r3, [r6, #276]	; 0x114
   13168:	cmp	r3, #0
   1316c:	ble	131ac <por_begin_data+0x76c>
   13170:	mov	r5, #0
   13174:	mov	r1, r5
   13178:	mov	r0, r6
   1317c:	bl	4474 <readstat_get_label_set_variable@plt>
   13180:	bl	4390 <readstat_variable_get_name@plt>
   13184:	mov	r2, r0
   13188:	mov	r1, r4
   1318c:	mov	r0, fp
   13190:	bl	12694 <por_write_string_field>
   13194:	cmp	r0, #0
   13198:	bne	13550 <por_begin_data+0xb10>
   1319c:	add	r5, r5, #1
   131a0:	ldr	r3, [r6, #276]	; 0x114
   131a4:	cmp	r5, r3
   131a8:	blt	13174 <por_begin_data+0x734>
   131ac:	vldr	s15, [r6, #264]	; 0x108
   131b0:	vcvt.f64.s32	d0, s15
   131b4:	mov	r1, r4
   131b8:	mov	r0, fp
   131bc:	bl	125a8 <por_write_double>
   131c0:	cmp	r0, #0
   131c4:	bne	13558 <por_begin_data+0xb18>
   131c8:	ldr	r3, [r6, #264]	; 0x108
   131cc:	cmp	r3, #0
   131d0:	ble	13238 <por_begin_data+0x7f8>
   131d4:	mov	r7, #0
   131d8:	mov	r1, r7
   131dc:	mov	r0, r6
   131e0:	bl	44f8 <readstat_get_value_label@plt>
   131e4:	mov	r5, r0
   131e8:	cmp	r9, #0
   131ec:	bne	13504 <por_begin_data+0xac4>
   131f0:	ldr	r3, [r0, #20]
   131f4:	ldr	r2, [r0, #16]
   131f8:	mov	r1, r4
   131fc:	mov	r0, fp
   13200:	bl	12648 <por_write_string_field_n>
   13204:	cmp	r0, #0
   13208:	bne	13560 <por_begin_data+0xb20>
   1320c:	ldr	r3, [r5, #28]
   13210:	ldr	r2, [r5, #24]
   13214:	mov	r1, r4
   13218:	mov	r0, fp
   1321c:	bl	12648 <por_write_string_field_n>
   13220:	cmp	r0, #0
   13224:	bne	13568 <por_begin_data+0xb28>
   13228:	add	r7, r7, #1
   1322c:	ldr	r3, [r6, #264]	; 0x108
   13230:	cmp	r7, r3
   13234:	blt	131d8 <por_begin_data+0x798>
   13238:	add	r8, r8, #1
   1323c:	ldr	r3, [fp, #40]	; 0x28
   13240:	cmp	r8, r3
   13244:	blt	13104 <por_begin_data+0x6c4>
   13248:	mov	r2, #69	; 0x45
   1324c:	mov	r1, r4
   13250:	mov	r0, fp
   13254:	bl	12218 <por_write_tag>
   13258:	subs	r5, r0, #0
   1325c:	bne	12af8 <por_begin_data+0xb8>
   13260:	vldr	s15, [fp, #52]	; 0x34
   13264:	vcvt.f64.s32	d0, s15
   13268:	mov	r1, r4
   1326c:	mov	r0, fp
   13270:	bl	125a8 <por_write_double>
   13274:	subs	r5, r0, #0
   13278:	bne	12af8 <por_begin_data+0xb8>
   1327c:	ldr	r3, [fp, #52]	; 0x34
   13280:	cmp	r3, #0
   13284:	ble	132d0 <por_begin_data+0x890>
   13288:	mov	r6, #0
   1328c:	ldr	r3, [fp, #48]	; 0x30
   13290:	ldr	r5, [r3, r6, lsl #2]
   13294:	mov	r0, r5
   13298:	bl	4228 <strlen@plt>
   1329c:	mov	r3, r0
   132a0:	cmp	r0, #80	; 0x50
   132a4:	bhi	13598 <por_begin_data+0xb58>
   132a8:	mov	r2, r5
   132ac:	mov	r1, r4
   132b0:	mov	r0, fp
   132b4:	bl	12648 <por_write_string_field_n>
   132b8:	cmp	r0, #0
   132bc:	bne	13570 <por_begin_data+0xb30>
   132c0:	add	r6, r6, #1
   132c4:	ldr	r3, [fp, #52]	; 0x34
   132c8:	cmp	r6, r3
   132cc:	blt	1328c <por_begin_data+0x84c>
   132d0:	mov	r2, #70	; 0x46
   132d4:	mov	r1, r4
   132d8:	mov	r0, fp
   132dc:	bl	12218 <por_write_tag>
   132e0:	mov	r5, r0
   132e4:	b	1357c <por_begin_data+0xb3c>
   132e8:	mov	r0, r6
   132ec:	bl	4330 <readstat_variable_get_missing_ranges_count@plt>
   132f0:	subs	r9, r0, #0
   132f4:	ble	1347c <por_begin_data+0xa3c>
   132f8:	mov	r7, #0
   132fc:	mov	r8, r7
   13300:	mov	r5, r4
   13304:	b	13314 <por_begin_data+0x8d4>
   13308:	add	r8, r8, #1
   1330c:	cmp	r9, r8
   13310:	beq	133c0 <por_begin_data+0x980>
   13314:	mov	r2, r8
   13318:	mov	r1, r6
   1331c:	ldr	r4, [sp, #8]
   13320:	mov	r0, r4
   13324:	bl	3f64 <readstat_variable_get_missing_range_lo@plt>
   13328:	mov	r2, r8
   1332c:	mov	r1, r6
   13330:	mov	r0, sl
   13334:	bl	4354 <readstat_variable_get_missing_range_hi@plt>
   13338:	ldm	r4, {r0, r1, r2, r3}
   1333c:	bl	3fd0 <readstat_string_value@plt>
   13340:	mov	r4, r0
   13344:	ldm	sl, {r0, r1, r2, r3}
   13348:	bl	3fd0 <readstat_string_value@plt>
   1334c:	mov	r1, r0
   13350:	str	r0, [sp, #16]
   13354:	cmp	r4, #0
   13358:	cmpne	r0, #0
   1335c:	beq	13308 <por_begin_data+0x8c8>
   13360:	mov	r0, r4
   13364:	bl	3e20 <strcmp@plt>
   13368:	cmp	r0, #0
   1336c:	beq	13308 <por_begin_data+0x8c8>
   13370:	mov	r2, #66	; 0x42
   13374:	mov	r1, r5
   13378:	mov	r0, fp
   1337c:	bl	12218 <por_write_tag>
   13380:	cmp	r0, #0
   13384:	bne	134c8 <por_begin_data+0xa88>
   13388:	mov	r2, r4
   1338c:	mov	r1, r5
   13390:	mov	r0, fp
   13394:	bl	12694 <por_write_string_field>
   13398:	cmp	r0, #0
   1339c:	bne	134d4 <por_begin_data+0xa94>
   133a0:	ldr	r2, [sp, #16]
   133a4:	mov	r1, r5
   133a8:	mov	r0, fp
   133ac:	bl	12694 <por_write_string_field>
   133b0:	cmp	r0, #0
   133b4:	bne	134e0 <por_begin_data+0xaa0>
   133b8:	add	r7, r7, #2
   133bc:	b	13308 <por_begin_data+0x8c8>
   133c0:	mov	r9, #0
   133c4:	b	133d4 <por_begin_data+0x994>
   133c8:	add	r9, r9, #1
   133cc:	cmp	r8, r9
   133d0:	beq	13464 <por_begin_data+0xa24>
   133d4:	mov	r2, r9
   133d8:	mov	r1, r6
   133dc:	ldr	r4, [sp, #8]
   133e0:	mov	r0, r4
   133e4:	bl	3f64 <readstat_variable_get_missing_range_lo@plt>
   133e8:	mov	r2, r9
   133ec:	mov	r1, r6
   133f0:	mov	r0, sl
   133f4:	bl	4354 <readstat_variable_get_missing_range_hi@plt>
   133f8:	ldm	r4, {r0, r1, r2, r3}
   133fc:	bl	3fd0 <readstat_string_value@plt>
   13400:	mov	r4, r0
   13404:	ldm	sl, {r0, r1, r2, r3}
   13408:	bl	3fd0 <readstat_string_value@plt>
   1340c:	mov	r1, r0
   13410:	cmp	r4, #0
   13414:	cmpne	r0, #0
   13418:	beq	133c8 <por_begin_data+0x988>
   1341c:	mov	r0, r4
   13420:	bl	3e20 <strcmp@plt>
   13424:	cmp	r0, #0
   13428:	bne	133c8 <por_begin_data+0x988>
   1342c:	mov	r2, #56	; 0x38
   13430:	mov	r1, r5
   13434:	mov	r0, fp
   13438:	bl	12218 <por_write_tag>
   1343c:	cmp	r0, #0
   13440:	bne	134ec <por_begin_data+0xaac>
   13444:	mov	r2, r4
   13448:	mov	r1, r5
   1344c:	mov	r0, fp
   13450:	bl	12694 <por_write_string_field>
   13454:	cmp	r0, #0
   13458:	bne	134f8 <por_begin_data+0xab8>
   1345c:	add	r7, r7, #1
   13460:	b	133c8 <por_begin_data+0x988>
   13464:	mov	r4, r5
   13468:	cmp	r7, #3
   1346c:	ble	13098 <por_begin_data+0x658>
   13470:	mov	r5, #31
   13474:	b	12af8 <por_begin_data+0xb8>
   13478:	mov	r5, r0
   1347c:	cmp	r5, #0
   13480:	beq	13098 <por_begin_data+0x658>
   13484:	b	12af8 <por_begin_data+0xb8>
   13488:	mov	r5, r0
   1348c:	b	1347c <por_begin_data+0xa3c>
   13490:	mov	r5, r0
   13494:	b	1347c <por_begin_data+0xa3c>
   13498:	mov	r5, r0
   1349c:	b	1347c <por_begin_data+0xa3c>
   134a0:	mov	r5, r0
   134a4:	b	1347c <por_begin_data+0xa3c>
   134a8:	mov	r5, r0
   134ac:	b	1347c <por_begin_data+0xa3c>
   134b0:	mov	r5, r0
   134b4:	b	1347c <por_begin_data+0xa3c>
   134b8:	mov	r5, r0
   134bc:	b	1347c <por_begin_data+0xa3c>
   134c0:	mov	r5, r0
   134c4:	b	1347c <por_begin_data+0xa3c>
   134c8:	mov	r4, r5
   134cc:	mov	r5, r0
   134d0:	b	1347c <por_begin_data+0xa3c>
   134d4:	mov	r4, r5
   134d8:	mov	r5, r0
   134dc:	b	1347c <por_begin_data+0xa3c>
   134e0:	mov	r4, r5
   134e4:	mov	r5, r0
   134e8:	b	1347c <por_begin_data+0xa3c>
   134ec:	mov	r4, r5
   134f0:	mov	r5, r0
   134f4:	b	1347c <por_begin_data+0xa3c>
   134f8:	mov	r4, r5
   134fc:	mov	r5, r0
   13500:	b	1347c <por_begin_data+0xa3c>
   13504:	cmp	r9, #5
   13508:	bne	13520 <por_begin_data+0xae0>
   1350c:	vldr	d0, [r0]
   13510:	mov	r1, r4
   13514:	mov	r0, fp
   13518:	bl	125a8 <por_write_double>
   1351c:	b	13204 <por_begin_data+0x7c4>
   13520:	cmp	r9, #3
   13524:	bne	1320c <por_begin_data+0x7cc>
   13528:	vldr	s15, [r0, #8]
   1352c:	vcvt.f64.s32	d0, s15
   13530:	mov	r1, r4
   13534:	mov	r0, fp
   13538:	bl	125a8 <por_write_double>
   1353c:	b	13204 <por_begin_data+0x7c4>
   13540:	mov	r5, r0
   13544:	b	12af8 <por_begin_data+0xb8>
   13548:	mov	r5, r0
   1354c:	b	12af8 <por_begin_data+0xb8>
   13550:	mov	r5, r0
   13554:	b	12af8 <por_begin_data+0xb8>
   13558:	mov	r5, r0
   1355c:	b	12af8 <por_begin_data+0xb8>
   13560:	mov	r5, r0
   13564:	b	12af8 <por_begin_data+0xb8>
   13568:	mov	r5, r0
   1356c:	b	12af8 <por_begin_data+0xb8>
   13570:	mov	r5, r0
   13574:	b	12af8 <por_begin_data+0xb8>
   13578:	mov	r5, #39	; 0x27
   1357c:	cmp	r5, #0
   13580:	streq	r4, [fp, #300]	; 0x12c
   13584:	bne	12af8 <por_begin_data+0xb8>
   13588:	mov	r0, r5
   1358c:	add	sp, sp, #76	; 0x4c
   13590:	vpop	{d8-d11}
   13594:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13598:	mov	r5, #32
   1359c:	b	12af8 <por_begin_data+0xb8>

000135a0 <readstat_begin_writing_por>:
   135a0:	push	{r4, lr}
   135a4:	ldr	ip, [pc, #168]	; 13654 <readstat_begin_writing_por+0xb4>
   135a8:	add	ip, pc, ip
   135ac:	str	ip, [r0, #292]	; 0x124
   135b0:	ldr	ip, [pc, #160]	; 13658 <readstat_begin_writing_por+0xb8>
   135b4:	add	ip, pc, ip
   135b8:	str	ip, [r0, #228]	; 0xe4
   135bc:	ldr	ip, [pc, #152]	; 1365c <readstat_begin_writing_por+0xbc>
   135c0:	add	ip, pc, ip
   135c4:	str	ip, [r0, #232]	; 0xe8
   135c8:	ldr	ip, [pc, #144]	; 13660 <readstat_begin_writing_por+0xc0>
   135cc:	add	ip, pc, ip
   135d0:	str	ip, [r0, #236]	; 0xec
   135d4:	ldr	ip, [pc, #136]	; 13664 <readstat_begin_writing_por+0xc4>
   135d8:	add	ip, pc, ip
   135dc:	str	ip, [r0, #240]	; 0xf0
   135e0:	ldr	ip, [pc, #128]	; 13668 <readstat_begin_writing_por+0xc8>
   135e4:	add	ip, pc, ip
   135e8:	str	ip, [r0, #244]	; 0xf4
   135ec:	ldr	ip, [pc, #120]	; 1366c <readstat_begin_writing_por+0xcc>
   135f0:	add	ip, pc, ip
   135f4:	str	ip, [r0, #248]	; 0xf8
   135f8:	ldr	ip, [pc, #112]	; 13670 <readstat_begin_writing_por+0xd0>
   135fc:	add	ip, pc, ip
   13600:	str	ip, [r0, #252]	; 0xfc
   13604:	ldr	ip, [pc, #104]	; 13674 <readstat_begin_writing_por+0xd4>
   13608:	add	ip, pc, ip
   1360c:	str	ip, [r0, #256]	; 0x100
   13610:	ldr	ip, [pc, #96]	; 13678 <readstat_begin_writing_por+0xd8>
   13614:	add	ip, pc, ip
   13618:	str	ip, [r0, #264]	; 0x108
   1361c:	ldr	ip, [pc, #88]	; 1367c <readstat_begin_writing_por+0xdc>
   13620:	add	ip, pc, ip
   13624:	str	ip, [r0, #268]	; 0x10c
   13628:	ldr	ip, [pc, #80]	; 13680 <readstat_begin_writing_por+0xe0>
   1362c:	add	ip, pc, ip
   13630:	str	ip, [r0, #276]	; 0x114
   13634:	ldr	ip, [pc, #72]	; 13684 <readstat_begin_writing_por+0xe4>
   13638:	add	ip, pc, ip
   1363c:	str	ip, [r0, #280]	; 0x118
   13640:	ldr	ip, [pc, #64]	; 13688 <readstat_begin_writing_por+0xe8>
   13644:	add	ip, pc, ip
   13648:	str	ip, [r0, #284]	; 0x11c
   1364c:	bl	3f88 <readstat_begin_writing_file@plt>
   13650:	pop	{r4, pc}
   13654:	.word	0xffffeb68
   13658:	.word	0xffffeb4c
   1365c:	.word	0xfffff1f4
   13660:	.word	0xfffff1d4
   13664:	.word	0xfffff1b4
   13668:	.word	0xfffff194
   1366c:	.word	0xfffff178
   13670:	.word	0xfffff118
   13674:	.word	0xfffff268
   13678:	.word	0xfffff13c
   1367c:	.word	0xfffff114
   13680:	.word	0xfffff40c
   13684:	.word	0xffffec00
   13688:	.word	0xffffec4c

0001368c <sav_ctx_free>:
   1368c:	push	{r4, r5, r6, lr}
   13690:	mov	r4, r0
   13694:	ldr	r3, [r0, #44]	; 0x2c
   13698:	cmp	r3, #0
   1369c:	beq	136d4 <sav_ctx_free+0x48>
   136a0:	ldr	r3, [r0, #340]	; 0x154
   136a4:	cmp	r3, #0
   136a8:	ble	136cc <sav_ctx_free+0x40>
   136ac:	mov	r5, #0
   136b0:	ldr	r3, [r4, #44]	; 0x2c
   136b4:	ldr	r0, [r3, r5, lsl #2]
   136b8:	bl	4444 <spss_varinfo_free@plt>
   136bc:	add	r5, r5, #1
   136c0:	ldr	r3, [r4, #340]	; 0x154
   136c4:	cmp	r3, r5
   136c8:	bgt	136b0 <sav_ctx_free+0x24>
   136cc:	ldr	r0, [r4, #44]	; 0x2c
   136d0:	bl	3ee0 <free@plt>
   136d4:	ldr	r3, [r4, #52]	; 0x34
   136d8:	cmp	r3, #0
   136dc:	beq	13724 <sav_ctx_free+0x98>
   136e0:	ldr	r3, [r4, #348]	; 0x15c
   136e4:	cmp	r3, #0
   136e8:	ble	1371c <sav_ctx_free+0x90>
   136ec:	mov	r5, #0
   136f0:	b	13704 <sav_ctx_free+0x78>
   136f4:	add	r5, r5, #1
   136f8:	ldr	r3, [r4, #348]	; 0x15c
   136fc:	cmp	r3, r5
   13700:	ble	1371c <sav_ctx_free+0x90>
   13704:	ldr	r3, [r4, #52]	; 0x34
   13708:	ldr	r0, [r3, r5, lsl #2]
   1370c:	cmp	r0, #0
   13710:	beq	136f4 <sav_ctx_free+0x68>
   13714:	bl	3ee0 <free@plt>
   13718:	b	136f4 <sav_ctx_free+0x68>
   1371c:	ldr	r0, [r4, #52]	; 0x34
   13720:	bl	3ee0 <free@plt>
   13724:	ldr	r0, [r4, #376]	; 0x178
   13728:	cmp	r0, #0
   1372c:	beq	13734 <sav_ctx_free+0xa8>
   13730:	bl	3ee0 <free@plt>
   13734:	ldr	r0, [r4, #384]	; 0x180
   13738:	cmp	r0, #0
   1373c:	beq	13744 <sav_ctx_free+0xb8>
   13740:	bl	3ee0 <free@plt>
   13744:	ldr	r0, [r4, #336]	; 0x150
   13748:	cmp	r0, #0
   1374c:	beq	13754 <sav_ctx_free+0xc8>
   13750:	bl	3df0 <iconv_close@plt>
   13754:	ldr	r0, [r4, #328]	; 0x148
   13758:	cmp	r0, #0
   1375c:	beq	13764 <sav_ctx_free+0xd8>
   13760:	bl	3ee0 <free@plt>
   13764:	mov	r0, r4
   13768:	bl	3ee0 <free@plt>
   1376c:	pop	{r4, r5, r6, pc}

00013770 <sav_ctx_init>:
   13770:	push	{r4, r5, r6, lr}
   13774:	mov	r4, r0
   13778:	mov	r6, r1
   1377c:	mov	r1, #440	; 0x1b8
   13780:	mov	r0, #1
   13784:	bl	3fe8 <readstat_calloc@plt>
   13788:	subs	r5, r0, #0
   1378c:	beq	139a8 <sav_ctx_init+0x238>
   13790:	mov	r2, #4
   13794:	ldr	r1, [pc, #696]	; 13a54 <sav_ctx_init+0x2e4>
   13798:	add	r1, pc, r1
   1379c:	mov	r0, r4
   137a0:	bl	3fc4 <memcmp@plt>
   137a4:	cmp	r0, #0
   137a8:	moveq	r3, #2
   137ac:	streq	r3, [r5, #424]	; 0x1a8
   137b0:	beq	137d8 <sav_ctx_init+0x68>
   137b4:	mov	r2, #4
   137b8:	ldr	r1, [pc, #664]	; 13a58 <sav_ctx_init+0x2e8>
   137bc:	add	r1, pc, r1
   137c0:	mov	r0, r4
   137c4:	bl	3fc4 <memcmp@plt>
   137c8:	cmp	r0, #0
   137cc:	bne	13898 <sav_ctx_init+0x128>
   137d0:	mov	r3, #3
   137d4:	str	r3, [r5, #424]	; 0x1a8
   137d8:	ldrb	r3, [r4, #64]	; 0x40
   137dc:	ldrb	r2, [r4, #65]	; 0x41
   137e0:	orr	r3, r3, r2, lsl #8
   137e4:	ldrb	r2, [r4, #66]	; 0x42
   137e8:	orr	r3, r3, r2, lsl #16
   137ec:	ldrb	r2, [r4, #67]	; 0x43
   137f0:	orr	r3, r3, r2, lsl #24
   137f4:	sub	r3, r3, #2
   137f8:	ldrb	r2, [r5, #436]	; 0x1b4
   137fc:	bic	r2, r2, #1
   13800:	cmp	r3, #1
   13804:	movls	r3, r2
   13808:	orrhi	r3, r2, #1
   1380c:	strb	r3, [r5, #436]	; 0x1b4
   13810:	bl	3ed4 <machine_is_little_endian@plt>
   13814:	ldrb	r3, [r5, #436]	; 0x1b4
   13818:	and	r3, r3, #1
   1381c:	cmp	r0, r3
   13820:	movne	r0, #1
   13824:	moveq	r0, #2
   13828:	str	r0, [r5, #432]	; 0x1b0
   1382c:	ldrb	r0, [r4, #72]	; 0x48
   13830:	ldrb	r3, [r4, #73]	; 0x49
   13834:	orr	r0, r0, r3, lsl #8
   13838:	ldrb	r3, [r4, #74]	; 0x4a
   1383c:	orr	r0, r0, r3, lsl #16
   13840:	ldrb	r3, [r4, #75]	; 0x4b
   13844:	orr	r0, r0, r3, lsl #24
   13848:	cmp	r0, #1
   1384c:	beq	138a8 <sav_ctx_init+0x138>
   13850:	bl	3db4 <byteswap4@plt>
   13854:	cmp	r0, #1
   13858:	beq	138a8 <sav_ctx_init+0x138>
   1385c:	ldrb	r0, [r4, #72]	; 0x48
   13860:	ldrb	r3, [r4, #73]	; 0x49
   13864:	orr	r0, r0, r3, lsl #8
   13868:	ldrb	r3, [r4, #74]	; 0x4a
   1386c:	orr	r0, r0, r3, lsl #16
   13870:	ldrb	r3, [r4, #75]	; 0x4b
   13874:	orr	r0, r0, r3, lsl #24
   13878:	cmp	r0, #2
   1387c:	beq	1388c <sav_ctx_init+0x11c>
   13880:	bl	3db4 <byteswap4@plt>
   13884:	cmp	r0, #2
   13888:	bne	138b0 <sav_ctx_init+0x140>
   1388c:	mov	r3, #2
   13890:	str	r3, [r5, #428]	; 0x1ac
   13894:	b	138b0 <sav_ctx_init+0x140>
   13898:	mov	r0, r5
   1389c:	bl	3f34 <sav_ctx_free@plt>
   138a0:	mov	r5, #0
   138a4:	b	139a8 <sav_ctx_init+0x238>
   138a8:	mov	r3, #1
   138ac:	str	r3, [r5, #428]	; 0x1ac
   138b0:	ldrb	r3, [r5, #436]	; 0x1b4
   138b4:	tst	r3, #1
   138b8:	bne	139b0 <sav_ctx_init+0x240>
   138bc:	ldrb	r0, [r4, #80]	; 0x50
   138c0:	ldrb	r3, [r4, #81]	; 0x51
   138c4:	orr	r0, r0, r3, lsl #8
   138c8:	ldrb	r3, [r4, #82]	; 0x52
   138cc:	orr	r0, r0, r3, lsl #16
   138d0:	ldrb	r3, [r4, #83]	; 0x53
   138d4:	orr	r0, r0, r3, lsl #24
   138d8:	str	r0, [r5, #352]	; 0x160
   138dc:	ldrb	r3, [r5, #436]	; 0x1b4
   138e0:	tst	r3, #1
   138e4:	bne	139d4 <sav_ctx_init+0x264>
   138e8:	ldrb	r0, [r4, #76]	; 0x4c
   138ec:	ldrb	r3, [r4, #77]	; 0x4d
   138f0:	orr	r0, r0, r3, lsl #8
   138f4:	ldrb	r3, [r4, #78]	; 0x4e
   138f8:	orr	r0, r0, r3, lsl #16
   138fc:	ldrb	r3, [r4, #79]	; 0x4f
   13900:	orr	r0, r0, r3, lsl #24
   13904:	str	r0, [r5, #372]	; 0x174
   13908:	add	r3, r5, #400	; 0x190
   1390c:	mvn	r0, #0
   13910:	mvn	r1, #1048576	; 0x100000
   13914:	strd	r0, [r3, #-8]
   13918:	mvn	r0, #1
   1391c:	mvn	r1, #1048576	; 0x100000
   13920:	strd	r0, [r3]
   13924:	add	r3, r5, #416	; 0x1a0
   13928:	mvn	r0, #0
   1392c:	ldr	r1, [pc, #296]	; 13a5c <sav_ctx_init+0x2ec>
   13930:	strd	r0, [r3, #-8]
   13934:	ldrb	r3, [r5, #436]	; 0x1b4
   13938:	tst	r3, #1
   1393c:	bne	139f8 <sav_ctx_init+0x288>
   13940:	ldrb	r0, [r4, #84]	; 0x54
   13944:	ldrb	r3, [r4, #85]	; 0x55
   13948:	orr	r0, r0, r3, lsl #8
   1394c:	ldrb	r3, [r4, #86]	; 0x56
   13950:	orr	r0, r0, r3, lsl #16
   13954:	ldrb	r3, [r4, #87]	; 0x57
   13958:	orr	r0, r0, r3, lsl #24
   1395c:	ldrb	r1, [r4, #88]	; 0x58
   13960:	ldrb	r3, [r4, #89]	; 0x59
   13964:	orr	r1, r1, r3, lsl #8
   13968:	ldrb	r3, [r4, #90]	; 0x5a
   1396c:	orr	r1, r1, r3, lsl #16
   13970:	ldrb	r3, [r4, #91]	; 0x5b
   13974:	orr	r1, r1, r3, lsl #24
   13978:	mov	r2, r0
   1397c:	mov	r3, r1
   13980:	str	r2, [r5, #416]	; 0x1a0
   13984:	str	r3, [r5, #420]	; 0x1a4
   13988:	mov	r0, #512	; 0x200
   1398c:	str	r0, [r5, #48]	; 0x30
   13990:	mov	r1, #4
   13994:	bl	3fe8 <readstat_calloc@plt>
   13998:	str	r0, [r5, #44]	; 0x2c
   1399c:	cmp	r0, #0
   139a0:	strne	r6, [r5, #36]	; 0x24
   139a4:	beq	13a44 <sav_ctx_init+0x2d4>
   139a8:	mov	r0, r5
   139ac:	pop	{r4, r5, r6, pc}
   139b0:	ldrb	r3, [r4, #80]	; 0x50
   139b4:	ldrb	r0, [r4, #81]	; 0x51
   139b8:	orr	r3, r3, r0, lsl #8
   139bc:	ldrb	r0, [r4, #82]	; 0x52
   139c0:	orr	r3, r3, r0, lsl #16
   139c4:	ldrb	r0, [r4, #83]	; 0x53
   139c8:	orr	r0, r3, r0, lsl #24
   139cc:	bl	3db4 <byteswap4@plt>
   139d0:	b	138d8 <sav_ctx_init+0x168>
   139d4:	ldrb	r3, [r4, #76]	; 0x4c
   139d8:	ldrb	r0, [r4, #77]	; 0x4d
   139dc:	orr	r3, r3, r0, lsl #8
   139e0:	ldrb	r0, [r4, #78]	; 0x4e
   139e4:	orr	r3, r3, r0, lsl #16
   139e8:	ldrb	r0, [r4, #79]	; 0x4f
   139ec:	orr	r0, r3, r0, lsl #24
   139f0:	bl	3db4 <byteswap4@plt>
   139f4:	b	13904 <sav_ctx_init+0x194>
   139f8:	ldrb	r2, [r4, #84]	; 0x54
   139fc:	ldrb	r3, [r4, #85]	; 0x55
   13a00:	orr	r2, r2, r3, lsl #8
   13a04:	ldrb	r3, [r4, #86]	; 0x56
   13a08:	orr	r2, r2, r3, lsl #16
   13a0c:	ldrb	lr, [r4, #87]	; 0x57
   13a10:	ldrb	r3, [r4, #88]	; 0x58
   13a14:	ldrb	r1, [r4, #89]	; 0x59
   13a18:	orr	r3, r3, r1, lsl #8
   13a1c:	ldrb	r1, [r4, #90]	; 0x5a
   13a20:	orr	r3, r3, r1, lsl #16
   13a24:	ldrb	ip, [r4, #91]	; 0x5b
   13a28:	orr	r0, r2, lr, lsl #24
   13a2c:	orr	r1, r3, ip, lsl #24
   13a30:	vmov	d0, r0, r1
   13a34:	bl	4534 <byteswap_double@plt>
   13a38:	vmov	r0, s0
   13a3c:	vmov	r1, s1
   13a40:	b	13978 <sav_ctx_init+0x208>
   13a44:	mov	r0, r5
   13a48:	bl	3f34 <sav_ctx_free@plt>
   13a4c:	mov	r5, #0
   13a50:	b	139a8 <sav_ctx_init+0x238>
   13a54:	.word	0x000121c8
   13a58:	.word	0x000121ac
   13a5c:	.word	0x7fefffff

00013a60 <sav_compressed_row_bound>:
   13a60:	lsr	r3, r0, #3
   13a64:	add	r3, r3, #8
   13a68:	bic	r3, r3, #7
   13a6c:	add	r0, r3, r0
   13a70:	bx	lr

00013a74 <sav_compress_row>:
   13a74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13a78:	vpush	{d8-d9}
   13a7c:	sub	sp, sp, #36	; 0x24
   13a80:	mov	r9, r0
   13a84:	mov	r2, r3
   13a88:	str	r3, [sp, #8]
   13a8c:	mov	r3, #0
   13a90:	str	r3, [r0]
   13a94:	str	r3, [r0, #4]
   13a98:	ldr	r3, [r2, #28]
   13a9c:	cmp	r3, #0
   13aa0:	ble	13c74 <sav_compress_row+0x200>
   13aa4:	mov	fp, r1
   13aa8:	mov	r3, #0
   13aac:	mov	r6, r3
   13ab0:	str	r3, [sp, #4]
   13ab4:	mov	r4, r3
   13ab8:	mov	r7, #8
   13abc:	add	r3, sp, #16
   13ac0:	str	r3, [sp, #12]
   13ac4:	vldr	d8, [pc, #476]	; 13ca8 <sav_compress_row+0x234>
   13ac8:	vldr	d9, [pc, #480]	; 13cb0 <sav_compress_row+0x23c>
   13acc:	ldr	r3, [pc, #484]	; 13cb8 <sav_compress_row+0x244>
   13ad0:	add	r3, pc, r3
   13ad4:	str	r3, [sp]
   13ad8:	b	13c04 <sav_compress_row+0x190>
   13adc:	add	r6, r6, #8
   13ae0:	subs	r5, r5, #8
   13ae4:	beq	13be4 <sav_compress_row+0x170>
   13ae8:	add	r8, fp, r6
   13aec:	mov	r2, #8
   13af0:	ldr	r1, [sp]
   13af4:	mov	r0, r8
   13af8:	bl	3fc4 <memcmp@plt>
   13afc:	cmp	r0, #0
   13b00:	strbeq	sl, [r9, r4]
   13b04:	mvnne	r3, #2
   13b08:	strbne	r3, [r9, r4]
   13b0c:	addne	r3, r9, r7
   13b10:	ldrne	r1, [r8]
   13b14:	ldrne	r2, [r8, #4]
   13b18:	strne	r1, [r9, r7]
   13b1c:	strne	r2, [r3, #4]
   13b20:	addne	r7, r7, #8
   13b24:	add	r4, r4, #1
   13b28:	tst	r4, #7
   13b2c:	bne	13adc <sav_compress_row+0x68>
   13b30:	add	r3, r9, r7
   13b34:	mov	r2, #0
   13b38:	str	r2, [r9, r7]
   13b3c:	str	r2, [r3, #4]
   13b40:	mov	r4, r7
   13b44:	add	r7, r7, #8
   13b48:	b	13adc <sav_compress_row+0x68>
   13b4c:	add	ip, fp, r6
   13b50:	ldr	r3, [sp, #12]
   13b54:	ldr	r0, [ip]
   13b58:	ldr	r1, [ip, #4]
   13b5c:	stmia	r3!, {r0, r1}
   13b60:	ldrd	r2, [sp, #16]
   13b64:	mvn	r0, #0
   13b68:	mvn	r1, #1048576	; 0x100000
   13b6c:	cmp	r3, r1
   13b70:	cmpeq	r2, r0
   13b74:	beq	13bcc <sav_compress_row+0x158>
   13b78:	add	r3, sp, #24
   13b7c:	ldr	r0, [ip]
   13b80:	ldr	r1, [ip, #4]
   13b84:	stmia	r3!, {r0, r1}
   13b88:	vldr	d7, [sp, #24]
   13b8c:	vcmpe.f64	d7, d8
   13b90:	vmrs	APSR_nzcv, fpscr
   13b94:	ble	13c30 <sav_compress_row+0x1bc>
   13b98:	vcmpe.f64	d7, d9
   13b9c:	vmrs	APSR_nzcv, fpscr
   13ba0:	bpl	13c30 <sav_compress_row+0x1bc>
   13ba4:	vcvt.s32.f64	s13, d7
   13ba8:	vcvt.f64.s32	d5, s13
   13bac:	vcmp.f64	d7, d5
   13bb0:	vmrs	APSR_nzcv, fpscr
   13bb4:	bne	13c30 <sav_compress_row+0x1bc>
   13bb8:	vmov	r3, s13
   13bbc:	add	r3, r3, #100	; 0x64
   13bc0:	strb	r3, [r9, r4]
   13bc4:	add	r4, r4, #1
   13bc8:	b	13bd8 <sav_compress_row+0x164>
   13bcc:	mvn	r3, #0
   13bd0:	strb	r3, [r9, r4]
   13bd4:	add	r4, r4, #1
   13bd8:	tst	r4, #7
   13bdc:	beq	13c58 <sav_compress_row+0x1e4>
   13be0:	add	r6, r6, #8
   13be4:	ldr	r3, [sp, #4]
   13be8:	add	r3, r3, #1
   13bec:	mov	r2, r3
   13bf0:	str	r3, [sp, #4]
   13bf4:	ldr	r3, [sp, #8]
   13bf8:	ldr	r3, [r3, #28]
   13bfc:	cmp	r3, r2
   13c00:	ble	13c7c <sav_compress_row+0x208>
   13c04:	ldr	r1, [sp, #4]
   13c08:	ldr	r0, [sp, #8]
   13c0c:	bl	43a8 <readstat_get_variable@plt>
   13c10:	ldr	r3, [r0]
   13c14:	cmp	r3, #0
   13c18:	bne	13b4c <sav_compress_row+0xd8>
   13c1c:	ldr	r5, [r0, #1596]	; 0x63c
   13c20:	cmp	r5, #0
   13c24:	beq	13be4 <sav_compress_row+0x170>
   13c28:	mvn	sl, #1
   13c2c:	b	13ae8 <sav_compress_row+0x74>
   13c30:	mvn	r3, #2
   13c34:	strb	r3, [r9, r4]
   13c38:	add	r3, r9, r7
   13c3c:	ldr	r1, [ip]
   13c40:	ldr	r2, [ip, #4]
   13c44:	str	r1, [r9, r7]
   13c48:	str	r2, [r3, #4]
   13c4c:	add	r7, r7, #8
   13c50:	add	r4, r4, #1
   13c54:	b	13bd8 <sav_compress_row+0x164>
   13c58:	add	r3, r9, r7
   13c5c:	mov	r2, #0
   13c60:	str	r2, [r9, r7]
   13c64:	str	r2, [r3, #4]
   13c68:	mov	r4, r7
   13c6c:	add	r7, r7, #8
   13c70:	b	13be0 <sav_compress_row+0x16c>
   13c74:	mov	r4, #0
   13c78:	mov	r7, #8
   13c7c:	ldr	r2, [sp, #8]
   13c80:	ldr	r3, [r2, #84]	; 0x54
   13c84:	add	r3, r3, #1
   13c88:	ldr	r2, [r2, #80]	; 0x50
   13c8c:	cmp	r3, r2
   13c90:	mvneq	r3, #3
   13c94:	strbeq	r3, [r9, r4]
   13c98:	mov	r0, r7
   13c9c:	add	sp, sp, #36	; 0x24
   13ca0:	vpop	{d8-d9}
   13ca4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ca8:	.word	0x00000000
   13cac:	.word	0xc0590000
   13cb0:	.word	0x00000000
   13cb4:	.word	0x40630000
   13cb8:	.word	0x00011ea0

00013cbc <sav_decompress_row>:
   13cbc:	push	{r4, r5, r6, r7, r8, r9, lr}
   13cc0:	sub	sp, sp, #20
   13cc4:	mov	r4, r0
   13cc8:	ldr	r3, [r0, #44]	; 0x2c
   13ccc:	cmp	r3, #0
   13cd0:	bne	13d0c <sav_decompress_row+0x50>
   13cd4:	ldrd	r0, [r0, #16]
   13cd8:	strd	r0, [sp]
   13cdc:	ldr	r5, [r4, #40]	; 0x28
   13ce0:	rsb	r5, r5, #8
   13ce4:	add	r9, sp, #8
   13ce8:	ldr	r7, [pc, #496]	; 13ee0 <sav_decompress_row+0x224>
   13cec:	mov	r8, sp
   13cf0:	cmp	r5, #8
   13cf4:	beq	13d18 <sav_decompress_row+0x5c>
   13cf8:	cmp	r5, #7
   13cfc:	bgt	13cf0 <sav_decompress_row+0x34>
   13d00:	add	r6, r5, #31
   13d04:	add	r6, r4, r6
   13d08:	b	13e40 <sav_decompress_row+0x184>
   13d0c:	ldrd	r0, [r0, #16]
   13d10:	bl	3d9c <byteswap8@plt>
   13d14:	b	13cd8 <sav_decompress_row+0x1c>
   13d18:	ldr	r2, [r4, #4]
   13d1c:	cmp	r2, #7
   13d20:	bls	13d54 <sav_decompress_row+0x98>
   13d24:	mov	r1, r4
   13d28:	ldr	r3, [r1], #32
   13d2c:	ldr	ip, [r3]
   13d30:	ldr	r0, [r3, #4]
   13d34:	str	ip, [r4, #32]
   13d38:	str	r0, [r1, #4]
   13d3c:	add	r3, r3, #8
   13d40:	str	r3, [r4]
   13d44:	sub	r2, r2, #8
   13d48:	str	r2, [r4, #4]
   13d4c:	mov	r5, #0
   13d50:	b	13d00 <sav_decompress_row+0x44>
   13d54:	mov	r3, #0
   13d58:	str	r3, [r4, #48]	; 0x30
   13d5c:	b	13e68 <sav_decompress_row+0x1ac>
   13d60:	cmp	r3, #254	; 0xfe
   13d64:	beq	13e04 <sav_decompress_row+0x148>
   13d68:	cmp	r3, #255	; 0xff
   13d6c:	bne	13e78 <sav_decompress_row+0x1bc>
   13d70:	ldr	r2, [r4, #8]
   13d74:	mov	r3, r8
   13d78:	ldm	r3!, {r0, r1}
   13d7c:	str	r0, [r2]
   13d80:	str	r1, [r2, #4]
   13d84:	ldr	r3, [r4, #8]
   13d88:	add	r3, r3, #8
   13d8c:	str	r3, [r4, #8]
   13d90:	ldr	r3, [r4, #12]
   13d94:	sub	r3, r3, #8
   13d98:	str	r3, [r4, #12]
   13d9c:	b	13e28 <sav_decompress_row+0x16c>
   13da0:	ldr	r3, [r4, #4]
   13da4:	cmp	r3, #7
   13da8:	bls	13df8 <sav_decompress_row+0x13c>
   13dac:	ldr	r3, [r4, #8]
   13db0:	ldr	r2, [r4]
   13db4:	ldr	r1, [r2]
   13db8:	ldr	r2, [r2, #4]
   13dbc:	str	r1, [r3]
   13dc0:	str	r2, [r3, #4]
   13dc4:	ldr	r3, [r4, #8]
   13dc8:	add	r3, r3, #8
   13dcc:	str	r3, [r4, #8]
   13dd0:	ldr	r3, [r4, #12]
   13dd4:	sub	r3, r3, #8
   13dd8:	str	r3, [r4, #12]
   13ddc:	ldr	r3, [r4]
   13de0:	add	r3, r3, #8
   13de4:	str	r3, [r4]
   13de8:	ldr	r3, [r4, #4]
   13dec:	sub	r3, r3, #8
   13df0:	str	r3, [r4, #4]
   13df4:	b	13e28 <sav_decompress_row+0x16c>
   13df8:	mov	r3, #0
   13dfc:	str	r3, [r4, #48]	; 0x30
   13e00:	b	13e68 <sav_decompress_row+0x1ac>
   13e04:	ldr	r3, [r4, #8]
   13e08:	str	r7, [r3]
   13e0c:	str	r7, [r3, #4]
   13e10:	ldr	r3, [r4, #8]
   13e14:	add	r3, r3, #8
   13e18:	str	r3, [r4, #8]
   13e1c:	ldr	r3, [r4, #12]
   13e20:	sub	r3, r3, #8
   13e24:	str	r3, [r4, #12]
   13e28:	add	r5, r5, #1
   13e2c:	ldr	r3, [r4, #12]
   13e30:	cmp	r3, #7
   13e34:	bls	13ed4 <sav_decompress_row+0x218>
   13e38:	cmp	r5, #7
   13e3c:	bgt	13cf0 <sav_decompress_row+0x34>
   13e40:	ldrb	r3, [r6, #1]!
   13e44:	cmp	r3, #253	; 0xfd
   13e48:	beq	13da0 <sav_decompress_row+0xe4>
   13e4c:	bhi	13d60 <sav_decompress_row+0xa4>
   13e50:	cmp	r3, #0
   13e54:	beq	13e28 <sav_decompress_row+0x16c>
   13e58:	cmp	r3, #252	; 0xfc
   13e5c:	bne	13e78 <sav_decompress_row+0x1bc>
   13e60:	mov	r3, #3
   13e64:	str	r3, [r4, #48]	; 0x30
   13e68:	rsb	r5, r5, #8
   13e6c:	str	r5, [r4, #40]	; 0x28
   13e70:	add	sp, sp, #20
   13e74:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13e78:	vmov	s15, r3
   13e7c:	vcvt.f64.s32	d0, s15
   13e80:	vldr	d7, [r4, #24]
   13e84:	vsub.f64	d0, d0, d7
   13e88:	vstr	d0, [sp, #8]
   13e8c:	ldr	r3, [r4, #44]	; 0x2c
   13e90:	cmp	r3, #0
   13e94:	bne	13ecc <sav_decompress_row+0x210>
   13e98:	vstr	d0, [sp, #8]
   13e9c:	ldr	r2, [r4, #8]
   13ea0:	mov	r3, r9
   13ea4:	ldm	r3!, {r0, r1}
   13ea8:	str	r0, [r2]
   13eac:	str	r1, [r2, #4]
   13eb0:	ldr	r3, [r4, #8]
   13eb4:	add	r3, r3, #8
   13eb8:	str	r3, [r4, #8]
   13ebc:	ldr	r3, [r4, #12]
   13ec0:	sub	r3, r3, #8
   13ec4:	str	r3, [r4, #12]
   13ec8:	b	13e28 <sav_decompress_row+0x16c>
   13ecc:	bl	4534 <byteswap_double@plt>
   13ed0:	b	13e98 <sav_decompress_row+0x1dc>
   13ed4:	mov	r3, #2
   13ed8:	str	r3, [r4, #48]	; 0x30
   13edc:	b	13e68 <sav_decompress_row+0x1ac>
   13ee0:	.word	0x20202020

00013ee4 <count_vars>:
   13ee4:	push	{r4, r5, r6, r7, r8, lr}
   13ee8:	ldr	r7, [r0, #340]	; 0x154
   13eec:	cmp	r7, #0
   13ef0:	ble	13f3c <count_vars+0x58>
   13ef4:	ldr	r4, [r0, #44]	; 0x2c
   13ef8:	add	r7, r4, r7, lsl #2
   13efc:	mov	r6, #0
   13f00:	mov	r1, r6
   13f04:	b	13f18 <count_vars+0x34>
   13f08:	add	r6, r6, #1
   13f0c:	mov	r1, r5
   13f10:	cmp	r4, r7
   13f14:	beq	13f40 <count_vars+0x5c>
   13f18:	ldr	r5, [r4], #4
   13f1c:	cmp	r1, #0
   13f20:	beq	13f08 <count_vars+0x24>
   13f24:	add	r1, r1, #187	; 0xbb
   13f28:	add	r0, r5, #187	; 0xbb
   13f2c:	bl	3e20 <strcmp@plt>
   13f30:	cmp	r0, #0
   13f34:	beq	13f0c <count_vars+0x28>
   13f38:	b	13f08 <count_vars+0x24>
   13f3c:	mov	r6, #0
   13f40:	mov	r0, r6
   13f44:	pop	{r4, r5, r6, r7, r8, pc}

00013f48 <compare_varlookups>:
   13f48:	push	{r4, lr}
   13f4c:	bl	3e20 <strcmp@plt>
   13f50:	pop	{r4, pc}

00013f54 <build_lookup_table>:
   13f54:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13f58:	mov	r9, r0
   13f5c:	mov	r7, r1
   13f60:	add	r0, r0, r0, lsl #2
   13f64:	lsl	r0, r0, #3
   13f68:	bl	4258 <readstat_malloc@plt>
   13f6c:	mov	r8, r0
   13f70:	ldr	r3, [r7, #340]	; 0x154
   13f74:	cmp	r3, #0
   13f78:	ble	13ff8 <build_lookup_table+0xa4>
   13f7c:	mov	r1, #0
   13f80:	mov	r4, r1
   13f84:	mov	r6, r1
   13f88:	b	13fd0 <build_lookup_table+0x7c>
   13f8c:	add	r1, r6, r6, lsl #2
   13f90:	add	r2, r8, r1, lsl #3
   13f94:	mov	r3, r5
   13f98:	ldr	ip, [r3, #187]!	; 0xbb
   13f9c:	ldr	r0, [r3, #4]
   13fa0:	str	ip, [r8, r1, lsl #3]
   13fa4:	str	r0, [r2, #4]
   13fa8:	ldrb	r3, [r3, #8]
   13fac:	strb	r3, [r2, #8]
   13fb0:	ldr	r3, [r5, #8]
   13fb4:	str	r3, [r2, #36]	; 0x24
   13fb8:	add	r6, r6, #1
   13fbc:	add	r4, r4, #1
   13fc0:	mov	r1, r5
   13fc4:	ldr	r3, [r7, #340]	; 0x154
   13fc8:	cmp	r3, r4
   13fcc:	ble	13ff8 <build_lookup_table+0xa4>
   13fd0:	ldr	r3, [r7, #44]	; 0x2c
   13fd4:	ldr	r5, [r3, r4, lsl #2]
   13fd8:	cmp	r1, #0
   13fdc:	beq	13f8c <build_lookup_table+0x38>
   13fe0:	add	r1, r1, #187	; 0xbb
   13fe4:	add	r0, r5, #187	; 0xbb
   13fe8:	bl	3e20 <strcmp@plt>
   13fec:	cmp	r0, #0
   13ff0:	beq	13fbc <build_lookup_table+0x68>
   13ff4:	b	13f8c <build_lookup_table+0x38>
   13ff8:	ldr	r3, [pc, #24]	; 14018 <build_lookup_table+0xc4>
   13ffc:	add	r3, pc, r3
   14000:	mov	r2, #40	; 0x28
   14004:	mov	r1, r9
   14008:	mov	r0, r8
   1400c:	bl	4468 <qsort@plt>
   14010:	mov	r0, r8
   14014:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14018:	.word	0xffffff44

0001401c <sav_parse_long_variable_names_record>:
   1401c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14020:	sub	sp, sp, #8320	; 0x2080
   14024:	sub	sp, sp, #36	; 0x24
   14028:	mov	r4, r0
   1402c:	str	r0, [sp, #72]	; 0x48
   14030:	mov	r6, r1
   14034:	str	r1, [sp, #76]	; 0x4c
   14038:	mov	r5, r2
   1403c:	str	r2, [sp, #52]	; 0x34
   14040:	mov	r0, r2
   14044:	bl	13ee4 <count_vars>
   14048:	str	r0, [sp, #56]	; 0x38
   1404c:	add	r3, r4, r6
   14050:	mov	r6, r3
   14054:	str	r3, [sp, #36]	; 0x24
   14058:	mov	r1, r5
   1405c:	bl	13f54 <build_lookup_table>
   14060:	mov	r9, r0
   14064:	cmp	r4, r6
   14068:	beq	144cc <sav_parse_long_variable_names_record+0x4b0>
   1406c:	mov	fp, r4
   14070:	mov	r3, #1
   14074:	str	r3, [sp, #20]
   14078:	mov	r3, #0
   1407c:	str	r3, [sp, #28]
   14080:	str	r3, [sp, #24]
   14084:	ldr	r3, [pc, #1372]	; 145e8 <sav_parse_long_variable_names_record+0x5cc>
   14088:	add	r3, pc, r3
   1408c:	str	r3, [sp, #40]	; 0x28
   14090:	add	r3, r3, #496	; 0x1f0
   14094:	str	r3, [sp, #44]	; 0x2c
   14098:	ldr	r3, [pc, #1356]	; 145ec <sav_parse_long_variable_names_record+0x5d0>
   1409c:	add	r3, pc, r3
   140a0:	str	r3, [sp, #48]	; 0x30
   140a4:	ldr	r3, [pc, #1348]	; 145f0 <sav_parse_long_variable_names_record+0x5d4>
   140a8:	add	r3, pc, r3
   140ac:	add	r3, r3, #1488	; 0x5d0
   140b0:	add	r3, r3, #12
   140b4:	str	r3, [sp, #68]	; 0x44
   140b8:	b	1436c <sav_parse_long_variable_names_record+0x350>
   140bc:	cmp	r1, r3
   140c0:	bcc	140f4 <sav_parse_long_variable_names_record+0xd8>
   140c4:	sub	r2, r1, r3
   140c8:	add	r0, r3, r2, asr #1
   140cc:	ldrb	r2, [r3, r2, asr #1]
   140d0:	cmp	ip, r2
   140d4:	subcc	r1, r0, #1
   140d8:	bcc	140bc <sav_parse_long_variable_names_record+0xa0>
   140dc:	cmp	ip, r2
   140e0:	addhi	r3, r0, #1
   140e4:	bhi	140bc <sav_parse_long_variable_names_record+0xa0>
   140e8:	sub	r0, r0, lr
   140ec:	add	r4, r4, r0
   140f0:	b	14178 <sav_parse_long_variable_names_record+0x15c>
   140f4:	add	lr, lr, r5
   140f8:	add	r4, r4, r5
   140fc:	ldr	r3, [sp, #48]	; 0x30
   14100:	ldr	r2, [sp, #20]
   14104:	add	r3, r3, r2
   14108:	ldrb	r5, [r3, #876]	; 0x36c
   1410c:	cmp	r5, #0
   14110:	ble	14178 <sav_parse_long_variable_names_record+0x15c>
   14114:	add	r1, lr, r5, lsl #1
   14118:	sub	r1, r1, #2
   1411c:	cmp	lr, r1
   14120:	bhi	14174 <sav_parse_long_variable_names_record+0x158>
   14124:	ldrb	ip, [fp]
   14128:	mov	r2, lr
   1412c:	b	14138 <sav_parse_long_variable_names_record+0x11c>
   14130:	cmp	r1, r2
   14134:	bcc	14174 <sav_parse_long_variable_names_record+0x158>
   14138:	sub	r3, r1, r2
   1413c:	asr	r3, r3, #1
   14140:	bic	r3, r3, #1
   14144:	add	r0, r2, r3
   14148:	ldrb	r3, [r2, r3]
   1414c:	cmp	r3, ip
   14150:	subhi	r1, r0, #2
   14154:	bhi	14130 <sav_parse_long_variable_names_record+0x114>
   14158:	ldrb	r3, [r0, #1]
   1415c:	cmp	r3, ip
   14160:	addcc	r2, r0, #2
   14164:	bcc	14130 <sav_parse_long_variable_names_record+0x114>
   14168:	sub	r0, r0, lr
   1416c:	add	r4, r4, r0, asr #1
   14170:	b	14178 <sav_parse_long_variable_names_record+0x15c>
   14174:	add	r4, r4, r5
   14178:	ldr	r3, [pc, #1140]	; 145f4 <sav_parse_long_variable_names_record+0x5d8>
   1417c:	add	r3, pc, r3
   14180:	add	r4, r3, r4
   14184:	ldrb	r2, [r4, #952]	; 0x3b8
   14188:	add	r3, r3, r2
   1418c:	ldrb	r2, [r3, #1348]	; 0x544
   14190:	str	r2, [sp, #20]
   14194:	ldrb	r3, [r3, #1424]	; 0x590
   14198:	cmp	r3, #0
   1419c:	beq	14350 <sav_parse_long_variable_names_record+0x334>
   141a0:	ldr	r2, [sp, #68]	; 0x44
   141a4:	add	r8, r2, r3
   141a8:	ldrb	sl, [r2, r3]
   141ac:	add	sl, r8, sl
   141b0:	add	r3, sp, #8256	; 0x2040
   141b4:	add	r3, r3, #16
   141b8:	str	r3, [sp, #32]
   141bc:	add	r3, sp, #8320	; 0x2080
   141c0:	add	r3, r3, #20
   141c4:	str	r3, [sp, #16]
   141c8:	ldr	r3, [pc, #1064]	; 145f8 <sav_parse_long_variable_names_record+0x5dc>
   141cc:	add	r3, pc, r3
   141d0:	str	r3, [sp, #60]	; 0x3c
   141d4:	add	r3, sp, #80	; 0x50
   141d8:	str	r3, [sp, #64]	; 0x40
   141dc:	b	141e4 <sav_parse_long_variable_names_record+0x1c8>
   141e0:	str	fp, [sp, #24]
   141e4:	cmp	r8, sl
   141e8:	beq	14350 <sav_parse_long_variable_names_record+0x334>
   141ec:	ldrb	r3, [r8, #1]!
   141f0:	cmp	r3, #6
   141f4:	addls	pc, pc, r3, lsl #2
   141f8:	b	141e4 <sav_parse_long_variable_names_record+0x1c8>
   141fc:	b	14218 <sav_parse_long_variable_names_record+0x1fc>
   14200:	b	142d8 <sav_parse_long_variable_names_record+0x2bc>
   14204:	b	14304 <sav_parse_long_variable_names_record+0x2e8>
   14208:	b	141e0 <sav_parse_long_variable_names_record+0x1c4>
   1420c:	b	14330 <sav_parse_long_variable_names_record+0x314>
   14210:	b	141e0 <sav_parse_long_variable_names_record+0x1c4>
   14214:	b	14340 <sav_parse_long_variable_names_record+0x324>
   14218:	ldr	r7, [sp, #56]	; 0x38
   1421c:	mov	r6, #0
   14220:	cmp	r6, r7
   14224:	bcs	14258 <sav_parse_long_variable_names_record+0x23c>
   14228:	add	r4, r6, r7
   1422c:	lsr	r4, r4, #1
   14230:	add	r5, r4, r4, lsl #2
   14234:	add	r5, r9, r5, lsl #3
   14238:	mov	r1, r5
   1423c:	ldr	r0, [sp, #16]
   14240:	bl	3e20 <strcmp@plt>
   14244:	cmp	r0, #0
   14248:	bge	14294 <sav_parse_long_variable_names_record+0x278>
   1424c:	mov	r7, r4
   14250:	cmp	r6, r4
   14254:	bcc	14228 <sav_parse_long_variable_names_record+0x20c>
   14258:	ldr	r4, [sp, #52]	; 0x34
   1425c:	ldr	r3, [r4, #24]
   14260:	cmp	r3, #0
   14264:	beq	141e4 <sav_parse_long_variable_names_record+0x1c8>
   14268:	ldr	r3, [sp, #16]
   1426c:	ldr	r2, [sp, #60]	; 0x3c
   14270:	mov	r1, #8192	; 0x2000
   14274:	ldr	r5, [sp, #64]	; 0x40
   14278:	mov	r0, r5
   1427c:	bl	42ac <snprintf@plt>
   14280:	ldr	r3, [r4, #24]
   14284:	ldr	r1, [r4, #40]	; 0x28
   14288:	mov	r0, r5
   1428c:	blx	r3
   14290:	b	141e4 <sav_parse_long_variable_names_record+0x1c8>
   14294:	addgt	r6, r4, #1
   14298:	bgt	14220 <sav_parse_long_variable_names_record+0x204>
   1429c:	cmp	r5, #0
   142a0:	beq	14258 <sav_parse_long_variable_names_record+0x23c>
   142a4:	ldr	r2, [r5, #36]	; 0x24
   142a8:	ldr	r3, [sp, #52]	; 0x34
   142ac:	ldr	r3, [r3, #44]	; 0x2c
   142b0:	ldr	r4, [r3, r2, lsl #2]
   142b4:	ldr	r5, [sp, #28]
   142b8:	mov	r2, r5
   142bc:	ldr	r1, [sp, #32]
   142c0:	add	r0, r4, #196	; 0xc4
   142c4:	bl	3f40 <memcpy@plt>
   142c8:	add	r4, r4, r5
   142cc:	mov	r3, #0
   142d0:	strb	r3, [r4, #196]	; 0xc4
   142d4:	b	141e4 <sav_parse_long_variable_names_record+0x1c8>
   142d8:	ldr	r4, [sp, #28]
   142dc:	mov	r2, r4
   142e0:	ldr	r1, [sp, #24]
   142e4:	ldr	r0, [sp, #16]
   142e8:	bl	3f40 <memcpy@plt>
   142ec:	add	r2, sp, #8320	; 0x2080
   142f0:	add	r2, r2, #32
   142f4:	add	r3, r2, r4
   142f8:	mov	r2, #0
   142fc:	strb	r2, [r3, #-12]
   14300:	b	141e4 <sav_parse_long_variable_names_record+0x1c8>
   14304:	ldr	r4, [sp, #28]
   14308:	mov	r2, r4
   1430c:	ldr	r1, [sp, #24]
   14310:	ldr	r0, [sp, #32]
   14314:	bl	3f40 <memcpy@plt>
   14318:	add	r2, sp, #8320	; 0x2080
   1431c:	add	r2, r2, #32
   14320:	add	r3, r2, r4
   14324:	mov	r2, #0
   14328:	strb	r2, [r3, #-80]	; 0xffffffb0
   1432c:	b	141e4 <sav_parse_long_variable_names_record+0x1c8>
   14330:	ldr	r3, [sp, #24]
   14334:	sub	r3, fp, r3
   14338:	str	r3, [sp, #28]
   1433c:	b	141e4 <sav_parse_long_variable_names_record+0x1c8>
   14340:	ldr	r3, [sp, #24]
   14344:	sub	r3, fp, r3
   14348:	str	r3, [sp, #28]
   1434c:	b	141e4 <sav_parse_long_variable_names_record+0x1c8>
   14350:	ldr	r3, [sp, #20]
   14354:	cmp	r3, #0
   14358:	beq	14464 <sav_parse_long_variable_names_record+0x448>
   1435c:	add	fp, fp, #1
   14360:	ldr	r3, [sp, #36]	; 0x24
   14364:	cmp	r3, fp
   14368:	beq	144e0 <sav_parse_long_variable_names_record+0x4c4>
   1436c:	ldr	r0, [sp, #20]
   14370:	lsl	r3, r0, #1
   14374:	ldr	r2, [sp, #44]	; 0x2c
   14378:	ldrsh	lr, [r2, r3]
   1437c:	ldr	r1, [sp, #40]	; 0x28
   14380:	add	lr, r1, lr
   14384:	add	r2, r1, #648	; 0x288
   14388:	ldrsh	r4, [r2, r3]
   1438c:	add	r3, r1, r0
   14390:	ldrb	r5, [r3, #800]	; 0x320
   14394:	cmp	r5, #0
   14398:	ble	140fc <sav_parse_long_variable_names_record+0xe0>
   1439c:	sub	r1, r5, #1
   143a0:	adds	r1, lr, r1
   143a4:	bcs	140f4 <sav_parse_long_variable_names_record+0xd8>
   143a8:	ldrb	ip, [fp]
   143ac:	mov	r3, lr
   143b0:	b	140c4 <sav_parse_long_variable_names_record+0xa8>
   143b4:	addgt	r6, r4, #1
   143b8:	bgt	14570 <sav_parse_long_variable_names_record+0x554>
   143bc:	cmp	r5, #0
   143c0:	beq	145a8 <sav_parse_long_variable_names_record+0x58c>
   143c4:	ldr	r2, [r5, #36]	; 0x24
   143c8:	ldr	r3, [sp, #52]	; 0x34
   143cc:	ldr	r3, [r3, #44]	; 0x2c
   143d0:	ldr	r4, [r3, r2, lsl #2]
   143d4:	ldr	r5, [sp, #28]
   143d8:	mov	r2, r5
   143dc:	mov	r1, fp
   143e0:	add	r0, r4, #196	; 0xc4
   143e4:	bl	3f40 <memcpy@plt>
   143e8:	add	r4, r4, r5
   143ec:	mov	r3, #0
   143f0:	strb	r3, [r4, #196]	; 0xc4
   143f4:	b	14538 <sav_parse_long_variable_names_record+0x51c>
   143f8:	ldr	r4, [sp, #28]
   143fc:	mov	r2, r4
   14400:	ldr	r1, [sp, #24]
   14404:	mov	r0, fp
   14408:	bl	3f40 <memcpy@plt>
   1440c:	add	r2, sp, #8320	; 0x2080
   14410:	add	r2, r2, #32
   14414:	add	r3, r2, r4
   14418:	mov	r2, #0
   1441c:	strb	r2, [r3, #-80]	; 0xffffffb0
   14420:	b	14538 <sav_parse_long_variable_names_record+0x51c>
   14424:	ldr	r3, [sp, #32]
   14428:	str	r3, [sp, #28]
   1442c:	b	14538 <sav_parse_long_variable_names_record+0x51c>
   14430:	ldr	r3, [sp, #20]
   14434:	cmp	r3, #10
   14438:	movgt	r4, #0
   1443c:	ble	14460 <sav_parse_long_variable_names_record+0x444>
   14440:	cmp	r9, #0
   14444:	beq	14450 <sav_parse_long_variable_names_record+0x434>
   14448:	mov	r0, r9
   1444c:	bl	3ee0 <free@plt>
   14450:	mov	r0, r4
   14454:	add	sp, sp, #8320	; 0x2080
   14458:	add	sp, sp, #36	; 0x24
   1445c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14460:	ldr	fp, [sp, #36]	; 0x24
   14464:	ldr	r5, [sp, #52]	; 0x34
   14468:	ldr	r3, [r5, #24]
   1446c:	cmp	r3, #0
   14470:	moveq	r4, #5
   14474:	beq	14440 <sav_parse_long_variable_names_record+0x424>
   14478:	add	r4, sp, #80	; 0x50
   1447c:	ldrb	r3, [fp]
   14480:	str	r3, [sp, #12]
   14484:	ldr	r2, [sp, #76]	; 0x4c
   14488:	str	r2, [sp, #8]
   1448c:	ldr	r1, [sp, #72]	; 0x48
   14490:	sub	r3, fp, r1
   14494:	str	r3, [sp, #4]
   14498:	str	r1, [sp]
   1449c:	mov	r3, r2
   144a0:	ldr	r2, [pc, #340]	; 145fc <sav_parse_long_variable_names_record+0x5e0>
   144a4:	add	r2, pc, r2
   144a8:	mov	r1, #8192	; 0x2000
   144ac:	mov	r0, r4
   144b0:	bl	42ac <snprintf@plt>
   144b4:	ldr	r3, [r5, #24]
   144b8:	ldr	r1, [r5, #40]	; 0x28
   144bc:	mov	r0, r4
   144c0:	blx	r3
   144c4:	mov	r4, #5
   144c8:	b	14440 <sav_parse_long_variable_names_record+0x424>
   144cc:	mov	r3, #1
   144d0:	str	r3, [sp, #20]
   144d4:	mov	r3, #0
   144d8:	str	r3, [sp, #28]
   144dc:	str	r3, [sp, #24]
   144e0:	ldr	r2, [pc, #280]	; 14600 <sav_parse_long_variable_names_record+0x5e4>
   144e4:	add	r2, pc, r2
   144e8:	add	r3, r2, #1488	; 0x5d0
   144ec:	add	r3, r3, #12
   144f0:	ldr	r1, [sp, #20]
   144f4:	add	r2, r2, r1
   144f8:	ldrb	r2, [r2, #1512]	; 0x5e8
   144fc:	add	r1, r3, r2
   14500:	ldrb	sl, [r3, r2]
   14504:	add	sl, r1, sl
   14508:	add	fp, sp, #8256	; 0x2040
   1450c:	add	fp, fp, #16
   14510:	ldr	r3, [sp, #36]	; 0x24
   14514:	ldr	r2, [sp, #24]
   14518:	sub	r3, r3, r2
   1451c:	str	r3, [sp, #32]
   14520:	ldr	r3, [pc, #220]	; 14604 <sav_parse_long_variable_names_record+0x5e8>
   14524:	add	r3, pc, r3
   14528:	str	r3, [sp, #40]	; 0x28
   1452c:	add	r3, sp, #80	; 0x50
   14530:	str	r3, [sp, #44]	; 0x2c
   14534:	mov	r8, r1
   14538:	cmp	sl, r8
   1453c:	beq	14430 <sav_parse_long_variable_names_record+0x414>
   14540:	ldrb	r3, [r8, #1]!
   14544:	cmp	r3, #2
   14548:	beq	143f8 <sav_parse_long_variable_names_record+0x3dc>
   1454c:	cmp	r3, #6
   14550:	beq	14424 <sav_parse_long_variable_names_record+0x408>
   14554:	cmp	r3, #0
   14558:	bne	14538 <sav_parse_long_variable_names_record+0x51c>
   1455c:	ldr	r7, [sp, #56]	; 0x38
   14560:	mov	r6, #0
   14564:	add	r3, sp, #8320	; 0x2080
   14568:	add	r3, r3, #20
   1456c:	str	r3, [sp, #16]
   14570:	cmp	r7, r6
   14574:	bls	145a8 <sav_parse_long_variable_names_record+0x58c>
   14578:	add	r4, r6, r7
   1457c:	lsr	r4, r4, #1
   14580:	add	r5, r4, r4, lsl #2
   14584:	add	r5, r9, r5, lsl #3
   14588:	mov	r1, r5
   1458c:	ldr	r0, [sp, #16]
   14590:	bl	3e20 <strcmp@plt>
   14594:	cmp	r0, #0
   14598:	bge	143b4 <sav_parse_long_variable_names_record+0x398>
   1459c:	mov	r7, r4
   145a0:	cmp	r4, r6
   145a4:	bhi	14578 <sav_parse_long_variable_names_record+0x55c>
   145a8:	ldr	r4, [sp, #52]	; 0x34
   145ac:	ldr	r3, [r4, #24]
   145b0:	cmp	r3, #0
   145b4:	beq	14538 <sav_parse_long_variable_names_record+0x51c>
   145b8:	add	r3, sp, #8320	; 0x2080
   145bc:	add	r3, r3, #20
   145c0:	ldr	r2, [sp, #40]	; 0x28
   145c4:	mov	r1, #8192	; 0x2000
   145c8:	ldr	r5, [sp, #44]	; 0x2c
   145cc:	mov	r0, r5
   145d0:	bl	42ac <snprintf@plt>
   145d4:	ldr	r3, [r4, #24]
   145d8:	ldr	r1, [r4, #40]	; 0x28
   145dc:	mov	r0, r5
   145e0:	blx	r3
   145e4:	b	14538 <sav_parse_long_variable_names_record+0x51c>
   145e8:	.word	0x000118f4
   145ec:	.word	0x000118e0
   145f0:	.word	0x000118d4
   145f4:	.word	0x00011800
   145f8:	.word	0x00011f20
   145fc:	.word	0x00011c5c
   14600:	.word	0x00011498
   14604:	.word	0x00011bc8

00014608 <sav_parse_very_long_string_record>:
   14608:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1460c:	sub	sp, sp, #124	; 0x7c
   14610:	mov	r4, r0
   14614:	str	r0, [sp, #72]	; 0x48
   14618:	mov	r5, r1
   1461c:	str	r1, [sp, #76]	; 0x4c
   14620:	mov	r6, r2
   14624:	str	r2, [sp, #40]	; 0x28
   14628:	mov	r0, r2
   1462c:	bl	13ee4 <count_vars>
   14630:	mov	r7, r0
   14634:	str	r0, [sp, #36]	; 0x24
   14638:	add	r3, r5, #1024	; 0x400
   1463c:	mov	r1, r3
   14640:	str	r3, [sp, #68]	; 0x44
   14644:	add	r3, r4, r5
   14648:	mov	r5, r3
   1464c:	str	r3, [sp, #44]	; 0x2c
   14650:	mov	r0, r1
   14654:	bl	4258 <readstat_malloc@plt>
   14658:	str	r0, [sp, #64]	; 0x40
   1465c:	mov	r1, r6
   14660:	mov	r0, r7
   14664:	bl	13f54 <build_lookup_table>
   14668:	mov	r9, r0
   1466c:	cmp	r4, r5
   14670:	beq	14a0c <sav_parse_very_long_string_record+0x404>
   14674:	mov	r3, #1
   14678:	str	r3, [sp, #28]
   1467c:	mov	r3, #0
   14680:	str	r3, [sp, #32]
   14684:	str	r3, [sp, #20]
   14688:	str	r3, [sp, #24]
   1468c:	ldr	r3, [pc, #896]	; 14a14 <sav_parse_very_long_string_record+0x40c>
   14690:	add	r3, pc, r3
   14694:	str	r3, [sp, #48]	; 0x30
   14698:	add	r3, r3, #1584	; 0x630
   1469c:	add	r3, r3, #4
   146a0:	str	r3, [sp, #52]	; 0x34
   146a4:	ldr	r3, [pc, #876]	; 14a18 <sav_parse_very_long_string_record+0x410>
   146a8:	add	r3, pc, r3
   146ac:	str	r3, [sp, #56]	; 0x38
   146b0:	ldr	r3, [pc, #868]	; 14a1c <sav_parse_very_long_string_record+0x414>
   146b4:	add	r3, pc, r3
   146b8:	add	r3, r3, #1888	; 0x760
   146bc:	str	r3, [sp, #60]	; 0x3c
   146c0:	mov	sl, r4
   146c4:	b	1495c <sav_parse_very_long_string_record+0x354>
   146c8:	add	r3, r0, #1
   146cc:	cmp	r3, r1
   146d0:	bhi	14700 <sav_parse_very_long_string_record+0xf8>
   146d4:	sub	r2, r1, r3
   146d8:	add	r0, r3, r2, asr #1
   146dc:	ldrb	r2, [r3, r2, asr #1]
   146e0:	cmp	ip, r2
   146e4:	subcc	r1, r0, #1
   146e8:	bcc	146cc <sav_parse_very_long_string_record+0xc4>
   146ec:	cmp	ip, r2
   146f0:	bhi	146c8 <sav_parse_very_long_string_record+0xc0>
   146f4:	sub	r0, r0, lr
   146f8:	add	r4, r4, r0
   146fc:	b	14784 <sav_parse_very_long_string_record+0x17c>
   14700:	add	lr, lr, r5
   14704:	add	r4, r4, r5
   14708:	ldr	r3, [sp, #56]	; 0x38
   1470c:	ldr	r2, [sp, #28]
   14710:	add	r3, r3, r2
   14714:	ldrb	r5, [r3, #1756]	; 0x6dc
   14718:	cmp	r5, #0
   1471c:	ble	14784 <sav_parse_very_long_string_record+0x17c>
   14720:	add	r1, lr, r5, lsl #1
   14724:	sub	r1, r1, #2
   14728:	cmp	lr, r1
   1472c:	bhi	14780 <sav_parse_very_long_string_record+0x178>
   14730:	ldrb	ip, [sl]
   14734:	mov	r2, lr
   14738:	b	14744 <sav_parse_very_long_string_record+0x13c>
   1473c:	cmp	r2, r1
   14740:	bhi	14780 <sav_parse_very_long_string_record+0x178>
   14744:	sub	r3, r1, r2
   14748:	asr	r3, r3, #1
   1474c:	bic	r3, r3, #1
   14750:	add	r0, r2, r3
   14754:	ldrb	r3, [r2, r3]
   14758:	cmp	r3, ip
   1475c:	subhi	r1, r0, #2
   14760:	bhi	1473c <sav_parse_very_long_string_record+0x134>
   14764:	ldrb	r3, [r0, #1]
   14768:	cmp	r3, ip
   1476c:	addcc	r2, r0, #2
   14770:	bcc	1473c <sav_parse_very_long_string_record+0x134>
   14774:	sub	r0, r0, lr
   14778:	add	r4, r4, r0, asr #1
   1477c:	b	14784 <sav_parse_very_long_string_record+0x17c>
   14780:	add	r4, r4, r5
   14784:	ldr	r3, [pc, #660]	; 14a20 <sav_parse_very_long_string_record+0x418>
   14788:	add	r3, pc, r3
   1478c:	add	r4, r3, r4
   14790:	ldrb	r2, [r4, #1772]	; 0x6ec
   14794:	add	r3, r3, r2
   14798:	ldrb	r2, [r3, #1856]	; 0x740
   1479c:	str	r2, [sp, #28]
   147a0:	ldrb	r3, [r3, #1872]	; 0x750
   147a4:	cmp	r3, #0
   147a8:	beq	14940 <sav_parse_very_long_string_record+0x338>
   147ac:	ldr	r2, [sp, #60]	; 0x3c
   147b0:	add	r8, r2, r3
   147b4:	ldrb	fp, [r2, r3]
   147b8:	add	fp, r8, fp
   147bc:	add	r3, sp, #84	; 0x54
   147c0:	str	r3, [sp, #16]
   147c4:	b	147cc <sav_parse_very_long_string_record+0x1c4>
   147c8:	str	sl, [sp, #20]
   147cc:	cmp	fp, r8
   147d0:	beq	14940 <sav_parse_very_long_string_record+0x338>
   147d4:	ldrb	r3, [r8, #1]!
   147d8:	cmp	r3, #5
   147dc:	addls	pc, pc, r3, lsl #2
   147e0:	b	147cc <sav_parse_very_long_string_record+0x1c4>
   147e4:	b	147fc <sav_parse_very_long_string_record+0x1f4>
   147e8:	b	1486c <sav_parse_very_long_string_record+0x264>
   147ec:	b	14894 <sav_parse_very_long_string_record+0x28c>
   147f0:	b	147c8 <sav_parse_very_long_string_record+0x1c0>
   147f4:	b	14924 <sav_parse_very_long_string_record+0x31c>
   147f8:	b	14934 <sav_parse_very_long_string_record+0x32c>
   147fc:	ldr	r7, [sp, #36]	; 0x24
   14800:	mov	r6, #0
   14804:	cmp	r6, r7
   14808:	bcs	147cc <sav_parse_very_long_string_record+0x1c4>
   1480c:	add	r4, r6, r7
   14810:	lsr	r4, r4, #1
   14814:	add	r5, r4, r4, lsl #2
   14818:	add	r5, r9, r5, lsl #3
   1481c:	mov	r1, r5
   14820:	ldr	r0, [sp, #16]
   14824:	bl	3e20 <strcmp@plt>
   14828:	cmp	r0, #0
   1482c:	bge	14840 <sav_parse_very_long_string_record+0x238>
   14830:	mov	r7, r4
   14834:	cmp	r6, r4
   14838:	bcc	1480c <sav_parse_very_long_string_record+0x204>
   1483c:	b	147cc <sav_parse_very_long_string_record+0x1c4>
   14840:	addgt	r6, r4, #1
   14844:	bgt	14804 <sav_parse_very_long_string_record+0x1fc>
   14848:	cmp	r5, #0
   1484c:	beq	147cc <sav_parse_very_long_string_record+0x1c4>
   14850:	ldr	r2, [r5, #36]	; 0x24
   14854:	ldr	r3, [sp, #40]	; 0x28
   14858:	ldr	r3, [r3, #44]	; 0x2c
   1485c:	ldr	r3, [r3, r2, lsl #2]
   14860:	ldr	r2, [sp, #24]
   14864:	str	r2, [r3, #20]
   14868:	b	147cc <sav_parse_very_long_string_record+0x1c4>
   1486c:	ldr	r4, [sp, #32]
   14870:	mov	r2, r4
   14874:	ldr	r1, [sp, #20]
   14878:	ldr	r0, [sp, #16]
   1487c:	bl	3f40 <memcpy@plt>
   14880:	add	r2, sp, #120	; 0x78
   14884:	add	r3, r2, r4
   14888:	mov	r2, #0
   1488c:	strb	r2, [r3, #-36]	; 0xffffffdc
   14890:	b	147cc <sav_parse_very_long_string_record+0x1c4>
   14894:	ldrb	r3, [sl]
   14898:	cmp	r3, #0
   1489c:	beq	147cc <sav_parse_very_long_string_record+0x1c4>
   148a0:	sub	r3, r3, #48	; 0x30
   148a4:	uxtb	r3, r3
   148a8:	mvn	r2, r3
   148ac:	ldr	r1, [pc, #368]	; 14a24 <sav_parse_very_long_string_record+0x41c>
   148b0:	umull	r1, r2, r1, r2
   148b4:	ldr	r1, [sp, #24]
   148b8:	cmp	r1, r2, lsr #3
   148bc:	addls	r2, r1, r1, lsl #2
   148c0:	addls	r3, r3, r2, lsl #1
   148c4:	strls	r3, [sp, #24]
   148c8:	bls	147cc <sav_parse_very_long_string_record+0x1c4>
   148cc:	add	fp, sl, #1
   148d0:	ldr	r3, [sp, #44]	; 0x2c
   148d4:	subs	r3, fp, r3
   148d8:	movne	r3, #1
   148dc:	ldr	r2, [sp, #28]
   148e0:	cmp	r2, #11
   148e4:	orrle	r3, r3, #1
   148e8:	cmp	r3, #0
   148ec:	moveq	r4, #0
   148f0:	bne	149a8 <sav_parse_very_long_string_record+0x3a0>
   148f4:	cmp	r9, #0
   148f8:	beq	14904 <sav_parse_very_long_string_record+0x2fc>
   148fc:	mov	r0, r9
   14900:	bl	3ee0 <free@plt>
   14904:	ldr	r3, [sp, #64]	; 0x40
   14908:	cmp	r3, #0
   1490c:	beq	14918 <sav_parse_very_long_string_record+0x310>
   14910:	mov	r0, r3
   14914:	bl	3ee0 <free@plt>
   14918:	mov	r0, r4
   1491c:	add	sp, sp, #124	; 0x7c
   14920:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14924:	ldr	r3, [sp, #20]
   14928:	sub	r3, sl, r3
   1492c:	str	r3, [sp, #32]
   14930:	b	147cc <sav_parse_very_long_string_record+0x1c4>
   14934:	mov	r3, #0
   14938:	str	r3, [sp, #24]
   1493c:	b	147cc <sav_parse_very_long_string_record+0x1c4>
   14940:	ldr	r3, [sp, #28]
   14944:	cmp	r3, #0
   14948:	beq	149a4 <sav_parse_very_long_string_record+0x39c>
   1494c:	add	sl, sl, #1
   14950:	ldr	r3, [sp, #44]	; 0x2c
   14954:	cmp	r3, sl
   14958:	beq	1499c <sav_parse_very_long_string_record+0x394>
   1495c:	ldr	r3, [sp, #48]	; 0x30
   14960:	ldr	r2, [sp, #28]
   14964:	add	r3, r3, r2
   14968:	ldrb	lr, [r3, #1708]	; 0x6ac
   1496c:	ldr	r2, [sp, #52]	; 0x34
   14970:	add	lr, r2, lr
   14974:	ldrb	r4, [r3, #1724]	; 0x6bc
   14978:	ldrb	r5, [r3, #1740]	; 0x6cc
   1497c:	cmp	r5, #0
   14980:	ble	14708 <sav_parse_very_long_string_record+0x100>
   14984:	sub	r1, r5, #1
   14988:	adds	r1, lr, r1
   1498c:	bcs	14700 <sav_parse_very_long_string_record+0xf8>
   14990:	ldrb	ip, [sl]
   14994:	mov	r3, lr
   14998:	b	146d4 <sav_parse_very_long_string_record+0xcc>
   1499c:	mov	fp, r3
   149a0:	b	148d0 <sav_parse_very_long_string_record+0x2c8>
   149a4:	mov	fp, sl
   149a8:	ldr	r4, [sp, #40]	; 0x28
   149ac:	ldr	r3, [r4, #24]
   149b0:	cmp	r3, #0
   149b4:	moveq	r4, #5
   149b8:	beq	148f4 <sav_parse_very_long_string_record+0x2ec>
   149bc:	str	fp, [sp, #8]
   149c0:	ldr	r3, [sp, #44]	; 0x2c
   149c4:	sub	r3, r3, fp
   149c8:	str	r3, [sp, #4]
   149cc:	ldr	r3, [sp, #76]	; 0x4c
   149d0:	str	r3, [sp]
   149d4:	ldr	r3, [sp, #72]	; 0x48
   149d8:	sub	r3, fp, r3
   149dc:	ldr	r2, [pc, #68]	; 14a28 <sav_parse_very_long_string_record+0x420>
   149e0:	add	r2, pc, r2
   149e4:	ldr	r1, [sp, #68]	; 0x44
   149e8:	ldr	r5, [sp, #64]	; 0x40
   149ec:	mov	r0, r5
   149f0:	bl	42ac <snprintf@plt>
   149f4:	ldr	r3, [r4, #24]
   149f8:	ldr	r1, [r4, #40]	; 0x28
   149fc:	mov	r0, r5
   14a00:	blx	r3
   14a04:	mov	r4, #5
   14a08:	b	148f4 <sav_parse_very_long_string_record+0x2ec>
   14a0c:	ldr	fp, [sp, #44]	; 0x2c
   14a10:	b	149a8 <sav_parse_very_long_string_record+0x3a0>
   14a14:	.word	0x000112ec
   14a18:	.word	0x000112d4
   14a1c:	.word	0x000112c8
   14a20:	.word	0x000111f4
   14a24:	.word	0xcccccccd
   14a28:	.word	0x00011760

00014a2c <sav_parse_time>:
   14a2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14a30:	sub	sp, sp, #8192	; 0x2000
   14a34:	sub	sp, sp, #36	; 0x24
   14a38:	str	r0, [sp, #24]
   14a3c:	str	r1, [sp, #28]
   14a40:	str	r3, [sp, #20]
   14a44:	add	fp, r0, r1
   14a48:	cmp	r0, fp
   14a4c:	beq	14c9c <sav_parse_time+0x270>
   14a50:	mov	r7, r0
   14a54:	mov	r5, #0
   14a58:	mov	r8, #1
   14a5c:	ldr	sl, [pc, #612]	; 14cc8 <sav_parse_time+0x29c>
   14a60:	add	sl, pc, sl
   14a64:	ldr	r3, [pc, #608]	; 14ccc <sav_parse_time+0x2a0>
   14a68:	add	r3, pc, r3
   14a6c:	str	r3, [sp, #12]
   14a70:	ldr	r3, [pc, #600]	; 14cd0 <sav_parse_time+0x2a4>
   14a74:	add	r3, pc, r3
   14a78:	str	r3, [sp, #8]
   14a7c:	ldr	r3, [pc, #592]	; 14cd4 <sav_parse_time+0x2a8>
   14a80:	add	r3, pc, r3
   14a84:	add	r3, r3, #144	; 0x90
   14a88:	str	r3, [sp, #16]
   14a8c:	b	14be8 <sav_parse_time+0x1bc>
   14a90:	cmp	r3, r0
   14a94:	bhi	14ac8 <sav_parse_time+0x9c>
   14a98:	sub	r1, r0, r3
   14a9c:	add	ip, r3, r1, asr #1
   14aa0:	ldrb	r1, [r3, r1, asr #1]
   14aa4:	cmp	lr, r1
   14aa8:	subcc	r0, ip, #1
   14aac:	bcc	14a90 <sav_parse_time+0x64>
   14ab0:	cmp	lr, r1
   14ab4:	addhi	r3, ip, #1
   14ab8:	bhi	14a90 <sav_parse_time+0x64>
   14abc:	sub	ip, ip, r4
   14ac0:	add	r6, r6, ip
   14ac4:	b	14b48 <sav_parse_time+0x11c>
   14ac8:	add	r4, r4, r9
   14acc:	add	r6, r6, r9
   14ad0:	ldr	r3, [sp, #12]
   14ad4:	add	r8, r3, r8
   14ad8:	ldrb	r8, [r8, #72]	; 0x48
   14adc:	cmp	r8, #0
   14ae0:	ble	14b48 <sav_parse_time+0x11c>
   14ae4:	add	r0, r4, r8, lsl #1
   14ae8:	sub	r0, r0, #2
   14aec:	cmp	r4, r0
   14af0:	bhi	14b44 <sav_parse_time+0x118>
   14af4:	ldrb	lr, [r7]
   14af8:	mov	r1, r4
   14afc:	b	14b08 <sav_parse_time+0xdc>
   14b00:	cmp	r0, r1
   14b04:	bcc	14b44 <sav_parse_time+0x118>
   14b08:	sub	r3, r0, r1
   14b0c:	asr	r3, r3, #1
   14b10:	bic	r3, r3, #1
   14b14:	add	ip, r1, r3
   14b18:	ldrb	r3, [r1, r3]
   14b1c:	cmp	r3, lr
   14b20:	subhi	r0, ip, #2
   14b24:	bhi	14b00 <sav_parse_time+0xd4>
   14b28:	ldrb	r3, [ip, #1]
   14b2c:	cmp	r3, lr
   14b30:	addcc	r1, ip, #2
   14b34:	bcc	14b00 <sav_parse_time+0xd4>
   14b38:	sub	ip, ip, r4
   14b3c:	add	r6, r6, ip, asr #1
   14b40:	b	14b48 <sav_parse_time+0x11c>
   14b44:	add	r6, r6, r8
   14b48:	ldr	r3, [sp, #8]
   14b4c:	add	r6, r3, r6
   14b50:	ldrb	r8, [r6, #88]	; 0x58
   14b54:	ldrb	r1, [r6, #116]	; 0x74
   14b58:	cmp	r1, #0
   14b5c:	beq	14bd4 <sav_parse_time+0x1a8>
   14b60:	ldr	r0, [sp, #16]
   14b64:	add	r3, r0, r1
   14b68:	ldrb	r0, [r0, r1]
   14b6c:	add	r0, r3, r0
   14b70:	b	14b78 <sav_parse_time+0x14c>
   14b74:	mov	r5, #0
   14b78:	cmp	r0, r3
   14b7c:	beq	14bd4 <sav_parse_time+0x1a8>
   14b80:	ldrb	r1, [r3, #1]!
   14b84:	cmp	r1, #4
   14b88:	addls	pc, pc, r1, lsl #2
   14b8c:	b	14b78 <sav_parse_time+0x14c>
   14b90:	b	14ba4 <sav_parse_time+0x178>
   14b94:	b	14b74 <sav_parse_time+0x148>
   14b98:	b	14bb8 <sav_parse_time+0x18c>
   14b9c:	b	14bc4 <sav_parse_time+0x198>
   14ba0:	b	14bcc <sav_parse_time+0x1a0>
   14ba4:	add	r5, r5, r5, lsl #2
   14ba8:	ldrb	r1, [r7]
   14bac:	sub	r1, r1, #48	; 0x30
   14bb0:	add	r5, r1, r5, lsl #1
   14bb4:	b	14b78 <sav_parse_time+0x14c>
   14bb8:	ldrb	r5, [r7]
   14bbc:	sub	r5, r5, #48	; 0x30
   14bc0:	b	14b78 <sav_parse_time+0x14c>
   14bc4:	str	r5, [r2, #8]
   14bc8:	b	14b78 <sav_parse_time+0x14c>
   14bcc:	str	r5, [r2, #4]
   14bd0:	b	14b78 <sav_parse_time+0x14c>
   14bd4:	cmp	r8, #0
   14bd8:	beq	14c3c <sav_parse_time+0x210>
   14bdc:	add	r7, r7, #1
   14be0:	cmp	fp, r7
   14be4:	beq	14ca4 <sav_parse_time+0x278>
   14be8:	add	r3, sl, r8
   14bec:	ldrb	r4, [r3, #24]
   14bf0:	add	r4, sl, r4
   14bf4:	ldrb	r6, [r3, #40]	; 0x28
   14bf8:	ldrb	r9, [r3, #56]	; 0x38
   14bfc:	cmp	r9, #0
   14c00:	ble	14ad0 <sav_parse_time+0xa4>
   14c04:	sub	r0, r9, #1
   14c08:	adds	r0, r4, r0
   14c0c:	bcs	14ac8 <sav_parse_time+0x9c>
   14c10:	ldrb	lr, [r7]
   14c14:	mov	r3, r4
   14c18:	b	14a98 <sav_parse_time+0x6c>
   14c1c:	ldrb	r0, [r3, #1]!
   14c20:	cmp	r0, #5
   14c24:	streq	r5, [r2]
   14c28:	cmp	r1, r3
   14c2c:	bne	14c1c <sav_parse_time+0x1f0>
   14c30:	cmp	r8, #11
   14c34:	movgt	r0, #0
   14c38:	bgt	14c90 <sav_parse_time+0x264>
   14c3c:	ldr	r3, [sp, #20]
   14c40:	cmp	r3, #0
   14c44:	moveq	r0, #29
   14c48:	beq	14c90 <sav_parse_time+0x264>
   14c4c:	mov	r5, r3
   14c50:	ldr	r3, [sp, #28]
   14c54:	ldr	r0, [sp, #24]
   14c58:	str	r0, [sp, #4]
   14c5c:	str	r3, [sp]
   14c60:	ldr	r2, [pc, #112]	; 14cd8 <sav_parse_time+0x2ac>
   14c64:	add	r2, pc, r2
   14c68:	mov	r1, #8192	; 0x2000
   14c6c:	add	r4, sp, #32
   14c70:	mov	r0, r4
   14c74:	bl	42ac <snprintf@plt>
   14c78:	add	r3, sp, #8256	; 0x2040
   14c7c:	add	r3, r3, #8
   14c80:	ldr	r1, [r3]
   14c84:	mov	r0, r4
   14c88:	blx	r5
   14c8c:	mov	r0, #29
   14c90:	add	sp, sp, #8192	; 0x2000
   14c94:	add	sp, sp, #36	; 0x24
   14c98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c9c:	mov	r5, #0
   14ca0:	mov	r8, #1
   14ca4:	ldr	r3, [pc, #48]	; 14cdc <sav_parse_time+0x2b0>
   14ca8:	add	r3, pc, r3
   14cac:	add	r0, r3, #144	; 0x90
   14cb0:	add	r3, r3, r8
   14cb4:	ldrb	r1, [r3, #160]	; 0xa0
   14cb8:	add	r3, r0, r1
   14cbc:	ldrb	r1, [r0, r1]
   14cc0:	add	r1, r3, r1
   14cc4:	b	14c28 <sav_parse_time+0x1fc>
   14cc8:	.word	0x00011710
   14ccc:	.word	0x00011708
   14cd0:	.word	0x000116fc
   14cd4:	.word	0x000116f0
   14cd8:	.word	0x0001182c
   14cdc:	.word	0x000114c8

00014ce0 <sav_parse_date>:
   14ce0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ce4:	sub	sp, sp, #8192	; 0x2000
   14ce8:	sub	sp, sp, #44	; 0x2c
   14cec:	str	r0, [sp, #32]
   14cf0:	str	r1, [sp, #36]	; 0x24
   14cf4:	str	r3, [sp, #28]
   14cf8:	add	r1, r0, r1
   14cfc:	str	r1, [sp, #16]
   14d00:	cmp	r0, r1
   14d04:	beq	15000 <sav_parse_date+0x320>
   14d08:	mov	ip, r0
   14d0c:	mov	fp, #0
   14d10:	mov	r0, #1
   14d14:	ldr	sl, [pc, #824]	; 15054 <sav_parse_date+0x374>
   14d18:	add	sl, pc, sl
   14d1c:	add	r3, sl, #176	; 0xb0
   14d20:	str	r3, [sp, #12]
   14d24:	ldr	r3, [pc, #812]	; 15058 <sav_parse_date+0x378>
   14d28:	add	r3, pc, r3
   14d2c:	str	r3, [sp, #20]
   14d30:	ldr	lr, [pc, #804]	; 1505c <sav_parse_date+0x37c>
   14d34:	add	lr, pc, lr
   14d38:	ldr	r3, [pc, #800]	; 15060 <sav_parse_date+0x380>
   14d3c:	add	r3, pc, r3
   14d40:	add	r3, r3, #716	; 0x2cc
   14d44:	str	r3, [sp, #24]
   14d48:	b	14f5c <sav_parse_date+0x27c>
   14d4c:	cmp	r3, r4
   14d50:	bhi	14d84 <sav_parse_date+0xa4>
   14d54:	sub	r1, r4, r3
   14d58:	add	r5, r3, r1, asr #1
   14d5c:	ldrb	r1, [r3, r1, asr #1]
   14d60:	cmp	r6, r1
   14d64:	subcc	r4, r5, #1
   14d68:	bcc	14d4c <sav_parse_date+0x6c>
   14d6c:	cmp	r6, r1
   14d70:	addhi	r3, r5, #1
   14d74:	bhi	14d4c <sav_parse_date+0x6c>
   14d78:	sub	r5, r5, r7
   14d7c:	add	r8, r8, r5
   14d80:	b	14e04 <sav_parse_date+0x124>
   14d84:	add	r7, r7, r9
   14d88:	add	r8, r8, r9
   14d8c:	ldr	r3, [sp, #20]
   14d90:	add	r0, r3, r0
   14d94:	ldrb	r6, [r0, #412]	; 0x19c
   14d98:	cmp	r6, #0
   14d9c:	ble	14e04 <sav_parse_date+0x124>
   14da0:	add	r0, r7, r6, lsl #1
   14da4:	sub	r0, r0, #2
   14da8:	cmp	r7, r0
   14dac:	bhi	14e00 <sav_parse_date+0x120>
   14db0:	ldrb	r5, [ip]
   14db4:	mov	r1, r7
   14db8:	b	14dc4 <sav_parse_date+0xe4>
   14dbc:	cmp	r0, r1
   14dc0:	bcc	14e00 <sav_parse_date+0x120>
   14dc4:	sub	r3, r0, r1
   14dc8:	asr	r3, r3, #1
   14dcc:	bic	r3, r3, #1
   14dd0:	add	r4, r1, r3
   14dd4:	ldrb	r3, [r1, r3]
   14dd8:	cmp	r3, r5
   14ddc:	subhi	r0, r4, #2
   14de0:	bhi	14dbc <sav_parse_date+0xdc>
   14de4:	ldrb	r3, [r4, #1]
   14de8:	cmp	r3, r5
   14dec:	addcc	r1, r4, #2
   14df0:	bcc	14dbc <sav_parse_date+0xdc>
   14df4:	sub	r7, r4, r7
   14df8:	add	r8, r8, r7, asr #1
   14dfc:	b	14e04 <sav_parse_date+0x124>
   14e00:	add	r8, r8, r6
   14e04:	add	r8, lr, r8
   14e08:	ldrb	r3, [r8, #460]	; 0x1cc
   14e0c:	add	r3, lr, r3
   14e10:	ldrb	r0, [r3, #596]	; 0x254
   14e14:	ldrb	r1, [r3, #656]	; 0x290
   14e18:	cmp	r1, #0
   14e1c:	beq	14f44 <sav_parse_date+0x264>
   14e20:	ldr	r4, [sp, #24]
   14e24:	add	r3, r4, r1
   14e28:	ldrb	r1, [r4, r1]
   14e2c:	add	r1, r3, r1
   14e30:	mov	r9, #4
   14e34:	mov	r8, #3
   14e38:	mov	r7, #2
   14e3c:	mov	r6, #1
   14e40:	mov	r5, #0
   14e44:	cmp	r1, r3
   14e48:	beq	14f44 <sav_parse_date+0x264>
   14e4c:	ldrb	r4, [r3, #1]!
   14e50:	cmp	r4, #15
   14e54:	addls	pc, pc, r4, lsl #2
   14e58:	b	14e44 <sav_parse_date+0x164>
   14e5c:	b	14ea4 <sav_parse_date+0x1c4>
   14e60:	b	14e44 <sav_parse_date+0x164>
   14e64:	b	14e9c <sav_parse_date+0x1bc>
   14e68:	b	14ec0 <sav_parse_date+0x1e0>
   14e6c:	b	14ec8 <sav_parse_date+0x1e8>
   14e70:	b	14ed0 <sav_parse_date+0x1f0>
   14e74:	b	14ed8 <sav_parse_date+0x1f8>
   14e78:	b	14ee0 <sav_parse_date+0x200>
   14e7c:	b	14ee8 <sav_parse_date+0x208>
   14e80:	b	14ef0 <sav_parse_date+0x210>
   14e84:	b	14efc <sav_parse_date+0x21c>
   14e88:	b	14f08 <sav_parse_date+0x228>
   14e8c:	b	14f14 <sav_parse_date+0x234>
   14e90:	b	14f20 <sav_parse_date+0x240>
   14e94:	b	14f2c <sav_parse_date+0x24c>
   14e98:	b	14f38 <sav_parse_date+0x258>
   14e9c:	mov	fp, r5
   14ea0:	b	14e44 <sav_parse_date+0x164>
   14ea4:	ldrb	r4, [ip]
   14ea8:	sub	r4, r4, #48	; 0x30
   14eac:	uxtb	r4, r4
   14eb0:	cmp	r4, #9
   14eb4:	addls	fp, fp, fp, lsl #2
   14eb8:	addls	fp, r4, fp, lsl #1
   14ebc:	b	14e44 <sav_parse_date+0x164>
   14ec0:	str	fp, [r2, #12]
   14ec4:	b	14e44 <sav_parse_date+0x164>
   14ec8:	str	r5, [r2, #16]
   14ecc:	b	14e44 <sav_parse_date+0x164>
   14ed0:	str	r6, [r2, #16]
   14ed4:	b	14e44 <sav_parse_date+0x164>
   14ed8:	str	r7, [r2, #16]
   14edc:	b	14e44 <sav_parse_date+0x164>
   14ee0:	str	r8, [r2, #16]
   14ee4:	b	14e44 <sav_parse_date+0x164>
   14ee8:	str	r9, [r2, #16]
   14eec:	b	14e44 <sav_parse_date+0x164>
   14ef0:	mov	r4, #5
   14ef4:	str	r4, [r2, #16]
   14ef8:	b	14e44 <sav_parse_date+0x164>
   14efc:	mov	r4, #6
   14f00:	str	r4, [r2, #16]
   14f04:	b	14e44 <sav_parse_date+0x164>
   14f08:	mov	r4, #7
   14f0c:	str	r4, [r2, #16]
   14f10:	b	14e44 <sav_parse_date+0x164>
   14f14:	mov	r4, #8
   14f18:	str	r4, [r2, #16]
   14f1c:	b	14e44 <sav_parse_date+0x164>
   14f20:	mov	r4, #9
   14f24:	str	r4, [r2, #16]
   14f28:	b	14e44 <sav_parse_date+0x164>
   14f2c:	mov	r4, #10
   14f30:	str	r4, [r2, #16]
   14f34:	b	14e44 <sav_parse_date+0x164>
   14f38:	mov	r4, #11
   14f3c:	str	r4, [r2, #16]
   14f40:	b	14e44 <sav_parse_date+0x164>
   14f44:	cmp	r0, #0
   14f48:	beq	14fa0 <sav_parse_date+0x2c0>
   14f4c:	add	ip, ip, #1
   14f50:	ldr	r3, [sp, #16]
   14f54:	cmp	r3, ip
   14f58:	beq	15008 <sav_parse_date+0x328>
   14f5c:	add	r3, sl, r0
   14f60:	ldrb	r7, [r3, #268]	; 0x10c
   14f64:	ldr	r1, [sp, #12]
   14f68:	add	r7, r1, r7
   14f6c:	ldrb	r8, [r3, #316]	; 0x13c
   14f70:	ldrb	r9, [r3, #364]	; 0x16c
   14f74:	cmp	r9, #0
   14f78:	ble	14d8c <sav_parse_date+0xac>
   14f7c:	sub	r4, r9, #1
   14f80:	adds	r4, r7, r4
   14f84:	bcs	14d84 <sav_parse_date+0xa4>
   14f88:	ldrb	r6, [ip]
   14f8c:	mov	r3, r7
   14f90:	b	14d54 <sav_parse_date+0x74>
   14f94:	cmp	r0, #46	; 0x2e
   14f98:	movgt	r0, #0
   14f9c:	bgt	14ff4 <sav_parse_date+0x314>
   14fa0:	ldr	r3, [sp, #28]
   14fa4:	cmp	r3, #0
   14fa8:	moveq	r0, #29
   14fac:	beq	14ff4 <sav_parse_date+0x314>
   14fb0:	mov	r5, r3
   14fb4:	ldr	r3, [sp, #36]	; 0x24
   14fb8:	ldr	r0, [sp, #32]
   14fbc:	str	r0, [sp, #4]
   14fc0:	str	r3, [sp]
   14fc4:	ldr	r2, [pc, #152]	; 15064 <sav_parse_date+0x384>
   14fc8:	add	r2, pc, r2
   14fcc:	mov	r1, #8192	; 0x2000
   14fd0:	add	r4, sp, #40	; 0x28
   14fd4:	mov	r0, r4
   14fd8:	bl	42ac <snprintf@plt>
   14fdc:	add	r3, sp, #8256	; 0x2040
   14fe0:	add	r3, r3, #16
   14fe4:	ldr	r1, [r3]
   14fe8:	mov	r0, r4
   14fec:	blx	r5
   14ff0:	mov	r0, #29
   14ff4:	add	sp, sp, #8192	; 0x2000
   14ff8:	add	sp, sp, #44	; 0x2c
   14ffc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15000:	mov	fp, #0
   15004:	mov	r0, #1
   15008:	ldr	r3, [pc, #88]	; 15068 <sav_parse_date+0x388>
   1500c:	add	r3, pc, r3
   15010:	add	ip, r3, #716	; 0x2cc
   15014:	add	r3, r3, r0
   15018:	ldrb	r1, [r3, #752]	; 0x2f0
   1501c:	add	r3, ip, r1
   15020:	ldrb	r1, [ip, r1]
   15024:	add	r1, r3, r1
   15028:	add	lr, fp, #100	; 0x64
   1502c:	cmp	r1, r3
   15030:	beq	14f94 <sav_parse_date+0x2b4>
   15034:	ldrb	ip, [r3, #1]!
   15038:	cmp	ip, #1
   1503c:	bne	1502c <sav_parse_date+0x34c>
   15040:	cmp	fp, #69	; 0x45
   15044:	movgt	ip, fp
   15048:	movle	ip, lr
   1504c:	str	ip, [r2, #20]
   15050:	b	1502c <sav_parse_date+0x34c>
   15054:	.word	0x00011458
   15058:	.word	0x00011448
   1505c:	.word	0x0001143c
   15060:	.word	0x00011434
   15064:	.word	0x000114f0
   15068:	.word	0x00011164
   1506c:	.word	0x00000000

00015070 <sav_update_progress>:
   15070:	push	{r4, lr}
   15074:	ldr	r3, [r0, #36]	; 0x24
   15078:	ldr	r4, [r3, #16]
   1507c:	ldr	r3, [r3, #20]
   15080:	ldr	r2, [r0, #40]	; 0x28
   15084:	ldr	r1, [r0, #28]
   15088:	ldr	r0, [r0, #32]
   1508c:	blx	r4
   15090:	pop	{r4, pc}

00015094 <sav_skip_document_record>:
   15094:	push	{r4, r5, lr}
   15098:	sub	sp, sp, #12
   1509c:	mov	r5, r0
   150a0:	ldr	r4, [r0, #36]	; 0x24
   150a4:	ldr	r3, [r4, #12]
   150a8:	ldr	r2, [r4, #20]
   150ac:	mov	r1, #4
   150b0:	add	r0, sp, r1
   150b4:	blx	r3
   150b8:	cmp	r0, #3
   150bc:	movls	r0, #2
   150c0:	bhi	150cc <sav_skip_document_record+0x38>
   150c4:	add	sp, sp, #12
   150c8:	pop	{r4, r5, pc}
   150cc:	ldrb	r3, [r5, #436]	; 0x1b4
   150d0:	tst	r3, #1
   150d4:	bne	15104 <sav_skip_document_record+0x70>
   150d8:	ldr	r0, [sp, #4]
   150dc:	add	r0, r0, r0, lsl #2
   150e0:	ldr	r3, [r4, #8]
   150e4:	ldr	r2, [r4, #20]
   150e8:	mov	r1, #1
   150ec:	lsl	r0, r0, #4
   150f0:	blx	r3
   150f4:	cmn	r0, #1
   150f8:	moveq	r0, #15
   150fc:	movne	r0, #0
   15100:	b	150c4 <sav_skip_document_record+0x30>
   15104:	ldr	r0, [sp, #4]
   15108:	bl	3db4 <byteswap4@plt>
   1510c:	str	r0, [sp, #4]
   15110:	b	150d8 <sav_skip_document_record+0x44>

00015114 <sav_read_pascal_string>:
   15114:	push	{r4, r5, r6, r7, r8, r9, lr}
   15118:	sub	sp, sp, #12
   1511c:	mov	r5, r2
   15120:	ldr	r2, [r2]
   15124:	add	r6, r2, r3
   15128:	add	r4, r2, #4
   1512c:	cmp	r6, r4
   15130:	movcc	r4, r2
   15134:	movcc	r0, #5
   15138:	bcc	15190 <sav_read_pascal_string+0x7c>
   1513c:	mov	r7, r0
   15140:	mov	r8, r1
   15144:	ldr	r0, [r2]
   15148:	ldr	r3, [sp, #40]	; 0x28
   1514c:	ldrb	r3, [r3, #436]	; 0x1b4
   15150:	tst	r3, #1
   15154:	beq	1515c <sav_read_pascal_string+0x48>
   15158:	bl	3db4 <byteswap4@plt>
   1515c:	add	r9, r4, r0
   15160:	cmp	r6, r9
   15164:	movcc	r0, #5
   15168:	bcc	15190 <sav_read_pascal_string+0x7c>
   1516c:	mov	r3, #0
   15170:	str	r3, [sp]
   15174:	mov	r3, r0
   15178:	mov	r2, r4
   1517c:	mov	r1, r8
   15180:	mov	r0, r7
   15184:	bl	4264 <readstat_convert@plt>
   15188:	cmp	r0, #0
   1518c:	moveq	r4, r9
   15190:	str	r4, [r5]
   15194:	add	sp, sp, #12
   15198:	pop	{r4, r5, r6, r7, r8, r9, pc}

0001519c <sav_parse_records_pass1>:
   1519c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   151a0:	sub	sp, sp, #5184	; 0x1440
   151a4:	sub	sp, sp, #4
   151a8:	mov	r7, r0
   151ac:	ldr	r6, [r0, #36]	; 0x24
   151b0:	add	sl, sp, #64	; 0x40
   151b4:	sub	r3, sl, #48	; 0x30
   151b8:	str	r3, [sp]
   151bc:	add	r4, sp, #1088	; 0x440
   151c0:	ldr	r3, [pc, #1312]	; 156e8 <sav_parse_records_pass1+0x54c>
   151c4:	add	r3, pc, r3
   151c8:	str	r3, [sp, #4]
   151cc:	ldr	r3, [pc, #1304]	; 156ec <sav_parse_records_pass1+0x550>
   151d0:	add	r3, pc, r3
   151d4:	str	r3, [sp, #8]
   151d8:	ldr	r3, [pc, #1296]	; 156f0 <sav_parse_records_pass1+0x554>
   151dc:	add	r3, pc, r3
   151e0:	str	r3, [sp, #12]
   151e4:	ldr	r3, [r6, #12]
   151e8:	ldr	r2, [r6, #20]
   151ec:	mov	r1, #4
   151f0:	ldr	r0, [sp]
   151f4:	blx	r3
   151f8:	cmp	r0, #3
   151fc:	bls	156c0 <sav_parse_records_pass1+0x524>
   15200:	ldrb	r3, [r7, #436]	; 0x1b4
   15204:	tst	r3, #1
   15208:	bne	15254 <sav_parse_records_pass1+0xb8>
   1520c:	ldr	r3, [r4, #-1072]	; 0xfffffbd0
   15210:	cmp	r3, #6
   15214:	beq	154ec <sav_parse_records_pass1+0x350>
   15218:	bhi	15264 <sav_parse_records_pass1+0xc8>
   1521c:	cmp	r3, #2
   15220:	beq	1528c <sav_parse_records_pass1+0xf0>
   15224:	cmp	r3, #3
   15228:	bne	1527c <sav_parse_records_pass1+0xe0>
   1522c:	ldr	r5, [r7, #36]	; 0x24
   15230:	ldr	r3, [r5, #12]
   15234:	ldr	r2, [r5, #20]
   15238:	mov	r1, #4
   1523c:	sub	r0, sl, #44	; 0x2c
   15240:	blx	r3
   15244:	cmp	r0, #3
   15248:	bhi	15374 <sav_parse_records_pass1+0x1d8>
   1524c:	mov	r0, #2
   15250:	b	15280 <sav_parse_records_pass1+0xe4>
   15254:	ldr	r0, [r4, #-1072]	; 0xfffffbd0
   15258:	bl	3db4 <byteswap4@plt>
   1525c:	str	r0, [r4, #-1072]	; 0xfffffbd0
   15260:	b	1520c <sav_parse_records_pass1+0x70>
   15264:	cmp	r3, #7
   15268:	beq	15500 <sav_parse_records_pass1+0x364>
   1526c:	ldr	r2, [pc, #1152]	; 156f4 <sav_parse_records_pass1+0x558>
   15270:	cmp	r3, r2
   15274:	moveq	r0, #0
   15278:	beq	15280 <sav_parse_records_pass1+0xe4>
   1527c:	mov	r0, #5
   15280:	add	sp, sp, #5184	; 0x1440
   15284:	add	sp, sp, #4
   15288:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1528c:	ldr	r5, [r7, #36]	; 0x24
   15290:	ldr	r3, [r5, #12]
   15294:	ldr	r2, [r5, #20]
   15298:	mov	r1, #28
   1529c:	mov	r0, sl
   152a0:	blx	r3
   152a4:	cmp	r0, #27
   152a8:	movls	r0, #2
   152ac:	bls	15280 <sav_parse_records_pass1+0xe4>
   152b0:	ldr	r3, [r4, #-1020]	; 0xfffffc04
   152b4:	cmp	r3, #0
   152b8:	bne	15300 <sav_parse_records_pass1+0x164>
   152bc:	ldr	r0, [r4, #-1016]	; 0xfffffc08
   152c0:	cmp	r0, #0
   152c4:	beq	151e4 <sav_parse_records_pass1+0x48>
   152c8:	ldrb	r3, [r7, #436]	; 0x1b4
   152cc:	tst	r3, #1
   152d0:	bne	1536c <sav_parse_records_pass1+0x1d0>
   152d4:	cmp	r0, #0
   152d8:	rsblt	r0, r0, #0
   152dc:	ldr	r3, [r5, #8]
   152e0:	ldr	r2, [r5, #20]
   152e4:	mov	r1, #1
   152e8:	lsl	r0, r0, #3
   152ec:	blx	r3
   152f0:	cmn	r0, #1
   152f4:	bne	151e4 <sav_parse_records_pass1+0x48>
   152f8:	mov	r0, #15
   152fc:	b	15280 <sav_parse_records_pass1+0xe4>
   15300:	ldr	r3, [r5, #12]
   15304:	ldr	r2, [r5, #20]
   15308:	mov	r1, #4
   1530c:	sub	r0, sl, #32
   15310:	blx	r3
   15314:	cmp	r0, #3
   15318:	bls	15364 <sav_parse_records_pass1+0x1c8>
   1531c:	ldrb	r3, [r7, #436]	; 0x1b4
   15320:	tst	r3, #1
   15324:	ldreq	r0, [r4, #-1056]	; 0xfffffbe0
   15328:	bne	15358 <sav_parse_records_pass1+0x1bc>
   1532c:	str	r0, [r4, #-1056]	; 0xfffffbe0
   15330:	add	r0, r0, #3
   15334:	ldr	r3, [r5, #8]
   15338:	ldr	r2, [r5, #20]
   1533c:	mov	r1, #1
   15340:	bic	r0, r0, #3
   15344:	blx	r3
   15348:	cmn	r0, #1
   1534c:	bne	152bc <sav_parse_records_pass1+0x120>
   15350:	mov	r0, #15
   15354:	b	15280 <sav_parse_records_pass1+0xe4>
   15358:	ldr	r0, [r4, #-1056]	; 0xfffffbe0
   1535c:	bl	3db4 <byteswap4@plt>
   15360:	b	1532c <sav_parse_records_pass1+0x190>
   15364:	mov	r0, #2
   15368:	b	15280 <sav_parse_records_pass1+0xe4>
   1536c:	bl	3db4 <byteswap4@plt>
   15370:	b	152d4 <sav_parse_records_pass1+0x138>
   15374:	ldrb	r3, [r7, #436]	; 0x1b4
   15378:	tst	r3, #1
   1537c:	bne	15430 <sav_parse_records_pass1+0x294>
   15380:	ldr	r3, [r4, #-1068]	; 0xfffffbd4
   15384:	cmp	r3, #0
   15388:	beq	1540c <sav_parse_records_pass1+0x270>
   1538c:	mov	r9, #0
   15390:	mov	fp, #0
   15394:	mov	r8, #1
   15398:	strb	fp, [r4, #-1024]	; 0xfffffc00
   1539c:	ldr	r3, [r5, #8]
   153a0:	ldr	r2, [r5, #20]
   153a4:	mov	r1, r8
   153a8:	mov	r0, #8
   153ac:	blx	r3
   153b0:	cmn	r0, #1
   153b4:	beq	15440 <sav_parse_records_pass1+0x2a4>
   153b8:	ldr	r3, [r5, #12]
   153bc:	ldr	r2, [r5, #20]
   153c0:	mov	r1, r8
   153c4:	mov	r0, sl
   153c8:	blx	r3
   153cc:	cmp	r0, #0
   153d0:	ble	15448 <sav_parse_records_pass1+0x2ac>
   153d4:	ldrb	r0, [r4, #-1024]	; 0xfffffc00
   153d8:	add	r0, r0, #8
   153dc:	bic	r0, r0, #7
   153e0:	ldr	r3, [r5, #8]
   153e4:	ldr	r2, [r5, #20]
   153e8:	mov	r1, r8
   153ec:	sub	r0, r0, #1
   153f0:	blx	r3
   153f4:	cmn	r0, #1
   153f8:	beq	15450 <sav_parse_records_pass1+0x2b4>
   153fc:	add	r9, r9, #1
   15400:	ldr	r3, [r4, #-1068]	; 0xfffffbd4
   15404:	cmp	r9, r3
   15408:	bcc	15398 <sav_parse_records_pass1+0x1fc>
   1540c:	ldr	r3, [r5, #12]
   15410:	ldr	r2, [r5, #20]
   15414:	mov	r1, #4
   15418:	sub	r0, sl, #32
   1541c:	blx	r3
   15420:	cmp	r0, #3
   15424:	bhi	15458 <sav_parse_records_pass1+0x2bc>
   15428:	mov	r0, #2
   1542c:	b	15280 <sav_parse_records_pass1+0xe4>
   15430:	ldr	r0, [r4, #-1068]	; 0xfffffbd4
   15434:	bl	3db4 <byteswap4@plt>
   15438:	str	r0, [r4, #-1068]	; 0xfffffbd4
   1543c:	b	15380 <sav_parse_records_pass1+0x1e4>
   15440:	mov	r0, #15
   15444:	b	15280 <sav_parse_records_pass1+0xe4>
   15448:	mov	r0, #2
   1544c:	b	15280 <sav_parse_records_pass1+0xe4>
   15450:	mov	r0, #15
   15454:	b	15280 <sav_parse_records_pass1+0xe4>
   15458:	ldrb	r3, [r7, #436]	; 0x1b4
   1545c:	tst	r3, #1
   15460:	bne	15478 <sav_parse_records_pass1+0x2dc>
   15464:	ldr	r3, [r4, #-1056]	; 0xfffffbe0
   15468:	cmp	r3, #4
   1546c:	beq	15488 <sav_parse_records_pass1+0x2ec>
   15470:	mov	r0, #5
   15474:	b	15280 <sav_parse_records_pass1+0xe4>
   15478:	ldr	r0, [r4, #-1056]	; 0xfffffbe0
   1547c:	bl	3db4 <byteswap4@plt>
   15480:	str	r0, [r4, #-1056]	; 0xfffffbe0
   15484:	b	15464 <sav_parse_records_pass1+0x2c8>
   15488:	ldr	r3, [r5, #12]
   1548c:	ldr	r2, [r5, #20]
   15490:	mov	r1, #4
   15494:	mov	r0, sl
   15498:	blx	r3
   1549c:	cmp	r0, #3
   154a0:	movls	r0, #2
   154a4:	bls	15280 <sav_parse_records_pass1+0xe4>
   154a8:	ldrb	r3, [r7, #436]	; 0x1b4
   154ac:	tst	r3, #1
   154b0:	bne	154dc <sav_parse_records_pass1+0x340>
   154b4:	ldr	r0, [r4, #-1024]	; 0xfffffc00
   154b8:	ldr	r3, [r5, #8]
   154bc:	ldr	r2, [r5, #20]
   154c0:	mov	r1, #1
   154c4:	lsl	r0, r0, #2
   154c8:	blx	r3
   154cc:	cmn	r0, #1
   154d0:	bne	151e4 <sav_parse_records_pass1+0x48>
   154d4:	mov	r0, #15
   154d8:	b	15280 <sav_parse_records_pass1+0xe4>
   154dc:	ldr	r0, [r4, #-1024]	; 0xfffffc00
   154e0:	bl	3db4 <byteswap4@plt>
   154e4:	str	r0, [r4, #-1024]	; 0xfffffc00
   154e8:	b	154b4 <sav_parse_records_pass1+0x318>
   154ec:	mov	r0, r7
   154f0:	bl	15094 <sav_skip_document_record>
   154f4:	cmp	r0, #0
   154f8:	beq	151e4 <sav_parse_records_pass1+0x48>
   154fc:	b	15280 <sav_parse_records_pass1+0xe4>
   15500:	ldr	r3, [r6, #12]
   15504:	ldr	r2, [r6, #20]
   15508:	mov	r1, #12
   1550c:	sub	r0, sl, #44	; 0x2c
   15510:	blx	r3
   15514:	cmp	r0, #11
   15518:	bls	156c8 <sav_parse_records_pass1+0x52c>
   1551c:	ldrb	r3, [r7, #436]	; 0x1b4
   15520:	tst	r3, #1
   15524:	beq	15544 <sav_parse_records_pass1+0x3a8>
   15528:	sub	r5, sl, #44	; 0x2c
   1552c:	sub	r8, sl, #32
   15530:	ldr	r0, [r5]
   15534:	bl	3db4 <byteswap4@plt>
   15538:	str	r0, [r5], #4
   1553c:	cmp	r5, r8
   15540:	bne	15530 <sav_parse_records_pass1+0x394>
   15544:	ldr	r3, [r4, #-1064]	; 0xfffffbd8
   15548:	ldr	r5, [r4, #-1060]	; 0xfffffbdc
   1554c:	mul	r5, r5, r3
   15550:	ldr	r3, [r4, #-1068]	; 0xfffffbd4
   15554:	cmp	r3, #3
   15558:	beq	15580 <sav_parse_records_pass1+0x3e4>
   1555c:	ldr	r3, [r6, #8]
   15560:	ldr	r2, [r6, #20]
   15564:	mov	r1, #1
   15568:	mov	r0, r5
   1556c:	blx	r3
   15570:	cmn	r0, #1
   15574:	bne	151e4 <sav_parse_records_pass1+0x48>
   15578:	mov	r0, #15
   1557c:	b	15280 <sav_parse_records_pass1+0xe4>
   15580:	cmp	r5, #4096	; 0x1000
   15584:	bhi	156d0 <sav_parse_records_pass1+0x534>
   15588:	ldr	r3, [r6, #12]
   1558c:	ldr	r2, [r6, #20]
   15590:	mov	r1, r5
   15594:	mov	r0, r4
   15598:	blx	r3
   1559c:	cmp	r5, r0
   155a0:	bhi	156d8 <sav_parse_records_pass1+0x53c>
   155a4:	cmp	r5, #32
   155a8:	movne	r0, #5
   155ac:	bne	15280 <sav_parse_records_pass1+0xe4>
   155b0:	ldr	r5, [r7, #60]	; 0x3c
   155b4:	sub	ip, r4, #1056	; 0x420
   155b8:	mov	lr, r4
   155bc:	ldm	lr!, {r0, r1, r2, r3}
   155c0:	stmia	ip!, {r0, r1, r2, r3}
   155c4:	ldm	lr, {r0, r1, r2, r3}
   155c8:	stm	ip, {r0, r1, r2, r3}
   155cc:	ldrb	r3, [r7, #436]	; 0x1b4
   155d0:	tst	r3, #1
   155d4:	bne	1561c <sav_parse_records_pass1+0x480>
   155d8:	ldr	r1, [r7, #56]	; 0x38
   155dc:	cmp	r1, #0
   155e0:	beq	1562c <sav_parse_records_pass1+0x490>
   155e4:	cmp	r1, #0
   155e8:	cmpne	r5, #0
   155ec:	beq	151e4 <sav_parse_records_pass1+0x48>
   155f0:	mov	r0, r5
   155f4:	bl	415c <iconv_open@plt>
   155f8:	mov	r5, r0
   155fc:	cmn	r0, #1
   15600:	beq	156e0 <sav_parse_records_pass1+0x544>
   15604:	ldr	r0, [r7, #336]	; 0x150
   15608:	cmp	r0, #0
   1560c:	beq	15614 <sav_parse_records_pass1+0x478>
   15610:	bl	3df0 <iconv_close@plt>
   15614:	str	r5, [r7, #336]	; 0x150
   15618:	b	151e4 <sav_parse_records_pass1+0x48>
   1561c:	ldr	r0, [r4, #-1028]	; 0xfffffbfc
   15620:	bl	3db4 <byteswap4@plt>
   15624:	str	r0, [r4, #-1028]	; 0xfffffbfc
   15628:	b	155d8 <sav_parse_records_pass1+0x43c>
   1562c:	ldr	r3, [r4, #-1028]	; 0xfffffbfc
   15630:	ldr	r2, [sp, #4]
   15634:	ldr	r2, [r2]
   15638:	cmp	r2, r3
   1563c:	beq	156a4 <sav_parse_records_pass1+0x508>
   15640:	ldr	r1, [sp, #12]
   15644:	mov	r2, #1
   15648:	ldr	r0, [r1, #36]	; 0x24
   1564c:	cmp	r3, r0
   15650:	beq	156a8 <sav_parse_records_pass1+0x50c>
   15654:	add	r2, r2, #1
   15658:	add	r1, r1, #36	; 0x24
   1565c:	cmp	r2, #79	; 0x4f
   15660:	bne	15648 <sav_parse_records_pass1+0x4ac>
   15664:	ldr	r2, [r7, #24]
   15668:	cmp	r2, #0
   1566c:	moveq	r0, #7
   15670:	beq	15280 <sav_parse_records_pass1+0xe4>
   15674:	ldr	r2, [pc, #124]	; 156f8 <sav_parse_records_pass1+0x55c>
   15678:	add	r2, pc, r2
   1567c:	mov	r1, #1024	; 0x400
   15680:	add	r4, sp, #64	; 0x40
   15684:	mov	r0, r4
   15688:	bl	42ac <snprintf@plt>
   1568c:	ldr	r3, [r7, #24]
   15690:	ldr	r1, [r7, #40]	; 0x28
   15694:	mov	r0, r4
   15698:	blx	r3
   1569c:	mov	r0, #7
   156a0:	b	15280 <sav_parse_records_pass1+0xe4>
   156a4:	mov	r2, #0
   156a8:	add	r2, r2, r2, lsl #3
   156ac:	ldr	r3, [sp, #8]
   156b0:	add	r1, r3, r2, lsl #2
   156b4:	add	r1, r1, #4
   156b8:	str	r1, [r7, #56]	; 0x38
   156bc:	b	155e4 <sav_parse_records_pass1+0x448>
   156c0:	mov	r0, #2
   156c4:	b	15280 <sav_parse_records_pass1+0xe4>
   156c8:	mov	r0, #2
   156cc:	b	15280 <sav_parse_records_pass1+0xe4>
   156d0:	mov	r0, #5
   156d4:	b	15280 <sav_parse_records_pass1+0xe4>
   156d8:	mov	r0, #5
   156dc:	b	15280 <sav_parse_records_pass1+0xe4>
   156e0:	mov	r0, #7
   156e4:	b	15280 <sav_parse_records_pass1+0xe4>
   156e8:	.word	0x00030d9c
   156ec:	.word	0x00030d90
   156f0:	.word	0x00030d84
   156f4:	.word	0x000003e7
   156f8:	.word	0x00010e68

000156fc <sav_read_compressed_data>:
   156fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15700:	sub	sp, sp, #65536	; 0x10000
   15704:	sub	sp, sp, #84	; 0x54
   15708:	mov	r5, r0
   1570c:	str	r1, [sp, #12]
   15710:	ldr	sl, [r0, #36]	; 0x24
   15714:	ldr	r7, [r0, #344]	; 0x158
   15718:	lsl	r7, r7, #3
   1571c:	add	r4, sp, #80	; 0x50
   15720:	mov	r2, #56	; 0x38
   15724:	mov	r1, #0
   15728:	add	r0, sp, #24
   1572c:	bl	42d0 <memset@plt>
   15730:	add	r3, r5, #400	; 0x190
   15734:	ldrd	r2, [r3, #-8]
   15738:	strd	r2, [r4, #-40]	; 0xffffffd8
   1573c:	add	r3, r5, #416	; 0x1a0
   15740:	ldrd	r2, [r3]
   15744:	strd	r2, [r4, #-32]	; 0xffffffe0
   15748:	ldrb	r3, [r5, #436]	; 0x1b4
   1574c:	and	r3, r3, #1
   15750:	str	r3, [r4, #-12]
   15754:	cmp	r7, #0
   15758:	moveq	fp, #0
   1575c:	beq	15778 <sav_read_compressed_data+0x7c>
   15760:	mov	r0, r7
   15764:	bl	4258 <readstat_malloc@plt>
   15768:	subs	fp, r0, #0
   1576c:	moveq	r3, #3
   15770:	streq	r3, [sp, #4]
   15774:	beq	15884 <sav_read_compressed_data+0x188>
   15778:	mov	r6, #0
   1577c:	add	r4, sp, #80	; 0x50
   15780:	sub	r3, r4, #56	; 0x38
   15784:	str	r3, [sp, #16]
   15788:	str	r6, [sp, #20]
   1578c:	mov	r0, r5
   15790:	bl	15070 <sav_update_progress>
   15794:	subs	r3, r0, #0
   15798:	str	r3, [sp, #4]
   1579c:	bne	15874 <sav_read_compressed_data+0x178>
   157a0:	ldr	r3, [sl, #12]
   157a4:	ldr	r2, [sl, #20]
   157a8:	mov	r1, #65536	; 0x10000
   157ac:	mov	r0, r4
   157b0:	blx	r3
   157b4:	mov	r9, r0
   157b8:	str	r0, [sp, #8]
   157bc:	add	r3, r0, #1
   157c0:	cmp	r3, #1
   157c4:	bls	15874 <sav_read_compressed_data+0x178>
   157c8:	tst	r0, #7
   157cc:	bne	15874 <sav_read_compressed_data+0x178>
   157d0:	mov	r3, #1
   157d4:	str	r3, [r4, #-8]
   157d8:	mov	r8, #0
   157dc:	ldr	r3, [r4, #-8]
   157e0:	cmp	r3, #0
   157e4:	beq	1578c <sav_read_compressed_data+0x90>
   157e8:	add	r3, r4, r8
   157ec:	str	r3, [r4, #-56]	; 0xffffffc8
   157f0:	sub	r8, r9, r8
   157f4:	str	r8, [r4, #-52]	; 0xffffffcc
   157f8:	add	r3, fp, r6
   157fc:	str	r3, [r4, #-48]	; 0xffffffd0
   15800:	sub	r6, r7, r6
   15804:	str	r6, [r4, #-44]	; 0xffffffd4
   15808:	ldr	r0, [sp, #16]
   1580c:	bl	4240 <sav_decompress_row@plt>
   15810:	ldr	r6, [r4, #-44]	; 0xffffffd4
   15814:	sub	r6, r7, r6
   15818:	ldr	r8, [r4, #-52]	; 0xffffffcc
   1581c:	ldr	r3, [sp, #8]
   15820:	sub	r8, r3, r8
   15824:	ldr	r3, [r4, #-8]
   15828:	cmp	r3, #2
   1582c:	bne	15850 <sav_read_compressed_data+0x154>
   15830:	mov	r2, r5
   15834:	mov	r1, r7
   15838:	mov	r0, fp
   1583c:	ldr	r3, [sp, #12]
   15840:	blx	r3
   15844:	cmp	r0, #0
   15848:	bne	15894 <sav_read_compressed_data+0x198>
   1584c:	ldr	r6, [sp, #20]
   15850:	ldr	r3, [r4, #-8]
   15854:	cmp	r3, #3
   15858:	beq	15874 <sav_read_compressed_data+0x178>
   1585c:	ldr	r3, [r5, #356]	; 0x164
   15860:	cmp	r3, #0
   15864:	ble	157dc <sav_read_compressed_data+0xe0>
   15868:	ldr	r2, [r5, #364]	; 0x16c
   1586c:	cmp	r3, r2
   15870:	bne	157dc <sav_read_compressed_data+0xe0>
   15874:	cmp	fp, #0
   15878:	beq	15884 <sav_read_compressed_data+0x188>
   1587c:	mov	r0, fp
   15880:	bl	3ee0 <free@plt>
   15884:	ldr	r0, [sp, #4]
   15888:	add	sp, sp, #65536	; 0x10000
   1588c:	add	sp, sp, #84	; 0x54
   15890:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15894:	str	r0, [sp, #4]
   15898:	b	15874 <sav_read_compressed_data+0x178>

0001589c <sav_process_row>:
   1589c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   158a0:	sub	sp, sp, #84	; 0x54
   158a4:	ldr	r3, [r2, #360]	; 0x168
   158a8:	str	r3, [sp, #28]
   158ac:	cmp	r3, #0
   158b0:	bne	1591c <sav_process_row+0x80>
   158b4:	mov	r5, r2
   158b8:	str	r1, [sp, #20]
   158bc:	cmp	r1, #0
   158c0:	beq	15be4 <sav_process_row+0x348>
   158c4:	ldr	r3, [r2, #340]	; 0x154
   158c8:	cmp	r3, #0
   158cc:	ble	15be4 <sav_process_row+0x348>
   158d0:	mov	r7, r0
   158d4:	ldr	r3, [sp, #28]
   158d8:	mov	fp, r3
   158dc:	mov	r6, r3
   158e0:	str	r3, [sp, #24]
   158e4:	mov	sl, r3
   158e8:	mov	r3, #0
   158ec:	str	r3, [sp, #16]
   158f0:	mov	r9, r3
   158f4:	mov	r8, r3
   158f8:	add	r3, sp, #72	; 0x48
   158fc:	str	r3, [sp, #48]	; 0x30
   15900:	add	r3, r5, #400	; 0x190
   15904:	str	r3, [sp, #32]
   15908:	add	r3, r5, #416	; 0x1a0
   1590c:	str	r3, [sp, #52]	; 0x34
   15910:	add	r3, sp, #64	; 0x40
   15914:	str	r3, [sp, #36]	; 0x24
   15918:	b	15974 <sav_process_row+0xd8>
   1591c:	ldr	r3, [sp, #28]
   15920:	sub	r3, r3, #1
   15924:	str	r3, [r2, #360]	; 0x168
   15928:	mov	r0, #0
   1592c:	b	15bf4 <sav_process_row+0x358>
   15930:	add	sl, sl, #1
   15934:	ldr	r3, [r2, #16]
   15938:	cmp	sl, r3
   1593c:	beq	159e4 <sav_process_row+0x148>
   15940:	ldr	r3, [r4, #48]	; 0x30
   15944:	ldr	r2, [sp, #24]
   15948:	cmp	r2, r3
   1594c:	beq	15a14 <sav_process_row+0x178>
   15950:	add	r9, r9, #8
   15954:	ldr	r3, [sp, #20]
   15958:	cmp	r3, r9
   1595c:	bls	15be4 <sav_process_row+0x348>
   15960:	ldr	r3, [r5, #340]	; 0x154
   15964:	add	r7, r7, #8
   15968:	cmp	fp, r3
   1596c:	cmplt	r6, r3
   15970:	bge	15be4 <sav_process_row+0x348>
   15974:	ldr	r3, [r5, #44]	; 0x2c
   15978:	ldr	r2, [r3, fp, lsl #2]
   1597c:	ldr	r4, [r3, r6, lsl #2]
   15980:	str	r8, [sp, #56]	; 0x38
   15984:	str	r8, [sp, #60]	; 0x3c
   15988:	str	r8, [sp, #68]	; 0x44
   1598c:	ldr	r3, [r4]
   15990:	str	r3, [sp, #64]	; 0x40
   15994:	cmp	sl, #31
   15998:	bgt	15bdc <sav_process_row+0x340>
   1599c:	cmp	r3, #0
   159a0:	bne	15abc <sav_process_row+0x220>
   159a4:	ldr	r3, [sp, #16]
   159a8:	add	r3, r3, #8
   159ac:	ldr	r1, [r5, #380]	; 0x17c
   159b0:	cmp	r3, r1
   159b4:	bhi	15930 <sav_process_row+0x94>
   159b8:	ldr	r1, [r5, #376]	; 0x178
   159bc:	ldr	r0, [sp, #16]
   159c0:	add	ip, r1, r0
   159c4:	str	ip, [sp, #16]
   159c8:	ldr	lr, [r7]
   159cc:	ldr	ip, [r7, #4]
   159d0:	str	lr, [r1, r0]
   159d4:	ldr	r1, [sp, #16]
   159d8:	str	ip, [r1, #4]
   159dc:	str	r3, [sp, #16]
   159e0:	b	15930 <sav_process_row+0x94>
   159e4:	ldr	r3, [sp, #24]
   159e8:	add	r3, r3, #1
   159ec:	mov	r2, r3
   159f0:	str	r3, [sp, #24]
   159f4:	ldr	r3, [r4, #48]	; 0x30
   159f8:	cmp	r2, r3
   159fc:	ldrlt	r3, [sp, #16]
   15a00:	sublt	r3, r3, #1
   15a04:	strlt	r3, [sp, #16]
   15a08:	add	fp, fp, #1
   15a0c:	ldr	sl, [sp, #28]
   15a10:	b	15940 <sav_process_row+0xa4>
   15a14:	ldr	r2, [r4, #8]
   15a18:	ldr	r3, [r5, #52]	; 0x34
   15a1c:	ldr	r3, [r3, r2, lsl #2]
   15a20:	ldr	r3, [r3, #2144]	; 0x860
   15a24:	cmp	r3, #0
   15a28:	beq	15a48 <sav_process_row+0x1ac>
   15a2c:	ldr	r3, [r4, #48]	; 0x30
   15a30:	add	r6, r6, r3
   15a34:	ldr	r3, [sp, #28]
   15a38:	str	r3, [sp, #24]
   15a3c:	mov	r3, #0
   15a40:	str	r3, [sp, #16]
   15a44:	b	15950 <sav_process_row+0xb4>
   15a48:	ldr	r3, [r5, #336]	; 0x150
   15a4c:	str	r3, [sp]
   15a50:	ldr	r3, [sp, #16]
   15a54:	ldr	r2, [r5, #376]	; 0x178
   15a58:	ldr	r1, [r5, #388]	; 0x184
   15a5c:	ldr	r0, [r5, #384]	; 0x180
   15a60:	bl	4264 <readstat_convert@plt>
   15a64:	cmp	r0, #0
   15a68:	bne	15bf4 <sav_process_row+0x358>
   15a6c:	ldr	r2, [r5, #384]	; 0x180
   15a70:	add	r3, sp, #80	; 0x50
   15a74:	str	r2, [r3, #-24]!	; 0xffffffe8
   15a78:	ldr	r1, [r4, #8]
   15a7c:	ldr	r2, [r5, #52]	; 0x34
   15a80:	ldr	ip, [r2, r1, lsl #2]
   15a84:	ldr	r2, [r5, #40]	; 0x28
   15a88:	str	r2, [sp, #8]
   15a8c:	ldr	r2, [sp, #36]	; 0x24
   15a90:	ldm	r2, {r0, r1}
   15a94:	stm	sp, {r0, r1}
   15a98:	ldm	r3, {r2, r3}
   15a9c:	mov	r1, ip
   15aa0:	ldr	r0, [r5, #364]	; 0x16c
   15aa4:	ldr	ip, [r5, #16]
   15aa8:	blx	ip
   15aac:	cmp	r0, #0
   15ab0:	beq	15a2c <sav_process_row+0x190>
   15ab4:	mov	r0, #4
   15ab8:	b	15bf4 <sav_process_row+0x358>
   15abc:	cmp	r3, #5
   15ac0:	bne	15950 <sav_process_row+0xb4>
   15ac4:	ldr	r2, [r4, #8]
   15ac8:	ldr	r3, [r5, #52]	; 0x34
   15acc:	ldr	r3, [r3, r2, lsl #2]
   15ad0:	ldr	r3, [r3, #2144]	; 0x860
   15ad4:	cmp	r3, #0
   15ad8:	beq	15aec <sav_process_row+0x250>
   15adc:	ldr	r3, [r4, #48]	; 0x30
   15ae0:	add	r6, r6, r3
   15ae4:	add	fp, fp, #1
   15ae8:	b	15950 <sav_process_row+0xb4>
   15aec:	ldr	r3, [sp, #48]	; 0x30
   15af0:	ldr	r0, [r7]
   15af4:	ldr	r1, [r7, #4]
   15af8:	stmia	r3!, {r0, r1}
   15afc:	ldrb	r3, [r5, #436]	; 0x1b4
   15b00:	tst	r3, #1
   15b04:	bne	15bcc <sav_process_row+0x330>
   15b08:	vldr	d7, [sp, #72]	; 0x48
   15b0c:	vstr	d7, [sp, #40]	; 0x28
   15b10:	vstr	d7, [sp, #56]	; 0x38
   15b14:	ldrd	r0, [sp, #40]	; 0x28
   15b18:	ldr	r3, [sp, #32]
   15b1c:	ldrd	r2, [r3, #-8]
   15b20:	cmp	r1, r3
   15b24:	cmpeq	r0, r2
   15b28:	ldrbeq	r3, [sp, #69]	; 0x45
   15b2c:	orreq	r3, r3, #1
   15b30:	strbeq	r3, [sp, #69]	; 0x45
   15b34:	ldr	r3, [sp, #32]
   15b38:	ldrd	r2, [r3]
   15b3c:	cmp	r1, r3
   15b40:	cmpeq	r0, r2
   15b44:	ldrbeq	r3, [sp, #69]	; 0x45
   15b48:	orreq	r3, r3, #1
   15b4c:	strbeq	r3, [sp, #69]	; 0x45
   15b50:	ldr	r3, [sp, #52]	; 0x34
   15b54:	ldrd	r2, [r3, #-8]
   15b58:	cmp	r1, r3
   15b5c:	cmpeq	r0, r2
   15b60:	ldrbeq	r3, [sp, #69]	; 0x45
   15b64:	orreq	r3, r3, #1
   15b68:	strbeq	r3, [sp, #69]	; 0x45
   15b6c:	vldr	d7, [sp, #40]	; 0x28
   15b70:	vcmp.f64	d7, d7
   15b74:	vmrs	APSR_nzcv, fpscr
   15b78:	ldrbvs	r3, [sp, #69]	; 0x45
   15b7c:	orrvs	r3, r3, #1
   15b80:	strbvs	r3, [sp, #69]	; 0x45
   15b84:	ldr	r2, [r4, #8]
   15b88:	ldr	r3, [r5, #52]	; 0x34
   15b8c:	ldr	ip, [r3, r2, lsl #2]
   15b90:	ldr	r3, [r5, #40]	; 0x28
   15b94:	str	r3, [sp, #8]
   15b98:	ldr	r3, [sp, #36]	; 0x24
   15b9c:	ldm	r3, {r0, r1}
   15ba0:	stm	sp, {r0, r1}
   15ba4:	add	r3, sp, #56	; 0x38
   15ba8:	ldm	r3, {r2, r3}
   15bac:	mov	r1, ip
   15bb0:	ldr	r0, [r5, #364]	; 0x16c
   15bb4:	ldr	ip, [r5, #16]
   15bb8:	blx	ip
   15bbc:	cmp	r0, #0
   15bc0:	beq	15adc <sav_process_row+0x240>
   15bc4:	mov	r0, #4
   15bc8:	b	15bf4 <sav_process_row+0x358>
   15bcc:	vldr	d0, [sp, #72]	; 0x48
   15bd0:	bl	4534 <byteswap_double@plt>
   15bd4:	vstr	d0, [sp, #72]	; 0x48
   15bd8:	b	15b08 <sav_process_row+0x26c>
   15bdc:	mov	r0, #5
   15be0:	b	15bf4 <sav_process_row+0x358>
   15be4:	ldr	r3, [r5, #364]	; 0x16c
   15be8:	add	r3, r3, #1
   15bec:	str	r3, [r5, #364]	; 0x16c
   15bf0:	mov	r0, #0
   15bf4:	add	sp, sp, #84	; 0x54
   15bf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015bfc <sav_parse_timestamp>:
   15bfc:	push	{r4, r5, r6, lr}
   15c00:	sub	sp, sp, #56	; 0x38
   15c04:	mov	r5, r0
   15c08:	mov	r6, r1
   15c0c:	mov	r2, #44	; 0x2c
   15c10:	mov	r1, #0
   15c14:	add	r4, sp, #12
   15c18:	mov	r0, r4
   15c1c:	bl	42d0 <memset@plt>
   15c20:	mvn	r3, #0
   15c24:	str	r3, [sp, #44]	; 0x2c
   15c28:	ldr	r3, [r5, #40]	; 0x28
   15c2c:	str	r3, [sp]
   15c30:	ldr	r3, [r5, #24]
   15c34:	mov	r2, r4
   15c38:	mov	r1, #8
   15c3c:	add	r0, r6, #101	; 0x65
   15c40:	bl	3ef8 <sav_parse_time@plt>
   15c44:	subs	r4, r0, #0
   15c48:	beq	15c58 <sav_parse_timestamp+0x5c>
   15c4c:	mov	r0, r4
   15c50:	add	sp, sp, #56	; 0x38
   15c54:	pop	{r4, r5, r6, pc}
   15c58:	ldr	r3, [r5, #40]	; 0x28
   15c5c:	str	r3, [sp]
   15c60:	ldr	r3, [r5, #24]
   15c64:	add	r2, sp, #12
   15c68:	mov	r1, #9
   15c6c:	add	r0, r6, #92	; 0x5c
   15c70:	bl	40a8 <sav_parse_date@plt>
   15c74:	subs	r4, r0, #0
   15c78:	bne	15c4c <sav_parse_timestamp+0x50>
   15c7c:	add	r0, sp, #12
   15c80:	bl	3e74 <mktime@plt>
   15c84:	str	r0, [r5, #324]	; 0x144
   15c88:	b	15c4c <sav_parse_timestamp+0x50>

00015c8c <readstat_parse_sav>:
   15c8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15c90:	vpush	{d8-d11}
   15c94:	sub	sp, sp, #860	; 0x35c
   15c98:	mov	r5, r0
   15c9c:	mov	r0, r1
   15ca0:	mov	r7, r2
   15ca4:	ldr	r4, [r5, #32]
   15ca8:	ldr	r3, [r4]
   15cac:	ldr	r1, [r4, #20]
   15cb0:	blx	r3
   15cb4:	cmn	r0, #1
   15cb8:	moveq	sl, #1
   15cbc:	beq	179c4 <readstat_parse_sav+0x1d38>
   15cc0:	ldr	r3, [r4, #8]
   15cc4:	ldr	r2, [r4, #20]
   15cc8:	mov	r1, #2
   15ccc:	mov	r0, #0
   15cd0:	blx	r3
   15cd4:	mov	r6, r0
   15cd8:	cmn	r0, #1
   15cdc:	beq	179b4 <readstat_parse_sav+0x1d28>
   15ce0:	ldr	r3, [r4, #8]
   15ce4:	ldr	r2, [r4, #20]
   15ce8:	mov	r1, #0
   15cec:	mov	r0, r1
   15cf0:	blx	r3
   15cf4:	cmn	r0, #1
   15cf8:	beq	179d4 <readstat_parse_sav+0x1d48>
   15cfc:	ldr	r3, [r4, #12]
   15d00:	ldr	r2, [r4, #20]
   15d04:	mov	r1, #176	; 0xb0
   15d08:	add	r0, sp, #680	; 0x2a8
   15d0c:	blx	r3
   15d10:	cmp	r0, #175	; 0xaf
   15d14:	movls	sl, #2
   15d18:	bls	179b8 <readstat_parse_sav+0x1d2c>
   15d1c:	mov	r1, r4
   15d20:	add	r0, sp, #680	; 0x2a8
   15d24:	bl	4078 <sav_ctx_init@plt>
   15d28:	subs	r9, r0, #0
   15d2c:	beq	179dc <readstat_parse_sav+0x1d50>
   15d30:	mov	ip, r9
   15d34:	mov	lr, r5
   15d38:	ldm	lr!, {r0, r1, r2, r3}
   15d3c:	stmia	ip!, {r0, r1, r2, r3}
   15d40:	ldm	lr, {r0, r1, r2, r3}
   15d44:	stm	ip, {r0, r1, r2, r3}
   15d48:	ldr	r3, [r5, #36]	; 0x24
   15d4c:	str	r3, [r9, #56]	; 0x38
   15d50:	ldr	r3, [r5, #40]	; 0x28
   15d54:	str	r3, [r9, #60]	; 0x3c
   15d58:	str	r7, [r9, #40]	; 0x28
   15d5c:	str	r6, [r9, #32]
   15d60:	ldr	r3, [r5, #48]	; 0x30
   15d64:	cmp	r3, #0
   15d68:	strgt	r3, [r9, #360]	; 0x168
   15d6c:	ldr	r2, [r9, #352]	; 0x160
   15d70:	cmn	r2, #1
   15d74:	beq	15dc8 <readstat_parse_sav+0x13c>
   15d78:	ldr	r3, [r9, #360]	; 0x168
   15d7c:	subs	r3, r2, r3
   15d80:	strmi	r2, [r9, #360]	; 0x168
   15d84:	movmi	r3, #0
   15d88:	str	r3, [r9, #356]	; 0x164
   15d8c:	ldr	r2, [r5, #44]	; 0x2c
   15d90:	cmp	r2, #0
   15d94:	cmpgt	r3, r2
   15d98:	strgt	r2, [r9, #356]	; 0x164
   15d9c:	add	r1, sp, #680	; 0x2a8
   15da0:	mov	r0, r9
   15da4:	bl	3e14 <sav_parse_timestamp@plt>
   15da8:	subs	sl, r0, #0
   15dac:	beq	15dd8 <readstat_parse_sav+0x14c>
   15db0:	ldr	r3, [r4, #4]
   15db4:	ldr	r0, [r4, #20]
   15db8:	blx	r3
   15dbc:	mov	r0, r9
   15dc0:	bl	3f34 <sav_ctx_free@plt>
   15dc4:	b	179c4 <readstat_parse_sav+0x1d38>
   15dc8:	ldr	r3, [r5, #44]	; 0x2c
   15dcc:	cmp	r3, #0
   15dd0:	strgt	r3, [r9, #356]	; 0x164
   15dd4:	b	15d9c <readstat_parse_sav+0x110>
   15dd8:	mov	r0, r9
   15ddc:	bl	1519c <sav_parse_records_pass1>
   15de0:	subs	sl, r0, #0
   15de4:	bne	15db0 <readstat_parse_sav+0x124>
   15de8:	ldr	r3, [r4, #8]
   15dec:	ldr	r2, [r4, #20]
   15df0:	mov	r1, #0
   15df4:	mov	r0, #176	; 0xb0
   15df8:	blx	r3
   15dfc:	cmn	r0, #1
   15e00:	beq	1799c <readstat_parse_sav+0x1d10>
   15e04:	mov	r0, r9
   15e08:	bl	15070 <sav_update_progress>
   15e0c:	subs	sl, r0, #0
   15e10:	bne	15db0 <readstat_parse_sav+0x124>
   15e14:	ldr	r3, [r9, #36]	; 0x24
   15e18:	str	r3, [sp, #36]	; 0x24
   15e1c:	mov	r0, #4096	; 0x1000
   15e20:	bl	4258 <readstat_malloc@plt>
   15e24:	subs	r3, r0, #0
   15e28:	beq	179a4 <readstat_parse_sav+0x1d18>
   15e2c:	mov	r2, #4096	; 0x1000
   15e30:	str	r2, [sp, #48]	; 0x30
   15e34:	vldr	d10, [pc, #500]	; 16030 <readstat_parse_sav+0x3a4>
   15e38:	vldr	d9, [pc, #504]	; 16038 <readstat_parse_sav+0x3ac>
   15e3c:	vldr	d8, [pc, #508]	; 16040 <readstat_parse_sav+0x3b4>
   15e40:	str	r4, [sp, #20]
   15e44:	str	sl, [sp, #16]
   15e48:	mov	sl, r3
   15e4c:	ldr	r2, [sp, #36]	; 0x24
   15e50:	ldr	r3, [r2, #12]
   15e54:	ldr	r2, [r2, #20]
   15e58:	mov	r1, #4
   15e5c:	add	r0, sp, #60	; 0x3c
   15e60:	blx	r3
   15e64:	cmp	r0, #3
   15e68:	bls	1722c <readstat_parse_sav+0x15a0>
   15e6c:	ldrb	r3, [r9, #436]	; 0x1b4
   15e70:	tst	r3, #1
   15e74:	bne	15f80 <readstat_parse_sav+0x2f4>
   15e78:	ldr	r3, [sp, #60]	; 0x3c
   15e7c:	cmp	r3, #6
   15e80:	beq	16950 <readstat_parse_sav+0xcc4>
   15e84:	bhi	15fdc <readstat_parse_sav+0x350>
   15e88:	cmp	r3, #2
   15e8c:	beq	1605c <readstat_parse_sav+0x3d0>
   15e90:	cmp	r3, #3
   15e94:	bne	15f90 <readstat_parse_sav+0x304>
   15e98:	ldr	r4, [r9, #36]	; 0x24
   15e9c:	ldr	r3, [r4, #12]
   15ea0:	ldr	r2, [r4, #20]
   15ea4:	mov	r1, #4
   15ea8:	add	r0, sp, #64	; 0x40
   15eac:	blx	r3
   15eb0:	cmp	r0, #3
   15eb4:	movls	r8, #2
   15eb8:	bls	16938 <readstat_parse_sav+0xcac>
   15ebc:	ldrb	r3, [r9, #436]	; 0x1b4
   15ec0:	tst	r3, #1
   15ec4:	bne	16558 <readstat_parse_sav+0x8cc>
   15ec8:	ldr	r0, [sp, #64]	; 0x40
   15ecc:	cmp	r0, #0
   15ed0:	moveq	fp, #0
   15ed4:	bne	16568 <readstat_parse_sav+0x8dc>
   15ed8:	ldr	r3, [r4, #12]
   15edc:	ldr	r2, [r4, #20]
   15ee0:	mov	r1, #4
   15ee4:	add	r0, sp, #80	; 0x50
   15ee8:	blx	r3
   15eec:	cmp	r0, #3
   15ef0:	movls	r8, #2
   15ef4:	bls	16860 <readstat_parse_sav+0xbd4>
   15ef8:	ldrb	r3, [r9, #436]	; 0x1b4
   15efc:	tst	r3, #1
   15f00:	beq	15f10 <readstat_parse_sav+0x284>
   15f04:	ldr	r0, [sp, #80]	; 0x50
   15f08:	bl	3db4 <byteswap4@plt>
   15f0c:	str	r0, [sp, #80]	; 0x50
   15f10:	ldr	r3, [sp, #80]	; 0x50
   15f14:	cmp	r3, #4
   15f18:	movne	r8, #5
   15f1c:	bne	16860 <readstat_parse_sav+0xbd4>
   15f20:	ldr	r3, [r4, #12]
   15f24:	ldr	r2, [r4, #20]
   15f28:	mov	r1, #4
   15f2c:	add	r0, sp, #68	; 0x44
   15f30:	blx	r3
   15f34:	cmp	r0, #3
   15f38:	movls	r8, #2
   15f3c:	bls	16860 <readstat_parse_sav+0xbd4>
   15f40:	ldrb	r3, [r9, #436]	; 0x1b4
   15f44:	tst	r3, #1
   15f48:	beq	15f58 <readstat_parse_sav+0x2cc>
   15f4c:	ldr	r0, [sp, #68]	; 0x44
   15f50:	bl	3db4 <byteswap4@plt>
   15f54:	str	r0, [sp, #68]	; 0x44
   15f58:	ldr	r0, [sp, #68]	; 0x44
   15f5c:	cmp	r0, #0
   15f60:	beq	17868 <readstat_parse_sav+0x1bdc>
   15f64:	lsl	r0, r0, #2
   15f68:	bl	4258 <readstat_malloc@plt>
   15f6c:	subs	r3, r0, #0
   15f70:	str	r3, [sp, #32]
   15f74:	bne	17800 <readstat_parse_sav+0x1b74>
   15f78:	mov	r8, #3
   15f7c:	b	16860 <readstat_parse_sav+0xbd4>
   15f80:	ldr	r0, [sp, #60]	; 0x3c
   15f84:	bl	3db4 <byteswap4@plt>
   15f88:	str	r0, [sp, #60]	; 0x3c
   15f8c:	b	15e78 <readstat_parse_sav+0x1ec>
   15f90:	ldr	r4, [sp, #20]
   15f94:	mov	r6, sl
   15f98:	ldr	sl, [sp, #16]
   15f9c:	mov	r8, #5
   15fa0:	cmp	r6, #0
   15fa4:	beq	15fb0 <readstat_parse_sav+0x324>
   15fa8:	mov	r0, r6
   15fac:	bl	3ee0 <free@plt>
   15fb0:	cmp	r8, #0
   15fb4:	movne	sl, r8
   15fb8:	bne	15db0 <readstat_parse_sav+0x124>
   15fbc:	mov	r3, #0
   15fc0:	str	r3, [r9, #348]	; 0x15c
   15fc4:	ldr	r3, [r9, #340]	; 0x154
   15fc8:	cmp	r3, #0
   15fcc:	ble	1732c <readstat_parse_sav+0x16a0>
   15fd0:	mov	r5, #0
   15fd4:	mov	r7, #252	; 0xfc
   15fd8:	b	17304 <readstat_parse_sav+0x1678>
   15fdc:	cmp	r3, #7
   15fe0:	beq	16a3c <readstat_parse_sav+0xdb0>
   15fe4:	ldr	r4, [sp, #20]
   15fe8:	mov	r6, sl
   15fec:	ldr	sl, [sp, #16]
   15ff0:	ldr	r2, [pc, #80]	; 16048 <readstat_parse_sav+0x3bc>
   15ff4:	cmp	r3, r2
   15ff8:	bne	15f9c <readstat_parse_sav+0x310>
   15ffc:	ldr	r3, [r9, #36]	; 0x24
   16000:	ldr	r5, [r3, #12]
   16004:	ldr	r2, [r3, #20]
   16008:	mov	r1, #4
   1600c:	add	r0, sp, #352	; 0x160
   16010:	blx	r5
   16014:	cmp	r0, #3
   16018:	movls	r8, #2
   1601c:	bls	15fa0 <readstat_parse_sav+0x314>
   16020:	cmp	r6, #0
   16024:	movne	r8, sl
   16028:	bne	15fa8 <readstat_parse_sav+0x31c>
   1602c:	b	15fbc <readstat_parse_sav+0x330>
   16030:	.word	0x00000000
   16034:	.word	0x7ff80000
   16038:	.word	0x00000000
   1603c:	.word	0xfff00000
   16040:	.word	0x00000000
   16044:	.word	0x7ff00000
   16048:	.word	0x000003e7
   1604c:	.word	0x0000f04c
   16050:	.word	0x00000141
   16054:	.word	0x0000eb18
   16058:	.word	0x00000101
   1605c:	ldr	r4, [r9, #36]	; 0x24
   16060:	mov	r2, #0
   16064:	str	r2, [sp, #352]	; 0x160
   16068:	str	r2, [sp, #356]	; 0x164
   1606c:	str	r2, [sp, #360]	; 0x168
   16070:	str	r2, [sp, #364]	; 0x16c
   16074:	str	r2, [sp, #368]	; 0x170
   16078:	str	r2, [sp, #372]	; 0x174
   1607c:	str	r2, [sp, #376]	; 0x178
   16080:	ldr	r1, [r9, #340]	; 0x154
   16084:	ldr	r3, [r9, #48]	; 0x30
   16088:	cmp	r1, r3
   1608c:	bne	160b0 <readstat_parse_sav+0x424>
   16090:	lsl	r3, r1, #1
   16094:	str	r3, [r9, #48]	; 0x30
   16098:	lsl	r1, r1, #3
   1609c:	ldr	r0, [r9, #44]	; 0x2c
   160a0:	bl	430c <readstat_realloc@plt>
   160a4:	str	r0, [r9, #44]	; 0x2c
   160a8:	cmp	r0, #0
   160ac:	beq	177b4 <readstat_parse_sav+0x1b28>
   160b0:	ldr	r3, [r4, #12]
   160b4:	ldr	r2, [r4, #20]
   160b8:	mov	r1, #28
   160bc:	add	r0, sp, #352	; 0x160
   160c0:	blx	r3
   160c4:	cmp	r0, #27
   160c8:	bls	177cc <readstat_parse_sav+0x1b40>
   160cc:	ldrb	r3, [r9, #436]	; 0x1b4
   160d0:	tst	r3, #1
   160d4:	ldreq	r0, [sp, #364]	; 0x16c
   160d8:	bne	163a0 <readstat_parse_sav+0x714>
   160dc:	str	r0, [sp, #364]	; 0x16c
   160e0:	ldrb	r3, [r9, #436]	; 0x1b4
   160e4:	tst	r3, #1
   160e8:	ldreq	r0, [sp, #368]	; 0x170
   160ec:	bne	163ac <readstat_parse_sav+0x720>
   160f0:	str	r0, [sp, #368]	; 0x170
   160f4:	ldrb	r3, [r9, #436]	; 0x1b4
   160f8:	tst	r3, #1
   160fc:	ldreq	r4, [sp, #352]	; 0x160
   16100:	bne	163b8 <readstat_parse_sav+0x72c>
   16104:	cmp	r4, #0
   16108:	blt	163c8 <readstat_parse_sav+0x73c>
   1610c:	mov	r1, #280	; 0x118
   16110:	mov	r0, #1
   16114:	bl	3fe8 <readstat_calloc@plt>
   16118:	subs	fp, r0, #0
   1611c:	beq	177ec <readstat_parse_sav+0x1b60>
   16120:	mov	r3, #1
   16124:	str	r3, [fp, #16]
   16128:	str	r3, [fp, #48]	; 0x30
   1612c:	ldr	r3, [r9, #340]	; 0x154
   16130:	str	r3, [fp, #8]
   16134:	ldr	r3, [r9, #344]	; 0x158
   16138:	str	r3, [fp, #12]
   1613c:	mvn	r3, #0
   16140:	str	r3, [fp, #4]
   16144:	mov	r3, #0
   16148:	str	r3, [sp]
   1614c:	mov	r3, #8
   16150:	add	r2, sp, #372	; 0x174
   16154:	mov	r1, #9
   16158:	add	r0, fp, #187	; 0xbb
   1615c:	bl	4264 <readstat_convert@plt>
   16160:	subs	r8, r0, #0
   16164:	bne	16538 <readstat_parse_sav+0x8ac>
   16168:	mov	r3, #0
   1616c:	str	r3, [sp]
   16170:	mov	r3, #8
   16174:	add	r2, sp, #372	; 0x174
   16178:	mov	r1, #65	; 0x41
   1617c:	add	r0, fp, #196	; 0xc4
   16180:	bl	4264 <readstat_convert@plt>
   16184:	subs	r8, r0, #0
   16188:	bne	16548 <readstat_parse_sav+0x8bc>
   1618c:	ldr	r3, [sp, #364]	; 0x16c
   16190:	uxtb	r2, r3
   16194:	str	r2, [fp, #32]
   16198:	asr	r2, r3, #8
   1619c:	uxtb	r2, r2
   161a0:	str	r2, [fp, #28]
   161a4:	asr	r3, r3, #16
   161a8:	uxtb	r2, r3
   161ac:	str	r2, [fp, #24]
   161b0:	ldr	r3, [sp, #368]	; 0x170
   161b4:	uxtb	r1, r3
   161b8:	str	r1, [fp, #44]	; 0x2c
   161bc:	asr	r1, r3, #8
   161c0:	uxtb	r1, r1
   161c4:	str	r1, [fp, #40]	; 0x28
   161c8:	asr	r3, r3, #16
   161cc:	uxtb	r3, r3
   161d0:	str	r3, [fp, #36]	; 0x24
   161d4:	cmp	r2, #1
   161d8:	cmpne	r3, #1
   161dc:	moveq	r3, #1
   161e0:	movne	r3, #0
   161e4:	cmp	r4, #0
   161e8:	movle	r4, r3
   161ec:	orrgt	r4, r3, #1
   161f0:	cmp	r4, #0
   161f4:	movne	r3, #0
   161f8:	moveq	r3, #5
   161fc:	str	r3, [fp]
   16200:	ldr	r3, [sp, #356]	; 0x164
   16204:	cmp	r3, #0
   16208:	beq	162dc <readstat_parse_sav+0x650>
   1620c:	ldr	r5, [r9, #36]	; 0x24
   16210:	ldr	r3, [r5, #12]
   16214:	ldr	r2, [r5, #20]
   16218:	mov	r1, #4
   1621c:	add	r0, sp, #96	; 0x60
   16220:	blx	r3
   16224:	cmp	r0, #3
   16228:	bls	179e4 <readstat_parse_sav+0x1d58>
   1622c:	ldrb	r3, [r9, #436]	; 0x1b4
   16230:	tst	r3, #1
   16234:	ldreq	r0, [sp, #96]	; 0x60
   16238:	beq	16244 <readstat_parse_sav+0x5b8>
   1623c:	ldr	r0, [sp, #96]	; 0x60
   16240:	bl	3db4 <byteswap4@plt>
   16244:	str	r0, [sp, #96]	; 0x60
   16248:	cmp	r0, #0
   1624c:	beq	162dc <readstat_parse_sav+0x650>
   16250:	add	r0, r0, #3
   16254:	bic	r6, r0, #3
   16258:	mov	r0, r6
   1625c:	bl	4258 <readstat_malloc@plt>
   16260:	subs	r7, r0, #0
   16264:	beq	179f8 <readstat_parse_sav+0x1d6c>
   16268:	ldr	r4, [sp, #96]	; 0x60
   1626c:	lsl	r4, r4, #2
   16270:	add	r4, r4, #1
   16274:	mov	r0, r4
   16278:	bl	4258 <readstat_malloc@plt>
   1627c:	str	r0, [fp, #264]	; 0x108
   16280:	cmp	r0, #0
   16284:	moveq	r8, #3
   16288:	beq	162cc <readstat_parse_sav+0x640>
   1628c:	ldr	r3, [r5, #12]
   16290:	ldr	r2, [r5, #20]
   16294:	mov	r1, r6
   16298:	mov	r0, r7
   1629c:	blx	r3
   162a0:	cmp	r6, r0
   162a4:	movhi	r8, #2
   162a8:	bhi	162cc <readstat_parse_sav+0x640>
   162ac:	ldr	r3, [r9, #336]	; 0x150
   162b0:	str	r3, [sp]
   162b4:	ldr	r3, [sp, #96]	; 0x60
   162b8:	mov	r2, r7
   162bc:	mov	r1, r4
   162c0:	ldr	r0, [fp, #264]	; 0x108
   162c4:	bl	4264 <readstat_convert@plt>
   162c8:	mov	r8, r0
   162cc:	mov	r0, r7
   162d0:	bl	3ee0 <free@plt>
   162d4:	cmp	r8, #0
   162d8:	bne	16410 <readstat_parse_sav+0x784>
   162dc:	ldr	r2, [sp, #360]	; 0x168
   162e0:	cmp	r2, #0
   162e4:	beq	16378 <readstat_parse_sav+0x6ec>
   162e8:	ldrb	r3, [r9, #436]	; 0x1b4
   162ec:	tst	r3, #1
   162f0:	beq	16300 <readstat_parse_sav+0x674>
   162f4:	mov	r0, r2
   162f8:	bl	3db4 <byteswap4@plt>
   162fc:	mov	r2, r0
   16300:	str	r2, [fp, #52]	; 0x34
   16304:	add	r3, r2, #3
   16308:	cmp	r3, #6
   1630c:	bhi	17a0c <readstat_parse_sav+0x1d80>
   16310:	cmp	r2, #0
   16314:	movlt	r3, #1
   16318:	strlt	r3, [fp, #56]	; 0x38
   1631c:	eorlt	r0, r2, r2, asr #31
   16320:	sublt	r0, r0, r2, asr #31
   16324:	strlt	r0, [fp, #52]	; 0x34
   16328:	movge	r3, #0
   1632c:	strge	r3, [fp, #56]	; 0x38
   16330:	ldr	r3, [fp]
   16334:	cmp	r3, #5
   16338:	bne	164ac <readstat_parse_sav+0x820>
   1633c:	ldr	r3, [r9, #36]	; 0x24
   16340:	ldr	r1, [fp, #52]	; 0x34
   16344:	ldr	r4, [r3, #12]
   16348:	ldr	r2, [r3, #20]
   1634c:	lsl	r1, r1, #3
   16350:	add	r0, fp, #64	; 0x40
   16354:	blx	r4
   16358:	ldr	r3, [fp, #52]	; 0x34
   1635c:	cmp	r0, r3, lsl #3
   16360:	bcc	17a20 <readstat_parse_sav+0x1d94>
   16364:	add	r4, fp, #64	; 0x40
   16368:	mov	r5, #0
   1636c:	ldr	r3, [fp, #52]	; 0x34
   16370:	cmp	r5, r3
   16374:	blt	16438 <readstat_parse_sav+0x7ac>
   16378:	ldr	r2, [r9, #340]	; 0x154
   1637c:	ldr	r3, [r9, #44]	; 0x2c
   16380:	str	fp, [r3, r2, lsl #2]
   16384:	ldr	r3, [r9, #340]	; 0x154
   16388:	add	r3, r3, #1
   1638c:	str	r3, [r9, #340]	; 0x154
   16390:	ldr	r3, [r9, #344]	; 0x158
   16394:	add	r3, r3, #1
   16398:	str	r3, [r9, #344]	; 0x158
   1639c:	b	15e4c <readstat_parse_sav+0x1c0>
   163a0:	ldr	r0, [sp, #364]	; 0x16c
   163a4:	bl	3db4 <byteswap4@plt>
   163a8:	b	160dc <readstat_parse_sav+0x450>
   163ac:	ldr	r0, [sp, #368]	; 0x170
   163b0:	bl	3db4 <byteswap4@plt>
   163b4:	b	160f0 <readstat_parse_sav+0x464>
   163b8:	ldr	r0, [sp, #352]	; 0x160
   163bc:	bl	3db4 <byteswap4@plt>
   163c0:	mov	r4, r0
   163c4:	b	16104 <readstat_parse_sav+0x478>
   163c8:	ldr	r3, [r9, #340]	; 0x154
   163cc:	cmp	r3, #0
   163d0:	bne	163e8 <readstat_parse_sav+0x75c>
   163d4:	ldr	r4, [sp, #20]
   163d8:	mov	r6, sl
   163dc:	ldr	sl, [sp, #16]
   163e0:	mov	r8, #5
   163e4:	b	15fa0 <readstat_parse_sav+0x314>
   163e8:	ldr	r2, [r9, #344]	; 0x158
   163ec:	add	r2, r2, #1
   163f0:	str	r2, [r9, #344]	; 0x158
   163f4:	sub	r3, r3, #-1073741823	; 0xc0000001
   163f8:	ldr	r2, [r9, #44]	; 0x2c
   163fc:	ldr	r2, [r2, r3, lsl #2]
   16400:	ldr	r3, [r2, #16]
   16404:	add	r3, r3, #1
   16408:	str	r3, [r2, #16]
   1640c:	b	15e4c <readstat_parse_sav+0x1c0>
   16410:	ldr	r4, [sp, #20]
   16414:	mov	r6, sl
   16418:	ldr	sl, [sp, #16]
   1641c:	ldr	r0, [fp, #264]	; 0x108
   16420:	cmp	r0, #0
   16424:	beq	177e0 <readstat_parse_sav+0x1b54>
   16428:	bl	3ee0 <free@plt>
   1642c:	mov	r3, #0
   16430:	str	r3, [fp, #264]	; 0x108
   16434:	b	177e0 <readstat_parse_sav+0x1b54>
   16438:	ldrb	r3, [r9, #436]	; 0x1b4
   1643c:	tst	r3, #1
   16440:	beq	16450 <readstat_parse_sav+0x7c4>
   16444:	vldr	d0, [r4]
   16448:	bl	4534 <byteswap_double@plt>
   1644c:	vstr	d0, [r4]
   16450:	add	r3, sp, #96	; 0x60
   16454:	ldr	r0, [r4]
   16458:	ldr	r1, [r4, #4]
   1645c:	stmia	r3!, {r0, r1}
   16460:	ldrd	r2, [sp, #96]	; 0x60
   16464:	add	r1, r9, #400	; 0x190
   16468:	ldrd	r0, [r1, #-8]
   1646c:	cmp	r1, r3
   16470:	cmpeq	r0, r2
   16474:	vstreq	d10, [r4]
   16478:	add	r1, r9, #400	; 0x190
   1647c:	ldrd	r0, [r1]
   16480:	cmp	r3, r1
   16484:	cmpeq	r2, r0
   16488:	vstreq	d9, [r4]
   1648c:	add	r1, r9, #416	; 0x1a0
   16490:	ldrd	r0, [r1, #-8]
   16494:	cmp	r3, r1
   16498:	cmpeq	r2, r0
   1649c:	vstreq	d8, [r4]
   164a0:	add	r5, r5, #1
   164a4:	add	r4, r4, #8
   164a8:	b	1636c <readstat_parse_sav+0x6e0>
   164ac:	ldr	r4, [r9, #36]	; 0x24
   164b0:	add	r6, fp, #88	; 0x58
   164b4:	mov	r5, #0
   164b8:	add	r7, sp, #96	; 0x60
   164bc:	ldr	r3, [fp, #52]	; 0x34
   164c0:	cmp	r5, r3
   164c4:	bge	16378 <readstat_parse_sav+0x6ec>
   164c8:	ldr	r3, [r4, #12]
   164cc:	ldr	r2, [r4, #20]
   164d0:	mov	r1, #8
   164d4:	mov	r0, r7
   164d8:	blx	r3
   164dc:	cmp	r0, #7
   164e0:	bls	16514 <readstat_parse_sav+0x888>
   164e4:	ldr	r3, [r9, #336]	; 0x150
   164e8:	str	r3, [sp]
   164ec:	mov	r3, #8
   164f0:	mov	r2, r7
   164f4:	mov	r1, #33	; 0x21
   164f8:	mov	r0, r6
   164fc:	bl	4264 <readstat_convert@plt>
   16500:	add	r6, r6, #33	; 0x21
   16504:	cmp	r0, #0
   16508:	bne	16530 <readstat_parse_sav+0x8a4>
   1650c:	add	r5, r5, #1
   16510:	b	164bc <readstat_parse_sav+0x830>
   16514:	mov	r8, #2
   16518:	cmp	r8, #0
   1651c:	beq	16378 <readstat_parse_sav+0x6ec>
   16520:	ldr	r4, [sp, #20]
   16524:	mov	r6, sl
   16528:	ldr	sl, [sp, #16]
   1652c:	b	177e0 <readstat_parse_sav+0x1b54>
   16530:	mov	r8, r0
   16534:	b	16518 <readstat_parse_sav+0x88c>
   16538:	ldr	r4, [sp, #20]
   1653c:	mov	r6, sl
   16540:	ldr	sl, [sp, #16]
   16544:	b	177e0 <readstat_parse_sav+0x1b54>
   16548:	ldr	r4, [sp, #20]
   1654c:	mov	r6, sl
   16550:	ldr	sl, [sp, #16]
   16554:	b	177e0 <readstat_parse_sav+0x1b54>
   16558:	ldr	r0, [sp, #64]	; 0x40
   1655c:	bl	3db4 <byteswap4@plt>
   16560:	str	r0, [sp, #64]	; 0x40
   16564:	b	15ec8 <readstat_parse_sav+0x23c>
   16568:	mov	r1, #72	; 0x48
   1656c:	bl	3fe8 <readstat_calloc@plt>
   16570:	subs	fp, r0, #0
   16574:	bne	1666c <readstat_parse_sav+0x9e0>
   16578:	mov	r8, #3
   1657c:	b	16938 <readstat_parse_sav+0xcac>
   16580:	mov	r3, #0
   16584:	strb	r3, [sp, #352]	; 0x160
   16588:	ldr	r0, [sp, #32]
   1658c:	mov	r8, r0
   16590:	ldr	r3, [r4, #12]
   16594:	ldr	r2, [r4, #20]
   16598:	mov	r1, #8
   1659c:	blx	r3
   165a0:	cmp	r0, #7
   165a4:	ble	1664c <readstat_parse_sav+0x9c0>
   165a8:	ldr	r3, [r4, #12]
   165ac:	ldr	r2, [r4, #20]
   165b0:	mov	r1, #1
   165b4:	ldr	r0, [sp, #40]	; 0x28
   165b8:	blx	r3
   165bc:	cmp	r0, #0
   165c0:	ble	16654 <readstat_parse_sav+0x9c8>
   165c4:	ldrb	r5, [sp, #352]	; 0x160
   165c8:	add	r5, r5, #8
   165cc:	bic	r5, r5, #7
   165d0:	sub	r5, r5, #1
   165d4:	ldr	r3, [r4, #12]
   165d8:	ldr	r2, [r4, #20]
   165dc:	mov	r1, r5
   165e0:	ldr	r0, [sp, #24]
   165e4:	blx	r3
   165e8:	cmp	r5, r0
   165ec:	bhi	1665c <readstat_parse_sav+0x9d0>
   165f0:	lsl	r6, r5, #2
   165f4:	add	r6, r6, #1
   165f8:	mov	r0, r6
   165fc:	bl	4258 <readstat_malloc@plt>
   16600:	str	r0, [r8, #64]	; 0x40
   16604:	cmp	r0, #0
   16608:	beq	16664 <readstat_parse_sav+0x9d8>
   1660c:	ldr	r3, [r9, #336]	; 0x150
   16610:	str	r3, [sp]
   16614:	mov	r3, r5
   16618:	ldr	r2, [sp, #24]
   1661c:	mov	r1, r6
   16620:	bl	4264 <readstat_convert@plt>
   16624:	ldr	r3, [sp, #32]
   16628:	add	r3, r3, #72	; 0x48
   1662c:	str	r3, [sp, #32]
   16630:	cmp	r0, #0
   16634:	bne	16900 <readstat_parse_sav+0xc74>
   16638:	add	r7, r7, #1
   1663c:	ldr	r3, [sp, #64]	; 0x40
   16640:	cmp	r7, r3
   16644:	bcc	16580 <readstat_parse_sav+0x8f4>
   16648:	b	15ed8 <readstat_parse_sav+0x24c>
   1664c:	mov	r8, #2
   16650:	b	16868 <readstat_parse_sav+0xbdc>
   16654:	mov	r8, #2
   16658:	b	16868 <readstat_parse_sav+0xbdc>
   1665c:	mov	r8, #2
   16660:	b	16868 <readstat_parse_sav+0xbdc>
   16664:	mov	r8, #3
   16668:	b	16868 <readstat_parse_sav+0xbdc>
   1666c:	str	fp, [sp, #32]
   16670:	mov	r7, #0
   16674:	add	r3, sp, #352	; 0x160
   16678:	str	r3, [sp, #40]	; 0x28
   1667c:	add	r3, sp, #96	; 0x60
   16680:	str	r3, [sp, #24]
   16684:	b	1663c <readstat_parse_sav+0x9b0>
   16688:	ldr	r3, [sp, #32]
   1668c:	ldr	r0, [r3, r8, lsl #2]
   16690:	str	r0, [sp, #352]	; 0x160
   16694:	ldrb	r3, [r9, #436]	; 0x1b4
   16698:	tst	r3, #1
   1669c:	beq	166a8 <readstat_parse_sav+0xa1c>
   166a0:	bl	3db4 <byteswap4@plt>
   166a4:	str	r0, [sp, #352]	; 0x160
   166a8:	ldr	r3, [sp, #352]	; 0x160
   166ac:	sub	r3, r3, #1
   166b0:	str	r3, [sp, #352]	; 0x160
   166b4:	ldr	r3, [r9, #44]	; 0x2c
   166b8:	str	r3, [sp, #24]
   166bc:	ldr	r6, [r9, #340]	; 0x154
   166c0:	mov	r7, #0
   166c4:	cmp	r7, r6
   166c8:	bcc	166d4 <readstat_parse_sav+0xa48>
   166cc:	add	r8, r8, #1
   166d0:	b	17838 <readstat_parse_sav+0x1bac>
   166d4:	add	r4, r7, r6
   166d8:	lsr	r4, r4, #1
   166dc:	ldr	r3, [sp, #24]
   166e0:	add	r5, r3, r4, lsl #2
   166e4:	mov	r1, r5
   166e8:	ldr	r0, [sp, #40]	; 0x28
   166ec:	bl	4234 <spss_varinfo_compare@plt>
   166f0:	cmp	r0, #0
   166f4:	blt	16704 <readstat_parse_sav+0xa78>
   166f8:	ble	1670c <readstat_parse_sav+0xa80>
   166fc:	add	r7, r4, #1
   16700:	mov	r4, r6
   16704:	mov	r6, r4
   16708:	b	166c4 <readstat_parse_sav+0xa38>
   1670c:	cmp	r5, #0
   16710:	beq	166cc <readstat_parse_sav+0xa40>
   16714:	ldr	r3, [r5]
   16718:	ldr	r2, [r9, #368]	; 0x170
   1671c:	str	r2, [r3, #4]
   16720:	ldr	r3, [r5]
   16724:	ldr	r3, [r3]
   16728:	str	r3, [sp, #44]	; 0x2c
   1672c:	b	166cc <readstat_parse_sav+0xa40>
   16730:	mov	r4, r6
   16734:	vstr	d11, [sp, #352]	; 0x160
   16738:	ldr	r3, [sp, #44]	; 0x2c
   1673c:	str	r3, [r6, #56]	; 0x38
   16740:	cmp	r3, #5
   16744:	bne	16880 <readstat_parse_sav+0xbf4>
   16748:	ldr	r3, [sp, #52]	; 0x34
   1674c:	ldr	r0, [r6]
   16750:	ldr	r1, [r6, #4]
   16754:	stmia	r3!, {r0, r1}
   16758:	ldrb	r3, [r9, #436]	; 0x1b4
   1675c:	tst	r3, #1
   16760:	beq	16770 <readstat_parse_sav+0xae4>
   16764:	vldr	d0, [sp, #352]	; 0x160
   16768:	bl	4534 <byteswap_double@plt>
   1676c:	vstr	d0, [sp, #352]	; 0x160
   16770:	vldr	d7, [sp, #352]	; 0x160
   16774:	vstr	d7, [sp, #24]
   16778:	vstr	d7, [r4, #48]	; 0x30
   1677c:	ldrd	r0, [sp, #24]
   16780:	ldrd	r2, [r7, #-8]
   16784:	cmp	r1, r3
   16788:	cmpeq	r0, r2
   1678c:	ldrbeq	r3, [r4, #61]	; 0x3d
   16790:	orreq	r3, r3, #1
   16794:	strbeq	r3, [r4, #61]	; 0x3d
   16798:	ldrd	r2, [r7]
   1679c:	cmp	r1, r3
   167a0:	cmpeq	r0, r2
   167a4:	ldrbeq	r3, [r4, #61]	; 0x3d
   167a8:	orreq	r3, r3, #1
   167ac:	strbeq	r3, [r4, #61]	; 0x3d
   167b0:	add	r3, r9, #416	; 0x1a0
   167b4:	ldrd	r2, [r3, #-8]
   167b8:	cmp	r1, r3
   167bc:	cmpeq	r0, r2
   167c0:	ldrbeq	r3, [r4, #61]	; 0x3d
   167c4:	orreq	r3, r3, #1
   167c8:	strbeq	r3, [r4, #61]	; 0x3d
   167cc:	vldr	d7, [sp, #24]
   167d0:	vcmp.f64	d7, d7
   167d4:	vmrs	APSR_nzcv, fpscr
   167d8:	ldrbvs	r3, [r4, #61]	; 0x3d
   167dc:	orrvs	r3, r3, #1
   167e0:	strbvs	r3, [r4, #61]	; 0x3d
   167e4:	ldr	r3, [sp, #40]	; 0x28
   167e8:	add	r3, r3, #1
   167ec:	str	r3, [sp, #40]	; 0x28
   167f0:	add	r6, r6, #72	; 0x48
   167f4:	ldr	r3, [sp, #64]	; 0x40
   167f8:	ldr	r2, [sp, #40]	; 0x28
   167fc:	cmp	r2, r3
   16800:	bcc	16730 <readstat_parse_sav+0xaa4>
   16804:	ldr	r8, [sp, #16]
   16808:	ldr	r3, [r9, #20]
   1680c:	cmp	r3, #0
   16810:	beq	16840 <readstat_parse_sav+0xbb4>
   16814:	ldr	r6, [sp, #64]	; 0x40
   16818:	ldr	r3, [r9, #368]	; 0x170
   1681c:	ldr	r2, [pc, #-2008]	; 1604c <readstat_parse_sav+0x3c0>
   16820:	add	r2, pc, r2
   16824:	mov	r1, #256	; 0x100
   16828:	add	r0, sp, #352	; 0x160
   1682c:	bl	42ac <snprintf@plt>
   16830:	mov	r4, #0
   16834:	add	r7, sp, #352	; 0x160
   16838:	cmp	r6, r4
   1683c:	bgt	168b4 <readstat_parse_sav+0xc28>
   16840:	ldr	r3, [r9, #368]	; 0x170
   16844:	add	r3, r3, #1
   16848:	str	r3, [r9, #368]	; 0x170
   1684c:	ldr	r3, [sp, #32]
   16850:	cmp	r3, #0
   16854:	beq	16860 <readstat_parse_sav+0xbd4>
   16858:	ldr	r0, [sp, #32]
   1685c:	bl	3ee0 <free@plt>
   16860:	cmp	fp, #0
   16864:	beq	16938 <readstat_parse_sav+0xcac>
   16868:	ldr	r3, [sp, #64]	; 0x40
   1686c:	cmp	r3, #0
   16870:	beq	16930 <readstat_parse_sav+0xca4>
   16874:	mov	r5, fp
   16878:	mov	r4, #0
   1687c:	b	1691c <readstat_parse_sav+0xc90>
   16880:	add	r8, r6, #8
   16884:	ldr	r3, [r9, #336]	; 0x150
   16888:	str	r3, [sp]
   1688c:	mov	r3, #8
   16890:	mov	r2, r6
   16894:	mov	r1, #33	; 0x21
   16898:	mov	r0, r8
   1689c:	bl	4264 <readstat_convert@plt>
   168a0:	cmp	r0, #0
   168a4:	streq	r8, [r6, #48]	; 0x30
   168a8:	beq	167e4 <readstat_parse_sav+0xb58>
   168ac:	mov	r8, r0
   168b0:	b	16808 <readstat_parse_sav+0xb7c>
   168b4:	ldr	r3, [r9, #40]	; 0x28
   168b8:	str	r3, [sp, #12]
   168bc:	ldr	r3, [r5, #64]	; 0x40
   168c0:	str	r3, [sp, #8]
   168c4:	add	r3, r5, #56	; 0x38
   168c8:	ldm	r3, {r0, r1}
   168cc:	stm	sp, {r0, r1}
   168d0:	add	r3, r5, #48	; 0x30
   168d4:	ldm	r3, {r2, r3}
   168d8:	ldr	r1, [r9, #20]
   168dc:	mov	r0, r7
   168e0:	blx	r1
   168e4:	add	r5, r5, #72	; 0x48
   168e8:	cmp	r0, #0
   168ec:	bne	16840 <readstat_parse_sav+0xbb4>
   168f0:	add	r4, r4, #1
   168f4:	b	16838 <readstat_parse_sav+0xbac>
   168f8:	mov	r8, #2
   168fc:	b	16868 <readstat_parse_sav+0xbdc>
   16900:	mov	r8, r0
   16904:	b	16868 <readstat_parse_sav+0xbdc>
   16908:	add	r4, r4, #1
   1690c:	add	r5, r5, #72	; 0x48
   16910:	ldr	r3, [sp, #64]	; 0x40
   16914:	cmp	r4, r3
   16918:	bcs	16930 <readstat_parse_sav+0xca4>
   1691c:	ldr	r0, [r5, #64]	; 0x40
   16920:	cmp	r0, #0
   16924:	beq	16908 <readstat_parse_sav+0xc7c>
   16928:	bl	3ee0 <free@plt>
   1692c:	b	16908 <readstat_parse_sav+0xc7c>
   16930:	mov	r0, fp
   16934:	bl	3ee0 <free@plt>
   16938:	cmp	r8, #0
   1693c:	beq	15e4c <readstat_parse_sav+0x1c0>
   16940:	ldr	r4, [sp, #20]
   16944:	mov	r6, sl
   16948:	ldr	sl, [sp, #16]
   1694c:	b	15fa0 <readstat_parse_sav+0x314>
   16950:	ldr	r3, [r9, #4]
   16954:	cmp	r3, #0
   16958:	beq	1699c <readstat_parse_sav+0xd10>
   1695c:	ldr	r5, [r9, #36]	; 0x24
   16960:	ldr	r3, [r5, #12]
   16964:	ldr	r2, [r5, #20]
   16968:	mov	r1, #4
   1696c:	add	r0, sp, #80	; 0x50
   16970:	blx	r3
   16974:	cmp	r0, #3
   16978:	bls	178ac <readstat_parse_sav+0x1c20>
   1697c:	ldrb	r3, [r9, #436]	; 0x1b4
   16980:	tst	r3, #1
   16984:	bne	169bc <readstat_parse_sav+0xd30>
   16988:	mov	r4, #0
   1698c:	add	r6, sp, #96	; 0x60
   16990:	ldr	fp, [pc, #-2376]	; 16050 <readstat_parse_sav+0x3c4>
   16994:	add	r7, sp, #352	; 0x160
   16998:	b	16a2c <readstat_parse_sav+0xda0>
   1699c:	mov	r0, r9
   169a0:	bl	15094 <sav_skip_document_record>
   169a4:	subs	r8, r0, #0
   169a8:	beq	15e4c <readstat_parse_sav+0x1c0>
   169ac:	ldr	r4, [sp, #20]
   169b0:	mov	r6, sl
   169b4:	ldr	sl, [sp, #16]
   169b8:	b	15fa0 <readstat_parse_sav+0x314>
   169bc:	ldr	r0, [sp, #80]	; 0x50
   169c0:	bl	3db4 <byteswap4@plt>
   169c4:	str	r0, [sp, #80]	; 0x50
   169c8:	b	16988 <readstat_parse_sav+0xcfc>
   169cc:	ldr	r3, [r5, #12]
   169d0:	ldr	r2, [r5, #20]
   169d4:	mov	r1, #80	; 0x50
   169d8:	mov	r0, r6
   169dc:	blx	r3
   169e0:	cmp	r0, #79	; 0x4f
   169e4:	ble	178c0 <readstat_parse_sav+0x1c34>
   169e8:	ldr	r3, [r9, #336]	; 0x150
   169ec:	str	r3, [sp]
   169f0:	mov	r3, #80	; 0x50
   169f4:	mov	r2, r6
   169f8:	mov	r1, fp
   169fc:	mov	r0, r7
   16a00:	bl	4264 <readstat_convert@plt>
   16a04:	cmp	r0, #0
   16a08:	bne	172a4 <readstat_parse_sav+0x1618>
   16a0c:	ldr	r3, [r9, #4]
   16a10:	ldr	r2, [r9, #40]	; 0x28
   16a14:	mov	r1, r7
   16a18:	mov	r0, r4
   16a1c:	blx	r3
   16a20:	cmp	r0, #0
   16a24:	bne	178d4 <readstat_parse_sav+0x1c48>
   16a28:	add	r4, r4, #1
   16a2c:	ldr	r3, [sp, #80]	; 0x50
   16a30:	cmp	r4, r3
   16a34:	bcc	169cc <readstat_parse_sav+0xd40>
   16a38:	b	15e4c <readstat_parse_sav+0x1c0>
   16a3c:	ldr	r2, [sp, #36]	; 0x24
   16a40:	ldr	r3, [r2, #12]
   16a44:	ldr	r2, [r2, #20]
   16a48:	mov	r1, #12
   16a4c:	add	r0, sp, #68	; 0x44
   16a50:	blx	r3
   16a54:	cmp	r0, #11
   16a58:	bls	17240 <readstat_parse_sav+0x15b4>
   16a5c:	ldrb	r3, [r9, #436]	; 0x1b4
   16a60:	tst	r3, #1
   16a64:	beq	16a88 <readstat_parse_sav+0xdfc>
   16a68:	mov	r4, #0
   16a6c:	add	r5, sp, #68	; 0x44
   16a70:	ldr	r0, [r5, r4, lsl #2]
   16a74:	bl	3db4 <byteswap4@plt>
   16a78:	str	r0, [r5, r4, lsl #2]
   16a7c:	add	r4, r4, #1
   16a80:	cmp	r4, #3
   16a84:	bne	16a70 <readstat_parse_sav+0xde4>
   16a88:	ldr	r7, [sp, #68]	; 0x44
   16a8c:	ldr	r6, [sp, #72]	; 0x48
   16a90:	ldr	r5, [sp, #76]	; 0x4c
   16a94:	mul	r4, r5, r6
   16a98:	ldr	r3, [sp, #48]	; 0x30
   16a9c:	cmp	r4, r3
   16aa0:	bls	16abc <readstat_parse_sav+0xe30>
   16aa4:	mov	r1, r4
   16aa8:	mov	r0, sl
   16aac:	bl	430c <readstat_realloc@plt>
   16ab0:	subs	sl, r0, #0
   16ab4:	beq	17254 <readstat_parse_sav+0x15c8>
   16ab8:	str	r4, [sp, #48]	; 0x30
   16abc:	cmp	r4, #0
   16ac0:	beq	17268 <readstat_parse_sav+0x15dc>
   16ac4:	ldr	r2, [sp, #36]	; 0x24
   16ac8:	ldr	r3, [r2, #12]
   16acc:	ldr	r2, [r2, #20]
   16ad0:	mov	r1, r4
   16ad4:	mov	r0, sl
   16ad8:	blx	r3
   16adc:	cmp	r4, r0
   16ae0:	bhi	1727c <readstat_parse_sav+0x15f0>
   16ae4:	sub	r7, r7, #4
   16ae8:	cmp	r7, #18
   16aec:	addls	pc, pc, r7, lsl #2
   16af0:	b	15e4c <readstat_parse_sav+0x1c0>
   16af4:	b	16b40 <readstat_parse_sav+0xeb4>
   16af8:	b	15e4c <readstat_parse_sav+0x1c0>
   16afc:	b	15e4c <readstat_parse_sav+0x1c0>
   16b00:	b	15e4c <readstat_parse_sav+0x1c0>
   16b04:	b	15e4c <readstat_parse_sav+0x1c0>
   16b08:	b	15e4c <readstat_parse_sav+0x1c0>
   16b0c:	b	15e4c <readstat_parse_sav+0x1c0>
   16b10:	b	16c60 <readstat_parse_sav+0xfd4>
   16b14:	b	15e4c <readstat_parse_sav+0x1c0>
   16b18:	b	16cd0 <readstat_parse_sav+0x1044>
   16b1c:	b	16cf8 <readstat_parse_sav+0x106c>
   16b20:	b	15e4c <readstat_parse_sav+0x1c0>
   16b24:	b	15e4c <readstat_parse_sav+0x1c0>
   16b28:	b	15e4c <readstat_parse_sav+0x1c0>
   16b2c:	b	15e4c <readstat_parse_sav+0x1c0>
   16b30:	b	15e4c <readstat_parse_sav+0x1c0>
   16b34:	b	15e4c <readstat_parse_sav+0x1c0>
   16b38:	b	16d20 <readstat_parse_sav+0x1094>
   16b3c:	b	170b4 <readstat_parse_sav+0x1428>
   16b40:	cmp	r5, #3
   16b44:	cmpeq	r6, #8
   16b48:	bne	17290 <readstat_parse_sav+0x1604>
   16b4c:	ldrb	r0, [sl]
   16b50:	ldrb	r3, [sl, #1]
   16b54:	orr	r0, r0, r3, lsl #8
   16b58:	ldrb	r3, [sl, #2]
   16b5c:	orr	r0, r0, r3, lsl #16
   16b60:	ldrb	r3, [sl, #3]
   16b64:	orr	r0, r0, r3, lsl #24
   16b68:	ldrb	r1, [sl, #4]
   16b6c:	ldrb	r3, [sl, #5]
   16b70:	orr	r1, r1, r3, lsl #8
   16b74:	ldrb	r3, [sl, #6]
   16b78:	orr	r1, r1, r3, lsl #16
   16b7c:	ldrb	r3, [sl, #7]
   16b80:	orr	r1, r1, r3, lsl #24
   16b84:	ldrb	r6, [sl, #8]
   16b88:	ldrb	r3, [sl, #9]
   16b8c:	orr	r6, r6, r3, lsl #8
   16b90:	ldrb	r3, [sl, #10]
   16b94:	orr	r6, r6, r3, lsl #16
   16b98:	ldrb	r3, [sl, #11]
   16b9c:	orr	r6, r6, r3, lsl #24
   16ba0:	ldrb	r5, [sl, #12]
   16ba4:	ldrb	r3, [sl, #13]
   16ba8:	orr	r5, r5, r3, lsl #8
   16bac:	ldrb	r3, [sl, #14]
   16bb0:	orr	r5, r5, r3, lsl #16
   16bb4:	ldrb	r3, [sl, #15]
   16bb8:	orr	r5, r5, r3, lsl #24
   16bbc:	ldrb	r4, [sl, #16]
   16bc0:	ldrb	r3, [sl, #17]
   16bc4:	orr	r4, r4, r3, lsl #8
   16bc8:	ldrb	r3, [sl, #18]
   16bcc:	orr	r4, r4, r3, lsl #16
   16bd0:	ldrb	r3, [sl, #19]
   16bd4:	orr	r4, r4, r3, lsl #24
   16bd8:	ldrb	r7, [sl, #20]
   16bdc:	ldrb	r3, [sl, #21]
   16be0:	orr	r7, r7, r3, lsl #8
   16be4:	ldrb	r3, [sl, #22]
   16be8:	orr	r7, r7, r3, lsl #16
   16bec:	ldrb	r3, [sl, #23]
   16bf0:	orr	r7, r7, r3, lsl #24
   16bf4:	ldrb	r3, [r9, #436]	; 0x1b4
   16bf8:	tst	r3, #1
   16bfc:	beq	16c04 <readstat_parse_sav+0xf78>
   16c00:	bl	3d9c <byteswap8@plt>
   16c04:	str	r0, [r9, #392]	; 0x188
   16c08:	str	r1, [r9, #396]	; 0x18c
   16c0c:	ldrb	r3, [r9, #436]	; 0x1b4
   16c10:	tst	r3, #1
   16c14:	beq	16c2c <readstat_parse_sav+0xfa0>
   16c18:	mov	r0, r6
   16c1c:	mov	r1, r5
   16c20:	bl	3d9c <byteswap8@plt>
   16c24:	mov	r6, r0
   16c28:	mov	r5, r1
   16c2c:	str	r6, [r9, #408]	; 0x198
   16c30:	str	r5, [r9, #412]	; 0x19c
   16c34:	ldrb	r3, [r9, #436]	; 0x1b4
   16c38:	tst	r3, #1
   16c3c:	beq	16c54 <readstat_parse_sav+0xfc8>
   16c40:	mov	r0, r4
   16c44:	mov	r1, r7
   16c48:	bl	3d9c <byteswap8@plt>
   16c4c:	mov	r4, r0
   16c50:	mov	r7, r1
   16c54:	str	r4, [r9, #400]	; 0x190
   16c58:	str	r7, [r9, #404]	; 0x194
   16c5c:	b	15e4c <readstat_parse_sav+0x1c0>
   16c60:	cmp	r6, #4
   16c64:	bne	178e8 <readstat_parse_sav+0x1c5c>
   16c68:	lsl	r1, r5, #2
   16c6c:	ldr	r0, [r9, #328]	; 0x148
   16c70:	bl	430c <readstat_realloc@plt>
   16c74:	str	r0, [r9, #328]	; 0x148
   16c78:	adds	r3, r5, #0
   16c7c:	movne	r3, #1
   16c80:	cmp	r0, #0
   16c84:	movne	r3, #0
   16c88:	cmp	r3, #0
   16c8c:	bne	178fc <readstat_parse_sav+0x1c70>
   16c90:	str	r5, [r9, #332]	; 0x14c
   16c94:	mov	r7, r5
   16c98:	mov	r4, #0
   16c9c:	cmp	r4, r7
   16ca0:	beq	15e4c <readstat_parse_sav+0x1c0>
   16ca4:	lsl	r5, r4, #2
   16ca8:	ldr	r6, [r9, #328]	; 0x148
   16cac:	ldrb	r3, [r9, #436]	; 0x1b4
   16cb0:	tst	r3, #1
   16cb4:	ldreq	r0, [sl, r4, lsl #2]
   16cb8:	beq	16cc4 <readstat_parse_sav+0x1038>
   16cbc:	ldr	r0, [sl, r4, lsl #2]
   16cc0:	bl	3db4 <byteswap4@plt>
   16cc4:	str	r0, [r6, r5]
   16cc8:	add	r4, r4, #1
   16ccc:	b	16c9c <readstat_parse_sav+0x1010>
   16cd0:	mov	r2, r9
   16cd4:	mov	r1, r5
   16cd8:	mov	r0, sl
   16cdc:	bl	421c <sav_parse_long_variable_names_record@plt>
   16ce0:	subs	r8, r0, #0
   16ce4:	beq	15e4c <readstat_parse_sav+0x1c0>
   16ce8:	ldr	r4, [sp, #20]
   16cec:	mov	r6, sl
   16cf0:	ldr	sl, [sp, #16]
   16cf4:	b	15fa0 <readstat_parse_sav+0x314>
   16cf8:	mov	r2, r9
   16cfc:	mov	r1, r5
   16d00:	mov	r0, sl
   16d04:	bl	4300 <sav_parse_very_long_string_record@plt>
   16d08:	subs	r8, r0, #0
   16d0c:	beq	15e4c <readstat_parse_sav+0x1c0>
   16d10:	ldr	r4, [sp, #20]
   16d14:	mov	r6, sl
   16d18:	ldr	sl, [sp, #16]
   16d1c:	b	15fa0 <readstat_parse_sav+0x314>
   16d20:	ldr	r3, [r9, #20]
   16d24:	cmp	r3, #0
   16d28:	beq	15e4c <readstat_parse_sav+0x1c0>
   16d2c:	cmp	r6, #1
   16d30:	bne	17910 <readstat_parse_sav+0x1c84>
   16d34:	str	sl, [sp, #64]	; 0x40
   16d38:	add	r4, sl, r4
   16d3c:	mov	r3, #0
   16d40:	str	r3, [sp, #40]	; 0x28
   16d44:	str	r3, [sp, #24]
   16d48:	add	r3, sp, #96	; 0x60
   16d4c:	str	r3, [sp, #44]	; 0x2c
   16d50:	ldr	r3, [pc, #-3332]	; 16054 <readstat_parse_sav+0x3c8>
   16d54:	add	r3, pc, r3
   16d58:	str	r3, [sp, #52]	; 0x34
   16d5c:	add	fp, sp, #80	; 0x50
   16d60:	str	sl, [sp, #32]
   16d64:	ldr	r8, [sp, #64]	; 0x40
   16d68:	cmp	r4, r8
   16d6c:	bhi	16d88 <readstat_parse_sav+0x10fc>
   16d70:	ldr	sl, [sp, #32]
   16d74:	ldr	r3, [sp, #16]
   16d78:	cmp	r4, r8
   16d7c:	movne	r3, #5
   16d80:	mov	r8, r3
   16d84:	b	16ff0 <readstat_parse_sav+0x1364>
   16d88:	mov	r2, #256	; 0x100
   16d8c:	mov	r1, #0
   16d90:	ldr	r0, [sp, #44]	; 0x2c
   16d94:	bl	42d0 <memset@plt>
   16d98:	str	r9, [sp]
   16d9c:	sub	r3, r4, r8
   16da0:	add	r2, sp, #64	; 0x40
   16da4:	ldr	r1, [pc, #-3412]	; 16058 <readstat_parse_sav+0x3cc>
   16da8:	add	r0, sp, #352	; 0x160
   16dac:	bl	15114 <sav_read_pascal_string>
   16db0:	cmp	r0, #0
   16db4:	bne	17090 <readstat_parse_sav+0x1404>
   16db8:	ldr	r8, [r9, #340]	; 0x154
   16dbc:	mov	r5, #0
   16dc0:	add	r7, sp, #352	; 0x160
   16dc4:	b	16dec <readstat_parse_sav+0x1160>
   16dc8:	ldr	r3, [r9, #44]	; 0x2c
   16dcc:	ldr	r6, [r3, r5, lsl #2]
   16dd0:	add	r1, r6, #196	; 0xc4
   16dd4:	mov	r0, r7
   16dd8:	bl	3e20 <strcmp@plt>
   16ddc:	cmp	r0, #0
   16de0:	beq	16df8 <readstat_parse_sav+0x116c>
   16de4:	ldr	r3, [r6, #48]	; 0x30
   16de8:	add	r5, r5, r3
   16dec:	cmp	r5, r8
   16df0:	bcc	16dc8 <readstat_parse_sav+0x113c>
   16df4:	b	16e18 <readstat_parse_sav+0x118c>
   16df8:	ldr	r3, [r9, #368]	; 0x170
   16dfc:	add	r2, r3, #1
   16e00:	str	r2, [r9, #368]	; 0x170
   16e04:	str	r3, [r6, #4]
   16e08:	ldr	r2, [sp, #52]	; 0x34
   16e0c:	mov	r1, #256	; 0x100
   16e10:	ldr	r0, [sp, #44]	; 0x2c
   16e14:	bl	42ac <snprintf@plt>
   16e18:	ldrb	r3, [sp, #96]	; 0x60
   16e1c:	cmp	r3, #0
   16e20:	beq	17078 <readstat_parse_sav+0x13ec>
   16e24:	ldr	r3, [sp, #64]	; 0x40
   16e28:	add	r2, r3, #4
   16e2c:	str	r2, [sp, #64]	; 0x40
   16e30:	add	r2, r3, #8
   16e34:	cmp	r4, r2
   16e38:	bcc	17084 <readstat_parse_sav+0x13f8>
   16e3c:	ldr	sl, [r3, #4]
   16e40:	ldrb	r3, [r9, #436]	; 0x1b4
   16e44:	tst	r3, #1
   16e48:	beq	16e58 <readstat_parse_sav+0x11cc>
   16e4c:	mov	r0, sl
   16e50:	bl	3db4 <byteswap4@plt>
   16e54:	mov	sl, r0
   16e58:	ldr	r3, [sp, #64]	; 0x40
   16e5c:	add	r3, r3, #4
   16e60:	str	r3, [sp, #64]	; 0x40
   16e64:	mov	r7, #0
   16e68:	mov	r6, r7
   16e6c:	cmp	r7, sl
   16e70:	beq	16d64 <readstat_parse_sav+0x10d8>
   16e74:	ldr	r3, [sp, #64]	; 0x40
   16e78:	add	r2, r3, #4
   16e7c:	cmp	r4, r2
   16e80:	bcc	16fe8 <readstat_parse_sav+0x135c>
   16e84:	ldr	r5, [r3]
   16e88:	ldrb	r3, [r9, #436]	; 0x1b4
   16e8c:	tst	r3, #1
   16e90:	beq	16ea0 <readstat_parse_sav+0x1214>
   16e94:	mov	r0, r5
   16e98:	bl	3db4 <byteswap4@plt>
   16e9c:	mov	r5, r0
   16ea0:	ldr	r3, [sp, #64]	; 0x40
   16ea4:	add	r3, r3, #4
   16ea8:	str	r3, [sp, #64]	; 0x40
   16eac:	lsl	r8, r5, #2
   16eb0:	add	r8, r8, #1
   16eb4:	mov	r1, r8
   16eb8:	ldr	r0, [sp, #24]
   16ebc:	bl	430c <readstat_realloc@plt>
   16ec0:	subs	r3, r0, #0
   16ec4:	mov	r0, r3
   16ec8:	str	r3, [sp, #24]
   16ecc:	beq	17030 <readstat_parse_sav+0x13a4>
   16ed0:	ldr	r2, [sp, #64]	; 0x40
   16ed4:	add	r3, r2, r5
   16ed8:	cmp	r4, r3
   16edc:	bcc	1703c <readstat_parse_sav+0x13b0>
   16ee0:	ldr	r3, [r9, #336]	; 0x150
   16ee4:	str	r3, [sp]
   16ee8:	mov	r3, r5
   16eec:	mov	r1, r8
   16ef0:	bl	4264 <readstat_convert@plt>
   16ef4:	cmp	r0, #0
   16ef8:	bne	1709c <readstat_parse_sav+0x1410>
   16efc:	ldr	r3, [sp, #64]	; 0x40
   16f00:	add	r5, r3, r5
   16f04:	str	r5, [sp, #64]	; 0x40
   16f08:	add	r3, r5, #4
   16f0c:	cmp	r4, r3
   16f10:	bcc	17048 <readstat_parse_sav+0x13bc>
   16f14:	ldr	r5, [r5]
   16f18:	ldrb	r3, [r9, #436]	; 0x1b4
   16f1c:	tst	r3, #1
   16f20:	beq	16f30 <readstat_parse_sav+0x12a4>
   16f24:	mov	r0, r5
   16f28:	bl	3db4 <byteswap4@plt>
   16f2c:	mov	r5, r0
   16f30:	ldr	r3, [sp, #64]	; 0x40
   16f34:	add	r3, r3, #4
   16f38:	str	r3, [sp, #64]	; 0x40
   16f3c:	lsl	r8, r5, #2
   16f40:	add	r8, r8, #1
   16f44:	mov	r1, r8
   16f48:	ldr	r0, [sp, #40]	; 0x28
   16f4c:	bl	430c <readstat_realloc@plt>
   16f50:	subs	r3, r0, #0
   16f54:	mov	r0, r3
   16f58:	str	r3, [sp, #40]	; 0x28
   16f5c:	beq	17054 <readstat_parse_sav+0x13c8>
   16f60:	ldr	r2, [sp, #64]	; 0x40
   16f64:	add	r3, r2, r5
   16f68:	cmp	r4, r3
   16f6c:	bcc	17060 <readstat_parse_sav+0x13d4>
   16f70:	ldr	r3, [r9, #336]	; 0x150
   16f74:	str	r3, [sp]
   16f78:	mov	r3, r5
   16f7c:	mov	r1, r8
   16f80:	mov	r8, r0
   16f84:	bl	4264 <readstat_convert@plt>
   16f88:	cmp	r0, #0
   16f8c:	bne	170a8 <readstat_parse_sav+0x141c>
   16f90:	ldr	r3, [sp, #64]	; 0x40
   16f94:	add	r5, r3, r5
   16f98:	str	r5, [sp, #64]	; 0x40
   16f9c:	str	r6, [fp, #4]
   16fa0:	str	r6, [fp, #8]
   16fa4:	str	r6, [fp, #12]
   16fa8:	ldr	r3, [sp, #24]
   16fac:	str	r3, [sp, #80]	; 0x50
   16fb0:	ldr	r3, [r9, #40]	; 0x28
   16fb4:	str	r3, [sp, #12]
   16fb8:	str	r8, [sp, #8]
   16fbc:	add	r3, sp, #88	; 0x58
   16fc0:	ldm	r3, {r0, r1}
   16fc4:	stm	sp, {r0, r1}
   16fc8:	ldm	fp, {r2, r3}
   16fcc:	ldr	r1, [r9, #20]
   16fd0:	ldr	r0, [sp, #44]	; 0x2c
   16fd4:	blx	r1
   16fd8:	cmp	r0, #0
   16fdc:	bne	1706c <readstat_parse_sav+0x13e0>
   16fe0:	add	r7, r7, #1
   16fe4:	b	16e6c <readstat_parse_sav+0x11e0>
   16fe8:	ldr	sl, [sp, #32]
   16fec:	mov	r8, #5
   16ff0:	ldr	r3, [sp, #24]
   16ff4:	cmp	r3, #0
   16ff8:	beq	17004 <readstat_parse_sav+0x1378>
   16ffc:	mov	r0, r3
   17000:	bl	3ee0 <free@plt>
   17004:	ldr	r3, [sp, #40]	; 0x28
   17008:	cmp	r3, #0
   1700c:	beq	17018 <readstat_parse_sav+0x138c>
   17010:	mov	r0, r3
   17014:	bl	3ee0 <free@plt>
   17018:	cmp	r8, #0
   1701c:	beq	15e4c <readstat_parse_sav+0x1c0>
   17020:	ldr	r4, [sp, #20]
   17024:	mov	r6, sl
   17028:	ldr	sl, [sp, #16]
   1702c:	b	15fa0 <readstat_parse_sav+0x314>
   17030:	ldr	sl, [sp, #32]
   17034:	mov	r8, #3
   17038:	b	16ff0 <readstat_parse_sav+0x1364>
   1703c:	ldr	sl, [sp, #32]
   17040:	mov	r8, #5
   17044:	b	16ff0 <readstat_parse_sav+0x1364>
   17048:	ldr	sl, [sp, #32]
   1704c:	mov	r8, #5
   17050:	b	16ff0 <readstat_parse_sav+0x1364>
   17054:	ldr	sl, [sp, #32]
   17058:	mov	r8, #3
   1705c:	b	16ff0 <readstat_parse_sav+0x1364>
   17060:	ldr	sl, [sp, #32]
   17064:	mov	r8, #5
   17068:	b	16ff0 <readstat_parse_sav+0x1364>
   1706c:	ldr	sl, [sp, #32]
   17070:	mov	r8, #4
   17074:	b	16ff0 <readstat_parse_sav+0x1364>
   17078:	ldr	sl, [sp, #32]
   1707c:	mov	r8, #5
   17080:	b	16ff0 <readstat_parse_sav+0x1364>
   17084:	ldr	sl, [sp, #32]
   17088:	mov	r8, #5
   1708c:	b	16ff0 <readstat_parse_sav+0x1364>
   17090:	ldr	sl, [sp, #32]
   17094:	mov	r8, r0
   17098:	b	16ff0 <readstat_parse_sav+0x1364>
   1709c:	ldr	sl, [sp, #32]
   170a0:	mov	r8, r0
   170a4:	b	16ff0 <readstat_parse_sav+0x1364>
   170a8:	ldr	sl, [sp, #32]
   170ac:	mov	r8, r0
   170b0:	b	16ff0 <readstat_parse_sav+0x1364>
   170b4:	cmp	r6, #1
   170b8:	bne	17924 <readstat_parse_sav+0x1c98>
   170bc:	add	r3, sp, #856	; 0x358
   170c0:	str	sl, [r3, #-760]!	; 0xfffffd08
   170c4:	str	r3, [sp, #24]
   170c8:	add	fp, sl, r4
   170cc:	add	r3, sp, #352	; 0x160
   170d0:	str	r3, [sp, #32]
   170d4:	ldr	r3, [sp, #96]	; 0x60
   170d8:	cmp	fp, r3
   170dc:	bhi	170f8 <readstat_parse_sav+0x146c>
   170e0:	beq	15e4c <readstat_parse_sav+0x1c0>
   170e4:	ldr	r4, [sp, #20]
   170e8:	mov	r6, sl
   170ec:	ldr	sl, [sp, #16]
   170f0:	mov	r8, #5
   170f4:	b	15fa0 <readstat_parse_sav+0x314>
   170f8:	str	r9, [sp]
   170fc:	sub	r3, fp, r3
   17100:	ldr	r2, [sp, #24]
   17104:	ldr	r1, [pc, #2356]	; 17a40 <readstat_parse_sav+0x1db4>
   17108:	ldr	r0, [sp, #32]
   1710c:	bl	15114 <sav_read_pascal_string>
   17110:	cmp	r0, #0
   17114:	bne	172b8 <readstat_parse_sav+0x162c>
   17118:	ldr	r6, [sp, #96]	; 0x60
   1711c:	cmp	fp, r6
   17120:	beq	17938 <readstat_parse_sav+0x1cac>
   17124:	add	r3, r6, #1
   17128:	str	r3, [sp, #96]	; 0x60
   1712c:	ldrb	r8, [r6]
   17130:	sub	r3, r8, #1
   17134:	uxtb	r3, r3
   17138:	cmp	r3, #2
   1713c:	bhi	1794c <readstat_parse_sav+0x1cc0>
   17140:	ldr	r7, [r9, #340]	; 0x154
   17144:	mov	r5, #0
   17148:	b	17170 <readstat_parse_sav+0x14e4>
   1714c:	ldr	r3, [r9, #44]	; 0x2c
   17150:	ldr	r4, [r3, r5, lsl #2]
   17154:	add	r1, r4, #196	; 0xc4
   17158:	ldr	r0, [sp, #32]
   1715c:	bl	3e20 <strcmp@plt>
   17160:	cmp	r0, #0
   17164:	beq	1717c <readstat_parse_sav+0x14f0>
   17168:	ldr	r3, [r4, #48]	; 0x30
   1716c:	add	r5, r5, r3
   17170:	cmp	r5, r7
   17174:	bcc	1714c <readstat_parse_sav+0x14c0>
   17178:	b	1720c <readstat_parse_sav+0x1580>
   1717c:	str	r8, [r4, #52]	; 0x34
   17180:	add	r3, r6, #5
   17184:	cmp	fp, r3
   17188:	bcc	17960 <readstat_parse_sav+0x1cd4>
   1718c:	ldr	r6, [r6, #1]
   17190:	ldrb	r3, [r9, #436]	; 0x1b4
   17194:	tst	r3, #1
   17198:	beq	171a8 <readstat_parse_sav+0x151c>
   1719c:	mov	r0, r6
   171a0:	bl	3db4 <byteswap4@plt>
   171a4:	mov	r6, r0
   171a8:	ldr	r3, [sp, #96]	; 0x60
   171ac:	add	r3, r3, #4
   171b0:	str	r3, [sp, #96]	; 0x60
   171b4:	add	r4, r4, #88	; 0x58
   171b8:	mov	r7, #0
   171bc:	b	17204 <readstat_parse_sav+0x1578>
   171c0:	ldr	r2, [sp, #96]	; 0x60
   171c4:	add	r3, r2, r6
   171c8:	cmp	fp, r3
   171cc:	bcc	17974 <readstat_parse_sav+0x1ce8>
   171d0:	ldr	r3, [r9, #336]	; 0x150
   171d4:	str	r3, [sp]
   171d8:	mov	r3, r6
   171dc:	mov	r1, #33	; 0x21
   171e0:	mov	r0, r4
   171e4:	bl	4264 <readstat_convert@plt>
   171e8:	add	r4, r4, #33	; 0x21
   171ec:	cmp	r0, #0
   171f0:	bne	172cc <readstat_parse_sav+0x1640>
   171f4:	ldr	r3, [sp, #96]	; 0x60
   171f8:	add	r3, r3, r6
   171fc:	str	r3, [sp, #96]	; 0x60
   17200:	add	r7, r7, #1
   17204:	cmp	r7, r8
   17208:	bcc	171c0 <readstat_parse_sav+0x1534>
   1720c:	ldr	r3, [r9, #340]	; 0x154
   17210:	cmp	r5, r3
   17214:	bne	170d4 <readstat_parse_sav+0x1448>
   17218:	ldr	r4, [sp, #20]
   1721c:	mov	r6, sl
   17220:	ldr	sl, [sp, #16]
   17224:	mov	r8, #5
   17228:	b	15fa0 <readstat_parse_sav+0x314>
   1722c:	ldr	r4, [sp, #20]
   17230:	mov	r6, sl
   17234:	ldr	sl, [sp, #16]
   17238:	mov	r8, #2
   1723c:	b	15fa0 <readstat_parse_sav+0x314>
   17240:	ldr	r4, [sp, #20]
   17244:	mov	r6, sl
   17248:	ldr	sl, [sp, #16]
   1724c:	mov	r8, #2
   17250:	b	15fa0 <readstat_parse_sav+0x314>
   17254:	ldr	r4, [sp, #20]
   17258:	mov	r6, sl
   1725c:	ldr	sl, [sp, #16]
   17260:	mov	r8, #3
   17264:	b	15fa0 <readstat_parse_sav+0x314>
   17268:	ldr	r4, [sp, #20]
   1726c:	mov	r6, sl
   17270:	ldr	sl, [sp, #16]
   17274:	mov	r8, #5
   17278:	b	15fa0 <readstat_parse_sav+0x314>
   1727c:	ldr	r4, [sp, #20]
   17280:	mov	r6, sl
   17284:	ldr	sl, [sp, #16]
   17288:	mov	r8, #5
   1728c:	b	15fa0 <readstat_parse_sav+0x314>
   17290:	ldr	r4, [sp, #20]
   17294:	mov	r6, sl
   17298:	ldr	sl, [sp, #16]
   1729c:	mov	r8, #5
   172a0:	b	15fa0 <readstat_parse_sav+0x314>
   172a4:	ldr	r4, [sp, #20]
   172a8:	mov	r6, sl
   172ac:	mov	r8, r0
   172b0:	ldr	sl, [sp, #16]
   172b4:	b	15fa0 <readstat_parse_sav+0x314>
   172b8:	ldr	r4, [sp, #20]
   172bc:	mov	r6, sl
   172c0:	mov	r8, r0
   172c4:	ldr	sl, [sp, #16]
   172c8:	b	15fa0 <readstat_parse_sav+0x314>
   172cc:	ldr	r4, [sp, #20]
   172d0:	mov	r6, sl
   172d4:	mov	r8, r0
   172d8:	ldr	sl, [sp, #16]
   172dc:	b	15fa0 <readstat_parse_sav+0x314>
   172e0:	ldr	r3, [r9, #348]	; 0x15c
   172e4:	add	r2, r3, #1
   172e8:	str	r2, [r9, #348]	; 0x15c
   172ec:	str	r3, [r6, #8]
   172f0:	ldr	r3, [r6, #48]	; 0x30
   172f4:	add	r5, r5, r3
   172f8:	ldr	r3, [r9, #340]	; 0x154
   172fc:	cmp	r5, r3
   17300:	bge	1732c <readstat_parse_sav+0x16a0>
   17304:	ldr	r3, [r9, #44]	; 0x2c
   17308:	ldr	r6, [r3, r5, lsl #2]
   1730c:	ldr	r0, [r6, #20]
   17310:	cmp	r0, #0
   17314:	beq	172e0 <readstat_parse_sav+0x1654>
   17318:	mov	r1, r7
   1731c:	add	r0, r0, #251	; 0xfb
   17320:	bl	23d8c <__udivsi3>
   17324:	str	r0, [r6, #48]	; 0x30
   17328:	b	172e0 <readstat_parse_sav+0x1654>
   1732c:	mov	r1, #4
   17330:	ldr	r0, [r9, #348]	; 0x15c
   17334:	bl	3fe8 <readstat_calloc@plt>
   17338:	str	r0, [r9, #52]	; 0x34
   1733c:	ldr	r5, [r9, #348]	; 0x15c
   17340:	cmp	r5, #0
   17344:	beq	179ac <readstat_parse_sav+0x1d20>
   17348:	ldr	r3, [r9]
   1734c:	cmp	r3, #0
   17350:	beq	1740c <readstat_parse_sav+0x1780>
   17354:	mov	r2, #56	; 0x38
   17358:	mov	r1, #0
   1735c:	add	r0, sp, #352	; 0x160
   17360:	bl	42d0 <memset@plt>
   17364:	ldr	r2, [r9, #352]	; 0x160
   17368:	cmn	r2, #1
   1736c:	ldrne	r2, [r9, #356]	; 0x164
   17370:	add	r1, sp, #360	; 0x168
   17374:	asr	r3, r2, #31
   17378:	strd	r2, [r1, #-8]
   1737c:	mov	r2, r5
   17380:	asr	r3, r5, #31
   17384:	strd	r2, [r1]
   17388:	ldr	r3, [r9, #324]	; 0x144
   1738c:	str	r3, [sp, #368]	; 0x170
   17390:	str	r3, [sp, #372]	; 0x174
   17394:	ldr	r2, [r9, #424]	; 0x1a8
   17398:	asr	r3, r2, #31
   1739c:	strd	r2, [r1, #16]
   173a0:	ldr	r3, [r9, #428]	; 0x1ac
   173a4:	str	r3, [sp, #384]	; 0x180
   173a8:	ldr	r3, [r9, #432]	; 0x1b0
   173ac:	str	r3, [sp, #388]	; 0x184
   173b0:	ldr	r3, [r9, #56]	; 0x38
   173b4:	str	r3, [sp, #400]	; 0x190
   173b8:	add	r5, r9, #64	; 0x40
   173bc:	ldr	r3, [r9, #336]	; 0x150
   173c0:	str	r3, [sp]
   173c4:	mov	r3, #64	; 0x40
   173c8:	add	r2, sp, #788	; 0x314
   173cc:	add	r2, r2, #1
   173d0:	ldr	r1, [pc, #1640]	; 17a40 <readstat_parse_sav+0x1db4>
   173d4:	mov	r0, r5
   173d8:	bl	4264 <readstat_convert@plt>
   173dc:	cmp	r0, #0
   173e0:	beq	173ec <readstat_parse_sav+0x1760>
   173e4:	mov	sl, r0
   173e8:	b	15db0 <readstat_parse_sav+0x124>
   173ec:	str	r5, [sp, #396]	; 0x18c
   173f0:	ldr	r3, [r9]
   173f4:	ldr	r1, [r9, #40]	; 0x28
   173f8:	add	r0, sp, #352	; 0x160
   173fc:	blx	r3
   17400:	cmp	r0, #0
   17404:	movne	r0, #4
   17408:	bne	173e4 <readstat_parse_sav+0x1758>
   1740c:	ldr	r3, [r9, #328]	; 0x148
   17410:	cmp	r3, #0
   17414:	beq	174bc <readstat_parse_sav+0x1830>
   17418:	ldr	r0, [r9, #332]	; 0x14c
   1741c:	ldr	r1, [r9, #340]	; 0x154
   17420:	cmp	r0, r1, lsl #1
   17424:	beq	17438 <readstat_parse_sav+0x17ac>
   17428:	add	r3, r1, r1, lsl #1
   1742c:	cmp	r0, r3
   17430:	movne	sl, #5
   17434:	bne	17558 <readstat_parse_sav+0x18cc>
   17438:	cmp	r1, #0
   1743c:	ble	174bc <readstat_parse_sav+0x1830>
   17440:	bl	23f98 <__divsi3>
   17444:	cmp	r0, #3
   17448:	movne	fp, #0
   1744c:	moveq	fp, #1
   17450:	mov	r5, #0
   17454:	add	r3, fp, #2
   17458:	str	r3, [sp, #16]
   1745c:	b	174b0 <readstat_parse_sav+0x1824>
   17460:	ldr	r3, [r9, #44]	; 0x2c
   17464:	ldr	r6, [r3, r5, lsl #2]
   17468:	ldr	r3, [sp, #16]
   1746c:	mul	r8, r5, r3
   17470:	add	r7, r8, #1
   17474:	ldr	r3, [r9, #328]	; 0x148
   17478:	ldr	r0, [r3, r8, lsl #2]
   1747c:	bl	43d8 <spss_measure_to_readstat_measure@plt>
   17480:	str	r0, [r6, #268]	; 0x10c
   17484:	cmp	fp, #0
   17488:	ldrne	r3, [r9, #328]	; 0x148
   1748c:	ldrne	r3, [r3, r7, lsl #2]
   17490:	strne	r3, [r6, #276]	; 0x114
   17494:	addne	r7, r8, #2
   17498:	ldr	r3, [r9, #328]	; 0x148
   1749c:	ldr	r0, [r3, r7, lsl #2]
   174a0:	bl	43b4 <spss_alignment_to_readstat_alignment@plt>
   174a4:	str	r0, [r6, #272]	; 0x110
   174a8:	ldr	r3, [r6, #48]	; 0x30
   174ac:	add	r5, r5, r3
   174b0:	ldr	r3, [r9, #340]	; 0x154
   174b4:	cmp	r5, r3
   174b8:	blt	17460 <readstat_parse_sav+0x17d4>
   174bc:	ldr	r3, [r9, #8]
   174c0:	cmp	r3, #0
   174c4:	beq	1759c <readstat_parse_sav+0x1910>
   174c8:	mov	r7, #0
   174cc:	mov	r6, r7
   174d0:	ldr	r3, [pc, #1388]	; 17a44 <readstat_parse_sav+0x1db8>
   174d4:	add	r3, pc, r3
   174d8:	str	r3, [sp, #20]
   174dc:	add	r8, sp, #352	; 0x160
   174e0:	str	r4, [sp, #16]
   174e4:	b	1758c <readstat_parse_sav+0x1900>
   174e8:	ldr	r3, [r9, #44]	; 0x2c
   174ec:	ldr	r4, [r3, r6, lsl #2]
   174f0:	ldr	fp, [r4, #8]
   174f4:	ldr	r5, [r9, #52]	; 0x34
   174f8:	ldr	r2, [r9, #336]	; 0x150
   174fc:	mov	r1, r7
   17500:	mov	r0, r4
   17504:	bl	42a0 <spss_init_variable_for_info@plt>
   17508:	str	r0, [r5, fp, lsl #2]
   1750c:	ldr	r3, [r4, #4]
   17510:	ldr	r2, [sp, #20]
   17514:	mov	r1, #256	; 0x100
   17518:	mov	r0, r8
   1751c:	bl	42ac <snprintf@plt>
   17520:	ldr	r5, [r9, #8]
   17524:	ldr	r0, [r4, #8]
   17528:	ldr	r3, [r9, #52]	; 0x34
   1752c:	ldr	r1, [r3, r0, lsl #2]
   17530:	ldr	r3, [r4, #4]
   17534:	cmn	r3, #1
   17538:	movne	r2, r8
   1753c:	moveq	r2, #0
   17540:	ldr	r3, [r9, #40]	; 0x28
   17544:	blx	r5
   17548:	cmp	r0, #1
   1754c:	bne	17568 <readstat_parse_sav+0x18dc>
   17550:	ldr	r4, [sp, #16]
   17554:	mov	sl, #4
   17558:	ldr	r3, [r4, #4]
   1755c:	ldr	r0, [r4, #20]
   17560:	blx	r3
   17564:	b	15dbc <readstat_parse_sav+0x130>
   17568:	cmp	r0, #2
   1756c:	ldreq	r2, [r4, #8]
   17570:	ldreq	r3, [r9, #52]	; 0x34
   17574:	ldreq	r3, [r3, r2, lsl #2]
   17578:	moveq	r2, #1
   1757c:	streq	r2, [r3, #2144]	; 0x860
   17580:	addne	r7, r7, #1
   17584:	ldr	r3, [r4, #48]	; 0x30
   17588:	add	r6, r6, r3
   1758c:	ldr	r3, [r9, #340]	; 0x154
   17590:	cmp	r6, r3
   17594:	blt	174e8 <readstat_parse_sav+0x185c>
   17598:	ldr	r4, [sp, #16]
   1759c:	ldr	r5, [r9, #12]
   175a0:	cmp	r5, #0
   175a4:	beq	175fc <readstat_parse_sav+0x1970>
   175a8:	ldr	r3, [r9, #372]	; 0x174
   175ac:	cmp	r3, #0
   175b0:	blt	175fc <readstat_parse_sav+0x1970>
   175b4:	ldr	r0, [r9, #340]	; 0x154
   175b8:	mov	r2, #0
   175bc:	sub	r3, r3, #1
   175c0:	cmp	r2, r0
   175c4:	bge	175fc <readstat_parse_sav+0x1970>
   175c8:	ldr	r1, [r9, #44]	; 0x2c
   175cc:	ldr	r1, [r1, r2, lsl #2]
   175d0:	ldr	ip, [r1, #12]
   175d4:	cmp	ip, r3
   175d8:	bne	17618 <readstat_parse_sav+0x198c>
   175dc:	ldr	r2, [r1, #8]
   175e0:	ldr	r3, [r9, #52]	; 0x34
   175e4:	ldr	r1, [r9, #40]	; 0x28
   175e8:	ldr	r0, [r3, r2, lsl #2]
   175ec:	blx	r5
   175f0:	cmp	r0, #0
   175f4:	movne	sl, #4
   175f8:	bne	17558 <readstat_parse_sav+0x18cc>
   175fc:	ldr	r3, [r9, #16]
   17600:	cmp	r3, #0
   17604:	beq	15db0 <readstat_parse_sav+0x124>
   17608:	ldr	r0, [r9, #340]	; 0x154
   1760c:	mov	r3, #0
   17610:	mov	r5, #256	; 0x100
   17614:	b	17640 <readstat_parse_sav+0x19b4>
   17618:	ldr	r1, [r1, #48]	; 0x30
   1761c:	add	r2, r2, r1
   17620:	b	175c0 <readstat_parse_sav+0x1934>
   17624:	ldr	r2, [r9, #44]	; 0x2c
   17628:	ldr	r2, [r2, r3, lsl #2]
   1762c:	ldr	r1, [r2, #20]
   17630:	cmp	r5, r1
   17634:	movcc	r5, r1
   17638:	ldr	r2, [r2, #48]	; 0x30
   1763c:	add	r3, r3, r2
   17640:	cmp	r3, r0
   17644:	blt	17624 <readstat_parse_sav+0x1998>
   17648:	add	r0, r5, #7
   1764c:	str	r0, [r9, #380]	; 0x17c
   17650:	bl	4258 <readstat_malloc@plt>
   17654:	str	r0, [r9, #376]	; 0x178
   17658:	add	r0, r5, #2
   1765c:	lsl	r0, r0, #2
   17660:	str	r0, [r9, #388]	; 0x184
   17664:	bl	4258 <readstat_malloc@plt>
   17668:	str	r0, [r9, #384]	; 0x180
   1766c:	ldr	r3, [r9, #376]	; 0x178
   17670:	cmp	r0, #0
   17674:	cmpne	r3, #0
   17678:	moveq	sl, #3
   1767c:	beq	15db0 <readstat_parse_sav+0x124>
   17680:	ldr	r3, [r9, #428]	; 0x1ac
   17684:	cmp	r3, #1
   17688:	bne	176cc <readstat_parse_sav+0x1a40>
   1768c:	ldr	r1, [pc, #948]	; 17a48 <readstat_parse_sav+0x1dbc>
   17690:	add	r1, pc, r1
   17694:	mov	r0, r9
   17698:	bl	156fc <sav_read_compressed_data>
   1769c:	mov	r5, r0
   176a0:	cmp	r5, #0
   176a4:	movne	sl, r5
   176a8:	bne	15db0 <readstat_parse_sav+0x124>
   176ac:	ldr	r3, [r9, #352]	; 0x160
   176b0:	cmn	r3, #1
   176b4:	beq	15db0 <readstat_parse_sav+0x124>
   176b8:	ldr	r2, [r9, #364]	; 0x16c
   176bc:	ldr	r3, [r9, #356]	; 0x164
   176c0:	cmp	r2, r3
   176c4:	movne	sl, #9
   176c8:	b	15db0 <readstat_parse_sav+0x124>
   176cc:	cmp	r3, #2
   176d0:	bne	176ec <readstat_parse_sav+0x1a60>
   176d4:	ldr	r1, [pc, #880]	; 17a4c <readstat_parse_sav+0x1dc0>
   176d8:	add	r1, pc, r1
   176dc:	mov	r0, r9
   176e0:	bl	44ec <zsav_read_compressed_data@plt>
   176e4:	mov	r5, r0
   176e8:	b	176a0 <readstat_parse_sav+0x1a14>
   176ec:	ldr	r8, [r9, #36]	; 0x24
   176f0:	ldr	r6, [r9, #344]	; 0x158
   176f4:	lsl	r6, r6, #3
   176f8:	mov	r0, r6
   176fc:	bl	4258 <readstat_malloc@plt>
   17700:	mov	r7, r0
   17704:	ldr	r0, [r9, #360]	; 0x168
   17708:	cmp	r0, #0
   1770c:	beq	1778c <readstat_parse_sav+0x1b00>
   17710:	ldr	r3, [r8, #8]
   17714:	ldr	r2, [r8, #20]
   17718:	mov	r1, #1
   1771c:	mul	r0, r6, r0
   17720:	blx	r3
   17724:	cmn	r0, #1
   17728:	movne	r3, #0
   1772c:	strne	r3, [r9, #360]	; 0x168
   17730:	bne	1778c <readstat_parse_sav+0x1b00>
   17734:	mov	r5, #15
   17738:	cmp	r7, #0
   1773c:	moveq	sl, r5
   17740:	bne	17990 <readstat_parse_sav+0x1d04>
   17744:	b	15db0 <readstat_parse_sav+0x124>
   17748:	mov	r0, r9
   1774c:	bl	15070 <sav_update_progress>
   17750:	subs	r5, r0, #0
   17754:	bne	17738 <readstat_parse_sav+0x1aac>
   17758:	ldr	r3, [r8, #12]
   1775c:	ldr	r2, [r8, #20]
   17760:	mov	r1, r6
   17764:	mov	r0, r7
   17768:	blx	r3
   1776c:	cmp	r6, r0
   17770:	bne	17988 <readstat_parse_sav+0x1cfc>
   17774:	mov	r2, r9
   17778:	mov	r1, r6
   1777c:	mov	r0, r7
   17780:	bl	1589c <sav_process_row>
   17784:	subs	r5, r0, #0
   17788:	bne	17738 <readstat_parse_sav+0x1aac>
   1778c:	ldr	r3, [r9, #356]	; 0x164
   17790:	cmn	r3, #1
   17794:	beq	17748 <readstat_parse_sav+0x1abc>
   17798:	ldr	r2, [r9, #364]	; 0x16c
   1779c:	cmp	r3, r2
   177a0:	bgt	17748 <readstat_parse_sav+0x1abc>
   177a4:	cmp	r7, #0
   177a8:	movne	r5, sl
   177ac:	bne	17990 <readstat_parse_sav+0x1d04>
   177b0:	b	176ac <readstat_parse_sav+0x1a20>
   177b4:	ldr	r4, [sp, #20]
   177b8:	mov	r6, sl
   177bc:	ldr	sl, [sp, #16]
   177c0:	mov	r8, #3
   177c4:	mov	fp, #0
   177c8:	b	177e0 <readstat_parse_sav+0x1b54>
   177cc:	ldr	r4, [sp, #20]
   177d0:	mov	r6, sl
   177d4:	ldr	sl, [sp, #16]
   177d8:	mov	r8, #2
   177dc:	mov	fp, #0
   177e0:	mov	r0, fp
   177e4:	bl	4444 <spss_varinfo_free@plt>
   177e8:	b	15fa0 <readstat_parse_sav+0x314>
   177ec:	ldr	r4, [sp, #20]
   177f0:	mov	r6, sl
   177f4:	ldr	sl, [sp, #16]
   177f8:	mov	r8, #3
   177fc:	b	177e0 <readstat_parse_sav+0x1b54>
   17800:	ldr	r3, [r4, #12]
   17804:	ldr	r2, [r4, #20]
   17808:	ldr	r1, [sp, #68]	; 0x44
   1780c:	lsl	r1, r1, #2
   17810:	ldr	r0, [sp, #32]
   17814:	blx	r3
   17818:	ldr	r3, [sp, #68]	; 0x44
   1781c:	cmp	r0, r3, lsl #2
   17820:	movcc	r8, #2
   17824:	bcc	16858 <readstat_parse_sav+0xbcc>
   17828:	mov	r8, #0
   1782c:	str	r8, [sp, #44]	; 0x2c
   17830:	add	r3, sp, #352	; 0x160
   17834:	str	r3, [sp, #40]	; 0x28
   17838:	ldr	r3, [sp, #68]	; 0x44
   1783c:	cmp	r8, r3
   17840:	bcc	16688 <readstat_parse_sav+0x9fc>
   17844:	mov	r5, fp
   17848:	mov	r6, fp
   1784c:	mov	r3, #0
   17850:	str	r3, [sp, #40]	; 0x28
   17854:	vldr	d11, [pc, #476]	; 17a38 <readstat_parse_sav+0x1dac>
   17858:	add	r3, sp, #352	; 0x160
   1785c:	str	r3, [sp, #52]	; 0x34
   17860:	add	r7, r9, #400	; 0x190
   17864:	b	167f4 <readstat_parse_sav+0xb68>
   17868:	ldr	r3, [r4, #12]
   1786c:	ldr	r2, [r4, #20]
   17870:	mov	r1, #0
   17874:	mov	r0, r1
   17878:	blx	r3
   1787c:	ldr	r3, [sp, #68]	; 0x44
   17880:	cmp	r0, r3, lsl #2
   17884:	movcs	r3, #0
   17888:	strcs	r3, [sp, #32]
   1788c:	bcs	17828 <readstat_parse_sav+0x1b9c>
   17890:	cmp	fp, #0
   17894:	bne	168f8 <readstat_parse_sav+0xc6c>
   17898:	ldr	r4, [sp, #20]
   1789c:	mov	r6, sl
   178a0:	ldr	sl, [sp, #16]
   178a4:	mov	r8, #2
   178a8:	b	15fa0 <readstat_parse_sav+0x314>
   178ac:	ldr	r4, [sp, #20]
   178b0:	mov	r6, sl
   178b4:	ldr	sl, [sp, #16]
   178b8:	mov	r8, #2
   178bc:	b	15fa0 <readstat_parse_sav+0x314>
   178c0:	ldr	r4, [sp, #20]
   178c4:	mov	r6, sl
   178c8:	ldr	sl, [sp, #16]
   178cc:	mov	r8, #2
   178d0:	b	15fa0 <readstat_parse_sav+0x314>
   178d4:	ldr	r4, [sp, #20]
   178d8:	mov	r6, sl
   178dc:	ldr	sl, [sp, #16]
   178e0:	mov	r8, #4
   178e4:	b	15fa0 <readstat_parse_sav+0x314>
   178e8:	ldr	r4, [sp, #20]
   178ec:	mov	r6, sl
   178f0:	ldr	sl, [sp, #16]
   178f4:	mov	r8, #5
   178f8:	b	15fa0 <readstat_parse_sav+0x314>
   178fc:	ldr	r4, [sp, #20]
   17900:	mov	r6, sl
   17904:	ldr	sl, [sp, #16]
   17908:	mov	r8, #3
   1790c:	b	15fa0 <readstat_parse_sav+0x314>
   17910:	ldr	r4, [sp, #20]
   17914:	mov	r6, sl
   17918:	ldr	sl, [sp, #16]
   1791c:	mov	r8, #5
   17920:	b	15fa0 <readstat_parse_sav+0x314>
   17924:	ldr	r4, [sp, #20]
   17928:	mov	r6, sl
   1792c:	ldr	sl, [sp, #16]
   17930:	mov	r8, #5
   17934:	b	15fa0 <readstat_parse_sav+0x314>
   17938:	ldr	r4, [sp, #20]
   1793c:	mov	r6, sl
   17940:	ldr	sl, [sp, #16]
   17944:	mov	r8, #5
   17948:	b	15fa0 <readstat_parse_sav+0x314>
   1794c:	ldr	r4, [sp, #20]
   17950:	mov	r6, sl
   17954:	ldr	sl, [sp, #16]
   17958:	mov	r8, #5
   1795c:	b	15fa0 <readstat_parse_sav+0x314>
   17960:	ldr	r4, [sp, #20]
   17964:	mov	r6, sl
   17968:	ldr	sl, [sp, #16]
   1796c:	mov	r8, #5
   17970:	b	15fa0 <readstat_parse_sav+0x314>
   17974:	ldr	r4, [sp, #20]
   17978:	mov	r6, sl
   1797c:	ldr	sl, [sp, #16]
   17980:	mov	r8, #5
   17984:	b	15fa0 <readstat_parse_sav+0x314>
   17988:	cmp	r7, #0
   1798c:	beq	176ac <readstat_parse_sav+0x1a20>
   17990:	mov	r0, r7
   17994:	bl	3ee0 <free@plt>
   17998:	b	176a0 <readstat_parse_sav+0x1a14>
   1799c:	mov	sl, #15
   179a0:	b	15db0 <readstat_parse_sav+0x124>
   179a4:	mov	sl, #3
   179a8:	b	15db0 <readstat_parse_sav+0x124>
   179ac:	mov	sl, #5
   179b0:	b	15db0 <readstat_parse_sav+0x124>
   179b4:	mov	sl, #15
   179b8:	ldr	r3, [r4, #4]
   179bc:	ldr	r0, [r4, #20]
   179c0:	blx	r3
   179c4:	mov	r0, sl
   179c8:	add	sp, sp, #860	; 0x35c
   179cc:	vpop	{d8-d11}
   179d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   179d4:	mov	sl, #15
   179d8:	b	179b8 <readstat_parse_sav+0x1d2c>
   179dc:	mov	sl, #5
   179e0:	b	179b8 <readstat_parse_sav+0x1d2c>
   179e4:	ldr	r4, [sp, #20]
   179e8:	mov	r6, sl
   179ec:	ldr	sl, [sp, #16]
   179f0:	mov	r8, #2
   179f4:	b	1641c <readstat_parse_sav+0x790>
   179f8:	ldr	r4, [sp, #20]
   179fc:	mov	r6, sl
   17a00:	ldr	sl, [sp, #16]
   17a04:	mov	r8, #3
   17a08:	b	1641c <readstat_parse_sav+0x790>
   17a0c:	ldr	r4, [sp, #20]
   17a10:	mov	r6, sl
   17a14:	ldr	sl, [sp, #16]
   17a18:	mov	r8, #5
   17a1c:	b	177e0 <readstat_parse_sav+0x1b54>
   17a20:	ldr	r4, [sp, #20]
   17a24:	mov	r6, sl
   17a28:	ldr	sl, [sp, #16]
   17a2c:	mov	r8, #2
   17a30:	b	177e0 <readstat_parse_sav+0x1b54>
   17a34:	nop			; (mov r0, r0)
	...
   17a40:	.word	0x00000101
   17a44:	.word	0x0000e398
   17a48:	.word	0xffffe204
   17a4c:	.word	0xffffe1bc

00017a50 <sav_variable_segments>:
   17a50:	clz	r0, r0
   17a54:	lsr	r0, r0, #5
   17a58:	cmp	r1, #255	; 0xff
   17a5c:	movls	r0, #0
   17a60:	cmp	r0, #0
   17a64:	addne	r0, r1, #251	; 0xfb
   17a68:	lsrne	r0, r0, #2
   17a6c:	ldrne	r1, [pc, #12]	; 17a80 <sav_variable_segments+0x30>
   17a70:	umullne	r3, r0, r1, r0
   17a74:	lsrne	r0, r0, #3
   17a78:	moveq	r0, #1
   17a7c:	bx	lr
   17a80:	.word	0x20820821

00017a84 <sav_variable_width>:
   17a84:	cmp	r0, #0
   17a88:	beq	17a94 <sav_variable_width+0x10>
   17a8c:	mov	r0, #8
   17a90:	bx	lr
   17a94:	cmp	r1, #255	; 0xff
   17a98:	bhi	17aac <sav_variable_width+0x28>
   17a9c:	cmp	r1, #0
   17aa0:	bne	17adc <sav_variable_width+0x58>
   17aa4:	mov	r0, #8
   17aa8:	bx	lr
   17aac:	push	{r4, lr}
   17ab0:	mov	r4, r1
   17ab4:	bl	17a50 <sav_variable_segments>
   17ab8:	sub	r3, r0, r0, lsl #6
   17abc:	add	r1, r4, #256	; 0x100
   17ac0:	add	r1, r1, #3
   17ac4:	add	r1, r1, r3, lsl #2
   17ac8:	bic	r1, r1, #7
   17acc:	add	r0, r0, #16777216	; 0x1000000
   17ad0:	sub	r0, r0, #1
   17ad4:	add	r0, r1, r0, lsl #8
   17ad8:	pop	{r4, pc}
   17adc:	add	r0, r1, #7
   17ae0:	bic	r0, r0, #7
   17ae4:	bx	lr

00017ae8 <sav_metadata_ok>:
   17ae8:	ldr	r3, [r0, #8]
   17aec:	cmp	r3, #2
   17af0:	beq	17b08 <sav_metadata_ok+0x20>
   17af4:	sub	r0, r3, #2
   17af8:	cmp	r0, #1
   17afc:	movhi	r0, #24
   17b00:	movls	r0, #0
   17b04:	bx	lr
   17b08:	ldr	r0, [r0, #16]
   17b0c:	cmp	r0, #2
   17b10:	moveq	r0, #6
   17b14:	movne	r0, #0
   17b18:	bx	lr

00017b1c <sav_write_compressed_row>:
   17b1c:	push	{r4, r5, r6, lr}
   17b20:	mov	r4, r0
   17b24:	ldr	r5, [r0, #300]	; 0x12c
   17b28:	mov	r3, r0
   17b2c:	mov	r0, r5
   17b30:	bl	448c <sav_compress_row@plt>
   17b34:	mov	r2, r0
   17b38:	mov	r1, r5
   17b3c:	mov	r0, r4
   17b40:	bl	4480 <readstat_write_bytes@plt>
   17b44:	pop	{r4, r5, r6, pc}

00017b48 <sav_emit_blank_variable_records>:
   17b48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17b4c:	sub	sp, sp, #36	; 0x24
   17b50:	mov	r6, r0
   17b54:	add	sl, sp, #32
   17b58:	mov	r3, #2
   17b5c:	str	r3, [sl, #-4]!
   17b60:	mov	r4, r1
   17b64:	mov	fp, #4
   17b68:	mov	r5, sp
   17b6c:	mov	r9, #0
   17b70:	ldr	r8, [pc, #108]	; 17be4 <sav_emit_blank_variable_records+0x9c>
   17b74:	ldr	r7, [pc, #108]	; 17be8 <sav_emit_blank_variable_records+0xa0>
   17b78:	cmp	r4, #0
   17b7c:	beq	17bd8 <sav_emit_blank_variable_records+0x90>
   17b80:	mov	r2, fp
   17b84:	mov	r1, sl
   17b88:	mov	r0, r6
   17b8c:	bl	4480 <readstat_write_bytes@plt>
   17b90:	cmp	r0, #0
   17b94:	bne	17bdc <sav_emit_blank_variable_records+0x94>
   17b98:	str	r9, [r5, #4]
   17b9c:	str	r9, [r5, #8]
   17ba0:	str	r8, [sp, #20]
   17ba4:	str	r8, [sp, #24]
   17ba8:	mvn	r3, #0
   17bac:	str	r3, [sp]
   17bb0:	str	r7, [sp, #16]
   17bb4:	str	r7, [sp, #12]
   17bb8:	mov	r2, #28
   17bbc:	mov	r1, r5
   17bc0:	mov	r0, r6
   17bc4:	bl	4480 <readstat_write_bytes@plt>
   17bc8:	sub	r4, r4, #1
   17bcc:	cmp	r0, #0
   17bd0:	beq	17b78 <sav_emit_blank_variable_records+0x30>
   17bd4:	b	17bdc <sav_emit_blank_variable_records+0x94>
   17bd8:	mov	r0, #0
   17bdc:	add	sp, sp, #36	; 0x24
   17be0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17be4:	.word	0x20202020
   17be8:	.word	0x00011d01

00017bec <sav_write_missing_string>:
   17bec:	push	{r4, lr}
   17bf0:	ldr	r2, [r1, #1596]	; 0x63c
   17bf4:	mov	r1, #32
   17bf8:	bl	42d0 <memset@plt>
   17bfc:	mov	r0, #0
   17c00:	pop	{r4, pc}

00017c04 <sav_write_missing_number>:
   17c04:	sub	sp, sp, #8
   17c08:	mov	r2, r0
   17c0c:	add	r3, sp, #8
   17c10:	mvn	r0, #0
   17c14:	mvn	r1, #1048576	; 0x100000
   17c18:	strd	r0, [r3, #-8]!
   17c1c:	ldm	r3!, {r0, r1}
   17c20:	str	r0, [r2]
   17c24:	str	r1, [r2, #4]
   17c28:	mov	r0, #0
   17c2c:	add	sp, sp, #8
   17c30:	bx	lr

00017c34 <sav_write_double>:
   17c34:	sub	sp, sp, #8
   17c38:	mov	r2, r0
   17c3c:	add	r3, sp, #8
   17c40:	vstmdb	r3!, {d0}
   17c44:	ldm	r3!, {r0, r1}
   17c48:	str	r0, [r2]
   17c4c:	str	r1, [r2, #4]
   17c50:	mov	r0, #0
   17c54:	add	sp, sp, #8
   17c58:	bx	lr

00017c5c <sav_write_float>:
   17c5c:	sub	sp, sp, #8
   17c60:	mov	r2, r0
   17c64:	vcvt.f64.f32	d0, s0
   17c68:	add	r3, sp, #8
   17c6c:	vstmdb	r3!, {d0}
   17c70:	ldm	r3!, {r0, r1}
   17c74:	str	r0, [r2]
   17c78:	str	r1, [r2, #4]
   17c7c:	mov	r0, #0
   17c80:	add	sp, sp, #8
   17c84:	bx	lr

00017c88 <sav_write_int32>:
   17c88:	sub	sp, sp, #8
   17c8c:	mov	ip, r0
   17c90:	vmov	s15, r2
   17c94:	vcvt.f64.s32	d7, s15
   17c98:	add	r3, sp, #8
   17c9c:	vstmdb	r3!, {d7}
   17ca0:	ldm	r3!, {r0, r1}
   17ca4:	str	r0, [ip]
   17ca8:	str	r1, [ip, #4]
   17cac:	mov	r0, #0
   17cb0:	add	sp, sp, #8
   17cb4:	bx	lr

00017cb8 <sav_write_int16>:
   17cb8:	sub	sp, sp, #8
   17cbc:	mov	ip, r0
   17cc0:	vmov	s15, r2
   17cc4:	vcvt.f64.s32	d7, s15
   17cc8:	add	r3, sp, #8
   17ccc:	vstmdb	r3!, {d7}
   17cd0:	ldm	r3!, {r0, r1}
   17cd4:	str	r0, [ip]
   17cd8:	str	r1, [ip, #4]
   17cdc:	mov	r0, #0
   17ce0:	add	sp, sp, #8
   17ce4:	bx	lr

00017ce8 <sav_write_int8>:
   17ce8:	sub	sp, sp, #8
   17cec:	mov	ip, r0
   17cf0:	vmov	s15, r2
   17cf4:	vcvt.f64.s32	d7, s15
   17cf8:	add	r3, sp, #8
   17cfc:	vstmdb	r3!, {d7}
   17d00:	ldm	r3!, {r0, r1}
   17d04:	str	r0, [ip]
   17d08:	str	r1, [ip, #4]
   17d0c:	mov	r0, #0
   17d10:	add	sp, sp, #8
   17d14:	bx	lr

00017d18 <sav_format_variable_name>:
   17d18:	push	{r4, lr}
   17d1c:	mov	r4, r0
   17d20:	mov	r3, r2
   17d24:	ldr	r2, [pc, #16]	; 17d3c <sav_format_variable_name+0x24>
   17d28:	add	r2, pc, r2
   17d2c:	bl	42ac <snprintf@plt>
   17d30:	mov	r0, r4
   17d34:	bl	4228 <strlen@plt>
   17d38:	pop	{r4, pc}
   17d3c:	.word	0x0000d3a4

00017d40 <sav_write_string>:
   17d40:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17d44:	mov	r8, r0
   17d48:	mov	r4, r1
   17d4c:	mov	r6, r2
   17d50:	ldr	r2, [r1, #1596]	; 0x63c
   17d54:	mov	r1, #32
   17d58:	bl	42d0 <memset@plt>
   17d5c:	cmp	r6, #0
   17d60:	beq	17df0 <sav_write_string+0xb0>
   17d64:	ldrb	r3, [r6]
   17d68:	cmp	r3, #0
   17d6c:	beq	17df8 <sav_write_string+0xb8>
   17d70:	mov	r0, r6
   17d74:	bl	4228 <strlen@plt>
   17d78:	mov	r7, r0
   17d7c:	ldr	r3, [r4, #1596]	; 0x63c
   17d80:	cmp	r0, r3
   17d84:	bls	17d90 <sav_write_string+0x50>
   17d88:	mov	r0, #22
   17d8c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17d90:	cmp	r0, #255	; 0xff
   17d94:	bls	17de0 <sav_write_string+0xa0>
   17d98:	mov	r4, #0
   17d9c:	mov	r5, r4
   17da0:	mov	r9, #255	; 0xff
   17da4:	mov	r2, r9
   17da8:	add	r1, r6, r4
   17dac:	add	r0, r8, r5
   17db0:	bl	3f40 <memcpy@plt>
   17db4:	add	r5, r5, #256	; 0x100
   17db8:	add	r4, r4, #255	; 0xff
   17dbc:	mov	r1, r4
   17dc0:	sub	r2, r7, r4
   17dc4:	cmp	r2, #255	; 0xff
   17dc8:	bhi	17da4 <sav_write_string+0x64>
   17dcc:	add	r1, r6, r1
   17dd0:	add	r0, r8, r5
   17dd4:	bl	3f40 <memcpy@plt>
   17dd8:	mov	r0, #0
   17ddc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17de0:	mov	r2, r0
   17de4:	mov	r1, #0
   17de8:	mov	r5, r1
   17dec:	b	17dcc <sav_write_string+0x8c>
   17df0:	mov	r0, #0
   17df4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17df8:	mov	r0, #0
   17dfc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00017e00 <sav_variable_ok>:
   17e00:	push	{r4, r5, r6, lr}
   17e04:	mov	r5, r0
   17e08:	add	r4, r0, #8
   17e0c:	mov	r0, r4
   17e10:	bl	4228 <strlen@plt>
   17e14:	cmp	r0, #64	; 0x40
   17e18:	bls	17e24 <sav_variable_ok+0x24>
   17e1c:	mov	r0, #28
   17e20:	pop	{r4, r5, r6, pc}
   17e24:	cmp	r0, #0
   17e28:	bne	18088 <sav_variable_ok+0x288>
   17e2c:	mov	r0, #38	; 0x26
   17e30:	pop	{r4, r5, r6, pc}
   17e34:	ldr	r1, [pc, #628]	; 180b0 <sav_variable_ok+0x2b0>
   17e38:	add	r1, pc, r1
   17e3c:	mov	r0, r4
   17e40:	bl	3e20 <strcmp@plt>
   17e44:	cmp	r0, #0
   17e48:	bne	17e54 <sav_variable_ok+0x54>
   17e4c:	mov	r0, #27
   17e50:	pop	{r4, r5, r6, pc}
   17e54:	ldr	r1, [pc, #600]	; 180b4 <sav_variable_ok+0x2b4>
   17e58:	add	r1, pc, r1
   17e5c:	mov	r0, r4
   17e60:	bl	3e20 <strcmp@plt>
   17e64:	cmp	r0, #0
   17e68:	bne	17e74 <sav_variable_ok+0x74>
   17e6c:	mov	r0, #27
   17e70:	pop	{r4, r5, r6, pc}
   17e74:	ldr	r1, [pc, #572]	; 180b8 <sav_variable_ok+0x2b8>
   17e78:	add	r1, pc, r1
   17e7c:	mov	r0, r4
   17e80:	bl	3e20 <strcmp@plt>
   17e84:	cmp	r0, #0
   17e88:	bne	17e94 <sav_variable_ok+0x94>
   17e8c:	mov	r0, #27
   17e90:	pop	{r4, r5, r6, pc}
   17e94:	ldr	r1, [pc, #544]	; 180bc <sav_variable_ok+0x2bc>
   17e98:	add	r1, pc, r1
   17e9c:	mov	r0, r4
   17ea0:	bl	3e20 <strcmp@plt>
   17ea4:	cmp	r0, #0
   17ea8:	bne	17eb4 <sav_variable_ok+0xb4>
   17eac:	mov	r0, #27
   17eb0:	pop	{r4, r5, r6, pc}
   17eb4:	ldr	r1, [pc, #516]	; 180c0 <sav_variable_ok+0x2c0>
   17eb8:	add	r1, pc, r1
   17ebc:	mov	r0, r4
   17ec0:	bl	3e20 <strcmp@plt>
   17ec4:	cmp	r0, #0
   17ec8:	bne	17ed4 <sav_variable_ok+0xd4>
   17ecc:	mov	r0, #27
   17ed0:	pop	{r4, r5, r6, pc}
   17ed4:	ldr	r1, [pc, #488]	; 180c4 <sav_variable_ok+0x2c4>
   17ed8:	add	r1, pc, r1
   17edc:	mov	r0, r4
   17ee0:	bl	3e20 <strcmp@plt>
   17ee4:	cmp	r0, #0
   17ee8:	bne	17ef4 <sav_variable_ok+0xf4>
   17eec:	mov	r0, #27
   17ef0:	pop	{r4, r5, r6, pc}
   17ef4:	ldr	r1, [pc, #460]	; 180c8 <sav_variable_ok+0x2c8>
   17ef8:	add	r1, pc, r1
   17efc:	mov	r0, r4
   17f00:	bl	3e20 <strcmp@plt>
   17f04:	cmp	r0, #0
   17f08:	beq	18040 <sav_variable_ok+0x240>
   17f0c:	ldr	r1, [pc, #440]	; 180cc <sav_variable_ok+0x2cc>
   17f10:	add	r1, pc, r1
   17f14:	mov	r0, r4
   17f18:	bl	3e20 <strcmp@plt>
   17f1c:	cmp	r0, #0
   17f20:	beq	18048 <sav_variable_ok+0x248>
   17f24:	ldr	r1, [pc, #420]	; 180d0 <sav_variable_ok+0x2d0>
   17f28:	add	r1, pc, r1
   17f2c:	mov	r0, r4
   17f30:	bl	3e20 <strcmp@plt>
   17f34:	cmp	r0, #0
   17f38:	beq	18050 <sav_variable_ok+0x250>
   17f3c:	ldr	r1, [pc, #400]	; 180d4 <sav_variable_ok+0x2d4>
   17f40:	add	r1, pc, r1
   17f44:	mov	r0, r4
   17f48:	bl	3e20 <strcmp@plt>
   17f4c:	cmp	r0, #0
   17f50:	beq	18058 <sav_variable_ok+0x258>
   17f54:	ldr	r1, [pc, #380]	; 180d8 <sav_variable_ok+0x2d8>
   17f58:	add	r1, pc, r1
   17f5c:	mov	r0, r4
   17f60:	bl	3e20 <strcmp@plt>
   17f64:	cmp	r0, #0
   17f68:	beq	18060 <sav_variable_ok+0x260>
   17f6c:	ldr	r1, [pc, #360]	; 180dc <sav_variable_ok+0x2dc>
   17f70:	add	r1, pc, r1
   17f74:	mov	r0, r4
   17f78:	bl	3e20 <strcmp@plt>
   17f7c:	cmp	r0, #0
   17f80:	beq	18068 <sav_variable_ok+0x268>
   17f84:	ldrb	ip, [r5, #8]
   17f88:	cmp	ip, #0
   17f8c:	beq	180a8 <sav_variable_ok+0x2a8>
   17f90:	cmp	ip, #32
   17f94:	beq	18070 <sav_variable_ok+0x270>
   17f98:	mov	r0, r4
   17f9c:	mov	r2, ip
   17fa0:	mov	r4, #1
   17fa4:	ldr	lr, [pc, #308]	; 180e0 <sav_variable_ok+0x2e0>
   17fa8:	b	17fc0 <sav_variable_ok+0x1c0>
   17fac:	ldrb	r2, [r0, #1]!
   17fb0:	cmp	r2, #0
   17fb4:	beq	18014 <sav_variable_ok+0x214>
   17fb8:	cmp	r2, #32
   17fbc:	beq	18078 <sav_variable_ok+0x278>
   17fc0:	sub	r1, r2, #64	; 0x40
   17fc4:	uxtb	r1, r1
   17fc8:	cmp	r2, #95	; 0x5f
   17fcc:	cmpne	r1, #26
   17fd0:	movhi	r1, #1
   17fd4:	movls	r1, #0
   17fd8:	sub	r3, r2, #35	; 0x23
   17fdc:	uxtb	r3, r3
   17fe0:	cmp	r3, #22
   17fe4:	lsrls	r3, lr, r3
   17fe8:	eorls	r3, r3, #1
   17fec:	andls	r3, r3, #1
   17ff0:	movhi	r3, r4
   17ff4:	tst	r3, r1
   17ff8:	beq	17fac <sav_variable_ok+0x1ac>
   17ffc:	sub	r2, r2, #97	; 0x61
   18000:	uxtb	r2, r2
   18004:	cmp	r2, #25
   18008:	bls	17fac <sav_variable_ok+0x1ac>
   1800c:	mov	r0, #26
   18010:	pop	{r4, r5, r6, pc}
   18014:	sub	r3, ip, #64	; 0x40
   18018:	uxtb	r3, r3
   1801c:	cmp	ip, #0
   18020:	cmpne	r3, #26
   18024:	bls	18080 <sav_variable_ok+0x280>
   18028:	sub	r0, ip, #97	; 0x61
   1802c:	uxtb	r0, r0
   18030:	cmp	r0, #25
   18034:	movhi	r0, #25
   18038:	movls	r0, #0
   1803c:	pop	{r4, r5, r6, pc}
   18040:	mov	r0, #27
   18044:	pop	{r4, r5, r6, pc}
   18048:	mov	r0, #27
   1804c:	pop	{r4, r5, r6, pc}
   18050:	mov	r0, #27
   18054:	pop	{r4, r5, r6, pc}
   18058:	mov	r0, #27
   1805c:	pop	{r4, r5, r6, pc}
   18060:	mov	r0, #27
   18064:	pop	{r4, r5, r6, pc}
   18068:	mov	r0, #27
   1806c:	pop	{r4, r5, r6, pc}
   18070:	mov	r0, #26
   18074:	pop	{r4, r5, r6, pc}
   18078:	mov	r0, #26
   1807c:	pop	{r4, r5, r6, pc}
   18080:	mov	r0, #0
   18084:	pop	{r4, r5, r6, pc}
   18088:	ldr	r1, [pc, #84]	; 180e4 <sav_variable_ok+0x2e4>
   1808c:	add	r1, pc, r1
   18090:	mov	r0, r4
   18094:	bl	3e20 <strcmp@plt>
   18098:	cmp	r0, #0
   1809c:	bne	17e34 <sav_variable_ok+0x34>
   180a0:	mov	r0, #27
   180a4:	pop	{r4, r5, r6, pc}
   180a8:	mov	r0, #0
   180ac:	pop	{r4, r5, r6, pc}
   180b0:	.word	0x0000e768
   180b4:	.word	0x0000e74c
   180b8:	.word	0x0000e730
   180bc:	.word	0x0000e714
   180c0:	.word	0x0000e6f8
   180c4:	.word	0x0000e6dc
   180c8:	.word	0x0000e6c0
   180cc:	.word	0x0000e6ac
   180d0:	.word	0x0000e698
   180d4:	.word	0x0000e684
   180d8:	.word	0x0000e670
   180dc:	.word	0x0000e65c
   180e0:	.word	0x007fe803
   180e4:	.word	0x0000e548

000180e8 <readstat_label_set_number_short_variables>:
   180e8:	push	{r4, r5, r6, lr}
   180ec:	ldr	r3, [r0, #276]	; 0x114
   180f0:	cmp	r3, #0
   180f4:	ble	18134 <readstat_label_set_number_short_variables+0x4c>
   180f8:	mov	r5, r0
   180fc:	mov	r4, #0
   18100:	mov	r6, r4
   18104:	mov	r1, r4
   18108:	mov	r0, r5
   1810c:	bl	4474 <readstat_get_label_set_variable@plt>
   18110:	ldr	r3, [r0, #1596]	; 0x63c
   18114:	cmp	r3, #8
   18118:	addls	r6, r6, #1
   1811c:	add	r4, r4, #1
   18120:	ldr	r3, [r5, #276]	; 0x114
   18124:	cmp	r3, r4
   18128:	bgt	18104 <readstat_label_set_number_short_variables+0x1c>
   1812c:	mov	r0, r6
   18130:	pop	{r4, r5, r6, pc}
   18134:	mov	r6, #0
   18138:	b	1812c <readstat_label_set_number_short_variables+0x44>

0001813c <sav_begin_data>:
   1813c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18140:	sub	sp, sp, #420	; 0x1a4
   18144:	ldr	r3, [r0, #308]	; 0x134
   18148:	cmp	r3, #0
   1814c:	moveq	fp, #14
   18150:	bne	18160 <sav_begin_data+0x24>
   18154:	mov	r0, fp
   18158:	add	sp, sp, #420	; 0x1a4
   1815c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18160:	mov	sl, r0
   18164:	ldr	r4, [r0, #28]
   18168:	mov	r1, #15
   1816c:	mov	r0, r4
   18170:	bl	3d78 <calloc@plt>
   18174:	mov	r5, r0
   18178:	str	r0, [sp, #44]	; 0x2c
   1817c:	mov	r0, r4
   18180:	bl	41bc <ck_hash_table_init@plt>
   18184:	mov	r9, r0
   18188:	ldr	r3, [sl, #28]
   1818c:	cmp	r3, #0
   18190:	ble	18294 <sav_begin_data+0x158>
   18194:	add	r6, r5, #9
   18198:	mov	r7, #0
   1819c:	ldr	r3, [pc, #3976]	; 1912c <sav_begin_data+0xff0>
   181a0:	add	r3, pc, r3
   181a4:	str	r3, [sp, #16]
   181a8:	mov	fp, #9
   181ac:	ldr	r3, [pc, #3964]	; 19130 <sav_begin_data+0xff4>
   181b0:	add	r3, pc, r3
   181b4:	str	r3, [sp, #20]
   181b8:	ldr	r3, [pc, #3956]	; 19134 <sav_begin_data+0xff8>
   181bc:	add	r3, pc, r3
   181c0:	str	r3, [sp, #24]
   181c4:	b	181f8 <sav_begin_data+0xbc>
   181c8:	mov	r2, r9
   181cc:	mov	r1, r8
   181d0:	mov	r0, r5
   181d4:	bl	451c <ck_str_hash_insert@plt>
   181d8:	ldr	r3, [r8, #1600]	; 0x640
   181dc:	cmp	r3, #255	; 0xff
   181e0:	bhi	1827c <sav_begin_data+0x140>
   181e4:	add	r7, r7, #1
   181e8:	add	r6, r6, #15
   181ec:	ldr	r3, [sl, #28]
   181f0:	cmp	r7, r3
   181f4:	bge	18294 <sav_begin_data+0x158>
   181f8:	mov	r1, r7
   181fc:	mov	r0, sl
   18200:	bl	43a8 <readstat_get_variable@plt>
   18204:	mov	r8, r0
   18208:	sub	r5, r6, #9
   1820c:	add	r3, r0, #8
   18210:	ldr	r2, [sp, #16]
   18214:	mov	r1, fp
   18218:	mov	r0, r5
   1821c:	bl	42ac <snprintf@plt>
   18220:	str	r6, [sp, #12]
   18224:	ldrb	r4, [r6, #-9]
   18228:	cmp	r4, #0
   1822c:	beq	18250 <sav_begin_data+0x114>
   18230:	bl	41b0 <__ctype_toupper_loc@plt>
   18234:	mov	r3, r5
   18238:	ldr	r2, [r0]
   1823c:	ldr	r2, [r2, r4, lsl #2]
   18240:	strb	r2, [r3]
   18244:	ldrb	r4, [r3, #1]!
   18248:	cmp	r4, #0
   1824c:	bne	18238 <sav_begin_data+0xfc>
   18250:	mov	r1, r9
   18254:	mov	r0, r5
   18258:	bl	3ff4 <ck_str_hash_lookup@plt>
   1825c:	cmp	r0, #0
   18260:	beq	181c8 <sav_begin_data+0x8c>
   18264:	add	r3, r7, #1
   18268:	ldr	r2, [sp, #20]
   1826c:	mov	r1, fp
   18270:	mov	r0, r5
   18274:	bl	42ac <snprintf@plt>
   18278:	b	181c8 <sav_begin_data+0x8c>
   1827c:	mov	r3, r5
   18280:	ldr	r2, [sp, #24]
   18284:	mov	r1, #6
   18288:	ldr	r0, [sp, #12]
   1828c:	bl	42ac <snprintf@plt>
   18290:	b	181e4 <sav_begin_data+0xa8>
   18294:	mov	r0, r9
   18298:	bl	4270 <ck_hash_table_free@plt>
   1829c:	mov	r2, #176	; 0xb0
   182a0:	mov	r1, #0
   182a4:	add	r0, sp, #160	; 0xa0
   182a8:	bl	42d0 <memset@plt>
   182ac:	ldr	r3, [sl, #20]
   182b0:	add	r0, sp, #416	; 0x1a0
   182b4:	str	r3, [r0, #-344]!	; 0xfffffea8
   182b8:	bl	418c <localtime@plt>
   182bc:	mov	r5, r0
   182c0:	add	ip, sp, #112	; 0x70
   182c4:	ldr	lr, [pc, #3692]	; 19138 <sav_begin_data+0xffc>
   182c8:	add	lr, pc, lr
   182cc:	ldm	lr!, {r0, r1, r2, r3}
   182d0:	stmia	ip!, {r0, r1, r2, r3}
   182d4:	ldm	lr!, {r0, r1, r2, r3}
   182d8:	stmia	ip!, {r0, r1, r2, r3}
   182dc:	ldm	lr, {r0, r1, r2, r3}
   182e0:	stm	ip, {r0, r1, r2, r3}
   182e4:	mov	r3, #0
   182e8:	str	r3, [sp, #96]	; 0x60
   182ec:	str	r3, [sp, #100]	; 0x64
   182f0:	strh	r3, [sp, #104]	; 0x68
   182f4:	str	r3, [sp, #84]	; 0x54
   182f8:	str	r3, [sp, #88]	; 0x58
   182fc:	strb	r3, [sp, #92]	; 0x5c
   18300:	cmp	r5, r3
   18304:	beq	19fb8 <sav_begin_data+0x1e7c>
   18308:	ldr	r3, [pc, #3628]	; 1913c <sav_begin_data+0x1000>
   1830c:	str	r3, [sp, #160]	; 0xa0
   18310:	ldr	r6, [sl, #16]
   18314:	cmp	r6, #2
   18318:	beq	18514 <sav_begin_data+0x3d8>
   1831c:	mov	r2, #60	; 0x3c
   18320:	mov	r1, #32
   18324:	add	r4, sp, #164	; 0xa4
   18328:	mov	r0, r4
   1832c:	bl	42d0 <memset@plt>
   18330:	mov	ip, r4
   18334:	ldr	lr, [pc, #3588]	; 19140 <sav_begin_data+0x1004>
   18338:	add	lr, pc, lr
   1833c:	ldm	lr!, {r0, r1, r2, r3}
   18340:	stmia	ip!, {r0, r1, r2, r3}
   18344:	ldm	lr!, {r0, r1, r2, r3}
   18348:	stmia	ip!, {r0, r1, r2, r3}
   1834c:	ldm	lr!, {r0, r1, r2, r3}
   18350:	stmia	ip!, {r0, r1, r2, r3}
   18354:	ldm	lr, {r0, r1, r2}
   18358:	stmia	ip!, {r0, r1}
   1835c:	strh	r2, [ip], #2
   18360:	lsr	r2, r2, #16
   18364:	strb	r2, [ip]
   18368:	mov	r3, #2
   1836c:	str	r3, [sp, #224]	; 0xe0
   18370:	ldr	r3, [sl, #76]	; 0x4c
   18374:	lsr	r3, r3, #3
   18378:	str	r3, [sp, #228]	; 0xe4
   1837c:	cmp	r6, #1
   18380:	beq	18584 <sav_begin_data+0x448>
   18384:	ldr	r3, [sl, #224]	; 0xe0
   18388:	cmp	r3, #0
   1838c:	beq	18590 <sav_begin_data+0x454>
   18390:	ldr	r3, [r3, #1592]	; 0x638
   18394:	add	r2, r3, #7
   18398:	cmp	r3, #0
   1839c:	movlt	r3, r2
   183a0:	asr	r3, r3, #3
   183a4:	add	r3, r3, #1
   183a8:	str	r3, [sp, #236]	; 0xec
   183ac:	ldr	r3, [sl, #80]	; 0x50
   183b0:	str	r3, [sp, #240]	; 0xf0
   183b4:	mov	r3, #0
   183b8:	str	r3, [sp, #244]	; 0xf4
   183bc:	ldr	r3, [pc, #3456]	; 19144 <sav_begin_data+0x1008>
   183c0:	str	r3, [sp, #248]	; 0xf8
   183c4:	ldr	r0, [r5, #12]
   183c8:	ldr	r4, [pc, #3448]	; 19148 <sav_begin_data+0x100c>
   183cc:	umull	r2, r3, r4, r0
   183d0:	lsr	r3, r3, #5
   183d4:	mov	r6, #100	; 0x64
   183d8:	mul	r3, r6, r3
   183dc:	ldr	r1, [r5, #20]
   183e0:	umull	ip, r2, r4, r1
   183e4:	lsr	r2, r2, #5
   183e8:	mul	r2, r6, r2
   183ec:	sub	r2, r1, r2
   183f0:	str	r2, [sp, #4]
   183f4:	ldr	r1, [r5, #16]
   183f8:	add	r2, sp, #112	; 0x70
   183fc:	add	r2, r2, r1, lsl #2
   18400:	str	r2, [sp]
   18404:	sub	r3, r0, r3
   18408:	ldr	r2, [pc, #3388]	; 1914c <sav_begin_data+0x1010>
   1840c:	add	r2, pc, r2
   18410:	mov	r1, #10
   18414:	add	r7, sp, #96	; 0x60
   18418:	mov	r0, r7
   1841c:	bl	42ac <snprintf@plt>
   18420:	add	r3, sp, #252	; 0xfc
   18424:	ldm	r7, {r0, r1, r2}
   18428:	stmia	r3!, {r0, r1}
   1842c:	strb	r2, [r3]
   18430:	ldr	r0, [r5, #8]
   18434:	umull	r2, r3, r4, r0
   18438:	lsr	r3, r3, #5
   1843c:	mul	r3, r6, r3
   18440:	ldr	r1, [r5]
   18444:	umull	ip, r2, r4, r1
   18448:	lsr	r2, r2, #5
   1844c:	mul	r2, r6, r2
   18450:	sub	r2, r1, r2
   18454:	str	r2, [sp, #4]
   18458:	ldr	r1, [r5, #4]
   1845c:	umull	ip, r2, r4, r1
   18460:	lsr	r2, r2, #5
   18464:	mul	r2, r6, r2
   18468:	sub	r2, r1, r2
   1846c:	str	r2, [sp]
   18470:	sub	r3, r0, r3
   18474:	ldr	r2, [pc, #3284]	; 19150 <sav_begin_data+0x1014>
   18478:	add	r2, pc, r2
   1847c:	mov	r1, #9
   18480:	add	r4, sp, #84	; 0x54
   18484:	mov	r0, r4
   18488:	bl	42ac <snprintf@plt>
   1848c:	mov	r3, r4
   18490:	ldm	r3!, {r0, r1}
   18494:	str	r0, [sp, #261]	; 0x105
   18498:	str	r1, [sp, #265]	; 0x109
   1849c:	mov	r2, #64	; 0x40
   184a0:	mov	r1, #32
   184a4:	add	r0, sp, #268	; 0x10c
   184a8:	add	r0, r0, #1
   184ac:	bl	42d0 <memset@plt>
   184b0:	add	r4, sl, #88	; 0x58
   184b4:	mov	r0, r4
   184b8:	bl	4228 <strlen@plt>
   184bc:	ldrb	r3, [sl, #88]	; 0x58
   184c0:	cmp	r3, #0
   184c4:	bne	1859c <sav_begin_data+0x460>
   184c8:	mov	r2, #176	; 0xb0
   184cc:	add	r1, sp, #160	; 0xa0
   184d0:	mov	r0, sl
   184d4:	bl	4480 <readstat_write_bytes@plt>
   184d8:	subs	fp, r0, #0
   184dc:	bne	19fe4 <sav_begin_data+0x1ea8>
   184e0:	ldr	r3, [sl, #28]
   184e4:	cmp	r3, #0
   184e8:	ble	18ddc <sav_begin_data+0xca0>
   184ec:	ldr	r7, [sp, #44]	; 0x2c
   184f0:	mov	r3, #0
   184f4:	str	r3, [sp, #28]
   184f8:	add	r3, sp, #84	; 0x54
   184fc:	str	r3, [sp, #20]
   18500:	ldr	r3, [pc, #3148]	; 19154 <sav_begin_data+0x1018>
   18504:	add	r3, pc, r3
   18508:	str	r3, [sp, #24]
   1850c:	str	sl, [sp, #12]
   18510:	b	18ba0 <sav_begin_data+0xa64>
   18514:	mov	r3, #51	; 0x33
   18518:	strb	r3, [sp, #163]	; 0xa3
   1851c:	mov	r2, #60	; 0x3c
   18520:	mov	r1, #32
   18524:	add	r4, sp, #164	; 0xa4
   18528:	mov	r0, r4
   1852c:	bl	42d0 <memset@plt>
   18530:	mov	ip, r4
   18534:	ldr	lr, [pc, #3100]	; 19158 <sav_begin_data+0x101c>
   18538:	add	lr, pc, lr
   1853c:	ldm	lr!, {r0, r1, r2, r3}
   18540:	stmia	ip!, {r0, r1, r2, r3}
   18544:	ldm	lr!, {r0, r1, r2, r3}
   18548:	stmia	ip!, {r0, r1, r2, r3}
   1854c:	ldm	lr!, {r0, r1, r2, r3}
   18550:	stmia	ip!, {r0, r1, r2, r3}
   18554:	ldm	lr, {r0, r1, r2}
   18558:	stmia	ip!, {r0, r1}
   1855c:	strh	r2, [ip], #2
   18560:	lsr	r2, r2, #16
   18564:	strb	r2, [ip]
   18568:	mov	r2, #2
   1856c:	str	r2, [sp, #224]	; 0xe0
   18570:	ldr	r3, [sl, #76]	; 0x4c
   18574:	lsr	r3, r3, #3
   18578:	str	r3, [sp, #228]	; 0xe4
   1857c:	str	r2, [sp, #232]	; 0xe8
   18580:	b	18384 <sav_begin_data+0x248>
   18584:	mov	r3, #1
   18588:	str	r3, [sp, #232]	; 0xe8
   1858c:	b	18384 <sav_begin_data+0x248>
   18590:	mov	r3, #0
   18594:	str	r3, [sp, #236]	; 0xec
   18598:	b	183ac <sav_begin_data+0x270>
   1859c:	cmp	r0, #64	; 0x40
   185a0:	movcc	r2, r0
   185a4:	movcs	r2, #64	; 0x40
   185a8:	mov	r1, r4
   185ac:	add	r0, sp, #268	; 0x10c
   185b0:	add	r0, r0, #1
   185b4:	bl	3f40 <memcpy@plt>
   185b8:	b	184c8 <sav_begin_data+0x38c>
   185bc:	mov	r0, r2
   185c0:	bl	4330 <readstat_variable_get_missing_ranges_count@plt>
   185c4:	subs	fp, r0, #0
   185c8:	ble	18704 <sav_begin_data+0x5c8>
   185cc:	mov	sl, fp
   185d0:	mov	r3, #0
   185d4:	str	r3, [sp, #32]
   185d8:	mov	r6, r3
   185dc:	add	r5, sp, #96	; 0x60
   185e0:	add	r4, sp, #160	; 0xa0
   185e4:	mov	r2, r6
   185e8:	ldr	r8, [sp, #16]
   185ec:	mov	r1, r8
   185f0:	mov	r0, r5
   185f4:	bl	3f64 <readstat_variable_get_missing_range_lo@plt>
   185f8:	mov	r2, r6
   185fc:	mov	r1, r8
   18600:	mov	r0, r4
   18604:	bl	4354 <readstat_variable_get_missing_range_hi@plt>
   18608:	ldm	r5, {r0, r1, r2, r3}
   1860c:	bl	42dc <spss_64bit_value@plt>
   18610:	mov	r8, r0
   18614:	mov	r9, r1
   18618:	ldm	r4, {r0, r1, r2, r3}
   1861c:	bl	42dc <spss_64bit_value@plt>
   18620:	cmp	r9, r1
   18624:	cmpeq	r8, r0
   18628:	addne	sl, sl, #1
   1862c:	movne	r3, #1
   18630:	strne	r3, [sp, #32]
   18634:	add	r6, r6, #1
   18638:	cmp	fp, r6
   1863c:	bne	185e4 <sav_begin_data+0x4a8>
   18640:	ldr	r3, [sp, #32]
   18644:	cmp	r3, #0
   18648:	rsbne	sl, sl, #0
   1864c:	eor	r3, sl, sl, asr #31
   18650:	sub	r3, r3, sl, asr #31
   18654:	cmp	r3, #3
   18658:	ble	18c60 <sav_begin_data+0xb24>
   1865c:	mov	fp, #31
   18660:	b	19fe4 <sav_begin_data+0x1ea8>
   18664:	ldr	r0, [sp, #16]
   18668:	bl	4330 <readstat_variable_get_missing_ranges_count@plt>
   1866c:	subs	r9, r0, #0
   18670:	ble	1870c <sav_begin_data+0x5d0>
   18674:	mov	sl, r9
   18678:	mov	fp, #0
   1867c:	mov	r6, fp
   18680:	add	r5, sp, #96	; 0x60
   18684:	add	r4, sp, #160	; 0xa0
   18688:	b	18698 <sav_begin_data+0x55c>
   1868c:	add	r6, r6, #1
   18690:	cmp	r9, r6
   18694:	beq	186f8 <sav_begin_data+0x5bc>
   18698:	mov	r2, r6
   1869c:	ldr	r8, [sp, #16]
   186a0:	mov	r1, r8
   186a4:	mov	r0, r5
   186a8:	bl	3f64 <readstat_variable_get_missing_range_lo@plt>
   186ac:	mov	r2, r6
   186b0:	mov	r1, r8
   186b4:	mov	r0, r4
   186b8:	bl	4354 <readstat_variable_get_missing_range_hi@plt>
   186bc:	ldm	r5, {r0, r1, r2, r3}
   186c0:	bl	3fd0 <readstat_string_value@plt>
   186c4:	mov	r8, r0
   186c8:	ldm	r4, {r0, r1, r2, r3}
   186cc:	bl	3fd0 <readstat_string_value@plt>
   186d0:	mov	r1, r0
   186d4:	cmp	r8, #0
   186d8:	cmpne	r0, #0
   186dc:	beq	1868c <sav_begin_data+0x550>
   186e0:	mov	r0, r8
   186e4:	bl	3e20 <strcmp@plt>
   186e8:	cmp	r0, #0
   186ec:	addne	sl, sl, #1
   186f0:	movne	fp, #1
   186f4:	b	1868c <sav_begin_data+0x550>
   186f8:	cmp	fp, #0
   186fc:	rsbne	sl, sl, #0
   18700:	b	1864c <sav_begin_data+0x510>
   18704:	mov	sl, fp
   18708:	b	1864c <sav_begin_data+0x510>
   1870c:	mov	sl, r9
   18710:	b	1864c <sav_begin_data+0x510>
   18714:	ldr	r2, [sp, #40]	; 0x28
   18718:	ldr	r1, [sp, #20]
   1871c:	add	r0, sp, #132	; 0x84
   18720:	bl	3f40 <memcpy@plt>
   18724:	b	18cc0 <sav_begin_data+0xb84>
   18728:	ldr	r0, [sp, #16]
   1872c:	bl	4330 <readstat_variable_get_missing_ranges_count@plt>
   18730:	subs	sl, r0, #0
   18734:	ble	18d70 <sav_begin_data+0xc34>
   18738:	mov	r9, #0
   1873c:	add	r8, sp, #96	; 0x60
   18740:	add	r6, sp, #160	; 0xa0
   18744:	mov	r2, r9
   18748:	ldr	r4, [sp, #16]
   1874c:	mov	r1, r4
   18750:	mov	r0, r8
   18754:	bl	3f64 <readstat_variable_get_missing_range_lo@plt>
   18758:	mov	r2, r9
   1875c:	mov	r1, r4
   18760:	mov	r0, r6
   18764:	bl	4354 <readstat_variable_get_missing_range_hi@plt>
   18768:	ldm	r8, {r0, r1, r2, r3}
   1876c:	bl	42dc <spss_64bit_value@plt>
   18770:	mov	r4, r0
   18774:	mov	r5, r1
   18778:	ldm	r6, {r0, r1, r2, r3}
   1877c:	bl	42dc <spss_64bit_value@plt>
   18780:	cmp	r5, r1
   18784:	cmpeq	r4, r0
   18788:	bne	187c4 <sav_begin_data+0x688>
   1878c:	add	r9, r9, #1
   18790:	cmp	sl, r9
   18794:	bne	18744 <sav_begin_data+0x608>
   18798:	mov	r6, #0
   1879c:	mov	r8, #0
   187a0:	add	r9, sp, #96	; 0x60
   187a4:	add	r5, sp, #160	; 0xa0
   187a8:	add	r4, sp, #80	; 0x50
   187ac:	add	fp, sp, #72	; 0x48
   187b0:	mov	r3, fp
   187b4:	mov	fp, r6
   187b8:	mov	r6, r7
   187bc:	mov	r7, r3
   187c0:	b	18834 <sav_begin_data+0x6f8>
   187c4:	add	r3, sp, #96	; 0x60
   187c8:	ldm	r3, {r0, r1, r2, r3}
   187cc:	bl	42dc <spss_64bit_value@plt>
   187d0:	add	r3, sp, #64	; 0x40
   187d4:	strd	r0, [sp, #64]	; 0x40
   187d8:	mov	r2, #8
   187dc:	mov	r1, r3
   187e0:	ldr	r0, [sp, #12]
   187e4:	bl	4480 <readstat_write_bytes@plt>
   187e8:	cmp	r0, #0
   187ec:	bne	1881c <sav_begin_data+0x6e0>
   187f0:	add	r3, sp, #160	; 0xa0
   187f4:	ldm	r3, {r0, r1, r2, r3}
   187f8:	bl	42dc <spss_64bit_value@plt>
   187fc:	strd	r0, [sp, #72]	; 0x48
   18800:	mov	r2, #8
   18804:	add	r1, sp, #72	; 0x48
   18808:	ldr	r0, [sp, #12]
   1880c:	bl	4480 <readstat_write_bytes@plt>
   18810:	cmp	r0, #0
   18814:	moveq	r6, #2
   18818:	beq	1879c <sav_begin_data+0x660>
   1881c:	cmp	r0, #0
   18820:	bne	18b78 <sav_begin_data+0xa3c>
   18824:	b	18d70 <sav_begin_data+0xc34>
   18828:	add	r8, r8, #1
   1882c:	cmp	sl, r8
   18830:	beq	188b0 <sav_begin_data+0x774>
   18834:	mov	r2, r8
   18838:	ldr	r1, [sp, #16]
   1883c:	mov	r0, r9
   18840:	bl	3f64 <readstat_variable_get_missing_range_lo@plt>
   18844:	mov	r2, r8
   18848:	ldr	r1, [sp, #16]
   1884c:	mov	r0, r5
   18850:	bl	4354 <readstat_variable_get_missing_range_hi@plt>
   18854:	ldm	r9, {r0, r1, r2, r3}
   18858:	bl	42dc <spss_64bit_value@plt>
   1885c:	strd	r0, [sp, #32]
   18860:	ldm	r5, {r0, r1, r2, r3}
   18864:	bl	42dc <spss_64bit_value@plt>
   18868:	ldrd	r2, [sp, #32]
   1886c:	cmp	r3, r1
   18870:	cmpeq	r2, r0
   18874:	bne	18828 <sav_begin_data+0x6ec>
   18878:	ldm	r9, {r0, r1, r2, r3}
   1887c:	bl	42dc <spss_64bit_value@plt>
   18880:	strd	r0, [r4, #-8]
   18884:	mov	r2, #8
   18888:	mov	r1, r7
   1888c:	ldr	r0, [sp, #12]
   18890:	bl	4480 <readstat_write_bytes@plt>
   18894:	cmp	r0, #0
   18898:	bne	18a1c <sav_begin_data+0x8e0>
   1889c:	add	fp, fp, #1
   188a0:	cmp	fp, #3
   188a4:	bne	18828 <sav_begin_data+0x6ec>
   188a8:	mov	r7, r6
   188ac:	b	18d70 <sav_begin_data+0xc34>
   188b0:	mov	r7, r6
   188b4:	b	18d70 <sav_begin_data+0xc34>
   188b8:	ldr	r0, [sp, #16]
   188bc:	bl	4330 <readstat_variable_get_missing_ranges_count@plt>
   188c0:	subs	r6, r0, #0
   188c4:	ble	18d70 <sav_begin_data+0xc34>
   188c8:	mov	r8, #0
   188cc:	add	r5, sp, #96	; 0x60
   188d0:	add	r4, sp, #160	; 0xa0
   188d4:	b	188e4 <sav_begin_data+0x7a8>
   188d8:	add	r8, r8, #1
   188dc:	cmp	r6, r8
   188e0:	beq	18978 <sav_begin_data+0x83c>
   188e4:	mov	r2, r8
   188e8:	ldr	r9, [sp, #16]
   188ec:	mov	r1, r9
   188f0:	mov	r0, r5
   188f4:	bl	3f64 <readstat_variable_get_missing_range_lo@plt>
   188f8:	mov	r2, r8
   188fc:	mov	r1, r9
   18900:	mov	r0, r4
   18904:	bl	4354 <readstat_variable_get_missing_range_hi@plt>
   18908:	ldm	r5, {r0, r1, r2, r3}
   1890c:	bl	3fd0 <readstat_string_value@plt>
   18910:	mov	r9, r0
   18914:	ldm	r4, {r0, r1, r2, r3}
   18918:	bl	3fd0 <readstat_string_value@plt>
   1891c:	mov	sl, r0
   18920:	cmp	r9, #0
   18924:	cmpne	r0, #0
   18928:	beq	188d8 <sav_begin_data+0x79c>
   1892c:	mov	r1, r0
   18930:	mov	r0, r9
   18934:	bl	3e20 <strcmp@plt>
   18938:	cmp	r0, #0
   1893c:	beq	188d8 <sav_begin_data+0x79c>
   18940:	mov	r2, #8
   18944:	mov	r1, r9
   18948:	ldr	r0, [sp, #12]
   1894c:	bl	457c <readstat_write_space_padded_string@plt>
   18950:	cmp	r0, #0
   18954:	bne	1881c <sav_begin_data+0x6e0>
   18958:	mov	r2, #8
   1895c:	mov	r1, sl
   18960:	ldr	r0, [sp, #12]
   18964:	bl	457c <readstat_write_space_padded_string@plt>
   18968:	cmp	r0, #0
   1896c:	moveq	r8, #2
   18970:	beq	1897c <sav_begin_data+0x840>
   18974:	b	1881c <sav_begin_data+0x6e0>
   18978:	mov	r8, #0
   1897c:	mov	r4, #0
   18980:	add	r9, sp, #96	; 0x60
   18984:	add	sl, sp, #160	; 0xa0
   18988:	mov	fp, #8
   1898c:	b	1899c <sav_begin_data+0x860>
   18990:	add	r4, r4, #1
   18994:	cmp	r6, r4
   18998:	beq	18d70 <sav_begin_data+0xc34>
   1899c:	mov	r2, r4
   189a0:	ldr	r5, [sp, #16]
   189a4:	mov	r1, r5
   189a8:	mov	r0, r9
   189ac:	bl	3f64 <readstat_variable_get_missing_range_lo@plt>
   189b0:	mov	r2, r4
   189b4:	mov	r1, r5
   189b8:	mov	r0, sl
   189bc:	bl	4354 <readstat_variable_get_missing_range_hi@plt>
   189c0:	ldm	r9, {r0, r1, r2, r3}
   189c4:	bl	3fd0 <readstat_string_value@plt>
   189c8:	mov	r5, r0
   189cc:	ldm	sl, {r0, r1, r2, r3}
   189d0:	bl	3fd0 <readstat_string_value@plt>
   189d4:	mov	r1, r0
   189d8:	cmp	r5, #0
   189dc:	cmpne	r0, #0
   189e0:	beq	18990 <sav_begin_data+0x854>
   189e4:	mov	r0, r5
   189e8:	bl	3e20 <strcmp@plt>
   189ec:	cmp	r0, #0
   189f0:	bne	18990 <sav_begin_data+0x854>
   189f4:	mov	r2, fp
   189f8:	mov	r1, r5
   189fc:	ldr	r0, [sp, #12]
   18a00:	bl	457c <readstat_write_space_padded_string@plt>
   18a04:	cmp	r0, #0
   18a08:	bne	18d90 <sav_begin_data+0xc54>
   18a0c:	add	r8, r8, #1
   18a10:	cmp	r8, #3
   18a14:	bne	18990 <sav_begin_data+0x854>
   18a18:	b	18d70 <sav_begin_data+0xc34>
   18a1c:	mov	r7, r6
   18a20:	b	18d90 <sav_begin_data+0xc54>
   18a24:	str	r5, [sp, #160]	; 0xa0
   18a28:	add	r1, sp, #112	; 0x70
   18a2c:	ldr	r0, [sp, #16]
   18a30:	bl	4120 <spss_format_for_variable@plt>
   18a34:	str	r5, [sp, #116]	; 0x74
   18a38:	cmp	r0, #0
   18a3c:	bne	19fe0 <sav_begin_data+0x1ea4>
   18a40:	ldr	r3, [sp, #120]	; 0x78
   18a44:	ldr	r2, [sp, #112]	; 0x70
   18a48:	orr	r3, r3, r2, lsl #16
   18a4c:	cmp	r5, #255	; 0xff
   18a50:	movlt	r2, r5
   18a54:	movge	r2, #255	; 0xff
   18a58:	lsl	r2, r2, #8
   18a5c:	uxth	r2, r2
   18a60:	orr	r3, r3, r2
   18a64:	str	r3, [sp, #172]	; 0xac
   18a68:	str	r3, [sp, #176]	; 0xb0
   18a6c:	ldr	r3, [pc, #1768]	; 1915c <sav_begin_data+0x1020>
   18a70:	str	r3, [sp, #180]	; 0xb4
   18a74:	str	r3, [sp, #184]	; 0xb8
   18a78:	cmp	r6, #7
   18a7c:	bls	18dc4 <sav_begin_data+0xc88>
   18a80:	mov	r2, #28
   18a84:	add	r1, sp, #160	; 0xa0
   18a88:	ldr	r6, [sp, #12]
   18a8c:	mov	r0, r6
   18a90:	bl	4480 <readstat_write_bytes@plt>
   18a94:	cmp	r0, #0
   18a98:	bne	18b78 <sav_begin_data+0xa3c>
   18a9c:	add	r1, r5, #7
   18aa0:	lsr	r1, r1, #3
   18aa4:	sub	r1, r1, #1
   18aa8:	cmp	r1, #31
   18aac:	movge	r1, #31
   18ab0:	mov	r0, r6
   18ab4:	bl	17b48 <sav_emit_blank_variable_records>
   18ab8:	cmp	r0, #0
   18abc:	bne	19ff0 <sav_begin_data+0x1eb4>
   18ac0:	add	r4, r4, #1
   18ac4:	add	r8, r8, #252	; 0xfc
   18ac8:	cmp	r9, r4
   18acc:	beq	18b80 <sav_begin_data+0xa44>
   18ad0:	cmp	sl, r4
   18ad4:	ldreq	r3, [sp, #16]
   18ad8:	ldreq	r5, [r3, #1600]	; 0x640
   18adc:	subeq	r5, r5, r8
   18ae0:	movne	r5, #255	; 0xff
   18ae4:	mov	r3, #2
   18ae8:	str	r3, [sp, #84]	; 0x54
   18aec:	mov	r2, #0
   18af0:	str	r2, [sp, #160]	; 0xa0
   18af4:	str	r2, [sp, #164]	; 0xa4
   18af8:	str	r2, [sp, #168]	; 0xa8
   18afc:	str	r2, [sp, #172]	; 0xac
   18b00:	str	r2, [sp, #176]	; 0xb0
   18b04:	str	r2, [sp, #180]	; 0xb4
   18b08:	str	r2, [sp, #184]	; 0xb8
   18b0c:	add	r3, r7, #9
   18b10:	ldr	r2, [sp, #24]
   18b14:	mov	r1, #9
   18b18:	add	r6, sp, #96	; 0x60
   18b1c:	mov	r0, r6
   18b20:	bl	42ac <snprintf@plt>
   18b24:	mov	r0, r6
   18b28:	bl	4228 <strlen@plt>
   18b2c:	mov	r6, r0
   18b30:	ldr	r3, [pc, #1576]	; 19160 <sav_begin_data+0x1024>
   18b34:	umull	r2, r3, r3, r4
   18b38:	lsr	r3, r3, #3
   18b3c:	add	r3, r3, r3, lsl #3
   18b40:	sub	r3, r4, r3, lsl #2
   18b44:	cmp	r3, #9
   18b48:	add	fp, r0, #1
   18b4c:	addle	r3, r3, #48	; 0x30
   18b50:	addgt	r3, r3, #55	; 0x37
   18b54:	add	r2, sp, #416	; 0x1a0
   18b58:	add	r2, r2, r0
   18b5c:	strb	r3, [r2, #-320]	; 0xfffffec0
   18b60:	mov	r2, #4
   18b64:	ldr	r1, [sp, #20]
   18b68:	ldr	r0, [sp, #12]
   18b6c:	bl	4480 <readstat_write_bytes@plt>
   18b70:	cmp	r0, #0
   18b74:	beq	18a24 <sav_begin_data+0x8e8>
   18b78:	cmp	r0, #0
   18b7c:	bne	19ff8 <sav_begin_data+0x1ebc>
   18b80:	ldr	r3, [sp, #28]
   18b84:	add	r2, r3, #1
   18b88:	str	r2, [sp, #28]
   18b8c:	add	r7, r7, #15
   18b90:	ldr	r3, [sp, #12]
   18b94:	ldr	r3, [r3, #28]
   18b98:	cmp	r2, r3
   18b9c:	bge	18dd8 <sav_begin_data+0xc9c>
   18ba0:	ldr	r1, [sp, #28]
   18ba4:	ldr	r5, [sp, #12]
   18ba8:	mov	r0, r5
   18bac:	bl	43a8 <readstat_get_variable@plt>
   18bb0:	mov	r6, r0
   18bb4:	str	r0, [sp, #16]
   18bb8:	add	r4, sp, #416	; 0x1a0
   18bbc:	mov	r3, #2
   18bc0:	str	r3, [r4, #-356]!	; 0xfffffe9c
   18bc4:	mov	r2, r7
   18bc8:	mov	r1, #9
   18bcc:	ldr	r0, [sp, #20]
   18bd0:	bl	17d18 <sav_format_variable_name>
   18bd4:	str	r0, [sp, #40]	; 0x28
   18bd8:	mov	r2, #4
   18bdc:	mov	r1, r4
   18be0:	mov	r0, r5
   18be4:	bl	4480 <readstat_write_bytes@plt>
   18be8:	cmp	r0, #0
   18bec:	bne	18b78 <sav_begin_data+0xa3c>
   18bf0:	mov	r2, #0
   18bf4:	str	r2, [sp, #112]	; 0x70
   18bf8:	str	r2, [sp, #116]	; 0x74
   18bfc:	str	r2, [sp, #120]	; 0x78
   18c00:	str	r2, [sp, #124]	; 0x7c
   18c04:	str	r2, [sp, #128]	; 0x80
   18c08:	str	r2, [sp, #132]	; 0x84
   18c0c:	str	r2, [sp, #136]	; 0x88
   18c10:	ldr	r3, [r6]
   18c14:	cmp	r3, #0
   18c18:	bne	18c2c <sav_begin_data+0xaf0>
   18c1c:	ldr	r3, [r6, #1600]	; 0x640
   18c20:	cmp	r3, #255	; 0xff
   18c24:	movcs	r3, #255	; 0xff
   18c28:	str	r3, [sp, #112]	; 0x70
   18c2c:	ldr	r2, [sp, #16]
   18c30:	ldrb	r3, [r2, #564]	; 0x234
   18c34:	adds	r3, r3, #0
   18c38:	movne	r3, #1
   18c3c:	str	r3, [sp, #116]	; 0x74
   18c40:	ldr	r3, [r2]
   18c44:	cmp	r3, #5
   18c48:	beq	185bc <sav_begin_data+0x480>
   18c4c:	ldr	r0, [sp, #16]
   18c50:	bl	42f4 <readstat_variable_get_storage_width@plt>
   18c54:	cmp	r0, #8
   18c58:	movhi	sl, #0
   18c5c:	bls	18664 <sav_begin_data+0x528>
   18c60:	str	sl, [sp, #120]	; 0x78
   18c64:	add	r1, sp, #160	; 0xa0
   18c68:	ldr	r0, [sp, #16]
   18c6c:	bl	4120 <spss_format_for_variable@plt>
   18c70:	cmp	r0, #0
   18c74:	bne	19fd0 <sav_begin_data+0x1e94>
   18c78:	ldr	r3, [sp, #164]	; 0xa4
   18c7c:	cmp	r3, #255	; 0xff
   18c80:	movge	r3, #255	; 0xff
   18c84:	lsl	r3, r3, #8
   18c88:	uxth	r3, r3
   18c8c:	ldr	r2, [sp, #168]	; 0xa8
   18c90:	ldr	r1, [sp, #160]	; 0xa0
   18c94:	orr	r2, r2, r1, lsl #16
   18c98:	orr	r3, r3, r2
   18c9c:	str	r3, [sp, #124]	; 0x7c
   18ca0:	str	r3, [sp, #128]	; 0x80
   18ca4:	ldr	r3, [pc, #1200]	; 1915c <sav_begin_data+0x1020>
   18ca8:	str	r3, [sp, #132]	; 0x84
   18cac:	str	r3, [sp, #136]	; 0x88
   18cb0:	ldr	r3, [sp, #40]	; 0x28
   18cb4:	sub	r3, r3, #1
   18cb8:	cmp	r3, #7
   18cbc:	bls	18714 <sav_begin_data+0x5d8>
   18cc0:	mov	r2, #28
   18cc4:	add	r1, sp, #112	; 0x70
   18cc8:	ldr	r0, [sp, #12]
   18ccc:	bl	4480 <readstat_write_bytes@plt>
   18cd0:	cmp	r0, #0
   18cd4:	bne	18b78 <sav_begin_data+0xa3c>
   18cd8:	ldr	r3, [sp, #16]
   18cdc:	add	r4, r3, #564	; 0x234
   18ce0:	mov	r0, r4
   18ce4:	bl	4228 <strlen@plt>
   18ce8:	cmp	r0, #0
   18cec:	beq	18d50 <sav_begin_data+0xc14>
   18cf0:	cmp	r0, #256	; 0x100
   18cf4:	strls	r0, [sp, #96]	; 0x60
   18cf8:	movhi	r3, #256	; 0x100
   18cfc:	strhi	r3, [sp, #96]	; 0x60
   18d00:	mov	r2, #4
   18d04:	add	r1, sp, #96	; 0x60
   18d08:	ldr	r0, [sp, #12]
   18d0c:	bl	4480 <readstat_write_bytes@plt>
   18d10:	cmp	r0, #0
   18d14:	bne	18b78 <sav_begin_data+0xa3c>
   18d18:	ldr	r5, [sp, #96]	; 0x60
   18d1c:	add	r5, r5, #3
   18d20:	bic	r5, r5, #3
   18d24:	mov	r2, r5
   18d28:	mov	r1, r4
   18d2c:	add	r4, sp, #160	; 0xa0
   18d30:	mov	r0, r4
   18d34:	bl	42e8 <strncpy@plt>
   18d38:	mov	r2, r5
   18d3c:	mov	r1, r4
   18d40:	ldr	r0, [sp, #12]
   18d44:	bl	4480 <readstat_write_bytes@plt>
   18d48:	cmp	r0, #0
   18d4c:	bne	18b78 <sav_begin_data+0xa3c>
   18d50:	ldr	r3, [sp, #16]
   18d54:	ldr	r3, [r3]
   18d58:	cmp	r3, #5
   18d5c:	beq	18728 <sav_begin_data+0x5ec>
   18d60:	ldr	r0, [sp, #16]
   18d64:	bl	42f4 <readstat_variable_get_storage_width@plt>
   18d68:	cmp	r0, #8
   18d6c:	bls	188b8 <sav_begin_data+0x77c>
   18d70:	ldr	r3, [sp, #16]
   18d74:	ldr	r1, [r3, #1596]	; 0x63c
   18d78:	lsr	r1, r1, #3
   18d7c:	sub	r1, r1, #1
   18d80:	cmp	r1, #31
   18d84:	movge	r1, #31
   18d88:	ldr	r0, [sp, #12]
   18d8c:	bl	17b48 <sav_emit_blank_variable_records>
   18d90:	cmp	r0, #0
   18d94:	bne	19fd8 <sav_begin_data+0x1e9c>
   18d98:	ldr	r3, [sp, #16]
   18d9c:	ldr	r1, [r3, #1600]	; 0x640
   18da0:	ldr	r0, [r3]
   18da4:	bl	17a50 <sav_variable_segments>
   18da8:	mov	r9, r0
   18dac:	cmp	r0, #1
   18db0:	ble	18b80 <sav_begin_data+0xa44>
   18db4:	mov	r8, #252	; 0xfc
   18db8:	mov	r4, #1
   18dbc:	sub	sl, r0, #1
   18dc0:	b	18ad0 <sav_begin_data+0x994>
   18dc4:	mov	r2, fp
   18dc8:	add	r1, sp, #96	; 0x60
   18dcc:	add	r0, sp, #180	; 0xb4
   18dd0:	bl	3f40 <memcpy@plt>
   18dd4:	b	18a80 <sav_begin_data+0x944>
   18dd8:	ldr	sl, [sp, #12]
   18ddc:	ldr	r3, [sl, #40]	; 0x28
   18de0:	cmp	r3, #0
   18de4:	ble	19004 <sav_begin_data+0xec8>
   18de8:	mov	r8, #0
   18dec:	add	r3, sp, #96	; 0x60
   18df0:	str	r3, [sp, #20]
   18df4:	add	r3, sp, #84	; 0x54
   18df8:	str	r3, [sp, #24]
   18dfc:	add	r9, sp, #112	; 0x70
   18e00:	mov	r5, r9
   18e04:	b	1909c <sav_begin_data+0xf60>
   18e08:	cmp	r9, #5
   18e0c:	beq	18ef0 <sav_begin_data+0xdb4>
   18e10:	cmp	r9, #3
   18e14:	beq	18f08 <sav_begin_data+0xdcc>
   18e18:	mov	r2, #8
   18e1c:	mov	r1, r5
   18e20:	mov	r0, sl
   18e24:	bl	4480 <readstat_write_bytes@plt>
   18e28:	ldr	fp, [r4, #24]
   18e2c:	mov	r3, #120	; 0x78
   18e30:	strb	r3, [sp, #72]	; 0x48
   18e34:	ldr	r3, [r4, #28]
   18e38:	cmp	r3, #119	; 0x77
   18e3c:	strbls	r3, [sp, #72]	; 0x48
   18e40:	mov	r2, #1
   18e44:	ldr	r1, [sp, #12]
   18e48:	mov	r0, sl
   18e4c:	bl	4480 <readstat_write_bytes@plt>
   18e50:	cmp	r0, #0
   18e54:	bne	18ff8 <sav_begin_data+0xebc>
   18e58:	mov	r2, #128	; 0x80
   18e5c:	mov	r1, #32
   18e60:	add	r8, sp, #160	; 0xa0
   18e64:	mov	r0, r8
   18e68:	bl	42d0 <memset@plt>
   18e6c:	ldrb	r4, [sp, #72]	; 0x48
   18e70:	mov	r2, r4
   18e74:	mov	r1, fp
   18e78:	mov	r0, r8
   18e7c:	bl	3f40 <memcpy@plt>
   18e80:	add	r2, r4, #8
   18e84:	bic	r2, r2, #7
   18e88:	sub	r2, r2, #1
   18e8c:	mov	r1, r8
   18e90:	mov	r0, sl
   18e94:	bl	4480 <readstat_write_bytes@plt>
   18e98:	cmp	r0, #0
   18e9c:	bne	19074 <sav_begin_data+0xf38>
   18ea0:	add	r6, r6, #1
   18ea4:	ldr	r3, [sp, #84]	; 0x54
   18ea8:	cmp	r6, r3
   18eac:	bge	18f24 <sav_begin_data+0xde8>
   18eb0:	mov	r1, r6
   18eb4:	mov	r0, r7
   18eb8:	bl	44f8 <readstat_get_value_label@plt>
   18ebc:	mov	r4, r0
   18ec0:	cmp	r9, #0
   18ec4:	bne	18e08 <sav_begin_data+0xccc>
   18ec8:	ldr	r2, [r0, #20]
   18ecc:	ldr	r3, [pc, #648]	; 1915c <sav_begin_data+0x1020>
   18ed0:	str	r3, [r5]
   18ed4:	str	r3, [r5, #4]
   18ed8:	cmp	r2, #8
   18edc:	movcs	r2, #8
   18ee0:	ldr	r1, [r0, #16]
   18ee4:	mov	r0, r5
   18ee8:	bl	3f40 <memcpy@plt>
   18eec:	b	18e18 <sav_begin_data+0xcdc>
   18ef0:	ldrd	r2, [r0]
   18ef4:	strd	r2, [sp, #48]	; 0x30
   18ef8:	ldr	r3, [sp, #16]
   18efc:	ldm	r3, {r0, r1}
   18f00:	stm	r5, {r0, r1}
   18f04:	b	18e18 <sav_begin_data+0xcdc>
   18f08:	vldr	s15, [r0, #8]
   18f0c:	vcvt.f64.s32	d7, s15
   18f10:	vstr	d7, [sp, #48]	; 0x30
   18f14:	ldr	r3, [sp, #16]
   18f18:	ldm	r3, {r0, r1}
   18f1c:	stm	r5, {r0, r1}
   18f20:	b	18e18 <sav_begin_data+0xcdc>
   18f24:	ldr	r8, [sp, #28]
   18f28:	mov	r3, #4
   18f2c:	str	r3, [sp, #96]	; 0x60
   18f30:	mov	r0, r7
   18f34:	bl	180e8 <readstat_label_set_number_short_variables>
   18f38:	str	r0, [sp, #112]	; 0x70
   18f3c:	mov	r2, #4
   18f40:	ldr	r1, [sp, #20]
   18f44:	mov	r0, sl
   18f48:	bl	4480 <readstat_write_bytes@plt>
   18f4c:	cmp	r0, #0
   18f50:	bne	1907c <sav_begin_data+0xf40>
   18f54:	mov	r2, #4
   18f58:	mov	r1, r5
   18f5c:	mov	r0, sl
   18f60:	bl	4480 <readstat_write_bytes@plt>
   18f64:	cmp	r0, #0
   18f68:	bne	19084 <sav_begin_data+0xf48>
   18f6c:	ldr	r3, [r7, #276]	; 0x114
   18f70:	cmp	r3, #0
   18f74:	ble	1908c <sav_begin_data+0xf50>
   18f78:	mov	r4, #0
   18f7c:	add	r6, sp, #160	; 0xa0
   18f80:	b	18f94 <sav_begin_data+0xe58>
   18f84:	add	r4, r4, #1
   18f88:	ldr	r3, [r7, #276]	; 0x114
   18f8c:	cmp	r4, r3
   18f90:	bge	1908c <sav_begin_data+0xf50>
   18f94:	mov	r1, r4
   18f98:	mov	r0, r7
   18f9c:	bl	4474 <readstat_get_label_set_variable@plt>
   18fa0:	ldr	r3, [r0, #1596]	; 0x63c
   18fa4:	cmp	r3, #8
   18fa8:	bhi	18f84 <sav_begin_data+0xe48>
   18fac:	ldr	r3, [r0, #1592]	; 0x638
   18fb0:	add	r2, r3, #7
   18fb4:	cmp	r3, #0
   18fb8:	movlt	r3, r2
   18fbc:	asr	r3, r3, #3
   18fc0:	add	r3, r3, #1
   18fc4:	str	r3, [sp, #160]	; 0xa0
   18fc8:	mov	r2, #4
   18fcc:	mov	r1, r6
   18fd0:	mov	r0, sl
   18fd4:	bl	4480 <readstat_write_bytes@plt>
   18fd8:	cmp	r0, #0
   18fdc:	beq	18f84 <sav_begin_data+0xe48>
   18fe0:	mov	fp, r0
   18fe4:	b	18ffc <sav_begin_data+0xec0>
   18fe8:	mov	fp, r0
   18fec:	b	18ffc <sav_begin_data+0xec0>
   18ff0:	mov	fp, r0
   18ff4:	b	18ffc <sav_begin_data+0xec0>
   18ff8:	mov	fp, r0
   18ffc:	cmp	fp, #0
   19000:	bne	19fe4 <sav_begin_data+0x1ea8>
   19004:	mov	r3, #6
   19008:	str	r3, [sp, #112]	; 0x70
   1900c:	ldr	r3, [sl, #52]	; 0x34
   19010:	str	r3, [sp, #160]	; 0xa0
   19014:	cmp	r3, #0
   19018:	beq	1921c <sav_begin_data+0x10e0>
   1901c:	mov	r2, #4
   19020:	add	r1, sp, #112	; 0x70
   19024:	mov	r0, sl
   19028:	bl	4480 <readstat_write_bytes@plt>
   1902c:	subs	fp, r0, #0
   19030:	beq	1919c <sav_begin_data+0x1060>
   19034:	ldr	r0, [sp, #44]	; 0x2c
   19038:	bl	3ee0 <free@plt>
   1903c:	cmp	fp, #0
   19040:	bne	18154 <sav_begin_data+0x18>
   19044:	ldr	r0, [sl, #76]	; 0x4c
   19048:	bl	4000 <sav_compressed_row_bound@plt>
   1904c:	ldr	r3, [sl, #16]
   19050:	cmp	r3, #1
   19054:	beq	19fac <sav_begin_data+0x1e70>
   19058:	cmp	r3, #2
   1905c:	bne	18154 <sav_begin_data+0x18>
   19060:	ldr	r2, [sl, #4]
   19064:	mov	r3, #0
   19068:	bl	40d8 <zsav_ctx_init@plt>
   1906c:	str	r0, [sl, #300]	; 0x12c
   19070:	b	18154 <sav_begin_data+0x18>
   19074:	mov	fp, r0
   19078:	b	18ffc <sav_begin_data+0xec0>
   1907c:	mov	fp, r0
   19080:	b	18ffc <sav_begin_data+0xec0>
   19084:	mov	fp, r0
   19088:	b	18ffc <sav_begin_data+0xec0>
   1908c:	add	r8, r8, #1
   19090:	ldr	r3, [sl, #40]	; 0x28
   19094:	cmp	r8, r3
   19098:	bge	19004 <sav_begin_data+0xec8>
   1909c:	mov	r1, r8
   190a0:	mov	r0, sl
   190a4:	bl	4450 <readstat_get_label_set@plt>
   190a8:	mov	r7, r0
   190ac:	bl	180e8 <readstat_label_set_number_short_variables>
   190b0:	cmp	r0, #0
   190b4:	ble	1908c <sav_begin_data+0xf50>
   190b8:	ldr	r9, [r7]
   190bc:	ldr	r3, [r7, #264]	; 0x108
   190c0:	str	r3, [sp, #84]	; 0x54
   190c4:	cmp	r3, #0
   190c8:	beq	1908c <sav_begin_data+0xf50>
   190cc:	mov	r3, #3
   190d0:	str	r3, [sp, #96]	; 0x60
   190d4:	mov	r2, #4
   190d8:	ldr	r1, [sp, #20]
   190dc:	mov	r0, sl
   190e0:	bl	4480 <readstat_write_bytes@plt>
   190e4:	cmp	r0, #0
   190e8:	bne	18fe8 <sav_begin_data+0xeac>
   190ec:	mov	r2, #4
   190f0:	ldr	r1, [sp, #24]
   190f4:	mov	r0, sl
   190f8:	bl	4480 <readstat_write_bytes@plt>
   190fc:	cmp	r0, #0
   19100:	bne	18ff0 <sav_begin_data+0xeb4>
   19104:	ldr	r3, [sp, #84]	; 0x54
   19108:	cmp	r3, #0
   1910c:	ble	18f28 <sav_begin_data+0xdec>
   19110:	mov	r6, #0
   19114:	add	r3, sp, #48	; 0x30
   19118:	str	r3, [sp, #16]
   1911c:	add	r3, sp, #72	; 0x48
   19120:	str	r3, [sp, #12]
   19124:	str	r8, [sp, #28]
   19128:	b	18eb0 <sav_begin_data+0xd74>
   1912c:	.word	0x0000e438
   19130:	.word	0x0000e430
   19134:	.word	0x0000e42c
   19138:	.word	0x0000e238
   1913c:	.word	0x324c4624
   19140:	.word	0x0000e2b8
   19144:	.word	0x40590000
   19148:	.word	0x51eb851f
   1914c:	.word	0x0000e220
   19150:	.word	0x0000d030
   19154:	.word	0x0000cbc8
   19158:	.word	0x0000e0b8
   1915c:	.word	0x20202020
   19160:	.word	0x38e38e39
   19164:	.word	0x0000d2e0
   19168:	.word	0x0000fde9
   1916c:	.word	0x0000d254
   19170:	.word	0x7fefffff
   19174:	.word	0x0000d0e0
   19178:	.word	0x0000cf0c
   1917c:	.word	0x0000d018
   19180:	.word	0x0000cf3c
   19184:	.word	0x0a7c5ac5
   19188:	.word	0x000186a0
   1918c:	.word	0x0000cd54
   19190:	.word	0x0000c974
   19194:	.word	0x0000c620
   19198:	.word	0x000003e7
   1919c:	mov	r2, #4
   191a0:	add	r1, sp, #160	; 0xa0
   191a4:	mov	r0, sl
   191a8:	bl	4480 <readstat_write_bytes@plt>
   191ac:	subs	fp, r0, #0
   191b0:	bne	19034 <sav_begin_data+0xef8>
   191b4:	ldr	r3, [sl, #52]	; 0x34
   191b8:	cmp	r3, #0
   191bc:	ble	1921c <sav_begin_data+0x10e0>
   191c0:	mov	r4, #0
   191c4:	ldr	r3, [sl, #48]	; 0x30
   191c8:	ldr	r6, [r3, r4, lsl #2]
   191cc:	mov	r0, r6
   191d0:	bl	4228 <strlen@plt>
   191d4:	mov	r5, r0
   191d8:	cmp	r0, #80	; 0x50
   191dc:	bhi	19fc8 <sav_begin_data+0x1e8c>
   191e0:	mov	r2, r0
   191e4:	mov	r1, r6
   191e8:	mov	r0, sl
   191ec:	bl	4480 <readstat_write_bytes@plt>
   191f0:	cmp	r0, #0
   191f4:	bne	19f9c <sav_begin_data+0x1e60>
   191f8:	rsb	r1, r5, #80	; 0x50
   191fc:	mov	r0, sl
   19200:	bl	3dfc <readstat_write_spaces@plt>
   19204:	cmp	r0, #0
   19208:	bne	19fa4 <sav_begin_data+0x1e68>
   1920c:	add	r4, r4, #1
   19210:	ldr	r3, [sl, #52]	; 0x34
   19214:	cmp	r4, r3
   19218:	blt	191c4 <sav_begin_data+0x1088>
   1921c:	ldr	r3, [pc, #-192]	; 19164 <sav_begin_data+0x1028>
   19220:	add	r3, pc, r3
   19224:	add	r3, r3, #144	; 0x90
   19228:	ldm	r3, {r0, r1, r2, r3}
   1922c:	add	ip, sp, #112	; 0x70
   19230:	stm	ip, {r0, r1, r2, r3}
   19234:	mov	r3, #20
   19238:	str	r3, [sp, #160]	; 0xa0
   1923c:	mov	r3, #0
   19240:	str	r3, [sp, #164]	; 0xa4
   19244:	str	r3, [sp, #168]	; 0xa8
   19248:	mvn	r3, #0
   1924c:	str	r3, [sp, #172]	; 0xac
   19250:	mov	r3, #1
   19254:	str	r3, [sp, #176]	; 0xb0
   19258:	str	r3, [sp, #180]	; 0xb4
   1925c:	bl	3ed4 <machine_is_little_endian@plt>
   19260:	cmp	r0, #0
   19264:	movne	r0, #2
   19268:	moveq	r0, #1
   1926c:	str	r0, [sp, #184]	; 0xb8
   19270:	ldr	r3, [pc, #-272]	; 19168 <sav_begin_data+0x102c>
   19274:	str	r3, [sp, #188]	; 0xbc
   19278:	mov	r2, #16
   1927c:	add	r1, sp, #112	; 0x70
   19280:	mov	r0, sl
   19284:	bl	4480 <readstat_write_bytes@plt>
   19288:	subs	fp, r0, #0
   1928c:	bne	19fbc <sav_begin_data+0x1e80>
   19290:	mov	r2, #32
   19294:	add	r1, sp, #160	; 0xa0
   19298:	mov	r0, sl
   1929c:	bl	4480 <readstat_write_bytes@plt>
   192a0:	subs	fp, r0, #0
   192a4:	bne	19fe4 <sav_begin_data+0x1ea8>
   192a8:	ldr	r3, [pc, #-324]	; 1916c <sav_begin_data+0x1030>
   192ac:	add	r3, pc, r3
   192b0:	add	r3, r3, #48	; 0x30
   192b4:	ldm	r3, {r0, r1, r2, r3}
   192b8:	add	ip, sp, #112	; 0x70
   192bc:	stm	ip, {r0, r1, r2, r3}
   192c0:	mov	r2, #16
   192c4:	mov	r1, ip
   192c8:	mov	r0, sl
   192cc:	bl	4480 <readstat_write_bytes@plt>
   192d0:	subs	fp, r0, #0
   192d4:	bne	19fbc <sav_begin_data+0x1e80>
   192d8:	mvn	r2, #0
   192dc:	mvn	r3, #1048576	; 0x100000
   192e0:	add	r1, sp, #160	; 0xa0
   192e4:	strd	r2, [r1]
   192e8:	mvn	r2, #0
   192ec:	ldr	r3, [pc, #-388]	; 19170 <sav_begin_data+0x1034>
   192f0:	strd	r2, [r1, #8]
   192f4:	mvn	r2, #1
   192f8:	mvn	r3, #1048576	; 0x100000
   192fc:	strd	r2, [r1, #16]
   19300:	mov	r2, #24
   19304:	mov	r0, sl
   19308:	bl	4480 <readstat_write_bytes@plt>
   1930c:	subs	fp, r0, #0
   19310:	bne	19fe4 <sav_begin_data+0x1ea8>
   19314:	mov	r2, #0
   19318:	str	r2, [sp, #172]	; 0xac
   1931c:	mov	r3, #7
   19320:	str	r3, [sp, #160]	; 0xa0
   19324:	mov	r3, #11
   19328:	str	r3, [sp, #164]	; 0xa4
   1932c:	mov	r3, #4
   19330:	str	r3, [sp, #168]	; 0xa8
   19334:	ldr	r3, [sl, #28]
   19338:	cmp	r3, r2
   1933c:	ble	19ae4 <sav_begin_data+0x19a8>
   19340:	mov	r4, r2
   19344:	mov	r5, r2
   19348:	mov	r1, r5
   1934c:	mov	r0, sl
   19350:	bl	43a8 <readstat_get_variable@plt>
   19354:	ldr	r1, [r0, #1600]	; 0x640
   19358:	ldr	r0, [r0]
   1935c:	bl	17a50 <sav_variable_segments>
   19360:	add	r4, r4, r0
   19364:	add	r5, r5, #1
   19368:	ldr	r3, [sl, #28]
   1936c:	cmp	r5, r3
   19370:	blt	19348 <sav_begin_data+0x120c>
   19374:	add	r4, r4, r4, lsl #1
   19378:	str	r4, [sp, #172]	; 0xac
   1937c:	mov	r2, #16
   19380:	add	r1, sp, #160	; 0xa0
   19384:	mov	r0, sl
   19388:	bl	4480 <readstat_write_bytes@plt>
   1938c:	subs	fp, r0, #0
   19390:	bne	19fbc <sav_begin_data+0x1e80>
   19394:	ldr	r3, [sl, #28]
   19398:	cmp	r3, #0
   1939c:	ble	1941c <sav_begin_data+0x12e0>
   193a0:	mov	r4, #0
   193a4:	mov	r5, #8
   193a8:	add	r9, sp, #84	; 0x54
   193ac:	add	r8, sp, #96	; 0x60
   193b0:	add	r7, sp, #112	; 0x70
   193b4:	mov	r1, r4
   193b8:	mov	r0, sl
   193bc:	bl	43a8 <readstat_get_variable@plt>
   193c0:	mov	r6, r0
   193c4:	bl	4348 <readstat_variable_get_measure@plt>
   193c8:	bl	4090 <spss_measure_from_readstat_measure@plt>
   193cc:	str	r0, [sp, #84]	; 0x54
   193d0:	mov	r0, r6
   193d4:	bl	424c <readstat_variable_get_display_width@plt>
   193d8:	cmp	r0, #0
   193dc:	movle	r0, r5
   193e0:	str	r0, [sp, #96]	; 0x60
   193e4:	mov	r0, r6
   193e8:	bl	445c <readstat_variable_get_alignment@plt>
   193ec:	bl	3e80 <spss_alignment_from_readstat_alignment@plt>
   193f0:	str	r0, [sp, #112]	; 0x70
   193f4:	ldr	r1, [r6, #1600]	; 0x640
   193f8:	ldr	r0, [r6]
   193fc:	bl	17a50 <sav_variable_segments>
   19400:	mov	r6, r0
   19404:	cmp	r6, #0
   19408:	bne	19aec <sav_begin_data+0x19b0>
   1940c:	add	r4, r4, #1
   19410:	ldr	r3, [sl, #28]
   19414:	cmp	r4, r3
   19418:	blt	193b4 <sav_begin_data+0x1278>
   1941c:	ldr	r3, [pc, #-688]	; 19174 <sav_begin_data+0x1038>
   19420:	add	r3, pc, r3
   19424:	add	r3, r3, #64	; 0x40
   19428:	ldm	r3, {r0, r1, r2, r3}
   1942c:	add	ip, sp, #160	; 0xa0
   19430:	stm	ip, {r0, r1, r2, r3}
   19434:	ldr	r3, [sl, #28]
   19438:	cmp	r3, #0
   1943c:	ble	194b8 <sav_begin_data+0x137c>
   19440:	ldr	r6, [sp, #44]	; 0x2c
   19444:	mov	r5, #0
   19448:	add	r8, sp, #112	; 0x70
   1944c:	mov	r7, #9
   19450:	mov	r1, r5
   19454:	mov	r0, sl
   19458:	bl	43a8 <readstat_get_variable@plt>
   1945c:	mov	r9, r0
   19460:	mov	r2, r6
   19464:	mov	r1, r7
   19468:	mov	r0, r8
   1946c:	bl	17d18 <sav_format_variable_name>
   19470:	mov	r4, r0
   19474:	add	r0, r9, #8
   19478:	bl	4228 <strlen@plt>
   1947c:	cmp	r0, #0
   19480:	cmpne	r4, #0
   19484:	beq	194a4 <sav_begin_data+0x1368>
   19488:	ldr	r3, [sp, #172]	; 0xac
   1948c:	add	r3, r3, #2
   19490:	add	r3, r3, r4
   19494:	cmp	r0, #64	; 0x40
   19498:	addls	r3, r3, r0
   1949c:	addhi	r3, r3, #64	; 0x40
   194a0:	str	r3, [sp, #172]	; 0xac
   194a4:	add	r5, r5, #1
   194a8:	add	r6, r6, #15
   194ac:	ldr	r3, [sl, #28]
   194b0:	cmp	r5, r3
   194b4:	blt	19450 <sav_begin_data+0x1314>
   194b8:	ldr	r3, [sp, #172]	; 0xac
   194bc:	cmp	r3, #0
   194c0:	ble	195e0 <sav_begin_data+0x14a4>
   194c4:	sub	r3, r3, #1
   194c8:	str	r3, [sp, #172]	; 0xac
   194cc:	mov	r2, #16
   194d0:	add	r1, sp, #160	; 0xa0
   194d4:	mov	r0, sl
   194d8:	bl	4480 <readstat_write_bytes@plt>
   194dc:	subs	fp, r0, #0
   194e0:	bne	19fbc <sav_begin_data+0x1e80>
   194e4:	ldr	r3, [sl, #28]
   194e8:	cmp	r3, #0
   194ec:	ble	195e0 <sav_begin_data+0x14a4>
   194f0:	ldr	r7, [sp, #44]	; 0x2c
   194f4:	mov	r9, #1
   194f8:	mov	r4, #0
   194fc:	add	r3, sp, #112	; 0x70
   19500:	str	r3, [sp, #12]
   19504:	mov	r8, #9
   19508:	mov	r6, #61	; 0x3d
   1950c:	add	r3, sp, #84	; 0x54
   19510:	str	r3, [sp, #16]
   19514:	mov	fp, r7
   19518:	mov	r7, r4
   1951c:	mov	r1, r7
   19520:	mov	r0, sl
   19524:	bl	43a8 <readstat_get_variable@plt>
   19528:	mov	r5, r0
   1952c:	mov	r2, fp
   19530:	mov	r1, r8
   19534:	ldr	r0, [sp, #12]
   19538:	bl	17d18 <sav_format_variable_name>
   1953c:	add	r5, r5, #8
   19540:	mov	r0, r5
   19544:	bl	4228 <strlen@plt>
   19548:	strb	r6, [sp, #84]	; 0x54
   1954c:	strb	r8, [sp, #96]	; 0x60
   19550:	cmp	r0, #0
   19554:	beq	195cc <sav_begin_data+0x1490>
   19558:	cmp	r0, #64	; 0x40
   1955c:	movcc	r4, r0
   19560:	movcs	r4, #64	; 0x40
   19564:	cmp	r9, #0
   19568:	bne	19584 <sav_begin_data+0x1448>
   1956c:	mov	r2, #1
   19570:	add	r1, sp, #96	; 0x60
   19574:	mov	r0, sl
   19578:	bl	4480 <readstat_write_bytes@plt>
   1957c:	cmp	r0, #0
   19580:	bne	19b48 <sav_begin_data+0x1a0c>
   19584:	ldr	r1, [sp, #12]
   19588:	mov	r0, sl
   1958c:	bl	4180 <readstat_write_string@plt>
   19590:	cmp	r0, #0
   19594:	bne	19b48 <sav_begin_data+0x1a0c>
   19598:	mov	r2, #1
   1959c:	ldr	r1, [sp, #16]
   195a0:	mov	r0, sl
   195a4:	bl	4480 <readstat_write_bytes@plt>
   195a8:	cmp	r0, #0
   195ac:	bne	19b48 <sav_begin_data+0x1a0c>
   195b0:	mov	r2, r4
   195b4:	mov	r1, r5
   195b8:	mov	r0, sl
   195bc:	bl	4480 <readstat_write_bytes@plt>
   195c0:	cmp	r0, #0
   195c4:	bne	19b48 <sav_begin_data+0x1a0c>
   195c8:	mov	r9, #0
   195cc:	add	r7, r7, #1
   195d0:	add	fp, fp, #15
   195d4:	ldr	r3, [sl, #28]
   195d8:	cmp	r7, r3
   195dc:	blt	1951c <sav_begin_data+0x13e0>
   195e0:	mov	r3, #0
   195e4:	strb	r3, [sp, #84]	; 0x54
   195e8:	mov	r3, #9
   195ec:	strb	r3, [sp, #85]	; 0x55
   195f0:	ldr	r3, [pc, #-1152]	; 19178 <sav_begin_data+0x103c>
   195f4:	add	r3, pc, r3
   195f8:	add	r3, r3, #80	; 0x50
   195fc:	ldm	r3, {r0, r1, r2, r3}
   19600:	add	ip, sp, #160	; 0xa0
   19604:	stm	ip, {r0, r1, r2, r3}
   19608:	ldr	r3, [sl, #28]
   1960c:	cmp	r3, #0
   19610:	ble	196c0 <sav_begin_data+0x1584>
   19614:	ldr	r5, [sp, #44]	; 0x2c
   19618:	mov	r4, #0
   1961c:	add	r7, sp, #96	; 0x60
   19620:	ldr	r3, [pc, #-1196]	; 1917c <sav_begin_data+0x1040>
   19624:	add	r3, pc, r3
   19628:	str	r3, [sp, #12]
   1962c:	add	r6, sp, #112	; 0x70
   19630:	ldr	fp, [pc, #-1204]	; 19184 <sav_begin_data+0x1048>
   19634:	ldr	r9, [pc, #-1204]	; 19188 <sav_begin_data+0x104c>
   19638:	mov	r1, r4
   1963c:	mov	r0, sl
   19640:	bl	43a8 <readstat_get_variable@plt>
   19644:	mov	r8, r0
   19648:	ldr	r3, [r0, #1600]	; 0x640
   1964c:	cmp	r3, #255	; 0xff
   19650:	bls	196ac <sav_begin_data+0x1570>
   19654:	mov	r2, r5
   19658:	mov	r1, #9
   1965c:	mov	r0, r7
   19660:	bl	17d18 <sav_format_variable_name>
   19664:	ldr	r2, [r8, #1600]	; 0x640
   19668:	lsr	r3, r2, #5
   1966c:	umull	r1, r3, fp, r3
   19670:	lsr	r3, r3, #7
   19674:	mul	r3, r9, r3
   19678:	sub	r3, r2, r3
   1967c:	str	r3, [sp]
   19680:	mov	r3, r7
   19684:	ldr	r2, [sp, #12]
   19688:	mov	r1, #15
   1968c:	mov	r0, r6
   19690:	bl	42ac <snprintf@plt>
   19694:	mov	r0, r6
   19698:	bl	4228 <strlen@plt>
   1969c:	ldr	r3, [sp, #172]	; 0xac
   196a0:	add	r3, r3, #2
   196a4:	add	r3, r3, r0
   196a8:	str	r3, [sp, #172]	; 0xac
   196ac:	add	r4, r4, #1
   196b0:	add	r5, r5, #15
   196b4:	ldr	r3, [sl, #28]
   196b8:	cmp	r4, r3
   196bc:	blt	19638 <sav_begin_data+0x14fc>
   196c0:	ldr	r3, [sp, #172]	; 0xac
   196c4:	cmp	r3, #0
   196c8:	beq	197a8 <sav_begin_data+0x166c>
   196cc:	mov	r2, #16
   196d0:	add	r1, sp, #160	; 0xa0
   196d4:	mov	r0, sl
   196d8:	bl	4480 <readstat_write_bytes@plt>
   196dc:	subs	fp, r0, #0
   196e0:	bne	19fbc <sav_begin_data+0x1e80>
   196e4:	ldr	r3, [sl, #28]
   196e8:	cmp	r3, #0
   196ec:	ble	197a8 <sav_begin_data+0x166c>
   196f0:	ldr	r5, [sp, #44]	; 0x2c
   196f4:	mov	r4, #0
   196f8:	add	r7, sp, #96	; 0x60
   196fc:	ldr	r3, [pc, #-1412]	; 19180 <sav_begin_data+0x1044>
   19700:	add	r3, pc, r3
   19704:	str	r3, [sp, #12]
   19708:	add	r6, sp, #112	; 0x70
   1970c:	ldr	r9, [pc, #-1424]	; 19184 <sav_begin_data+0x1048>
   19710:	ldr	r8, [pc, #-1424]	; 19188 <sav_begin_data+0x104c>
   19714:	mov	r1, r4
   19718:	mov	r0, sl
   1971c:	bl	43a8 <readstat_get_variable@plt>
   19720:	mov	fp, r0
   19724:	ldr	r3, [r0, #1600]	; 0x640
   19728:	cmp	r3, #255	; 0xff
   1972c:	bls	19b58 <sav_begin_data+0x1a1c>
   19730:	mov	r2, r5
   19734:	mov	r1, #9
   19738:	mov	r0, r7
   1973c:	bl	17d18 <sav_format_variable_name>
   19740:	ldr	r2, [fp, #1600]	; 0x640
   19744:	lsr	r3, r2, #5
   19748:	umull	r1, r3, r9, r3
   1974c:	lsr	r3, r3, #7
   19750:	mul	r3, r8, r3
   19754:	sub	r3, r2, r3
   19758:	str	r3, [sp]
   1975c:	mov	r3, r7
   19760:	ldr	r2, [sp, #12]
   19764:	mov	r1, #15
   19768:	mov	r0, r6
   1976c:	bl	42ac <snprintf@plt>
   19770:	mov	r1, r6
   19774:	mov	r0, sl
   19778:	bl	4180 <readstat_write_string@plt>
   1977c:	cmp	r0, #0
   19780:	bne	1979c <sav_begin_data+0x1660>
   19784:	mov	r2, #2
   19788:	add	r1, sp, #84	; 0x54
   1978c:	mov	r0, sl
   19790:	bl	4480 <readstat_write_bytes@plt>
   19794:	cmp	r0, #0
   19798:	beq	19b58 <sav_begin_data+0x1a1c>
   1979c:	mov	fp, r0
   197a0:	cmp	r0, #0
   197a4:	bne	19fe4 <sav_begin_data+0x1ea8>
   197a8:	ldr	r3, [pc, #-1572]	; 1918c <sav_begin_data+0x1050>
   197ac:	add	r3, pc, r3
   197b0:	add	r3, r3, #96	; 0x60
   197b4:	ldm	r3, {r0, r1, r2, r3}
   197b8:	add	ip, sp, #160	; 0xa0
   197bc:	stm	ip, {r0, r1, r2, r3}
   197c0:	ldr	r3, [sl, #40]	; 0x28
   197c4:	cmp	r3, #0
   197c8:	ble	198a0 <sav_begin_data+0x1764>
   197cc:	mov	r5, #0
   197d0:	mov	r1, r5
   197d4:	mov	r0, sl
   197d8:	bl	4450 <readstat_get_label_set@plt>
   197dc:	mov	r6, r0
   197e0:	bl	180e8 <readstat_label_set_number_short_variables>
   197e4:	ldr	r8, [r6, #276]	; 0x114
   197e8:	cmp	r0, r8
   197ec:	bge	19890 <sav_begin_data+0x1754>
   197f0:	ldr	r9, [r6, #264]	; 0x108
   197f4:	cmp	r8, #0
   197f8:	ble	19890 <sav_begin_data+0x1754>
   197fc:	mov	r4, #0
   19800:	mov	r1, r4
   19804:	mov	r0, r6
   19808:	bl	4474 <readstat_get_label_set_variable@plt>
   1980c:	mov	fp, r0
   19810:	add	r0, r0, #8
   19814:	bl	4228 <strlen@plt>
   19818:	mov	r7, r0
   1981c:	mov	r0, fp
   19820:	bl	42f4 <readstat_variable_get_storage_width@plt>
   19824:	mov	fp, r0
   19828:	cmp	r0, #8
   1982c:	ble	19884 <sav_begin_data+0x1748>
   19830:	ldr	r3, [sp, #172]	; 0xac
   19834:	add	r3, r7, r3
   19838:	add	r3, r3, #12
   1983c:	str	r3, [sp, #172]	; 0xac
   19840:	cmp	r9, #0
   19844:	ble	19884 <sav_begin_data+0x1748>
   19848:	mov	r7, #0
   1984c:	mov	r1, r7
   19850:	mov	r0, r6
   19854:	bl	44f8 <readstat_get_value_label@plt>
   19858:	ldr	r2, [r0, #28]
   1985c:	ldr	r3, [sp, #172]	; 0xac
   19860:	add	r3, fp, r3
   19864:	add	r3, r3, #8
   19868:	cmp	r2, #120	; 0x78
   1986c:	addle	r3, r3, r2
   19870:	addgt	r3, r3, #120	; 0x78
   19874:	str	r3, [sp, #172]	; 0xac
   19878:	add	r7, r7, #1
   1987c:	cmp	r9, r7
   19880:	bne	1984c <sav_begin_data+0x1710>
   19884:	add	r4, r4, #1
   19888:	cmp	r4, r8
   1988c:	bne	19800 <sav_begin_data+0x16c4>
   19890:	add	r5, r5, #1
   19894:	ldr	r3, [sl, #40]	; 0x28
   19898:	cmp	r5, r3
   1989c:	blt	197d0 <sav_begin_data+0x1694>
   198a0:	ldr	r3, [sp, #172]	; 0xac
   198a4:	cmp	r3, #0
   198a8:	beq	19b88 <sav_begin_data+0x1a4c>
   198ac:	mov	r2, #16
   198b0:	add	r1, sp, #160	; 0xa0
   198b4:	mov	r0, sl
   198b8:	bl	4480 <readstat_write_bytes@plt>
   198bc:	subs	r3, r0, #0
   198c0:	str	r3, [sp, #16]
   198c4:	bne	1a000 <sav_begin_data+0x1ec4>
   198c8:	ldr	r3, [sl, #40]	; 0x28
   198cc:	cmp	r3, #0
   198d0:	ble	19b88 <sav_begin_data+0x1a4c>
   198d4:	mov	r3, #0
   198d8:	str	r3, [sp, #12]
   198dc:	mov	r9, r3
   198e0:	add	r3, sp, #84	; 0x54
   198e4:	str	r3, [sp, #28]
   198e8:	add	r3, sp, #96	; 0x60
   198ec:	str	r3, [sp, #20]
   198f0:	add	r3, sp, #72	; 0x48
   198f4:	str	r3, [sp, #32]
   198f8:	mov	r1, r9
   198fc:	mov	r0, sl
   19900:	bl	4450 <readstat_get_label_set@plt>
   19904:	mov	fp, r0
   19908:	bl	180e8 <readstat_label_set_number_short_variables>
   1990c:	ldr	r7, [fp, #276]	; 0x114
   19910:	cmp	r0, r7
   19914:	bge	19ab8 <sav_begin_data+0x197c>
   19918:	ldr	r3, [fp, #264]	; 0x108
   1991c:	str	r3, [sp, #72]	; 0x48
   19920:	cmp	r7, #0
   19924:	ble	19ab8 <sav_begin_data+0x197c>
   19928:	mov	r4, #0
   1992c:	mov	r1, r4
   19930:	mov	r0, fp
   19934:	bl	4474 <readstat_get_label_set_variable@plt>
   19938:	mov	r6, r0
   1993c:	add	r5, r0, #8
   19940:	mov	r0, r5
   19944:	bl	4228 <strlen@plt>
   19948:	str	r0, [sp, #84]	; 0x54
   1994c:	mov	r0, r6
   19950:	bl	42f4 <readstat_variable_get_storage_width@plt>
   19954:	mov	r1, r0
   19958:	str	r0, [sp, #96]	; 0x60
   1995c:	cmp	r0, #8
   19960:	ble	19aac <sav_begin_data+0x1970>
   19964:	ldr	r0, [sp, #12]
   19968:	bl	4018 <realloc@plt>
   1996c:	str	r0, [sp, #12]
   19970:	ldr	r2, [sp, #96]	; 0x60
   19974:	mov	r1, #32
   19978:	bl	42d0 <memset@plt>
   1997c:	mov	r2, #4
   19980:	ldr	r1, [sp, #28]
   19984:	mov	r0, sl
   19988:	bl	4480 <readstat_write_bytes@plt>
   1998c:	cmp	r0, #0
   19990:	bne	19b70 <sav_begin_data+0x1a34>
   19994:	ldr	r2, [sp, #84]	; 0x54
   19998:	mov	r1, r5
   1999c:	mov	r0, sl
   199a0:	bl	4480 <readstat_write_bytes@plt>
   199a4:	cmp	r0, #0
   199a8:	bne	19c90 <sav_begin_data+0x1b54>
   199ac:	mov	r2, #4
   199b0:	ldr	r1, [sp, #20]
   199b4:	mov	r0, sl
   199b8:	bl	4480 <readstat_write_bytes@plt>
   199bc:	cmp	r0, #0
   199c0:	bne	19c98 <sav_begin_data+0x1b5c>
   199c4:	mov	r2, #4
   199c8:	ldr	r1, [sp, #32]
   199cc:	mov	r0, sl
   199d0:	bl	4480 <readstat_write_bytes@plt>
   199d4:	cmp	r0, #0
   199d8:	bne	19ca0 <sav_begin_data+0x1b64>
   199dc:	ldr	r3, [sp, #72]	; 0x48
   199e0:	cmp	r3, #0
   199e4:	ble	19aac <sav_begin_data+0x1970>
   199e8:	mov	r5, #0
   199ec:	add	r3, sp, #112	; 0x70
   199f0:	str	r3, [sp, #24]
   199f4:	mov	r1, r5
   199f8:	mov	r0, fp
   199fc:	bl	44f8 <readstat_get_value_label@plt>
   19a00:	mov	r6, r0
   19a04:	ldr	r8, [r0, #20]
   19a08:	ldr	r3, [r0, #28]
   19a0c:	cmp	r3, #121	; 0x79
   19a10:	movge	r3, #120	; 0x78
   19a14:	str	r3, [sp, #112]	; 0x70
   19a18:	mov	r2, #4
   19a1c:	ldr	r1, [sp, #20]
   19a20:	mov	r0, sl
   19a24:	bl	4480 <readstat_write_bytes@plt>
   19a28:	cmp	r0, #0
   19a2c:	bne	19ca8 <sav_begin_data+0x1b6c>
   19a30:	mov	r2, r8
   19a34:	ldr	r1, [r6, #16]
   19a38:	mov	r0, sl
   19a3c:	bl	4480 <readstat_write_bytes@plt>
   19a40:	cmp	r0, #0
   19a44:	bne	19cb0 <sav_begin_data+0x1b74>
   19a48:	ldr	r2, [sp, #96]	; 0x60
   19a4c:	cmp	r8, r2
   19a50:	bge	19a6c <sav_begin_data+0x1930>
   19a54:	sub	r2, r2, r8
   19a58:	ldr	r1, [sp, #12]
   19a5c:	mov	r0, sl
   19a60:	bl	4480 <readstat_write_bytes@plt>
   19a64:	cmp	r0, #0
   19a68:	bne	19cb8 <sav_begin_data+0x1b7c>
   19a6c:	mov	r2, #4
   19a70:	ldr	r1, [sp, #24]
   19a74:	mov	r0, sl
   19a78:	bl	4480 <readstat_write_bytes@plt>
   19a7c:	cmp	r0, #0
   19a80:	bne	19cc0 <sav_begin_data+0x1b84>
   19a84:	ldr	r2, [sp, #112]	; 0x70
   19a88:	ldr	r1, [r6, #24]
   19a8c:	mov	r0, sl
   19a90:	bl	4480 <readstat_write_bytes@plt>
   19a94:	cmp	r0, #0
   19a98:	bne	19cc8 <sav_begin_data+0x1b8c>
   19a9c:	add	r5, r5, #1
   19aa0:	ldr	r3, [sp, #72]	; 0x48
   19aa4:	cmp	r5, r3
   19aa8:	blt	199f4 <sav_begin_data+0x18b8>
   19aac:	add	r4, r4, #1
   19ab0:	cmp	r4, r7
   19ab4:	bne	1992c <sav_begin_data+0x17f0>
   19ab8:	add	r9, r9, #1
   19abc:	ldr	r3, [sl, #40]	; 0x28
   19ac0:	cmp	r9, r3
   19ac4:	blt	198f8 <sav_begin_data+0x17bc>
   19ac8:	ldr	r3, [sp, #12]
   19acc:	cmp	r3, #0
   19ad0:	ldrne	fp, [sp, #16]
   19ad4:	beq	19b88 <sav_begin_data+0x1a4c>
   19ad8:	ldr	r0, [sp, #12]
   19adc:	bl	3ee0 <free@plt>
   19ae0:	b	19b80 <sav_begin_data+0x1a44>
   19ae4:	mov	r4, #0
   19ae8:	b	19374 <sav_begin_data+0x1238>
   19aec:	mov	r2, #4
   19af0:	mov	r1, r9
   19af4:	mov	r0, sl
   19af8:	bl	4480 <readstat_write_bytes@plt>
   19afc:	cmp	r0, #0
   19b00:	bne	19b38 <sav_begin_data+0x19fc>
   19b04:	mov	r2, #4
   19b08:	mov	r1, r8
   19b0c:	mov	r0, sl
   19b10:	bl	4480 <readstat_write_bytes@plt>
   19b14:	cmp	r0, #0
   19b18:	bne	19b38 <sav_begin_data+0x19fc>
   19b1c:	mov	r2, #4
   19b20:	mov	r1, r7
   19b24:	mov	r0, sl
   19b28:	bl	4480 <readstat_write_bytes@plt>
   19b2c:	sub	r6, r6, #1
   19b30:	cmp	r0, #0
   19b34:	beq	19404 <sav_begin_data+0x12c8>
   19b38:	mov	fp, r0
   19b3c:	cmp	r0, #0
   19b40:	bne	19fe4 <sav_begin_data+0x1ea8>
   19b44:	b	1941c <sav_begin_data+0x12e0>
   19b48:	mov	fp, r0
   19b4c:	cmp	r0, #0
   19b50:	bne	19fe4 <sav_begin_data+0x1ea8>
   19b54:	b	195e0 <sav_begin_data+0x14a4>
   19b58:	add	r4, r4, #1
   19b5c:	add	r5, r5, #15
   19b60:	ldr	r3, [sl, #28]
   19b64:	cmp	r4, r3
   19b68:	blt	19714 <sav_begin_data+0x15d8>
   19b6c:	b	197a8 <sav_begin_data+0x166c>
   19b70:	mov	fp, r0
   19b74:	ldr	r3, [sp, #12]
   19b78:	cmp	r3, #0
   19b7c:	bne	19ad8 <sav_begin_data+0x199c>
   19b80:	cmp	fp, #0
   19b84:	bne	19fe4 <sav_begin_data+0x1ea8>
   19b88:	ldr	r3, [pc, #-2560]	; 19190 <sav_begin_data+0x1054>
   19b8c:	add	r3, pc, r3
   19b90:	add	r3, r3, #112	; 0x70
   19b94:	ldm	r3, {r0, r1, r2, r3}
   19b98:	add	ip, sp, #160	; 0xa0
   19b9c:	stm	ip, {r0, r1, r2, r3}
   19ba0:	ldr	r8, [sl, #28]
   19ba4:	cmp	r8, #0
   19ba8:	ble	19bf8 <sav_begin_data+0x1abc>
   19bac:	mov	r9, #0
   19bb0:	add	r6, sp, #96	; 0x60
   19bb4:	add	fp, sp, #112	; 0x70
   19bb8:	mov	r1, r9
   19bbc:	mov	r0, sl
   19bc0:	bl	43a8 <readstat_get_variable@plt>
   19bc4:	mov	r7, r0
   19bc8:	add	r0, r0, #8
   19bcc:	bl	4228 <strlen@plt>
   19bd0:	str	r0, [sp, #16]
   19bd4:	mov	r0, r7
   19bd8:	bl	42f4 <readstat_variable_get_storage_width@plt>
   19bdc:	cmp	r0, #8
   19be0:	movgt	r4, #0
   19be4:	movgt	r5, r4
   19be8:	bgt	19d2c <sav_begin_data+0x1bf0>
   19bec:	add	r9, r9, #1
   19bf0:	cmp	r8, r9
   19bf4:	bne	19bb8 <sav_begin_data+0x1a7c>
   19bf8:	ldr	r3, [sp, #172]	; 0xac
   19bfc:	cmp	r3, #0
   19c00:	beq	19edc <sav_begin_data+0x1da0>
   19c04:	mov	r2, #16
   19c08:	add	r1, sp, #160	; 0xa0
   19c0c:	mov	r0, sl
   19c10:	bl	4480 <readstat_write_bytes@plt>
   19c14:	subs	fp, r0, #0
   19c18:	bne	19fbc <sav_begin_data+0x1e80>
   19c1c:	cmp	r8, #0
   19c20:	ble	19edc <sav_begin_data+0x1da0>
   19c24:	mov	r6, #0
   19c28:	add	r9, sp, #96	; 0x60
   19c2c:	add	r4, sp, #112	; 0x70
   19c30:	add	r3, sp, #64	; 0x40
   19c34:	str	r3, [sp, #12]
   19c38:	add	r3, sp, #72	; 0x48
   19c3c:	str	r3, [sp, #20]
   19c40:	mov	r1, r6
   19c44:	mov	r0, sl
   19c48:	bl	43a8 <readstat_get_variable@plt>
   19c4c:	mov	r5, r0
   19c50:	add	r3, r0, #8
   19c54:	str	r3, [sp, #16]
   19c58:	mov	r0, r3
   19c5c:	bl	4228 <strlen@plt>
   19c60:	str	r0, [sp, #72]	; 0x48
   19c64:	mov	r3, #0
   19c68:	strb	r3, [sp, #64]	; 0x40
   19c6c:	mov	r0, r5
   19c70:	bl	42f4 <readstat_variable_get_storage_width@plt>
   19c74:	cmp	r0, #8
   19c78:	movgt	r7, #0
   19c7c:	bgt	19dc0 <sav_begin_data+0x1c84>
   19c80:	add	r6, r6, #1
   19c84:	cmp	r8, r6
   19c88:	bne	19c40 <sav_begin_data+0x1b04>
   19c8c:	b	19edc <sav_begin_data+0x1da0>
   19c90:	mov	fp, r0
   19c94:	b	19b74 <sav_begin_data+0x1a38>
   19c98:	mov	fp, r0
   19c9c:	b	19b74 <sav_begin_data+0x1a38>
   19ca0:	mov	fp, r0
   19ca4:	b	19b74 <sav_begin_data+0x1a38>
   19ca8:	mov	fp, r0
   19cac:	b	19b74 <sav_begin_data+0x1a38>
   19cb0:	mov	fp, r0
   19cb4:	b	19b74 <sav_begin_data+0x1a38>
   19cb8:	mov	fp, r0
   19cbc:	b	19b74 <sav_begin_data+0x1a38>
   19cc0:	mov	fp, r0
   19cc4:	b	19b74 <sav_begin_data+0x1a38>
   19cc8:	mov	fp, r0
   19ccc:	b	19b74 <sav_begin_data+0x1a38>
   19cd0:	mov	r2, r5
   19cd4:	mov	r1, r7
   19cd8:	mov	r0, r6
   19cdc:	bl	3f64 <readstat_variable_get_missing_range_lo@plt>
   19ce0:	mov	r2, r5
   19ce4:	mov	r1, r7
   19ce8:	mov	r0, fp
   19cec:	bl	4354 <readstat_variable_get_missing_range_hi@plt>
   19cf0:	ldm	r6, {r0, r1, r2, r3}
   19cf4:	bl	3fd0 <readstat_string_value@plt>
   19cf8:	str	r0, [sp, #12]
   19cfc:	ldm	fp, {r0, r1, r2, r3}
   19d00:	bl	3fd0 <readstat_string_value@plt>
   19d04:	mov	r1, r0
   19d08:	ldr	r3, [sp, #12]
   19d0c:	cmp	r3, #0
   19d10:	cmpne	r0, #0
   19d14:	beq	19d28 <sav_begin_data+0x1bec>
   19d18:	mov	r0, r3
   19d1c:	bl	3e20 <strcmp@plt>
   19d20:	cmp	r0, #0
   19d24:	addeq	r4, r4, #1
   19d28:	add	r5, r5, #1
   19d2c:	mov	r0, r7
   19d30:	bl	4330 <readstat_variable_get_missing_ranges_count@plt>
   19d34:	cmp	r5, r0
   19d38:	blt	19cd0 <sav_begin_data+0x1b94>
   19d3c:	cmp	r4, #0
   19d40:	beq	19bec <sav_begin_data+0x1ab0>
   19d44:	ldr	r3, [sp, #172]	; 0xac
   19d48:	ldr	r2, [sp, #16]
   19d4c:	add	r3, r2, r3
   19d50:	add	r3, r3, #9
   19d54:	add	r4, r3, r4, lsl #3
   19d58:	str	r4, [sp, #172]	; 0xac
   19d5c:	b	19bec <sav_begin_data+0x1ab0>
   19d60:	mov	r2, r7
   19d64:	mov	r1, r5
   19d68:	mov	r0, r9
   19d6c:	bl	3f64 <readstat_variable_get_missing_range_lo@plt>
   19d70:	mov	r2, r7
   19d74:	mov	r1, r5
   19d78:	mov	r0, r4
   19d7c:	bl	4354 <readstat_variable_get_missing_range_hi@plt>
   19d80:	ldm	r9, {r0, r1, r2, r3}
   19d84:	bl	3fd0 <readstat_string_value@plt>
   19d88:	mov	fp, r0
   19d8c:	ldm	r4, {r0, r1, r2, r3}
   19d90:	bl	3fd0 <readstat_string_value@plt>
   19d94:	mov	r1, r0
   19d98:	cmp	fp, #0
   19d9c:	cmpne	r0, #0
   19da0:	beq	19dbc <sav_begin_data+0x1c80>
   19da4:	mov	r0, fp
   19da8:	bl	3e20 <strcmp@plt>
   19dac:	cmp	r0, #0
   19db0:	ldrbeq	r3, [sp, #64]	; 0x40
   19db4:	addeq	r3, r3, #1
   19db8:	strbeq	r3, [sp, #64]	; 0x40
   19dbc:	add	r7, r7, #1
   19dc0:	mov	r0, r5
   19dc4:	bl	4330 <readstat_variable_get_missing_ranges_count@plt>
   19dc8:	cmp	r7, r0
   19dcc:	blt	19d60 <sav_begin_data+0x1c24>
   19dd0:	ldr	r3, [sp, #12]
   19dd4:	ldrsb	r3, [r3]
   19dd8:	cmp	r3, #0
   19ddc:	beq	19c80 <sav_begin_data+0x1b44>
   19de0:	mov	r2, #4
   19de4:	ldr	r1, [sp, #20]
   19de8:	mov	r0, sl
   19dec:	bl	4480 <readstat_write_bytes@plt>
   19df0:	cmp	r0, #0
   19df4:	bne	19ed0 <sav_begin_data+0x1d94>
   19df8:	ldr	r2, [sp, #72]	; 0x48
   19dfc:	ldr	r1, [sp, #16]
   19e00:	mov	r0, sl
   19e04:	bl	4480 <readstat_write_bytes@plt>
   19e08:	cmp	r0, #0
   19e0c:	bne	19f7c <sav_begin_data+0x1e40>
   19e10:	mov	r2, #1
   19e14:	ldr	r1, [sp, #12]
   19e18:	mov	r0, sl
   19e1c:	bl	4480 <readstat_write_bytes@plt>
   19e20:	cmp	r0, #0
   19e24:	bne	19f84 <sav_begin_data+0x1e48>
   19e28:	add	r1, sp, #416	; 0x1a0
   19e2c:	mov	r3, #8
   19e30:	str	r3, [r1, #-332]!	; 0xfffffeb4
   19e34:	mov	r2, #4
   19e38:	mov	r0, sl
   19e3c:	bl	4480 <readstat_write_bytes@plt>
   19e40:	cmp	r0, #0
   19e44:	bne	19f8c <sav_begin_data+0x1e50>
   19e48:	mov	r7, #0
   19e4c:	mov	r0, r5
   19e50:	bl	4330 <readstat_variable_get_missing_ranges_count@plt>
   19e54:	cmp	r7, r0
   19e58:	bge	19c80 <sav_begin_data+0x1b44>
   19e5c:	mov	r2, r7
   19e60:	mov	r1, r5
   19e64:	mov	r0, r9
   19e68:	bl	3f64 <readstat_variable_get_missing_range_lo@plt>
   19e6c:	mov	r2, r7
   19e70:	mov	r1, r5
   19e74:	mov	r0, r4
   19e78:	bl	4354 <readstat_variable_get_missing_range_hi@plt>
   19e7c:	ldm	r9, {r0, r1, r2, r3}
   19e80:	bl	3fd0 <readstat_string_value@plt>
   19e84:	mov	fp, r0
   19e88:	ldm	r4, {r0, r1, r2, r3}
   19e8c:	bl	3fd0 <readstat_string_value@plt>
   19e90:	mov	r1, r0
   19e94:	cmp	fp, #0
   19e98:	cmpne	r0, #0
   19e9c:	beq	19ec8 <sav_begin_data+0x1d8c>
   19ea0:	mov	r0, fp
   19ea4:	bl	3e20 <strcmp@plt>
   19ea8:	cmp	r0, #0
   19eac:	bne	19ec8 <sav_begin_data+0x1d8c>
   19eb0:	ldr	r2, [sp, #84]	; 0x54
   19eb4:	mov	r1, fp
   19eb8:	mov	r0, sl
   19ebc:	bl	457c <readstat_write_space_padded_string@plt>
   19ec0:	cmp	r0, #0
   19ec4:	bne	19f94 <sav_begin_data+0x1e58>
   19ec8:	add	r7, r7, #1
   19ecc:	b	19e4c <sav_begin_data+0x1d10>
   19ed0:	mov	fp, r0
   19ed4:	cmp	fp, #0
   19ed8:	bne	19fe4 <sav_begin_data+0x1ea8>
   19edc:	ldr	r3, [pc, #-3408]	; 19194 <sav_begin_data+0x1058>
   19ee0:	add	r3, pc, r3
   19ee4:	add	r3, r3, #128	; 0x80
   19ee8:	ldm	r3, {r0, r1, r2, r3}
   19eec:	add	ip, sp, #160	; 0xa0
   19ef0:	stm	ip, {r0, r1, r2, r3}
   19ef4:	mov	r0, #1
   19ef8:	mov	r1, #0
   19efc:	strd	r0, [sp, #96]	; 0x60
   19f00:	ldr	r2, [sl, #80]	; 0x50
   19f04:	asr	r3, r2, #31
   19f08:	strd	r2, [sp, #112]	; 0x70
   19f0c:	mov	r2, #16
   19f10:	mov	r1, ip
   19f14:	mov	r0, sl
   19f18:	bl	4480 <readstat_write_bytes@plt>
   19f1c:	subs	fp, r0, #0
   19f20:	bne	19034 <sav_begin_data+0xef8>
   19f24:	mov	r2, #8
   19f28:	add	r1, sp, #96	; 0x60
   19f2c:	mov	r0, sl
   19f30:	bl	4480 <readstat_write_bytes@plt>
   19f34:	subs	fp, r0, #0
   19f38:	bne	19034 <sav_begin_data+0xef8>
   19f3c:	mov	r2, #8
   19f40:	add	r1, sp, #112	; 0x70
   19f44:	mov	r0, sl
   19f48:	bl	4480 <readstat_write_bytes@plt>
   19f4c:	subs	fp, r0, #0
   19f50:	bne	19fe4 <sav_begin_data+0x1ea8>
   19f54:	mov	r3, #0
   19f58:	add	r1, sp, #160	; 0xa0
   19f5c:	str	r3, [r1, #4]
   19f60:	ldr	r3, [pc, #-3536]	; 19198 <sav_begin_data+0x105c>
   19f64:	str	r3, [sp, #160]	; 0xa0
   19f68:	mov	r2, #8
   19f6c:	mov	r0, sl
   19f70:	bl	4480 <readstat_write_bytes@plt>
   19f74:	mov	fp, r0
   19f78:	b	19034 <sav_begin_data+0xef8>
   19f7c:	mov	fp, r0
   19f80:	b	19ed4 <sav_begin_data+0x1d98>
   19f84:	mov	fp, r0
   19f88:	b	19ed4 <sav_begin_data+0x1d98>
   19f8c:	mov	fp, r0
   19f90:	b	19ed4 <sav_begin_data+0x1d98>
   19f94:	mov	fp, r0
   19f98:	b	19ed4 <sav_begin_data+0x1d98>
   19f9c:	mov	fp, r0
   19fa0:	b	19034 <sav_begin_data+0xef8>
   19fa4:	mov	fp, r0
   19fa8:	b	19034 <sav_begin_data+0xef8>
   19fac:	bl	4258 <readstat_malloc@plt>
   19fb0:	str	r0, [sl, #300]	; 0x12c
   19fb4:	b	18154 <sav_begin_data+0x18>
   19fb8:	mov	fp, #39	; 0x27
   19fbc:	ldr	r0, [sp, #44]	; 0x2c
   19fc0:	bl	3ee0 <free@plt>
   19fc4:	b	18154 <sav_begin_data+0x18>
   19fc8:	mov	fp, #32
   19fcc:	b	19034 <sav_begin_data+0xef8>
   19fd0:	mov	fp, r0
   19fd4:	b	19fe4 <sav_begin_data+0x1ea8>
   19fd8:	mov	fp, r0
   19fdc:	b	19fe4 <sav_begin_data+0x1ea8>
   19fe0:	mov	fp, r0
   19fe4:	ldr	r0, [sp, #44]	; 0x2c
   19fe8:	bl	3ee0 <free@plt>
   19fec:	b	18154 <sav_begin_data+0x18>
   19ff0:	mov	fp, r0
   19ff4:	b	19fe4 <sav_begin_data+0x1ea8>
   19ff8:	mov	fp, r0
   19ffc:	b	19fbc <sav_begin_data+0x1e80>
   1a000:	ldr	fp, [sp, #16]
   1a004:	b	19fe4 <sav_begin_data+0x1ea8>

0001a008 <readstat_begin_writing_sav>:
   1a008:	ldr	r3, [pc, #304]	; 1a140 <readstat_begin_writing_sav+0x138>
   1a00c:	add	r3, pc, r3
   1a010:	ldr	ip, [pc, #300]	; 1a144 <readstat_begin_writing_sav+0x13c>
   1a014:	add	ip, pc, ip
   1a018:	str	ip, [r0, #292]	; 0x124
   1a01c:	ldr	ip, [pc, #292]	; 1a148 <readstat_begin_writing_sav+0x140>
   1a020:	add	ip, pc, ip
   1a024:	str	ip, [r0, #228]	; 0xe4
   1a028:	ldr	ip, [pc, #284]	; 1a14c <readstat_begin_writing_sav+0x144>
   1a02c:	add	ip, pc, ip
   1a030:	str	ip, [r0, #232]	; 0xe8
   1a034:	ldr	ip, [pc, #276]	; 1a150 <readstat_begin_writing_sav+0x148>
   1a038:	add	ip, pc, ip
   1a03c:	str	ip, [r0, #236]	; 0xec
   1a040:	ldr	ip, [pc, #268]	; 1a154 <readstat_begin_writing_sav+0x14c>
   1a044:	add	ip, pc, ip
   1a048:	str	ip, [r0, #240]	; 0xf0
   1a04c:	ldr	ip, [pc, #260]	; 1a158 <readstat_begin_writing_sav+0x150>
   1a050:	add	ip, pc, ip
   1a054:	str	ip, [r0, #244]	; 0xf4
   1a058:	ldr	ip, [pc, #252]	; 1a15c <readstat_begin_writing_sav+0x154>
   1a05c:	add	ip, pc, ip
   1a060:	str	ip, [r0, #248]	; 0xf8
   1a064:	ldr	ip, [pc, #244]	; 1a160 <readstat_begin_writing_sav+0x158>
   1a068:	add	ip, pc, ip
   1a06c:	str	ip, [r0, #252]	; 0xfc
   1a070:	ldr	ip, [pc, #236]	; 1a164 <readstat_begin_writing_sav+0x15c>
   1a074:	add	ip, pc, ip
   1a078:	str	ip, [r0, #256]	; 0x100
   1a07c:	ldr	ip, [pc, #228]	; 1a168 <readstat_begin_writing_sav+0x160>
   1a080:	add	ip, pc, ip
   1a084:	str	ip, [r0, #264]	; 0x108
   1a088:	ldr	ip, [pc, #220]	; 1a16c <readstat_begin_writing_sav+0x164>
   1a08c:	add	ip, pc, ip
   1a090:	str	ip, [r0, #268]	; 0x10c
   1a094:	ldr	ip, [pc, #212]	; 1a170 <readstat_begin_writing_sav+0x168>
   1a098:	add	ip, pc, ip
   1a09c:	str	ip, [r0, #276]	; 0x114
   1a0a0:	ldr	ip, [r0, #8]
   1a0a4:	cmp	ip, #3
   1a0a8:	moveq	ip, #2
   1a0ac:	streq	ip, [r0, #16]
   1a0b0:	beq	1a118 <readstat_begin_writing_sav+0x110>
   1a0b4:	cmp	ip, #0
   1a0b8:	bne	1a0d0 <readstat_begin_writing_sav+0xc8>
   1a0bc:	ldr	ip, [r0, #16]
   1a0c0:	cmp	ip, #2
   1a0c4:	moveq	ip, #3
   1a0c8:	movne	ip, #2
   1a0cc:	str	ip, [r0, #8]
   1a0d0:	ldr	ip, [r0, #16]
   1a0d4:	cmp	ip, #1
   1a0d8:	beq	1a0f4 <readstat_begin_writing_sav+0xec>
   1a0dc:	cmp	ip, #2
   1a0e0:	beq	1a118 <readstat_begin_writing_sav+0x110>
   1a0e4:	cmp	ip, #0
   1a0e8:	beq	1a10c <readstat_begin_writing_sav+0x104>
   1a0ec:	mov	r0, #6
   1a0f0:	bx	lr
   1a0f4:	ldr	ip, [pc, #120]	; 1a174 <readstat_begin_writing_sav+0x16c>
   1a0f8:	add	ip, pc, ip
   1a0fc:	str	ip, [r0, #280]	; 0x118
   1a100:	ldr	ip, [pc, #112]	; 1a178 <readstat_begin_writing_sav+0x170>
   1a104:	ldr	r3, [r3, ip]
   1a108:	str	r3, [r0, #288]	; 0x120
   1a10c:	push	{r4, lr}
   1a110:	bl	3f88 <readstat_begin_writing_file@plt>
   1a114:	pop	{r4, pc}
   1a118:	ldr	ip, [pc, #92]	; 1a17c <readstat_begin_writing_sav+0x174>
   1a11c:	ldr	ip, [r3, ip]
   1a120:	str	ip, [r0, #280]	; 0x118
   1a124:	ldr	ip, [pc, #84]	; 1a180 <readstat_begin_writing_sav+0x178>
   1a128:	ldr	ip, [r3, ip]
   1a12c:	str	ip, [r0, #284]	; 0x11c
   1a130:	ldr	ip, [pc, #76]	; 1a184 <readstat_begin_writing_sav+0x17c>
   1a134:	ldr	r3, [r3, ip]
   1a138:	str	r3, [r0, #288]	; 0x120
   1a13c:	b	1a10c <readstat_begin_writing_sav+0x104>
   1a140:	.word	0x0002afec
   1a144:	.word	0xffffdacc
   1a148:	.word	0xffffda5c
   1a14c:	.word	0xffffddcc
   1a150:	.word	0xffffdca8
   1a154:	.word	0xffffdc6c
   1a158:	.word	0xffffdc30
   1a15c:	.word	0xffffdbf8
   1a160:	.word	0xffffdbc4
   1a164:	.word	0xffffdcc4
   1a168:	.word	0xffffdb64
   1a16c:	.word	0xffffdb70
   1a170:	.word	0xffffe09c
   1a174:	.word	0xffffda1c
   1a178:	.word	0x000002d8
   1a17c:	.word	0x000002e4
   1a180:	.word	0x000002ec
   1a184:	.word	0x000002d4

0001a188 <spss_boxed_missing_value>:
   1a188:	sub	sp, sp, #16
   1a18c:	mov	ip, r0
   1a190:	ldr	r3, [r1]
   1a194:	cmp	r3, #5
   1a198:	beq	1a1d0 <spss_boxed_missing_value+0x48>
   1a19c:	mov	r0, #0
   1a1a0:	str	r0, [sp, #4]
   1a1a4:	str	r0, [sp, #8]
   1a1a8:	str	r0, [sp, #12]
   1a1ac:	add	r2, r2, r2, lsl #5
   1a1b0:	add	r2, r2, #88	; 0x58
   1a1b4:	add	r2, r1, r2
   1a1b8:	str	r2, [sp]
   1a1bc:	ldm	sp, {r0, r1, r2, r3}
   1a1c0:	stm	ip, {r0, r1, r2, r3}
   1a1c4:	mov	r0, ip
   1a1c8:	add	sp, sp, #16
   1a1cc:	bx	lr
   1a1d0:	add	r2, r1, r2, lsl #3
   1a1d4:	vldr	d7, [r2, #64]	; 0x40
   1a1d8:	mov	r2, #0
   1a1dc:	str	r2, [sp, #12]
   1a1e0:	vstr	d7, [sp]
   1a1e4:	mov	r2, #5
   1a1e8:	str	r2, [sp, #8]
   1a1ec:	vcmp.f64	d7, d7
   1a1f0:	vmrs	APSR_nzcv, fpscr
   1a1f4:	movvs	r2, #1
   1a1f8:	movvc	r2, #0
   1a1fc:	strb	r2, [sp, #13]
   1a200:	ldm	sp, {r0, r1, r2, r3}
   1a204:	stm	ip, {r0, r1, r2, r3}
   1a208:	b	1a1c4 <spss_boxed_missing_value+0x3c>

0001a20c <spss_format>:
   1a20c:	ldr	ip, [r2]
   1a210:	cmp	ip, #41	; 0x29
   1a214:	bhi	1a2bc <spss_format+0xb0>
   1a218:	ldr	r3, [pc, #172]	; 1a2cc <spss_format+0xc0>
   1a21c:	add	r3, pc, r3
   1a220:	ldrb	r3, [r3, ip, lsl #4]
   1a224:	cmp	r3, #0
   1a228:	beq	1a2c4 <spss_format+0xb8>
   1a22c:	push	{r4, lr}
   1a230:	sub	sp, sp, #8
   1a234:	ldr	r3, [pc, #148]	; 1a2d0 <spss_format+0xc4>
   1a238:	add	r3, pc, r3
   1a23c:	add	r3, r3, ip, lsl #4
   1a240:	ldr	r4, [r2, #8]
   1a244:	adds	lr, r4, #0
   1a248:	movne	lr, #1
   1a24c:	cmp	ip, #5
   1a250:	movne	ip, lr
   1a254:	orreq	ip, lr, #1
   1a258:	cmp	ip, #0
   1a25c:	bne	1a284 <spss_format+0x78>
   1a260:	ldr	r2, [r2, #4]
   1a264:	cmp	r2, #0
   1a268:	bne	1a2a4 <spss_format+0x98>
   1a26c:	ldr	r2, [pc, #96]	; 1a2d4 <spss_format+0xc8>
   1a270:	add	r2, pc, r2
   1a274:	bl	42ac <snprintf@plt>
   1a278:	mov	r0, #1
   1a27c:	add	sp, sp, #8
   1a280:	pop	{r4, pc}
   1a284:	str	r4, [sp, #4]
   1a288:	ldr	r2, [r2, #4]
   1a28c:	str	r2, [sp]
   1a290:	ldr	r2, [pc, #64]	; 1a2d8 <spss_format+0xcc>
   1a294:	add	r2, pc, r2
   1a298:	bl	42ac <snprintf@plt>
   1a29c:	mov	r0, #1
   1a2a0:	b	1a27c <spss_format+0x70>
   1a2a4:	str	r2, [sp]
   1a2a8:	ldr	r2, [pc, #44]	; 1a2dc <spss_format+0xd0>
   1a2ac:	add	r2, pc, r2
   1a2b0:	bl	42ac <snprintf@plt>
   1a2b4:	mov	r0, #1
   1a2b8:	b	1a27c <spss_format+0x70>
   1a2bc:	mov	r0, #0
   1a2c0:	bx	lr
   1a2c4:	mov	r0, #0
   1a2c8:	bx	lr
   1a2cc:	.word	0x0002c860
   1a2d0:	.word	0x0002c844
   1a2d4:	.word	0x0000ae5c
   1a2d8:	.word	0x0000b1e8
   1a2dc:	.word	0x0000b1d8

0001a2e0 <spss_varinfo_compare>:
   1a2e0:	ldr	r0, [r0]
   1a2e4:	ldr	r3, [r1]
   1a2e8:	ldr	r3, [r3, #12]
   1a2ec:	cmp	r0, r3
   1a2f0:	blt	1a304 <spss_varinfo_compare+0x24>
   1a2f4:	cmp	r0, r3
   1a2f8:	movle	r0, #0
   1a2fc:	movgt	r0, #1
   1a300:	bx	lr
   1a304:	mvn	r0, #0
   1a308:	bx	lr

0001a30c <spss_varinfo_free>:
   1a30c:	push	{r4, lr}
   1a310:	subs	r4, r0, #0
   1a314:	popeq	{r4, pc}
   1a318:	ldr	r0, [r4, #264]	; 0x108
   1a31c:	cmp	r0, #0
   1a320:	beq	1a328 <spss_varinfo_free+0x1c>
   1a324:	bl	3ee0 <free@plt>
   1a328:	mov	r0, r4
   1a32c:	bl	3ee0 <free@plt>
   1a330:	pop	{r4, pc}

0001a334 <spss_64bit_value>:
   1a334:	push	{lr}		; (str lr, [sp, #-4]!)
   1a338:	sub	sp, sp, #28
   1a33c:	add	ip, sp, #8
   1a340:	stm	ip, {r0, r1, r2, r3}
   1a344:	ldm	ip, {r0, r1, r2, r3}
   1a348:	bl	41e0 <readstat_double_value@plt>
   1a34c:	vstr	d0, [sp]
   1a350:	vabs.f64	d6, d0
   1a354:	vldr	d7, [pc, #84]	; 1a3b0 <spss_64bit_value+0x7c>
   1a358:	vcmp.f64	d6, d7
   1a35c:	vmrs	APSR_nzcv, fpscr
   1a360:	ble	1a37c <spss_64bit_value+0x48>
   1a364:	vcmpe.f64	d0, #0.0
   1a368:	vmrs	APSR_nzcv, fpscr
   1a36c:	bmi	1a398 <spss_64bit_value+0x64>
   1a370:	mvn	r0, #0
   1a374:	ldr	r1, [pc, #60]	; 1a3b8 <spss_64bit_value+0x84>
   1a378:	b	1a390 <spss_64bit_value+0x5c>
   1a37c:	vldr	d7, [sp]
   1a380:	vcmp.f64	d7, d7
   1a384:	vmrs	APSR_nzcv, fpscr
   1a388:	bvs	1a3a4 <spss_64bit_value+0x70>
   1a38c:	ldrd	r0, [sp]
   1a390:	add	sp, sp, #28
   1a394:	pop	{pc}		; (ldr pc, [sp], #4)
   1a398:	mvn	r0, #1
   1a39c:	mvn	r1, #1048576	; 0x100000
   1a3a0:	b	1a390 <spss_64bit_value+0x5c>
   1a3a4:	mvn	r0, #0
   1a3a8:	mvn	r1, #1048576	; 0x100000
   1a3ac:	b	1a390 <spss_64bit_value+0x5c>
   1a3b0:	.word	0xffffffff
   1a3b4:	.word	0x7fefffff
   1a3b8:	.word	0x7fefffff

0001a3bc <spss_missingness_for_info>:
   1a3bc:	push	{r4, r5, r6, r7, r8, r9, lr}
   1a3c0:	sub	sp, sp, #524	; 0x20c
   1a3c4:	mov	r9, r0
   1a3c8:	mov	r7, r1
   1a3cc:	mov	r2, #520	; 0x208
   1a3d0:	mov	r1, #0
   1a3d4:	mov	r0, sp
   1a3d8:	bl	42d0 <memset@plt>
   1a3dc:	ldr	r5, [r7, #56]	; 0x38
   1a3e0:	cmp	r5, #0
   1a3e4:	bne	1a45c <spss_missingness_for_info+0xa0>
   1a3e8:	ldr	r3, [r7, #52]	; 0x34
   1a3ec:	cmp	r3, #0
   1a3f0:	ble	1a440 <spss_missingness_for_info+0x84>
   1a3f4:	str	r3, [sp, #512]	; 0x200
   1a3f8:	mov	r6, #1
   1a3fc:	mov	r8, sp
   1a400:	lsl	r4, r6, #4
   1a404:	add	r3, sp, #520	; 0x208
   1a408:	add	r0, r3, r4
   1a40c:	mov	r2, r5
   1a410:	mov	r1, r7
   1a414:	sub	r0, r0, #520	; 0x208
   1a418:	bl	1a188 <spss_boxed_missing_value>
   1a41c:	add	ip, r8, r5, lsl #5
   1a420:	add	r3, r4, r8
   1a424:	ldm	r3, {r0, r1, r2, r3}
   1a428:	stm	ip, {r0, r1, r2, r3}
   1a42c:	add	r5, r5, #1
   1a430:	add	r6, r6, #2
   1a434:	ldr	r3, [r7, #52]	; 0x34
   1a438:	cmp	r3, r5
   1a43c:	bgt	1a400 <spss_missingness_for_info+0x44>
   1a440:	mov	r2, #520	; 0x208
   1a444:	mov	r1, sp
   1a448:	mov	r0, r9
   1a44c:	bl	3f40 <memcpy@plt>
   1a450:	mov	r0, r9
   1a454:	add	sp, sp, #524	; 0x20c
   1a458:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1a45c:	mov	r4, #1
   1a460:	str	r4, [sp, #512]	; 0x200
   1a464:	mov	r2, #0
   1a468:	mov	r1, r7
   1a46c:	mov	r0, sp
   1a470:	bl	1a188 <spss_boxed_missing_value>
   1a474:	mov	r2, r4
   1a478:	mov	r1, r7
   1a47c:	add	r0, sp, #16
   1a480:	bl	1a188 <spss_boxed_missing_value>
   1a484:	ldr	r3, [r7, #52]	; 0x34
   1a488:	cmp	r3, #3
   1a48c:	bne	1a440 <spss_missingness_for_info+0x84>
   1a490:	mov	r2, #2
   1a494:	str	r2, [sp, #512]	; 0x200
   1a498:	mov	r1, r7
   1a49c:	add	r4, sp, #48	; 0x30
   1a4a0:	mov	r0, r4
   1a4a4:	bl	1a188 <spss_boxed_missing_value>
   1a4a8:	ldm	r4, {r0, r1, r2, r3}
   1a4ac:	add	ip, sp, #32
   1a4b0:	stm	ip, {r0, r1, r2, r3}
   1a4b4:	b	1a440 <spss_missingness_for_info+0x84>

0001a4b8 <spss_init_variable_for_info>:
   1a4b8:	push	{r4, r5, r6, r7, lr}
   1a4bc:	sub	sp, sp, #532	; 0x214
   1a4c0:	mov	r4, r0
   1a4c4:	mov	r7, r1
   1a4c8:	mov	r6, r2
   1a4cc:	ldr	r1, [pc, #208]	; 1a5a4 <spss_init_variable_for_info+0xec>
   1a4d0:	mov	r0, #1
   1a4d4:	bl	3d78 <calloc@plt>
   1a4d8:	mov	r5, r0
   1a4dc:	ldr	r3, [r4, #8]
   1a4e0:	str	r3, [r0, #4]
   1a4e4:	str	r7, [r0, #2148]	; 0x864
   1a4e8:	ldr	r3, [r4]
   1a4ec:	str	r3, [r0]
   1a4f0:	ldr	r3, [r4, #20]
   1a4f4:	cmp	r3, #0
   1a4f8:	ldreq	r3, [r4, #16]
   1a4fc:	lsleq	r3, r3, #3
   1a500:	str	r3, [r0, #1596]	; 0x63c
   1a504:	ldrb	r3, [r4, #196]	; 0xc4
   1a508:	cmp	r3, #0
   1a50c:	str	r6, [sp]
   1a510:	movne	r3, #65	; 0x41
   1a514:	addne	r2, r4, #196	; 0xc4
   1a518:	moveq	r3, #9
   1a51c:	addeq	r2, r4, #187	; 0xbb
   1a520:	mov	r1, #300	; 0x12c
   1a524:	add	r0, r0, #8
   1a528:	bl	4264 <readstat_convert@plt>
   1a52c:	ldr	r3, [r4, #264]	; 0x108
   1a530:	cmp	r3, #0
   1a534:	beq	1a54c <spss_init_variable_for_info+0x94>
   1a538:	ldr	r2, [pc, #104]	; 1a5a8 <spss_init_variable_for_info+0xf0>
   1a53c:	add	r2, pc, r2
   1a540:	mov	r1, #1024	; 0x400
   1a544:	add	r0, r5, #564	; 0x234
   1a548:	bl	42ac <snprintf@plt>
   1a54c:	add	r2, r4, #24
   1a550:	mov	r1, #256	; 0x100
   1a554:	add	r0, r5, #308	; 0x134
   1a558:	bl	4438 <spss_format@plt>
   1a55c:	mov	r1, r4
   1a560:	add	r6, sp, #8
   1a564:	mov	r0, r6
   1a568:	bl	4558 <spss_missingness_for_info@plt>
   1a56c:	add	r0, r5, #1600	; 0x640
   1a570:	mov	r2, #520	; 0x208
   1a574:	mov	r1, r6
   1a578:	add	r0, r0, #8
   1a57c:	bl	3f40 <memcpy@plt>
   1a580:	ldr	r3, [r4, #268]	; 0x10c
   1a584:	str	r3, [r5, #2128]	; 0x850
   1a588:	ldr	r3, [r4, #276]	; 0x114
   1a58c:	cmp	r3, #0
   1a590:	ldreq	r3, [r4, #28]
   1a594:	str	r3, [r5, #2136]	; 0x858
   1a598:	mov	r0, r5
   1a59c:	add	sp, sp, #532	; 0x214
   1a5a0:	pop	{r4, r5, r6, r7, pc}
   1a5a4:	.word	0x00000868
   1a5a8:	.word	0x0000ab90

0001a5ac <spss_measure_from_readstat_measure>:
   1a5ac:	cmp	r0, #1
   1a5b0:	beq	1a5cc <spss_measure_from_readstat_measure+0x20>
   1a5b4:	cmp	r0, #2
   1a5b8:	beq	1a5d4 <spss_measure_from_readstat_measure+0x28>
   1a5bc:	cmp	r0, #3
   1a5c0:	moveq	r0, #3
   1a5c4:	movne	r0, #0
   1a5c8:	bx	lr
   1a5cc:	mov	r0, #1
   1a5d0:	bx	lr
   1a5d4:	mov	r0, #2
   1a5d8:	bx	lr

0001a5dc <spss_measure_to_readstat_measure>:
   1a5dc:	cmp	r0, #1
   1a5e0:	beq	1a5fc <spss_measure_to_readstat_measure+0x20>
   1a5e4:	cmp	r0, #2
   1a5e8:	beq	1a604 <spss_measure_to_readstat_measure+0x28>
   1a5ec:	cmp	r0, #3
   1a5f0:	moveq	r0, #3
   1a5f4:	movne	r0, #0
   1a5f8:	bx	lr
   1a5fc:	mov	r0, #1
   1a600:	bx	lr
   1a604:	mov	r0, #2
   1a608:	bx	lr

0001a60c <spss_alignment_from_readstat_alignment>:
   1a60c:	cmp	r0, #1
   1a610:	beq	1a62c <spss_alignment_from_readstat_alignment+0x20>
   1a614:	cmp	r0, #2
   1a618:	beq	1a634 <spss_alignment_from_readstat_alignment+0x28>
   1a61c:	cmp	r0, #3
   1a620:	movne	r0, #0
   1a624:	moveq	r0, #1
   1a628:	bx	lr
   1a62c:	mov	r0, #0
   1a630:	bx	lr
   1a634:	mov	r0, #2
   1a638:	bx	lr

0001a63c <spss_alignment_to_readstat_alignment>:
   1a63c:	cmp	r0, #0
   1a640:	beq	1a65c <spss_alignment_to_readstat_alignment+0x20>
   1a644:	cmp	r0, #2
   1a648:	beq	1a664 <spss_alignment_to_readstat_alignment+0x28>
   1a64c:	cmp	r0, #1
   1a650:	moveq	r0, #3
   1a654:	movne	r0, #0
   1a658:	bx	lr
   1a65c:	mov	r0, #1
   1a660:	bx	lr
   1a664:	mov	r0, #2
   1a668:	bx	lr

0001a66c <spss_format_for_variable>:
   1a66c:	mov	r3, #0
   1a670:	str	r3, [r1]
   1a674:	str	r3, [r1, #4]
   1a678:	str	r3, [r1, #8]
   1a67c:	ldr	r3, [r0]
   1a680:	cmp	r3, #0
   1a684:	bne	1a6b4 <spss_format_for_variable+0x48>
   1a688:	mov	r3, #1
   1a68c:	str	r3, [r1]
   1a690:	ldr	r3, [r0, #2136]	; 0x858
   1a694:	cmp	r3, #0
   1a698:	strne	r3, [r1, #4]
   1a69c:	bne	1a6e0 <spss_format_for_variable+0x74>
   1a6a0:	ldr	r3, [r0, #1600]	; 0x640
   1a6a4:	cmp	r3, #0
   1a6a8:	ldreq	r3, [r0, #1596]	; 0x63c
   1a6ac:	str	r3, [r1, #4]
   1a6b0:	b	1a6e0 <spss_format_for_variable+0x74>
   1a6b4:	mov	r3, #5
   1a6b8:	str	r3, [r1]
   1a6bc:	ldr	r3, [r0, #2136]	; 0x858
   1a6c0:	cmp	r3, #0
   1a6c4:	moveq	r3, #8
   1a6c8:	str	r3, [r1, #4]
   1a6cc:	ldr	r3, [r0]
   1a6d0:	sub	r3, r3, #4
   1a6d4:	cmp	r3, #1
   1a6d8:	movls	r3, #2
   1a6dc:	strls	r3, [r1, #8]
   1a6e0:	ldrb	r3, [r0, #308]	; 0x134
   1a6e4:	cmp	r3, #0
   1a6e8:	bne	1a6f4 <spss_format_for_variable+0x88>
   1a6ec:	mov	r0, #0
   1a6f0:	bx	lr
   1a6f4:	push	{r4, r5, r6, lr}
   1a6f8:	mov	r4, r1
   1a6fc:	mov	r3, #0
   1a700:	str	r3, [r1, #8]
   1a704:	add	r5, r0, #308	; 0x134
   1a708:	mov	r0, r5
   1a70c:	bl	4228 <strlen@plt>
   1a710:	mov	r2, r4
   1a714:	mov	r1, r0
   1a718:	mov	r0, r5
   1a71c:	bl	3f4c <spss_parse_format@plt>
   1a720:	cmp	r0, #0
   1a724:	movne	r0, #11
   1a728:	pop	{r4, r5, r6, pc}

0001a72c <spss_parse_format>:
   1a72c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a730:	sub	sp, sp, #28
   1a734:	add	r3, r0, r1
   1a738:	str	r3, [sp, #8]
   1a73c:	cmp	r0, r3
   1a740:	beq	1adb8 <spss_parse_format+0x68c>
   1a744:	mov	r3, #0
   1a748:	str	r3, [sp, #16]
   1a74c:	mov	r8, #1
   1a750:	ldr	r9, [pc, #1900]	; 1aec4 <spss_parse_format+0x798>
   1a754:	add	r9, pc, r9
   1a758:	add	r3, r9, #288	; 0x120
   1a75c:	str	r3, [sp, #4]
   1a760:	add	r3, r9, #504	; 0x1f8
   1a764:	mov	sl, r3
   1a768:	ldr	r3, [pc, #1880]	; 1aec8 <spss_parse_format+0x79c>
   1a76c:	add	r3, pc, r3
   1a770:	str	r3, [sp, #12]
   1a774:	ldr	fp, [pc, #1872]	; 1aecc <spss_parse_format+0x7a0>
   1a778:	add	fp, pc, fp
   1a77c:	ldr	r3, [pc, #1868]	; 1aed0 <spss_parse_format+0x7a4>
   1a780:	add	r3, pc, r3
   1a784:	add	r3, r3, #1568	; 0x620
   1a788:	add	r3, r3, #8
   1a78c:	str	r3, [sp, #20]
   1a790:	b	1ab80 <spss_parse_format+0x454>
   1a794:	cmp	r3, ip
   1a798:	bhi	1a7cc <spss_parse_format+0xa0>
   1a79c:	sub	r1, ip, r3
   1a7a0:	add	lr, r3, r1, asr #1
   1a7a4:	ldrb	r1, [r3, r1, asr #1]
   1a7a8:	cmp	r4, r1
   1a7ac:	subcc	ip, lr, #1
   1a7b0:	bcc	1a794 <spss_parse_format+0x68>
   1a7b4:	cmp	r4, r1
   1a7b8:	addhi	r3, lr, #1
   1a7bc:	bhi	1a794 <spss_parse_format+0x68>
   1a7c0:	sub	lr, lr, r5
   1a7c4:	add	r6, r6, lr
   1a7c8:	b	1a84c <spss_parse_format+0x120>
   1a7cc:	add	r5, r5, r7
   1a7d0:	add	r6, r6, r7
   1a7d4:	ldr	r3, [sp, #12]
   1a7d8:	add	r8, r3, r8
   1a7dc:	ldrb	r7, [r8, #828]	; 0x33c
   1a7e0:	cmp	r7, #0
   1a7e4:	ble	1a84c <spss_parse_format+0x120>
   1a7e8:	add	ip, r5, r7, lsl #1
   1a7ec:	sub	ip, ip, #2
   1a7f0:	cmp	r5, ip
   1a7f4:	bhi	1a848 <spss_parse_format+0x11c>
   1a7f8:	ldrb	r4, [r0]
   1a7fc:	mov	r1, r5
   1a800:	b	1a80c <spss_parse_format+0xe0>
   1a804:	cmp	r1, ip
   1a808:	bhi	1a848 <spss_parse_format+0x11c>
   1a80c:	sub	r3, ip, r1
   1a810:	asr	r3, r3, #1
   1a814:	bic	r3, r3, #1
   1a818:	add	lr, r1, r3
   1a81c:	ldrb	r3, [r1, r3]
   1a820:	cmp	r3, r4
   1a824:	subhi	ip, lr, #2
   1a828:	bhi	1a804 <spss_parse_format+0xd8>
   1a82c:	ldrb	r3, [lr, #1]
   1a830:	cmp	r3, r4
   1a834:	addcc	r1, lr, #2
   1a838:	bcc	1a804 <spss_parse_format+0xd8>
   1a83c:	sub	lr, lr, r5
   1a840:	add	r6, r6, lr, asr #1
   1a844:	b	1a84c <spss_parse_format+0x120>
   1a848:	add	r6, r6, r7
   1a84c:	add	r6, fp, r6
   1a850:	ldrb	r3, [r6, #936]	; 0x3a8
   1a854:	add	r3, fp, r3
   1a858:	ldrb	r8, [r3, #1288]	; 0x508
   1a85c:	ldrb	r1, [r3, #1432]	; 0x598
   1a860:	cmp	r1, #0
   1a864:	beq	1ab68 <spss_parse_format+0x43c>
   1a868:	ldr	ip, [sp, #20]
   1a86c:	add	r3, ip, r1
   1a870:	ldrb	r1, [ip, r1]
   1a874:	add	r1, r3, r1
   1a878:	mov	r4, #36	; 0x24
   1a87c:	mov	r5, #35	; 0x23
   1a880:	mov	r6, #34	; 0x22
   1a884:	mov	r7, #33	; 0x21
   1a888:	cmp	r1, r3
   1a88c:	beq	1ab68 <spss_parse_format+0x43c>
   1a890:	ldrb	ip, [r3, #1]!
   1a894:	cmp	ip, #40	; 0x28
   1a898:	addls	pc, pc, ip, lsl #2
   1a89c:	b	1a888 <spss_parse_format+0x15c>
   1a8a0:	b	1a944 <spss_parse_format+0x218>
   1a8a4:	b	1a950 <spss_parse_format+0x224>
   1a8a8:	b	1a970 <spss_parse_format+0x244>
   1a8ac:	b	1a888 <spss_parse_format+0x15c>
   1a8b0:	b	1a97c <spss_parse_format+0x250>
   1a8b4:	b	1a988 <spss_parse_format+0x25c>
   1a8b8:	b	1a994 <spss_parse_format+0x268>
   1a8bc:	b	1a9a0 <spss_parse_format+0x274>
   1a8c0:	b	1a9ac <spss_parse_format+0x280>
   1a8c4:	b	1a9b8 <spss_parse_format+0x28c>
   1a8c8:	b	1a9c4 <spss_parse_format+0x298>
   1a8cc:	b	1a9d0 <spss_parse_format+0x2a4>
   1a8d0:	b	1a9dc <spss_parse_format+0x2b0>
   1a8d4:	b	1a9e8 <spss_parse_format+0x2bc>
   1a8d8:	b	1a9f4 <spss_parse_format+0x2c8>
   1a8dc:	b	1aa00 <spss_parse_format+0x2d4>
   1a8e0:	b	1aa0c <spss_parse_format+0x2e0>
   1a8e4:	b	1aa18 <spss_parse_format+0x2ec>
   1a8e8:	b	1aa24 <spss_parse_format+0x2f8>
   1a8ec:	b	1aa30 <spss_parse_format+0x304>
   1a8f0:	b	1aa44 <spss_parse_format+0x318>
   1a8f4:	b	1aa50 <spss_parse_format+0x324>
   1a8f8:	b	1aa64 <spss_parse_format+0x338>
   1a8fc:	b	1aa78 <spss_parse_format+0x34c>
   1a900:	b	1aa8c <spss_parse_format+0x360>
   1a904:	b	1aa98 <spss_parse_format+0x36c>
   1a908:	b	1aaac <spss_parse_format+0x380>
   1a90c:	b	1aab8 <spss_parse_format+0x38c>
   1a910:	b	1aac4 <spss_parse_format+0x398>
   1a914:	b	1aad0 <spss_parse_format+0x3a4>
   1a918:	b	1aadc <spss_parse_format+0x3b0>
   1a91c:	b	1aae8 <spss_parse_format+0x3bc>
   1a920:	b	1aafc <spss_parse_format+0x3d0>
   1a924:	b	1ab08 <spss_parse_format+0x3dc>
   1a928:	b	1ab14 <spss_parse_format+0x3e8>
   1a92c:	b	1ab1c <spss_parse_format+0x3f0>
   1a930:	b	1ab24 <spss_parse_format+0x3f8>
   1a934:	b	1ab2c <spss_parse_format+0x400>
   1a938:	b	1ab34 <spss_parse_format+0x408>
   1a93c:	b	1ab40 <spss_parse_format+0x414>
   1a940:	b	1ab54 <spss_parse_format+0x428>
   1a944:	mov	ip, #0
   1a948:	str	ip, [sp, #16]
   1a94c:	b	1a888 <spss_parse_format+0x15c>
   1a950:	ldr	ip, [sp, #16]
   1a954:	add	ip, ip, ip, lsl #2
   1a958:	mov	lr, ip
   1a95c:	ldrb	ip, [r0]
   1a960:	sub	ip, ip, #48	; 0x30
   1a964:	add	ip, ip, lr, lsl #1
   1a968:	str	ip, [sp, #16]
   1a96c:	b	1a888 <spss_parse_format+0x15c>
   1a970:	ldr	ip, [sp, #16]
   1a974:	str	ip, [r2, #4]
   1a978:	b	1a888 <spss_parse_format+0x15c>
   1a97c:	mov	ip, #1
   1a980:	str	ip, [r2]
   1a984:	b	1a888 <spss_parse_format+0x15c>
   1a988:	mov	ip, #2
   1a98c:	str	ip, [r2]
   1a990:	b	1a888 <spss_parse_format+0x15c>
   1a994:	mov	ip, #3
   1a998:	str	ip, [r2]
   1a99c:	b	1a888 <spss_parse_format+0x15c>
   1a9a0:	mov	ip, #4
   1a9a4:	str	ip, [r2]
   1a9a8:	b	1a888 <spss_parse_format+0x15c>
   1a9ac:	mov	ip, #5
   1a9b0:	str	ip, [r2]
   1a9b4:	b	1a888 <spss_parse_format+0x15c>
   1a9b8:	mov	ip, #6
   1a9bc:	str	ip, [r2]
   1a9c0:	b	1a888 <spss_parse_format+0x15c>
   1a9c4:	mov	ip, #7
   1a9c8:	str	ip, [r2]
   1a9cc:	b	1a888 <spss_parse_format+0x15c>
   1a9d0:	mov	ip, #8
   1a9d4:	str	ip, [r2]
   1a9d8:	b	1a888 <spss_parse_format+0x15c>
   1a9dc:	mov	ip, #9
   1a9e0:	str	ip, [r2]
   1a9e4:	b	1a888 <spss_parse_format+0x15c>
   1a9e8:	mov	ip, #10
   1a9ec:	str	ip, [r2]
   1a9f0:	b	1a888 <spss_parse_format+0x15c>
   1a9f4:	mov	ip, #11
   1a9f8:	str	ip, [r2]
   1a9fc:	b	1a888 <spss_parse_format+0x15c>
   1aa00:	mov	ip, #12
   1aa04:	str	ip, [r2]
   1aa08:	b	1a888 <spss_parse_format+0x15c>
   1aa0c:	mov	ip, #15
   1aa10:	str	ip, [r2]
   1aa14:	b	1a888 <spss_parse_format+0x15c>
   1aa18:	mov	ip, #16
   1aa1c:	str	ip, [r2]
   1aa20:	b	1a888 <spss_parse_format+0x15c>
   1aa24:	mov	ip, #17
   1aa28:	str	ip, [r2]
   1aa2c:	b	1a888 <spss_parse_format+0x15c>
   1aa30:	mov	ip, #20
   1aa34:	str	ip, [r2]
   1aa38:	mov	ip, #11
   1aa3c:	str	ip, [r2, #4]
   1aa40:	b	1a888 <spss_parse_format+0x15c>
   1aa44:	mov	ip, #21
   1aa48:	str	ip, [r2]
   1aa4c:	b	1a888 <spss_parse_format+0x15c>
   1aa50:	mov	ip, #22
   1aa54:	str	ip, [r2]
   1aa58:	mov	ip, #20
   1aa5c:	str	ip, [r2, #4]
   1aa60:	b	1a888 <spss_parse_format+0x15c>
   1aa64:	mov	ip, #41	; 0x29
   1aa68:	str	ip, [r2]
   1aa6c:	mov	ip, #19
   1aa70:	str	ip, [r2, #4]
   1aa74:	b	1a888 <spss_parse_format+0x15c>
   1aa78:	mov	ip, #23
   1aa7c:	str	ip, [r2]
   1aa80:	mov	ip, #10
   1aa84:	str	ip, [r2, #4]
   1aa88:	b	1a888 <spss_parse_format+0x15c>
   1aa8c:	mov	ip, #24
   1aa90:	str	ip, [r2]
   1aa94:	b	1a888 <spss_parse_format+0x15c>
   1aa98:	mov	ip, #25
   1aa9c:	str	ip, [r2]
   1aaa0:	mov	ip, #23
   1aaa4:	str	ip, [r2, #4]
   1aaa8:	b	1a888 <spss_parse_format+0x15c>
   1aaac:	mov	ip, #40	; 0x28
   1aab0:	str	ip, [r2]
   1aab4:	b	1a888 <spss_parse_format+0x15c>
   1aab8:	mov	ip, #26
   1aabc:	str	ip, [r2]
   1aac0:	b	1a888 <spss_parse_format+0x15c>
   1aac4:	mov	ip, #27
   1aac8:	str	ip, [r2]
   1aacc:	b	1a888 <spss_parse_format+0x15c>
   1aad0:	mov	ip, #28
   1aad4:	str	ip, [r2]
   1aad8:	b	1a888 <spss_parse_format+0x15c>
   1aadc:	mov	ip, #29
   1aae0:	str	ip, [r2]
   1aae4:	b	1a888 <spss_parse_format+0x15c>
   1aae8:	mov	ip, #30
   1aaec:	str	ip, [r2]
   1aaf0:	mov	ip, #10
   1aaf4:	str	ip, [r2, #4]
   1aaf8:	b	1a888 <spss_parse_format+0x15c>
   1aafc:	mov	ip, #31
   1ab00:	str	ip, [r2]
   1ab04:	b	1a888 <spss_parse_format+0x15c>
   1ab08:	mov	ip, #32
   1ab0c:	str	ip, [r2]
   1ab10:	b	1a888 <spss_parse_format+0x15c>
   1ab14:	str	r7, [r2]
   1ab18:	b	1a888 <spss_parse_format+0x15c>
   1ab1c:	str	r6, [r2]
   1ab20:	b	1a888 <spss_parse_format+0x15c>
   1ab24:	str	r5, [r2]
   1ab28:	b	1a888 <spss_parse_format+0x15c>
   1ab2c:	str	r4, [r2]
   1ab30:	b	1a888 <spss_parse_format+0x15c>
   1ab34:	mov	ip, #37	; 0x25
   1ab38:	str	ip, [r2]
   1ab3c:	b	1a888 <spss_parse_format+0x15c>
   1ab40:	mov	ip, #38	; 0x26
   1ab44:	str	ip, [r2]
   1ab48:	mov	ip, #10
   1ab4c:	str	ip, [r2, #4]
   1ab50:	b	1a888 <spss_parse_format+0x15c>
   1ab54:	mov	ip, #39	; 0x27
   1ab58:	str	ip, [r2]
   1ab5c:	mov	ip, #10
   1ab60:	str	ip, [r2, #4]
   1ab64:	b	1a888 <spss_parse_format+0x15c>
   1ab68:	cmp	r8, #0
   1ab6c:	beq	1adb0 <spss_parse_format+0x684>
   1ab70:	add	r0, r0, #1
   1ab74:	ldr	r3, [sp, #8]
   1ab78:	cmp	r3, r0
   1ab7c:	beq	1adc4 <spss_parse_format+0x698>
   1ab80:	lsl	r3, r8, #1
   1ab84:	ldr	r1, [sp, #4]
   1ab88:	ldrsh	r5, [r1, r3]
   1ab8c:	add	r5, r9, r5
   1ab90:	ldrsh	r6, [sl, r3]
   1ab94:	add	r3, r9, r8
   1ab98:	ldrb	r7, [r3, #720]	; 0x2d0
   1ab9c:	cmp	r7, #0
   1aba0:	ble	1a7d4 <spss_parse_format+0xa8>
   1aba4:	sub	ip, r7, #1
   1aba8:	adds	ip, r5, ip
   1abac:	bcs	1a7cc <spss_parse_format+0xa0>
   1abb0:	ldrb	r4, [r0]
   1abb4:	mov	r3, r5
   1abb8:	b	1a79c <spss_parse_format+0x70>
   1abbc:	ldr	r3, [sp, #16]
   1abc0:	str	r3, [r2, #4]
   1abc4:	b	1ae0c <spss_parse_format+0x6e0>
   1abc8:	ldr	r3, [sp, #16]
   1abcc:	str	r3, [r2, #8]
   1abd0:	b	1ae0c <spss_parse_format+0x6e0>
   1abd4:	mov	r3, #1
   1abd8:	str	r3, [r2]
   1abdc:	b	1ae0c <spss_parse_format+0x6e0>
   1abe0:	mov	r3, #2
   1abe4:	str	r3, [r2]
   1abe8:	b	1ae0c <spss_parse_format+0x6e0>
   1abec:	mov	r3, #3
   1abf0:	str	r3, [r2]
   1abf4:	b	1ae0c <spss_parse_format+0x6e0>
   1abf8:	mov	r3, #4
   1abfc:	str	r3, [r2]
   1ac00:	b	1ae0c <spss_parse_format+0x6e0>
   1ac04:	mov	r3, #5
   1ac08:	str	r3, [r2]
   1ac0c:	b	1ae0c <spss_parse_format+0x6e0>
   1ac10:	mov	r3, #6
   1ac14:	str	r3, [r2]
   1ac18:	b	1ae0c <spss_parse_format+0x6e0>
   1ac1c:	mov	r3, #7
   1ac20:	str	r3, [r2]
   1ac24:	b	1ae0c <spss_parse_format+0x6e0>
   1ac28:	mov	r3, #8
   1ac2c:	str	r3, [r2]
   1ac30:	b	1ae0c <spss_parse_format+0x6e0>
   1ac34:	mov	r3, #9
   1ac38:	str	r3, [r2]
   1ac3c:	b	1ae0c <spss_parse_format+0x6e0>
   1ac40:	str	ip, [r2]
   1ac44:	b	1ae0c <spss_parse_format+0x6e0>
   1ac48:	mov	r3, #11
   1ac4c:	str	r3, [r2]
   1ac50:	b	1ae0c <spss_parse_format+0x6e0>
   1ac54:	mov	r3, #12
   1ac58:	str	r3, [r2]
   1ac5c:	b	1ae0c <spss_parse_format+0x6e0>
   1ac60:	mov	r3, #15
   1ac64:	str	r3, [r2]
   1ac68:	b	1ae0c <spss_parse_format+0x6e0>
   1ac6c:	mov	r3, #16
   1ac70:	str	r3, [r2]
   1ac74:	b	1ae0c <spss_parse_format+0x6e0>
   1ac78:	mov	r3, #17
   1ac7c:	str	r3, [r2]
   1ac80:	b	1ae0c <spss_parse_format+0x6e0>
   1ac84:	mov	r3, #20
   1ac88:	str	r3, [r2]
   1ac8c:	mov	r3, #11
   1ac90:	str	r3, [r2, #4]
   1ac94:	b	1ae0c <spss_parse_format+0x6e0>
   1ac98:	mov	r3, #21
   1ac9c:	str	r3, [r2]
   1aca0:	b	1ae0c <spss_parse_format+0x6e0>
   1aca4:	mov	r3, #22
   1aca8:	str	r3, [r2]
   1acac:	mov	r3, #20
   1acb0:	str	r3, [r2, #4]
   1acb4:	b	1ae0c <spss_parse_format+0x6e0>
   1acb8:	mov	r3, #41	; 0x29
   1acbc:	str	r3, [r2]
   1acc0:	mov	r3, #19
   1acc4:	str	r3, [r2, #4]
   1acc8:	b	1ae0c <spss_parse_format+0x6e0>
   1accc:	mov	r3, #23
   1acd0:	str	r3, [r2]
   1acd4:	str	ip, [r2, #4]
   1acd8:	b	1ae0c <spss_parse_format+0x6e0>
   1acdc:	mov	r3, #24
   1ace0:	str	r3, [r2]
   1ace4:	b	1ae0c <spss_parse_format+0x6e0>
   1ace8:	mov	r3, #25
   1acec:	str	r3, [r2]
   1acf0:	mov	r3, #23
   1acf4:	str	r3, [r2, #4]
   1acf8:	b	1ae0c <spss_parse_format+0x6e0>
   1acfc:	mov	r3, #40	; 0x28
   1ad00:	str	r3, [r2]
   1ad04:	b	1ae0c <spss_parse_format+0x6e0>
   1ad08:	mov	r3, #26
   1ad0c:	str	r3, [r2]
   1ad10:	b	1ae0c <spss_parse_format+0x6e0>
   1ad14:	mov	r3, #27
   1ad18:	str	r3, [r2]
   1ad1c:	b	1ae0c <spss_parse_format+0x6e0>
   1ad20:	mov	r3, #28
   1ad24:	str	r3, [r2]
   1ad28:	b	1ae0c <spss_parse_format+0x6e0>
   1ad2c:	mov	r3, #29
   1ad30:	str	r3, [r2]
   1ad34:	b	1ae0c <spss_parse_format+0x6e0>
   1ad38:	mov	r3, #30
   1ad3c:	str	r3, [r2]
   1ad40:	str	ip, [r2, #4]
   1ad44:	b	1ae0c <spss_parse_format+0x6e0>
   1ad48:	mov	r3, #31
   1ad4c:	str	r3, [r2]
   1ad50:	b	1ae0c <spss_parse_format+0x6e0>
   1ad54:	str	sl, [r2]
   1ad58:	b	1ae0c <spss_parse_format+0x6e0>
   1ad5c:	str	lr, [r2]
   1ad60:	b	1ae0c <spss_parse_format+0x6e0>
   1ad64:	str	r4, [r2]
   1ad68:	b	1ae0c <spss_parse_format+0x6e0>
   1ad6c:	str	r5, [r2]
   1ad70:	b	1ae0c <spss_parse_format+0x6e0>
   1ad74:	str	r6, [r2]
   1ad78:	b	1ae0c <spss_parse_format+0x6e0>
   1ad7c:	str	r7, [r2]
   1ad80:	b	1ae0c <spss_parse_format+0x6e0>
   1ad84:	str	fp, [r2]
   1ad88:	str	ip, [r2, #4]
   1ad8c:	b	1ae0c <spss_parse_format+0x6e0>
   1ad90:	str	r9, [r2]
   1ad94:	str	ip, [r2, #4]
   1ad98:	b	1ae0c <spss_parse_format+0x6e0>
   1ad9c:	cmp	r8, #67	; 0x43
   1ada0:	movle	r0, #5
   1ada4:	movgt	r0, #0
   1ada8:	add	sp, sp, #28
   1adac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1adb0:	mov	r0, #5
   1adb4:	b	1ada8 <spss_parse_format+0x67c>
   1adb8:	mov	r3, #0
   1adbc:	str	r3, [sp, #16]
   1adc0:	mov	r8, #1
   1adc4:	ldr	r1, [pc, #264]	; 1aed4 <spss_parse_format+0x7a8>
   1adc8:	add	r1, pc, r1
   1adcc:	add	r3, r1, #1568	; 0x620
   1add0:	add	r3, r3, #8
   1add4:	add	r1, r1, r8
   1add8:	ldrb	r0, [r1, #1808]	; 0x710
   1addc:	add	r1, r3, r0
   1ade0:	ldrb	r0, [r3, r0]
   1ade4:	add	r0, r1, r0
   1ade8:	mov	r9, #39	; 0x27
   1adec:	mov	ip, #10
   1adf0:	mov	fp, #38	; 0x26
   1adf4:	mov	r7, #37	; 0x25
   1adf8:	mov	r6, #36	; 0x24
   1adfc:	mov	r5, #35	; 0x23
   1ae00:	mov	r4, #34	; 0x22
   1ae04:	mov	lr, #33	; 0x21
   1ae08:	mov	sl, #32
   1ae0c:	cmp	r0, r1
   1ae10:	beq	1ad9c <spss_parse_format+0x670>
   1ae14:	ldrb	r3, [r1, #1]!
   1ae18:	sub	r3, r3, #2
   1ae1c:	cmp	r3, #38	; 0x26
   1ae20:	addls	pc, pc, r3, lsl #2
   1ae24:	b	1ae0c <spss_parse_format+0x6e0>
   1ae28:	b	1abbc <spss_parse_format+0x490>
   1ae2c:	b	1abc8 <spss_parse_format+0x49c>
   1ae30:	b	1abd4 <spss_parse_format+0x4a8>
   1ae34:	b	1abe0 <spss_parse_format+0x4b4>
   1ae38:	b	1abec <spss_parse_format+0x4c0>
   1ae3c:	b	1abf8 <spss_parse_format+0x4cc>
   1ae40:	b	1ac04 <spss_parse_format+0x4d8>
   1ae44:	b	1ac10 <spss_parse_format+0x4e4>
   1ae48:	b	1ac1c <spss_parse_format+0x4f0>
   1ae4c:	b	1ac28 <spss_parse_format+0x4fc>
   1ae50:	b	1ac34 <spss_parse_format+0x508>
   1ae54:	b	1ac40 <spss_parse_format+0x514>
   1ae58:	b	1ac48 <spss_parse_format+0x51c>
   1ae5c:	b	1ac54 <spss_parse_format+0x528>
   1ae60:	b	1ac60 <spss_parse_format+0x534>
   1ae64:	b	1ac6c <spss_parse_format+0x540>
   1ae68:	b	1ac78 <spss_parse_format+0x54c>
   1ae6c:	b	1ac84 <spss_parse_format+0x558>
   1ae70:	b	1ac98 <spss_parse_format+0x56c>
   1ae74:	b	1aca4 <spss_parse_format+0x578>
   1ae78:	b	1acb8 <spss_parse_format+0x58c>
   1ae7c:	b	1accc <spss_parse_format+0x5a0>
   1ae80:	b	1acdc <spss_parse_format+0x5b0>
   1ae84:	b	1ace8 <spss_parse_format+0x5bc>
   1ae88:	b	1acfc <spss_parse_format+0x5d0>
   1ae8c:	b	1ad08 <spss_parse_format+0x5dc>
   1ae90:	b	1ad14 <spss_parse_format+0x5e8>
   1ae94:	b	1ad20 <spss_parse_format+0x5f4>
   1ae98:	b	1ad2c <spss_parse_format+0x600>
   1ae9c:	b	1ad38 <spss_parse_format+0x60c>
   1aea0:	b	1ad48 <spss_parse_format+0x61c>
   1aea4:	b	1ad54 <spss_parse_format+0x628>
   1aea8:	b	1ad5c <spss_parse_format+0x630>
   1aeac:	b	1ad64 <spss_parse_format+0x638>
   1aeb0:	b	1ad6c <spss_parse_format+0x640>
   1aeb4:	b	1ad74 <spss_parse_format+0x648>
   1aeb8:	b	1ad7c <spss_parse_format+0x650>
   1aebc:	b	1ad84 <spss_parse_format+0x658>
   1aec0:	b	1ad90 <spss_parse_format+0x664>
   1aec4:	.word	0x0000bef0
   1aec8:	.word	0x0000bed8
   1aecc:	.word	0x0000becc
   1aed0:	.word	0x0000bec4
   1aed4:	.word	0x0000b87c

0001aed8 <dta_ctx_alloc>:
   1aed8:	push	{r4, lr}
   1aedc:	mov	r4, r0
   1aee0:	mov	r1, #544	; 0x220
   1aee4:	mov	r0, #1
   1aee8:	bl	3d78 <calloc@plt>
   1aeec:	cmp	r0, #0
   1aef0:	strne	r4, [r0, #280]	; 0x118
   1aef4:	movne	r3, #0
   1aef8:	strne	r3, [r0, #284]	; 0x11c
   1aefc:	pop	{r4, pc}

0001af00 <dta_ctx_init>:
   1af00:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1af04:	mov	r7, r3
   1af08:	ldrb	r8, [sp, #32]
   1af0c:	ldrb	r5, [sp, #36]	; 0x24
   1af10:	sub	r3, r5, #104	; 0x68
   1af14:	uxtb	r3, r3
   1af18:	cmp	r3, #15
   1af1c:	bls	1af28 <dta_ctx_init+0x28>
   1af20:	mov	r0, #24
   1af24:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1af28:	mov	r6, r2
   1af2c:	mov	r9, r1
   1af30:	mov	r4, r0
   1af34:	bl	3ed4 <machine_is_little_endian@plt>
   1af38:	cmp	r0, #0
   1af3c:	moveq	r3, #1
   1af40:	movne	r3, #2
   1af44:	ldrb	r0, [r4, #192]	; 0xc0
   1af48:	bic	r0, r0, #1
   1af4c:	cmp	r8, r3
   1af50:	orrne	r0, r0, #1
   1af54:	strb	r0, [r4, #192]	; 0xc0
   1af58:	str	r5, [r4, #144]	; 0x90
   1af5c:	cmp	r8, #2
   1af60:	moveq	r3, #1
   1af64:	movne	r3, #2
   1af68:	str	r3, [r4, #232]	; 0xe8
   1af6c:	str	r9, [r4, #148]	; 0x94
   1af70:	strd	r6, [r4, #152]	; 0x98
   1af74:	cmp	r9, #0
   1af78:	bne	1afcc <dta_ctx_init+0xcc>
   1af7c:	ldrb	r3, [r4, #192]	; 0xc0
   1af80:	bic	r3, r3, #2
   1af84:	strb	r3, [r4, #192]	; 0xc0
   1af88:	cmp	r5, #104	; 0x68
   1af8c:	movls	r3, #7
   1af90:	strls	r3, [r4, #80]	; 0x50
   1af94:	bls	1b098 <dta_ctx_init+0x198>
   1af98:	cmp	r5, #113	; 0x71
   1af9c:	movls	r3, #12
   1afa0:	strls	r3, [r4, #80]	; 0x50
   1afa4:	bls	1b098 <dta_ctx_init+0x198>
   1afa8:	cmp	r5, #117	; 0x75
   1afac:	bhi	1afec <dta_ctx_init+0xec>
   1afb0:	mov	r3, #49	; 0x31
   1afb4:	str	r3, [r4, #80]	; 0x50
   1afb8:	cmp	r5, #116	; 0x74
   1afbc:	movhi	r3, #117	; 0x75
   1afc0:	strbhi	r3, [r4, #20]
   1afc4:	bhi	1b0b0 <dta_ctx_init+0x1b0>
   1afc8:	b	1affc <dta_ctx_init+0xfc>
   1afcc:	mov	r1, #4
   1afd0:	mov	r0, r9
   1afd4:	bl	3fe8 <readstat_calloc@plt>
   1afd8:	str	r0, [r4, #228]	; 0xe4
   1afdc:	cmp	r0, #0
   1afe0:	bne	1af7c <dta_ctx_init+0x7c>
   1afe4:	mov	r0, #3
   1afe8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1afec:	mov	r3, #57	; 0x39
   1aff0:	str	r3, [r4, #80]	; 0x50
   1aff4:	cmp	r5, #116	; 0x74
   1aff8:	bhi	1b238 <dta_ctx_init+0x338>
   1affc:	cmp	r5, #110	; 0x6e
   1b000:	movhi	r3, #111	; 0x6f
   1b004:	movls	r3, #0
   1b008:	strb	r3, [r4, #20]
   1b00c:	cmp	r5, #117	; 0x75
   1b010:	bls	1b028 <dta_ctx_init+0x128>
   1b014:	mov	r3, #2
   1b018:	str	r3, [r4, #8]
   1b01c:	str	r3, [r4, #112]	; 0x70
   1b020:	mov	r3, #6
   1b024:	str	r3, [r4, #116]	; 0x74
   1b028:	cmp	r5, #104	; 0x68
   1b02c:	bhi	1b0c8 <dta_ctx_init+0x1c8>
   1b030:	mov	r3, #0
   1b034:	str	r3, [r4, #92]	; 0x5c
   1b038:	cmp	r5, #109	; 0x6d
   1b03c:	bls	1b254 <dta_ctx_init+0x354>
   1b040:	cmp	r5, #117	; 0x75
   1b044:	bhi	1b124 <dta_ctx_init+0x224>
   1b048:	mov	r3, #33	; 0x21
   1b04c:	str	r3, [r4, #84]	; 0x54
   1b050:	str	r3, [r4, #76]	; 0x4c
   1b054:	str	r3, [r4, #96]	; 0x60
   1b058:	cmp	r5, #107	; 0x6b
   1b05c:	bls	1b28c <dta_ctx_init+0x38c>
   1b060:	mov	r3, #81	; 0x51
   1b064:	str	r3, [r4, #88]	; 0x58
   1b068:	str	r3, [r4, #4]
   1b06c:	cmp	r5, #104	; 0x68
   1b070:	bls	1b2a0 <dta_ctx_init+0x3a0>
   1b074:	mov	r3, #18
   1b078:	str	r3, [r4, #16]
   1b07c:	mov	r3, #4
   1b080:	str	r3, [r4, #100]	; 0x64
   1b084:	mov	r3, #33	; 0x21
   1b088:	str	r3, [r4, #104]	; 0x68
   1b08c:	mov	r3, #3
   1b090:	str	r3, [r4, #108]	; 0x6c
   1b094:	b	1b2bc <dta_ctx_init+0x3bc>
   1b098:	cmp	r5, #116	; 0x74
   1b09c:	bls	1affc <dta_ctx_init+0xfc>
   1b0a0:	mov	r3, #117	; 0x75
   1b0a4:	strb	r3, [r4, #20]
   1b0a8:	cmp	r5, r3
   1b0ac:	bhi	1b014 <dta_ctx_init+0x114>
   1b0b0:	mov	r3, #1
   1b0b4:	str	r3, [r4, #8]
   1b0b8:	mov	r3, #4
   1b0bc:	str	r3, [r4, #112]	; 0x70
   1b0c0:	str	r3, [r4, #116]	; 0x74
   1b0c4:	b	1b028 <dta_ctx_init+0x128>
   1b0c8:	cmp	r5, #109	; 0x6d
   1b0cc:	bhi	1b118 <dta_ctx_init+0x218>
   1b0d0:	mov	r3, #2
   1b0d4:	str	r3, [r4, #92]	; 0x5c
   1b0d8:	mov	r3, #9
   1b0dc:	str	r3, [r4, #84]	; 0x54
   1b0e0:	str	r3, [r4, #76]	; 0x4c
   1b0e4:	str	r3, [r4, #96]	; 0x60
   1b0e8:	cmp	r5, #107	; 0x6b
   1b0ec:	bhi	1b26c <dta_ctx_init+0x36c>
   1b0f0:	mov	r3, #32
   1b0f4:	str	r3, [r4, #88]	; 0x58
   1b0f8:	str	r3, [r4, #4]
   1b0fc:	mov	r3, #18
   1b100:	str	r3, [r4, #16]
   1b104:	mov	r3, #4
   1b108:	str	r3, [r4, #100]	; 0x64
   1b10c:	cmp	r5, #117	; 0x75
   1b110:	bhi	1b160 <dta_ctx_init+0x260>
   1b114:	b	1b084 <dta_ctx_init+0x184>
   1b118:	mov	r3, #4
   1b11c:	str	r3, [r4, #92]	; 0x5c
   1b120:	b	1b040 <dta_ctx_init+0x140>
   1b124:	mov	r3, #129	; 0x81
   1b128:	str	r3, [r4, #84]	; 0x54
   1b12c:	str	r3, [r4, #76]	; 0x4c
   1b130:	str	r3, [r4, #96]	; 0x60
   1b134:	cmp	r5, #107	; 0x6b
   1b138:	bls	1b42c <dta_ctx_init+0x52c>
   1b13c:	ldr	r3, [pc, #784]	; 1b454 <dta_ctx_init+0x554>
   1b140:	str	r3, [r4, #88]	; 0x58
   1b144:	str	r3, [r4, #4]
   1b148:	cmp	r5, #104	; 0x68
   1b14c:	bls	1b2a0 <dta_ctx_init+0x3a0>
   1b150:	mov	r3, #18
   1b154:	str	r3, [r4, #16]
   1b158:	mov	r3, #4
   1b15c:	str	r3, [r4, #100]	; 0x64
   1b160:	mov	r3, #129	; 0x81
   1b164:	str	r3, [r4, #104]	; 0x68
   1b168:	b	1b08c <dta_ctx_init+0x18c>
   1b16c:	mov	r3, #100	; 0x64
   1b170:	strb	r3, [r4, #193]	; 0xc1
   1b174:	ldr	r3, [pc, #732]	; 1b458 <dta_ctx_init+0x558>
   1b178:	strh	r3, [r4, #194]	; 0xc2
   1b17c:	mvn	r3, #-2147483621	; 0x8000001b
   1b180:	str	r3, [r4, #196]	; 0xc4
   1b184:	mvn	r3, #-2130706432	; 0x81000000
   1b188:	str	r3, [r4, #200]	; 0xc8
   1b18c:	mvn	r2, #0
   1b190:	ldr	r3, [pc, #708]	; 1b45c <dta_ctx_init+0x55c>
   1b194:	strd	r2, [r4, #208]	; 0xd0
   1b198:	ldrb	r3, [r4, #192]	; 0xc0
   1b19c:	orr	r3, r3, #8
   1b1a0:	strb	r3, [r4, #192]	; 0xc0
   1b1a4:	b	1b318 <dta_ctx_init+0x418>
   1b1a8:	cmp	r5, #117	; 0x75
   1b1ac:	bls	1b1e0 <dta_ctx_init+0x2e0>
   1b1b0:	ldr	r1, [pc, #680]	; 1b460 <dta_ctx_init+0x560>
   1b1b4:	add	r1, pc, r1
   1b1b8:	ldr	r0, [sp, #44]	; 0x2c
   1b1bc:	bl	3e20 <strcmp@plt>
   1b1c0:	cmp	r0, #0
   1b1c4:	beq	1b340 <dta_ctx_init+0x440>
   1b1c8:	ldr	r1, [pc, #660]	; 1b464 <dta_ctx_init+0x564>
   1b1cc:	add	r1, pc, r1
   1b1d0:	ldr	r0, [sp, #44]	; 0x2c
   1b1d4:	bl	415c <iconv_open@plt>
   1b1d8:	str	r0, [r4, #236]	; 0xec
   1b1dc:	b	1b340 <dta_ctx_init+0x440>
   1b1e0:	ldr	r1, [pc, #640]	; 1b468 <dta_ctx_init+0x568>
   1b1e4:	add	r1, pc, r1
   1b1e8:	ldr	r0, [sp, #44]	; 0x2c
   1b1ec:	bl	415c <iconv_open@plt>
   1b1f0:	str	r0, [r4, #236]	; 0xec
   1b1f4:	b	1b340 <dta_ctx_init+0x440>
   1b1f8:	mov	r3, #0
   1b1fc:	str	r3, [r4, #236]	; 0xec
   1b200:	mov	r0, #7
   1b204:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b208:	mov	r0, #3
   1b20c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b210:	mov	r0, #3
   1b214:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b218:	mov	r0, #3
   1b21c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b220:	mov	r0, #3
   1b224:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b228:	mov	r0, #3
   1b22c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b230:	mov	r0, #3
   1b234:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b238:	mov	r3, #117	; 0x75
   1b23c:	strb	r3, [r4, #20]
   1b240:	b	1b014 <dta_ctx_init+0x114>
   1b244:	mov	r3, #32
   1b248:	str	r3, [r4, #88]	; 0x58
   1b24c:	str	r3, [r4, #4]
   1b250:	b	1b2a0 <dta_ctx_init+0x3a0>
   1b254:	mov	r3, #9
   1b258:	str	r3, [r4, #84]	; 0x54
   1b25c:	str	r3, [r4, #76]	; 0x4c
   1b260:	str	r3, [r4, #96]	; 0x60
   1b264:	cmp	r5, #107	; 0x6b
   1b268:	bls	1b244 <dta_ctx_init+0x344>
   1b26c:	cmp	r5, #117	; 0x75
   1b270:	bhi	1b13c <dta_ctx_init+0x23c>
   1b274:	b	1b060 <dta_ctx_init+0x160>
   1b278:	mov	r3, #18
   1b27c:	str	r3, [r4, #16]
   1b280:	mov	r3, #4
   1b284:	str	r3, [r4, #100]	; 0x64
   1b288:	b	1b084 <dta_ctx_init+0x184>
   1b28c:	mov	r3, #32
   1b290:	str	r3, [r4, #88]	; 0x58
   1b294:	str	r3, [r4, #4]
   1b298:	cmp	r5, #104	; 0x68
   1b29c:	bhi	1b278 <dta_ctx_init+0x378>
   1b2a0:	mov	r3, #0
   1b2a4:	str	r3, [r4, #16]
   1b2a8:	mov	r3, #2
   1b2ac:	str	r3, [r4, #100]	; 0x64
   1b2b0:	mov	r2, #12
   1b2b4:	str	r2, [r4, #104]	; 0x68
   1b2b8:	str	r3, [r4, #108]	; 0x6c
   1b2bc:	cmp	r5, #116	; 0x74
   1b2c0:	movls	r3, #1
   1b2c4:	strls	r3, [r4, #24]
   1b2c8:	ldrbls	r3, [r4, #192]	; 0xc0
   1b2cc:	bicls	r3, r3, #4
   1b2d0:	movhi	r3, #2
   1b2d4:	strhi	r3, [r4, #24]
   1b2d8:	ldrbhi	r3, [r4, #192]	; 0xc0
   1b2dc:	orrhi	r3, r3, #4
   1b2e0:	strb	r3, [r4, #192]	; 0xc0
   1b2e4:	cmp	r5, #112	; 0x70
   1b2e8:	bhi	1b16c <dta_ctx_init+0x26c>
   1b2ec:	mov	r3, #126	; 0x7e
   1b2f0:	strb	r3, [r4, #193]	; 0xc1
   1b2f4:	ldr	r3, [pc, #368]	; 1b46c <dta_ctx_init+0x56c>
   1b2f8:	strh	r3, [r4, #194]	; 0xc2
   1b2fc:	mvn	r3, #-2147483647	; 0x80000001
   1b300:	str	r3, [r4, #196]	; 0xc4
   1b304:	mvn	r3, #-2130706432	; 0x81000000
   1b308:	str	r3, [r4, #200]	; 0xc8
   1b30c:	mvn	r2, #0
   1b310:	ldr	r3, [pc, #324]	; 1b45c <dta_ctx_init+0x55c>
   1b314:	strd	r2, [r4, #208]	; 0xd0
   1b318:	ldr	r3, [sp, #44]	; 0x2c
   1b31c:	cmp	r3, #0
   1b320:	beq	1b34c <dta_ctx_init+0x44c>
   1b324:	ldr	r3, [sp, #40]	; 0x28
   1b328:	cmp	r3, #0
   1b32c:	beq	1b1a8 <dta_ctx_init+0x2a8>
   1b330:	mov	r1, r3
   1b334:	ldr	r0, [sp, #44]	; 0x2c
   1b338:	bl	415c <iconv_open@plt>
   1b33c:	str	r0, [r4, #236]	; 0xec
   1b340:	ldr	r3, [r4, #236]	; 0xec
   1b344:	cmn	r3, #1
   1b348:	beq	1b1f8 <dta_ctx_init+0x2f8>
   1b34c:	cmp	r5, #118	; 0x76
   1b350:	ldr	r3, [r4, #148]	; 0x94
   1b354:	add	r3, r3, #1
   1b358:	lslls	r3, r3, #1
   1b35c:	lslhi	r3, r3, #2
   1b360:	str	r3, [r4, #48]	; 0x30
   1b364:	ldr	r0, [r4, #48]	; 0x30
   1b368:	bl	4258 <readstat_malloc@plt>
   1b36c:	str	r0, [r4, #44]	; 0x2c
   1b370:	cmp	r0, #0
   1b374:	beq	1b208 <dta_ctx_init+0x308>
   1b378:	ldr	r3, [r4, #148]	; 0x94
   1b37c:	cmp	r3, #0
   1b380:	ble	1b41c <dta_ctx_init+0x51c>
   1b384:	lsl	r0, r3, #1
   1b388:	str	r0, [r4, #32]
   1b38c:	ldr	r2, [r4, #76]	; 0x4c
   1b390:	mul	r2, r3, r2
   1b394:	str	r2, [r4, #40]	; 0x28
   1b398:	ldr	r2, [r4, #80]	; 0x50
   1b39c:	mul	r2, r3, r2
   1b3a0:	str	r2, [r4, #56]	; 0x38
   1b3a4:	ldr	r2, [r4, #84]	; 0x54
   1b3a8:	mul	r2, r3, r2
   1b3ac:	str	r2, [r4, #64]	; 0x40
   1b3b0:	ldr	r2, [r4, #88]	; 0x58
   1b3b4:	mul	r3, r3, r2
   1b3b8:	str	r3, [r4, #72]	; 0x48
   1b3bc:	bl	4258 <readstat_malloc@plt>
   1b3c0:	str	r0, [r4, #28]
   1b3c4:	cmp	r0, #0
   1b3c8:	beq	1b210 <dta_ctx_init+0x310>
   1b3cc:	ldr	r0, [r4, #40]	; 0x28
   1b3d0:	bl	4258 <readstat_malloc@plt>
   1b3d4:	str	r0, [r4, #36]	; 0x24
   1b3d8:	cmp	r0, #0
   1b3dc:	beq	1b218 <dta_ctx_init+0x318>
   1b3e0:	ldr	r0, [r4, #56]	; 0x38
   1b3e4:	bl	4258 <readstat_malloc@plt>
   1b3e8:	str	r0, [r4, #52]	; 0x34
   1b3ec:	cmp	r0, #0
   1b3f0:	beq	1b220 <dta_ctx_init+0x320>
   1b3f4:	ldr	r0, [r4, #64]	; 0x40
   1b3f8:	bl	4258 <readstat_malloc@plt>
   1b3fc:	str	r0, [r4, #60]	; 0x3c
   1b400:	cmp	r0, #0
   1b404:	beq	1b228 <dta_ctx_init+0x328>
   1b408:	ldr	r0, [r4, #72]	; 0x48
   1b40c:	bl	4258 <readstat_malloc@plt>
   1b410:	str	r0, [r4, #68]	; 0x44
   1b414:	cmp	r0, #0
   1b418:	beq	1b230 <dta_ctx_init+0x330>
   1b41c:	mov	r3, #1
   1b420:	str	r3, [r4, #284]	; 0x11c
   1b424:	mov	r0, #0
   1b428:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b42c:	mov	r3, #32
   1b430:	str	r3, [r4, #88]	; 0x58
   1b434:	str	r3, [r4, #4]
   1b438:	cmp	r5, #104	; 0x68
   1b43c:	bls	1b2a0 <dta_ctx_init+0x3a0>
   1b440:	mov	r3, #18
   1b444:	str	r3, [r4, #16]
   1b448:	mov	r3, #4
   1b44c:	str	r3, [r4, #100]	; 0x64
   1b450:	b	1b160 <dta_ctx_init+0x260>
   1b454:	.word	0x00000141
   1b458:	.word	0x00007fe4
   1b45c:	.word	0x7fdfffff
   1b460:	.word	0x00009f10
   1b464:	.word	0x00009ef8
   1b468:	.word	0x0000bbdc
   1b46c:	.word	0x00007ffe

0001b470 <dta_ctx_free>:
   1b470:	push	{r4, r5, r6, lr}
   1b474:	mov	r4, r0
   1b478:	ldr	r0, [r0, #28]
   1b47c:	cmp	r0, #0
   1b480:	beq	1b488 <dta_ctx_free+0x18>
   1b484:	bl	3ee0 <free@plt>
   1b488:	ldr	r0, [r4, #36]	; 0x24
   1b48c:	cmp	r0, #0
   1b490:	beq	1b498 <dta_ctx_free+0x28>
   1b494:	bl	3ee0 <free@plt>
   1b498:	ldr	r0, [r4, #44]	; 0x2c
   1b49c:	cmp	r0, #0
   1b4a0:	beq	1b4a8 <dta_ctx_free+0x38>
   1b4a4:	bl	3ee0 <free@plt>
   1b4a8:	ldr	r0, [r4, #52]	; 0x34
   1b4ac:	cmp	r0, #0
   1b4b0:	beq	1b4b8 <dta_ctx_free+0x48>
   1b4b4:	bl	3ee0 <free@plt>
   1b4b8:	ldr	r0, [r4, #60]	; 0x3c
   1b4bc:	cmp	r0, #0
   1b4c0:	beq	1b4c8 <dta_ctx_free+0x58>
   1b4c4:	bl	3ee0 <free@plt>
   1b4c8:	ldr	r0, [r4, #68]	; 0x44
   1b4cc:	cmp	r0, #0
   1b4d0:	beq	1b4d8 <dta_ctx_free+0x68>
   1b4d4:	bl	3ee0 <free@plt>
   1b4d8:	ldr	r0, [r4, #236]	; 0xec
   1b4dc:	cmp	r0, #0
   1b4e0:	beq	1b4e8 <dta_ctx_free+0x78>
   1b4e4:	bl	3df0 <iconv_close@plt>
   1b4e8:	ldr	r0, [r4]
   1b4ec:	cmp	r0, #0
   1b4f0:	beq	1b4f8 <dta_ctx_free+0x88>
   1b4f4:	bl	3ee0 <free@plt>
   1b4f8:	ldr	r3, [r4, #228]	; 0xe4
   1b4fc:	cmp	r3, #0
   1b500:	beq	1b548 <dta_ctx_free+0xd8>
   1b504:	ldr	r3, [r4, #148]	; 0x94
   1b508:	cmp	r3, #0
   1b50c:	ble	1b540 <dta_ctx_free+0xd0>
   1b510:	mov	r5, #0
   1b514:	b	1b528 <dta_ctx_free+0xb8>
   1b518:	add	r5, r5, #1
   1b51c:	ldr	r3, [r4, #148]	; 0x94
   1b520:	cmp	r3, r5
   1b524:	ble	1b540 <dta_ctx_free+0xd0>
   1b528:	ldr	r3, [r4, #228]	; 0xe4
   1b52c:	ldr	r0, [r3, r5, lsl #2]
   1b530:	cmp	r0, #0
   1b534:	beq	1b518 <dta_ctx_free+0xa8>
   1b538:	bl	3ee0 <free@plt>
   1b53c:	b	1b518 <dta_ctx_free+0xa8>
   1b540:	ldr	r0, [r4, #228]	; 0xe4
   1b544:	bl	3ee0 <free@plt>
   1b548:	ldr	r3, [r4, #216]	; 0xd8
   1b54c:	cmp	r3, #0
   1b550:	beq	1b588 <dta_ctx_free+0x118>
   1b554:	ldr	r3, [r4, #220]	; 0xdc
   1b558:	cmp	r3, #0
   1b55c:	beq	1b580 <dta_ctx_free+0x110>
   1b560:	mov	r5, #0
   1b564:	ldr	r3, [r4, #216]	; 0xd8
   1b568:	ldr	r0, [r3, r5, lsl #2]
   1b56c:	bl	3ee0 <free@plt>
   1b570:	add	r5, r5, #1
   1b574:	ldr	r3, [r4, #220]	; 0xdc
   1b578:	cmp	r3, r5
   1b57c:	bhi	1b564 <dta_ctx_free+0xf4>
   1b580:	ldr	r0, [r4, #216]	; 0xd8
   1b584:	bl	3ee0 <free@plt>
   1b588:	mov	r0, r4
   1b58c:	bl	3ee0 <free@plt>
   1b590:	pop	{r4, r5, r6, pc}

0001b594 <dta_type_info>:
   1b594:	ldrb	r1, [r1, #20]
   1b598:	cmp	r1, #111	; 0x6f
   1b59c:	beq	1b5ec <dta_type_info+0x58>
   1b5a0:	cmp	r1, #117	; 0x75
   1b5a4:	beq	1b660 <dta_type_info+0xcc>
   1b5a8:	cmp	r0, #126	; 0x7e
   1b5ac:	bhi	1b75c <dta_type_info+0x1c8>
   1b5b0:	sub	r0, r0, #98	; 0x62
   1b5b4:	cmp	r0, #10
   1b5b8:	addls	pc, pc, r0, lsl #2
   1b5bc:	b	1b74c <dta_type_info+0x1b8>
   1b5c0:	b	1b78c <dta_type_info+0x1f8>
   1b5c4:	b	1b74c <dta_type_info+0x1b8>
   1b5c8:	b	1b73c <dta_type_info+0x1a8>
   1b5cc:	b	1b74c <dta_type_info+0x1b8>
   1b5d0:	b	1b72c <dta_type_info+0x198>
   1b5d4:	b	1b74c <dta_type_info+0x1b8>
   1b5d8:	b	1b74c <dta_type_info+0x1b8>
   1b5dc:	b	1b70c <dta_type_info+0x178>
   1b5e0:	b	1b74c <dta_type_info+0x1b8>
   1b5e4:	b	1b74c <dta_type_info+0x1b8>
   1b5e8:	b	1b71c <dta_type_info+0x188>
   1b5ec:	sub	r1, r0, #251	; 0xfb
   1b5f0:	cmp	r1, #4
   1b5f4:	addls	pc, pc, r1, lsl #2
   1b5f8:	b	1b650 <dta_type_info+0xbc>
   1b5fc:	b	1b77c <dta_type_info+0x1e8>
   1b600:	b	1b610 <dta_type_info+0x7c>
   1b604:	b	1b620 <dta_type_info+0x8c>
   1b608:	b	1b630 <dta_type_info+0x9c>
   1b60c:	b	1b640 <dta_type_info+0xac>
   1b610:	mov	ip, #2
   1b614:	mov	r1, ip
   1b618:	mov	r0, #0
   1b61c:	b	1b768 <dta_type_info+0x1d4>
   1b620:	mov	ip, #3
   1b624:	mov	r1, #4
   1b628:	mov	r0, #0
   1b62c:	b	1b768 <dta_type_info+0x1d4>
   1b630:	mov	ip, #4
   1b634:	mov	r1, ip
   1b638:	mov	r0, #0
   1b63c:	b	1b768 <dta_type_info+0x1d4>
   1b640:	mov	ip, #5
   1b644:	mov	r1, #8
   1b648:	mov	r0, #0
   1b64c:	b	1b768 <dta_type_info+0x1d4>
   1b650:	mov	r1, r0
   1b654:	mov	ip, #0
   1b658:	mov	r0, ip
   1b65c:	b	1b768 <dta_type_info+0x1d4>
   1b660:	ldr	r1, [pc, #308]	; 1b79c <dta_type_info+0x208>
   1b664:	cmp	r0, r1
   1b668:	beq	1b6ec <dta_type_info+0x158>
   1b66c:	bls	1b69c <dta_type_info+0x108>
   1b670:	ldr	r1, [pc, #296]	; 1b7a0 <dta_type_info+0x20c>
   1b674:	cmp	r0, r1
   1b678:	beq	1b6cc <dta_type_info+0x138>
   1b67c:	bcc	1b6dc <dta_type_info+0x148>
   1b680:	add	r1, r1, #1
   1b684:	cmp	r0, r1
   1b688:	moveq	ip, #1
   1b68c:	moveq	r1, ip
   1b690:	moveq	r0, #0
   1b694:	beq	1b768 <dta_type_info+0x1d4>
   1b698:	b	1b6bc <dta_type_info+0x128>
   1b69c:	cmp	r0, #32768	; 0x8000
   1b6a0:	beq	1b6fc <dta_type_info+0x168>
   1b6a4:	sub	r1, r1, #1
   1b6a8:	cmp	r0, r1
   1b6ac:	moveq	ip, #5
   1b6b0:	moveq	r1, #8
   1b6b4:	moveq	r0, #0
   1b6b8:	beq	1b768 <dta_type_info+0x1d4>
   1b6bc:	mov	r1, r0
   1b6c0:	mov	ip, #0
   1b6c4:	mov	r0, ip
   1b6c8:	b	1b768 <dta_type_info+0x1d4>
   1b6cc:	mov	ip, #2
   1b6d0:	mov	r1, ip
   1b6d4:	mov	r0, #0
   1b6d8:	b	1b768 <dta_type_info+0x1d4>
   1b6dc:	mov	ip, #3
   1b6e0:	mov	r1, #4
   1b6e4:	mov	r0, #0
   1b6e8:	b	1b768 <dta_type_info+0x1d4>
   1b6ec:	mov	ip, #4
   1b6f0:	mov	r1, ip
   1b6f4:	mov	r0, #0
   1b6f8:	b	1b768 <dta_type_info+0x1d4>
   1b6fc:	mov	ip, #6
   1b700:	mov	r1, #8
   1b704:	mov	r0, #0
   1b708:	b	1b768 <dta_type_info+0x1d4>
   1b70c:	mov	ip, #2
   1b710:	mov	r1, ip
   1b714:	mov	r0, #0
   1b718:	b	1b768 <dta_type_info+0x1d4>
   1b71c:	mov	ip, #3
   1b720:	mov	r1, #4
   1b724:	mov	r0, #0
   1b728:	b	1b768 <dta_type_info+0x1d4>
   1b72c:	mov	ip, #4
   1b730:	mov	r1, ip
   1b734:	mov	r0, #0
   1b738:	b	1b768 <dta_type_info+0x1d4>
   1b73c:	mov	ip, #5
   1b740:	mov	r1, #8
   1b744:	mov	r0, #0
   1b748:	b	1b768 <dta_type_info+0x1d4>
   1b74c:	mov	ip, #0
   1b750:	mov	r1, ip
   1b754:	mov	r0, #5
   1b758:	b	1b768 <dta_type_info+0x1d4>
   1b75c:	sub	r1, r0, #127	; 0x7f
   1b760:	mov	ip, #0
   1b764:	mov	r0, ip
   1b768:	cmp	r2, #0
   1b76c:	strne	r1, [r2]
   1b770:	cmp	r3, #0
   1b774:	strne	ip, [r3]
   1b778:	bx	lr
   1b77c:	mov	ip, #1
   1b780:	mov	r1, ip
   1b784:	mov	r0, #0
   1b788:	b	1b768 <dta_type_info+0x1d4>
   1b78c:	mov	ip, #1
   1b790:	mov	r1, ip
   1b794:	mov	r0, #0
   1b798:	b	1b768 <dta_type_info+0x1d4>
   1b79c:	.word	0x0000fff7
   1b7a0:	.word	0x0000fff9

0001b7a4 <dta_parse_timestamp>:
   1b7a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b7a8:	sub	sp, sp, #1056	; 0x420
   1b7ac:	sub	sp, sp, #4
   1b7b0:	str	r0, [sp, #24]
   1b7b4:	str	r1, [sp, #28]
   1b7b8:	str	r3, [sp, #20]
   1b7bc:	add	r1, r0, r1
   1b7c0:	str	r1, [sp, #8]
   1b7c4:	cmp	r0, r1
   1b7c8:	beq	1bad4 <dta_parse_timestamp+0x330>
   1b7cc:	mov	r7, r0
   1b7d0:	mov	r9, #0
   1b7d4:	mov	r6, #1
   1b7d8:	ldr	fp, [pc, #800]	; 1bb00 <dta_parse_timestamp+0x35c>
   1b7dc:	add	fp, pc, fp
   1b7e0:	ldr	r3, [pc, #796]	; 1bb04 <dta_parse_timestamp+0x360>
   1b7e4:	add	r3, pc, r3
   1b7e8:	str	r3, [sp, #12]
   1b7ec:	ldr	sl, [pc, #788]	; 1bb08 <dta_parse_timestamp+0x364>
   1b7f0:	add	sl, pc, sl
   1b7f4:	ldr	r3, [pc, #784]	; 1bb0c <dta_parse_timestamp+0x368>
   1b7f8:	add	r3, pc, r3
   1b7fc:	add	r3, r3, #588	; 0x24c
   1b800:	str	r3, [sp, #16]
   1b804:	b	1ba2c <dta_parse_timestamp+0x288>
   1b808:	cmp	r3, r0
   1b80c:	bhi	1b840 <dta_parse_timestamp+0x9c>
   1b810:	sub	r1, r0, r3
   1b814:	add	ip, r3, r1, asr #1
   1b818:	ldrb	r1, [r3, r1, asr #1]
   1b81c:	cmp	lr, r1
   1b820:	subcc	r0, ip, #1
   1b824:	bcc	1b808 <dta_parse_timestamp+0x64>
   1b828:	cmp	lr, r1
   1b82c:	addhi	r3, ip, #1
   1b830:	bhi	1b808 <dta_parse_timestamp+0x64>
   1b834:	sub	ip, ip, r4
   1b838:	add	r5, r5, ip
   1b83c:	b	1b8c0 <dta_parse_timestamp+0x11c>
   1b840:	add	r4, r4, r8
   1b844:	add	r5, r5, r8
   1b848:	ldr	r3, [sp, #12]
   1b84c:	add	r6, r3, r6
   1b850:	ldrb	r6, [r6, #264]	; 0x108
   1b854:	cmp	r6, #0
   1b858:	ble	1b8c0 <dta_parse_timestamp+0x11c>
   1b85c:	add	r0, r4, r6, lsl #1
   1b860:	sub	r0, r0, #2
   1b864:	cmp	r4, r0
   1b868:	bhi	1b8bc <dta_parse_timestamp+0x118>
   1b86c:	ldrb	lr, [r7]
   1b870:	mov	r1, r4
   1b874:	b	1b880 <dta_parse_timestamp+0xdc>
   1b878:	cmp	r0, r1
   1b87c:	bcc	1b8bc <dta_parse_timestamp+0x118>
   1b880:	sub	r3, r0, r1
   1b884:	asr	r3, r3, #1
   1b888:	bic	r3, r3, #1
   1b88c:	add	ip, r1, r3
   1b890:	ldrb	r3, [r1, r3]
   1b894:	cmp	r3, lr
   1b898:	subhi	r0, ip, #2
   1b89c:	bhi	1b878 <dta_parse_timestamp+0xd4>
   1b8a0:	ldrb	r3, [ip, #1]
   1b8a4:	cmp	r3, lr
   1b8a8:	addcc	r1, ip, #2
   1b8ac:	bcc	1b878 <dta_parse_timestamp+0xd4>
   1b8b0:	sub	ip, ip, r4
   1b8b4:	add	r5, r5, ip, asr #1
   1b8b8:	b	1b8c0 <dta_parse_timestamp+0x11c>
   1b8bc:	add	r5, r5, r6
   1b8c0:	add	r5, sl, r5
   1b8c4:	ldrb	r3, [r5, #312]	; 0x138
   1b8c8:	add	r3, sl, r3
   1b8cc:	ldrb	r6, [r3, #468]	; 0x1d4
   1b8d0:	ldrb	r1, [r3, #528]	; 0x210
   1b8d4:	cmp	r1, #0
   1b8d8:	beq	1ba14 <dta_parse_timestamp+0x270>
   1b8dc:	ldr	r0, [sp, #16]
   1b8e0:	add	r3, r0, r1
   1b8e4:	ldrb	r0, [r0, r1]
   1b8e8:	add	r0, r3, r0
   1b8ec:	mov	r8, #4
   1b8f0:	mov	r5, #3
   1b8f4:	mov	r4, #2
   1b8f8:	mov	lr, #1
   1b8fc:	mov	ip, #0
   1b900:	cmp	r0, r3
   1b904:	beq	1ba14 <dta_parse_timestamp+0x270>
   1b908:	ldrb	r1, [r3, #1]!
   1b90c:	cmp	r1, #16
   1b910:	addls	pc, pc, r1, lsl #2
   1b914:	b	1b900 <dta_parse_timestamp+0x15c>
   1b918:	b	1b964 <dta_parse_timestamp+0x1c0>
   1b91c:	b	1b95c <dta_parse_timestamp+0x1b8>
   1b920:	b	1b978 <dta_parse_timestamp+0x1d4>
   1b924:	b	1b980 <dta_parse_timestamp+0x1dc>
   1b928:	b	1b988 <dta_parse_timestamp+0x1e4>
   1b92c:	b	1b990 <dta_parse_timestamp+0x1ec>
   1b930:	b	1b998 <dta_parse_timestamp+0x1f4>
   1b934:	b	1b9a0 <dta_parse_timestamp+0x1fc>
   1b938:	b	1b9a8 <dta_parse_timestamp+0x204>
   1b93c:	b	1b9b4 <dta_parse_timestamp+0x210>
   1b940:	b	1b9c0 <dta_parse_timestamp+0x21c>
   1b944:	b	1b9cc <dta_parse_timestamp+0x228>
   1b948:	b	1b9d8 <dta_parse_timestamp+0x234>
   1b94c:	b	1b9e4 <dta_parse_timestamp+0x240>
   1b950:	b	1b9f0 <dta_parse_timestamp+0x24c>
   1b954:	b	1b9fc <dta_parse_timestamp+0x258>
   1b958:	b	1ba0c <dta_parse_timestamp+0x268>
   1b95c:	mov	r9, ip
   1b960:	b	1b900 <dta_parse_timestamp+0x15c>
   1b964:	add	r9, r9, r9, lsl #2
   1b968:	ldrb	r1, [r7]
   1b96c:	sub	r1, r1, #48	; 0x30
   1b970:	add	r9, r1, r9, lsl #1
   1b974:	b	1b900 <dta_parse_timestamp+0x15c>
   1b978:	str	r9, [r2, #12]
   1b97c:	b	1b900 <dta_parse_timestamp+0x15c>
   1b980:	str	ip, [r2, #16]
   1b984:	b	1b900 <dta_parse_timestamp+0x15c>
   1b988:	str	lr, [r2, #16]
   1b98c:	b	1b900 <dta_parse_timestamp+0x15c>
   1b990:	str	r4, [r2, #16]
   1b994:	b	1b900 <dta_parse_timestamp+0x15c>
   1b998:	str	r5, [r2, #16]
   1b99c:	b	1b900 <dta_parse_timestamp+0x15c>
   1b9a0:	str	r8, [r2, #16]
   1b9a4:	b	1b900 <dta_parse_timestamp+0x15c>
   1b9a8:	mov	r1, #5
   1b9ac:	str	r1, [r2, #16]
   1b9b0:	b	1b900 <dta_parse_timestamp+0x15c>
   1b9b4:	mov	r1, #6
   1b9b8:	str	r1, [r2, #16]
   1b9bc:	b	1b900 <dta_parse_timestamp+0x15c>
   1b9c0:	mov	r1, #7
   1b9c4:	str	r1, [r2, #16]
   1b9c8:	b	1b900 <dta_parse_timestamp+0x15c>
   1b9cc:	mov	r1, #8
   1b9d0:	str	r1, [r2, #16]
   1b9d4:	b	1b900 <dta_parse_timestamp+0x15c>
   1b9d8:	mov	r1, #9
   1b9dc:	str	r1, [r2, #16]
   1b9e0:	b	1b900 <dta_parse_timestamp+0x15c>
   1b9e4:	mov	r1, #10
   1b9e8:	str	r1, [r2, #16]
   1b9ec:	b	1b900 <dta_parse_timestamp+0x15c>
   1b9f0:	mov	r1, #11
   1b9f4:	str	r1, [r2, #16]
   1b9f8:	b	1b900 <dta_parse_timestamp+0x15c>
   1b9fc:	sub	r1, r9, #1888	; 0x760
   1ba00:	sub	r1, r1, #12
   1ba04:	str	r1, [r2, #20]
   1ba08:	b	1b900 <dta_parse_timestamp+0x15c>
   1ba0c:	str	r9, [r2, #8]
   1ba10:	b	1b900 <dta_parse_timestamp+0x15c>
   1ba14:	cmp	r6, #0
   1ba18:	beq	1ba80 <dta_parse_timestamp+0x2dc>
   1ba1c:	add	r7, r7, #1
   1ba20:	ldr	r3, [sp, #8]
   1ba24:	cmp	r3, r7
   1ba28:	beq	1badc <dta_parse_timestamp+0x338>
   1ba2c:	add	r3, fp, r6
   1ba30:	ldrb	r4, [r3, #120]	; 0x78
   1ba34:	add	r4, fp, r4
   1ba38:	ldrb	r5, [r3, #168]	; 0xa8
   1ba3c:	ldrb	r8, [r3, #216]	; 0xd8
   1ba40:	cmp	r8, #0
   1ba44:	ble	1b848 <dta_parse_timestamp+0xa4>
   1ba48:	sub	r0, r8, #1
   1ba4c:	adds	r0, r4, r0
   1ba50:	bcs	1b840 <dta_parse_timestamp+0x9c>
   1ba54:	ldrb	lr, [r7]
   1ba58:	mov	r3, r4
   1ba5c:	b	1b810 <dta_parse_timestamp+0x6c>
   1ba60:	ldrb	r0, [r3, #1]!
   1ba64:	cmp	r0, #17
   1ba68:	streq	r9, [r2, #4]
   1ba6c:	cmp	r1, r3
   1ba70:	bne	1ba60 <dta_parse_timestamp+0x2bc>
   1ba74:	cmp	r6, #43	; 0x2b
   1ba78:	movgt	r0, #0
   1ba7c:	bgt	1bac8 <dta_parse_timestamp+0x324>
   1ba80:	ldr	r3, [sp, #20]
   1ba84:	cmp	r3, #0
   1ba88:	beq	1bac4 <dta_parse_timestamp+0x320>
   1ba8c:	mov	r5, r3
   1ba90:	ldr	r3, [sp, #28]
   1ba94:	ldr	r0, [sp, #24]
   1ba98:	str	r0, [sp, #4]
   1ba9c:	str	r3, [sp]
   1baa0:	ldr	r2, [pc, #104]	; 1bb10 <dta_parse_timestamp+0x36c>
   1baa4:	add	r2, pc, r2
   1baa8:	mov	r1, #1024	; 0x400
   1baac:	add	r4, sp, #32
   1bab0:	mov	r0, r4
   1bab4:	bl	42ac <snprintf@plt>
   1bab8:	ldr	r1, [sp, #1096]	; 0x448
   1babc:	mov	r0, r4
   1bac0:	blx	r5
   1bac4:	mov	r0, #29
   1bac8:	add	sp, sp, #1056	; 0x420
   1bacc:	add	sp, sp, #4
   1bad0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bad4:	mov	r9, #0
   1bad8:	mov	r6, #1
   1badc:	ldr	r3, [pc, #48]	; 1bb14 <dta_parse_timestamp+0x370>
   1bae0:	add	r3, pc, r3
   1bae4:	add	r0, r3, #588	; 0x24c
   1bae8:	add	r3, r3, r6
   1baec:	ldrb	r1, [r3, #628]	; 0x274
   1baf0:	add	r3, r0, r1
   1baf4:	ldrb	r1, [r0, r1]
   1baf8:	add	r1, r3, r1
   1bafc:	b	1ba6c <dta_parse_timestamp+0x2c8>
   1bb00:	.word	0x0000b5f4
   1bb04:	.word	0x0000b5ec
   1bb08:	.word	0x0000b5e0
   1bb0c:	.word	0x0000b5d8
   1bb10:	.word	0x0000b5d0
   1bb14:	.word	0x0000b2f0

0001bb18 <dta_update_progress>:
   1bb18:	push	{r4, r6, r7, lr}
   1bb1c:	vpush	{d8}
   1bb20:	mov	r4, r0
   1bb24:	ldrd	r6, [r0, #168]	; 0xa8
   1bb28:	cmp	r6, #1
   1bb2c:	sbcs	r3, r7, #0
   1bb30:	blt	1bb80 <dta_update_progress+0x68>
   1bb34:	ldrd	r0, [r0, #184]	; 0xb8
   1bb38:	bl	2454c <__aeabi_l2d>
   1bb3c:	vmov	d8, r0, r1
   1bb40:	mov	r0, r6
   1bb44:	mov	r1, r7
   1bb48:	bl	2454c <__aeabi_l2d>
   1bb4c:	vmov	d7, r0, r1
   1bb50:	vdiv.f64	d0, d8, d7
   1bb54:	ldr	r3, [r4, #268]	; 0x10c
   1bb58:	cmp	r3, #0
   1bb5c:	moveq	r0, #0
   1bb60:	beq	1bb78 <dta_update_progress+0x60>
   1bb64:	ldr	r0, [r4, #276]	; 0x114
   1bb68:	blx	r3
   1bb6c:	cmp	r0, #0
   1bb70:	movne	r0, #4
   1bb74:	moveq	r0, #0
   1bb78:	vpop	{d8}
   1bb7c:	pop	{r4, r6, r7, pc}
   1bb80:	vldr	d0, [pc]	; 1bb88 <dta_update_progress+0x70>
   1bb84:	b	1bb54 <dta_update_progress+0x3c>
	...

0001bb90 <dta_read_tag>:
   1bb90:	ldr	r3, [r0, #284]	; 0x11c
   1bb94:	cmp	r3, #0
   1bb98:	beq	1bba8 <dta_read_tag+0x18>
   1bb9c:	ldrb	r3, [r0, #192]	; 0xc0
   1bba0:	tst	r3, #4
   1bba4:	beq	1bc10 <dta_read_tag+0x80>
   1bba8:	push	{r4, r5, r6, lr}
   1bbac:	sub	sp, sp, #256	; 0x100
   1bbb0:	mov	r5, r1
   1bbb4:	mov	r4, r0
   1bbb8:	mov	r0, r1
   1bbbc:	bl	4228 <strlen@plt>
   1bbc0:	mov	r6, r0
   1bbc4:	ldr	r3, [r4, #280]	; 0x118
   1bbc8:	ldr	r4, [r3, #12]
   1bbcc:	ldr	r2, [r3, #20]
   1bbd0:	mov	r1, r0
   1bbd4:	mov	r0, sp
   1bbd8:	blx	r4
   1bbdc:	cmp	r6, r0
   1bbe0:	movne	r0, #2
   1bbe4:	beq	1bbf0 <dta_read_tag+0x60>
   1bbe8:	add	sp, sp, #256	; 0x100
   1bbec:	pop	{r4, r5, r6, pc}
   1bbf0:	mov	r2, r6
   1bbf4:	mov	r1, r5
   1bbf8:	mov	r0, sp
   1bbfc:	bl	4528 <strncmp@plt>
   1bc00:	cmp	r0, #0
   1bc04:	movne	r0, #5
   1bc08:	moveq	r0, #0
   1bc0c:	b	1bbe8 <dta_read_tag+0x58>
   1bc10:	mov	r0, #0
   1bc14:	bx	lr

0001bc18 <dta_read_chunk>:
   1bc18:	push	{r4, r5, r6, r7, r8, lr}
   1bc1c:	mov	r4, r0
   1bc20:	mov	r7, r2
   1bc24:	mov	r5, r3
   1bc28:	ldr	r6, [r0, #280]	; 0x118
   1bc2c:	bl	1bb90 <dta_read_tag>
   1bc30:	cmp	r0, #0
   1bc34:	popne	{r4, r5, r6, r7, r8, pc}
   1bc38:	ldr	r3, [r6, #12]
   1bc3c:	ldr	r2, [r6, #20]
   1bc40:	mov	r1, r5
   1bc44:	mov	r0, r7
   1bc48:	blx	r3
   1bc4c:	cmp	r5, r0
   1bc50:	beq	1bc5c <dta_read_chunk+0x44>
   1bc54:	mov	r0, #2
   1bc58:	pop	{r4, r5, r6, r7, r8, pc}
   1bc5c:	ldr	r1, [sp, #24]
   1bc60:	mov	r0, r4
   1bc64:	bl	1bb90 <dta_read_tag>
   1bc68:	pop	{r4, r5, r6, r7, r8, pc}

0001bc6c <dta_interpret_int32_bytes>:
   1bc6c:	push	{r4, r5, r6, lr}
   1bc70:	mov	r4, r0
   1bc74:	mov	r5, r1
   1bc78:	mov	r6, r2
   1bc7c:	mov	r2, #16
   1bc80:	mov	r1, #0
   1bc84:	bl	42d0 <memset@plt>
   1bc88:	ldr	r0, [r6]
   1bc8c:	ldrb	r3, [r5, #192]	; 0xc0
   1bc90:	tst	r3, #1
   1bc94:	beq	1bc9c <dta_interpret_int32_bytes+0x30>
   1bc98:	bl	3db4 <byteswap4@plt>
   1bc9c:	ldrb	r3, [r5, #192]	; 0xc0
   1bca0:	tst	r3, #2
   1bca4:	beq	1bcac <dta_interpret_int32_bytes+0x40>
   1bca8:	bl	3f1c <ones_to_twos_complement4@plt>
   1bcac:	ldr	r3, [r5, #196]	; 0xc4
   1bcb0:	cmp	r3, r0
   1bcb4:	movge	r3, #0
   1bcb8:	movge	ip, r3
   1bcbc:	movge	r1, r3
   1bcc0:	bge	1bcf4 <dta_interpret_int32_bytes+0x88>
   1bcc4:	ldrb	r2, [r5, #192]	; 0xc0
   1bcc8:	cmn	r0, #-2147483621	; 0x8000001b
   1bccc:	movle	r3, #0
   1bcd0:	movgt	r3, #1
   1bcd4:	ands	r3, r3, r2, lsr #3
   1bcd8:	addne	r1, r0, #123	; 0x7b
   1bcdc:	uxtbne	r1, r1
   1bce0:	movne	r3, #1
   1bce4:	movne	ip, #0
   1bce8:	moveq	r3, #0
   1bcec:	moveq	ip, #1
   1bcf0:	moveq	r1, r3
   1bcf4:	str	r0, [r4]
   1bcf8:	mov	r2, #3
   1bcfc:	str	r2, [r4, #8]
   1bd00:	strb	r1, [r4, #12]
   1bd04:	ldrb	r2, [r4, #13]
   1bd08:	and	r2, r2, #252	; 0xfc
   1bd0c:	and	r3, r3, #1
   1bd10:	orr	r2, r2, ip
   1bd14:	orr	r3, r2, r3, lsl #1
   1bd18:	strb	r3, [r4, #13]
   1bd1c:	mov	r0, r4
   1bd20:	pop	{r4, r5, r6, pc}

0001bd24 <dta_handle_row>:
   1bd24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bd28:	vpush	{d8-d9}
   1bd2c:	sub	sp, sp, #2272	; 0x8e0
   1bd30:	sub	sp, sp, #4
   1bd34:	mov	r8, r0
   1bd38:	mov	r7, r1
   1bd3c:	mov	r4, #0
   1bd40:	str	r4, [sp, #20]
   1bd44:	add	r3, sp, #112	; 0x70
   1bd48:	str	r3, [sp, #72]	; 0x48
   1bd4c:	sub	r3, r3, #4
   1bd50:	str	r3, [sp, #80]	; 0x50
   1bd54:	add	r6, sp, #144	; 0x90
   1bd58:	sub	r3, r6, #8
   1bd5c:	str	r3, [sp, #84]	; 0x54
   1bd60:	vldr	d9, [pc, #832]	; 1c0a8 <dta_handle_row+0x384>
   1bd64:	vldr	s16, [pc, #836]	; 1c0b0 <dta_handle_row+0x38c>
   1bd68:	ldr	r3, [r7, #148]	; 0x94
   1bd6c:	ldr	r2, [sp, #20]
   1bd70:	cmp	r2, r3
   1bd74:	movge	r0, #0
   1bd78:	bge	1c51c <dta_handle_row+0x7f8>
   1bd7c:	mov	r2, #16
   1bd80:	mov	r1, #0
   1bd84:	add	r5, sp, #128	; 0x80
   1bd88:	mov	r0, r5
   1bd8c:	bl	42d0 <memset@plt>
   1bd90:	ldr	ip, [r7, #28]
   1bd94:	ldr	r3, [sp, #20]
   1bd98:	lsl	r0, r3, #1
   1bd9c:	add	r3, r5, #8
   1bda0:	ldr	r2, [sp, #80]	; 0x50
   1bda4:	mov	r1, r7
   1bda8:	ldrh	r0, [ip, r0]
   1bdac:	bl	4210 <dta_type_info@plt>
   1bdb0:	cmp	r0, #0
   1bdb4:	bne	1c51c <dta_handle_row+0x7f8>
   1bdb8:	ldr	r3, [sp, #20]
   1bdbc:	lsl	r3, r3, #2
   1bdc0:	str	r3, [sp, #76]	; 0x4c
   1bdc4:	ldr	r3, [r7, #228]	; 0xe4
   1bdc8:	ldr	r2, [sp, #20]
   1bdcc:	ldr	r3, [r3, r2, lsl #2]
   1bdd0:	ldr	r3, [r3, #2144]	; 0x860
   1bdd4:	cmp	r3, #0
   1bdd8:	ldrne	r3, [sp, #108]	; 0x6c
   1bddc:	addne	r4, r4, r3
   1bde0:	bne	1bf64 <dta_handle_row+0x240>
   1bde4:	mov	r5, r4
   1bde8:	ldr	r2, [sp, #108]	; 0x6c
   1bdec:	add	r4, r4, r2
   1bdf0:	ldr	r3, [r7, #160]	; 0xa0
   1bdf4:	cmp	r4, r3
   1bdf8:	bhi	1c518 <dta_handle_row+0x7f4>
   1bdfc:	ldr	r3, [sp, #136]	; 0x88
   1be00:	cmp	r3, #0
   1be04:	beq	1bf74 <dta_handle_row+0x250>
   1be08:	cmp	r3, #6
   1be0c:	bne	1c0bc <dta_handle_row+0x398>
   1be10:	add	r1, r8, r5
   1be14:	ldr	r3, [r7, #112]	; 0x70
   1be18:	cmp	r3, #2
   1be1c:	bne	1c004 <dta_handle_row+0x2e0>
   1be20:	ldr	r3, [r7, #232]	; 0xe8
   1be24:	cmp	r3, #2
   1be28:	bne	1bf80 <dta_handle_row+0x25c>
   1be2c:	ldrb	r0, [r8, r5]
   1be30:	ldrb	r4, [r1, #1]
   1be34:	add	r4, r4, r0, lsl #8
   1be38:	uxth	r4, r4
   1be3c:	ldrb	r2, [r1, #2]
   1be40:	lsl	r3, r2, #8
   1be44:	str	r3, [sp, #28]
   1be48:	mov	r3, #0
   1be4c:	str	r3, [sp, #24]
   1be50:	ldrb	r3, [r1, #3]
   1be54:	str	r3, [sp, #44]	; 0x2c
   1be58:	mov	r3, #0
   1be5c:	str	r3, [sp, #40]	; 0x28
   1be60:	ldrd	sl, [sp, #24]
   1be64:	ldrd	r2, [sp, #40]	; 0x28
   1be68:	adds	sl, sl, r2
   1be6c:	adc	fp, fp, r3
   1be70:	ldrb	r2, [r1, #7]
   1be74:	mov	r3, #0
   1be78:	adds	r2, r2, sl
   1be7c:	adc	r3, r3, fp
   1be80:	ldrb	sl, [r1, #4]
   1be84:	mov	r0, #0
   1be88:	str	r0, [sp, #52]	; 0x34
   1be8c:	lsl	r0, sl, #24
   1be90:	str	r0, [sp, #48]	; 0x30
   1be94:	ldrd	sl, [sp, #48]	; 0x30
   1be98:	adds	sl, sl, r2
   1be9c:	adc	fp, fp, r3
   1bea0:	ldrb	r0, [r1, #5]
   1bea4:	lsl	r0, r0, #16
   1bea8:	adds	r2, sl, r0
   1beac:	adc	r3, fp, r0, asr #31
   1beb0:	ldrb	r1, [r1, #6]
   1beb4:	lsl	r1, r1, #8
   1beb8:	adds	r2, r2, r1
   1bebc:	adc	r3, r3, r1, asr #31
   1bec0:	ldr	sl, [r7, #216]	; 0xd8
   1bec4:	ldr	lr, [r7, #220]	; 0xdc
   1bec8:	mov	ip, #0
   1becc:	cmp	lr, ip
   1bed0:	bhi	1c05c <dta_handle_row+0x338>
   1bed4:	mov	r3, #0
   1bed8:	str	r3, [sp, #136]	; 0x88
   1bedc:	b	1bf20 <dta_handle_row+0x1fc>
   1bee0:	add	r3, r3, #1
   1bee4:	cmp	r3, r2
   1bee8:	beq	1bef8 <dta_handle_row+0x1d4>
   1beec:	ldrb	r0, [r1, r3]
   1bef0:	cmp	r0, #0
   1bef4:	bne	1bee0 <dta_handle_row+0x1bc>
   1bef8:	ldr	r2, [r7, #236]	; 0xec
   1befc:	str	r2, [sp]
   1bf00:	add	r2, r8, r5
   1bf04:	mov	r1, #2048	; 0x800
   1bf08:	add	r0, sp, #160	; 0xa0
   1bf0c:	bl	4264 <readstat_convert@plt>
   1bf10:	cmp	r0, #0
   1bf14:	bne	1c51c <dta_handle_row+0x7f8>
   1bf18:	add	r3, sp, #160	; 0xa0
   1bf1c:	str	r3, [sp, #128]	; 0x80
   1bf20:	ldr	ip, [r7, #228]	; 0xe4
   1bf24:	ldr	r3, [r7, #276]	; 0x114
   1bf28:	str	r3, [sp, #8]
   1bf2c:	ldr	r3, [sp, #84]	; 0x54
   1bf30:	ldm	r3, {r0, r1}
   1bf34:	stm	sp, {r0, r1}
   1bf38:	add	r3, sp, #128	; 0x80
   1bf3c:	ldm	r3, {r2, r3}
   1bf40:	ldr	r4, [r7, #256]	; 0x100
   1bf44:	ldr	r1, [sp, #76]	; 0x4c
   1bf48:	ldr	r1, [ip, r1]
   1bf4c:	ldr	r0, [r7, #184]	; 0xb8
   1bf50:	blx	r4
   1bf54:	cmp	r0, #0
   1bf58:	bne	1c52c <dta_handle_row+0x808>
   1bf5c:	ldr	r4, [sp, #108]	; 0x6c
   1bf60:	add	r4, r5, r4
   1bf64:	ldr	r3, [sp, #20]
   1bf68:	add	r3, r3, #1
   1bf6c:	str	r3, [sp, #20]
   1bf70:	b	1bd68 <dta_handle_row+0x44>
   1bf74:	mov	r3, #0
   1bf78:	add	r1, r8, r5
   1bf7c:	b	1bee4 <dta_handle_row+0x1c0>
   1bf80:	ldrb	r0, [r1, #1]
   1bf84:	ldrb	r4, [r8, r5]
   1bf88:	add	r4, r4, r0, lsl #8
   1bf8c:	uxth	r4, r4
   1bf90:	ldrb	r2, [r1, #5]
   1bf94:	mov	r0, #0
   1bf98:	str	r0, [sp, #60]	; 0x3c
   1bf9c:	lsl	r3, r2, #24
   1bfa0:	str	r3, [sp, #56]	; 0x38
   1bfa4:	ldrb	r3, [r1, #6]
   1bfa8:	str	r3, [sp, #36]	; 0x24
   1bfac:	str	r0, [sp, #32]
   1bfb0:	ldrd	r2, [sp, #56]	; 0x38
   1bfb4:	ldrd	sl, [sp, #32]
   1bfb8:	adds	r2, r2, sl
   1bfbc:	adc	r3, r3, fp
   1bfc0:	ldrb	sl, [r1, #7]
   1bfc4:	lsl	r0, sl, #8
   1bfc8:	str	r0, [sp, #68]	; 0x44
   1bfcc:	mov	r0, #0
   1bfd0:	str	r0, [sp, #64]	; 0x40
   1bfd4:	ldrd	sl, [sp, #64]	; 0x40
   1bfd8:	adds	sl, sl, r2
   1bfdc:	adc	fp, fp, r3
   1bfe0:	mov	r3, fp
   1bfe4:	ldrb	ip, [r1, #3]
   1bfe8:	ldrb	r0, [r1, #2]
   1bfec:	add	r0, r0, ip, lsl #8
   1bff0:	ldrb	r1, [r1, #4]
   1bff4:	add	r1, r0, r1, lsl #16
   1bff8:	adds	r2, sl, r1
   1bffc:	adc	r3, r3, r1, asr #31
   1c000:	b	1bec0 <dta_handle_row+0x19c>
   1c004:	cmp	r3, #4
   1c008:	movne	r2, #0
   1c00c:	movne	r3, #0
   1c010:	movne	r4, #0
   1c014:	bne	1bec0 <dta_handle_row+0x19c>
   1c018:	ldr	r0, [r1]
   1c01c:	ldr	r9, [r1, #4]
   1c020:	ldrb	r3, [r7, #192]	; 0xc0
   1c024:	tst	r3, #1
   1c028:	uxtheq	r4, r0
   1c02c:	beq	1c038 <dta_handle_row+0x314>
   1c030:	bl	3db4 <byteswap4@plt>
   1c034:	uxth	r4, r0
   1c038:	ldrb	r3, [r7, #192]	; 0xc0
   1c03c:	tst	r3, #1
   1c040:	beq	1c050 <dta_handle_row+0x32c>
   1c044:	mov	r0, r9
   1c048:	bl	3db4 <byteswap4@plt>
   1c04c:	mov	r9, r0
   1c050:	mov	r2, r9
   1c054:	mov	r3, #0
   1c058:	b	1bec0 <dta_handle_row+0x19c>
   1c05c:	add	r0, lr, ip
   1c060:	lsr	r0, r0, #1
   1c064:	add	r9, sl, r0, lsl #2
   1c068:	ldr	fp, [sl, r0, lsl #2]
   1c06c:	ldrh	r1, [fp]
   1c070:	cmp	r4, r1
   1c074:	ldreq	r1, [fp, #8]
   1c078:	subeq	r1, r2, r1
   1c07c:	subne	r1, r4, r1
   1c080:	cmp	r1, #0
   1c084:	movlt	lr, r0
   1c088:	blt	1becc <dta_handle_row+0x1a8>
   1c08c:	addgt	ip, r0, #1
   1c090:	bgt	1becc <dta_handle_row+0x1a8>
   1c094:	cmp	r9, #0
   1c098:	ldrne	r3, [r9]
   1c09c:	addne	r3, r3, #24
   1c0a0:	strne	r3, [sp, #128]	; 0x80
   1c0a4:	b	1bed4 <dta_handle_row+0x1b0>
   1c0a8:	.word	0x00000000
   1c0ac:	.word	0x7ff80000
   1c0b0:	.word	0x7fc00000
   1c0b4:	.word	0x00007fe5
   1c0b8:	.word	0x7fe00000
   1c0bc:	cmp	r3, #1
   1c0c0:	bne	1c1a4 <dta_handle_row+0x480>
   1c0c4:	mov	r2, #16
   1c0c8:	mov	r1, #0
   1c0cc:	mov	r0, r6
   1c0d0:	bl	42d0 <memset@plt>
   1c0d4:	ldrb	r0, [r8, r5]
   1c0d8:	ldrb	r3, [r7, #192]	; 0xc0
   1c0dc:	tst	r3, #2
   1c0e0:	sxtbeq	r4, r0
   1c0e4:	beq	1c0f0 <dta_handle_row+0x3cc>
   1c0e8:	bl	439c <ones_to_twos_complement1@plt>
   1c0ec:	sxtb	r4, r0
   1c0f0:	ldrsb	r3, [r7, #193]	; 0xc1
   1c0f4:	cmp	r3, r4
   1c0f8:	movge	lr, #0
   1c0fc:	movge	r9, lr
   1c100:	movge	sl, lr
   1c104:	bge	1c138 <dta_handle_row+0x414>
   1c108:	ldrb	r2, [r7, #192]	; 0xc0
   1c10c:	cmp	r4, #101	; 0x65
   1c110:	movle	r3, #0
   1c114:	movgt	r3, #1
   1c118:	ands	r3, r3, r2, lsr #3
   1c11c:	subne	sl, r4, #5
   1c120:	uxtbne	sl, sl
   1c124:	movne	lr, #1
   1c128:	movne	r9, #0
   1c12c:	moveq	lr, #0
   1c130:	moveq	r9, #1
   1c134:	moveq	sl, lr
   1c138:	strb	r4, [sp, #144]	; 0x90
   1c13c:	mov	fp, #1
   1c140:	str	fp, [sp, #152]	; 0x98
   1c144:	strb	sl, [sp, #156]	; 0x9c
   1c148:	ldrb	r3, [sp, #157]	; 0x9d
   1c14c:	and	r9, r9, fp
   1c150:	and	r3, r3, #252	; 0xfc
   1c154:	and	r2, lr, fp
   1c158:	orr	r3, r3, r9
   1c15c:	orr	r3, r3, r2, lsl fp
   1c160:	strb	r3, [sp, #157]	; 0x9d
   1c164:	ldm	r6, {r0, r1, r2, r3}
   1c168:	add	ip, sp, #2208	; 0x8a0
   1c16c:	stm	ip, {r0, r1, r2, r3}
   1c170:	strb	r4, [sp, #2208]	; 0x8a0
   1c174:	str	fp, [sp, #2216]	; 0x8a8
   1c178:	strb	sl, [sp, #2220]	; 0x8ac
   1c17c:	ldrb	r3, [sp, #2221]	; 0x8ad
   1c180:	and	r3, r3, #252	; 0xfc
   1c184:	and	lr, lr, fp
   1c188:	orr	r9, r3, r9
   1c18c:	orr	lr, r9, lr, lsl fp
   1c190:	strb	lr, [sp, #2221]	; 0x8ad
   1c194:	ldm	ip, {r0, r1, r2, r3}
   1c198:	add	ip, sp, #128	; 0x80
   1c19c:	stm	ip, {r0, r1, r2, r3}
   1c1a0:	b	1bf20 <dta_handle_row+0x1fc>
   1c1a4:	cmp	r3, #2
   1c1a8:	bne	1c2a8 <dta_handle_row+0x584>
   1c1ac:	mov	r2, #16
   1c1b0:	mov	r1, #0
   1c1b4:	mov	r0, r6
   1c1b8:	bl	42d0 <memset@plt>
   1c1bc:	ldrh	r0, [r8, r5]
   1c1c0:	ldrb	r3, [r7, #192]	; 0xc0
   1c1c4:	tst	r3, #1
   1c1c8:	sxtheq	ip, r0
   1c1cc:	beq	1c1d8 <dta_handle_row+0x4b4>
   1c1d0:	bl	3ec8 <byteswap2@plt>
   1c1d4:	sxth	ip, r0
   1c1d8:	ldrb	r3, [r7, #192]	; 0xc0
   1c1dc:	tst	r3, #2
   1c1e0:	beq	1c1f0 <dta_handle_row+0x4cc>
   1c1e4:	mov	r0, ip
   1c1e8:	bl	3f28 <ones_to_twos_complement2@plt>
   1c1ec:	mov	ip, r0
   1c1f0:	ldrsh	r3, [r7, #194]	; 0xc2
   1c1f4:	cmp	r3, ip
   1c1f8:	movge	r4, #0
   1c1fc:	movge	r9, r4
   1c200:	movge	sl, r4
   1c204:	bge	1c23c <dta_handle_row+0x518>
   1c208:	ldrb	r2, [r7, #192]	; 0xc0
   1c20c:	ldr	r3, [pc, #-352]	; 1c0b4 <dta_handle_row+0x390>
   1c210:	cmp	ip, r3
   1c214:	movle	r3, #0
   1c218:	movgt	r3, #1
   1c21c:	ands	r3, r3, r2, lsr #3
   1c220:	addne	sl, ip, #123	; 0x7b
   1c224:	uxtbne	sl, sl
   1c228:	movne	r4, #1
   1c22c:	movne	r9, #0
   1c230:	moveq	r4, #0
   1c234:	moveq	r9, #1
   1c238:	moveq	sl, r4
   1c23c:	strh	ip, [r6]
   1c240:	mov	fp, #2
   1c244:	str	fp, [sp, #152]	; 0x98
   1c248:	strb	sl, [sp, #156]	; 0x9c
   1c24c:	ldrb	r3, [sp, #157]	; 0x9d
   1c250:	and	r9, r9, #1
   1c254:	and	r3, r3, #252	; 0xfc
   1c258:	and	r2, r4, #1
   1c25c:	orr	r3, r3, r9
   1c260:	orr	r3, r3, r2, lsl #1
   1c264:	strb	r3, [sp, #157]	; 0x9d
   1c268:	ldm	r6, {r0, r1, r2, r3}
   1c26c:	add	lr, sp, #2224	; 0x8b0
   1c270:	stm	lr, {r0, r1, r2, r3}
   1c274:	strh	ip, [lr]
   1c278:	str	fp, [sp, #2232]	; 0x8b8
   1c27c:	strb	sl, [sp, #2236]	; 0x8bc
   1c280:	ldrb	r3, [sp, #2237]	; 0x8bd
   1c284:	and	r3, r3, #252	; 0xfc
   1c288:	and	r4, r4, #1
   1c28c:	orr	r9, r3, r9
   1c290:	orr	r4, r9, r4, lsl #1
   1c294:	strb	r4, [sp, #2237]	; 0x8bd
   1c298:	ldm	lr, {r0, r1, r2, r3}
   1c29c:	add	ip, sp, #128	; 0x80
   1c2a0:	stm	ip, {r0, r1, r2, r3}
   1c2a4:	b	1bf20 <dta_handle_row+0x1fc>
   1c2a8:	cmp	r3, #3
   1c2ac:	bne	1c2d4 <dta_handle_row+0x5b0>
   1c2b0:	add	r2, r8, r5
   1c2b4:	mov	r1, r7
   1c2b8:	add	r4, sp, #88	; 0x58
   1c2bc:	mov	r0, r4
   1c2c0:	bl	1bc6c <dta_interpret_int32_bytes>
   1c2c4:	ldm	r4, {r0, r1, r2, r3}
   1c2c8:	add	ip, sp, #128	; 0x80
   1c2cc:	stm	ip, {r0, r1, r2, r3}
   1c2d0:	b	1bf20 <dta_handle_row+0x1fc>
   1c2d4:	cmp	r3, #4
   1c2d8:	bne	1c3d4 <dta_handle_row+0x6b0>
   1c2dc:	mov	r2, #16
   1c2e0:	mov	r1, #0
   1c2e4:	mov	r0, r6
   1c2e8:	bl	42d0 <memset@plt>
   1c2ec:	vstr	s16, [sp, #120]	; 0x78
   1c2f0:	ldr	r0, [r8, r5]
   1c2f4:	ldrb	r3, [r7, #192]	; 0xc0
   1c2f8:	tst	r3, #1
   1c2fc:	beq	1c304 <dta_handle_row+0x5e0>
   1c300:	bl	3db4 <byteswap4@plt>
   1c304:	ldr	r3, [r7, #200]	; 0xc8
   1c308:	cmp	r3, r0
   1c30c:	bge	1c3c0 <dta_handle_row+0x69c>
   1c310:	ldrb	r2, [r7, #192]	; 0xc0
   1c314:	cmp	r0, #2130706432	; 0x7f000000
   1c318:	movle	r3, #0
   1c31c:	movgt	r3, #1
   1c320:	ands	r3, r3, r2, lsr #3
   1c324:	moveq	r4, #0
   1c328:	moveq	r9, #1
   1c32c:	moveq	ip, r4
   1c330:	beq	1c350 <dta_handle_row+0x62c>
   1c334:	add	ip, r0, #-2130706432	; 0x81000000
   1c338:	sub	ip, ip, #2048	; 0x800
   1c33c:	asr	ip, ip, #11
   1c340:	add	ip, ip, #97	; 0x61
   1c344:	uxtb	ip, ip
   1c348:	mov	r4, #1
   1c34c:	mov	r9, #0
   1c350:	add	sl, sp, #128	; 0x80
   1c354:	vldr	s15, [sp, #120]	; 0x78
   1c358:	vstr	s15, [r6]
   1c35c:	mov	fp, #4
   1c360:	str	fp, [sp, #152]	; 0x98
   1c364:	strb	ip, [sp, #156]	; 0x9c
   1c368:	ldrb	r3, [sp, #157]	; 0x9d
   1c36c:	and	r9, r9, #1
   1c370:	and	r3, r3, #252	; 0xfc
   1c374:	and	r2, r4, #1
   1c378:	orr	r3, r3, r9
   1c37c:	orr	r3, r3, r2, lsl #1
   1c380:	strb	r3, [sp, #157]	; 0x9d
   1c384:	ldm	r6, {r0, r1, r2, r3}
   1c388:	add	lr, sp, #2240	; 0x8c0
   1c38c:	stm	lr, {r0, r1, r2, r3}
   1c390:	vstr	s15, [lr]
   1c394:	str	fp, [sp, #2248]	; 0x8c8
   1c398:	strb	ip, [sp, #2252]	; 0x8cc
   1c39c:	ldrb	r3, [sp, #2253]	; 0x8cd
   1c3a0:	and	r3, r3, #252	; 0xfc
   1c3a4:	and	r4, r4, #1
   1c3a8:	orr	r9, r3, r9
   1c3ac:	orr	r4, r9, r4, lsl #1
   1c3b0:	strb	r4, [sp, #2253]	; 0x8cd
   1c3b4:	ldm	lr, {r0, r1, r2, r3}
   1c3b8:	stm	sl, {r0, r1, r2, r3}
   1c3bc:	b	1bf20 <dta_handle_row+0x1fc>
   1c3c0:	str	r0, [sp, #120]	; 0x78
   1c3c4:	mov	r4, #0
   1c3c8:	mov	r9, r4
   1c3cc:	mov	ip, r4
   1c3d0:	b	1c350 <dta_handle_row+0x62c>
   1c3d4:	cmp	r3, #5
   1c3d8:	bne	1bf20 <dta_handle_row+0x1fc>
   1c3dc:	mov	r2, #16
   1c3e0:	mov	r1, #0
   1c3e4:	mov	r0, r6
   1c3e8:	bl	42d0 <memset@plt>
   1c3ec:	ldr	r3, [sp, #72]	; 0x48
   1c3f0:	vstr	d9, [r3]
   1c3f4:	add	r2, r8, r5
   1c3f8:	add	r3, sp, #120	; 0x78
   1c3fc:	ldr	r0, [r2]
   1c400:	ldr	r1, [r2, #4]
   1c404:	stmia	r3!, {r0, r1}
   1c408:	ldrb	r3, [r7, #192]	; 0xc0
   1c40c:	tst	r3, #1
   1c410:	beq	1c424 <dta_handle_row+0x700>
   1c414:	add	r4, sp, #128	; 0x80
   1c418:	ldrd	r0, [sp, #120]	; 0x78
   1c41c:	bl	3d9c <byteswap8@plt>
   1c420:	strd	r0, [r4, #-8]
   1c424:	ldrd	r0, [sp, #120]	; 0x78
   1c428:	ldrd	r2, [r7, #208]	; 0xd0
   1c42c:	cmp	r2, r0
   1c430:	sbcs	r3, r3, r1
   1c434:	bge	1c500 <dta_handle_row+0x7dc>
   1c438:	ldrb	ip, [r7, #192]	; 0xc0
   1c43c:	mov	r2, #0
   1c440:	ldr	r3, [pc, #-912]	; 1c0b8 <dta_handle_row+0x394>
   1c444:	cmp	r2, r0
   1c448:	sbcs	r3, r3, r1
   1c44c:	movlt	r3, #1
   1c450:	movge	r3, #0
   1c454:	ands	r3, r3, ip, lsr #3
   1c458:	moveq	lr, #0
   1c45c:	moveq	r9, #1
   1c460:	moveq	r4, lr
   1c464:	beq	1c48c <dta_handle_row+0x768>
   1c468:	add	r3, pc, #200	; 0xc8
   1c46c:	ldrd	r2, [r3]
   1c470:	adds	r0, r0, r2
   1c474:	adc	r1, r1, r3
   1c478:	asr	r4, r1, #8
   1c47c:	add	r4, r4, #97	; 0x61
   1c480:	uxtb	r4, r4
   1c484:	mov	lr, #1
   1c488:	mov	r9, #0
   1c48c:	ldr	r3, [sp, #72]	; 0x48
   1c490:	vldr	d7, [r3]
   1c494:	vstr	d7, [r6]
   1c498:	mov	sl, #5
   1c49c:	str	sl, [sp, #152]	; 0x98
   1c4a0:	strb	r4, [sp, #156]	; 0x9c
   1c4a4:	ldrb	r3, [sp, #157]	; 0x9d
   1c4a8:	and	r9, r9, #1
   1c4ac:	and	r3, r3, #252	; 0xfc
   1c4b0:	and	r2, lr, #1
   1c4b4:	orr	r3, r3, r9
   1c4b8:	orr	r3, r3, r2, lsl #1
   1c4bc:	strb	r3, [sp, #157]	; 0x9d
   1c4c0:	ldm	r6, {r0, r1, r2, r3}
   1c4c4:	add	ip, sp, #2256	; 0x8d0
   1c4c8:	stm	ip, {r0, r1, r2, r3}
   1c4cc:	vstr	d7, [ip]
   1c4d0:	str	sl, [sp, #2264]	; 0x8d8
   1c4d4:	strb	r4, [sp, #2268]	; 0x8dc
   1c4d8:	ldrb	r3, [sp, #2269]	; 0x8dd
   1c4dc:	and	r3, r3, #252	; 0xfc
   1c4e0:	and	lr, lr, #1
   1c4e4:	orr	r9, r3, r9
   1c4e8:	orr	lr, r9, lr, lsl #1
   1c4ec:	strb	lr, [sp, #2269]	; 0x8dd
   1c4f0:	ldm	ip, {r0, r1, r2, r3}
   1c4f4:	add	ip, sp, #128	; 0x80
   1c4f8:	stm	ip, {r0, r1, r2, r3}
   1c4fc:	b	1bf20 <dta_handle_row+0x1fc>
   1c500:	ldr	r3, [sp, #72]	; 0x48
   1c504:	strd	r0, [r3]
   1c508:	mov	lr, #0
   1c50c:	mov	r9, lr
   1c510:	mov	r4, lr
   1c514:	b	1c48c <dta_handle_row+0x768>
   1c518:	mov	r0, #5
   1c51c:	add	sp, sp, #2272	; 0x8e0
   1c520:	add	sp, sp, #4
   1c524:	vpop	{d8-d9}
   1c528:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c52c:	mov	r0, #4
   1c530:	b	1c51c <dta_handle_row+0x7f8>
   1c534:	nop			; (mov r0, r0)
   1c538:	.word	0x00000000
   1c53c:	.word	0x801fff00

0001c540 <readstat_parse_dta>:
   1c540:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c544:	sub	sp, sp, #268	; 0x10c
   1c548:	mov	r6, r0
   1c54c:	mov	r8, r1
   1c550:	mov	r7, r2
   1c554:	ldr	r4, [r0, #32]
   1c558:	mov	r0, r4
   1c55c:	bl	4588 <dta_ctx_alloc@plt>
   1c560:	mov	r5, r0
   1c564:	ldr	r3, [r4]
   1c568:	ldr	r1, [r4, #20]
   1c56c:	mov	r0, r8
   1c570:	blx	r3
   1c574:	cmn	r0, #1
   1c578:	moveq	sl, #1
   1c57c:	beq	1c5a0 <readstat_parse_dta+0x60>
   1c580:	ldr	r3, [r4, #12]
   1c584:	ldr	r2, [r4, #20]
   1c588:	mov	r1, #4
   1c58c:	add	r0, sp, #260	; 0x104
   1c590:	blx	r3
   1c594:	cmp	r0, #4
   1c598:	movne	sl, #2
   1c59c:	beq	1c5c8 <readstat_parse_dta+0x88>
   1c5a0:	ldr	r3, [r4, #4]
   1c5a4:	ldr	r0, [r4, #20]
   1c5a8:	blx	r3
   1c5ac:	cmp	r5, #0
   1c5b0:	beq	1c5bc <readstat_parse_dta+0x7c>
   1c5b4:	mov	r0, r5
   1c5b8:	bl	3e98 <dta_ctx_free@plt>
   1c5bc:	mov	r0, sl
   1c5c0:	add	sp, sp, #268	; 0x10c
   1c5c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c5c8:	ldr	r3, [r4, #8]
   1c5cc:	ldr	r2, [r4, #20]
   1c5d0:	mov	r1, #2
   1c5d4:	mov	r0, #0
   1c5d8:	blx	r3
   1c5dc:	mov	r8, r0
   1c5e0:	cmn	r0, #1
   1c5e4:	beq	1c700 <readstat_parse_dta+0x1c0>
   1c5e8:	ldr	r3, [r4, #8]
   1c5ec:	ldr	r2, [r4, #20]
   1c5f0:	mov	r1, #0
   1c5f4:	mov	r0, r1
   1c5f8:	blx	r3
   1c5fc:	cmn	r0, #1
   1c600:	beq	1c75c <readstat_parse_dta+0x21c>
   1c604:	mov	r2, #4
   1c608:	ldr	r1, [pc, #3844]	; 1d514 <readstat_parse_dta+0xfd4>
   1c60c:	add	r1, pc, r1
   1c610:	add	r0, sp, #260	; 0x104
   1c614:	bl	4528 <strncmp@plt>
   1c618:	cmp	r0, #0
   1c61c:	bne	1c974 <readstat_parse_dta+0x434>
   1c620:	ldr	r1, [pc, #3824]	; 1d518 <readstat_parse_dta+0xfd8>
   1c624:	add	r1, pc, r1
   1c628:	mov	r0, r5
   1c62c:	bl	1bb90 <dta_read_tag>
   1c630:	subs	sl, r0, #0
   1c634:	bne	1c5a0 <readstat_parse_dta+0x60>
   1c638:	ldr	r1, [pc, #3804]	; 1d51c <readstat_parse_dta+0xfdc>
   1c63c:	add	r1, pc, r1
   1c640:	mov	r0, r5
   1c644:	bl	1bb90 <dta_read_tag>
   1c648:	subs	sl, r0, #0
   1c64c:	bne	1c5a0 <readstat_parse_dta+0x60>
   1c650:	ldr	r3, [pc, #3784]	; 1d520 <readstat_parse_dta+0xfe0>
   1c654:	add	r3, pc, r3
   1c658:	str	r3, [sp]
   1c65c:	mov	r3, #3
   1c660:	add	r2, sp, #72	; 0x48
   1c664:	ldr	r1, [pc, #3768]	; 1d524 <readstat_parse_dta+0xfe4>
   1c668:	add	r1, pc, r1
   1c66c:	mov	r0, r5
   1c670:	bl	1bc18 <dta_read_chunk>
   1c674:	subs	sl, r0, #0
   1c678:	bne	1c5a0 <readstat_parse_dta+0x60>
   1c67c:	ldrb	fp, [sp, #72]	; 0x48
   1c680:	ldrb	r3, [sp, #73]	; 0x49
   1c684:	str	r3, [sp, #20]
   1c688:	ldrb	r9, [sp, #74]	; 0x4a
   1c68c:	ldr	r3, [pc, #3732]	; 1d528 <readstat_parse_dta+0xfe8>
   1c690:	add	r3, pc, r3
   1c694:	str	r3, [sp]
   1c698:	mov	r3, #3
   1c69c:	add	r2, sp, #88	; 0x58
   1c6a0:	ldr	r1, [pc, #3716]	; 1d52c <readstat_parse_dta+0xfec>
   1c6a4:	add	r1, pc, r1
   1c6a8:	mov	r0, r5
   1c6ac:	bl	1bc18 <dta_read_chunk>
   1c6b0:	subs	sl, r0, #0
   1c6b4:	bne	1c5a0 <readstat_parse_dta+0x60>
   1c6b8:	mov	r2, #3
   1c6bc:	ldr	r1, [pc, #3692]	; 1d530 <readstat_parse_dta+0xff0>
   1c6c0:	add	r1, pc, r1
   1c6c4:	add	r0, sp, #88	; 0x58
   1c6c8:	bl	4528 <strncmp@plt>
   1c6cc:	cmp	r0, #0
   1c6d0:	beq	1c7b4 <readstat_parse_dta+0x274>
   1c6d4:	mov	r2, #3
   1c6d8:	ldr	r1, [pc, #3668]	; 1d534 <readstat_parse_dta+0xff4>
   1c6dc:	add	r1, pc, r1
   1c6e0:	add	r0, sp, #88	; 0x58
   1c6e4:	bl	4528 <strncmp@plt>
   1c6e8:	cmp	r0, #0
   1c6ec:	moveq	r3, #2
   1c6f0:	streq	r3, [sp, #24]
   1c6f4:	beq	1c7bc <readstat_parse_dta+0x27c>
   1c6f8:	mov	sl, #5
   1c6fc:	b	1c5a0 <readstat_parse_dta+0x60>
   1c700:	ldr	r6, [r5, #264]	; 0x108
   1c704:	cmp	r6, #0
   1c708:	moveq	sl, #15
   1c70c:	beq	1c5a0 <readstat_parse_dta+0x60>
   1c710:	add	lr, r5, #288	; 0x120
   1c714:	ldr	ip, [pc, #3612]	; 1d538 <readstat_parse_dta+0xff8>
   1c718:	add	ip, pc, ip
   1c71c:	ldm	ip!, {r0, r1, r2, r3}
   1c720:	str	r0, [r5, #288]	; 0x120
   1c724:	str	r1, [r5, #292]	; 0x124
   1c728:	str	r2, [r5, #296]	; 0x128
   1c72c:	str	r3, [r5, #300]	; 0x12c
   1c730:	ldm	ip!, {r0, r1, r2}
   1c734:	str	r0, [r5, #304]	; 0x130
   1c738:	str	r1, [r5, #308]	; 0x134
   1c73c:	str	r2, [r5, #312]	; 0x138
   1c740:	ldrh	r3, [ip]
   1c744:	strh	r3, [lr, #28]
   1c748:	ldr	r1, [r5, #276]	; 0x114
   1c74c:	mov	r0, lr
   1c750:	blx	r6
   1c754:	mov	sl, #15
   1c758:	b	1c5a0 <readstat_parse_dta+0x60>
   1c75c:	ldr	r6, [r5, #264]	; 0x108
   1c760:	cmp	r6, #0
   1c764:	moveq	sl, #15
   1c768:	beq	1c5a0 <readstat_parse_dta+0x60>
   1c76c:	add	lr, r5, #288	; 0x120
   1c770:	ldr	ip, [pc, #3524]	; 1d53c <readstat_parse_dta+0xffc>
   1c774:	add	ip, pc, ip
   1c778:	ldm	ip!, {r0, r1, r2, r3}
   1c77c:	str	r0, [r5, #288]	; 0x120
   1c780:	str	r1, [r5, #292]	; 0x124
   1c784:	str	r2, [r5, #296]	; 0x128
   1c788:	str	r3, [r5, #300]	; 0x12c
   1c78c:	ldm	ip!, {r0, r1, r2, r3}
   1c790:	str	r0, [r5, #304]	; 0x130
   1c794:	str	r1, [r5, #308]	; 0x134
   1c798:	str	r2, [r5, #312]	; 0x138
   1c79c:	str	r3, [r5, #316]	; 0x13c
   1c7a0:	ldr	r1, [r5, #276]	; 0x114
   1c7a4:	mov	r0, lr
   1c7a8:	blx	r6
   1c7ac:	mov	sl, #15
   1c7b0:	b	1c5a0 <readstat_parse_dta+0x60>
   1c7b4:	mov	r3, #1
   1c7b8:	str	r3, [sp, #24]
   1c7bc:	sub	fp, fp, #48	; 0x30
   1c7c0:	sub	r9, r9, #48	; 0x30
   1c7c4:	mov	r3, #100	; 0x64
   1c7c8:	mla	r3, fp, r3, r9
   1c7cc:	ldr	r2, [sp, #20]
   1c7d0:	sub	r2, r2, #48	; 0x30
   1c7d4:	mov	r9, #10
   1c7d8:	mla	r9, r2, r9, r3
   1c7dc:	uxtb	r9, r9
   1c7e0:	ldr	r3, [sp, #24]
   1c7e4:	cmp	r3, #2
   1c7e8:	movne	fp, #0
   1c7ec:	moveq	fp, #1
   1c7f0:	bl	3ed4 <machine_is_little_endian@plt>
   1c7f4:	str	r0, [sp, #28]
   1c7f8:	cmp	r9, #118	; 0x76
   1c7fc:	bls	1c8d4 <readstat_parse_dta+0x394>
   1c800:	ldr	r3, [pc, #3384]	; 1d540 <readstat_parse_dta+0x1000>
   1c804:	add	r3, pc, r3
   1c808:	str	r3, [sp]
   1c80c:	mov	r3, #4
   1c810:	add	r2, sp, #128	; 0x80
   1c814:	ldr	r1, [pc, #3368]	; 1d544 <readstat_parse_dta+0x1004>
   1c818:	add	r1, pc, r1
   1c81c:	mov	r0, r5
   1c820:	bl	1bc18 <dta_read_chunk>
   1c824:	subs	sl, r0, #0
   1c828:	bne	1c5a0 <readstat_parse_dta+0x60>
   1c82c:	ldr	r3, [sp, #28]
   1c830:	cmp	fp, r3
   1c834:	ldreq	r3, [sp, #128]	; 0x80
   1c838:	streq	r3, [sp, #20]
   1c83c:	beq	1c84c <readstat_parse_dta+0x30c>
   1c840:	ldr	r0, [sp, #128]	; 0x80
   1c844:	bl	3db4 <byteswap4@plt>
   1c848:	str	r0, [sp, #20]
   1c84c:	cmp	r9, #117	; 0x75
   1c850:	bls	1c924 <readstat_parse_dta+0x3e4>
   1c854:	ldr	r3, [pc, #3308]	; 1d548 <readstat_parse_dta+0x1008>
   1c858:	add	r3, pc, r3
   1c85c:	str	r3, [sp]
   1c860:	mov	r3, #8
   1c864:	add	r2, sp, #128	; 0x80
   1c868:	ldr	r1, [pc, #3292]	; 1d54c <readstat_parse_dta+0x100c>
   1c86c:	add	r1, pc, r1
   1c870:	mov	r0, r5
   1c874:	bl	1bc18 <dta_read_chunk>
   1c878:	subs	sl, r0, #0
   1c87c:	bne	1c5a0 <readstat_parse_dta+0x60>
   1c880:	ldr	r3, [sp, #28]
   1c884:	cmp	fp, r3
   1c888:	ldreq	r2, [sp, #128]	; 0x80
   1c88c:	ldreq	r3, [sp, #132]	; 0x84
   1c890:	beq	1c8a4 <readstat_parse_dta+0x364>
   1c894:	ldrd	r0, [sp, #128]	; 0x80
   1c898:	bl	3d9c <byteswap8@plt>
   1c89c:	mov	r2, r0
   1c8a0:	mov	r3, r1
   1c8a4:	ldr	r1, [r6, #40]	; 0x28
   1c8a8:	str	r1, [sp, #12]
   1c8ac:	ldr	r1, [r6, #36]	; 0x24
   1c8b0:	str	r1, [sp, #8]
   1c8b4:	str	r9, [sp, #4]
   1c8b8:	ldr	r1, [sp, #24]
   1c8bc:	str	r1, [sp]
   1c8c0:	ldr	r1, [sp, #20]
   1c8c4:	mov	r0, r5
   1c8c8:	bl	41f8 <dta_ctx_init@plt>
   1c8cc:	mov	sl, r0
   1c8d0:	b	1ca14 <readstat_parse_dta+0x4d4>
   1c8d4:	ldr	r3, [pc, #3188]	; 1d550 <readstat_parse_dta+0x1010>
   1c8d8:	add	r3, pc, r3
   1c8dc:	str	r3, [sp]
   1c8e0:	mov	r3, #2
   1c8e4:	add	r2, sp, #128	; 0x80
   1c8e8:	ldr	r1, [pc, #3172]	; 1d554 <readstat_parse_dta+0x1014>
   1c8ec:	add	r1, pc, r1
   1c8f0:	mov	r0, r5
   1c8f4:	bl	1bc18 <dta_read_chunk>
   1c8f8:	subs	sl, r0, #0
   1c8fc:	bne	1c5a0 <readstat_parse_dta+0x60>
   1c900:	ldr	r3, [sp, #28]
   1c904:	cmp	fp, r3
   1c908:	ldrheq	r3, [sp, #128]	; 0x80
   1c90c:	streq	r3, [sp, #20]
   1c910:	beq	1c84c <readstat_parse_dta+0x30c>
   1c914:	ldrh	r0, [sp, #128]	; 0x80
   1c918:	bl	3ec8 <byteswap2@plt>
   1c91c:	str	r0, [sp, #20]
   1c920:	b	1c84c <readstat_parse_dta+0x30c>
   1c924:	ldr	r3, [pc, #3116]	; 1d558 <readstat_parse_dta+0x1018>
   1c928:	add	r3, pc, r3
   1c92c:	str	r3, [sp]
   1c930:	mov	r3, #4
   1c934:	add	r2, sp, #128	; 0x80
   1c938:	ldr	r1, [pc, #3100]	; 1d55c <readstat_parse_dta+0x101c>
   1c93c:	add	r1, pc, r1
   1c940:	mov	r0, r5
   1c944:	bl	1bc18 <dta_read_chunk>
   1c948:	subs	sl, r0, #0
   1c94c:	bne	1c5a0 <readstat_parse_dta+0x60>
   1c950:	ldr	r3, [sp, #28]
   1c954:	cmp	fp, r3
   1c958:	ldreq	r0, [sp, #128]	; 0x80
   1c95c:	beq	1c968 <readstat_parse_dta+0x428>
   1c960:	ldr	r0, [sp, #128]	; 0x80
   1c964:	bl	3db4 <byteswap4@plt>
   1c968:	mov	r2, r0
   1c96c:	mov	r3, #0
   1c970:	b	1c8a4 <readstat_parse_dta+0x364>
   1c974:	ldr	r3, [r5, #280]	; 0x118
   1c978:	ldr	r9, [r3, #12]
   1c97c:	ldr	r2, [r3, #20]
   1c980:	mov	r1, #10
   1c984:	add	r0, sp, #128	; 0x80
   1c988:	blx	r9
   1c98c:	cmp	r0, #10
   1c990:	movne	sl, #2
   1c994:	bne	1c5a0 <readstat_parse_dta+0x60>
   1c998:	ldrb	r9, [sp, #129]	; 0x81
   1c99c:	cmp	r9, #2
   1c9a0:	movne	r9, #0
   1c9a4:	moveq	r9, #1
   1c9a8:	bl	3ed4 <machine_is_little_endian@plt>
   1c9ac:	cmp	r9, r0
   1c9b0:	beq	1ccc0 <readstat_parse_dta+0x780>
   1c9b4:	ldrh	r0, [sp, #132]	; 0x84
   1c9b8:	bl	3ec8 <byteswap2@plt>
   1c9bc:	strh	r0, [sp, #132]	; 0x84
   1c9c0:	ldrh	r3, [sp, #134]	; 0x86
   1c9c4:	ldrh	r0, [sp, #136]	; 0x88
   1c9c8:	orr	r0, r3, r0, lsl #16
   1c9cc:	bl	3db4 <byteswap4@plt>
   1c9d0:	mov	r2, r0
   1c9d4:	strh	r2, [sp, #134]	; 0x86
   1c9d8:	lsr	r3, r2, #16
   1c9dc:	strh	r3, [sp, #136]	; 0x88
   1c9e0:	ldrh	r1, [sp, #132]	; 0x84
   1c9e4:	ldr	r3, [r6, #40]	; 0x28
   1c9e8:	str	r3, [sp, #12]
   1c9ec:	ldr	r3, [r6, #36]	; 0x24
   1c9f0:	str	r3, [sp, #8]
   1c9f4:	ldrb	r3, [sp, #128]	; 0x80
   1c9f8:	str	r3, [sp, #4]
   1c9fc:	ldrb	r3, [sp, #129]	; 0x81
   1ca00:	str	r3, [sp]
   1ca04:	mov	r3, #0
   1ca08:	mov	r0, r5
   1ca0c:	bl	41f8 <dta_ctx_init@plt>
   1ca10:	mov	sl, r0
   1ca14:	cmp	sl, #0
   1ca18:	bne	1c5a0 <readstat_parse_dta+0x60>
   1ca1c:	str	r7, [r5, #276]	; 0x114
   1ca20:	str	r8, [r5, #272]	; 0x110
   1ca24:	add	ip, r5, #240	; 0xf0
   1ca28:	mov	lr, r6
   1ca2c:	ldm	lr!, {r0, r1, r2, r3}
   1ca30:	stmia	ip!, {r0, r1, r2, r3}
   1ca34:	ldm	lr, {r0, r1, r2, r3}
   1ca38:	stm	ip, {r0, r1, r2, r3}
   1ca3c:	ldr	r2, [r6, #48]	; 0x30
   1ca40:	cmp	r2, #0
   1ca44:	asrgt	r3, r2, #31
   1ca48:	strdgt	r2, [r5, #176]	; 0xb0
   1ca4c:	ldrd	r0, [r5, #152]	; 0x98
   1ca50:	ldrd	r2, [r5, #176]	; 0xb0
   1ca54:	subs	r2, r0, r2
   1ca58:	sbc	r3, r1, r3
   1ca5c:	cmp	r2, #0
   1ca60:	sbcs	ip, r3, #0
   1ca64:	blt	1ccd0 <readstat_parse_dta+0x790>
   1ca68:	strd	r2, [r5, #168]	; 0xa8
   1ca6c:	ldr	r0, [r6, #44]	; 0x2c
   1ca70:	cmp	r0, #0
   1ca74:	ble	1ca88 <readstat_parse_dta+0x548>
   1ca78:	asr	r1, r0, #31
   1ca7c:	cmp	r0, r2
   1ca80:	sbcs	r3, r1, r3
   1ca84:	strdlt	r0, [r5, #168]	; 0xa8
   1ca88:	mov	r0, r5
   1ca8c:	bl	1bb18 <dta_update_progress>
   1ca90:	subs	sl, r0, #0
   1ca94:	bne	1c5a0 <readstat_parse_dta+0x60>
   1ca98:	ldr	r8, [r5, #280]	; 0x118
   1ca9c:	mov	r1, #0
   1caa0:	strh	r1, [sp, #88]	; 0x58
   1caa4:	strb	r1, [sp, #71]	; 0x47
   1caa8:	mov	r2, #44	; 0x2c
   1caac:	add	r0, sp, #128	; 0x80
   1cab0:	bl	42d0 <memset@plt>
   1cab4:	mvn	r3, #0
   1cab8:	str	r3, [sp, #160]	; 0xa0
   1cabc:	ldrb	r3, [r5, #192]	; 0xc0
   1cac0:	tst	r3, #4
   1cac4:	ldreq	r3, [r5, #4]
   1cac8:	strheq	r3, [sp, #88]	; 0x58
   1cacc:	bne	1cce0 <readstat_parse_dta+0x7a0>
   1cad0:	ldrh	r0, [sp, #88]	; 0x58
   1cad4:	add	r0, r0, #1
   1cad8:	bl	4258 <readstat_malloc@plt>
   1cadc:	subs	r9, r0, #0
   1cae0:	moveq	sl, #3
   1cae4:	beq	1cb28 <readstat_parse_dta+0x5e8>
   1cae8:	ldr	r3, [r8, #12]
   1caec:	ldr	r2, [r8, #20]
   1caf0:	ldrh	r1, [sp, #88]	; 0x58
   1caf4:	mov	r0, r9
   1caf8:	blx	r3
   1cafc:	ldrh	r3, [sp, #88]	; 0x58
   1cb00:	cmp	r0, r3
   1cb04:	movne	r6, #0
   1cb08:	movne	sl, #2
   1cb0c:	beq	1cd78 <readstat_parse_dta+0x838>
   1cb10:	mov	r0, r9
   1cb14:	bl	3ee0 <free@plt>
   1cb18:	cmp	r6, #0
   1cb1c:	beq	1cb28 <readstat_parse_dta+0x5e8>
   1cb20:	mov	r0, r6
   1cb24:	bl	3ee0 <free@plt>
   1cb28:	cmp	sl, #0
   1cb2c:	bne	1c5a0 <readstat_parse_dta+0x60>
   1cb30:	ldr	r1, [pc, #2600]	; 1d560 <readstat_parse_dta+0x1020>
   1cb34:	add	r1, pc, r1
   1cb38:	mov	r0, r5
   1cb3c:	bl	1bb90 <dta_read_tag>
   1cb40:	subs	sl, r0, #0
   1cb44:	bne	1c5a0 <readstat_parse_dta+0x60>
   1cb48:	ldr	r8, [r5, #240]	; 0xf0
   1cb4c:	cmp	r8, #0
   1cb50:	beq	1cbd8 <readstat_parse_dta+0x698>
   1cb54:	mov	r2, #56	; 0x38
   1cb58:	mov	r1, #0
   1cb5c:	add	r6, sp, #128	; 0x80
   1cb60:	mov	r0, r6
   1cb64:	bl	42d0 <memset@plt>
   1cb68:	ldrd	r2, [r5, #168]	; 0xa8
   1cb6c:	strd	r2, [sp, #128]	; 0x80
   1cb70:	ldr	r2, [r5, #148]	; 0x94
   1cb74:	asr	r3, r2, #31
   1cb78:	strd	r2, [sp, #136]	; 0x88
   1cb7c:	ldr	r3, [r5, #12]
   1cb80:	str	r3, [sp, #144]	; 0x90
   1cb84:	ldr	r3, [r5, #12]
   1cb88:	str	r3, [sp, #148]	; 0x94
   1cb8c:	ldr	r2, [r5, #144]	; 0x90
   1cb90:	mov	r0, r2
   1cb94:	asr	r1, r2, #31
   1cb98:	strd	r0, [sp, #152]	; 0x98
   1cb9c:	ldr	r3, [r5, #232]	; 0xe8
   1cba0:	str	r3, [sp, #164]	; 0xa4
   1cba4:	ldr	r3, [r5]
   1cba8:	str	r3, [sp, #172]	; 0xac
   1cbac:	ldrb	r3, [sp, #180]	; 0xb4
   1cbb0:	bic	r3, r3, #1
   1cbb4:	cmp	r2, #117	; 0x75
   1cbb8:	orrgt	r3, r3, #1
   1cbbc:	strb	r3, [sp, #180]	; 0xb4
   1cbc0:	mov	r1, r7
   1cbc4:	mov	r0, r6
   1cbc8:	blx	r8
   1cbcc:	cmp	r0, #0
   1cbd0:	movne	sl, #4
   1cbd4:	bne	1c5a0 <readstat_parse_dta+0x60>
   1cbd8:	ldrb	r3, [r5, #192]	; 0xc0
   1cbdc:	tst	r3, #4
   1cbe0:	beq	1cc68 <readstat_parse_dta+0x728>
   1cbe4:	ldr	r3, [pc, #2424]	; 1d564 <readstat_parse_dta+0x1024>
   1cbe8:	add	r3, pc, r3
   1cbec:	str	r3, [sp]
   1cbf0:	mov	r3, #112	; 0x70
   1cbf4:	add	r2, sp, #128	; 0x80
   1cbf8:	ldr	r1, [pc, #2408]	; 1d568 <readstat_parse_dta+0x1028>
   1cbfc:	add	r1, pc, r1
   1cc00:	mov	r0, r5
   1cc04:	bl	1bc18 <dta_read_chunk>
   1cc08:	cmp	r0, #0
   1cc0c:	movne	sl, #2
   1cc10:	bne	1c5a0 <readstat_parse_dta+0x60>
   1cc14:	ldrb	r3, [r5, #192]	; 0xc0
   1cc18:	ldrd	r0, [sp, #200]	; 0xc8
   1cc1c:	tst	r3, #1
   1cc20:	beq	1cc2c <readstat_parse_dta+0x6ec>
   1cc24:	ldrd	r0, [sp, #200]	; 0xc8
   1cc28:	bl	3d9c <byteswap8@plt>
   1cc2c:	strd	r0, [r5, #120]	; 0x78
   1cc30:	ldrb	r3, [r5, #192]	; 0xc0
   1cc34:	ldrd	r0, [sp, #208]	; 0xd0
   1cc38:	tst	r3, #1
   1cc3c:	beq	1cc48 <readstat_parse_dta+0x708>
   1cc40:	ldrd	r0, [sp, #208]	; 0xd0
   1cc44:	bl	3d9c <byteswap8@plt>
   1cc48:	strd	r0, [r5, #128]	; 0x80
   1cc4c:	ldrb	r3, [r5, #192]	; 0xc0
   1cc50:	ldrd	r0, [sp, #216]	; 0xd8
   1cc54:	tst	r3, #1
   1cc58:	beq	1cc64 <readstat_parse_dta+0x724>
   1cc5c:	ldrd	r0, [sp, #216]	; 0xd8
   1cc60:	bl	3d9c <byteswap8@plt>
   1cc64:	strd	r0, [r5, #136]	; 0x88
   1cc68:	ldr	r3, [r5, #148]	; 0x94
   1cc6c:	ldr	r7, [r5, #24]
   1cc70:	mul	r7, r7, r3
   1cc74:	cmp	r3, #0
   1cc78:	bne	1cf38 <readstat_parse_dta+0x9f8>
   1cc7c:	ldr	r3, [pc, #2280]	; 1d56c <readstat_parse_dta+0x102c>
   1cc80:	add	r3, pc, r3
   1cc84:	str	r3, [sp]
   1cc88:	mov	r3, r7
   1cc8c:	mov	r2, #0
   1cc90:	ldr	r1, [pc, #2264]	; 1d570 <readstat_parse_dta+0x1030>
   1cc94:	add	r1, pc, r1
   1cc98:	mov	r0, r5
   1cc9c:	bl	1bc18 <dta_read_chunk>
   1cca0:	subs	sl, r0, #0
   1cca4:	moveq	r6, #0
   1cca8:	bne	1c5a0 <readstat_parse_dta+0x60>
   1ccac:	ldr	r3, [r5, #24]
   1ccb0:	cmp	r3, #1
   1ccb4:	bne	1d2b8 <readstat_parse_dta+0xd78>
   1ccb8:	mov	r3, #0
   1ccbc:	b	1cf64 <readstat_parse_dta+0xa24>
   1ccc0:	ldrh	r2, [sp, #134]	; 0x86
   1ccc4:	ldrh	r3, [sp, #136]	; 0x88
   1ccc8:	orr	r2, r2, r3, lsl #16
   1cccc:	b	1c9d4 <readstat_parse_dta+0x494>
   1ccd0:	strd	r0, [r5, #176]	; 0xb0
   1ccd4:	mov	r2, #0
   1ccd8:	mov	r3, #0
   1ccdc:	b	1ca68 <readstat_parse_dta+0x528>
   1cce0:	ldr	r1, [pc, #2188]	; 1d574 <readstat_parse_dta+0x1034>
   1cce4:	add	r1, pc, r1
   1cce8:	mov	r0, r5
   1ccec:	bl	1bb90 <dta_read_tag>
   1ccf0:	subs	sl, r0, #0
   1ccf4:	bne	1cb28 <readstat_parse_dta+0x5e8>
   1ccf8:	ldr	r3, [r5, #8]
   1ccfc:	cmp	r3, #2
   1cd00:	beq	1cd38 <readstat_parse_dta+0x7f8>
   1cd04:	cmp	r3, #1
   1cd08:	bne	1cad0 <readstat_parse_dta+0x590>
   1cd0c:	ldr	r3, [r8, #12]
   1cd10:	ldr	r2, [r8, #20]
   1cd14:	mov	r1, #1
   1cd18:	add	r0, sp, #72	; 0x48
   1cd1c:	blx	r3
   1cd20:	cmp	r0, #1
   1cd24:	movne	sl, #2
   1cd28:	ldrbeq	r3, [sp, #72]	; 0x48
   1cd2c:	strheq	r3, [sp, #88]	; 0x58
   1cd30:	bne	1cb28 <readstat_parse_dta+0x5e8>
   1cd34:	b	1cad0 <readstat_parse_dta+0x590>
   1cd38:	ldr	r3, [r8, #12]
   1cd3c:	ldr	r2, [r8, #20]
   1cd40:	mov	r1, #2
   1cd44:	add	r0, sp, #88	; 0x58
   1cd48:	blx	r3
   1cd4c:	cmp	r0, #2
   1cd50:	movne	sl, #2
   1cd54:	bne	1cb28 <readstat_parse_dta+0x5e8>
   1cd58:	ldrb	r3, [r5, #192]	; 0xc0
   1cd5c:	tst	r3, #1
   1cd60:	ldrheq	r0, [sp, #88]	; 0x58
   1cd64:	beq	1cd70 <readstat_parse_dta+0x830>
   1cd68:	ldrh	r0, [sp, #88]	; 0x58
   1cd6c:	bl	3ec8 <byteswap2@plt>
   1cd70:	strh	r0, [sp, #88]	; 0x58
   1cd74:	b	1cad0 <readstat_parse_dta+0x590>
   1cd78:	ldrb	r2, [r5, #192]	; 0xc0
   1cd7c:	tst	r2, #4
   1cd80:	movne	fp, #0
   1cd84:	bne	1cda4 <readstat_parse_dta+0x864>
   1cd88:	add	r2, r9, r3
   1cd8c:	ldrb	fp, [r2, #-1]
   1cd90:	mov	r2, #0
   1cd94:	strb	r2, [r9, r3]
   1cd98:	mov	r0, r9
   1cd9c:	bl	4228 <strlen@plt>
   1cda0:	strh	r0, [sp, #88]	; 0x58
   1cda4:	ldrh	r0, [sp, #88]	; 0x58
   1cda8:	lsl	r0, r0, #2
   1cdac:	add	r0, r0, #1
   1cdb0:	bl	4258 <readstat_malloc@plt>
   1cdb4:	str	r0, [r5]
   1cdb8:	cmp	r0, #0
   1cdbc:	moveq	r6, #0
   1cdc0:	moveq	sl, #3
   1cdc4:	beq	1cb10 <readstat_parse_dta+0x5d0>
   1cdc8:	ldrh	r3, [sp, #88]	; 0x58
   1cdcc:	lsl	r1, r3, #2
   1cdd0:	ldr	r2, [r5, #236]	; 0xec
   1cdd4:	str	r2, [sp]
   1cdd8:	mov	r2, r9
   1cddc:	add	r1, r1, #1
   1cde0:	bl	4264 <readstat_convert@plt>
   1cde4:	subs	sl, r0, #0
   1cde8:	movne	r6, #0
   1cdec:	bne	1cb10 <readstat_parse_dta+0x5d0>
   1cdf0:	ldrb	r3, [r5, #192]	; 0xc0
   1cdf4:	tst	r3, #4
   1cdf8:	ldreq	r3, [r5, #16]
   1cdfc:	strbeq	r3, [sp, #71]	; 0x47
   1ce00:	beq	1ce60 <readstat_parse_dta+0x920>
   1ce04:	ldr	r1, [pc, #1900]	; 1d578 <readstat_parse_dta+0x1038>
   1ce08:	add	r1, pc, r1
   1ce0c:	mov	r0, r5
   1ce10:	bl	1bb90 <dta_read_tag>
   1ce14:	subs	sl, r0, #0
   1ce18:	movne	r6, #0
   1ce1c:	bne	1cb10 <readstat_parse_dta+0x5d0>
   1ce20:	ldr	r1, [pc, #1876]	; 1d57c <readstat_parse_dta+0x103c>
   1ce24:	add	r1, pc, r1
   1ce28:	mov	r0, r5
   1ce2c:	bl	1bb90 <dta_read_tag>
   1ce30:	subs	sl, r0, #0
   1ce34:	movne	r6, #0
   1ce38:	bne	1cb10 <readstat_parse_dta+0x5d0>
   1ce3c:	ldr	r3, [r8, #12]
   1ce40:	ldr	r2, [r8, #20]
   1ce44:	mov	r1, #1
   1ce48:	add	r0, sp, #71	; 0x47
   1ce4c:	blx	r3
   1ce50:	cmp	r0, #1
   1ce54:	movne	r6, #0
   1ce58:	movne	sl, #2
   1ce5c:	bne	1cb10 <readstat_parse_dta+0x5d0>
   1ce60:	ldrb	r0, [sp, #71]	; 0x47
   1ce64:	cmp	r0, #0
   1ce68:	beq	1cf30 <readstat_parse_dta+0x9f0>
   1ce6c:	bl	4258 <readstat_malloc@plt>
   1ce70:	mov	r6, r0
   1ce74:	ldr	r3, [r8, #12]
   1ce78:	ldr	r2, [r8, #20]
   1ce7c:	ldrb	r1, [sp, #71]	; 0x47
   1ce80:	blx	r3
   1ce84:	ldrb	r3, [sp, #71]	; 0x47
   1ce88:	cmp	r0, r3
   1ce8c:	movne	sl, #2
   1ce90:	bne	1cb10 <readstat_parse_dta+0x5d0>
   1ce94:	ldrb	r2, [r5, #192]	; 0xc0
   1ce98:	tst	r2, #4
   1ce9c:	subeq	r3, r3, #1
   1cea0:	strbeq	r3, [sp, #71]	; 0x47
   1cea4:	ldrb	r3, [r6]
   1cea8:	cmp	r3, #0
   1ceac:	beq	1cf18 <readstat_parse_dta+0x9d8>
   1ceb0:	ldrb	r2, [sp, #71]	; 0x47
   1ceb4:	add	r3, r6, r2
   1ceb8:	ldrb	r3, [r3, #-1]
   1cebc:	clz	r3, r3
   1cec0:	lsr	r3, r3, #5
   1cec4:	cmp	fp, #0
   1cec8:	moveq	r3, #0
   1cecc:	cmp	r3, #0
   1ced0:	beq	1cee8 <readstat_parse_dta+0x9a8>
   1ced4:	sub	r2, r2, #1
   1ced8:	mov	r1, r6
   1cedc:	add	r0, r6, #1
   1cee0:	bl	3ebc <memmove@plt>
   1cee4:	strb	fp, [r6]
   1cee8:	ldrb	r1, [sp, #71]	; 0x47
   1ceec:	ldr	r3, [r5, #276]	; 0x114
   1cef0:	str	r3, [sp]
   1cef4:	ldr	r3, [r5, #264]	; 0x108
   1cef8:	add	r2, sp, #128	; 0x80
   1cefc:	mov	r0, r6
   1cf00:	bl	4318 <dta_parse_timestamp@plt>
   1cf04:	subs	sl, r0, #0
   1cf08:	bne	1cb10 <readstat_parse_dta+0x5d0>
   1cf0c:	add	r0, sp, #128	; 0x80
   1cf10:	bl	3e74 <mktime@plt>
   1cf14:	str	r0, [r5, #12]
   1cf18:	ldr	r1, [pc, #1632]	; 1d580 <readstat_parse_dta+0x1040>
   1cf1c:	add	r1, pc, r1
   1cf20:	mov	r0, r5
   1cf24:	bl	1bb90 <dta_read_tag>
   1cf28:	mov	sl, r0
   1cf2c:	b	1cb10 <readstat_parse_dta+0x5d0>
   1cf30:	mov	r6, #0
   1cf34:	b	1cf18 <readstat_parse_dta+0x9d8>
   1cf38:	mov	r0, r7
   1cf3c:	bl	4258 <readstat_malloc@plt>
   1cf40:	subs	r6, r0, #0
   1cf44:	bne	1e1d0 <readstat_parse_dta+0x1c90>
   1cf48:	mov	sl, #3
   1cf4c:	b	1c5a0 <readstat_parse_dta+0x60>
   1cf50:	ldr	r1, [r5, #28]
   1cf54:	lsl	r2, r3, #1
   1cf58:	ldrb	r0, [r6, r3]
   1cf5c:	strh	r0, [r1, r2]
   1cf60:	add	r3, r3, #1
   1cf64:	ldr	r2, [r5, #148]	; 0x94
   1cf68:	cmp	r3, r2
   1cf6c:	blt	1cf50 <readstat_parse_dta+0xa10>
   1cf70:	ldr	r3, [pc, #1548]	; 1d584 <readstat_parse_dta+0x1044>
   1cf74:	add	r3, pc, r3
   1cf78:	str	r3, [sp]
   1cf7c:	ldr	r3, [r5, #40]	; 0x28
   1cf80:	ldr	r2, [r5, #36]	; 0x24
   1cf84:	ldr	r1, [pc, #1532]	; 1d588 <readstat_parse_dta+0x1048>
   1cf88:	add	r1, pc, r1
   1cf8c:	mov	r0, r5
   1cf90:	bl	1bc18 <dta_read_chunk>
   1cf94:	subs	sl, r0, #0
   1cf98:	bne	1e1c4 <readstat_parse_dta+0x1c84>
   1cf9c:	ldr	r3, [pc, #1512]	; 1d58c <readstat_parse_dta+0x104c>
   1cfa0:	add	r3, pc, r3
   1cfa4:	str	r3, [sp]
   1cfa8:	ldr	r3, [r5, #48]	; 0x30
   1cfac:	ldr	r2, [r5, #44]	; 0x2c
   1cfb0:	ldr	r1, [pc, #1496]	; 1d590 <readstat_parse_dta+0x1050>
   1cfb4:	add	r1, pc, r1
   1cfb8:	mov	r0, r5
   1cfbc:	bl	1bc18 <dta_read_chunk>
   1cfc0:	subs	sl, r0, #0
   1cfc4:	bne	1e1c4 <readstat_parse_dta+0x1c84>
   1cfc8:	ldr	r3, [pc, #1476]	; 1d594 <readstat_parse_dta+0x1054>
   1cfcc:	add	r3, pc, r3
   1cfd0:	str	r3, [sp]
   1cfd4:	ldr	r3, [r5, #56]	; 0x38
   1cfd8:	ldr	r2, [r5, #52]	; 0x34
   1cfdc:	ldr	r1, [pc, #1460]	; 1d598 <readstat_parse_dta+0x1058>
   1cfe0:	add	r1, pc, r1
   1cfe4:	mov	r0, r5
   1cfe8:	bl	1bc18 <dta_read_chunk>
   1cfec:	subs	sl, r0, #0
   1cff0:	bne	1e1c4 <readstat_parse_dta+0x1c84>
   1cff4:	ldr	r3, [pc, #1440]	; 1d59c <readstat_parse_dta+0x105c>
   1cff8:	add	r3, pc, r3
   1cffc:	str	r3, [sp]
   1d000:	ldr	r3, [r5, #64]	; 0x40
   1d004:	ldr	r2, [r5, #60]	; 0x3c
   1d008:	ldr	r1, [pc, #1424]	; 1d5a0 <readstat_parse_dta+0x1060>
   1d00c:	add	r1, pc, r1
   1d010:	mov	r0, r5
   1d014:	bl	1bc18 <dta_read_chunk>
   1d018:	subs	sl, r0, #0
   1d01c:	bne	1e1c4 <readstat_parse_dta+0x1c84>
   1d020:	ldr	r3, [pc, #1404]	; 1d5a4 <readstat_parse_dta+0x1064>
   1d024:	add	r3, pc, r3
   1d028:	str	r3, [sp]
   1d02c:	ldr	r3, [r5, #72]	; 0x48
   1d030:	ldr	r2, [r5, #68]	; 0x44
   1d034:	ldr	r1, [pc, #1388]	; 1d5a8 <readstat_parse_dta+0x1068>
   1d038:	add	r1, pc, r1
   1d03c:	mov	r0, r5
   1d040:	bl	1bc18 <dta_read_chunk>
   1d044:	mov	sl, r0
   1d048:	cmp	r6, #0
   1d04c:	beq	1d058 <readstat_parse_dta+0xb18>
   1d050:	mov	r0, r6
   1d054:	bl	3ee0 <free@plt>
   1d058:	cmp	sl, #0
   1d05c:	bne	1c5a0 <readstat_parse_dta+0x60>
   1d060:	mov	r6, #0
   1d064:	add	r8, sp, #128	; 0x80
   1d068:	mov	r7, r6
   1d06c:	ldr	r3, [r5, #148]	; 0x94
   1d070:	cmp	r6, r3
   1d074:	blt	1d30c <readstat_parse_dta+0xdcc>
   1d078:	cmp	r3, #0
   1d07c:	bgt	1d090 <readstat_parse_dta+0xb50>
   1d080:	ldrd	r2, [r5, #152]	; 0x98
   1d084:	cmp	r2, #1
   1d088:	sbcs	r3, r3, #0
   1d08c:	blt	1d0a0 <readstat_parse_dta+0xb60>
   1d090:	ldr	r3, [r5, #160]	; 0xa0
   1d094:	cmp	r3, #0
   1d098:	moveq	sl, #5
   1d09c:	beq	1c5a0 <readstat_parse_dta+0x60>
   1d0a0:	ldr	r3, [r5, #248]	; 0xf8
   1d0a4:	cmp	r3, #0
   1d0a8:	beq	1d368 <readstat_parse_dta+0xe28>
   1d0ac:	mov	r9, #0
   1d0b0:	mov	r7, r9
   1d0b4:	add	r3, sp, #88	; 0x58
   1d0b8:	str	r3, [sp, #24]
   1d0bc:	add	r3, sp, #72	; 0x48
   1d0c0:	str	r3, [sp, #28]
   1d0c4:	add	r3, sp, #128	; 0x80
   1d0c8:	str	r3, [sp, #32]
   1d0cc:	ldr	r3, [pc, #1240]	; 1d5ac <readstat_parse_dta+0x106c>
   1d0d0:	add	r3, pc, r3
   1d0d4:	str	r3, [sp, #36]	; 0x24
   1d0d8:	ldr	r3, [pc, #1232]	; 1d5b0 <readstat_parse_dta+0x1070>
   1d0dc:	add	r3, pc, r3
   1d0e0:	str	r3, [sp, #40]	; 0x28
   1d0e4:	ldr	r3, [r5, #148]	; 0x94
   1d0e8:	cmp	r7, r3
   1d0ec:	bge	1d368 <readstat_parse_dta+0xe28>
   1d0f0:	mov	r8, r7
   1d0f4:	ldr	ip, [r5, #28]
   1d0f8:	lsl	r0, r7, #1
   1d0fc:	ldr	r3, [sp, #24]
   1d100:	ldr	r2, [sp, #28]
   1d104:	mov	r1, r5
   1d108:	ldrh	r0, [ip, r0]
   1d10c:	bl	4210 <dta_type_info@plt>
   1d110:	cmp	r0, #0
   1d114:	bne	1d3f0 <readstat_parse_dta+0xeb0>
   1d118:	ldr	r3, [sp, #88]	; 0x58
   1d11c:	cmp	r3, #0
   1d120:	bne	1d348 <readstat_parse_dta+0xe08>
   1d124:	ldr	r3, [sp, #72]	; 0x48
   1d128:	add	r3, r3, #1
   1d12c:	str	r3, [sp, #72]	; 0x48
   1d130:	ldr	r3, [r5, #228]	; 0xe4
   1d134:	str	r3, [sp, #20]
   1d138:	ldr	fp, [sp, #88]	; 0x58
   1d13c:	ldr	sl, [sp, #72]	; 0x48
   1d140:	ldr	r1, [pc, #1132]	; 1d5b4 <readstat_parse_dta+0x1074>
   1d144:	mov	r0, #1
   1d148:	bl	3d78 <calloc@plt>
   1d14c:	mov	r6, r0
   1d150:	str	fp, [r0]
   1d154:	str	r7, [r0, #4]
   1d158:	str	r9, [r0, #2148]	; 0x864
   1d15c:	str	sl, [r0, #1596]	; 0x63c
   1d160:	ldr	r2, [r5, #76]	; 0x4c
   1d164:	ldr	r1, [r5, #36]	; 0x24
   1d168:	ldr	r3, [r5, #236]	; 0xec
   1d16c:	str	r3, [sp]
   1d170:	mov	r3, r2
   1d174:	mla	r2, r2, r8, r1
   1d178:	mov	r1, #300	; 0x12c
   1d17c:	add	r0, r0, #8
   1d180:	bl	4264 <readstat_convert@plt>
   1d184:	ldr	r3, [r5, #88]	; 0x58
   1d188:	mul	r1, r3, r8
   1d18c:	ldr	r0, [r5, #68]	; 0x44
   1d190:	add	r2, r0, r1
   1d194:	ldrb	r1, [r0, r1]
   1d198:	cmp	r1, #0
   1d19c:	beq	1d1b4 <readstat_parse_dta+0xc74>
   1d1a0:	ldr	r1, [r5, #236]	; 0xec
   1d1a4:	str	r1, [sp]
   1d1a8:	mov	r1, #1024	; 0x400
   1d1ac:	add	r0, r6, #564	; 0x234
   1d1b0:	bl	4264 <readstat_convert@plt>
   1d1b4:	ldr	r3, [r5, #80]	; 0x50
   1d1b8:	mul	r1, r3, r8
   1d1bc:	ldr	r0, [r5, #52]	; 0x34
   1d1c0:	add	r2, r0, r1
   1d1c4:	ldrb	r1, [r0, r1]
   1d1c8:	cmp	r1, #0
   1d1cc:	beq	1d254 <readstat_parse_dta+0xd14>
   1d1d0:	add	sl, r6, #308	; 0x134
   1d1d4:	ldr	r1, [r5, #236]	; 0xec
   1d1d8:	str	r1, [sp]
   1d1dc:	mov	r1, #256	; 0x100
   1d1e0:	mov	r0, sl
   1d1e4:	bl	4264 <readstat_convert@plt>
   1d1e8:	ldrb	r3, [r6, #308]	; 0x134
   1d1ec:	cmp	r3, #37	; 0x25
   1d1f0:	bne	1d218 <readstat_parse_dta+0xcd8>
   1d1f4:	ldrb	r3, [r6, #309]	; 0x135
   1d1f8:	cmp	r3, #45	; 0x2d
   1d1fc:	moveq	r3, #1
   1d200:	streq	r3, [r6, #2132]	; 0x854
   1d204:	beq	1d218 <readstat_parse_dta+0xcd8>
   1d208:	cmp	r3, #126	; 0x7e
   1d20c:	moveq	r3, #2
   1d210:	movne	r3, #3
   1d214:	str	r3, [r6, #2132]	; 0x854
   1d218:	ldr	fp, [sp, #32]
   1d21c:	mov	r2, fp
   1d220:	ldr	r1, [sp, #36]	; 0x24
   1d224:	mov	r0, sl
   1d228:	bl	42b8 <__isoc99_sscanf@plt>
   1d22c:	cmp	r0, #1
   1d230:	beq	1d24c <readstat_parse_dta+0xd0c>
   1d234:	mov	r2, fp
   1d238:	ldr	r1, [sp, #40]	; 0x28
   1d23c:	mov	r0, sl
   1d240:	bl	42b8 <__isoc99_sscanf@plt>
   1d244:	cmp	r0, #1
   1d248:	bne	1d254 <readstat_parse_dta+0xd14>
   1d24c:	ldr	r3, [sp, #128]	; 0x80
   1d250:	str	r3, [r6, #2136]	; 0x858
   1d254:	ldr	r3, [sp, #20]
   1d258:	str	r6, [r3, r8, lsl #2]
   1d25c:	ldr	r1, [r5, #84]	; 0x54
   1d260:	mul	r1, r1, r8
   1d264:	ldr	r2, [r5, #60]	; 0x3c
   1d268:	ldrb	ip, [r2, r1]
   1d26c:	ldr	r0, [r5, #228]	; 0xe4
   1d270:	ldr	r6, [r5, #248]	; 0xf8
   1d274:	ldr	r3, [r5, #276]	; 0x114
   1d278:	cmp	ip, #0
   1d27c:	addne	r2, r2, r1
   1d280:	moveq	r2, #0
   1d284:	ldr	r1, [r0, r8, lsl #2]
   1d288:	mov	r0, r7
   1d28c:	blx	r6
   1d290:	cmp	r0, #1
   1d294:	beq	1d35c <readstat_parse_dta+0xe1c>
   1d298:	cmp	r0, #2
   1d29c:	ldreq	r3, [r5, #228]	; 0xe4
   1d2a0:	ldreq	r3, [r3, r8, lsl #2]
   1d2a4:	moveq	r2, #1
   1d2a8:	streq	r2, [r3, #2144]	; 0x860
   1d2ac:	addne	r9, r9, #1
   1d2b0:	add	r7, r7, #1
   1d2b4:	b	1d0e4 <readstat_parse_dta+0xba4>
   1d2b8:	cmp	r3, #2
   1d2bc:	bne	1cf70 <readstat_parse_dta+0xa30>
   1d2c0:	mov	r2, r7
   1d2c4:	mov	r1, r6
   1d2c8:	ldr	r0, [r5, #28]
   1d2cc:	bl	3f40 <memcpy@plt>
   1d2d0:	ldrb	r3, [r5, #192]	; 0xc0
   1d2d4:	tst	r3, #1
   1d2d8:	beq	1cf70 <readstat_parse_dta+0xa30>
   1d2dc:	mov	r7, #0
   1d2e0:	b	1d2fc <readstat_parse_dta+0xdbc>
   1d2e4:	lsl	r8, r7, #1
   1d2e8:	ldr	r9, [r5, #28]
   1d2ec:	ldrh	r0, [r9, r8]
   1d2f0:	bl	3ec8 <byteswap2@plt>
   1d2f4:	strh	r0, [r9, r8]
   1d2f8:	add	r7, r7, #1
   1d2fc:	ldr	r3, [r5, #148]	; 0x94
   1d300:	cmp	r7, r3
   1d304:	blt	1d2e4 <readstat_parse_dta+0xda4>
   1d308:	b	1cf70 <readstat_parse_dta+0xa30>
   1d30c:	ldr	ip, [r5, #28]
   1d310:	lsl	r0, r6, #1
   1d314:	mov	r3, r7
   1d318:	mov	r2, r8
   1d31c:	mov	r1, r5
   1d320:	ldrh	r0, [ip, r0]
   1d324:	bl	4210 <dta_type_info@plt>
   1d328:	cmp	r0, #0
   1d32c:	bne	1e1bc <readstat_parse_dta+0x1c7c>
   1d330:	ldr	r3, [r5, #160]	; 0xa0
   1d334:	ldr	r2, [sp, #128]	; 0x80
   1d338:	add	r3, r3, r2
   1d33c:	str	r3, [r5, #160]	; 0xa0
   1d340:	add	r6, r6, #1
   1d344:	b	1d06c <readstat_parse_dta+0xb2c>
   1d348:	cmp	r3, #6
   1d34c:	moveq	r3, #0
   1d350:	streq	r3, [sp, #88]	; 0x58
   1d354:	streq	r3, [sp, #72]	; 0x48
   1d358:	b	1d130 <readstat_parse_dta+0xbf0>
   1d35c:	mov	sl, #4
   1d360:	cmp	sl, #0
   1d364:	bne	1c5a0 <readstat_parse_dta+0x60>
   1d368:	ldr	r6, [r5, #280]	; 0x118
   1d36c:	ldr	r3, [r5, #92]	; 0x5c
   1d370:	cmp	r3, #0
   1d374:	beq	1d62c <readstat_parse_dta+0x10ec>
   1d378:	ldrb	r3, [r5, #192]	; 0xc0
   1d37c:	tst	r3, #4
   1d380:	beq	1d3f8 <readstat_parse_dta+0xeb8>
   1d384:	ldr	r3, [r5, #244]	; 0xf4
   1d388:	cmp	r3, #0
   1d38c:	bne	1d3f8 <readstat_parse_dta+0xeb8>
   1d390:	ldr	r3, [r6, #8]
   1d394:	ldr	r2, [r6, #20]
   1d398:	mov	r1, #0
   1d39c:	ldr	r0, [r5, #120]	; 0x78
   1d3a0:	blx	r3
   1d3a4:	cmn	r0, #1
   1d3a8:	bne	1d62c <readstat_parse_dta+0x10ec>
   1d3ac:	ldr	r3, [r5, #264]	; 0x108
   1d3b0:	cmp	r3, #0
   1d3b4:	beq	1d3e8 <readstat_parse_dta+0xea8>
   1d3b8:	add	r6, r5, #288	; 0x120
   1d3bc:	ldrd	r2, [r5, #120]	; 0x78
   1d3c0:	strd	r2, [sp]
   1d3c4:	ldr	r2, [pc, #492]	; 1d5b8 <readstat_parse_dta+0x1078>
   1d3c8:	add	r2, pc, r2
   1d3cc:	mov	r1, #256	; 0x100
   1d3d0:	mov	r0, r6
   1d3d4:	bl	42ac <snprintf@plt>
   1d3d8:	ldr	r3, [r5, #264]	; 0x108
   1d3dc:	ldr	r1, [r5, #276]	; 0x114
   1d3e0:	mov	r0, r6
   1d3e4:	blx	r3
   1d3e8:	mov	sl, #15
   1d3ec:	b	1c5a0 <readstat_parse_dta+0x60>
   1d3f0:	mov	sl, r0
   1d3f4:	b	1d360 <readstat_parse_dta+0xe20>
   1d3f8:	ldr	r1, [pc, #444]	; 1d5bc <readstat_parse_dta+0x107c>
   1d3fc:	add	r1, pc, r1
   1d400:	mov	r0, r5
   1d404:	bl	1bb90 <dta_read_tag>
   1d408:	subs	r8, r0, #0
   1d40c:	movne	sl, r8
   1d410:	bne	1c5a0 <readstat_parse_dta+0x60>
   1d414:	mov	r7, #0
   1d418:	add	fp, sp, #88	; 0x58
   1d41c:	ldr	r9, [pc, #412]	; 1d5c0 <readstat_parse_dta+0x1080>
   1d420:	add	r9, pc, r9
   1d424:	ldr	r3, [pc, #408]	; 1d5c4 <readstat_parse_dta+0x1084>
   1d428:	add	r3, pc, r3
   1d42c:	str	r3, [sp, #20]
   1d430:	ldr	r3, [pc, #400]	; 1d5c8 <readstat_parse_dta+0x1088>
   1d434:	add	r3, pc, r3
   1d438:	str	r3, [sp, #24]
   1d43c:	ldr	r3, [pc, #392]	; 1d5cc <readstat_parse_dta+0x108c>
   1d440:	add	r3, pc, r3
   1d444:	str	r3, [sp, #28]
   1d448:	ldr	r3, [pc, #384]	; 1d5d0 <readstat_parse_dta+0x1090>
   1d44c:	add	r3, pc, r3
   1d450:	str	r3, [sp, #32]
   1d454:	ldrb	r3, [r5, #192]	; 0xc0
   1d458:	tst	r3, #4
   1d45c:	beq	1d70c <readstat_parse_dta+0x11cc>
   1d460:	ldr	r3, [r6, #12]
   1d464:	ldr	r2, [r6, #20]
   1d468:	mov	r1, #4
   1d46c:	add	r0, sp, #128	; 0x80
   1d470:	blx	r3
   1d474:	cmp	r0, #4
   1d478:	bne	1d618 <readstat_parse_dta+0x10d8>
   1d47c:	mov	r2, #4
   1d480:	mov	r1, r9
   1d484:	add	r0, sp, #128	; 0x80
   1d488:	bl	3fc4 <memcmp@plt>
   1d48c:	cmp	r0, #0
   1d490:	bne	1d4c4 <readstat_parse_dta+0xf84>
   1d494:	ldr	r1, [pc, #312]	; 1d5d4 <readstat_parse_dta+0x1094>
   1d498:	add	r1, pc, r1
   1d49c:	mov	r0, r5
   1d4a0:	bl	1bb90 <dta_read_tag>
   1d4a4:	subs	sl, r0, #0
   1d4a8:	bne	1d61c <readstat_parse_dta+0x10dc>
   1d4ac:	cmp	r7, #0
   1d4b0:	beq	1d62c <readstat_parse_dta+0x10ec>
   1d4b4:	mov	sl, r8
   1d4b8:	mov	r0, r7
   1d4bc:	bl	3ee0 <free@plt>
   1d4c0:	b	1d624 <readstat_parse_dta+0x10e4>
   1d4c4:	mov	r2, #4
   1d4c8:	ldr	r1, [sp, #20]
   1d4cc:	add	r0, sp, #128	; 0x80
   1d4d0:	bl	3fc4 <memcmp@plt>
   1d4d4:	cmp	r0, #0
   1d4d8:	bne	1d704 <readstat_parse_dta+0x11c4>
   1d4dc:	mov	r3, #1
   1d4e0:	strb	r3, [sp, #88]	; 0x58
   1d4e4:	ldr	r3, [r5, #92]	; 0x5c
   1d4e8:	cmp	r3, #2
   1d4ec:	bne	1d81c <readstat_parse_dta+0x12dc>
   1d4f0:	ldr	r3, [r6, #12]
   1d4f4:	ldr	r2, [r6, #20]
   1d4f8:	mov	r1, #2
   1d4fc:	add	r0, sp, #128	; 0x80
   1d500:	blx	r3
   1d504:	cmp	r0, #2
   1d508:	beq	1d730 <readstat_parse_dta+0x11f0>
   1d50c:	mov	sl, #2
   1d510:	b	1d61c <readstat_parse_dta+0x10dc>
   1d514:	.word	0x0000aad4
   1d518:	.word	0x0000aac4
   1d51c:	.word	0x0000aab8
   1d520:	.word	0x0000adb4
   1d524:	.word	0x0000aa98
   1d528:	.word	0x0000aa88
   1d52c:	.word	0x0000aa68
   1d530:	.word	0x0000aa68
   1d534:	.word	0x0000aa50
   1d538:	.word	0x0000a988
   1d53c:	.word	0x0000a94c
   1d540:	.word	0x0000a930
   1d544:	.word	0x0000a918
   1d548:	.word	0x0000a8e8
   1d54c:	.word	0x0000a8d0
   1d550:	.word	0x0000a85c
   1d554:	.word	0x0000a844
   1d558:	.word	0x0000a818
   1d55c:	.word	0x0000a800
   1d560:	.word	0x0000a644
   1d564:	.word	0x0000a5a4
   1d568:	.word	0x0000a588
   1d56c:	.word	0x0000a6f0
   1d570:	.word	0x0000a6c8
   1d574:	.word	0x0000a464
   1d578:	.word	0x0000a348
   1d57c:	.word	0x0000a338
   1d580:	.word	0x0000a24c
   1d584:	.word	0x0000a22c
   1d588:	.word	0x0000a20c
   1d58c:	.word	0x0000a218
   1d590:	.word	0x0000a1f8
   1d594:	.word	0x0000a204
   1d598:	.word	0x0000a1e4
   1d59c:	.word	0x0000a1f8
   1d5a0:	.word	0x0000a1d0
   1d5a4:	.word	0x0000a1f8
   1d5a8:	.word	0x0000a1d0
   1d5ac:	.word	0x0000a160
   1d5b0:	.word	0x0000a15c
   1d5b4:	.word	0x00000868
   1d5b8:	.word	0x00009e78
   1d5bc:	.word	0x00009e74
   1d5c0:	.word	0x00009e64
   1d5c4:	.word	0x00009e64
   1d5c8:	.word	0x00009e60
   1d5cc:	.word	0x00009e5c
   1d5d0:	.word	0x00009e58
   1d5d4:	.word	0x00009f80
   1d5d8:	.word	0x00009bd4
   1d5dc:	.word	0x00009a24
   1d5e0:	.word	0x000099fc
   1d5e4:	.word	0x0000968c
   1d5e8:	.word	0x000096fc
   1d5ec:	.word	0x000096e4
   1d5f0:	.word	0x000096d0
   1d5f4:	.word	0x000095d4
   1d5f8:	.word	0x000095b4
   1d5fc:	.word	0x000095a8
   1d600:	.word	0x0001f401
   1d604:	.word	0x00007d01
   1d608:	.word	0x0000919c
   1d60c:	.word	0x00009174
   1d610:	.word	0x000090d8
   1d614:	.word	0x0000908c
   1d618:	mov	sl, #2
   1d61c:	cmp	r7, #0
   1d620:	bne	1d4b8 <readstat_parse_dta+0xf78>
   1d624:	cmp	sl, #0
   1d628:	bne	1c5a0 <readstat_parse_dta+0x60>
   1d62c:	ldrb	r3, [r5, #192]	; 0xc0
   1d630:	tst	r3, #4
   1d634:	bne	1d698 <readstat_parse_dta+0x1158>
   1d638:	ldr	r3, [r4, #8]
   1d63c:	ldr	r2, [r4, #20]
   1d640:	mov	r1, #1
   1d644:	mov	r0, #0
   1d648:	blx	r3
   1d64c:	asr	r1, r0, #31
   1d650:	strd	r0, [r5, #120]	; 0x78
   1d654:	mvn	r2, #0
   1d658:	mvn	r3, #0
   1d65c:	cmp	r1, r3
   1d660:	cmpeq	r0, r2
   1d664:	moveq	sl, #15
   1d668:	beq	1c5a0 <readstat_parse_dta+0x60>
   1d66c:	ldr	ip, [r5, #160]	; 0xa0
   1d670:	ldr	r2, [r5, #152]	; 0x98
   1d674:	ldr	lr, [r5, #156]	; 0x9c
   1d678:	umull	r2, r3, r2, ip
   1d67c:	mla	r3, ip, lr, r3
   1d680:	adds	r2, r2, r0
   1d684:	adc	r3, r3, r1
   1d688:	strd	r2, [r5, #136]	; 0x88
   1d68c:	ldrb	r3, [r5, #192]	; 0xc0
   1d690:	tst	r3, #4
   1d694:	beq	1db68 <readstat_parse_dta+0x1628>
   1d698:	ldr	r6, [r5, #280]	; 0x118
   1d69c:	ldr	r3, [r6, #8]
   1d6a0:	ldr	r2, [r6, #20]
   1d6a4:	mov	r1, #0
   1d6a8:	ldr	r0, [r5, #128]	; 0x80
   1d6ac:	blx	r3
   1d6b0:	cmn	r0, #1
   1d6b4:	bne	1d8b4 <readstat_parse_dta+0x1374>
   1d6b8:	ldr	r3, [r5, #264]	; 0x108
   1d6bc:	cmp	r3, #0
   1d6c0:	moveq	r7, #15
   1d6c4:	beq	1d6fc <readstat_parse_dta+0x11bc>
   1d6c8:	add	r6, r5, #288	; 0x120
   1d6cc:	ldrd	r2, [r5, #128]	; 0x80
   1d6d0:	strd	r2, [sp]
   1d6d4:	ldr	r2, [pc, #-260]	; 1d5d8 <readstat_parse_dta+0x1098>
   1d6d8:	add	r2, pc, r2
   1d6dc:	mov	r1, #256	; 0x100
   1d6e0:	mov	r0, r6
   1d6e4:	bl	42ac <snprintf@plt>
   1d6e8:	ldr	r3, [r5, #264]	; 0x108
   1d6ec:	ldr	r1, [r5, #276]	; 0x114
   1d6f0:	mov	r0, r6
   1d6f4:	blx	r3
   1d6f8:	mov	r7, #15
   1d6fc:	mov	sl, r7
   1d700:	b	1c5a0 <readstat_parse_dta+0x60>
   1d704:	mov	sl, #5
   1d708:	b	1d61c <readstat_parse_dta+0x10dc>
   1d70c:	ldr	r3, [r6, #12]
   1d710:	ldr	r2, [r6, #20]
   1d714:	mov	r1, #1
   1d718:	mov	r0, fp
   1d71c:	blx	r3
   1d720:	cmp	r0, #1
   1d724:	beq	1d4e4 <readstat_parse_dta+0xfa4>
   1d728:	mov	sl, #2
   1d72c:	b	1d61c <readstat_parse_dta+0x10dc>
   1d730:	ldrb	r3, [r5, #192]	; 0xc0
   1d734:	tst	r3, #1
   1d738:	ldrheq	sl, [sp, #128]	; 0x80
   1d73c:	beq	1d74c <readstat_parse_dta+0x120c>
   1d740:	ldrh	r0, [sp, #128]	; 0x80
   1d744:	bl	3ec8 <byteswap2@plt>
   1d748:	mov	sl, r0
   1d74c:	ldrb	r3, [sp, #88]	; 0x58
   1d750:	cmp	sl, #0
   1d754:	cmpeq	r3, #0
   1d758:	beq	1d4ac <readstat_parse_dta+0xf6c>
   1d75c:	cmp	sl, #1048576	; 0x100000
   1d760:	cmpls	r3, #1
   1d764:	bne	1d8a4 <readstat_parse_dta+0x1364>
   1d768:	ldr	r3, [r5, #244]	; 0xf4
   1d76c:	cmp	r3, #0
   1d770:	beq	1d86c <readstat_parse_dta+0x132c>
   1d774:	ldr	r3, [r5, #96]	; 0x60
   1d778:	cmp	sl, r3, lsl #1
   1d77c:	bcc	1d86c <readstat_parse_dta+0x132c>
   1d780:	add	r1, sl, #1
   1d784:	mov	r0, r7
   1d788:	bl	430c <readstat_realloc@plt>
   1d78c:	subs	r7, r0, #0
   1d790:	beq	1d85c <readstat_parse_dta+0x131c>
   1d794:	mov	r3, #0
   1d798:	strb	r3, [r7, sl]
   1d79c:	ldr	r3, [r6, #12]
   1d7a0:	ldr	r2, [r6, #20]
   1d7a4:	mov	r1, sl
   1d7a8:	mov	r0, r7
   1d7ac:	blx	r3
   1d7b0:	cmp	sl, r0
   1d7b4:	bne	1d864 <readstat_parse_dta+0x1324>
   1d7b8:	mov	r3, #0
   1d7bc:	str	r3, [sp, #128]	; 0x80
   1d7c0:	mov	r2, #4
   1d7c4:	ldr	r1, [sp, #24]
   1d7c8:	mov	r0, r7
   1d7cc:	bl	4528 <strncmp@plt>
   1d7d0:	cmp	r0, #0
   1d7d4:	bne	1d888 <readstat_parse_dta+0x1348>
   1d7d8:	ldr	r0, [r5, #96]	; 0x60
   1d7dc:	add	r2, sp, #128	; 0x80
   1d7e0:	ldr	r1, [sp, #28]
   1d7e4:	add	r0, r7, r0
   1d7e8:	bl	42b8 <__isoc99_sscanf@plt>
   1d7ec:	cmp	r0, #1
   1d7f0:	bne	1d888 <readstat_parse_dta+0x1348>
   1d7f4:	ldr	r1, [r5, #96]	; 0x60
   1d7f8:	ldr	r3, [r5, #244]	; 0xf4
   1d7fc:	ldr	r2, [r5, #276]	; 0x114
   1d800:	add	r1, r7, r1, lsl #1
   1d804:	ldr	r0, [sp, #128]	; 0x80
   1d808:	blx	r3
   1d80c:	cmp	r0, #0
   1d810:	beq	1d888 <readstat_parse_dta+0x1348>
   1d814:	mov	sl, #4
   1d818:	b	1d61c <readstat_parse_dta+0x10dc>
   1d81c:	ldr	r3, [r6, #12]
   1d820:	ldr	r2, [r6, #20]
   1d824:	mov	r1, #4
   1d828:	add	r0, sp, #128	; 0x80
   1d82c:	blx	r3
   1d830:	cmp	r0, #4
   1d834:	movne	sl, #2
   1d838:	bne	1d61c <readstat_parse_dta+0x10dc>
   1d83c:	ldrb	r3, [r5, #192]	; 0xc0
   1d840:	tst	r3, #1
   1d844:	ldreq	sl, [sp, #128]	; 0x80
   1d848:	beq	1d74c <readstat_parse_dta+0x120c>
   1d84c:	ldr	r0, [sp, #128]	; 0x80
   1d850:	bl	3db4 <byteswap4@plt>
   1d854:	mov	sl, r0
   1d858:	b	1d74c <readstat_parse_dta+0x120c>
   1d85c:	mov	sl, #3
   1d860:	b	1d61c <readstat_parse_dta+0x10dc>
   1d864:	mov	sl, #2
   1d868:	b	1d61c <readstat_parse_dta+0x10dc>
   1d86c:	ldr	r3, [r6, #8]
   1d870:	ldr	r2, [r6, #20]
   1d874:	mov	r1, #1
   1d878:	mov	r0, sl
   1d87c:	blx	r3
   1d880:	cmn	r0, #1
   1d884:	beq	1d8ac <readstat_parse_dta+0x136c>
   1d888:	ldr	r1, [sp, #32]
   1d88c:	mov	r0, r5
   1d890:	bl	1bb90 <dta_read_tag>
   1d894:	cmp	r0, #0
   1d898:	beq	1d454 <readstat_parse_dta+0xf14>
   1d89c:	mov	sl, r0
   1d8a0:	b	1d61c <readstat_parse_dta+0x10dc>
   1d8a4:	mov	sl, #32
   1d8a8:	b	1d61c <readstat_parse_dta+0x10dc>
   1d8ac:	mov	sl, #15
   1d8b0:	b	1d61c <readstat_parse_dta+0x10dc>
   1d8b4:	ldr	r1, [pc, #-736]	; 1d5dc <readstat_parse_dta+0x109c>
   1d8b8:	add	r1, pc, r1
   1d8bc:	mov	r0, r5
   1d8c0:	bl	1bb90 <dta_read_tag>
   1d8c4:	subs	r7, r0, #0
   1d8c8:	bne	1d6fc <readstat_parse_dta+0x11bc>
   1d8cc:	mov	r3, #100	; 0x64
   1d8d0:	str	r3, [r5, #224]	; 0xe0
   1d8d4:	mov	r0, #400	; 0x190
   1d8d8:	bl	4258 <readstat_malloc@plt>
   1d8dc:	str	r0, [r5, #216]	; 0xd8
   1d8e0:	add	r9, sp, #72	; 0x48
   1d8e4:	ldr	r3, [pc, #-780]	; 1d5e0 <readstat_parse_dta+0x10a0>
   1d8e8:	add	r3, pc, r3
   1d8ec:	str	r3, [sp, #20]
   1d8f0:	add	r8, sp, #88	; 0x58
   1d8f4:	mov	fp, #0
   1d8f8:	add	r3, sp, #128	; 0x80
   1d8fc:	str	r3, [sp, #24]
   1d900:	ldr	r3, [r6, #12]
   1d904:	ldr	r2, [r6, #20]
   1d908:	mov	r1, #3
   1d90c:	mov	r0, r9
   1d910:	blx	r3
   1d914:	cmp	r0, #3
   1d918:	bne	1e200 <readstat_parse_dta+0x1cc0>
   1d91c:	mov	r2, #3
   1d920:	ldr	r1, [sp, #20]
   1d924:	mov	r0, r9
   1d928:	bl	3fc4 <memcmp@plt>
   1d92c:	cmp	r0, #0
   1d930:	bne	1dbe4 <readstat_parse_dta+0x16a4>
   1d934:	ldr	r3, [r5, #116]	; 0x74
   1d938:	cmp	r3, #4
   1d93c:	bls	1dab0 <readstat_parse_dta+0x1570>
   1d940:	ldr	r3, [r5, #280]	; 0x118
   1d944:	ldr	sl, [r3, #12]
   1d948:	ldr	r2, [r3, #20]
   1d94c:	mov	r1, #17
   1d950:	mov	r0, r8
   1d954:	blx	sl
   1d958:	cmp	r0, #17
   1d95c:	movne	sl, #2
   1d960:	bne	1d9dc <readstat_parse_dta+0x149c>
   1d964:	ldrb	r3, [r5, #192]	; 0xc0
   1d968:	tst	r3, #1
   1d96c:	ldrheq	r0, [sp, #88]	; 0x58
   1d970:	beq	1d980 <readstat_parse_dta+0x1440>
   1d974:	ldr	r0, [sp, #88]	; 0x58
   1d978:	bl	3db4 <byteswap4@plt>
   1d97c:	uxth	r0, r0
   1d980:	strh	r0, [sp, #128]	; 0x80
   1d984:	ldrb	r3, [r5, #192]	; 0xc0
   1d988:	tst	r3, #1
   1d98c:	ldreq	r0, [sp, #92]	; 0x5c
   1d990:	ldreq	r1, [sp, #96]	; 0x60
   1d994:	beq	1d9a4 <readstat_parse_dta+0x1464>
   1d998:	ldr	r0, [sp, #92]	; 0x5c
   1d99c:	ldr	r1, [sp, #96]	; 0x60
   1d9a0:	bl	3d9c <byteswap8@plt>
   1d9a4:	str	r0, [sp, #136]	; 0x88
   1d9a8:	str	r1, [sp, #140]	; 0x8c
   1d9ac:	ldrb	r3, [sp, #100]	; 0x64
   1d9b0:	strb	r3, [sp, #144]	; 0x90
   1d9b4:	ldrb	r3, [r5, #192]	; 0xc0
   1d9b8:	tst	r3, #1
   1d9bc:	beq	1da9c <readstat_parse_dta+0x155c>
   1d9c0:	ldrb	r3, [sp, #104]	; 0x68
   1d9c4:	lsl	r3, r3, #24
   1d9c8:	ldr	r0, [sp, #100]	; 0x64
   1d9cc:	orr	r0, r3, r0, lsr #8
   1d9d0:	bl	3db4 <byteswap4@plt>
   1d9d4:	str	r0, [sp, #148]	; 0x94
   1d9d8:	mov	sl, r7
   1d9dc:	cmp	sl, #0
   1d9e0:	bne	1db60 <readstat_parse_dta+0x1620>
   1d9e4:	ldrb	r3, [sp, #144]	; 0x90
   1d9e8:	cmp	r3, #130	; 0x82
   1d9ec:	bne	1d900 <readstat_parse_dta+0x13c0>
   1d9f0:	ldr	r1, [r5, #220]	; 0xdc
   1d9f4:	ldr	r3, [r5, #224]	; 0xe0
   1d9f8:	cmp	r1, r3
   1d9fc:	bne	1da20 <readstat_parse_dta+0x14e0>
   1da00:	lsl	r3, r1, #1
   1da04:	str	r3, [r5, #224]	; 0xe0
   1da08:	lsl	r1, r1, #3
   1da0c:	ldr	r0, [r5, #216]	; 0xd8
   1da10:	bl	430c <readstat_realloc@plt>
   1da14:	str	r0, [r5, #216]	; 0xd8
   1da18:	cmp	r0, #0
   1da1c:	beq	1db5c <readstat_parse_dta+0x161c>
   1da20:	ldr	r0, [sp, #148]	; 0x94
   1da24:	add	r0, r0, #32
   1da28:	bl	4258 <readstat_malloc@plt>
   1da2c:	subs	sl, r0, #0
   1da30:	beq	1dbdc <readstat_parse_dta+0x169c>
   1da34:	ldr	ip, [sp, #24]
   1da38:	ldm	ip!, {r0, r1, r2, r3}
   1da3c:	str	r0, [sl]
   1da40:	str	r1, [sl, #4]
   1da44:	str	r2, [sl, #8]
   1da48:	str	r3, [sl, #12]
   1da4c:	ldm	ip!, {r0, r1, r2, r3}
   1da50:	str	r0, [sl, #16]
   1da54:	str	r1, [sl, #20]
   1da58:	str	r2, [sl, #24]
   1da5c:	str	r3, [sl, #28]
   1da60:	ldr	r2, [r5, #216]	; 0xd8
   1da64:	ldr	r3, [r5, #220]	; 0xdc
   1da68:	add	r1, r3, #1
   1da6c:	str	r1, [r5, #220]	; 0xdc
   1da70:	str	sl, [r2, r3, lsl #2]
   1da74:	ldr	r3, [r6, #12]
   1da78:	ldr	r2, [r6, #20]
   1da7c:	ldr	r1, [sl, #20]
   1da80:	add	r0, sl, #24
   1da84:	blx	r3
   1da88:	ldr	r3, [sl, #20]
   1da8c:	cmp	r0, r3
   1da90:	beq	1d900 <readstat_parse_dta+0x13c0>
   1da94:	mov	sl, #2
   1da98:	b	1db60 <readstat_parse_dta+0x1620>
   1da9c:	ldrb	r0, [sp, #104]	; 0x68
   1daa0:	lsl	r0, r0, #24
   1daa4:	ldr	r3, [sp, #100]	; 0x64
   1daa8:	orr	r0, r0, r3, lsr #8
   1daac:	b	1d9d4 <readstat_parse_dta+0x1494>
   1dab0:	ldr	r3, [r5, #280]	; 0x118
   1dab4:	ldr	sl, [r3, #12]
   1dab8:	ldr	r2, [r3, #20]
   1dabc:	mov	r1, #13
   1dac0:	mov	r0, r8
   1dac4:	blx	sl
   1dac8:	cmp	r0, #13
   1dacc:	movne	sl, #2
   1dad0:	bne	1d9dc <readstat_parse_dta+0x149c>
   1dad4:	ldrb	r3, [r5, #192]	; 0xc0
   1dad8:	tst	r3, #1
   1dadc:	ldrheq	r0, [sp, #88]	; 0x58
   1dae0:	beq	1daf0 <readstat_parse_dta+0x15b0>
   1dae4:	ldr	r0, [sp, #88]	; 0x58
   1dae8:	bl	3db4 <byteswap4@plt>
   1daec:	uxth	r0, r0
   1daf0:	strh	r0, [sp, #128]	; 0x80
   1daf4:	ldrb	r3, [r5, #192]	; 0xc0
   1daf8:	tst	r3, #1
   1dafc:	ldreq	r0, [sp, #92]	; 0x5c
   1db00:	beq	1db0c <readstat_parse_dta+0x15cc>
   1db04:	ldr	r0, [sp, #92]	; 0x5c
   1db08:	bl	3db4 <byteswap4@plt>
   1db0c:	str	r0, [sp, #136]	; 0x88
   1db10:	str	fp, [sp, #140]	; 0x8c
   1db14:	ldrb	r3, [sp, #96]	; 0x60
   1db18:	strb	r3, [sp, #144]	; 0x90
   1db1c:	ldrb	r3, [r5, #192]	; 0xc0
   1db20:	tst	r3, #1
   1db24:	beq	1db48 <readstat_parse_dta+0x1608>
   1db28:	ldrb	r3, [sp, #100]	; 0x64
   1db2c:	lsl	r3, r3, #24
   1db30:	ldr	r0, [sp, #96]	; 0x60
   1db34:	orr	r0, r3, r0, lsr #8
   1db38:	bl	3db4 <byteswap4@plt>
   1db3c:	str	r0, [sp, #148]	; 0x94
   1db40:	mov	sl, r7
   1db44:	b	1d9dc <readstat_parse_dta+0x149c>
   1db48:	ldrb	r0, [sp, #100]	; 0x64
   1db4c:	lsl	r0, r0, #24
   1db50:	ldr	r3, [sp, #96]	; 0x60
   1db54:	orr	r0, r0, r3, lsr #8
   1db58:	b	1db3c <readstat_parse_dta+0x15fc>
   1db5c:	mov	sl, #3
   1db60:	cmp	sl, #0
   1db64:	bne	1c5a0 <readstat_parse_dta+0x60>
   1db68:	ldr	r3, [r5, #280]	; 0x118
   1db6c:	ldr	r2, [r5, #256]	; 0x100
   1db70:	cmp	r2, #0
   1db74:	beq	1e238 <readstat_parse_dta+0x1cf8>
   1db78:	ldr	r6, [r3, #8]
   1db7c:	ldr	r2, [r3, #20]
   1db80:	mov	r1, #0
   1db84:	ldr	r0, [r5, #120]	; 0x78
   1db88:	blx	r6
   1db8c:	cmn	r0, #1
   1db90:	bne	1dc20 <readstat_parse_dta+0x16e0>
   1db94:	ldr	r3, [r5, #264]	; 0x108
   1db98:	cmp	r3, #0
   1db9c:	moveq	sl, #15
   1dba0:	beq	1c5a0 <readstat_parse_dta+0x60>
   1dba4:	add	r6, r5, #288	; 0x120
   1dba8:	ldrd	r2, [r5, #120]	; 0x78
   1dbac:	strd	r2, [sp]
   1dbb0:	ldr	r2, [pc, #-1492]	; 1d5e4 <readstat_parse_dta+0x10a4>
   1dbb4:	add	r2, pc, r2
   1dbb8:	mov	r1, #256	; 0x100
   1dbbc:	mov	r0, r6
   1dbc0:	bl	42ac <snprintf@plt>
   1dbc4:	ldr	r3, [r5, #264]	; 0x108
   1dbc8:	ldr	r1, [r5, #276]	; 0x114
   1dbcc:	mov	r0, r6
   1dbd0:	blx	r3
   1dbd4:	mov	sl, #15
   1dbd8:	b	1c5a0 <readstat_parse_dta+0x60>
   1dbdc:	mov	sl, #3
   1dbe0:	b	1db60 <readstat_parse_dta+0x1620>
   1dbe4:	mov	r2, #3
   1dbe8:	ldr	r1, [pc, #-1544]	; 1d5e8 <readstat_parse_dta+0x10a8>
   1dbec:	add	r1, pc, r1
   1dbf0:	add	r0, sp, #72	; 0x48
   1dbf4:	bl	3fc4 <memcmp@plt>
   1dbf8:	cmp	r0, #0
   1dbfc:	movne	sl, #5
   1dc00:	bne	1c5a0 <readstat_parse_dta+0x60>
   1dc04:	ldr	r1, [pc, #-1568]	; 1d5ec <readstat_parse_dta+0x10ac>
   1dc08:	add	r1, pc, r1
   1dc0c:	mov	r0, r5
   1dc10:	bl	1bb90 <dta_read_tag>
   1dc14:	subs	sl, r0, #0
   1dc18:	beq	1db68 <readstat_parse_dta+0x1628>
   1dc1c:	b	1c5a0 <readstat_parse_dta+0x60>
   1dc20:	ldr	r1, [pc, #-1592]	; 1d5f0 <readstat_parse_dta+0x10b0>
   1dc24:	add	r1, pc, r1
   1dc28:	mov	r0, r5
   1dc2c:	bl	1bb90 <dta_read_tag>
   1dc30:	subs	sl, r0, #0
   1dc34:	bne	1c5a0 <readstat_parse_dta+0x60>
   1dc38:	mov	r0, r5
   1dc3c:	bl	1bb18 <dta_update_progress>
   1dc40:	subs	sl, r0, #0
   1dc44:	bne	1c5a0 <readstat_parse_dta+0x60>
   1dc48:	ldr	r7, [r5, #280]	; 0x118
   1dc4c:	ldr	r0, [r5, #160]	; 0xa0
   1dc50:	cmp	r0, #0
   1dc54:	moveq	r6, #0
   1dc58:	beq	1dc6c <readstat_parse_dta+0x172c>
   1dc5c:	bl	4258 <readstat_malloc@plt>
   1dc60:	subs	r6, r0, #0
   1dc64:	moveq	sl, #3
   1dc68:	beq	1c5a0 <readstat_parse_dta+0x60>
   1dc6c:	ldrd	r0, [r5, #176]	; 0xb0
   1dc70:	orrs	r3, r0, r1
   1dc74:	bne	1dcd8 <readstat_parse_dta+0x1798>
   1dc78:	mov	fp, #0
   1dc7c:	ldrd	r0, [r5, #168]	; 0xa8
   1dc80:	asr	r3, fp, #31
   1dc84:	cmp	fp, r0
   1dc88:	sbcs	r3, r3, r1
   1dc8c:	blt	1dd08 <readstat_parse_dta+0x17c8>
   1dc90:	ldrd	r2, [r5, #152]	; 0x98
   1dc94:	ldrd	r8, [r5, #176]	; 0xb0
   1dc98:	subs	r2, r2, r8
   1dc9c:	sbc	r3, r3, r9
   1dca0:	cmp	r0, r2
   1dca4:	sbcs	ip, r1, r3
   1dca8:	bge	1e208 <readstat_parse_dta+0x1cc8>
   1dcac:	subs	r0, r2, r0
   1dcb0:	ldr	ip, [r5, #160]	; 0xa0
   1dcb4:	ldr	r3, [r7, #8]
   1dcb8:	ldr	r2, [r7, #20]
   1dcbc:	mov	r1, #1
   1dcc0:	mul	r0, ip, r0
   1dcc4:	blx	r3
   1dcc8:	cmn	r0, #1
   1dccc:	bne	1e208 <readstat_parse_dta+0x1cc8>
   1dcd0:	mov	sl, #15
   1dcd4:	b	1dcfc <readstat_parse_dta+0x17bc>
   1dcd8:	ldr	ip, [r5, #160]	; 0xa0
   1dcdc:	ldr	r3, [r7, #8]
   1dce0:	ldr	r2, [r7, #20]
   1dce4:	mov	r1, #1
   1dce8:	mul	r0, ip, r0
   1dcec:	blx	r3
   1dcf0:	cmn	r0, #1
   1dcf4:	bne	1dc78 <readstat_parse_dta+0x1738>
   1dcf8:	mov	sl, #15
   1dcfc:	cmp	r6, #0
   1dd00:	bne	1e210 <readstat_parse_dta+0x1cd0>
   1dd04:	b	1c5a0 <readstat_parse_dta+0x60>
   1dd08:	ldr	r3, [r7, #12]
   1dd0c:	ldr	r2, [r7, #20]
   1dd10:	ldr	r1, [r5, #160]	; 0xa0
   1dd14:	mov	r0, r6
   1dd18:	blx	r3
   1dd1c:	ldr	r3, [r5, #160]	; 0xa0
   1dd20:	cmp	r0, r3
   1dd24:	bne	1e2a0 <readstat_parse_dta+0x1d60>
   1dd28:	mov	r1, r5
   1dd2c:	mov	r0, r6
   1dd30:	bl	1bd24 <dta_handle_row>
   1dd34:	cmp	r0, #0
   1dd38:	bne	1e2a8 <readstat_parse_dta+0x1d68>
   1dd3c:	ldrd	r2, [r5, #184]	; 0xb8
   1dd40:	adds	r2, r2, #1
   1dd44:	adc	r3, r3, #0
   1dd48:	strd	r2, [r5, #184]	; 0xb8
   1dd4c:	mov	r0, r5
   1dd50:	bl	1bb18 <dta_update_progress>
   1dd54:	cmp	r0, #0
   1dd58:	bne	1e2b0 <readstat_parse_dta+0x1d70>
   1dd5c:	add	fp, fp, #1
   1dd60:	b	1dc7c <readstat_parse_dta+0x173c>
   1dd64:	ldr	r1, [pc, #-1912]	; 1d5f4 <readstat_parse_dta+0x10b4>
   1dd68:	add	r1, pc, r1
   1dd6c:	mov	r0, r5
   1dd70:	bl	1bb90 <dta_read_tag>
   1dd74:	subs	sl, r0, #0
   1dd78:	bne	1c5a0 <readstat_parse_dta+0x60>
   1dd7c:	ldr	r3, [r5, #260]	; 0x104
   1dd80:	cmp	r3, #0
   1dd84:	beq	1c5a0 <readstat_parse_dta+0x60>
   1dd88:	mov	r3, #0
   1dd8c:	str	r3, [sp, #24]
   1dd90:	mov	fp, r3
   1dd94:	ldr	r3, [pc, #-1956]	; 1d5f8 <readstat_parse_dta+0x10b8>
   1dd98:	add	r3, pc, r3
   1dd9c:	str	r3, [sp, #52]	; 0x34
   1dda0:	add	r3, sp, #128	; 0x80
   1dda4:	str	r3, [sp, #28]
   1dda8:	ldr	r3, [pc, #-1972]	; 1d5fc <readstat_parse_dta+0x10bc>
   1ddac:	add	r3, pc, r3
   1ddb0:	str	r3, [sp, #56]	; 0x38
   1ddb4:	add	r3, sp, #88	; 0x58
   1ddb8:	str	r3, [sp, #60]	; 0x3c
   1ddbc:	str	r3, [sp, #32]
   1ddc0:	str	r4, [sp, #20]
   1ddc4:	ldr	r3, [r5, #100]	; 0x64
   1ddc8:	cmp	r3, #2
   1ddcc:	bne	1de94 <readstat_parse_dta+0x1954>
   1ddd0:	ldr	r3, [r7, #12]
   1ddd4:	ldr	r2, [r7, #20]
   1ddd8:	mov	r1, #2
   1dddc:	ldr	r0, [sp, #28]
   1dde0:	blx	r3
   1dde4:	cmp	r0, #1
   1dde8:	bls	1e17c <readstat_parse_dta+0x1c3c>
   1ddec:	ldrsh	r0, [sp, #128]	; 0x80
   1ddf0:	mov	r8, r0
   1ddf4:	ldrb	r3, [r5, #192]	; 0xc0
   1ddf8:	tst	r3, #1
   1ddfc:	beq	1de0c <readstat_parse_dta+0x18cc>
   1de00:	uxth	r0, r0
   1de04:	bl	3ec8 <byteswap2@plt>
   1de08:	mov	r8, r0
   1de0c:	lsr	r6, r8, #3
   1de10:	ldr	r3, [r7, #12]
   1de14:	ldr	r2, [r7, #20]
   1de18:	ldr	r1, [r5, #104]	; 0x68
   1de1c:	ldr	r0, [sp, #28]
   1de20:	blx	r3
   1de24:	ldr	r3, [r5, #104]	; 0x68
   1de28:	cmp	r0, r3
   1de2c:	bcc	1e194 <readstat_parse_dta+0x1c54>
   1de30:	ldr	r3, [r7, #8]
   1de34:	ldr	r2, [r7, #20]
   1de38:	mov	r1, #1
   1de3c:	ldr	r0, [r5, #108]	; 0x6c
   1de40:	blx	r3
   1de44:	cmn	r0, #1
   1de48:	beq	1e19c <readstat_parse_dta+0x1c5c>
   1de4c:	mov	r1, r8
   1de50:	mov	r0, fp
   1de54:	bl	430c <readstat_realloc@plt>
   1de58:	subs	fp, r0, #0
   1de5c:	beq	1e14c <readstat_parse_dta+0x1c0c>
   1de60:	ldr	r3, [r7, #12]
   1de64:	ldr	r2, [r7, #20]
   1de68:	mov	r1, r8
   1de6c:	mov	r0, fp
   1de70:	blx	r3
   1de74:	cmp	r8, r0
   1de78:	bhi	1e1a4 <readstat_parse_dta+0x1c64>
   1de7c:	ldr	r3, [r5, #100]	; 0x64
   1de80:	cmp	r3, #2
   1de84:	bne	1dfa8 <readstat_parse_dta+0x1a68>
   1de88:	mov	r4, #0
   1de8c:	add	r8, sp, #80	; 0x50
   1de90:	b	1df68 <readstat_parse_dta+0x1a28>
   1de94:	ldr	r1, [sp, #52]	; 0x34
   1de98:	mov	r0, r5
   1de9c:	bl	1bb90 <dta_read_tag>
   1dea0:	cmp	r0, #0
   1dea4:	bne	1e184 <readstat_parse_dta+0x1c44>
   1dea8:	ldr	r3, [r7, #12]
   1deac:	ldr	r2, [r7, #20]
   1deb0:	mov	r1, #4
   1deb4:	ldr	r0, [sp, #28]
   1deb8:	blx	r3
   1debc:	cmp	r0, #3
   1dec0:	bls	1e18c <readstat_parse_dta+0x1c4c>
   1dec4:	ldr	r8, [sp, #128]	; 0x80
   1dec8:	ldrb	r3, [r5, #192]	; 0xc0
   1decc:	tst	r3, #1
   1ded0:	beq	1dee0 <readstat_parse_dta+0x19a0>
   1ded4:	mov	r0, r8
   1ded8:	bl	3db4 <byteswap4@plt>
   1dedc:	mov	r8, r0
   1dee0:	mov	r6, #0
   1dee4:	b	1de10 <readstat_parse_dta+0x18d0>
   1dee8:	mov	r3, #0
   1deec:	str	r3, [sp, #76]	; 0x4c
   1def0:	str	r3, [sp, #84]	; 0x54
   1def4:	str	r4, [sp, #72]	; 0x48
   1def8:	mov	r3, #3
   1defc:	str	r3, [sp, #80]	; 0x50
   1df00:	ldr	r3, [r5, #236]	; 0xec
   1df04:	str	r3, [sp]
   1df08:	mov	r3, #8
   1df0c:	add	r2, fp, r4, lsl #3
   1df10:	mov	r1, #33	; 0x21
   1df14:	ldr	r0, [sp, #32]
   1df18:	bl	4264 <readstat_convert@plt>
   1df1c:	cmp	r0, #0
   1df20:	bne	1e164 <readstat_parse_dta+0x1c24>
   1df24:	ldrb	r3, [sp, #88]	; 0x58
   1df28:	cmp	r3, #0
   1df2c:	beq	1df64 <readstat_parse_dta+0x1a24>
   1df30:	ldr	r3, [r5, #276]	; 0x114
   1df34:	str	r3, [sp, #12]
   1df38:	ldr	r3, [sp, #32]
   1df3c:	str	r3, [sp, #8]
   1df40:	ldm	r8, {r0, r1}
   1df44:	stm	sp, {r0, r1}
   1df48:	add	r3, sp, #72	; 0x48
   1df4c:	ldm	r3, {r2, r3}
   1df50:	ldr	r1, [r5, #260]	; 0x104
   1df54:	ldr	r0, [sp, #28]
   1df58:	blx	r1
   1df5c:	cmp	r0, #0
   1df60:	bne	1df74 <readstat_parse_dta+0x1a34>
   1df64:	add	r4, r4, #1
   1df68:	cmp	r4, r6
   1df6c:	bne	1dee8 <readstat_parse_dta+0x19a8>
   1df70:	b	1ddc4 <readstat_parse_dta+0x1884>
   1df74:	ldr	r4, [sp, #20]
   1df78:	mov	r0, #4
   1df7c:	mov	sl, r0
   1df80:	cmp	fp, #0
   1df84:	beq	1df90 <readstat_parse_dta+0x1a50>
   1df88:	mov	r0, fp
   1df8c:	bl	3ee0 <free@plt>
   1df90:	ldr	r3, [sp, #24]
   1df94:	cmp	r3, #0
   1df98:	beq	1c5a0 <readstat_parse_dta+0x60>
   1df9c:	mov	r0, r3
   1dfa0:	bl	3ee0 <free@plt>
   1dfa4:	b	1c5a0 <readstat_parse_dta+0x60>
   1dfa8:	cmp	r8, #8
   1dfac:	bls	1ddc4 <readstat_parse_dta+0x1884>
   1dfb0:	ldr	r1, [sp, #56]	; 0x38
   1dfb4:	mov	r0, r5
   1dfb8:	bl	1bb90 <dta_read_tag>
   1dfbc:	cmp	r0, #0
   1dfc0:	bne	1e16c <readstat_parse_dta+0x1c2c>
   1dfc4:	ldr	r6, [fp]
   1dfc8:	ldr	r4, [fp, #4]
   1dfcc:	ldrb	r3, [r5, #192]	; 0xc0
   1dfd0:	tst	r3, #1
   1dfd4:	beq	1dff0 <readstat_parse_dta+0x1ab0>
   1dfd8:	mov	r0, r6
   1dfdc:	bl	3db4 <byteswap4@plt>
   1dfe0:	mov	r6, r0
   1dfe4:	mov	r0, r4
   1dfe8:	bl	3db4 <byteswap4@plt>
   1dfec:	mov	r4, r0
   1dff0:	sub	r8, r8, #8
   1dff4:	cmp	r8, r4
   1dff8:	bcc	1e1ac <readstat_parse_dta+0x1c6c>
   1dffc:	sub	r8, r8, r4
   1e000:	cmp	r6, r8, lsr #3
   1e004:	bhi	1e1b4 <readstat_parse_dta+0x1c74>
   1e008:	add	r3, r6, #2
   1e00c:	lsl	r3, r3, #2
   1e010:	str	r3, [sp, #36]	; 0x24
   1e014:	add	r3, r6, #1
   1e018:	lsl	r3, r3, #3
   1e01c:	str	r3, [sp, #40]	; 0x28
   1e020:	lsl	r3, r4, #2
   1e024:	ldr	r2, [pc, #-2604]	; 1d600 <readstat_parse_dta+0x10c0>
   1e028:	ldr	r1, [pc, #-2604]	; 1d604 <readstat_parse_dta+0x10c4>
   1e02c:	cmp	r4, r1
   1e030:	addls	r2, r3, #1
   1e034:	str	r2, [sp, #44]	; 0x2c
   1e038:	mov	r1, r2
   1e03c:	ldr	r0, [sp, #24]
   1e040:	bl	4018 <realloc@plt>
   1e044:	subs	r3, r0, #0
   1e048:	str	r3, [sp, #24]
   1e04c:	beq	1e158 <readstat_parse_dta+0x1c18>
   1e050:	ldrb	r3, [r5, #192]	; 0xc0
   1e054:	tst	r3, #1
   1e058:	addne	r9, fp, #4
   1e05c:	movne	r8, #0
   1e060:	bne	1e128 <readstat_parse_dta+0x1be8>
   1e064:	add	r9, fp, #4
   1e068:	mov	r8, #0
   1e06c:	add	r3, sp, #96	; 0x60
   1e070:	str	r3, [sp, #48]	; 0x30
   1e074:	cmp	r6, r8
   1e078:	beq	1ddc4 <readstat_parse_dta+0x1884>
   1e07c:	ldr	r3, [r9, #4]!
   1e080:	cmp	r4, r3
   1e084:	bls	1e134 <readstat_parse_dta+0x1bf4>
   1e088:	ldr	r3, [sp, #36]	; 0x24
   1e08c:	add	r2, r3, r8, lsl #2
   1e090:	add	r2, fp, r2
   1e094:	mov	r1, r5
   1e098:	ldr	r0, [sp, #32]
   1e09c:	bl	1bc6c <dta_interpret_int32_bytes>
   1e0a0:	ldr	r2, [r9]
   1e0a4:	sub	r3, r4, r2
   1e0a8:	ldr	r1, [sp, #40]	; 0x28
   1e0ac:	add	r2, r1, r2
   1e0b0:	ldr	r1, [r5, #236]	; 0xec
   1e0b4:	str	r1, [sp]
   1e0b8:	cmp	r3, #32000	; 0x7d00
   1e0bc:	movcs	r3, #32000	; 0x7d00
   1e0c0:	add	r2, fp, r2
   1e0c4:	ldr	r1, [sp, #44]	; 0x2c
   1e0c8:	ldr	r0, [sp, #24]
   1e0cc:	bl	4264 <readstat_convert@plt>
   1e0d0:	cmp	r0, #0
   1e0d4:	bne	1e174 <readstat_parse_dta+0x1c34>
   1e0d8:	ldr	r3, [r5, #276]	; 0x114
   1e0dc:	str	r3, [sp, #12]
   1e0e0:	ldr	r3, [sp, #24]
   1e0e4:	str	r3, [sp, #8]
   1e0e8:	ldr	r3, [sp, #48]	; 0x30
   1e0ec:	ldm	r3, {r0, r1}
   1e0f0:	stm	sp, {r0, r1}
   1e0f4:	ldr	r3, [sp, #60]	; 0x3c
   1e0f8:	ldm	r3, {r2, r3}
   1e0fc:	ldr	r1, [r5, #260]	; 0x104
   1e100:	ldr	r0, [sp, #28]
   1e104:	blx	r1
   1e108:	cmp	r0, #0
   1e10c:	bne	1e140 <readstat_parse_dta+0x1c00>
   1e110:	add	r8, r8, #1
   1e114:	b	1e074 <readstat_parse_dta+0x1b34>
   1e118:	ldr	r0, [r9, #4]
   1e11c:	bl	3db4 <byteswap4@plt>
   1e120:	str	r0, [r9, #4]!
   1e124:	add	r8, r8, #1
   1e128:	cmp	r6, r8
   1e12c:	bne	1e118 <readstat_parse_dta+0x1bd8>
   1e130:	b	1e064 <readstat_parse_dta+0x1b24>
   1e134:	ldr	r4, [sp, #20]
   1e138:	mov	r0, #5
   1e13c:	b	1df7c <readstat_parse_dta+0x1a3c>
   1e140:	ldr	r4, [sp, #20]
   1e144:	mov	r0, #4
   1e148:	b	1df7c <readstat_parse_dta+0x1a3c>
   1e14c:	ldr	r4, [sp, #20]
   1e150:	mov	r0, #3
   1e154:	b	1df7c <readstat_parse_dta+0x1a3c>
   1e158:	ldr	r4, [sp, #20]
   1e15c:	mov	r0, #3
   1e160:	b	1df7c <readstat_parse_dta+0x1a3c>
   1e164:	ldr	r4, [sp, #20]
   1e168:	b	1df7c <readstat_parse_dta+0x1a3c>
   1e16c:	ldr	r4, [sp, #20]
   1e170:	b	1df7c <readstat_parse_dta+0x1a3c>
   1e174:	ldr	r4, [sp, #20]
   1e178:	b	1df7c <readstat_parse_dta+0x1a3c>
   1e17c:	ldr	r4, [sp, #20]
   1e180:	b	1df80 <readstat_parse_dta+0x1a40>
   1e184:	ldr	r4, [sp, #20]
   1e188:	b	1df80 <readstat_parse_dta+0x1a40>
   1e18c:	ldr	r4, [sp, #20]
   1e190:	b	1df80 <readstat_parse_dta+0x1a40>
   1e194:	ldr	r4, [sp, #20]
   1e198:	b	1df80 <readstat_parse_dta+0x1a40>
   1e19c:	ldr	r4, [sp, #20]
   1e1a0:	b	1df80 <readstat_parse_dta+0x1a40>
   1e1a4:	ldr	r4, [sp, #20]
   1e1a8:	b	1df80 <readstat_parse_dta+0x1a40>
   1e1ac:	ldr	r4, [sp, #20]
   1e1b0:	b	1df80 <readstat_parse_dta+0x1a40>
   1e1b4:	ldr	r4, [sp, #20]
   1e1b8:	b	1df80 <readstat_parse_dta+0x1a40>
   1e1bc:	mov	sl, r0
   1e1c0:	b	1c5a0 <readstat_parse_dta+0x60>
   1e1c4:	cmp	r6, #0
   1e1c8:	bne	1d050 <readstat_parse_dta+0xb10>
   1e1cc:	b	1c5a0 <readstat_parse_dta+0x60>
   1e1d0:	ldr	r3, [pc, #-3024]	; 1d608 <readstat_parse_dta+0x10c8>
   1e1d4:	add	r3, pc, r3
   1e1d8:	str	r3, [sp]
   1e1dc:	mov	r3, r7
   1e1e0:	mov	r2, r6
   1e1e4:	ldr	r1, [pc, #-3040]	; 1d60c <readstat_parse_dta+0x10cc>
   1e1e8:	add	r1, pc, r1
   1e1ec:	mov	r0, r5
   1e1f0:	bl	1bc18 <dta_read_chunk>
   1e1f4:	subs	sl, r0, #0
   1e1f8:	bne	1d050 <readstat_parse_dta+0xb10>
   1e1fc:	b	1ccac <readstat_parse_dta+0x76c>
   1e200:	mov	sl, #2
   1e204:	b	1c5a0 <readstat_parse_dta+0x60>
   1e208:	cmp	r6, #0
   1e20c:	beq	1e220 <readstat_parse_dta+0x1ce0>
   1e210:	mov	r0, r6
   1e214:	bl	3ee0 <free@plt>
   1e218:	cmp	sl, #0
   1e21c:	bne	1c5a0 <readstat_parse_dta+0x60>
   1e220:	ldr	r1, [pc, #-3096]	; 1d610 <readstat_parse_dta+0x10d0>
   1e224:	add	r1, pc, r1
   1e228:	mov	r0, r5
   1e22c:	bl	1bb90 <dta_read_tag>
   1e230:	subs	sl, r0, #0
   1e234:	bne	1c5a0 <readstat_parse_dta+0x60>
   1e238:	ldr	r7, [r5, #280]	; 0x118
   1e23c:	ldr	r3, [r7, #8]
   1e240:	ldr	r2, [r7, #20]
   1e244:	mov	r1, #0
   1e248:	ldr	r0, [r5, #136]	; 0x88
   1e24c:	blx	r3
   1e250:	cmn	r0, #1
   1e254:	bne	1dd64 <readstat_parse_dta+0x1824>
   1e258:	ldr	r3, [r5, #264]	; 0x108
   1e25c:	cmp	r3, #0
   1e260:	moveq	sl, #15
   1e264:	beq	1c5a0 <readstat_parse_dta+0x60>
   1e268:	add	r6, r5, #288	; 0x120
   1e26c:	ldrd	r2, [r5, #136]	; 0x88
   1e270:	strd	r2, [sp]
   1e274:	ldr	r2, [pc, #-3176]	; 1d614 <readstat_parse_dta+0x10d4>
   1e278:	add	r2, pc, r2
   1e27c:	mov	r1, #256	; 0x100
   1e280:	mov	r0, r6
   1e284:	bl	42ac <snprintf@plt>
   1e288:	ldr	r3, [r5, #264]	; 0x108
   1e28c:	ldr	r1, [r5, #276]	; 0x114
   1e290:	mov	r0, r6
   1e294:	blx	r3
   1e298:	mov	sl, #15
   1e29c:	b	1c5a0 <readstat_parse_dta+0x60>
   1e2a0:	mov	sl, #2
   1e2a4:	b	1dcfc <readstat_parse_dta+0x17bc>
   1e2a8:	mov	sl, r0
   1e2ac:	b	1dcfc <readstat_parse_dta+0x17bc>
   1e2b0:	mov	sl, r0
   1e2b4:	b	1dcfc <readstat_parse_dta+0x17bc>

0001e2b8 <dta_typecode_for_variable>:
   1e2b8:	cmp	r1, #111	; 0x6f
   1e2bc:	beq	1e2f8 <dta_typecode_for_variable+0x40>
   1e2c0:	cmp	r1, #117	; 0x75
   1e2c4:	beq	1e370 <dta_typecode_for_variable+0xb8>
   1e2c8:	ldr	r1, [r0, #1596]	; 0x63c
   1e2cc:	ldr	r3, [r0]
   1e2d0:	cmp	r3, #6
   1e2d4:	addls	pc, pc, r3, lsl #2
   1e2d8:	b	1e434 <dta_typecode_for_variable+0x17c>
   1e2dc:	b	1e428 <dta_typecode_for_variable+0x170>
   1e2e0:	b	1e3f0 <dta_typecode_for_variable+0x138>
   1e2e4:	b	1e408 <dta_typecode_for_variable+0x150>
   1e2e8:	b	1e410 <dta_typecode_for_variable+0x158>
   1e2ec:	b	1e418 <dta_typecode_for_variable+0x160>
   1e2f0:	b	1e420 <dta_typecode_for_variable+0x168>
   1e2f4:	b	1e454 <dta_typecode_for_variable+0x19c>
   1e2f8:	ldr	r1, [r0, #1596]	; 0x63c
   1e2fc:	ldr	r3, [r0]
   1e300:	cmp	r3, #6
   1e304:	addls	pc, pc, r3, lsl #2
   1e308:	b	1e368 <dta_typecode_for_variable+0xb0>
   1e30c:	b	1e360 <dta_typecode_for_variable+0xa8>
   1e310:	b	1e328 <dta_typecode_for_variable+0x70>
   1e314:	b	1e340 <dta_typecode_for_variable+0x88>
   1e318:	b	1e348 <dta_typecode_for_variable+0x90>
   1e31c:	b	1e350 <dta_typecode_for_variable+0x98>
   1e320:	b	1e358 <dta_typecode_for_variable+0xa0>
   1e324:	b	1e43c <dta_typecode_for_variable+0x184>
   1e328:	mov	r3, #251	; 0xfb
   1e32c:	cmp	r2, #0
   1e330:	beq	1e444 <dta_typecode_for_variable+0x18c>
   1e334:	strh	r3, [r2]
   1e338:	mov	r0, #0
   1e33c:	bx	lr
   1e340:	mov	r3, #252	; 0xfc
   1e344:	b	1e32c <dta_typecode_for_variable+0x74>
   1e348:	mov	r3, #253	; 0xfd
   1e34c:	b	1e32c <dta_typecode_for_variable+0x74>
   1e350:	mov	r3, #254	; 0xfe
   1e354:	b	1e32c <dta_typecode_for_variable+0x74>
   1e358:	mov	r3, #255	; 0xff
   1e35c:	b	1e32c <dta_typecode_for_variable+0x74>
   1e360:	uxth	r3, r1
   1e364:	b	1e32c <dta_typecode_for_variable+0x74>
   1e368:	mov	r3, #0
   1e36c:	b	1e32c <dta_typecode_for_variable+0x74>
   1e370:	ldr	r1, [r0, #1596]	; 0x63c
   1e374:	ldr	r3, [r0]
   1e378:	cmp	r3, #6
   1e37c:	addls	pc, pc, r3, lsl #2
   1e380:	b	1e3e8 <dta_typecode_for_variable+0x130>
   1e384:	b	1e3d8 <dta_typecode_for_variable+0x120>
   1e388:	b	1e3a0 <dta_typecode_for_variable+0xe8>
   1e38c:	b	1e3b8 <dta_typecode_for_variable+0x100>
   1e390:	b	1e3c0 <dta_typecode_for_variable+0x108>
   1e394:	b	1e3c8 <dta_typecode_for_variable+0x110>
   1e398:	b	1e3d0 <dta_typecode_for_variable+0x118>
   1e39c:	b	1e3e0 <dta_typecode_for_variable+0x128>
   1e3a0:	ldr	r3, [pc, #188]	; 1e464 <dta_typecode_for_variable+0x1ac>
   1e3a4:	cmp	r2, #0
   1e3a8:	beq	1e44c <dta_typecode_for_variable+0x194>
   1e3ac:	strh	r3, [r2]
   1e3b0:	mov	r0, #0
   1e3b4:	bx	lr
   1e3b8:	ldr	r3, [pc, #168]	; 1e468 <dta_typecode_for_variable+0x1b0>
   1e3bc:	b	1e3a4 <dta_typecode_for_variable+0xec>
   1e3c0:	ldr	r3, [pc, #164]	; 1e46c <dta_typecode_for_variable+0x1b4>
   1e3c4:	b	1e3a4 <dta_typecode_for_variable+0xec>
   1e3c8:	ldr	r3, [pc, #160]	; 1e470 <dta_typecode_for_variable+0x1b8>
   1e3cc:	b	1e3a4 <dta_typecode_for_variable+0xec>
   1e3d0:	ldr	r3, [pc, #156]	; 1e474 <dta_typecode_for_variable+0x1bc>
   1e3d4:	b	1e3a4 <dta_typecode_for_variable+0xec>
   1e3d8:	uxth	r3, r1
   1e3dc:	b	1e3a4 <dta_typecode_for_variable+0xec>
   1e3e0:	mov	r3, #32768	; 0x8000
   1e3e4:	b	1e3a4 <dta_typecode_for_variable+0xec>
   1e3e8:	mov	r3, #0
   1e3ec:	b	1e3a4 <dta_typecode_for_variable+0xec>
   1e3f0:	mov	r3, #98	; 0x62
   1e3f4:	cmp	r2, #0
   1e3f8:	beq	1e45c <dta_typecode_for_variable+0x1a4>
   1e3fc:	strh	r3, [r2]
   1e400:	mov	r0, #0
   1e404:	bx	lr
   1e408:	mov	r3, #105	; 0x69
   1e40c:	b	1e3f4 <dta_typecode_for_variable+0x13c>
   1e410:	mov	r3, #108	; 0x6c
   1e414:	b	1e3f4 <dta_typecode_for_variable+0x13c>
   1e418:	mov	r3, #102	; 0x66
   1e41c:	b	1e3f4 <dta_typecode_for_variable+0x13c>
   1e420:	mov	r3, #100	; 0x64
   1e424:	b	1e3f4 <dta_typecode_for_variable+0x13c>
   1e428:	add	r3, r1, #127	; 0x7f
   1e42c:	uxth	r3, r3
   1e430:	b	1e3f4 <dta_typecode_for_variable+0x13c>
   1e434:	mov	r3, #0
   1e438:	b	1e3f4 <dta_typecode_for_variable+0x13c>
   1e43c:	mov	r0, #33	; 0x21
   1e440:	bx	lr
   1e444:	mov	r0, #0
   1e448:	bx	lr
   1e44c:	mov	r0, #0
   1e450:	bx	lr
   1e454:	mov	r0, #33	; 0x21
   1e458:	bx	lr
   1e45c:	mov	r0, #0
   1e460:	bx	lr
   1e464:	.word	0x0000fffa
   1e468:	.word	0x0000fff9
   1e46c:	.word	0x0000fff8
   1e470:	.word	0x0000fff7
   1e474:	.word	0x0000fff6

0001e478 <dta_compare_value_labels>:
   1e478:	ldrb	r3, [r0, #12]
   1e47c:	cmp	r3, #0
   1e480:	beq	1e498 <dta_compare_value_labels+0x20>
   1e484:	ldrb	r0, [r1, #12]
   1e488:	cmp	r0, #0
   1e48c:	beq	1e4b4 <dta_compare_value_labels+0x3c>
   1e490:	sub	r0, r3, r0
   1e494:	bx	lr
   1e498:	ldrb	r3, [r1, #12]
   1e49c:	cmp	r3, #0
   1e4a0:	bne	1e4bc <dta_compare_value_labels+0x44>
   1e4a4:	ldr	r0, [r0, #8]
   1e4a8:	ldr	r3, [r1, #8]
   1e4ac:	sub	r0, r0, r3
   1e4b0:	bx	lr
   1e4b4:	mov	r0, #1
   1e4b8:	bx	lr
   1e4bc:	mvn	r0, #0
   1e4c0:	bx	lr

0001e4c4 <dta_numeric_variable_width>:
   1e4c4:	cmp	r0, #5
   1e4c8:	beq	1e4f0 <dta_numeric_variable_width+0x2c>
   1e4cc:	sub	r3, r0, #3
   1e4d0:	cmp	r3, #1
   1e4d4:	bls	1e4f8 <dta_numeric_variable_width+0x34>
   1e4d8:	cmp	r0, #2
   1e4dc:	beq	1e500 <dta_numeric_variable_width+0x3c>
   1e4e0:	cmp	r0, #1
   1e4e4:	movne	r0, #0
   1e4e8:	moveq	r0, #1
   1e4ec:	bx	lr
   1e4f0:	mov	r0, #8
   1e4f4:	bx	lr
   1e4f8:	mov	r0, #4
   1e4fc:	bx	lr
   1e500:	mov	r0, #2
   1e504:	bx	lr

0001e508 <dta_111_variable_width>:
   1e508:	cmp	r0, #0
   1e50c:	bne	1e524 <dta_111_variable_width+0x1c>
   1e510:	sub	r0, r1, #1
   1e514:	cmp	r0, #243	; 0xf3
   1e518:	movls	r0, r1
   1e51c:	movhi	r0, #244	; 0xf4
   1e520:	bx	lr
   1e524:	push	{r4, lr}
   1e528:	bl	1e4c4 <dta_numeric_variable_width>
   1e52c:	pop	{r4, pc}

0001e530 <dta_117_variable_width>:
   1e530:	cmp	r0, #0
   1e534:	bne	1e550 <dta_117_variable_width+0x20>
   1e538:	sub	r2, r1, #1
   1e53c:	ldr	r0, [pc, #40]	; 1e56c <dta_117_variable_width+0x3c>
   1e540:	ldr	r3, [pc, #40]	; 1e570 <dta_117_variable_width+0x40>
   1e544:	cmp	r2, r3
   1e548:	movls	r0, r1
   1e54c:	bx	lr
   1e550:	cmp	r0, #6
   1e554:	beq	1e564 <dta_117_variable_width+0x34>
   1e558:	push	{r4, lr}
   1e55c:	bl	1e4c4 <dta_numeric_variable_width>
   1e560:	pop	{r4, pc}
   1e564:	mov	r0, #8
   1e568:	bx	lr
   1e56c:	.word	0x000007fd
   1e570:	.word	0x000007fc

0001e574 <dta_old_variable_width>:
   1e574:	cmp	r0, #0
   1e578:	bne	1e590 <dta_old_variable_width+0x1c>
   1e57c:	sub	r0, r1, #1
   1e580:	cmp	r0, #127	; 0x7f
   1e584:	movls	r0, r1
   1e588:	movhi	r0, #128	; 0x80
   1e58c:	bx	lr
   1e590:	push	{r4, lr}
   1e594:	bl	1e4c4 <dta_numeric_variable_width>
   1e598:	pop	{r4, pc}

0001e59c <dta_113_write_int8>:
   1e59c:	cmp	r2, #100	; 0x64
   1e5a0:	strble	r2, [r0]
   1e5a4:	movle	r0, #0
   1e5a8:	movgt	r0, #20
   1e5ac:	bx	lr

0001e5b0 <dta_113_write_int16>:
   1e5b0:	ldr	r3, [pc, #16]	; 1e5c8 <dta_113_write_int16+0x18>
   1e5b4:	cmp	r2, r3
   1e5b8:	strhle	r2, [r0]
   1e5bc:	movle	r0, #0
   1e5c0:	movgt	r0, #20
   1e5c4:	bx	lr
   1e5c8:	.word	0x00007fe4

0001e5cc <dta_113_write_int32>:
   1e5cc:	cmn	r2, #-2147483620	; 0x8000001c
   1e5d0:	strle	r2, [r0]
   1e5d4:	movle	r0, #0
   1e5d8:	movgt	r0, #20
   1e5dc:	bx	lr

0001e5e0 <dta_117_write_string_ref>:
   1e5e0:	cmp	r2, #0
   1e5e4:	ldrne	r3, [r2, #8]
   1e5e8:	ldrne	r2, [r2]
   1e5ec:	strne	r2, [r0]
   1e5f0:	strne	r3, [r0, #4]
   1e5f4:	movne	r0, #0
   1e5f8:	moveq	r0, #34	; 0x22
   1e5fc:	bx	lr

0001e600 <dta_metadata_ok>:
   1e600:	ldr	r3, [r0, #16]
   1e604:	cmp	r3, #0
   1e608:	beq	1e614 <dta_metadata_ok+0x14>
   1e60c:	mov	r0, #6
   1e610:	bx	lr
   1e614:	ldr	r0, [r0, #8]
   1e618:	sub	r0, r0, #104	; 0x68
   1e61c:	cmp	r0, #15
   1e620:	movhi	r0, #24
   1e624:	movls	r0, #0
   1e628:	bx	lr

0001e62c <dta_module_ctx_free>:
   1e62c:	push	{r4, lr}
   1e630:	bl	3e98 <dta_ctx_free@plt>
   1e634:	pop	{r4, pc}

0001e638 <dta_write_tag>:
   1e638:	ldrb	r3, [r1, #192]	; 0xc0
   1e63c:	tst	r3, #4
   1e640:	bne	1e64c <dta_write_tag+0x14>
   1e644:	mov	r0, #0
   1e648:	bx	lr
   1e64c:	push	{r4, lr}
   1e650:	mov	r1, r2
   1e654:	bl	4180 <readstat_write_string@plt>
   1e658:	pop	{r4, pc}

0001e65c <dta_write_chunk>:
   1e65c:	push	{r4, r5, r6, lr}
   1e660:	mov	r4, r0
   1e664:	mov	r6, r1
   1e668:	mov	r5, r3
   1e66c:	bl	1e638 <dta_write_tag>
   1e670:	cmp	r0, #0
   1e674:	popne	{r4, r5, r6, pc}
   1e678:	ldr	r2, [sp, #16]
   1e67c:	mov	r1, r5
   1e680:	mov	r0, r4
   1e684:	bl	4480 <readstat_write_bytes@plt>
   1e688:	cmp	r0, #0
   1e68c:	popne	{r4, r5, r6, pc}
   1e690:	ldr	r2, [sp, #20]
   1e694:	mov	r1, r6
   1e698:	mov	r0, r4
   1e69c:	bl	1e638 <dta_write_tag>
   1e6a0:	pop	{r4, r5, r6, pc}

0001e6a4 <dta_end_data>:
   1e6a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e6a8:	sub	sp, sp, #76	; 0x4c
   1e6ac:	ldr	r3, [r0, #308]	; 0x134
   1e6b0:	cmp	r3, #0
   1e6b4:	moveq	r5, #14
   1e6b8:	bne	1e6c8 <dta_end_data+0x24>
   1e6bc:	mov	r0, r5
   1e6c0:	add	sp, sp, #76	; 0x4c
   1e6c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e6c8:	mov	r4, r0
   1e6cc:	ldr	r8, [r0, #300]	; 0x12c
   1e6d0:	ldr	r2, [pc, #2056]	; 1eee0 <dta_end_data+0x83c>
   1e6d4:	add	r2, pc, r2
   1e6d8:	mov	r1, r8
   1e6dc:	bl	1e638 <dta_write_tag>
   1e6e0:	subs	r5, r0, #0
   1e6e4:	bne	1e6bc <dta_end_data+0x18>
   1e6e8:	ldrb	r3, [r8, #192]	; 0xc0
   1e6ec:	tst	r3, #4
   1e6f0:	bne	1e934 <dta_end_data+0x290>
   1e6f4:	ldr	r3, [r8, #100]	; 0x64
   1e6f8:	cmp	r3, #2
   1e6fc:	beq	1ea80 <dta_end_data+0x3dc>
   1e700:	ldr	r1, [r8, #104]	; 0x68
   1e704:	ldr	r3, [r8, #108]	; 0x6c
   1e708:	add	r1, r1, r3
   1e70c:	mov	r0, #1
   1e710:	bl	3d78 <calloc@plt>
   1e714:	str	r0, [sp, #4]
   1e718:	ldr	r2, [pc, #1988]	; 1eee4 <dta_end_data+0x840>
   1e71c:	add	r2, pc, r2
   1e720:	mov	r1, r8
   1e724:	mov	r0, r4
   1e728:	bl	1e638 <dta_write_tag>
   1e72c:	subs	r5, r0, #0
   1e730:	movne	r9, #0
   1e734:	bne	1e8ec <dta_end_data+0x248>
   1e738:	ldr	r3, [r4, #40]	; 0x28
   1e73c:	cmp	r3, #0
   1e740:	ble	1ee18 <dta_end_data+0x774>
   1e744:	mov	r9, #0
   1e748:	str	r9, [sp, #16]
   1e74c:	str	r9, [sp, #12]
   1e750:	mov	fp, r9
   1e754:	ldr	r3, [pc, #1932]	; 1eee8 <dta_end_data+0x844>
   1e758:	add	r3, pc, r3
   1e75c:	str	r3, [sp, #20]
   1e760:	add	r3, sp, #52	; 0x34
   1e764:	str	r3, [sp, #24]
   1e768:	ldr	r3, [pc, #1916]	; 1eeec <dta_end_data+0x848>
   1e76c:	add	r3, pc, r3
   1e770:	str	r3, [sp, #28]
   1e774:	ldr	r3, [pc, #1908]	; 1eef0 <dta_end_data+0x84c>
   1e778:	add	r3, pc, r3
   1e77c:	str	r3, [sp, #36]	; 0x24
   1e780:	ldr	r3, [pc, #1900]	; 1eef4 <dta_end_data+0x850>
   1e784:	add	r3, pc, r3
   1e788:	str	r3, [sp, #32]
   1e78c:	str	r8, [sp, #8]
   1e790:	mov	r8, r9
   1e794:	ldr	r1, [sp, #12]
   1e798:	mov	r0, r4
   1e79c:	bl	4450 <readstat_get_label_set@plt>
   1e7a0:	str	r0, [sp]
   1e7a4:	ldr	r3, [r0, #264]	; 0x108
   1e7a8:	str	r3, [sp, #44]	; 0x2c
   1e7ac:	str	fp, [sp, #48]	; 0x30
   1e7b0:	cmp	r3, #0
   1e7b4:	ble	1e7ec <dta_end_data+0x148>
   1e7b8:	mov	r5, #0
   1e7bc:	mov	r1, r5
   1e7c0:	ldr	r0, [sp]
   1e7c4:	bl	44f8 <readstat_get_value_label@plt>
   1e7c8:	ldr	r3, [sp, #48]	; 0x30
   1e7cc:	add	r3, r3, #1
   1e7d0:	ldr	r2, [r0, #28]
   1e7d4:	add	r3, r3, r2
   1e7d8:	str	r3, [sp, #48]	; 0x30
   1e7dc:	add	r5, r5, #1
   1e7e0:	ldr	r3, [sp, #44]	; 0x2c
   1e7e4:	cmp	r5, r3
   1e7e8:	blt	1e7bc <dta_end_data+0x118>
   1e7ec:	ldr	r2, [sp, #20]
   1e7f0:	ldr	r6, [sp, #8]
   1e7f4:	mov	r1, r6
   1e7f8:	mov	r0, r4
   1e7fc:	bl	1e638 <dta_write_tag>
   1e800:	cmp	r0, #0
   1e804:	bne	1ee28 <dta_end_data+0x784>
   1e808:	ldr	r3, [sp, #44]	; 0x2c
   1e80c:	add	r2, r3, #1
   1e810:	ldr	r3, [sp, #48]	; 0x30
   1e814:	add	r3, r3, r2, lsl #3
   1e818:	str	r3, [sp, #52]	; 0x34
   1e81c:	mov	r2, #4
   1e820:	ldr	r1, [sp, #24]
   1e824:	mov	r0, r4
   1e828:	bl	4480 <readstat_write_bytes@plt>
   1e82c:	cmp	r0, #0
   1e830:	bne	1ee38 <dta_end_data+0x794>
   1e834:	ldr	r5, [r6, #104]	; 0x68
   1e838:	mov	r2, r5
   1e83c:	ldr	r3, [sp]
   1e840:	add	r1, r3, #4
   1e844:	ldr	r7, [sp, #4]
   1e848:	mov	r0, r7
   1e84c:	bl	42e8 <strncpy@plt>
   1e850:	ldr	r2, [r6, #108]	; 0x6c
   1e854:	add	r2, r5, r2
   1e858:	mov	r1, r7
   1e85c:	mov	r0, r4
   1e860:	bl	4480 <readstat_write_bytes@plt>
   1e864:	cmp	r0, #0
   1e868:	bne	1ee48 <dta_end_data+0x7a4>
   1e86c:	ldr	r3, [sp, #48]	; 0x30
   1e870:	cmp	r3, #0
   1e874:	bne	1ec4c <dta_end_data+0x5a8>
   1e878:	mov	r2, #4
   1e87c:	add	r1, sp, #48	; 0x30
   1e880:	mov	r0, r4
   1e884:	bl	4480 <readstat_write_bytes@plt>
   1e888:	cmp	r0, #0
   1e88c:	bne	1ee58 <dta_end_data+0x7b4>
   1e890:	mov	r2, #4
   1e894:	add	r1, sp, #48	; 0x30
   1e898:	mov	r0, r4
   1e89c:	bl	4480 <readstat_write_bytes@plt>
   1e8a0:	cmp	r0, #0
   1e8a4:	bne	1ee68 <dta_end_data+0x7c4>
   1e8a8:	ldr	r2, [sp, #32]
   1e8ac:	mov	r1, r6
   1e8b0:	mov	r0, r4
   1e8b4:	bl	1e638 <dta_write_tag>
   1e8b8:	cmp	r0, #0
   1e8bc:	beq	1edb8 <dta_end_data+0x714>
   1e8c0:	mov	r6, r8
   1e8c4:	ldr	r8, [sp, #8]
   1e8c8:	mov	r5, r0
   1e8cc:	ldr	r0, [sp, #16]
   1e8d0:	cmp	r0, #0
   1e8d4:	beq	1e8dc <dta_end_data+0x238>
   1e8d8:	bl	3ee0 <free@plt>
   1e8dc:	mov	r0, r6
   1e8e0:	cmp	r6, #0
   1e8e4:	beq	1e8ec <dta_end_data+0x248>
   1e8e8:	bl	3ee0 <free@plt>
   1e8ec:	cmp	r9, #0
   1e8f0:	beq	1e8fc <dta_end_data+0x258>
   1e8f4:	mov	r0, r9
   1e8f8:	bl	3ee0 <free@plt>
   1e8fc:	ldr	r3, [sp, #4]
   1e900:	cmp	r3, #0
   1e904:	beq	1e910 <dta_end_data+0x26c>
   1e908:	mov	r0, r3
   1e90c:	bl	3ee0 <free@plt>
   1e910:	cmp	r5, #0
   1e914:	bne	1e6bc <dta_end_data+0x18>
   1e918:	ldr	r2, [pc, #1496]	; 1eef8 <dta_end_data+0x854>
   1e91c:	add	r2, pc, r2
   1e920:	mov	r1, r8
   1e924:	mov	r0, r4
   1e928:	bl	1e638 <dta_write_tag>
   1e92c:	mov	r5, r0
   1e930:	b	1e6bc <dta_end_data+0x18>
   1e934:	ldr	r1, [pc, #1472]	; 1eefc <dta_end_data+0x858>
   1e938:	add	r1, pc, r1
   1e93c:	mov	r0, r4
   1e940:	bl	4180 <readstat_write_string@plt>
   1e944:	cmp	r0, #0
   1e948:	movne	r5, r0
   1e94c:	bne	1e6bc <dta_end_data+0x18>
   1e950:	ldr	r3, [r4, #64]	; 0x40
   1e954:	cmp	r3, #0
   1e958:	ble	1ea60 <dta_end_data+0x3bc>
   1e95c:	mov	r7, #0
   1e960:	ldr	fp, [pc, #1432]	; 1ef00 <dta_end_data+0x85c>
   1e964:	add	fp, pc, fp
   1e968:	mvn	sl, #125	; 0x7d
   1e96c:	add	r9, sp, #52	; 0x34
   1e970:	b	1e9e8 <dta_end_data+0x344>
   1e974:	ldr	r3, [r6]
   1e978:	str	r3, [sp, #52]	; 0x34
   1e97c:	ldr	r3, [r6, #8]
   1e980:	str	r3, [sp, #56]	; 0x38
   1e984:	strb	sl, [sp, #60]	; 0x3c
   1e988:	ldrb	r3, [r6, #16]
   1e98c:	strb	r3, [sp, #61]	; 0x3d
   1e990:	ldrb	r3, [r6, #17]
   1e994:	strb	r3, [sp, #62]	; 0x3e
   1e998:	ldrb	r3, [r6, #18]
   1e99c:	strb	r3, [sp, #63]	; 0x3f
   1e9a0:	ldrb	r3, [r6, #19]
   1e9a4:	strb	r3, [sp, #64]	; 0x40
   1e9a8:	mov	r2, #13
   1e9ac:	mov	r1, r9
   1e9b0:	mov	r0, r4
   1e9b4:	bl	4480 <readstat_write_bytes@plt>
   1e9b8:	cmp	r0, #0
   1e9bc:	bne	1eed0 <dta_end_data+0x82c>
   1e9c0:	ldr	r2, [r6, #16]
   1e9c4:	add	r1, r6, #20
   1e9c8:	mov	r0, r4
   1e9cc:	bl	4480 <readstat_write_bytes@plt>
   1e9d0:	cmp	r0, #0
   1e9d4:	bne	1eed8 <dta_end_data+0x834>
   1e9d8:	add	r7, r7, #1
   1e9dc:	ldr	r3, [r4, #64]	; 0x40
   1e9e0:	cmp	r7, r3
   1e9e4:	bge	1ea60 <dta_end_data+0x3bc>
   1e9e8:	ldr	r3, [r4, #60]	; 0x3c
   1e9ec:	ldr	r6, [r3, r7, lsl #2]
   1e9f0:	mov	r1, fp
   1e9f4:	mov	r0, r4
   1e9f8:	bl	4180 <readstat_write_string@plt>
   1e9fc:	cmp	r0, #0
   1ea00:	bne	1eec8 <dta_end_data+0x824>
   1ea04:	ldr	r3, [r8, #116]	; 0x74
   1ea08:	cmp	r3, #4
   1ea0c:	bls	1e974 <dta_end_data+0x2d0>
   1ea10:	ldr	r3, [r6]
   1ea14:	str	r3, [sp, #52]	; 0x34
   1ea18:	ldr	r3, [r6, #8]
   1ea1c:	str	r3, [sp, #56]	; 0x38
   1ea20:	ldr	r3, [r6, #12]
   1ea24:	str	r3, [sp, #60]	; 0x3c
   1ea28:	strb	sl, [sp, #64]	; 0x40
   1ea2c:	ldrb	r3, [r6, #16]
   1ea30:	strb	r3, [sp, #65]	; 0x41
   1ea34:	ldrb	r3, [r6, #17]
   1ea38:	strb	r3, [sp, #66]	; 0x42
   1ea3c:	ldrb	r3, [r6, #18]
   1ea40:	strb	r3, [sp, #67]	; 0x43
   1ea44:	ldrb	r3, [r6, #19]
   1ea48:	strb	r3, [sp, #68]	; 0x44
   1ea4c:	mov	r2, #17
   1ea50:	mov	r1, r9
   1ea54:	mov	r0, r4
   1ea58:	bl	4480 <readstat_write_bytes@plt>
   1ea5c:	b	1e9b8 <dta_end_data+0x314>
   1ea60:	ldr	r1, [pc, #1180]	; 1ef04 <dta_end_data+0x860>
   1ea64:	add	r1, pc, r1
   1ea68:	mov	r0, r4
   1ea6c:	bl	4180 <readstat_write_string@plt>
   1ea70:	cmp	r0, #0
   1ea74:	movne	r5, r0
   1ea78:	bne	1e6bc <dta_end_data+0x18>
   1ea7c:	b	1e6f4 <dta_end_data+0x50>
   1ea80:	ldr	r3, [r4, #40]	; 0x28
   1ea84:	cmp	r3, #0
   1ea88:	ble	1e910 <dta_end_data+0x26c>
   1ea8c:	mov	r7, #0
   1ea90:	str	r7, [sp]
   1ea94:	add	r3, sp, #48	; 0x30
   1ea98:	str	r3, [sp, #4]
   1ea9c:	add	fp, sp, #52	; 0x34
   1eaa0:	mov	r9, r7
   1eaa4:	ldr	r1, [sp]
   1eaa8:	mov	r0, r4
   1eaac:	bl	4450 <readstat_get_label_set@plt>
   1eab0:	mov	sl, r0
   1eab4:	ldr	r3, [r0, #264]	; 0x108
   1eab8:	cmp	r3, #0
   1eabc:	ble	1ec0c <dta_end_data+0x568>
   1eac0:	mov	r6, #0
   1eac4:	mov	r5, r6
   1eac8:	mov	r1, r5
   1eacc:	mov	r0, sl
   1ead0:	bl	44f8 <readstat_get_value_label@plt>
   1ead4:	ldrb	r3, [r0, #12]
   1ead8:	cmp	r3, #0
   1eadc:	bne	1ec14 <dta_end_data+0x570>
   1eae0:	ldr	r3, [r0, #8]
   1eae4:	cmp	r3, #1024	; 0x400
   1eae8:	bhi	1ec2c <dta_end_data+0x588>
   1eaec:	cmp	r6, r3
   1eaf0:	movlt	r6, r3
   1eaf4:	add	r5, r5, #1
   1eaf8:	ldr	r3, [sl, #264]	; 0x108
   1eafc:	cmp	r5, r3
   1eb00:	blt	1eac8 <dta_end_data+0x424>
   1eb04:	add	r3, r6, #1
   1eb08:	lsl	r3, r3, #3
   1eb0c:	strh	r3, [sp, #48]	; 0x30
   1eb10:	mov	r2, #2
   1eb14:	ldr	r1, [sp, #4]
   1eb18:	mov	r0, r4
   1eb1c:	bl	4480 <readstat_write_bytes@plt>
   1eb20:	cmp	r0, #0
   1eb24:	bne	1ec34 <dta_end_data+0x590>
   1eb28:	str	r9, [fp]
   1eb2c:	str	r9, [fp, #4]
   1eb30:	str	r9, [fp, #8]
   1eb34:	strh	r9, [fp, #12]
   1eb38:	ldr	r5, [r8, #104]	; 0x68
   1eb3c:	mov	r2, r5
   1eb40:	add	r1, sl, #4
   1eb44:	mov	r0, fp
   1eb48:	bl	42e8 <strncpy@plt>
   1eb4c:	ldr	r2, [r8, #108]	; 0x6c
   1eb50:	add	r2, r5, r2
   1eb54:	mov	r1, fp
   1eb58:	mov	r0, r4
   1eb5c:	bl	4480 <readstat_write_bytes@plt>
   1eb60:	cmp	r0, #0
   1eb64:	bne	1ec3c <dta_end_data+0x598>
   1eb68:	ldrsh	r5, [sp, #48]	; 0x30
   1eb6c:	mov	r1, r5
   1eb70:	mov	r0, r7
   1eb74:	bl	4018 <realloc@plt>
   1eb78:	mov	r7, r0
   1eb7c:	mov	r2, r5
   1eb80:	mov	r1, r9
   1eb84:	bl	42d0 <memset@plt>
   1eb88:	ldr	r3, [sl, #264]	; 0x108
   1eb8c:	cmp	r3, #0
   1eb90:	ble	1ebd0 <dta_end_data+0x52c>
   1eb94:	mov	r5, #0
   1eb98:	mov	r1, r5
   1eb9c:	mov	r0, sl
   1eba0:	bl	44f8 <readstat_get_value_label@plt>
   1eba4:	ldr	r2, [r0, #28]
   1eba8:	ldr	r3, [r0, #8]
   1ebac:	cmp	r2, #8
   1ebb0:	movcs	r2, #8
   1ebb4:	ldr	r1, [r0, #24]
   1ebb8:	add	r0, r7, r3, lsl #3
   1ebbc:	bl	3f40 <memcpy@plt>
   1ebc0:	add	r5, r5, #1
   1ebc4:	ldr	r3, [sl, #264]	; 0x108
   1ebc8:	cmp	r5, r3
   1ebcc:	blt	1eb98 <dta_end_data+0x4f4>
   1ebd0:	ldrsh	r2, [sp, #48]	; 0x30
   1ebd4:	mov	r1, r7
   1ebd8:	mov	r0, r4
   1ebdc:	bl	4480 <readstat_write_bytes@plt>
   1ebe0:	cmp	r0, #0
   1ebe4:	bne	1ec44 <dta_end_data+0x5a0>
   1ebe8:	ldr	r3, [sp]
   1ebec:	add	r3, r3, #1
   1ebf0:	mov	r2, r3
   1ebf4:	str	r3, [sp]
   1ebf8:	ldr	r3, [r4, #40]	; 0x28
   1ebfc:	cmp	r2, r3
   1ec00:	blt	1eaa4 <dta_end_data+0x400>
   1ec04:	mov	r5, r0
   1ec08:	b	1ec18 <dta_end_data+0x574>
   1ec0c:	mov	r6, #0
   1ec10:	b	1eb04 <dta_end_data+0x460>
   1ec14:	mov	r5, #23
   1ec18:	cmp	r7, #0
   1ec1c:	beq	1e910 <dta_end_data+0x26c>
   1ec20:	mov	r0, r7
   1ec24:	bl	3ee0 <free@plt>
   1ec28:	b	1e910 <dta_end_data+0x26c>
   1ec2c:	mov	r5, #20
   1ec30:	b	1ec18 <dta_end_data+0x574>
   1ec34:	mov	r5, r0
   1ec38:	b	1ec18 <dta_end_data+0x574>
   1ec3c:	mov	r5, r0
   1ec40:	b	1ec18 <dta_end_data+0x574>
   1ec44:	mov	r5, r0
   1ec48:	b	1ec18 <dta_end_data+0x574>
   1ec4c:	ldr	r1, [sp, #44]	; 0x2c
   1ec50:	lsl	r1, r1, #2
   1ec54:	ldr	r0, [sp, #16]
   1ec58:	bl	4018 <realloc@plt>
   1ec5c:	mov	r5, r0
   1ec60:	str	r0, [sp, #16]
   1ec64:	ldr	r1, [sp, #44]	; 0x2c
   1ec68:	lsl	r1, r1, #2
   1ec6c:	mov	r0, r8
   1ec70:	bl	4018 <realloc@plt>
   1ec74:	mov	r8, r0
   1ec78:	ldr	r1, [sp, #48]	; 0x30
   1ec7c:	mov	r0, r9
   1ec80:	bl	4018 <realloc@plt>
   1ec84:	mov	r9, r0
   1ec88:	ldr	r1, [sp, #28]
   1ec8c:	ldr	r0, [sp]
   1ec90:	bl	3dcc <readstat_sort_label_set@plt>
   1ec94:	ldr	r3, [sp, #44]	; 0x2c
   1ec98:	cmp	r3, #0
   1ec9c:	ble	1ed20 <dta_end_data+0x67c>
   1eca0:	sub	sl, r5, #4
   1eca4:	mov	r7, fp
   1eca8:	mov	r6, fp
   1ecac:	b	1ece0 <dta_end_data+0x63c>
   1ecb0:	ldr	r3, [r0, #8]
   1ecb4:	str	r3, [r8, r6, lsl #2]
   1ecb8:	mov	r2, r5
   1ecbc:	add	r0, r9, r7
   1ecc0:	bl	3f40 <memcpy@plt>
   1ecc4:	add	r5, r5, r7
   1ecc8:	add	r7, r5, #1
   1eccc:	strb	fp, [r9, r5]
   1ecd0:	add	r6, r6, #1
   1ecd4:	ldr	r3, [sp, #44]	; 0x2c
   1ecd8:	cmp	r6, r3
   1ecdc:	bge	1ed20 <dta_end_data+0x67c>
   1ece0:	mov	r1, r6
   1ece4:	ldr	r0, [sp]
   1ece8:	bl	44f8 <readstat_get_value_label@plt>
   1ecec:	ldr	r1, [r0, #24]
   1ecf0:	ldr	r5, [r0, #28]
   1ecf4:	str	r7, [sl, #4]!
   1ecf8:	ldrb	r3, [r0, #12]
   1ecfc:	cmp	r3, #0
   1ed00:	beq	1ecb0 <dta_end_data+0x60c>
   1ed04:	ldr	r2, [r4, #8]
   1ed08:	cmp	r2, #112	; 0x70
   1ed0c:	ble	1ee08 <dta_end_data+0x764>
   1ed10:	add	r3, r3, #-2147483648	; 0x80000000
   1ed14:	sub	r3, r3, #123	; 0x7b
   1ed18:	str	r3, [r8, r6, lsl #2]
   1ed1c:	b	1ecb8 <dta_end_data+0x614>
   1ed20:	mov	r2, #4
   1ed24:	add	r1, sp, #44	; 0x2c
   1ed28:	mov	r0, r4
   1ed2c:	bl	4480 <readstat_write_bytes@plt>
   1ed30:	cmp	r0, #0
   1ed34:	bne	1ee78 <dta_end_data+0x7d4>
   1ed38:	mov	r2, #4
   1ed3c:	add	r1, sp, #48	; 0x30
   1ed40:	mov	r0, r4
   1ed44:	bl	4480 <readstat_write_bytes@plt>
   1ed48:	cmp	r0, #0
   1ed4c:	bne	1ee88 <dta_end_data+0x7e4>
   1ed50:	ldr	r2, [sp, #44]	; 0x2c
   1ed54:	lsl	r2, r2, #2
   1ed58:	ldr	r1, [sp, #16]
   1ed5c:	mov	r0, r4
   1ed60:	bl	4480 <readstat_write_bytes@plt>
   1ed64:	cmp	r0, #0
   1ed68:	bne	1ee98 <dta_end_data+0x7f4>
   1ed6c:	ldr	r2, [sp, #44]	; 0x2c
   1ed70:	lsl	r2, r2, #2
   1ed74:	mov	r1, r8
   1ed78:	mov	r0, r4
   1ed7c:	bl	4480 <readstat_write_bytes@plt>
   1ed80:	cmp	r0, #0
   1ed84:	bne	1eea8 <dta_end_data+0x804>
   1ed88:	ldr	r2, [sp, #48]	; 0x30
   1ed8c:	mov	r1, r9
   1ed90:	mov	r0, r4
   1ed94:	bl	4480 <readstat_write_bytes@plt>
   1ed98:	cmp	r0, #0
   1ed9c:	bne	1eeb8 <dta_end_data+0x814>
   1eda0:	ldr	r2, [sp, #36]	; 0x24
   1eda4:	ldr	r1, [sp, #8]
   1eda8:	mov	r0, r4
   1edac:	bl	1e638 <dta_write_tag>
   1edb0:	cmp	r0, #0
   1edb4:	bne	1edf8 <dta_end_data+0x754>
   1edb8:	ldr	r3, [sp, #12]
   1edbc:	add	r3, r3, #1
   1edc0:	mov	r2, r3
   1edc4:	str	r3, [sp, #12]
   1edc8:	ldr	r3, [r4, #40]	; 0x28
   1edcc:	cmp	r2, r3
   1edd0:	blt	1e794 <dta_end_data+0xf0>
   1edd4:	mov	r6, r8
   1edd8:	ldr	r8, [sp, #8]
   1eddc:	ldr	r2, [pc, #292]	; 1ef08 <dta_end_data+0x864>
   1ede0:	add	r2, pc, r2
   1ede4:	mov	r1, r8
   1ede8:	mov	r0, r4
   1edec:	bl	1e638 <dta_write_tag>
   1edf0:	mov	r5, r0
   1edf4:	b	1e8cc <dta_end_data+0x228>
   1edf8:	mov	r6, r8
   1edfc:	ldr	r8, [sp, #8]
   1ee00:	mov	r5, r0
   1ee04:	b	1e8cc <dta_end_data+0x228>
   1ee08:	mov	r6, r8
   1ee0c:	ldr	r8, [sp, #8]
   1ee10:	mov	r5, #23
   1ee14:	b	1e8cc <dta_end_data+0x228>
   1ee18:	mov	r9, #0
   1ee1c:	mov	r6, r9
   1ee20:	str	r9, [sp, #16]
   1ee24:	b	1eddc <dta_end_data+0x738>
   1ee28:	mov	r6, r8
   1ee2c:	ldr	r8, [sp, #8]
   1ee30:	mov	r5, r0
   1ee34:	b	1e8cc <dta_end_data+0x228>
   1ee38:	mov	r6, r8
   1ee3c:	ldr	r8, [sp, #8]
   1ee40:	mov	r5, r0
   1ee44:	b	1e8cc <dta_end_data+0x228>
   1ee48:	mov	r6, r8
   1ee4c:	ldr	r8, [sp, #8]
   1ee50:	mov	r5, r0
   1ee54:	b	1e8cc <dta_end_data+0x228>
   1ee58:	mov	r6, r8
   1ee5c:	ldr	r8, [sp, #8]
   1ee60:	mov	r5, r0
   1ee64:	b	1e8cc <dta_end_data+0x228>
   1ee68:	mov	r6, r8
   1ee6c:	ldr	r8, [sp, #8]
   1ee70:	mov	r5, r0
   1ee74:	b	1e8cc <dta_end_data+0x228>
   1ee78:	mov	r6, r8
   1ee7c:	ldr	r8, [sp, #8]
   1ee80:	mov	r5, r0
   1ee84:	b	1e8cc <dta_end_data+0x228>
   1ee88:	mov	r6, r8
   1ee8c:	ldr	r8, [sp, #8]
   1ee90:	mov	r5, r0
   1ee94:	b	1e8cc <dta_end_data+0x228>
   1ee98:	mov	r6, r8
   1ee9c:	ldr	r8, [sp, #8]
   1eea0:	mov	r5, r0
   1eea4:	b	1e8cc <dta_end_data+0x228>
   1eea8:	mov	r6, r8
   1eeac:	ldr	r8, [sp, #8]
   1eeb0:	mov	r5, r0
   1eeb4:	b	1e8cc <dta_end_data+0x228>
   1eeb8:	mov	r6, r8
   1eebc:	ldr	r8, [sp, #8]
   1eec0:	mov	r5, r0
   1eec4:	b	1e8cc <dta_end_data+0x228>
   1eec8:	mov	r5, r0
   1eecc:	b	1e6bc <dta_end_data+0x18>
   1eed0:	mov	r5, r0
   1eed4:	b	1e6bc <dta_end_data+0x18>
   1eed8:	mov	r5, r0
   1eedc:	b	1e6bc <dta_end_data+0x18>
   1eee0:	.word	0x00008c28
   1eee4:	.word	0x00008c20
   1eee8:	.word	0x00008bf4
   1eeec:	.word	0xfffffd04
   1eef0:	.word	0x00008bdc
   1eef4:	.word	0x00008bd0
   1eef8:	.word	0x00008ab4
   1eefc:	.word	0x000089a4
   1ef00:	.word	0x00008980
   1ef04:	.word	0x00008950
   1ef08:	.word	0x000085e0

0001ef0c <dta_118_write_string_ref>:
   1ef0c:	cmp	r2, #0
   1ef10:	beq	1ef70 <dta_118_write_string_ref+0x64>
   1ef14:	push	{r4, r5, r6, lr}
   1ef18:	sub	sp, sp, #8
   1ef1c:	mov	r4, r0
   1ef20:	ldr	r3, [r2]
   1ef24:	ldr	r6, [r2, #8]
   1ef28:	ldr	r5, [r2, #12]
   1ef2c:	str	r6, [sp]
   1ef30:	str	r5, [sp, #4]
   1ef34:	strh	r3, [r0]
   1ef38:	bl	3ed4 <machine_is_little_endian@plt>
   1ef3c:	cmp	r0, #0
   1ef40:	lsleq	r5, r5, #16
   1ef44:	orreq	r5, r5, r6, lsr #16
   1ef48:	lsleq	r6, r6, #16
   1ef4c:	streq	r6, [sp]
   1ef50:	streq	r5, [sp, #4]
   1ef54:	ldr	r0, [sp]
   1ef58:	str	r0, [r4, #2]
   1ef5c:	ldrh	r3, [sp, #4]
   1ef60:	strh	r3, [r4, #6]
   1ef64:	mov	r0, #0
   1ef68:	add	sp, sp, #8
   1ef6c:	pop	{r4, r5, r6, pc}
   1ef70:	mov	r0, #34	; 0x22
   1ef74:	bx	lr

0001ef78 <dta_emit_header_data_label>:
   1ef78:	push	{r4, r5, r6, r7, lr}
   1ef7c:	sub	sp, sp, #12
   1ef80:	mov	r5, r0
   1ef84:	mov	r6, r1
   1ef88:	ldr	r2, [pc, #256]	; 1f090 <dta_emit_header_data_label+0x118>
   1ef8c:	add	r2, pc, r2
   1ef90:	bl	1e638 <dta_write_tag>
   1ef94:	subs	r4, r0, #0
   1ef98:	bne	1eff8 <dta_emit_header_data_label+0x80>
   1ef9c:	ldr	r3, [r6, #8]
   1efa0:	cmp	r3, #0
   1efa4:	beq	1f054 <dta_emit_header_data_label+0xdc>
   1efa8:	cmp	r3, #1
   1efac:	beq	1f004 <dta_emit_header_data_label+0x8c>
   1efb0:	cmp	r3, #2
   1efb4:	beq	1f02c <dta_emit_header_data_label+0xb4>
   1efb8:	add	r1, r5, #88	; 0x58
   1efbc:	mov	r0, r5
   1efc0:	bl	4180 <readstat_write_string@plt>
   1efc4:	subs	r4, r0, #0
   1efc8:	moveq	r7, #0
   1efcc:	bne	1eff8 <dta_emit_header_data_label+0x80>
   1efd0:	ldr	r2, [pc, #188]	; 1f094 <dta_emit_header_data_label+0x11c>
   1efd4:	add	r2, pc, r2
   1efd8:	mov	r1, r6
   1efdc:	mov	r0, r5
   1efe0:	bl	1e638 <dta_write_tag>
   1efe4:	mov	r4, r0
   1efe8:	cmp	r7, #0
   1efec:	beq	1eff8 <dta_emit_header_data_label+0x80>
   1eff0:	mov	r0, r7
   1eff4:	bl	3ee0 <free@plt>
   1eff8:	mov	r0, r4
   1effc:	add	sp, sp, #12
   1f000:	pop	{r4, r5, r6, r7, pc}
   1f004:	add	r0, r5, #88	; 0x58
   1f008:	bl	4228 <strlen@plt>
   1f00c:	add	r1, sp, #8
   1f010:	strb	r0, [r1, #-2]!
   1f014:	mov	r2, #1
   1f018:	mov	r0, r5
   1f01c:	bl	4480 <readstat_write_bytes@plt>
   1f020:	subs	r4, r0, #0
   1f024:	bne	1eff8 <dta_emit_header_data_label+0x80>
   1f028:	b	1efb8 <dta_emit_header_data_label+0x40>
   1f02c:	add	r0, r5, #88	; 0x58
   1f030:	bl	4228 <strlen@plt>
   1f034:	add	r1, sp, #8
   1f038:	strh	r0, [r1, #-2]!
   1f03c:	mov	r2, #2
   1f040:	mov	r0, r5
   1f044:	bl	4480 <readstat_write_bytes@plt>
   1f048:	subs	r4, r0, #0
   1f04c:	bne	1eff8 <dta_emit_header_data_label+0x80>
   1f050:	b	1efb8 <dta_emit_header_data_label+0x40>
   1f054:	ldr	r4, [r6, #4]
   1f058:	mov	r1, r4
   1f05c:	mov	r0, #1
   1f060:	bl	3d78 <calloc@plt>
   1f064:	mov	r7, r0
   1f068:	mov	r2, r4
   1f06c:	add	r1, r5, #88	; 0x58
   1f070:	bl	42e8 <strncpy@plt>
   1f074:	mov	r2, r4
   1f078:	mov	r1, r7
   1f07c:	mov	r0, r5
   1f080:	bl	4480 <readstat_write_bytes@plt>
   1f084:	subs	r4, r0, #0
   1f088:	bne	1efe8 <dta_emit_header_data_label+0x70>
   1f08c:	b	1efd0 <dta_emit_header_data_label+0x58>
   1f090:	.word	0x000081bc
   1f094:	.word	0x0000817c

0001f098 <dta_measure_tag>:
   1f098:	ldrb	r3, [r0, #192]	; 0xc0
   1f09c:	tst	r3, #4
   1f0a0:	beq	1f0b4 <dta_measure_tag+0x1c>
   1f0a4:	push	{r4, lr}
   1f0a8:	mov	r0, r1
   1f0ac:	bl	4228 <strlen@plt>
   1f0b0:	pop	{r4, pc}
   1f0b4:	mov	r0, #0
   1f0b8:	bx	lr

0001f0bc <dta_write_string>:
   1f0bc:	push	{r4, r5, r6, lr}
   1f0c0:	mov	r6, r0
   1f0c4:	ldr	r5, [r1, #1596]	; 0x63c
   1f0c8:	subs	r4, r2, #0
   1f0cc:	beq	1f0f4 <dta_write_string+0x38>
   1f0d0:	ldrb	r3, [r4]
   1f0d4:	cmp	r3, #0
   1f0d8:	beq	1f0f4 <dta_write_string+0x38>
   1f0dc:	mov	r0, r4
   1f0e0:	bl	4228 <strlen@plt>
   1f0e4:	cmp	r5, r0
   1f0e8:	bcs	1f10c <dta_write_string+0x50>
   1f0ec:	mov	r0, #22
   1f0f0:	pop	{r4, r5, r6, pc}
   1f0f4:	mov	r2, r5
   1f0f8:	mov	r1, #0
   1f0fc:	mov	r0, r6
   1f100:	bl	42d0 <memset@plt>
   1f104:	mov	r0, #0
   1f108:	pop	{r4, r5, r6, pc}
   1f10c:	mov	r2, r5
   1f110:	mov	r1, r4
   1f114:	mov	r0, r6
   1f118:	bl	42e8 <strncpy@plt>
   1f11c:	mov	r0, #0
   1f120:	pop	{r4, r5, r6, pc}

0001f124 <dta_emit_header_time_stamp>:
   1f124:	push	{r4, r5, r6, r7, r8, lr}
   1f128:	sub	sp, sp, #72	; 0x48
   1f12c:	ldr	r3, [r1, #16]
   1f130:	cmp	r3, #0
   1f134:	moveq	r5, #0
   1f138:	bne	1f148 <dta_emit_header_time_stamp+0x24>
   1f13c:	mov	r0, r5
   1f140:	add	sp, sp, #72	; 0x48
   1f144:	pop	{r4, r5, r6, r7, r8, pc}
   1f148:	mov	r4, r1
   1f14c:	mov	r7, r0
   1f150:	ldr	r3, [r0, #20]
   1f154:	add	r0, sp, #72	; 0x48
   1f158:	str	r3, [r0, #-4]!
   1f15c:	bl	418c <localtime@plt>
   1f160:	mov	r5, r0
   1f164:	ldr	r8, [r4, #16]
   1f168:	mov	r1, r8
   1f16c:	mov	r0, #1
   1f170:	bl	3d78 <calloc@plt>
   1f174:	mov	r6, r0
   1f178:	add	ip, sp, #20
   1f17c:	ldr	lr, [pc, #288]	; 1f2a4 <dta_emit_header_time_stamp+0x180>
   1f180:	add	lr, pc, lr
   1f184:	ldm	lr!, {r0, r1, r2, r3}
   1f188:	stmia	ip!, {r0, r1, r2, r3}
   1f18c:	ldm	lr!, {r0, r1, r2, r3}
   1f190:	stmia	ip!, {r0, r1, r2, r3}
   1f194:	ldm	lr, {r0, r1, r2, r3}
   1f198:	stm	ip, {r0, r1, r2, r3}
   1f19c:	cmp	r5, #0
   1f1a0:	moveq	r5, #39	; 0x27
   1f1a4:	beq	1f298 <dta_emit_header_time_stamp+0x174>
   1f1a8:	cmp	r6, #0
   1f1ac:	moveq	r5, #3
   1f1b0:	beq	1f298 <dta_emit_header_time_stamp+0x174>
   1f1b4:	ldr	r3, [r5, #12]
   1f1b8:	ldr	r2, [r5, #4]
   1f1bc:	str	r2, [sp, #12]
   1f1c0:	ldr	r2, [r5, #8]
   1f1c4:	str	r2, [sp, #8]
   1f1c8:	ldr	r2, [r5, #20]
   1f1cc:	add	r2, r2, #1888	; 0x760
   1f1d0:	add	r2, r2, #12
   1f1d4:	str	r2, [sp, #4]
   1f1d8:	ldr	r1, [r5, #16]
   1f1dc:	add	r2, sp, #20
   1f1e0:	add	r2, r2, r1, lsl #2
   1f1e4:	str	r2, [sp]
   1f1e8:	ldr	r2, [pc, #184]	; 1f2a8 <dta_emit_header_time_stamp+0x184>
   1f1ec:	add	r2, pc, r2
   1f1f0:	mov	r1, r8
   1f1f4:	mov	r0, r6
   1f1f8:	bl	42ac <snprintf@plt>
   1f1fc:	uxtb	r0, r0
   1f200:	strb	r0, [sp, #19]
   1f204:	cmp	r0, #0
   1f208:	moveq	r5, #13
   1f20c:	beq	1f298 <dta_emit_header_time_stamp+0x174>
   1f210:	ldrb	r3, [r4, #192]	; 0xc0
   1f214:	tst	r3, #4
   1f218:	beq	1f284 <dta_emit_header_time_stamp+0x160>
   1f21c:	ldr	r2, [pc, #136]	; 1f2ac <dta_emit_header_time_stamp+0x188>
   1f220:	add	r2, pc, r2
   1f224:	mov	r1, r4
   1f228:	mov	r0, r7
   1f22c:	bl	1e638 <dta_write_tag>
   1f230:	subs	r5, r0, #0
   1f234:	bne	1f298 <dta_emit_header_time_stamp+0x174>
   1f238:	mov	r2, #1
   1f23c:	add	r1, sp, #19
   1f240:	mov	r0, r7
   1f244:	bl	4480 <readstat_write_bytes@plt>
   1f248:	subs	r5, r0, #0
   1f24c:	bne	1f298 <dta_emit_header_time_stamp+0x174>
   1f250:	ldrb	r2, [sp, #19]
   1f254:	mov	r1, r6
   1f258:	mov	r0, r7
   1f25c:	bl	4480 <readstat_write_bytes@plt>
   1f260:	subs	r5, r0, #0
   1f264:	bne	1f298 <dta_emit_header_time_stamp+0x174>
   1f268:	ldr	r2, [pc, #64]	; 1f2b0 <dta_emit_header_time_stamp+0x18c>
   1f26c:	add	r2, pc, r2
   1f270:	mov	r1, r4
   1f274:	mov	r0, r7
   1f278:	bl	1e638 <dta_write_tag>
   1f27c:	mov	r5, r0
   1f280:	b	1f298 <dta_emit_header_time_stamp+0x174>
   1f284:	ldr	r2, [r4, #16]
   1f288:	mov	r1, r6
   1f28c:	mov	r0, r7
   1f290:	bl	4480 <readstat_write_bytes@plt>
   1f294:	mov	r5, r0
   1f298:	mov	r0, r6
   1f29c:	bl	3ee0 <free@plt>
   1f2a0:	b	1f13c <dta_emit_header_time_stamp+0x18>
   1f2a4:	.word	0x00008204
   1f2a8:	.word	0x000081f4
   1f2ac:	.word	0x00007f3c
   1f2b0:	.word	0x00007efc

0001f2b4 <dta_begin_data>:
   1f2b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f2b8:	add	fp, sp, #32
   1f2bc:	sub	sp, sp, #204	; 0xcc
   1f2c0:	ldr	r3, [r0, #308]	; 0x134
   1f2c4:	cmp	r3, #0
   1f2c8:	moveq	r4, #14
   1f2cc:	bne	1f2dc <dta_begin_data+0x28>
   1f2d0:	mov	r0, r4
   1f2d4:	sub	sp, fp, #32
   1f2d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f2dc:	mov	r6, r0
   1f2e0:	mov	r0, #0
   1f2e4:	bl	4588 <dta_ctx_alloc@plt>
   1f2e8:	mov	r8, r0
   1f2ec:	ldr	r7, [r6, #28]
   1f2f0:	ldr	r4, [r6, #80]	; 0x50
   1f2f4:	asr	r5, r4, #31
   1f2f8:	bl	3ed4 <machine_is_little_endian@plt>
   1f2fc:	cmp	r0, #0
   1f300:	movne	r0, #2
   1f304:	moveq	r0, #1
   1f308:	mov	r3, #0
   1f30c:	str	r3, [sp, #12]
   1f310:	str	r3, [sp, #8]
   1f314:	ldrb	r3, [r6, #8]
   1f318:	str	r3, [sp, #4]
   1f31c:	str	r0, [sp]
   1f320:	mov	r2, r4
   1f324:	mov	r3, r5
   1f328:	mov	r1, r7
   1f32c:	mov	r0, r8
   1f330:	bl	41f8 <dta_ctx_init@plt>
   1f334:	subs	r4, r0, #0
   1f338:	beq	1f348 <dta_begin_data+0x94>
   1f33c:	mov	r0, r8
   1f340:	bl	3e98 <dta_ctx_free@plt>
   1f344:	b	1f2d0 <dta_begin_data+0x1c>
   1f348:	ldrb	r3, [r8, #192]	; 0xc0
   1f34c:	tst	r3, #4
   1f350:	bne	1f450 <dta_begin_data+0x19c>
   1f354:	mov	r2, #0
   1f358:	str	r2, [fp, #-164]	; 0xffffff5c
   1f35c:	str	r2, [fp, #-160]	; 0xffffff60
   1f360:	strh	r2, [fp, #-156]	; 0xffffff64
   1f364:	ldr	r3, [r6, #8]
   1f368:	strb	r3, [fp, #-164]	; 0xffffff5c
   1f36c:	bl	3ed4 <machine_is_little_endian@plt>
   1f370:	cmp	r0, #0
   1f374:	movne	r0, #2
   1f378:	moveq	r0, #1
   1f37c:	strb	r0, [fp, #-163]	; 0xffffff5d
   1f380:	mov	r3, #1
   1f384:	strb	r3, [fp, #-162]	; 0xffffff5e
   1f388:	mov	r3, #0
   1f38c:	strb	r3, [fp, #-161]	; 0xffffff5f
   1f390:	ldr	r3, [r6, #28]
   1f394:	strh	r3, [fp, #-160]	; 0xffffff60
   1f398:	ldrh	r2, [r6, #80]	; 0x50
   1f39c:	strh	r2, [fp, #-158]	; 0xffffff62
   1f3a0:	ldrh	r2, [r6, #82]	; 0x52
   1f3a4:	strh	r2, [fp, #-156]	; 0xffffff64
   1f3a8:	cmp	r3, #32768	; 0x8000
   1f3ac:	blt	1f664 <dta_begin_data+0x3b0>
   1f3b0:	ldrb	r3, [r8, #192]	; 0xc0
   1f3b4:	tst	r3, #4
   1f3b8:	bne	1f6a0 <dta_begin_data+0x3ec>
   1f3bc:	ldr	r2, [pc, #3856]	; 202d4 <dta_begin_data+0x1020>
   1f3c0:	add	r2, pc, r2
   1f3c4:	mov	r1, r8
   1f3c8:	mov	r0, r6
   1f3cc:	bl	1e638 <dta_write_tag>
   1f3d0:	subs	r4, r0, #0
   1f3d4:	bne	1f33c <dta_begin_data+0x88>
   1f3d8:	ldr	r3, [r8, #148]	; 0x94
   1f3dc:	cmp	r3, #0
   1f3e0:	ble	1fc1c <dta_begin_data+0x968>
   1f3e4:	mov	r5, #0
   1f3e8:	mov	r9, r5
   1f3ec:	sub	r7, fp, #164	; 0xa4
   1f3f0:	mov	r1, r5
   1f3f4:	mov	r0, r6
   1f3f8:	bl	43a8 <readstat_get_variable@plt>
   1f3fc:	strh	r9, [fp, #-164]	; 0xffffff5c
   1f400:	mov	r2, r7
   1f404:	ldrb	r1, [r8, #20]
   1f408:	bl	1e2b8 <dta_typecode_for_variable>
   1f40c:	cmp	r0, #0
   1f410:	bne	201f4 <dta_begin_data+0xf40>
   1f414:	ldrh	r1, [fp, #-164]	; 0xffffff5c
   1f418:	ldr	r2, [r8, #28]
   1f41c:	lsl	r3, r5, #1
   1f420:	strh	r1, [r2, r3]
   1f424:	add	r5, r5, #1
   1f428:	ldr	r3, [r8, #148]	; 0x94
   1f42c:	cmp	r5, r3
   1f430:	blt	1f3f0 <dta_begin_data+0x13c>
   1f434:	cmp	r3, #0
   1f438:	ble	1fc1c <dta_begin_data+0x968>
   1f43c:	mov	r7, #0
   1f440:	mov	r5, r7
   1f444:	sub	r9, fp, #164	; 0xa4
   1f448:	mov	sl, #2
   1f44c:	b	1fbe8 <dta_begin_data+0x934>
   1f450:	ldr	r2, [pc, #3712]	; 202d8 <dta_begin_data+0x1024>
   1f454:	add	r2, pc, r2
   1f458:	mov	r1, r8
   1f45c:	mov	r0, r6
   1f460:	bl	1e638 <dta_write_tag>
   1f464:	subs	r4, r0, #0
   1f468:	bne	1f33c <dta_begin_data+0x88>
   1f46c:	ldr	r2, [pc, #3688]	; 202dc <dta_begin_data+0x1028>
   1f470:	add	r2, pc, r2
   1f474:	mov	r1, r8
   1f478:	mov	r0, r6
   1f47c:	bl	1e638 <dta_write_tag>
   1f480:	subs	r4, r0, #0
   1f484:	bne	1f33c <dta_begin_data+0x88>
   1f488:	ldr	r3, [r6, #8]
   1f48c:	ldr	r2, [pc, #3660]	; 202e0 <dta_begin_data+0x102c>
   1f490:	add	r2, pc, r2
   1f494:	mov	r1, #128	; 0x80
   1f498:	sub	r4, fp, #164	; 0xa4
   1f49c:	mov	r0, r4
   1f4a0:	bl	42ac <snprintf@plt>
   1f4a4:	mov	r1, r4
   1f4a8:	mov	r0, r6
   1f4ac:	bl	4180 <readstat_write_string@plt>
   1f4b0:	subs	r4, r0, #0
   1f4b4:	bne	1f33c <dta_begin_data+0x88>
   1f4b8:	bl	3ed4 <machine_is_little_endian@plt>
   1f4bc:	cmp	r0, #0
   1f4c0:	bne	1f5d8 <dta_begin_data+0x324>
   1f4c4:	ldr	r3, [pc, #3608]	; 202e4 <dta_begin_data+0x1030>
   1f4c8:	add	r3, pc, r3
   1f4cc:	ldr	r2, [pc, #3604]	; 202e8 <dta_begin_data+0x1034>
   1f4d0:	add	r2, pc, r2
   1f4d4:	str	r2, [sp, #4]
   1f4d8:	mov	r2, #3
   1f4dc:	str	r2, [sp]
   1f4e0:	ldr	r2, [pc, #3588]	; 202ec <dta_begin_data+0x1038>
   1f4e4:	add	r2, pc, r2
   1f4e8:	mov	r1, r8
   1f4ec:	mov	r0, r6
   1f4f0:	bl	1e65c <dta_write_chunk>
   1f4f4:	subs	r4, r0, #0
   1f4f8:	bne	1f33c <dta_begin_data+0x88>
   1f4fc:	ldr	r3, [r6, #8]
   1f500:	cmp	r3, #118	; 0x76
   1f504:	ble	1f5e4 <dta_begin_data+0x330>
   1f508:	ldr	r2, [r6, #28]
   1f50c:	sub	r3, fp, #36	; 0x24
   1f510:	str	r2, [r3, #-136]!	; 0xffffff78
   1f514:	ldr	r2, [pc, #3540]	; 202f0 <dta_begin_data+0x103c>
   1f518:	add	r2, pc, r2
   1f51c:	str	r2, [sp, #4]
   1f520:	mov	r2, #4
   1f524:	str	r2, [sp]
   1f528:	ldr	r2, [pc, #3524]	; 202f4 <dta_begin_data+0x1040>
   1f52c:	add	r2, pc, r2
   1f530:	mov	r1, r8
   1f534:	mov	r0, r6
   1f538:	bl	1e65c <dta_write_chunk>
   1f53c:	subs	r4, r0, #0
   1f540:	bne	1f33c <dta_begin_data+0x88>
   1f544:	ldr	r3, [r6, #8]
   1f548:	cmp	r3, #117	; 0x75
   1f54c:	ble	1f624 <dta_begin_data+0x370>
   1f550:	ldr	r0, [r6, #80]	; 0x50
   1f554:	asr	r1, r0, #31
   1f558:	sub	r3, fp, #36	; 0x24
   1f55c:	strd	r0, [r3, #-136]!	; 0xffffff78
   1f560:	ldr	r2, [pc, #3472]	; 202f8 <dta_begin_data+0x1044>
   1f564:	add	r2, pc, r2
   1f568:	str	r2, [sp, #4]
   1f56c:	mov	r2, #8
   1f570:	str	r2, [sp]
   1f574:	ldr	r2, [pc, #3456]	; 202fc <dta_begin_data+0x1048>
   1f578:	add	r2, pc, r2
   1f57c:	mov	r1, r8
   1f580:	mov	r0, r6
   1f584:	bl	1e65c <dta_write_chunk>
   1f588:	subs	r4, r0, #0
   1f58c:	bne	1f33c <dta_begin_data+0x88>
   1f590:	mov	r1, r8
   1f594:	mov	r0, r6
   1f598:	bl	1ef78 <dta_emit_header_data_label>
   1f59c:	subs	r4, r0, #0
   1f5a0:	bne	1f33c <dta_begin_data+0x88>
   1f5a4:	mov	r1, r8
   1f5a8:	mov	r0, r6
   1f5ac:	bl	1f124 <dta_emit_header_time_stamp>
   1f5b0:	subs	r4, r0, #0
   1f5b4:	bne	1f33c <dta_begin_data+0x88>
   1f5b8:	ldr	r2, [pc, #3392]	; 20300 <dta_begin_data+0x104c>
   1f5bc:	add	r2, pc, r2
   1f5c0:	mov	r1, r8
   1f5c4:	mov	r0, r6
   1f5c8:	bl	1e638 <dta_write_tag>
   1f5cc:	subs	r4, r0, #0
   1f5d0:	bne	1f33c <dta_begin_data+0x88>
   1f5d4:	b	1f3b0 <dta_begin_data+0xfc>
   1f5d8:	ldr	r3, [pc, #3364]	; 20304 <dta_begin_data+0x1050>
   1f5dc:	add	r3, pc, r3
   1f5e0:	b	1f4cc <dta_begin_data+0x218>
   1f5e4:	ldr	r2, [r6, #28]
   1f5e8:	sub	r3, fp, #36	; 0x24
   1f5ec:	strh	r2, [r3, #-136]!	; 0xffffff78
   1f5f0:	ldr	r2, [pc, #3344]	; 20308 <dta_begin_data+0x1054>
   1f5f4:	add	r2, pc, r2
   1f5f8:	str	r2, [sp, #4]
   1f5fc:	mov	r2, #2
   1f600:	str	r2, [sp]
   1f604:	ldr	r2, [pc, #3328]	; 2030c <dta_begin_data+0x1058>
   1f608:	add	r2, pc, r2
   1f60c:	mov	r1, r8
   1f610:	mov	r0, r6
   1f614:	bl	1e65c <dta_write_chunk>
   1f618:	subs	r4, r0, #0
   1f61c:	beq	1f544 <dta_begin_data+0x290>
   1f620:	b	1f33c <dta_begin_data+0x88>
   1f624:	ldr	r2, [r6, #80]	; 0x50
   1f628:	sub	r3, fp, #36	; 0x24
   1f62c:	str	r2, [r3, #-136]!	; 0xffffff78
   1f630:	ldr	r2, [pc, #3288]	; 20310 <dta_begin_data+0x105c>
   1f634:	add	r2, pc, r2
   1f638:	str	r2, [sp, #4]
   1f63c:	mov	r2, #4
   1f640:	str	r2, [sp]
   1f644:	ldr	r2, [pc, #3272]	; 20314 <dta_begin_data+0x1060>
   1f648:	add	r2, pc, r2
   1f64c:	mov	r1, r8
   1f650:	mov	r0, r6
   1f654:	bl	1e65c <dta_write_chunk>
   1f658:	subs	r4, r0, #0
   1f65c:	beq	1f590 <dta_begin_data+0x2dc>
   1f660:	b	1f33c <dta_begin_data+0x88>
   1f664:	mov	r2, #10
   1f668:	sub	r1, fp, #164	; 0xa4
   1f66c:	mov	r0, r6
   1f670:	bl	4480 <readstat_write_bytes@plt>
   1f674:	cmp	r0, #0
   1f678:	bne	1f3b0 <dta_begin_data+0xfc>
   1f67c:	mov	r1, r8
   1f680:	mov	r0, r6
   1f684:	bl	1ef78 <dta_emit_header_data_label>
   1f688:	cmp	r0, #0
   1f68c:	bne	1f3b0 <dta_begin_data+0xfc>
   1f690:	mov	r1, r8
   1f694:	mov	r0, r6
   1f698:	bl	1f124 <dta_emit_header_time_stamp>
   1f69c:	b	1f3b0 <dta_begin_data+0xfc>
   1f6a0:	mov	r2, #0
   1f6a4:	mov	r3, #0
   1f6a8:	strd	r2, [fp, #-164]	; 0xffffff5c
   1f6ac:	ldr	r4, [r6, #4]
   1f6b0:	mov	r5, #0
   1f6b4:	strd	r4, [fp, #-156]	; 0xffffff64
   1f6b8:	ldr	r1, [pc, #3160]	; 20318 <dta_begin_data+0x1064>
   1f6bc:	add	r1, pc, r1
   1f6c0:	mov	r0, r8
   1f6c4:	bl	1f098 <dta_measure_tag>
   1f6c8:	mov	r7, r0
   1f6cc:	ldr	r1, [pc, #3144]	; 2031c <dta_begin_data+0x1068>
   1f6d0:	add	r1, pc, r1
   1f6d4:	mov	r0, r8
   1f6d8:	bl	1f098 <dta_measure_tag>
   1f6dc:	add	r3, r7, r0
   1f6e0:	add	r3, r3, #112	; 0x70
   1f6e4:	adds	r4, r4, r3
   1f6e8:	adc	r5, r5, #0
   1f6ec:	strd	r4, [fp, #-148]	; 0xffffff6c
   1f6f0:	ldr	r1, [pc, #3112]	; 20320 <dta_begin_data+0x106c>
   1f6f4:	add	r1, pc, r1
   1f6f8:	mov	r0, r8
   1f6fc:	bl	1f098 <dta_measure_tag>
   1f700:	mov	r7, r0
   1f704:	ldr	sl, [r8, #148]	; 0x94
   1f708:	ldr	r3, [r8, #24]
   1f70c:	mul	r9, r3, sl
   1f710:	ldr	r1, [pc, #3084]	; 20324 <dta_begin_data+0x1070>
   1f714:	add	r1, pc, r1
   1f718:	mov	r0, r8
   1f71c:	bl	1f098 <dta_measure_tag>
   1f720:	add	r3, r7, r0
   1f724:	add	r3, r3, r9
   1f728:	adds	r4, r4, r3
   1f72c:	adc	r5, r5, #0
   1f730:	strd	r4, [fp, #-140]	; 0xffffff74
   1f734:	ldr	r1, [pc, #3052]	; 20328 <dta_begin_data+0x1074>
   1f738:	add	r1, pc, r1
   1f73c:	mov	r0, r8
   1f740:	bl	1f098 <dta_measure_tag>
   1f744:	mov	r7, r0
   1f748:	ldr	r1, [pc, #3036]	; 2032c <dta_begin_data+0x1078>
   1f74c:	add	r1, pc, r1
   1f750:	mov	r0, r8
   1f754:	bl	1f098 <dta_measure_tag>
   1f758:	add	r3, r7, r0
   1f75c:	ldr	r2, [r8, #40]	; 0x28
   1f760:	add	r3, r3, r2
   1f764:	adds	r4, r4, r3
   1f768:	adc	r5, r5, #0
   1f76c:	strd	r4, [fp, #-132]	; 0xffffff7c
   1f770:	ldr	r1, [pc, #3000]	; 20330 <dta_begin_data+0x107c>
   1f774:	add	r1, pc, r1
   1f778:	mov	r0, r8
   1f77c:	bl	1f098 <dta_measure_tag>
   1f780:	mov	r7, r0
   1f784:	ldr	r1, [pc, #2984]	; 20334 <dta_begin_data+0x1080>
   1f788:	add	r1, pc, r1
   1f78c:	mov	r0, r8
   1f790:	bl	1f098 <dta_measure_tag>
   1f794:	add	r3, r7, r0
   1f798:	ldr	r2, [r8, #48]	; 0x30
   1f79c:	add	r3, r3, r2
   1f7a0:	adds	r4, r4, r3
   1f7a4:	adc	r5, r5, #0
   1f7a8:	strd	r4, [fp, #-124]	; 0xffffff84
   1f7ac:	ldr	r1, [pc, #2948]	; 20338 <dta_begin_data+0x1084>
   1f7b0:	add	r1, pc, r1
   1f7b4:	mov	r0, r8
   1f7b8:	bl	1f098 <dta_measure_tag>
   1f7bc:	mov	r7, r0
   1f7c0:	ldr	r1, [pc, #2932]	; 2033c <dta_begin_data+0x1088>
   1f7c4:	add	r1, pc, r1
   1f7c8:	mov	r0, r8
   1f7cc:	bl	1f098 <dta_measure_tag>
   1f7d0:	add	r3, r7, r0
   1f7d4:	ldr	r2, [r8, #56]	; 0x38
   1f7d8:	add	r3, r3, r2
   1f7dc:	adds	r4, r4, r3
   1f7e0:	adc	r5, r5, #0
   1f7e4:	strd	r4, [fp, #-116]	; 0xffffff8c
   1f7e8:	ldr	r1, [pc, #2896]	; 20340 <dta_begin_data+0x108c>
   1f7ec:	add	r1, pc, r1
   1f7f0:	mov	r0, r8
   1f7f4:	bl	1f098 <dta_measure_tag>
   1f7f8:	mov	r7, r0
   1f7fc:	ldr	r1, [pc, #2880]	; 20344 <dta_begin_data+0x1090>
   1f800:	add	r1, pc, r1
   1f804:	mov	r0, r8
   1f808:	bl	1f098 <dta_measure_tag>
   1f80c:	add	r3, r7, r0
   1f810:	ldr	r2, [r8, #64]	; 0x40
   1f814:	add	r3, r3, r2
   1f818:	adds	r4, r4, r3
   1f81c:	adc	r5, r5, #0
   1f820:	strd	r4, [fp, #-108]	; 0xffffff94
   1f824:	ldr	r1, [pc, #2844]	; 20348 <dta_begin_data+0x1094>
   1f828:	add	r1, pc, r1
   1f82c:	mov	r0, r8
   1f830:	bl	1f098 <dta_measure_tag>
   1f834:	mov	r7, r0
   1f838:	ldr	r1, [pc, #2828]	; 2034c <dta_begin_data+0x1098>
   1f83c:	add	r1, pc, r1
   1f840:	mov	r0, r8
   1f844:	bl	1f098 <dta_measure_tag>
   1f848:	add	r3, r7, r0
   1f84c:	ldr	r2, [r8, #72]	; 0x48
   1f850:	add	r3, r3, r2
   1f854:	adds	r0, r4, r3
   1f858:	adc	r1, r5, #0
   1f85c:	strd	r0, [fp, #-188]	; 0xffffff44
   1f860:	strd	r0, [fp, #-100]	; 0xffffff9c
   1f864:	ldr	r7, [r6, #52]	; 0x34
   1f868:	cmp	r7, #0
   1f86c:	ble	1fb98 <dta_begin_data+0x8e4>
   1f870:	ldr	r1, [pc, #2776]	; 20350 <dta_begin_data+0x109c>
   1f874:	add	r1, pc, r1
   1f878:	mov	r0, r8
   1f87c:	bl	1f098 <dta_measure_tag>
   1f880:	ldr	r5, [r6, #48]	; 0x30
   1f884:	ldr	r3, [r8, #96]	; 0x60
   1f888:	ldr	r9, [r8, #92]	; 0x5c
   1f88c:	add	r9, r9, #1
   1f890:	add	r9, r9, r3, lsl #1
   1f894:	add	r9, r9, r0
   1f898:	ldr	r1, [pc, #2740]	; 20354 <dta_begin_data+0x10a0>
   1f89c:	add	r1, pc, r1
   1f8a0:	mov	r0, r8
   1f8a4:	bl	1f098 <dta_measure_tag>
   1f8a8:	mov	r4, r5
   1f8ac:	add	r7, r5, r7, lsl #2
   1f8b0:	mov	r5, #0
   1f8b4:	add	r9, r0, r9
   1f8b8:	ldr	r0, [r4], #4
   1f8bc:	bl	4228 <strlen@plt>
   1f8c0:	add	r0, r9, r0
   1f8c4:	add	r5, r5, r0
   1f8c8:	cmp	r7, r4
   1f8cc:	bne	1f8b8 <dta_begin_data+0x604>
   1f8d0:	ldr	r1, [pc, #2688]	; 20358 <dta_begin_data+0x10a4>
   1f8d4:	add	r1, pc, r1
   1f8d8:	mov	r0, r8
   1f8dc:	bl	1f098 <dta_measure_tag>
   1f8e0:	add	r5, r0, r5
   1f8e4:	ldr	r1, [pc, #2672]	; 2035c <dta_begin_data+0x10a8>
   1f8e8:	add	r1, pc, r1
   1f8ec:	mov	r0, r8
   1f8f0:	bl	1f098 <dta_measure_tag>
   1f8f4:	add	r0, r5, r0
   1f8f8:	ldrd	r4, [fp, #-188]	; 0xffffff44
   1f8fc:	adds	r4, r4, r0
   1f900:	adc	r5, r5, #0
   1f904:	strd	r4, [fp, #-92]	; 0xffffffa4
   1f908:	cmp	sl, #0
   1f90c:	ble	1f97c <dta_begin_data+0x6c8>
   1f910:	mov	r7, #0
   1f914:	mov	r9, r7
   1f918:	sub	sl, fp, #174	; 0xae
   1f91c:	sub	r3, fp, #172	; 0xac
   1f920:	str	r3, [fp, #-188]	; 0xffffff44
   1f924:	str	r9, [fp, #-172]	; 0xffffff54
   1f928:	mov	r1, r7
   1f92c:	mov	r0, r6
   1f930:	bl	43a8 <readstat_get_variable@plt>
   1f934:	strh	r9, [fp, #-174]	; 0xffffff52
   1f938:	mov	r2, sl
   1f93c:	ldrb	r1, [r8, #20]
   1f940:	bl	1e2b8 <dta_typecode_for_variable>
   1f944:	mov	r3, r9
   1f948:	ldr	r2, [fp, #-188]	; 0xffffff44
   1f94c:	mov	r1, r8
   1f950:	ldrh	r0, [fp, #-174]	; 0xffffff52
   1f954:	bl	4210 <dta_type_info@plt>
   1f958:	cmp	r0, #0
   1f95c:	ldreq	r3, [r8, #160]	; 0xa0
   1f960:	ldreq	r2, [fp, #-172]	; 0xffffff54
   1f964:	addeq	r3, r3, r2
   1f968:	streq	r3, [r8, #160]	; 0xa0
   1f96c:	add	r7, r7, #1
   1f970:	ldr	r3, [r8, #148]	; 0x94
   1f974:	cmp	r7, r3
   1f978:	blt	1f924 <dta_begin_data+0x670>
   1f97c:	ldr	r1, [pc, #2524]	; 20360 <dta_begin_data+0x10ac>
   1f980:	add	r1, pc, r1
   1f984:	mov	r0, r8
   1f988:	bl	1f098 <dta_measure_tag>
   1f98c:	mov	r7, r0
   1f990:	ldr	r9, [r8, #152]	; 0x98
   1f994:	ldr	r3, [r8, #160]	; 0xa0
   1f998:	mul	r9, r3, r9
   1f99c:	ldr	r1, [pc, #2496]	; 20364 <dta_begin_data+0x10b0>
   1f9a0:	add	r1, pc, r1
   1f9a4:	mov	r0, r8
   1f9a8:	bl	1f098 <dta_measure_tag>
   1f9ac:	add	r3, r7, r0
   1f9b0:	add	r3, r3, r9
   1f9b4:	adds	r4, r4, r3
   1f9b8:	adc	r5, r5, #0
   1f9bc:	strd	r4, [fp, #-84]	; 0xffffffac
   1f9c0:	ldr	r2, [r6, #64]	; 0x40
   1f9c4:	cmp	r2, #0
   1f9c8:	ble	1fba0 <dta_begin_data+0x8ec>
   1f9cc:	ldr	r1, [r6, #60]	; 0x3c
   1f9d0:	ldr	r0, [r8, #116]	; 0x74
   1f9d4:	mov	r3, r1
   1f9d8:	add	r1, r1, r2, lsl #2
   1f9dc:	mov	r7, #0
   1f9e0:	ldr	r2, [r3], #4
   1f9e4:	cmp	r0, #4
   1f9e8:	addhi	r7, r7, #20
   1f9ec:	addls	r7, r7, #16
   1f9f0:	ldr	r2, [r2, #16]
   1f9f4:	add	r7, r7, r2
   1f9f8:	cmp	r3, r1
   1f9fc:	bne	1f9e0 <dta_begin_data+0x72c>
   1fa00:	ldr	r1, [pc, #2400]	; 20368 <dta_begin_data+0x10b4>
   1fa04:	add	r1, pc, r1
   1fa08:	mov	r0, r8
   1fa0c:	bl	1f098 <dta_measure_tag>
   1fa10:	add	r7, r7, r0
   1fa14:	ldr	r1, [pc, #2384]	; 2036c <dta_begin_data+0x10b8>
   1fa18:	add	r1, pc, r1
   1fa1c:	mov	r0, r8
   1fa20:	bl	1f098 <dta_measure_tag>
   1fa24:	add	r7, r7, r0
   1fa28:	adds	r2, r4, r7
   1fa2c:	adc	r3, r5, #0
   1fa30:	strd	r2, [fp, #-204]	; 0xffffff34
   1fa34:	strd	r2, [fp, #-76]	; 0xffffffb4
   1fa38:	ldr	r1, [pc, #2352]	; 20370 <dta_begin_data+0x10bc>
   1fa3c:	add	r1, pc, r1
   1fa40:	mov	r0, r8
   1fa44:	bl	1f098 <dta_measure_tag>
   1fa48:	str	r0, [fp, #-188]	; 0xffffff44
   1fa4c:	ldr	r3, [r6, #40]	; 0x28
   1fa50:	cmp	r3, #0
   1fa54:	ble	1fb14 <dta_begin_data+0x860>
   1fa58:	mov	sl, #0
   1fa5c:	ldr	r3, [pc, #2320]	; 20374 <dta_begin_data+0x10c0>
   1fa60:	add	r3, pc, r3
   1fa64:	str	r3, [fp, #-192]	; 0xffffff40
   1fa68:	ldr	r3, [pc, #2312]	; 20378 <dta_begin_data+0x10c4>
   1fa6c:	add	r3, pc, r3
   1fa70:	str	r3, [fp, #-196]	; 0xffffff3c
   1fa74:	mov	r1, sl
   1fa78:	mov	r0, r6
   1fa7c:	bl	4450 <readstat_get_label_set@plt>
   1fa80:	mov	r9, r0
   1fa84:	ldr	r7, [r0, #264]	; 0x108
   1fa88:	cmp	r7, #0
   1fa8c:	ble	1fba8 <dta_begin_data+0x8f4>
   1fa90:	mov	r4, #0
   1fa94:	mov	r5, r4
   1fa98:	mov	r1, r5
   1fa9c:	mov	r0, r9
   1faa0:	bl	44f8 <readstat_get_value_label@plt>
   1faa4:	add	r4, r4, #1
   1faa8:	ldr	r3, [r0, #28]
   1faac:	add	r4, r4, r3
   1fab0:	add	r5, r5, #1
   1fab4:	cmp	r7, r5
   1fab8:	bne	1fa98 <dta_begin_data+0x7e4>
   1fabc:	ldr	r1, [fp, #-192]	; 0xffffff40
   1fac0:	mov	r0, r8
   1fac4:	bl	1f098 <dta_measure_tag>
   1fac8:	ldr	r5, [r8, #104]	; 0x68
   1facc:	ldr	r3, [r8, #108]	; 0x6c
   1fad0:	add	r5, r5, r3
   1fad4:	add	r5, r5, #4
   1fad8:	ldr	r3, [fp, #-188]	; 0xffffff44
   1fadc:	add	r5, r5, r3
   1fae0:	add	r5, r5, r0
   1fae4:	ldr	r1, [fp, #-196]	; 0xffffff3c
   1fae8:	mov	r0, r8
   1faec:	bl	1f098 <dta_measure_tag>
   1faf0:	add	r7, r7, #1
   1faf4:	add	r4, r4, r7, lsl #3
   1faf8:	add	r0, r0, r5
   1fafc:	add	r3, r4, r0
   1fb00:	str	r3, [fp, #-188]	; 0xffffff44
   1fb04:	add	sl, sl, #1
   1fb08:	ldr	r3, [r6, #40]	; 0x28
   1fb0c:	cmp	sl, r3
   1fb10:	blt	1fa74 <dta_begin_data+0x7c0>
   1fb14:	ldr	r1, [pc, #2144]	; 2037c <dta_begin_data+0x10c8>
   1fb18:	add	r1, pc, r1
   1fb1c:	mov	r0, r8
   1fb20:	bl	1f098 <dta_measure_tag>
   1fb24:	ldr	r3, [fp, #-188]	; 0xffffff44
   1fb28:	add	r0, r3, r0
   1fb2c:	ldrd	r4, [fp, #-204]	; 0xffffff34
   1fb30:	adds	r4, r4, r0
   1fb34:	adc	r5, r5, #0
   1fb38:	strd	r4, [fp, #-68]	; 0xffffffbc
   1fb3c:	ldr	r1, [pc, #2108]	; 20380 <dta_begin_data+0x10cc>
   1fb40:	add	r1, pc, r1
   1fb44:	mov	r0, r8
   1fb48:	bl	1f098 <dta_measure_tag>
   1fb4c:	adds	r2, r4, r0
   1fb50:	adc	r3, r5, #0
   1fb54:	mov	r0, r2
   1fb58:	mov	r1, r3
   1fb5c:	strd	r0, [fp, #-60]	; 0xffffffc4
   1fb60:	ldr	r3, [pc, #2076]	; 20384 <dta_begin_data+0x10d0>
   1fb64:	add	r3, pc, r3
   1fb68:	str	r3, [sp, #4]
   1fb6c:	mov	r3, #112	; 0x70
   1fb70:	str	r3, [sp]
   1fb74:	sub	r3, fp, #164	; 0xa4
   1fb78:	ldr	r2, [pc, #2056]	; 20388 <dta_begin_data+0x10d4>
   1fb7c:	add	r2, pc, r2
   1fb80:	mov	r1, r8
   1fb84:	mov	r0, r6
   1fb88:	bl	1e65c <dta_write_chunk>
   1fb8c:	subs	r4, r0, #0
   1fb90:	bne	1f33c <dta_begin_data+0x88>
   1fb94:	b	1f3bc <dta_begin_data+0x108>
   1fb98:	mov	r5, #0
   1fb9c:	b	1f8d0 <dta_begin_data+0x61c>
   1fba0:	mov	r7, #0
   1fba4:	b	1fa00 <dta_begin_data+0x74c>
   1fba8:	mov	r4, #0
   1fbac:	b	1fabc <dta_begin_data+0x808>
   1fbb0:	ldr	r3, [r8, #28]
   1fbb4:	ldrh	r3, [r3, r7]
   1fbb8:	strb	r3, [fp, #-164]	; 0xffffff5c
   1fbbc:	mov	r2, #1
   1fbc0:	mov	r1, r9
   1fbc4:	mov	r0, r6
   1fbc8:	bl	4480 <readstat_write_bytes@plt>
   1fbcc:	cmp	r0, #0
   1fbd0:	bne	201fc <dta_begin_data+0xf48>
   1fbd4:	add	r5, r5, #1
   1fbd8:	add	r7, r7, #2
   1fbdc:	ldr	r3, [r8, #148]	; 0x94
   1fbe0:	cmp	r5, r3
   1fbe4:	bge	1fc1c <dta_begin_data+0x968>
   1fbe8:	ldr	r3, [r8, #24]
   1fbec:	cmp	r3, #1
   1fbf0:	beq	1fbb0 <dta_begin_data+0x8fc>
   1fbf4:	cmp	r3, #2
   1fbf8:	bne	1fbd4 <dta_begin_data+0x920>
   1fbfc:	ldr	r3, [r8, #28]
   1fc00:	ldrh	r3, [r3, r7]
   1fc04:	strh	r3, [fp, #-164]	; 0xffffff5c
   1fc08:	mov	r2, sl
   1fc0c:	mov	r1, r9
   1fc10:	mov	r0, r6
   1fc14:	bl	4480 <readstat_write_bytes@plt>
   1fc18:	b	1fbcc <dta_begin_data+0x918>
   1fc1c:	ldr	r2, [pc, #1896]	; 2038c <dta_begin_data+0x10d8>
   1fc20:	add	r2, pc, r2
   1fc24:	mov	r1, r8
   1fc28:	mov	r0, r6
   1fc2c:	bl	1e638 <dta_write_tag>
   1fc30:	subs	r4, r0, #0
   1fc34:	bne	1f33c <dta_begin_data+0x88>
   1fc38:	ldr	r2, [pc, #1872]	; 20390 <dta_begin_data+0x10dc>
   1fc3c:	add	r2, pc, r2
   1fc40:	mov	r1, r8
   1fc44:	mov	r0, r6
   1fc48:	bl	1e638 <dta_write_tag>
   1fc4c:	subs	r4, r0, #0
   1fc50:	bne	1f33c <dta_begin_data+0x88>
   1fc54:	ldr	r3, [r8, #148]	; 0x94
   1fc58:	cmp	r3, #0
   1fc5c:	ble	1fc98 <dta_begin_data+0x9e4>
   1fc60:	mov	r4, #0
   1fc64:	mov	r1, r4
   1fc68:	mov	r0, r6
   1fc6c:	bl	43a8 <readstat_get_variable@plt>
   1fc70:	ldr	r3, [r8, #76]	; 0x4c
   1fc74:	ldr	ip, [r8, #36]	; 0x24
   1fc78:	mov	r2, r3
   1fc7c:	add	r1, r0, #8
   1fc80:	mla	r0, r3, r4, ip
   1fc84:	bl	42e8 <strncpy@plt>
   1fc88:	add	r4, r4, #1
   1fc8c:	ldr	r3, [r8, #148]	; 0x94
   1fc90:	cmp	r4, r3
   1fc94:	blt	1fc64 <dta_begin_data+0x9b0>
   1fc98:	ldr	r2, [r8, #40]	; 0x28
   1fc9c:	ldr	r1, [r8, #36]	; 0x24
   1fca0:	mov	r0, r6
   1fca4:	bl	4480 <readstat_write_bytes@plt>
   1fca8:	subs	r4, r0, #0
   1fcac:	bne	1f33c <dta_begin_data+0x88>
   1fcb0:	ldr	r2, [pc, #1756]	; 20394 <dta_begin_data+0x10e0>
   1fcb4:	add	r2, pc, r2
   1fcb8:	mov	r1, r8
   1fcbc:	mov	r0, r6
   1fcc0:	bl	1e638 <dta_write_tag>
   1fcc4:	subs	r4, r0, #0
   1fcc8:	bne	1f33c <dta_begin_data+0x88>
   1fccc:	ldr	r2, [pc, #1732]	; 20398 <dta_begin_data+0x10e4>
   1fcd0:	add	r2, pc, r2
   1fcd4:	mov	r1, r8
   1fcd8:	mov	r0, r6
   1fcdc:	bl	1e638 <dta_write_tag>
   1fce0:	subs	r4, r0, #0
   1fce4:	bne	1f33c <dta_begin_data+0x88>
   1fce8:	ldr	r2, [r8, #48]	; 0x30
   1fcec:	mov	r1, #0
   1fcf0:	ldr	r0, [r8, #44]	; 0x2c
   1fcf4:	bl	42d0 <memset@plt>
   1fcf8:	ldr	r2, [r8, #48]	; 0x30
   1fcfc:	ldr	r1, [r8, #44]	; 0x2c
   1fd00:	mov	r0, r6
   1fd04:	bl	4480 <readstat_write_bytes@plt>
   1fd08:	subs	r4, r0, #0
   1fd0c:	bne	1f33c <dta_begin_data+0x88>
   1fd10:	ldr	r2, [pc, #1668]	; 2039c <dta_begin_data+0x10e8>
   1fd14:	add	r2, pc, r2
   1fd18:	mov	r1, r8
   1fd1c:	mov	r0, r6
   1fd20:	bl	1e638 <dta_write_tag>
   1fd24:	subs	r4, r0, #0
   1fd28:	bne	1f33c <dta_begin_data+0x88>
   1fd2c:	ldr	r2, [pc, #1644]	; 203a0 <dta_begin_data+0x10ec>
   1fd30:	add	r2, pc, r2
   1fd34:	mov	r1, r8
   1fd38:	mov	r0, r6
   1fd3c:	bl	1e638 <dta_write_tag>
   1fd40:	subs	r4, r0, #0
   1fd44:	bne	1f33c <dta_begin_data+0x88>
   1fd48:	ldr	r3, [r8, #148]	; 0x94
   1fd4c:	cmp	r3, #0
   1fd50:	ble	1fe1c <dta_begin_data+0xb68>
   1fd54:	mov	r7, #0
   1fd58:	ldr	r3, [pc, #1604]	; 203a4 <dta_begin_data+0x10f0>
   1fd5c:	add	r3, pc, r3
   1fd60:	str	r3, [fp, #-188]	; 0xffffff44
   1fd64:	ldr	sl, [pc, #1596]	; 203a8 <dta_begin_data+0x10f4>
   1fd68:	add	sl, pc, sl
   1fd6c:	ldr	r9, [pc, #1592]	; 203ac <dta_begin_data+0x10f8>
   1fd70:	add	r9, pc, r9
   1fd74:	ldr	r3, [pc, #1588]	; 203b0 <dta_begin_data+0x10fc>
   1fd78:	add	r3, pc, r3
   1fd7c:	str	r3, [fp, #-192]	; 0xffffff40
   1fd80:	ldr	r3, [pc, #1580]	; 203b4 <dta_begin_data+0x1100>
   1fd84:	add	r3, pc, r3
   1fd88:	str	r3, [fp, #-196]	; 0xffffff3c
   1fd8c:	ldr	r3, [pc, #1572]	; 203b8 <dta_begin_data+0x1104>
   1fd90:	add	r3, pc, r3
   1fd94:	str	r3, [fp, #-204]	; 0xffffff34
   1fd98:	b	20254 <dta_begin_data+0xfa0>
   1fd9c:	ldr	r4, [r0, #2136]	; 0x858
   1fda0:	ldr	r0, [r0]
   1fda4:	bl	3e44 <readstat_type_class@plt>
   1fda8:	cmp	r0, #0
   1fdac:	beq	20204 <dta_begin_data+0xf50>
   1fdb0:	cmp	r4, #0
   1fdb4:	bne	1fdec <dta_begin_data+0xb38>
   1fdb8:	ldr	r4, [r5]
   1fdbc:	sub	r3, r4, #1
   1fdc0:	cmp	r3, #1
   1fdc4:	movhi	r3, #103	; 0x67
   1fdc8:	bls	1fe14 <dta_begin_data+0xb60>
   1fdcc:	cmp	r4, #3
   1fdd0:	moveq	r4, #12
   1fdd4:	beq	1fde4 <dta_begin_data+0xb30>
   1fdd8:	cmp	r4, #5
   1fddc:	moveq	r4, #10
   1fde0:	movne	r4, #9
   1fde4:	cmp	r3, #103	; 0x67
   1fde8:	bne	2020c <dta_begin_data+0xf58>
   1fdec:	ldr	r3, [r5, #2132]	; 0x854
   1fdf0:	cmp	r3, #1
   1fdf4:	ldr	r3, [fp, #-196]	; 0xffffff3c
   1fdf8:	ldr	r2, [fp, #-204]	; 0xffffff34
   1fdfc:	moveq	r2, r3
   1fe00:	mov	r3, r4
   1fe04:	ldr	r1, [fp, #-192]	; 0xffffff40
   1fe08:	sub	r0, fp, #164	; 0xa4
   1fe0c:	bl	4414 <sprintf@plt>
   1fe10:	b	2022c <dta_begin_data+0xf78>
   1fe14:	mov	r4, #8
   1fe18:	b	1fdec <dta_begin_data+0xb38>
   1fe1c:	ldr	r2, [r8, #56]	; 0x38
   1fe20:	ldr	r1, [r8, #52]	; 0x34
   1fe24:	mov	r0, r6
   1fe28:	bl	4480 <readstat_write_bytes@plt>
   1fe2c:	subs	r4, r0, #0
   1fe30:	bne	1f33c <dta_begin_data+0x88>
   1fe34:	ldr	r2, [pc, #1408]	; 203bc <dta_begin_data+0x1108>
   1fe38:	add	r2, pc, r2
   1fe3c:	mov	r1, r8
   1fe40:	mov	r0, r6
   1fe44:	bl	1e638 <dta_write_tag>
   1fe48:	subs	r4, r0, #0
   1fe4c:	bne	1f33c <dta_begin_data+0x88>
   1fe50:	ldr	r2, [pc, #1384]	; 203c0 <dta_begin_data+0x110c>
   1fe54:	add	r2, pc, r2
   1fe58:	mov	r1, r8
   1fe5c:	mov	r0, r6
   1fe60:	bl	1e638 <dta_write_tag>
   1fe64:	subs	r4, r0, #0
   1fe68:	moveq	r4, #0
   1fe6c:	moveq	r5, r4
   1fe70:	beq	1feac <dta_begin_data+0xbf8>
   1fe74:	b	1f33c <dta_begin_data+0x88>
   1fe78:	mov	r1, r4
   1fe7c:	mov	r0, r6
   1fe80:	bl	43a8 <readstat_get_variable@plt>
   1fe84:	ldr	r1, [r0, #1588]	; 0x634
   1fe88:	cmp	r1, #0
   1fe8c:	beq	1ffd4 <dta_begin_data+0xd20>
   1fe90:	ldr	r3, [r8, #84]	; 0x54
   1fe94:	ldr	r0, [r8, #60]	; 0x3c
   1fe98:	mov	r2, r3
   1fe9c:	add	r1, r1, #4
   1fea0:	mla	r0, r3, r4, r0
   1fea4:	bl	42e8 <strncpy@plt>
   1fea8:	add	r4, r4, #1
   1feac:	ldr	r3, [r8, #148]	; 0x94
   1feb0:	cmp	r4, r3
   1feb4:	blt	1fe78 <dta_begin_data+0xbc4>
   1feb8:	ldr	r2, [r8, #64]	; 0x40
   1febc:	ldr	r1, [r8, #60]	; 0x3c
   1fec0:	mov	r0, r6
   1fec4:	bl	4480 <readstat_write_bytes@plt>
   1fec8:	subs	r4, r0, #0
   1fecc:	bne	1f33c <dta_begin_data+0x88>
   1fed0:	ldr	r2, [pc, #1260]	; 203c4 <dta_begin_data+0x1110>
   1fed4:	add	r2, pc, r2
   1fed8:	mov	r1, r8
   1fedc:	mov	r0, r6
   1fee0:	bl	1e638 <dta_write_tag>
   1fee4:	subs	r4, r0, #0
   1fee8:	bne	1f33c <dta_begin_data+0x88>
   1feec:	ldr	r2, [pc, #1236]	; 203c8 <dta_begin_data+0x1114>
   1fef0:	add	r2, pc, r2
   1fef4:	mov	r1, r8
   1fef8:	mov	r0, r6
   1fefc:	bl	1e638 <dta_write_tag>
   1ff00:	subs	r4, r0, #0
   1ff04:	bne	1f33c <dta_begin_data+0x88>
   1ff08:	ldr	r3, [r8, #148]	; 0x94
   1ff0c:	cmp	r3, #0
   1ff10:	ble	1ff4c <dta_begin_data+0xc98>
   1ff14:	mov	r4, #0
   1ff18:	mov	r1, r4
   1ff1c:	mov	r0, r6
   1ff20:	bl	43a8 <readstat_get_variable@plt>
   1ff24:	ldr	r3, [r8, #88]	; 0x58
   1ff28:	ldr	ip, [r8, #68]	; 0x44
   1ff2c:	mov	r2, r3
   1ff30:	add	r1, r0, #564	; 0x234
   1ff34:	mla	r0, r3, r4, ip
   1ff38:	bl	42e8 <strncpy@plt>
   1ff3c:	add	r4, r4, #1
   1ff40:	ldr	r3, [r8, #148]	; 0x94
   1ff44:	cmp	r4, r3
   1ff48:	blt	1ff18 <dta_begin_data+0xc64>
   1ff4c:	ldr	r2, [r8, #72]	; 0x48
   1ff50:	ldr	r1, [r8, #68]	; 0x44
   1ff54:	mov	r0, r6
   1ff58:	bl	4480 <readstat_write_bytes@plt>
   1ff5c:	subs	r4, r0, #0
   1ff60:	bne	1f33c <dta_begin_data+0x88>
   1ff64:	ldr	r2, [pc, #1120]	; 203cc <dta_begin_data+0x1118>
   1ff68:	add	r2, pc, r2
   1ff6c:	mov	r1, r8
   1ff70:	mov	r0, r6
   1ff74:	bl	1e638 <dta_write_tag>
   1ff78:	subs	r4, r0, #0
   1ff7c:	bne	1f33c <dta_begin_data+0x88>
   1ff80:	str	sp, [fp, #-188]	; 0xffffff44
   1ff84:	ldr	r3, [r8, #96]	; 0x60
   1ff88:	add	r3, r3, #7
   1ff8c:	bic	r3, r3, #7
   1ff90:	sub	sp, sp, r3
   1ff94:	add	r3, sp, #16
   1ff98:	str	r3, [fp, #-196]	; 0xffffff3c
   1ff9c:	ldr	r3, [r8, #92]	; 0x5c
   1ffa0:	cmp	r3, #0
   1ffa4:	bne	1fff0 <dta_begin_data+0xd3c>
   1ffa8:	ldr	sp, [fp, #-188]	; 0xffffff44
   1ffac:	ldr	r2, [pc, #1052]	; 203d0 <dta_begin_data+0x111c>
   1ffb0:	add	r2, pc, r2
   1ffb4:	mov	r1, r8
   1ffb8:	mov	r0, r6
   1ffbc:	bl	1e638 <dta_write_tag>
   1ffc0:	mov	r4, r0
   1ffc4:	cmp	r4, #0
   1ffc8:	streq	r8, [r6, #300]	; 0x12c
   1ffcc:	beq	1f2d0 <dta_begin_data+0x1c>
   1ffd0:	b	1f33c <dta_begin_data+0x88>
   1ffd4:	ldr	r3, [r8, #84]	; 0x54
   1ffd8:	ldr	r0, [r8, #60]	; 0x3c
   1ffdc:	mov	r2, r3
   1ffe0:	mov	r1, r5
   1ffe4:	mla	r0, r3, r4, r0
   1ffe8:	bl	42d0 <memset@plt>
   1ffec:	b	1fea8 <dta_begin_data+0xbf4>
   1fff0:	ldr	r2, [pc, #988]	; 203d4 <dta_begin_data+0x1120>
   1fff4:	add	r2, pc, r2
   1fff8:	mov	r1, r8
   1fffc:	mov	r0, r6
   20000:	bl	1e638 <dta_write_tag>
   20004:	subs	r4, r0, #0
   20008:	bne	20290 <dta_begin_data+0xfdc>
   2000c:	mov	r5, #0
   20010:	mov	r9, #1
   20014:	sub	r3, fp, #164	; 0xa4
   20018:	str	r3, [fp, #-192]	; 0xffffff40
   2001c:	ldr	r3, [pc, #948]	; 203d8 <dta_begin_data+0x1124>
   20020:	add	r3, pc, r3
   20024:	str	r3, [fp, #-204]	; 0xffffff34
   20028:	ldr	r3, [pc, #940]	; 203dc <dta_begin_data+0x1128>
   2002c:	add	r3, pc, r3
   20030:	str	r3, [fp, #-208]	; 0xffffff30
   20034:	ldr	r3, [pc, #932]	; 203e0 <dta_begin_data+0x112c>
   20038:	add	r3, pc, r3
   2003c:	str	r3, [fp, #-212]	; 0xffffff2c
   20040:	ldr	r3, [pc, #924]	; 203e4 <dta_begin_data+0x1130>
   20044:	add	r3, pc, r3
   20048:	str	r3, [fp, #-216]	; 0xffffff28
   2004c:	b	20128 <dta_begin_data+0xe74>
   20050:	strb	r9, [fp, #-164]	; 0xffffff5c
   20054:	mov	r2, r9
   20058:	ldr	r1, [fp, #-192]	; 0xffffff40
   2005c:	mov	r0, r6
   20060:	bl	4480 <readstat_write_bytes@plt>
   20064:	cmp	r0, #0
   20068:	bne	2028c <dta_begin_data+0xfd8>
   2006c:	lsl	r7, r5, #2
   20070:	ldr	r3, [r6, #48]	; 0x30
   20074:	ldr	r0, [r3, r5, lsl #2]
   20078:	bl	4228 <strlen@plt>
   2007c:	mov	r4, r0
   20080:	ldr	r3, [r8, #92]	; 0x5c
   20084:	cmp	r3, #2
   20088:	beq	20154 <dta_begin_data+0xea0>
   2008c:	cmp	r3, #4
   20090:	beq	20184 <dta_begin_data+0xed0>
   20094:	ldr	sl, [r8, #96]	; 0x60
   20098:	mov	r2, sl
   2009c:	ldr	r1, [fp, #-208]	; 0xffffff30
   200a0:	ldr	r0, [fp, #-196]	; 0xffffff3c
   200a4:	bl	42e8 <strncpy@plt>
   200a8:	mov	r2, sl
   200ac:	ldr	sl, [fp, #-196]	; 0xffffff3c
   200b0:	mov	r1, sl
   200b4:	mov	r0, r6
   200b8:	bl	4480 <readstat_write_bytes@plt>
   200bc:	cmp	r0, #0
   200c0:	bne	20298 <dta_begin_data+0xfe4>
   200c4:	add	r5, r5, #1
   200c8:	mov	r3, r5
   200cc:	ldr	r2, [fp, #-212]	; 0xffffff2c
   200d0:	ldr	r1, [r8, #96]	; 0x60
   200d4:	mov	r0, sl
   200d8:	bl	42ac <snprintf@plt>
   200dc:	ldr	r2, [r8, #96]	; 0x60
   200e0:	mov	r1, sl
   200e4:	mov	r0, r6
   200e8:	bl	4480 <readstat_write_bytes@plt>
   200ec:	cmp	r0, #0
   200f0:	bne	202a0 <dta_begin_data+0xfec>
   200f4:	ldr	r3, [r6, #48]	; 0x30
   200f8:	add	r2, r4, #1
   200fc:	ldr	r1, [r3, r7]
   20100:	mov	r0, r6
   20104:	bl	4480 <readstat_write_bytes@plt>
   20108:	cmp	r0, #0
   2010c:	bne	202a8 <dta_begin_data+0xff4>
   20110:	ldr	r2, [fp, #-216]	; 0xffffff28
   20114:	mov	r1, r8
   20118:	mov	r0, r6
   2011c:	bl	1e638 <dta_write_tag>
   20120:	cmp	r0, #0
   20124:	bne	202b0 <dta_begin_data+0xffc>
   20128:	ldr	r3, [r6, #52]	; 0x34
   2012c:	cmp	r5, r3
   20130:	bge	201a8 <dta_begin_data+0xef4>
   20134:	ldrb	r3, [r8, #192]	; 0xc0
   20138:	tst	r3, #4
   2013c:	beq	20050 <dta_begin_data+0xd9c>
   20140:	ldr	r2, [fp, #-204]	; 0xffffff34
   20144:	mov	r1, r8
   20148:	mov	r0, r6
   2014c:	bl	1e638 <dta_write_tag>
   20150:	b	20064 <dta_begin_data+0xdb0>
   20154:	ldr	r3, [r8, #96]	; 0x60
   20158:	add	r3, r0, r3, lsl #1
   2015c:	add	r3, r3, #1
   20160:	strh	r3, [fp, #-164]	; 0xffffff5c
   20164:	mov	r2, #2
   20168:	ldr	r1, [fp, #-192]	; 0xffffff40
   2016c:	mov	r0, r6
   20170:	bl	4480 <readstat_write_bytes@plt>
   20174:	cmp	r0, #0
   20178:	beq	20094 <dta_begin_data+0xde0>
   2017c:	mov	r4, r0
   20180:	b	20290 <dta_begin_data+0xfdc>
   20184:	ldr	r3, [r8, #96]	; 0x60
   20188:	add	r3, r0, r3, lsl #1
   2018c:	add	r3, r3, #1
   20190:	str	r3, [fp, #-164]	; 0xffffff5c
   20194:	mov	r2, #4
   20198:	ldr	r1, [fp, #-192]	; 0xffffff40
   2019c:	mov	r0, r6
   201a0:	bl	4480 <readstat_write_bytes@plt>
   201a4:	b	20174 <dta_begin_data+0xec0>
   201a8:	ldrb	r3, [r8, #192]	; 0xc0
   201ac:	tst	r3, #4
   201b0:	beq	201dc <dta_begin_data+0xf28>
   201b4:	ldr	r2, [pc, #556]	; 203e8 <dta_begin_data+0x1134>
   201b8:	add	r2, pc, r2
   201bc:	mov	r1, r8
   201c0:	mov	r0, r6
   201c4:	bl	1e638 <dta_write_tag>
   201c8:	mov	r4, r0
   201cc:	ldr	sp, [fp, #-188]	; 0xffffff44
   201d0:	cmp	r4, #0
   201d4:	bne	1f33c <dta_begin_data+0x88>
   201d8:	b	1ffac <dta_begin_data+0xcf8>
   201dc:	ldr	r1, [r8, #92]	; 0x5c
   201e0:	add	r1, r1, #1
   201e4:	mov	r0, r6
   201e8:	bl	403c <readstat_write_zeros@plt>
   201ec:	mov	r4, r0
   201f0:	b	201cc <dta_begin_data+0xf18>
   201f4:	mov	r4, r0
   201f8:	b	1f33c <dta_begin_data+0x88>
   201fc:	mov	r4, r0
   20200:	b	1f33c <dta_begin_data+0x88>
   20204:	cmp	r4, #0
   20208:	beq	202b8 <dta_begin_data+0x1004>
   2020c:	ldr	r3, [r5, #2132]	; 0x854
   20210:	cmp	r3, #1
   20214:	moveq	r2, sl
   20218:	movne	r2, r9
   2021c:	mov	r3, r4
   20220:	ldr	r1, [fp, #-188]	; 0xffffff44
   20224:	sub	r0, fp, #164	; 0xa4
   20228:	bl	4414 <sprintf@plt>
   2022c:	ldr	r3, [r8, #80]	; 0x50
   20230:	ldr	r0, [r8, #52]	; 0x34
   20234:	mov	r2, r3
   20238:	sub	r1, fp, #164	; 0xa4
   2023c:	mla	r0, r3, r7, r0
   20240:	bl	42e8 <strncpy@plt>
   20244:	add	r7, r7, #1
   20248:	ldr	r3, [r8, #148]	; 0x94
   2024c:	cmp	r7, r3
   20250:	bge	1fe1c <dta_begin_data+0xb68>
   20254:	mov	r1, r7
   20258:	mov	r0, r6
   2025c:	bl	43a8 <readstat_get_variable@plt>
   20260:	mov	r5, r0
   20264:	ldrb	r3, [r0, #308]	; 0x134
   20268:	cmp	r3, #0
   2026c:	beq	1fd9c <dta_begin_data+0xae8>
   20270:	ldr	r3, [r8, #80]	; 0x50
   20274:	ldr	r0, [r8, #52]	; 0x34
   20278:	mov	r2, r3
   2027c:	add	r1, r5, #308	; 0x134
   20280:	mla	r0, r3, r7, r0
   20284:	bl	42e8 <strncpy@plt>
   20288:	b	20244 <dta_begin_data+0xf90>
   2028c:	mov	r4, r0
   20290:	ldr	sp, [fp, #-188]	; 0xffffff44
   20294:	b	1ffc4 <dta_begin_data+0xd10>
   20298:	mov	r4, r0
   2029c:	b	20290 <dta_begin_data+0xfdc>
   202a0:	mov	r4, r0
   202a4:	b	20290 <dta_begin_data+0xfdc>
   202a8:	mov	r4, r0
   202ac:	b	20290 <dta_begin_data+0xfdc>
   202b0:	mov	r4, r0
   202b4:	b	20290 <dta_begin_data+0xfdc>
   202b8:	ldr	r4, [r5]
   202bc:	sub	r3, r4, #1
   202c0:	cmp	r3, #1
   202c4:	movhi	r3, #115	; 0x73
   202c8:	bhi	1fdcc <dta_begin_data+0xb18>
   202cc:	mov	r4, #8
   202d0:	b	2020c <dta_begin_data+0xf58>
   202d4:	.word	0x00007f9c
   202d8:	.word	0x00007c94
   202dc:	.word	0x00007c84
   202e0:	.word	0x00007f6c
   202e4:	.word	0x00007c60
   202e8:	.word	0x00007c48
   202ec:	.word	0x00007c28
   202f0:	.word	0x00007c1c
   202f4:	.word	0x00007c04
   202f8:	.word	0x00007bdc
   202fc:	.word	0x00007bc4
   20300:	.word	0x00007bbc
   20304:	.word	0x00007b50
   20308:	.word	0x00007b40
   2030c:	.word	0x00007b28
   20310:	.word	0x00007b0c
   20314:	.word	0x00007af4
   20318:	.word	0x00007ac8
   2031c:	.word	0x00007abc
   20320:	.word	0x00007c68
   20324:	.word	0x00007c5c
   20328:	.word	0x00007a5c
   2032c:	.word	0x00007a54
   20330:	.word	0x00007a38
   20334:	.word	0x00007a30
   20338:	.word	0x00007a14
   2033c:	.word	0x00007a0c
   20340:	.word	0x000079f0
   20344:	.word	0x000079f0
   20348:	.word	0x000079e0
   2034c:	.word	0x000079e0
   20350:	.word	0x00007a18
   20354:	.word	0x00007a08
   20358:	.word	0x0000799c
   2035c:	.word	0x00007b2c
   20360:	.word	0x00007974
   20364:	.word	0x0000795c
   20368:	.word	0x000078d8
   2036c:	.word	0x0000799c
   20370:	.word	0x00007900
   20374:	.word	0x000078ec
   20378:	.word	0x000078e8
   2037c:	.word	0x000078a8
   20380:	.word	0x00007890
   20384:	.word	0x00007628
   20388:	.word	0x00007608
   2038c:	.word	0x00007750
   20390:	.word	0x00007558
   20394:	.word	0x000074ec
   20398:	.word	0x000074dc
   2039c:	.word	0x000074a4
   203a0:	.word	0x00007494
   203a4:	.word	0x000076d8
   203a8:	.word	0x00007690
   203ac:	.word	0x00005c08
   203b0:	.word	0x000076b0
   203b4:	.word	0x00007674
   203b8:	.word	0x00005be8
   203bc:	.word	0x00007398
   203c0:	.word	0x00007388
   203c4:	.word	0x0000731c
   203c8:	.word	0x00007318
   203cc:	.word	0x000072b4
   203d0:	.word	0x00007344
   203d4:	.word	0x0000727c
   203d8:	.word	0x0000726c
   203dc:	.word	0x00007268
   203e0:	.word	0x00007264
   203e4:	.word	0x00007260
   203e8:	.word	0x0000725c

000203ec <dta_validate_name>:
   203ec:	push	{r4, r5, lr}
   203f0:	sub	sp, sp, #12
   203f4:	mov	r4, r0
   203f8:	mov	r5, r2
   203fc:	bl	4228 <strlen@plt>
   20400:	cmp	r0, r5
   20404:	movhi	r0, #28
   20408:	bls	20414 <dta_validate_name+0x28>
   2040c:	add	sp, sp, #12
   20410:	pop	{r4, r5, pc}
   20414:	ldrb	r0, [r4]
   20418:	cmp	r0, #0
   2041c:	moveq	r0, #38	; 0x26
   20420:	beq	2040c <dta_validate_name+0x20>
   20424:	mov	r1, r4
   20428:	mov	r3, r0
   2042c:	b	2043c <dta_validate_name+0x50>
   20430:	ldrb	r3, [r1, #1]!
   20434:	cmp	r3, #0
   20438:	beq	20470 <dta_validate_name+0x84>
   2043c:	cmp	r3, #95	; 0x5f
   20440:	beq	20430 <dta_validate_name+0x44>
   20444:	bic	r2, r3, #32
   20448:	sub	r2, r2, #65	; 0x41
   2044c:	uxtb	r2, r2
   20450:	cmp	r2, #25
   20454:	bls	20430 <dta_validate_name+0x44>
   20458:	sub	r3, r3, #48	; 0x30
   2045c:	uxtb	r3, r3
   20460:	cmp	r3, #9
   20464:	bls	20430 <dta_validate_name+0x44>
   20468:	mov	r0, #26
   2046c:	b	2040c <dta_validate_name+0x20>
   20470:	cmp	r0, #95	; 0x5f
   20474:	beq	20490 <dta_validate_name+0xa4>
   20478:	bic	r3, r0, #32
   2047c:	sub	r3, r3, #65	; 0x41
   20480:	uxtb	r3, r3
   20484:	cmp	r3, #25
   20488:	movhi	r0, #25
   2048c:	bhi	2040c <dta_validate_name+0x20>
   20490:	ldr	r1, [pc, #588]	; 206e4 <dta_validate_name+0x2f8>
   20494:	add	r1, pc, r1
   20498:	mov	r0, r4
   2049c:	bl	3e20 <strcmp@plt>
   204a0:	cmp	r0, #0
   204a4:	moveq	r0, #27
   204a8:	beq	2040c <dta_validate_name+0x20>
   204ac:	ldr	r1, [pc, #564]	; 206e8 <dta_validate_name+0x2fc>
   204b0:	add	r1, pc, r1
   204b4:	mov	r0, r4
   204b8:	bl	3e20 <strcmp@plt>
   204bc:	cmp	r0, #0
   204c0:	moveq	r0, #27
   204c4:	beq	2040c <dta_validate_name+0x20>
   204c8:	ldr	r1, [pc, #540]	; 206ec <dta_validate_name+0x300>
   204cc:	add	r1, pc, r1
   204d0:	mov	r0, r4
   204d4:	bl	3e20 <strcmp@plt>
   204d8:	cmp	r0, #0
   204dc:	moveq	r0, #27
   204e0:	beq	2040c <dta_validate_name+0x20>
   204e4:	ldr	r1, [pc, #516]	; 206f0 <dta_validate_name+0x304>
   204e8:	add	r1, pc, r1
   204ec:	mov	r0, r4
   204f0:	bl	3e20 <strcmp@plt>
   204f4:	cmp	r0, #0
   204f8:	moveq	r0, #27
   204fc:	beq	2040c <dta_validate_name+0x20>
   20500:	ldr	r1, [pc, #492]	; 206f4 <dta_validate_name+0x308>
   20504:	add	r1, pc, r1
   20508:	mov	r0, r4
   2050c:	bl	3e20 <strcmp@plt>
   20510:	cmp	r0, #0
   20514:	moveq	r0, #27
   20518:	beq	2040c <dta_validate_name+0x20>
   2051c:	ldr	r1, [pc, #468]	; 206f8 <dta_validate_name+0x30c>
   20520:	add	r1, pc, r1
   20524:	mov	r0, r4
   20528:	bl	3e20 <strcmp@plt>
   2052c:	cmp	r0, #0
   20530:	moveq	r0, #27
   20534:	beq	2040c <dta_validate_name+0x20>
   20538:	ldr	r1, [pc, #444]	; 206fc <dta_validate_name+0x310>
   2053c:	add	r1, pc, r1
   20540:	mov	r0, r4
   20544:	bl	3e20 <strcmp@plt>
   20548:	cmp	r0, #0
   2054c:	moveq	r0, #27
   20550:	beq	2040c <dta_validate_name+0x20>
   20554:	ldr	r1, [pc, #420]	; 20700 <dta_validate_name+0x314>
   20558:	add	r1, pc, r1
   2055c:	mov	r0, r4
   20560:	bl	3e20 <strcmp@plt>
   20564:	cmp	r0, #0
   20568:	moveq	r0, #27
   2056c:	beq	2040c <dta_validate_name+0x20>
   20570:	ldr	r1, [pc, #396]	; 20704 <dta_validate_name+0x318>
   20574:	add	r1, pc, r1
   20578:	mov	r0, r4
   2057c:	bl	3e20 <strcmp@plt>
   20580:	cmp	r0, #0
   20584:	moveq	r0, #27
   20588:	beq	2040c <dta_validate_name+0x20>
   2058c:	ldr	r1, [pc, #372]	; 20708 <dta_validate_name+0x31c>
   20590:	add	r1, pc, r1
   20594:	mov	r0, r4
   20598:	bl	3e20 <strcmp@plt>
   2059c:	cmp	r0, #0
   205a0:	moveq	r0, #27
   205a4:	beq	2040c <dta_validate_name+0x20>
   205a8:	ldr	r1, [pc, #348]	; 2070c <dta_validate_name+0x320>
   205ac:	add	r1, pc, r1
   205b0:	mov	r0, r4
   205b4:	bl	3e20 <strcmp@plt>
   205b8:	cmp	r0, #0
   205bc:	moveq	r0, #27
   205c0:	beq	2040c <dta_validate_name+0x20>
   205c4:	ldr	r1, [pc, #324]	; 20710 <dta_validate_name+0x324>
   205c8:	add	r1, pc, r1
   205cc:	mov	r0, r4
   205d0:	bl	3e20 <strcmp@plt>
   205d4:	cmp	r0, #0
   205d8:	moveq	r0, #27
   205dc:	beq	2040c <dta_validate_name+0x20>
   205e0:	ldr	r1, [pc, #300]	; 20714 <dta_validate_name+0x328>
   205e4:	add	r1, pc, r1
   205e8:	mov	r0, r4
   205ec:	bl	3e20 <strcmp@plt>
   205f0:	cmp	r0, #0
   205f4:	moveq	r0, #27
   205f8:	beq	2040c <dta_validate_name+0x20>
   205fc:	ldr	r1, [pc, #276]	; 20718 <dta_validate_name+0x32c>
   20600:	add	r1, pc, r1
   20604:	mov	r0, r4
   20608:	bl	3e20 <strcmp@plt>
   2060c:	cmp	r0, #0
   20610:	moveq	r0, #27
   20614:	beq	2040c <dta_validate_name+0x20>
   20618:	ldr	r1, [pc, #252]	; 2071c <dta_validate_name+0x330>
   2061c:	add	r1, pc, r1
   20620:	mov	r0, r4
   20624:	bl	3e20 <strcmp@plt>
   20628:	cmp	r0, #0
   2062c:	moveq	r0, #27
   20630:	beq	2040c <dta_validate_name+0x20>
   20634:	ldr	r1, [pc, #228]	; 20720 <dta_validate_name+0x334>
   20638:	add	r1, pc, r1
   2063c:	mov	r0, r4
   20640:	bl	3e20 <strcmp@plt>
   20644:	cmp	r0, #0
   20648:	moveq	r0, #27
   2064c:	beq	2040c <dta_validate_name+0x20>
   20650:	ldr	r1, [pc, #204]	; 20724 <dta_validate_name+0x338>
   20654:	add	r1, pc, r1
   20658:	mov	r0, r4
   2065c:	bl	3e20 <strcmp@plt>
   20660:	cmp	r0, #0
   20664:	moveq	r0, #27
   20668:	beq	2040c <dta_validate_name+0x20>
   2066c:	ldr	r1, [pc, #180]	; 20728 <dta_validate_name+0x33c>
   20670:	add	r1, pc, r1
   20674:	mov	r0, r4
   20678:	bl	3e20 <strcmp@plt>
   2067c:	cmp	r0, #0
   20680:	moveq	r0, #27
   20684:	beq	2040c <dta_validate_name+0x20>
   20688:	ldr	r1, [pc, #156]	; 2072c <dta_validate_name+0x340>
   2068c:	add	r1, pc, r1
   20690:	mov	r0, r4
   20694:	bl	3e20 <strcmp@plt>
   20698:	cmp	r0, #0
   2069c:	moveq	r0, #27
   206a0:	beq	2040c <dta_validate_name+0x20>
   206a4:	ldr	r1, [pc, #132]	; 20730 <dta_validate_name+0x344>
   206a8:	add	r1, pc, r1
   206ac:	mov	r0, r4
   206b0:	bl	3e20 <strcmp@plt>
   206b4:	cmp	r0, #0
   206b8:	moveq	r0, #27
   206bc:	beq	2040c <dta_validate_name+0x20>
   206c0:	add	r2, sp, #4
   206c4:	ldr	r1, [pc, #104]	; 20734 <dta_validate_name+0x348>
   206c8:	add	r1, pc, r1
   206cc:	mov	r0, r4
   206d0:	bl	42b8 <__isoc99_sscanf@plt>
   206d4:	cmp	r0, #1
   206d8:	moveq	r0, #27
   206dc:	movne	r0, #0
   206e0:	b	2040c <dta_validate_name+0x20>
   206e4:	.word	0x00007028
   206e8:	.word	0x00006f8c
   206ec:	.word	0x00006f74
   206f0:	.word	0x00006f60
   206f4:	.word	0x00006f4c
   206f8:	.word	0x00006f38
   206fc:	.word	0x00006f24
   20700:	.word	0x00006f10
   20704:	.word	0x00006ef8
   20708:	.word	0x00006ee0
   2070c:	.word	0x00006ec8
   20710:	.word	0x00006eb4
   20714:	.word	0x00006e9c
   20718:	.word	0x00006e84
   2071c:	.word	0x00006e6c
   20720:	.word	0x00006e58
   20724:	.word	0x00006e40
   20728:	.word	0x00006e2c
   2072c:	.word	0x00006e18
   20730:	.word	0x00006e04
   20734:	.word	0x00006dec

00020738 <dta_old_variable_ok>:
   20738:	push	{r4, lr}
   2073c:	bl	4390 <readstat_variable_get_name@plt>
   20740:	mov	r2, #9
   20744:	mov	r1, #0
   20748:	bl	203ec <dta_validate_name>
   2074c:	pop	{r4, pc}

00020750 <dta_110_variable_ok>:
   20750:	push	{r4, lr}
   20754:	bl	4390 <readstat_variable_get_name@plt>
   20758:	mov	r2, #33	; 0x21
   2075c:	mov	r1, #0
   20760:	bl	203ec <dta_validate_name>
   20764:	pop	{r4, pc}

00020768 <dta_118_variable_ok>:
   20768:	push	{r4, lr}
   2076c:	bl	4390 <readstat_variable_get_name@plt>
   20770:	mov	r2, #129	; 0x81
   20774:	mov	r1, #1
   20778:	bl	203ec <dta_validate_name>
   2077c:	pop	{r4, pc}

00020780 <dta_write_missing_string>:
   20780:	push	{r4, lr}
   20784:	ldr	r2, [r1, #1596]	; 0x63c
   20788:	mov	r1, #0
   2078c:	bl	42d0 <memset@plt>
   20790:	mov	r0, #0
   20794:	pop	{r4, pc}

00020798 <dta_old_write_int32>:
   20798:	cmn	r2, #-2147483647	; 0x80000001
   2079c:	strne	r2, [r0]
   207a0:	movne	r0, #0
   207a4:	moveq	r0, #20
   207a8:	bx	lr

000207ac <dta_old_write_int16>:
   207ac:	ldr	r3, [pc, #16]	; 207c4 <dta_old_write_int16+0x18>
   207b0:	cmp	r2, r3
   207b4:	strhne	r2, [r0]
   207b8:	movne	r0, #0
   207bc:	moveq	r0, #20
   207c0:	bx	lr
   207c4:	.word	0x00007fff

000207c8 <dta_113_write_missing_numeric>:
   207c8:	mov	r2, r0
   207cc:	ldr	r3, [r1]
   207d0:	cmp	r3, #1
   207d4:	moveq	r3, #101	; 0x65
   207d8:	strbeq	r3, [r0]
   207dc:	beq	20818 <dta_113_write_missing_numeric+0x50>
   207e0:	cmp	r3, #2
   207e4:	ldrheq	r3, [pc, #96]	; 2084c <dta_113_write_missing_numeric+0x84>
   207e8:	strheq	r3, [r0]
   207ec:	beq	20818 <dta_113_write_missing_numeric+0x50>
   207f0:	cmp	r3, #3
   207f4:	mvneq	r3, #-2147483622	; 0x8000001a
   207f8:	streq	r3, [r0]
   207fc:	beq	20818 <dta_113_write_missing_numeric+0x50>
   20800:	cmp	r3, #4
   20804:	moveq	r3, #2130706432	; 0x7f000000
   20808:	streq	r3, [r0]
   2080c:	beq	20818 <dta_113_write_missing_numeric+0x50>
   20810:	cmp	r3, #5
   20814:	beq	20820 <dta_113_write_missing_numeric+0x58>
   20818:	mov	r0, #0
   2081c:	bx	lr
   20820:	sub	sp, sp, #8
   20824:	add	r3, sp, #8
   20828:	mov	r0, #0
   2082c:	ldr	r1, [pc, #28]	; 20850 <dta_113_write_missing_numeric+0x88>
   20830:	strd	r0, [r3, #-8]!
   20834:	ldm	r3!, {r0, r1}
   20838:	str	r0, [r2]
   2083c:	str	r1, [r2, #4]
   20840:	mov	r0, #0
   20844:	add	sp, sp, #8
   20848:	bx	lr
   2084c:	.word	0x00007fe5
   20850:	.word	0x7fe00000

00020854 <dta_write_double>:
   20854:	push	{lr}		; (str lr, [sp, #-4]!)
   20858:	sub	sp, sp, #20
   2085c:	mvn	r2, #0
   20860:	ldr	r3, [pc, #96]	; 208c8 <dta_write_double+0x74>
   20864:	strd	r2, [sp, #8]
   20868:	vldr	d7, [pc, #80]	; 208c0 <dta_write_double+0x6c>
   2086c:	vcmpe.f64	d0, d7
   20870:	vmrs	APSR_nzcv, fpscr
   20874:	movgt	r0, #20
   20878:	ble	20884 <dta_write_double+0x30>
   2087c:	add	sp, sp, #20
   20880:	pop	{pc}		; (ldr pc, [sp], #4)
   20884:	mov	ip, r0
   20888:	vcmp.f64	d0, d0
   2088c:	vmrs	APSR_nzcv, fpscr
   20890:	bvs	208b4 <dta_write_double+0x60>
   20894:	add	r3, sp, #16
   20898:	vmov	r0, r1, d0
   2089c:	strd	r0, [r3, #-16]!
   208a0:	ldm	r3!, {r0, r1}
   208a4:	str	r0, [ip]
   208a8:	str	r1, [ip, #4]
   208ac:	mov	r0, #0
   208b0:	b	2087c <dta_write_double+0x28>
   208b4:	bl	207c8 <dta_113_write_missing_numeric>
   208b8:	b	2087c <dta_write_double+0x28>
   208bc:	nop			; (mov r0, r0)
   208c0:	.word	0xffffffff
   208c4:	.word	0x7fdfffff
   208c8:	.word	0x7fdfffff

000208cc <dta_write_float>:
   208cc:	push	{lr}		; (str lr, [sp, #-4]!)
   208d0:	sub	sp, sp, #12
   208d4:	mvn	r3, #-2130706432	; 0x81000000
   208d8:	str	r3, [sp, #4]
   208dc:	vldr	s15, [pc, #52]	; 20918 <dta_write_float+0x4c>
   208e0:	vcmpe.f32	s0, s15
   208e4:	vmrs	APSR_nzcv, fpscr
   208e8:	movgt	r0, #20
   208ec:	ble	208f8 <dta_write_float+0x2c>
   208f0:	add	sp, sp, #12
   208f4:	pop	{pc}		; (ldr pc, [sp], #4)
   208f8:	vcmp.f32	s0, s0
   208fc:	vmrs	APSR_nzcv, fpscr
   20900:	vmovvc	r3, s0
   20904:	strvc	r3, [r0]
   20908:	movvc	r0, #0
   2090c:	bvc	208f0 <dta_write_float+0x24>
   20910:	bl	207c8 <dta_113_write_missing_numeric>
   20914:	b	208f0 <dta_write_float+0x24>
   20918:	.word	0x7effffff

0002091c <dta_113_write_missing_tagged>:
   2091c:	sub	r3, r2, #97	; 0x61
   20920:	uxtb	r3, r3
   20924:	cmp	r3, #25
   20928:	bls	20934 <dta_113_write_missing_tagged+0x18>
   2092c:	mov	r0, #21
   20930:	bx	lr
   20934:	mov	ip, r0
   20938:	ldr	r3, [r1]
   2093c:	cmp	r3, #1
   20940:	beq	2096c <dta_113_write_missing_tagged+0x50>
   20944:	cmp	r3, #2
   20948:	beq	2097c <dta_113_write_missing_tagged+0x60>
   2094c:	cmp	r3, #3
   20950:	beq	20990 <dta_113_write_missing_tagged+0x74>
   20954:	cmp	r3, #4
   20958:	beq	209a4 <dta_113_write_missing_tagged+0x88>
   2095c:	cmp	r3, #5
   20960:	beq	209c0 <dta_113_write_missing_tagged+0xa4>
   20964:	mov	r0, #23
   20968:	bx	lr
   2096c:	add	r2, r2, #5
   20970:	strb	r2, [r0]
   20974:	mov	r0, #0
   20978:	bx	lr
   2097c:	add	r2, r2, #32512	; 0x7f00
   20980:	add	r2, r2, #133	; 0x85
   20984:	strh	r2, [r0]
   20988:	mov	r0, #0
   2098c:	bx	lr
   20990:	add	r2, r2, #-2147483648	; 0x80000000
   20994:	sub	r2, r2, #123	; 0x7b
   20998:	str	r2, [r0]
   2099c:	mov	r0, #0
   209a0:	bx	lr
   209a4:	sub	r3, r2, #97	; 0x61
   209a8:	lsl	r3, r3, #11
   209ac:	add	r3, r3, #2130706432	; 0x7f000000
   209b0:	add	r3, r3, #2048	; 0x800
   209b4:	str	r3, [r0]
   209b8:	mov	r0, #0
   209bc:	bx	lr
   209c0:	push	{r4, r5}
   209c4:	sub	sp, sp, #8
   209c8:	sub	r2, r2, #97	; 0x61
   209cc:	mov	r4, #0
   209d0:	lsl	r5, r2, #8
   209d4:	add	r1, pc, #44	; 0x2c
   209d8:	ldrd	r0, [r1]
   209dc:	adds	r0, r0, r4
   209e0:	adc	r1, r1, r5
   209e4:	add	r3, sp, #8
   209e8:	strd	r0, [r3, #-8]!
   209ec:	ldm	r3!, {r0, r1}
   209f0:	str	r0, [ip]
   209f4:	str	r1, [ip, #4]
   209f8:	mov	r0, r4
   209fc:	add	sp, sp, #8
   20a00:	pop	{r4, r5}
   20a04:	bx	lr
   20a08:	.word	0x00000000
   20a0c:	.word	0x7fe00100

00020a10 <dta_old_write_missing_numeric>:
   20a10:	mov	r2, r0
   20a14:	ldr	r3, [r1]
   20a18:	cmp	r3, #1
   20a1c:	moveq	r3, #127	; 0x7f
   20a20:	strbeq	r3, [r0]
   20a24:	beq	20a60 <dta_old_write_missing_numeric+0x50>
   20a28:	cmp	r3, #2
   20a2c:	ldrheq	r3, [pc, #96]	; 20a94 <dta_old_write_missing_numeric+0x84>
   20a30:	strheq	r3, [r0]
   20a34:	beq	20a60 <dta_old_write_missing_numeric+0x50>
   20a38:	cmp	r3, #3
   20a3c:	mvneq	r3, #-2147483648	; 0x80000000
   20a40:	streq	r3, [r0]
   20a44:	beq	20a60 <dta_old_write_missing_numeric+0x50>
   20a48:	cmp	r3, #4
   20a4c:	moveq	r3, #2130706432	; 0x7f000000
   20a50:	streq	r3, [r0]
   20a54:	beq	20a60 <dta_old_write_missing_numeric+0x50>
   20a58:	cmp	r3, #5
   20a5c:	beq	20a68 <dta_old_write_missing_numeric+0x58>
   20a60:	mov	r0, #0
   20a64:	bx	lr
   20a68:	sub	sp, sp, #8
   20a6c:	add	r3, sp, #8
   20a70:	mov	r0, #0
   20a74:	ldr	r1, [pc, #28]	; 20a98 <dta_old_write_missing_numeric+0x88>
   20a78:	strd	r0, [r3, #-8]!
   20a7c:	ldm	r3!, {r0, r1}
   20a80:	str	r0, [r2]
   20a84:	str	r1, [r2, #4]
   20a88:	mov	r0, #0
   20a8c:	add	sp, sp, #8
   20a90:	bx	lr
   20a94:	.word	0x00007fff
   20a98:	.word	0x7fe00000

00020a9c <dta_old_write_int8>:
   20a9c:	cmp	r2, #127	; 0x7f
   20aa0:	strbne	r2, [r0]
   20aa4:	movne	r0, #0
   20aa8:	moveq	r0, #20
   20aac:	bx	lr

00020ab0 <readstat_begin_writing_dta>:
   20ab0:	push	{r4, lr}
   20ab4:	ldr	r3, [pc, #388]	; 20c40 <readstat_begin_writing_dta+0x190>
   20ab8:	add	r3, pc, r3
   20abc:	ldr	ip, [r0, #8]
   20ac0:	cmp	ip, #0
   20ac4:	moveq	ip, #118	; 0x76
   20ac8:	streq	ip, [r0, #8]
   20acc:	ldr	ip, [pc, #368]	; 20c44 <readstat_begin_writing_dta+0x194>
   20ad0:	ldr	r3, [r3, ip]
   20ad4:	str	r3, [r0, #292]	; 0x124
   20ad8:	ldr	r3, [r0, #8]
   20adc:	cmp	r3, #116	; 0x74
   20ae0:	ble	20ba4 <readstat_begin_writing_dta+0xf4>
   20ae4:	ldr	ip, [pc, #348]	; 20c48 <readstat_begin_writing_dta+0x198>
   20ae8:	add	ip, pc, ip
   20aec:	str	ip, [r0, #228]	; 0xe4
   20af0:	cmp	r3, #117	; 0x75
   20af4:	ble	20bc8 <readstat_begin_writing_dta+0x118>
   20af8:	ldr	ip, [pc, #332]	; 20c4c <readstat_begin_writing_dta+0x19c>
   20afc:	add	ip, pc, ip
   20b00:	str	ip, [r0, #232]	; 0xe8
   20b04:	ldr	ip, [pc, #324]	; 20c50 <readstat_begin_writing_dta+0x1a0>
   20b08:	add	ip, pc, ip
   20b0c:	str	ip, [r0, #260]	; 0x104
   20b10:	cmp	r3, #112	; 0x70
   20b14:	bgt	20bf0 <readstat_begin_writing_dta+0x140>
   20b18:	ldr	r3, [pc, #308]	; 20c54 <readstat_begin_writing_dta+0x1a4>
   20b1c:	add	r3, pc, r3
   20b20:	str	r3, [r0, #236]	; 0xec
   20b24:	ldr	r3, [pc, #300]	; 20c58 <readstat_begin_writing_dta+0x1a8>
   20b28:	add	r3, pc, r3
   20b2c:	str	r3, [r0, #240]	; 0xf0
   20b30:	ldr	r3, [pc, #292]	; 20c5c <readstat_begin_writing_dta+0x1ac>
   20b34:	add	r3, pc, r3
   20b38:	str	r3, [r0, #244]	; 0xf4
   20b3c:	ldr	r3, [pc, #284]	; 20c60 <readstat_begin_writing_dta+0x1b0>
   20b40:	add	r3, pc, r3
   20b44:	str	r3, [r0, #268]	; 0x10c
   20b48:	ldr	r3, [pc, #276]	; 20c64 <readstat_begin_writing_dta+0x1b4>
   20b4c:	add	r3, pc, r3
   20b50:	str	r3, [r0, #248]	; 0xf8
   20b54:	ldr	r3, [pc, #268]	; 20c68 <readstat_begin_writing_dta+0x1b8>
   20b58:	add	r3, pc, r3
   20b5c:	str	r3, [r0, #252]	; 0xfc
   20b60:	ldr	r3, [pc, #260]	; 20c6c <readstat_begin_writing_dta+0x1bc>
   20b64:	add	r3, pc, r3
   20b68:	str	r3, [r0, #256]	; 0x100
   20b6c:	ldr	r3, [pc, #252]	; 20c70 <readstat_begin_writing_dta+0x1c0>
   20b70:	add	r3, pc, r3
   20b74:	str	r3, [r0, #264]	; 0x108
   20b78:	ldr	r3, [pc, #244]	; 20c74 <readstat_begin_writing_dta+0x1c4>
   20b7c:	add	r3, pc, r3
   20b80:	str	r3, [r0, #276]	; 0x114
   20b84:	ldr	r3, [pc, #236]	; 20c78 <readstat_begin_writing_dta+0x1c8>
   20b88:	add	r3, pc, r3
   20b8c:	str	r3, [r0, #284]	; 0x11c
   20b90:	ldr	r3, [pc, #228]	; 20c7c <readstat_begin_writing_dta+0x1cc>
   20b94:	add	r3, pc, r3
   20b98:	str	r3, [r0, #288]	; 0x120
   20b9c:	bl	3f88 <readstat_begin_writing_file@plt>
   20ba0:	pop	{r4, pc}
   20ba4:	cmp	r3, #110	; 0x6e
   20ba8:	ldrgt	ip, [pc, #208]	; 20c80 <readstat_begin_writing_dta+0x1d0>
   20bac:	addgt	ip, pc, ip
   20bb0:	strgt	ip, [r0, #228]	; 0xe4
   20bb4:	bgt	20af0 <readstat_begin_writing_dta+0x40>
   20bb8:	ldr	ip, [pc, #196]	; 20c84 <readstat_begin_writing_dta+0x1d4>
   20bbc:	add	ip, pc, ip
   20bc0:	str	ip, [r0, #228]	; 0xe4
   20bc4:	b	20af0 <readstat_begin_writing_dta+0x40>
   20bc8:	cmp	r3, #109	; 0x6d
   20bcc:	ble	20c30 <readstat_begin_writing_dta+0x180>
   20bd0:	ldr	ip, [pc, #176]	; 20c88 <readstat_begin_writing_dta+0x1d8>
   20bd4:	add	ip, pc, ip
   20bd8:	str	ip, [r0, #232]	; 0xe8
   20bdc:	cmp	r3, #117	; 0x75
   20be0:	bne	20b10 <readstat_begin_writing_dta+0x60>
   20be4:	ldr	r3, [pc, #160]	; 20c8c <readstat_begin_writing_dta+0x1dc>
   20be8:	add	r3, pc, r3
   20bec:	str	r3, [r0, #260]	; 0x104
   20bf0:	ldr	r3, [pc, #152]	; 20c90 <readstat_begin_writing_dta+0x1e0>
   20bf4:	add	r3, pc, r3
   20bf8:	str	r3, [r0, #236]	; 0xec
   20bfc:	ldr	r3, [pc, #144]	; 20c94 <readstat_begin_writing_dta+0x1e4>
   20c00:	add	r3, pc, r3
   20c04:	str	r3, [r0, #240]	; 0xf0
   20c08:	ldr	r3, [pc, #136]	; 20c98 <readstat_begin_writing_dta+0x1e8>
   20c0c:	add	r3, pc, r3
   20c10:	str	r3, [r0, #244]	; 0xf4
   20c14:	ldr	r3, [pc, #128]	; 20c9c <readstat_begin_writing_dta+0x1ec>
   20c18:	add	r3, pc, r3
   20c1c:	str	r3, [r0, #268]	; 0x10c
   20c20:	ldr	r3, [pc, #120]	; 20ca0 <readstat_begin_writing_dta+0x1f0>
   20c24:	add	r3, pc, r3
   20c28:	str	r3, [r0, #272]	; 0x110
   20c2c:	b	20b48 <readstat_begin_writing_dta+0x98>
   20c30:	ldr	ip, [pc, #108]	; 20ca4 <readstat_begin_writing_dta+0x1f4>
   20c34:	add	ip, pc, ip
   20c38:	str	ip, [r0, #232]	; 0xe8
   20c3c:	b	20bdc <readstat_begin_writing_dta+0x12c>
   20c40:	.word	0x00024540
   20c44:	.word	0x00000300
   20c48:	.word	0xffffda40
   20c4c:	.word	0xfffffc64
   20c50:	.word	0xffffe3fc
   20c54:	.word	0xffffff78
   20c58:	.word	0xfffffc7c
   20c5c:	.word	0xfffffc5c
   20c60:	.word	0xfffffec8
   20c64:	.word	0xfffffd78
   20c68:	.word	0xfffffcf4
   20c6c:	.word	0xffffe550
   20c70:	.word	0xfffffc08
   20c74:	.word	0xffffe730
   20c78:	.word	0xffffdb14
   20c7c:	.word	0xffffda90
   20c80:	.word	0xffffd954
   20c84:	.word	0xffffd9b0
   20c88:	.word	0xfffffb74
   20c8c:	.word	0xffffd9f0
   20c90:	.word	0xffffd9a0
   20c94:	.word	0xffffd9a8
   20c98:	.word	0xffffd9b8
   20c9c:	.word	0xfffffba8
   20ca0:	.word	0xfffffcf0
   20ca4:	.word	0xfffffafc

00020ca8 <submit_value_label>:
   20ca8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20cac:	sub	sp, sp, #44	; 0x2c
   20cb0:	ldrd	sl, [sp, #80]	; 0x50
   20cb4:	ldr	r7, [sp, #100]	; 0x64
   20cb8:	ldr	r8, [sp, #104]	; 0x68
   20cbc:	ldr	r4, [r0, #20]
   20cc0:	cmp	r4, #0
   20cc4:	beq	20e04 <submit_value_label+0x15c>
   20cc8:	str	r1, [sp, #20]
   20ccc:	cmp	r2, #2
   20cd0:	beq	20d40 <submit_value_label+0x98>
   20cd4:	cmp	r2, #3
   20cd8:	beq	20dc4 <submit_value_label+0x11c>
   20cdc:	mov	r1, #0
   20ce0:	str	r1, [sp, #24]
   20ce4:	add	r3, sp, #24
   20ce8:	str	r1, [sp, #28]
   20cec:	str	r1, [sp, #32]
   20cf0:	str	r1, [sp, #36]	; 0x24
   20cf4:	cmp	r2, r1
   20cf8:	bne	20dd4 <submit_value_label+0x12c>
   20cfc:	mov	r3, #5
   20d00:	str	r3, [sp, #32]
   20d04:	vstr	d0, [sp, #24]
   20d08:	str	r8, [sp, #12]
   20d0c:	str	r7, [sp, #8]
   20d10:	add	r3, sp, #40	; 0x28
   20d14:	ldmdb	r3, {r0, r1}
   20d18:	stm	sp, {r0, r1}
   20d1c:	add	r3, sp, #24
   20d20:	ldm	r3, {r2, r3}
   20d24:	ldr	r0, [sp, #20]
   20d28:	blx	r4
   20d2c:	cmp	r0, #0
   20d30:	movne	r0, #4
   20d34:	moveq	r0, #0
   20d38:	add	sp, sp, #44	; 0x2c
   20d3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20d40:	ldrd	r2, [sp, #88]	; 0x58
   20d44:	cmp	r2, sl
   20d48:	sbcs	r3, r3, fp
   20d4c:	blt	20dc4 <submit_value_label+0x11c>
   20d50:	add	r4, sp, #24
   20d54:	mov	r9, #5
   20d58:	add	r6, sp, #32
   20d5c:	mov	r5, r6
   20d60:	mov	r6, r7
   20d64:	mov	r7, r0
   20d68:	mov	r3, #0
   20d6c:	str	r3, [r4, #12]
   20d70:	mov	r0, sl
   20d74:	mov	r1, fp
   20d78:	bl	2454c <__aeabi_l2d>
   20d7c:	strd	r0, [sp, #24]
   20d80:	str	r9, [sp, #32]
   20d84:	str	r8, [sp, #12]
   20d88:	str	r6, [sp, #8]
   20d8c:	ldm	r5, {r0, r1}
   20d90:	stm	sp, {r0, r1}
   20d94:	ldm	r4, {r2, r3}
   20d98:	ldr	r1, [r7, #20]
   20d9c:	ldr	r0, [sp, #20]
   20da0:	blx	r1
   20da4:	cmp	r0, #0
   20da8:	bne	20dcc <submit_value_label+0x124>
   20dac:	adds	sl, sl, #1
   20db0:	adc	fp, fp, #0
   20db4:	ldrd	r2, [sp, #88]	; 0x58
   20db8:	cmp	r2, sl
   20dbc:	sbcs	r3, r3, fp
   20dc0:	bge	20d68 <submit_value_label+0xc0>
   20dc4:	mov	r0, #0
   20dc8:	b	20d38 <submit_value_label+0x90>
   20dcc:	mov	r0, #4
   20dd0:	b	20d38 <submit_value_label+0x90>
   20dd4:	cmp	r2, #1
   20dd8:	beq	20df8 <submit_value_label+0x150>
   20ddc:	cmn	r2, #1
   20de0:	moveq	r3, #5
   20de4:	streq	r3, [sp, #32]
   20de8:	moveq	r2, #0
   20dec:	ldreq	r3, [pc, #24]	; 20e0c <submit_value_label+0x164>
   20df0:	strdeq	r2, [sp, #24]
   20df4:	b	20d08 <submit_value_label+0x60>
   20df8:	ldr	r3, [sp, #96]	; 0x60
   20dfc:	str	r3, [sp, #24]
   20e00:	b	20d08 <submit_value_label+0x60>
   20e04:	mov	r0, #0
   20e08:	b	20d38 <submit_value_label+0x90>
   20e0c:	.word	0x7ff80000

00020e10 <submit_columns>:
   20e10:	ldr	r3, [r1, #268]	; 0x10c
   20e14:	cmp	r3, #0
   20e18:	ble	20f04 <submit_columns+0xf4>
   20e1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20e20:	sub	sp, sp, #12
   20e24:	ldr	r5, [r1, #276]	; 0x114
   20e28:	mov	r4, #2208	; 0x8a0
   20e2c:	mul	r4, r4, r3
   20e30:	mov	ip, #0
   20e34:	ldr	r3, [r5, ip]
   20e38:	add	r3, r3, #1
   20e3c:	ldr	lr, [r1, #256]	; 0x100
   20e40:	cmp	lr, r3
   20e44:	strlt	r3, [r1, #256]	; 0x100
   20e48:	add	ip, ip, #2208	; 0x8a0
   20e4c:	cmp	ip, r4
   20e50:	bne	20e34 <submit_columns+0x24>
   20e54:	ldr	r3, [r0, #8]
   20e58:	cmp	r3, #0
   20e5c:	beq	20f14 <submit_columns+0x104>
   20e60:	str	r2, [sp, #4]
   20e64:	mov	r6, r1
   20e68:	mov	sl, r0
   20e6c:	mov	r7, #0
   20e70:	mov	r8, r7
   20e74:	mov	r5, r7
   20e78:	mov	fp, #1
   20e7c:	b	20e94 <submit_columns+0x84>
   20e80:	add	r5, r5, #1
   20e84:	add	r7, r7, #2208	; 0x8a0
   20e88:	ldr	r3, [r6, #268]	; 0x10c
   20e8c:	cmp	r3, r5
   20e90:	ble	20ef8 <submit_columns+0xe8>
   20e94:	ldr	r4, [r6, #276]	; 0x114
   20e98:	add	r4, r4, r7
   20e9c:	str	r5, [r4, #20]
   20ea0:	str	r8, [r4, #2164]	; 0x874
   20ea4:	ldr	r3, [r4, #16]
   20ea8:	cmp	r3, #0
   20eac:	ldreq	r3, [r4, #8]
   20eb0:	streq	r3, [r4, #1612]	; 0x64c
   20eb4:	ldr	r9, [sl, #8]
   20eb8:	add	r1, r4, #16
   20ebc:	ldrb	r3, [r4, #2168]	; 0x878
   20ec0:	cmp	r3, #0
   20ec4:	addne	r2, r4, #2160	; 0x870
   20ec8:	addne	r2, r2, #8
   20ecc:	moveq	r2, #0
   20ed0:	ldr	r3, [sp, #4]
   20ed4:	mov	r0, r5
   20ed8:	blx	r9
   20edc:	cmp	r0, #2
   20ee0:	streq	fp, [r4, #12]
   20ee4:	beq	20e80 <submit_columns+0x70>
   20ee8:	cmp	r0, #1
   20eec:	beq	20f0c <submit_columns+0xfc>
   20ef0:	add	r8, r8, #1
   20ef4:	b	20e80 <submit_columns+0x70>
   20ef8:	mov	r0, #0
   20efc:	add	sp, sp, #12
   20f00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20f04:	mov	r0, #0
   20f08:	bx	lr
   20f0c:	mov	r0, #4
   20f10:	b	20efc <submit_columns+0xec>
   20f14:	mov	r0, #0
   20f18:	b	20efc <submit_columns+0xec>

00020f1c <readstat_copy>:
   20f1c:	push	{r4, r5, r6, lr}
   20f20:	mov	r5, r0
   20f24:	mov	r0, r2
   20f28:	mov	r4, r3
   20f2c:	cmp	r3, r1
   20f30:	subcs	r4, r1, #1
   20f34:	mov	r2, r4
   20f38:	mov	r1, r0
   20f3c:	mov	r0, r5
   20f40:	bl	3f40 <memcpy@plt>
   20f44:	mov	r3, #0
   20f48:	strb	r3, [r5, r4]
   20f4c:	pop	{r4, r5, r6, pc}

00020f50 <readstat_copy_lower>:
   20f50:	push	{r4, r5, r6, lr}
   20f54:	mov	r5, r0
   20f58:	mov	r6, r1
   20f5c:	bl	3e8c <readstat_copy@plt>
   20f60:	cmp	r6, #0
   20f64:	popeq	{r4, r5, r6, pc}
   20f68:	ldrb	r4, [r5]
   20f6c:	cmp	r4, #0
   20f70:	popeq	{r4, r5, r6, pc}
   20f74:	bl	4198 <__ctype_tolower_loc@plt>
   20f78:	mov	r3, r5
   20f7c:	add	r1, r5, r6
   20f80:	ldr	r2, [r0]
   20f84:	ldr	r2, [r2, r4, lsl #2]
   20f88:	strb	r2, [r3], #1
   20f8c:	cmp	r1, r3
   20f90:	popeq	{r4, r5, r6, pc}
   20f94:	ldrb	r4, [r3]
   20f98:	cmp	r4, #0
   20f9c:	bne	20f80 <readstat_copy_lower+0x30>
   20fa0:	pop	{r4, r5, r6, pc}

00020fa4 <readstat_copy_quoted>:
   20fa4:	cmp	r3, r1
   20fa8:	subcs	r3, r1, #1
   20fac:	cmp	r3, #0
   20fb0:	beq	21028 <readstat_copy_quoted+0x84>
   20fb4:	push	{r4, r5, r6, lr}
   20fb8:	mov	r1, r2
   20fbc:	add	r2, r2, r3
   20fc0:	mov	r3, #0
   20fc4:	mov	ip, r3
   20fc8:	mov	r6, #1
   20fcc:	mov	r4, r3
   20fd0:	mov	r5, #9
   20fd4:	b	20ff8 <readstat_copy_quoted+0x54>
   20fd8:	ldrb	lr, [r1]
   20fdc:	cmp	lr, #92	; 0x5c
   20fe0:	strbne	lr, [r0, r3]
   20fe4:	addne	r3, r3, #1
   20fe8:	moveq	ip, r6
   20fec:	add	r1, r1, #1
   20ff0:	cmp	r1, r2
   20ff4:	beq	2101c <readstat_copy_quoted+0x78>
   20ff8:	cmp	ip, #0
   20ffc:	beq	20fd8 <readstat_copy_quoted+0x34>
   21000:	ldrb	ip, [r1]
   21004:	cmp	ip, #116	; 0x74
   21008:	strbeq	r5, [r0, r3]
   2100c:	strbne	ip, [r0, r3]
   21010:	add	r3, r3, #1
   21014:	mov	ip, r4
   21018:	b	20fec <readstat_copy_quoted+0x48>
   2101c:	mov	r2, #0
   21020:	strb	r2, [r0, r3]
   21024:	pop	{r4, r5, r6, pc}
   21028:	mov	r2, #0
   2102c:	strb	r2, [r0, r3]
   21030:	bx	lr
   21034:	andeq	r0, r0, r0

00021038 <readstat_parse_sas_commands>:
   21038:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2103c:	sub	sp, sp, #2304	; 0x900
   21040:	sub	sp, sp, #12
   21044:	mov	ip, r0
   21048:	str	r0, [sp, #80]	; 0x50
   2104c:	mov	r0, r1
   21050:	str	r2, [sp, #108]	; 0x6c
   21054:	mov	r4, r3
   21058:	str	r3, [sp, #128]	; 0x80
   2105c:	ldr	r3, [ip, #32]
   21060:	ldr	r2, [r3]
   21064:	ldr	r1, [r3, #20]
   21068:	blx	r2
   2106c:	cmn	r0, #1
   21070:	beq	21190 <readstat_parse_sas_commands+0x158>
   21074:	ldr	r5, [sp, #80]	; 0x50
   21078:	ldr	r3, [r5, #32]
   2107c:	ldr	r4, [r3, #8]
   21080:	ldr	r2, [r3, #20]
   21084:	mov	r1, #2
   21088:	mov	r0, #0
   2108c:	blx	r4
   21090:	mov	r7, r0
   21094:	cmn	r0, #1
   21098:	beq	21890 <readstat_parse_sas_commands+0x858>
   2109c:	mov	r4, r5
   210a0:	ldr	r3, [r5, #32]
   210a4:	ldr	r5, [r3, #8]
   210a8:	ldr	r2, [r3, #20]
   210ac:	mov	r1, #0
   210b0:	mov	r0, r1
   210b4:	blx	r5
   210b8:	mov	r0, r7
   210bc:	bl	4138 <malloc@plt>
   210c0:	mov	r6, r0
   210c4:	str	r0, [sp, #132]	; 0x84
   210c8:	ldr	r3, [r4, #32]
   210cc:	ldr	r5, [r3, #12]
   210d0:	ldr	r2, [r3, #20]
   210d4:	mov	r1, r7
   210d8:	blx	r5
   210dc:	add	r7, r6, r7
   210e0:	mov	r1, #280	; 0x118
   210e4:	mov	r0, #1
   210e8:	bl	3d78 <calloc@plt>
   210ec:	subs	r3, r0, #0
   210f0:	mov	r2, r3
   210f4:	str	r3, [sp, #44]	; 0x2c
   210f8:	beq	218e4 <readstat_parse_sas_commands+0x8ac>
   210fc:	mov	r3, #1
   21100:	str	r3, [r2, #256]	; 0x100
   21104:	cmp	r6, r7
   21108:	beq	217e0 <readstat_parse_sas_commands+0x7a8>
   2110c:	str	r6, [sp, #124]	; 0x7c
   21110:	mov	r8, r6
   21114:	mov	r3, #0
   21118:	str	r3, [sp, #52]	; 0x34
   2111c:	str	r3, [sp, #92]	; 0x5c
   21120:	str	r3, [sp, #88]	; 0x58
   21124:	str	r3, [sp, #48]	; 0x30
   21128:	mov	r2, #5
   2112c:	str	r2, [sp, #84]	; 0x54
   21130:	str	r3, [sp, #104]	; 0x68
   21134:	mov	sl, #0
   21138:	mov	fp, #0
   2113c:	str	sl, [sp, #112]	; 0x70
   21140:	str	fp, [sp, #116]	; 0x74
   21144:	vldr	d7, [pc, #956]	; 21508 <readstat_parse_sas_commands+0x4d0>
   21148:	vstr	d7, [sp, #72]	; 0x48
   2114c:	ldr	r6, [pc, #988]	; 21530 <readstat_parse_sas_commands+0x4f8>
   21150:	str	r3, [sp, #40]	; 0x28
   21154:	str	r3, [sp, #36]	; 0x24
   21158:	ldr	r9, [pc, #944]	; 21510 <readstat_parse_sas_commands+0x4d8>
   2115c:	add	r9, pc, r9
   21160:	sub	r3, r9, #2688	; 0xa80
   21164:	str	r3, [sp, #64]	; 0x40
   21168:	ldr	r3, [pc, #932]	; 21514 <readstat_parse_sas_commands+0x4dc>
   2116c:	add	r3, pc, r3
   21170:	add	r3, r3, #3904	; 0xf40
   21174:	str	r3, [sp, #68]	; 0x44
   21178:	ldr	r3, [pc, #920]	; 21518 <readstat_parse_sas_commands+0x4e0>
   2117c:	add	r3, pc, r3
   21180:	sub	r3, r3, #3392	; 0xd40
   21184:	sub	r3, r3, #12
   21188:	str	r3, [sp, #120]	; 0x78
   2118c:	b	21750 <readstat_parse_sas_commands+0x718>
   21190:	cmp	r4, #0
   21194:	beq	217d4 <readstat_parse_sas_commands+0x79c>
   21198:	mov	r3, #1
   2119c:	str	r3, [r4]
   211a0:	mov	r3, #0
   211a4:	str	r3, [sp, #44]	; 0x2c
   211a8:	ldr	r0, [sp, #44]	; 0x2c
   211ac:	add	sp, sp, #2304	; 0x900
   211b0:	add	sp, sp, #12
   211b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   211b8:	cmp	r1, r3
   211bc:	bcc	211f0 <readstat_parse_sas_commands+0x1b8>
   211c0:	sub	r2, r1, r3
   211c4:	add	r0, r3, r2, asr #1
   211c8:	ldrb	r2, [r3, r2, asr #1]
   211cc:	cmp	ip, r2
   211d0:	subcc	r1, r0, #1
   211d4:	bcc	211b8 <readstat_parse_sas_commands+0x180>
   211d8:	cmp	ip, r2
   211dc:	addhi	r3, r0, #1
   211e0:	bhi	211b8 <readstat_parse_sas_commands+0x180>
   211e4:	sub	r0, r0, lr
   211e8:	add	r4, r4, r0
   211ec:	b	21274 <readstat_parse_sas_commands+0x23c>
   211f0:	add	lr, lr, r5
   211f4:	add	r4, r4, r5
   211f8:	ldr	r3, [pc, #796]	; 2151c <readstat_parse_sas_commands+0x4e4>
   211fc:	add	r3, pc, r3
   21200:	add	r6, r3, r6
   21204:	ldrb	r6, [r6, #2804]	; 0xaf4
   21208:	cmp	r6, #0
   2120c:	ble	21274 <readstat_parse_sas_commands+0x23c>
   21210:	add	r1, lr, r6, lsl #1
   21214:	sub	r1, r1, #2
   21218:	cmp	lr, r1
   2121c:	bhi	21270 <readstat_parse_sas_commands+0x238>
   21220:	ldrb	ip, [r8]
   21224:	mov	r2, lr
   21228:	b	21234 <readstat_parse_sas_commands+0x1fc>
   2122c:	cmp	r2, r1
   21230:	bhi	21270 <readstat_parse_sas_commands+0x238>
   21234:	sub	r3, r1, r2
   21238:	asr	r3, r3, #1
   2123c:	bic	r3, r3, #1
   21240:	add	r0, r2, r3
   21244:	ldrb	r3, [r2, r3]
   21248:	cmp	r3, ip
   2124c:	subhi	r1, r0, #2
   21250:	bhi	2122c <readstat_parse_sas_commands+0x1f4>
   21254:	ldrb	r3, [r0, #1]
   21258:	cmp	r3, ip
   2125c:	addcc	r2, r0, #2
   21260:	bcc	2122c <readstat_parse_sas_commands+0x1f4>
   21264:	sub	r0, r0, lr
   21268:	add	r4, r4, r0, asr #1
   2126c:	b	21274 <readstat_parse_sas_commands+0x23c>
   21270:	add	r4, r4, r6
   21274:	lsl	r3, r4, #1
   21278:	ldr	r2, [sp, #68]	; 0x44
   2127c:	ldrsh	r6, [r2, r3]
   21280:	ldr	r3, [pc, #664]	; 21520 <readstat_parse_sas_commands+0x4e8>
   21284:	add	r3, pc, r3
   21288:	add	r4, r3, r4
   2128c:	ldrb	r3, [r4, #-968]	; 0xfffffc38
   21290:	cmp	r3, #0
   21294:	beq	2173c <readstat_parse_sas_commands+0x704>
   21298:	ldr	r2, [sp, #120]	; 0x78
   2129c:	add	r4, r2, r3
   212a0:	ldrb	r3, [r2, r3]
   212a4:	add	r5, r4, r3
   212a8:	ldr	r3, [pc, #628]	; 21524 <readstat_parse_sas_commands+0x4ec>
   212ac:	add	r3, pc, r3
   212b0:	str	r3, [sp, #96]	; 0x60
   212b4:	ldr	r3, [pc, #620]	; 21528 <readstat_parse_sas_commands+0x4f0>
   212b8:	add	r3, pc, r3
   212bc:	str	r3, [sp, #100]	; 0x64
   212c0:	cmp	r5, r4
   212c4:	beq	2173c <readstat_parse_sas_commands+0x704>
   212c8:	ldrb	r3, [r4, #1]!
   212cc:	cmp	r3, #34	; 0x22
   212d0:	addls	pc, pc, r3, lsl #2
   212d4:	b	212c0 <readstat_parse_sas_commands+0x288>
   212d8:	b	21364 <readstat_parse_sas_commands+0x32c>
   212dc:	b	21370 <readstat_parse_sas_commands+0x338>
   212e0:	b	21390 <readstat_parse_sas_commands+0x358>
   212e4:	b	213f4 <readstat_parse_sas_commands+0x3bc>
   212e8:	b	21408 <readstat_parse_sas_commands+0x3d0>
   212ec:	b	21418 <readstat_parse_sas_commands+0x3e0>
   212f0:	b	21424 <readstat_parse_sas_commands+0x3ec>
   212f4:	b	21430 <readstat_parse_sas_commands+0x3f8>
   212f8:	b	2144c <readstat_parse_sas_commands+0x414>
   212fc:	b	21468 <readstat_parse_sas_commands+0x430>
   21300:	b	21484 <readstat_parse_sas_commands+0x44c>
   21304:	b	214a0 <readstat_parse_sas_commands+0x468>
   21308:	b	214bc <readstat_parse_sas_commands+0x484>
   2130c:	b	21544 <readstat_parse_sas_commands+0x50c>
   21310:	b	21578 <readstat_parse_sas_commands+0x540>
   21314:	b	21594 <readstat_parse_sas_commands+0x55c>
   21318:	b	215c0 <readstat_parse_sas_commands+0x588>
   2131c:	b	215f0 <readstat_parse_sas_commands+0x5b8>
   21320:	b	2164c <readstat_parse_sas_commands+0x614>
   21324:	b	21654 <readstat_parse_sas_commands+0x61c>
   21328:	b	21664 <readstat_parse_sas_commands+0x62c>
   2132c:	b	2166c <readstat_parse_sas_commands+0x634>
   21330:	b	2167c <readstat_parse_sas_commands+0x644>
   21334:	b	21690 <readstat_parse_sas_commands+0x658>
   21338:	b	21698 <readstat_parse_sas_commands+0x660>
   2133c:	b	216a8 <readstat_parse_sas_commands+0x670>
   21340:	b	216c4 <readstat_parse_sas_commands+0x68c>
   21344:	b	216e0 <readstat_parse_sas_commands+0x6a8>
   21348:	b	216ec <readstat_parse_sas_commands+0x6b4>
   2134c:	b	216f8 <readstat_parse_sas_commands+0x6c0>
   21350:	b	21704 <readstat_parse_sas_commands+0x6cc>
   21354:	b	21710 <readstat_parse_sas_commands+0x6d8>
   21358:	b	2171c <readstat_parse_sas_commands+0x6e4>
   2135c:	b	21724 <readstat_parse_sas_commands+0x6ec>
   21360:	b	21730 <readstat_parse_sas_commands+0x6f8>
   21364:	mov	sl, #0
   21368:	mov	fp, #0
   2136c:	b	212c0 <readstat_parse_sas_commands+0x288>
   21370:	mov	r1, #10
   21374:	umull	r2, r3, sl, r1
   21378:	mla	r3, r1, fp, r3
   2137c:	ldrb	r1, [r8]
   21380:	sub	r1, r1, #48	; 0x30
   21384:	adds	sl, r2, r1
   21388:	adc	fp, r3, r1, asr #31
   2138c:	b	212c0 <readstat_parse_sas_commands+0x288>
   21390:	ldrb	r3, [r8]
   21394:	sub	r2, r3, #48	; 0x30
   21398:	uxtb	r2, r2
   2139c:	cmp	r2, #9
   213a0:	subls	r3, r3, #48	; 0x30
   213a4:	bls	213d0 <readstat_parse_sas_commands+0x398>
   213a8:	sub	r2, r3, #65	; 0x41
   213ac:	uxtb	r2, r2
   213b0:	cmp	r2, #5
   213b4:	subls	r3, r3, #55	; 0x37
   213b8:	bls	213d0 <readstat_parse_sas_commands+0x398>
   213bc:	sub	r2, r3, #97	; 0x61
   213c0:	uxtb	r2, r2
   213c4:	cmp	r2, #5
   213c8:	subls	r3, r3, #87	; 0x57
   213cc:	movhi	r3, #0
   213d0:	lsl	r2, fp, #4
   213d4:	orr	r2, r2, sl, lsr #28
   213d8:	str	r2, [sp, #60]	; 0x3c
   213dc:	lsl	r2, sl, #4
   213e0:	str	r2, [sp, #56]	; 0x38
   213e4:	ldrd	sl, [sp, #56]	; 0x38
   213e8:	adds	sl, sl, r3
   213ec:	adc	fp, fp, r3, asr #31
   213f0:	b	212c0 <readstat_parse_sas_commands+0x288>
   213f4:	sub	r3, sl, #1
   213f8:	str	r3, [sp, #92]	; 0x5c
   213fc:	mov	r3, #1
   21400:	str	r3, [sp, #52]	; 0x34
   21404:	b	212c0 <readstat_parse_sas_commands+0x288>
   21408:	ldr	r3, [sp, #92]	; 0x5c
   2140c:	sub	r3, sl, r3
   21410:	str	r3, [sp, #52]	; 0x34
   21414:	b	212c0 <readstat_parse_sas_commands+0x288>
   21418:	mov	r3, #0
   2141c:	str	r3, [sp, #84]	; 0x54
   21420:	b	212c0 <readstat_parse_sas_commands+0x288>
   21424:	mov	r3, #5
   21428:	str	r3, [sp, #84]	; 0x54
   2142c:	b	212c0 <readstat_parse_sas_commands+0x288>
   21430:	ldr	r3, [sp, #40]	; 0x28
   21434:	ldr	r2, [sp, #36]	; 0x24
   21438:	mov	r1, #1024	; 0x400
   2143c:	add	r0, sp, #1152	; 0x480
   21440:	add	r0, r0, #8
   21444:	bl	3e8c <readstat_copy@plt>
   21448:	b	212c0 <readstat_parse_sas_commands+0x288>
   2144c:	ldr	r3, [sp, #40]	; 0x28
   21450:	ldr	r2, [sp, #36]	; 0x24
   21454:	mov	r1, #32
   21458:	add	r0, sp, #2208	; 0x8a0
   2145c:	add	r0, r0, #8
   21460:	bl	3e8c <readstat_copy@plt>
   21464:	b	212c0 <readstat_parse_sas_commands+0x288>
   21468:	ldr	r3, [sp, #40]	; 0x28
   2146c:	ldr	r2, [sp, #36]	; 0x24
   21470:	mov	r1, #32
   21474:	add	r0, sp, #2176	; 0x880
   21478:	add	r0, r0, #8
   2147c:	bl	3e8c <readstat_copy@plt>
   21480:	b	212c0 <readstat_parse_sas_commands+0x288>
   21484:	ldr	r3, [sp, #40]	; 0x28
   21488:	ldr	r2, [sp, #36]	; 0x24
   2148c:	mov	r1, #32
   21490:	add	r0, sp, #2240	; 0x8c0
   21494:	add	r0, r0, #8
   21498:	bl	3e8c <readstat_copy@plt>
   2149c:	b	212c0 <readstat_parse_sas_commands+0x288>
   214a0:	ldr	r3, [sp, #40]	; 0x28
   214a4:	ldr	r2, [sp, #36]	; 0x24
   214a8:	mov	r1, #32
   214ac:	add	r0, sp, #2272	; 0x8e0
   214b0:	add	r0, r0, #8
   214b4:	bl	4408 <readstat_copy_lower@plt>
   214b8:	b	212c0 <readstat_parse_sas_commands+0x288>
   214bc:	ldr	r1, [sp, #96]	; 0x60
   214c0:	add	r0, sp, #2240	; 0x8c0
   214c4:	add	r0, r0, #8
   214c8:	bl	4048 <strcasecmp@plt>
   214cc:	cmp	r0, #0
   214d0:	ldreq	r3, [sp, #44]	; 0x2c
   214d4:	streq	sl, [r3, #264]	; 0x108
   214d8:	ldr	r1, [sp, #100]	; 0x64
   214dc:	add	r0, sp, #2240	; 0x8c0
   214e0:	add	r0, r0, #8
   214e4:	bl	4048 <strcasecmp@plt>
   214e8:	cmp	r0, #0
   214ec:	bne	212c0 <readstat_parse_sas_commands+0x288>
   214f0:	orrs	r3, sl, fp
   214f4:	ldrbeq	r3, [sp, #1160]	; 0x488
   214f8:	uxtbne	r3, sl
   214fc:	ldr	r2, [sp, #44]	; 0x2c
   21500:	strb	r3, [r2, #272]	; 0x110
   21504:	b	212c0 <readstat_parse_sas_commands+0x288>
   21508:	.word	0x00000000
   2150c:	.word	0x7ff80000
   21510:	.word	0x00008360
   21514:	.word	0x00008350
   21518:	.word	0x0000e328
   2151c:	.word	0x000082c0
   21520:	.word	0x0000c228
   21524:	.word	0x0000d9c0
   21528:	.word	0x0000d9c0
   2152c:	.word	0x00005d64
   21530:	.word	0x00000446
   21534:	.word	0x0000dcbc
   21538:	.word	0x00000445
   2153c:	.word	0x0000d460
   21540:	.word	0x0000d468
   21544:	add	r1, sp, #2272	; 0x8e0
   21548:	add	r1, r1, #8
   2154c:	ldr	r0, [sp, #44]	; 0x2c
   21550:	bl	40fc <readstat_schema_find_or_create_entry@plt>
   21554:	ldr	r3, [sp, #84]	; 0x54
   21558:	str	r3, [r0, #16]
   2155c:	ldr	r3, [sp, #88]	; 0x58
   21560:	str	r3, [r0]
   21564:	ldr	r3, [sp, #92]	; 0x5c
   21568:	str	r3, [r0, #4]
   2156c:	ldr	r3, [sp, #52]	; 0x34
   21570:	str	r3, [r0, #8]
   21574:	b	212c0 <readstat_parse_sas_commands+0x288>
   21578:	add	r1, sp, #2272	; 0x8e0
   2157c:	add	r1, r1, #8
   21580:	ldr	r0, [sp, #44]	; 0x2c
   21584:	bl	40fc <readstat_schema_find_or_create_entry@plt>
   21588:	ldr	r3, [sp, #52]	; 0x34
   2158c:	str	r3, [r0, #8]
   21590:	b	212c0 <readstat_parse_sas_commands+0x288>
   21594:	add	r1, sp, #2272	; 0x8e0
   21598:	add	r1, r1, #8
   2159c:	ldr	r0, [sp, #44]	; 0x2c
   215a0:	bl	40fc <readstat_schema_find_or_create_entry@plt>
   215a4:	mov	r3, #1024	; 0x400
   215a8:	add	r2, sp, #1152	; 0x480
   215ac:	add	r2, r2, #8
   215b0:	mov	r1, r3
   215b4:	add	r0, r0, #580	; 0x244
   215b8:	bl	3e8c <readstat_copy@plt>
   215bc:	b	212c0 <readstat_parse_sas_commands+0x288>
   215c0:	add	r1, sp, #2272	; 0x8e0
   215c4:	add	r1, r1, #8
   215c8:	ldr	r0, [sp, #44]	; 0x2c
   215cc:	bl	40fc <readstat_schema_find_or_create_entry@plt>
   215d0:	add	r0, r0, #2160	; 0x870
   215d4:	mov	r3, #32
   215d8:	add	r2, sp, #2208	; 0x8a0
   215dc:	add	r2, r2, #8
   215e0:	mov	r1, r3
   215e4:	add	r0, r0, #8
   215e8:	bl	3e8c <readstat_copy@plt>
   215ec:	b	212c0 <readstat_parse_sas_commands+0x288>
   215f0:	ldr	r3, [sp, #108]	; 0x6c
   215f4:	str	r3, [sp, #24]
   215f8:	add	r3, sp, #1152	; 0x480
   215fc:	add	r3, r3, #8
   21600:	str	r3, [sp, #20]
   21604:	add	r3, sp, #2176	; 0x880
   21608:	add	r3, r3, #8
   2160c:	str	r3, [sp, #16]
   21610:	strd	sl, [sp, #8]
   21614:	ldr	r3, [sp, #112]	; 0x70
   21618:	str	r3, [sp]
   2161c:	ldr	r3, [sp, #116]	; 0x74
   21620:	str	r3, [sp, #4]
   21624:	vldr	d0, [sp, #72]	; 0x48
   21628:	ldr	r2, [sp, #48]	; 0x30
   2162c:	add	r1, sp, #2208	; 0x8a0
   21630:	add	r1, r1, #8
   21634:	ldr	r0, [sp, #80]	; 0x50
   21638:	bl	406c <submit_value_label@plt>
   2163c:	cmp	r0, #0
   21640:	beq	212c0 <readstat_parse_sas_commands+0x288>
   21644:	mov	r5, r0
   21648:	b	218a4 <readstat_parse_sas_commands+0x86c>
   2164c:	str	r8, [sp, #36]	; 0x24
   21650:	b	212c0 <readstat_parse_sas_commands+0x288>
   21654:	ldr	r3, [sp, #36]	; 0x24
   21658:	sub	r3, r8, r3
   2165c:	str	r3, [sp, #40]	; 0x28
   21660:	b	212c0 <readstat_parse_sas_commands+0x288>
   21664:	str	r8, [sp, #36]	; 0x24
   21668:	b	212c0 <readstat_parse_sas_commands+0x288>
   2166c:	ldr	r3, [sp, #36]	; 0x24
   21670:	sub	r3, r8, r3
   21674:	str	r3, [sp, #40]	; 0x28
   21678:	b	212c0 <readstat_parse_sas_commands+0x288>
   2167c:	ldr	r3, [sp, #104]	; 0x68
   21680:	add	r3, r3, #1
   21684:	str	r3, [sp, #104]	; 0x68
   21688:	str	r8, [sp, #124]	; 0x7c
   2168c:	b	212c0 <readstat_parse_sas_commands+0x288>
   21690:	str	r8, [sp, #36]	; 0x24
   21694:	b	212c0 <readstat_parse_sas_commands+0x288>
   21698:	ldr	r3, [sp, #36]	; 0x24
   2169c:	sub	r3, r8, r3
   216a0:	str	r3, [sp, #40]	; 0x28
   216a4:	b	212c0 <readstat_parse_sas_commands+0x288>
   216a8:	rsbs	r0, sl, #0
   216ac:	rsc	r1, fp, #0
   216b0:	bl	24538 <__aeabi_ul2d>
   216b4:	strd	r0, [sp, #72]	; 0x48
   216b8:	mov	r3, #0
   216bc:	str	r3, [sp, #48]	; 0x30
   216c0:	b	212c0 <readstat_parse_sas_commands+0x288>
   216c4:	mov	r0, sl
   216c8:	mov	r1, fp
   216cc:	bl	24538 <__aeabi_ul2d>
   216d0:	strd	r0, [sp, #72]	; 0x48
   216d4:	mov	r3, #0
   216d8:	str	r3, [sp, #48]	; 0x30
   216dc:	b	212c0 <readstat_parse_sas_commands+0x288>
   216e0:	str	sl, [sp, #112]	; 0x70
   216e4:	str	fp, [sp, #116]	; 0x74
   216e8:	b	212c0 <readstat_parse_sas_commands+0x288>
   216ec:	mov	r3, #2
   216f0:	str	r3, [sp, #48]	; 0x30
   216f4:	b	212c0 <readstat_parse_sas_commands+0x288>
   216f8:	mov	r3, #1
   216fc:	str	r3, [sp, #48]	; 0x30
   21700:	b	212c0 <readstat_parse_sas_commands+0x288>
   21704:	mov	r3, #1
   21708:	str	r3, [sp, #48]	; 0x30
   2170c:	b	212c0 <readstat_parse_sas_commands+0x288>
   21710:	mov	r3, #3
   21714:	str	r3, [sp, #48]	; 0x30
   21718:	b	212c0 <readstat_parse_sas_commands+0x288>
   2171c:	str	sl, [sp, #52]	; 0x34
   21720:	b	212c0 <readstat_parse_sas_commands+0x288>
   21724:	sub	r3, sl, #1
   21728:	str	r3, [sp, #88]	; 0x58
   2172c:	b	212c0 <readstat_parse_sas_commands+0x288>
   21730:	mov	r3, #0
   21734:	str	r3, [sp, #88]	; 0x58
   21738:	b	212c0 <readstat_parse_sas_commands+0x288>
   2173c:	cmp	r6, #0
   21740:	beq	2182c <readstat_parse_sas_commands+0x7f4>
   21744:	add	r8, r8, #1
   21748:	cmp	r7, r8
   2174c:	beq	217e4 <readstat_parse_sas_commands+0x7ac>
   21750:	lsl	r3, r6, #1
   21754:	ldr	r2, [sp, #64]	; 0x40
   21758:	ldrsh	r2, [r2, r3]
   2175c:	ldr	lr, [pc, #-568]	; 2152c <readstat_parse_sas_commands+0x4f4>
   21760:	add	lr, pc, lr
   21764:	add	lr, lr, r2
   21768:	sub	r2, r9, #492	; 0x1ec
   2176c:	ldrsh	r4, [r2, r3]
   21770:	add	r3, r9, r6
   21774:	ldrb	r5, [r3, #1704]	; 0x6a8
   21778:	cmp	r5, #0
   2177c:	ble	211f8 <readstat_parse_sas_commands+0x1c0>
   21780:	sub	r1, r5, #1
   21784:	adds	r1, lr, r1
   21788:	bcs	211f0 <readstat_parse_sas_commands+0x1b8>
   2178c:	ldrb	ip, [r8]
   21790:	mov	r3, lr
   21794:	b	211c0 <readstat_parse_sas_commands+0x188>
   21798:	ldr	r2, [sp, #108]	; 0x6c
   2179c:	ldr	r1, [sp, #44]	; 0x2c
   217a0:	ldr	r4, [sp, #80]	; 0x50
   217a4:	mov	r0, r4
   217a8:	bl	3f58 <submit_columns@plt>
   217ac:	mov	r5, r0
   217b0:	ldr	r3, [r4, #32]
   217b4:	ldr	r2, [r3, #4]
   217b8:	ldr	r0, [r3, #20]
   217bc:	blx	r2
   217c0:	ldr	r0, [sp, #132]	; 0x84
   217c4:	bl	3ee0 <free@plt>
   217c8:	cmp	r5, #0
   217cc:	beq	211a8 <readstat_parse_sas_commands+0x170>
   217d0:	b	218c0 <readstat_parse_sas_commands+0x888>
   217d4:	mov	r3, #0
   217d8:	str	r3, [sp, #44]	; 0x2c
   217dc:	b	211a8 <readstat_parse_sas_commands+0x170>
   217e0:	ldr	r6, [pc, #-696]	; 21530 <readstat_parse_sas_commands+0x4f8>
   217e4:	ldr	r3, [pc, #-696]	; 21534 <readstat_parse_sas_commands+0x4fc>
   217e8:	add	r3, pc, r3
   217ec:	add	r2, r3, r6
   217f0:	ldrb	r2, [r2, #-3204]	; 0xfffff37c
   217f4:	add	r3, r3, r2
   217f8:	ldrb	r3, [r3, #-3404]	; 0xfffff2b4
   217fc:	sub	r3, r3, #1
   21800:	cmn	r3, #1
   21804:	bne	217fc <readstat_parse_sas_commands+0x7c4>
   21808:	ldr	r3, [pc, #-728]	; 21538 <readstat_parse_sas_commands+0x500>
   2180c:	cmp	r6, r3
   21810:	bgt	21798 <readstat_parse_sas_commands+0x760>
   21814:	mov	r2, #66	; 0x42
   21818:	ldr	r1, [pc, #-740]	; 2153c <readstat_parse_sas_commands+0x504>
   2181c:	add	r1, pc, r1
   21820:	add	r0, sp, #136	; 0x88
   21824:	bl	3f40 <memcpy@plt>
   21828:	b	21868 <readstat_parse_sas_commands+0x830>
   2182c:	cmp	r8, r7
   21830:	beq	21814 <readstat_parse_sas_commands+0x7dc>
   21834:	ldrb	r3, [r8]
   21838:	str	r3, [sp, #4]
   2183c:	ldr	r3, [sp, #124]	; 0x7c
   21840:	sub	r3, r8, r3
   21844:	add	r3, r3, #1
   21848:	str	r3, [sp]
   2184c:	ldr	r3, [sp, #104]	; 0x68
   21850:	add	r3, r3, #1
   21854:	ldr	r2, [pc, #-796]	; 21540 <readstat_parse_sas_commands+0x508>
   21858:	add	r2, pc, r2
   2185c:	mov	r1, #1024	; 0x400
   21860:	add	r0, sp, #136	; 0x88
   21864:	bl	42ac <snprintf@plt>
   21868:	ldr	r3, [sp, #80]	; 0x50
   2186c:	ldr	r3, [r3, #24]
   21870:	cmp	r3, #0
   21874:	beq	21884 <readstat_parse_sas_commands+0x84c>
   21878:	ldr	r1, [sp, #108]	; 0x6c
   2187c:	add	r0, sp, #136	; 0x88
   21880:	blx	r3
   21884:	mov	r3, #5
   21888:	mov	r5, r3
   2188c:	b	218a4 <readstat_parse_sas_commands+0x86c>
   21890:	mov	r3, #15
   21894:	mov	r5, r3
   21898:	mov	r3, #0
   2189c:	str	r3, [sp, #132]	; 0x84
   218a0:	str	r3, [sp, #44]	; 0x2c
   218a4:	ldr	r3, [sp, #80]	; 0x50
   218a8:	ldr	r3, [r3, #32]
   218ac:	ldr	r2, [r3, #4]
   218b0:	ldr	r0, [r3, #20]
   218b4:	blx	r2
   218b8:	ldr	r0, [sp, #132]	; 0x84
   218bc:	bl	3ee0 <free@plt>
   218c0:	ldr	r3, [sp, #128]	; 0x80
   218c4:	cmp	r3, #0
   218c8:	movne	r2, r5
   218cc:	strne	r2, [r3]
   218d0:	ldr	r0, [sp, #44]	; 0x2c
   218d4:	bl	3fdc <readstat_schema_free@plt>
   218d8:	mov	r3, #0
   218dc:	str	r3, [sp, #44]	; 0x2c
   218e0:	b	211a8 <readstat_parse_sas_commands+0x170>
   218e4:	mov	r3, #3
   218e8:	mov	r5, r3
   218ec:	b	218a4 <readstat_parse_sas_commands+0x86c>

000218f0 <readstat_parse_spss_commands>:
   218f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   218f4:	vpush	{d8}
   218f8:	sub	sp, sp, #2304	; 0x900
   218fc:	sub	sp, sp, #4
   21900:	mov	sl, r0
   21904:	mov	r0, r1
   21908:	str	r2, [sp, #120]	; 0x78
   2190c:	mov	r4, r3
   21910:	str	r3, [sp, #144]	; 0x90
   21914:	ldr	r3, [sl, #32]
   21918:	ldr	r2, [r3]
   2191c:	ldr	r1, [r3, #20]
   21920:	blx	r2
   21924:	cmn	r0, #1
   21928:	beq	21a80 <readstat_parse_spss_commands+0x190>
   2192c:	ldr	r3, [sl, #32]
   21930:	ldr	r4, [r3, #8]
   21934:	ldr	r2, [r3, #20]
   21938:	mov	r1, #2
   2193c:	mov	r0, #0
   21940:	blx	r4
   21944:	mov	r4, r0
   21948:	cmn	r0, #1
   2194c:	beq	221e8 <readstat_parse_spss_commands+0x8f8>
   21950:	ldr	r3, [sl, #32]
   21954:	ldr	r5, [r3, #8]
   21958:	ldr	r2, [r3, #20]
   2195c:	mov	r1, #0
   21960:	mov	r0, r1
   21964:	blx	r5
   21968:	mov	r0, r4
   2196c:	bl	4138 <malloc@plt>
   21970:	mov	r6, r0
   21974:	str	r0, [sp, #152]	; 0x98
   21978:	ldr	r3, [sl, #32]
   2197c:	ldr	r5, [r3, #12]
   21980:	ldr	r2, [r3, #20]
   21984:	mov	r1, r4
   21988:	blx	r5
   2198c:	add	r3, r6, r4
   21990:	mov	r4, r3
   21994:	str	r3, [sp, #72]	; 0x48
   21998:	mov	r1, #280	; 0x118
   2199c:	mov	r0, #1
   219a0:	bl	3d78 <calloc@plt>
   219a4:	subs	r3, r0, #0
   219a8:	mov	r2, r3
   219ac:	str	r3, [sp, #32]
   219b0:	beq	22230 <readstat_parse_spss_commands+0x940>
   219b4:	mov	r3, #1
   219b8:	str	r3, [r2, #256]	; 0x100
   219bc:	cmp	r6, r4
   219c0:	beq	22144 <readstat_parse_spss_commands+0x854>
   219c4:	str	r6, [sp, #156]	; 0x9c
   219c8:	mov	r9, r6
   219cc:	mov	r3, #0
   219d0:	mov	r6, r3
   219d4:	str	r3, [sp, #60]	; 0x3c
   219d8:	mov	r7, #5
   219dc:	str	r3, [sp, #96]	; 0x60
   219e0:	str	r3, [sp, #128]	; 0x80
   219e4:	str	r3, [sp, #92]	; 0x5c
   219e8:	vldr	d8, [pc, #960]	; 21db0 <readstat_parse_spss_commands+0x4c0>
   219ec:	mov	r2, #0
   219f0:	mov	r3, #0
   219f4:	strd	r2, [sp, #40]	; 0x28
   219f8:	str	r2, [sp, #132]	; 0x84
   219fc:	str	r3, [sp, #136]	; 0x88
   21a00:	str	r6, [sp, #124]	; 0x7c
   21a04:	mov	fp, #628	; 0x274
   21a08:	str	r6, [sp, #56]	; 0x38
   21a0c:	str	r6, [sp, #52]	; 0x34
   21a10:	ldr	r3, [pc, #928]	; 21db8 <readstat_parse_spss_commands+0x4c8>
   21a14:	add	r3, pc, r3
   21a18:	mov	r2, r3
   21a1c:	add	r3, r3, #3024	; 0xbd0
   21a20:	add	r3, r3, #12
   21a24:	str	r3, [sp, #76]	; 0x4c
   21a28:	ldr	r3, [pc, #908]	; 21dbc <readstat_parse_spss_commands+0x4cc>
   21a2c:	add	r3, pc, r3
   21a30:	str	r3, [sp, #80]	; 0x50
   21a34:	sub	r3, r3, #3872	; 0xf20
   21a38:	sub	r3, r3, #12
   21a3c:	str	r3, [sp, #84]	; 0x54
   21a40:	ldr	r3, [pc, #888]	; 21dc0 <readstat_parse_spss_commands+0x4d0>
   21a44:	add	r3, pc, r3
   21a48:	str	r3, [sp, #100]	; 0x64
   21a4c:	ldr	r3, [pc, #880]	; 21dc4 <readstat_parse_spss_commands+0x4d4>
   21a50:	add	r3, pc, r3
   21a54:	sub	r3, r3, #1344	; 0x540
   21a58:	sub	r3, r3, #12
   21a5c:	str	r3, [sp, #88]	; 0x58
   21a60:	mov	r3, r7
   21a64:	mov	r7, r6
   21a68:	mov	r8, r9
   21a6c:	str	sl, [sp, #148]	; 0x94
   21a70:	mov	sl, fp
   21a74:	mov	fp, r2
   21a78:	mov	r9, r3
   21a7c:	b	2204c <readstat_parse_spss_commands+0x75c>
   21a80:	cmp	r4, #0
   21a84:	beq	22138 <readstat_parse_spss_commands+0x848>
   21a88:	mov	r3, #1
   21a8c:	str	r3, [r4]
   21a90:	mov	r3, #0
   21a94:	str	r3, [sp, #32]
   21a98:	ldr	r0, [sp, #32]
   21a9c:	add	sp, sp, #2304	; 0x900
   21aa0:	add	sp, sp, #4
   21aa4:	vpop	{d8}
   21aa8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21aac:	cmp	r3, r1
   21ab0:	bhi	21ae4 <readstat_parse_spss_commands+0x1f4>
   21ab4:	sub	r2, r1, r3
   21ab8:	add	r0, r3, r2, asr #1
   21abc:	ldrb	r2, [r3, r2, asr #1]
   21ac0:	cmp	ip, r2
   21ac4:	subcc	r1, r0, #1
   21ac8:	bcc	21aac <readstat_parse_spss_commands+0x1bc>
   21acc:	cmp	ip, r2
   21ad0:	addhi	r3, r0, #1
   21ad4:	bhi	21aac <readstat_parse_spss_commands+0x1bc>
   21ad8:	sub	r0, r0, lr
   21adc:	add	r4, r4, r0
   21ae0:	b	21b64 <readstat_parse_spss_commands+0x274>
   21ae4:	add	lr, lr, r5
   21ae8:	add	r4, r4, r5
   21aec:	ldr	r3, [sp, #100]	; 0x64
   21af0:	add	r3, r3, sl
   21af4:	ldrb	r5, [r3, #-1988]	; 0xfffff83c
   21af8:	cmp	r5, #0
   21afc:	ble	21b64 <readstat_parse_spss_commands+0x274>
   21b00:	add	r1, lr, r5, lsl #1
   21b04:	sub	r1, r1, #2
   21b08:	cmp	lr, r1
   21b0c:	bhi	21b60 <readstat_parse_spss_commands+0x270>
   21b10:	ldrb	ip, [r8]
   21b14:	mov	r2, lr
   21b18:	b	21b24 <readstat_parse_spss_commands+0x234>
   21b1c:	cmp	r1, r2
   21b20:	bcc	21b60 <readstat_parse_spss_commands+0x270>
   21b24:	sub	r3, r1, r2
   21b28:	asr	r3, r3, #1
   21b2c:	bic	r3, r3, #1
   21b30:	add	r0, r2, r3
   21b34:	ldrb	r3, [r2, r3]
   21b38:	cmp	r3, ip
   21b3c:	subhi	r1, r0, #2
   21b40:	bhi	21b1c <readstat_parse_spss_commands+0x22c>
   21b44:	ldrb	r3, [r0, #1]
   21b48:	cmp	r3, ip
   21b4c:	addcc	r2, r0, #2
   21b50:	bcc	21b1c <readstat_parse_spss_commands+0x22c>
   21b54:	sub	r0, r0, lr
   21b58:	add	r4, r4, r0, asr #1
   21b5c:	b	21b64 <readstat_parse_spss_commands+0x274>
   21b60:	add	r4, r4, r5
   21b64:	lsl	r3, r4, #1
   21b68:	ldr	r2, [sp, #88]	; 0x58
   21b6c:	ldrsh	sl, [r2, r3]
   21b70:	ldr	r3, [pc, #592]	; 21dc8 <readstat_parse_spss_commands+0x4d8>
   21b74:	add	r3, pc, r3
   21b78:	add	r4, r3, r4
   21b7c:	ldrb	r3, [r4, #-2968]	; 0xfffff468
   21b80:	cmp	r3, #0
   21b84:	beq	22034 <readstat_parse_spss_commands+0x744>
   21b88:	ldr	r2, [pc, #572]	; 21dcc <readstat_parse_spss_commands+0x4dc>
   21b8c:	add	r2, pc, r2
   21b90:	add	r2, r2, #320	; 0x140
   21b94:	add	r4, r2, r3
   21b98:	ldrb	r5, [r2, r3]
   21b9c:	add	r5, r4, r5
   21ba0:	ldr	r3, [pc, #552]	; 21dd0 <readstat_parse_spss_commands+0x4e0>
   21ba4:	add	r3, pc, r3
   21ba8:	str	r3, [sp, #104]	; 0x68
   21bac:	ldr	r3, [pc, #544]	; 21dd4 <readstat_parse_spss_commands+0x4e4>
   21bb0:	add	r3, pc, r3
   21bb4:	str	r3, [sp, #108]	; 0x6c
   21bb8:	ldr	r3, [pc, #536]	; 21dd8 <readstat_parse_spss_commands+0x4e8>
   21bbc:	add	r3, pc, r3
   21bc0:	str	r3, [sp, #112]	; 0x70
   21bc4:	ldr	r3, [pc, #528]	; 21ddc <readstat_parse_spss_commands+0x4ec>
   21bc8:	add	r3, pc, r3
   21bcc:	str	r3, [sp, #116]	; 0x74
   21bd0:	str	sl, [sp, #64]	; 0x40
   21bd4:	str	fp, [sp, #68]	; 0x44
   21bd8:	cmp	r4, r5
   21bdc:	beq	2202c <readstat_parse_spss_commands+0x73c>
   21be0:	ldrb	r3, [r4, #1]!
   21be4:	cmp	r3, #35	; 0x23
   21be8:	addls	pc, pc, r3, lsl #2
   21bec:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   21bf0:	b	21c80 <readstat_parse_spss_commands+0x390>
   21bf4:	b	21c90 <readstat_parse_spss_commands+0x3a0>
   21bf8:	b	21cb8 <readstat_parse_spss_commands+0x3c8>
   21bfc:	b	21cd0 <readstat_parse_spss_commands+0x3e0>
   21c00:	b	21ce4 <readstat_parse_spss_commands+0x3f4>
   21c04:	b	21cfc <readstat_parse_spss_commands+0x40c>
   21c08:	b	21d14 <readstat_parse_spss_commands+0x424>
   21c0c:	b	21d2c <readstat_parse_spss_commands+0x43c>
   21c10:	b	21d44 <readstat_parse_spss_commands+0x454>
   21c14:	b	21d70 <readstat_parse_spss_commands+0x480>
   21c18:	b	21d94 <readstat_parse_spss_commands+0x4a4>
   21c1c:	b	21d9c <readstat_parse_spss_commands+0x4ac>
   21c20:	b	21df0 <readstat_parse_spss_commands+0x500>
   21c24:	b	21e2c <readstat_parse_spss_commands+0x53c>
   21c28:	b	21eac <readstat_parse_spss_commands+0x5bc>
   21c2c:	b	21f1c <readstat_parse_spss_commands+0x62c>
   21c30:	b	21f24 <readstat_parse_spss_commands+0x634>
   21c34:	b	21f34 <readstat_parse_spss_commands+0x644>
   21c38:	b	21f3c <readstat_parse_spss_commands+0x64c>
   21c3c:	b	21f4c <readstat_parse_spss_commands+0x65c>
   21c40:	b	21f60 <readstat_parse_spss_commands+0x670>
   21c44:	b	21f68 <readstat_parse_spss_commands+0x678>
   21c48:	b	21f78 <readstat_parse_spss_commands+0x688>
   21c4c:	b	21f80 <readstat_parse_spss_commands+0x690>
   21c50:	b	21f88 <readstat_parse_spss_commands+0x698>
   21c54:	b	21f90 <readstat_parse_spss_commands+0x6a0>
   21c58:	b	21f98 <readstat_parse_spss_commands+0x6a8>
   21c5c:	b	21fa0 <readstat_parse_spss_commands+0x6b0>
   21c60:	b	21fb0 <readstat_parse_spss_commands+0x6c0>
   21c64:	b	21fb8 <readstat_parse_spss_commands+0x6c8>
   21c68:	b	21fc0 <readstat_parse_spss_commands+0x6d0>
   21c6c:	b	21fcc <readstat_parse_spss_commands+0x6dc>
   21c70:	b	21fec <readstat_parse_spss_commands+0x6fc>
   21c74:	b	22004 <readstat_parse_spss_commands+0x714>
   21c78:	b	22014 <readstat_parse_spss_commands+0x724>
   21c7c:	b	22020 <readstat_parse_spss_commands+0x730>
   21c80:	mov	r2, #0
   21c84:	mov	r3, #0
   21c88:	strd	r2, [sp, #40]	; 0x28
   21c8c:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   21c90:	mov	r1, #10
   21c94:	ldrd	sl, [sp, #40]	; 0x28
   21c98:	umull	r2, r3, sl, r1
   21c9c:	mla	r3, r1, fp, r3
   21ca0:	ldrb	r1, [r8]
   21ca4:	sub	r1, r1, #48	; 0x30
   21ca8:	adds	sl, r2, r1
   21cac:	adc	fp, r3, r1, asr #31
   21cb0:	strd	sl, [sp, #40]	; 0x28
   21cb4:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   21cb8:	ldr	r3, [sp, #40]	; 0x28
   21cbc:	sub	r3, r3, #1
   21cc0:	str	r3, [sp, #92]	; 0x5c
   21cc4:	mov	r3, #1
   21cc8:	str	r3, [sp, #96]	; 0x60
   21ccc:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   21cd0:	ldr	r3, [sp, #40]	; 0x28
   21cd4:	ldr	r2, [sp, #92]	; 0x5c
   21cd8:	sub	r3, r3, r2
   21cdc:	str	r3, [sp, #96]	; 0x60
   21ce0:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   21ce4:	ldr	r3, [sp, #56]	; 0x38
   21ce8:	ldr	r2, [sp, #52]	; 0x34
   21cec:	mov	r1, #1024	; 0x400
   21cf0:	add	r0, sp, #1184	; 0x4a0
   21cf4:	bl	4054 <readstat_copy_quoted@plt>
   21cf8:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   21cfc:	ldr	r3, [sp, #56]	; 0x38
   21d00:	ldr	r2, [sp, #52]	; 0x34
   21d04:	mov	r1, #32
   21d08:	add	r0, sp, #2208	; 0x8a0
   21d0c:	bl	4054 <readstat_copy_quoted@plt>
   21d10:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   21d14:	ldr	r3, [sp, #56]	; 0x38
   21d18:	ldr	r2, [sp, #52]	; 0x34
   21d1c:	mov	r1, #32
   21d20:	add	r0, sp, #2272	; 0x8e0
   21d24:	bl	3e8c <readstat_copy@plt>
   21d28:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   21d2c:	ldr	r3, [sp, #56]	; 0x38
   21d30:	ldr	r2, [sp, #52]	; 0x34
   21d34:	mov	r1, #32
   21d38:	add	r0, sp, #2240	; 0x8c0
   21d3c:	bl	3e8c <readstat_copy@plt>
   21d40:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   21d44:	add	r1, sp, #2272	; 0x8e0
   21d48:	ldr	r0, [sp, #32]
   21d4c:	bl	40fc <readstat_schema_find_or_create_entry@plt>
   21d50:	str	r9, [r0, #16]
   21d54:	ldr	r3, [sp, #128]	; 0x80
   21d58:	str	r3, [r0]
   21d5c:	ldr	r3, [sp, #92]	; 0x5c
   21d60:	str	r3, [r0, #4]
   21d64:	ldr	r3, [sp, #96]	; 0x60
   21d68:	str	r3, [r0, #8]
   21d6c:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   21d70:	add	r1, sp, #2272	; 0x8e0
   21d74:	ldr	r0, [sp, #32]
   21d78:	bl	40fc <readstat_schema_find_or_create_entry@plt>
   21d7c:	mov	r3, #1024	; 0x400
   21d80:	add	r2, sp, #1184	; 0x4a0
   21d84:	mov	r1, r3
   21d88:	add	r0, r0, #580	; 0x244
   21d8c:	bl	3e8c <readstat_copy@plt>
   21d90:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   21d94:	mov	r7, #0
   21d98:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   21d9c:	ldr	r3, [pc, #60]	; 21de0 <readstat_parse_spss_commands+0x4f0>
   21da0:	cmp	r7, r3
   21da4:	addls	r7, r7, #1
   21da8:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   21dac:	nop			; (mov r0, r0)
   21db0:	.word	0x00000000
   21db4:	.word	0x7ff80000
   21db8:	.word	0x0000d2ec
   21dbc:	.word	0x0000f2cc
   21dc0:	.word	0x0000f2b4
   21dc4:	.word	0x0000f2a8
   21dc8:	.word	0x0001117c
   21dcc:	.word	0x00011164
   21dd0:	.word	0x00003cc8
   21dd4:	.word	0x00003cbc
   21dd8:	.word	0x00011590
   21ddc:	.word	0x00011590
   21de0:	.word	0x000003ff
   21de4:	.word	0x00010c50
   21de8:	.word	0x00011010
   21dec:	.word	0x00010f8c
   21df0:	ldr	r1, [sp, #112]	; 0x70
   21df4:	add	r0, sp, #2240	; 0x8c0
   21df8:	bl	4048 <strcasecmp@plt>
   21dfc:	cmp	r0, #0
   21e00:	ldreq	r3, [sp, #32]
   21e04:	ldreq	r2, [sp, #40]	; 0x28
   21e08:	streq	r2, [r3, #264]	; 0x108
   21e0c:	ldr	r1, [sp, #116]	; 0x74
   21e10:	add	r0, sp, #2240	; 0x8c0
   21e14:	bl	4048 <strcasecmp@plt>
   21e18:	cmp	r0, #0
   21e1c:	ldrbeq	r3, [sp, #1184]	; 0x4a0
   21e20:	ldreq	r2, [sp, #32]
   21e24:	strbeq	r3, [r2, #272]	; 0x110
   21e28:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   21e2c:	add	r3, r6, #1
   21e30:	str	r3, [sp, #140]	; 0x8c
   21e34:	mov	r3, r6
   21e38:	ldr	r2, [sp, #108]	; 0x6c
   21e3c:	mov	r1, #256	; 0x100
   21e40:	add	r0, sp, #160	; 0xa0
   21e44:	bl	42ac <snprintf@plt>
   21e48:	cmp	r7, #0
   21e4c:	ble	21ea4 <readstat_parse_spss_commands+0x5b4>
   21e50:	mov	r6, #0
   21e54:	add	r3, sp, #2272	; 0x8e0
   21e58:	str	r3, [sp, #36]	; 0x24
   21e5c:	add	r3, sp, #160	; 0xa0
   21e60:	str	r3, [sp, #48]	; 0x30
   21e64:	ldr	sl, [sp, #64]	; 0x40
   21e68:	ldr	fp, [sp, #68]	; 0x44
   21e6c:	ldr	r1, [sp, #36]	; 0x24
   21e70:	ldr	r0, [sp, #32]
   21e74:	bl	40fc <readstat_schema_find_or_create_entry@plt>
   21e78:	add	r0, r0, #2160	; 0x870
   21e7c:	mov	r3, #256	; 0x100
   21e80:	ldr	r2, [sp, #48]	; 0x30
   21e84:	mov	r1, #32
   21e88:	add	r0, r0, #8
   21e8c:	bl	3e8c <readstat_copy@plt>
   21e90:	add	r6, r6, #1
   21e94:	cmp	r7, r6
   21e98:	bne	21e6c <readstat_parse_spss_commands+0x57c>
   21e9c:	str	sl, [sp, #64]	; 0x40
   21ea0:	str	fp, [sp, #68]	; 0x44
   21ea4:	ldr	r6, [sp, #140]	; 0x8c
   21ea8:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   21eac:	mov	r3, r6
   21eb0:	ldr	r2, [sp, #104]	; 0x68
   21eb4:	mov	r1, #256	; 0x100
   21eb8:	add	r0, sp, #160	; 0xa0
   21ebc:	mov	sl, r0
   21ec0:	bl	42ac <snprintf@plt>
   21ec4:	ldr	r3, [sp, #120]	; 0x78
   21ec8:	str	r3, [sp, #24]
   21ecc:	add	r3, sp, #1184	; 0x4a0
   21ed0:	str	r3, [sp, #20]
   21ed4:	add	r3, sp, #2208	; 0x8a0
   21ed8:	str	r3, [sp, #16]
   21edc:	ldrd	r2, [sp, #40]	; 0x28
   21ee0:	strd	r2, [sp, #8]
   21ee4:	ldr	r3, [sp, #132]	; 0x84
   21ee8:	str	r3, [sp]
   21eec:	ldr	r3, [sp, #136]	; 0x88
   21ef0:	str	r3, [sp, #4]
   21ef4:	vmov.f64	d0, d8
   21ef8:	ldr	r2, [sp, #60]	; 0x3c
   21efc:	mov	r1, sl
   21f00:	ldr	r0, [sp, #148]	; 0x94
   21f04:	bl	406c <submit_value_label@plt>
   21f08:	cmp	r0, #0
   21f0c:	beq	21bd8 <readstat_parse_spss_commands+0x2e8>
   21f10:	mov	r6, r0
   21f14:	ldr	sl, [sp, #148]	; 0x94
   21f18:	b	221f8 <readstat_parse_spss_commands+0x908>
   21f1c:	str	r8, [sp, #52]	; 0x34
   21f20:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   21f24:	ldr	r3, [sp, #52]	; 0x34
   21f28:	sub	r3, r8, r3
   21f2c:	str	r3, [sp, #56]	; 0x38
   21f30:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   21f34:	str	r8, [sp, #52]	; 0x34
   21f38:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   21f3c:	ldr	r3, [sp, #52]	; 0x34
   21f40:	sub	r3, r8, r3
   21f44:	str	r3, [sp, #56]	; 0x38
   21f48:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   21f4c:	ldr	r3, [sp, #124]	; 0x7c
   21f50:	add	r3, r3, #1
   21f54:	str	r3, [sp, #124]	; 0x7c
   21f58:	str	r8, [sp, #156]	; 0x9c
   21f5c:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   21f60:	str	r8, [sp, #52]	; 0x34
   21f64:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   21f68:	ldr	r3, [sp, #52]	; 0x34
   21f6c:	sub	r3, r8, r3
   21f70:	str	r3, [sp, #56]	; 0x38
   21f74:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   21f78:	mov	r9, #0
   21f7c:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   21f80:	mov	r9, #0
   21f84:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   21f88:	mov	r9, #5
   21f8c:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   21f90:	mov	r9, #5
   21f94:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   21f98:	mov	r9, #0
   21f9c:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   21fa0:	ldr	r3, [sp, #40]	; 0x28
   21fa4:	sub	r3, r3, #1
   21fa8:	str	r3, [sp, #128]	; 0x80
   21fac:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   21fb0:	mov	r9, #5
   21fb4:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   21fb8:	mov	r9, #5
   21fbc:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   21fc0:	mvn	r3, #0
   21fc4:	str	r3, [sp, #60]	; 0x3c
   21fc8:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   21fcc:	ldrd	r0, [sp, #40]	; 0x28
   21fd0:	rsbs	r0, r0, #0
   21fd4:	rsc	r1, r1, #0
   21fd8:	bl	24538 <__aeabi_ul2d>
   21fdc:	vmov	d8, r0, r1
   21fe0:	mov	r3, #0
   21fe4:	str	r3, [sp, #60]	; 0x3c
   21fe8:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   21fec:	ldrd	r0, [sp, #40]	; 0x28
   21ff0:	bl	24538 <__aeabi_ul2d>
   21ff4:	vmov	d8, r0, r1
   21ff8:	mov	r3, #0
   21ffc:	str	r3, [sp, #60]	; 0x3c
   22000:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   22004:	ldrd	r2, [sp, #40]	; 0x28
   22008:	str	r2, [sp, #132]	; 0x84
   2200c:	str	r3, [sp, #136]	; 0x88
   22010:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   22014:	mov	r3, #2
   22018:	str	r3, [sp, #60]	; 0x3c
   2201c:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   22020:	mov	r3, #1
   22024:	str	r3, [sp, #60]	; 0x3c
   22028:	b	21bd8 <readstat_parse_spss_commands+0x2e8>
   2202c:	ldr	sl, [sp, #64]	; 0x40
   22030:	ldr	fp, [sp, #68]	; 0x44
   22034:	cmp	sl, #0
   22038:	beq	22160 <readstat_parse_spss_commands+0x870>
   2203c:	add	r8, r8, #1
   22040:	ldr	r3, [sp, #72]	; 0x48
   22044:	cmp	r3, r8
   22048:	beq	22090 <readstat_parse_spss_commands+0x7a0>
   2204c:	lsl	r3, sl, #1
   22050:	ldr	r2, [sp, #76]	; 0x4c
   22054:	ldrsh	lr, [r2, r3]
   22058:	add	lr, fp, lr
   2205c:	ldr	r2, [sp, #84]	; 0x54
   22060:	ldrsh	r4, [r2, r3]
   22064:	ldr	r3, [sp, #80]	; 0x50
   22068:	add	r3, r3, sl
   2206c:	ldrb	r5, [r3, #-2620]	; 0xfffff5c4
   22070:	cmp	r5, #0
   22074:	ble	21aec <readstat_parse_spss_commands+0x1fc>
   22078:	sub	r1, r5, #1
   2207c:	adds	r1, lr, r1
   22080:	bcs	21ae4 <readstat_parse_spss_commands+0x1f4>
   22084:	ldrb	ip, [r8]
   22088:	mov	r3, lr
   2208c:	b	21ab4 <readstat_parse_spss_commands+0x1c4>
   22090:	mov	fp, sl
   22094:	mov	r7, r9
   22098:	ldr	sl, [sp, #148]	; 0x94
   2209c:	ldr	r3, [pc, #-704]	; 21de4 <readstat_parse_spss_commands+0x4f4>
   220a0:	add	r3, pc, r3
   220a4:	add	r2, r3, #320	; 0x140
   220a8:	add	r3, r3, fp
   220ac:	ldrb	r3, [r3, #484]	; 0x1e4
   220b0:	add	r4, r2, r3
   220b4:	ldrb	r5, [r2, r3]
   220b8:	add	r5, r4, r5
   220bc:	add	r6, sp, #2272	; 0x8e0
   220c0:	cmp	r5, r4
   220c4:	beq	221c8 <readstat_parse_spss_commands+0x8d8>
   220c8:	ldrb	r3, [r4, #1]!
   220cc:	cmp	r3, #8
   220d0:	bne	220c0 <readstat_parse_spss_commands+0x7d0>
   220d4:	mov	r1, r6
   220d8:	ldr	r0, [sp, #32]
   220dc:	bl	40fc <readstat_schema_find_or_create_entry@plt>
   220e0:	str	r7, [r0, #16]
   220e4:	ldr	r3, [sp, #128]	; 0x80
   220e8:	str	r3, [r0]
   220ec:	ldr	r3, [sp, #92]	; 0x5c
   220f0:	str	r3, [r0, #4]
   220f4:	ldr	r3, [sp, #96]	; 0x60
   220f8:	str	r3, [r0, #8]
   220fc:	b	220c0 <readstat_parse_spss_commands+0x7d0>
   22100:	ldr	r2, [sp, #120]	; 0x78
   22104:	ldr	r1, [sp, #32]
   22108:	mov	r0, sl
   2210c:	bl	3f58 <submit_columns@plt>
   22110:	mov	r6, r0
   22114:	ldr	r3, [sl, #32]
   22118:	ldr	r2, [r3, #4]
   2211c:	ldr	r0, [r3, #20]
   22120:	blx	r2
   22124:	ldr	r0, [sp, #152]	; 0x98
   22128:	bl	3ee0 <free@plt>
   2212c:	cmp	r6, #0
   22130:	beq	21a98 <readstat_parse_spss_commands+0x1a8>
   22134:	b	22210 <readstat_parse_spss_commands+0x920>
   22138:	mov	r3, #0
   2213c:	str	r3, [sp, #32]
   22140:	b	21a98 <readstat_parse_spss_commands+0x1a8>
   22144:	mov	r7, #5
   22148:	mov	r3, #0
   2214c:	str	r3, [sp, #96]	; 0x60
   22150:	str	r3, [sp, #128]	; 0x80
   22154:	str	r3, [sp, #92]	; 0x5c
   22158:	mov	fp, #628	; 0x274
   2215c:	b	2209c <readstat_parse_spss_commands+0x7ac>
   22160:	mov	r9, r8
   22164:	ldr	sl, [sp, #148]	; 0x94
   22168:	ldr	r3, [sp, #72]	; 0x48
   2216c:	cmp	r8, r3
   22170:	beq	221d0 <readstat_parse_spss_commands+0x8e0>
   22174:	ldrb	r3, [r9]
   22178:	str	r3, [sp, #4]
   2217c:	ldr	r3, [sp, #156]	; 0x9c
   22180:	sub	r3, r9, r3
   22184:	add	r3, r3, #1
   22188:	str	r3, [sp]
   2218c:	ldr	r3, [sp, #124]	; 0x7c
   22190:	add	r3, r3, #1
   22194:	ldr	r2, [pc, #-948]	; 21de8 <readstat_parse_spss_commands+0x4f8>
   22198:	add	r2, pc, r2
   2219c:	mov	r1, #1024	; 0x400
   221a0:	add	r0, sp, #160	; 0xa0
   221a4:	bl	42ac <snprintf@plt>
   221a8:	ldr	r3, [sl, #24]
   221ac:	cmp	r3, #0
   221b0:	beq	221c0 <readstat_parse_spss_commands+0x8d0>
   221b4:	ldr	r1, [sp, #120]	; 0x78
   221b8:	add	r0, sp, #160	; 0xa0
   221bc:	blx	r3
   221c0:	mov	r6, #5
   221c4:	b	221f8 <readstat_parse_spss_commands+0x908>
   221c8:	cmp	fp, #628	; 0x274
   221cc:	bge	22100 <readstat_parse_spss_commands+0x810>
   221d0:	mov	r2, #67	; 0x43
   221d4:	ldr	r1, [pc, #-1008]	; 21dec <readstat_parse_spss_commands+0x4fc>
   221d8:	add	r1, pc, r1
   221dc:	add	r0, sp, #160	; 0xa0
   221e0:	bl	3f40 <memcpy@plt>
   221e4:	b	221a8 <readstat_parse_spss_commands+0x8b8>
   221e8:	mov	r6, #15
   221ec:	mov	r3, #0
   221f0:	str	r3, [sp, #152]	; 0x98
   221f4:	str	r3, [sp, #32]
   221f8:	ldr	r3, [sl, #32]
   221fc:	ldr	r2, [r3, #4]
   22200:	ldr	r0, [r3, #20]
   22204:	blx	r2
   22208:	ldr	r0, [sp, #152]	; 0x98
   2220c:	bl	3ee0 <free@plt>
   22210:	ldr	r3, [sp, #144]	; 0x90
   22214:	cmp	r3, #0
   22218:	strne	r6, [r3]
   2221c:	ldr	r0, [sp, #32]
   22220:	bl	3fdc <readstat_schema_free@plt>
   22224:	mov	r3, #0
   22228:	str	r3, [sp, #32]
   2222c:	b	21a98 <readstat_parse_spss_commands+0x1a8>
   22230:	mov	r6, #3
   22234:	b	221f8 <readstat_parse_spss_commands+0x908>

00022238 <readstat_schema_free>:
   22238:	push	{r4, lr}
   2223c:	subs	r4, r0, #0
   22240:	popeq	{r4, pc}
   22244:	ldr	r0, [r4, #276]	; 0x114
   22248:	bl	3ee0 <free@plt>
   2224c:	mov	r0, r4
   22250:	bl	3ee0 <free@plt>
   22254:	pop	{r4, pc}

00022258 <readstat_schema_find_or_create_entry>:
   22258:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2225c:	mov	r9, r0
   22260:	mov	r8, r1
   22264:	ldr	r7, [r0, #268]	; 0x10c
   22268:	cmp	r7, #0
   2226c:	ble	222a0 <readstat_schema_find_or_create_entry+0x48>
   22270:	ldr	r4, [r0, #276]	; 0x114
   22274:	mov	r5, #0
   22278:	mov	r6, r4
   2227c:	mov	r1, r8
   22280:	add	r0, r4, #24
   22284:	bl	3e20 <strcmp@plt>
   22288:	cmp	r0, #0
   2228c:	beq	22304 <readstat_schema_find_or_create_entry+0xac>
   22290:	add	r5, r5, #1
   22294:	add	r4, r4, #2208	; 0x8a0
   22298:	cmp	r5, r7
   2229c:	bne	22278 <readstat_schema_find_or_create_entry+0x20>
   222a0:	mov	r4, #2208	; 0x8a0
   222a4:	mla	r1, r7, r4, r4
   222a8:	ldr	r0, [r9, #276]	; 0x114
   222ac:	bl	4018 <realloc@plt>
   222b0:	str	r0, [r9, #276]	; 0x114
   222b4:	ldr	r6, [r9, #268]	; 0x10c
   222b8:	mla	r6, r4, r6, r0
   222bc:	mov	r2, r4
   222c0:	mov	r1, #0
   222c4:	mov	r0, r6
   222c8:	bl	42d0 <memset@plt>
   222cc:	mov	r0, r8
   222d0:	bl	4228 <strlen@plt>
   222d4:	mov	r3, r0
   222d8:	mov	r2, r8
   222dc:	mov	r1, #300	; 0x12c
   222e0:	add	r0, r6, #24
   222e4:	bl	3e8c <readstat_copy@plt>
   222e8:	mov	r3, #46	; 0x2e
   222ec:	strb	r3, [r6, #2200]	; 0x898
   222f0:	ldr	r3, [r9, #268]	; 0x10c
   222f4:	add	r2, r3, #1
   222f8:	str	r2, [r9, #268]	; 0x10c
   222fc:	str	r3, [r6, #20]
   22300:	b	2230c <readstat_schema_find_or_create_entry+0xb4>
   22304:	cmp	r4, #0
   22308:	beq	222a0 <readstat_schema_find_or_create_entry+0x48>
   2230c:	mov	r0, r6
   22310:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00022314 <readstat_parse_stata_dictionary>:
   22314:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22318:	sub	sp, sp, #3312	; 0xcf0
   2231c:	sub	sp, sp, #4
   22320:	mov	fp, r0
   22324:	mov	r0, r1
   22328:	str	r2, [sp, #56]	; 0x38
   2232c:	mov	r4, r3
   22330:	str	r3, [sp, #60]	; 0x3c
   22334:	ldr	r3, [fp, #32]
   22338:	ldr	r2, [r3]
   2233c:	ldr	r1, [r3, #20]
   22340:	blx	r2
   22344:	cmn	r0, #1
   22348:	beq	22448 <readstat_parse_stata_dictionary+0x134>
   2234c:	ldr	r3, [fp, #32]
   22350:	ldr	r4, [r3, #8]
   22354:	ldr	r2, [r3, #20]
   22358:	mov	r1, #2
   2235c:	mov	r0, #0
   22360:	blx	r4
   22364:	mov	r4, r0
   22368:	cmn	r0, #1
   2236c:	beq	22964 <readstat_parse_stata_dictionary+0x650>
   22370:	ldr	r3, [fp, #32]
   22374:	ldr	r5, [r3, #8]
   22378:	ldr	r2, [r3, #20]
   2237c:	mov	r1, #0
   22380:	mov	r0, r1
   22384:	blx	r5
   22388:	mov	r0, r4
   2238c:	bl	4138 <malloc@plt>
   22390:	mov	r6, r0
   22394:	str	r0, [sp, #76]	; 0x4c
   22398:	ldr	r3, [fp, #32]
   2239c:	ldr	r5, [r3, #12]
   223a0:	ldr	r2, [r3, #20]
   223a4:	mov	r1, r4
   223a8:	blx	r5
   223ac:	add	r3, r6, r4
   223b0:	mov	r4, r3
   223b4:	str	r3, [sp, #36]	; 0x24
   223b8:	mov	r1, #280	; 0x118
   223bc:	mov	r0, #1
   223c0:	bl	3d78 <calloc@plt>
   223c4:	subs	sl, r0, #0
   223c8:	beq	229ac <readstat_parse_stata_dictionary+0x698>
   223cc:	mov	r3, #1
   223d0:	str	r3, [sl, #256]	; 0x100
   223d4:	cmp	r6, r4
   223d8:	beq	2289c <readstat_parse_stata_dictionary+0x588>
   223dc:	str	r6, [sp, #72]	; 0x48
   223e0:	mov	r9, r6
   223e4:	mov	r3, #0
   223e8:	str	r3, [sp, #52]	; 0x34
   223ec:	str	r3, [sp, #32]
   223f0:	str	r3, [sp, #12]
   223f4:	mov	r8, r3
   223f8:	mov	r7, #1
   223fc:	str	r3, [sp, #16]
   22400:	str	r3, [sp, #8]
   22404:	str	r3, [sp, #48]	; 0x30
   22408:	str	r3, [sp, #24]
   2240c:	ldr	r6, [pc, #1452]	; 229c0 <readstat_parse_stata_dictionary+0x6ac>
   22410:	add	r6, pc, r6
   22414:	add	r3, r6, #1136	; 0x470
   22418:	add	r3, r3, #8
   2241c:	str	r3, [sp, #28]
   22420:	ldr	r3, [pc, #1436]	; 229c4 <readstat_parse_stata_dictionary+0x6b0>
   22424:	add	r3, pc, r3
   22428:	str	r3, [sp, #40]	; 0x28
   2242c:	ldr	r3, [pc, #1428]	; 229c8 <readstat_parse_stata_dictionary+0x6b4>
   22430:	add	r3, pc, r3
   22434:	add	r3, r3, #3472	; 0xd90
   22438:	add	r3, r3, #12
   2243c:	str	r3, [sp, #64]	; 0x40
   22440:	str	fp, [sp, #68]	; 0x44
   22444:	b	2285c <readstat_parse_stata_dictionary+0x548>
   22448:	cmp	r4, #0
   2244c:	moveq	sl, #0
   22450:	movne	r3, #1
   22454:	strne	r3, [r4]
   22458:	movne	sl, #0
   2245c:	mov	r0, sl
   22460:	add	sp, sp, #3312	; 0xcf0
   22464:	add	sp, sp, #4
   22468:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2246c:	cmp	r1, r3
   22470:	bcc	224a4 <readstat_parse_stata_dictionary+0x190>
   22474:	sub	r2, r1, r3
   22478:	add	r0, r3, r2, asr #1
   2247c:	ldrb	r2, [r3, r2, asr #1]
   22480:	cmp	ip, r2
   22484:	subcc	r1, r0, #1
   22488:	bcc	2246c <readstat_parse_stata_dictionary+0x158>
   2248c:	cmp	ip, r2
   22490:	addhi	r3, r0, #1
   22494:	bhi	2246c <readstat_parse_stata_dictionary+0x158>
   22498:	sub	r0, r0, lr
   2249c:	add	r4, r4, r0
   224a0:	b	22524 <readstat_parse_stata_dictionary+0x210>
   224a4:	add	lr, lr, r5
   224a8:	add	r4, r4, r5
   224ac:	ldr	r3, [sp, #40]	; 0x28
   224b0:	add	r7, r3, r7
   224b4:	ldrb	r5, [r7, #1620]	; 0x654
   224b8:	cmp	r5, #0
   224bc:	ble	22524 <readstat_parse_stata_dictionary+0x210>
   224c0:	add	r1, lr, r5, lsl #1
   224c4:	sub	r1, r1, #2
   224c8:	cmp	lr, r1
   224cc:	bhi	22520 <readstat_parse_stata_dictionary+0x20c>
   224d0:	ldrb	ip, [r9]
   224d4:	mov	r2, lr
   224d8:	b	224e4 <readstat_parse_stata_dictionary+0x1d0>
   224dc:	cmp	r2, r1
   224e0:	bhi	22520 <readstat_parse_stata_dictionary+0x20c>
   224e4:	sub	r3, r1, r2
   224e8:	asr	r3, r3, #1
   224ec:	bic	r3, r3, #1
   224f0:	add	r0, r2, r3
   224f4:	ldrb	r3, [r2, r3]
   224f8:	cmp	r3, ip
   224fc:	subhi	r1, r0, #2
   22500:	bhi	224dc <readstat_parse_stata_dictionary+0x1c8>
   22504:	ldrb	r3, [r0, #1]
   22508:	cmp	r3, ip
   2250c:	addcc	r2, r0, #2
   22510:	bcc	224dc <readstat_parse_stata_dictionary+0x1c8>
   22514:	sub	r0, r0, lr
   22518:	add	r4, r4, r0, asr #1
   2251c:	b	22524 <readstat_parse_stata_dictionary+0x210>
   22520:	add	r4, r4, r5
   22524:	ldr	r3, [pc, #1184]	; 229cc <readstat_parse_stata_dictionary+0x6b8>
   22528:	add	r3, pc, r3
   2252c:	add	r4, r3, r4
   22530:	ldrb	r7, [r4, #1780]	; 0x6f4
   22534:	ldrb	r3, [r4, #2632]	; 0xa48
   22538:	cmp	r3, #0
   2253c:	beq	22844 <readstat_parse_stata_dictionary+0x530>
   22540:	ldr	r2, [sp, #64]	; 0x40
   22544:	add	r4, r2, r3
   22548:	ldrb	r5, [r2, r3]
   2254c:	add	r5, r4, r5
   22550:	add	r3, sp, #1104	; 0x450
   22554:	str	r3, [sp, #20]
   22558:	add	r3, r3, #580	; 0x244
   2255c:	str	r3, [sp, #44]	; 0x2c
   22560:	cmp	r4, r5
   22564:	beq	22844 <readstat_parse_stata_dictionary+0x530>
   22568:	ldrb	r3, [r4, #1]!
   2256c:	cmp	r3, #28
   22570:	addls	pc, pc, r3, lsl #2
   22574:	b	22560 <readstat_parse_stata_dictionary+0x24c>
   22578:	b	225ec <readstat_parse_stata_dictionary+0x2d8>
   2257c:	b	225f4 <readstat_parse_stata_dictionary+0x2e0>
   22580:	b	22608 <readstat_parse_stata_dictionary+0x2f4>
   22584:	b	22634 <readstat_parse_stata_dictionary+0x320>
   22588:	b	226e4 <readstat_parse_stata_dictionary+0x3d0>
   2258c:	b	226fc <readstat_parse_stata_dictionary+0x3e8>
   22590:	b	22718 <readstat_parse_stata_dictionary+0x404>
   22594:	b	22730 <readstat_parse_stata_dictionary+0x41c>
   22598:	b	22738 <readstat_parse_stata_dictionary+0x424>
   2259c:	b	22748 <readstat_parse_stata_dictionary+0x434>
   225a0:	b	22750 <readstat_parse_stata_dictionary+0x43c>
   225a4:	b	22760 <readstat_parse_stata_dictionary+0x44c>
   225a8:	b	22768 <readstat_parse_stata_dictionary+0x454>
   225ac:	b	22778 <readstat_parse_stata_dictionary+0x464>
   225b0:	b	2278c <readstat_parse_stata_dictionary+0x478>
   225b4:	b	22794 <readstat_parse_stata_dictionary+0x480>
   225b8:	b	227a0 <readstat_parse_stata_dictionary+0x48c>
   225bc:	b	227ac <readstat_parse_stata_dictionary+0x498>
   225c0:	b	227bc <readstat_parse_stata_dictionary+0x4a8>
   225c4:	b	227d0 <readstat_parse_stata_dictionary+0x4bc>
   225c8:	b	227d8 <readstat_parse_stata_dictionary+0x4c4>
   225cc:	b	227e4 <readstat_parse_stata_dictionary+0x4d0>
   225d0:	b	227f0 <readstat_parse_stata_dictionary+0x4dc>
   225d4:	b	227fc <readstat_parse_stata_dictionary+0x4e8>
   225d8:	b	22808 <readstat_parse_stata_dictionary+0x4f4>
   225dc:	b	22814 <readstat_parse_stata_dictionary+0x500>
   225e0:	b	22820 <readstat_parse_stata_dictionary+0x50c>
   225e4:	b	22830 <readstat_parse_stata_dictionary+0x51c>
   225e8:	b	22838 <readstat_parse_stata_dictionary+0x524>
   225ec:	mov	r8, #0
   225f0:	b	22560 <readstat_parse_stata_dictionary+0x24c>
   225f4:	add	r8, r8, r8, lsl #2
   225f8:	ldrb	r3, [r9]
   225fc:	sub	r3, r3, #48	; 0x30
   22600:	add	r8, r3, r8, lsl #1
   22604:	b	22560 <readstat_parse_stata_dictionary+0x24c>
   22608:	mov	r2, #2208	; 0x8a0
   2260c:	mov	r1, #0
   22610:	ldr	r0, [sp, #20]
   22614:	bl	42d0 <memset@plt>
   22618:	mov	r3, #46	; 0x2e
   2261c:	strb	r3, [sp, #3304]	; 0xce8
   22620:	mov	r3, #5
   22624:	str	r3, [sp, #1120]	; 0x460
   22628:	ldr	r3, [sp, #24]
   2262c:	str	r3, [sp, #1124]	; 0x464
   22630:	b	22560 <readstat_parse_stata_dictionary+0x24c>
   22634:	ldr	r3, [sp, #12]
   22638:	str	r3, [sp, #1104]	; 0x450
   2263c:	ldr	r2, [sp, #32]
   22640:	str	r2, [sp, #1108]	; 0x454
   22644:	ldr	r3, [sp, #1112]	; 0x458
   22648:	add	r3, r2, r3
   2264c:	str	r3, [sp, #32]
   22650:	ldr	r3, [sp, #68]	; 0x44
   22654:	ldr	fp, [r3, #8]
   22658:	cmp	fp, #0
   2265c:	beq	22694 <readstat_parse_stata_dictionary+0x380>
   22660:	ldr	r3, [sp, #48]	; 0x30
   22664:	str	r3, [sp, #3268]	; 0xcc4
   22668:	ldr	r3, [sp, #56]	; 0x38
   2266c:	mov	r2, #0
   22670:	add	r1, sp, #1120	; 0x460
   22674:	ldr	r0, [sp, #24]
   22678:	blx	fp
   2267c:	cmp	r0, #1
   22680:	beq	229b4 <readstat_parse_stata_dictionary+0x6a0>
   22684:	cmp	r0, #2
   22688:	moveq	r3, #1
   2268c:	streq	r3, [sp, #1116]	; 0x45c
   22690:	beq	226a0 <readstat_parse_stata_dictionary+0x38c>
   22694:	ldr	r3, [sp, #48]	; 0x30
   22698:	add	r3, r3, #1
   2269c:	str	r3, [sp, #48]	; 0x30
   226a0:	ldr	r1, [sl, #268]	; 0x10c
   226a4:	mov	fp, #2208	; 0x8a0
   226a8:	mla	r1, r1, fp, fp
   226ac:	ldr	r0, [sl, #276]	; 0x114
   226b0:	bl	4018 <realloc@plt>
   226b4:	str	r0, [sl, #276]	; 0x114
   226b8:	ldr	r3, [sl, #268]	; 0x10c
   226bc:	add	r2, r3, #1
   226c0:	str	r2, [sl, #268]	; 0x10c
   226c4:	mov	r2, fp
   226c8:	ldr	r1, [sp, #20]
   226cc:	mla	r0, fp, r3, r0
   226d0:	bl	3f40 <memcpy@plt>
   226d4:	ldr	r3, [sp, #24]
   226d8:	add	r3, r3, #1
   226dc:	str	r3, [sp, #24]
   226e0:	b	22560 <readstat_parse_stata_dictionary+0x24c>
   226e4:	ldr	r3, [sp, #16]
   226e8:	ldr	r2, [sp, #8]
   226ec:	mov	r1, #255	; 0xff
   226f0:	mov	r0, sl
   226f4:	bl	3e8c <readstat_copy@plt>
   226f8:	b	22560 <readstat_parse_stata_dictionary+0x24c>
   226fc:	ldr	r3, [sp, #16]
   22700:	ldr	r2, [sp, #8]
   22704:	mov	r1, #300	; 0x12c
   22708:	ldr	r0, [sp, #20]
   2270c:	add	r0, r0, #24
   22710:	bl	3e8c <readstat_copy@plt>
   22714:	b	22560 <readstat_parse_stata_dictionary+0x24c>
   22718:	ldr	r3, [sp, #16]
   2271c:	ldr	r2, [sp, #8]
   22720:	mov	r1, #1024	; 0x400
   22724:	ldr	r0, [sp, #44]	; 0x2c
   22728:	bl	3e8c <readstat_copy@plt>
   2272c:	b	22560 <readstat_parse_stata_dictionary+0x24c>
   22730:	str	r9, [sp, #8]
   22734:	b	22560 <readstat_parse_stata_dictionary+0x24c>
   22738:	ldr	r3, [sp, #8]
   2273c:	sub	r3, r9, r3
   22740:	str	r3, [sp, #16]
   22744:	b	22560 <readstat_parse_stata_dictionary+0x24c>
   22748:	str	r9, [sp, #8]
   2274c:	b	22560 <readstat_parse_stata_dictionary+0x24c>
   22750:	ldr	r3, [sp, #8]
   22754:	sub	r3, r9, r3
   22758:	str	r3, [sp, #16]
   2275c:	b	22560 <readstat_parse_stata_dictionary+0x24c>
   22760:	str	r9, [sp, #8]
   22764:	b	22560 <readstat_parse_stata_dictionary+0x24c>
   22768:	ldr	r3, [sp, #8]
   2276c:	sub	r3, r9, r3
   22770:	str	r3, [sp, #16]
   22774:	b	22560 <readstat_parse_stata_dictionary+0x24c>
   22778:	ldr	r3, [sp, #52]	; 0x34
   2277c:	add	r3, r3, #1
   22780:	str	r3, [sp, #52]	; 0x34
   22784:	str	r9, [sp, #72]	; 0x48
   22788:	b	22560 <readstat_parse_stata_dictionary+0x24c>
   2278c:	str	r8, [sl, #256]	; 0x100
   22790:	b	22560 <readstat_parse_stata_dictionary+0x24c>
   22794:	sub	r3, r8, #1
   22798:	str	r3, [sp, #12]
   2279c:	b	22560 <readstat_parse_stata_dictionary+0x24c>
   227a0:	sub	r3, r8, #1
   227a4:	str	r3, [sp, #32]
   227a8:	b	22560 <readstat_parse_stata_dictionary+0x24c>
   227ac:	ldr	r3, [sp, #12]
   227b0:	add	r3, r3, #1
   227b4:	str	r3, [sp, #12]
   227b8:	b	22560 <readstat_parse_stata_dictionary+0x24c>
   227bc:	sub	r3, r8, #1
   227c0:	ldr	r2, [sp, #12]
   227c4:	add	r3, r2, r3
   227c8:	str	r3, [sp, #12]
   227cc:	b	22560 <readstat_parse_stata_dictionary+0x24c>
   227d0:	str	r8, [sl, #260]	; 0x104
   227d4:	b	22560 <readstat_parse_stata_dictionary+0x24c>
   227d8:	sub	r3, r8, #1
   227dc:	str	r3, [sl, #264]	; 0x108
   227e0:	b	22560 <readstat_parse_stata_dictionary+0x24c>
   227e4:	mov	r3, #1
   227e8:	str	r3, [sp, #1120]	; 0x460
   227ec:	b	22560 <readstat_parse_stata_dictionary+0x24c>
   227f0:	mov	r3, #2
   227f4:	str	r3, [sp, #1120]	; 0x460
   227f8:	b	22560 <readstat_parse_stata_dictionary+0x24c>
   227fc:	mov	r3, #3
   22800:	str	r3, [sp, #1120]	; 0x460
   22804:	b	22560 <readstat_parse_stata_dictionary+0x24c>
   22808:	mov	r3, #4
   2280c:	str	r3, [sp, #1120]	; 0x460
   22810:	b	22560 <readstat_parse_stata_dictionary+0x24c>
   22814:	mov	r3, #5
   22818:	str	r3, [sp, #1120]	; 0x460
   2281c:	b	22560 <readstat_parse_stata_dictionary+0x24c>
   22820:	mov	r3, #0
   22824:	str	r3, [sp, #1120]	; 0x460
   22828:	str	r8, [sp, #2716]	; 0xa9c
   2282c:	b	22560 <readstat_parse_stata_dictionary+0x24c>
   22830:	str	r8, [sp, #1112]	; 0x458
   22834:	b	22560 <readstat_parse_stata_dictionary+0x24c>
   22838:	mov	r3, #44	; 0x2c
   2283c:	strb	r3, [sp, #3304]	; 0xce8
   22840:	b	22560 <readstat_parse_stata_dictionary+0x24c>
   22844:	cmp	r7, #0
   22848:	beq	228d8 <readstat_parse_stata_dictionary+0x5c4>
   2284c:	add	r9, r9, #1
   22850:	ldr	r3, [sp, #36]	; 0x24
   22854:	cmp	r3, r9
   22858:	beq	2293c <readstat_parse_stata_dictionary+0x628>
   2285c:	add	r3, r6, #828	; 0x33c
   22860:	lsl	r2, r7, #1
   22864:	ldrsh	lr, [r3, r2]
   22868:	add	lr, r6, lr
   2286c:	ldr	r3, [sp, #28]
   22870:	ldrsh	r4, [r3, r2]
   22874:	add	r3, r6, r7
   22878:	ldrb	r5, [r3, #1460]	; 0x5b4
   2287c:	cmp	r5, #0
   22880:	ble	224ac <readstat_parse_stata_dictionary+0x198>
   22884:	sub	r1, r5, #1
   22888:	adds	r1, lr, r1
   2288c:	bcs	224a4 <readstat_parse_stata_dictionary+0x190>
   22890:	ldrb	ip, [r9]
   22894:	mov	r3, lr
   22898:	b	22474 <readstat_parse_stata_dictionary+0x160>
   2289c:	add	ip, sp, #80	; 0x50
   228a0:	ldr	lr, [pc, #296]	; 229d0 <readstat_parse_stata_dictionary+0x6bc>
   228a4:	add	lr, pc, lr
   228a8:	ldm	lr!, {r0, r1, r2, r3}
   228ac:	stmia	ip!, {r0, r1, r2, r3}
   228b0:	ldm	lr!, {r0, r1, r2, r3}
   228b4:	stmia	ip!, {r0, r1, r2, r3}
   228b8:	ldm	lr!, {r0, r1, r2, r3}
   228bc:	stmia	ip!, {r0, r1, r2, r3}
   228c0:	ldm	lr, {r0, r1, r2}
   228c4:	stmia	ip!, {r0, r1}
   228c8:	strh	r2, [ip], #2
   228cc:	lsr	r2, r2, #16
   228d0:	strb	r2, [ip]
   228d4:	b	2291c <readstat_parse_stata_dictionary+0x608>
   228d8:	ldr	fp, [sp, #68]	; 0x44
   228dc:	ldr	r3, [sp, #36]	; 0x24
   228e0:	cmp	r9, r3
   228e4:	beq	2289c <readstat_parse_stata_dictionary+0x588>
   228e8:	ldrb	r3, [r9]
   228ec:	str	r3, [sp, #4]
   228f0:	ldr	r3, [sp, #72]	; 0x48
   228f4:	sub	r3, r9, r3
   228f8:	add	r3, r3, #1
   228fc:	str	r3, [sp]
   22900:	ldr	r3, [sp, #52]	; 0x34
   22904:	add	r3, r3, #1
   22908:	ldr	r2, [pc, #196]	; 229d4 <readstat_parse_stata_dictionary+0x6c0>
   2290c:	add	r2, pc, r2
   22910:	mov	r1, #1024	; 0x400
   22914:	add	r0, sp, #80	; 0x50
   22918:	bl	42ac <snprintf@plt>
   2291c:	ldr	r3, [fp, #24]
   22920:	cmp	r3, #0
   22924:	beq	22934 <readstat_parse_stata_dictionary+0x620>
   22928:	ldr	r1, [sp, #56]	; 0x38
   2292c:	add	r0, sp, #80	; 0x50
   22930:	blx	r3
   22934:	mov	r4, #5
   22938:	b	22974 <readstat_parse_stata_dictionary+0x660>
   2293c:	ldr	fp, [sp, #68]	; 0x44
   22940:	cmp	r7, #155	; 0x9b
   22944:	ble	2289c <readstat_parse_stata_dictionary+0x588>
   22948:	ldr	r3, [fp, #32]
   2294c:	ldr	r2, [r3, #4]
   22950:	ldr	r0, [r3, #20]
   22954:	blx	r2
   22958:	ldr	r0, [sp, #76]	; 0x4c
   2295c:	bl	3ee0 <free@plt>
   22960:	b	2245c <readstat_parse_stata_dictionary+0x148>
   22964:	mov	r4, #15
   22968:	mov	r3, #0
   2296c:	str	r3, [sp, #76]	; 0x4c
   22970:	mov	sl, r3
   22974:	ldr	r3, [fp, #32]
   22978:	ldr	r2, [r3, #4]
   2297c:	ldr	r0, [r3, #20]
   22980:	blx	r2
   22984:	ldr	r0, [sp, #76]	; 0x4c
   22988:	bl	3ee0 <free@plt>
   2298c:	ldr	r3, [sp, #60]	; 0x3c
   22990:	cmp	r3, #0
   22994:	ldrne	r3, [sp, #60]	; 0x3c
   22998:	strne	r4, [r3]
   2299c:	mov	r0, sl
   229a0:	bl	3fdc <readstat_schema_free@plt>
   229a4:	mov	sl, #0
   229a8:	b	2245c <readstat_parse_stata_dictionary+0x148>
   229ac:	mov	r4, #3
   229b0:	b	22974 <readstat_parse_stata_dictionary+0x660>
   229b4:	ldr	fp, [sp, #68]	; 0x44
   229b8:	mov	r4, #4
   229bc:	b	22974 <readstat_parse_stata_dictionary+0x660>
   229c0:	.word	0x00010dd8
   229c4:	.word	0x00010dc4
   229c8:	.word	0x00010db8
   229cc:	.word	0x00010cc0
   229d0:	.word	0x00011758
   229d4:	.word	0x0001172c

000229d8 <handle_value>:
   229d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   229dc:	add	fp, sp, #32
   229e0:	sub	sp, sp, #44	; 0x2c
   229e4:	mov	r7, r0
   229e8:	mov	sl, r1
   229ec:	mov	r5, r2
   229f0:	mov	r4, r3
   229f4:	ldr	r3, [fp, #8]
   229f8:	lsl	r3, r3, #2
   229fc:	add	r9, r3, #1
   22a00:	add	r3, r3, #8
   22a04:	bic	r3, r3, #7
   22a08:	sub	sp, sp, r3
   22a0c:	add	r6, r4, #16
   22a10:	mov	r2, #0
   22a14:	str	r2, [fp, #-48]	; 0xffffffd0
   22a18:	str	r2, [fp, #-40]	; 0xffffffd8
   22a1c:	ldr	r0, [r4, #16]
   22a20:	str	r0, [fp, #-44]	; 0xffffffd4
   22a24:	bl	3e44 <readstat_type_class@plt>
   22a28:	cmp	r0, #0
   22a2c:	beq	22ac4 <handle_value+0xec>
   22a30:	mov	r3, #0
   22a34:	str	r3, [fp, #-56]	; 0xffffffc8
   22a38:	ldr	r3, [r4, #16]
   22a3c:	cmp	r3, #5
   22a40:	beq	22af0 <handle_value+0x118>
   22a44:	cmp	r3, #4
   22a48:	beq	22b04 <handle_value+0x12c>
   22a4c:	mov	r2, #10
   22a50:	sub	r1, fp, #56	; 0x38
   22a54:	ldr	r0, [fp, #4]
   22a58:	bl	3e50 <strtol@plt>
   22a5c:	str	r0, [fp, #-52]	; 0xffffffcc
   22a60:	mov	r3, #3
   22a64:	str	r3, [fp, #-44]	; 0xffffffd4
   22a68:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   22a6c:	bic	r3, r3, #1
   22a70:	ldr	r2, [fp, #-56]	; 0xffffffc8
   22a74:	ldr	r1, [fp, #4]
   22a78:	cmp	r2, r1
   22a7c:	orreq	r3, r3, #1
   22a80:	strb	r3, [fp, #-39]	; 0xffffffd9
   22a84:	ldr	r3, [fp, #12]
   22a88:	str	r3, [sp, #8]
   22a8c:	sub	r3, fp, #36	; 0x24
   22a90:	ldmdb	r3, {r0, r1}
   22a94:	stm	sp, {r0, r1}
   22a98:	sub	r3, fp, #52	; 0x34
   22a9c:	ldm	r3, {r2, r3}
   22aa0:	ldr	r4, [r7, #16]
   22aa4:	mov	r1, r6
   22aa8:	mov	r0, r5
   22aac:	blx	r4
   22ab0:	cmp	r0, #1
   22ab4:	moveq	r0, #4
   22ab8:	movne	r0, #0
   22abc:	sub	sp, fp, #32
   22ac0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22ac4:	add	r8, sp, #16
   22ac8:	str	sl, [sp]
   22acc:	ldr	r3, [fp, #8]
   22ad0:	ldr	r2, [fp, #4]
   22ad4:	mov	r1, r9
   22ad8:	mov	r0, r8
   22adc:	bl	4264 <readstat_convert@plt>
   22ae0:	cmp	r0, #0
   22ae4:	streq	r8, [fp, #-52]	; 0xffffffcc
   22ae8:	beq	22a84 <handle_value+0xac>
   22aec:	b	22abc <handle_value+0xe4>
   22af0:	sub	r1, fp, #56	; 0x38
   22af4:	ldr	r0, [fp, #4]
   22af8:	bl	4324 <strtod@plt>
   22afc:	vstr	d0, [fp, #-52]	; 0xffffffcc
   22b00:	b	22a68 <handle_value+0x90>
   22b04:	sub	r1, fp, #56	; 0x38
   22b08:	ldr	r0, [fp, #4]
   22b0c:	bl	40f0 <strtof@plt>
   22b10:	vstr	s0, [fp, #-52]	; 0xffffffcc
   22b14:	b	22a68 <handle_value+0x90>

00022b18 <txt_parse_fixed_width>:
   22b18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22b1c:	sub	sp, sp, #4160	; 0x1040
   22b20:	sub	sp, sp, #4
   22b24:	mov	fp, r0
   22b28:	str	r1, [sp, #36]	; 0x24
   22b2c:	str	r2, [sp, #40]	; 0x28
   22b30:	str	r3, [sp, #52]	; 0x34
   22b34:	ldr	r8, [r1, #8]
   22b38:	ldr	sl, [r0, #32]
   22b3c:	mov	r3, #0
   22b40:	str	r3, [sp, #32]
   22b44:	add	r3, sp, #64	; 0x40
   22b48:	str	r3, [sp, #48]	; 0x30
   22b4c:	add	r3, sp, #63	; 0x3f
   22b50:	str	r3, [sp, #20]
   22b54:	ldr	r3, [r8, #256]	; 0x100
   22b58:	cmp	r3, #0
   22b5c:	ble	22d14 <txt_parse_fixed_width+0x1fc>
   22b60:	ldr	r3, [sp, #52]	; 0x34
   22b64:	sub	r3, r3, #4
   22b68:	str	r3, [sp, #28]
   22b6c:	mov	r9, #0
   22b70:	mov	r6, r9
   22b74:	b	22ca0 <txt_parse_fixed_width+0x188>
   22b78:	add	r6, r6, #1
   22b7c:	ldr	r3, [r8, #268]	; 0x10c
   22b80:	cmp	r3, r6
   22b84:	ble	22c48 <txt_parse_fixed_width+0x130>
   22b88:	ldr	r4, [r8, #276]	; 0x114
   22b8c:	add	r4, r4, r5
   22b90:	add	r5, r5, #2208	; 0x8a0
   22b94:	ldr	r3, [r4]
   22b98:	cmp	r3, r9
   22b9c:	bne	22c40 <txt_parse_fixed_width+0x128>
   22ba0:	ldr	r7, [r4, #8]
   22ba4:	ldr	r3, [pc, #412]	; 22d48 <txt_parse_fixed_width+0x230>
   22ba8:	cmp	r7, r3
   22bac:	bhi	22b78 <txt_parse_fixed_width+0x60>
   22bb0:	ldr	r3, [fp, #16]
   22bb4:	cmp	r3, #0
   22bb8:	beq	22b78 <txt_parse_fixed_width+0x60>
   22bbc:	ldr	r3, [r4, #12]
   22bc0:	cmp	r3, #0
   22bc4:	bne	22b78 <txt_parse_fixed_width+0x60>
   22bc8:	ldr	r1, [r4, #4]
   22bcc:	mov	r2, r7
   22bd0:	add	r3, sp, #4160	; 0x1040
   22bd4:	add	r3, r3, #40	; 0x28
   22bd8:	ldr	r3, [r3]
   22bdc:	add	r1, r3, r1
   22be0:	mov	r0, sl
   22be4:	bl	3f40 <memcpy@plt>
   22be8:	mov	r3, #0
   22bec:	strb	r3, [sl, r7]
   22bf0:	ldr	r3, [sp, #36]	; 0x24
   22bf4:	ldr	r3, [r3, #4]
   22bf8:	str	r3, [sp, #24]
   22bfc:	ldr	r3, [sp, #40]	; 0x28
   22c00:	str	r3, [sp, #8]
   22c04:	str	r7, [sp, #4]
   22c08:	str	sl, [sp]
   22c0c:	mov	r3, r4
   22c10:	ldr	r2, [sp, #32]
   22c14:	ldr	r1, [sp, #24]
   22c18:	mov	r0, fp
   22c1c:	bl	229d8 <handle_value>
   22c20:	cmp	r0, #0
   22c24:	beq	22b78 <txt_parse_fixed_width+0x60>
   22c28:	ldr	r3, [sp, #36]	; 0x24
   22c2c:	ldr	r2, [sp, #32]
   22c30:	str	r2, [r3]
   22c34:	add	sp, sp, #4160	; 0x1040
   22c38:	add	sp, sp, #4
   22c3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22c40:	ldr	sl, [sp, #44]	; 0x2c
   22c44:	b	22c4c <txt_parse_fixed_width+0x134>
   22c48:	ldr	sl, [sp, #44]	; 0x2c
   22c4c:	ldr	r3, [r8, #260]	; 0x104
   22c50:	cmp	r3, #0
   22c54:	bne	22c90 <txt_parse_fixed_width+0x178>
   22c58:	ldr	r3, [sp, #48]	; 0x30
   22c5c:	mov	r2, #0
   22c60:	strb	r2, [r3, #-1]
   22c64:	mov	r4, r3
   22c68:	ldr	r3, [sl, #12]
   22c6c:	ldr	r2, [sl, #20]
   22c70:	mov	r1, #1
   22c74:	ldr	r0, [sp, #20]
   22c78:	blx	r3
   22c7c:	cmp	r0, #1
   22c80:	bne	22c90 <txt_parse_fixed_width+0x178>
   22c84:	ldrb	r3, [r4, #-1]
   22c88:	cmp	r3, #10
   22c8c:	bne	22c68 <txt_parse_fixed_width+0x150>
   22c90:	add	r9, r9, #1
   22c94:	ldr	r3, [r8, #256]	; 0x100
   22c98:	cmp	r3, r9
   22c9c:	ble	22d14 <txt_parse_fixed_width+0x1fc>
   22ca0:	ldr	r3, [sl, #12]
   22ca4:	ldr	r2, [sl, #20]
   22ca8:	ldr	r4, [sp, #28]
   22cac:	ldr	r1, [r4, #4]
   22cb0:	add	r0, sp, #4160	; 0x1040
   22cb4:	add	r0, r0, #40	; 0x28
   22cb8:	ldr	r0, [r0]
   22cbc:	blx	r3
   22cc0:	cmp	r0, #0
   22cc4:	beq	22d38 <txt_parse_fixed_width+0x220>
   22cc8:	mov	r1, r4
   22ccc:	ldr	r3, [r1, #4]!
   22cd0:	str	r1, [sp, #28]
   22cd4:	cmp	r3, r0
   22cd8:	bhi	22d40 <txt_parse_fixed_width+0x228>
   22cdc:	ldr	r3, [r8, #268]	; 0x10c
   22ce0:	cmp	r3, r6
   22ce4:	ble	22c4c <txt_parse_fixed_width+0x134>
   22ce8:	mov	r3, #2208	; 0x8a0
   22cec:	mul	r5, r3, r6
   22cf0:	ldr	r3, [r8, #276]	; 0x114
   22cf4:	add	r4, r3, r5
   22cf8:	ldr	r3, [r3, r5]
   22cfc:	cmp	r3, r9
   22d00:	bne	22c4c <txt_parse_fixed_width+0x134>
   22d04:	add	r5, r5, #2208	; 0x8a0
   22d08:	str	sl, [sp, #44]	; 0x2c
   22d0c:	ldr	sl, [sp, #48]	; 0x30
   22d10:	b	22ba0 <txt_parse_fixed_width+0x88>
   22d14:	ldr	r3, [sp, #32]
   22d18:	add	r3, r3, #1
   22d1c:	mov	r2, r3
   22d20:	str	r3, [sp, #32]
   22d24:	ldr	r3, [fp, #44]	; 0x2c
   22d28:	cmp	r2, r3
   22d2c:	bne	22b54 <txt_parse_fixed_width+0x3c>
   22d30:	mov	r0, #0
   22d34:	b	22c28 <txt_parse_fixed_width+0x110>
   22d38:	mov	r0, #0
   22d3c:	b	22c28 <txt_parse_fixed_width+0x110>
   22d40:	mov	r0, #2
   22d44:	b	22c28 <txt_parse_fixed_width+0x110>
   22d48:	.word	0x00000fff

00022d4c <readstat_parse_txt>:
   22d4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22d50:	sub	sp, sp, #124	; 0x7c
   22d54:	str	r0, [sp, #20]
   22d58:	mov	r4, r1
   22d5c:	mov	ip, r2
   22d60:	str	r2, [sp, #28]
   22d64:	str	r3, [sp, #32]
   22d68:	mov	r1, r0
   22d6c:	ldr	r7, [r0, #32]
   22d70:	mov	r3, #0
   22d74:	str	r3, [sp, #108]	; 0x6c
   22d78:	str	r3, [sp, #112]	; 0x70
   22d7c:	str	ip, [sp, #116]	; 0x74
   22d80:	ldr	r0, [r0, #40]	; 0x28
   22d84:	cmp	r0, #0
   22d88:	beq	22da8 <readstat_parse_txt+0x5c>
   22d8c:	ldr	r1, [r1, #36]	; 0x24
   22d90:	cmp	r1, #0
   22d94:	beq	22da8 <readstat_parse_txt+0x5c>
   22d98:	bl	415c <iconv_open@plt>
   22d9c:	cmn	r0, #1
   22da0:	strne	r0, [sp, #112]	; 0x70
   22da4:	beq	22ee8 <readstat_parse_txt+0x19c>
   22da8:	ldr	r3, [r7]
   22dac:	ldr	r1, [r7, #20]
   22db0:	mov	r0, r4
   22db4:	blx	r3
   22db8:	cmn	r0, #1
   22dbc:	beq	23148 <readstat_parse_txt+0x3fc>
   22dc0:	ldr	r6, [sp, #28]
   22dc4:	ldr	r4, [r6, #256]	; 0x100
   22dc8:	lsl	r5, r4, #2
   22dcc:	mov	r0, r5
   22dd0:	bl	4138 <malloc@plt>
   22dd4:	subs	r3, r0, #0
   22dd8:	str	r3, [sp, #24]
   22ddc:	beq	23188 <readstat_parse_txt+0x43c>
   22de0:	cmp	r4, #0
   22de4:	ble	22efc <readstat_parse_txt+0x1b0>
   22de8:	ldr	r1, [r6, #260]	; 0x104
   22dec:	add	r2, r3, r5
   22df0:	str	r1, [r3], #4
   22df4:	cmp	r2, r3
   22df8:	bne	22df0 <readstat_parse_txt+0xa4>
   22dfc:	ldr	r3, [sp, #28]
   22e00:	ldr	lr, [r3, #268]	; 0x10c
   22e04:	cmp	lr, #0
   22e08:	ble	22e50 <readstat_parse_txt+0x104>
   22e0c:	ldr	r3, [sp, #28]
   22e10:	ldr	r1, [r3, #276]	; 0x114
   22e14:	mov	r0, #0
   22e18:	ldr	r5, [sp, #24]
   22e1c:	ldr	r2, [r1]
   22e20:	ldr	r3, [r1, #4]
   22e24:	ldr	ip, [r1, #8]
   22e28:	add	r3, r3, ip
   22e2c:	ldr	ip, [r5, r2, lsl #2]
   22e30:	cmp	ip, r3
   22e34:	strcc	r3, [r5, r2, lsl #2]
   22e38:	add	r0, r0, #1
   22e3c:	add	r1, r1, #2208	; 0x8a0
   22e40:	cmp	r0, lr
   22e44:	blt	22e1c <readstat_parse_txt+0xd0>
   22e48:	cmp	r4, #0
   22e4c:	ble	22f14 <readstat_parse_txt+0x1c8>
   22e50:	ldr	r3, [sp, #24]
   22e54:	sub	r1, r3, #4
   22e58:	mov	r0, #0
   22e5c:	mov	r3, r0
   22e60:	ldr	r2, [r1, #4]!
   22e64:	cmp	r0, r2
   22e68:	movcc	r0, r2
   22e6c:	add	r3, r3, #1
   22e70:	cmp	r4, r3
   22e74:	bgt	22e60 <readstat_parse_txt+0x114>
   22e78:	add	r0, r0, #2
   22e7c:	bl	4138 <malloc@plt>
   22e80:	subs	r3, r0, #0
   22e84:	str	r3, [sp, #40]	; 0x28
   22e88:	beq	23190 <readstat_parse_txt+0x444>
   22e8c:	ldr	r3, [sp, #28]
   22e90:	ldr	r6, [r3, #264]	; 0x108
   22e94:	cmp	r6, #1
   22e98:	ble	22f1c <readstat_parse_txt+0x1d0>
   22e9c:	sub	r6, r6, #1
   22ea0:	add	r4, sp, #120	; 0x78
   22ea4:	mov	r3, #0
   22ea8:	strb	r3, [r4, #-72]!	; 0xffffffb8
   22eac:	mov	r5, #1
   22eb0:	sub	r6, r6, #1
   22eb4:	cmn	r6, #1
   22eb8:	beq	22f1c <readstat_parse_txt+0x1d0>
   22ebc:	ldr	r3, [r7, #12]
   22ec0:	ldr	r2, [r7, #20]
   22ec4:	mov	r1, r5
   22ec8:	mov	r0, r4
   22ecc:	blx	r3
   22ed0:	cmp	r0, #1
   22ed4:	bne	22eb0 <readstat_parse_txt+0x164>
   22ed8:	ldrb	r3, [sp, #48]	; 0x30
   22edc:	cmp	r3, #10
   22ee0:	bne	22ebc <readstat_parse_txt+0x170>
   22ee4:	b	22eb0 <readstat_parse_txt+0x164>
   22ee8:	mov	r3, #0
   22eec:	str	r3, [sp, #112]	; 0x70
   22ef0:	str	r3, [sp, #24]
   22ef4:	mov	r4, #7
   22ef8:	b	23154 <readstat_parse_txt+0x408>
   22efc:	ldr	r3, [sp, #28]
   22f00:	ldr	lr, [r3, #268]	; 0x10c
   22f04:	cmp	lr, #0
   22f08:	bgt	22e0c <readstat_parse_txt+0xc0>
   22f0c:	mov	r0, #0
   22f10:	b	22e78 <readstat_parse_txt+0x12c>
   22f14:	mov	r0, #0
   22f18:	b	22e78 <readstat_parse_txt+0x12c>
   22f1c:	ldr	r3, [sp, #28]
   22f20:	ldrb	r3, [r3, #272]	; 0x110
   22f24:	cmp	r3, #0
   22f28:	beq	230a0 <readstat_parse_txt+0x354>
   22f2c:	mov	r0, #4096	; 0x1000
   22f30:	bl	4138 <malloc@plt>
   22f34:	ldr	r3, [sp, #116]	; 0x74
   22f38:	ldr	r2, [sp, #20]
   22f3c:	ldr	r6, [r2, #32]
   22f40:	mov	r8, r0
   22f44:	mov	fp, #4096	; 0x1000
   22f48:	mov	r2, #0
   22f4c:	str	r2, [sp, #36]	; 0x24
   22f50:	str	r7, [sp, #44]	; 0x2c
   22f54:	mov	sl, r3
   22f58:	ldr	r3, [sl, #268]	; 0x10c
   22f5c:	cmp	r3, #0
   22f60:	ble	23078 <readstat_parse_txt+0x32c>
   22f64:	mov	r9, #0
   22f68:	b	23004 <readstat_parse_txt+0x2b8>
   22f6c:	cmn	r0, #1
   22f70:	beq	23198 <readstat_parse_txt+0x44c>
   22f74:	cmp	r4, #0
   22f78:	beq	231d4 <readstat_parse_txt+0x488>
   22f7c:	cmn	r4, #1
   22f80:	beq	231bc <readstat_parse_txt+0x470>
   22f84:	ldr	r3, [sp, #20]
   22f88:	ldr	r3, [r3, #16]
   22f8c:	cmp	r3, #0
   22f90:	beq	22ff4 <readstat_parse_txt+0x2a8>
   22f94:	ldr	r3, [sp, #16]
   22f98:	ldr	r3, [r3, #12]
   22f9c:	cmp	r3, #0
   22fa0:	bne	22ff4 <readstat_parse_txt+0x2a8>
   22fa4:	sub	r3, r4, #1
   22fa8:	cmp	r3, #0
   22fac:	ble	22fc0 <readstat_parse_txt+0x274>
   22fb0:	add	r2, r8, r3
   22fb4:	ldrb	r2, [r2, #-1]
   22fb8:	cmp	r2, #13
   22fbc:	subeq	r3, r4, #2
   22fc0:	mov	r2, #0
   22fc4:	strb	r2, [r8, r3]
   22fc8:	ldr	r2, [sp, #32]
   22fcc:	str	r2, [sp, #8]
   22fd0:	str	r3, [sp, #4]
   22fd4:	str	r8, [sp]
   22fd8:	ldr	r3, [sp, #16]
   22fdc:	ldr	r2, [sp, #36]	; 0x24
   22fe0:	ldr	r1, [sp, #112]	; 0x70
   22fe4:	ldr	r0, [sp, #20]
   22fe8:	bl	229d8 <handle_value>
   22fec:	cmp	r0, #0
   22ff0:	bne	231c8 <readstat_parse_txt+0x47c>
   22ff4:	add	r9, r9, #1
   22ff8:	ldr	r3, [sl, #268]	; 0x10c
   22ffc:	cmp	r3, r9
   23000:	ble	23078 <readstat_parse_txt+0x32c>
   23004:	ldr	r2, [sl, #276]	; 0x114
   23008:	mov	r1, #2208	; 0x8a0
   2300c:	mla	r2, r1, r9, r2
   23010:	str	r2, [sp, #16]
   23014:	sub	r3, r3, #1
   23018:	cmp	r9, r3
   2301c:	ldrbne	r7, [sl, #272]	; 0x110
   23020:	moveq	r7, #10
   23024:	mov	r4, #0
   23028:	add	r5, r8, r4
   2302c:	ldr	r3, [r6, #12]
   23030:	ldr	r2, [r6, #20]
   23034:	mov	r1, #1
   23038:	mov	r0, r5
   2303c:	blx	r3
   23040:	cmp	r0, #1
   23044:	bne	22f6c <readstat_parse_txt+0x220>
   23048:	add	r4, r4, #1
   2304c:	ldrb	r3, [r5]
   23050:	cmp	r3, r7
   23054:	beq	22f74 <readstat_parse_txt+0x228>
   23058:	cmp	r4, fp
   2305c:	bne	23028 <readstat_parse_txt+0x2dc>
   23060:	lsl	fp, fp, #1
   23064:	mov	r1, fp
   23068:	mov	r0, r8
   2306c:	bl	4018 <realloc@plt>
   23070:	mov	r8, r0
   23074:	b	23028 <readstat_parse_txt+0x2dc>
   23078:	ldr	r3, [sp, #36]	; 0x24
   2307c:	add	r3, r3, #1
   23080:	mov	r2, r3
   23084:	str	r3, [sp, #36]	; 0x24
   23088:	ldr	r3, [sp, #20]
   2308c:	ldr	r3, [r3, #44]	; 0x2c
   23090:	cmp	r2, r3
   23094:	bne	22f58 <readstat_parse_txt+0x20c>
   23098:	ldr	r7, [sp, #44]	; 0x2c
   2309c:	b	231d8 <readstat_parse_txt+0x48c>
   230a0:	ldr	r3, [sp, #40]	; 0x28
   230a4:	str	r3, [sp]
   230a8:	ldr	r3, [sp, #24]
   230ac:	ldr	r2, [sp, #32]
   230b0:	add	r1, sp, #108	; 0x6c
   230b4:	ldr	r0, [sp, #20]
   230b8:	bl	22b18 <txt_parse_fixed_width>
   230bc:	mov	r4, r0
   230c0:	cmp	r4, #0
   230c4:	beq	230e8 <readstat_parse_txt+0x39c>
   230c8:	ldr	r3, [r7, #4]
   230cc:	ldr	r0, [r7, #20]
   230d0:	blx	r3
   230d4:	ldr	r0, [sp, #40]	; 0x28
   230d8:	bl	3ee0 <free@plt>
   230dc:	ldr	r0, [sp, #24]
   230e0:	bl	3ee0 <free@plt>
   230e4:	b	2316c <readstat_parse_txt+0x420>
   230e8:	ldr	r3, [sp, #20]
   230ec:	ldr	r5, [r3]
   230f0:	cmp	r5, #0
   230f4:	moveq	r4, #0
   230f8:	beq	230c8 <readstat_parse_txt+0x37c>
   230fc:	mov	r2, #56	; 0x38
   23100:	mov	r1, #0
   23104:	add	r4, sp, #48	; 0x30
   23108:	mov	r0, r4
   2310c:	bl	42d0 <memset@plt>
   23110:	ldr	r2, [sp, #108]	; 0x6c
   23114:	asr	r3, r2, #31
   23118:	strd	r2, [sp, #48]	; 0x30
   2311c:	ldr	r3, [sp, #28]
   23120:	ldr	r2, [r3, #268]	; 0x10c
   23124:	asr	r3, r2, #31
   23128:	strd	r2, [sp, #56]	; 0x38
   2312c:	ldr	r1, [sp, #32]
   23130:	mov	r0, r4
   23134:	blx	r5
   23138:	cmp	r0, #1
   2313c:	moveq	r4, #4
   23140:	movne	r4, #0
   23144:	b	230c8 <readstat_parse_txt+0x37c>
   23148:	mov	r3, #0
   2314c:	str	r3, [sp, #24]
   23150:	mov	r4, #1
   23154:	ldr	r3, [r7, #4]
   23158:	ldr	r0, [r7, #20]
   2315c:	blx	r3
   23160:	ldr	r3, [sp, #24]
   23164:	cmp	r3, #0
   23168:	bne	230dc <readstat_parse_txt+0x390>
   2316c:	ldr	r0, [sp, #112]	; 0x70
   23170:	cmp	r0, #0
   23174:	beq	2317c <readstat_parse_txt+0x430>
   23178:	bl	3df0 <iconv_close@plt>
   2317c:	mov	r0, r4
   23180:	add	sp, sp, #124	; 0x7c
   23184:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23188:	mov	r4, #3
   2318c:	b	23154 <readstat_parse_txt+0x408>
   23190:	mov	r4, #3
   23194:	b	23154 <readstat_parse_txt+0x408>
   23198:	ldr	r7, [sp, #44]	; 0x2c
   2319c:	mov	r4, #2
   231a0:	ldr	r3, [sp, #36]	; 0x24
   231a4:	str	r3, [sp, #108]	; 0x6c
   231a8:	cmp	r8, #0
   231ac:	beq	230c8 <readstat_parse_txt+0x37c>
   231b0:	mov	r0, r8
   231b4:	bl	3ee0 <free@plt>
   231b8:	b	230c0 <readstat_parse_txt+0x374>
   231bc:	ldr	r7, [sp, #44]	; 0x2c
   231c0:	mov	r4, #2
   231c4:	b	231a0 <readstat_parse_txt+0x454>
   231c8:	ldr	r7, [sp, #44]	; 0x2c
   231cc:	mov	r4, r0
   231d0:	b	231a0 <readstat_parse_txt+0x454>
   231d4:	ldr	r7, [sp, #44]	; 0x2c
   231d8:	ldr	r3, [sp, #36]	; 0x24
   231dc:	str	r3, [sp, #108]	; 0x6c
   231e0:	cmp	r8, #0
   231e4:	beq	230e8 <readstat_parse_txt+0x39c>
   231e8:	mov	r4, #0
   231ec:	b	231b0 <readstat_parse_txt+0x464>

000231f0 <zsav_ctx_init>:
   231f0:	push	{r4, r5, r6, r7, r8, lr}
   231f4:	mov	r5, r0
   231f8:	mov	r6, r2
   231fc:	mov	r7, r3
   23200:	mov	r1, #40	; 0x28
   23204:	mov	r0, #1
   23208:	bl	3d78 <calloc@plt>
   2320c:	mov	r4, r0
   23210:	mov	r0, r5
   23214:	bl	4138 <malloc@plt>
   23218:	str	r0, [r4]
   2321c:	mov	r0, #10
   23220:	str	r0, [r4, #12]
   23224:	mov	r1, #4
   23228:	bl	3d78 <calloc@plt>
   2322c:	str	r0, [r4, #4]
   23230:	ldr	r2, [pc, #24]	; 23250 <zsav_ctx_init+0x60>
   23234:	mov	r3, #0
   23238:	strd	r2, [r4, #16]
   2323c:	strd	r6, [r4, #24]
   23240:	mvn	r3, #0
   23244:	str	r3, [r4, #32]
   23248:	mov	r0, r4
   2324c:	pop	{r4, r5, r6, r7, r8, pc}
   23250:	.word	0x003ff000

00023254 <zsav_ctx_free>:
   23254:	push	{r4, r5, r6, lr}
   23258:	mov	r6, r0
   2325c:	ldr	r3, [r0, #8]
   23260:	cmp	r3, #0
   23264:	ble	2329c <zsav_ctx_free+0x48>
   23268:	mov	r4, #0
   2326c:	ldr	r3, [r6, #4]
   23270:	ldr	r5, [r3, r4, lsl #2]
   23274:	add	r0, r5, #8
   23278:	bl	433c <deflateEnd@plt>
   2327c:	ldr	r0, [r5, #64]	; 0x40
   23280:	bl	3ee0 <free@plt>
   23284:	mov	r0, r5
   23288:	bl	3ee0 <free@plt>
   2328c:	add	r4, r4, #1
   23290:	ldr	r3, [r6, #8]
   23294:	cmp	r3, r4
   23298:	bgt	2326c <zsav_ctx_free+0x18>
   2329c:	ldr	r0, [r6, #4]
   232a0:	bl	3ee0 <free@plt>
   232a4:	ldr	r0, [r6]
   232a8:	bl	3ee0 <free@plt>
   232ac:	mov	r0, r6
   232b0:	bl	3ee0 <free@plt>
   232b4:	pop	{r4, r5, r6, pc}

000232b8 <zsav_add_block>:
   232b8:	push	{r4, r5, r6, lr}
   232bc:	mov	r4, r0
   232c0:	ldr	r1, [r0, #8]
   232c4:	ldr	r3, [r0, #12]
   232c8:	cmp	r1, r3
   232cc:	beq	23330 <zsav_add_block+0x78>
   232d0:	mov	r1, #72	; 0x48
   232d4:	mov	r0, #1
   232d8:	bl	3d78 <calloc@plt>
   232dc:	mov	r5, r0
   232e0:	ldr	r2, [r4, #4]
   232e4:	ldr	r3, [r4, #8]
   232e8:	add	r1, r3, #1
   232ec:	str	r1, [r4, #8]
   232f0:	str	r0, [r2, r3, lsl #2]
   232f4:	add	r6, r0, #8
   232f8:	mov	r3, #56	; 0x38
   232fc:	ldr	r2, [pc, #72]	; 2334c <zsav_add_block+0x94>
   23300:	add	r2, pc, r2
   23304:	ldr	r1, [r4, #32]
   23308:	mov	r0, r6
   2330c:	bl	4150 <deflateInit_@plt>
   23310:	ldr	r1, [r4, #16]
   23314:	mov	r0, r6
   23318:	bl	3ea4 <deflateBound@plt>
   2331c:	str	r0, [r5, #68]	; 0x44
   23320:	bl	4138 <malloc@plt>
   23324:	str	r0, [r5, #64]	; 0x40
   23328:	mov	r0, r5
   2332c:	pop	{r4, r5, r6, pc}
   23330:	lsl	r3, r1, #1
   23334:	str	r3, [r0, #12]
   23338:	lsl	r1, r1, #3
   2333c:	ldr	r0, [r0, #4]
   23340:	bl	4018 <realloc@plt>
   23344:	str	r0, [r4, #4]
   23348:	b	232d0 <zsav_add_block+0x18>
   2334c:	.word	0x00010d70

00023350 <zsav_current_block>:
   23350:	ldr	r3, [r0, #8]
   23354:	cmp	r3, #0
   23358:	subne	r3, r3, #-1073741823	; 0xc0000001
   2335c:	ldrne	r2, [r0, #4]
   23360:	ldrne	r0, [r2, r3, lsl #2]
   23364:	moveq	r0, #0
   23368:	bx	lr

0002336c <zsav_compress_row>:
   2336c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23370:	sub	sp, sp, #12
   23374:	mov	r9, r0
   23378:	mov	r8, r1
   2337c:	str	r2, [sp, #4]
   23380:	mov	r6, r3
   23384:	mov	r0, r3
   23388:	bl	40cc <zsav_current_block@plt>
   2338c:	subs	r4, r0, #0
   23390:	beq	234b8 <zsav_compress_row+0x14c>
   23394:	str	r9, [r4, #8]
   23398:	str	r8, [r4, #12]
   2339c:	ldr	r1, [r4, #4]
   233a0:	ldr	r2, [r4, #64]	; 0x40
   233a4:	add	r2, r2, r1
   233a8:	str	r2, [r4, #20]
   233ac:	ldr	r3, [r4, #68]	; 0x44
   233b0:	sub	r3, r3, r1
   233b4:	str	r3, [r4, #24]
   233b8:	ldrd	sl, [r6, #16]
   233bc:	ldr	ip, [r4]
   233c0:	subs	r0, sl, ip
   233c4:	sbc	r1, fp, ip, asr #31
   233c8:	mov	r3, #0
   233cc:	cmp	r0, r8
   233d0:	sbcs	r3, r1, r3
   233d4:	bge	234c8 <zsav_compress_row+0x15c>
   233d8:	mov	r5, #0
   233dc:	mov	lr, ip
   233e0:	sub	sl, sl, lr
   233e4:	str	sl, [r4, #12]
   233e8:	ldr	ip, [r6, #16]
   233ec:	sub	ip, ip, lr
   233f0:	add	r5, ip, r5
   233f4:	mov	r1, #4
   233f8:	add	r0, r4, #8
   233fc:	bl	4060 <deflate@plt>
   23400:	cmp	r0, #1
   23404:	bne	234b0 <zsav_compress_row+0x144>
   23408:	ldr	r3, [r4, #68]	; 0x44
   2340c:	ldr	r2, [r4, #24]
   23410:	sub	r3, r3, r2
   23414:	str	r3, [r4, #4]
   23418:	ldr	r3, [r6, #16]
   2341c:	ldr	r2, [r4, #12]
   23420:	sub	r3, r3, r2
   23424:	str	r3, [r4]
   23428:	mov	r0, r6
   2342c:	bl	4144 <zsav_add_block@plt>
   23430:	mov	r4, r0
   23434:	add	r3, r9, r5
   23438:	str	r3, [r0, #8]
   2343c:	sub	r7, r8, r5
   23440:	str	r7, [r0, #12]
   23444:	ldr	r3, [r0, #64]	; 0x40
   23448:	str	r3, [r0, #20]
   2344c:	ldr	r3, [r0, #68]	; 0x44
   23450:	str	r3, [r0, #24]
   23454:	ldrd	sl, [r6, #16]
   23458:	ldr	lr, [r0]
   2345c:	mov	r3, #0
   23460:	subs	r0, sl, lr
   23464:	sbc	r1, fp, lr, asr #31
   23468:	cmp	r0, r7
   2346c:	sbcs	r3, r1, r3
   23470:	blt	233e0 <zsav_compress_row+0x74>
   23474:	ldr	r3, [sp, #4]
   23478:	cmp	r3, #0
   2347c:	moveq	r1, r3
   23480:	movne	r1, #4
   23484:	add	r0, r4, #8
   23488:	bl	4060 <deflate@plt>
   2348c:	ldr	r3, [r4, #68]	; 0x44
   23490:	ldr	r2, [r4, #24]
   23494:	sub	r3, r3, r2
   23498:	str	r3, [r4, #4]
   2349c:	ldr	r3, [r4]
   234a0:	ldr	r2, [r4, #12]
   234a4:	sub	r3, r3, r2
   234a8:	add	r7, r3, r7
   234ac:	str	r7, [r4]
   234b0:	add	sp, sp, #12
   234b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   234b8:	mov	r0, r6
   234bc:	bl	4144 <zsav_add_block@plt>
   234c0:	mov	r4, r0
   234c4:	b	23394 <zsav_compress_row+0x28>
   234c8:	mov	r7, r8
   234cc:	b	23474 <zsav_compress_row+0x108>

000234d0 <zsav_read_compressed_data>:
   234d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   234d4:	sub	sp, sp, #148	; 0x94
   234d8:	mov	r4, r0
   234dc:	mov	r7, r1
   234e0:	ldr	r5, [r0, #36]	; 0x24
   234e4:	ldr	r6, [r0, #344]	; 0x158
   234e8:	mov	r1, #0
   234ec:	str	r1, [sp, #140]	; 0x8c
   234f0:	mov	r2, #56	; 0x38
   234f4:	add	r0, sp, #80	; 0x50
   234f8:	bl	42d0 <memset@plt>
   234fc:	add	r3, r4, #400	; 0x190
   23500:	ldrd	r2, [r3, #-8]
   23504:	strd	r2, [sp, #96]	; 0x60
   23508:	add	r3, r4, #416	; 0x1a0
   2350c:	ldrd	r2, [r3]
   23510:	strd	r2, [sp, #104]	; 0x68
   23514:	ldrb	r3, [r4, #436]	; 0x1b4
   23518:	and	r3, r3, #1
   2351c:	str	r3, [sp, #124]	; 0x7c
   23520:	ldr	r3, [r5, #12]
   23524:	ldr	r2, [r5, #20]
   23528:	mov	r1, #24
   2352c:	add	r0, sp, #56	; 0x38
   23530:	blx	r3
   23534:	cmp	r0, #23
   23538:	movls	r8, #0
   2353c:	movls	sl, #2
   23540:	bhi	2358c <zsav_read_compressed_data+0xbc>
   23544:	cmp	r8, #0
   23548:	moveq	r6, #0
   2354c:	beq	23570 <zsav_read_compressed_data+0xa0>
   23550:	mov	r6, #0
   23554:	mov	r9, r6
   23558:	mov	r0, r8
   2355c:	bl	3ee0 <free@plt>
   23560:	cmp	r9, #0
   23564:	beq	23570 <zsav_read_compressed_data+0xa0>
   23568:	mov	r0, r9
   2356c:	bl	3ee0 <free@plt>
   23570:	cmp	r6, #0
   23574:	beq	23580 <zsav_read_compressed_data+0xb0>
   23578:	mov	r0, r6
   2357c:	bl	3ee0 <free@plt>
   23580:	mov	r0, sl
   23584:	add	sp, sp, #148	; 0x94
   23588:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2358c:	ldrb	r3, [r4, #436]	; 0x1b4
   23590:	tst	r3, #1
   23594:	bne	23720 <zsav_read_compressed_data+0x250>
   23598:	ldrd	r0, [sp, #56]	; 0x38
   2359c:	strd	r0, [sp, #56]	; 0x38
   235a0:	ldrb	r3, [r4, #436]	; 0x1b4
   235a4:	tst	r3, #1
   235a8:	bne	2372c <zsav_read_compressed_data+0x25c>
   235ac:	ldrd	r0, [sp, #64]	; 0x40
   235b0:	strd	r0, [sp, #64]	; 0x40
   235b4:	ldrb	r3, [r4, #436]	; 0x1b4
   235b8:	tst	r3, #1
   235bc:	bne	23738 <zsav_read_compressed_data+0x268>
   235c0:	ldrd	r0, [sp, #72]	; 0x48
   235c4:	strd	r0, [sp, #72]	; 0x48
   235c8:	ldrd	r8, [sp, #56]	; 0x38
   235cc:	ldr	r3, [r5, #8]
   235d0:	ldr	r2, [r5, #20]
   235d4:	mov	r1, #1
   235d8:	mov	r0, #0
   235dc:	blx	r3
   235e0:	sub	r0, r0, #24
   235e4:	mov	r1, #0
   235e8:	cmp	r9, r1
   235ec:	cmpeq	r8, r0
   235f0:	movne	r8, #0
   235f4:	movne	sl, #5
   235f8:	bne	23544 <zsav_read_compressed_data+0x74>
   235fc:	ldrd	r8, [sp, #72]	; 0x48
   23600:	ldr	r3, [r5, #8]
   23604:	ldr	r2, [r5, #20]
   23608:	mov	r1, #0
   2360c:	ldr	r0, [sp, #64]	; 0x40
   23610:	blx	r3
   23614:	cmn	r0, #1
   23618:	moveq	r8, #0
   2361c:	moveq	sl, #15
   23620:	beq	23544 <zsav_read_compressed_data+0x74>
   23624:	ldr	r3, [r5, #12]
   23628:	ldr	r2, [r5, #20]
   2362c:	mov	r1, #24
   23630:	add	r0, sp, #32
   23634:	blx	r3
   23638:	cmp	r0, #23
   2363c:	movls	r8, #0
   23640:	movls	sl, #2
   23644:	bls	23544 <zsav_read_compressed_data+0x74>
   23648:	ldrb	r3, [r4, #436]	; 0x1b4
   2364c:	tst	r3, #1
   23650:	bne	23744 <zsav_read_compressed_data+0x274>
   23654:	ldrd	r0, [sp, #32]
   23658:	strd	r0, [sp, #32]
   2365c:	ldrb	r3, [r4, #436]	; 0x1b4
   23660:	tst	r3, #1
   23664:	bne	23750 <zsav_read_compressed_data+0x280>
   23668:	ldrd	r0, [sp, #40]	; 0x28
   2366c:	strd	r0, [sp, #40]	; 0x28
   23670:	ldrb	r3, [r4, #436]	; 0x1b4
   23674:	tst	r3, #1
   23678:	ldreq	r0, [sp, #48]	; 0x30
   2367c:	bne	2375c <zsav_read_compressed_data+0x28c>
   23680:	str	r0, [sp, #48]	; 0x30
   23684:	ldrb	r3, [r4, #436]	; 0x1b4
   23688:	tst	r3, #1
   2368c:	bne	23768 <zsav_read_compressed_data+0x298>
   23690:	ldr	r3, [sp, #52]	; 0x34
   23694:	str	r3, [sp, #8]
   23698:	mov	r2, #24
   2369c:	mov	r3, #0
   236a0:	subs	r0, r8, #24
   236a4:	sbc	r1, r9, #0
   236a8:	bl	24680 <__aeabi_uldivmod>
   236ac:	mov	r9, r0
   236b0:	ldr	r3, [sp, #8]
   236b4:	str	r3, [sp, #52]	; 0x34
   236b8:	cmp	r3, r0
   236bc:	movne	r8, #0
   236c0:	movne	sl, #5
   236c4:	bne	23544 <zsav_read_compressed_data+0x74>
   236c8:	mov	sl, r3
   236cc:	cmp	r3, #0
   236d0:	beq	23a94 <zsav_read_compressed_data+0x5c4>
   236d4:	mov	r0, #24
   236d8:	mul	r0, r0, r9
   236dc:	bl	4258 <readstat_malloc@plt>
   236e0:	subs	r8, r0, #0
   236e4:	beq	23a84 <zsav_read_compressed_data+0x5b4>
   236e8:	mov	r3, #24
   236ec:	mul	r9, r3, r9
   236f0:	ldr	r3, [r5, #12]
   236f4:	ldr	r2, [r5, #20]
   236f8:	mov	r1, r9
   236fc:	mov	r0, r8
   23700:	blx	r3
   23704:	cmp	r9, r0
   23708:	bhi	23a8c <zsav_read_compressed_data+0x5bc>
   2370c:	cmp	sl, #0
   23710:	ble	23810 <zsav_read_compressed_data+0x340>
   23714:	mov	r9, r8
   23718:	mov	fp, #0
   2371c:	b	237b4 <zsav_read_compressed_data+0x2e4>
   23720:	ldrd	r0, [sp, #56]	; 0x38
   23724:	bl	3d9c <byteswap8@plt>
   23728:	b	2359c <zsav_read_compressed_data+0xcc>
   2372c:	ldrd	r0, [sp, #64]	; 0x40
   23730:	bl	3d9c <byteswap8@plt>
   23734:	b	235b0 <zsav_read_compressed_data+0xe0>
   23738:	ldrd	r0, [sp, #72]	; 0x48
   2373c:	bl	3d9c <byteswap8@plt>
   23740:	b	235c4 <zsav_read_compressed_data+0xf4>
   23744:	ldrd	r0, [sp, #32]
   23748:	bl	3d9c <byteswap8@plt>
   2374c:	b	23658 <zsav_read_compressed_data+0x188>
   23750:	ldrd	r0, [sp, #40]	; 0x28
   23754:	bl	3d9c <byteswap8@plt>
   23758:	b	2366c <zsav_read_compressed_data+0x19c>
   2375c:	ldr	r0, [sp, #48]	; 0x30
   23760:	bl	3db4 <byteswap4@plt>
   23764:	b	23680 <zsav_read_compressed_data+0x1b0>
   23768:	ldr	r0, [sp, #52]	; 0x34
   2376c:	bl	3db4 <byteswap4@plt>
   23770:	str	r0, [sp, #8]
   23774:	b	23698 <zsav_read_compressed_data+0x1c8>
   23778:	ldrd	r0, [r9]
   2377c:	bl	3d9c <byteswap8@plt>
   23780:	b	237c4 <zsav_read_compressed_data+0x2f4>
   23784:	ldrd	r0, [r9, #8]
   23788:	bl	3d9c <byteswap8@plt>
   2378c:	b	237dc <zsav_read_compressed_data+0x30c>
   23790:	ldr	r0, [sl, #16]
   23794:	bl	3db4 <byteswap4@plt>
   23798:	b	237f0 <zsav_read_compressed_data+0x320>
   2379c:	str	r0, [sl, #20]
   237a0:	add	fp, fp, #1
   237a4:	add	r9, r9, #24
   237a8:	ldr	r3, [sp, #8]
   237ac:	cmp	r3, fp
   237b0:	beq	23810 <zsav_read_compressed_data+0x340>
   237b4:	ldrb	r3, [r4, #436]	; 0x1b4
   237b8:	tst	r3, #1
   237bc:	bne	23778 <zsav_read_compressed_data+0x2a8>
   237c0:	ldrd	r0, [r9]
   237c4:	mov	sl, r9
   237c8:	strd	r0, [r9]
   237cc:	ldrb	r3, [r4, #436]	; 0x1b4
   237d0:	tst	r3, #1
   237d4:	bne	23784 <zsav_read_compressed_data+0x2b4>
   237d8:	ldrd	r0, [r9, #8]
   237dc:	strd	r0, [sl, #8]
   237e0:	ldrb	r3, [r4, #436]	; 0x1b4
   237e4:	tst	r3, #1
   237e8:	ldreq	r0, [sl, #16]
   237ec:	bne	23790 <zsav_read_compressed_data+0x2c0>
   237f0:	str	r0, [sl, #16]
   237f4:	ldrb	r3, [r4, #436]	; 0x1b4
   237f8:	tst	r3, #1
   237fc:	ldreq	r0, [sl, #20]
   23800:	beq	2379c <zsav_read_compressed_data+0x2cc>
   23804:	ldr	r0, [sl, #20]
   23808:	bl	3db4 <byteswap4@plt>
   2380c:	b	2379c <zsav_read_compressed_data+0x2cc>
   23810:	lsls	r3, r6, #3
   23814:	str	r3, [sp, #20]
   23818:	moveq	fp, #0
   2381c:	bne	23928 <zsav_read_compressed_data+0x458>
   23820:	str	r8, [sp, #12]
   23824:	mov	r3, #0
   23828:	str	r3, [sp, #16]
   2382c:	mov	r6, r3
   23830:	mov	r9, r3
   23834:	mov	sl, r3
   23838:	add	r3, sp, #140	; 0x8c
   2383c:	str	r3, [sp, #28]
   23840:	add	r3, sp, #80	; 0x50
   23844:	str	r3, [sp, #24]
   23848:	str	r8, [sp, #4]
   2384c:	ldr	r3, [sp, #16]
   23850:	ldr	r2, [sp, #8]
   23854:	cmp	r3, r2
   23858:	beq	23a00 <zsav_read_compressed_data+0x530>
   2385c:	ldr	r0, [sp, #12]
   23860:	mov	r8, r0
   23864:	ldr	r3, [r5, #8]
   23868:	ldr	r2, [r5, #20]
   2386c:	mov	r1, #0
   23870:	ldr	r0, [r0, #8]
   23874:	blx	r3
   23878:	cmn	r0, #1
   2387c:	beq	23a24 <zsav_read_compressed_data+0x554>
   23880:	ldr	r0, [sp, #12]
   23884:	ldr	r1, [r0, #20]
   23888:	mov	r0, r9
   2388c:	bl	430c <readstat_realloc@plt>
   23890:	subs	r9, r0, #0
   23894:	beq	23a30 <zsav_read_compressed_data+0x560>
   23898:	ldr	r3, [r5, #12]
   2389c:	ldr	r2, [r5, #20]
   238a0:	ldr	r1, [r8, #20]
   238a4:	mov	r0, r9
   238a8:	blx	r3
   238ac:	ldr	r3, [r8, #20]
   238b0:	cmp	r0, r3
   238b4:	bne	23a3c <zsav_read_compressed_data+0x56c>
   238b8:	ldr	r1, [r8, #16]
   238bc:	str	r1, [sp, #140]	; 0x8c
   238c0:	mov	r0, r6
   238c4:	bl	430c <readstat_realloc@plt>
   238c8:	subs	r6, r0, #0
   238cc:	beq	23a48 <zsav_read_compressed_data+0x578>
   238d0:	ldr	r3, [r8, #20]
   238d4:	mov	r2, r9
   238d8:	ldr	r1, [sp, #28]
   238dc:	mov	r0, r6
   238e0:	bl	3fb8 <uncompress@plt>
   238e4:	cmp	r0, #0
   238e8:	bne	23a54 <zsav_read_compressed_data+0x584>
   238ec:	ldr	r2, [r8, #16]
   238f0:	ldr	r3, [sp, #140]	; 0x8c
   238f4:	cmp	r2, r3
   238f8:	bne	23a60 <zsav_read_compressed_data+0x590>
   238fc:	ldr	r3, [sp, #16]
   23900:	add	r3, r3, #1
   23904:	str	r3, [sp, #16]
   23908:	mov	r3, #1
   2390c:	str	r3, [sp, #128]	; 0x80
   23910:	mov	r8, #0
   23914:	mov	r3, sl
   23918:	mov	sl, r5
   2391c:	mov	r5, r4
   23920:	ldr	r4, [sp, #20]
   23924:	b	23968 <zsav_read_compressed_data+0x498>
   23928:	mov	r0, r3
   2392c:	bl	4258 <readstat_malloc@plt>
   23930:	subs	fp, r0, #0
   23934:	bne	23820 <zsav_read_compressed_data+0x350>
   23938:	mov	sl, #3
   2393c:	b	23544 <zsav_read_compressed_data+0x74>
   23940:	mov	r2, r5
   23944:	mov	r1, r4
   23948:	mov	r0, fp
   2394c:	blx	r7
   23950:	cmp	r0, #0
   23954:	bne	23a78 <zsav_read_compressed_data+0x5a8>
   23958:	mov	r3, #0
   2395c:	b	239b4 <zsav_read_compressed_data+0x4e4>
   23960:	cmp	r2, #0
   23964:	beq	239e4 <zsav_read_compressed_data+0x514>
   23968:	add	r2, r6, r8
   2396c:	str	r2, [sp, #80]	; 0x50
   23970:	ldr	r2, [sp, #140]	; 0x8c
   23974:	sub	r8, r2, r8
   23978:	str	r8, [sp, #84]	; 0x54
   2397c:	add	r2, fp, r3
   23980:	str	r2, [sp, #88]	; 0x58
   23984:	sub	r3, r4, r3
   23988:	str	r3, [sp, #92]	; 0x5c
   2398c:	ldr	r0, [sp, #24]
   23990:	bl	4240 <sav_decompress_row@plt>
   23994:	ldr	r3, [sp, #92]	; 0x5c
   23998:	sub	r3, r4, r3
   2399c:	ldr	r2, [sp, #84]	; 0x54
   239a0:	ldr	r8, [sp, #140]	; 0x8c
   239a4:	sub	r8, r8, r2
   239a8:	ldr	r2, [sp, #128]	; 0x80
   239ac:	cmp	r2, #2
   239b0:	beq	23940 <zsav_read_compressed_data+0x470>
   239b4:	ldr	r2, [sp, #128]	; 0x80
   239b8:	cmp	r2, #3
   239bc:	beq	23a6c <zsav_read_compressed_data+0x59c>
   239c0:	ldr	r1, [r5, #356]	; 0x164
   239c4:	cmp	r1, #0
   239c8:	ble	23960 <zsav_read_compressed_data+0x490>
   239cc:	ldr	r0, [r5, #364]	; 0x16c
   239d0:	cmp	r1, r0
   239d4:	bne	23960 <zsav_read_compressed_data+0x490>
   239d8:	ldr	r8, [sp, #4]
   239dc:	mov	sl, #0
   239e0:	b	23a08 <zsav_read_compressed_data+0x538>
   239e4:	mov	r4, r5
   239e8:	mov	r5, sl
   239ec:	mov	sl, r3
   239f0:	ldr	r3, [sp, #12]
   239f4:	add	r3, r3, #24
   239f8:	str	r3, [sp, #12]
   239fc:	b	2384c <zsav_read_compressed_data+0x37c>
   23a00:	ldr	r8, [sp, #4]
   23a04:	mov	sl, #0
   23a08:	cmp	fp, #0
   23a0c:	beq	23a18 <zsav_read_compressed_data+0x548>
   23a10:	mov	r0, fp
   23a14:	bl	3ee0 <free@plt>
   23a18:	cmp	r8, #0
   23a1c:	bne	23558 <zsav_read_compressed_data+0x88>
   23a20:	b	23560 <zsav_read_compressed_data+0x90>
   23a24:	ldr	r8, [sp, #4]
   23a28:	mov	sl, #15
   23a2c:	b	23a08 <zsav_read_compressed_data+0x538>
   23a30:	ldr	r8, [sp, #4]
   23a34:	mov	sl, #3
   23a38:	b	23a08 <zsav_read_compressed_data+0x538>
   23a3c:	ldr	r8, [sp, #4]
   23a40:	mov	sl, #2
   23a44:	b	23a08 <zsav_read_compressed_data+0x538>
   23a48:	ldr	r8, [sp, #4]
   23a4c:	mov	sl, #3
   23a50:	b	23a08 <zsav_read_compressed_data+0x538>
   23a54:	ldr	r8, [sp, #4]
   23a58:	mov	sl, #5
   23a5c:	b	23a08 <zsav_read_compressed_data+0x538>
   23a60:	ldr	r8, [sp, #4]
   23a64:	mov	sl, #5
   23a68:	b	23a08 <zsav_read_compressed_data+0x538>
   23a6c:	ldr	r8, [sp, #4]
   23a70:	mov	sl, #0
   23a74:	b	23a08 <zsav_read_compressed_data+0x538>
   23a78:	ldr	r8, [sp, #4]
   23a7c:	mov	sl, r0
   23a80:	b	23a08 <zsav_read_compressed_data+0x538>
   23a84:	mov	sl, #3
   23a88:	b	23544 <zsav_read_compressed_data+0x74>
   23a8c:	mov	sl, #2
   23a90:	b	23544 <zsav_read_compressed_data+0x74>
   23a94:	mov	r3, #24
   23a98:	mul	r9, r3, r0
   23a9c:	ldr	r3, [r5, #12]
   23aa0:	ldr	r2, [r5, #20]
   23aa4:	mov	r1, r9
   23aa8:	mov	r0, #0
   23aac:	blx	r3
   23ab0:	cmp	r9, r0
   23ab4:	movls	r8, #0
   23ab8:	bls	23810 <zsav_read_compressed_data+0x340>
   23abc:	mov	r8, #0
   23ac0:	mov	sl, #2
   23ac4:	b	23544 <zsav_read_compressed_data+0x74>

00023ac8 <zsav_write_compressed_row>:
   23ac8:	push	{r4, r5, r6, lr}
   23acc:	mov	r4, r0
   23ad0:	ldr	r5, [r0, #300]	; 0x12c
   23ad4:	mov	r3, r0
   23ad8:	ldr	r0, [r5]
   23adc:	bl	448c <sav_compress_row@plt>
   23ae0:	ldr	r2, [r4, #84]	; 0x54
   23ae4:	add	r2, r2, #1
   23ae8:	ldr	r1, [r4, #80]	; 0x50
   23aec:	mov	r3, r5
   23af0:	cmp	r2, r1
   23af4:	movne	r2, #0
   23af8:	moveq	r2, #1
   23afc:	mov	r1, r0
   23b00:	ldr	r0, [r5]
   23b04:	bl	44e0 <zsav_compress_row@plt>
   23b08:	cmp	r0, #1
   23b0c:	movhi	r0, #13
   23b10:	movls	r0, #0
   23b14:	pop	{r4, r5, r6, pc}

00023b18 <zsav_end_data>:
   23b18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23b1c:	sub	sp, sp, #52	; 0x34
   23b20:	mov	r5, r0
   23b24:	ldr	r4, [r0, #300]	; 0x12c
   23b28:	ldrd	r2, [r4, #24]
   23b2c:	strd	r2, [sp, #24]
   23b30:	adds	r2, r2, #24
   23b34:	adc	r3, r3, #0
   23b38:	strd	r2, [sp, #32]
   23b3c:	ldr	ip, [r4, #8]
   23b40:	add	r2, ip, #1
   23b44:	add	r2, r2, r2, lsl #1
   23b48:	lsl	r2, r2, #3
   23b4c:	asr	r3, r2, #31
   23b50:	strd	r2, [sp, #40]	; 0x28
   23b54:	cmp	ip, #0
   23b58:	ble	23b88 <zsav_end_data+0x70>
   23b5c:	mov	r1, #0
   23b60:	ldr	r3, [r4, #4]
   23b64:	ldr	r3, [r3, r1, lsl #2]
   23b68:	ldr	r0, [r3, #4]
   23b6c:	ldrd	r2, [sp, #32]
   23b70:	adds	r2, r2, r0
   23b74:	adc	r3, r3, r0, asr #31
   23b78:	strd	r2, [sp, #32]
   23b7c:	add	r1, r1, #1
   23b80:	cmp	ip, r1
   23b84:	bne	23b60 <zsav_end_data+0x48>
   23b88:	mov	r2, #8
   23b8c:	add	r1, sp, #24
   23b90:	mov	r0, r5
   23b94:	bl	4480 <readstat_write_bytes@plt>
   23b98:	cmp	r0, #0
   23b9c:	beq	23ba8 <zsav_end_data+0x90>
   23ba0:	add	sp, sp, #52	; 0x34
   23ba4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23ba8:	mov	r2, #8
   23bac:	add	r1, sp, #32
   23bb0:	mov	r0, r5
   23bb4:	bl	4480 <readstat_write_bytes@plt>
   23bb8:	cmp	r0, #0
   23bbc:	bne	23ba0 <zsav_end_data+0x88>
   23bc0:	mov	r2, #8
   23bc4:	add	r1, sp, #40	; 0x28
   23bc8:	mov	r0, r5
   23bcc:	bl	4480 <readstat_write_bytes@plt>
   23bd0:	cmp	r0, #0
   23bd4:	bne	23ba0 <zsav_end_data+0x88>
   23bd8:	ldr	r3, [r4, #8]
   23bdc:	cmp	r3, #0
   23be0:	ble	23c18 <zsav_end_data+0x100>
   23be4:	mov	r6, #0
   23be8:	ldr	r3, [r4, #4]
   23bec:	ldr	r3, [r3, r6, lsl #2]
   23bf0:	ldr	r2, [r3, #4]
   23bf4:	ldr	r1, [r3, #64]	; 0x40
   23bf8:	mov	r0, r5
   23bfc:	bl	4480 <readstat_write_bytes@plt>
   23c00:	cmp	r0, #0
   23c04:	bne	23ba0 <zsav_end_data+0x88>
   23c08:	add	r6, r6, #1
   23c0c:	ldr	r3, [r4, #8]
   23c10:	cmp	r6, r3
   23c14:	blt	23be8 <zsav_end_data+0xd0>
   23c18:	mvn	r2, #99	; 0x63
   23c1c:	mvn	r3, #0
   23c20:	strd	r2, [sp, #16]
   23c24:	mov	r2, #0
   23c28:	mov	r3, #0
   23c2c:	strd	r2, [sp, #24]
   23c30:	ldr	r3, [r4, #16]
   23c34:	str	r3, [sp]
   23c38:	ldr	r3, [r4, #8]
   23c3c:	str	r3, [sp, #4]
   23c40:	mov	r2, #8
   23c44:	add	r1, sp, #16
   23c48:	mov	r0, r5
   23c4c:	bl	4480 <readstat_write_bytes@plt>
   23c50:	cmp	r0, #0
   23c54:	bne	23ba0 <zsav_end_data+0x88>
   23c58:	mov	r2, #8
   23c5c:	add	r1, sp, #24
   23c60:	mov	r0, r5
   23c64:	bl	4480 <readstat_write_bytes@plt>
   23c68:	cmp	r0, #0
   23c6c:	bne	23ba0 <zsav_end_data+0x88>
   23c70:	mov	r2, #4
   23c74:	mov	r1, sp
   23c78:	mov	r0, r5
   23c7c:	bl	4480 <readstat_write_bytes@plt>
   23c80:	cmp	r0, #0
   23c84:	bne	23ba0 <zsav_end_data+0x88>
   23c88:	mov	r2, #4
   23c8c:	add	r1, sp, r2
   23c90:	mov	r0, r5
   23c94:	bl	4480 <readstat_write_bytes@plt>
   23c98:	cmp	r0, #0
   23c9c:	bne	23ba0 <zsav_end_data+0x88>
   23ca0:	ldrd	r2, [r4, #24]
   23ca4:	strd	r2, [sp, #32]
   23ca8:	adds	r2, r2, #24
   23cac:	adc	r3, r3, #0
   23cb0:	strd	r2, [sp, #40]	; 0x28
   23cb4:	ldr	r3, [r4, #8]
   23cb8:	cmp	r3, #0
   23cbc:	ble	23ba0 <zsav_end_data+0x88>
   23cc0:	mov	r6, #0
   23cc4:	add	r8, sp, #32
   23cc8:	mov	r7, #8
   23ccc:	add	fp, sp, #40	; 0x28
   23cd0:	add	sl, sp, r7
   23cd4:	add	r9, sp, #12
   23cd8:	ldr	r3, [r4, #4]
   23cdc:	ldr	r3, [r3, r6, lsl #2]
   23ce0:	ldr	r2, [r3]
   23ce4:	str	r2, [sp, #8]
   23ce8:	ldr	r3, [r3, #4]
   23cec:	str	r3, [sp, #12]
   23cf0:	mov	r2, r7
   23cf4:	mov	r1, r8
   23cf8:	mov	r0, r5
   23cfc:	bl	4480 <readstat_write_bytes@plt>
   23d00:	cmp	r0, #0
   23d04:	bne	23ba0 <zsav_end_data+0x88>
   23d08:	mov	r2, r7
   23d0c:	mov	r1, fp
   23d10:	mov	r0, r5
   23d14:	bl	4480 <readstat_write_bytes@plt>
   23d18:	cmp	r0, #0
   23d1c:	bne	23ba0 <zsav_end_data+0x88>
   23d20:	mov	r2, #4
   23d24:	mov	r1, sl
   23d28:	mov	r0, r5
   23d2c:	bl	4480 <readstat_write_bytes@plt>
   23d30:	cmp	r0, #0
   23d34:	bne	23ba0 <zsav_end_data+0x88>
   23d38:	mov	r2, #4
   23d3c:	mov	r1, r9
   23d40:	mov	r0, r5
   23d44:	bl	4480 <readstat_write_bytes@plt>
   23d48:	cmp	r0, #0
   23d4c:	bne	23ba0 <zsav_end_data+0x88>
   23d50:	ldrd	r2, [sp, #32]
   23d54:	ldr	r1, [sp, #8]
   23d58:	adds	r2, r2, r1
   23d5c:	adc	r3, r3, r1, asr #31
   23d60:	strd	r2, [sp, #32]
   23d64:	ldrd	r2, [sp, #40]	; 0x28
   23d68:	ldr	r1, [sp, #12]
   23d6c:	adds	r2, r2, r1
   23d70:	adc	r3, r3, r1, asr #31
   23d74:	strd	r2, [sp, #40]	; 0x28
   23d78:	add	r6, r6, #1
   23d7c:	ldr	r3, [r4, #8]
   23d80:	cmp	r6, r3
   23d84:	blt	23cd8 <zsav_end_data+0x1c0>
   23d88:	b	23ba0 <zsav_end_data+0x88>

00023d8c <__udivsi3>:
   23d8c:	subs	r2, r1, #1
   23d90:	bxeq	lr
   23d94:	bcc	23f6c <__udivsi3+0x1e0>
   23d98:	cmp	r0, r1
   23d9c:	bls	23f50 <__udivsi3+0x1c4>
   23da0:	tst	r1, r2
   23da4:	beq	23f5c <__udivsi3+0x1d0>
   23da8:	clz	r3, r0
   23dac:	clz	r2, r1
   23db0:	sub	r3, r2, r3
   23db4:	rsbs	r3, r3, #31
   23db8:	addne	r3, r3, r3, lsl #1
   23dbc:	mov	r2, #0
   23dc0:	addne	pc, pc, r3, lsl #2
   23dc4:	nop			; (mov r0, r0)
   23dc8:	cmp	r0, r1, lsl #31
   23dcc:	adc	r2, r2, r2
   23dd0:	subcs	r0, r0, r1, lsl #31
   23dd4:	cmp	r0, r1, lsl #30
   23dd8:	adc	r2, r2, r2
   23ddc:	subcs	r0, r0, r1, lsl #30
   23de0:	cmp	r0, r1, lsl #29
   23de4:	adc	r2, r2, r2
   23de8:	subcs	r0, r0, r1, lsl #29
   23dec:	cmp	r0, r1, lsl #28
   23df0:	adc	r2, r2, r2
   23df4:	subcs	r0, r0, r1, lsl #28
   23df8:	cmp	r0, r1, lsl #27
   23dfc:	adc	r2, r2, r2
   23e00:	subcs	r0, r0, r1, lsl #27
   23e04:	cmp	r0, r1, lsl #26
   23e08:	adc	r2, r2, r2
   23e0c:	subcs	r0, r0, r1, lsl #26
   23e10:	cmp	r0, r1, lsl #25
   23e14:	adc	r2, r2, r2
   23e18:	subcs	r0, r0, r1, lsl #25
   23e1c:	cmp	r0, r1, lsl #24
   23e20:	adc	r2, r2, r2
   23e24:	subcs	r0, r0, r1, lsl #24
   23e28:	cmp	r0, r1, lsl #23
   23e2c:	adc	r2, r2, r2
   23e30:	subcs	r0, r0, r1, lsl #23
   23e34:	cmp	r0, r1, lsl #22
   23e38:	adc	r2, r2, r2
   23e3c:	subcs	r0, r0, r1, lsl #22
   23e40:	cmp	r0, r1, lsl #21
   23e44:	adc	r2, r2, r2
   23e48:	subcs	r0, r0, r1, lsl #21
   23e4c:	cmp	r0, r1, lsl #20
   23e50:	adc	r2, r2, r2
   23e54:	subcs	r0, r0, r1, lsl #20
   23e58:	cmp	r0, r1, lsl #19
   23e5c:	adc	r2, r2, r2
   23e60:	subcs	r0, r0, r1, lsl #19
   23e64:	cmp	r0, r1, lsl #18
   23e68:	adc	r2, r2, r2
   23e6c:	subcs	r0, r0, r1, lsl #18
   23e70:	cmp	r0, r1, lsl #17
   23e74:	adc	r2, r2, r2
   23e78:	subcs	r0, r0, r1, lsl #17
   23e7c:	cmp	r0, r1, lsl #16
   23e80:	adc	r2, r2, r2
   23e84:	subcs	r0, r0, r1, lsl #16
   23e88:	cmp	r0, r1, lsl #15
   23e8c:	adc	r2, r2, r2
   23e90:	subcs	r0, r0, r1, lsl #15
   23e94:	cmp	r0, r1, lsl #14
   23e98:	adc	r2, r2, r2
   23e9c:	subcs	r0, r0, r1, lsl #14
   23ea0:	cmp	r0, r1, lsl #13
   23ea4:	adc	r2, r2, r2
   23ea8:	subcs	r0, r0, r1, lsl #13
   23eac:	cmp	r0, r1, lsl #12
   23eb0:	adc	r2, r2, r2
   23eb4:	subcs	r0, r0, r1, lsl #12
   23eb8:	cmp	r0, r1, lsl #11
   23ebc:	adc	r2, r2, r2
   23ec0:	subcs	r0, r0, r1, lsl #11
   23ec4:	cmp	r0, r1, lsl #10
   23ec8:	adc	r2, r2, r2
   23ecc:	subcs	r0, r0, r1, lsl #10
   23ed0:	cmp	r0, r1, lsl #9
   23ed4:	adc	r2, r2, r2
   23ed8:	subcs	r0, r0, r1, lsl #9
   23edc:	cmp	r0, r1, lsl #8
   23ee0:	adc	r2, r2, r2
   23ee4:	subcs	r0, r0, r1, lsl #8
   23ee8:	cmp	r0, r1, lsl #7
   23eec:	adc	r2, r2, r2
   23ef0:	subcs	r0, r0, r1, lsl #7
   23ef4:	cmp	r0, r1, lsl #6
   23ef8:	adc	r2, r2, r2
   23efc:	subcs	r0, r0, r1, lsl #6
   23f00:	cmp	r0, r1, lsl #5
   23f04:	adc	r2, r2, r2
   23f08:	subcs	r0, r0, r1, lsl #5
   23f0c:	cmp	r0, r1, lsl #4
   23f10:	adc	r2, r2, r2
   23f14:	subcs	r0, r0, r1, lsl #4
   23f18:	cmp	r0, r1, lsl #3
   23f1c:	adc	r2, r2, r2
   23f20:	subcs	r0, r0, r1, lsl #3
   23f24:	cmp	r0, r1, lsl #2
   23f28:	adc	r2, r2, r2
   23f2c:	subcs	r0, r0, r1, lsl #2
   23f30:	cmp	r0, r1, lsl #1
   23f34:	adc	r2, r2, r2
   23f38:	subcs	r0, r0, r1, lsl #1
   23f3c:	cmp	r0, r1
   23f40:	adc	r2, r2, r2
   23f44:	subcs	r0, r0, r1
   23f48:	mov	r0, r2
   23f4c:	bx	lr
   23f50:	moveq	r0, #1
   23f54:	movne	r0, #0
   23f58:	bx	lr
   23f5c:	clz	r2, r1
   23f60:	rsb	r2, r2, #31
   23f64:	lsr	r0, r0, r2
   23f68:	bx	lr
   23f6c:	cmp	r0, #0
   23f70:	mvnne	r0, #0
   23f74:	b	246bc <__aeabi_idiv0>

00023f78 <__aeabi_uidivmod>:
   23f78:	cmp	r1, #0
   23f7c:	beq	23f6c <__udivsi3+0x1e0>
   23f80:	push	{r0, r1, lr}
   23f84:	bl	23d8c <__udivsi3>
   23f88:	pop	{r1, r2, lr}
   23f8c:	mul	r3, r2, r0
   23f90:	sub	r1, r1, r3
   23f94:	bx	lr

00023f98 <__divsi3>:
   23f98:	cmp	r1, #0
   23f9c:	beq	241a8 <.divsi3_skip_div0_test+0x208>

00023fa0 <.divsi3_skip_div0_test>:
   23fa0:	eor	ip, r0, r1
   23fa4:	rsbmi	r1, r1, #0
   23fa8:	subs	r2, r1, #1
   23fac:	beq	24174 <.divsi3_skip_div0_test+0x1d4>
   23fb0:	movs	r3, r0
   23fb4:	rsbmi	r3, r0, #0
   23fb8:	cmp	r3, r1
   23fbc:	bls	24180 <.divsi3_skip_div0_test+0x1e0>
   23fc0:	tst	r1, r2
   23fc4:	beq	24190 <.divsi3_skip_div0_test+0x1f0>
   23fc8:	clz	r2, r3
   23fcc:	clz	r0, r1
   23fd0:	sub	r2, r0, r2
   23fd4:	rsbs	r2, r2, #31
   23fd8:	addne	r2, r2, r2, lsl #1
   23fdc:	mov	r0, #0
   23fe0:	addne	pc, pc, r2, lsl #2
   23fe4:	nop			; (mov r0, r0)
   23fe8:	cmp	r3, r1, lsl #31
   23fec:	adc	r0, r0, r0
   23ff0:	subcs	r3, r3, r1, lsl #31
   23ff4:	cmp	r3, r1, lsl #30
   23ff8:	adc	r0, r0, r0
   23ffc:	subcs	r3, r3, r1, lsl #30
   24000:	cmp	r3, r1, lsl #29
   24004:	adc	r0, r0, r0
   24008:	subcs	r3, r3, r1, lsl #29
   2400c:	cmp	r3, r1, lsl #28
   24010:	adc	r0, r0, r0
   24014:	subcs	r3, r3, r1, lsl #28
   24018:	cmp	r3, r1, lsl #27
   2401c:	adc	r0, r0, r0
   24020:	subcs	r3, r3, r1, lsl #27
   24024:	cmp	r3, r1, lsl #26
   24028:	adc	r0, r0, r0
   2402c:	subcs	r3, r3, r1, lsl #26
   24030:	cmp	r3, r1, lsl #25
   24034:	adc	r0, r0, r0
   24038:	subcs	r3, r3, r1, lsl #25
   2403c:	cmp	r3, r1, lsl #24
   24040:	adc	r0, r0, r0
   24044:	subcs	r3, r3, r1, lsl #24
   24048:	cmp	r3, r1, lsl #23
   2404c:	adc	r0, r0, r0
   24050:	subcs	r3, r3, r1, lsl #23
   24054:	cmp	r3, r1, lsl #22
   24058:	adc	r0, r0, r0
   2405c:	subcs	r3, r3, r1, lsl #22
   24060:	cmp	r3, r1, lsl #21
   24064:	adc	r0, r0, r0
   24068:	subcs	r3, r3, r1, lsl #21
   2406c:	cmp	r3, r1, lsl #20
   24070:	adc	r0, r0, r0
   24074:	subcs	r3, r3, r1, lsl #20
   24078:	cmp	r3, r1, lsl #19
   2407c:	adc	r0, r0, r0
   24080:	subcs	r3, r3, r1, lsl #19
   24084:	cmp	r3, r1, lsl #18
   24088:	adc	r0, r0, r0
   2408c:	subcs	r3, r3, r1, lsl #18
   24090:	cmp	r3, r1, lsl #17
   24094:	adc	r0, r0, r0
   24098:	subcs	r3, r3, r1, lsl #17
   2409c:	cmp	r3, r1, lsl #16
   240a0:	adc	r0, r0, r0
   240a4:	subcs	r3, r3, r1, lsl #16
   240a8:	cmp	r3, r1, lsl #15
   240ac:	adc	r0, r0, r0
   240b0:	subcs	r3, r3, r1, lsl #15
   240b4:	cmp	r3, r1, lsl #14
   240b8:	adc	r0, r0, r0
   240bc:	subcs	r3, r3, r1, lsl #14
   240c0:	cmp	r3, r1, lsl #13
   240c4:	adc	r0, r0, r0
   240c8:	subcs	r3, r3, r1, lsl #13
   240cc:	cmp	r3, r1, lsl #12
   240d0:	adc	r0, r0, r0
   240d4:	subcs	r3, r3, r1, lsl #12
   240d8:	cmp	r3, r1, lsl #11
   240dc:	adc	r0, r0, r0
   240e0:	subcs	r3, r3, r1, lsl #11
   240e4:	cmp	r3, r1, lsl #10
   240e8:	adc	r0, r0, r0
   240ec:	subcs	r3, r3, r1, lsl #10
   240f0:	cmp	r3, r1, lsl #9
   240f4:	adc	r0, r0, r0
   240f8:	subcs	r3, r3, r1, lsl #9
   240fc:	cmp	r3, r1, lsl #8
   24100:	adc	r0, r0, r0
   24104:	subcs	r3, r3, r1, lsl #8
   24108:	cmp	r3, r1, lsl #7
   2410c:	adc	r0, r0, r0
   24110:	subcs	r3, r3, r1, lsl #7
   24114:	cmp	r3, r1, lsl #6
   24118:	adc	r0, r0, r0
   2411c:	subcs	r3, r3, r1, lsl #6
   24120:	cmp	r3, r1, lsl #5
   24124:	adc	r0, r0, r0
   24128:	subcs	r3, r3, r1, lsl #5
   2412c:	cmp	r3, r1, lsl #4
   24130:	adc	r0, r0, r0
   24134:	subcs	r3, r3, r1, lsl #4
   24138:	cmp	r3, r1, lsl #3
   2413c:	adc	r0, r0, r0
   24140:	subcs	r3, r3, r1, lsl #3
   24144:	cmp	r3, r1, lsl #2
   24148:	adc	r0, r0, r0
   2414c:	subcs	r3, r3, r1, lsl #2
   24150:	cmp	r3, r1, lsl #1
   24154:	adc	r0, r0, r0
   24158:	subcs	r3, r3, r1, lsl #1
   2415c:	cmp	r3, r1
   24160:	adc	r0, r0, r0
   24164:	subcs	r3, r3, r1
   24168:	cmp	ip, #0
   2416c:	rsbmi	r0, r0, #0
   24170:	bx	lr
   24174:	teq	ip, r0
   24178:	rsbmi	r0, r0, #0
   2417c:	bx	lr
   24180:	movcc	r0, #0
   24184:	asreq	r0, ip, #31
   24188:	orreq	r0, r0, #1
   2418c:	bx	lr
   24190:	clz	r2, r1
   24194:	rsb	r2, r2, #31
   24198:	cmp	ip, #0
   2419c:	lsr	r0, r3, r2
   241a0:	rsbmi	r0, r0, #0
   241a4:	bx	lr
   241a8:	cmp	r0, #0
   241ac:	mvngt	r0, #-2147483648	; 0x80000000
   241b0:	movlt	r0, #-2147483648	; 0x80000000
   241b4:	b	246bc <__aeabi_idiv0>

000241b8 <__aeabi_idivmod>:
   241b8:	cmp	r1, #0
   241bc:	beq	241a8 <.divsi3_skip_div0_test+0x208>
   241c0:	push	{r0, r1, lr}
   241c4:	bl	23fa0 <.divsi3_skip_div0_test>
   241c8:	pop	{r1, r2, lr}
   241cc:	mul	r3, r2, r0
   241d0:	sub	r1, r1, r3
   241d4:	bx	lr

000241d8 <__aeabi_llsl>:
   241d8:	subs	r3, r2, #32
   241dc:	rsb	ip, r2, #32
   241e0:	lslmi	r1, r1, r2
   241e4:	lslpl	r1, r0, r3
   241e8:	orrmi	r1, r1, r0, lsr ip
   241ec:	lsl	r0, r0, r2
   241f0:	bx	lr

000241f4 <__aeabi_drsub>:
   241f4:	eor	r1, r1, #-2147483648	; 0x80000000
   241f8:	b	24200 <__adddf3>

000241fc <__aeabi_dsub>:
   241fc:	eor	r3, r3, #-2147483648	; 0x80000000

00024200 <__adddf3>:
   24200:	push	{r4, r5, lr}
   24204:	lsl	r4, r1, #1
   24208:	lsl	r5, r3, #1
   2420c:	teq	r4, r5
   24210:	teqeq	r0, r2
   24214:	orrsne	ip, r4, r0
   24218:	orrsne	ip, r5, r2
   2421c:	mvnsne	ip, r4, asr #21
   24220:	mvnsne	ip, r5, asr #21
   24224:	beq	24410 <__adddf3+0x210>
   24228:	lsr	r4, r4, #21
   2422c:	rsbs	r5, r4, r5, lsr #21
   24230:	rsblt	r5, r5, #0
   24234:	ble	24254 <__adddf3+0x54>
   24238:	add	r4, r4, r5
   2423c:	eor	r2, r0, r2
   24240:	eor	r3, r1, r3
   24244:	eor	r0, r2, r0
   24248:	eor	r1, r3, r1
   2424c:	eor	r2, r0, r2
   24250:	eor	r3, r1, r3
   24254:	cmp	r5, #54	; 0x36
   24258:	pophi	{r4, r5, pc}
   2425c:	tst	r1, #-2147483648	; 0x80000000
   24260:	lsl	r1, r1, #12
   24264:	mov	ip, #1048576	; 0x100000
   24268:	orr	r1, ip, r1, lsr #12
   2426c:	beq	24278 <__adddf3+0x78>
   24270:	rsbs	r0, r0, #0
   24274:	rsc	r1, r1, #0
   24278:	tst	r3, #-2147483648	; 0x80000000
   2427c:	lsl	r3, r3, #12
   24280:	orr	r3, ip, r3, lsr #12
   24284:	beq	24290 <__adddf3+0x90>
   24288:	rsbs	r2, r2, #0
   2428c:	rsc	r3, r3, #0
   24290:	teq	r4, r5
   24294:	beq	243f8 <__adddf3+0x1f8>
   24298:	sub	r4, r4, #1
   2429c:	rsbs	lr, r5, #32
   242a0:	blt	242bc <__adddf3+0xbc>
   242a4:	lsl	ip, r2, lr
   242a8:	adds	r0, r0, r2, lsr r5
   242ac:	adc	r1, r1, #0
   242b0:	adds	r0, r0, r3, lsl lr
   242b4:	adcs	r1, r1, r3, asr r5
   242b8:	b	242d8 <__adddf3+0xd8>
   242bc:	sub	r5, r5, #32
   242c0:	add	lr, lr, #32
   242c4:	cmp	r2, #1
   242c8:	lsl	ip, r3, lr
   242cc:	orrcs	ip, ip, #2
   242d0:	adds	r0, r0, r3, asr r5
   242d4:	adcs	r1, r1, r3, asr #31
   242d8:	and	r5, r1, #-2147483648	; 0x80000000
   242dc:	bpl	242ec <__adddf3+0xec>
   242e0:	rsbs	ip, ip, #0
   242e4:	rscs	r0, r0, #0
   242e8:	rsc	r1, r1, #0
   242ec:	cmp	r1, #1048576	; 0x100000
   242f0:	bcc	24330 <__adddf3+0x130>
   242f4:	cmp	r1, #2097152	; 0x200000
   242f8:	bcc	24318 <__adddf3+0x118>
   242fc:	lsrs	r1, r1, #1
   24300:	rrxs	r0, r0
   24304:	rrx	ip, ip
   24308:	add	r4, r4, #1
   2430c:	lsl	r2, r4, #21
   24310:	cmn	r2, #4194304	; 0x400000
   24314:	bcs	24470 <__adddf3+0x270>
   24318:	cmp	ip, #-2147483648	; 0x80000000
   2431c:	lsrseq	ip, r0, #1
   24320:	adcs	r0, r0, #0
   24324:	adc	r1, r1, r4, lsl #20
   24328:	orr	r1, r1, r5
   2432c:	pop	{r4, r5, pc}
   24330:	lsls	ip, ip, #1
   24334:	adcs	r0, r0, r0
   24338:	adc	r1, r1, r1
   2433c:	tst	r1, #1048576	; 0x100000
   24340:	sub	r4, r4, #1
   24344:	bne	24318 <__adddf3+0x118>
   24348:	teq	r1, #0
   2434c:	moveq	r1, r0
   24350:	moveq	r0, #0
   24354:	clz	r3, r1
   24358:	addeq	r3, r3, #32
   2435c:	sub	r3, r3, #11
   24360:	subs	r2, r3, #32
   24364:	bge	24388 <__adddf3+0x188>
   24368:	adds	r2, r2, #12
   2436c:	ble	24384 <__adddf3+0x184>
   24370:	add	ip, r2, #20
   24374:	rsb	r2, r2, #12
   24378:	lsl	r0, r1, ip
   2437c:	lsr	r1, r1, r2
   24380:	b	24398 <__adddf3+0x198>
   24384:	add	r2, r2, #20
   24388:	rsble	ip, r2, #32
   2438c:	lsl	r1, r1, r2
   24390:	orrle	r1, r1, r0, lsr ip
   24394:	lslle	r0, r0, r2
   24398:	subs	r4, r4, r3
   2439c:	addge	r1, r1, r4, lsl #20
   243a0:	orrge	r1, r1, r5
   243a4:	popge	{r4, r5, pc}
   243a8:	mvn	r4, r4
   243ac:	subs	r4, r4, #31
   243b0:	bge	243ec <__adddf3+0x1ec>
   243b4:	adds	r4, r4, #12
   243b8:	bgt	243d4 <__adddf3+0x1d4>
   243bc:	add	r4, r4, #20
   243c0:	rsb	r2, r4, #32
   243c4:	lsr	r0, r0, r4
   243c8:	orr	r0, r0, r1, lsl r2
   243cc:	orr	r1, r5, r1, lsr r4
   243d0:	pop	{r4, r5, pc}
   243d4:	rsb	r4, r4, #12
   243d8:	rsb	r2, r4, #32
   243dc:	lsr	r0, r0, r2
   243e0:	orr	r0, r0, r1, lsl r4
   243e4:	mov	r1, r5
   243e8:	pop	{r4, r5, pc}
   243ec:	lsr	r0, r1, r4
   243f0:	mov	r1, r5
   243f4:	pop	{r4, r5, pc}
   243f8:	teq	r4, #0
   243fc:	eor	r3, r3, #1048576	; 0x100000
   24400:	eoreq	r1, r1, #1048576	; 0x100000
   24404:	addeq	r4, r4, #1
   24408:	subne	r5, r5, #1
   2440c:	b	24298 <__adddf3+0x98>
   24410:	mvns	ip, r4, asr #21
   24414:	mvnsne	ip, r5, asr #21
   24418:	beq	24480 <__adddf3+0x280>
   2441c:	teq	r4, r5
   24420:	teqeq	r0, r2
   24424:	beq	24438 <__adddf3+0x238>
   24428:	orrs	ip, r4, r0
   2442c:	moveq	r1, r3
   24430:	moveq	r0, r2
   24434:	pop	{r4, r5, pc}
   24438:	teq	r1, r3
   2443c:	movne	r1, #0
   24440:	movne	r0, #0
   24444:	popne	{r4, r5, pc}
   24448:	lsrs	ip, r4, #21
   2444c:	bne	24460 <__adddf3+0x260>
   24450:	lsls	r0, r0, #1
   24454:	adcs	r1, r1, r1
   24458:	orrcs	r1, r1, #-2147483648	; 0x80000000
   2445c:	pop	{r4, r5, pc}
   24460:	adds	r4, r4, #4194304	; 0x400000
   24464:	addcc	r1, r1, #1048576	; 0x100000
   24468:	popcc	{r4, r5, pc}
   2446c:	and	r5, r1, #-2147483648	; 0x80000000
   24470:	orr	r1, r5, #2130706432	; 0x7f000000
   24474:	orr	r1, r1, #15728640	; 0xf00000
   24478:	mov	r0, #0
   2447c:	pop	{r4, r5, pc}
   24480:	mvns	ip, r4, asr #21
   24484:	movne	r1, r3
   24488:	movne	r0, r2
   2448c:	mvnseq	ip, r5, asr #21
   24490:	movne	r3, r1
   24494:	movne	r2, r0
   24498:	orrs	r4, r0, r1, lsl #12
   2449c:	orrseq	r5, r2, r3, lsl #12
   244a0:	teqeq	r1, r3
   244a4:	orrne	r1, r1, #524288	; 0x80000
   244a8:	pop	{r4, r5, pc}

000244ac <__aeabi_ui2d>:
   244ac:	teq	r0, #0
   244b0:	moveq	r1, #0
   244b4:	bxeq	lr
   244b8:	push	{r4, r5, lr}
   244bc:	mov	r4, #1024	; 0x400
   244c0:	add	r4, r4, #50	; 0x32
   244c4:	mov	r5, #0
   244c8:	mov	r1, #0
   244cc:	b	24348 <__adddf3+0x148>

000244d0 <__aeabi_i2d>:
   244d0:	teq	r0, #0
   244d4:	moveq	r1, #0
   244d8:	bxeq	lr
   244dc:	push	{r4, r5, lr}
   244e0:	mov	r4, #1024	; 0x400
   244e4:	add	r4, r4, #50	; 0x32
   244e8:	ands	r5, r0, #-2147483648	; 0x80000000
   244ec:	rsbmi	r0, r0, #0
   244f0:	mov	r1, #0
   244f4:	b	24348 <__adddf3+0x148>

000244f8 <__aeabi_f2d>:
   244f8:	lsls	r2, r0, #1
   244fc:	asr	r1, r2, #3
   24500:	rrx	r1, r1
   24504:	lsl	r0, r2, #28
   24508:	andsne	r3, r2, #-16777216	; 0xff000000
   2450c:	teqne	r3, #-16777216	; 0xff000000
   24510:	eorne	r1, r1, #939524096	; 0x38000000
   24514:	bxne	lr
   24518:	teq	r2, #0
   2451c:	teqne	r3, #-16777216	; 0xff000000
   24520:	bxeq	lr
   24524:	push	{r4, r5, lr}
   24528:	mov	r4, #896	; 0x380
   2452c:	and	r5, r1, #-2147483648	; 0x80000000
   24530:	bic	r1, r1, #-2147483648	; 0x80000000
   24534:	b	24348 <__adddf3+0x148>

00024538 <__aeabi_ul2d>:
   24538:	orrs	r2, r0, r1
   2453c:	bxeq	lr
   24540:	push	{r4, r5, lr}
   24544:	mov	r5, #0
   24548:	b	24568 <__aeabi_l2d+0x1c>

0002454c <__aeabi_l2d>:
   2454c:	orrs	r2, r0, r1
   24550:	bxeq	lr
   24554:	push	{r4, r5, lr}
   24558:	ands	r5, r1, #-2147483648	; 0x80000000
   2455c:	bpl	24568 <__aeabi_l2d+0x1c>
   24560:	rsbs	r0, r0, #0
   24564:	rsc	r1, r1, #0
   24568:	mov	r4, #1024	; 0x400
   2456c:	add	r4, r4, #50	; 0x32
   24570:	lsrs	ip, r1, #22
   24574:	beq	242ec <__adddf3+0xec>
   24578:	mov	r2, #3
   2457c:	lsrs	ip, ip, #3
   24580:	addne	r2, r2, #3
   24584:	lsrs	ip, ip, #3
   24588:	addne	r2, r2, #3
   2458c:	add	r2, r2, ip, lsr #3
   24590:	rsb	r3, r2, #32
   24594:	lsl	ip, r0, r3
   24598:	lsr	r0, r0, r2
   2459c:	orr	r0, r0, r1, lsl r3
   245a0:	lsr	r1, r1, r2
   245a4:	add	r4, r4, r2
   245a8:	b	242ec <__adddf3+0xec>

000245ac <__aeabi_ldivmod>:
   245ac:	cmp	r3, #0
   245b0:	cmpeq	r2, #0
   245b4:	bne	245d8 <__aeabi_ldivmod+0x2c>
   245b8:	cmp	r1, #0
   245bc:	movlt	r1, #-2147483648	; 0x80000000
   245c0:	movlt	r0, #0
   245c4:	blt	245d4 <__aeabi_ldivmod+0x28>
   245c8:	cmpeq	r0, #0
   245cc:	mvnne	r1, #-2147483648	; 0x80000000
   245d0:	mvnne	r0, #0
   245d4:	b	246bc <__aeabi_idiv0>
   245d8:	sub	sp, sp, #8
   245dc:	push	{sp, lr}
   245e0:	cmp	r1, #0
   245e4:	blt	24604 <__aeabi_ldivmod+0x58>
   245e8:	cmp	r3, #0
   245ec:	blt	24638 <__aeabi_ldivmod+0x8c>
   245f0:	bl	24740 <__udivmoddi4>
   245f4:	ldr	lr, [sp, #4]
   245f8:	add	sp, sp, #8
   245fc:	pop	{r2, r3}
   24600:	bx	lr
   24604:	rsbs	r0, r0, #0
   24608:	sbc	r1, r1, r1, lsl #1
   2460c:	cmp	r3, #0
   24610:	blt	2465c <__aeabi_ldivmod+0xb0>
   24614:	bl	24740 <__udivmoddi4>
   24618:	ldr	lr, [sp, #4]
   2461c:	add	sp, sp, #8
   24620:	pop	{r2, r3}
   24624:	rsbs	r0, r0, #0
   24628:	sbc	r1, r1, r1, lsl #1
   2462c:	rsbs	r2, r2, #0
   24630:	sbc	r3, r3, r3, lsl #1
   24634:	bx	lr
   24638:	rsbs	r2, r2, #0
   2463c:	sbc	r3, r3, r3, lsl #1
   24640:	bl	24740 <__udivmoddi4>
   24644:	ldr	lr, [sp, #4]
   24648:	add	sp, sp, #8
   2464c:	pop	{r2, r3}
   24650:	rsbs	r0, r0, #0
   24654:	sbc	r1, r1, r1, lsl #1
   24658:	bx	lr
   2465c:	rsbs	r2, r2, #0
   24660:	sbc	r3, r3, r3, lsl #1
   24664:	bl	24740 <__udivmoddi4>
   24668:	ldr	lr, [sp, #4]
   2466c:	add	sp, sp, #8
   24670:	pop	{r2, r3}
   24674:	rsbs	r2, r2, #0
   24678:	sbc	r3, r3, r3, lsl #1
   2467c:	bx	lr

00024680 <__aeabi_uldivmod>:
   24680:	cmp	r3, #0
   24684:	cmpeq	r2, #0
   24688:	bne	246a0 <__aeabi_uldivmod+0x20>
   2468c:	cmp	r1, #0
   24690:	cmpeq	r0, #0
   24694:	mvnne	r1, #0
   24698:	mvnne	r0, #0
   2469c:	b	246bc <__aeabi_idiv0>
   246a0:	sub	sp, sp, #8
   246a4:	push	{sp, lr}
   246a8:	bl	24740 <__udivmoddi4>
   246ac:	ldr	lr, [sp, #4]
   246b0:	add	sp, sp, #8
   246b4:	pop	{r2, r3}
   246b8:	bx	lr

000246bc <__aeabi_idiv0>:
   246bc:	push	{r1, lr}
   246c0:	mov	r0, #8
   246c4:	bl	3da8 <raise@plt>
   246c8:	pop	{r1, pc}

000246cc <__aeabi_d2lz>:
   246cc:	vmov	d7, r0, r1
   246d0:	vcmpe.f64	d7, #0.0
   246d4:	vmrs	APSR_nzcv, fpscr
   246d8:	bmi	246e0 <__aeabi_d2lz+0x14>
   246dc:	b	246f8 <__aeabi_d2ulz>
   246e0:	push	{r4, lr}
   246e4:	eor	r1, r1, #-2147483648	; 0x80000000
   246e8:	bl	246f8 <__aeabi_d2ulz>
   246ec:	rsbs	r0, r0, #0
   246f0:	rsc	r1, r1, #0
   246f4:	pop	{r4, pc}

000246f8 <__aeabi_d2ulz>:
   246f8:	vmov	d7, r0, r1
   246fc:	vldr	d6, [pc, #44]	; 24730 <__aeabi_d2ulz+0x38>
   24700:	vldr	d5, [pc, #48]	; 24738 <__aeabi_d2ulz+0x40>
   24704:	mov	r0, #0
   24708:	vmul.f64	d6, d7, d6
   2470c:	vcvt.u32.f64	s12, d6
   24710:	vcvt.f64.u32	d4, s12
   24714:	vmov	r1, s12
   24718:	vmls.f64	d7, d4, d5
   2471c:	vcvt.u32.f64	s14, d7
   24720:	vmov	r3, s14
   24724:	orr	r0, r0, r3
   24728:	bx	lr
   2472c:	nop			; (mov r0, r0)
   24730:	.word	0x00000000
   24734:	.word	0x3df00000
   24738:	.word	0x00000000
   2473c:	.word	0x41f00000

00024740 <__udivmoddi4>:
   24740:	cmp	r1, r3
   24744:	push	{r4, r5, r6, r7, r8, r9, lr}
   24748:	cmpeq	r0, r2
   2474c:	mov	r4, r0
   24750:	mov	r5, r1
   24754:	ldr	r9, [sp, #28]
   24758:	movcc	r0, #0
   2475c:	movcc	r1, #0
   24760:	bcc	24858 <__udivmoddi4+0x118>
   24764:	cmp	r3, #0
   24768:	clzeq	ip, r2
   2476c:	clzne	ip, r3
   24770:	addeq	ip, ip, #32
   24774:	cmp	r5, #0
   24778:	clzeq	r1, r4
   2477c:	addeq	r1, r1, #32
   24780:	clzne	r1, r5
   24784:	sub	ip, ip, r1
   24788:	sub	lr, ip, #32
   2478c:	lsl	r7, r3, ip
   24790:	rsb	r8, ip, #32
   24794:	orr	r7, r7, r2, lsl lr
   24798:	orr	r7, r7, r2, lsr r8
   2479c:	lsl	r6, r2, ip
   247a0:	cmp	r5, r7
   247a4:	cmpeq	r4, r6
   247a8:	movcc	r0, #0
   247ac:	movcc	r1, #0
   247b0:	bcc	247cc <__udivmoddi4+0x8c>
   247b4:	mov	r3, #1
   247b8:	subs	r4, r4, r6
   247bc:	lsl	r1, r3, lr
   247c0:	lsl	r0, r3, ip
   247c4:	orr	r1, r1, r3, lsr r8
   247c8:	sbc	r5, r5, r7
   247cc:	cmp	ip, #0
   247d0:	beq	24858 <__udivmoddi4+0x118>
   247d4:	lsrs	r3, r7, #1
   247d8:	rrx	r2, r6
   247dc:	mov	r6, ip
   247e0:	b	24804 <__udivmoddi4+0xc4>
   247e4:	subs	r4, r4, r2
   247e8:	sbc	r5, r5, r3
   247ec:	adds	r4, r4, r4
   247f0:	adc	r5, r5, r5
   247f4:	adds	r4, r4, #1
   247f8:	adc	r5, r5, #0
   247fc:	subs	r6, r6, #1
   24800:	beq	24820 <__udivmoddi4+0xe0>
   24804:	cmp	r5, r3
   24808:	cmpeq	r4, r2
   2480c:	bcs	247e4 <__udivmoddi4+0xa4>
   24810:	adds	r4, r4, r4
   24814:	adc	r5, r5, r5
   24818:	subs	r6, r6, #1
   2481c:	bne	24804 <__udivmoddi4+0xc4>
   24820:	lsr	r6, r4, ip
   24824:	lsr	r7, r5, ip
   24828:	orr	r6, r6, r5, lsl r8
   2482c:	adds	r2, r0, r4
   24830:	orr	r6, r6, r5, lsr lr
   24834:	adc	r3, r1, r5
   24838:	lsl	r1, r7, ip
   2483c:	orr	r1, r1, r6, lsl lr
   24840:	lsl	r0, r6, ip
   24844:	orr	r1, r1, r6, lsr r8
   24848:	subs	r0, r2, r0
   2484c:	mov	r4, r6
   24850:	mov	r5, r7
   24854:	sbc	r1, r3, r1
   24858:	cmp	r9, #0
   2485c:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   24860:	strd	r4, [r9]
   24864:	pop	{r4, r5, r6, r7, r8, r9, pc}

Disassembly of section .fini:

00024868 <_fini>:
   24868:	push	{r3, lr}
   2486c:	pop	{r3, pc}
