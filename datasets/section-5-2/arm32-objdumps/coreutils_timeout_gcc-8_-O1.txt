
../repos/coreutils/src/timeout:     file format elf32-littlearm


Disassembly of section .init:

0001101c <.init>:
   1101c:	push	{r3, lr}
   11020:	bl	113b4 <__snprintf_chk@plt+0x48>
   11024:	pop	{r3, pc}

Disassembly of section .plt:

00011028 <calloc@plt-0x14>:
   11028:	push	{lr}		; (str lr, [sp, #-4]!)
   1102c:	ldr	lr, [pc, #4]	; 11038 <calloc@plt-0x4>
   11030:	add	lr, pc, lr
   11034:	ldr	pc, [lr, #8]!
   11038:	andeq	r6, r1, r8, asr #31

0001103c <calloc@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #90112	; 0x16000
   11044:	ldr	pc, [ip, #4040]!	; 0xfc8

00011048 <fputs_unlocked@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #90112	; 0x16000
   11050:	ldr	pc, [ip, #4032]!	; 0xfc0

00011054 <raise@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #90112	; 0x16000
   1105c:	ldr	pc, [ip, #4024]!	; 0xfb8

00011060 <strcmp@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #90112	; 0x16000
   11068:	ldr	pc, [ip, #4016]!	; 0xfb0

0001106c <strtol@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #90112	; 0x16000
   11074:	ldr	pc, [ip, #4008]!	; 0xfa8

00011078 <fflush@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #90112	; 0x16000
   11080:	ldr	pc, [ip, #4000]!	; 0xfa0

00011084 <sigprocmask@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #90112	; 0x16000
   1108c:	ldr	pc, [ip, #3992]!	; 0xf98

00011090 <free@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #90112	; 0x16000
   11098:	ldr	pc, [ip, #3984]!	; 0xf90

0001109c <_exit@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #90112	; 0x16000
   110a4:	ldr	pc, [ip, #3976]!	; 0xf88

000110a8 <memcpy@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #90112	; 0x16000
   110b0:	ldr	pc, [ip, #3968]!	; 0xf80

000110b4 <execvp@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #90112	; 0x16000
   110bc:	ldr	pc, [ip, #3960]!	; 0xf78

000110c0 <mbsinit@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #90112	; 0x16000
   110c8:	ldr	pc, [ip, #3952]!	; 0xf70

000110cc <signal@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #90112	; 0x16000
   110d4:	ldr	pc, [ip, #3944]!	; 0xf68

000110d8 <memcmp@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #90112	; 0x16000
   110e0:	ldr	pc, [ip, #3936]!	; 0xf60

000110e4 <fputc_unlocked@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #90112	; 0x16000
   110ec:	ldr	pc, [ip, #3928]!	; 0xf58

000110f0 <dcgettext@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #90112	; 0x16000
   110f8:	ldr	pc, [ip, #3920]!	; 0xf50

000110fc <alarm@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #90112	; 0x16000
   11104:	ldr	pc, [ip, #3912]!	; 0xf48

00011108 <realloc@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #90112	; 0x16000
   11110:	ldr	pc, [ip, #3904]!	; 0xf40

00011114 <timer_create@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #90112	; 0x16000
   1111c:	ldr	pc, [ip, #3896]!	; 0xf38

00011120 <textdomain@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #90112	; 0x16000
   11128:	ldr	pc, [ip, #3888]!	; 0xf30

0001112c <iswprint@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #90112	; 0x16000
   11134:	ldr	pc, [ip, #3880]!	; 0xf28

00011138 <timer_settime@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #90112	; 0x16000
   11140:	ldr	pc, [ip, #3872]!	; 0xf20

00011144 <sigaction@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #90112	; 0x16000
   1114c:	ldr	pc, [ip, #3864]!	; 0xf18

00011150 <fwrite@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #90112	; 0x16000
   11158:	ldr	pc, [ip, #3856]!	; 0xf10

0001115c <lseek64@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #90112	; 0x16000
   11164:	ldr	pc, [ip, #3848]!	; 0xf08

00011168 <waitpid@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #90112	; 0x16000
   11170:	ldr	pc, [ip, #3840]!	; 0xf00

00011174 <__ctype_get_mb_cur_max@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #90112	; 0x16000
   1117c:	ldr	pc, [ip, #3832]!	; 0xef8

00011180 <strcpy@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #90112	; 0x16000
   11188:	ldr	pc, [ip, #3824]!	; 0xef0

0001118c <__fpending@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #90112	; 0x16000
   11194:	ldr	pc, [ip, #3816]!	; 0xee8

00011198 <mbrtowc@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #90112	; 0x16000
   111a0:	ldr	pc, [ip, #3808]!	; 0xee0

000111a4 <error@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #90112	; 0x16000
   111ac:	ldr	pc, [ip, #3800]!	; 0xed8

000111b0 <timer_delete@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #90112	; 0x16000
   111b8:	ldr	pc, [ip, #3792]!	; 0xed0

000111bc <malloc@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #90112	; 0x16000
   111c4:	ldr	pc, [ip, #3784]!	; 0xec8

000111c8 <sigaddset@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #90112	; 0x16000
   111d0:	ldr	pc, [ip, #3776]!	; 0xec0

000111d4 <__libc_start_main@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #90112	; 0x16000
   111dc:	ldr	pc, [ip, #3768]!	; 0xeb8

000111e0 <__freading@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #90112	; 0x16000
   111e8:	ldr	pc, [ip, #3760]!	; 0xeb0

000111ec <__gmon_start__@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #90112	; 0x16000
   111f4:	ldr	pc, [ip, #3752]!	; 0xea8

000111f8 <getopt_long@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #90112	; 0x16000
   11200:	ldr	pc, [ip, #3744]!	; 0xea0

00011204 <kill@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #90112	; 0x16000
   1120c:	ldr	pc, [ip, #3736]!	; 0xe98

00011210 <__ctype_b_loc@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #90112	; 0x16000
   11218:	ldr	pc, [ip, #3728]!	; 0xe90

0001121c <exit@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #90112	; 0x16000
   11224:	ldr	pc, [ip, #3720]!	; 0xe88

00011228 <strlen@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #90112	; 0x16000
   11230:	ldr	pc, [ip, #3712]!	; 0xe80

00011234 <__libc_current_sigrtmax@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #90112	; 0x16000
   1123c:	ldr	pc, [ip, #3704]!	; 0xe78

00011240 <strchr@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #90112	; 0x16000
   11248:	ldr	pc, [ip, #3696]!	; 0xe70

0001124c <__errno_location@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #90112	; 0x16000
   11254:	ldr	pc, [ip, #3688]!	; 0xe68

00011258 <__sprintf_chk@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #90112	; 0x16000
   11260:	ldr	pc, [ip, #3680]!	; 0xe60

00011264 <__cxa_atexit@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #90112	; 0x16000
   1126c:	ldr	pc, [ip, #3672]!	; 0xe58

00011270 <memset@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #90112	; 0x16000
   11278:	ldr	pc, [ip, #3664]!	; 0xe50

0001127c <sigsuspend@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #90112	; 0x16000
   11284:	ldr	pc, [ip, #3656]!	; 0xe48

00011288 <__printf_chk@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #90112	; 0x16000
   11290:	ldr	pc, [ip, #3648]!	; 0xe40

00011294 <prctl@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #90112	; 0x16000
   1129c:	ldr	pc, [ip, #3640]!	; 0xe38

000112a0 <strtod@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #90112	; 0x16000
   112a8:	ldr	pc, [ip, #3632]!	; 0xe30

000112ac <fileno@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #90112	; 0x16000
   112b4:	ldr	pc, [ip, #3624]!	; 0xe28

000112b8 <__fprintf_chk@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #90112	; 0x16000
   112c0:	ldr	pc, [ip, #3616]!	; 0xe20

000112c4 <fclose@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #90112	; 0x16000
   112cc:	ldr	pc, [ip, #3608]!	; 0xe18

000112d0 <fseeko64@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #90112	; 0x16000
   112d8:	ldr	pc, [ip, #3600]!	; 0xe10

000112dc <strtod_l@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #90112	; 0x16000
   112e4:	ldr	pc, [ip, #3592]!	; 0xe08

000112e8 <setlocale@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #90112	; 0x16000
   112f0:	ldr	pc, [ip, #3584]!	; 0xe00

000112f4 <sigemptyset@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #90112	; 0x16000
   112fc:	ldr	pc, [ip, #3576]!	; 0xdf8

00011300 <fork@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #90112	; 0x16000
   11308:	ldr	pc, [ip, #3568]!	; 0xdf0

0001130c <strrchr@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #90112	; 0x16000
   11314:	ldr	pc, [ip, #3560]!	; 0xde8

00011318 <nl_langinfo@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #90112	; 0x16000
   11320:	ldr	pc, [ip, #3552]!	; 0xde0

00011324 <newlocale@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #90112	; 0x16000
   1132c:	ldr	pc, [ip, #3544]!	; 0xdd8

00011330 <setpgid@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #90112	; 0x16000
   11338:	ldr	pc, [ip, #3536]!	; 0xdd0

0001133c <bindtextdomain@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #90112	; 0x16000
   11344:	ldr	pc, [ip, #3528]!	; 0xdc8

00011348 <__libc_current_sigrtmin@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #90112	; 0x16000
   11350:	ldr	pc, [ip, #3520]!	; 0xdc0

00011354 <strncmp@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #90112	; 0x16000
   1135c:	ldr	pc, [ip, #3512]!	; 0xdb8

00011360 <abort@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #90112	; 0x16000
   11368:	ldr	pc, [ip, #3504]!	; 0xdb0

0001136c <__snprintf_chk@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #90112	; 0x16000
   11374:	ldr	pc, [ip, #3496]!	; 0xda8

Disassembly of section .text:

00011378 <.text>:
   11378:	mov	fp, #0
   1137c:	mov	lr, #0
   11380:	pop	{r1}		; (ldr r1, [sp], #4)
   11384:	mov	r2, sp
   11388:	push	{r2}		; (str r2, [sp, #-4]!)
   1138c:	push	{r0}		; (str r0, [sp, #-4]!)
   11390:	ldr	ip, [pc, #16]	; 113a8 <__snprintf_chk@plt+0x3c>
   11394:	push	{ip}		; (str ip, [sp, #-4]!)
   11398:	ldr	r0, [pc, #12]	; 113ac <__snprintf_chk@plt+0x40>
   1139c:	ldr	r3, [pc, #12]	; 113b0 <__snprintf_chk@plt+0x44>
   113a0:	bl	111d4 <__libc_start_main@plt>
   113a4:	bl	11360 <abort@plt>
   113a8:	andeq	r6, r1, r4, lsl #1
   113ac:	andeq	r1, r1, r4, asr sp
   113b0:	andeq	r6, r1, r4, lsr #32
   113b4:	ldr	r3, [pc, #20]	; 113d0 <__snprintf_chk@plt+0x64>
   113b8:	ldr	r2, [pc, #20]	; 113d4 <__snprintf_chk@plt+0x68>
   113bc:	add	r3, pc, r3
   113c0:	ldr	r2, [r3, r2]
   113c4:	cmp	r2, #0
   113c8:	bxeq	lr
   113cc:	b	111ec <__gmon_start__@plt>
   113d0:	andeq	r6, r1, ip, lsr ip
   113d4:	andeq	r0, r0, r0, lsr #2
   113d8:	ldr	r0, [pc, #24]	; 113f8 <__snprintf_chk@plt+0x8c>
   113dc:	ldr	r3, [pc, #24]	; 113fc <__snprintf_chk@plt+0x90>
   113e0:	cmp	r3, r0
   113e4:	bxeq	lr
   113e8:	ldr	r3, [pc, #16]	; 11400 <__snprintf_chk@plt+0x94>
   113ec:	cmp	r3, #0
   113f0:	bxeq	lr
   113f4:	bx	r3
   113f8:	andeq	r8, r2, ip, lsl r3
   113fc:	andeq	r8, r2, ip, lsl r3
   11400:	andeq	r0, r0, r0
   11404:	ldr	r0, [pc, #36]	; 11430 <__snprintf_chk@plt+0xc4>
   11408:	ldr	r1, [pc, #36]	; 11434 <__snprintf_chk@plt+0xc8>
   1140c:	sub	r1, r1, r0
   11410:	asr	r1, r1, #2
   11414:	add	r1, r1, r1, lsr #31
   11418:	asrs	r1, r1, #1
   1141c:	bxeq	lr
   11420:	ldr	r3, [pc, #16]	; 11438 <__snprintf_chk@plt+0xcc>
   11424:	cmp	r3, #0
   11428:	bxeq	lr
   1142c:	bx	r3
   11430:	andeq	r8, r2, ip, lsl r3
   11434:	andeq	r8, r2, ip, lsl r3
   11438:	andeq	r0, r0, r0
   1143c:	push	{r4, lr}
   11440:	ldr	r4, [pc, #24]	; 11460 <__snprintf_chk@plt+0xf4>
   11444:	ldrb	r3, [r4]
   11448:	cmp	r3, #0
   1144c:	popne	{r4, pc}
   11450:	bl	113d8 <__snprintf_chk@plt+0x6c>
   11454:	mov	r3, #1
   11458:	strb	r3, [r4]
   1145c:	pop	{r4, pc}
   11460:	andeq	r8, r2, ip, lsr r3
   11464:	b	11404 <__snprintf_chk@plt+0x98>
   11468:	bx	lr
   1146c:	strd	r4, [sp, #-16]!
   11470:	str	r6, [sp, #8]
   11474:	str	lr, [sp, #12]
   11478:	mov	r4, r1
   1147c:	subs	r5, r0, #0
   11480:	beq	114a0 <__snprintf_chk@plt+0x134>
   11484:	mov	r1, r4
   11488:	mov	r0, r5
   1148c:	bl	11204 <kill@plt>
   11490:	ldrd	r4, [sp]
   11494:	ldr	r6, [sp, #8]
   11498:	add	sp, sp, #12
   1149c:	pop	{pc}		; (ldr pc, [sp], #4)
   114a0:	mov	r1, #1
   114a4:	mov	r0, r4
   114a8:	bl	110cc <signal@plt>
   114ac:	b	11484 <__snprintf_chk@plt+0x118>
   114b0:	str	r4, [sp, #-8]!
   114b4:	str	lr, [sp, #4]
   114b8:	vpush	{d8}
   114bc:	sub	sp, sp, #32
   114c0:	vmov.f64	d8, d0
   114c4:	mov	r4, r0
   114c8:	add	r0, sp, #24
   114cc:	bl	12770 <__snprintf_chk@plt+0x1404>
   114d0:	mov	r0, #0
   114d4:	str	r0, [sp, #8]
   114d8:	str	r0, [sp, #12]
   114dc:	ldrd	r2, [sp, #24]
   114e0:	strd	r2, [sp, #16]
   114e4:	add	r2, sp, #4
   114e8:	mov	r1, r0
   114ec:	bl	11114 <timer_create@plt>
   114f0:	cmp	r0, #0
   114f4:	beq	11538 <__snprintf_chk@plt+0x1cc>
   114f8:	cmp	r4, #0
   114fc:	beq	11564 <__snprintf_chk@plt+0x1f8>
   11500:	bl	1124c <__errno_location@plt>
   11504:	ldr	r4, [r0]
   11508:	cmp	r4, #38	; 0x26
   1150c:	beq	11564 <__snprintf_chk@plt+0x1f8>
   11510:	mov	r2, #5
   11514:	movw	r1, #24956	; 0x617c
   11518:	movt	r1, #1
   1151c:	mov	r0, #0
   11520:	bl	110f0 <dcgettext@plt>
   11524:	mov	r2, r0
   11528:	mov	r1, r4
   1152c:	mov	r0, #0
   11530:	bl	111a4 <error@plt>
   11534:	b	11564 <__snprintf_chk@plt+0x1f8>
   11538:	mov	r3, #0
   1153c:	add	r2, sp, #8
   11540:	mov	r1, r3
   11544:	ldr	r0, [sp, #4]
   11548:	bl	11138 <timer_settime@plt>
   1154c:	cmp	r0, #0
   11550:	beq	1159c <__snprintf_chk@plt+0x230>
   11554:	cmp	r4, #0
   11558:	bne	115b0 <__snprintf_chk@plt+0x244>
   1155c:	ldr	r0, [sp, #4]
   11560:	bl	111b0 <timer_delete@plt>
   11564:	vldr	d7, [pc, #116]	; 115e0 <__snprintf_chk@plt+0x274>
   11568:	vcmpe.f64	d8, d7
   1156c:	vmrs	APSR_nzcv, fpscr
   11570:	mvnge	r0, #0
   11574:	bge	11598 <__snprintf_chk@plt+0x22c>
   11578:	vcvt.u32.f64	s15, d8
   1157c:	vcvt.f64.u32	d6, s15
   11580:	vcmpe.f64	d6, d8
   11584:	vmrs	APSR_nzcv, fpscr
   11588:	movmi	r0, #1
   1158c:	movpl	r0, #0
   11590:	vmov	r3, s15
   11594:	add	r0, r0, r3
   11598:	bl	110fc <alarm@plt>
   1159c:	add	sp, sp, #32
   115a0:	vpop	{d8}
   115a4:	ldr	r4, [sp]
   115a8:	add	sp, sp, #4
   115ac:	pop	{pc}		; (ldr pc, [sp], #4)
   115b0:	bl	1124c <__errno_location@plt>
   115b4:	ldr	r4, [r0]
   115b8:	mov	r2, #5
   115bc:	movw	r1, #24932	; 0x6164
   115c0:	movt	r1, #1
   115c4:	mov	r0, #0
   115c8:	bl	110f0 <dcgettext@plt>
   115cc:	mov	r2, r0
   115d0:	mov	r1, r4
   115d4:	mov	r0, #0
   115d8:	bl	111a4 <error@plt>
   115dc:	b	1155c <__snprintf_chk@plt+0x1f0>
   115e0:			; <UNDEFINED> instruction: 0xffe00000
   115e4:	strdmi	pc, [pc, #255]	; 116eb <__snprintf_chk@plt+0x37f>
   115e8:	strd	r4, [sp, #-16]!
   115ec:	str	r6, [sp, #8]
   115f0:	str	lr, [sp, #12]
   115f4:	vpush	{d8}
   115f8:	sub	sp, sp, #32
   115fc:	mov	r5, r0
   11600:	cmp	r0, #14
   11604:	beq	11684 <__snprintf_chk@plt+0x318>
   11608:	movw	r3, #33600	; 0x8340
   1160c:	movt	r3, #2
   11610:	ldr	r3, [r3, #4]
   11614:	cmp	r3, #0
   11618:	beq	1179c <__snprintf_chk@plt+0x430>
   1161c:	movw	r3, #33600	; 0x8340
   11620:	movt	r3, #2
   11624:	vldr	d8, [r3, #8]
   11628:	vcmp.f64	d8, #0.0
   1162c:	vmrs	APSR_nzcv, fpscr
   11630:	bne	116a4 <__snprintf_chk@plt+0x338>
   11634:	movw	r3, #33600	; 0x8340
   11638:	movt	r3, #2
   1163c:	ldrb	r3, [r3, #16]
   11640:	cmp	r3, #0
   11644:	bne	116e8 <__snprintf_chk@plt+0x37c>
   11648:	movw	r4, #33600	; 0x8340
   1164c:	movt	r4, #2
   11650:	ldr	r6, [r4, #4]
   11654:	mov	r1, r5
   11658:	mov	r0, r6
   1165c:	bl	1146c <__snprintf_chk@plt+0x100>
   11660:	ldrb	r3, [r4, #24]
   11664:	cmp	r3, #0
   11668:	beq	11768 <__snprintf_chk@plt+0x3fc>
   1166c:	add	sp, sp, #32
   11670:	vpop	{d8}
   11674:	ldrd	r4, [sp]
   11678:	ldr	r6, [sp, #8]
   1167c:	add	sp, sp, #12
   11680:	pop	{pc}		; (ldr pc, [sp], #4)
   11684:	movw	r3, #33600	; 0x8340
   11688:	movt	r3, #2
   1168c:	mov	r2, #1
   11690:	str	r2, [r3]
   11694:	movw	r3, #33068	; 0x812c
   11698:	movt	r3, #2
   1169c:	ldr	r5, [r3]
   116a0:	b	11608 <__snprintf_chk@plt+0x29c>
   116a4:	bl	1124c <__errno_location@plt>
   116a8:	mov	r4, r0
   116ac:	ldr	r6, [r0]
   116b0:	movw	r3, #33068	; 0x812c
   116b4:	movt	r3, #2
   116b8:	mov	r2, #9
   116bc:	str	r2, [r3]
   116c0:	mov	r0, #0
   116c4:	vmov.f64	d0, d8
   116c8:	bl	114b0 <__snprintf_chk@plt+0x144>
   116cc:	movw	r3, #33600	; 0x8340
   116d0:	movt	r3, #2
   116d4:	mov	r0, #0
   116d8:	mov	r1, #0
   116dc:	strd	r0, [r3, #8]
   116e0:	str	r6, [r4]
   116e4:	b	11634 <__snprintf_chk@plt+0x2c8>
   116e8:	add	r1, sp, #12
   116ec:	mov	r0, r5
   116f0:	bl	14d6c <__snprintf_chk@plt+0x3a00>
   116f4:	cmp	r0, #0
   116f8:	bne	11740 <__snprintf_chk@plt+0x3d4>
   116fc:	mov	r2, #5
   11700:	movw	r1, #24984	; 0x6198
   11704:	movt	r1, #1
   11708:	mov	r0, #0
   1170c:	bl	110f0 <dcgettext@plt>
   11710:	mov	r4, r0
   11714:	movw	r3, #33600	; 0x8340
   11718:	movt	r3, #2
   1171c:	ldr	r0, [r3, #20]
   11720:	bl	14bb4 <__snprintf_chk@plt+0x3848>
   11724:	str	r0, [sp]
   11728:	add	r3, sp, #12
   1172c:	mov	r2, r4
   11730:	mov	r1, #0
   11734:	mov	r0, r1
   11738:	bl	111a4 <error@plt>
   1173c:	b	11648 <__snprintf_chk@plt+0x2dc>
   11740:	str	r5, [sp, #4]
   11744:	movw	r3, #24980	; 0x6194
   11748:	movt	r3, #1
   1174c:	str	r3, [sp]
   11750:	mov	r3, #19
   11754:	mov	r2, #1
   11758:	mov	r1, r3
   1175c:	add	r0, sp, #12
   11760:	bl	1136c <__snprintf_chk@plt>
   11764:	b	116fc <__snprintf_chk@plt+0x390>
   11768:	mov	r1, r5
   1176c:	mov	r0, #0
   11770:	bl	1146c <__snprintf_chk@plt+0x100>
   11774:	cmp	r5, #9
   11778:	cmpne	r5, #18
   1177c:	beq	1166c <__snprintf_chk@plt+0x300>
   11780:	mov	r1, #18
   11784:	mov	r0, r6
   11788:	bl	1146c <__snprintf_chk@plt+0x100>
   1178c:	mov	r1, #18
   11790:	mov	r0, #0
   11794:	bl	1146c <__snprintf_chk@plt+0x100>
   11798:	b	1166c <__snprintf_chk@plt+0x300>
   1179c:	add	r0, r5, #128	; 0x80
   117a0:	bl	1109c <_exit@plt>
   117a4:	str	r4, [sp, #-8]!
   117a8:	str	lr, [sp, #4]
   117ac:	sub	sp, sp, #128	; 0x80
   117b0:	mov	r4, r0
   117b4:	mov	r0, sp
   117b8:	bl	112f4 <sigemptyset@plt>
   117bc:	mov	r1, r4
   117c0:	mov	r0, sp
   117c4:	bl	111c8 <sigaddset@plt>
   117c8:	mov	r2, #0
   117cc:	mov	r1, sp
   117d0:	mov	r0, #1
   117d4:	bl	11084 <sigprocmask@plt>
   117d8:	cmp	r0, #0
   117dc:	bne	117f0 <__snprintf_chk@plt+0x484>
   117e0:	add	sp, sp, #128	; 0x80
   117e4:	ldr	r4, [sp]
   117e8:	add	sp, sp, #4
   117ec:	pop	{pc}		; (ldr pc, [sp], #4)
   117f0:	bl	1124c <__errno_location@plt>
   117f4:	ldr	r4, [r0]
   117f8:	mov	r2, #5
   117fc:	movw	r1, #25016	; 0x61b8
   11800:	movt	r1, #1
   11804:	mov	r0, #0
   11808:	bl	110f0 <dcgettext@plt>
   1180c:	mov	r2, r0
   11810:	mov	r1, r4
   11814:	mov	r0, #0
   11818:	bl	111a4 <error@plt>
   1181c:	b	117e0 <__snprintf_chk@plt+0x474>
   11820:	push	{lr}		; (str lr, [sp, #-4]!)
   11824:	sub	sp, sp, #60	; 0x3c
   11828:	subs	r5, r0, #0
   1182c:	beq	11874 <__snprintf_chk@plt+0x508>
   11830:	movw	r3, #33584	; 0x8330
   11834:	movt	r3, #2
   11838:	ldr	r4, [r3]
   1183c:	mov	r2, #5
   11840:	movw	r1, #25048	; 0x61d8
   11844:	movt	r1, #1
   11848:	mov	r0, #0
   1184c:	bl	110f0 <dcgettext@plt>
   11850:	movw	r3, #33636	; 0x8364
   11854:	movt	r3, #2
   11858:	ldr	r3, [r3]
   1185c:	mov	r2, r0
   11860:	mov	r1, #1
   11864:	mov	r0, r4
   11868:	bl	112b8 <__fprintf_chk@plt>
   1186c:	mov	r0, r5
   11870:	bl	1121c <exit@plt>
   11874:	mov	r2, #5
   11878:	movw	r1, #25088	; 0x6200
   1187c:	movt	r1, #1
   11880:	mov	r0, #0
   11884:	bl	110f0 <dcgettext@plt>
   11888:	movw	r3, #33636	; 0x8364
   1188c:	movt	r3, #2
   11890:	ldr	r2, [r3]
   11894:	mov	r3, r2
   11898:	mov	r1, r0
   1189c:	mov	r0, #1
   118a0:	bl	11288 <__printf_chk@plt>
   118a4:	mov	r2, #5
   118a8:	movw	r1, #25156	; 0x6244
   118ac:	movt	r1, #1
   118b0:	mov	r0, #0
   118b4:	bl	110f0 <dcgettext@plt>
   118b8:	movw	r4, #33588	; 0x8334
   118bc:	movt	r4, #2
   118c0:	ldr	r1, [r4]
   118c4:	bl	11048 <fputs_unlocked@plt>
   118c8:	mov	r2, #5
   118cc:	movw	r1, #25220	; 0x6284
   118d0:	movt	r1, #1
   118d4:	mov	r0, #0
   118d8:	bl	110f0 <dcgettext@plt>
   118dc:	ldr	r1, [r4]
   118e0:	bl	11048 <fputs_unlocked@plt>
   118e4:	mov	r2, #5
   118e8:	movw	r1, #25296	; 0x62d0
   118ec:	movt	r1, #1
   118f0:	mov	r0, #0
   118f4:	bl	110f0 <dcgettext@plt>
   118f8:	ldr	r1, [r4]
   118fc:	bl	11048 <fputs_unlocked@plt>
   11900:	mov	r2, #5
   11904:	movw	r1, #26028	; 0x65ac
   11908:	movt	r1, #1
   1190c:	mov	r0, #0
   11910:	bl	110f0 <dcgettext@plt>
   11914:	ldr	r1, [r4]
   11918:	bl	11048 <fputs_unlocked@plt>
   1191c:	mov	r2, #5
   11920:	movw	r1, #26096	; 0x65f0
   11924:	movt	r1, #1
   11928:	mov	r0, #0
   1192c:	bl	110f0 <dcgettext@plt>
   11930:	ldr	r1, [r4]
   11934:	bl	11048 <fputs_unlocked@plt>
   11938:	mov	r2, #5
   1193c:	movw	r1, #26144	; 0x6620
   11940:	movt	r1, #1
   11944:	mov	r0, #0
   11948:	bl	110f0 <dcgettext@plt>
   1194c:	ldr	r1, [r4]
   11950:	bl	11048 <fputs_unlocked@plt>
   11954:	mov	r2, #5
   11958:	movw	r1, #26200	; 0x6658
   1195c:	movt	r1, #1
   11960:	mov	r0, #0
   11964:	bl	110f0 <dcgettext@plt>
   11968:	ldr	r1, [r4]
   1196c:	bl	11048 <fputs_unlocked@plt>
   11970:	mov	r2, #5
   11974:	movw	r1, #26392	; 0x6718
   11978:	movt	r1, #1
   1197c:	mov	r0, #0
   11980:	bl	110f0 <dcgettext@plt>
   11984:	ldr	r1, [r4]
   11988:	bl	11048 <fputs_unlocked@plt>
   1198c:	mov	r2, #5
   11990:	movw	r1, #26628	; 0x6804
   11994:	movt	r1, #1
   11998:	mov	r0, #0
   1199c:	bl	110f0 <dcgettext@plt>
   119a0:	ldr	r1, [r4]
   119a4:	bl	11048 <fputs_unlocked@plt>
   119a8:	movw	r0, #24748	; 0x60ac
   119ac:	movt	r0, #1
   119b0:	ldr	r1, [r0]
   119b4:	ldr	r3, [r0, #4]
   119b8:	str	r1, [sp]
   119bc:	str	r3, [sp, #4]
   119c0:	ldrd	r2, [r0, #8]
   119c4:	strd	r2, [sp, #8]
   119c8:	ldrd	r2, [r0, #16]
   119cc:	strd	r2, [sp, #16]
   119d0:	ldrd	r2, [r0, #24]
   119d4:	strd	r2, [sp, #24]
   119d8:	ldrd	r2, [r0, #32]
   119dc:	strd	r2, [sp, #32]
   119e0:	ldrd	r2, [r0, #40]	; 0x28
   119e4:	strd	r2, [sp, #40]	; 0x28
   119e8:	ldrd	r2, [r0, #48]	; 0x30
   119ec:	strd	r2, [sp, #48]	; 0x30
   119f0:	cmp	r1, #0
   119f4:	moveq	r4, sp
   119f8:	beq	11a24 <__snprintf_chk@plt+0x6b8>
   119fc:	mov	r4, sp
   11a00:	movw	r6, #25040	; 0x61d0
   11a04:	movt	r6, #1
   11a08:	mov	r0, r6
   11a0c:	bl	11060 <strcmp@plt>
   11a10:	cmp	r0, #0
   11a14:	beq	11a24 <__snprintf_chk@plt+0x6b8>
   11a18:	ldr	r1, [r4, #8]!
   11a1c:	cmp	r1, #0
   11a20:	bne	11a08 <__snprintf_chk@plt+0x69c>
   11a24:	ldr	r4, [r4, #4]
   11a28:	cmp	r4, #0
   11a2c:	beq	11b88 <__snprintf_chk@plt+0x81c>
   11a30:	mov	r2, #5
   11a34:	movw	r1, #26956	; 0x694c
   11a38:	movt	r1, #1
   11a3c:	mov	r0, #0
   11a40:	bl	110f0 <dcgettext@plt>
   11a44:	movw	r3, #26980	; 0x6964
   11a48:	movt	r3, #1
   11a4c:	movw	r2, #27020	; 0x698c
   11a50:	movt	r2, #1
   11a54:	mov	r1, r0
   11a58:	mov	r0, #1
   11a5c:	bl	11288 <__printf_chk@plt>
   11a60:	mov	r1, #0
   11a64:	mov	r0, #5
   11a68:	bl	112e8 <setlocale@plt>
   11a6c:	cmp	r0, #0
   11a70:	beq	11a8c <__snprintf_chk@plt+0x720>
   11a74:	mov	r2, #3
   11a78:	movw	r1, #27036	; 0x699c
   11a7c:	movt	r1, #1
   11a80:	bl	11354 <strncmp@plt>
   11a84:	cmp	r0, #0
   11a88:	bne	11b08 <__snprintf_chk@plt+0x79c>
   11a8c:	mov	r2, #5
   11a90:	movw	r1, #27112	; 0x69e8
   11a94:	movt	r1, #1
   11a98:	mov	r0, #0
   11a9c:	bl	110f0 <dcgettext@plt>
   11aa0:	movw	r6, #25040	; 0x61d0
   11aa4:	movt	r6, #1
   11aa8:	mov	r3, r6
   11aac:	movw	r2, #26980	; 0x6964
   11ab0:	movt	r2, #1
   11ab4:	mov	r1, r0
   11ab8:	mov	r0, #1
   11abc:	bl	11288 <__printf_chk@plt>
   11ac0:	mov	r2, #5
   11ac4:	movw	r1, #27140	; 0x6a04
   11ac8:	movt	r1, #1
   11acc:	mov	r0, #0
   11ad0:	bl	110f0 <dcgettext@plt>
   11ad4:	mov	r1, r0
   11ad8:	movw	r2, #27468	; 0x6b4c
   11adc:	movt	r2, #1
   11ae0:	movw	r3, #25216	; 0x6280
   11ae4:	movt	r3, #1
   11ae8:	cmp	r4, r6
   11aec:	moveq	r3, r2
   11af0:	mov	r2, r4
   11af4:	mov	r0, #1
   11af8:	bl	11288 <__printf_chk@plt>
   11afc:	b	1186c <__snprintf_chk@plt+0x500>
   11b00:	movw	r4, #25040	; 0x61d0
   11b04:	movt	r4, #1
   11b08:	mov	r2, #5
   11b0c:	movw	r1, #27040	; 0x69a0
   11b10:	movt	r1, #1
   11b14:	mov	r0, #0
   11b18:	bl	110f0 <dcgettext@plt>
   11b1c:	movw	r3, #33588	; 0x8334
   11b20:	movt	r3, #2
   11b24:	ldr	r1, [r3]
   11b28:	bl	11048 <fputs_unlocked@plt>
   11b2c:	b	11a8c <__snprintf_chk@plt+0x720>
   11b30:	mov	r2, #5
   11b34:	movw	r1, #27112	; 0x69e8
   11b38:	movt	r1, #1
   11b3c:	mov	r0, #0
   11b40:	bl	110f0 <dcgettext@plt>
   11b44:	movw	r4, #25040	; 0x61d0
   11b48:	movt	r4, #1
   11b4c:	mov	r3, r4
   11b50:	movw	r2, #26980	; 0x6964
   11b54:	movt	r2, #1
   11b58:	mov	r1, r0
   11b5c:	mov	r0, #1
   11b60:	bl	11288 <__printf_chk@plt>
   11b64:	mov	r2, #5
   11b68:	movw	r1, #27140	; 0x6a04
   11b6c:	movt	r1, #1
   11b70:	mov	r0, #0
   11b74:	bl	110f0 <dcgettext@plt>
   11b78:	mov	r1, r0
   11b7c:	movw	r3, #27468	; 0x6b4c
   11b80:	movt	r3, #1
   11b84:	b	11af0 <__snprintf_chk@plt+0x784>
   11b88:	mov	r2, #5
   11b8c:	movw	r1, #26956	; 0x694c
   11b90:	movt	r1, #1
   11b94:	mov	r0, #0
   11b98:	bl	110f0 <dcgettext@plt>
   11b9c:	movw	r3, #26980	; 0x6964
   11ba0:	movt	r3, #1
   11ba4:	movw	r2, #27020	; 0x698c
   11ba8:	movt	r2, #1
   11bac:	mov	r1, r0
   11bb0:	mov	r0, #1
   11bb4:	bl	11288 <__printf_chk@plt>
   11bb8:	mov	r1, #0
   11bbc:	mov	r0, #5
   11bc0:	bl	112e8 <setlocale@plt>
   11bc4:	cmp	r0, #0
   11bc8:	beq	11b30 <__snprintf_chk@plt+0x7c4>
   11bcc:	mov	r2, #3
   11bd0:	movw	r1, #27036	; 0x699c
   11bd4:	movt	r1, #1
   11bd8:	bl	11354 <strncmp@plt>
   11bdc:	cmp	r0, #0
   11be0:	bne	11b00 <__snprintf_chk@plt+0x794>
   11be4:	mov	r2, #5
   11be8:	movw	r1, #27112	; 0x69e8
   11bec:	movt	r1, #1
   11bf0:	mov	r0, #0
   11bf4:	bl	110f0 <dcgettext@plt>
   11bf8:	movw	r4, #25040	; 0x61d0
   11bfc:	movt	r4, #1
   11c00:	mov	r3, r4
   11c04:	movw	r2, #26980	; 0x6964
   11c08:	movt	r2, #1
   11c0c:	mov	r1, r0
   11c10:	mov	r0, #1
   11c14:	bl	11288 <__printf_chk@plt>
   11c18:	mov	r2, #5
   11c1c:	movw	r1, #27140	; 0x6a04
   11c20:	movt	r1, #1
   11c24:	mov	r0, #0
   11c28:	bl	110f0 <dcgettext@plt>
   11c2c:	mov	r1, r0
   11c30:	movw	r3, #27468	; 0x6b4c
   11c34:	movt	r3, #1
   11c38:	b	11af0 <__snprintf_chk@plt+0x784>
   11c3c:	strd	r4, [sp, #-12]!
   11c40:	str	lr, [sp, #8]
   11c44:	sub	sp, sp, #20
   11c48:	mov	r4, r0
   11c4c:	movw	r3, #9644	; 0x25ac
   11c50:	movt	r3, #1
   11c54:	add	r2, sp, #8
   11c58:	add	r1, sp, #4
   11c5c:	bl	1592c <__snprintf_chk@plt+0x45c0>
   11c60:	cmp	r0, #0
   11c64:	bne	11c78 <__snprintf_chk@plt+0x90c>
   11c68:	bl	1124c <__errno_location@plt>
   11c6c:	ldr	r3, [r0]
   11c70:	cmp	r3, #34	; 0x22
   11c74:	bne	11d18 <__snprintf_chk@plt+0x9ac>
   11c78:	vldr	d7, [sp, #8]
   11c7c:	vcmpe.f64	d7, #0.0
   11c80:	vmrs	APSR_nzcv, fpscr
   11c84:	blt	11d18 <__snprintf_chk@plt+0x9ac>
   11c88:	ldr	r2, [sp, #4]
   11c8c:	ldrb	r3, [r2]
   11c90:	cmp	r3, #0
   11c94:	beq	11ce4 <__snprintf_chk@plt+0x978>
   11c98:	ldrb	r2, [r2, #1]
   11c9c:	cmp	r2, #0
   11ca0:	bne	11d18 <__snprintf_chk@plt+0x9ac>
   11ca4:	cmp	r3, #104	; 0x68
   11ca8:	beq	11cec <__snprintf_chk@plt+0x980>
   11cac:	bhi	11d04 <__snprintf_chk@plt+0x998>
   11cb0:	cmp	r3, #0
   11cb4:	beq	11cf4 <__snprintf_chk@plt+0x988>
   11cb8:	cmp	r3, #100	; 0x64
   11cbc:	movweq	r3, #20864	; 0x5180
   11cc0:	movteq	r3, #1
   11cc4:	bne	11d18 <__snprintf_chk@plt+0x9ac>
   11cc8:	vmov	s13, r3
   11ccc:	vcvt.f64.s32	d0, s13
   11cd0:	vmul.f64	d0, d0, d7
   11cd4:	add	sp, sp, #20
   11cd8:	ldrd	r4, [sp]
   11cdc:	add	sp, sp, #8
   11ce0:	pop	{pc}		; (ldr pc, [sp], #4)
   11ce4:	mov	r3, #1
   11ce8:	b	11cc8 <__snprintf_chk@plt+0x95c>
   11cec:	mov	r3, #3600	; 0xe10
   11cf0:	b	11cc8 <__snprintf_chk@plt+0x95c>
   11cf4:	mov	r3, #1
   11cf8:	b	11cc8 <__snprintf_chk@plt+0x95c>
   11cfc:	mov	r3, #1
   11d00:	b	11cc8 <__snprintf_chk@plt+0x95c>
   11d04:	cmp	r3, #109	; 0x6d
   11d08:	moveq	r3, #60	; 0x3c
   11d0c:	beq	11cc8 <__snprintf_chk@plt+0x95c>
   11d10:	cmp	r3, #115	; 0x73
   11d14:	beq	11cfc <__snprintf_chk@plt+0x990>
   11d18:	mov	r2, #5
   11d1c:	movw	r1, #27192	; 0x6a38
   11d20:	movt	r1, #1
   11d24:	mov	r0, #0
   11d28:	bl	110f0 <dcgettext@plt>
   11d2c:	mov	r5, r0
   11d30:	mov	r0, r4
   11d34:	bl	14bb4 <__snprintf_chk@plt+0x3848>
   11d38:	mov	r3, r0
   11d3c:	mov	r2, r5
   11d40:	mov	r1, #0
   11d44:	mov	r0, r1
   11d48:	bl	111a4 <error@plt>
   11d4c:	mov	r0, #125	; 0x7d
   11d50:	bl	11820 <__snprintf_chk@plt+0x4b4>
   11d54:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11d58:	strd	r6, [sp, #8]
   11d5c:	str	r8, [sp, #16]
   11d60:	str	lr, [sp, #20]
   11d64:	vpush	{d8}
   11d68:	sub	sp, sp, #296	; 0x128
   11d6c:	mov	r6, r0
   11d70:	mov	r5, r1
   11d74:	ldr	r0, [r1]
   11d78:	bl	128b8 <__snprintf_chk@plt+0x154c>
   11d7c:	movw	r1, #25216	; 0x6280
   11d80:	movt	r1, #1
   11d84:	mov	r0, #6
   11d88:	bl	112e8 <setlocale@plt>
   11d8c:	movw	r4, #27024	; 0x6990
   11d90:	movt	r4, #1
   11d94:	movw	r1, #27220	; 0x6a54
   11d98:	movt	r1, #1
   11d9c:	mov	r0, r4
   11da0:	bl	1133c <bindtextdomain@plt>
   11da4:	mov	r0, r4
   11da8:	bl	11120 <textdomain@plt>
   11dac:	movw	r3, #33076	; 0x8134
   11db0:	movt	r3, #2
   11db4:	mov	r2, #125	; 0x7d
   11db8:	str	r2, [r3]
   11dbc:	movw	r0, #9824	; 0x2660
   11dc0:	movt	r0, #1
   11dc4:	bl	16088 <__snprintf_chk@plt+0x4d1c>
   11dc8:	ldr	r7, [pc, #1564]	; 123ec <__snprintf_chk@plt+0x1080>
   11dcc:	movw	r4, #27260	; 0x6a7c
   11dd0:	movt	r4, #1
   11dd4:	movw	r8, #33592	; 0x8338
   11dd8:	movt	r8, #2
   11ddc:	mov	r3, #0
   11de0:	str	r3, [sp]
   11de4:	mov	r3, r7
   11de8:	mov	r2, r4
   11dec:	mov	r1, r5
   11df0:	mov	r0, r6
   11df4:	bl	111f8 <getopt_long@plt>
   11df8:	cmn	r0, #1
   11dfc:	beq	11f14 <__snprintf_chk@plt+0xba8>
   11e00:	cmp	r0, #115	; 0x73
   11e04:	beq	11e74 <__snprintf_chk@plt+0xb08>
   11e08:	ble	11e3c <__snprintf_chk@plt+0xad0>
   11e0c:	cmp	r0, #256	; 0x100
   11e10:	beq	11e9c <__snprintf_chk@plt+0xb30>
   11e14:	movw	r3, #257	; 0x101
   11e18:	cmp	r0, r3
   11e1c:	beq	11eb0 <__snprintf_chk@plt+0xb44>
   11e20:	cmp	r0, #118	; 0x76
   11e24:	bne	11e54 <__snprintf_chk@plt+0xae8>
   11e28:	movw	r3, #33600	; 0x8340
   11e2c:	movt	r3, #2
   11e30:	mov	r2, #1
   11e34:	strb	r2, [r3, #16]
   11e38:	b	11ddc <__snprintf_chk@plt+0xa70>
   11e3c:	cmn	r0, #2
   11e40:	beq	11ec4 <__snprintf_chk@plt+0xb58>
   11e44:	cmp	r0, #107	; 0x6b
   11e48:	beq	11e5c <__snprintf_chk@plt+0xaf0>
   11e4c:	cmn	r0, #3
   11e50:	beq	11ecc <__snprintf_chk@plt+0xb60>
   11e54:	mov	r0, #125	; 0x7d
   11e58:	bl	11820 <__snprintf_chk@plt+0x4b4>
   11e5c:	ldr	r0, [r8]
   11e60:	bl	11c3c <__snprintf_chk@plt+0x8d0>
   11e64:	movw	r3, #33600	; 0x8340
   11e68:	movt	r3, #2
   11e6c:	vstr	d0, [r3, #8]
   11e70:	b	11ddc <__snprintf_chk@plt+0xa70>
   11e74:	add	r1, sp, #276	; 0x114
   11e78:	ldr	r0, [r8]
   11e7c:	bl	123f0 <__snprintf_chk@plt+0x1084>
   11e80:	movw	r3, #33068	; 0x812c
   11e84:	movt	r3, #2
   11e88:	str	r0, [r3]
   11e8c:	cmn	r0, #1
   11e90:	bne	11ddc <__snprintf_chk@plt+0xa70>
   11e94:	mov	r0, #125	; 0x7d
   11e98:	bl	11820 <__snprintf_chk@plt+0x4b4>
   11e9c:	movw	r3, #33600	; 0x8340
   11ea0:	movt	r3, #2
   11ea4:	mov	r2, #1
   11ea8:	strb	r2, [r3, #24]
   11eac:	b	11ddc <__snprintf_chk@plt+0xa70>
   11eb0:	movw	r3, #33600	; 0x8340
   11eb4:	movt	r3, #2
   11eb8:	mov	r2, #1
   11ebc:	strb	r2, [r3, #25]
   11ec0:	b	11ddc <__snprintf_chk@plt+0xa70>
   11ec4:	mov	r0, #0
   11ec8:	bl	11820 <__snprintf_chk@plt+0x4b4>
   11ecc:	movw	r3, #33072	; 0x8130
   11ed0:	movt	r3, #2
   11ed4:	movw	r0, #33588	; 0x8334
   11ed8:	movt	r0, #2
   11edc:	mov	r4, #0
   11ee0:	str	r4, [sp, #4]
   11ee4:	movw	r2, #27244	; 0x6a6c
   11ee8:	movt	r2, #1
   11eec:	str	r2, [sp]
   11ef0:	ldr	r3, [r3]
   11ef4:	movw	r2, #27020	; 0x698c
   11ef8:	movt	r2, #1
   11efc:	movw	r1, #25040	; 0x61d0
   11f00:	movt	r1, #1
   11f04:	ldr	r0, [r0]
   11f08:	bl	1537c <__snprintf_chk@plt+0x4010>
   11f0c:	mov	r0, r4
   11f10:	bl	1121c <exit@plt>
   11f14:	movw	r3, #33576	; 0x8328
   11f18:	movt	r3, #2
   11f1c:	ldr	r3, [r3]
   11f20:	sub	r6, r6, r3
   11f24:	cmp	r6, #1
   11f28:	ble	120f0 <__snprintf_chk@plt+0xd84>
   11f2c:	movw	r4, #33576	; 0x8328
   11f30:	movt	r4, #2
   11f34:	add	r2, r3, #1
   11f38:	str	r2, [r4]
   11f3c:	ldr	r0, [r5, r3, lsl #2]
   11f40:	bl	11c3c <__snprintf_chk@plt+0x8d0>
   11f44:	vmov.f64	d8, d0
   11f48:	ldr	r4, [r4]
   11f4c:	add	r6, r5, r4, lsl #2
   11f50:	movw	r3, #33600	; 0x8340
   11f54:	movt	r3, #2
   11f58:	ldr	r2, [r5, r4, lsl #2]
   11f5c:	str	r2, [r3, #20]
   11f60:	ldrb	r3, [r3, #24]
   11f64:	cmp	r3, #0
   11f68:	beq	120f8 <__snprintf_chk@plt+0xd8c>
   11f6c:	movw	r3, #33068	; 0x812c
   11f70:	movt	r3, #2
   11f74:	ldr	r8, [r3]
   11f78:	add	r0, sp, #140	; 0x8c
   11f7c:	bl	112f4 <sigemptyset@plt>
   11f80:	movw	r3, #5608	; 0x15e8
   11f84:	movt	r3, #1
   11f88:	str	r3, [sp, #136]	; 0x88
   11f8c:	mov	r7, #268435456	; 0x10000000
   11f90:	str	r7, [sp, #268]	; 0x10c
   11f94:	mov	r2, #0
   11f98:	add	r1, sp, #136	; 0x88
   11f9c:	mov	r0, #14
   11fa0:	bl	11144 <sigaction@plt>
   11fa4:	mov	r2, #0
   11fa8:	add	r1, sp, #136	; 0x88
   11fac:	mov	r0, #2
   11fb0:	bl	11144 <sigaction@plt>
   11fb4:	mov	r2, #0
   11fb8:	add	r1, sp, #136	; 0x88
   11fbc:	mov	r0, #3
   11fc0:	bl	11144 <sigaction@plt>
   11fc4:	mov	r2, #0
   11fc8:	add	r1, sp, #136	; 0x88
   11fcc:	mov	r0, #1
   11fd0:	bl	11144 <sigaction@plt>
   11fd4:	mov	r2, #0
   11fd8:	add	r1, sp, #136	; 0x88
   11fdc:	mov	r0, #15
   11fe0:	bl	11144 <sigaction@plt>
   11fe4:	mov	r2, #0
   11fe8:	add	r1, sp, #136	; 0x88
   11fec:	mov	r0, r8
   11ff0:	bl	11144 <sigaction@plt>
   11ff4:	mov	r1, #1
   11ff8:	mov	r0, #21
   11ffc:	bl	110cc <signal@plt>
   12000:	mov	r1, #1
   12004:	mov	r0, #22
   12008:	bl	110cc <signal@plt>
   1200c:	add	r0, sp, #140	; 0x8c
   12010:	bl	112f4 <sigemptyset@plt>
   12014:	movw	r3, #5224	; 0x1468
   12018:	movt	r3, #1
   1201c:	str	r3, [sp, #136]	; 0x88
   12020:	str	r7, [sp, #268]	; 0x10c
   12024:	mov	r2, #0
   12028:	add	r1, sp, #136	; 0x88
   1202c:	mov	r0, #17
   12030:	bl	11144 <sigaction@plt>
   12034:	mov	r0, #17
   12038:	bl	117a4 <__snprintf_chk@plt+0x438>
   1203c:	bl	11300 <fork@plt>
   12040:	movw	r3, #33600	; 0x8340
   12044:	movt	r3, #2
   12048:	str	r0, [r3, #4]
   1204c:	cmn	r0, #1
   12050:	beq	12108 <__snprintf_chk@plt+0xd9c>
   12054:	cmp	r0, #0
   12058:	bne	1213c <__snprintf_chk@plt+0xdd0>
   1205c:	mov	r1, #0
   12060:	mov	r0, #21
   12064:	bl	110cc <signal@plt>
   12068:	mov	r1, #0
   1206c:	mov	r0, #22
   12070:	bl	110cc <signal@plt>
   12074:	mov	r1, r6
   12078:	ldr	r0, [r5, r4, lsl #2]
   1207c:	bl	110b4 <execvp@plt>
   12080:	bl	1124c <__errno_location@plt>
   12084:	ldr	r5, [r0]
   12088:	cmp	r5, #2
   1208c:	moveq	r4, #127	; 0x7f
   12090:	movne	r4, #126	; 0x7e
   12094:	mov	r2, #5
   12098:	movw	r1, #27292	; 0x6a9c
   1209c:	movt	r1, #1
   120a0:	mov	r0, #0
   120a4:	bl	110f0 <dcgettext@plt>
   120a8:	mov	r6, r0
   120ac:	movw	r3, #33600	; 0x8340
   120b0:	movt	r3, #2
   120b4:	ldr	r0, [r3, #20]
   120b8:	bl	14bb4 <__snprintf_chk@plt+0x3848>
   120bc:	mov	r3, r0
   120c0:	mov	r2, r6
   120c4:	mov	r1, r5
   120c8:	mov	r0, #0
   120cc:	bl	111a4 <error@plt>
   120d0:	mov	r0, r4
   120d4:	add	sp, sp, #296	; 0x128
   120d8:	vpop	{d8}
   120dc:	ldrd	r4, [sp]
   120e0:	ldrd	r6, [sp, #8]
   120e4:	ldr	r8, [sp, #16]
   120e8:	add	sp, sp, #20
   120ec:	pop	{pc}		; (ldr pc, [sp], #4)
   120f0:	mov	r0, #125	; 0x7d
   120f4:	bl	11820 <__snprintf_chk@plt+0x4b4>
   120f8:	mov	r1, #0
   120fc:	mov	r0, r1
   12100:	bl	11330 <setpgid@plt>
   12104:	b	11f6c <__snprintf_chk@plt+0xc00>
   12108:	bl	1124c <__errno_location@plt>
   1210c:	ldr	r4, [r0]
   12110:	mov	r2, #5
   12114:	movw	r1, #27268	; 0x6a84
   12118:	movt	r1, #1
   1211c:	mov	r0, #0
   12120:	bl	110f0 <dcgettext@plt>
   12124:	mov	r2, r0
   12128:	mov	r1, r4
   1212c:	mov	r0, #0
   12130:	bl	111a4 <error@plt>
   12134:	mov	r4, #125	; 0x7d
   12138:	b	120d0 <__snprintf_chk@plt+0xd64>
   1213c:	mov	r0, #14
   12140:	bl	117a4 <__snprintf_chk@plt+0x438>
   12144:	mov	r0, #1
   12148:	vmov.f64	d0, d8
   1214c:	bl	114b0 <__snprintf_chk@plt+0x144>
   12150:	movw	r3, #33068	; 0x812c
   12154:	movt	r3, #2
   12158:	ldr	r4, [r3]
   1215c:	add	r0, sp, #136	; 0x88
   12160:	bl	112f4 <sigemptyset@plt>
   12164:	mov	r1, #14
   12168:	add	r0, sp, #136	; 0x88
   1216c:	bl	111c8 <sigaddset@plt>
   12170:	mov	r1, #2
   12174:	add	r0, sp, #136	; 0x88
   12178:	bl	111c8 <sigaddset@plt>
   1217c:	mov	r1, #3
   12180:	add	r0, sp, #136	; 0x88
   12184:	bl	111c8 <sigaddset@plt>
   12188:	mov	r1, #1
   1218c:	add	r0, sp, #136	; 0x88
   12190:	bl	111c8 <sigaddset@plt>
   12194:	mov	r1, #15
   12198:	add	r0, sp, #136	; 0x88
   1219c:	bl	111c8 <sigaddset@plt>
   121a0:	mov	r1, r4
   121a4:	add	r0, sp, #136	; 0x88
   121a8:	bl	111c8 <sigaddset@plt>
   121ac:	mov	r1, #17
   121b0:	add	r0, sp, #136	; 0x88
   121b4:	bl	111c8 <sigaddset@plt>
   121b8:	add	r2, sp, #8
   121bc:	add	r1, sp, #136	; 0x88
   121c0:	mov	r0, #0
   121c4:	bl	11084 <sigprocmask@plt>
   121c8:	cmp	r0, #0
   121cc:	bne	121e0 <__snprintf_chk@plt+0xe74>
   121d0:	movw	r4, #33600	; 0x8340
   121d4:	movt	r4, #2
   121d8:	mov	r5, #1
   121dc:	b	12218 <__snprintf_chk@plt+0xeac>
   121e0:	bl	1124c <__errno_location@plt>
   121e4:	ldr	r4, [r0]
   121e8:	mov	r2, #5
   121ec:	movw	r1, #25016	; 0x61b8
   121f0:	movt	r1, #1
   121f4:	mov	r0, #0
   121f8:	bl	110f0 <dcgettext@plt>
   121fc:	mov	r2, r0
   12200:	mov	r1, r4
   12204:	mov	r0, #0
   12208:	bl	111a4 <error@plt>
   1220c:	b	121d0 <__snprintf_chk@plt+0xe64>
   12210:	add	r0, sp, #8
   12214:	bl	1127c <sigsuspend@plt>
   12218:	mov	r2, r5
   1221c:	add	r1, sp, #136	; 0x88
   12220:	ldr	r0, [r4, #4]
   12224:	bl	11168 <waitpid@plt>
   12228:	cmp	r0, #0
   1222c:	beq	12210 <__snprintf_chk@plt+0xea4>
   12230:	blt	122e0 <__snprintf_chk@plt+0xf74>
   12234:	ldr	r3, [sp, #136]	; 0x88
   12238:	ands	r4, r3, #127	; 0x7f
   1223c:	ubfxeq	r3, r3, #8, #8
   12240:	streq	r3, [sp, #136]	; 0x88
   12244:	beq	122ac <__snprintf_chk@plt+0xf40>
   12248:	and	r2, r3, #127	; 0x7f
   1224c:	add	r2, r2, #1
   12250:	sbfx	r2, r2, #1, #7
   12254:	sxtb	r2, r2
   12258:	cmp	r2, #0
   1225c:	ble	123b8 <__snprintf_chk@plt+0x104c>
   12260:	tst	r3, #128	; 0x80
   12264:	bne	12318 <__snprintf_chk@plt+0xfac>
   12268:	movw	r3, #33600	; 0x8340
   1226c:	movt	r3, #2
   12270:	ldr	r3, [r3]
   12274:	cmp	r3, #0
   12278:	beq	12340 <__snprintf_chk@plt+0xfd4>
   1227c:	movw	r3, #33600	; 0x8340
   12280:	movt	r3, #2
   12284:	ldr	r2, [r3]
   12288:	cmp	r4, #9
   1228c:	movne	r3, #0
   12290:	moveq	r3, #1
   12294:	cmp	r2, #0
   12298:	moveq	r3, #0
   1229c:	cmp	r3, #0
   122a0:	bne	123a4 <__snprintf_chk@plt+0x1038>
   122a4:	add	r4, r4, #128	; 0x80
   122a8:	str	r4, [sp, #136]	; 0x88
   122ac:	movw	r3, #33600	; 0x8340
   122b0:	movt	r3, #2
   122b4:	ldr	r3, [r3]
   122b8:	cmp	r3, #0
   122bc:	beq	122d8 <__snprintf_chk@plt+0xf6c>
   122c0:	movw	r3, #33600	; 0x8340
   122c4:	movt	r3, #2
   122c8:	ldrb	r3, [r3, #25]
   122cc:	cmp	r3, #0
   122d0:	moveq	r3, #124	; 0x7c
   122d4:	streq	r3, [sp, #136]	; 0x88
   122d8:	ldr	r4, [sp, #136]	; 0x88
   122dc:	b	120d0 <__snprintf_chk@plt+0xd64>
   122e0:	bl	1124c <__errno_location@plt>
   122e4:	ldr	r4, [r0]
   122e8:	mov	r2, #5
   122ec:	movw	r1, #27320	; 0x6ab8
   122f0:	movt	r1, #1
   122f4:	mov	r0, #0
   122f8:	bl	110f0 <dcgettext@plt>
   122fc:	mov	r2, r0
   12300:	mov	r1, r4
   12304:	mov	r0, #0
   12308:	bl	111a4 <error@plt>
   1230c:	mov	r3, #125	; 0x7d
   12310:	str	r3, [sp, #136]	; 0x88
   12314:	b	122ac <__snprintf_chk@plt+0xf40>
   12318:	mov	r2, #5
   1231c:	movw	r1, #27348	; 0x6ad4
   12320:	movt	r1, #1
   12324:	mov	r0, #0
   12328:	bl	110f0 <dcgettext@plt>
   1232c:	mov	r2, r0
   12330:	mov	r1, #0
   12334:	mov	r0, r1
   12338:	bl	111a4 <error@plt>
   1233c:	b	12268 <__snprintf_chk@plt+0xefc>
   12340:	mov	r1, #0
   12344:	mov	r0, #4
   12348:	bl	11294 <prctl@plt>
   1234c:	cmp	r0, #0
   12350:	bne	12374 <__snprintf_chk@plt+0x1008>
   12354:	mov	r1, #0
   12358:	mov	r0, r4
   1235c:	bl	110cc <signal@plt>
   12360:	mov	r0, r4
   12364:	bl	117a4 <__snprintf_chk@plt+0x438>
   12368:	mov	r0, r4
   1236c:	bl	11054 <raise@plt>
   12370:	b	1227c <__snprintf_chk@plt+0xf10>
   12374:	bl	1124c <__errno_location@plt>
   12378:	ldr	r5, [r0]
   1237c:	mov	r2, #5
   12380:	movw	r1, #27384	; 0x6af8
   12384:	movt	r1, #1
   12388:	mov	r0, #0
   1238c:	bl	110f0 <dcgettext@plt>
   12390:	mov	r2, r0
   12394:	mov	r1, r5
   12398:	mov	r0, #0
   1239c:	bl	111a4 <error@plt>
   123a0:	b	1227c <__snprintf_chk@plt+0xf10>
   123a4:	movw	r3, #33600	; 0x8340
   123a8:	movt	r3, #2
   123ac:	mov	r2, #1
   123b0:	strb	r2, [r3, #25]
   123b4:	b	122a4 <__snprintf_chk@plt+0xf38>
   123b8:	mov	r2, #5
   123bc:	movw	r1, #27424	; 0x6b20
   123c0:	movt	r1, #1
   123c4:	mov	r0, #0
   123c8:	bl	110f0 <dcgettext@plt>
   123cc:	ldr	r3, [sp, #136]	; 0x88
   123d0:	mov	r2, r0
   123d4:	mov	r1, #0
   123d8:	mov	r0, r1
   123dc:	bl	111a4 <error@plt>
   123e0:	mov	r3, #1
   123e4:	str	r3, [sp, #136]	; 0x88
   123e8:	b	122ac <__snprintf_chk@plt+0xf40>
   123ec:	andeq	r6, r1, r4, ror #1
   123f0:	strd	r4, [sp, #-28]!	; 0xffffffe4
   123f4:	strd	r6, [sp, #8]
   123f8:	strd	r8, [sp, #16]
   123fc:	str	lr, [sp, #24]
   12400:	sub	sp, sp, #12
   12404:	mov	r7, r0
   12408:	mov	r8, r1
   1240c:	ldrb	r3, [r0]
   12410:	sub	r3, r3, #48	; 0x30
   12414:	cmp	r3, #9
   12418:	bhi	12488 <__snprintf_chk@plt+0x111c>
   1241c:	bl	1124c <__errno_location@plt>
   12420:	mov	r4, r0
   12424:	mov	r3, #0
   12428:	str	r3, [r0]
   1242c:	mov	r2, #10
   12430:	mov	r1, sp
   12434:	mov	r0, r7
   12438:	bl	1106c <strtol@plt>
   1243c:	ldr	r3, [sp]
   12440:	cmp	r3, r7
   12444:	beq	125a0 <__snprintf_chk@plt+0x1234>
   12448:	ldrb	r3, [r3]
   1244c:	cmp	r3, #0
   12450:	bne	125a0 <__snprintf_chk@plt+0x1234>
   12454:	ldr	r3, [r4]
   12458:	cmp	r3, #0
   1245c:	bne	125a0 <__snprintf_chk@plt+0x1234>
   12460:	cmn	r0, #1
   12464:	mvneq	r3, #0
   12468:	streq	r3, [sp, #4]
   1246c:	beq	124fc <__snprintf_chk@plt+0x1190>
   12470:	cmp	r0, #254	; 0xfe
   12474:	movgt	r3, #255	; 0xff
   12478:	movle	r3, #127	; 0x7f
   1247c:	and	r0, r0, r3
   12480:	str	r0, [sp, #4]
   12484:	b	124fc <__snprintf_chk@plt+0x1190>
   12488:	bl	158c0 <__snprintf_chk@plt+0x4554>
   1248c:	mov	r9, r0
   12490:	ldrb	r4, [r0]
   12494:	cmp	r4, #0
   12498:	beq	124cc <__snprintf_chk@plt+0x1160>
   1249c:	mov	r5, r0
   124a0:	movw	r6, #27632	; 0x6bf0
   124a4:	movt	r6, #1
   124a8:	mov	r1, r4
   124ac:	mov	r0, r6
   124b0:	bl	11240 <strchr@plt>
   124b4:	cmp	r0, #0
   124b8:	subne	r4, r4, #32
   124bc:	strbne	r4, [r5]
   124c0:	ldrb	r4, [r5, #1]!
   124c4:	cmp	r4, #0
   124c8:	bne	124a8 <__snprintf_chk@plt+0x113c>
   124cc:	add	r1, sp, #4
   124d0:	mov	r0, r9
   124d4:	bl	14bd4 <__snprintf_chk@plt+0x3868>
   124d8:	cmp	r0, #0
   124dc:	beq	124f4 <__snprintf_chk@plt+0x1188>
   124e0:	ldrb	r3, [r9]
   124e4:	cmp	r3, #83	; 0x53
   124e8:	beq	12534 <__snprintf_chk@plt+0x11c8>
   124ec:	mvn	r3, #0
   124f0:	str	r3, [sp, #4]
   124f4:	mov	r0, r9
   124f8:	bl	12858 <__snprintf_chk@plt+0x14ec>
   124fc:	ldr	r0, [sp, #4]
   12500:	cmp	r0, #0
   12504:	blt	12564 <__snprintf_chk@plt+0x11f8>
   12508:	mov	r1, r8
   1250c:	bl	14d6c <__snprintf_chk@plt+0x3a00>
   12510:	cmp	r0, #0
   12514:	ldreq	r0, [sp, #4]
   12518:	bne	12564 <__snprintf_chk@plt+0x11f8>
   1251c:	add	sp, sp, #12
   12520:	ldrd	r4, [sp]
   12524:	ldrd	r6, [sp, #8]
   12528:	ldrd	r8, [sp, #16]
   1252c:	add	sp, sp, #24
   12530:	pop	{pc}		; (ldr pc, [sp], #4)
   12534:	ldrb	r3, [r9, #1]
   12538:	cmp	r3, #73	; 0x49
   1253c:	bne	124ec <__snprintf_chk@plt+0x1180>
   12540:	ldrb	r3, [r9, #2]
   12544:	cmp	r3, #71	; 0x47
   12548:	bne	124ec <__snprintf_chk@plt+0x1180>
   1254c:	add	r1, sp, #4
   12550:	add	r0, r9, #3
   12554:	bl	14bd4 <__snprintf_chk@plt+0x3868>
   12558:	cmp	r0, #0
   1255c:	beq	124f4 <__snprintf_chk@plt+0x1188>
   12560:	b	124ec <__snprintf_chk@plt+0x1180>
   12564:	mov	r2, #5
   12568:	movw	r1, #27660	; 0x6c0c
   1256c:	movt	r1, #1
   12570:	mov	r0, #0
   12574:	bl	110f0 <dcgettext@plt>
   12578:	mov	r4, r0
   1257c:	mov	r0, r7
   12580:	bl	14bb4 <__snprintf_chk@plt+0x3848>
   12584:	mov	r3, r0
   12588:	mov	r2, r4
   1258c:	mov	r1, #0
   12590:	mov	r0, r1
   12594:	bl	111a4 <error@plt>
   12598:	mvn	r0, #0
   1259c:	b	1251c <__snprintf_chk@plt+0x11b0>
   125a0:	mvn	r3, #0
   125a4:	str	r3, [sp, #4]
   125a8:	b	124fc <__snprintf_chk@plt+0x1190>
   125ac:	strd	r4, [sp, #-20]!	; 0xffffffec
   125b0:	strd	r6, [sp, #8]
   125b4:	str	lr, [sp, #16]
   125b8:	vpush	{d8}
   125bc:	sub	sp, sp, #12
   125c0:	mov	r5, r0
   125c4:	mov	r4, r1
   125c8:	add	r1, sp, #4
   125cc:	bl	112a0 <strtod@plt>
   125d0:	vmov.f64	d8, d0
   125d4:	ldr	r3, [sp, #4]
   125d8:	ldrb	r3, [r3]
   125dc:	cmp	r3, #0
   125e0:	bne	1260c <__snprintf_chk@plt+0x12a0>
   125e4:	cmp	r4, #0
   125e8:	ldrne	r3, [sp, #4]
   125ec:	strne	r3, [r4]
   125f0:	vmov.f64	d0, d8
   125f4:	add	sp, sp, #12
   125f8:	vpop	{d8}
   125fc:	ldrd	r4, [sp]
   12600:	ldrd	r6, [sp, #8]
   12604:	add	sp, sp, #16
   12608:	pop	{pc}		; (ldr pc, [sp], #4)
   1260c:	bl	1124c <__errno_location@plt>
   12610:	mov	r6, r0
   12614:	ldr	r7, [r0]
   12618:	mov	r1, sp
   1261c:	mov	r0, r5
   12620:	bl	15b00 <__snprintf_chk@plt+0x4794>
   12624:	ldr	r3, [sp]
   12628:	ldr	r2, [sp, #4]
   1262c:	cmp	r2, r3
   12630:	strcc	r3, [sp, #4]
   12634:	vmovcc.f64	d8, d0
   12638:	strcs	r7, [r6]
   1263c:	b	125e4 <__snprintf_chk@plt+0x1278>
   12640:	movw	r3, #33628	; 0x835c
   12644:	movt	r3, #2
   12648:	str	r0, [r3]
   1264c:	bx	lr
   12650:	movw	r3, #33628	; 0x835c
   12654:	movt	r3, #2
   12658:	strb	r0, [r3, #4]
   1265c:	bx	lr
   12660:	strd	r4, [sp, #-16]!
   12664:	str	r6, [sp, #8]
   12668:	str	lr, [sp, #12]
   1266c:	sub	sp, sp, #8
   12670:	movw	r3, #33588	; 0x8334
   12674:	movt	r3, #2
   12678:	ldr	r0, [r3]
   1267c:	bl	15ba0 <__snprintf_chk@plt+0x4834>
   12680:	cmp	r0, #0
   12684:	beq	126ac <__snprintf_chk@plt+0x1340>
   12688:	movw	r3, #33628	; 0x835c
   1268c:	movt	r3, #2
   12690:	ldrb	r3, [r3, #4]
   12694:	cmp	r3, #0
   12698:	beq	126d8 <__snprintf_chk@plt+0x136c>
   1269c:	bl	1124c <__errno_location@plt>
   126a0:	ldr	r3, [r0]
   126a4:	cmp	r3, #32
   126a8:	bne	126d8 <__snprintf_chk@plt+0x136c>
   126ac:	movw	r3, #33584	; 0x8330
   126b0:	movt	r3, #2
   126b4:	ldr	r0, [r3]
   126b8:	bl	15ba0 <__snprintf_chk@plt+0x4834>
   126bc:	cmp	r0, #0
   126c0:	bne	12760 <__snprintf_chk@plt+0x13f4>
   126c4:	add	sp, sp, #8
   126c8:	ldrd	r4, [sp]
   126cc:	ldr	r6, [sp, #8]
   126d0:	add	sp, sp, #12
   126d4:	pop	{pc}		; (ldr pc, [sp], #4)
   126d8:	mov	r2, #5
   126dc:	movw	r1, #27696	; 0x6c30
   126e0:	movt	r1, #1
   126e4:	mov	r0, #0
   126e8:	bl	110f0 <dcgettext@plt>
   126ec:	mov	r4, r0
   126f0:	movw	r3, #33628	; 0x835c
   126f4:	movt	r3, #2
   126f8:	ldr	r5, [r3]
   126fc:	cmp	r5, #0
   12700:	beq	12740 <__snprintf_chk@plt+0x13d4>
   12704:	bl	1124c <__errno_location@plt>
   12708:	ldr	r6, [r0]
   1270c:	mov	r0, r5
   12710:	bl	149b0 <__snprintf_chk@plt+0x3644>
   12714:	str	r4, [sp]
   12718:	mov	r3, r0
   1271c:	movw	r2, #27708	; 0x6c3c
   12720:	movt	r2, #1
   12724:	mov	r1, r6
   12728:	mov	r0, #0
   1272c:	bl	111a4 <error@plt>
   12730:	movw	r3, #33076	; 0x8134
   12734:	movt	r3, #2
   12738:	ldr	r0, [r3]
   1273c:	bl	1109c <_exit@plt>
   12740:	bl	1124c <__errno_location@plt>
   12744:	mov	r3, r4
   12748:	movw	r2, #27712	; 0x6c40
   1274c:	movt	r2, #1
   12750:	ldr	r1, [r0]
   12754:	mov	r0, #0
   12758:	bl	111a4 <error@plt>
   1275c:	b	12730 <__snprintf_chk@plt+0x13c4>
   12760:	movw	r3, #33076	; 0x8134
   12764:	movt	r3, #2
   12768:	ldr	r0, [r3]
   1276c:	bl	1109c <_exit@plt>
   12770:	vldr	d7, [pc, #200]	; 12840 <__snprintf_chk@plt+0x14d4>
   12774:	vcmpe.f64	d0, d7
   12778:	vmrs	APSR_nzcv, fpscr
   1277c:	ble	127a8 <__snprintf_chk@plt+0x143c>
   12780:	vldr	d7, [pc, #192]	; 12848 <__snprintf_chk@plt+0x14dc>
   12784:	vcmpe.f64	d0, d7
   12788:	vmrs	APSR_nzcv, fpscr
   1278c:	bmi	127bc <__snprintf_chk@plt+0x1450>
   12790:	mvn	r3, #-2147483648	; 0x80000000
   12794:	str	r3, [r0]
   12798:	movw	r3, #51711	; 0xc9ff
   1279c:	movt	r3, #15258	; 0x3b9a
   127a0:	str	r3, [r0, #4]
   127a4:	bx	lr
   127a8:	mov	r3, #-2147483648	; 0x80000000
   127ac:	str	r3, [r0]
   127b0:	mov	r3, #0
   127b4:	str	r3, [r0, #4]
   127b8:	bx	lr
   127bc:	vcvt.s32.f64	s15, d0
   127c0:	vcvt.f64.s32	d6, s15
   127c4:	vsub.f64	d0, d0, d6
   127c8:	vldr	d6, [pc, #128]	; 12850 <__snprintf_chk@plt+0x14e4>
   127cc:	vmul.f64	d0, d0, d6
   127d0:	vcvt.s32.f64	s14, d0
   127d4:	vcvt.f64.s32	d6, s14
   127d8:	vcmpe.f64	d6, d0
   127dc:	vmrs	APSR_nzcv, fpscr
   127e0:	movmi	r3, #1
   127e4:	movpl	r3, #0
   127e8:	vmov	r2, s14
   127ec:	add	r2, r3, r2
   127f0:	movw	r3, #12193	; 0x2fa1
   127f4:	movt	r3, #17592	; 0x44b8
   127f8:	smull	r3, r1, r3, r2
   127fc:	asr	r3, r2, #31
   12800:	rsb	r3, r3, r1, asr #28
   12804:	vmov	r1, s15
   12808:	add	r1, r3, r1
   1280c:	mov	ip, #51712	; 0xca00
   12810:	movt	ip, #15258	; 0x3b9a
   12814:	mls	r3, ip, r3, r2
   12818:	cmp	r3, #0
   1281c:	blt	1282c <__snprintf_chk@plt+0x14c0>
   12820:	str	r1, [r0]
   12824:	str	r3, [r0, #4]
   12828:	bx	lr
   1282c:	sub	r1, r1, #1
   12830:	add	r3, r3, #998244352	; 0x3b800000
   12834:	add	r3, r3, #1753088	; 0x1ac000
   12838:	add	r3, r3, #2560	; 0xa00
   1283c:	b	12820 <__snprintf_chk@plt+0x14b4>
   12840:	andeq	r0, r0, r0
   12844:	mvngt	r0, r0
   12848:	andeq	r0, r0, r0
   1284c:	mvnmi	r0, r0
   12850:	andeq	r0, r0, r0
   12854:	bicmi	ip, sp, r5, ror #26
   12858:	strd	r4, [sp, #-12]!
   1285c:	str	lr, [sp, #8]
   12860:	sub	sp, sp, #12
   12864:	mov	r5, r0
   12868:	bl	1124c <__errno_location@plt>
   1286c:	mov	r4, r0
   12870:	ldr	r3, [r0]
   12874:	str	r3, [sp]
   12878:	str	r3, [sp, #4]
   1287c:	mov	r3, #0
   12880:	str	r3, [r0]
   12884:	mov	r0, r5
   12888:	bl	11090 <free@plt>
   1288c:	ldr	r3, [r4]
   12890:	clz	r3, r3
   12894:	lsr	r3, r3, #5
   12898:	add	r2, sp, #8
   1289c:	add	r3, r2, r3, lsl #2
   128a0:	ldr	r3, [r3, #-8]
   128a4:	str	r3, [r4]
   128a8:	add	sp, sp, #12
   128ac:	ldrd	r4, [sp]
   128b0:	add	sp, sp, #8
   128b4:	pop	{pc}		; (ldr pc, [sp], #4)
   128b8:	strd	r4, [sp, #-16]!
   128bc:	str	r6, [sp, #8]
   128c0:	str	lr, [sp, #12]
   128c4:	subs	r4, r0, #0
   128c8:	beq	12964 <__snprintf_chk@plt+0x15f8>
   128cc:	mov	r1, #47	; 0x2f
   128d0:	mov	r0, r4
   128d4:	bl	1130c <strrchr@plt>
   128d8:	subs	r5, r0, #0
   128dc:	beq	1293c <__snprintf_chk@plt+0x15d0>
   128e0:	add	r6, r5, #1
   128e4:	sub	r3, r6, r4
   128e8:	cmp	r3, #6
   128ec:	ble	1293c <__snprintf_chk@plt+0x15d0>
   128f0:	mov	r2, #7
   128f4:	movw	r1, #27772	; 0x6c7c
   128f8:	movt	r1, #1
   128fc:	sub	r0, r5, #6
   12900:	bl	11354 <strncmp@plt>
   12904:	cmp	r0, #0
   12908:	bne	1293c <__snprintf_chk@plt+0x15d0>
   1290c:	mov	r2, #3
   12910:	movw	r1, #27780	; 0x6c84
   12914:	movt	r1, #1
   12918:	mov	r0, r6
   1291c:	bl	11354 <strncmp@plt>
   12920:	cmp	r0, #0
   12924:	movne	r4, r6
   12928:	bne	1293c <__snprintf_chk@plt+0x15d0>
   1292c:	add	r4, r5, #4
   12930:	movw	r3, #33568	; 0x8320
   12934:	movt	r3, #2
   12938:	str	r4, [r3]
   1293c:	movw	r3, #33636	; 0x8364
   12940:	movt	r3, #2
   12944:	str	r4, [r3]
   12948:	movw	r3, #33572	; 0x8324
   1294c:	movt	r3, #2
   12950:	str	r4, [r3]
   12954:	ldrd	r4, [sp]
   12958:	ldr	r6, [sp, #8]
   1295c:	add	sp, sp, #12
   12960:	pop	{pc}		; (ldr pc, [sp], #4)
   12964:	movw	r3, #33584	; 0x8330
   12968:	movt	r3, #2
   1296c:	ldr	r3, [r3]
   12970:	mov	r2, #55	; 0x37
   12974:	mov	r1, #1
   12978:	movw	r0, #27716	; 0x6c44
   1297c:	movt	r0, #1
   12980:	bl	11150 <fwrite@plt>
   12984:	bl	11360 <abort@plt>
   12988:	mov	r2, #0
   1298c:	mov	r3, #0
   12990:	strd	r2, [r0]
   12994:	strd	r2, [r0, #8]
   12998:	strd	r2, [r0, #16]
   1299c:	strd	r2, [r0, #24]
   129a0:	strd	r2, [r0, #32]
   129a4:	strd	r2, [r0, #40]	; 0x28
   129a8:	cmp	r1, #10
   129ac:	beq	129b8 <__snprintf_chk@plt+0x164c>
   129b0:	str	r1, [r0]
   129b4:	bx	lr
   129b8:	str	r4, [sp, #-8]!
   129bc:	str	lr, [sp, #4]
   129c0:	bl	11360 <abort@plt>
   129c4:	strd	r4, [sp, #-16]!
   129c8:	str	r6, [sp, #8]
   129cc:	str	lr, [sp, #12]
   129d0:	mov	r5, r0
   129d4:	mov	r6, r1
   129d8:	mov	r2, #5
   129dc:	mov	r1, r0
   129e0:	mov	r0, #0
   129e4:	bl	110f0 <dcgettext@plt>
   129e8:	mov	r4, r0
   129ec:	cmp	r5, r0
   129f0:	beq	12a08 <__snprintf_chk@plt+0x169c>
   129f4:	mov	r0, r4
   129f8:	ldrd	r4, [sp]
   129fc:	ldr	r6, [sp, #8]
   12a00:	add	sp, sp, #12
   12a04:	pop	{pc}		; (ldr pc, [sp], #4)
   12a08:	bl	15e18 <__snprintf_chk@plt+0x4aac>
   12a0c:	ldrb	r3, [r0]
   12a10:	bic	r3, r3, #32
   12a14:	cmp	r3, #85	; 0x55
   12a18:	bne	12a9c <__snprintf_chk@plt+0x1730>
   12a1c:	ldrb	r3, [r0, #1]
   12a20:	bic	r3, r3, #32
   12a24:	cmp	r3, #84	; 0x54
   12a28:	bne	12a60 <__snprintf_chk@plt+0x16f4>
   12a2c:	ldrb	r3, [r0, #2]
   12a30:	bic	r3, r3, #32
   12a34:	cmp	r3, #70	; 0x46
   12a38:	bne	12a60 <__snprintf_chk@plt+0x16f4>
   12a3c:	ldrb	r3, [r0, #3]
   12a40:	cmp	r3, #45	; 0x2d
   12a44:	bne	12a60 <__snprintf_chk@plt+0x16f4>
   12a48:	ldrb	r3, [r0, #4]
   12a4c:	cmp	r3, #56	; 0x38
   12a50:	bne	12a60 <__snprintf_chk@plt+0x16f4>
   12a54:	ldrb	r3, [r0, #5]
   12a58:	cmp	r3, #0
   12a5c:	beq	12a7c <__snprintf_chk@plt+0x1710>
   12a60:	movw	r4, #27868	; 0x6cdc
   12a64:	movt	r4, #1
   12a68:	movw	r3, #27888	; 0x6cf0
   12a6c:	movt	r3, #1
   12a70:	cmp	r6, #9
   12a74:	movne	r4, r3
   12a78:	b	129f4 <__snprintf_chk@plt+0x1688>
   12a7c:	ldrb	r2, [r4]
   12a80:	movw	r4, #27884	; 0x6cec
   12a84:	movt	r4, #1
   12a88:	movw	r3, #27872	; 0x6ce0
   12a8c:	movt	r3, #1
   12a90:	cmp	r2, #96	; 0x60
   12a94:	movne	r4, r3
   12a98:	b	129f4 <__snprintf_chk@plt+0x1688>
   12a9c:	cmp	r3, #71	; 0x47
   12aa0:	bne	12a60 <__snprintf_chk@plt+0x16f4>
   12aa4:	ldrb	r3, [r0, #1]
   12aa8:	bic	r3, r3, #32
   12aac:	cmp	r3, #66	; 0x42
   12ab0:	bne	12a60 <__snprintf_chk@plt+0x16f4>
   12ab4:	ldrb	r3, [r0, #2]
   12ab8:	cmp	r3, #49	; 0x31
   12abc:	bne	12a60 <__snprintf_chk@plt+0x16f4>
   12ac0:	ldrb	r3, [r0, #3]
   12ac4:	cmp	r3, #56	; 0x38
   12ac8:	bne	12a60 <__snprintf_chk@plt+0x16f4>
   12acc:	ldrb	r3, [r0, #4]
   12ad0:	cmp	r3, #48	; 0x30
   12ad4:	bne	12a60 <__snprintf_chk@plt+0x16f4>
   12ad8:	ldrb	r3, [r0, #5]
   12adc:	cmp	r3, #51	; 0x33
   12ae0:	bne	12a60 <__snprintf_chk@plt+0x16f4>
   12ae4:	ldrb	r3, [r0, #6]
   12ae8:	cmp	r3, #48	; 0x30
   12aec:	bne	12a60 <__snprintf_chk@plt+0x16f4>
   12af0:	ldrb	r3, [r0, #7]
   12af4:	cmp	r3, #0
   12af8:	bne	12a60 <__snprintf_chk@plt+0x16f4>
   12afc:	ldrb	r2, [r4]
   12b00:	movw	r4, #27880	; 0x6ce8
   12b04:	movt	r4, #1
   12b08:	movw	r3, #27876	; 0x6ce4
   12b0c:	movt	r3, #1
   12b10:	cmp	r2, #96	; 0x60
   12b14:	movne	r4, r3
   12b18:	b	129f4 <__snprintf_chk@plt+0x1688>
   12b1c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12b20:	strd	r6, [sp, #8]
   12b24:	strd	r8, [sp, #16]
   12b28:	strd	sl, [sp, #24]
   12b2c:	str	lr, [sp, #32]
   12b30:	sub	sp, sp, #116	; 0x74
   12b34:	str	r0, [sp, #64]	; 0x40
   12b38:	mov	r8, r1
   12b3c:	str	r2, [sp, #48]	; 0x30
   12b40:	str	r3, [sp, #24]
   12b44:	ldr	r7, [sp, #152]	; 0x98
   12b48:	bl	11174 <__ctype_get_mb_cur_max@plt>
   12b4c:	str	r0, [sp, #76]	; 0x4c
   12b50:	ldr	r3, [sp, #156]	; 0x9c
   12b54:	ubfx	r3, r3, #1, #1
   12b58:	str	r3, [sp, #32]
   12b5c:	mov	r3, #1
   12b60:	str	r3, [sp, #40]	; 0x28
   12b64:	mov	r3, #0
   12b68:	str	r3, [sp, #68]	; 0x44
   12b6c:	str	r3, [sp, #36]	; 0x24
   12b70:	str	r3, [sp, #28]
   12b74:	str	r3, [sp, #52]	; 0x34
   12b78:	str	r3, [sp, #60]	; 0x3c
   12b7c:	str	r3, [sp, #72]	; 0x48
   12b80:	movw	r3, #27892	; 0x6cf4
   12b84:	movt	r3, #1
   12b88:	str	r3, [sp, #80]	; 0x50
   12b8c:	mov	r9, r8
   12b90:	mov	sl, r7
   12b94:	cmp	sl, #10
   12b98:	ldrls	pc, [pc, sl, lsl #2]
   12b9c:	b	12d60 <__snprintf_chk@plt+0x19f4>
   12ba0:	andeq	r2, r1, r0, lsl #24
   12ba4:	ldrdeq	r2, [r1], -r4
   12ba8:	andeq	r2, r1, r8, lsr sp
   12bac:	andeq	r2, r1, ip, asr #23
   12bb0:	andeq	r2, r1, ip, ror #25
   12bb4:	andeq	r2, r1, r0, lsl ip
   12bb8:	ldrdeq	r3, [r1], -ip
   12bbc:	andeq	r2, r1, r4, ror #26
   12bc0:	andeq	r2, r1, ip, asr #24
   12bc4:	andeq	r2, r1, ip, asr #24
   12bc8:	andeq	r2, r1, ip, asr #24
   12bcc:	mov	r3, #1
   12bd0:	str	r3, [sp, #28]
   12bd4:	mov	r3, #1
   12bd8:	str	r3, [sp, #32]
   12bdc:	str	r3, [sp, #52]	; 0x34
   12be0:	movw	r3, #27888	; 0x6cf0
   12be4:	movt	r3, #1
   12be8:	str	r3, [sp, #60]	; 0x3c
   12bec:	mov	fp, #0
   12bf0:	mov	sl, #2
   12bf4:	mov	r6, #0
   12bf8:	ldr	r8, [sp, #64]	; 0x40
   12bfc:	b	13474 <__snprintf_chk@plt+0x2108>
   12c00:	mov	fp, sl
   12c04:	mov	r3, #0
   12c08:	str	r3, [sp, #32]
   12c0c:	b	12bf4 <__snprintf_chk@plt+0x1888>
   12c10:	ldr	r3, [sp, #32]
   12c14:	cmp	r3, #0
   12c18:	bne	12d78 <__snprintf_chk@plt+0x1a0c>
   12c1c:	cmp	r9, #0
   12c20:	beq	12d9c <__snprintf_chk@plt+0x1a30>
   12c24:	mov	r3, #34	; 0x22
   12c28:	ldr	r2, [sp, #64]	; 0x40
   12c2c:	strb	r3, [r2]
   12c30:	mov	fp, #1
   12c34:	str	fp, [sp, #28]
   12c38:	str	fp, [sp, #52]	; 0x34
   12c3c:	movw	r3, #27868	; 0x6cdc
   12c40:	movt	r3, #1
   12c44:	str	r3, [sp, #60]	; 0x3c
   12c48:	b	12bf4 <__snprintf_chk@plt+0x1888>
   12c4c:	cmp	sl, #10
   12c50:	bne	12c84 <__snprintf_chk@plt+0x1918>
   12c54:	ldr	r3, [sp, #32]
   12c58:	cmp	r3, #0
   12c5c:	movne	fp, #0
   12c60:	beq	12cac <__snprintf_chk@plt+0x1940>
   12c64:	ldr	r0, [sp, #168]	; 0xa8
   12c68:	bl	11228 <strlen@plt>
   12c6c:	str	r0, [sp, #52]	; 0x34
   12c70:	ldr	r3, [sp, #168]	; 0xa8
   12c74:	str	r3, [sp, #60]	; 0x3c
   12c78:	mov	r3, #1
   12c7c:	str	r3, [sp, #28]
   12c80:	b	12bf4 <__snprintf_chk@plt+0x1888>
   12c84:	mov	r1, sl
   12c88:	ldr	r0, [sp, #80]	; 0x50
   12c8c:	bl	129c4 <__snprintf_chk@plt+0x1658>
   12c90:	str	r0, [sp, #164]	; 0xa4
   12c94:	mov	r1, sl
   12c98:	movw	r0, #27888	; 0x6cf0
   12c9c:	movt	r0, #1
   12ca0:	bl	129c4 <__snprintf_chk@plt+0x1658>
   12ca4:	str	r0, [sp, #168]	; 0xa8
   12ca8:	b	12c54 <__snprintf_chk@plt+0x18e8>
   12cac:	ldr	r3, [sp, #164]	; 0xa4
   12cb0:	ldrb	r3, [r3]
   12cb4:	cmp	r3, #0
   12cb8:	beq	12ce4 <__snprintf_chk@plt+0x1978>
   12cbc:	ldr	r2, [sp, #164]	; 0xa4
   12cc0:	mov	fp, #0
   12cc4:	ldr	r1, [sp, #64]	; 0x40
   12cc8:	cmp	r9, fp
   12ccc:	strbhi	r3, [r1, fp]
   12cd0:	add	fp, fp, #1
   12cd4:	ldrb	r3, [r2, #1]!
   12cd8:	cmp	r3, #0
   12cdc:	bne	12cc8 <__snprintf_chk@plt+0x195c>
   12ce0:	b	12c64 <__snprintf_chk@plt+0x18f8>
   12ce4:	mov	fp, #0
   12ce8:	b	12c64 <__snprintf_chk@plt+0x18f8>
   12cec:	ldr	r3, [sp, #32]
   12cf0:	cmp	r3, #0
   12cf4:	bne	12bd4 <__snprintf_chk@plt+0x1868>
   12cf8:	mov	r3, #1
   12cfc:	str	r3, [sp, #28]
   12d00:	cmp	r9, #0
   12d04:	beq	12db8 <__snprintf_chk@plt+0x1a4c>
   12d08:	mov	r3, #39	; 0x27
   12d0c:	ldr	r2, [sp, #64]	; 0x40
   12d10:	strb	r3, [r2]
   12d14:	mov	r3, #0
   12d18:	str	r3, [sp, #32]
   12d1c:	mov	fp, #1
   12d20:	str	fp, [sp, #52]	; 0x34
   12d24:	movw	r3, #27888	; 0x6cf0
   12d28:	movt	r3, #1
   12d2c:	str	r3, [sp, #60]	; 0x3c
   12d30:	mov	sl, #2
   12d34:	b	12bf4 <__snprintf_chk@plt+0x1888>
   12d38:	ldr	r3, [sp, #32]
   12d3c:	cmp	r3, #0
   12d40:	beq	12d00 <__snprintf_chk@plt+0x1994>
   12d44:	mov	r3, #1
   12d48:	str	r3, [sp, #52]	; 0x34
   12d4c:	movw	r3, #27888	; 0x6cf0
   12d50:	movt	r3, #1
   12d54:	str	r3, [sp, #60]	; 0x3c
   12d58:	mov	fp, #0
   12d5c:	b	12bf4 <__snprintf_chk@plt+0x1888>
   12d60:	bl	11360 <abort@plt>
   12d64:	mov	fp, #0
   12d68:	str	fp, [sp, #32]
   12d6c:	mov	r3, #1
   12d70:	str	r3, [sp, #28]
   12d74:	b	12bf4 <__snprintf_chk@plt+0x1888>
   12d78:	ldr	r3, [sp, #32]
   12d7c:	str	r3, [sp, #28]
   12d80:	mov	r3, #1
   12d84:	str	r3, [sp, #52]	; 0x34
   12d88:	movw	r3, #27868	; 0x6cdc
   12d8c:	movt	r3, #1
   12d90:	str	r3, [sp, #60]	; 0x3c
   12d94:	mov	fp, #0
   12d98:	b	12bf4 <__snprintf_chk@plt+0x1888>
   12d9c:	mov	fp, #1
   12da0:	str	fp, [sp, #28]
   12da4:	str	fp, [sp, #52]	; 0x34
   12da8:	movw	r3, #27868	; 0x6cdc
   12dac:	movt	r3, #1
   12db0:	str	r3, [sp, #60]	; 0x3c
   12db4:	b	12bf4 <__snprintf_chk@plt+0x1888>
   12db8:	mov	r3, #0
   12dbc:	str	r3, [sp, #32]
   12dc0:	mov	fp, #1
   12dc4:	str	fp, [sp, #52]	; 0x34
   12dc8:	movw	r3, #27888	; 0x6cf0
   12dcc:	movt	r3, #1
   12dd0:	str	r3, [sp, #60]	; 0x3c
   12dd4:	mov	sl, #2
   12dd8:	b	12bf4 <__snprintf_chk@plt+0x1888>
   12ddc:	mov	r3, r2
   12de0:	add	r4, r6, r2
   12de4:	ldr	r2, [sp, #24]
   12de8:	cmp	r3, #1
   12dec:	movls	r3, #0
   12df0:	movhi	r3, #1
   12df4:	cmn	r2, #1
   12df8:	movne	r3, #0
   12dfc:	cmp	r3, #0
   12e00:	beq	12e10 <__snprintf_chk@plt+0x1aa4>
   12e04:	ldr	r0, [sp, #48]	; 0x30
   12e08:	bl	11228 <strlen@plt>
   12e0c:	str	r0, [sp, #24]
   12e10:	ldr	r3, [sp, #24]
   12e14:	cmp	r4, r3
   12e18:	bhi	14004 <__snprintf_chk@plt+0x2c98>
   12e1c:	ldr	r3, [sp, #48]	; 0x30
   12e20:	add	r4, r3, r6
   12e24:	ldr	r2, [sp, #52]	; 0x34
   12e28:	ldr	r1, [sp, #60]	; 0x3c
   12e2c:	mov	r0, r4
   12e30:	bl	110d8 <memcmp@plt>
   12e34:	cmp	r0, #0
   12e38:	bne	14004 <__snprintf_chk@plt+0x2c98>
   12e3c:	ldr	r3, [sp, #32]
   12e40:	cmp	r3, #0
   12e44:	bne	13054 <__snprintf_chk@plt+0x1ce8>
   12e48:	ldrb	r4, [r4]
   12e4c:	cmp	r4, #126	; 0x7e
   12e50:	ldrls	pc, [pc, r4, lsl #2]
   12e54:	b	13908 <__snprintf_chk@plt+0x259c>
   12e58:	muleq	r1, r8, r0
   12e5c:	andeq	r3, r1, r8, lsl #18
   12e60:	andeq	r3, r1, r8, lsl #18
   12e64:	andeq	r3, r1, r8, lsl #18
   12e68:	andeq	r3, r1, r8, lsl #18
   12e6c:	andeq	r3, r1, r8, lsl #18
   12e70:	andeq	r3, r1, r8, lsl #18
   12e74:			; <UNDEFINED> instruction: 0x000137b0
   12e78:	andeq	r3, r1, r4, lsr r3
   12e7c:	ldrdeq	r3, [r1], -r8
   12e80:	andeq	r3, r1, r4, lsl #15
   12e84:	andeq	r3, r1, ip, ror #13
   12e88:	andeq	r3, r1, r8, asr #6
   12e8c:	andeq	r3, r1, ip, asr r3
   12e90:	andeq	r3, r1, r8, lsl #18
   12e94:	andeq	r3, r1, r8, lsl #18
   12e98:	andeq	r3, r1, r8, lsl #18
   12e9c:	andeq	r3, r1, r8, lsl #18
   12ea0:	andeq	r3, r1, r8, lsl #18
   12ea4:	andeq	r3, r1, r8, lsl #18
   12ea8:	andeq	r3, r1, r8, lsl #18
   12eac:	andeq	r3, r1, r8, lsl #18
   12eb0:	andeq	r3, r1, r8, lsl #18
   12eb4:	andeq	r3, r1, r8, lsl #18
   12eb8:	andeq	r3, r1, r8, lsl #18
   12ebc:	andeq	r3, r1, r8, lsl #18
   12ec0:	andeq	r3, r1, r8, lsl #18
   12ec4:	andeq	r3, r1, r8, lsl #18
   12ec8:	andeq	r3, r1, r8, lsl #18
   12ecc:	andeq	r3, r1, r8, lsl #18
   12ed0:	andeq	r3, r1, r8, lsl #18
   12ed4:	andeq	r3, r1, r8, lsl #18
   12ed8:	andeq	r3, r1, r4, lsr #16
   12edc:	andeq	r3, r1, r8, asr #16
   12ee0:	andeq	r3, r1, r8, asr #16
   12ee4:	andeq	r3, r1, r0, ror #15
   12ee8:	andeq	r3, r1, r8, asr #16
   12eec:	andeq	r3, r1, r8, ror #26
   12ef0:	andeq	r3, r1, r8, asr #16
   12ef4:	andeq	r3, r1, r8, ror #16
   12ef8:	andeq	r3, r1, r8, asr #16
   12efc:	andeq	r3, r1, r8, asr #16
   12f00:	andeq	r3, r1, r8, asr #16
   12f04:	andeq	r3, r1, r8, ror #26
   12f08:	andeq	r3, r1, r8, ror #26
   12f0c:	andeq	r3, r1, r8, ror #26
   12f10:	andeq	r3, r1, r8, ror #26
   12f14:	andeq	r3, r1, r8, ror #26
   12f18:	andeq	r3, r1, r8, ror #26
   12f1c:	andeq	r3, r1, r8, ror #26
   12f20:	andeq	r3, r1, r8, ror #26
   12f24:	andeq	r3, r1, r8, ror #26
   12f28:	andeq	r3, r1, r8, ror #26
   12f2c:	andeq	r3, r1, r8, ror #26
   12f30:	andeq	r3, r1, r8, ror #26
   12f34:	andeq	r3, r1, r8, ror #26
   12f38:	andeq	r3, r1, r8, ror #26
   12f3c:	andeq	r3, r1, r8, ror #26
   12f40:	andeq	r3, r1, r8, ror #26
   12f44:	andeq	r3, r1, r8, asr #16
   12f48:	andeq	r3, r1, r8, asr #16
   12f4c:	andeq	r3, r1, r8, asr #16
   12f50:	andeq	r3, r1, r8, asr #16
   12f54:	andeq	r3, r1, r8, asr #3
   12f58:	andeq	r3, r1, r8, lsl #18
   12f5c:	andeq	r3, r1, r8, ror #26
   12f60:	andeq	r3, r1, r8, ror #26
   12f64:	andeq	r3, r1, r8, ror #26
   12f68:	andeq	r3, r1, r8, ror #26
   12f6c:	andeq	r3, r1, r8, ror #26
   12f70:	andeq	r3, r1, r8, ror #26
   12f74:	andeq	r3, r1, r8, ror #26
   12f78:	andeq	r3, r1, r8, ror #26
   12f7c:	andeq	r3, r1, r8, ror #26
   12f80:	andeq	r3, r1, r8, ror #26
   12f84:	andeq	r3, r1, r8, ror #26
   12f88:	andeq	r3, r1, r8, ror #26
   12f8c:	andeq	r3, r1, r8, ror #26
   12f90:	andeq	r3, r1, r8, ror #26
   12f94:	andeq	r3, r1, r8, ror #26
   12f98:	andeq	r3, r1, r8, ror #26
   12f9c:	andeq	r3, r1, r8, ror #26
   12fa0:	andeq	r3, r1, r8, ror #26
   12fa4:	andeq	r3, r1, r8, ror #26
   12fa8:	andeq	r3, r1, r8, ror #26
   12fac:	andeq	r3, r1, r8, ror #26
   12fb0:	andeq	r3, r1, r8, ror #26
   12fb4:	andeq	r3, r1, r8, ror #26
   12fb8:	andeq	r3, r1, r8, ror #26
   12fbc:	andeq	r3, r1, r8, ror #26
   12fc0:	andeq	r3, r1, r8, ror #26
   12fc4:	andeq	r3, r1, r8, asr #16
   12fc8:	andeq	r3, r1, r0, lsl #14
   12fcc:	andeq	r3, r1, r8, ror #26
   12fd0:	andeq	r3, r1, r8, asr #16
   12fd4:	andeq	r3, r1, r8, ror #26
   12fd8:	andeq	r3, r1, r8, asr #16
   12fdc:	andeq	r3, r1, r8, ror #26
   12fe0:	andeq	r3, r1, r8, ror #26
   12fe4:	andeq	r3, r1, r8, ror #26
   12fe8:	andeq	r3, r1, r8, ror #26
   12fec:	andeq	r3, r1, r8, ror #26
   12ff0:	andeq	r3, r1, r8, ror #26
   12ff4:	andeq	r3, r1, r8, ror #26
   12ff8:	andeq	r3, r1, r8, ror #26
   12ffc:	andeq	r3, r1, r8, ror #26
   13000:	andeq	r3, r1, r8, ror #26
   13004:	andeq	r3, r1, r8, ror #26
   13008:	andeq	r3, r1, r8, ror #26
   1300c:	andeq	r3, r1, r8, ror #26
   13010:	andeq	r3, r1, r8, ror #26
   13014:	andeq	r3, r1, r8, ror #26
   13018:	andeq	r3, r1, r8, ror #26
   1301c:	andeq	r3, r1, r8, ror #26
   13020:	andeq	r3, r1, r8, ror #26
   13024:	andeq	r3, r1, r8, ror #26
   13028:	andeq	r3, r1, r8, ror #26
   1302c:	andeq	r3, r1, r8, ror #26
   13030:	andeq	r3, r1, r8, ror #26
   13034:	andeq	r3, r1, r8, ror #26
   13038:	andeq	r3, r1, r8, ror #26
   1303c:	andeq	r3, r1, r8, ror #26
   13040:	andeq	r3, r1, r8, ror #26
   13044:	andeq	r3, r1, r0, asr #15
   13048:	andeq	r3, r1, r8, asr #16
   1304c:	andeq	r3, r1, r0, asr #15
   13050:	andeq	r3, r1, r0, ror #15
   13054:	mov	r8, r9
   13058:	mov	r7, sl
   1305c:	b	13f5c <__snprintf_chk@plt+0x2bf0>
   13060:	ldr	r3, [sp, #28]
   13064:	cmp	r3, #0
   13068:	bne	13088 <__snprintf_chk@plt+0x1d1c>
   1306c:	ldr	r3, [sp, #156]	; 0x9c
   13070:	tst	r3, #1
   13074:	bne	13470 <__snprintf_chk@plt+0x2104>
   13078:	ldr	r3, [sp, #28]
   1307c:	str	r3, [sp, #44]	; 0x2c
   13080:	mov	r5, r3
   13084:	b	13390 <__snprintf_chk@plt+0x2024>
   13088:	ldr	r3, [sp, #32]
   1308c:	cmp	r3, #0
   13090:	bne	13f0c <__snprintf_chk@plt+0x2ba0>
   13094:	str	r3, [sp, #44]	; 0x2c
   13098:	ldr	r3, [sp, #36]	; 0x24
   1309c:	eor	r3, r3, #1
   130a0:	cmp	sl, #2
   130a4:	movne	r3, #0
   130a8:	andeq	r3, r3, #1
   130ac:	cmp	r3, #0
   130b0:	beq	13108 <__snprintf_chk@plt+0x1d9c>
   130b4:	cmp	r9, fp
   130b8:	movhi	r2, #39	; 0x27
   130bc:	strbhi	r2, [r8, fp]
   130c0:	add	r2, fp, #1
   130c4:	cmp	r9, r2
   130c8:	movhi	r1, #36	; 0x24
   130cc:	strbhi	r1, [r8, r2]
   130d0:	add	r2, fp, #2
   130d4:	cmp	r9, r2
   130d8:	movhi	r1, #39	; 0x27
   130dc:	strbhi	r1, [r8, r2]
   130e0:	add	r2, fp, #3
   130e4:	cmp	r9, r2
   130e8:	bls	13fc8 <__snprintf_chk@plt+0x2c5c>
   130ec:	mov	r1, #92	; 0x5c
   130f0:	strb	r1, [r8, r2]
   130f4:	add	fp, fp, #4
   130f8:	str	r3, [sp, #36]	; 0x24
   130fc:	mov	r5, #0
   13100:	mov	r4, #48	; 0x30
   13104:	b	133dc <__snprintf_chk@plt+0x2070>
   13108:	cmp	r9, fp
   1310c:	bhi	13134 <__snprintf_chk@plt+0x1dc8>
   13110:	add	r1, fp, #1
   13114:	ldr	r2, [sp, #56]	; 0x38
   13118:	cmp	r2, #0
   1311c:	bne	1315c <__snprintf_chk@plt+0x1df0>
   13120:	mov	r3, r5
   13124:	ldr	r5, [sp, #56]	; 0x38
   13128:	mov	fp, r1
   1312c:	mov	r4, #48	; 0x30
   13130:	b	13390 <__snprintf_chk@plt+0x2024>
   13134:	mov	r2, #92	; 0x5c
   13138:	strb	r2, [r8, fp]
   1313c:	add	r1, fp, #1
   13140:	ldr	r2, [sp, #56]	; 0x38
   13144:	cmp	r2, #0
   13148:	moveq	r3, r5
   1314c:	moveq	r5, r2
   13150:	moveq	fp, r1
   13154:	moveq	r4, #48	; 0x30
   13158:	beq	133dc <__snprintf_chk@plt+0x2070>
   1315c:	add	r2, r6, #1
   13160:	ldr	r0, [sp, #24]
   13164:	cmp	r2, r0
   13168:	bcs	13184 <__snprintf_chk@plt+0x1e18>
   1316c:	ldr	r0, [sp, #48]	; 0x30
   13170:	ldrb	r2, [r0, r2]
   13174:	sub	r2, r2, #48	; 0x30
   13178:	uxtb	r2, r2
   1317c:	cmp	r2, #9
   13180:	bls	1319c <__snprintf_chk@plt+0x1e30>
   13184:	mov	r2, r3
   13188:	mov	r3, r5
   1318c:	mov	r5, r2
   13190:	mov	fp, r1
   13194:	mov	r4, #48	; 0x30
   13198:	b	133b4 <__snprintf_chk@plt+0x2048>
   1319c:	cmp	r9, r1
   131a0:	movhi	r2, #48	; 0x30
   131a4:	strbhi	r2, [r8, r1]
   131a8:	add	r2, fp, #2
   131ac:	cmp	r9, r2
   131b0:	movhi	r1, #48	; 0x30
   131b4:	strbhi	r1, [r8, r2]
   131b8:	add	r1, fp, #3
   131bc:	b	13184 <__snprintf_chk@plt+0x1e18>
   131c0:	mov	r3, #0
   131c4:	str	r3, [sp, #44]	; 0x2c
   131c8:	cmp	sl, #2
   131cc:	beq	131e8 <__snprintf_chk@plt+0x1e7c>
   131d0:	cmp	sl, #5
   131d4:	beq	13200 <__snprintf_chk@plt+0x1e94>
   131d8:	mov	r5, #0
   131dc:	mov	r3, r5
   131e0:	mov	r4, #63	; 0x3f
   131e4:	b	13390 <__snprintf_chk@plt+0x2024>
   131e8:	ldr	r3, [sp, #32]
   131ec:	cmp	r3, #0
   131f0:	bne	13f18 <__snprintf_chk@plt+0x2bac>
   131f4:	mov	r5, r3
   131f8:	mov	r4, #63	; 0x3f
   131fc:	b	138f8 <__snprintf_chk@plt+0x258c>
   13200:	ldr	r3, [sp, #156]	; 0x9c
   13204:	tst	r3, #4
   13208:	beq	13d30 <__snprintf_chk@plt+0x29c4>
   1320c:	add	r2, r6, #2
   13210:	ldr	r3, [sp, #24]
   13214:	cmp	r2, r3
   13218:	bcs	13d40 <__snprintf_chk@plt+0x29d4>
   1321c:	ldr	r3, [sp, #48]	; 0x30
   13220:	add	r3, r3, r6
   13224:	ldrb	r4, [r3, #1]
   13228:	cmp	r4, #63	; 0x3f
   1322c:	movne	r5, #0
   13230:	movne	r3, r5
   13234:	movne	r4, #63	; 0x3f
   13238:	bne	13390 <__snprintf_chk@plt+0x2024>
   1323c:	ldr	r3, [sp, #48]	; 0x30
   13240:	ldrb	r1, [r3, r2]
   13244:	sub	r3, r1, #33	; 0x21
   13248:	cmp	r3, #29
   1324c:	ldrls	pc, [pc, r3, lsl #2]
   13250:	b	13d50 <__snprintf_chk@plt+0x29e4>
   13254:	andeq	r3, r1, ip, asr #5
   13258:	andeq	r3, r1, r0, asr sp
   1325c:	andeq	r3, r1, r0, asr sp
   13260:	andeq	r3, r1, r0, asr sp
   13264:	andeq	r3, r1, r0, asr sp
   13268:	andeq	r3, r1, r0, asr sp
   1326c:	andeq	r3, r1, ip, asr #5
   13270:	andeq	r3, r1, ip, asr #5
   13274:	andeq	r3, r1, ip, asr #5
   13278:	andeq	r3, r1, r0, asr sp
   1327c:	andeq	r3, r1, r0, asr sp
   13280:	andeq	r3, r1, r0, asr sp
   13284:	andeq	r3, r1, ip, asr #5
   13288:	andeq	r3, r1, r0, asr sp
   1328c:	andeq	r3, r1, ip, asr #5
   13290:	andeq	r3, r1, r0, asr sp
   13294:	andeq	r3, r1, r0, asr sp
   13298:	andeq	r3, r1, r0, asr sp
   1329c:	andeq	r3, r1, r0, asr sp
   132a0:	andeq	r3, r1, r0, asr sp
   132a4:	andeq	r3, r1, r0, asr sp
   132a8:	andeq	r3, r1, r0, asr sp
   132ac:	andeq	r3, r1, r0, asr sp
   132b0:	andeq	r3, r1, r0, asr sp
   132b4:	andeq	r3, r1, r0, asr sp
   132b8:	andeq	r3, r1, r0, asr sp
   132bc:	andeq	r3, r1, r0, asr sp
   132c0:	andeq	r3, r1, ip, asr #5
   132c4:	andeq	r3, r1, ip, asr #5
   132c8:	andeq	r3, r1, ip, asr #5
   132cc:	ldr	r3, [sp, #32]
   132d0:	cmp	r3, #0
   132d4:	bne	13fbc <__snprintf_chk@plt+0x2c50>
   132d8:	cmp	r9, fp
   132dc:	movhi	r3, #63	; 0x3f
   132e0:	strbhi	r3, [r8, fp]
   132e4:	add	r3, fp, #1
   132e8:	cmp	r9, r3
   132ec:	movhi	r0, #34	; 0x22
   132f0:	strbhi	r0, [r8, r3]
   132f4:	add	r3, fp, #2
   132f8:	cmp	r9, r3
   132fc:	movhi	r0, #34	; 0x22
   13300:	strbhi	r0, [r8, r3]
   13304:	add	r3, fp, #3
   13308:	cmp	r9, r3
   1330c:	movhi	r0, #63	; 0x3f
   13310:	strbhi	r0, [r8, r3]
   13314:	add	fp, fp, #4
   13318:	ldr	r3, [sp, #32]
   1331c:	mov	r5, r3
   13320:	mov	r4, r1
   13324:	mov	r6, r2
   13328:	b	13390 <__snprintf_chk@plt+0x2024>
   1332c:	mov	r3, #0
   13330:	str	r3, [sp, #44]	; 0x2c
   13334:	mov	r4, #8
   13338:	mov	r3, #98	; 0x62
   1333c:	b	1337c <__snprintf_chk@plt+0x2010>
   13340:	mov	r3, #0
   13344:	str	r3, [sp, #44]	; 0x2c
   13348:	mov	r4, #12
   1334c:	mov	r3, #102	; 0x66
   13350:	b	1337c <__snprintf_chk@plt+0x2010>
   13354:	mov	r3, #0
   13358:	str	r3, [sp, #44]	; 0x2c
   1335c:	mov	r4, #13
   13360:	mov	r3, #114	; 0x72
   13364:	ldr	r2, [sp, #32]
   13368:	cmp	sl, #2
   1336c:	movne	r2, #0
   13370:	andeq	r2, r2, #1
   13374:	cmp	r2, #0
   13378:	bne	1379c <__snprintf_chk@plt+0x2430>
   1337c:	ldr	r2, [sp, #28]
   13380:	cmp	r2, #0
   13384:	bne	13d84 <__snprintf_chk@plt+0x2a18>
   13388:	mov	r5, r2
   1338c:	mov	r3, r2
   13390:	ldr	r2, [sp, #28]
   13394:	eor	r2, r2, #1
   13398:	cmp	sl, #2
   1339c:	orreq	r2, r2, #1
   133a0:	eor	r2, r2, #1
   133a4:	ldr	r1, [sp, #32]
   133a8:	orr	r2, r1, r2
   133ac:	tst	r2, #255	; 0xff
   133b0:	beq	133dc <__snprintf_chk@plt+0x2070>
   133b4:	ldr	r2, [sp, #160]	; 0xa0
   133b8:	cmp	r2, #0
   133bc:	beq	133dc <__snprintf_chk@plt+0x2070>
   133c0:	ubfx	r1, r4, #5, #8
   133c4:	and	r2, r4, #31
   133c8:	ldr	r0, [sp, #160]	; 0xa0
   133cc:	ldr	r1, [r0, r1, lsl #2]
   133d0:	lsr	r2, r1, r2
   133d4:	tst	r2, #1
   133d8:	bne	133e8 <__snprintf_chk@plt+0x207c>
   133dc:	ldr	r2, [sp, #44]	; 0x2c
   133e0:	cmp	r2, #0
   133e4:	beq	1373c <__snprintf_chk@plt+0x23d0>
   133e8:	ldr	r3, [sp, #32]
   133ec:	cmp	r3, #0
   133f0:	bne	13f3c <__snprintf_chk@plt+0x2bd0>
   133f4:	ldr	r3, [sp, #36]	; 0x24
   133f8:	eor	r3, r3, #1
   133fc:	cmp	sl, #2
   13400:	movne	r3, #0
   13404:	andeq	r3, r3, #1
   13408:	cmp	r3, #0
   1340c:	beq	13444 <__snprintf_chk@plt+0x20d8>
   13410:	cmp	r9, fp
   13414:	movhi	r2, #39	; 0x27
   13418:	strbhi	r2, [r8, fp]
   1341c:	add	r2, fp, #1
   13420:	cmp	r9, r2
   13424:	movhi	r1, #36	; 0x24
   13428:	strbhi	r1, [r8, r2]
   1342c:	add	r2, fp, #2
   13430:	cmp	r9, r2
   13434:	movhi	r1, #39	; 0x27
   13438:	strbhi	r1, [r8, r2]
   1343c:	add	fp, fp, #3
   13440:	str	r3, [sp, #36]	; 0x24
   13444:	cmp	r9, fp
   13448:	movhi	r3, #92	; 0x5c
   1344c:	strbhi	r3, [r8, fp]
   13450:	add	fp, fp, #1
   13454:	cmp	fp, r9
   13458:	strbcc	r4, [r8, fp]
   1345c:	add	fp, fp, #1
   13460:	cmp	r5, #0
   13464:	ldr	r3, [sp, #40]	; 0x28
   13468:	moveq	r3, r5
   1346c:	str	r3, [sp, #40]	; 0x28
   13470:	add	r6, r6, #1
   13474:	ldr	r3, [sp, #24]
   13478:	cmn	r3, #1
   1347c:	beq	13dac <__snprintf_chk@plt+0x2a40>
   13480:	ldr	r3, [sp, #24]
   13484:	subs	r5, r3, r6
   13488:	movne	r5, #1
   1348c:	cmp	r5, #0
   13490:	beq	13dc0 <__snprintf_chk@plt+0x2a54>
   13494:	ldr	r3, [sp, #28]
   13498:	cmp	sl, #2
   1349c:	moveq	r3, #0
   134a0:	andne	r3, r3, #1
   134a4:	str	r3, [sp, #56]	; 0x38
   134a8:	ldr	r2, [sp, #52]	; 0x34
   134ac:	adds	r7, r2, #0
   134b0:	movne	r7, #1
   134b4:	ands	r3, r3, r7
   134b8:	str	r3, [sp, #44]	; 0x2c
   134bc:	bne	12ddc <__snprintf_chk@plt+0x1a70>
   134c0:	ldr	r3, [sp, #48]	; 0x30
   134c4:	ldrb	r4, [r3, r6]
   134c8:	cmp	r4, #126	; 0x7e
   134cc:	ldrls	pc, [pc, r4, lsl #2]
   134d0:	b	13908 <__snprintf_chk@plt+0x259c>
   134d4:	andeq	r3, r1, r0, rrx
   134d8:	andeq	r3, r1, r8, lsl #18
   134dc:	andeq	r3, r1, r8, lsl #18
   134e0:	andeq	r3, r1, r8, lsl #18
   134e4:	andeq	r3, r1, r8, lsl #18
   134e8:	andeq	r3, r1, r8, lsl #18
   134ec:	andeq	r3, r1, r8, lsl #18
   134f0:	andeq	r3, r1, r8, lsr #15
   134f4:	andeq	r3, r1, r4, lsr r3
   134f8:	ldrdeq	r3, [r1], -r8
   134fc:	andeq	r3, r1, ip, ror r7
   13500:	andeq	r3, r1, ip, ror #13
   13504:	andeq	r3, r1, r8, asr #6
   13508:	andeq	r3, r1, ip, asr r3
   1350c:	andeq	r3, r1, r8, lsl #18
   13510:	andeq	r3, r1, r8, lsl #18
   13514:	andeq	r3, r1, r8, lsl #18
   13518:	andeq	r3, r1, r8, lsl #18
   1351c:	andeq	r3, r1, r8, lsl #18
   13520:	andeq	r3, r1, r8, lsl #18
   13524:	andeq	r3, r1, r8, lsl #18
   13528:	andeq	r3, r1, r8, lsl #18
   1352c:	andeq	r3, r1, r8, lsl #18
   13530:	andeq	r3, r1, r8, lsl #18
   13534:	andeq	r3, r1, r8, lsl #18
   13538:	andeq	r3, r1, r8, lsl #18
   1353c:	andeq	r3, r1, r8, lsl #18
   13540:	andeq	r3, r1, r8, lsl #18
   13544:	andeq	r3, r1, r8, lsl #18
   13548:	andeq	r3, r1, r8, lsl #18
   1354c:	andeq	r3, r1, r8, lsl #18
   13550:	andeq	r3, r1, r8, lsl #18
   13554:	andeq	r3, r1, r4, lsr #16
   13558:	andeq	r3, r1, r0, lsr #16
   1355c:	andeq	r3, r1, r0, lsr #16
   13560:	andeq	r3, r1, r0, ror #15
   13564:	andeq	r3, r1, r0, lsr #16
   13568:	andeq	r3, r1, r8, lsr #26
   1356c:	andeq	r3, r1, r0, lsr #16
   13570:	andeq	r3, r1, r8, ror #16
   13574:	andeq	r3, r1, r0, lsr #16
   13578:	andeq	r3, r1, r0, lsr #16
   1357c:	andeq	r3, r1, r0, lsr #16
   13580:	andeq	r3, r1, r8, lsr #26
   13584:	andeq	r3, r1, r8, lsr #26
   13588:	andeq	r3, r1, r8, lsr #26
   1358c:	andeq	r3, r1, r8, lsr #26
   13590:	andeq	r3, r1, r8, lsr #26
   13594:	andeq	r3, r1, r8, lsr #26
   13598:	andeq	r3, r1, r8, lsr #26
   1359c:	andeq	r3, r1, r8, lsr #26
   135a0:	andeq	r3, r1, r8, lsr #26
   135a4:	andeq	r3, r1, r8, lsr #26
   135a8:	andeq	r3, r1, r8, lsr #26
   135ac:	andeq	r3, r1, r8, lsr #26
   135b0:	andeq	r3, r1, r8, lsr #26
   135b4:	andeq	r3, r1, r8, lsr #26
   135b8:	andeq	r3, r1, r8, lsr #26
   135bc:	andeq	r3, r1, r8, lsr #26
   135c0:	andeq	r3, r1, r0, lsr #16
   135c4:	andeq	r3, r1, r0, lsr #16
   135c8:	andeq	r3, r1, r0, lsr #16
   135cc:	andeq	r3, r1, r0, lsr #16
   135d0:	andeq	r3, r1, r8, asr #3
   135d4:	andeq	r3, r1, r8, lsl #18
   135d8:	andeq	r3, r1, r8, lsr #26
   135dc:	andeq	r3, r1, r8, lsr #26
   135e0:	andeq	r3, r1, r8, lsr #26
   135e4:	andeq	r3, r1, r8, lsr #26
   135e8:	andeq	r3, r1, r8, lsr #26
   135ec:	andeq	r3, r1, r8, lsr #26
   135f0:	andeq	r3, r1, r8, lsr #26
   135f4:	andeq	r3, r1, r8, lsr #26
   135f8:	andeq	r3, r1, r8, lsr #26
   135fc:	andeq	r3, r1, r8, lsr #26
   13600:	andeq	r3, r1, r8, lsr #26
   13604:	andeq	r3, r1, r8, lsr #26
   13608:	andeq	r3, r1, r8, lsr #26
   1360c:	andeq	r3, r1, r8, lsr #26
   13610:	andeq	r3, r1, r8, lsr #26
   13614:	andeq	r3, r1, r8, lsr #26
   13618:	andeq	r3, r1, r8, lsr #26
   1361c:	andeq	r3, r1, r8, lsr #26
   13620:	andeq	r3, r1, r8, lsr #26
   13624:	andeq	r3, r1, r8, lsr #26
   13628:	andeq	r3, r1, r8, lsr #26
   1362c:	andeq	r3, r1, r8, lsr #26
   13630:	andeq	r3, r1, r8, lsr #26
   13634:	andeq	r3, r1, r8, lsr #26
   13638:	andeq	r3, r1, r8, lsr #26
   1363c:	andeq	r3, r1, r8, lsr #26
   13640:	andeq	r3, r1, r0, lsr #16
   13644:	andeq	r3, r1, r0, lsl #14
   13648:	andeq	r3, r1, r8, lsr #26
   1364c:	andeq	r3, r1, r0, lsr #16
   13650:	andeq	r3, r1, r8, lsr #26
   13654:	andeq	r3, r1, r0, lsr #16
   13658:	andeq	r3, r1, r8, lsr #26
   1365c:	andeq	r3, r1, r8, lsr #26
   13660:	andeq	r3, r1, r8, lsr #26
   13664:	andeq	r3, r1, r8, lsr #26
   13668:	andeq	r3, r1, r8, lsr #26
   1366c:	andeq	r3, r1, r8, lsr #26
   13670:	andeq	r3, r1, r8, lsr #26
   13674:	andeq	r3, r1, r8, lsr #26
   13678:	andeq	r3, r1, r8, lsr #26
   1367c:	andeq	r3, r1, r8, lsr #26
   13680:	andeq	r3, r1, r8, lsr #26
   13684:	andeq	r3, r1, r8, lsr #26
   13688:	andeq	r3, r1, r8, lsr #26
   1368c:	andeq	r3, r1, r8, lsr #26
   13690:	andeq	r3, r1, r8, lsr #26
   13694:	andeq	r3, r1, r8, lsr #26
   13698:	andeq	r3, r1, r8, lsr #26
   1369c:	andeq	r3, r1, r8, lsr #26
   136a0:	andeq	r3, r1, r8, lsr #26
   136a4:	andeq	r3, r1, r8, lsr #26
   136a8:	andeq	r3, r1, r8, lsr #26
   136ac:	andeq	r3, r1, r8, lsr #26
   136b0:	andeq	r3, r1, r8, lsr #26
   136b4:	andeq	r3, r1, r8, lsr #26
   136b8:	andeq	r3, r1, r8, lsr #26
   136bc:	andeq	r3, r1, r8, lsr #26
   136c0:	andeq	r3, r1, r0, asr #15
   136c4:	andeq	r3, r1, r0, lsr #16
   136c8:	andeq	r3, r1, r0, asr #15
   136cc:	andeq	r3, r1, r0, ror #15
   136d0:	mov	r3, #0
   136d4:	str	r3, [sp, #44]	; 0x2c
   136d8:	mov	r4, #9
   136dc:	mov	r3, #116	; 0x74
   136e0:	b	13364 <__snprintf_chk@plt+0x1ff8>
   136e4:	mov	r3, #0
   136e8:	str	r3, [sp, #44]	; 0x2c
   136ec:	mov	r4, #11
   136f0:	mov	r3, #118	; 0x76
   136f4:	b	1337c <__snprintf_chk@plt+0x2010>
   136f8:	mov	r3, #0
   136fc:	str	r3, [sp, #44]	; 0x2c
   13700:	cmp	sl, #2
   13704:	beq	13728 <__snprintf_chk@plt+0x23bc>
   13708:	ldr	r3, [sp, #28]
   1370c:	ldr	r2, [sp, #32]
   13710:	and	r3, r3, r2
   13714:	tst	r7, r3
   13718:	bne	13d9c <__snprintf_chk@plt+0x2a30>
   1371c:	mov	r4, #92	; 0x5c
   13720:	mov	r3, r4
   13724:	b	1337c <__snprintf_chk@plt+0x2010>
   13728:	ldr	r3, [sp, #32]
   1372c:	cmp	r3, #0
   13730:	bne	13f24 <__snprintf_chk@plt+0x2bb8>
   13734:	mov	r5, r3
   13738:	mov	r4, #92	; 0x5c
   1373c:	eor	r3, r3, #1
   13740:	ldr	r2, [sp, #36]	; 0x24
   13744:	and	r3, r3, r2
   13748:	tst	r3, #255	; 0xff
   1374c:	beq	13454 <__snprintf_chk@plt+0x20e8>
   13750:	cmp	r9, fp
   13754:	movhi	r3, #39	; 0x27
   13758:	strbhi	r3, [r8, fp]
   1375c:	add	r3, fp, #1
   13760:	cmp	r9, r3
   13764:	movhi	r2, #39	; 0x27
   13768:	strbhi	r2, [r8, r3]
   1376c:	add	fp, fp, #2
   13770:	mov	r3, #0
   13774:	str	r3, [sp, #36]	; 0x24
   13778:	b	13454 <__snprintf_chk@plt+0x20e8>
   1377c:	mov	r3, #110	; 0x6e
   13780:	b	13364 <__snprintf_chk@plt+0x1ff8>
   13784:	mov	r3, #110	; 0x6e
   13788:	b	13364 <__snprintf_chk@plt+0x1ff8>
   1378c:	mov	r3, #0
   13790:	str	r3, [sp, #44]	; 0x2c
   13794:	mov	r3, #110	; 0x6e
   13798:	b	13364 <__snprintf_chk@plt+0x1ff8>
   1379c:	mov	r8, r9
   137a0:	mov	r7, #2
   137a4:	b	13f44 <__snprintf_chk@plt+0x2bd8>
   137a8:	mov	r3, #97	; 0x61
   137ac:	b	1337c <__snprintf_chk@plt+0x2010>
   137b0:	mov	r3, #97	; 0x61
   137b4:	b	1337c <__snprintf_chk@plt+0x2010>
   137b8:	mov	r3, #0
   137bc:	str	r3, [sp, #44]	; 0x2c
   137c0:	ldr	r3, [sp, #24]
   137c4:	cmn	r3, #1
   137c8:	beq	137f4 <__snprintf_chk@plt+0x2488>
   137cc:	ldr	r3, [sp, #24]
   137d0:	subs	r3, r3, #1
   137d4:	movne	r3, #1
   137d8:	cmp	r3, #0
   137dc:	bne	13d5c <__snprintf_chk@plt+0x29f0>
   137e0:	cmp	r6, #0
   137e4:	beq	13824 <__snprintf_chk@plt+0x24b8>
   137e8:	mov	r5, #0
   137ec:	mov	r3, r5
   137f0:	b	13390 <__snprintf_chk@plt+0x2024>
   137f4:	ldr	r3, [sp, #48]	; 0x30
   137f8:	ldrb	r3, [r3, #1]
   137fc:	adds	r3, r3, #0
   13800:	movne	r3, #1
   13804:	b	137d8 <__snprintf_chk@plt+0x246c>
   13808:	mov	r3, #0
   1380c:	str	r3, [sp, #44]	; 0x2c
   13810:	b	137e0 <__snprintf_chk@plt+0x2474>
   13814:	mov	r3, #0
   13818:	str	r3, [sp, #44]	; 0x2c
   1381c:	b	13824 <__snprintf_chk@plt+0x24b8>
   13820:	ldr	r5, [sp, #44]	; 0x2c
   13824:	ldr	r3, [sp, #32]
   13828:	cmp	sl, #2
   1382c:	movne	r3, #0
   13830:	andeq	r3, r3, #1
   13834:	cmp	r3, #0
   13838:	beq	13390 <__snprintf_chk@plt+0x2024>
   1383c:	mov	r8, r9
   13840:	mov	r7, #2
   13844:	b	13f44 <__snprintf_chk@plt+0x2bd8>
   13848:	ldr	r5, [sp, #32]
   1384c:	b	13824 <__snprintf_chk@plt+0x24b8>
   13850:	mov	r3, #0
   13854:	str	r3, [sp, #44]	; 0x2c
   13858:	mov	r5, r3
   1385c:	b	13824 <__snprintf_chk@plt+0x24b8>
   13860:	mov	r3, #0
   13864:	str	r3, [sp, #44]	; 0x2c
   13868:	cmp	sl, #2
   1386c:	strne	r5, [sp, #68]	; 0x44
   13870:	movne	r3, #0
   13874:	movne	r4, #39	; 0x27
   13878:	bne	13390 <__snprintf_chk@plt+0x2024>
   1387c:	ldr	r3, [sp, #32]
   13880:	cmp	r3, #0
   13884:	bne	13f30 <__snprintf_chk@plt+0x2bc4>
   13888:	ldr	r3, [sp, #72]	; 0x48
   1388c:	clz	r3, r3
   13890:	lsr	r3, r3, #5
   13894:	cmp	r9, #0
   13898:	moveq	r3, #0
   1389c:	cmp	r3, #0
   138a0:	movne	r3, #0
   138a4:	bne	138cc <__snprintf_chk@plt+0x2560>
   138a8:	cmp	r9, fp
   138ac:	movhi	r3, #39	; 0x27
   138b0:	strbhi	r3, [r8, fp]
   138b4:	add	r3, fp, #1
   138b8:	cmp	r9, r3
   138bc:	movhi	r2, #92	; 0x5c
   138c0:	strbhi	r2, [r8, r3]
   138c4:	mov	r3, r9
   138c8:	ldr	r9, [sp, #72]	; 0x48
   138cc:	add	r2, fp, #2
   138d0:	cmp	r2, r3
   138d4:	movcc	r1, #39	; 0x27
   138d8:	strbcc	r1, [r8, r2]
   138dc:	add	fp, fp, #3
   138e0:	str	r5, [sp, #68]	; 0x44
   138e4:	ldr	r2, [sp, #32]
   138e8:	str	r2, [sp, #36]	; 0x24
   138ec:	str	r9, [sp, #72]	; 0x48
   138f0:	mov	r9, r3
   138f4:	mov	r4, #39	; 0x27
   138f8:	mov	r3, #0
   138fc:	b	133dc <__snprintf_chk@plt+0x2070>
   13900:	mov	r3, #0
   13904:	str	r3, [sp, #44]	; 0x2c
   13908:	ldr	r7, [sp, #76]	; 0x4c
   1390c:	cmp	r7, #1
   13910:	bne	13948 <__snprintf_chk@plt+0x25dc>
   13914:	bl	11210 <__ctype_b_loc@plt>
   13918:	ldr	r2, [r0]
   1391c:	lsl	r3, r4, #1
   13920:	ldrh	r5, [r2, r3]
   13924:	ubfx	r5, r5, #14, #1
   13928:	mov	ip, r7
   1392c:	eor	r3, r5, #1
   13930:	ldr	r2, [sp, #28]
   13934:	and	r3, r3, r2
   13938:	ands	r3, r3, #255	; 0xff
   1393c:	beq	13390 <__snprintf_chk@plt+0x2024>
   13940:	mov	r5, #0
   13944:	b	13ba4 <__snprintf_chk@plt+0x2838>
   13948:	mov	r2, #0
   1394c:	mov	r3, #0
   13950:	strd	r2, [sp, #104]	; 0x68
   13954:	ldr	r3, [sp, #24]
   13958:	cmn	r3, #1
   1395c:	beq	13980 <__snprintf_chk@plt+0x2614>
   13960:	mov	r3, #0
   13964:	str	r4, [sp, #88]	; 0x58
   13968:	str	fp, [sp, #92]	; 0x5c
   1396c:	str	r8, [sp, #56]	; 0x38
   13970:	mov	r8, r3
   13974:	str	r9, [sp, #84]	; 0x54
   13978:	ldr	r9, [sp, #48]	; 0x30
   1397c:	b	13acc <__snprintf_chk@plt+0x2760>
   13980:	ldr	r0, [sp, #48]	; 0x30
   13984:	bl	11228 <strlen@plt>
   13988:	str	r0, [sp, #24]
   1398c:	b	13960 <__snprintf_chk@plt+0x25f4>
   13990:	mov	r1, fp
   13994:	ldr	r4, [sp, #88]	; 0x58
   13998:	mov	r2, r8
   1399c:	mov	ip, r8
   139a0:	ldr	fp, [sp, #92]	; 0x5c
   139a4:	ldr	r8, [sp, #56]	; 0x38
   139a8:	ldr	r9, [sp, #84]	; 0x54
   139ac:	ldr	r0, [sp, #24]
   139b0:	cmp	r7, r0
   139b4:	bcs	13b6c <__snprintf_chk@plt+0x2800>
   139b8:	ldrb	r3, [r1]
   139bc:	cmp	r3, #0
   139c0:	beq	13b74 <__snprintf_chk@plt+0x2808>
   139c4:	mov	r3, r1
   139c8:	add	r2, r2, #1
   139cc:	add	r1, r6, r2
   139d0:	cmp	r0, r1
   139d4:	bls	13b7c <__snprintf_chk@plt+0x2810>
   139d8:	ldrb	r1, [r3, #1]!
   139dc:	cmp	r1, #0
   139e0:	bne	139c8 <__snprintf_chk@plt+0x265c>
   139e4:	mov	ip, r2
   139e8:	mov	r5, #0
   139ec:	b	13b9c <__snprintf_chk@plt+0x2830>
   139f0:	ldr	r3, [sp, #56]	; 0x38
   139f4:	str	r3, [sp, #64]	; 0x40
   139f8:	ldr	r8, [sp, #84]	; 0x54
   139fc:	mov	r7, #2
   13a00:	b	13f44 <__snprintf_chk@plt+0x2bd8>
   13a04:	cmp	r2, r7
   13a08:	beq	13aa8 <__snprintf_chk@plt+0x273c>
   13a0c:	ldrb	r3, [r2], #1
   13a10:	sub	r3, r3, #91	; 0x5b
   13a14:	cmp	r3, #33	; 0x21
   13a18:	ldrls	pc, [pc, r3, lsl #2]
   13a1c:	b	13a04 <__snprintf_chk@plt+0x2698>
   13a20:	strdeq	r3, [r1], -r0
   13a24:	strdeq	r3, [r1], -r0
   13a28:	andeq	r3, r1, r4, lsl #20
   13a2c:	strdeq	r3, [r1], -r0
   13a30:	andeq	r3, r1, r4, lsl #20
   13a34:	strdeq	r3, [r1], -r0
   13a38:	andeq	r3, r1, r4, lsl #20
   13a3c:	andeq	r3, r1, r4, lsl #20
   13a40:	andeq	r3, r1, r4, lsl #20
   13a44:	andeq	r3, r1, r4, lsl #20
   13a48:	andeq	r3, r1, r4, lsl #20
   13a4c:	andeq	r3, r1, r4, lsl #20
   13a50:	andeq	r3, r1, r4, lsl #20
   13a54:	andeq	r3, r1, r4, lsl #20
   13a58:	andeq	r3, r1, r4, lsl #20
   13a5c:	andeq	r3, r1, r4, lsl #20
   13a60:	andeq	r3, r1, r4, lsl #20
   13a64:	andeq	r3, r1, r4, lsl #20
   13a68:	andeq	r3, r1, r4, lsl #20
   13a6c:	andeq	r3, r1, r4, lsl #20
   13a70:	andeq	r3, r1, r4, lsl #20
   13a74:	andeq	r3, r1, r4, lsl #20
   13a78:	andeq	r3, r1, r4, lsl #20
   13a7c:	andeq	r3, r1, r4, lsl #20
   13a80:	andeq	r3, r1, r4, lsl #20
   13a84:	andeq	r3, r1, r4, lsl #20
   13a88:	andeq	r3, r1, r4, lsl #20
   13a8c:	andeq	r3, r1, r4, lsl #20
   13a90:	andeq	r3, r1, r4, lsl #20
   13a94:	andeq	r3, r1, r4, lsl #20
   13a98:	andeq	r3, r1, r4, lsl #20
   13a9c:	andeq	r3, r1, r4, lsl #20
   13aa0:	andeq	r3, r1, r4, lsl #20
   13aa4:	strdeq	r3, [r1], -r0
   13aa8:	ldr	r0, [sp, #100]	; 0x64
   13aac:	bl	1112c <iswprint@plt>
   13ab0:	cmp	r0, #0
   13ab4:	moveq	r5, #0
   13ab8:	add	r8, r8, r4
   13abc:	add	r0, sp, #104	; 0x68
   13ac0:	bl	110c0 <mbsinit@plt>
   13ac4:	cmp	r0, #0
   13ac8:	bne	13b38 <__snprintf_chk@plt+0x27cc>
   13acc:	add	r7, r6, r8
   13ad0:	add	fp, r9, r7
   13ad4:	add	r3, sp, #104	; 0x68
   13ad8:	ldr	r2, [sp, #24]
   13adc:	sub	r2, r2, r7
   13ae0:	mov	r1, fp
   13ae4:	add	r0, sp, #100	; 0x64
   13ae8:	bl	15e5c <__snprintf_chk@plt+0x4af0>
   13aec:	subs	r4, r0, #0
   13af0:	beq	13b88 <__snprintf_chk@plt+0x281c>
   13af4:	cmn	r4, #1
   13af8:	beq	13b50 <__snprintf_chk@plt+0x27e4>
   13afc:	cmn	r4, #2
   13b00:	beq	13990 <__snprintf_chk@plt+0x2624>
   13b04:	ldr	r3, [sp, #32]
   13b08:	cmp	sl, #2
   13b0c:	movne	r3, #0
   13b10:	andeq	r3, r3, #1
   13b14:	cmp	r3, #0
   13b18:	beq	13aa8 <__snprintf_chk@plt+0x273c>
   13b1c:	cmp	r4, #1
   13b20:	bls	13aa8 <__snprintf_chk@plt+0x273c>
   13b24:	add	r2, r7, #1
   13b28:	add	r2, r9, r2
   13b2c:	add	r3, r9, r4
   13b30:	add	r7, r3, r7
   13b34:	b	13a0c <__snprintf_chk@plt+0x26a0>
   13b38:	ldr	r4, [sp, #88]	; 0x58
   13b3c:	mov	ip, r8
   13b40:	ldr	fp, [sp, #92]	; 0x5c
   13b44:	ldr	r8, [sp, #56]	; 0x38
   13b48:	ldr	r9, [sp, #84]	; 0x54
   13b4c:	b	13b9c <__snprintf_chk@plt+0x2830>
   13b50:	ldr	r4, [sp, #88]	; 0x58
   13b54:	mov	ip, r8
   13b58:	ldr	fp, [sp, #92]	; 0x5c
   13b5c:	ldr	r8, [sp, #56]	; 0x38
   13b60:	ldr	r9, [sp, #84]	; 0x54
   13b64:	mov	r5, #0
   13b68:	b	13b9c <__snprintf_chk@plt+0x2830>
   13b6c:	mov	r5, #0
   13b70:	b	13b9c <__snprintf_chk@plt+0x2830>
   13b74:	mov	r5, #0
   13b78:	b	13b9c <__snprintf_chk@plt+0x2830>
   13b7c:	mov	ip, r2
   13b80:	mov	r5, #0
   13b84:	b	13b9c <__snprintf_chk@plt+0x2830>
   13b88:	ldr	r4, [sp, #88]	; 0x58
   13b8c:	mov	ip, r8
   13b90:	ldr	fp, [sp, #92]	; 0x5c
   13b94:	ldr	r8, [sp, #56]	; 0x38
   13b98:	ldr	r9, [sp, #84]	; 0x54
   13b9c:	cmp	ip, #1
   13ba0:	bls	1392c <__snprintf_chk@plt+0x25c0>
   13ba4:	add	lr, r6, ip
   13ba8:	ldr	r3, [sp, #48]	; 0x30
   13bac:	add	r1, r3, r6
   13bb0:	mov	r3, #0
   13bb4:	eor	r0, r5, #1
   13bb8:	ldr	r2, [sp, #28]
   13bbc:	and	r0, r0, r2
   13bc0:	uxtb	r0, r0
   13bc4:	str	r0, [sp, #56]	; 0x38
   13bc8:	mov	r7, #92	; 0x5c
   13bcc:	ldr	ip, [sp, #36]	; 0x24
   13bd0:	str	r5, [sp, #84]	; 0x54
   13bd4:	ldr	r2, [sp, #44]	; 0x2c
   13bd8:	b	13c48 <__snprintf_chk@plt+0x28dc>
   13bdc:	cmp	r2, #0
   13be0:	beq	13bf0 <__snprintf_chk@plt+0x2884>
   13be4:	cmp	r9, fp
   13be8:	strbhi	r7, [r8, fp]
   13bec:	add	fp, fp, #1
   13bf0:	add	r5, r6, #1
   13bf4:	cmp	r5, lr
   13bf8:	bcs	13d04 <__snprintf_chk@plt+0x2998>
   13bfc:	eor	r2, r3, #1
   13c00:	and	r2, r2, ip
   13c04:	ands	r2, r2, #255	; 0xff
   13c08:	beq	13d20 <__snprintf_chk@plt+0x29b4>
   13c0c:	cmp	r9, fp
   13c10:	movhi	r2, #39	; 0x27
   13c14:	strbhi	r2, [r8, fp]
   13c18:	add	r2, fp, #1
   13c1c:	cmp	r9, r2
   13c20:	movhi	ip, #39	; 0x27
   13c24:	strbhi	ip, [r8, r2]
   13c28:	add	fp, fp, #2
   13c2c:	ldr	ip, [sp, #56]	; 0x38
   13c30:	mov	r2, ip
   13c34:	mov	r6, r5
   13c38:	cmp	r9, fp
   13c3c:	strbhi	r4, [r8, fp]
   13c40:	add	fp, fp, #1
   13c44:	ldrb	r4, [r1, #1]!
   13c48:	cmp	r0, #0
   13c4c:	beq	13bdc <__snprintf_chk@plt+0x2870>
   13c50:	ldr	r3, [sp, #32]
   13c54:	cmp	r3, #0
   13c58:	bne	13eec <__snprintf_chk@plt+0x2b80>
   13c5c:	eor	r3, ip, #1
   13c60:	cmp	sl, #2
   13c64:	movne	r3, #0
   13c68:	andeq	r3, r3, #1
   13c6c:	cmp	r3, #0
   13c70:	beq	13ca8 <__snprintf_chk@plt+0x293c>
   13c74:	cmp	r9, fp
   13c78:	movhi	ip, #39	; 0x27
   13c7c:	strbhi	ip, [r8, fp]
   13c80:	add	ip, fp, #1
   13c84:	cmp	r9, ip
   13c88:	movhi	r5, #36	; 0x24
   13c8c:	strbhi	r5, [r8, ip]
   13c90:	add	ip, fp, #2
   13c94:	cmp	r9, ip
   13c98:	movhi	r5, #39	; 0x27
   13c9c:	strbhi	r5, [r8, ip]
   13ca0:	add	fp, fp, #3
   13ca4:	mov	ip, r3
   13ca8:	cmp	r9, fp
   13cac:	strbhi	r7, [r8, fp]
   13cb0:	add	r3, fp, #1
   13cb4:	cmp	r9, r3
   13cb8:	bls	13cc8 <__snprintf_chk@plt+0x295c>
   13cbc:	lsr	r5, r4, #6
   13cc0:	add	r5, r5, #48	; 0x30
   13cc4:	strb	r5, [r8, r3]
   13cc8:	add	r3, fp, #2
   13ccc:	cmp	r9, r3
   13cd0:	bls	13ce0 <__snprintf_chk@plt+0x2974>
   13cd4:	ubfx	r5, r4, #3, #3
   13cd8:	add	r5, r5, #48	; 0x30
   13cdc:	strb	r5, [r8, r3]
   13ce0:	add	fp, fp, #3
   13ce4:	and	r4, r4, #7
   13ce8:	add	r4, r4, #48	; 0x30
   13cec:	add	r5, r6, #1
   13cf0:	cmp	r5, lr
   13cf4:	bcs	13d10 <__snprintf_chk@plt+0x29a4>
   13cf8:	ldr	r3, [sp, #56]	; 0x38
   13cfc:	mov	r6, r5
   13d00:	b	13c38 <__snprintf_chk@plt+0x28cc>
   13d04:	str	ip, [sp, #36]	; 0x24
   13d08:	ldr	r5, [sp, #84]	; 0x54
   13d0c:	b	1373c <__snprintf_chk@plt+0x23d0>
   13d10:	str	ip, [sp, #36]	; 0x24
   13d14:	ldr	r5, [sp, #84]	; 0x54
   13d18:	mov	r3, r0
   13d1c:	b	1373c <__snprintf_chk@plt+0x23d0>
   13d20:	mov	r6, r5
   13d24:	b	13c38 <__snprintf_chk@plt+0x28cc>
   13d28:	ldr	r3, [sp, #44]	; 0x2c
   13d2c:	b	13390 <__snprintf_chk@plt+0x2024>
   13d30:	mov	r5, #0
   13d34:	mov	r3, r5
   13d38:	mov	r4, #63	; 0x3f
   13d3c:	b	13390 <__snprintf_chk@plt+0x2024>
   13d40:	mov	r5, #0
   13d44:	mov	r3, r5
   13d48:	mov	r4, #63	; 0x3f
   13d4c:	b	13390 <__snprintf_chk@plt+0x2024>
   13d50:	mov	r5, #0
   13d54:	mov	r3, r5
   13d58:	b	13390 <__snprintf_chk@plt+0x2024>
   13d5c:	mov	r5, #0
   13d60:	mov	r3, r5
   13d64:	b	13390 <__snprintf_chk@plt+0x2024>
   13d68:	ldr	r5, [sp, #44]	; 0x2c
   13d6c:	ldr	r3, [sp, #32]
   13d70:	b	13390 <__snprintf_chk@plt+0x2024>
   13d74:	ldr	r5, [sp, #44]	; 0x2c
   13d78:	mov	r3, #0
   13d7c:	str	r3, [sp, #44]	; 0x2c
   13d80:	b	13390 <__snprintf_chk@plt+0x2024>
   13d84:	mov	r4, r3
   13d88:	mov	r5, #0
   13d8c:	b	133e8 <__snprintf_chk@plt+0x207c>
   13d90:	mov	r5, #0
   13d94:	mov	r4, #97	; 0x61
   13d98:	b	133e8 <__snprintf_chk@plt+0x207c>
   13d9c:	mov	r5, #0
   13da0:	mov	r3, r5
   13da4:	mov	r4, #92	; 0x5c
   13da8:	b	1373c <__snprintf_chk@plt+0x23d0>
   13dac:	ldr	r3, [sp, #48]	; 0x30
   13db0:	ldrb	r5, [r3, r6]
   13db4:	adds	r5, r5, #0
   13db8:	movne	r5, #1
   13dbc:	b	1348c <__snprintf_chk@plt+0x2120>
   13dc0:	cmp	sl, #2
   13dc4:	movne	r3, #0
   13dc8:	moveq	r3, #1
   13dcc:	ldr	r1, [sp, #32]
   13dd0:	cmp	fp, #0
   13dd4:	andeq	r2, r3, r1
   13dd8:	movne	r2, #0
   13ddc:	cmp	r2, #0
   13de0:	bne	13f00 <__snprintf_chk@plt+0x2b94>
   13de4:	eor	r2, r1, #1
   13de8:	uxtb	r2, r2
   13dec:	and	r3, r3, r2
   13df0:	ldr	r1, [sp, #68]	; 0x44
   13df4:	ands	r3, r1, r3
   13df8:	beq	13e8c <__snprintf_chk@plt+0x2b20>
   13dfc:	ldr	r2, [sp, #40]	; 0x28
   13e00:	cmp	r2, #0
   13e04:	bne	13e3c <__snprintf_chk@plt+0x2ad0>
   13e08:	ldr	r2, [sp, #72]	; 0x48
   13e0c:	adds	r2, r2, #0
   13e10:	movne	r2, #1
   13e14:	cmp	r9, #0
   13e18:	movne	r2, #0
   13e1c:	str	r2, [sp, #68]	; 0x44
   13e20:	mov	sl, #2
   13e24:	ldr	r1, [sp, #40]	; 0x28
   13e28:	str	r1, [sp, #32]
   13e2c:	cmp	r2, #0
   13e30:	beq	13e80 <__snprintf_chk@plt+0x2b14>
   13e34:	ldr	r9, [sp, #72]	; 0x48
   13e38:	b	12b94 <__snprintf_chk@plt+0x1828>
   13e3c:	ldr	r3, [sp, #168]	; 0xa8
   13e40:	str	r3, [sp, #16]
   13e44:	ldr	r3, [sp, #164]	; 0xa4
   13e48:	str	r3, [sp, #12]
   13e4c:	ldr	r3, [sp, #160]	; 0xa0
   13e50:	str	r3, [sp, #8]
   13e54:	ldr	r3, [sp, #156]	; 0x9c
   13e58:	str	r3, [sp, #4]
   13e5c:	mov	r3, #5
   13e60:	str	r3, [sp]
   13e64:	ldr	r3, [sp, #24]
   13e68:	ldr	r2, [sp, #48]	; 0x30
   13e6c:	ldr	r1, [sp, #72]	; 0x48
   13e70:	ldr	r0, [sp, #64]	; 0x40
   13e74:	bl	12b1c <__snprintf_chk@plt+0x17b0>
   13e78:	mov	fp, r0
   13e7c:	b	13f9c <__snprintf_chk@plt+0x2c30>
   13e80:	mov	r8, r9
   13e84:	mov	r2, r3
   13e88:	b	13e90 <__snprintf_chk@plt+0x2b24>
   13e8c:	mov	r8, r9
   13e90:	ldr	r3, [sp, #60]	; 0x3c
   13e94:	cmp	r3, #0
   13e98:	moveq	r2, #0
   13e9c:	andne	r2, r2, #1
   13ea0:	cmp	r2, #0
   13ea4:	beq	13ed4 <__snprintf_chk@plt+0x2b68>
   13ea8:	mov	r2, r3
   13eac:	ldrb	r3, [r3]
   13eb0:	cmp	r3, #0
   13eb4:	beq	13ed4 <__snprintf_chk@plt+0x2b68>
   13eb8:	ldr	r1, [sp, #64]	; 0x40
   13ebc:	cmp	r8, fp
   13ec0:	strbhi	r3, [r1, fp]
   13ec4:	add	fp, fp, #1
   13ec8:	ldrb	r3, [r2, #1]!
   13ecc:	cmp	r3, #0
   13ed0:	bne	13ebc <__snprintf_chk@plt+0x2b50>
   13ed4:	cmp	r8, fp
   13ed8:	bls	13f9c <__snprintf_chk@plt+0x2c30>
   13edc:	mov	r3, #0
   13ee0:	ldr	r2, [sp, #64]	; 0x40
   13ee4:	strb	r3, [r2, fp]
   13ee8:	b	13f9c <__snprintf_chk@plt+0x2c30>
   13eec:	mov	r8, r9
   13ef0:	mov	r7, sl
   13ef4:	ldr	r3, [sp, #32]
   13ef8:	str	r3, [sp, #28]
   13efc:	b	13f44 <__snprintf_chk@plt+0x2bd8>
   13f00:	mov	r8, r9
   13f04:	mov	r7, #2
   13f08:	b	13f44 <__snprintf_chk@plt+0x2bd8>
   13f0c:	mov	r8, r9
   13f10:	mov	r7, sl
   13f14:	b	13f44 <__snprintf_chk@plt+0x2bd8>
   13f18:	mov	r8, r9
   13f1c:	mov	r7, sl
   13f20:	b	13f44 <__snprintf_chk@plt+0x2bd8>
   13f24:	mov	r8, r9
   13f28:	mov	r7, sl
   13f2c:	b	13f44 <__snprintf_chk@plt+0x2bd8>
   13f30:	mov	r8, r9
   13f34:	mov	r7, sl
   13f38:	b	13f44 <__snprintf_chk@plt+0x2bd8>
   13f3c:	mov	r8, r9
   13f40:	mov	r7, sl
   13f44:	ldr	r3, [sp, #28]
   13f48:	cmp	r7, #2
   13f4c:	movne	r3, #0
   13f50:	andeq	r3, r3, #1
   13f54:	cmp	r3, #0
   13f58:	movne	r7, #4
   13f5c:	ldr	r3, [sp, #168]	; 0xa8
   13f60:	str	r3, [sp, #16]
   13f64:	ldr	r3, [sp, #164]	; 0xa4
   13f68:	str	r3, [sp, #12]
   13f6c:	mov	r3, #0
   13f70:	str	r3, [sp, #8]
   13f74:	ldr	r3, [sp, #156]	; 0x9c
   13f78:	bic	r3, r3, #2
   13f7c:	str	r3, [sp, #4]
   13f80:	str	r7, [sp]
   13f84:	ldr	r3, [sp, #24]
   13f88:	ldr	r2, [sp, #48]	; 0x30
   13f8c:	mov	r1, r8
   13f90:	ldr	r0, [sp, #64]	; 0x40
   13f94:	bl	12b1c <__snprintf_chk@plt+0x17b0>
   13f98:	mov	fp, r0
   13f9c:	mov	r0, fp
   13fa0:	add	sp, sp, #116	; 0x74
   13fa4:	ldrd	r4, [sp]
   13fa8:	ldrd	r6, [sp, #8]
   13fac:	ldrd	r8, [sp, #16]
   13fb0:	ldrd	sl, [sp, #24]
   13fb4:	add	sp, sp, #32
   13fb8:	pop	{pc}		; (ldr pc, [sp], #4)
   13fbc:	mov	r8, r9
   13fc0:	mov	r7, sl
   13fc4:	b	13f5c <__snprintf_chk@plt+0x2bf0>
   13fc8:	add	fp, fp, #4
   13fcc:	str	r3, [sp, #36]	; 0x24
   13fd0:	mov	r5, #0
   13fd4:	mov	r4, #48	; 0x30
   13fd8:	b	13390 <__snprintf_chk@plt+0x2024>
   13fdc:	mov	r3, #1
   13fe0:	str	r3, [sp, #32]
   13fe4:	str	r3, [sp, #28]
   13fe8:	str	r3, [sp, #52]	; 0x34
   13fec:	movw	r3, #27868	; 0x6cdc
   13ff0:	movt	r3, #1
   13ff4:	str	r3, [sp, #60]	; 0x3c
   13ff8:	mov	fp, #0
   13ffc:	mov	sl, #5
   14000:	b	12bf4 <__snprintf_chk@plt+0x1888>
   14004:	ldr	r3, [sp, #48]	; 0x30
   14008:	ldrb	r4, [r3, r6]
   1400c:	cmp	r4, #126	; 0x7e
   14010:	ldrls	pc, [pc, r4, lsl #2]
   14014:	b	13900 <__snprintf_chk@plt+0x2594>
   14018:	andeq	r3, r1, r8, lsl #1
   1401c:	andeq	r3, r1, r0, lsl #18
   14020:	andeq	r3, r1, r0, lsl #18
   14024:	andeq	r3, r1, r0, lsl #18
   14028:	andeq	r3, r1, r0, lsl #18
   1402c:	andeq	r3, r1, r0, lsl #18
   14030:	andeq	r3, r1, r0, lsl #18
   14034:	muleq	r1, r0, sp
   14038:	andeq	r3, r1, ip, lsr #6
   1403c:	ldrdeq	r3, [r1], -r0
   14040:	andeq	r3, r1, ip, lsl #15
   14044:	andeq	r3, r1, r4, ror #13
   14048:	andeq	r3, r1, r0, asr #6
   1404c:	andeq	r3, r1, r4, asr r3
   14050:	andeq	r3, r1, r0, lsl #18
   14054:	andeq	r3, r1, r0, lsl #18
   14058:	andeq	r3, r1, r0, lsl #18
   1405c:	andeq	r3, r1, r0, lsl #18
   14060:	andeq	r3, r1, r0, lsl #18
   14064:	andeq	r3, r1, r0, lsl #18
   14068:	andeq	r3, r1, r0, lsl #18
   1406c:	andeq	r3, r1, r0, lsl #18
   14070:	andeq	r3, r1, r0, lsl #18
   14074:	andeq	r3, r1, r0, lsl #18
   14078:	andeq	r3, r1, r0, lsl #18
   1407c:	andeq	r3, r1, r0, lsl #18
   14080:	andeq	r3, r1, r0, lsl #18
   14084:	andeq	r3, r1, r0, lsl #18
   14088:	andeq	r3, r1, r0, lsl #18
   1408c:	andeq	r3, r1, r0, lsl #18
   14090:	andeq	r3, r1, r0, lsl #18
   14094:	andeq	r3, r1, r0, lsl #18
   14098:	andeq	r3, r1, r4, lsl r8
   1409c:	andeq	r3, r1, r0, asr r8
   140a0:	andeq	r3, r1, r0, asr r8
   140a4:	andeq	r3, r1, r8, lsl #16
   140a8:	andeq	r3, r1, r0, asr r8
   140ac:	andeq	r3, r1, r4, ror sp
   140b0:	andeq	r3, r1, r0, asr r8
   140b4:	andeq	r3, r1, r0, ror #16
   140b8:	andeq	r3, r1, r0, asr r8
   140bc:	andeq	r3, r1, r0, asr r8
   140c0:	andeq	r3, r1, r0, asr r8
   140c4:	andeq	r3, r1, r4, ror sp
   140c8:	andeq	r3, r1, r4, ror sp
   140cc:	andeq	r3, r1, r4, ror sp
   140d0:	andeq	r3, r1, r4, ror sp
   140d4:	andeq	r3, r1, r4, ror sp
   140d8:	andeq	r3, r1, r4, ror sp
   140dc:	andeq	r3, r1, r4, ror sp
   140e0:	andeq	r3, r1, r4, ror sp
   140e4:	andeq	r3, r1, r4, ror sp
   140e8:	andeq	r3, r1, r4, ror sp
   140ec:	andeq	r3, r1, r4, ror sp
   140f0:	andeq	r3, r1, r4, ror sp
   140f4:	andeq	r3, r1, r4, ror sp
   140f8:	andeq	r3, r1, r4, ror sp
   140fc:	andeq	r3, r1, r4, ror sp
   14100:	andeq	r3, r1, r4, ror sp
   14104:	andeq	r3, r1, r0, asr r8
   14108:	andeq	r3, r1, r0, asr r8
   1410c:	andeq	r3, r1, r0, asr r8
   14110:	andeq	r3, r1, r0, asr r8
   14114:	andeq	r3, r1, r0, asr #3
   14118:	andeq	r3, r1, r0, lsl #18
   1411c:	andeq	r3, r1, r4, ror sp
   14120:	andeq	r3, r1, r4, ror sp
   14124:	andeq	r3, r1, r4, ror sp
   14128:	andeq	r3, r1, r4, ror sp
   1412c:	andeq	r3, r1, r4, ror sp
   14130:	andeq	r3, r1, r4, ror sp
   14134:	andeq	r3, r1, r4, ror sp
   14138:	andeq	r3, r1, r4, ror sp
   1413c:	andeq	r3, r1, r4, ror sp
   14140:	andeq	r3, r1, r4, ror sp
   14144:	andeq	r3, r1, r4, ror sp
   14148:	andeq	r3, r1, r4, ror sp
   1414c:	andeq	r3, r1, r4, ror sp
   14150:	andeq	r3, r1, r4, ror sp
   14154:	andeq	r3, r1, r4, ror sp
   14158:	andeq	r3, r1, r4, ror sp
   1415c:	andeq	r3, r1, r4, ror sp
   14160:	andeq	r3, r1, r4, ror sp
   14164:	andeq	r3, r1, r4, ror sp
   14168:	andeq	r3, r1, r4, ror sp
   1416c:	andeq	r3, r1, r4, ror sp
   14170:	andeq	r3, r1, r4, ror sp
   14174:	andeq	r3, r1, r4, ror sp
   14178:	andeq	r3, r1, r4, ror sp
   1417c:	andeq	r3, r1, r4, ror sp
   14180:	andeq	r3, r1, r4, ror sp
   14184:	andeq	r3, r1, r0, asr r8
   14188:	strdeq	r3, [r1], -r8
   1418c:	andeq	r3, r1, r4, ror sp
   14190:	andeq	r3, r1, r0, asr r8
   14194:	andeq	r3, r1, r4, ror sp
   14198:	andeq	r3, r1, r0, asr r8
   1419c:	andeq	r3, r1, r4, ror sp
   141a0:	andeq	r3, r1, r4, ror sp
   141a4:	andeq	r3, r1, r4, ror sp
   141a8:	andeq	r3, r1, r4, ror sp
   141ac:	andeq	r3, r1, r4, ror sp
   141b0:	andeq	r3, r1, r4, ror sp
   141b4:	andeq	r3, r1, r4, ror sp
   141b8:	andeq	r3, r1, r4, ror sp
   141bc:	andeq	r3, r1, r4, ror sp
   141c0:	andeq	r3, r1, r4, ror sp
   141c4:	andeq	r3, r1, r4, ror sp
   141c8:	andeq	r3, r1, r4, ror sp
   141cc:	andeq	r3, r1, r4, ror sp
   141d0:	andeq	r3, r1, r4, ror sp
   141d4:	andeq	r3, r1, r4, ror sp
   141d8:	andeq	r3, r1, r4, ror sp
   141dc:	andeq	r3, r1, r4, ror sp
   141e0:	andeq	r3, r1, r4, ror sp
   141e4:	andeq	r3, r1, r4, ror sp
   141e8:	andeq	r3, r1, r4, ror sp
   141ec:	andeq	r3, r1, r4, ror sp
   141f0:	andeq	r3, r1, r4, ror sp
   141f4:	andeq	r3, r1, r4, ror sp
   141f8:	andeq	r3, r1, r4, ror sp
   141fc:	andeq	r3, r1, r4, ror sp
   14200:	andeq	r3, r1, r4, ror sp
   14204:			; <UNDEFINED> instruction: 0x000137b8
   14208:	andeq	r3, r1, r0, asr r8
   1420c:			; <UNDEFINED> instruction: 0x000137b8
   14210:	andeq	r3, r1, r8, lsl #16
   14214:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14218:	strd	r6, [sp, #8]
   1421c:	strd	r8, [sp, #16]
   14220:	strd	sl, [sp, #24]
   14224:	str	lr, [sp, #32]
   14228:	sub	sp, sp, #52	; 0x34
   1422c:	mov	r5, r0
   14230:	str	r1, [sp, #24]
   14234:	str	r2, [sp, #28]
   14238:	mov	r4, r3
   1423c:	bl	1124c <__errno_location@plt>
   14240:	str	r0, [sp, #32]
   14244:	ldr	r3, [r0]
   14248:	str	r3, [sp, #36]	; 0x24
   1424c:	movw	r3, #33080	; 0x8138
   14250:	movt	r3, #2
   14254:	ldr	r6, [r3]
   14258:	cmn	r5, #-2147483647	; 0x80000001
   1425c:	movne	r3, #0
   14260:	moveq	r3, #1
   14264:	orrs	r3, r3, r5, lsr #31
   14268:	bne	143cc <__snprintf_chk@plt+0x3060>
   1426c:	movw	r3, #33080	; 0x8138
   14270:	movt	r3, #2
   14274:	ldr	r2, [r3, #4]
   14278:	cmp	r2, r5
   1427c:	bgt	142ec <__snprintf_chk@plt+0x2f80>
   14280:	str	r2, [sp, #44]	; 0x2c
   14284:	add	r3, r3, #8
   14288:	cmp	r6, r3
   1428c:	beq	143d0 <__snprintf_chk@plt+0x3064>
   14290:	sub	r2, r5, r2
   14294:	mov	r3, #8
   14298:	str	r3, [sp]
   1429c:	mvn	r3, #-2147483648	; 0x80000000
   142a0:	add	r2, r2, #1
   142a4:	add	r1, sp, #44	; 0x2c
   142a8:	mov	r0, r6
   142ac:	bl	156a0 <__snprintf_chk@plt+0x4334>
   142b0:	mov	r6, r0
   142b4:	movw	r3, #33080	; 0x8138
   142b8:	movt	r3, #2
   142bc:	str	r0, [r3]
   142c0:	movw	r7, #33080	; 0x8138
   142c4:	movt	r7, #2
   142c8:	ldr	r0, [r7, #4]
   142cc:	ldr	r2, [sp, #44]	; 0x2c
   142d0:	sub	r2, r2, r0
   142d4:	lsl	r2, r2, #3
   142d8:	mov	r1, #0
   142dc:	add	r0, r6, r0, lsl #3
   142e0:	bl	11270 <memset@plt>
   142e4:	ldr	r3, [sp, #44]	; 0x2c
   142e8:	str	r3, [r7, #4]
   142ec:	add	fp, r6, r5, lsl #3
   142f0:	ldr	r8, [r6, r5, lsl #3]
   142f4:	ldr	r7, [fp, #4]
   142f8:	ldr	r3, [r4, #4]
   142fc:	orr	r9, r3, #1
   14300:	add	sl, r4, #8
   14304:	ldr	r3, [r4, #44]	; 0x2c
   14308:	str	r3, [sp, #16]
   1430c:	ldr	r3, [r4, #40]	; 0x28
   14310:	str	r3, [sp, #12]
   14314:	str	sl, [sp, #8]
   14318:	str	r9, [sp, #4]
   1431c:	ldr	r3, [r4]
   14320:	str	r3, [sp]
   14324:	ldr	r3, [sp, #28]
   14328:	ldr	r2, [sp, #24]
   1432c:	mov	r1, r8
   14330:	mov	r0, r7
   14334:	bl	12b1c <__snprintf_chk@plt+0x17b0>
   14338:	cmp	r8, r0
   1433c:	bhi	143a0 <__snprintf_chk@plt+0x3034>
   14340:	add	r8, r0, #1
   14344:	str	r8, [r6, r5, lsl #3]
   14348:	movw	r3, #33640	; 0x8368
   1434c:	movt	r3, #2
   14350:	cmp	r7, r3
   14354:	beq	14360 <__snprintf_chk@plt+0x2ff4>
   14358:	mov	r0, r7
   1435c:	bl	12858 <__snprintf_chk@plt+0x14ec>
   14360:	mov	r0, r8
   14364:	bl	1549c <__snprintf_chk@plt+0x4130>
   14368:	mov	r7, r0
   1436c:	str	r0, [fp, #4]
   14370:	ldr	r3, [r4, #44]	; 0x2c
   14374:	str	r3, [sp, #16]
   14378:	ldr	r3, [r4, #40]	; 0x28
   1437c:	str	r3, [sp, #12]
   14380:	str	sl, [sp, #8]
   14384:	str	r9, [sp, #4]
   14388:	ldr	r3, [r4]
   1438c:	str	r3, [sp]
   14390:	ldr	r3, [sp, #28]
   14394:	ldr	r2, [sp, #24]
   14398:	mov	r1, r8
   1439c:	bl	12b1c <__snprintf_chk@plt+0x17b0>
   143a0:	ldr	r3, [sp, #32]
   143a4:	ldr	r2, [sp, #36]	; 0x24
   143a8:	str	r2, [r3]
   143ac:	mov	r0, r7
   143b0:	add	sp, sp, #52	; 0x34
   143b4:	ldrd	r4, [sp]
   143b8:	ldrd	r6, [sp, #8]
   143bc:	ldrd	r8, [sp, #16]
   143c0:	ldrd	sl, [sp, #24]
   143c4:	add	sp, sp, #32
   143c8:	pop	{pc}		; (ldr pc, [sp], #4)
   143cc:	bl	11360 <abort@plt>
   143d0:	sub	r2, r5, r2
   143d4:	mov	r3, #8
   143d8:	str	r3, [sp]
   143dc:	mvn	r3, #-2147483648	; 0x80000000
   143e0:	add	r2, r2, #1
   143e4:	add	r1, sp, #44	; 0x2c
   143e8:	mov	r0, #0
   143ec:	bl	156a0 <__snprintf_chk@plt+0x4334>
   143f0:	mov	r6, r0
   143f4:	movw	r3, #33080	; 0x8138
   143f8:	movt	r3, #2
   143fc:	str	r0, [r3]
   14400:	ldrd	r2, [r3, #8]
   14404:	strd	r2, [r0]
   14408:	b	142c0 <__snprintf_chk@plt+0x2f54>
   1440c:	strd	r4, [sp, #-16]!
   14410:	str	r6, [sp, #8]
   14414:	str	lr, [sp, #12]
   14418:	mov	r4, r0
   1441c:	bl	1124c <__errno_location@plt>
   14420:	mov	r5, r0
   14424:	ldr	r6, [r0]
   14428:	cmp	r4, #0
   1442c:	ldr	r3, [pc, #32]	; 14454 <__snprintf_chk@plt+0x30e8>
   14430:	moveq	r4, r3
   14434:	mov	r1, #48	; 0x30
   14438:	mov	r0, r4
   1443c:	bl	15810 <__snprintf_chk@plt+0x44a4>
   14440:	str	r6, [r5]
   14444:	ldrd	r4, [sp]
   14448:	ldr	r6, [sp, #8]
   1444c:	add	sp, sp, #12
   14450:	pop	{pc}		; (ldr pc, [sp], #4)
   14454:	andeq	r8, r2, r8, ror #8
   14458:	subs	r3, r0, #0
   1445c:	ldr	r2, [pc, #8]	; 1446c <__snprintf_chk@plt+0x3100>
   14460:	moveq	r3, r2
   14464:	ldr	r0, [r3]
   14468:	bx	lr
   1446c:	andeq	r8, r2, r8, ror #8
   14470:	subs	r3, r0, #0
   14474:	ldr	r2, [pc, #8]	; 14484 <__snprintf_chk@plt+0x3118>
   14478:	moveq	r3, r2
   1447c:	str	r1, [r3]
   14480:	bx	lr
   14484:	andeq	r8, r2, r8, ror #8
   14488:	push	{lr}		; (str lr, [sp, #-4]!)
   1448c:	subs	r3, r0, #0
   14490:	ldr	r0, [pc, #44]	; 144c4 <__snprintf_chk@plt+0x3158>
   14494:	moveq	r3, r0
   14498:	add	r3, r3, #8
   1449c:	lsr	lr, r1, #5
   144a0:	and	r1, r1, #31
   144a4:	ldr	ip, [r3, lr, lsl #2]
   144a8:	lsr	r0, ip, r1
   144ac:	eor	r2, r2, r0
   144b0:	and	r2, r2, #1
   144b4:	eor	r1, ip, r2, lsl r1
   144b8:	str	r1, [r3, lr, lsl #2]
   144bc:	and	r0, r0, #1
   144c0:	pop	{pc}		; (ldr pc, [sp], #4)
   144c4:	andeq	r8, r2, r8, ror #8
   144c8:	subs	r3, r0, #0
   144cc:	ldr	r2, [pc, #12]	; 144e0 <__snprintf_chk@plt+0x3174>
   144d0:	moveq	r3, r2
   144d4:	ldr	r0, [r3, #4]
   144d8:	str	r1, [r3, #4]
   144dc:	bx	lr
   144e0:	andeq	r8, r2, r8, ror #8
   144e4:	subs	r3, r0, #0
   144e8:	ldr	r0, [pc, #44]	; 1451c <__snprintf_chk@plt+0x31b0>
   144ec:	moveq	r3, r0
   144f0:	mov	r0, #10
   144f4:	str	r0, [r3]
   144f8:	cmp	r2, #0
   144fc:	cmpne	r1, #0
   14500:	beq	14510 <__snprintf_chk@plt+0x31a4>
   14504:	str	r1, [r3, #40]	; 0x28
   14508:	str	r2, [r3, #44]	; 0x2c
   1450c:	bx	lr
   14510:	str	r4, [sp, #-8]!
   14514:	str	lr, [sp, #4]
   14518:	bl	11360 <abort@plt>
   1451c:	andeq	r8, r2, r8, ror #8
   14520:	strd	r4, [sp, #-32]!	; 0xffffffe0
   14524:	strd	r6, [sp, #8]
   14528:	strd	r8, [sp, #16]
   1452c:	str	sl, [sp, #24]
   14530:	str	lr, [sp, #28]
   14534:	sub	sp, sp, #24
   14538:	mov	r7, r0
   1453c:	mov	r8, r1
   14540:	mov	r9, r2
   14544:	mov	sl, r3
   14548:	ldr	r4, [sp, #56]	; 0x38
   1454c:	cmp	r4, #0
   14550:	ldr	r3, [pc, #104]	; 145c0 <__snprintf_chk@plt+0x3254>
   14554:	moveq	r4, r3
   14558:	bl	1124c <__errno_location@plt>
   1455c:	mov	r5, r0
   14560:	ldr	r6, [r0]
   14564:	ldr	r3, [r4, #44]	; 0x2c
   14568:	str	r3, [sp, #16]
   1456c:	ldr	r3, [r4, #40]	; 0x28
   14570:	str	r3, [sp, #12]
   14574:	add	r3, r4, #8
   14578:	str	r3, [sp, #8]
   1457c:	ldr	r3, [r4, #4]
   14580:	str	r3, [sp, #4]
   14584:	ldr	r3, [r4]
   14588:	str	r3, [sp]
   1458c:	mov	r3, sl
   14590:	mov	r2, r9
   14594:	mov	r1, r8
   14598:	mov	r0, r7
   1459c:	bl	12b1c <__snprintf_chk@plt+0x17b0>
   145a0:	str	r6, [r5]
   145a4:	add	sp, sp, #24
   145a8:	ldrd	r4, [sp]
   145ac:	ldrd	r6, [sp, #8]
   145b0:	ldrd	r8, [sp, #16]
   145b4:	ldr	sl, [sp, #24]
   145b8:	add	sp, sp, #28
   145bc:	pop	{pc}		; (ldr pc, [sp], #4)
   145c0:	andeq	r8, r2, r8, ror #8
   145c4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   145c8:	strd	r6, [sp, #8]
   145cc:	strd	r8, [sp, #16]
   145d0:	strd	sl, [sp, #24]
   145d4:	str	lr, [sp, #32]
   145d8:	sub	sp, sp, #44	; 0x2c
   145dc:	mov	r8, r0
   145e0:	mov	sl, r1
   145e4:	mov	r6, r2
   145e8:	subs	r4, r3, #0
   145ec:	ldr	r3, [pc, #200]	; 146bc <__snprintf_chk@plt+0x3350>
   145f0:	moveq	r4, r3
   145f4:	bl	1124c <__errno_location@plt>
   145f8:	mov	r7, r0
   145fc:	ldr	fp, [r0]
   14600:	ldr	r5, [r4, #4]
   14604:	cmp	r6, #0
   14608:	orreq	r5, r5, #1
   1460c:	add	r9, r4, #8
   14610:	ldr	r3, [r4, #44]	; 0x2c
   14614:	str	r3, [sp, #16]
   14618:	ldr	r3, [r4, #40]	; 0x28
   1461c:	str	r3, [sp, #12]
   14620:	str	r9, [sp, #8]
   14624:	str	r5, [sp, #4]
   14628:	ldr	r3, [r4]
   1462c:	str	r3, [sp]
   14630:	str	sl, [sp, #36]	; 0x24
   14634:	mov	r3, sl
   14638:	str	r8, [sp, #32]
   1463c:	mov	r2, r8
   14640:	mov	r1, #0
   14644:	mov	r0, r1
   14648:	bl	12b1c <__snprintf_chk@plt+0x17b0>
   1464c:	mov	sl, r0
   14650:	add	r8, r0, #1
   14654:	mov	r0, r8
   14658:	bl	1549c <__snprintf_chk@plt+0x4130>
   1465c:	str	r0, [sp, #28]
   14660:	ldr	r3, [r4, #44]	; 0x2c
   14664:	str	r3, [sp, #16]
   14668:	ldr	r3, [r4, #40]	; 0x28
   1466c:	str	r3, [sp, #12]
   14670:	str	r9, [sp, #8]
   14674:	str	r5, [sp, #4]
   14678:	ldr	r3, [r4]
   1467c:	str	r3, [sp]
   14680:	ldr	r3, [sp, #36]	; 0x24
   14684:	ldr	r2, [sp, #32]
   14688:	mov	r1, r8
   1468c:	bl	12b1c <__snprintf_chk@plt+0x17b0>
   14690:	str	fp, [r7]
   14694:	cmp	r6, #0
   14698:	strne	sl, [r6]
   1469c:	ldr	r0, [sp, #28]
   146a0:	add	sp, sp, #44	; 0x2c
   146a4:	ldrd	r4, [sp]
   146a8:	ldrd	r6, [sp, #8]
   146ac:	ldrd	r8, [sp, #16]
   146b0:	ldrd	sl, [sp, #24]
   146b4:	add	sp, sp, #32
   146b8:	pop	{pc}		; (ldr pc, [sp], #4)
   146bc:	andeq	r8, r2, r8, ror #8
   146c0:	str	r4, [sp, #-8]!
   146c4:	str	lr, [sp, #4]
   146c8:	mov	r3, r2
   146cc:	mov	r2, #0
   146d0:	bl	145c4 <__snprintf_chk@plt+0x3258>
   146d4:	ldr	r4, [sp]
   146d8:	add	sp, sp, #4
   146dc:	pop	{pc}		; (ldr pc, [sp], #4)
   146e0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   146e4:	strd	r6, [sp, #8]
   146e8:	str	r8, [sp, #16]
   146ec:	str	lr, [sp, #20]
   146f0:	movw	r3, #33080	; 0x8138
   146f4:	movt	r3, #2
   146f8:	ldr	r7, [r3]
   146fc:	ldr	r3, [r3, #4]
   14700:	cmp	r3, #1
   14704:	ble	14730 <__snprintf_chk@plt+0x33c4>
   14708:	mov	r4, #1
   1470c:	add	r6, r7, #4
   14710:	movw	r5, #33080	; 0x8138
   14714:	movt	r5, #2
   14718:	ldr	r0, [r6, r4, lsl #3]
   1471c:	bl	12858 <__snprintf_chk@plt+0x14ec>
   14720:	add	r4, r4, #1
   14724:	ldr	r3, [r5, #4]
   14728:	cmp	r3, r4
   1472c:	bgt	14718 <__snprintf_chk@plt+0x33ac>
   14730:	ldr	r0, [r7, #4]
   14734:	movw	r3, #33640	; 0x8368
   14738:	movt	r3, #2
   1473c:	cmp	r0, r3
   14740:	beq	14764 <__snprintf_chk@plt+0x33f8>
   14744:	bl	12858 <__snprintf_chk@plt+0x14ec>
   14748:	movw	r3, #33080	; 0x8138
   1474c:	movt	r3, #2
   14750:	mov	r2, #256	; 0x100
   14754:	str	r2, [r3, #8]
   14758:	movw	r2, #33640	; 0x8368
   1475c:	movt	r2, #2
   14760:	str	r2, [r3, #12]
   14764:	ldr	r3, [pc, #64]	; 147ac <__snprintf_chk@plt+0x3440>
   14768:	cmp	r7, r3
   1476c:	beq	14788 <__snprintf_chk@plt+0x341c>
   14770:	mov	r0, r7
   14774:	bl	12858 <__snprintf_chk@plt+0x14ec>
   14778:	movw	r3, #33080	; 0x8138
   1477c:	movt	r3, #2
   14780:	add	r2, r3, #8
   14784:	str	r2, [r3]
   14788:	movw	r3, #33080	; 0x8138
   1478c:	movt	r3, #2
   14790:	mov	r2, #1
   14794:	str	r2, [r3, #4]
   14798:	ldrd	r4, [sp]
   1479c:	ldrd	r6, [sp, #8]
   147a0:	ldr	r8, [sp, #16]
   147a4:	add	sp, sp, #20
   147a8:	pop	{pc}		; (ldr pc, [sp], #4)
   147ac:	andeq	r8, r2, r0, asr #2
   147b0:	str	r4, [sp, #-8]!
   147b4:	str	lr, [sp, #4]
   147b8:	ldr	r3, [pc, #16]	; 147d0 <__snprintf_chk@plt+0x3464>
   147bc:	mvn	r2, #0
   147c0:	bl	14214 <__snprintf_chk@plt+0x2ea8>
   147c4:	ldr	r4, [sp]
   147c8:	add	sp, sp, #4
   147cc:	pop	{pc}		; (ldr pc, [sp], #4)
   147d0:	andeq	r8, r2, r8, ror #8
   147d4:	str	r4, [sp, #-8]!
   147d8:	str	lr, [sp, #4]
   147dc:	ldr	r3, [pc, #12]	; 147f0 <__snprintf_chk@plt+0x3484>
   147e0:	bl	14214 <__snprintf_chk@plt+0x2ea8>
   147e4:	ldr	r4, [sp]
   147e8:	add	sp, sp, #4
   147ec:	pop	{pc}		; (ldr pc, [sp], #4)
   147f0:	andeq	r8, r2, r8, ror #8
   147f4:	str	r4, [sp, #-8]!
   147f8:	str	lr, [sp, #4]
   147fc:	mov	r1, r0
   14800:	mov	r0, #0
   14804:	bl	147b0 <__snprintf_chk@plt+0x3444>
   14808:	ldr	r4, [sp]
   1480c:	add	sp, sp, #4
   14810:	pop	{pc}		; (ldr pc, [sp], #4)
   14814:	str	r4, [sp, #-8]!
   14818:	str	lr, [sp, #4]
   1481c:	mov	r2, r1
   14820:	mov	r1, r0
   14824:	mov	r0, #0
   14828:	bl	147d4 <__snprintf_chk@plt+0x3468>
   1482c:	ldr	r4, [sp]
   14830:	add	sp, sp, #4
   14834:	pop	{pc}		; (ldr pc, [sp], #4)
   14838:	strd	r4, [sp, #-12]!
   1483c:	str	lr, [sp, #8]
   14840:	sub	sp, sp, #52	; 0x34
   14844:	mov	r4, r0
   14848:	mov	r5, r2
   1484c:	mov	r0, sp
   14850:	bl	12988 <__snprintf_chk@plt+0x161c>
   14854:	mov	r3, sp
   14858:	mvn	r2, #0
   1485c:	mov	r1, r5
   14860:	mov	r0, r4
   14864:	bl	14214 <__snprintf_chk@plt+0x2ea8>
   14868:	add	sp, sp, #52	; 0x34
   1486c:	ldrd	r4, [sp]
   14870:	add	sp, sp, #8
   14874:	pop	{pc}		; (ldr pc, [sp], #4)
   14878:	strd	r4, [sp, #-16]!
   1487c:	str	r6, [sp, #8]
   14880:	str	lr, [sp, #12]
   14884:	sub	sp, sp, #48	; 0x30
   14888:	mov	r4, r0
   1488c:	mov	r5, r2
   14890:	mov	r6, r3
   14894:	mov	r0, sp
   14898:	bl	12988 <__snprintf_chk@plt+0x161c>
   1489c:	mov	r3, sp
   148a0:	mov	r2, r6
   148a4:	mov	r1, r5
   148a8:	mov	r0, r4
   148ac:	bl	14214 <__snprintf_chk@plt+0x2ea8>
   148b0:	add	sp, sp, #48	; 0x30
   148b4:	ldrd	r4, [sp]
   148b8:	ldr	r6, [sp, #8]
   148bc:	add	sp, sp, #12
   148c0:	pop	{pc}		; (ldr pc, [sp], #4)
   148c4:	str	r4, [sp, #-8]!
   148c8:	str	lr, [sp, #4]
   148cc:	mov	r2, r1
   148d0:	mov	r1, r0
   148d4:	mov	r0, #0
   148d8:	bl	14838 <__snprintf_chk@plt+0x34cc>
   148dc:	ldr	r4, [sp]
   148e0:	add	sp, sp, #4
   148e4:	pop	{pc}		; (ldr pc, [sp], #4)
   148e8:	str	r4, [sp, #-8]!
   148ec:	str	lr, [sp, #4]
   148f0:	mov	r3, r2
   148f4:	mov	r2, r1
   148f8:	mov	r1, r0
   148fc:	mov	r0, #0
   14900:	bl	14878 <__snprintf_chk@plt+0x350c>
   14904:	ldr	r4, [sp]
   14908:	add	sp, sp, #4
   1490c:	pop	{pc}		; (ldr pc, [sp], #4)
   14910:	strd	r4, [sp, #-12]!
   14914:	str	lr, [sp, #8]
   14918:	sub	sp, sp, #52	; 0x34
   1491c:	mov	r4, r0
   14920:	mov	r5, r1
   14924:	mov	r1, r2
   14928:	ldr	r0, [pc, #92]	; 1498c <__snprintf_chk@plt+0x3620>
   1492c:	ldrd	r2, [r0]
   14930:	strd	r2, [sp]
   14934:	ldrd	r2, [r0, #8]
   14938:	strd	r2, [sp, #8]
   1493c:	ldrd	r2, [r0, #16]
   14940:	strd	r2, [sp, #16]
   14944:	ldrd	r2, [r0, #24]
   14948:	strd	r2, [sp, #24]
   1494c:	ldrd	r2, [r0, #32]
   14950:	strd	r2, [sp, #32]
   14954:	ldrd	r2, [r0, #40]	; 0x28
   14958:	strd	r2, [sp, #40]	; 0x28
   1495c:	mov	r2, #1
   14960:	mov	r0, sp
   14964:	bl	14488 <__snprintf_chk@plt+0x311c>
   14968:	mov	r3, sp
   1496c:	mov	r2, r5
   14970:	mov	r1, r4
   14974:	mov	r0, #0
   14978:	bl	14214 <__snprintf_chk@plt+0x2ea8>
   1497c:	add	sp, sp, #52	; 0x34
   14980:	ldrd	r4, [sp]
   14984:	add	sp, sp, #8
   14988:	pop	{pc}		; (ldr pc, [sp], #4)
   1498c:	andeq	r8, r2, r8, ror #8
   14990:	str	r4, [sp, #-8]!
   14994:	str	lr, [sp, #4]
   14998:	mov	r2, r1
   1499c:	mvn	r1, #0
   149a0:	bl	14910 <__snprintf_chk@plt+0x35a4>
   149a4:	ldr	r4, [sp]
   149a8:	add	sp, sp, #4
   149ac:	pop	{pc}		; (ldr pc, [sp], #4)
   149b0:	str	r4, [sp, #-8]!
   149b4:	str	lr, [sp, #4]
   149b8:	mov	r1, #58	; 0x3a
   149bc:	bl	14990 <__snprintf_chk@plt+0x3624>
   149c0:	ldr	r4, [sp]
   149c4:	add	sp, sp, #4
   149c8:	pop	{pc}		; (ldr pc, [sp], #4)
   149cc:	str	r4, [sp, #-8]!
   149d0:	str	lr, [sp, #4]
   149d4:	mov	r2, #58	; 0x3a
   149d8:	bl	14910 <__snprintf_chk@plt+0x35a4>
   149dc:	ldr	r4, [sp]
   149e0:	add	sp, sp, #4
   149e4:	pop	{pc}		; (ldr pc, [sp], #4)
   149e8:	strd	r4, [sp, #-12]!
   149ec:	str	lr, [sp, #8]
   149f0:	sub	sp, sp, #100	; 0x64
   149f4:	mov	r4, r0
   149f8:	mov	r5, r2
   149fc:	mov	r0, sp
   14a00:	bl	12988 <__snprintf_chk@plt+0x161c>
   14a04:	ldrd	r2, [sp]
   14a08:	strd	r2, [sp, #48]	; 0x30
   14a0c:	ldrd	r2, [sp, #8]
   14a10:	strd	r2, [sp, #56]	; 0x38
   14a14:	ldrd	r2, [sp, #16]
   14a18:	strd	r2, [sp, #64]	; 0x40
   14a1c:	ldrd	r2, [sp, #24]
   14a20:	strd	r2, [sp, #72]	; 0x48
   14a24:	ldrd	r2, [sp, #32]
   14a28:	strd	r2, [sp, #80]	; 0x50
   14a2c:	ldrd	r2, [sp, #40]	; 0x28
   14a30:	strd	r2, [sp, #88]	; 0x58
   14a34:	mov	r2, #1
   14a38:	mov	r1, #58	; 0x3a
   14a3c:	add	r0, sp, #48	; 0x30
   14a40:	bl	14488 <__snprintf_chk@plt+0x311c>
   14a44:	add	r3, sp, #48	; 0x30
   14a48:	mvn	r2, #0
   14a4c:	mov	r1, r5
   14a50:	mov	r0, r4
   14a54:	bl	14214 <__snprintf_chk@plt+0x2ea8>
   14a58:	add	sp, sp, #100	; 0x64
   14a5c:	ldrd	r4, [sp]
   14a60:	add	sp, sp, #8
   14a64:	pop	{pc}		; (ldr pc, [sp], #4)
   14a68:	strd	r4, [sp, #-20]!	; 0xffffffec
   14a6c:	strd	r6, [sp, #8]
   14a70:	str	lr, [sp, #16]
   14a74:	sub	sp, sp, #52	; 0x34
   14a78:	mov	r4, r0
   14a7c:	mov	r5, r3
   14a80:	ldr	r3, [pc, #92]	; 14ae4 <__snprintf_chk@plt+0x3778>
   14a84:	ldrd	r6, [r3]
   14a88:	strd	r6, [sp]
   14a8c:	ldrd	r6, [r3, #8]
   14a90:	strd	r6, [sp, #8]
   14a94:	ldrd	r6, [r3, #16]
   14a98:	strd	r6, [sp, #16]
   14a9c:	ldrd	r6, [r3, #24]
   14aa0:	strd	r6, [sp, #24]
   14aa4:	ldrd	r6, [r3, #32]
   14aa8:	strd	r6, [sp, #32]
   14aac:	ldrd	r6, [r3, #40]	; 0x28
   14ab0:	strd	r6, [sp, #40]	; 0x28
   14ab4:	mov	r0, sp
   14ab8:	bl	144e4 <__snprintf_chk@plt+0x3178>
   14abc:	mov	r3, sp
   14ac0:	ldr	r2, [sp, #72]	; 0x48
   14ac4:	mov	r1, r5
   14ac8:	mov	r0, r4
   14acc:	bl	14214 <__snprintf_chk@plt+0x2ea8>
   14ad0:	add	sp, sp, #52	; 0x34
   14ad4:	ldrd	r4, [sp]
   14ad8:	ldrd	r6, [sp, #8]
   14adc:	add	sp, sp, #16
   14ae0:	pop	{pc}		; (ldr pc, [sp], #4)
   14ae4:	andeq	r8, r2, r8, ror #8
   14ae8:	push	{lr}		; (str lr, [sp, #-4]!)
   14aec:	sub	sp, sp, #12
   14af0:	mvn	ip, #0
   14af4:	str	ip, [sp]
   14af8:	bl	14a68 <__snprintf_chk@plt+0x36fc>
   14afc:	add	sp, sp, #12
   14b00:	pop	{pc}		; (ldr pc, [sp], #4)
   14b04:	str	r4, [sp, #-8]!
   14b08:	str	lr, [sp, #4]
   14b0c:	mov	r3, r2
   14b10:	mov	r2, r1
   14b14:	mov	r1, r0
   14b18:	mov	r0, #0
   14b1c:	bl	14ae8 <__snprintf_chk@plt+0x377c>
   14b20:	ldr	r4, [sp]
   14b24:	add	sp, sp, #4
   14b28:	pop	{pc}		; (ldr pc, [sp], #4)
   14b2c:	push	{lr}		; (str lr, [sp, #-4]!)
   14b30:	sub	sp, sp, #12
   14b34:	str	r3, [sp]
   14b38:	mov	r3, r2
   14b3c:	mov	r2, r1
   14b40:	mov	r1, r0
   14b44:	mov	r0, #0
   14b48:	bl	14a68 <__snprintf_chk@plt+0x36fc>
   14b4c:	add	sp, sp, #12
   14b50:	pop	{pc}		; (ldr pc, [sp], #4)
   14b54:	str	r4, [sp, #-8]!
   14b58:	str	lr, [sp, #4]
   14b5c:	ldr	r3, [pc, #12]	; 14b70 <__snprintf_chk@plt+0x3804>
   14b60:	bl	14214 <__snprintf_chk@plt+0x2ea8>
   14b64:	ldr	r4, [sp]
   14b68:	add	sp, sp, #4
   14b6c:	pop	{pc}		; (ldr pc, [sp], #4)
   14b70:	andeq	r8, r2, r8, asr #2
   14b74:	str	r4, [sp, #-8]!
   14b78:	str	lr, [sp, #4]
   14b7c:	mov	r2, r1
   14b80:	mov	r1, r0
   14b84:	mov	r0, #0
   14b88:	bl	14b54 <__snprintf_chk@plt+0x37e8>
   14b8c:	ldr	r4, [sp]
   14b90:	add	sp, sp, #4
   14b94:	pop	{pc}		; (ldr pc, [sp], #4)
   14b98:	str	r4, [sp, #-8]!
   14b9c:	str	lr, [sp, #4]
   14ba0:	mvn	r2, #0
   14ba4:	bl	14b54 <__snprintf_chk@plt+0x37e8>
   14ba8:	ldr	r4, [sp]
   14bac:	add	sp, sp, #4
   14bb0:	pop	{pc}		; (ldr pc, [sp], #4)
   14bb4:	str	r4, [sp, #-8]!
   14bb8:	str	lr, [sp, #4]
   14bbc:	mov	r1, r0
   14bc0:	mov	r0, #0
   14bc4:	bl	14b98 <__snprintf_chk@plt+0x382c>
   14bc8:	ldr	r4, [sp]
   14bcc:	add	sp, sp, #4
   14bd0:	pop	{pc}		; (ldr pc, [sp], #4)
   14bd4:	strd	r4, [sp, #-20]!	; 0xffffffec
   14bd8:	strd	r6, [sp, #8]
   14bdc:	str	lr, [sp, #16]
   14be0:	sub	sp, sp, #12
   14be4:	mov	r5, r0
   14be8:	mov	r6, r1
   14bec:	ldrb	r3, [r0]
   14bf0:	sub	r3, r3, #48	; 0x30
   14bf4:	cmp	r3, #9
   14bf8:	ldrhi	r7, [pc, #360]	; 14d68 <__snprintf_chk@plt+0x39fc>
   14bfc:	movhi	r4, #0
   14c00:	bls	14cc8 <__snprintf_chk@plt+0x395c>
   14c04:	mov	r1, r5
   14c08:	mov	r0, r7
   14c0c:	bl	11060 <strcmp@plt>
   14c10:	cmp	r0, #0
   14c14:	beq	14cfc <__snprintf_chk@plt+0x3990>
   14c18:	add	r4, r4, #1
   14c1c:	add	r7, r7, #12
   14c20:	cmp	r4, #35	; 0x23
   14c24:	bne	14c04 <__snprintf_chk@plt+0x3898>
   14c28:	bl	11348 <__libc_current_sigrtmin@plt>
   14c2c:	mov	r7, r0
   14c30:	bl	11234 <__libc_current_sigrtmax@plt>
   14c34:	mov	r4, r0
   14c38:	cmp	r7, #0
   14c3c:	ble	14c5c <__snprintf_chk@plt+0x38f0>
   14c40:	mov	r2, #5
   14c44:	movw	r1, #28000	; 0x6d60
   14c48:	movt	r1, #1
   14c4c:	mov	r0, r5
   14c50:	bl	11354 <strncmp@plt>
   14c54:	cmp	r0, #0
   14c58:	beq	14d28 <__snprintf_chk@plt+0x39bc>
   14c5c:	cmp	r4, #0
   14c60:	ble	14d60 <__snprintf_chk@plt+0x39f4>
   14c64:	mov	r2, #5
   14c68:	movw	r1, #28008	; 0x6d68
   14c6c:	movt	r1, #1
   14c70:	mov	r0, r5
   14c74:	bl	11354 <strncmp@plt>
   14c78:	cmp	r0, #0
   14c7c:	bne	14d60 <__snprintf_chk@plt+0x39f4>
   14c80:	mov	r2, #10
   14c84:	add	r1, sp, #4
   14c88:	add	r0, r5, #5
   14c8c:	bl	1106c <strtol@plt>
   14c90:	ldr	r3, [sp, #4]
   14c94:	ldrb	r3, [r3]
   14c98:	cmp	r3, #0
   14c9c:	bne	14d60 <__snprintf_chk@plt+0x39f4>
   14ca0:	sub	r3, r7, r4
   14ca4:	cmp	r0, r3
   14ca8:	movlt	r7, #0
   14cac:	movge	r7, #1
   14cb0:	cmp	r0, #0
   14cb4:	movgt	r7, #0
   14cb8:	cmp	r7, #0
   14cbc:	beq	14d60 <__snprintf_chk@plt+0x39f4>
   14cc0:	add	r0, r4, r0
   14cc4:	b	14d0c <__snprintf_chk@plt+0x39a0>
   14cc8:	mov	r2, #10
   14ccc:	add	r1, sp, #4
   14cd0:	bl	1106c <strtol@plt>
   14cd4:	ldr	r3, [sp, #4]
   14cd8:	ldrb	r2, [r3]
   14cdc:	cmp	r0, #64	; 0x40
   14ce0:	movgt	r3, #0
   14ce4:	movle	r3, #1
   14ce8:	cmp	r2, #0
   14cec:	movne	r3, #0
   14cf0:	cmp	r3, #0
   14cf4:	mvneq	r0, #0
   14cf8:	b	14d0c <__snprintf_chk@plt+0x39a0>
   14cfc:	movw	r3, #33144	; 0x8178
   14d00:	movt	r3, #2
   14d04:	add	r4, r4, r4, lsl #1
   14d08:	ldr	r0, [r3, r4, lsl #2]
   14d0c:	str	r0, [r6]
   14d10:	asr	r0, r0, #31
   14d14:	add	sp, sp, #12
   14d18:	ldrd	r4, [sp]
   14d1c:	ldrd	r6, [sp, #8]
   14d20:	add	sp, sp, #16
   14d24:	pop	{pc}		; (ldr pc, [sp], #4)
   14d28:	mov	r2, #10
   14d2c:	add	r1, sp, #4
   14d30:	add	r0, r5, #5
   14d34:	bl	1106c <strtol@plt>
   14d38:	ldr	r3, [sp, #4]
   14d3c:	ldrb	r3, [r3]
   14d40:	cmp	r0, #0
   14d44:	cmpge	r3, #0
   14d48:	bne	14d60 <__snprintf_chk@plt+0x39f4>
   14d4c:	sub	r4, r4, r7
   14d50:	cmp	r0, r4
   14d54:	bgt	14d60 <__snprintf_chk@plt+0x39f4>
   14d58:	add	r0, r7, r0
   14d5c:	b	14d0c <__snprintf_chk@plt+0x39a0>
   14d60:	mvn	r0, #0
   14d64:	b	14d0c <__snprintf_chk@plt+0x39a0>
   14d68:	andeq	r8, r2, ip, ror r1
   14d6c:	strd	r4, [sp, #-16]!
   14d70:	str	r6, [sp, #8]
   14d74:	str	lr, [sp, #12]
   14d78:	sub	sp, sp, #8
   14d7c:	mov	r5, r1
   14d80:	movw	r3, #33144	; 0x8178
   14d84:	movt	r3, #2
   14d88:	ldr	r3, [r3]
   14d8c:	cmp	r0, r3
   14d90:	beq	14e40 <__snprintf_chk@plt+0x3ad4>
   14d94:	mov	r4, r0
   14d98:	movw	r3, #33144	; 0x8178
   14d9c:	movt	r3, #2
   14da0:	mov	r1, #1
   14da4:	ldr	r2, [r3, #12]
   14da8:	cmp	r2, r4
   14dac:	beq	14e44 <__snprintf_chk@plt+0x3ad8>
   14db0:	add	r1, r1, #1
   14db4:	add	r3, r3, #12
   14db8:	cmp	r1, #35	; 0x23
   14dbc:	bne	14da4 <__snprintf_chk@plt+0x3a38>
   14dc0:	bl	11348 <__libc_current_sigrtmin@plt>
   14dc4:	mov	r6, r0
   14dc8:	bl	11234 <__libc_current_sigrtmax@plt>
   14dcc:	cmp	r4, r0
   14dd0:	movle	r3, #0
   14dd4:	movgt	r3, #1
   14dd8:	cmp	r4, r6
   14ddc:	orrlt	r3, r3, #1
   14de0:	cmp	r3, #0
   14de4:	bne	14e98 <__snprintf_chk@plt+0x3b2c>
   14de8:	sub	r3, r0, r6
   14dec:	add	r3, r3, r3, lsr #31
   14df0:	add	r3, r6, r3, asr #1
   14df4:	cmp	r3, r4
   14df8:	blt	14e78 <__snprintf_chk@plt+0x3b0c>
   14dfc:	movw	r3, #28000	; 0x6d60
   14e00:	movt	r3, #1
   14e04:	ldr	r2, [r3]
   14e08:	str	r2, [r5]
   14e0c:	ldrh	r3, [r3, #4]
   14e10:	strh	r3, [r5, #4]
   14e14:	subs	r0, r4, r6
   14e18:	beq	14e64 <__snprintf_chk@plt+0x3af8>
   14e1c:	str	r0, [sp]
   14e20:	movw	r3, #28016	; 0x6d70
   14e24:	movt	r3, #1
   14e28:	mvn	r2, #0
   14e2c:	mov	r1, #1
   14e30:	add	r0, r5, #5
   14e34:	bl	11258 <__sprintf_chk@plt>
   14e38:	mov	r0, #0
   14e3c:	b	14e64 <__snprintf_chk@plt+0x3af8>
   14e40:	mov	r1, #0
   14e44:	movw	r3, #33144	; 0x8178
   14e48:	movt	r3, #2
   14e4c:	add	r1, r1, r1, lsl #1
   14e50:	add	r1, r3, r1, lsl #2
   14e54:	add	r1, r1, #4
   14e58:	mov	r0, r5
   14e5c:	bl	11180 <strcpy@plt>
   14e60:	mov	r0, #0
   14e64:	add	sp, sp, #8
   14e68:	ldrd	r4, [sp]
   14e6c:	ldr	r6, [sp, #8]
   14e70:	add	sp, sp, #12
   14e74:	pop	{pc}		; (ldr pc, [sp], #4)
   14e78:	movw	r3, #28008	; 0x6d68
   14e7c:	movt	r3, #1
   14e80:	ldr	r2, [r3]
   14e84:	str	r2, [r5]
   14e88:	ldrh	r3, [r3, #4]
   14e8c:	strh	r3, [r5, #4]
   14e90:	mov	r6, r0
   14e94:	b	14e14 <__snprintf_chk@plt+0x3aa8>
   14e98:	mvn	r0, #0
   14e9c:	b	14e64 <__snprintf_chk@plt+0x3af8>
   14ea0:	strd	r4, [sp, #-16]!
   14ea4:	str	r6, [sp, #8]
   14ea8:	str	lr, [sp, #12]
   14eac:	sub	sp, sp, #32
   14eb0:	mov	r4, r0
   14eb4:	ldr	r5, [sp, #48]	; 0x30
   14eb8:	ldr	r6, [sp, #52]	; 0x34
   14ebc:	cmp	r1, #0
   14ec0:	beq	14f8c <__snprintf_chk@plt+0x3c20>
   14ec4:	str	r3, [sp, #4]
   14ec8:	str	r2, [sp]
   14ecc:	mov	r3, r1
   14ed0:	movw	r2, #28020	; 0x6d74
   14ed4:	movt	r2, #1
   14ed8:	mov	r1, #1
   14edc:	bl	112b8 <__fprintf_chk@plt>
   14ee0:	mov	r2, #5
   14ee4:	movw	r1, #28040	; 0x6d88
   14ee8:	movt	r1, #1
   14eec:	mov	r0, #0
   14ef0:	bl	110f0 <dcgettext@plt>
   14ef4:	movw	r3, #2022	; 0x7e6
   14ef8:	str	r3, [sp]
   14efc:	mov	r3, r0
   14f00:	movw	r2, #28768	; 0x7060
   14f04:	movt	r2, #1
   14f08:	mov	r1, #1
   14f0c:	mov	r0, r4
   14f10:	bl	112b8 <__fprintf_chk@plt>
   14f14:	mov	r1, r4
   14f18:	mov	r0, #10
   14f1c:	bl	110e4 <fputc_unlocked@plt>
   14f20:	mov	r2, #5
   14f24:	movw	r1, #28044	; 0x6d8c
   14f28:	movt	r1, #1
   14f2c:	mov	r0, #0
   14f30:	bl	110f0 <dcgettext@plt>
   14f34:	movw	r3, #28216	; 0x6e38
   14f38:	movt	r3, #1
   14f3c:	mov	r2, r0
   14f40:	mov	r1, #1
   14f44:	mov	r0, r4
   14f48:	bl	112b8 <__fprintf_chk@plt>
   14f4c:	mov	r1, r4
   14f50:	mov	r0, #10
   14f54:	bl	110e4 <fputc_unlocked@plt>
   14f58:	cmp	r6, #9
   14f5c:	ldrls	pc, [pc, r6, lsl #2]
   14f60:	b	15264 <__snprintf_chk@plt+0x3ef8>
   14f64:	ldrdeq	r4, [r1], -r0
   14f68:	andeq	r4, r1, r8, lsr #31
   14f6c:	andeq	r4, r1, r4, ror #31
   14f70:	andeq	r5, r1, r8, lsl r0
   14f74:	andeq	r5, r1, r4, asr r0
   14f78:	muleq	r1, r8, r0
   14f7c:	andeq	r5, r1, r4, ror #1
   14f80:	andeq	r5, r1, r8, lsr r1
   14f84:	muleq	r1, r4, r1
   14f88:	strdeq	r5, [r1], -r8
   14f8c:	str	r3, [sp]
   14f90:	mov	r3, r2
   14f94:	movw	r2, #28032	; 0x6d80
   14f98:	movt	r2, #1
   14f9c:	mov	r1, #1
   14fa0:	bl	112b8 <__fprintf_chk@plt>
   14fa4:	b	14ee0 <__snprintf_chk@plt+0x3b74>
   14fa8:	mov	r2, #5
   14fac:	movw	r1, #28252	; 0x6e5c
   14fb0:	movt	r1, #1
   14fb4:	mov	r0, #0
   14fb8:	bl	110f0 <dcgettext@plt>
   14fbc:	ldr	r3, [r5]
   14fc0:	mov	r2, r0
   14fc4:	mov	r1, #1
   14fc8:	mov	r0, r4
   14fcc:	bl	112b8 <__fprintf_chk@plt>
   14fd0:	add	sp, sp, #32
   14fd4:	ldrd	r4, [sp]
   14fd8:	ldr	r6, [sp, #8]
   14fdc:	add	sp, sp, #12
   14fe0:	pop	{pc}		; (ldr pc, [sp], #4)
   14fe4:	mov	r2, #5
   14fe8:	movw	r1, #28268	; 0x6e6c
   14fec:	movt	r1, #1
   14ff0:	mov	r0, #0
   14ff4:	bl	110f0 <dcgettext@plt>
   14ff8:	ldr	r3, [r5, #4]
   14ffc:	str	r3, [sp]
   15000:	ldr	r3, [r5]
   15004:	mov	r2, r0
   15008:	mov	r1, #1
   1500c:	mov	r0, r4
   15010:	bl	112b8 <__fprintf_chk@plt>
   15014:	b	14fd0 <__snprintf_chk@plt+0x3c64>
   15018:	mov	r2, #5
   1501c:	movw	r1, #28292	; 0x6e84
   15020:	movt	r1, #1
   15024:	mov	r0, #0
   15028:	bl	110f0 <dcgettext@plt>
   1502c:	ldr	r3, [r5, #8]
   15030:	str	r3, [sp, #4]
   15034:	ldr	r3, [r5, #4]
   15038:	str	r3, [sp]
   1503c:	ldr	r3, [r5]
   15040:	mov	r2, r0
   15044:	mov	r1, #1
   15048:	mov	r0, r4
   1504c:	bl	112b8 <__fprintf_chk@plt>
   15050:	b	14fd0 <__snprintf_chk@plt+0x3c64>
   15054:	mov	r2, #5
   15058:	movw	r1, #28320	; 0x6ea0
   1505c:	movt	r1, #1
   15060:	mov	r0, #0
   15064:	bl	110f0 <dcgettext@plt>
   15068:	ldr	r3, [r5, #12]
   1506c:	str	r3, [sp, #8]
   15070:	ldr	r3, [r5, #8]
   15074:	str	r3, [sp, #4]
   15078:	ldr	r3, [r5, #4]
   1507c:	str	r3, [sp]
   15080:	ldr	r3, [r5]
   15084:	mov	r2, r0
   15088:	mov	r1, #1
   1508c:	mov	r0, r4
   15090:	bl	112b8 <__fprintf_chk@plt>
   15094:	b	14fd0 <__snprintf_chk@plt+0x3c64>
   15098:	mov	r2, #5
   1509c:	movw	r1, #28352	; 0x6ec0
   150a0:	movt	r1, #1
   150a4:	mov	r0, #0
   150a8:	bl	110f0 <dcgettext@plt>
   150ac:	ldr	r3, [r5, #16]
   150b0:	str	r3, [sp, #12]
   150b4:	ldr	r3, [r5, #12]
   150b8:	str	r3, [sp, #8]
   150bc:	ldr	r3, [r5, #8]
   150c0:	str	r3, [sp, #4]
   150c4:	ldr	r3, [r5, #4]
   150c8:	str	r3, [sp]
   150cc:	ldr	r3, [r5]
   150d0:	mov	r2, r0
   150d4:	mov	r1, #1
   150d8:	mov	r0, r4
   150dc:	bl	112b8 <__fprintf_chk@plt>
   150e0:	b	14fd0 <__snprintf_chk@plt+0x3c64>
   150e4:	mov	r2, #5
   150e8:	movw	r1, #28388	; 0x6ee4
   150ec:	movt	r1, #1
   150f0:	mov	r0, #0
   150f4:	bl	110f0 <dcgettext@plt>
   150f8:	ldr	r3, [r5, #20]
   150fc:	str	r3, [sp, #16]
   15100:	ldr	r3, [r5, #16]
   15104:	str	r3, [sp, #12]
   15108:	ldr	r3, [r5, #12]
   1510c:	str	r3, [sp, #8]
   15110:	ldr	r3, [r5, #8]
   15114:	str	r3, [sp, #4]
   15118:	ldr	r3, [r5, #4]
   1511c:	str	r3, [sp]
   15120:	ldr	r3, [r5]
   15124:	mov	r2, r0
   15128:	mov	r1, #1
   1512c:	mov	r0, r4
   15130:	bl	112b8 <__fprintf_chk@plt>
   15134:	b	14fd0 <__snprintf_chk@plt+0x3c64>
   15138:	mov	r2, #5
   1513c:	movw	r1, #28428	; 0x6f0c
   15140:	movt	r1, #1
   15144:	mov	r0, #0
   15148:	bl	110f0 <dcgettext@plt>
   1514c:	ldr	r3, [r5, #24]
   15150:	str	r3, [sp, #20]
   15154:	ldr	r3, [r5, #20]
   15158:	str	r3, [sp, #16]
   1515c:	ldr	r3, [r5, #16]
   15160:	str	r3, [sp, #12]
   15164:	ldr	r3, [r5, #12]
   15168:	str	r3, [sp, #8]
   1516c:	ldr	r3, [r5, #8]
   15170:	str	r3, [sp, #4]
   15174:	ldr	r3, [r5, #4]
   15178:	str	r3, [sp]
   1517c:	ldr	r3, [r5]
   15180:	mov	r2, r0
   15184:	mov	r1, #1
   15188:	mov	r0, r4
   1518c:	bl	112b8 <__fprintf_chk@plt>
   15190:	b	14fd0 <__snprintf_chk@plt+0x3c64>
   15194:	mov	r2, #5
   15198:	movw	r1, #28472	; 0x6f38
   1519c:	movt	r1, #1
   151a0:	mov	r0, #0
   151a4:	bl	110f0 <dcgettext@plt>
   151a8:	ldr	r3, [r5, #28]
   151ac:	str	r3, [sp, #24]
   151b0:	ldr	r3, [r5, #24]
   151b4:	str	r3, [sp, #20]
   151b8:	ldr	r3, [r5, #20]
   151bc:	str	r3, [sp, #16]
   151c0:	ldr	r3, [r5, #16]
   151c4:	str	r3, [sp, #12]
   151c8:	ldr	r3, [r5, #12]
   151cc:	str	r3, [sp, #8]
   151d0:	ldr	r3, [r5, #8]
   151d4:	str	r3, [sp, #4]
   151d8:	ldr	r3, [r5, #4]
   151dc:	str	r3, [sp]
   151e0:	ldr	r3, [r5]
   151e4:	mov	r2, r0
   151e8:	mov	r1, #1
   151ec:	mov	r0, r4
   151f0:	bl	112b8 <__fprintf_chk@plt>
   151f4:	b	14fd0 <__snprintf_chk@plt+0x3c64>
   151f8:	mov	r2, #5
   151fc:	movw	r1, #28520	; 0x6f68
   15200:	movt	r1, #1
   15204:	mov	r0, #0
   15208:	bl	110f0 <dcgettext@plt>
   1520c:	ldr	r3, [r5, #32]
   15210:	str	r3, [sp, #28]
   15214:	ldr	r3, [r5, #28]
   15218:	str	r3, [sp, #24]
   1521c:	ldr	r3, [r5, #24]
   15220:	str	r3, [sp, #20]
   15224:	ldr	r3, [r5, #20]
   15228:	str	r3, [sp, #16]
   1522c:	ldr	r3, [r5, #16]
   15230:	str	r3, [sp, #12]
   15234:	ldr	r3, [r5, #12]
   15238:	str	r3, [sp, #8]
   1523c:	ldr	r3, [r5, #8]
   15240:	str	r3, [sp, #4]
   15244:	ldr	r3, [r5, #4]
   15248:	str	r3, [sp]
   1524c:	ldr	r3, [r5]
   15250:	mov	r2, r0
   15254:	mov	r1, #1
   15258:	mov	r0, r4
   1525c:	bl	112b8 <__fprintf_chk@plt>
   15260:	b	14fd0 <__snprintf_chk@plt+0x3c64>
   15264:	mov	r2, #5
   15268:	movw	r1, #28572	; 0x6f9c
   1526c:	movt	r1, #1
   15270:	mov	r0, #0
   15274:	bl	110f0 <dcgettext@plt>
   15278:	ldr	r3, [r5, #32]
   1527c:	str	r3, [sp, #28]
   15280:	ldr	r3, [r5, #28]
   15284:	str	r3, [sp, #24]
   15288:	ldr	r3, [r5, #24]
   1528c:	str	r3, [sp, #20]
   15290:	ldr	r3, [r5, #20]
   15294:	str	r3, [sp, #16]
   15298:	ldr	r3, [r5, #16]
   1529c:	str	r3, [sp, #12]
   152a0:	ldr	r3, [r5, #12]
   152a4:	str	r3, [sp, #8]
   152a8:	ldr	r3, [r5, #8]
   152ac:	str	r3, [sp, #4]
   152b0:	ldr	r3, [r5, #4]
   152b4:	str	r3, [sp]
   152b8:	ldr	r3, [r5]
   152bc:	mov	r2, r0
   152c0:	mov	r1, #1
   152c4:	mov	r0, r4
   152c8:	bl	112b8 <__fprintf_chk@plt>
   152cc:	b	14fd0 <__snprintf_chk@plt+0x3c64>
   152d0:	strd	r4, [sp, #-12]!
   152d4:	str	lr, [sp, #8]
   152d8:	sub	sp, sp, #12
   152dc:	ldr	r5, [sp, #24]
   152e0:	ldr	ip, [r5]
   152e4:	cmp	ip, #0
   152e8:	beq	15320 <__snprintf_chk@plt+0x3fb4>
   152ec:	mov	lr, r5
   152f0:	mov	ip, #0
   152f4:	add	ip, ip, #1
   152f8:	ldr	r4, [lr, #4]!
   152fc:	cmp	r4, #0
   15300:	bne	152f4 <__snprintf_chk@plt+0x3f88>
   15304:	str	ip, [sp, #4]
   15308:	str	r5, [sp]
   1530c:	bl	14ea0 <__snprintf_chk@plt+0x3b34>
   15310:	add	sp, sp, #12
   15314:	ldrd	r4, [sp]
   15318:	add	sp, sp, #8
   1531c:	pop	{pc}		; (ldr pc, [sp], #4)
   15320:	mov	ip, #0
   15324:	b	15304 <__snprintf_chk@plt+0x3f98>
   15328:	strd	r4, [sp, #-12]!
   1532c:	str	lr, [sp, #8]
   15330:	sub	sp, sp, #52	; 0x34
   15334:	ldr	r5, [sp, #64]	; 0x40
   15338:	add	r4, sp, #8
   1533c:	mov	ip, #0
   15340:	ldr	lr, [r5], #4
   15344:	str	lr, [r4], #4
   15348:	cmp	lr, #0
   1534c:	beq	1535c <__snprintf_chk@plt+0x3ff0>
   15350:	add	ip, ip, #1
   15354:	cmp	ip, #10
   15358:	bne	15340 <__snprintf_chk@plt+0x3fd4>
   1535c:	str	ip, [sp, #4]
   15360:	add	ip, sp, #8
   15364:	str	ip, [sp]
   15368:	bl	14ea0 <__snprintf_chk@plt+0x3b34>
   1536c:	add	sp, sp, #52	; 0x34
   15370:	ldrd	r4, [sp]
   15374:	add	sp, sp, #8
   15378:	pop	{pc}		; (ldr pc, [sp], #4)
   1537c:	push	{r3}		; (str r3, [sp, #-4]!)
   15380:	push	{lr}		; (str lr, [sp, #-4]!)
   15384:	sub	sp, sp, #16
   15388:	add	r3, sp, #24
   1538c:	str	r3, [sp, #12]
   15390:	str	r3, [sp]
   15394:	ldr	r3, [sp, #20]
   15398:	bl	15328 <__snprintf_chk@plt+0x3fbc>
   1539c:	add	sp, sp, #16
   153a0:	pop	{lr}		; (ldr lr, [sp], #4)
   153a4:	add	sp, sp, #4
   153a8:	bx	lr
   153ac:	str	r4, [sp, #-8]!
   153b0:	str	lr, [sp, #4]
   153b4:	movw	r3, #33588	; 0x8334
   153b8:	movt	r3, #2
   153bc:	ldr	r1, [r3]
   153c0:	mov	r0, #10
   153c4:	bl	110e4 <fputc_unlocked@plt>
   153c8:	mov	r2, #5
   153cc:	movw	r1, #28632	; 0x6fd8
   153d0:	movt	r1, #1
   153d4:	mov	r0, #0
   153d8:	bl	110f0 <dcgettext@plt>
   153dc:	movw	r2, #28652	; 0x6fec
   153e0:	movt	r2, #1
   153e4:	mov	r1, r0
   153e8:	mov	r0, #1
   153ec:	bl	11288 <__printf_chk@plt>
   153f0:	mov	r2, #5
   153f4:	movw	r1, #28676	; 0x7004
   153f8:	movt	r1, #1
   153fc:	mov	r0, #0
   15400:	bl	110f0 <dcgettext@plt>
   15404:	movw	r3, #26980	; 0x6964
   15408:	movt	r3, #1
   1540c:	movw	r2, #27020	; 0x698c
   15410:	movt	r2, #1
   15414:	mov	r1, r0
   15418:	mov	r0, #1
   1541c:	bl	11288 <__printf_chk@plt>
   15420:	mov	r2, #5
   15424:	movw	r1, #28696	; 0x7018
   15428:	movt	r1, #1
   1542c:	mov	r0, #0
   15430:	bl	110f0 <dcgettext@plt>
   15434:	movw	r2, #28736	; 0x7040
   15438:	movt	r2, #1
   1543c:	mov	r1, r0
   15440:	mov	r0, #1
   15444:	bl	11288 <__printf_chk@plt>
   15448:	ldr	r4, [sp]
   1544c:	add	sp, sp, #4
   15450:	pop	{pc}		; (ldr pc, [sp], #4)
   15454:	str	r4, [sp, #-8]!
   15458:	str	lr, [sp, #4]
   1545c:	bl	15a64 <__snprintf_chk@plt+0x46f8>
   15460:	cmp	r0, #0
   15464:	beq	15474 <__snprintf_chk@plt+0x4108>
   15468:	ldr	r4, [sp]
   1546c:	add	sp, sp, #4
   15470:	pop	{pc}		; (ldr pc, [sp], #4)
   15474:	bl	158e8 <__snprintf_chk@plt+0x457c>
   15478:	str	r4, [sp, #-8]!
   1547c:	str	lr, [sp, #4]
   15480:	bl	15a64 <__snprintf_chk@plt+0x46f8>
   15484:	cmp	r0, #0
   15488:	beq	15498 <__snprintf_chk@plt+0x412c>
   1548c:	ldr	r4, [sp]
   15490:	add	sp, sp, #4
   15494:	pop	{pc}		; (ldr pc, [sp], #4)
   15498:	bl	158e8 <__snprintf_chk@plt+0x457c>
   1549c:	str	r4, [sp, #-8]!
   154a0:	str	lr, [sp, #4]
   154a4:	bl	15454 <__snprintf_chk@plt+0x40e8>
   154a8:	ldr	r4, [sp]
   154ac:	add	sp, sp, #4
   154b0:	pop	{pc}		; (ldr pc, [sp], #4)
   154b4:	strd	r4, [sp, #-16]!
   154b8:	str	r6, [sp, #8]
   154bc:	str	lr, [sp, #12]
   154c0:	mov	r5, r0
   154c4:	mov	r4, r1
   154c8:	bl	15aa0 <__snprintf_chk@plt+0x4734>
   154cc:	cmp	r0, #0
   154d0:	beq	154e4 <__snprintf_chk@plt+0x4178>
   154d4:	ldrd	r4, [sp]
   154d8:	ldr	r6, [sp, #8]
   154dc:	add	sp, sp, #12
   154e0:	pop	{pc}		; (ldr pc, [sp], #4)
   154e4:	adds	r4, r4, #0
   154e8:	movne	r4, #1
   154ec:	cmp	r5, #0
   154f0:	moveq	r4, #1
   154f4:	cmp	r4, #0
   154f8:	beq	154d4 <__snprintf_chk@plt+0x4168>
   154fc:	bl	158e8 <__snprintf_chk@plt+0x457c>
   15500:	str	r4, [sp, #-8]!
   15504:	str	lr, [sp, #4]
   15508:	cmp	r1, #0
   1550c:	orreq	r1, r1, #1
   15510:	bl	15aa0 <__snprintf_chk@plt+0x4734>
   15514:	cmp	r0, #0
   15518:	beq	15528 <__snprintf_chk@plt+0x41bc>
   1551c:	ldr	r4, [sp]
   15520:	add	sp, sp, #4
   15524:	pop	{pc}		; (ldr pc, [sp], #4)
   15528:	bl	158e8 <__snprintf_chk@plt+0x457c>
   1552c:	strd	r4, [sp, #-16]!
   15530:	str	r6, [sp, #8]
   15534:	str	lr, [sp, #12]
   15538:	mov	r4, r0
   1553c:	mov	r6, r1
   15540:	mov	r5, r2
   15544:	bl	15ecc <__snprintf_chk@plt+0x4b60>
   15548:	cmp	r0, #0
   1554c:	beq	15560 <__snprintf_chk@plt+0x41f4>
   15550:	ldrd	r4, [sp]
   15554:	ldr	r6, [sp, #8]
   15558:	add	sp, sp, #12
   1555c:	pop	{pc}		; (ldr pc, [sp], #4)
   15560:	cmp	r4, #0
   15564:	beq	15574 <__snprintf_chk@plt+0x4208>
   15568:	cmp	r6, #0
   1556c:	cmpne	r5, #0
   15570:	beq	15550 <__snprintf_chk@plt+0x41e4>
   15574:	bl	158e8 <__snprintf_chk@plt+0x457c>
   15578:	str	r4, [sp, #-8]!
   1557c:	str	lr, [sp, #4]
   15580:	bl	1552c <__snprintf_chk@plt+0x41c0>
   15584:	ldr	r4, [sp]
   15588:	add	sp, sp, #4
   1558c:	pop	{pc}		; (ldr pc, [sp], #4)
   15590:	str	r4, [sp, #-8]!
   15594:	str	lr, [sp, #4]
   15598:	mov	ip, r1
   1559c:	mov	r3, r2
   155a0:	cmp	r2, #0
   155a4:	cmpne	r1, #0
   155a8:	moveq	r3, #1
   155ac:	moveq	ip, r3
   155b0:	mov	r2, r3
   155b4:	mov	r1, ip
   155b8:	bl	15ecc <__snprintf_chk@plt+0x4b60>
   155bc:	cmp	r0, #0
   155c0:	beq	155d0 <__snprintf_chk@plt+0x4264>
   155c4:	ldr	r4, [sp]
   155c8:	add	sp, sp, #4
   155cc:	pop	{pc}		; (ldr pc, [sp], #4)
   155d0:	bl	158e8 <__snprintf_chk@plt+0x457c>
   155d4:	str	r4, [sp, #-8]!
   155d8:	str	lr, [sp, #4]
   155dc:	mov	r2, r1
   155e0:	mov	r1, r0
   155e4:	mov	r0, #0
   155e8:	bl	1552c <__snprintf_chk@plt+0x41c0>
   155ec:	ldr	r4, [sp]
   155f0:	add	sp, sp, #4
   155f4:	pop	{pc}		; (ldr pc, [sp], #4)
   155f8:	str	r4, [sp, #-8]!
   155fc:	str	lr, [sp, #4]
   15600:	mov	r2, r1
   15604:	mov	r1, r0
   15608:	mov	r0, #0
   1560c:	bl	15590 <__snprintf_chk@plt+0x4224>
   15610:	ldr	r4, [sp]
   15614:	add	sp, sp, #4
   15618:	pop	{pc}		; (ldr pc, [sp], #4)
   1561c:	strd	r4, [sp, #-16]!
   15620:	str	r6, [sp, #8]
   15624:	str	lr, [sp, #12]
   15628:	mov	r5, r1
   1562c:	ldr	r4, [r1]
   15630:	cmp	r0, #0
   15634:	beq	15664 <__snprintf_chk@plt+0x42f8>
   15638:	lsr	r3, r4, #1
   1563c:	add	r3, r3, #1
   15640:	adds	r4, r4, r3
   15644:	bcs	15680 <__snprintf_chk@plt+0x4314>
   15648:	mov	r1, r4
   1564c:	bl	1552c <__snprintf_chk@plt+0x41c0>
   15650:	str	r4, [r5]
   15654:	ldrd	r4, [sp]
   15658:	ldr	r6, [sp, #8]
   1565c:	add	sp, sp, #12
   15660:	pop	{pc}		; (ldr pc, [sp], #4)
   15664:	cmp	r4, #0
   15668:	bne	15648 <__snprintf_chk@plt+0x42dc>
   1566c:	mov	r4, #64	; 0x40
   15670:	udiv	r4, r4, r2
   15674:	cmp	r2, #64	; 0x40
   15678:	addhi	r4, r4, #1
   1567c:	b	15648 <__snprintf_chk@plt+0x42dc>
   15680:	bl	158e8 <__snprintf_chk@plt+0x457c>
   15684:	str	r4, [sp, #-8]!
   15688:	str	lr, [sp, #4]
   1568c:	mov	r2, #1
   15690:	bl	1561c <__snprintf_chk@plt+0x42b0>
   15694:	ldr	r4, [sp]
   15698:	add	sp, sp, #4
   1569c:	pop	{pc}		; (ldr pc, [sp], #4)
   156a0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   156a4:	strd	r6, [sp, #8]
   156a8:	str	r8, [sp, #16]
   156ac:	str	lr, [sp, #20]
   156b0:	mov	r5, r1
   156b4:	ldr	lr, [sp, #24]
   156b8:	ldr	ip, [r1]
   156bc:	asr	r4, ip, #1
   156c0:	adds	r4, ip, r4
   156c4:	movvs	r1, #1
   156c8:	movvc	r1, #0
   156cc:	cmp	r1, #0
   156d0:	mvnne	r4, #-2147483648	; 0x80000000
   156d4:	mvn	r8, r3
   156d8:	lsr	r8, r8, #31
   156dc:	cmp	r3, r4
   156e0:	movge	r1, #0
   156e4:	andlt	r1, r8, #1
   156e8:	cmp	r1, #0
   156ec:	movne	r4, r3
   156f0:	smull	r6, r7, r4, lr
   156f4:	asr	r1, r6, #31
   156f8:	cmp	r1, r7
   156fc:	bne	15714 <__snprintf_chk@plt+0x43a8>
   15700:	mov	r1, r6
   15704:	cmp	r6, #63	; 0x3f
   15708:	movle	r1, #64	; 0x40
   1570c:	ble	15718 <__snprintf_chk@plt+0x43ac>
   15710:	b	15724 <__snprintf_chk@plt+0x43b8>
   15714:	mvn	r1, #-2147483648	; 0x80000000
   15718:	sdiv	r4, r1, lr
   1571c:	mls	r6, lr, r4, r1
   15720:	sub	r1, r1, r6
   15724:	cmp	r0, #0
   15728:	moveq	r6, #0
   1572c:	streq	r6, [r5]
   15730:	sub	r6, r4, ip
   15734:	cmp	r6, r2
   15738:	bge	15770 <__snprintf_chk@plt+0x4404>
   1573c:	adds	r2, ip, r2
   15740:	mov	r4, r2
   15744:	bvs	1578c <__snprintf_chk@plt+0x4420>
   15748:	cmp	r2, r3
   1574c:	movle	r3, #0
   15750:	andgt	r3, r8, #1
   15754:	cmp	r3, #0
   15758:	bne	1578c <__snprintf_chk@plt+0x4420>
   1575c:	smull	r2, r3, r2, lr
   15760:	asr	ip, r2, #31
   15764:	mov	r1, r2
   15768:	cmp	ip, r3
   1576c:	bne	1578c <__snprintf_chk@plt+0x4420>
   15770:	bl	154b4 <__snprintf_chk@plt+0x4148>
   15774:	str	r4, [r5]
   15778:	ldrd	r4, [sp]
   1577c:	ldrd	r6, [sp, #8]
   15780:	ldr	r8, [sp, #16]
   15784:	add	sp, sp, #20
   15788:	pop	{pc}		; (ldr pc, [sp], #4)
   1578c:	bl	158e8 <__snprintf_chk@plt+0x457c>
   15790:	str	r4, [sp, #-8]!
   15794:	str	lr, [sp, #4]
   15798:	bl	159f0 <__snprintf_chk@plt+0x4684>
   1579c:	cmp	r0, #0
   157a0:	beq	157b0 <__snprintf_chk@plt+0x4444>
   157a4:	ldr	r4, [sp]
   157a8:	add	sp, sp, #4
   157ac:	pop	{pc}		; (ldr pc, [sp], #4)
   157b0:	bl	158e8 <__snprintf_chk@plt+0x457c>
   157b4:	str	r4, [sp, #-8]!
   157b8:	str	lr, [sp, #4]
   157bc:	mov	r1, #1
   157c0:	bl	15790 <__snprintf_chk@plt+0x4424>
   157c4:	ldr	r4, [sp]
   157c8:	add	sp, sp, #4
   157cc:	pop	{pc}		; (ldr pc, [sp], #4)
   157d0:	str	r4, [sp, #-8]!
   157d4:	str	lr, [sp, #4]
   157d8:	bl	159f0 <__snprintf_chk@plt+0x4684>
   157dc:	cmp	r0, #0
   157e0:	beq	157f0 <__snprintf_chk@plt+0x4484>
   157e4:	ldr	r4, [sp]
   157e8:	add	sp, sp, #4
   157ec:	pop	{pc}		; (ldr pc, [sp], #4)
   157f0:	bl	158e8 <__snprintf_chk@plt+0x457c>
   157f4:	str	r4, [sp, #-8]!
   157f8:	str	lr, [sp, #4]
   157fc:	mov	r1, #1
   15800:	bl	157d0 <__snprintf_chk@plt+0x4464>
   15804:	ldr	r4, [sp]
   15808:	add	sp, sp, #4
   1580c:	pop	{pc}		; (ldr pc, [sp], #4)
   15810:	strd	r4, [sp, #-16]!
   15814:	str	r6, [sp, #8]
   15818:	str	lr, [sp, #12]
   1581c:	mov	r5, r0
   15820:	mov	r4, r1
   15824:	mov	r0, r1
   15828:	bl	15454 <__snprintf_chk@plt+0x40e8>
   1582c:	mov	r2, r4
   15830:	mov	r1, r5
   15834:	bl	110a8 <memcpy@plt>
   15838:	ldrd	r4, [sp]
   1583c:	ldr	r6, [sp, #8]
   15840:	add	sp, sp, #12
   15844:	pop	{pc}		; (ldr pc, [sp], #4)
   15848:	strd	r4, [sp, #-16]!
   1584c:	str	r6, [sp, #8]
   15850:	str	lr, [sp, #12]
   15854:	mov	r5, r0
   15858:	mov	r4, r1
   1585c:	mov	r0, r1
   15860:	bl	15478 <__snprintf_chk@plt+0x410c>
   15864:	mov	r2, r4
   15868:	mov	r1, r5
   1586c:	bl	110a8 <memcpy@plt>
   15870:	ldrd	r4, [sp]
   15874:	ldr	r6, [sp, #8]
   15878:	add	sp, sp, #12
   1587c:	pop	{pc}		; (ldr pc, [sp], #4)
   15880:	strd	r4, [sp, #-16]!
   15884:	str	r6, [sp, #8]
   15888:	str	lr, [sp, #12]
   1588c:	mov	r5, r0
   15890:	mov	r4, r1
   15894:	add	r0, r1, #1
   15898:	bl	15478 <__snprintf_chk@plt+0x410c>
   1589c:	mov	r2, #0
   158a0:	strb	r2, [r0, r4]
   158a4:	mov	r2, r4
   158a8:	mov	r1, r5
   158ac:	bl	110a8 <memcpy@plt>
   158b0:	ldrd	r4, [sp]
   158b4:	ldr	r6, [sp, #8]
   158b8:	add	sp, sp, #12
   158bc:	pop	{pc}		; (ldr pc, [sp], #4)
   158c0:	str	r4, [sp, #-8]!
   158c4:	str	lr, [sp, #4]
   158c8:	mov	r4, r0
   158cc:	bl	11228 <strlen@plt>
   158d0:	add	r1, r0, #1
   158d4:	mov	r0, r4
   158d8:	bl	15810 <__snprintf_chk@plt+0x44a4>
   158dc:	ldr	r4, [sp]
   158e0:	add	sp, sp, #4
   158e4:	pop	{pc}		; (ldr pc, [sp], #4)
   158e8:	str	r4, [sp, #-8]!
   158ec:	str	lr, [sp, #4]
   158f0:	movw	r3, #33076	; 0x8134
   158f4:	movt	r3, #2
   158f8:	ldr	r4, [r3]
   158fc:	mov	r2, #5
   15900:	movw	r1, #28816	; 0x7090
   15904:	movt	r1, #1
   15908:	mov	r0, #0
   1590c:	bl	110f0 <dcgettext@plt>
   15910:	mov	r3, r0
   15914:	movw	r2, #27712	; 0x6c40
   15918:	movt	r2, #1
   1591c:	mov	r1, #0
   15920:	mov	r0, r4
   15924:	bl	111a4 <error@plt>
   15928:	bl	11360 <abort@plt>
   1592c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15930:	strd	r6, [sp, #8]
   15934:	str	r8, [sp, #16]
   15938:	str	lr, [sp, #20]
   1593c:	sub	sp, sp, #8
   15940:	mov	r4, r0
   15944:	mov	r5, r1
   15948:	mov	r7, r2
   1594c:	mov	r8, r3
   15950:	bl	1124c <__errno_location@plt>
   15954:	mov	r6, r0
   15958:	mov	r3, #0
   1595c:	str	r3, [r0]
   15960:	add	r1, sp, #4
   15964:	mov	r0, r4
   15968:	blx	r8
   1596c:	ldr	r3, [sp, #4]
   15970:	cmp	r3, r4
   15974:	beq	159c4 <__snprintf_chk@plt+0x4658>
   15978:	cmp	r5, #0
   1597c:	beq	159a0 <__snprintf_chk@plt+0x4634>
   15980:	vcmp.f64	d0, #0.0
   15984:	vmrs	APSR_nzcv, fpscr
   15988:	moveq	r0, #1
   1598c:	beq	159d0 <__snprintf_chk@plt+0x4664>
   15990:	ldr	r0, [r6]
   15994:	subs	r0, r0, #34	; 0x22
   15998:	movne	r0, #1
   1599c:	b	159c8 <__snprintf_chk@plt+0x465c>
   159a0:	ldrb	r2, [r3]
   159a4:	cmp	r2, #0
   159a8:	movne	r0, #0
   159ac:	bne	159d4 <__snprintf_chk@plt+0x4668>
   159b0:	vcmp.f64	d0, #0.0
   159b4:	vmrs	APSR_nzcv, fpscr
   159b8:	bne	15990 <__snprintf_chk@plt+0x4624>
   159bc:	mov	r0, #1
   159c0:	b	159d4 <__snprintf_chk@plt+0x4668>
   159c4:	mov	r0, #0
   159c8:	cmp	r5, #0
   159cc:	beq	159d4 <__snprintf_chk@plt+0x4668>
   159d0:	str	r3, [r5]
   159d4:	vstr	d0, [r7]
   159d8:	add	sp, sp, #8
   159dc:	ldrd	r4, [sp]
   159e0:	ldrd	r6, [sp, #8]
   159e4:	ldr	r8, [sp, #16]
   159e8:	add	sp, sp, #20
   159ec:	pop	{pc}		; (ldr pc, [sp], #4)
   159f0:	strd	r4, [sp, #-16]!
   159f4:	str	r6, [sp, #8]
   159f8:	str	lr, [sp, #12]
   159fc:	cmp	r1, #0
   15a00:	cmpne	r0, #0
   15a04:	beq	15a40 <__snprintf_chk@plt+0x46d4>
   15a08:	mov	r2, r0
   15a0c:	mov	r3, r1
   15a10:	umull	r4, r5, r0, r1
   15a14:	adds	r1, r5, #0
   15a18:	movne	r1, #1
   15a1c:	cmp	r4, #0
   15a20:	movlt	r1, #1
   15a24:	cmp	r1, #0
   15a28:	beq	15a48 <__snprintf_chk@plt+0x46dc>
   15a2c:	bl	1124c <__errno_location@plt>
   15a30:	mov	r3, #12
   15a34:	str	r3, [r0]
   15a38:	mov	r0, #0
   15a3c:	b	15a54 <__snprintf_chk@plt+0x46e8>
   15a40:	mov	r3, #1
   15a44:	mov	r2, r3
   15a48:	mov	r1, r3
   15a4c:	mov	r0, r2
   15a50:	bl	1103c <calloc@plt>
   15a54:	ldrd	r4, [sp]
   15a58:	ldr	r6, [sp, #8]
   15a5c:	add	sp, sp, #12
   15a60:	pop	{pc}		; (ldr pc, [sp], #4)
   15a64:	str	r4, [sp, #-8]!
   15a68:	str	lr, [sp, #4]
   15a6c:	cmp	r0, #0
   15a70:	beq	15a8c <__snprintf_chk@plt+0x4720>
   15a74:	bge	15a90 <__snprintf_chk@plt+0x4724>
   15a78:	bl	1124c <__errno_location@plt>
   15a7c:	mov	r3, #12
   15a80:	str	r3, [r0]
   15a84:	mov	r0, #0
   15a88:	b	15a94 <__snprintf_chk@plt+0x4728>
   15a8c:	mov	r0, #1
   15a90:	bl	111bc <malloc@plt>
   15a94:	ldr	r4, [sp]
   15a98:	add	sp, sp, #4
   15a9c:	pop	{pc}		; (ldr pc, [sp], #4)
   15aa0:	str	r4, [sp, #-8]!
   15aa4:	str	lr, [sp, #4]
   15aa8:	cmp	r0, #0
   15aac:	beq	15ad0 <__snprintf_chk@plt+0x4764>
   15ab0:	cmp	r1, #0
   15ab4:	beq	15adc <__snprintf_chk@plt+0x4770>
   15ab8:	cmp	r1, #0
   15abc:	blt	15ae8 <__snprintf_chk@plt+0x477c>
   15ac0:	bl	11108 <realloc@plt>
   15ac4:	ldr	r4, [sp]
   15ac8:	add	sp, sp, #4
   15acc:	pop	{pc}		; (ldr pc, [sp], #4)
   15ad0:	mov	r0, r1
   15ad4:	bl	15a64 <__snprintf_chk@plt+0x46f8>
   15ad8:	b	15ac4 <__snprintf_chk@plt+0x4758>
   15adc:	bl	12858 <__snprintf_chk@plt+0x14ec>
   15ae0:	mov	r0, #0
   15ae4:	b	15ac4 <__snprintf_chk@plt+0x4758>
   15ae8:	bl	1124c <__errno_location@plt>
   15aec:	mov	r3, #12
   15af0:	str	r3, [r0]
   15af4:	mov	r0, #0
   15af8:	b	15ac4 <__snprintf_chk@plt+0x4758>
   15afc:	andeq	r0, r0, r0
   15b00:	strd	r4, [sp, #-16]!
   15b04:	str	r6, [sp, #8]
   15b08:	str	lr, [sp, #12]
   15b0c:	mov	r5, r0
   15b10:	mov	r4, r1
   15b14:	movw	r3, #33944	; 0x8498
   15b18:	movt	r3, #2
   15b1c:	ldr	r3, [r3]
   15b20:	cmp	r3, #0
   15b24:	beq	15b58 <__snprintf_chk@plt+0x47ec>
   15b28:	movw	r3, #33944	; 0x8498
   15b2c:	movt	r3, #2
   15b30:	ldr	r2, [r3]
   15b34:	cmp	r2, #0
   15b38:	beq	15b7c <__snprintf_chk@plt+0x4810>
   15b3c:	mov	r1, r4
   15b40:	mov	r0, r5
   15b44:	bl	112dc <strtod_l@plt>
   15b48:	ldrd	r4, [sp]
   15b4c:	ldr	r6, [sp, #8]
   15b50:	add	sp, sp, #12
   15b54:	pop	{pc}		; (ldr pc, [sp], #4)
   15b58:	mov	r2, #0
   15b5c:	movw	r1, #28836	; 0x70a4
   15b60:	movt	r1, #1
   15b64:	movw	r0, #8127	; 0x1fbf
   15b68:	bl	11324 <newlocale@plt>
   15b6c:	movw	r3, #33944	; 0x8498
   15b70:	movt	r3, #2
   15b74:	str	r0, [r3]
   15b78:	b	15b28 <__snprintf_chk@plt+0x47bc>
   15b7c:	cmp	r4, #0
   15b80:	beq	15b90 <__snprintf_chk@plt+0x4824>
   15b84:	str	r5, [r4]
   15b88:	vldr	d0, [pc, #8]	; 15b98 <__snprintf_chk@plt+0x482c>
   15b8c:	b	15b48 <__snprintf_chk@plt+0x47dc>
   15b90:	vldr	d0, [pc]	; 15b98 <__snprintf_chk@plt+0x482c>
   15b94:	b	15b48 <__snprintf_chk@plt+0x47dc>
	...
   15ba0:	strd	r4, [sp, #-16]!
   15ba4:	str	r6, [sp, #8]
   15ba8:	str	lr, [sp, #12]
   15bac:	mov	r5, r0
   15bb0:	bl	1118c <__fpending@plt>
   15bb4:	mov	r6, r0
   15bb8:	ldr	r4, [r5]
   15bbc:	and	r4, r4, #32
   15bc0:	mov	r0, r5
   15bc4:	bl	15c2c <__snprintf_chk@plt+0x48c0>
   15bc8:	cmp	r4, #0
   15bcc:	bne	15c00 <__snprintf_chk@plt+0x4894>
   15bd0:	cmp	r0, #0
   15bd4:	beq	15bf0 <__snprintf_chk@plt+0x4884>
   15bd8:	cmp	r6, #0
   15bdc:	bne	15c1c <__snprintf_chk@plt+0x48b0>
   15be0:	bl	1124c <__errno_location@plt>
   15be4:	ldr	r0, [r0]
   15be8:	subs	r0, r0, #9
   15bec:	mvnne	r0, #0
   15bf0:	ldrd	r4, [sp]
   15bf4:	ldr	r6, [sp, #8]
   15bf8:	add	sp, sp, #12
   15bfc:	pop	{pc}		; (ldr pc, [sp], #4)
   15c00:	cmp	r0, #0
   15c04:	bne	15c24 <__snprintf_chk@plt+0x48b8>
   15c08:	bl	1124c <__errno_location@plt>
   15c0c:	mov	r3, #0
   15c10:	str	r3, [r0]
   15c14:	mvn	r0, #0
   15c18:	b	15bf0 <__snprintf_chk@plt+0x4884>
   15c1c:	mvn	r0, #0
   15c20:	b	15bf0 <__snprintf_chk@plt+0x4884>
   15c24:	mvn	r0, #0
   15c28:	b	15bf0 <__snprintf_chk@plt+0x4884>
   15c2c:	strd	r4, [sp, #-16]!
   15c30:	str	r6, [sp, #8]
   15c34:	str	lr, [sp, #12]
   15c38:	sub	sp, sp, #8
   15c3c:	mov	r4, r0
   15c40:	bl	112ac <fileno@plt>
   15c44:	cmp	r0, #0
   15c48:	blt	15cc0 <__snprintf_chk@plt+0x4954>
   15c4c:	mov	r0, r4
   15c50:	bl	111e0 <__freading@plt>
   15c54:	cmp	r0, #0
   15c58:	beq	15c8c <__snprintf_chk@plt+0x4920>
   15c5c:	mov	r0, r4
   15c60:	bl	112ac <fileno@plt>
   15c64:	mov	r3, #1
   15c68:	str	r3, [sp]
   15c6c:	mov	r2, #0
   15c70:	mov	r3, #0
   15c74:	bl	1115c <lseek64@plt>
   15c78:	mvn	r2, #0
   15c7c:	mvn	r3, #0
   15c80:	cmp	r1, r3
   15c84:	cmpeq	r0, r2
   15c88:	beq	15ccc <__snprintf_chk@plt+0x4960>
   15c8c:	mov	r0, r4
   15c90:	bl	15ce8 <__snprintf_chk@plt+0x497c>
   15c94:	cmp	r0, #0
   15c98:	beq	15ccc <__snprintf_chk@plt+0x4960>
   15c9c:	bl	1124c <__errno_location@plt>
   15ca0:	mov	r5, r0
   15ca4:	ldr	r6, [r0]
   15ca8:	mov	r0, r4
   15cac:	bl	112c4 <fclose@plt>
   15cb0:	cmp	r6, #0
   15cb4:	strne	r6, [r5]
   15cb8:	mvnne	r0, #0
   15cbc:	b	15cd4 <__snprintf_chk@plt+0x4968>
   15cc0:	mov	r0, r4
   15cc4:	bl	112c4 <fclose@plt>
   15cc8:	b	15cd4 <__snprintf_chk@plt+0x4968>
   15ccc:	mov	r0, r4
   15cd0:	bl	112c4 <fclose@plt>
   15cd4:	add	sp, sp, #8
   15cd8:	ldrd	r4, [sp]
   15cdc:	ldr	r6, [sp, #8]
   15ce0:	add	sp, sp, #12
   15ce4:	pop	{pc}		; (ldr pc, [sp], #4)
   15ce8:	str	r4, [sp, #-8]!
   15cec:	str	lr, [sp, #4]
   15cf0:	sub	sp, sp, #8
   15cf4:	subs	r4, r0, #0
   15cf8:	beq	15d0c <__snprintf_chk@plt+0x49a0>
   15cfc:	mov	r0, r4
   15d00:	bl	111e0 <__freading@plt>
   15d04:	cmp	r0, #0
   15d08:	bne	15d24 <__snprintf_chk@plt+0x49b8>
   15d0c:	mov	r0, r4
   15d10:	bl	11078 <fflush@plt>
   15d14:	add	sp, sp, #8
   15d18:	ldr	r4, [sp]
   15d1c:	add	sp, sp, #4
   15d20:	pop	{pc}		; (ldr pc, [sp], #4)
   15d24:	ldr	r3, [r4]
   15d28:	tst	r3, #256	; 0x100
   15d2c:	bne	15d3c <__snprintf_chk@plt+0x49d0>
   15d30:	mov	r0, r4
   15d34:	bl	11078 <fflush@plt>
   15d38:	b	15d14 <__snprintf_chk@plt+0x49a8>
   15d3c:	mov	r3, #1
   15d40:	str	r3, [sp]
   15d44:	mov	r2, #0
   15d48:	mov	r3, #0
   15d4c:	mov	r0, r4
   15d50:	bl	15d58 <__snprintf_chk@plt+0x49ec>
   15d54:	b	15d30 <__snprintf_chk@plt+0x49c4>
   15d58:	str	r4, [sp, #-16]!
   15d5c:	strd	r6, [sp, #4]
   15d60:	str	lr, [sp, #12]
   15d64:	sub	sp, sp, #8
   15d68:	mov	r4, r0
   15d6c:	mov	r6, r2
   15d70:	mov	r7, r3
   15d74:	ldr	r2, [r0, #8]
   15d78:	ldr	r3, [r0, #4]
   15d7c:	cmp	r2, r3
   15d80:	beq	15db0 <__snprintf_chk@plt+0x4a44>
   15d84:	ldr	r3, [sp, #24]
   15d88:	str	r3, [sp]
   15d8c:	mov	r2, r6
   15d90:	mov	r3, r7
   15d94:	mov	r0, r4
   15d98:	bl	112d0 <fseeko64@plt>
   15d9c:	add	sp, sp, #8
   15da0:	ldr	r4, [sp]
   15da4:	ldrd	r6, [sp, #4]
   15da8:	add	sp, sp, #12
   15dac:	pop	{pc}		; (ldr pc, [sp], #4)
   15db0:	ldr	r2, [r0, #20]
   15db4:	ldr	r3, [r0, #16]
   15db8:	cmp	r2, r3
   15dbc:	bne	15d84 <__snprintf_chk@plt+0x4a18>
   15dc0:	ldr	r3, [r0, #36]	; 0x24
   15dc4:	cmp	r3, #0
   15dc8:	bne	15d84 <__snprintf_chk@plt+0x4a18>
   15dcc:	bl	112ac <fileno@plt>
   15dd0:	ldr	r3, [sp, #24]
   15dd4:	str	r3, [sp]
   15dd8:	mov	r2, r6
   15ddc:	mov	r3, r7
   15de0:	bl	1115c <lseek64@plt>
   15de4:	mvn	r2, #0
   15de8:	mvn	r3, #0
   15dec:	cmp	r1, r3
   15df0:	cmpeq	r0, r2
   15df4:	beq	15e10 <__snprintf_chk@plt+0x4aa4>
   15df8:	ldr	r3, [r4]
   15dfc:	bic	r3, r3, #16
   15e00:	str	r3, [r4]
   15e04:	strd	r0, [r4, #80]	; 0x50
   15e08:	mov	r0, #0
   15e0c:	b	15d9c <__snprintf_chk@plt+0x4a30>
   15e10:	mvn	r0, #0
   15e14:	b	15d9c <__snprintf_chk@plt+0x4a30>
   15e18:	str	r4, [sp, #-8]!
   15e1c:	str	lr, [sp, #4]
   15e20:	mov	r0, #14
   15e24:	bl	11318 <nl_langinfo@plt>
   15e28:	cmp	r0, #0
   15e2c:	beq	15e50 <__snprintf_chk@plt+0x4ae4>
   15e30:	ldrb	r2, [r0]
   15e34:	movw	r3, #28840	; 0x70a8
   15e38:	movt	r3, #1
   15e3c:	cmp	r2, #0
   15e40:	moveq	r0, r3
   15e44:	ldr	r4, [sp]
   15e48:	add	sp, sp, #4
   15e4c:	pop	{pc}		; (ldr pc, [sp], #4)
   15e50:	movw	r0, #28840	; 0x70a8
   15e54:	movt	r0, #1
   15e58:	b	15e44 <__snprintf_chk@plt+0x4ad8>
   15e5c:	strd	r4, [sp, #-20]!	; 0xffffffec
   15e60:	strd	r6, [sp, #8]
   15e64:	str	lr, [sp, #16]
   15e68:	sub	sp, sp, #12
   15e6c:	mov	r7, r1
   15e70:	mov	r5, r2
   15e74:	subs	r6, r0, #0
   15e78:	addeq	r6, sp, #4
   15e7c:	mov	r0, r6
   15e80:	bl	11198 <mbrtowc@plt>
   15e84:	mov	r4, r0
   15e88:	cmp	r5, #0
   15e8c:	cmnne	r0, #3
   15e90:	bhi	15eac <__snprintf_chk@plt+0x4b40>
   15e94:	mov	r0, r4
   15e98:	add	sp, sp, #12
   15e9c:	ldrd	r4, [sp]
   15ea0:	ldrd	r6, [sp, #8]
   15ea4:	add	sp, sp, #16
   15ea8:	pop	{pc}		; (ldr pc, [sp], #4)
   15eac:	mov	r0, #0
   15eb0:	bl	15f08 <__snprintf_chk@plt+0x4b9c>
   15eb4:	cmp	r0, #0
   15eb8:	bne	15e94 <__snprintf_chk@plt+0x4b28>
   15ebc:	ldrb	r3, [r7]
   15ec0:	str	r3, [r6]
   15ec4:	mov	r4, #1
   15ec8:	b	15e94 <__snprintf_chk@plt+0x4b28>
   15ecc:	str	r4, [sp, #-8]!
   15ed0:	str	lr, [sp, #4]
   15ed4:	umull	r2, r3, r1, r2
   15ed8:	cmp	r3, #0
   15edc:	bne	15ef4 <__snprintf_chk@plt+0x4b88>
   15ee0:	mov	r1, r2
   15ee4:	bl	15aa0 <__snprintf_chk@plt+0x4734>
   15ee8:	ldr	r4, [sp]
   15eec:	add	sp, sp, #4
   15ef0:	pop	{pc}		; (ldr pc, [sp], #4)
   15ef4:	bl	1124c <__errno_location@plt>
   15ef8:	mov	r3, #12
   15efc:	str	r3, [r0]
   15f00:	mov	r0, #0
   15f04:	b	15ee8 <__snprintf_chk@plt+0x4b7c>
   15f08:	push	{lr}		; (str lr, [sp, #-4]!)
   15f0c:	sub	sp, sp, #268	; 0x10c
   15f10:	movw	r2, #257	; 0x101
   15f14:	add	r1, sp, #4
   15f18:	bl	15f64 <__snprintf_chk@plt+0x4bf8>
   15f1c:	cmp	r0, #0
   15f20:	movne	r0, #0
   15f24:	bne	15f5c <__snprintf_chk@plt+0x4bf0>
   15f28:	movw	r1, #28836	; 0x70a4
   15f2c:	movt	r1, #1
   15f30:	add	r0, sp, #4
   15f34:	bl	11060 <strcmp@plt>
   15f38:	cmp	r0, #0
   15f3c:	beq	15f58 <__snprintf_chk@plt+0x4bec>
   15f40:	movw	r1, #28848	; 0x70b0
   15f44:	movt	r1, #1
   15f48:	add	r0, sp, #4
   15f4c:	bl	11060 <strcmp@plt>
   15f50:	adds	r0, r0, #0
   15f54:	movne	r0, #1
   15f58:	and	r0, r0, #1
   15f5c:	add	sp, sp, #268	; 0x10c
   15f60:	pop	{pc}		; (ldr pc, [sp], #4)
   15f64:	strd	r4, [sp, #-16]!
   15f68:	str	r6, [sp, #8]
   15f6c:	str	lr, [sp, #12]
   15f70:	mov	r6, r1
   15f74:	mov	r4, r2
   15f78:	mov	r1, #0
   15f7c:	bl	112e8 <setlocale@plt>
   15f80:	subs	r5, r0, #0
   15f84:	beq	15fc8 <__snprintf_chk@plt+0x4c5c>
   15f88:	mov	r0, r5
   15f8c:	bl	11228 <strlen@plt>
   15f90:	cmp	r4, r0
   15f94:	bhi	15fe4 <__snprintf_chk@plt+0x4c78>
   15f98:	cmp	r4, #0
   15f9c:	moveq	r0, #34	; 0x22
   15fa0:	beq	15ff8 <__snprintf_chk@plt+0x4c8c>
   15fa4:	sub	r4, r4, #1
   15fa8:	mov	r2, r4
   15fac:	mov	r1, r5
   15fb0:	mov	r0, r6
   15fb4:	bl	110a8 <memcpy@plt>
   15fb8:	mov	r3, #0
   15fbc:	strb	r3, [r6, r4]
   15fc0:	mov	r0, #34	; 0x22
   15fc4:	b	15ff8 <__snprintf_chk@plt+0x4c8c>
   15fc8:	cmp	r4, #0
   15fcc:	moveq	r0, #22
   15fd0:	beq	15ff8 <__snprintf_chk@plt+0x4c8c>
   15fd4:	mov	r3, #0
   15fd8:	strb	r3, [r6]
   15fdc:	mov	r0, #22
   15fe0:	b	15ff8 <__snprintf_chk@plt+0x4c8c>
   15fe4:	add	r2, r0, #1
   15fe8:	mov	r1, r5
   15fec:	mov	r0, r6
   15ff0:	bl	110a8 <memcpy@plt>
   15ff4:	mov	r0, #0
   15ff8:	ldrd	r4, [sp]
   15ffc:	ldr	r6, [sp, #8]
   16000:	add	sp, sp, #12
   16004:	pop	{pc}		; (ldr pc, [sp], #4)
   16008:	str	r4, [sp, #-8]!
   1600c:	str	lr, [sp, #4]
   16010:	mov	r1, #0
   16014:	bl	112e8 <setlocale@plt>
   16018:	ldr	r4, [sp]
   1601c:	add	sp, sp, #4
   16020:	pop	{pc}		; (ldr pc, [sp], #4)
   16024:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16028:	mov	r7, r0
   1602c:	ldr	r6, [pc, #72]	; 1607c <__snprintf_chk@plt+0x4d10>
   16030:	ldr	r5, [pc, #72]	; 16080 <__snprintf_chk@plt+0x4d14>
   16034:	add	r6, pc, r6
   16038:	add	r5, pc, r5
   1603c:	sub	r6, r6, r5
   16040:	mov	r8, r1
   16044:	mov	r9, r2
   16048:	bl	1101c <calloc@plt-0x20>
   1604c:	asrs	r6, r6, #2
   16050:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16054:	mov	r4, #0
   16058:	add	r4, r4, #1
   1605c:	ldr	r3, [r5], #4
   16060:	mov	r2, r9
   16064:	mov	r1, r8
   16068:	mov	r0, r7
   1606c:	blx	r3
   16070:	cmp	r6, r4
   16074:	bne	16058 <__snprintf_chk@plt+0x4cec>
   16078:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1607c:	andeq	r1, r1, r8, asr #29
   16080:	andeq	r1, r1, r0, asr #29
   16084:	bx	lr
   16088:	ldr	r3, [pc, #12]	; 1609c <__snprintf_chk@plt+0x4d30>
   1608c:	mov	r1, #0
   16090:	add	r3, pc, r3
   16094:	ldr	r2, [r3]
   16098:	b	11264 <__cxa_atexit@plt>
   1609c:	muleq	r1, r0, r0

Disassembly of section .fini:

000160a0 <.fini>:
   160a0:	push	{r3, lr}
   160a4:	pop	{r3, pc}
