
../repos/charybdis/librb/src/.libs/librb.so:     file format elf32-littlearm


Disassembly of section .init:

00004364 <_init>:
    4364:	push	{r3, lr}
    4368:	bl	4d60 <call_weak_fn>
    436c:	pop	{r3, pc}

Disassembly of section .plt:

00004370 <.plt>:
    4370:	push	{lr}		; (str lr, [sp, #-4]!)
    4374:	ldr	lr, [pc, #4]	; 4380 <.plt+0x10>
    4378:	add	lr, pc, lr
    437c:	ldr	pc, [lr, #8]!
    4380:	.word	0x00030c80

00004384 <rb_helper_run@plt>:
    4384:	add	ip, pc, #0, 12
    4388:	add	ip, ip, #48, 20	; 0x30000
    438c:	ldr	pc, [ip, #3200]!	; 0xc80

00004390 <TLS_method@plt>:
    4390:	add	ip, pc, #0, 12
    4394:	add	ip, ip, #48, 20	; 0x30000
    4398:	ldr	pc, [ip, #3192]!	; 0xc78

0000439c <open@plt>:
    439c:	add	ip, pc, #0, 12
    43a0:	add	ip, ip, #48, 20	; 0x30000
    43a4:	ldr	pc, [ip, #3184]!	; 0xc70

000043a8 <rb_init_netio@plt>:
    43a8:	add	ip, pc, #0, 12
    43ac:	add	ip, ip, #48, 20	; 0x30000
    43b0:	ldr	pc, [ip, #3176]!	; 0xc68

000043b4 <sigemptyset@plt>:
    43b4:	add	ip, pc, #0, 12
    43b8:	add	ip, ip, #48, 20	; 0x30000
    43bc:	ldr	pc, [ip, #3168]!	; 0xc60

000043c0 <strerror@plt>:
    43c0:	add	ip, pc, #0, 12
    43c4:	add	ip, ip, #48, 20	; 0x30000
    43c8:	ldr	pc, [ip, #3160]!	; 0xc58

000043cc <rb_radixtree_elem_delete@plt>:
    43cc:	add	ip, pc, #0, 12
    43d0:	add	ip, ip, #48, 20	; 0x30000
    43d4:	ldr	pc, [ip, #3152]!	; 0xc50

000043d8 <getdtablesize@plt>:
    43d8:	add	ip, pc, #0, 12
    43dc:	add	ip, ip, #48, 20	; 0x30000
    43e0:	ldr	pc, [ip, #3144]!	; 0xc48

000043e4 <abort@plt>:
    43e4:	add	ip, pc, #0, 12
    43e8:	add	ip, ip, #48, 20	; 0x30000
    43ec:	ldr	pc, [ip, #3136]!	; 0xc40

000043f0 <connect@plt>:
    43f0:	add	ip, pc, #0, 12
    43f4:	add	ip, ip, #48, 20	; 0x30000
    43f8:	ldr	pc, [ip, #3128]!	; 0xc38

000043fc <rb_ignore_errno@plt>:
    43fc:	add	ip, pc, #0, 12
    4400:	add	ip, ip, #48, 20	; 0x30000
    4404:	ldr	pc, [ip, #3120]!	; 0xc30

00004408 <rb_settimeout@plt>:
    4408:	add	ip, pc, #0, 12
    440c:	add	ip, ip, #48, 20	; 0x30000
    4410:	ldr	pc, [ip, #3112]!	; 0xc28

00004414 <SSL_CTX_set_cipher_list@plt>:
    4414:	add	ip, pc, #0, 12
    4418:	add	ip, ip, #48, 20	; 0x30000
    441c:	ldr	pc, [ip, #3104]!	; 0xc20

00004420 <ERR_get_error@plt>:
    4420:	add	ip, pc, #0, 12
    4424:	add	ip, ip, #48, 20	; 0x30000
    4428:	ldr	pc, [ip, #3096]!	; 0xc18

0000442c <rb_radixtree_foreach_start@plt>:
    442c:	add	ip, pc, #0, 12
    4430:	add	ip, ip, #48, 20	; 0x30000
    4434:	ldr	pc, [ip, #3088]!	; 0xc10

00004438 <strcasestr@plt>:
    4438:	add	ip, pc, #0, 12
    443c:	add	ip, ip, #48, 20	; 0x30000
    4440:	ldr	pc, [ip, #3080]!	; 0xc08

00004444 <rb_connect_tcp@plt>:
    4444:	add	ip, pc, #0, 12
    4448:	add	ip, ip, #48, 20	; 0x30000
    444c:	ldr	pc, [ip, #3072]!	; 0xc00

00004450 <RAND_load_file@plt>:
    4450:	add	ip, pc, #0, 12
    4454:	add	ip, ip, #48, 20	; 0x30000
    4458:	ldr	pc, [ip, #3064]!	; 0xbf8

0000445c <signalfd@plt>:
    445c:	add	ip, pc, #0, 12
    4460:	add	ip, ip, #48, 20	; 0x30000
    4464:	ldr	pc, [ip, #3056]!	; 0xbf0

00004468 <rb_radixtree_foreach_next@plt>:
    4468:	add	ip, pc, #0, 12
    446c:	add	ip, ip, #48, 20	; 0x30000
    4470:	ldr	pc, [ip, #3048]!	; 0xbe8

00004474 <memcmp@plt>:
    4474:	add	ip, pc, #0, 12
    4478:	add	ip, ip, #48, 20	; 0x30000
    447c:	ldr	pc, [ip, #3040]!	; 0xbe0

00004480 <SSL_CTX_free@plt>:
    4480:	add	ip, pc, #0, 12
    4484:	add	ip, ip, #48, 20	; 0x30000
    4488:	ldr	pc, [ip, #3032]!	; 0xbd8

0000448c <rb_getmaxconnect@plt>:
    448c:	add	ip, pc, #0, 12
    4490:	add	ip, ip, #48, 20	; 0x30000
    4494:	ldr	pc, [ip, #3024]!	; 0xbd0

00004498 <sigwaitinfo@plt>:
    4498:	add	ip, pc, #0, 12
    449c:	add	ip, ip, #48, 20	; 0x30000
    44a0:	ldr	pc, [ip, #3016]!	; 0xbc8

000044a4 <__libc_current_sigrtmin@plt>:
    44a4:	add	ip, pc, #0, 12
    44a8:	add	ip, ip, #48, 20	; 0x30000
    44ac:	ldr	pc, [ip, #3008]!	; 0xbc0

000044b0 <__xstat@plt>:
    44b0:	add	ip, pc, #0, 12
    44b4:	add	ip, ip, #48, 20	; 0x30000
    44b8:	ldr	pc, [ip, #3000]!	; 0xbb8

000044bc <rb_event_delete@plt>:
    44bc:	add	ip, pc, #0, 12
    44c0:	add	ip, ip, #48, 20	; 0x30000
    44c4:	ldr	pc, [ip, #2992]!	; 0xbb0

000044c8 <rb_setselect@plt>:
    44c8:	add	ip, pc, #0, 12
    44cc:	add	ip, ip, #48, 20	; 0x30000
    44d0:	ldr	pc, [ip, #2984]!	; 0xba8

000044d4 <rb_fd_ssl@plt>:
    44d4:	add	ip, pc, #0, 12
    44d8:	add	ip, ip, #48, 20	; 0x30000
    44dc:	ldr	pc, [ip, #2976]!	; 0xba0

000044e0 <sigtimedwait@plt>:
    44e0:	add	ip, pc, #0, 12
    44e4:	add	ip, ip, #48, 20	; 0x30000
    44e8:	ldr	pc, [ip, #2968]!	; 0xb98

000044ec <rb_setenv@plt>:
    44ec:	add	ip, pc, #0, 12
    44f0:	add	ip, ip, #48, 20	; 0x30000
    44f4:	ldr	pc, [ip, #2960]!	; 0xb90

000044f8 <signal@plt>:
    44f8:	add	ip, pc, #0, 12
    44fc:	add	ip, ip, #48, 20	; 0x30000
    4500:	ldr	pc, [ip, #2952]!	; 0xb88

00004504 <rb_get_fd@plt>:
    4504:	add	ip, pc, #0, 12
    4508:	add	ip, ip, #48, 20	; 0x30000
    450c:	ldr	pc, [ip, #2944]!	; 0xb80

00004510 <epoll_create@plt>:
    4510:	add	ip, pc, #0, 12
    4514:	add	ip, ip, #48, 20	; 0x30000
    4518:	ldr	pc, [ip, #2936]!	; 0xb78

0000451c <rb_clear_patricia@plt>:
    451c:	add	ip, pc, #0, 12
    4520:	add	ip, ip, #48, 20	; 0x30000
    4524:	ldr	pc, [ip, #2928]!	; 0xb70

00004528 <__gmon_start__@plt>:
    4528:	add	ip, pc, #0, 12
    452c:	add	ip, ip, #48, 20	; 0x30000
    4530:	ldr	pc, [ip, #2920]!	; 0xb68

00004534 <SSL_CTX_clear_options@plt>:
    4534:	add	ip, pc, #0, 12
    4538:	add	ip, ip, #48, 20	; 0x30000
    453c:	ldr	pc, [ip, #2912]!	; 0xb60

00004540 <SSL_get_current_cipher@plt>:
    4540:	add	ip, pc, #0, 12
    4544:	add	ip, ip, #48, 20	; 0x30000
    4548:	ldr	pc, [ip, #2904]!	; 0xb58

0000454c <timer_create@plt>:
    454c:	add	ip, pc, #0, 12
    4550:	add	ip, ip, #48, 20	; 0x30000
    4554:	ldr	pc, [ip, #2896]!	; 0xb50

00004558 <X509_get_X509_PUBKEY@plt>:
    4558:	add	ip, pc, #0, 12
    455c:	add	ip, ip, #48, 20	; 0x30000
    4560:	ldr	pc, [ip, #2888]!	; 0xb48

00004564 <rb_select@plt>:
    4564:	add	ip, pc, #0, 12
    4568:	add	ip, ip, #48, 20	; 0x30000
    456c:	ldr	pc, [ip, #2880]!	; 0xb40

00004570 <rb_patricia_search_best@plt>:
    4570:	add	ip, pc, #0, 12
    4574:	add	ip, ip, #48, 20	; 0x30000
    4578:	ldr	pc, [ip, #2872]!	; 0xb38

0000457c <vsnprintf@plt>:
    457c:	add	ip, pc, #0, 12
    4580:	add	ip, ip, #48, 20	; 0x30000
    4584:	ldr	pc, [ip, #2864]!	; 0xb30

00004588 <socketpair@plt>:
    4588:	add	ip, pc, #0, 12
    458c:	add	ip, ip, #48, 20	; 0x30000
    4590:	ldr	pc, [ip, #2856]!	; 0xb28

00004594 <strncpy@plt>:
    4594:	add	ip, pc, #0, 12
    4598:	add	ip, ip, #48, 20	; 0x30000
    459c:	ldr	pc, [ip, #2848]!	; 0xb20

000045a0 <fclose@plt>:
    45a0:	add	ip, pc, #0, 12
    45a4:	add	ip, ip, #48, 20	; 0x30000
    45a8:	ldr	pc, [ip, #2840]!	; 0xb18

000045ac <recv@plt>:
    45ac:	add	ip, pc, #0, 12
    45b0:	add	ip, ip, #48, 20	; 0x30000
    45b4:	ldr	pc, [ip, #2832]!	; 0xb10

000045b8 <getenv@plt>:
    45b8:	add	ip, pc, #0, 12
    45bc:	add	ip, ip, #48, 20	; 0x30000
    45c0:	ldr	pc, [ip, #2824]!	; 0xb08

000045c4 <ERR_error_string_n@plt>:
    45c4:	add	ip, pc, #0, 12
    45c8:	add	ip, ip, #48, 20	; 0x30000
    45cc:	ldr	pc, [ip, #2816]!	; 0xb00

000045d0 <strchr@plt>:
    45d0:	add	ip, pc, #0, 12
    45d4:	add	ip, ip, #48, 20	; 0x30000
    45d8:	ldr	pc, [ip, #2808]!	; 0xaf8

000045dc <rb_gettimeofday@plt>:
    45dc:	add	ip, pc, #0, 12
    45e0:	add	ip, ip, #48, 20	; 0x30000
    45e4:	ldr	pc, [ip, #2800]!	; 0xaf0

000045e8 <strcasecmp@plt>:
    45e8:	add	ip, pc, #0, 12
    45ec:	add	ip, ip, #48, 20	; 0x30000
    45f0:	ldr	pc, [ip, #2792]!	; 0xae8

000045f4 <rb_helper_restart@plt>:
    45f4:	add	ip, pc, #0, 12
    45f8:	add	ip, ip, #48, 20	; 0x30000
    45fc:	ldr	pc, [ip, #2784]!	; 0xae0

00004600 <listen@plt>:
    4600:	add	ip, pc, #0, 12
    4604:	add	ip, ip, #48, 20	; 0x30000
    4608:	ldr	pc, [ip, #2776]!	; 0xad8

0000460c <calloc@plt>:
    460c:	add	ip, pc, #0, 12
    4610:	add	ip, ip, #48, 20	; 0x30000
    4614:	ldr	pc, [ip, #2768]!	; 0xad0

00004618 <SSL_write@plt>:
    4618:	add	ip, pc, #0, 12
    461c:	add	ip, ip, #48, 20	; 0x30000
    4620:	ldr	pc, [ip, #2760]!	; 0xac8

00004624 <rb_event_init@plt>:
    4624:	add	ip, pc, #0, 12
    4628:	add	ip, ip, #48, 20	; 0x30000
    462c:	ldr	pc, [ip, #2752]!	; 0xac0

00004630 <fopen@plt>:
    4630:	add	ip, pc, #0, 12
    4634:	add	ip, ip, #48, 20	; 0x30000
    4638:	ldr	pc, [ip, #2744]!	; 0xab8

0000463c <rb_set_nb@plt>:
    463c:	add	ip, pc, #0, 12
    4640:	add	ip, ip, #48, 20	; 0x30000
    4644:	ldr	pc, [ip, #2736]!	; 0xab0

00004648 <memset@plt>:
    4648:	add	ip, pc, #0, 12
    464c:	add	ip, ip, #48, 20	; 0x30000
    4650:	ldr	pc, [ip, #2728]!	; 0xaa8

00004654 <rb_inet_pton@plt>:
    4654:	add	ip, pc, #0, 12
    4658:	add	ip, ip, #48, 20	; 0x30000
    465c:	ldr	pc, [ip, #2720]!	; 0xaa0

00004660 <rb_radixtree_stats@plt>:
    4660:	add	ip, pc, #0, 12
    4664:	add	ip, ip, #48, 20	; 0x30000
    4668:	ldr	pc, [ip, #2712]!	; 0xa98

0000466c <strrchr@plt>:
    466c:	add	ip, pc, #0, 12
    4670:	add	ip, ip, #48, 20	; 0x30000
    4674:	ldr	pc, [ip, #2704]!	; 0xa90

00004678 <rb_write@plt>:
    4678:	add	ip, pc, #0, 12
    467c:	add	ip, ip, #48, 20	; 0x30000
    4680:	ldr	pc, [ip, #2696]!	; 0xa88

00004684 <SSL_set_fd@plt>:
    4684:	add	ip, pc, #0, 12
    4688:	add	ip, ip, #48, 20	; 0x30000
    468c:	ldr	pc, [ip, #2688]!	; 0xa80

00004690 <SSL_CTX_ctrl@plt>:
    4690:	add	ip, pc, #0, 12
    4694:	add	ip, ip, #48, 20	; 0x30000
    4698:	ldr	pc, [ip, #2680]!	; 0xa78

0000469c <rb_linebuf_parse@plt>:
    469c:	add	ip, pc, #0, 12
    46a0:	add	ip, ip, #48, 20	; 0x30000
    46a4:	ldr	pc, [ip, #2672]!	; 0xa70

000046a8 <writev@plt>:
    46a8:	add	ip, pc, #0, 12
    46ac:	add	ip, ip, #48, 20	; 0x30000
    46b0:	ldr	pc, [ip, #2664]!	; 0xa68

000046b4 <rb_fsnprint@plt>:
    46b4:	add	ip, pc, #0, 12
    46b8:	add	ip, ip, #48, 20	; 0x30000
    46bc:	ldr	pc, [ip, #2656]!	; 0xa60

000046c0 <rb_strlcpy@plt>:
    46c0:	add	ip, pc, #0, 12
    46c4:	add	ip, ip, #48, 20	; 0x30000
    46c8:	ldr	pc, [ip, #2648]!	; 0xa58

000046cc <ntohl@plt>:
    46cc:	add	ip, pc, #0, 12
    46d0:	add	ip, ip, #48, 20	; 0x30000
    46d4:	ldr	pc, [ip, #2640]!	; 0xa50

000046d8 <rb_patricia_search_best2@plt>:
    46d8:	add	ip, pc, #0, 12
    46dc:	add	ip, ip, #48, 20	; 0x30000
    46e0:	ldr	pc, [ip, #2632]!	; 0xa48

000046e4 <SSL_CIPHER_get_name@plt>:
    46e4:	add	ip, pc, #0, 12
    46e8:	add	ip, ip, #48, 20	; 0x30000
    46ec:	ldr	pc, [ip, #2624]!	; 0xa40

000046f0 <posix_spawnattr_init@plt>:
    46f0:	add	ip, pc, #0, 12
    46f4:	add	ip, ip, #48, 20	; 0x30000
    46f8:	ldr	pc, [ip, #2616]!	; 0xa38

000046fc <OpenSSL_version_num@plt>:
    46fc:	add	ip, pc, #0, 12
    4700:	add	ip, ip, #48, 20	; 0x30000
    4704:	ldr	pc, [ip, #2608]!	; 0xa30

00004708 <rb_dictionary_foreach_next@plt>:
    4708:	add	ip, pc, #0, 12
    470c:	add	ip, ip, #48, 20	; 0x30000
    4710:	ldr	pc, [ip, #2600]!	; 0xa28

00004714 <rb_kill@plt>:
    4714:	add	ip, pc, #0, 12
    4718:	add	ip, ip, #48, 20	; 0x30000
    471c:	ldr	pc, [ip, #2592]!	; 0xa20

00004720 <free@plt>:
    4720:	add	ip, pc, #0, 12
    4724:	add	ip, ip, #48, 20	; 0x30000
    4728:	ldr	pc, [ip, #2584]!	; 0xa18

0000472c <sendmsg@plt>:
    472c:	add	ip, pc, #0, 12
    4730:	add	ip, ip, #48, 20	; 0x30000
    4734:	ldr	pc, [ip, #2576]!	; 0xa10

00004738 <read@plt>:
    4738:	add	ip, pc, #0, 12
    473c:	add	ip, ip, #48, 20	; 0x30000
    4740:	ldr	pc, [ip, #2568]!	; 0xa08

00004744 <rb_radixtree_elem_add@plt>:
    4744:	add	ip, pc, #0, 12
    4748:	add	ip, ip, #48, 20	; 0x30000
    474c:	ldr	pc, [ip, #2560]!	; 0xa00

00004750 <write@plt>:
    4750:	add	ip, pc, #0, 12
    4754:	add	ip, ip, #48, 20	; 0x30000
    4758:	ldr	pc, [ip, #2552]!	; 0x9f8

0000475c <SSL_new@plt>:
    475c:	add	ip, pc, #0, 12
    4760:	add	ip, ip, #48, 20	; 0x30000
    4764:	ldr	pc, [ip, #2544]!	; 0x9f0

00004768 <access@plt>:
    4768:	add	ip, pc, #0, 12
    476c:	add	ip, ip, #48, 20	; 0x30000
    4770:	ldr	pc, [ip, #2536]!	; 0x9e8

00004774 <rb_lib_loop@plt>:
    4774:	add	ip, pc, #0, 12
    4778:	add	ip, ip, #48, 20	; 0x30000
    477c:	ldr	pc, [ip, #2528]!	; 0x9e0

00004780 <timer_settime@plt>:
    4780:	add	ip, pc, #0, 12
    4784:	add	ip, ip, #48, 20	; 0x30000
    4788:	ldr	pc, [ip, #2520]!	; 0x9d8

0000478c <gettimeofday@plt>:
    478c:	add	ip, pc, #0, 12
    4790:	add	ip, ip, #48, 20	; 0x30000
    4794:	ldr	pc, [ip, #2512]!	; 0x9d0

00004798 <accept@plt>:
    4798:	add	ip, pc, #0, 12
    479c:	add	ip, ip, #48, 20	; 0x30000
    47a0:	ldr	pc, [ip, #2504]!	; 0x9c8

000047a4 <SSL_read@plt>:
    47a4:	add	ip, pc, #0, 12
    47a8:	add	ip, ip, #48, 20	; 0x30000
    47ac:	ldr	pc, [ip, #2496]!	; 0x9c0

000047b0 <rb_read@plt>:
    47b0:	add	ip, pc, #0, 12
    47b4:	add	ip, ip, #48, 20	; 0x30000
    47b8:	ldr	pc, [ip, #2488]!	; 0x9b8

000047bc <socket@plt>:
    47bc:	add	ip, pc, #0, 12
    47c0:	add	ip, ip, #48, 20	; 0x30000
    47c4:	ldr	pc, [ip, #2480]!	; 0x9b0

000047c8 <rb_linebuf_get@plt>:
    47c8:	add	ip, pc, #0, 12
    47cc:	add	ip, ip, #48, 20	; 0x30000
    47d0:	ldr	pc, [ip, #2472]!	; 0x9a8

000047d4 <rb_radixtree_foreach_cur@plt>:
    47d4:	add	ip, pc, #0, 12
    47d8:	add	ip, ip, #48, 20	; 0x30000
    47dc:	ldr	pc, [ip, #2464]!	; 0x9a0

000047e0 <epoll_wait@plt>:
    47e0:	add	ip, pc, #0, 12
    47e4:	add	ip, ip, #48, 20	; 0x30000
    47e8:	ldr	pc, [ip, #2456]!	; 0x998

000047ec <SSL_do_handshake@plt>:
    47ec:	add	ip, pc, #0, 12
    47f0:	add	ip, ip, #48, 20	; 0x30000
    47f4:	ldr	pc, [ip, #2448]!	; 0x990

000047f8 <rb_linebuf_flush@plt>:
    47f8:	add	ip, pc, #0, 12
    47fc:	add	ip, ip, #48, 20	; 0x30000
    4800:	ldr	pc, [ip, #2440]!	; 0x988

00004804 <posix_spawn@plt>:
    4804:	add	ip, pc, #0, 12
    4808:	add	ip, ip, #48, 20	; 0x30000
    480c:	ldr	pc, [ip, #2432]!	; 0x980

00004810 <strlen@plt>:
    4810:	add	ip, pc, #0, 12
    4814:	add	ip, ip, #48, 20	; 0x30000
    4818:	ldr	pc, [ip, #2424]!	; 0x978

0000481c <rb_current_time@plt>:
    481c:	add	ip, pc, #0, 12
    4820:	add	ip, ip, #48, 20	; 0x30000
    4824:	ldr	pc, [ip, #2416]!	; 0x970

00004828 <strtoul@plt>:
    4828:	add	ip, pc, #0, 12
    482c:	add	ip, ip, #48, 20	; 0x30000
    4830:	ldr	pc, [ip, #2408]!	; 0x968

00004834 <memcpy@plt>:
    4834:	add	ip, pc, #0, 12
    4838:	add	ip, ip, #48, 20	; 0x30000
    483c:	ldr	pc, [ip, #2400]!	; 0x960

00004840 <PEM_read_X509@plt>:
    4840:	add	ip, pc, #0, 12
    4844:	add	ip, ip, #48, 20	; 0x30000
    4848:	ldr	pc, [ip, #2392]!	; 0x958

0000484c <posix_spawnattr_setflags@plt>:
    484c:	add	ip, pc, #0, 12
    4850:	add	ip, ip, #48, 20	; 0x30000
    4854:	ldr	pc, [ip, #2384]!	; 0x950

00004858 <SSL_CTX_use_certificate_chain_file@plt>:
    4858:	add	ip, pc, #0, 12
    485c:	add	ip, ip, #48, 20	; 0x30000
    4860:	ldr	pc, [ip, #2376]!	; 0x948

00004864 <rb_free_rb_dlink_node@plt>:
    4864:	add	ip, pc, #0, 12
    4868:	add	ip, ip, #48, 20	; 0x30000
    486c:	ldr	pc, [ip, #2368]!	; 0x940

00004870 <SSL_CTX_set_options@plt>:
    4870:	add	ip, pc, #0, 12
    4874:	add	ip, ip, #48, 20	; 0x30000
    4878:	ldr	pc, [ip, #2360]!	; 0x938

0000487c <posix_spawnattr_destroy@plt>:
    487c:	add	ip, pc, #0, 12
    4880:	add	ip, ip, #48, 20	; 0x30000
    4884:	ldr	pc, [ip, #2352]!	; 0x930

00004888 <rb_close@plt>:
    4888:	add	ip, pc, #0, 12
    488c:	add	ip, ip, #48, 20	; 0x30000
    4890:	ldr	pc, [ip, #2344]!	; 0x928

00004894 <strtol@plt>:
    4894:	add	ip, pc, #0, 12
    4898:	add	ip, ip, #48, 20	; 0x30000
    489c:	ldr	pc, [ip, #2336]!	; 0x920

000048a0 <sigaddset@plt>:
    48a0:	add	ip, pc, #0, 12
    48a4:	add	ip, ip, #48, 20	; 0x30000
    48a8:	ldr	pc, [ip, #2328]!	; 0x918

000048ac <strcpy@plt>:
    48ac:	add	ip, pc, #0, 12
    48b0:	add	ip, ip, #48, 20	; 0x30000
    48b4:	ldr	pc, [ip, #2320]!	; 0x910

000048b8 <waitpid@plt>:
    48b8:	add	ip, pc, #0, 12
    48bc:	add	ip, ip, #48, 20	; 0x30000
    48c0:	ldr	pc, [ip, #2312]!	; 0x908

000048c4 <rb_run_one_event@plt>:
    48c4:	add	ip, pc, #0, 12
    48c8:	add	ip, ip, #48, 20	; 0x30000
    48cc:	ldr	pc, [ip, #2304]!	; 0x900

000048d0 <rb_patricia_search_exact@plt>:
    48d0:	add	ip, pc, #0, 12
    48d4:	add	ip, ip, #48, 20	; 0x30000
    48d8:	ldr	pc, [ip, #2296]!	; 0x8f8

000048dc <strncat@plt>:
    48dc:	add	ip, pc, #0, 12
    48e0:	add	ip, ip, #48, 20	; 0x30000
    48e4:	ldr	pc, [ip, #2288]!	; 0x8f0

000048e8 <atol@plt>:
    48e8:	add	ip, pc, #0, 12
    48ec:	add	ip, ip, #48, 20	; 0x30000
    48f0:	ldr	pc, [ip, #2280]!	; 0x8e8

000048f4 <rb_bh_free@plt>:
    48f4:	add	ip, pc, #0, 12
    48f8:	add	ip, ip, #48, 20	; 0x30000
    48fc:	ldr	pc, [ip, #2272]!	; 0x8e0

00004900 <rb_init_rb_dlink_nodes@plt>:
    4900:	add	ip, pc, #0, 12
    4904:	add	ip, ip, #48, 20	; 0x30000
    4908:	ldr	pc, [ip, #2264]!	; 0x8d8

0000490c <EVP_sha1@plt>:
    490c:	add	ip, pc, #0, 12
    4910:	add	ip, ip, #48, 20	; 0x30000
    4914:	ldr	pc, [ip, #2256]!	; 0x8d0

00004918 <rb_patricia_lookup@plt>:
    4918:	add	ip, pc, #0, 12
    491c:	add	ip, ip, #48, 20	; 0x30000
    4920:	ldr	pc, [ip, #2248]!	; 0x8c8

00004924 <shutdown@plt>:
    4924:	add	ip, pc, #0, 12
    4928:	add	ip, ip, #48, 20	; 0x30000
    492c:	ldr	pc, [ip, #2240]!	; 0x8c0

00004930 <bind@plt>:
    4930:	add	ip, pc, #0, 12
    4934:	add	ip, ip, #48, 20	; 0x30000
    4938:	ldr	pc, [ip, #2232]!	; 0x8b8

0000493c <rb_lib_log@plt>:
    493c:	add	ip, pc, #0, 12
    4940:	add	ip, ip, #48, 20	; 0x30000
    4944:	ldr	pc, [ip, #2224]!	; 0x8b0

00004948 <SSL_CTX_use_PrivateKey_file@plt>:
    4948:	add	ip, pc, #0, 12
    494c:	add	ip, ip, #48, 20	; 0x30000
    4950:	ldr	pc, [ip, #2216]!	; 0x8a8

00004954 <select@plt>:
    4954:	add	ip, pc, #0, 12
    4958:	add	ip, ip, #48, 20	; 0x30000
    495c:	ldr	pc, [ip, #2208]!	; 0x8a0

00004960 <close@plt>:
    4960:	add	ip, pc, #0, 12
    4964:	add	ip, ip, #48, 20	; 0x30000
    4968:	ldr	pc, [ip, #2200]!	; 0x898

0000496c <rb_inet_ntop@plt>:
    496c:	add	ip, pc, #0, 12
    4970:	add	ip, ip, #48, 20	; 0x30000
    4974:	ldr	pc, [ip, #2192]!	; 0x890

00004978 <rb_bh_alloc@plt>:
    4978:	add	ip, pc, #0, 12
    497c:	add	ip, ip, #48, 20	; 0x30000
    4980:	ldr	pc, [ip, #2184]!	; 0x888

00004984 <SSL_free@plt>:
    4984:	add	ip, pc, #0, 12
    4988:	add	ip, ip, #48, 20	; 0x30000
    498c:	ldr	pc, [ip, #2176]!	; 0x880

00004990 <rb_pipe@plt>:
    4990:	add	ip, pc, #0, 12
    4994:	add	ip, ip, #48, 20	; 0x30000
    4998:	ldr	pc, [ip, #2168]!	; 0x878

0000499c <strncasecmp@plt>:
    499c:	add	ip, pc, #0, 12
    49a0:	add	ip, ip, #48, 20	; 0x30000
    49a4:	ldr	pc, [ip, #2160]!	; 0x870

000049a8 <rb_outofmemory@plt>:
    49a8:	add	ip, pc, #0, 12
    49ac:	add	ip, ip, #48, 20	; 0x30000
    49b0:	ldr	pc, [ip, #2152]!	; 0x868

000049b4 <rb_set_time@plt>:
    49b4:	add	ip, pc, #0, 12
    49b8:	add	ip, ip, #48, 20	; 0x30000
    49bc:	ldr	pc, [ip, #2144]!	; 0x860

000049c0 <rb_dictionary_stats@plt>:
    49c0:	add	ip, pc, #0, 12
    49c4:	add	ip, ip, #48, 20	; 0x30000
    49c8:	ldr	pc, [ip, #2136]!	; 0x858

000049cc <malloc@plt>:
    49cc:	add	ip, pc, #0, 12
    49d0:	add	ip, ip, #48, 20	; 0x30000
    49d4:	ldr	pc, [ip, #2128]!	; 0x850

000049d8 <sigprocmask@plt>:
    49d8:	add	ip, pc, #0, 12
    49dc:	add	ip, ip, #48, 20	; 0x30000
    49e0:	ldr	pc, [ip, #2120]!	; 0x848

000049e4 <rb_event_run@plt>:
    49e4:	add	ip, pc, #0, 12
    49e8:	add	ip, ip, #48, 20	; 0x30000
    49ec:	ldr	pc, [ip, #2112]!	; 0x840

000049f0 <SSL_set_accept_state@plt>:
    49f0:	add	ip, pc, #0, 12
    49f4:	add	ip, ip, #48, 20	; 0x30000
    49f8:	ldr	pc, [ip, #2104]!	; 0x838

000049fc <rb_init_bh@plt>:
    49fc:	add	ip, pc, #0, 12
    4a00:	add	ip, ip, #48, 20	; 0x30000
    4a04:	ldr	pc, [ip, #2096]!	; 0x830

00004a08 <PEM_read_DHparams@plt>:
    4a08:	add	ip, pc, #0, 12
    4a0c:	add	ip, ip, #48, 20	; 0x30000
    4a10:	ldr	pc, [ip, #2088]!	; 0x828

00004a14 <gmtime_r@plt>:
    4a14:	add	ip, pc, #0, 12
    4a18:	add	ip, ip, #48, 20	; 0x30000
    4a1c:	ldr	pc, [ip, #2080]!	; 0x820

00004a20 <poll@plt>:
    4a20:	add	ip, pc, #0, 12
    4a24:	add	ip, ip, #48, 20	; 0x30000
    4a28:	ldr	pc, [ip, #2072]!	; 0x818

00004a2c <ASN1_item_digest@plt>:
    4a2c:	add	ip, pc, #0, 12
    4a30:	add	ip, ip, #48, 20	; 0x30000
    4a34:	ldr	pc, [ip, #2064]!	; 0x810

00004a38 <strnlen@plt>:
    4a38:	add	ip, pc, #0, 12
    4a3c:	add	ip, ip, #48, 20	; 0x30000
    4a40:	ldr	pc, [ip, #2056]!	; 0x808

00004a44 <SSL_get_peer_certificate@plt>:
    4a44:	add	ip, pc, #0, 12
    4a48:	add	ip, ip, #48, 20	; 0x30000
    4a4c:	ldr	pc, [ip, #2048]!	; 0x800

00004a50 <rb_dictionary_find@plt>:
    4a50:	add	ip, pc, #0, 12
    4a54:	add	ip, ip, #48, 20	; 0x30000
    4a58:	ldr	pc, [ip, #2040]!	; 0x7f8

00004a5c <rb_lib_init@plt>:
    4a5c:	add	ip, pc, #0, 12
    4a60:	add	ip, ip, #48, 20	; 0x30000
    4a64:	ldr	pc, [ip, #2032]!	; 0x7f0

00004a68 <SSL_get_verify_result@plt>:
    4a68:	add	ip, pc, #0, 12
    4a6c:	add	ip, ip, #48, 20	; 0x30000
    4a70:	ldr	pc, [ip, #2024]!	; 0x7e8

00004a74 <strtok_r@plt>:
    4a74:	add	ip, pc, #0, 12
    4a78:	add	ip, ip, #48, 20	; 0x30000
    4a7c:	ldr	pc, [ip, #2016]!	; 0x7e0

00004a80 <rb_lib_restart@plt>:
    4a80:	add	ip, pc, #0, 12
    4a84:	add	ip, ip, #48, 20	; 0x30000
    4a88:	ldr	pc, [ip, #2008]!	; 0x7d8

00004a8c <DH_free@plt>:
    4a8c:	add	ip, pc, #0, 12
    4a90:	add	ip, ip, #48, 20	; 0x30000
    4a94:	ldr	pc, [ip, #2000]!	; 0x7d0

00004a98 <timer_delete@plt>:
    4a98:	add	ip, pc, #0, 12
    4a9c:	add	ip, ip, #48, 20	; 0x30000
    4aa0:	ldr	pc, [ip, #1992]!	; 0x7c8

00004aa4 <rb_open@plt>:
    4aa4:	add	ip, pc, #0, 12
    4aa8:	add	ip, ip, #48, 20	; 0x30000
    4aac:	ldr	pc, [ip, #1984]!	; 0x7c0

00004ab0 <rb_get_sockerr@plt>:
    4ab0:	add	ip, pc, #0, 12
    4ab4:	add	ip, ip, #48, 20	; 0x30000
    4ab8:	ldr	pc, [ip, #1976]!	; 0x7b8

00004abc <send@plt>:
    4abc:	add	ip, pc, #0, 12
    4ac0:	add	ip, ip, #48, 20	; 0x30000
    4ac4:	ldr	pc, [ip, #1968]!	; 0x7b0

00004ac8 <SSL_shutdown@plt>:
    4ac8:	add	ip, pc, #0, 12
    4acc:	add	ip, ip, #48, 20	; 0x30000
    4ad0:	ldr	pc, [ip, #1960]!	; 0x7a8

00004ad4 <rb_bh_create@plt>:
    4ad4:	add	ip, pc, #0, 12
    4ad8:	add	ip, ip, #48, 20	; 0x30000
    4adc:	ldr	pc, [ip, #1952]!	; 0x7a0

00004ae0 <dup2@plt>:
    4ae0:	add	ip, pc, #0, 12
    4ae4:	add	ip, ip, #48, 20	; 0x30000
    4ae8:	ldr	pc, [ip, #1944]!	; 0x798

00004aec <getpid@plt>:
    4aec:	add	ip, pc, #0, 12
    4af0:	add	ip, ip, #48, 20	; 0x30000
    4af4:	ldr	pc, [ip, #1936]!	; 0x790

00004af8 <rb_writev@plt>:
    4af8:	add	ip, pc, #0, 12
    4afc:	add	ip, ip, #48, 20	; 0x30000
    4b00:	ldr	pc, [ip, #1928]!	; 0x788

00004b04 <RAND_bytes@plt>:
    4b04:	add	ip, pc, #0, 12
    4b08:	add	ip, ip, #48, 20	; 0x30000
    4b0c:	ldr	pc, [ip, #1920]!	; 0x780

00004b10 <rb_linebuf_newbuf@plt>:
    4b10:	add	ip, pc, #0, 12
    4b14:	add	ip, ip, #48, 20	; 0x30000
    4b18:	ldr	pc, [ip, #1912]!	; 0x778

00004b1c <rb_fdlist_init@plt>:
    4b1c:	add	ip, pc, #0, 12
    4b20:	add	ip, ip, #48, 20	; 0x30000
    4b24:	ldr	pc, [ip, #1904]!	; 0x770

00004b28 <rb_event_add@plt>:
    4b28:	add	ip, pc, #0, 12
    4b2c:	add	ip, ip, #48, 20	; 0x30000
    4b30:	ldr	pc, [ip, #1896]!	; 0x768

00004b34 <readlink@plt>:
    4b34:	add	ip, pc, #0, 12
    4b38:	add	ip, ip, #48, 20	; 0x30000
    4b3c:	ldr	pc, [ip, #1888]!	; 0x760

00004b40 <htonl@plt>:
    4b40:	add	ip, pc, #0, 12
    4b44:	add	ip, ip, #48, 20	; 0x30000
    4b48:	ldr	pc, [ip, #1880]!	; 0x758

00004b4c <SSL_CTX_new@plt>:
    4b4c:	add	ip, pc, #0, 12
    4b50:	add	ip, ip, #48, 20	; 0x30000
    4b54:	ldr	pc, [ip, #1872]!	; 0x750

00004b58 <rb_setup_fd@plt>:
    4b58:	add	ip, pc, #0, 12
    4b5c:	add	ip, ip, #48, 20	; 0x30000
    4b60:	ldr	pc, [ip, #1864]!	; 0x748

00004b64 <recvmsg@plt>:
    4b64:	add	ip, pc, #0, 12
    4b68:	add	ip, ip, #48, 20	; 0x30000
    4b6c:	ldr	pc, [ip, #1856]!	; 0x740

00004b70 <rand@plt>:
    4b70:	add	ip, pc, #0, 12
    4b74:	add	ip, ip, #48, 20	; 0x30000
    4b78:	ldr	pc, [ip, #1848]!	; 0x738

00004b7c <rb_linebuf_init@plt>:
    4b7c:	add	ip, pc, #0, 12
    4b80:	add	ip, ip, #48, 20	; 0x30000
    4b84:	ldr	pc, [ip, #1840]!	; 0x730

00004b88 <__fxstat@plt>:
    4b88:	add	ip, pc, #0, 12
    4b8c:	add	ip, ip, #48, 20	; 0x30000
    4b90:	ldr	pc, [ip, #1832]!	; 0x728

00004b94 <SSL_set_connect_state@plt>:
    4b94:	add	ip, pc, #0, 12
    4b98:	add	ip, ip, #48, 20	; 0x30000
    4b9c:	ldr	pc, [ip, #1824]!	; 0x720

00004ba0 <rb_radixtree_elem_find@plt>:
    4ba0:	add	ip, pc, #0, 12
    4ba4:	add	ip, ip, #48, 20	; 0x30000
    4ba8:	ldr	pc, [ip, #1816]!	; 0x718

00004bac <rb_make_rb_dlink_node@plt>:
    4bac:	add	ip, pc, #0, 12
    4bb0:	add	ip, ip, #48, 20	; 0x30000
    4bb4:	ldr	pc, [ip, #1808]!	; 0x710

00004bb8 <rb_strlcat@plt>:
    4bb8:	add	ip, pc, #0, 12
    4bbc:	add	ip, ip, #48, 20	; 0x30000
    4bc0:	ldr	pc, [ip, #1800]!	; 0x708

00004bc4 <rb_spawn_process@plt>:
    4bc4:	add	ip, pc, #0, 12
    4bc8:	add	ip, ip, #48, 20	; 0x30000
    4bcc:	ldr	pc, [ip, #1792]!	; 0x700

00004bd0 <EVP_sha512@plt>:
    4bd0:	add	ip, pc, #0, 12
    4bd4:	add	ip, ip, #48, 20	; 0x30000
    4bd8:	ldr	pc, [ip, #1784]!	; 0x6f8

00004bdc <snprintf@plt>:
    4bdc:	add	ip, pc, #0, 12
    4be0:	add	ip, ip, #48, 20	; 0x30000
    4be4:	ldr	pc, [ip, #1776]!	; 0x6f0

00004be8 <RAND_status@plt>:
    4be8:	add	ip, pc, #0, 12
    4bec:	add	ip, ip, #48, 20	; 0x30000
    4bf0:	ldr	pc, [ip, #1768]!	; 0x6e8

00004bf4 <timerfd_create@plt>:
    4bf4:	add	ip, pc, #0, 12
    4bf8:	add	ip, ip, #48, 20	; 0x30000
    4bfc:	ldr	pc, [ip, #1760]!	; 0x6e0

00004c00 <EVP_sha256@plt>:
    4c00:	add	ip, pc, #0, 12
    4c04:	add	ip, ip, #48, 20	; 0x30000
    4c08:	ldr	pc, [ip, #1752]!	; 0x6d8

00004c0c <strcspn@plt>:
    4c0c:	add	ip, pc, #0, 12
    4c10:	add	ip, ip, #48, 20	; 0x30000
    4c14:	ldr	pc, [ip, #1744]!	; 0x6d0

00004c18 <rb_linebuf_put@plt>:
    4c18:	add	ip, pc, #0, 12
    4c1c:	add	ip, ip, #48, 20	; 0x30000
    4c20:	ldr	pc, [ip, #1736]!	; 0x6c8

00004c24 <rb_listen@plt>:
    4c24:	add	ip, pc, #0, 12
    4c28:	add	ip, ip, #48, 20	; 0x30000
    4c2c:	ldr	pc, [ip, #1728]!	; 0x6c0

00004c30 <fcntl@plt>:
    4c30:	add	ip, pc, #0, 12
    4c34:	add	ip, ip, #48, 20	; 0x30000
    4c38:	ldr	pc, [ip, #1720]!	; 0x6b8

00004c3c <strncmp@plt>:
    4c3c:	add	ip, pc, #0, 12
    4c40:	add	ip, ip, #48, 20	; 0x30000
    4c44:	ldr	pc, [ip, #1712]!	; 0x6b0

00004c48 <kill@plt>:
    4c48:	add	ip, pc, #0, 12
    4c4c:	add	ip, ip, #48, 20	; 0x30000
    4c50:	ldr	pc, [ip, #1704]!	; 0x6a8

00004c54 <nanosleep@plt>:
    4c54:	add	ip, pc, #0, 12
    4c58:	add	ip, ip, #48, 20	; 0x30000
    4c5c:	ldr	pc, [ip, #1696]!	; 0x6a0

00004c60 <rb_event_next@plt>:
    4c60:	add	ip, pc, #0, 12
    4c64:	add	ip, ip, #48, 20	; 0x30000
    4c68:	ldr	pc, [ip, #1688]!	; 0x698

00004c6c <realloc@plt>:
    4c6c:	add	ip, pc, #0, 12
    4c70:	add	ip, ip, #48, 20	; 0x30000
    4c74:	ldr	pc, [ip, #1680]!	; 0x690

00004c78 <timerfd_settime@plt>:
    4c78:	add	ip, pc, #0, 12
    4c7c:	add	ip, ip, #48, 20	; 0x30000
    4c80:	ldr	pc, [ip, #1672]!	; 0x688

00004c84 <epoll_ctl@plt>:
    4c84:	add	ip, pc, #0, 12
    4c88:	add	ip, ip, #48, 20	; 0x30000
    4c8c:	ldr	pc, [ip, #1664]!	; 0x680

00004c90 <X509_free@plt>:
    4c90:	add	ip, pc, #0, 12
    4c94:	add	ip, ip, #48, 20	; 0x30000
    4c98:	ldr	pc, [ip, #1656]!	; 0x678

00004c9c <readv@plt>:
    4c9c:	add	ip, pc, #0, 12
    4ca0:	add	ip, ip, #48, 20	; 0x30000
    4ca4:	ldr	pc, [ip, #1648]!	; 0x670

00004ca8 <getsockopt@plt>:
    4ca8:	add	ip, pc, #0, 12
    4cac:	add	ip, ip, #48, 20	; 0x30000
    4cb0:	ldr	pc, [ip, #1640]!	; 0x668

00004cb4 <pipe@plt>:
    4cb4:	add	ip, pc, #0, 12
    4cb8:	add	ip, ip, #48, 20	; 0x30000
    4cbc:	ldr	pc, [ip, #1632]!	; 0x660

00004cc0 <OpenSSL_version@plt>:
    4cc0:	add	ip, pc, #0, 12
    4cc4:	add	ip, ip, #48, 20	; 0x30000
    4cc8:	ldr	pc, [ip, #1624]!	; 0x658

00004ccc <setsockopt@plt>:
    4ccc:	add	ip, pc, #0, 12
    4cd0:	add	ip, ip, #48, 20	; 0x30000
    4cd4:	ldr	pc, [ip, #1616]!	; 0x650

00004cd8 <SSL_get_error@plt>:
    4cd8:	add	ip, pc, #0, 12
    4cdc:	add	ip, ip, #48, 20	; 0x30000
    4ce0:	ldr	pc, [ip, #1608]!	; 0x648

00004ce4 <SSL_get_version@plt>:
    4ce4:	add	ip, pc, #0, 12
    4ce8:	add	ip, ip, #48, 20	; 0x30000
    4cec:	ldr	pc, [ip, #1600]!	; 0x640

00004cf0 <rb_radixtree_delete@plt>:
    4cf0:	add	ip, pc, #0, 12
    4cf4:	add	ip, ip, #48, 20	; 0x30000
    4cf8:	ldr	pc, [ip, #1592]!	; 0x638

00004cfc <tolower@plt>:
    4cfc:	add	ip, pc, #0, 12
    4d00:	add	ip, ip, #48, 20	; 0x30000
    4d04:	ldr	pc, [ip, #1584]!	; 0x630

00004d08 <setenv@plt>:
    4d08:	add	ip, pc, #0, 12
    4d0c:	add	ip, ip, #48, 20	; 0x30000
    4d10:	ldr	pc, [ip, #1576]!	; 0x628

00004d14 <strcmp@plt>:
    4d14:	add	ip, pc, #0, 12
    4d18:	add	ip, ip, #48, 20	; 0x30000
    4d1c:	ldr	pc, [ip, #1568]!	; 0x620

00004d20 <__errno_location@plt>:
    4d20:	add	ip, pc, #0, 12
    4d24:	add	ip, ip, #48, 20	; 0x30000
    4d28:	ldr	pc, [ip, #1560]!	; 0x618

00004d2c <__cxa_finalize@plt>:
    4d2c:	add	ip, pc, #0, 12
    4d30:	add	ip, ip, #48, 20	; 0x30000
    4d34:	ldr	pc, [ip, #1552]!	; 0x610

00004d38 <sprintf@plt>:
    4d38:	add	ip, pc, #0, 12
    4d3c:	add	ip, ip, #48, 20	; 0x30000
    4d40:	ldr	pc, [ip, #1544]!	; 0x608

00004d44 <rb_bh_usage@plt>:
    4d44:	add	ip, pc, #0, 12
    4d48:	add	ip, ip, #48, 20	; 0x30000
    4d4c:	ldr	pc, [ip, #1536]!	; 0x600

00004d50 <SSL_CTX_set_verify@plt>:
    4d50:	add	ip, pc, #0, 12
    4d54:	add	ip, ip, #48, 20	; 0x30000
    4d58:	ldr	pc, [ip, #1528]!	; 0x5f8

Disassembly of section .text:

00004d60 <call_weak_fn>:
    4d60:	ldr	r3, [pc, #20]	; 4d7c <call_weak_fn+0x1c>
    4d64:	ldr	r2, [pc, #20]	; 4d80 <call_weak_fn+0x20>
    4d68:	add	r3, pc, r3
    4d6c:	ldr	r2, [r3, r2]
    4d70:	cmp	r2, #0
    4d74:	bxeq	lr
    4d78:	b	4528 <__gmon_start__@plt>
    4d7c:	.word	0x00030290
    4d80:	.word	0x00000364

00004d84 <deregister_tm_clones>:
    4d84:	ldr	r0, [pc, #44]	; 4db8 <deregister_tm_clones+0x34>
    4d88:	ldr	r3, [pc, #44]	; 4dbc <deregister_tm_clones+0x38>
    4d8c:	add	r0, pc, r0
    4d90:	add	r3, pc, r3
    4d94:	cmp	r3, r0
    4d98:	ldr	r3, [pc, #32]	; 4dc0 <deregister_tm_clones+0x3c>
    4d9c:	add	r3, pc, r3
    4da0:	bxeq	lr
    4da4:	ldr	r2, [pc, #24]	; 4dc4 <deregister_tm_clones+0x40>
    4da8:	ldr	r3, [r3, r2]
    4dac:	cmp	r3, #0
    4db0:	bxeq	lr
    4db4:	bx	r3
    4db8:	.word	0x00030c00
    4dbc:	.word	0x00030bfc
    4dc0:	.word	0x0003025c
    4dc4:	.word	0x00000380

00004dc8 <register_tm_clones>:
    4dc8:	ldr	r0, [pc, #56]	; 4e08 <register_tm_clones+0x40>
    4dcc:	ldr	r3, [pc, #56]	; 4e0c <register_tm_clones+0x44>
    4dd0:	add	r0, pc, r0
    4dd4:	add	r3, pc, r3
    4dd8:	sub	r1, r3, r0
    4ddc:	ldr	r3, [pc, #44]	; 4e10 <register_tm_clones+0x48>
    4de0:	asr	r1, r1, #2
    4de4:	add	r3, pc, r3
    4de8:	add	r1, r1, r1, lsr #31
    4dec:	asrs	r1, r1, #1
    4df0:	bxeq	lr
    4df4:	ldr	r2, [pc, #24]	; 4e14 <register_tm_clones+0x4c>
    4df8:	ldr	r3, [r3, r2]
    4dfc:	cmp	r3, #0
    4e00:	bxeq	lr
    4e04:	bx	r3
    4e08:	.word	0x00030bbc
    4e0c:	.word	0x00030bb8
    4e10:	.word	0x00030214
    4e14:	.word	0x00000390

00004e18 <__do_global_dtors_aux>:
    4e18:	ldr	r3, [pc, #76]	; 4e6c <__do_global_dtors_aux+0x54>
    4e1c:	ldr	r2, [pc, #76]	; 4e70 <__do_global_dtors_aux+0x58>
    4e20:	add	r3, pc, r3
    4e24:	add	r2, pc, r2
    4e28:	ldrb	r3, [r3]
    4e2c:	cmp	r3, #0
    4e30:	bxne	lr
    4e34:	ldr	r3, [pc, #56]	; 4e74 <__do_global_dtors_aux+0x5c>
    4e38:	push	{r4, lr}
    4e3c:	ldr	r3, [r2, r3]
    4e40:	cmp	r3, #0
    4e44:	beq	4e54 <__do_global_dtors_aux+0x3c>
    4e48:	ldr	r3, [pc, #40]	; 4e78 <__do_global_dtors_aux+0x60>
    4e4c:	ldr	r0, [pc, r3]
    4e50:	bl	4d2c <__cxa_finalize@plt>
    4e54:	bl	4d84 <deregister_tm_clones>
    4e58:	ldr	r3, [pc, #28]	; 4e7c <__do_global_dtors_aux+0x64>
    4e5c:	mov	r2, #1
    4e60:	add	r3, pc, r3
    4e64:	strb	r2, [r3]
    4e68:	pop	{r4, pc}
    4e6c:	.word	0x00030b70
    4e70:	.word	0x000301d4
    4e74:	.word	0x00000420
    4e78:	.word	0x000305d4
    4e7c:	.word	0x00030b30

00004e80 <frame_dummy>:
    4e80:	b	4dc8 <register_tm_clones>

00004e84 <rb_spawn_process>:
    4e84:	str	r4, [sp, #-12]!
    4e88:	str	fp, [sp, #4]
    4e8c:	str	lr, [sp, #8]
    4e90:	add	fp, sp, #8
    4e94:	sub	sp, sp, #372	; 0x174
    4e98:	str	r0, [fp, #-368]	; 0xfffffe90
    4e9c:	str	r1, [fp, #-372]	; 0xfffffe8c
    4ea0:	ldr	r4, [pc, #172]	; 4f54 <rb_spawn_process+0xd0>
    4ea4:	add	r4, pc, r4
    4ea8:	ldr	r3, [fp, #-372]	; 0xfffffe8c
    4eac:	str	r3, [fp, #-16]
    4eb0:	sub	r3, fp, #364	; 0x16c
    4eb4:	mov	r0, r3
    4eb8:	bl	46f0 <posix_spawnattr_init@plt>
    4ebc:	sub	r3, fp, #364	; 0x16c
    4ec0:	mov	r1, #64	; 0x40
    4ec4:	mov	r0, r3
    4ec8:	bl	484c <posix_spawnattr_setflags@plt>
    4ecc:	ldr	r3, [pc, #132]	; 4f58 <rb_spawn_process+0xd4>
    4ed0:	ldr	r3, [r4, r3]
    4ed4:	ldr	r3, [r3]
    4ed8:	str	r3, [fp, #-20]	; 0xffffffec
    4edc:	sub	r2, fp, #364	; 0x16c
    4ee0:	sub	r0, fp, #28
    4ee4:	ldr	r3, [fp, #-20]	; 0xffffffec
    4ee8:	str	r3, [sp, #4]
    4eec:	ldr	r3, [fp, #-16]
    4ef0:	str	r3, [sp]
    4ef4:	mov	r3, r2
    4ef8:	mov	r2, #0
    4efc:	ldr	r1, [fp, #-368]	; 0xfffffe90
    4f00:	bl	4804 <posix_spawn@plt>
    4f04:	str	r0, [fp, #-24]	; 0xffffffe8
    4f08:	sub	r3, fp, #364	; 0x16c
    4f0c:	mov	r0, r3
    4f10:	bl	487c <posix_spawnattr_destroy@plt>
    4f14:	ldr	r3, [fp, #-24]	; 0xffffffe8
    4f18:	cmp	r3, #0
    4f1c:	beq	4f38 <rb_spawn_process+0xb4>
    4f20:	bl	4d20 <__errno_location@plt>
    4f24:	mov	r2, r0
    4f28:	ldr	r3, [fp, #-24]	; 0xffffffe8
    4f2c:	str	r3, [r2]
    4f30:	mvn	r3, #0
    4f34:	str	r3, [fp, #-28]	; 0xffffffe4
    4f38:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4f3c:	mov	r0, r3
    4f40:	sub	sp, fp, #8
    4f44:	ldr	r4, [sp]
    4f48:	ldr	fp, [sp, #4]
    4f4c:	add	sp, sp, #8
    4f50:	pop	{pc}		; (ldr pc, [sp], #4)
    4f54:	.word	0x00030154
    4f58:	.word	0x000003a8

00004f5c <rb_gettimeofday>:
    4f5c:	str	fp, [sp, #-8]!
    4f60:	str	lr, [sp, #4]
    4f64:	add	fp, sp, #4
    4f68:	sub	sp, sp, #8
    4f6c:	str	r0, [fp, #-8]
    4f70:	str	r1, [fp, #-12]
    4f74:	ldr	r1, [fp, #-12]
    4f78:	ldr	r0, [fp, #-8]
    4f7c:	bl	478c <gettimeofday@plt>
    4f80:	mov	r3, r0
    4f84:	mov	r0, r3
    4f88:	sub	sp, fp, #4
    4f8c:	ldr	fp, [sp]
    4f90:	add	sp, sp, #4
    4f94:	pop	{pc}		; (ldr pc, [sp], #4)

00004f98 <rb_sleep>:
    4f98:	str	fp, [sp, #-8]!
    4f9c:	str	lr, [sp, #4]
    4fa0:	add	fp, sp, #4
    4fa4:	sub	sp, sp, #16
    4fa8:	str	r0, [fp, #-16]
    4fac:	str	r1, [fp, #-20]	; 0xffffffec
    4fb0:	ldr	r3, [fp, #-20]	; 0xffffffec
    4fb4:	mov	r2, #1000	; 0x3e8
    4fb8:	mul	r3, r2, r3
    4fbc:	str	r3, [fp, #-8]
    4fc0:	ldr	r3, [fp, #-16]
    4fc4:	str	r3, [fp, #-12]
    4fc8:	sub	r3, fp, #12
    4fcc:	mov	r1, #0
    4fd0:	mov	r0, r3
    4fd4:	bl	4c54 <nanosleep@plt>
    4fd8:	nop	{0}
    4fdc:	sub	sp, fp, #4
    4fe0:	ldr	fp, [sp]
    4fe4:	add	sp, sp, #4
    4fe8:	pop	{pc}		; (ldr pc, [sp], #4)

00004fec <rb_strerror>:
    4fec:	str	fp, [sp, #-8]!
    4ff0:	str	lr, [sp, #4]
    4ff4:	add	fp, sp, #4
    4ff8:	sub	sp, sp, #8
    4ffc:	str	r0, [fp, #-8]
    5000:	ldr	r0, [fp, #-8]
    5004:	bl	43c0 <strerror@plt>
    5008:	mov	r3, r0
    500c:	mov	r0, r3
    5010:	sub	sp, fp, #4
    5014:	ldr	fp, [sp]
    5018:	add	sp, sp, #4
    501c:	pop	{pc}		; (ldr pc, [sp], #4)

00005020 <rb_kill>:
    5020:	str	fp, [sp, #-8]!
    5024:	str	lr, [sp, #4]
    5028:	add	fp, sp, #4
    502c:	sub	sp, sp, #8
    5030:	str	r0, [fp, #-8]
    5034:	str	r1, [fp, #-12]
    5038:	ldr	r1, [fp, #-12]
    503c:	ldr	r0, [fp, #-8]
    5040:	bl	4c48 <kill@plt>
    5044:	mov	r3, r0
    5048:	mov	r0, r3
    504c:	sub	sp, fp, #4
    5050:	ldr	fp, [sp]
    5054:	add	sp, sp, #4
    5058:	pop	{pc}		; (ldr pc, [sp], #4)

0000505c <rb_setenv>:
    505c:	str	fp, [sp, #-8]!
    5060:	str	lr, [sp, #4]
    5064:	add	fp, sp, #4
    5068:	sub	sp, sp, #16
    506c:	str	r0, [fp, #-8]
    5070:	str	r1, [fp, #-12]
    5074:	str	r2, [fp, #-16]
    5078:	ldr	r2, [fp, #-16]
    507c:	ldr	r1, [fp, #-12]
    5080:	ldr	r0, [fp, #-8]
    5084:	bl	4d08 <setenv@plt>
    5088:	mov	r3, r0
    508c:	mov	r0, r3
    5090:	sub	sp, fp, #4
    5094:	ldr	fp, [sp]
    5098:	add	sp, sp, #4
    509c:	pop	{pc}		; (ldr pc, [sp], #4)

000050a0 <rb_waitpid>:
    50a0:	str	fp, [sp, #-8]!
    50a4:	str	lr, [sp, #4]
    50a8:	add	fp, sp, #4
    50ac:	sub	sp, sp, #16
    50b0:	str	r0, [fp, #-8]
    50b4:	str	r1, [fp, #-12]
    50b8:	str	r2, [fp, #-16]
    50bc:	ldr	r2, [fp, #-16]
    50c0:	ldr	r1, [fp, #-12]
    50c4:	ldr	r0, [fp, #-8]
    50c8:	bl	48b8 <waitpid@plt>
    50cc:	mov	r3, r0
    50d0:	mov	r0, r3
    50d4:	sub	sp, fp, #4
    50d8:	ldr	fp, [sp]
    50dc:	add	sp, sp, #4
    50e0:	pop	{pc}		; (ldr pc, [sp], #4)

000050e4 <rb_getpid>:
    50e4:	str	fp, [sp, #-8]!
    50e8:	str	lr, [sp, #4]
    50ec:	add	fp, sp, #4
    50f0:	bl	4aec <getpid@plt>
    50f4:	mov	r3, r0
    50f8:	mov	r0, r3
    50fc:	sub	sp, fp, #4
    5100:	ldr	fp, [sp]
    5104:	add	sp, sp, #4
    5108:	pop	{pc}		; (ldr pc, [sp], #4)

0000510c <rb_path_to_self>:
    510c:	str	fp, [sp, #-8]!
    5110:	str	lr, [sp, #4]
    5114:	add	fp, sp, #4
    5118:	mov	r2, #4096	; 0x1000
    511c:	ldr	r3, [pc, #68]	; 5168 <rb_path_to_self+0x5c>
    5120:	add	r3, pc, r3
    5124:	mov	r1, r3
    5128:	ldr	r3, [pc, #60]	; 516c <rb_path_to_self+0x60>
    512c:	add	r3, pc, r3
    5130:	mov	r0, r3
    5134:	bl	4b34 <readlink@plt>
    5138:	mov	r3, r0
    513c:	cmn	r3, #1
    5140:	beq	5150 <rb_path_to_self+0x44>
    5144:	ldr	r3, [pc, #36]	; 5170 <rb_path_to_self+0x64>
    5148:	add	r3, pc, r3
    514c:	b	5154 <rb_path_to_self+0x48>
    5150:	mov	r3, #0
    5154:	mov	r0, r3
    5158:	sub	sp, fp, #4
    515c:	ldr	fp, [sp]
    5160:	add	sp, sp, #4
    5164:	pop	{pc}		; (ldr pc, [sp], #4)
    5168:	.word	0x00030874
    516c:	.word	0x0001dbdc
    5170:	.word	0x0003084c

00005174 <rb_init_netio_win32>:
    5174:	str	fp, [sp, #-8]!
    5178:	str	lr, [sp, #4]
    517c:	add	fp, sp, #4
    5180:	bl	4d20 <__errno_location@plt>
    5184:	mov	r2, r0
    5188:	mov	r3, #38	; 0x26
    518c:	str	r3, [r2]
    5190:	mvn	r3, #0
    5194:	mov	r0, r3
    5198:	sub	sp, fp, #4
    519c:	ldr	fp, [sp]
    51a0:	add	sp, sp, #4
    51a4:	pop	{pc}		; (ldr pc, [sp], #4)

000051a8 <rb_setselect_win32>:
    51a8:	str	fp, [sp, #-8]!
    51ac:	str	lr, [sp, #4]
    51b0:	add	fp, sp, #4
    51b4:	sub	sp, sp, #16
    51b8:	str	r0, [fp, #-8]
    51bc:	str	r1, [fp, #-12]
    51c0:	str	r2, [fp, #-16]
    51c4:	str	r3, [fp, #-20]	; 0xffffffec
    51c8:	bl	4d20 <__errno_location@plt>
    51cc:	mov	r2, r0
    51d0:	mov	r3, #38	; 0x26
    51d4:	str	r3, [r2]
    51d8:	nop	{0}
    51dc:	sub	sp, fp, #4
    51e0:	ldr	fp, [sp]
    51e4:	add	sp, sp, #4
    51e8:	pop	{pc}		; (ldr pc, [sp], #4)

000051ec <rb_select_win32>:
    51ec:	str	fp, [sp, #-8]!
    51f0:	str	lr, [sp, #4]
    51f4:	add	fp, sp, #4
    51f8:	sub	sp, sp, #8
    51fc:	str	r0, [fp, #-8]
    5200:	bl	4d20 <__errno_location@plt>
    5204:	mov	r2, r0
    5208:	mov	r3, #38	; 0x26
    520c:	str	r3, [r2]
    5210:	mvn	r3, #0
    5214:	mov	r0, r3
    5218:	sub	sp, fp, #4
    521c:	ldr	fp, [sp]
    5220:	add	sp, sp, #4
    5224:	pop	{pc}		; (ldr pc, [sp], #4)

00005228 <rb_setup_fd_win32>:
    5228:	str	fp, [sp, #-8]!
    522c:	str	lr, [sp, #4]
    5230:	add	fp, sp, #4
    5234:	sub	sp, sp, #8
    5238:	str	r0, [fp, #-8]
    523c:	bl	4d20 <__errno_location@plt>
    5240:	mov	r2, r0
    5244:	mov	r3, #38	; 0x26
    5248:	str	r3, [r2]
    524c:	mvn	r3, #0
    5250:	mov	r0, r3
    5254:	sub	sp, fp, #4
    5258:	ldr	fp, [sp]
    525c:	add	sp, sp, #4
    5260:	pop	{pc}		; (ldr pc, [sp], #4)
    5264:	andeq	r0, r0, r0

00005268 <rb_crypt>:
    5268:	str	fp, [sp, #-8]!
    526c:	str	lr, [sp, #4]
    5270:	add	fp, sp, #4
    5274:	sub	sp, sp, #8
    5278:	str	r0, [fp, #-8]
    527c:	str	r1, [fp, #-12]
    5280:	ldr	r3, [fp, #-12]
    5284:	ldrb	r3, [r3]
    5288:	cmp	r3, #36	; 0x24
    528c:	bne	5320 <rb_crypt+0xb8>
    5290:	ldr	r3, [fp, #-12]
    5294:	add	r3, r3, #2
    5298:	ldrb	r3, [r3]
    529c:	cmp	r3, #36	; 0x24
    52a0:	beq	52b8 <rb_crypt+0x50>
    52a4:	ldr	r3, [fp, #-12]
    52a8:	add	r3, r3, #3
    52ac:	ldrb	r3, [r3]
    52b0:	cmp	r3, #36	; 0x24
    52b4:	bne	5320 <rb_crypt+0xb8>
    52b8:	ldr	r3, [fp, #-12]
    52bc:	add	r3, r3, #1
    52c0:	ldrb	r3, [r3]
    52c4:	cmp	r3, #53	; 0x35
    52c8:	beq	52f0 <rb_crypt+0x88>
    52cc:	cmp	r3, #54	; 0x36
    52d0:	beq	5304 <rb_crypt+0x9c>
    52d4:	cmp	r3, #49	; 0x31
    52d8:	bne	5318 <rb_crypt+0xb0>
    52dc:	ldr	r1, [fp, #-12]
    52e0:	ldr	r0, [fp, #-8]
    52e4:	bl	8b9c <rb_md5_crypt>
    52e8:	mov	r3, r0
    52ec:	b	5330 <rb_crypt+0xc8>
    52f0:	ldr	r1, [fp, #-12]
    52f4:	ldr	r0, [fp, #-8]
    52f8:	bl	ae7c <rb_sha256_crypt>
    52fc:	mov	r3, r0
    5300:	b	5330 <rb_crypt+0xc8>
    5304:	ldr	r1, [fp, #-12]
    5308:	ldr	r0, [fp, #-8]
    530c:	bl	e210 <rb_sha512_crypt>
    5310:	mov	r3, r0
    5314:	b	5330 <rb_crypt+0xc8>
    5318:	mov	r3, #0
    531c:	b	5330 <rb_crypt+0xc8>
    5320:	ldr	r1, [fp, #-12]
    5324:	ldr	r0, [fp, #-8]
    5328:	bl	6d9c <rb_des_crypt>
    532c:	mov	r3, r0
    5330:	mov	r0, r3
    5334:	sub	sp, fp, #4
    5338:	ldr	fp, [sp]
    533c:	add	sp, sp, #4
    5340:	pop	{pc}		; (ldr pc, [sp], #4)

00005344 <rb_ascii_to_bin>:
    5344:	push	{fp}		; (str fp, [sp, #-4]!)
    5348:	add	fp, sp, #0
    534c:	sub	sp, sp, #12
    5350:	mov	r3, r0
    5354:	strb	r3, [fp, #-5]
    5358:	ldrb	r3, [fp, #-5]
    535c:	cmp	r3, #122	; 0x7a
    5360:	bls	536c <rb_ascii_to_bin+0x28>
    5364:	mov	r3, #0
    5368:	b	53e0 <rb_ascii_to_bin+0x9c>
    536c:	ldrb	r3, [fp, #-5]
    5370:	cmp	r3, #96	; 0x60
    5374:	bls	5384 <rb_ascii_to_bin+0x40>
    5378:	ldrb	r3, [fp, #-5]
    537c:	sub	r3, r3, #59	; 0x3b
    5380:	b	53e0 <rb_ascii_to_bin+0x9c>
    5384:	ldrb	r3, [fp, #-5]
    5388:	cmp	r3, #90	; 0x5a
    538c:	bls	5398 <rb_ascii_to_bin+0x54>
    5390:	mov	r3, #0
    5394:	b	53e0 <rb_ascii_to_bin+0x9c>
    5398:	ldrb	r3, [fp, #-5]
    539c:	cmp	r3, #64	; 0x40
    53a0:	bls	53b0 <rb_ascii_to_bin+0x6c>
    53a4:	ldrb	r3, [fp, #-5]
    53a8:	sub	r3, r3, #53	; 0x35
    53ac:	b	53e0 <rb_ascii_to_bin+0x9c>
    53b0:	ldrb	r3, [fp, #-5]
    53b4:	cmp	r3, #57	; 0x39
    53b8:	bls	53c4 <rb_ascii_to_bin+0x80>
    53bc:	mov	r3, #0
    53c0:	b	53e0 <rb_ascii_to_bin+0x9c>
    53c4:	ldrb	r3, [fp, #-5]
    53c8:	cmp	r3, #45	; 0x2d
    53cc:	bls	53dc <rb_ascii_to_bin+0x98>
    53d0:	ldrb	r3, [fp, #-5]
    53d4:	sub	r3, r3, #46	; 0x2e
    53d8:	b	53e0 <rb_ascii_to_bin+0x9c>
    53dc:	mov	r3, #0
    53e0:	mov	r0, r3
    53e4:	add	sp, fp, #0
    53e8:	pop	{fp}		; (ldr fp, [sp], #4)
    53ec:	bx	lr

000053f0 <rb_des_init>:
    53f0:	push	{fp}		; (str fp, [sp, #-4]!)
    53f4:	add	fp, sp, #0
    53f8:	sub	sp, sp, #52	; 0x34
    53fc:	ldr	r3, [pc, #2632]	; 5e4c <rb_des_init+0xa5c>
    5400:	add	r3, pc, r3
    5404:	ldr	r3, [r3]
    5408:	cmp	r3, #1
    540c:	beq	5e3c <rb_des_init+0xa4c>
    5410:	ldr	r3, [pc, #2616]	; 5e50 <rb_des_init+0xa60>
    5414:	add	r3, pc, r3
    5418:	mov	r2, #0
    541c:	str	r2, [r3]
    5420:	ldr	r3, [pc, #2604]	; 5e54 <rb_des_init+0xa64>
    5424:	add	r3, pc, r3
    5428:	ldr	r2, [r3]
    542c:	ldr	r3, [pc, #2596]	; 5e58 <rb_des_init+0xa68>
    5430:	add	r3, pc, r3
    5434:	str	r2, [r3]
    5438:	ldr	r3, [pc, #2588]	; 5e5c <rb_des_init+0xa6c>
    543c:	add	r3, pc, r3
    5440:	mov	r2, #0
    5444:	str	r2, [r3]
    5448:	ldr	r3, [pc, #2576]	; 5e60 <rb_des_init+0xa70>
    544c:	add	r3, pc, r3
    5450:	mov	r2, #0
    5454:	str	r2, [r3]
    5458:	ldr	r3, [pc, #2564]	; 5e64 <rb_des_init+0xa74>
    545c:	add	r3, pc, r3
    5460:	add	r2, r3, #16
    5464:	ldr	r3, [pc, #2556]	; 5e68 <rb_des_init+0xa78>
    5468:	add	r3, pc, r3
    546c:	str	r2, [r3]
    5470:	ldr	r3, [pc, #2548]	; 5e6c <rb_des_init+0xa7c>
    5474:	add	r3, pc, r3
    5478:	ldr	r3, [r3]
    547c:	add	r2, r3, #16
    5480:	ldr	r3, [pc, #2536]	; 5e70 <rb_des_init+0xa80>
    5484:	add	r3, pc, r3
    5488:	str	r2, [r3]
    548c:	mov	r3, #0
    5490:	str	r3, [fp, #-8]
    5494:	b	5538 <rb_des_init+0x148>
    5498:	mov	r3, #0
    549c:	str	r3, [fp, #-12]
    54a0:	b	5520 <rb_des_init+0x130>
    54a4:	ldr	r3, [fp, #-12]
    54a8:	and	r2, r3, #32
    54ac:	ldr	r3, [fp, #-12]
    54b0:	lsl	r3, r3, #4
    54b4:	and	r3, r3, #16
    54b8:	orr	r2, r2, r3
    54bc:	ldr	r3, [fp, #-12]
    54c0:	asr	r3, r3, #1
    54c4:	and	r3, r3, #15
    54c8:	orr	r3, r2, r3
    54cc:	str	r3, [fp, #-16]
    54d0:	ldr	r2, [pc, #2460]	; 5e74 <rb_des_init+0xa84>
    54d4:	add	r2, pc, r2
    54d8:	ldr	r3, [fp, #-8]
    54dc:	lsl	r3, r3, #6
    54e0:	add	r2, r2, r3
    54e4:	ldr	r3, [fp, #-16]
    54e8:	add	r3, r2, r3
    54ec:	ldrb	r1, [r3]
    54f0:	ldr	r2, [pc, #2432]	; 5e78 <rb_des_init+0xa88>
    54f4:	add	r2, pc, r2
    54f8:	ldr	r3, [fp, #-8]
    54fc:	lsl	r3, r3, #6
    5500:	add	r2, r2, r3
    5504:	ldr	r3, [fp, #-12]
    5508:	add	r3, r2, r3
    550c:	mov	r2, r1
    5510:	strb	r2, [r3]
    5514:	ldr	r3, [fp, #-12]
    5518:	add	r3, r3, #1
    551c:	str	r3, [fp, #-12]
    5520:	ldr	r3, [fp, #-12]
    5524:	cmp	r3, #63	; 0x3f
    5528:	ble	54a4 <rb_des_init+0xb4>
    552c:	ldr	r3, [fp, #-8]
    5530:	add	r3, r3, #1
    5534:	str	r3, [fp, #-8]
    5538:	ldr	r3, [fp, #-8]
    553c:	cmp	r3, #7
    5540:	ble	5498 <rb_des_init+0xa8>
    5544:	mov	r3, #0
    5548:	str	r3, [fp, #-16]
    554c:	b	5638 <rb_des_init+0x248>
    5550:	mov	r3, #0
    5554:	str	r3, [fp, #-8]
    5558:	b	5620 <rb_des_init+0x230>
    555c:	mov	r3, #0
    5560:	str	r3, [fp, #-12]
    5564:	b	5608 <rb_des_init+0x218>
    5568:	ldr	r3, [fp, #-16]
    556c:	lsl	r3, r3, #1
    5570:	ldr	r2, [pc, #2308]	; 5e7c <rb_des_init+0xa8c>
    5574:	add	r2, pc, r2
    5578:	lsl	r3, r3, #6
    557c:	add	r2, r2, r3
    5580:	ldr	r3, [fp, #-8]
    5584:	add	r3, r2, r3
    5588:	ldrb	r3, [r3]
    558c:	lsl	r3, r3, #4
    5590:	sxtb	r2, r3
    5594:	ldr	r3, [fp, #-16]
    5598:	lsl	r3, r3, #1
    559c:	add	r3, r3, #1
    55a0:	ldr	r1, [pc, #2264]	; 5e80 <rb_des_init+0xa90>
    55a4:	add	r1, pc, r1
    55a8:	lsl	r3, r3, #6
    55ac:	add	r1, r1, r3
    55b0:	ldr	r3, [fp, #-12]
    55b4:	add	r3, r1, r3
    55b8:	ldrb	r3, [r3]
    55bc:	sxtb	r3, r3
    55c0:	orr	r3, r2, r3
    55c4:	sxtb	r1, r3
    55c8:	ldr	r3, [fp, #-8]
    55cc:	lsl	r2, r3, #6
    55d0:	ldr	r3, [fp, #-12]
    55d4:	orr	r3, r2, r3
    55d8:	uxtb	r0, r1
    55dc:	ldr	r1, [pc, #2208]	; 5e84 <rb_des_init+0xa94>
    55e0:	add	r1, pc, r1
    55e4:	ldr	r2, [fp, #-16]
    55e8:	lsl	r2, r2, #12
    55ec:	add	r2, r1, r2
    55f0:	add	r3, r2, r3
    55f4:	mov	r2, r0
    55f8:	strb	r2, [r3]
    55fc:	ldr	r3, [fp, #-12]
    5600:	add	r3, r3, #1
    5604:	str	r3, [fp, #-12]
    5608:	ldr	r3, [fp, #-12]
    560c:	cmp	r3, #63	; 0x3f
    5610:	ble	5568 <rb_des_init+0x178>
    5614:	ldr	r3, [fp, #-8]
    5618:	add	r3, r3, #1
    561c:	str	r3, [fp, #-8]
    5620:	ldr	r3, [fp, #-8]
    5624:	cmp	r3, #63	; 0x3f
    5628:	ble	555c <rb_des_init+0x16c>
    562c:	ldr	r3, [fp, #-16]
    5630:	add	r3, r3, #1
    5634:	str	r3, [fp, #-16]
    5638:	ldr	r3, [fp, #-16]
    563c:	cmp	r3, #3
    5640:	ble	5550 <rb_des_init+0x160>
    5644:	mov	r3, #0
    5648:	str	r3, [fp, #-8]
    564c:	b	56d4 <rb_des_init+0x2e4>
    5650:	ldr	r2, [pc, #2096]	; 5e88 <rb_des_init+0xa98>
    5654:	add	r2, pc, r2
    5658:	ldr	r3, [fp, #-8]
    565c:	add	r3, r2, r3
    5660:	ldrb	r3, [r3]
    5664:	sub	r3, r3, #1
    5668:	uxtb	r1, r3
    566c:	ldr	r2, [pc, #2072]	; 5e8c <rb_des_init+0xa9c>
    5670:	add	r2, pc, r2
    5674:	ldr	r3, [fp, #-8]
    5678:	add	r3, r2, r3
    567c:	mov	r2, r1
    5680:	strb	r2, [r3]
    5684:	ldr	r2, [pc, #2052]	; 5e90 <rb_des_init+0xaa0>
    5688:	add	r2, pc, r2
    568c:	ldr	r3, [fp, #-8]
    5690:	add	r3, r2, r3
    5694:	ldrb	r3, [r3]
    5698:	mov	r2, r3
    569c:	ldr	r3, [fp, #-8]
    56a0:	uxtb	r1, r3
    56a4:	ldr	r3, [pc, #2024]	; 5e94 <rb_des_init+0xaa4>
    56a8:	add	r3, pc, r3
    56ac:	strb	r1, [r3, r2]
    56b0:	ldr	r2, [pc, #2016]	; 5e98 <rb_des_init+0xaa8>
    56b4:	add	r2, pc, r2
    56b8:	ldr	r3, [fp, #-8]
    56bc:	add	r3, r2, r3
    56c0:	mvn	r2, #0
    56c4:	strb	r2, [r3]
    56c8:	ldr	r3, [fp, #-8]
    56cc:	add	r3, r3, #1
    56d0:	str	r3, [fp, #-8]
    56d4:	ldr	r3, [fp, #-8]
    56d8:	cmp	r3, #63	; 0x3f
    56dc:	ble	5650 <rb_des_init+0x260>
    56e0:	mov	r3, #0
    56e4:	str	r3, [fp, #-8]
    56e8:	b	573c <rb_des_init+0x34c>
    56ec:	ldr	r2, [pc, #1960]	; 5e9c <rb_des_init+0xaac>
    56f0:	add	r2, pc, r2
    56f4:	ldr	r3, [fp, #-8]
    56f8:	add	r3, r2, r3
    56fc:	ldrb	r3, [r3]
    5700:	sub	r3, r3, #1
    5704:	ldr	r2, [fp, #-8]
    5708:	uxtb	r1, r2
    570c:	ldr	r2, [pc, #1932]	; 5ea0 <rb_des_init+0xab0>
    5710:	add	r2, pc, r2
    5714:	strb	r1, [r2, r3]
    5718:	ldr	r2, [pc, #1924]	; 5ea4 <rb_des_init+0xab4>
    571c:	add	r2, pc, r2
    5720:	ldr	r3, [fp, #-8]
    5724:	add	r3, r2, r3
    5728:	mvn	r2, #0
    572c:	strb	r2, [r3]
    5730:	ldr	r3, [fp, #-8]
    5734:	add	r3, r3, #1
    5738:	str	r3, [fp, #-8]
    573c:	ldr	r3, [fp, #-8]
    5740:	cmp	r3, #55	; 0x37
    5744:	ble	56ec <rb_des_init+0x2fc>
    5748:	mov	r3, #0
    574c:	str	r3, [fp, #-8]
    5750:	b	578c <rb_des_init+0x39c>
    5754:	ldr	r2, [pc, #1868]	; 5ea8 <rb_des_init+0xab8>
    5758:	add	r2, pc, r2
    575c:	ldr	r3, [fp, #-8]
    5760:	add	r3, r2, r3
    5764:	ldrb	r3, [r3]
    5768:	sub	r3, r3, #1
    576c:	ldr	r2, [fp, #-8]
    5770:	uxtb	r1, r2
    5774:	ldr	r2, [pc, #1840]	; 5eac <rb_des_init+0xabc>
    5778:	add	r2, pc, r2
    577c:	strb	r1, [r2, r3]
    5780:	ldr	r3, [fp, #-8]
    5784:	add	r3, r3, #1
    5788:	str	r3, [fp, #-8]
    578c:	ldr	r3, [fp, #-8]
    5790:	cmp	r3, #47	; 0x2f
    5794:	ble	5754 <rb_des_init+0x364>
    5798:	mov	r3, #0
    579c:	str	r3, [fp, #-20]	; 0xffffffec
    57a0:	b	5cc8 <rb_des_init+0x8d8>
    57a4:	mov	r3, #0
    57a8:	str	r3, [fp, #-8]
    57ac:	b	59c4 <rb_des_init+0x5d4>
    57b0:	ldr	r3, [fp, #-20]	; 0xffffffec
    57b4:	lsl	r2, r3, #8
    57b8:	ldr	r3, [fp, #-8]
    57bc:	add	r3, r2, r3
    57c0:	lsl	r3, r3, #2
    57c4:	ldr	r2, [pc, #1764]	; 5eb0 <rb_des_init+0xac0>
    57c8:	add	r2, pc, r2
    57cc:	add	r3, r3, r2
    57d0:	str	r3, [fp, #-24]	; 0xffffffe8
    57d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    57d8:	mov	r2, #0
    57dc:	str	r2, [r3]
    57e0:	ldr	r3, [fp, #-20]	; 0xffffffec
    57e4:	lsl	r2, r3, #8
    57e8:	ldr	r3, [fp, #-8]
    57ec:	add	r3, r2, r3
    57f0:	lsl	r3, r3, #2
    57f4:	ldr	r2, [pc, #1720]	; 5eb4 <rb_des_init+0xac4>
    57f8:	add	r2, pc, r2
    57fc:	add	r3, r3, r2
    5800:	str	r3, [fp, #-28]	; 0xffffffe4
    5804:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5808:	mov	r2, #0
    580c:	str	r2, [r3]
    5810:	ldr	r3, [fp, #-20]	; 0xffffffec
    5814:	lsl	r2, r3, #8
    5818:	ldr	r3, [fp, #-8]
    581c:	add	r3, r2, r3
    5820:	lsl	r3, r3, #2
    5824:	ldr	r2, [pc, #1676]	; 5eb8 <rb_des_init+0xac8>
    5828:	add	r2, pc, r2
    582c:	add	r3, r3, r2
    5830:	str	r3, [fp, #-32]	; 0xffffffe0
    5834:	ldr	r3, [fp, #-32]	; 0xffffffe0
    5838:	mov	r2, #0
    583c:	str	r2, [r3]
    5840:	ldr	r3, [fp, #-20]	; 0xffffffec
    5844:	lsl	r2, r3, #8
    5848:	ldr	r3, [fp, #-8]
    584c:	add	r3, r2, r3
    5850:	lsl	r3, r3, #2
    5854:	ldr	r2, [pc, #1632]	; 5ebc <rb_des_init+0xacc>
    5858:	add	r2, pc, r2
    585c:	add	r3, r3, r2
    5860:	str	r3, [fp, #-36]	; 0xffffffdc
    5864:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5868:	mov	r2, #0
    586c:	str	r2, [r3]
    5870:	mov	r3, #0
    5874:	str	r3, [fp, #-12]
    5878:	b	59ac <rb_des_init+0x5bc>
    587c:	ldr	r3, [fp, #-20]	; 0xffffffec
    5880:	lsl	r3, r3, #3
    5884:	ldr	r2, [fp, #-12]
    5888:	add	r3, r2, r3
    588c:	str	r3, [fp, #-40]	; 0xffffffd8
    5890:	ldr	r2, [pc, #1576]	; 5ec0 <rb_des_init+0xad0>
    5894:	add	r2, pc, r2
    5898:	ldr	r3, [fp, #-12]
    589c:	add	r3, r2, r3
    58a0:	ldrb	r3, [r3]
    58a4:	mov	r2, r3
    58a8:	ldr	r3, [fp, #-8]
    58ac:	and	r3, r3, r2
    58b0:	cmp	r3, #0
    58b4:	beq	59a0 <rb_des_init+0x5b0>
    58b8:	ldr	r2, [pc, #1540]	; 5ec4 <rb_des_init+0xad4>
    58bc:	add	r2, pc, r2
    58c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    58c4:	add	r3, r2, r3
    58c8:	ldrb	r3, [r3]
    58cc:	str	r3, [fp, #-44]	; 0xffffffd4
    58d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    58d4:	cmp	r3, #31
    58d8:	bgt	5904 <rb_des_init+0x514>
    58dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    58e0:	ldr	r2, [r3]
    58e4:	ldr	r3, [pc, #1500]	; 5ec8 <rb_des_init+0xad8>
    58e8:	add	r3, pc, r3
    58ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
    58f0:	ldr	r3, [r3, r1, lsl #2]
    58f4:	orr	r2, r2, r3
    58f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    58fc:	str	r2, [r3]
    5900:	b	592c <rb_des_init+0x53c>
    5904:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5908:	ldr	r2, [r3]
    590c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5910:	sub	r1, r3, #32
    5914:	ldr	r3, [pc, #1456]	; 5ecc <rb_des_init+0xadc>
    5918:	add	r3, pc, r3
    591c:	ldr	r3, [r3, r1, lsl #2]
    5920:	orr	r2, r2, r3
    5924:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5928:	str	r2, [r3]
    592c:	ldr	r2, [pc, #1436]	; 5ed0 <rb_des_init+0xae0>
    5930:	add	r2, pc, r2
    5934:	ldr	r3, [fp, #-40]	; 0xffffffd8
    5938:	add	r3, r2, r3
    593c:	ldrb	r3, [r3]
    5940:	str	r3, [fp, #-44]	; 0xffffffd4
    5944:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5948:	cmp	r3, #31
    594c:	bgt	5978 <rb_des_init+0x588>
    5950:	ldr	r3, [fp, #-32]	; 0xffffffe0
    5954:	ldr	r2, [r3]
    5958:	ldr	r3, [pc, #1396]	; 5ed4 <rb_des_init+0xae4>
    595c:	add	r3, pc, r3
    5960:	ldr	r1, [fp, #-44]	; 0xffffffd4
    5964:	ldr	r3, [r3, r1, lsl #2]
    5968:	orr	r2, r2, r3
    596c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    5970:	str	r2, [r3]
    5974:	b	59a0 <rb_des_init+0x5b0>
    5978:	ldr	r3, [fp, #-36]	; 0xffffffdc
    597c:	ldr	r2, [r3]
    5980:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5984:	sub	r1, r3, #32
    5988:	ldr	r3, [pc, #1352]	; 5ed8 <rb_des_init+0xae8>
    598c:	add	r3, pc, r3
    5990:	ldr	r3, [r3, r1, lsl #2]
    5994:	orr	r2, r2, r3
    5998:	ldr	r3, [fp, #-36]	; 0xffffffdc
    599c:	str	r2, [r3]
    59a0:	ldr	r3, [fp, #-12]
    59a4:	add	r3, r3, #1
    59a8:	str	r3, [fp, #-12]
    59ac:	ldr	r3, [fp, #-12]
    59b0:	cmp	r3, #7
    59b4:	ble	587c <rb_des_init+0x48c>
    59b8:	ldr	r3, [fp, #-8]
    59bc:	add	r3, r3, #1
    59c0:	str	r3, [fp, #-8]
    59c4:	ldr	r3, [fp, #-8]
    59c8:	cmp	r3, #255	; 0xff
    59cc:	ble	57b0 <rb_des_init+0x3c0>
    59d0:	mov	r3, #0
    59d4:	str	r3, [fp, #-8]
    59d8:	b	5cb0 <rb_des_init+0x8c0>
    59dc:	ldr	r3, [fp, #-20]	; 0xffffffec
    59e0:	lsl	r2, r3, #7
    59e4:	ldr	r3, [fp, #-8]
    59e8:	add	r3, r2, r3
    59ec:	lsl	r3, r3, #2
    59f0:	ldr	r2, [pc, #1252]	; 5edc <rb_des_init+0xaec>
    59f4:	add	r2, pc, r2
    59f8:	add	r3, r3, r2
    59fc:	str	r3, [fp, #-24]	; 0xffffffe8
    5a00:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5a04:	mov	r2, #0
    5a08:	str	r2, [r3]
    5a0c:	ldr	r3, [fp, #-20]	; 0xffffffec
    5a10:	lsl	r2, r3, #7
    5a14:	ldr	r3, [fp, #-8]
    5a18:	add	r3, r2, r3
    5a1c:	lsl	r3, r3, #2
    5a20:	ldr	r2, [pc, #1208]	; 5ee0 <rb_des_init+0xaf0>
    5a24:	add	r2, pc, r2
    5a28:	add	r3, r3, r2
    5a2c:	str	r3, [fp, #-28]	; 0xffffffe4
    5a30:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5a34:	mov	r2, #0
    5a38:	str	r2, [r3]
    5a3c:	mov	r3, #0
    5a40:	str	r3, [fp, #-12]
    5a44:	b	5b30 <rb_des_init+0x740>
    5a48:	ldr	r3, [fp, #-20]	; 0xffffffec
    5a4c:	lsl	r3, r3, #3
    5a50:	ldr	r2, [fp, #-12]
    5a54:	add	r3, r2, r3
    5a58:	str	r3, [fp, #-40]	; 0xffffffd8
    5a5c:	ldr	r3, [fp, #-12]
    5a60:	add	r3, r3, #1
    5a64:	ldr	r2, [pc, #1144]	; 5ee4 <rb_des_init+0xaf4>
    5a68:	add	r2, pc, r2
    5a6c:	ldrb	r3, [r2, r3]
    5a70:	mov	r2, r3
    5a74:	ldr	r3, [fp, #-8]
    5a78:	and	r3, r3, r2
    5a7c:	cmp	r3, #0
    5a80:	beq	5b24 <rb_des_init+0x734>
    5a84:	ldr	r2, [pc, #1116]	; 5ee8 <rb_des_init+0xaf8>
    5a88:	add	r2, pc, r2
    5a8c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    5a90:	add	r3, r2, r3
    5a94:	ldrb	r3, [r3]
    5a98:	str	r3, [fp, #-44]	; 0xffffffd4
    5a9c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5aa0:	cmp	r3, #255	; 0xff
    5aa4:	beq	5b20 <rb_des_init+0x730>
    5aa8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5aac:	cmp	r3, #27
    5ab0:	bgt	5ae8 <rb_des_init+0x6f8>
    5ab4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5ab8:	ldr	r2, [r3]
    5abc:	ldr	r3, [pc, #1064]	; 5eec <rb_des_init+0xafc>
    5ac0:	add	r3, pc, r3
    5ac4:	ldr	r1, [r3]
    5ac8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5acc:	lsl	r3, r3, #2
    5ad0:	add	r3, r1, r3
    5ad4:	ldr	r3, [r3]
    5ad8:	orr	r2, r2, r3
    5adc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5ae0:	str	r2, [r3]
    5ae4:	b	5b24 <rb_des_init+0x734>
    5ae8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5aec:	ldr	r2, [r3]
    5af0:	ldr	r3, [pc, #1016]	; 5ef0 <rb_des_init+0xb00>
    5af4:	add	r3, pc, r3
    5af8:	ldr	r1, [r3]
    5afc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5b00:	sub	r3, r3, #-1073741796	; 0xc000001c
    5b04:	lsl	r3, r3, #2
    5b08:	add	r3, r1, r3
    5b0c:	ldr	r3, [r3]
    5b10:	orr	r2, r2, r3
    5b14:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5b18:	str	r2, [r3]
    5b1c:	b	5b24 <rb_des_init+0x734>
    5b20:	nop	{0}
    5b24:	ldr	r3, [fp, #-12]
    5b28:	add	r3, r3, #1
    5b2c:	str	r3, [fp, #-12]
    5b30:	ldr	r3, [fp, #-12]
    5b34:	cmp	r3, #6
    5b38:	ble	5a48 <rb_des_init+0x658>
    5b3c:	ldr	r3, [fp, #-20]	; 0xffffffec
    5b40:	lsl	r2, r3, #7
    5b44:	ldr	r3, [fp, #-8]
    5b48:	add	r3, r2, r3
    5b4c:	lsl	r3, r3, #2
    5b50:	ldr	r2, [pc, #924]	; 5ef4 <rb_des_init+0xb04>
    5b54:	add	r2, pc, r2
    5b58:	add	r3, r3, r2
    5b5c:	str	r3, [fp, #-24]	; 0xffffffe8
    5b60:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5b64:	mov	r2, #0
    5b68:	str	r2, [r3]
    5b6c:	ldr	r3, [fp, #-20]	; 0xffffffec
    5b70:	lsl	r2, r3, #7
    5b74:	ldr	r3, [fp, #-8]
    5b78:	add	r3, r2, r3
    5b7c:	lsl	r3, r3, #2
    5b80:	ldr	r2, [pc, #880]	; 5ef8 <rb_des_init+0xb08>
    5b84:	add	r2, pc, r2
    5b88:	add	r3, r3, r2
    5b8c:	str	r3, [fp, #-28]	; 0xffffffe4
    5b90:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5b94:	mov	r2, #0
    5b98:	str	r2, [r3]
    5b9c:	mov	r3, #0
    5ba0:	str	r3, [fp, #-12]
    5ba4:	b	5c98 <rb_des_init+0x8a8>
    5ba8:	ldr	r2, [fp, #-20]	; 0xffffffec
    5bac:	mov	r3, r2
    5bb0:	lsl	r3, r3, #3
    5bb4:	sub	r3, r3, r2
    5bb8:	ldr	r2, [fp, #-12]
    5bbc:	add	r3, r2, r3
    5bc0:	str	r3, [fp, #-40]	; 0xffffffd8
    5bc4:	ldr	r3, [fp, #-12]
    5bc8:	add	r3, r3, #1
    5bcc:	ldr	r2, [pc, #808]	; 5efc <rb_des_init+0xb0c>
    5bd0:	add	r2, pc, r2
    5bd4:	ldrb	r3, [r2, r3]
    5bd8:	mov	r2, r3
    5bdc:	ldr	r3, [fp, #-8]
    5be0:	and	r3, r3, r2
    5be4:	cmp	r3, #0
    5be8:	beq	5c8c <rb_des_init+0x89c>
    5bec:	ldr	r2, [pc, #780]	; 5f00 <rb_des_init+0xb10>
    5bf0:	add	r2, pc, r2
    5bf4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    5bf8:	add	r3, r2, r3
    5bfc:	ldrb	r3, [r3]
    5c00:	str	r3, [fp, #-44]	; 0xffffffd4
    5c04:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5c08:	cmp	r3, #255	; 0xff
    5c0c:	beq	5c88 <rb_des_init+0x898>
    5c10:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5c14:	cmp	r3, #23
    5c18:	bgt	5c50 <rb_des_init+0x860>
    5c1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5c20:	ldr	r2, [r3]
    5c24:	ldr	r3, [pc, #728]	; 5f04 <rb_des_init+0xb14>
    5c28:	add	r3, pc, r3
    5c2c:	ldr	r1, [r3]
    5c30:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5c34:	lsl	r3, r3, #2
    5c38:	add	r3, r1, r3
    5c3c:	ldr	r3, [r3]
    5c40:	orr	r2, r2, r3
    5c44:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5c48:	str	r2, [r3]
    5c4c:	b	5c8c <rb_des_init+0x89c>
    5c50:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5c54:	ldr	r2, [r3]
    5c58:	ldr	r3, [pc, #680]	; 5f08 <rb_des_init+0xb18>
    5c5c:	add	r3, pc, r3
    5c60:	ldr	r1, [r3]
    5c64:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5c68:	sub	r3, r3, #-1073741800	; 0xc0000018
    5c6c:	lsl	r3, r3, #2
    5c70:	add	r3, r1, r3
    5c74:	ldr	r3, [r3]
    5c78:	orr	r2, r2, r3
    5c7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5c80:	str	r2, [r3]
    5c84:	b	5c8c <rb_des_init+0x89c>
    5c88:	nop	{0}
    5c8c:	ldr	r3, [fp, #-12]
    5c90:	add	r3, r3, #1
    5c94:	str	r3, [fp, #-12]
    5c98:	ldr	r3, [fp, #-12]
    5c9c:	cmp	r3, #6
    5ca0:	ble	5ba8 <rb_des_init+0x7b8>
    5ca4:	ldr	r3, [fp, #-8]
    5ca8:	add	r3, r3, #1
    5cac:	str	r3, [fp, #-8]
    5cb0:	ldr	r3, [fp, #-8]
    5cb4:	cmp	r3, #127	; 0x7f
    5cb8:	ble	59dc <rb_des_init+0x5ec>
    5cbc:	ldr	r3, [fp, #-20]	; 0xffffffec
    5cc0:	add	r3, r3, #1
    5cc4:	str	r3, [fp, #-20]	; 0xffffffec
    5cc8:	ldr	r3, [fp, #-20]	; 0xffffffec
    5ccc:	cmp	r3, #7
    5cd0:	ble	57a4 <rb_des_init+0x3b4>
    5cd4:	mov	r3, #0
    5cd8:	str	r3, [fp, #-8]
    5cdc:	b	5d18 <rb_des_init+0x928>
    5ce0:	ldr	r2, [pc, #548]	; 5f0c <rb_des_init+0xb1c>
    5ce4:	add	r2, pc, r2
    5ce8:	ldr	r3, [fp, #-8]
    5cec:	add	r3, r2, r3
    5cf0:	ldrb	r3, [r3]
    5cf4:	sub	r3, r3, #1
    5cf8:	ldr	r2, [fp, #-8]
    5cfc:	uxtb	r1, r2
    5d00:	ldr	r2, [pc, #520]	; 5f10 <rb_des_init+0xb20>
    5d04:	add	r2, pc, r2
    5d08:	strb	r1, [r2, r3]
    5d0c:	ldr	r3, [fp, #-8]
    5d10:	add	r3, r3, #1
    5d14:	str	r3, [fp, #-8]
    5d18:	ldr	r3, [fp, #-8]
    5d1c:	cmp	r3, #31
    5d20:	ble	5ce0 <rb_des_init+0x8f0>
    5d24:	mov	r3, #0
    5d28:	str	r3, [fp, #-16]
    5d2c:	b	5e1c <rb_des_init+0xa2c>
    5d30:	mov	r3, #0
    5d34:	str	r3, [fp, #-8]
    5d38:	b	5e04 <rb_des_init+0xa14>
    5d3c:	ldr	r3, [fp, #-16]
    5d40:	lsl	r2, r3, #8
    5d44:	ldr	r3, [fp, #-8]
    5d48:	add	r3, r2, r3
    5d4c:	lsl	r3, r3, #2
    5d50:	ldr	r2, [pc, #444]	; 5f14 <rb_des_init+0xb24>
    5d54:	add	r2, pc, r2
    5d58:	add	r3, r3, r2
    5d5c:	str	r3, [fp, #-48]	; 0xffffffd0
    5d60:	ldr	r3, [fp, #-48]	; 0xffffffd0
    5d64:	mov	r2, #0
    5d68:	str	r2, [r3]
    5d6c:	mov	r3, #0
    5d70:	str	r3, [fp, #-12]
    5d74:	b	5dec <rb_des_init+0x9fc>
    5d78:	ldr	r2, [pc, #408]	; 5f18 <rb_des_init+0xb28>
    5d7c:	add	r2, pc, r2
    5d80:	ldr	r3, [fp, #-12]
    5d84:	add	r3, r2, r3
    5d88:	ldrb	r3, [r3]
    5d8c:	mov	r2, r3
    5d90:	ldr	r3, [fp, #-8]
    5d94:	and	r3, r3, r2
    5d98:	cmp	r3, #0
    5d9c:	beq	5de0 <rb_des_init+0x9f0>
    5da0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    5da4:	ldr	r2, [r3]
    5da8:	ldr	r3, [fp, #-16]
    5dac:	lsl	r1, r3, #3
    5db0:	ldr	r3, [fp, #-12]
    5db4:	add	r3, r1, r3
    5db8:	ldr	r1, [pc, #348]	; 5f1c <rb_des_init+0xb2c>
    5dbc:	add	r1, pc, r1
    5dc0:	ldrb	r3, [r1, r3]
    5dc4:	mov	r1, r3
    5dc8:	ldr	r3, [pc, #336]	; 5f20 <rb_des_init+0xb30>
    5dcc:	add	r3, pc, r3
    5dd0:	ldr	r3, [r3, r1, lsl #2]
    5dd4:	orr	r2, r2, r3
    5dd8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    5ddc:	str	r2, [r3]
    5de0:	ldr	r3, [fp, #-12]
    5de4:	add	r3, r3, #1
    5de8:	str	r3, [fp, #-12]
    5dec:	ldr	r3, [fp, #-12]
    5df0:	cmp	r3, #7
    5df4:	ble	5d78 <rb_des_init+0x988>
    5df8:	ldr	r3, [fp, #-8]
    5dfc:	add	r3, r3, #1
    5e00:	str	r3, [fp, #-8]
    5e04:	ldr	r3, [fp, #-8]
    5e08:	cmp	r3, #255	; 0xff
    5e0c:	ble	5d3c <rb_des_init+0x94c>
    5e10:	ldr	r3, [fp, #-16]
    5e14:	add	r3, r3, #1
    5e18:	str	r3, [fp, #-16]
    5e1c:	ldr	r3, [fp, #-16]
    5e20:	cmp	r3, #3
    5e24:	ble	5d30 <rb_des_init+0x940>
    5e28:	ldr	r3, [pc, #244]	; 5f24 <rb_des_init+0xb34>
    5e2c:	add	r3, pc, r3
    5e30:	mov	r2, #1
    5e34:	str	r2, [r3]
    5e38:	b	5e40 <rb_des_init+0xa50>
    5e3c:	nop	{0}
    5e40:	add	sp, fp, #0
    5e44:	pop	{fp}		; (ldr fp, [sp], #4)
    5e48:	bx	lr
    5e4c:	.word	0x000429c8
    5e50:	.word	0x0003d924
    5e54:	.word	0x0003d914
    5e58:	.word	0x0003d904
    5e5c:	.word	0x0003d8f0
    5e60:	.word	0x0003d8e4
    5e64:	.word	0x0001dbd8
    5e68:	.word	0x00042954
    5e6c:	.word	0x00042948
    5e70:	.word	0x0004293c
    5e74:	.word	0x0001d940
    5e78:	.word	0x00031518
    5e7c:	.word	0x00031498
    5e80:	.word	0x00031468
    5e84:	.word	0x0003d7dc
    5e88:	.word	0x0001d708
    5e8c:	.word	0x0003d70c
    5e90:	.word	0x0003d6f4
    5e94:	.word	0x0003d694
    5e98:	.word	0x000312e0
    5e9c:	.word	0x0001d6ac
    5ea0:	.word	0x00031284
    5ea4:	.word	0x000312b8
    5ea8:	.word	0x0001d68c
    5eac:	.word	0x0003125c
    5eb0:	.word	0x00031564
    5eb4:	.word	0x00033534
    5eb8:	.word	0x00035504
    5ebc:	.word	0x000374d4
    5ec0:	.word	0x0001d820
    5ec4:	.word	0x0003d480
    5ec8:	.word	0x0001d74c
    5ecc:	.word	0x0001d71c
    5ed0:	.word	0x0003d44c
    5ed4:	.word	0x0001d6d8
    5ed8:	.word	0x0001d6a8
    5edc:	.word	0x00039338
    5ee0:	.word	0x0003a308
    5ee4:	.word	0x0001d64c
    5ee8:	.word	0x00030f0c
    5eec:	.word	0x000422fc
    5ef0:	.word	0x000422c8
    5ef4:	.word	0x0003b1d8
    5ef8:	.word	0x0003c1a8
    5efc:	.word	0x0001d4e4
    5f00:	.word	0x00030de4
    5f04:	.word	0x00042198
    5f08:	.word	0x00042164
    5f0c:	.word	0x0001d330
    5f10:	.word	0x00030f08
    5f14:	.word	0x00041068
    5f18:	.word	0x0001d338
    5f1c:	.word	0x00030e50
    5f20:	.word	0x0001d268
    5f24:	.word	0x00041f9c

00005f28 <rb_setup_salt>:
    5f28:	push	{fp}		; (str fp, [sp, #-4]!)
    5f2c:	add	fp, sp, #0
    5f30:	sub	sp, sp, #28
    5f34:	str	r0, [fp, #-24]	; 0xffffffe8
    5f38:	ldr	r3, [pc, #200]	; 6008 <rb_setup_salt+0xe0>
    5f3c:	add	r3, pc, r3
    5f40:	ldr	r3, [r3]
    5f44:	mov	r2, r3
    5f48:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5f4c:	cmp	r3, r2
    5f50:	beq	5ff8 <rb_setup_salt+0xd0>
    5f54:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5f58:	ldr	r3, [pc, #172]	; 600c <rb_setup_salt+0xe4>
    5f5c:	add	r3, pc, r3
    5f60:	str	r2, [r3]
    5f64:	ldr	r3, [pc, #164]	; 6010 <rb_setup_salt+0xe8>
    5f68:	add	r3, pc, r3
    5f6c:	mov	r2, #0
    5f70:	str	r2, [r3]
    5f74:	mov	r3, #1
    5f78:	str	r3, [fp, #-12]
    5f7c:	mov	r3, #8388608	; 0x800000
    5f80:	str	r3, [fp, #-8]
    5f84:	mov	r3, #0
    5f88:	str	r3, [fp, #-16]
    5f8c:	b	5fe8 <rb_setup_salt+0xc0>
    5f90:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5f94:	ldr	r3, [fp, #-12]
    5f98:	and	r3, r3, r2
    5f9c:	cmp	r3, #0
    5fa0:	beq	5fc4 <rb_setup_salt+0x9c>
    5fa4:	ldr	r3, [pc, #104]	; 6014 <rb_setup_salt+0xec>
    5fa8:	add	r3, pc, r3
    5fac:	ldr	r2, [r3]
    5fb0:	ldr	r3, [fp, #-8]
    5fb4:	orr	r2, r2, r3
    5fb8:	ldr	r3, [pc, #88]	; 6018 <rb_setup_salt+0xf0>
    5fbc:	add	r3, pc, r3
    5fc0:	str	r2, [r3]
    5fc4:	ldr	r3, [fp, #-12]
    5fc8:	lsl	r3, r3, #1
    5fcc:	str	r3, [fp, #-12]
    5fd0:	ldr	r3, [fp, #-8]
    5fd4:	lsr	r3, r3, #1
    5fd8:	str	r3, [fp, #-8]
    5fdc:	ldr	r3, [fp, #-16]
    5fe0:	add	r3, r3, #1
    5fe4:	str	r3, [fp, #-16]
    5fe8:	ldr	r3, [fp, #-16]
    5fec:	cmp	r3, #23
    5ff0:	ble	5f90 <rb_setup_salt+0x68>
    5ff4:	b	5ffc <rb_setup_salt+0xd4>
    5ff8:	nop	{0}
    5ffc:	add	sp, fp, #0
    6000:	pop	{fp}		; (ldr fp, [sp], #4)
    6004:	bx	lr
    6008:	.word	0x0003cdf4
    600c:	.word	0x0003cdd4
    6010:	.word	0x0003cdc4
    6014:	.word	0x0003cd84
    6018:	.word	0x0003cd70

0000601c <rb_des_setkey>:
    601c:	str	fp, [sp, #-8]!
    6020:	str	lr, [sp, #4]
    6024:	add	fp, sp, #4
    6028:	sub	sp, sp, #40	; 0x28
    602c:	str	r0, [fp, #-40]	; 0xffffffd8
    6030:	bl	53f0 <rb_des_init>
    6034:	ldr	r3, [fp, #-40]	; 0xffffffd8
    6038:	ldr	r3, [r3]
    603c:	mov	r0, r3
    6040:	bl	46cc <ntohl@plt>
    6044:	str	r0, [fp, #-16]
    6048:	ldr	r3, [fp, #-40]	; 0xffffffd8
    604c:	add	r3, r3, #4
    6050:	ldr	r3, [r3]
    6054:	mov	r0, r3
    6058:	bl	46cc <ntohl@plt>
    605c:	str	r0, [fp, #-20]	; 0xffffffec
    6060:	ldr	r2, [fp, #-16]
    6064:	ldr	r3, [fp, #-20]	; 0xffffffec
    6068:	orr	r3, r2, r3
    606c:	cmp	r3, #0
    6070:	beq	60ac <rb_des_setkey+0x90>
    6074:	ldr	r3, [pc, #1328]	; 65ac <rb_des_setkey+0x590>
    6078:	add	r3, pc, r3
    607c:	ldr	r3, [r3]
    6080:	ldr	r2, [fp, #-16]
    6084:	cmp	r2, r3
    6088:	bne	60ac <rb_des_setkey+0x90>
    608c:	ldr	r3, [pc, #1308]	; 65b0 <rb_des_setkey+0x594>
    6090:	add	r3, pc, r3
    6094:	ldr	r3, [r3]
    6098:	ldr	r2, [fp, #-20]	; 0xffffffec
    609c:	cmp	r2, r3
    60a0:	bne	60ac <rb_des_setkey+0x90>
    60a4:	mov	r3, #0
    60a8:	b	6598 <rb_des_setkey+0x57c>
    60ac:	ldr	r3, [pc, #1280]	; 65b4 <rb_des_setkey+0x598>
    60b0:	add	r3, pc, r3
    60b4:	ldr	r2, [fp, #-16]
    60b8:	str	r2, [r3]
    60bc:	ldr	r3, [pc, #1268]	; 65b8 <rb_des_setkey+0x59c>
    60c0:	add	r3, pc, r3
    60c4:	ldr	r2, [fp, #-20]	; 0xffffffec
    60c8:	str	r2, [r3]
    60cc:	ldr	r3, [fp, #-16]
    60d0:	lsr	r2, r3, #25
    60d4:	ldr	r3, [pc, #1248]	; 65bc <rb_des_setkey+0x5a0>
    60d8:	add	r3, pc, r3
    60dc:	ldr	r2, [r3, r2, lsl #2]
    60e0:	ldr	r3, [fp, #-16]
    60e4:	lsr	r3, r3, #17
    60e8:	and	r1, r3, #127	; 0x7f
    60ec:	ldr	r3, [pc, #1228]	; 65c0 <rb_des_setkey+0x5a4>
    60f0:	add	r3, pc, r3
    60f4:	add	r1, r1, #128	; 0x80
    60f8:	ldr	r3, [r3, r1, lsl #2]
    60fc:	orr	r2, r2, r3
    6100:	ldr	r3, [fp, #-16]
    6104:	lsr	r3, r3, #9
    6108:	and	r1, r3, #127	; 0x7f
    610c:	ldr	r3, [pc, #1200]	; 65c4 <rb_des_setkey+0x5a8>
    6110:	add	r3, pc, r3
    6114:	add	r1, r1, #256	; 0x100
    6118:	ldr	r3, [r3, r1, lsl #2]
    611c:	orr	r2, r2, r3
    6120:	ldr	r3, [fp, #-16]
    6124:	lsr	r3, r3, #1
    6128:	and	r1, r3, #127	; 0x7f
    612c:	ldr	r3, [pc, #1172]	; 65c8 <rb_des_setkey+0x5ac>
    6130:	add	r3, pc, r3
    6134:	add	r1, r1, #384	; 0x180
    6138:	ldr	r3, [r3, r1, lsl #2]
    613c:	orr	r2, r2, r3
    6140:	ldr	r3, [fp, #-20]	; 0xffffffec
    6144:	lsr	r1, r3, #25
    6148:	ldr	r3, [pc, #1148]	; 65cc <rb_des_setkey+0x5b0>
    614c:	add	r3, pc, r3
    6150:	add	r1, r1, #512	; 0x200
    6154:	ldr	r3, [r3, r1, lsl #2]
    6158:	orr	r2, r2, r3
    615c:	ldr	r3, [fp, #-20]	; 0xffffffec
    6160:	lsr	r3, r3, #17
    6164:	and	r1, r3, #127	; 0x7f
    6168:	ldr	r3, [pc, #1120]	; 65d0 <rb_des_setkey+0x5b4>
    616c:	add	r3, pc, r3
    6170:	add	r1, r1, #640	; 0x280
    6174:	ldr	r3, [r3, r1, lsl #2]
    6178:	orr	r2, r2, r3
    617c:	ldr	r3, [fp, #-20]	; 0xffffffec
    6180:	lsr	r3, r3, #9
    6184:	and	r1, r3, #127	; 0x7f
    6188:	ldr	r3, [pc, #1092]	; 65d4 <rb_des_setkey+0x5b8>
    618c:	add	r3, pc, r3
    6190:	add	r1, r1, #768	; 0x300
    6194:	ldr	r3, [r3, r1, lsl #2]
    6198:	orr	r2, r2, r3
    619c:	ldr	r3, [fp, #-20]	; 0xffffffec
    61a0:	lsr	r3, r3, #1
    61a4:	and	r1, r3, #127	; 0x7f
    61a8:	ldr	r3, [pc, #1064]	; 65d8 <rb_des_setkey+0x5bc>
    61ac:	add	r3, pc, r3
    61b0:	add	r1, r1, #896	; 0x380
    61b4:	ldr	r3, [r3, r1, lsl #2]
    61b8:	orr	r3, r2, r3
    61bc:	str	r3, [fp, #-24]	; 0xffffffe8
    61c0:	ldr	r3, [fp, #-16]
    61c4:	lsr	r2, r3, #25
    61c8:	ldr	r3, [pc, #1036]	; 65dc <rb_des_setkey+0x5c0>
    61cc:	add	r3, pc, r3
    61d0:	ldr	r2, [r3, r2, lsl #2]
    61d4:	ldr	r3, [fp, #-16]
    61d8:	lsr	r3, r3, #17
    61dc:	and	r1, r3, #127	; 0x7f
    61e0:	ldr	r3, [pc, #1016]	; 65e0 <rb_des_setkey+0x5c4>
    61e4:	add	r3, pc, r3
    61e8:	add	r1, r1, #128	; 0x80
    61ec:	ldr	r3, [r3, r1, lsl #2]
    61f0:	orr	r2, r2, r3
    61f4:	ldr	r3, [fp, #-16]
    61f8:	lsr	r3, r3, #9
    61fc:	and	r1, r3, #127	; 0x7f
    6200:	ldr	r3, [pc, #988]	; 65e4 <rb_des_setkey+0x5c8>
    6204:	add	r3, pc, r3
    6208:	add	r1, r1, #256	; 0x100
    620c:	ldr	r3, [r3, r1, lsl #2]
    6210:	orr	r2, r2, r3
    6214:	ldr	r3, [fp, #-16]
    6218:	lsr	r3, r3, #1
    621c:	and	r1, r3, #127	; 0x7f
    6220:	ldr	r3, [pc, #960]	; 65e8 <rb_des_setkey+0x5cc>
    6224:	add	r3, pc, r3
    6228:	add	r1, r1, #384	; 0x180
    622c:	ldr	r3, [r3, r1, lsl #2]
    6230:	orr	r2, r2, r3
    6234:	ldr	r3, [fp, #-20]	; 0xffffffec
    6238:	lsr	r1, r3, #25
    623c:	ldr	r3, [pc, #936]	; 65ec <rb_des_setkey+0x5d0>
    6240:	add	r3, pc, r3
    6244:	add	r1, r1, #512	; 0x200
    6248:	ldr	r3, [r3, r1, lsl #2]
    624c:	orr	r2, r2, r3
    6250:	ldr	r3, [fp, #-20]	; 0xffffffec
    6254:	lsr	r3, r3, #17
    6258:	and	r1, r3, #127	; 0x7f
    625c:	ldr	r3, [pc, #908]	; 65f0 <rb_des_setkey+0x5d4>
    6260:	add	r3, pc, r3
    6264:	add	r1, r1, #640	; 0x280
    6268:	ldr	r3, [r3, r1, lsl #2]
    626c:	orr	r2, r2, r3
    6270:	ldr	r3, [fp, #-20]	; 0xffffffec
    6274:	lsr	r3, r3, #9
    6278:	and	r1, r3, #127	; 0x7f
    627c:	ldr	r3, [pc, #880]	; 65f4 <rb_des_setkey+0x5d8>
    6280:	add	r3, pc, r3
    6284:	add	r1, r1, #768	; 0x300
    6288:	ldr	r3, [r3, r1, lsl #2]
    628c:	orr	r2, r2, r3
    6290:	ldr	r3, [fp, #-20]	; 0xffffffec
    6294:	lsr	r3, r3, #1
    6298:	and	r1, r3, #127	; 0x7f
    629c:	ldr	r3, [pc, #852]	; 65f8 <rb_des_setkey+0x5dc>
    62a0:	add	r3, pc, r3
    62a4:	add	r1, r1, #896	; 0x380
    62a8:	ldr	r3, [r3, r1, lsl #2]
    62ac:	orr	r3, r2, r3
    62b0:	str	r3, [fp, #-28]	; 0xffffffe4
    62b4:	mov	r3, #0
    62b8:	str	r3, [fp, #-8]
    62bc:	mov	r3, #0
    62c0:	str	r3, [fp, #-12]
    62c4:	b	6588 <rb_des_setkey+0x56c>
    62c8:	ldr	r2, [pc, #812]	; 65fc <rb_des_setkey+0x5e0>
    62cc:	add	r2, pc, r2
    62d0:	ldr	r3, [fp, #-12]
    62d4:	add	r3, r2, r3
    62d8:	ldrb	r3, [r3]
    62dc:	mov	r2, r3
    62e0:	ldr	r3, [fp, #-8]
    62e4:	add	r3, r3, r2
    62e8:	str	r3, [fp, #-8]
    62ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
    62f0:	ldr	r3, [fp, #-8]
    62f4:	lsl	r2, r2, r3
    62f8:	ldr	r3, [fp, #-8]
    62fc:	rsb	r3, r3, #28
    6300:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6304:	lsr	r3, r1, r3
    6308:	orr	r3, r2, r3
    630c:	str	r3, [fp, #-32]	; 0xffffffe0
    6310:	ldr	r2, [fp, #-28]	; 0xffffffe4
    6314:	ldr	r3, [fp, #-8]
    6318:	lsl	r2, r2, r3
    631c:	ldr	r3, [fp, #-8]
    6320:	rsb	r3, r3, #28
    6324:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6328:	lsr	r3, r1, r3
    632c:	orr	r3, r2, r3
    6330:	str	r3, [fp, #-36]	; 0xffffffdc
    6334:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6338:	lsr	r3, r3, #21
    633c:	and	r2, r3, #127	; 0x7f
    6340:	ldr	r3, [pc, #696]	; 6600 <rb_des_setkey+0x5e4>
    6344:	add	r3, pc, r3
    6348:	ldr	r2, [r3, r2, lsl #2]
    634c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6350:	lsr	r3, r3, #14
    6354:	and	r1, r3, #127	; 0x7f
    6358:	ldr	r3, [pc, #676]	; 6604 <rb_des_setkey+0x5e8>
    635c:	add	r3, pc, r3
    6360:	add	r1, r1, #128	; 0x80
    6364:	ldr	r3, [r3, r1, lsl #2]
    6368:	orr	r2, r2, r3
    636c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6370:	lsr	r3, r3, #7
    6374:	and	r1, r3, #127	; 0x7f
    6378:	ldr	r3, [pc, #648]	; 6608 <rb_des_setkey+0x5ec>
    637c:	add	r3, pc, r3
    6380:	add	r1, r1, #256	; 0x100
    6384:	ldr	r3, [r3, r1, lsl #2]
    6388:	orr	r2, r2, r3
    638c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6390:	and	r1, r3, #127	; 0x7f
    6394:	ldr	r3, [pc, #624]	; 660c <rb_des_setkey+0x5f0>
    6398:	add	r3, pc, r3
    639c:	add	r1, r1, #384	; 0x180
    63a0:	ldr	r3, [r3, r1, lsl #2]
    63a4:	orr	r2, r2, r3
    63a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    63ac:	lsr	r3, r3, #21
    63b0:	and	r1, r3, #127	; 0x7f
    63b4:	ldr	r3, [pc, #596]	; 6610 <rb_des_setkey+0x5f4>
    63b8:	add	r3, pc, r3
    63bc:	add	r1, r1, #512	; 0x200
    63c0:	ldr	r3, [r3, r1, lsl #2]
    63c4:	orr	r2, r2, r3
    63c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    63cc:	lsr	r3, r3, #14
    63d0:	and	r1, r3, #127	; 0x7f
    63d4:	ldr	r3, [pc, #568]	; 6614 <rb_des_setkey+0x5f8>
    63d8:	add	r3, pc, r3
    63dc:	add	r1, r1, #640	; 0x280
    63e0:	ldr	r3, [r3, r1, lsl #2]
    63e4:	orr	r2, r2, r3
    63e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    63ec:	lsr	r3, r3, #7
    63f0:	and	r1, r3, #127	; 0x7f
    63f4:	ldr	r3, [pc, #540]	; 6618 <rb_des_setkey+0x5fc>
    63f8:	add	r3, pc, r3
    63fc:	add	r1, r1, #768	; 0x300
    6400:	ldr	r3, [r3, r1, lsl #2]
    6404:	orr	r2, r2, r3
    6408:	ldr	r3, [fp, #-36]	; 0xffffffdc
    640c:	and	r1, r3, #127	; 0x7f
    6410:	ldr	r3, [pc, #516]	; 661c <rb_des_setkey+0x600>
    6414:	add	r3, pc, r3
    6418:	add	r1, r1, #896	; 0x380
    641c:	ldr	r3, [r3, r1, lsl #2]
    6420:	orr	r1, r2, r3
    6424:	ldr	r3, [pc, #500]	; 6620 <rb_des_setkey+0x604>
    6428:	add	r3, pc, r3
    642c:	ldr	r2, [fp, #-12]
    6430:	str	r1, [r3, r2, lsl #2]
    6434:	ldr	r3, [fp, #-12]
    6438:	rsb	r2, r3, #15
    643c:	ldr	r3, [pc, #480]	; 6624 <rb_des_setkey+0x608>
    6440:	add	r3, pc, r3
    6444:	ldr	r1, [fp, #-12]
    6448:	ldr	r1, [r3, r1, lsl #2]
    644c:	ldr	r3, [pc, #468]	; 6628 <rb_des_setkey+0x60c>
    6450:	add	r3, pc, r3
    6454:	str	r1, [r3, r2, lsl #2]
    6458:	ldr	r3, [fp, #-32]	; 0xffffffe0
    645c:	lsr	r3, r3, #21
    6460:	and	r2, r3, #127	; 0x7f
    6464:	ldr	r3, [pc, #448]	; 662c <rb_des_setkey+0x610>
    6468:	add	r3, pc, r3
    646c:	ldr	r2, [r3, r2, lsl #2]
    6470:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6474:	lsr	r3, r3, #14
    6478:	and	r1, r3, #127	; 0x7f
    647c:	ldr	r3, [pc, #428]	; 6630 <rb_des_setkey+0x614>
    6480:	add	r3, pc, r3
    6484:	add	r1, r1, #128	; 0x80
    6488:	ldr	r3, [r3, r1, lsl #2]
    648c:	orr	r2, r2, r3
    6490:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6494:	lsr	r3, r3, #7
    6498:	and	r1, r3, #127	; 0x7f
    649c:	ldr	r3, [pc, #400]	; 6634 <rb_des_setkey+0x618>
    64a0:	add	r3, pc, r3
    64a4:	add	r1, r1, #256	; 0x100
    64a8:	ldr	r3, [r3, r1, lsl #2]
    64ac:	orr	r2, r2, r3
    64b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    64b4:	and	r1, r3, #127	; 0x7f
    64b8:	ldr	r3, [pc, #376]	; 6638 <rb_des_setkey+0x61c>
    64bc:	add	r3, pc, r3
    64c0:	add	r1, r1, #384	; 0x180
    64c4:	ldr	r3, [r3, r1, lsl #2]
    64c8:	orr	r2, r2, r3
    64cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    64d0:	lsr	r3, r3, #21
    64d4:	and	r1, r3, #127	; 0x7f
    64d8:	ldr	r3, [pc, #348]	; 663c <rb_des_setkey+0x620>
    64dc:	add	r3, pc, r3
    64e0:	add	r1, r1, #512	; 0x200
    64e4:	ldr	r3, [r3, r1, lsl #2]
    64e8:	orr	r2, r2, r3
    64ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
    64f0:	lsr	r3, r3, #14
    64f4:	and	r1, r3, #127	; 0x7f
    64f8:	ldr	r3, [pc, #320]	; 6640 <rb_des_setkey+0x624>
    64fc:	add	r3, pc, r3
    6500:	add	r1, r1, #640	; 0x280
    6504:	ldr	r3, [r3, r1, lsl #2]
    6508:	orr	r2, r2, r3
    650c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6510:	lsr	r3, r3, #7
    6514:	and	r1, r3, #127	; 0x7f
    6518:	ldr	r3, [pc, #292]	; 6644 <rb_des_setkey+0x628>
    651c:	add	r3, pc, r3
    6520:	add	r1, r1, #768	; 0x300
    6524:	ldr	r3, [r3, r1, lsl #2]
    6528:	orr	r2, r2, r3
    652c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6530:	and	r1, r3, #127	; 0x7f
    6534:	ldr	r3, [pc, #268]	; 6648 <rb_des_setkey+0x62c>
    6538:	add	r3, pc, r3
    653c:	add	r1, r1, #896	; 0x380
    6540:	ldr	r3, [r3, r1, lsl #2]
    6544:	orr	r1, r2, r3
    6548:	ldr	r3, [pc, #252]	; 664c <rb_des_setkey+0x630>
    654c:	add	r3, pc, r3
    6550:	ldr	r2, [fp, #-12]
    6554:	str	r1, [r3, r2, lsl #2]
    6558:	ldr	r3, [fp, #-12]
    655c:	rsb	r2, r3, #15
    6560:	ldr	r3, [pc, #232]	; 6650 <rb_des_setkey+0x634>
    6564:	add	r3, pc, r3
    6568:	ldr	r1, [fp, #-12]
    656c:	ldr	r1, [r3, r1, lsl #2]
    6570:	ldr	r3, [pc, #220]	; 6654 <rb_des_setkey+0x638>
    6574:	add	r3, pc, r3
    6578:	str	r1, [r3, r2, lsl #2]
    657c:	ldr	r3, [fp, #-12]
    6580:	add	r3, r3, #1
    6584:	str	r3, [fp, #-12]
    6588:	ldr	r3, [fp, #-12]
    658c:	cmp	r3, #15
    6590:	ble	62c8 <rb_des_setkey+0x2ac>
    6594:	mov	r3, #0
    6598:	mov	r0, r3
    659c:	sub	sp, fp, #4
    65a0:	ldr	fp, [sp]
    65a4:	add	sp, sp, #4
    65a8:	pop	{pc}		; (ldr pc, [sp], #4)
    65ac:	.word	0x0003ccbc
    65b0:	.word	0x0003cca8
    65b4:	.word	0x0003cc84
    65b8:	.word	0x0003cc78
    65bc:	.word	0x00038c54
    65c0:	.word	0x00038c3c
    65c4:	.word	0x00038c1c
    65c8:	.word	0x00038bfc
    65cc:	.word	0x00038be0
    65d0:	.word	0x00038bc0
    65d4:	.word	0x00038ba0
    65d8:	.word	0x00038b80
    65dc:	.word	0x00039b60
    65e0:	.word	0x00039b48
    65e4:	.word	0x00039b28
    65e8:	.word	0x00039b08
    65ec:	.word	0x00039aec
    65f0:	.word	0x00039acc
    65f4:	.word	0x00039aac
    65f8:	.word	0x00039a8c
    65fc:	.word	0x0001cb08
    6600:	.word	0x0003a9e8
    6604:	.word	0x0003a9d0
    6608:	.word	0x0003a9b0
    660c:	.word	0x0003a994
    6610:	.word	0x0003a974
    6614:	.word	0x0003a954
    6618:	.word	0x0003a934
    661c:	.word	0x0003a918
    6620:	.word	0x00030804
    6624:	.word	0x000307ec
    6628:	.word	0x0003085c
    662c:	.word	0x0003b8c4
    6630:	.word	0x0003b8ac
    6634:	.word	0x0003b88c
    6638:	.word	0x0003b870
    663c:	.word	0x0003b850
    6640:	.word	0x0003b830
    6644:	.word	0x0003b810
    6648:	.word	0x0003b7f4
    664c:	.word	0x00030720
    6650:	.word	0x00030708
    6654:	.word	0x00030778

00006658 <rb_do_des>:
    6658:	push	{fp}		; (str fp, [sp, #-4]!)
    665c:	add	fp, sp, #0
    6660:	sub	sp, sp, #60	; 0x3c
    6664:	str	r0, [fp, #-48]	; 0xffffffd0
    6668:	str	r1, [fp, #-52]	; 0xffffffcc
    666c:	str	r2, [fp, #-56]	; 0xffffffc8
    6670:	str	r3, [fp, #-60]	; 0xffffffc4
    6674:	mov	r3, #0
    6678:	str	r3, [fp, #-32]	; 0xffffffe0
    667c:	ldr	r3, [fp, #4]
    6680:	cmp	r3, #0
    6684:	bne	6690 <rb_do_des+0x38>
    6688:	mov	r3, #1
    668c:	b	6cd8 <rb_do_des+0x680>
    6690:	ldr	r3, [fp, #4]
    6694:	cmp	r3, #0
    6698:	ble	66b8 <rb_do_des+0x60>
    669c:	ldr	r3, [pc, #1604]	; 6ce8 <rb_do_des+0x690>
    66a0:	add	r3, pc, r3
    66a4:	str	r3, [fp, #-24]	; 0xffffffe8
    66a8:	ldr	r3, [pc, #1596]	; 6cec <rb_do_des+0x694>
    66ac:	add	r3, pc, r3
    66b0:	str	r3, [fp, #-28]	; 0xffffffe4
    66b4:	b	66dc <rb_do_des+0x84>
    66b8:	ldr	r3, [fp, #4]
    66bc:	rsb	r3, r3, #0
    66c0:	str	r3, [fp, #4]
    66c4:	ldr	r3, [pc, #1572]	; 6cf0 <rb_do_des+0x698>
    66c8:	add	r3, pc, r3
    66cc:	str	r3, [fp, #-24]	; 0xffffffe8
    66d0:	ldr	r3, [pc, #1564]	; 6cf4 <rb_do_des+0x69c>
    66d4:	add	r3, pc, r3
    66d8:	str	r3, [fp, #-28]	; 0xffffffe4
    66dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    66e0:	lsr	r2, r3, #24
    66e4:	ldr	r3, [pc, #1548]	; 6cf8 <rb_do_des+0x6a0>
    66e8:	add	r3, pc, r3
    66ec:	ldr	r2, [r3, r2, lsl #2]
    66f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    66f4:	lsr	r3, r3, #16
    66f8:	uxtb	r1, r3
    66fc:	ldr	r3, [pc, #1528]	; 6cfc <rb_do_des+0x6a4>
    6700:	add	r3, pc, r3
    6704:	add	r1, r1, #256	; 0x100
    6708:	ldr	r3, [r3, r1, lsl #2]
    670c:	orr	r2, r2, r3
    6710:	ldr	r3, [fp, #-48]	; 0xffffffd0
    6714:	lsr	r3, r3, #8
    6718:	uxtb	r1, r3
    671c:	ldr	r3, [pc, #1500]	; 6d00 <rb_do_des+0x6a8>
    6720:	add	r3, pc, r3
    6724:	add	r1, r1, #512	; 0x200
    6728:	ldr	r3, [r3, r1, lsl #2]
    672c:	orr	r2, r2, r3
    6730:	ldr	r3, [fp, #-48]	; 0xffffffd0
    6734:	uxtb	r1, r3
    6738:	ldr	r3, [pc, #1476]	; 6d04 <rb_do_des+0x6ac>
    673c:	add	r3, pc, r3
    6740:	add	r1, r1, #768	; 0x300
    6744:	ldr	r3, [r3, r1, lsl #2]
    6748:	orr	r2, r2, r3
    674c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    6750:	lsr	r1, r3, #24
    6754:	ldr	r3, [pc, #1452]	; 6d08 <rb_do_des+0x6b0>
    6758:	add	r3, pc, r3
    675c:	add	r1, r1, #1024	; 0x400
    6760:	ldr	r3, [r3, r1, lsl #2]
    6764:	orr	r2, r2, r3
    6768:	ldr	r3, [fp, #-52]	; 0xffffffcc
    676c:	lsr	r3, r3, #16
    6770:	uxtb	r1, r3
    6774:	ldr	r3, [pc, #1424]	; 6d0c <rb_do_des+0x6b4>
    6778:	add	r3, pc, r3
    677c:	add	r1, r1, #1280	; 0x500
    6780:	ldr	r3, [r3, r1, lsl #2]
    6784:	orr	r2, r2, r3
    6788:	ldr	r3, [fp, #-52]	; 0xffffffcc
    678c:	lsr	r3, r3, #8
    6790:	uxtb	r1, r3
    6794:	ldr	r3, [pc, #1396]	; 6d10 <rb_do_des+0x6b8>
    6798:	add	r3, pc, r3
    679c:	add	r1, r1, #1536	; 0x600
    67a0:	ldr	r3, [r3, r1, lsl #2]
    67a4:	orr	r2, r2, r3
    67a8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    67ac:	uxtb	r1, r3
    67b0:	ldr	r3, [pc, #1372]	; 6d14 <rb_do_des+0x6bc>
    67b4:	add	r3, pc, r3
    67b8:	add	r1, r1, #1792	; 0x700
    67bc:	ldr	r3, [r3, r1, lsl #2]
    67c0:	orr	r3, r2, r3
    67c4:	str	r3, [fp, #-8]
    67c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    67cc:	lsr	r2, r3, #24
    67d0:	ldr	r3, [pc, #1344]	; 6d18 <rb_do_des+0x6c0>
    67d4:	add	r3, pc, r3
    67d8:	ldr	r2, [r3, r2, lsl #2]
    67dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    67e0:	lsr	r3, r3, #16
    67e4:	uxtb	r1, r3
    67e8:	ldr	r3, [pc, #1324]	; 6d1c <rb_do_des+0x6c4>
    67ec:	add	r3, pc, r3
    67f0:	add	r1, r1, #256	; 0x100
    67f4:	ldr	r3, [r3, r1, lsl #2]
    67f8:	orr	r2, r2, r3
    67fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    6800:	lsr	r3, r3, #8
    6804:	uxtb	r1, r3
    6808:	ldr	r3, [pc, #1296]	; 6d20 <rb_do_des+0x6c8>
    680c:	add	r3, pc, r3
    6810:	add	r1, r1, #512	; 0x200
    6814:	ldr	r3, [r3, r1, lsl #2]
    6818:	orr	r2, r2, r3
    681c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    6820:	uxtb	r1, r3
    6824:	ldr	r3, [pc, #1272]	; 6d24 <rb_do_des+0x6cc>
    6828:	add	r3, pc, r3
    682c:	add	r1, r1, #768	; 0x300
    6830:	ldr	r3, [r3, r1, lsl #2]
    6834:	orr	r2, r2, r3
    6838:	ldr	r3, [fp, #-52]	; 0xffffffcc
    683c:	lsr	r1, r3, #24
    6840:	ldr	r3, [pc, #1248]	; 6d28 <rb_do_des+0x6d0>
    6844:	add	r3, pc, r3
    6848:	add	r1, r1, #1024	; 0x400
    684c:	ldr	r3, [r3, r1, lsl #2]
    6850:	orr	r2, r2, r3
    6854:	ldr	r3, [fp, #-52]	; 0xffffffcc
    6858:	lsr	r3, r3, #16
    685c:	uxtb	r1, r3
    6860:	ldr	r3, [pc, #1220]	; 6d2c <rb_do_des+0x6d4>
    6864:	add	r3, pc, r3
    6868:	add	r1, r1, #1280	; 0x500
    686c:	ldr	r3, [r3, r1, lsl #2]
    6870:	orr	r2, r2, r3
    6874:	ldr	r3, [fp, #-52]	; 0xffffffcc
    6878:	lsr	r3, r3, #8
    687c:	uxtb	r1, r3
    6880:	ldr	r3, [pc, #1192]	; 6d30 <rb_do_des+0x6d8>
    6884:	add	r3, pc, r3
    6888:	add	r1, r1, #1536	; 0x600
    688c:	ldr	r3, [r3, r1, lsl #2]
    6890:	orr	r2, r2, r3
    6894:	ldr	r3, [fp, #-52]	; 0xffffffcc
    6898:	uxtb	r1, r3
    689c:	ldr	r3, [pc, #1168]	; 6d34 <rb_do_des+0x6dc>
    68a0:	add	r3, pc, r3
    68a4:	add	r1, r1, #1792	; 0x700
    68a8:	ldr	r3, [r3, r1, lsl #2]
    68ac:	orr	r3, r2, r3
    68b0:	str	r3, [fp, #-12]
    68b4:	b	6ae0 <rb_do_des+0x488>
    68b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    68bc:	str	r3, [fp, #-16]
    68c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    68c4:	str	r3, [fp, #-20]	; 0xffffffec
    68c8:	mov	r3, #16
    68cc:	str	r3, [fp, #-36]	; 0xffffffdc
    68d0:	b	6abc <rb_do_des+0x464>
    68d4:	ldr	r3, [fp, #-12]
    68d8:	lsl	r3, r3, #23
    68dc:	and	r2, r3, #8388608	; 0x800000
    68e0:	ldr	r3, [fp, #-12]
    68e4:	lsr	r3, r3, #9
    68e8:	and	r3, r3, #8126464	; 0x7c0000
    68ec:	orr	r2, r2, r3
    68f0:	ldr	r3, [fp, #-12]
    68f4:	lsr	r3, r3, #11
    68f8:	and	r3, r3, #258048	; 0x3f000
    68fc:	orr	r2, r2, r3
    6900:	ldr	r3, [fp, #-12]
    6904:	lsr	r3, r3, #13
    6908:	and	r3, r3, #4032	; 0xfc0
    690c:	orr	r2, r2, r3
    6910:	ldr	r3, [fp, #-12]
    6914:	lsr	r3, r3, #15
    6918:	and	r3, r3, #63	; 0x3f
    691c:	orr	r3, r2, r3
    6920:	str	r3, [fp, #-40]	; 0xffffffd8
    6924:	ldr	r3, [fp, #-12]
    6928:	lsl	r3, r3, #7
    692c:	and	r2, r3, #16515072	; 0xfc0000
    6930:	ldr	r3, [fp, #-12]
    6934:	lsl	r3, r3, #5
    6938:	and	r3, r3, #258048	; 0x3f000
    693c:	orr	r2, r2, r3
    6940:	ldr	r3, [fp, #-12]
    6944:	lsl	r3, r3, #3
    6948:	and	r3, r3, #4032	; 0xfc0
    694c:	orr	r2, r2, r3
    6950:	ldr	r3, [fp, #-12]
    6954:	lsl	r3, r3, #1
    6958:	and	r3, r3, #62	; 0x3e
    695c:	orr	r2, r2, r3
    6960:	ldr	r3, [fp, #-12]
    6964:	lsr	r3, r3, #31
    6968:	orr	r3, r2, r3
    696c:	str	r3, [fp, #-44]	; 0xffffffd4
    6970:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6974:	ldr	r3, [fp, #-44]	; 0xffffffd4
    6978:	eor	r2, r2, r3
    697c:	ldr	r3, [pc, #948]	; 6d38 <rb_do_des+0x6e0>
    6980:	add	r3, pc, r3
    6984:	ldr	r3, [r3]
    6988:	and	r3, r3, r2
    698c:	str	r3, [fp, #-32]	; 0xffffffe0
    6990:	ldr	r3, [fp, #-16]
    6994:	add	r2, r3, #4
    6998:	str	r2, [fp, #-16]
    699c:	ldr	r2, [r3]
    69a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    69a4:	eor	r3, r3, r2
    69a8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    69ac:	eor	r3, r3, r2
    69b0:	str	r3, [fp, #-40]	; 0xffffffd8
    69b4:	ldr	r3, [fp, #-20]	; 0xffffffec
    69b8:	add	r2, r3, #4
    69bc:	str	r2, [fp, #-20]	; 0xffffffec
    69c0:	ldr	r2, [r3]
    69c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    69c8:	eor	r3, r3, r2
    69cc:	ldr	r2, [fp, #-44]	; 0xffffffd4
    69d0:	eor	r3, r3, r2
    69d4:	str	r3, [fp, #-44]	; 0xffffffd4
    69d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    69dc:	lsr	r3, r3, #12
    69e0:	ldr	r2, [pc, #852]	; 6d3c <rb_do_des+0x6e4>
    69e4:	add	r2, pc, r2
    69e8:	ldrb	r3, [r2, r3]
    69ec:	mov	r2, r3
    69f0:	ldr	r3, [pc, #840]	; 6d40 <rb_do_des+0x6e8>
    69f4:	add	r3, pc, r3
    69f8:	ldr	r2, [r3, r2, lsl #2]
    69fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    6a00:	ubfx	r3, r3, #0, #12
    6a04:	ldr	r1, [pc, #824]	; 6d44 <rb_do_des+0x6ec>
    6a08:	add	r1, pc, r1
    6a0c:	add	r3, r1, r3
    6a10:	add	r3, r3, #4096	; 0x1000
    6a14:	ldrb	r3, [r3]
    6a18:	mov	r1, r3
    6a1c:	ldr	r3, [pc, #804]	; 6d48 <rb_do_des+0x6f0>
    6a20:	add	r3, pc, r3
    6a24:	add	r1, r1, #256	; 0x100
    6a28:	ldr	r3, [r3, r1, lsl #2]
    6a2c:	orr	r2, r2, r3
    6a30:	ldr	r3, [fp, #-44]	; 0xffffffd4
    6a34:	lsr	r3, r3, #12
    6a38:	ldr	r1, [pc, #780]	; 6d4c <rb_do_des+0x6f4>
    6a3c:	add	r1, pc, r1
    6a40:	add	r3, r1, r3
    6a44:	add	r3, r3, #8192	; 0x2000
    6a48:	ldrb	r3, [r3]
    6a4c:	mov	r1, r3
    6a50:	ldr	r3, [pc, #760]	; 6d50 <rb_do_des+0x6f8>
    6a54:	add	r3, pc, r3
    6a58:	add	r1, r1, #512	; 0x200
    6a5c:	ldr	r3, [r3, r1, lsl #2]
    6a60:	orr	r2, r2, r3
    6a64:	ldr	r3, [fp, #-44]	; 0xffffffd4
    6a68:	ubfx	r3, r3, #0, #12
    6a6c:	ldr	r1, [pc, #736]	; 6d54 <rb_do_des+0x6fc>
    6a70:	add	r1, pc, r1
    6a74:	add	r3, r1, r3
    6a78:	add	r3, r3, #12288	; 0x3000
    6a7c:	ldrb	r3, [r3]
    6a80:	mov	r1, r3
    6a84:	ldr	r3, [pc, #716]	; 6d58 <rb_do_des+0x700>
    6a88:	add	r3, pc, r3
    6a8c:	add	r1, r1, #768	; 0x300
    6a90:	ldr	r3, [r3, r1, lsl #2]
    6a94:	orr	r3, r2, r3
    6a98:	str	r3, [fp, #-32]	; 0xffffffe0
    6a9c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6aa0:	ldr	r3, [fp, #-8]
    6aa4:	eor	r3, r3, r2
    6aa8:	str	r3, [fp, #-32]	; 0xffffffe0
    6aac:	ldr	r3, [fp, #-12]
    6ab0:	str	r3, [fp, #-8]
    6ab4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6ab8:	str	r3, [fp, #-12]
    6abc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6ac0:	sub	r2, r3, #1
    6ac4:	str	r2, [fp, #-36]	; 0xffffffdc
    6ac8:	cmp	r3, #0
    6acc:	bne	68d4 <rb_do_des+0x27c>
    6ad0:	ldr	r3, [fp, #-8]
    6ad4:	str	r3, [fp, #-12]
    6ad8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6adc:	str	r3, [fp, #-8]
    6ae0:	ldr	r3, [fp, #4]
    6ae4:	sub	r2, r3, #1
    6ae8:	str	r2, [fp, #4]
    6aec:	cmp	r3, #0
    6af0:	bne	68b8 <rb_do_des+0x260>
    6af4:	ldr	r3, [fp, #-8]
    6af8:	lsr	r2, r3, #24
    6afc:	ldr	r3, [pc, #600]	; 6d5c <rb_do_des+0x704>
    6b00:	add	r3, pc, r3
    6b04:	ldr	r2, [r3, r2, lsl #2]
    6b08:	ldr	r3, [fp, #-8]
    6b0c:	lsr	r3, r3, #16
    6b10:	uxtb	r1, r3
    6b14:	ldr	r3, [pc, #580]	; 6d60 <rb_do_des+0x708>
    6b18:	add	r3, pc, r3
    6b1c:	add	r1, r1, #256	; 0x100
    6b20:	ldr	r3, [r3, r1, lsl #2]
    6b24:	orr	r2, r2, r3
    6b28:	ldr	r3, [fp, #-8]
    6b2c:	lsr	r3, r3, #8
    6b30:	uxtb	r1, r3
    6b34:	ldr	r3, [pc, #552]	; 6d64 <rb_do_des+0x70c>
    6b38:	add	r3, pc, r3
    6b3c:	add	r1, r1, #512	; 0x200
    6b40:	ldr	r3, [r3, r1, lsl #2]
    6b44:	orr	r2, r2, r3
    6b48:	ldr	r3, [fp, #-8]
    6b4c:	uxtb	r1, r3
    6b50:	ldr	r3, [pc, #528]	; 6d68 <rb_do_des+0x710>
    6b54:	add	r3, pc, r3
    6b58:	add	r1, r1, #768	; 0x300
    6b5c:	ldr	r3, [r3, r1, lsl #2]
    6b60:	orr	r2, r2, r3
    6b64:	ldr	r3, [fp, #-12]
    6b68:	lsr	r1, r3, #24
    6b6c:	ldr	r3, [pc, #504]	; 6d6c <rb_do_des+0x714>
    6b70:	add	r3, pc, r3
    6b74:	add	r1, r1, #1024	; 0x400
    6b78:	ldr	r3, [r3, r1, lsl #2]
    6b7c:	orr	r2, r2, r3
    6b80:	ldr	r3, [fp, #-12]
    6b84:	lsr	r3, r3, #16
    6b88:	uxtb	r1, r3
    6b8c:	ldr	r3, [pc, #476]	; 6d70 <rb_do_des+0x718>
    6b90:	add	r3, pc, r3
    6b94:	add	r1, r1, #1280	; 0x500
    6b98:	ldr	r3, [r3, r1, lsl #2]
    6b9c:	orr	r2, r2, r3
    6ba0:	ldr	r3, [fp, #-12]
    6ba4:	lsr	r3, r3, #8
    6ba8:	uxtb	r1, r3
    6bac:	ldr	r3, [pc, #448]	; 6d74 <rb_do_des+0x71c>
    6bb0:	add	r3, pc, r3
    6bb4:	add	r1, r1, #1536	; 0x600
    6bb8:	ldr	r3, [r3, r1, lsl #2]
    6bbc:	orr	r2, r2, r3
    6bc0:	ldr	r3, [fp, #-12]
    6bc4:	uxtb	r1, r3
    6bc8:	ldr	r3, [pc, #424]	; 6d78 <rb_do_des+0x720>
    6bcc:	add	r3, pc, r3
    6bd0:	add	r1, r1, #1792	; 0x700
    6bd4:	ldr	r3, [r3, r1, lsl #2]
    6bd8:	orr	r2, r2, r3
    6bdc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6be0:	str	r2, [r3]
    6be4:	ldr	r3, [fp, #-8]
    6be8:	lsr	r2, r3, #24
    6bec:	ldr	r3, [pc, #392]	; 6d7c <rb_do_des+0x724>
    6bf0:	add	r3, pc, r3
    6bf4:	ldr	r2, [r3, r2, lsl #2]
    6bf8:	ldr	r3, [fp, #-8]
    6bfc:	lsr	r3, r3, #16
    6c00:	uxtb	r1, r3
    6c04:	ldr	r3, [pc, #372]	; 6d80 <rb_do_des+0x728>
    6c08:	add	r3, pc, r3
    6c0c:	add	r1, r1, #256	; 0x100
    6c10:	ldr	r3, [r3, r1, lsl #2]
    6c14:	orr	r2, r2, r3
    6c18:	ldr	r3, [fp, #-8]
    6c1c:	lsr	r3, r3, #8
    6c20:	uxtb	r1, r3
    6c24:	ldr	r3, [pc, #344]	; 6d84 <rb_do_des+0x72c>
    6c28:	add	r3, pc, r3
    6c2c:	add	r1, r1, #512	; 0x200
    6c30:	ldr	r3, [r3, r1, lsl #2]
    6c34:	orr	r2, r2, r3
    6c38:	ldr	r3, [fp, #-8]
    6c3c:	uxtb	r1, r3
    6c40:	ldr	r3, [pc, #320]	; 6d88 <rb_do_des+0x730>
    6c44:	add	r3, pc, r3
    6c48:	add	r1, r1, #768	; 0x300
    6c4c:	ldr	r3, [r3, r1, lsl #2]
    6c50:	orr	r2, r2, r3
    6c54:	ldr	r3, [fp, #-12]
    6c58:	lsr	r1, r3, #24
    6c5c:	ldr	r3, [pc, #296]	; 6d8c <rb_do_des+0x734>
    6c60:	add	r3, pc, r3
    6c64:	add	r1, r1, #1024	; 0x400
    6c68:	ldr	r3, [r3, r1, lsl #2]
    6c6c:	orr	r2, r2, r3
    6c70:	ldr	r3, [fp, #-12]
    6c74:	lsr	r3, r3, #16
    6c78:	uxtb	r1, r3
    6c7c:	ldr	r3, [pc, #268]	; 6d90 <rb_do_des+0x738>
    6c80:	add	r3, pc, r3
    6c84:	add	r1, r1, #1280	; 0x500
    6c88:	ldr	r3, [r3, r1, lsl #2]
    6c8c:	orr	r2, r2, r3
    6c90:	ldr	r3, [fp, #-12]
    6c94:	lsr	r3, r3, #8
    6c98:	uxtb	r1, r3
    6c9c:	ldr	r3, [pc, #240]	; 6d94 <rb_do_des+0x73c>
    6ca0:	add	r3, pc, r3
    6ca4:	add	r1, r1, #1536	; 0x600
    6ca8:	ldr	r3, [r3, r1, lsl #2]
    6cac:	orr	r2, r2, r3
    6cb0:	ldr	r3, [fp, #-12]
    6cb4:	uxtb	r1, r3
    6cb8:	ldr	r3, [pc, #216]	; 6d98 <rb_do_des+0x740>
    6cbc:	add	r3, pc, r3
    6cc0:	add	r1, r1, #1792	; 0x700
    6cc4:	ldr	r3, [r3, r1, lsl #2]
    6cc8:	orr	r2, r2, r3
    6ccc:	ldr	r3, [fp, #-60]	; 0xffffffc4
    6cd0:	str	r2, [r3]
    6cd4:	mov	r3, #0
    6cd8:	mov	r0, r3
    6cdc:	add	sp, fp, #0
    6ce0:	pop	{fp}		; (ldr fp, [sp], #4)
    6ce4:	bx	lr
    6ce8:	.word	0x0003058c
    6cec:	.word	0x000305c0
    6cf0:	.word	0x000305e4
    6cf4:	.word	0x00030618
    6cf8:	.word	0x00030644
    6cfc:	.word	0x0003062c
    6d00:	.word	0x0003060c
    6d04:	.word	0x000305f0
    6d08:	.word	0x000305d4
    6d0c:	.word	0x000305b4
    6d10:	.word	0x00030594
    6d14:	.word	0x00030578
    6d18:	.word	0x00032558
    6d1c:	.word	0x00032540
    6d20:	.word	0x00032520
    6d24:	.word	0x00032504
    6d28:	.word	0x000324e8
    6d2c:	.word	0x000324c8
    6d30:	.word	0x000324a8
    6d34:	.word	0x0003248c
    6d38:	.word	0x0003c3ac
    6d3c:	.word	0x0003c3d8
    6d40:	.word	0x000403c8
    6d44:	.word	0x0003c3b4
    6d48:	.word	0x0004039c
    6d4c:	.word	0x0003c380
    6d50:	.word	0x00040368
    6d54:	.word	0x0003c34c
    6d58:	.word	0x00040334
    6d5c:	.word	0x0003422c
    6d60:	.word	0x00034214
    6d64:	.word	0x000341f4
    6d68:	.word	0x000341d8
    6d6c:	.word	0x000341bc
    6d70:	.word	0x0003419c
    6d74:	.word	0x0003417c
    6d78:	.word	0x00034160
    6d7c:	.word	0x0003613c
    6d80:	.word	0x00036124
    6d84:	.word	0x00036104
    6d88:	.word	0x000360e8
    6d8c:	.word	0x000360cc
    6d90:	.word	0x000360ac
    6d94:	.word	0x0003608c
    6d98:	.word	0x00036070

00006d9c <rb_des_crypt>:
    6d9c:	str	r4, [sp, #-12]!
    6da0:	str	fp, [sp, #4]
    6da4:	str	lr, [sp, #8]
    6da8:	add	fp, sp, #8
    6dac:	sub	sp, sp, #60	; 0x3c
    6db0:	str	r0, [fp, #-56]	; 0xffffffc8
    6db4:	str	r1, [fp, #-60]	; 0xffffffc4
    6db8:	bl	53f0 <rb_des_init>
    6dbc:	sub	r3, fp, #48	; 0x30
    6dc0:	str	r3, [fp, #-16]
    6dc4:	b	6e08 <rb_des_crypt+0x6c>
    6dc8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6dcc:	ldrb	r2, [r3]
    6dd0:	ldr	r3, [fp, #-16]
    6dd4:	add	r1, r3, #1
    6dd8:	str	r1, [fp, #-16]
    6ddc:	lsl	r2, r2, #1
    6de0:	uxtb	r2, r2
    6de4:	strb	r2, [r3]
    6de8:	ldr	r3, [fp, #-16]
    6dec:	sub	r3, r3, #1
    6df0:	ldrb	r3, [r3]
    6df4:	cmp	r3, #0
    6df8:	beq	6e08 <rb_des_crypt+0x6c>
    6dfc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6e00:	add	r3, r3, #1
    6e04:	str	r3, [fp, #-56]	; 0xffffffc8
    6e08:	sub	r3, fp, #48	; 0x30
    6e0c:	ldr	r2, [fp, #-16]
    6e10:	sub	r3, r2, r3
    6e14:	cmp	r3, #8
    6e18:	bne	6dc8 <rb_des_crypt+0x2c>
    6e1c:	sub	r3, fp, #48	; 0x30
    6e20:	mov	r0, r3
    6e24:	bl	601c <rb_des_setkey>
    6e28:	mov	r3, r0
    6e2c:	cmp	r3, #0
    6e30:	beq	6e3c <rb_des_crypt+0xa0>
    6e34:	mov	r3, #0
    6e38:	b	710c <rb_des_crypt+0x370>
    6e3c:	mov	r3, #25
    6e40:	str	r3, [fp, #-20]	; 0xffffffec
    6e44:	ldr	r3, [fp, #-60]	; 0xffffffc4
    6e48:	add	r3, r3, #1
    6e4c:	ldrb	r3, [r3]
    6e50:	mov	r0, r3
    6e54:	bl	5344 <rb_ascii_to_bin>
    6e58:	mov	r3, r0
    6e5c:	lsl	r4, r3, #6
    6e60:	ldr	r3, [fp, #-60]	; 0xffffffc4
    6e64:	ldrb	r3, [r3]
    6e68:	mov	r0, r3
    6e6c:	bl	5344 <rb_ascii_to_bin>
    6e70:	mov	r3, r0
    6e74:	orr	r3, r4, r3
    6e78:	str	r3, [fp, #-24]	; 0xffffffe8
    6e7c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    6e80:	ldrb	r2, [r3]
    6e84:	ldr	r3, [pc, #664]	; 7124 <rb_des_crypt+0x388>
    6e88:	add	r3, pc, r3
    6e8c:	strb	r2, [r3]
    6e90:	ldr	r3, [fp, #-60]	; 0xffffffc4
    6e94:	add	r3, r3, #1
    6e98:	ldrb	r3, [r3]
    6e9c:	cmp	r3, #0
    6ea0:	beq	6eb4 <rb_des_crypt+0x118>
    6ea4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    6ea8:	add	r3, r3, #1
    6eac:	ldrb	r3, [r3]
    6eb0:	b	6ec0 <rb_des_crypt+0x124>
    6eb4:	ldr	r3, [pc, #620]	; 7128 <rb_des_crypt+0x38c>
    6eb8:	add	r3, pc, r3
    6ebc:	ldrb	r3, [r3]
    6ec0:	ldr	r2, [pc, #612]	; 712c <rb_des_crypt+0x390>
    6ec4:	add	r2, pc, r2
    6ec8:	strb	r3, [r2, #1]
    6ecc:	ldr	r3, [pc, #604]	; 7130 <rb_des_crypt+0x394>
    6ed0:	add	r3, pc, r3
    6ed4:	add	r3, r3, #2
    6ed8:	str	r3, [fp, #-28]	; 0xffffffe4
    6edc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    6ee0:	mov	r0, r3
    6ee4:	bl	5f28 <rb_setup_salt>
    6ee8:	ldr	r3, [fp, #-20]	; 0xffffffec
    6eec:	sub	r1, fp, #40	; 0x28
    6ef0:	sub	r2, fp, #36	; 0x24
    6ef4:	str	r3, [sp]
    6ef8:	mov	r3, r1
    6efc:	mov	r1, #0
    6f00:	mov	r0, #0
    6f04:	bl	6658 <rb_do_des>
    6f08:	mov	r3, r0
    6f0c:	cmp	r3, #0
    6f10:	beq	6f1c <rb_des_crypt+0x180>
    6f14:	mov	r3, #0
    6f18:	b	710c <rb_des_crypt+0x370>
    6f1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6f20:	lsr	r3, r3, #8
    6f24:	str	r3, [fp, #-32]	; 0xffffffe0
    6f28:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6f2c:	lsr	r3, r3, #18
    6f30:	and	r2, r3, #63	; 0x3f
    6f34:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6f38:	add	r1, r3, #1
    6f3c:	str	r1, [fp, #-28]	; 0xffffffe4
    6f40:	ldr	r1, [pc, #492]	; 7134 <rb_des_crypt+0x398>
    6f44:	add	r1, pc, r1
    6f48:	ldrb	r2, [r1, r2]
    6f4c:	strb	r2, [r3]
    6f50:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6f54:	lsr	r3, r3, #12
    6f58:	and	r2, r3, #63	; 0x3f
    6f5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6f60:	add	r1, r3, #1
    6f64:	str	r1, [fp, #-28]	; 0xffffffe4
    6f68:	ldr	r1, [pc, #456]	; 7138 <rb_des_crypt+0x39c>
    6f6c:	add	r1, pc, r1
    6f70:	ldrb	r2, [r1, r2]
    6f74:	strb	r2, [r3]
    6f78:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6f7c:	lsr	r3, r3, #6
    6f80:	and	r2, r3, #63	; 0x3f
    6f84:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6f88:	add	r1, r3, #1
    6f8c:	str	r1, [fp, #-28]	; 0xffffffe4
    6f90:	ldr	r1, [pc, #420]	; 713c <rb_des_crypt+0x3a0>
    6f94:	add	r1, pc, r1
    6f98:	ldrb	r2, [r1, r2]
    6f9c:	strb	r2, [r3]
    6fa0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6fa4:	and	r2, r3, #63	; 0x3f
    6fa8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6fac:	add	r1, r3, #1
    6fb0:	str	r1, [fp, #-28]	; 0xffffffe4
    6fb4:	ldr	r1, [pc, #388]	; 7140 <rb_des_crypt+0x3a4>
    6fb8:	add	r1, pc, r1
    6fbc:	ldrb	r2, [r1, r2]
    6fc0:	strb	r2, [r3]
    6fc4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6fc8:	lsl	r2, r3, #16
    6fcc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    6fd0:	lsr	r3, r3, #16
    6fd4:	orr	r3, r2, r3
    6fd8:	str	r3, [fp, #-32]	; 0xffffffe0
    6fdc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6fe0:	lsr	r3, r3, #18
    6fe4:	and	r2, r3, #63	; 0x3f
    6fe8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6fec:	add	r1, r3, #1
    6ff0:	str	r1, [fp, #-28]	; 0xffffffe4
    6ff4:	ldr	r1, [pc, #328]	; 7144 <rb_des_crypt+0x3a8>
    6ff8:	add	r1, pc, r1
    6ffc:	ldrb	r2, [r1, r2]
    7000:	strb	r2, [r3]
    7004:	ldr	r3, [fp, #-32]	; 0xffffffe0
    7008:	lsr	r3, r3, #12
    700c:	and	r2, r3, #63	; 0x3f
    7010:	ldr	r3, [fp, #-28]	; 0xffffffe4
    7014:	add	r1, r3, #1
    7018:	str	r1, [fp, #-28]	; 0xffffffe4
    701c:	ldr	r1, [pc, #292]	; 7148 <rb_des_crypt+0x3ac>
    7020:	add	r1, pc, r1
    7024:	ldrb	r2, [r1, r2]
    7028:	strb	r2, [r3]
    702c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    7030:	lsr	r3, r3, #6
    7034:	and	r2, r3, #63	; 0x3f
    7038:	ldr	r3, [fp, #-28]	; 0xffffffe4
    703c:	add	r1, r3, #1
    7040:	str	r1, [fp, #-28]	; 0xffffffe4
    7044:	ldr	r1, [pc, #256]	; 714c <rb_des_crypt+0x3b0>
    7048:	add	r1, pc, r1
    704c:	ldrb	r2, [r1, r2]
    7050:	strb	r2, [r3]
    7054:	ldr	r3, [fp, #-32]	; 0xffffffe0
    7058:	and	r2, r3, #63	; 0x3f
    705c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    7060:	add	r1, r3, #1
    7064:	str	r1, [fp, #-28]	; 0xffffffe4
    7068:	ldr	r1, [pc, #224]	; 7150 <rb_des_crypt+0x3b4>
    706c:	add	r1, pc, r1
    7070:	ldrb	r2, [r1, r2]
    7074:	strb	r2, [r3]
    7078:	ldr	r3, [fp, #-40]	; 0xffffffd8
    707c:	lsl	r3, r3, #2
    7080:	str	r3, [fp, #-32]	; 0xffffffe0
    7084:	ldr	r3, [fp, #-32]	; 0xffffffe0
    7088:	lsr	r3, r3, #12
    708c:	and	r2, r3, #63	; 0x3f
    7090:	ldr	r3, [fp, #-28]	; 0xffffffe4
    7094:	add	r1, r3, #1
    7098:	str	r1, [fp, #-28]	; 0xffffffe4
    709c:	ldr	r1, [pc, #176]	; 7154 <rb_des_crypt+0x3b8>
    70a0:	add	r1, pc, r1
    70a4:	ldrb	r2, [r1, r2]
    70a8:	strb	r2, [r3]
    70ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
    70b0:	lsr	r3, r3, #6
    70b4:	and	r2, r3, #63	; 0x3f
    70b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    70bc:	add	r1, r3, #1
    70c0:	str	r1, [fp, #-28]	; 0xffffffe4
    70c4:	ldr	r1, [pc, #140]	; 7158 <rb_des_crypt+0x3bc>
    70c8:	add	r1, pc, r1
    70cc:	ldrb	r2, [r1, r2]
    70d0:	strb	r2, [r3]
    70d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    70d8:	and	r2, r3, #63	; 0x3f
    70dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    70e0:	add	r1, r3, #1
    70e4:	str	r1, [fp, #-28]	; 0xffffffe4
    70e8:	ldr	r1, [pc, #108]	; 715c <rb_des_crypt+0x3c0>
    70ec:	add	r1, pc, r1
    70f0:	ldrb	r2, [r1, r2]
    70f4:	strb	r2, [r3]
    70f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    70fc:	mov	r2, #0
    7100:	strb	r2, [r3]
    7104:	ldr	r3, [pc, #84]	; 7160 <rb_des_crypt+0x3c4>
    7108:	add	r3, pc, r3
    710c:	mov	r0, r3
    7110:	sub	sp, fp, #8
    7114:	ldr	r4, [sp]
    7118:	ldr	fp, [sp, #4]
    711c:	add	sp, sp, #8
    7120:	pop	{pc}		; (ldr pc, [sp], #4)
    7124:	.word	0x00040f44
    7128:	.word	0x00040f14
    712c:	.word	0x00040f08
    7130:	.word	0x00040efc
    7134:	.word	0x0001bdd4
    7138:	.word	0x0001bdac
    713c:	.word	0x0001bd84
    7140:	.word	0x0001bd60
    7144:	.word	0x0001bd20
    7148:	.word	0x0001bcf8
    714c:	.word	0x0001bcd0
    7150:	.word	0x0001bcac
    7154:	.word	0x0001bc78
    7158:	.word	0x0001bc50
    715c:	.word	0x0001bc2c
    7160:	.word	0x00040cc4

00007164 <_crypt_to64>:
    7164:	push	{fp}		; (str fp, [sp, #-4]!)
    7168:	add	fp, sp, #0
    716c:	sub	sp, sp, #20
    7170:	str	r0, [fp, #-8]
    7174:	str	r1, [fp, #-12]
    7178:	str	r2, [fp, #-16]
    717c:	b	71b0 <_crypt_to64+0x4c>
    7180:	ldr	r3, [fp, #-12]
    7184:	and	r2, r3, #63	; 0x3f
    7188:	ldr	r3, [fp, #-8]
    718c:	add	r1, r3, #1
    7190:	str	r1, [fp, #-8]
    7194:	ldr	r1, [pc, #60]	; 71d8 <_crypt_to64+0x74>
    7198:	add	r1, pc, r1
    719c:	ldrb	r2, [r1, r2]
    71a0:	strb	r2, [r3]
    71a4:	ldr	r3, [fp, #-12]
    71a8:	lsr	r3, r3, #6
    71ac:	str	r3, [fp, #-12]
    71b0:	ldr	r3, [fp, #-16]
    71b4:	sub	r3, r3, #1
    71b8:	str	r3, [fp, #-16]
    71bc:	ldr	r3, [fp, #-16]
    71c0:	cmp	r3, #0
    71c4:	bge	7180 <_crypt_to64+0x1c>
    71c8:	nop	{0}
    71cc:	add	sp, fp, #0
    71d0:	pop	{fp}		; (ldr fp, [sp], #4)
    71d4:	bx	lr
    71d8:	.word	0x0001bb80

000071dc <MD5Init>:
    71dc:	push	{fp}		; (str fp, [sp, #-4]!)
    71e0:	add	fp, sp, #0
    71e4:	sub	sp, sp, #12
    71e8:	str	r0, [fp, #-8]
    71ec:	ldr	r3, [fp, #-8]
    71f0:	mov	r2, #0
    71f4:	str	r2, [r3, #20]
    71f8:	ldr	r3, [fp, #-8]
    71fc:	ldr	r2, [r3, #20]
    7200:	ldr	r3, [fp, #-8]
    7204:	str	r2, [r3, #16]
    7208:	ldr	r2, [fp, #-8]
    720c:	movw	r3, #8961	; 0x2301
    7210:	movt	r3, #26437	; 0x6745
    7214:	str	r3, [r2]
    7218:	ldr	r2, [fp, #-8]
    721c:	movw	r3, #43913	; 0xab89
    7220:	movt	r3, #61389	; 0xefcd
    7224:	str	r3, [r2, #4]
    7228:	ldr	r2, [fp, #-8]
    722c:	movw	r3, #56574	; 0xdcfe
    7230:	movt	r3, #39098	; 0x98ba
    7234:	str	r3, [r2, #8]
    7238:	ldr	r2, [fp, #-8]
    723c:	movw	r3, #21622	; 0x5476
    7240:	movt	r3, #4146	; 0x1032
    7244:	str	r3, [r2, #12]
    7248:	nop	{0}
    724c:	add	sp, fp, #0
    7250:	pop	{fp}		; (ldr fp, [sp], #4)
    7254:	bx	lr

00007258 <MD5Update>:
    7258:	str	fp, [sp, #-8]!
    725c:	str	lr, [sp, #4]
    7260:	add	fp, sp, #4
    7264:	sub	sp, sp, #32
    7268:	str	r0, [fp, #-24]	; 0xffffffe8
    726c:	str	r1, [fp, #-28]	; 0xffffffe4
    7270:	str	r2, [fp, #-32]	; 0xffffffe0
    7274:	ldr	r3, [fp, #-28]	; 0xffffffe4
    7278:	str	r3, [fp, #-16]
    727c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    7280:	ldr	r3, [r3, #16]
    7284:	lsr	r3, r3, #3
    7288:	and	r3, r3, #63	; 0x3f
    728c:	str	r3, [fp, #-12]
    7290:	ldr	r3, [fp, #-24]	; 0xffffffe8
    7294:	ldr	r2, [r3, #16]
    7298:	ldr	r3, [fp, #-32]	; 0xffffffe0
    729c:	lsl	r3, r3, #3
    72a0:	add	r2, r2, r3
    72a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    72a8:	str	r2, [r3, #16]
    72ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
    72b0:	ldr	r2, [r3, #16]
    72b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    72b8:	lsl	r3, r3, #3
    72bc:	cmp	r2, r3
    72c0:	bcs	72d8 <MD5Update+0x80>
    72c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    72c8:	ldr	r3, [r3, #20]
    72cc:	add	r2, r3, #1
    72d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    72d4:	str	r2, [r3, #20]
    72d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    72dc:	ldr	r2, [r3, #20]
    72e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    72e4:	lsr	r3, r3, #29
    72e8:	add	r2, r2, r3
    72ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
    72f0:	str	r2, [r3, #20]
    72f4:	ldr	r3, [fp, #-12]
    72f8:	rsb	r3, r3, #64	; 0x40
    72fc:	str	r3, [fp, #-20]	; 0xffffffec
    7300:	ldr	r2, [fp, #-32]	; 0xffffffe0
    7304:	ldr	r3, [fp, #-20]	; 0xffffffec
    7308:	cmp	r2, r3
    730c:	bcc	7398 <MD5Update+0x140>
    7310:	ldr	r3, [fp, #-12]
    7314:	add	r3, r3, #24
    7318:	ldr	r2, [fp, #-24]	; 0xffffffe8
    731c:	add	r3, r2, r3
    7320:	ldr	r2, [fp, #-20]	; 0xffffffec
    7324:	ldr	r1, [fp, #-16]
    7328:	mov	r0, r3
    732c:	bl	4834 <memcpy@plt>
    7330:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7334:	ldr	r3, [fp, #-24]	; 0xffffffe8
    7338:	add	r3, r3, #24
    733c:	mov	r1, r3
    7340:	mov	r0, r2
    7344:	bl	74e4 <MD5Transform>
    7348:	ldr	r3, [fp, #-20]	; 0xffffffec
    734c:	str	r3, [fp, #-8]
    7350:	b	7378 <MD5Update+0x120>
    7354:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7358:	ldr	r2, [fp, #-16]
    735c:	ldr	r3, [fp, #-8]
    7360:	add	r3, r2, r3
    7364:	mov	r1, r3
    7368:	bl	74e4 <MD5Transform>
    736c:	ldr	r3, [fp, #-8]
    7370:	add	r3, r3, #64	; 0x40
    7374:	str	r3, [fp, #-8]
    7378:	ldr	r3, [fp, #-8]
    737c:	add	r3, r3, #63	; 0x3f
    7380:	ldr	r2, [fp, #-32]	; 0xffffffe0
    7384:	cmp	r2, r3
    7388:	bhi	7354 <MD5Update+0xfc>
    738c:	mov	r3, #0
    7390:	str	r3, [fp, #-12]
    7394:	b	73a0 <MD5Update+0x148>
    7398:	mov	r3, #0
    739c:	str	r3, [fp, #-8]
    73a0:	ldr	r3, [fp, #-12]
    73a4:	add	r3, r3, #24
    73a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    73ac:	add	r0, r2, r3
    73b0:	ldr	r2, [fp, #-16]
    73b4:	ldr	r3, [fp, #-8]
    73b8:	add	r1, r2, r3
    73bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    73c0:	ldr	r3, [fp, #-8]
    73c4:	sub	r3, r2, r3
    73c8:	mov	r2, r3
    73cc:	bl	4834 <memcpy@plt>
    73d0:	nop	{0}
    73d4:	sub	sp, fp, #4
    73d8:	ldr	fp, [sp]
    73dc:	add	sp, sp, #4
    73e0:	pop	{pc}		; (ldr pc, [sp], #4)

000073e4 <MD5Pad>:
    73e4:	str	fp, [sp, #-8]!
    73e8:	str	lr, [sp, #4]
    73ec:	add	fp, sp, #4
    73f0:	sub	sp, sp, #24
    73f4:	str	r0, [fp, #-24]	; 0xffffffe8
    73f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    73fc:	add	r1, r3, #16
    7400:	sub	r3, fp, #20
    7404:	mov	r2, #8
    7408:	mov	r0, r3
    740c:	bl	4834 <memcpy@plt>
    7410:	ldr	r3, [fp, #-24]	; 0xffffffe8
    7414:	ldr	r3, [r3, #16]
    7418:	lsr	r3, r3, #3
    741c:	and	r3, r3, #63	; 0x3f
    7420:	str	r3, [fp, #-8]
    7424:	ldr	r3, [fp, #-8]
    7428:	cmp	r3, #55	; 0x37
    742c:	bhi	743c <MD5Pad+0x58>
    7430:	ldr	r3, [fp, #-8]
    7434:	rsb	r3, r3, #56	; 0x38
    7438:	b	7444 <MD5Pad+0x60>
    743c:	ldr	r3, [fp, #-8]
    7440:	rsb	r3, r3, #120	; 0x78
    7444:	str	r3, [fp, #-12]
    7448:	ldr	r2, [fp, #-12]
    744c:	ldr	r3, [pc, #52]	; 7488 <MD5Pad+0xa4>
    7450:	add	r3, pc, r3
    7454:	mov	r1, r3
    7458:	ldr	r0, [fp, #-24]	; 0xffffffe8
    745c:	bl	7258 <MD5Update>
    7460:	sub	r3, fp, #20
    7464:	mov	r2, #8
    7468:	mov	r1, r3
    746c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7470:	bl	7258 <MD5Update>
    7474:	nop	{0}
    7478:	sub	sp, fp, #4
    747c:	ldr	fp, [sp]
    7480:	add	sp, sp, #4
    7484:	pop	{pc}		; (ldr pc, [sp], #4)
    7488:	.word	0x0002dfd4

0000748c <MD5Final>:
    748c:	str	fp, [sp, #-8]!
    7490:	str	lr, [sp, #4]
    7494:	add	fp, sp, #4
    7498:	sub	sp, sp, #8
    749c:	str	r0, [fp, #-8]
    74a0:	str	r1, [fp, #-12]
    74a4:	ldr	r0, [fp, #-12]
    74a8:	bl	73e4 <MD5Pad>
    74ac:	ldr	r3, [fp, #-12]
    74b0:	mov	r2, #16
    74b4:	mov	r1, r3
    74b8:	ldr	r0, [fp, #-8]
    74bc:	bl	4834 <memcpy@plt>
    74c0:	mov	r2, #88	; 0x58
    74c4:	mov	r1, #0
    74c8:	ldr	r0, [fp, #-12]
    74cc:	bl	4648 <memset@plt>
    74d0:	nop	{0}
    74d4:	sub	sp, fp, #4
    74d8:	ldr	fp, [sp]
    74dc:	add	sp, sp, #4
    74e0:	pop	{pc}		; (ldr pc, [sp], #4)

000074e4 <MD5Transform>:
    74e4:	str	fp, [sp, #-8]!
    74e8:	str	lr, [sp, #4]
    74ec:	add	fp, sp, #4
    74f0:	sub	sp, sp, #88	; 0x58
    74f4:	str	r0, [fp, #-88]	; 0xffffffa8
    74f8:	str	r1, [fp, #-92]	; 0xffffffa4
    74fc:	ldr	r3, [fp, #-88]	; 0xffffffa8
    7500:	ldr	r3, [r3]
    7504:	str	r3, [fp, #-8]
    7508:	ldr	r3, [fp, #-88]	; 0xffffffa8
    750c:	ldr	r3, [r3, #4]
    7510:	str	r3, [fp, #-12]
    7514:	ldr	r3, [fp, #-88]	; 0xffffffa8
    7518:	ldr	r3, [r3, #8]
    751c:	str	r3, [fp, #-16]
    7520:	ldr	r3, [fp, #-88]	; 0xffffffa8
    7524:	ldr	r3, [r3, #12]
    7528:	str	r3, [fp, #-20]	; 0xffffffec
    752c:	sub	r3, fp, #84	; 0x54
    7530:	mov	r2, #64	; 0x40
    7534:	ldr	r1, [fp, #-92]	; 0xffffffa4
    7538:	mov	r0, r3
    753c:	bl	4834 <memcpy@plt>
    7540:	ldr	r2, [fp, #-12]
    7544:	ldr	r3, [fp, #-16]
    7548:	and	r2, r2, r3
    754c:	ldr	r3, [fp, #-12]
    7550:	mvn	r1, r3
    7554:	ldr	r3, [fp, #-20]	; 0xffffffec
    7558:	and	r3, r3, r1
    755c:	orr	r2, r2, r3
    7560:	ldr	r3, [fp, #-84]	; 0xffffffac
    7564:	add	r2, r2, r3
    7568:	ldr	r3, [fp, #-8]
    756c:	add	r2, r2, r3
    7570:	movw	r3, #42104	; 0xa478
    7574:	movt	r3, #55146	; 0xd76a
    7578:	add	r3, r2, r3
    757c:	str	r3, [fp, #-8]
    7580:	ldr	r3, [fp, #-8]
    7584:	ror	r3, r3, #25
    7588:	str	r3, [fp, #-8]
    758c:	ldr	r2, [fp, #-8]
    7590:	ldr	r3, [fp, #-12]
    7594:	add	r3, r2, r3
    7598:	str	r3, [fp, #-8]
    759c:	ldr	r2, [fp, #-8]
    75a0:	ldr	r3, [fp, #-12]
    75a4:	and	r2, r2, r3
    75a8:	ldr	r3, [fp, #-8]
    75ac:	mvn	r1, r3
    75b0:	ldr	r3, [fp, #-16]
    75b4:	and	r3, r3, r1
    75b8:	orr	r2, r2, r3
    75bc:	ldr	r3, [fp, #-80]	; 0xffffffb0
    75c0:	add	r2, r2, r3
    75c4:	ldr	r3, [fp, #-20]	; 0xffffffec
    75c8:	add	r2, r2, r3
    75cc:	movw	r3, #46934	; 0xb756
    75d0:	movt	r3, #59591	; 0xe8c7
    75d4:	add	r3, r2, r3
    75d8:	str	r3, [fp, #-20]	; 0xffffffec
    75dc:	ldr	r3, [fp, #-20]	; 0xffffffec
    75e0:	ror	r3, r3, #20
    75e4:	str	r3, [fp, #-20]	; 0xffffffec
    75e8:	ldr	r2, [fp, #-20]	; 0xffffffec
    75ec:	ldr	r3, [fp, #-8]
    75f0:	add	r3, r2, r3
    75f4:	str	r3, [fp, #-20]	; 0xffffffec
    75f8:	ldr	r2, [fp, #-20]	; 0xffffffec
    75fc:	ldr	r3, [fp, #-8]
    7600:	and	r2, r2, r3
    7604:	ldr	r3, [fp, #-20]	; 0xffffffec
    7608:	mvn	r1, r3
    760c:	ldr	r3, [fp, #-12]
    7610:	and	r3, r3, r1
    7614:	orr	r2, r2, r3
    7618:	ldr	r3, [fp, #-76]	; 0xffffffb4
    761c:	add	r2, r2, r3
    7620:	ldr	r3, [fp, #-16]
    7624:	add	r2, r2, r3
    7628:	movw	r3, #28891	; 0x70db
    762c:	movt	r3, #9248	; 0x2420
    7630:	add	r3, r2, r3
    7634:	str	r3, [fp, #-16]
    7638:	ldr	r3, [fp, #-16]
    763c:	ror	r3, r3, #15
    7640:	str	r3, [fp, #-16]
    7644:	ldr	r2, [fp, #-16]
    7648:	ldr	r3, [fp, #-20]	; 0xffffffec
    764c:	add	r3, r2, r3
    7650:	str	r3, [fp, #-16]
    7654:	ldr	r2, [fp, #-16]
    7658:	ldr	r3, [fp, #-20]	; 0xffffffec
    765c:	and	r2, r2, r3
    7660:	ldr	r3, [fp, #-16]
    7664:	mvn	r1, r3
    7668:	ldr	r3, [fp, #-8]
    766c:	and	r3, r3, r1
    7670:	orr	r2, r2, r3
    7674:	ldr	r3, [fp, #-72]	; 0xffffffb8
    7678:	add	r2, r2, r3
    767c:	ldr	r3, [fp, #-12]
    7680:	add	r2, r2, r3
    7684:	movw	r3, #52974	; 0xceee
    7688:	movt	r3, #49597	; 0xc1bd
    768c:	add	r3, r2, r3
    7690:	str	r3, [fp, #-12]
    7694:	ldr	r3, [fp, #-12]
    7698:	ror	r3, r3, #10
    769c:	str	r3, [fp, #-12]
    76a0:	ldr	r2, [fp, #-12]
    76a4:	ldr	r3, [fp, #-16]
    76a8:	add	r3, r2, r3
    76ac:	str	r3, [fp, #-12]
    76b0:	ldr	r2, [fp, #-12]
    76b4:	ldr	r3, [fp, #-16]
    76b8:	and	r2, r2, r3
    76bc:	ldr	r3, [fp, #-12]
    76c0:	mvn	r1, r3
    76c4:	ldr	r3, [fp, #-20]	; 0xffffffec
    76c8:	and	r3, r3, r1
    76cc:	orr	r2, r2, r3
    76d0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    76d4:	add	r2, r2, r3
    76d8:	ldr	r3, [fp, #-8]
    76dc:	add	r2, r2, r3
    76e0:	movw	r3, #4015	; 0xfaf
    76e4:	movt	r3, #62844	; 0xf57c
    76e8:	add	r3, r2, r3
    76ec:	str	r3, [fp, #-8]
    76f0:	ldr	r3, [fp, #-8]
    76f4:	ror	r3, r3, #25
    76f8:	str	r3, [fp, #-8]
    76fc:	ldr	r2, [fp, #-8]
    7700:	ldr	r3, [fp, #-12]
    7704:	add	r3, r2, r3
    7708:	str	r3, [fp, #-8]
    770c:	ldr	r2, [fp, #-8]
    7710:	ldr	r3, [fp, #-12]
    7714:	and	r2, r2, r3
    7718:	ldr	r3, [fp, #-8]
    771c:	mvn	r1, r3
    7720:	ldr	r3, [fp, #-16]
    7724:	and	r3, r3, r1
    7728:	orr	r2, r2, r3
    772c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    7730:	add	r2, r2, r3
    7734:	ldr	r3, [fp, #-20]	; 0xffffffec
    7738:	add	r2, r2, r3
    773c:	movw	r3, #50730	; 0xc62a
    7740:	movt	r3, #18311	; 0x4787
    7744:	add	r3, r2, r3
    7748:	str	r3, [fp, #-20]	; 0xffffffec
    774c:	ldr	r3, [fp, #-20]	; 0xffffffec
    7750:	ror	r3, r3, #20
    7754:	str	r3, [fp, #-20]	; 0xffffffec
    7758:	ldr	r2, [fp, #-20]	; 0xffffffec
    775c:	ldr	r3, [fp, #-8]
    7760:	add	r3, r2, r3
    7764:	str	r3, [fp, #-20]	; 0xffffffec
    7768:	ldr	r2, [fp, #-20]	; 0xffffffec
    776c:	ldr	r3, [fp, #-8]
    7770:	and	r2, r2, r3
    7774:	ldr	r3, [fp, #-20]	; 0xffffffec
    7778:	mvn	r1, r3
    777c:	ldr	r3, [fp, #-12]
    7780:	and	r3, r3, r1
    7784:	orr	r2, r2, r3
    7788:	ldr	r3, [fp, #-60]	; 0xffffffc4
    778c:	add	r2, r2, r3
    7790:	ldr	r3, [fp, #-16]
    7794:	add	r2, r2, r3
    7798:	movw	r3, #17939	; 0x4613
    779c:	movt	r3, #43056	; 0xa830
    77a0:	add	r3, r2, r3
    77a4:	str	r3, [fp, #-16]
    77a8:	ldr	r3, [fp, #-16]
    77ac:	ror	r3, r3, #15
    77b0:	str	r3, [fp, #-16]
    77b4:	ldr	r2, [fp, #-16]
    77b8:	ldr	r3, [fp, #-20]	; 0xffffffec
    77bc:	add	r3, r2, r3
    77c0:	str	r3, [fp, #-16]
    77c4:	ldr	r2, [fp, #-16]
    77c8:	ldr	r3, [fp, #-20]	; 0xffffffec
    77cc:	and	r2, r2, r3
    77d0:	ldr	r3, [fp, #-16]
    77d4:	mvn	r1, r3
    77d8:	ldr	r3, [fp, #-8]
    77dc:	and	r3, r3, r1
    77e0:	orr	r2, r2, r3
    77e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    77e8:	add	r2, r2, r3
    77ec:	ldr	r3, [fp, #-12]
    77f0:	add	r2, r2, r3
    77f4:	movw	r3, #38145	; 0x9501
    77f8:	movt	r3, #64838	; 0xfd46
    77fc:	add	r3, r2, r3
    7800:	str	r3, [fp, #-12]
    7804:	ldr	r3, [fp, #-12]
    7808:	ror	r3, r3, #10
    780c:	str	r3, [fp, #-12]
    7810:	ldr	r2, [fp, #-12]
    7814:	ldr	r3, [fp, #-16]
    7818:	add	r3, r2, r3
    781c:	str	r3, [fp, #-12]
    7820:	ldr	r2, [fp, #-12]
    7824:	ldr	r3, [fp, #-16]
    7828:	and	r2, r2, r3
    782c:	ldr	r3, [fp, #-12]
    7830:	mvn	r1, r3
    7834:	ldr	r3, [fp, #-20]	; 0xffffffec
    7838:	and	r3, r3, r1
    783c:	orr	r2, r2, r3
    7840:	ldr	r3, [fp, #-52]	; 0xffffffcc
    7844:	add	r2, r2, r3
    7848:	ldr	r3, [fp, #-8]
    784c:	add	r2, r2, r3
    7850:	movw	r3, #39128	; 0x98d8
    7854:	movt	r3, #27008	; 0x6980
    7858:	add	r3, r2, r3
    785c:	str	r3, [fp, #-8]
    7860:	ldr	r3, [fp, #-8]
    7864:	ror	r3, r3, #25
    7868:	str	r3, [fp, #-8]
    786c:	ldr	r2, [fp, #-8]
    7870:	ldr	r3, [fp, #-12]
    7874:	add	r3, r2, r3
    7878:	str	r3, [fp, #-8]
    787c:	ldr	r2, [fp, #-8]
    7880:	ldr	r3, [fp, #-12]
    7884:	and	r2, r2, r3
    7888:	ldr	r3, [fp, #-8]
    788c:	mvn	r1, r3
    7890:	ldr	r3, [fp, #-16]
    7894:	and	r3, r3, r1
    7898:	orr	r2, r2, r3
    789c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    78a0:	add	r2, r2, r3
    78a4:	ldr	r3, [fp, #-20]	; 0xffffffec
    78a8:	add	r2, r2, r3
    78ac:	movw	r3, #63407	; 0xf7af
    78b0:	movt	r3, #35652	; 0x8b44
    78b4:	add	r3, r2, r3
    78b8:	str	r3, [fp, #-20]	; 0xffffffec
    78bc:	ldr	r3, [fp, #-20]	; 0xffffffec
    78c0:	ror	r3, r3, #20
    78c4:	str	r3, [fp, #-20]	; 0xffffffec
    78c8:	ldr	r2, [fp, #-20]	; 0xffffffec
    78cc:	ldr	r3, [fp, #-8]
    78d0:	add	r3, r2, r3
    78d4:	str	r3, [fp, #-20]	; 0xffffffec
    78d8:	ldr	r2, [fp, #-20]	; 0xffffffec
    78dc:	ldr	r3, [fp, #-8]
    78e0:	and	r2, r2, r3
    78e4:	ldr	r3, [fp, #-20]	; 0xffffffec
    78e8:	mvn	r1, r3
    78ec:	ldr	r3, [fp, #-12]
    78f0:	and	r3, r3, r1
    78f4:	orr	r2, r2, r3
    78f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    78fc:	add	r2, r2, r3
    7900:	ldr	r3, [fp, #-16]
    7904:	add	r3, r2, r3
    7908:	sub	r3, r3, #41984	; 0xa400
    790c:	sub	r3, r3, #79	; 0x4f
    7910:	str	r3, [fp, #-16]
    7914:	ldr	r3, [fp, #-16]
    7918:	ror	r3, r3, #15
    791c:	str	r3, [fp, #-16]
    7920:	ldr	r2, [fp, #-16]
    7924:	ldr	r3, [fp, #-20]	; 0xffffffec
    7928:	add	r3, r2, r3
    792c:	str	r3, [fp, #-16]
    7930:	ldr	r2, [fp, #-16]
    7934:	ldr	r3, [fp, #-20]	; 0xffffffec
    7938:	and	r2, r2, r3
    793c:	ldr	r3, [fp, #-16]
    7940:	mvn	r1, r3
    7944:	ldr	r3, [fp, #-8]
    7948:	and	r3, r3, r1
    794c:	orr	r2, r2, r3
    7950:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7954:	add	r2, r2, r3
    7958:	ldr	r3, [fp, #-12]
    795c:	add	r2, r2, r3
    7960:	movw	r3, #55230	; 0xd7be
    7964:	movt	r3, #35164	; 0x895c
    7968:	add	r3, r2, r3
    796c:	str	r3, [fp, #-12]
    7970:	ldr	r3, [fp, #-12]
    7974:	ror	r3, r3, #10
    7978:	str	r3, [fp, #-12]
    797c:	ldr	r2, [fp, #-12]
    7980:	ldr	r3, [fp, #-16]
    7984:	add	r3, r2, r3
    7988:	str	r3, [fp, #-12]
    798c:	ldr	r2, [fp, #-12]
    7990:	ldr	r3, [fp, #-16]
    7994:	and	r2, r2, r3
    7998:	ldr	r3, [fp, #-12]
    799c:	mvn	r1, r3
    79a0:	ldr	r3, [fp, #-20]	; 0xffffffec
    79a4:	and	r3, r3, r1
    79a8:	orr	r2, r2, r3
    79ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
    79b0:	add	r2, r2, r3
    79b4:	ldr	r3, [fp, #-8]
    79b8:	add	r2, r2, r3
    79bc:	movw	r3, #4386	; 0x1122
    79c0:	movt	r3, #27536	; 0x6b90
    79c4:	add	r3, r2, r3
    79c8:	str	r3, [fp, #-8]
    79cc:	ldr	r3, [fp, #-8]
    79d0:	ror	r3, r3, #25
    79d4:	str	r3, [fp, #-8]
    79d8:	ldr	r2, [fp, #-8]
    79dc:	ldr	r3, [fp, #-12]
    79e0:	add	r3, r2, r3
    79e4:	str	r3, [fp, #-8]
    79e8:	ldr	r2, [fp, #-8]
    79ec:	ldr	r3, [fp, #-12]
    79f0:	and	r2, r2, r3
    79f4:	ldr	r3, [fp, #-8]
    79f8:	mvn	r1, r3
    79fc:	ldr	r3, [fp, #-16]
    7a00:	and	r3, r3, r1
    7a04:	orr	r2, r2, r3
    7a08:	ldr	r3, [fp, #-32]	; 0xffffffe0
    7a0c:	add	r2, r2, r3
    7a10:	ldr	r3, [fp, #-20]	; 0xffffffec
    7a14:	add	r2, r2, r3
    7a18:	movw	r3, #29075	; 0x7193
    7a1c:	movt	r3, #64920	; 0xfd98
    7a20:	add	r3, r2, r3
    7a24:	str	r3, [fp, #-20]	; 0xffffffec
    7a28:	ldr	r3, [fp, #-20]	; 0xffffffec
    7a2c:	ror	r3, r3, #20
    7a30:	str	r3, [fp, #-20]	; 0xffffffec
    7a34:	ldr	r2, [fp, #-20]	; 0xffffffec
    7a38:	ldr	r3, [fp, #-8]
    7a3c:	add	r3, r2, r3
    7a40:	str	r3, [fp, #-20]	; 0xffffffec
    7a44:	ldr	r2, [fp, #-20]	; 0xffffffec
    7a48:	ldr	r3, [fp, #-8]
    7a4c:	and	r2, r2, r3
    7a50:	ldr	r3, [fp, #-20]	; 0xffffffec
    7a54:	mvn	r1, r3
    7a58:	ldr	r3, [fp, #-12]
    7a5c:	and	r3, r3, r1
    7a60:	orr	r2, r2, r3
    7a64:	ldr	r3, [fp, #-28]	; 0xffffffe4
    7a68:	add	r2, r2, r3
    7a6c:	ldr	r3, [fp, #-16]
    7a70:	add	r2, r2, r3
    7a74:	movw	r3, #17294	; 0x438e
    7a78:	movt	r3, #42617	; 0xa679
    7a7c:	add	r3, r2, r3
    7a80:	str	r3, [fp, #-16]
    7a84:	ldr	r3, [fp, #-16]
    7a88:	ror	r3, r3, #15
    7a8c:	str	r3, [fp, #-16]
    7a90:	ldr	r2, [fp, #-16]
    7a94:	ldr	r3, [fp, #-20]	; 0xffffffec
    7a98:	add	r3, r2, r3
    7a9c:	str	r3, [fp, #-16]
    7aa0:	ldr	r2, [fp, #-16]
    7aa4:	ldr	r3, [fp, #-20]	; 0xffffffec
    7aa8:	and	r2, r2, r3
    7aac:	ldr	r3, [fp, #-16]
    7ab0:	mvn	r1, r3
    7ab4:	ldr	r3, [fp, #-8]
    7ab8:	and	r3, r3, r1
    7abc:	orr	r2, r2, r3
    7ac0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    7ac4:	add	r2, r2, r3
    7ac8:	ldr	r3, [fp, #-12]
    7acc:	add	r2, r2, r3
    7ad0:	movw	r3, #2081	; 0x821
    7ad4:	movt	r3, #18868	; 0x49b4
    7ad8:	add	r3, r2, r3
    7adc:	str	r3, [fp, #-12]
    7ae0:	ldr	r3, [fp, #-12]
    7ae4:	ror	r3, r3, #10
    7ae8:	str	r3, [fp, #-12]
    7aec:	ldr	r2, [fp, #-12]
    7af0:	ldr	r3, [fp, #-16]
    7af4:	add	r3, r2, r3
    7af8:	str	r3, [fp, #-12]
    7afc:	ldr	r2, [fp, #-12]
    7b00:	ldr	r3, [fp, #-20]	; 0xffffffec
    7b04:	and	r2, r2, r3
    7b08:	ldr	r3, [fp, #-20]	; 0xffffffec
    7b0c:	mvn	r1, r3
    7b10:	ldr	r3, [fp, #-16]
    7b14:	and	r3, r3, r1
    7b18:	orr	r2, r2, r3
    7b1c:	ldr	r3, [fp, #-80]	; 0xffffffb0
    7b20:	add	r2, r2, r3
    7b24:	ldr	r3, [fp, #-8]
    7b28:	add	r2, r2, r3
    7b2c:	movw	r3, #9570	; 0x2562
    7b30:	movt	r3, #63006	; 0xf61e
    7b34:	add	r3, r2, r3
    7b38:	str	r3, [fp, #-8]
    7b3c:	ldr	r3, [fp, #-8]
    7b40:	ror	r3, r3, #27
    7b44:	str	r3, [fp, #-8]
    7b48:	ldr	r2, [fp, #-8]
    7b4c:	ldr	r3, [fp, #-12]
    7b50:	add	r3, r2, r3
    7b54:	str	r3, [fp, #-8]
    7b58:	ldr	r2, [fp, #-8]
    7b5c:	ldr	r3, [fp, #-16]
    7b60:	and	r2, r2, r3
    7b64:	ldr	r3, [fp, #-16]
    7b68:	mvn	r1, r3
    7b6c:	ldr	r3, [fp, #-12]
    7b70:	and	r3, r3, r1
    7b74:	orr	r2, r2, r3
    7b78:	ldr	r3, [fp, #-60]	; 0xffffffc4
    7b7c:	add	r2, r2, r3
    7b80:	ldr	r3, [fp, #-20]	; 0xffffffec
    7b84:	add	r2, r2, r3
    7b88:	movw	r3, #45888	; 0xb340
    7b8c:	movt	r3, #49216	; 0xc040
    7b90:	add	r3, r2, r3
    7b94:	str	r3, [fp, #-20]	; 0xffffffec
    7b98:	ldr	r3, [fp, #-20]	; 0xffffffec
    7b9c:	ror	r3, r3, #23
    7ba0:	str	r3, [fp, #-20]	; 0xffffffec
    7ba4:	ldr	r2, [fp, #-20]	; 0xffffffec
    7ba8:	ldr	r3, [fp, #-8]
    7bac:	add	r3, r2, r3
    7bb0:	str	r3, [fp, #-20]	; 0xffffffec
    7bb4:	ldr	r2, [fp, #-20]	; 0xffffffec
    7bb8:	ldr	r3, [fp, #-12]
    7bbc:	and	r2, r2, r3
    7bc0:	ldr	r3, [fp, #-12]
    7bc4:	mvn	r1, r3
    7bc8:	ldr	r3, [fp, #-8]
    7bcc:	and	r3, r3, r1
    7bd0:	orr	r2, r2, r3
    7bd4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7bd8:	add	r2, r2, r3
    7bdc:	ldr	r3, [fp, #-16]
    7be0:	add	r2, r2, r3
    7be4:	movw	r3, #23121	; 0x5a51
    7be8:	movt	r3, #9822	; 0x265e
    7bec:	add	r3, r2, r3
    7bf0:	str	r3, [fp, #-16]
    7bf4:	ldr	r3, [fp, #-16]
    7bf8:	ror	r3, r3, #18
    7bfc:	str	r3, [fp, #-16]
    7c00:	ldr	r2, [fp, #-16]
    7c04:	ldr	r3, [fp, #-20]	; 0xffffffec
    7c08:	add	r3, r2, r3
    7c0c:	str	r3, [fp, #-16]
    7c10:	ldr	r2, [fp, #-16]
    7c14:	ldr	r3, [fp, #-8]
    7c18:	and	r2, r2, r3
    7c1c:	ldr	r3, [fp, #-8]
    7c20:	mvn	r1, r3
    7c24:	ldr	r3, [fp, #-20]	; 0xffffffec
    7c28:	and	r3, r3, r1
    7c2c:	orr	r2, r2, r3
    7c30:	ldr	r3, [fp, #-84]	; 0xffffffac
    7c34:	add	r2, r2, r3
    7c38:	ldr	r3, [fp, #-12]
    7c3c:	add	r2, r2, r3
    7c40:	movw	r3, #51114	; 0xc7aa
    7c44:	movt	r3, #59830	; 0xe9b6
    7c48:	add	r3, r2, r3
    7c4c:	str	r3, [fp, #-12]
    7c50:	ldr	r3, [fp, #-12]
    7c54:	ror	r3, r3, #12
    7c58:	str	r3, [fp, #-12]
    7c5c:	ldr	r2, [fp, #-12]
    7c60:	ldr	r3, [fp, #-16]
    7c64:	add	r3, r2, r3
    7c68:	str	r3, [fp, #-12]
    7c6c:	ldr	r2, [fp, #-12]
    7c70:	ldr	r3, [fp, #-20]	; 0xffffffec
    7c74:	and	r2, r2, r3
    7c78:	ldr	r3, [fp, #-20]	; 0xffffffec
    7c7c:	mvn	r1, r3
    7c80:	ldr	r3, [fp, #-16]
    7c84:	and	r3, r3, r1
    7c88:	orr	r2, r2, r3
    7c8c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    7c90:	add	r2, r2, r3
    7c94:	ldr	r3, [fp, #-8]
    7c98:	add	r2, r2, r3
    7c9c:	movw	r3, #4189	; 0x105d
    7ca0:	movt	r3, #54831	; 0xd62f
    7ca4:	add	r3, r2, r3
    7ca8:	str	r3, [fp, #-8]
    7cac:	ldr	r3, [fp, #-8]
    7cb0:	ror	r3, r3, #27
    7cb4:	str	r3, [fp, #-8]
    7cb8:	ldr	r2, [fp, #-8]
    7cbc:	ldr	r3, [fp, #-12]
    7cc0:	add	r3, r2, r3
    7cc4:	str	r3, [fp, #-8]
    7cc8:	ldr	r2, [fp, #-8]
    7ccc:	ldr	r3, [fp, #-16]
    7cd0:	and	r2, r2, r3
    7cd4:	ldr	r3, [fp, #-16]
    7cd8:	mvn	r1, r3
    7cdc:	ldr	r3, [fp, #-12]
    7ce0:	and	r3, r3, r1
    7ce4:	orr	r2, r2, r3
    7ce8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    7cec:	add	r2, r2, r3
    7cf0:	ldr	r3, [fp, #-20]	; 0xffffffec
    7cf4:	add	r2, r2, r3
    7cf8:	movw	r3, #5203	; 0x1453
    7cfc:	movt	r3, #580	; 0x244
    7d00:	add	r3, r2, r3
    7d04:	str	r3, [fp, #-20]	; 0xffffffec
    7d08:	ldr	r3, [fp, #-20]	; 0xffffffec
    7d0c:	ror	r3, r3, #23
    7d10:	str	r3, [fp, #-20]	; 0xffffffec
    7d14:	ldr	r2, [fp, #-20]	; 0xffffffec
    7d18:	ldr	r3, [fp, #-8]
    7d1c:	add	r3, r2, r3
    7d20:	str	r3, [fp, #-20]	; 0xffffffec
    7d24:	ldr	r2, [fp, #-20]	; 0xffffffec
    7d28:	ldr	r3, [fp, #-12]
    7d2c:	and	r2, r2, r3
    7d30:	ldr	r3, [fp, #-12]
    7d34:	mvn	r1, r3
    7d38:	ldr	r3, [fp, #-8]
    7d3c:	and	r3, r3, r1
    7d40:	orr	r2, r2, r3
    7d44:	ldr	r3, [fp, #-24]	; 0xffffffe8
    7d48:	add	r2, r2, r3
    7d4c:	ldr	r3, [fp, #-16]
    7d50:	add	r2, r2, r3
    7d54:	movw	r3, #59009	; 0xe681
    7d58:	movt	r3, #55457	; 0xd8a1
    7d5c:	add	r3, r2, r3
    7d60:	str	r3, [fp, #-16]
    7d64:	ldr	r3, [fp, #-16]
    7d68:	ror	r3, r3, #18
    7d6c:	str	r3, [fp, #-16]
    7d70:	ldr	r2, [fp, #-16]
    7d74:	ldr	r3, [fp, #-20]	; 0xffffffec
    7d78:	add	r3, r2, r3
    7d7c:	str	r3, [fp, #-16]
    7d80:	ldr	r2, [fp, #-16]
    7d84:	ldr	r3, [fp, #-8]
    7d88:	and	r2, r2, r3
    7d8c:	ldr	r3, [fp, #-8]
    7d90:	mvn	r1, r3
    7d94:	ldr	r3, [fp, #-20]	; 0xffffffec
    7d98:	and	r3, r3, r1
    7d9c:	orr	r2, r2, r3
    7da0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    7da4:	add	r2, r2, r3
    7da8:	ldr	r3, [fp, #-12]
    7dac:	add	r2, r2, r3
    7db0:	movw	r3, #64456	; 0xfbc8
    7db4:	movt	r3, #59347	; 0xe7d3
    7db8:	add	r3, r2, r3
    7dbc:	str	r3, [fp, #-12]
    7dc0:	ldr	r3, [fp, #-12]
    7dc4:	ror	r3, r3, #12
    7dc8:	str	r3, [fp, #-12]
    7dcc:	ldr	r2, [fp, #-12]
    7dd0:	ldr	r3, [fp, #-16]
    7dd4:	add	r3, r2, r3
    7dd8:	str	r3, [fp, #-12]
    7ddc:	ldr	r2, [fp, #-12]
    7de0:	ldr	r3, [fp, #-20]	; 0xffffffec
    7de4:	and	r2, r2, r3
    7de8:	ldr	r3, [fp, #-20]	; 0xffffffec
    7dec:	mvn	r1, r3
    7df0:	ldr	r3, [fp, #-16]
    7df4:	and	r3, r3, r1
    7df8:	orr	r2, r2, r3
    7dfc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    7e00:	add	r2, r2, r3
    7e04:	ldr	r3, [fp, #-8]
    7e08:	add	r2, r2, r3
    7e0c:	movw	r3, #52710	; 0xcde6
    7e10:	movt	r3, #8673	; 0x21e1
    7e14:	add	r3, r2, r3
    7e18:	str	r3, [fp, #-8]
    7e1c:	ldr	r3, [fp, #-8]
    7e20:	ror	r3, r3, #27
    7e24:	str	r3, [fp, #-8]
    7e28:	ldr	r2, [fp, #-8]
    7e2c:	ldr	r3, [fp, #-12]
    7e30:	add	r3, r2, r3
    7e34:	str	r3, [fp, #-8]
    7e38:	ldr	r2, [fp, #-8]
    7e3c:	ldr	r3, [fp, #-16]
    7e40:	and	r2, r2, r3
    7e44:	ldr	r3, [fp, #-16]
    7e48:	mvn	r1, r3
    7e4c:	ldr	r3, [fp, #-12]
    7e50:	and	r3, r3, r1
    7e54:	orr	r2, r2, r3
    7e58:	ldr	r3, [fp, #-28]	; 0xffffffe4
    7e5c:	add	r2, r2, r3
    7e60:	ldr	r3, [fp, #-20]	; 0xffffffec
    7e64:	add	r2, r2, r3
    7e68:	movw	r3, #2006	; 0x7d6
    7e6c:	movt	r3, #49975	; 0xc337
    7e70:	add	r3, r2, r3
    7e74:	str	r3, [fp, #-20]	; 0xffffffec
    7e78:	ldr	r3, [fp, #-20]	; 0xffffffec
    7e7c:	ror	r3, r3, #23
    7e80:	str	r3, [fp, #-20]	; 0xffffffec
    7e84:	ldr	r2, [fp, #-20]	; 0xffffffec
    7e88:	ldr	r3, [fp, #-8]
    7e8c:	add	r3, r2, r3
    7e90:	str	r3, [fp, #-20]	; 0xffffffec
    7e94:	ldr	r2, [fp, #-20]	; 0xffffffec
    7e98:	ldr	r3, [fp, #-12]
    7e9c:	and	r2, r2, r3
    7ea0:	ldr	r3, [fp, #-12]
    7ea4:	mvn	r1, r3
    7ea8:	ldr	r3, [fp, #-8]
    7eac:	and	r3, r3, r1
    7eb0:	orr	r2, r2, r3
    7eb4:	ldr	r3, [fp, #-72]	; 0xffffffb8
    7eb8:	add	r2, r2, r3
    7ebc:	ldr	r3, [fp, #-16]
    7ec0:	add	r2, r2, r3
    7ec4:	movw	r3, #3463	; 0xd87
    7ec8:	movt	r3, #62677	; 0xf4d5
    7ecc:	add	r3, r2, r3
    7ed0:	str	r3, [fp, #-16]
    7ed4:	ldr	r3, [fp, #-16]
    7ed8:	ror	r3, r3, #18
    7edc:	str	r3, [fp, #-16]
    7ee0:	ldr	r2, [fp, #-16]
    7ee4:	ldr	r3, [fp, #-20]	; 0xffffffec
    7ee8:	add	r3, r2, r3
    7eec:	str	r3, [fp, #-16]
    7ef0:	ldr	r2, [fp, #-16]
    7ef4:	ldr	r3, [fp, #-8]
    7ef8:	and	r2, r2, r3
    7efc:	ldr	r3, [fp, #-8]
    7f00:	mvn	r1, r3
    7f04:	ldr	r3, [fp, #-20]	; 0xffffffec
    7f08:	and	r3, r3, r1
    7f0c:	orr	r2, r2, r3
    7f10:	ldr	r3, [fp, #-52]	; 0xffffffcc
    7f14:	add	r2, r2, r3
    7f18:	ldr	r3, [fp, #-12]
    7f1c:	add	r2, r2, r3
    7f20:	movw	r3, #5357	; 0x14ed
    7f24:	movt	r3, #17754	; 0x455a
    7f28:	add	r3, r2, r3
    7f2c:	str	r3, [fp, #-12]
    7f30:	ldr	r3, [fp, #-12]
    7f34:	ror	r3, r3, #12
    7f38:	str	r3, [fp, #-12]
    7f3c:	ldr	r2, [fp, #-12]
    7f40:	ldr	r3, [fp, #-16]
    7f44:	add	r3, r2, r3
    7f48:	str	r3, [fp, #-12]
    7f4c:	ldr	r2, [fp, #-12]
    7f50:	ldr	r3, [fp, #-20]	; 0xffffffec
    7f54:	and	r2, r2, r3
    7f58:	ldr	r3, [fp, #-20]	; 0xffffffec
    7f5c:	mvn	r1, r3
    7f60:	ldr	r3, [fp, #-16]
    7f64:	and	r3, r3, r1
    7f68:	orr	r2, r2, r3
    7f6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    7f70:	add	r2, r2, r3
    7f74:	ldr	r3, [fp, #-8]
    7f78:	add	r2, r2, r3
    7f7c:	movw	r3, #59653	; 0xe905
    7f80:	movt	r3, #43491	; 0xa9e3
    7f84:	add	r3, r2, r3
    7f88:	str	r3, [fp, #-8]
    7f8c:	ldr	r3, [fp, #-8]
    7f90:	ror	r3, r3, #27
    7f94:	str	r3, [fp, #-8]
    7f98:	ldr	r2, [fp, #-8]
    7f9c:	ldr	r3, [fp, #-12]
    7fa0:	add	r3, r2, r3
    7fa4:	str	r3, [fp, #-8]
    7fa8:	ldr	r2, [fp, #-8]
    7fac:	ldr	r3, [fp, #-16]
    7fb0:	and	r2, r2, r3
    7fb4:	ldr	r3, [fp, #-16]
    7fb8:	mvn	r1, r3
    7fbc:	ldr	r3, [fp, #-12]
    7fc0:	and	r3, r3, r1
    7fc4:	orr	r2, r2, r3
    7fc8:	ldr	r3, [fp, #-76]	; 0xffffffb4
    7fcc:	add	r2, r2, r3
    7fd0:	ldr	r3, [fp, #-20]	; 0xffffffec
    7fd4:	add	r2, r2, r3
    7fd8:	movw	r3, #41976	; 0xa3f8
    7fdc:	movt	r3, #64751	; 0xfcef
    7fe0:	add	r3, r2, r3
    7fe4:	str	r3, [fp, #-20]	; 0xffffffec
    7fe8:	ldr	r3, [fp, #-20]	; 0xffffffec
    7fec:	ror	r3, r3, #23
    7ff0:	str	r3, [fp, #-20]	; 0xffffffec
    7ff4:	ldr	r2, [fp, #-20]	; 0xffffffec
    7ff8:	ldr	r3, [fp, #-8]
    7ffc:	add	r3, r2, r3
    8000:	str	r3, [fp, #-20]	; 0xffffffec
    8004:	ldr	r2, [fp, #-20]	; 0xffffffec
    8008:	ldr	r3, [fp, #-12]
    800c:	and	r2, r2, r3
    8010:	ldr	r3, [fp, #-12]
    8014:	mvn	r1, r3
    8018:	ldr	r3, [fp, #-8]
    801c:	and	r3, r3, r1
    8020:	orr	r2, r2, r3
    8024:	ldr	r3, [fp, #-56]	; 0xffffffc8
    8028:	add	r2, r2, r3
    802c:	ldr	r3, [fp, #-16]
    8030:	add	r2, r2, r3
    8034:	movw	r3, #729	; 0x2d9
    8038:	movt	r3, #26479	; 0x676f
    803c:	add	r3, r2, r3
    8040:	str	r3, [fp, #-16]
    8044:	ldr	r3, [fp, #-16]
    8048:	ror	r3, r3, #18
    804c:	str	r3, [fp, #-16]
    8050:	ldr	r2, [fp, #-16]
    8054:	ldr	r3, [fp, #-20]	; 0xffffffec
    8058:	add	r3, r2, r3
    805c:	str	r3, [fp, #-16]
    8060:	ldr	r2, [fp, #-16]
    8064:	ldr	r3, [fp, #-8]
    8068:	and	r2, r2, r3
    806c:	ldr	r3, [fp, #-8]
    8070:	mvn	r1, r3
    8074:	ldr	r3, [fp, #-20]	; 0xffffffec
    8078:	and	r3, r3, r1
    807c:	orr	r2, r2, r3
    8080:	ldr	r3, [fp, #-36]	; 0xffffffdc
    8084:	add	r2, r2, r3
    8088:	ldr	r3, [fp, #-12]
    808c:	add	r2, r2, r3
    8090:	movw	r3, #19594	; 0x4c8a
    8094:	movt	r3, #36138	; 0x8d2a
    8098:	add	r3, r2, r3
    809c:	str	r3, [fp, #-12]
    80a0:	ldr	r3, [fp, #-12]
    80a4:	ror	r3, r3, #12
    80a8:	str	r3, [fp, #-12]
    80ac:	ldr	r2, [fp, #-12]
    80b0:	ldr	r3, [fp, #-16]
    80b4:	add	r3, r2, r3
    80b8:	str	r3, [fp, #-12]
    80bc:	ldr	r2, [fp, #-12]
    80c0:	ldr	r3, [fp, #-16]
    80c4:	eor	r2, r2, r3
    80c8:	ldr	r3, [fp, #-20]	; 0xffffffec
    80cc:	eor	r2, r2, r3
    80d0:	ldr	r3, [fp, #-64]	; 0xffffffc0
    80d4:	add	r2, r2, r3
    80d8:	ldr	r3, [fp, #-8]
    80dc:	add	r2, r2, r3
    80e0:	movw	r3, #14658	; 0x3942
    80e4:	movt	r3, #65530	; 0xfffa
    80e8:	add	r3, r2, r3
    80ec:	str	r3, [fp, #-8]
    80f0:	ldr	r3, [fp, #-8]
    80f4:	ror	r3, r3, #28
    80f8:	str	r3, [fp, #-8]
    80fc:	ldr	r2, [fp, #-8]
    8100:	ldr	r3, [fp, #-12]
    8104:	add	r3, r2, r3
    8108:	str	r3, [fp, #-8]
    810c:	ldr	r2, [fp, #-8]
    8110:	ldr	r3, [fp, #-12]
    8114:	eor	r2, r2, r3
    8118:	ldr	r3, [fp, #-16]
    811c:	eor	r2, r2, r3
    8120:	ldr	r3, [fp, #-52]	; 0xffffffcc
    8124:	add	r2, r2, r3
    8128:	ldr	r3, [fp, #-20]	; 0xffffffec
    812c:	add	r2, r2, r3
    8130:	movw	r3, #63105	; 0xf681
    8134:	movt	r3, #34673	; 0x8771
    8138:	add	r3, r2, r3
    813c:	str	r3, [fp, #-20]	; 0xffffffec
    8140:	ldr	r3, [fp, #-20]	; 0xffffffec
    8144:	ror	r3, r3, #21
    8148:	str	r3, [fp, #-20]	; 0xffffffec
    814c:	ldr	r2, [fp, #-20]	; 0xffffffec
    8150:	ldr	r3, [fp, #-8]
    8154:	add	r3, r2, r3
    8158:	str	r3, [fp, #-20]	; 0xffffffec
    815c:	ldr	r2, [fp, #-20]	; 0xffffffec
    8160:	ldr	r3, [fp, #-8]
    8164:	eor	r2, r2, r3
    8168:	ldr	r3, [fp, #-12]
    816c:	eor	r2, r2, r3
    8170:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8174:	add	r2, r2, r3
    8178:	ldr	r3, [fp, #-16]
    817c:	add	r2, r2, r3
    8180:	movw	r3, #24866	; 0x6122
    8184:	movt	r3, #28061	; 0x6d9d
    8188:	add	r3, r2, r3
    818c:	str	r3, [fp, #-16]
    8190:	ldr	r3, [fp, #-16]
    8194:	ror	r3, r3, #16
    8198:	str	r3, [fp, #-16]
    819c:	ldr	r2, [fp, #-16]
    81a0:	ldr	r3, [fp, #-20]	; 0xffffffec
    81a4:	add	r3, r2, r3
    81a8:	str	r3, [fp, #-16]
    81ac:	ldr	r2, [fp, #-16]
    81b0:	ldr	r3, [fp, #-20]	; 0xffffffec
    81b4:	eor	r2, r2, r3
    81b8:	ldr	r3, [fp, #-8]
    81bc:	eor	r2, r2, r3
    81c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    81c4:	add	r2, r2, r3
    81c8:	ldr	r3, [fp, #-12]
    81cc:	add	r2, r2, r3
    81d0:	movw	r3, #14348	; 0x380c
    81d4:	movt	r3, #64997	; 0xfde5
    81d8:	add	r3, r2, r3
    81dc:	str	r3, [fp, #-12]
    81e0:	ldr	r3, [fp, #-12]
    81e4:	ror	r3, r3, #9
    81e8:	str	r3, [fp, #-12]
    81ec:	ldr	r2, [fp, #-12]
    81f0:	ldr	r3, [fp, #-16]
    81f4:	add	r3, r2, r3
    81f8:	str	r3, [fp, #-12]
    81fc:	ldr	r2, [fp, #-12]
    8200:	ldr	r3, [fp, #-16]
    8204:	eor	r2, r2, r3
    8208:	ldr	r3, [fp, #-20]	; 0xffffffec
    820c:	eor	r2, r2, r3
    8210:	ldr	r3, [fp, #-80]	; 0xffffffb0
    8214:	add	r2, r2, r3
    8218:	ldr	r3, [fp, #-8]
    821c:	add	r2, r2, r3
    8220:	movw	r3, #59972	; 0xea44
    8224:	movt	r3, #42174	; 0xa4be
    8228:	add	r3, r2, r3
    822c:	str	r3, [fp, #-8]
    8230:	ldr	r3, [fp, #-8]
    8234:	ror	r3, r3, #28
    8238:	str	r3, [fp, #-8]
    823c:	ldr	r2, [fp, #-8]
    8240:	ldr	r3, [fp, #-12]
    8244:	add	r3, r2, r3
    8248:	str	r3, [fp, #-8]
    824c:	ldr	r2, [fp, #-8]
    8250:	ldr	r3, [fp, #-12]
    8254:	eor	r2, r2, r3
    8258:	ldr	r3, [fp, #-16]
    825c:	eor	r2, r2, r3
    8260:	ldr	r3, [fp, #-68]	; 0xffffffbc
    8264:	add	r2, r2, r3
    8268:	ldr	r3, [fp, #-20]	; 0xffffffec
    826c:	add	r2, r2, r3
    8270:	movw	r3, #53161	; 0xcfa9
    8274:	movt	r3, #19422	; 0x4bde
    8278:	add	r3, r2, r3
    827c:	str	r3, [fp, #-20]	; 0xffffffec
    8280:	ldr	r3, [fp, #-20]	; 0xffffffec
    8284:	ror	r3, r3, #21
    8288:	str	r3, [fp, #-20]	; 0xffffffec
    828c:	ldr	r2, [fp, #-20]	; 0xffffffec
    8290:	ldr	r3, [fp, #-8]
    8294:	add	r3, r2, r3
    8298:	str	r3, [fp, #-20]	; 0xffffffec
    829c:	ldr	r2, [fp, #-20]	; 0xffffffec
    82a0:	ldr	r3, [fp, #-8]
    82a4:	eor	r2, r2, r3
    82a8:	ldr	r3, [fp, #-12]
    82ac:	eor	r2, r2, r3
    82b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    82b4:	add	r2, r2, r3
    82b8:	ldr	r3, [fp, #-16]
    82bc:	add	r2, r2, r3
    82c0:	movw	r3, #19296	; 0x4b60
    82c4:	movt	r3, #63163	; 0xf6bb
    82c8:	add	r3, r2, r3
    82cc:	str	r3, [fp, #-16]
    82d0:	ldr	r3, [fp, #-16]
    82d4:	ror	r3, r3, #16
    82d8:	str	r3, [fp, #-16]
    82dc:	ldr	r2, [fp, #-16]
    82e0:	ldr	r3, [fp, #-20]	; 0xffffffec
    82e4:	add	r3, r2, r3
    82e8:	str	r3, [fp, #-16]
    82ec:	ldr	r2, [fp, #-16]
    82f0:	ldr	r3, [fp, #-20]	; 0xffffffec
    82f4:	eor	r2, r2, r3
    82f8:	ldr	r3, [fp, #-8]
    82fc:	eor	r2, r2, r3
    8300:	ldr	r3, [fp, #-44]	; 0xffffffd4
    8304:	add	r2, r2, r3
    8308:	ldr	r3, [fp, #-12]
    830c:	add	r2, r2, r3
    8310:	movw	r3, #48240	; 0xbc70
    8314:	movt	r3, #48831	; 0xbebf
    8318:	add	r3, r2, r3
    831c:	str	r3, [fp, #-12]
    8320:	ldr	r3, [fp, #-12]
    8324:	ror	r3, r3, #9
    8328:	str	r3, [fp, #-12]
    832c:	ldr	r2, [fp, #-12]
    8330:	ldr	r3, [fp, #-16]
    8334:	add	r3, r2, r3
    8338:	str	r3, [fp, #-12]
    833c:	ldr	r2, [fp, #-12]
    8340:	ldr	r3, [fp, #-16]
    8344:	eor	r2, r2, r3
    8348:	ldr	r3, [fp, #-20]	; 0xffffffec
    834c:	eor	r2, r2, r3
    8350:	ldr	r3, [fp, #-32]	; 0xffffffe0
    8354:	add	r2, r2, r3
    8358:	ldr	r3, [fp, #-8]
    835c:	add	r2, r2, r3
    8360:	movw	r3, #32454	; 0x7ec6
    8364:	movt	r3, #10395	; 0x289b
    8368:	add	r3, r2, r3
    836c:	str	r3, [fp, #-8]
    8370:	ldr	r3, [fp, #-8]
    8374:	ror	r3, r3, #28
    8378:	str	r3, [fp, #-8]
    837c:	ldr	r2, [fp, #-8]
    8380:	ldr	r3, [fp, #-12]
    8384:	add	r3, r2, r3
    8388:	str	r3, [fp, #-8]
    838c:	ldr	r2, [fp, #-8]
    8390:	ldr	r3, [fp, #-12]
    8394:	eor	r2, r2, r3
    8398:	ldr	r3, [fp, #-16]
    839c:	eor	r2, r2, r3
    83a0:	ldr	r3, [fp, #-84]	; 0xffffffac
    83a4:	add	r2, r2, r3
    83a8:	ldr	r3, [fp, #-20]	; 0xffffffec
    83ac:	add	r2, r2, r3
    83b0:	movw	r3, #10234	; 0x27fa
    83b4:	movt	r3, #60065	; 0xeaa1
    83b8:	add	r3, r2, r3
    83bc:	str	r3, [fp, #-20]	; 0xffffffec
    83c0:	ldr	r3, [fp, #-20]	; 0xffffffec
    83c4:	ror	r3, r3, #21
    83c8:	str	r3, [fp, #-20]	; 0xffffffec
    83cc:	ldr	r2, [fp, #-20]	; 0xffffffec
    83d0:	ldr	r3, [fp, #-8]
    83d4:	add	r3, r2, r3
    83d8:	str	r3, [fp, #-20]	; 0xffffffec
    83dc:	ldr	r2, [fp, #-20]	; 0xffffffec
    83e0:	ldr	r3, [fp, #-8]
    83e4:	eor	r2, r2, r3
    83e8:	ldr	r3, [fp, #-12]
    83ec:	eor	r2, r2, r3
    83f0:	ldr	r3, [fp, #-72]	; 0xffffffb8
    83f4:	add	r2, r2, r3
    83f8:	ldr	r3, [fp, #-16]
    83fc:	add	r2, r2, r3
    8400:	movw	r3, #12421	; 0x3085
    8404:	movt	r3, #54511	; 0xd4ef
    8408:	add	r3, r2, r3
    840c:	str	r3, [fp, #-16]
    8410:	ldr	r3, [fp, #-16]
    8414:	ror	r3, r3, #16
    8418:	str	r3, [fp, #-16]
    841c:	ldr	r2, [fp, #-16]
    8420:	ldr	r3, [fp, #-20]	; 0xffffffec
    8424:	add	r3, r2, r3
    8428:	str	r3, [fp, #-16]
    842c:	ldr	r2, [fp, #-16]
    8430:	ldr	r3, [fp, #-20]	; 0xffffffec
    8434:	eor	r2, r2, r3
    8438:	ldr	r3, [fp, #-8]
    843c:	eor	r2, r2, r3
    8440:	ldr	r3, [fp, #-60]	; 0xffffffc4
    8444:	add	r2, r2, r3
    8448:	ldr	r3, [fp, #-12]
    844c:	add	r2, r2, r3
    8450:	movw	r3, #7429	; 0x1d05
    8454:	movt	r3, #1160	; 0x488
    8458:	add	r3, r2, r3
    845c:	str	r3, [fp, #-12]
    8460:	ldr	r3, [fp, #-12]
    8464:	ror	r3, r3, #9
    8468:	str	r3, [fp, #-12]
    846c:	ldr	r2, [fp, #-12]
    8470:	ldr	r3, [fp, #-16]
    8474:	add	r3, r2, r3
    8478:	str	r3, [fp, #-12]
    847c:	ldr	r2, [fp, #-12]
    8480:	ldr	r3, [fp, #-16]
    8484:	eor	r2, r2, r3
    8488:	ldr	r3, [fp, #-20]	; 0xffffffec
    848c:	eor	r2, r2, r3
    8490:	ldr	r3, [fp, #-48]	; 0xffffffd0
    8494:	add	r2, r2, r3
    8498:	ldr	r3, [fp, #-8]
    849c:	add	r2, r2, r3
    84a0:	movw	r3, #53305	; 0xd039
    84a4:	movt	r3, #55764	; 0xd9d4
    84a8:	add	r3, r2, r3
    84ac:	str	r3, [fp, #-8]
    84b0:	ldr	r3, [fp, #-8]
    84b4:	ror	r3, r3, #28
    84b8:	str	r3, [fp, #-8]
    84bc:	ldr	r2, [fp, #-8]
    84c0:	ldr	r3, [fp, #-12]
    84c4:	add	r3, r2, r3
    84c8:	str	r3, [fp, #-8]
    84cc:	ldr	r2, [fp, #-8]
    84d0:	ldr	r3, [fp, #-12]
    84d4:	eor	r2, r2, r3
    84d8:	ldr	r3, [fp, #-16]
    84dc:	eor	r2, r2, r3
    84e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    84e4:	add	r2, r2, r3
    84e8:	ldr	r3, [fp, #-20]	; 0xffffffec
    84ec:	add	r2, r2, r3
    84f0:	movw	r3, #39397	; 0x99e5
    84f4:	movt	r3, #59099	; 0xe6db
    84f8:	add	r3, r2, r3
    84fc:	str	r3, [fp, #-20]	; 0xffffffec
    8500:	ldr	r3, [fp, #-20]	; 0xffffffec
    8504:	ror	r3, r3, #21
    8508:	str	r3, [fp, #-20]	; 0xffffffec
    850c:	ldr	r2, [fp, #-20]	; 0xffffffec
    8510:	ldr	r3, [fp, #-8]
    8514:	add	r3, r2, r3
    8518:	str	r3, [fp, #-20]	; 0xffffffec
    851c:	ldr	r2, [fp, #-20]	; 0xffffffec
    8520:	ldr	r3, [fp, #-8]
    8524:	eor	r2, r2, r3
    8528:	ldr	r3, [fp, #-12]
    852c:	eor	r2, r2, r3
    8530:	ldr	r3, [fp, #-24]	; 0xffffffe8
    8534:	add	r2, r2, r3
    8538:	ldr	r3, [fp, #-16]
    853c:	add	r2, r2, r3
    8540:	movw	r3, #31992	; 0x7cf8
    8544:	movt	r3, #8098	; 0x1fa2
    8548:	add	r3, r2, r3
    854c:	str	r3, [fp, #-16]
    8550:	ldr	r3, [fp, #-16]
    8554:	ror	r3, r3, #16
    8558:	str	r3, [fp, #-16]
    855c:	ldr	r2, [fp, #-16]
    8560:	ldr	r3, [fp, #-20]	; 0xffffffec
    8564:	add	r3, r2, r3
    8568:	str	r3, [fp, #-16]
    856c:	ldr	r2, [fp, #-16]
    8570:	ldr	r3, [fp, #-20]	; 0xffffffec
    8574:	eor	r2, r2, r3
    8578:	ldr	r3, [fp, #-8]
    857c:	eor	r2, r2, r3
    8580:	ldr	r3, [fp, #-76]	; 0xffffffb4
    8584:	add	r2, r2, r3
    8588:	ldr	r3, [fp, #-12]
    858c:	add	r2, r2, r3
    8590:	movw	r3, #22117	; 0x5665
    8594:	movt	r3, #50348	; 0xc4ac
    8598:	add	r3, r2, r3
    859c:	str	r3, [fp, #-12]
    85a0:	ldr	r3, [fp, #-12]
    85a4:	ror	r3, r3, #9
    85a8:	str	r3, [fp, #-12]
    85ac:	ldr	r2, [fp, #-12]
    85b0:	ldr	r3, [fp, #-16]
    85b4:	add	r3, r2, r3
    85b8:	str	r3, [fp, #-12]
    85bc:	ldr	r3, [fp, #-20]	; 0xffffffec
    85c0:	mvn	r2, r3
    85c4:	ldr	r3, [fp, #-12]
    85c8:	orr	r2, r2, r3
    85cc:	ldr	r3, [fp, #-16]
    85d0:	eor	r2, r2, r3
    85d4:	ldr	r3, [fp, #-84]	; 0xffffffac
    85d8:	add	r2, r2, r3
    85dc:	ldr	r3, [fp, #-8]
    85e0:	add	r2, r2, r3
    85e4:	movw	r3, #8772	; 0x2244
    85e8:	movt	r3, #62505	; 0xf429
    85ec:	add	r3, r2, r3
    85f0:	str	r3, [fp, #-8]
    85f4:	ldr	r3, [fp, #-8]
    85f8:	ror	r3, r3, #26
    85fc:	str	r3, [fp, #-8]
    8600:	ldr	r2, [fp, #-8]
    8604:	ldr	r3, [fp, #-12]
    8608:	add	r3, r2, r3
    860c:	str	r3, [fp, #-8]
    8610:	ldr	r3, [fp, #-16]
    8614:	mvn	r2, r3
    8618:	ldr	r3, [fp, #-8]
    861c:	orr	r2, r2, r3
    8620:	ldr	r3, [fp, #-12]
    8624:	eor	r2, r2, r3
    8628:	ldr	r3, [fp, #-56]	; 0xffffffc8
    862c:	add	r2, r2, r3
    8630:	ldr	r3, [fp, #-20]	; 0xffffffec
    8634:	add	r2, r2, r3
    8638:	movw	r3, #65431	; 0xff97
    863c:	movt	r3, #17194	; 0x432a
    8640:	add	r3, r2, r3
    8644:	str	r3, [fp, #-20]	; 0xffffffec
    8648:	ldr	r3, [fp, #-20]	; 0xffffffec
    864c:	ror	r3, r3, #22
    8650:	str	r3, [fp, #-20]	; 0xffffffec
    8654:	ldr	r2, [fp, #-20]	; 0xffffffec
    8658:	ldr	r3, [fp, #-8]
    865c:	add	r3, r2, r3
    8660:	str	r3, [fp, #-20]	; 0xffffffec
    8664:	ldr	r3, [fp, #-12]
    8668:	mvn	r2, r3
    866c:	ldr	r3, [fp, #-20]	; 0xffffffec
    8670:	orr	r2, r2, r3
    8674:	ldr	r3, [fp, #-8]
    8678:	eor	r2, r2, r3
    867c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    8680:	add	r2, r2, r3
    8684:	ldr	r3, [fp, #-16]
    8688:	add	r2, r2, r3
    868c:	movw	r3, #9127	; 0x23a7
    8690:	movt	r3, #43924	; 0xab94
    8694:	add	r3, r2, r3
    8698:	str	r3, [fp, #-16]
    869c:	ldr	r3, [fp, #-16]
    86a0:	ror	r3, r3, #17
    86a4:	str	r3, [fp, #-16]
    86a8:	ldr	r2, [fp, #-16]
    86ac:	ldr	r3, [fp, #-20]	; 0xffffffec
    86b0:	add	r3, r2, r3
    86b4:	str	r3, [fp, #-16]
    86b8:	ldr	r3, [fp, #-8]
    86bc:	mvn	r2, r3
    86c0:	ldr	r3, [fp, #-16]
    86c4:	orr	r2, r2, r3
    86c8:	ldr	r3, [fp, #-20]	; 0xffffffec
    86cc:	eor	r2, r2, r3
    86d0:	ldr	r3, [fp, #-64]	; 0xffffffc0
    86d4:	add	r2, r2, r3
    86d8:	ldr	r3, [fp, #-12]
    86dc:	add	r2, r2, r3
    86e0:	movw	r3, #41017	; 0xa039
    86e4:	movt	r3, #64659	; 0xfc93
    86e8:	add	r3, r2, r3
    86ec:	str	r3, [fp, #-12]
    86f0:	ldr	r3, [fp, #-12]
    86f4:	ror	r3, r3, #11
    86f8:	str	r3, [fp, #-12]
    86fc:	ldr	r2, [fp, #-12]
    8700:	ldr	r3, [fp, #-16]
    8704:	add	r3, r2, r3
    8708:	str	r3, [fp, #-12]
    870c:	ldr	r3, [fp, #-20]	; 0xffffffec
    8710:	mvn	r2, r3
    8714:	ldr	r3, [fp, #-12]
    8718:	orr	r2, r2, r3
    871c:	ldr	r3, [fp, #-16]
    8720:	eor	r2, r2, r3
    8724:	ldr	r3, [fp, #-36]	; 0xffffffdc
    8728:	add	r2, r2, r3
    872c:	ldr	r3, [fp, #-8]
    8730:	add	r2, r2, r3
    8734:	movw	r3, #22979	; 0x59c3
    8738:	movt	r3, #25947	; 0x655b
    873c:	add	r3, r2, r3
    8740:	str	r3, [fp, #-8]
    8744:	ldr	r3, [fp, #-8]
    8748:	ror	r3, r3, #26
    874c:	str	r3, [fp, #-8]
    8750:	ldr	r2, [fp, #-8]
    8754:	ldr	r3, [fp, #-12]
    8758:	add	r3, r2, r3
    875c:	str	r3, [fp, #-8]
    8760:	ldr	r3, [fp, #-16]
    8764:	mvn	r2, r3
    8768:	ldr	r3, [fp, #-8]
    876c:	orr	r2, r2, r3
    8770:	ldr	r3, [fp, #-12]
    8774:	eor	r2, r2, r3
    8778:	ldr	r3, [fp, #-72]	; 0xffffffb8
    877c:	add	r2, r2, r3
    8780:	ldr	r3, [fp, #-20]	; 0xffffffec
    8784:	add	r2, r2, r3
    8788:	movw	r3, #52370	; 0xcc92
    878c:	movt	r3, #36620	; 0x8f0c
    8790:	add	r3, r2, r3
    8794:	str	r3, [fp, #-20]	; 0xffffffec
    8798:	ldr	r3, [fp, #-20]	; 0xffffffec
    879c:	ror	r3, r3, #22
    87a0:	str	r3, [fp, #-20]	; 0xffffffec
    87a4:	ldr	r2, [fp, #-20]	; 0xffffffec
    87a8:	ldr	r3, [fp, #-8]
    87ac:	add	r3, r2, r3
    87b0:	str	r3, [fp, #-20]	; 0xffffffec
    87b4:	ldr	r3, [fp, #-12]
    87b8:	mvn	r2, r3
    87bc:	ldr	r3, [fp, #-20]	; 0xffffffec
    87c0:	orr	r2, r2, r3
    87c4:	ldr	r3, [fp, #-8]
    87c8:	eor	r2, r2, r3
    87cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    87d0:	add	r2, r2, r3
    87d4:	ldr	r3, [fp, #-16]
    87d8:	add	r2, r2, r3
    87dc:	movw	r3, #62589	; 0xf47d
    87e0:	movt	r3, #65519	; 0xffef
    87e4:	add	r3, r2, r3
    87e8:	str	r3, [fp, #-16]
    87ec:	ldr	r3, [fp, #-16]
    87f0:	ror	r3, r3, #17
    87f4:	str	r3, [fp, #-16]
    87f8:	ldr	r2, [fp, #-16]
    87fc:	ldr	r3, [fp, #-20]	; 0xffffffec
    8800:	add	r3, r2, r3
    8804:	str	r3, [fp, #-16]
    8808:	ldr	r3, [fp, #-8]
    880c:	mvn	r2, r3
    8810:	ldr	r3, [fp, #-16]
    8814:	orr	r2, r2, r3
    8818:	ldr	r3, [fp, #-20]	; 0xffffffec
    881c:	eor	r2, r2, r3
    8820:	ldr	r3, [fp, #-80]	; 0xffffffb0
    8824:	add	r2, r2, r3
    8828:	ldr	r3, [fp, #-12]
    882c:	add	r2, r2, r3
    8830:	movw	r3, #24017	; 0x5dd1
    8834:	movt	r3, #34180	; 0x8584
    8838:	add	r3, r2, r3
    883c:	str	r3, [fp, #-12]
    8840:	ldr	r3, [fp, #-12]
    8844:	ror	r3, r3, #11
    8848:	str	r3, [fp, #-12]
    884c:	ldr	r2, [fp, #-12]
    8850:	ldr	r3, [fp, #-16]
    8854:	add	r3, r2, r3
    8858:	str	r3, [fp, #-12]
    885c:	ldr	r3, [fp, #-20]	; 0xffffffec
    8860:	mvn	r2, r3
    8864:	ldr	r3, [fp, #-12]
    8868:	orr	r2, r2, r3
    886c:	ldr	r3, [fp, #-16]
    8870:	eor	r2, r2, r3
    8874:	ldr	r3, [fp, #-52]	; 0xffffffcc
    8878:	add	r2, r2, r3
    887c:	ldr	r3, [fp, #-8]
    8880:	add	r2, r2, r3
    8884:	movw	r3, #32335	; 0x7e4f
    8888:	movt	r3, #28584	; 0x6fa8
    888c:	add	r3, r2, r3
    8890:	str	r3, [fp, #-8]
    8894:	ldr	r3, [fp, #-8]
    8898:	ror	r3, r3, #26
    889c:	str	r3, [fp, #-8]
    88a0:	ldr	r2, [fp, #-8]
    88a4:	ldr	r3, [fp, #-12]
    88a8:	add	r3, r2, r3
    88ac:	str	r3, [fp, #-8]
    88b0:	ldr	r3, [fp, #-16]
    88b4:	mvn	r2, r3
    88b8:	ldr	r3, [fp, #-8]
    88bc:	orr	r2, r2, r3
    88c0:	ldr	r3, [fp, #-12]
    88c4:	eor	r2, r2, r3
    88c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    88cc:	add	r2, r2, r3
    88d0:	ldr	r3, [fp, #-20]	; 0xffffffec
    88d4:	add	r2, r2, r3
    88d8:	movw	r3, #59104	; 0xe6e0
    88dc:	movt	r3, #65068	; 0xfe2c
    88e0:	add	r3, r2, r3
    88e4:	str	r3, [fp, #-20]	; 0xffffffec
    88e8:	ldr	r3, [fp, #-20]	; 0xffffffec
    88ec:	ror	r3, r3, #22
    88f0:	str	r3, [fp, #-20]	; 0xffffffec
    88f4:	ldr	r2, [fp, #-20]	; 0xffffffec
    88f8:	ldr	r3, [fp, #-8]
    88fc:	add	r3, r2, r3
    8900:	str	r3, [fp, #-20]	; 0xffffffec
    8904:	ldr	r3, [fp, #-12]
    8908:	mvn	r2, r3
    890c:	ldr	r3, [fp, #-20]	; 0xffffffec
    8910:	orr	r2, r2, r3
    8914:	ldr	r3, [fp, #-8]
    8918:	eor	r2, r2, r3
    891c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    8920:	add	r2, r2, r3
    8924:	ldr	r3, [fp, #-16]
    8928:	add	r2, r2, r3
    892c:	movw	r3, #17172	; 0x4314
    8930:	movt	r3, #41729	; 0xa301
    8934:	add	r3, r2, r3
    8938:	str	r3, [fp, #-16]
    893c:	ldr	r3, [fp, #-16]
    8940:	ror	r3, r3, #17
    8944:	str	r3, [fp, #-16]
    8948:	ldr	r2, [fp, #-16]
    894c:	ldr	r3, [fp, #-20]	; 0xffffffec
    8950:	add	r3, r2, r3
    8954:	str	r3, [fp, #-16]
    8958:	ldr	r3, [fp, #-8]
    895c:	mvn	r2, r3
    8960:	ldr	r3, [fp, #-16]
    8964:	orr	r2, r2, r3
    8968:	ldr	r3, [fp, #-20]	; 0xffffffec
    896c:	eor	r2, r2, r3
    8970:	ldr	r3, [fp, #-32]	; 0xffffffe0
    8974:	add	r2, r2, r3
    8978:	ldr	r3, [fp, #-12]
    897c:	add	r2, r2, r3
    8980:	movw	r3, #4513	; 0x11a1
    8984:	movt	r3, #19976	; 0x4e08
    8988:	add	r3, r2, r3
    898c:	str	r3, [fp, #-12]
    8990:	ldr	r3, [fp, #-12]
    8994:	ror	r3, r3, #11
    8998:	str	r3, [fp, #-12]
    899c:	ldr	r2, [fp, #-12]
    89a0:	ldr	r3, [fp, #-16]
    89a4:	add	r3, r2, r3
    89a8:	str	r3, [fp, #-12]
    89ac:	ldr	r3, [fp, #-20]	; 0xffffffec
    89b0:	mvn	r2, r3
    89b4:	ldr	r3, [fp, #-12]
    89b8:	orr	r2, r2, r3
    89bc:	ldr	r3, [fp, #-16]
    89c0:	eor	r2, r2, r3
    89c4:	ldr	r3, [fp, #-68]	; 0xffffffbc
    89c8:	add	r2, r2, r3
    89cc:	ldr	r3, [fp, #-8]
    89d0:	add	r2, r2, r3
    89d4:	movw	r3, #32386	; 0x7e82
    89d8:	movt	r3, #63315	; 0xf753
    89dc:	add	r3, r2, r3
    89e0:	str	r3, [fp, #-8]
    89e4:	ldr	r3, [fp, #-8]
    89e8:	ror	r3, r3, #26
    89ec:	str	r3, [fp, #-8]
    89f0:	ldr	r2, [fp, #-8]
    89f4:	ldr	r3, [fp, #-12]
    89f8:	add	r3, r2, r3
    89fc:	str	r3, [fp, #-8]
    8a00:	ldr	r3, [fp, #-16]
    8a04:	mvn	r2, r3
    8a08:	ldr	r3, [fp, #-8]
    8a0c:	orr	r2, r2, r3
    8a10:	ldr	r3, [fp, #-12]
    8a14:	eor	r2, r2, r3
    8a18:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8a1c:	add	r2, r2, r3
    8a20:	ldr	r3, [fp, #-20]	; 0xffffffec
    8a24:	add	r2, r2, r3
    8a28:	movw	r3, #62005	; 0xf235
    8a2c:	movt	r3, #48442	; 0xbd3a
    8a30:	add	r3, r2, r3
    8a34:	str	r3, [fp, #-20]	; 0xffffffec
    8a38:	ldr	r3, [fp, #-20]	; 0xffffffec
    8a3c:	ror	r3, r3, #22
    8a40:	str	r3, [fp, #-20]	; 0xffffffec
    8a44:	ldr	r2, [fp, #-20]	; 0xffffffec
    8a48:	ldr	r3, [fp, #-8]
    8a4c:	add	r3, r2, r3
    8a50:	str	r3, [fp, #-20]	; 0xffffffec
    8a54:	ldr	r3, [fp, #-12]
    8a58:	mvn	r2, r3
    8a5c:	ldr	r3, [fp, #-20]	; 0xffffffec
    8a60:	orr	r2, r2, r3
    8a64:	ldr	r3, [fp, #-8]
    8a68:	eor	r2, r2, r3
    8a6c:	ldr	r3, [fp, #-76]	; 0xffffffb4
    8a70:	add	r2, r2, r3
    8a74:	ldr	r3, [fp, #-16]
    8a78:	add	r2, r2, r3
    8a7c:	movw	r3, #53947	; 0xd2bb
    8a80:	movt	r3, #10967	; 0x2ad7
    8a84:	add	r3, r2, r3
    8a88:	str	r3, [fp, #-16]
    8a8c:	ldr	r3, [fp, #-16]
    8a90:	ror	r3, r3, #17
    8a94:	str	r3, [fp, #-16]
    8a98:	ldr	r2, [fp, #-16]
    8a9c:	ldr	r3, [fp, #-20]	; 0xffffffec
    8aa0:	add	r3, r2, r3
    8aa4:	str	r3, [fp, #-16]
    8aa8:	ldr	r3, [fp, #-8]
    8aac:	mvn	r2, r3
    8ab0:	ldr	r3, [fp, #-16]
    8ab4:	orr	r2, r2, r3
    8ab8:	ldr	r3, [fp, #-20]	; 0xffffffec
    8abc:	eor	r2, r2, r3
    8ac0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    8ac4:	add	r2, r2, r3
    8ac8:	ldr	r3, [fp, #-12]
    8acc:	add	r2, r2, r3
    8ad0:	movw	r3, #54161	; 0xd391
    8ad4:	movt	r3, #60294	; 0xeb86
    8ad8:	add	r3, r2, r3
    8adc:	str	r3, [fp, #-12]
    8ae0:	ldr	r3, [fp, #-12]
    8ae4:	ror	r3, r3, #11
    8ae8:	str	r3, [fp, #-12]
    8aec:	ldr	r2, [fp, #-12]
    8af0:	ldr	r3, [fp, #-16]
    8af4:	add	r3, r2, r3
    8af8:	str	r3, [fp, #-12]
    8afc:	ldr	r3, [fp, #-88]	; 0xffffffa8
    8b00:	ldr	r2, [r3]
    8b04:	ldr	r3, [fp, #-8]
    8b08:	add	r2, r2, r3
    8b0c:	ldr	r3, [fp, #-88]	; 0xffffffa8
    8b10:	str	r2, [r3]
    8b14:	ldr	r3, [fp, #-88]	; 0xffffffa8
    8b18:	add	r3, r3, #4
    8b1c:	ldr	r1, [r3]
    8b20:	ldr	r3, [fp, #-88]	; 0xffffffa8
    8b24:	add	r3, r3, #4
    8b28:	ldr	r2, [fp, #-12]
    8b2c:	add	r2, r1, r2
    8b30:	str	r2, [r3]
    8b34:	ldr	r3, [fp, #-88]	; 0xffffffa8
    8b38:	add	r3, r3, #8
    8b3c:	ldr	r1, [r3]
    8b40:	ldr	r3, [fp, #-88]	; 0xffffffa8
    8b44:	add	r3, r3, #8
    8b48:	ldr	r2, [fp, #-16]
    8b4c:	add	r2, r1, r2
    8b50:	str	r2, [r3]
    8b54:	ldr	r3, [fp, #-88]	; 0xffffffa8
    8b58:	add	r3, r3, #12
    8b5c:	ldr	r1, [r3]
    8b60:	ldr	r3, [fp, #-88]	; 0xffffffa8
    8b64:	add	r3, r3, #12
    8b68:	ldr	r2, [fp, #-20]	; 0xffffffec
    8b6c:	add	r2, r1, r2
    8b70:	str	r2, [r3]
    8b74:	sub	r3, fp, #84	; 0x54
    8b78:	mov	r2, #64	; 0x40
    8b7c:	mov	r1, #0
    8b80:	mov	r0, r3
    8b84:	bl	4648 <memset@plt>
    8b88:	nop	{0}
    8b8c:	sub	sp, fp, #4
    8b90:	ldr	fp, [sp]
    8b94:	add	sp, sp, #4
    8b98:	pop	{pc}		; (ldr pc, [sp], #4)

00008b9c <rb_md5_crypt>:
    8b9c:	strd	r4, [sp, #-16]!
    8ba0:	str	fp, [sp, #8]
    8ba4:	str	lr, [sp, #12]
    8ba8:	add	fp, sp, #12
    8bac:	sub	sp, sp, #216	; 0xd8
    8bb0:	str	r0, [fp, #-224]	; 0xffffff20
    8bb4:	str	r1, [fp, #-228]	; 0xffffff1c
    8bb8:	ldr	r3, [pc, #1848]	; 92f8 <rb_md5_crypt+0x75c>
    8bbc:	add	r3, pc, r3
    8bc0:	ldr	r2, [fp, #-228]	; 0xffffff1c
    8bc4:	str	r2, [r3]
    8bc8:	ldr	r3, [pc, #1836]	; 92fc <rb_md5_crypt+0x760>
    8bcc:	add	r3, pc, r3
    8bd0:	ldr	r4, [r3]
    8bd4:	ldr	r3, [pc, #1828]	; 9300 <rb_md5_crypt+0x764>
    8bd8:	add	r3, pc, r3
    8bdc:	ldr	r5, [r3]
    8be0:	ldr	r3, [pc, #1820]	; 9304 <rb_md5_crypt+0x768>
    8be4:	add	r3, pc, r3
    8be8:	ldr	r3, [r3]
    8bec:	mov	r0, r3
    8bf0:	bl	4810 <strlen@plt>
    8bf4:	mov	r3, r0
    8bf8:	mov	r2, r3
    8bfc:	mov	r1, r5
    8c00:	mov	r0, r4
    8c04:	bl	4c3c <strncmp@plt>
    8c08:	mov	r3, r0
    8c0c:	cmp	r3, #0
    8c10:	bne	8c48 <rb_md5_crypt+0xac>
    8c14:	ldr	r3, [pc, #1772]	; 9308 <rb_md5_crypt+0x76c>
    8c18:	add	r3, pc, r3
    8c1c:	ldr	r4, [r3]
    8c20:	ldr	r3, [pc, #1764]	; 930c <rb_md5_crypt+0x770>
    8c24:	add	r3, pc, r3
    8c28:	ldr	r3, [r3]
    8c2c:	mov	r0, r3
    8c30:	bl	4810 <strlen@plt>
    8c34:	mov	r3, r0
    8c38:	add	r2, r4, r3
    8c3c:	ldr	r3, [pc, #1740]	; 9310 <rb_md5_crypt+0x774>
    8c40:	add	r3, pc, r3
    8c44:	str	r2, [r3]
    8c48:	ldr	r3, [pc, #1732]	; 9314 <rb_md5_crypt+0x778>
    8c4c:	add	r3, pc, r3
    8c50:	ldr	r2, [r3]
    8c54:	ldr	r3, [pc, #1724]	; 9318 <rb_md5_crypt+0x77c>
    8c58:	add	r3, pc, r3
    8c5c:	str	r2, [r3]
    8c60:	b	8c80 <rb_md5_crypt+0xe4>
    8c64:	ldr	r3, [pc, #1712]	; 931c <rb_md5_crypt+0x780>
    8c68:	add	r3, pc, r3
    8c6c:	ldr	r3, [r3]
    8c70:	add	r2, r3, #1
    8c74:	ldr	r3, [pc, #1700]	; 9320 <rb_md5_crypt+0x784>
    8c78:	add	r3, pc, r3
    8c7c:	str	r2, [r3]
    8c80:	ldr	r3, [pc, #1692]	; 9324 <rb_md5_crypt+0x788>
    8c84:	add	r3, pc, r3
    8c88:	ldr	r3, [r3]
    8c8c:	ldrb	r3, [r3]
    8c90:	cmp	r3, #0
    8c94:	beq	8cd4 <rb_md5_crypt+0x138>
    8c98:	ldr	r3, [pc, #1672]	; 9328 <rb_md5_crypt+0x78c>
    8c9c:	add	r3, pc, r3
    8ca0:	ldr	r3, [r3]
    8ca4:	ldrb	r3, [r3]
    8ca8:	cmp	r3, #36	; 0x24
    8cac:	beq	8cd4 <rb_md5_crypt+0x138>
    8cb0:	ldr	r3, [pc, #1652]	; 932c <rb_md5_crypt+0x790>
    8cb4:	add	r3, pc, r3
    8cb8:	ldr	r3, [r3]
    8cbc:	add	r2, r3, #8
    8cc0:	ldr	r3, [pc, #1640]	; 9330 <rb_md5_crypt+0x794>
    8cc4:	add	r3, pc, r3
    8cc8:	ldr	r3, [r3]
    8ccc:	cmp	r2, r3
    8cd0:	bhi	8c64 <rb_md5_crypt+0xc8>
    8cd4:	ldr	r3, [pc, #1624]	; 9334 <rb_md5_crypt+0x798>
    8cd8:	add	r3, pc, r3
    8cdc:	ldr	r2, [r3]
    8ce0:	ldr	r3, [pc, #1616]	; 9338 <rb_md5_crypt+0x79c>
    8ce4:	add	r3, pc, r3
    8ce8:	ldr	r3, [r3]
    8cec:	sub	r3, r2, r3
    8cf0:	str	r3, [fp, #-24]	; 0xffffffe8
    8cf4:	sub	r3, fp, #116	; 0x74
    8cf8:	mov	r0, r3
    8cfc:	bl	71dc <MD5Init>
    8d00:	ldr	r0, [fp, #-224]	; 0xffffff20
    8d04:	bl	4810 <strlen@plt>
    8d08:	mov	r2, r0
    8d0c:	sub	r3, fp, #116	; 0x74
    8d10:	ldr	r1, [fp, #-224]	; 0xffffff20
    8d14:	mov	r0, r3
    8d18:	bl	7258 <MD5Update>
    8d1c:	ldr	r3, [pc, #1560]	; 933c <rb_md5_crypt+0x7a0>
    8d20:	add	r3, pc, r3
    8d24:	ldr	r4, [r3]
    8d28:	ldr	r3, [pc, #1552]	; 9340 <rb_md5_crypt+0x7a4>
    8d2c:	add	r3, pc, r3
    8d30:	ldr	r3, [r3]
    8d34:	mov	r0, r3
    8d38:	bl	4810 <strlen@plt>
    8d3c:	mov	r2, r0
    8d40:	sub	r3, fp, #116	; 0x74
    8d44:	mov	r1, r4
    8d48:	mov	r0, r3
    8d4c:	bl	7258 <MD5Update>
    8d50:	ldr	r3, [pc, #1516]	; 9344 <rb_md5_crypt+0x7a8>
    8d54:	add	r3, pc, r3
    8d58:	ldr	r1, [r3]
    8d5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    8d60:	sub	r3, fp, #116	; 0x74
    8d64:	mov	r0, r3
    8d68:	bl	7258 <MD5Update>
    8d6c:	sub	r3, fp, #204	; 0xcc
    8d70:	mov	r0, r3
    8d74:	bl	71dc <MD5Init>
    8d78:	ldr	r0, [fp, #-224]	; 0xffffff20
    8d7c:	bl	4810 <strlen@plt>
    8d80:	mov	r2, r0
    8d84:	sub	r3, fp, #204	; 0xcc
    8d88:	ldr	r1, [fp, #-224]	; 0xffffff20
    8d8c:	mov	r0, r3
    8d90:	bl	7258 <MD5Update>
    8d94:	ldr	r3, [pc, #1452]	; 9348 <rb_md5_crypt+0x7ac>
    8d98:	add	r3, pc, r3
    8d9c:	ldr	r1, [r3]
    8da0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    8da4:	sub	r3, fp, #204	; 0xcc
    8da8:	mov	r0, r3
    8dac:	bl	7258 <MD5Update>
    8db0:	ldr	r0, [fp, #-224]	; 0xffffff20
    8db4:	bl	4810 <strlen@plt>
    8db8:	mov	r2, r0
    8dbc:	sub	r3, fp, #204	; 0xcc
    8dc0:	ldr	r1, [fp, #-224]	; 0xffffff20
    8dc4:	mov	r0, r3
    8dc8:	bl	7258 <MD5Update>
    8dcc:	sub	r2, fp, #204	; 0xcc
    8dd0:	sub	r3, fp, #220	; 0xdc
    8dd4:	mov	r1, r2
    8dd8:	mov	r0, r3
    8ddc:	bl	748c <MD5Final>
    8de0:	ldr	r0, [fp, #-224]	; 0xffffff20
    8de4:	bl	4810 <strlen@plt>
    8de8:	mov	r3, r0
    8dec:	str	r3, [fp, #-16]
    8df0:	b	8e24 <rb_md5_crypt+0x288>
    8df4:	ldr	r3, [fp, #-16]
    8df8:	cmp	r3, #16
    8dfc:	movlt	r3, r3
    8e00:	movge	r3, #16
    8e04:	mov	r2, r3
    8e08:	sub	r1, fp, #220	; 0xdc
    8e0c:	sub	r3, fp, #116	; 0x74
    8e10:	mov	r0, r3
    8e14:	bl	7258 <MD5Update>
    8e18:	ldr	r3, [fp, #-16]
    8e1c:	sub	r3, r3, #16
    8e20:	str	r3, [fp, #-16]
    8e24:	ldr	r3, [fp, #-16]
    8e28:	cmp	r3, #0
    8e2c:	bgt	8df4 <rb_md5_crypt+0x258>
    8e30:	sub	r3, fp, #220	; 0xdc
    8e34:	mov	r2, #16
    8e38:	mov	r1, #0
    8e3c:	mov	r0, r3
    8e40:	bl	4648 <memset@plt>
    8e44:	ldr	r0, [fp, #-224]	; 0xffffff20
    8e48:	bl	4810 <strlen@plt>
    8e4c:	str	r0, [fp, #-20]	; 0xffffffec
    8e50:	b	8e9c <rb_md5_crypt+0x300>
    8e54:	ldr	r3, [fp, #-20]	; 0xffffffec
    8e58:	and	r3, r3, #1
    8e5c:	cmp	r3, #0
    8e60:	beq	8e7c <rb_md5_crypt+0x2e0>
    8e64:	sub	r1, fp, #220	; 0xdc
    8e68:	sub	r3, fp, #116	; 0x74
    8e6c:	mov	r2, #1
    8e70:	mov	r0, r3
    8e74:	bl	7258 <MD5Update>
    8e78:	b	8e90 <rb_md5_crypt+0x2f4>
    8e7c:	sub	r3, fp, #116	; 0x74
    8e80:	mov	r2, #1
    8e84:	ldr	r1, [fp, #-224]	; 0xffffff20
    8e88:	mov	r0, r3
    8e8c:	bl	7258 <MD5Update>
    8e90:	ldr	r3, [fp, #-20]	; 0xffffffec
    8e94:	lsr	r3, r3, #1
    8e98:	str	r3, [fp, #-20]	; 0xffffffec
    8e9c:	ldr	r3, [fp, #-20]	; 0xffffffec
    8ea0:	cmp	r3, #0
    8ea4:	bne	8e54 <rb_md5_crypt+0x2b8>
    8ea8:	ldr	r3, [pc, #1180]	; 934c <rb_md5_crypt+0x7b0>
    8eac:	add	r3, pc, r3
    8eb0:	ldr	r3, [r3]
    8eb4:	mov	r2, #120	; 0x78
    8eb8:	mov	r1, r3
    8ebc:	ldr	r3, [pc, #1164]	; 9350 <rb_md5_crypt+0x7b4>
    8ec0:	add	r3, pc, r3
    8ec4:	mov	r0, r3
    8ec8:	bl	46c0 <rb_strlcpy@plt>
    8ecc:	ldr	r3, [pc, #1152]	; 9354 <rb_md5_crypt+0x7b8>
    8ed0:	add	r3, pc, r3
    8ed4:	ldr	r3, [r3]
    8ed8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    8edc:	mov	r1, r3
    8ee0:	ldr	r3, [pc, #1136]	; 9358 <rb_md5_crypt+0x7bc>
    8ee4:	add	r3, pc, r3
    8ee8:	mov	r0, r3
    8eec:	bl	48dc <strncat@plt>
    8ef0:	mov	r2, #120	; 0x78
    8ef4:	ldr	r3, [pc, #1120]	; 935c <rb_md5_crypt+0x7c0>
    8ef8:	add	r3, pc, r3
    8efc:	mov	r1, r3
    8f00:	ldr	r3, [pc, #1112]	; 9360 <rb_md5_crypt+0x7c4>
    8f04:	add	r3, pc, r3
    8f08:	mov	r0, r3
    8f0c:	bl	4bb8 <rb_strlcat@plt>
    8f10:	sub	r2, fp, #116	; 0x74
    8f14:	sub	r3, fp, #220	; 0xdc
    8f18:	mov	r1, r2
    8f1c:	mov	r0, r3
    8f20:	bl	748c <MD5Final>
    8f24:	mov	r3, #0
    8f28:	str	r3, [fp, #-20]	; 0xffffffec
    8f2c:	b	9080 <rb_md5_crypt+0x4e4>
    8f30:	sub	r3, fp, #204	; 0xcc
    8f34:	mov	r0, r3
    8f38:	bl	71dc <MD5Init>
    8f3c:	ldr	r3, [fp, #-20]	; 0xffffffec
    8f40:	and	r3, r3, #1
    8f44:	cmp	r3, #0
    8f48:	beq	8f6c <rb_md5_crypt+0x3d0>
    8f4c:	ldr	r0, [fp, #-224]	; 0xffffff20
    8f50:	bl	4810 <strlen@plt>
    8f54:	mov	r2, r0
    8f58:	sub	r3, fp, #204	; 0xcc
    8f5c:	ldr	r1, [fp, #-224]	; 0xffffff20
    8f60:	mov	r0, r3
    8f64:	bl	7258 <MD5Update>
    8f68:	b	8f80 <rb_md5_crypt+0x3e4>
    8f6c:	sub	r1, fp, #220	; 0xdc
    8f70:	sub	r3, fp, #204	; 0xcc
    8f74:	mov	r2, #16
    8f78:	mov	r0, r3
    8f7c:	bl	7258 <MD5Update>
    8f80:	ldr	r1, [fp, #-20]	; 0xffffffec
    8f84:	movw	r3, #43691	; 0xaaab
    8f88:	movt	r3, #43690	; 0xaaaa
    8f8c:	umull	r2, r3, r3, r1
    8f90:	lsr	r2, r3, #1
    8f94:	mov	r3, r2
    8f98:	lsl	r3, r3, #1
    8f9c:	add	r3, r3, r2
    8fa0:	sub	r2, r1, r3
    8fa4:	cmp	r2, #0
    8fa8:	beq	8fc8 <rb_md5_crypt+0x42c>
    8fac:	ldr	r3, [pc, #944]	; 9364 <rb_md5_crypt+0x7c8>
    8fb0:	add	r3, pc, r3
    8fb4:	ldr	r1, [r3]
    8fb8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    8fbc:	sub	r3, fp, #204	; 0xcc
    8fc0:	mov	r0, r3
    8fc4:	bl	7258 <MD5Update>
    8fc8:	ldr	r1, [fp, #-20]	; 0xffffffec
    8fcc:	movw	r3, #18725	; 0x4925
    8fd0:	movt	r3, #9362	; 0x2492
    8fd4:	umull	r2, r3, r3, r1
    8fd8:	sub	r2, r1, r3
    8fdc:	lsr	r2, r2, #1
    8fe0:	add	r3, r3, r2
    8fe4:	lsr	r2, r3, #2
    8fe8:	mov	r3, r2
    8fec:	lsl	r3, r3, #3
    8ff0:	sub	r3, r3, r2
    8ff4:	sub	r2, r1, r3
    8ff8:	cmp	r2, #0
    8ffc:	beq	901c <rb_md5_crypt+0x480>
    9000:	ldr	r0, [fp, #-224]	; 0xffffff20
    9004:	bl	4810 <strlen@plt>
    9008:	mov	r2, r0
    900c:	sub	r3, fp, #204	; 0xcc
    9010:	ldr	r1, [fp, #-224]	; 0xffffff20
    9014:	mov	r0, r3
    9018:	bl	7258 <MD5Update>
    901c:	ldr	r3, [fp, #-20]	; 0xffffffec
    9020:	and	r3, r3, #1
    9024:	cmp	r3, #0
    9028:	beq	9044 <rb_md5_crypt+0x4a8>
    902c:	sub	r1, fp, #220	; 0xdc
    9030:	sub	r3, fp, #204	; 0xcc
    9034:	mov	r2, #16
    9038:	mov	r0, r3
    903c:	bl	7258 <MD5Update>
    9040:	b	9060 <rb_md5_crypt+0x4c4>
    9044:	ldr	r0, [fp, #-224]	; 0xffffff20
    9048:	bl	4810 <strlen@plt>
    904c:	mov	r2, r0
    9050:	sub	r3, fp, #204	; 0xcc
    9054:	ldr	r1, [fp, #-224]	; 0xffffff20
    9058:	mov	r0, r3
    905c:	bl	7258 <MD5Update>
    9060:	sub	r2, fp, #204	; 0xcc
    9064:	sub	r3, fp, #220	; 0xdc
    9068:	mov	r1, r2
    906c:	mov	r0, r3
    9070:	bl	748c <MD5Final>
    9074:	ldr	r3, [fp, #-20]	; 0xffffffec
    9078:	add	r3, r3, #1
    907c:	str	r3, [fp, #-20]	; 0xffffffec
    9080:	ldr	r3, [fp, #-20]	; 0xffffffec
    9084:	cmp	r3, #1000	; 0x3e8
    9088:	bcc	8f30 <rb_md5_crypt+0x394>
    908c:	ldr	r3, [pc, #724]	; 9368 <rb_md5_crypt+0x7cc>
    9090:	add	r3, pc, r3
    9094:	mov	r0, r3
    9098:	bl	4810 <strlen@plt>
    909c:	mov	r2, r0
    90a0:	ldr	r3, [pc, #708]	; 936c <rb_md5_crypt+0x7d0>
    90a4:	add	r3, pc, r3
    90a8:	add	r2, r2, r3
    90ac:	ldr	r3, [pc, #700]	; 9370 <rb_md5_crypt+0x7d4>
    90b0:	add	r3, pc, r3
    90b4:	str	r2, [r3]
    90b8:	ldrb	r3, [fp, #-220]	; 0xffffff24
    90bc:	lsl	r2, r3, #16
    90c0:	ldrb	r3, [fp, #-214]	; 0xffffff2a
    90c4:	lsl	r3, r3, #8
    90c8:	orr	r3, r2, r3
    90cc:	ldrb	r2, [fp, #-208]	; 0xffffff30
    90d0:	orr	r3, r3, r2
    90d4:	str	r3, [fp, #-28]	; 0xffffffe4
    90d8:	ldr	r3, [pc, #660]	; 9374 <rb_md5_crypt+0x7d8>
    90dc:	add	r3, pc, r3
    90e0:	ldr	r3, [r3]
    90e4:	mov	r2, #4
    90e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    90ec:	mov	r0, r3
    90f0:	bl	7164 <_crypt_to64>
    90f4:	ldr	r3, [pc, #636]	; 9378 <rb_md5_crypt+0x7dc>
    90f8:	add	r3, pc, r3
    90fc:	ldr	r3, [r3]
    9100:	add	r2, r3, #4
    9104:	ldr	r3, [pc, #624]	; 937c <rb_md5_crypt+0x7e0>
    9108:	add	r3, pc, r3
    910c:	str	r2, [r3]
    9110:	ldrb	r3, [fp, #-219]	; 0xffffff25
    9114:	lsl	r2, r3, #16
    9118:	ldrb	r3, [fp, #-213]	; 0xffffff2b
    911c:	lsl	r3, r3, #8
    9120:	orr	r3, r2, r3
    9124:	ldrb	r2, [fp, #-207]	; 0xffffff31
    9128:	orr	r3, r3, r2
    912c:	str	r3, [fp, #-28]	; 0xffffffe4
    9130:	ldr	r3, [pc, #584]	; 9380 <rb_md5_crypt+0x7e4>
    9134:	add	r3, pc, r3
    9138:	ldr	r3, [r3]
    913c:	mov	r2, #4
    9140:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9144:	mov	r0, r3
    9148:	bl	7164 <_crypt_to64>
    914c:	ldr	r3, [pc, #560]	; 9384 <rb_md5_crypt+0x7e8>
    9150:	add	r3, pc, r3
    9154:	ldr	r3, [r3]
    9158:	add	r2, r3, #4
    915c:	ldr	r3, [pc, #548]	; 9388 <rb_md5_crypt+0x7ec>
    9160:	add	r3, pc, r3
    9164:	str	r2, [r3]
    9168:	ldrb	r3, [fp, #-218]	; 0xffffff26
    916c:	lsl	r2, r3, #16
    9170:	ldrb	r3, [fp, #-212]	; 0xffffff2c
    9174:	lsl	r3, r3, #8
    9178:	orr	r3, r2, r3
    917c:	ldrb	r2, [fp, #-206]	; 0xffffff32
    9180:	orr	r3, r3, r2
    9184:	str	r3, [fp, #-28]	; 0xffffffe4
    9188:	ldr	r3, [pc, #508]	; 938c <rb_md5_crypt+0x7f0>
    918c:	add	r3, pc, r3
    9190:	ldr	r3, [r3]
    9194:	mov	r2, #4
    9198:	ldr	r1, [fp, #-28]	; 0xffffffe4
    919c:	mov	r0, r3
    91a0:	bl	7164 <_crypt_to64>
    91a4:	ldr	r3, [pc, #484]	; 9390 <rb_md5_crypt+0x7f4>
    91a8:	add	r3, pc, r3
    91ac:	ldr	r3, [r3]
    91b0:	add	r2, r3, #4
    91b4:	ldr	r3, [pc, #472]	; 9394 <rb_md5_crypt+0x7f8>
    91b8:	add	r3, pc, r3
    91bc:	str	r2, [r3]
    91c0:	ldrb	r3, [fp, #-217]	; 0xffffff27
    91c4:	lsl	r2, r3, #16
    91c8:	ldrb	r3, [fp, #-211]	; 0xffffff2d
    91cc:	lsl	r3, r3, #8
    91d0:	orr	r3, r2, r3
    91d4:	ldrb	r2, [fp, #-205]	; 0xffffff33
    91d8:	orr	r3, r3, r2
    91dc:	str	r3, [fp, #-28]	; 0xffffffe4
    91e0:	ldr	r3, [pc, #432]	; 9398 <rb_md5_crypt+0x7fc>
    91e4:	add	r3, pc, r3
    91e8:	ldr	r3, [r3]
    91ec:	mov	r2, #4
    91f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    91f4:	mov	r0, r3
    91f8:	bl	7164 <_crypt_to64>
    91fc:	ldr	r3, [pc, #408]	; 939c <rb_md5_crypt+0x800>
    9200:	add	r3, pc, r3
    9204:	ldr	r3, [r3]
    9208:	add	r2, r3, #4
    920c:	ldr	r3, [pc, #396]	; 93a0 <rb_md5_crypt+0x804>
    9210:	add	r3, pc, r3
    9214:	str	r2, [r3]
    9218:	ldrb	r3, [fp, #-216]	; 0xffffff28
    921c:	lsl	r2, r3, #16
    9220:	ldrb	r3, [fp, #-210]	; 0xffffff2e
    9224:	lsl	r3, r3, #8
    9228:	orr	r3, r2, r3
    922c:	ldrb	r2, [fp, #-215]	; 0xffffff29
    9230:	orr	r3, r3, r2
    9234:	str	r3, [fp, #-28]	; 0xffffffe4
    9238:	ldr	r3, [pc, #356]	; 93a4 <rb_md5_crypt+0x808>
    923c:	add	r3, pc, r3
    9240:	ldr	r3, [r3]
    9244:	mov	r2, #4
    9248:	ldr	r1, [fp, #-28]	; 0xffffffe4
    924c:	mov	r0, r3
    9250:	bl	7164 <_crypt_to64>
    9254:	ldr	r3, [pc, #332]	; 93a8 <rb_md5_crypt+0x80c>
    9258:	add	r3, pc, r3
    925c:	ldr	r3, [r3]
    9260:	add	r2, r3, #4
    9264:	ldr	r3, [pc, #320]	; 93ac <rb_md5_crypt+0x810>
    9268:	add	r3, pc, r3
    926c:	str	r2, [r3]
    9270:	ldrb	r3, [fp, #-209]	; 0xffffff2f
    9274:	str	r3, [fp, #-28]	; 0xffffffe4
    9278:	ldr	r3, [pc, #304]	; 93b0 <rb_md5_crypt+0x814>
    927c:	add	r3, pc, r3
    9280:	ldr	r3, [r3]
    9284:	mov	r2, #2
    9288:	ldr	r1, [fp, #-28]	; 0xffffffe4
    928c:	mov	r0, r3
    9290:	bl	7164 <_crypt_to64>
    9294:	ldr	r3, [pc, #280]	; 93b4 <rb_md5_crypt+0x818>
    9298:	add	r3, pc, r3
    929c:	ldr	r3, [r3]
    92a0:	add	r2, r3, #2
    92a4:	ldr	r3, [pc, #268]	; 93b8 <rb_md5_crypt+0x81c>
    92a8:	add	r3, pc, r3
    92ac:	str	r2, [r3]
    92b0:	ldr	r3, [pc, #260]	; 93bc <rb_md5_crypt+0x820>
    92b4:	add	r3, pc, r3
    92b8:	ldr	r3, [r3]
    92bc:	mov	r2, #0
    92c0:	strb	r2, [r3]
    92c4:	sub	r3, fp, #220	; 0xdc
    92c8:	mov	r2, #16
    92cc:	mov	r1, #0
    92d0:	mov	r0, r3
    92d4:	bl	4648 <memset@plt>
    92d8:	ldr	r3, [pc, #224]	; 93c0 <rb_md5_crypt+0x824>
    92dc:	add	r3, pc, r3
    92e0:	mov	r0, r3
    92e4:	sub	sp, fp, #12
    92e8:	ldrd	r4, [sp]
    92ec:	ldr	fp, [sp, #8]
    92f0:	add	sp, sp, #12
    92f4:	pop	{pc}		; (ldr pc, [sp], #4)
    92f8:	.word	0x0003f208
    92fc:	.word	0x0003f1f8
    9300:	.word	0x0002c88c
    9304:	.word	0x0002c880
    9308:	.word	0x0003f1ac
    930c:	.word	0x0002c840
    9310:	.word	0x0003f184
    9314:	.word	0x0003f178
    9318:	.word	0x0003f18c
    931c:	.word	0x0003f17c
    9320:	.word	0x0003f16c
    9324:	.word	0x0003f160
    9328:	.word	0x0003f148
    932c:	.word	0x0003f110
    9330:	.word	0x0003f120
    9334:	.word	0x0003f10c
    9338:	.word	0x0003f0e0
    933c:	.word	0x0002c744
    9340:	.word	0x0002c738
    9344:	.word	0x0003f070
    9348:	.word	0x0003f02c
    934c:	.word	0x0002c5b8
    9350:	.word	0x0003ef28
    9354:	.word	0x0003eef4
    9358:	.word	0x0003ef04
    935c:	.word	0x0001a1c4
    9360:	.word	0x0003eee4
    9364:	.word	0x0003ee14
    9368:	.word	0x0003ed58
    936c:	.word	0x0003ed44
    9370:	.word	0x0003edb0
    9374:	.word	0x0003ed84
    9378:	.word	0x0003ed68
    937c:	.word	0x0003ed58
    9380:	.word	0x0003ed2c
    9384:	.word	0x0003ed10
    9388:	.word	0x0003ed00
    938c:	.word	0x0003ecd4
    9390:	.word	0x0003ecb8
    9394:	.word	0x0003eca8
    9398:	.word	0x0003ec7c
    939c:	.word	0x0003ec60
    93a0:	.word	0x0003ec50
    93a4:	.word	0x0003ec24
    93a8:	.word	0x0003ec08
    93ac:	.word	0x0003ebf8
    93b0:	.word	0x0003ebe4
    93b4:	.word	0x0003ebc8
    93b8:	.word	0x0003ebb8
    93bc:	.word	0x0003ebac
    93c0:	.word	0x0003eb0c

000093c4 <rb_sha256_process_block>:
    93c4:	push	{fp}		; (str fp, [sp, #-4]!)
    93c8:	add	fp, sp, #0
    93cc:	sub	sp, sp, #364	; 0x16c
    93d0:	str	r0, [fp, #-352]	; 0xfffffea0
    93d4:	str	r1, [fp, #-356]	; 0xfffffe9c
    93d8:	str	r2, [fp, #-360]	; 0xfffffe98
    93dc:	ldr	r3, [fp, #-352]	; 0xfffffea0
    93e0:	str	r3, [fp, #-8]
    93e4:	ldr	r3, [fp, #-356]	; 0xfffffe9c
    93e8:	lsr	r3, r3, #2
    93ec:	str	r3, [fp, #-12]
    93f0:	ldr	r3, [fp, #-360]	; 0xfffffe98
    93f4:	ldr	r3, [r3]
    93f8:	str	r3, [fp, #-16]
    93fc:	ldr	r3, [fp, #-360]	; 0xfffffe98
    9400:	ldr	r3, [r3, #4]
    9404:	str	r3, [fp, #-20]	; 0xffffffec
    9408:	ldr	r3, [fp, #-360]	; 0xfffffe98
    940c:	ldr	r3, [r3, #8]
    9410:	str	r3, [fp, #-24]	; 0xffffffe8
    9414:	ldr	r3, [fp, #-360]	; 0xfffffe98
    9418:	ldr	r3, [r3, #12]
    941c:	str	r3, [fp, #-28]	; 0xffffffe4
    9420:	ldr	r3, [fp, #-360]	; 0xfffffe98
    9424:	ldr	r3, [r3, #16]
    9428:	str	r3, [fp, #-32]	; 0xffffffe0
    942c:	ldr	r3, [fp, #-360]	; 0xfffffe98
    9430:	ldr	r3, [r3, #20]
    9434:	str	r3, [fp, #-36]	; 0xffffffdc
    9438:	ldr	r3, [fp, #-360]	; 0xfffffe98
    943c:	ldr	r3, [r3, #24]
    9440:	str	r3, [fp, #-40]	; 0xffffffd8
    9444:	ldr	r3, [fp, #-360]	; 0xfffffe98
    9448:	ldr	r3, [r3, #28]
    944c:	str	r3, [fp, #-44]	; 0xffffffd4
    9450:	ldr	r3, [fp, #-360]	; 0xfffffe98
    9454:	ldr	r2, [r3, #32]
    9458:	ldr	r3, [fp, #-356]	; 0xfffffe9c
    945c:	add	r2, r2, r3
    9460:	ldr	r3, [fp, #-360]	; 0xfffffe98
    9464:	str	r2, [r3, #32]
    9468:	ldr	r3, [fp, #-360]	; 0xfffffe98
    946c:	ldr	r3, [r3, #32]
    9470:	ldr	r2, [fp, #-356]	; 0xfffffe9c
    9474:	cmp	r2, r3
    9478:	bls	9850 <rb_sha256_process_block+0x48c>
    947c:	ldr	r3, [fp, #-360]	; 0xfffffe98
    9480:	ldr	r3, [r3, #36]	; 0x24
    9484:	add	r2, r3, #1
    9488:	ldr	r3, [fp, #-360]	; 0xfffffe98
    948c:	str	r2, [r3, #36]	; 0x24
    9490:	b	9850 <rb_sha256_process_block+0x48c>
    9494:	ldr	r3, [fp, #-16]
    9498:	str	r3, [fp, #-52]	; 0xffffffcc
    949c:	ldr	r3, [fp, #-20]	; 0xffffffec
    94a0:	str	r3, [fp, #-56]	; 0xffffffc8
    94a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    94a8:	str	r3, [fp, #-60]	; 0xffffffc4
    94ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
    94b0:	str	r3, [fp, #-64]	; 0xffffffc0
    94b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    94b8:	str	r3, [fp, #-68]	; 0xffffffbc
    94bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    94c0:	str	r3, [fp, #-72]	; 0xffffffb8
    94c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    94c8:	str	r3, [fp, #-76]	; 0xffffffb4
    94cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    94d0:	str	r3, [fp, #-80]	; 0xffffffb0
    94d4:	mov	r3, #0
    94d8:	str	r3, [fp, #-48]	; 0xffffffd0
    94dc:	b	9550 <rb_sha256_process_block+0x18c>
    94e0:	ldr	r3, [fp, #-8]
    94e4:	ldr	r3, [r3]
    94e8:	lsl	r2, r3, #24
    94ec:	ldr	r3, [fp, #-8]
    94f0:	ldr	r3, [r3]
    94f4:	lsl	r3, r3, #8
    94f8:	and	r3, r3, #16711680	; 0xff0000
    94fc:	orr	r2, r2, r3
    9500:	ldr	r3, [fp, #-8]
    9504:	ldr	r3, [r3]
    9508:	lsr	r3, r3, #8
    950c:	and	r3, r3, #65280	; 0xff00
    9510:	orr	r2, r2, r3
    9514:	ldr	r3, [fp, #-8]
    9518:	ldr	r3, [r3]
    951c:	lsr	r3, r3, #24
    9520:	orr	r2, r2, r3
    9524:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9528:	lsl	r3, r3, #2
    952c:	sub	r1, fp, #4
    9530:	add	r3, r1, r3
    9534:	str	r2, [r3, #-340]	; 0xfffffeac
    9538:	ldr	r3, [fp, #-8]
    953c:	add	r3, r3, #4
    9540:	str	r3, [fp, #-8]
    9544:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9548:	add	r3, r3, #1
    954c:	str	r3, [fp, #-48]	; 0xffffffd0
    9550:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9554:	cmp	r3, #15
    9558:	bls	94e0 <rb_sha256_process_block+0x11c>
    955c:	mov	r3, #16
    9560:	str	r3, [fp, #-48]	; 0xffffffd0
    9564:	b	967c <rb_sha256_process_block+0x2b8>
    9568:	ldr	r3, [fp, #-48]	; 0xffffffd0
    956c:	sub	r3, r3, #2
    9570:	lsl	r3, r3, #2
    9574:	sub	r2, fp, #4
    9578:	add	r3, r2, r3
    957c:	ldr	r3, [r3, #-340]	; 0xfffffeac
    9580:	ror	r2, r3, #17
    9584:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9588:	sub	r3, r3, #2
    958c:	lsl	r3, r3, #2
    9590:	sub	r1, fp, #4
    9594:	add	r3, r1, r3
    9598:	ldr	r3, [r3, #-340]	; 0xfffffeac
    959c:	ror	r3, r3, #19
    95a0:	eor	r2, r2, r3
    95a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    95a8:	sub	r3, r3, #2
    95ac:	lsl	r3, r3, #2
    95b0:	sub	r1, fp, #4
    95b4:	add	r3, r1, r3
    95b8:	ldr	r3, [r3, #-340]	; 0xfffffeac
    95bc:	lsr	r3, r3, #10
    95c0:	eor	r2, r2, r3
    95c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    95c8:	sub	r3, r3, #7
    95cc:	lsl	r3, r3, #2
    95d0:	sub	r1, fp, #4
    95d4:	add	r3, r1, r3
    95d8:	ldr	r3, [r3, #-340]	; 0xfffffeac
    95dc:	add	r2, r2, r3
    95e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    95e4:	sub	r3, r3, #15
    95e8:	lsl	r3, r3, #2
    95ec:	sub	r1, fp, #4
    95f0:	add	r3, r1, r3
    95f4:	ldr	r3, [r3, #-340]	; 0xfffffeac
    95f8:	ror	r1, r3, #7
    95fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9600:	sub	r3, r3, #15
    9604:	lsl	r3, r3, #2
    9608:	sub	r0, fp, #4
    960c:	add	r3, r0, r3
    9610:	ldr	r3, [r3, #-340]	; 0xfffffeac
    9614:	ror	r3, r3, #18
    9618:	eor	r1, r1, r3
    961c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9620:	sub	r3, r3, #15
    9624:	lsl	r3, r3, #2
    9628:	sub	r0, fp, #4
    962c:	add	r3, r0, r3
    9630:	ldr	r3, [r3, #-340]	; 0xfffffeac
    9634:	lsr	r3, r3, #3
    9638:	eor	r3, r3, r1
    963c:	add	r2, r2, r3
    9640:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9644:	sub	r3, r3, #16
    9648:	lsl	r3, r3, #2
    964c:	sub	r1, fp, #4
    9650:	add	r3, r1, r3
    9654:	ldr	r3, [r3, #-340]	; 0xfffffeac
    9658:	add	r2, r2, r3
    965c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9660:	lsl	r3, r3, #2
    9664:	sub	r1, fp, #4
    9668:	add	r3, r1, r3
    966c:	str	r2, [r3, #-340]	; 0xfffffeac
    9670:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9674:	add	r3, r3, #1
    9678:	str	r3, [fp, #-48]	; 0xffffffd0
    967c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9680:	cmp	r3, #63	; 0x3f
    9684:	bls	9568 <rb_sha256_process_block+0x1a4>
    9688:	mov	r3, #0
    968c:	str	r3, [fp, #-48]	; 0xffffffd0
    9690:	b	97b8 <rb_sha256_process_block+0x3f4>
    9694:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9698:	ror	r2, r3, #6
    969c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    96a0:	ror	r3, r3, #11
    96a4:	eor	r2, r2, r3
    96a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    96ac:	ror	r3, r3, #25
    96b0:	eor	r2, r2, r3
    96b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    96b8:	add	r2, r2, r3
    96bc:	ldr	r1, [fp, #-32]	; 0xffffffe0
    96c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    96c4:	and	r1, r1, r3
    96c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    96cc:	mvn	r0, r3
    96d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    96d4:	and	r3, r3, r0
    96d8:	eor	r3, r3, r1
    96dc:	add	r2, r2, r3
    96e0:	ldr	r3, [pc, #484]	; 98cc <rb_sha256_process_block+0x508>
    96e4:	add	r3, pc, r3
    96e8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    96ec:	ldr	r3, [r3, r1, lsl #2]
    96f0:	add	r2, r2, r3
    96f4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    96f8:	lsl	r3, r3, #2
    96fc:	sub	r1, fp, #4
    9700:	add	r3, r1, r3
    9704:	ldr	r3, [r3, #-340]	; 0xfffffeac
    9708:	add	r3, r2, r3
    970c:	str	r3, [fp, #-84]	; 0xffffffac
    9710:	ldr	r3, [fp, #-16]
    9714:	ror	r2, r3, #2
    9718:	ldr	r3, [fp, #-16]
    971c:	ror	r3, r3, #13
    9720:	eor	r2, r2, r3
    9724:	ldr	r3, [fp, #-16]
    9728:	ror	r3, r3, #22
    972c:	eor	r2, r2, r3
    9730:	ldr	r1, [fp, #-20]	; 0xffffffec
    9734:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9738:	eor	r1, r1, r3
    973c:	ldr	r3, [fp, #-16]
    9740:	and	r1, r1, r3
    9744:	ldr	r0, [fp, #-20]	; 0xffffffec
    9748:	ldr	r3, [fp, #-24]	; 0xffffffe8
    974c:	and	r3, r3, r0
    9750:	eor	r3, r3, r1
    9754:	add	r3, r2, r3
    9758:	str	r3, [fp, #-88]	; 0xffffffa8
    975c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9760:	str	r3, [fp, #-44]	; 0xffffffd4
    9764:	ldr	r3, [fp, #-36]	; 0xffffffdc
    9768:	str	r3, [fp, #-40]	; 0xffffffd8
    976c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9770:	str	r3, [fp, #-36]	; 0xffffffdc
    9774:	ldr	r2, [fp, #-28]	; 0xffffffe4
    9778:	ldr	r3, [fp, #-84]	; 0xffffffac
    977c:	add	r3, r2, r3
    9780:	str	r3, [fp, #-32]	; 0xffffffe0
    9784:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9788:	str	r3, [fp, #-28]	; 0xffffffe4
    978c:	ldr	r3, [fp, #-20]	; 0xffffffec
    9790:	str	r3, [fp, #-24]	; 0xffffffe8
    9794:	ldr	r3, [fp, #-16]
    9798:	str	r3, [fp, #-20]	; 0xffffffec
    979c:	ldr	r2, [fp, #-84]	; 0xffffffac
    97a0:	ldr	r3, [fp, #-88]	; 0xffffffa8
    97a4:	add	r3, r2, r3
    97a8:	str	r3, [fp, #-16]
    97ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
    97b0:	add	r3, r3, #1
    97b4:	str	r3, [fp, #-48]	; 0xffffffd0
    97b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    97bc:	cmp	r3, #63	; 0x3f
    97c0:	bls	9694 <rb_sha256_process_block+0x2d0>
    97c4:	ldr	r2, [fp, #-16]
    97c8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    97cc:	add	r3, r2, r3
    97d0:	str	r3, [fp, #-16]
    97d4:	ldr	r2, [fp, #-20]	; 0xffffffec
    97d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    97dc:	add	r3, r2, r3
    97e0:	str	r3, [fp, #-20]	; 0xffffffec
    97e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    97e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    97ec:	add	r3, r2, r3
    97f0:	str	r3, [fp, #-24]	; 0xffffffe8
    97f4:	ldr	r2, [fp, #-28]	; 0xffffffe4
    97f8:	ldr	r3, [fp, #-64]	; 0xffffffc0
    97fc:	add	r3, r2, r3
    9800:	str	r3, [fp, #-28]	; 0xffffffe4
    9804:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9808:	ldr	r3, [fp, #-68]	; 0xffffffbc
    980c:	add	r3, r2, r3
    9810:	str	r3, [fp, #-32]	; 0xffffffe0
    9814:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9818:	ldr	r3, [fp, #-72]	; 0xffffffb8
    981c:	add	r3, r2, r3
    9820:	str	r3, [fp, #-36]	; 0xffffffdc
    9824:	ldr	r2, [fp, #-40]	; 0xffffffd8
    9828:	ldr	r3, [fp, #-76]	; 0xffffffb4
    982c:	add	r3, r2, r3
    9830:	str	r3, [fp, #-40]	; 0xffffffd8
    9834:	ldr	r2, [fp, #-44]	; 0xffffffd4
    9838:	ldr	r3, [fp, #-80]	; 0xffffffb0
    983c:	add	r3, r2, r3
    9840:	str	r3, [fp, #-44]	; 0xffffffd4
    9844:	ldr	r3, [fp, #-12]
    9848:	sub	r3, r3, #16
    984c:	str	r3, [fp, #-12]
    9850:	ldr	r3, [fp, #-12]
    9854:	cmp	r3, #0
    9858:	bne	9494 <rb_sha256_process_block+0xd0>
    985c:	ldr	r3, [fp, #-360]	; 0xfffffe98
    9860:	ldr	r2, [fp, #-16]
    9864:	str	r2, [r3]
    9868:	ldr	r3, [fp, #-360]	; 0xfffffe98
    986c:	ldr	r2, [fp, #-20]	; 0xffffffec
    9870:	str	r2, [r3, #4]
    9874:	ldr	r3, [fp, #-360]	; 0xfffffe98
    9878:	ldr	r2, [fp, #-24]	; 0xffffffe8
    987c:	str	r2, [r3, #8]
    9880:	ldr	r3, [fp, #-360]	; 0xfffffe98
    9884:	ldr	r2, [fp, #-28]	; 0xffffffe4
    9888:	str	r2, [r3, #12]
    988c:	ldr	r3, [fp, #-360]	; 0xfffffe98
    9890:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9894:	str	r2, [r3, #16]
    9898:	ldr	r3, [fp, #-360]	; 0xfffffe98
    989c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    98a0:	str	r2, [r3, #20]
    98a4:	ldr	r3, [fp, #-360]	; 0xfffffe98
    98a8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    98ac:	str	r2, [r3, #24]
    98b0:	ldr	r3, [fp, #-360]	; 0xfffffe98
    98b4:	ldr	r2, [fp, #-44]	; 0xffffffd4
    98b8:	str	r2, [r3, #28]
    98bc:	nop	{0}
    98c0:	add	sp, fp, #0
    98c4:	pop	{fp}		; (ldr fp, [sp], #4)
    98c8:	bx	lr
    98cc:	.word	0x00019a1c

000098d0 <rb_sha256_init_ctx>:
    98d0:	push	{fp}		; (str fp, [sp, #-4]!)
    98d4:	add	fp, sp, #0
    98d8:	sub	sp, sp, #12
    98dc:	str	r0, [fp, #-8]
    98e0:	ldr	r2, [fp, #-8]
    98e4:	movw	r3, #58983	; 0xe667
    98e8:	movt	r3, #27145	; 0x6a09
    98ec:	str	r3, [r2]
    98f0:	ldr	r2, [fp, #-8]
    98f4:	movw	r3, #44677	; 0xae85
    98f8:	movt	r3, #47975	; 0xbb67
    98fc:	str	r3, [r2, #4]
    9900:	ldr	r2, [fp, #-8]
    9904:	movw	r3, #62322	; 0xf372
    9908:	movt	r3, #15470	; 0x3c6e
    990c:	str	r3, [r2, #8]
    9910:	ldr	r2, [fp, #-8]
    9914:	movw	r3, #62778	; 0xf53a
    9918:	movt	r3, #42319	; 0xa54f
    991c:	str	r3, [r2, #12]
    9920:	ldr	r2, [fp, #-8]
    9924:	movw	r3, #21119	; 0x527f
    9928:	movt	r3, #20750	; 0x510e
    992c:	str	r3, [r2, #16]
    9930:	ldr	r2, [fp, #-8]
    9934:	movw	r3, #26764	; 0x688c
    9938:	movt	r3, #39685	; 0x9b05
    993c:	str	r3, [r2, #20]
    9940:	ldr	r2, [fp, #-8]
    9944:	movw	r3, #55723	; 0xd9ab
    9948:	movt	r3, #8067	; 0x1f83
    994c:	str	r3, [r2, #24]
    9950:	ldr	r2, [fp, #-8]
    9954:	movw	r3, #52505	; 0xcd19
    9958:	movt	r3, #23520	; 0x5be0
    995c:	str	r3, [r2, #28]
    9960:	ldr	r3, [fp, #-8]
    9964:	mov	r2, #0
    9968:	str	r2, [r3, #36]	; 0x24
    996c:	ldr	r3, [fp, #-8]
    9970:	ldr	r2, [r3, #36]	; 0x24
    9974:	ldr	r3, [fp, #-8]
    9978:	str	r2, [r3, #32]
    997c:	ldr	r3, [fp, #-8]
    9980:	mov	r2, #0
    9984:	str	r2, [r3, #40]	; 0x28
    9988:	nop	{0}
    998c:	add	sp, fp, #0
    9990:	pop	{fp}		; (ldr fp, [sp], #4)
    9994:	bx	lr

00009998 <rb_sha256_finish_ctx>:
    9998:	str	fp, [sp, #-8]!
    999c:	str	lr, [sp, #4]
    99a0:	add	fp, sp, #4
    99a4:	sub	sp, sp, #24
    99a8:	str	r0, [fp, #-24]	; 0xffffffe8
    99ac:	str	r1, [fp, #-28]	; 0xffffffe4
    99b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    99b4:	ldr	r3, [r3, #40]	; 0x28
    99b8:	str	r3, [fp, #-12]
    99bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    99c0:	ldr	r2, [r3, #32]
    99c4:	ldr	r3, [fp, #-12]
    99c8:	add	r2, r2, r3
    99cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    99d0:	str	r2, [r3, #32]
    99d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    99d8:	ldr	r3, [r3, #32]
    99dc:	ldr	r2, [fp, #-12]
    99e0:	cmp	r2, r3
    99e4:	bls	99fc <rb_sha256_finish_ctx+0x64>
    99e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    99ec:	ldr	r3, [r3, #36]	; 0x24
    99f0:	add	r2, r3, #1
    99f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    99f8:	str	r2, [r3, #36]	; 0x24
    99fc:	ldr	r3, [fp, #-12]
    9a00:	cmp	r3, #55	; 0x37
    9a04:	bls	9a14 <rb_sha256_finish_ctx+0x7c>
    9a08:	ldr	r3, [fp, #-12]
    9a0c:	rsb	r3, r3, #120	; 0x78
    9a10:	b	9a1c <rb_sha256_finish_ctx+0x84>
    9a14:	ldr	r3, [fp, #-12]
    9a18:	rsb	r3, r3, #56	; 0x38
    9a1c:	str	r3, [fp, #-16]
    9a20:	ldr	r3, [fp, #-12]
    9a24:	add	r3, r3, #40	; 0x28
    9a28:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9a2c:	add	r3, r2, r3
    9a30:	add	r3, r3, #4
    9a34:	ldr	r2, [fp, #-16]
    9a38:	ldr	r1, [pc, #516]	; 9c44 <rb_sha256_finish_ctx+0x2ac>
    9a3c:	add	r1, pc, r1
    9a40:	mov	r0, r3
    9a44:	bl	4834 <memcpy@plt>
    9a48:	ldr	r2, [fp, #-12]
    9a4c:	ldr	r3, [fp, #-16]
    9a50:	add	r3, r2, r3
    9a54:	add	r3, r3, #4
    9a58:	add	r3, r3, #40	; 0x28
    9a5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9a60:	add	r3, r2, r3
    9a64:	add	r3, r3, #4
    9a68:	str	r3, [fp, #-20]	; 0xffffffec
    9a6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9a70:	ldr	r3, [r3, #32]
    9a74:	lsl	r2, r3, #27
    9a78:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9a7c:	ldr	r3, [r3, #32]
    9a80:	lsl	r3, r3, #11
    9a84:	and	r3, r3, #16711680	; 0xff0000
    9a88:	orr	r2, r2, r3
    9a8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9a90:	ldr	r3, [r3, #32]
    9a94:	lsl	r3, r3, #3
    9a98:	lsr	r3, r3, #8
    9a9c:	and	r3, r3, #65280	; 0xff00
    9aa0:	orr	r2, r2, r3
    9aa4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9aa8:	ldr	r3, [r3, #32]
    9aac:	lsl	r3, r3, #3
    9ab0:	lsr	r3, r3, #24
    9ab4:	orr	r2, r2, r3
    9ab8:	ldr	r3, [fp, #-20]	; 0xffffffec
    9abc:	str	r2, [r3]
    9ac0:	ldr	r2, [fp, #-12]
    9ac4:	ldr	r3, [fp, #-16]
    9ac8:	add	r3, r2, r3
    9acc:	add	r3, r3, #40	; 0x28
    9ad0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9ad4:	add	r3, r2, r3
    9ad8:	add	r3, r3, #4
    9adc:	str	r3, [fp, #-20]	; 0xffffffec
    9ae0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9ae4:	ldr	r3, [r3, #36]	; 0x24
    9ae8:	lsl	r2, r3, #3
    9aec:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9af0:	ldr	r3, [r3, #32]
    9af4:	lsr	r3, r3, #29
    9af8:	orr	r3, r2, r3
    9afc:	lsl	r2, r3, #24
    9b00:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9b04:	ldr	r3, [r3, #36]	; 0x24
    9b08:	lsl	r1, r3, #3
    9b0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9b10:	ldr	r3, [r3, #32]
    9b14:	lsr	r3, r3, #29
    9b18:	orr	r3, r1, r3
    9b1c:	lsl	r3, r3, #8
    9b20:	and	r3, r3, #16711680	; 0xff0000
    9b24:	orr	r2, r2, r3
    9b28:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9b2c:	ldr	r3, [r3, #36]	; 0x24
    9b30:	lsl	r1, r3, #3
    9b34:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9b38:	ldr	r3, [r3, #32]
    9b3c:	lsr	r3, r3, #29
    9b40:	orr	r3, r1, r3
    9b44:	lsr	r3, r3, #8
    9b48:	and	r3, r3, #65280	; 0xff00
    9b4c:	orr	r2, r2, r3
    9b50:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9b54:	ldr	r3, [r3, #36]	; 0x24
    9b58:	lsl	r1, r3, #3
    9b5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9b60:	ldr	r3, [r3, #32]
    9b64:	lsr	r3, r3, #29
    9b68:	orr	r3, r1, r3
    9b6c:	lsr	r3, r3, #24
    9b70:	orr	r2, r2, r3
    9b74:	ldr	r3, [fp, #-20]	; 0xffffffec
    9b78:	str	r2, [r3]
    9b7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9b80:	add	r0, r3, #44	; 0x2c
    9b84:	ldr	r2, [fp, #-12]
    9b88:	ldr	r3, [fp, #-16]
    9b8c:	add	r3, r2, r3
    9b90:	add	r3, r3, #8
    9b94:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9b98:	mov	r1, r3
    9b9c:	bl	93c4 <rb_sha256_process_block>
    9ba0:	mov	r3, #0
    9ba4:	str	r3, [fp, #-8]
    9ba8:	b	9c20 <rb_sha256_finish_ctx+0x288>
    9bac:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9bb0:	ldr	r2, [fp, #-8]
    9bb4:	ldr	r3, [r3, r2, lsl #2]
    9bb8:	lsl	r2, r3, #24
    9bbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9bc0:	ldr	r1, [fp, #-8]
    9bc4:	ldr	r3, [r3, r1, lsl #2]
    9bc8:	lsl	r3, r3, #8
    9bcc:	and	r3, r3, #16711680	; 0xff0000
    9bd0:	orr	r2, r2, r3
    9bd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9bd8:	ldr	r1, [fp, #-8]
    9bdc:	ldr	r3, [r3, r1, lsl #2]
    9be0:	lsr	r3, r3, #8
    9be4:	and	r3, r3, #65280	; 0xff00
    9be8:	orr	r1, r2, r3
    9bec:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9bf0:	ldr	r2, [fp, #-8]
    9bf4:	ldr	r3, [r3, r2, lsl #2]
    9bf8:	lsr	r2, r3, #24
    9bfc:	ldr	r3, [fp, #-8]
    9c00:	lsl	r3, r3, #2
    9c04:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9c08:	add	r3, r0, r3
    9c0c:	orr	r2, r1, r2
    9c10:	str	r2, [r3]
    9c14:	ldr	r3, [fp, #-8]
    9c18:	add	r3, r3, #1
    9c1c:	str	r3, [fp, #-8]
    9c20:	ldr	r3, [fp, #-8]
    9c24:	cmp	r3, #7
    9c28:	bls	9bac <rb_sha256_finish_ctx+0x214>
    9c2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9c30:	mov	r0, r3
    9c34:	sub	sp, fp, #4
    9c38:	ldr	fp, [sp]
    9c3c:	add	sp, sp, #4
    9c40:	pop	{pc}		; (ldr pc, [sp], #4)
    9c44:	.word	0x00019684

00009c48 <rb_sha256_process_bytes>:
    9c48:	str	fp, [sp, #-8]!
    9c4c:	str	lr, [sp, #4]
    9c50:	add	fp, sp, #4
    9c54:	sub	sp, sp, #32
    9c58:	str	r0, [fp, #-24]	; 0xffffffe8
    9c5c:	str	r1, [fp, #-28]	; 0xffffffe4
    9c60:	str	r2, [fp, #-32]	; 0xffffffe0
    9c64:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9c68:	ldr	r3, [r3, #40]	; 0x28
    9c6c:	cmp	r3, #0
    9c70:	beq	9d74 <rb_sha256_process_bytes+0x12c>
    9c74:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9c78:	ldr	r3, [r3, #40]	; 0x28
    9c7c:	str	r3, [fp, #-12]
    9c80:	ldr	r3, [fp, #-12]
    9c84:	rsb	r3, r3, #128	; 0x80
    9c88:	ldr	r2, [fp, #-28]	; 0xffffffe4
    9c8c:	cmp	r2, r3
    9c90:	movcc	r3, r2
    9c94:	movcs	r3, r3
    9c98:	str	r3, [fp, #-16]
    9c9c:	ldr	r3, [fp, #-12]
    9ca0:	add	r3, r3, #40	; 0x28
    9ca4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9ca8:	add	r3, r2, r3
    9cac:	add	r3, r3, #4
    9cb0:	ldr	r2, [fp, #-16]
    9cb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    9cb8:	mov	r0, r3
    9cbc:	bl	4834 <memcpy@plt>
    9cc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9cc4:	ldr	r2, [r3, #40]	; 0x28
    9cc8:	ldr	r3, [fp, #-16]
    9ccc:	add	r2, r2, r3
    9cd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9cd4:	str	r2, [r3, #40]	; 0x28
    9cd8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9cdc:	ldr	r3, [r3, #40]	; 0x28
    9ce0:	cmp	r3, #64	; 0x40
    9ce4:	bls	9d54 <rb_sha256_process_bytes+0x10c>
    9ce8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9cec:	add	r0, r3, #44	; 0x2c
    9cf0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9cf4:	ldr	r3, [r3, #40]	; 0x28
    9cf8:	bic	r3, r3, #63	; 0x3f
    9cfc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9d00:	mov	r1, r3
    9d04:	bl	93c4 <rb_sha256_process_block>
    9d08:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9d0c:	ldr	r3, [r3, #40]	; 0x28
    9d10:	and	r2, r3, #63	; 0x3f
    9d14:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9d18:	str	r2, [r3, #40]	; 0x28
    9d1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9d20:	add	r0, r3, #44	; 0x2c
    9d24:	ldr	r2, [fp, #-12]
    9d28:	ldr	r3, [fp, #-16]
    9d2c:	add	r3, r2, r3
    9d30:	bic	r3, r3, #63	; 0x3f
    9d34:	add	r3, r3, #40	; 0x28
    9d38:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9d3c:	add	r3, r2, r3
    9d40:	add	r1, r3, #4
    9d44:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9d48:	ldr	r3, [r3, #40]	; 0x28
    9d4c:	mov	r2, r3
    9d50:	bl	4834 <memcpy@plt>
    9d54:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9d58:	ldr	r3, [fp, #-16]
    9d5c:	add	r3, r2, r3
    9d60:	str	r3, [fp, #-24]	; 0xffffffe8
    9d64:	ldr	r2, [fp, #-28]	; 0xffffffe4
    9d68:	ldr	r3, [fp, #-16]
    9d6c:	sub	r3, r2, r3
    9d70:	str	r3, [fp, #-28]	; 0xffffffe4
    9d74:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9d78:	cmp	r3, #63	; 0x3f
    9d7c:	bls	9e20 <rb_sha256_process_bytes+0x1d8>
    9d80:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9d84:	and	r3, r3, #3
    9d88:	cmp	r3, #0
    9d8c:	beq	9de8 <rb_sha256_process_bytes+0x1a0>
    9d90:	b	9dd8 <rb_sha256_process_bytes+0x190>
    9d94:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9d98:	add	r3, r3, #44	; 0x2c
    9d9c:	mov	r2, #64	; 0x40
    9da0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    9da4:	mov	r0, r3
    9da8:	bl	4834 <memcpy@plt>
    9dac:	mov	r3, r0
    9db0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9db4:	mov	r1, #64	; 0x40
    9db8:	mov	r0, r3
    9dbc:	bl	93c4 <rb_sha256_process_block>
    9dc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9dc4:	add	r3, r3, #64	; 0x40
    9dc8:	str	r3, [fp, #-24]	; 0xffffffe8
    9dcc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9dd0:	sub	r3, r3, #64	; 0x40
    9dd4:	str	r3, [fp, #-28]	; 0xffffffe4
    9dd8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9ddc:	cmp	r3, #64	; 0x40
    9de0:	bhi	9d94 <rb_sha256_process_bytes+0x14c>
    9de4:	b	9e20 <rb_sha256_process_bytes+0x1d8>
    9de8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9dec:	bic	r3, r3, #63	; 0x3f
    9df0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9df4:	mov	r1, r3
    9df8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9dfc:	bl	93c4 <rb_sha256_process_block>
    9e00:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9e04:	bic	r3, r3, #63	; 0x3f
    9e08:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9e0c:	add	r3, r2, r3
    9e10:	str	r3, [fp, #-24]	; 0xffffffe8
    9e14:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9e18:	and	r3, r3, #63	; 0x3f
    9e1c:	str	r3, [fp, #-28]	; 0xffffffe4
    9e20:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9e24:	cmp	r3, #0
    9e28:	beq	9ec4 <rb_sha256_process_bytes+0x27c>
    9e2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9e30:	ldr	r3, [r3, #40]	; 0x28
    9e34:	str	r3, [fp, #-8]
    9e38:	ldr	r3, [fp, #-8]
    9e3c:	add	r3, r3, #40	; 0x28
    9e40:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9e44:	add	r3, r2, r3
    9e48:	add	r3, r3, #4
    9e4c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    9e50:	ldr	r1, [fp, #-24]	; 0xffffffe8
    9e54:	mov	r0, r3
    9e58:	bl	4834 <memcpy@plt>
    9e5c:	ldr	r2, [fp, #-8]
    9e60:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9e64:	add	r3, r2, r3
    9e68:	str	r3, [fp, #-8]
    9e6c:	ldr	r3, [fp, #-8]
    9e70:	cmp	r3, #63	; 0x3f
    9e74:	bls	9eb8 <rb_sha256_process_bytes+0x270>
    9e78:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9e7c:	add	r3, r3, #44	; 0x2c
    9e80:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9e84:	mov	r1, #64	; 0x40
    9e88:	mov	r0, r3
    9e8c:	bl	93c4 <rb_sha256_process_block>
    9e90:	ldr	r3, [fp, #-8]
    9e94:	sub	r3, r3, #64	; 0x40
    9e98:	str	r3, [fp, #-8]
    9e9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9ea0:	add	r0, r3, #44	; 0x2c
    9ea4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9ea8:	add	r3, r3, #108	; 0x6c
    9eac:	ldr	r2, [fp, #-8]
    9eb0:	mov	r1, r3
    9eb4:	bl	4834 <memcpy@plt>
    9eb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9ebc:	ldr	r2, [fp, #-8]
    9ec0:	str	r2, [r3, #40]	; 0x28
    9ec4:	nop	{0}
    9ec8:	sub	sp, fp, #4
    9ecc:	ldr	fp, [sp]
    9ed0:	add	sp, sp, #4
    9ed4:	pop	{pc}		; (ldr pc, [sp], #4)

00009ed8 <rb_sha256_crypt_r>:
    9ed8:	str	fp, [sp, #-8]!
    9edc:	str	lr, [sp, #4]
    9ee0:	add	fp, sp, #4
    9ee4:	sub	sp, sp, #584	; 0x248
    9ee8:	str	r0, [fp, #-568]	; 0xfffffdc8
    9eec:	str	r1, [fp, #-572]	; 0xfffffdc4
    9ef0:	str	r2, [fp, #-576]	; 0xfffffdc0
    9ef4:	str	r3, [fp, #-580]	; 0xfffffdbc
    9ef8:	mov	r3, #0
    9efc:	str	r3, [fp, #-16]
    9f00:	mov	r3, #0
    9f04:	str	r3, [fp, #-20]	; 0xffffffec
    9f08:	movw	r3, #5000	; 0x1388
    9f0c:	str	r3, [fp, #-24]	; 0xffffffe8
    9f10:	mov	r3, #0
    9f14:	str	r3, [fp, #-28]	; 0xffffffe4
    9f18:	mov	r2, #3
    9f1c:	ldr	r1, [fp, #-572]	; 0xfffffdc4
    9f20:	ldr	r3, [pc, #3852]	; ae34 <rb_sha256_crypt_r+0xf5c>
    9f24:	add	r3, pc, r3
    9f28:	mov	r0, r3
    9f2c:	bl	4c3c <strncmp@plt>
    9f30:	mov	r3, r0
    9f34:	cmp	r3, #0
    9f38:	bne	9f48 <rb_sha256_crypt_r+0x70>
    9f3c:	ldr	r3, [fp, #-572]	; 0xfffffdc4
    9f40:	add	r3, r3, #3
    9f44:	str	r3, [fp, #-572]	; 0xfffffdc4
    9f48:	mov	r2, #7
    9f4c:	ldr	r3, [pc, #3812]	; ae38 <rb_sha256_crypt_r+0xf60>
    9f50:	add	r3, pc, r3
    9f54:	mov	r1, r3
    9f58:	ldr	r0, [fp, #-572]	; 0xfffffdc4
    9f5c:	bl	4c3c <strncmp@plt>
    9f60:	mov	r3, r0
    9f64:	cmp	r3, #0
    9f68:	bne	9fe4 <rb_sha256_crypt_r+0x10c>
    9f6c:	ldr	r3, [fp, #-572]	; 0xfffffdc4
    9f70:	add	r3, r3, #7
    9f74:	str	r3, [fp, #-120]	; 0xffffff88
    9f78:	sub	r3, fp, #564	; 0x234
    9f7c:	mov	r2, #10
    9f80:	mov	r1, r3
    9f84:	ldr	r0, [fp, #-120]	; 0xffffff88
    9f88:	bl	4828 <strtoul@plt>
    9f8c:	str	r0, [fp, #-124]	; 0xffffff84
    9f90:	ldr	r3, [fp, #-564]	; 0xfffffdcc
    9f94:	ldrb	r3, [r3]
    9f98:	cmp	r3, #36	; 0x24
    9f9c:	bne	9fe4 <rb_sha256_crypt_r+0x10c>
    9fa0:	ldr	r3, [fp, #-564]	; 0xfffffdcc
    9fa4:	add	r3, r3, #1
    9fa8:	str	r3, [fp, #-572]	; 0xfffffdc4
    9fac:	ldr	r3, [fp, #-124]	; 0xffffff84
    9fb0:	cmp	r3, #1000	; 0x3e8
    9fb4:	bcc	9fd4 <rb_sha256_crypt_r+0xfc>
    9fb8:	ldr	r2, [fp, #-124]	; 0xffffff84
    9fbc:	movw	r3, #51711	; 0xc9ff
    9fc0:	movt	r3, #15258	; 0x3b9a
    9fc4:	cmp	r2, r3
    9fc8:	movcc	r3, r2
    9fcc:	movcs	r3, r3
    9fd0:	b	9fd8 <rb_sha256_crypt_r+0x100>
    9fd4:	mov	r3, #1000	; 0x3e8
    9fd8:	str	r3, [fp, #-24]	; 0xffffffe8
    9fdc:	mov	r3, #1
    9fe0:	str	r3, [fp, #-28]	; 0xffffffe4
    9fe4:	ldr	r3, [pc, #3664]	; ae3c <rb_sha256_crypt_r+0xf64>
    9fe8:	add	r3, pc, r3
    9fec:	mov	r1, r3
    9ff0:	ldr	r0, [fp, #-572]	; 0xfffffdc4
    9ff4:	bl	4c0c <strcspn@plt>
    9ff8:	mov	r3, r0
    9ffc:	cmp	r3, #15
    a000:	bhi	a020 <rb_sha256_crypt_r+0x148>
    a004:	ldr	r3, [pc, #3636]	; ae40 <rb_sha256_crypt_r+0xf68>
    a008:	add	r3, pc, r3
    a00c:	mov	r1, r3
    a010:	ldr	r0, [fp, #-572]	; 0xfffffdc4
    a014:	bl	4c0c <strcspn@plt>
    a018:	mov	r3, r0
    a01c:	b	a024 <rb_sha256_crypt_r+0x14c>
    a020:	mov	r3, #16
    a024:	str	r3, [fp, #-128]	; 0xffffff80
    a028:	ldr	r0, [fp, #-568]	; 0xfffffdc8
    a02c:	bl	4810 <strlen@plt>
    a030:	str	r0, [fp, #-132]	; 0xffffff7c
    a034:	ldr	r3, [fp, #-568]	; 0xfffffdc8
    a038:	and	r3, r3, #3
    a03c:	cmp	r3, #0
    a040:	beq	a0a0 <rb_sha256_crypt_r+0x1c8>
    a044:	ldr	r3, [fp, #-132]	; 0xffffff7c
    a048:	add	r3, r3, #4
    a04c:	add	r3, r3, #7
    a050:	lsr	r3, r3, #3
    a054:	lsl	r3, r3, #3
    a058:	sub	sp, sp, r3
    a05c:	add	r3, sp, #8
    a060:	add	r3, r3, #7
    a064:	lsr	r3, r3, #3
    a068:	lsl	r3, r3, #3
    a06c:	str	r3, [fp, #-136]	; 0xffffff78
    a070:	ldr	r3, [fp, #-136]	; 0xffffff78
    a074:	and	r3, r3, #3
    a078:	rsb	r3, r3, #4
    a07c:	ldr	r2, [fp, #-136]	; 0xffffff78
    a080:	add	r3, r2, r3
    a084:	ldr	r2, [fp, #-132]	; 0xffffff7c
    a088:	ldr	r1, [fp, #-568]	; 0xfffffdc8
    a08c:	mov	r0, r3
    a090:	bl	4834 <memcpy@plt>
    a094:	str	r0, [fp, #-16]
    a098:	ldr	r3, [fp, #-16]
    a09c:	str	r3, [fp, #-568]	; 0xfffffdc8
    a0a0:	ldr	r3, [fp, #-572]	; 0xfffffdc4
    a0a4:	and	r3, r3, #3
    a0a8:	cmp	r3, #0
    a0ac:	beq	a10c <rb_sha256_crypt_r+0x234>
    a0b0:	ldr	r3, [fp, #-128]	; 0xffffff80
    a0b4:	add	r3, r3, #4
    a0b8:	add	r3, r3, #7
    a0bc:	lsr	r3, r3, #3
    a0c0:	lsl	r3, r3, #3
    a0c4:	sub	sp, sp, r3
    a0c8:	add	r3, sp, #8
    a0cc:	add	r3, r3, #7
    a0d0:	lsr	r3, r3, #3
    a0d4:	lsl	r3, r3, #3
    a0d8:	str	r3, [fp, #-140]	; 0xffffff74
    a0dc:	ldr	r3, [fp, #-140]	; 0xffffff74
    a0e0:	and	r3, r3, #3
    a0e4:	rsb	r3, r3, #4
    a0e8:	ldr	r2, [fp, #-140]	; 0xffffff74
    a0ec:	add	r3, r2, r3
    a0f0:	ldr	r2, [fp, #-128]	; 0xffffff80
    a0f4:	ldr	r1, [fp, #-572]	; 0xfffffdc4
    a0f8:	mov	r0, r3
    a0fc:	bl	4834 <memcpy@plt>
    a100:	str	r0, [fp, #-20]	; 0xffffffec
    a104:	ldr	r3, [fp, #-20]	; 0xffffffec
    a108:	str	r3, [fp, #-572]	; 0xfffffdc4
    a10c:	sub	r3, fp, #388	; 0x184
    a110:	mov	r0, r3
    a114:	bl	98d0 <rb_sha256_init_ctx>
    a118:	sub	r3, fp, #388	; 0x184
    a11c:	mov	r2, r3
    a120:	ldr	r1, [fp, #-132]	; 0xffffff7c
    a124:	ldr	r0, [fp, #-568]	; 0xfffffdc8
    a128:	bl	9c48 <rb_sha256_process_bytes>
    a12c:	sub	r3, fp, #388	; 0x184
    a130:	mov	r2, r3
    a134:	ldr	r1, [fp, #-128]	; 0xffffff80
    a138:	ldr	r0, [fp, #-572]	; 0xfffffdc4
    a13c:	bl	9c48 <rb_sha256_process_bytes>
    a140:	sub	r3, fp, #560	; 0x230
    a144:	mov	r0, r3
    a148:	bl	98d0 <rb_sha256_init_ctx>
    a14c:	sub	r3, fp, #560	; 0x230
    a150:	mov	r2, r3
    a154:	ldr	r1, [fp, #-132]	; 0xffffff7c
    a158:	ldr	r0, [fp, #-568]	; 0xfffffdc8
    a15c:	bl	9c48 <rb_sha256_process_bytes>
    a160:	sub	r3, fp, #560	; 0x230
    a164:	mov	r2, r3
    a168:	ldr	r1, [fp, #-128]	; 0xffffff80
    a16c:	ldr	r0, [fp, #-572]	; 0xfffffdc4
    a170:	bl	9c48 <rb_sha256_process_bytes>
    a174:	sub	r3, fp, #560	; 0x230
    a178:	mov	r2, r3
    a17c:	ldr	r1, [fp, #-132]	; 0xffffff7c
    a180:	ldr	r0, [fp, #-568]	; 0xfffffdc8
    a184:	bl	9c48 <rb_sha256_process_bytes>
    a188:	sub	r2, fp, #184	; 0xb8
    a18c:	sub	r3, fp, #560	; 0x230
    a190:	mov	r1, r2
    a194:	mov	r0, r3
    a198:	bl	9998 <rb_sha256_finish_ctx>
    a19c:	ldr	r3, [fp, #-132]	; 0xffffff7c
    a1a0:	str	r3, [fp, #-8]
    a1a4:	b	a1c8 <rb_sha256_crypt_r+0x2f0>
    a1a8:	sub	r2, fp, #388	; 0x184
    a1ac:	sub	r3, fp, #184	; 0xb8
    a1b0:	mov	r1, #32
    a1b4:	mov	r0, r3
    a1b8:	bl	9c48 <rb_sha256_process_bytes>
    a1bc:	ldr	r3, [fp, #-8]
    a1c0:	sub	r3, r3, #32
    a1c4:	str	r3, [fp, #-8]
    a1c8:	ldr	r3, [fp, #-8]
    a1cc:	cmp	r3, #32
    a1d0:	bhi	a1a8 <rb_sha256_crypt_r+0x2d0>
    a1d4:	sub	r2, fp, #388	; 0x184
    a1d8:	sub	r3, fp, #184	; 0xb8
    a1dc:	ldr	r1, [fp, #-8]
    a1e0:	mov	r0, r3
    a1e4:	bl	9c48 <rb_sha256_process_bytes>
    a1e8:	ldr	r3, [fp, #-132]	; 0xffffff7c
    a1ec:	str	r3, [fp, #-8]
    a1f0:	b	a23c <rb_sha256_crypt_r+0x364>
    a1f4:	ldr	r3, [fp, #-8]
    a1f8:	and	r3, r3, #1
    a1fc:	cmp	r3, #0
    a200:	beq	a21c <rb_sha256_crypt_r+0x344>
    a204:	sub	r2, fp, #388	; 0x184
    a208:	sub	r3, fp, #184	; 0xb8
    a20c:	mov	r1, #32
    a210:	mov	r0, r3
    a214:	bl	9c48 <rb_sha256_process_bytes>
    a218:	b	a230 <rb_sha256_crypt_r+0x358>
    a21c:	sub	r3, fp, #388	; 0x184
    a220:	mov	r2, r3
    a224:	ldr	r1, [fp, #-132]	; 0xffffff7c
    a228:	ldr	r0, [fp, #-568]	; 0xfffffdc8
    a22c:	bl	9c48 <rb_sha256_process_bytes>
    a230:	ldr	r3, [fp, #-8]
    a234:	lsr	r3, r3, #1
    a238:	str	r3, [fp, #-8]
    a23c:	ldr	r3, [fp, #-8]
    a240:	cmp	r3, #0
    a244:	bne	a1f4 <rb_sha256_crypt_r+0x31c>
    a248:	sub	r2, fp, #184	; 0xb8
    a24c:	sub	r3, fp, #388	; 0x184
    a250:	mov	r1, r2
    a254:	mov	r0, r3
    a258:	bl	9998 <rb_sha256_finish_ctx>
    a25c:	sub	r3, fp, #560	; 0x230
    a260:	mov	r0, r3
    a264:	bl	98d0 <rb_sha256_init_ctx>
    a268:	mov	r3, #0
    a26c:	str	r3, [fp, #-8]
    a270:	b	a294 <rb_sha256_crypt_r+0x3bc>
    a274:	sub	r3, fp, #560	; 0x230
    a278:	mov	r2, r3
    a27c:	ldr	r1, [fp, #-132]	; 0xffffff7c
    a280:	ldr	r0, [fp, #-568]	; 0xfffffdc8
    a284:	bl	9c48 <rb_sha256_process_bytes>
    a288:	ldr	r3, [fp, #-8]
    a28c:	add	r3, r3, #1
    a290:	str	r3, [fp, #-8]
    a294:	ldr	r2, [fp, #-8]
    a298:	ldr	r3, [fp, #-132]	; 0xffffff7c
    a29c:	cmp	r2, r3
    a2a0:	bcc	a274 <rb_sha256_crypt_r+0x39c>
    a2a4:	sub	r2, fp, #216	; 0xd8
    a2a8:	sub	r3, fp, #560	; 0x230
    a2ac:	mov	r1, r2
    a2b0:	mov	r0, r3
    a2b4:	bl	9998 <rb_sha256_finish_ctx>
    a2b8:	ldr	r3, [fp, #-132]	; 0xffffff7c
    a2bc:	add	r3, r3, #7
    a2c0:	lsr	r3, r3, #3
    a2c4:	lsl	r3, r3, #3
    a2c8:	sub	sp, sp, r3
    a2cc:	add	r3, sp, #8
    a2d0:	add	r3, r3, #7
    a2d4:	lsr	r3, r3, #3
    a2d8:	lsl	r3, r3, #3
    a2dc:	str	r3, [fp, #-144]	; 0xffffff70
    a2e0:	ldr	r3, [fp, #-144]	; 0xffffff70
    a2e4:	str	r3, [fp, #-12]
    a2e8:	ldr	r3, [fp, #-132]	; 0xffffff7c
    a2ec:	str	r3, [fp, #-8]
    a2f0:	b	a344 <rb_sha256_crypt_r+0x46c>
    a2f4:	ldr	r3, [fp, #-12]
    a2f8:	sub	r2, fp, #216	; 0xd8
    a2fc:	ldrd	r0, [r2]
    a300:	str	r0, [r3]
    a304:	str	r1, [r3, #4]
    a308:	ldrd	r0, [r2, #8]
    a30c:	str	r0, [r3, #8]
    a310:	str	r1, [r3, #12]
    a314:	ldrd	r0, [r2, #16]
    a318:	str	r0, [r3, #16]
    a31c:	str	r1, [r3, #20]
    a320:	ldrd	r0, [r2, #24]
    a324:	str	r0, [r3, #24]
    a328:	str	r1, [r3, #28]
    a32c:	ldr	r3, [fp, #-12]
    a330:	add	r3, r3, #32
    a334:	str	r3, [fp, #-12]
    a338:	ldr	r3, [fp, #-8]
    a33c:	sub	r3, r3, #32
    a340:	str	r3, [fp, #-8]
    a344:	ldr	r3, [fp, #-8]
    a348:	cmp	r3, #31
    a34c:	bhi	a2f4 <rb_sha256_crypt_r+0x41c>
    a350:	sub	r3, fp, #216	; 0xd8
    a354:	ldr	r2, [fp, #-8]
    a358:	mov	r1, r3
    a35c:	ldr	r0, [fp, #-12]
    a360:	bl	4834 <memcpy@plt>
    a364:	sub	r3, fp, #560	; 0x230
    a368:	mov	r0, r3
    a36c:	bl	98d0 <rb_sha256_init_ctx>
    a370:	mov	r3, #0
    a374:	str	r3, [fp, #-8]
    a378:	b	a39c <rb_sha256_crypt_r+0x4c4>
    a37c:	sub	r3, fp, #560	; 0x230
    a380:	mov	r2, r3
    a384:	ldr	r1, [fp, #-128]	; 0xffffff80
    a388:	ldr	r0, [fp, #-572]	; 0xfffffdc4
    a38c:	bl	9c48 <rb_sha256_process_bytes>
    a390:	ldr	r3, [fp, #-8]
    a394:	add	r3, r3, #1
    a398:	str	r3, [fp, #-8]
    a39c:	ldrb	r3, [fp, #-184]	; 0xffffff48
    a3a0:	add	r3, r3, #16
    a3a4:	mov	r2, r3
    a3a8:	ldr	r3, [fp, #-8]
    a3ac:	cmp	r3, r2
    a3b0:	bcc	a37c <rb_sha256_crypt_r+0x4a4>
    a3b4:	sub	r2, fp, #216	; 0xd8
    a3b8:	sub	r3, fp, #560	; 0x230
    a3bc:	mov	r1, r2
    a3c0:	mov	r0, r3
    a3c4:	bl	9998 <rb_sha256_finish_ctx>
    a3c8:	ldr	r3, [fp, #-128]	; 0xffffff80
    a3cc:	add	r3, r3, #7
    a3d0:	lsr	r3, r3, #3
    a3d4:	lsl	r3, r3, #3
    a3d8:	sub	sp, sp, r3
    a3dc:	add	r3, sp, #8
    a3e0:	add	r3, r3, #7
    a3e4:	lsr	r3, r3, #3
    a3e8:	lsl	r3, r3, #3
    a3ec:	str	r3, [fp, #-148]	; 0xffffff6c
    a3f0:	ldr	r3, [fp, #-148]	; 0xffffff6c
    a3f4:	str	r3, [fp, #-12]
    a3f8:	ldr	r3, [fp, #-128]	; 0xffffff80
    a3fc:	str	r3, [fp, #-8]
    a400:	b	a454 <rb_sha256_crypt_r+0x57c>
    a404:	ldr	r3, [fp, #-12]
    a408:	sub	r2, fp, #216	; 0xd8
    a40c:	ldrd	r0, [r2]
    a410:	str	r0, [r3]
    a414:	str	r1, [r3, #4]
    a418:	ldrd	r0, [r2, #8]
    a41c:	str	r0, [r3, #8]
    a420:	str	r1, [r3, #12]
    a424:	ldrd	r0, [r2, #16]
    a428:	str	r0, [r3, #16]
    a42c:	str	r1, [r3, #20]
    a430:	ldrd	r0, [r2, #24]
    a434:	str	r0, [r3, #24]
    a438:	str	r1, [r3, #28]
    a43c:	ldr	r3, [fp, #-12]
    a440:	add	r3, r3, #32
    a444:	str	r3, [fp, #-12]
    a448:	ldr	r3, [fp, #-8]
    a44c:	sub	r3, r3, #32
    a450:	str	r3, [fp, #-8]
    a454:	ldr	r3, [fp, #-8]
    a458:	cmp	r3, #31
    a45c:	bhi	a404 <rb_sha256_crypt_r+0x52c>
    a460:	sub	r3, fp, #216	; 0xd8
    a464:	ldr	r2, [fp, #-8]
    a468:	mov	r1, r3
    a46c:	ldr	r0, [fp, #-12]
    a470:	bl	4834 <memcpy@plt>
    a474:	mov	r3, #0
    a478:	str	r3, [fp, #-8]
    a47c:	b	a5b0 <rb_sha256_crypt_r+0x6d8>
    a480:	sub	r3, fp, #388	; 0x184
    a484:	mov	r0, r3
    a488:	bl	98d0 <rb_sha256_init_ctx>
    a48c:	ldr	r3, [fp, #-8]
    a490:	and	r3, r3, #1
    a494:	cmp	r3, #0
    a498:	beq	a4b4 <rb_sha256_crypt_r+0x5dc>
    a49c:	sub	r3, fp, #388	; 0x184
    a4a0:	mov	r2, r3
    a4a4:	ldr	r1, [fp, #-132]	; 0xffffff7c
    a4a8:	ldr	r0, [fp, #-144]	; 0xffffff70
    a4ac:	bl	9c48 <rb_sha256_process_bytes>
    a4b0:	b	a4c8 <rb_sha256_crypt_r+0x5f0>
    a4b4:	sub	r2, fp, #388	; 0x184
    a4b8:	sub	r3, fp, #184	; 0xb8
    a4bc:	mov	r1, #32
    a4c0:	mov	r0, r3
    a4c4:	bl	9c48 <rb_sha256_process_bytes>
    a4c8:	ldr	r1, [fp, #-8]
    a4cc:	movw	r3, #43691	; 0xaaab
    a4d0:	movt	r3, #43690	; 0xaaaa
    a4d4:	umull	r2, r3, r3, r1
    a4d8:	lsr	r2, r3, #1
    a4dc:	mov	r3, r2
    a4e0:	lsl	r3, r3, #1
    a4e4:	add	r3, r3, r2
    a4e8:	sub	r2, r1, r3
    a4ec:	cmp	r2, #0
    a4f0:	beq	a508 <rb_sha256_crypt_r+0x630>
    a4f4:	sub	r3, fp, #388	; 0x184
    a4f8:	mov	r2, r3
    a4fc:	ldr	r1, [fp, #-128]	; 0xffffff80
    a500:	ldr	r0, [fp, #-148]	; 0xffffff6c
    a504:	bl	9c48 <rb_sha256_process_bytes>
    a508:	ldr	r1, [fp, #-8]
    a50c:	movw	r3, #18725	; 0x4925
    a510:	movt	r3, #9362	; 0x2492
    a514:	umull	r2, r3, r3, r1
    a518:	sub	r2, r1, r3
    a51c:	lsr	r2, r2, #1
    a520:	add	r3, r3, r2
    a524:	lsr	r2, r3, #2
    a528:	mov	r3, r2
    a52c:	lsl	r3, r3, #3
    a530:	sub	r3, r3, r2
    a534:	sub	r2, r1, r3
    a538:	cmp	r2, #0
    a53c:	beq	a554 <rb_sha256_crypt_r+0x67c>
    a540:	sub	r3, fp, #388	; 0x184
    a544:	mov	r2, r3
    a548:	ldr	r1, [fp, #-132]	; 0xffffff7c
    a54c:	ldr	r0, [fp, #-144]	; 0xffffff70
    a550:	bl	9c48 <rb_sha256_process_bytes>
    a554:	ldr	r3, [fp, #-8]
    a558:	and	r3, r3, #1
    a55c:	cmp	r3, #0
    a560:	beq	a57c <rb_sha256_crypt_r+0x6a4>
    a564:	sub	r2, fp, #388	; 0x184
    a568:	sub	r3, fp, #184	; 0xb8
    a56c:	mov	r1, #32
    a570:	mov	r0, r3
    a574:	bl	9c48 <rb_sha256_process_bytes>
    a578:	b	a590 <rb_sha256_crypt_r+0x6b8>
    a57c:	sub	r3, fp, #388	; 0x184
    a580:	mov	r2, r3
    a584:	ldr	r1, [fp, #-132]	; 0xffffff7c
    a588:	ldr	r0, [fp, #-144]	; 0xffffff70
    a58c:	bl	9c48 <rb_sha256_process_bytes>
    a590:	sub	r2, fp, #184	; 0xb8
    a594:	sub	r3, fp, #388	; 0x184
    a598:	mov	r1, r2
    a59c:	mov	r0, r3
    a5a0:	bl	9998 <rb_sha256_finish_ctx>
    a5a4:	ldr	r3, [fp, #-8]
    a5a8:	add	r3, r3, #1
    a5ac:	str	r3, [fp, #-8]
    a5b0:	ldr	r2, [fp, #-8]
    a5b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a5b8:	cmp	r2, r3
    a5bc:	bcc	a480 <rb_sha256_crypt_r+0x5a8>
    a5c0:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a5c4:	bic	r3, r3, r3, asr #31
    a5c8:	mov	r2, r3
    a5cc:	mov	r1, #0
    a5d0:	ldr	r0, [fp, #-576]	; 0xfffffdc0
    a5d4:	bl	4648 <memset@plt>
    a5d8:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a5dc:	bic	r3, r3, r3, asr #31
    a5e0:	mov	r2, r3
    a5e4:	ldr	r3, [pc, #2136]	; ae44 <rb_sha256_crypt_r+0xf6c>
    a5e8:	add	r3, pc, r3
    a5ec:	mov	r1, r3
    a5f0:	ldr	r0, [fp, #-576]	; 0xfffffdc0
    a5f4:	bl	4594 <strncpy@plt>
    a5f8:	ldr	r0, [fp, #-576]	; 0xfffffdc0
    a5fc:	bl	4810 <strlen@plt>
    a600:	mov	r3, r0
    a604:	mov	r2, r3
    a608:	ldr	r3, [fp, #-576]	; 0xfffffdc0
    a60c:	add	r3, r3, r2
    a610:	str	r3, [fp, #-12]
    a614:	ldr	r3, [fp, #-12]
    a618:	cmp	r3, #0
    a61c:	bne	a638 <rb_sha256_crypt_r+0x760>
    a620:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a624:	bic	r3, r3, r3, asr #31
    a628:	mov	r2, r3
    a62c:	ldr	r3, [fp, #-576]	; 0xfffffdc0
    a630:	add	r3, r3, r2
    a634:	str	r3, [fp, #-12]
    a638:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a63c:	sub	r3, r3, #3
    a640:	str	r3, [fp, #-580]	; 0xfffffdbc
    a644:	ldr	r3, [fp, #-28]	; 0xffffffe4
    a648:	cmp	r3, #0
    a64c:	beq	a6a0 <rb_sha256_crypt_r+0x7c8>
    a650:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a654:	bic	r3, r3, r3, asr #31
    a658:	mov	r1, r3
    a65c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a660:	str	r3, [sp]
    a664:	ldr	r3, [pc, #2012]	; ae48 <rb_sha256_crypt_r+0xf70>
    a668:	add	r3, pc, r3
    a66c:	ldr	r2, [pc, #2008]	; ae4c <rb_sha256_crypt_r+0xf74>
    a670:	add	r2, pc, r2
    a674:	ldr	r0, [fp, #-12]
    a678:	bl	4bdc <snprintf@plt>
    a67c:	str	r0, [fp, #-152]	; 0xffffff68
    a680:	ldr	r3, [fp, #-152]	; 0xffffff68
    a684:	ldr	r2, [fp, #-12]
    a688:	add	r3, r2, r3
    a68c:	str	r3, [fp, #-12]
    a690:	ldr	r2, [fp, #-580]	; 0xfffffdbc
    a694:	ldr	r3, [fp, #-152]	; 0xffffff68
    a698:	sub	r3, r2, r3
    a69c:	str	r3, [fp, #-580]	; 0xfffffdbc
    a6a0:	ldr	r2, [fp, #-128]	; 0xffffff80
    a6a4:	mov	r1, #0
    a6a8:	ldr	r0, [fp, #-12]
    a6ac:	bl	4648 <memset@plt>
    a6b0:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a6b4:	bic	r3, r3, r3, asr #31
    a6b8:	mov	r2, r3
    a6bc:	ldr	r3, [fp, #-128]	; 0xffffff80
    a6c0:	cmp	r2, r3
    a6c4:	movcc	r3, r2
    a6c8:	movcs	r3, r3
    a6cc:	mov	r2, r3
    a6d0:	ldr	r1, [fp, #-572]	; 0xfffffdc4
    a6d4:	ldr	r0, [fp, #-12]
    a6d8:	bl	4594 <strncpy@plt>
    a6dc:	ldr	r0, [fp, #-576]	; 0xfffffdc0
    a6e0:	bl	4810 <strlen@plt>
    a6e4:	mov	r3, r0
    a6e8:	mov	r2, r3
    a6ec:	ldr	r3, [fp, #-576]	; 0xfffffdc0
    a6f0:	add	r3, r3, r2
    a6f4:	str	r3, [fp, #-12]
    a6f8:	ldr	r3, [fp, #-12]
    a6fc:	cmp	r3, #0
    a700:	bne	a714 <rb_sha256_crypt_r+0x83c>
    a704:	ldr	r2, [fp, #-12]
    a708:	ldr	r3, [fp, #-128]	; 0xffffff80
    a70c:	add	r3, r2, r3
    a710:	str	r3, [fp, #-12]
    a714:	ldr	r1, [fp, #-580]	; 0xfffffdbc
    a718:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a71c:	bic	r3, r3, r3, asr #31
    a720:	mov	r2, r3
    a724:	ldr	r3, [fp, #-128]	; 0xffffff80
    a728:	cmp	r2, r3
    a72c:	movcc	r3, r2
    a730:	movcs	r3, r3
    a734:	sub	r3, r1, r3
    a738:	str	r3, [fp, #-580]	; 0xfffffdbc
    a73c:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a740:	cmp	r3, #0
    a744:	ble	a768 <rb_sha256_crypt_r+0x890>
    a748:	ldr	r3, [fp, #-12]
    a74c:	add	r2, r3, #1
    a750:	str	r2, [fp, #-12]
    a754:	mov	r2, #36	; 0x24
    a758:	strb	r2, [r3]
    a75c:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a760:	sub	r3, r3, #1
    a764:	str	r3, [fp, #-580]	; 0xfffffdbc
    a768:	ldrb	r3, [fp, #-184]	; 0xffffff48
    a76c:	lsl	r2, r3, #16
    a770:	ldrb	r3, [fp, #-174]	; 0xffffff52
    a774:	lsl	r3, r3, #8
    a778:	orr	r3, r2, r3
    a77c:	ldrb	r2, [fp, #-164]	; 0xffffff5c
    a780:	orr	r3, r3, r2
    a784:	str	r3, [fp, #-32]	; 0xffffffe0
    a788:	mov	r3, #4
    a78c:	str	r3, [fp, #-36]	; 0xffffffdc
    a790:	b	a7d0 <rb_sha256_crypt_r+0x8f8>
    a794:	ldr	r3, [fp, #-32]	; 0xffffffe0
    a798:	and	r2, r3, #63	; 0x3f
    a79c:	ldr	r3, [fp, #-12]
    a7a0:	add	r1, r3, #1
    a7a4:	str	r1, [fp, #-12]
    a7a8:	ldr	r1, [pc, #1696]	; ae50 <rb_sha256_crypt_r+0xf78>
    a7ac:	add	r1, pc, r1
    a7b0:	ldrb	r2, [r1, r2]
    a7b4:	strb	r2, [r3]
    a7b8:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a7bc:	sub	r3, r3, #1
    a7c0:	str	r3, [fp, #-580]	; 0xfffffdbc
    a7c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    a7c8:	lsr	r3, r3, #6
    a7cc:	str	r3, [fp, #-32]	; 0xffffffe0
    a7d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    a7d4:	sub	r2, r3, #1
    a7d8:	str	r2, [fp, #-36]	; 0xffffffdc
    a7dc:	cmp	r3, #0
    a7e0:	ble	a7f0 <rb_sha256_crypt_r+0x918>
    a7e4:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a7e8:	cmp	r3, #0
    a7ec:	bgt	a794 <rb_sha256_crypt_r+0x8bc>
    a7f0:	ldrb	r3, [fp, #-163]	; 0xffffff5d
    a7f4:	lsl	r2, r3, #16
    a7f8:	ldrb	r3, [fp, #-183]	; 0xffffff49
    a7fc:	lsl	r3, r3, #8
    a800:	orr	r3, r2, r3
    a804:	ldrb	r2, [fp, #-173]	; 0xffffff53
    a808:	orr	r3, r3, r2
    a80c:	str	r3, [fp, #-40]	; 0xffffffd8
    a810:	mov	r3, #4
    a814:	str	r3, [fp, #-44]	; 0xffffffd4
    a818:	b	a858 <rb_sha256_crypt_r+0x980>
    a81c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a820:	and	r2, r3, #63	; 0x3f
    a824:	ldr	r3, [fp, #-12]
    a828:	add	r1, r3, #1
    a82c:	str	r1, [fp, #-12]
    a830:	ldr	r1, [pc, #1564]	; ae54 <rb_sha256_crypt_r+0xf7c>
    a834:	add	r1, pc, r1
    a838:	ldrb	r2, [r1, r2]
    a83c:	strb	r2, [r3]
    a840:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a844:	sub	r3, r3, #1
    a848:	str	r3, [fp, #-580]	; 0xfffffdbc
    a84c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a850:	lsr	r3, r3, #6
    a854:	str	r3, [fp, #-40]	; 0xffffffd8
    a858:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a85c:	sub	r2, r3, #1
    a860:	str	r2, [fp, #-44]	; 0xffffffd4
    a864:	cmp	r3, #0
    a868:	ble	a878 <rb_sha256_crypt_r+0x9a0>
    a86c:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a870:	cmp	r3, #0
    a874:	bgt	a81c <rb_sha256_crypt_r+0x944>
    a878:	ldrb	r3, [fp, #-172]	; 0xffffff54
    a87c:	lsl	r2, r3, #16
    a880:	ldrb	r3, [fp, #-162]	; 0xffffff5e
    a884:	lsl	r3, r3, #8
    a888:	orr	r3, r2, r3
    a88c:	ldrb	r2, [fp, #-182]	; 0xffffff4a
    a890:	orr	r3, r3, r2
    a894:	str	r3, [fp, #-48]	; 0xffffffd0
    a898:	mov	r3, #4
    a89c:	str	r3, [fp, #-52]	; 0xffffffcc
    a8a0:	b	a8e0 <rb_sha256_crypt_r+0xa08>
    a8a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a8a8:	and	r2, r3, #63	; 0x3f
    a8ac:	ldr	r3, [fp, #-12]
    a8b0:	add	r1, r3, #1
    a8b4:	str	r1, [fp, #-12]
    a8b8:	ldr	r1, [pc, #1432]	; ae58 <rb_sha256_crypt_r+0xf80>
    a8bc:	add	r1, pc, r1
    a8c0:	ldrb	r2, [r1, r2]
    a8c4:	strb	r2, [r3]
    a8c8:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a8cc:	sub	r3, r3, #1
    a8d0:	str	r3, [fp, #-580]	; 0xfffffdbc
    a8d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a8d8:	lsr	r3, r3, #6
    a8dc:	str	r3, [fp, #-48]	; 0xffffffd0
    a8e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    a8e4:	sub	r2, r3, #1
    a8e8:	str	r2, [fp, #-52]	; 0xffffffcc
    a8ec:	cmp	r3, #0
    a8f0:	ble	a900 <rb_sha256_crypt_r+0xa28>
    a8f4:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a8f8:	cmp	r3, #0
    a8fc:	bgt	a8a4 <rb_sha256_crypt_r+0x9cc>
    a900:	ldrb	r3, [fp, #-181]	; 0xffffff4b
    a904:	lsl	r2, r3, #16
    a908:	ldrb	r3, [fp, #-171]	; 0xffffff55
    a90c:	lsl	r3, r3, #8
    a910:	orr	r3, r2, r3
    a914:	ldrb	r2, [fp, #-161]	; 0xffffff5f
    a918:	orr	r3, r3, r2
    a91c:	str	r3, [fp, #-56]	; 0xffffffc8
    a920:	mov	r3, #4
    a924:	str	r3, [fp, #-60]	; 0xffffffc4
    a928:	b	a968 <rb_sha256_crypt_r+0xa90>
    a92c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    a930:	and	r2, r3, #63	; 0x3f
    a934:	ldr	r3, [fp, #-12]
    a938:	add	r1, r3, #1
    a93c:	str	r1, [fp, #-12]
    a940:	ldr	r1, [pc, #1300]	; ae5c <rb_sha256_crypt_r+0xf84>
    a944:	add	r1, pc, r1
    a948:	ldrb	r2, [r1, r2]
    a94c:	strb	r2, [r3]
    a950:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a954:	sub	r3, r3, #1
    a958:	str	r3, [fp, #-580]	; 0xfffffdbc
    a95c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    a960:	lsr	r3, r3, #6
    a964:	str	r3, [fp, #-56]	; 0xffffffc8
    a968:	ldr	r3, [fp, #-60]	; 0xffffffc4
    a96c:	sub	r2, r3, #1
    a970:	str	r2, [fp, #-60]	; 0xffffffc4
    a974:	cmp	r3, #0
    a978:	ble	a988 <rb_sha256_crypt_r+0xab0>
    a97c:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a980:	cmp	r3, #0
    a984:	bgt	a92c <rb_sha256_crypt_r+0xa54>
    a988:	ldrb	r3, [fp, #-160]	; 0xffffff60
    a98c:	lsl	r2, r3, #16
    a990:	ldrb	r3, [fp, #-180]	; 0xffffff4c
    a994:	lsl	r3, r3, #8
    a998:	orr	r3, r2, r3
    a99c:	ldrb	r2, [fp, #-170]	; 0xffffff56
    a9a0:	orr	r3, r3, r2
    a9a4:	str	r3, [fp, #-64]	; 0xffffffc0
    a9a8:	mov	r3, #4
    a9ac:	str	r3, [fp, #-68]	; 0xffffffbc
    a9b0:	b	a9f0 <rb_sha256_crypt_r+0xb18>
    a9b4:	ldr	r3, [fp, #-64]	; 0xffffffc0
    a9b8:	and	r2, r3, #63	; 0x3f
    a9bc:	ldr	r3, [fp, #-12]
    a9c0:	add	r1, r3, #1
    a9c4:	str	r1, [fp, #-12]
    a9c8:	ldr	r1, [pc, #1168]	; ae60 <rb_sha256_crypt_r+0xf88>
    a9cc:	add	r1, pc, r1
    a9d0:	ldrb	r2, [r1, r2]
    a9d4:	strb	r2, [r3]
    a9d8:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a9dc:	sub	r3, r3, #1
    a9e0:	str	r3, [fp, #-580]	; 0xfffffdbc
    a9e4:	ldr	r3, [fp, #-64]	; 0xffffffc0
    a9e8:	lsr	r3, r3, #6
    a9ec:	str	r3, [fp, #-64]	; 0xffffffc0
    a9f0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    a9f4:	sub	r2, r3, #1
    a9f8:	str	r2, [fp, #-68]	; 0xffffffbc
    a9fc:	cmp	r3, #0
    aa00:	ble	aa10 <rb_sha256_crypt_r+0xb38>
    aa04:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    aa08:	cmp	r3, #0
    aa0c:	bgt	a9b4 <rb_sha256_crypt_r+0xadc>
    aa10:	ldrb	r3, [fp, #-169]	; 0xffffff57
    aa14:	lsl	r2, r3, #16
    aa18:	ldrb	r3, [fp, #-159]	; 0xffffff61
    aa1c:	lsl	r3, r3, #8
    aa20:	orr	r3, r2, r3
    aa24:	ldrb	r2, [fp, #-179]	; 0xffffff4d
    aa28:	orr	r3, r3, r2
    aa2c:	str	r3, [fp, #-72]	; 0xffffffb8
    aa30:	mov	r3, #4
    aa34:	str	r3, [fp, #-76]	; 0xffffffb4
    aa38:	b	aa78 <rb_sha256_crypt_r+0xba0>
    aa3c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    aa40:	and	r2, r3, #63	; 0x3f
    aa44:	ldr	r3, [fp, #-12]
    aa48:	add	r1, r3, #1
    aa4c:	str	r1, [fp, #-12]
    aa50:	ldr	r1, [pc, #1036]	; ae64 <rb_sha256_crypt_r+0xf8c>
    aa54:	add	r1, pc, r1
    aa58:	ldrb	r2, [r1, r2]
    aa5c:	strb	r2, [r3]
    aa60:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    aa64:	sub	r3, r3, #1
    aa68:	str	r3, [fp, #-580]	; 0xfffffdbc
    aa6c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    aa70:	lsr	r3, r3, #6
    aa74:	str	r3, [fp, #-72]	; 0xffffffb8
    aa78:	ldr	r3, [fp, #-76]	; 0xffffffb4
    aa7c:	sub	r2, r3, #1
    aa80:	str	r2, [fp, #-76]	; 0xffffffb4
    aa84:	cmp	r3, #0
    aa88:	ble	aa98 <rb_sha256_crypt_r+0xbc0>
    aa8c:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    aa90:	cmp	r3, #0
    aa94:	bgt	aa3c <rb_sha256_crypt_r+0xb64>
    aa98:	ldrb	r3, [fp, #-178]	; 0xffffff4e
    aa9c:	lsl	r2, r3, #16
    aaa0:	ldrb	r3, [fp, #-168]	; 0xffffff58
    aaa4:	lsl	r3, r3, #8
    aaa8:	orr	r3, r2, r3
    aaac:	ldrb	r2, [fp, #-158]	; 0xffffff62
    aab0:	orr	r3, r3, r2
    aab4:	str	r3, [fp, #-80]	; 0xffffffb0
    aab8:	mov	r3, #4
    aabc:	str	r3, [fp, #-84]	; 0xffffffac
    aac0:	b	ab00 <rb_sha256_crypt_r+0xc28>
    aac4:	ldr	r3, [fp, #-80]	; 0xffffffb0
    aac8:	and	r2, r3, #63	; 0x3f
    aacc:	ldr	r3, [fp, #-12]
    aad0:	add	r1, r3, #1
    aad4:	str	r1, [fp, #-12]
    aad8:	ldr	r1, [pc, #904]	; ae68 <rb_sha256_crypt_r+0xf90>
    aadc:	add	r1, pc, r1
    aae0:	ldrb	r2, [r1, r2]
    aae4:	strb	r2, [r3]
    aae8:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    aaec:	sub	r3, r3, #1
    aaf0:	str	r3, [fp, #-580]	; 0xfffffdbc
    aaf4:	ldr	r3, [fp, #-80]	; 0xffffffb0
    aaf8:	lsr	r3, r3, #6
    aafc:	str	r3, [fp, #-80]	; 0xffffffb0
    ab00:	ldr	r3, [fp, #-84]	; 0xffffffac
    ab04:	sub	r2, r3, #1
    ab08:	str	r2, [fp, #-84]	; 0xffffffac
    ab0c:	cmp	r3, #0
    ab10:	ble	ab20 <rb_sha256_crypt_r+0xc48>
    ab14:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    ab18:	cmp	r3, #0
    ab1c:	bgt	aac4 <rb_sha256_crypt_r+0xbec>
    ab20:	ldrb	r3, [fp, #-157]	; 0xffffff63
    ab24:	lsl	r2, r3, #16
    ab28:	ldrb	r3, [fp, #-177]	; 0xffffff4f
    ab2c:	lsl	r3, r3, #8
    ab30:	orr	r3, r2, r3
    ab34:	ldrb	r2, [fp, #-167]	; 0xffffff59
    ab38:	orr	r3, r3, r2
    ab3c:	str	r3, [fp, #-88]	; 0xffffffa8
    ab40:	mov	r3, #4
    ab44:	str	r3, [fp, #-92]	; 0xffffffa4
    ab48:	b	ab88 <rb_sha256_crypt_r+0xcb0>
    ab4c:	ldr	r3, [fp, #-88]	; 0xffffffa8
    ab50:	and	r2, r3, #63	; 0x3f
    ab54:	ldr	r3, [fp, #-12]
    ab58:	add	r1, r3, #1
    ab5c:	str	r1, [fp, #-12]
    ab60:	ldr	r1, [pc, #772]	; ae6c <rb_sha256_crypt_r+0xf94>
    ab64:	add	r1, pc, r1
    ab68:	ldrb	r2, [r1, r2]
    ab6c:	strb	r2, [r3]
    ab70:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    ab74:	sub	r3, r3, #1
    ab78:	str	r3, [fp, #-580]	; 0xfffffdbc
    ab7c:	ldr	r3, [fp, #-88]	; 0xffffffa8
    ab80:	lsr	r3, r3, #6
    ab84:	str	r3, [fp, #-88]	; 0xffffffa8
    ab88:	ldr	r3, [fp, #-92]	; 0xffffffa4
    ab8c:	sub	r2, r3, #1
    ab90:	str	r2, [fp, #-92]	; 0xffffffa4
    ab94:	cmp	r3, #0
    ab98:	ble	aba8 <rb_sha256_crypt_r+0xcd0>
    ab9c:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    aba0:	cmp	r3, #0
    aba4:	bgt	ab4c <rb_sha256_crypt_r+0xc74>
    aba8:	ldrb	r3, [fp, #-166]	; 0xffffff5a
    abac:	lsl	r2, r3, #16
    abb0:	ldrb	r3, [fp, #-156]	; 0xffffff64
    abb4:	lsl	r3, r3, #8
    abb8:	orr	r3, r2, r3
    abbc:	ldrb	r2, [fp, #-176]	; 0xffffff50
    abc0:	orr	r3, r3, r2
    abc4:	str	r3, [fp, #-96]	; 0xffffffa0
    abc8:	mov	r3, #4
    abcc:	str	r3, [fp, #-100]	; 0xffffff9c
    abd0:	b	ac10 <rb_sha256_crypt_r+0xd38>
    abd4:	ldr	r3, [fp, #-96]	; 0xffffffa0
    abd8:	and	r2, r3, #63	; 0x3f
    abdc:	ldr	r3, [fp, #-12]
    abe0:	add	r1, r3, #1
    abe4:	str	r1, [fp, #-12]
    abe8:	ldr	r1, [pc, #640]	; ae70 <rb_sha256_crypt_r+0xf98>
    abec:	add	r1, pc, r1
    abf0:	ldrb	r2, [r1, r2]
    abf4:	strb	r2, [r3]
    abf8:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    abfc:	sub	r3, r3, #1
    ac00:	str	r3, [fp, #-580]	; 0xfffffdbc
    ac04:	ldr	r3, [fp, #-96]	; 0xffffffa0
    ac08:	lsr	r3, r3, #6
    ac0c:	str	r3, [fp, #-96]	; 0xffffffa0
    ac10:	ldr	r3, [fp, #-100]	; 0xffffff9c
    ac14:	sub	r2, r3, #1
    ac18:	str	r2, [fp, #-100]	; 0xffffff9c
    ac1c:	cmp	r3, #0
    ac20:	ble	ac30 <rb_sha256_crypt_r+0xd58>
    ac24:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    ac28:	cmp	r3, #0
    ac2c:	bgt	abd4 <rb_sha256_crypt_r+0xcfc>
    ac30:	ldrb	r3, [fp, #-175]	; 0xffffff51
    ac34:	lsl	r2, r3, #16
    ac38:	ldrb	r3, [fp, #-165]	; 0xffffff5b
    ac3c:	lsl	r3, r3, #8
    ac40:	orr	r3, r2, r3
    ac44:	ldrb	r2, [fp, #-155]	; 0xffffff65
    ac48:	orr	r3, r3, r2
    ac4c:	str	r3, [fp, #-104]	; 0xffffff98
    ac50:	mov	r3, #4
    ac54:	str	r3, [fp, #-108]	; 0xffffff94
    ac58:	b	ac98 <rb_sha256_crypt_r+0xdc0>
    ac5c:	ldr	r3, [fp, #-104]	; 0xffffff98
    ac60:	and	r2, r3, #63	; 0x3f
    ac64:	ldr	r3, [fp, #-12]
    ac68:	add	r1, r3, #1
    ac6c:	str	r1, [fp, #-12]
    ac70:	ldr	r1, [pc, #508]	; ae74 <rb_sha256_crypt_r+0xf9c>
    ac74:	add	r1, pc, r1
    ac78:	ldrb	r2, [r1, r2]
    ac7c:	strb	r2, [r3]
    ac80:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    ac84:	sub	r3, r3, #1
    ac88:	str	r3, [fp, #-580]	; 0xfffffdbc
    ac8c:	ldr	r3, [fp, #-104]	; 0xffffff98
    ac90:	lsr	r3, r3, #6
    ac94:	str	r3, [fp, #-104]	; 0xffffff98
    ac98:	ldr	r3, [fp, #-108]	; 0xffffff94
    ac9c:	sub	r2, r3, #1
    aca0:	str	r2, [fp, #-108]	; 0xffffff94
    aca4:	cmp	r3, #0
    aca8:	ble	acb8 <rb_sha256_crypt_r+0xde0>
    acac:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    acb0:	cmp	r3, #0
    acb4:	bgt	ac5c <rb_sha256_crypt_r+0xd84>
    acb8:	ldrb	r3, [fp, #-153]	; 0xffffff67
    acbc:	lsl	r3, r3, #8
    acc0:	ldrb	r2, [fp, #-154]	; 0xffffff66
    acc4:	orr	r3, r3, r2
    acc8:	str	r3, [fp, #-112]	; 0xffffff90
    accc:	mov	r3, #3
    acd0:	str	r3, [fp, #-116]	; 0xffffff8c
    acd4:	b	ad14 <rb_sha256_crypt_r+0xe3c>
    acd8:	ldr	r3, [fp, #-112]	; 0xffffff90
    acdc:	and	r2, r3, #63	; 0x3f
    ace0:	ldr	r3, [fp, #-12]
    ace4:	add	r1, r3, #1
    ace8:	str	r1, [fp, #-12]
    acec:	ldr	r1, [pc, #388]	; ae78 <rb_sha256_crypt_r+0xfa0>
    acf0:	add	r1, pc, r1
    acf4:	ldrb	r2, [r1, r2]
    acf8:	strb	r2, [r3]
    acfc:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    ad00:	sub	r3, r3, #1
    ad04:	str	r3, [fp, #-580]	; 0xfffffdbc
    ad08:	ldr	r3, [fp, #-112]	; 0xffffff90
    ad0c:	lsr	r3, r3, #6
    ad10:	str	r3, [fp, #-112]	; 0xffffff90
    ad14:	ldr	r3, [fp, #-116]	; 0xffffff8c
    ad18:	sub	r2, r3, #1
    ad1c:	str	r2, [fp, #-116]	; 0xffffff8c
    ad20:	cmp	r3, #0
    ad24:	ble	ad34 <rb_sha256_crypt_r+0xe5c>
    ad28:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    ad2c:	cmp	r3, #0
    ad30:	bgt	acd8 <rb_sha256_crypt_r+0xe00>
    ad34:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    ad38:	cmp	r3, #0
    ad3c:	bgt	ad5c <rb_sha256_crypt_r+0xe84>
    ad40:	bl	4d20 <__errno_location@plt>
    ad44:	mov	r2, r0
    ad48:	mov	r3, #34	; 0x22
    ad4c:	str	r3, [r2]
    ad50:	mov	r3, #0
    ad54:	str	r3, [fp, #-576]	; 0xfffffdc0
    ad58:	b	ad68 <rb_sha256_crypt_r+0xe90>
    ad5c:	ldr	r3, [fp, #-12]
    ad60:	mov	r2, #0
    ad64:	strb	r2, [r3]
    ad68:	sub	r3, fp, #388	; 0x184
    ad6c:	mov	r0, r3
    ad70:	bl	98d0 <rb_sha256_init_ctx>
    ad74:	sub	r2, fp, #184	; 0xb8
    ad78:	sub	r3, fp, #388	; 0x184
    ad7c:	mov	r1, r2
    ad80:	mov	r0, r3
    ad84:	bl	9998 <rb_sha256_finish_ctx>
    ad88:	sub	r3, fp, #216	; 0xd8
    ad8c:	mov	r2, #32
    ad90:	mov	r1, #0
    ad94:	mov	r0, r3
    ad98:	bl	4648 <memset@plt>
    ad9c:	ldr	r2, [fp, #-132]	; 0xffffff7c
    ada0:	mov	r1, #0
    ada4:	ldr	r0, [fp, #-144]	; 0xffffff70
    ada8:	bl	4648 <memset@plt>
    adac:	ldr	r2, [fp, #-128]	; 0xffffff80
    adb0:	mov	r1, #0
    adb4:	ldr	r0, [fp, #-148]	; 0xffffff6c
    adb8:	bl	4648 <memset@plt>
    adbc:	sub	r3, fp, #388	; 0x184
    adc0:	mov	r2, #172	; 0xac
    adc4:	mov	r1, #0
    adc8:	mov	r0, r3
    adcc:	bl	4648 <memset@plt>
    add0:	sub	r3, fp, #560	; 0x230
    add4:	mov	r2, #172	; 0xac
    add8:	mov	r1, #0
    addc:	mov	r0, r3
    ade0:	bl	4648 <memset@plt>
    ade4:	ldr	r3, [fp, #-16]
    ade8:	cmp	r3, #0
    adec:	beq	ae00 <rb_sha256_crypt_r+0xf28>
    adf0:	ldr	r2, [fp, #-132]	; 0xffffff7c
    adf4:	mov	r1, #0
    adf8:	ldr	r0, [fp, #-16]
    adfc:	bl	4648 <memset@plt>
    ae00:	ldr	r3, [fp, #-20]	; 0xffffffec
    ae04:	cmp	r3, #0
    ae08:	beq	ae1c <rb_sha256_crypt_r+0xf44>
    ae0c:	ldr	r2, [fp, #-128]	; 0xffffff80
    ae10:	mov	r1, #0
    ae14:	ldr	r0, [fp, #-20]	; 0xffffffec
    ae18:	bl	4648 <memset@plt>
    ae1c:	ldr	r3, [fp, #-576]	; 0xfffffdc0
    ae20:	mov	r0, r3
    ae24:	sub	sp, fp, #4
    ae28:	ldr	fp, [sp]
    ae2c:	add	sp, sp, #4
    ae30:	pop	{pc}		; (ldr pc, [sp], #4)
    ae34:	.word	0x000192dc
    ae38:	.word	0x000192b4
    ae3c:	.word	0x000190d4
    ae40:	.word	0x000190b4
    ae44:	.word	0x00018c18
    ae48:	.word	0x00018b9c
    ae4c:	.word	0x00018b9c
    ae50:	.word	0x0001856c
    ae54:	.word	0x000184e4
    ae58:	.word	0x0001845c
    ae5c:	.word	0x000183d4
    ae60:	.word	0x0001834c
    ae64:	.word	0x000182c4
    ae68:	.word	0x0001823c
    ae6c:	.word	0x000181b4
    ae70:	.word	0x0001812c
    ae74:	.word	0x000180a4
    ae78:	.word	0x00018028

0000ae7c <rb_sha256_crypt>:
    ae7c:	str	fp, [sp, #-8]!
    ae80:	str	lr, [sp, #4]
    ae84:	add	fp, sp, #4
    ae88:	sub	sp, sp, #16
    ae8c:	str	r0, [fp, #-16]
    ae90:	str	r1, [fp, #-20]	; 0xffffffec
    ae94:	ldr	r0, [fp, #-20]	; 0xffffffec
    ae98:	bl	4810 <strlen@plt>
    ae9c:	mov	r3, r0
    aea0:	add	r3, r3, #66	; 0x42
    aea4:	str	r3, [fp, #-8]
    aea8:	ldr	r3, [fp, #-8]
    aeac:	mov	r0, r3
    aeb0:	bl	49cc <malloc@plt>
    aeb4:	mov	r3, r0
    aeb8:	str	r3, [fp, #-12]
    aebc:	ldr	r3, [fp, #-12]
    aec0:	cmp	r3, #0
    aec4:	bne	aed0 <rb_sha256_crypt+0x54>
    aec8:	mov	r3, #0
    aecc:	b	af18 <rb_sha256_crypt+0x9c>
    aed0:	ldr	r3, [pc, #84]	; af2c <rb_sha256_crypt+0xb0>
    aed4:	add	r3, pc, r3
    aed8:	ldr	r2, [fp, #-12]
    aedc:	str	r2, [r3]
    aee0:	ldr	r3, [pc, #72]	; af30 <rb_sha256_crypt+0xb4>
    aee4:	add	r3, pc, r3
    aee8:	ldr	r2, [fp, #-8]
    aeec:	str	r2, [r3]
    aef0:	ldr	r3, [pc, #60]	; af34 <rb_sha256_crypt+0xb8>
    aef4:	add	r3, pc, r3
    aef8:	ldr	r2, [r3]
    aefc:	ldr	r3, [pc, #52]	; af38 <rb_sha256_crypt+0xbc>
    af00:	add	r3, pc, r3
    af04:	ldr	r3, [r3]
    af08:	ldr	r1, [fp, #-20]	; 0xffffffec
    af0c:	ldr	r0, [fp, #-16]
    af10:	bl	9ed8 <rb_sha256_crypt_r>
    af14:	mov	r3, r0
    af18:	mov	r0, r3
    af1c:	sub	sp, fp, #4
    af20:	ldr	fp, [sp]
    af24:	add	sp, sp, #4
    af28:	pop	{pc}		; (ldr pc, [sp], #4)
    af2c:	.word	0x0003cf90
    af30:	.word	0x0003cf84
    af34:	.word	0x0003cf70
    af38:	.word	0x0003cf68

0000af3c <rb_sha512_process_block>:
    af3c:	strd	r4, [sp, #-32]!	; 0xffffffe0
    af40:	strd	r6, [sp, #8]
    af44:	strd	r8, [sp, #16]
    af48:	str	fp, [sp, #24]
    af4c:	str	lr, [sp, #28]
    af50:	add	fp, sp, #28
    af54:	sub	sp, sp, #1264	; 0x4f0
    af58:	str	r0, [fp, #-832]	; 0xfffffcc0
    af5c:	str	r1, [fp, #-836]	; 0xfffffcbc
    af60:	str	r2, [fp, #-840]	; 0xfffffcb8
    af64:	ldr	r3, [fp, #-832]	; 0xfffffcc0
    af68:	str	r3, [fp, #-32]	; 0xffffffe0
    af6c:	ldr	r3, [fp, #-836]	; 0xfffffcbc
    af70:	lsr	r3, r3, #3
    af74:	str	r3, [fp, #-36]	; 0xffffffdc
    af78:	ldr	r3, [fp, #-840]	; 0xfffffcb8
    af7c:	ldrd	r2, [r3]
    af80:	strd	r2, [fp, #-44]	; 0xffffffd4
    af84:	ldr	r3, [fp, #-840]	; 0xfffffcb8
    af88:	ldrd	r2, [r3, #8]
    af8c:	strd	r2, [fp, #-52]	; 0xffffffcc
    af90:	ldr	r3, [fp, #-840]	; 0xfffffcb8
    af94:	ldrd	r2, [r3, #16]
    af98:	strd	r2, [fp, #-60]	; 0xffffffc4
    af9c:	ldr	r3, [fp, #-840]	; 0xfffffcb8
    afa0:	ldrd	r2, [r3, #24]
    afa4:	strd	r2, [fp, #-68]	; 0xffffffbc
    afa8:	ldr	r3, [fp, #-840]	; 0xfffffcb8
    afac:	ldrd	r2, [r3, #32]
    afb0:	strd	r2, [fp, #-76]	; 0xffffffb4
    afb4:	ldr	r3, [fp, #-840]	; 0xfffffcb8
    afb8:	ldrd	r2, [r3, #40]	; 0x28
    afbc:	strd	r2, [fp, #-84]	; 0xffffffac
    afc0:	ldr	r3, [fp, #-840]	; 0xfffffcb8
    afc4:	ldrd	r2, [r3, #48]	; 0x30
    afc8:	strd	r2, [fp, #-92]	; 0xffffffa4
    afcc:	ldr	r3, [fp, #-840]	; 0xfffffcb8
    afd0:	ldrd	r2, [r3, #56]	; 0x38
    afd4:	strd	r2, [fp, #-100]	; 0xffffff9c
    afd8:	ldr	r3, [fp, #-840]	; 0xfffffcb8
    afdc:	ldrd	r0, [r3, #64]	; 0x40
    afe0:	ldr	r3, [fp, #-836]	; 0xfffffcbc
    afe4:	mov	r2, r3
    afe8:	mov	r3, #0
    afec:	adds	r4, r0, r2
    aff0:	adc	r5, r1, r3
    aff4:	ldr	r3, [fp, #-840]	; 0xfffffcb8
    aff8:	strd	r4, [r3, #64]	; 0x40
    affc:	ldr	r3, [fp, #-840]	; 0xfffffcb8
    b000:	ldrd	r0, [r3, #64]	; 0x40
    b004:	ldr	r3, [fp, #-836]	; 0xfffffcbc
    b008:	mov	r2, r3
    b00c:	mov	r3, #0
    b010:	cmp	r1, r3
    b014:	cmpeq	r0, r2
    b018:	bcs	bbb4 <rb_sha512_process_block+0xc78>
    b01c:	ldr	r3, [fp, #-840]	; 0xfffffcb8
    b020:	ldrd	r2, [r3, #72]	; 0x48
    b024:	adds	r6, r2, #1
    b028:	adc	r7, r3, #0
    b02c:	ldr	r3, [fp, #-840]	; 0xfffffcb8
    b030:	strd	r6, [r3, #72]	; 0x48
    b034:	b	bbb4 <rb_sha512_process_block+0xc78>
    b038:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    b03c:	strd	r2, [fp, #-116]	; 0xffffff8c
    b040:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    b044:	strd	r2, [fp, #-124]	; 0xffffff84
    b048:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    b04c:	strd	r2, [fp, #-132]	; 0xffffff7c
    b050:	ldrd	r2, [fp, #-68]	; 0xffffffbc
    b054:	strd	r2, [fp, #-140]	; 0xffffff74
    b058:	ldrd	r2, [fp, #-76]	; 0xffffffb4
    b05c:	strd	r2, [fp, #-148]	; 0xffffff6c
    b060:	ldrd	r2, [fp, #-84]	; 0xffffffac
    b064:	strd	r2, [fp, #-156]	; 0xffffff64
    b068:	ldrd	r2, [fp, #-92]	; 0xffffffa4
    b06c:	strd	r2, [fp, #-164]	; 0xffffff5c
    b070:	ldrd	r2, [fp, #-100]	; 0xffffff9c
    b074:	strd	r2, [fp, #-172]	; 0xffffff54
    b078:	mov	r3, #0
    b07c:	str	r3, [fp, #-104]	; 0xffffff98
    b080:	b	b31c <rb_sha512_process_block+0x3e0>
    b084:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b088:	ldrd	r2, [r3]
    b08c:	mov	r4, #0
    b090:	mov	r5, #0
    b094:	lsl	r5, r2, #24
    b098:	mov	r4, #0
    b09c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b0a0:	ldrd	r2, [r3]
    b0a4:	mov	r0, #0
    b0a8:	mov	r1, #0
    b0ac:	lsl	r1, r2, #8
    b0b0:	mov	r0, #0
    b0b4:	mov	r2, #0
    b0b8:	mov	r3, #16711680	; 0xff0000
    b0bc:	and	ip, r0, r2
    b0c0:	str	ip, [fp, #-852]	; 0xfffffcac
    b0c4:	and	r3, r1, r3
    b0c8:	str	r3, [fp, #-848]	; 0xfffffcb0
    b0cc:	sub	r3, fp, #852	; 0x354
    b0d0:	ldrd	r2, [r3]
    b0d4:	mov	r1, r2
    b0d8:	orr	r1, r4, r1
    b0dc:	str	r1, [fp, #-860]	; 0xfffffca4
    b0e0:	orr	r3, r5, r3
    b0e4:	str	r3, [fp, #-856]	; 0xfffffca8
    b0e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b0ec:	ldrd	r2, [r3]
    b0f0:	mov	r0, #0
    b0f4:	mov	r1, #0
    b0f8:	lsl	r1, r3, #24
    b0fc:	orr	r1, r1, r2, lsr #8
    b100:	lsl	r0, r2, #24
    b104:	mov	r2, #0
    b108:	mov	r3, #65280	; 0xff00
    b10c:	and	ip, r0, r2
    b110:	str	ip, [fp, #-868]	; 0xfffffc9c
    b114:	and	r3, r1, r3
    b118:	str	r3, [fp, #-864]	; 0xfffffca0
    b11c:	sub	r3, fp, #860	; 0x35c
    b120:	ldrd	r0, [r3]
    b124:	mov	ip, r0
    b128:	sub	r3, fp, #868	; 0x364
    b12c:	ldrd	r2, [r3]
    b130:	mov	lr, r2
    b134:	orr	ip, ip, lr
    b138:	str	ip, [fp, #-876]	; 0xfffffc94
    b13c:	orr	r3, r1, r3
    b140:	str	r3, [fp, #-872]	; 0xfffffc98
    b144:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b148:	ldrd	r2, [r3]
    b14c:	mov	r0, #0
    b150:	mov	r1, #0
    b154:	lsl	r1, r3, #8
    b158:	orr	r1, r1, r2, lsr #24
    b15c:	lsl	r0, r2, #8
    b160:	mov	r2, #0
    b164:	mov	r3, #255	; 0xff
    b168:	and	ip, r0, r2
    b16c:	str	ip, [fp, #-884]	; 0xfffffc8c
    b170:	and	r3, r1, r3
    b174:	str	r3, [fp, #-880]	; 0xfffffc90
    b178:	sub	r3, fp, #876	; 0x36c
    b17c:	ldrd	r0, [r3]
    b180:	mov	ip, r0
    b184:	sub	r3, fp, #884	; 0x374
    b188:	ldrd	r2, [r3]
    b18c:	mov	lr, r2
    b190:	orr	ip, ip, lr
    b194:	str	ip, [fp, #-892]	; 0xfffffc84
    b198:	orr	r3, r1, r3
    b19c:	str	r3, [fp, #-888]	; 0xfffffc88
    b1a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b1a4:	ldrd	r2, [r3]
    b1a8:	mov	r0, #0
    b1ac:	mov	r1, #0
    b1b0:	lsr	r0, r2, #8
    b1b4:	orr	r0, r0, r3, lsl #24
    b1b8:	lsr	r1, r3, #8
    b1bc:	mov	r2, #-16777216	; 0xff000000
    b1c0:	mov	r3, #0
    b1c4:	and	ip, r0, r2
    b1c8:	str	ip, [fp, #-900]	; 0xfffffc7c
    b1cc:	and	r3, r1, r3
    b1d0:	str	r3, [fp, #-896]	; 0xfffffc80
    b1d4:	sub	r3, fp, #892	; 0x37c
    b1d8:	ldrd	r0, [r3]
    b1dc:	mov	ip, r0
    b1e0:	sub	r3, fp, #900	; 0x384
    b1e4:	ldrd	r2, [r3]
    b1e8:	mov	lr, r2
    b1ec:	orr	ip, ip, lr
    b1f0:	str	ip, [fp, #-908]	; 0xfffffc74
    b1f4:	orr	r3, r1, r3
    b1f8:	str	r3, [fp, #-904]	; 0xfffffc78
    b1fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b200:	ldrd	r2, [r3]
    b204:	mov	r0, #0
    b208:	mov	r1, #0
    b20c:	lsr	r0, r2, #24
    b210:	orr	r0, r0, r3, lsl #8
    b214:	lsr	r1, r3, #24
    b218:	mov	r2, #16711680	; 0xff0000
    b21c:	mov	r3, #0
    b220:	and	ip, r0, r2
    b224:	str	ip, [fp, #-916]	; 0xfffffc6c
    b228:	and	r3, r1, r3
    b22c:	str	r3, [fp, #-912]	; 0xfffffc70
    b230:	sub	r3, fp, #908	; 0x38c
    b234:	ldrd	r0, [r3]
    b238:	mov	ip, r0
    b23c:	sub	r3, fp, #916	; 0x394
    b240:	ldrd	r2, [r3]
    b244:	mov	lr, r2
    b248:	orr	ip, ip, lr
    b24c:	str	ip, [fp, #-924]	; 0xfffffc64
    b250:	orr	r3, r1, r3
    b254:	str	r3, [fp, #-920]	; 0xfffffc68
    b258:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b25c:	ldrd	r2, [r3]
    b260:	mov	r0, #0
    b264:	mov	r1, #0
    b268:	lsr	r0, r3, #8
    b26c:	mov	r1, #0
    b270:	mov	r2, #65280	; 0xff00
    b274:	mov	r3, #0
    b278:	and	ip, r0, r2
    b27c:	str	ip, [fp, #-932]	; 0xfffffc5c
    b280:	and	r3, r1, r3
    b284:	str	r3, [fp, #-928]	; 0xfffffc60
    b288:	sub	r3, fp, #924	; 0x39c
    b28c:	ldrd	r0, [r3]
    b290:	mov	ip, r0
    b294:	sub	r3, fp, #932	; 0x3a4
    b298:	ldrd	r2, [r3]
    b29c:	mov	lr, r2
    b2a0:	orr	ip, ip, lr
    b2a4:	str	ip, [fp, #-940]	; 0xfffffc54
    b2a8:	orr	r3, r1, r3
    b2ac:	str	r3, [fp, #-936]	; 0xfffffc58
    b2b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b2b4:	ldrd	r2, [r3]
    b2b8:	mov	r0, #0
    b2bc:	mov	r1, #0
    b2c0:	lsr	r0, r3, #24
    b2c4:	mov	r1, #0
    b2c8:	sub	r3, fp, #940	; 0x3ac
    b2cc:	ldrd	r2, [r3]
    b2d0:	mov	ip, r2
    b2d4:	orr	ip, ip, r0
    b2d8:	str	ip, [fp, #-948]	; 0xfffffc4c
    b2dc:	orr	r3, r3, r1
    b2e0:	str	r3, [fp, #-944]	; 0xfffffc50
    b2e4:	sub	r3, fp, #828	; 0x33c
    b2e8:	mov	r2, r3
    b2ec:	ldr	r3, [fp, #-104]	; 0xffffff98
    b2f0:	lsl	r3, r3, #3
    b2f4:	add	r3, r2, r3
    b2f8:	sub	r2, fp, #948	; 0x3b4
    b2fc:	ldrd	r0, [r2]
    b300:	strd	r0, [r3]
    b304:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b308:	add	r3, r3, #8
    b30c:	str	r3, [fp, #-32]	; 0xffffffe0
    b310:	ldr	r3, [fp, #-104]	; 0xffffff98
    b314:	add	r3, r3, #1
    b318:	str	r3, [fp, #-104]	; 0xffffff98
    b31c:	ldr	r3, [fp, #-104]	; 0xffffff98
    b320:	cmp	r3, #15
    b324:	bls	b084 <rb_sha512_process_block+0x148>
    b328:	mov	r3, #16
    b32c:	str	r3, [fp, #-104]	; 0xffffff98
    b330:	b	b5c0 <rb_sha512_process_block+0x684>
    b334:	ldr	r3, [fp, #-104]	; 0xffffff98
    b338:	sub	r2, r3, #2
    b33c:	sub	r3, fp, #828	; 0x33c
    b340:	mov	r1, r3
    b344:	lsl	r3, r2, #3
    b348:	add	r3, r1, r3
    b34c:	ldrd	r2, [r3]
    b350:	lsl	r0, r3, #13
    b354:	lsr	r1, r2, #19
    b358:	orr	r1, r0, r1
    b35c:	str	r1, [fp, #-956]	; 0xfffffc44
    b360:	lsl	r1, r2, #13
    b364:	lsr	r3, r3, #19
    b368:	orr	r3, r1, r3
    b36c:	str	r3, [fp, #-952]	; 0xfffffc48
    b370:	ldr	r3, [fp, #-104]	; 0xffffff98
    b374:	sub	r2, r3, #2
    b378:	sub	r3, fp, #828	; 0x33c
    b37c:	mov	r1, r3
    b380:	lsl	r3, r2, #3
    b384:	add	r3, r1, r3
    b388:	ldrd	r2, [r3]
    b38c:	lsr	r0, r2, #29
    b390:	lsl	r1, r3, #3
    b394:	orr	r1, r0, r1
    b398:	str	r1, [fp, #-960]	; 0xfffffc40
    b39c:	lsr	r1, r3, #29
    b3a0:	lsl	r3, r2, #3
    b3a4:	orr	r3, r1, r3
    b3a8:	str	r3, [fp, #-964]	; 0xfffffc3c
    b3ac:	sub	r3, fp, #956	; 0x3bc
    b3b0:	ldrd	r0, [r3]
    b3b4:	mov	ip, r0
    b3b8:	sub	r3, fp, #964	; 0x3c4
    b3bc:	ldrd	r2, [r3]
    b3c0:	mov	lr, r2
    b3c4:	eor	ip, ip, lr
    b3c8:	str	ip, [fp, #-972]	; 0xfffffc34
    b3cc:	eor	r3, r1, r3
    b3d0:	str	r3, [fp, #-968]	; 0xfffffc38
    b3d4:	ldr	r3, [fp, #-104]	; 0xffffff98
    b3d8:	sub	r2, r3, #2
    b3dc:	sub	r3, fp, #828	; 0x33c
    b3e0:	mov	r1, r3
    b3e4:	lsl	r3, r2, #3
    b3e8:	add	r3, r1, r3
    b3ec:	ldrd	r2, [r3]
    b3f0:	mov	r0, #0
    b3f4:	mov	r1, #0
    b3f8:	lsr	r0, r2, #6
    b3fc:	orr	r0, r0, r3, lsl #26
    b400:	lsr	r1, r3, #6
    b404:	sub	r3, fp, #972	; 0x3cc
    b408:	ldrd	r2, [r3]
    b40c:	mov	ip, r2
    b410:	eor	ip, ip, r0
    b414:	str	ip, [fp, #-980]	; 0xfffffc2c
    b418:	eor	r3, r3, r1
    b41c:	str	r3, [fp, #-976]	; 0xfffffc30
    b420:	ldr	r3, [fp, #-104]	; 0xffffff98
    b424:	sub	r2, r3, #7
    b428:	sub	r3, fp, #828	; 0x33c
    b42c:	mov	r1, r3
    b430:	lsl	r3, r2, #3
    b434:	add	r3, r1, r3
    b438:	ldrd	r2, [r3]
    b43c:	sub	r1, fp, #980	; 0x3d4
    b440:	ldrd	r0, [r1]
    b444:	mov	ip, r0
    b448:	adds	ip, ip, r2
    b44c:	str	ip, [fp, #-988]	; 0xfffffc24
    b450:	adc	r3, r1, r3
    b454:	str	r3, [fp, #-984]	; 0xfffffc28
    b458:	ldr	r3, [fp, #-104]	; 0xffffff98
    b45c:	sub	r2, r3, #15
    b460:	sub	r3, fp, #828	; 0x33c
    b464:	mov	r1, r3
    b468:	lsl	r3, r2, #3
    b46c:	add	r3, r1, r3
    b470:	ldrd	r2, [r3]
    b474:	lsl	r0, r3, #31
    b478:	lsr	r1, r2, #1
    b47c:	orr	r1, r0, r1
    b480:	str	r1, [fp, #-996]	; 0xfffffc1c
    b484:	lsl	r1, r2, #31
    b488:	lsr	r3, r3, #1
    b48c:	orr	r3, r1, r3
    b490:	str	r3, [fp, #-992]	; 0xfffffc20
    b494:	ldr	r3, [fp, #-104]	; 0xffffff98
    b498:	sub	r2, r3, #15
    b49c:	sub	r3, fp, #828	; 0x33c
    b4a0:	mov	r1, r3
    b4a4:	lsl	r3, r2, #3
    b4a8:	add	r3, r1, r3
    b4ac:	ldrd	r2, [r3]
    b4b0:	lsl	r0, r3, #24
    b4b4:	lsr	r1, r2, #8
    b4b8:	orr	r1, r0, r1
    b4bc:	str	r1, [fp, #-1004]	; 0xfffffc14
    b4c0:	lsl	r1, r2, #24
    b4c4:	lsr	r3, r3, #8
    b4c8:	orr	r3, r1, r3
    b4cc:	str	r3, [fp, #-1000]	; 0xfffffc18
    b4d0:	sub	r3, fp, #996	; 0x3e4
    b4d4:	ldrd	r0, [r3]
    b4d8:	mov	ip, r0
    b4dc:	sub	r3, fp, #1004	; 0x3ec
    b4e0:	ldrd	r2, [r3]
    b4e4:	mov	lr, r2
    b4e8:	eor	ip, ip, lr
    b4ec:	str	ip, [fp, #-1012]	; 0xfffffc0c
    b4f0:	eor	r3, r1, r3
    b4f4:	str	r3, [fp, #-1008]	; 0xfffffc10
    b4f8:	ldr	r3, [fp, #-104]	; 0xffffff98
    b4fc:	sub	r2, r3, #15
    b500:	sub	r3, fp, #828	; 0x33c
    b504:	mov	r1, r3
    b508:	lsl	r3, r2, #3
    b50c:	add	r3, r1, r3
    b510:	ldrd	r2, [r3]
    b514:	mov	r0, #0
    b518:	mov	r1, #0
    b51c:	lsr	r0, r2, #7
    b520:	orr	r0, r0, r3, lsl #25
    b524:	lsr	r1, r3, #7
    b528:	sub	r3, fp, #1012	; 0x3f4
    b52c:	ldrd	r2, [r3]
    b530:	mov	ip, r2
    b534:	eor	ip, ip, r0
    b538:	str	ip, [fp, #-1020]	; 0xfffffc04
    b53c:	eor	r3, r3, r1
    b540:	str	r3, [fp, #-1016]	; 0xfffffc08
    b544:	sub	r3, fp, #988	; 0x3dc
    b548:	ldrd	r0, [r3]
    b54c:	mov	ip, r0
    b550:	sub	r3, fp, #1020	; 0x3fc
    b554:	ldrd	r2, [r3]
    b558:	mov	lr, r2
    b55c:	adds	r8, ip, lr
    b560:	adc	r9, r1, r3
    b564:	ldr	r3, [fp, #-104]	; 0xffffff98
    b568:	sub	r2, r3, #16
    b56c:	sub	r3, fp, #828	; 0x33c
    b570:	mov	r1, r3
    b574:	lsl	r3, r2, #3
    b578:	add	r3, r1, r3
    b57c:	ldrd	r2, [r3]
    b580:	adds	r1, r8, r2
    b584:	str	r1, [fp, #-1028]	; 0xfffffbfc
    b588:	adc	r3, r9, r3
    b58c:	str	r3, [fp, #-1024]	; 0xfffffc00
    b590:	sub	r3, fp, #828	; 0x33c
    b594:	mov	r2, r3
    b598:	ldr	r3, [fp, #-104]	; 0xffffff98
    b59c:	lsl	r3, r3, #3
    b5a0:	add	r3, r2, r3
    b5a4:	sub	r2, fp, #1024	; 0x400
    b5a8:	sub	r2, r2, #4
    b5ac:	ldrd	r0, [r2]
    b5b0:	strd	r0, [r3]
    b5b4:	ldr	r3, [fp, #-104]	; 0xffffff98
    b5b8:	add	r3, r3, #1
    b5bc:	str	r3, [fp, #-104]	; 0xffffff98
    b5c0:	ldr	r3, [fp, #-104]	; 0xffffff98
    b5c4:	cmp	r3, #79	; 0x4f
    b5c8:	bls	b334 <rb_sha512_process_block+0x3f8>
    b5cc:	mov	r3, #0
    b5d0:	str	r3, [fp, #-104]	; 0xffffff98
    b5d4:	b	ba5c <rb_sha512_process_block+0xb20>
    b5d8:	ldr	r3, [fp, #-72]	; 0xffffffb8
    b5dc:	lsl	r2, r3, #18
    b5e0:	ldr	r3, [fp, #-76]	; 0xffffffb4
    b5e4:	lsr	r3, r3, #14
    b5e8:	orr	r3, r2, r3
    b5ec:	str	r3, [fp, #-1036]	; 0xfffffbf4
    b5f0:	ldr	r3, [fp, #-76]	; 0xffffffb4
    b5f4:	lsl	r2, r3, #18
    b5f8:	ldr	r3, [fp, #-72]	; 0xffffffb8
    b5fc:	lsr	r3, r3, #14
    b600:	orr	r3, r2, r3
    b604:	str	r3, [fp, #-1032]	; 0xfffffbf8
    b608:	ldr	r3, [fp, #-72]	; 0xffffffb8
    b60c:	lsl	r2, r3, #14
    b610:	ldr	r3, [fp, #-76]	; 0xffffffb4
    b614:	lsr	r3, r3, #18
    b618:	orr	r3, r2, r3
    b61c:	str	r3, [fp, #-1044]	; 0xfffffbec
    b620:	ldr	r3, [fp, #-76]	; 0xffffffb4
    b624:	lsl	r2, r3, #14
    b628:	ldr	r3, [fp, #-72]	; 0xffffffb8
    b62c:	lsr	r3, r3, #18
    b630:	orr	r3, r2, r3
    b634:	str	r3, [fp, #-1040]	; 0xfffffbf0
    b638:	sub	r3, fp, #1024	; 0x400
    b63c:	sub	r3, r3, #12
    b640:	ldrd	r0, [r3]
    b644:	mov	ip, r0
    b648:	sub	r3, fp, #1040	; 0x410
    b64c:	sub	r3, r3, #4
    b650:	ldrd	r2, [r3]
    b654:	mov	lr, r2
    b658:	eor	ip, ip, lr
    b65c:	str	ip, [fp, #-1052]	; 0xfffffbe4
    b660:	eor	r3, r1, r3
    b664:	str	r3, [fp, #-1048]	; 0xfffffbe8
    b668:	ldr	r3, [fp, #-76]	; 0xffffffb4
    b66c:	lsr	r2, r3, #9
    b670:	ldr	r3, [fp, #-72]	; 0xffffffb8
    b674:	lsl	r3, r3, #23
    b678:	orr	r3, r2, r3
    b67c:	str	r3, [fp, #-1056]	; 0xfffffbe0
    b680:	ldr	r3, [fp, #-72]	; 0xffffffb8
    b684:	lsr	r2, r3, #9
    b688:	ldr	r3, [fp, #-76]	; 0xffffffb4
    b68c:	lsl	r3, r3, #23
    b690:	orr	r3, r2, r3
    b694:	str	r3, [fp, #-1060]	; 0xfffffbdc
    b698:	sub	r3, fp, #1040	; 0x410
    b69c:	sub	r3, r3, #12
    b6a0:	ldrd	r0, [r3]
    b6a4:	mov	ip, r0
    b6a8:	sub	r3, fp, #1056	; 0x420
    b6ac:	sub	r3, r3, #4
    b6b0:	ldrd	r2, [r3]
    b6b4:	mov	lr, r2
    b6b8:	eor	ip, ip, lr
    b6bc:	str	ip, [fp, #-1068]	; 0xfffffbd4
    b6c0:	eor	r3, r1, r3
    b6c4:	str	r3, [fp, #-1064]	; 0xfffffbd8
    b6c8:	ldrd	r2, [fp, #-100]	; 0xffffff9c
    b6cc:	sub	r1, fp, #1056	; 0x420
    b6d0:	sub	r1, r1, #12
    b6d4:	ldrd	r0, [r1]
    b6d8:	mov	ip, r0
    b6dc:	adds	ip, ip, r2
    b6e0:	str	ip, [fp, #-1076]	; 0xfffffbcc
    b6e4:	adc	r3, r1, r3
    b6e8:	str	r3, [fp, #-1072]	; 0xfffffbd0
    b6ec:	ldrd	r0, [fp, #-76]	; 0xffffffb4
    b6f0:	ldrd	r2, [fp, #-84]	; 0xffffffac
    b6f4:	and	ip, r0, r2
    b6f8:	str	ip, [fp, #-1084]	; 0xfffffbc4
    b6fc:	and	r3, r1, r3
    b700:	str	r3, [fp, #-1080]	; 0xfffffbc8
    b704:	ldrd	r2, [fp, #-76]	; 0xffffffb4
    b708:	mvn	r1, r2
    b70c:	str	r1, [fp, #-1092]	; 0xfffffbbc
    b710:	mvn	r3, r3
    b714:	str	r3, [fp, #-1088]	; 0xfffffbc0
    b718:	ldrd	r2, [fp, #-92]	; 0xffffffa4
    b71c:	sub	r1, fp, #1088	; 0x440
    b720:	sub	r1, r1, #4
    b724:	ldrd	r0, [r1]
    b728:	mov	ip, r0
    b72c:	and	ip, ip, r2
    b730:	str	ip, [fp, #-1100]	; 0xfffffbb4
    b734:	and	r3, r1, r3
    b738:	str	r3, [fp, #-1096]	; 0xfffffbb8
    b73c:	sub	r3, fp, #1072	; 0x430
    b740:	sub	r3, r3, #12
    b744:	ldrd	r0, [r3]
    b748:	mov	ip, r0
    b74c:	sub	r3, fp, #1088	; 0x440
    b750:	sub	r3, r3, #12
    b754:	ldrd	r2, [r3]
    b758:	mov	lr, r2
    b75c:	eor	ip, ip, lr
    b760:	str	ip, [fp, #-1108]	; 0xfffffbac
    b764:	eor	r3, r1, r3
    b768:	str	r3, [fp, #-1104]	; 0xfffffbb0
    b76c:	sub	r3, fp, #1072	; 0x430
    b770:	sub	r3, r3, #4
    b774:	ldrd	r0, [r3]
    b778:	mov	ip, r0
    b77c:	sub	r3, fp, #1104	; 0x450
    b780:	sub	r3, r3, #4
    b784:	ldrd	r2, [r3]
    b788:	mov	lr, r2
    b78c:	adds	ip, ip, lr
    b790:	str	ip, [fp, #-1116]	; 0xfffffba4
    b794:	adc	r3, r1, r3
    b798:	str	r3, [fp, #-1112]	; 0xfffffba8
    b79c:	ldr	r2, [pc, #1180]	; bc40 <rb_sha512_process_block+0xd04>
    b7a0:	add	r2, pc, r2
    b7a4:	ldr	r3, [fp, #-104]	; 0xffffff98
    b7a8:	lsl	r3, r3, #3
    b7ac:	add	r3, r2, r3
    b7b0:	ldrd	r2, [r3]
    b7b4:	sub	r1, fp, #1104	; 0x450
    b7b8:	sub	r1, r1, #12
    b7bc:	ldrd	r0, [r1]
    b7c0:	mov	ip, r0
    b7c4:	adds	ip, ip, r2
    b7c8:	str	ip, [fp, #-1124]	; 0xfffffb9c
    b7cc:	adc	r3, r1, r3
    b7d0:	str	r3, [fp, #-1120]	; 0xfffffba0
    b7d4:	sub	r3, fp, #828	; 0x33c
    b7d8:	mov	r2, r3
    b7dc:	ldr	r3, [fp, #-104]	; 0xffffff98
    b7e0:	lsl	r3, r3, #3
    b7e4:	add	r3, r2, r3
    b7e8:	ldrd	r2, [r3]
    b7ec:	sub	r1, fp, #1120	; 0x460
    b7f0:	sub	r1, r1, #4
    b7f4:	ldrd	r0, [r1]
    b7f8:	mov	ip, r0
    b7fc:	adds	ip, ip, r2
    b800:	str	ip, [fp, #-1204]	; 0xfffffb4c
    b804:	adc	r3, r1, r3
    b808:	str	r3, [fp, #-1200]	; 0xfffffb50
    b80c:	sub	r3, fp, #1200	; 0x4b0
    b810:	sub	r3, r3, #4
    b814:	ldrd	r2, [r3]
    b818:	strd	r2, [fp, #-180]	; 0xffffff4c
    b81c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    b820:	lsl	r2, r3, #4
    b824:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b828:	lsr	r3, r3, #28
    b82c:	orr	r3, r2, r3
    b830:	str	r3, [fp, #-1132]	; 0xfffffb94
    b834:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b838:	lsl	r2, r3, #4
    b83c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    b840:	lsr	r3, r3, #28
    b844:	orr	r3, r2, r3
    b848:	str	r3, [fp, #-1128]	; 0xfffffb98
    b84c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b850:	lsr	r2, r3, #2
    b854:	ldr	r3, [fp, #-40]	; 0xffffffd8
    b858:	lsl	r3, r3, #30
    b85c:	orr	r3, r2, r3
    b860:	str	r3, [fp, #-1136]	; 0xfffffb90
    b864:	ldr	r3, [fp, #-40]	; 0xffffffd8
    b868:	lsr	r2, r3, #2
    b86c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b870:	lsl	r3, r3, #30
    b874:	orr	r3, r2, r3
    b878:	str	r3, [fp, #-1140]	; 0xfffffb8c
    b87c:	sub	r3, fp, #1120	; 0x460
    b880:	sub	r3, r3, #12
    b884:	ldrd	r0, [r3]
    b888:	mov	ip, r0
    b88c:	sub	r3, fp, #1136	; 0x470
    b890:	sub	r3, r3, #4
    b894:	ldrd	r2, [r3]
    b898:	mov	lr, r2
    b89c:	eor	ip, ip, lr
    b8a0:	str	ip, [fp, #-1148]	; 0xfffffb84
    b8a4:	eor	r3, r1, r3
    b8a8:	str	r3, [fp, #-1144]	; 0xfffffb88
    b8ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b8b0:	lsr	r2, r3, #7
    b8b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    b8b8:	lsl	r3, r3, #25
    b8bc:	orr	r3, r2, r3
    b8c0:	str	r3, [fp, #-1152]	; 0xfffffb80
    b8c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    b8c8:	lsr	r2, r3, #7
    b8cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b8d0:	lsl	r3, r3, #25
    b8d4:	orr	r3, r2, r3
    b8d8:	str	r3, [fp, #-1156]	; 0xfffffb7c
    b8dc:	sub	r3, fp, #1136	; 0x470
    b8e0:	sub	r3, r3, #12
    b8e4:	ldrd	r0, [r3]
    b8e8:	mov	ip, r0
    b8ec:	sub	r3, fp, #1152	; 0x480
    b8f0:	sub	r3, r3, #4
    b8f4:	ldrd	r2, [r3]
    b8f8:	mov	lr, r2
    b8fc:	eor	ip, ip, lr
    b900:	str	ip, [fp, #-1164]	; 0xfffffb74
    b904:	eor	r3, r1, r3
    b908:	str	r3, [fp, #-1160]	; 0xfffffb78
    b90c:	ldrd	r0, [fp, #-52]	; 0xffffffcc
    b910:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    b914:	eor	ip, r0, r2
    b918:	str	ip, [fp, #-1172]	; 0xfffffb6c
    b91c:	eor	r3, r1, r3
    b920:	str	r3, [fp, #-1168]	; 0xfffffb70
    b924:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    b928:	sub	r1, fp, #1168	; 0x490
    b92c:	sub	r1, r1, #4
    b930:	ldrd	r0, [r1]
    b934:	mov	ip, r0
    b938:	and	ip, ip, r2
    b93c:	str	ip, [fp, #-1180]	; 0xfffffb64
    b940:	and	r3, r1, r3
    b944:	str	r3, [fp, #-1176]	; 0xfffffb68
    b948:	ldrd	r0, [fp, #-52]	; 0xffffffcc
    b94c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    b950:	and	ip, r0, r2
    b954:	str	ip, [fp, #-1188]	; 0xfffffb5c
    b958:	and	r3, r1, r3
    b95c:	str	r3, [fp, #-1184]	; 0xfffffb60
    b960:	sub	r3, fp, #1168	; 0x490
    b964:	sub	r3, r3, #12
    b968:	ldrd	r0, [r3]
    b96c:	mov	ip, r0
    b970:	sub	r3, fp, #1184	; 0x4a0
    b974:	sub	r3, r3, #4
    b978:	ldrd	r2, [r3]
    b97c:	mov	lr, r2
    b980:	eor	ip, ip, lr
    b984:	str	ip, [fp, #-1196]	; 0xfffffb54
    b988:	eor	r3, r1, r3
    b98c:	str	r3, [fp, #-1192]	; 0xfffffb58
    b990:	sub	r3, fp, #1152	; 0x480
    b994:	sub	r3, r3, #12
    b998:	ldrd	r0, [r3]
    b99c:	mov	ip, r0
    b9a0:	sub	r3, fp, #1184	; 0x4a0
    b9a4:	sub	r3, r3, #12
    b9a8:	ldrd	r2, [r3]
    b9ac:	mov	lr, r2
    b9b0:	adds	ip, ip, lr
    b9b4:	str	ip, [fp, #-1212]	; 0xfffffb44
    b9b8:	adc	r3, r1, r3
    b9bc:	str	r3, [fp, #-1208]	; 0xfffffb48
    b9c0:	sub	r3, fp, #1200	; 0x4b0
    b9c4:	sub	r3, r3, #12
    b9c8:	ldrd	r2, [r3]
    b9cc:	strd	r2, [fp, #-188]	; 0xffffff44
    b9d0:	ldrd	r2, [fp, #-92]	; 0xffffffa4
    b9d4:	strd	r2, [fp, #-100]	; 0xffffff9c
    b9d8:	ldrd	r2, [fp, #-84]	; 0xffffffac
    b9dc:	strd	r2, [fp, #-92]	; 0xffffffa4
    b9e0:	ldrd	r2, [fp, #-76]	; 0xffffffb4
    b9e4:	strd	r2, [fp, #-84]	; 0xffffffac
    b9e8:	ldrd	r0, [fp, #-68]	; 0xffffffbc
    b9ec:	ldrd	r2, [fp, #-180]	; 0xffffff4c
    b9f0:	adds	ip, r0, r2
    b9f4:	str	ip, [fp, #-1220]	; 0xfffffb3c
    b9f8:	adc	r3, r1, r3
    b9fc:	str	r3, [fp, #-1216]	; 0xfffffb40
    ba00:	sub	r3, fp, #1216	; 0x4c0
    ba04:	sub	r3, r3, #4
    ba08:	ldrd	r2, [r3]
    ba0c:	strd	r2, [fp, #-76]	; 0xffffffb4
    ba10:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    ba14:	strd	r2, [fp, #-68]	; 0xffffffbc
    ba18:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    ba1c:	strd	r2, [fp, #-60]	; 0xffffffc4
    ba20:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    ba24:	strd	r2, [fp, #-52]	; 0xffffffcc
    ba28:	ldrd	r0, [fp, #-180]	; 0xffffff4c
    ba2c:	ldrd	r2, [fp, #-188]	; 0xffffff44
    ba30:	adds	ip, r0, r2
    ba34:	str	ip, [fp, #-1228]	; 0xfffffb34
    ba38:	adc	r3, r1, r3
    ba3c:	str	r3, [fp, #-1224]	; 0xfffffb38
    ba40:	sub	r3, fp, #1216	; 0x4c0
    ba44:	sub	r3, r3, #12
    ba48:	ldrd	r2, [r3]
    ba4c:	strd	r2, [fp, #-44]	; 0xffffffd4
    ba50:	ldr	r3, [fp, #-104]	; 0xffffff98
    ba54:	add	r3, r3, #1
    ba58:	str	r3, [fp, #-104]	; 0xffffff98
    ba5c:	ldr	r3, [fp, #-104]	; 0xffffff98
    ba60:	cmp	r3, #79	; 0x4f
    ba64:	bls	b5d8 <rb_sha512_process_block+0x69c>
    ba68:	ldrd	r0, [fp, #-44]	; 0xffffffd4
    ba6c:	ldrd	r2, [fp, #-116]	; 0xffffff8c
    ba70:	adds	ip, r0, r2
    ba74:	str	ip, [fp, #-1236]	; 0xfffffb2c
    ba78:	adc	r3, r1, r3
    ba7c:	str	r3, [fp, #-1232]	; 0xfffffb30
    ba80:	sub	r3, fp, #1232	; 0x4d0
    ba84:	sub	r3, r3, #4
    ba88:	ldrd	r2, [r3]
    ba8c:	strd	r2, [fp, #-44]	; 0xffffffd4
    ba90:	ldrd	r0, [fp, #-52]	; 0xffffffcc
    ba94:	ldrd	r2, [fp, #-124]	; 0xffffff84
    ba98:	adds	ip, r0, r2
    ba9c:	str	ip, [fp, #-1244]	; 0xfffffb24
    baa0:	adc	r3, r1, r3
    baa4:	str	r3, [fp, #-1240]	; 0xfffffb28
    baa8:	sub	r3, fp, #1232	; 0x4d0
    baac:	sub	r3, r3, #12
    bab0:	ldrd	r2, [r3]
    bab4:	strd	r2, [fp, #-52]	; 0xffffffcc
    bab8:	ldrd	r0, [fp, #-60]	; 0xffffffc4
    babc:	ldrd	r2, [fp, #-132]	; 0xffffff7c
    bac0:	adds	ip, r0, r2
    bac4:	str	ip, [fp, #-1252]	; 0xfffffb1c
    bac8:	adc	r3, r1, r3
    bacc:	str	r3, [fp, #-1248]	; 0xfffffb20
    bad0:	sub	r3, fp, #1248	; 0x4e0
    bad4:	sub	r3, r3, #4
    bad8:	ldrd	r2, [r3]
    badc:	strd	r2, [fp, #-60]	; 0xffffffc4
    bae0:	ldrd	r0, [fp, #-68]	; 0xffffffbc
    bae4:	ldrd	r2, [fp, #-140]	; 0xffffff74
    bae8:	adds	ip, r0, r2
    baec:	str	ip, [fp, #-1260]	; 0xfffffb14
    baf0:	adc	r3, r1, r3
    baf4:	str	r3, [fp, #-1256]	; 0xfffffb18
    baf8:	sub	r3, fp, #1248	; 0x4e0
    bafc:	sub	r3, r3, #12
    bb00:	ldrd	r2, [r3]
    bb04:	strd	r2, [fp, #-68]	; 0xffffffbc
    bb08:	ldrd	r0, [fp, #-76]	; 0xffffffb4
    bb0c:	ldrd	r2, [fp, #-148]	; 0xffffff6c
    bb10:	adds	ip, r0, r2
    bb14:	str	ip, [fp, #-1268]	; 0xfffffb0c
    bb18:	adc	r3, r1, r3
    bb1c:	str	r3, [fp, #-1264]	; 0xfffffb10
    bb20:	sub	r3, fp, #1264	; 0x4f0
    bb24:	sub	r3, r3, #4
    bb28:	ldrd	r2, [r3]
    bb2c:	strd	r2, [fp, #-76]	; 0xffffffb4
    bb30:	ldrd	r0, [fp, #-84]	; 0xffffffac
    bb34:	ldrd	r2, [fp, #-156]	; 0xffffff64
    bb38:	adds	ip, r0, r2
    bb3c:	str	ip, [fp, #-1276]	; 0xfffffb04
    bb40:	adc	r3, r1, r3
    bb44:	str	r3, [fp, #-1272]	; 0xfffffb08
    bb48:	sub	r3, fp, #1264	; 0x4f0
    bb4c:	sub	r3, r3, #12
    bb50:	ldrd	r2, [r3]
    bb54:	strd	r2, [fp, #-84]	; 0xffffffac
    bb58:	ldrd	r0, [fp, #-92]	; 0xffffffa4
    bb5c:	ldrd	r2, [fp, #-164]	; 0xffffff5c
    bb60:	adds	ip, r0, r2
    bb64:	str	ip, [fp, #-1284]	; 0xfffffafc
    bb68:	adc	r3, r1, r3
    bb6c:	str	r3, [fp, #-1280]	; 0xfffffb00
    bb70:	sub	r3, fp, #1280	; 0x500
    bb74:	sub	r3, r3, #4
    bb78:	ldrd	r2, [r3]
    bb7c:	strd	r2, [fp, #-92]	; 0xffffffa4
    bb80:	ldrd	r0, [fp, #-100]	; 0xffffff9c
    bb84:	ldrd	r2, [fp, #-172]	; 0xffffff54
    bb88:	adds	ip, r0, r2
    bb8c:	str	ip, [fp, #-1292]	; 0xfffffaf4
    bb90:	adc	r3, r1, r3
    bb94:	str	r3, [fp, #-1288]	; 0xfffffaf8
    bb98:	sub	r3, fp, #1280	; 0x500
    bb9c:	sub	r3, r3, #12
    bba0:	ldrd	r2, [r3]
    bba4:	strd	r2, [fp, #-100]	; 0xffffff9c
    bba8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    bbac:	sub	r3, r3, #16
    bbb0:	str	r3, [fp, #-36]	; 0xffffffdc
    bbb4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    bbb8:	cmp	r3, #0
    bbbc:	bne	b038 <rb_sha512_process_block+0xfc>
    bbc0:	ldr	r1, [fp, #-840]	; 0xfffffcb8
    bbc4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    bbc8:	strd	r2, [r1]
    bbcc:	ldr	r1, [fp, #-840]	; 0xfffffcb8
    bbd0:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    bbd4:	strd	r2, [r1, #8]
    bbd8:	ldr	r1, [fp, #-840]	; 0xfffffcb8
    bbdc:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    bbe0:	strd	r2, [r1, #16]
    bbe4:	ldr	r1, [fp, #-840]	; 0xfffffcb8
    bbe8:	ldrd	r2, [fp, #-68]	; 0xffffffbc
    bbec:	strd	r2, [r1, #24]
    bbf0:	ldr	r1, [fp, #-840]	; 0xfffffcb8
    bbf4:	ldrd	r2, [fp, #-76]	; 0xffffffb4
    bbf8:	strd	r2, [r1, #32]
    bbfc:	ldr	r1, [fp, #-840]	; 0xfffffcb8
    bc00:	ldrd	r2, [fp, #-84]	; 0xffffffac
    bc04:	strd	r2, [r1, #40]	; 0x28
    bc08:	ldr	r1, [fp, #-840]	; 0xfffffcb8
    bc0c:	ldrd	r2, [fp, #-92]	; 0xffffffa4
    bc10:	strd	r2, [r1, #48]	; 0x30
    bc14:	ldr	r1, [fp, #-840]	; 0xfffffcb8
    bc18:	ldrd	r2, [fp, #-100]	; 0xffffff9c
    bc1c:	strd	r2, [r1, #56]	; 0x38
    bc20:	nop	{0}
    bc24:	sub	sp, fp, #28
    bc28:	ldrd	r4, [sp]
    bc2c:	ldrd	r6, [sp, #8]
    bc30:	ldrd	r8, [sp, #16]
    bc34:	ldr	fp, [sp, #24]
    bc38:	add	sp, sp, #28
    bc3c:	pop	{pc}		; (ldr pc, [sp], #4)
    bc40:	.word	0x00017af8

0000bc44 <rb_sha512_init_ctx>:
    bc44:	push	{fp}		; (str fp, [sp, #-4]!)
    bc48:	add	fp, sp, #0
    bc4c:	sub	sp, sp, #12
    bc50:	str	r0, [fp, #-8]
    bc54:	ldr	r1, [fp, #-8]
    bc58:	add	r3, pc, #184	; 0xb8
    bc5c:	ldrd	r2, [r3]
    bc60:	strd	r2, [r1]
    bc64:	ldr	r1, [fp, #-8]
    bc68:	add	r3, pc, #176	; 0xb0
    bc6c:	ldrd	r2, [r3]
    bc70:	strd	r2, [r1, #8]
    bc74:	ldr	r1, [fp, #-8]
    bc78:	add	r3, pc, #168	; 0xa8
    bc7c:	ldrd	r2, [r3]
    bc80:	strd	r2, [r1, #16]
    bc84:	ldr	r1, [fp, #-8]
    bc88:	add	r3, pc, #160	; 0xa0
    bc8c:	ldrd	r2, [r3]
    bc90:	strd	r2, [r1, #24]
    bc94:	ldr	r1, [fp, #-8]
    bc98:	add	r3, pc, #152	; 0x98
    bc9c:	ldrd	r2, [r3]
    bca0:	strd	r2, [r1, #32]
    bca4:	ldr	r1, [fp, #-8]
    bca8:	add	r3, pc, #144	; 0x90
    bcac:	ldrd	r2, [r3]
    bcb0:	strd	r2, [r1, #40]	; 0x28
    bcb4:	ldr	r1, [fp, #-8]
    bcb8:	add	r3, pc, #136	; 0x88
    bcbc:	ldrd	r2, [r3]
    bcc0:	strd	r2, [r1, #48]	; 0x30
    bcc4:	ldr	r1, [fp, #-8]
    bcc8:	add	r3, pc, #128	; 0x80
    bccc:	ldrd	r2, [r3]
    bcd0:	strd	r2, [r1, #56]	; 0x38
    bcd4:	ldr	r1, [fp, #-8]
    bcd8:	mov	r2, #0
    bcdc:	mov	r3, #0
    bce0:	strd	r2, [r1, #72]	; 0x48
    bce4:	ldr	r3, [fp, #-8]
    bce8:	ldrd	r2, [r3, #72]	; 0x48
    bcec:	ldr	r1, [fp, #-8]
    bcf0:	strd	r2, [r1, #64]	; 0x40
    bcf4:	ldr	r1, [fp, #-8]
    bcf8:	mov	r2, #0
    bcfc:	mov	r3, #0
    bd00:	strd	r2, [r1, #80]	; 0x50
    bd04:	nop	{0}
    bd08:	add	sp, fp, #0
    bd0c:	pop	{fp}		; (ldr fp, [sp], #4)
    bd10:	bx	lr
    bd14:	nop	{0}
    bd18:	.word	0xf3bcc908
    bd1c:	.word	0x6a09e667
    bd20:	.word	0x84caa73b
    bd24:	.word	0xbb67ae85
    bd28:	.word	0xfe94f82b
    bd2c:	.word	0x3c6ef372
    bd30:	.word	0x5f1d36f1
    bd34:	.word	0xa54ff53a
    bd38:	.word	0xade682d1
    bd3c:	.word	0x510e527f
    bd40:	.word	0x2b3e6c1f
    bd44:	.word	0x9b05688c
    bd48:	.word	0xfb41bd6b
    bd4c:	.word	0x1f83d9ab
    bd50:	.word	0x137e2179
    bd54:	.word	0x5be0cd19

0000bd58 <rb_sha512_finish_ctx>:
    bd58:	strd	r4, [sp, #-32]!	; 0xffffffe0
    bd5c:	strd	r6, [sp, #8]
    bd60:	strd	r8, [sp, #16]
    bd64:	str	fp, [sp, #24]
    bd68:	str	lr, [sp, #28]
    bd6c:	add	fp, sp, #28
    bd70:	sub	sp, sp, #424	; 0x1a8
    bd74:	str	r0, [fp, #-56]	; 0xffffffc8
    bd78:	str	r1, [fp, #-60]	; 0xffffffc4
    bd7c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    bd80:	ldrd	r2, [r3, #80]	; 0x50
    bd84:	strd	r2, [fp, #-44]	; 0xffffffd4
    bd88:	ldr	r3, [fp, #-56]	; 0xffffffc8
    bd8c:	ldrd	r0, [r3, #64]	; 0x40
    bd90:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    bd94:	adds	r4, r0, r2
    bd98:	adc	r5, r1, r3
    bd9c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    bda0:	strd	r4, [r3, #64]	; 0x40
    bda4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    bda8:	ldrd	r0, [r3, #64]	; 0x40
    bdac:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    bdb0:	cmp	r3, r1
    bdb4:	cmpeq	r2, r0
    bdb8:	bls	bdd4 <rb_sha512_finish_ctx+0x7c>
    bdbc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    bdc0:	ldrd	r2, [r3, #72]	; 0x48
    bdc4:	adds	r8, r2, #1
    bdc8:	adc	r9, r3, #0
    bdcc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    bdd0:	strd	r8, [r3, #72]	; 0x48
    bdd4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    bdd8:	cmp	r3, #0
    bddc:	cmpeq	r2, #111	; 0x6f
    bde0:	bls	bdf0 <rb_sha512_finish_ctx+0x98>
    bde4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    bde8:	rsb	r3, r3, #240	; 0xf0
    bdec:	b	bdf8 <rb_sha512_finish_ctx+0xa0>
    bdf0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    bdf4:	rsb	r3, r3, #112	; 0x70
    bdf8:	str	r3, [fp, #-48]	; 0xffffffd0
    bdfc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    be00:	add	r2, r3, #88	; 0x58
    be04:	ldr	r3, [fp, #-56]	; 0xffffffc8
    be08:	add	r0, r3, r2
    be0c:	ldr	r2, [fp, #-48]	; 0xffffffd0
    be10:	ldr	r3, [pc, #2780]	; c8f4 <rb_sha512_finish_ctx+0xb9c>
    be14:	add	r3, pc, r3
    be18:	mov	r1, r3
    be1c:	bl	4834 <memcpy@plt>
    be20:	ldr	r3, [fp, #-48]	; 0xffffffd0
    be24:	mov	r0, r3
    be28:	mov	r1, #0
    be2c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    be30:	adds	r6, r0, r2
    be34:	adc	r7, r1, r3
    be38:	adds	r3, r6, #8
    be3c:	str	r3, [fp, #-68]	; 0xffffffbc
    be40:	adc	r3, r7, #0
    be44:	str	r3, [fp, #-64]	; 0xffffffc0
    be48:	ldr	r3, [fp, #-68]	; 0xffffffbc
    be4c:	add	r2, r3, #88	; 0x58
    be50:	ldr	r3, [fp, #-56]	; 0xffffffc8
    be54:	add	r3, r3, r2
    be58:	str	r3, [fp, #-52]	; 0xffffffcc
    be5c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    be60:	ldrd	r2, [r3, #64]	; 0x40
    be64:	mov	r4, #0
    be68:	mov	r5, #0
    be6c:	lsl	r5, r2, #27
    be70:	mov	r4, #0
    be74:	ldr	r3, [fp, #-56]	; 0xffffffc8
    be78:	ldrd	r2, [r3, #64]	; 0x40
    be7c:	mov	r0, #0
    be80:	mov	r1, #0
    be84:	lsl	r1, r2, #11
    be88:	mov	r0, #0
    be8c:	mov	r2, #0
    be90:	mov	r3, #16711680	; 0xff0000
    be94:	and	ip, r0, r2
    be98:	str	ip, [fp, #-76]	; 0xffffffb4
    be9c:	and	r3, r1, r3
    bea0:	str	r3, [fp, #-72]	; 0xffffffb8
    bea4:	ldrd	r2, [fp, #-76]	; 0xffffffb4
    bea8:	mov	r1, r2
    beac:	orr	r1, r4, r1
    beb0:	str	r1, [fp, #-84]	; 0xffffffac
    beb4:	orr	r3, r5, r3
    beb8:	str	r3, [fp, #-80]	; 0xffffffb0
    bebc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    bec0:	ldrd	r2, [r3, #64]	; 0x40
    bec4:	mov	r0, #0
    bec8:	mov	r1, #0
    becc:	lsl	r1, r3, #27
    bed0:	orr	r1, r1, r2, lsr #5
    bed4:	lsl	r0, r2, #27
    bed8:	mov	r2, #0
    bedc:	mov	r3, #65280	; 0xff00
    bee0:	and	ip, r0, r2
    bee4:	str	ip, [fp, #-92]	; 0xffffffa4
    bee8:	and	r3, r1, r3
    beec:	str	r3, [fp, #-88]	; 0xffffffa8
    bef0:	ldrd	r0, [fp, #-84]	; 0xffffffac
    bef4:	mov	ip, r0
    bef8:	ldrd	r2, [fp, #-92]	; 0xffffffa4
    befc:	mov	lr, r2
    bf00:	orr	ip, ip, lr
    bf04:	str	ip, [fp, #-100]	; 0xffffff9c
    bf08:	orr	r3, r1, r3
    bf0c:	str	r3, [fp, #-96]	; 0xffffffa0
    bf10:	ldr	r3, [fp, #-56]	; 0xffffffc8
    bf14:	ldrd	r2, [r3, #64]	; 0x40
    bf18:	mov	r0, #0
    bf1c:	mov	r1, #0
    bf20:	lsl	r1, r3, #11
    bf24:	orr	r1, r1, r2, lsr #21
    bf28:	lsl	r0, r2, #11
    bf2c:	mov	r2, #0
    bf30:	mov	r3, #255	; 0xff
    bf34:	and	ip, r0, r2
    bf38:	str	ip, [fp, #-108]	; 0xffffff94
    bf3c:	and	r3, r1, r3
    bf40:	str	r3, [fp, #-104]	; 0xffffff98
    bf44:	ldrd	r0, [fp, #-100]	; 0xffffff9c
    bf48:	mov	ip, r0
    bf4c:	ldrd	r2, [fp, #-108]	; 0xffffff94
    bf50:	mov	lr, r2
    bf54:	orr	ip, ip, lr
    bf58:	str	ip, [fp, #-116]	; 0xffffff8c
    bf5c:	orr	r3, r1, r3
    bf60:	str	r3, [fp, #-112]	; 0xffffff90
    bf64:	ldr	r3, [fp, #-56]	; 0xffffffc8
    bf68:	ldrd	r2, [r3, #64]	; 0x40
    bf6c:	mov	r0, #0
    bf70:	mov	r1, #0
    bf74:	lsl	r1, r3, #3
    bf78:	orr	r1, r1, r2, lsr #29
    bf7c:	lsl	r0, r2, #3
    bf80:	mov	r4, #0
    bf84:	mov	r5, #0
    bf88:	lsr	r4, r0, #8
    bf8c:	orr	r4, r4, r1, lsl #24
    bf90:	lsr	r5, r1, #8
    bf94:	mov	r2, #-16777216	; 0xff000000
    bf98:	mov	r3, #0
    bf9c:	and	r1, r4, r2
    bfa0:	str	r1, [fp, #-124]	; 0xffffff84
    bfa4:	and	r3, r5, r3
    bfa8:	str	r3, [fp, #-120]	; 0xffffff88
    bfac:	ldrd	r0, [fp, #-116]	; 0xffffff8c
    bfb0:	mov	ip, r0
    bfb4:	ldrd	r2, [fp, #-124]	; 0xffffff84
    bfb8:	mov	lr, r2
    bfbc:	orr	ip, ip, lr
    bfc0:	str	ip, [fp, #-132]	; 0xffffff7c
    bfc4:	orr	r3, r1, r3
    bfc8:	str	r3, [fp, #-128]	; 0xffffff80
    bfcc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    bfd0:	ldrd	r2, [r3, #64]	; 0x40
    bfd4:	mov	r0, #0
    bfd8:	mov	r1, #0
    bfdc:	lsl	r1, r3, #3
    bfe0:	orr	r1, r1, r2, lsr #29
    bfe4:	lsl	r0, r2, #3
    bfe8:	mov	r4, #0
    bfec:	mov	r5, #0
    bff0:	lsr	r4, r0, #24
    bff4:	orr	r4, r4, r1, lsl #8
    bff8:	lsr	r5, r1, #24
    bffc:	mov	r2, #16711680	; 0xff0000
    c000:	mov	r3, #0
    c004:	and	r1, r4, r2
    c008:	str	r1, [fp, #-140]	; 0xffffff74
    c00c:	and	r3, r5, r3
    c010:	str	r3, [fp, #-136]	; 0xffffff78
    c014:	ldrd	r0, [fp, #-132]	; 0xffffff7c
    c018:	mov	ip, r0
    c01c:	ldrd	r2, [fp, #-140]	; 0xffffff74
    c020:	mov	lr, r2
    c024:	orr	ip, ip, lr
    c028:	str	ip, [fp, #-148]	; 0xffffff6c
    c02c:	orr	r3, r1, r3
    c030:	str	r3, [fp, #-144]	; 0xffffff70
    c034:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c038:	ldrd	r2, [r3, #64]	; 0x40
    c03c:	mov	r0, #0
    c040:	mov	r1, #0
    c044:	lsl	r1, r3, #3
    c048:	orr	r1, r1, r2, lsr #29
    c04c:	lsl	r0, r2, #3
    c050:	mov	r4, #0
    c054:	mov	r5, #0
    c058:	lsr	r4, r1, #8
    c05c:	mov	r5, #0
    c060:	mov	r2, #65280	; 0xff00
    c064:	mov	r3, #0
    c068:	and	r1, r4, r2
    c06c:	str	r1, [fp, #-156]	; 0xffffff64
    c070:	and	r3, r5, r3
    c074:	str	r3, [fp, #-152]	; 0xffffff68
    c078:	ldrd	r0, [fp, #-148]	; 0xffffff6c
    c07c:	mov	ip, r0
    c080:	ldrd	r2, [fp, #-156]	; 0xffffff64
    c084:	mov	lr, r2
    c088:	orr	ip, ip, lr
    c08c:	str	ip, [fp, #-164]	; 0xffffff5c
    c090:	orr	r3, r1, r3
    c094:	str	r3, [fp, #-160]	; 0xffffff60
    c098:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c09c:	ldrd	r2, [r3, #64]	; 0x40
    c0a0:	mov	r0, #0
    c0a4:	mov	r1, #0
    c0a8:	lsl	r1, r3, #3
    c0ac:	orr	r1, r1, r2, lsr #29
    c0b0:	lsl	r0, r2, #3
    c0b4:	mov	r2, #0
    c0b8:	mov	r3, #0
    c0bc:	lsr	r2, r1, #24
    c0c0:	mov	r3, #0
    c0c4:	ldrd	r0, [fp, #-164]	; 0xffffff5c
    c0c8:	mov	ip, r0
    c0cc:	orr	ip, ip, r2
    c0d0:	str	ip, [fp, #-172]	; 0xffffff54
    c0d4:	orr	r3, r1, r3
    c0d8:	str	r3, [fp, #-168]	; 0xffffff58
    c0dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    c0e0:	ldrd	r0, [fp, #-172]	; 0xffffff54
    c0e4:	strd	r0, [r3]
    c0e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    c0ec:	mov	r0, r3
    c0f0:	mov	r1, #0
    c0f4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    c0f8:	adds	ip, r0, r2
    c0fc:	str	ip, [fp, #-180]	; 0xffffff4c
    c100:	adc	r3, r1, r3
    c104:	str	r3, [fp, #-176]	; 0xffffff50
    c108:	ldr	r3, [fp, #-180]	; 0xffffff4c
    c10c:	add	r2, r3, #88	; 0x58
    c110:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c114:	add	r3, r3, r2
    c118:	str	r3, [fp, #-52]	; 0xffffffcc
    c11c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c120:	ldrd	r2, [r3, #72]	; 0x48
    c124:	mov	r4, #0
    c128:	mov	r5, #0
    c12c:	lsl	r5, r3, #3
    c130:	orr	r5, r5, r2, lsr #29
    c134:	lsl	r4, r2, #3
    c138:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c13c:	ldrd	r2, [r3, #64]	; 0x40
    c140:	mov	r0, #0
    c144:	mov	r1, #0
    c148:	lsr	r0, r3, #29
    c14c:	mov	r1, #0
    c150:	orr	r3, r4, r0
    c154:	str	r3, [fp, #-188]	; 0xffffff44
    c158:	orr	r3, r5, r1
    c15c:	str	r3, [fp, #-184]	; 0xffffff48
    c160:	mov	r6, #0
    c164:	mov	r7, #0
    c168:	ldr	r3, [fp, #-188]	; 0xffffff44
    c16c:	lsl	r7, r3, #24
    c170:	mov	r6, #0
    c174:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c178:	ldrd	r2, [r3, #72]	; 0x48
    c17c:	mov	r4, #0
    c180:	mov	r5, #0
    c184:	lsl	r5, r3, #3
    c188:	orr	r5, r5, r2, lsr #29
    c18c:	lsl	r4, r2, #3
    c190:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c194:	ldrd	r2, [r3, #64]	; 0x40
    c198:	mov	r0, #0
    c19c:	mov	r1, #0
    c1a0:	lsr	r0, r3, #29
    c1a4:	mov	r1, #0
    c1a8:	orr	r3, r4, r0
    c1ac:	str	r3, [fp, #-196]	; 0xffffff3c
    c1b0:	orr	r3, r5, r1
    c1b4:	str	r3, [fp, #-192]	; 0xffffff40
    c1b8:	mov	r0, #0
    c1bc:	mov	r1, #0
    c1c0:	ldr	r3, [fp, #-196]	; 0xffffff3c
    c1c4:	lsl	r1, r3, #8
    c1c8:	mov	r0, #0
    c1cc:	mov	r2, #0
    c1d0:	mov	r3, #16711680	; 0xff0000
    c1d4:	and	ip, r0, r2
    c1d8:	str	ip, [fp, #-204]	; 0xffffff34
    c1dc:	and	r3, r1, r3
    c1e0:	str	r3, [fp, #-200]	; 0xffffff38
    c1e4:	ldrd	r2, [fp, #-204]	; 0xffffff34
    c1e8:	mov	r1, r2
    c1ec:	orr	r1, r6, r1
    c1f0:	str	r1, [fp, #-212]	; 0xffffff2c
    c1f4:	orr	r3, r7, r3
    c1f8:	str	r3, [fp, #-208]	; 0xffffff30
    c1fc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c200:	ldrd	r2, [r3, #72]	; 0x48
    c204:	mov	r4, #0
    c208:	mov	r5, #0
    c20c:	lsl	r5, r3, #3
    c210:	orr	r5, r5, r2, lsr #29
    c214:	lsl	r4, r2, #3
    c218:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c21c:	ldrd	r2, [r3, #64]	; 0x40
    c220:	mov	r0, #0
    c224:	mov	r1, #0
    c228:	lsr	r0, r3, #29
    c22c:	mov	r1, #0
    c230:	orr	r3, r4, r0
    c234:	str	r3, [fp, #-220]	; 0xffffff24
    c238:	orr	r3, r5, r1
    c23c:	str	r3, [fp, #-216]	; 0xffffff28
    c240:	mov	r0, #0
    c244:	mov	r1, #0
    c248:	ldrd	r2, [fp, #-220]	; 0xffffff24
    c24c:	mov	ip, r3
    c250:	lsl	r1, ip, #24
    c254:	mov	ip, r2
    c258:	orr	r1, r1, ip, lsr #8
    c25c:	mov	r3, r2
    c260:	lsl	r0, r3, #24
    c264:	mov	r2, #0
    c268:	mov	r3, #65280	; 0xff00
    c26c:	and	ip, r0, r2
    c270:	str	ip, [fp, #-228]	; 0xffffff1c
    c274:	and	r3, r1, r3
    c278:	str	r3, [fp, #-224]	; 0xffffff20
    c27c:	ldrd	r0, [fp, #-212]	; 0xffffff2c
    c280:	mov	ip, r0
    c284:	ldrd	r2, [fp, #-228]	; 0xffffff1c
    c288:	mov	lr, r2
    c28c:	orr	ip, ip, lr
    c290:	str	ip, [fp, #-236]	; 0xffffff14
    c294:	orr	r3, r1, r3
    c298:	str	r3, [fp, #-232]	; 0xffffff18
    c29c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c2a0:	ldrd	r2, [r3, #72]	; 0x48
    c2a4:	mov	r4, #0
    c2a8:	mov	r5, #0
    c2ac:	lsl	r5, r3, #3
    c2b0:	orr	r5, r5, r2, lsr #29
    c2b4:	lsl	r4, r2, #3
    c2b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c2bc:	ldrd	r2, [r3, #64]	; 0x40
    c2c0:	mov	r0, #0
    c2c4:	mov	r1, #0
    c2c8:	lsr	r0, r3, #29
    c2cc:	mov	r1, #0
    c2d0:	orr	r3, r4, r0
    c2d4:	str	r3, [fp, #-244]	; 0xffffff0c
    c2d8:	orr	r3, r5, r1
    c2dc:	str	r3, [fp, #-240]	; 0xffffff10
    c2e0:	mov	r0, #0
    c2e4:	mov	r1, #0
    c2e8:	ldrd	r2, [fp, #-244]	; 0xffffff0c
    c2ec:	mov	ip, r3
    c2f0:	lsl	r1, ip, #8
    c2f4:	mov	ip, r2
    c2f8:	orr	r1, r1, ip, lsr #24
    c2fc:	mov	r3, r2
    c300:	lsl	r0, r3, #8
    c304:	mov	r2, #0
    c308:	mov	r3, #255	; 0xff
    c30c:	and	ip, r0, r2
    c310:	str	ip, [fp, #-252]	; 0xffffff04
    c314:	and	r3, r1, r3
    c318:	str	r3, [fp, #-248]	; 0xffffff08
    c31c:	ldrd	r0, [fp, #-236]	; 0xffffff14
    c320:	mov	ip, r0
    c324:	ldrd	r2, [fp, #-252]	; 0xffffff04
    c328:	mov	lr, r2
    c32c:	orr	ip, ip, lr
    c330:	str	ip, [fp, #-260]	; 0xfffffefc
    c334:	orr	r3, r1, r3
    c338:	str	r3, [fp, #-256]	; 0xffffff00
    c33c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c340:	ldrd	r2, [r3, #72]	; 0x48
    c344:	mov	r4, #0
    c348:	mov	r5, #0
    c34c:	lsl	r5, r3, #3
    c350:	orr	r5, r5, r2, lsr #29
    c354:	lsl	r4, r2, #3
    c358:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c35c:	ldrd	r2, [r3, #64]	; 0x40
    c360:	mov	r0, #0
    c364:	mov	r1, #0
    c368:	lsr	r0, r3, #29
    c36c:	mov	r1, #0
    c370:	orr	r3, r4, r0
    c374:	str	r3, [fp, #-268]	; 0xfffffef4
    c378:	orr	r3, r5, r1
    c37c:	str	r3, [fp, #-264]	; 0xfffffef8
    c380:	mov	r0, #0
    c384:	mov	r1, #0
    c388:	sub	r3, fp, #268	; 0x10c
    c38c:	ldrd	r2, [r3]
    c390:	mov	ip, r2
    c394:	lsr	r0, ip, #8
    c398:	mov	ip, r3
    c39c:	orr	r0, r0, ip, lsl #24
    c3a0:	lsr	r1, r3, #8
    c3a4:	mov	r2, #-16777216	; 0xff000000
    c3a8:	mov	r3, #0
    c3ac:	and	ip, r0, r2
    c3b0:	str	ip, [fp, #-276]	; 0xfffffeec
    c3b4:	and	r3, r1, r3
    c3b8:	str	r3, [fp, #-272]	; 0xfffffef0
    c3bc:	sub	r3, fp, #260	; 0x104
    c3c0:	ldrd	r0, [r3]
    c3c4:	mov	ip, r0
    c3c8:	sub	r3, fp, #276	; 0x114
    c3cc:	ldrd	r2, [r3]
    c3d0:	mov	lr, r2
    c3d4:	orr	ip, ip, lr
    c3d8:	str	ip, [fp, #-284]	; 0xfffffee4
    c3dc:	orr	r3, r1, r3
    c3e0:	str	r3, [fp, #-280]	; 0xfffffee8
    c3e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c3e8:	ldrd	r2, [r3, #72]	; 0x48
    c3ec:	mov	r4, #0
    c3f0:	mov	r5, #0
    c3f4:	lsl	r5, r3, #3
    c3f8:	orr	r5, r5, r2, lsr #29
    c3fc:	lsl	r4, r2, #3
    c400:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c404:	ldrd	r2, [r3, #64]	; 0x40
    c408:	mov	r0, #0
    c40c:	mov	r1, #0
    c410:	lsr	r0, r3, #29
    c414:	mov	r1, #0
    c418:	orr	r3, r4, r0
    c41c:	str	r3, [fp, #-292]	; 0xfffffedc
    c420:	orr	r3, r5, r1
    c424:	str	r3, [fp, #-288]	; 0xfffffee0
    c428:	mov	r0, #0
    c42c:	mov	r1, #0
    c430:	sub	r3, fp, #292	; 0x124
    c434:	ldrd	r2, [r3]
    c438:	mov	ip, r2
    c43c:	lsr	r0, ip, #24
    c440:	mov	ip, r3
    c444:	orr	r0, r0, ip, lsl #8
    c448:	lsr	r1, r3, #24
    c44c:	mov	r2, #16711680	; 0xff0000
    c450:	mov	r3, #0
    c454:	and	ip, r0, r2
    c458:	str	ip, [fp, #-300]	; 0xfffffed4
    c45c:	and	r3, r1, r3
    c460:	str	r3, [fp, #-296]	; 0xfffffed8
    c464:	sub	r3, fp, #284	; 0x11c
    c468:	ldrd	r0, [r3]
    c46c:	mov	ip, r0
    c470:	sub	r3, fp, #300	; 0x12c
    c474:	ldrd	r2, [r3]
    c478:	mov	lr, r2
    c47c:	orr	ip, ip, lr
    c480:	str	ip, [fp, #-308]	; 0xfffffecc
    c484:	orr	r3, r1, r3
    c488:	str	r3, [fp, #-304]	; 0xfffffed0
    c48c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c490:	ldrd	r2, [r3, #72]	; 0x48
    c494:	mov	r4, #0
    c498:	mov	r5, #0
    c49c:	lsl	r5, r3, #3
    c4a0:	orr	r5, r5, r2, lsr #29
    c4a4:	lsl	r4, r2, #3
    c4a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c4ac:	ldrd	r2, [r3, #64]	; 0x40
    c4b0:	mov	r0, #0
    c4b4:	mov	r1, #0
    c4b8:	lsr	r0, r3, #29
    c4bc:	mov	r1, #0
    c4c0:	orr	r3, r4, r0
    c4c4:	str	r3, [fp, #-316]	; 0xfffffec4
    c4c8:	orr	r3, r5, r1
    c4cc:	str	r3, [fp, #-312]	; 0xfffffec8
    c4d0:	mov	r0, #0
    c4d4:	mov	r1, #0
    c4d8:	ldr	r3, [fp, #-312]	; 0xfffffec8
    c4dc:	lsr	r0, r3, #8
    c4e0:	mov	r1, #0
    c4e4:	mov	r2, #65280	; 0xff00
    c4e8:	mov	r3, #0
    c4ec:	and	ip, r0, r2
    c4f0:	str	ip, [fp, #-324]	; 0xfffffebc
    c4f4:	and	r3, r1, r3
    c4f8:	str	r3, [fp, #-320]	; 0xfffffec0
    c4fc:	sub	r3, fp, #308	; 0x134
    c500:	ldrd	r0, [r3]
    c504:	mov	ip, r0
    c508:	sub	r3, fp, #324	; 0x144
    c50c:	ldrd	r2, [r3]
    c510:	mov	lr, r2
    c514:	orr	ip, ip, lr
    c518:	str	ip, [fp, #-332]	; 0xfffffeb4
    c51c:	orr	r3, r1, r3
    c520:	str	r3, [fp, #-328]	; 0xfffffeb8
    c524:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c528:	ldrd	r2, [r3, #72]	; 0x48
    c52c:	mov	r4, #0
    c530:	mov	r5, #0
    c534:	lsl	r5, r3, #3
    c538:	orr	r5, r5, r2, lsr #29
    c53c:	lsl	r4, r2, #3
    c540:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c544:	ldrd	r2, [r3, #64]	; 0x40
    c548:	mov	r0, #0
    c54c:	mov	r1, #0
    c550:	lsr	r0, r3, #29
    c554:	mov	r1, #0
    c558:	orr	r3, r4, r0
    c55c:	str	r3, [fp, #-340]	; 0xfffffeac
    c560:	orr	r3, r5, r1
    c564:	str	r3, [fp, #-336]	; 0xfffffeb0
    c568:	mov	r2, #0
    c56c:	mov	r3, #0
    c570:	ldr	r1, [fp, #-336]	; 0xfffffeb0
    c574:	lsr	r2, r1, #24
    c578:	mov	r3, #0
    c57c:	sub	r1, fp, #332	; 0x14c
    c580:	ldrd	r0, [r1]
    c584:	mov	ip, r0
    c588:	orr	ip, ip, r2
    c58c:	str	ip, [fp, #-348]	; 0xfffffea4
    c590:	orr	r3, r1, r3
    c594:	str	r3, [fp, #-344]	; 0xfffffea8
    c598:	ldr	r3, [fp, #-52]	; 0xffffffcc
    c59c:	sub	r2, fp, #348	; 0x15c
    c5a0:	ldrd	r0, [r2]
    c5a4:	strd	r0, [r3]
    c5a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c5ac:	add	r0, r3, #88	; 0x58
    c5b0:	ldr	r2, [fp, #-44]	; 0xffffffd4
    c5b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    c5b8:	add	r3, r2, r3
    c5bc:	add	r3, r3, #16
    c5c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c5c4:	mov	r1, r3
    c5c8:	bl	af3c <rb_sha512_process_block>
    c5cc:	mov	r3, #0
    c5d0:	str	r3, [fp, #-32]	; 0xffffffe0
    c5d4:	b	c8c4 <rb_sha512_finish_ctx+0xb6c>
    c5d8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c5dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c5e0:	lsl	r3, r3, #3
    c5e4:	add	r3, r2, r3
    c5e8:	ldrd	r2, [r3]
    c5ec:	mov	r4, #0
    c5f0:	mov	r5, #0
    c5f4:	lsl	r5, r2, #24
    c5f8:	mov	r4, #0
    c5fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c600:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c604:	lsl	r3, r3, #3
    c608:	add	r3, r2, r3
    c60c:	ldrd	r2, [r3]
    c610:	mov	r0, #0
    c614:	mov	r1, #0
    c618:	lsl	r1, r2, #8
    c61c:	mov	r0, #0
    c620:	mov	r2, #0
    c624:	mov	r3, #16711680	; 0xff0000
    c628:	and	ip, r0, r2
    c62c:	str	ip, [fp, #-356]	; 0xfffffe9c
    c630:	and	r3, r1, r3
    c634:	str	r3, [fp, #-352]	; 0xfffffea0
    c638:	sub	r3, fp, #356	; 0x164
    c63c:	ldrd	r2, [r3]
    c640:	mov	r1, r2
    c644:	orr	r1, r4, r1
    c648:	str	r1, [fp, #-364]	; 0xfffffe94
    c64c:	orr	r3, r5, r3
    c650:	str	r3, [fp, #-360]	; 0xfffffe98
    c654:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c658:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c65c:	lsl	r3, r3, #3
    c660:	add	r3, r2, r3
    c664:	ldrd	r2, [r3]
    c668:	mov	r0, #0
    c66c:	mov	r1, #0
    c670:	lsl	r1, r3, #24
    c674:	orr	r1, r1, r2, lsr #8
    c678:	lsl	r0, r2, #24
    c67c:	mov	r2, #0
    c680:	mov	r3, #65280	; 0xff00
    c684:	and	ip, r0, r2
    c688:	str	ip, [fp, #-372]	; 0xfffffe8c
    c68c:	and	r3, r1, r3
    c690:	str	r3, [fp, #-368]	; 0xfffffe90
    c694:	sub	r3, fp, #364	; 0x16c
    c698:	ldrd	r0, [r3]
    c69c:	mov	ip, r0
    c6a0:	sub	r3, fp, #372	; 0x174
    c6a4:	ldrd	r2, [r3]
    c6a8:	mov	lr, r2
    c6ac:	orr	ip, ip, lr
    c6b0:	str	ip, [fp, #-380]	; 0xfffffe84
    c6b4:	orr	r3, r1, r3
    c6b8:	str	r3, [fp, #-376]	; 0xfffffe88
    c6bc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c6c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c6c4:	lsl	r3, r3, #3
    c6c8:	add	r3, r2, r3
    c6cc:	ldrd	r2, [r3]
    c6d0:	mov	r0, #0
    c6d4:	mov	r1, #0
    c6d8:	lsl	r1, r3, #8
    c6dc:	orr	r1, r1, r2, lsr #24
    c6e0:	lsl	r0, r2, #8
    c6e4:	mov	r2, #0
    c6e8:	mov	r3, #255	; 0xff
    c6ec:	and	ip, r0, r2
    c6f0:	str	ip, [fp, #-388]	; 0xfffffe7c
    c6f4:	and	r3, r1, r3
    c6f8:	str	r3, [fp, #-384]	; 0xfffffe80
    c6fc:	sub	r3, fp, #380	; 0x17c
    c700:	ldrd	r0, [r3]
    c704:	mov	ip, r0
    c708:	sub	r3, fp, #388	; 0x184
    c70c:	ldrd	r2, [r3]
    c710:	mov	lr, r2
    c714:	orr	ip, ip, lr
    c718:	str	ip, [fp, #-396]	; 0xfffffe74
    c71c:	orr	r3, r1, r3
    c720:	str	r3, [fp, #-392]	; 0xfffffe78
    c724:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c728:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c72c:	lsl	r3, r3, #3
    c730:	add	r3, r2, r3
    c734:	ldrd	r2, [r3]
    c738:	mov	r0, #0
    c73c:	mov	r1, #0
    c740:	lsr	r0, r2, #8
    c744:	orr	r0, r0, r3, lsl #24
    c748:	lsr	r1, r3, #8
    c74c:	mov	r2, #-16777216	; 0xff000000
    c750:	mov	r3, #0
    c754:	and	ip, r0, r2
    c758:	str	ip, [fp, #-404]	; 0xfffffe6c
    c75c:	and	r3, r1, r3
    c760:	str	r3, [fp, #-400]	; 0xfffffe70
    c764:	sub	r3, fp, #396	; 0x18c
    c768:	ldrd	r0, [r3]
    c76c:	mov	ip, r0
    c770:	sub	r3, fp, #404	; 0x194
    c774:	ldrd	r2, [r3]
    c778:	mov	lr, r2
    c77c:	orr	ip, ip, lr
    c780:	str	ip, [fp, #-412]	; 0xfffffe64
    c784:	orr	r3, r1, r3
    c788:	str	r3, [fp, #-408]	; 0xfffffe68
    c78c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c790:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c794:	lsl	r3, r3, #3
    c798:	add	r3, r2, r3
    c79c:	ldrd	r2, [r3]
    c7a0:	mov	r0, #0
    c7a4:	mov	r1, #0
    c7a8:	lsr	r0, r2, #24
    c7ac:	orr	r0, r0, r3, lsl #8
    c7b0:	lsr	r1, r3, #24
    c7b4:	mov	r2, #16711680	; 0xff0000
    c7b8:	mov	r3, #0
    c7bc:	and	ip, r0, r2
    c7c0:	str	ip, [fp, #-420]	; 0xfffffe5c
    c7c4:	and	r3, r1, r3
    c7c8:	str	r3, [fp, #-416]	; 0xfffffe60
    c7cc:	sub	r3, fp, #412	; 0x19c
    c7d0:	ldrd	r0, [r3]
    c7d4:	mov	ip, r0
    c7d8:	sub	r3, fp, #420	; 0x1a4
    c7dc:	ldrd	r2, [r3]
    c7e0:	mov	lr, r2
    c7e4:	orr	ip, ip, lr
    c7e8:	str	ip, [fp, #-428]	; 0xfffffe54
    c7ec:	orr	r3, r1, r3
    c7f0:	str	r3, [fp, #-424]	; 0xfffffe58
    c7f4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c7f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c7fc:	lsl	r3, r3, #3
    c800:	add	r3, r2, r3
    c804:	ldrd	r2, [r3]
    c808:	mov	r0, #0
    c80c:	mov	r1, #0
    c810:	lsr	r0, r3, #8
    c814:	mov	r1, #0
    c818:	mov	r2, #65280	; 0xff00
    c81c:	mov	r3, #0
    c820:	and	ip, r0, r2
    c824:	str	ip, [fp, #-436]	; 0xfffffe4c
    c828:	and	r3, r1, r3
    c82c:	str	r3, [fp, #-432]	; 0xfffffe50
    c830:	sub	r3, fp, #428	; 0x1ac
    c834:	ldrd	r0, [r3]
    c838:	mov	ip, r0
    c83c:	sub	r3, fp, #436	; 0x1b4
    c840:	ldrd	r2, [r3]
    c844:	mov	lr, r2
    c848:	orr	ip, ip, lr
    c84c:	str	ip, [fp, #-444]	; 0xfffffe44
    c850:	orr	r3, r1, r3
    c854:	str	r3, [fp, #-440]	; 0xfffffe48
    c858:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c85c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c860:	lsl	r3, r3, #3
    c864:	add	r3, r2, r3
    c868:	ldrd	r2, [r3]
    c86c:	mov	r0, #0
    c870:	mov	r1, #0
    c874:	lsr	r0, r3, #24
    c878:	mov	r1, #0
    c87c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c880:	lsl	r2, r3, #3
    c884:	ldr	r3, [fp, #-60]	; 0xffffffc4
    c888:	add	r3, r3, r2
    c88c:	sub	r2, fp, #444	; 0x1bc
    c890:	ldrd	r4, [r2]
    c894:	mov	r2, r4
    c898:	orr	r2, r2, r0
    c89c:	str	r2, [fp, #-452]	; 0xfffffe3c
    c8a0:	mov	r2, r5
    c8a4:	orr	r2, r2, r1
    c8a8:	str	r2, [fp, #-448]	; 0xfffffe40
    c8ac:	sub	r2, fp, #452	; 0x1c4
    c8b0:	ldrd	r0, [r2]
    c8b4:	strd	r0, [r3]
    c8b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c8bc:	add	r3, r3, #1
    c8c0:	str	r3, [fp, #-32]	; 0xffffffe0
    c8c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c8c8:	cmp	r3, #7
    c8cc:	bls	c5d8 <rb_sha512_finish_ctx+0x880>
    c8d0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    c8d4:	mov	r0, r3
    c8d8:	sub	sp, fp, #28
    c8dc:	ldrd	r4, [sp]
    c8e0:	ldrd	r6, [sp, #8]
    c8e4:	ldrd	r8, [sp, #16]
    c8e8:	ldr	fp, [sp, #24]
    c8ec:	add	sp, sp, #28
    c8f0:	pop	{pc}		; (ldr pc, [sp], #4)
    c8f4:	.word	0x00017400

0000c8f8 <rb_sha512_process_bytes>:
    c8f8:	strd	r4, [sp, #-24]!	; 0xffffffe8
    c8fc:	strd	r6, [sp, #8]
    c900:	str	fp, [sp, #16]
    c904:	str	lr, [sp, #20]
    c908:	add	fp, sp, #20
    c90c:	sub	sp, sp, #32
    c910:	str	r0, [fp, #-40]	; 0xffffffd8
    c914:	str	r1, [fp, #-44]	; 0xffffffd4
    c918:	str	r2, [fp, #-48]	; 0xffffffd0
    c91c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    c920:	ldrd	r2, [r3, #80]	; 0x50
    c924:	orrs	r3, r2, r3
    c928:	beq	ca4c <rb_sha512_process_bytes+0x154>
    c92c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    c930:	ldrd	r2, [r3, #80]	; 0x50
    c934:	mov	r3, r2
    c938:	str	r3, [fp, #-28]	; 0xffffffe4
    c93c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    c940:	rsb	r3, r3, #256	; 0x100
    c944:	ldr	r2, [fp, #-44]	; 0xffffffd4
    c948:	cmp	r2, r3
    c94c:	movcc	r3, r2
    c950:	movcs	r3, r3
    c954:	str	r3, [fp, #-32]	; 0xffffffe0
    c958:	ldr	r3, [fp, #-28]	; 0xffffffe4
    c95c:	add	r3, r3, #88	; 0x58
    c960:	ldr	r2, [fp, #-48]	; 0xffffffd0
    c964:	add	r3, r2, r3
    c968:	ldr	r2, [fp, #-32]	; 0xffffffe0
    c96c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    c970:	mov	r0, r3
    c974:	bl	4834 <memcpy@plt>
    c978:	ldr	r3, [fp, #-48]	; 0xffffffd0
    c97c:	ldrd	r0, [r3, #80]	; 0x50
    c980:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c984:	mov	r2, r3
    c988:	mov	r3, #0
    c98c:	adds	r6, r0, r2
    c990:	adc	r7, r1, r3
    c994:	ldr	r3, [fp, #-48]	; 0xffffffd0
    c998:	strd	r6, [r3, #80]	; 0x50
    c99c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    c9a0:	ldrd	r2, [r3, #80]	; 0x50
    c9a4:	cmp	r3, #0
    c9a8:	cmpeq	r2, #128	; 0x80
    c9ac:	bls	ca2c <rb_sha512_process_bytes+0x134>
    c9b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    c9b4:	add	r0, r3, #88	; 0x58
    c9b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    c9bc:	ldrd	r2, [r3, #80]	; 0x50
    c9c0:	mov	r3, r2
    c9c4:	bic	r3, r3, #127	; 0x7f
    c9c8:	ldr	r2, [fp, #-48]	; 0xffffffd0
    c9cc:	mov	r1, r3
    c9d0:	bl	af3c <rb_sha512_process_block>
    c9d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    c9d8:	ldrd	r2, [r3, #80]	; 0x50
    c9dc:	mov	r0, #127	; 0x7f
    c9e0:	mov	r1, #0
    c9e4:	and	r4, r2, r0
    c9e8:	and	r5, r3, r1
    c9ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
    c9f0:	strd	r4, [r3, #80]	; 0x50
    c9f4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    c9f8:	add	r0, r3, #88	; 0x58
    c9fc:	ldr	r2, [fp, #-28]	; 0xffffffe4
    ca00:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ca04:	add	r3, r2, r3
    ca08:	bic	r3, r3, #127	; 0x7f
    ca0c:	add	r3, r3, #88	; 0x58
    ca10:	ldr	r2, [fp, #-48]	; 0xffffffd0
    ca14:	add	r1, r2, r3
    ca18:	ldr	r3, [fp, #-48]	; 0xffffffd0
    ca1c:	ldrd	r2, [r3, #80]	; 0x50
    ca20:	mov	r3, r2
    ca24:	mov	r2, r3
    ca28:	bl	4834 <memcpy@plt>
    ca2c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    ca30:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ca34:	add	r3, r2, r3
    ca38:	str	r3, [fp, #-40]	; 0xffffffd8
    ca3c:	ldr	r2, [fp, #-44]	; 0xffffffd4
    ca40:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ca44:	sub	r3, r2, r3
    ca48:	str	r3, [fp, #-44]	; 0xffffffd4
    ca4c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    ca50:	cmp	r3, #127	; 0x7f
    ca54:	bls	caf8 <rb_sha512_process_bytes+0x200>
    ca58:	ldr	r3, [fp, #-40]	; 0xffffffd8
    ca5c:	and	r3, r3, #7
    ca60:	cmp	r3, #0
    ca64:	beq	cac0 <rb_sha512_process_bytes+0x1c8>
    ca68:	b	cab0 <rb_sha512_process_bytes+0x1b8>
    ca6c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    ca70:	add	r3, r3, #88	; 0x58
    ca74:	mov	r2, #128	; 0x80
    ca78:	ldr	r1, [fp, #-40]	; 0xffffffd8
    ca7c:	mov	r0, r3
    ca80:	bl	4834 <memcpy@plt>
    ca84:	mov	r3, r0
    ca88:	ldr	r2, [fp, #-48]	; 0xffffffd0
    ca8c:	mov	r1, #128	; 0x80
    ca90:	mov	r0, r3
    ca94:	bl	af3c <rb_sha512_process_block>
    ca98:	ldr	r3, [fp, #-40]	; 0xffffffd8
    ca9c:	add	r3, r3, #128	; 0x80
    caa0:	str	r3, [fp, #-40]	; 0xffffffd8
    caa4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    caa8:	sub	r3, r3, #128	; 0x80
    caac:	str	r3, [fp, #-44]	; 0xffffffd4
    cab0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    cab4:	cmp	r3, #128	; 0x80
    cab8:	bhi	ca6c <rb_sha512_process_bytes+0x174>
    cabc:	b	caf8 <rb_sha512_process_bytes+0x200>
    cac0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    cac4:	bic	r3, r3, #127	; 0x7f
    cac8:	ldr	r2, [fp, #-48]	; 0xffffffd0
    cacc:	mov	r1, r3
    cad0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    cad4:	bl	af3c <rb_sha512_process_block>
    cad8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    cadc:	bic	r3, r3, #127	; 0x7f
    cae0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    cae4:	add	r3, r2, r3
    cae8:	str	r3, [fp, #-40]	; 0xffffffd8
    caec:	ldr	r3, [fp, #-44]	; 0xffffffd4
    caf0:	and	r3, r3, #127	; 0x7f
    caf4:	str	r3, [fp, #-44]	; 0xffffffd4
    caf8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    cafc:	cmp	r3, #0
    cb00:	beq	cba4 <rb_sha512_process_bytes+0x2ac>
    cb04:	ldr	r3, [fp, #-48]	; 0xffffffd0
    cb08:	ldrd	r2, [r3, #80]	; 0x50
    cb0c:	mov	r3, r2
    cb10:	str	r3, [fp, #-24]	; 0xffffffe8
    cb14:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cb18:	add	r3, r3, #88	; 0x58
    cb1c:	ldr	r2, [fp, #-48]	; 0xffffffd0
    cb20:	add	r3, r2, r3
    cb24:	ldr	r2, [fp, #-44]	; 0xffffffd4
    cb28:	ldr	r1, [fp, #-40]	; 0xffffffd8
    cb2c:	mov	r0, r3
    cb30:	bl	4834 <memcpy@plt>
    cb34:	ldr	r2, [fp, #-24]	; 0xffffffe8
    cb38:	ldr	r3, [fp, #-44]	; 0xffffffd4
    cb3c:	add	r3, r2, r3
    cb40:	str	r3, [fp, #-24]	; 0xffffffe8
    cb44:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cb48:	cmp	r3, #127	; 0x7f
    cb4c:	bls	cb90 <rb_sha512_process_bytes+0x298>
    cb50:	ldr	r3, [fp, #-48]	; 0xffffffd0
    cb54:	add	r3, r3, #88	; 0x58
    cb58:	ldr	r2, [fp, #-48]	; 0xffffffd0
    cb5c:	mov	r1, #128	; 0x80
    cb60:	mov	r0, r3
    cb64:	bl	af3c <rb_sha512_process_block>
    cb68:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cb6c:	sub	r3, r3, #128	; 0x80
    cb70:	str	r3, [fp, #-24]	; 0xffffffe8
    cb74:	ldr	r3, [fp, #-48]	; 0xffffffd0
    cb78:	add	r0, r3, #88	; 0x58
    cb7c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    cb80:	add	r3, r3, #216	; 0xd8
    cb84:	ldr	r2, [fp, #-24]	; 0xffffffe8
    cb88:	mov	r1, r3
    cb8c:	bl	4834 <memcpy@plt>
    cb90:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cb94:	mov	r2, r3
    cb98:	mov	r3, #0
    cb9c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    cba0:	strd	r2, [r1, #80]	; 0x50
    cba4:	nop	{0}
    cba8:	sub	sp, fp, #20
    cbac:	ldrd	r4, [sp]
    cbb0:	ldrd	r6, [sp, #8]
    cbb4:	ldr	fp, [sp, #16]
    cbb8:	add	sp, sp, #20
    cbbc:	pop	{pc}		; (ldr pc, [sp], #4)

0000cbc0 <rb_sha512_crypt_r>:
    cbc0:	str	fp, [sp, #-8]!
    cbc4:	str	lr, [sp, #4]
    cbc8:	add	fp, sp, #4
    cbcc:	sub	sp, sp, #1088	; 0x440
    cbd0:	str	r0, [fp, #-1072]	; 0xfffffbd0
    cbd4:	str	r1, [fp, #-1076]	; 0xfffffbcc
    cbd8:	str	r2, [fp, #-1080]	; 0xfffffbc8
    cbdc:	str	r3, [fp, #-1084]	; 0xfffffbc4
    cbe0:	mov	r3, #0
    cbe4:	str	r3, [fp, #-16]
    cbe8:	mov	r3, #0
    cbec:	str	r3, [fp, #-20]	; 0xffffffec
    cbf0:	movw	r3, #5000	; 0x1388
    cbf4:	str	r3, [fp, #-24]	; 0xffffffe8
    cbf8:	mov	r3, #0
    cbfc:	str	r3, [fp, #-28]	; 0xffffffe4
    cc00:	mov	r2, #3
    cc04:	ldr	r1, [fp, #-1076]	; 0xfffffbcc
    cc08:	ldr	r3, [pc, #3964]	; db8c <rb_sha512_crypt_r+0xfcc>
    cc0c:	add	r3, pc, r3
    cc10:	mov	r0, r3
    cc14:	bl	4c3c <strncmp@plt>
    cc18:	mov	r3, r0
    cc1c:	cmp	r3, #0
    cc20:	bne	cc30 <rb_sha512_crypt_r+0x70>
    cc24:	ldr	r3, [fp, #-1076]	; 0xfffffbcc
    cc28:	add	r3, r3, #3
    cc2c:	str	r3, [fp, #-1076]	; 0xfffffbcc
    cc30:	mov	r2, #7
    cc34:	ldr	r3, [pc, #3924]	; db90 <rb_sha512_crypt_r+0xfd0>
    cc38:	add	r3, pc, r3
    cc3c:	mov	r1, r3
    cc40:	ldr	r0, [fp, #-1076]	; 0xfffffbcc
    cc44:	bl	4c3c <strncmp@plt>
    cc48:	mov	r3, r0
    cc4c:	cmp	r3, #0
    cc50:	bne	ccd4 <rb_sha512_crypt_r+0x114>
    cc54:	ldr	r3, [fp, #-1076]	; 0xfffffbcc
    cc58:	add	r3, r3, #7
    cc5c:	str	r3, [fp, #-208]	; 0xffffff30
    cc60:	sub	r3, fp, #1056	; 0x420
    cc64:	sub	r3, r3, #4
    cc68:	sub	r3, r3, #4
    cc6c:	mov	r2, #10
    cc70:	mov	r1, r3
    cc74:	ldr	r0, [fp, #-208]	; 0xffffff30
    cc78:	bl	4828 <strtoul@plt>
    cc7c:	str	r0, [fp, #-212]	; 0xffffff2c
    cc80:	ldr	r3, [fp, #-1064]	; 0xfffffbd8
    cc84:	ldrb	r3, [r3]
    cc88:	cmp	r3, #36	; 0x24
    cc8c:	bne	ccd4 <rb_sha512_crypt_r+0x114>
    cc90:	ldr	r3, [fp, #-1064]	; 0xfffffbd8
    cc94:	add	r3, r3, #1
    cc98:	str	r3, [fp, #-1076]	; 0xfffffbcc
    cc9c:	ldr	r3, [fp, #-212]	; 0xffffff2c
    cca0:	cmp	r3, #1000	; 0x3e8
    cca4:	bcc	ccc4 <rb_sha512_crypt_r+0x104>
    cca8:	ldr	r2, [fp, #-212]	; 0xffffff2c
    ccac:	movw	r3, #51711	; 0xc9ff
    ccb0:	movt	r3, #15258	; 0x3b9a
    ccb4:	cmp	r2, r3
    ccb8:	movcc	r3, r2
    ccbc:	movcs	r3, r3
    ccc0:	b	ccc8 <rb_sha512_crypt_r+0x108>
    ccc4:	mov	r3, #1000	; 0x3e8
    ccc8:	str	r3, [fp, #-24]	; 0xffffffe8
    cccc:	mov	r3, #1
    ccd0:	str	r3, [fp, #-28]	; 0xffffffe4
    ccd4:	ldr	r3, [pc, #3768]	; db94 <rb_sha512_crypt_r+0xfd4>
    ccd8:	add	r3, pc, r3
    ccdc:	mov	r1, r3
    cce0:	ldr	r0, [fp, #-1076]	; 0xfffffbcc
    cce4:	bl	4c0c <strcspn@plt>
    cce8:	mov	r3, r0
    ccec:	cmp	r3, #15
    ccf0:	bhi	cd10 <rb_sha512_crypt_r+0x150>
    ccf4:	ldr	r3, [pc, #3740]	; db98 <rb_sha512_crypt_r+0xfd8>
    ccf8:	add	r3, pc, r3
    ccfc:	mov	r1, r3
    cd00:	ldr	r0, [fp, #-1076]	; 0xfffffbcc
    cd04:	bl	4c0c <strcspn@plt>
    cd08:	mov	r3, r0
    cd0c:	b	cd14 <rb_sha512_crypt_r+0x154>
    cd10:	mov	r3, #16
    cd14:	str	r3, [fp, #-216]	; 0xffffff28
    cd18:	ldr	r0, [fp, #-1072]	; 0xfffffbd0
    cd1c:	bl	4810 <strlen@plt>
    cd20:	str	r0, [fp, #-220]	; 0xffffff24
    cd24:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
    cd28:	and	r3, r3, #7
    cd2c:	cmp	r3, #0
    cd30:	beq	cd90 <rb_sha512_crypt_r+0x1d0>
    cd34:	ldr	r3, [fp, #-220]	; 0xffffff24
    cd38:	add	r3, r3, #8
    cd3c:	add	r3, r3, #7
    cd40:	lsr	r3, r3, #3
    cd44:	lsl	r3, r3, #3
    cd48:	sub	sp, sp, r3
    cd4c:	add	r3, sp, #8
    cd50:	add	r3, r3, #7
    cd54:	lsr	r3, r3, #3
    cd58:	lsl	r3, r3, #3
    cd5c:	str	r3, [fp, #-224]	; 0xffffff20
    cd60:	ldr	r3, [fp, #-224]	; 0xffffff20
    cd64:	and	r3, r3, #7
    cd68:	rsb	r3, r3, #8
    cd6c:	ldr	r2, [fp, #-224]	; 0xffffff20
    cd70:	add	r3, r2, r3
    cd74:	ldr	r2, [fp, #-220]	; 0xffffff24
    cd78:	ldr	r1, [fp, #-1072]	; 0xfffffbd0
    cd7c:	mov	r0, r3
    cd80:	bl	4834 <memcpy@plt>
    cd84:	str	r0, [fp, #-16]
    cd88:	ldr	r3, [fp, #-16]
    cd8c:	str	r3, [fp, #-1072]	; 0xfffffbd0
    cd90:	ldr	r3, [fp, #-1076]	; 0xfffffbcc
    cd94:	and	r3, r3, #7
    cd98:	cmp	r3, #0
    cd9c:	beq	cdfc <rb_sha512_crypt_r+0x23c>
    cda0:	ldr	r3, [fp, #-216]	; 0xffffff28
    cda4:	add	r3, r3, #8
    cda8:	add	r3, r3, #7
    cdac:	lsr	r3, r3, #3
    cdb0:	lsl	r3, r3, #3
    cdb4:	sub	sp, sp, r3
    cdb8:	add	r3, sp, #8
    cdbc:	add	r3, r3, #7
    cdc0:	lsr	r3, r3, #3
    cdc4:	lsl	r3, r3, #3
    cdc8:	str	r3, [fp, #-228]	; 0xffffff1c
    cdcc:	ldr	r3, [fp, #-228]	; 0xffffff1c
    cdd0:	and	r3, r3, #7
    cdd4:	rsb	r3, r3, #8
    cdd8:	ldr	r2, [fp, #-228]	; 0xffffff1c
    cddc:	add	r3, r2, r3
    cde0:	ldr	r2, [fp, #-216]	; 0xffffff28
    cde4:	ldr	r1, [fp, #-1076]	; 0xfffffbcc
    cde8:	mov	r0, r3
    cdec:	bl	4834 <memcpy@plt>
    cdf0:	str	r0, [fp, #-20]	; 0xffffffec
    cdf4:	ldr	r3, [fp, #-20]	; 0xffffffec
    cdf8:	str	r3, [fp, #-1076]	; 0xfffffbcc
    cdfc:	sub	r3, fp, #716	; 0x2cc
    ce00:	mov	r0, r3
    ce04:	bl	bc44 <rb_sha512_init_ctx>
    ce08:	sub	r3, fp, #716	; 0x2cc
    ce0c:	mov	r2, r3
    ce10:	ldr	r1, [fp, #-220]	; 0xffffff24
    ce14:	ldr	r0, [fp, #-1072]	; 0xfffffbd0
    ce18:	bl	c8f8 <rb_sha512_process_bytes>
    ce1c:	sub	r3, fp, #716	; 0x2cc
    ce20:	mov	r2, r3
    ce24:	ldr	r1, [fp, #-216]	; 0xffffff28
    ce28:	ldr	r0, [fp, #-1076]	; 0xfffffbcc
    ce2c:	bl	c8f8 <rb_sha512_process_bytes>
    ce30:	sub	r3, fp, #1056	; 0x420
    ce34:	sub	r3, r3, #4
    ce38:	mov	r0, r3
    ce3c:	bl	bc44 <rb_sha512_init_ctx>
    ce40:	sub	r3, fp, #1056	; 0x420
    ce44:	sub	r3, r3, #4
    ce48:	mov	r2, r3
    ce4c:	ldr	r1, [fp, #-220]	; 0xffffff24
    ce50:	ldr	r0, [fp, #-1072]	; 0xfffffbd0
    ce54:	bl	c8f8 <rb_sha512_process_bytes>
    ce58:	sub	r3, fp, #1056	; 0x420
    ce5c:	sub	r3, r3, #4
    ce60:	mov	r2, r3
    ce64:	ldr	r1, [fp, #-216]	; 0xffffff28
    ce68:	ldr	r0, [fp, #-1076]	; 0xfffffbcc
    ce6c:	bl	c8f8 <rb_sha512_process_bytes>
    ce70:	sub	r3, fp, #1056	; 0x420
    ce74:	sub	r3, r3, #4
    ce78:	mov	r2, r3
    ce7c:	ldr	r1, [fp, #-220]	; 0xffffff24
    ce80:	ldr	r0, [fp, #-1072]	; 0xfffffbd0
    ce84:	bl	c8f8 <rb_sha512_process_bytes>
    ce88:	sub	r2, fp, #308	; 0x134
    ce8c:	sub	r3, fp, #1056	; 0x420
    ce90:	sub	r3, r3, #4
    ce94:	mov	r1, r2
    ce98:	mov	r0, r3
    ce9c:	bl	bd58 <rb_sha512_finish_ctx>
    cea0:	ldr	r3, [fp, #-220]	; 0xffffff24
    cea4:	str	r3, [fp, #-8]
    cea8:	b	cecc <rb_sha512_crypt_r+0x30c>
    ceac:	sub	r2, fp, #716	; 0x2cc
    ceb0:	sub	r3, fp, #308	; 0x134
    ceb4:	mov	r1, #64	; 0x40
    ceb8:	mov	r0, r3
    cebc:	bl	c8f8 <rb_sha512_process_bytes>
    cec0:	ldr	r3, [fp, #-8]
    cec4:	sub	r3, r3, #64	; 0x40
    cec8:	str	r3, [fp, #-8]
    cecc:	ldr	r3, [fp, #-8]
    ced0:	cmp	r3, #64	; 0x40
    ced4:	bhi	ceac <rb_sha512_crypt_r+0x2ec>
    ced8:	sub	r2, fp, #716	; 0x2cc
    cedc:	sub	r3, fp, #308	; 0x134
    cee0:	ldr	r1, [fp, #-8]
    cee4:	mov	r0, r3
    cee8:	bl	c8f8 <rb_sha512_process_bytes>
    ceec:	ldr	r3, [fp, #-220]	; 0xffffff24
    cef0:	str	r3, [fp, #-8]
    cef4:	b	cf40 <rb_sha512_crypt_r+0x380>
    cef8:	ldr	r3, [fp, #-8]
    cefc:	and	r3, r3, #1
    cf00:	cmp	r3, #0
    cf04:	beq	cf20 <rb_sha512_crypt_r+0x360>
    cf08:	sub	r2, fp, #716	; 0x2cc
    cf0c:	sub	r3, fp, #308	; 0x134
    cf10:	mov	r1, #64	; 0x40
    cf14:	mov	r0, r3
    cf18:	bl	c8f8 <rb_sha512_process_bytes>
    cf1c:	b	cf34 <rb_sha512_crypt_r+0x374>
    cf20:	sub	r3, fp, #716	; 0x2cc
    cf24:	mov	r2, r3
    cf28:	ldr	r1, [fp, #-220]	; 0xffffff24
    cf2c:	ldr	r0, [fp, #-1072]	; 0xfffffbd0
    cf30:	bl	c8f8 <rb_sha512_process_bytes>
    cf34:	ldr	r3, [fp, #-8]
    cf38:	lsr	r3, r3, #1
    cf3c:	str	r3, [fp, #-8]
    cf40:	ldr	r3, [fp, #-8]
    cf44:	cmp	r3, #0
    cf48:	bne	cef8 <rb_sha512_crypt_r+0x338>
    cf4c:	sub	r2, fp, #308	; 0x134
    cf50:	sub	r3, fp, #716	; 0x2cc
    cf54:	mov	r1, r2
    cf58:	mov	r0, r3
    cf5c:	bl	bd58 <rb_sha512_finish_ctx>
    cf60:	sub	r3, fp, #1056	; 0x420
    cf64:	sub	r3, r3, #4
    cf68:	mov	r0, r3
    cf6c:	bl	bc44 <rb_sha512_init_ctx>
    cf70:	mov	r3, #0
    cf74:	str	r3, [fp, #-8]
    cf78:	b	cfa0 <rb_sha512_crypt_r+0x3e0>
    cf7c:	sub	r3, fp, #1056	; 0x420
    cf80:	sub	r3, r3, #4
    cf84:	mov	r2, r3
    cf88:	ldr	r1, [fp, #-220]	; 0xffffff24
    cf8c:	ldr	r0, [fp, #-1072]	; 0xfffffbd0
    cf90:	bl	c8f8 <rb_sha512_process_bytes>
    cf94:	ldr	r3, [fp, #-8]
    cf98:	add	r3, r3, #1
    cf9c:	str	r3, [fp, #-8]
    cfa0:	ldr	r2, [fp, #-8]
    cfa4:	ldr	r3, [fp, #-220]	; 0xffffff24
    cfa8:	cmp	r2, r3
    cfac:	bcc	cf7c <rb_sha512_crypt_r+0x3bc>
    cfb0:	sub	r2, fp, #372	; 0x174
    cfb4:	sub	r3, fp, #1056	; 0x420
    cfb8:	sub	r3, r3, #4
    cfbc:	mov	r1, r2
    cfc0:	mov	r0, r3
    cfc4:	bl	bd58 <rb_sha512_finish_ctx>
    cfc8:	ldr	r3, [fp, #-220]	; 0xffffff24
    cfcc:	add	r3, r3, #7
    cfd0:	lsr	r3, r3, #3
    cfd4:	lsl	r3, r3, #3
    cfd8:	sub	sp, sp, r3
    cfdc:	add	r3, sp, #8
    cfe0:	add	r3, r3, #7
    cfe4:	lsr	r3, r3, #3
    cfe8:	lsl	r3, r3, #3
    cfec:	str	r3, [fp, #-232]	; 0xffffff18
    cff0:	ldr	r3, [fp, #-232]	; 0xffffff18
    cff4:	str	r3, [fp, #-12]
    cff8:	ldr	r3, [fp, #-220]	; 0xffffff24
    cffc:	str	r3, [fp, #-8]
    d000:	b	d084 <rb_sha512_crypt_r+0x4c4>
    d004:	ldr	r3, [fp, #-12]
    d008:	sub	r2, fp, #372	; 0x174
    d00c:	ldrd	r0, [r2]
    d010:	str	r0, [r3]
    d014:	str	r1, [r3, #4]
    d018:	ldrd	r0, [r2, #8]
    d01c:	str	r0, [r3, #8]
    d020:	str	r1, [r3, #12]
    d024:	ldrd	r0, [r2, #16]
    d028:	str	r0, [r3, #16]
    d02c:	str	r1, [r3, #20]
    d030:	ldrd	r0, [r2, #24]
    d034:	str	r0, [r3, #24]
    d038:	str	r1, [r3, #28]
    d03c:	ldrd	r0, [r2, #32]
    d040:	str	r0, [r3, #32]
    d044:	str	r1, [r3, #36]	; 0x24
    d048:	ldrd	r0, [r2, #40]	; 0x28
    d04c:	str	r0, [r3, #40]	; 0x28
    d050:	str	r1, [r3, #44]	; 0x2c
    d054:	ldrd	r0, [r2, #48]	; 0x30
    d058:	str	r0, [r3, #48]	; 0x30
    d05c:	str	r1, [r3, #52]	; 0x34
    d060:	ldrd	r0, [r2, #56]	; 0x38
    d064:	str	r0, [r3, #56]	; 0x38
    d068:	str	r1, [r3, #60]	; 0x3c
    d06c:	ldr	r3, [fp, #-12]
    d070:	add	r3, r3, #64	; 0x40
    d074:	str	r3, [fp, #-12]
    d078:	ldr	r3, [fp, #-8]
    d07c:	sub	r3, r3, #64	; 0x40
    d080:	str	r3, [fp, #-8]
    d084:	ldr	r3, [fp, #-8]
    d088:	cmp	r3, #63	; 0x3f
    d08c:	bhi	d004 <rb_sha512_crypt_r+0x444>
    d090:	sub	r3, fp, #372	; 0x174
    d094:	ldr	r2, [fp, #-8]
    d098:	mov	r1, r3
    d09c:	ldr	r0, [fp, #-12]
    d0a0:	bl	4834 <memcpy@plt>
    d0a4:	sub	r3, fp, #1056	; 0x420
    d0a8:	sub	r3, r3, #4
    d0ac:	mov	r0, r3
    d0b0:	bl	bc44 <rb_sha512_init_ctx>
    d0b4:	mov	r3, #0
    d0b8:	str	r3, [fp, #-8]
    d0bc:	b	d0e4 <rb_sha512_crypt_r+0x524>
    d0c0:	sub	r3, fp, #1056	; 0x420
    d0c4:	sub	r3, r3, #4
    d0c8:	mov	r2, r3
    d0cc:	ldr	r1, [fp, #-216]	; 0xffffff28
    d0d0:	ldr	r0, [fp, #-1076]	; 0xfffffbcc
    d0d4:	bl	c8f8 <rb_sha512_process_bytes>
    d0d8:	ldr	r3, [fp, #-8]
    d0dc:	add	r3, r3, #1
    d0e0:	str	r3, [fp, #-8]
    d0e4:	ldrb	r3, [fp, #-308]	; 0xfffffecc
    d0e8:	add	r3, r3, #16
    d0ec:	mov	r2, r3
    d0f0:	ldr	r3, [fp, #-8]
    d0f4:	cmp	r3, r2
    d0f8:	bcc	d0c0 <rb_sha512_crypt_r+0x500>
    d0fc:	sub	r2, fp, #372	; 0x174
    d100:	sub	r3, fp, #1056	; 0x420
    d104:	sub	r3, r3, #4
    d108:	mov	r1, r2
    d10c:	mov	r0, r3
    d110:	bl	bd58 <rb_sha512_finish_ctx>
    d114:	ldr	r3, [fp, #-216]	; 0xffffff28
    d118:	add	r3, r3, #7
    d11c:	lsr	r3, r3, #3
    d120:	lsl	r3, r3, #3
    d124:	sub	sp, sp, r3
    d128:	add	r3, sp, #8
    d12c:	add	r3, r3, #7
    d130:	lsr	r3, r3, #3
    d134:	lsl	r3, r3, #3
    d138:	str	r3, [fp, #-236]	; 0xffffff14
    d13c:	ldr	r3, [fp, #-236]	; 0xffffff14
    d140:	str	r3, [fp, #-12]
    d144:	ldr	r3, [fp, #-216]	; 0xffffff28
    d148:	str	r3, [fp, #-8]
    d14c:	b	d1d0 <rb_sha512_crypt_r+0x610>
    d150:	ldr	r3, [fp, #-12]
    d154:	sub	r2, fp, #372	; 0x174
    d158:	ldrd	r0, [r2]
    d15c:	str	r0, [r3]
    d160:	str	r1, [r3, #4]
    d164:	ldrd	r0, [r2, #8]
    d168:	str	r0, [r3, #8]
    d16c:	str	r1, [r3, #12]
    d170:	ldrd	r0, [r2, #16]
    d174:	str	r0, [r3, #16]
    d178:	str	r1, [r3, #20]
    d17c:	ldrd	r0, [r2, #24]
    d180:	str	r0, [r3, #24]
    d184:	str	r1, [r3, #28]
    d188:	ldrd	r0, [r2, #32]
    d18c:	str	r0, [r3, #32]
    d190:	str	r1, [r3, #36]	; 0x24
    d194:	ldrd	r0, [r2, #40]	; 0x28
    d198:	str	r0, [r3, #40]	; 0x28
    d19c:	str	r1, [r3, #44]	; 0x2c
    d1a0:	ldrd	r0, [r2, #48]	; 0x30
    d1a4:	str	r0, [r3, #48]	; 0x30
    d1a8:	str	r1, [r3, #52]	; 0x34
    d1ac:	ldrd	r0, [r2, #56]	; 0x38
    d1b0:	str	r0, [r3, #56]	; 0x38
    d1b4:	str	r1, [r3, #60]	; 0x3c
    d1b8:	ldr	r3, [fp, #-12]
    d1bc:	add	r3, r3, #64	; 0x40
    d1c0:	str	r3, [fp, #-12]
    d1c4:	ldr	r3, [fp, #-8]
    d1c8:	sub	r3, r3, #64	; 0x40
    d1cc:	str	r3, [fp, #-8]
    d1d0:	ldr	r3, [fp, #-8]
    d1d4:	cmp	r3, #63	; 0x3f
    d1d8:	bhi	d150 <rb_sha512_crypt_r+0x590>
    d1dc:	sub	r3, fp, #372	; 0x174
    d1e0:	ldr	r2, [fp, #-8]
    d1e4:	mov	r1, r3
    d1e8:	ldr	r0, [fp, #-12]
    d1ec:	bl	4834 <memcpy@plt>
    d1f0:	mov	r3, #0
    d1f4:	str	r3, [fp, #-8]
    d1f8:	b	d32c <rb_sha512_crypt_r+0x76c>
    d1fc:	sub	r3, fp, #716	; 0x2cc
    d200:	mov	r0, r3
    d204:	bl	bc44 <rb_sha512_init_ctx>
    d208:	ldr	r3, [fp, #-8]
    d20c:	and	r3, r3, #1
    d210:	cmp	r3, #0
    d214:	beq	d230 <rb_sha512_crypt_r+0x670>
    d218:	sub	r3, fp, #716	; 0x2cc
    d21c:	mov	r2, r3
    d220:	ldr	r1, [fp, #-220]	; 0xffffff24
    d224:	ldr	r0, [fp, #-232]	; 0xffffff18
    d228:	bl	c8f8 <rb_sha512_process_bytes>
    d22c:	b	d244 <rb_sha512_crypt_r+0x684>
    d230:	sub	r2, fp, #716	; 0x2cc
    d234:	sub	r3, fp, #308	; 0x134
    d238:	mov	r1, #64	; 0x40
    d23c:	mov	r0, r3
    d240:	bl	c8f8 <rb_sha512_process_bytes>
    d244:	ldr	r1, [fp, #-8]
    d248:	movw	r3, #43691	; 0xaaab
    d24c:	movt	r3, #43690	; 0xaaaa
    d250:	umull	r2, r3, r3, r1
    d254:	lsr	r2, r3, #1
    d258:	mov	r3, r2
    d25c:	lsl	r3, r3, #1
    d260:	add	r3, r3, r2
    d264:	sub	r2, r1, r3
    d268:	cmp	r2, #0
    d26c:	beq	d284 <rb_sha512_crypt_r+0x6c4>
    d270:	sub	r3, fp, #716	; 0x2cc
    d274:	mov	r2, r3
    d278:	ldr	r1, [fp, #-216]	; 0xffffff28
    d27c:	ldr	r0, [fp, #-236]	; 0xffffff14
    d280:	bl	c8f8 <rb_sha512_process_bytes>
    d284:	ldr	r1, [fp, #-8]
    d288:	movw	r3, #18725	; 0x4925
    d28c:	movt	r3, #9362	; 0x2492
    d290:	umull	r2, r3, r3, r1
    d294:	sub	r2, r1, r3
    d298:	lsr	r2, r2, #1
    d29c:	add	r3, r3, r2
    d2a0:	lsr	r2, r3, #2
    d2a4:	mov	r3, r2
    d2a8:	lsl	r3, r3, #3
    d2ac:	sub	r3, r3, r2
    d2b0:	sub	r2, r1, r3
    d2b4:	cmp	r2, #0
    d2b8:	beq	d2d0 <rb_sha512_crypt_r+0x710>
    d2bc:	sub	r3, fp, #716	; 0x2cc
    d2c0:	mov	r2, r3
    d2c4:	ldr	r1, [fp, #-220]	; 0xffffff24
    d2c8:	ldr	r0, [fp, #-232]	; 0xffffff18
    d2cc:	bl	c8f8 <rb_sha512_process_bytes>
    d2d0:	ldr	r3, [fp, #-8]
    d2d4:	and	r3, r3, #1
    d2d8:	cmp	r3, #0
    d2dc:	beq	d2f8 <rb_sha512_crypt_r+0x738>
    d2e0:	sub	r2, fp, #716	; 0x2cc
    d2e4:	sub	r3, fp, #308	; 0x134
    d2e8:	mov	r1, #64	; 0x40
    d2ec:	mov	r0, r3
    d2f0:	bl	c8f8 <rb_sha512_process_bytes>
    d2f4:	b	d30c <rb_sha512_crypt_r+0x74c>
    d2f8:	sub	r3, fp, #716	; 0x2cc
    d2fc:	mov	r2, r3
    d300:	ldr	r1, [fp, #-220]	; 0xffffff24
    d304:	ldr	r0, [fp, #-232]	; 0xffffff18
    d308:	bl	c8f8 <rb_sha512_process_bytes>
    d30c:	sub	r2, fp, #308	; 0x134
    d310:	sub	r3, fp, #716	; 0x2cc
    d314:	mov	r1, r2
    d318:	mov	r0, r3
    d31c:	bl	bd58 <rb_sha512_finish_ctx>
    d320:	ldr	r3, [fp, #-8]
    d324:	add	r3, r3, #1
    d328:	str	r3, [fp, #-8]
    d32c:	ldr	r2, [fp, #-8]
    d330:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d334:	cmp	r2, r3
    d338:	bcc	d1fc <rb_sha512_crypt_r+0x63c>
    d33c:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    d340:	bic	r3, r3, r3, asr #31
    d344:	mov	r2, r3
    d348:	mov	r1, #0
    d34c:	ldr	r0, [fp, #-1080]	; 0xfffffbc8
    d350:	bl	4648 <memset@plt>
    d354:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    d358:	bic	r3, r3, r3, asr #31
    d35c:	mov	r2, r3
    d360:	ldr	r3, [pc, #2100]	; db9c <rb_sha512_crypt_r+0xfdc>
    d364:	add	r3, pc, r3
    d368:	mov	r1, r3
    d36c:	ldr	r0, [fp, #-1080]	; 0xfffffbc8
    d370:	bl	4594 <strncpy@plt>
    d374:	ldr	r0, [fp, #-1080]	; 0xfffffbc8
    d378:	bl	4810 <strlen@plt>
    d37c:	mov	r3, r0
    d380:	mov	r2, r3
    d384:	ldr	r3, [fp, #-1080]	; 0xfffffbc8
    d388:	add	r3, r3, r2
    d38c:	str	r3, [fp, #-12]
    d390:	ldr	r3, [fp, #-12]
    d394:	cmp	r3, #0
    d398:	bne	d3b4 <rb_sha512_crypt_r+0x7f4>
    d39c:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    d3a0:	bic	r3, r3, r3, asr #31
    d3a4:	mov	r2, r3
    d3a8:	ldr	r3, [fp, #-1080]	; 0xfffffbc8
    d3ac:	add	r3, r3, r2
    d3b0:	str	r3, [fp, #-12]
    d3b4:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    d3b8:	sub	r3, r3, #3
    d3bc:	str	r3, [fp, #-1084]	; 0xfffffbc4
    d3c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d3c4:	cmp	r3, #0
    d3c8:	beq	d41c <rb_sha512_crypt_r+0x85c>
    d3cc:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    d3d0:	bic	r3, r3, r3, asr #31
    d3d4:	mov	r1, r3
    d3d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d3dc:	str	r3, [sp]
    d3e0:	ldr	r3, [pc, #1976]	; dba0 <rb_sha512_crypt_r+0xfe0>
    d3e4:	add	r3, pc, r3
    d3e8:	ldr	r2, [pc, #1972]	; dba4 <rb_sha512_crypt_r+0xfe4>
    d3ec:	add	r2, pc, r2
    d3f0:	ldr	r0, [fp, #-12]
    d3f4:	bl	4bdc <snprintf@plt>
    d3f8:	str	r0, [fp, #-240]	; 0xffffff10
    d3fc:	ldr	r3, [fp, #-240]	; 0xffffff10
    d400:	ldr	r2, [fp, #-12]
    d404:	add	r3, r2, r3
    d408:	str	r3, [fp, #-12]
    d40c:	ldr	r2, [fp, #-1084]	; 0xfffffbc4
    d410:	ldr	r3, [fp, #-240]	; 0xffffff10
    d414:	sub	r3, r2, r3
    d418:	str	r3, [fp, #-1084]	; 0xfffffbc4
    d41c:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    d420:	bic	r3, r3, r3, asr #31
    d424:	mov	r2, r3
    d428:	ldr	r3, [fp, #-216]	; 0xffffff28
    d42c:	cmp	r2, r3
    d430:	movcc	r3, r2
    d434:	movcs	r3, r3
    d438:	mov	r2, r3
    d43c:	mov	r1, #0
    d440:	ldr	r0, [fp, #-12]
    d444:	bl	4648 <memset@plt>
    d448:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    d44c:	bic	r3, r3, r3, asr #31
    d450:	mov	r2, r3
    d454:	ldr	r3, [fp, #-216]	; 0xffffff28
    d458:	cmp	r2, r3
    d45c:	movcc	r3, r2
    d460:	movcs	r3, r3
    d464:	mov	r2, r3
    d468:	ldr	r1, [fp, #-1076]	; 0xfffffbcc
    d46c:	ldr	r0, [fp, #-12]
    d470:	bl	4594 <strncpy@plt>
    d474:	ldr	r0, [fp, #-1080]	; 0xfffffbc8
    d478:	bl	4810 <strlen@plt>
    d47c:	mov	r3, r0
    d480:	mov	r2, r3
    d484:	ldr	r3, [fp, #-1080]	; 0xfffffbc8
    d488:	add	r3, r3, r2
    d48c:	str	r3, [fp, #-12]
    d490:	ldr	r3, [fp, #-12]
    d494:	cmp	r3, #0
    d498:	bne	d4ac <rb_sha512_crypt_r+0x8ec>
    d49c:	ldr	r2, [fp, #-1080]	; 0xfffffbc8
    d4a0:	ldr	r3, [fp, #-216]	; 0xffffff28
    d4a4:	add	r3, r2, r3
    d4a8:	str	r3, [fp, #-12]
    d4ac:	ldr	r1, [fp, #-1084]	; 0xfffffbc4
    d4b0:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    d4b4:	bic	r3, r3, r3, asr #31
    d4b8:	mov	r2, r3
    d4bc:	ldr	r3, [fp, #-216]	; 0xffffff28
    d4c0:	cmp	r2, r3
    d4c4:	movcc	r3, r2
    d4c8:	movcs	r3, r3
    d4cc:	sub	r3, r1, r3
    d4d0:	str	r3, [fp, #-1084]	; 0xfffffbc4
    d4d4:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    d4d8:	cmp	r3, #0
    d4dc:	ble	d500 <rb_sha512_crypt_r+0x940>
    d4e0:	ldr	r3, [fp, #-12]
    d4e4:	add	r2, r3, #1
    d4e8:	str	r2, [fp, #-12]
    d4ec:	mov	r2, #36	; 0x24
    d4f0:	strb	r2, [r3]
    d4f4:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    d4f8:	sub	r3, r3, #1
    d4fc:	str	r3, [fp, #-1084]	; 0xfffffbc4
    d500:	ldrb	r3, [fp, #-308]	; 0xfffffecc
    d504:	lsl	r2, r3, #16
    d508:	ldrb	r3, [fp, #-287]	; 0xfffffee1
    d50c:	lsl	r3, r3, #8
    d510:	orr	r3, r2, r3
    d514:	ldrb	r2, [fp, #-266]	; 0xfffffef6
    d518:	orr	r3, r3, r2
    d51c:	str	r3, [fp, #-32]	; 0xffffffe0
    d520:	mov	r3, #4
    d524:	str	r3, [fp, #-36]	; 0xffffffdc
    d528:	b	d568 <rb_sha512_crypt_r+0x9a8>
    d52c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    d530:	and	r2, r3, #63	; 0x3f
    d534:	ldr	r3, [fp, #-12]
    d538:	add	r1, r3, #1
    d53c:	str	r1, [fp, #-12]
    d540:	ldr	r1, [pc, #1632]	; dba8 <rb_sha512_crypt_r+0xfe8>
    d544:	add	r1, pc, r1
    d548:	ldrb	r2, [r1, r2]
    d54c:	strb	r2, [r3]
    d550:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    d554:	sub	r3, r3, #1
    d558:	str	r3, [fp, #-1084]	; 0xfffffbc4
    d55c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    d560:	lsr	r3, r3, #6
    d564:	str	r3, [fp, #-32]	; 0xffffffe0
    d568:	ldr	r3, [fp, #-36]	; 0xffffffdc
    d56c:	sub	r2, r3, #1
    d570:	str	r2, [fp, #-36]	; 0xffffffdc
    d574:	cmp	r3, #0
    d578:	ble	d588 <rb_sha512_crypt_r+0x9c8>
    d57c:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    d580:	cmp	r3, #0
    d584:	bgt	d52c <rb_sha512_crypt_r+0x96c>
    d588:	ldrb	r3, [fp, #-286]	; 0xfffffee2
    d58c:	lsl	r2, r3, #16
    d590:	ldrb	r3, [fp, #-265]	; 0xfffffef7
    d594:	lsl	r3, r3, #8
    d598:	orr	r3, r2, r3
    d59c:	ldrb	r2, [fp, #-307]	; 0xfffffecd
    d5a0:	orr	r3, r3, r2
    d5a4:	str	r3, [fp, #-40]	; 0xffffffd8
    d5a8:	mov	r3, #4
    d5ac:	str	r3, [fp, #-44]	; 0xffffffd4
    d5b0:	b	d5f0 <rb_sha512_crypt_r+0xa30>
    d5b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    d5b8:	and	r2, r3, #63	; 0x3f
    d5bc:	ldr	r3, [fp, #-12]
    d5c0:	add	r1, r3, #1
    d5c4:	str	r1, [fp, #-12]
    d5c8:	ldr	r1, [pc, #1500]	; dbac <rb_sha512_crypt_r+0xfec>
    d5cc:	add	r1, pc, r1
    d5d0:	ldrb	r2, [r1, r2]
    d5d4:	strb	r2, [r3]
    d5d8:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    d5dc:	sub	r3, r3, #1
    d5e0:	str	r3, [fp, #-1084]	; 0xfffffbc4
    d5e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    d5e8:	lsr	r3, r3, #6
    d5ec:	str	r3, [fp, #-40]	; 0xffffffd8
    d5f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    d5f4:	sub	r2, r3, #1
    d5f8:	str	r2, [fp, #-44]	; 0xffffffd4
    d5fc:	cmp	r3, #0
    d600:	ble	d610 <rb_sha512_crypt_r+0xa50>
    d604:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    d608:	cmp	r3, #0
    d60c:	bgt	d5b4 <rb_sha512_crypt_r+0x9f4>
    d610:	ldrb	r3, [fp, #-264]	; 0xfffffef8
    d614:	lsl	r2, r3, #16
    d618:	ldrb	r3, [fp, #-306]	; 0xfffffece
    d61c:	lsl	r3, r3, #8
    d620:	orr	r3, r2, r3
    d624:	ldrb	r2, [fp, #-285]	; 0xfffffee3
    d628:	orr	r3, r3, r2
    d62c:	str	r3, [fp, #-48]	; 0xffffffd0
    d630:	mov	r3, #4
    d634:	str	r3, [fp, #-52]	; 0xffffffcc
    d638:	b	d678 <rb_sha512_crypt_r+0xab8>
    d63c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    d640:	and	r2, r3, #63	; 0x3f
    d644:	ldr	r3, [fp, #-12]
    d648:	add	r1, r3, #1
    d64c:	str	r1, [fp, #-12]
    d650:	ldr	r1, [pc, #1368]	; dbb0 <rb_sha512_crypt_r+0xff0>
    d654:	add	r1, pc, r1
    d658:	ldrb	r2, [r1, r2]
    d65c:	strb	r2, [r3]
    d660:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    d664:	sub	r3, r3, #1
    d668:	str	r3, [fp, #-1084]	; 0xfffffbc4
    d66c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    d670:	lsr	r3, r3, #6
    d674:	str	r3, [fp, #-48]	; 0xffffffd0
    d678:	ldr	r3, [fp, #-52]	; 0xffffffcc
    d67c:	sub	r2, r3, #1
    d680:	str	r2, [fp, #-52]	; 0xffffffcc
    d684:	cmp	r3, #0
    d688:	ble	d698 <rb_sha512_crypt_r+0xad8>
    d68c:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    d690:	cmp	r3, #0
    d694:	bgt	d63c <rb_sha512_crypt_r+0xa7c>
    d698:	ldrb	r3, [fp, #-305]	; 0xfffffecf
    d69c:	lsl	r2, r3, #16
    d6a0:	ldrb	r3, [fp, #-284]	; 0xfffffee4
    d6a4:	lsl	r3, r3, #8
    d6a8:	orr	r3, r2, r3
    d6ac:	ldrb	r2, [fp, #-263]	; 0xfffffef9
    d6b0:	orr	r3, r3, r2
    d6b4:	str	r3, [fp, #-56]	; 0xffffffc8
    d6b8:	mov	r3, #4
    d6bc:	str	r3, [fp, #-60]	; 0xffffffc4
    d6c0:	b	d700 <rb_sha512_crypt_r+0xb40>
    d6c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    d6c8:	and	r2, r3, #63	; 0x3f
    d6cc:	ldr	r3, [fp, #-12]
    d6d0:	add	r1, r3, #1
    d6d4:	str	r1, [fp, #-12]
    d6d8:	ldr	r1, [pc, #1236]	; dbb4 <rb_sha512_crypt_r+0xff4>
    d6dc:	add	r1, pc, r1
    d6e0:	ldrb	r2, [r1, r2]
    d6e4:	strb	r2, [r3]
    d6e8:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    d6ec:	sub	r3, r3, #1
    d6f0:	str	r3, [fp, #-1084]	; 0xfffffbc4
    d6f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    d6f8:	lsr	r3, r3, #6
    d6fc:	str	r3, [fp, #-56]	; 0xffffffc8
    d700:	ldr	r3, [fp, #-60]	; 0xffffffc4
    d704:	sub	r2, r3, #1
    d708:	str	r2, [fp, #-60]	; 0xffffffc4
    d70c:	cmp	r3, #0
    d710:	ble	d720 <rb_sha512_crypt_r+0xb60>
    d714:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    d718:	cmp	r3, #0
    d71c:	bgt	d6c4 <rb_sha512_crypt_r+0xb04>
    d720:	ldrb	r3, [fp, #-283]	; 0xfffffee5
    d724:	lsl	r2, r3, #16
    d728:	ldrb	r3, [fp, #-262]	; 0xfffffefa
    d72c:	lsl	r3, r3, #8
    d730:	orr	r3, r2, r3
    d734:	ldrb	r2, [fp, #-304]	; 0xfffffed0
    d738:	orr	r3, r3, r2
    d73c:	str	r3, [fp, #-64]	; 0xffffffc0
    d740:	mov	r3, #4
    d744:	str	r3, [fp, #-68]	; 0xffffffbc
    d748:	b	d788 <rb_sha512_crypt_r+0xbc8>
    d74c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    d750:	and	r2, r3, #63	; 0x3f
    d754:	ldr	r3, [fp, #-12]
    d758:	add	r1, r3, #1
    d75c:	str	r1, [fp, #-12]
    d760:	ldr	r1, [pc, #1104]	; dbb8 <rb_sha512_crypt_r+0xff8>
    d764:	add	r1, pc, r1
    d768:	ldrb	r2, [r1, r2]
    d76c:	strb	r2, [r3]
    d770:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    d774:	sub	r3, r3, #1
    d778:	str	r3, [fp, #-1084]	; 0xfffffbc4
    d77c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    d780:	lsr	r3, r3, #6
    d784:	str	r3, [fp, #-64]	; 0xffffffc0
    d788:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d78c:	sub	r2, r3, #1
    d790:	str	r2, [fp, #-68]	; 0xffffffbc
    d794:	cmp	r3, #0
    d798:	ble	d7a8 <rb_sha512_crypt_r+0xbe8>
    d79c:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    d7a0:	cmp	r3, #0
    d7a4:	bgt	d74c <rb_sha512_crypt_r+0xb8c>
    d7a8:	ldrb	r3, [fp, #-261]	; 0xfffffefb
    d7ac:	lsl	r2, r3, #16
    d7b0:	ldrb	r3, [fp, #-303]	; 0xfffffed1
    d7b4:	lsl	r3, r3, #8
    d7b8:	orr	r3, r2, r3
    d7bc:	ldrb	r2, [fp, #-282]	; 0xfffffee6
    d7c0:	orr	r3, r3, r2
    d7c4:	str	r3, [fp, #-72]	; 0xffffffb8
    d7c8:	mov	r3, #4
    d7cc:	str	r3, [fp, #-76]	; 0xffffffb4
    d7d0:	b	d810 <rb_sha512_crypt_r+0xc50>
    d7d4:	ldr	r3, [fp, #-72]	; 0xffffffb8
    d7d8:	and	r2, r3, #63	; 0x3f
    d7dc:	ldr	r3, [fp, #-12]
    d7e0:	add	r1, r3, #1
    d7e4:	str	r1, [fp, #-12]
    d7e8:	ldr	r1, [pc, #972]	; dbbc <rb_sha512_crypt_r+0xffc>
    d7ec:	add	r1, pc, r1
    d7f0:	ldrb	r2, [r1, r2]
    d7f4:	strb	r2, [r3]
    d7f8:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    d7fc:	sub	r3, r3, #1
    d800:	str	r3, [fp, #-1084]	; 0xfffffbc4
    d804:	ldr	r3, [fp, #-72]	; 0xffffffb8
    d808:	lsr	r3, r3, #6
    d80c:	str	r3, [fp, #-72]	; 0xffffffb8
    d810:	ldr	r3, [fp, #-76]	; 0xffffffb4
    d814:	sub	r2, r3, #1
    d818:	str	r2, [fp, #-76]	; 0xffffffb4
    d81c:	cmp	r3, #0
    d820:	ble	d830 <rb_sha512_crypt_r+0xc70>
    d824:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    d828:	cmp	r3, #0
    d82c:	bgt	d7d4 <rb_sha512_crypt_r+0xc14>
    d830:	ldrb	r3, [fp, #-302]	; 0xfffffed2
    d834:	lsl	r2, r3, #16
    d838:	ldrb	r3, [fp, #-281]	; 0xfffffee7
    d83c:	lsl	r3, r3, #8
    d840:	orr	r3, r2, r3
    d844:	ldrb	r2, [fp, #-260]	; 0xfffffefc
    d848:	orr	r3, r3, r2
    d84c:	str	r3, [fp, #-80]	; 0xffffffb0
    d850:	mov	r3, #4
    d854:	str	r3, [fp, #-84]	; 0xffffffac
    d858:	b	d898 <rb_sha512_crypt_r+0xcd8>
    d85c:	ldr	r3, [fp, #-80]	; 0xffffffb0
    d860:	and	r2, r3, #63	; 0x3f
    d864:	ldr	r3, [fp, #-12]
    d868:	add	r1, r3, #1
    d86c:	str	r1, [fp, #-12]
    d870:	ldr	r1, [pc, #840]	; dbc0 <rb_sha512_crypt_r+0x1000>
    d874:	add	r1, pc, r1
    d878:	ldrb	r2, [r1, r2]
    d87c:	strb	r2, [r3]
    d880:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    d884:	sub	r3, r3, #1
    d888:	str	r3, [fp, #-1084]	; 0xfffffbc4
    d88c:	ldr	r3, [fp, #-80]	; 0xffffffb0
    d890:	lsr	r3, r3, #6
    d894:	str	r3, [fp, #-80]	; 0xffffffb0
    d898:	ldr	r3, [fp, #-84]	; 0xffffffac
    d89c:	sub	r2, r3, #1
    d8a0:	str	r2, [fp, #-84]	; 0xffffffac
    d8a4:	cmp	r3, #0
    d8a8:	ble	d8b8 <rb_sha512_crypt_r+0xcf8>
    d8ac:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    d8b0:	cmp	r3, #0
    d8b4:	bgt	d85c <rb_sha512_crypt_r+0xc9c>
    d8b8:	ldrb	r3, [fp, #-280]	; 0xfffffee8
    d8bc:	lsl	r2, r3, #16
    d8c0:	ldrb	r3, [fp, #-259]	; 0xfffffefd
    d8c4:	lsl	r3, r3, #8
    d8c8:	orr	r3, r2, r3
    d8cc:	ldrb	r2, [fp, #-301]	; 0xfffffed3
    d8d0:	orr	r3, r3, r2
    d8d4:	str	r3, [fp, #-88]	; 0xffffffa8
    d8d8:	mov	r3, #4
    d8dc:	str	r3, [fp, #-92]	; 0xffffffa4
    d8e0:	b	d920 <rb_sha512_crypt_r+0xd60>
    d8e4:	ldr	r3, [fp, #-88]	; 0xffffffa8
    d8e8:	and	r2, r3, #63	; 0x3f
    d8ec:	ldr	r3, [fp, #-12]
    d8f0:	add	r1, r3, #1
    d8f4:	str	r1, [fp, #-12]
    d8f8:	ldr	r1, [pc, #708]	; dbc4 <rb_sha512_crypt_r+0x1004>
    d8fc:	add	r1, pc, r1
    d900:	ldrb	r2, [r1, r2]
    d904:	strb	r2, [r3]
    d908:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    d90c:	sub	r3, r3, #1
    d910:	str	r3, [fp, #-1084]	; 0xfffffbc4
    d914:	ldr	r3, [fp, #-88]	; 0xffffffa8
    d918:	lsr	r3, r3, #6
    d91c:	str	r3, [fp, #-88]	; 0xffffffa8
    d920:	ldr	r3, [fp, #-92]	; 0xffffffa4
    d924:	sub	r2, r3, #1
    d928:	str	r2, [fp, #-92]	; 0xffffffa4
    d92c:	cmp	r3, #0
    d930:	ble	d940 <rb_sha512_crypt_r+0xd80>
    d934:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    d938:	cmp	r3, #0
    d93c:	bgt	d8e4 <rb_sha512_crypt_r+0xd24>
    d940:	ldrb	r3, [fp, #-258]	; 0xfffffefe
    d944:	lsl	r2, r3, #16
    d948:	ldrb	r3, [fp, #-300]	; 0xfffffed4
    d94c:	lsl	r3, r3, #8
    d950:	orr	r3, r2, r3
    d954:	ldrb	r2, [fp, #-279]	; 0xfffffee9
    d958:	orr	r3, r3, r2
    d95c:	str	r3, [fp, #-96]	; 0xffffffa0
    d960:	mov	r3, #4
    d964:	str	r3, [fp, #-100]	; 0xffffff9c
    d968:	b	d9a8 <rb_sha512_crypt_r+0xde8>
    d96c:	ldr	r3, [fp, #-96]	; 0xffffffa0
    d970:	and	r2, r3, #63	; 0x3f
    d974:	ldr	r3, [fp, #-12]
    d978:	add	r1, r3, #1
    d97c:	str	r1, [fp, #-12]
    d980:	ldr	r1, [pc, #576]	; dbc8 <rb_sha512_crypt_r+0x1008>
    d984:	add	r1, pc, r1
    d988:	ldrb	r2, [r1, r2]
    d98c:	strb	r2, [r3]
    d990:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    d994:	sub	r3, r3, #1
    d998:	str	r3, [fp, #-1084]	; 0xfffffbc4
    d99c:	ldr	r3, [fp, #-96]	; 0xffffffa0
    d9a0:	lsr	r3, r3, #6
    d9a4:	str	r3, [fp, #-96]	; 0xffffffa0
    d9a8:	ldr	r3, [fp, #-100]	; 0xffffff9c
    d9ac:	sub	r2, r3, #1
    d9b0:	str	r2, [fp, #-100]	; 0xffffff9c
    d9b4:	cmp	r3, #0
    d9b8:	ble	d9c8 <rb_sha512_crypt_r+0xe08>
    d9bc:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    d9c0:	cmp	r3, #0
    d9c4:	bgt	d96c <rb_sha512_crypt_r+0xdac>
    d9c8:	ldrb	r3, [fp, #-299]	; 0xfffffed5
    d9cc:	lsl	r2, r3, #16
    d9d0:	ldrb	r3, [fp, #-278]	; 0xfffffeea
    d9d4:	lsl	r3, r3, #8
    d9d8:	orr	r3, r2, r3
    d9dc:	ldrb	r2, [fp, #-257]	; 0xfffffeff
    d9e0:	orr	r3, r3, r2
    d9e4:	str	r3, [fp, #-104]	; 0xffffff98
    d9e8:	mov	r3, #4
    d9ec:	str	r3, [fp, #-108]	; 0xffffff94
    d9f0:	b	da30 <rb_sha512_crypt_r+0xe70>
    d9f4:	ldr	r3, [fp, #-104]	; 0xffffff98
    d9f8:	and	r2, r3, #63	; 0x3f
    d9fc:	ldr	r3, [fp, #-12]
    da00:	add	r1, r3, #1
    da04:	str	r1, [fp, #-12]
    da08:	ldr	r1, [pc, #444]	; dbcc <rb_sha512_crypt_r+0x100c>
    da0c:	add	r1, pc, r1
    da10:	ldrb	r2, [r1, r2]
    da14:	strb	r2, [r3]
    da18:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    da1c:	sub	r3, r3, #1
    da20:	str	r3, [fp, #-1084]	; 0xfffffbc4
    da24:	ldr	r3, [fp, #-104]	; 0xffffff98
    da28:	lsr	r3, r3, #6
    da2c:	str	r3, [fp, #-104]	; 0xffffff98
    da30:	ldr	r3, [fp, #-108]	; 0xffffff94
    da34:	sub	r2, r3, #1
    da38:	str	r2, [fp, #-108]	; 0xffffff94
    da3c:	cmp	r3, #0
    da40:	ble	da50 <rb_sha512_crypt_r+0xe90>
    da44:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    da48:	cmp	r3, #0
    da4c:	bgt	d9f4 <rb_sha512_crypt_r+0xe34>
    da50:	ldrb	r3, [fp, #-277]	; 0xfffffeeb
    da54:	lsl	r2, r3, #16
    da58:	ldrb	r3, [fp, #-256]	; 0xffffff00
    da5c:	lsl	r3, r3, #8
    da60:	orr	r3, r2, r3
    da64:	ldrb	r2, [fp, #-298]	; 0xfffffed6
    da68:	orr	r3, r3, r2
    da6c:	str	r3, [fp, #-112]	; 0xffffff90
    da70:	mov	r3, #4
    da74:	str	r3, [fp, #-116]	; 0xffffff8c
    da78:	b	dab8 <rb_sha512_crypt_r+0xef8>
    da7c:	ldr	r3, [fp, #-112]	; 0xffffff90
    da80:	and	r2, r3, #63	; 0x3f
    da84:	ldr	r3, [fp, #-12]
    da88:	add	r1, r3, #1
    da8c:	str	r1, [fp, #-12]
    da90:	ldr	r1, [pc, #312]	; dbd0 <rb_sha512_crypt_r+0x1010>
    da94:	add	r1, pc, r1
    da98:	ldrb	r2, [r1, r2]
    da9c:	strb	r2, [r3]
    daa0:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    daa4:	sub	r3, r3, #1
    daa8:	str	r3, [fp, #-1084]	; 0xfffffbc4
    daac:	ldr	r3, [fp, #-112]	; 0xffffff90
    dab0:	lsr	r3, r3, #6
    dab4:	str	r3, [fp, #-112]	; 0xffffff90
    dab8:	ldr	r3, [fp, #-116]	; 0xffffff8c
    dabc:	sub	r2, r3, #1
    dac0:	str	r2, [fp, #-116]	; 0xffffff8c
    dac4:	cmp	r3, #0
    dac8:	ble	dad8 <rb_sha512_crypt_r+0xf18>
    dacc:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    dad0:	cmp	r3, #0
    dad4:	bgt	da7c <rb_sha512_crypt_r+0xebc>
    dad8:	ldrb	r3, [fp, #-255]	; 0xffffff01
    dadc:	lsl	r2, r3, #16
    dae0:	ldrb	r3, [fp, #-297]	; 0xfffffed7
    dae4:	lsl	r3, r3, #8
    dae8:	orr	r3, r2, r3
    daec:	ldrb	r2, [fp, #-276]	; 0xfffffeec
    daf0:	orr	r3, r3, r2
    daf4:	str	r3, [fp, #-120]	; 0xffffff88
    daf8:	mov	r3, #4
    dafc:	str	r3, [fp, #-124]	; 0xffffff84
    db00:	b	db40 <rb_sha512_crypt_r+0xf80>
    db04:	ldr	r3, [fp, #-120]	; 0xffffff88
    db08:	and	r2, r3, #63	; 0x3f
    db0c:	ldr	r3, [fp, #-12]
    db10:	add	r1, r3, #1
    db14:	str	r1, [fp, #-12]
    db18:	ldr	r1, [pc, #180]	; dbd4 <rb_sha512_crypt_r+0x1014>
    db1c:	add	r1, pc, r1
    db20:	ldrb	r2, [r1, r2]
    db24:	strb	r2, [r3]
    db28:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    db2c:	sub	r3, r3, #1
    db30:	str	r3, [fp, #-1084]	; 0xfffffbc4
    db34:	ldr	r3, [fp, #-120]	; 0xffffff88
    db38:	lsr	r3, r3, #6
    db3c:	str	r3, [fp, #-120]	; 0xffffff88
    db40:	ldr	r3, [fp, #-124]	; 0xffffff84
    db44:	sub	r2, r3, #1
    db48:	str	r2, [fp, #-124]	; 0xffffff84
    db4c:	cmp	r3, #0
    db50:	ble	db60 <rb_sha512_crypt_r+0xfa0>
    db54:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    db58:	cmp	r3, #0
    db5c:	bgt	db04 <rb_sha512_crypt_r+0xf44>
    db60:	ldrb	r3, [fp, #-296]	; 0xfffffed8
    db64:	lsl	r2, r3, #16
    db68:	ldrb	r3, [fp, #-275]	; 0xfffffeed
    db6c:	lsl	r3, r3, #8
    db70:	orr	r3, r2, r3
    db74:	ldrb	r2, [fp, #-254]	; 0xffffff02
    db78:	orr	r3, r3, r2
    db7c:	str	r3, [fp, #-128]	; 0xffffff80
    db80:	mov	r3, #4
    db84:	str	r3, [fp, #-132]	; 0xffffff7c
    db88:	b	dc3c <rb_sha512_crypt_r+0x107c>
    db8c:	.word	0x0001690c
    db90:	.word	0x000168e4
    db94:	.word	0x000163e4
    db98:	.word	0x000163c4
    db9c:	.word	0x000161b4
    dba0:	.word	0x00016138
    dba4:	.word	0x00015e20
    dba8:	.word	0x000157d4
    dbac:	.word	0x0001574c
    dbb0:	.word	0x000156c4
    dbb4:	.word	0x0001563c
    dbb8:	.word	0x000155b4
    dbbc:	.word	0x0001552c
    dbc0:	.word	0x000154a4
    dbc4:	.word	0x0001541c
    dbc8:	.word	0x00015394
    dbcc:	.word	0x0001530c
    dbd0:	.word	0x00015284
    dbd4:	.word	0x000151fc
    dbd8:	.word	0x00015100
    dbdc:	.word	0x00015078
    dbe0:	.word	0x00014ff0
    dbe4:	.word	0x00014f68
    dbe8:	.word	0x00014ee0
    dbec:	.word	0x00014e58
    dbf0:	.word	0x00014dd0
    dbf4:	.word	0x00014d48
    dbf8:	.word	0x00014cc0
    dbfc:	.word	0x00014c50
    dc00:	ldr	r3, [fp, #-128]	; 0xffffff80
    dc04:	and	r2, r3, #63	; 0x3f
    dc08:	ldr	r3, [fp, #-12]
    dc0c:	add	r1, r3, #1
    dc10:	str	r1, [fp, #-12]
    dc14:	ldr	r1, [pc, #-68]	; dbd8 <rb_sha512_crypt_r+0x1018>
    dc18:	add	r1, pc, r1
    dc1c:	ldrb	r2, [r1, r2]
    dc20:	strb	r2, [r3]
    dc24:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    dc28:	sub	r3, r3, #1
    dc2c:	str	r3, [fp, #-1084]	; 0xfffffbc4
    dc30:	ldr	r3, [fp, #-128]	; 0xffffff80
    dc34:	lsr	r3, r3, #6
    dc38:	str	r3, [fp, #-128]	; 0xffffff80
    dc3c:	ldr	r3, [fp, #-132]	; 0xffffff7c
    dc40:	sub	r2, r3, #1
    dc44:	str	r2, [fp, #-132]	; 0xffffff7c
    dc48:	cmp	r3, #0
    dc4c:	ble	dc5c <rb_sha512_crypt_r+0x109c>
    dc50:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    dc54:	cmp	r3, #0
    dc58:	bgt	dc00 <rb_sha512_crypt_r+0x1040>
    dc5c:	ldrb	r3, [fp, #-274]	; 0xfffffeee
    dc60:	lsl	r2, r3, #16
    dc64:	ldrb	r3, [fp, #-253]	; 0xffffff03
    dc68:	lsl	r3, r3, #8
    dc6c:	orr	r3, r2, r3
    dc70:	ldrb	r2, [fp, #-295]	; 0xfffffed9
    dc74:	orr	r3, r3, r2
    dc78:	str	r3, [fp, #-136]	; 0xffffff78
    dc7c:	mov	r3, #4
    dc80:	str	r3, [fp, #-140]	; 0xffffff74
    dc84:	b	dcc4 <rb_sha512_crypt_r+0x1104>
    dc88:	ldr	r3, [fp, #-136]	; 0xffffff78
    dc8c:	and	r2, r3, #63	; 0x3f
    dc90:	ldr	r3, [fp, #-12]
    dc94:	add	r1, r3, #1
    dc98:	str	r1, [fp, #-12]
    dc9c:	ldr	r1, [pc, #-200]	; dbdc <rb_sha512_crypt_r+0x101c>
    dca0:	add	r1, pc, r1
    dca4:	ldrb	r2, [r1, r2]
    dca8:	strb	r2, [r3]
    dcac:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    dcb0:	sub	r3, r3, #1
    dcb4:	str	r3, [fp, #-1084]	; 0xfffffbc4
    dcb8:	ldr	r3, [fp, #-136]	; 0xffffff78
    dcbc:	lsr	r3, r3, #6
    dcc0:	str	r3, [fp, #-136]	; 0xffffff78
    dcc4:	ldr	r3, [fp, #-140]	; 0xffffff74
    dcc8:	sub	r2, r3, #1
    dccc:	str	r2, [fp, #-140]	; 0xffffff74
    dcd0:	cmp	r3, #0
    dcd4:	ble	dce4 <rb_sha512_crypt_r+0x1124>
    dcd8:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    dcdc:	cmp	r3, #0
    dce0:	bgt	dc88 <rb_sha512_crypt_r+0x10c8>
    dce4:	ldrb	r3, [fp, #-252]	; 0xffffff04
    dce8:	lsl	r2, r3, #16
    dcec:	ldrb	r3, [fp, #-294]	; 0xfffffeda
    dcf0:	lsl	r3, r3, #8
    dcf4:	orr	r3, r2, r3
    dcf8:	ldrb	r2, [fp, #-273]	; 0xfffffeef
    dcfc:	orr	r3, r3, r2
    dd00:	str	r3, [fp, #-144]	; 0xffffff70
    dd04:	mov	r3, #4
    dd08:	str	r3, [fp, #-148]	; 0xffffff6c
    dd0c:	b	dd4c <rb_sha512_crypt_r+0x118c>
    dd10:	ldr	r3, [fp, #-144]	; 0xffffff70
    dd14:	and	r2, r3, #63	; 0x3f
    dd18:	ldr	r3, [fp, #-12]
    dd1c:	add	r1, r3, #1
    dd20:	str	r1, [fp, #-12]
    dd24:	ldr	r1, [pc, #-332]	; dbe0 <rb_sha512_crypt_r+0x1020>
    dd28:	add	r1, pc, r1
    dd2c:	ldrb	r2, [r1, r2]
    dd30:	strb	r2, [r3]
    dd34:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    dd38:	sub	r3, r3, #1
    dd3c:	str	r3, [fp, #-1084]	; 0xfffffbc4
    dd40:	ldr	r3, [fp, #-144]	; 0xffffff70
    dd44:	lsr	r3, r3, #6
    dd48:	str	r3, [fp, #-144]	; 0xffffff70
    dd4c:	ldr	r3, [fp, #-148]	; 0xffffff6c
    dd50:	sub	r2, r3, #1
    dd54:	str	r2, [fp, #-148]	; 0xffffff6c
    dd58:	cmp	r3, #0
    dd5c:	ble	dd6c <rb_sha512_crypt_r+0x11ac>
    dd60:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    dd64:	cmp	r3, #0
    dd68:	bgt	dd10 <rb_sha512_crypt_r+0x1150>
    dd6c:	ldrb	r3, [fp, #-293]	; 0xfffffedb
    dd70:	lsl	r2, r3, #16
    dd74:	ldrb	r3, [fp, #-272]	; 0xfffffef0
    dd78:	lsl	r3, r3, #8
    dd7c:	orr	r3, r2, r3
    dd80:	ldrb	r2, [fp, #-251]	; 0xffffff05
    dd84:	orr	r3, r3, r2
    dd88:	str	r3, [fp, #-152]	; 0xffffff68
    dd8c:	mov	r3, #4
    dd90:	str	r3, [fp, #-156]	; 0xffffff64
    dd94:	b	ddd4 <rb_sha512_crypt_r+0x1214>
    dd98:	ldr	r3, [fp, #-152]	; 0xffffff68
    dd9c:	and	r2, r3, #63	; 0x3f
    dda0:	ldr	r3, [fp, #-12]
    dda4:	add	r1, r3, #1
    dda8:	str	r1, [fp, #-12]
    ddac:	ldr	r1, [pc, #-464]	; dbe4 <rb_sha512_crypt_r+0x1024>
    ddb0:	add	r1, pc, r1
    ddb4:	ldrb	r2, [r1, r2]
    ddb8:	strb	r2, [r3]
    ddbc:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    ddc0:	sub	r3, r3, #1
    ddc4:	str	r3, [fp, #-1084]	; 0xfffffbc4
    ddc8:	ldr	r3, [fp, #-152]	; 0xffffff68
    ddcc:	lsr	r3, r3, #6
    ddd0:	str	r3, [fp, #-152]	; 0xffffff68
    ddd4:	ldr	r3, [fp, #-156]	; 0xffffff64
    ddd8:	sub	r2, r3, #1
    dddc:	str	r2, [fp, #-156]	; 0xffffff64
    dde0:	cmp	r3, #0
    dde4:	ble	ddf4 <rb_sha512_crypt_r+0x1234>
    dde8:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    ddec:	cmp	r3, #0
    ddf0:	bgt	dd98 <rb_sha512_crypt_r+0x11d8>
    ddf4:	ldrb	r3, [fp, #-271]	; 0xfffffef1
    ddf8:	lsl	r2, r3, #16
    ddfc:	ldrb	r3, [fp, #-250]	; 0xffffff06
    de00:	lsl	r3, r3, #8
    de04:	orr	r3, r2, r3
    de08:	ldrb	r2, [fp, #-292]	; 0xfffffedc
    de0c:	orr	r3, r3, r2
    de10:	str	r3, [fp, #-160]	; 0xffffff60
    de14:	mov	r3, #4
    de18:	str	r3, [fp, #-164]	; 0xffffff5c
    de1c:	b	de5c <rb_sha512_crypt_r+0x129c>
    de20:	ldr	r3, [fp, #-160]	; 0xffffff60
    de24:	and	r2, r3, #63	; 0x3f
    de28:	ldr	r3, [fp, #-12]
    de2c:	add	r1, r3, #1
    de30:	str	r1, [fp, #-12]
    de34:	ldr	r1, [pc, #-596]	; dbe8 <rb_sha512_crypt_r+0x1028>
    de38:	add	r1, pc, r1
    de3c:	ldrb	r2, [r1, r2]
    de40:	strb	r2, [r3]
    de44:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    de48:	sub	r3, r3, #1
    de4c:	str	r3, [fp, #-1084]	; 0xfffffbc4
    de50:	ldr	r3, [fp, #-160]	; 0xffffff60
    de54:	lsr	r3, r3, #6
    de58:	str	r3, [fp, #-160]	; 0xffffff60
    de5c:	ldr	r3, [fp, #-164]	; 0xffffff5c
    de60:	sub	r2, r3, #1
    de64:	str	r2, [fp, #-164]	; 0xffffff5c
    de68:	cmp	r3, #0
    de6c:	ble	de7c <rb_sha512_crypt_r+0x12bc>
    de70:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    de74:	cmp	r3, #0
    de78:	bgt	de20 <rb_sha512_crypt_r+0x1260>
    de7c:	ldrb	r3, [fp, #-249]	; 0xffffff07
    de80:	lsl	r2, r3, #16
    de84:	ldrb	r3, [fp, #-291]	; 0xfffffedd
    de88:	lsl	r3, r3, #8
    de8c:	orr	r3, r2, r3
    de90:	ldrb	r2, [fp, #-270]	; 0xfffffef2
    de94:	orr	r3, r3, r2
    de98:	str	r3, [fp, #-168]	; 0xffffff58
    de9c:	mov	r3, #4
    dea0:	str	r3, [fp, #-172]	; 0xffffff54
    dea4:	b	dee4 <rb_sha512_crypt_r+0x1324>
    dea8:	ldr	r3, [fp, #-168]	; 0xffffff58
    deac:	and	r2, r3, #63	; 0x3f
    deb0:	ldr	r3, [fp, #-12]
    deb4:	add	r1, r3, #1
    deb8:	str	r1, [fp, #-12]
    debc:	ldr	r1, [pc, #-728]	; dbec <rb_sha512_crypt_r+0x102c>
    dec0:	add	r1, pc, r1
    dec4:	ldrb	r2, [r1, r2]
    dec8:	strb	r2, [r3]
    decc:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    ded0:	sub	r3, r3, #1
    ded4:	str	r3, [fp, #-1084]	; 0xfffffbc4
    ded8:	ldr	r3, [fp, #-168]	; 0xffffff58
    dedc:	lsr	r3, r3, #6
    dee0:	str	r3, [fp, #-168]	; 0xffffff58
    dee4:	ldr	r3, [fp, #-172]	; 0xffffff54
    dee8:	sub	r2, r3, #1
    deec:	str	r2, [fp, #-172]	; 0xffffff54
    def0:	cmp	r3, #0
    def4:	ble	df04 <rb_sha512_crypt_r+0x1344>
    def8:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    defc:	cmp	r3, #0
    df00:	bgt	dea8 <rb_sha512_crypt_r+0x12e8>
    df04:	ldrb	r3, [fp, #-290]	; 0xfffffede
    df08:	lsl	r2, r3, #16
    df0c:	ldrb	r3, [fp, #-269]	; 0xfffffef3
    df10:	lsl	r3, r3, #8
    df14:	orr	r3, r2, r3
    df18:	ldrb	r2, [fp, #-248]	; 0xffffff08
    df1c:	orr	r3, r3, r2
    df20:	str	r3, [fp, #-176]	; 0xffffff50
    df24:	mov	r3, #4
    df28:	str	r3, [fp, #-180]	; 0xffffff4c
    df2c:	b	df6c <rb_sha512_crypt_r+0x13ac>
    df30:	ldr	r3, [fp, #-176]	; 0xffffff50
    df34:	and	r2, r3, #63	; 0x3f
    df38:	ldr	r3, [fp, #-12]
    df3c:	add	r1, r3, #1
    df40:	str	r1, [fp, #-12]
    df44:	ldr	r1, [pc, #-860]	; dbf0 <rb_sha512_crypt_r+0x1030>
    df48:	add	r1, pc, r1
    df4c:	ldrb	r2, [r1, r2]
    df50:	strb	r2, [r3]
    df54:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    df58:	sub	r3, r3, #1
    df5c:	str	r3, [fp, #-1084]	; 0xfffffbc4
    df60:	ldr	r3, [fp, #-176]	; 0xffffff50
    df64:	lsr	r3, r3, #6
    df68:	str	r3, [fp, #-176]	; 0xffffff50
    df6c:	ldr	r3, [fp, #-180]	; 0xffffff4c
    df70:	sub	r2, r3, #1
    df74:	str	r2, [fp, #-180]	; 0xffffff4c
    df78:	cmp	r3, #0
    df7c:	ble	df8c <rb_sha512_crypt_r+0x13cc>
    df80:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    df84:	cmp	r3, #0
    df88:	bgt	df30 <rb_sha512_crypt_r+0x1370>
    df8c:	ldrb	r3, [fp, #-268]	; 0xfffffef4
    df90:	lsl	r2, r3, #16
    df94:	ldrb	r3, [fp, #-247]	; 0xffffff09
    df98:	lsl	r3, r3, #8
    df9c:	orr	r3, r2, r3
    dfa0:	ldrb	r2, [fp, #-289]	; 0xfffffedf
    dfa4:	orr	r3, r3, r2
    dfa8:	str	r3, [fp, #-184]	; 0xffffff48
    dfac:	mov	r3, #4
    dfb0:	str	r3, [fp, #-188]	; 0xffffff44
    dfb4:	b	dff4 <rb_sha512_crypt_r+0x1434>
    dfb8:	ldr	r3, [fp, #-184]	; 0xffffff48
    dfbc:	and	r2, r3, #63	; 0x3f
    dfc0:	ldr	r3, [fp, #-12]
    dfc4:	add	r1, r3, #1
    dfc8:	str	r1, [fp, #-12]
    dfcc:	ldr	r1, [pc, #-992]	; dbf4 <rb_sha512_crypt_r+0x1034>
    dfd0:	add	r1, pc, r1
    dfd4:	ldrb	r2, [r1, r2]
    dfd8:	strb	r2, [r3]
    dfdc:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    dfe0:	sub	r3, r3, #1
    dfe4:	str	r3, [fp, #-1084]	; 0xfffffbc4
    dfe8:	ldr	r3, [fp, #-184]	; 0xffffff48
    dfec:	lsr	r3, r3, #6
    dff0:	str	r3, [fp, #-184]	; 0xffffff48
    dff4:	ldr	r3, [fp, #-188]	; 0xffffff44
    dff8:	sub	r2, r3, #1
    dffc:	str	r2, [fp, #-188]	; 0xffffff44
    e000:	cmp	r3, #0
    e004:	ble	e014 <rb_sha512_crypt_r+0x1454>
    e008:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    e00c:	cmp	r3, #0
    e010:	bgt	dfb8 <rb_sha512_crypt_r+0x13f8>
    e014:	ldrb	r3, [fp, #-246]	; 0xffffff0a
    e018:	lsl	r2, r3, #16
    e01c:	ldrb	r3, [fp, #-288]	; 0xfffffee0
    e020:	lsl	r3, r3, #8
    e024:	orr	r3, r2, r3
    e028:	ldrb	r2, [fp, #-267]	; 0xfffffef5
    e02c:	orr	r3, r3, r2
    e030:	str	r3, [fp, #-192]	; 0xffffff40
    e034:	mov	r3, #4
    e038:	str	r3, [fp, #-196]	; 0xffffff3c
    e03c:	b	e07c <rb_sha512_crypt_r+0x14bc>
    e040:	ldr	r3, [fp, #-192]	; 0xffffff40
    e044:	and	r2, r3, #63	; 0x3f
    e048:	ldr	r3, [fp, #-12]
    e04c:	add	r1, r3, #1
    e050:	str	r1, [fp, #-12]
    e054:	ldr	r1, [pc, #-1124]	; dbf8 <rb_sha512_crypt_r+0x1038>
    e058:	add	r1, pc, r1
    e05c:	ldrb	r2, [r1, r2]
    e060:	strb	r2, [r3]
    e064:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    e068:	sub	r3, r3, #1
    e06c:	str	r3, [fp, #-1084]	; 0xfffffbc4
    e070:	ldr	r3, [fp, #-192]	; 0xffffff40
    e074:	lsr	r3, r3, #6
    e078:	str	r3, [fp, #-192]	; 0xffffff40
    e07c:	ldr	r3, [fp, #-196]	; 0xffffff3c
    e080:	sub	r2, r3, #1
    e084:	str	r2, [fp, #-196]	; 0xffffff3c
    e088:	cmp	r3, #0
    e08c:	ble	e09c <rb_sha512_crypt_r+0x14dc>
    e090:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    e094:	cmp	r3, #0
    e098:	bgt	e040 <rb_sha512_crypt_r+0x1480>
    e09c:	ldrb	r3, [fp, #-245]	; 0xffffff0b
    e0a0:	str	r3, [fp, #-200]	; 0xffffff38
    e0a4:	mov	r3, #2
    e0a8:	str	r3, [fp, #-204]	; 0xffffff34
    e0ac:	b	e0ec <rb_sha512_crypt_r+0x152c>
    e0b0:	ldr	r3, [fp, #-200]	; 0xffffff38
    e0b4:	and	r2, r3, #63	; 0x3f
    e0b8:	ldr	r3, [fp, #-12]
    e0bc:	add	r1, r3, #1
    e0c0:	str	r1, [fp, #-12]
    e0c4:	ldr	r1, [pc, #-1232]	; dbfc <rb_sha512_crypt_r+0x103c>
    e0c8:	add	r1, pc, r1
    e0cc:	ldrb	r2, [r1, r2]
    e0d0:	strb	r2, [r3]
    e0d4:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    e0d8:	sub	r3, r3, #1
    e0dc:	str	r3, [fp, #-1084]	; 0xfffffbc4
    e0e0:	ldr	r3, [fp, #-200]	; 0xffffff38
    e0e4:	lsr	r3, r3, #6
    e0e8:	str	r3, [fp, #-200]	; 0xffffff38
    e0ec:	ldr	r3, [fp, #-204]	; 0xffffff34
    e0f0:	sub	r2, r3, #1
    e0f4:	str	r2, [fp, #-204]	; 0xffffff34
    e0f8:	cmp	r3, #0
    e0fc:	ble	e10c <rb_sha512_crypt_r+0x154c>
    e100:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    e104:	cmp	r3, #0
    e108:	bgt	e0b0 <rb_sha512_crypt_r+0x14f0>
    e10c:	ldr	r3, [fp, #-1084]	; 0xfffffbc4
    e110:	cmp	r3, #0
    e114:	bgt	e134 <rb_sha512_crypt_r+0x1574>
    e118:	bl	4d20 <__errno_location@plt>
    e11c:	mov	r2, r0
    e120:	mov	r3, #34	; 0x22
    e124:	str	r3, [r2]
    e128:	mov	r3, #0
    e12c:	str	r3, [fp, #-1080]	; 0xfffffbc8
    e130:	b	e140 <rb_sha512_crypt_r+0x1580>
    e134:	ldr	r3, [fp, #-12]
    e138:	mov	r2, #0
    e13c:	strb	r2, [r3]
    e140:	sub	r3, fp, #716	; 0x2cc
    e144:	mov	r0, r3
    e148:	bl	bc44 <rb_sha512_init_ctx>
    e14c:	sub	r2, fp, #308	; 0x134
    e150:	sub	r3, fp, #716	; 0x2cc
    e154:	mov	r1, r2
    e158:	mov	r0, r3
    e15c:	bl	bd58 <rb_sha512_finish_ctx>
    e160:	sub	r3, fp, #372	; 0x174
    e164:	mov	r2, #64	; 0x40
    e168:	mov	r1, #0
    e16c:	mov	r0, r3
    e170:	bl	4648 <memset@plt>
    e174:	ldr	r2, [fp, #-220]	; 0xffffff24
    e178:	mov	r1, #0
    e17c:	ldr	r0, [fp, #-232]	; 0xffffff18
    e180:	bl	4648 <memset@plt>
    e184:	ldr	r2, [fp, #-216]	; 0xffffff28
    e188:	mov	r1, #0
    e18c:	ldr	r0, [fp, #-236]	; 0xffffff14
    e190:	bl	4648 <memset@plt>
    e194:	sub	r3, fp, #716	; 0x2cc
    e198:	mov	r2, #344	; 0x158
    e19c:	mov	r1, #0
    e1a0:	mov	r0, r3
    e1a4:	bl	4648 <memset@plt>
    e1a8:	sub	r3, fp, #1056	; 0x420
    e1ac:	sub	r3, r3, #4
    e1b0:	mov	r2, #344	; 0x158
    e1b4:	mov	r1, #0
    e1b8:	mov	r0, r3
    e1bc:	bl	4648 <memset@plt>
    e1c0:	ldr	r3, [fp, #-16]
    e1c4:	cmp	r3, #0
    e1c8:	beq	e1dc <rb_sha512_crypt_r+0x161c>
    e1cc:	ldr	r2, [fp, #-220]	; 0xffffff24
    e1d0:	mov	r1, #0
    e1d4:	ldr	r0, [fp, #-16]
    e1d8:	bl	4648 <memset@plt>
    e1dc:	ldr	r3, [fp, #-20]	; 0xffffffec
    e1e0:	cmp	r3, #0
    e1e4:	beq	e1f8 <rb_sha512_crypt_r+0x1638>
    e1e8:	ldr	r2, [fp, #-216]	; 0xffffff28
    e1ec:	mov	r1, #0
    e1f0:	ldr	r0, [fp, #-20]	; 0xffffffec
    e1f4:	bl	4648 <memset@plt>
    e1f8:	ldr	r3, [fp, #-1080]	; 0xfffffbc8
    e1fc:	mov	r0, r3
    e200:	sub	sp, fp, #4
    e204:	ldr	fp, [sp]
    e208:	add	sp, sp, #4
    e20c:	pop	{pc}		; (ldr pc, [sp], #4)

0000e210 <rb_sha512_crypt>:
    e210:	str	fp, [sp, #-8]!
    e214:	str	lr, [sp, #4]
    e218:	add	fp, sp, #4
    e21c:	sub	sp, sp, #16
    e220:	str	r0, [fp, #-16]
    e224:	str	r1, [fp, #-20]	; 0xffffffec
    e228:	ldr	r0, [fp, #-20]	; 0xffffffec
    e22c:	bl	4810 <strlen@plt>
    e230:	mov	r3, r0
    e234:	add	r3, r3, #109	; 0x6d
    e238:	str	r3, [fp, #-8]
    e23c:	ldr	r3, [pc, #160]	; e2e4 <rb_sha512_crypt+0xd4>
    e240:	add	r3, pc, r3
    e244:	ldr	r3, [r3]
    e248:	ldr	r2, [fp, #-8]
    e24c:	cmp	r2, r3
    e250:	ble	e2a8 <rb_sha512_crypt+0x98>
    e254:	ldr	r3, [pc, #140]	; e2e8 <rb_sha512_crypt+0xd8>
    e258:	add	r3, pc, r3
    e25c:	ldr	r3, [r3]
    e260:	ldr	r2, [fp, #-8]
    e264:	mov	r1, r2
    e268:	mov	r0, r3
    e26c:	bl	4c6c <realloc@plt>
    e270:	str	r0, [fp, #-12]
    e274:	ldr	r3, [fp, #-12]
    e278:	cmp	r3, #0
    e27c:	bne	e288 <rb_sha512_crypt+0x78>
    e280:	mov	r3, #0
    e284:	b	e2d0 <rb_sha512_crypt+0xc0>
    e288:	ldr	r3, [pc, #92]	; e2ec <rb_sha512_crypt+0xdc>
    e28c:	add	r3, pc, r3
    e290:	ldr	r2, [fp, #-12]
    e294:	str	r2, [r3]
    e298:	ldr	r3, [pc, #80]	; e2f0 <rb_sha512_crypt+0xe0>
    e29c:	add	r3, pc, r3
    e2a0:	ldr	r2, [fp, #-8]
    e2a4:	str	r2, [r3]
    e2a8:	ldr	r3, [pc, #68]	; e2f4 <rb_sha512_crypt+0xe4>
    e2ac:	add	r3, pc, r3
    e2b0:	ldr	r2, [r3]
    e2b4:	ldr	r3, [pc, #60]	; e2f8 <rb_sha512_crypt+0xe8>
    e2b8:	add	r3, pc, r3
    e2bc:	ldr	r3, [r3]
    e2c0:	ldr	r1, [fp, #-20]	; 0xffffffec
    e2c4:	ldr	r0, [fp, #-16]
    e2c8:	bl	cbc0 <rb_sha512_crypt_r>
    e2cc:	mov	r3, r0
    e2d0:	mov	r0, r3
    e2d4:	sub	sp, fp, #4
    e2d8:	ldr	fp, [sp]
    e2dc:	add	sp, sp, #4
    e2e0:	pop	{pc}		; (ldr pc, [sp], #4)
    e2e4:	.word	0x00039c2c
    e2e8:	.word	0x00039c18
    e2ec:	.word	0x00039be4
    e2f0:	.word	0x00039bd0
    e2f4:	.word	0x00039bc4
    e2f8:	.word	0x00039bb4

0000e2fc <rb_dlinkAdd>:
    e2fc:	push	{fp}		; (str fp, [sp, #-4]!)
    e300:	add	fp, sp, #0
    e304:	sub	sp, sp, #20
    e308:	str	r0, [fp, #-8]
    e30c:	str	r1, [fp, #-12]
    e310:	str	r2, [fp, #-16]
    e314:	ldr	r3, [fp, #-12]
    e318:	ldr	r2, [fp, #-8]
    e31c:	str	r2, [r3]
    e320:	ldr	r3, [fp, #-12]
    e324:	mov	r2, #0
    e328:	str	r2, [r3, #4]
    e32c:	ldr	r3, [fp, #-16]
    e330:	ldr	r2, [r3]
    e334:	ldr	r3, [fp, #-12]
    e338:	str	r2, [r3, #8]
    e33c:	ldr	r3, [fp, #-16]
    e340:	ldr	r3, [r3]
    e344:	cmp	r3, #0
    e348:	beq	e360 <rb_dlinkAdd+0x64>
    e34c:	ldr	r3, [fp, #-16]
    e350:	ldr	r3, [r3]
    e354:	ldr	r2, [fp, #-12]
    e358:	str	r2, [r3, #4]
    e35c:	b	e37c <rb_dlinkAdd+0x80>
    e360:	ldr	r3, [fp, #-16]
    e364:	ldr	r3, [r3, #4]
    e368:	cmp	r3, #0
    e36c:	bne	e37c <rb_dlinkAdd+0x80>
    e370:	ldr	r3, [fp, #-16]
    e374:	ldr	r2, [fp, #-12]
    e378:	str	r2, [r3, #4]
    e37c:	ldr	r3, [fp, #-16]
    e380:	ldr	r2, [fp, #-12]
    e384:	str	r2, [r3]
    e388:	ldr	r3, [fp, #-16]
    e38c:	ldr	r3, [r3, #8]
    e390:	add	r2, r3, #1
    e394:	ldr	r3, [fp, #-16]
    e398:	str	r2, [r3, #8]
    e39c:	nop	{0}
    e3a0:	add	sp, fp, #0
    e3a4:	pop	{fp}		; (ldr fp, [sp], #4)
    e3a8:	bx	lr

0000e3ac <rb_dlinkDelete>:
    e3ac:	push	{fp}		; (str fp, [sp, #-4]!)
    e3b0:	add	fp, sp, #0
    e3b4:	sub	sp, sp, #12
    e3b8:	str	r0, [fp, #-8]
    e3bc:	str	r1, [fp, #-12]
    e3c0:	ldr	r3, [fp, #-8]
    e3c4:	ldr	r3, [r3, #8]
    e3c8:	cmp	r3, #0
    e3cc:	beq	e3e8 <rb_dlinkDelete+0x3c>
    e3d0:	ldr	r3, [fp, #-8]
    e3d4:	ldr	r3, [r3, #8]
    e3d8:	ldr	r2, [fp, #-8]
    e3dc:	ldr	r2, [r2, #4]
    e3e0:	str	r2, [r3, #4]
    e3e4:	b	e3f8 <rb_dlinkDelete+0x4c>
    e3e8:	ldr	r3, [fp, #-8]
    e3ec:	ldr	r2, [r3, #4]
    e3f0:	ldr	r3, [fp, #-12]
    e3f4:	str	r2, [r3, #4]
    e3f8:	ldr	r3, [fp, #-8]
    e3fc:	ldr	r3, [r3, #4]
    e400:	cmp	r3, #0
    e404:	beq	e420 <rb_dlinkDelete+0x74>
    e408:	ldr	r3, [fp, #-8]
    e40c:	ldr	r3, [r3, #4]
    e410:	ldr	r2, [fp, #-8]
    e414:	ldr	r2, [r2, #8]
    e418:	str	r2, [r3, #8]
    e41c:	b	e430 <rb_dlinkDelete+0x84>
    e420:	ldr	r3, [fp, #-8]
    e424:	ldr	r2, [r3, #8]
    e428:	ldr	r3, [fp, #-12]
    e42c:	str	r2, [r3]
    e430:	ldr	r3, [fp, #-8]
    e434:	mov	r2, #0
    e438:	str	r2, [r3, #4]
    e43c:	ldr	r3, [fp, #-8]
    e440:	ldr	r2, [r3, #4]
    e444:	ldr	r3, [fp, #-8]
    e448:	str	r2, [r3, #8]
    e44c:	ldr	r3, [fp, #-12]
    e450:	ldr	r3, [r3, #8]
    e454:	sub	r2, r3, #1
    e458:	ldr	r3, [fp, #-12]
    e45c:	str	r2, [r3, #8]
    e460:	nop	{0}
    e464:	add	sp, fp, #0
    e468:	pop	{fp}		; (ldr fp, [sp], #4)
    e46c:	bx	lr

0000e470 <rb_malloc>:
    e470:	str	fp, [sp, #-8]!
    e474:	str	lr, [sp, #4]
    e478:	add	fp, sp, #4
    e47c:	sub	sp, sp, #16
    e480:	str	r0, [fp, #-16]
    e484:	ldr	r1, [fp, #-16]
    e488:	mov	r0, #1
    e48c:	bl	460c <calloc@plt>
    e490:	mov	r3, r0
    e494:	str	r3, [fp, #-8]
    e498:	ldr	r3, [fp, #-8]
    e49c:	cmp	r3, #0
    e4a0:	moveq	r3, #1
    e4a4:	movne	r3, #0
    e4a8:	uxtb	r3, r3
    e4ac:	cmp	r3, #0
    e4b0:	beq	e4b8 <rb_malloc+0x48>
    e4b4:	bl	49a8 <rb_outofmemory@plt>
    e4b8:	ldr	r3, [fp, #-8]
    e4bc:	mov	r0, r3
    e4c0:	sub	sp, fp, #4
    e4c4:	ldr	fp, [sp]
    e4c8:	add	sp, sp, #4
    e4cc:	pop	{pc}		; (ldr pc, [sp], #4)

0000e4d0 <rb_strdup>:
    e4d0:	str	fp, [sp, #-8]!
    e4d4:	str	lr, [sp, #4]
    e4d8:	add	fp, sp, #4
    e4dc:	sub	sp, sp, #16
    e4e0:	str	r0, [fp, #-16]
    e4e4:	ldr	r0, [fp, #-16]
    e4e8:	bl	4810 <strlen@plt>
    e4ec:	mov	r3, r0
    e4f0:	add	r3, r3, #1
    e4f4:	mov	r0, r3
    e4f8:	bl	49cc <malloc@plt>
    e4fc:	mov	r3, r0
    e500:	str	r3, [fp, #-8]
    e504:	ldr	r3, [fp, #-8]
    e508:	cmp	r3, #0
    e50c:	moveq	r3, #1
    e510:	movne	r3, #0
    e514:	uxtb	r3, r3
    e518:	cmp	r3, #0
    e51c:	beq	e524 <rb_strdup+0x54>
    e520:	bl	49a8 <rb_outofmemory@plt>
    e524:	ldr	r1, [fp, #-16]
    e528:	ldr	r0, [fp, #-8]
    e52c:	bl	48ac <strcpy@plt>
    e530:	ldr	r3, [fp, #-8]
    e534:	mov	r0, r3
    e538:	sub	sp, fp, #4
    e53c:	ldr	fp, [sp]
    e540:	add	sp, sp, #4
    e544:	pop	{pc}		; (ldr pc, [sp], #4)

0000e548 <rb_free>:
    e548:	str	fp, [sp, #-8]!
    e54c:	str	lr, [sp, #4]
    e550:	add	fp, sp, #4
    e554:	sub	sp, sp, #8
    e558:	str	r0, [fp, #-8]
    e55c:	ldr	r3, [fp, #-8]
    e560:	cmp	r3, #0
    e564:	movne	r3, #1
    e568:	moveq	r3, #0
    e56c:	uxtb	r3, r3
    e570:	cmp	r3, #0
    e574:	beq	e580 <rb_free+0x38>
    e578:	ldr	r0, [fp, #-8]
    e57c:	bl	4720 <free@plt>
    e580:	nop	{0}
    e584:	sub	sp, fp, #4
    e588:	ldr	fp, [sp]
    e58c:	add	sp, sp, #4
    e590:	pop	{pc}		; (ldr pc, [sp], #4)

0000e594 <_rb_bh_fail>:
    e594:	str	fp, [sp, #-8]!
    e598:	str	lr, [sp, #4]
    e59c:	add	fp, sp, #4
    e5a0:	sub	sp, sp, #16
    e5a4:	str	r0, [fp, #-8]
    e5a8:	str	r1, [fp, #-12]
    e5ac:	str	r2, [fp, #-16]
    e5b0:	ldr	r3, [fp, #-16]
    e5b4:	ldr	r2, [fp, #-12]
    e5b8:	ldr	r1, [fp, #-8]
    e5bc:	ldr	r0, [pc, #8]	; e5cc <_rb_bh_fail+0x38>
    e5c0:	add	r0, pc, r0
    e5c4:	bl	493c <rb_lib_log@plt>
    e5c8:	bl	43e4 <abort@plt>
    e5cc:	.word	0x00014f68

0000e5d0 <rb_init_bh>:
    e5d0:	str	fp, [sp, #-8]!
    e5d4:	str	lr, [sp, #4]
    e5d8:	add	fp, sp, #4
    e5dc:	mov	r0, #12
    e5e0:	bl	e470 <rb_malloc>
    e5e4:	mov	r2, r0
    e5e8:	ldr	r3, [pc, #40]	; e618 <rb_init_bh+0x48>
    e5ec:	add	r3, pc, r3
    e5f0:	str	r2, [r3]
    e5f4:	ldr	r3, [pc, #32]	; e61c <rb_init_bh+0x4c>
    e5f8:	add	r3, pc, r3
    e5fc:	mov	r2, #4
    e600:	str	r2, [r3]
    e604:	nop	{0}
    e608:	sub	sp, fp, #4
    e60c:	ldr	fp, [sp]
    e610:	add	sp, sp, #4
    e614:	pop	{pc}		; (ldr pc, [sp], #4)
    e618:	.word	0x0003988c
    e61c:	.word	0x0003987c

0000e620 <rb_bh_create>:
    e620:	str	fp, [sp, #-8]!
    e624:	str	lr, [sp, #4]
    e628:	add	fp, sp, #4
    e62c:	sub	sp, sp, #24
    e630:	str	r0, [fp, #-16]
    e634:	str	r1, [fp, #-20]	; 0xffffffec
    e638:	str	r2, [fp, #-24]	; 0xffffffe8
    e63c:	ldr	r3, [fp, #-16]
    e640:	cmp	r3, #0
    e644:	beq	e654 <rb_bh_create+0x34>
    e648:	ldr	r3, [fp, #-20]	; 0xffffffec
    e64c:	cmp	r3, #0
    e650:	bgt	e674 <rb_bh_create+0x54>
    e654:	mov	r2, #147	; 0x93
    e658:	ldr	r3, [pc, #228]	; e744 <rb_bh_create+0x124>
    e65c:	add	r3, pc, r3
    e660:	mov	r1, r3
    e664:	ldr	r3, [pc, #220]	; e748 <rb_bh_create+0x128>
    e668:	add	r3, pc, r3
    e66c:	mov	r0, r3
    e670:	bl	e594 <_rb_bh_fail>
    e674:	ldr	r3, [fp, #-16]
    e678:	cmp	r3, #11
    e67c:	bhi	e6a0 <rb_bh_create+0x80>
    e680:	mov	r2, #151	; 0x97
    e684:	ldr	r3, [pc, #192]	; e74c <rb_bh_create+0x12c>
    e688:	add	r3, pc, r3
    e68c:	mov	r1, r3
    e690:	ldr	r3, [pc, #184]	; e750 <rb_bh_create+0x130>
    e694:	add	r3, pc, r3
    e698:	mov	r0, r3
    e69c:	bl	e594 <_rb_bh_fail>
    e6a0:	mov	r0, #48	; 0x30
    e6a4:	bl	e470 <rb_malloc>
    e6a8:	str	r0, [fp, #-8]
    e6ac:	ldr	r3, [fp, #-8]
    e6b0:	ldr	r2, [fp, #-16]
    e6b4:	str	r2, [r3, #12]
    e6b8:	ldr	r2, [fp, #-20]	; 0xffffffec
    e6bc:	ldr	r3, [fp, #-8]
    e6c0:	str	r2, [r3, #16]
    e6c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    e6c8:	cmp	r3, #0
    e6cc:	beq	e6e4 <rb_bh_create+0xc4>
    e6d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    e6d4:	bl	e4d0 <rb_strdup>
    e6d8:	mov	r2, r0
    e6dc:	ldr	r3, [fp, #-8]
    e6e0:	str	r2, [r3, #44]	; 0x2c
    e6e4:	ldr	r3, [fp, #-8]
    e6e8:	cmp	r3, #0
    e6ec:	bne	e710 <rb_bh_create+0xf0>
    e6f0:	mov	r2, #162	; 0xa2
    e6f4:	ldr	r3, [pc, #88]	; e754 <rb_bh_create+0x134>
    e6f8:	add	r3, pc, r3
    e6fc:	mov	r1, r3
    e700:	ldr	r3, [pc, #80]	; e758 <rb_bh_create+0x138>
    e704:	add	r3, pc, r3
    e708:	mov	r0, r3
    e70c:	bl	e594 <_rb_bh_fail>
    e710:	ldr	r1, [fp, #-8]
    e714:	ldr	r3, [pc, #64]	; e75c <rb_bh_create+0x13c>
    e718:	add	r3, pc, r3
    e71c:	ldr	r3, [r3]
    e720:	mov	r2, r3
    e724:	ldr	r0, [fp, #-8]
    e728:	bl	e2fc <rb_dlinkAdd>
    e72c:	ldr	r3, [fp, #-8]
    e730:	mov	r0, r3
    e734:	sub	sp, fp, #4
    e738:	ldr	fp, [sp]
    e73c:	add	sp, sp, #4
    e740:	pop	{pc}		; (ldr pc, [sp], #4)
    e744:	.word	0x00014ef4
    e748:	.word	0x00014ef4
    e74c:	.word	0x00014ec8
    e750:	.word	0x00014ef4
    e754:	.word	0x00014e58
    e758:	.word	0x00014ec0
    e75c:	.word	0x00039760

0000e760 <rb_bh_alloc>:
    e760:	str	fp, [sp, #-8]!
    e764:	str	lr, [sp, #4]
    e768:	add	fp, sp, #4
    e76c:	sub	sp, sp, #8
    e770:	str	r0, [fp, #-8]
    e774:	ldr	r3, [fp, #-8]
    e778:	cmp	r3, #0
    e77c:	moveq	r3, #1
    e780:	movne	r3, #0
    e784:	uxtb	r3, r3
    e788:	cmp	r3, #0
    e78c:	beq	e7b0 <rb_bh_alloc+0x50>
    e790:	mov	r2, #186	; 0xba
    e794:	ldr	r3, [pc, #60]	; e7d8 <rb_bh_alloc+0x78>
    e798:	add	r3, pc, r3
    e79c:	mov	r1, r3
    e7a0:	ldr	r3, [pc, #52]	; e7dc <rb_bh_alloc+0x7c>
    e7a4:	add	r3, pc, r3
    e7a8:	mov	r0, r3
    e7ac:	bl	e594 <_rb_bh_fail>
    e7b0:	ldr	r3, [fp, #-8]
    e7b4:	ldr	r3, [r3, #12]
    e7b8:	mov	r0, r3
    e7bc:	bl	e470 <rb_malloc>
    e7c0:	mov	r3, r0
    e7c4:	mov	r0, r3
    e7c8:	sub	sp, fp, #4
    e7cc:	ldr	fp, [sp]
    e7d0:	add	sp, sp, #4
    e7d4:	pop	{pc}		; (ldr pc, [sp], #4)
    e7d8:	.word	0x00014db8
    e7dc:	.word	0x00014e40

0000e7e0 <rb_bh_free>:
    e7e0:	str	fp, [sp, #-8]!
    e7e4:	str	lr, [sp, #4]
    e7e8:	add	fp, sp, #4
    e7ec:	sub	sp, sp, #8
    e7f0:	str	r0, [fp, #-8]
    e7f4:	str	r1, [fp, #-12]
    e7f8:	ldr	r3, [fp, #-8]
    e7fc:	cmp	r3, #0
    e800:	moveq	r3, #1
    e804:	movne	r3, #0
    e808:	uxtb	r3, r3
    e80c:	cmp	r3, #0
    e810:	beq	e82c <rb_bh_free+0x4c>
    e814:	ldr	r3, [pc, #100]	; e880 <rb_bh_free+0xa0>
    e818:	add	r3, pc, r3
    e81c:	mov	r0, r3
    e820:	bl	493c <rb_lib_log@plt>
    e824:	mov	r3, #1
    e828:	b	e86c <rb_bh_free+0x8c>
    e82c:	ldr	r3, [fp, #-12]
    e830:	cmp	r3, #0
    e834:	moveq	r3, #1
    e838:	movne	r3, #0
    e83c:	uxtb	r3, r3
    e840:	cmp	r3, #0
    e844:	beq	e860 <rb_bh_free+0x80>
    e848:	ldr	r3, [pc, #52]	; e884 <rb_bh_free+0xa4>
    e84c:	add	r3, pc, r3
    e850:	mov	r0, r3
    e854:	bl	493c <rb_lib_log@plt>
    e858:	mov	r3, #1
    e85c:	b	e86c <rb_bh_free+0x8c>
    e860:	ldr	r0, [fp, #-12]
    e864:	bl	e548 <rb_free>
    e868:	mov	r3, #0
    e86c:	mov	r0, r3
    e870:	sub	sp, fp, #4
    e874:	ldr	fp, [sp]
    e878:	add	sp, sp, #4
    e87c:	pop	{pc}		; (ldr pc, [sp], #4)
    e880:	.word	0x00014dec
    e884:	.word	0x00014dd8

0000e888 <rb_bh_destroy>:
    e888:	str	fp, [sp, #-8]!
    e88c:	str	lr, [sp, #4]
    e890:	add	fp, sp, #4
    e894:	sub	sp, sp, #8
    e898:	str	r0, [fp, #-8]
    e89c:	ldr	r3, [fp, #-8]
    e8a0:	cmp	r3, #0
    e8a4:	bne	e8b0 <rb_bh_destroy+0x28>
    e8a8:	mov	r3, #1
    e8ac:	b	e8e8 <rb_bh_destroy+0x60>
    e8b0:	ldr	r2, [fp, #-8]
    e8b4:	ldr	r3, [pc, #64]	; e8fc <rb_bh_destroy+0x74>
    e8b8:	add	r3, pc, r3
    e8bc:	ldr	r3, [r3]
    e8c0:	mov	r1, r3
    e8c4:	mov	r0, r2
    e8c8:	bl	e3ac <rb_dlinkDelete>
    e8cc:	ldr	r3, [fp, #-8]
    e8d0:	ldr	r3, [r3, #44]	; 0x2c
    e8d4:	mov	r0, r3
    e8d8:	bl	e548 <rb_free>
    e8dc:	ldr	r0, [fp, #-8]
    e8e0:	bl	e548 <rb_free>
    e8e4:	mov	r3, #0
    e8e8:	mov	r0, r3
    e8ec:	sub	sp, fp, #4
    e8f0:	ldr	fp, [sp]
    e8f4:	add	sp, sp, #4
    e8f8:	pop	{pc}		; (ldr pc, [sp], #4)
    e8fc:	.word	0x000395c0

0000e900 <rb_bh_usage>:
    e900:	push	{fp}		; (str fp, [sp, #-4]!)
    e904:	add	fp, sp, #0
    e908:	sub	sp, sp, #20
    e90c:	str	r0, [fp, #-8]
    e910:	str	r1, [fp, #-12]
    e914:	str	r2, [fp, #-16]
    e918:	str	r3, [fp, #-20]	; 0xffffffec
    e91c:	ldr	r3, [fp, #-12]
    e920:	cmp	r3, #0
    e924:	beq	e934 <rb_bh_usage+0x34>
    e928:	ldr	r3, [fp, #-12]
    e92c:	mov	r2, #0
    e930:	str	r2, [r3]
    e934:	ldr	r3, [fp, #-16]
    e938:	cmp	r3, #0
    e93c:	beq	e94c <rb_bh_usage+0x4c>
    e940:	ldr	r3, [fp, #-16]
    e944:	mov	r2, #0
    e948:	str	r2, [r3]
    e94c:	ldr	r3, [fp, #-20]	; 0xffffffec
    e950:	cmp	r3, #0
    e954:	beq	e964 <rb_bh_usage+0x64>
    e958:	ldr	r3, [fp, #-20]	; 0xffffffec
    e95c:	mov	r2, #0
    e960:	str	r2, [r3]
    e964:	ldr	r3, [fp, #4]
    e968:	cmp	r3, #0
    e96c:	beq	e980 <rb_bh_usage+0x80>
    e970:	ldr	r3, [fp, #4]
    e974:	ldr	r2, [pc, #20]	; e990 <rb_bh_usage+0x90>
    e978:	add	r2, pc, r2
    e97c:	str	r2, [r3]
    e980:	nop	{0}
    e984:	add	sp, fp, #0
    e988:	pop	{fp}		; (ldr fp, [sp], #4)
    e98c:	bx	lr
    e990:	.word	0x00014ccc

0000e994 <rb_bh_usage_all>:
    e994:	str	r4, [sp, #-12]!
    e998:	str	fp, [sp, #4]
    e99c:	str	lr, [sp, #8]
    e9a0:	add	fp, sp, #8
    e9a4:	sub	sp, sp, #52	; 0x34
    e9a8:	str	r0, [fp, #-48]	; 0xffffffd0
    e9ac:	str	r1, [fp, #-52]	; 0xffffffcc
    e9b0:	ldr	r3, [pc, #272]	; eac8 <rb_bh_usage_all+0x134>
    e9b4:	add	r3, pc, r3
    e9b8:	ldr	r3, [r3]
    e9bc:	str	r3, [fp, #-20]	; 0xffffffec
    e9c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    e9c4:	cmp	r3, #0
    e9c8:	beq	eab0 <rb_bh_usage_all+0x11c>
    e9cc:	ldr	r3, [pc, #248]	; eacc <rb_bh_usage_all+0x138>
    e9d0:	add	r3, pc, r3
    e9d4:	ldr	r3, [r3]
    e9d8:	ldr	r3, [r3]
    e9dc:	str	r3, [fp, #-16]
    e9e0:	b	ea9c <rb_bh_usage_all+0x108>
    e9e4:	ldr	r3, [fp, #-16]
    e9e8:	ldr	r3, [r3]
    e9ec:	str	r3, [fp, #-24]	; 0xffffffe8
    e9f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    e9f4:	ldr	r3, [r3, #40]	; 0x28
    e9f8:	str	r3, [fp, #-28]	; 0xffffffe4
    e9fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ea00:	ldr	r3, [r3, #28]
    ea04:	ldr	r2, [fp, #-24]	; 0xffffffe8
    ea08:	ldr	r2, [r2, #16]
    ea0c:	mul	r2, r2, r3
    ea10:	ldr	r3, [fp, #-28]	; 0xffffffe4
    ea14:	sub	r3, r2, r3
    ea18:	str	r3, [fp, #-32]	; 0xffffffe0
    ea1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ea20:	ldr	r2, [r3, #12]
    ea24:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ea28:	mul	r3, r2, r3
    ea2c:	str	r3, [fp, #-36]	; 0xffffffdc
    ea30:	ldr	r2, [fp, #-28]	; 0xffffffe4
    ea34:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ea38:	add	r3, r2, r3
    ea3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    ea40:	ldr	r2, [r2, #12]
    ea44:	mul	r3, r2, r3
    ea48:	str	r3, [fp, #-40]	; 0xffffffd8
    ea4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ea50:	ldr	r3, [r3, #44]	; 0x2c
    ea54:	cmp	r3, #0
    ea58:	beq	ea68 <rb_bh_usage_all+0xd4>
    ea5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ea60:	ldr	r3, [r3, #44]	; 0x2c
    ea64:	str	r3, [fp, #-20]	; 0xffffffec
    ea68:	ldr	r3, [fp, #-52]	; 0xffffffcc
    ea6c:	str	r3, [sp, #4]
    ea70:	ldr	r3, [fp, #-20]	; 0xffffffec
    ea74:	str	r3, [sp]
    ea78:	ldr	r4, [fp, #-48]	; 0xffffffd0
    ea7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    ea80:	ldr	r2, [fp, #-36]	; 0xffffffdc
    ea84:	ldr	r1, [fp, #-28]	; 0xffffffe4
    ea88:	ldr	r0, [fp, #-32]	; 0xffffffe0
    ea8c:	blx	r4
    ea90:	ldr	r3, [fp, #-16]
    ea94:	ldr	r3, [r3, #8]
    ea98:	str	r3, [fp, #-16]
    ea9c:	ldr	r3, [fp, #-16]
    eaa0:	cmp	r3, #0
    eaa4:	bne	e9e4 <rb_bh_usage_all+0x50>
    eaa8:	nop	{0}
    eaac:	b	eab4 <rb_bh_usage_all+0x120>
    eab0:	nop	{0}
    eab4:	sub	sp, fp, #8
    eab8:	ldr	r4, [sp]
    eabc:	ldr	fp, [sp, #4]
    eac0:	add	sp, sp, #8
    eac4:	pop	{pc}		; (ldr pc, [sp], #4)
    eac8:	.word	0x00026ab4
    eacc:	.word	0x000394a8

0000ead0 <rb_bh_total_usage>:
    ead0:	push	{fp}		; (str fp, [sp, #-4]!)
    ead4:	add	fp, sp, #0
    ead8:	sub	sp, sp, #36	; 0x24
    eadc:	str	r0, [fp, #-32]	; 0xffffffe0
    eae0:	str	r1, [fp, #-36]	; 0xffffffdc
    eae4:	mov	r3, #0
    eae8:	str	r3, [fp, #-12]
    eaec:	mov	r3, #0
    eaf0:	str	r3, [fp, #-16]
    eaf4:	ldr	r3, [pc, #224]	; ebdc <rb_bh_total_usage+0x10c>
    eaf8:	add	r3, pc, r3
    eafc:	ldr	r3, [r3]
    eb00:	ldr	r3, [r3]
    eb04:	str	r3, [fp, #-8]
    eb08:	b	eb90 <rb_bh_total_usage+0xc0>
    eb0c:	ldr	r3, [fp, #-8]
    eb10:	ldr	r3, [r3]
    eb14:	str	r3, [fp, #-20]	; 0xffffffec
    eb18:	ldr	r3, [fp, #-20]	; 0xffffffec
    eb1c:	ldr	r3, [r3, #40]	; 0x28
    eb20:	str	r3, [fp, #-24]	; 0xffffffe8
    eb24:	ldr	r3, [fp, #-20]	; 0xffffffec
    eb28:	ldr	r3, [r3, #28]
    eb2c:	ldr	r2, [fp, #-20]	; 0xffffffec
    eb30:	ldr	r2, [r2, #16]
    eb34:	mul	r2, r2, r3
    eb38:	ldr	r3, [fp, #-24]	; 0xffffffe8
    eb3c:	sub	r3, r2, r3
    eb40:	str	r3, [fp, #-28]	; 0xffffffe4
    eb44:	ldr	r3, [fp, #-20]	; 0xffffffec
    eb48:	ldr	r3, [r3, #12]
    eb4c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    eb50:	mul	r3, r2, r3
    eb54:	ldr	r2, [fp, #-16]
    eb58:	add	r3, r2, r3
    eb5c:	str	r3, [fp, #-16]
    eb60:	ldr	r2, [fp, #-24]	; 0xffffffe8
    eb64:	ldr	r3, [fp, #-28]	; 0xffffffe4
    eb68:	add	r3, r2, r3
    eb6c:	ldr	r2, [fp, #-20]	; 0xffffffec
    eb70:	ldr	r2, [r2, #12]
    eb74:	mul	r3, r2, r3
    eb78:	ldr	r2, [fp, #-12]
    eb7c:	add	r3, r2, r3
    eb80:	str	r3, [fp, #-12]
    eb84:	ldr	r3, [fp, #-8]
    eb88:	ldr	r3, [r3, #8]
    eb8c:	str	r3, [fp, #-8]
    eb90:	ldr	r3, [fp, #-8]
    eb94:	cmp	r3, #0
    eb98:	bne	eb0c <rb_bh_total_usage+0x3c>
    eb9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    eba0:	cmp	r3, #0
    eba4:	beq	ebb4 <rb_bh_total_usage+0xe4>
    eba8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ebac:	ldr	r2, [fp, #-12]
    ebb0:	str	r2, [r3]
    ebb4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    ebb8:	cmp	r3, #0
    ebbc:	beq	ebcc <rb_bh_total_usage+0xfc>
    ebc0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    ebc4:	ldr	r2, [fp, #-16]
    ebc8:	str	r2, [r3]
    ebcc:	nop	{0}
    ebd0:	add	sp, fp, #0
    ebd4:	pop	{fp}		; (ldr fp, [sp], #4)
    ebd8:	bx	lr
    ebdc:	.word	0x00039380

0000ebe0 <rb_dlinkMoveNode>:
    ebe0:	push	{fp}		; (str fp, [sp, #-4]!)
    ebe4:	add	fp, sp, #0
    ebe8:	sub	sp, sp, #20
    ebec:	str	r0, [fp, #-8]
    ebf0:	str	r1, [fp, #-12]
    ebf4:	str	r2, [fp, #-16]
    ebf8:	ldr	r3, [fp, #-8]
    ebfc:	ldr	r3, [r3, #8]
    ec00:	cmp	r3, #0
    ec04:	beq	ec20 <rb_dlinkMoveNode+0x40>
    ec08:	ldr	r3, [fp, #-8]
    ec0c:	ldr	r3, [r3, #8]
    ec10:	ldr	r2, [fp, #-8]
    ec14:	ldr	r2, [r2, #4]
    ec18:	str	r2, [r3, #4]
    ec1c:	b	ec30 <rb_dlinkMoveNode+0x50>
    ec20:	ldr	r3, [fp, #-8]
    ec24:	ldr	r2, [r3, #4]
    ec28:	ldr	r3, [fp, #-12]
    ec2c:	str	r2, [r3, #4]
    ec30:	ldr	r3, [fp, #-8]
    ec34:	ldr	r3, [r3, #4]
    ec38:	cmp	r3, #0
    ec3c:	beq	ec58 <rb_dlinkMoveNode+0x78>
    ec40:	ldr	r3, [fp, #-8]
    ec44:	ldr	r3, [r3, #4]
    ec48:	ldr	r2, [fp, #-8]
    ec4c:	ldr	r2, [r2, #8]
    ec50:	str	r2, [r3, #8]
    ec54:	b	ec68 <rb_dlinkMoveNode+0x88>
    ec58:	ldr	r3, [fp, #-8]
    ec5c:	ldr	r2, [r3, #8]
    ec60:	ldr	r3, [fp, #-12]
    ec64:	str	r2, [r3]
    ec68:	ldr	r3, [fp, #-8]
    ec6c:	mov	r2, #0
    ec70:	str	r2, [r3, #4]
    ec74:	ldr	r3, [fp, #-16]
    ec78:	ldr	r2, [r3]
    ec7c:	ldr	r3, [fp, #-8]
    ec80:	str	r2, [r3, #8]
    ec84:	ldr	r3, [fp, #-16]
    ec88:	ldr	r3, [r3]
    ec8c:	cmp	r3, #0
    ec90:	beq	eca8 <rb_dlinkMoveNode+0xc8>
    ec94:	ldr	r3, [fp, #-16]
    ec98:	ldr	r3, [r3]
    ec9c:	ldr	r2, [fp, #-8]
    eca0:	str	r2, [r3, #4]
    eca4:	b	ecc4 <rb_dlinkMoveNode+0xe4>
    eca8:	ldr	r3, [fp, #-16]
    ecac:	ldr	r3, [r3, #4]
    ecb0:	cmp	r3, #0
    ecb4:	bne	ecc4 <rb_dlinkMoveNode+0xe4>
    ecb8:	ldr	r3, [fp, #-16]
    ecbc:	ldr	r2, [fp, #-8]
    ecc0:	str	r2, [r3, #4]
    ecc4:	ldr	r3, [fp, #-16]
    ecc8:	ldr	r2, [fp, #-8]
    eccc:	str	r2, [r3]
    ecd0:	ldr	r3, [fp, #-12]
    ecd4:	ldr	r3, [r3, #8]
    ecd8:	sub	r2, r3, #1
    ecdc:	ldr	r3, [fp, #-12]
    ece0:	str	r2, [r3, #8]
    ece4:	ldr	r3, [fp, #-16]
    ece8:	ldr	r3, [r3, #8]
    ecec:	add	r2, r3, #1
    ecf0:	ldr	r3, [fp, #-16]
    ecf4:	str	r2, [r3, #8]
    ecf8:	nop	{0}
    ecfc:	add	sp, fp, #0
    ed00:	pop	{fp}		; (ldr fp, [sp], #4)
    ed04:	bx	lr

0000ed08 <rb_dlinkAdd>:
    ed08:	push	{fp}		; (str fp, [sp, #-4]!)
    ed0c:	add	fp, sp, #0
    ed10:	sub	sp, sp, #20
    ed14:	str	r0, [fp, #-8]
    ed18:	str	r1, [fp, #-12]
    ed1c:	str	r2, [fp, #-16]
    ed20:	ldr	r3, [fp, #-12]
    ed24:	ldr	r2, [fp, #-8]
    ed28:	str	r2, [r3]
    ed2c:	ldr	r3, [fp, #-12]
    ed30:	mov	r2, #0
    ed34:	str	r2, [r3, #4]
    ed38:	ldr	r3, [fp, #-16]
    ed3c:	ldr	r2, [r3]
    ed40:	ldr	r3, [fp, #-12]
    ed44:	str	r2, [r3, #8]
    ed48:	ldr	r3, [fp, #-16]
    ed4c:	ldr	r3, [r3]
    ed50:	cmp	r3, #0
    ed54:	beq	ed6c <rb_dlinkAdd+0x64>
    ed58:	ldr	r3, [fp, #-16]
    ed5c:	ldr	r3, [r3]
    ed60:	ldr	r2, [fp, #-12]
    ed64:	str	r2, [r3, #4]
    ed68:	b	ed88 <rb_dlinkAdd+0x80>
    ed6c:	ldr	r3, [fp, #-16]
    ed70:	ldr	r3, [r3, #4]
    ed74:	cmp	r3, #0
    ed78:	bne	ed88 <rb_dlinkAdd+0x80>
    ed7c:	ldr	r3, [fp, #-16]
    ed80:	ldr	r2, [fp, #-12]
    ed84:	str	r2, [r3, #4]
    ed88:	ldr	r3, [fp, #-16]
    ed8c:	ldr	r2, [fp, #-12]
    ed90:	str	r2, [r3]
    ed94:	ldr	r3, [fp, #-16]
    ed98:	ldr	r3, [r3, #8]
    ed9c:	add	r2, r3, #1
    eda0:	ldr	r3, [fp, #-16]
    eda4:	str	r2, [r3, #8]
    eda8:	nop	{0}
    edac:	add	sp, fp, #0
    edb0:	pop	{fp}		; (ldr fp, [sp], #4)
    edb4:	bx	lr

0000edb8 <rb_dlinkDelete>:
    edb8:	push	{fp}		; (str fp, [sp, #-4]!)
    edbc:	add	fp, sp, #0
    edc0:	sub	sp, sp, #12
    edc4:	str	r0, [fp, #-8]
    edc8:	str	r1, [fp, #-12]
    edcc:	ldr	r3, [fp, #-8]
    edd0:	ldr	r3, [r3, #8]
    edd4:	cmp	r3, #0
    edd8:	beq	edf4 <rb_dlinkDelete+0x3c>
    eddc:	ldr	r3, [fp, #-8]
    ede0:	ldr	r3, [r3, #8]
    ede4:	ldr	r2, [fp, #-8]
    ede8:	ldr	r2, [r2, #4]
    edec:	str	r2, [r3, #4]
    edf0:	b	ee04 <rb_dlinkDelete+0x4c>
    edf4:	ldr	r3, [fp, #-8]
    edf8:	ldr	r2, [r3, #4]
    edfc:	ldr	r3, [fp, #-12]
    ee00:	str	r2, [r3, #4]
    ee04:	ldr	r3, [fp, #-8]
    ee08:	ldr	r3, [r3, #4]
    ee0c:	cmp	r3, #0
    ee10:	beq	ee2c <rb_dlinkDelete+0x74>
    ee14:	ldr	r3, [fp, #-8]
    ee18:	ldr	r3, [r3, #4]
    ee1c:	ldr	r2, [fp, #-8]
    ee20:	ldr	r2, [r2, #8]
    ee24:	str	r2, [r3, #8]
    ee28:	b	ee3c <rb_dlinkDelete+0x84>
    ee2c:	ldr	r3, [fp, #-8]
    ee30:	ldr	r2, [r3, #8]
    ee34:	ldr	r3, [fp, #-12]
    ee38:	str	r2, [r3]
    ee3c:	ldr	r3, [fp, #-8]
    ee40:	mov	r2, #0
    ee44:	str	r2, [r3, #4]
    ee48:	ldr	r3, [fp, #-8]
    ee4c:	ldr	r2, [r3, #4]
    ee50:	ldr	r3, [fp, #-8]
    ee54:	str	r2, [r3, #8]
    ee58:	ldr	r3, [fp, #-12]
    ee5c:	ldr	r3, [r3, #8]
    ee60:	sub	r2, r3, #1
    ee64:	ldr	r3, [fp, #-12]
    ee68:	str	r2, [r3, #8]
    ee6c:	nop	{0}
    ee70:	add	sp, fp, #0
    ee74:	pop	{fp}		; (ldr fp, [sp], #4)
    ee78:	bx	lr

0000ee7c <rb_malloc>:
    ee7c:	str	fp, [sp, #-8]!
    ee80:	str	lr, [sp, #4]
    ee84:	add	fp, sp, #4
    ee88:	sub	sp, sp, #16
    ee8c:	str	r0, [fp, #-16]
    ee90:	ldr	r1, [fp, #-16]
    ee94:	mov	r0, #1
    ee98:	bl	460c <calloc@plt>
    ee9c:	mov	r3, r0
    eea0:	str	r3, [fp, #-8]
    eea4:	ldr	r3, [fp, #-8]
    eea8:	cmp	r3, #0
    eeac:	moveq	r3, #1
    eeb0:	movne	r3, #0
    eeb4:	uxtb	r3, r3
    eeb8:	cmp	r3, #0
    eebc:	beq	eec4 <rb_malloc+0x48>
    eec0:	bl	49a8 <rb_outofmemory@plt>
    eec4:	ldr	r3, [fp, #-8]
    eec8:	mov	r0, r3
    eecc:	sub	sp, fp, #4
    eed0:	ldr	fp, [sp]
    eed4:	add	sp, sp, #4
    eed8:	pop	{pc}		; (ldr pc, [sp], #4)

0000eedc <rb_strndup>:
    eedc:	str	fp, [sp, #-8]!
    eee0:	str	lr, [sp, #4]
    eee4:	add	fp, sp, #4
    eee8:	sub	sp, sp, #16
    eeec:	str	r0, [fp, #-16]
    eef0:	str	r1, [fp, #-20]	; 0xffffffec
    eef4:	ldr	r0, [fp, #-20]	; 0xffffffec
    eef8:	bl	49cc <malloc@plt>
    eefc:	mov	r3, r0
    ef00:	str	r3, [fp, #-8]
    ef04:	ldr	r3, [fp, #-8]
    ef08:	cmp	r3, #0
    ef0c:	moveq	r3, #1
    ef10:	movne	r3, #0
    ef14:	uxtb	r3, r3
    ef18:	cmp	r3, #0
    ef1c:	beq	ef24 <rb_strndup+0x48>
    ef20:	bl	49a8 <rb_outofmemory@plt>
    ef24:	ldr	r2, [fp, #-20]	; 0xffffffec
    ef28:	ldr	r1, [fp, #-16]
    ef2c:	ldr	r0, [fp, #-8]
    ef30:	bl	46c0 <rb_strlcpy@plt>
    ef34:	ldr	r3, [fp, #-8]
    ef38:	mov	r0, r3
    ef3c:	sub	sp, fp, #4
    ef40:	ldr	fp, [sp]
    ef44:	add	sp, sp, #4
    ef48:	pop	{pc}		; (ldr pc, [sp], #4)

0000ef4c <rb_free>:
    ef4c:	str	fp, [sp, #-8]!
    ef50:	str	lr, [sp, #4]
    ef54:	add	fp, sp, #4
    ef58:	sub	sp, sp, #8
    ef5c:	str	r0, [fp, #-8]
    ef60:	ldr	r3, [fp, #-8]
    ef64:	cmp	r3, #0
    ef68:	movne	r3, #1
    ef6c:	moveq	r3, #0
    ef70:	uxtb	r3, r3
    ef74:	cmp	r3, #0
    ef78:	beq	ef84 <rb_free+0x38>
    ef7c:	ldr	r0, [fp, #-8]
    ef80:	bl	4720 <free@plt>
    ef84:	nop	{0}
    ef88:	sub	sp, fp, #4
    ef8c:	ldr	fp, [sp]
    ef90:	add	sp, sp, #4
    ef94:	pop	{pc}		; (ldr pc, [sp], #4)

0000ef98 <rb_find_fd>:
    ef98:	push	{fp}		; (str fp, [sp, #-4]!)
    ef9c:	add	fp, sp, #0
    efa0:	sub	sp, sp, #28
    efa4:	str	r0, [fp, #-24]	; 0xffffffe8
    efa8:	ldr	r2, [pc, #220]	; f08c <rb_find_fd+0xf4>
    efac:	add	r2, pc, r2
    efb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    efb4:	lsr	r3, r3, #31
    efb8:	uxtb	r3, r3
    efbc:	cmp	r3, #0
    efc0:	beq	efcc <rb_find_fd+0x34>
    efc4:	mov	r3, #0
    efc8:	b	f07c <rb_find_fd+0xe4>
    efcc:	ldr	r3, [pc, #188]	; f090 <rb_find_fd+0xf8>
    efd0:	ldr	r3, [r2, r3]
    efd4:	ldr	r1, [r3]
    efd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    efdc:	asr	r2, r3, #12
    efe0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    efe4:	eor	r2, r2, r3
    efe8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    efec:	asr	r3, r3, #24
    eff0:	eor	r3, r3, r2
    eff4:	ubfx	r2, r3, #0, #12
    eff8:	mov	r3, r2
    effc:	lsl	r3, r3, #1
    f000:	add	r3, r3, r2
    f004:	lsl	r3, r3, #2
    f008:	add	r3, r1, r3
    f00c:	str	r3, [fp, #-12]
    f010:	ldr	r3, [fp, #-12]
    f014:	ldr	r3, [r3]
    f018:	cmp	r3, #0
    f01c:	bne	f028 <rb_find_fd+0x90>
    f020:	mov	r3, #0
    f024:	b	f07c <rb_find_fd+0xe4>
    f028:	ldr	r3, [fp, #-12]
    f02c:	ldr	r3, [r3]
    f030:	str	r3, [fp, #-8]
    f034:	b	f06c <rb_find_fd+0xd4>
    f038:	ldr	r3, [fp, #-8]
    f03c:	ldr	r3, [r3]
    f040:	str	r3, [fp, #-16]
    f044:	ldr	r3, [fp, #-16]
    f048:	ldr	r3, [r3, #12]
    f04c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    f050:	cmp	r2, r3
    f054:	bne	f060 <rb_find_fd+0xc8>
    f058:	ldr	r3, [fp, #-16]
    f05c:	b	f07c <rb_find_fd+0xe4>
    f060:	ldr	r3, [fp, #-8]
    f064:	ldr	r3, [r3, #8]
    f068:	str	r3, [fp, #-8]
    f06c:	ldr	r3, [fp, #-8]
    f070:	cmp	r3, #0
    f074:	bne	f038 <rb_find_fd+0xa0>
    f078:	mov	r3, #0
    f07c:	mov	r0, r3
    f080:	add	sp, fp, #0
    f084:	pop	{fp}		; (ldr fp, [sp], #4)
    f088:	bx	lr
    f08c:	.word	0x0002604c
    f090:	.word	0x000003c4

0000f094 <add_fd>:
    f094:	str	r4, [sp, #-12]!
    f098:	str	fp, [sp, #4]
    f09c:	str	lr, [sp, #8]
    f0a0:	add	fp, sp, #8
    f0a4:	sub	sp, sp, #20
    f0a8:	str	r0, [fp, #-24]	; 0xffffffe8
    f0ac:	ldr	r4, [pc, #180]	; f168 <add_fd+0xd4>
    f0b0:	add	r4, pc, r4
    f0b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    f0b8:	bl	ef98 <rb_find_fd>
    f0bc:	str	r0, [fp, #-16]
    f0c0:	ldr	r3, [fp, #-16]
    f0c4:	cmp	r3, #0
    f0c8:	beq	f0d4 <add_fd+0x40>
    f0cc:	ldr	r3, [fp, #-16]
    f0d0:	b	f150 <add_fd+0xbc>
    f0d4:	ldr	r3, [pc, #144]	; f16c <add_fd+0xd8>
    f0d8:	add	r3, pc, r3
    f0dc:	ldr	r3, [r3]
    f0e0:	mov	r0, r3
    f0e4:	bl	4978 <rb_bh_alloc@plt>
    f0e8:	str	r0, [fp, #-16]
    f0ec:	ldr	r3, [fp, #-16]
    f0f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    f0f4:	str	r2, [r3, #12]
    f0f8:	ldr	r0, [fp, #-16]
    f0fc:	ldr	r3, [pc, #108]	; f170 <add_fd+0xdc>
    f100:	ldr	r3, [r4, r3]
    f104:	ldr	r1, [r3]
    f108:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f10c:	asr	r2, r3, #12
    f110:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f114:	eor	r2, r2, r3
    f118:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f11c:	asr	r3, r3, #24
    f120:	eor	r3, r3, r2
    f124:	ubfx	r2, r3, #0, #12
    f128:	mov	r3, r2
    f12c:	lsl	r3, r3, #1
    f130:	add	r3, r3, r2
    f134:	lsl	r3, r3, #2
    f138:	add	r3, r1, r3
    f13c:	mov	r2, r3
    f140:	mov	r1, r0
    f144:	ldr	r0, [fp, #-16]
    f148:	bl	ed08 <rb_dlinkAdd>
    f14c:	ldr	r3, [fp, #-16]
    f150:	mov	r0, r3
    f154:	sub	sp, fp, #8
    f158:	ldr	r4, [sp]
    f15c:	ldr	fp, [sp, #4]
    f160:	add	sp, sp, #8
    f164:	pop	{pc}		; (ldr pc, [sp], #4)
    f168:	.word	0x00025f48
    f16c:	.word	0x00038da8
    f170:	.word	0x000003c4

0000f174 <remove_fd>:
    f174:	str	fp, [sp, #-8]!
    f178:	str	lr, [sp, #4]
    f17c:	add	fp, sp, #4
    f180:	sub	sp, sp, #8
    f184:	str	r0, [fp, #-8]
    f188:	ldr	r2, [pc, #152]	; f228 <remove_fd+0xb4>
    f18c:	add	r2, pc, r2
    f190:	ldr	r3, [fp, #-8]
    f194:	cmp	r3, #0
    f198:	beq	f214 <remove_fd+0xa0>
    f19c:	ldr	r3, [fp, #-8]
    f1a0:	ldrb	r3, [r3, #16]
    f1a4:	and	r3, r3, #1
    f1a8:	cmp	r3, #0
    f1ac:	beq	f214 <remove_fd+0xa0>
    f1b0:	ldr	r0, [fp, #-8]
    f1b4:	ldr	r3, [pc, #112]	; f22c <remove_fd+0xb8>
    f1b8:	ldr	r3, [r2, r3]
    f1bc:	ldr	r1, [r3]
    f1c0:	ldr	r3, [fp, #-8]
    f1c4:	ldr	r2, [r3, #12]
    f1c8:	ldr	r3, [fp, #-8]
    f1cc:	ldr	r3, [r3, #12]
    f1d0:	asr	r3, r3, #12
    f1d4:	eor	r2, r2, r3
    f1d8:	ldr	r3, [fp, #-8]
    f1dc:	ldr	r3, [r3, #12]
    f1e0:	asr	r3, r3, #24
    f1e4:	eor	r3, r3, r2
    f1e8:	ubfx	r2, r3, #0, #12
    f1ec:	mov	r3, r2
    f1f0:	lsl	r3, r3, #1
    f1f4:	add	r3, r3, r2
    f1f8:	lsl	r3, r3, #2
    f1fc:	add	r3, r1, r3
    f200:	ldr	r2, [pc, #40]	; f230 <remove_fd+0xbc>
    f204:	add	r2, pc, r2
    f208:	mov	r1, r3
    f20c:	bl	ebe0 <rb_dlinkMoveNode>
    f210:	b	f218 <remove_fd+0xa4>
    f214:	nop	{0}
    f218:	sub	sp, fp, #4
    f21c:	ldr	fp, [sp]
    f220:	add	sp, sp, #4
    f224:	pop	{pc}		; (ldr pc, [sp], #4)
    f228:	.word	0x00025e6c
    f22c:	.word	0x000003c4
    f230:	.word	0x00038c8c

0000f234 <free_fds>:
    f234:	str	fp, [sp, #-8]!
    f238:	str	lr, [sp, #4]
    f23c:	add	fp, sp, #4
    f240:	sub	sp, sp, #16
    f244:	ldr	r3, [pc, #216]	; f324 <free_fds+0xf0>
    f248:	add	r3, pc, r3
    f24c:	ldr	r3, [r3]
    f250:	str	r3, [fp, #-8]
    f254:	ldr	r3, [fp, #-8]
    f258:	cmp	r3, #0
    f25c:	beq	f26c <free_fds+0x38>
    f260:	ldr	r3, [fp, #-8]
    f264:	ldr	r3, [r3, #8]
    f268:	b	f270 <free_fds+0x3c>
    f26c:	mov	r3, #0
    f270:	str	r3, [fp, #-12]
    f274:	b	f304 <free_fds+0xd0>
    f278:	ldr	r3, [fp, #-8]
    f27c:	ldr	r3, [r3]
    f280:	str	r3, [fp, #-16]
    f284:	ldr	r3, [pc, #156]	; f328 <free_fds+0xf4>
    f288:	add	r3, pc, r3
    f28c:	ldr	r3, [r3]
    f290:	sub	r2, r3, #1
    f294:	ldr	r3, [pc, #144]	; f32c <free_fds+0xf8>
    f298:	add	r3, pc, r3
    f29c:	str	r2, [r3]
    f2a0:	ldr	r3, [fp, #-16]
    f2a4:	ldr	r3, [r3, #12]
    f2a8:	mov	r0, r3
    f2ac:	bl	4960 <close@plt>
    f2b0:	ldr	r3, [pc, #120]	; f330 <free_fds+0xfc>
    f2b4:	add	r3, pc, r3
    f2b8:	mov	r1, r3
    f2bc:	ldr	r0, [fp, #-8]
    f2c0:	bl	edb8 <rb_dlinkDelete>
    f2c4:	ldr	r3, [pc, #104]	; f334 <free_fds+0x100>
    f2c8:	add	r3, pc, r3
    f2cc:	ldr	r3, [r3]
    f2d0:	ldr	r1, [fp, #-16]
    f2d4:	mov	r0, r3
    f2d8:	bl	48f4 <rb_bh_free@plt>
    f2dc:	ldr	r3, [fp, #-12]
    f2e0:	str	r3, [fp, #-8]
    f2e4:	ldr	r3, [fp, #-8]
    f2e8:	cmp	r3, #0
    f2ec:	beq	f2fc <free_fds+0xc8>
    f2f0:	ldr	r3, [fp, #-8]
    f2f4:	ldr	r3, [r3, #8]
    f2f8:	b	f300 <free_fds+0xcc>
    f2fc:	mov	r3, #0
    f300:	str	r3, [fp, #-12]
    f304:	ldr	r3, [fp, #-8]
    f308:	cmp	r3, #0
    f30c:	bne	f278 <free_fds+0x44>
    f310:	nop	{0}
    f314:	sub	sp, fp, #4
    f318:	ldr	fp, [sp]
    f31c:	add	sp, sp, #4
    f320:	pop	{pc}		; (ldr pc, [sp], #4)
    f324:	.word	0x00038c48
    f328:	.word	0x00038c18
    f32c:	.word	0x00038c08
    f330:	.word	0x00038bdc
    f334:	.word	0x00038bb8

0000f338 <rb_close_all>:
    f338:	str	r4, [sp, #-12]!
    f33c:	str	fp, [sp, #4]
    f340:	str	lr, [sp, #8]
    f344:	add	fp, sp, #8
    f348:	sub	sp, sp, #12
    f34c:	ldr	r4, [pc, #80]	; f3a4 <rb_close_all+0x6c>
    f350:	add	r4, pc, r4
    f354:	mov	r3, #3
    f358:	str	r3, [fp, #-16]
    f35c:	b	f374 <rb_close_all+0x3c>
    f360:	ldr	r0, [fp, #-16]
    f364:	bl	4960 <close@plt>
    f368:	ldr	r3, [fp, #-16]
    f36c:	add	r3, r3, #1
    f370:	str	r3, [fp, #-16]
    f374:	ldr	r3, [pc, #44]	; f3a8 <rb_close_all+0x70>
    f378:	ldr	r3, [r4, r3]
    f37c:	ldr	r3, [r3]
    f380:	ldr	r2, [fp, #-16]
    f384:	cmp	r2, r3
    f388:	blt	f360 <rb_close_all+0x28>
    f38c:	nop	{0}
    f390:	sub	sp, fp, #8
    f394:	ldr	r4, [sp]
    f398:	ldr	fp, [sp, #4]
    f39c:	add	sp, sp, #8
    f3a0:	pop	{pc}		; (ldr pc, [sp], #4)
    f3a4:	.word	0x00025ca8
    f3a8:	.word	0x000003a4

0000f3ac <rb_get_sockerr>:
    f3ac:	str	fp, [sp, #-8]!
    f3b0:	str	lr, [sp, #4]
    f3b4:	add	fp, sp, #4
    f3b8:	sub	sp, sp, #32
    f3bc:	str	r0, [fp, #-24]	; 0xffffffe8
    f3c0:	mov	r3, #0
    f3c4:	str	r3, [fp, #-12]
    f3c8:	mov	r3, #4
    f3cc:	str	r3, [fp, #-16]
    f3d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f3d4:	ldrb	r3, [r3, #17]
    f3d8:	and	r3, r3, #4
    f3dc:	cmp	r3, #0
    f3e0:	bne	f3f4 <rb_get_sockerr+0x48>
    f3e4:	bl	4d20 <__errno_location@plt>
    f3e8:	mov	r3, r0
    f3ec:	ldr	r3, [r3]
    f3f0:	b	f468 <rb_get_sockerr+0xbc>
    f3f4:	bl	4d20 <__errno_location@plt>
    f3f8:	mov	r3, r0
    f3fc:	ldr	r3, [r3]
    f400:	str	r3, [fp, #-8]
    f404:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f408:	cmp	r3, #0
    f40c:	beq	f454 <rb_get_sockerr+0xa8>
    f410:	ldr	r0, [fp, #-24]	; 0xffffffe8
    f414:	bl	4504 <rb_get_fd@plt>
    f418:	sub	r2, fp, #12
    f41c:	sub	r3, fp, #16
    f420:	str	r3, [sp]
    f424:	mov	r3, r2
    f428:	mov	r2, #4
    f42c:	mov	r1, #1
    f430:	bl	4ca8 <getsockopt@plt>
    f434:	mov	r3, r0
    f438:	cmp	r3, #0
    f43c:	bne	f454 <rb_get_sockerr+0xa8>
    f440:	ldr	r3, [fp, #-12]
    f444:	cmp	r3, #0
    f448:	beq	f454 <rb_get_sockerr+0xa8>
    f44c:	ldr	r3, [fp, #-12]
    f450:	str	r3, [fp, #-8]
    f454:	bl	4d20 <__errno_location@plt>
    f458:	mov	r2, r0
    f45c:	ldr	r3, [fp, #-8]
    f460:	str	r3, [r2]
    f464:	ldr	r3, [fp, #-8]
    f468:	mov	r0, r3
    f46c:	sub	sp, fp, #4
    f470:	ldr	fp, [sp]
    f474:	add	sp, sp, #4
    f478:	pop	{pc}		; (ldr pc, [sp], #4)

0000f47c <rb_getmaxconnect>:
    f47c:	push	{fp}		; (str fp, [sp, #-4]!)
    f480:	add	fp, sp, #0
    f484:	ldr	r2, [pc, #28]	; f4a8 <rb_getmaxconnect+0x2c>
    f488:	add	r2, pc, r2
    f48c:	ldr	r3, [pc, #24]	; f4ac <rb_getmaxconnect+0x30>
    f490:	ldr	r3, [r2, r3]
    f494:	ldr	r3, [r3]
    f498:	mov	r0, r3
    f49c:	add	sp, fp, #0
    f4a0:	pop	{fp}		; (ldr fp, [sp], #4)
    f4a4:	bx	lr
    f4a8:	.word	0x00025b70
    f4ac:	.word	0x000003a4

0000f4b0 <rb_set_buffers>:
    f4b0:	str	fp, [sp, #-8]!
    f4b4:	str	lr, [sp, #4]
    f4b8:	add	fp, sp, #4
    f4bc:	sub	sp, sp, #16
    f4c0:	str	r0, [fp, #-8]
    f4c4:	str	r1, [fp, #-12]
    f4c8:	ldr	r3, [fp, #-8]
    f4cc:	cmp	r3, #0
    f4d0:	bne	f4dc <rb_set_buffers+0x2c>
    f4d4:	mov	r3, #0
    f4d8:	b	f548 <rb_set_buffers+0x98>
    f4dc:	ldr	r3, [fp, #-8]
    f4e0:	ldr	r0, [r3, #12]
    f4e4:	sub	r2, fp, #12
    f4e8:	mov	r3, #4
    f4ec:	str	r3, [sp]
    f4f0:	mov	r3, r2
    f4f4:	mov	r2, #8
    f4f8:	mov	r1, #1
    f4fc:	bl	4ccc <setsockopt@plt>
    f500:	mov	r3, r0
    f504:	cmp	r3, #0
    f508:	bne	f53c <rb_set_buffers+0x8c>
    f50c:	ldr	r3, [fp, #-8]
    f510:	ldr	r0, [r3, #12]
    f514:	sub	r2, fp, #12
    f518:	mov	r3, #4
    f51c:	str	r3, [sp]
    f520:	mov	r3, r2
    f524:	mov	r2, #7
    f528:	mov	r1, #1
    f52c:	bl	4ccc <setsockopt@plt>
    f530:	mov	r3, r0
    f534:	cmp	r3, #0
    f538:	beq	f544 <rb_set_buffers+0x94>
    f53c:	mov	r3, #0
    f540:	b	f548 <rb_set_buffers+0x98>
    f544:	mov	r3, #1
    f548:	mov	r0, r3
    f54c:	sub	sp, fp, #4
    f550:	ldr	fp, [sp]
    f554:	add	sp, sp, #4
    f558:	pop	{pc}		; (ldr pc, [sp], #4)

0000f55c <rb_set_nb>:
    f55c:	str	fp, [sp, #-8]!
    f560:	str	lr, [sp, #4]
    f564:	add	fp, sp, #4
    f568:	sub	sp, sp, #24
    f56c:	str	r0, [fp, #-24]	; 0xffffffe8
    f570:	mov	r3, #0
    f574:	str	r3, [fp, #-8]
    f578:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f57c:	cmp	r3, #0
    f580:	bne	f58c <rb_set_nb+0x30>
    f584:	mov	r3, #0
    f588:	b	f618 <rb_set_nb+0xbc>
    f58c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f590:	ldr	r3, [r3, #12]
    f594:	str	r3, [fp, #-12]
    f598:	ldr	r0, [fp, #-24]	; 0xffffffe8
    f59c:	bl	4b58 <rb_setup_fd@plt>
    f5a0:	str	r0, [fp, #-16]
    f5a4:	ldr	r3, [fp, #-16]
    f5a8:	cmp	r3, #0
    f5ac:	beq	f5b8 <rb_set_nb+0x5c>
    f5b0:	ldr	r3, [fp, #-16]
    f5b4:	b	f618 <rb_set_nb+0xbc>
    f5b8:	ldr	r3, [fp, #-8]
    f5bc:	orr	r3, r3, #2048	; 0x800
    f5c0:	str	r3, [fp, #-8]
    f5c4:	mov	r2, #0
    f5c8:	mov	r1, #3
    f5cc:	ldr	r0, [fp, #-12]
    f5d0:	bl	4c30 <fcntl@plt>
    f5d4:	str	r0, [fp, #-16]
    f5d8:	ldr	r3, [fp, #-16]
    f5dc:	cmn	r3, #1
    f5e0:	beq	f60c <rb_set_nb+0xb0>
    f5e4:	ldr	r2, [fp, #-16]
    f5e8:	ldr	r3, [fp, #-8]
    f5ec:	orr	r3, r2, r3
    f5f0:	mov	r2, r3
    f5f4:	mov	r1, #4
    f5f8:	ldr	r0, [fp, #-12]
    f5fc:	bl	4c30 <fcntl@plt>
    f600:	mov	r3, r0
    f604:	cmn	r3, #1
    f608:	bne	f614 <rb_set_nb+0xb8>
    f60c:	mov	r3, #0
    f610:	b	f618 <rb_set_nb+0xbc>
    f614:	mov	r3, #1
    f618:	mov	r0, r3
    f61c:	sub	sp, fp, #4
    f620:	ldr	fp, [sp]
    f624:	add	sp, sp, #4
    f628:	pop	{pc}		; (ldr pc, [sp], #4)

0000f62c <rb_settimeout>:
    f62c:	str	r4, [sp, #-12]!
    f630:	str	fp, [sp, #4]
    f634:	str	lr, [sp, #8]
    f638:	add	fp, sp, #8
    f63c:	sub	sp, sp, #28
    f640:	str	r0, [fp, #-24]	; 0xffffffe8
    f644:	str	r1, [fp, #-28]	; 0xffffffe4
    f648:	str	r2, [fp, #-32]	; 0xffffffe0
    f64c:	str	r3, [fp, #-36]	; 0xffffffdc
    f650:	ldr	r4, [pc, #400]	; f7e8 <rb_settimeout+0x1bc>
    f654:	add	r4, pc, r4
    f658:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f65c:	cmp	r3, #0
    f660:	beq	f7c0 <rb_settimeout+0x194>
    f664:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f668:	ldr	r3, [r3, #44]	; 0x2c
    f66c:	str	r3, [fp, #-16]
    f670:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f674:	cmp	r3, #0
    f678:	bne	f6f4 <rb_settimeout+0xc8>
    f67c:	ldr	r3, [fp, #-16]
    f680:	cmp	r3, #0
    f684:	beq	f7c8 <rb_settimeout+0x19c>
    f688:	ldr	r3, [fp, #-16]
    f68c:	add	r3, r3, #4
    f690:	ldr	r2, [pc, #340]	; f7ec <rb_settimeout+0x1c0>
    f694:	add	r2, pc, r2
    f698:	mov	r1, r2
    f69c:	mov	r0, r3
    f6a0:	bl	edb8 <rb_dlinkDelete>
    f6a4:	ldr	r0, [fp, #-16]
    f6a8:	bl	ef4c <rb_free>
    f6ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f6b0:	mov	r2, #0
    f6b4:	str	r2, [r3, #44]	; 0x2c
    f6b8:	ldr	r3, [pc, #304]	; f7f0 <rb_settimeout+0x1c4>
    f6bc:	add	r3, pc, r3
    f6c0:	ldr	r3, [r3, #8]
    f6c4:	cmp	r3, #0
    f6c8:	bne	f7d0 <rb_settimeout+0x1a4>
    f6cc:	ldr	r3, [pc, #288]	; f7f4 <rb_settimeout+0x1c8>
    f6d0:	add	r3, pc, r3
    f6d4:	ldr	r3, [r3]
    f6d8:	mov	r0, r3
    f6dc:	bl	44bc <rb_event_delete@plt>
    f6e0:	ldr	r3, [pc, #272]	; f7f8 <rb_settimeout+0x1cc>
    f6e4:	add	r3, pc, r3
    f6e8:	mov	r2, #0
    f6ec:	str	r2, [r3]
    f6f0:	b	f7d0 <rb_settimeout+0x1a4>
    f6f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f6f8:	ldr	r3, [r3, #44]	; 0x2c
    f6fc:	cmp	r3, #0
    f700:	bne	f724 <rb_settimeout+0xf8>
    f704:	mov	r0, #28
    f708:	bl	ee7c <rb_malloc>
    f70c:	mov	r2, r0
    f710:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f714:	str	r2, [r3, #44]	; 0x2c
    f718:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f71c:	ldr	r3, [r3, #44]	; 0x2c
    f720:	str	r3, [fp, #-16]
    f724:	ldr	r3, [fp, #-16]
    f728:	ldr	r2, [fp, #-24]	; 0xffffffe8
    f72c:	str	r2, [r3]
    f730:	bl	481c <rb_current_time@plt>
    f734:	mov	r2, r0
    f738:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f73c:	add	r2, r2, r3
    f740:	ldr	r3, [fp, #-16]
    f744:	str	r2, [r3, #16]
    f748:	ldr	r3, [fp, #-16]
    f74c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    f750:	str	r2, [r3, #20]
    f754:	ldr	r3, [fp, #-16]
    f758:	ldr	r2, [fp, #-36]	; 0xffffffdc
    f75c:	str	r2, [r3, #24]
    f760:	ldr	r3, [fp, #-16]
    f764:	add	r3, r3, #4
    f768:	ldr	r2, [pc, #140]	; f7fc <rb_settimeout+0x1d0>
    f76c:	add	r2, pc, r2
    f770:	mov	r1, r3
    f774:	ldr	r0, [fp, #-16]
    f778:	bl	ed08 <rb_dlinkAdd>
    f77c:	ldr	r3, [pc, #124]	; f800 <rb_settimeout+0x1d4>
    f780:	add	r3, pc, r3
    f784:	ldr	r3, [r3]
    f788:	cmp	r3, #0
    f78c:	bne	f7d4 <rb_settimeout+0x1a8>
    f790:	mov	r3, #5
    f794:	mov	r2, #0
    f798:	ldr	r1, [pc, #100]	; f804 <rb_settimeout+0x1d8>
    f79c:	ldr	r1, [r4, r1]
    f7a0:	ldr	r0, [pc, #96]	; f808 <rb_settimeout+0x1dc>
    f7a4:	add	r0, pc, r0
    f7a8:	bl	4b28 <rb_event_add@plt>
    f7ac:	mov	r2, r0
    f7b0:	ldr	r3, [pc, #84]	; f80c <rb_settimeout+0x1e0>
    f7b4:	add	r3, pc, r3
    f7b8:	str	r2, [r3]
    f7bc:	b	f7d4 <rb_settimeout+0x1a8>
    f7c0:	nop	{0}
    f7c4:	b	f7d4 <rb_settimeout+0x1a8>
    f7c8:	nop	{0}
    f7cc:	b	f7d4 <rb_settimeout+0x1a8>
    f7d0:	nop	{0}
    f7d4:	sub	sp, fp, #8
    f7d8:	ldr	r4, [sp]
    f7dc:	ldr	fp, [sp, #4]
    f7e0:	add	sp, sp, #8
    f7e4:	pop	{pc}		; (ldr pc, [sp], #4)
    f7e8:	.word	0x000259a4
    f7ec:	.word	0x000387f0
    f7f0:	.word	0x000387c8
    f7f4:	.word	0x000387cc
    f7f8:	.word	0x000387b8
    f7fc:	.word	0x00038718
    f800:	.word	0x0003871c
    f804:	.word	0x00000354
    f808:	.word	0x00013f38
    f80c:	.word	0x000386e8

0000f810 <rb_checktimeouts>:
    f810:	str	r4, [sp, #-12]!
    f814:	str	fp, [sp, #4]
    f818:	str	lr, [sp, #8]
    f81c:	add	fp, sp, #8
    f820:	sub	sp, sp, #36	; 0x24
    f824:	str	r0, [fp, #-40]	; 0xffffffd8
    f828:	ldr	r3, [pc, #296]	; f958 <rb_checktimeouts+0x148>
    f82c:	add	r3, pc, r3
    f830:	ldr	r3, [r3]
    f834:	str	r3, [fp, #-16]
    f838:	ldr	r3, [fp, #-16]
    f83c:	cmp	r3, #0
    f840:	beq	f850 <rb_checktimeouts+0x40>
    f844:	ldr	r3, [fp, #-16]
    f848:	ldr	r3, [r3, #8]
    f84c:	b	f854 <rb_checktimeouts+0x44>
    f850:	mov	r3, #0
    f854:	str	r3, [fp, #-20]	; 0xffffffec
    f858:	b	f934 <rb_checktimeouts+0x124>
    f85c:	ldr	r3, [fp, #-16]
    f860:	ldr	r3, [r3]
    f864:	str	r3, [fp, #-24]	; 0xffffffe8
    f868:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f86c:	ldr	r3, [r3]
    f870:	str	r3, [fp, #-28]	; 0xffffffe4
    f874:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f878:	cmp	r3, #0
    f87c:	beq	f908 <rb_checktimeouts+0xf8>
    f880:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f884:	ldrb	r3, [r3, #16]
    f888:	and	r3, r3, #1
    f88c:	cmp	r3, #0
    f890:	beq	f908 <rb_checktimeouts+0xf8>
    f894:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f898:	ldr	r4, [r3, #16]
    f89c:	bl	481c <rb_current_time@plt>
    f8a0:	mov	r3, r0
    f8a4:	cmp	r4, r3
    f8a8:	bge	f90c <rb_checktimeouts+0xfc>
    f8ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f8b0:	ldr	r3, [r3, #20]
    f8b4:	str	r3, [fp, #-32]	; 0xffffffe0
    f8b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f8bc:	ldr	r3, [r3, #24]
    f8c0:	str	r3, [fp, #-36]	; 0xffffffdc
    f8c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f8c8:	add	r3, r3, #4
    f8cc:	ldr	r2, [pc, #136]	; f95c <rb_checktimeouts+0x14c>
    f8d0:	add	r2, pc, r2
    f8d4:	mov	r1, r2
    f8d8:	mov	r0, r3
    f8dc:	bl	edb8 <rb_dlinkDelete>
    f8e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f8e4:	mov	r2, #0
    f8e8:	str	r2, [r3, #44]	; 0x2c
    f8ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
    f8f0:	bl	ef4c <rb_free>
    f8f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f8f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    f8fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    f900:	blx	r3
    f904:	b	f90c <rb_checktimeouts+0xfc>
    f908:	nop	{0}
    f90c:	ldr	r3, [fp, #-20]	; 0xffffffec
    f910:	str	r3, [fp, #-16]
    f914:	ldr	r3, [fp, #-16]
    f918:	cmp	r3, #0
    f91c:	beq	f92c <rb_checktimeouts+0x11c>
    f920:	ldr	r3, [fp, #-16]
    f924:	ldr	r3, [r3, #8]
    f928:	b	f930 <rb_checktimeouts+0x120>
    f92c:	mov	r3, #0
    f930:	str	r3, [fp, #-20]	; 0xffffffec
    f934:	ldr	r3, [fp, #-16]
    f938:	cmp	r3, #0
    f93c:	bne	f85c <rb_checktimeouts+0x4c>
    f940:	nop	{0}
    f944:	sub	sp, fp, #8
    f948:	ldr	r4, [sp]
    f94c:	ldr	fp, [sp, #4]
    f950:	add	sp, sp, #8
    f954:	pop	{pc}		; (ldr pc, [sp], #4)
    f958:	.word	0x00038658
    f95c:	.word	0x000385b4

0000f960 <rb_setsockopt_reuseaddr>:
    f960:	str	r4, [sp, #-12]!
    f964:	str	fp, [sp, #4]
    f968:	str	lr, [sp, #8]
    f96c:	add	fp, sp, #8
    f970:	sub	sp, sp, #28
    f974:	str	r0, [fp, #-24]	; 0xffffffe8
    f978:	mov	r3, #1
    f97c:	str	r3, [fp, #-20]	; 0xffffffec
    f980:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f984:	ldr	r0, [r3, #12]
    f988:	sub	r2, fp, #20
    f98c:	mov	r3, #4
    f990:	str	r3, [sp]
    f994:	mov	r3, r2
    f998:	mov	r2, #2
    f99c:	mov	r1, #1
    f9a0:	bl	4ccc <setsockopt@plt>
    f9a4:	str	r0, [fp, #-16]
    f9a8:	ldr	r3, [fp, #-16]
    f9ac:	cmp	r3, #0
    f9b0:	beq	f9f4 <rb_setsockopt_reuseaddr+0x94>
    f9b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f9b8:	ldr	r4, [r3, #12]
    f9bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    f9c0:	bl	4ab0 <rb_get_sockerr@plt>
    f9c4:	mov	r3, r0
    f9c8:	mov	r0, r3
    f9cc:	bl	43c0 <strerror@plt>
    f9d0:	mov	r3, r0
    f9d4:	mov	r2, r3
    f9d8:	mov	r1, r4
    f9dc:	ldr	r3, [pc, #44]	; fa10 <rb_setsockopt_reuseaddr+0xb0>
    f9e0:	add	r3, pc, r3
    f9e4:	mov	r0, r3
    f9e8:	bl	493c <rb_lib_log@plt>
    f9ec:	ldr	r3, [fp, #-16]
    f9f0:	b	f9f8 <rb_setsockopt_reuseaddr+0x98>
    f9f4:	mov	r3, #0
    f9f8:	mov	r0, r3
    f9fc:	sub	sp, fp, #8
    fa00:	ldr	r4, [sp]
    fa04:	ldr	fp, [sp, #4]
    fa08:	add	sp, sp, #8
    fa0c:	pop	{pc}		; (ldr pc, [sp], #4)
    fa10:	.word	0x00013d10

0000fa14 <rb_bind>:
    fa14:	str	fp, [sp, #-8]!
    fa18:	str	lr, [sp, #4]
    fa1c:	add	fp, sp, #4
    fa20:	sub	sp, sp, #16
    fa24:	str	r0, [fp, #-16]
    fa28:	str	r1, [fp, #-20]	; 0xffffffec
    fa2c:	ldr	r0, [fp, #-16]
    fa30:	bl	f960 <rb_setsockopt_reuseaddr>
    fa34:	str	r0, [fp, #-8]
    fa38:	ldr	r3, [fp, #-8]
    fa3c:	cmp	r3, #0
    fa40:	beq	fa4c <rb_bind+0x38>
    fa44:	ldr	r3, [fp, #-8]
    fa48:	b	fa98 <rb_bind+0x84>
    fa4c:	ldr	r3, [fp, #-16]
    fa50:	ldr	r0, [r3, #12]
    fa54:	ldr	r1, [fp, #-20]	; 0xffffffec
    fa58:	ldr	r3, [fp, #-20]	; 0xffffffec
    fa5c:	ldrh	r3, [r3]
    fa60:	cmp	r3, #2
    fa64:	bne	fa70 <rb_bind+0x5c>
    fa68:	mov	r3, #16
    fa6c:	b	fa74 <rb_bind+0x60>
    fa70:	mov	r3, #28
    fa74:	mov	r2, r3
    fa78:	bl	4930 <bind@plt>
    fa7c:	str	r0, [fp, #-8]
    fa80:	ldr	r3, [fp, #-8]
    fa84:	cmp	r3, #0
    fa88:	beq	fa94 <rb_bind+0x80>
    fa8c:	ldr	r3, [fp, #-8]
    fa90:	b	fa98 <rb_bind+0x84>
    fa94:	mov	r3, #0
    fa98:	mov	r0, r3
    fa9c:	sub	sp, fp, #4
    faa0:	ldr	fp, [sp]
    faa4:	add	sp, sp, #4
    faa8:	pop	{pc}		; (ldr pc, [sp], #4)

0000faac <rb_sctp_bindx>:
    faac:	push	{fp}		; (str fp, [sp, #-4]!)
    fab0:	add	fp, sp, #0
    fab4:	sub	sp, sp, #20
    fab8:	str	r0, [fp, #-8]
    fabc:	str	r1, [fp, #-12]
    fac0:	str	r2, [fp, #-16]
    fac4:	mvn	r3, #0
    fac8:	mov	r0, r3
    facc:	add	sp, fp, #0
    fad0:	pop	{fp}		; (ldr fp, [sp], #4)
    fad4:	bx	lr

0000fad8 <rb_inet_get_proto>:
    fad8:	push	{fp}		; (str fp, [sp, #-4]!)
    fadc:	add	fp, sp, #0
    fae0:	sub	sp, sp, #12
    fae4:	str	r0, [fp, #-8]
    fae8:	mov	r3, #6
    faec:	mov	r0, r3
    faf0:	add	sp, fp, #0
    faf4:	pop	{fp}		; (ldr fp, [sp], #4)
    faf8:	bx	lr

0000fafc <rb_accept_tryaccept>:
    fafc:	str	r4, [sp, #-12]!
    fb00:	str	fp, [sp, #4]
    fb04:	str	lr, [sp, #8]
    fb08:	add	fp, sp, #8
    fb0c:	sub	sp, sp, #164	; 0xa4
    fb10:	str	r0, [fp, #-160]	; 0xffffff60
    fb14:	str	r1, [fp, #-164]	; 0xffffff5c
    fb18:	sub	r3, fp, #148	; 0x94
    fb1c:	mov	r2, #128	; 0x80
    fb20:	mov	r1, #0
    fb24:	mov	r0, r3
    fb28:	bl	4648 <memset@plt>
    fb2c:	mov	r3, #128	; 0x80
    fb30:	str	r3, [fp, #-152]	; 0xffffff68
    fb34:	ldr	r3, [fp, #-160]	; 0xffffff60
    fb38:	ldr	r3, [r3, #12]
    fb3c:	sub	r2, fp, #148	; 0x94
    fb40:	mov	r1, r2
    fb44:	sub	r2, fp, #152	; 0x98
    fb48:	mov	r0, r3
    fb4c:	bl	4798 <accept@plt>
    fb50:	str	r0, [fp, #-16]
    fb54:	ldr	r3, [fp, #-16]
    fb58:	cmp	r3, #0
    fb5c:	bge	fb7c <rb_accept_tryaccept+0x80>
    fb60:	mov	r3, #0
    fb64:	ldr	r2, [pc, #400]	; fcfc <rb_accept_tryaccept+0x200>
    fb68:	add	r2, pc, r2
    fb6c:	mov	r1, #1
    fb70:	ldr	r0, [fp, #-160]	; 0xffffff60
    fb74:	bl	44c8 <rb_setselect@plt>
    fb78:	b	fce8 <rb_accept_tryaccept+0x1ec>
    fb7c:	ldr	r3, [fp, #-160]	; 0xffffff60
    fb80:	ldrb	r3, [r3, #17]
    fb84:	sxtb	r3, r3
    fb88:	bic	r3, r3, #127	; 0x7f
    fb8c:	sxtb	r3, r3
    fb90:	orr	r3, r3, #4
    fb94:	sxtb	r3, r3
    fb98:	uxtb	r3, r3
    fb9c:	ldr	r2, [pc, #348]	; fd00 <rb_accept_tryaccept+0x204>
    fba0:	add	r2, pc, r2
    fba4:	mov	r1, r3
    fba8:	ldr	r0, [fp, #-16]
    fbac:	bl	4aa4 <rb_open@plt>
    fbb0:	str	r0, [fp, #-20]	; 0xffffffec
    fbb4:	ldr	r3, [fp, #-20]	; 0xffffffec
    fbb8:	cmp	r3, #0
    fbbc:	bne	fbe0 <rb_accept_tryaccept+0xe4>
    fbc0:	ldr	r1, [fp, #-16]
    fbc4:	ldr	r3, [pc, #312]	; fd04 <rb_accept_tryaccept+0x208>
    fbc8:	add	r3, pc, r3
    fbcc:	mov	r0, r3
    fbd0:	bl	493c <rb_lib_log@plt>
    fbd4:	ldr	r0, [fp, #-16]
    fbd8:	bl	4960 <close@plt>
    fbdc:	b	fce4 <rb_accept_tryaccept+0x1e8>
    fbe0:	ldr	r0, [fp, #-20]	; 0xffffffec
    fbe4:	bl	463c <rb_set_nb@plt>
    fbe8:	mov	r3, r0
    fbec:	cmp	r3, #0
    fbf0:	moveq	r3, #1
    fbf4:	movne	r3, #0
    fbf8:	uxtb	r3, r3
    fbfc:	cmp	r3, #0
    fc00:	beq	fc28 <rb_accept_tryaccept+0x12c>
    fc04:	ldr	r3, [fp, #-20]	; 0xffffffec
    fc08:	ldr	r3, [r3, #12]
    fc0c:	mov	r1, r3
    fc10:	ldr	r3, [pc, #240]	; fd08 <rb_accept_tryaccept+0x20c>
    fc14:	add	r3, pc, r3
    fc18:	mov	r0, r3
    fc1c:	bl	493c <rb_lib_log@plt>
    fc20:	ldr	r0, [fp, #-20]	; 0xffffffec
    fc24:	bl	4888 <rb_close@plt>
    fc28:	sub	r3, fp, #148	; 0x94
    fc2c:	mov	r0, r3
    fc30:	bl	10904 <mangle_mapped_sockaddr>
    fc34:	ldr	r3, [fp, #-160]	; 0xffffff60
    fc38:	ldr	r3, [r3, #52]	; 0x34
    fc3c:	ldr	r3, [r3, #136]	; 0x88
    fc40:	cmp	r3, #0
    fc44:	beq	fc7c <rb_accept_tryaccept+0x180>
    fc48:	ldr	r3, [fp, #-160]	; 0xffffff60
    fc4c:	ldr	r3, [r3, #52]	; 0x34
    fc50:	ldr	r4, [r3, #136]	; 0x88
    fc54:	ldr	r2, [fp, #-152]	; 0xffffff68
    fc58:	ldr	r3, [fp, #-160]	; 0xffffff60
    fc5c:	ldr	r3, [r3, #52]	; 0x34
    fc60:	ldr	r3, [r3, #140]	; 0x8c
    fc64:	sub	r1, fp, #148	; 0x94
    fc68:	ldr	r0, [fp, #-20]	; 0xffffffec
    fc6c:	blx	r4
    fc70:	mov	r3, r0
    fc74:	cmp	r3, #0
    fc78:	beq	fce0 <rb_accept_tryaccept+0x1e4>
    fc7c:	ldr	r3, [fp, #-160]	; 0xffffff60
    fc80:	ldrb	r3, [r3, #17]
    fc84:	and	r3, r3, #32
    fc88:	cmp	r3, #0
    fc8c:	beq	fca8 <rb_accept_tryaccept+0x1ac>
    fc90:	ldr	r3, [fp, #-152]	; 0xffffff68
    fc94:	sub	r2, fp, #148	; 0x94
    fc98:	ldr	r1, [fp, #-20]	; 0xffffffec
    fc9c:	ldr	r0, [fp, #-160]	; 0xffffff60
    fca0:	bl	15158 <rb_ssl_accept_setup>
    fca4:	b	fb18 <rb_accept_tryaccept+0x1c>
    fca8:	ldr	r3, [fp, #-160]	; 0xffffff60
    fcac:	ldr	r3, [r3, #52]	; 0x34
    fcb0:	ldr	r4, [r3, #132]	; 0x84
    fcb4:	ldr	r1, [fp, #-152]	; 0xffffff68
    fcb8:	ldr	r3, [fp, #-160]	; 0xffffff60
    fcbc:	ldr	r3, [r3, #52]	; 0x34
    fcc0:	ldr	r3, [r3, #140]	; 0x8c
    fcc4:	sub	r2, fp, #148	; 0x94
    fcc8:	str	r3, [sp]
    fccc:	mov	r3, r1
    fcd0:	mov	r1, #0
    fcd4:	ldr	r0, [fp, #-20]	; 0xffffffec
    fcd8:	blx	r4
    fcdc:	b	fb18 <rb_accept_tryaccept+0x1c>
    fce0:	nop	{0}
    fce4:	b	fb18 <rb_accept_tryaccept+0x1c>
    fce8:	sub	sp, fp, #8
    fcec:	ldr	r4, [sp]
    fcf0:	ldr	fp, [sp, #4]
    fcf4:	add	sp, sp, #8
    fcf8:	pop	{pc}		; (ldr pc, [sp], #4)
    fcfc:	.word	0xffffff8c
    fd00:	.word	0x00013b90
    fd04:	.word	0x00013b7c
    fd08:	.word	0x00013b78

0000fd0c <rb_accept_tcp>:
    fd0c:	str	fp, [sp, #-8]!
    fd10:	str	lr, [sp, #4]
    fd14:	add	fp, sp, #4
    fd18:	sub	sp, sp, #16
    fd1c:	str	r0, [fp, #-8]
    fd20:	str	r1, [fp, #-12]
    fd24:	str	r2, [fp, #-16]
    fd28:	str	r3, [fp, #-20]	; 0xffffffec
    fd2c:	ldr	r3, [fp, #-8]
    fd30:	cmp	r3, #0
    fd34:	beq	fd8c <rb_accept_tcp+0x80>
    fd38:	mov	r0, #144	; 0x90
    fd3c:	bl	ee7c <rb_malloc>
    fd40:	mov	r2, r0
    fd44:	ldr	r3, [fp, #-8]
    fd48:	str	r2, [r3, #52]	; 0x34
    fd4c:	ldr	r3, [fp, #-8]
    fd50:	ldr	r3, [r3, #52]	; 0x34
    fd54:	ldr	r2, [fp, #-16]
    fd58:	str	r2, [r3, #132]	; 0x84
    fd5c:	ldr	r3, [fp, #-8]
    fd60:	ldr	r3, [r3, #52]	; 0x34
    fd64:	ldr	r2, [fp, #-20]	; 0xffffffec
    fd68:	str	r2, [r3, #140]	; 0x8c
    fd6c:	ldr	r3, [fp, #-8]
    fd70:	ldr	r3, [r3, #52]	; 0x34
    fd74:	ldr	r2, [fp, #-12]
    fd78:	str	r2, [r3, #136]	; 0x88
    fd7c:	mov	r1, #0
    fd80:	ldr	r0, [fp, #-8]
    fd84:	bl	fafc <rb_accept_tryaccept>
    fd88:	b	fd90 <rb_accept_tcp+0x84>
    fd8c:	nop	{0}
    fd90:	sub	sp, fp, #4
    fd94:	ldr	fp, [sp]
    fd98:	add	sp, sp, #4
    fd9c:	pop	{pc}		; (ldr pc, [sp], #4)

0000fda0 <rb_connect_tcp>:
    fda0:	str	fp, [sp, #-8]!
    fda4:	str	lr, [sp, #4]
    fda8:	add	fp, sp, #4
    fdac:	sub	sp, sp, #24
    fdb0:	str	r0, [fp, #-16]
    fdb4:	str	r1, [fp, #-20]	; 0xffffffec
    fdb8:	str	r2, [fp, #-24]	; 0xffffffe8
    fdbc:	str	r3, [fp, #-28]	; 0xffffffe4
    fdc0:	ldr	r3, [fp, #-16]
    fdc4:	cmp	r3, #0
    fdc8:	beq	ff60 <rb_connect_tcp+0x1c0>
    fdcc:	mov	r0, #268	; 0x10c
    fdd0:	bl	ee7c <rb_malloc>
    fdd4:	mov	r2, r0
    fdd8:	ldr	r3, [fp, #-16]
    fddc:	str	r2, [r3, #48]	; 0x30
    fde0:	ldr	r3, [fp, #-16]
    fde4:	ldr	r3, [r3, #48]	; 0x30
    fde8:	ldr	r2, [fp, #-28]	; 0xffffffe4
    fdec:	str	r2, [r3, #260]	; 0x104
    fdf0:	ldr	r3, [fp, #-16]
    fdf4:	ldr	r3, [r3, #48]	; 0x30
    fdf8:	ldr	r2, [fp, #4]
    fdfc:	str	r2, [r3, #264]	; 0x108
    fe00:	ldr	r3, [fp, #-16]
    fe04:	ldr	r3, [r3, #48]	; 0x30
    fe08:	add	r3, r3, #128	; 0x80
    fe0c:	mov	r2, #128	; 0x80
    fe10:	ldr	r1, [fp, #-20]	; 0xffffffec
    fe14:	mov	r0, r3
    fe18:	bl	4834 <memcpy@plt>
    fe1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    fe20:	cmp	r3, #0
    fe24:	beq	fe74 <rb_connect_tcp+0xd4>
    fe28:	ldr	r3, [fp, #-16]
    fe2c:	ldr	r0, [r3, #12]
    fe30:	ldr	r1, [fp, #-24]	; 0xffffffe8
    fe34:	ldr	r3, [fp, #-24]	; 0xffffffe8
    fe38:	ldrh	r3, [r3]
    fe3c:	cmp	r3, #2
    fe40:	bne	fe4c <rb_connect_tcp+0xac>
    fe44:	mov	r3, #16
    fe48:	b	fe50 <rb_connect_tcp+0xb0>
    fe4c:	mov	r3, #28
    fe50:	mov	r2, r3
    fe54:	bl	4930 <bind@plt>
    fe58:	mov	r3, r0
    fe5c:	cmp	r3, #0
    fe60:	bge	fe74 <rb_connect_tcp+0xd4>
    fe64:	mov	r1, #1
    fe68:	ldr	r0, [fp, #-16]
    fe6c:	bl	ffbc <rb_connect_callback>
    fe70:	b	ff64 <rb_connect_tcp+0x1c4>
    fe74:	mov	r3, #0
    fe78:	ldr	r2, [pc, #244]	; ff74 <rb_connect_tcp+0x1d4>
    fe7c:	add	r2, pc, r2
    fe80:	ldr	r1, [fp, #8]
    fe84:	ldr	r0, [fp, #-16]
    fe88:	bl	4408 <rb_settimeout@plt>
    fe8c:	ldr	r3, [fp, #-16]
    fe90:	ldr	r0, [r3, #12]
    fe94:	ldr	r3, [fp, #-16]
    fe98:	ldr	r3, [r3, #48]	; 0x30
    fe9c:	add	r3, r3, #128	; 0x80
    fea0:	mov	r1, r3
    fea4:	ldr	r3, [fp, #-16]
    fea8:	ldr	r3, [r3, #48]	; 0x30
    feac:	add	r3, r3, #128	; 0x80
    feb0:	ldrh	r3, [r3]
    feb4:	cmp	r3, #2
    feb8:	bne	fec4 <rb_connect_tcp+0x124>
    febc:	mov	r3, #16
    fec0:	b	fec8 <rb_connect_tcp+0x128>
    fec4:	mov	r3, #28
    fec8:	mov	r2, r3
    fecc:	bl	43f0 <connect@plt>
    fed0:	str	r0, [fp, #-8]
    fed4:	ldr	r3, [fp, #-8]
    fed8:	cmp	r3, #0
    fedc:	bge	ff50 <rb_connect_tcp+0x1b0>
    fee0:	bl	4d20 <__errno_location@plt>
    fee4:	mov	r3, r0
    fee8:	ldr	r3, [r3]
    feec:	cmp	r3, #106	; 0x6a
    fef0:	bne	ff04 <rb_connect_tcp+0x164>
    fef4:	mov	r1, #0
    fef8:	ldr	r0, [fp, #-16]
    fefc:	bl	ffbc <rb_connect_callback>
    ff00:	b	ff64 <rb_connect_tcp+0x1c4>
    ff04:	bl	4d20 <__errno_location@plt>
    ff08:	mov	r3, r0
    ff0c:	ldr	r3, [r3]
    ff10:	mov	r0, r3
    ff14:	bl	43fc <rb_ignore_errno@plt>
    ff18:	mov	r3, r0
    ff1c:	cmp	r3, #0
    ff20:	beq	ff40 <rb_connect_tcp+0x1a0>
    ff24:	mov	r3, #0
    ff28:	ldr	r2, [pc, #72]	; ff78 <rb_connect_tcp+0x1d8>
    ff2c:	add	r2, pc, r2
    ff30:	mov	r1, #2
    ff34:	ldr	r0, [fp, #-16]
    ff38:	bl	44c8 <rb_setselect@plt>
    ff3c:	b	ff64 <rb_connect_tcp+0x1c4>
    ff40:	mov	r1, #4
    ff44:	ldr	r0, [fp, #-16]
    ff48:	bl	ffbc <rb_connect_callback>
    ff4c:	b	ff64 <rb_connect_tcp+0x1c4>
    ff50:	mov	r1, #0
    ff54:	ldr	r0, [fp, #-16]
    ff58:	bl	ffbc <rb_connect_callback>
    ff5c:	b	ff64 <rb_connect_tcp+0x1c4>
    ff60:	nop	{0}
    ff64:	sub	sp, fp, #4
    ff68:	ldr	fp, [sp]
    ff6c:	add	sp, sp, #4
    ff70:	pop	{pc}		; (ldr pc, [sp], #4)
    ff74:	.word	0x00000210
    ff78:	.word	0x00000198

0000ff7c <rb_connect_sctp>:
    ff7c:	str	fp, [sp, #-8]!
    ff80:	str	lr, [sp, #4]
    ff84:	add	fp, sp, #4
    ff88:	sub	sp, sp, #16
    ff8c:	str	r0, [fp, #-8]
    ff90:	str	r1, [fp, #-12]
    ff94:	str	r2, [fp, #-16]
    ff98:	str	r3, [fp, #-20]	; 0xffffffec
    ff9c:	mov	r1, #4
    ffa0:	ldr	r0, [fp, #-8]
    ffa4:	bl	ffbc <rb_connect_callback>
    ffa8:	nop	{0}
    ffac:	sub	sp, fp, #4
    ffb0:	ldr	fp, [sp]
    ffb4:	add	sp, sp, #4
    ffb8:	pop	{pc}		; (ldr pc, [sp], #4)

0000ffbc <rb_connect_callback>:
    ffbc:	str	fp, [sp, #-8]!
    ffc0:	str	lr, [sp, #4]
    ffc4:	add	fp, sp, #4
    ffc8:	sub	sp, sp, #24
    ffcc:	str	r0, [fp, #-24]	; 0xffffffe8
    ffd0:	str	r1, [fp, #-28]	; 0xffffffe4
    ffd4:	bl	4d20 <__errno_location@plt>
    ffd8:	mov	r3, r0
    ffdc:	ldr	r3, [r3]
    ffe0:	str	r3, [fp, #-8]
    ffe4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ffe8:	cmp	r3, #0
    ffec:	beq	10080 <rb_connect_callback+0xc4>
    fff0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    fff4:	ldr	r3, [r3, #48]	; 0x30
    fff8:	cmp	r3, #0
    fffc:	beq	10080 <rb_connect_callback+0xc4>
   10000:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10004:	ldr	r3, [r3, #48]	; 0x30
   10008:	ldr	r3, [r3, #260]	; 0x104
   1000c:	cmp	r3, #0
   10010:	beq	10080 <rb_connect_callback+0xc4>
   10014:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10018:	ldr	r3, [r3, #48]	; 0x30
   1001c:	ldr	r3, [r3, #260]	; 0x104
   10020:	str	r3, [fp, #-12]
   10024:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10028:	ldr	r3, [r3, #48]	; 0x30
   1002c:	ldr	r3, [r3, #264]	; 0x108
   10030:	str	r3, [fp, #-16]
   10034:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10038:	ldr	r3, [r3, #48]	; 0x30
   1003c:	mov	r2, #0
   10040:	str	r2, [r3, #260]	; 0x104
   10044:	mov	r3, #0
   10048:	mov	r2, #0
   1004c:	mov	r1, #0
   10050:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10054:	bl	4408 <rb_settimeout@plt>
   10058:	bl	4d20 <__errno_location@plt>
   1005c:	mov	r2, r0
   10060:	ldr	r3, [fp, #-8]
   10064:	str	r3, [r2]
   10068:	ldr	r3, [fp, #-12]
   1006c:	ldr	r2, [fp, #-16]
   10070:	ldr	r1, [fp, #-28]	; 0xffffffe4
   10074:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10078:	blx	r3
   1007c:	b	10084 <rb_connect_callback+0xc8>
   10080:	nop	{0}
   10084:	sub	sp, fp, #4
   10088:	ldr	fp, [sp]
   1008c:	add	sp, sp, #4
   10090:	pop	{pc}		; (ldr pc, [sp], #4)

00010094 <rb_connect_timeout>:
   10094:	str	fp, [sp, #-8]!
   10098:	str	lr, [sp, #4]
   1009c:	add	fp, sp, #4
   100a0:	sub	sp, sp, #8
   100a4:	str	r0, [fp, #-8]
   100a8:	str	r1, [fp, #-12]
   100ac:	mov	r1, #3
   100b0:	ldr	r0, [fp, #-8]
   100b4:	bl	ffbc <rb_connect_callback>
   100b8:	nop	{0}
   100bc:	sub	sp, fp, #4
   100c0:	ldr	fp, [sp]
   100c4:	add	sp, sp, #4
   100c8:	pop	{pc}		; (ldr pc, [sp], #4)

000100cc <rb_connect_outcome>:
   100cc:	str	fp, [sp, #-8]!
   100d0:	str	lr, [sp, #4]
   100d4:	add	fp, sp, #4
   100d8:	sub	sp, sp, #32
   100dc:	str	r0, [fp, #-24]	; 0xffffffe8
   100e0:	str	r1, [fp, #-28]	; 0xffffffe4
   100e4:	mov	r3, #0
   100e8:	str	r3, [fp, #-12]
   100ec:	mov	r3, #4
   100f0:	str	r3, [fp, #-16]
   100f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   100f8:	cmp	r3, #0
   100fc:	beq	101a8 <rb_connect_outcome+0xdc>
   10100:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10104:	ldr	r3, [r3, #48]	; 0x30
   10108:	cmp	r3, #0
   1010c:	beq	101a8 <rb_connect_outcome+0xdc>
   10110:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10114:	ldr	r3, [r3, #48]	; 0x30
   10118:	ldr	r3, [r3, #260]	; 0x104
   1011c:	cmp	r3, #0
   10120:	beq	101a8 <rb_connect_outcome+0xdc>
   10124:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10128:	ldr	r0, [r3, #12]
   1012c:	sub	r2, fp, #12
   10130:	sub	r3, fp, #16
   10134:	str	r3, [sp]
   10138:	mov	r3, r2
   1013c:	mov	r2, #4
   10140:	mov	r1, #1
   10144:	bl	4ca8 <getsockopt@plt>
   10148:	str	r0, [fp, #-8]
   1014c:	ldr	r3, [fp, #-8]
   10150:	cmp	r3, #0
   10154:	blt	1017c <rb_connect_outcome+0xb0>
   10158:	ldr	r3, [fp, #-12]
   1015c:	cmp	r3, #0
   10160:	beq	1017c <rb_connect_outcome+0xb0>
   10164:	bl	4d20 <__errno_location@plt>
   10168:	mov	r2, r0
   1016c:	ldr	r3, [fp, #-12]
   10170:	str	r3, [r2]
   10174:	mvn	r3, #0
   10178:	str	r3, [fp, #-8]
   1017c:	ldr	r3, [fp, #-8]
   10180:	cmp	r3, #0
   10184:	bge	10198 <rb_connect_outcome+0xcc>
   10188:	mov	r1, #4
   1018c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10190:	bl	ffbc <rb_connect_callback>
   10194:	b	101ac <rb_connect_outcome+0xe0>
   10198:	mov	r1, #0
   1019c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   101a0:	bl	ffbc <rb_connect_callback>
   101a4:	b	101ac <rb_connect_outcome+0xe0>
   101a8:	nop	{0}
   101ac:	sub	sp, fp, #4
   101b0:	ldr	fp, [sp]
   101b4:	add	sp, sp, #4
   101b8:	pop	{pc}		; (ldr pc, [sp], #4)

000101bc <rb_connect_sockaddr>:
   101bc:	str	fp, [sp, #-8]!
   101c0:	str	lr, [sp, #4]
   101c4:	add	fp, sp, #4
   101c8:	sub	sp, sp, #16
   101cc:	str	r0, [fp, #-8]
   101d0:	str	r1, [fp, #-12]
   101d4:	str	r2, [fp, #-16]
   101d8:	ldr	r3, [fp, #-8]
   101dc:	cmp	r3, #0
   101e0:	bne	101ec <rb_connect_sockaddr+0x30>
   101e4:	mov	r3, #0
   101e8:	b	1020c <rb_connect_sockaddr+0x50>
   101ec:	ldr	r3, [fp, #-8]
   101f0:	ldr	r3, [r3, #48]	; 0x30
   101f4:	add	r3, r3, #128	; 0x80
   101f8:	ldr	r2, [fp, #-16]
   101fc:	mov	r1, r3
   10200:	ldr	r0, [fp, #-12]
   10204:	bl	4834 <memcpy@plt>
   10208:	mov	r3, #1
   1020c:	mov	r0, r3
   10210:	sub	sp, fp, #4
   10214:	ldr	fp, [sp]
   10218:	add	sp, sp, #4
   1021c:	pop	{pc}		; (ldr pc, [sp], #4)

00010220 <rb_errstr>:
   10220:	push	{fp}		; (str fp, [sp, #-4]!)
   10224:	add	fp, sp, #0
   10228:	sub	sp, sp, #12
   1022c:	str	r0, [fp, #-8]
   10230:	ldr	r3, [fp, #-8]
   10234:	cmp	r3, #0
   10238:	blt	10248 <rb_errstr+0x28>
   1023c:	ldr	r3, [fp, #-8]
   10240:	cmp	r3, #6
   10244:	ble	10254 <rb_errstr+0x34>
   10248:	ldr	r3, [pc, #36]	; 10274 <rb_errstr+0x54>
   1024c:	add	r3, pc, r3
   10250:	b	10264 <rb_errstr+0x44>
   10254:	ldr	r3, [pc, #28]	; 10278 <rb_errstr+0x58>
   10258:	add	r3, pc, r3
   1025c:	ldr	r2, [fp, #-8]
   10260:	ldr	r3, [r3, r2, lsl #2]
   10264:	mov	r0, r3
   10268:	add	sp, fp, #0
   1026c:	pop	{fp}		; (ldr fp, [sp], #4)
   10270:	bx	lr
   10274:	.word	0x0001356c
   10278:	.word	0x00025214

0001027c <rb_socketpair>:
   1027c:	str	r4, [sp, #-12]!
   10280:	str	fp, [sp, #4]
   10284:	str	lr, [sp, #8]
   10288:	add	fp, sp, #8
   1028c:	sub	sp, sp, #28
   10290:	str	r0, [fp, #-24]	; 0xffffffe8
   10294:	str	r1, [fp, #-28]	; 0xffffffe4
   10298:	str	r2, [fp, #-32]	; 0xffffffe0
   1029c:	str	r3, [fp, #-36]	; 0xffffffdc
   102a0:	ldr	r1, [pc, #556]	; 104d4 <rb_socketpair+0x258>
   102a4:	add	r1, pc, r1
   102a8:	ldr	r3, [pc, #552]	; 104d8 <rb_socketpair+0x25c>
   102ac:	add	r3, pc, r3
   102b0:	ldr	r2, [r3]
   102b4:	ldr	r3, [pc, #544]	; 104dc <rb_socketpair+0x260>
   102b8:	ldr	r3, [r1, r3]
   102bc:	ldr	r3, [r3]
   102c0:	cmp	r2, r3
   102c4:	blt	102e0 <rb_socketpair+0x64>
   102c8:	bl	4d20 <__errno_location@plt>
   102cc:	mov	r2, r0
   102d0:	mov	r3, #23
   102d4:	str	r3, [r2]
   102d8:	mvn	r3, #0
   102dc:	b	104bc <rb_socketpair+0x240>
   102e0:	sub	r3, fp, #20
   102e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   102e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   102ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   102f0:	bl	4588 <socketpair@plt>
   102f4:	mov	r3, r0
   102f8:	cmp	r3, #0
   102fc:	beq	10308 <rb_socketpair+0x8c>
   10300:	mvn	r3, #0
   10304:	b	104bc <rb_socketpair+0x240>
   10308:	ldr	r3, [fp, #-20]	; 0xffffffec
   1030c:	ldr	r2, [fp, #8]
   10310:	mov	r1, #4
   10314:	mov	r0, r3
   10318:	bl	4aa4 <rb_open@plt>
   1031c:	mov	r2, r0
   10320:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10324:	str	r2, [r3]
   10328:	ldr	r3, [fp, #-16]
   1032c:	ldr	r2, [fp, #8]
   10330:	mov	r1, #4
   10334:	mov	r0, r3
   10338:	bl	4aa4 <rb_open@plt>
   1033c:	mov	r2, r0
   10340:	ldr	r3, [fp, #4]
   10344:	str	r2, [r3]
   10348:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1034c:	ldr	r3, [r3]
   10350:	cmp	r3, #0
   10354:	bne	10380 <rb_socketpair+0x104>
   10358:	ldr	r3, [fp, #4]
   1035c:	ldr	r3, [r3]
   10360:	cmp	r3, #0
   10364:	beq	10378 <rb_socketpair+0xfc>
   10368:	ldr	r3, [fp, #4]
   1036c:	ldr	r3, [r3]
   10370:	mov	r0, r3
   10374:	bl	4888 <rb_close@plt>
   10378:	mvn	r3, #0
   1037c:	b	104bc <rb_socketpair+0x240>
   10380:	ldr	r3, [fp, #4]
   10384:	ldr	r3, [r3]
   10388:	cmp	r3, #0
   1038c:	bne	103a8 <rb_socketpair+0x12c>
   10390:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10394:	ldr	r3, [r3]
   10398:	mov	r0, r3
   1039c:	bl	4888 <rb_close@plt>
   103a0:	mvn	r3, #0
   103a4:	b	104bc <rb_socketpair+0x240>
   103a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   103ac:	ldr	r3, [r3]
   103b0:	mov	r0, r3
   103b4:	bl	463c <rb_set_nb@plt>
   103b8:	mov	r3, r0
   103bc:	cmp	r3, #0
   103c0:	moveq	r3, #1
   103c4:	movne	r3, #0
   103c8:	uxtb	r3, r3
   103cc:	cmp	r3, #0
   103d0:	beq	10430 <rb_socketpair+0x1b4>
   103d4:	ldr	r4, [fp, #-20]	; 0xffffffec
   103d8:	bl	4d20 <__errno_location@plt>
   103dc:	mov	r3, r0
   103e0:	ldr	r3, [r3]
   103e4:	mov	r0, r3
   103e8:	bl	43c0 <strerror@plt>
   103ec:	mov	r3, r0
   103f0:	mov	r2, r3
   103f4:	mov	r1, r4
   103f8:	ldr	r3, [pc, #224]	; 104e0 <rb_socketpair+0x264>
   103fc:	add	r3, pc, r3
   10400:	mov	r0, r3
   10404:	bl	493c <rb_lib_log@plt>
   10408:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1040c:	ldr	r3, [r3]
   10410:	mov	r0, r3
   10414:	bl	4888 <rb_close@plt>
   10418:	ldr	r3, [fp, #4]
   1041c:	ldr	r3, [r3]
   10420:	mov	r0, r3
   10424:	bl	4888 <rb_close@plt>
   10428:	mvn	r3, #0
   1042c:	b	104bc <rb_socketpair+0x240>
   10430:	ldr	r3, [fp, #4]
   10434:	ldr	r3, [r3]
   10438:	mov	r0, r3
   1043c:	bl	463c <rb_set_nb@plt>
   10440:	mov	r3, r0
   10444:	cmp	r3, #0
   10448:	moveq	r3, #1
   1044c:	movne	r3, #0
   10450:	uxtb	r3, r3
   10454:	cmp	r3, #0
   10458:	beq	104b8 <rb_socketpair+0x23c>
   1045c:	ldr	r4, [fp, #-16]
   10460:	bl	4d20 <__errno_location@plt>
   10464:	mov	r3, r0
   10468:	ldr	r3, [r3]
   1046c:	mov	r0, r3
   10470:	bl	43c0 <strerror@plt>
   10474:	mov	r3, r0
   10478:	mov	r2, r3
   1047c:	mov	r1, r4
   10480:	ldr	r3, [pc, #92]	; 104e4 <rb_socketpair+0x268>
   10484:	add	r3, pc, r3
   10488:	mov	r0, r3
   1048c:	bl	493c <rb_lib_log@plt>
   10490:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10494:	ldr	r3, [r3]
   10498:	mov	r0, r3
   1049c:	bl	4888 <rb_close@plt>
   104a0:	ldr	r3, [fp, #4]
   104a4:	ldr	r3, [r3]
   104a8:	mov	r0, r3
   104ac:	bl	4888 <rb_close@plt>
   104b0:	mvn	r3, #0
   104b4:	b	104bc <rb_socketpair+0x240>
   104b8:	mov	r3, #0
   104bc:	mov	r0, r3
   104c0:	sub	sp, fp, #8
   104c4:	ldr	r4, [sp]
   104c8:	ldr	fp, [sp, #4]
   104cc:	add	sp, sp, #8
   104d0:	pop	{pc}		; (ldr pc, [sp], #4)
   104d4:	.word	0x00024d54
   104d8:	.word	0x00037bf4
   104dc:	.word	0x000003a4
   104e0:	.word	0x000133d4
   104e4:	.word	0x0001334c

000104e8 <rb_pipe>:
   104e8:	str	r4, [sp, #-12]!
   104ec:	str	fp, [sp, #4]
   104f0:	str	lr, [sp, #8]
   104f4:	add	fp, sp, #8
   104f8:	sub	sp, sp, #28
   104fc:	str	r0, [fp, #-24]	; 0xffffffe8
   10500:	str	r1, [fp, #-28]	; 0xffffffe4
   10504:	str	r2, [fp, #-32]	; 0xffffffe0
   10508:	ldr	r1, [pc, #452]	; 106d4 <rb_pipe+0x1ec>
   1050c:	add	r1, pc, r1
   10510:	ldr	r3, [pc, #448]	; 106d8 <rb_pipe+0x1f0>
   10514:	add	r3, pc, r3
   10518:	ldr	r2, [r3]
   1051c:	ldr	r3, [pc, #440]	; 106dc <rb_pipe+0x1f4>
   10520:	ldr	r3, [r1, r3]
   10524:	ldr	r3, [r3]
   10528:	cmp	r2, r3
   1052c:	blt	10548 <rb_pipe+0x60>
   10530:	bl	4d20 <__errno_location@plt>
   10534:	mov	r2, r0
   10538:	mov	r3, #23
   1053c:	str	r3, [r2]
   10540:	mvn	r3, #0
   10544:	b	106bc <rb_pipe+0x1d4>
   10548:	sub	r3, fp, #20
   1054c:	mov	r0, r3
   10550:	bl	4cb4 <pipe@plt>
   10554:	mov	r3, r0
   10558:	cmn	r3, #1
   1055c:	bne	10568 <rb_pipe+0x80>
   10560:	mvn	r3, #0
   10564:	b	106bc <rb_pipe+0x1d4>
   10568:	ldr	r3, [fp, #-20]	; 0xffffffec
   1056c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   10570:	mov	r1, #8
   10574:	mov	r0, r3
   10578:	bl	4aa4 <rb_open@plt>
   1057c:	mov	r2, r0
   10580:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10584:	str	r2, [r3]
   10588:	ldr	r3, [fp, #-16]
   1058c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   10590:	mov	r1, #8
   10594:	mov	r0, r3
   10598:	bl	4aa4 <rb_open@plt>
   1059c:	mov	r2, r0
   105a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   105a4:	str	r2, [r3]
   105a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   105ac:	ldr	r3, [r3]
   105b0:	mov	r0, r3
   105b4:	bl	463c <rb_set_nb@plt>
   105b8:	mov	r3, r0
   105bc:	cmp	r3, #0
   105c0:	moveq	r3, #1
   105c4:	movne	r3, #0
   105c8:	uxtb	r3, r3
   105cc:	cmp	r3, #0
   105d0:	beq	10630 <rb_pipe+0x148>
   105d4:	ldr	r4, [fp, #-20]	; 0xffffffec
   105d8:	bl	4d20 <__errno_location@plt>
   105dc:	mov	r3, r0
   105e0:	ldr	r3, [r3]
   105e4:	mov	r0, r3
   105e8:	bl	43c0 <strerror@plt>
   105ec:	mov	r3, r0
   105f0:	mov	r2, r3
   105f4:	mov	r1, r4
   105f8:	ldr	r3, [pc, #224]	; 106e0 <rb_pipe+0x1f8>
   105fc:	add	r3, pc, r3
   10600:	mov	r0, r3
   10604:	bl	493c <rb_lib_log@plt>
   10608:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1060c:	ldr	r3, [r3]
   10610:	mov	r0, r3
   10614:	bl	4888 <rb_close@plt>
   10618:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1061c:	ldr	r3, [r3]
   10620:	mov	r0, r3
   10624:	bl	4888 <rb_close@plt>
   10628:	mvn	r3, #0
   1062c:	b	106bc <rb_pipe+0x1d4>
   10630:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10634:	ldr	r3, [r3]
   10638:	mov	r0, r3
   1063c:	bl	463c <rb_set_nb@plt>
   10640:	mov	r3, r0
   10644:	cmp	r3, #0
   10648:	moveq	r3, #1
   1064c:	movne	r3, #0
   10650:	uxtb	r3, r3
   10654:	cmp	r3, #0
   10658:	beq	106b8 <rb_pipe+0x1d0>
   1065c:	ldr	r4, [fp, #-16]
   10660:	bl	4d20 <__errno_location@plt>
   10664:	mov	r3, r0
   10668:	ldr	r3, [r3]
   1066c:	mov	r0, r3
   10670:	bl	43c0 <strerror@plt>
   10674:	mov	r3, r0
   10678:	mov	r2, r3
   1067c:	mov	r1, r4
   10680:	ldr	r3, [pc, #92]	; 106e4 <rb_pipe+0x1fc>
   10684:	add	r3, pc, r3
   10688:	mov	r0, r3
   1068c:	bl	493c <rb_lib_log@plt>
   10690:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10694:	ldr	r3, [r3]
   10698:	mov	r0, r3
   1069c:	bl	4888 <rb_close@plt>
   106a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   106a4:	ldr	r3, [r3]
   106a8:	mov	r0, r3
   106ac:	bl	4888 <rb_close@plt>
   106b0:	mvn	r3, #0
   106b4:	b	106bc <rb_pipe+0x1d4>
   106b8:	mov	r3, #0
   106bc:	mov	r0, r3
   106c0:	sub	sp, fp, #8
   106c4:	ldr	r4, [sp]
   106c8:	ldr	fp, [sp, #4]
   106cc:	add	sp, sp, #8
   106d0:	pop	{pc}		; (ldr pc, [sp], #4)
   106d4:	.word	0x00024aec
   106d8:	.word	0x0003798c
   106dc:	.word	0x000003a4
   106e0:	.word	0x000131d4
   106e4:	.word	0x0001314c

000106e8 <rb_socket>:
   106e8:	str	r4, [sp, #-12]!
   106ec:	str	fp, [sp, #4]
   106f0:	str	lr, [sp, #8]
   106f4:	add	fp, sp, #8
   106f8:	sub	sp, sp, #44	; 0x2c
   106fc:	str	r0, [fp, #-32]	; 0xffffffe0
   10700:	str	r1, [fp, #-36]	; 0xffffffdc
   10704:	str	r2, [fp, #-40]	; 0xffffffd8
   10708:	str	r3, [fp, #-44]	; 0xffffffd4
   1070c:	ldr	r1, [pc, #472]	; 108ec <rb_socket+0x204>
   10710:	add	r1, pc, r1
   10714:	ldr	r3, [pc, #468]	; 108f0 <rb_socket+0x208>
   10718:	add	r3, pc, r3
   1071c:	ldr	r2, [r3]
   10720:	ldr	r3, [pc, #460]	; 108f4 <rb_socket+0x20c>
   10724:	ldr	r3, [r1, r3]
   10728:	ldr	r3, [r3]
   1072c:	cmp	r2, r3
   10730:	movge	r3, #1
   10734:	movlt	r3, #0
   10738:	uxtb	r3, r3
   1073c:	cmp	r3, #0
   10740:	beq	1075c <rb_socket+0x74>
   10744:	bl	4d20 <__errno_location@plt>
   10748:	mov	r2, r0
   1074c:	mov	r3, #23
   10750:	str	r3, [r2]
   10754:	mov	r3, #0
   10758:	b	108d4 <rb_socket+0x1ec>
   1075c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10760:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10764:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10768:	bl	47bc <socket@plt>
   1076c:	str	r0, [fp, #-16]
   10770:	ldr	r3, [fp, #-16]
   10774:	lsr	r3, r3, #31
   10778:	uxtb	r3, r3
   1077c:	cmp	r3, #0
   10780:	beq	1078c <rb_socket+0xa4>
   10784:	mov	r3, #0
   10788:	b	108d4 <rb_socket+0x1ec>
   1078c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10790:	cmp	r3, #10
   10794:	bne	1080c <rb_socket+0x124>
   10798:	mov	r3, #1
   1079c:	str	r3, [fp, #-24]	; 0xffffffe8
   107a0:	sub	r2, fp, #24
   107a4:	mov	r3, #4
   107a8:	str	r3, [sp]
   107ac:	mov	r3, r2
   107b0:	mov	r2, #26
   107b4:	mov	r1, #41	; 0x29
   107b8:	ldr	r0, [fp, #-16]
   107bc:	bl	4ccc <setsockopt@plt>
   107c0:	mov	r3, r0
   107c4:	cmn	r3, #1
   107c8:	bne	1080c <rb_socket+0x124>
   107cc:	ldr	r4, [fp, #-24]	; 0xffffffe8
   107d0:	bl	4d20 <__errno_location@plt>
   107d4:	mov	r3, r0
   107d8:	ldr	r3, [r3]
   107dc:	mov	r0, r3
   107e0:	bl	43c0 <strerror@plt>
   107e4:	mov	r3, r0
   107e8:	ldr	r2, [fp, #-16]
   107ec:	mov	r1, r4
   107f0:	ldr	r0, [pc, #256]	; 108f8 <rb_socket+0x210>
   107f4:	add	r0, pc, r0
   107f8:	bl	493c <rb_lib_log@plt>
   107fc:	ldr	r0, [fp, #-16]
   10800:	bl	4960 <close@plt>
   10804:	mov	r3, #0
   10808:	b	108d4 <rb_socket+0x1ec>
   1080c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   10810:	mov	r1, #4
   10814:	ldr	r0, [fp, #-16]
   10818:	bl	4aa4 <rb_open@plt>
   1081c:	str	r0, [fp, #-20]	; 0xffffffec
   10820:	ldr	r3, [fp, #-20]	; 0xffffffec
   10824:	cmp	r3, #0
   10828:	bne	1086c <rb_socket+0x184>
   1082c:	bl	4d20 <__errno_location@plt>
   10830:	mov	r3, r0
   10834:	ldr	r3, [r3]
   10838:	mov	r0, r3
   1083c:	bl	43c0 <strerror@plt>
   10840:	mov	r3, r0
   10844:	mov	r2, r3
   10848:	ldr	r1, [fp, #-16]
   1084c:	ldr	r3, [pc, #168]	; 108fc <rb_socket+0x214>
   10850:	add	r3, pc, r3
   10854:	mov	r0, r3
   10858:	bl	493c <rb_lib_log@plt>
   1085c:	ldr	r0, [fp, #-16]
   10860:	bl	4960 <close@plt>
   10864:	mov	r3, #0
   10868:	b	108d4 <rb_socket+0x1ec>
   1086c:	ldr	r0, [fp, #-20]	; 0xffffffec
   10870:	bl	463c <rb_set_nb@plt>
   10874:	mov	r3, r0
   10878:	cmp	r3, #0
   1087c:	moveq	r3, #1
   10880:	movne	r3, #0
   10884:	uxtb	r3, r3
   10888:	cmp	r3, #0
   1088c:	beq	108d0 <rb_socket+0x1e8>
   10890:	bl	4d20 <__errno_location@plt>
   10894:	mov	r3, r0
   10898:	ldr	r3, [r3]
   1089c:	mov	r0, r3
   108a0:	bl	43c0 <strerror@plt>
   108a4:	mov	r3, r0
   108a8:	mov	r2, r3
   108ac:	ldr	r1, [fp, #-16]
   108b0:	ldr	r3, [pc, #72]	; 10900 <rb_socket+0x218>
   108b4:	add	r3, pc, r3
   108b8:	mov	r0, r3
   108bc:	bl	493c <rb_lib_log@plt>
   108c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   108c4:	bl	4888 <rb_close@plt>
   108c8:	mov	r3, #0
   108cc:	b	108d4 <rb_socket+0x1ec>
   108d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   108d4:	mov	r0, r3
   108d8:	sub	sp, fp, #8
   108dc:	ldr	r4, [sp]
   108e0:	ldr	fp, [sp, #4]
   108e4:	add	sp, sp, #8
   108e8:	pop	{pc}		; (ldr pc, [sp], #4)
   108ec:	.word	0x000248e8
   108f0:	.word	0x00037788
   108f4:	.word	0x000003a4
   108f8:	.word	0x0001300c
   108fc:	.word	0x00012ff0
   10900:	.word	0x00012f1c

00010904 <mangle_mapped_sockaddr>:
   10904:	str	r4, [sp, #-12]!
   10908:	str	fp, [sp, #4]
   1090c:	str	lr, [sp, #8]
   10910:	add	fp, sp, #8
   10914:	sub	sp, sp, #36	; 0x24
   10918:	str	r0, [fp, #-40]	; 0xffffffd8
   1091c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10920:	str	r3, [fp, #-16]
   10924:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10928:	ldrh	r3, [r3]
   1092c:	cmp	r3, #10
   10930:	bne	109e0 <mangle_mapped_sockaddr+0xdc>
   10934:	ldr	r3, [fp, #-16]
   10938:	add	r3, r3, #8
   1093c:	str	r3, [fp, #-20]	; 0xffffffec
   10940:	ldr	r3, [fp, #-20]	; 0xffffffec
   10944:	ldr	r3, [r3]
   10948:	cmp	r3, #0
   1094c:	bne	10984 <mangle_mapped_sockaddr+0x80>
   10950:	ldr	r3, [fp, #-20]	; 0xffffffec
   10954:	ldr	r3, [r3, #4]
   10958:	cmp	r3, #0
   1095c:	bne	10984 <mangle_mapped_sockaddr+0x80>
   10960:	ldr	r3, [fp, #-20]	; 0xffffffec
   10964:	ldr	r4, [r3, #8]
   10968:	movw	r0, #65535	; 0xffff
   1096c:	bl	4b40 <htonl@plt>
   10970:	mov	r3, r0
   10974:	cmp	r4, r3
   10978:	bne	10984 <mangle_mapped_sockaddr+0x80>
   1097c:	mov	r3, #1
   10980:	b	10988 <mangle_mapped_sockaddr+0x84>
   10984:	mov	r3, #0
   10988:	cmp	r3, #0
   1098c:	beq	109e0 <mangle_mapped_sockaddr+0xdc>
   10990:	sub	r3, fp, #36	; 0x24
   10994:	mov	r2, #16
   10998:	mov	r1, #0
   1099c:	mov	r0, r3
   109a0:	bl	4648 <memset@plt>
   109a4:	mov	r3, #2
   109a8:	strh	r3, [fp, #-36]	; 0xffffffdc
   109ac:	ldr	r3, [fp, #-16]
   109b0:	ldrh	r3, [r3, #2]
   109b4:	strh	r3, [fp, #-34]	; 0xffffffde
   109b8:	ldr	r3, [fp, #-16]
   109bc:	add	r3, r3, #8
   109c0:	add	r3, r3, #12
   109c4:	ldr	r3, [r3]
   109c8:	str	r3, [fp, #-32]	; 0xffffffe0
   109cc:	sub	r3, fp, #36	; 0x24
   109d0:	mov	r2, #16
   109d4:	mov	r1, r3
   109d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   109dc:	bl	4834 <memcpy@plt>
   109e0:	nop	{0}
   109e4:	sub	sp, fp, #8
   109e8:	ldr	r4, [sp]
   109ec:	ldr	fp, [sp, #4]
   109f0:	add	sp, sp, #8
   109f4:	pop	{pc}		; (ldr pc, [sp], #4)

000109f8 <rb_listen>:
   109f8:	str	fp, [sp, #-8]!
   109fc:	str	lr, [sp, #4]
   10a00:	add	fp, sp, #4
   10a04:	sub	sp, sp, #32
   10a08:	str	r0, [fp, #-16]
   10a0c:	str	r1, [fp, #-20]	; 0xffffffec
   10a10:	str	r2, [fp, #-24]	; 0xffffffe8
   10a14:	ldr	r3, [fp, #-16]
   10a18:	ldrb	r3, [r3, #17]
   10a1c:	sxtb	r3, r3
   10a20:	bic	r3, r3, #127	; 0x7f
   10a24:	sxtb	r3, r3
   10a28:	orr	r3, r3, #20
   10a2c:	sxtb	r3, r3
   10a30:	uxtb	r2, r3
   10a34:	ldr	r3, [fp, #-16]
   10a38:	strb	r2, [r3, #17]
   10a3c:	ldr	r3, [fp, #-16]
   10a40:	ldr	r3, [r3, #12]
   10a44:	ldr	r2, [fp, #-20]	; 0xffffffec
   10a48:	mov	r1, r2
   10a4c:	mov	r0, r3
   10a50:	bl	4600 <listen@plt>
   10a54:	str	r0, [fp, #-8]
   10a58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10a5c:	cmp	r3, #0
   10a60:	beq	10a94 <rb_listen+0x9c>
   10a64:	ldr	r3, [fp, #-8]
   10a68:	cmp	r3, #0
   10a6c:	bne	10a94 <rb_listen+0x9c>
   10a70:	ldr	r3, [fp, #-16]
   10a74:	ldr	r0, [r3, #12]
   10a78:	sub	r2, fp, #20
   10a7c:	mov	r3, #4
   10a80:	str	r3, [sp]
   10a84:	mov	r3, r2
   10a88:	mov	r2, #9
   10a8c:	mov	r1, #6
   10a90:	bl	4ccc <setsockopt@plt>
   10a94:	ldr	r3, [fp, #-8]
   10a98:	mov	r0, r3
   10a9c:	sub	sp, fp, #4
   10aa0:	ldr	fp, [sp]
   10aa4:	add	sp, sp, #4
   10aa8:	pop	{pc}		; (ldr pc, [sp], #4)

00010aac <rb_fdlist_init>:
   10aac:	str	fp, [sp, #-8]!
   10ab0:	str	lr, [sp, #4]
   10ab4:	add	fp, sp, #4
   10ab8:	sub	sp, sp, #16
   10abc:	str	r0, [fp, #-8]
   10ac0:	str	r1, [fp, #-12]
   10ac4:	str	r2, [fp, #-16]
   10ac8:	ldr	r2, [pc, #128]	; 10b50 <rb_fdlist_init+0xa4>
   10acc:	add	r2, pc, r2
   10ad0:	ldr	r3, [pc, #124]	; 10b54 <rb_fdlist_init+0xa8>
   10ad4:	add	r3, pc, r3
   10ad8:	ldr	r3, [r3]
   10adc:	cmp	r3, #0
   10ae0:	bne	10b14 <rb_fdlist_init+0x68>
   10ae4:	ldr	r3, [pc, #108]	; 10b58 <rb_fdlist_init+0xac>
   10ae8:	ldr	r3, [r2, r3]
   10aec:	ldr	r2, [fp, #-12]
   10af0:	str	r2, [r3]
   10af4:	ldr	r3, [fp, #-8]
   10af8:	cmp	r3, #0
   10afc:	beq	10b04 <rb_fdlist_init+0x58>
   10b00:	bl	f338 <rb_close_all>
   10b04:	ldr	r3, [pc, #80]	; 10b5c <rb_fdlist_init+0xb0>
   10b08:	add	r3, pc, r3
   10b0c:	mov	r2, #1
   10b10:	str	r2, [r3]
   10b14:	ldr	r3, [fp, #-16]
   10b18:	ldr	r2, [pc, #64]	; 10b60 <rb_fdlist_init+0xb4>
   10b1c:	add	r2, pc, r2
   10b20:	mov	r1, r3
   10b24:	mov	r0, #68	; 0x44
   10b28:	bl	4ad4 <rb_bh_create@plt>
   10b2c:	mov	r2, r0
   10b30:	ldr	r3, [pc, #44]	; 10b64 <rb_fdlist_init+0xb8>
   10b34:	add	r3, pc, r3
   10b38:	str	r2, [r3]
   10b3c:	nop	{0}
   10b40:	sub	sp, fp, #4
   10b44:	ldr	fp, [sp]
   10b48:	add	sp, sp, #4
   10b4c:	pop	{pc}		; (ldr pc, [sp], #4)
   10b50:	.word	0x0002452c
   10b54:	.word	0x00037408
   10b58:	.word	0x000003a4
   10b5c:	.word	0x000373d4
   10b60:	.word	0x00012d60
   10b64:	.word	0x0003734c

00010b68 <rb_open>:
   10b68:	str	fp, [sp, #-8]!
   10b6c:	str	lr, [sp, #4]
   10b70:	add	fp, sp, #4
   10b74:	sub	sp, sp, #24
   10b78:	str	r0, [fp, #-16]
   10b7c:	mov	r3, r1
   10b80:	str	r2, [fp, #-24]	; 0xffffffe8
   10b84:	strb	r3, [fp, #-17]	; 0xffffffef
   10b88:	ldr	r0, [fp, #-16]
   10b8c:	bl	f094 <add_fd>
   10b90:	str	r0, [fp, #-12]
   10b94:	ldr	r3, [fp, #-12]
   10b98:	ldrb	r3, [r3, #16]
   10b9c:	and	r3, r3, #1
   10ba0:	cmp	r3, #0
   10ba4:	movne	r3, #1
   10ba8:	moveq	r3, #0
   10bac:	uxtb	r3, r3
   10bb0:	cmp	r3, #0
   10bb4:	beq	10c10 <rb_open+0xa8>
   10bb8:	ldr	r3, [fp, #-12]
   10bbc:	cmp	r3, #0
   10bc0:	beq	10be4 <rb_open+0x7c>
   10bc4:	ldr	r3, [fp, #-12]
   10bc8:	ldr	r3, [r3, #24]
   10bcc:	cmp	r3, #0
   10bd0:	beq	10be4 <rb_open+0x7c>
   10bd4:	ldr	r3, [fp, #-12]
   10bd8:	ldr	r3, [r3, #24]
   10bdc:	str	r3, [fp, #-8]
   10be0:	b	10bf0 <rb_open+0x88>
   10be4:	ldr	r3, [pc, #172]	; 10c98 <rb_open+0x130>
   10be8:	add	r3, pc, r3
   10bec:	str	r3, [fp, #-8]
   10bf0:	ldr	r2, [fp, #-8]
   10bf4:	ldr	r1, [fp, #-16]
   10bf8:	ldr	r3, [pc, #156]	; 10c9c <rb_open+0x134>
   10bfc:	add	r3, pc, r3
   10c00:	mov	r0, r3
   10c04:	bl	493c <rb_lib_log@plt>
   10c08:	mov	r3, #0
   10c0c:	b	10c84 <rb_open+0x11c>
   10c10:	ldr	r3, [fp, #-12]
   10c14:	ldr	r2, [fp, #-16]
   10c18:	str	r2, [r3, #12]
   10c1c:	ldr	r3, [fp, #-12]
   10c20:	ldrb	r2, [fp, #-17]	; 0xffffffef
   10c24:	strb	r2, [r3, #17]
   10c28:	ldr	r3, [fp, #-12]
   10c2c:	ldrb	r3, [r3, #16]
   10c30:	orr	r3, r3, #1
   10c34:	uxtb	r2, r3
   10c38:	ldr	r3, [fp, #-12]
   10c3c:	strb	r2, [r3, #16]
   10c40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10c44:	cmp	r3, #0
   10c48:	beq	10c64 <rb_open+0xfc>
   10c4c:	mov	r1, #128	; 0x80
   10c50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10c54:	bl	eedc <rb_strndup>
   10c58:	mov	r2, r0
   10c5c:	ldr	r3, [fp, #-12]
   10c60:	str	r2, [r3, #24]
   10c64:	ldr	r3, [pc, #52]	; 10ca0 <rb_open+0x138>
   10c68:	add	r3, pc, r3
   10c6c:	ldr	r3, [r3]
   10c70:	add	r2, r3, #1
   10c74:	ldr	r3, [pc, #40]	; 10ca4 <rb_open+0x13c>
   10c78:	add	r3, pc, r3
   10c7c:	str	r2, [r3]
   10c80:	ldr	r3, [fp, #-12]
   10c84:	mov	r0, r3
   10c88:	sub	sp, fp, #4
   10c8c:	ldr	fp, [sp]
   10c90:	add	sp, sp, #4
   10c94:	pop	{pc}		; (ldr pc, [sp], #4)
   10c98:	.word	0x00012ca4
   10c9c:	.word	0x00012c98
   10ca0:	.word	0x00037238
   10ca4:	.word	0x00037228

00010ca8 <rb_close>:
   10ca8:	str	fp, [sp, #-8]!
   10cac:	str	lr, [sp, #4]
   10cb0:	add	fp, sp, #4
   10cb4:	sub	sp, sp, #16
   10cb8:	str	r0, [fp, #-16]
   10cbc:	ldr	r3, [fp, #-16]
   10cc0:	cmp	r3, #0
   10cc4:	beq	10dd4 <rb_close+0x12c>
   10cc8:	ldr	r3, [fp, #-16]
   10ccc:	ldr	r3, [r3, #12]
   10cd0:	str	r3, [fp, #-8]
   10cd4:	ldr	r3, [fp, #-16]
   10cd8:	ldrb	r3, [r3, #17]
   10cdc:	str	r3, [fp, #-12]
   10ce0:	ldr	r3, [fp, #-12]
   10ce4:	and	r3, r3, #2
   10ce8:	cmp	r3, #0
   10cec:	ldr	r3, [fp, #-12]
   10cf0:	and	r3, r3, #16
   10cf4:	cmp	r3, #0
   10cf8:	beq	10d10 <rb_close+0x68>
   10cfc:	ldr	r3, [fp, #-16]
   10d00:	ldr	r3, [r3, #12]
   10d04:	mov	r1, #0
   10d08:	mov	r0, r3
   10d0c:	bl	4600 <listen@plt>
   10d10:	mov	r3, #0
   10d14:	mov	r2, #0
   10d18:	mov	r1, #3
   10d1c:	ldr	r0, [fp, #-16]
   10d20:	bl	44c8 <rb_setselect@plt>
   10d24:	mov	r3, #0
   10d28:	mov	r2, #0
   10d2c:	mov	r1, #0
   10d30:	ldr	r0, [fp, #-16]
   10d34:	bl	4408 <rb_settimeout@plt>
   10d38:	ldr	r3, [fp, #-16]
   10d3c:	ldr	r3, [r3, #52]	; 0x34
   10d40:	mov	r0, r3
   10d44:	bl	ef4c <rb_free>
   10d48:	ldr	r3, [fp, #-16]
   10d4c:	ldr	r3, [r3, #48]	; 0x30
   10d50:	mov	r0, r3
   10d54:	bl	ef4c <rb_free>
   10d58:	ldr	r3, [fp, #-16]
   10d5c:	ldr	r3, [r3, #24]
   10d60:	mov	r0, r3
   10d64:	bl	ef4c <rb_free>
   10d68:	ldr	r3, [fp, #-12]
   10d6c:	and	r3, r3, #32
   10d70:	cmp	r3, #0
   10d74:	beq	10d80 <rb_close+0xd8>
   10d78:	ldr	r0, [fp, #-16]
   10d7c:	bl	14314 <rb_ssl_shutdown>
   10d80:	ldr	r3, [fp, #-16]
   10d84:	ldrb	r3, [r3, #16]
   10d88:	and	r3, r3, #1
   10d8c:	cmp	r3, #0
   10d90:	beq	10db4 <rb_close+0x10c>
   10d94:	ldr	r0, [fp, #-16]
   10d98:	bl	f174 <remove_fd>
   10d9c:	ldr	r3, [fp, #-16]
   10da0:	ldrb	r3, [r3, #16]
   10da4:	bic	r3, r3, #1
   10da8:	uxtb	r2, r3
   10dac:	ldr	r3, [fp, #-16]
   10db0:	strb	r2, [r3, #16]
   10db4:	ldr	r3, [fp, #-12]
   10db8:	and	r3, r3, #16
   10dbc:	cmp	r3, #0
   10dc0:	beq	10dd8 <rb_close+0x130>
   10dc4:	mov	r1, #2
   10dc8:	ldr	r0, [fp, #-8]
   10dcc:	bl	4924 <shutdown@plt>
   10dd0:	b	10dd8 <rb_close+0x130>
   10dd4:	nop	{0}
   10dd8:	sub	sp, fp, #4
   10ddc:	ldr	fp, [sp]
   10de0:	add	sp, sp, #4
   10de4:	pop	{pc}		; (ldr pc, [sp], #4)

00010de8 <rb_dump_fd>:
   10de8:	strd	r4, [sp, #-16]!
   10dec:	str	fp, [sp, #8]
   10df0:	str	lr, [sp, #12]
   10df4:	add	fp, sp, #12
   10df8:	sub	sp, sp, #24
   10dfc:	str	r0, [fp, #-32]	; 0xffffffe0
   10e00:	str	r1, [fp, #-36]	; 0xffffffdc
   10e04:	ldr	r4, [pc, #280]	; 10f24 <rb_dump_fd+0x13c>
   10e08:	add	r4, pc, r4
   10e0c:	mov	r3, #0
   10e10:	str	r3, [fp, #-20]	; 0xffffffec
   10e14:	b	10f00 <rb_dump_fd+0x118>
   10e18:	ldr	r3, [pc, #264]	; 10f28 <rb_dump_fd+0x140>
   10e1c:	ldr	r3, [r4, r3]
   10e20:	ldr	r1, [r3]
   10e24:	ldr	r2, [fp, #-20]	; 0xffffffec
   10e28:	mov	r3, r2
   10e2c:	lsl	r3, r3, #1
   10e30:	add	r3, r3, r2
   10e34:	lsl	r3, r3, #2
   10e38:	add	r3, r1, r3
   10e3c:	str	r3, [fp, #-24]	; 0xffffffe8
   10e40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10e44:	ldr	r3, [r3, #8]
   10e48:	cmp	r3, #0
   10e4c:	beq	10ef0 <rb_dump_fd+0x108>
   10e50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10e54:	ldr	r3, [r3]
   10e58:	str	r3, [fp, #-16]
   10e5c:	b	10ee0 <rb_dump_fd+0xf8>
   10e60:	ldr	r3, [fp, #-16]
   10e64:	ldr	r3, [r3]
   10e68:	str	r3, [fp, #-28]	; 0xffffffe4
   10e6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10e70:	cmp	r3, #0
   10e74:	beq	10ed0 <rb_dump_fd+0xe8>
   10e78:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10e7c:	ldrb	r3, [r3, #16]
   10e80:	and	r3, r3, #1
   10e84:	cmp	r3, #0
   10e88:	beq	10ed0 <rb_dump_fd+0xe8>
   10e8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10e90:	ldr	r0, [r3, #12]
   10e94:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10e98:	ldr	r3, [r3, #24]
   10e9c:	cmp	r3, #0
   10ea0:	beq	10eb0 <rb_dump_fd+0xc8>
   10ea4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10ea8:	ldr	r3, [r3, #24]
   10eac:	b	10ebc <rb_dump_fd+0xd4>
   10eb0:	ldr	r3, [pc, #116]	; 10f2c <rb_dump_fd+0x144>
   10eb4:	add	r3, pc, r3
   10eb8:	ldr	r3, [r3]
   10ebc:	ldr	r5, [fp, #-32]	; 0xffffffe0
   10ec0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   10ec4:	mov	r1, r3
   10ec8:	blx	r5
   10ecc:	b	10ed4 <rb_dump_fd+0xec>
   10ed0:	nop	{0}
   10ed4:	ldr	r3, [fp, #-16]
   10ed8:	ldr	r3, [r3, #8]
   10edc:	str	r3, [fp, #-16]
   10ee0:	ldr	r3, [fp, #-16]
   10ee4:	cmp	r3, #0
   10ee8:	bne	10e60 <rb_dump_fd+0x78>
   10eec:	b	10ef4 <rb_dump_fd+0x10c>
   10ef0:	nop	{0}
   10ef4:	ldr	r3, [fp, #-20]	; 0xffffffec
   10ef8:	add	r3, r3, #1
   10efc:	str	r3, [fp, #-20]	; 0xffffffec
   10f00:	ldr	r3, [fp, #-20]	; 0xffffffec
   10f04:	cmp	r3, #4096	; 0x1000
   10f08:	bcc	10e18 <rb_dump_fd+0x30>
   10f0c:	nop	{0}
   10f10:	sub	sp, fp, #12
   10f14:	ldrd	r4, [sp]
   10f18:	ldr	fp, [sp, #8]
   10f1c:	add	sp, sp, #12
   10f20:	pop	{pc}		; (ldr pc, [sp], #4)
   10f24:	.word	0x000241f0
   10f28:	.word	0x000003c4
   10f2c:	.word	0x000249d4

00010f30 <rb_note>:
   10f30:	str	fp, [sp, #-8]!
   10f34:	str	lr, [sp, #4]
   10f38:	add	fp, sp, #4
   10f3c:	sub	sp, sp, #8
   10f40:	str	r0, [fp, #-8]
   10f44:	str	r1, [fp, #-12]
   10f48:	ldr	r3, [fp, #-8]
   10f4c:	cmp	r3, #0
   10f50:	beq	10f80 <rb_note+0x50>
   10f54:	ldr	r3, [fp, #-8]
   10f58:	ldr	r3, [r3, #24]
   10f5c:	mov	r0, r3
   10f60:	bl	ef4c <rb_free>
   10f64:	mov	r1, #128	; 0x80
   10f68:	ldr	r0, [fp, #-12]
   10f6c:	bl	eedc <rb_strndup>
   10f70:	mov	r2, r0
   10f74:	ldr	r3, [fp, #-8]
   10f78:	str	r2, [r3, #24]
   10f7c:	b	10f84 <rb_note+0x54>
   10f80:	nop	{0}
   10f84:	sub	sp, fp, #4
   10f88:	ldr	fp, [sp]
   10f8c:	add	sp, sp, #4
   10f90:	pop	{pc}		; (ldr pc, [sp], #4)

00010f94 <rb_set_type>:
   10f94:	push	{fp}		; (str fp, [sp, #-4]!)
   10f98:	add	fp, sp, #0
   10f9c:	sub	sp, sp, #12
   10fa0:	str	r0, [fp, #-8]
   10fa4:	mov	r3, r1
   10fa8:	strb	r3, [fp, #-9]
   10fac:	ldr	r3, [fp, #-8]
   10fb0:	ldrb	r2, [fp, #-9]
   10fb4:	strb	r2, [r3, #17]
   10fb8:	nop	{0}
   10fbc:	add	sp, fp, #0
   10fc0:	pop	{fp}		; (ldr fp, [sp], #4)
   10fc4:	bx	lr

00010fc8 <rb_get_type>:
   10fc8:	push	{fp}		; (str fp, [sp, #-4]!)
   10fcc:	add	fp, sp, #0
   10fd0:	sub	sp, sp, #12
   10fd4:	str	r0, [fp, #-8]
   10fd8:	ldr	r3, [fp, #-8]
   10fdc:	ldrb	r3, [r3, #17]
   10fe0:	mov	r0, r3
   10fe4:	add	sp, fp, #0
   10fe8:	pop	{fp}		; (ldr fp, [sp], #4)
   10fec:	bx	lr

00010ff0 <rb_fd_ssl>:
   10ff0:	push	{fp}		; (str fp, [sp, #-4]!)
   10ff4:	add	fp, sp, #0
   10ff8:	sub	sp, sp, #12
   10ffc:	str	r0, [fp, #-8]
   11000:	ldr	r3, [fp, #-8]
   11004:	cmp	r3, #0
   11008:	bne	11014 <rb_fd_ssl+0x24>
   1100c:	mov	r3, #0
   11010:	b	11034 <rb_fd_ssl+0x44>
   11014:	ldr	r3, [fp, #-8]
   11018:	ldrb	r3, [r3, #17]
   1101c:	and	r3, r3, #32
   11020:	cmp	r3, #0
   11024:	beq	11030 <rb_fd_ssl+0x40>
   11028:	mov	r3, #1
   1102c:	b	11034 <rb_fd_ssl+0x44>
   11030:	mov	r3, #0
   11034:	mov	r0, r3
   11038:	add	sp, fp, #0
   1103c:	pop	{fp}		; (ldr fp, [sp], #4)
   11040:	bx	lr

00011044 <rb_get_fd>:
   11044:	push	{fp}		; (str fp, [sp, #-4]!)
   11048:	add	fp, sp, #0
   1104c:	sub	sp, sp, #12
   11050:	str	r0, [fp, #-8]
   11054:	ldr	r3, [fp, #-8]
   11058:	cmp	r3, #0
   1105c:	bne	11068 <rb_get_fd+0x24>
   11060:	mvn	r3, #0
   11064:	b	11070 <rb_get_fd+0x2c>
   11068:	ldr	r3, [fp, #-8]
   1106c:	ldr	r3, [r3, #12]
   11070:	mov	r0, r3
   11074:	add	sp, fp, #0
   11078:	pop	{fp}		; (ldr fp, [sp], #4)
   1107c:	bx	lr

00011080 <rb_get_fde>:
   11080:	str	fp, [sp, #-8]!
   11084:	str	lr, [sp, #4]
   11088:	add	fp, sp, #4
   1108c:	sub	sp, sp, #8
   11090:	str	r0, [fp, #-8]
   11094:	ldr	r0, [fp, #-8]
   11098:	bl	ef98 <rb_find_fd>
   1109c:	mov	r3, r0
   110a0:	mov	r0, r3
   110a4:	sub	sp, fp, #4
   110a8:	ldr	fp, [sp]
   110ac:	add	sp, sp, #4
   110b0:	pop	{pc}		; (ldr pc, [sp], #4)

000110b4 <rb_read>:
   110b4:	str	fp, [sp, #-8]!
   110b8:	str	lr, [sp, #4]
   110bc:	add	fp, sp, #4
   110c0:	sub	sp, sp, #24
   110c4:	str	r0, [fp, #-16]
   110c8:	str	r1, [fp, #-20]	; 0xffffffec
   110cc:	str	r2, [fp, #-24]	; 0xffffffe8
   110d0:	ldr	r3, [fp, #-16]
   110d4:	cmp	r3, #0
   110d8:	bne	110e4 <rb_read+0x30>
   110dc:	mov	r3, #0
   110e0:	b	11168 <rb_read+0xb4>
   110e4:	ldr	r3, [fp, #-16]
   110e8:	ldrb	r3, [r3, #17]
   110ec:	and	r3, r3, #32
   110f0:	cmp	r3, #0
   110f4:	beq	11114 <rb_read+0x60>
   110f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   110fc:	mov	r2, r3
   11100:	ldr	r1, [fp, #-20]	; 0xffffffec
   11104:	ldr	r0, [fp, #-16]
   11108:	bl	14dbc <rb_ssl_read>
   1110c:	mov	r3, r0
   11110:	b	11168 <rb_read+0xb4>
   11114:	ldr	r3, [fp, #-16]
   11118:	ldrb	r3, [r3, #17]
   1111c:	and	r3, r3, #4
   11120:	cmp	r3, #0
   11124:	beq	1114c <rb_read+0x98>
   11128:	ldr	r3, [fp, #-16]
   1112c:	ldr	r0, [r3, #12]
   11130:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11134:	mov	r3, #0
   11138:	ldr	r1, [fp, #-20]	; 0xffffffec
   1113c:	bl	45ac <recv@plt>
   11140:	str	r0, [fp, #-8]
   11144:	ldr	r3, [fp, #-8]
   11148:	b	11168 <rb_read+0xb4>
   1114c:	ldr	r3, [fp, #-16]
   11150:	ldr	r3, [r3, #12]
   11154:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11158:	ldr	r1, [fp, #-20]	; 0xffffffec
   1115c:	mov	r0, r3
   11160:	bl	4738 <read@plt>
   11164:	mov	r3, r0
   11168:	mov	r0, r3
   1116c:	sub	sp, fp, #4
   11170:	ldr	fp, [sp]
   11174:	add	sp, sp, #4
   11178:	pop	{pc}		; (ldr pc, [sp], #4)

0001117c <rb_write>:
   1117c:	str	fp, [sp, #-8]!
   11180:	str	lr, [sp, #4]
   11184:	add	fp, sp, #4
   11188:	sub	sp, sp, #24
   1118c:	str	r0, [fp, #-16]
   11190:	str	r1, [fp, #-20]	; 0xffffffec
   11194:	str	r2, [fp, #-24]	; 0xffffffe8
   11198:	ldr	r3, [fp, #-16]
   1119c:	cmp	r3, #0
   111a0:	bne	111ac <rb_write+0x30>
   111a4:	mov	r3, #0
   111a8:	b	11230 <rb_write+0xb4>
   111ac:	ldr	r3, [fp, #-16]
   111b0:	ldrb	r3, [r3, #17]
   111b4:	and	r3, r3, #32
   111b8:	cmp	r3, #0
   111bc:	beq	111dc <rb_write+0x60>
   111c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   111c4:	mov	r2, r3
   111c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   111cc:	ldr	r0, [fp, #-16]
   111d0:	bl	14e0c <rb_ssl_write>
   111d4:	mov	r3, r0
   111d8:	b	11230 <rb_write+0xb4>
   111dc:	ldr	r3, [fp, #-16]
   111e0:	ldrb	r3, [r3, #17]
   111e4:	and	r3, r3, #4
   111e8:	cmp	r3, #0
   111ec:	beq	11214 <rb_write+0x98>
   111f0:	ldr	r3, [fp, #-16]
   111f4:	ldr	r0, [r3, #12]
   111f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   111fc:	mov	r3, #16384	; 0x4000
   11200:	ldr	r1, [fp, #-20]	; 0xffffffec
   11204:	bl	4abc <send@plt>
   11208:	str	r0, [fp, #-8]
   1120c:	ldr	r3, [fp, #-8]
   11210:	b	11230 <rb_write+0xb4>
   11214:	ldr	r3, [fp, #-16]
   11218:	ldr	r3, [r3, #12]
   1121c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11220:	ldr	r1, [fp, #-20]	; 0xffffffec
   11224:	mov	r0, r3
   11228:	bl	4750 <write@plt>
   1122c:	mov	r3, r0
   11230:	mov	r0, r3
   11234:	sub	sp, fp, #4
   11238:	ldr	fp, [sp]
   1123c:	add	sp, sp, #4
   11240:	pop	{pc}		; (ldr pc, [sp], #4)

00011244 <rb_fake_writev>:
   11244:	str	fp, [sp, #-8]!
   11248:	str	lr, [sp, #4]
   1124c:	add	fp, sp, #4
   11250:	sub	sp, sp, #24
   11254:	str	r0, [fp, #-16]
   11258:	str	r1, [fp, #-20]	; 0xffffffec
   1125c:	str	r2, [fp, #-24]	; 0xffffffe8
   11260:	mov	r3, #0
   11264:	str	r3, [fp, #-8]
   11268:	b	112d0 <rb_fake_writev+0x8c>
   1126c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11270:	ldr	r1, [r3]
   11274:	ldr	r3, [fp, #-20]	; 0xffffffec
   11278:	ldr	r3, [r3, #4]
   1127c:	mov	r2, r3
   11280:	ldr	r0, [fp, #-16]
   11284:	bl	4678 <rb_write@plt>
   11288:	str	r0, [fp, #-12]
   1128c:	ldr	r3, [fp, #-12]
   11290:	cmp	r3, #0
   11294:	bgt	112b4 <rb_fake_writev+0x70>
   11298:	ldr	r3, [fp, #-8]
   1129c:	cmp	r3, #0
   112a0:	ble	112ac <rb_fake_writev+0x68>
   112a4:	ldr	r3, [fp, #-8]
   112a8:	b	112e8 <rb_fake_writev+0xa4>
   112ac:	ldr	r3, [fp, #-12]
   112b0:	b	112e8 <rb_fake_writev+0xa4>
   112b4:	ldr	r2, [fp, #-8]
   112b8:	ldr	r3, [fp, #-12]
   112bc:	add	r3, r2, r3
   112c0:	str	r3, [fp, #-8]
   112c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   112c8:	add	r3, r3, #8
   112cc:	str	r3, [fp, #-20]	; 0xffffffec
   112d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   112d4:	sub	r2, r3, #1
   112d8:	str	r2, [fp, #-24]	; 0xffffffe8
   112dc:	cmp	r3, #0
   112e0:	bne	1126c <rb_fake_writev+0x28>
   112e4:	ldr	r3, [fp, #-8]
   112e8:	mov	r0, r3
   112ec:	sub	sp, fp, #4
   112f0:	ldr	fp, [sp]
   112f4:	add	sp, sp, #4
   112f8:	pop	{pc}		; (ldr pc, [sp], #4)

000112fc <rb_writev>:
   112fc:	str	fp, [sp, #-8]!
   11300:	str	lr, [sp, #4]
   11304:	add	fp, sp, #4
   11308:	sub	sp, sp, #48	; 0x30
   1130c:	str	r0, [fp, #-40]	; 0xffffffd8
   11310:	str	r1, [fp, #-44]	; 0xffffffd4
   11314:	str	r2, [fp, #-48]	; 0xffffffd0
   11318:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1131c:	cmp	r3, #0
   11320:	bne	1133c <rb_writev+0x40>
   11324:	bl	4d20 <__errno_location@plt>
   11328:	mov	r2, r0
   1132c:	mov	r3, #9
   11330:	str	r3, [r2]
   11334:	mvn	r3, #0
   11338:	b	113e0 <rb_writev+0xe4>
   1133c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11340:	ldrb	r3, [r3, #17]
   11344:	and	r3, r3, #32
   11348:	cmp	r3, #0
   1134c:	beq	1136c <rb_writev+0x70>
   11350:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11354:	mov	r2, r3
   11358:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1135c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11360:	bl	11244 <rb_fake_writev>
   11364:	mov	r3, r0
   11368:	b	113e0 <rb_writev+0xe4>
   1136c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11370:	ldrb	r3, [r3, #17]
   11374:	and	r3, r3, #4
   11378:	cmp	r3, #0
   1137c:	beq	113c4 <rb_writev+0xc8>
   11380:	sub	r3, fp, #32
   11384:	mov	r2, #28
   11388:	mov	r1, #0
   1138c:	mov	r0, r3
   11390:	bl	4648 <memset@plt>
   11394:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11398:	str	r3, [fp, #-24]	; 0xffffffe8
   1139c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   113a0:	str	r3, [fp, #-20]	; 0xffffffec
   113a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   113a8:	ldr	r3, [r3, #12]
   113ac:	sub	r1, fp, #32
   113b0:	mov	r2, #16384	; 0x4000
   113b4:	mov	r0, r3
   113b8:	bl	472c <sendmsg@plt>
   113bc:	mov	r3, r0
   113c0:	b	113e0 <rb_writev+0xe4>
   113c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   113c8:	ldr	r3, [r3, #12]
   113cc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   113d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   113d4:	mov	r0, r3
   113d8:	bl	46a8 <writev@plt>
   113dc:	mov	r3, r0
   113e0:	mov	r0, r3
   113e4:	sub	sp, fp, #4
   113e8:	ldr	fp, [sp]
   113ec:	add	sp, sp, #4
   113f0:	pop	{pc}		; (ldr pc, [sp], #4)

000113f4 <inetntoa>:
   113f4:	push	{fp}		; (str fp, [sp, #-4]!)
   113f8:	add	fp, sp, #0
   113fc:	sub	sp, sp, #28
   11400:	str	r0, [fp, #-24]	; 0xffffffe8
   11404:	ldr	r3, [pc, #452]	; 115d0 <inetntoa+0x1dc>
   11408:	add	r3, pc, r3
   1140c:	str	r3, [fp, #-8]
   11410:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11414:	str	r3, [fp, #-16]
   11418:	ldr	r3, [fp, #-16]
   1141c:	add	r2, r3, #1
   11420:	str	r2, [fp, #-16]
   11424:	ldrb	r3, [r3]
   11428:	mov	r2, r3
   1142c:	ldr	r3, [pc, #416]	; 115d4 <inetntoa+0x1e0>
   11430:	add	r3, pc, r3
   11434:	ldr	r3, [r3, r2, lsl #2]
   11438:	str	r3, [fp, #-12]
   1143c:	b	11460 <inetntoa+0x6c>
   11440:	ldr	r2, [fp, #-12]
   11444:	add	r3, r2, #1
   11448:	str	r3, [fp, #-12]
   1144c:	ldr	r3, [fp, #-8]
   11450:	add	r1, r3, #1
   11454:	str	r1, [fp, #-8]
   11458:	ldrb	r2, [r2]
   1145c:	strb	r2, [r3]
   11460:	ldr	r3, [fp, #-12]
   11464:	ldrb	r3, [r3]
   11468:	cmp	r3, #0
   1146c:	bne	11440 <inetntoa+0x4c>
   11470:	ldr	r3, [fp, #-8]
   11474:	add	r2, r3, #1
   11478:	str	r2, [fp, #-8]
   1147c:	mov	r2, #46	; 0x2e
   11480:	strb	r2, [r3]
   11484:	ldr	r3, [fp, #-16]
   11488:	add	r2, r3, #1
   1148c:	str	r2, [fp, #-16]
   11490:	ldrb	r3, [r3]
   11494:	mov	r2, r3
   11498:	ldr	r3, [pc, #312]	; 115d8 <inetntoa+0x1e4>
   1149c:	add	r3, pc, r3
   114a0:	ldr	r3, [r3, r2, lsl #2]
   114a4:	str	r3, [fp, #-12]
   114a8:	b	114cc <inetntoa+0xd8>
   114ac:	ldr	r2, [fp, #-12]
   114b0:	add	r3, r2, #1
   114b4:	str	r3, [fp, #-12]
   114b8:	ldr	r3, [fp, #-8]
   114bc:	add	r1, r3, #1
   114c0:	str	r1, [fp, #-8]
   114c4:	ldrb	r2, [r2]
   114c8:	strb	r2, [r3]
   114cc:	ldr	r3, [fp, #-12]
   114d0:	ldrb	r3, [r3]
   114d4:	cmp	r3, #0
   114d8:	bne	114ac <inetntoa+0xb8>
   114dc:	ldr	r3, [fp, #-8]
   114e0:	add	r2, r3, #1
   114e4:	str	r2, [fp, #-8]
   114e8:	mov	r2, #46	; 0x2e
   114ec:	strb	r2, [r3]
   114f0:	ldr	r3, [fp, #-16]
   114f4:	add	r2, r3, #1
   114f8:	str	r2, [fp, #-16]
   114fc:	ldrb	r3, [r3]
   11500:	mov	r2, r3
   11504:	ldr	r3, [pc, #208]	; 115dc <inetntoa+0x1e8>
   11508:	add	r3, pc, r3
   1150c:	ldr	r3, [r3, r2, lsl #2]
   11510:	str	r3, [fp, #-12]
   11514:	b	11538 <inetntoa+0x144>
   11518:	ldr	r2, [fp, #-12]
   1151c:	add	r3, r2, #1
   11520:	str	r3, [fp, #-12]
   11524:	ldr	r3, [fp, #-8]
   11528:	add	r1, r3, #1
   1152c:	str	r1, [fp, #-8]
   11530:	ldrb	r2, [r2]
   11534:	strb	r2, [r3]
   11538:	ldr	r3, [fp, #-12]
   1153c:	ldrb	r3, [r3]
   11540:	cmp	r3, #0
   11544:	bne	11518 <inetntoa+0x124>
   11548:	ldr	r3, [fp, #-8]
   1154c:	add	r2, r3, #1
   11550:	str	r2, [fp, #-8]
   11554:	mov	r2, #46	; 0x2e
   11558:	strb	r2, [r3]
   1155c:	ldr	r3, [fp, #-16]
   11560:	ldrb	r3, [r3]
   11564:	mov	r2, r3
   11568:	ldr	r3, [pc, #112]	; 115e0 <inetntoa+0x1ec>
   1156c:	add	r3, pc, r3
   11570:	ldr	r3, [r3, r2, lsl #2]
   11574:	str	r3, [fp, #-12]
   11578:	b	1159c <inetntoa+0x1a8>
   1157c:	ldr	r2, [fp, #-12]
   11580:	add	r3, r2, #1
   11584:	str	r3, [fp, #-12]
   11588:	ldr	r3, [fp, #-8]
   1158c:	add	r1, r3, #1
   11590:	str	r1, [fp, #-8]
   11594:	ldrb	r2, [r2]
   11598:	strb	r2, [r3]
   1159c:	ldr	r3, [fp, #-12]
   115a0:	ldrb	r3, [r3]
   115a4:	cmp	r3, #0
   115a8:	bne	1157c <inetntoa+0x188>
   115ac:	ldr	r3, [fp, #-8]
   115b0:	mov	r2, #0
   115b4:	strb	r2, [r3]
   115b8:	ldr	r3, [pc, #36]	; 115e4 <inetntoa+0x1f0>
   115bc:	add	r3, pc, r3
   115c0:	mov	r0, r3
   115c4:	add	sp, fp, #0
   115c8:	pop	{fp}		; (ldr fp, [sp], #4)
   115cc:	bx	lr
   115d0:	.word	0x00036ad8
   115d4:	.word	0x00024058
   115d8:	.word	0x00023fec
   115dc:	.word	0x00023f80
   115e0:	.word	0x00023f1c
   115e4:	.word	0x00036924

000115e8 <inet_ntop4>:
   115e8:	str	fp, [sp, #-8]!
   115ec:	str	lr, [sp, #4]
   115f0:	add	fp, sp, #4
   115f4:	sub	sp, sp, #16
   115f8:	str	r0, [fp, #-8]
   115fc:	str	r1, [fp, #-12]
   11600:	str	r2, [fp, #-16]
   11604:	ldr	r3, [fp, #-16]
   11608:	cmp	r3, #15
   1160c:	bhi	11618 <inet_ntop4+0x30>
   11610:	mov	r3, #0
   11614:	b	11634 <inet_ntop4+0x4c>
   11618:	ldr	r0, [fp, #-8]
   1161c:	bl	113f4 <inetntoa>
   11620:	mov	r3, r0
   11624:	mov	r1, r3
   11628:	ldr	r0, [fp, #-12]
   1162c:	bl	48ac <strcpy@plt>
   11630:	mov	r3, r0
   11634:	mov	r0, r3
   11638:	sub	sp, fp, #4
   1163c:	ldr	fp, [sp]
   11640:	add	sp, sp, #4
   11644:	pop	{pc}		; (ldr pc, [sp], #4)

00011648 <inet_ntop6>:
   11648:	str	fp, [sp, #-8]!
   1164c:	str	lr, [sp, #4]
   11650:	add	fp, sp, #4
   11654:	sub	sp, sp, #120	; 0x78
   11658:	str	r0, [fp, #-112]	; 0xffffff90
   1165c:	str	r1, [fp, #-116]	; 0xffffff8c
   11660:	str	r2, [fp, #-120]	; 0xffffff88
   11664:	sub	r3, fp, #108	; 0x6c
   11668:	mov	r2, #32
   1166c:	mov	r1, #0
   11670:	mov	r0, r3
   11674:	bl	4648 <memset@plt>
   11678:	mov	r3, #0
   1167c:	str	r3, [fp, #-12]
   11680:	b	116e0 <inet_ntop6+0x98>
   11684:	ldr	r3, [fp, #-12]
   11688:	ldr	r2, [fp, #-112]	; 0xffffff90
   1168c:	add	r3, r2, r3
   11690:	ldrb	r3, [r3]
   11694:	lsl	r3, r3, #8
   11698:	ldr	r2, [fp, #-12]
   1169c:	add	r2, r2, #1
   116a0:	ldr	r1, [fp, #-112]	; 0xffffff90
   116a4:	add	r2, r1, r2
   116a8:	ldrb	r2, [r2]
   116ac:	orr	r1, r3, r2
   116b0:	ldr	r3, [fp, #-12]
   116b4:	lsr	r2, r3, #31
   116b8:	add	r3, r2, r3
   116bc:	asr	r3, r3, #1
   116c0:	mov	r2, r1
   116c4:	lsl	r3, r3, #2
   116c8:	sub	r1, fp, #4
   116cc:	add	r3, r1, r3
   116d0:	str	r2, [r3, #-104]	; 0xffffff98
   116d4:	ldr	r3, [fp, #-12]
   116d8:	add	r3, r3, #2
   116dc:	str	r3, [fp, #-12]
   116e0:	ldr	r3, [fp, #-12]
   116e4:	cmp	r3, #15
   116e8:	ble	11684 <inet_ntop6+0x3c>
   116ec:	mvn	r3, #0
   116f0:	str	r3, [fp, #-68]	; 0xffffffbc
   116f4:	mov	r3, #0
   116f8:	str	r3, [fp, #-64]	; 0xffffffc0
   116fc:	mvn	r3, #0
   11700:	str	r3, [fp, #-76]	; 0xffffffb4
   11704:	mov	r3, #0
   11708:	str	r3, [fp, #-72]	; 0xffffffb8
   1170c:	mov	r3, #0
   11710:	str	r3, [fp, #-12]
   11714:	b	117b0 <inet_ntop6+0x168>
   11718:	ldr	r3, [fp, #-12]
   1171c:	lsl	r3, r3, #2
   11720:	sub	r2, fp, #4
   11724:	add	r3, r2, r3
   11728:	ldr	r3, [r3, #-104]	; 0xffffff98
   1172c:	cmp	r3, #0
   11730:	bne	11764 <inet_ntop6+0x11c>
   11734:	ldr	r3, [fp, #-76]	; 0xffffffb4
   11738:	cmn	r3, #1
   1173c:	bne	11754 <inet_ntop6+0x10c>
   11740:	ldr	r3, [fp, #-12]
   11744:	str	r3, [fp, #-76]	; 0xffffffb4
   11748:	mov	r3, #1
   1174c:	str	r3, [fp, #-72]	; 0xffffffb8
   11750:	b	117a4 <inet_ntop6+0x15c>
   11754:	ldr	r3, [fp, #-72]	; 0xffffffb8
   11758:	add	r3, r3, #1
   1175c:	str	r3, [fp, #-72]	; 0xffffffb8
   11760:	b	117a4 <inet_ntop6+0x15c>
   11764:	ldr	r3, [fp, #-76]	; 0xffffffb4
   11768:	cmn	r3, #1
   1176c:	beq	117a4 <inet_ntop6+0x15c>
   11770:	ldr	r3, [fp, #-68]	; 0xffffffbc
   11774:	cmn	r3, #1
   11778:	beq	1178c <inet_ntop6+0x144>
   1177c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   11780:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11784:	cmp	r2, r3
   11788:	ble	1179c <inet_ntop6+0x154>
   1178c:	sub	r1, fp, #68	; 0x44
   11790:	sub	r3, fp, #76	; 0x4c
   11794:	ldrd	r2, [r3]
   11798:	strd	r2, [r1]
   1179c:	mvn	r3, #0
   117a0:	str	r3, [fp, #-76]	; 0xffffffb4
   117a4:	ldr	r3, [fp, #-12]
   117a8:	add	r3, r3, #1
   117ac:	str	r3, [fp, #-12]
   117b0:	ldr	r3, [fp, #-12]
   117b4:	cmp	r3, #7
   117b8:	ble	11718 <inet_ntop6+0xd0>
   117bc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   117c0:	cmn	r3, #1
   117c4:	beq	117f4 <inet_ntop6+0x1ac>
   117c8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   117cc:	cmn	r3, #1
   117d0:	beq	117e4 <inet_ntop6+0x19c>
   117d4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   117d8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   117dc:	cmp	r2, r3
   117e0:	ble	117f4 <inet_ntop6+0x1ac>
   117e4:	sub	r1, fp, #68	; 0x44
   117e8:	sub	r3, fp, #76	; 0x4c
   117ec:	ldrd	r2, [r3]
   117f0:	strd	r2, [r1]
   117f4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   117f8:	cmn	r3, #1
   117fc:	beq	11814 <inet_ntop6+0x1cc>
   11800:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11804:	cmp	r3, #1
   11808:	bgt	11814 <inet_ntop6+0x1cc>
   1180c:	mvn	r3, #0
   11810:	str	r3, [fp, #-68]	; 0xffffffbc
   11814:	sub	r3, fp, #60	; 0x3c
   11818:	str	r3, [fp, #-8]
   1181c:	mov	r3, #0
   11820:	str	r3, [fp, #-12]
   11824:	b	119ac <inet_ntop6+0x364>
   11828:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1182c:	cmn	r3, #1
   11830:	beq	118a4 <inet_ntop6+0x25c>
   11834:	ldr	r3, [fp, #-68]	; 0xffffffbc
   11838:	ldr	r2, [fp, #-12]
   1183c:	cmp	r2, r3
   11840:	blt	118a4 <inet_ntop6+0x25c>
   11844:	ldr	r2, [fp, #-68]	; 0xffffffbc
   11848:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1184c:	add	r3, r2, r3
   11850:	ldr	r2, [fp, #-12]
   11854:	cmp	r2, r3
   11858:	bge	118a4 <inet_ntop6+0x25c>
   1185c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   11860:	ldr	r2, [fp, #-12]
   11864:	cmp	r2, r3
   11868:	bne	1199c <inet_ntop6+0x354>
   1186c:	ldr	r3, [fp, #-12]
   11870:	cmp	r3, #0
   11874:	bne	1188c <inet_ntop6+0x244>
   11878:	ldr	r3, [fp, #-8]
   1187c:	add	r2, r3, #1
   11880:	str	r2, [fp, #-8]
   11884:	mov	r2, #48	; 0x30
   11888:	strb	r2, [r3]
   1188c:	ldr	r3, [fp, #-8]
   11890:	add	r2, r3, #1
   11894:	str	r2, [fp, #-8]
   11898:	mov	r2, #58	; 0x3a
   1189c:	strb	r2, [r3]
   118a0:	b	1199c <inet_ntop6+0x354>
   118a4:	ldr	r3, [fp, #-12]
   118a8:	cmp	r3, #0
   118ac:	beq	118c4 <inet_ntop6+0x27c>
   118b0:	ldr	r3, [fp, #-8]
   118b4:	add	r2, r3, #1
   118b8:	str	r2, [fp, #-8]
   118bc:	mov	r2, #58	; 0x3a
   118c0:	strb	r2, [r3]
   118c4:	ldr	r3, [fp, #-12]
   118c8:	cmp	r3, #6
   118cc:	bne	11958 <inet_ntop6+0x310>
   118d0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   118d4:	cmp	r3, #0
   118d8:	bne	11958 <inet_ntop6+0x310>
   118dc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   118e0:	cmp	r3, #6
   118e4:	beq	11904 <inet_ntop6+0x2bc>
   118e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   118ec:	cmp	r3, #5
   118f0:	bne	11958 <inet_ntop6+0x310>
   118f4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   118f8:	movw	r2, #65535	; 0xffff
   118fc:	cmp	r3, r2
   11900:	bne	11958 <inet_ntop6+0x310>
   11904:	ldr	r3, [fp, #-112]	; 0xffffff90
   11908:	add	r0, r3, #12
   1190c:	sub	r3, fp, #60	; 0x3c
   11910:	ldr	r2, [fp, #-8]
   11914:	sub	r3, r2, r3
   11918:	rsb	r3, r3, #46	; 0x2e
   1191c:	mov	r2, r3
   11920:	ldr	r1, [fp, #-8]
   11924:	bl	115e8 <inet_ntop4>
   11928:	mov	r3, r0
   1192c:	cmp	r3, #0
   11930:	bne	1193c <inet_ntop6+0x2f4>
   11934:	mov	r3, #0
   11938:	b	11a48 <inet_ntop6+0x400>
   1193c:	ldr	r0, [fp, #-8]
   11940:	bl	4810 <strlen@plt>
   11944:	mov	r2, r0
   11948:	ldr	r3, [fp, #-8]
   1194c:	add	r3, r3, r2
   11950:	str	r3, [fp, #-8]
   11954:	b	119b8 <inet_ntop6+0x370>
   11958:	ldr	r3, [fp, #-12]
   1195c:	lsl	r3, r3, #2
   11960:	sub	r2, fp, #4
   11964:	add	r3, r2, r3
   11968:	ldr	r3, [r3, #-104]	; 0xffffff98
   1196c:	mov	r2, r3
   11970:	ldr	r3, [pc, #228]	; 11a5c <inet_ntop6+0x414>
   11974:	add	r3, pc, r3
   11978:	mov	r1, r3
   1197c:	ldr	r0, [fp, #-8]
   11980:	bl	4d38 <sprintf@plt>
   11984:	mov	r3, r0
   11988:	mov	r2, r3
   1198c:	ldr	r3, [fp, #-8]
   11990:	add	r3, r3, r2
   11994:	str	r3, [fp, #-8]
   11998:	b	119a0 <inet_ntop6+0x358>
   1199c:	nop	{0}
   119a0:	ldr	r3, [fp, #-12]
   119a4:	add	r3, r3, #1
   119a8:	str	r3, [fp, #-12]
   119ac:	ldr	r3, [fp, #-12]
   119b0:	cmp	r3, #7
   119b4:	ble	11828 <inet_ntop6+0x1e0>
   119b8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   119bc:	cmn	r3, #1
   119c0:	beq	119ec <inet_ntop6+0x3a4>
   119c4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   119c8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   119cc:	add	r3, r2, r3
   119d0:	cmp	r3, #8
   119d4:	bne	119ec <inet_ntop6+0x3a4>
   119d8:	ldr	r3, [fp, #-8]
   119dc:	add	r2, r3, #1
   119e0:	str	r2, [fp, #-8]
   119e4:	mov	r2, #58	; 0x3a
   119e8:	strb	r2, [r3]
   119ec:	ldr	r3, [fp, #-8]
   119f0:	add	r2, r3, #1
   119f4:	str	r2, [fp, #-8]
   119f8:	mov	r2, #0
   119fc:	strb	r2, [r3]
   11a00:	sub	r3, fp, #60	; 0x3c
   11a04:	ldr	r2, [fp, #-8]
   11a08:	sub	r3, r2, r3
   11a0c:	mov	r2, r3
   11a10:	ldr	r3, [fp, #-120]	; 0xffffff88
   11a14:	cmp	r3, r2
   11a18:	bcs	11a24 <inet_ntop6+0x3dc>
   11a1c:	mov	r3, #0
   11a20:	b	11a48 <inet_ntop6+0x400>
   11a24:	sub	r3, fp, #60	; 0x3c
   11a28:	ldr	r2, [fp, #-8]
   11a2c:	sub	r3, r2, r3
   11a30:	mov	r2, r3
   11a34:	sub	r3, fp, #60	; 0x3c
   11a38:	mov	r1, r3
   11a3c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   11a40:	bl	4834 <memcpy@plt>
   11a44:	mov	r3, r0
   11a48:	mov	r0, r3
   11a4c:	sub	sp, fp, #4
   11a50:	ldr	fp, [sp]
   11a54:	add	sp, sp, #4
   11a58:	pop	{pc}		; (ldr pc, [sp], #4)
   11a5c:	.word	0x00012354

00011a60 <rb_inet_pton_sock>:
   11a60:	str	fp, [sp, #-8]!
   11a64:	str	lr, [sp, #4]
   11a68:	add	fp, sp, #4
   11a6c:	sub	sp, sp, #8
   11a70:	str	r0, [fp, #-8]
   11a74:	str	r1, [fp, #-12]
   11a78:	mov	r2, #128	; 0x80
   11a7c:	mov	r1, #0
   11a80:	ldr	r0, [fp, #-12]
   11a84:	bl	4648 <memset@plt>
   11a88:	ldr	r3, [fp, #-12]
   11a8c:	add	r3, r3, #4
   11a90:	mov	r2, r3
   11a94:	ldr	r1, [fp, #-8]
   11a98:	mov	r0, #2
   11a9c:	bl	4654 <rb_inet_pton@plt>
   11aa0:	mov	r3, r0
   11aa4:	cmp	r3, #0
   11aa8:	beq	11afc <rb_inet_pton_sock+0x9c>
   11aac:	ldr	r3, [fp, #-12]
   11ab0:	mov	r2, #2
   11ab4:	strh	r2, [r3]
   11ab8:	ldr	r3, [fp, #-12]
   11abc:	ldrh	r3, [r3]
   11ac0:	cmp	r3, #2
   11ac4:	bne	11ad8 <rb_inet_pton_sock+0x78>
   11ac8:	ldr	r3, [fp, #-12]
   11acc:	mov	r2, #0
   11ad0:	strh	r2, [r3, #2]
   11ad4:	b	11ae4 <rb_inet_pton_sock+0x84>
   11ad8:	ldr	r3, [fp, #-12]
   11adc:	mov	r2, #0
   11ae0:	strh	r2, [r3, #2]
   11ae4:	ldr	r3, [fp, #-12]
   11ae8:	ldrh	r2, [r3]
   11aec:	ldr	r3, [fp, #-12]
   11af0:	strh	r2, [r3]
   11af4:	mov	r3, #1
   11af8:	b	11b74 <rb_inet_pton_sock+0x114>
   11afc:	ldr	r3, [fp, #-12]
   11b00:	add	r3, r3, #8
   11b04:	mov	r2, r3
   11b08:	ldr	r1, [fp, #-8]
   11b0c:	mov	r0, #10
   11b10:	bl	4654 <rb_inet_pton@plt>
   11b14:	mov	r3, r0
   11b18:	cmp	r3, #0
   11b1c:	beq	11b70 <rb_inet_pton_sock+0x110>
   11b20:	ldr	r3, [fp, #-12]
   11b24:	mov	r2, #10
   11b28:	strh	r2, [r3]
   11b2c:	ldr	r3, [fp, #-12]
   11b30:	ldrh	r3, [r3]
   11b34:	cmp	r3, #2
   11b38:	bne	11b4c <rb_inet_pton_sock+0xec>
   11b3c:	ldr	r3, [fp, #-12]
   11b40:	mov	r2, #0
   11b44:	strh	r2, [r3, #2]
   11b48:	b	11b58 <rb_inet_pton_sock+0xf8>
   11b4c:	ldr	r3, [fp, #-12]
   11b50:	mov	r2, #0
   11b54:	strh	r2, [r3, #2]
   11b58:	ldr	r3, [fp, #-12]
   11b5c:	ldrh	r2, [r3]
   11b60:	ldr	r3, [fp, #-12]
   11b64:	strh	r2, [r3]
   11b68:	mov	r3, #1
   11b6c:	b	11b74 <rb_inet_pton_sock+0x114>
   11b70:	mov	r3, #0
   11b74:	mov	r0, r3
   11b78:	sub	sp, fp, #4
   11b7c:	ldr	fp, [sp]
   11b80:	add	sp, sp, #4
   11b84:	pop	{pc}		; (ldr pc, [sp], #4)

00011b88 <rb_inet_ntop_sock>:
   11b88:	str	fp, [sp, #-8]!
   11b8c:	str	lr, [sp, #4]
   11b90:	add	fp, sp, #4
   11b94:	sub	sp, sp, #16
   11b98:	str	r0, [fp, #-8]
   11b9c:	str	r1, [fp, #-12]
   11ba0:	str	r2, [fp, #-16]
   11ba4:	ldr	r3, [fp, #-8]
   11ba8:	ldrh	r3, [r3]
   11bac:	cmp	r3, #2
   11bb0:	beq	11bc0 <rb_inet_ntop_sock+0x38>
   11bb4:	cmp	r3, #10
   11bb8:	beq	11be0 <rb_inet_ntop_sock+0x58>
   11bbc:	b	11c00 <rb_inet_ntop_sock+0x78>
   11bc0:	ldr	r3, [fp, #-8]
   11bc4:	add	r1, r3, #4
   11bc8:	ldr	r3, [fp, #-16]
   11bcc:	ldr	r2, [fp, #-12]
   11bd0:	mov	r0, #2
   11bd4:	bl	496c <rb_inet_ntop@plt>
   11bd8:	mov	r3, r0
   11bdc:	b	11c04 <rb_inet_ntop_sock+0x7c>
   11be0:	ldr	r3, [fp, #-8]
   11be4:	add	r1, r3, #8
   11be8:	ldr	r3, [fp, #-16]
   11bec:	ldr	r2, [fp, #-12]
   11bf0:	mov	r0, #10
   11bf4:	bl	496c <rb_inet_ntop@plt>
   11bf8:	mov	r3, r0
   11bfc:	b	11c04 <rb_inet_ntop_sock+0x7c>
   11c00:	mov	r3, #0
   11c04:	mov	r0, r3
   11c08:	sub	sp, fp, #4
   11c0c:	ldr	fp, [sp]
   11c10:	add	sp, sp, #4
   11c14:	pop	{pc}		; (ldr pc, [sp], #4)

00011c18 <rb_inet_ntop>:
   11c18:	str	r4, [sp, #-12]!
   11c1c:	str	fp, [sp, #4]
   11c20:	str	lr, [sp, #8]
   11c24:	add	fp, sp, #8
   11c28:	sub	sp, sp, #28
   11c2c:	str	r0, [fp, #-24]	; 0xffffffe8
   11c30:	str	r1, [fp, #-28]	; 0xffffffe4
   11c34:	str	r2, [fp, #-32]	; 0xffffffe0
   11c38:	str	r3, [fp, #-36]	; 0xffffffdc
   11c3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11c40:	cmp	r3, #2
   11c44:	beq	11c58 <rb_inet_ntop+0x40>
   11c48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11c4c:	cmp	r3, #10
   11c50:	beq	11c70 <rb_inet_ntop+0x58>
   11c54:	b	11d68 <rb_inet_ntop+0x150>
   11c58:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11c5c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11c60:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11c64:	bl	115e8 <inet_ntop4>
   11c68:	mov	r3, r0
   11c6c:	b	11d6c <rb_inet_ntop+0x154>
   11c70:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11c74:	str	r3, [fp, #-16]
   11c78:	ldr	r3, [fp, #-16]
   11c7c:	ldr	r3, [r3]
   11c80:	cmp	r3, #0
   11c84:	bne	11cbc <rb_inet_ntop+0xa4>
   11c88:	ldr	r3, [fp, #-16]
   11c8c:	ldr	r3, [r3, #4]
   11c90:	cmp	r3, #0
   11c94:	bne	11cbc <rb_inet_ntop+0xa4>
   11c98:	ldr	r3, [fp, #-16]
   11c9c:	ldr	r4, [r3, #8]
   11ca0:	movw	r0, #65535	; 0xffff
   11ca4:	bl	4b40 <htonl@plt>
   11ca8:	mov	r3, r0
   11cac:	cmp	r4, r3
   11cb0:	bne	11cbc <rb_inet_ntop+0xa4>
   11cb4:	mov	r3, #1
   11cb8:	b	11cc0 <rb_inet_ntop+0xa8>
   11cbc:	mov	r3, #0
   11cc0:	cmp	r3, #0
   11cc4:	bne	11d30 <rb_inet_ntop+0x118>
   11cc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11ccc:	str	r3, [fp, #-20]	; 0xffffffec
   11cd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   11cd4:	ldr	r3, [r3]
   11cd8:	cmp	r3, #0
   11cdc:	bne	11d24 <rb_inet_ntop+0x10c>
   11ce0:	ldr	r3, [fp, #-20]	; 0xffffffec
   11ce4:	ldr	r3, [r3, #4]
   11ce8:	cmp	r3, #0
   11cec:	bne	11d24 <rb_inet_ntop+0x10c>
   11cf0:	ldr	r3, [fp, #-20]	; 0xffffffec
   11cf4:	ldr	r3, [r3, #8]
   11cf8:	cmp	r3, #0
   11cfc:	bne	11d24 <rb_inet_ntop+0x10c>
   11d00:	ldr	r3, [fp, #-20]	; 0xffffffec
   11d04:	ldr	r3, [r3, #12]
   11d08:	mov	r0, r3
   11d0c:	bl	46cc <ntohl@plt>
   11d10:	mov	r3, r0
   11d14:	cmp	r3, #1
   11d18:	bls	11d24 <rb_inet_ntop+0x10c>
   11d1c:	mov	r3, #1
   11d20:	b	11d28 <rb_inet_ntop+0x110>
   11d24:	mov	r3, #0
   11d28:	cmp	r3, #0
   11d2c:	beq	11d50 <rb_inet_ntop+0x138>
   11d30:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11d34:	add	r3, r3, #12
   11d38:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11d3c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11d40:	mov	r0, r3
   11d44:	bl	115e8 <inet_ntop4>
   11d48:	mov	r3, r0
   11d4c:	b	11d6c <rb_inet_ntop+0x154>
   11d50:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11d54:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11d58:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11d5c:	bl	11648 <inet_ntop6>
   11d60:	mov	r3, r0
   11d64:	b	11d6c <rb_inet_ntop+0x154>
   11d68:	mov	r3, #0
   11d6c:	mov	r0, r3
   11d70:	sub	sp, fp, #8
   11d74:	ldr	r4, [sp]
   11d78:	ldr	fp, [sp, #4]
   11d7c:	add	sp, sp, #8
   11d80:	pop	{pc}		; (ldr pc, [sp], #4)

00011d84 <inet_pton4>:
   11d84:	push	{fp}		; (str fp, [sp, #-4]!)
   11d88:	add	fp, sp, #0
   11d8c:	sub	sp, sp, #36	; 0x24
   11d90:	str	r0, [fp, #-32]	; 0xffffffe0
   11d94:	str	r1, [fp, #-36]	; 0xffffffdc
   11d98:	mov	r3, #0
   11d9c:	str	r3, [fp, #-8]
   11da0:	mov	r3, #0
   11da4:	str	r3, [fp, #-12]
   11da8:	sub	r3, fp, #28
   11dac:	str	r3, [fp, #-16]
   11db0:	ldr	r3, [fp, #-16]
   11db4:	mov	r2, #0
   11db8:	strb	r2, [r3]
   11dbc:	b	11ebc <inet_pton4+0x138>
   11dc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   11dc4:	cmp	r3, #47	; 0x2f
   11dc8:	ble	11e64 <inet_pton4+0xe0>
   11dcc:	ldr	r3, [fp, #-20]	; 0xffffffec
   11dd0:	cmp	r3, #57	; 0x39
   11dd4:	bgt	11e64 <inet_pton4+0xe0>
   11dd8:	ldr	r3, [fp, #-16]
   11ddc:	ldrb	r3, [r3]
   11de0:	mov	r2, r3
   11de4:	mov	r3, r2
   11de8:	lsl	r3, r3, #2
   11dec:	add	r3, r3, r2
   11df0:	lsl	r3, r3, #1
   11df4:	mov	r2, r3
   11df8:	ldr	r3, [fp, #-20]	; 0xffffffec
   11dfc:	sub	r3, r3, #48	; 0x30
   11e00:	add	r3, r2, r3
   11e04:	str	r3, [fp, #-24]	; 0xffffffe8
   11e08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11e0c:	cmp	r3, #255	; 0xff
   11e10:	bls	11e1c <inet_pton4+0x98>
   11e14:	mov	r3, #0
   11e18:	b	11f00 <inet_pton4+0x17c>
   11e1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11e20:	uxtb	r2, r3
   11e24:	ldr	r3, [fp, #-16]
   11e28:	strb	r2, [r3]
   11e2c:	ldr	r3, [fp, #-8]
   11e30:	cmp	r3, #0
   11e34:	bne	11ebc <inet_pton4+0x138>
   11e38:	ldr	r3, [fp, #-12]
   11e3c:	add	r3, r3, #1
   11e40:	str	r3, [fp, #-12]
   11e44:	ldr	r3, [fp, #-12]
   11e48:	cmp	r3, #4
   11e4c:	ble	11e58 <inet_pton4+0xd4>
   11e50:	mov	r3, #0
   11e54:	b	11f00 <inet_pton4+0x17c>
   11e58:	mov	r3, #1
   11e5c:	str	r3, [fp, #-8]
   11e60:	b	11ebc <inet_pton4+0x138>
   11e64:	ldr	r3, [fp, #-20]	; 0xffffffec
   11e68:	cmp	r3, #46	; 0x2e
   11e6c:	bne	11eb4 <inet_pton4+0x130>
   11e70:	ldr	r3, [fp, #-8]
   11e74:	cmp	r3, #0
   11e78:	beq	11eb4 <inet_pton4+0x130>
   11e7c:	ldr	r3, [fp, #-12]
   11e80:	cmp	r3, #4
   11e84:	bne	11e90 <inet_pton4+0x10c>
   11e88:	mov	r3, #0
   11e8c:	b	11f00 <inet_pton4+0x17c>
   11e90:	ldr	r3, [fp, #-16]
   11e94:	add	r3, r3, #1
   11e98:	str	r3, [fp, #-16]
   11e9c:	ldr	r3, [fp, #-16]
   11ea0:	mov	r2, #0
   11ea4:	strb	r2, [r3]
   11ea8:	mov	r3, #0
   11eac:	str	r3, [fp, #-8]
   11eb0:	b	11ebc <inet_pton4+0x138>
   11eb4:	mov	r3, #0
   11eb8:	b	11f00 <inet_pton4+0x17c>
   11ebc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11ec0:	add	r2, r3, #1
   11ec4:	str	r2, [fp, #-32]	; 0xffffffe0
   11ec8:	ldrb	r3, [r3]
   11ecc:	str	r3, [fp, #-20]	; 0xffffffec
   11ed0:	ldr	r3, [fp, #-20]	; 0xffffffec
   11ed4:	cmp	r3, #0
   11ed8:	bne	11dc0 <inet_pton4+0x3c>
   11edc:	ldr	r3, [fp, #-12]
   11ee0:	cmp	r3, #3
   11ee4:	bgt	11ef0 <inet_pton4+0x16c>
   11ee8:	mov	r3, #0
   11eec:	b	11f00 <inet_pton4+0x17c>
   11ef0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11ef4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11ef8:	str	r2, [r3]
   11efc:	mov	r3, #1
   11f00:	mov	r0, r3
   11f04:	add	sp, fp, #0
   11f08:	pop	{fp}		; (ldr fp, [sp], #4)
   11f0c:	bx	lr

00011f10 <inet_pton6>:
   11f10:	str	fp, [sp, #-8]!
   11f14:	str	lr, [sp, #4]
   11f18:	add	fp, sp, #4
   11f1c:	sub	sp, sp, #64	; 0x40
   11f20:	str	r0, [fp, #-64]	; 0xffffffc0
   11f24:	str	r1, [fp, #-68]	; 0xffffffbc
   11f28:	sub	r3, fp, #60	; 0x3c
   11f2c:	mov	r2, #16
   11f30:	mov	r1, #0
   11f34:	mov	r0, r3
   11f38:	bl	4648 <memset@plt>
   11f3c:	str	r0, [fp, #-8]
   11f40:	ldr	r3, [fp, #-8]
   11f44:	add	r3, r3, #16
   11f48:	str	r3, [fp, #-32]	; 0xffffffe0
   11f4c:	mov	r3, #0
   11f50:	str	r3, [fp, #-12]
   11f54:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11f58:	ldrb	r3, [r3]
   11f5c:	cmp	r3, #58	; 0x3a
   11f60:	bne	11f88 <inet_pton6+0x78>
   11f64:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11f68:	add	r3, r3, #1
   11f6c:	str	r3, [fp, #-64]	; 0xffffffc0
   11f70:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11f74:	ldrb	r3, [r3]
   11f78:	cmp	r3, #58	; 0x3a
   11f7c:	beq	11f88 <inet_pton6+0x78>
   11f80:	mov	r3, #0
   11f84:	b	122b4 <inet_pton6+0x3a4>
   11f88:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11f8c:	str	r3, [fp, #-16]
   11f90:	mov	r3, #0
   11f94:	str	r3, [fp, #-20]	; 0xffffffec
   11f98:	mov	r3, #0
   11f9c:	str	r3, [fp, #-24]	; 0xffffffe8
   11fa0:	b	1213c <inet_pton6+0x22c>
   11fa4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11fa8:	ldr	r3, [pc, #792]	; 122c8 <inet_pton6+0x3b8>
   11fac:	add	r3, pc, r3
   11fb0:	mov	r0, r3
   11fb4:	bl	45d0 <strchr@plt>
   11fb8:	str	r0, [fp, #-40]	; 0xffffffd8
   11fbc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11fc0:	cmp	r3, #0
   11fc4:	beq	12014 <inet_pton6+0x104>
   11fc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11fcc:	lsl	r3, r3, #4
   11fd0:	str	r3, [fp, #-24]	; 0xffffffe8
   11fd4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11fd8:	ldr	r2, [pc, #748]	; 122cc <inet_pton6+0x3bc>
   11fdc:	add	r2, pc, r2
   11fe0:	sub	r3, r3, r2
   11fe4:	mov	r2, r3
   11fe8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11fec:	orr	r3, r3, r2
   11ff0:	str	r3, [fp, #-24]	; 0xffffffe8
   11ff4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11ff8:	cmp	r3, #65536	; 0x10000
   11ffc:	bcc	12008 <inet_pton6+0xf8>
   12000:	mov	r3, #0
   12004:	b	122b4 <inet_pton6+0x3a4>
   12008:	mov	r3, #1
   1200c:	str	r3, [fp, #-20]	; 0xffffffec
   12010:	b	1213c <inet_pton6+0x22c>
   12014:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12018:	cmp	r3, #58	; 0x3a
   1201c:	bne	120d0 <inet_pton6+0x1c0>
   12020:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12024:	str	r3, [fp, #-16]
   12028:	ldr	r3, [fp, #-20]	; 0xffffffec
   1202c:	cmp	r3, #0
   12030:	bne	12054 <inet_pton6+0x144>
   12034:	ldr	r3, [fp, #-12]
   12038:	cmp	r3, #0
   1203c:	beq	12048 <inet_pton6+0x138>
   12040:	mov	r3, #0
   12044:	b	122b4 <inet_pton6+0x3a4>
   12048:	ldr	r3, [fp, #-8]
   1204c:	str	r3, [fp, #-12]
   12050:	b	1213c <inet_pton6+0x22c>
   12054:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12058:	ldrb	r3, [r3]
   1205c:	cmp	r3, #0
   12060:	bne	1206c <inet_pton6+0x15c>
   12064:	mov	r3, #0
   12068:	b	122b4 <inet_pton6+0x3a4>
   1206c:	ldr	r3, [fp, #-8]
   12070:	add	r3, r3, #2
   12074:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12078:	cmp	r2, r3
   1207c:	bcs	12088 <inet_pton6+0x178>
   12080:	mov	r3, #0
   12084:	b	122b4 <inet_pton6+0x3a4>
   12088:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1208c:	lsr	r1, r3, #8
   12090:	ldr	r3, [fp, #-8]
   12094:	add	r2, r3, #1
   12098:	str	r2, [fp, #-8]
   1209c:	uxtb	r2, r1
   120a0:	strb	r2, [r3]
   120a4:	ldr	r3, [fp, #-8]
   120a8:	add	r2, r3, #1
   120ac:	str	r2, [fp, #-8]
   120b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   120b4:	uxtb	r2, r2
   120b8:	strb	r2, [r3]
   120bc:	mov	r3, #0
   120c0:	str	r3, [fp, #-20]	; 0xffffffec
   120c4:	mov	r3, #0
   120c8:	str	r3, [fp, #-24]	; 0xffffffe8
   120cc:	b	1213c <inet_pton6+0x22c>
   120d0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   120d4:	ldrb	r3, [r3]
   120d8:	cmp	r3, #0
   120dc:	beq	1213c <inet_pton6+0x22c>
   120e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   120e4:	cmp	r3, #46	; 0x2e
   120e8:	bne	1213c <inet_pton6+0x22c>
   120ec:	ldr	r3, [fp, #-8]
   120f0:	add	r3, r3, #4
   120f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   120f8:	cmp	r2, r3
   120fc:	bcc	12130 <inet_pton6+0x220>
   12100:	ldr	r1, [fp, #-8]
   12104:	ldr	r0, [fp, #-16]
   12108:	bl	11d84 <inet_pton4>
   1210c:	mov	r3, r0
   12110:	cmp	r3, #0
   12114:	ble	12130 <inet_pton6+0x220>
   12118:	ldr	r3, [fp, #-8]
   1211c:	add	r3, r3, #4
   12120:	str	r3, [fp, #-8]
   12124:	mov	r3, #0
   12128:	str	r3, [fp, #-20]	; 0xffffffec
   1212c:	b	12164 <inet_pton6+0x254>
   12130:	nop	{0}
   12134:	mov	r3, #0
   12138:	b	122b4 <inet_pton6+0x3a4>
   1213c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12140:	add	r2, r3, #1
   12144:	str	r2, [fp, #-64]	; 0xffffffc0
   12148:	ldrb	r3, [r3]
   1214c:	mov	r0, r3
   12150:	bl	4cfc <tolower@plt>
   12154:	str	r0, [fp, #-36]	; 0xffffffdc
   12158:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1215c:	cmp	r3, #0
   12160:	bne	11fa4 <inet_pton6+0x94>
   12164:	ldr	r3, [fp, #-20]	; 0xffffffec
   12168:	cmp	r3, #0
   1216c:	beq	121c0 <inet_pton6+0x2b0>
   12170:	ldr	r3, [fp, #-8]
   12174:	add	r3, r3, #2
   12178:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1217c:	cmp	r2, r3
   12180:	bcs	1218c <inet_pton6+0x27c>
   12184:	mov	r3, #0
   12188:	b	122b4 <inet_pton6+0x3a4>
   1218c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12190:	lsr	r1, r3, #8
   12194:	ldr	r3, [fp, #-8]
   12198:	add	r2, r3, #1
   1219c:	str	r2, [fp, #-8]
   121a0:	uxtb	r2, r1
   121a4:	strb	r2, [r3]
   121a8:	ldr	r3, [fp, #-8]
   121ac:	add	r2, r3, #1
   121b0:	str	r2, [fp, #-8]
   121b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   121b8:	uxtb	r2, r2
   121bc:	strb	r2, [r3]
   121c0:	ldr	r3, [fp, #-12]
   121c4:	cmp	r3, #0
   121c8:	beq	12278 <inet_pton6+0x368>
   121cc:	ldr	r2, [fp, #-8]
   121d0:	ldr	r3, [fp, #-12]
   121d4:	sub	r3, r2, r3
   121d8:	str	r3, [fp, #-44]	; 0xffffffd4
   121dc:	ldr	r2, [fp, #-8]
   121e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   121e4:	cmp	r2, r3
   121e8:	bne	121f4 <inet_pton6+0x2e4>
   121ec:	mov	r3, #0
   121f0:	b	122b4 <inet_pton6+0x3a4>
   121f4:	mov	r3, #1
   121f8:	str	r3, [fp, #-28]	; 0xffffffe4
   121fc:	b	12260 <inet_pton6+0x350>
   12200:	ldr	r2, [fp, #-44]	; 0xffffffd4
   12204:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12208:	sub	r3, r2, r3
   1220c:	mov	r2, r3
   12210:	ldr	r3, [fp, #-12]
   12214:	add	r2, r3, r2
   12218:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1221c:	rsb	r3, r3, #0
   12220:	mov	r1, r3
   12224:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12228:	add	r3, r3, r1
   1222c:	ldrb	r2, [r2]
   12230:	strb	r2, [r3]
   12234:	ldr	r2, [fp, #-44]	; 0xffffffd4
   12238:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1223c:	sub	r3, r2, r3
   12240:	mov	r2, r3
   12244:	ldr	r3, [fp, #-12]
   12248:	add	r3, r3, r2
   1224c:	mov	r2, #0
   12250:	strb	r2, [r3]
   12254:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12258:	add	r3, r3, #1
   1225c:	str	r3, [fp, #-28]	; 0xffffffe4
   12260:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12264:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12268:	cmp	r2, r3
   1226c:	ble	12200 <inet_pton6+0x2f0>
   12270:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12274:	str	r3, [fp, #-8]
   12278:	ldr	r2, [fp, #-8]
   1227c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12280:	cmp	r2, r3
   12284:	beq	12290 <inet_pton6+0x380>
   12288:	mov	r3, #0
   1228c:	b	122b4 <inet_pton6+0x3a4>
   12290:	ldr	r3, [fp, #-68]	; 0xffffffbc
   12294:	sub	r2, fp, #60	; 0x3c
   12298:	ldrd	r0, [r2]
   1229c:	str	r0, [r3]
   122a0:	str	r1, [r3, #4]
   122a4:	ldrd	r0, [r2, #8]
   122a8:	str	r0, [r3, #8]
   122ac:	str	r1, [r3, #12]
   122b0:	mov	r3, #1
   122b4:	mov	r0, r3
   122b8:	sub	sp, fp, #4
   122bc:	ldr	fp, [sp]
   122c0:	add	sp, sp, #4
   122c4:	pop	{pc}		; (ldr pc, [sp], #4)
   122c8:	.word	0x00011e04
   122cc:	.word	0x00011dd4

000122d0 <rb_inet_pton>:
   122d0:	str	fp, [sp, #-8]!
   122d4:	str	lr, [sp, #4]
   122d8:	add	fp, sp, #4
   122dc:	sub	sp, sp, #72	; 0x48
   122e0:	str	r0, [fp, #-64]	; 0xffffffc0
   122e4:	str	r1, [fp, #-68]	; 0xffffffbc
   122e8:	str	r2, [fp, #-72]	; 0xffffffb8
   122ec:	ldr	r3, [fp, #-64]	; 0xffffffc0
   122f0:	cmp	r3, #2
   122f4:	beq	12308 <rb_inet_pton+0x38>
   122f8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   122fc:	cmp	r3, #10
   12300:	beq	1231c <rb_inet_pton+0x4c>
   12304:	b	12378 <rb_inet_pton+0xa8>
   12308:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1230c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12310:	bl	11d84 <inet_pton4>
   12314:	mov	r3, r0
   12318:	b	1237c <rb_inet_pton+0xac>
   1231c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12320:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12324:	bl	11d84 <inet_pton4>
   12328:	mov	r3, r0
   1232c:	cmp	r3, #0
   12330:	beq	12364 <rb_inet_pton+0x94>
   12334:	sub	r3, fp, #60	; 0x3c
   12338:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1233c:	ldr	r1, [pc, #76]	; 12390 <rb_inet_pton+0xc0>
   12340:	add	r1, pc, r1
   12344:	mov	r0, r3
   12348:	bl	4d38 <sprintf@plt>
   1234c:	sub	r3, fp, #60	; 0x3c
   12350:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12354:	mov	r0, r3
   12358:	bl	11f10 <inet_pton6>
   1235c:	mov	r3, r0
   12360:	b	1237c <rb_inet_pton+0xac>
   12364:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12368:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1236c:	bl	11f10 <inet_pton6>
   12370:	mov	r3, r0
   12374:	b	1237c <rb_inet_pton+0xac>
   12378:	mvn	r3, #0
   1237c:	mov	r0, r3
   12380:	sub	sp, fp, #4
   12384:	ldr	fp, [sp]
   12388:	add	sp, sp, #4
   1238c:	pop	{pc}		; (ldr pc, [sp], #4)
   12390:	.word	0x0001198c

00012394 <rb_get_iotype>:
   12394:	push	{fp}		; (str fp, [sp, #-4]!)
   12398:	add	fp, sp, #0
   1239c:	ldr	r3, [pc, #16]	; 123b4 <rb_get_iotype+0x20>
   123a0:	add	r3, pc, r3
   123a4:	mov	r0, r3
   123a8:	add	sp, fp, #0
   123ac:	pop	{fp}		; (ldr fp, [sp], #4)
   123b0:	bx	lr
   123b4:	.word	0x00035b20

000123b8 <rb_unsupported_event>:
   123b8:	push	{fp}		; (str fp, [sp, #-4]!)
   123bc:	add	fp, sp, #0
   123c0:	mov	r3, #0
   123c4:	mov	r0, r3
   123c8:	add	sp, fp, #0
   123cc:	pop	{fp}		; (ldr fp, [sp], #4)
   123d0:	bx	lr

000123d4 <try_kqueue>:
   123d4:	strd	r4, [sp, #-16]!
   123d8:	str	fp, [sp, #8]
   123dc:	str	lr, [sp, #12]
   123e0:	add	fp, sp, #12
   123e4:	ldr	r4, [pc, #224]	; 124cc <try_kqueue+0xf8>
   123e8:	add	r4, pc, r4
   123ec:	bl	1d320 <rb_init_netio_kqueue>
   123f0:	mov	r3, r0
   123f4:	cmp	r3, #0
   123f8:	bne	124b0 <try_kqueue+0xdc>
   123fc:	ldr	r3, [pc, #204]	; 124d0 <try_kqueue+0xfc>
   12400:	add	r3, pc, r3
   12404:	ldr	r2, [pc, #200]	; 124d4 <try_kqueue+0x100>
   12408:	ldr	r2, [r4, r2]
   1240c:	str	r2, [r3]
   12410:	ldr	r3, [pc, #192]	; 124d8 <try_kqueue+0x104>
   12414:	add	r3, pc, r3
   12418:	ldr	r2, [pc, #188]	; 124dc <try_kqueue+0x108>
   1241c:	ldr	r2, [r4, r2]
   12420:	str	r2, [r3]
   12424:	ldr	r3, [pc, #180]	; 124e0 <try_kqueue+0x10c>
   12428:	add	r3, pc, r3
   1242c:	ldr	r2, [pc, #176]	; 124e4 <try_kqueue+0x110>
   12430:	ldr	r2, [r4, r2]
   12434:	str	r2, [r3]
   12438:	ldr	r3, [pc, #168]	; 124e8 <try_kqueue+0x114>
   1243c:	add	r3, pc, r3
   12440:	ldr	r2, [pc, #164]	; 124ec <try_kqueue+0x118>
   12444:	ldr	r2, [r4, r2]
   12448:	str	r2, [r3]
   1244c:	ldr	r3, [pc, #156]	; 124f0 <try_kqueue+0x11c>
   12450:	add	r3, pc, r3
   12454:	ldr	r2, [pc, #152]	; 124f4 <try_kqueue+0x120>
   12458:	ldr	r2, [r4, r2]
   1245c:	str	r2, [r3]
   12460:	ldr	r3, [pc, #144]	; 124f8 <try_kqueue+0x124>
   12464:	add	r3, pc, r3
   12468:	ldr	r2, [pc, #140]	; 124fc <try_kqueue+0x128>
   1246c:	ldr	r2, [r4, r2]
   12470:	str	r2, [r3]
   12474:	ldr	r3, [pc, #132]	; 12500 <try_kqueue+0x12c>
   12478:	add	r3, pc, r3
   1247c:	ldr	r2, [pc, #128]	; 12504 <try_kqueue+0x130>
   12480:	ldr	r2, [r4, r2]
   12484:	str	r2, [r3]
   12488:	mov	r2, #25
   1248c:	ldr	r3, [pc, #116]	; 12508 <try_kqueue+0x134>
   12490:	add	r3, pc, r3
   12494:	mov	r1, r3
   12498:	ldr	r3, [pc, #108]	; 1250c <try_kqueue+0x138>
   1249c:	add	r3, pc, r3
   124a0:	mov	r0, r3
   124a4:	bl	46c0 <rb_strlcpy@plt>
   124a8:	mov	r3, #0
   124ac:	b	124b4 <try_kqueue+0xe0>
   124b0:	mvn	r3, #0
   124b4:	mov	r0, r3
   124b8:	sub	sp, fp, #12
   124bc:	ldrd	r4, [sp]
   124c0:	ldr	fp, [sp, #8]
   124c4:	add	sp, sp, #12
   124c8:	pop	{pc}		; (ldr pc, [sp], #4)
   124cc:	.word	0x00022c10
   124d0:	.word	0x00035aa4
   124d4:	.word	0x000003c0
   124d8:	.word	0x00035a94
   124dc:	.word	0x0000037c
   124e0:	.word	0x00035a84
   124e4:	.word	0x0000039c
   124e8:	.word	0x00035a74
   124ec:	.word	0x00000394
   124f0:	.word	0x00035a64
   124f4:	.word	0x000003d8
   124f8:	.word	0x00035a58
   124fc:	.word	0x00000398
   12500:	.word	0x00035a40
   12504:	.word	0x000003e8
   12508:	.word	0x00011848
   1250c:	.word	0x00035a24

00012510 <try_epoll>:
   12510:	strd	r4, [sp, #-16]!
   12514:	str	fp, [sp, #8]
   12518:	str	lr, [sp, #12]
   1251c:	add	fp, sp, #12
   12520:	ldr	r4, [pc, #224]	; 12608 <try_epoll+0xf8>
   12524:	add	r4, pc, r4
   12528:	bl	19cd0 <rb_init_netio_epoll>
   1252c:	mov	r3, r0
   12530:	cmp	r3, #0
   12534:	bne	125ec <try_epoll+0xdc>
   12538:	ldr	r3, [pc, #204]	; 1260c <try_epoll+0xfc>
   1253c:	add	r3, pc, r3
   12540:	ldr	r2, [pc, #200]	; 12610 <try_epoll+0x100>
   12544:	ldr	r2, [r4, r2]
   12548:	str	r2, [r3]
   1254c:	ldr	r3, [pc, #192]	; 12614 <try_epoll+0x104>
   12550:	add	r3, pc, r3
   12554:	ldr	r2, [pc, #188]	; 12618 <try_epoll+0x108>
   12558:	ldr	r2, [r4, r2]
   1255c:	str	r2, [r3]
   12560:	ldr	r3, [pc, #180]	; 1261c <try_epoll+0x10c>
   12564:	add	r3, pc, r3
   12568:	ldr	r2, [pc, #176]	; 12620 <try_epoll+0x110>
   1256c:	ldr	r2, [r4, r2]
   12570:	str	r2, [r3]
   12574:	ldr	r3, [pc, #168]	; 12624 <try_epoll+0x114>
   12578:	add	r3, pc, r3
   1257c:	ldr	r2, [pc, #164]	; 12628 <try_epoll+0x118>
   12580:	ldr	r2, [r4, r2]
   12584:	str	r2, [r3]
   12588:	ldr	r3, [pc, #156]	; 1262c <try_epoll+0x11c>
   1258c:	add	r3, pc, r3
   12590:	ldr	r2, [pc, #152]	; 12630 <try_epoll+0x120>
   12594:	ldr	r2, [r4, r2]
   12598:	str	r2, [r3]
   1259c:	ldr	r3, [pc, #144]	; 12634 <try_epoll+0x124>
   125a0:	add	r3, pc, r3
   125a4:	ldr	r2, [pc, #140]	; 12638 <try_epoll+0x128>
   125a8:	ldr	r2, [r4, r2]
   125ac:	str	r2, [r3]
   125b0:	ldr	r3, [pc, #132]	; 1263c <try_epoll+0x12c>
   125b4:	add	r3, pc, r3
   125b8:	ldr	r2, [pc, #128]	; 12640 <try_epoll+0x130>
   125bc:	ldr	r2, [r4, r2]
   125c0:	str	r2, [r3]
   125c4:	mov	r2, #25
   125c8:	ldr	r3, [pc, #116]	; 12644 <try_epoll+0x134>
   125cc:	add	r3, pc, r3
   125d0:	mov	r1, r3
   125d4:	ldr	r3, [pc, #108]	; 12648 <try_epoll+0x138>
   125d8:	add	r3, pc, r3
   125dc:	mov	r0, r3
   125e0:	bl	46c0 <rb_strlcpy@plt>
   125e4:	mov	r3, #0
   125e8:	b	125f0 <try_epoll+0xe0>
   125ec:	mvn	r3, #0
   125f0:	mov	r0, r3
   125f4:	sub	sp, fp, #12
   125f8:	ldrd	r4, [sp]
   125fc:	ldr	fp, [sp, #8]
   12600:	add	sp, sp, #12
   12604:	pop	{pc}		; (ldr pc, [sp], #4)
   12608:	.word	0x00022ad4
   1260c:	.word	0x00035968
   12610:	.word	0x0000036c
   12614:	.word	0x00035958
   12618:	.word	0x000003cc
   1261c:	.word	0x00035948
   12620:	.word	0x00000408
   12624:	.word	0x00035938
   12628:	.word	0x00000388
   1262c:	.word	0x00035928
   12630:	.word	0x000003c8
   12634:	.word	0x00035918
   12638:	.word	0x0000035c
   1263c:	.word	0x00035908
   12640:	.word	0x0000041c
   12644:	.word	0x00011714
   12648:	.word	0x000358e8

0001264c <try_ports>:
   1264c:	strd	r4, [sp, #-16]!
   12650:	str	fp, [sp, #8]
   12654:	str	lr, [sp, #12]
   12658:	add	fp, sp, #12
   1265c:	ldr	r4, [pc, #224]	; 12744 <try_ports+0xf8>
   12660:	add	r4, pc, r4
   12664:	bl	1b74c <rb_init_netio_ports>
   12668:	mov	r3, r0
   1266c:	cmp	r3, #0
   12670:	bne	12728 <try_ports+0xdc>
   12674:	ldr	r3, [pc, #204]	; 12748 <try_ports+0xfc>
   12678:	add	r3, pc, r3
   1267c:	ldr	r2, [pc, #200]	; 1274c <try_ports+0x100>
   12680:	ldr	r2, [r4, r2]
   12684:	str	r2, [r3]
   12688:	ldr	r3, [pc, #192]	; 12750 <try_ports+0x104>
   1268c:	add	r3, pc, r3
   12690:	ldr	r2, [pc, #188]	; 12754 <try_ports+0x108>
   12694:	ldr	r2, [r4, r2]
   12698:	str	r2, [r3]
   1269c:	ldr	r3, [pc, #180]	; 12758 <try_ports+0x10c>
   126a0:	add	r3, pc, r3
   126a4:	ldr	r2, [pc, #176]	; 1275c <try_ports+0x110>
   126a8:	ldr	r2, [r4, r2]
   126ac:	str	r2, [r3]
   126b0:	ldr	r3, [pc, #168]	; 12760 <try_ports+0x114>
   126b4:	add	r3, pc, r3
   126b8:	ldr	r2, [pc, #164]	; 12764 <try_ports+0x118>
   126bc:	ldr	r2, [r4, r2]
   126c0:	str	r2, [r3]
   126c4:	ldr	r3, [pc, #156]	; 12768 <try_ports+0x11c>
   126c8:	add	r3, pc, r3
   126cc:	ldr	r2, [pc, #152]	; 1276c <try_ports+0x120>
   126d0:	ldr	r2, [r4, r2]
   126d4:	str	r2, [r3]
   126d8:	ldr	r3, [pc, #144]	; 12770 <try_ports+0x124>
   126dc:	add	r3, pc, r3
   126e0:	ldr	r2, [pc, #140]	; 12774 <try_ports+0x128>
   126e4:	ldr	r2, [r4, r2]
   126e8:	str	r2, [r3]
   126ec:	ldr	r3, [pc, #132]	; 12778 <try_ports+0x12c>
   126f0:	add	r3, pc, r3
   126f4:	ldr	r2, [pc, #128]	; 1277c <try_ports+0x130>
   126f8:	ldr	r2, [r4, r2]
   126fc:	str	r2, [r3]
   12700:	mov	r2, #25
   12704:	ldr	r3, [pc, #116]	; 12780 <try_ports+0x134>
   12708:	add	r3, pc, r3
   1270c:	mov	r1, r3
   12710:	ldr	r3, [pc, #108]	; 12784 <try_ports+0x138>
   12714:	add	r3, pc, r3
   12718:	mov	r0, r3
   1271c:	bl	46c0 <rb_strlcpy@plt>
   12720:	mov	r3, #0
   12724:	b	1272c <try_ports+0xe0>
   12728:	mvn	r3, #0
   1272c:	mov	r0, r3
   12730:	sub	sp, fp, #12
   12734:	ldrd	r4, [sp]
   12738:	ldr	fp, [sp, #8]
   1273c:	add	sp, sp, #12
   12740:	pop	{pc}		; (ldr pc, [sp], #4)
   12744:	.word	0x00022998
   12748:	.word	0x0003582c
   1274c:	.word	0x000003ec
   12750:	.word	0x0003581c
   12754:	.word	0x0000038c
   12758:	.word	0x0003580c
   1275c:	.word	0x00000414
   12760:	.word	0x000357fc
   12764:	.word	0x00000358
   12768:	.word	0x000357ec
   1276c:	.word	0x00000410
   12770:	.word	0x000357e0
   12774:	.word	0x00000368
   12778:	.word	0x000357c8
   1277c:	.word	0x000003e4
   12780:	.word	0x000115e0
   12784:	.word	0x000357ac

00012788 <try_devpoll>:
   12788:	strd	r4, [sp, #-16]!
   1278c:	str	fp, [sp, #8]
   12790:	str	lr, [sp, #12]
   12794:	add	fp, sp, #12
   12798:	ldr	r4, [pc, #212]	; 12874 <try_devpoll+0xec>
   1279c:	add	r4, pc, r4
   127a0:	bl	19b4c <rb_init_netio_devpoll>
   127a4:	mov	r3, r0
   127a8:	cmp	r3, #0
   127ac:	bne	12858 <try_devpoll+0xd0>
   127b0:	ldr	r3, [pc, #192]	; 12878 <try_devpoll+0xf0>
   127b4:	add	r3, pc, r3
   127b8:	ldr	r2, [pc, #188]	; 1287c <try_devpoll+0xf4>
   127bc:	ldr	r2, [r4, r2]
   127c0:	str	r2, [r3]
   127c4:	ldr	r3, [pc, #180]	; 12880 <try_devpoll+0xf8>
   127c8:	add	r3, pc, r3
   127cc:	ldr	r2, [pc, #176]	; 12884 <try_devpoll+0xfc>
   127d0:	ldr	r2, [r4, r2]
   127d4:	str	r2, [r3]
   127d8:	ldr	r3, [pc, #168]	; 12888 <try_devpoll+0x100>
   127dc:	add	r3, pc, r3
   127e0:	ldr	r2, [pc, #164]	; 1288c <try_devpoll+0x104>
   127e4:	ldr	r2, [r4, r2]
   127e8:	str	r2, [r3]
   127ec:	ldr	r3, [pc, #156]	; 12890 <try_devpoll+0x108>
   127f0:	add	r3, pc, r3
   127f4:	mov	r2, #0
   127f8:	str	r2, [r3]
   127fc:	ldr	r3, [pc, #144]	; 12894 <try_devpoll+0x10c>
   12800:	add	r3, pc, r3
   12804:	mov	r2, #0
   12808:	str	r2, [r3]
   1280c:	ldr	r3, [pc, #132]	; 12898 <try_devpoll+0x110>
   12810:	add	r3, pc, r3
   12814:	mov	r2, #0
   12818:	str	r2, [r3]
   1281c:	ldr	r3, [pc, #120]	; 1289c <try_devpoll+0x114>
   12820:	add	r3, pc, r3
   12824:	ldr	r2, [pc, #116]	; 128a0 <try_devpoll+0x118>
   12828:	add	r2, pc, r2
   1282c:	str	r2, [r3]
   12830:	mov	r2, #25
   12834:	ldr	r3, [pc, #104]	; 128a4 <try_devpoll+0x11c>
   12838:	add	r3, pc, r3
   1283c:	mov	r1, r3
   12840:	ldr	r3, [pc, #96]	; 128a8 <try_devpoll+0x120>
   12844:	add	r3, pc, r3
   12848:	mov	r0, r3
   1284c:	bl	46c0 <rb_strlcpy@plt>
   12850:	mov	r3, #0
   12854:	b	1285c <try_devpoll+0xd4>
   12858:	mvn	r3, #0
   1285c:	mov	r0, r3
   12860:	sub	sp, fp, #12
   12864:	ldrd	r4, [sp]
   12868:	ldr	fp, [sp, #8]
   1286c:	add	sp, sp, #12
   12870:	pop	{pc}		; (ldr pc, [sp], #4)
   12874:	.word	0x0002285c
   12878:	.word	0x000356f0
   1287c:	.word	0x000003b4
   12880:	.word	0x000356e0
   12884:	.word	0x000003f4
   12888:	.word	0x000356d0
   1288c:	.word	0x000003b8
   12890:	.word	0x000356c0
   12894:	.word	0x000356b4
   12898:	.word	0x000356ac
   1289c:	.word	0x00035698
   128a0:	.word	0xfffffb88
   128a4:	.word	0x000114b8
   128a8:	.word	0x0003567c

000128ac <try_sigio>:
   128ac:	strd	r4, [sp, #-16]!
   128b0:	str	fp, [sp, #8]
   128b4:	str	lr, [sp, #12]
   128b8:	add	fp, sp, #12
   128bc:	ldr	r4, [pc, #224]	; 129a4 <try_sigio+0xf8>
   128c0:	add	r4, pc, r4
   128c4:	bl	1ba2c <rb_init_netio_sigio>
   128c8:	mov	r3, r0
   128cc:	cmp	r3, #0
   128d0:	bne	12988 <try_sigio+0xdc>
   128d4:	ldr	r3, [pc, #204]	; 129a8 <try_sigio+0xfc>
   128d8:	add	r3, pc, r3
   128dc:	ldr	r2, [pc, #200]	; 129ac <try_sigio+0x100>
   128e0:	ldr	r2, [r4, r2]
   128e4:	str	r2, [r3]
   128e8:	ldr	r3, [pc, #192]	; 129b0 <try_sigio+0x104>
   128ec:	add	r3, pc, r3
   128f0:	ldr	r2, [pc, #188]	; 129b4 <try_sigio+0x108>
   128f4:	ldr	r2, [r4, r2]
   128f8:	str	r2, [r3]
   128fc:	ldr	r3, [pc, #180]	; 129b8 <try_sigio+0x10c>
   12900:	add	r3, pc, r3
   12904:	ldr	r2, [pc, #176]	; 129bc <try_sigio+0x110>
   12908:	ldr	r2, [r4, r2]
   1290c:	str	r2, [r3]
   12910:	ldr	r3, [pc, #168]	; 129c0 <try_sigio+0x114>
   12914:	add	r3, pc, r3
   12918:	ldr	r2, [pc, #164]	; 129c4 <try_sigio+0x118>
   1291c:	ldr	r2, [r4, r2]
   12920:	str	r2, [r3]
   12924:	ldr	r3, [pc, #156]	; 129c8 <try_sigio+0x11c>
   12928:	add	r3, pc, r3
   1292c:	ldr	r2, [pc, #152]	; 129cc <try_sigio+0x120>
   12930:	ldr	r2, [r4, r2]
   12934:	str	r2, [r3]
   12938:	ldr	r3, [pc, #144]	; 129d0 <try_sigio+0x124>
   1293c:	add	r3, pc, r3
   12940:	ldr	r2, [pc, #140]	; 129d4 <try_sigio+0x128>
   12944:	ldr	r2, [r4, r2]
   12948:	str	r2, [r3]
   1294c:	ldr	r3, [pc, #132]	; 129d8 <try_sigio+0x12c>
   12950:	add	r3, pc, r3
   12954:	ldr	r2, [pc, #128]	; 129dc <try_sigio+0x130>
   12958:	ldr	r2, [r4, r2]
   1295c:	str	r2, [r3]
   12960:	mov	r2, #25
   12964:	ldr	r3, [pc, #116]	; 129e0 <try_sigio+0x134>
   12968:	add	r3, pc, r3
   1296c:	mov	r1, r3
   12970:	ldr	r3, [pc, #108]	; 129e4 <try_sigio+0x138>
   12974:	add	r3, pc, r3
   12978:	mov	r0, r3
   1297c:	bl	46c0 <rb_strlcpy@plt>
   12980:	mov	r3, #0
   12984:	b	1298c <try_sigio+0xe0>
   12988:	mvn	r3, #0
   1298c:	mov	r0, r3
   12990:	sub	sp, fp, #12
   12994:	ldrd	r4, [sp]
   12998:	ldr	fp, [sp, #8]
   1299c:	add	sp, sp, #12
   129a0:	pop	{pc}		; (ldr pc, [sp], #4)
   129a4:	.word	0x00022738
   129a8:	.word	0x000355cc
   129ac:	.word	0x000003d0
   129b0:	.word	0x000355bc
   129b4:	.word	0x00000370
   129b8:	.word	0x000355ac
   129bc:	.word	0x000003e0
   129c0:	.word	0x0003559c
   129c4:	.word	0x00000378
   129c8:	.word	0x0003558c
   129cc:	.word	0x00000360
   129d0:	.word	0x0003557c
   129d4:	.word	0x000003dc
   129d8:	.word	0x0003556c
   129dc:	.word	0x000003fc
   129e0:	.word	0x00011390
   129e4:	.word	0x0003554c

000129e8 <try_poll>:
   129e8:	strd	r4, [sp, #-16]!
   129ec:	str	fp, [sp, #8]
   129f0:	str	lr, [sp, #12]
   129f4:	add	fp, sp, #12
   129f8:	ldr	r4, [pc, #212]	; 12ad4 <try_poll+0xec>
   129fc:	add	r4, pc, r4
   12a00:	bl	1af64 <rb_init_netio_poll>
   12a04:	mov	r3, r0
   12a08:	cmp	r3, #0
   12a0c:	bne	12ab8 <try_poll+0xd0>
   12a10:	ldr	r3, [pc, #192]	; 12ad8 <try_poll+0xf0>
   12a14:	add	r3, pc, r3
   12a18:	ldr	r2, [pc, #188]	; 12adc <try_poll+0xf4>
   12a1c:	ldr	r2, [r4, r2]
   12a20:	str	r2, [r3]
   12a24:	ldr	r3, [pc, #180]	; 12ae0 <try_poll+0xf8>
   12a28:	add	r3, pc, r3
   12a2c:	ldr	r2, [pc, #176]	; 12ae4 <try_poll+0xfc>
   12a30:	ldr	r2, [r4, r2]
   12a34:	str	r2, [r3]
   12a38:	ldr	r3, [pc, #168]	; 12ae8 <try_poll+0x100>
   12a3c:	add	r3, pc, r3
   12a40:	ldr	r2, [pc, #164]	; 12aec <try_poll+0x104>
   12a44:	ldr	r2, [r4, r2]
   12a48:	str	r2, [r3]
   12a4c:	ldr	r3, [pc, #156]	; 12af0 <try_poll+0x108>
   12a50:	add	r3, pc, r3
   12a54:	mov	r2, #0
   12a58:	str	r2, [r3]
   12a5c:	ldr	r3, [pc, #144]	; 12af4 <try_poll+0x10c>
   12a60:	add	r3, pc, r3
   12a64:	mov	r2, #0
   12a68:	str	r2, [r3]
   12a6c:	ldr	r3, [pc, #132]	; 12af8 <try_poll+0x110>
   12a70:	add	r3, pc, r3
   12a74:	mov	r2, #0
   12a78:	str	r2, [r3]
   12a7c:	ldr	r3, [pc, #120]	; 12afc <try_poll+0x114>
   12a80:	add	r3, pc, r3
   12a84:	ldr	r2, [pc, #116]	; 12b00 <try_poll+0x118>
   12a88:	add	r2, pc, r2
   12a8c:	str	r2, [r3]
   12a90:	mov	r2, #25
   12a94:	ldr	r3, [pc, #104]	; 12b04 <try_poll+0x11c>
   12a98:	add	r3, pc, r3
   12a9c:	mov	r1, r3
   12aa0:	ldr	r3, [pc, #96]	; 12b08 <try_poll+0x120>
   12aa4:	add	r3, pc, r3
   12aa8:	mov	r0, r3
   12aac:	bl	46c0 <rb_strlcpy@plt>
   12ab0:	mov	r3, #0
   12ab4:	b	12abc <try_poll+0xd4>
   12ab8:	mvn	r3, #0
   12abc:	mov	r0, r3
   12ac0:	sub	sp, fp, #12
   12ac4:	ldrd	r4, [sp]
   12ac8:	ldr	fp, [sp, #8]
   12acc:	add	sp, sp, #12
   12ad0:	pop	{pc}		; (ldr pc, [sp], #4)
   12ad4:	.word	0x000225fc
   12ad8:	.word	0x00035490
   12adc:	.word	0x000003f0
   12ae0:	.word	0x00035480
   12ae4:	.word	0x00000400
   12ae8:	.word	0x00035470
   12aec:	.word	0x00000384
   12af0:	.word	0x00035460
   12af4:	.word	0x00035454
   12af8:	.word	0x0003544c
   12afc:	.word	0x00035438
   12b00:	.word	0xfffff928
   12b04:	.word	0x00011268
   12b08:	.word	0x0003541c

00012b0c <try_win32>:
   12b0c:	strd	r4, [sp, #-16]!
   12b10:	str	fp, [sp, #8]
   12b14:	str	lr, [sp, #12]
   12b18:	add	fp, sp, #12
   12b1c:	ldr	r4, [pc, #212]	; 12bf8 <try_win32+0xec>
   12b20:	add	r4, pc, r4
   12b24:	bl	5174 <rb_init_netio_win32>
   12b28:	mov	r3, r0
   12b2c:	cmp	r3, #0
   12b30:	bne	12bdc <try_win32+0xd0>
   12b34:	ldr	r3, [pc, #192]	; 12bfc <try_win32+0xf0>
   12b38:	add	r3, pc, r3
   12b3c:	ldr	r2, [pc, #188]	; 12c00 <try_win32+0xf4>
   12b40:	ldr	r2, [r4, r2]
   12b44:	str	r2, [r3]
   12b48:	ldr	r3, [pc, #180]	; 12c04 <try_win32+0xf8>
   12b4c:	add	r3, pc, r3
   12b50:	ldr	r2, [pc, #176]	; 12c08 <try_win32+0xfc>
   12b54:	ldr	r2, [r4, r2]
   12b58:	str	r2, [r3]
   12b5c:	ldr	r3, [pc, #168]	; 12c0c <try_win32+0x100>
   12b60:	add	r3, pc, r3
   12b64:	ldr	r2, [pc, #164]	; 12c10 <try_win32+0x104>
   12b68:	ldr	r2, [r4, r2]
   12b6c:	str	r2, [r3]
   12b70:	ldr	r3, [pc, #156]	; 12c14 <try_win32+0x108>
   12b74:	add	r3, pc, r3
   12b78:	mov	r2, #0
   12b7c:	str	r2, [r3]
   12b80:	ldr	r3, [pc, #144]	; 12c18 <try_win32+0x10c>
   12b84:	add	r3, pc, r3
   12b88:	mov	r2, #0
   12b8c:	str	r2, [r3]
   12b90:	ldr	r3, [pc, #132]	; 12c1c <try_win32+0x110>
   12b94:	add	r3, pc, r3
   12b98:	mov	r2, #0
   12b9c:	str	r2, [r3]
   12ba0:	ldr	r3, [pc, #120]	; 12c20 <try_win32+0x114>
   12ba4:	add	r3, pc, r3
   12ba8:	ldr	r2, [pc, #116]	; 12c24 <try_win32+0x118>
   12bac:	add	r2, pc, r2
   12bb0:	str	r2, [r3]
   12bb4:	mov	r2, #25
   12bb8:	ldr	r3, [pc, #104]	; 12c28 <try_win32+0x11c>
   12bbc:	add	r3, pc, r3
   12bc0:	mov	r1, r3
   12bc4:	ldr	r3, [pc, #96]	; 12c2c <try_win32+0x120>
   12bc8:	add	r3, pc, r3
   12bcc:	mov	r0, r3
   12bd0:	bl	46c0 <rb_strlcpy@plt>
   12bd4:	mov	r3, #0
   12bd8:	b	12be0 <try_win32+0xd4>
   12bdc:	mvn	r3, #0
   12be0:	mov	r0, r3
   12be4:	sub	sp, fp, #12
   12be8:	ldrd	r4, [sp]
   12bec:	ldr	fp, [sp, #8]
   12bf0:	add	sp, sp, #12
   12bf4:	pop	{pc}		; (ldr pc, [sp], #4)
   12bf8:	.word	0x000224d8
   12bfc:	.word	0x0003536c
   12c00:	.word	0x000003a0
   12c04:	.word	0x0003535c
   12c08:	.word	0x000003ac
   12c0c:	.word	0x0003534c
   12c10:	.word	0x00000374
   12c14:	.word	0x0003533c
   12c18:	.word	0x00035330
   12c1c:	.word	0x00035328
   12c20:	.word	0x00035314
   12c24:	.word	0xfffff804
   12c28:	.word	0x0001114c
   12c2c:	.word	0x000352f8

00012c30 <try_select>:
   12c30:	strd	r4, [sp, #-16]!
   12c34:	str	fp, [sp, #8]
   12c38:	str	lr, [sp, #12]
   12c3c:	add	fp, sp, #12
   12c40:	ldr	r4, [pc, #212]	; 12d1c <try_select+0xec>
   12c44:	add	r4, pc, r4
   12c48:	bl	1ce9c <rb_init_netio_select>
   12c4c:	mov	r3, r0
   12c50:	cmp	r3, #0
   12c54:	bne	12d00 <try_select+0xd0>
   12c58:	ldr	r3, [pc, #192]	; 12d20 <try_select+0xf0>
   12c5c:	add	r3, pc, r3
   12c60:	ldr	r2, [pc, #188]	; 12d24 <try_select+0xf4>
   12c64:	ldr	r2, [r4, r2]
   12c68:	str	r2, [r3]
   12c6c:	ldr	r3, [pc, #180]	; 12d28 <try_select+0xf8>
   12c70:	add	r3, pc, r3
   12c74:	ldr	r2, [pc, #176]	; 12d2c <try_select+0xfc>
   12c78:	ldr	r2, [r4, r2]
   12c7c:	str	r2, [r3]
   12c80:	ldr	r3, [pc, #168]	; 12d30 <try_select+0x100>
   12c84:	add	r3, pc, r3
   12c88:	ldr	r2, [pc, #164]	; 12d34 <try_select+0x104>
   12c8c:	ldr	r2, [r4, r2]
   12c90:	str	r2, [r3]
   12c94:	ldr	r3, [pc, #156]	; 12d38 <try_select+0x108>
   12c98:	add	r3, pc, r3
   12c9c:	mov	r2, #0
   12ca0:	str	r2, [r3]
   12ca4:	ldr	r3, [pc, #144]	; 12d3c <try_select+0x10c>
   12ca8:	add	r3, pc, r3
   12cac:	mov	r2, #0
   12cb0:	str	r2, [r3]
   12cb4:	ldr	r3, [pc, #132]	; 12d40 <try_select+0x110>
   12cb8:	add	r3, pc, r3
   12cbc:	mov	r2, #0
   12cc0:	str	r2, [r3]
   12cc4:	ldr	r3, [pc, #120]	; 12d44 <try_select+0x114>
   12cc8:	add	r3, pc, r3
   12ccc:	ldr	r2, [pc, #116]	; 12d48 <try_select+0x118>
   12cd0:	add	r2, pc, r2
   12cd4:	str	r2, [r3]
   12cd8:	mov	r2, #25
   12cdc:	ldr	r3, [pc, #104]	; 12d4c <try_select+0x11c>
   12ce0:	add	r3, pc, r3
   12ce4:	mov	r1, r3
   12ce8:	ldr	r3, [pc, #96]	; 12d50 <try_select+0x120>
   12cec:	add	r3, pc, r3
   12cf0:	mov	r0, r3
   12cf4:	bl	46c0 <rb_strlcpy@plt>
   12cf8:	mov	r3, #0
   12cfc:	b	12d04 <try_select+0xd4>
   12d00:	mvn	r3, #0
   12d04:	mov	r0, r3
   12d08:	sub	sp, fp, #12
   12d0c:	ldrd	r4, [sp]
   12d10:	ldr	fp, [sp, #8]
   12d14:	add	sp, sp, #12
   12d18:	pop	{pc}		; (ldr pc, [sp], #4)
   12d1c:	.word	0x000223b4
   12d20:	.word	0x00035248
   12d24:	.word	0x00000424
   12d28:	.word	0x00035238
   12d2c:	.word	0x000003bc
   12d30:	.word	0x00035228
   12d34:	.word	0x00000404
   12d38:	.word	0x00035218
   12d3c:	.word	0x0003520c
   12d40:	.word	0x00035204
   12d44:	.word	0x000351f0
   12d48:	.word	0xfffff6e0
   12d4c:	.word	0x00011030
   12d50:	.word	0x000351d4

00012d54 <rb_io_sched_event>:
   12d54:	str	fp, [sp, #-8]!
   12d58:	str	lr, [sp, #4]
   12d5c:	add	fp, sp, #4
   12d60:	sub	sp, sp, #8
   12d64:	str	r0, [fp, #-8]
   12d68:	str	r1, [fp, #-12]
   12d6c:	ldr	r3, [fp, #-8]
   12d70:	cmp	r3, #0
   12d74:	beq	12dbc <rb_io_sched_event+0x68>
   12d78:	ldr	r3, [pc, #116]	; 12df4 <rb_io_sched_event+0xa0>
   12d7c:	add	r3, pc, r3
   12d80:	ldr	r3, [r3]
   12d84:	cmp	r3, #0
   12d88:	beq	12dbc <rb_io_sched_event+0x68>
   12d8c:	ldr	r3, [pc, #100]	; 12df8 <rb_io_sched_event+0xa4>
   12d90:	add	r3, pc, r3
   12d94:	ldr	r3, [r3]
   12d98:	cmp	r3, #0
   12d9c:	beq	12dbc <rb_io_sched_event+0x68>
   12da0:	ldr	r3, [pc, #84]	; 12dfc <rb_io_sched_event+0xa8>
   12da4:	add	r3, pc, r3
   12da8:	ldr	r3, [r3]
   12dac:	blx	r3
   12db0:	mov	r3, r0
   12db4:	cmp	r3, #0
   12db8:	bne	12dc4 <rb_io_sched_event+0x70>
   12dbc:	mov	r3, #0
   12dc0:	b	12de0 <rb_io_sched_event+0x8c>
   12dc4:	ldr	r3, [pc, #52]	; 12e00 <rb_io_sched_event+0xac>
   12dc8:	add	r3, pc, r3
   12dcc:	ldr	r3, [r3]
   12dd0:	ldr	r1, [fp, #-12]
   12dd4:	ldr	r0, [fp, #-8]
   12dd8:	blx	r3
   12ddc:	mov	r3, r0
   12de0:	mov	r0, r3
   12de4:	sub	sp, fp, #4
   12de8:	ldr	fp, [sp]
   12dec:	add	sp, sp, #4
   12df0:	pop	{pc}		; (ldr pc, [sp], #4)
   12df4:	.word	0x0003513c
   12df8:	.word	0x00035120
   12dfc:	.word	0x00035114
   12e00:	.word	0x000350e8

00012e04 <rb_io_unsched_event>:
   12e04:	str	fp, [sp, #-8]!
   12e08:	str	lr, [sp, #4]
   12e0c:	add	fp, sp, #4
   12e10:	sub	sp, sp, #8
   12e14:	str	r0, [fp, #-8]
   12e18:	ldr	r3, [fp, #-8]
   12e1c:	cmp	r3, #0
   12e20:	beq	12e80 <rb_io_unsched_event+0x7c>
   12e24:	ldr	r3, [pc, #104]	; 12e94 <rb_io_unsched_event+0x90>
   12e28:	add	r3, pc, r3
   12e2c:	ldr	r3, [r3]
   12e30:	cmp	r3, #0
   12e34:	beq	12e80 <rb_io_unsched_event+0x7c>
   12e38:	ldr	r3, [pc, #88]	; 12e98 <rb_io_unsched_event+0x94>
   12e3c:	add	r3, pc, r3
   12e40:	ldr	r3, [r3]
   12e44:	cmp	r3, #0
   12e48:	beq	12e80 <rb_io_unsched_event+0x7c>
   12e4c:	ldr	r3, [pc, #72]	; 12e9c <rb_io_unsched_event+0x98>
   12e50:	add	r3, pc, r3
   12e54:	ldr	r3, [r3]
   12e58:	blx	r3
   12e5c:	mov	r3, r0
   12e60:	cmp	r3, #0
   12e64:	beq	12e80 <rb_io_unsched_event+0x7c>
   12e68:	ldr	r3, [pc, #48]	; 12ea0 <rb_io_unsched_event+0x9c>
   12e6c:	add	r3, pc, r3
   12e70:	ldr	r3, [r3]
   12e74:	ldr	r0, [fp, #-8]
   12e78:	blx	r3
   12e7c:	b	12e84 <rb_io_unsched_event+0x80>
   12e80:	nop	{0}
   12e84:	sub	sp, fp, #4
   12e88:	ldr	fp, [sp]
   12e8c:	add	sp, sp, #4
   12e90:	pop	{pc}		; (ldr pc, [sp], #4)
   12e94:	.word	0x00035090
   12e98:	.word	0x00035078
   12e9c:	.word	0x00035068
   12ea0:	.word	0x00035048

00012ea4 <rb_io_supports_event>:
   12ea4:	str	fp, [sp, #-8]!
   12ea8:	str	lr, [sp, #4]
   12eac:	add	fp, sp, #4
   12eb0:	ldr	r3, [pc, #60]	; 12ef4 <rb_io_supports_event+0x50>
   12eb4:	add	r3, pc, r3
   12eb8:	ldr	r3, [r3]
   12ebc:	cmp	r3, #0
   12ec0:	bne	12ecc <rb_io_supports_event+0x28>
   12ec4:	mov	r3, #0
   12ec8:	b	12ee0 <rb_io_supports_event+0x3c>
   12ecc:	ldr	r3, [pc, #36]	; 12ef8 <rb_io_supports_event+0x54>
   12ed0:	add	r3, pc, r3
   12ed4:	ldr	r3, [r3]
   12ed8:	blx	r3
   12edc:	mov	r3, r0
   12ee0:	mov	r0, r3
   12ee4:	sub	sp, fp, #4
   12ee8:	ldr	fp, [sp]
   12eec:	add	sp, sp, #4
   12ef0:	pop	{pc}		; (ldr pc, [sp], #4)
   12ef4:	.word	0x00035004
   12ef8:	.word	0x00034fe8

00012efc <rb_io_init_event>:
   12efc:	str	fp, [sp, #-8]!
   12f00:	str	lr, [sp, #4]
   12f04:	add	fp, sp, #4
   12f08:	ldr	r3, [pc, #32]	; 12f30 <rb_io_init_event+0x34>
   12f0c:	add	r3, pc, r3
   12f10:	ldr	r3, [r3]
   12f14:	blx	r3
   12f18:	bl	15f08 <rb_event_io_register_all>
   12f1c:	nop	{0}
   12f20:	sub	sp, fp, #4
   12f24:	ldr	fp, [sp]
   12f28:	add	sp, sp, #4
   12f2c:	pop	{pc}		; (ldr pc, [sp], #4)
   12f30:	.word	0x00034fb0

00012f34 <rb_init_netio>:
   12f34:	str	r4, [sp, #-12]!
   12f38:	str	fp, [sp, #4]
   12f3c:	str	lr, [sp, #8]
   12f40:	add	fp, sp, #8
   12f44:	sub	sp, sp, #12
   12f48:	ldr	r4, [pc, #712]	; 13218 <rb_init_netio+0x2e4>
   12f4c:	add	r4, pc, r4
   12f50:	ldr	r3, [pc, #708]	; 1321c <rb_init_netio+0x2e8>
   12f54:	add	r3, pc, r3
   12f58:	mov	r0, r3
   12f5c:	bl	45b8 <getenv@plt>
   12f60:	str	r0, [fp, #-16]
   12f64:	mov	r0, #49152	; 0xc000
   12f68:	bl	ee7c <rb_malloc>
   12f6c:	mov	r2, r0
   12f70:	ldr	r3, [pc, #680]	; 13220 <rb_init_netio+0x2ec>
   12f74:	ldr	r3, [r4, r3]
   12f78:	str	r2, [r3]
   12f7c:	bl	143f0 <rb_init_ssl>
   12f80:	ldr	r3, [fp, #-16]
   12f84:	cmp	r3, #0
   12f88:	beq	13124 <rb_init_netio+0x1f0>
   12f8c:	ldr	r1, [fp, #-16]
   12f90:	ldr	r3, [pc, #652]	; 13224 <rb_init_netio+0x2f0>
   12f94:	add	r3, pc, r3
   12f98:	mov	r0, r3
   12f9c:	bl	4d14 <strcmp@plt>
   12fa0:	mov	r3, r0
   12fa4:	cmp	r3, #0
   12fa8:	bne	12fc0 <rb_init_netio+0x8c>
   12fac:	bl	12510 <try_epoll>
   12fb0:	mov	r3, r0
   12fb4:	cmp	r3, #0
   12fb8:	bne	130f4 <rb_init_netio+0x1c0>
   12fbc:	b	13204 <rb_init_netio+0x2d0>
   12fc0:	ldr	r1, [fp, #-16]
   12fc4:	ldr	r3, [pc, #604]	; 13228 <rb_init_netio+0x2f4>
   12fc8:	add	r3, pc, r3
   12fcc:	mov	r0, r3
   12fd0:	bl	4d14 <strcmp@plt>
   12fd4:	mov	r3, r0
   12fd8:	cmp	r3, #0
   12fdc:	bne	12ff4 <rb_init_netio+0xc0>
   12fe0:	bl	123d4 <try_kqueue>
   12fe4:	mov	r3, r0
   12fe8:	cmp	r3, #0
   12fec:	bne	130f4 <rb_init_netio+0x1c0>
   12ff0:	b	13204 <rb_init_netio+0x2d0>
   12ff4:	ldr	r1, [fp, #-16]
   12ff8:	ldr	r3, [pc, #556]	; 1322c <rb_init_netio+0x2f8>
   12ffc:	add	r3, pc, r3
   13000:	mov	r0, r3
   13004:	bl	4d14 <strcmp@plt>
   13008:	mov	r3, r0
   1300c:	cmp	r3, #0
   13010:	bne	13028 <rb_init_netio+0xf4>
   13014:	bl	1264c <try_ports>
   13018:	mov	r3, r0
   1301c:	cmp	r3, #0
   13020:	bne	130f4 <rb_init_netio+0x1c0>
   13024:	b	13204 <rb_init_netio+0x2d0>
   13028:	ldr	r1, [fp, #-16]
   1302c:	ldr	r3, [pc, #508]	; 13230 <rb_init_netio+0x2fc>
   13030:	add	r3, pc, r3
   13034:	mov	r0, r3
   13038:	bl	4d14 <strcmp@plt>
   1303c:	mov	r3, r0
   13040:	cmp	r3, #0
   13044:	bne	1305c <rb_init_netio+0x128>
   13048:	bl	129e8 <try_poll>
   1304c:	mov	r3, r0
   13050:	cmp	r3, #0
   13054:	bne	130f4 <rb_init_netio+0x1c0>
   13058:	b	13204 <rb_init_netio+0x2d0>
   1305c:	ldr	r1, [fp, #-16]
   13060:	ldr	r3, [pc, #460]	; 13234 <rb_init_netio+0x300>
   13064:	add	r3, pc, r3
   13068:	mov	r0, r3
   1306c:	bl	4d14 <strcmp@plt>
   13070:	mov	r3, r0
   13074:	cmp	r3, #0
   13078:	bne	13090 <rb_init_netio+0x15c>
   1307c:	bl	12788 <try_devpoll>
   13080:	mov	r3, r0
   13084:	cmp	r3, #0
   13088:	bne	130f4 <rb_init_netio+0x1c0>
   1308c:	b	13204 <rb_init_netio+0x2d0>
   13090:	ldr	r1, [fp, #-16]
   13094:	ldr	r3, [pc, #412]	; 13238 <rb_init_netio+0x304>
   13098:	add	r3, pc, r3
   1309c:	mov	r0, r3
   130a0:	bl	4d14 <strcmp@plt>
   130a4:	mov	r3, r0
   130a8:	cmp	r3, #0
   130ac:	bne	130c4 <rb_init_netio+0x190>
   130b0:	bl	128ac <try_sigio>
   130b4:	mov	r3, r0
   130b8:	cmp	r3, #0
   130bc:	bne	130f4 <rb_init_netio+0x1c0>
   130c0:	b	13204 <rb_init_netio+0x2d0>
   130c4:	ldr	r1, [fp, #-16]
   130c8:	ldr	r3, [pc, #364]	; 1323c <rb_init_netio+0x308>
   130cc:	add	r3, pc, r3
   130d0:	mov	r0, r3
   130d4:	bl	4d14 <strcmp@plt>
   130d8:	mov	r3, r0
   130dc:	cmp	r3, #0
   130e0:	bne	130f4 <rb_init_netio+0x1c0>
   130e4:	bl	12c30 <try_select>
   130e8:	mov	r3, r0
   130ec:	cmp	r3, #0
   130f0:	beq	131b8 <rb_init_netio+0x284>
   130f4:	ldr	r1, [fp, #-16]
   130f8:	ldr	r3, [pc, #320]	; 13240 <rb_init_netio+0x30c>
   130fc:	add	r3, pc, r3
   13100:	mov	r0, r3
   13104:	bl	4d14 <strcmp@plt>
   13108:	mov	r3, r0
   1310c:	cmp	r3, #0
   13110:	bne	13124 <rb_init_netio+0x1f0>
   13114:	bl	12b0c <try_win32>
   13118:	mov	r3, r0
   1311c:	cmp	r3, #0
   13120:	beq	131c0 <rb_init_netio+0x28c>
   13124:	bl	123d4 <try_kqueue>
   13128:	mov	r3, r0
   1312c:	cmp	r3, #0
   13130:	beq	131c8 <rb_init_netio+0x294>
   13134:	bl	12510 <try_epoll>
   13138:	mov	r3, r0
   1313c:	cmp	r3, #0
   13140:	beq	131d0 <rb_init_netio+0x29c>
   13144:	bl	1264c <try_ports>
   13148:	mov	r3, r0
   1314c:	cmp	r3, #0
   13150:	beq	131d8 <rb_init_netio+0x2a4>
   13154:	bl	12788 <try_devpoll>
   13158:	mov	r3, r0
   1315c:	cmp	r3, #0
   13160:	beq	131e0 <rb_init_netio+0x2ac>
   13164:	bl	128ac <try_sigio>
   13168:	mov	r3, r0
   1316c:	cmp	r3, #0
   13170:	beq	131e8 <rb_init_netio+0x2b4>
   13174:	bl	129e8 <try_poll>
   13178:	mov	r3, r0
   1317c:	cmp	r3, #0
   13180:	beq	131f0 <rb_init_netio+0x2bc>
   13184:	bl	12b0c <try_win32>
   13188:	mov	r3, r0
   1318c:	cmp	r3, #0
   13190:	beq	131f8 <rb_init_netio+0x2c4>
   13194:	bl	12c30 <try_select>
   13198:	mov	r3, r0
   1319c:	cmp	r3, #0
   131a0:	beq	13200 <rb_init_netio+0x2cc>
   131a4:	ldr	r3, [pc, #152]	; 13244 <rb_init_netio+0x310>
   131a8:	add	r3, pc, r3
   131ac:	mov	r0, r3
   131b0:	bl	493c <rb_lib_log@plt>
   131b4:	bl	43e4 <abort@plt>
   131b8:	nop	{0}
   131bc:	b	13204 <rb_init_netio+0x2d0>
   131c0:	nop	{0}
   131c4:	b	13204 <rb_init_netio+0x2d0>
   131c8:	nop	{0}
   131cc:	b	13204 <rb_init_netio+0x2d0>
   131d0:	nop	{0}
   131d4:	b	13204 <rb_init_netio+0x2d0>
   131d8:	nop	{0}
   131dc:	b	13204 <rb_init_netio+0x2d0>
   131e0:	nop	{0}
   131e4:	b	13204 <rb_init_netio+0x2d0>
   131e8:	nop	{0}
   131ec:	b	13204 <rb_init_netio+0x2d0>
   131f0:	nop	{0}
   131f4:	b	13204 <rb_init_netio+0x2d0>
   131f8:	nop	{0}
   131fc:	b	13204 <rb_init_netio+0x2d0>
   13200:	nop	{0}
   13204:	sub	sp, fp, #8
   13208:	ldr	r4, [sp]
   1320c:	ldr	fp, [sp, #4]
   13210:	add	sp, sp, #8
   13214:	pop	{pc}		; (ldr pc, [sp], #4)
   13218:	.word	0x000220ac
   1321c:	.word	0x00010dc4
   13220:	.word	0x000003c4
   13224:	.word	0x00010d4c
   13228:	.word	0x00010d10
   1322c:	.word	0x00010cec
   13230:	.word	0x00010cd0
   13234:	.word	0x00010c8c
   13238:	.word	0x00010c60
   1323c:	.word	0x00010c44
   13240:	.word	0x00010c0c
   13244:	.word	0x00010b84

00013248 <rb_setselect>:
   13248:	str	r4, [sp, #-12]!
   1324c:	str	fp, [sp, #4]
   13250:	str	lr, [sp, #8]
   13254:	add	fp, sp, #8
   13258:	sub	sp, sp, #20
   1325c:	str	r0, [fp, #-16]
   13260:	str	r1, [fp, #-20]	; 0xffffffec
   13264:	str	r2, [fp, #-24]	; 0xffffffe8
   13268:	str	r3, [fp, #-28]	; 0xffffffe4
   1326c:	ldr	r3, [pc, #48]	; 132a4 <rb_setselect+0x5c>
   13270:	add	r3, pc, r3
   13274:	ldr	r4, [r3]
   13278:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1327c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13280:	ldr	r1, [fp, #-20]	; 0xffffffec
   13284:	ldr	r0, [fp, #-16]
   13288:	blx	r4
   1328c:	nop	{0}
   13290:	sub	sp, fp, #8
   13294:	ldr	r4, [sp]
   13298:	ldr	fp, [sp, #4]
   1329c:	add	sp, sp, #8
   132a0:	pop	{pc}		; (ldr pc, [sp], #4)
   132a4:	.word	0x00034c34

000132a8 <rb_select>:
   132a8:	str	fp, [sp, #-8]!
   132ac:	str	lr, [sp, #4]
   132b0:	add	fp, sp, #4
   132b4:	sub	sp, sp, #16
   132b8:	str	r0, [fp, #-16]
   132bc:	ldr	r3, [pc, #48]	; 132f4 <rb_select+0x4c>
   132c0:	add	r3, pc, r3
   132c4:	ldr	r3, [r3]
   132c8:	ldr	r2, [fp, #-16]
   132cc:	mov	r0, r2
   132d0:	blx	r3
   132d4:	str	r0, [fp, #-8]
   132d8:	bl	f234 <free_fds>
   132dc:	ldr	r3, [fp, #-8]
   132e0:	mov	r0, r3
   132e4:	sub	sp, fp, #4
   132e8:	ldr	fp, [sp]
   132ec:	add	sp, sp, #4
   132f0:	pop	{pc}		; (ldr pc, [sp], #4)
   132f4:	.word	0x00034be8

000132f8 <rb_setup_fd>:
   132f8:	str	fp, [sp, #-8]!
   132fc:	str	lr, [sp, #4]
   13300:	add	fp, sp, #4
   13304:	sub	sp, sp, #8
   13308:	str	r0, [fp, #-8]
   1330c:	ldr	r3, [pc, #36]	; 13338 <rb_setup_fd+0x40>
   13310:	add	r3, pc, r3
   13314:	ldr	r3, [r3]
   13318:	ldr	r0, [fp, #-8]
   1331c:	blx	r3
   13320:	mov	r3, r0
   13324:	mov	r0, r3
   13328:	sub	sp, fp, #4
   1332c:	ldr	fp, [sp]
   13330:	add	sp, sp, #4
   13334:	pop	{pc}		; (ldr pc, [sp], #4)
   13338:	.word	0x00034b9c

0001333c <rb_ignore_errno>:
   1333c:	push	{fp}		; (str fp, [sp, #-4]!)
   13340:	add	fp, sp, #0
   13344:	sub	sp, sp, #12
   13348:	str	r0, [fp, #-8]
   1334c:	ldr	r3, [fp, #-8]
   13350:	cmp	r3, #85	; 0x55
   13354:	beq	13398 <rb_ignore_errno+0x5c>
   13358:	ldr	r3, [fp, #-8]
   1335c:	cmp	r3, #85	; 0x55
   13360:	bgt	13380 <rb_ignore_errno+0x44>
   13364:	ldr	r3, [fp, #-8]
   13368:	cmp	r3, #4
   1336c:	beq	13398 <rb_ignore_errno+0x5c>
   13370:	ldr	r3, [fp, #-8]
   13374:	cmp	r3, #11
   13378:	beq	13398 <rb_ignore_errno+0x5c>
   1337c:	b	133a0 <rb_ignore_errno+0x64>
   13380:	ldr	r3, [fp, #-8]
   13384:	cmp	r3, #105	; 0x69
   13388:	beq	13398 <rb_ignore_errno+0x5c>
   1338c:	ldr	r3, [fp, #-8]
   13390:	cmp	r3, #115	; 0x73
   13394:	bne	133a0 <rb_ignore_errno+0x64>
   13398:	mov	r3, #1
   1339c:	b	133a8 <rb_ignore_errno+0x6c>
   133a0:	nop	{0}
   133a4:	mov	r3, #0
   133a8:	mov	r0, r3
   133ac:	add	sp, fp, #0
   133b0:	pop	{fp}		; (ldr fp, [sp], #4)
   133b4:	bx	lr

000133b8 <rb_recv_fd_buf>:
   133b8:	str	r4, [sp, #-12]!
   133bc:	str	fp, [sp, #4]
   133c0:	str	lr, [sp, #8]
   133c4:	add	fp, sp, #8
   133c8:	sub	sp, sp, #180	; 0xb4
   133cc:	str	r0, [fp, #-176]	; 0xffffff50
   133d0:	str	r1, [fp, #-180]	; 0xffffff4c
   133d4:	str	r2, [fp, #-184]	; 0xffffff48
   133d8:	str	r3, [fp, #-188]	; 0xffffff44
   133dc:	mov	r3, #64	; 0x40
   133e0:	strb	r3, [fp, #-13]
   133e4:	ldr	r3, [fp, #4]
   133e8:	add	r3, r3, #1
   133ec:	lsl	r3, r3, #2
   133f0:	sub	r3, r3, #1
   133f4:	bic	r3, r3, #3
   133f8:	add	r3, r3, #12
   133fc:	str	r3, [fp, #-28]	; 0xffffffe4
   13400:	ldr	r3, [fp, #-180]	; 0xffffff4c
   13404:	str	r3, [fp, #-80]	; 0xffffffb0
   13408:	ldr	r3, [fp, #-184]	; 0xffffff48
   1340c:	str	r3, [fp, #-76]	; 0xffffffb4
   13410:	mov	r3, #0
   13414:	str	r3, [fp, #-72]	; 0xffffffb8
   13418:	mov	r3, #0
   1341c:	str	r3, [fp, #-68]	; 0xffffffbc
   13420:	sub	r3, fp, #80	; 0x50
   13424:	str	r3, [fp, #-64]	; 0xffffffc0
   13428:	mov	r3, #1
   1342c:	str	r3, [fp, #-60]	; 0xffffffc4
   13430:	mov	r3, #0
   13434:	str	r3, [fp, #-48]	; 0xffffffd0
   13438:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1343c:	add	r3, r3, #7
   13440:	lsr	r3, r3, #3
   13444:	lsl	r3, r3, #3
   13448:	sub	sp, sp, r3
   1344c:	mov	r3, sp
   13450:	add	r3, r3, #7
   13454:	lsr	r3, r3, #3
   13458:	lsl	r3, r3, #3
   1345c:	str	r3, [fp, #-32]	; 0xffffffe0
   13460:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13464:	str	r3, [fp, #-56]	; 0xffffffc8
   13468:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1346c:	str	r3, [fp, #-52]	; 0xffffffcc
   13470:	ldr	r0, [fp, #-176]	; 0xffffff50
   13474:	bl	4504 <rb_get_fd@plt>
   13478:	sub	r3, fp, #72	; 0x48
   1347c:	mov	r2, #0
   13480:	mov	r1, r3
   13484:	bl	4b64 <recvmsg@plt>
   13488:	str	r0, [fp, #-36]	; 0xffffffdc
   1348c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13490:	cmp	r3, #0
   13494:	bgt	134a0 <rb_recv_fd_buf+0xe8>
   13498:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1349c:	b	13644 <rb_recv_fd_buf+0x28c>
   134a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   134a4:	cmp	r3, #0
   134a8:	beq	1362c <rb_recv_fd_buf+0x274>
   134ac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   134b0:	cmp	r3, #0
   134b4:	beq	1362c <rb_recv_fd_buf+0x274>
   134b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   134bc:	cmp	r3, #11
   134c0:	bls	134cc <rb_recv_fd_buf+0x114>
   134c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   134c8:	b	134d0 <rb_recv_fd_buf+0x118>
   134cc:	mov	r3, #0
   134d0:	str	r3, [fp, #-32]	; 0xffffffe0
   134d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   134d8:	cmp	r3, #0
   134dc:	beq	1362c <rb_recv_fd_buf+0x274>
   134e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   134e4:	ldr	r3, [r3]
   134e8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   134ec:	add	r2, r2, r3
   134f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   134f4:	add	r3, r3, #12
   134f8:	sub	r3, r2, r3
   134fc:	lsr	r3, r3, #2
   13500:	str	r3, [fp, #-40]	; 0xffffffd8
   13504:	mov	r3, #0
   13508:	str	r3, [fp, #-24]	; 0xffffffe8
   1350c:	b	13608 <rb_recv_fd_buf+0x250>
   13510:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13514:	add	r2, r3, #12
   13518:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1351c:	lsl	r3, r3, #2
   13520:	add	r3, r2, r3
   13524:	ldr	r3, [r3]
   13528:	str	r3, [fp, #-44]	; 0xffffffd4
   1352c:	mov	r3, #64	; 0x40
   13530:	strb	r3, [fp, #-13]
   13534:	ldr	r3, [pc, #288]	; 1365c <rb_recv_fd_buf+0x2a4>
   13538:	add	r3, pc, r3
   1353c:	str	r3, [fp, #-20]	; 0xffffffec
   13540:	sub	r3, fp, #172	; 0xac
   13544:	mov	r1, r3
   13548:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1354c:	bl	22cf8 <__fstat>
   13550:	mov	r3, r0
   13554:	cmp	r3, #0
   13558:	bne	135d0 <rb_recv_fd_buf+0x218>
   1355c:	ldr	r3, [fp, #-156]	; 0xffffff64
   13560:	and	r3, r3, #61440	; 0xf000
   13564:	cmp	r3, #49152	; 0xc000
   13568:	bne	13584 <rb_recv_fd_buf+0x1cc>
   1356c:	mov	r3, #4
   13570:	strb	r3, [fp, #-13]
   13574:	ldr	r3, [pc, #228]	; 13660 <rb_recv_fd_buf+0x2a8>
   13578:	add	r3, pc, r3
   1357c:	str	r3, [fp, #-20]	; 0xffffffec
   13580:	b	135d0 <rb_recv_fd_buf+0x218>
   13584:	ldr	r3, [fp, #-156]	; 0xffffff64
   13588:	and	r3, r3, #61440	; 0xf000
   1358c:	cmp	r3, #4096	; 0x1000
   13590:	bne	135ac <rb_recv_fd_buf+0x1f4>
   13594:	mov	r3, #8
   13598:	strb	r3, [fp, #-13]
   1359c:	ldr	r3, [pc, #192]	; 13664 <rb_recv_fd_buf+0x2ac>
   135a0:	add	r3, pc, r3
   135a4:	str	r3, [fp, #-20]	; 0xffffffec
   135a8:	b	135d0 <rb_recv_fd_buf+0x218>
   135ac:	ldr	r3, [fp, #-156]	; 0xffffff64
   135b0:	and	r3, r3, #61440	; 0xf000
   135b4:	cmp	r3, #32768	; 0x8000
   135b8:	bne	135d0 <rb_recv_fd_buf+0x218>
   135bc:	mov	r3, #2
   135c0:	strb	r3, [fp, #-13]
   135c4:	ldr	r3, [pc, #156]	; 13668 <rb_recv_fd_buf+0x2b0>
   135c8:	add	r3, pc, r3
   135cc:	str	r3, [fp, #-20]	; 0xffffffec
   135d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   135d4:	lsl	r3, r3, #2
   135d8:	ldr	r2, [fp, #-188]	; 0xffffff44
   135dc:	add	r4, r2, r3
   135e0:	ldrb	r3, [fp, #-13]
   135e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   135e8:	mov	r1, r3
   135ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   135f0:	bl	4aa4 <rb_open@plt>
   135f4:	mov	r3, r0
   135f8:	str	r3, [r4]
   135fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13600:	add	r3, r3, #1
   13604:	str	r3, [fp, #-24]	; 0xffffffe8
   13608:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1360c:	ldr	r3, [fp, #4]
   13610:	cmp	r2, r3
   13614:	bge	1363c <rb_recv_fd_buf+0x284>
   13618:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1361c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13620:	cmp	r2, r3
   13624:	blt	13510 <rb_recv_fd_buf+0x158>
   13628:	b	1363c <rb_recv_fd_buf+0x284>
   1362c:	ldr	r3, [fp, #-188]	; 0xffffff44
   13630:	mov	r2, #0
   13634:	str	r2, [r3]
   13638:	b	13640 <rb_recv_fd_buf+0x288>
   1363c:	nop	{0}
   13640:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13644:	mov	r0, r3
   13648:	sub	sp, fp, #8
   1364c:	ldr	r4, [sp]
   13650:	ldr	fp, [sp, #4]
   13654:	add	sp, sp, #8
   13658:	pop	{pc}		; (ldr pc, [sp], #4)
   1365c:	.word	0x00010830
   13660:	.word	0x00010800
   13664:	.word	0x000107e8
   13668:	.word	0x000107cc

0001366c <rb_send_fd_buf>:
   1366c:	strd	r4, [sp, #-16]!
   13670:	str	fp, [sp, #8]
   13674:	str	lr, [sp, #12]
   13678:	add	fp, sp, #12
   1367c:	sub	sp, sp, #80	; 0x50
   13680:	str	r0, [fp, #-80]	; 0xffffffb0
   13684:	str	r1, [fp, #-84]	; 0xffffffac
   13688:	str	r2, [fp, #-88]	; 0xffffffa8
   1368c:	str	r3, [fp, #-92]	; 0xffffffa4
   13690:	mov	r3, #48	; 0x30
   13694:	strb	r3, [fp, #-73]	; 0xffffffb7
   13698:	sub	r3, fp, #64	; 0x40
   1369c:	mov	r2, #28
   136a0:	mov	r1, #0
   136a4:	mov	r0, r3
   136a8:	bl	4648 <memset@plt>
   136ac:	ldr	r3, [fp, #4]
   136b0:	cmp	r3, #0
   136b4:	bne	136cc <rb_send_fd_buf+0x60>
   136b8:	sub	r3, fp, #73	; 0x49
   136bc:	str	r3, [fp, #-72]	; 0xffffffb8
   136c0:	mov	r3, #1
   136c4:	str	r3, [fp, #-68]	; 0xffffffbc
   136c8:	b	136dc <rb_send_fd_buf+0x70>
   136cc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   136d0:	str	r3, [fp, #-72]	; 0xffffffb8
   136d4:	ldr	r3, [fp, #4]
   136d8:	str	r3, [fp, #-68]	; 0xffffffbc
   136dc:	sub	r3, fp, #72	; 0x48
   136e0:	str	r3, [fp, #-56]	; 0xffffffc8
   136e4:	mov	r3, #1
   136e8:	str	r3, [fp, #-52]	; 0xffffffcc
   136ec:	mov	r3, #0
   136f0:	str	r3, [fp, #-64]	; 0xffffffc0
   136f4:	mov	r3, #0
   136f8:	str	r3, [fp, #-60]	; 0xffffffc4
   136fc:	mov	r3, #0
   13700:	str	r3, [fp, #-40]	; 0xffffffd8
   13704:	mov	r3, #0
   13708:	str	r3, [fp, #-48]	; 0xffffffd0
   1370c:	mov	r3, #0
   13710:	str	r3, [fp, #-44]	; 0xffffffd4
   13714:	ldr	r3, [fp, #-88]	; 0xffffffa8
   13718:	cmp	r3, #0
   1371c:	ble	138a0 <rb_send_fd_buf+0x234>
   13720:	mov	r3, sp
   13724:	mov	r5, r3
   13728:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1372c:	str	r3, [fp, #-20]	; 0xffffffec
   13730:	ldr	r3, [fp, #-88]	; 0xffffffa8
   13734:	add	r3, r3, #1
   13738:	lsl	r3, r3, #2
   1373c:	sub	r3, r3, #1
   13740:	bic	r3, r3, #3
   13744:	add	r3, r3, #12
   13748:	str	r3, [fp, #-24]	; 0xffffffe8
   1374c:	ldr	ip, [fp, #-24]	; 0xffffffe8
   13750:	sub	r3, ip, #1
   13754:	str	r3, [fp, #-28]	; 0xffffffe4
   13758:	mov	r3, ip
   1375c:	mov	r0, r3
   13760:	mov	r1, #0
   13764:	mov	r2, #0
   13768:	mov	r3, #0
   1376c:	lsl	r3, r1, #3
   13770:	orr	r3, r3, r0, lsr #29
   13774:	lsl	r2, r0, #3
   13778:	mov	r3, ip
   1377c:	mov	r0, r3
   13780:	mov	r1, #0
   13784:	mov	r2, #0
   13788:	mov	r3, #0
   1378c:	lsl	r3, r1, #3
   13790:	orr	r3, r3, r0, lsr #29
   13794:	lsl	r2, r0, #3
   13798:	mov	r3, ip
   1379c:	add	r3, r3, #7
   137a0:	lsr	r3, r3, #3
   137a4:	lsl	r3, r3, #3
   137a8:	sub	sp, sp, r3
   137ac:	mov	r3, sp
   137b0:	add	r3, r3, #0
   137b4:	str	r3, [fp, #-32]	; 0xffffffe0
   137b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   137bc:	str	r3, [fp, #-48]	; 0xffffffd0
   137c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   137c4:	str	r3, [fp, #-44]	; 0xffffffd4
   137c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   137cc:	cmp	r3, #11
   137d0:	bls	137dc <rb_send_fd_buf+0x170>
   137d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   137d8:	b	137e0 <rb_send_fd_buf+0x174>
   137dc:	mov	r3, #0
   137e0:	str	r3, [fp, #-36]	; 0xffffffdc
   137e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   137e8:	mov	r2, #1
   137ec:	str	r2, [r3, #4]
   137f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   137f4:	mov	r2, #1
   137f8:	str	r2, [r3, #8]
   137fc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   13800:	add	r3, r3, #3
   13804:	lsl	r2, r3, #2
   13808:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1380c:	str	r2, [r3]
   13810:	mov	r3, #0
   13814:	str	r3, [fp, #-16]
   13818:	b	13860 <rb_send_fd_buf+0x1f4>
   1381c:	ldr	r3, [fp, #-16]
   13820:	lsl	r3, r3, #2
   13824:	ldr	r2, [fp, #-84]	; 0xffffffac
   13828:	add	r3, r2, r3
   1382c:	ldr	r1, [r3]
   13830:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13834:	add	r2, r3, #12
   13838:	ldr	r3, [fp, #-16]
   1383c:	lsl	r3, r3, #2
   13840:	add	r4, r2, r3
   13844:	mov	r0, r1
   13848:	bl	4504 <rb_get_fd@plt>
   1384c:	mov	r3, r0
   13850:	str	r3, [r4]
   13854:	ldr	r3, [fp, #-16]
   13858:	add	r3, r3, #1
   1385c:	str	r3, [fp, #-16]
   13860:	ldr	r2, [fp, #-16]
   13864:	ldr	r3, [fp, #-20]	; 0xffffffec
   13868:	cmp	r2, r3
   1386c:	bcc	1381c <rb_send_fd_buf+0x1b0>
   13870:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13874:	ldr	r3, [r3]
   13878:	str	r3, [fp, #-44]	; 0xffffffd4
   1387c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   13880:	bl	4504 <rb_get_fd@plt>
   13884:	sub	r3, fp, #64	; 0x40
   13888:	mov	r2, #16384	; 0x4000
   1388c:	mov	r1, r3
   13890:	bl	472c <sendmsg@plt>
   13894:	mov	r3, r0
   13898:	mov	sp, r5
   1389c:	b	138bc <rb_send_fd_buf+0x250>
   138a0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   138a4:	bl	4504 <rb_get_fd@plt>
   138a8:	sub	r3, fp, #64	; 0x40
   138ac:	mov	r2, #16384	; 0x4000
   138b0:	mov	r1, r3
   138b4:	bl	472c <sendmsg@plt>
   138b8:	mov	r3, r0
   138bc:	mov	r0, r3
   138c0:	sub	sp, fp, #12
   138c4:	ldrd	r4, [sp]
   138c8:	ldr	fp, [sp, #8]
   138cc:	add	sp, sp, #12
   138d0:	pop	{pc}		; (ldr pc, [sp], #4)

000138d4 <rb_ipv4_from_ipv6>:
   138d4:	str	fp, [sp, #-8]!
   138d8:	str	lr, [sp, #4]
   138dc:	add	fp, sp, #4
   138e0:	sub	sp, sp, #16
   138e4:	str	r0, [fp, #-16]
   138e8:	str	r1, [fp, #-20]	; 0xffffffec
   138ec:	ldr	r3, [fp, #-16]
   138f0:	add	r3, r3, #8
   138f4:	mov	r2, #2
   138f8:	ldr	r1, [pc, #252]	; 139fc <rb_ipv4_from_ipv6+0x128>
   138fc:	add	r1, pc, r1
   13900:	mov	r0, r3
   13904:	bl	4474 <memcmp@plt>
   13908:	mov	r3, r0
   1390c:	cmp	r3, #0
   13910:	bne	13934 <rb_ipv4_from_ipv6+0x60>
   13914:	ldr	r3, [fp, #-20]	; 0xffffffec
   13918:	add	r3, r3, #4
   1391c:	ldr	r2, [fp, #-16]
   13920:	add	r2, r2, #8
   13924:	add	r2, r2, #2
   13928:	ldr	r2, [r2]
   1392c:	str	r2, [r3]
   13930:	b	139bc <rb_ipv4_from_ipv6+0xe8>
   13934:	ldr	r3, [fp, #-16]
   13938:	add	r3, r3, #8
   1393c:	mov	r2, #4
   13940:	ldr	r1, [pc, #184]	; 13a00 <rb_ipv4_from_ipv6+0x12c>
   13944:	add	r1, pc, r1
   13948:	mov	r0, r3
   1394c:	bl	4474 <memcmp@plt>
   13950:	mov	r3, r0
   13954:	cmp	r3, #0
   13958:	bne	139b4 <rb_ipv4_from_ipv6+0xe0>
   1395c:	mov	r3, #0
   13960:	str	r3, [fp, #-8]
   13964:	b	139a4 <rb_ipv4_from_ipv6+0xd0>
   13968:	ldr	r3, [fp, #-8]
   1396c:	add	r3, r3, #12
   13970:	ldr	r2, [fp, #-16]
   13974:	add	r3, r2, r3
   13978:	ldrb	r2, [r3, #8]
   1397c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13980:	add	r1, r3, #4
   13984:	ldr	r3, [fp, #-8]
   13988:	add	r3, r1, r3
   1398c:	mvn	r2, r2
   13990:	uxtb	r2, r2
   13994:	strb	r2, [r3]
   13998:	ldr	r3, [fp, #-8]
   1399c:	add	r3, r3, #1
   139a0:	str	r3, [fp, #-8]
   139a4:	ldr	r3, [fp, #-8]
   139a8:	cmp	r3, #3
   139ac:	ble	13968 <rb_ipv4_from_ipv6+0x94>
   139b0:	b	139bc <rb_ipv4_from_ipv6+0xe8>
   139b4:	mov	r3, #0
   139b8:	b	139e8 <rb_ipv4_from_ipv6+0x114>
   139bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   139c0:	ldrh	r2, [r3]
   139c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   139c8:	strh	r2, [r3]
   139cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   139d0:	mov	r2, #2
   139d4:	strh	r2, [r3]
   139d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   139dc:	mov	r2, #0
   139e0:	strh	r2, [r3, #2]
   139e4:	mov	r3, #1
   139e8:	mov	r0, r3
   139ec:	sub	sp, fp, #4
   139f0:	ldr	fp, [sp]
   139f4:	add	sp, sp, #4
   139f8:	pop	{pc}		; (ldr pc, [sp], #4)
   139fc:	.word	0x000104a4
   13a00:	.word	0x00010460

00013a04 <rb_malloc>:
   13a04:	str	fp, [sp, #-8]!
   13a08:	str	lr, [sp, #4]
   13a0c:	add	fp, sp, #4
   13a10:	sub	sp, sp, #16
   13a14:	str	r0, [fp, #-16]
   13a18:	ldr	r1, [fp, #-16]
   13a1c:	mov	r0, #1
   13a20:	bl	460c <calloc@plt>
   13a24:	mov	r3, r0
   13a28:	str	r3, [fp, #-8]
   13a2c:	ldr	r3, [fp, #-8]
   13a30:	cmp	r3, #0
   13a34:	moveq	r3, #1
   13a38:	movne	r3, #0
   13a3c:	uxtb	r3, r3
   13a40:	cmp	r3, #0
   13a44:	beq	13a4c <rb_malloc+0x48>
   13a48:	bl	49a8 <rb_outofmemory@plt>
   13a4c:	ldr	r3, [fp, #-8]
   13a50:	mov	r0, r3
   13a54:	sub	sp, fp, #4
   13a58:	ldr	fp, [sp]
   13a5c:	add	sp, sp, #4
   13a60:	pop	{pc}		; (ldr pc, [sp], #4)

00013a64 <rb_free>:
   13a64:	str	fp, [sp, #-8]!
   13a68:	str	lr, [sp, #4]
   13a6c:	add	fp, sp, #4
   13a70:	sub	sp, sp, #8
   13a74:	str	r0, [fp, #-8]
   13a78:	ldr	r3, [fp, #-8]
   13a7c:	cmp	r3, #0
   13a80:	movne	r3, #1
   13a84:	moveq	r3, #0
   13a88:	uxtb	r3, r3
   13a8c:	cmp	r3, #0
   13a90:	beq	13a9c <rb_free+0x38>
   13a94:	ldr	r0, [fp, #-8]
   13a98:	bl	4720 <free@plt>
   13a9c:	nop	{0}
   13aa0:	sub	sp, fp, #4
   13aa4:	ldr	fp, [sp]
   13aa8:	add	sp, sp, #4
   13aac:	pop	{pc}		; (ldr pc, [sp], #4)

00013ab0 <rb_ssl_last_err>:
   13ab0:	str	fp, [sp, #-8]!
   13ab4:	str	lr, [sp, #4]
   13ab8:	add	fp, sp, #4
   13abc:	sub	sp, sp, #8
   13ac0:	mov	r3, #0
   13ac4:	str	r3, [fp, #-8]
   13ac8:	b	13ad4 <rb_ssl_last_err+0x24>
   13acc:	ldr	r3, [fp, #-12]
   13ad0:	str	r3, [fp, #-8]
   13ad4:	bl	4420 <ERR_get_error@plt>
   13ad8:	str	r0, [fp, #-12]
   13adc:	ldr	r3, [fp, #-12]
   13ae0:	cmp	r3, #0
   13ae4:	bne	13acc <rb_ssl_last_err+0x1c>
   13ae8:	ldr	r3, [fp, #-8]
   13aec:	mov	r0, r3
   13af0:	sub	sp, fp, #4
   13af4:	ldr	fp, [sp]
   13af8:	add	sp, sp, #4
   13afc:	pop	{pc}		; (ldr pc, [sp], #4)

00013b00 <rb_ssl_init_fd>:
   13b00:	str	r4, [sp, #-12]!
   13b04:	str	fp, [sp, #4]
   13b08:	str	lr, [sp, #8]
   13b0c:	add	fp, sp, #8
   13b10:	sub	sp, sp, #12
   13b14:	str	r0, [fp, #-16]
   13b18:	str	r1, [fp, #-20]	; 0xffffffec
   13b1c:	bl	13ab0 <rb_ssl_last_err>
   13b20:	ldr	r3, [pc, #224]	; 13c08 <rb_ssl_init_fd+0x108>
   13b24:	add	r3, pc, r3
   13b28:	ldr	r3, [r3]
   13b2c:	mov	r0, r3
   13b30:	bl	475c <SSL_new@plt>
   13b34:	mov	r2, r0
   13b38:	ldr	r3, [fp, #-16]
   13b3c:	str	r2, [r3, #56]	; 0x38
   13b40:	ldr	r3, [fp, #-16]
   13b44:	ldr	r3, [r3, #56]	; 0x38
   13b48:	cmp	r3, #0
   13b4c:	bne	13b90 <rb_ssl_init_fd+0x90>
   13b50:	bl	13ab0 <rb_ssl_last_err>
   13b54:	mov	r3, r0
   13b58:	mov	r0, r3
   13b5c:	bl	13f1c <rb_ssl_strerror>
   13b60:	mov	r3, r0
   13b64:	mov	r2, r3
   13b68:	ldr	r3, [pc, #156]	; 13c0c <rb_ssl_init_fd+0x10c>
   13b6c:	add	r3, pc, r3
   13b70:	mov	r1, r3
   13b74:	ldr	r3, [pc, #148]	; 13c10 <rb_ssl_init_fd+0x110>
   13b78:	add	r3, pc, r3
   13b7c:	mov	r0, r3
   13b80:	bl	493c <rb_lib_log@plt>
   13b84:	ldr	r0, [fp, #-16]
   13b88:	bl	4888 <rb_close@plt>
   13b8c:	b	13bf4 <rb_ssl_init_fd+0xf4>
   13b90:	ldr	r3, [fp, #-20]	; 0xffffffec
   13b94:	cmp	r3, #0
   13b98:	beq	13bac <rb_ssl_init_fd+0xac>
   13b9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ba0:	cmp	r3, #1
   13ba4:	beq	13bc0 <rb_ssl_init_fd+0xc0>
   13ba8:	b	13bd4 <rb_ssl_init_fd+0xd4>
   13bac:	ldr	r3, [fp, #-16]
   13bb0:	ldr	r3, [r3, #56]	; 0x38
   13bb4:	mov	r0, r3
   13bb8:	bl	49f0 <SSL_set_accept_state@plt>
   13bbc:	b	13bd4 <rb_ssl_init_fd+0xd4>
   13bc0:	ldr	r3, [fp, #-16]
   13bc4:	ldr	r3, [r3, #56]	; 0x38
   13bc8:	mov	r0, r3
   13bcc:	bl	4b94 <SSL_set_connect_state@plt>
   13bd0:	nop	{0}
   13bd4:	ldr	r3, [fp, #-16]
   13bd8:	ldr	r4, [r3, #56]	; 0x38
   13bdc:	ldr	r0, [fp, #-16]
   13be0:	bl	4504 <rb_get_fd@plt>
   13be4:	mov	r3, r0
   13be8:	mov	r1, r3
   13bec:	mov	r0, r4
   13bf0:	bl	4684 <SSL_set_fd@plt>
   13bf4:	sub	sp, fp, #8
   13bf8:	ldr	r4, [sp]
   13bfc:	ldr	fp, [sp, #4]
   13c00:	add	sp, sp, #8
   13c04:	pop	{pc}		; (ldr pc, [sp], #4)
   13c08:	.word	0x000343cc
   13c0c:	.word	0x00010668
   13c10:	.word	0x000103dc

00013c14 <rb_ssl_accept_common>:
   13c14:	str	r4, [sp, #-12]!
   13c18:	str	fp, [sp, #4]
   13c1c:	str	lr, [sp, #8]
   13c20:	add	fp, sp, #8
   13c24:	sub	sp, sp, #36	; 0x24
   13c28:	str	r0, [fp, #-32]	; 0xffffffe0
   13c2c:	str	r1, [fp, #-36]	; 0xffffffdc
   13c30:	bl	13ab0 <rb_ssl_last_err>
   13c34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13c38:	ldr	r3, [r3, #56]	; 0x38
   13c3c:	mov	r0, r3
   13c40:	bl	47ec <SSL_do_handshake@plt>
   13c44:	str	r0, [fp, #-16]
   13c48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13c4c:	ldr	r3, [r3, #56]	; 0x38
   13c50:	ldr	r1, [fp, #-16]
   13c54:	mov	r0, r3
   13c58:	bl	4cd8 <SSL_get_error@plt>
   13c5c:	str	r0, [fp, #-20]	; 0xffffffec
   13c60:	ldr	r3, [fp, #-16]
   13c64:	cmp	r3, #1
   13c68:	bne	13cfc <rb_ssl_accept_common+0xe8>
   13c6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13c70:	ldr	r3, [r3, #60]	; 0x3c
   13c74:	add	r2, r3, #1
   13c78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13c7c:	str	r2, [r3, #60]	; 0x3c
   13c80:	mov	r3, #0
   13c84:	mov	r2, #0
   13c88:	mov	r1, #0
   13c8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13c90:	bl	4408 <rb_settimeout@plt>
   13c94:	mov	r3, #0
   13c98:	mov	r2, #0
   13c9c:	mov	r1, #3
   13ca0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13ca4:	bl	44c8 <rb_setselect@plt>
   13ca8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13cac:	ldr	r3, [r3, #52]	; 0x34
   13cb0:	str	r3, [fp, #-24]	; 0xffffffe8
   13cb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13cb8:	mov	r2, #0
   13cbc:	str	r2, [r3, #52]	; 0x34
   13cc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13cc4:	ldr	r4, [r3, #132]	; 0x84
   13cc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13ccc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13cd0:	ldr	r1, [r3, #128]	; 0x80
   13cd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13cd8:	ldr	r3, [r3, #140]	; 0x8c
   13cdc:	str	r3, [sp]
   13ce0:	mov	r3, r1
   13ce4:	mov	r1, #0
   13ce8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13cec:	blx	r4
   13cf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13cf4:	bl	13a64 <rb_free>
   13cf8:	b	13db0 <rb_ssl_accept_common+0x19c>
   13cfc:	ldr	r3, [fp, #-16]
   13d00:	cmn	r3, #1
   13d04:	bne	13d30 <rb_ssl_accept_common+0x11c>
   13d08:	ldr	r3, [fp, #-20]	; 0xffffffec
   13d0c:	cmp	r3, #2
   13d10:	bne	13d30 <rb_ssl_accept_common+0x11c>
   13d14:	mov	r3, #0
   13d18:	ldr	r2, [pc, #164]	; 13dc4 <rb_ssl_accept_common+0x1b0>
   13d1c:	add	r2, pc, r2
   13d20:	mov	r1, #1
   13d24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13d28:	bl	44c8 <rb_setselect@plt>
   13d2c:	b	13db0 <rb_ssl_accept_common+0x19c>
   13d30:	ldr	r3, [fp, #-16]
   13d34:	cmn	r3, #1
   13d38:	bne	13d64 <rb_ssl_accept_common+0x150>
   13d3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13d40:	cmp	r3, #3
   13d44:	bne	13d64 <rb_ssl_accept_common+0x150>
   13d48:	mov	r3, #0
   13d4c:	ldr	r2, [pc, #116]	; 13dc8 <rb_ssl_accept_common+0x1b4>
   13d50:	add	r2, pc, r2
   13d54:	mov	r1, #2
   13d58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13d5c:	bl	44c8 <rb_setselect@plt>
   13d60:	b	13db0 <rb_ssl_accept_common+0x19c>
   13d64:	bl	4d20 <__errno_location@plt>
   13d68:	mov	r2, r0
   13d6c:	mov	r3, #5
   13d70:	str	r3, [r2]
   13d74:	ldr	r2, [fp, #-20]	; 0xffffffec
   13d78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13d7c:	str	r2, [r3, #64]	; 0x40
   13d80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13d84:	ldr	r3, [r3, #52]	; 0x34
   13d88:	ldr	r4, [r3, #132]	; 0x84
   13d8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13d90:	ldr	r3, [r3, #52]	; 0x34
   13d94:	ldr	r3, [r3, #140]	; 0x8c
   13d98:	str	r3, [sp]
   13d9c:	mov	r3, #0
   13da0:	mov	r2, #0
   13da4:	mov	r1, #6
   13da8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13dac:	blx	r4
   13db0:	sub	sp, fp, #8
   13db4:	ldr	r4, [sp]
   13db8:	ldr	fp, [sp, #4]
   13dbc:	add	sp, sp, #8
   13dc0:	pop	{pc}		; (ldr pc, [sp], #4)
   13dc4:	.word	0xfffffef0
   13dc8:	.word	0xfffffebc

00013dcc <rb_ssl_connect_common>:
   13dcc:	str	fp, [sp, #-8]!
   13dd0:	str	lr, [sp, #4]
   13dd4:	add	fp, sp, #4
   13dd8:	sub	sp, sp, #16
   13ddc:	str	r0, [fp, #-16]
   13de0:	str	r1, [fp, #-20]	; 0xffffffec
   13de4:	bl	13ab0 <rb_ssl_last_err>
   13de8:	ldr	r3, [fp, #-16]
   13dec:	ldr	r3, [r3, #56]	; 0x38
   13df0:	mov	r0, r3
   13df4:	bl	47ec <SSL_do_handshake@plt>
   13df8:	str	r0, [fp, #-8]
   13dfc:	ldr	r3, [fp, #-16]
   13e00:	ldr	r3, [r3, #56]	; 0x38
   13e04:	ldr	r1, [fp, #-8]
   13e08:	mov	r0, r3
   13e0c:	bl	4cd8 <SSL_get_error@plt>
   13e10:	str	r0, [fp, #-12]
   13e14:	ldr	r3, [fp, #-8]
   13e18:	cmp	r3, #1
   13e1c:	bne	13e70 <rb_ssl_connect_common+0xa4>
   13e20:	ldr	r3, [fp, #-16]
   13e24:	ldr	r3, [r3, #60]	; 0x3c
   13e28:	add	r2, r3, #1
   13e2c:	ldr	r3, [fp, #-16]
   13e30:	str	r2, [r3, #60]	; 0x3c
   13e34:	mov	r3, #0
   13e38:	mov	r2, #0
   13e3c:	mov	r1, #0
   13e40:	ldr	r0, [fp, #-16]
   13e44:	bl	4408 <rb_settimeout@plt>
   13e48:	mov	r3, #0
   13e4c:	mov	r2, #0
   13e50:	mov	r1, #3
   13e54:	ldr	r0, [fp, #-16]
   13e58:	bl	44c8 <rb_setselect@plt>
   13e5c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13e60:	mov	r1, #0
   13e64:	ldr	r0, [fp, #-16]
   13e68:	bl	14e5c <rb_ssl_connect_realcb>
   13e6c:	b	13f04 <rb_ssl_connect_common+0x138>
   13e70:	ldr	r3, [fp, #-8]
   13e74:	cmn	r3, #1
   13e78:	bne	13ea4 <rb_ssl_connect_common+0xd8>
   13e7c:	ldr	r3, [fp, #-12]
   13e80:	cmp	r3, #2
   13e84:	bne	13ea4 <rb_ssl_connect_common+0xd8>
   13e88:	ldr	r3, [fp, #-20]	; 0xffffffec
   13e8c:	ldr	r2, [pc, #128]	; 13f14 <rb_ssl_connect_common+0x148>
   13e90:	add	r2, pc, r2
   13e94:	mov	r1, #1
   13e98:	ldr	r0, [fp, #-16]
   13e9c:	bl	44c8 <rb_setselect@plt>
   13ea0:	b	13f04 <rb_ssl_connect_common+0x138>
   13ea4:	ldr	r3, [fp, #-8]
   13ea8:	cmn	r3, #1
   13eac:	bne	13ed8 <rb_ssl_connect_common+0x10c>
   13eb0:	ldr	r3, [fp, #-12]
   13eb4:	cmp	r3, #3
   13eb8:	bne	13ed8 <rb_ssl_connect_common+0x10c>
   13ebc:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ec0:	ldr	r2, [pc, #80]	; 13f18 <rb_ssl_connect_common+0x14c>
   13ec4:	add	r2, pc, r2
   13ec8:	mov	r1, #2
   13ecc:	ldr	r0, [fp, #-16]
   13ed0:	bl	44c8 <rb_setselect@plt>
   13ed4:	b	13f04 <rb_ssl_connect_common+0x138>
   13ed8:	bl	4d20 <__errno_location@plt>
   13edc:	mov	r2, r0
   13ee0:	mov	r3, #5
   13ee4:	str	r3, [r2]
   13ee8:	ldr	r2, [fp, #-12]
   13eec:	ldr	r3, [fp, #-16]
   13ef0:	str	r2, [r3, #64]	; 0x40
   13ef4:	ldr	r2, [fp, #-20]	; 0xffffffec
   13ef8:	mov	r1, #6
   13efc:	ldr	r0, [fp, #-16]
   13f00:	bl	14e5c <rb_ssl_connect_realcb>
   13f04:	sub	sp, fp, #4
   13f08:	ldr	fp, [sp]
   13f0c:	add	sp, sp, #4
   13f10:	pop	{pc}		; (ldr pc, [sp], #4)
   13f14:	.word	0xffffff34
   13f18:	.word	0xffffff00

00013f1c <rb_ssl_strerror>:
   13f1c:	str	fp, [sp, #-8]!
   13f20:	str	lr, [sp, #4]
   13f24:	add	fp, sp, #4
   13f28:	sub	sp, sp, #8
   13f2c:	str	r0, [fp, #-8]
   13f30:	mov	r2, #512	; 0x200
   13f34:	ldr	r3, [pc, #40]	; 13f64 <rb_ssl_strerror+0x48>
   13f38:	add	r3, pc, r3
   13f3c:	mov	r1, r3
   13f40:	ldr	r0, [fp, #-8]
   13f44:	bl	45c4 <ERR_error_string_n@plt>
   13f48:	ldr	r3, [pc, #24]	; 13f68 <rb_ssl_strerror+0x4c>
   13f4c:	add	r3, pc, r3
   13f50:	mov	r0, r3
   13f54:	sub	sp, fp, #4
   13f58:	ldr	fp, [sp]
   13f5c:	add	sp, sp, #4
   13f60:	pop	{pc}		; (ldr pc, [sp], #4)
   13f64:	.word	0x00033fbc
   13f68:	.word	0x00033fa8

00013f6c <verify_accept_all_cb>:
   13f6c:	push	{fp}		; (str fp, [sp, #-4]!)
   13f70:	add	fp, sp, #0
   13f74:	sub	sp, sp, #12
   13f78:	str	r0, [fp, #-8]
   13f7c:	str	r1, [fp, #-12]
   13f80:	mov	r3, #1
   13f84:	mov	r0, r3
   13f88:	add	sp, fp, #0
   13f8c:	pop	{fp}		; (ldr fp, [sp], #4)
   13f90:	bx	lr

00013f94 <rb_ssl_read_or_write>:
   13f94:	str	fp, [sp, #-8]!
   13f98:	str	lr, [sp, #4]
   13f9c:	add	fp, sp, #4
   13fa0:	sub	sp, sp, #24
   13fa4:	str	r0, [fp, #-16]
   13fa8:	str	r1, [fp, #-20]	; 0xffffffec
   13fac:	str	r2, [fp, #-24]	; 0xffffffe8
   13fb0:	str	r3, [fp, #-28]	; 0xffffffe4
   13fb4:	bl	13ab0 <rb_ssl_last_err>
   13fb8:	ldr	r3, [fp, #-16]
   13fbc:	cmp	r3, #0
   13fc0:	bne	13fe4 <rb_ssl_read_or_write+0x50>
   13fc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13fc8:	ldr	r3, [r3, #56]	; 0x38
   13fcc:	ldr	r2, [fp, #4]
   13fd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13fd4:	mov	r0, r3
   13fd8:	bl	47a4 <SSL_read@plt>
   13fdc:	str	r0, [fp, #-8]
   13fe0:	b	14000 <rb_ssl_read_or_write+0x6c>
   13fe4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13fe8:	ldr	r3, [r3, #56]	; 0x38
   13fec:	ldr	r2, [fp, #4]
   13ff0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13ff4:	mov	r0, r3
   13ff8:	bl	4618 <SSL_write@plt>
   13ffc:	str	r0, [fp, #-8]
   14000:	ldr	r3, [fp, #-8]
   14004:	cmp	r3, #0
   14008:	bge	140f0 <rb_ssl_read_or_write+0x15c>
   1400c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14010:	ldr	r3, [r3, #56]	; 0x38
   14014:	ldr	r1, [fp, #-8]
   14018:	mov	r0, r3
   1401c:	bl	4cd8 <SSL_get_error@plt>
   14020:	mov	r3, r0
   14024:	sub	r3, r3, #2
   14028:	cmp	r3, #4
   1402c:	addls	pc, pc, r3, lsl #2
   14030:	b	140a8 <rb_ssl_read_or_write+0x114>
   14034:	b	14048 <rb_ssl_read_or_write+0xb4>
   14038:	b	14060 <rb_ssl_read_or_write+0xcc>
   1403c:	b	140a8 <rb_ssl_read_or_write+0x114>
   14040:	b	14080 <rb_ssl_read_or_write+0xec>
   14044:	b	14078 <rb_ssl_read_or_write+0xe4>
   14048:	bl	4d20 <__errno_location@plt>
   1404c:	mov	r2, r0
   14050:	mov	r3, #11
   14054:	str	r3, [r2]
   14058:	mvn	r3, #2
   1405c:	b	140f4 <rb_ssl_read_or_write+0x160>
   14060:	bl	4d20 <__errno_location@plt>
   14064:	mov	r2, r0
   14068:	mov	r3, #11
   1406c:	str	r3, [r2]
   14070:	mvn	r3, #3
   14074:	b	140f4 <rb_ssl_read_or_write+0x160>
   14078:	mov	r3, #0
   1407c:	b	140f4 <rb_ssl_read_or_write+0x160>
   14080:	bl	13ab0 <rb_ssl_last_err>
   14084:	str	r0, [fp, #-12]
   14088:	ldr	r3, [fp, #-12]
   1408c:	cmp	r3, #0
   14090:	bne	140b4 <rb_ssl_read_or_write+0x120>
   14094:	ldr	r3, [fp, #-20]	; 0xffffffec
   14098:	mov	r2, #0
   1409c:	str	r2, [r3, #64]	; 0x40
   140a0:	mvn	r3, #0
   140a4:	b	140f4 <rb_ssl_read_or_write+0x160>
   140a8:	bl	13ab0 <rb_ssl_last_err>
   140ac:	str	r0, [fp, #-12]
   140b0:	b	140b8 <rb_ssl_read_or_write+0x124>
   140b4:	nop	{0}
   140b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   140bc:	ldr	r2, [fp, #-12]
   140c0:	str	r2, [r3, #64]	; 0x40
   140c4:	ldr	r3, [fp, #-12]
   140c8:	cmp	r3, #0
   140cc:	beq	140e8 <rb_ssl_read_or_write+0x154>
   140d0:	bl	4d20 <__errno_location@plt>
   140d4:	mov	r2, r0
   140d8:	mov	r3, #5
   140dc:	str	r3, [r2]
   140e0:	mvn	r3, #1
   140e4:	b	140f4 <rb_ssl_read_or_write+0x160>
   140e8:	mvn	r3, #0
   140ec:	b	140f4 <rb_ssl_read_or_write+0x160>
   140f0:	ldr	r3, [fp, #-8]
   140f4:	mov	r0, r3
   140f8:	sub	sp, fp, #4
   140fc:	ldr	fp, [sp]
   14100:	add	sp, sp, #4
   14104:	pop	{pc}		; (ldr pc, [sp], #4)

00014108 <make_certfp>:
   14108:	str	r4, [sp, #-12]!
   1410c:	str	fp, [sp, #4]
   14110:	str	lr, [sp, #8]
   14114:	add	fp, sp, #8
   14118:	sub	sp, sp, #44	; 0x2c
   1411c:	str	r0, [fp, #-32]	; 0xffffffe0
   14120:	str	r1, [fp, #-36]	; 0xffffffdc
   14124:	str	r2, [fp, #-40]	; 0xffffffd8
   14128:	ldr	r4, [pc, #464]	; 14300 <make_certfp+0x1f8>
   1412c:	add	r4, pc, r4
   14130:	mov	r3, #0
   14134:	str	r3, [fp, #-28]	; 0xffffffe4
   14138:	mov	r3, #0
   1413c:	str	r3, [fp, #-16]
   14140:	mov	r3, #0
   14144:	str	r3, [fp, #-20]	; 0xffffffec
   14148:	mov	r3, #0
   1414c:	str	r3, [fp, #-24]	; 0xffffffe8
   14150:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14154:	cmp	r3, #2
   14158:	beq	141f8 <make_certfp+0xf0>
   1415c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14160:	cmp	r3, #2
   14164:	bgt	14184 <make_certfp+0x7c>
   14168:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1416c:	cmp	r3, #0
   14170:	beq	141a8 <make_certfp+0xa0>
   14174:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14178:	cmp	r3, #1
   1417c:	beq	141d0 <make_certfp+0xc8>
   14180:	b	14278 <make_certfp+0x170>
   14184:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14188:	movw	r2, #4097	; 0x1001
   1418c:	cmp	r3, r2
   14190:	beq	14220 <make_certfp+0x118>
   14194:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14198:	movw	r2, #4098	; 0x1002
   1419c:	cmp	r3, r2
   141a0:	beq	1424c <make_certfp+0x144>
   141a4:	b	14278 <make_certfp+0x170>
   141a8:	mov	r3, #20
   141ac:	str	r3, [fp, #-28]	; 0xffffffe4
   141b0:	bl	490c <EVP_sha1@plt>
   141b4:	str	r0, [fp, #-16]
   141b8:	ldr	r3, [pc, #324]	; 14304 <make_certfp+0x1fc>
   141bc:	ldr	r3, [r4, r3]
   141c0:	str	r3, [fp, #-20]	; 0xffffffec
   141c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   141c8:	str	r3, [fp, #-24]	; 0xffffffe8
   141cc:	b	14280 <make_certfp+0x178>
   141d0:	mov	r3, #32
   141d4:	str	r3, [fp, #-28]	; 0xffffffe4
   141d8:	bl	4c00 <EVP_sha256@plt>
   141dc:	str	r0, [fp, #-16]
   141e0:	ldr	r3, [pc, #284]	; 14304 <make_certfp+0x1fc>
   141e4:	ldr	r3, [r4, r3]
   141e8:	str	r3, [fp, #-20]	; 0xffffffec
   141ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   141f0:	str	r3, [fp, #-24]	; 0xffffffe8
   141f4:	b	14280 <make_certfp+0x178>
   141f8:	mov	r3, #64	; 0x40
   141fc:	str	r3, [fp, #-28]	; 0xffffffe4
   14200:	bl	4bd0 <EVP_sha512@plt>
   14204:	str	r0, [fp, #-16]
   14208:	ldr	r3, [pc, #244]	; 14304 <make_certfp+0x1fc>
   1420c:	ldr	r3, [r4, r3]
   14210:	str	r3, [fp, #-20]	; 0xffffffec
   14214:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14218:	str	r3, [fp, #-24]	; 0xffffffe8
   1421c:	b	14280 <make_certfp+0x178>
   14220:	mov	r3, #32
   14224:	str	r3, [fp, #-28]	; 0xffffffe4
   14228:	bl	4c00 <EVP_sha256@plt>
   1422c:	str	r0, [fp, #-16]
   14230:	ldr	r3, [pc, #208]	; 14308 <make_certfp+0x200>
   14234:	ldr	r3, [r4, r3]
   14238:	str	r3, [fp, #-20]	; 0xffffffec
   1423c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14240:	bl	4558 <X509_get_X509_PUBKEY@plt>
   14244:	str	r0, [fp, #-24]	; 0xffffffe8
   14248:	b	14280 <make_certfp+0x178>
   1424c:	mov	r3, #64	; 0x40
   14250:	str	r3, [fp, #-28]	; 0xffffffe4
   14254:	bl	4bd0 <EVP_sha512@plt>
   14258:	str	r0, [fp, #-16]
   1425c:	ldr	r3, [pc, #164]	; 14308 <make_certfp+0x200>
   14260:	ldr	r3, [r4, r3]
   14264:	str	r3, [fp, #-20]	; 0xffffffec
   14268:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1426c:	bl	4558 <X509_get_X509_PUBKEY@plt>
   14270:	str	r0, [fp, #-24]	; 0xffffffe8
   14274:	b	14280 <make_certfp+0x178>
   14278:	mov	r3, #0
   1427c:	b	142e8 <make_certfp+0x1e0>
   14280:	sub	r3, fp, #28
   14284:	str	r3, [sp]
   14288:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1428c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14290:	ldr	r1, [fp, #-16]
   14294:	ldr	r0, [fp, #-20]	; 0xffffffec
   14298:	bl	4a2c <ASN1_item_digest@plt>
   1429c:	mov	r3, r0
   142a0:	cmp	r3, #1
   142a4:	beq	142e4 <make_certfp+0x1dc>
   142a8:	bl	13ab0 <rb_ssl_last_err>
   142ac:	mov	r3, r0
   142b0:	mov	r0, r3
   142b4:	bl	13f1c <rb_ssl_strerror>
   142b8:	mov	r3, r0
   142bc:	mov	r2, r3
   142c0:	ldr	r3, [pc, #68]	; 1430c <make_certfp+0x204>
   142c4:	add	r3, pc, r3
   142c8:	mov	r1, r3
   142cc:	ldr	r3, [pc, #60]	; 14310 <make_certfp+0x208>
   142d0:	add	r3, pc, r3
   142d4:	mov	r0, r3
   142d8:	bl	493c <rb_lib_log@plt>
   142dc:	mov	r3, #0
   142e0:	b	142e8 <make_certfp+0x1e0>
   142e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   142e8:	mov	r0, r3
   142ec:	sub	sp, fp, #8
   142f0:	ldr	r4, [sp]
   142f4:	ldr	fp, [sp, #4]
   142f8:	add	sp, sp, #8
   142fc:	pop	{pc}		; (ldr pc, [sp], #4)
   14300:	.word	0x00020ecc
   14304:	.word	0x0000040c
   14308:	.word	0x00000418
   1430c:	.word	0x0000ff20
   14310:	.word	0x0000fc94

00014314 <rb_ssl_shutdown>:
   14314:	str	fp, [sp, #-8]!
   14318:	str	lr, [sp, #4]
   1431c:	add	fp, sp, #4
   14320:	sub	sp, sp, #24
   14324:	str	r0, [fp, #-24]	; 0xffffffe8
   14328:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1432c:	cmp	r3, #0
   14330:	beq	143dc <rb_ssl_shutdown+0xc8>
   14334:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14338:	ldr	r3, [r3, #56]	; 0x38
   1433c:	cmp	r3, #0
   14340:	beq	143dc <rb_ssl_shutdown+0xc8>
   14344:	bl	13ab0 <rb_ssl_last_err>
   14348:	mov	r3, #0
   1434c:	str	r3, [fp, #-8]
   14350:	b	143b0 <rb_ssl_shutdown+0x9c>
   14354:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14358:	ldr	r3, [r3, #56]	; 0x38
   1435c:	mov	r0, r3
   14360:	bl	4ac8 <SSL_shutdown@plt>
   14364:	str	r0, [fp, #-12]
   14368:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1436c:	ldr	r3, [r3, #56]	; 0x38
   14370:	ldr	r1, [fp, #-12]
   14374:	mov	r0, r3
   14378:	bl	4cd8 <SSL_get_error@plt>
   1437c:	str	r0, [fp, #-16]
   14380:	ldr	r3, [fp, #-12]
   14384:	cmp	r3, #0
   14388:	bge	143bc <rb_ssl_shutdown+0xa8>
   1438c:	ldr	r3, [fp, #-16]
   14390:	cmp	r3, #2
   14394:	beq	143a4 <rb_ssl_shutdown+0x90>
   14398:	ldr	r3, [fp, #-16]
   1439c:	cmp	r3, #3
   143a0:	bne	143bc <rb_ssl_shutdown+0xa8>
   143a4:	ldr	r3, [fp, #-8]
   143a8:	add	r3, r3, #1
   143ac:	str	r3, [fp, #-8]
   143b0:	ldr	r3, [fp, #-8]
   143b4:	cmp	r3, #3
   143b8:	ble	14354 <rb_ssl_shutdown+0x40>
   143bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   143c0:	ldr	r3, [r3, #56]	; 0x38
   143c4:	mov	r0, r3
   143c8:	bl	4984 <SSL_free@plt>
   143cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   143d0:	mov	r2, #0
   143d4:	str	r2, [r3, #56]	; 0x38
   143d8:	b	143e0 <rb_ssl_shutdown+0xcc>
   143dc:	nop	{0}
   143e0:	sub	sp, fp, #4
   143e4:	ldr	fp, [sp]
   143e8:	add	sp, sp, #4
   143ec:	pop	{pc}		; (ldr pc, [sp], #4)

000143f0 <rb_init_ssl>:
   143f0:	str	fp, [sp, #-8]!
   143f4:	str	lr, [sp, #4]
   143f8:	add	fp, sp, #4
   143fc:	ldr	r3, [pc, #44]	; 14430 <rb_init_ssl+0x40>
   14400:	add	r3, pc, r3
   14404:	mov	r1, r3
   14408:	ldr	r3, [pc, #36]	; 14434 <rb_init_ssl+0x44>
   1440c:	add	r3, pc, r3
   14410:	mov	r0, r3
   14414:	bl	493c <rb_lib_log@plt>
   14418:	mov	r3, #1
   1441c:	mov	r0, r3
   14420:	sub	sp, fp, #4
   14424:	ldr	fp, [sp]
   14428:	add	sp, sp, #4
   1442c:	pop	{pc}		; (ldr pc, [sp], #4)
   14430:	.word	0x0000fdf0
   14434:	.word	0x0000fb74

00014438 <rb_setup_ssl_server>:
   14438:	str	fp, [sp, #-8]!
   1443c:	str	lr, [sp, #4]
   14440:	add	fp, sp, #4
   14444:	sub	sp, sp, #32
   14448:	str	r0, [fp, #-24]	; 0xffffffe8
   1444c:	str	r1, [fp, #-28]	; 0xffffffe4
   14450:	str	r2, [fp, #-32]	; 0xffffffe0
   14454:	str	r3, [fp, #-36]	; 0xffffffdc
   14458:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1445c:	cmp	r3, #0
   14460:	bne	14488 <rb_setup_ssl_server+0x50>
   14464:	ldr	r3, [pc, #924]	; 14808 <rb_setup_ssl_server+0x3d0>
   14468:	add	r3, pc, r3
   1446c:	mov	r1, r3
   14470:	ldr	r3, [pc, #916]	; 1480c <rb_setup_ssl_server+0x3d4>
   14474:	add	r3, pc, r3
   14478:	mov	r0, r3
   1447c:	bl	493c <rb_lib_log@plt>
   14480:	mov	r3, #0
   14484:	b	147f4 <rb_setup_ssl_server+0x3bc>
   14488:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1448c:	cmp	r3, #0
   14490:	bne	1449c <rb_setup_ssl_server+0x64>
   14494:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14498:	str	r3, [fp, #-28]	; 0xffffffe4
   1449c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   144a0:	cmp	r3, #0
   144a4:	bne	144b4 <rb_setup_ssl_server+0x7c>
   144a8:	ldr	r3, [pc, #864]	; 14810 <rb_setup_ssl_server+0x3d8>
   144ac:	add	r3, pc, r3
   144b0:	str	r3, [fp, #-36]	; 0xffffffdc
   144b4:	bl	13ab0 <rb_ssl_last_err>
   144b8:	bl	4390 <TLS_method@plt>
   144bc:	mov	r3, r0
   144c0:	mov	r0, r3
   144c4:	bl	4b4c <SSL_CTX_new@plt>
   144c8:	str	r0, [fp, #-8]
   144cc:	ldr	r3, [fp, #-8]
   144d0:	cmp	r3, #0
   144d4:	bne	14514 <rb_setup_ssl_server+0xdc>
   144d8:	bl	13ab0 <rb_ssl_last_err>
   144dc:	mov	r3, r0
   144e0:	mov	r0, r3
   144e4:	bl	13f1c <rb_ssl_strerror>
   144e8:	mov	r3, r0
   144ec:	mov	r2, r3
   144f0:	ldr	r3, [pc, #796]	; 14814 <rb_setup_ssl_server+0x3dc>
   144f4:	add	r3, pc, r3
   144f8:	mov	r1, r3
   144fc:	ldr	r3, [pc, #788]	; 14818 <rb_setup_ssl_server+0x3e0>
   14500:	add	r3, pc, r3
   14504:	mov	r0, r3
   14508:	bl	493c <rb_lib_log@plt>
   1450c:	mov	r3, #0
   14510:	b	147f4 <rb_setup_ssl_server+0x3bc>
   14514:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14518:	ldr	r0, [fp, #-8]
   1451c:	bl	4858 <SSL_CTX_use_certificate_chain_file@plt>
   14520:	mov	r3, r0
   14524:	cmp	r3, #1
   14528:	beq	14568 <rb_setup_ssl_server+0x130>
   1452c:	bl	13ab0 <rb_ssl_last_err>
   14530:	mov	r3, r0
   14534:	mov	r0, r3
   14538:	bl	13f1c <rb_ssl_strerror>
   1453c:	mov	r3, r0
   14540:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14544:	ldr	r1, [pc, #720]	; 1481c <rb_setup_ssl_server+0x3e4>
   14548:	add	r1, pc, r1
   1454c:	ldr	r0, [pc, #716]	; 14820 <rb_setup_ssl_server+0x3e8>
   14550:	add	r0, pc, r0
   14554:	bl	493c <rb_lib_log@plt>
   14558:	ldr	r0, [fp, #-8]
   1455c:	bl	4480 <SSL_CTX_free@plt>
   14560:	mov	r3, #0
   14564:	b	147f4 <rb_setup_ssl_server+0x3bc>
   14568:	mov	r2, #1
   1456c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14570:	ldr	r0, [fp, #-8]
   14574:	bl	4948 <SSL_CTX_use_PrivateKey_file@plt>
   14578:	mov	r3, r0
   1457c:	cmp	r3, #1
   14580:	beq	145c0 <rb_setup_ssl_server+0x188>
   14584:	bl	13ab0 <rb_ssl_last_err>
   14588:	mov	r3, r0
   1458c:	mov	r0, r3
   14590:	bl	13f1c <rb_ssl_strerror>
   14594:	mov	r3, r0
   14598:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1459c:	ldr	r1, [pc, #640]	; 14824 <rb_setup_ssl_server+0x3ec>
   145a0:	add	r1, pc, r1
   145a4:	ldr	r0, [pc, #636]	; 14828 <rb_setup_ssl_server+0x3f0>
   145a8:	add	r0, pc, r0
   145ac:	bl	493c <rb_lib_log@plt>
   145b0:	ldr	r0, [fp, #-8]
   145b4:	bl	4480 <SSL_CTX_free@plt>
   145b8:	mov	r3, #0
   145bc:	b	147f4 <rb_setup_ssl_server+0x3bc>
   145c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   145c4:	cmp	r3, #0
   145c8:	bne	145ec <rb_setup_ssl_server+0x1b4>
   145cc:	ldr	r3, [pc, #600]	; 1482c <rb_setup_ssl_server+0x3f4>
   145d0:	add	r3, pc, r3
   145d4:	mov	r1, r3
   145d8:	ldr	r3, [pc, #592]	; 14830 <rb_setup_ssl_server+0x3f8>
   145dc:	add	r3, pc, r3
   145e0:	mov	r0, r3
   145e4:	bl	493c <rb_lib_log@plt>
   145e8:	b	146cc <rb_setup_ssl_server+0x294>
   145ec:	ldr	r3, [pc, #576]	; 14834 <rb_setup_ssl_server+0x3fc>
   145f0:	add	r3, pc, r3
   145f4:	mov	r1, r3
   145f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   145fc:	bl	4630 <fopen@plt>
   14600:	str	r0, [fp, #-12]
   14604:	mov	r3, #0
   14608:	str	r3, [fp, #-16]
   1460c:	ldr	r3, [fp, #-12]
   14610:	cmp	r3, #0
   14614:	bne	1464c <rb_setup_ssl_server+0x214>
   14618:	bl	4d20 <__errno_location@plt>
   1461c:	mov	r3, r0
   14620:	ldr	r3, [r3]
   14624:	mov	r0, r3
   14628:	bl	43c0 <strerror@plt>
   1462c:	mov	r3, r0
   14630:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14634:	ldr	r1, [pc, #508]	; 14838 <rb_setup_ssl_server+0x400>
   14638:	add	r1, pc, r1
   1463c:	ldr	r0, [pc, #504]	; 1483c <rb_setup_ssl_server+0x404>
   14640:	add	r0, pc, r0
   14644:	bl	493c <rb_lib_log@plt>
   14648:	b	146cc <rb_setup_ssl_server+0x294>
   1464c:	sub	r1, fp, #16
   14650:	mov	r3, #0
   14654:	mov	r2, #0
   14658:	ldr	r0, [fp, #-12]
   1465c:	bl	4a08 <PEM_read_DHparams@plt>
   14660:	mov	r3, r0
   14664:	cmp	r3, #0
   14668:	bne	146a4 <rb_setup_ssl_server+0x26c>
   1466c:	bl	13ab0 <rb_ssl_last_err>
   14670:	mov	r3, r0
   14674:	mov	r0, r3
   14678:	bl	13f1c <rb_ssl_strerror>
   1467c:	mov	r3, r0
   14680:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14684:	ldr	r1, [pc, #436]	; 14840 <rb_setup_ssl_server+0x408>
   14688:	add	r1, pc, r1
   1468c:	ldr	r0, [pc, #432]	; 14844 <rb_setup_ssl_server+0x40c>
   14690:	add	r0, pc, r0
   14694:	bl	493c <rb_lib_log@plt>
   14698:	ldr	r0, [fp, #-12]
   1469c:	bl	45a0 <fclose@plt>
   146a0:	b	146cc <rb_setup_ssl_server+0x294>
   146a4:	ldr	r3, [fp, #-16]
   146a8:	mov	r2, #0
   146ac:	mov	r1, #3
   146b0:	ldr	r0, [fp, #-8]
   146b4:	bl	4690 <SSL_CTX_ctrl@plt>
   146b8:	ldr	r3, [fp, #-16]
   146bc:	mov	r0, r3
   146c0:	bl	4a8c <DH_free@plt>
   146c4:	ldr	r0, [fp, #-12]
   146c8:	bl	45a0 <fclose@plt>
   146cc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   146d0:	ldr	r0, [fp, #-8]
   146d4:	bl	4414 <SSL_CTX_set_cipher_list@plt>
   146d8:	mov	r3, r0
   146dc:	cmp	r3, #1
   146e0:	beq	14710 <rb_setup_ssl_server+0x2d8>
   146e4:	ldr	r3, [pc, #348]	; 14848 <rb_setup_ssl_server+0x410>
   146e8:	add	r3, pc, r3
   146ec:	mov	r1, r3
   146f0:	ldr	r3, [pc, #340]	; 1484c <rb_setup_ssl_server+0x414>
   146f4:	add	r3, pc, r3
   146f8:	mov	r0, r3
   146fc:	bl	493c <rb_lib_log@plt>
   14700:	ldr	r0, [fp, #-8]
   14704:	bl	4480 <SSL_CTX_free@plt>
   14708:	mov	r3, #0
   1470c:	b	147f4 <rb_setup_ssl_server+0x3bc>
   14710:	mov	r3, #0
   14714:	mov	r2, #0
   14718:	mov	r1, #44	; 0x2c
   1471c:	ldr	r0, [fp, #-8]
   14720:	bl	4690 <SSL_CTX_ctrl@plt>
   14724:	ldr	r3, [pc, #292]	; 14850 <rb_setup_ssl_server+0x418>
   14728:	add	r3, pc, r3
   1472c:	mov	r2, r3
   14730:	mov	r1, #5
   14734:	ldr	r0, [fp, #-8]
   14738:	bl	4d50 <SSL_CTX_set_verify@plt>
   1473c:	mov	r1, #2048	; 0x800
   14740:	ldr	r0, [fp, #-8]
   14744:	bl	4534 <SSL_CTX_clear_options@plt>
   14748:	mov	r1, #67108864	; 0x4000000
   1474c:	ldr	r0, [fp, #-8]
   14750:	bl	4870 <SSL_CTX_set_options@plt>
   14754:	mov	r1, #16384	; 0x4000
   14758:	ldr	r0, [fp, #-8]
   1475c:	bl	4870 <SSL_CTX_set_options@plt>
   14760:	mov	r1, #4194304	; 0x400000
   14764:	ldr	r0, [fp, #-8]
   14768:	bl	4870 <SSL_CTX_set_options@plt>
   1476c:	mov	r1, #0
   14770:	ldr	r0, [fp, #-8]
   14774:	bl	4870 <SSL_CTX_set_options@plt>
   14778:	mov	r1, #0
   1477c:	ldr	r0, [fp, #-8]
   14780:	bl	4870 <SSL_CTX_set_options@plt>
   14784:	ldr	r3, [pc, #200]	; 14854 <rb_setup_ssl_server+0x41c>
   14788:	add	r3, pc, r3
   1478c:	mov	r2, #0
   14790:	mov	r1, #92	; 0x5c
   14794:	ldr	r0, [fp, #-8]
   14798:	bl	4690 <SSL_CTX_ctrl@plt>
   1479c:	ldr	r3, [pc, #180]	; 14858 <rb_setup_ssl_server+0x420>
   147a0:	add	r3, pc, r3
   147a4:	ldr	r3, [r3]
   147a8:	cmp	r3, #0
   147ac:	beq	147c4 <rb_setup_ssl_server+0x38c>
   147b0:	ldr	r3, [pc, #164]	; 1485c <rb_setup_ssl_server+0x424>
   147b4:	add	r3, pc, r3
   147b8:	ldr	r3, [r3]
   147bc:	mov	r0, r3
   147c0:	bl	4480 <SSL_CTX_free@plt>
   147c4:	ldr	r3, [pc, #148]	; 14860 <rb_setup_ssl_server+0x428>
   147c8:	add	r3, pc, r3
   147cc:	ldr	r2, [fp, #-8]
   147d0:	str	r2, [r3]
   147d4:	ldr	r3, [pc, #136]	; 14864 <rb_setup_ssl_server+0x42c>
   147d8:	add	r3, pc, r3
   147dc:	mov	r1, r3
   147e0:	ldr	r3, [pc, #128]	; 14868 <rb_setup_ssl_server+0x430>
   147e4:	add	r3, pc, r3
   147e8:	mov	r0, r3
   147ec:	bl	493c <rb_lib_log@plt>
   147f0:	mov	r3, #1
   147f4:	mov	r0, r3
   147f8:	sub	sp, fp, #4
   147fc:	ldr	fp, [sp]
   14800:	add	sp, sp, #4
   14804:	pop	{pc}		; (ldr pc, [sp], #4)
   14808:	.word	0x0000fd94
   1480c:	.word	0x0000fb2c
   14810:	.word	0x0000f918
   14814:	.word	0x0000fd08
   14818:	.word	0x0000fac4
   1481c:	.word	0x0000fcb4
   14820:	.word	0x0000fa88
   14824:	.word	0x0000fc5c
   14828:	.word	0x0000fa64
   1482c:	.word	0x0000fc2c
   14830:	.word	0x0000fa5c
   14834:	.word	0x0000fa6c
   14838:	.word	0x0000fbc4
   1483c:	.word	0x0000fa20
   14840:	.word	0x0000fb74
   14844:	.word	0x0000f9e8
   14848:	.word	0x0000fb14
   1484c:	.word	0x0000f9a8
   14850:	.word	0xfffff83c
   14854:	.word	0x00021104
   14858:	.word	0x00033750
   1485c:	.word	0x0003373c
   14860:	.word	0x00033728
   14864:	.word	0x0000fa24
   14868:	.word	0x0000f8f8

0001486c <rb_init_prng>:
   1486c:	str	fp, [sp, #-8]!
   14870:	str	lr, [sp, #4]
   14874:	add	fp, sp, #4
   14878:	sub	sp, sp, #8
   1487c:	str	r0, [fp, #-8]
   14880:	str	r1, [fp, #-12]
   14884:	bl	13ab0 <rb_ssl_last_err>
   14888:	ldr	r3, [fp, #-12]
   1488c:	cmp	r3, #0
   14890:	bne	148e0 <rb_init_prng+0x74>
   14894:	mvn	r1, #0
   14898:	ldr	r0, [fp, #-8]
   1489c:	bl	4450 <RAND_load_file@plt>
   148a0:	mov	r3, r0
   148a4:	cmp	r3, #0
   148a8:	bge	148e0 <rb_init_prng+0x74>
   148ac:	bl	13ab0 <rb_ssl_last_err>
   148b0:	mov	r3, r0
   148b4:	mov	r0, r3
   148b8:	bl	13f1c <rb_ssl_strerror>
   148bc:	mov	r3, r0
   148c0:	mov	r2, r3
   148c4:	ldr	r3, [pc, #148]	; 14960 <rb_init_prng+0xf4>
   148c8:	add	r3, pc, r3
   148cc:	mov	r1, r3
   148d0:	ldr	r3, [pc, #140]	; 14964 <rb_init_prng+0xf8>
   148d4:	add	r3, pc, r3
   148d8:	mov	r0, r3
   148dc:	bl	493c <rb_lib_log@plt>
   148e0:	bl	4be8 <RAND_status@plt>
   148e4:	mov	r3, r0
   148e8:	cmp	r3, #1
   148ec:	beq	1492c <rb_init_prng+0xc0>
   148f0:	bl	13ab0 <rb_ssl_last_err>
   148f4:	mov	r3, r0
   148f8:	mov	r0, r3
   148fc:	bl	13f1c <rb_ssl_strerror>
   14900:	mov	r3, r0
   14904:	mov	r2, r3
   14908:	ldr	r3, [pc, #88]	; 14968 <rb_init_prng+0xfc>
   1490c:	add	r3, pc, r3
   14910:	mov	r1, r3
   14914:	ldr	r3, [pc, #80]	; 1496c <rb_init_prng+0x100>
   14918:	add	r3, pc, r3
   1491c:	mov	r0, r3
   14920:	bl	493c <rb_lib_log@plt>
   14924:	mov	r3, #0
   14928:	b	1494c <rb_init_prng+0xe0>
   1492c:	ldr	r3, [pc, #60]	; 14970 <rb_init_prng+0x104>
   14930:	add	r3, pc, r3
   14934:	mov	r1, r3
   14938:	ldr	r3, [pc, #52]	; 14974 <rb_init_prng+0x108>
   1493c:	add	r3, pc, r3
   14940:	mov	r0, r3
   14944:	bl	493c <rb_lib_log@plt>
   14948:	mov	r3, #1
   1494c:	mov	r0, r3
   14950:	sub	sp, fp, #4
   14954:	ldr	fp, [sp]
   14958:	add	sp, sp, #4
   1495c:	pop	{pc}		; (ldr pc, [sp], #4)
   14960:	.word	0x0000f948
   14964:	.word	0x0000f82c
   14968:	.word	0x0000f904
   1496c:	.word	0x0000f800
   14970:	.word	0x0000f8e0
   14974:	.word	0x0000f7f0

00014978 <rb_get_random>:
   14978:	str	fp, [sp, #-8]!
   1497c:	str	lr, [sp, #4]
   14980:	add	fp, sp, #4
   14984:	sub	sp, sp, #8
   14988:	str	r0, [fp, #-8]
   1498c:	str	r1, [fp, #-12]
   14990:	bl	13ab0 <rb_ssl_last_err>
   14994:	ldr	r3, [fp, #-12]
   14998:	mov	r1, r3
   1499c:	ldr	r0, [fp, #-8]
   149a0:	bl	4b04 <RAND_bytes@plt>
   149a4:	mov	r3, r0
   149a8:	cmp	r3, #1
   149ac:	beq	149ec <rb_get_random+0x74>
   149b0:	bl	13ab0 <rb_ssl_last_err>
   149b4:	mov	r3, r0
   149b8:	mov	r0, r3
   149bc:	bl	13f1c <rb_ssl_strerror>
   149c0:	mov	r3, r0
   149c4:	mov	r2, r3
   149c8:	ldr	r3, [pc, #52]	; 14a04 <rb_get_random+0x8c>
   149cc:	add	r3, pc, r3
   149d0:	mov	r1, r3
   149d4:	ldr	r3, [pc, #44]	; 14a08 <rb_get_random+0x90>
   149d8:	add	r3, pc, r3
   149dc:	mov	r0, r3
   149e0:	bl	493c <rb_lib_log@plt>
   149e4:	mov	r3, #0
   149e8:	b	149f0 <rb_get_random+0x78>
   149ec:	mov	r3, #1
   149f0:	mov	r0, r3
   149f4:	sub	sp, fp, #4
   149f8:	ldr	fp, [sp]
   149fc:	add	sp, sp, #4
   14a00:	pop	{pc}		; (ldr pc, [sp], #4)
   14a04:	.word	0x0000f854
   14a08:	.word	0x0000f76c

00014a0c <rb_get_ssl_strerror>:
   14a0c:	str	fp, [sp, #-8]!
   14a10:	str	lr, [sp, #4]
   14a14:	add	fp, sp, #4
   14a18:	sub	sp, sp, #8
   14a1c:	str	r0, [fp, #-8]
   14a20:	ldr	r3, [fp, #-8]
   14a24:	ldr	r3, [r3, #64]	; 0x40
   14a28:	mov	r0, r3
   14a2c:	bl	13f1c <rb_ssl_strerror>
   14a30:	mov	r3, r0
   14a34:	mov	r0, r3
   14a38:	sub	sp, fp, #4
   14a3c:	ldr	fp, [sp]
   14a40:	add	sp, sp, #4
   14a44:	pop	{pc}		; (ldr pc, [sp], #4)

00014a48 <rb_get_ssl_certfp>:
   14a48:	str	fp, [sp, #-8]!
   14a4c:	str	lr, [sp, #4]
   14a50:	add	fp, sp, #4
   14a54:	sub	sp, sp, #24
   14a58:	str	r0, [fp, #-16]
   14a5c:	str	r1, [fp, #-20]	; 0xffffffec
   14a60:	str	r2, [fp, #-24]	; 0xffffffe8
   14a64:	ldr	r3, [fp, #-16]
   14a68:	cmp	r3, #0
   14a6c:	beq	14a80 <rb_get_ssl_certfp+0x38>
   14a70:	ldr	r3, [fp, #-16]
   14a74:	ldr	r3, [r3, #56]	; 0x38
   14a78:	cmp	r3, #0
   14a7c:	bne	14a88 <rb_get_ssl_certfp+0x40>
   14a80:	mov	r3, #0
   14a84:	b	14b68 <rb_get_ssl_certfp+0x120>
   14a88:	ldr	r3, [fp, #-16]
   14a8c:	ldr	r3, [r3, #56]	; 0x38
   14a90:	mov	r0, r3
   14a94:	bl	4a44 <SSL_get_peer_certificate@plt>
   14a98:	str	r0, [fp, #-12]
   14a9c:	ldr	r3, [fp, #-12]
   14aa0:	cmp	r3, #0
   14aa4:	bne	14ab0 <rb_get_ssl_certfp+0x68>
   14aa8:	mov	r3, #0
   14aac:	b	14b68 <rb_get_ssl_certfp+0x120>
   14ab0:	mov	r3, #0
   14ab4:	str	r3, [fp, #-8]
   14ab8:	ldr	r3, [fp, #-16]
   14abc:	ldr	r3, [r3, #56]	; 0x38
   14ac0:	mov	r0, r3
   14ac4:	bl	4a68 <SSL_get_verify_result@plt>
   14ac8:	mov	r3, r0
   14acc:	cmp	r3, #27
   14ad0:	addls	pc, pc, r3, lsl #2
   14ad4:	b	14b5c <rb_get_ssl_certfp+0x114>
   14ad8:	b	14b48 <rb_get_ssl_certfp+0x100>
   14adc:	b	14b5c <rb_get_ssl_certfp+0x114>
   14ae0:	b	14b5c <rb_get_ssl_certfp+0x114>
   14ae4:	b	14b5c <rb_get_ssl_certfp+0x114>
   14ae8:	b	14b5c <rb_get_ssl_certfp+0x114>
   14aec:	b	14b5c <rb_get_ssl_certfp+0x114>
   14af0:	b	14b5c <rb_get_ssl_certfp+0x114>
   14af4:	b	14b5c <rb_get_ssl_certfp+0x114>
   14af8:	b	14b5c <rb_get_ssl_certfp+0x114>
   14afc:	b	14b5c <rb_get_ssl_certfp+0x114>
   14b00:	b	14b5c <rb_get_ssl_certfp+0x114>
   14b04:	b	14b5c <rb_get_ssl_certfp+0x114>
   14b08:	b	14b5c <rb_get_ssl_certfp+0x114>
   14b0c:	b	14b5c <rb_get_ssl_certfp+0x114>
   14b10:	b	14b5c <rb_get_ssl_certfp+0x114>
   14b14:	b	14b5c <rb_get_ssl_certfp+0x114>
   14b18:	b	14b5c <rb_get_ssl_certfp+0x114>
   14b1c:	b	14b5c <rb_get_ssl_certfp+0x114>
   14b20:	b	14b48 <rb_get_ssl_certfp+0x100>
   14b24:	b	14b48 <rb_get_ssl_certfp+0x100>
   14b28:	b	14b48 <rb_get_ssl_certfp+0x100>
   14b2c:	b	14b48 <rb_get_ssl_certfp+0x100>
   14b30:	b	14b5c <rb_get_ssl_certfp+0x114>
   14b34:	b	14b5c <rb_get_ssl_certfp+0x114>
   14b38:	b	14b5c <rb_get_ssl_certfp+0x114>
   14b3c:	b	14b5c <rb_get_ssl_certfp+0x114>
   14b40:	b	14b5c <rb_get_ssl_certfp+0x114>
   14b44:	b	14b48 <rb_get_ssl_certfp+0x100>
   14b48:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14b4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14b50:	ldr	r0, [fp, #-12]
   14b54:	bl	14108 <make_certfp>
   14b58:	str	r0, [fp, #-8]
   14b5c:	ldr	r0, [fp, #-12]
   14b60:	bl	4c90 <X509_free@plt>
   14b64:	ldr	r3, [fp, #-8]
   14b68:	mov	r0, r3
   14b6c:	sub	sp, fp, #4
   14b70:	ldr	fp, [sp]
   14b74:	add	sp, sp, #4
   14b78:	pop	{pc}		; (ldr pc, [sp], #4)

00014b7c <rb_get_ssl_certfp_file>:
   14b7c:	str	fp, [sp, #-8]!
   14b80:	str	lr, [sp, #4]
   14b84:	add	fp, sp, #4
   14b88:	sub	sp, sp, #32
   14b8c:	str	r0, [fp, #-24]	; 0xffffffe8
   14b90:	str	r1, [fp, #-28]	; 0xffffffe4
   14b94:	str	r2, [fp, #-32]	; 0xffffffe0
   14b98:	ldr	r3, [pc, #148]	; 14c34 <rb_get_ssl_certfp_file+0xb8>
   14b9c:	add	r3, pc, r3
   14ba0:	mov	r1, r3
   14ba4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14ba8:	bl	4630 <fopen@plt>
   14bac:	str	r0, [fp, #-8]
   14bb0:	ldr	r3, [fp, #-8]
   14bb4:	cmp	r3, #0
   14bb8:	bne	14bc4 <rb_get_ssl_certfp_file+0x48>
   14bbc:	mvn	r3, #0
   14bc0:	b	14c20 <rb_get_ssl_certfp_file+0xa4>
   14bc4:	mov	r3, #0
   14bc8:	mov	r2, #0
   14bcc:	mov	r1, #0
   14bd0:	ldr	r0, [fp, #-8]
   14bd4:	bl	4840 <PEM_read_X509@plt>
   14bd8:	str	r0, [fp, #-12]
   14bdc:	ldr	r3, [fp, #-12]
   14be0:	cmp	r3, #0
   14be4:	bne	14bf8 <rb_get_ssl_certfp_file+0x7c>
   14be8:	ldr	r0, [fp, #-8]
   14bec:	bl	45a0 <fclose@plt>
   14bf0:	mov	r3, #0
   14bf4:	b	14c20 <rb_get_ssl_certfp_file+0xa4>
   14bf8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14bfc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14c00:	ldr	r0, [fp, #-12]
   14c04:	bl	14108 <make_certfp>
   14c08:	str	r0, [fp, #-16]
   14c0c:	ldr	r0, [fp, #-12]
   14c10:	bl	4c90 <X509_free@plt>
   14c14:	ldr	r0, [fp, #-8]
   14c18:	bl	45a0 <fclose@plt>
   14c1c:	ldr	r3, [fp, #-16]
   14c20:	mov	r0, r3
   14c24:	sub	sp, fp, #4
   14c28:	ldr	fp, [sp]
   14c2c:	add	sp, sp, #4
   14c30:	pop	{pc}		; (ldr pc, [sp], #4)
   14c34:	.word	0x0000f4c0

00014c38 <rb_get_ssl_info>:
   14c38:	str	r4, [sp, #-12]!
   14c3c:	str	fp, [sp, #4]
   14c40:	str	lr, [sp, #8]
   14c44:	add	fp, sp, #8
   14c48:	sub	sp, sp, #28
   14c4c:	str	r0, [fp, #-16]
   14c50:	str	r1, [fp, #-20]	; 0xffffffec
   14c54:	bl	46fc <OpenSSL_version_num@plt>
   14c58:	mov	r2, r0
   14c5c:	movw	r3, #4175	; 0x104f
   14c60:	movt	r3, #4112	; 0x1010
   14c64:	cmp	r2, r3
   14c68:	bne	14c98 <rb_get_ssl_info+0x60>
   14c6c:	ldr	r3, [pc, #128]	; 14cf4 <rb_get_ssl_info+0xbc>
   14c70:	add	r3, pc, r3
   14c74:	str	r3, [sp]
   14c78:	movw	r3, #4175	; 0x104f
   14c7c:	movt	r3, #4112	; 0x1010
   14c80:	ldr	r2, [pc, #112]	; 14cf8 <rb_get_ssl_info+0xc0>
   14c84:	add	r2, pc, r2
   14c88:	ldr	r1, [fp, #-20]	; 0xffffffec
   14c8c:	ldr	r0, [fp, #-16]
   14c90:	bl	4bdc <snprintf@plt>
   14c94:	b	14cdc <rb_get_ssl_info+0xa4>
   14c98:	bl	46fc <OpenSSL_version_num@plt>
   14c9c:	mov	r4, r0
   14ca0:	mov	r0, #0
   14ca4:	bl	4cc0 <OpenSSL_version@plt>
   14ca8:	mov	r3, r0
   14cac:	str	r3, [sp, #8]
   14cb0:	str	r4, [sp, #4]
   14cb4:	ldr	r3, [pc, #64]	; 14cfc <rb_get_ssl_info+0xc4>
   14cb8:	add	r3, pc, r3
   14cbc:	str	r3, [sp]
   14cc0:	movw	r3, #4175	; 0x104f
   14cc4:	movt	r3, #4112	; 0x1010
   14cc8:	ldr	r2, [pc, #48]	; 14d00 <rb_get_ssl_info+0xc8>
   14ccc:	add	r2, pc, r2
   14cd0:	ldr	r1, [fp, #-20]	; 0xffffffec
   14cd4:	ldr	r0, [fp, #-16]
   14cd8:	bl	4bdc <snprintf@plt>
   14cdc:	nop	{0}
   14ce0:	sub	sp, fp, #8
   14ce4:	ldr	r4, [sp]
   14ce8:	ldr	fp, [sp, #4]
   14cec:	add	sp, sp, #8
   14cf0:	pop	{pc}		; (ldr pc, [sp], #4)
   14cf4:	.word	0x0000f50c
   14cf8:	.word	0x0000f4d4
   14cfc:	.word	0x0000f4c4
   14d00:	.word	0x0000f4cc

00014d04 <rb_ssl_get_cipher>:
   14d04:	str	fp, [sp, #-8]!
   14d08:	str	lr, [sp, #4]
   14d0c:	add	fp, sp, #4
   14d10:	sub	sp, sp, #24
   14d14:	str	r0, [fp, #-16]
   14d18:	ldr	r3, [fp, #-16]
   14d1c:	cmp	r3, #0
   14d20:	beq	14d34 <rb_ssl_get_cipher+0x30>
   14d24:	ldr	r3, [fp, #-16]
   14d28:	ldr	r3, [r3, #56]	; 0x38
   14d2c:	cmp	r3, #0
   14d30:	bne	14d3c <rb_ssl_get_cipher+0x38>
   14d34:	mov	r3, #0
   14d38:	b	14d9c <rb_ssl_get_cipher+0x98>
   14d3c:	ldr	r3, [fp, #-16]
   14d40:	ldr	r3, [r3, #56]	; 0x38
   14d44:	mov	r0, r3
   14d48:	bl	4ce4 <SSL_get_version@plt>
   14d4c:	str	r0, [fp, #-8]
   14d50:	ldr	r3, [fp, #-16]
   14d54:	ldr	r3, [r3, #56]	; 0x38
   14d58:	mov	r0, r3
   14d5c:	bl	4540 <SSL_get_current_cipher@plt>
   14d60:	mov	r3, r0
   14d64:	mov	r0, r3
   14d68:	bl	46e4 <SSL_CIPHER_get_name@plt>
   14d6c:	str	r0, [fp, #-12]
   14d70:	ldr	r3, [fp, #-12]
   14d74:	str	r3, [sp]
   14d78:	ldr	r3, [fp, #-8]
   14d7c:	ldr	r2, [pc, #44]	; 14db0 <rb_ssl_get_cipher+0xac>
   14d80:	add	r2, pc, r2
   14d84:	mov	r1, #512	; 0x200
   14d88:	ldr	r0, [pc, #36]	; 14db4 <rb_ssl_get_cipher+0xb0>
   14d8c:	add	r0, pc, r0
   14d90:	bl	4bdc <snprintf@plt>
   14d94:	ldr	r3, [pc, #28]	; 14db8 <rb_ssl_get_cipher+0xb4>
   14d98:	add	r3, pc, r3
   14d9c:	mov	r0, r3
   14da0:	sub	sp, fp, #4
   14da4:	ldr	fp, [sp]
   14da8:	add	sp, sp, #4
   14dac:	pop	{pc}		; (ldr pc, [sp], #4)
   14db0:	.word	0x0000f44c
   14db4:	.word	0x00033368
   14db8:	.word	0x0003335c

00014dbc <rb_ssl_read>:
   14dbc:	str	fp, [sp, #-8]!
   14dc0:	str	lr, [sp, #4]
   14dc4:	add	fp, sp, #4
   14dc8:	sub	sp, sp, #24
   14dcc:	str	r0, [fp, #-8]
   14dd0:	str	r1, [fp, #-12]
   14dd4:	str	r2, [fp, #-16]
   14dd8:	ldr	r3, [fp, #-16]
   14ddc:	str	r3, [sp]
   14de0:	mov	r3, #0
   14de4:	ldr	r2, [fp, #-12]
   14de8:	ldr	r1, [fp, #-8]
   14dec:	mov	r0, #0
   14df0:	bl	13f94 <rb_ssl_read_or_write>
   14df4:	mov	r3, r0
   14df8:	mov	r0, r3
   14dfc:	sub	sp, fp, #4
   14e00:	ldr	fp, [sp]
   14e04:	add	sp, sp, #4
   14e08:	pop	{pc}		; (ldr pc, [sp], #4)

00014e0c <rb_ssl_write>:
   14e0c:	str	fp, [sp, #-8]!
   14e10:	str	lr, [sp, #4]
   14e14:	add	fp, sp, #4
   14e18:	sub	sp, sp, #24
   14e1c:	str	r0, [fp, #-8]
   14e20:	str	r1, [fp, #-12]
   14e24:	str	r2, [fp, #-16]
   14e28:	ldr	r3, [fp, #-16]
   14e2c:	str	r3, [sp]
   14e30:	ldr	r3, [fp, #-12]
   14e34:	mov	r2, #0
   14e38:	ldr	r1, [fp, #-8]
   14e3c:	mov	r0, #1
   14e40:	bl	13f94 <rb_ssl_read_or_write>
   14e44:	mov	r3, r0
   14e48:	mov	r0, r3
   14e4c:	sub	sp, fp, #4
   14e50:	ldr	fp, [sp]
   14e54:	add	sp, sp, #4
   14e58:	pop	{pc}		; (ldr pc, [sp], #4)

00014e5c <rb_ssl_connect_realcb>:
   14e5c:	str	fp, [sp, #-8]!
   14e60:	str	lr, [sp, #4]
   14e64:	add	fp, sp, #4
   14e68:	sub	sp, sp, #16
   14e6c:	str	r0, [fp, #-8]
   14e70:	str	r1, [fp, #-12]
   14e74:	str	r2, [fp, #-16]
   14e78:	ldr	r3, [fp, #-8]
   14e7c:	ldr	r3, [r3, #48]	; 0x30
   14e80:	ldr	r2, [fp, #-16]
   14e84:	ldr	r2, [r2]
   14e88:	str	r2, [r3, #260]	; 0x104
   14e8c:	ldr	r3, [fp, #-8]
   14e90:	ldr	r3, [r3, #48]	; 0x30
   14e94:	ldr	r2, [fp, #-16]
   14e98:	ldr	r2, [r2, #4]
   14e9c:	str	r2, [r3, #264]	; 0x108
   14ea0:	ldr	r1, [fp, #-12]
   14ea4:	ldr	r0, [fp, #-8]
   14ea8:	bl	ffbc <rb_connect_callback>
   14eac:	ldr	r0, [fp, #-16]
   14eb0:	bl	13a64 <rb_free>
   14eb4:	nop	{0}
   14eb8:	sub	sp, fp, #4
   14ebc:	ldr	fp, [sp]
   14ec0:	add	sp, sp, #4
   14ec4:	pop	{pc}		; (ldr pc, [sp], #4)

00014ec8 <rb_ssl_timeout_cb>:
   14ec8:	str	r4, [sp, #-12]!
   14ecc:	str	fp, [sp, #4]
   14ed0:	str	lr, [sp, #8]
   14ed4:	add	fp, sp, #8
   14ed8:	sub	sp, sp, #20
   14edc:	str	r0, [fp, #-16]
   14ee0:	str	r1, [fp, #-20]	; 0xffffffec
   14ee4:	ldr	r3, [fp, #-16]
   14ee8:	ldr	r3, [r3, #52]	; 0x34
   14eec:	ldr	r4, [r3, #132]	; 0x84
   14ef0:	ldr	r3, [fp, #-16]
   14ef4:	ldr	r3, [r3, #52]	; 0x34
   14ef8:	ldr	r3, [r3, #140]	; 0x8c
   14efc:	str	r3, [sp]
   14f00:	mov	r3, #0
   14f04:	mov	r2, #0
   14f08:	mov	r1, #3
   14f0c:	ldr	r0, [fp, #-16]
   14f10:	blx	r4
   14f14:	nop	{0}
   14f18:	sub	sp, fp, #8
   14f1c:	ldr	r4, [sp]
   14f20:	ldr	fp, [sp, #4]
   14f24:	add	sp, sp, #8
   14f28:	pop	{pc}		; (ldr pc, [sp], #4)

00014f2c <rb_ssl_tryconn_timeout_cb>:
   14f2c:	str	fp, [sp, #-8]!
   14f30:	str	lr, [sp, #4]
   14f34:	add	fp, sp, #4
   14f38:	sub	sp, sp, #8
   14f3c:	str	r0, [fp, #-8]
   14f40:	str	r1, [fp, #-12]
   14f44:	ldr	r2, [fp, #-12]
   14f48:	mov	r1, #3
   14f4c:	ldr	r0, [fp, #-8]
   14f50:	bl	14e5c <rb_ssl_connect_realcb>
   14f54:	nop	{0}
   14f58:	sub	sp, fp, #4
   14f5c:	ldr	fp, [sp]
   14f60:	add	sp, sp, #4
   14f64:	pop	{pc}		; (ldr pc, [sp], #4)

00014f68 <rb_ssl_tryconn>:
   14f68:	str	fp, [sp, #-8]!
   14f6c:	str	lr, [sp, #4]
   14f70:	add	fp, sp, #4
   14f74:	sub	sp, sp, #24
   14f78:	str	r0, [fp, #-16]
   14f7c:	str	r1, [fp, #-20]	; 0xffffffec
   14f80:	str	r2, [fp, #-24]	; 0xffffffe8
   14f84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14f88:	str	r3, [fp, #-8]
   14f8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f90:	cmp	r3, #0
   14f94:	beq	14fac <rb_ssl_tryconn+0x44>
   14f98:	ldr	r2, [fp, #-8]
   14f9c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14fa0:	ldr	r0, [fp, #-16]
   14fa4:	bl	14e5c <rb_ssl_connect_realcb>
   14fa8:	b	14ff8 <rb_ssl_tryconn+0x90>
   14fac:	ldr	r3, [fp, #-16]
   14fb0:	ldrb	r3, [r3, #17]
   14fb4:	orr	r3, r3, #32
   14fb8:	uxtb	r2, r3
   14fbc:	ldr	r3, [fp, #-16]
   14fc0:	strb	r2, [r3, #17]
   14fc4:	ldr	r3, [fp, #-8]
   14fc8:	ldr	r1, [r3, #8]
   14fcc:	ldr	r3, [fp, #-8]
   14fd0:	ldr	r2, [pc, #48]	; 15008 <rb_ssl_tryconn+0xa0>
   14fd4:	add	r2, pc, r2
   14fd8:	ldr	r0, [fp, #-16]
   14fdc:	bl	4408 <rb_settimeout@plt>
   14fe0:	mov	r1, #1
   14fe4:	ldr	r0, [fp, #-16]
   14fe8:	bl	13b00 <rb_ssl_init_fd>
   14fec:	ldr	r1, [fp, #-8]
   14ff0:	ldr	r0, [fp, #-16]
   14ff4:	bl	13dcc <rb_ssl_connect_common>
   14ff8:	sub	sp, fp, #4
   14ffc:	ldr	fp, [sp]
   15000:	add	sp, sp, #4
   15004:	pop	{pc}		; (ldr pc, [sp], #4)
   15008:	.word	0xffffff50

0001500c <rb_supports_ssl>:
   1500c:	push	{fp}		; (str fp, [sp, #-4]!)
   15010:	add	fp, sp, #0
   15014:	mov	r3, #1
   15018:	mov	r0, r3
   1501c:	add	sp, fp, #0
   15020:	pop	{fp}		; (ldr fp, [sp], #4)
   15024:	bx	lr

00015028 <rb_ssl_handshake_count>:
   15028:	push	{fp}		; (str fp, [sp, #-4]!)
   1502c:	add	fp, sp, #0
   15030:	sub	sp, sp, #12
   15034:	str	r0, [fp, #-8]
   15038:	ldr	r3, [fp, #-8]
   1503c:	ldr	r3, [r3, #60]	; 0x3c
   15040:	mov	r0, r3
   15044:	add	sp, fp, #0
   15048:	pop	{fp}		; (ldr fp, [sp], #4)
   1504c:	bx	lr

00015050 <rb_ssl_clear_handshake_count>:
   15050:	push	{fp}		; (str fp, [sp, #-4]!)
   15054:	add	fp, sp, #0
   15058:	sub	sp, sp, #12
   1505c:	str	r0, [fp, #-8]
   15060:	ldr	r3, [fp, #-8]
   15064:	mov	r2, #0
   15068:	str	r2, [r3, #60]	; 0x3c
   1506c:	nop	{0}
   15070:	add	sp, fp, #0
   15074:	pop	{fp}		; (ldr fp, [sp], #4)
   15078:	bx	lr

0001507c <rb_ssl_start_accepted>:
   1507c:	str	fp, [sp, #-8]!
   15080:	str	lr, [sp, #4]
   15084:	add	fp, sp, #4
   15088:	sub	sp, sp, #16
   1508c:	str	r0, [fp, #-8]
   15090:	str	r1, [fp, #-12]
   15094:	str	r2, [fp, #-16]
   15098:	str	r3, [fp, #-20]	; 0xffffffec
   1509c:	ldr	r3, [fp, #-8]
   150a0:	ldrb	r3, [r3, #17]
   150a4:	orr	r3, r3, #32
   150a8:	uxtb	r2, r3
   150ac:	ldr	r3, [fp, #-8]
   150b0:	strb	r2, [r3, #17]
   150b4:	mov	r0, #144	; 0x90
   150b8:	bl	13a04 <rb_malloc>
   150bc:	mov	r2, r0
   150c0:	ldr	r3, [fp, #-8]
   150c4:	str	r2, [r3, #52]	; 0x34
   150c8:	ldr	r3, [fp, #-8]
   150cc:	ldr	r3, [r3, #52]	; 0x34
   150d0:	ldr	r2, [fp, #-12]
   150d4:	str	r2, [r3, #132]	; 0x84
   150d8:	ldr	r3, [fp, #-8]
   150dc:	ldr	r3, [r3, #52]	; 0x34
   150e0:	ldr	r2, [fp, #-16]
   150e4:	str	r2, [r3, #140]	; 0x8c
   150e8:	ldr	r3, [fp, #-8]
   150ec:	ldr	r3, [r3, #52]	; 0x34
   150f0:	mov	r2, #0
   150f4:	str	r2, [r3, #128]	; 0x80
   150f8:	ldr	r3, [fp, #-8]
   150fc:	ldr	r3, [r3, #52]	; 0x34
   15100:	mov	r2, #128	; 0x80
   15104:	mov	r1, #0
   15108:	mov	r0, r3
   1510c:	bl	4648 <memset@plt>
   15110:	mov	r3, #0
   15114:	ldr	r2, [pc, #56]	; 15154 <rb_ssl_start_accepted+0xd8>
   15118:	add	r2, pc, r2
   1511c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15120:	ldr	r0, [fp, #-8]
   15124:	bl	4408 <rb_settimeout@plt>
   15128:	mov	r1, #0
   1512c:	ldr	r0, [fp, #-8]
   15130:	bl	13b00 <rb_ssl_init_fd>
   15134:	mov	r1, #0
   15138:	ldr	r0, [fp, #-8]
   1513c:	bl	13c14 <rb_ssl_accept_common>
   15140:	nop	{0}
   15144:	sub	sp, fp, #4
   15148:	ldr	fp, [sp]
   1514c:	add	sp, sp, #4
   15150:	pop	{pc}		; (ldr pc, [sp], #4)
   15154:	.word	0xfffffda8

00015158 <rb_ssl_accept_setup>:
   15158:	str	fp, [sp, #-8]!
   1515c:	str	lr, [sp, #4]
   15160:	add	fp, sp, #4
   15164:	sub	sp, sp, #16
   15168:	str	r0, [fp, #-8]
   1516c:	str	r1, [fp, #-12]
   15170:	str	r2, [fp, #-16]
   15174:	str	r3, [fp, #-20]	; 0xffffffec
   15178:	ldr	r3, [fp, #-12]
   1517c:	ldrb	r3, [r3, #17]
   15180:	orr	r3, r3, #32
   15184:	uxtb	r2, r3
   15188:	ldr	r3, [fp, #-12]
   1518c:	strb	r2, [r3, #17]
   15190:	mov	r0, #144	; 0x90
   15194:	bl	13a04 <rb_malloc>
   15198:	mov	r2, r0
   1519c:	ldr	r3, [fp, #-12]
   151a0:	str	r2, [r3, #52]	; 0x34
   151a4:	ldr	r3, [fp, #-8]
   151a8:	ldr	r2, [r3, #52]	; 0x34
   151ac:	ldr	r3, [fp, #-12]
   151b0:	ldr	r3, [r3, #52]	; 0x34
   151b4:	ldr	r2, [r2, #132]	; 0x84
   151b8:	str	r2, [r3, #132]	; 0x84
   151bc:	ldr	r3, [fp, #-8]
   151c0:	ldr	r2, [r3, #52]	; 0x34
   151c4:	ldr	r3, [fp, #-12]
   151c8:	ldr	r3, [r3, #52]	; 0x34
   151cc:	ldr	r2, [r2, #140]	; 0x8c
   151d0:	str	r2, [r3, #140]	; 0x8c
   151d4:	ldr	r3, [fp, #-12]
   151d8:	ldr	r3, [r3, #52]	; 0x34
   151dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   151e0:	str	r2, [r3, #128]	; 0x80
   151e4:	ldr	r3, [fp, #-12]
   151e8:	ldr	r3, [r3, #52]	; 0x34
   151ec:	mov	r2, #128	; 0x80
   151f0:	mov	r1, #0
   151f4:	mov	r0, r3
   151f8:	bl	4648 <memset@plt>
   151fc:	ldr	r3, [fp, #-12]
   15200:	ldr	r3, [r3, #52]	; 0x34
   15204:	mov	r0, r3
   15208:	ldr	r3, [fp, #-20]	; 0xffffffec
   1520c:	mov	r2, r3
   15210:	ldr	r1, [fp, #-16]
   15214:	bl	4834 <memcpy@plt>
   15218:	mov	r3, #0
   1521c:	ldr	r2, [pc, #56]	; 1525c <rb_ssl_accept_setup+0x104>
   15220:	add	r2, pc, r2
   15224:	mov	r1, #10
   15228:	ldr	r0, [fp, #-12]
   1522c:	bl	4408 <rb_settimeout@plt>
   15230:	mov	r1, #0
   15234:	ldr	r0, [fp, #-12]
   15238:	bl	13b00 <rb_ssl_init_fd>
   1523c:	mov	r1, #0
   15240:	ldr	r0, [fp, #-12]
   15244:	bl	13c14 <rb_ssl_accept_common>
   15248:	nop	{0}
   1524c:	sub	sp, fp, #4
   15250:	ldr	fp, [sp]
   15254:	add	sp, sp, #4
   15258:	pop	{pc}		; (ldr pc, [sp], #4)
   1525c:	.word	0xfffffca0

00015260 <rb_ssl_listen>:
   15260:	str	fp, [sp, #-8]!
   15264:	str	lr, [sp, #4]
   15268:	add	fp, sp, #4
   1526c:	sub	sp, sp, #24
   15270:	str	r0, [fp, #-16]
   15274:	str	r1, [fp, #-20]	; 0xffffffec
   15278:	str	r2, [fp, #-24]	; 0xffffffe8
   1527c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15280:	ldr	r1, [fp, #-20]	; 0xffffffec
   15284:	ldr	r0, [fp, #-16]
   15288:	bl	4c24 <rb_listen@plt>
   1528c:	str	r0, [fp, #-8]
   15290:	ldr	r3, [fp, #-16]
   15294:	mov	r2, #52	; 0x34
   15298:	strb	r2, [r3, #17]
   1529c:	ldr	r3, [fp, #-8]
   152a0:	mov	r0, r3
   152a4:	sub	sp, fp, #4
   152a8:	ldr	fp, [sp]
   152ac:	add	sp, sp, #4
   152b0:	pop	{pc}		; (ldr pc, [sp], #4)

000152b4 <rb_connect_tcp_ssl>:
   152b4:	str	fp, [sp, #-8]!
   152b8:	str	lr, [sp, #4]
   152bc:	add	fp, sp, #4
   152c0:	sub	sp, sp, #32
   152c4:	str	r0, [fp, #-16]
   152c8:	str	r1, [fp, #-20]	; 0xffffffec
   152cc:	str	r2, [fp, #-24]	; 0xffffffe8
   152d0:	str	r3, [fp, #-28]	; 0xffffffe4
   152d4:	ldr	r3, [fp, #-16]
   152d8:	cmp	r3, #0
   152dc:	beq	1533c <rb_connect_tcp_ssl+0x88>
   152e0:	mov	r0, #12
   152e4:	bl	13a04 <rb_malloc>
   152e8:	str	r0, [fp, #-8]
   152ec:	ldr	r3, [fp, #-8]
   152f0:	ldr	r2, [fp, #4]
   152f4:	str	r2, [r3, #4]
   152f8:	ldr	r3, [fp, #-8]
   152fc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15300:	str	r2, [r3]
   15304:	ldr	r3, [fp, #-8]
   15308:	ldr	r2, [fp, #8]
   1530c:	str	r2, [r3, #8]
   15310:	ldr	r3, [fp, #8]
   15314:	str	r3, [sp, #4]
   15318:	ldr	r3, [fp, #-8]
   1531c:	str	r3, [sp]
   15320:	ldr	r3, [pc, #40]	; 15350 <rb_connect_tcp_ssl+0x9c>
   15324:	add	r3, pc, r3
   15328:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1532c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15330:	ldr	r0, [fp, #-16]
   15334:	bl	4444 <rb_connect_tcp@plt>
   15338:	b	15340 <rb_connect_tcp_ssl+0x8c>
   1533c:	nop	{0}
   15340:	sub	sp, fp, #4
   15344:	ldr	fp, [sp]
   15348:	add	sp, sp, #4
   1534c:	pop	{pc}		; (ldr pc, [sp], #4)
   15350:	.word	0xfffffc3c

00015354 <rb_ssl_start_connected>:
   15354:	str	fp, [sp, #-8]!
   15358:	str	lr, [sp, #4]
   1535c:	add	fp, sp, #4
   15360:	sub	sp, sp, #24
   15364:	str	r0, [fp, #-16]
   15368:	str	r1, [fp, #-20]	; 0xffffffec
   1536c:	str	r2, [fp, #-24]	; 0xffffffe8
   15370:	str	r3, [fp, #-28]	; 0xffffffe4
   15374:	ldr	r3, [fp, #-16]
   15378:	cmp	r3, #0
   1537c:	beq	15434 <rb_ssl_start_connected+0xe0>
   15380:	mov	r0, #12
   15384:	bl	13a04 <rb_malloc>
   15388:	str	r0, [fp, #-8]
   1538c:	ldr	r3, [fp, #-8]
   15390:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15394:	str	r2, [r3, #4]
   15398:	ldr	r3, [fp, #-8]
   1539c:	ldr	r2, [fp, #-20]	; 0xffffffec
   153a0:	str	r2, [r3]
   153a4:	ldr	r3, [fp, #-8]
   153a8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   153ac:	str	r2, [r3, #8]
   153b0:	mov	r0, #268	; 0x10c
   153b4:	bl	13a04 <rb_malloc>
   153b8:	mov	r2, r0
   153bc:	ldr	r3, [fp, #-16]
   153c0:	str	r2, [r3, #48]	; 0x30
   153c4:	ldr	r3, [fp, #-16]
   153c8:	ldr	r3, [r3, #48]	; 0x30
   153cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   153d0:	str	r2, [r3, #260]	; 0x104
   153d4:	ldr	r3, [fp, #-16]
   153d8:	ldr	r3, [r3, #48]	; 0x30
   153dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   153e0:	str	r2, [r3, #264]	; 0x108
   153e4:	ldr	r3, [fp, #-16]
   153e8:	ldrb	r3, [r3, #17]
   153ec:	orr	r3, r3, #32
   153f0:	uxtb	r2, r3
   153f4:	ldr	r3, [fp, #-16]
   153f8:	strb	r2, [r3, #17]
   153fc:	ldr	r3, [fp, #-8]
   15400:	ldr	r1, [r3, #8]
   15404:	ldr	r3, [fp, #-8]
   15408:	ldr	r2, [pc, #56]	; 15448 <rb_ssl_start_connected+0xf4>
   1540c:	add	r2, pc, r2
   15410:	ldr	r0, [fp, #-16]
   15414:	bl	4408 <rb_settimeout@plt>
   15418:	mov	r1, #1
   1541c:	ldr	r0, [fp, #-16]
   15420:	bl	13b00 <rb_ssl_init_fd>
   15424:	ldr	r1, [fp, #-8]
   15428:	ldr	r0, [fp, #-16]
   1542c:	bl	13dcc <rb_ssl_connect_common>
   15430:	b	15438 <rb_ssl_start_connected+0xe4>
   15434:	nop	{0}
   15438:	sub	sp, fp, #4
   1543c:	ldr	fp, [sp]
   15440:	add	sp, sp, #4
   15444:	pop	{pc}		; (ldr pc, [sp], #4)
   15448:	.word	0xfffffb18

0001544c <rb_dlinkAdd>:
   1544c:	push	{fp}		; (str fp, [sp, #-4]!)
   15450:	add	fp, sp, #0
   15454:	sub	sp, sp, #20
   15458:	str	r0, [fp, #-8]
   1545c:	str	r1, [fp, #-12]
   15460:	str	r2, [fp, #-16]
   15464:	ldr	r3, [fp, #-12]
   15468:	ldr	r2, [fp, #-8]
   1546c:	str	r2, [r3]
   15470:	ldr	r3, [fp, #-12]
   15474:	mov	r2, #0
   15478:	str	r2, [r3, #4]
   1547c:	ldr	r3, [fp, #-16]
   15480:	ldr	r2, [r3]
   15484:	ldr	r3, [fp, #-12]
   15488:	str	r2, [r3, #8]
   1548c:	ldr	r3, [fp, #-16]
   15490:	ldr	r3, [r3]
   15494:	cmp	r3, #0
   15498:	beq	154b0 <rb_dlinkAdd+0x64>
   1549c:	ldr	r3, [fp, #-16]
   154a0:	ldr	r3, [r3]
   154a4:	ldr	r2, [fp, #-12]
   154a8:	str	r2, [r3, #4]
   154ac:	b	154cc <rb_dlinkAdd+0x80>
   154b0:	ldr	r3, [fp, #-16]
   154b4:	ldr	r3, [r3, #4]
   154b8:	cmp	r3, #0
   154bc:	bne	154cc <rb_dlinkAdd+0x80>
   154c0:	ldr	r3, [fp, #-16]
   154c4:	ldr	r2, [fp, #-12]
   154c8:	str	r2, [r3, #4]
   154cc:	ldr	r3, [fp, #-16]
   154d0:	ldr	r2, [fp, #-12]
   154d4:	str	r2, [r3]
   154d8:	ldr	r3, [fp, #-16]
   154dc:	ldr	r3, [r3, #8]
   154e0:	add	r2, r3, #1
   154e4:	ldr	r3, [fp, #-16]
   154e8:	str	r2, [r3, #8]
   154ec:	nop	{0}
   154f0:	add	sp, fp, #0
   154f4:	pop	{fp}		; (ldr fp, [sp], #4)
   154f8:	bx	lr

000154fc <rb_dlinkDelete>:
   154fc:	push	{fp}		; (str fp, [sp, #-4]!)
   15500:	add	fp, sp, #0
   15504:	sub	sp, sp, #12
   15508:	str	r0, [fp, #-8]
   1550c:	str	r1, [fp, #-12]
   15510:	ldr	r3, [fp, #-8]
   15514:	ldr	r3, [r3, #8]
   15518:	cmp	r3, #0
   1551c:	beq	15538 <rb_dlinkDelete+0x3c>
   15520:	ldr	r3, [fp, #-8]
   15524:	ldr	r3, [r3, #8]
   15528:	ldr	r2, [fp, #-8]
   1552c:	ldr	r2, [r2, #4]
   15530:	str	r2, [r3, #4]
   15534:	b	15548 <rb_dlinkDelete+0x4c>
   15538:	ldr	r3, [fp, #-8]
   1553c:	ldr	r2, [r3, #4]
   15540:	ldr	r3, [fp, #-12]
   15544:	str	r2, [r3, #4]
   15548:	ldr	r3, [fp, #-8]
   1554c:	ldr	r3, [r3, #4]
   15550:	cmp	r3, #0
   15554:	beq	15570 <rb_dlinkDelete+0x74>
   15558:	ldr	r3, [fp, #-8]
   1555c:	ldr	r3, [r3, #4]
   15560:	ldr	r2, [fp, #-8]
   15564:	ldr	r2, [r2, #8]
   15568:	str	r2, [r3, #8]
   1556c:	b	15580 <rb_dlinkDelete+0x84>
   15570:	ldr	r3, [fp, #-8]
   15574:	ldr	r2, [r3, #8]
   15578:	ldr	r3, [fp, #-12]
   1557c:	str	r2, [r3]
   15580:	ldr	r3, [fp, #-8]
   15584:	mov	r2, #0
   15588:	str	r2, [r3, #4]
   1558c:	ldr	r3, [fp, #-8]
   15590:	ldr	r2, [r3, #4]
   15594:	ldr	r3, [fp, #-8]
   15598:	str	r2, [r3, #8]
   1559c:	ldr	r3, [fp, #-12]
   155a0:	ldr	r3, [r3, #8]
   155a4:	sub	r2, r3, #1
   155a8:	ldr	r3, [fp, #-12]
   155ac:	str	r2, [r3, #8]
   155b0:	nop	{0}
   155b4:	add	sp, fp, #0
   155b8:	pop	{fp}		; (ldr fp, [sp], #4)
   155bc:	bx	lr

000155c0 <rb_malloc>:
   155c0:	str	fp, [sp, #-8]!
   155c4:	str	lr, [sp, #4]
   155c8:	add	fp, sp, #4
   155cc:	sub	sp, sp, #16
   155d0:	str	r0, [fp, #-16]
   155d4:	ldr	r1, [fp, #-16]
   155d8:	mov	r0, #1
   155dc:	bl	460c <calloc@plt>
   155e0:	mov	r3, r0
   155e4:	str	r3, [fp, #-8]
   155e8:	ldr	r3, [fp, #-8]
   155ec:	cmp	r3, #0
   155f0:	moveq	r3, #1
   155f4:	movne	r3, #0
   155f8:	uxtb	r3, r3
   155fc:	cmp	r3, #0
   15600:	beq	15608 <rb_malloc+0x48>
   15604:	bl	49a8 <rb_outofmemory@plt>
   15608:	ldr	r3, [fp, #-8]
   1560c:	mov	r0, r3
   15610:	sub	sp, fp, #4
   15614:	ldr	fp, [sp]
   15618:	add	sp, sp, #4
   1561c:	pop	{pc}		; (ldr pc, [sp], #4)

00015620 <rb_strndup>:
   15620:	str	fp, [sp, #-8]!
   15624:	str	lr, [sp, #4]
   15628:	add	fp, sp, #4
   1562c:	sub	sp, sp, #16
   15630:	str	r0, [fp, #-16]
   15634:	str	r1, [fp, #-20]	; 0xffffffec
   15638:	ldr	r0, [fp, #-20]	; 0xffffffec
   1563c:	bl	49cc <malloc@plt>
   15640:	mov	r3, r0
   15644:	str	r3, [fp, #-8]
   15648:	ldr	r3, [fp, #-8]
   1564c:	cmp	r3, #0
   15650:	moveq	r3, #1
   15654:	movne	r3, #0
   15658:	uxtb	r3, r3
   1565c:	cmp	r3, #0
   15660:	beq	15668 <rb_strndup+0x48>
   15664:	bl	49a8 <rb_outofmemory@plt>
   15668:	ldr	r2, [fp, #-20]	; 0xffffffec
   1566c:	ldr	r1, [fp, #-16]
   15670:	ldr	r0, [fp, #-8]
   15674:	bl	46c0 <rb_strlcpy@plt>
   15678:	ldr	r3, [fp, #-8]
   1567c:	mov	r0, r3
   15680:	sub	sp, fp, #4
   15684:	ldr	fp, [sp]
   15688:	add	sp, sp, #4
   1568c:	pop	{pc}		; (ldr pc, [sp], #4)

00015690 <rb_free>:
   15690:	str	fp, [sp, #-8]!
   15694:	str	lr, [sp, #4]
   15698:	add	fp, sp, #4
   1569c:	sub	sp, sp, #8
   156a0:	str	r0, [fp, #-8]
   156a4:	ldr	r3, [fp, #-8]
   156a8:	cmp	r3, #0
   156ac:	movne	r3, #1
   156b0:	moveq	r3, #0
   156b4:	uxtb	r3, r3
   156b8:	cmp	r3, #0
   156bc:	beq	156c8 <rb_free+0x38>
   156c0:	ldr	r0, [fp, #-8]
   156c4:	bl	4720 <free@plt>
   156c8:	nop	{0}
   156cc:	sub	sp, fp, #4
   156d0:	ldr	fp, [sp]
   156d4:	add	sp, sp, #4
   156d8:	pop	{pc}		; (ldr pc, [sp], #4)

000156dc <rb_event_find>:
   156dc:	push	{fp}		; (str fp, [sp, #-4]!)
   156e0:	add	fp, sp, #0
   156e4:	sub	sp, sp, #20
   156e8:	str	r0, [fp, #-16]
   156ec:	str	r1, [fp, #-20]	; 0xffffffec
   156f0:	ldr	r3, [pc, #116]	; 1576c <rb_event_find+0x90>
   156f4:	add	r3, pc, r3
   156f8:	ldr	r3, [r3]
   156fc:	str	r3, [fp, #-8]
   15700:	b	1574c <rb_event_find+0x70>
   15704:	ldr	r3, [fp, #-8]
   15708:	ldr	r3, [r3]
   1570c:	str	r3, [fp, #-12]
   15710:	ldr	r3, [fp, #-12]
   15714:	ldr	r3, [r3, #12]
   15718:	ldr	r2, [fp, #-16]
   1571c:	cmp	r2, r3
   15720:	bne	15740 <rb_event_find+0x64>
   15724:	ldr	r3, [fp, #-12]
   15728:	ldr	r3, [r3, #16]
   1572c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15730:	cmp	r2, r3
   15734:	bne	15740 <rb_event_find+0x64>
   15738:	ldr	r3, [fp, #-12]
   1573c:	b	1575c <rb_event_find+0x80>
   15740:	ldr	r3, [fp, #-8]
   15744:	ldr	r3, [r3, #8]
   15748:	str	r3, [fp, #-8]
   1574c:	ldr	r3, [fp, #-8]
   15750:	cmp	r3, #0
   15754:	bne	15704 <rb_event_find+0x28>
   15758:	mov	r3, #0
   1575c:	mov	r0, r3
   15760:	add	sp, fp, #0
   15764:	pop	{fp}		; (ldr fp, [sp], #4)
   15768:	bx	lr
   1576c:	.word	0x00032c24

00015770 <rb_event_add_common>:
   15770:	str	fp, [sp, #-8]!
   15774:	str	lr, [sp, #4]
   15778:	add	fp, sp, #4
   1577c:	sub	sp, sp, #24
   15780:	str	r0, [fp, #-16]
   15784:	str	r1, [fp, #-20]	; 0xffffffec
   15788:	str	r2, [fp, #-24]	; 0xffffffe8
   1578c:	str	r3, [fp, #-28]	; 0xffffffe4
   15790:	mov	r0, #48	; 0x30
   15794:	bl	155c0 <rb_malloc>
   15798:	str	r0, [fp, #-8]
   1579c:	ldr	r3, [fp, #-8]
   157a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   157a4:	str	r2, [r3, #12]
   157a8:	mov	r1, #33	; 0x21
   157ac:	ldr	r0, [fp, #-16]
   157b0:	bl	15620 <rb_strndup>
   157b4:	mov	r2, r0
   157b8:	ldr	r3, [fp, #-8]
   157bc:	str	r2, [r3, #20]
   157c0:	ldr	r3, [fp, #-8]
   157c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   157c8:	str	r2, [r3, #16]
   157cc:	bl	481c <rb_current_time@plt>
   157d0:	mov	r2, r0
   157d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   157d8:	add	r2, r2, r3
   157dc:	ldr	r3, [fp, #-8]
   157e0:	str	r2, [r3, #28]
   157e4:	ldr	r3, [fp, #-8]
   157e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   157ec:	str	r2, [r3, #32]
   157f0:	ldr	r3, [fp, #-8]
   157f4:	ldr	r2, [fp, #4]
   157f8:	str	r2, [r3, #24]
   157fc:	ldr	r3, [fp, #-8]
   15800:	mov	r2, #0
   15804:	str	r2, [r3, #44]	; 0x2c
   15808:	ldr	r3, [fp, #-8]
   1580c:	ldr	r2, [r3, #28]
   15810:	ldr	r3, [pc, #112]	; 15888 <rb_event_add_common+0x118>
   15814:	add	r3, pc, r3
   15818:	ldr	r3, [r3]
   1581c:	cmp	r2, r3
   15820:	blt	15838 <rb_event_add_common+0xc8>
   15824:	ldr	r3, [pc, #96]	; 1588c <rb_event_add_common+0x11c>
   15828:	add	r3, pc, r3
   1582c:	ldr	r3, [r3]
   15830:	cmn	r3, #1
   15834:	bne	1584c <rb_event_add_common+0xdc>
   15838:	ldr	r3, [fp, #-8]
   1583c:	ldr	r2, [r3, #28]
   15840:	ldr	r3, [pc, #72]	; 15890 <rb_event_add_common+0x120>
   15844:	add	r3, pc, r3
   15848:	str	r2, [r3]
   1584c:	ldr	r3, [fp, #-8]
   15850:	ldr	r2, [pc, #60]	; 15894 <rb_event_add_common+0x124>
   15854:	add	r2, pc, r2
   15858:	mov	r1, r3
   1585c:	ldr	r0, [fp, #-8]
   15860:	bl	1544c <rb_dlinkAdd>
   15864:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15868:	ldr	r0, [fp, #-8]
   1586c:	bl	12d54 <rb_io_sched_event>
   15870:	ldr	r3, [fp, #-8]
   15874:	mov	r0, r3
   15878:	sub	sp, fp, #4
   1587c:	ldr	fp, [sp]
   15880:	add	sp, sp, #4
   15884:	pop	{pc}		; (ldr pc, [sp], #4)
   15888:	.word	0x00020094
   1588c:	.word	0x00020080
   15890:	.word	0x00020064
   15894:	.word	0x00032ac4

00015898 <rb_event_add>:
   15898:	str	fp, [sp, #-8]!
   1589c:	str	lr, [sp, #4]
   158a0:	add	fp, sp, #4
   158a4:	sub	sp, sp, #24
   158a8:	str	r0, [fp, #-8]
   158ac:	str	r1, [fp, #-12]
   158b0:	str	r2, [fp, #-16]
   158b4:	str	r3, [fp, #-20]	; 0xffffffec
   158b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   158bc:	cmp	r3, #0
   158c0:	movle	r3, #1
   158c4:	movgt	r3, #0
   158c8:	uxtb	r3, r3
   158cc:	cmp	r3, #0
   158d0:	beq	158f4 <rb_event_add+0x5c>
   158d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   158d8:	ldr	r1, [fp, #-8]
   158dc:	ldr	r3, [pc, #68]	; 15928 <rb_event_add+0x90>
   158e0:	add	r3, pc, r3
   158e4:	mov	r0, r3
   158e8:	bl	493c <rb_lib_log@plt>
   158ec:	mov	r3, #1
   158f0:	str	r3, [fp, #-20]	; 0xffffffec
   158f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   158f8:	str	r3, [sp]
   158fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   15900:	ldr	r2, [fp, #-16]
   15904:	ldr	r1, [fp, #-12]
   15908:	ldr	r0, [fp, #-8]
   1590c:	bl	15770 <rb_event_add_common>
   15910:	mov	r3, r0
   15914:	mov	r0, r3
   15918:	sub	sp, fp, #4
   1591c:	ldr	fp, [sp]
   15920:	add	sp, sp, #4
   15924:	pop	{pc}		; (ldr pc, [sp], #4)
   15928:	.word	0x0000e950

0001592c <rb_event_addonce>:
   1592c:	str	fp, [sp, #-8]!
   15930:	str	lr, [sp, #4]
   15934:	add	fp, sp, #4
   15938:	sub	sp, sp, #24
   1593c:	str	r0, [fp, #-8]
   15940:	str	r1, [fp, #-12]
   15944:	str	r2, [fp, #-16]
   15948:	str	r3, [fp, #-20]	; 0xffffffec
   1594c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15950:	cmp	r3, #0
   15954:	movle	r3, #1
   15958:	movgt	r3, #0
   1595c:	uxtb	r3, r3
   15960:	cmp	r3, #0
   15964:	beq	15988 <rb_event_addonce+0x5c>
   15968:	ldr	r2, [fp, #-20]	; 0xffffffec
   1596c:	ldr	r1, [fp, #-8]
   15970:	ldr	r3, [pc, #68]	; 159bc <rb_event_addonce+0x90>
   15974:	add	r3, pc, r3
   15978:	mov	r0, r3
   1597c:	bl	493c <rb_lib_log@plt>
   15980:	mov	r3, #1
   15984:	str	r3, [fp, #-20]	; 0xffffffec
   15988:	mov	r3, #0
   1598c:	str	r3, [sp]
   15990:	ldr	r3, [fp, #-20]	; 0xffffffec
   15994:	ldr	r2, [fp, #-16]
   15998:	ldr	r1, [fp, #-12]
   1599c:	ldr	r0, [fp, #-8]
   159a0:	bl	15770 <rb_event_add_common>
   159a4:	mov	r3, r0
   159a8:	mov	r0, r3
   159ac:	sub	sp, fp, #4
   159b0:	ldr	fp, [sp]
   159b4:	add	sp, sp, #4
   159b8:	pop	{pc}		; (ldr pc, [sp], #4)
   159bc:	.word	0x0000e900

000159c0 <rb_event_delete>:
   159c0:	str	fp, [sp, #-8]!
   159c4:	str	lr, [sp, #4]
   159c8:	add	fp, sp, #4
   159cc:	sub	sp, sp, #8
   159d0:	str	r0, [fp, #-8]
   159d4:	ldr	r3, [fp, #-8]
   159d8:	cmp	r3, #0
   159dc:	beq	159f8 <rb_event_delete+0x38>
   159e0:	ldr	r3, [fp, #-8]
   159e4:	mov	r2, #1
   159e8:	str	r2, [r3, #44]	; 0x2c
   159ec:	ldr	r0, [fp, #-8]
   159f0:	bl	12e04 <rb_io_unsched_event>
   159f4:	b	159fc <rb_event_delete+0x3c>
   159f8:	nop	{0}
   159fc:	sub	sp, fp, #4
   15a00:	ldr	fp, [sp]
   15a04:	add	sp, sp, #4
   15a08:	pop	{pc}		; (ldr pc, [sp], #4)

00015a0c <rb_event_find_delete>:
   15a0c:	str	fp, [sp, #-8]!
   15a10:	str	lr, [sp, #4]
   15a14:	add	fp, sp, #4
   15a18:	sub	sp, sp, #8
   15a1c:	str	r0, [fp, #-8]
   15a20:	str	r1, [fp, #-12]
   15a24:	ldr	r1, [fp, #-12]
   15a28:	ldr	r0, [fp, #-8]
   15a2c:	bl	156dc <rb_event_find>
   15a30:	mov	r3, r0
   15a34:	mov	r0, r3
   15a38:	bl	44bc <rb_event_delete@plt>
   15a3c:	nop	{0}
   15a40:	sub	sp, fp, #4
   15a44:	ldr	fp, [sp]
   15a48:	add	sp, sp, #4
   15a4c:	pop	{pc}		; (ldr pc, [sp], #4)

00015a50 <rb_event_frequency>:
   15a50:	str	fp, [sp, #-8]!
   15a54:	str	lr, [sp, #4]
   15a58:	add	fp, sp, #4
   15a5c:	sub	sp, sp, #16
   15a60:	str	r0, [fp, #-16]
   15a64:	ldr	r3, [fp, #-16]
   15a68:	cmp	r3, #0
   15a6c:	bge	15af0 <rb_event_frequency+0xa0>
   15a70:	ldr	r3, [fp, #-16]
   15a74:	cmp	r3, #0
   15a78:	rsblt	r3, r3, #0
   15a7c:	lsl	r2, r3, #1
   15a80:	movw	r3, #21846	; 0x5556
   15a84:	movt	r3, #21845	; 0x5555
   15a88:	smull	r3, r1, r3, r2
   15a8c:	asr	r3, r2, #31
   15a90:	sub	r3, r1, r3
   15a94:	str	r3, [fp, #-8]
   15a98:	bl	4b70 <rand@plt>
   15a9c:	mov	r2, r0
   15aa0:	movw	r3, #19923	; 0x4dd3
   15aa4:	movt	r3, #4194	; 0x1062
   15aa8:	smull	r1, r3, r3, r2
   15aac:	asr	r1, r3, #6
   15ab0:	asr	r3, r2, #31
   15ab4:	sub	r3, r1, r3
   15ab8:	mov	r1, #1000	; 0x3e8
   15abc:	mul	r3, r1, r3
   15ac0:	sub	r3, r2, r3
   15ac4:	ldr	r2, [fp, #-8]
   15ac8:	mul	r2, r2, r3
   15acc:	movw	r3, #19923	; 0x4dd3
   15ad0:	movt	r3, #4194	; 0x1062
   15ad4:	smull	r1, r3, r3, r2
   15ad8:	asr	r1, r3, #6
   15adc:	asr	r3, r2, #31
   15ae0:	sub	r3, r1, r3
   15ae4:	ldr	r2, [fp, #-8]
   15ae8:	add	r3, r2, r3
   15aec:	str	r3, [fp, #-16]
   15af0:	ldr	r3, [fp, #-16]
   15af4:	mov	r0, r3
   15af8:	sub	sp, fp, #4
   15afc:	ldr	fp, [sp]
   15b00:	add	sp, sp, #4
   15b04:	pop	{pc}		; (ldr pc, [sp], #4)

00015b08 <rb_event_addish>:
   15b08:	str	fp, [sp, #-8]!
   15b0c:	str	lr, [sp, #4]
   15b10:	add	fp, sp, #4
   15b14:	sub	sp, sp, #24
   15b18:	str	r0, [fp, #-8]
   15b1c:	str	r1, [fp, #-12]
   15b20:	str	r2, [fp, #-16]
   15b24:	str	r3, [fp, #-20]	; 0xffffffec
   15b28:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b2c:	cmp	r3, #0
   15b30:	rsblt	r3, r3, #0
   15b34:	str	r3, [fp, #-20]	; 0xffffffec
   15b38:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b3c:	cmp	r3, #2
   15b40:	ble	15b50 <rb_event_addish+0x48>
   15b44:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b48:	rsb	r3, r3, #0
   15b4c:	str	r3, [fp, #-20]	; 0xffffffec
   15b50:	ldr	r0, [fp, #-20]	; 0xffffffec
   15b54:	bl	15a50 <rb_event_frequency>
   15b58:	mov	r2, r0
   15b5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b60:	str	r3, [sp]
   15b64:	mov	r3, r2
   15b68:	ldr	r2, [fp, #-16]
   15b6c:	ldr	r1, [fp, #-12]
   15b70:	ldr	r0, [fp, #-8]
   15b74:	bl	15770 <rb_event_add_common>
   15b78:	mov	r3, r0
   15b7c:	mov	r0, r3
   15b80:	sub	sp, fp, #4
   15b84:	ldr	fp, [sp]
   15b88:	add	sp, sp, #4
   15b8c:	pop	{pc}		; (ldr pc, [sp], #4)

00015b90 <rb_run_one_event>:
   15b90:	str	r4, [sp, #-12]!
   15b94:	str	fp, [sp, #4]
   15b98:	str	lr, [sp, #8]
   15b9c:	add	fp, sp, #8
   15ba0:	sub	sp, sp, #12
   15ba4:	str	r0, [fp, #-16]
   15ba8:	ldr	r3, [fp, #-16]
   15bac:	ldr	r3, [r3, #20]
   15bb0:	mov	r2, #33	; 0x21
   15bb4:	mov	r1, r3
   15bb8:	ldr	r3, [pc, #188]	; 15c7c <rb_run_one_event+0xec>
   15bbc:	add	r3, pc, r3
   15bc0:	mov	r0, r3
   15bc4:	bl	46c0 <rb_strlcpy@plt>
   15bc8:	ldr	r3, [fp, #-16]
   15bcc:	ldr	r3, [r3, #12]
   15bd0:	ldr	r2, [fp, #-16]
   15bd4:	ldr	r2, [r2, #16]
   15bd8:	mov	r0, r2
   15bdc:	blx	r3
   15be0:	ldr	r3, [fp, #-16]
   15be4:	ldr	r3, [r3, #24]
   15be8:	cmp	r3, #0
   15bec:	bne	15bfc <rb_run_one_event+0x6c>
   15bf0:	ldr	r0, [fp, #-16]
   15bf4:	bl	44bc <rb_event_delete@plt>
   15bf8:	b	15c68 <rb_run_one_event+0xd8>
   15bfc:	bl	481c <rb_current_time@plt>
   15c00:	mov	r4, r0
   15c04:	ldr	r3, [fp, #-16]
   15c08:	ldr	r3, [r3, #24]
   15c0c:	mov	r0, r3
   15c10:	bl	15a50 <rb_event_frequency>
   15c14:	mov	r3, r0
   15c18:	add	r2, r4, r3
   15c1c:	ldr	r3, [fp, #-16]
   15c20:	str	r2, [r3, #28]
   15c24:	ldr	r3, [fp, #-16]
   15c28:	ldr	r2, [r3, #28]
   15c2c:	ldr	r3, [pc, #76]	; 15c80 <rb_run_one_event+0xf0>
   15c30:	add	r3, pc, r3
   15c34:	ldr	r3, [r3]
   15c38:	cmp	r2, r3
   15c3c:	blt	15c54 <rb_run_one_event+0xc4>
   15c40:	ldr	r3, [pc, #60]	; 15c84 <rb_run_one_event+0xf4>
   15c44:	add	r3, pc, r3
   15c48:	ldr	r3, [r3]
   15c4c:	cmn	r3, #1
   15c50:	bne	15c68 <rb_run_one_event+0xd8>
   15c54:	ldr	r3, [fp, #-16]
   15c58:	ldr	r2, [r3, #28]
   15c5c:	ldr	r3, [pc, #36]	; 15c88 <rb_run_one_event+0xf8>
   15c60:	add	r3, pc, r3
   15c64:	str	r2, [r3]
   15c68:	sub	sp, fp, #8
   15c6c:	ldr	r4, [sp]
   15c70:	ldr	fp, [sp, #4]
   15c74:	add	sp, sp, #8
   15c78:	pop	{pc}		; (ldr pc, [sp], #4)
   15c7c:	.word	0x00032738
   15c80:	.word	0x0001fc78
   15c84:	.word	0x0001fc64
   15c88:	.word	0x0001fc48

00015c8c <rb_event_run>:
   15c8c:	str	r4, [sp, #-12]!
   15c90:	str	fp, [sp, #4]
   15c94:	str	lr, [sp, #8]
   15c98:	add	fp, sp, #8
   15c9c:	sub	sp, sp, #20
   15ca0:	bl	12ea4 <rb_io_supports_event>
   15ca4:	mov	r3, r0
   15ca8:	cmp	r3, #0
   15cac:	bne	15ec4 <rb_event_run+0x238>
   15cb0:	ldr	r3, [pc, #548]	; 15edc <rb_event_run+0x250>
   15cb4:	add	r3, pc, r3
   15cb8:	mvn	r2, #0
   15cbc:	str	r2, [r3]
   15cc0:	ldr	r3, [pc, #536]	; 15ee0 <rb_event_run+0x254>
   15cc4:	add	r3, pc, r3
   15cc8:	ldr	r3, [r3]
   15ccc:	str	r3, [fp, #-16]
   15cd0:	ldr	r3, [fp, #-16]
   15cd4:	cmp	r3, #0
   15cd8:	beq	15ce8 <rb_event_run+0x5c>
   15cdc:	ldr	r3, [fp, #-16]
   15ce0:	ldr	r3, [r3, #8]
   15ce4:	b	15cec <rb_event_run+0x60>
   15ce8:	mov	r3, #0
   15cec:	str	r3, [fp, #-20]	; 0xffffffec
   15cf0:	b	15eb4 <rb_event_run+0x228>
   15cf4:	ldr	r3, [fp, #-16]
   15cf8:	ldr	r3, [r3]
   15cfc:	str	r3, [fp, #-24]	; 0xffffffe8
   15d00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15d04:	ldr	r3, [r3, #44]	; 0x2c
   15d08:	cmp	r3, #0
   15d0c:	beq	15d44 <rb_event_run+0xb8>
   15d10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15d14:	ldr	r2, [pc, #456]	; 15ee4 <rb_event_run+0x258>
   15d18:	add	r2, pc, r2
   15d1c:	mov	r1, r2
   15d20:	mov	r0, r3
   15d24:	bl	154fc <rb_dlinkDelete>
   15d28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15d2c:	ldr	r3, [r3, #20]
   15d30:	mov	r0, r3
   15d34:	bl	15690 <rb_free>
   15d38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d3c:	bl	15690 <rb_free>
   15d40:	b	15e8c <rb_event_run+0x200>
   15d44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15d48:	ldr	r4, [r3, #28]
   15d4c:	bl	481c <rb_current_time@plt>
   15d50:	mov	r3, r0
   15d54:	cmp	r4, r3
   15d58:	bgt	15e48 <rb_event_run+0x1bc>
   15d5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15d60:	ldr	r3, [r3, #20]
   15d64:	mov	r2, #33	; 0x21
   15d68:	mov	r1, r3
   15d6c:	ldr	r3, [pc, #372]	; 15ee8 <rb_event_run+0x25c>
   15d70:	add	r3, pc, r3
   15d74:	mov	r0, r3
   15d78:	bl	46c0 <rb_strlcpy@plt>
   15d7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15d80:	ldr	r3, [r3, #12]
   15d84:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15d88:	ldr	r2, [r2, #16]
   15d8c:	mov	r0, r2
   15d90:	blx	r3
   15d94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15d98:	ldr	r3, [r3, #24]
   15d9c:	cmp	r3, #0
   15da0:	beq	15e14 <rb_event_run+0x188>
   15da4:	bl	481c <rb_current_time@plt>
   15da8:	mov	r4, r0
   15dac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15db0:	ldr	r3, [r3, #24]
   15db4:	mov	r0, r3
   15db8:	bl	15a50 <rb_event_frequency>
   15dbc:	mov	r3, r0
   15dc0:	add	r2, r4, r3
   15dc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15dc8:	str	r2, [r3, #28]
   15dcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15dd0:	ldr	r2, [r3, #28]
   15dd4:	ldr	r3, [pc, #272]	; 15eec <rb_event_run+0x260>
   15dd8:	add	r3, pc, r3
   15ddc:	ldr	r3, [r3]
   15de0:	cmp	r2, r3
   15de4:	blt	15dfc <rb_event_run+0x170>
   15de8:	ldr	r3, [pc, #256]	; 15ef0 <rb_event_run+0x264>
   15dec:	add	r3, pc, r3
   15df0:	ldr	r3, [r3]
   15df4:	cmn	r3, #1
   15df8:	bne	15e8c <rb_event_run+0x200>
   15dfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15e00:	ldr	r2, [r3, #28]
   15e04:	ldr	r3, [pc, #232]	; 15ef4 <rb_event_run+0x268>
   15e08:	add	r3, pc, r3
   15e0c:	str	r2, [r3]
   15e10:	b	15e8c <rb_event_run+0x200>
   15e14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15e18:	ldr	r2, [pc, #216]	; 15ef8 <rb_event_run+0x26c>
   15e1c:	add	r2, pc, r2
   15e20:	mov	r1, r2
   15e24:	mov	r0, r3
   15e28:	bl	154fc <rb_dlinkDelete>
   15e2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15e30:	ldr	r3, [r3, #20]
   15e34:	mov	r0, r3
   15e38:	bl	15690 <rb_free>
   15e3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e40:	bl	15690 <rb_free>
   15e44:	b	15e8c <rb_event_run+0x200>
   15e48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15e4c:	ldr	r2, [r3, #28]
   15e50:	ldr	r3, [pc, #164]	; 15efc <rb_event_run+0x270>
   15e54:	add	r3, pc, r3
   15e58:	ldr	r3, [r3]
   15e5c:	cmp	r2, r3
   15e60:	blt	15e78 <rb_event_run+0x1ec>
   15e64:	ldr	r3, [pc, #148]	; 15f00 <rb_event_run+0x274>
   15e68:	add	r3, pc, r3
   15e6c:	ldr	r3, [r3]
   15e70:	cmn	r3, #1
   15e74:	bne	15e8c <rb_event_run+0x200>
   15e78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15e7c:	ldr	r2, [r3, #28]
   15e80:	ldr	r3, [pc, #124]	; 15f04 <rb_event_run+0x278>
   15e84:	add	r3, pc, r3
   15e88:	str	r2, [r3]
   15e8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15e90:	str	r3, [fp, #-16]
   15e94:	ldr	r3, [fp, #-16]
   15e98:	cmp	r3, #0
   15e9c:	beq	15eac <rb_event_run+0x220>
   15ea0:	ldr	r3, [fp, #-16]
   15ea4:	ldr	r3, [r3, #8]
   15ea8:	b	15eb0 <rb_event_run+0x224>
   15eac:	mov	r3, #0
   15eb0:	str	r3, [fp, #-20]	; 0xffffffec
   15eb4:	ldr	r3, [fp, #-16]
   15eb8:	cmp	r3, #0
   15ebc:	bne	15cf4 <rb_event_run+0x68>
   15ec0:	b	15ec8 <rb_event_run+0x23c>
   15ec4:	nop	{0}
   15ec8:	sub	sp, fp, #8
   15ecc:	ldr	r4, [sp]
   15ed0:	ldr	fp, [sp, #4]
   15ed4:	add	sp, sp, #8
   15ed8:	pop	{pc}		; (ldr pc, [sp], #4)
   15edc:	.word	0x0001fbf4
   15ee0:	.word	0x00032654
   15ee4:	.word	0x00032600
   15ee8:	.word	0x00032584
   15eec:	.word	0x0001fad0
   15ef0:	.word	0x0001fabc
   15ef4:	.word	0x0001faa0
   15ef8:	.word	0x000324fc
   15efc:	.word	0x0001fa54
   15f00:	.word	0x0001fa40
   15f04:	.word	0x0001fa24

00015f08 <rb_event_io_register_all>:
   15f08:	str	fp, [sp, #-8]!
   15f0c:	str	lr, [sp, #4]
   15f10:	add	fp, sp, #4
   15f14:	sub	sp, sp, #8
   15f18:	bl	12ea4 <rb_io_supports_event>
   15f1c:	mov	r3, r0
   15f20:	cmp	r3, #0
   15f24:	beq	15f78 <rb_event_io_register_all+0x70>
   15f28:	ldr	r3, [pc, #92]	; 15f8c <rb_event_io_register_all+0x84>
   15f2c:	add	r3, pc, r3
   15f30:	ldr	r3, [r3]
   15f34:	str	r3, [fp, #-8]
   15f38:	b	15f68 <rb_event_io_register_all+0x60>
   15f3c:	ldr	r3, [fp, #-8]
   15f40:	ldr	r3, [r3]
   15f44:	str	r3, [fp, #-12]
   15f48:	ldr	r3, [fp, #-12]
   15f4c:	ldr	r3, [r3, #32]
   15f50:	mov	r1, r3
   15f54:	ldr	r0, [fp, #-12]
   15f58:	bl	12d54 <rb_io_sched_event>
   15f5c:	ldr	r3, [fp, #-8]
   15f60:	ldr	r3, [r3, #8]
   15f64:	str	r3, [fp, #-8]
   15f68:	ldr	r3, [fp, #-8]
   15f6c:	cmp	r3, #0
   15f70:	bne	15f3c <rb_event_io_register_all+0x34>
   15f74:	b	15f7c <rb_event_io_register_all+0x74>
   15f78:	nop	{0}
   15f7c:	sub	sp, fp, #4
   15f80:	ldr	fp, [sp]
   15f84:	add	sp, sp, #4
   15f88:	pop	{pc}		; (ldr pc, [sp], #4)
   15f8c:	.word	0x000323ec

00015f90 <rb_event_init>:
   15f90:	str	fp, [sp, #-8]!
   15f94:	str	lr, [sp, #4]
   15f98:	add	fp, sp, #4
   15f9c:	mov	r2, #33	; 0x21
   15fa0:	ldr	r3, [pc, #40]	; 15fd0 <rb_event_init+0x40>
   15fa4:	add	r3, pc, r3
   15fa8:	mov	r1, r3
   15fac:	ldr	r3, [pc, #32]	; 15fd4 <rb_event_init+0x44>
   15fb0:	add	r3, pc, r3
   15fb4:	mov	r0, r3
   15fb8:	bl	46c0 <rb_strlcpy@plt>
   15fbc:	nop	{0}
   15fc0:	sub	sp, fp, #4
   15fc4:	ldr	fp, [sp]
   15fc8:	add	sp, sp, #4
   15fcc:	pop	{pc}		; (ldr pc, [sp], #4)
   15fd0:	.word	0x0000e314
   15fd4:	.word	0x00032344

00015fd8 <rb_dump_events>:
   15fd8:	strd	r4, [sp, #-20]!	; 0xffffffec
   15fdc:	str	r6, [sp, #8]
   15fe0:	str	fp, [sp, #12]
   15fe4:	str	lr, [sp, #16]
   15fe8:	add	fp, sp, #16
   15fec:	sub	sp, sp, #548	; 0x224
   15ff0:	str	r0, [fp, #-552]	; 0xfffffdd8
   15ff4:	str	r1, [fp, #-556]	; 0xfffffdd4
   15ff8:	mov	r3, #512	; 0x200
   15ffc:	str	r3, [fp, #-28]	; 0xffffffe4
   16000:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16004:	sub	r0, fp, #544	; 0x220
   16008:	ldr	r3, [pc, #252]	; 1610c <rb_dump_events+0x134>
   1600c:	add	r3, pc, r3
   16010:	ldr	r2, [pc, #248]	; 16110 <rb_dump_events+0x138>
   16014:	add	r2, pc, r2
   16018:	bl	4bdc <snprintf@plt>
   1601c:	sub	r2, fp, #544	; 0x220
   16020:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   16024:	ldr	r1, [fp, #-556]	; 0xfffffdd4
   16028:	mov	r0, r2
   1602c:	blx	r3
   16030:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16034:	sub	r3, fp, #544	; 0x220
   16038:	ldr	r1, [pc, #212]	; 16114 <rb_dump_events+0x13c>
   1603c:	add	r1, pc, r1
   16040:	mov	r0, r3
   16044:	bl	46c0 <rb_strlcpy@plt>
   16048:	sub	r2, fp, #544	; 0x220
   1604c:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   16050:	ldr	r1, [fp, #-556]	; 0xfffffdd4
   16054:	mov	r0, r2
   16058:	blx	r3
   1605c:	ldr	r3, [pc, #180]	; 16118 <rb_dump_events+0x140>
   16060:	add	r3, pc, r3
   16064:	ldr	r3, [r3]
   16068:	str	r3, [fp, #-24]	; 0xffffffe8
   1606c:	b	160e4 <rb_dump_events+0x10c>
   16070:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16074:	ldr	r3, [r3]
   16078:	str	r3, [fp, #-32]	; 0xffffffe0
   1607c:	ldr	r5, [fp, #-28]	; 0xffffffe4
   16080:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16084:	ldr	r6, [r3, #20]
   16088:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1608c:	ldr	r4, [r3, #28]
   16090:	bl	481c <rb_current_time@plt>
   16094:	mov	r3, r0
   16098:	sub	r3, r4, r3
   1609c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   160a0:	ldr	r2, [r2, #24]
   160a4:	sub	r0, fp, #544	; 0x220
   160a8:	str	r2, [sp, #4]
   160ac:	str	r3, [sp]
   160b0:	mov	r3, r6
   160b4:	ldr	r2, [pc, #96]	; 1611c <rb_dump_events+0x144>
   160b8:	add	r2, pc, r2
   160bc:	mov	r1, r5
   160c0:	bl	4bdc <snprintf@plt>
   160c4:	sub	r2, fp, #544	; 0x220
   160c8:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   160cc:	ldr	r1, [fp, #-556]	; 0xfffffdd4
   160d0:	mov	r0, r2
   160d4:	blx	r3
   160d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   160dc:	ldr	r3, [r3, #8]
   160e0:	str	r3, [fp, #-24]	; 0xffffffe8
   160e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   160e8:	cmp	r3, #0
   160ec:	bne	16070 <rb_dump_events+0x98>
   160f0:	nop	{0}
   160f4:	sub	sp, fp, #16
   160f8:	ldrd	r4, [sp]
   160fc:	ldr	r6, [sp, #8]
   16100:	ldr	fp, [sp, #12]
   16104:	add	sp, sp, #16
   16108:	pop	{pc}		; (ldr pc, [sp], #4)
   1610c:	.word	0x000322e8
   16110:	.word	0x0000e2ac
   16114:	.word	0x0000e29c
   16118:	.word	0x000322b8
   1611c:	.word	0x0000e24c

00016120 <rb_set_back_events>:
   16120:	push	{fp}		; (str fp, [sp, #-4]!)
   16124:	add	fp, sp, #0
   16128:	sub	sp, sp, #20
   1612c:	str	r0, [fp, #-16]
   16130:	ldr	r3, [pc, #124]	; 161b4 <rb_set_back_events+0x94>
   16134:	add	r3, pc, r3
   16138:	ldr	r3, [r3]
   1613c:	str	r3, [fp, #-8]
   16140:	b	16198 <rb_set_back_events+0x78>
   16144:	ldr	r3, [fp, #-8]
   16148:	ldr	r3, [r3]
   1614c:	str	r3, [fp, #-12]
   16150:	ldr	r3, [fp, #-12]
   16154:	ldr	r3, [r3, #28]
   16158:	ldr	r2, [fp, #-16]
   1615c:	cmp	r2, r3
   16160:	bge	16180 <rb_set_back_events+0x60>
   16164:	ldr	r3, [fp, #-12]
   16168:	ldr	r2, [r3, #28]
   1616c:	ldr	r3, [fp, #-16]
   16170:	sub	r2, r2, r3
   16174:	ldr	r3, [fp, #-12]
   16178:	str	r2, [r3, #28]
   1617c:	b	1618c <rb_set_back_events+0x6c>
   16180:	ldr	r3, [fp, #-12]
   16184:	mov	r2, #0
   16188:	str	r2, [r3, #28]
   1618c:	ldr	r3, [fp, #-8]
   16190:	ldr	r3, [r3, #8]
   16194:	str	r3, [fp, #-8]
   16198:	ldr	r3, [fp, #-8]
   1619c:	cmp	r3, #0
   161a0:	bne	16144 <rb_set_back_events+0x24>
   161a4:	nop	{0}
   161a8:	add	sp, fp, #0
   161ac:	pop	{fp}		; (ldr fp, [sp], #4)
   161b0:	bx	lr
   161b4:	.word	0x000321e4

000161b8 <rb_event_update>:
   161b8:	str	fp, [sp, #-8]!
   161bc:	str	lr, [sp, #4]
   161c0:	add	fp, sp, #4
   161c4:	sub	sp, sp, #16
   161c8:	str	r0, [fp, #-16]
   161cc:	str	r1, [fp, #-20]	; 0xffffffec
   161d0:	ldr	r3, [fp, #-16]
   161d4:	cmp	r3, #0
   161d8:	beq	16234 <rb_event_update+0x7c>
   161dc:	ldr	r3, [fp, #-16]
   161e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   161e4:	str	r2, [r3, #24]
   161e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   161ec:	bl	15a50 <rb_event_frequency>
   161f0:	str	r0, [fp, #-8]
   161f4:	bl	481c <rb_current_time@plt>
   161f8:	mov	r2, r0
   161fc:	ldr	r3, [fp, #-8]
   16200:	add	r2, r2, r3
   16204:	ldr	r3, [fp, #-16]
   16208:	ldr	r3, [r3, #28]
   1620c:	cmp	r2, r3
   16210:	bge	1623c <rb_event_update+0x84>
   16214:	bl	481c <rb_current_time@plt>
   16218:	mov	r2, r0
   1621c:	ldr	r3, [fp, #-8]
   16220:	add	r2, r2, r3
   16224:	ldr	r3, [fp, #-16]
   16228:	str	r2, [r3, #28]
   1622c:	nop	{0}
   16230:	b	1623c <rb_event_update+0x84>
   16234:	nop	{0}
   16238:	b	16240 <rb_event_update+0x88>
   1623c:	nop	{0}
   16240:	sub	sp, fp, #4
   16244:	ldr	fp, [sp]
   16248:	add	sp, sp, #4
   1624c:	pop	{pc}		; (ldr pc, [sp], #4)

00016250 <rb_event_next>:
   16250:	push	{fp}		; (str fp, [sp, #-4]!)
   16254:	add	fp, sp, #0
   16258:	ldr	r3, [pc, #20]	; 16274 <rb_event_next+0x24>
   1625c:	add	r3, pc, r3
   16260:	ldr	r3, [r3]
   16264:	mov	r0, r3
   16268:	add	sp, fp, #0
   1626c:	pop	{fp}		; (ldr fp, [sp], #4)
   16270:	bx	lr
   16274:	.word	0x0001f64c

00016278 <rb_malloc>:
   16278:	str	fp, [sp, #-8]!
   1627c:	str	lr, [sp, #4]
   16280:	add	fp, sp, #4
   16284:	sub	sp, sp, #16
   16288:	str	r0, [fp, #-16]
   1628c:	ldr	r1, [fp, #-16]
   16290:	mov	r0, #1
   16294:	bl	460c <calloc@plt>
   16298:	mov	r3, r0
   1629c:	str	r3, [fp, #-8]
   162a0:	ldr	r3, [fp, #-8]
   162a4:	cmp	r3, #0
   162a8:	moveq	r3, #1
   162ac:	movne	r3, #0
   162b0:	uxtb	r3, r3
   162b4:	cmp	r3, #0
   162b8:	beq	162c0 <rb_malloc+0x48>
   162bc:	bl	49a8 <rb_outofmemory@plt>
   162c0:	ldr	r3, [fp, #-8]
   162c4:	mov	r0, r3
   162c8:	sub	sp, fp, #4
   162cc:	ldr	fp, [sp]
   162d0:	add	sp, sp, #4
   162d4:	pop	{pc}		; (ldr pc, [sp], #4)

000162d8 <rb_ctime>:
   162d8:	str	r4, [sp, #-12]!
   162dc:	str	fp, [sp, #4]
   162e0:	str	lr, [sp, #8]
   162e4:	add	fp, sp, #8
   162e8:	sub	sp, sp, #100	; 0x64
   162ec:	str	r0, [fp, #-72]	; 0xffffffb8
   162f0:	str	r1, [fp, #-76]	; 0xffffffb4
   162f4:	str	r2, [fp, #-80]	; 0xffffffb0
   162f8:	sub	r2, fp, #68	; 0x44
   162fc:	sub	r3, fp, #72	; 0x48
   16300:	mov	r1, r2
   16304:	mov	r0, r3
   16308:	bl	4a14 <gmtime_r@plt>
   1630c:	str	r0, [fp, #-24]	; 0xffffffe8
   16310:	ldr	r3, [fp, #-76]	; 0xffffffb4
   16314:	cmp	r3, #0
   16318:	bne	16334 <rb_ctime+0x5c>
   1631c:	ldr	r3, [pc, #256]	; 16424 <rb_ctime+0x14c>
   16320:	add	r3, pc, r3
   16324:	str	r3, [fp, #-16]
   16328:	mov	r3, #128	; 0x80
   1632c:	str	r3, [fp, #-20]	; 0xffffffec
   16330:	b	16344 <rb_ctime+0x6c>
   16334:	ldr	r3, [fp, #-76]	; 0xffffffb4
   16338:	str	r3, [fp, #-16]
   1633c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16340:	str	r3, [fp, #-20]	; 0xffffffec
   16344:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16348:	cmp	r3, #0
   1634c:	moveq	r3, #1
   16350:	movne	r3, #0
   16354:	uxtb	r3, r3
   16358:	cmp	r3, #0
   1635c:	beq	16380 <rb_ctime+0xa8>
   16360:	ldr	r2, [fp, #-20]	; 0xffffffec
   16364:	ldr	r3, [pc, #188]	; 16428 <rb_ctime+0x150>
   16368:	add	r3, pc, r3
   1636c:	mov	r1, r3
   16370:	ldr	r0, [fp, #-16]
   16374:	bl	46c0 <rb_strlcpy@plt>
   16378:	ldr	r3, [fp, #-16]
   1637c:	b	1640c <rb_ctime+0x134>
   16380:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16384:	ldr	r2, [r3, #24]
   16388:	ldr	r3, [pc, #156]	; 1642c <rb_ctime+0x154>
   1638c:	add	r3, pc, r3
   16390:	ldr	r4, [r3, r2, lsl #2]
   16394:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16398:	ldr	r2, [r3, #16]
   1639c:	ldr	r3, [pc, #140]	; 16430 <rb_ctime+0x158>
   163a0:	add	r3, pc, r3
   163a4:	ldr	r2, [r3, r2, lsl #2]
   163a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   163ac:	ldr	r1, [r3, #12]
   163b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   163b4:	ldr	r0, [r3, #8]
   163b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   163bc:	ldr	ip, [r3, #4]
   163c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   163c4:	ldr	lr, [r3]
   163c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   163cc:	ldr	r3, [r3, #20]
   163d0:	add	r3, r3, #1888	; 0x760
   163d4:	add	r3, r3, #12
   163d8:	str	r3, [sp, #20]
   163dc:	str	lr, [sp, #16]
   163e0:	str	ip, [sp, #12]
   163e4:	str	r0, [sp, #8]
   163e8:	str	r1, [sp, #4]
   163ec:	str	r2, [sp]
   163f0:	mov	r3, r4
   163f4:	ldr	r2, [pc, #56]	; 16434 <rb_ctime+0x15c>
   163f8:	add	r2, pc, r2
   163fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   16400:	ldr	r0, [fp, #-16]
   16404:	bl	4bdc <snprintf@plt>
   16408:	ldr	r3, [fp, #-16]
   1640c:	mov	r0, r3
   16410:	sub	sp, fp, #8
   16414:	ldr	r4, [sp]
   16418:	ldr	fp, [sp, #4]
   1641c:	add	sp, sp, #8
   16420:	pop	{pc}		; (ldr pc, [sp], #4)
   16424:	.word	0x00032218
   16428:	.word	0x0000e0b8
   1642c:	.word	0x0001f59c
   16430:	.word	0x0001f558
   16434:	.word	0x0000e02c

00016438 <rb_date>:
   16438:	str	r4, [sp, #-12]!
   1643c:	str	fp, [sp, #4]
   16440:	str	lr, [sp, #8]
   16444:	add	fp, sp, #8
   16448:	sub	sp, sp, #92	; 0x5c
   1644c:	str	r0, [fp, #-64]	; 0xffffffc0
   16450:	str	r1, [fp, #-68]	; 0xffffffbc
   16454:	str	r2, [fp, #-72]	; 0xffffffb8
   16458:	sub	r2, fp, #60	; 0x3c
   1645c:	sub	r3, fp, #64	; 0x40
   16460:	mov	r1, r2
   16464:	mov	r0, r3
   16468:	bl	4a14 <gmtime_r@plt>
   1646c:	str	r0, [fp, #-16]
   16470:	ldr	r3, [fp, #-16]
   16474:	cmp	r3, #0
   16478:	moveq	r3, #1
   1647c:	movne	r3, #0
   16480:	uxtb	r3, r3
   16484:	cmp	r3, #0
   16488:	beq	164ac <rb_date+0x74>
   1648c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16490:	ldr	r3, [pc, #184]	; 16550 <rb_date+0x118>
   16494:	add	r3, pc, r3
   16498:	mov	r1, r3
   1649c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   164a0:	bl	46c0 <rb_strlcpy@plt>
   164a4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   164a8:	b	16538 <rb_date+0x100>
   164ac:	ldr	r3, [fp, #-16]
   164b0:	ldr	r2, [r3, #24]
   164b4:	ldr	r3, [pc, #152]	; 16554 <rb_date+0x11c>
   164b8:	add	r3, pc, r3
   164bc:	ldr	r4, [r3, r2, lsl #2]
   164c0:	ldr	r3, [fp, #-16]
   164c4:	ldr	r2, [r3, #16]
   164c8:	ldr	r3, [pc, #136]	; 16558 <rb_date+0x120>
   164cc:	add	r3, pc, r3
   164d0:	ldr	r2, [r3, r2, lsl #2]
   164d4:	ldr	r3, [fp, #-16]
   164d8:	ldr	r1, [r3, #12]
   164dc:	ldr	r3, [fp, #-16]
   164e0:	ldr	r3, [r3, #20]
   164e4:	add	r3, r3, #1888	; 0x760
   164e8:	add	r3, r3, #12
   164ec:	ldr	r0, [fp, #-16]
   164f0:	ldr	r0, [r0, #8]
   164f4:	ldr	ip, [fp, #-16]
   164f8:	ldr	ip, [ip, #4]
   164fc:	ldr	lr, [fp, #-16]
   16500:	ldr	lr, [lr]
   16504:	str	lr, [sp, #20]
   16508:	str	ip, [sp, #16]
   1650c:	str	r0, [sp, #12]
   16510:	str	r3, [sp, #8]
   16514:	str	r1, [sp, #4]
   16518:	str	r2, [sp]
   1651c:	mov	r3, r4
   16520:	ldr	r2, [pc, #52]	; 1655c <rb_date+0x124>
   16524:	add	r2, pc, r2
   16528:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1652c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16530:	bl	4bdc <snprintf@plt>
   16534:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16538:	mov	r0, r3
   1653c:	sub	sp, fp, #8
   16540:	ldr	r4, [sp]
   16544:	ldr	fp, [sp, #4]
   16548:	add	sp, sp, #8
   1654c:	pop	{pc}		; (ldr pc, [sp], #4)
   16550:	.word	0x0000df8c
   16554:	.word	0x0001f424
   16558:	.word	0x0001f3e0
   1655c:	.word	0x0000df1c

00016560 <rb_current_time>:
   16560:	push	{fp}		; (str fp, [sp, #-4]!)
   16564:	add	fp, sp, #0
   16568:	ldr	r3, [pc, #20]	; 16584 <rb_current_time+0x24>
   1656c:	add	r3, pc, r3
   16570:	ldr	r3, [r3]
   16574:	mov	r0, r3
   16578:	add	sp, fp, #0
   1657c:	pop	{fp}		; (ldr fp, [sp], #4)
   16580:	bx	lr
   16584:	.word	0x00031dc4

00016588 <rb_current_time_tv>:
   16588:	push	{fp}		; (str fp, [sp, #-4]!)
   1658c:	add	fp, sp, #0
   16590:	ldr	r3, [pc, #16]	; 165a8 <rb_current_time_tv+0x20>
   16594:	add	r3, pc, r3
   16598:	mov	r0, r3
   1659c:	add	sp, fp, #0
   165a0:	pop	{fp}		; (ldr fp, [sp], #4)
   165a4:	bx	lr
   165a8:	.word	0x00031d9c

000165ac <rb_lib_log>:
   165ac:	push	{r0, r1, r2, r3}
   165b0:	str	fp, [sp, #-8]!
   165b4:	str	lr, [sp, #4]
   165b8:	add	fp, sp, #4
   165bc:	sub	sp, sp, #8
   165c0:	ldr	r3, [pc, #104]	; 16630 <rb_lib_log+0x84>
   165c4:	add	r3, pc, r3
   165c8:	ldr	r3, [r3]
   165cc:	cmp	r3, #0
   165d0:	beq	16614 <rb_lib_log+0x68>
   165d4:	add	r3, fp, #8
   165d8:	str	r3, [fp, #-8]
   165dc:	ldr	r3, [fp, #-8]
   165e0:	ldr	r2, [fp, #4]
   165e4:	mov	r1, #512	; 0x200
   165e8:	ldr	r0, [pc, #68]	; 16634 <rb_lib_log+0x88>
   165ec:	add	r0, pc, r0
   165f0:	bl	457c <vsnprintf@plt>
   165f4:	ldr	r3, [pc, #60]	; 16638 <rb_lib_log+0x8c>
   165f8:	add	r3, pc, r3
   165fc:	ldr	r3, [r3]
   16600:	ldr	r2, [pc, #52]	; 1663c <rb_lib_log+0x90>
   16604:	add	r2, pc, r2
   16608:	mov	r0, r2
   1660c:	blx	r3
   16610:	b	16618 <rb_lib_log+0x6c>
   16614:	nop	{0}
   16618:	sub	sp, fp, #4
   1661c:	ldr	fp, [sp]
   16620:	ldr	lr, [sp, #4]
   16624:	add	sp, sp, #8
   16628:	add	sp, sp, #16
   1662c:	bx	lr
   16630:	.word	0x00031d60
   16634:	.word	0x00031d4c
   16638:	.word	0x00031d2c
   1663c:	.word	0x00031d34

00016640 <rb_lib_die>:
   16640:	push	{r0, r1, r2, r3}
   16644:	str	fp, [sp, #-8]!
   16648:	str	lr, [sp, #4]
   1664c:	add	fp, sp, #4
   16650:	sub	sp, sp, #8
   16654:	ldr	r3, [pc, #104]	; 166c4 <rb_lib_die+0x84>
   16658:	add	r3, pc, r3
   1665c:	ldr	r3, [r3]
   16660:	cmp	r3, #0
   16664:	bne	1666c <rb_lib_die+0x2c>
   16668:	bl	43e4 <abort@plt>
   1666c:	add	r3, fp, #8
   16670:	str	r3, [fp, #-8]
   16674:	ldr	r3, [fp, #-8]
   16678:	ldr	r2, [fp, #4]
   1667c:	mov	r1, #512	; 0x200
   16680:	ldr	r0, [pc, #64]	; 166c8 <rb_lib_die+0x88>
   16684:	add	r0, pc, r0
   16688:	bl	457c <vsnprintf@plt>
   1668c:	ldr	r3, [pc, #56]	; 166cc <rb_lib_die+0x8c>
   16690:	add	r3, pc, r3
   16694:	ldr	r3, [r3]
   16698:	ldr	r2, [pc, #48]	; 166d0 <rb_lib_die+0x90>
   1669c:	add	r2, pc, r2
   166a0:	mov	r0, r2
   166a4:	blx	r3
   166a8:	nop	{0}
   166ac:	sub	sp, fp, #4
   166b0:	ldr	fp, [sp]
   166b4:	ldr	lr, [sp, #4]
   166b8:	add	sp, sp, #8
   166bc:	add	sp, sp, #16
   166c0:	bx	lr
   166c4:	.word	0x00031cd4
   166c8:	.word	0x00031cb4
   166cc:	.word	0x00031c9c
   166d0:	.word	0x00031c9c

000166d4 <rb_lib_restart>:
   166d4:	push	{r0, r1, r2, r3}
   166d8:	str	fp, [sp, #-8]!
   166dc:	str	lr, [sp, #4]
   166e0:	add	fp, sp, #4
   166e4:	sub	sp, sp, #8
   166e8:	ldr	r3, [pc, #80]	; 16740 <rb_lib_restart+0x6c>
   166ec:	add	r3, pc, r3
   166f0:	ldr	r3, [r3]
   166f4:	cmp	r3, #0
   166f8:	bne	16700 <rb_lib_restart+0x2c>
   166fc:	bl	43e4 <abort@plt>
   16700:	add	r3, fp, #8
   16704:	str	r3, [fp, #-8]
   16708:	ldr	r3, [fp, #-8]
   1670c:	ldr	r2, [fp, #4]
   16710:	mov	r1, #512	; 0x200
   16714:	ldr	r0, [pc, #40]	; 16744 <rb_lib_restart+0x70>
   16718:	add	r0, pc, r0
   1671c:	bl	457c <vsnprintf@plt>
   16720:	ldr	r3, [pc, #32]	; 16748 <rb_lib_restart+0x74>
   16724:	add	r3, pc, r3
   16728:	ldr	r3, [r3]
   1672c:	ldr	r2, [pc, #24]	; 1674c <rb_lib_restart+0x78>
   16730:	add	r2, pc, r2
   16734:	mov	r0, r2
   16738:	blx	r3
   1673c:	bl	43e4 <abort@plt>
   16740:	.word	0x00031c3c
   16744:	.word	0x00031c20
   16748:	.word	0x00031c04
   1674c:	.word	0x00031c08

00016750 <rb_set_time>:
   16750:	str	fp, [sp, #-8]!
   16754:	str	lr, [sp, #4]
   16758:	add	fp, sp, #4
   1675c:	sub	sp, sp, #8
   16760:	sub	r3, fp, #12
   16764:	mov	r1, #0
   16768:	mov	r0, r3
   1676c:	bl	45dc <rb_gettimeofday@plt>
   16770:	mov	r3, r0
   16774:	cmn	r3, #1
   16778:	moveq	r3, #1
   1677c:	movne	r3, #0
   16780:	uxtb	r3, r3
   16784:	cmp	r3, #0
   16788:	beq	167c8 <rb_set_time+0x78>
   1678c:	bl	4d20 <__errno_location@plt>
   16790:	mov	r3, r0
   16794:	ldr	r3, [r3]
   16798:	mov	r0, r3
   1679c:	bl	43c0 <strerror@plt>
   167a0:	mov	r3, r0
   167a4:	mov	r1, r3
   167a8:	ldr	r3, [pc, #120]	; 16828 <rb_set_time+0xd8>
   167ac:	add	r3, pc, r3
   167b0:	mov	r0, r3
   167b4:	bl	493c <rb_lib_log@plt>
   167b8:	ldr	r3, [pc, #108]	; 1682c <rb_set_time+0xdc>
   167bc:	add	r3, pc, r3
   167c0:	mov	r0, r3
   167c4:	bl	4a80 <rb_lib_restart@plt>
   167c8:	ldr	r2, [fp, #-12]
   167cc:	ldr	r3, [pc, #92]	; 16830 <rb_set_time+0xe0>
   167d0:	add	r3, pc, r3
   167d4:	ldr	r3, [r3]
   167d8:	cmp	r2, r3
   167dc:	bge	167fc <rb_set_time+0xac>
   167e0:	ldr	r3, [pc, #76]	; 16834 <rb_set_time+0xe4>
   167e4:	add	r3, pc, r3
   167e8:	ldr	r2, [r3]
   167ec:	ldr	r3, [fp, #-12]
   167f0:	sub	r3, r2, r3
   167f4:	mov	r0, r3
   167f8:	bl	16120 <rb_set_back_events>
   167fc:	ldr	r3, [pc, #52]	; 16838 <rb_set_time+0xe8>
   16800:	add	r3, pc, r3
   16804:	mov	r1, r3
   16808:	sub	r3, fp, #12
   1680c:	ldrd	r2, [r3]
   16810:	strd	r2, [r1]
   16814:	nop	{0}
   16818:	sub	sp, fp, #4
   1681c:	ldr	fp, [sp]
   16820:	add	sp, sp, #4
   16824:	pop	{pc}		; (ldr pc, [sp], #4)
   16828:	.word	0x0000dcbc
   1682c:	.word	0x0000dcc0
   16830:	.word	0x00031b60
   16834:	.word	0x00031b4c
   16838:	.word	0x00031b30

0001683c <rb_lib_version>:
   1683c:	str	r4, [sp, #-12]!
   16840:	str	fp, [sp, #4]
   16844:	str	lr, [sp, #8]
   16848:	add	fp, sp, #8
   1684c:	sub	sp, sp, #524	; 0x20c
   16850:	ldr	r4, [pc, #96]	; 168b8 <rb_lib_version+0x7c>
   16854:	add	r4, pc, r4
   16858:	sub	r3, fp, #524	; 0x20c
   1685c:	mov	r1, #512	; 0x200
   16860:	mov	r0, r3
   16864:	bl	14c38 <rb_get_ssl_info>
   16868:	ldr	r3, [pc, #76]	; 168bc <rb_lib_version+0x80>
   1686c:	ldr	r3, [r4, r3]
   16870:	ldr	r2, [r3]
   16874:	sub	r3, fp, #524	; 0x20c
   16878:	str	r3, [sp]
   1687c:	mov	r3, r2
   16880:	ldr	r2, [pc, #56]	; 168c0 <rb_lib_version+0x84>
   16884:	add	r2, pc, r2
   16888:	mov	r1, #640	; 0x280
   1688c:	ldr	r0, [pc, #48]	; 168c4 <rb_lib_version+0x88>
   16890:	add	r0, pc, r0
   16894:	bl	4bdc <snprintf@plt>
   16898:	ldr	r3, [pc, #40]	; 168c8 <rb_lib_version+0x8c>
   1689c:	add	r3, pc, r3
   168a0:	mov	r0, r3
   168a4:	sub	sp, fp, #8
   168a8:	ldr	r4, [sp]
   168ac:	ldr	fp, [sp, #4]
   168b0:	add	sp, sp, #8
   168b4:	pop	{pc}		; (ldr pc, [sp], #4)
   168b8:	.word	0x0001e7a4
   168bc:	.word	0x000003b0
   168c0:	.word	0x0000dc08
   168c4:	.word	0x00031d28
   168c8:	.word	0x00031d1c

000168cc <rb_lib_init>:
   168cc:	str	fp, [sp, #-8]!
   168d0:	str	lr, [sp, #4]
   168d4:	add	fp, sp, #4
   168d8:	sub	sp, sp, #16
   168dc:	str	r0, [fp, #-8]
   168e0:	str	r1, [fp, #-12]
   168e4:	str	r2, [fp, #-16]
   168e8:	str	r3, [fp, #-20]	; 0xffffffec
   168ec:	bl	49b4 <rb_set_time@plt>
   168f0:	ldr	r3, [pc, #116]	; 1696c <rb_lib_init+0xa0>
   168f4:	add	r3, pc, r3
   168f8:	ldr	r2, [fp, #-8]
   168fc:	str	r2, [r3]
   16900:	ldr	r3, [pc, #104]	; 16970 <rb_lib_init+0xa4>
   16904:	add	r3, pc, r3
   16908:	ldr	r2, [fp, #-12]
   1690c:	str	r2, [r3]
   16910:	ldr	r3, [pc, #92]	; 16974 <rb_lib_init+0xa8>
   16914:	add	r3, pc, r3
   16918:	ldr	r2, [fp, #-16]
   1691c:	str	r2, [r3]
   16920:	bl	4624 <rb_event_init@plt>
   16924:	bl	49fc <rb_init_bh@plt>
   16928:	ldr	r2, [fp, #12]
   1692c:	ldr	r1, [fp, #4]
   16930:	ldr	r0, [fp, #-20]	; 0xffffffec
   16934:	bl	4b1c <rb_fdlist_init@plt>
   16938:	bl	43a8 <rb_init_netio@plt>
   1693c:	ldr	r0, [fp, #8]
   16940:	bl	4900 <rb_init_rb_dlink_nodes@plt>
   16944:	bl	12ea4 <rb_io_supports_event>
   16948:	mov	r3, r0
   1694c:	cmp	r3, #0
   16950:	beq	16958 <rb_lib_init+0x8c>
   16954:	bl	12efc <rb_io_init_event>
   16958:	nop	{0}
   1695c:	sub	sp, fp, #4
   16960:	ldr	fp, [sp]
   16964:	add	sp, sp, #4
   16968:	pop	{pc}		; (ldr pc, [sp], #4)
   1696c:	.word	0x00031a30
   16970:	.word	0x00031a24
   16974:	.word	0x00031a18

00016978 <rb_lib_loop>:
   16978:	str	fp, [sp, #-8]!
   1697c:	str	lr, [sp, #4]
   16980:	add	fp, sp, #4
   16984:	sub	sp, sp, #16
   16988:	str	r0, [fp, #-16]
   1698c:	bl	49b4 <rb_set_time@plt>
   16990:	bl	12ea4 <rb_io_supports_event>
   16994:	mov	r3, r0
   16998:	cmp	r3, #0
   1699c:	beq	169ac <rb_lib_loop+0x34>
   169a0:	mvn	r0, #0
   169a4:	bl	4564 <rb_select@plt>
   169a8:	b	169a0 <rb_lib_loop+0x28>
   169ac:	ldr	r3, [fp, #-16]
   169b0:	cmp	r3, #0
   169b4:	bne	16a24 <rb_lib_loop+0xac>
   169b8:	bl	4c60 <rb_event_next@plt>
   169bc:	str	r0, [fp, #-8]
   169c0:	ldr	r3, [fp, #-8]
   169c4:	cmp	r3, #0
   169c8:	ble	16a0c <rb_lib_loop+0x94>
   169cc:	bl	481c <rb_current_time@plt>
   169d0:	mov	r2, r0
   169d4:	ldr	r3, [fp, #-8]
   169d8:	sub	r3, r3, r2
   169dc:	str	r3, [fp, #-8]
   169e0:	ldr	r3, [fp, #-8]
   169e4:	cmp	r3, #0
   169e8:	bgt	169f8 <rb_lib_loop+0x80>
   169ec:	mov	r3, #1000	; 0x3e8
   169f0:	str	r3, [fp, #-8]
   169f4:	b	16a14 <rb_lib_loop+0x9c>
   169f8:	ldr	r3, [fp, #-8]
   169fc:	mov	r2, #1000	; 0x3e8
   16a00:	mul	r3, r2, r3
   16a04:	str	r3, [fp, #-8]
   16a08:	b	16a14 <rb_lib_loop+0x9c>
   16a0c:	mvn	r3, #0
   16a10:	str	r3, [fp, #-8]
   16a14:	ldr	r3, [fp, #-8]
   16a18:	mov	r0, r3
   16a1c:	bl	4564 <rb_select@plt>
   16a20:	b	16a30 <rb_lib_loop+0xb8>
   16a24:	ldr	r3, [fp, #-16]
   16a28:	mov	r0, r3
   16a2c:	bl	4564 <rb_select@plt>
   16a30:	bl	49e4 <rb_event_run@plt>
   16a34:	b	169ac <rb_lib_loop+0x34>

00016a38 <rb_strtok_r>:
   16a38:	str	fp, [sp, #-8]!
   16a3c:	str	lr, [sp, #4]
   16a40:	add	fp, sp, #4
   16a44:	sub	sp, sp, #16
   16a48:	str	r0, [fp, #-8]
   16a4c:	str	r1, [fp, #-12]
   16a50:	str	r2, [fp, #-16]
   16a54:	ldr	r2, [fp, #-16]
   16a58:	ldr	r1, [fp, #-12]
   16a5c:	ldr	r0, [fp, #-8]
   16a60:	bl	4a74 <strtok_r@plt>
   16a64:	mov	r3, r0
   16a68:	mov	r0, r3
   16a6c:	sub	sp, fp, #4
   16a70:	ldr	fp, [sp]
   16a74:	add	sp, sp, #4
   16a78:	pop	{pc}		; (ldr pc, [sp], #4)

00016a7c <rb_base64_encode>:
   16a7c:	str	fp, [sp, #-8]!
   16a80:	str	lr, [sp, #4]
   16a84:	add	fp, sp, #4
   16a88:	sub	sp, sp, #24
   16a8c:	str	r0, [fp, #-24]	; 0xffffffe8
   16a90:	str	r1, [fp, #-28]	; 0xffffffe4
   16a94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16a98:	str	r3, [fp, #-8]
   16a9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16aa0:	cmn	r3, #2
   16aa4:	bge	16ab0 <rb_base64_encode+0x34>
   16aa8:	mov	r3, #0
   16aac:	b	16d34 <rb_base64_encode+0x2b8>
   16ab0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16ab4:	add	r2, r3, #2
   16ab8:	movw	r3, #21846	; 0x5556
   16abc:	movt	r3, #21845	; 0x5555
   16ac0:	smull	r3, r1, r3, r2
   16ac4:	asr	r3, r2, #31
   16ac8:	sub	r2, r1, r3
   16acc:	mov	r3, r2
   16ad0:	lsl	r3, r3, #2
   16ad4:	add	r3, r3, r2
   16ad8:	mov	r0, r3
   16adc:	bl	16278 <rb_malloc>
   16ae0:	str	r0, [fp, #-16]
   16ae4:	ldr	r3, [fp, #-16]
   16ae8:	str	r3, [fp, #-12]
   16aec:	b	16bf0 <rb_base64_encode+0x174>
   16af0:	ldr	r3, [fp, #-8]
   16af4:	ldrb	r3, [r3]
   16af8:	lsr	r3, r3, #2
   16afc:	uxtb	r3, r3
   16b00:	mov	r1, r3
   16b04:	ldr	r3, [fp, #-12]
   16b08:	add	r2, r3, #1
   16b0c:	str	r2, [fp, #-12]
   16b10:	ldr	r2, [pc, #560]	; 16d48 <rb_base64_encode+0x2cc>
   16b14:	add	r2, pc, r2
   16b18:	ldrb	r2, [r2, r1]
   16b1c:	strb	r2, [r3]
   16b20:	ldr	r3, [fp, #-8]
   16b24:	ldrb	r3, [r3]
   16b28:	lsl	r3, r3, #4
   16b2c:	and	r3, r3, #48	; 0x30
   16b30:	ldr	r2, [fp, #-8]
   16b34:	add	r2, r2, #1
   16b38:	ldrb	r2, [r2]
   16b3c:	lsr	r2, r2, #4
   16b40:	uxtb	r2, r2
   16b44:	add	r2, r3, r2
   16b48:	ldr	r3, [fp, #-12]
   16b4c:	add	r1, r3, #1
   16b50:	str	r1, [fp, #-12]
   16b54:	ldr	r1, [pc, #496]	; 16d4c <rb_base64_encode+0x2d0>
   16b58:	add	r1, pc, r1
   16b5c:	ldrb	r2, [r1, r2]
   16b60:	strb	r2, [r3]
   16b64:	ldr	r3, [fp, #-8]
   16b68:	add	r3, r3, #1
   16b6c:	ldrb	r3, [r3]
   16b70:	lsl	r3, r3, #2
   16b74:	and	r3, r3, #60	; 0x3c
   16b78:	ldr	r2, [fp, #-8]
   16b7c:	add	r2, r2, #2
   16b80:	ldrb	r2, [r2]
   16b84:	lsr	r2, r2, #6
   16b88:	uxtb	r2, r2
   16b8c:	add	r2, r3, r2
   16b90:	ldr	r3, [fp, #-12]
   16b94:	add	r1, r3, #1
   16b98:	str	r1, [fp, #-12]
   16b9c:	ldr	r1, [pc, #428]	; 16d50 <rb_base64_encode+0x2d4>
   16ba0:	add	r1, pc, r1
   16ba4:	ldrb	r2, [r1, r2]
   16ba8:	strb	r2, [r3]
   16bac:	ldr	r3, [fp, #-8]
   16bb0:	add	r3, r3, #2
   16bb4:	ldrb	r3, [r3]
   16bb8:	and	r2, r3, #63	; 0x3f
   16bbc:	ldr	r3, [fp, #-12]
   16bc0:	add	r1, r3, #1
   16bc4:	str	r1, [fp, #-12]
   16bc8:	ldr	r1, [pc, #388]	; 16d54 <rb_base64_encode+0x2d8>
   16bcc:	add	r1, pc, r1
   16bd0:	ldrb	r2, [r1, r2]
   16bd4:	strb	r2, [r3]
   16bd8:	ldr	r3, [fp, #-8]
   16bdc:	add	r3, r3, #3
   16be0:	str	r3, [fp, #-8]
   16be4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16be8:	sub	r3, r3, #3
   16bec:	str	r3, [fp, #-28]	; 0xffffffe4
   16bf0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16bf4:	cmp	r3, #2
   16bf8:	bgt	16af0 <rb_base64_encode+0x74>
   16bfc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16c00:	cmp	r3, #0
   16c04:	beq	16d24 <rb_base64_encode+0x2a8>
   16c08:	ldr	r3, [fp, #-8]
   16c0c:	ldrb	r3, [r3]
   16c10:	lsr	r3, r3, #2
   16c14:	uxtb	r3, r3
   16c18:	mov	r1, r3
   16c1c:	ldr	r3, [fp, #-12]
   16c20:	add	r2, r3, #1
   16c24:	str	r2, [fp, #-12]
   16c28:	ldr	r2, [pc, #296]	; 16d58 <rb_base64_encode+0x2dc>
   16c2c:	add	r2, pc, r2
   16c30:	ldrb	r2, [r2, r1]
   16c34:	strb	r2, [r3]
   16c38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16c3c:	cmp	r3, #1
   16c40:	ble	16cd0 <rb_base64_encode+0x254>
   16c44:	ldr	r3, [fp, #-8]
   16c48:	ldrb	r3, [r3]
   16c4c:	lsl	r3, r3, #4
   16c50:	and	r3, r3, #48	; 0x30
   16c54:	ldr	r2, [fp, #-8]
   16c58:	add	r2, r2, #1
   16c5c:	ldrb	r2, [r2]
   16c60:	lsr	r2, r2, #4
   16c64:	uxtb	r2, r2
   16c68:	add	r2, r3, r2
   16c6c:	ldr	r3, [fp, #-12]
   16c70:	add	r1, r3, #1
   16c74:	str	r1, [fp, #-12]
   16c78:	ldr	r1, [pc, #220]	; 16d5c <rb_base64_encode+0x2e0>
   16c7c:	add	r1, pc, r1
   16c80:	ldrb	r2, [r1, r2]
   16c84:	strb	r2, [r3]
   16c88:	ldr	r3, [fp, #-8]
   16c8c:	add	r3, r3, #1
   16c90:	ldrb	r3, [r3]
   16c94:	lsl	r3, r3, #2
   16c98:	and	r2, r3, #60	; 0x3c
   16c9c:	ldr	r3, [fp, #-12]
   16ca0:	add	r1, r3, #1
   16ca4:	str	r1, [fp, #-12]
   16ca8:	ldr	r1, [pc, #176]	; 16d60 <rb_base64_encode+0x2e4>
   16cac:	add	r1, pc, r1
   16cb0:	ldrb	r2, [r1, r2]
   16cb4:	strb	r2, [r3]
   16cb8:	ldr	r3, [fp, #-12]
   16cbc:	add	r2, r3, #1
   16cc0:	str	r2, [fp, #-12]
   16cc4:	mov	r2, #61	; 0x3d
   16cc8:	strb	r2, [r3]
   16ccc:	b	16d24 <rb_base64_encode+0x2a8>
   16cd0:	ldr	r3, [fp, #-8]
   16cd4:	ldrb	r3, [r3]
   16cd8:	lsl	r3, r3, #4
   16cdc:	and	r2, r3, #48	; 0x30
   16ce0:	ldr	r3, [fp, #-12]
   16ce4:	add	r1, r3, #1
   16ce8:	str	r1, [fp, #-12]
   16cec:	ldr	r1, [pc, #112]	; 16d64 <rb_base64_encode+0x2e8>
   16cf0:	add	r1, pc, r1
   16cf4:	ldrb	r2, [r1, r2]
   16cf8:	strb	r2, [r3]
   16cfc:	ldr	r3, [fp, #-12]
   16d00:	add	r2, r3, #1
   16d04:	str	r2, [fp, #-12]
   16d08:	mov	r2, #61	; 0x3d
   16d0c:	strb	r2, [r3]
   16d10:	ldr	r3, [fp, #-12]
   16d14:	add	r2, r3, #1
   16d18:	str	r2, [fp, #-12]
   16d1c:	mov	r2, #61	; 0x3d
   16d20:	strb	r2, [r3]
   16d24:	ldr	r3, [fp, #-12]
   16d28:	mov	r2, #0
   16d2c:	strb	r2, [r3]
   16d30:	ldr	r3, [fp, #-16]
   16d34:	mov	r0, r3
   16d38:	sub	sp, fp, #4
   16d3c:	ldr	fp, [sp]
   16d40:	add	sp, sp, #4
   16d44:	pop	{pc}		; (ldr pc, [sp], #4)
   16d48:	.word	0x0000d990
   16d4c:	.word	0x0000d94c
   16d50:	.word	0x0000d904
   16d54:	.word	0x0000d8d8
   16d58:	.word	0x0000d878
   16d5c:	.word	0x0000d828
   16d60:	.word	0x0000d7f8
   16d64:	.word	0x0000d7b4

00016d68 <rb_base64_decode>:
   16d68:	str	fp, [sp, #-8]!
   16d6c:	str	lr, [sp, #4]
   16d70:	add	fp, sp, #4
   16d74:	sub	sp, sp, #40	; 0x28
   16d78:	str	r0, [fp, #-32]	; 0xffffffe0
   16d7c:	str	r1, [fp, #-36]	; 0xffffffdc
   16d80:	str	r2, [fp, #-40]	; 0xffffffd8
   16d84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16d88:	str	r3, [fp, #-8]
   16d8c:	mov	r3, #0
   16d90:	str	r3, [fp, #-12]
   16d94:	mov	r3, #0
   16d98:	str	r3, [fp, #-16]
   16d9c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16da0:	add	r3, r3, #1
   16da4:	mov	r0, r3
   16da8:	bl	16278 <rb_malloc>
   16dac:	str	r0, [fp, #-24]	; 0xffffffe8
   16db0:	b	16f6c <rb_base64_decode+0x204>
   16db4:	mov	r3, #61	; 0x3d
   16db8:	mov	r2, r3
   16dbc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16dc0:	cmp	r3, r2
   16dc4:	beq	16fa4 <rb_base64_decode+0x23c>
   16dc8:	ldr	r2, [pc, #660]	; 17064 <rb_base64_decode+0x2fc>
   16dcc:	add	r2, pc, r2
   16dd0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16dd4:	lsl	r3, r3, #1
   16dd8:	add	r3, r2, r3
   16ddc:	ldrsh	r3, [r3]
   16de0:	str	r3, [fp, #-28]	; 0xffffffe4
   16de4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16de8:	cmp	r3, #0
   16dec:	bge	16df4 <rb_base64_decode+0x8c>
   16df0:	b	16f6c <rb_base64_decode+0x204>
   16df4:	ldr	r3, [fp, #-12]
   16df8:	rsbs	r2, r3, #0
   16dfc:	and	r3, r3, #3
   16e00:	and	r2, r2, #3
   16e04:	rsbpl	r3, r2, #0
   16e08:	cmp	r3, #3
   16e0c:	addls	pc, pc, r3, lsl #2
   16e10:	b	16f60 <rb_base64_decode+0x1f8>
   16e14:	b	16e24 <rb_base64_decode+0xbc>
   16e18:	b	16e48 <rb_base64_decode+0xe0>
   16e1c:	b	16eb0 <rb_base64_decode+0x148>
   16e20:	b	16f18 <rb_base64_decode+0x1b0>
   16e24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16e28:	uxtb	r2, r3
   16e2c:	ldr	r3, [fp, #-16]
   16e30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e34:	add	r3, r1, r3
   16e38:	lsl	r2, r2, #2
   16e3c:	uxtb	r2, r2
   16e40:	strb	r2, [r3]
   16e44:	b	16f60 <rb_base64_decode+0x1f8>
   16e48:	ldr	r3, [fp, #-16]
   16e4c:	add	r2, r3, #1
   16e50:	str	r2, [fp, #-16]
   16e54:	mov	r1, r3
   16e58:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16e5c:	add	r2, r2, r1
   16e60:	ldrb	r2, [r2]
   16e64:	sxtb	r1, r2
   16e68:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16e6c:	asr	r2, r2, #4
   16e70:	sxtb	r2, r2
   16e74:	orr	r2, r1, r2
   16e78:	sxtb	r2, r2
   16e7c:	mov	r1, r3
   16e80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16e84:	add	r3, r3, r1
   16e88:	uxtb	r2, r2
   16e8c:	strb	r2, [r3]
   16e90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16e94:	lsl	r1, r3, #4
   16e98:	ldr	r3, [fp, #-16]
   16e9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16ea0:	add	r3, r2, r3
   16ea4:	uxtb	r2, r1
   16ea8:	strb	r2, [r3]
   16eac:	b	16f60 <rb_base64_decode+0x1f8>
   16eb0:	ldr	r3, [fp, #-16]
   16eb4:	add	r2, r3, #1
   16eb8:	str	r2, [fp, #-16]
   16ebc:	mov	r1, r3
   16ec0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16ec4:	add	r2, r2, r1
   16ec8:	ldrb	r2, [r2]
   16ecc:	sxtb	r1, r2
   16ed0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16ed4:	asr	r2, r2, #2
   16ed8:	sxtb	r2, r2
   16edc:	orr	r2, r1, r2
   16ee0:	sxtb	r2, r2
   16ee4:	mov	r1, r3
   16ee8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16eec:	add	r3, r3, r1
   16ef0:	uxtb	r2, r2
   16ef4:	strb	r2, [r3]
   16ef8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16efc:	lsl	r1, r3, #6
   16f00:	ldr	r3, [fp, #-16]
   16f04:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16f08:	add	r3, r2, r3
   16f0c:	uxtb	r2, r1
   16f10:	strb	r2, [r3]
   16f14:	b	16f60 <rb_base64_decode+0x1f8>
   16f18:	ldr	r3, [fp, #-16]
   16f1c:	add	r2, r3, #1
   16f20:	str	r2, [fp, #-16]
   16f24:	mov	r1, r3
   16f28:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16f2c:	add	r2, r2, r1
   16f30:	ldrb	r2, [r2]
   16f34:	sxtb	r1, r2
   16f38:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16f3c:	sxtb	r2, r2
   16f40:	orr	r2, r1, r2
   16f44:	sxtb	r2, r2
   16f48:	mov	r1, r3
   16f4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16f50:	add	r3, r3, r1
   16f54:	uxtb	r2, r2
   16f58:	strb	r2, [r3]
   16f5c:	nop	{0}
   16f60:	ldr	r3, [fp, #-12]
   16f64:	add	r3, r3, #1
   16f68:	str	r3, [fp, #-12]
   16f6c:	ldr	r3, [fp, #-8]
   16f70:	add	r2, r3, #1
   16f74:	str	r2, [fp, #-8]
   16f78:	ldrb	r3, [r3]
   16f7c:	str	r3, [fp, #-28]	; 0xffffffe4
   16f80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16f84:	cmp	r3, #0
   16f88:	beq	16fa8 <rb_base64_decode+0x240>
   16f8c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16f90:	sub	r2, r3, #1
   16f94:	str	r2, [fp, #-36]	; 0xffffffdc
   16f98:	cmp	r3, #0
   16f9c:	bgt	16db4 <rb_base64_decode+0x4c>
   16fa0:	b	16fa8 <rb_base64_decode+0x240>
   16fa4:	nop	{0}
   16fa8:	ldr	r3, [fp, #-16]
   16fac:	str	r3, [fp, #-20]	; 0xffffffec
   16fb0:	mov	r3, #61	; 0x3d
   16fb4:	mov	r2, r3
   16fb8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16fbc:	cmp	r3, r2
   16fc0:	bne	1702c <rb_base64_decode+0x2c4>
   16fc4:	ldr	r3, [fp, #-12]
   16fc8:	rsbs	r2, r3, #0
   16fcc:	and	r3, r3, #3
   16fd0:	and	r2, r2, #3
   16fd4:	rsbpl	r3, r2, #0
   16fd8:	cmp	r3, #2
   16fdc:	beq	17000 <rb_base64_decode+0x298>
   16fe0:	cmp	r3, #3
   16fe4:	beq	1700c <rb_base64_decode+0x2a4>
   16fe8:	cmp	r3, #1
   16fec:	bne	1702c <rb_base64_decode+0x2c4>
   16ff0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ff4:	bl	4720 <free@plt>
   16ff8:	mov	r3, #0
   16ffc:	b	17050 <rb_base64_decode+0x2e8>
   17000:	ldr	r3, [fp, #-20]	; 0xffffffec
   17004:	add	r3, r3, #1
   17008:	str	r3, [fp, #-20]	; 0xffffffec
   1700c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17010:	add	r2, r3, #1
   17014:	str	r2, [fp, #-20]	; 0xffffffec
   17018:	mov	r2, r3
   1701c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17020:	add	r3, r3, r2
   17024:	mov	r2, #0
   17028:	strb	r2, [r3]
   1702c:	ldr	r3, [fp, #-16]
   17030:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17034:	add	r3, r2, r3
   17038:	mov	r2, #0
   1703c:	strb	r2, [r3]
   17040:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17044:	ldr	r2, [fp, #-16]
   17048:	str	r2, [r3]
   1704c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17050:	mov	r0, r3
   17054:	sub	sp, fp, #4
   17058:	ldr	fp, [sp]
   1705c:	add	sp, sp, #4
   17060:	pop	{pc}		; (ldr pc, [sp], #4)
   17064:	.word	0x0000d71c

00017068 <rb_outofmemory>:
   17068:	str	fp, [sp, #-8]!
   1706c:	str	lr, [sp, #4]
   17070:	add	fp, sp, #4
   17074:	ldr	r3, [pc, #64]	; 170bc <rb_outofmemory+0x54>
   17078:	add	r3, pc, r3
   1707c:	ldr	r3, [r3]
   17080:	cmp	r3, #0
   17084:	beq	1708c <rb_outofmemory+0x24>
   17088:	bl	43e4 <abort@plt>
   1708c:	ldr	r3, [pc, #44]	; 170c0 <rb_outofmemory+0x58>
   17090:	add	r3, pc, r3
   17094:	mov	r2, #1
   17098:	str	r2, [r3]
   1709c:	ldr	r3, [pc, #32]	; 170c4 <rb_outofmemory+0x5c>
   170a0:	add	r3, pc, r3
   170a4:	mov	r0, r3
   170a8:	bl	493c <rb_lib_log@plt>
   170ac:	ldr	r3, [pc, #20]	; 170c8 <rb_outofmemory+0x60>
   170b0:	add	r3, pc, r3
   170b4:	mov	r0, r3
   170b8:	bl	4a80 <rb_lib_restart@plt>
   170bc:	.word	0x000317c0
   170c0:	.word	0x000317a8
   170c4:	.word	0x0000d648
   170c8:	.word	0x0000d65c

000170cc <rb_dlinkAddTail>:
   170cc:	push	{fp}		; (str fp, [sp, #-4]!)
   170d0:	add	fp, sp, #0
   170d4:	sub	sp, sp, #20
   170d8:	str	r0, [fp, #-8]
   170dc:	str	r1, [fp, #-12]
   170e0:	str	r2, [fp, #-16]
   170e4:	ldr	r3, [fp, #-12]
   170e8:	ldr	r2, [fp, #-8]
   170ec:	str	r2, [r3]
   170f0:	ldr	r3, [fp, #-12]
   170f4:	mov	r2, #0
   170f8:	str	r2, [r3, #8]
   170fc:	ldr	r3, [fp, #-16]
   17100:	ldr	r2, [r3, #4]
   17104:	ldr	r3, [fp, #-12]
   17108:	str	r2, [r3, #4]
   1710c:	ldr	r3, [fp, #-16]
   17110:	ldr	r3, [r3, #4]
   17114:	cmp	r3, #0
   17118:	beq	17130 <rb_dlinkAddTail+0x64>
   1711c:	ldr	r3, [fp, #-16]
   17120:	ldr	r3, [r3, #4]
   17124:	ldr	r2, [fp, #-12]
   17128:	str	r2, [r3, #8]
   1712c:	b	1714c <rb_dlinkAddTail+0x80>
   17130:	ldr	r3, [fp, #-16]
   17134:	ldr	r3, [r3]
   17138:	cmp	r3, #0
   1713c:	bne	1714c <rb_dlinkAddTail+0x80>
   17140:	ldr	r3, [fp, #-16]
   17144:	ldr	r2, [fp, #-12]
   17148:	str	r2, [r3]
   1714c:	ldr	r3, [fp, #-16]
   17150:	ldr	r2, [fp, #-12]
   17154:	str	r2, [r3, #4]
   17158:	ldr	r3, [fp, #-16]
   1715c:	ldr	r3, [r3, #8]
   17160:	add	r2, r3, #1
   17164:	ldr	r3, [fp, #-16]
   17168:	str	r2, [r3, #8]
   1716c:	nop	{0}
   17170:	add	sp, fp, #0
   17174:	pop	{fp}		; (ldr fp, [sp], #4)
   17178:	bx	lr

0001717c <rb_dlinkDelete>:
   1717c:	push	{fp}		; (str fp, [sp, #-4]!)
   17180:	add	fp, sp, #0
   17184:	sub	sp, sp, #12
   17188:	str	r0, [fp, #-8]
   1718c:	str	r1, [fp, #-12]
   17190:	ldr	r3, [fp, #-8]
   17194:	ldr	r3, [r3, #8]
   17198:	cmp	r3, #0
   1719c:	beq	171b8 <rb_dlinkDelete+0x3c>
   171a0:	ldr	r3, [fp, #-8]
   171a4:	ldr	r3, [r3, #8]
   171a8:	ldr	r2, [fp, #-8]
   171ac:	ldr	r2, [r2, #4]
   171b0:	str	r2, [r3, #4]
   171b4:	b	171c8 <rb_dlinkDelete+0x4c>
   171b8:	ldr	r3, [fp, #-8]
   171bc:	ldr	r2, [r3, #4]
   171c0:	ldr	r3, [fp, #-12]
   171c4:	str	r2, [r3, #4]
   171c8:	ldr	r3, [fp, #-8]
   171cc:	ldr	r3, [r3, #4]
   171d0:	cmp	r3, #0
   171d4:	beq	171f0 <rb_dlinkDelete+0x74>
   171d8:	ldr	r3, [fp, #-8]
   171dc:	ldr	r3, [r3, #4]
   171e0:	ldr	r2, [fp, #-8]
   171e4:	ldr	r2, [r2, #8]
   171e8:	str	r2, [r3, #8]
   171ec:	b	17200 <rb_dlinkDelete+0x84>
   171f0:	ldr	r3, [fp, #-8]
   171f4:	ldr	r2, [r3, #8]
   171f8:	ldr	r3, [fp, #-12]
   171fc:	str	r2, [r3]
   17200:	ldr	r3, [fp, #-8]
   17204:	mov	r2, #0
   17208:	str	r2, [r3, #4]
   1720c:	ldr	r3, [fp, #-8]
   17210:	ldr	r2, [r3, #4]
   17214:	ldr	r3, [fp, #-8]
   17218:	str	r2, [r3, #8]
   1721c:	ldr	r3, [fp, #-12]
   17220:	ldr	r3, [r3, #8]
   17224:	sub	r2, r3, #1
   17228:	ldr	r3, [fp, #-12]
   1722c:	str	r2, [r3, #8]
   17230:	nop	{0}
   17234:	add	sp, fp, #0
   17238:	pop	{fp}		; (ldr fp, [sp], #4)
   1723c:	bx	lr

00017240 <rb_linebuf_init>:
   17240:	str	fp, [sp, #-8]!
   17244:	str	lr, [sp, #4]
   17248:	add	fp, sp, #4
   1724c:	sub	sp, sp, #8
   17250:	str	r0, [fp, #-8]
   17254:	ldr	r3, [fp, #-8]
   17258:	ldr	r2, [pc, #48]	; 17290 <rb_linebuf_init+0x50>
   1725c:	add	r2, pc, r2
   17260:	mov	r1, r3
   17264:	movw	r0, #1036	; 0x40c
   17268:	bl	4ad4 <rb_bh_create@plt>
   1726c:	mov	r2, r0
   17270:	ldr	r3, [pc, #28]	; 17294 <rb_linebuf_init+0x54>
   17274:	add	r3, pc, r3
   17278:	str	r2, [r3]
   1727c:	nop	{0}
   17280:	sub	sp, fp, #4
   17284:	ldr	fp, [sp]
   17288:	add	sp, sp, #4
   1728c:	pop	{pc}		; (ldr pc, [sp], #4)
   17290:	.word	0x0000d4c0
   17294:	.word	0x000315c8

00017298 <rb_linebuf_allocate>:
   17298:	str	fp, [sp, #-8]!
   1729c:	str	lr, [sp, #4]
   172a0:	add	fp, sp, #4
   172a4:	sub	sp, sp, #8
   172a8:	ldr	r3, [pc, #40]	; 172d8 <rb_linebuf_allocate+0x40>
   172ac:	add	r3, pc, r3
   172b0:	ldr	r3, [r3]
   172b4:	mov	r0, r3
   172b8:	bl	4978 <rb_bh_alloc@plt>
   172bc:	str	r0, [fp, #-8]
   172c0:	ldr	r3, [fp, #-8]
   172c4:	mov	r0, r3
   172c8:	sub	sp, fp, #4
   172cc:	ldr	fp, [sp]
   172d0:	add	sp, sp, #4
   172d4:	pop	{pc}		; (ldr pc, [sp], #4)
   172d8:	.word	0x00031590

000172dc <rb_linebuf_free>:
   172dc:	str	fp, [sp, #-8]!
   172e0:	str	lr, [sp, #4]
   172e4:	add	fp, sp, #4
   172e8:	sub	sp, sp, #8
   172ec:	str	r0, [fp, #-8]
   172f0:	ldr	r3, [pc, #36]	; 1731c <rb_linebuf_free+0x40>
   172f4:	add	r3, pc, r3
   172f8:	ldr	r3, [r3]
   172fc:	ldr	r1, [fp, #-8]
   17300:	mov	r0, r3
   17304:	bl	48f4 <rb_bh_free@plt>
   17308:	nop	{0}
   1730c:	sub	sp, fp, #4
   17310:	ldr	fp, [sp]
   17314:	add	sp, sp, #4
   17318:	pop	{pc}		; (ldr pc, [sp], #4)
   1731c:	.word	0x00031548

00017320 <rb_linebuf_new_line>:
   17320:	str	fp, [sp, #-8]!
   17324:	str	lr, [sp, #4]
   17328:	add	fp, sp, #4
   1732c:	sub	sp, sp, #16
   17330:	str	r0, [fp, #-16]
   17334:	bl	17298 <rb_linebuf_allocate>
   17338:	str	r0, [fp, #-8]
   1733c:	ldr	r3, [fp, #-8]
   17340:	cmp	r3, #0
   17344:	bne	17350 <rb_linebuf_new_line+0x30>
   17348:	mov	r3, #0
   1734c:	b	173c4 <rb_linebuf_new_line+0xa4>
   17350:	ldr	r3, [pc, #128]	; 173d8 <rb_linebuf_new_line+0xb8>
   17354:	add	r3, pc, r3
   17358:	ldr	r3, [r3]
   1735c:	add	r2, r3, #1
   17360:	ldr	r3, [pc, #116]	; 173dc <rb_linebuf_new_line+0xbc>
   17364:	add	r3, pc, r3
   17368:	str	r2, [r3]
   1736c:	bl	4bac <rb_make_rb_dlink_node@plt>
   17370:	mov	r1, r0
   17374:	ldr	r3, [fp, #-16]
   17378:	mov	r2, r3
   1737c:	ldr	r0, [fp, #-8]
   17380:	bl	170cc <rb_dlinkAddTail>
   17384:	ldr	r3, [fp, #-8]
   17388:	ldr	r3, [r3, #1032]	; 0x408
   1738c:	add	r2, r3, #1
   17390:	ldr	r3, [fp, #-8]
   17394:	str	r2, [r3, #1032]	; 0x408
   17398:	ldr	r3, [fp, #-16]
   1739c:	ldr	r3, [r3, #16]
   173a0:	add	r2, r3, #1
   173a4:	ldr	r3, [fp, #-16]
   173a8:	str	r2, [r3, #16]
   173ac:	ldr	r3, [fp, #-16]
   173b0:	ldr	r3, [r3, #24]
   173b4:	add	r2, r3, #1
   173b8:	ldr	r3, [fp, #-16]
   173bc:	str	r2, [r3, #24]
   173c0:	ldr	r3, [fp, #-8]
   173c4:	mov	r0, r3
   173c8:	sub	sp, fp, #4
   173cc:	ldr	fp, [sp]
   173d0:	add	sp, sp, #4
   173d4:	pop	{pc}		; (ldr pc, [sp], #4)
   173d8:	.word	0x000314ec
   173dc:	.word	0x000314dc

000173e0 <rb_linebuf_done_line>:
   173e0:	str	fp, [sp, #-8]!
   173e4:	str	lr, [sp, #4]
   173e8:	add	fp, sp, #4
   173ec:	sub	sp, sp, #16
   173f0:	str	r0, [fp, #-8]
   173f4:	str	r1, [fp, #-12]
   173f8:	str	r2, [fp, #-16]
   173fc:	ldr	r3, [fp, #-8]
   17400:	mov	r1, r3
   17404:	ldr	r0, [fp, #-16]
   17408:	bl	1717c <rb_dlinkDelete>
   1740c:	ldr	r0, [fp, #-16]
   17410:	bl	4864 <rb_free_rb_dlink_node@plt>
   17414:	ldr	r3, [fp, #-8]
   17418:	ldr	r3, [r3, #16]
   1741c:	sub	r2, r3, #1
   17420:	ldr	r3, [fp, #-8]
   17424:	str	r2, [r3, #16]
   17428:	ldr	r3, [fp, #-8]
   1742c:	ldr	r2, [r3, #12]
   17430:	ldr	r3, [fp, #-12]
   17434:	ldr	r3, [r3, #1028]	; 0x404
   17438:	sub	r2, r2, r3
   1743c:	ldr	r3, [fp, #-8]
   17440:	str	r2, [r3, #12]
   17444:	ldr	r3, [fp, #-8]
   17448:	ldr	r3, [r3, #24]
   1744c:	sub	r2, r3, #1
   17450:	ldr	r3, [fp, #-8]
   17454:	str	r2, [r3, #24]
   17458:	ldr	r3, [fp, #-12]
   1745c:	ldr	r3, [r3, #1032]	; 0x408
   17460:	sub	r2, r3, #1
   17464:	ldr	r3, [fp, #-12]
   17468:	str	r2, [r3, #1032]	; 0x408
   1746c:	ldr	r3, [fp, #-12]
   17470:	ldr	r3, [r3, #1032]	; 0x408
   17474:	cmp	r3, #0
   17478:	bne	174a0 <rb_linebuf_done_line+0xc0>
   1747c:	ldr	r3, [pc, #48]	; 174b4 <rb_linebuf_done_line+0xd4>
   17480:	add	r3, pc, r3
   17484:	ldr	r3, [r3]
   17488:	sub	r2, r3, #1
   1748c:	ldr	r3, [pc, #36]	; 174b8 <rb_linebuf_done_line+0xd8>
   17490:	add	r3, pc, r3
   17494:	str	r2, [r3]
   17498:	ldr	r0, [fp, #-12]
   1749c:	bl	172dc <rb_linebuf_free>
   174a0:	nop	{0}
   174a4:	sub	sp, fp, #4
   174a8:	ldr	fp, [sp]
   174ac:	add	sp, sp, #4
   174b0:	pop	{pc}		; (ldr pc, [sp], #4)
   174b4:	.word	0x000313c0
   174b8:	.word	0x000313b0

000174bc <rb_linebuf_skip_crlf>:
   174bc:	push	{fp}		; (str fp, [sp, #-4]!)
   174c0:	add	fp, sp, #0
   174c4:	sub	sp, sp, #20
   174c8:	str	r0, [fp, #-16]
   174cc:	str	r1, [fp, #-20]	; 0xffffffec
   174d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   174d4:	str	r3, [fp, #-8]
   174d8:	b	17514 <rb_linebuf_skip_crlf+0x58>
   174dc:	ldr	r3, [fp, #-16]
   174e0:	ldrb	r3, [r3]
   174e4:	cmp	r3, #13
   174e8:	beq	17524 <rb_linebuf_skip_crlf+0x68>
   174ec:	ldr	r3, [fp, #-16]
   174f0:	ldrb	r3, [r3]
   174f4:	cmp	r3, #10
   174f8:	beq	1752c <rb_linebuf_skip_crlf+0x70>
   174fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   17500:	sub	r3, r3, #1
   17504:	str	r3, [fp, #-20]	; 0xffffffec
   17508:	ldr	r3, [fp, #-16]
   1750c:	add	r3, r3, #1
   17510:	str	r3, [fp, #-16]
   17514:	ldr	r3, [fp, #-20]	; 0xffffffec
   17518:	cmp	r3, #0
   1751c:	bne	174dc <rb_linebuf_skip_crlf+0x20>
   17520:	b	1756c <rb_linebuf_skip_crlf+0xb0>
   17524:	nop	{0}
   17528:	b	1756c <rb_linebuf_skip_crlf+0xb0>
   1752c:	nop	{0}
   17530:	b	1756c <rb_linebuf_skip_crlf+0xb0>
   17534:	ldr	r3, [fp, #-16]
   17538:	ldrb	r3, [r3]
   1753c:	cmp	r3, #13
   17540:	beq	17554 <rb_linebuf_skip_crlf+0x98>
   17544:	ldr	r3, [fp, #-16]
   17548:	ldrb	r3, [r3]
   1754c:	cmp	r3, #10
   17550:	bne	1757c <rb_linebuf_skip_crlf+0xc0>
   17554:	ldr	r3, [fp, #-20]	; 0xffffffec
   17558:	sub	r3, r3, #1
   1755c:	str	r3, [fp, #-20]	; 0xffffffec
   17560:	ldr	r3, [fp, #-16]
   17564:	add	r3, r3, #1
   17568:	str	r3, [fp, #-16]
   1756c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17570:	cmp	r3, #0
   17574:	bne	17534 <rb_linebuf_skip_crlf+0x78>
   17578:	b	17580 <rb_linebuf_skip_crlf+0xc4>
   1757c:	nop	{0}
   17580:	ldr	r2, [fp, #-8]
   17584:	ldr	r3, [fp, #-20]	; 0xffffffec
   17588:	sub	r3, r2, r3
   1758c:	mov	r0, r3
   17590:	add	sp, fp, #0
   17594:	pop	{fp}		; (ldr fp, [sp], #4)
   17598:	bx	lr

0001759c <rb_linebuf_newbuf>:
   1759c:	str	fp, [sp, #-8]!
   175a0:	str	lr, [sp, #4]
   175a4:	add	fp, sp, #4
   175a8:	sub	sp, sp, #8
   175ac:	str	r0, [fp, #-8]
   175b0:	mov	r2, #28
   175b4:	mov	r1, #0
   175b8:	ldr	r0, [fp, #-8]
   175bc:	bl	4648 <memset@plt>
   175c0:	nop	{0}
   175c4:	sub	sp, fp, #4
   175c8:	ldr	fp, [sp]
   175cc:	add	sp, sp, #4
   175d0:	pop	{pc}		; (ldr pc, [sp], #4)

000175d4 <rb_linebuf_donebuf>:
   175d4:	str	fp, [sp, #-8]!
   175d8:	str	lr, [sp, #4]
   175dc:	add	fp, sp, #4
   175e0:	sub	sp, sp, #8
   175e4:	str	r0, [fp, #-8]
   175e8:	b	1760c <rb_linebuf_donebuf+0x38>
   175ec:	ldr	r3, [fp, #-8]
   175f0:	ldr	r3, [r3]
   175f4:	ldr	r1, [r3]
   175f8:	ldr	r3, [fp, #-8]
   175fc:	ldr	r3, [r3]
   17600:	mov	r2, r3
   17604:	ldr	r0, [fp, #-8]
   17608:	bl	173e0 <rb_linebuf_done_line>
   1760c:	ldr	r3, [fp, #-8]
   17610:	ldr	r3, [r3]
   17614:	cmp	r3, #0
   17618:	bne	175ec <rb_linebuf_donebuf+0x18>
   1761c:	nop	{0}
   17620:	sub	sp, fp, #4
   17624:	ldr	fp, [sp]
   17628:	add	sp, sp, #4
   1762c:	pop	{pc}		; (ldr pc, [sp], #4)

00017630 <rb_linebuf_copy_line>:
   17630:	str	fp, [sp, #-8]!
   17634:	str	lr, [sp, #4]
   17638:	add	fp, sp, #4
   1763c:	sub	sp, sp, #32
   17640:	str	r0, [fp, #-24]	; 0xffffffe8
   17644:	str	r1, [fp, #-28]	; 0xffffffe4
   17648:	str	r2, [fp, #-32]	; 0xffffffe0
   1764c:	str	r3, [fp, #-36]	; 0xffffffdc
   17650:	mov	r3, #0
   17654:	str	r3, [fp, #-8]
   17658:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1765c:	str	r3, [fp, #-16]
   17660:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17664:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17668:	ldr	r2, [r2, #1028]	; 0x404
   1766c:	add	r3, r3, r2
   17670:	str	r3, [fp, #-12]
   17674:	mov	r3, #0
   17678:	str	r3, [fp, #-20]	; 0xffffffec
   1767c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17680:	mov	r2, #0
   17684:	strb	r2, [r3, #1026]	; 0x402
   17688:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1768c:	ldrb	r3, [r3, #1025]	; 0x401
   17690:	cmp	r3, #1
   17694:	bne	176a0 <rb_linebuf_copy_line+0x70>
   17698:	mov	r3, #0
   1769c:	b	178e8 <rb_linebuf_copy_line+0x2b8>
   176a0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   176a4:	ldr	r0, [fp, #-16]
   176a8:	bl	174bc <rb_linebuf_skip_crlf>
   176ac:	str	r0, [fp, #-8]
   176b0:	ldr	r3, [fp, #-8]
   176b4:	str	r3, [fp, #-20]	; 0xffffffec
   176b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   176bc:	cmn	r3, #1
   176c0:	bne	176cc <rb_linebuf_copy_line+0x9c>
   176c4:	mvn	r3, #0
   176c8:	b	178e8 <rb_linebuf_copy_line+0x2b8>
   176cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   176d0:	ldr	r3, [r3, #1028]	; 0x404
   176d4:	rsb	r3, r3, #1020	; 0x3fc
   176d8:	add	r3, r3, #2
   176dc:	ldr	r2, [fp, #-8]
   176e0:	cmp	r2, r3
   176e4:	ble	177b8 <rb_linebuf_copy_line+0x188>
   176e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   176ec:	ldr	r3, [r3, #1028]	; 0x404
   176f0:	rsb	r3, r3, #1020	; 0x3fc
   176f4:	add	r3, r3, #2
   176f8:	str	r3, [fp, #-8]
   176fc:	ldr	r3, [fp, #-8]
   17700:	mov	r2, r3
   17704:	ldr	r1, [fp, #-16]
   17708:	ldr	r0, [fp, #-12]
   1770c:	bl	4834 <memcpy@plt>
   17710:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17714:	mov	r2, #0
   17718:	strb	r2, [r3, #1022]	; 0x3fe
   1771c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17720:	add	r3, r3, #1020	; 0x3fc
   17724:	add	r3, r3, #1
   17728:	str	r3, [fp, #-12]
   1772c:	b	17754 <rb_linebuf_copy_line+0x124>
   17730:	ldr	r3, [fp, #-12]
   17734:	mov	r2, #0
   17738:	strb	r2, [r3]
   1773c:	ldr	r3, [fp, #-8]
   17740:	sub	r3, r3, #1
   17744:	str	r3, [fp, #-8]
   17748:	ldr	r3, [fp, #-12]
   1774c:	sub	r3, r3, #1
   17750:	str	r3, [fp, #-12]
   17754:	ldr	r3, [fp, #-8]
   17758:	cmp	r3, #0
   1775c:	beq	17780 <rb_linebuf_copy_line+0x150>
   17760:	ldr	r3, [fp, #-12]
   17764:	ldrb	r3, [r3]
   17768:	cmp	r3, #13
   1776c:	beq	17730 <rb_linebuf_copy_line+0x100>
   17770:	ldr	r3, [fp, #-12]
   17774:	ldrb	r3, [r3]
   17778:	cmp	r3, #10
   1777c:	beq	17730 <rb_linebuf_copy_line+0x100>
   17780:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17784:	mov	r2, #1
   17788:	strb	r2, [r3, #1025]	; 0x401
   1778c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17790:	movw	r2, #1022	; 0x3fe
   17794:	str	r2, [r3, #1028]	; 0x404
   17798:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1779c:	ldr	r3, [r3, #12]
   177a0:	add	r3, r3, #1020	; 0x3fc
   177a4:	add	r3, r3, #2
   177a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   177ac:	str	r3, [r2, #12]
   177b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   177b4:	b	178e8 <rb_linebuf_copy_line+0x2b8>
   177b8:	ldr	r3, [fp, #-8]
   177bc:	mov	r2, r3
   177c0:	ldr	r1, [fp, #-16]
   177c4:	ldr	r0, [fp, #-12]
   177c8:	bl	4834 <memcpy@plt>
   177cc:	ldr	r3, [fp, #-8]
   177d0:	ldr	r2, [fp, #-12]
   177d4:	add	r3, r2, r3
   177d8:	str	r3, [fp, #-12]
   177dc:	ldr	r3, [fp, #-12]
   177e0:	mov	r2, #0
   177e4:	strb	r2, [r3]
   177e8:	ldr	r3, [fp, #-12]
   177ec:	sub	r3, r3, #1
   177f0:	str	r3, [fp, #-12]
   177f4:	ldr	r3, [fp, #-12]
   177f8:	ldrb	r3, [r3]
   177fc:	cmp	r3, #13
   17800:	beq	1787c <rb_linebuf_copy_line+0x24c>
   17804:	ldr	r3, [fp, #-12]
   17808:	ldrb	r3, [r3]
   1780c:	cmp	r3, #10
   17810:	beq	1787c <rb_linebuf_copy_line+0x24c>
   17814:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17818:	ldr	r2, [r3, #12]
   1781c:	ldr	r3, [fp, #-8]
   17820:	add	r2, r2, r3
   17824:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17828:	str	r2, [r3, #12]
   1782c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17830:	ldr	r2, [r3, #1028]	; 0x404
   17834:	ldr	r3, [fp, #-8]
   17838:	add	r2, r2, r3
   1783c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17840:	str	r2, [r3, #1028]	; 0x404
   17844:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17848:	mov	r2, #0
   1784c:	strb	r2, [r3, #1025]	; 0x401
   17850:	ldr	r3, [fp, #-20]	; 0xffffffec
   17854:	b	178e8 <rb_linebuf_copy_line+0x2b8>
   17858:	ldr	r3, [fp, #-12]
   1785c:	mov	r2, #0
   17860:	strb	r2, [r3]
   17864:	ldr	r3, [fp, #-8]
   17868:	sub	r3, r3, #1
   1786c:	str	r3, [fp, #-8]
   17870:	ldr	r3, [fp, #-12]
   17874:	sub	r3, r3, #1
   17878:	str	r3, [fp, #-12]
   1787c:	ldr	r3, [fp, #-8]
   17880:	cmp	r3, #0
   17884:	beq	178a8 <rb_linebuf_copy_line+0x278>
   17888:	ldr	r3, [fp, #-12]
   1788c:	ldrb	r3, [r3]
   17890:	cmp	r3, #13
   17894:	beq	17858 <rb_linebuf_copy_line+0x228>
   17898:	ldr	r3, [fp, #-12]
   1789c:	ldrb	r3, [r3]
   178a0:	cmp	r3, #10
   178a4:	beq	17858 <rb_linebuf_copy_line+0x228>
   178a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   178ac:	mov	r2, #1
   178b0:	strb	r2, [r3, #1025]	; 0x401
   178b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   178b8:	ldr	r2, [r3, #12]
   178bc:	ldr	r3, [fp, #-8]
   178c0:	add	r2, r2, r3
   178c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   178c8:	str	r2, [r3, #12]
   178cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   178d0:	ldr	r2, [r3, #1028]	; 0x404
   178d4:	ldr	r3, [fp, #-8]
   178d8:	add	r2, r2, r3
   178dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   178e0:	str	r2, [r3, #1028]	; 0x404
   178e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   178e8:	mov	r0, r3
   178ec:	sub	sp, fp, #4
   178f0:	ldr	fp, [sp]
   178f4:	add	sp, sp, #4
   178f8:	pop	{pc}		; (ldr pc, [sp], #4)

000178fc <rb_linebuf_copy_raw>:
   178fc:	str	fp, [sp, #-8]!
   17900:	str	lr, [sp, #4]
   17904:	add	fp, sp, #4
   17908:	sub	sp, sp, #32
   1790c:	str	r0, [fp, #-24]	; 0xffffffe8
   17910:	str	r1, [fp, #-28]	; 0xffffffe4
   17914:	str	r2, [fp, #-32]	; 0xffffffe0
   17918:	str	r3, [fp, #-36]	; 0xffffffdc
   1791c:	mov	r3, #0
   17920:	str	r3, [fp, #-8]
   17924:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17928:	str	r3, [fp, #-12]
   1792c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17930:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17934:	ldr	r2, [r2, #1028]	; 0x404
   17938:	add	r3, r3, r2
   1793c:	str	r3, [fp, #-16]
   17940:	mov	r3, #0
   17944:	str	r3, [fp, #-20]	; 0xffffffec
   17948:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1794c:	mov	r2, #1
   17950:	strb	r2, [r3, #1026]	; 0x402
   17954:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17958:	ldrb	r3, [r3, #1025]	; 0x401
   1795c:	cmp	r3, #1
   17960:	bne	1796c <rb_linebuf_copy_raw+0x70>
   17964:	mov	r3, #0
   17968:	b	17b00 <rb_linebuf_copy_raw+0x204>
   1796c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17970:	ldr	r0, [fp, #-12]
   17974:	bl	174bc <rb_linebuf_skip_crlf>
   17978:	str	r0, [fp, #-8]
   1797c:	ldr	r3, [fp, #-8]
   17980:	str	r3, [fp, #-20]	; 0xffffffec
   17984:	ldr	r3, [fp, #-20]	; 0xffffffec
   17988:	cmn	r3, #1
   1798c:	bne	17998 <rb_linebuf_copy_raw+0x9c>
   17990:	mvn	r3, #0
   17994:	b	17b00 <rb_linebuf_copy_raw+0x204>
   17998:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1799c:	ldr	r3, [r3, #1028]	; 0x404
   179a0:	rsb	r3, r3, #1020	; 0x3fc
   179a4:	add	r3, r3, #2
   179a8:	ldr	r2, [fp, #-8]
   179ac:	cmp	r2, r3
   179b0:	ble	17a20 <rb_linebuf_copy_raw+0x124>
   179b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   179b8:	ldr	r3, [r3, #1028]	; 0x404
   179bc:	rsb	r3, r3, #1020	; 0x3fc
   179c0:	add	r3, r3, #2
   179c4:	str	r3, [fp, #-20]	; 0xffffffec
   179c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   179cc:	mov	r2, r3
   179d0:	ldr	r1, [fp, #-12]
   179d4:	ldr	r0, [fp, #-16]
   179d8:	bl	4834 <memcpy@plt>
   179dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   179e0:	mov	r2, #0
   179e4:	strb	r2, [r3, #1022]	; 0x3fe
   179e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   179ec:	mov	r2, #1
   179f0:	strb	r2, [r3, #1025]	; 0x401
   179f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   179f8:	movw	r2, #1022	; 0x3fe
   179fc:	str	r2, [r3, #1028]	; 0x404
   17a00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17a04:	ldr	r3, [r3, #12]
   17a08:	add	r3, r3, #1020	; 0x3fc
   17a0c:	add	r3, r3, #2
   17a10:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17a14:	str	r3, [r2, #12]
   17a18:	ldr	r3, [fp, #-20]	; 0xffffffec
   17a1c:	b	17b00 <rb_linebuf_copy_raw+0x204>
   17a20:	ldr	r3, [fp, #-8]
   17a24:	mov	r2, r3
   17a28:	ldr	r1, [fp, #-12]
   17a2c:	ldr	r0, [fp, #-16]
   17a30:	bl	4834 <memcpy@plt>
   17a34:	ldr	r3, [fp, #-8]
   17a38:	ldr	r2, [fp, #-16]
   17a3c:	add	r3, r2, r3
   17a40:	str	r3, [fp, #-16]
   17a44:	ldr	r3, [fp, #-16]
   17a48:	mov	r2, #0
   17a4c:	strb	r2, [r3]
   17a50:	ldr	r3, [fp, #-16]
   17a54:	sub	r3, r3, #1
   17a58:	str	r3, [fp, #-16]
   17a5c:	ldr	r3, [fp, #-16]
   17a60:	ldrb	r3, [r3]
   17a64:	cmp	r3, #13
   17a68:	beq	17ac0 <rb_linebuf_copy_raw+0x1c4>
   17a6c:	ldr	r3, [fp, #-16]
   17a70:	ldrb	r3, [r3]
   17a74:	cmp	r3, #10
   17a78:	beq	17ac0 <rb_linebuf_copy_raw+0x1c4>
   17a7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17a80:	ldr	r2, [r3, #12]
   17a84:	ldr	r3, [fp, #-8]
   17a88:	add	r2, r2, r3
   17a8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17a90:	str	r2, [r3, #12]
   17a94:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17a98:	ldr	r2, [r3, #1028]	; 0x404
   17a9c:	ldr	r3, [fp, #-8]
   17aa0:	add	r2, r2, r3
   17aa4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17aa8:	str	r2, [r3, #1028]	; 0x404
   17aac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17ab0:	mov	r2, #0
   17ab4:	strb	r2, [r3, #1025]	; 0x401
   17ab8:	ldr	r3, [fp, #-20]	; 0xffffffec
   17abc:	b	17b00 <rb_linebuf_copy_raw+0x204>
   17ac0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17ac4:	mov	r2, #1
   17ac8:	strb	r2, [r3, #1025]	; 0x401
   17acc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17ad0:	ldr	r2, [r3, #12]
   17ad4:	ldr	r3, [fp, #-8]
   17ad8:	add	r2, r2, r3
   17adc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17ae0:	str	r2, [r3, #12]
   17ae4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17ae8:	ldr	r2, [r3, #1028]	; 0x404
   17aec:	ldr	r3, [fp, #-8]
   17af0:	add	r2, r2, r3
   17af4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17af8:	str	r2, [r3, #1028]	; 0x404
   17afc:	ldr	r3, [fp, #-20]	; 0xffffffec
   17b00:	mov	r0, r3
   17b04:	sub	sp, fp, #4
   17b08:	ldr	fp, [sp]
   17b0c:	add	sp, sp, #4
   17b10:	pop	{pc}		; (ldr pc, [sp], #4)

00017b14 <rb_linebuf_parse>:
   17b14:	str	fp, [sp, #-8]!
   17b18:	str	lr, [sp, #4]
   17b1c:	add	fp, sp, #4
   17b20:	sub	sp, sp, #32
   17b24:	str	r0, [fp, #-24]	; 0xffffffe8
   17b28:	str	r1, [fp, #-28]	; 0xffffffe4
   17b2c:	str	r2, [fp, #-32]	; 0xffffffe0
   17b30:	str	r3, [fp, #-36]	; 0xffffffdc
   17b34:	mov	r3, #0
   17b38:	str	r3, [fp, #-12]
   17b3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17b40:	ldr	r3, [r3, #4]
   17b44:	cmp	r3, #0
   17b48:	beq	17c84 <rb_linebuf_parse+0x170>
   17b4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17b50:	ldr	r3, [r3, #4]
   17b54:	ldr	r3, [r3]
   17b58:	str	r3, [fp, #-16]
   17b5c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17b60:	cmp	r3, #0
   17b64:	bne	17b84 <rb_linebuf_parse+0x70>
   17b68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17b6c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17b70:	ldr	r1, [fp, #-16]
   17b74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b78:	bl	17630 <rb_linebuf_copy_line>
   17b7c:	str	r0, [fp, #-8]
   17b80:	b	17b9c <rb_linebuf_parse+0x88>
   17b84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17b88:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17b8c:	ldr	r1, [fp, #-16]
   17b90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b94:	bl	178fc <rb_linebuf_copy_raw>
   17b98:	str	r0, [fp, #-8]
   17b9c:	ldr	r3, [fp, #-8]
   17ba0:	cmn	r3, #1
   17ba4:	bne	17bb0 <rb_linebuf_parse+0x9c>
   17ba8:	mvn	r3, #0
   17bac:	b	17c94 <rb_linebuf_parse+0x180>
   17bb0:	ldr	r3, [fp, #-12]
   17bb4:	add	r3, r3, #1
   17bb8:	str	r3, [fp, #-12]
   17bbc:	ldr	r2, [fp, #-8]
   17bc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17bc4:	cmp	r2, r3
   17bc8:	bne	17bd4 <rb_linebuf_parse+0xc0>
   17bcc:	ldr	r3, [fp, #-12]
   17bd0:	b	17c94 <rb_linebuf_parse+0x180>
   17bd4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17bd8:	ldr	r3, [fp, #-8]
   17bdc:	sub	r3, r2, r3
   17be0:	str	r3, [fp, #-32]	; 0xffffffe0
   17be4:	ldr	r3, [fp, #-8]
   17be8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17bec:	add	r3, r2, r3
   17bf0:	str	r3, [fp, #-28]	; 0xffffffe4
   17bf4:	b	17c84 <rb_linebuf_parse+0x170>
   17bf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bfc:	bl	17320 <rb_linebuf_new_line>
   17c00:	str	r0, [fp, #-16]
   17c04:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17c08:	cmp	r3, #0
   17c0c:	bne	17c2c <rb_linebuf_parse+0x118>
   17c10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17c14:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17c18:	ldr	r1, [fp, #-16]
   17c1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c20:	bl	17630 <rb_linebuf_copy_line>
   17c24:	str	r0, [fp, #-8]
   17c28:	b	17c44 <rb_linebuf_parse+0x130>
   17c2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17c30:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17c34:	ldr	r1, [fp, #-16]
   17c38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c3c:	bl	178fc <rb_linebuf_copy_raw>
   17c40:	str	r0, [fp, #-8]
   17c44:	ldr	r3, [fp, #-8]
   17c48:	cmn	r3, #1
   17c4c:	bne	17c58 <rb_linebuf_parse+0x144>
   17c50:	mvn	r3, #0
   17c54:	b	17c94 <rb_linebuf_parse+0x180>
   17c58:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17c5c:	ldr	r3, [fp, #-8]
   17c60:	sub	r3, r2, r3
   17c64:	str	r3, [fp, #-32]	; 0xffffffe0
   17c68:	ldr	r3, [fp, #-8]
   17c6c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17c70:	add	r3, r2, r3
   17c74:	str	r3, [fp, #-28]	; 0xffffffe4
   17c78:	ldr	r3, [fp, #-12]
   17c7c:	add	r3, r3, #1
   17c80:	str	r3, [fp, #-12]
   17c84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17c88:	cmp	r3, #0
   17c8c:	bgt	17bf8 <rb_linebuf_parse+0xe4>
   17c90:	ldr	r3, [fp, #-12]
   17c94:	mov	r0, r3
   17c98:	sub	sp, fp, #4
   17c9c:	ldr	fp, [sp]
   17ca0:	add	sp, sp, #4
   17ca4:	pop	{pc}		; (ldr pc, [sp], #4)

00017ca8 <rb_linebuf_get>:
   17ca8:	str	fp, [sp, #-8]!
   17cac:	str	lr, [sp, #4]
   17cb0:	add	fp, sp, #4
   17cb4:	sub	sp, sp, #32
   17cb8:	str	r0, [fp, #-24]	; 0xffffffe8
   17cbc:	str	r1, [fp, #-28]	; 0xffffffe4
   17cc0:	str	r2, [fp, #-32]	; 0xffffffe0
   17cc4:	str	r3, [fp, #-36]	; 0xffffffdc
   17cc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17ccc:	ldr	r3, [r3]
   17cd0:	cmp	r3, #0
   17cd4:	bne	17ce0 <rb_linebuf_get+0x38>
   17cd8:	mov	r3, #0
   17cdc:	b	17e5c <rb_linebuf_get+0x1b4>
   17ce0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17ce4:	ldr	r3, [r3]
   17ce8:	ldr	r3, [r3]
   17cec:	str	r3, [fp, #-20]	; 0xffffffec
   17cf0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17cf4:	cmp	r3, #0
   17cf8:	bne	17d14 <rb_linebuf_get+0x6c>
   17cfc:	ldr	r3, [fp, #-20]	; 0xffffffec
   17d00:	ldrb	r3, [r3, #1025]	; 0x401
   17d04:	cmp	r3, #0
   17d08:	bne	17d14 <rb_linebuf_get+0x6c>
   17d0c:	mov	r3, #0
   17d10:	b	17e5c <rb_linebuf_get+0x1b4>
   17d14:	ldr	r3, [fp, #-20]	; 0xffffffec
   17d18:	ldr	r3, [r3, #1028]	; 0x404
   17d1c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17d20:	cmp	r2, r3
   17d24:	bge	17d38 <rb_linebuf_get+0x90>
   17d28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17d2c:	sub	r3, r3, #1
   17d30:	str	r3, [fp, #-8]
   17d34:	b	17d44 <rb_linebuf_get+0x9c>
   17d38:	ldr	r3, [fp, #-20]	; 0xffffffec
   17d3c:	ldr	r3, [r3, #1028]	; 0x404
   17d40:	str	r3, [fp, #-8]
   17d44:	ldr	r3, [fp, #-20]	; 0xffffffec
   17d48:	str	r3, [fp, #-12]
   17d4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17d50:	ldrb	r3, [r3, #1026]	; 0x402
   17d54:	cmp	r3, #0
   17d58:	beq	17e0c <rb_linebuf_get+0x164>
   17d5c:	ldr	r3, [fp, #4]
   17d60:	cmp	r3, #0
   17d64:	bne	17e0c <rb_linebuf_get+0x164>
   17d68:	b	17d84 <rb_linebuf_get+0xdc>
   17d6c:	ldr	r3, [fp, #-12]
   17d70:	add	r3, r3, #1
   17d74:	str	r3, [fp, #-12]
   17d78:	ldr	r3, [fp, #-8]
   17d7c:	sub	r3, r3, #1
   17d80:	str	r3, [fp, #-8]
   17d84:	ldr	r3, [fp, #-8]
   17d88:	cmp	r3, #0
   17d8c:	beq	17db0 <rb_linebuf_get+0x108>
   17d90:	ldr	r3, [fp, #-12]
   17d94:	ldrb	r3, [r3]
   17d98:	cmp	r3, #13
   17d9c:	beq	17d6c <rb_linebuf_get+0xc4>
   17da0:	ldr	r3, [fp, #-12]
   17da4:	ldrb	r3, [r3]
   17da8:	cmp	r3, #10
   17dac:	beq	17d6c <rb_linebuf_get+0xc4>
   17db0:	ldr	r3, [fp, #-8]
   17db4:	sub	r3, r3, #1
   17db8:	ldr	r2, [fp, #-12]
   17dbc:	add	r3, r2, r3
   17dc0:	str	r3, [fp, #-16]
   17dc4:	b	17de0 <rb_linebuf_get+0x138>
   17dc8:	ldr	r3, [fp, #-16]
   17dcc:	sub	r3, r3, #1
   17dd0:	str	r3, [fp, #-16]
   17dd4:	ldr	r3, [fp, #-8]
   17dd8:	sub	r3, r3, #1
   17ddc:	str	r3, [fp, #-8]
   17de0:	ldr	r3, [fp, #-8]
   17de4:	cmp	r3, #0
   17de8:	beq	17e0c <rb_linebuf_get+0x164>
   17dec:	ldr	r3, [fp, #-16]
   17df0:	ldrb	r3, [r3]
   17df4:	cmp	r3, #13
   17df8:	beq	17dc8 <rb_linebuf_get+0x120>
   17dfc:	ldr	r3, [fp, #-16]
   17e00:	ldrb	r3, [r3]
   17e04:	cmp	r3, #10
   17e08:	beq	17dc8 <rb_linebuf_get+0x120>
   17e0c:	ldr	r3, [fp, #-8]
   17e10:	mov	r2, r3
   17e14:	ldr	r1, [fp, #-12]
   17e18:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17e1c:	bl	4834 <memcpy@plt>
   17e20:	ldr	r3, [fp, #4]
   17e24:	cmp	r3, #0
   17e28:	bne	17e40 <rb_linebuf_get+0x198>
   17e2c:	ldr	r3, [fp, #-8]
   17e30:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17e34:	add	r3, r2, r3
   17e38:	mov	r2, #0
   17e3c:	strb	r2, [r3]
   17e40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17e44:	ldr	r3, [r3]
   17e48:	mov	r2, r3
   17e4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17e50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e54:	bl	173e0 <rb_linebuf_done_line>
   17e58:	ldr	r3, [fp, #-8]
   17e5c:	mov	r0, r3
   17e60:	sub	sp, fp, #4
   17e64:	ldr	fp, [sp]
   17e68:	add	sp, sp, #4
   17e6c:	pop	{pc}		; (ldr pc, [sp], #4)

00017e70 <rb_linebuf_attach>:
   17e70:	str	fp, [sp, #-8]!
   17e74:	str	lr, [sp, #4]
   17e78:	add	fp, sp, #4
   17e7c:	sub	sp, sp, #16
   17e80:	str	r0, [fp, #-16]
   17e84:	str	r1, [fp, #-20]	; 0xffffffec
   17e88:	ldr	r3, [fp, #-20]	; 0xffffffec
   17e8c:	ldr	r3, [r3]
   17e90:	str	r3, [fp, #-8]
   17e94:	b	17f20 <rb_linebuf_attach+0xb0>
   17e98:	ldr	r3, [fp, #-8]
   17e9c:	ldr	r3, [r3]
   17ea0:	str	r3, [fp, #-12]
   17ea4:	bl	4bac <rb_make_rb_dlink_node@plt>
   17ea8:	mov	r1, r0
   17eac:	ldr	r3, [fp, #-16]
   17eb0:	mov	r2, r3
   17eb4:	ldr	r0, [fp, #-12]
   17eb8:	bl	170cc <rb_dlinkAddTail>
   17ebc:	ldr	r3, [fp, #-16]
   17ec0:	ldr	r3, [r3, #16]
   17ec4:	add	r2, r3, #1
   17ec8:	ldr	r3, [fp, #-16]
   17ecc:	str	r2, [r3, #16]
   17ed0:	ldr	r3, [fp, #-16]
   17ed4:	ldr	r2, [r3, #12]
   17ed8:	ldr	r3, [fp, #-12]
   17edc:	ldr	r3, [r3, #1028]	; 0x404
   17ee0:	add	r2, r2, r3
   17ee4:	ldr	r3, [fp, #-16]
   17ee8:	str	r2, [r3, #12]
   17eec:	ldr	r3, [fp, #-16]
   17ef0:	ldr	r3, [r3, #24]
   17ef4:	add	r2, r3, #1
   17ef8:	ldr	r3, [fp, #-16]
   17efc:	str	r2, [r3, #24]
   17f00:	ldr	r3, [fp, #-12]
   17f04:	ldr	r3, [r3, #1032]	; 0x408
   17f08:	add	r2, r3, #1
   17f0c:	ldr	r3, [fp, #-12]
   17f10:	str	r2, [r3, #1032]	; 0x408
   17f14:	ldr	r3, [fp, #-8]
   17f18:	ldr	r3, [r3, #8]
   17f1c:	str	r3, [fp, #-8]
   17f20:	ldr	r3, [fp, #-8]
   17f24:	cmp	r3, #0
   17f28:	bne	17e98 <rb_linebuf_attach+0x28>
   17f2c:	nop	{0}
   17f30:	sub	sp, fp, #4
   17f34:	ldr	fp, [sp]
   17f38:	add	sp, sp, #4
   17f3c:	pop	{pc}		; (ldr pc, [sp], #4)

00017f40 <rb_linebuf_put>:
   17f40:	str	fp, [sp, #-8]!
   17f44:	str	lr, [sp, #4]
   17f48:	add	fp, sp, #4
   17f4c:	sub	sp, sp, #24
   17f50:	str	r0, [fp, #-24]	; 0xffffffe8
   17f54:	str	r1, [fp, #-28]	; 0xffffffe4
   17f58:	mov	r3, #0
   17f5c:	str	r3, [fp, #-8]
   17f60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17f64:	ldr	r3, [r3, #4]
   17f68:	cmp	r3, #0
   17f6c:	beq	17f80 <rb_linebuf_put+0x40>
   17f70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17f74:	ldr	r3, [r3, #4]
   17f78:	ldr	r3, [r3]
   17f7c:	str	r3, [fp, #-12]
   17f80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f84:	bl	17320 <rb_linebuf_new_line>
   17f88:	str	r0, [fp, #-12]
   17f8c:	ldr	r3, [fp, #-12]
   17f90:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17f94:	movw	r1, #1023	; 0x3ff
   17f98:	mov	r0, r3
   17f9c:	bl	46b4 <rb_fsnprint@plt>
   17fa0:	str	r0, [fp, #-16]
   17fa4:	ldr	r3, [fp, #-16]
   17fa8:	cmp	r3, #0
   17fac:	ble	17fc0 <rb_linebuf_put+0x80>
   17fb0:	ldr	r3, [fp, #-16]
   17fb4:	ldr	r2, [fp, #-8]
   17fb8:	add	r3, r2, r3
   17fbc:	str	r3, [fp, #-8]
   17fc0:	ldr	r3, [fp, #-8]
   17fc4:	movw	r2, #1022	; 0x3fe
   17fc8:	cmp	r3, r2
   17fcc:	bls	17fd8 <rb_linebuf_put+0x98>
   17fd0:	movw	r3, #1022	; 0x3fe
   17fd4:	str	r3, [fp, #-8]
   17fd8:	ldr	r3, [fp, #-8]
   17fdc:	add	r2, r3, #1
   17fe0:	str	r2, [fp, #-8]
   17fe4:	ldr	r2, [fp, #-12]
   17fe8:	mov	r1, #13
   17fec:	strb	r1, [r2, r3]
   17ff0:	ldr	r3, [fp, #-8]
   17ff4:	add	r2, r3, #1
   17ff8:	str	r2, [fp, #-8]
   17ffc:	ldr	r2, [fp, #-12]
   18000:	mov	r1, #10
   18004:	strb	r1, [r2, r3]
   18008:	ldr	r2, [fp, #-12]
   1800c:	ldr	r3, [fp, #-8]
   18010:	add	r3, r2, r3
   18014:	mov	r2, #0
   18018:	strb	r2, [r3]
   1801c:	ldr	r3, [fp, #-12]
   18020:	mov	r2, #1
   18024:	strb	r2, [r3, #1025]	; 0x401
   18028:	ldr	r2, [fp, #-8]
   1802c:	ldr	r3, [fp, #-12]
   18030:	str	r2, [r3, #1028]	; 0x404
   18034:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18038:	ldr	r3, [r3, #12]
   1803c:	mov	r2, r3
   18040:	ldr	r3, [fp, #-8]
   18044:	add	r3, r2, r3
   18048:	mov	r2, r3
   1804c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18050:	str	r2, [r3, #12]
   18054:	nop	{0}
   18058:	sub	sp, fp, #4
   1805c:	ldr	fp, [sp]
   18060:	add	sp, sp, #4
   18064:	pop	{pc}		; (ldr pc, [sp], #4)

00018068 <rb_linebuf_flush>:
   18068:	str	fp, [sp, #-8]!
   1806c:	str	lr, [sp, #4]
   18070:	add	fp, sp, #4
   18074:	sub	sp, sp, #32
   18078:	str	r0, [fp, #-32]	; 0xffffffe0
   1807c:	str	r1, [fp, #-36]	; 0xffffffdc
   18080:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18084:	bl	44d4 <rb_fd_ssl@plt>
   18088:	mov	r3, r0
   1808c:	cmp	r3, #0
   18090:	bne	18344 <rb_linebuf_flush+0x2dc>
   18094:	mov	r3, #0
   18098:	str	r3, [fp, #-12]
   1809c:	mov	r2, #8192	; 0x2000
   180a0:	mov	r1, #0
   180a4:	ldr	r3, [pc, #940]	; 18458 <rb_linebuf_flush+0x3f0>
   180a8:	add	r3, pc, r3
   180ac:	mov	r0, r3
   180b0:	bl	4648 <memset@plt>
   180b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   180b8:	ldr	r3, [r3]
   180bc:	cmp	r3, #0
   180c0:	bne	180dc <rb_linebuf_flush+0x74>
   180c4:	bl	4d20 <__errno_location@plt>
   180c8:	mov	r2, r0
   180cc:	mov	r3, #11
   180d0:	str	r3, [r2]
   180d4:	mvn	r3, #0
   180d8:	b	18444 <rb_linebuf_flush+0x3dc>
   180dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   180e0:	ldr	r3, [r3]
   180e4:	str	r3, [fp, #-8]
   180e8:	ldr	r3, [fp, #-8]
   180ec:	ldr	r3, [r3]
   180f0:	str	r3, [fp, #-24]	; 0xffffffe8
   180f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   180f8:	ldrb	r3, [r3, #1025]	; 0x401
   180fc:	cmp	r3, #0
   18100:	bne	1811c <rb_linebuf_flush+0xb4>
   18104:	bl	4d20 <__errno_location@plt>
   18108:	mov	r2, r0
   1810c:	mov	r3, #11
   18110:	str	r3, [r2]
   18114:	mvn	r3, #0
   18118:	b	18444 <rb_linebuf_flush+0x3dc>
   1811c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18120:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18124:	ldr	r2, [r2, #20]
   18128:	add	r1, r3, r2
   1812c:	ldr	r3, [pc, #808]	; 1845c <rb_linebuf_flush+0x3f4>
   18130:	add	r3, pc, r3
   18134:	ldr	r2, [fp, #-12]
   18138:	str	r1, [r3, r2, lsl #3]
   1813c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18140:	ldr	r2, [r3, #1028]	; 0x404
   18144:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18148:	ldr	r3, [r3, #20]
   1814c:	sub	r1, r2, r3
   18150:	ldr	r3, [fp, #-12]
   18154:	add	r2, r3, #1
   18158:	str	r2, [fp, #-12]
   1815c:	ldr	r2, [pc, #764]	; 18460 <rb_linebuf_flush+0x3f8>
   18160:	add	r2, pc, r2
   18164:	lsl	r3, r3, #3
   18168:	add	r3, r2, r3
   1816c:	str	r1, [r3, #4]
   18170:	ldr	r3, [fp, #-8]
   18174:	ldr	r3, [r3, #8]
   18178:	str	r3, [fp, #-8]
   1817c:	ldr	r3, [fp, #-8]
   18180:	cmp	r3, #0
   18184:	beq	18204 <rb_linebuf_flush+0x19c>
   18188:	ldr	r3, [fp, #-8]
   1818c:	ldr	r3, [r3]
   18190:	str	r3, [fp, #-24]	; 0xffffffe8
   18194:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18198:	ldrb	r3, [r3, #1025]	; 0x401
   1819c:	cmp	r3, #0
   181a0:	beq	1820c <rb_linebuf_flush+0x1a4>
   181a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   181a8:	ldr	r3, [pc, #692]	; 18464 <rb_linebuf_flush+0x3fc>
   181ac:	add	r3, pc, r3
   181b0:	ldr	r2, [fp, #-12]
   181b4:	str	r1, [r3, r2, lsl #3]
   181b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   181bc:	ldr	r3, [r3, #1028]	; 0x404
   181c0:	mov	r1, r3
   181c4:	ldr	r2, [pc, #668]	; 18468 <rb_linebuf_flush+0x400>
   181c8:	add	r2, pc, r2
   181cc:	ldr	r3, [fp, #-12]
   181d0:	lsl	r3, r3, #3
   181d4:	add	r3, r2, r3
   181d8:	str	r1, [r3, #4]
   181dc:	ldr	r3, [fp, #-8]
   181e0:	ldr	r3, [r3, #8]
   181e4:	str	r3, [fp, #-8]
   181e8:	ldr	r3, [fp, #-12]
   181ec:	add	r3, r3, #1
   181f0:	str	r3, [fp, #-12]
   181f4:	ldr	r3, [fp, #-12]
   181f8:	cmp	r3, #1024	; 0x400
   181fc:	blt	1817c <rb_linebuf_flush+0x114>
   18200:	b	18210 <rb_linebuf_flush+0x1a8>
   18204:	nop	{0}
   18208:	b	18210 <rb_linebuf_flush+0x1a8>
   1820c:	nop	{0}
   18210:	ldr	r3, [fp, #-12]
   18214:	cmp	r3, #0
   18218:	bne	18234 <rb_linebuf_flush+0x1cc>
   1821c:	bl	4d20 <__errno_location@plt>
   18220:	mov	r2, r0
   18224:	mov	r3, #11
   18228:	str	r3, [r2]
   1822c:	mvn	r3, #0
   18230:	b	18444 <rb_linebuf_flush+0x3dc>
   18234:	ldr	r2, [fp, #-12]
   18238:	ldr	r3, [pc, #556]	; 1846c <rb_linebuf_flush+0x404>
   1823c:	add	r3, pc, r3
   18240:	mov	r1, r3
   18244:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18248:	bl	4af8 <rb_writev@plt>
   1824c:	str	r0, [fp, #-28]	; 0xffffffe4
   18250:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18254:	str	r3, [fp, #-20]	; 0xffffffec
   18258:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1825c:	cmp	r3, #0
   18260:	bgt	1826c <rb_linebuf_flush+0x204>
   18264:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18268:	b	18444 <rb_linebuf_flush+0x3dc>
   1826c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18270:	ldr	r3, [r3]
   18274:	str	r3, [fp, #-8]
   18278:	mov	r3, #0
   1827c:	str	r3, [fp, #-16]
   18280:	b	1832c <rb_linebuf_flush+0x2c4>
   18284:	ldr	r3, [fp, #-8]
   18288:	ldr	r3, [r3]
   1828c:	str	r3, [fp, #-24]	; 0xffffffe8
   18290:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18294:	ldr	r2, [r3, #1028]	; 0x404
   18298:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1829c:	ldr	r3, [r3, #20]
   182a0:	sub	r3, r2, r3
   182a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   182a8:	cmp	r2, r3
   182ac:	blt	18304 <rb_linebuf_flush+0x29c>
   182b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   182b4:	ldr	r2, [r3, #1028]	; 0x404
   182b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   182bc:	ldr	r3, [r3, #20]
   182c0:	sub	r3, r2, r3
   182c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   182c8:	sub	r3, r2, r3
   182cc:	str	r3, [fp, #-20]	; 0xffffffec
   182d0:	ldr	r3, [fp, #-8]
   182d4:	ldr	r3, [r3, #8]
   182d8:	str	r3, [fp, #-8]
   182dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   182e0:	ldr	r3, [r3]
   182e4:	mov	r2, r3
   182e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   182ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   182f0:	bl	173e0 <rb_linebuf_done_line>
   182f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   182f8:	mov	r2, #0
   182fc:	str	r2, [r3, #20]
   18300:	b	18320 <rb_linebuf_flush+0x2b8>
   18304:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18308:	ldr	r2, [r3, #20]
   1830c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18310:	add	r2, r2, r3
   18314:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18318:	str	r2, [r3, #20]
   1831c:	b	1833c <rb_linebuf_flush+0x2d4>
   18320:	ldr	r3, [fp, #-16]
   18324:	add	r3, r3, #1
   18328:	str	r3, [fp, #-16]
   1832c:	ldr	r2, [fp, #-16]
   18330:	ldr	r3, [fp, #-12]
   18334:	cmp	r2, r3
   18338:	blt	18284 <rb_linebuf_flush+0x21c>
   1833c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18340:	b	18444 <rb_linebuf_flush+0x3dc>
   18344:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18348:	ldr	r3, [r3]
   1834c:	cmp	r3, #0
   18350:	bne	1836c <rb_linebuf_flush+0x304>
   18354:	bl	4d20 <__errno_location@plt>
   18358:	mov	r2, r0
   1835c:	mov	r3, #11
   18360:	str	r3, [r2]
   18364:	mvn	r3, #0
   18368:	b	18444 <rb_linebuf_flush+0x3dc>
   1836c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18370:	ldr	r3, [r3]
   18374:	ldr	r3, [r3]
   18378:	str	r3, [fp, #-24]	; 0xffffffe8
   1837c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18380:	ldrb	r3, [r3, #1025]	; 0x401
   18384:	cmp	r3, #0
   18388:	bne	183a4 <rb_linebuf_flush+0x33c>
   1838c:	bl	4d20 <__errno_location@plt>
   18390:	mov	r2, r0
   18394:	mov	r3, #11
   18398:	str	r3, [r2]
   1839c:	mvn	r3, #0
   183a0:	b	18444 <rb_linebuf_flush+0x3dc>
   183a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   183a8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   183ac:	ldr	r2, [r2, #20]
   183b0:	add	r1, r3, r2
   183b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   183b8:	ldr	r2, [r3, #1028]	; 0x404
   183bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   183c0:	ldr	r3, [r3, #20]
   183c4:	sub	r3, r2, r3
   183c8:	mov	r2, r3
   183cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   183d0:	bl	4678 <rb_write@plt>
   183d4:	str	r0, [fp, #-28]	; 0xffffffe4
   183d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   183dc:	cmp	r3, #0
   183e0:	bgt	183ec <rb_linebuf_flush+0x384>
   183e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   183e8:	b	18444 <rb_linebuf_flush+0x3dc>
   183ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   183f0:	ldr	r2, [r3, #20]
   183f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   183f8:	add	r2, r2, r3
   183fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18400:	str	r2, [r3, #20]
   18404:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18408:	ldr	r2, [r3, #20]
   1840c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18410:	ldr	r3, [r3, #1028]	; 0x404
   18414:	cmp	r2, r3
   18418:	bne	18440 <rb_linebuf_flush+0x3d8>
   1841c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18420:	mov	r2, #0
   18424:	str	r2, [r3, #20]
   18428:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1842c:	ldr	r3, [r3]
   18430:	mov	r2, r3
   18434:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18438:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1843c:	bl	173e0 <rb_linebuf_done_line>
   18440:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18444:	mov	r0, r3
   18448:	sub	sp, fp, #4
   1844c:	ldr	fp, [sp]
   18450:	add	sp, sp, #4
   18454:	pop	{pc}		; (ldr pc, [sp], #4)
   18458:	.word	0x0003079c
   1845c:	.word	0x00030714
   18460:	.word	0x000306e4
   18464:	.word	0x00030698
   18468:	.word	0x0003067c
   1846c:	.word	0x00030608

00018470 <rb_count_rb_linebuf_memory>:
   18470:	str	fp, [sp, #-8]!
   18474:	str	lr, [sp, #4]
   18478:	add	fp, sp, #4
   1847c:	sub	sp, sp, #16
   18480:	str	r0, [fp, #-8]
   18484:	str	r1, [fp, #-12]
   18488:	ldr	r3, [pc, #48]	; 184c0 <rb_count_rb_linebuf_memory+0x50>
   1848c:	add	r3, pc, r3
   18490:	ldr	r0, [r3]
   18494:	mov	r3, #0
   18498:	str	r3, [sp]
   1849c:	ldr	r3, [fp, #-12]
   184a0:	mov	r2, #0
   184a4:	ldr	r1, [fp, #-8]
   184a8:	bl	4d44 <rb_bh_usage@plt>
   184ac:	nop	{0}
   184b0:	sub	sp, fp, #4
   184b4:	ldr	fp, [sp]
   184b8:	add	sp, sp, #4
   184bc:	pop	{pc}		; (ldr pc, [sp], #4)
   184c0:	.word	0x000303b0

000184c4 <rb_strndup>:
   184c4:	str	fp, [sp, #-8]!
   184c8:	str	lr, [sp, #4]
   184cc:	add	fp, sp, #4
   184d0:	sub	sp, sp, #16
   184d4:	str	r0, [fp, #-16]
   184d8:	str	r1, [fp, #-20]	; 0xffffffec
   184dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   184e0:	bl	49cc <malloc@plt>
   184e4:	mov	r3, r0
   184e8:	str	r3, [fp, #-8]
   184ec:	ldr	r3, [fp, #-8]
   184f0:	cmp	r3, #0
   184f4:	moveq	r3, #1
   184f8:	movne	r3, #0
   184fc:	uxtb	r3, r3
   18500:	cmp	r3, #0
   18504:	beq	1850c <rb_strndup+0x48>
   18508:	bl	49a8 <rb_outofmemory@plt>
   1850c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18510:	ldr	r1, [fp, #-16]
   18514:	ldr	r0, [fp, #-8]
   18518:	bl	46c0 <rb_strlcpy@plt>
   1851c:	ldr	r3, [fp, #-8]
   18520:	mov	r0, r3
   18524:	sub	sp, fp, #4
   18528:	ldr	fp, [sp]
   1852c:	add	sp, sp, #4
   18530:	pop	{pc}		; (ldr pc, [sp], #4)

00018534 <rb_strdup>:
   18534:	str	fp, [sp, #-8]!
   18538:	str	lr, [sp, #4]
   1853c:	add	fp, sp, #4
   18540:	sub	sp, sp, #16
   18544:	str	r0, [fp, #-16]
   18548:	ldr	r0, [fp, #-16]
   1854c:	bl	4810 <strlen@plt>
   18550:	mov	r3, r0
   18554:	add	r3, r3, #1
   18558:	mov	r0, r3
   1855c:	bl	49cc <malloc@plt>
   18560:	mov	r3, r0
   18564:	str	r3, [fp, #-8]
   18568:	ldr	r3, [fp, #-8]
   1856c:	cmp	r3, #0
   18570:	moveq	r3, #1
   18574:	movne	r3, #0
   18578:	uxtb	r3, r3
   1857c:	cmp	r3, #0
   18580:	beq	18588 <rb_strdup+0x54>
   18584:	bl	49a8 <rb_outofmemory@plt>
   18588:	ldr	r1, [fp, #-16]
   1858c:	ldr	r0, [fp, #-8]
   18590:	bl	48ac <strcpy@plt>
   18594:	ldr	r3, [fp, #-8]
   18598:	mov	r0, r3
   1859c:	sub	sp, fp, #4
   185a0:	ldr	fp, [sp]
   185a4:	add	sp, sp, #4
   185a8:	pop	{pc}		; (ldr pc, [sp], #4)

000185ac <rb_init_rb_dlink_nodes>:
   185ac:	str	fp, [sp, #-8]!
   185b0:	str	lr, [sp, #4]
   185b4:	add	fp, sp, #4
   185b8:	sub	sp, sp, #8
   185bc:	str	r0, [fp, #-8]
   185c0:	ldr	r3, [fp, #-8]
   185c4:	ldr	r2, [pc, #72]	; 18614 <rb_init_rb_dlink_nodes+0x68>
   185c8:	add	r2, pc, r2
   185cc:	mov	r1, r3
   185d0:	mov	r0, #12
   185d4:	bl	4ad4 <rb_bh_create@plt>
   185d8:	mov	r2, r0
   185dc:	ldr	r3, [pc, #52]	; 18618 <rb_init_rb_dlink_nodes+0x6c>
   185e0:	add	r3, pc, r3
   185e4:	str	r2, [r3]
   185e8:	ldr	r3, [pc, #44]	; 1861c <rb_init_rb_dlink_nodes+0x70>
   185ec:	add	r3, pc, r3
   185f0:	ldr	r3, [r3]
   185f4:	cmp	r3, #0
   185f8:	bne	18600 <rb_init_rb_dlink_nodes+0x54>
   185fc:	bl	49a8 <rb_outofmemory@plt>
   18600:	nop	{0}
   18604:	sub	sp, fp, #4
   18608:	ldr	fp, [sp]
   1860c:	add	sp, sp, #4
   18610:	pop	{pc}		; (ldr pc, [sp], #4)
   18614:	.word	0x0000c168
   18618:	.word	0x00032264
   1861c:	.word	0x00032258

00018620 <rb_make_rb_dlink_node>:
   18620:	str	fp, [sp, #-8]!
   18624:	str	lr, [sp, #4]
   18628:	add	fp, sp, #4
   1862c:	ldr	r3, [pc, #36]	; 18658 <rb_make_rb_dlink_node+0x38>
   18630:	add	r3, pc, r3
   18634:	ldr	r3, [r3]
   18638:	mov	r0, r3
   1863c:	bl	4978 <rb_bh_alloc@plt>
   18640:	mov	r3, r0
   18644:	mov	r0, r3
   18648:	sub	sp, fp, #4
   1864c:	ldr	fp, [sp]
   18650:	add	sp, sp, #4
   18654:	pop	{pc}		; (ldr pc, [sp], #4)
   18658:	.word	0x00032214

0001865c <rb_free_rb_dlink_node>:
   1865c:	str	fp, [sp, #-8]!
   18660:	str	lr, [sp, #4]
   18664:	add	fp, sp, #4
   18668:	sub	sp, sp, #8
   1866c:	str	r0, [fp, #-8]
   18670:	ldr	r3, [pc, #36]	; 1869c <rb_free_rb_dlink_node+0x40>
   18674:	add	r3, pc, r3
   18678:	ldr	r3, [r3]
   1867c:	ldr	r1, [fp, #-8]
   18680:	mov	r0, r3
   18684:	bl	48f4 <rb_bh_free@plt>
   18688:	nop	{0}
   1868c:	sub	sp, fp, #4
   18690:	ldr	fp, [sp]
   18694:	add	sp, sp, #4
   18698:	pop	{pc}		; (ldr pc, [sp], #4)
   1869c:	.word	0x000321d0

000186a0 <rb_string_to_array>:
   186a0:	str	fp, [sp, #-8]!
   186a4:	str	lr, [sp, #4]
   186a8:	add	fp, sp, #4
   186ac:	sub	sp, sp, #32
   186b0:	str	r0, [fp, #-24]	; 0xffffffe8
   186b4:	str	r1, [fp, #-28]	; 0xffffffe4
   186b8:	str	r2, [fp, #-32]	; 0xffffffe0
   186bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   186c0:	str	r3, [fp, #-12]
   186c4:	mov	r3, #0
   186c8:	str	r3, [fp, #-16]
   186cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   186d0:	cmp	r3, #0
   186d4:	beq	186e8 <rb_string_to_array+0x48>
   186d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   186dc:	ldrb	r3, [r3]
   186e0:	cmp	r3, #0
   186e4:	bne	186fc <rb_string_to_array+0x5c>
   186e8:	ldr	r3, [fp, #-16]
   186ec:	b	18854 <rb_string_to_array+0x1b4>
   186f0:	ldr	r3, [fp, #-12]
   186f4:	add	r3, r3, #1
   186f8:	str	r3, [fp, #-12]
   186fc:	ldr	r3, [fp, #-12]
   18700:	ldrb	r3, [r3]
   18704:	cmp	r3, #32
   18708:	beq	186f0 <rb_string_to_array+0x50>
   1870c:	ldr	r3, [fp, #-12]
   18710:	ldrb	r3, [r3]
   18714:	cmp	r3, #0
   18718:	bne	18724 <rb_string_to_array+0x84>
   1871c:	ldr	r3, [fp, #-16]
   18720:	b	18854 <rb_string_to_array+0x1b4>
   18724:	ldr	r3, [fp, #-12]
   18728:	ldrb	r3, [r3]
   1872c:	cmp	r3, #58	; 0x3a
   18730:	bne	18768 <rb_string_to_array+0xc8>
   18734:	ldr	r3, [fp, #-12]
   18738:	add	r3, r3, #1
   1873c:	str	r3, [fp, #-12]
   18740:	ldr	r3, [fp, #-16]
   18744:	add	r2, r3, #1
   18748:	str	r2, [fp, #-16]
   1874c:	lsl	r3, r3, #2
   18750:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18754:	add	r3, r2, r3
   18758:	ldr	r2, [fp, #-12]
   1875c:	str	r2, [r3]
   18760:	ldr	r3, [fp, #-16]
   18764:	b	18854 <rb_string_to_array+0x1b4>
   18768:	ldr	r3, [fp, #-16]
   1876c:	add	r2, r3, #1
   18770:	str	r2, [fp, #-16]
   18774:	lsl	r3, r3, #2
   18778:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1877c:	add	r3, r2, r3
   18780:	ldr	r2, [fp, #-12]
   18784:	str	r2, [r3]
   18788:	mov	r1, #32
   1878c:	ldr	r0, [fp, #-12]
   18790:	bl	45d0 <strchr@plt>
   18794:	str	r0, [fp, #-8]
   18798:	ldr	r3, [fp, #-8]
   1879c:	cmp	r3, #0
   187a0:	beq	187c4 <rb_string_to_array+0x124>
   187a4:	ldr	r3, [fp, #-8]
   187a8:	add	r2, r3, #1
   187ac:	str	r2, [fp, #-8]
   187b0:	mov	r2, #0
   187b4:	strb	r2, [r3]
   187b8:	ldr	r3, [fp, #-8]
   187bc:	str	r3, [fp, #-12]
   187c0:	b	187d8 <rb_string_to_array+0x138>
   187c4:	ldr	r3, [fp, #-16]
   187c8:	b	18854 <rb_string_to_array+0x1b4>
   187cc:	ldr	r3, [fp, #-12]
   187d0:	add	r3, r3, #1
   187d4:	str	r3, [fp, #-12]
   187d8:	ldr	r3, [fp, #-12]
   187dc:	ldrb	r3, [r3]
   187e0:	cmp	r3, #32
   187e4:	beq	187cc <rb_string_to_array+0x12c>
   187e8:	ldr	r3, [fp, #-12]
   187ec:	ldrb	r3, [r3]
   187f0:	cmp	r3, #0
   187f4:	bne	18800 <rb_string_to_array+0x160>
   187f8:	ldr	r3, [fp, #-16]
   187fc:	b	18854 <rb_string_to_array+0x1b4>
   18800:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18804:	sub	r3, r3, #1
   18808:	ldr	r2, [fp, #-16]
   1880c:	cmp	r2, r3
   18810:	blt	18724 <rb_string_to_array+0x84>
   18814:	ldr	r3, [fp, #-8]
   18818:	ldrb	r3, [r3]
   1881c:	cmp	r3, #58	; 0x3a
   18820:	bne	18830 <rb_string_to_array+0x190>
   18824:	ldr	r3, [fp, #-8]
   18828:	add	r3, r3, #1
   1882c:	str	r3, [fp, #-8]
   18830:	ldr	r3, [fp, #-16]
   18834:	add	r2, r3, #1
   18838:	str	r2, [fp, #-16]
   1883c:	lsl	r3, r3, #2
   18840:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18844:	add	r3, r2, r3
   18848:	ldr	r2, [fp, #-8]
   1884c:	str	r2, [r3]
   18850:	ldr	r3, [fp, #-16]
   18854:	mov	r0, r3
   18858:	sub	sp, fp, #4
   1885c:	ldr	fp, [sp]
   18860:	add	sp, sp, #4
   18864:	pop	{pc}		; (ldr pc, [sp], #4)

00018868 <rb_strcasecmp>:
   18868:	str	fp, [sp, #-8]!
   1886c:	str	lr, [sp, #4]
   18870:	add	fp, sp, #4
   18874:	sub	sp, sp, #8
   18878:	str	r0, [fp, #-8]
   1887c:	str	r1, [fp, #-12]
   18880:	ldr	r1, [fp, #-12]
   18884:	ldr	r0, [fp, #-8]
   18888:	bl	45e8 <strcasecmp@plt>
   1888c:	mov	r3, r0
   18890:	mov	r0, r3
   18894:	sub	sp, fp, #4
   18898:	ldr	fp, [sp]
   1889c:	add	sp, sp, #4
   188a0:	pop	{pc}		; (ldr pc, [sp], #4)

000188a4 <rb_strncasecmp>:
   188a4:	str	fp, [sp, #-8]!
   188a8:	str	lr, [sp, #4]
   188ac:	add	fp, sp, #4
   188b0:	sub	sp, sp, #16
   188b4:	str	r0, [fp, #-8]
   188b8:	str	r1, [fp, #-12]
   188bc:	str	r2, [fp, #-16]
   188c0:	ldr	r2, [fp, #-16]
   188c4:	ldr	r1, [fp, #-12]
   188c8:	ldr	r0, [fp, #-8]
   188cc:	bl	499c <strncasecmp@plt>
   188d0:	mov	r3, r0
   188d4:	mov	r0, r3
   188d8:	sub	sp, fp, #4
   188dc:	ldr	fp, [sp]
   188e0:	add	sp, sp, #4
   188e4:	pop	{pc}		; (ldr pc, [sp], #4)

000188e8 <rb_strcasestr>:
   188e8:	str	fp, [sp, #-8]!
   188ec:	str	lr, [sp, #4]
   188f0:	add	fp, sp, #4
   188f4:	sub	sp, sp, #8
   188f8:	str	r0, [fp, #-8]
   188fc:	str	r1, [fp, #-12]
   18900:	ldr	r1, [fp, #-12]
   18904:	ldr	r0, [fp, #-8]
   18908:	bl	4438 <strcasestr@plt>
   1890c:	mov	r3, r0
   18910:	mov	r0, r3
   18914:	sub	sp, fp, #4
   18918:	ldr	fp, [sp]
   1891c:	add	sp, sp, #4
   18920:	pop	{pc}		; (ldr pc, [sp], #4)

00018924 <rb_strlcat>:
   18924:	str	fp, [sp, #-8]!
   18928:	str	lr, [sp, #4]
   1892c:	add	fp, sp, #4
   18930:	sub	sp, sp, #32
   18934:	str	r0, [fp, #-24]	; 0xffffffe8
   18938:	str	r1, [fp, #-28]	; 0xffffffe4
   1893c:	str	r2, [fp, #-32]	; 0xffffffe0
   18940:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18944:	bl	4810 <strlen@plt>
   18948:	str	r0, [fp, #-12]
   1894c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18950:	bl	4810 <strlen@plt>
   18954:	str	r0, [fp, #-8]
   18958:	ldr	r2, [fp, #-12]
   1895c:	ldr	r3, [fp, #-8]
   18960:	add	r3, r2, r3
   18964:	str	r3, [fp, #-16]
   18968:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1896c:	ldr	r3, [fp, #-12]
   18970:	add	r3, r2, r3
   18974:	str	r3, [fp, #-24]	; 0xffffffe8
   18978:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1897c:	ldr	r3, [fp, #-12]
   18980:	sub	r3, r2, r3
   18984:	str	r3, [fp, #-32]	; 0xffffffe0
   18988:	ldr	r2, [fp, #-8]
   1898c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18990:	cmp	r2, r3
   18994:	bcc	189a4 <rb_strlcat+0x80>
   18998:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1899c:	sub	r3, r3, #1
   189a0:	str	r3, [fp, #-8]
   189a4:	ldr	r2, [fp, #-8]
   189a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   189ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189b0:	bl	4834 <memcpy@plt>
   189b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   189b8:	ldr	r3, [fp, #-8]
   189bc:	add	r3, r2, r3
   189c0:	mov	r2, #0
   189c4:	strb	r2, [r3]
   189c8:	ldr	r3, [fp, #-16]
   189cc:	mov	r0, r3
   189d0:	sub	sp, fp, #4
   189d4:	ldr	fp, [sp]
   189d8:	add	sp, sp, #4
   189dc:	pop	{pc}		; (ldr pc, [sp], #4)

000189e0 <rb_strlcpy>:
   189e0:	str	fp, [sp, #-8]!
   189e4:	str	lr, [sp, #4]
   189e8:	add	fp, sp, #4
   189ec:	sub	sp, sp, #24
   189f0:	str	r0, [fp, #-16]
   189f4:	str	r1, [fp, #-20]	; 0xffffffec
   189f8:	str	r2, [fp, #-24]	; 0xffffffe8
   189fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   18a00:	bl	4810 <strlen@plt>
   18a04:	str	r0, [fp, #-8]
   18a08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18a0c:	cmp	r3, #0
   18a10:	beq	18a5c <rb_strlcpy+0x7c>
   18a14:	ldr	r2, [fp, #-8]
   18a18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18a1c:	cmp	r2, r3
   18a20:	bcc	18a30 <rb_strlcpy+0x50>
   18a24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18a28:	sub	r3, r3, #1
   18a2c:	b	18a34 <rb_strlcpy+0x54>
   18a30:	ldr	r3, [fp, #-8]
   18a34:	str	r3, [fp, #-12]
   18a38:	ldr	r2, [fp, #-12]
   18a3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18a40:	ldr	r0, [fp, #-16]
   18a44:	bl	4834 <memcpy@plt>
   18a48:	ldr	r2, [fp, #-16]
   18a4c:	ldr	r3, [fp, #-12]
   18a50:	add	r3, r2, r3
   18a54:	mov	r2, #0
   18a58:	strb	r2, [r3]
   18a5c:	ldr	r3, [fp, #-8]
   18a60:	mov	r0, r3
   18a64:	sub	sp, fp, #4
   18a68:	ldr	fp, [sp]
   18a6c:	add	sp, sp, #4
   18a70:	pop	{pc}		; (ldr pc, [sp], #4)

00018a74 <rb_strnlen>:
   18a74:	str	fp, [sp, #-8]!
   18a78:	str	lr, [sp, #4]
   18a7c:	add	fp, sp, #4
   18a80:	sub	sp, sp, #8
   18a84:	str	r0, [fp, #-8]
   18a88:	str	r1, [fp, #-12]
   18a8c:	ldr	r1, [fp, #-12]
   18a90:	ldr	r0, [fp, #-8]
   18a94:	bl	4a38 <strnlen@plt>
   18a98:	mov	r3, r0
   18a9c:	mov	r0, r3
   18aa0:	sub	sp, fp, #4
   18aa4:	ldr	fp, [sp]
   18aa8:	add	sp, sp, #4
   18aac:	pop	{pc}		; (ldr pc, [sp], #4)

00018ab0 <rb_snprintf_append>:
   18ab0:	push	{r2, r3}
   18ab4:	str	fp, [sp, #-8]!
   18ab8:	str	lr, [sp, #4]
   18abc:	add	fp, sp, #4
   18ac0:	sub	sp, sp, #24
   18ac4:	str	r0, [fp, #-24]	; 0xffffffe8
   18ac8:	str	r1, [fp, #-28]	; 0xffffffe4
   18acc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18ad0:	cmp	r3, #0
   18ad4:	bne	18ae0 <rb_snprintf_append+0x30>
   18ad8:	mvn	r3, #0
   18adc:	b	18b74 <rb_snprintf_append+0xc4>
   18ae0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ae4:	bl	4810 <strlen@plt>
   18ae8:	mov	r3, r0
   18aec:	str	r3, [fp, #-8]
   18af0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18af4:	ldr	r2, [fp, #-8]
   18af8:	cmp	r2, r3
   18afc:	ble	18b24 <rb_snprintf_append+0x74>
   18b00:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18b04:	sub	r3, r3, #1
   18b08:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18b0c:	add	r3, r2, r3
   18b10:	mov	r2, #0
   18b14:	strb	r2, [r3]
   18b18:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18b1c:	sub	r3, r3, #1
   18b20:	b	18b74 <rb_snprintf_append+0xc4>
   18b24:	add	r3, fp, #8
   18b28:	str	r3, [fp, #-16]
   18b2c:	ldr	r3, [fp, #-8]
   18b30:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18b34:	add	r0, r2, r3
   18b38:	ldr	r3, [fp, #-8]
   18b3c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18b40:	sub	r1, r2, r3
   18b44:	ldr	r3, [fp, #-16]
   18b48:	ldr	r2, [fp, #4]
   18b4c:	bl	457c <vsnprintf@plt>
   18b50:	str	r0, [fp, #-12]
   18b54:	ldr	r3, [fp, #-12]
   18b58:	cmp	r3, #0
   18b5c:	bge	18b68 <rb_snprintf_append+0xb8>
   18b60:	ldr	r3, [fp, #-12]
   18b64:	b	18b74 <rb_snprintf_append+0xc4>
   18b68:	ldr	r2, [fp, #-8]
   18b6c:	ldr	r3, [fp, #-12]
   18b70:	add	r3, r2, r3
   18b74:	mov	r0, r3
   18b78:	sub	sp, fp, #4
   18b7c:	ldr	fp, [sp]
   18b80:	ldr	lr, [sp, #4]
   18b84:	add	sp, sp, #8
   18b88:	add	sp, sp, #8
   18b8c:	bx	lr

00018b90 <rb_snprintf_try_append>:
   18b90:	push	{r2, r3}
   18b94:	str	fp, [sp, #-8]!
   18b98:	str	lr, [sp, #4]
   18b9c:	add	fp, sp, #4
   18ba0:	sub	sp, sp, #24
   18ba4:	str	r0, [fp, #-24]	; 0xffffffe8
   18ba8:	str	r1, [fp, #-28]	; 0xffffffe4
   18bac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18bb0:	cmp	r3, #0
   18bb4:	bne	18bc0 <rb_snprintf_try_append+0x30>
   18bb8:	mvn	r3, #0
   18bbc:	b	18c88 <rb_snprintf_try_append+0xf8>
   18bc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bc4:	bl	4810 <strlen@plt>
   18bc8:	mov	r3, r0
   18bcc:	str	r3, [fp, #-8]
   18bd0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18bd4:	ldr	r2, [fp, #-8]
   18bd8:	cmp	r2, r3
   18bdc:	ble	18c00 <rb_snprintf_try_append+0x70>
   18be0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18be4:	sub	r3, r3, #1
   18be8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18bec:	add	r3, r2, r3
   18bf0:	mov	r2, #0
   18bf4:	strb	r2, [r3]
   18bf8:	mvn	r3, #0
   18bfc:	b	18c88 <rb_snprintf_try_append+0xf8>
   18c00:	add	r3, fp, #8
   18c04:	str	r3, [fp, #-16]
   18c08:	ldr	r3, [fp, #-8]
   18c0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18c10:	add	r0, r2, r3
   18c14:	ldr	r3, [fp, #-8]
   18c18:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18c1c:	sub	r1, r2, r3
   18c20:	ldr	r3, [fp, #-16]
   18c24:	ldr	r2, [fp, #4]
   18c28:	bl	457c <vsnprintf@plt>
   18c2c:	str	r0, [fp, #-12]
   18c30:	ldr	r3, [fp, #-12]
   18c34:	cmp	r3, #0
   18c38:	bge	18c44 <rb_snprintf_try_append+0xb4>
   18c3c:	ldr	r3, [fp, #-12]
   18c40:	b	18c88 <rb_snprintf_try_append+0xf8>
   18c44:	ldr	r2, [fp, #-8]
   18c48:	ldr	r3, [fp, #-12]
   18c4c:	add	r3, r2, r3
   18c50:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18c54:	sub	r2, r2, #1
   18c58:	cmp	r3, r2
   18c5c:	ble	18c7c <rb_snprintf_try_append+0xec>
   18c60:	ldr	r3, [fp, #-8]
   18c64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18c68:	add	r3, r2, r3
   18c6c:	mov	r2, #0
   18c70:	strb	r2, [r3]
   18c74:	mvn	r3, #0
   18c78:	b	18c88 <rb_snprintf_try_append+0xf8>
   18c7c:	ldr	r2, [fp, #-8]
   18c80:	ldr	r3, [fp, #-12]
   18c84:	add	r3, r2, r3
   18c88:	mov	r0, r3
   18c8c:	sub	sp, fp, #4
   18c90:	ldr	fp, [sp]
   18c94:	ldr	lr, [sp, #4]
   18c98:	add	sp, sp, #8
   18c9c:	add	sp, sp, #8
   18ca0:	bx	lr

00018ca4 <rb_basename>:
   18ca4:	str	fp, [sp, #-8]!
   18ca8:	str	lr, [sp, #4]
   18cac:	add	fp, sp, #4
   18cb0:	sub	sp, sp, #16
   18cb4:	str	r0, [fp, #-16]
   18cb8:	mov	r1, #47	; 0x2f
   18cbc:	ldr	r0, [fp, #-16]
   18cc0:	bl	466c <strrchr@plt>
   18cc4:	str	r0, [fp, #-8]
   18cc8:	ldr	r3, [fp, #-8]
   18ccc:	cmp	r3, #0
   18cd0:	bne	18ce0 <rb_basename+0x3c>
   18cd4:	ldr	r3, [fp, #-16]
   18cd8:	str	r3, [fp, #-8]
   18cdc:	b	18cec <rb_basename+0x48>
   18ce0:	ldr	r3, [fp, #-8]
   18ce4:	add	r3, r3, #1
   18ce8:	str	r3, [fp, #-8]
   18cec:	ldr	r0, [fp, #-8]
   18cf0:	bl	18534 <rb_strdup>
   18cf4:	mov	r3, r0
   18cf8:	mov	r0, r3
   18cfc:	sub	sp, fp, #4
   18d00:	ldr	fp, [sp]
   18d04:	add	sp, sp, #4
   18d08:	pop	{pc}		; (ldr pc, [sp], #4)

00018d0c <rb_dirname>:
   18d0c:	str	fp, [sp, #-8]!
   18d10:	str	lr, [sp, #4]
   18d14:	add	fp, sp, #4
   18d18:	sub	sp, sp, #16
   18d1c:	str	r0, [fp, #-16]
   18d20:	mov	r1, #47	; 0x2f
   18d24:	ldr	r0, [fp, #-16]
   18d28:	bl	466c <strrchr@plt>
   18d2c:	str	r0, [fp, #-8]
   18d30:	ldr	r3, [fp, #-8]
   18d34:	cmp	r3, #0
   18d38:	bne	18d60 <rb_dirname+0x54>
   18d3c:	ldr	r3, [pc, #112]	; 18db4 <rb_dirname+0xa8>
   18d40:	add	r3, pc, r3
   18d44:	mov	r0, r3
   18d48:	bl	18534 <rb_strdup>
   18d4c:	mov	r3, r0
   18d50:	b	18da0 <rb_dirname+0x94>
   18d54:	ldr	r3, [fp, #-8]
   18d58:	sub	r3, r3, #1
   18d5c:	str	r3, [fp, #-8]
   18d60:	ldr	r2, [fp, #-8]
   18d64:	ldr	r3, [fp, #-16]
   18d68:	cmp	r2, r3
   18d6c:	bls	18d80 <rb_dirname+0x74>
   18d70:	ldr	r3, [fp, #-8]
   18d74:	ldrb	r3, [r3]
   18d78:	cmp	r3, #47	; 0x2f
   18d7c:	beq	18d54 <rb_dirname+0x48>
   18d80:	ldr	r2, [fp, #-8]
   18d84:	ldr	r3, [fp, #-16]
   18d88:	sub	r3, r2, r3
   18d8c:	add	r3, r3, #2
   18d90:	mov	r1, r3
   18d94:	ldr	r0, [fp, #-16]
   18d98:	bl	184c4 <rb_strndup>
   18d9c:	mov	r3, r0
   18da0:	mov	r0, r3
   18da4:	sub	sp, fp, #4
   18da8:	ldr	fp, [sp]
   18dac:	add	sp, sp, #4
   18db0:	pop	{pc}		; (ldr pc, [sp], #4)
   18db4:	.word	0x0000ba04

00018db8 <rb_fsnprint>:
   18db8:	str	fp, [sp, #-8]!
   18dbc:	str	lr, [sp, #4]
   18dc0:	add	fp, sp, #4
   18dc4:	sub	sp, sp, #32
   18dc8:	str	r0, [fp, #-24]	; 0xffffffe8
   18dcc:	str	r1, [fp, #-28]	; 0xffffffe4
   18dd0:	str	r2, [fp, #-32]	; 0xffffffe0
   18dd4:	mov	r3, #0
   18dd8:	str	r3, [fp, #-8]
   18ddc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18de0:	str	r3, [fp, #-12]
   18de4:	b	18f84 <rb_fsnprint+0x1cc>
   18de8:	mov	r3, #0
   18dec:	str	r3, [fp, #-16]
   18df0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18df4:	ldr	r3, [r3]
   18df8:	cmp	r3, #0
   18dfc:	beq	18e34 <rb_fsnprint+0x7c>
   18e00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18e04:	ldr	r3, [r3]
   18e08:	str	r3, [fp, #-12]
   18e0c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18e10:	ldr	r3, [fp, #-8]
   18e14:	sub	r3, r2, r3
   18e18:	ldr	r2, [fp, #-12]
   18e1c:	cmp	r2, r3
   18e20:	bls	18e34 <rb_fsnprint+0x7c>
   18e24:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18e28:	ldr	r3, [fp, #-8]
   18e2c:	sub	r3, r2, r3
   18e30:	str	r3, [fp, #-12]
   18e34:	ldr	r3, [fp, #-12]
   18e38:	cmp	r3, #0
   18e3c:	beq	18f94 <rb_fsnprint+0x1dc>
   18e40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18e44:	ldr	r3, [r3, #4]
   18e48:	cmp	r3, #0
   18e4c:	beq	18ebc <rb_fsnprint+0x104>
   18e50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18e54:	ldr	r3, [r3, #12]
   18e58:	cmp	r3, #0
   18e5c:	beq	18e90 <rb_fsnprint+0xd8>
   18e60:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18e64:	ldr	r3, [fp, #-8]
   18e68:	add	r0, r2, r3
   18e6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18e70:	ldr	r2, [r3, #4]
   18e74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18e78:	ldr	r3, [r3, #12]
   18e7c:	ldr	r3, [r3]
   18e80:	ldr	r1, [fp, #-12]
   18e84:	bl	457c <vsnprintf@plt>
   18e88:	str	r0, [fp, #-16]
   18e8c:	b	18ef4 <rb_fsnprint+0x13c>
   18e90:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18e94:	ldr	r3, [fp, #-8]
   18e98:	add	r0, r2, r3
   18e9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18ea0:	ldr	r3, [r3, #4]
   18ea4:	ldr	r2, [fp, #-12]
   18ea8:	mov	r1, r3
   18eac:	bl	46c0 <rb_strlcpy@plt>
   18eb0:	mov	r3, r0
   18eb4:	str	r3, [fp, #-16]
   18eb8:	b	18ef4 <rb_fsnprint+0x13c>
   18ebc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18ec0:	ldr	r3, [r3, #8]
   18ec4:	cmp	r3, #0
   18ec8:	beq	18ef4 <rb_fsnprint+0x13c>
   18ecc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18ed0:	ldr	r3, [r3, #8]
   18ed4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ed8:	ldr	r2, [fp, #-8]
   18edc:	add	r0, r1, r2
   18ee0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18ee4:	ldr	r2, [r2, #12]
   18ee8:	ldr	r1, [fp, #-12]
   18eec:	blx	r3
   18ef0:	str	r0, [fp, #-16]
   18ef4:	ldr	r3, [fp, #-16]
   18ef8:	cmp	r3, #0
   18efc:	bge	18f08 <rb_fsnprint+0x150>
   18f00:	ldr	r3, [fp, #-16]
   18f04:	b	18f9c <rb_fsnprint+0x1e4>
   18f08:	ldr	r3, [fp, #-12]
   18f0c:	sub	r2, r3, #1
   18f10:	ldr	r3, [fp, #-16]
   18f14:	cmp	r2, r3
   18f18:	bcs	18f34 <rb_fsnprint+0x17c>
   18f1c:	ldr	r2, [fp, #-12]
   18f20:	ldr	r3, [fp, #-8]
   18f24:	add	r3, r2, r3
   18f28:	sub	r3, r3, #1
   18f2c:	str	r3, [fp, #-8]
   18f30:	b	18f44 <rb_fsnprint+0x18c>
   18f34:	ldr	r3, [fp, #-16]
   18f38:	ldr	r2, [fp, #-8]
   18f3c:	add	r3, r2, r3
   18f40:	str	r3, [fp, #-8]
   18f44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18f48:	sub	r3, r3, #1
   18f4c:	ldr	r2, [fp, #-8]
   18f50:	cmp	r2, r3
   18f54:	bcc	18f68 <rb_fsnprint+0x1b0>
   18f58:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18f5c:	sub	r3, r3, #1
   18f60:	str	r3, [fp, #-8]
   18f64:	b	18f98 <rb_fsnprint+0x1e0>
   18f68:	ldr	r3, [fp, #-16]
   18f6c:	ldr	r2, [fp, #-12]
   18f70:	sub	r3, r2, r3
   18f74:	str	r3, [fp, #-12]
   18f78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18f7c:	ldr	r3, [r3, #16]
   18f80:	str	r3, [fp, #-32]	; 0xffffffe0
   18f84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18f88:	cmp	r3, #0
   18f8c:	bne	18de8 <rb_fsnprint+0x30>
   18f90:	b	18f98 <rb_fsnprint+0x1e0>
   18f94:	nop	{0}
   18f98:	ldr	r3, [fp, #-8]
   18f9c:	mov	r0, r3
   18fa0:	sub	sp, fp, #4
   18fa4:	ldr	fp, [sp]
   18fa8:	add	sp, sp, #4
   18fac:	pop	{pc}		; (ldr pc, [sp], #4)

00018fb0 <rb_fsnprintf>:
   18fb0:	push	{r3}		; (str r3, [sp, #-4]!)
   18fb4:	str	fp, [sp, #-8]!
   18fb8:	str	lr, [sp, #4]
   18fbc:	add	fp, sp, #4
   18fc0:	sub	sp, sp, #52	; 0x34
   18fc4:	str	r0, [fp, #-44]	; 0xffffffd4
   18fc8:	str	r1, [fp, #-48]	; 0xffffffd0
   18fcc:	str	r2, [fp, #-52]	; 0xffffffcc
   18fd0:	sub	r1, fp, #36	; 0x24
   18fd4:	mov	r2, #0
   18fd8:	mov	r3, #0
   18fdc:	strd	r2, [r1]
   18fe0:	strd	r2, [r1, #8]
   18fe4:	mov	r3, r2
   18fe8:	str	r3, [r1, #16]
   18fec:	ldr	r3, [fp, #4]
   18ff0:	str	r3, [fp, #-32]	; 0xffffffe0
   18ff4:	sub	r3, fp, #16
   18ff8:	str	r3, [fp, #-24]	; 0xffffffe8
   18ffc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19000:	str	r3, [fp, #-20]	; 0xffffffec
   19004:	add	r3, fp, #8
   19008:	str	r3, [fp, #-16]
   1900c:	sub	r3, fp, #36	; 0x24
   19010:	mov	r2, r3
   19014:	ldr	r1, [fp, #-48]	; 0xffffffd0
   19018:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1901c:	bl	46b4 <rb_fsnprint@plt>
   19020:	str	r0, [fp, #-12]
   19024:	ldr	r3, [fp, #-12]
   19028:	mov	r0, r3
   1902c:	sub	sp, fp, #4
   19030:	ldr	fp, [sp]
   19034:	ldr	lr, [sp, #4]
   19038:	add	sp, sp, #8
   1903c:	add	sp, sp, #4
   19040:	bx	lr

00019044 <rb_malloc>:
   19044:	str	fp, [sp, #-8]!
   19048:	str	lr, [sp, #4]
   1904c:	add	fp, sp, #4
   19050:	sub	sp, sp, #16
   19054:	str	r0, [fp, #-16]
   19058:	ldr	r1, [fp, #-16]
   1905c:	mov	r0, #1
   19060:	bl	460c <calloc@plt>
   19064:	mov	r3, r0
   19068:	str	r3, [fp, #-8]
   1906c:	ldr	r3, [fp, #-8]
   19070:	cmp	r3, #0
   19074:	moveq	r3, #1
   19078:	movne	r3, #0
   1907c:	uxtb	r3, r3
   19080:	cmp	r3, #0
   19084:	beq	1908c <rb_malloc+0x48>
   19088:	bl	49a8 <rb_outofmemory@plt>
   1908c:	ldr	r3, [fp, #-8]
   19090:	mov	r0, r3
   19094:	sub	sp, fp, #4
   19098:	ldr	fp, [sp]
   1909c:	add	sp, sp, #4
   190a0:	pop	{pc}		; (ldr pc, [sp], #4)

000190a4 <rb_free>:
   190a4:	str	fp, [sp, #-8]!
   190a8:	str	lr, [sp, #4]
   190ac:	add	fp, sp, #4
   190b0:	sub	sp, sp, #8
   190b4:	str	r0, [fp, #-8]
   190b8:	ldr	r3, [fp, #-8]
   190bc:	cmp	r3, #0
   190c0:	movne	r3, #1
   190c4:	moveq	r3, #0
   190c8:	uxtb	r3, r3
   190cc:	cmp	r3, #0
   190d0:	beq	190dc <rb_free+0x38>
   190d4:	ldr	r0, [fp, #-8]
   190d8:	bl	4720 <free@plt>
   190dc:	nop	{0}
   190e0:	sub	sp, fp, #4
   190e4:	ldr	fp, [sp]
   190e8:	add	sp, sp, #4
   190ec:	pop	{pc}		; (ldr pc, [sp], #4)

000190f0 <rb_helper_child>:
   190f0:	str	fp, [sp, #-8]!
   190f4:	str	lr, [sp, #4]
   190f8:	add	fp, sp, #4
   190fc:	sub	sp, sp, #64	; 0x40
   19100:	str	r0, [fp, #-40]	; 0xffffffd8
   19104:	str	r1, [fp, #-44]	; 0xffffffd4
   19108:	str	r2, [fp, #-48]	; 0xffffffd0
   1910c:	str	r3, [fp, #-52]	; 0xffffffcc
   19110:	mov	r3, #0
   19114:	str	r3, [fp, #-8]
   19118:	ldr	r3, [pc, #636]	; 1939c <rb_helper_child+0x2ac>
   1911c:	add	r3, pc, r3
   19120:	mov	r0, r3
   19124:	bl	45b8 <getenv@plt>
   19128:	str	r0, [fp, #-12]
   1912c:	ldr	r3, [pc, #620]	; 193a0 <rb_helper_child+0x2b0>
   19130:	add	r3, pc, r3
   19134:	mov	r0, r3
   19138:	bl	45b8 <getenv@plt>
   1913c:	str	r0, [fp, #-16]
   19140:	ldr	r3, [pc, #604]	; 193a4 <rb_helper_child+0x2b4>
   19144:	add	r3, pc, r3
   19148:	mov	r0, r3
   1914c:	bl	45b8 <getenv@plt>
   19150:	str	r0, [fp, #-20]	; 0xffffffec
   19154:	ldr	r3, [fp, #-12]
   19158:	cmp	r3, #0
   1915c:	beq	19178 <rb_helper_child+0x88>
   19160:	ldr	r3, [fp, #-16]
   19164:	cmp	r3, #0
   19168:	beq	19178 <rb_helper_child+0x88>
   1916c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19170:	cmp	r3, #0
   19174:	bne	19180 <rb_helper_child+0x90>
   19178:	mov	r3, #0
   1917c:	b	19388 <rb_helper_child+0x298>
   19180:	mov	r0, #84	; 0x54
   19184:	bl	19044 <rb_malloc>
   19188:	str	r0, [fp, #-24]	; 0xffffffe8
   1918c:	mov	r2, #10
   19190:	mov	r1, #0
   19194:	ldr	r0, [fp, #-12]
   19198:	bl	4894 <strtol@plt>
   1919c:	str	r0, [fp, #-28]	; 0xffffffe4
   191a0:	mov	r2, #10
   191a4:	mov	r1, #0
   191a8:	ldr	r0, [fp, #-16]
   191ac:	bl	4894 <strtol@plt>
   191b0:	str	r0, [fp, #-32]	; 0xffffffe0
   191b4:	mov	r2, #10
   191b8:	mov	r1, #0
   191bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   191c0:	bl	4894 <strtol@plt>
   191c4:	str	r0, [fp, #-36]	; 0xffffffdc
   191c8:	mov	r3, #0
   191cc:	str	r3, [fp, #-8]
   191d0:	b	19208 <rb_helper_child+0x118>
   191d4:	ldr	r2, [fp, #-8]
   191d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   191dc:	cmp	r2, r3
   191e0:	beq	191fc <rb_helper_child+0x10c>
   191e4:	ldr	r2, [fp, #-8]
   191e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   191ec:	cmp	r2, r3
   191f0:	beq	191fc <rb_helper_child+0x10c>
   191f4:	ldr	r0, [fp, #-8]
   191f8:	bl	4960 <close@plt>
   191fc:	ldr	r3, [fp, #-8]
   19200:	add	r3, r3, #1
   19204:	str	r3, [fp, #-8]
   19208:	ldr	r2, [fp, #-8]
   1920c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19210:	cmp	r2, r3
   19214:	blt	191d4 <rb_helper_child+0xe4>
   19218:	mov	r1, #2
   1921c:	ldr	r3, [pc, #388]	; 193a8 <rb_helper_child+0x2b8>
   19220:	add	r3, pc, r3
   19224:	mov	r0, r3
   19228:	bl	439c <open@plt>
   1922c:	str	r0, [fp, #-8]
   19230:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19234:	cmp	r3, #0
   19238:	beq	19254 <rb_helper_child+0x164>
   1923c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19240:	cmp	r3, #0
   19244:	beq	19254 <rb_helper_child+0x164>
   19248:	mov	r1, #0
   1924c:	ldr	r0, [fp, #-8]
   19250:	bl	4ae0 <dup2@plt>
   19254:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19258:	cmp	r3, #1
   1925c:	beq	19278 <rb_helper_child+0x188>
   19260:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19264:	cmp	r3, #1
   19268:	beq	19278 <rb_helper_child+0x188>
   1926c:	mov	r1, #1
   19270:	ldr	r0, [fp, #-8]
   19274:	bl	4ae0 <dup2@plt>
   19278:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1927c:	cmp	r3, #2
   19280:	beq	1929c <rb_helper_child+0x1ac>
   19284:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19288:	cmp	r3, #2
   1928c:	beq	1929c <rb_helper_child+0x1ac>
   19290:	mov	r1, #2
   19294:	ldr	r0, [fp, #-8]
   19298:	bl	4ae0 <dup2@plt>
   1929c:	ldr	r3, [fp, #-8]
   192a0:	cmp	r3, #2
   192a4:	ble	192b0 <rb_helper_child+0x1c0>
   192a8:	ldr	r0, [fp, #-8]
   192ac:	bl	4960 <close@plt>
   192b0:	ldr	r3, [fp, #16]
   192b4:	str	r3, [sp, #8]
   192b8:	ldr	r3, [fp, #12]
   192bc:	str	r3, [sp, #4]
   192c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   192c4:	str	r3, [sp]
   192c8:	mov	r3, #0
   192cc:	ldr	r2, [fp, #4]
   192d0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   192d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   192d8:	bl	4a5c <rb_lib_init@plt>
   192dc:	ldr	r0, [fp, #8]
   192e0:	bl	4b7c <rb_linebuf_init@plt>
   192e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   192e8:	add	r3, r3, #4
   192ec:	mov	r0, r3
   192f0:	bl	4b10 <rb_linebuf_newbuf@plt>
   192f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   192f8:	add	r3, r3, #32
   192fc:	mov	r0, r3
   19300:	bl	4b10 <rb_linebuf_newbuf@plt>
   19304:	ldr	r3, [pc, #160]	; 193ac <rb_helper_child+0x2bc>
   19308:	add	r3, pc, r3
   1930c:	mov	r2, r3
   19310:	mov	r1, #8
   19314:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19318:	bl	4aa4 <rb_open@plt>
   1931c:	mov	r2, r0
   19320:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19324:	str	r2, [r3, #60]	; 0x3c
   19328:	ldr	r3, [pc, #128]	; 193b0 <rb_helper_child+0x2c0>
   1932c:	add	r3, pc, r3
   19330:	mov	r2, r3
   19334:	mov	r1, #8
   19338:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1933c:	bl	4aa4 <rb_open@plt>
   19340:	mov	r2, r0
   19344:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19348:	str	r2, [r3, #64]	; 0x40
   1934c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19350:	ldr	r3, [r3, #60]	; 0x3c
   19354:	mov	r0, r3
   19358:	bl	463c <rb_set_nb@plt>
   1935c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19360:	ldr	r3, [r3, #64]	; 0x40
   19364:	mov	r0, r3
   19368:	bl	463c <rb_set_nb@plt>
   1936c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19370:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19374:	str	r2, [r3, #76]	; 0x4c
   19378:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1937c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   19380:	str	r2, [r3, #80]	; 0x50
   19384:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19388:	mov	r0, r3
   1938c:	sub	sp, fp, #4
   19390:	ldr	fp, [sp]
   19394:	add	sp, sp, #4
   19398:	pop	{pc}		; (ldr pc, [sp], #4)
   1939c:	.word	0x0000b62c
   193a0:	.word	0x0000b61c
   193a4:	.word	0x0000b60c
   193a8:	.word	0x0000b538
   193ac:	.word	0x0000b45c
   193b0:	.word	0x0000b44c

000193b4 <rb_helper_start>:
   193b4:	str	fp, [sp, #-8]!
   193b8:	str	lr, [sp, #4]
   193bc:	add	fp, sp, #4
   193c0:	sub	sp, sp, #208	; 0xd0
   193c4:	str	r0, [fp, #-200]	; 0xffffff38
   193c8:	str	r1, [fp, #-204]	; 0xffffff34
   193cc:	str	r2, [fp, #-208]	; 0xffffff30
   193d0:	str	r3, [fp, #-212]	; 0xffffff2c
   193d4:	mov	r1, #1
   193d8:	ldr	r0, [fp, #-204]	; 0xffffff34
   193dc:	bl	4768 <access@plt>
   193e0:	mov	r3, r0
   193e4:	cmn	r3, #1
   193e8:	bne	193f4 <rb_helper_start+0x40>
   193ec:	mov	r3, #0
   193f0:	b	19674 <rb_helper_start+0x2c0>
   193f4:	mov	r0, #84	; 0x54
   193f8:	bl	19044 <rb_malloc>
   193fc:	str	r0, [fp, #-8]
   19400:	sub	r0, fp, #148	; 0x94
   19404:	ldr	r3, [fp, #-200]	; 0xffffff38
   19408:	ldr	r2, [pc, #632]	; 19688 <rb_helper_start+0x2d4>
   1940c:	add	r2, pc, r2
   19410:	mov	r1, #128	; 0x80
   19414:	bl	4bdc <snprintf@plt>
   19418:	sub	r2, fp, #148	; 0x94
   1941c:	sub	r3, fp, #188	; 0xbc
   19420:	add	r1, r3, #4
   19424:	sub	r3, fp, #188	; 0xbc
   19428:	mov	r0, r3
   1942c:	bl	4990 <rb_pipe@plt>
   19430:	mov	r3, r0
   19434:	cmp	r3, #0
   19438:	bge	1944c <rb_helper_start+0x98>
   1943c:	ldr	r0, [fp, #-8]
   19440:	bl	190a4 <rb_free>
   19444:	mov	r3, #0
   19448:	b	19674 <rb_helper_start+0x2c0>
   1944c:	sub	r0, fp, #148	; 0x94
   19450:	ldr	r3, [fp, #-200]	; 0xffffff38
   19454:	ldr	r2, [pc, #560]	; 1968c <rb_helper_start+0x2d8>
   19458:	add	r2, pc, r2
   1945c:	mov	r1, #128	; 0x80
   19460:	bl	4bdc <snprintf@plt>
   19464:	sub	r2, fp, #148	; 0x94
   19468:	sub	r3, fp, #196	; 0xc4
   1946c:	add	r1, r3, #4
   19470:	sub	r3, fp, #196	; 0xc4
   19474:	mov	r0, r3
   19478:	bl	4990 <rb_pipe@plt>
   1947c:	mov	r3, r0
   19480:	cmp	r3, #0
   19484:	bge	19498 <rb_helper_start+0xe4>
   19488:	ldr	r0, [fp, #-8]
   1948c:	bl	190a4 <rb_free>
   19490:	mov	r3, #0
   19494:	b	19674 <rb_helper_start+0x2c0>
   19498:	ldr	r3, [fp, #-184]	; 0xffffff48
   1949c:	mov	r0, r3
   194a0:	bl	4504 <rb_get_fd@plt>
   194a4:	mov	r3, r0
   194a8:	sub	r0, fp, #164	; 0xa4
   194ac:	ldr	r2, [pc, #476]	; 19690 <rb_helper_start+0x2dc>
   194b0:	add	r2, pc, r2
   194b4:	mov	r1, #16
   194b8:	bl	4bdc <snprintf@plt>
   194bc:	ldr	r3, [fp, #-196]	; 0xffffff3c
   194c0:	mov	r0, r3
   194c4:	bl	4504 <rb_get_fd@plt>
   194c8:	mov	r3, r0
   194cc:	sub	r0, fp, #180	; 0xb4
   194d0:	ldr	r2, [pc, #444]	; 19694 <rb_helper_start+0x2e0>
   194d4:	add	r2, pc, r2
   194d8:	mov	r1, #16
   194dc:	bl	4bdc <snprintf@plt>
   194e0:	ldr	r3, [fp, #-188]	; 0xffffff44
   194e4:	mov	r0, r3
   194e8:	bl	463c <rb_set_nb@plt>
   194ec:	ldr	r3, [fp, #-184]	; 0xffffff48
   194f0:	mov	r0, r3
   194f4:	bl	463c <rb_set_nb@plt>
   194f8:	ldr	r3, [fp, #-196]	; 0xffffff3c
   194fc:	mov	r0, r3
   19500:	bl	463c <rb_set_nb@plt>
   19504:	ldr	r3, [fp, #-192]	; 0xffffff40
   19508:	mov	r0, r3
   1950c:	bl	463c <rb_set_nb@plt>
   19510:	sub	r3, fp, #180	; 0xb4
   19514:	mov	r2, #1
   19518:	mov	r1, r3
   1951c:	ldr	r3, [pc, #372]	; 19698 <rb_helper_start+0x2e4>
   19520:	add	r3, pc, r3
   19524:	mov	r0, r3
   19528:	bl	44ec <rb_setenv@plt>
   1952c:	sub	r3, fp, #164	; 0xa4
   19530:	mov	r2, #1
   19534:	mov	r1, r3
   19538:	ldr	r3, [pc, #348]	; 1969c <rb_helper_start+0x2e8>
   1953c:	add	r3, pc, r3
   19540:	mov	r0, r3
   19544:	bl	44ec <rb_setenv@plt>
   19548:	mov	r2, #1
   1954c:	ldr	r3, [pc, #332]	; 196a0 <rb_helper_start+0x2ec>
   19550:	add	r3, pc, r3
   19554:	mov	r1, r3
   19558:	ldr	r3, [pc, #324]	; 196a4 <rb_helper_start+0x2f0>
   1955c:	add	r3, pc, r3
   19560:	mov	r0, r3
   19564:	bl	44ec <rb_setenv@plt>
   19568:	sub	r0, fp, #148	; 0x94
   1956c:	ldr	r3, [fp, #-200]	; 0xffffff38
   19570:	ldr	r2, [pc, #304]	; 196a8 <rb_helper_start+0x2f4>
   19574:	add	r2, pc, r2
   19578:	mov	r1, #128	; 0x80
   1957c:	bl	4bdc <snprintf@plt>
   19580:	sub	r3, fp, #148	; 0x94
   19584:	str	r3, [fp, #-20]	; 0xffffffec
   19588:	mov	r3, #0
   1958c:	str	r3, [fp, #-16]
   19590:	sub	r3, fp, #20
   19594:	mov	r1, r3
   19598:	ldr	r0, [fp, #-204]	; 0xffffff34
   1959c:	bl	4bc4 <rb_spawn_process@plt>
   195a0:	str	r0, [fp, #-12]
   195a4:	ldr	r3, [fp, #-12]
   195a8:	cmn	r3, #1
   195ac:	bne	195f0 <rb_helper_start+0x23c>
   195b0:	ldr	r3, [fp, #-188]	; 0xffffff44
   195b4:	mov	r0, r3
   195b8:	bl	4888 <rb_close@plt>
   195bc:	ldr	r3, [fp, #-184]	; 0xffffff48
   195c0:	mov	r0, r3
   195c4:	bl	4888 <rb_close@plt>
   195c8:	ldr	r3, [fp, #-196]	; 0xffffff3c
   195cc:	mov	r0, r3
   195d0:	bl	4888 <rb_close@plt>
   195d4:	ldr	r3, [fp, #-192]	; 0xffffff40
   195d8:	mov	r0, r3
   195dc:	bl	4888 <rb_close@plt>
   195e0:	ldr	r0, [fp, #-8]
   195e4:	bl	190a4 <rb_free>
   195e8:	mov	r3, #0
   195ec:	b	19674 <rb_helper_start+0x2c0>
   195f0:	ldr	r3, [fp, #-184]	; 0xffffff48
   195f4:	mov	r0, r3
   195f8:	bl	4888 <rb_close@plt>
   195fc:	ldr	r3, [fp, #-196]	; 0xffffff3c
   19600:	mov	r0, r3
   19604:	bl	4888 <rb_close@plt>
   19608:	ldr	r3, [fp, #-8]
   1960c:	add	r3, r3, #4
   19610:	mov	r0, r3
   19614:	bl	4b10 <rb_linebuf_newbuf@plt>
   19618:	ldr	r3, [fp, #-8]
   1961c:	add	r3, r3, #32
   19620:	mov	r0, r3
   19624:	bl	4b10 <rb_linebuf_newbuf@plt>
   19628:	ldr	r2, [fp, #-188]	; 0xffffff44
   1962c:	ldr	r3, [fp, #-8]
   19630:	str	r2, [r3, #60]	; 0x3c
   19634:	ldr	r2, [fp, #-192]	; 0xffffff40
   19638:	ldr	r3, [fp, #-8]
   1963c:	str	r2, [r3, #64]	; 0x40
   19640:	ldr	r3, [fp, #-8]
   19644:	ldr	r2, [fp, #-208]	; 0xffffff30
   19648:	str	r2, [r3, #76]	; 0x4c
   1964c:	ldr	r3, [fp, #-8]
   19650:	ldr	r2, [fp, #-212]	; 0xffffff2c
   19654:	str	r2, [r3, #80]	; 0x50
   19658:	ldr	r3, [fp, #-8]
   1965c:	mov	r2, #0
   19660:	str	r2, [r3, #72]	; 0x48
   19664:	ldr	r3, [fp, #-8]
   19668:	ldr	r2, [fp, #-12]
   1966c:	str	r2, [r3, #68]	; 0x44
   19670:	ldr	r3, [fp, #-8]
   19674:	mov	r0, r3
   19678:	sub	sp, fp, #4
   1967c:	ldr	fp, [sp]
   19680:	add	sp, sp, #4
   19684:	pop	{pc}		; (ldr pc, [sp], #4)
   19688:	.word	0x0000b380
   1968c:	.word	0x0000b348
   19690:	.word	0x0000b304
   19694:	.word	0x0000b2e0
   19698:	.word	0x0000b228
   1969c:	.word	0x0000b210
   196a0:	.word	0x0000b268
   196a4:	.word	0x0000b1f4
   196a8:	.word	0x0000b248

000196ac <rb_helper_restart>:
   196ac:	str	fp, [sp, #-8]!
   196b0:	str	lr, [sp, #4]
   196b4:	add	fp, sp, #4
   196b8:	sub	sp, sp, #8
   196bc:	str	r0, [fp, #-8]
   196c0:	ldr	r3, [fp, #-8]
   196c4:	ldr	r3, [r3, #80]	; 0x50
   196c8:	ldr	r0, [fp, #-8]
   196cc:	blx	r3
   196d0:	nop	{0}
   196d4:	sub	sp, fp, #4
   196d8:	ldr	fp, [sp]
   196dc:	add	sp, sp, #4
   196e0:	pop	{pc}		; (ldr pc, [sp], #4)

000196e4 <rb_helper_write_sendq>:
   196e4:	str	fp, [sp, #-8]!
   196e8:	str	lr, [sp, #4]
   196ec:	add	fp, sp, #4
   196f0:	sub	sp, sp, #16
   196f4:	str	r0, [fp, #-16]
   196f8:	str	r1, [fp, #-20]	; 0xffffffec
   196fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   19700:	str	r3, [fp, #-8]
   19704:	ldr	r3, [fp, #-8]
   19708:	ldr	r3, [r3, #16]
   1970c:	cmp	r3, #0
   19710:	ble	19780 <rb_helper_write_sendq+0x9c>
   19714:	nop	{0}
   19718:	ldr	r3, [fp, #-8]
   1971c:	add	r3, r3, #4
   19720:	mov	r1, r3
   19724:	ldr	r0, [fp, #-16]
   19728:	bl	47f8 <rb_linebuf_flush@plt>
   1972c:	str	r0, [fp, #-12]
   19730:	ldr	r3, [fp, #-12]
   19734:	cmp	r3, #0
   19738:	bgt	19718 <rb_helper_write_sendq+0x34>
   1973c:	ldr	r3, [fp, #-12]
   19740:	cmp	r3, #0
   19744:	beq	19774 <rb_helper_write_sendq+0x90>
   19748:	ldr	r3, [fp, #-12]
   1974c:	cmp	r3, #0
   19750:	bge	19780 <rb_helper_write_sendq+0x9c>
   19754:	bl	4d20 <__errno_location@plt>
   19758:	mov	r3, r0
   1975c:	ldr	r3, [r3]
   19760:	mov	r0, r3
   19764:	bl	43fc <rb_ignore_errno@plt>
   19768:	mov	r3, r0
   1976c:	cmp	r3, #0
   19770:	bne	19780 <rb_helper_write_sendq+0x9c>
   19774:	ldr	r0, [fp, #-8]
   19778:	bl	45f4 <rb_helper_restart@plt>
   1977c:	b	197ac <rb_helper_write_sendq+0xc8>
   19780:	ldr	r3, [fp, #-8]
   19784:	ldr	r3, [r3, #16]
   19788:	cmp	r3, #0
   1978c:	ble	197ac <rb_helper_write_sendq+0xc8>
   19790:	ldr	r3, [fp, #-8]
   19794:	ldr	r0, [r3, #64]	; 0x40
   19798:	ldr	r3, [fp, #-8]
   1979c:	ldr	r2, [pc, #24]	; 197bc <rb_helper_write_sendq+0xd8>
   197a0:	add	r2, pc, r2
   197a4:	mov	r1, #2
   197a8:	bl	44c8 <rb_setselect@plt>
   197ac:	sub	sp, fp, #4
   197b0:	ldr	fp, [sp]
   197b4:	add	sp, sp, #4
   197b8:	pop	{pc}		; (ldr pc, [sp], #4)
   197bc:	.word	0xffffff3c

000197c0 <rb_helper_write_queue>:
   197c0:	push	{r1, r2, r3}
   197c4:	str	fp, [sp, #-8]!
   197c8:	str	lr, [sp, #4]
   197cc:	add	fp, sp, #4
   197d0:	sub	sp, sp, #36	; 0x24
   197d4:	str	r0, [fp, #-36]	; 0xffffffdc
   197d8:	sub	r1, fp, #32
   197dc:	mov	r2, #0
   197e0:	mov	r3, #0
   197e4:	strd	r2, [r1]
   197e8:	strd	r2, [r1, #8]
   197ec:	mov	r3, r2
   197f0:	str	r3, [r1, #16]
   197f4:	ldr	r3, [fp, #4]
   197f8:	str	r3, [fp, #-28]	; 0xffffffe4
   197fc:	sub	r3, fp, #12
   19800:	str	r3, [fp, #-20]	; 0xffffffec
   19804:	add	r3, fp, #8
   19808:	str	r3, [fp, #-12]
   1980c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19810:	add	r3, r3, #4
   19814:	sub	r2, fp, #32
   19818:	mov	r1, r2
   1981c:	mov	r0, r3
   19820:	bl	4c18 <rb_linebuf_put@plt>
   19824:	nop	{0}
   19828:	sub	sp, fp, #4
   1982c:	ldr	fp, [sp]
   19830:	ldr	lr, [sp, #4]
   19834:	add	sp, sp, #8
   19838:	add	sp, sp, #12
   1983c:	bx	lr

00019840 <rb_helper_write_flush>:
   19840:	str	fp, [sp, #-8]!
   19844:	str	lr, [sp, #4]
   19848:	add	fp, sp, #4
   1984c:	sub	sp, sp, #8
   19850:	str	r0, [fp, #-8]
   19854:	ldr	r3, [fp, #-8]
   19858:	ldr	r3, [r3, #64]	; 0x40
   1985c:	ldr	r1, [fp, #-8]
   19860:	mov	r0, r3
   19864:	bl	196e4 <rb_helper_write_sendq>
   19868:	nop	{0}
   1986c:	sub	sp, fp, #4
   19870:	ldr	fp, [sp]
   19874:	add	sp, sp, #4
   19878:	pop	{pc}		; (ldr pc, [sp], #4)

0001987c <rb_helper_write>:
   1987c:	push	{r1, r2, r3}
   19880:	str	fp, [sp, #-8]!
   19884:	str	lr, [sp, #4]
   19888:	add	fp, sp, #4
   1988c:	sub	sp, sp, #36	; 0x24
   19890:	str	r0, [fp, #-36]	; 0xffffffdc
   19894:	sub	r1, fp, #32
   19898:	mov	r2, #0
   1989c:	mov	r3, #0
   198a0:	strd	r2, [r1]
   198a4:	strd	r2, [r1, #8]
   198a8:	mov	r3, r2
   198ac:	str	r3, [r1, #16]
   198b0:	ldr	r3, [fp, #4]
   198b4:	str	r3, [fp, #-28]	; 0xffffffe4
   198b8:	sub	r3, fp, #12
   198bc:	str	r3, [fp, #-20]	; 0xffffffec
   198c0:	add	r3, fp, #8
   198c4:	str	r3, [fp, #-12]
   198c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   198cc:	add	r3, r3, #4
   198d0:	sub	r2, fp, #32
   198d4:	mov	r1, r2
   198d8:	mov	r0, r3
   198dc:	bl	4c18 <rb_linebuf_put@plt>
   198e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   198e4:	bl	19840 <rb_helper_write_flush>
   198e8:	nop	{0}
   198ec:	sub	sp, fp, #4
   198f0:	ldr	fp, [sp]
   198f4:	ldr	lr, [sp, #4]
   198f8:	add	sp, sp, #8
   198fc:	add	sp, sp, #12
   19900:	bx	lr

00019904 <rb_helper_read_cb>:
   19904:	str	fp, [sp, #-8]!
   19908:	str	lr, [sp, #4]
   1990c:	add	fp, sp, #4
   19910:	sub	sp, sp, #16
   19914:	str	r0, [fp, #-16]
   19918:	str	r1, [fp, #-20]	; 0xffffffec
   1991c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19920:	str	r3, [fp, #-8]
   19924:	ldr	r3, [fp, #-8]
   19928:	cmp	r3, #0
   1992c:	beq	199f0 <rb_helper_read_cb+0xec>
   19930:	b	19960 <rb_helper_read_cb+0x5c>
   19934:	ldr	r3, [fp, #-8]
   19938:	add	r0, r3, #32
   1993c:	mov	r3, #0
   19940:	ldr	r2, [fp, #-12]
   19944:	ldr	r1, [pc, #184]	; 19a04 <rb_helper_read_cb+0x100>
   19948:	add	r1, pc, r1
   1994c:	bl	469c <rb_linebuf_parse@plt>
   19950:	ldr	r3, [fp, #-8]
   19954:	ldr	r3, [r3, #76]	; 0x4c
   19958:	ldr	r0, [fp, #-8]
   1995c:	blx	r3
   19960:	ldr	r3, [fp, #-8]
   19964:	ldr	r3, [r3, #60]	; 0x3c
   19968:	mov	r2, #32768	; 0x8000
   1996c:	ldr	r1, [pc, #148]	; 19a08 <rb_helper_read_cb+0x104>
   19970:	add	r1, pc, r1
   19974:	mov	r0, r3
   19978:	bl	47b0 <rb_read@plt>
   1997c:	str	r0, [fp, #-12]
   19980:	ldr	r3, [fp, #-12]
   19984:	cmp	r3, #0
   19988:	bgt	19934 <rb_helper_read_cb+0x30>
   1998c:	ldr	r3, [fp, #-12]
   19990:	cmp	r3, #0
   19994:	beq	199c4 <rb_helper_read_cb+0xc0>
   19998:	ldr	r3, [fp, #-12]
   1999c:	cmp	r3, #0
   199a0:	bge	199d0 <rb_helper_read_cb+0xcc>
   199a4:	bl	4d20 <__errno_location@plt>
   199a8:	mov	r3, r0
   199ac:	ldr	r3, [r3]
   199b0:	mov	r0, r3
   199b4:	bl	43fc <rb_ignore_errno@plt>
   199b8:	mov	r3, r0
   199bc:	cmp	r3, #0
   199c0:	bne	199d0 <rb_helper_read_cb+0xcc>
   199c4:	ldr	r0, [fp, #-8]
   199c8:	bl	45f4 <rb_helper_restart@plt>
   199cc:	b	199f4 <rb_helper_read_cb+0xf0>
   199d0:	ldr	r3, [fp, #-8]
   199d4:	ldr	r0, [r3, #60]	; 0x3c
   199d8:	ldr	r3, [fp, #-8]
   199dc:	ldr	r2, [pc, #40]	; 19a0c <rb_helper_read_cb+0x108>
   199e0:	add	r2, pc, r2
   199e4:	mov	r1, #1
   199e8:	bl	44c8 <rb_setselect@plt>
   199ec:	b	199f4 <rb_helper_read_cb+0xf0>
   199f0:	nop	{0}
   199f4:	sub	sp, fp, #4
   199f8:	ldr	fp, [sp]
   199fc:	add	sp, sp, #4
   19a00:	pop	{pc}		; (ldr pc, [sp], #4)
   19a04:	.word	0x00030f00
   19a08:	.word	0x00030ed8
   19a0c:	.word	0xffffff1c

00019a10 <rb_helper_run>:
   19a10:	str	fp, [sp, #-8]!
   19a14:	str	lr, [sp, #4]
   19a18:	add	fp, sp, #4
   19a1c:	sub	sp, sp, #8
   19a20:	str	r0, [fp, #-8]
   19a24:	ldr	r3, [fp, #-8]
   19a28:	cmp	r3, #0
   19a2c:	beq	19a48 <rb_helper_run+0x38>
   19a30:	ldr	r3, [fp, #-8]
   19a34:	ldr	r3, [r3, #60]	; 0x3c
   19a38:	ldr	r1, [fp, #-8]
   19a3c:	mov	r0, r3
   19a40:	bl	19904 <rb_helper_read_cb>
   19a44:	b	19a4c <rb_helper_run+0x3c>
   19a48:	nop	{0}
   19a4c:	sub	sp, fp, #4
   19a50:	ldr	fp, [sp]
   19a54:	add	sp, sp, #4
   19a58:	pop	{pc}		; (ldr pc, [sp], #4)

00019a5c <rb_helper_close>:
   19a5c:	str	fp, [sp, #-8]!
   19a60:	str	lr, [sp, #4]
   19a64:	add	fp, sp, #4
   19a68:	sub	sp, sp, #8
   19a6c:	str	r0, [fp, #-8]
   19a70:	ldr	r3, [fp, #-8]
   19a74:	cmp	r3, #0
   19a78:	beq	19abc <rb_helper_close+0x60>
   19a7c:	ldr	r3, [fp, #-8]
   19a80:	ldr	r3, [r3, #68]	; 0x44
   19a84:	mov	r1, #9
   19a88:	mov	r0, r3
   19a8c:	bl	4714 <rb_kill@plt>
   19a90:	ldr	r3, [fp, #-8]
   19a94:	ldr	r3, [r3, #60]	; 0x3c
   19a98:	mov	r0, r3
   19a9c:	bl	4888 <rb_close@plt>
   19aa0:	ldr	r3, [fp, #-8]
   19aa4:	ldr	r3, [r3, #64]	; 0x40
   19aa8:	mov	r0, r3
   19aac:	bl	4888 <rb_close@plt>
   19ab0:	ldr	r0, [fp, #-8]
   19ab4:	bl	190a4 <rb_free>
   19ab8:	b	19ac0 <rb_helper_close+0x64>
   19abc:	nop	{0}
   19ac0:	sub	sp, fp, #4
   19ac4:	ldr	fp, [sp]
   19ac8:	add	sp, sp, #4
   19acc:	pop	{pc}		; (ldr pc, [sp], #4)

00019ad0 <rb_helper_read>:
   19ad0:	str	fp, [sp, #-8]!
   19ad4:	str	lr, [sp, #4]
   19ad8:	add	fp, sp, #4
   19adc:	sub	sp, sp, #24
   19ae0:	str	r0, [fp, #-8]
   19ae4:	str	r1, [fp, #-12]
   19ae8:	str	r2, [fp, #-16]
   19aec:	ldr	r3, [fp, #-8]
   19af0:	add	r0, r3, #32
   19af4:	ldr	r2, [fp, #-16]
   19af8:	mov	r3, #0
   19afc:	str	r3, [sp]
   19b00:	mov	r3, #0
   19b04:	ldr	r1, [fp, #-12]
   19b08:	bl	47c8 <rb_linebuf_get@plt>
   19b0c:	mov	r3, r0
   19b10:	mov	r0, r3
   19b14:	sub	sp, fp, #4
   19b18:	ldr	fp, [sp]
   19b1c:	add	sp, sp, #4
   19b20:	pop	{pc}		; (ldr pc, [sp], #4)

00019b24 <rb_helper_loop>:
   19b24:	str	fp, [sp, #-8]!
   19b28:	str	lr, [sp, #4]
   19b2c:	add	fp, sp, #4
   19b30:	sub	sp, sp, #8
   19b34:	str	r0, [fp, #-8]
   19b38:	str	r1, [fp, #-12]
   19b3c:	ldr	r0, [fp, #-8]
   19b40:	bl	4384 <rb_helper_run@plt>
   19b44:	ldr	r0, [fp, #-12]
   19b48:	bl	4774 <rb_lib_loop@plt>

00019b4c <rb_init_netio_devpoll>:
   19b4c:	push	{fp}		; (str fp, [sp, #-4]!)
   19b50:	add	fp, sp, #0
   19b54:	mov	r3, #38	; 0x26
   19b58:	mov	r0, r3
   19b5c:	add	sp, fp, #0
   19b60:	pop	{fp}		; (ldr fp, [sp], #4)
   19b64:	bx	lr

00019b68 <rb_setselect_devpoll>:
   19b68:	str	fp, [sp, #-8]!
   19b6c:	str	lr, [sp, #4]
   19b70:	add	fp, sp, #4
   19b74:	sub	sp, sp, #16
   19b78:	str	r0, [fp, #-8]
   19b7c:	str	r1, [fp, #-12]
   19b80:	str	r2, [fp, #-16]
   19b84:	str	r3, [fp, #-20]	; 0xffffffec
   19b88:	bl	4d20 <__errno_location@plt>
   19b8c:	mov	r2, r0
   19b90:	mov	r3, #38	; 0x26
   19b94:	str	r3, [r2]
   19b98:	nop	{0}
   19b9c:	sub	sp, fp, #4
   19ba0:	ldr	fp, [sp]
   19ba4:	add	sp, sp, #4
   19ba8:	pop	{pc}		; (ldr pc, [sp], #4)

00019bac <rb_select_devpoll>:
   19bac:	str	fp, [sp, #-8]!
   19bb0:	str	lr, [sp, #4]
   19bb4:	add	fp, sp, #4
   19bb8:	sub	sp, sp, #8
   19bbc:	str	r0, [fp, #-8]
   19bc0:	bl	4d20 <__errno_location@plt>
   19bc4:	mov	r2, r0
   19bc8:	mov	r3, #38	; 0x26
   19bcc:	str	r3, [r2]
   19bd0:	mvn	r3, #0
   19bd4:	mov	r0, r3
   19bd8:	sub	sp, fp, #4
   19bdc:	ldr	fp, [sp]
   19be0:	add	sp, sp, #4
   19be4:	pop	{pc}		; (ldr pc, [sp], #4)

00019be8 <rb_setup_fd_devpoll>:
   19be8:	str	fp, [sp, #-8]!
   19bec:	str	lr, [sp, #4]
   19bf0:	add	fp, sp, #4
   19bf4:	sub	sp, sp, #8
   19bf8:	str	r0, [fp, #-8]
   19bfc:	bl	4d20 <__errno_location@plt>
   19c00:	mov	r2, r0
   19c04:	mov	r3, #38	; 0x26
   19c08:	str	r3, [r2]
   19c0c:	mvn	r3, #0
   19c10:	mov	r0, r3
   19c14:	sub	sp, fp, #4
   19c18:	ldr	fp, [sp]
   19c1c:	add	sp, sp, #4
   19c20:	pop	{pc}		; (ldr pc, [sp], #4)

00019c24 <rb_malloc>:
   19c24:	str	fp, [sp, #-8]!
   19c28:	str	lr, [sp, #4]
   19c2c:	add	fp, sp, #4
   19c30:	sub	sp, sp, #16
   19c34:	str	r0, [fp, #-16]
   19c38:	ldr	r1, [fp, #-16]
   19c3c:	mov	r0, #1
   19c40:	bl	460c <calloc@plt>
   19c44:	mov	r3, r0
   19c48:	str	r3, [fp, #-8]
   19c4c:	ldr	r3, [fp, #-8]
   19c50:	cmp	r3, #0
   19c54:	moveq	r3, #1
   19c58:	movne	r3, #0
   19c5c:	uxtb	r3, r3
   19c60:	cmp	r3, #0
   19c64:	beq	19c6c <rb_malloc+0x48>
   19c68:	bl	49a8 <rb_outofmemory@plt>
   19c6c:	ldr	r3, [fp, #-8]
   19c70:	mov	r0, r3
   19c74:	sub	sp, fp, #4
   19c78:	ldr	fp, [sp]
   19c7c:	add	sp, sp, #4
   19c80:	pop	{pc}		; (ldr pc, [sp], #4)

00019c84 <rb_free>:
   19c84:	str	fp, [sp, #-8]!
   19c88:	str	lr, [sp, #4]
   19c8c:	add	fp, sp, #4
   19c90:	sub	sp, sp, #8
   19c94:	str	r0, [fp, #-8]
   19c98:	ldr	r3, [fp, #-8]
   19c9c:	cmp	r3, #0
   19ca0:	movne	r3, #1
   19ca4:	moveq	r3, #0
   19ca8:	uxtb	r3, r3
   19cac:	cmp	r3, #0
   19cb0:	beq	19cbc <rb_free+0x38>
   19cb4:	ldr	r0, [fp, #-8]
   19cb8:	bl	4720 <free@plt>
   19cbc:	nop	{0}
   19cc0:	sub	sp, fp, #4
   19cc4:	ldr	fp, [sp]
   19cc8:	add	sp, sp, #4
   19ccc:	pop	{pc}		; (ldr pc, [sp], #4)

00019cd0 <rb_init_netio_epoll>:
   19cd0:	strd	r4, [sp, #-16]!
   19cd4:	str	fp, [sp, #8]
   19cd8:	str	lr, [sp, #12]
   19cdc:	add	fp, sp, #12
   19ce0:	ldr	r3, [pc, #260]	; 19dec <rb_init_netio_epoll+0x11c>
   19ce4:	add	r3, pc, r3
   19ce8:	mov	r2, #0
   19cec:	str	r2, [r3]
   19cf0:	ldr	r3, [pc, #248]	; 19df0 <rb_init_netio_epoll+0x120>
   19cf4:	add	r3, pc, r3
   19cf8:	mov	r2, #0
   19cfc:	str	r2, [r3]
   19d00:	mov	r0, #12
   19d04:	bl	19c24 <rb_malloc>
   19d08:	mov	r2, r0
   19d0c:	ldr	r3, [pc, #224]	; 19df4 <rb_init_netio_epoll+0x124>
   19d10:	add	r3, pc, r3
   19d14:	str	r2, [r3]
   19d18:	ldr	r3, [pc, #216]	; 19df8 <rb_init_netio_epoll+0x128>
   19d1c:	add	r3, pc, r3
   19d20:	ldr	r4, [r3]
   19d24:	bl	43d8 <getdtablesize@plt>
   19d28:	mov	r3, r0
   19d2c:	str	r3, [r4, #8]
   19d30:	ldr	r3, [pc, #196]	; 19dfc <rb_init_netio_epoll+0x12c>
   19d34:	add	r3, pc, r3
   19d38:	ldr	r3, [r3]
   19d3c:	ldr	r2, [r3, #8]
   19d40:	ldr	r3, [pc, #184]	; 19e00 <rb_init_netio_epoll+0x130>
   19d44:	add	r3, pc, r3
   19d48:	ldr	r4, [r3]
   19d4c:	mov	r0, r2
   19d50:	bl	4510 <epoll_create@plt>
   19d54:	mov	r3, r0
   19d58:	str	r3, [r4]
   19d5c:	ldr	r3, [pc, #160]	; 19e04 <rb_init_netio_epoll+0x134>
   19d60:	add	r3, pc, r3
   19d64:	ldr	r3, [r3]
   19d68:	ldr	r3, [r3]
   19d6c:	cmp	r3, #0
   19d70:	bge	19d7c <rb_init_netio_epoll+0xac>
   19d74:	mvn	r3, #0
   19d78:	b	19dd4 <rb_init_netio_epoll+0x104>
   19d7c:	ldr	r3, [pc, #132]	; 19e08 <rb_init_netio_epoll+0x138>
   19d80:	add	r3, pc, r3
   19d84:	ldr	r3, [r3]
   19d88:	ldr	r3, [r3]
   19d8c:	ldr	r2, [pc, #120]	; 19e0c <rb_init_netio_epoll+0x13c>
   19d90:	add	r2, pc, r2
   19d94:	mov	r1, #64	; 0x40
   19d98:	mov	r0, r3
   19d9c:	bl	4aa4 <rb_open@plt>
   19da0:	ldr	r3, [pc, #104]	; 19e10 <rb_init_netio_epoll+0x140>
   19da4:	add	r3, pc, r3
   19da8:	ldr	r3, [r3]
   19dac:	ldr	r3, [r3, #8]
   19db0:	lsl	r2, r3, #4
   19db4:	ldr	r3, [pc, #88]	; 19e14 <rb_init_netio_epoll+0x144>
   19db8:	add	r3, pc, r3
   19dbc:	ldr	r4, [r3]
   19dc0:	mov	r0, r2
   19dc4:	bl	19c24 <rb_malloc>
   19dc8:	mov	r3, r0
   19dcc:	str	r3, [r4, #4]
   19dd0:	mov	r3, #0
   19dd4:	mov	r0, r3
   19dd8:	sub	sp, fp, #12
   19ddc:	ldrd	r4, [sp]
   19de0:	ldr	fp, [sp, #8]
   19de4:	add	sp, sp, #12
   19de8:	pop	{pc}		; (ldr pc, [sp], #4)
   19dec:	.word	0x00038b68
   19df0:	.word	0x00038b5c
   19df4:	.word	0x00038b38
   19df8:	.word	0x00038b2c
   19dfc:	.word	0x00038b14
   19e00:	.word	0x00038b04
   19e04:	.word	0x00038ae8
   19e08:	.word	0x00038ac8
   19e0c:	.word	0x0000aa3c
   19e10:	.word	0x00038aa4
   19e14:	.word	0x00038a90

00019e18 <rb_setup_fd_epoll>:
   19e18:	push	{fp}		; (str fp, [sp, #-4]!)
   19e1c:	add	fp, sp, #0
   19e20:	sub	sp, sp, #12
   19e24:	str	r0, [fp, #-8]
   19e28:	mov	r3, #0
   19e2c:	mov	r0, r3
   19e30:	add	sp, fp, #0
   19e34:	pop	{fp}		; (ldr fp, [sp], #4)
   19e38:	bx	lr

00019e3c <rb_setselect_epoll>:
   19e3c:	str	fp, [sp, #-8]!
   19e40:	str	lr, [sp, #4]
   19e44:	add	fp, sp, #4
   19e48:	sub	sp, sp, #40	; 0x28
   19e4c:	str	r0, [fp, #-32]	; 0xffffffe0
   19e50:	str	r1, [fp, #-36]	; 0xffffffdc
   19e54:	str	r2, [fp, #-40]	; 0xffffffd8
   19e58:	str	r3, [fp, #-44]	; 0xffffffd4
   19e5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19e60:	ldr	r3, [r3, #20]
   19e64:	str	r3, [fp, #-12]
   19e68:	mvn	r3, #0
   19e6c:	str	r3, [fp, #-8]
   19e70:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19e74:	and	r3, r3, #1
   19e78:	cmp	r3, #0
   19e7c:	beq	19ed0 <rb_setselect_epoll+0x94>
   19e80:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19e84:	cmp	r3, #0
   19e88:	beq	19ea4 <rb_setselect_epoll+0x68>
   19e8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19e90:	ldr	r3, [r3, #20]
   19e94:	orr	r2, r3, #1
   19e98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19e9c:	str	r2, [r3, #20]
   19ea0:	b	19eb8 <rb_setselect_epoll+0x7c>
   19ea4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19ea8:	ldr	r3, [r3, #20]
   19eac:	bic	r2, r3, #1
   19eb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19eb4:	str	r2, [r3, #20]
   19eb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19ebc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19ec0:	str	r2, [r3, #28]
   19ec4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19ec8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   19ecc:	str	r2, [r3, #32]
   19ed0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19ed4:	and	r3, r3, #2
   19ed8:	cmp	r3, #0
   19edc:	beq	19f30 <rb_setselect_epoll+0xf4>
   19ee0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19ee4:	cmp	r3, #0
   19ee8:	beq	19f04 <rb_setselect_epoll+0xc8>
   19eec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19ef0:	ldr	r3, [r3, #20]
   19ef4:	orr	r2, r3, #4
   19ef8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19efc:	str	r2, [r3, #20]
   19f00:	b	19f18 <rb_setselect_epoll+0xdc>
   19f04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19f08:	ldr	r3, [r3, #20]
   19f0c:	bic	r2, r3, #4
   19f10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19f14:	str	r2, [r3, #20]
   19f18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19f1c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19f20:	str	r2, [r3, #36]	; 0x24
   19f24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19f28:	ldr	r2, [fp, #-44]	; 0xffffffd4
   19f2c:	str	r2, [r3, #40]	; 0x28
   19f30:	ldr	r3, [fp, #-12]
   19f34:	cmp	r3, #0
   19f38:	bne	19f4c <rb_setselect_epoll+0x110>
   19f3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19f40:	ldr	r3, [r3, #20]
   19f44:	cmp	r3, #0
   19f48:	beq	1a050 <rb_setselect_epoll+0x214>
   19f4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19f50:	ldr	r3, [r3, #20]
   19f54:	cmp	r3, #0
   19f58:	bgt	19f68 <rb_setselect_epoll+0x12c>
   19f5c:	mov	r3, #2
   19f60:	str	r3, [fp, #-8]
   19f64:	b	19fac <rb_setselect_epoll+0x170>
   19f68:	ldr	r3, [fp, #-12]
   19f6c:	cmp	r3, #0
   19f70:	bne	19f90 <rb_setselect_epoll+0x154>
   19f74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19f78:	ldr	r3, [r3, #20]
   19f7c:	cmp	r3, #0
   19f80:	ble	19f90 <rb_setselect_epoll+0x154>
   19f84:	mov	r3, #1
   19f88:	str	r3, [fp, #-8]
   19f8c:	b	19fac <rb_setselect_epoll+0x170>
   19f90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19f94:	ldr	r3, [r3, #20]
   19f98:	ldr	r2, [fp, #-12]
   19f9c:	cmp	r2, r3
   19fa0:	beq	19fac <rb_setselect_epoll+0x170>
   19fa4:	mov	r3, #3
   19fa8:	str	r3, [fp, #-8]
   19fac:	ldr	r3, [fp, #-8]
   19fb0:	cmn	r3, #1
   19fb4:	beq	1a058 <rb_setselect_epoll+0x21c>
   19fb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19fbc:	ldr	r3, [r3, #20]
   19fc0:	str	r3, [fp, #-28]	; 0xffffffe4
   19fc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19fc8:	str	r3, [fp, #-20]	; 0xffffffec
   19fcc:	ldr	r3, [fp, #-8]
   19fd0:	cmp	r3, #1
   19fd4:	beq	19fe4 <rb_setselect_epoll+0x1a8>
   19fd8:	ldr	r3, [fp, #-8]
   19fdc:	cmp	r3, #3
   19fe0:	bne	19ff0 <rb_setselect_epoll+0x1b4>
   19fe4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19fe8:	orr	r3, r3, #-2147483648	; 0x80000000
   19fec:	str	r3, [fp, #-28]	; 0xffffffe4
   19ff0:	ldr	r3, [pc, #116]	; 1a06c <rb_setselect_epoll+0x230>
   19ff4:	add	r3, pc, r3
   19ff8:	ldr	r3, [r3]
   19ffc:	ldr	r0, [r3]
   1a000:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a004:	ldr	r2, [r3, #12]
   1a008:	sub	r3, fp, #28
   1a00c:	ldr	r1, [fp, #-8]
   1a010:	bl	4c84 <epoll_ctl@plt>
   1a014:	mov	r3, r0
   1a018:	cmp	r3, #0
   1a01c:	beq	1a05c <rb_setselect_epoll+0x220>
   1a020:	bl	4d20 <__errno_location@plt>
   1a024:	mov	r3, r0
   1a028:	ldr	r3, [r3]
   1a02c:	mov	r0, r3
   1a030:	bl	43c0 <strerror@plt>
   1a034:	mov	r3, r0
   1a038:	mov	r1, r3
   1a03c:	ldr	r3, [pc, #44]	; 1a070 <rb_setselect_epoll+0x234>
   1a040:	add	r3, pc, r3
   1a044:	mov	r0, r3
   1a048:	bl	493c <rb_lib_log@plt>
   1a04c:	bl	43e4 <abort@plt>
   1a050:	nop	{0}
   1a054:	b	1a05c <rb_setselect_epoll+0x220>
   1a058:	nop	{0}
   1a05c:	sub	sp, fp, #4
   1a060:	ldr	fp, [sp]
   1a064:	add	sp, sp, #4
   1a068:	pop	{pc}		; (ldr pc, [sp], #4)
   1a06c:	.word	0x00038854
   1a070:	.word	0x0000a7a4

0001a074 <rb_select_epoll>:
   1a074:	str	fp, [sp, #-8]!
   1a078:	str	lr, [sp, #4]
   1a07c:	add	fp, sp, #4
   1a080:	sub	sp, sp, #64	; 0x40
   1a084:	str	r0, [fp, #-64]	; 0xffffffc0
   1a088:	ldr	r3, [pc, #828]	; 1a3cc <rb_select_epoll+0x358>
   1a08c:	add	r3, pc, r3
   1a090:	ldr	r3, [r3]
   1a094:	ldr	r0, [r3]
   1a098:	ldr	r3, [pc, #816]	; 1a3d0 <rb_select_epoll+0x35c>
   1a09c:	add	r3, pc, r3
   1a0a0:	ldr	r3, [r3]
   1a0a4:	ldr	r1, [r3, #4]
   1a0a8:	ldr	r3, [pc, #804]	; 1a3d4 <rb_select_epoll+0x360>
   1a0ac:	add	r3, pc, r3
   1a0b0:	ldr	r3, [r3]
   1a0b4:	ldr	r2, [r3, #8]
   1a0b8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1a0bc:	bl	47e0 <epoll_wait@plt>
   1a0c0:	str	r0, [fp, #-20]	; 0xffffffec
   1a0c4:	bl	4d20 <__errno_location@plt>
   1a0c8:	mov	r3, r0
   1a0cc:	ldr	r3, [r3]
   1a0d0:	str	r3, [fp, #-24]	; 0xffffffe8
   1a0d4:	bl	49b4 <rb_set_time@plt>
   1a0d8:	bl	4d20 <__errno_location@plt>
   1a0dc:	mov	r2, r0
   1a0e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a0e4:	str	r3, [r2]
   1a0e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a0ec:	cmp	r3, #0
   1a0f0:	bge	1a110 <rb_select_epoll+0x9c>
   1a0f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a0f8:	bl	43fc <rb_ignore_errno@plt>
   1a0fc:	mov	r3, r0
   1a100:	cmp	r3, #0
   1a104:	bne	1a110 <rb_select_epoll+0x9c>
   1a108:	mov	r3, #5
   1a10c:	b	1a3b8 <rb_select_epoll+0x344>
   1a110:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a114:	cmp	r3, #0
   1a118:	bgt	1a124 <rb_select_epoll+0xb0>
   1a11c:	mov	r3, #0
   1a120:	b	1a3b8 <rb_select_epoll+0x344>
   1a124:	mov	r3, #0
   1a128:	str	r3, [fp, #-8]
   1a12c:	b	1a3a4 <rb_select_epoll+0x330>
   1a130:	ldr	r3, [pc, #672]	; 1a3d8 <rb_select_epoll+0x364>
   1a134:	add	r3, pc, r3
   1a138:	ldr	r3, [r3]
   1a13c:	ldr	r2, [r3, #4]
   1a140:	ldr	r3, [fp, #-8]
   1a144:	lsl	r3, r3, #4
   1a148:	add	r3, r2, r3
   1a14c:	ldr	r3, [r3, #8]
   1a150:	str	r3, [fp, #-28]	; 0xffffffe4
   1a154:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a158:	ldr	r3, [r3, #20]
   1a15c:	str	r3, [fp, #-32]	; 0xffffffe0
   1a160:	ldr	r3, [pc, #628]	; 1a3dc <rb_select_epoll+0x368>
   1a164:	add	r3, pc, r3
   1a168:	ldr	r3, [r3]
   1a16c:	ldr	r2, [r3, #4]
   1a170:	ldr	r3, [fp, #-8]
   1a174:	lsl	r3, r3, #4
   1a178:	add	r3, r2, r3
   1a17c:	ldr	r3, [r3]
   1a180:	and	r3, r3, #25
   1a184:	cmp	r3, #0
   1a188:	beq	1a1d8 <rb_select_epoll+0x164>
   1a18c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a190:	ldr	r3, [r3, #28]
   1a194:	str	r3, [fp, #-36]	; 0xffffffdc
   1a198:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a19c:	ldr	r3, [r3, #32]
   1a1a0:	str	r3, [fp, #-40]	; 0xffffffd8
   1a1a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a1a8:	mov	r2, #0
   1a1ac:	str	r2, [r3, #28]
   1a1b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a1b4:	mov	r2, #0
   1a1b8:	str	r2, [r3, #32]
   1a1bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a1c0:	cmp	r3, #0
   1a1c4:	beq	1a1d8 <rb_select_epoll+0x164>
   1a1c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a1cc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a1d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a1d4:	blx	r3
   1a1d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a1dc:	ldrb	r3, [r3, #16]
   1a1e0:	and	r3, r3, #1
   1a1e4:	cmp	r3, #0
   1a1e8:	beq	1a38c <rb_select_epoll+0x318>
   1a1ec:	ldr	r3, [pc, #492]	; 1a3e0 <rb_select_epoll+0x36c>
   1a1f0:	add	r3, pc, r3
   1a1f4:	ldr	r3, [r3]
   1a1f8:	ldr	r2, [r3, #4]
   1a1fc:	ldr	r3, [fp, #-8]
   1a200:	lsl	r3, r3, #4
   1a204:	add	r3, r2, r3
   1a208:	ldr	r3, [r3]
   1a20c:	and	r3, r3, #28
   1a210:	cmp	r3, #0
   1a214:	beq	1a264 <rb_select_epoll+0x1f0>
   1a218:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a21c:	ldr	r3, [r3, #36]	; 0x24
   1a220:	str	r3, [fp, #-36]	; 0xffffffdc
   1a224:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a228:	ldr	r3, [r3, #40]	; 0x28
   1a22c:	str	r3, [fp, #-40]	; 0xffffffd8
   1a230:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a234:	mov	r2, #0
   1a238:	str	r2, [r3, #36]	; 0x24
   1a23c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a240:	mov	r2, #0
   1a244:	str	r2, [r3, #40]	; 0x28
   1a248:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a24c:	cmp	r3, #0
   1a250:	beq	1a264 <rb_select_epoll+0x1f0>
   1a254:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a258:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a25c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a260:	blx	r3
   1a264:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a268:	ldrb	r3, [r3, #16]
   1a26c:	and	r3, r3, #1
   1a270:	cmp	r3, #0
   1a274:	beq	1a394 <rb_select_epoll+0x320>
   1a278:	mov	r3, #0
   1a27c:	str	r3, [fp, #-12]
   1a280:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a284:	ldr	r3, [r3, #28]
   1a288:	cmp	r3, #0
   1a28c:	beq	1a29c <rb_select_epoll+0x228>
   1a290:	ldr	r3, [fp, #-12]
   1a294:	orr	r3, r3, #1
   1a298:	str	r3, [fp, #-12]
   1a29c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a2a0:	ldr	r3, [r3, #36]	; 0x24
   1a2a4:	cmp	r3, #0
   1a2a8:	beq	1a2b8 <rb_select_epoll+0x244>
   1a2ac:	ldr	r3, [fp, #-12]
   1a2b0:	orr	r3, r3, #4
   1a2b4:	str	r3, [fp, #-12]
   1a2b8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a2bc:	ldr	r3, [fp, #-12]
   1a2c0:	cmp	r2, r3
   1a2c4:	beq	1a398 <rb_select_epoll+0x324>
   1a2c8:	ldr	r3, [fp, #-12]
   1a2cc:	cmp	r3, #0
   1a2d0:	bne	1a2e0 <rb_select_epoll+0x26c>
   1a2d4:	mov	r3, #2
   1a2d8:	str	r3, [fp, #-16]
   1a2dc:	b	1a2e8 <rb_select_epoll+0x274>
   1a2e0:	mov	r3, #3
   1a2e4:	str	r3, [fp, #-16]
   1a2e8:	ldr	r3, [fp, #-12]
   1a2ec:	str	r3, [fp, #-60]	; 0xffffffc4
   1a2f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a2f4:	mov	r2, r3
   1a2f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a2fc:	str	r2, [r3, #20]
   1a300:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a304:	str	r3, [fp, #-52]	; 0xffffffcc
   1a308:	ldr	r3, [fp, #-16]
   1a30c:	cmp	r3, #3
   1a310:	beq	1a320 <rb_select_epoll+0x2ac>
   1a314:	ldr	r3, [fp, #-16]
   1a318:	cmp	r3, #1
   1a31c:	bne	1a32c <rb_select_epoll+0x2b8>
   1a320:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a324:	orr	r3, r3, #-2147483648	; 0x80000000
   1a328:	str	r3, [fp, #-60]	; 0xffffffc4
   1a32c:	ldr	r3, [pc, #176]	; 1a3e4 <rb_select_epoll+0x370>
   1a330:	add	r3, pc, r3
   1a334:	ldr	r3, [r3]
   1a338:	ldr	r0, [r3]
   1a33c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a340:	ldr	r2, [r3, #12]
   1a344:	sub	r3, fp, #60	; 0x3c
   1a348:	ldr	r1, [fp, #-16]
   1a34c:	bl	4c84 <epoll_ctl@plt>
   1a350:	mov	r3, r0
   1a354:	cmp	r3, #0
   1a358:	beq	1a398 <rb_select_epoll+0x324>
   1a35c:	bl	4d20 <__errno_location@plt>
   1a360:	mov	r3, r0
   1a364:	ldr	r3, [r3]
   1a368:	mov	r0, r3
   1a36c:	bl	43c0 <strerror@plt>
   1a370:	mov	r3, r0
   1a374:	mov	r1, r3
   1a378:	ldr	r3, [pc, #104]	; 1a3e8 <rb_select_epoll+0x374>
   1a37c:	add	r3, pc, r3
   1a380:	mov	r0, r3
   1a384:	bl	493c <rb_lib_log@plt>
   1a388:	b	1a398 <rb_select_epoll+0x324>
   1a38c:	nop	{0}
   1a390:	b	1a398 <rb_select_epoll+0x324>
   1a394:	nop	{0}
   1a398:	ldr	r3, [fp, #-8]
   1a39c:	add	r3, r3, #1
   1a3a0:	str	r3, [fp, #-8]
   1a3a4:	ldr	r2, [fp, #-8]
   1a3a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a3ac:	cmp	r2, r3
   1a3b0:	blt	1a130 <rb_select_epoll+0xbc>
   1a3b4:	mov	r3, #0
   1a3b8:	mov	r0, r3
   1a3bc:	sub	sp, fp, #4
   1a3c0:	ldr	fp, [sp]
   1a3c4:	add	sp, sp, #4
   1a3c8:	pop	{pc}		; (ldr pc, [sp], #4)
   1a3cc:	.word	0x000387bc
   1a3d0:	.word	0x000387ac
   1a3d4:	.word	0x0003879c
   1a3d8:	.word	0x00038714
   1a3dc:	.word	0x000386e4
   1a3e0:	.word	0x00038658
   1a3e4:	.word	0x00038518
   1a3e8:	.word	0x0000a494

0001a3ec <rb_epoll_supports_event>:
   1a3ec:	str	fp, [sp, #-8]!
   1a3f0:	str	lr, [sp, #4]
   1a3f4:	add	fp, sp, #4
   1a3f8:	sub	sp, sp, #288	; 0x120
   1a3fc:	ldr	r3, [pc, #388]	; 1a588 <rb_epoll_supports_event+0x19c>
   1a400:	add	r3, pc, r3
   1a404:	ldr	r3, [r3]
   1a408:	cmp	r3, #1
   1a40c:	bne	1a418 <rb_epoll_supports_event+0x2c>
   1a410:	mov	r3, #1
   1a414:	b	1a574 <rb_epoll_supports_event+0x188>
   1a418:	ldr	r3, [pc, #364]	; 1a58c <rb_epoll_supports_event+0x1a0>
   1a41c:	add	r3, pc, r3
   1a420:	ldr	r3, [r3]
   1a424:	cmn	r3, #1
   1a428:	bne	1a434 <rb_epoll_supports_event+0x48>
   1a42c:	mov	r3, #0
   1a430:	b	1a574 <rb_epoll_supports_event+0x188>
   1a434:	sub	r3, fp, #164	; 0xa4
   1a438:	mov	r1, r3
   1a43c:	ldr	r3, [pc, #332]	; 1a590 <rb_epoll_supports_event+0x1a4>
   1a440:	add	r3, pc, r3
   1a444:	mov	r0, r3
   1a448:	bl	22ce8 <__stat>
   1a44c:	mov	r3, r0
   1a450:	cmp	r3, #0
   1a454:	bne	1a470 <rb_epoll_supports_event+0x84>
   1a458:	ldr	r3, [pc, #308]	; 1a594 <rb_epoll_supports_event+0x1a8>
   1a45c:	add	r3, pc, r3
   1a460:	mvn	r2, #0
   1a464:	str	r2, [r3]
   1a468:	mov	r3, #0
   1a46c:	b	1a574 <rb_epoll_supports_event+0x188>
   1a470:	mov	r1, #0
   1a474:	mov	r0, #0
   1a478:	bl	4bf4 <timerfd_create@plt>
   1a47c:	str	r0, [fp, #-8]
   1a480:	ldr	r3, [fp, #-8]
   1a484:	cmp	r3, #0
   1a488:	blt	1a4bc <rb_epoll_supports_event+0xd0>
   1a48c:	ldr	r0, [fp, #-8]
   1a490:	bl	4960 <close@plt>
   1a494:	ldr	r3, [pc, #252]	; 1a598 <rb_epoll_supports_event+0x1ac>
   1a498:	add	r3, pc, r3
   1a49c:	mov	r2, #1
   1a4a0:	str	r2, [r3]
   1a4a4:	ldr	r3, [pc, #240]	; 1a59c <rb_epoll_supports_event+0x1b0>
   1a4a8:	add	r3, pc, r3
   1a4ac:	mov	r2, #1
   1a4b0:	str	r2, [r3]
   1a4b4:	mov	r3, #1
   1a4b8:	b	1a574 <rb_epoll_supports_event+0x188>
   1a4bc:	mov	r3, #26
   1a4c0:	str	r3, [fp, #-72]	; 0xffffffb8
   1a4c4:	mov	r3, #0
   1a4c8:	str	r3, [fp, #-68]	; 0xffffffbc
   1a4cc:	sub	r2, fp, #12
   1a4d0:	sub	r3, fp, #76	; 0x4c
   1a4d4:	mov	r1, r3
   1a4d8:	mov	r0, #0
   1a4dc:	bl	454c <timer_create@plt>
   1a4e0:	mov	r3, r0
   1a4e4:	cmp	r3, #0
   1a4e8:	beq	1a504 <rb_epoll_supports_event+0x118>
   1a4ec:	ldr	r3, [pc, #172]	; 1a5a0 <rb_epoll_supports_event+0x1b4>
   1a4f0:	add	r3, pc, r3
   1a4f4:	mvn	r2, #0
   1a4f8:	str	r2, [r3]
   1a4fc:	mov	r3, #0
   1a500:	b	1a574 <rb_epoll_supports_event+0x188>
   1a504:	ldr	r3, [fp, #-12]
   1a508:	mov	r0, r3
   1a50c:	bl	4a98 <timer_delete@plt>
   1a510:	sub	r3, fp, #292	; 0x124
   1a514:	mov	r0, r3
   1a518:	bl	43b4 <sigemptyset@plt>
   1a51c:	sub	r3, fp, #292	; 0x124
   1a520:	mov	r2, #0
   1a524:	mov	r1, r3
   1a528:	mvn	r0, #0
   1a52c:	bl	445c <signalfd@plt>
   1a530:	str	r0, [fp, #-8]
   1a534:	ldr	r3, [fp, #-8]
   1a538:	cmp	r3, #0
   1a53c:	bge	1a558 <rb_epoll_supports_event+0x16c>
   1a540:	ldr	r3, [pc, #92]	; 1a5a4 <rb_epoll_supports_event+0x1b8>
   1a544:	add	r3, pc, r3
   1a548:	mvn	r2, #0
   1a54c:	str	r2, [r3]
   1a550:	mov	r3, #0
   1a554:	b	1a574 <rb_epoll_supports_event+0x188>
   1a558:	ldr	r0, [fp, #-8]
   1a55c:	bl	4960 <close@plt>
   1a560:	ldr	r3, [pc, #64]	; 1a5a8 <rb_epoll_supports_event+0x1bc>
   1a564:	add	r3, pc, r3
   1a568:	mov	r2, #1
   1a56c:	str	r2, [r3]
   1a570:	mov	r3, #1
   1a574:	mov	r0, r3
   1a578:	sub	sp, fp, #4
   1a57c:	ldr	fp, [sp]
   1a580:	add	sp, sp, #4
   1a584:	pop	{pc}		; (ldr pc, [sp], #4)
   1a588:	.word	0x0003844c
   1a58c:	.word	0x00038430
   1a590:	.word	0x0000a3f8
   1a594:	.word	0x000383f0
   1a598:	.word	0x000383b4
   1a59c:	.word	0x000383a8
   1a5a0:	.word	0x0003835c
   1a5a4:	.word	0x00038308
   1a5a8:	.word	0x000382e8

0001a5ac <signalfd_handler>:
   1a5ac:	str	fp, [sp, #-8]!
   1a5b0:	str	lr, [sp, #4]
   1a5b4:	add	fp, sp, #4
   1a5b8:	sub	sp, sp, #24
   1a5bc:	str	r0, [fp, #-24]	; 0xffffffe8
   1a5c0:	str	r1, [fp, #-28]	; 0xffffffe4
   1a5c4:	mov	r3, #0
   1a5c8:	str	r3, [fp, #-8]
   1a5cc:	b	1a61c <signalfd_handler+0x70>
   1a5d0:	ldr	r3, [fp, #-8]
   1a5d4:	lsl	r3, r3, #7
   1a5d8:	ldr	r2, [pc, #364]	; 1a74c <signalfd_handler+0x1a0>
   1a5dc:	add	r2, pc, r2
   1a5e0:	add	r1, r3, r2
   1a5e4:	ldr	r3, [pc, #356]	; 1a750 <signalfd_handler+0x1a4>
   1a5e8:	add	r3, pc, r3
   1a5ec:	ldr	r2, [fp, #-8]
   1a5f0:	str	r1, [r3, r2, lsl #3]
   1a5f4:	ldr	r2, [pc, #344]	; 1a754 <signalfd_handler+0x1a8>
   1a5f8:	add	r2, pc, r2
   1a5fc:	ldr	r3, [fp, #-8]
   1a600:	lsl	r3, r3, #3
   1a604:	add	r3, r2, r3
   1a608:	mov	r2, #128	; 0x80
   1a60c:	str	r2, [r3, #4]
   1a610:	ldr	r3, [fp, #-8]
   1a614:	add	r3, r3, #1
   1a618:	str	r3, [fp, #-8]
   1a61c:	ldr	r3, [fp, #-8]
   1a620:	cmp	r3, #15
   1a624:	ble	1a5d0 <signalfd_handler+0x24>
   1a628:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a62c:	bl	4504 <rb_get_fd@plt>
   1a630:	mov	r2, #16
   1a634:	ldr	r3, [pc, #284]	; 1a758 <signalfd_handler+0x1ac>
   1a638:	add	r3, pc, r3
   1a63c:	mov	r1, r3
   1a640:	bl	4c9c <readv@plt>
   1a644:	str	r0, [fp, #-12]
   1a648:	ldr	r3, [fp, #-12]
   1a64c:	cmp	r3, #0
   1a650:	beq	1a680 <signalfd_handler+0xd4>
   1a654:	ldr	r3, [fp, #-12]
   1a658:	cmp	r3, #0
   1a65c:	bge	1a690 <signalfd_handler+0xe4>
   1a660:	bl	4d20 <__errno_location@plt>
   1a664:	mov	r3, r0
   1a668:	ldr	r3, [r3]
   1a66c:	mov	r0, r3
   1a670:	bl	43fc <rb_ignore_errno@plt>
   1a674:	mov	r3, r0
   1a678:	cmp	r3, #0
   1a67c:	bne	1a690 <signalfd_handler+0xe4>
   1a680:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a684:	bl	4888 <rb_close@plt>
   1a688:	bl	1a764 <rb_epoll_init_event>
   1a68c:	b	1a73c <signalfd_handler+0x190>
   1a690:	ldr	r3, [fp, #-12]
   1a694:	cmp	r3, #0
   1a698:	bge	1a6b8 <signalfd_handler+0x10c>
   1a69c:	mov	r3, #0
   1a6a0:	ldr	r2, [pc, #180]	; 1a75c <signalfd_handler+0x1b0>
   1a6a4:	add	r2, pc, r2
   1a6a8:	mov	r1, #1
   1a6ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a6b0:	bl	44c8 <rb_setselect@plt>
   1a6b4:	b	1a73c <signalfd_handler+0x190>
   1a6b8:	mov	r3, #0
   1a6bc:	str	r3, [fp, #-8]
   1a6c0:	b	1a710 <signalfd_handler+0x164>
   1a6c4:	ldr	r2, [pc, #148]	; 1a760 <signalfd_handler+0x1b4>
   1a6c8:	add	r2, pc, r2
   1a6cc:	ldr	r3, [fp, #-8]
   1a6d0:	lsl	r3, r3, #7
   1a6d4:	add	r3, r2, r3
   1a6d8:	add	r3, r3, #48	; 0x30
   1a6dc:	ldrd	r2, [r3]
   1a6e0:	mov	r3, r2
   1a6e4:	str	r3, [fp, #-16]
   1a6e8:	ldr	r3, [fp, #-16]
   1a6ec:	cmp	r3, #0
   1a6f0:	beq	1a700 <signalfd_handler+0x154>
   1a6f4:	ldr	r0, [fp, #-16]
   1a6f8:	bl	48c4 <rb_run_one_event@plt>
   1a6fc:	b	1a704 <signalfd_handler+0x158>
   1a700:	nop	{0}
   1a704:	ldr	r3, [fp, #-8]
   1a708:	add	r3, r3, #1
   1a70c:	str	r3, [fp, #-8]
   1a710:	ldr	r3, [fp, #-12]
   1a714:	add	r2, r3, #127	; 0x7f
   1a718:	cmp	r3, #0
   1a71c:	movlt	r3, r2
   1a720:	movge	r3, r3
   1a724:	asr	r3, r3, #7
   1a728:	mov	r2, r3
   1a72c:	ldr	r3, [fp, #-8]
   1a730:	cmp	r3, r2
   1a734:	blt	1a6c4 <signalfd_handler+0x118>
   1a738:	b	1a628 <signalfd_handler+0x7c>
   1a73c:	sub	sp, fp, #4
   1a740:	ldr	fp, [sp]
   1a744:	add	sp, sp, #4
   1a748:	pop	{pc}		; (ldr pc, [sp], #4)
   1a74c:	.word	0x0003827c
   1a750:	.word	0x00038a70
   1a754:	.word	0x00038a60
   1a758:	.word	0x00038a20
   1a75c:	.word	0xffffff00
   1a760:	.word	0x00038190

0001a764 <rb_epoll_init_event>:
   1a764:	str	fp, [sp, #-8]!
   1a768:	str	lr, [sp, #4]
   1a76c:	add	fp, sp, #4
   1a770:	sub	sp, sp, #136	; 0x88
   1a774:	bl	1a3ec <rb_epoll_supports_event>
   1a778:	ldr	r3, [pc, #224]	; 1a860 <rb_epoll_init_event+0xfc>
   1a77c:	add	r3, pc, r3
   1a780:	ldr	r3, [r3]
   1a784:	cmp	r3, #0
   1a788:	bne	1a850 <rb_epoll_init_event+0xec>
   1a78c:	sub	r3, fp, #140	; 0x8c
   1a790:	mov	r0, r3
   1a794:	bl	43b4 <sigemptyset@plt>
   1a798:	bl	44a4 <__libc_current_sigrtmin@plt>
   1a79c:	mov	r2, r0
   1a7a0:	sub	r3, fp, #140	; 0x8c
   1a7a4:	mov	r1, r2
   1a7a8:	mov	r0, r3
   1a7ac:	bl	48a0 <sigaddset@plt>
   1a7b0:	sub	r3, fp, #140	; 0x8c
   1a7b4:	mov	r2, #0
   1a7b8:	mov	r1, r3
   1a7bc:	mov	r0, #0
   1a7c0:	bl	49d8 <sigprocmask@plt>
   1a7c4:	sub	r3, fp, #140	; 0x8c
   1a7c8:	mov	r0, r3
   1a7cc:	bl	43b4 <sigemptyset@plt>
   1a7d0:	bl	44a4 <__libc_current_sigrtmin@plt>
   1a7d4:	mov	r2, r0
   1a7d8:	sub	r3, fp, #140	; 0x8c
   1a7dc:	mov	r1, r2
   1a7e0:	mov	r0, r3
   1a7e4:	bl	48a0 <sigaddset@plt>
   1a7e8:	sub	r3, fp, #140	; 0x8c
   1a7ec:	mov	r2, #0
   1a7f0:	mov	r1, r3
   1a7f4:	mvn	r0, #0
   1a7f8:	bl	445c <signalfd@plt>
   1a7fc:	str	r0, [fp, #-8]
   1a800:	ldr	r3, [fp, #-8]
   1a804:	cmn	r3, #1
   1a808:	bne	1a820 <rb_epoll_init_event+0xbc>
   1a80c:	ldr	r3, [pc, #80]	; 1a864 <rb_epoll_init_event+0x100>
   1a810:	add	r3, pc, r3
   1a814:	mvn	r2, #0
   1a818:	str	r2, [r3]
   1a81c:	b	1a850 <rb_epoll_init_event+0xec>
   1a820:	ldr	r3, [pc, #64]	; 1a868 <rb_epoll_init_event+0x104>
   1a824:	add	r3, pc, r3
   1a828:	mov	r2, r3
   1a82c:	mov	r1, #64	; 0x40
   1a830:	ldr	r0, [fp, #-8]
   1a834:	bl	4aa4 <rb_open@plt>
   1a838:	str	r0, [fp, #-12]
   1a83c:	ldr	r0, [fp, #-12]
   1a840:	bl	463c <rb_set_nb@plt>
   1a844:	mov	r1, #0
   1a848:	ldr	r0, [fp, #-12]
   1a84c:	bl	1a5ac <signalfd_handler>
   1a850:	sub	sp, fp, #4
   1a854:	ldr	fp, [sp]
   1a858:	add	sp, sp, #4
   1a85c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a860:	.word	0x000380d4
   1a864:	.word	0x0003803c
   1a868:	.word	0x0000a02c

0001a86c <rb_epoll_sched_event_signalfd>:
   1a86c:	str	fp, [sp, #-8]!
   1a870:	str	lr, [sp, #4]
   1a874:	add	fp, sp, #4
   1a878:	sub	sp, sp, #96	; 0x60
   1a87c:	str	r0, [fp, #-96]	; 0xffffffa0
   1a880:	str	r1, [fp, #-100]	; 0xffffff9c
   1a884:	sub	r3, fp, #72	; 0x48
   1a888:	mov	r2, #64	; 0x40
   1a88c:	mov	r1, #0
   1a890:	mov	r0, r3
   1a894:	bl	4648 <memset@plt>
   1a898:	mov	r0, #4
   1a89c:	bl	19c24 <rb_malloc>
   1a8a0:	mov	r2, r0
   1a8a4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a8a8:	str	r2, [r3, #40]	; 0x28
   1a8ac:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a8b0:	ldr	r3, [r3, #40]	; 0x28
   1a8b4:	str	r3, [fp, #-8]
   1a8b8:	mov	r3, #0
   1a8bc:	str	r3, [fp, #-64]	; 0xffffffc0
   1a8c0:	bl	44a4 <__libc_current_sigrtmin@plt>
   1a8c4:	mov	r3, r0
   1a8c8:	str	r3, [fp, #-68]	; 0xffffffbc
   1a8cc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a8d0:	str	r3, [fp, #-72]	; 0xffffffb8
   1a8d4:	sub	r3, fp, #72	; 0x48
   1a8d8:	ldr	r2, [fp, #-8]
   1a8dc:	mov	r1, r3
   1a8e0:	mov	r0, #0
   1a8e4:	bl	454c <timer_create@plt>
   1a8e8:	mov	r3, r0
   1a8ec:	cmp	r3, #0
   1a8f0:	bge	1a928 <rb_epoll_sched_event_signalfd+0xbc>
   1a8f4:	bl	4d20 <__errno_location@plt>
   1a8f8:	mov	r3, r0
   1a8fc:	ldr	r3, [r3]
   1a900:	mov	r0, r3
   1a904:	bl	43c0 <strerror@plt>
   1a908:	mov	r3, r0
   1a90c:	mov	r1, r3
   1a910:	ldr	r3, [pc, #196]	; 1a9dc <rb_epoll_sched_event_signalfd+0x170>
   1a914:	add	r3, pc, r3
   1a918:	mov	r0, r3
   1a91c:	bl	493c <rb_lib_log@plt>
   1a920:	mov	r3, #0
   1a924:	b	1a9c8 <rb_epoll_sched_event_signalfd+0x15c>
   1a928:	sub	r3, fp, #88	; 0x58
   1a92c:	mov	r2, #16
   1a930:	mov	r1, #0
   1a934:	mov	r0, r3
   1a938:	bl	4648 <memset@plt>
   1a93c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a940:	str	r3, [fp, #-80]	; 0xffffffb0
   1a944:	mov	r3, #0
   1a948:	str	r3, [fp, #-76]	; 0xffffffb4
   1a94c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a950:	ldr	r3, [r3, #24]
   1a954:	cmp	r3, #0
   1a958:	beq	1a96c <rb_epoll_sched_event_signalfd+0x100>
   1a95c:	sub	r1, fp, #88	; 0x58
   1a960:	sub	r3, fp, #80	; 0x50
   1a964:	ldrd	r2, [r3]
   1a968:	strd	r2, [r1]
   1a96c:	ldr	r3, [fp, #-8]
   1a970:	ldr	r0, [r3]
   1a974:	sub	r2, fp, #88	; 0x58
   1a978:	mov	r3, #0
   1a97c:	mov	r1, #0
   1a980:	bl	4780 <timer_settime@plt>
   1a984:	mov	r3, r0
   1a988:	cmp	r3, #0
   1a98c:	bge	1a9c4 <rb_epoll_sched_event_signalfd+0x158>
   1a990:	bl	4d20 <__errno_location@plt>
   1a994:	mov	r3, r0
   1a998:	ldr	r3, [r3]
   1a99c:	mov	r0, r3
   1a9a0:	bl	43c0 <strerror@plt>
   1a9a4:	mov	r3, r0
   1a9a8:	mov	r1, r3
   1a9ac:	ldr	r3, [pc, #44]	; 1a9e0 <rb_epoll_sched_event_signalfd+0x174>
   1a9b0:	add	r3, pc, r3
   1a9b4:	mov	r0, r3
   1a9b8:	bl	493c <rb_lib_log@plt>
   1a9bc:	mov	r3, #0
   1a9c0:	b	1a9c8 <rb_epoll_sched_event_signalfd+0x15c>
   1a9c4:	mov	r3, #1
   1a9c8:	mov	r0, r3
   1a9cc:	sub	sp, fp, #4
   1a9d0:	ldr	fp, [sp]
   1a9d4:	add	sp, sp, #4
   1a9d8:	pop	{pc}		; (ldr pc, [sp], #4)
   1a9dc:	.word	0x00009f48
   1a9e0:	.word	0x00009ec0

0001a9e4 <rb_read_timerfd>:
   1a9e4:	str	r4, [sp, #-12]!
   1a9e8:	str	fp, [sp, #4]
   1a9ec:	str	lr, [sp, #8]
   1a9f0:	add	fp, sp, #8
   1a9f4:	sub	sp, sp, #28
   1a9f8:	str	r0, [fp, #-32]	; 0xffffffe0
   1a9fc:	str	r1, [fp, #-36]	; 0xffffffdc
   1aa00:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1aa04:	str	r3, [fp, #-16]
   1aa08:	ldr	r3, [fp, #-16]
   1aa0c:	cmp	r3, #0
   1aa10:	bne	1aa20 <rb_read_timerfd+0x3c>
   1aa14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1aa18:	bl	4888 <rb_close@plt>
   1aa1c:	b	1aad4 <rb_read_timerfd+0xf0>
   1aa20:	sub	r3, fp, #28
   1aa24:	mov	r2, #8
   1aa28:	mov	r1, r3
   1aa2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1aa30:	bl	47b0 <rb_read@plt>
   1aa34:	str	r0, [fp, #-20]	; 0xffffffec
   1aa38:	ldr	r3, [fp, #-20]	; 0xffffffec
   1aa3c:	cmp	r3, #0
   1aa40:	beq	1aa70 <rb_read_timerfd+0x8c>
   1aa44:	ldr	r3, [fp, #-20]	; 0xffffffec
   1aa48:	cmp	r3, #0
   1aa4c:	bge	1aab4 <rb_read_timerfd+0xd0>
   1aa50:	bl	4d20 <__errno_location@plt>
   1aa54:	mov	r3, r0
   1aa58:	ldr	r3, [r3]
   1aa5c:	mov	r0, r3
   1aa60:	bl	43fc <rb_ignore_errno@plt>
   1aa64:	mov	r3, r0
   1aa68:	cmp	r3, #0
   1aa6c:	bne	1aab4 <rb_read_timerfd+0xd0>
   1aa70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1aa74:	bl	4888 <rb_close@plt>
   1aa78:	ldr	r3, [fp, #-16]
   1aa7c:	ldr	r4, [r3, #20]
   1aa80:	bl	4d20 <__errno_location@plt>
   1aa84:	mov	r3, r0
   1aa88:	ldr	r3, [r3]
   1aa8c:	mov	r0, r3
   1aa90:	bl	43c0 <strerror@plt>
   1aa94:	mov	r3, r0
   1aa98:	mov	r2, r3
   1aa9c:	mov	r1, r4
   1aaa0:	ldr	r3, [pc, #64]	; 1aae8 <rb_read_timerfd+0x104>
   1aaa4:	add	r3, pc, r3
   1aaa8:	mov	r0, r3
   1aaac:	bl	493c <rb_lib_log@plt>
   1aab0:	b	1aad4 <rb_read_timerfd+0xf0>
   1aab4:	ldr	r3, [fp, #-16]
   1aab8:	ldr	r2, [pc, #44]	; 1aaec <rb_read_timerfd+0x108>
   1aabc:	add	r2, pc, r2
   1aac0:	mov	r1, #1
   1aac4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1aac8:	bl	44c8 <rb_setselect@plt>
   1aacc:	ldr	r0, [fp, #-16]
   1aad0:	bl	48c4 <rb_run_one_event@plt>
   1aad4:	sub	sp, fp, #8
   1aad8:	ldr	r4, [sp]
   1aadc:	ldr	fp, [sp, #4]
   1aae0:	add	sp, sp, #8
   1aae4:	pop	{pc}		; (ldr pc, [sp], #4)
   1aae8:	.word	0x00009de0
   1aaec:	.word	0xffffff20

0001aaf0 <rb_epoll_sched_event_timerfd>:
   1aaf0:	str	fp, [sp, #-8]!
   1aaf4:	str	lr, [sp, #4]
   1aaf8:	add	fp, sp, #4
   1aafc:	sub	sp, sp, #32
   1ab00:	str	r0, [fp, #-32]	; 0xffffffe0
   1ab04:	str	r1, [fp, #-36]	; 0xffffffdc
   1ab08:	mov	r1, #0
   1ab0c:	mov	r0, #0
   1ab10:	bl	4bf4 <timerfd_create@plt>
   1ab14:	str	r0, [fp, #-8]
   1ab18:	ldr	r3, [fp, #-8]
   1ab1c:	cmp	r3, #0
   1ab20:	bge	1ab58 <rb_epoll_sched_event_timerfd+0x68>
   1ab24:	bl	4d20 <__errno_location@plt>
   1ab28:	mov	r3, r0
   1ab2c:	ldr	r3, [r3]
   1ab30:	mov	r0, r3
   1ab34:	bl	43c0 <strerror@plt>
   1ab38:	mov	r3, r0
   1ab3c:	mov	r1, r3
   1ab40:	ldr	r3, [pc, #304]	; 1ac78 <rb_epoll_sched_event_timerfd+0x188>
   1ab44:	add	r3, pc, r3
   1ab48:	mov	r0, r3
   1ab4c:	bl	493c <rb_lib_log@plt>
   1ab50:	mov	r3, #0
   1ab54:	b	1ac64 <rb_epoll_sched_event_timerfd+0x174>
   1ab58:	sub	r3, fp, #28
   1ab5c:	mov	r2, #16
   1ab60:	mov	r1, #0
   1ab64:	mov	r0, r3
   1ab68:	bl	4648 <memset@plt>
   1ab6c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ab70:	str	r3, [fp, #-20]	; 0xffffffec
   1ab74:	mov	r3, #0
   1ab78:	str	r3, [fp, #-16]
   1ab7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ab80:	ldr	r3, [r3, #24]
   1ab84:	cmp	r3, #0
   1ab88:	beq	1ab9c <rb_epoll_sched_event_timerfd+0xac>
   1ab8c:	sub	r1, fp, #28
   1ab90:	sub	r3, fp, #20
   1ab94:	ldrd	r2, [r3]
   1ab98:	strd	r2, [r1]
   1ab9c:	sub	r2, fp, #28
   1aba0:	mov	r3, #0
   1aba4:	mov	r1, #0
   1aba8:	ldr	r0, [fp, #-8]
   1abac:	bl	4c78 <timerfd_settime@plt>
   1abb0:	mov	r3, r0
   1abb4:	cmp	r3, #0
   1abb8:	bge	1abf8 <rb_epoll_sched_event_timerfd+0x108>
   1abbc:	bl	4d20 <__errno_location@plt>
   1abc0:	mov	r3, r0
   1abc4:	ldr	r3, [r3]
   1abc8:	mov	r0, r3
   1abcc:	bl	43c0 <strerror@plt>
   1abd0:	mov	r3, r0
   1abd4:	mov	r1, r3
   1abd8:	ldr	r3, [pc, #156]	; 1ac7c <rb_epoll_sched_event_timerfd+0x18c>
   1abdc:	add	r3, pc, r3
   1abe0:	mov	r0, r3
   1abe4:	bl	493c <rb_lib_log@plt>
   1abe8:	ldr	r0, [fp, #-8]
   1abec:	bl	4960 <close@plt>
   1abf0:	mov	r3, #0
   1abf4:	b	1ac64 <rb_epoll_sched_event_timerfd+0x174>
   1abf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1abfc:	ldr	r3, [r3, #20]
   1ac00:	ldr	r2, [pc, #120]	; 1ac80 <rb_epoll_sched_event_timerfd+0x190>
   1ac04:	add	r2, pc, r2
   1ac08:	mov	r1, #136	; 0x88
   1ac0c:	ldr	r0, [pc, #112]	; 1ac84 <rb_epoll_sched_event_timerfd+0x194>
   1ac10:	add	r0, pc, r0
   1ac14:	bl	4bdc <snprintf@plt>
   1ac18:	ldr	r3, [pc, #104]	; 1ac88 <rb_epoll_sched_event_timerfd+0x198>
   1ac1c:	add	r3, pc, r3
   1ac20:	mov	r2, r3
   1ac24:	mov	r1, #64	; 0x40
   1ac28:	ldr	r0, [fp, #-8]
   1ac2c:	bl	4aa4 <rb_open@plt>
   1ac30:	str	r0, [fp, #-12]
   1ac34:	ldr	r0, [fp, #-12]
   1ac38:	bl	463c <rb_set_nb@plt>
   1ac3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ac40:	ldr	r2, [fp, #-12]
   1ac44:	str	r2, [r3, #40]	; 0x28
   1ac48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ac4c:	ldr	r2, [pc, #56]	; 1ac8c <rb_epoll_sched_event_timerfd+0x19c>
   1ac50:	add	r2, pc, r2
   1ac54:	mov	r1, #1
   1ac58:	ldr	r0, [fp, #-12]
   1ac5c:	bl	44c8 <rb_setselect@plt>
   1ac60:	mov	r3, #1
   1ac64:	mov	r0, r3
   1ac68:	sub	sp, fp, #4
   1ac6c:	ldr	fp, [sp]
   1ac70:	add	sp, sp, #4
   1ac74:	pop	{pc}		; (ldr pc, [sp], #4)
   1ac78:	.word	0x00009d74
   1ac7c:	.word	0x00009cf0
   1ac80:	.word	0x00009ce0
   1ac84:	.word	0x000384c8
   1ac88:	.word	0x000384bc
   1ac8c:	.word	0xfffffd8c

0001ac90 <rb_epoll_sched_event>:
   1ac90:	str	fp, [sp, #-8]!
   1ac94:	str	lr, [sp, #4]
   1ac98:	add	fp, sp, #4
   1ac9c:	sub	sp, sp, #8
   1aca0:	str	r0, [fp, #-8]
   1aca4:	str	r1, [fp, #-12]
   1aca8:	ldr	r3, [pc, #68]	; 1acf4 <rb_epoll_sched_event+0x64>
   1acac:	add	r3, pc, r3
   1acb0:	ldr	r3, [r3]
   1acb4:	cmp	r3, #0
   1acb8:	beq	1acd0 <rb_epoll_sched_event+0x40>
   1acbc:	ldr	r1, [fp, #-12]
   1acc0:	ldr	r0, [fp, #-8]
   1acc4:	bl	1aaf0 <rb_epoll_sched_event_timerfd>
   1acc8:	mov	r3, r0
   1accc:	b	1ace0 <rb_epoll_sched_event+0x50>
   1acd0:	ldr	r1, [fp, #-12]
   1acd4:	ldr	r0, [fp, #-8]
   1acd8:	bl	1a86c <rb_epoll_sched_event_signalfd>
   1acdc:	mov	r3, r0
   1ace0:	mov	r0, r3
   1ace4:	sub	sp, fp, #4
   1ace8:	ldr	fp, [sp]
   1acec:	add	sp, sp, #4
   1acf0:	pop	{pc}		; (ldr pc, [sp], #4)
   1acf4:	.word	0x00037ba4

0001acf8 <rb_epoll_unsched_event>:
   1acf8:	str	fp, [sp, #-8]!
   1acfc:	str	lr, [sp, #4]
   1ad00:	add	fp, sp, #4
   1ad04:	sub	sp, sp, #8
   1ad08:	str	r0, [fp, #-8]
   1ad0c:	ldr	r3, [pc, #108]	; 1ad80 <rb_epoll_unsched_event+0x88>
   1ad10:	add	r3, pc, r3
   1ad14:	ldr	r3, [r3]
   1ad18:	cmp	r3, #0
   1ad1c:	beq	1ad40 <rb_epoll_unsched_event+0x48>
   1ad20:	ldr	r3, [fp, #-8]
   1ad24:	ldr	r3, [r3, #40]	; 0x28
   1ad28:	mov	r0, r3
   1ad2c:	bl	4888 <rb_close@plt>
   1ad30:	ldr	r3, [fp, #-8]
   1ad34:	mov	r2, #0
   1ad38:	str	r2, [r3, #40]	; 0x28
   1ad3c:	b	1ad70 <rb_epoll_unsched_event+0x78>
   1ad40:	ldr	r3, [fp, #-8]
   1ad44:	ldr	r3, [r3, #40]	; 0x28
   1ad48:	ldr	r3, [r3]
   1ad4c:	mov	r0, r3
   1ad50:	bl	4a98 <timer_delete@plt>
   1ad54:	ldr	r3, [fp, #-8]
   1ad58:	ldr	r3, [r3, #40]	; 0x28
   1ad5c:	mov	r0, r3
   1ad60:	bl	19c84 <rb_free>
   1ad64:	ldr	r3, [fp, #-8]
   1ad68:	mov	r2, #0
   1ad6c:	str	r2, [r3, #40]	; 0x28
   1ad70:	sub	sp, fp, #4
   1ad74:	ldr	fp, [sp]
   1ad78:	add	sp, sp, #4
   1ad7c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ad80:	.word	0x00037b40

0001ad84 <rb_malloc>:
   1ad84:	str	fp, [sp, #-8]!
   1ad88:	str	lr, [sp, #4]
   1ad8c:	add	fp, sp, #4
   1ad90:	sub	sp, sp, #16
   1ad94:	str	r0, [fp, #-16]
   1ad98:	ldr	r1, [fp, #-16]
   1ad9c:	mov	r0, #1
   1ada0:	bl	460c <calloc@plt>
   1ada4:	mov	r3, r0
   1ada8:	str	r3, [fp, #-8]
   1adac:	ldr	r3, [fp, #-8]
   1adb0:	cmp	r3, #0
   1adb4:	moveq	r3, #1
   1adb8:	movne	r3, #0
   1adbc:	uxtb	r3, r3
   1adc0:	cmp	r3, #0
   1adc4:	beq	1adcc <rb_malloc+0x48>
   1adc8:	bl	49a8 <rb_outofmemory@plt>
   1adcc:	ldr	r3, [fp, #-8]
   1add0:	mov	r0, r3
   1add4:	sub	sp, fp, #4
   1add8:	ldr	fp, [sp]
   1addc:	add	sp, sp, #4
   1ade0:	pop	{pc}		; (ldr pc, [sp], #4)

0001ade4 <rb_realloc>:
   1ade4:	str	fp, [sp, #-8]!
   1ade8:	str	lr, [sp, #4]
   1adec:	add	fp, sp, #4
   1adf0:	sub	sp, sp, #16
   1adf4:	str	r0, [fp, #-16]
   1adf8:	str	r1, [fp, #-20]	; 0xffffffec
   1adfc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ae00:	ldr	r0, [fp, #-16]
   1ae04:	bl	4c6c <realloc@plt>
   1ae08:	str	r0, [fp, #-8]
   1ae0c:	ldr	r3, [fp, #-8]
   1ae10:	cmp	r3, #0
   1ae14:	moveq	r3, #1
   1ae18:	movne	r3, #0
   1ae1c:	uxtb	r3, r3
   1ae20:	cmp	r3, #0
   1ae24:	beq	1ae2c <rb_realloc+0x48>
   1ae28:	bl	49a8 <rb_outofmemory@plt>
   1ae2c:	ldr	r3, [fp, #-8]
   1ae30:	mov	r0, r3
   1ae34:	sub	sp, fp, #4
   1ae38:	ldr	fp, [sp]
   1ae3c:	add	sp, sp, #4
   1ae40:	pop	{pc}		; (ldr pc, [sp], #4)

0001ae44 <rb_find_fd>:
   1ae44:	push	{fp}		; (str fp, [sp, #-4]!)
   1ae48:	add	fp, sp, #0
   1ae4c:	sub	sp, sp, #28
   1ae50:	str	r0, [fp, #-24]	; 0xffffffe8
   1ae54:	ldr	r2, [pc, #220]	; 1af38 <rb_find_fd+0xf4>
   1ae58:	add	r2, pc, r2
   1ae5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ae60:	lsr	r3, r3, #31
   1ae64:	uxtb	r3, r3
   1ae68:	cmp	r3, #0
   1ae6c:	beq	1ae78 <rb_find_fd+0x34>
   1ae70:	mov	r3, #0
   1ae74:	b	1af28 <rb_find_fd+0xe4>
   1ae78:	ldr	r3, [pc, #188]	; 1af3c <rb_find_fd+0xf8>
   1ae7c:	ldr	r3, [r2, r3]
   1ae80:	ldr	r1, [r3]
   1ae84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ae88:	asr	r2, r3, #12
   1ae8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ae90:	eor	r2, r2, r3
   1ae94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ae98:	asr	r3, r3, #24
   1ae9c:	eor	r3, r3, r2
   1aea0:	ubfx	r2, r3, #0, #12
   1aea4:	mov	r3, r2
   1aea8:	lsl	r3, r3, #1
   1aeac:	add	r3, r3, r2
   1aeb0:	lsl	r3, r3, #2
   1aeb4:	add	r3, r1, r3
   1aeb8:	str	r3, [fp, #-12]
   1aebc:	ldr	r3, [fp, #-12]
   1aec0:	ldr	r3, [r3]
   1aec4:	cmp	r3, #0
   1aec8:	bne	1aed4 <rb_find_fd+0x90>
   1aecc:	mov	r3, #0
   1aed0:	b	1af28 <rb_find_fd+0xe4>
   1aed4:	ldr	r3, [fp, #-12]
   1aed8:	ldr	r3, [r3]
   1aedc:	str	r3, [fp, #-8]
   1aee0:	b	1af18 <rb_find_fd+0xd4>
   1aee4:	ldr	r3, [fp, #-8]
   1aee8:	ldr	r3, [r3]
   1aeec:	str	r3, [fp, #-16]
   1aef0:	ldr	r3, [fp, #-16]
   1aef4:	ldr	r3, [r3, #12]
   1aef8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1aefc:	cmp	r2, r3
   1af00:	bne	1af0c <rb_find_fd+0xc8>
   1af04:	ldr	r3, [fp, #-16]
   1af08:	b	1af28 <rb_find_fd+0xe4>
   1af0c:	ldr	r3, [fp, #-8]
   1af10:	ldr	r3, [r3, #8]
   1af14:	str	r3, [fp, #-8]
   1af18:	ldr	r3, [fp, #-8]
   1af1c:	cmp	r3, #0
   1af20:	bne	1aee4 <rb_find_fd+0xa0>
   1af24:	mov	r3, #0
   1af28:	mov	r0, r3
   1af2c:	add	sp, fp, #0
   1af30:	pop	{fp}		; (ldr fp, [sp], #4)
   1af34:	bx	lr
   1af38:	.word	0x0001a1a0
   1af3c:	.word	0x000003c4

0001af40 <rb_setup_fd_poll>:
   1af40:	push	{fp}		; (str fp, [sp, #-4]!)
   1af44:	add	fp, sp, #0
   1af48:	sub	sp, sp, #12
   1af4c:	str	r0, [fp, #-8]
   1af50:	mov	r3, #0
   1af54:	mov	r0, r3
   1af58:	add	sp, fp, #0
   1af5c:	pop	{fp}		; (ldr fp, [sp], #4)
   1af60:	bx	lr

0001af64 <rb_init_netio_poll>:
   1af64:	str	fp, [sp, #-8]!
   1af68:	str	lr, [sp, #4]
   1af6c:	add	fp, sp, #4
   1af70:	sub	sp, sp, #8
   1af74:	bl	448c <rb_getmaxconnect@plt>
   1af78:	mov	r3, r0
   1af7c:	lsl	r3, r3, #3
   1af80:	mov	r0, r3
   1af84:	bl	1ad84 <rb_malloc>
   1af88:	mov	r2, r0
   1af8c:	ldr	r3, [pc, #140]	; 1b020 <rb_init_netio_poll+0xbc>
   1af90:	add	r3, pc, r3
   1af94:	str	r2, [r3]
   1af98:	bl	448c <rb_getmaxconnect@plt>
   1af9c:	mov	r2, r0
   1afa0:	ldr	r3, [pc, #124]	; 1b024 <rb_init_netio_poll+0xc0>
   1afa4:	add	r3, pc, r3
   1afa8:	str	r2, [r3, #8]
   1afac:	mov	r3, #0
   1afb0:	str	r3, [fp, #-8]
   1afb4:	b	1afe4 <rb_init_netio_poll+0x80>
   1afb8:	ldr	r3, [pc, #104]	; 1b028 <rb_init_netio_poll+0xc4>
   1afbc:	add	r3, pc, r3
   1afc0:	ldr	r2, [r3]
   1afc4:	ldr	r3, [fp, #-8]
   1afc8:	lsl	r3, r3, #3
   1afcc:	add	r3, r2, r3
   1afd0:	mvn	r2, #0
   1afd4:	str	r2, [r3]
   1afd8:	ldr	r3, [fp, #-8]
   1afdc:	add	r3, r3, #1
   1afe0:	str	r3, [fp, #-8]
   1afe4:	bl	448c <rb_getmaxconnect@plt>
   1afe8:	mov	r2, r0
   1afec:	ldr	r3, [fp, #-8]
   1aff0:	cmp	r3, r2
   1aff4:	blt	1afb8 <rb_init_netio_poll+0x54>
   1aff8:	ldr	r3, [pc, #44]	; 1b02c <rb_init_netio_poll+0xc8>
   1affc:	add	r3, pc, r3
   1b000:	mov	r2, #0
   1b004:	str	r2, [r3, #4]
   1b008:	mov	r3, #0
   1b00c:	mov	r0, r3
   1b010:	sub	sp, fp, #4
   1b014:	ldr	fp, [sp]
   1b018:	add	sp, sp, #4
   1b01c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b020:	.word	0x000381d0
   1b024:	.word	0x000381bc
   1b028:	.word	0x000381a4
   1b02c:	.word	0x00038164

0001b030 <resize_pollarray>:
   1b030:	str	fp, [sp, #-8]!
   1b034:	str	lr, [sp, #4]
   1b038:	add	fp, sp, #4
   1b03c:	sub	sp, sp, #16
   1b040:	str	r0, [fp, #-16]
   1b044:	ldr	r3, [pc, #280]	; 1b164 <resize_pollarray+0x134>
   1b048:	add	r3, pc, r3
   1b04c:	ldr	r3, [r3, #8]
   1b050:	ldr	r2, [fp, #-16]
   1b054:	cmp	r2, r3
   1b058:	movge	r3, #1
   1b05c:	movlt	r3, #0
   1b060:	uxtb	r3, r3
   1b064:	cmp	r3, #0
   1b068:	beq	1b150 <resize_pollarray+0x120>
   1b06c:	ldr	r3, [pc, #244]	; 1b168 <resize_pollarray+0x138>
   1b070:	add	r3, pc, r3
   1b074:	ldr	r3, [r3, #8]
   1b078:	str	r3, [fp, #-12]
   1b07c:	ldr	r3, [pc, #232]	; 1b16c <resize_pollarray+0x13c>
   1b080:	add	r3, pc, r3
   1b084:	ldr	r3, [r3, #8]
   1b088:	add	r2, r3, #1024	; 0x400
   1b08c:	ldr	r3, [pc, #220]	; 1b170 <resize_pollarray+0x140>
   1b090:	add	r3, pc, r3
   1b094:	str	r2, [r3, #8]
   1b098:	ldr	r3, [pc, #212]	; 1b174 <resize_pollarray+0x144>
   1b09c:	add	r3, pc, r3
   1b0a0:	ldr	r2, [r3]
   1b0a4:	ldr	r3, [pc, #204]	; 1b178 <resize_pollarray+0x148>
   1b0a8:	add	r3, pc, r3
   1b0ac:	ldr	r3, [r3, #8]
   1b0b0:	lsl	r3, r3, #3
   1b0b4:	mov	r1, r3
   1b0b8:	mov	r0, r2
   1b0bc:	bl	1ade4 <rb_realloc>
   1b0c0:	mov	r2, r0
   1b0c4:	ldr	r3, [pc, #176]	; 1b17c <resize_pollarray+0x14c>
   1b0c8:	add	r3, pc, r3
   1b0cc:	str	r2, [r3]
   1b0d0:	ldr	r3, [pc, #168]	; 1b180 <resize_pollarray+0x150>
   1b0d4:	add	r3, pc, r3
   1b0d8:	ldr	r2, [r3]
   1b0dc:	ldr	r3, [fp, #-12]
   1b0e0:	add	r3, r3, #1
   1b0e4:	lsl	r3, r3, #3
   1b0e8:	add	r3, r2, r3
   1b0ec:	mov	r2, #8192	; 0x2000
   1b0f0:	mov	r1, #0
   1b0f4:	mov	r0, r3
   1b0f8:	bl	4648 <memset@plt>
   1b0fc:	ldr	r3, [fp, #-12]
   1b100:	add	r3, r3, #1
   1b104:	str	r3, [fp, #-8]
   1b108:	b	1b138 <resize_pollarray+0x108>
   1b10c:	ldr	r3, [pc, #112]	; 1b184 <resize_pollarray+0x154>
   1b110:	add	r3, pc, r3
   1b114:	ldr	r2, [r3]
   1b118:	ldr	r3, [fp, #-8]
   1b11c:	lsl	r3, r3, #3
   1b120:	add	r3, r2, r3
   1b124:	mvn	r2, #0
   1b128:	str	r2, [r3]
   1b12c:	ldr	r3, [fp, #-8]
   1b130:	add	r3, r3, #1
   1b134:	str	r3, [fp, #-8]
   1b138:	ldr	r3, [pc, #72]	; 1b188 <resize_pollarray+0x158>
   1b13c:	add	r3, pc, r3
   1b140:	ldr	r3, [r3, #8]
   1b144:	ldr	r2, [fp, #-8]
   1b148:	cmp	r2, r3
   1b14c:	blt	1b10c <resize_pollarray+0xdc>
   1b150:	nop	{0}
   1b154:	sub	sp, fp, #4
   1b158:	ldr	fp, [sp]
   1b15c:	add	sp, sp, #4
   1b160:	pop	{pc}		; (ldr pc, [sp], #4)
   1b164:	.word	0x00038118
   1b168:	.word	0x000380f0
   1b16c:	.word	0x000380e0
   1b170:	.word	0x000380d0
   1b174:	.word	0x000380c4
   1b178:	.word	0x000380b8
   1b17c:	.word	0x00038098
   1b180:	.word	0x0003808c
   1b184:	.word	0x00038050
   1b188:	.word	0x00038024

0001b18c <rb_setselect_poll>:
   1b18c:	str	fp, [sp, #-8]!
   1b190:	str	lr, [sp, #4]
   1b194:	add	fp, sp, #4
   1b198:	sub	sp, sp, #16
   1b19c:	str	r0, [fp, #-8]
   1b1a0:	str	r1, [fp, #-12]
   1b1a4:	str	r2, [fp, #-16]
   1b1a8:	str	r3, [fp, #-20]	; 0xffffffec
   1b1ac:	ldr	r3, [fp, #-8]
   1b1b0:	cmp	r3, #0
   1b1b4:	beq	1b3e8 <rb_setselect_poll+0x25c>
   1b1b8:	ldr	r3, [fp, #-12]
   1b1bc:	and	r3, r3, #1
   1b1c0:	cmp	r3, #0
   1b1c4:	beq	1b218 <rb_setselect_poll+0x8c>
   1b1c8:	ldr	r3, [fp, #-8]
   1b1cc:	ldr	r2, [fp, #-16]
   1b1d0:	str	r2, [r3, #28]
   1b1d4:	ldr	r3, [fp, #-8]
   1b1d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b1dc:	str	r2, [r3, #32]
   1b1e0:	ldr	r3, [fp, #-16]
   1b1e4:	cmp	r3, #0
   1b1e8:	beq	1b204 <rb_setselect_poll+0x78>
   1b1ec:	ldr	r3, [fp, #-8]
   1b1f0:	ldr	r3, [r3, #20]
   1b1f4:	orr	r2, r3, #64	; 0x40
   1b1f8:	ldr	r3, [fp, #-8]
   1b1fc:	str	r2, [r3, #20]
   1b200:	b	1b218 <rb_setselect_poll+0x8c>
   1b204:	ldr	r3, [fp, #-8]
   1b208:	ldr	r3, [r3, #20]
   1b20c:	bic	r2, r3, #64	; 0x40
   1b210:	ldr	r3, [fp, #-8]
   1b214:	str	r2, [r3, #20]
   1b218:	ldr	r3, [fp, #-12]
   1b21c:	and	r3, r3, #2
   1b220:	cmp	r3, #0
   1b224:	beq	1b278 <rb_setselect_poll+0xec>
   1b228:	ldr	r3, [fp, #-8]
   1b22c:	ldr	r2, [fp, #-16]
   1b230:	str	r2, [r3, #36]	; 0x24
   1b234:	ldr	r3, [fp, #-8]
   1b238:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b23c:	str	r2, [r3, #40]	; 0x28
   1b240:	ldr	r3, [fp, #-16]
   1b244:	cmp	r3, #0
   1b248:	beq	1b264 <rb_setselect_poll+0xd8>
   1b24c:	ldr	r3, [fp, #-8]
   1b250:	ldr	r3, [r3, #20]
   1b254:	orr	r2, r3, #256	; 0x100
   1b258:	ldr	r3, [fp, #-8]
   1b25c:	str	r2, [r3, #20]
   1b260:	b	1b278 <rb_setselect_poll+0xec>
   1b264:	ldr	r3, [fp, #-8]
   1b268:	ldr	r3, [r3, #20]
   1b26c:	bic	r2, r3, #256	; 0x100
   1b270:	ldr	r3, [fp, #-8]
   1b274:	str	r2, [r3, #20]
   1b278:	ldr	r3, [fp, #-8]
   1b27c:	ldr	r3, [r3, #12]
   1b280:	mov	r0, r3
   1b284:	bl	1b030 <resize_pollarray>
   1b288:	ldr	r3, [fp, #-8]
   1b28c:	ldr	r3, [r3, #20]
   1b290:	cmp	r3, #0
   1b294:	bgt	1b360 <rb_setselect_poll+0x1d4>
   1b298:	ldr	r3, [pc, #348]	; 1b3fc <rb_setselect_poll+0x270>
   1b29c:	add	r3, pc, r3
   1b2a0:	ldr	r2, [r3]
   1b2a4:	ldr	r3, [fp, #-8]
   1b2a8:	ldr	r3, [r3, #12]
   1b2ac:	lsl	r3, r3, #3
   1b2b0:	add	r3, r2, r3
   1b2b4:	mov	r2, #0
   1b2b8:	strh	r2, [r3, #4]
   1b2bc:	ldr	r3, [pc, #316]	; 1b400 <rb_setselect_poll+0x274>
   1b2c0:	add	r3, pc, r3
   1b2c4:	ldr	r2, [r3]
   1b2c8:	ldr	r3, [fp, #-8]
   1b2cc:	ldr	r3, [r3, #12]
   1b2d0:	lsl	r3, r3, #3
   1b2d4:	add	r3, r2, r3
   1b2d8:	mvn	r2, #0
   1b2dc:	str	r2, [r3]
   1b2e0:	ldr	r3, [fp, #-8]
   1b2e4:	ldr	r2, [r3, #12]
   1b2e8:	ldr	r3, [pc, #276]	; 1b404 <rb_setselect_poll+0x278>
   1b2ec:	add	r3, pc, r3
   1b2f0:	ldr	r3, [r3, #4]
   1b2f4:	cmp	r2, r3
   1b2f8:	bne	1b3ec <rb_setselect_poll+0x260>
   1b2fc:	b	1b31c <rb_setselect_poll+0x190>
   1b300:	ldr	r3, [pc, #256]	; 1b408 <rb_setselect_poll+0x27c>
   1b304:	add	r3, pc, r3
   1b308:	ldr	r3, [r3, #4]
   1b30c:	sub	r2, r3, #1
   1b310:	ldr	r3, [pc, #244]	; 1b40c <rb_setselect_poll+0x280>
   1b314:	add	r3, pc, r3
   1b318:	str	r2, [r3, #4]
   1b31c:	ldr	r3, [pc, #236]	; 1b410 <rb_setselect_poll+0x284>
   1b320:	add	r3, pc, r3
   1b324:	ldr	r3, [r3, #4]
   1b328:	cmp	r3, #0
   1b32c:	blt	1b3ec <rb_setselect_poll+0x260>
   1b330:	ldr	r3, [pc, #220]	; 1b414 <rb_setselect_poll+0x288>
   1b334:	add	r3, pc, r3
   1b338:	ldr	r2, [r3]
   1b33c:	ldr	r3, [pc, #212]	; 1b418 <rb_setselect_poll+0x28c>
   1b340:	add	r3, pc, r3
   1b344:	ldr	r3, [r3, #4]
   1b348:	lsl	r3, r3, #3
   1b34c:	add	r3, r2, r3
   1b350:	ldr	r3, [r3]
   1b354:	cmn	r3, #1
   1b358:	beq	1b300 <rb_setselect_poll+0x174>
   1b35c:	b	1b3ec <rb_setselect_poll+0x260>
   1b360:	ldr	r3, [fp, #-8]
   1b364:	ldr	r1, [r3, #20]
   1b368:	ldr	r3, [pc, #172]	; 1b41c <rb_setselect_poll+0x290>
   1b36c:	add	r3, pc, r3
   1b370:	ldr	r2, [r3]
   1b374:	ldr	r3, [fp, #-8]
   1b378:	ldr	r3, [r3, #12]
   1b37c:	lsl	r3, r3, #3
   1b380:	add	r3, r2, r3
   1b384:	sxth	r2, r1
   1b388:	strh	r2, [r3, #4]
   1b38c:	ldr	r3, [pc, #140]	; 1b420 <rb_setselect_poll+0x294>
   1b390:	add	r3, pc, r3
   1b394:	ldr	r2, [r3]
   1b398:	ldr	r3, [fp, #-8]
   1b39c:	ldr	r3, [r3, #12]
   1b3a0:	lsl	r3, r3, #3
   1b3a4:	add	r3, r2, r3
   1b3a8:	ldr	r2, [fp, #-8]
   1b3ac:	ldr	r2, [r2, #12]
   1b3b0:	str	r2, [r3]
   1b3b4:	ldr	r3, [fp, #-8]
   1b3b8:	ldr	r2, [r3, #12]
   1b3bc:	ldr	r3, [pc, #96]	; 1b424 <rb_setselect_poll+0x298>
   1b3c0:	add	r3, pc, r3
   1b3c4:	ldr	r3, [r3, #4]
   1b3c8:	cmp	r2, r3
   1b3cc:	ble	1b3ec <rb_setselect_poll+0x260>
   1b3d0:	ldr	r3, [fp, #-8]
   1b3d4:	ldr	r2, [r3, #12]
   1b3d8:	ldr	r3, [pc, #72]	; 1b428 <rb_setselect_poll+0x29c>
   1b3dc:	add	r3, pc, r3
   1b3e0:	str	r2, [r3, #4]
   1b3e4:	b	1b3ec <rb_setselect_poll+0x260>
   1b3e8:	nop	{0}
   1b3ec:	sub	sp, fp, #4
   1b3f0:	ldr	fp, [sp]
   1b3f4:	add	sp, sp, #4
   1b3f8:	pop	{pc}		; (ldr pc, [sp], #4)
   1b3fc:	.word	0x00037ec4
   1b400:	.word	0x00037ea0
   1b404:	.word	0x00037e74
   1b408:	.word	0x00037e5c
   1b40c:	.word	0x00037e4c
   1b410:	.word	0x00037e40
   1b414:	.word	0x00037e2c
   1b418:	.word	0x00037e20
   1b41c:	.word	0x00037df4
   1b420:	.word	0x00037dd0
   1b424:	.word	0x00037da0
   1b428:	.word	0x00037d84

0001b42c <rb_select_poll>:
   1b42c:	str	fp, [sp, #-8]!
   1b430:	str	lr, [sp, #4]
   1b434:	add	fp, sp, #4
   1b438:	sub	sp, sp, #40	; 0x28
   1b43c:	str	r0, [fp, #-40]	; 0xffffffd8
   1b440:	ldr	r3, [pc, #584]	; 1b690 <rb_select_poll+0x264>
   1b444:	add	r3, pc, r3
   1b448:	ldr	r0, [r3]
   1b44c:	ldr	r3, [pc, #576]	; 1b694 <rb_select_poll+0x268>
   1b450:	add	r3, pc, r3
   1b454:	ldr	r3, [r3, #4]
   1b458:	add	r3, r3, #1
   1b45c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b460:	mov	r1, r3
   1b464:	bl	4a20 <poll@plt>
   1b468:	str	r0, [fp, #-12]
   1b46c:	bl	49b4 <rb_set_time@plt>
   1b470:	ldr	r3, [fp, #-12]
   1b474:	cmp	r3, #0
   1b478:	bge	1b4ac <rb_select_poll+0x80>
   1b47c:	bl	4d20 <__errno_location@plt>
   1b480:	mov	r3, r0
   1b484:	ldr	r3, [r3]
   1b488:	mov	r0, r3
   1b48c:	bl	43fc <rb_ignore_errno@plt>
   1b490:	mov	r3, r0
   1b494:	cmp	r3, #0
   1b498:	bne	1b4a4 <rb_select_poll+0x78>
   1b49c:	mov	r3, #0
   1b4a0:	b	1b67c <rb_select_poll+0x250>
   1b4a4:	mov	r3, #5
   1b4a8:	b	1b67c <rb_select_poll+0x250>
   1b4ac:	ldr	r3, [fp, #-12]
   1b4b0:	cmp	r3, #0
   1b4b4:	bne	1b4c0 <rb_select_poll+0x94>
   1b4b8:	mov	r3, #0
   1b4bc:	b	1b67c <rb_select_poll+0x250>
   1b4c0:	mov	r3, #0
   1b4c4:	str	r3, [fp, #-8]
   1b4c8:	b	1b660 <rb_select_poll+0x234>
   1b4cc:	ldr	r3, [pc, #452]	; 1b698 <rb_select_poll+0x26c>
   1b4d0:	add	r3, pc, r3
   1b4d4:	ldr	r2, [r3]
   1b4d8:	ldr	r3, [fp, #-8]
   1b4dc:	lsl	r3, r3, #3
   1b4e0:	add	r3, r2, r3
   1b4e4:	str	r3, [fp, #-16]
   1b4e8:	ldr	r3, [fp, #-16]
   1b4ec:	ldrsh	r3, [r3, #6]
   1b4f0:	str	r3, [fp, #-20]	; 0xffffffec
   1b4f4:	ldr	r3, [fp, #-16]
   1b4f8:	ldr	r3, [r3]
   1b4fc:	str	r3, [fp, #-24]	; 0xffffffe8
   1b500:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b504:	cmp	r3, #0
   1b508:	beq	1b648 <rb_select_poll+0x21c>
   1b50c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b510:	cmn	r3, #1
   1b514:	beq	1b648 <rb_select_poll+0x21c>
   1b518:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b51c:	bl	1ae44 <rb_find_fd>
   1b520:	str	r0, [fp, #-28]	; 0xffffffe4
   1b524:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b528:	cmp	r3, #0
   1b52c:	beq	1b650 <rb_select_poll+0x224>
   1b530:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b534:	and	r3, r3, #89	; 0x59
   1b538:	cmp	r3, #0
   1b53c:	beq	1b58c <rb_select_poll+0x160>
   1b540:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b544:	ldr	r3, [r3, #28]
   1b548:	str	r3, [fp, #-32]	; 0xffffffe0
   1b54c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b550:	ldr	r3, [r3, #32]
   1b554:	str	r3, [fp, #-36]	; 0xffffffdc
   1b558:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b55c:	mov	r2, #0
   1b560:	str	r2, [r3, #28]
   1b564:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b568:	mov	r2, #0
   1b56c:	str	r2, [r3, #32]
   1b570:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b574:	cmp	r3, #0
   1b578:	beq	1b58c <rb_select_poll+0x160>
   1b57c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b580:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b584:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b588:	blx	r3
   1b58c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b590:	ldrb	r3, [r3, #16]
   1b594:	and	r3, r3, #1
   1b598:	cmp	r3, #0
   1b59c:	beq	1b5fc <rb_select_poll+0x1d0>
   1b5a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b5a4:	and	r3, r3, #284	; 0x11c
   1b5a8:	cmp	r3, #0
   1b5ac:	beq	1b5fc <rb_select_poll+0x1d0>
   1b5b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b5b4:	ldr	r3, [r3, #36]	; 0x24
   1b5b8:	str	r3, [fp, #-32]	; 0xffffffe0
   1b5bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b5c0:	ldr	r3, [r3, #40]	; 0x28
   1b5c4:	str	r3, [fp, #-36]	; 0xffffffdc
   1b5c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b5cc:	mov	r2, #0
   1b5d0:	str	r2, [r3, #36]	; 0x24
   1b5d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b5d8:	mov	r2, #0
   1b5dc:	str	r2, [r3, #40]	; 0x28
   1b5e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b5e4:	cmp	r3, #0
   1b5e8:	beq	1b5fc <rb_select_poll+0x1d0>
   1b5ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b5f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b5f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b5f8:	blx	r3
   1b5fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b600:	ldr	r3, [r3, #28]
   1b604:	cmp	r3, #0
   1b608:	bne	1b620 <rb_select_poll+0x1f4>
   1b60c:	mov	r3, #0
   1b610:	mov	r2, #0
   1b614:	mov	r1, #1
   1b618:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b61c:	bl	1b18c <rb_setselect_poll>
   1b620:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b624:	ldr	r3, [r3, #36]	; 0x24
   1b628:	cmp	r3, #0
   1b62c:	bne	1b654 <rb_select_poll+0x228>
   1b630:	mov	r3, #0
   1b634:	mov	r2, #0
   1b638:	mov	r1, #2
   1b63c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b640:	bl	1b18c <rb_setselect_poll>
   1b644:	b	1b654 <rb_select_poll+0x228>
   1b648:	nop	{0}
   1b64c:	b	1b654 <rb_select_poll+0x228>
   1b650:	nop	{0}
   1b654:	ldr	r3, [fp, #-8]
   1b658:	add	r3, r3, #1
   1b65c:	str	r3, [fp, #-8]
   1b660:	ldr	r3, [pc, #52]	; 1b69c <rb_select_poll+0x270>
   1b664:	add	r3, pc, r3
   1b668:	ldr	r3, [r3, #4]
   1b66c:	ldr	r2, [fp, #-8]
   1b670:	cmp	r2, r3
   1b674:	ble	1b4cc <rb_select_poll+0xa0>
   1b678:	mov	r3, #0
   1b67c:	mov	r0, r3
   1b680:	sub	sp, fp, #4
   1b684:	ldr	fp, [sp]
   1b688:	add	sp, sp, #4
   1b68c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b690:	.word	0x00037d1c
   1b694:	.word	0x00037d10
   1b698:	.word	0x00037c90
   1b69c:	.word	0x00037afc

0001b6a0 <rb_ports_supports_event>:
   1b6a0:	str	fp, [sp, #-8]!
   1b6a4:	str	lr, [sp, #4]
   1b6a8:	add	fp, sp, #4
   1b6ac:	bl	4d20 <__errno_location@plt>
   1b6b0:	mov	r2, r0
   1b6b4:	mov	r3, #38	; 0x26
   1b6b8:	str	r3, [r2]
   1b6bc:	mov	r3, #0
   1b6c0:	mov	r0, r3
   1b6c4:	sub	sp, fp, #4
   1b6c8:	ldr	fp, [sp]
   1b6cc:	add	sp, sp, #4
   1b6d0:	pop	{pc}		; (ldr pc, [sp], #4)

0001b6d4 <rb_ports_init_event>:
   1b6d4:	push	{fp}		; (str fp, [sp, #-4]!)
   1b6d8:	add	fp, sp, #0
   1b6dc:	nop	{0}
   1b6e0:	add	sp, fp, #0
   1b6e4:	pop	{fp}		; (ldr fp, [sp], #4)
   1b6e8:	bx	lr

0001b6ec <rb_ports_sched_event>:
   1b6ec:	str	fp, [sp, #-8]!
   1b6f0:	str	lr, [sp, #4]
   1b6f4:	add	fp, sp, #4
   1b6f8:	sub	sp, sp, #8
   1b6fc:	str	r0, [fp, #-8]
   1b700:	str	r1, [fp, #-12]
   1b704:	bl	4d20 <__errno_location@plt>
   1b708:	mov	r2, r0
   1b70c:	mov	r3, #38	; 0x26
   1b710:	str	r3, [r2]
   1b714:	mvn	r3, #0
   1b718:	mov	r0, r3
   1b71c:	sub	sp, fp, #4
   1b720:	ldr	fp, [sp]
   1b724:	add	sp, sp, #4
   1b728:	pop	{pc}		; (ldr pc, [sp], #4)

0001b72c <rb_ports_unsched_event>:
   1b72c:	push	{fp}		; (str fp, [sp, #-4]!)
   1b730:	add	fp, sp, #0
   1b734:	sub	sp, sp, #12
   1b738:	str	r0, [fp, #-8]
   1b73c:	nop	{0}
   1b740:	add	sp, fp, #0
   1b744:	pop	{fp}		; (ldr fp, [sp], #4)
   1b748:	bx	lr

0001b74c <rb_init_netio_ports>:
   1b74c:	push	{fp}		; (str fp, [sp, #-4]!)
   1b750:	add	fp, sp, #0
   1b754:	mov	r3, #38	; 0x26
   1b758:	mov	r0, r3
   1b75c:	add	sp, fp, #0
   1b760:	pop	{fp}		; (ldr fp, [sp], #4)
   1b764:	bx	lr

0001b768 <rb_setselect_ports>:
   1b768:	str	fp, [sp, #-8]!
   1b76c:	str	lr, [sp, #4]
   1b770:	add	fp, sp, #4
   1b774:	sub	sp, sp, #16
   1b778:	str	r0, [fp, #-8]
   1b77c:	str	r1, [fp, #-12]
   1b780:	str	r2, [fp, #-16]
   1b784:	str	r3, [fp, #-20]	; 0xffffffec
   1b788:	bl	4d20 <__errno_location@plt>
   1b78c:	mov	r2, r0
   1b790:	mov	r3, #38	; 0x26
   1b794:	str	r3, [r2]
   1b798:	nop	{0}
   1b79c:	sub	sp, fp, #4
   1b7a0:	ldr	fp, [sp]
   1b7a4:	add	sp, sp, #4
   1b7a8:	pop	{pc}		; (ldr pc, [sp], #4)

0001b7ac <rb_select_ports>:
   1b7ac:	str	fp, [sp, #-8]!
   1b7b0:	str	lr, [sp, #4]
   1b7b4:	add	fp, sp, #4
   1b7b8:	sub	sp, sp, #8
   1b7bc:	str	r0, [fp, #-8]
   1b7c0:	bl	4d20 <__errno_location@plt>
   1b7c4:	mov	r2, r0
   1b7c8:	mov	r3, #38	; 0x26
   1b7cc:	str	r3, [r2]
   1b7d0:	mvn	r3, #0
   1b7d4:	mov	r0, r3
   1b7d8:	sub	sp, fp, #4
   1b7dc:	ldr	fp, [sp]
   1b7e0:	add	sp, sp, #4
   1b7e4:	pop	{pc}		; (ldr pc, [sp], #4)

0001b7e8 <rb_setup_fd_ports>:
   1b7e8:	str	fp, [sp, #-8]!
   1b7ec:	str	lr, [sp, #4]
   1b7f0:	add	fp, sp, #4
   1b7f4:	sub	sp, sp, #8
   1b7f8:	str	r0, [fp, #-8]
   1b7fc:	bl	4d20 <__errno_location@plt>
   1b800:	mov	r2, r0
   1b804:	mov	r3, #38	; 0x26
   1b808:	str	r3, [r2]
   1b80c:	mvn	r3, #0
   1b810:	mov	r0, r3
   1b814:	sub	sp, fp, #4
   1b818:	ldr	fp, [sp]
   1b81c:	add	sp, sp, #4
   1b820:	pop	{pc}		; (ldr pc, [sp], #4)

0001b824 <rb_malloc>:
   1b824:	str	fp, [sp, #-8]!
   1b828:	str	lr, [sp, #4]
   1b82c:	add	fp, sp, #4
   1b830:	sub	sp, sp, #16
   1b834:	str	r0, [fp, #-16]
   1b838:	ldr	r1, [fp, #-16]
   1b83c:	mov	r0, #1
   1b840:	bl	460c <calloc@plt>
   1b844:	mov	r3, r0
   1b848:	str	r3, [fp, #-8]
   1b84c:	ldr	r3, [fp, #-8]
   1b850:	cmp	r3, #0
   1b854:	moveq	r3, #1
   1b858:	movne	r3, #0
   1b85c:	uxtb	r3, r3
   1b860:	cmp	r3, #0
   1b864:	beq	1b86c <rb_malloc+0x48>
   1b868:	bl	49a8 <rb_outofmemory@plt>
   1b86c:	ldr	r3, [fp, #-8]
   1b870:	mov	r0, r3
   1b874:	sub	sp, fp, #4
   1b878:	ldr	fp, [sp]
   1b87c:	add	sp, sp, #4
   1b880:	pop	{pc}		; (ldr pc, [sp], #4)

0001b884 <rb_realloc>:
   1b884:	str	fp, [sp, #-8]!
   1b888:	str	lr, [sp, #4]
   1b88c:	add	fp, sp, #4
   1b890:	sub	sp, sp, #16
   1b894:	str	r0, [fp, #-16]
   1b898:	str	r1, [fp, #-20]	; 0xffffffec
   1b89c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b8a0:	ldr	r0, [fp, #-16]
   1b8a4:	bl	4c6c <realloc@plt>
   1b8a8:	str	r0, [fp, #-8]
   1b8ac:	ldr	r3, [fp, #-8]
   1b8b0:	cmp	r3, #0
   1b8b4:	moveq	r3, #1
   1b8b8:	movne	r3, #0
   1b8bc:	uxtb	r3, r3
   1b8c0:	cmp	r3, #0
   1b8c4:	beq	1b8cc <rb_realloc+0x48>
   1b8c8:	bl	49a8 <rb_outofmemory@plt>
   1b8cc:	ldr	r3, [fp, #-8]
   1b8d0:	mov	r0, r3
   1b8d4:	sub	sp, fp, #4
   1b8d8:	ldr	fp, [sp]
   1b8dc:	add	sp, sp, #4
   1b8e0:	pop	{pc}		; (ldr pc, [sp], #4)

0001b8e4 <rb_free>:
   1b8e4:	str	fp, [sp, #-8]!
   1b8e8:	str	lr, [sp, #4]
   1b8ec:	add	fp, sp, #4
   1b8f0:	sub	sp, sp, #8
   1b8f4:	str	r0, [fp, #-8]
   1b8f8:	ldr	r3, [fp, #-8]
   1b8fc:	cmp	r3, #0
   1b900:	movne	r3, #1
   1b904:	moveq	r3, #0
   1b908:	uxtb	r3, r3
   1b90c:	cmp	r3, #0
   1b910:	beq	1b91c <rb_free+0x38>
   1b914:	ldr	r0, [fp, #-8]
   1b918:	bl	4720 <free@plt>
   1b91c:	nop	{0}
   1b920:	sub	sp, fp, #4
   1b924:	ldr	fp, [sp]
   1b928:	add	sp, sp, #4
   1b92c:	pop	{pc}		; (ldr pc, [sp], #4)

0001b930 <rb_find_fd>:
   1b930:	push	{fp}		; (str fp, [sp, #-4]!)
   1b934:	add	fp, sp, #0
   1b938:	sub	sp, sp, #28
   1b93c:	str	r0, [fp, #-24]	; 0xffffffe8
   1b940:	ldr	r2, [pc, #220]	; 1ba24 <rb_find_fd+0xf4>
   1b944:	add	r2, pc, r2
   1b948:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b94c:	lsr	r3, r3, #31
   1b950:	uxtb	r3, r3
   1b954:	cmp	r3, #0
   1b958:	beq	1b964 <rb_find_fd+0x34>
   1b95c:	mov	r3, #0
   1b960:	b	1ba14 <rb_find_fd+0xe4>
   1b964:	ldr	r3, [pc, #188]	; 1ba28 <rb_find_fd+0xf8>
   1b968:	ldr	r3, [r2, r3]
   1b96c:	ldr	r1, [r3]
   1b970:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b974:	asr	r2, r3, #12
   1b978:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b97c:	eor	r2, r2, r3
   1b980:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b984:	asr	r3, r3, #24
   1b988:	eor	r3, r3, r2
   1b98c:	ubfx	r2, r3, #0, #12
   1b990:	mov	r3, r2
   1b994:	lsl	r3, r3, #1
   1b998:	add	r3, r3, r2
   1b99c:	lsl	r3, r3, #2
   1b9a0:	add	r3, r1, r3
   1b9a4:	str	r3, [fp, #-12]
   1b9a8:	ldr	r3, [fp, #-12]
   1b9ac:	ldr	r3, [r3]
   1b9b0:	cmp	r3, #0
   1b9b4:	bne	1b9c0 <rb_find_fd+0x90>
   1b9b8:	mov	r3, #0
   1b9bc:	b	1ba14 <rb_find_fd+0xe4>
   1b9c0:	ldr	r3, [fp, #-12]
   1b9c4:	ldr	r3, [r3]
   1b9c8:	str	r3, [fp, #-8]
   1b9cc:	b	1ba04 <rb_find_fd+0xd4>
   1b9d0:	ldr	r3, [fp, #-8]
   1b9d4:	ldr	r3, [r3]
   1b9d8:	str	r3, [fp, #-16]
   1b9dc:	ldr	r3, [fp, #-16]
   1b9e0:	ldr	r3, [r3, #12]
   1b9e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b9e8:	cmp	r2, r3
   1b9ec:	bne	1b9f8 <rb_find_fd+0xc8>
   1b9f0:	ldr	r3, [fp, #-16]
   1b9f4:	b	1ba14 <rb_find_fd+0xe4>
   1b9f8:	ldr	r3, [fp, #-8]
   1b9fc:	ldr	r3, [r3, #8]
   1ba00:	str	r3, [fp, #-8]
   1ba04:	ldr	r3, [fp, #-8]
   1ba08:	cmp	r3, #0
   1ba0c:	bne	1b9d0 <rb_find_fd+0xa0>
   1ba10:	mov	r3, #0
   1ba14:	mov	r0, r3
   1ba18:	add	sp, fp, #0
   1ba1c:	pop	{fp}		; (ldr fp, [sp], #4)
   1ba20:	bx	lr
   1ba24:	.word	0x000196b4
   1ba28:	.word	0x000003c4

0001ba2c <rb_init_netio_sigio>:
   1ba2c:	str	r4, [sp, #-12]!
   1ba30:	str	fp, [sp, #4]
   1ba34:	str	lr, [sp, #8]
   1ba38:	add	fp, sp, #8
   1ba3c:	sub	sp, sp, #12
   1ba40:	ldr	r4, [pc, #312]	; 1bb80 <rb_init_netio_sigio+0x154>
   1ba44:	add	r4, pc, r4
   1ba48:	bl	448c <rb_getmaxconnect@plt>
   1ba4c:	mov	r3, r0
   1ba50:	lsl	r3, r3, #3
   1ba54:	mov	r0, r3
   1ba58:	bl	1b824 <rb_malloc>
   1ba5c:	mov	r2, r0
   1ba60:	ldr	r3, [pc, #284]	; 1bb84 <rb_init_netio_sigio+0x158>
   1ba64:	ldr	r3, [r4, r3]
   1ba68:	str	r2, [r3]
   1ba6c:	bl	448c <rb_getmaxconnect@plt>
   1ba70:	mov	r2, r0
   1ba74:	ldr	r3, [pc, #264]	; 1bb84 <rb_init_netio_sigio+0x158>
   1ba78:	ldr	r3, [r4, r3]
   1ba7c:	str	r2, [r3, #8]
   1ba80:	mov	r3, #0
   1ba84:	str	r3, [fp, #-16]
   1ba88:	b	1bab8 <rb_init_netio_sigio+0x8c>
   1ba8c:	ldr	r3, [pc, #240]	; 1bb84 <rb_init_netio_sigio+0x158>
   1ba90:	ldr	r3, [r4, r3]
   1ba94:	ldr	r2, [r3]
   1ba98:	ldr	r3, [fp, #-16]
   1ba9c:	lsl	r3, r3, #3
   1baa0:	add	r3, r2, r3
   1baa4:	mvn	r2, #0
   1baa8:	str	r2, [r3]
   1baac:	ldr	r3, [fp, #-16]
   1bab0:	add	r3, r3, #1
   1bab4:	str	r3, [fp, #-16]
   1bab8:	bl	448c <rb_getmaxconnect@plt>
   1babc:	mov	r2, r0
   1bac0:	ldr	r3, [fp, #-16]
   1bac4:	cmp	r3, r2
   1bac8:	blt	1ba8c <rb_init_netio_sigio+0x60>
   1bacc:	ldr	r3, [pc, #176]	; 1bb84 <rb_init_netio_sigio+0x158>
   1bad0:	ldr	r3, [r4, r3]
   1bad4:	mov	r2, #0
   1bad8:	str	r2, [r3, #4]
   1badc:	ldr	r3, [pc, #164]	; 1bb88 <rb_init_netio_sigio+0x15c>
   1bae0:	add	r3, pc, r3
   1bae4:	mov	r2, #1
   1bae8:	str	r2, [r3]
   1baec:	ldr	r3, [pc, #152]	; 1bb8c <rb_init_netio_sigio+0x160>
   1baf0:	add	r3, pc, r3
   1baf4:	mov	r0, r3
   1baf8:	bl	43b4 <sigemptyset@plt>
   1bafc:	bl	44a4 <__libc_current_sigrtmin@plt>
   1bb00:	mov	r3, r0
   1bb04:	mov	r1, r3
   1bb08:	ldr	r3, [pc, #128]	; 1bb90 <rb_init_netio_sigio+0x164>
   1bb0c:	add	r3, pc, r3
   1bb10:	mov	r0, r3
   1bb14:	bl	48a0 <sigaddset@plt>
   1bb18:	mov	r1, #29
   1bb1c:	ldr	r3, [pc, #112]	; 1bb94 <rb_init_netio_sigio+0x168>
   1bb20:	add	r3, pc, r3
   1bb24:	mov	r0, r3
   1bb28:	bl	48a0 <sigaddset@plt>
   1bb2c:	bl	44a4 <__libc_current_sigrtmin@plt>
   1bb30:	mov	r3, r0
   1bb34:	add	r3, r3, #1
   1bb38:	mov	r1, r3
   1bb3c:	ldr	r3, [pc, #84]	; 1bb98 <rb_init_netio_sigio+0x16c>
   1bb40:	add	r3, pc, r3
   1bb44:	mov	r0, r3
   1bb48:	bl	48a0 <sigaddset@plt>
   1bb4c:	mov	r2, #0
   1bb50:	ldr	r3, [pc, #68]	; 1bb9c <rb_init_netio_sigio+0x170>
   1bb54:	add	r3, pc, r3
   1bb58:	mov	r1, r3
   1bb5c:	mov	r0, #0
   1bb60:	bl	49d8 <sigprocmask@plt>
   1bb64:	mov	r3, #0
   1bb68:	mov	r0, r3
   1bb6c:	sub	sp, fp, #8
   1bb70:	ldr	r4, [sp]
   1bb74:	ldr	fp, [sp, #4]
   1bb78:	add	sp, sp, #8
   1bb7c:	pop	{pc}		; (ldr pc, [sp], #4)
   1bb80:	.word	0x000195b4
   1bb84:	.word	0x000003d4
   1bb88:	.word	0x00037690
   1bb8c:	.word	0x00037684
   1bb90:	.word	0x00037668
   1bb94:	.word	0x00037654
   1bb98:	.word	0x00037634
   1bb9c:	.word	0x00037620

0001bba0 <resize_pollarray>:
   1bba0:	str	r4, [sp, #-12]!
   1bba4:	str	fp, [sp, #4]
   1bba8:	str	lr, [sp, #8]
   1bbac:	add	fp, sp, #8
   1bbb0:	sub	sp, sp, #20
   1bbb4:	str	r0, [fp, #-24]	; 0xffffffe8
   1bbb8:	ldr	r4, [pc, #292]	; 1bce4 <resize_pollarray+0x144>
   1bbbc:	add	r4, pc, r4
   1bbc0:	ldr	r3, [pc, #288]	; 1bce8 <resize_pollarray+0x148>
   1bbc4:	ldr	r3, [r4, r3]
   1bbc8:	ldr	r3, [r3, #8]
   1bbcc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1bbd0:	cmp	r2, r3
   1bbd4:	movge	r3, #1
   1bbd8:	movlt	r3, #0
   1bbdc:	uxtb	r3, r3
   1bbe0:	cmp	r3, #0
   1bbe4:	beq	1bccc <resize_pollarray+0x12c>
   1bbe8:	ldr	r3, [pc, #248]	; 1bce8 <resize_pollarray+0x148>
   1bbec:	ldr	r3, [r4, r3]
   1bbf0:	ldr	r3, [r3, #8]
   1bbf4:	str	r3, [fp, #-20]	; 0xffffffec
   1bbf8:	ldr	r3, [pc, #232]	; 1bce8 <resize_pollarray+0x148>
   1bbfc:	ldr	r3, [r4, r3]
   1bc00:	ldr	r3, [r3, #8]
   1bc04:	add	r2, r3, #1024	; 0x400
   1bc08:	ldr	r3, [pc, #216]	; 1bce8 <resize_pollarray+0x148>
   1bc0c:	ldr	r3, [r4, r3]
   1bc10:	str	r2, [r3, #8]
   1bc14:	ldr	r3, [pc, #204]	; 1bce8 <resize_pollarray+0x148>
   1bc18:	ldr	r3, [r4, r3]
   1bc1c:	ldr	r2, [r3]
   1bc20:	ldr	r3, [pc, #192]	; 1bce8 <resize_pollarray+0x148>
   1bc24:	ldr	r3, [r4, r3]
   1bc28:	ldr	r3, [r3, #8]
   1bc2c:	lsl	r3, r3, #3
   1bc30:	mov	r1, r3
   1bc34:	mov	r0, r2
   1bc38:	bl	1b884 <rb_realloc>
   1bc3c:	mov	r2, r0
   1bc40:	ldr	r3, [pc, #160]	; 1bce8 <resize_pollarray+0x148>
   1bc44:	ldr	r3, [r4, r3]
   1bc48:	str	r2, [r3]
   1bc4c:	ldr	r3, [pc, #148]	; 1bce8 <resize_pollarray+0x148>
   1bc50:	ldr	r3, [r4, r3]
   1bc54:	ldr	r2, [r3]
   1bc58:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bc5c:	add	r3, r3, #1
   1bc60:	lsl	r3, r3, #3
   1bc64:	add	r3, r2, r3
   1bc68:	mov	r2, #8192	; 0x2000
   1bc6c:	mov	r1, #0
   1bc70:	mov	r0, r3
   1bc74:	bl	4648 <memset@plt>
   1bc78:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bc7c:	add	r3, r3, #1
   1bc80:	str	r3, [fp, #-16]
   1bc84:	b	1bcb4 <resize_pollarray+0x114>
   1bc88:	ldr	r3, [pc, #88]	; 1bce8 <resize_pollarray+0x148>
   1bc8c:	ldr	r3, [r4, r3]
   1bc90:	ldr	r2, [r3]
   1bc94:	ldr	r3, [fp, #-16]
   1bc98:	lsl	r3, r3, #3
   1bc9c:	add	r3, r2, r3
   1bca0:	mvn	r2, #0
   1bca4:	str	r2, [r3]
   1bca8:	ldr	r3, [fp, #-16]
   1bcac:	add	r3, r3, #1
   1bcb0:	str	r3, [fp, #-16]
   1bcb4:	ldr	r3, [pc, #44]	; 1bce8 <resize_pollarray+0x148>
   1bcb8:	ldr	r3, [r4, r3]
   1bcbc:	ldr	r3, [r3, #8]
   1bcc0:	ldr	r2, [fp, #-16]
   1bcc4:	cmp	r2, r3
   1bcc8:	blt	1bc88 <resize_pollarray+0xe8>
   1bccc:	nop	{0}
   1bcd0:	sub	sp, fp, #8
   1bcd4:	ldr	r4, [sp]
   1bcd8:	ldr	fp, [sp, #4]
   1bcdc:	add	sp, sp, #8
   1bce0:	pop	{pc}		; (ldr pc, [sp], #4)
   1bce4:	.word	0x0001943c
   1bce8:	.word	0x000003d4

0001bcec <rb_setup_fd_sigio>:
   1bcec:	str	fp, [sp, #-8]!
   1bcf0:	str	lr, [sp, #4]
   1bcf4:	add	fp, sp, #4
   1bcf8:	sub	sp, sp, #16
   1bcfc:	str	r0, [fp, #-16]
   1bd00:	mov	r3, #0
   1bd04:	str	r3, [fp, #-8]
   1bd08:	ldr	r3, [fp, #-16]
   1bd0c:	ldr	r3, [r3, #12]
   1bd10:	str	r3, [fp, #-12]
   1bd14:	mov	r2, #0
   1bd18:	mov	r1, #3
   1bd1c:	ldr	r0, [fp, #-12]
   1bd20:	bl	4c30 <fcntl@plt>
   1bd24:	str	r0, [fp, #-8]
   1bd28:	ldr	r3, [fp, #-8]
   1bd2c:	cmn	r3, #1
   1bd30:	bne	1bd3c <rb_setup_fd_sigio+0x50>
   1bd34:	mov	r3, #0
   1bd38:	b	1bdf4 <rb_setup_fd_sigio+0x108>
   1bd3c:	ldr	r3, [fp, #-8]
   1bd40:	and	r3, r3, #8192	; 0x2000
   1bd44:	cmp	r3, #0
   1bd48:	beq	1bd68 <rb_setup_fd_sigio+0x7c>
   1bd4c:	ldr	r3, [fp, #-8]
   1bd50:	bic	r3, r3, #8192	; 0x2000
   1bd54:	str	r3, [fp, #-8]
   1bd58:	ldr	r2, [fp, #-8]
   1bd5c:	mov	r1, #4
   1bd60:	ldr	r0, [fp, #-12]
   1bd64:	bl	4c30 <fcntl@plt>
   1bd68:	ldr	r3, [fp, #-8]
   1bd6c:	orr	r3, r3, #10240	; 0x2800
   1bd70:	str	r3, [fp, #-8]
   1bd74:	ldr	r2, [fp, #-8]
   1bd78:	mov	r1, #4
   1bd7c:	ldr	r0, [fp, #-12]
   1bd80:	bl	4c30 <fcntl@plt>
   1bd84:	mov	r3, r0
   1bd88:	cmn	r3, #1
   1bd8c:	bne	1bd98 <rb_setup_fd_sigio+0xac>
   1bd90:	mov	r3, #0
   1bd94:	b	1bdf4 <rb_setup_fd_sigio+0x108>
   1bd98:	bl	44a4 <__libc_current_sigrtmin@plt>
   1bd9c:	mov	r3, r0
   1bda0:	mov	r2, r3
   1bda4:	mov	r1, #10
   1bda8:	ldr	r0, [fp, #-12]
   1bdac:	bl	4c30 <fcntl@plt>
   1bdb0:	mov	r3, r0
   1bdb4:	cmn	r3, #1
   1bdb8:	bne	1bdc4 <rb_setup_fd_sigio+0xd8>
   1bdbc:	mov	r3, #0
   1bdc0:	b	1bdf4 <rb_setup_fd_sigio+0x108>
   1bdc4:	bl	4aec <getpid@plt>
   1bdc8:	mov	r3, r0
   1bdcc:	mov	r2, r3
   1bdd0:	mov	r1, #8
   1bdd4:	ldr	r0, [fp, #-12]
   1bdd8:	bl	4c30 <fcntl@plt>
   1bddc:	mov	r3, r0
   1bde0:	cmn	r3, #1
   1bde4:	bne	1bdf0 <rb_setup_fd_sigio+0x104>
   1bde8:	mov	r3, #0
   1bdec:	b	1bdf4 <rb_setup_fd_sigio+0x108>
   1bdf0:	mov	r3, #1
   1bdf4:	mov	r0, r3
   1bdf8:	sub	sp, fp, #4
   1bdfc:	ldr	fp, [sp]
   1be00:	add	sp, sp, #4
   1be04:	pop	{pc}		; (ldr pc, [sp], #4)

0001be08 <rb_setselect_sigio>:
   1be08:	str	r4, [sp, #-12]!
   1be0c:	str	fp, [sp, #4]
   1be10:	str	lr, [sp, #8]
   1be14:	add	fp, sp, #8
   1be18:	sub	sp, sp, #20
   1be1c:	str	r0, [fp, #-16]
   1be20:	str	r1, [fp, #-20]	; 0xffffffec
   1be24:	str	r2, [fp, #-24]	; 0xffffffe8
   1be28:	str	r3, [fp, #-28]	; 0xffffffe4
   1be2c:	ldr	r4, [pc, #596]	; 1c088 <rb_setselect_sigio+0x280>
   1be30:	add	r4, pc, r4
   1be34:	ldr	r3, [fp, #-16]
   1be38:	cmp	r3, #0
   1be3c:	beq	1c070 <rb_setselect_sigio+0x268>
   1be40:	ldr	r3, [fp, #-20]	; 0xffffffec
   1be44:	and	r3, r3, #1
   1be48:	cmp	r3, #0
   1be4c:	beq	1bea0 <rb_setselect_sigio+0x98>
   1be50:	ldr	r3, [fp, #-16]
   1be54:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1be58:	str	r2, [r3, #28]
   1be5c:	ldr	r3, [fp, #-16]
   1be60:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1be64:	str	r2, [r3, #32]
   1be68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1be6c:	cmp	r3, #0
   1be70:	beq	1be8c <rb_setselect_sigio+0x84>
   1be74:	ldr	r3, [fp, #-16]
   1be78:	ldr	r3, [r3, #20]
   1be7c:	orr	r2, r3, #64	; 0x40
   1be80:	ldr	r3, [fp, #-16]
   1be84:	str	r2, [r3, #20]
   1be88:	b	1bea0 <rb_setselect_sigio+0x98>
   1be8c:	ldr	r3, [fp, #-16]
   1be90:	ldr	r3, [r3, #20]
   1be94:	bic	r2, r3, #64	; 0x40
   1be98:	ldr	r3, [fp, #-16]
   1be9c:	str	r2, [r3, #20]
   1bea0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bea4:	and	r3, r3, #2
   1bea8:	cmp	r3, #0
   1beac:	beq	1bf00 <rb_setselect_sigio+0xf8>
   1beb0:	ldr	r3, [fp, #-16]
   1beb4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1beb8:	str	r2, [r3, #36]	; 0x24
   1bebc:	ldr	r3, [fp, #-16]
   1bec0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1bec4:	str	r2, [r3, #40]	; 0x28
   1bec8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1becc:	cmp	r3, #0
   1bed0:	beq	1beec <rb_setselect_sigio+0xe4>
   1bed4:	ldr	r3, [fp, #-16]
   1bed8:	ldr	r3, [r3, #20]
   1bedc:	orr	r2, r3, #256	; 0x100
   1bee0:	ldr	r3, [fp, #-16]
   1bee4:	str	r2, [r3, #20]
   1bee8:	b	1bf00 <rb_setselect_sigio+0xf8>
   1beec:	ldr	r3, [fp, #-16]
   1bef0:	ldr	r3, [r3, #20]
   1bef4:	bic	r2, r3, #256	; 0x100
   1bef8:	ldr	r3, [fp, #-16]
   1befc:	str	r2, [r3, #20]
   1bf00:	ldr	r3, [fp, #-16]
   1bf04:	ldr	r3, [r3, #12]
   1bf08:	mov	r0, r3
   1bf0c:	bl	1bba0 <resize_pollarray>
   1bf10:	ldr	r3, [fp, #-16]
   1bf14:	ldr	r3, [r3, #20]
   1bf18:	cmp	r3, #0
   1bf1c:	bgt	1bfe8 <rb_setselect_sigio+0x1e0>
   1bf20:	ldr	r3, [pc, #356]	; 1c08c <rb_setselect_sigio+0x284>
   1bf24:	ldr	r3, [r4, r3]
   1bf28:	ldr	r2, [r3]
   1bf2c:	ldr	r3, [fp, #-16]
   1bf30:	ldr	r3, [r3, #12]
   1bf34:	lsl	r3, r3, #3
   1bf38:	add	r3, r2, r3
   1bf3c:	mov	r2, #0
   1bf40:	strh	r2, [r3, #4]
   1bf44:	ldr	r3, [pc, #320]	; 1c08c <rb_setselect_sigio+0x284>
   1bf48:	ldr	r3, [r4, r3]
   1bf4c:	ldr	r2, [r3]
   1bf50:	ldr	r3, [fp, #-16]
   1bf54:	ldr	r3, [r3, #12]
   1bf58:	lsl	r3, r3, #3
   1bf5c:	add	r3, r2, r3
   1bf60:	mvn	r2, #0
   1bf64:	str	r2, [r3]
   1bf68:	ldr	r3, [fp, #-16]
   1bf6c:	ldr	r2, [r3, #12]
   1bf70:	ldr	r3, [pc, #276]	; 1c08c <rb_setselect_sigio+0x284>
   1bf74:	ldr	r3, [r4, r3]
   1bf78:	ldr	r3, [r3, #4]
   1bf7c:	cmp	r2, r3
   1bf80:	bne	1c074 <rb_setselect_sigio+0x26c>
   1bf84:	b	1bfa4 <rb_setselect_sigio+0x19c>
   1bf88:	ldr	r3, [pc, #252]	; 1c08c <rb_setselect_sigio+0x284>
   1bf8c:	ldr	r3, [r4, r3]
   1bf90:	ldr	r3, [r3, #4]
   1bf94:	sub	r2, r3, #1
   1bf98:	ldr	r3, [pc, #236]	; 1c08c <rb_setselect_sigio+0x284>
   1bf9c:	ldr	r3, [r4, r3]
   1bfa0:	str	r2, [r3, #4]
   1bfa4:	ldr	r3, [pc, #224]	; 1c08c <rb_setselect_sigio+0x284>
   1bfa8:	ldr	r3, [r4, r3]
   1bfac:	ldr	r3, [r3, #4]
   1bfb0:	cmp	r3, #0
   1bfb4:	blt	1c074 <rb_setselect_sigio+0x26c>
   1bfb8:	ldr	r3, [pc, #204]	; 1c08c <rb_setselect_sigio+0x284>
   1bfbc:	ldr	r3, [r4, r3]
   1bfc0:	ldr	r2, [r3]
   1bfc4:	ldr	r3, [pc, #192]	; 1c08c <rb_setselect_sigio+0x284>
   1bfc8:	ldr	r3, [r4, r3]
   1bfcc:	ldr	r3, [r3, #4]
   1bfd0:	lsl	r3, r3, #3
   1bfd4:	add	r3, r2, r3
   1bfd8:	ldr	r3, [r3]
   1bfdc:	cmn	r3, #1
   1bfe0:	beq	1bf88 <rb_setselect_sigio+0x180>
   1bfe4:	b	1c074 <rb_setselect_sigio+0x26c>
   1bfe8:	ldr	r3, [fp, #-16]
   1bfec:	ldr	r1, [r3, #20]
   1bff0:	ldr	r3, [pc, #148]	; 1c08c <rb_setselect_sigio+0x284>
   1bff4:	ldr	r3, [r4, r3]
   1bff8:	ldr	r2, [r3]
   1bffc:	ldr	r3, [fp, #-16]
   1c000:	ldr	r3, [r3, #12]
   1c004:	lsl	r3, r3, #3
   1c008:	add	r3, r2, r3
   1c00c:	sxth	r2, r1
   1c010:	strh	r2, [r3, #4]
   1c014:	ldr	r3, [pc, #112]	; 1c08c <rb_setselect_sigio+0x284>
   1c018:	ldr	r3, [r4, r3]
   1c01c:	ldr	r2, [r3]
   1c020:	ldr	r3, [fp, #-16]
   1c024:	ldr	r3, [r3, #12]
   1c028:	lsl	r3, r3, #3
   1c02c:	add	r3, r2, r3
   1c030:	ldr	r2, [fp, #-16]
   1c034:	ldr	r2, [r2, #12]
   1c038:	str	r2, [r3]
   1c03c:	ldr	r3, [fp, #-16]
   1c040:	ldr	r2, [r3, #12]
   1c044:	ldr	r3, [pc, #64]	; 1c08c <rb_setselect_sigio+0x284>
   1c048:	ldr	r3, [r4, r3]
   1c04c:	ldr	r3, [r3, #4]
   1c050:	cmp	r2, r3
   1c054:	ble	1c074 <rb_setselect_sigio+0x26c>
   1c058:	ldr	r3, [fp, #-16]
   1c05c:	ldr	r2, [r3, #12]
   1c060:	ldr	r3, [pc, #36]	; 1c08c <rb_setselect_sigio+0x284>
   1c064:	ldr	r3, [r4, r3]
   1c068:	str	r2, [r3, #4]
   1c06c:	b	1c074 <rb_setselect_sigio+0x26c>
   1c070:	nop	{0}
   1c074:	sub	sp, fp, #8
   1c078:	ldr	r4, [sp]
   1c07c:	ldr	fp, [sp, #4]
   1c080:	add	sp, sp, #8
   1c084:	pop	{pc}		; (ldr pc, [sp], #4)
   1c088:	.word	0x000191c8
   1c08c:	.word	0x000003d4

0001c090 <rb_select_sigio>:
   1c090:	str	r4, [sp, #-12]!
   1c094:	str	fp, [sp, #4]
   1c098:	str	lr, [sp, #8]
   1c09c:	add	fp, sp, #8
   1c0a0:	sub	sp, sp, #188	; 0xbc
   1c0a4:	str	r0, [fp, #-192]	; 0xffffff40
   1c0a8:	ldr	r4, [pc, #1468]	; 1c66c <rb_select_sigio+0x5dc>
   1c0ac:	add	r4, pc, r4
   1c0b0:	mov	r3, #0
   1c0b4:	str	r3, [fp, #-16]
   1c0b8:	mov	r3, #0
   1c0bc:	str	r3, [fp, #-28]	; 0xffffffe4
   1c0c0:	bl	1c6bc <rb_sigio_supports_event>
   1c0c4:	mov	r3, r0
   1c0c8:	cmp	r3, #0
   1c0cc:	bne	1c0dc <rb_select_sigio+0x4c>
   1c0d0:	ldr	r3, [fp, #-192]	; 0xffffff40
   1c0d4:	cmp	r3, #0
   1c0d8:	blt	1c134 <rb_select_sigio+0xa4>
   1c0dc:	ldr	r2, [fp, #-192]	; 0xffffff40
   1c0e0:	movw	r3, #19923	; 0x4dd3
   1c0e4:	movt	r3, #4194	; 0x1062
   1c0e8:	smull	r1, r3, r3, r2
   1c0ec:	asr	r1, r3, #6
   1c0f0:	asr	r3, r2, #31
   1c0f4:	sub	r3, r1, r3
   1c0f8:	str	r3, [fp, #-184]	; 0xffffff48
   1c0fc:	ldr	r2, [fp, #-192]	; 0xffffff40
   1c100:	movw	r3, #19923	; 0x4dd3
   1c104:	movt	r3, #4194	; 0x1062
   1c108:	smull	r1, r3, r3, r2
   1c10c:	asr	r1, r3, #6
   1c110:	asr	r3, r2, #31
   1c114:	sub	r3, r1, r3
   1c118:	mov	r1, #1000	; 0x3e8
   1c11c:	mul	r3, r1, r3
   1c120:	sub	r3, r2, r3
   1c124:	movw	r2, #16960	; 0x4240
   1c128:	movt	r2, #15
   1c12c:	mul	r3, r2, r3
   1c130:	str	r3, [fp, #-180]	; 0xffffff4c
   1c134:	ldr	r3, [pc, #1332]	; 1c670 <rb_select_sigio+0x5e0>
   1c138:	add	r3, pc, r3
   1c13c:	ldr	r3, [r3]
   1c140:	cmp	r3, #0
   1c144:	bne	1c390 <rb_select_sigio+0x300>
   1c148:	ldr	r3, [pc, #1316]	; 1c674 <rb_select_sigio+0x5e4>
   1c14c:	add	r3, pc, r3
   1c150:	ldr	r3, [r3]
   1c154:	cmp	r3, #0
   1c158:	bne	1c168 <rb_select_sigio+0xd8>
   1c15c:	ldr	r3, [fp, #-192]	; 0xffffff40
   1c160:	cmp	r3, #0
   1c164:	bge	1c188 <rb_select_sigio+0xf8>
   1c168:	sub	r3, fp, #176	; 0xb0
   1c16c:	mov	r1, r3
   1c170:	ldr	r3, [pc, #1280]	; 1c678 <rb_select_sigio+0x5e8>
   1c174:	add	r3, pc, r3
   1c178:	mov	r0, r3
   1c17c:	bl	4498 <sigwaitinfo@plt>
   1c180:	str	r0, [fp, #-20]	; 0xffffffec
   1c184:	b	1c1a8 <rb_select_sigio+0x118>
   1c188:	sub	r2, fp, #184	; 0xb8
   1c18c:	sub	r3, fp, #176	; 0xb0
   1c190:	mov	r1, r3
   1c194:	ldr	r3, [pc, #1248]	; 1c67c <rb_select_sigio+0x5ec>
   1c198:	add	r3, pc, r3
   1c19c:	mov	r0, r3
   1c1a0:	bl	44e0 <sigtimedwait@plt>
   1c1a4:	str	r0, [fp, #-20]	; 0xffffffec
   1c1a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c1ac:	cmp	r3, #0
   1c1b0:	ble	1c398 <rb_select_sigio+0x308>
   1c1b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c1b8:	cmp	r3, #29
   1c1bc:	bne	1c1e4 <rb_select_sigio+0x154>
   1c1c0:	ldr	r3, [pc, #1208]	; 1c680 <rb_select_sigio+0x5f0>
   1c1c4:	add	r3, pc, r3
   1c1c8:	mov	r0, r3
   1c1cc:	bl	493c <rb_lib_log@plt>
   1c1d0:	ldr	r3, [pc, #1196]	; 1c684 <rb_select_sigio+0x5f4>
   1c1d4:	add	r3, pc, r3
   1c1d8:	mov	r2, #1
   1c1dc:	str	r2, [r3]
   1c1e0:	b	1c39c <rb_select_sigio+0x30c>
   1c1e4:	bl	44a4 <__libc_current_sigrtmin@plt>
   1c1e8:	mov	r3, r0
   1c1ec:	add	r3, r3, #1
   1c1f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c1f4:	cmp	r2, r3
   1c1f8:	bne	1c230 <rb_select_sigio+0x1a0>
   1c1fc:	ldr	r3, [pc, #1156]	; 1c688 <rb_select_sigio+0x5f8>
   1c200:	add	r3, pc, r3
   1c204:	ldr	r3, [r3]
   1c208:	cmp	r3, #0
   1c20c:	beq	1c230 <rb_select_sigio+0x1a0>
   1c210:	ldr	r3, [fp, #-156]	; 0xffffff64
   1c214:	str	r3, [fp, #-32]	; 0xffffffe0
   1c218:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c21c:	cmp	r3, #0
   1c220:	beq	1c380 <rb_select_sigio+0x2f0>
   1c224:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c228:	bl	48c4 <rb_run_one_event@plt>
   1c22c:	b	1c38c <rb_select_sigio+0x2fc>
   1c230:	ldr	r3, [fp, #-160]	; 0xffffff60
   1c234:	str	r3, [fp, #-36]	; 0xffffffdc
   1c238:	ldr	r3, [pc, #1100]	; 1c68c <rb_select_sigio+0x5fc>
   1c23c:	ldr	r3, [r4, r3]
   1c240:	ldr	r2, [r3]
   1c244:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c248:	lsl	r3, r3, #3
   1c24c:	add	r3, r2, r3
   1c250:	ldrsh	r1, [r3, #6]
   1c254:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1c258:	sxth	r2, r3
   1c25c:	ldr	r3, [pc, #1064]	; 1c68c <rb_select_sigio+0x5fc>
   1c260:	ldr	r3, [r4, r3]
   1c264:	ldr	r0, [r3]
   1c268:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c26c:	lsl	r3, r3, #3
   1c270:	add	r3, r0, r3
   1c274:	orr	r2, r1, r2
   1c278:	sxth	r2, r2
   1c27c:	strh	r2, [r3, #6]
   1c280:	ldr	r3, [pc, #1028]	; 1c68c <rb_select_sigio+0x5fc>
   1c284:	ldr	r3, [r4, r3]
   1c288:	ldr	r2, [r3]
   1c28c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c290:	lsl	r3, r3, #3
   1c294:	add	r3, r2, r3
   1c298:	ldrsh	r3, [r3, #6]
   1c29c:	str	r3, [fp, #-28]	; 0xffffffe4
   1c2a0:	ldr	r3, [fp, #-16]
   1c2a4:	add	r3, r3, #1
   1c2a8:	str	r3, [fp, #-16]
   1c2ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c2b0:	bl	1b930 <rb_find_fd>
   1c2b4:	str	r0, [fp, #-40]	; 0xffffffd8
   1c2b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c2bc:	cmp	r3, #0
   1c2c0:	beq	1c388 <rb_select_sigio+0x2f8>
   1c2c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c2c8:	and	r3, r3, #89	; 0x59
   1c2cc:	cmp	r3, #0
   1c2d0:	beq	1c320 <rb_select_sigio+0x290>
   1c2d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c2d8:	ldr	r3, [r3, #28]
   1c2dc:	str	r3, [fp, #-44]	; 0xffffffd4
   1c2e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c2e4:	ldr	r3, [r3, #32]
   1c2e8:	str	r3, [fp, #-48]	; 0xffffffd0
   1c2ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c2f0:	mov	r2, #0
   1c2f4:	str	r2, [r3, #28]
   1c2f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c2fc:	mov	r2, #0
   1c300:	str	r2, [r3, #32]
   1c304:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c308:	cmp	r3, #0
   1c30c:	beq	1c320 <rb_select_sigio+0x290>
   1c310:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c314:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c318:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c31c:	blx	r3
   1c320:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c324:	and	r3, r3, #284	; 0x11c
   1c328:	cmp	r3, #0
   1c32c:	beq	1c134 <rb_select_sigio+0xa4>
   1c330:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c334:	ldr	r3, [r3, #36]	; 0x24
   1c338:	str	r3, [fp, #-44]	; 0xffffffd4
   1c33c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c340:	ldr	r3, [r3, #40]	; 0x28
   1c344:	str	r3, [fp, #-48]	; 0xffffffd0
   1c348:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c34c:	mov	r2, #0
   1c350:	str	r2, [r3, #36]	; 0x24
   1c354:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c358:	mov	r2, #0
   1c35c:	str	r2, [r3, #40]	; 0x28
   1c360:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c364:	cmp	r3, #0
   1c368:	beq	1c134 <rb_select_sigio+0xa4>
   1c36c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c370:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c374:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c378:	blx	r3
   1c37c:	b	1c134 <rb_select_sigio+0xa4>
   1c380:	nop	{0}
   1c384:	b	1c134 <rb_select_sigio+0xa4>
   1c388:	nop	{0}
   1c38c:	b	1c134 <rb_select_sigio+0xa4>
   1c390:	nop	{0}
   1c394:	b	1c39c <rb_select_sigio+0x30c>
   1c398:	nop	{0}
   1c39c:	ldr	r3, [pc, #748]	; 1c690 <rb_select_sigio+0x600>
   1c3a0:	add	r3, pc, r3
   1c3a4:	ldr	r3, [r3]
   1c3a8:	cmp	r3, #0
   1c3ac:	bne	1c3bc <rb_select_sigio+0x32c>
   1c3b0:	bl	49b4 <rb_set_time@plt>
   1c3b4:	mov	r3, #0
   1c3b8:	b	1c654 <rb_select_sigio+0x5c4>
   1c3bc:	bl	44a4 <__libc_current_sigrtmin@plt>
   1c3c0:	mov	r3, r0
   1c3c4:	mov	r1, #1
   1c3c8:	mov	r0, r3
   1c3cc:	bl	44f8 <signal@plt>
   1c3d0:	bl	44a4 <__libc_current_sigrtmin@plt>
   1c3d4:	mov	r3, r0
   1c3d8:	mov	r1, #0
   1c3dc:	mov	r0, r3
   1c3e0:	bl	44f8 <signal@plt>
   1c3e4:	ldr	r3, [pc, #680]	; 1c694 <rb_select_sigio+0x604>
   1c3e8:	add	r3, pc, r3
   1c3ec:	mov	r2, #0
   1c3f0:	str	r2, [r3]
   1c3f4:	ldr	r3, [pc, #656]	; 1c68c <rb_select_sigio+0x5fc>
   1c3f8:	ldr	r3, [r4, r3]
   1c3fc:	ldr	r0, [r3]
   1c400:	ldr	r3, [pc, #644]	; 1c68c <rb_select_sigio+0x5fc>
   1c404:	ldr	r3, [r4, r3]
   1c408:	ldr	r3, [r3, #4]
   1c40c:	add	r3, r3, #1
   1c410:	ldr	r2, [fp, #-192]	; 0xffffff40
   1c414:	mov	r1, r3
   1c418:	bl	4a20 <poll@plt>
   1c41c:	str	r0, [fp, #-16]
   1c420:	bl	49b4 <rb_set_time@plt>
   1c424:	ldr	r3, [fp, #-16]
   1c428:	cmp	r3, #0
   1c42c:	bge	1c460 <rb_select_sigio+0x3d0>
   1c430:	bl	4d20 <__errno_location@plt>
   1c434:	mov	r3, r0
   1c438:	ldr	r3, [r3]
   1c43c:	mov	r0, r3
   1c440:	bl	43fc <rb_ignore_errno@plt>
   1c444:	mov	r3, r0
   1c448:	cmp	r3, #0
   1c44c:	bne	1c458 <rb_select_sigio+0x3c8>
   1c450:	mov	r3, #0
   1c454:	b	1c654 <rb_select_sigio+0x5c4>
   1c458:	mov	r3, #5
   1c45c:	b	1c654 <rb_select_sigio+0x5c4>
   1c460:	ldr	r3, [fp, #-16]
   1c464:	cmp	r3, #0
   1c468:	bne	1c474 <rb_select_sigio+0x3e4>
   1c46c:	mov	r3, #0
   1c470:	b	1c654 <rb_select_sigio+0x5c4>
   1c474:	mov	r3, #0
   1c478:	str	r3, [fp, #-24]	; 0xffffffe8
   1c47c:	b	1c638 <rb_select_sigio+0x5a8>
   1c480:	ldr	r3, [pc, #516]	; 1c68c <rb_select_sigio+0x5fc>
   1c484:	ldr	r3, [r4, r3]
   1c488:	ldr	r2, [r3]
   1c48c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c490:	lsl	r3, r3, #3
   1c494:	add	r3, r2, r3
   1c498:	ldrsh	r3, [r3, #6]
   1c49c:	str	r3, [fp, #-28]	; 0xffffffe4
   1c4a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c4a4:	cmp	r3, #0
   1c4a8:	beq	1c620 <rb_select_sigio+0x590>
   1c4ac:	ldr	r3, [pc, #472]	; 1c68c <rb_select_sigio+0x5fc>
   1c4b0:	ldr	r3, [r4, r3]
   1c4b4:	ldr	r2, [r3]
   1c4b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c4bc:	lsl	r3, r3, #3
   1c4c0:	add	r3, r2, r3
   1c4c4:	ldr	r3, [r3]
   1c4c8:	cmn	r3, #1
   1c4cc:	beq	1c620 <rb_select_sigio+0x590>
   1c4d0:	ldr	r3, [pc, #436]	; 1c68c <rb_select_sigio+0x5fc>
   1c4d4:	ldr	r3, [r4, r3]
   1c4d8:	ldr	r2, [r3]
   1c4dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c4e0:	lsl	r3, r3, #3
   1c4e4:	add	r3, r2, r3
   1c4e8:	ldr	r3, [r3]
   1c4ec:	str	r3, [fp, #-36]	; 0xffffffdc
   1c4f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c4f4:	bl	1b930 <rb_find_fd>
   1c4f8:	str	r0, [fp, #-40]	; 0xffffffd8
   1c4fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c500:	cmp	r3, #0
   1c504:	beq	1c628 <rb_select_sigio+0x598>
   1c508:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c50c:	and	r3, r3, #89	; 0x59
   1c510:	cmp	r3, #0
   1c514:	beq	1c564 <rb_select_sigio+0x4d4>
   1c518:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c51c:	ldr	r3, [r3, #28]
   1c520:	str	r3, [fp, #-44]	; 0xffffffd4
   1c524:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c528:	ldr	r3, [r3, #32]
   1c52c:	str	r3, [fp, #-48]	; 0xffffffd0
   1c530:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c534:	mov	r2, #0
   1c538:	str	r2, [r3, #28]
   1c53c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c540:	mov	r2, #0
   1c544:	str	r2, [r3, #32]
   1c548:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c54c:	cmp	r3, #0
   1c550:	beq	1c564 <rb_select_sigio+0x4d4>
   1c554:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c558:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c55c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c560:	blx	r3
   1c564:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c568:	ldrb	r3, [r3, #16]
   1c56c:	and	r3, r3, #1
   1c570:	cmp	r3, #0
   1c574:	beq	1c5d4 <rb_select_sigio+0x544>
   1c578:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c57c:	and	r3, r3, #284	; 0x11c
   1c580:	cmp	r3, #0
   1c584:	beq	1c5d4 <rb_select_sigio+0x544>
   1c588:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c58c:	ldr	r3, [r3, #36]	; 0x24
   1c590:	str	r3, [fp, #-44]	; 0xffffffd4
   1c594:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c598:	ldr	r3, [r3, #40]	; 0x28
   1c59c:	str	r3, [fp, #-48]	; 0xffffffd0
   1c5a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c5a4:	mov	r2, #0
   1c5a8:	str	r2, [r3, #36]	; 0x24
   1c5ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c5b0:	mov	r2, #0
   1c5b4:	str	r2, [r3, #40]	; 0x28
   1c5b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c5bc:	cmp	r3, #0
   1c5c0:	beq	1c5d4 <rb_select_sigio+0x544>
   1c5c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c5c8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c5cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c5d0:	blx	r3
   1c5d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c5d8:	ldr	r3, [r3, #28]
   1c5dc:	cmp	r3, #0
   1c5e0:	bne	1c5f8 <rb_select_sigio+0x568>
   1c5e4:	mov	r3, #0
   1c5e8:	mov	r2, #0
   1c5ec:	mov	r1, #1
   1c5f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c5f4:	bl	1be08 <rb_setselect_sigio>
   1c5f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c5fc:	ldr	r3, [r3, #36]	; 0x24
   1c600:	cmp	r3, #0
   1c604:	bne	1c62c <rb_select_sigio+0x59c>
   1c608:	mov	r3, #0
   1c60c:	mov	r2, #0
   1c610:	mov	r1, #2
   1c614:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c618:	bl	1be08 <rb_setselect_sigio>
   1c61c:	b	1c62c <rb_select_sigio+0x59c>
   1c620:	nop	{0}
   1c624:	b	1c62c <rb_select_sigio+0x59c>
   1c628:	nop	{0}
   1c62c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c630:	add	r3, r3, #1
   1c634:	str	r3, [fp, #-24]	; 0xffffffe8
   1c638:	ldr	r3, [pc, #76]	; 1c68c <rb_select_sigio+0x5fc>
   1c63c:	ldr	r3, [r4, r3]
   1c640:	ldr	r3, [r3, #4]
   1c644:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c648:	cmp	r2, r3
   1c64c:	ble	1c480 <rb_select_sigio+0x3f0>
   1c650:	mov	r3, #0
   1c654:	mov	r0, r3
   1c658:	sub	sp, fp, #8
   1c65c:	ldr	r4, [sp]
   1c660:	ldr	fp, [sp, #4]
   1c664:	add	sp, sp, #8
   1c668:	pop	{pc}		; (ldr pc, [sp], #4)
   1c66c:	.word	0x00018f4c
   1c670:	.word	0x00037038
   1c674:	.word	0x00037020
   1c678:	.word	0x00037000
   1c67c:	.word	0x00036fdc
   1c680:	.word	0x0000872c
   1c684:	.word	0x00036f9c
   1c688:	.word	0x00036f6c
   1c68c:	.word	0x000003d4
   1c690:	.word	0x00036dd0
   1c694:	.word	0x00036d88

0001c698 <rb_sigio_init_event>:
   1c698:	str	fp, [sp, #-8]!
   1c69c:	str	lr, [sp, #4]
   1c6a0:	add	fp, sp, #4
   1c6a4:	bl	1c6bc <rb_sigio_supports_event>
   1c6a8:	nop	{0}
   1c6ac:	sub	sp, fp, #4
   1c6b0:	ldr	fp, [sp]
   1c6b4:	add	sp, sp, #4
   1c6b8:	pop	{pc}		; (ldr pc, [sp], #4)

0001c6bc <rb_sigio_supports_event>:
   1c6bc:	str	fp, [sp, #-8]!
   1c6c0:	str	lr, [sp, #4]
   1c6c4:	add	fp, sp, #4
   1c6c8:	sub	sp, sp, #72	; 0x48
   1c6cc:	ldr	r3, [pc, #172]	; 1c780 <rb_sigio_supports_event+0xc4>
   1c6d0:	add	r3, pc, r3
   1c6d4:	ldr	r3, [r3]
   1c6d8:	cmp	r3, #1
   1c6dc:	bne	1c6e8 <rb_sigio_supports_event+0x2c>
   1c6e0:	mov	r3, #1
   1c6e4:	b	1c76c <rb_sigio_supports_event+0xb0>
   1c6e8:	ldr	r3, [pc, #148]	; 1c784 <rb_sigio_supports_event+0xc8>
   1c6ec:	add	r3, pc, r3
   1c6f0:	ldr	r3, [r3]
   1c6f4:	cmn	r3, #1
   1c6f8:	bne	1c704 <rb_sigio_supports_event+0x48>
   1c6fc:	mov	r3, #0
   1c700:	b	1c76c <rb_sigio_supports_event+0xb0>
   1c704:	mov	r3, #26
   1c708:	str	r3, [fp, #-68]	; 0xffffffbc
   1c70c:	mov	r3, #0
   1c710:	str	r3, [fp, #-64]	; 0xffffffc0
   1c714:	sub	r2, fp, #8
   1c718:	sub	r3, fp, #72	; 0x48
   1c71c:	mov	r1, r3
   1c720:	mov	r0, #0
   1c724:	bl	454c <timer_create@plt>
   1c728:	mov	r3, r0
   1c72c:	cmp	r3, #0
   1c730:	beq	1c74c <rb_sigio_supports_event+0x90>
   1c734:	ldr	r3, [pc, #76]	; 1c788 <rb_sigio_supports_event+0xcc>
   1c738:	add	r3, pc, r3
   1c73c:	mvn	r2, #0
   1c740:	str	r2, [r3]
   1c744:	mov	r3, #0
   1c748:	b	1c76c <rb_sigio_supports_event+0xb0>
   1c74c:	ldr	r3, [fp, #-8]
   1c750:	mov	r0, r3
   1c754:	bl	4a98 <timer_delete@plt>
   1c758:	ldr	r3, [pc, #44]	; 1c78c <rb_sigio_supports_event+0xd0>
   1c75c:	add	r3, pc, r3
   1c760:	mov	r2, #1
   1c764:	str	r2, [r3]
   1c768:	mov	r3, #1
   1c76c:	mov	r0, r3
   1c770:	sub	sp, fp, #4
   1c774:	ldr	fp, [sp]
   1c778:	add	sp, sp, #4
   1c77c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c780:	.word	0x00036a9c
   1c784:	.word	0x00036a80
   1c788:	.word	0x00036a34
   1c78c:	.word	0x00036a10

0001c790 <rb_sigio_sched_event>:
   1c790:	str	fp, [sp, #-8]!
   1c794:	str	lr, [sp, #4]
   1c798:	add	fp, sp, #4
   1c79c:	sub	sp, sp, #96	; 0x60
   1c7a0:	str	r0, [fp, #-96]	; 0xffffffa0
   1c7a4:	str	r1, [fp, #-100]	; 0xffffff9c
   1c7a8:	ldr	r3, [pc, #368]	; 1c920 <rb_sigio_sched_event+0x190>
   1c7ac:	add	r3, pc, r3
   1c7b0:	ldr	r3, [r3]
   1c7b4:	cmp	r3, #0
   1c7b8:	bgt	1c7c4 <rb_sigio_sched_event+0x34>
   1c7bc:	mov	r3, #0
   1c7c0:	b	1c90c <rb_sigio_sched_event+0x17c>
   1c7c4:	sub	r3, fp, #72	; 0x48
   1c7c8:	mov	r2, #64	; 0x40
   1c7cc:	mov	r1, #0
   1c7d0:	mov	r0, r3
   1c7d4:	bl	4648 <memset@plt>
   1c7d8:	mov	r0, #4
   1c7dc:	bl	1b824 <rb_malloc>
   1c7e0:	mov	r2, r0
   1c7e4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1c7e8:	str	r2, [r3, #40]	; 0x28
   1c7ec:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1c7f0:	ldr	r3, [r3, #40]	; 0x28
   1c7f4:	str	r3, [fp, #-8]
   1c7f8:	mov	r3, #0
   1c7fc:	str	r3, [fp, #-64]	; 0xffffffc0
   1c800:	bl	44a4 <__libc_current_sigrtmin@plt>
   1c804:	mov	r3, r0
   1c808:	add	r3, r3, #1
   1c80c:	str	r3, [fp, #-68]	; 0xffffffbc
   1c810:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1c814:	str	r3, [fp, #-72]	; 0xffffffb8
   1c818:	sub	r3, fp, #72	; 0x48
   1c81c:	ldr	r2, [fp, #-8]
   1c820:	mov	r1, r3
   1c824:	mov	r0, #0
   1c828:	bl	454c <timer_create@plt>
   1c82c:	mov	r3, r0
   1c830:	cmp	r3, #0
   1c834:	bge	1c86c <rb_sigio_sched_event+0xdc>
   1c838:	bl	4d20 <__errno_location@plt>
   1c83c:	mov	r3, r0
   1c840:	ldr	r3, [r3]
   1c844:	mov	r0, r3
   1c848:	bl	43c0 <strerror@plt>
   1c84c:	mov	r3, r0
   1c850:	mov	r1, r3
   1c854:	ldr	r3, [pc, #200]	; 1c924 <rb_sigio_sched_event+0x194>
   1c858:	add	r3, pc, r3
   1c85c:	mov	r0, r3
   1c860:	bl	493c <rb_lib_log@plt>
   1c864:	mov	r3, #0
   1c868:	b	1c90c <rb_sigio_sched_event+0x17c>
   1c86c:	sub	r3, fp, #88	; 0x58
   1c870:	mov	r2, #16
   1c874:	mov	r1, #0
   1c878:	mov	r0, r3
   1c87c:	bl	4648 <memset@plt>
   1c880:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1c884:	str	r3, [fp, #-80]	; 0xffffffb0
   1c888:	mov	r3, #0
   1c88c:	str	r3, [fp, #-76]	; 0xffffffb4
   1c890:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1c894:	ldr	r3, [r3, #24]
   1c898:	cmp	r3, #0
   1c89c:	beq	1c8b0 <rb_sigio_sched_event+0x120>
   1c8a0:	sub	r1, fp, #88	; 0x58
   1c8a4:	sub	r3, fp, #80	; 0x50
   1c8a8:	ldrd	r2, [r3]
   1c8ac:	strd	r2, [r1]
   1c8b0:	ldr	r3, [fp, #-8]
   1c8b4:	ldr	r0, [r3]
   1c8b8:	sub	r2, fp, #88	; 0x58
   1c8bc:	mov	r3, #0
   1c8c0:	mov	r1, #0
   1c8c4:	bl	4780 <timer_settime@plt>
   1c8c8:	mov	r3, r0
   1c8cc:	cmp	r3, #0
   1c8d0:	bge	1c908 <rb_sigio_sched_event+0x178>
   1c8d4:	bl	4d20 <__errno_location@plt>
   1c8d8:	mov	r3, r0
   1c8dc:	ldr	r3, [r3]
   1c8e0:	mov	r0, r3
   1c8e4:	bl	43c0 <strerror@plt>
   1c8e8:	mov	r3, r0
   1c8ec:	mov	r1, r3
   1c8f0:	ldr	r3, [pc, #48]	; 1c928 <rb_sigio_sched_event+0x198>
   1c8f4:	add	r3, pc, r3
   1c8f8:	mov	r0, r3
   1c8fc:	bl	493c <rb_lib_log@plt>
   1c900:	mov	r3, #0
   1c904:	b	1c90c <rb_sigio_sched_event+0x17c>
   1c908:	mov	r3, #1
   1c90c:	mov	r0, r3
   1c910:	sub	sp, fp, #4
   1c914:	ldr	fp, [sp]
   1c918:	add	sp, sp, #4
   1c91c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c920:	.word	0x000369c0
   1c924:	.word	0x0000810c
   1c928:	.word	0x00008084

0001c92c <rb_sigio_unsched_event>:
   1c92c:	str	fp, [sp, #-8]!
   1c930:	str	lr, [sp, #4]
   1c934:	add	fp, sp, #4
   1c938:	sub	sp, sp, #8
   1c93c:	str	r0, [fp, #-8]
   1c940:	ldr	r3, [pc, #84]	; 1c99c <rb_sigio_unsched_event+0x70>
   1c944:	add	r3, pc, r3
   1c948:	ldr	r3, [r3]
   1c94c:	cmp	r3, #0
   1c950:	ble	1c988 <rb_sigio_unsched_event+0x5c>
   1c954:	ldr	r3, [fp, #-8]
   1c958:	ldr	r3, [r3, #40]	; 0x28
   1c95c:	ldr	r3, [r3]
   1c960:	mov	r0, r3
   1c964:	bl	4a98 <timer_delete@plt>
   1c968:	ldr	r3, [fp, #-8]
   1c96c:	ldr	r3, [r3, #40]	; 0x28
   1c970:	mov	r0, r3
   1c974:	bl	1b8e4 <rb_free>
   1c978:	ldr	r3, [fp, #-8]
   1c97c:	mov	r2, #0
   1c980:	str	r2, [r3, #40]	; 0x28
   1c984:	b	1c98c <rb_sigio_unsched_event+0x60>
   1c988:	nop	{0}
   1c98c:	sub	sp, fp, #4
   1c990:	ldr	fp, [sp]
   1c994:	add	sp, sp, #4
   1c998:	pop	{pc}		; (ldr pc, [sp], #4)
   1c99c:	.word	0x00036828

0001c9a0 <rb_find_fd>:
   1c9a0:	push	{fp}		; (str fp, [sp, #-4]!)
   1c9a4:	add	fp, sp, #0
   1c9a8:	sub	sp, sp, #28
   1c9ac:	str	r0, [fp, #-24]	; 0xffffffe8
   1c9b0:	ldr	r2, [pc, #220]	; 1ca94 <rb_find_fd+0xf4>
   1c9b4:	add	r2, pc, r2
   1c9b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c9bc:	lsr	r3, r3, #31
   1c9c0:	uxtb	r3, r3
   1c9c4:	cmp	r3, #0
   1c9c8:	beq	1c9d4 <rb_find_fd+0x34>
   1c9cc:	mov	r3, #0
   1c9d0:	b	1ca84 <rb_find_fd+0xe4>
   1c9d4:	ldr	r3, [pc, #188]	; 1ca98 <rb_find_fd+0xf8>
   1c9d8:	ldr	r3, [r2, r3]
   1c9dc:	ldr	r1, [r3]
   1c9e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c9e4:	asr	r2, r3, #12
   1c9e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c9ec:	eor	r2, r2, r3
   1c9f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c9f4:	asr	r3, r3, #24
   1c9f8:	eor	r3, r3, r2
   1c9fc:	ubfx	r2, r3, #0, #12
   1ca00:	mov	r3, r2
   1ca04:	lsl	r3, r3, #1
   1ca08:	add	r3, r3, r2
   1ca0c:	lsl	r3, r3, #2
   1ca10:	add	r3, r1, r3
   1ca14:	str	r3, [fp, #-12]
   1ca18:	ldr	r3, [fp, #-12]
   1ca1c:	ldr	r3, [r3]
   1ca20:	cmp	r3, #0
   1ca24:	bne	1ca30 <rb_find_fd+0x90>
   1ca28:	mov	r3, #0
   1ca2c:	b	1ca84 <rb_find_fd+0xe4>
   1ca30:	ldr	r3, [fp, #-12]
   1ca34:	ldr	r3, [r3]
   1ca38:	str	r3, [fp, #-8]
   1ca3c:	b	1ca74 <rb_find_fd+0xd4>
   1ca40:	ldr	r3, [fp, #-8]
   1ca44:	ldr	r3, [r3]
   1ca48:	str	r3, [fp, #-16]
   1ca4c:	ldr	r3, [fp, #-16]
   1ca50:	ldr	r3, [r3, #12]
   1ca54:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ca58:	cmp	r2, r3
   1ca5c:	bne	1ca68 <rb_find_fd+0xc8>
   1ca60:	ldr	r3, [fp, #-16]
   1ca64:	b	1ca84 <rb_find_fd+0xe4>
   1ca68:	ldr	r3, [fp, #-8]
   1ca6c:	ldr	r3, [r3, #8]
   1ca70:	str	r3, [fp, #-8]
   1ca74:	ldr	r3, [fp, #-8]
   1ca78:	cmp	r3, #0
   1ca7c:	bne	1ca40 <rb_find_fd+0xa0>
   1ca80:	mov	r3, #0
   1ca84:	mov	r0, r3
   1ca88:	add	sp, fp, #0
   1ca8c:	pop	{fp}		; (ldr fp, [sp], #4)
   1ca90:	bx	lr
   1ca94:	.word	0x00018644
   1ca98:	.word	0x000003c4

0001ca9c <select_update_selectfds>:
   1ca9c:	push	{fp}		; (str fp, [sp, #-4]!)
   1caa0:	add	fp, sp, #0
   1caa4:	sub	sp, sp, #20
   1caa8:	str	r0, [fp, #-8]
   1caac:	mov	r3, r1
   1cab0:	str	r2, [fp, #-16]
   1cab4:	strh	r3, [fp, #-10]
   1cab8:	ldrh	r3, [fp, #-10]
   1cabc:	and	r3, r3, #1
   1cac0:	cmp	r3, #0
   1cac4:	beq	1cbbc <select_update_selectfds+0x120>
   1cac8:	ldr	r3, [fp, #-16]
   1cacc:	cmp	r3, #0
   1cad0:	beq	1cb48 <select_update_selectfds+0xac>
   1cad4:	ldr	r3, [fp, #-8]
   1cad8:	ldr	r3, [r3, #12]
   1cadc:	add	r2, r3, #31
   1cae0:	cmp	r3, #0
   1cae4:	movlt	r3, r2
   1cae8:	movge	r3, r3
   1caec:	asr	r3, r3, #5
   1caf0:	mov	r2, r3
   1caf4:	ldr	r3, [pc, #812]	; 1ce28 <select_update_selectfds+0x38c>
   1caf8:	add	r3, pc, r3
   1cafc:	ldr	r1, [r3, r2, lsl #2]
   1cb00:	ldr	r3, [fp, #-8]
   1cb04:	ldr	r3, [r3, #12]
   1cb08:	rsbs	r0, r3, #0
   1cb0c:	and	r3, r3, #31
   1cb10:	and	r0, r0, #31
   1cb14:	rsbpl	r3, r0, #0
   1cb18:	mov	r0, #1
   1cb1c:	lsl	r3, r0, r3
   1cb20:	orr	r1, r1, r3
   1cb24:	ldr	r3, [pc, #768]	; 1ce2c <select_update_selectfds+0x390>
   1cb28:	add	r3, pc, r3
   1cb2c:	str	r1, [r3, r2, lsl #2]
   1cb30:	ldr	r3, [fp, #-8]
   1cb34:	ldr	r3, [r3, #20]
   1cb38:	orr	r2, r3, #1
   1cb3c:	ldr	r3, [fp, #-8]
   1cb40:	str	r2, [r3, #20]
   1cb44:	b	1cbbc <select_update_selectfds+0x120>
   1cb48:	ldr	r3, [fp, #-8]
   1cb4c:	ldr	r3, [r3, #12]
   1cb50:	add	r2, r3, #31
   1cb54:	cmp	r3, #0
   1cb58:	movlt	r3, r2
   1cb5c:	movge	r3, r3
   1cb60:	asr	r3, r3, #5
   1cb64:	mov	r2, r3
   1cb68:	ldr	r3, [pc, #704]	; 1ce30 <select_update_selectfds+0x394>
   1cb6c:	add	r3, pc, r3
   1cb70:	ldr	r1, [r3, r2, lsl #2]
   1cb74:	ldr	r3, [fp, #-8]
   1cb78:	ldr	r3, [r3, #12]
   1cb7c:	rsbs	r0, r3, #0
   1cb80:	and	r3, r3, #31
   1cb84:	and	r0, r0, #31
   1cb88:	rsbpl	r3, r0, #0
   1cb8c:	mov	r0, #1
   1cb90:	lsl	r3, r0, r3
   1cb94:	mvn	r3, r3
   1cb98:	and	r1, r1, r3
   1cb9c:	ldr	r3, [pc, #656]	; 1ce34 <select_update_selectfds+0x398>
   1cba0:	add	r3, pc, r3
   1cba4:	str	r1, [r3, r2, lsl #2]
   1cba8:	ldr	r3, [fp, #-8]
   1cbac:	ldr	r3, [r3, #20]
   1cbb0:	bic	r2, r3, #1
   1cbb4:	ldr	r3, [fp, #-8]
   1cbb8:	str	r2, [r3, #20]
   1cbbc:	ldrh	r3, [fp, #-10]
   1cbc0:	and	r3, r3, #2
   1cbc4:	cmp	r3, #0
   1cbc8:	beq	1ccc0 <select_update_selectfds+0x224>
   1cbcc:	ldr	r3, [fp, #-16]
   1cbd0:	cmp	r3, #0
   1cbd4:	beq	1cc4c <select_update_selectfds+0x1b0>
   1cbd8:	ldr	r3, [fp, #-8]
   1cbdc:	ldr	r3, [r3, #12]
   1cbe0:	add	r2, r3, #31
   1cbe4:	cmp	r3, #0
   1cbe8:	movlt	r3, r2
   1cbec:	movge	r3, r3
   1cbf0:	asr	r3, r3, #5
   1cbf4:	mov	r2, r3
   1cbf8:	ldr	r3, [pc, #568]	; 1ce38 <select_update_selectfds+0x39c>
   1cbfc:	add	r3, pc, r3
   1cc00:	ldr	r1, [r3, r2, lsl #2]
   1cc04:	ldr	r3, [fp, #-8]
   1cc08:	ldr	r3, [r3, #12]
   1cc0c:	rsbs	r0, r3, #0
   1cc10:	and	r3, r3, #31
   1cc14:	and	r0, r0, #31
   1cc18:	rsbpl	r3, r0, #0
   1cc1c:	mov	r0, #1
   1cc20:	lsl	r3, r0, r3
   1cc24:	orr	r1, r1, r3
   1cc28:	ldr	r3, [pc, #524]	; 1ce3c <select_update_selectfds+0x3a0>
   1cc2c:	add	r3, pc, r3
   1cc30:	str	r1, [r3, r2, lsl #2]
   1cc34:	ldr	r3, [fp, #-8]
   1cc38:	ldr	r3, [r3, #20]
   1cc3c:	orr	r2, r3, #2
   1cc40:	ldr	r3, [fp, #-8]
   1cc44:	str	r2, [r3, #20]
   1cc48:	b	1ccc0 <select_update_selectfds+0x224>
   1cc4c:	ldr	r3, [fp, #-8]
   1cc50:	ldr	r3, [r3, #12]
   1cc54:	add	r2, r3, #31
   1cc58:	cmp	r3, #0
   1cc5c:	movlt	r3, r2
   1cc60:	movge	r3, r3
   1cc64:	asr	r3, r3, #5
   1cc68:	mov	r2, r3
   1cc6c:	ldr	r3, [pc, #460]	; 1ce40 <select_update_selectfds+0x3a4>
   1cc70:	add	r3, pc, r3
   1cc74:	ldr	r1, [r3, r2, lsl #2]
   1cc78:	ldr	r3, [fp, #-8]
   1cc7c:	ldr	r3, [r3, #12]
   1cc80:	rsbs	r0, r3, #0
   1cc84:	and	r3, r3, #31
   1cc88:	and	r0, r0, #31
   1cc8c:	rsbpl	r3, r0, #0
   1cc90:	mov	r0, #1
   1cc94:	lsl	r3, r0, r3
   1cc98:	mvn	r3, r3
   1cc9c:	and	r1, r1, r3
   1cca0:	ldr	r3, [pc, #412]	; 1ce44 <select_update_selectfds+0x3a8>
   1cca4:	add	r3, pc, r3
   1cca8:	str	r1, [r3, r2, lsl #2]
   1ccac:	ldr	r3, [fp, #-8]
   1ccb0:	ldr	r3, [r3, #20]
   1ccb4:	bic	r2, r3, #2
   1ccb8:	ldr	r3, [fp, #-8]
   1ccbc:	str	r2, [r3, #20]
   1ccc0:	ldr	r3, [fp, #-8]
   1ccc4:	ldr	r3, [r3, #20]
   1ccc8:	and	r3, r3, #3
   1cccc:	cmp	r3, #0
   1ccd0:	beq	1cd08 <select_update_selectfds+0x26c>
   1ccd4:	ldr	r3, [fp, #-8]
   1ccd8:	ldr	r2, [r3, #12]
   1ccdc:	ldr	r3, [pc, #356]	; 1ce48 <select_update_selectfds+0x3ac>
   1cce0:	add	r3, pc, r3
   1cce4:	ldr	r3, [r3]
   1cce8:	cmp	r2, r3
   1ccec:	ble	1ce18 <select_update_selectfds+0x37c>
   1ccf0:	ldr	r3, [fp, #-8]
   1ccf4:	ldr	r2, [r3, #12]
   1ccf8:	ldr	r3, [pc, #332]	; 1ce4c <select_update_selectfds+0x3b0>
   1ccfc:	add	r3, pc, r3
   1cd00:	str	r2, [r3]
   1cd04:	b	1ce18 <select_update_selectfds+0x37c>
   1cd08:	ldr	r3, [fp, #-8]
   1cd0c:	ldr	r2, [r3, #12]
   1cd10:	ldr	r3, [pc, #312]	; 1ce50 <select_update_selectfds+0x3b4>
   1cd14:	add	r3, pc, r3
   1cd18:	ldr	r3, [r3]
   1cd1c:	cmp	r2, r3
   1cd20:	bgt	1ce18 <select_update_selectfds+0x37c>
   1cd24:	b	1cd44 <select_update_selectfds+0x2a8>
   1cd28:	ldr	r3, [pc, #292]	; 1ce54 <select_update_selectfds+0x3b8>
   1cd2c:	add	r3, pc, r3
   1cd30:	ldr	r3, [r3]
   1cd34:	sub	r2, r3, #1
   1cd38:	ldr	r3, [pc, #280]	; 1ce58 <select_update_selectfds+0x3bc>
   1cd3c:	add	r3, pc, r3
   1cd40:	str	r2, [r3]
   1cd44:	ldr	r3, [pc, #272]	; 1ce5c <select_update_selectfds+0x3c0>
   1cd48:	add	r3, pc, r3
   1cd4c:	ldr	r3, [r3]
   1cd50:	cmp	r3, #0
   1cd54:	blt	1ce18 <select_update_selectfds+0x37c>
   1cd58:	ldr	r3, [pc, #256]	; 1ce60 <select_update_selectfds+0x3c4>
   1cd5c:	add	r3, pc, r3
   1cd60:	ldr	r3, [r3]
   1cd64:	add	r2, r3, #31
   1cd68:	cmp	r3, #0
   1cd6c:	movlt	r3, r2
   1cd70:	movge	r3, r3
   1cd74:	asr	r3, r3, #5
   1cd78:	mov	r2, r3
   1cd7c:	ldr	r3, [pc, #224]	; 1ce64 <select_update_selectfds+0x3c8>
   1cd80:	add	r3, pc, r3
   1cd84:	ldr	r2, [r3, r2, lsl #2]
   1cd88:	ldr	r3, [pc, #216]	; 1ce68 <select_update_selectfds+0x3cc>
   1cd8c:	add	r3, pc, r3
   1cd90:	ldr	r3, [r3]
   1cd94:	rsbs	r1, r3, #0
   1cd98:	and	r3, r3, #31
   1cd9c:	and	r1, r1, #31
   1cda0:	rsbpl	r3, r1, #0
   1cda4:	mov	r1, #1
   1cda8:	lsl	r3, r1, r3
   1cdac:	and	r3, r3, r2
   1cdb0:	cmp	r3, #0
   1cdb4:	bne	1ce18 <select_update_selectfds+0x37c>
   1cdb8:	ldr	r3, [pc, #172]	; 1ce6c <select_update_selectfds+0x3d0>
   1cdbc:	add	r3, pc, r3
   1cdc0:	ldr	r3, [r3]
   1cdc4:	add	r2, r3, #31
   1cdc8:	cmp	r3, #0
   1cdcc:	movlt	r3, r2
   1cdd0:	movge	r3, r3
   1cdd4:	asr	r3, r3, #5
   1cdd8:	mov	r2, r3
   1cddc:	ldr	r3, [pc, #140]	; 1ce70 <select_update_selectfds+0x3d4>
   1cde0:	add	r3, pc, r3
   1cde4:	ldr	r2, [r3, r2, lsl #2]
   1cde8:	ldr	r3, [pc, #132]	; 1ce74 <select_update_selectfds+0x3d8>
   1cdec:	add	r3, pc, r3
   1cdf0:	ldr	r3, [r3]
   1cdf4:	rsbs	r1, r3, #0
   1cdf8:	and	r3, r3, #31
   1cdfc:	and	r1, r1, #31
   1ce00:	rsbpl	r3, r1, #0
   1ce04:	mov	r1, #1
   1ce08:	lsl	r3, r1, r3
   1ce0c:	and	r3, r3, r2
   1ce10:	cmp	r3, #0
   1ce14:	beq	1cd28 <select_update_selectfds+0x28c>
   1ce18:	nop	{0}
   1ce1c:	add	sp, fp, #0
   1ce20:	pop	{fp}		; (ldr fp, [sp], #4)
   1ce24:	bx	lr
   1ce28:	.word	0x000366fc
   1ce2c:	.word	0x000366cc
   1ce30:	.word	0x00036688
   1ce34:	.word	0x00036654
   1ce38:	.word	0x00036678
   1ce3c:	.word	0x00036648
   1ce40:	.word	0x00036604
   1ce44:	.word	0x000365d0
   1ce48:	.word	0x00018c64
   1ce4c:	.word	0x00018c48
   1ce50:	.word	0x00018c30
   1ce54:	.word	0x00018c18
   1ce58:	.word	0x00018c08
   1ce5c:	.word	0x00018bfc
   1ce60:	.word	0x00018be8
   1ce64:	.word	0x00036474
   1ce68:	.word	0x00018bb8
   1ce6c:	.word	0x00018b88
   1ce70:	.word	0x00036494
   1ce74:	.word	0x00018b58

0001ce78 <rb_setup_fd_select>:
   1ce78:	push	{fp}		; (str fp, [sp, #-4]!)
   1ce7c:	add	fp, sp, #0
   1ce80:	sub	sp, sp, #12
   1ce84:	str	r0, [fp, #-8]
   1ce88:	mov	r3, #0
   1ce8c:	mov	r0, r3
   1ce90:	add	sp, fp, #0
   1ce94:	pop	{fp}		; (ldr fp, [sp], #4)
   1ce98:	bx	lr

0001ce9c <rb_init_netio_select>:
   1ce9c:	push	{fp}		; (str fp, [sp, #-4]!)
   1cea0:	add	fp, sp, #0
   1cea4:	sub	sp, sp, #20
   1cea8:	ldr	r3, [pc, #184]	; 1cf68 <rb_init_netio_select+0xcc>
   1ceac:	add	r3, pc, r3
   1ceb0:	ldr	r2, [pc, #180]	; 1cf6c <rb_init_netio_select+0xd0>
   1ceb4:	ldr	r2, [r3, r2]
   1ceb8:	ldr	r2, [r2]
   1cebc:	cmp	r2, #1024	; 0x400
   1cec0:	ble	1ced4 <rb_init_netio_select+0x38>
   1cec4:	ldr	r2, [pc, #160]	; 1cf6c <rb_init_netio_select+0xd0>
   1cec8:	ldr	r3, [r3, r2]
   1cecc:	mov	r2, #1024	; 0x400
   1ced0:	str	r2, [r3]
   1ced4:	ldr	r3, [pc, #148]	; 1cf70 <rb_init_netio_select+0xd4>
   1ced8:	add	r3, pc, r3
   1cedc:	str	r3, [fp, #-16]
   1cee0:	mov	r3, #0
   1cee4:	str	r3, [fp, #-8]
   1cee8:	b	1cf08 <rb_init_netio_select+0x6c>
   1ceec:	ldr	r3, [fp, #-16]
   1cef0:	ldr	r2, [fp, #-8]
   1cef4:	mov	r1, #0
   1cef8:	str	r1, [r3, r2, lsl #2]
   1cefc:	ldr	r3, [fp, #-8]
   1cf00:	add	r3, r3, #1
   1cf04:	str	r3, [fp, #-8]
   1cf08:	ldr	r3, [fp, #-8]
   1cf0c:	cmp	r3, #31
   1cf10:	bls	1ceec <rb_init_netio_select+0x50>
   1cf14:	ldr	r3, [pc, #88]	; 1cf74 <rb_init_netio_select+0xd8>
   1cf18:	add	r3, pc, r3
   1cf1c:	str	r3, [fp, #-20]	; 0xffffffec
   1cf20:	mov	r3, #0
   1cf24:	str	r3, [fp, #-12]
   1cf28:	b	1cf48 <rb_init_netio_select+0xac>
   1cf2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cf30:	ldr	r2, [fp, #-12]
   1cf34:	mov	r1, #0
   1cf38:	str	r1, [r3, r2, lsl #2]
   1cf3c:	ldr	r3, [fp, #-12]
   1cf40:	add	r3, r3, #1
   1cf44:	str	r3, [fp, #-12]
   1cf48:	ldr	r3, [fp, #-12]
   1cf4c:	cmp	r3, #31
   1cf50:	bls	1cf2c <rb_init_netio_select+0x90>
   1cf54:	mov	r3, #0
   1cf58:	mov	r0, r3
   1cf5c:	add	sp, fp, #0
   1cf60:	pop	{fp}		; (ldr fp, [sp], #4)
   1cf64:	bx	lr
   1cf68:	.word	0x0001814c
   1cf6c:	.word	0x000003a4
   1cf70:	.word	0x0003631c
   1cf74:	.word	0x0003635c

0001cf78 <rb_setselect_select>:
   1cf78:	str	fp, [sp, #-8]!
   1cf7c:	str	lr, [sp, #4]
   1cf80:	add	fp, sp, #4
   1cf84:	sub	sp, sp, #16
   1cf88:	str	r0, [fp, #-8]
   1cf8c:	str	r1, [fp, #-12]
   1cf90:	str	r2, [fp, #-16]
   1cf94:	str	r3, [fp, #-20]	; 0xffffffec
   1cf98:	ldr	r3, [fp, #-12]
   1cf9c:	and	r3, r3, #1
   1cfa0:	cmp	r3, #0
   1cfa4:	beq	1cfd0 <rb_setselect_select+0x58>
   1cfa8:	ldr	r3, [fp, #-8]
   1cfac:	ldr	r2, [fp, #-16]
   1cfb0:	str	r2, [r3, #28]
   1cfb4:	ldr	r3, [fp, #-8]
   1cfb8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1cfbc:	str	r2, [r3, #32]
   1cfc0:	ldr	r2, [fp, #-16]
   1cfc4:	mov	r1, #1
   1cfc8:	ldr	r0, [fp, #-8]
   1cfcc:	bl	1ca9c <select_update_selectfds>
   1cfd0:	ldr	r3, [fp, #-12]
   1cfd4:	and	r3, r3, #2
   1cfd8:	cmp	r3, #0
   1cfdc:	beq	1d008 <rb_setselect_select+0x90>
   1cfe0:	ldr	r3, [fp, #-8]
   1cfe4:	ldr	r2, [fp, #-16]
   1cfe8:	str	r2, [r3, #36]	; 0x24
   1cfec:	ldr	r3, [fp, #-8]
   1cff0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1cff4:	str	r2, [r3, #40]	; 0x28
   1cff8:	ldr	r2, [fp, #-16]
   1cffc:	mov	r1, #2
   1d000:	ldr	r0, [fp, #-8]
   1d004:	bl	1ca9c <select_update_selectfds>
   1d008:	nop	{0}
   1d00c:	sub	sp, fp, #4
   1d010:	ldr	fp, [sp]
   1d014:	add	sp, sp, #4
   1d018:	pop	{pc}		; (ldr pc, [sp], #4)

0001d01c <rb_select_select>:
   1d01c:	str	fp, [sp, #-8]!
   1d020:	str	lr, [sp, #4]
   1d024:	add	fp, sp, #4
   1d028:	sub	sp, sp, #40	; 0x28
   1d02c:	str	r0, [fp, #-32]	; 0xffffffe0
   1d030:	ldr	r2, [pc, #704]	; 1d2f8 <rb_select_select+0x2dc>
   1d034:	add	r2, pc, r2
   1d038:	ldr	r3, [pc, #700]	; 1d2fc <rb_select_select+0x2e0>
   1d03c:	add	r3, pc, r3
   1d040:	mov	r0, r2
   1d044:	mov	r1, r3
   1d048:	mov	r3, #128	; 0x80
   1d04c:	mov	r2, r3
   1d050:	bl	4834 <memcpy@plt>
   1d054:	ldr	r2, [pc, #676]	; 1d300 <rb_select_select+0x2e4>
   1d058:	add	r2, pc, r2
   1d05c:	ldr	r3, [pc, #672]	; 1d304 <rb_select_select+0x2e8>
   1d060:	add	r3, pc, r3
   1d064:	mov	r0, r2
   1d068:	mov	r1, r3
   1d06c:	mov	r3, #128	; 0x80
   1d070:	mov	r2, r3
   1d074:	bl	4834 <memcpy@plt>
   1d078:	mov	r3, #0
   1d07c:	str	r3, [fp, #-28]	; 0xffffffe4
   1d080:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d084:	mov	r2, #1000	; 0x3e8
   1d088:	mul	r3, r2, r3
   1d08c:	str	r3, [fp, #-24]	; 0xffffffe8
   1d090:	ldr	r3, [pc, #624]	; 1d308 <rb_select_select+0x2ec>
   1d094:	add	r3, pc, r3
   1d098:	ldr	r3, [r3]
   1d09c:	add	r0, r3, #1
   1d0a0:	sub	r3, fp, #28
   1d0a4:	str	r3, [sp]
   1d0a8:	mov	r3, #0
   1d0ac:	ldr	r2, [pc, #600]	; 1d30c <rb_select_select+0x2f0>
   1d0b0:	add	r2, pc, r2
   1d0b4:	ldr	r1, [pc, #596]	; 1d310 <rb_select_select+0x2f4>
   1d0b8:	add	r1, pc, r1
   1d0bc:	bl	4954 <select@plt>
   1d0c0:	str	r0, [fp, #-12]
   1d0c4:	ldr	r3, [fp, #-12]
   1d0c8:	cmp	r3, #0
   1d0cc:	bge	1d100 <rb_select_select+0xe4>
   1d0d0:	bl	4d20 <__errno_location@plt>
   1d0d4:	mov	r3, r0
   1d0d8:	ldr	r3, [r3]
   1d0dc:	mov	r0, r3
   1d0e0:	bl	43fc <rb_ignore_errno@plt>
   1d0e4:	mov	r3, r0
   1d0e8:	cmp	r3, #0
   1d0ec:	beq	1d0f4 <rb_select_select+0xd8>
   1d0f0:	b	1d078 <rb_select_select+0x5c>
   1d0f4:	bl	49b4 <rb_set_time@plt>
   1d0f8:	mvn	r3, #0
   1d0fc:	b	1d2e4 <rb_select_select+0x2c8>
   1d100:	nop	{0}
   1d104:	bl	49b4 <rb_set_time@plt>
   1d108:	ldr	r3, [fp, #-12]
   1d10c:	cmp	r3, #0
   1d110:	bne	1d11c <rb_select_select+0x100>
   1d114:	mov	r3, #0
   1d118:	b	1d2e4 <rb_select_select+0x2c8>
   1d11c:	mov	r3, #0
   1d120:	str	r3, [fp, #-8]
   1d124:	b	1d2c8 <rb_select_select+0x2ac>
   1d128:	ldr	r0, [fp, #-8]
   1d12c:	bl	1c9a0 <rb_find_fd>
   1d130:	str	r0, [fp, #-16]
   1d134:	ldr	r3, [fp, #-16]
   1d138:	cmp	r3, #0
   1d13c:	beq	1d2b0 <rb_select_select+0x294>
   1d140:	ldr	r3, [fp, #-8]
   1d144:	add	r2, r3, #31
   1d148:	cmp	r3, #0
   1d14c:	movlt	r3, r2
   1d150:	movge	r3, r3
   1d154:	asr	r3, r3, #5
   1d158:	mov	r2, r3
   1d15c:	ldr	r3, [pc, #432]	; 1d314 <rb_select_select+0x2f8>
   1d160:	add	r3, pc, r3
   1d164:	ldr	r2, [r3, r2, lsl #2]
   1d168:	ldr	r3, [fp, #-8]
   1d16c:	rsbs	r1, r3, #0
   1d170:	and	r3, r3, #31
   1d174:	and	r1, r1, #31
   1d178:	rsbpl	r3, r1, #0
   1d17c:	mov	r1, #1
   1d180:	lsl	r3, r1, r3
   1d184:	and	r3, r3, r2
   1d188:	cmp	r3, #0
   1d18c:	beq	1d1cc <rb_select_select+0x1b0>
   1d190:	ldr	r3, [fp, #-16]
   1d194:	ldr	r3, [r3, #28]
   1d198:	str	r3, [fp, #-20]	; 0xffffffec
   1d19c:	ldr	r3, [fp, #-16]
   1d1a0:	mov	r2, #0
   1d1a4:	str	r2, [r3, #28]
   1d1a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d1ac:	cmp	r3, #0
   1d1b0:	beq	1d1cc <rb_select_select+0x1b0>
   1d1b4:	ldr	r3, [fp, #-16]
   1d1b8:	ldr	r2, [r3, #32]
   1d1bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d1c0:	mov	r1, r2
   1d1c4:	ldr	r0, [fp, #-16]
   1d1c8:	blx	r3
   1d1cc:	ldr	r3, [fp, #-16]
   1d1d0:	ldrb	r3, [r3, #16]
   1d1d4:	and	r3, r3, #1
   1d1d8:	cmp	r3, #0
   1d1dc:	beq	1d2b8 <rb_select_select+0x29c>
   1d1e0:	ldr	r3, [fp, #-8]
   1d1e4:	add	r2, r3, #31
   1d1e8:	cmp	r3, #0
   1d1ec:	movlt	r3, r2
   1d1f0:	movge	r3, r3
   1d1f4:	asr	r3, r3, #5
   1d1f8:	mov	r2, r3
   1d1fc:	ldr	r3, [pc, #276]	; 1d318 <rb_select_select+0x2fc>
   1d200:	add	r3, pc, r3
   1d204:	ldr	r2, [r3, r2, lsl #2]
   1d208:	ldr	r3, [fp, #-8]
   1d20c:	rsbs	r1, r3, #0
   1d210:	and	r3, r3, #31
   1d214:	and	r1, r1, #31
   1d218:	rsbpl	r3, r1, #0
   1d21c:	mov	r1, #1
   1d220:	lsl	r3, r1, r3
   1d224:	and	r3, r3, r2
   1d228:	cmp	r3, #0
   1d22c:	beq	1d26c <rb_select_select+0x250>
   1d230:	ldr	r3, [fp, #-16]
   1d234:	ldr	r3, [r3, #36]	; 0x24
   1d238:	str	r3, [fp, #-20]	; 0xffffffec
   1d23c:	ldr	r3, [fp, #-16]
   1d240:	mov	r2, #0
   1d244:	str	r2, [r3, #36]	; 0x24
   1d248:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d24c:	cmp	r3, #0
   1d250:	beq	1d26c <rb_select_select+0x250>
   1d254:	ldr	r3, [fp, #-16]
   1d258:	ldr	r2, [r3, #40]	; 0x28
   1d25c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d260:	mov	r1, r2
   1d264:	ldr	r0, [fp, #-16]
   1d268:	blx	r3
   1d26c:	ldr	r3, [fp, #-16]
   1d270:	ldr	r3, [r3, #28]
   1d274:	cmp	r3, #0
   1d278:	bne	1d28c <rb_select_select+0x270>
   1d27c:	mov	r2, #0
   1d280:	mov	r1, #1
   1d284:	ldr	r0, [fp, #-16]
   1d288:	bl	1ca9c <select_update_selectfds>
   1d28c:	ldr	r3, [fp, #-16]
   1d290:	ldr	r3, [r3, #36]	; 0x24
   1d294:	cmp	r3, #0
   1d298:	bne	1d2bc <rb_select_select+0x2a0>
   1d29c:	mov	r2, #0
   1d2a0:	mov	r1, #2
   1d2a4:	ldr	r0, [fp, #-16]
   1d2a8:	bl	1ca9c <select_update_selectfds>
   1d2ac:	b	1d2bc <rb_select_select+0x2a0>
   1d2b0:	nop	{0}
   1d2b4:	b	1d2bc <rb_select_select+0x2a0>
   1d2b8:	nop	{0}
   1d2bc:	ldr	r3, [fp, #-8]
   1d2c0:	add	r3, r3, #1
   1d2c4:	str	r3, [fp, #-8]
   1d2c8:	ldr	r3, [pc, #76]	; 1d31c <rb_select_select+0x300>
   1d2cc:	add	r3, pc, r3
   1d2d0:	ldr	r3, [r3]
   1d2d4:	ldr	r2, [fp, #-8]
   1d2d8:	cmp	r2, r3
   1d2dc:	ble	1d128 <rb_select_select+0x10c>
   1d2e0:	mov	r3, #0
   1d2e4:	mov	r0, r3
   1d2e8:	sub	sp, fp, #4
   1d2ec:	ldr	fp, [sp]
   1d2f0:	add	sp, sp, #4
   1d2f4:	pop	{pc}		; (ldr pc, [sp], #4)
   1d2f8:	.word	0x000362c0
   1d2fc:	.word	0x000361b8
   1d300:	.word	0x0003631c
   1d304:	.word	0x00036214
   1d308:	.word	0x000188b0
   1d30c:	.word	0x000362c4
   1d310:	.word	0x0003623c
   1d314:	.word	0x00036194
   1d318:	.word	0x00036174
   1d31c:	.word	0x00018678

0001d320 <rb_init_netio_kqueue>:
   1d320:	str	fp, [sp, #-8]!
   1d324:	str	lr, [sp, #4]
   1d328:	add	fp, sp, #4
   1d32c:	bl	4d20 <__errno_location@plt>
   1d330:	mov	r2, r0
   1d334:	mov	r3, #38	; 0x26
   1d338:	str	r3, [r2]
   1d33c:	mvn	r3, #0
   1d340:	mov	r0, r3
   1d344:	sub	sp, fp, #4
   1d348:	ldr	fp, [sp]
   1d34c:	add	sp, sp, #4
   1d350:	pop	{pc}		; (ldr pc, [sp], #4)

0001d354 <rb_setselect_kqueue>:
   1d354:	str	fp, [sp, #-8]!
   1d358:	str	lr, [sp, #4]
   1d35c:	add	fp, sp, #4
   1d360:	sub	sp, sp, #16
   1d364:	str	r0, [fp, #-8]
   1d368:	str	r1, [fp, #-12]
   1d36c:	str	r2, [fp, #-16]
   1d370:	str	r3, [fp, #-20]	; 0xffffffec
   1d374:	bl	4d20 <__errno_location@plt>
   1d378:	mov	r2, r0
   1d37c:	mov	r3, #38	; 0x26
   1d380:	str	r3, [r2]
   1d384:	nop	{0}
   1d388:	sub	sp, fp, #4
   1d38c:	ldr	fp, [sp]
   1d390:	add	sp, sp, #4
   1d394:	pop	{pc}		; (ldr pc, [sp], #4)

0001d398 <rb_select_kqueue>:
   1d398:	str	fp, [sp, #-8]!
   1d39c:	str	lr, [sp, #4]
   1d3a0:	add	fp, sp, #4
   1d3a4:	sub	sp, sp, #8
   1d3a8:	str	r0, [fp, #-8]
   1d3ac:	bl	4d20 <__errno_location@plt>
   1d3b0:	mov	r2, r0
   1d3b4:	mov	r3, #38	; 0x26
   1d3b8:	str	r3, [r2]
   1d3bc:	mvn	r3, #0
   1d3c0:	mov	r0, r3
   1d3c4:	sub	sp, fp, #4
   1d3c8:	ldr	fp, [sp]
   1d3cc:	add	sp, sp, #4
   1d3d0:	pop	{pc}		; (ldr pc, [sp], #4)

0001d3d4 <rb_setup_fd_kqueue>:
   1d3d4:	str	fp, [sp, #-8]!
   1d3d8:	str	lr, [sp, #4]
   1d3dc:	add	fp, sp, #4
   1d3e0:	sub	sp, sp, #8
   1d3e4:	str	r0, [fp, #-8]
   1d3e8:	bl	4d20 <__errno_location@plt>
   1d3ec:	mov	r2, r0
   1d3f0:	mov	r3, #38	; 0x26
   1d3f4:	str	r3, [r2]
   1d3f8:	mvn	r3, #0
   1d3fc:	mov	r0, r3
   1d400:	sub	sp, fp, #4
   1d404:	ldr	fp, [sp]
   1d408:	add	sp, sp, #4
   1d40c:	pop	{pc}		; (ldr pc, [sp], #4)

0001d410 <rb_kqueue_init_event>:
   1d410:	push	{fp}		; (str fp, [sp, #-4]!)
   1d414:	add	fp, sp, #0
   1d418:	nop	{0}
   1d41c:	add	sp, fp, #0
   1d420:	pop	{fp}		; (ldr fp, [sp], #4)
   1d424:	bx	lr

0001d428 <rb_kqueue_sched_event>:
   1d428:	str	fp, [sp, #-8]!
   1d42c:	str	lr, [sp, #4]
   1d430:	add	fp, sp, #4
   1d434:	sub	sp, sp, #8
   1d438:	str	r0, [fp, #-8]
   1d43c:	str	r1, [fp, #-12]
   1d440:	bl	4d20 <__errno_location@plt>
   1d444:	mov	r2, r0
   1d448:	mov	r3, #38	; 0x26
   1d44c:	str	r3, [r2]
   1d450:	mvn	r3, #0
   1d454:	mov	r0, r3
   1d458:	sub	sp, fp, #4
   1d45c:	ldr	fp, [sp]
   1d460:	add	sp, sp, #4
   1d464:	pop	{pc}		; (ldr pc, [sp], #4)

0001d468 <rb_kqueue_unsched_event>:
   1d468:	push	{fp}		; (str fp, [sp, #-4]!)
   1d46c:	add	fp, sp, #0
   1d470:	sub	sp, sp, #12
   1d474:	str	r0, [fp, #-8]
   1d478:	nop	{0}
   1d47c:	add	sp, fp, #0
   1d480:	pop	{fp}		; (ldr fp, [sp], #4)
   1d484:	bx	lr

0001d488 <rb_kqueue_supports_event>:
   1d488:	str	fp, [sp, #-8]!
   1d48c:	str	lr, [sp, #4]
   1d490:	add	fp, sp, #4
   1d494:	bl	4d20 <__errno_location@plt>
   1d498:	mov	r2, r0
   1d49c:	mov	r3, #38	; 0x26
   1d4a0:	str	r3, [r2]
   1d4a4:	mov	r3, #0
   1d4a8:	mov	r0, r3
   1d4ac:	sub	sp, fp, #4
   1d4b0:	ldr	fp, [sp]
   1d4b4:	add	sp, sp, #4
   1d4b8:	pop	{pc}		; (ldr pc, [sp], #4)

0001d4bc <rb_dlinkAddTail>:
   1d4bc:	push	{fp}		; (str fp, [sp, #-4]!)
   1d4c0:	add	fp, sp, #0
   1d4c4:	sub	sp, sp, #20
   1d4c8:	str	r0, [fp, #-8]
   1d4cc:	str	r1, [fp, #-12]
   1d4d0:	str	r2, [fp, #-16]
   1d4d4:	ldr	r3, [fp, #-12]
   1d4d8:	ldr	r2, [fp, #-8]
   1d4dc:	str	r2, [r3]
   1d4e0:	ldr	r3, [fp, #-12]
   1d4e4:	mov	r2, #0
   1d4e8:	str	r2, [r3, #8]
   1d4ec:	ldr	r3, [fp, #-16]
   1d4f0:	ldr	r2, [r3, #4]
   1d4f4:	ldr	r3, [fp, #-12]
   1d4f8:	str	r2, [r3, #4]
   1d4fc:	ldr	r3, [fp, #-16]
   1d500:	ldr	r3, [r3, #4]
   1d504:	cmp	r3, #0
   1d508:	beq	1d520 <rb_dlinkAddTail+0x64>
   1d50c:	ldr	r3, [fp, #-16]
   1d510:	ldr	r3, [r3, #4]
   1d514:	ldr	r2, [fp, #-12]
   1d518:	str	r2, [r3, #8]
   1d51c:	b	1d53c <rb_dlinkAddTail+0x80>
   1d520:	ldr	r3, [fp, #-16]
   1d524:	ldr	r3, [r3]
   1d528:	cmp	r3, #0
   1d52c:	bne	1d53c <rb_dlinkAddTail+0x80>
   1d530:	ldr	r3, [fp, #-16]
   1d534:	ldr	r2, [fp, #-12]
   1d538:	str	r2, [r3]
   1d53c:	ldr	r3, [fp, #-16]
   1d540:	ldr	r2, [fp, #-12]
   1d544:	str	r2, [r3, #4]
   1d548:	ldr	r3, [fp, #-16]
   1d54c:	ldr	r3, [r3, #8]
   1d550:	add	r2, r3, #1
   1d554:	ldr	r3, [fp, #-16]
   1d558:	str	r2, [r3, #8]
   1d55c:	nop	{0}
   1d560:	add	sp, fp, #0
   1d564:	pop	{fp}		; (ldr fp, [sp], #4)
   1d568:	bx	lr

0001d56c <rb_dlinkDelete>:
   1d56c:	push	{fp}		; (str fp, [sp, #-4]!)
   1d570:	add	fp, sp, #0
   1d574:	sub	sp, sp, #12
   1d578:	str	r0, [fp, #-8]
   1d57c:	str	r1, [fp, #-12]
   1d580:	ldr	r3, [fp, #-8]
   1d584:	ldr	r3, [r3, #8]
   1d588:	cmp	r3, #0
   1d58c:	beq	1d5a8 <rb_dlinkDelete+0x3c>
   1d590:	ldr	r3, [fp, #-8]
   1d594:	ldr	r3, [r3, #8]
   1d598:	ldr	r2, [fp, #-8]
   1d59c:	ldr	r2, [r2, #4]
   1d5a0:	str	r2, [r3, #4]
   1d5a4:	b	1d5b8 <rb_dlinkDelete+0x4c>
   1d5a8:	ldr	r3, [fp, #-8]
   1d5ac:	ldr	r2, [r3, #4]
   1d5b0:	ldr	r3, [fp, #-12]
   1d5b4:	str	r2, [r3, #4]
   1d5b8:	ldr	r3, [fp, #-8]
   1d5bc:	ldr	r3, [r3, #4]
   1d5c0:	cmp	r3, #0
   1d5c4:	beq	1d5e0 <rb_dlinkDelete+0x74>
   1d5c8:	ldr	r3, [fp, #-8]
   1d5cc:	ldr	r3, [r3, #4]
   1d5d0:	ldr	r2, [fp, #-8]
   1d5d4:	ldr	r2, [r2, #8]
   1d5d8:	str	r2, [r3, #8]
   1d5dc:	b	1d5f0 <rb_dlinkDelete+0x84>
   1d5e0:	ldr	r3, [fp, #-8]
   1d5e4:	ldr	r2, [r3, #8]
   1d5e8:	ldr	r3, [fp, #-12]
   1d5ec:	str	r2, [r3]
   1d5f0:	ldr	r3, [fp, #-8]
   1d5f4:	mov	r2, #0
   1d5f8:	str	r2, [r3, #4]
   1d5fc:	ldr	r3, [fp, #-8]
   1d600:	ldr	r2, [r3, #4]
   1d604:	ldr	r3, [fp, #-8]
   1d608:	str	r2, [r3, #8]
   1d60c:	ldr	r3, [fp, #-12]
   1d610:	ldr	r3, [r3, #8]
   1d614:	sub	r2, r3, #1
   1d618:	ldr	r3, [fp, #-12]
   1d61c:	str	r2, [r3, #8]
   1d620:	nop	{0}
   1d624:	add	sp, fp, #0
   1d628:	pop	{fp}		; (ldr fp, [sp], #4)
   1d62c:	bx	lr

0001d630 <rb_malloc>:
   1d630:	str	fp, [sp, #-8]!
   1d634:	str	lr, [sp, #4]
   1d638:	add	fp, sp, #4
   1d63c:	sub	sp, sp, #16
   1d640:	str	r0, [fp, #-16]
   1d644:	ldr	r1, [fp, #-16]
   1d648:	mov	r0, #1
   1d64c:	bl	460c <calloc@plt>
   1d650:	mov	r3, r0
   1d654:	str	r3, [fp, #-8]
   1d658:	ldr	r3, [fp, #-8]
   1d65c:	cmp	r3, #0
   1d660:	moveq	r3, #1
   1d664:	movne	r3, #0
   1d668:	uxtb	r3, r3
   1d66c:	cmp	r3, #0
   1d670:	beq	1d678 <rb_malloc+0x48>
   1d674:	bl	49a8 <rb_outofmemory@plt>
   1d678:	ldr	r3, [fp, #-8]
   1d67c:	mov	r0, r3
   1d680:	sub	sp, fp, #4
   1d684:	ldr	fp, [sp]
   1d688:	add	sp, sp, #4
   1d68c:	pop	{pc}		; (ldr pc, [sp], #4)

0001d690 <rb_free>:
   1d690:	str	fp, [sp, #-8]!
   1d694:	str	lr, [sp, #4]
   1d698:	add	fp, sp, #4
   1d69c:	sub	sp, sp, #8
   1d6a0:	str	r0, [fp, #-8]
   1d6a4:	ldr	r3, [fp, #-8]
   1d6a8:	cmp	r3, #0
   1d6ac:	movne	r3, #1
   1d6b0:	moveq	r3, #0
   1d6b4:	uxtb	r3, r3
   1d6b8:	cmp	r3, #0
   1d6bc:	beq	1d6c8 <rb_free+0x38>
   1d6c0:	ldr	r0, [fp, #-8]
   1d6c4:	bl	4720 <free@plt>
   1d6c8:	nop	{0}
   1d6cc:	sub	sp, fp, #4
   1d6d0:	ldr	fp, [sp]
   1d6d4:	add	sp, sp, #4
   1d6d8:	pop	{pc}		; (ldr pc, [sp], #4)

0001d6dc <rb_rawbuf_alloc>:
   1d6dc:	str	fp, [sp, #-8]!
   1d6e0:	str	lr, [sp, #4]
   1d6e4:	add	fp, sp, #4
   1d6e8:	sub	sp, sp, #8
   1d6ec:	ldr	r3, [pc, #40]	; 1d71c <rb_rawbuf_alloc+0x40>
   1d6f0:	add	r3, pc, r3
   1d6f4:	ldr	r3, [r3]
   1d6f8:	mov	r0, r3
   1d6fc:	bl	4978 <rb_bh_alloc@plt>
   1d700:	str	r0, [fp, #-8]
   1d704:	ldr	r3, [fp, #-8]
   1d708:	mov	r0, r3
   1d70c:	sub	sp, fp, #4
   1d710:	ldr	fp, [sp]
   1d714:	add	sp, sp, #4
   1d718:	pop	{pc}		; (ldr pc, [sp], #4)
   1d71c:	.word	0x00035d04

0001d720 <rb_rawbuf_newbuf>:
   1d720:	str	fp, [sp, #-8]!
   1d724:	str	lr, [sp, #4]
   1d728:	add	fp, sp, #4
   1d72c:	sub	sp, sp, #16
   1d730:	str	r0, [fp, #-16]
   1d734:	bl	1d6dc <rb_rawbuf_alloc>
   1d738:	str	r0, [fp, #-8]
   1d73c:	ldr	r3, [fp, #-8]
   1d740:	ldr	r2, [fp, #-16]
   1d744:	mov	r1, r3
   1d748:	ldr	r0, [fp, #-8]
   1d74c:	bl	1d4bc <rb_dlinkAddTail>
   1d750:	ldr	r3, [fp, #-8]
   1d754:	mov	r0, r3
   1d758:	sub	sp, fp, #4
   1d75c:	ldr	fp, [sp]
   1d760:	add	sp, sp, #4
   1d764:	pop	{pc}		; (ldr pc, [sp], #4)

0001d768 <rb_rawbuf_done>:
   1d768:	str	fp, [sp, #-8]!
   1d76c:	str	lr, [sp, #4]
   1d770:	add	fp, sp, #4
   1d774:	sub	sp, sp, #16
   1d778:	str	r0, [fp, #-16]
   1d77c:	str	r1, [fp, #-20]	; 0xffffffec
   1d780:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d784:	str	r3, [fp, #-8]
   1d788:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d78c:	ldr	r2, [fp, #-16]
   1d790:	mov	r1, r2
   1d794:	mov	r0, r3
   1d798:	bl	1d56c <rb_dlinkDelete>
   1d79c:	ldr	r3, [pc, #36]	; 1d7c8 <rb_rawbuf_done+0x60>
   1d7a0:	add	r3, pc, r3
   1d7a4:	ldr	r3, [r3]
   1d7a8:	ldr	r1, [fp, #-8]
   1d7ac:	mov	r0, r3
   1d7b0:	bl	48f4 <rb_bh_free@plt>
   1d7b4:	nop	{0}
   1d7b8:	sub	sp, fp, #4
   1d7bc:	ldr	fp, [sp]
   1d7c0:	add	sp, sp, #4
   1d7c4:	pop	{pc}		; (ldr pc, [sp], #4)
   1d7c8:	.word	0x00035c54

0001d7cc <rb_rawbuf_flush_writev>:
   1d7cc:	str	fp, [sp, #-8]!
   1d7d0:	str	lr, [sp, #4]
   1d7d4:	add	fp, sp, #4
   1d7d8:	sub	sp, sp, #8192	; 0x2000
   1d7dc:	sub	sp, sp, #40	; 0x28
   1d7e0:	sub	r3, fp, #8192	; 0x2000
   1d7e4:	sub	r3, r3, #4
   1d7e8:	str	r0, [r3, #-36]	; 0xffffffdc
   1d7ec:	sub	r3, fp, #8192	; 0x2000
   1d7f0:	sub	r3, r3, #4
   1d7f4:	str	r1, [r3, #-40]	; 0xffffffd8
   1d7f8:	mov	r3, #0
   1d7fc:	str	r3, [fp, #-16]
   1d800:	mov	r3, #0
   1d804:	str	r3, [fp, #-20]	; 0xffffffec
   1d808:	sub	r3, fp, #8192	; 0x2000
   1d80c:	sub	r3, r3, #4
   1d810:	sub	r3, r3, #28
   1d814:	mov	r2, #8192	; 0x2000
   1d818:	mov	r1, #0
   1d81c:	mov	r0, r3
   1d820:	bl	4648 <memset@plt>
   1d824:	sub	r3, fp, #8192	; 0x2000
   1d828:	sub	r3, r3, #4
   1d82c:	ldr	r3, [r3, #-36]	; 0xffffffdc
   1d830:	ldr	r3, [r3]
   1d834:	cmp	r3, #0
   1d838:	bne	1d854 <rb_rawbuf_flush_writev+0x88>
   1d83c:	bl	4d20 <__errno_location@plt>
   1d840:	mov	r2, r0
   1d844:	mov	r3, #11
   1d848:	str	r3, [r2]
   1d84c:	mvn	r3, #0
   1d850:	b	1dbf8 <rb_rawbuf_flush_writev+0x42c>
   1d854:	sub	r3, fp, #8192	; 0x2000
   1d858:	sub	r3, r3, #4
   1d85c:	ldr	r3, [r3, #-36]	; 0xffffffdc
   1d860:	ldr	r3, [r3]
   1d864:	str	r3, [fp, #-8]
   1d868:	b	1d96c <rb_rawbuf_flush_writev+0x1a0>
   1d86c:	ldr	r3, [fp, #-16]
   1d870:	cmp	r3, #1024	; 0x400
   1d874:	bge	1d97c <rb_rawbuf_flush_writev+0x1b0>
   1d878:	ldr	r3, [fp, #-8]
   1d87c:	ldr	r3, [r3]
   1d880:	str	r3, [fp, #-28]	; 0xffffffe4
   1d884:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d888:	ldrb	r3, [r3, #1040]	; 0x410
   1d88c:	cmp	r3, #0
   1d890:	beq	1d910 <rb_rawbuf_flush_writev+0x144>
   1d894:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d898:	add	r3, r3, #12
   1d89c:	sub	r2, fp, #8192	; 0x2000
   1d8a0:	sub	r2, r2, #4
   1d8a4:	ldr	r2, [r2, #-36]	; 0xffffffdc
   1d8a8:	ldr	r2, [r2, #16]
   1d8ac:	add	r2, r3, r2
   1d8b0:	sub	r3, fp, #8192	; 0x2000
   1d8b4:	sub	r3, r3, #4
   1d8b8:	mov	r1, r3
   1d8bc:	ldr	r3, [fp, #-16]
   1d8c0:	lsl	r3, r3, #3
   1d8c4:	add	r3, r1, r3
   1d8c8:	str	r2, [r3, #-28]	; 0xffffffe4
   1d8cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d8d0:	ldr	r2, [r3, #1036]	; 0x40c
   1d8d4:	sub	r3, fp, #8192	; 0x2000
   1d8d8:	sub	r3, r3, #4
   1d8dc:	ldr	r3, [r3, #-36]	; 0xffffffdc
   1d8e0:	ldr	r3, [r3, #16]
   1d8e4:	sub	r1, r2, r3
   1d8e8:	ldr	r3, [fp, #-16]
   1d8ec:	add	r2, r3, #1
   1d8f0:	str	r2, [fp, #-16]
   1d8f4:	mov	r2, r1
   1d8f8:	sub	r1, fp, #8192	; 0x2000
   1d8fc:	sub	r1, r1, #4
   1d900:	lsl	r3, r3, #3
   1d904:	add	r3, r1, r3
   1d908:	str	r2, [r3, #-24]	; 0xffffffe8
   1d90c:	b	1d960 <rb_rawbuf_flush_writev+0x194>
   1d910:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d914:	add	r2, r3, #12
   1d918:	sub	r3, fp, #8192	; 0x2000
   1d91c:	sub	r3, r3, #4
   1d920:	mov	r1, r3
   1d924:	ldr	r3, [fp, #-16]
   1d928:	lsl	r3, r3, #3
   1d92c:	add	r3, r1, r3
   1d930:	str	r2, [r3, #-28]	; 0xffffffe4
   1d934:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d938:	ldr	r1, [r3, #1036]	; 0x40c
   1d93c:	ldr	r3, [fp, #-16]
   1d940:	add	r2, r3, #1
   1d944:	str	r2, [fp, #-16]
   1d948:	mov	r2, r1
   1d94c:	sub	r1, fp, #8192	; 0x2000
   1d950:	sub	r1, r1, #4
   1d954:	lsl	r3, r3, #3
   1d958:	add	r3, r1, r3
   1d95c:	str	r2, [r3, #-24]	; 0xffffffe8
   1d960:	ldr	r3, [fp, #-8]
   1d964:	ldr	r3, [r3, #8]
   1d968:	str	r3, [fp, #-8]
   1d96c:	ldr	r3, [fp, #-8]
   1d970:	cmp	r3, #0
   1d974:	bne	1d86c <rb_rawbuf_flush_writev+0xa0>
   1d978:	b	1d980 <rb_rawbuf_flush_writev+0x1b4>
   1d97c:	nop	{0}
   1d980:	ldr	r3, [fp, #-16]
   1d984:	cmp	r3, #0
   1d988:	bne	1d9a4 <rb_rawbuf_flush_writev+0x1d8>
   1d98c:	bl	4d20 <__errno_location@plt>
   1d990:	mov	r2, r0
   1d994:	mov	r3, #11
   1d998:	str	r3, [r2]
   1d99c:	mvn	r3, #0
   1d9a0:	b	1dbf8 <rb_rawbuf_flush_writev+0x42c>
   1d9a4:	sub	r3, fp, #8192	; 0x2000
   1d9a8:	sub	r3, r3, #4
   1d9ac:	sub	r3, r3, #28
   1d9b0:	sub	r2, fp, #8192	; 0x2000
   1d9b4:	sub	r2, r2, #4
   1d9b8:	mov	r0, r2
   1d9bc:	ldr	r2, [fp, #-16]
   1d9c0:	mov	r1, r3
   1d9c4:	ldr	r0, [r0, #-40]	; 0xffffffd8
   1d9c8:	bl	4af8 <rb_writev@plt>
   1d9cc:	str	r0, [fp, #-32]	; 0xffffffe0
   1d9d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d9d4:	str	r3, [fp, #-24]	; 0xffffffe8
   1d9d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d9dc:	cmp	r3, #0
   1d9e0:	bgt	1d9ec <rb_rawbuf_flush_writev+0x220>
   1d9e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d9e8:	b	1dbf8 <rb_rawbuf_flush_writev+0x42c>
   1d9ec:	sub	r3, fp, #8192	; 0x2000
   1d9f0:	sub	r3, r3, #4
   1d9f4:	ldr	r3, [r3, #-36]	; 0xffffffdc
   1d9f8:	ldr	r3, [r3]
   1d9fc:	str	r3, [fp, #-8]
   1da00:	ldr	r3, [fp, #-8]
   1da04:	cmp	r3, #0
   1da08:	beq	1da18 <rb_rawbuf_flush_writev+0x24c>
   1da0c:	ldr	r3, [fp, #-8]
   1da10:	ldr	r3, [r3, #8]
   1da14:	b	1da1c <rb_rawbuf_flush_writev+0x250>
   1da18:	mov	r3, #0
   1da1c:	str	r3, [fp, #-12]
   1da20:	b	1dbe0 <rb_rawbuf_flush_writev+0x414>
   1da24:	ldr	r3, [fp, #-8]
   1da28:	ldr	r3, [r3]
   1da2c:	str	r3, [fp, #-28]	; 0xffffffe4
   1da30:	ldr	r3, [fp, #-20]	; 0xffffffec
   1da34:	add	r2, r3, #1
   1da38:	str	r2, [fp, #-20]	; 0xffffffec
   1da3c:	ldr	r2, [fp, #-16]
   1da40:	cmp	r2, r3
   1da44:	ble	1dbf0 <rb_rawbuf_flush_writev+0x424>
   1da48:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1da4c:	ldrb	r3, [r3, #1040]	; 0x410
   1da50:	cmp	r3, #0
   1da54:	beq	1db00 <rb_rawbuf_flush_writev+0x334>
   1da58:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1da5c:	ldr	r2, [r3, #1036]	; 0x40c
   1da60:	sub	r3, fp, #8192	; 0x2000
   1da64:	sub	r3, r3, #4
   1da68:	ldr	r3, [r3, #-36]	; 0xffffffdc
   1da6c:	ldr	r3, [r3, #16]
   1da70:	sub	r3, r2, r3
   1da74:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1da78:	cmp	r2, r3
   1da7c:	blt	1db00 <rb_rawbuf_flush_writev+0x334>
   1da80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1da84:	ldr	r2, [r3, #1036]	; 0x40c
   1da88:	sub	r3, fp, #8192	; 0x2000
   1da8c:	sub	r3, r3, #4
   1da90:	ldr	r3, [r3, #-36]	; 0xffffffdc
   1da94:	ldr	r3, [r3, #16]
   1da98:	sub	r3, r2, r3
   1da9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1daa0:	sub	r3, r2, r3
   1daa4:	str	r3, [fp, #-24]	; 0xffffffe8
   1daa8:	sub	r3, fp, #8192	; 0x2000
   1daac:	sub	r3, r3, #4
   1dab0:	ldr	r3, [r3, #-36]	; 0xffffffdc
   1dab4:	ldr	r2, [r3, #12]
   1dab8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1dabc:	ldr	r1, [r3, #1036]	; 0x40c
   1dac0:	sub	r3, fp, #8192	; 0x2000
   1dac4:	sub	r3, r3, #4
   1dac8:	ldr	r3, [r3, #-36]	; 0xffffffdc
   1dacc:	ldr	r3, [r3, #16]
   1dad0:	sub	r3, r1, r3
   1dad4:	sub	r2, r2, r3
   1dad8:	sub	r3, fp, #8192	; 0x2000
   1dadc:	sub	r3, r3, #4
   1dae0:	ldr	r3, [r3, #-36]	; 0xffffffdc
   1dae4:	str	r2, [r3, #12]
   1dae8:	sub	r3, fp, #8192	; 0x2000
   1daec:	sub	r3, r3, #4
   1daf0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1daf4:	ldr	r0, [r3, #-36]	; 0xffffffdc
   1daf8:	bl	1d768 <rb_rawbuf_done>
   1dafc:	b	1dbb8 <rb_rawbuf_flush_writev+0x3ec>
   1db00:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1db04:	ldr	r3, [r3, #1036]	; 0x40c
   1db08:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1db0c:	cmp	r2, r3
   1db10:	blt	1db6c <rb_rawbuf_flush_writev+0x3a0>
   1db14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1db18:	ldr	r3, [r3, #1036]	; 0x40c
   1db1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1db20:	sub	r3, r2, r3
   1db24:	str	r3, [fp, #-24]	; 0xffffffe8
   1db28:	sub	r3, fp, #8192	; 0x2000
   1db2c:	sub	r3, r3, #4
   1db30:	ldr	r3, [r3, #-36]	; 0xffffffdc
   1db34:	ldr	r2, [r3, #12]
   1db38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1db3c:	ldr	r3, [r3, #1036]	; 0x40c
   1db40:	sub	r2, r2, r3
   1db44:	sub	r3, fp, #8192	; 0x2000
   1db48:	sub	r3, r3, #4
   1db4c:	ldr	r3, [r3, #-36]	; 0xffffffdc
   1db50:	str	r2, [r3, #12]
   1db54:	sub	r3, fp, #8192	; 0x2000
   1db58:	sub	r3, r3, #4
   1db5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1db60:	ldr	r0, [r3, #-36]	; 0xffffffdc
   1db64:	bl	1d768 <rb_rawbuf_done>
   1db68:	b	1dbb8 <rb_rawbuf_flush_writev+0x3ec>
   1db6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1db70:	mov	r2, #1
   1db74:	strb	r2, [r3, #1040]	; 0x410
   1db78:	sub	r3, fp, #8192	; 0x2000
   1db7c:	sub	r3, r3, #4
   1db80:	ldr	r3, [r3, #-36]	; 0xffffffdc
   1db84:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1db88:	str	r2, [r3, #16]
   1db8c:	sub	r3, fp, #8192	; 0x2000
   1db90:	sub	r3, r3, #4
   1db94:	ldr	r3, [r3, #-36]	; 0xffffffdc
   1db98:	ldr	r2, [r3, #12]
   1db9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dba0:	sub	r2, r2, r3
   1dba4:	sub	r3, fp, #8192	; 0x2000
   1dba8:	sub	r3, r3, #4
   1dbac:	ldr	r3, [r3, #-36]	; 0xffffffdc
   1dbb0:	str	r2, [r3, #12]
   1dbb4:	b	1dbf4 <rb_rawbuf_flush_writev+0x428>
   1dbb8:	ldr	r3, [fp, #-12]
   1dbbc:	str	r3, [fp, #-8]
   1dbc0:	ldr	r3, [fp, #-8]
   1dbc4:	cmp	r3, #0
   1dbc8:	beq	1dbd8 <rb_rawbuf_flush_writev+0x40c>
   1dbcc:	ldr	r3, [fp, #-8]
   1dbd0:	ldr	r3, [r3, #8]
   1dbd4:	b	1dbdc <rb_rawbuf_flush_writev+0x410>
   1dbd8:	mov	r3, #0
   1dbdc:	str	r3, [fp, #-12]
   1dbe0:	ldr	r3, [fp, #-8]
   1dbe4:	cmp	r3, #0
   1dbe8:	bne	1da24 <rb_rawbuf_flush_writev+0x258>
   1dbec:	b	1dbf4 <rb_rawbuf_flush_writev+0x428>
   1dbf0:	nop	{0}
   1dbf4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dbf8:	mov	r0, r3
   1dbfc:	sub	sp, fp, #4
   1dc00:	ldr	fp, [sp]
   1dc04:	add	sp, sp, #4
   1dc08:	pop	{pc}		; (ldr pc, [sp], #4)

0001dc0c <rb_rawbuf_flush>:
   1dc0c:	str	fp, [sp, #-8]!
   1dc10:	str	lr, [sp, #4]
   1dc14:	add	fp, sp, #4
   1dc18:	sub	sp, sp, #16
   1dc1c:	str	r0, [fp, #-16]
   1dc20:	str	r1, [fp, #-20]	; 0xffffffec
   1dc24:	ldr	r3, [fp, #-16]
   1dc28:	ldr	r3, [r3]
   1dc2c:	cmp	r3, #0
   1dc30:	bne	1dc4c <rb_rawbuf_flush+0x40>
   1dc34:	bl	4d20 <__errno_location@plt>
   1dc38:	mov	r2, r0
   1dc3c:	mov	r3, #11
   1dc40:	str	r3, [r2]
   1dc44:	mvn	r3, #0
   1dc48:	b	1dd7c <rb_rawbuf_flush+0x170>
   1dc4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dc50:	bl	44d4 <rb_fd_ssl@plt>
   1dc54:	mov	r3, r0
   1dc58:	cmp	r3, #0
   1dc5c:	bne	1dc74 <rb_rawbuf_flush+0x68>
   1dc60:	ldr	r1, [fp, #-20]	; 0xffffffec
   1dc64:	ldr	r0, [fp, #-16]
   1dc68:	bl	1d7cc <rb_rawbuf_flush_writev>
   1dc6c:	mov	r3, r0
   1dc70:	b	1dd7c <rb_rawbuf_flush+0x170>
   1dc74:	ldr	r3, [fp, #-16]
   1dc78:	ldr	r3, [r3]
   1dc7c:	ldr	r3, [r3]
   1dc80:	str	r3, [fp, #-8]
   1dc84:	ldr	r3, [fp, #-8]
   1dc88:	ldrb	r3, [r3, #1040]	; 0x410
   1dc8c:	cmp	r3, #0
   1dc90:	bne	1dcac <rb_rawbuf_flush+0xa0>
   1dc94:	ldr	r3, [fp, #-8]
   1dc98:	mov	r2, #1
   1dc9c:	strb	r2, [r3, #1040]	; 0x410
   1dca0:	ldr	r3, [fp, #-16]
   1dca4:	mov	r2, #0
   1dca8:	str	r2, [r3, #16]
   1dcac:	ldr	r3, [fp, #-8]
   1dcb0:	add	r3, r3, #12
   1dcb4:	ldr	r2, [fp, #-16]
   1dcb8:	ldr	r2, [r2, #16]
   1dcbc:	add	r1, r3, r2
   1dcc0:	ldr	r3, [fp, #-8]
   1dcc4:	ldr	r2, [r3, #1036]	; 0x40c
   1dcc8:	ldr	r3, [fp, #-16]
   1dccc:	ldr	r3, [r3, #16]
   1dcd0:	sub	r3, r2, r3
   1dcd4:	mov	r2, r3
   1dcd8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dcdc:	bl	4678 <rb_write@plt>
   1dce0:	str	r0, [fp, #-12]
   1dce4:	ldr	r3, [fp, #-12]
   1dce8:	cmp	r3, #0
   1dcec:	bgt	1dcf8 <rb_rawbuf_flush+0xec>
   1dcf0:	ldr	r3, [fp, #-12]
   1dcf4:	b	1dd7c <rb_rawbuf_flush+0x170>
   1dcf8:	ldr	r3, [fp, #-16]
   1dcfc:	ldr	r2, [r3, #16]
   1dd00:	ldr	r3, [fp, #-12]
   1dd04:	add	r2, r2, r3
   1dd08:	ldr	r3, [fp, #-16]
   1dd0c:	str	r2, [r3, #16]
   1dd10:	ldr	r3, [fp, #-16]
   1dd14:	ldr	r2, [r3, #16]
   1dd18:	ldr	r3, [fp, #-8]
   1dd1c:	ldr	r3, [r3, #1036]	; 0x40c
   1dd20:	cmp	r2, r3
   1dd24:	bne	1dd60 <rb_rawbuf_flush+0x154>
   1dd28:	ldr	r3, [fp, #-16]
   1dd2c:	mov	r2, #0
   1dd30:	str	r2, [r3, #16]
   1dd34:	ldr	r3, [fp, #-8]
   1dd38:	ldr	r2, [fp, #-16]
   1dd3c:	mov	r1, r2
   1dd40:	mov	r0, r3
   1dd44:	bl	1d56c <rb_dlinkDelete>
   1dd48:	ldr	r3, [pc, #64]	; 1dd90 <rb_rawbuf_flush+0x184>
   1dd4c:	add	r3, pc, r3
   1dd50:	ldr	r3, [r3]
   1dd54:	ldr	r1, [fp, #-8]
   1dd58:	mov	r0, r3
   1dd5c:	bl	48f4 <rb_bh_free@plt>
   1dd60:	ldr	r3, [fp, #-16]
   1dd64:	ldr	r2, [r3, #12]
   1dd68:	ldr	r3, [fp, #-12]
   1dd6c:	sub	r2, r2, r3
   1dd70:	ldr	r3, [fp, #-16]
   1dd74:	str	r2, [r3, #12]
   1dd78:	ldr	r3, [fp, #-12]
   1dd7c:	mov	r0, r3
   1dd80:	sub	sp, fp, #4
   1dd84:	ldr	fp, [sp]
   1dd88:	add	sp, sp, #4
   1dd8c:	pop	{pc}		; (ldr pc, [sp], #4)
   1dd90:	.word	0x000356a8

0001dd94 <rb_rawbuf_append>:
   1dd94:	str	fp, [sp, #-8]!
   1dd98:	str	lr, [sp, #4]
   1dd9c:	add	fp, sp, #4
   1dda0:	sub	sp, sp, #32
   1dda4:	str	r0, [fp, #-24]	; 0xffffffe8
   1dda8:	str	r1, [fp, #-28]	; 0xffffffe4
   1ddac:	str	r2, [fp, #-32]	; 0xffffffe0
   1ddb0:	mov	r3, #0
   1ddb4:	str	r3, [fp, #-8]
   1ddb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ddbc:	ldr	r3, [r3, #4]
   1ddc0:	cmp	r3, #0
   1ddc4:	beq	1ddd8 <rb_rawbuf_append+0x44>
   1ddc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ddcc:	ldr	r3, [r3, #4]
   1ddd0:	ldr	r3, [r3]
   1ddd4:	str	r3, [fp, #-8]
   1ddd8:	ldr	r3, [fp, #-8]
   1dddc:	cmp	r3, #0
   1dde0:	beq	1df5c <rb_rawbuf_append+0x1c8>
   1dde4:	ldr	r3, [fp, #-8]
   1dde8:	ldr	r3, [r3, #1036]	; 0x40c
   1ddec:	cmp	r3, #1024	; 0x400
   1ddf0:	bge	1df5c <rb_rawbuf_append+0x1c8>
   1ddf4:	ldr	r3, [fp, #-8]
   1ddf8:	ldrb	r3, [r3, #1040]	; 0x410
   1ddfc:	cmp	r3, #0
   1de00:	bne	1df5c <rb_rawbuf_append+0x1c8>
   1de04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1de08:	ldr	r3, [r3, #4]
   1de0c:	ldr	r3, [r3]
   1de10:	str	r3, [fp, #-8]
   1de14:	ldr	r3, [fp, #-8]
   1de18:	ldr	r3, [r3, #1036]	; 0x40c
   1de1c:	rsb	r3, r3, #1024	; 0x400
   1de20:	str	r3, [fp, #-12]
   1de24:	ldr	r3, [fp, #-8]
   1de28:	add	r3, r3, #12
   1de2c:	ldr	r2, [fp, #-8]
   1de30:	ldr	r2, [r2, #1036]	; 0x40c
   1de34:	add	r3, r3, r2
   1de38:	str	r3, [fp, #-16]
   1de3c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1de40:	ldr	r3, [fp, #-12]
   1de44:	cmp	r2, r3
   1de48:	bge	1de54 <rb_rawbuf_append+0xc0>
   1de4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1de50:	str	r3, [fp, #-12]
   1de54:	ldr	r3, [fp, #-12]
   1de58:	mov	r2, r3
   1de5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1de60:	ldr	r0, [fp, #-16]
   1de64:	bl	4834 <memcpy@plt>
   1de68:	ldr	r3, [fp, #-8]
   1de6c:	ldr	r2, [r3, #1036]	; 0x40c
   1de70:	ldr	r3, [fp, #-12]
   1de74:	add	r2, r2, r3
   1de78:	ldr	r3, [fp, #-8]
   1de7c:	str	r2, [r3, #1036]	; 0x40c
   1de80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1de84:	ldr	r2, [r3, #12]
   1de88:	ldr	r3, [fp, #-12]
   1de8c:	add	r2, r2, r3
   1de90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1de94:	str	r2, [r3, #12]
   1de98:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1de9c:	ldr	r3, [fp, #-12]
   1dea0:	sub	r3, r2, r3
   1dea4:	str	r3, [fp, #-32]	; 0xffffffe0
   1dea8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1deac:	cmp	r3, #0
   1deb0:	beq	1df6c <rb_rawbuf_append+0x1d8>
   1deb4:	ldr	r3, [fp, #-12]
   1deb8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1debc:	add	r3, r2, r3
   1dec0:	str	r3, [fp, #-28]	; 0xffffffe4
   1dec4:	b	1df5c <rb_rawbuf_append+0x1c8>
   1dec8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1decc:	bl	1d720 <rb_rawbuf_newbuf>
   1ded0:	str	r0, [fp, #-8]
   1ded4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ded8:	cmp	r3, #1024	; 0x400
   1dedc:	blt	1deec <rb_rawbuf_append+0x158>
   1dee0:	mov	r3, #1024	; 0x400
   1dee4:	str	r3, [fp, #-12]
   1dee8:	b	1def4 <rb_rawbuf_append+0x160>
   1deec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1def0:	str	r3, [fp, #-12]
   1def4:	ldr	r3, [fp, #-8]
   1def8:	add	r3, r3, #12
   1defc:	ldr	r2, [fp, #-12]
   1df00:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1df04:	mov	r0, r3
   1df08:	bl	4834 <memcpy@plt>
   1df0c:	ldr	r3, [fp, #-8]
   1df10:	ldr	r2, [r3, #1036]	; 0x40c
   1df14:	ldr	r3, [fp, #-12]
   1df18:	add	r2, r2, r3
   1df1c:	ldr	r3, [fp, #-8]
   1df20:	str	r2, [r3, #1036]	; 0x40c
   1df24:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1df28:	ldr	r3, [fp, #-12]
   1df2c:	sub	r3, r2, r3
   1df30:	str	r3, [fp, #-32]	; 0xffffffe0
   1df34:	ldr	r3, [fp, #-12]
   1df38:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1df3c:	add	r3, r2, r3
   1df40:	str	r3, [fp, #-28]	; 0xffffffe4
   1df44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1df48:	ldr	r2, [r3, #12]
   1df4c:	ldr	r3, [fp, #-12]
   1df50:	add	r2, r2, r3
   1df54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1df58:	str	r2, [r3, #12]
   1df5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1df60:	cmp	r3, #0
   1df64:	bgt	1dec8 <rb_rawbuf_append+0x134>
   1df68:	b	1df70 <rb_rawbuf_append+0x1dc>
   1df6c:	nop	{0}
   1df70:	sub	sp, fp, #4
   1df74:	ldr	fp, [sp]
   1df78:	add	sp, sp, #4
   1df7c:	pop	{pc}		; (ldr pc, [sp], #4)

0001df80 <rb_rawbuf_get>:
   1df80:	str	fp, [sp, #-8]!
   1df84:	str	lr, [sp, #4]
   1df88:	add	fp, sp, #4
   1df8c:	sub	sp, sp, #32
   1df90:	str	r0, [fp, #-24]	; 0xffffffe8
   1df94:	str	r1, [fp, #-28]	; 0xffffffe4
   1df98:	str	r2, [fp, #-32]	; 0xffffffe0
   1df9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dfa0:	ldr	r3, [r3]
   1dfa4:	cmp	r3, #0
   1dfa8:	bne	1dfb4 <rb_rawbuf_get+0x34>
   1dfac:	mov	r3, #0
   1dfb0:	b	1e0e0 <rb_rawbuf_get+0x160>
   1dfb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dfb8:	ldr	r3, [r3]
   1dfbc:	ldr	r3, [r3]
   1dfc0:	str	r3, [fp, #-16]
   1dfc4:	ldr	r3, [fp, #-16]
   1dfc8:	ldrb	r3, [r3, #1040]	; 0x410
   1dfcc:	cmp	r3, #0
   1dfd0:	beq	1dff0 <rb_rawbuf_get+0x70>
   1dfd4:	ldr	r3, [fp, #-16]
   1dfd8:	add	r3, r3, #12
   1dfdc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1dfe0:	ldr	r2, [r2, #16]
   1dfe4:	add	r3, r3, r2
   1dfe8:	str	r3, [fp, #-12]
   1dfec:	b	1dffc <rb_rawbuf_get+0x7c>
   1dff0:	ldr	r3, [fp, #-16]
   1dff4:	add	r3, r3, #12
   1dff8:	str	r3, [fp, #-12]
   1dffc:	ldr	r3, [fp, #-16]
   1e000:	ldr	r3, [r3, #1036]	; 0x40c
   1e004:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e008:	cmp	r2, r3
   1e00c:	ble	1e020 <rb_rawbuf_get+0xa0>
   1e010:	ldr	r3, [fp, #-16]
   1e014:	ldr	r3, [r3, #1036]	; 0x40c
   1e018:	str	r3, [fp, #-8]
   1e01c:	b	1e028 <rb_rawbuf_get+0xa8>
   1e020:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e024:	str	r3, [fp, #-8]
   1e028:	ldr	r3, [fp, #-8]
   1e02c:	mov	r2, r3
   1e030:	ldr	r1, [fp, #-12]
   1e034:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e038:	bl	4834 <memcpy@plt>
   1e03c:	ldr	r3, [fp, #-16]
   1e040:	ldr	r3, [r3, #1036]	; 0x40c
   1e044:	ldr	r2, [fp, #-8]
   1e048:	cmp	r2, r3
   1e04c:	bne	1e088 <rb_rawbuf_get+0x108>
   1e050:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e054:	mov	r2, #0
   1e058:	str	r2, [r3, #16]
   1e05c:	ldr	r1, [fp, #-16]
   1e060:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e064:	bl	1d768 <rb_rawbuf_done>
   1e068:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e06c:	ldr	r2, [r3, #12]
   1e070:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e074:	sub	r2, r2, r3
   1e078:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e07c:	str	r2, [r3, #12]
   1e080:	ldr	r3, [fp, #-8]
   1e084:	b	1e0e0 <rb_rawbuf_get+0x160>
   1e088:	ldr	r3, [fp, #-16]
   1e08c:	mov	r2, #1
   1e090:	strb	r2, [r3, #1040]	; 0x410
   1e094:	ldr	r3, [fp, #-16]
   1e098:	ldr	r2, [r3, #1036]	; 0x40c
   1e09c:	ldr	r3, [fp, #-8]
   1e0a0:	sub	r2, r2, r3
   1e0a4:	ldr	r3, [fp, #-16]
   1e0a8:	str	r2, [r3, #1036]	; 0x40c
   1e0ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e0b0:	ldr	r2, [r3, #12]
   1e0b4:	ldr	r3, [fp, #-8]
   1e0b8:	sub	r2, r2, r3
   1e0bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e0c0:	str	r2, [r3, #12]
   1e0c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e0c8:	ldr	r2, [r3, #16]
   1e0cc:	ldr	r3, [fp, #-8]
   1e0d0:	add	r2, r2, r3
   1e0d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e0d8:	str	r2, [r3, #16]
   1e0dc:	ldr	r3, [fp, #-8]
   1e0e0:	mov	r0, r3
   1e0e4:	sub	sp, fp, #4
   1e0e8:	ldr	fp, [sp]
   1e0ec:	add	sp, sp, #4
   1e0f0:	pop	{pc}		; (ldr pc, [sp], #4)

0001e0f4 <rb_rawbuf_length>:
   1e0f4:	push	{fp}		; (str fp, [sp, #-4]!)
   1e0f8:	add	fp, sp, #0
   1e0fc:	sub	sp, sp, #12
   1e100:	str	r0, [fp, #-8]
   1e104:	ldr	r3, [fp, #-8]
   1e108:	ldr	r3, [r3, #12]
   1e10c:	mov	r0, r3
   1e110:	add	sp, fp, #0
   1e114:	pop	{fp}		; (ldr fp, [sp], #4)
   1e118:	bx	lr

0001e11c <rb_new_rawbuffer>:
   1e11c:	str	fp, [sp, #-8]!
   1e120:	str	lr, [sp, #4]
   1e124:	add	fp, sp, #4
   1e128:	mov	r0, #20
   1e12c:	bl	1d630 <rb_malloc>
   1e130:	mov	r3, r0
   1e134:	mov	r0, r3
   1e138:	sub	sp, fp, #4
   1e13c:	ldr	fp, [sp]
   1e140:	add	sp, sp, #4
   1e144:	pop	{pc}		; (ldr pc, [sp], #4)

0001e148 <rb_free_rawbuffer>:
   1e148:	str	fp, [sp, #-8]!
   1e14c:	str	lr, [sp, #4]
   1e150:	add	fp, sp, #4
   1e154:	sub	sp, sp, #16
   1e158:	str	r0, [fp, #-16]
   1e15c:	ldr	r3, [fp, #-16]
   1e160:	ldr	r3, [r3]
   1e164:	str	r3, [fp, #-8]
   1e168:	ldr	r3, [fp, #-8]
   1e16c:	cmp	r3, #0
   1e170:	beq	1e180 <rb_free_rawbuffer+0x38>
   1e174:	ldr	r3, [fp, #-8]
   1e178:	ldr	r3, [r3, #8]
   1e17c:	b	1e184 <rb_free_rawbuffer+0x3c>
   1e180:	mov	r3, #0
   1e184:	str	r3, [fp, #-12]
   1e188:	b	1e1c8 <rb_free_rawbuffer+0x80>
   1e18c:	ldr	r3, [fp, #-8]
   1e190:	ldr	r3, [r3]
   1e194:	mov	r1, r3
   1e198:	ldr	r0, [fp, #-16]
   1e19c:	bl	1d768 <rb_rawbuf_done>
   1e1a0:	ldr	r3, [fp, #-12]
   1e1a4:	str	r3, [fp, #-8]
   1e1a8:	ldr	r3, [fp, #-8]
   1e1ac:	cmp	r3, #0
   1e1b0:	beq	1e1c0 <rb_free_rawbuffer+0x78>
   1e1b4:	ldr	r3, [fp, #-8]
   1e1b8:	ldr	r3, [r3, #8]
   1e1bc:	b	1e1c4 <rb_free_rawbuffer+0x7c>
   1e1c0:	mov	r3, #0
   1e1c4:	str	r3, [fp, #-12]
   1e1c8:	ldr	r3, [fp, #-8]
   1e1cc:	cmp	r3, #0
   1e1d0:	bne	1e18c <rb_free_rawbuffer+0x44>
   1e1d4:	ldr	r0, [fp, #-16]
   1e1d8:	bl	1d690 <rb_free>
   1e1dc:	nop	{0}
   1e1e0:	sub	sp, fp, #4
   1e1e4:	ldr	fp, [sp]
   1e1e8:	add	sp, sp, #4
   1e1ec:	pop	{pc}		; (ldr pc, [sp], #4)

0001e1f0 <rb_init_rawbuffers>:
   1e1f0:	str	fp, [sp, #-8]!
   1e1f4:	str	lr, [sp, #4]
   1e1f8:	add	fp, sp, #4
   1e1fc:	sub	sp, sp, #8
   1e200:	str	r0, [fp, #-8]
   1e204:	ldr	r3, [pc, #72]	; 1e254 <rb_init_rawbuffers+0x64>
   1e208:	add	r3, pc, r3
   1e20c:	ldr	r3, [r3]
   1e210:	cmp	r3, #0
   1e214:	bne	1e240 <rb_init_rawbuffers+0x50>
   1e218:	ldr	r3, [pc, #56]	; 1e258 <rb_init_rawbuffers+0x68>
   1e21c:	add	r3, pc, r3
   1e220:	mov	r2, r3
   1e224:	ldr	r1, [fp, #-8]
   1e228:	movw	r0, #1044	; 0x414
   1e22c:	bl	4ad4 <rb_bh_create@plt>
   1e230:	mov	r2, r0
   1e234:	ldr	r3, [pc, #32]	; 1e25c <rb_init_rawbuffers+0x6c>
   1e238:	add	r3, pc, r3
   1e23c:	str	r2, [r3]
   1e240:	nop	{0}
   1e244:	sub	sp, fp, #4
   1e248:	ldr	fp, [sp]
   1e24c:	add	sp, sp, #4
   1e250:	pop	{pc}		; (ldr pc, [sp], #4)
   1e254:	.word	0x000351ec
   1e258:	.word	0x00006770
   1e25c:	.word	0x000351bc

0001e260 <rb_malloc>:
   1e260:	str	fp, [sp, #-8]!
   1e264:	str	lr, [sp, #4]
   1e268:	add	fp, sp, #4
   1e26c:	sub	sp, sp, #16
   1e270:	str	r0, [fp, #-16]
   1e274:	ldr	r1, [fp, #-16]
   1e278:	mov	r0, #1
   1e27c:	bl	460c <calloc@plt>
   1e280:	mov	r3, r0
   1e284:	str	r3, [fp, #-8]
   1e288:	ldr	r3, [fp, #-8]
   1e28c:	cmp	r3, #0
   1e290:	moveq	r3, #1
   1e294:	movne	r3, #0
   1e298:	uxtb	r3, r3
   1e29c:	cmp	r3, #0
   1e2a0:	beq	1e2a8 <rb_malloc+0x48>
   1e2a4:	bl	49a8 <rb_outofmemory@plt>
   1e2a8:	ldr	r3, [fp, #-8]
   1e2ac:	mov	r0, r3
   1e2b0:	sub	sp, fp, #4
   1e2b4:	ldr	fp, [sp]
   1e2b8:	add	sp, sp, #4
   1e2bc:	pop	{pc}		; (ldr pc, [sp], #4)

0001e2c0 <rb_free>:
   1e2c0:	str	fp, [sp, #-8]!
   1e2c4:	str	lr, [sp, #4]
   1e2c8:	add	fp, sp, #4
   1e2cc:	sub	sp, sp, #8
   1e2d0:	str	r0, [fp, #-8]
   1e2d4:	ldr	r3, [fp, #-8]
   1e2d8:	cmp	r3, #0
   1e2dc:	movne	r3, #1
   1e2e0:	moveq	r3, #0
   1e2e4:	uxtb	r3, r3
   1e2e8:	cmp	r3, #0
   1e2ec:	beq	1e2f8 <rb_free+0x38>
   1e2f0:	ldr	r0, [fp, #-8]
   1e2f4:	bl	4720 <free@plt>
   1e2f8:	nop	{0}
   1e2fc:	sub	sp, fp, #4
   1e300:	ldr	fp, [sp]
   1e304:	add	sp, sp, #4
   1e308:	pop	{pc}		; (ldr pc, [sp], #4)

0001e30c <rb_init_patricia>:
   1e30c:	push	{fp}		; (str fp, [sp, #-4]!)
   1e310:	add	fp, sp, #0
   1e314:	nop	{0}
   1e318:	add	sp, fp, #0
   1e31c:	pop	{fp}		; (ldr fp, [sp], #4)
   1e320:	bx	lr

0001e324 <prefix_tochar>:
   1e324:	push	{fp}		; (str fp, [sp, #-4]!)
   1e328:	add	fp, sp, #0
   1e32c:	sub	sp, sp, #12
   1e330:	str	r0, [fp, #-8]
   1e334:	ldr	r3, [fp, #-8]
   1e338:	cmp	r3, #0
   1e33c:	bne	1e348 <prefix_tochar+0x24>
   1e340:	mov	r3, #0
   1e344:	b	1e350 <prefix_tochar+0x2c>
   1e348:	ldr	r3, [fp, #-8]
   1e34c:	add	r3, r3, #8
   1e350:	mov	r0, r3
   1e354:	add	sp, fp, #0
   1e358:	pop	{fp}		; (ldr fp, [sp], #4)
   1e35c:	bx	lr

0001e360 <comp_with_mask>:
   1e360:	str	fp, [sp, #-8]!
   1e364:	str	lr, [sp, #4]
   1e368:	add	fp, sp, #4
   1e36c:	sub	sp, sp, #24
   1e370:	str	r0, [fp, #-16]
   1e374:	str	r1, [fp, #-20]	; 0xffffffec
   1e378:	str	r2, [fp, #-24]	; 0xffffffe8
   1e37c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e380:	lsr	r3, r3, #3
   1e384:	mov	r2, r3
   1e388:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e38c:	ldr	r0, [fp, #-16]
   1e390:	bl	4474 <memcmp@plt>
   1e394:	mov	r3, r0
   1e398:	cmp	r3, #0
   1e39c:	bne	1e418 <comp_with_mask+0xb8>
   1e3a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e3a4:	lsr	r3, r3, #3
   1e3a8:	str	r3, [fp, #-8]
   1e3ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e3b0:	and	r3, r3, #7
   1e3b4:	rsb	r3, r3, #8
   1e3b8:	mov	r2, #255	; 0xff
   1e3bc:	lsl	r3, r2, r3
   1e3c0:	strb	r3, [fp, #-9]
   1e3c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e3c8:	and	r3, r3, #7
   1e3cc:	cmp	r3, #0
   1e3d0:	beq	1e410 <comp_with_mask+0xb0>
   1e3d4:	ldr	r3, [fp, #-8]
   1e3d8:	ldr	r2, [fp, #-16]
   1e3dc:	add	r3, r2, r3
   1e3e0:	ldrb	r2, [r3]
   1e3e4:	ldr	r3, [fp, #-8]
   1e3e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e3ec:	add	r3, r1, r3
   1e3f0:	ldrb	r3, [r3]
   1e3f4:	eor	r3, r3, r2
   1e3f8:	uxtb	r2, r3
   1e3fc:	ldrb	r3, [fp, #-9]
   1e400:	and	r3, r3, r2
   1e404:	uxtb	r3, r3
   1e408:	cmp	r3, #0
   1e40c:	bne	1e418 <comp_with_mask+0xb8>
   1e410:	mov	r3, #1
   1e414:	b	1e41c <comp_with_mask+0xbc>
   1e418:	mov	r3, #0
   1e41c:	mov	r0, r3
   1e420:	sub	sp, fp, #4
   1e424:	ldr	fp, [sp]
   1e428:	add	sp, sp, #4
   1e42c:	pop	{pc}		; (ldr pc, [sp], #4)

0001e430 <New_Prefix2>:
   1e430:	str	fp, [sp, #-8]!
   1e434:	str	lr, [sp, #4]
   1e438:	add	fp, sp, #4
   1e43c:	sub	sp, sp, #24
   1e440:	str	r0, [fp, #-16]
   1e444:	str	r1, [fp, #-20]	; 0xffffffec
   1e448:	str	r2, [fp, #-24]	; 0xffffffe8
   1e44c:	str	r3, [fp, #-28]	; 0xffffffe4
   1e450:	mov	r3, #0
   1e454:	str	r3, [fp, #-8]
   1e458:	mov	r3, #128	; 0x80
   1e45c:	str	r3, [fp, #-12]
   1e460:	ldr	r3, [fp, #-16]
   1e464:	cmp	r3, #10
   1e468:	bne	1e4b4 <New_Prefix2+0x84>
   1e46c:	mov	r3, #128	; 0x80
   1e470:	str	r3, [fp, #-12]
   1e474:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e478:	cmp	r3, #0
   1e47c:	bne	1e498 <New_Prefix2+0x68>
   1e480:	mov	r0, #24
   1e484:	bl	1e260 <rb_malloc>
   1e488:	str	r0, [fp, #-28]	; 0xffffffe4
   1e48c:	ldr	r3, [fp, #-8]
   1e490:	add	r3, r3, #1
   1e494:	str	r3, [fp, #-8]
   1e498:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e49c:	add	r3, r3, #8
   1e4a0:	mov	r2, #16
   1e4a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e4a8:	mov	r0, r3
   1e4ac:	bl	4834 <memcpy@plt>
   1e4b0:	b	1e504 <New_Prefix2+0xd4>
   1e4b4:	ldr	r3, [fp, #-16]
   1e4b8:	cmp	r3, #2
   1e4bc:	bne	1e4fc <New_Prefix2+0xcc>
   1e4c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e4c4:	cmp	r3, #0
   1e4c8:	bne	1e4e4 <New_Prefix2+0xb4>
   1e4cc:	mov	r0, #24
   1e4d0:	bl	1e260 <rb_malloc>
   1e4d4:	str	r0, [fp, #-28]	; 0xffffffe4
   1e4d8:	ldr	r3, [fp, #-8]
   1e4dc:	add	r3, r3, #1
   1e4e0:	str	r3, [fp, #-8]
   1e4e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e4e8:	add	r3, r3, #8
   1e4ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e4f0:	ldr	r2, [r2]
   1e4f4:	str	r2, [r3]
   1e4f8:	b	1e504 <New_Prefix2+0xd4>
   1e4fc:	mov	r3, #0
   1e500:	b	1e56c <New_Prefix2+0x13c>
   1e504:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e508:	cmp	r3, #0
   1e50c:	blt	1e51c <New_Prefix2+0xec>
   1e510:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e514:	uxth	r3, r3
   1e518:	b	1e524 <New_Prefix2+0xf4>
   1e51c:	ldr	r3, [fp, #-12]
   1e520:	uxth	r3, r3
   1e524:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e528:	strh	r3, [r2, #2]
   1e52c:	ldr	r3, [fp, #-16]
   1e530:	uxth	r2, r3
   1e534:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e538:	strh	r2, [r3]
   1e53c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e540:	mov	r2, #0
   1e544:	str	r2, [r3, #4]
   1e548:	ldr	r3, [fp, #-8]
   1e54c:	cmp	r3, #0
   1e550:	beq	1e568 <New_Prefix2+0x138>
   1e554:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e558:	ldr	r3, [r3, #4]
   1e55c:	add	r2, r3, #1
   1e560:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e564:	str	r2, [r3, #4]
   1e568:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e56c:	mov	r0, r3
   1e570:	sub	sp, fp, #4
   1e574:	ldr	fp, [sp]
   1e578:	add	sp, sp, #4
   1e57c:	pop	{pc}		; (ldr pc, [sp], #4)

0001e580 <New_Prefix>:
   1e580:	str	fp, [sp, #-8]!
   1e584:	str	lr, [sp, #4]
   1e588:	add	fp, sp, #4
   1e58c:	sub	sp, sp, #16
   1e590:	str	r0, [fp, #-8]
   1e594:	str	r1, [fp, #-12]
   1e598:	str	r2, [fp, #-16]
   1e59c:	mov	r3, #0
   1e5a0:	ldr	r2, [fp, #-16]
   1e5a4:	ldr	r1, [fp, #-12]
   1e5a8:	ldr	r0, [fp, #-8]
   1e5ac:	bl	1e430 <New_Prefix2>
   1e5b0:	mov	r3, r0
   1e5b4:	mov	r0, r3
   1e5b8:	sub	sp, fp, #4
   1e5bc:	ldr	fp, [sp]
   1e5c0:	add	sp, sp, #4
   1e5c4:	pop	{pc}		; (ldr pc, [sp], #4)

0001e5c8 <ascii2prefix>:
   1e5c8:	str	fp, [sp, #-8]!
   1e5cc:	str	lr, [sp, #4]
   1e5d0:	add	fp, sp, #4
   1e5d4:	sub	sp, sp, #1072	; 0x430
   1e5d8:	str	r0, [fp, #-1072]	; 0xfffffbd0
   1e5dc:	str	r1, [fp, #-1076]	; 0xfffffbcc
   1e5e0:	mov	r3, #0
   1e5e4:	str	r3, [fp, #-12]
   1e5e8:	ldr	r3, [fp, #-1076]	; 0xfffffbcc
   1e5ec:	cmp	r3, #0
   1e5f0:	bne	1e5fc <ascii2prefix+0x34>
   1e5f4:	mov	r3, #0
   1e5f8:	b	1e7bc <ascii2prefix+0x1f4>
   1e5fc:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
   1e600:	cmp	r3, #0
   1e604:	bne	1e630 <ascii2prefix+0x68>
   1e608:	mov	r3, #2
   1e60c:	str	r3, [fp, #-1072]	; 0xfffffbd0
   1e610:	mov	r1, #58	; 0x3a
   1e614:	ldr	r0, [fp, #-1076]	; 0xfffffbcc
   1e618:	bl	45d0 <strchr@plt>
   1e61c:	mov	r3, r0
   1e620:	cmp	r3, #0
   1e624:	beq	1e630 <ascii2prefix+0x68>
   1e628:	mov	r3, #10
   1e62c:	str	r3, [fp, #-1072]	; 0xfffffbd0
   1e630:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
   1e634:	cmp	r3, #2
   1e638:	bne	1e648 <ascii2prefix+0x80>
   1e63c:	mov	r3, #32
   1e640:	str	r3, [fp, #-12]
   1e644:	b	1e65c <ascii2prefix+0x94>
   1e648:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
   1e64c:	cmp	r3, #10
   1e650:	bne	1e65c <ascii2prefix+0x94>
   1e654:	mov	r3, #128	; 0x80
   1e658:	str	r3, [fp, #-12]
   1e65c:	mov	r1, #47	; 0x2f
   1e660:	ldr	r0, [fp, #-1076]	; 0xfffffbcc
   1e664:	bl	45d0 <strchr@plt>
   1e668:	str	r0, [fp, #-16]
   1e66c:	ldr	r3, [fp, #-16]
   1e670:	cmp	r3, #0
   1e674:	beq	1e708 <ascii2prefix+0x140>
   1e678:	ldr	r3, [fp, #-16]
   1e67c:	add	r3, r3, #1
   1e680:	mov	r0, r3
   1e684:	bl	48e8 <atol@plt>
   1e688:	str	r0, [fp, #-8]
   1e68c:	ldr	r2, [fp, #-16]
   1e690:	ldr	r3, [fp, #-1076]	; 0xfffffbcc
   1e694:	sub	r3, r2, r3
   1e698:	mov	r2, r3
   1e69c:	sub	r3, fp, #1056	; 0x420
   1e6a0:	sub	r3, r3, #4
   1e6a4:	sub	r3, r3, #4
   1e6a8:	ldr	r1, [fp, #-1076]	; 0xfffffbcc
   1e6ac:	mov	r0, r3
   1e6b0:	bl	4834 <memcpy@plt>
   1e6b4:	ldr	r2, [fp, #-16]
   1e6b8:	ldr	r3, [fp, #-1076]	; 0xfffffbcc
   1e6bc:	sub	r3, r2, r3
   1e6c0:	sub	r2, fp, #4
   1e6c4:	add	r3, r2, r3
   1e6c8:	mov	r2, #0
   1e6cc:	strb	r2, [r3, #-1060]	; 0xfffffbdc
   1e6d0:	sub	r3, fp, #1056	; 0x420
   1e6d4:	sub	r3, r3, #4
   1e6d8:	sub	r3, r3, #4
   1e6dc:	str	r3, [fp, #-1076]	; 0xfffffbcc
   1e6e0:	ldr	r3, [fp, #-8]
   1e6e4:	cmp	r3, #0
   1e6e8:	ble	1e6fc <ascii2prefix+0x134>
   1e6ec:	ldr	r2, [fp, #-8]
   1e6f0:	ldr	r3, [fp, #-12]
   1e6f4:	cmp	r2, r3
   1e6f8:	ble	1e710 <ascii2prefix+0x148>
   1e6fc:	ldr	r3, [fp, #-12]
   1e700:	str	r3, [fp, #-8]
   1e704:	b	1e710 <ascii2prefix+0x148>
   1e708:	ldr	r3, [fp, #-12]
   1e70c:	str	r3, [fp, #-8]
   1e710:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
   1e714:	cmp	r3, #2
   1e718:	bne	1e764 <ascii2prefix+0x19c>
   1e71c:	sub	r3, fp, #24
   1e720:	mov	r2, r3
   1e724:	ldr	r1, [fp, #-1076]	; 0xfffffbcc
   1e728:	mov	r0, #2
   1e72c:	bl	4654 <rb_inet_pton@plt>
   1e730:	str	r0, [fp, #-20]	; 0xffffffec
   1e734:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e738:	cmp	r3, #0
   1e73c:	bgt	1e748 <ascii2prefix+0x180>
   1e740:	mov	r3, #0
   1e744:	b	1e7bc <ascii2prefix+0x1f4>
   1e748:	sub	r3, fp, #24
   1e74c:	ldr	r2, [fp, #-8]
   1e750:	mov	r1, r3
   1e754:	mov	r0, #2
   1e758:	bl	1e580 <New_Prefix>
   1e75c:	mov	r3, r0
   1e760:	b	1e7bc <ascii2prefix+0x1f4>
   1e764:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
   1e768:	cmp	r3, #10
   1e76c:	bne	1e7b8 <ascii2prefix+0x1f0>
   1e770:	sub	r3, fp, #40	; 0x28
   1e774:	mov	r2, r3
   1e778:	ldr	r1, [fp, #-1076]	; 0xfffffbcc
   1e77c:	mov	r0, #10
   1e780:	bl	4654 <rb_inet_pton@plt>
   1e784:	str	r0, [fp, #-20]	; 0xffffffec
   1e788:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e78c:	cmp	r3, #0
   1e790:	bgt	1e79c <ascii2prefix+0x1d4>
   1e794:	mov	r3, #0
   1e798:	b	1e7bc <ascii2prefix+0x1f4>
   1e79c:	sub	r3, fp, #40	; 0x28
   1e7a0:	ldr	r2, [fp, #-8]
   1e7a4:	mov	r1, r3
   1e7a8:	mov	r0, #10
   1e7ac:	bl	1e580 <New_Prefix>
   1e7b0:	mov	r3, r0
   1e7b4:	b	1e7bc <ascii2prefix+0x1f4>
   1e7b8:	mov	r3, #0
   1e7bc:	mov	r0, r3
   1e7c0:	sub	sp, fp, #4
   1e7c4:	ldr	fp, [sp]
   1e7c8:	add	sp, sp, #4
   1e7cc:	pop	{pc}		; (ldr pc, [sp], #4)

0001e7d0 <Ref_Prefix>:
   1e7d0:	str	fp, [sp, #-8]!
   1e7d4:	str	lr, [sp, #4]
   1e7d8:	add	fp, sp, #4
   1e7dc:	sub	sp, sp, #8
   1e7e0:	str	r0, [fp, #-8]
   1e7e4:	ldr	r3, [fp, #-8]
   1e7e8:	cmp	r3, #0
   1e7ec:	bne	1e7f8 <Ref_Prefix+0x28>
   1e7f0:	mov	r3, #0
   1e7f4:	b	1e850 <Ref_Prefix+0x80>
   1e7f8:	ldr	r3, [fp, #-8]
   1e7fc:	ldr	r3, [r3, #4]
   1e800:	cmp	r3, #0
   1e804:	bne	1e838 <Ref_Prefix+0x68>
   1e808:	ldr	r3, [fp, #-8]
   1e80c:	ldrh	r3, [r3]
   1e810:	mov	r0, r3
   1e814:	ldr	r3, [fp, #-8]
   1e818:	add	r1, r3, #8
   1e81c:	ldr	r3, [fp, #-8]
   1e820:	ldrh	r3, [r3, #2]
   1e824:	mov	r2, r3
   1e828:	mov	r3, #0
   1e82c:	bl	1e430 <New_Prefix2>
   1e830:	mov	r3, r0
   1e834:	b	1e850 <Ref_Prefix+0x80>
   1e838:	ldr	r3, [fp, #-8]
   1e83c:	ldr	r3, [r3, #4]
   1e840:	add	r2, r3, #1
   1e844:	ldr	r3, [fp, #-8]
   1e848:	str	r2, [r3, #4]
   1e84c:	ldr	r3, [fp, #-8]
   1e850:	mov	r0, r3
   1e854:	sub	sp, fp, #4
   1e858:	ldr	fp, [sp]
   1e85c:	add	sp, sp, #4
   1e860:	pop	{pc}		; (ldr pc, [sp], #4)

0001e864 <Deref_Prefix>:
   1e864:	str	fp, [sp, #-8]!
   1e868:	str	lr, [sp, #4]
   1e86c:	add	fp, sp, #4
   1e870:	sub	sp, sp, #8
   1e874:	str	r0, [fp, #-8]
   1e878:	ldr	r3, [fp, #-8]
   1e87c:	cmp	r3, #0
   1e880:	beq	1e8b8 <Deref_Prefix+0x54>
   1e884:	ldr	r3, [fp, #-8]
   1e888:	ldr	r3, [r3, #4]
   1e88c:	sub	r2, r3, #1
   1e890:	ldr	r3, [fp, #-8]
   1e894:	str	r2, [r3, #4]
   1e898:	ldr	r3, [fp, #-8]
   1e89c:	ldr	r3, [r3, #4]
   1e8a0:	cmp	r3, #0
   1e8a4:	bgt	1e8bc <Deref_Prefix+0x58>
   1e8a8:	ldr	r0, [fp, #-8]
   1e8ac:	bl	1e2c0 <rb_free>
   1e8b0:	nop	{0}
   1e8b4:	b	1e8bc <Deref_Prefix+0x58>
   1e8b8:	nop	{0}
   1e8bc:	sub	sp, fp, #4
   1e8c0:	ldr	fp, [sp]
   1e8c4:	add	sp, sp, #4
   1e8c8:	pop	{pc}		; (ldr pc, [sp], #4)

0001e8cc <rb_new_patricia>:
   1e8cc:	str	fp, [sp, #-8]!
   1e8d0:	str	lr, [sp, #4]
   1e8d4:	add	fp, sp, #4
   1e8d8:	sub	sp, sp, #16
   1e8dc:	str	r0, [fp, #-16]
   1e8e0:	mov	r0, #12
   1e8e4:	bl	1e260 <rb_malloc>
   1e8e8:	str	r0, [fp, #-8]
   1e8ec:	ldr	r2, [fp, #-16]
   1e8f0:	ldr	r3, [fp, #-8]
   1e8f4:	str	r2, [r3, #4]
   1e8f8:	ldr	r3, [fp, #-8]
   1e8fc:	mov	r2, #0
   1e900:	str	r2, [r3]
   1e904:	ldr	r3, [fp, #-8]
   1e908:	mov	r2, #0
   1e90c:	str	r2, [r3, #8]
   1e910:	ldr	r3, [pc, #44]	; 1e944 <rb_new_patricia+0x78>
   1e914:	add	r3, pc, r3
   1e918:	ldr	r3, [r3]
   1e91c:	add	r2, r3, #1
   1e920:	ldr	r3, [pc, #32]	; 1e948 <rb_new_patricia+0x7c>
   1e924:	add	r3, pc, r3
   1e928:	str	r2, [r3]
   1e92c:	ldr	r3, [fp, #-8]
   1e930:	mov	r0, r3
   1e934:	sub	sp, fp, #4
   1e938:	ldr	fp, [sp]
   1e93c:	add	sp, sp, #4
   1e940:	pop	{pc}		; (ldr pc, [sp], #4)
   1e944:	.word	0x00034ae4
   1e948:	.word	0x00034ad4

0001e94c <rb_clear_patricia>:
   1e94c:	str	fp, [sp, #-8]!
   1e950:	str	lr, [sp, #4]
   1e954:	add	fp, sp, #4
   1e958:	sub	sp, sp, #544	; 0x220
   1e95c:	str	r0, [fp, #-544]	; 0xfffffde0
   1e960:	str	r1, [fp, #-548]	; 0xfffffddc
   1e964:	ldr	r3, [fp, #-544]	; 0xfffffde0
   1e968:	ldr	r3, [r3]
   1e96c:	cmp	r3, #0
   1e970:	beq	1eaa0 <rb_clear_patricia+0x154>
   1e974:	sub	r3, fp, #536	; 0x218
   1e978:	str	r3, [fp, #-8]
   1e97c:	ldr	r3, [fp, #-544]	; 0xfffffde0
   1e980:	ldr	r3, [r3]
   1e984:	str	r3, [fp, #-12]
   1e988:	b	1ea94 <rb_clear_patricia+0x148>
   1e98c:	ldr	r3, [fp, #-12]
   1e990:	ldr	r3, [r3, #8]
   1e994:	str	r3, [fp, #-16]
   1e998:	ldr	r3, [fp, #-12]
   1e99c:	ldr	r3, [r3, #12]
   1e9a0:	str	r3, [fp, #-20]	; 0xffffffec
   1e9a4:	ldr	r3, [fp, #-12]
   1e9a8:	ldr	r3, [r3, #4]
   1e9ac:	cmp	r3, #0
   1e9b0:	beq	1e9f4 <rb_clear_patricia+0xa8>
   1e9b4:	ldr	r3, [fp, #-12]
   1e9b8:	ldr	r3, [r3, #4]
   1e9bc:	mov	r0, r3
   1e9c0:	bl	1e864 <Deref_Prefix>
   1e9c4:	ldr	r3, [fp, #-12]
   1e9c8:	ldr	r3, [r3, #20]
   1e9cc:	cmp	r3, #0
   1e9d0:	beq	1e9f4 <rb_clear_patricia+0xa8>
   1e9d4:	ldr	r3, [fp, #-548]	; 0xfffffddc
   1e9d8:	cmp	r3, #0
   1e9dc:	beq	1e9f4 <rb_clear_patricia+0xa8>
   1e9e0:	ldr	r3, [fp, #-12]
   1e9e4:	ldr	r2, [r3, #20]
   1e9e8:	ldr	r3, [fp, #-548]	; 0xfffffddc
   1e9ec:	mov	r0, r2
   1e9f0:	blx	r3
   1e9f4:	ldr	r0, [fp, #-12]
   1e9f8:	bl	1e2c0 <rb_free>
   1e9fc:	ldr	r3, [fp, #-544]	; 0xfffffde0
   1ea00:	ldr	r3, [r3, #8]
   1ea04:	sub	r2, r3, #1
   1ea08:	ldr	r3, [fp, #-544]	; 0xfffffde0
   1ea0c:	str	r2, [r3, #8]
   1ea10:	ldr	r3, [fp, #-16]
   1ea14:	cmp	r3, #0
   1ea18:	beq	1ea48 <rb_clear_patricia+0xfc>
   1ea1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ea20:	cmp	r3, #0
   1ea24:	beq	1ea3c <rb_clear_patricia+0xf0>
   1ea28:	ldr	r3, [fp, #-8]
   1ea2c:	add	r2, r3, #4
   1ea30:	str	r2, [fp, #-8]
   1ea34:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ea38:	str	r2, [r3]
   1ea3c:	ldr	r3, [fp, #-16]
   1ea40:	str	r3, [fp, #-12]
   1ea44:	b	1ea94 <rb_clear_patricia+0x148>
   1ea48:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ea4c:	cmp	r3, #0
   1ea50:	beq	1ea60 <rb_clear_patricia+0x114>
   1ea54:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ea58:	str	r3, [fp, #-12]
   1ea5c:	b	1ea94 <rb_clear_patricia+0x148>
   1ea60:	sub	r3, fp, #536	; 0x218
   1ea64:	ldr	r2, [fp, #-8]
   1ea68:	cmp	r2, r3
   1ea6c:	beq	1ea8c <rb_clear_patricia+0x140>
   1ea70:	ldr	r3, [fp, #-8]
   1ea74:	sub	r3, r3, #4
   1ea78:	str	r3, [fp, #-8]
   1ea7c:	ldr	r3, [fp, #-8]
   1ea80:	ldr	r3, [r3]
   1ea84:	str	r3, [fp, #-12]
   1ea88:	b	1ea94 <rb_clear_patricia+0x148>
   1ea8c:	mov	r3, #0
   1ea90:	str	r3, [fp, #-12]
   1ea94:	ldr	r3, [fp, #-12]
   1ea98:	cmp	r3, #0
   1ea9c:	bne	1e98c <rb_clear_patricia+0x40>
   1eaa0:	ldr	r0, [fp, #-544]	; 0xfffffde0
   1eaa4:	bl	1e2c0 <rb_free>
   1eaa8:	nop	{0}
   1eaac:	sub	sp, fp, #4
   1eab0:	ldr	fp, [sp]
   1eab4:	add	sp, sp, #4
   1eab8:	pop	{pc}		; (ldr pc, [sp], #4)

0001eabc <rb_destroy_patricia>:
   1eabc:	str	fp, [sp, #-8]!
   1eac0:	str	lr, [sp, #4]
   1eac4:	add	fp, sp, #4
   1eac8:	sub	sp, sp, #8
   1eacc:	str	r0, [fp, #-8]
   1ead0:	str	r1, [fp, #-12]
   1ead4:	ldr	r1, [fp, #-12]
   1ead8:	ldr	r0, [fp, #-8]
   1eadc:	bl	451c <rb_clear_patricia@plt>
   1eae0:	ldr	r3, [pc, #40]	; 1eb10 <rb_destroy_patricia+0x54>
   1eae4:	add	r3, pc, r3
   1eae8:	ldr	r3, [r3]
   1eaec:	sub	r2, r3, #1
   1eaf0:	ldr	r3, [pc, #28]	; 1eb14 <rb_destroy_patricia+0x58>
   1eaf4:	add	r3, pc, r3
   1eaf8:	str	r2, [r3]
   1eafc:	nop	{0}
   1eb00:	sub	sp, fp, #4
   1eb04:	ldr	fp, [sp]
   1eb08:	add	sp, sp, #4
   1eb0c:	pop	{pc}		; (ldr pc, [sp], #4)
   1eb10:	.word	0x00034914
   1eb14:	.word	0x00034904

0001eb18 <rb_patricia_process>:
   1eb18:	str	fp, [sp, #-8]!
   1eb1c:	str	lr, [sp, #4]
   1eb20:	add	fp, sp, #4
   1eb24:	sub	sp, sp, #536	; 0x218
   1eb28:	str	r0, [fp, #-536]	; 0xfffffde8
   1eb2c:	str	r1, [fp, #-540]	; 0xfffffde4
   1eb30:	sub	r3, fp, #532	; 0x214
   1eb34:	str	r3, [fp, #-8]
   1eb38:	ldr	r3, [fp, #-536]	; 0xfffffde8
   1eb3c:	ldr	r3, [r3]
   1eb40:	str	r3, [fp, #-12]
   1eb44:	b	1ec10 <rb_patricia_process+0xf8>
   1eb48:	ldr	r3, [fp, #-16]
   1eb4c:	ldr	r3, [r3, #4]
   1eb50:	cmp	r3, #0
   1eb54:	beq	1eb74 <rb_patricia_process+0x5c>
   1eb58:	ldr	r3, [fp, #-16]
   1eb5c:	ldr	r2, [r3, #4]
   1eb60:	ldr	r3, [fp, #-16]
   1eb64:	ldr	r1, [r3, #20]
   1eb68:	ldr	r3, [fp, #-540]	; 0xfffffde4
   1eb6c:	mov	r0, r2
   1eb70:	blx	r3
   1eb74:	ldr	r3, [fp, #-12]
   1eb78:	ldr	r3, [r3, #8]
   1eb7c:	cmp	r3, #0
   1eb80:	beq	1ebbc <rb_patricia_process+0xa4>
   1eb84:	ldr	r3, [fp, #-12]
   1eb88:	ldr	r3, [r3, #12]
   1eb8c:	cmp	r3, #0
   1eb90:	beq	1ebac <rb_patricia_process+0x94>
   1eb94:	ldr	r3, [fp, #-8]
   1eb98:	add	r2, r3, #4
   1eb9c:	str	r2, [fp, #-8]
   1eba0:	ldr	r2, [fp, #-12]
   1eba4:	ldr	r2, [r2, #12]
   1eba8:	str	r2, [r3]
   1ebac:	ldr	r3, [fp, #-12]
   1ebb0:	ldr	r3, [r3, #8]
   1ebb4:	str	r3, [fp, #-12]
   1ebb8:	b	1ec10 <rb_patricia_process+0xf8>
   1ebbc:	ldr	r3, [fp, #-12]
   1ebc0:	ldr	r3, [r3, #12]
   1ebc4:	cmp	r3, #0
   1ebc8:	beq	1ebdc <rb_patricia_process+0xc4>
   1ebcc:	ldr	r3, [fp, #-12]
   1ebd0:	ldr	r3, [r3, #12]
   1ebd4:	str	r3, [fp, #-12]
   1ebd8:	b	1ec10 <rb_patricia_process+0xf8>
   1ebdc:	sub	r3, fp, #532	; 0x214
   1ebe0:	ldr	r2, [fp, #-8]
   1ebe4:	cmp	r2, r3
   1ebe8:	beq	1ec08 <rb_patricia_process+0xf0>
   1ebec:	ldr	r3, [fp, #-8]
   1ebf0:	sub	r3, r3, #4
   1ebf4:	str	r3, [fp, #-8]
   1ebf8:	ldr	r3, [fp, #-8]
   1ebfc:	ldr	r3, [r3]
   1ec00:	str	r3, [fp, #-12]
   1ec04:	b	1ec10 <rb_patricia_process+0xf8>
   1ec08:	mov	r3, #0
   1ec0c:	str	r3, [fp, #-12]
   1ec10:	ldr	r3, [fp, #-12]
   1ec14:	str	r3, [fp, #-16]
   1ec18:	ldr	r3, [fp, #-16]
   1ec1c:	cmp	r3, #0
   1ec20:	bne	1eb48 <rb_patricia_process+0x30>
   1ec24:	nop	{0}
   1ec28:	sub	sp, fp, #4
   1ec2c:	ldr	fp, [sp]
   1ec30:	add	sp, sp, #4
   1ec34:	pop	{pc}		; (ldr pc, [sp], #4)

0001ec38 <rb_patricia_search_exact>:
   1ec38:	str	r4, [sp, #-12]!
   1ec3c:	str	fp, [sp, #4]
   1ec40:	str	lr, [sp, #8]
   1ec44:	add	fp, sp, #8
   1ec48:	sub	sp, sp, #28
   1ec4c:	str	r0, [fp, #-32]	; 0xffffffe0
   1ec50:	str	r1, [fp, #-36]	; 0xffffffdc
   1ec54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ec58:	ldr	r3, [r3]
   1ec5c:	cmp	r3, #0
   1ec60:	bne	1ec6c <rb_patricia_search_exact+0x34>
   1ec64:	mov	r3, #0
   1ec68:	b	1ed88 <rb_patricia_search_exact+0x150>
   1ec6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ec70:	ldr	r3, [r3]
   1ec74:	str	r3, [fp, #-16]
   1ec78:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ec7c:	add	r3, r3, #8
   1ec80:	str	r3, [fp, #-20]	; 0xffffffec
   1ec84:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ec88:	ldrh	r3, [r3, #2]
   1ec8c:	str	r3, [fp, #-24]	; 0xffffffe8
   1ec90:	b	1ed00 <rb_patricia_search_exact+0xc8>
   1ec94:	ldr	r3, [fp, #-16]
   1ec98:	ldr	r3, [r3]
   1ec9c:	lsr	r3, r3, #3
   1eca0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1eca4:	add	r3, r2, r3
   1eca8:	ldrb	r3, [r3]
   1ecac:	mov	r1, r3
   1ecb0:	ldr	r3, [fp, #-16]
   1ecb4:	ldr	r3, [r3]
   1ecb8:	and	r3, r3, #7
   1ecbc:	mov	r2, #128	; 0x80
   1ecc0:	asr	r3, r2, r3
   1ecc4:	and	r3, r3, r1
   1ecc8:	cmp	r3, #0
   1eccc:	beq	1ece0 <rb_patricia_search_exact+0xa8>
   1ecd0:	ldr	r3, [fp, #-16]
   1ecd4:	ldr	r3, [r3, #12]
   1ecd8:	str	r3, [fp, #-16]
   1ecdc:	b	1ecec <rb_patricia_search_exact+0xb4>
   1ece0:	ldr	r3, [fp, #-16]
   1ece4:	ldr	r3, [r3, #8]
   1ece8:	str	r3, [fp, #-16]
   1ecec:	ldr	r3, [fp, #-16]
   1ecf0:	cmp	r3, #0
   1ecf4:	bne	1ed00 <rb_patricia_search_exact+0xc8>
   1ecf8:	mov	r3, #0
   1ecfc:	b	1ed88 <rb_patricia_search_exact+0x150>
   1ed00:	ldr	r3, [fp, #-16]
   1ed04:	ldr	r3, [r3]
   1ed08:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ed0c:	cmp	r2, r3
   1ed10:	bhi	1ec94 <rb_patricia_search_exact+0x5c>
   1ed14:	ldr	r3, [fp, #-16]
   1ed18:	ldr	r3, [r3]
   1ed1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ed20:	cmp	r2, r3
   1ed24:	bcc	1ed38 <rb_patricia_search_exact+0x100>
   1ed28:	ldr	r3, [fp, #-16]
   1ed2c:	ldr	r3, [r3, #4]
   1ed30:	cmp	r3, #0
   1ed34:	bne	1ed40 <rb_patricia_search_exact+0x108>
   1ed38:	mov	r3, #0
   1ed3c:	b	1ed88 <rb_patricia_search_exact+0x150>
   1ed40:	ldr	r3, [fp, #-16]
   1ed44:	ldr	r3, [r3, #4]
   1ed48:	mov	r0, r3
   1ed4c:	bl	1e324 <prefix_tochar>
   1ed50:	mov	r4, r0
   1ed54:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ed58:	bl	1e324 <prefix_tochar>
   1ed5c:	mov	r3, r0
   1ed60:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ed64:	mov	r1, r3
   1ed68:	mov	r0, r4
   1ed6c:	bl	1e360 <comp_with_mask>
   1ed70:	mov	r3, r0
   1ed74:	cmp	r3, #0
   1ed78:	beq	1ed84 <rb_patricia_search_exact+0x14c>
   1ed7c:	ldr	r3, [fp, #-16]
   1ed80:	b	1ed88 <rb_patricia_search_exact+0x150>
   1ed84:	mov	r3, #0
   1ed88:	mov	r0, r3
   1ed8c:	sub	sp, fp, #8
   1ed90:	ldr	r4, [sp]
   1ed94:	ldr	fp, [sp, #4]
   1ed98:	add	sp, sp, #8
   1ed9c:	pop	{pc}		; (ldr pc, [sp], #4)

0001eda0 <rb_patricia_search_best2>:
   1eda0:	str	r4, [sp, #-12]!
   1eda4:	str	fp, [sp, #4]
   1eda8:	str	lr, [sp, #8]
   1edac:	add	fp, sp, #8
   1edb0:	sub	sp, sp, #556	; 0x22c
   1edb4:	str	r0, [fp, #-552]	; 0xfffffdd8
   1edb8:	str	r1, [fp, #-556]	; 0xfffffdd4
   1edbc:	str	r2, [fp, #-560]	; 0xfffffdd0
   1edc0:	mov	r3, #0
   1edc4:	str	r3, [fp, #-20]	; 0xffffffec
   1edc8:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   1edcc:	ldr	r3, [r3]
   1edd0:	cmp	r3, #0
   1edd4:	bne	1ede0 <rb_patricia_search_best2+0x40>
   1edd8:	mov	r3, #0
   1eddc:	b	1ef94 <rb_patricia_search_best2+0x1f4>
   1ede0:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   1ede4:	ldr	r3, [r3]
   1ede8:	str	r3, [fp, #-16]
   1edec:	ldr	r3, [fp, #-556]	; 0xfffffdd4
   1edf0:	add	r3, r3, #8
   1edf4:	str	r3, [fp, #-24]	; 0xffffffe8
   1edf8:	ldr	r3, [fp, #-556]	; 0xfffffdd4
   1edfc:	ldrh	r3, [r3, #2]
   1ee00:	str	r3, [fp, #-28]	; 0xffffffe4
   1ee04:	b	1ee9c <rb_patricia_search_best2+0xfc>
   1ee08:	ldr	r3, [fp, #-16]
   1ee0c:	ldr	r3, [r3, #4]
   1ee10:	cmp	r3, #0
   1ee14:	beq	1ee38 <rb_patricia_search_best2+0x98>
   1ee18:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ee1c:	add	r2, r3, #1
   1ee20:	str	r2, [fp, #-20]	; 0xffffffec
   1ee24:	lsl	r3, r3, #2
   1ee28:	sub	r2, fp, #12
   1ee2c:	add	r3, r2, r3
   1ee30:	ldr	r2, [fp, #-16]
   1ee34:	str	r2, [r3, #-532]	; 0xfffffdec
   1ee38:	ldr	r3, [fp, #-16]
   1ee3c:	ldr	r3, [r3]
   1ee40:	lsr	r3, r3, #3
   1ee44:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ee48:	add	r3, r2, r3
   1ee4c:	ldrb	r3, [r3]
   1ee50:	mov	r1, r3
   1ee54:	ldr	r3, [fp, #-16]
   1ee58:	ldr	r3, [r3]
   1ee5c:	and	r3, r3, #7
   1ee60:	mov	r2, #128	; 0x80
   1ee64:	asr	r3, r2, r3
   1ee68:	and	r3, r3, r1
   1ee6c:	cmp	r3, #0
   1ee70:	beq	1ee84 <rb_patricia_search_best2+0xe4>
   1ee74:	ldr	r3, [fp, #-16]
   1ee78:	ldr	r3, [r3, #12]
   1ee7c:	str	r3, [fp, #-16]
   1ee80:	b	1ee90 <rb_patricia_search_best2+0xf0>
   1ee84:	ldr	r3, [fp, #-16]
   1ee88:	ldr	r3, [r3, #8]
   1ee8c:	str	r3, [fp, #-16]
   1ee90:	ldr	r3, [fp, #-16]
   1ee94:	cmp	r3, #0
   1ee98:	beq	1eeb4 <rb_patricia_search_best2+0x114>
   1ee9c:	ldr	r3, [fp, #-16]
   1eea0:	ldr	r3, [r3]
   1eea4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1eea8:	cmp	r2, r3
   1eeac:	bhi	1ee08 <rb_patricia_search_best2+0x68>
   1eeb0:	b	1eeb8 <rb_patricia_search_best2+0x118>
   1eeb4:	nop	{0}
   1eeb8:	ldr	r3, [fp, #-560]	; 0xfffffdd0
   1eebc:	cmp	r3, #0
   1eec0:	beq	1ef00 <rb_patricia_search_best2+0x160>
   1eec4:	ldr	r3, [fp, #-16]
   1eec8:	cmp	r3, #0
   1eecc:	beq	1ef00 <rb_patricia_search_best2+0x160>
   1eed0:	ldr	r3, [fp, #-16]
   1eed4:	ldr	r3, [r3, #4]
   1eed8:	cmp	r3, #0
   1eedc:	beq	1ef00 <rb_patricia_search_best2+0x160>
   1eee0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1eee4:	add	r2, r3, #1
   1eee8:	str	r2, [fp, #-20]	; 0xffffffec
   1eeec:	lsl	r3, r3, #2
   1eef0:	sub	r2, fp, #12
   1eef4:	add	r3, r2, r3
   1eef8:	ldr	r2, [fp, #-16]
   1eefc:	str	r2, [r3, #-532]	; 0xfffffdec
   1ef00:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ef04:	cmp	r3, #0
   1ef08:	bgt	1ef78 <rb_patricia_search_best2+0x1d8>
   1ef0c:	mov	r3, #0
   1ef10:	b	1ef94 <rb_patricia_search_best2+0x1f4>
   1ef14:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ef18:	lsl	r3, r3, #2
   1ef1c:	sub	r2, fp, #12
   1ef20:	add	r3, r2, r3
   1ef24:	ldr	r3, [r3, #-532]	; 0xfffffdec
   1ef28:	str	r3, [fp, #-16]
   1ef2c:	ldr	r3, [fp, #-16]
   1ef30:	ldr	r3, [r3, #4]
   1ef34:	mov	r0, r3
   1ef38:	bl	1e324 <prefix_tochar>
   1ef3c:	mov	r4, r0
   1ef40:	ldr	r0, [fp, #-556]	; 0xfffffdd4
   1ef44:	bl	1e324 <prefix_tochar>
   1ef48:	mov	r1, r0
   1ef4c:	ldr	r3, [fp, #-16]
   1ef50:	ldr	r3, [r3, #4]
   1ef54:	ldrh	r3, [r3, #2]
   1ef58:	mov	r2, r3
   1ef5c:	mov	r0, r4
   1ef60:	bl	1e360 <comp_with_mask>
   1ef64:	mov	r3, r0
   1ef68:	cmp	r3, #0
   1ef6c:	beq	1ef78 <rb_patricia_search_best2+0x1d8>
   1ef70:	ldr	r3, [fp, #-16]
   1ef74:	b	1ef94 <rb_patricia_search_best2+0x1f4>
   1ef78:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ef7c:	sub	r3, r3, #1
   1ef80:	str	r3, [fp, #-20]	; 0xffffffec
   1ef84:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ef88:	cmp	r3, #0
   1ef8c:	bge	1ef14 <rb_patricia_search_best2+0x174>
   1ef90:	mov	r3, #0
   1ef94:	mov	r0, r3
   1ef98:	sub	sp, fp, #8
   1ef9c:	ldr	r4, [sp]
   1efa0:	ldr	fp, [sp, #4]
   1efa4:	add	sp, sp, #8
   1efa8:	pop	{pc}		; (ldr pc, [sp], #4)

0001efac <rb_patricia_search_best>:
   1efac:	str	fp, [sp, #-8]!
   1efb0:	str	lr, [sp, #4]
   1efb4:	add	fp, sp, #4
   1efb8:	sub	sp, sp, #8
   1efbc:	str	r0, [fp, #-8]
   1efc0:	str	r1, [fp, #-12]
   1efc4:	mov	r2, #1
   1efc8:	ldr	r1, [fp, #-12]
   1efcc:	ldr	r0, [fp, #-8]
   1efd0:	bl	46d8 <rb_patricia_search_best2@plt>
   1efd4:	mov	r3, r0
   1efd8:	mov	r0, r3
   1efdc:	sub	sp, fp, #4
   1efe0:	ldr	fp, [sp]
   1efe4:	add	sp, sp, #4
   1efe8:	pop	{pc}		; (ldr pc, [sp], #4)

0001efec <rb_patricia_lookup>:
   1efec:	str	fp, [sp, #-8]!
   1eff0:	str	lr, [sp, #4]
   1eff4:	add	fp, sp, #4
   1eff8:	sub	sp, sp, #56	; 0x38
   1effc:	str	r0, [fp, #-56]	; 0xffffffc8
   1f000:	str	r1, [fp, #-60]	; 0xffffffc4
   1f004:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f008:	ldr	r3, [r3]
   1f00c:	cmp	r3, #0
   1f010:	bne	1f0a4 <rb_patricia_lookup+0xb8>
   1f014:	mov	r0, #24
   1f018:	bl	1e260 <rb_malloc>
   1f01c:	str	r0, [fp, #-8]
   1f020:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f024:	ldrh	r3, [r3, #2]
   1f028:	mov	r2, r3
   1f02c:	ldr	r3, [fp, #-8]
   1f030:	str	r2, [r3]
   1f034:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1f038:	bl	1e7d0 <Ref_Prefix>
   1f03c:	mov	r2, r0
   1f040:	ldr	r3, [fp, #-8]
   1f044:	str	r2, [r3, #4]
   1f048:	ldr	r3, [fp, #-8]
   1f04c:	mov	r2, #0
   1f050:	str	r2, [r3, #16]
   1f054:	ldr	r3, [fp, #-8]
   1f058:	mov	r2, #0
   1f05c:	str	r2, [r3, #12]
   1f060:	ldr	r3, [fp, #-8]
   1f064:	ldr	r2, [r3, #12]
   1f068:	ldr	r3, [fp, #-8]
   1f06c:	str	r2, [r3, #8]
   1f070:	ldr	r3, [fp, #-8]
   1f074:	mov	r2, #0
   1f078:	str	r2, [r3, #20]
   1f07c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f080:	ldr	r2, [fp, #-8]
   1f084:	str	r2, [r3]
   1f088:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f08c:	ldr	r3, [r3, #8]
   1f090:	add	r2, r3, #1
   1f094:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f098:	str	r2, [r3, #8]
   1f09c:	ldr	r3, [fp, #-8]
   1f0a0:	b	1f6a0 <rb_patricia_lookup+0x6b4>
   1f0a4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f0a8:	add	r3, r3, #8
   1f0ac:	str	r3, [fp, #-28]	; 0xffffffe4
   1f0b0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f0b4:	ldrh	r3, [r3, #2]
   1f0b8:	str	r3, [fp, #-32]	; 0xffffffe0
   1f0bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f0c0:	ldr	r3, [r3]
   1f0c4:	str	r3, [fp, #-8]
   1f0c8:	b	1f15c <rb_patricia_lookup+0x170>
   1f0cc:	ldr	r3, [fp, #-8]
   1f0d0:	ldr	r2, [r3]
   1f0d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f0d8:	ldr	r3, [r3, #4]
   1f0dc:	cmp	r2, r3
   1f0e0:	bcs	1f140 <rb_patricia_lookup+0x154>
   1f0e4:	ldr	r3, [fp, #-8]
   1f0e8:	ldr	r3, [r3]
   1f0ec:	lsr	r3, r3, #3
   1f0f0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1f0f4:	add	r3, r2, r3
   1f0f8:	ldrb	r3, [r3]
   1f0fc:	mov	r1, r3
   1f100:	ldr	r3, [fp, #-8]
   1f104:	ldr	r3, [r3]
   1f108:	and	r3, r3, #7
   1f10c:	mov	r2, #128	; 0x80
   1f110:	asr	r3, r2, r3
   1f114:	and	r3, r3, r1
   1f118:	cmp	r3, #0
   1f11c:	beq	1f140 <rb_patricia_lookup+0x154>
   1f120:	ldr	r3, [fp, #-8]
   1f124:	ldr	r3, [r3, #12]
   1f128:	cmp	r3, #0
   1f12c:	beq	1f184 <rb_patricia_lookup+0x198>
   1f130:	ldr	r3, [fp, #-8]
   1f134:	ldr	r3, [r3, #12]
   1f138:	str	r3, [fp, #-8]
   1f13c:	b	1f15c <rb_patricia_lookup+0x170>
   1f140:	ldr	r3, [fp, #-8]
   1f144:	ldr	r3, [r3, #8]
   1f148:	cmp	r3, #0
   1f14c:	beq	1f18c <rb_patricia_lookup+0x1a0>
   1f150:	ldr	r3, [fp, #-8]
   1f154:	ldr	r3, [r3, #8]
   1f158:	str	r3, [fp, #-8]
   1f15c:	ldr	r3, [fp, #-8]
   1f160:	ldr	r3, [r3]
   1f164:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f168:	cmp	r2, r3
   1f16c:	bhi	1f0cc <rb_patricia_lookup+0xe0>
   1f170:	ldr	r3, [fp, #-8]
   1f174:	ldr	r3, [r3, #4]
   1f178:	cmp	r3, #0
   1f17c:	beq	1f0cc <rb_patricia_lookup+0xe0>
   1f180:	b	1f190 <rb_patricia_lookup+0x1a4>
   1f184:	nop	{0}
   1f188:	b	1f190 <rb_patricia_lookup+0x1a4>
   1f18c:	nop	{0}
   1f190:	ldr	r3, [fp, #-8]
   1f194:	ldr	r3, [r3, #4]
   1f198:	add	r3, r3, #8
   1f19c:	str	r3, [fp, #-36]	; 0xffffffdc
   1f1a0:	ldr	r3, [fp, #-8]
   1f1a4:	ldr	r3, [r3]
   1f1a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f1ac:	cmp	r2, r3
   1f1b0:	movcc	r3, r2
   1f1b4:	movcs	r3, r3
   1f1b8:	str	r3, [fp, #-40]	; 0xffffffd8
   1f1bc:	mov	r3, #0
   1f1c0:	str	r3, [fp, #-16]
   1f1c4:	mov	r3, #0
   1f1c8:	str	r3, [fp, #-20]	; 0xffffffec
   1f1cc:	b	1f28c <rb_patricia_lookup+0x2a0>
   1f1d0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1f1d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f1d8:	add	r3, r2, r3
   1f1dc:	ldrb	r2, [r3]
   1f1e0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1f1e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f1e8:	add	r3, r1, r3
   1f1ec:	ldrb	r3, [r3]
   1f1f0:	eor	r3, r3, r2
   1f1f4:	uxtb	r3, r3
   1f1f8:	str	r3, [fp, #-44]	; 0xffffffd4
   1f1fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1f200:	cmp	r3, #0
   1f204:	bne	1f228 <rb_patricia_lookup+0x23c>
   1f208:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f20c:	add	r3, r3, #1
   1f210:	lsl	r3, r3, #3
   1f214:	str	r3, [fp, #-16]
   1f218:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f21c:	add	r3, r3, #1
   1f220:	str	r3, [fp, #-20]	; 0xffffffec
   1f224:	b	1f28c <rb_patricia_lookup+0x2a0>
   1f228:	mov	r3, #0
   1f22c:	str	r3, [fp, #-24]	; 0xffffffe8
   1f230:	b	1f260 <rb_patricia_lookup+0x274>
   1f234:	mov	r2, #128	; 0x80
   1f238:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f23c:	asr	r3, r2, r3
   1f240:	mov	r2, r3
   1f244:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1f248:	and	r3, r3, r2
   1f24c:	cmp	r3, #0
   1f250:	bne	1f270 <rb_patricia_lookup+0x284>
   1f254:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f258:	add	r3, r3, #1
   1f25c:	str	r3, [fp, #-24]	; 0xffffffe8
   1f260:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f264:	cmp	r3, #7
   1f268:	bls	1f234 <rb_patricia_lookup+0x248>
   1f26c:	b	1f274 <rb_patricia_lookup+0x288>
   1f270:	nop	{0}
   1f274:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f278:	lsl	r3, r3, #3
   1f27c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f280:	add	r3, r2, r3
   1f284:	str	r3, [fp, #-16]
   1f288:	b	1f2a0 <rb_patricia_lookup+0x2b4>
   1f28c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f290:	lsl	r3, r3, #3
   1f294:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1f298:	cmp	r2, r3
   1f29c:	bhi	1f1d0 <rb_patricia_lookup+0x1e4>
   1f2a0:	ldr	r2, [fp, #-16]
   1f2a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f2a8:	cmp	r2, r3
   1f2ac:	bls	1f2b8 <rb_patricia_lookup+0x2cc>
   1f2b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f2b4:	str	r3, [fp, #-16]
   1f2b8:	ldr	r3, [fp, #-8]
   1f2bc:	ldr	r3, [r3, #16]
   1f2c0:	str	r3, [fp, #-12]
   1f2c4:	b	1f2dc <rb_patricia_lookup+0x2f0>
   1f2c8:	ldr	r3, [fp, #-12]
   1f2cc:	str	r3, [fp, #-8]
   1f2d0:	ldr	r3, [fp, #-8]
   1f2d4:	ldr	r3, [r3, #16]
   1f2d8:	str	r3, [fp, #-12]
   1f2dc:	ldr	r3, [fp, #-12]
   1f2e0:	cmp	r3, #0
   1f2e4:	beq	1f2fc <rb_patricia_lookup+0x310>
   1f2e8:	ldr	r3, [fp, #-12]
   1f2ec:	ldr	r3, [r3]
   1f2f0:	ldr	r2, [fp, #-16]
   1f2f4:	cmp	r2, r3
   1f2f8:	bls	1f2c8 <rb_patricia_lookup+0x2dc>
   1f2fc:	ldr	r2, [fp, #-16]
   1f300:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f304:	cmp	r2, r3
   1f308:	bne	1f354 <rb_patricia_lookup+0x368>
   1f30c:	ldr	r3, [fp, #-8]
   1f310:	ldr	r3, [r3]
   1f314:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f318:	cmp	r2, r3
   1f31c:	bne	1f354 <rb_patricia_lookup+0x368>
   1f320:	ldr	r3, [fp, #-8]
   1f324:	ldr	r3, [r3, #4]
   1f328:	cmp	r3, #0
   1f32c:	beq	1f338 <rb_patricia_lookup+0x34c>
   1f330:	ldr	r3, [fp, #-8]
   1f334:	b	1f6a0 <rb_patricia_lookup+0x6b4>
   1f338:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1f33c:	bl	1e7d0 <Ref_Prefix>
   1f340:	mov	r2, r0
   1f344:	ldr	r3, [fp, #-8]
   1f348:	str	r2, [r3, #4]
   1f34c:	ldr	r3, [fp, #-8]
   1f350:	b	1f6a0 <rb_patricia_lookup+0x6b4>
   1f354:	mov	r0, #24
   1f358:	bl	1e260 <rb_malloc>
   1f35c:	str	r0, [fp, #-48]	; 0xffffffd0
   1f360:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f364:	ldrh	r3, [r3, #2]
   1f368:	mov	r2, r3
   1f36c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f370:	str	r2, [r3]
   1f374:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1f378:	bl	1e7d0 <Ref_Prefix>
   1f37c:	mov	r2, r0
   1f380:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f384:	str	r2, [r3, #4]
   1f388:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f38c:	mov	r2, #0
   1f390:	str	r2, [r3, #16]
   1f394:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f398:	mov	r2, #0
   1f39c:	str	r2, [r3, #12]
   1f3a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f3a4:	ldr	r2, [r3, #12]
   1f3a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f3ac:	str	r2, [r3, #8]
   1f3b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f3b4:	mov	r2, #0
   1f3b8:	str	r2, [r3, #20]
   1f3bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f3c0:	ldr	r3, [r3, #8]
   1f3c4:	add	r2, r3, #1
   1f3c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f3cc:	str	r2, [r3, #8]
   1f3d0:	ldr	r3, [fp, #-8]
   1f3d4:	ldr	r3, [r3]
   1f3d8:	ldr	r2, [fp, #-16]
   1f3dc:	cmp	r2, r3
   1f3e0:	bne	1f468 <rb_patricia_lookup+0x47c>
   1f3e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f3e8:	ldr	r2, [fp, #-8]
   1f3ec:	str	r2, [r3, #16]
   1f3f0:	ldr	r3, [fp, #-8]
   1f3f4:	ldr	r2, [r3]
   1f3f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f3fc:	ldr	r3, [r3, #4]
   1f400:	cmp	r2, r3
   1f404:	bcs	1f454 <rb_patricia_lookup+0x468>
   1f408:	ldr	r3, [fp, #-8]
   1f40c:	ldr	r3, [r3]
   1f410:	lsr	r3, r3, #3
   1f414:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1f418:	add	r3, r2, r3
   1f41c:	ldrb	r3, [r3]
   1f420:	mov	r1, r3
   1f424:	ldr	r3, [fp, #-8]
   1f428:	ldr	r3, [r3]
   1f42c:	and	r3, r3, #7
   1f430:	mov	r2, #128	; 0x80
   1f434:	asr	r3, r2, r3
   1f438:	and	r3, r3, r1
   1f43c:	cmp	r3, #0
   1f440:	beq	1f454 <rb_patricia_lookup+0x468>
   1f444:	ldr	r3, [fp, #-8]
   1f448:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1f44c:	str	r2, [r3, #12]
   1f450:	b	1f460 <rb_patricia_lookup+0x474>
   1f454:	ldr	r3, [fp, #-8]
   1f458:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1f45c:	str	r2, [r3, #8]
   1f460:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f464:	b	1f6a0 <rb_patricia_lookup+0x6b4>
   1f468:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f46c:	ldr	r3, [fp, #-16]
   1f470:	cmp	r2, r3
   1f474:	bne	1f558 <rb_patricia_lookup+0x56c>
   1f478:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f47c:	ldr	r3, [r3, #4]
   1f480:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f484:	cmp	r2, r3
   1f488:	bcs	1f4d0 <rb_patricia_lookup+0x4e4>
   1f48c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f490:	lsr	r3, r3, #3
   1f494:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1f498:	add	r3, r2, r3
   1f49c:	ldrb	r3, [r3]
   1f4a0:	mov	r1, r3
   1f4a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f4a8:	and	r3, r3, #7
   1f4ac:	mov	r2, #128	; 0x80
   1f4b0:	asr	r3, r2, r3
   1f4b4:	and	r3, r3, r1
   1f4b8:	cmp	r3, #0
   1f4bc:	beq	1f4d0 <rb_patricia_lookup+0x4e4>
   1f4c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f4c4:	ldr	r2, [fp, #-8]
   1f4c8:	str	r2, [r3, #12]
   1f4cc:	b	1f4dc <rb_patricia_lookup+0x4f0>
   1f4d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f4d4:	ldr	r2, [fp, #-8]
   1f4d8:	str	r2, [r3, #8]
   1f4dc:	ldr	r3, [fp, #-8]
   1f4e0:	ldr	r2, [r3, #16]
   1f4e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f4e8:	str	r2, [r3, #16]
   1f4ec:	ldr	r3, [fp, #-8]
   1f4f0:	ldr	r3, [r3, #16]
   1f4f4:	cmp	r3, #0
   1f4f8:	bne	1f50c <rb_patricia_lookup+0x520>
   1f4fc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f500:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1f504:	str	r2, [r3]
   1f508:	b	1f548 <rb_patricia_lookup+0x55c>
   1f50c:	ldr	r3, [fp, #-8]
   1f510:	ldr	r3, [r3, #16]
   1f514:	ldr	r3, [r3, #12]
   1f518:	ldr	r2, [fp, #-8]
   1f51c:	cmp	r2, r3
   1f520:	bne	1f538 <rb_patricia_lookup+0x54c>
   1f524:	ldr	r3, [fp, #-8]
   1f528:	ldr	r3, [r3, #16]
   1f52c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1f530:	str	r2, [r3, #12]
   1f534:	b	1f548 <rb_patricia_lookup+0x55c>
   1f538:	ldr	r3, [fp, #-8]
   1f53c:	ldr	r3, [r3, #16]
   1f540:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1f544:	str	r2, [r3, #8]
   1f548:	ldr	r3, [fp, #-8]
   1f54c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1f550:	str	r2, [r3, #16]
   1f554:	b	1f69c <rb_patricia_lookup+0x6b0>
   1f558:	mov	r0, #24
   1f55c:	bl	1e260 <rb_malloc>
   1f560:	str	r0, [fp, #-52]	; 0xffffffcc
   1f564:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f568:	ldr	r2, [fp, #-16]
   1f56c:	str	r2, [r3]
   1f570:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f574:	mov	r2, #0
   1f578:	str	r2, [r3, #4]
   1f57c:	ldr	r3, [fp, #-8]
   1f580:	ldr	r2, [r3, #16]
   1f584:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f588:	str	r2, [r3, #16]
   1f58c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f590:	mov	r2, #0
   1f594:	str	r2, [r3, #20]
   1f598:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f59c:	ldr	r3, [r3, #8]
   1f5a0:	add	r2, r3, #1
   1f5a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f5a8:	str	r2, [r3, #8]
   1f5ac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f5b0:	ldr	r3, [r3, #4]
   1f5b4:	ldr	r2, [fp, #-16]
   1f5b8:	cmp	r2, r3
   1f5bc:	bcs	1f610 <rb_patricia_lookup+0x624>
   1f5c0:	ldr	r3, [fp, #-16]
   1f5c4:	lsr	r3, r3, #3
   1f5c8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1f5cc:	add	r3, r2, r3
   1f5d0:	ldrb	r3, [r3]
   1f5d4:	mov	r1, r3
   1f5d8:	ldr	r3, [fp, #-16]
   1f5dc:	and	r3, r3, #7
   1f5e0:	mov	r2, #128	; 0x80
   1f5e4:	asr	r3, r2, r3
   1f5e8:	and	r3, r3, r1
   1f5ec:	cmp	r3, #0
   1f5f0:	beq	1f610 <rb_patricia_lookup+0x624>
   1f5f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f5f8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1f5fc:	str	r2, [r3, #12]
   1f600:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f604:	ldr	r2, [fp, #-8]
   1f608:	str	r2, [r3, #8]
   1f60c:	b	1f628 <rb_patricia_lookup+0x63c>
   1f610:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f614:	ldr	r2, [fp, #-8]
   1f618:	str	r2, [r3, #12]
   1f61c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f620:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1f624:	str	r2, [r3, #8]
   1f628:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f62c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1f630:	str	r2, [r3, #16]
   1f634:	ldr	r3, [fp, #-8]
   1f638:	ldr	r3, [r3, #16]
   1f63c:	cmp	r3, #0
   1f640:	bne	1f654 <rb_patricia_lookup+0x668>
   1f644:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f648:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1f64c:	str	r2, [r3]
   1f650:	b	1f690 <rb_patricia_lookup+0x6a4>
   1f654:	ldr	r3, [fp, #-8]
   1f658:	ldr	r3, [r3, #16]
   1f65c:	ldr	r3, [r3, #12]
   1f660:	ldr	r2, [fp, #-8]
   1f664:	cmp	r2, r3
   1f668:	bne	1f680 <rb_patricia_lookup+0x694>
   1f66c:	ldr	r3, [fp, #-8]
   1f670:	ldr	r3, [r3, #16]
   1f674:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1f678:	str	r2, [r3, #12]
   1f67c:	b	1f690 <rb_patricia_lookup+0x6a4>
   1f680:	ldr	r3, [fp, #-8]
   1f684:	ldr	r3, [r3, #16]
   1f688:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1f68c:	str	r2, [r3, #8]
   1f690:	ldr	r3, [fp, #-8]
   1f694:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1f698:	str	r2, [r3, #16]
   1f69c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f6a0:	mov	r0, r3
   1f6a4:	sub	sp, fp, #4
   1f6a8:	ldr	fp, [sp]
   1f6ac:	add	sp, sp, #4
   1f6b0:	pop	{pc}		; (ldr pc, [sp], #4)

0001f6b4 <rb_patricia_remove>:
   1f6b4:	str	fp, [sp, #-8]!
   1f6b8:	str	lr, [sp, #4]
   1f6bc:	add	fp, sp, #4
   1f6c0:	sub	sp, sp, #16
   1f6c4:	str	r0, [fp, #-16]
   1f6c8:	str	r1, [fp, #-20]	; 0xffffffec
   1f6cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f6d0:	ldr	r3, [r3, #12]
   1f6d4:	cmp	r3, #0
   1f6d8:	beq	1f728 <rb_patricia_remove+0x74>
   1f6dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f6e0:	ldr	r3, [r3, #8]
   1f6e4:	cmp	r3, #0
   1f6e8:	beq	1f728 <rb_patricia_remove+0x74>
   1f6ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f6f0:	ldr	r3, [r3, #4]
   1f6f4:	cmp	r3, #0
   1f6f8:	beq	1f70c <rb_patricia_remove+0x58>
   1f6fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f700:	ldr	r3, [r3, #4]
   1f704:	mov	r0, r3
   1f708:	bl	1e864 <Deref_Prefix>
   1f70c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f710:	mov	r2, #0
   1f714:	str	r2, [r3, #4]
   1f718:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f71c:	mov	r2, #0
   1f720:	str	r2, [r3, #20]
   1f724:	b	1f944 <rb_patricia_remove+0x290>
   1f728:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f72c:	ldr	r3, [r3, #12]
   1f730:	cmp	r3, #0
   1f734:	bne	1f880 <rb_patricia_remove+0x1cc>
   1f738:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f73c:	ldr	r3, [r3, #8]
   1f740:	cmp	r3, #0
   1f744:	bne	1f880 <rb_patricia_remove+0x1cc>
   1f748:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f74c:	ldr	r3, [r3, #16]
   1f750:	str	r3, [fp, #-12]
   1f754:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f758:	ldr	r3, [r3, #4]
   1f75c:	mov	r0, r3
   1f760:	bl	1e864 <Deref_Prefix>
   1f764:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f768:	bl	1e2c0 <rb_free>
   1f76c:	ldr	r3, [fp, #-16]
   1f770:	ldr	r3, [r3, #8]
   1f774:	sub	r2, r3, #1
   1f778:	ldr	r3, [fp, #-16]
   1f77c:	str	r2, [r3, #8]
   1f780:	ldr	r3, [fp, #-12]
   1f784:	cmp	r3, #0
   1f788:	bne	1f79c <rb_patricia_remove+0xe8>
   1f78c:	ldr	r3, [fp, #-16]
   1f790:	mov	r2, #0
   1f794:	str	r2, [r3]
   1f798:	b	1f944 <rb_patricia_remove+0x290>
   1f79c:	ldr	r3, [fp, #-12]
   1f7a0:	ldr	r3, [r3, #12]
   1f7a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f7a8:	cmp	r2, r3
   1f7ac:	bne	1f7cc <rb_patricia_remove+0x118>
   1f7b0:	ldr	r3, [fp, #-12]
   1f7b4:	mov	r2, #0
   1f7b8:	str	r2, [r3, #12]
   1f7bc:	ldr	r3, [fp, #-12]
   1f7c0:	ldr	r3, [r3, #8]
   1f7c4:	str	r3, [fp, #-8]
   1f7c8:	b	1f7e4 <rb_patricia_remove+0x130>
   1f7cc:	ldr	r3, [fp, #-12]
   1f7d0:	mov	r2, #0
   1f7d4:	str	r2, [r3, #8]
   1f7d8:	ldr	r3, [fp, #-12]
   1f7dc:	ldr	r3, [r3, #12]
   1f7e0:	str	r3, [fp, #-8]
   1f7e4:	ldr	r3, [fp, #-12]
   1f7e8:	ldr	r3, [r3, #4]
   1f7ec:	cmp	r3, #0
   1f7f0:	bne	1f940 <rb_patricia_remove+0x28c>
   1f7f4:	ldr	r3, [fp, #-12]
   1f7f8:	ldr	r3, [r3, #16]
   1f7fc:	cmp	r3, #0
   1f800:	bne	1f814 <rb_patricia_remove+0x160>
   1f804:	ldr	r3, [fp, #-16]
   1f808:	ldr	r2, [fp, #-8]
   1f80c:	str	r2, [r3]
   1f810:	b	1f850 <rb_patricia_remove+0x19c>
   1f814:	ldr	r3, [fp, #-12]
   1f818:	ldr	r3, [r3, #16]
   1f81c:	ldr	r3, [r3, #12]
   1f820:	ldr	r2, [fp, #-12]
   1f824:	cmp	r2, r3
   1f828:	bne	1f840 <rb_patricia_remove+0x18c>
   1f82c:	ldr	r3, [fp, #-12]
   1f830:	ldr	r3, [r3, #16]
   1f834:	ldr	r2, [fp, #-8]
   1f838:	str	r2, [r3, #12]
   1f83c:	b	1f850 <rb_patricia_remove+0x19c>
   1f840:	ldr	r3, [fp, #-12]
   1f844:	ldr	r3, [r3, #16]
   1f848:	ldr	r2, [fp, #-8]
   1f84c:	str	r2, [r3, #8]
   1f850:	ldr	r3, [fp, #-12]
   1f854:	ldr	r2, [r3, #16]
   1f858:	ldr	r3, [fp, #-8]
   1f85c:	str	r2, [r3, #16]
   1f860:	ldr	r0, [fp, #-12]
   1f864:	bl	1e2c0 <rb_free>
   1f868:	ldr	r3, [fp, #-16]
   1f86c:	ldr	r3, [r3, #8]
   1f870:	sub	r2, r3, #1
   1f874:	ldr	r3, [fp, #-16]
   1f878:	str	r2, [r3, #8]
   1f87c:	b	1f944 <rb_patricia_remove+0x290>
   1f880:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f884:	ldr	r3, [r3, #12]
   1f888:	cmp	r3, #0
   1f88c:	beq	1f8a0 <rb_patricia_remove+0x1ec>
   1f890:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f894:	ldr	r3, [r3, #12]
   1f898:	str	r3, [fp, #-8]
   1f89c:	b	1f8ac <rb_patricia_remove+0x1f8>
   1f8a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f8a4:	ldr	r3, [r3, #8]
   1f8a8:	str	r3, [fp, #-8]
   1f8ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f8b0:	ldr	r3, [r3, #16]
   1f8b4:	str	r3, [fp, #-12]
   1f8b8:	ldr	r3, [fp, #-8]
   1f8bc:	ldr	r2, [fp, #-12]
   1f8c0:	str	r2, [r3, #16]
   1f8c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f8c8:	ldr	r3, [r3, #4]
   1f8cc:	mov	r0, r3
   1f8d0:	bl	1e864 <Deref_Prefix>
   1f8d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f8d8:	bl	1e2c0 <rb_free>
   1f8dc:	ldr	r3, [fp, #-16]
   1f8e0:	ldr	r3, [r3, #8]
   1f8e4:	sub	r2, r3, #1
   1f8e8:	ldr	r3, [fp, #-16]
   1f8ec:	str	r2, [r3, #8]
   1f8f0:	ldr	r3, [fp, #-12]
   1f8f4:	cmp	r3, #0
   1f8f8:	bne	1f90c <rb_patricia_remove+0x258>
   1f8fc:	ldr	r3, [fp, #-16]
   1f900:	ldr	r2, [fp, #-8]
   1f904:	str	r2, [r3]
   1f908:	b	1f944 <rb_patricia_remove+0x290>
   1f90c:	ldr	r3, [fp, #-12]
   1f910:	ldr	r3, [r3, #12]
   1f914:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f918:	cmp	r2, r3
   1f91c:	bne	1f930 <rb_patricia_remove+0x27c>
   1f920:	ldr	r3, [fp, #-12]
   1f924:	ldr	r2, [fp, #-8]
   1f928:	str	r2, [r3, #12]
   1f92c:	b	1f944 <rb_patricia_remove+0x290>
   1f930:	ldr	r3, [fp, #-12]
   1f934:	ldr	r2, [fp, #-8]
   1f938:	str	r2, [r3, #8]
   1f93c:	b	1f944 <rb_patricia_remove+0x290>
   1f940:	nop	{0}
   1f944:	sub	sp, fp, #4
   1f948:	ldr	fp, [sp]
   1f94c:	add	sp, sp, #4
   1f950:	pop	{pc}		; (ldr pc, [sp], #4)

0001f954 <make_and_lookup_ip>:
   1f954:	str	fp, [sp, #-8]!
   1f958:	str	lr, [sp, #4]
   1f95c:	add	fp, sp, #4
   1f960:	sub	sp, sp, #32
   1f964:	str	r0, [fp, #-24]	; 0xffffffe8
   1f968:	str	r1, [fp, #-28]	; 0xffffffe4
   1f96c:	str	r2, [fp, #-32]	; 0xffffffe0
   1f970:	mov	r3, #0
   1f974:	str	r3, [fp, #-8]
   1f978:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f97c:	ldrh	r3, [r3]
   1f980:	cmp	r3, #10
   1f984:	bne	1f998 <make_and_lookup_ip+0x44>
   1f988:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f98c:	add	r3, r3, #8
   1f990:	str	r3, [fp, #-8]
   1f994:	b	1f9a4 <make_and_lookup_ip+0x50>
   1f998:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f99c:	add	r3, r3, #4
   1f9a0:	str	r3, [fp, #-8]
   1f9a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f9a8:	ldrh	r3, [r3]
   1f9ac:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f9b0:	ldr	r1, [fp, #-8]
   1f9b4:	mov	r0, r3
   1f9b8:	bl	1e580 <New_Prefix>
   1f9bc:	str	r0, [fp, #-12]
   1f9c0:	ldr	r3, [fp, #-12]
   1f9c4:	cmp	r3, #0
   1f9c8:	bne	1f9d4 <make_and_lookup_ip+0x80>
   1f9cc:	mov	r3, #0
   1f9d0:	b	1f9f0 <make_and_lookup_ip+0x9c>
   1f9d4:	ldr	r1, [fp, #-12]
   1f9d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f9dc:	bl	4918 <rb_patricia_lookup@plt>
   1f9e0:	str	r0, [fp, #-16]
   1f9e4:	ldr	r0, [fp, #-12]
   1f9e8:	bl	1e864 <Deref_Prefix>
   1f9ec:	ldr	r3, [fp, #-16]
   1f9f0:	mov	r0, r3
   1f9f4:	sub	sp, fp, #4
   1f9f8:	ldr	fp, [sp]
   1f9fc:	add	sp, sp, #4
   1fa00:	pop	{pc}		; (ldr pc, [sp], #4)

0001fa04 <make_and_lookup>:
   1fa04:	str	fp, [sp, #-8]!
   1fa08:	str	lr, [sp, #4]
   1fa0c:	add	fp, sp, #4
   1fa10:	sub	sp, sp, #16
   1fa14:	str	r0, [fp, #-16]
   1fa18:	str	r1, [fp, #-20]	; 0xffffffec
   1fa1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fa20:	mov	r0, #2
   1fa24:	bl	1e5c8 <ascii2prefix>
   1fa28:	str	r0, [fp, #-8]
   1fa2c:	ldr	r3, [fp, #-8]
   1fa30:	cmp	r3, #0
   1fa34:	beq	1fa4c <make_and_lookup+0x48>
   1fa38:	ldr	r1, [fp, #-8]
   1fa3c:	ldr	r0, [fp, #-16]
   1fa40:	bl	4918 <rb_patricia_lookup@plt>
   1fa44:	str	r0, [fp, #-12]
   1fa48:	b	1fa84 <make_and_lookup+0x80>
   1fa4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fa50:	mov	r0, #10
   1fa54:	bl	1e5c8 <ascii2prefix>
   1fa58:	str	r0, [fp, #-8]
   1fa5c:	ldr	r3, [fp, #-8]
   1fa60:	cmp	r3, #0
   1fa64:	beq	1fa7c <make_and_lookup+0x78>
   1fa68:	ldr	r1, [fp, #-8]
   1fa6c:	ldr	r0, [fp, #-16]
   1fa70:	bl	4918 <rb_patricia_lookup@plt>
   1fa74:	str	r0, [fp, #-12]
   1fa78:	b	1fa84 <make_and_lookup+0x80>
   1fa7c:	mov	r3, #0
   1fa80:	b	1fa90 <make_and_lookup+0x8c>
   1fa84:	ldr	r0, [fp, #-8]
   1fa88:	bl	1e864 <Deref_Prefix>
   1fa8c:	ldr	r3, [fp, #-12]
   1fa90:	mov	r0, r3
   1fa94:	sub	sp, fp, #4
   1fa98:	ldr	fp, [sp]
   1fa9c:	add	sp, sp, #4
   1faa0:	pop	{pc}		; (ldr pc, [sp], #4)

0001faa4 <rb_match_ip>:
   1faa4:	str	fp, [sp, #-8]!
   1faa8:	str	lr, [sp, #4]
   1faac:	add	fp, sp, #4
   1fab0:	sub	sp, sp, #32
   1fab4:	str	r0, [fp, #-32]	; 0xffffffe0
   1fab8:	str	r1, [fp, #-36]	; 0xffffffdc
   1fabc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1fac0:	ldrh	r3, [r3]
   1fac4:	cmp	r3, #10
   1fac8:	bne	1faec <rb_match_ip+0x48>
   1facc:	mov	r3, #128	; 0x80
   1fad0:	str	r3, [fp, #-12]
   1fad4:	mov	r3, #10
   1fad8:	str	r3, [fp, #-16]
   1fadc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1fae0:	add	r3, r3, #8
   1fae4:	str	r3, [fp, #-8]
   1fae8:	b	1fb08 <rb_match_ip+0x64>
   1faec:	mov	r3, #32
   1faf0:	str	r3, [fp, #-12]
   1faf4:	mov	r3, #2
   1faf8:	str	r3, [fp, #-16]
   1fafc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1fb00:	add	r3, r3, #4
   1fb04:	str	r3, [fp, #-8]
   1fb08:	ldr	r3, [fp, #-12]
   1fb0c:	mov	r2, r3
   1fb10:	ldr	r1, [fp, #-8]
   1fb14:	ldr	r0, [fp, #-16]
   1fb18:	bl	1e580 <New_Prefix>
   1fb1c:	str	r0, [fp, #-20]	; 0xffffffec
   1fb20:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fb24:	cmp	r3, #0
   1fb28:	beq	1fb4c <rb_match_ip+0xa8>
   1fb2c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fb30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fb34:	bl	4570 <rb_patricia_search_best@plt>
   1fb38:	str	r0, [fp, #-24]	; 0xffffffe8
   1fb3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fb40:	bl	1e864 <Deref_Prefix>
   1fb44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fb48:	b	1fb50 <rb_match_ip+0xac>
   1fb4c:	mov	r3, #0
   1fb50:	mov	r0, r3
   1fb54:	sub	sp, fp, #4
   1fb58:	ldr	fp, [sp]
   1fb5c:	add	sp, sp, #4
   1fb60:	pop	{pc}		; (ldr pc, [sp], #4)

0001fb64 <rb_match_ip_exact>:
   1fb64:	str	fp, [sp, #-8]!
   1fb68:	str	lr, [sp, #4]
   1fb6c:	add	fp, sp, #4
   1fb70:	sub	sp, sp, #32
   1fb74:	str	r0, [fp, #-24]	; 0xffffffe8
   1fb78:	str	r1, [fp, #-28]	; 0xffffffe4
   1fb7c:	str	r2, [fp, #-32]	; 0xffffffe0
   1fb80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fb84:	ldrh	r3, [r3]
   1fb88:	cmp	r3, #10
   1fb8c:	bne	1fbbc <rb_match_ip_exact+0x58>
   1fb90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fb94:	cmp	r3, #128	; 0x80
   1fb98:	bls	1fba4 <rb_match_ip_exact+0x40>
   1fb9c:	mov	r3, #128	; 0x80
   1fba0:	str	r3, [fp, #-32]	; 0xffffffe0
   1fba4:	mov	r3, #10
   1fba8:	str	r3, [fp, #-12]
   1fbac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fbb0:	add	r3, r3, #8
   1fbb4:	str	r3, [fp, #-8]
   1fbb8:	b	1fbe4 <rb_match_ip_exact+0x80>
   1fbbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fbc0:	cmp	r3, #32
   1fbc4:	bls	1fbd0 <rb_match_ip_exact+0x6c>
   1fbc8:	mov	r3, #32
   1fbcc:	str	r3, [fp, #-32]	; 0xffffffe0
   1fbd0:	mov	r3, #2
   1fbd4:	str	r3, [fp, #-12]
   1fbd8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fbdc:	add	r3, r3, #4
   1fbe0:	str	r3, [fp, #-8]
   1fbe4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fbe8:	mov	r2, r3
   1fbec:	ldr	r1, [fp, #-8]
   1fbf0:	ldr	r0, [fp, #-12]
   1fbf4:	bl	1e580 <New_Prefix>
   1fbf8:	str	r0, [fp, #-16]
   1fbfc:	ldr	r3, [fp, #-16]
   1fc00:	cmp	r3, #0
   1fc04:	beq	1fc28 <rb_match_ip_exact+0xc4>
   1fc08:	ldr	r1, [fp, #-16]
   1fc0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fc10:	bl	48d0 <rb_patricia_search_exact@plt>
   1fc14:	str	r0, [fp, #-20]	; 0xffffffec
   1fc18:	ldr	r0, [fp, #-16]
   1fc1c:	bl	1e864 <Deref_Prefix>
   1fc20:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fc24:	b	1fc2c <rb_match_ip_exact+0xc8>
   1fc28:	mov	r3, #0
   1fc2c:	mov	r0, r3
   1fc30:	sub	sp, fp, #4
   1fc34:	ldr	fp, [sp]
   1fc38:	add	sp, sp, #4
   1fc3c:	pop	{pc}		; (ldr pc, [sp], #4)

0001fc40 <rb_match_string>:
   1fc40:	str	fp, [sp, #-8]!
   1fc44:	str	lr, [sp, #4]
   1fc48:	add	fp, sp, #4
   1fc4c:	sub	sp, sp, #16
   1fc50:	str	r0, [fp, #-16]
   1fc54:	str	r1, [fp, #-20]	; 0xffffffec
   1fc58:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fc5c:	mov	r0, #2
   1fc60:	bl	1e5c8 <ascii2prefix>
   1fc64:	str	r0, [fp, #-12]
   1fc68:	ldr	r3, [fp, #-12]
   1fc6c:	cmp	r3, #0
   1fc70:	beq	1fc90 <rb_match_string+0x50>
   1fc74:	ldr	r1, [fp, #-12]
   1fc78:	ldr	r0, [fp, #-16]
   1fc7c:	bl	4570 <rb_patricia_search_best@plt>
   1fc80:	str	r0, [fp, #-8]
   1fc84:	ldr	r0, [fp, #-12]
   1fc88:	bl	1e864 <Deref_Prefix>
   1fc8c:	b	1fcd0 <rb_match_string+0x90>
   1fc90:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fc94:	mov	r0, #10
   1fc98:	bl	1e5c8 <ascii2prefix>
   1fc9c:	str	r0, [fp, #-12]
   1fca0:	ldr	r3, [fp, #-12]
   1fca4:	cmp	r3, #0
   1fca8:	beq	1fcc8 <rb_match_string+0x88>
   1fcac:	ldr	r1, [fp, #-12]
   1fcb0:	ldr	r0, [fp, #-16]
   1fcb4:	bl	4570 <rb_patricia_search_best@plt>
   1fcb8:	str	r0, [fp, #-8]
   1fcbc:	ldr	r0, [fp, #-12]
   1fcc0:	bl	1e864 <Deref_Prefix>
   1fcc4:	b	1fcd0 <rb_match_string+0x90>
   1fcc8:	mov	r3, #0
   1fccc:	b	1fcd4 <rb_match_string+0x94>
   1fcd0:	ldr	r3, [fp, #-8]
   1fcd4:	mov	r0, r3
   1fcd8:	sub	sp, fp, #4
   1fcdc:	ldr	fp, [sp]
   1fce0:	add	sp, sp, #4
   1fce4:	pop	{pc}		; (ldr pc, [sp], #4)

0001fce8 <rb_match_exact_string>:
   1fce8:	str	fp, [sp, #-8]!
   1fcec:	str	lr, [sp, #4]
   1fcf0:	add	fp, sp, #4
   1fcf4:	sub	sp, sp, #16
   1fcf8:	str	r0, [fp, #-16]
   1fcfc:	str	r1, [fp, #-20]	; 0xffffffec
   1fd00:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fd04:	mov	r0, #2
   1fd08:	bl	1e5c8 <ascii2prefix>
   1fd0c:	str	r0, [fp, #-12]
   1fd10:	ldr	r3, [fp, #-12]
   1fd14:	cmp	r3, #0
   1fd18:	beq	1fd38 <rb_match_exact_string+0x50>
   1fd1c:	ldr	r1, [fp, #-12]
   1fd20:	ldr	r0, [fp, #-16]
   1fd24:	bl	48d0 <rb_patricia_search_exact@plt>
   1fd28:	str	r0, [fp, #-8]
   1fd2c:	ldr	r0, [fp, #-12]
   1fd30:	bl	1e864 <Deref_Prefix>
   1fd34:	b	1fd78 <rb_match_exact_string+0x90>
   1fd38:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fd3c:	mov	r0, #10
   1fd40:	bl	1e5c8 <ascii2prefix>
   1fd44:	str	r0, [fp, #-12]
   1fd48:	ldr	r3, [fp, #-12]
   1fd4c:	cmp	r3, #0
   1fd50:	beq	1fd70 <rb_match_exact_string+0x88>
   1fd54:	ldr	r1, [fp, #-12]
   1fd58:	ldr	r0, [fp, #-16]
   1fd5c:	bl	48d0 <rb_patricia_search_exact@plt>
   1fd60:	str	r0, [fp, #-8]
   1fd64:	ldr	r0, [fp, #-12]
   1fd68:	bl	1e864 <Deref_Prefix>
   1fd6c:	b	1fd78 <rb_match_exact_string+0x90>
   1fd70:	mov	r3, #0
   1fd74:	b	1fd7c <rb_match_exact_string+0x94>
   1fd78:	ldr	r3, [fp, #-8]
   1fd7c:	mov	r0, r3
   1fd80:	sub	sp, fp, #4
   1fd84:	ldr	fp, [sp]
   1fd88:	add	sp, sp, #4
   1fd8c:	pop	{pc}		; (ldr pc, [sp], #4)

0001fd90 <rb_dlinkAdd>:
   1fd90:	push	{fp}		; (str fp, [sp, #-4]!)
   1fd94:	add	fp, sp, #0
   1fd98:	sub	sp, sp, #20
   1fd9c:	str	r0, [fp, #-8]
   1fda0:	str	r1, [fp, #-12]
   1fda4:	str	r2, [fp, #-16]
   1fda8:	ldr	r3, [fp, #-12]
   1fdac:	ldr	r2, [fp, #-8]
   1fdb0:	str	r2, [r3]
   1fdb4:	ldr	r3, [fp, #-12]
   1fdb8:	mov	r2, #0
   1fdbc:	str	r2, [r3, #4]
   1fdc0:	ldr	r3, [fp, #-16]
   1fdc4:	ldr	r2, [r3]
   1fdc8:	ldr	r3, [fp, #-12]
   1fdcc:	str	r2, [r3, #8]
   1fdd0:	ldr	r3, [fp, #-16]
   1fdd4:	ldr	r3, [r3]
   1fdd8:	cmp	r3, #0
   1fddc:	beq	1fdf4 <rb_dlinkAdd+0x64>
   1fde0:	ldr	r3, [fp, #-16]
   1fde4:	ldr	r3, [r3]
   1fde8:	ldr	r2, [fp, #-12]
   1fdec:	str	r2, [r3, #4]
   1fdf0:	b	1fe10 <rb_dlinkAdd+0x80>
   1fdf4:	ldr	r3, [fp, #-16]
   1fdf8:	ldr	r3, [r3, #4]
   1fdfc:	cmp	r3, #0
   1fe00:	bne	1fe10 <rb_dlinkAdd+0x80>
   1fe04:	ldr	r3, [fp, #-16]
   1fe08:	ldr	r2, [fp, #-12]
   1fe0c:	str	r2, [r3, #4]
   1fe10:	ldr	r3, [fp, #-16]
   1fe14:	ldr	r2, [fp, #-12]
   1fe18:	str	r2, [r3]
   1fe1c:	ldr	r3, [fp, #-16]
   1fe20:	ldr	r3, [r3, #8]
   1fe24:	add	r2, r3, #1
   1fe28:	ldr	r3, [fp, #-16]
   1fe2c:	str	r2, [r3, #8]
   1fe30:	nop	{0}
   1fe34:	add	sp, fp, #0
   1fe38:	pop	{fp}		; (ldr fp, [sp], #4)
   1fe3c:	bx	lr

0001fe40 <rb_dlinkDelete>:
   1fe40:	push	{fp}		; (str fp, [sp, #-4]!)
   1fe44:	add	fp, sp, #0
   1fe48:	sub	sp, sp, #12
   1fe4c:	str	r0, [fp, #-8]
   1fe50:	str	r1, [fp, #-12]
   1fe54:	ldr	r3, [fp, #-8]
   1fe58:	ldr	r3, [r3, #8]
   1fe5c:	cmp	r3, #0
   1fe60:	beq	1fe7c <rb_dlinkDelete+0x3c>
   1fe64:	ldr	r3, [fp, #-8]
   1fe68:	ldr	r3, [r3, #8]
   1fe6c:	ldr	r2, [fp, #-8]
   1fe70:	ldr	r2, [r2, #4]
   1fe74:	str	r2, [r3, #4]
   1fe78:	b	1fe8c <rb_dlinkDelete+0x4c>
   1fe7c:	ldr	r3, [fp, #-8]
   1fe80:	ldr	r2, [r3, #4]
   1fe84:	ldr	r3, [fp, #-12]
   1fe88:	str	r2, [r3, #4]
   1fe8c:	ldr	r3, [fp, #-8]
   1fe90:	ldr	r3, [r3, #4]
   1fe94:	cmp	r3, #0
   1fe98:	beq	1feb4 <rb_dlinkDelete+0x74>
   1fe9c:	ldr	r3, [fp, #-8]
   1fea0:	ldr	r3, [r3, #4]
   1fea4:	ldr	r2, [fp, #-8]
   1fea8:	ldr	r2, [r2, #8]
   1feac:	str	r2, [r3, #8]
   1feb0:	b	1fec4 <rb_dlinkDelete+0x84>
   1feb4:	ldr	r3, [fp, #-8]
   1feb8:	ldr	r2, [r3, #8]
   1febc:	ldr	r3, [fp, #-12]
   1fec0:	str	r2, [r3]
   1fec4:	ldr	r3, [fp, #-8]
   1fec8:	mov	r2, #0
   1fecc:	str	r2, [r3, #4]
   1fed0:	ldr	r3, [fp, #-8]
   1fed4:	ldr	r2, [r3, #4]
   1fed8:	ldr	r3, [fp, #-8]
   1fedc:	str	r2, [r3, #8]
   1fee0:	ldr	r3, [fp, #-12]
   1fee4:	ldr	r3, [r3, #8]
   1fee8:	sub	r2, r3, #1
   1feec:	ldr	r3, [fp, #-12]
   1fef0:	str	r2, [r3, #8]
   1fef4:	nop	{0}
   1fef8:	add	sp, fp, #0
   1fefc:	pop	{fp}		; (ldr fp, [sp], #4)
   1ff00:	bx	lr

0001ff04 <rb_malloc>:
   1ff04:	str	fp, [sp, #-8]!
   1ff08:	str	lr, [sp, #4]
   1ff0c:	add	fp, sp, #4
   1ff10:	sub	sp, sp, #16
   1ff14:	str	r0, [fp, #-16]
   1ff18:	ldr	r1, [fp, #-16]
   1ff1c:	mov	r0, #1
   1ff20:	bl	460c <calloc@plt>
   1ff24:	mov	r3, r0
   1ff28:	str	r3, [fp, #-8]
   1ff2c:	ldr	r3, [fp, #-8]
   1ff30:	cmp	r3, #0
   1ff34:	moveq	r3, #1
   1ff38:	movne	r3, #0
   1ff3c:	uxtb	r3, r3
   1ff40:	cmp	r3, #0
   1ff44:	beq	1ff4c <rb_malloc+0x48>
   1ff48:	bl	49a8 <rb_outofmemory@plt>
   1ff4c:	ldr	r3, [fp, #-8]
   1ff50:	mov	r0, r3
   1ff54:	sub	sp, fp, #4
   1ff58:	ldr	fp, [sp]
   1ff5c:	add	sp, sp, #4
   1ff60:	pop	{pc}		; (ldr pc, [sp], #4)

0001ff64 <rb_strdup>:
   1ff64:	str	fp, [sp, #-8]!
   1ff68:	str	lr, [sp, #4]
   1ff6c:	add	fp, sp, #4
   1ff70:	sub	sp, sp, #16
   1ff74:	str	r0, [fp, #-16]
   1ff78:	ldr	r0, [fp, #-16]
   1ff7c:	bl	4810 <strlen@plt>
   1ff80:	mov	r3, r0
   1ff84:	add	r3, r3, #1
   1ff88:	mov	r0, r3
   1ff8c:	bl	49cc <malloc@plt>
   1ff90:	mov	r3, r0
   1ff94:	str	r3, [fp, #-8]
   1ff98:	ldr	r3, [fp, #-8]
   1ff9c:	cmp	r3, #0
   1ffa0:	moveq	r3, #1
   1ffa4:	movne	r3, #0
   1ffa8:	uxtb	r3, r3
   1ffac:	cmp	r3, #0
   1ffb0:	beq	1ffb8 <rb_strdup+0x54>
   1ffb4:	bl	49a8 <rb_outofmemory@plt>
   1ffb8:	ldr	r1, [fp, #-16]
   1ffbc:	ldr	r0, [fp, #-8]
   1ffc0:	bl	48ac <strcpy@plt>
   1ffc4:	ldr	r3, [fp, #-8]
   1ffc8:	mov	r0, r3
   1ffcc:	sub	sp, fp, #4
   1ffd0:	ldr	fp, [sp]
   1ffd4:	add	sp, sp, #4
   1ffd8:	pop	{pc}		; (ldr pc, [sp], #4)

0001ffdc <rb_free>:
   1ffdc:	str	fp, [sp, #-8]!
   1ffe0:	str	lr, [sp, #4]
   1ffe4:	add	fp, sp, #4
   1ffe8:	sub	sp, sp, #8
   1ffec:	str	r0, [fp, #-8]
   1fff0:	ldr	r3, [fp, #-8]
   1fff4:	cmp	r3, #0
   1fff8:	movne	r3, #1
   1fffc:	moveq	r3, #0
   20000:	uxtb	r3, r3
   20004:	cmp	r3, #0
   20008:	beq	20014 <rb_free+0x38>
   2000c:	ldr	r0, [fp, #-8]
   20010:	bl	4720 <free@plt>
   20014:	nop	{0}
   20018:	sub	sp, fp, #4
   2001c:	ldr	fp, [sp]
   20020:	add	sp, sp, #4
   20024:	pop	{pc}		; (ldr pc, [sp], #4)

00020028 <rb_dictionary_create>:
   20028:	str	fp, [sp, #-8]!
   2002c:	str	lr, [sp, #4]
   20030:	add	fp, sp, #4
   20034:	sub	sp, sp, #16
   20038:	str	r0, [fp, #-16]
   2003c:	str	r1, [fp, #-20]	; 0xffffffec
   20040:	mov	r0, #40	; 0x28
   20044:	bl	1ff04 <rb_malloc>
   20048:	str	r0, [fp, #-8]
   2004c:	ldr	r3, [fp, #-8]
   20050:	ldr	r2, [fp, #-20]	; 0xffffffec
   20054:	str	r2, [r3]
   20058:	ldr	r0, [fp, #-16]
   2005c:	bl	1ff64 <rb_strdup>
   20060:	mov	r2, r0
   20064:	ldr	r3, [fp, #-8]
   20068:	str	r2, [r3, #20]
   2006c:	ldr	r3, [fp, #-8]
   20070:	add	r3, r3, #28
   20074:	ldr	r2, [pc, #36]	; 200a0 <rb_dictionary_create+0x78>
   20078:	add	r2, pc, r2
   2007c:	mov	r1, r3
   20080:	ldr	r0, [fp, #-8]
   20084:	bl	1fd90 <rb_dlinkAdd>
   20088:	ldr	r3, [fp, #-8]
   2008c:	mov	r0, r3
   20090:	sub	sp, fp, #4
   20094:	ldr	fp, [sp]
   20098:	add	sp, sp, #4
   2009c:	pop	{pc}		; (ldr pc, [sp], #4)
   200a0:	.word	0x00033384

000200a4 <rb_dictionary_set_comparator_func>:
   200a4:	push	{fp}		; (str fp, [sp, #-4]!)
   200a8:	add	fp, sp, #0
   200ac:	sub	sp, sp, #12
   200b0:	str	r0, [fp, #-8]
   200b4:	str	r1, [fp, #-12]
   200b8:	ldr	r3, [fp, #-8]
   200bc:	ldr	r2, [fp, #-12]
   200c0:	str	r2, [r3]
   200c4:	nop	{0}
   200c8:	add	sp, fp, #0
   200cc:	pop	{fp}		; (ldr fp, [sp], #4)
   200d0:	bx	lr

000200d4 <rb_dictionary_get_comparator_func>:
   200d4:	push	{fp}		; (str fp, [sp, #-4]!)
   200d8:	add	fp, sp, #0
   200dc:	sub	sp, sp, #12
   200e0:	str	r0, [fp, #-8]
   200e4:	ldr	r3, [fp, #-8]
   200e8:	ldr	r3, [r3]
   200ec:	mov	r0, r3
   200f0:	add	sp, fp, #0
   200f4:	pop	{fp}		; (ldr fp, [sp], #4)
   200f8:	bx	lr

000200fc <rb_dictionary_get_linear_index>:
   200fc:	str	fp, [sp, #-8]!
   20100:	str	lr, [sp, #4]
   20104:	add	fp, sp, #4
   20108:	sub	sp, sp, #24
   2010c:	str	r0, [fp, #-24]	; 0xffffffe8
   20110:	str	r1, [fp, #-28]	; 0xffffffe4
   20114:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20118:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2011c:	bl	4a50 <rb_dictionary_find@plt>
   20120:	str	r0, [fp, #-16]
   20124:	ldr	r3, [fp, #-16]
   20128:	cmp	r3, #0
   2012c:	bne	20138 <rb_dictionary_get_linear_index+0x3c>
   20130:	mvn	r3, #0
   20134:	b	201bc <rb_dictionary_get_linear_index+0xc0>
   20138:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2013c:	ldrb	r3, [r3, #24]
   20140:	and	r3, r3, #1
   20144:	uxtb	r3, r3
   20148:	cmp	r3, #0
   2014c:	bne	2015c <rb_dictionary_get_linear_index+0x60>
   20150:	ldr	r3, [fp, #-16]
   20154:	ldr	r3, [r3, #24]
   20158:	b	201bc <rb_dictionary_get_linear_index+0xc0>
   2015c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20160:	ldr	r3, [r3, #8]
   20164:	str	r3, [fp, #-8]
   20168:	mov	r3, #0
   2016c:	str	r3, [fp, #-12]
   20170:	b	20198 <rb_dictionary_get_linear_index+0x9c>
   20174:	ldr	r3, [fp, #-8]
   20178:	ldr	r2, [fp, #-12]
   2017c:	str	r2, [r3, #24]
   20180:	ldr	r3, [fp, #-8]
   20184:	ldr	r3, [r3, #12]
   20188:	str	r3, [fp, #-8]
   2018c:	ldr	r3, [fp, #-12]
   20190:	add	r3, r3, #1
   20194:	str	r3, [fp, #-12]
   20198:	ldr	r3, [fp, #-8]
   2019c:	cmp	r3, #0
   201a0:	bne	20174 <rb_dictionary_get_linear_index+0x78>
   201a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   201a8:	ldrb	r3, [r2, #24]
   201ac:	bfc	r3, #0, #1
   201b0:	strb	r3, [r2, #24]
   201b4:	ldr	r3, [fp, #-16]
   201b8:	ldr	r3, [r3, #24]
   201bc:	mov	r0, r3
   201c0:	sub	sp, fp, #4
   201c4:	ldr	fp, [sp]
   201c8:	add	sp, sp, #4
   201cc:	pop	{pc}		; (ldr pc, [sp], #4)

000201d0 <rb_dictionary_retune>:
   201d0:	str	fp, [sp, #-8]!
   201d4:	str	lr, [sp, #4]
   201d8:	add	fp, sp, #4
   201dc:	sub	sp, sp, #56	; 0x38
   201e0:	str	r0, [fp, #-56]	; 0xffffffc8
   201e4:	str	r1, [fp, #-60]	; 0xffffffc4
   201e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   201ec:	ldr	r3, [r3, #4]
   201f0:	cmp	r3, #0
   201f4:	beq	20410 <rb_dictionary_retune+0x240>
   201f8:	mov	r3, #0
   201fc:	str	r3, [fp, #-48]	; 0xffffffd0
   20200:	ldr	r3, [fp, #-48]	; 0xffffffd0
   20204:	str	r3, [fp, #-52]	; 0xffffffcc
   20208:	sub	r3, fp, #52	; 0x34
   2020c:	str	r3, [fp, #-12]
   20210:	ldr	r3, [fp, #-12]
   20214:	str	r3, [fp, #-8]
   20218:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2021c:	ldr	r3, [r3, #4]
   20220:	str	r3, [fp, #-16]
   20224:	ldr	r3, [fp, #-56]	; 0xffffffc8
   20228:	ldr	r3, [r3]
   2022c:	ldr	r2, [fp, #-16]
   20230:	ldr	r2, [r2, #20]
   20234:	mov	r1, r2
   20238:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2023c:	blx	r3
   20240:	str	r0, [fp, #-20]	; 0xffffffec
   20244:	ldr	r3, [fp, #-20]	; 0xffffffec
   20248:	cmp	r3, #0
   2024c:	beq	203a4 <rb_dictionary_retune+0x1d4>
   20250:	ldr	r3, [fp, #-20]	; 0xffffffec
   20254:	cmp	r3, #0
   20258:	bge	20300 <rb_dictionary_retune+0x130>
   2025c:	ldr	r3, [fp, #-16]
   20260:	ldr	r3, [r3]
   20264:	cmp	r3, #0
   20268:	beq	203ac <rb_dictionary_retune+0x1dc>
   2026c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   20270:	ldr	r3, [r3]
   20274:	ldr	r2, [fp, #-16]
   20278:	ldr	r2, [r2]
   2027c:	ldr	r2, [r2, #20]
   20280:	mov	r1, r2
   20284:	ldr	r0, [fp, #-60]	; 0xffffffc4
   20288:	blx	r3
   2028c:	str	r0, [fp, #-20]	; 0xffffffec
   20290:	ldr	r3, [fp, #-20]	; 0xffffffec
   20294:	cmp	r3, #0
   20298:	bge	202dc <rb_dictionary_retune+0x10c>
   2029c:	ldr	r3, [fp, #-16]
   202a0:	ldr	r3, [r3]
   202a4:	str	r3, [fp, #-24]	; 0xffffffe8
   202a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   202ac:	ldr	r2, [r3, #4]
   202b0:	ldr	r3, [fp, #-16]
   202b4:	str	r2, [r3]
   202b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   202bc:	ldr	r2, [fp, #-16]
   202c0:	str	r2, [r3, #4]
   202c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   202c8:	str	r3, [fp, #-16]
   202cc:	ldr	r3, [fp, #-16]
   202d0:	ldr	r3, [r3]
   202d4:	cmp	r3, #0
   202d8:	beq	203b4 <rb_dictionary_retune+0x1e4>
   202dc:	ldr	r3, [fp, #-12]
   202e0:	ldr	r2, [fp, #-16]
   202e4:	str	r2, [r3]
   202e8:	ldr	r3, [fp, #-16]
   202ec:	str	r3, [fp, #-12]
   202f0:	ldr	r3, [fp, #-16]
   202f4:	ldr	r3, [r3]
   202f8:	str	r3, [fp, #-16]
   202fc:	b	20224 <rb_dictionary_retune+0x54>
   20300:	ldr	r3, [fp, #-16]
   20304:	ldr	r3, [r3, #4]
   20308:	cmp	r3, #0
   2030c:	beq	203bc <rb_dictionary_retune+0x1ec>
   20310:	ldr	r3, [fp, #-56]	; 0xffffffc8
   20314:	ldr	r3, [r3]
   20318:	ldr	r2, [fp, #-16]
   2031c:	ldr	r2, [r2, #4]
   20320:	ldr	r2, [r2, #20]
   20324:	mov	r1, r2
   20328:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2032c:	blx	r3
   20330:	str	r0, [fp, #-20]	; 0xffffffec
   20334:	ldr	r3, [fp, #-20]	; 0xffffffec
   20338:	cmp	r3, #0
   2033c:	ble	20380 <rb_dictionary_retune+0x1b0>
   20340:	ldr	r3, [fp, #-16]
   20344:	ldr	r3, [r3, #4]
   20348:	str	r3, [fp, #-24]	; 0xffffffe8
   2034c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20350:	ldr	r2, [r3]
   20354:	ldr	r3, [fp, #-16]
   20358:	str	r2, [r3, #4]
   2035c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20360:	ldr	r2, [fp, #-16]
   20364:	str	r2, [r3]
   20368:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2036c:	str	r3, [fp, #-16]
   20370:	ldr	r3, [fp, #-16]
   20374:	ldr	r3, [r3, #4]
   20378:	cmp	r3, #0
   2037c:	beq	203c4 <rb_dictionary_retune+0x1f4>
   20380:	ldr	r3, [fp, #-8]
   20384:	ldr	r2, [fp, #-16]
   20388:	str	r2, [r3, #4]
   2038c:	ldr	r3, [fp, #-16]
   20390:	str	r3, [fp, #-8]
   20394:	ldr	r3, [fp, #-16]
   20398:	ldr	r3, [r3, #4]
   2039c:	str	r3, [fp, #-16]
   203a0:	b	20224 <rb_dictionary_retune+0x54>
   203a4:	nop	{0}
   203a8:	b	203c8 <rb_dictionary_retune+0x1f8>
   203ac:	nop	{0}
   203b0:	b	203c8 <rb_dictionary_retune+0x1f8>
   203b4:	nop	{0}
   203b8:	b	203c8 <rb_dictionary_retune+0x1f8>
   203bc:	nop	{0}
   203c0:	b	203c8 <rb_dictionary_retune+0x1f8>
   203c4:	nop	{0}
   203c8:	ldr	r3, [fp, #-16]
   203cc:	ldr	r2, [r3]
   203d0:	ldr	r3, [fp, #-8]
   203d4:	str	r2, [r3, #4]
   203d8:	ldr	r3, [fp, #-16]
   203dc:	ldr	r2, [r3, #4]
   203e0:	ldr	r3, [fp, #-12]
   203e4:	str	r2, [r3]
   203e8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   203ec:	ldr	r3, [fp, #-16]
   203f0:	str	r2, [r3]
   203f4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   203f8:	ldr	r3, [fp, #-16]
   203fc:	str	r2, [r3, #4]
   20400:	ldr	r3, [fp, #-56]	; 0xffffffc8
   20404:	ldr	r2, [fp, #-16]
   20408:	str	r2, [r3, #4]
   2040c:	b	20414 <rb_dictionary_retune+0x244>
   20410:	nop	{0}
   20414:	sub	sp, fp, #4
   20418:	ldr	fp, [sp]
   2041c:	add	sp, sp, #4
   20420:	pop	{pc}		; (ldr pc, [sp], #4)

00020424 <rb_dictionary_link>:
   20424:	str	fp, [sp, #-8]!
   20428:	str	lr, [sp, #4]
   2042c:	add	fp, sp, #4
   20430:	sub	sp, sp, #16
   20434:	str	r0, [fp, #-16]
   20438:	str	r1, [fp, #-20]	; 0xffffffec
   2043c:	ldr	r2, [fp, #-16]
   20440:	ldrb	r3, [r2, #24]
   20444:	orr	r3, r3, #1
   20448:	strb	r3, [r2, #24]
   2044c:	ldr	r3, [fp, #-16]
   20450:	ldr	r3, [r3, #16]
   20454:	add	r2, r3, #1
   20458:	ldr	r3, [fp, #-16]
   2045c:	str	r2, [r3, #16]
   20460:	ldr	r3, [fp, #-16]
   20464:	ldr	r3, [r3, #4]
   20468:	cmp	r3, #0
   2046c:	bne	204d8 <rb_dictionary_link+0xb4>
   20470:	ldr	r3, [fp, #-20]	; 0xffffffec
   20474:	mov	r2, #0
   20478:	str	r2, [r3, #4]
   2047c:	ldr	r3, [fp, #-20]	; 0xffffffec
   20480:	ldr	r2, [r3, #4]
   20484:	ldr	r3, [fp, #-20]	; 0xffffffec
   20488:	str	r2, [r3]
   2048c:	ldr	r3, [fp, #-20]	; 0xffffffec
   20490:	mov	r2, #0
   20494:	str	r2, [r3, #8]
   20498:	ldr	r3, [fp, #-20]	; 0xffffffec
   2049c:	ldr	r2, [r3, #8]
   204a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   204a4:	str	r2, [r3, #12]
   204a8:	ldr	r3, [fp, #-16]
   204ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   204b0:	str	r2, [r3, #4]
   204b4:	ldr	r3, [fp, #-16]
   204b8:	ldr	r2, [r3, #4]
   204bc:	ldr	r3, [fp, #-16]
   204c0:	str	r2, [r3, #12]
   204c4:	ldr	r3, [fp, #-16]
   204c8:	ldr	r2, [r3, #12]
   204cc:	ldr	r3, [fp, #-16]
   204d0:	str	r2, [r3, #8]
   204d4:	b	206dc <rb_dictionary_link+0x2b8>
   204d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   204dc:	ldr	r3, [r3, #20]
   204e0:	mov	r1, r3
   204e4:	ldr	r0, [fp, #-16]
   204e8:	bl	201d0 <rb_dictionary_retune>
   204ec:	ldr	r3, [fp, #-16]
   204f0:	ldr	r3, [r3]
   204f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   204f8:	ldr	r0, [r2, #20]
   204fc:	ldr	r2, [fp, #-16]
   20500:	ldr	r2, [r2, #4]
   20504:	ldr	r2, [r2, #20]
   20508:	mov	r1, r2
   2050c:	blx	r3
   20510:	str	r0, [fp, #-8]
   20514:	ldr	r3, [fp, #-8]
   20518:	cmp	r3, #0
   2051c:	bge	205d0 <rb_dictionary_link+0x1ac>
   20520:	ldr	r3, [fp, #-16]
   20524:	ldr	r3, [r3, #4]
   20528:	ldr	r2, [r3]
   2052c:	ldr	r3, [fp, #-20]	; 0xffffffec
   20530:	str	r2, [r3]
   20534:	ldr	r3, [fp, #-16]
   20538:	ldr	r2, [r3, #4]
   2053c:	ldr	r3, [fp, #-20]	; 0xffffffec
   20540:	str	r2, [r3, #4]
   20544:	ldr	r3, [fp, #-16]
   20548:	ldr	r3, [r3, #4]
   2054c:	mov	r2, #0
   20550:	str	r2, [r3]
   20554:	ldr	r3, [fp, #-16]
   20558:	ldr	r3, [r3, #4]
   2055c:	ldr	r3, [r3, #8]
   20560:	cmp	r3, #0
   20564:	beq	20580 <rb_dictionary_link+0x15c>
   20568:	ldr	r3, [fp, #-16]
   2056c:	ldr	r3, [r3, #4]
   20570:	ldr	r3, [r3, #8]
   20574:	ldr	r2, [fp, #-20]	; 0xffffffec
   20578:	str	r2, [r3, #12]
   2057c:	b	2058c <rb_dictionary_link+0x168>
   20580:	ldr	r3, [fp, #-16]
   20584:	ldr	r2, [fp, #-20]	; 0xffffffec
   20588:	str	r2, [r3, #8]
   2058c:	ldr	r3, [fp, #-16]
   20590:	ldr	r3, [r3, #4]
   20594:	ldr	r2, [r3, #8]
   20598:	ldr	r3, [fp, #-20]	; 0xffffffec
   2059c:	str	r2, [r3, #8]
   205a0:	ldr	r3, [fp, #-16]
   205a4:	ldr	r2, [r3, #4]
   205a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   205ac:	str	r2, [r3, #12]
   205b0:	ldr	r3, [fp, #-16]
   205b4:	ldr	r3, [r3, #4]
   205b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   205bc:	str	r2, [r3, #8]
   205c0:	ldr	r3, [fp, #-16]
   205c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   205c8:	str	r2, [r3, #4]
   205cc:	b	206dc <rb_dictionary_link+0x2b8>
   205d0:	ldr	r3, [fp, #-8]
   205d4:	cmp	r3, #0
   205d8:	ble	2068c <rb_dictionary_link+0x268>
   205dc:	ldr	r3, [fp, #-16]
   205e0:	ldr	r3, [r3, #4]
   205e4:	ldr	r2, [r3, #4]
   205e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   205ec:	str	r2, [r3, #4]
   205f0:	ldr	r3, [fp, #-16]
   205f4:	ldr	r2, [r3, #4]
   205f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   205fc:	str	r2, [r3]
   20600:	ldr	r3, [fp, #-16]
   20604:	ldr	r3, [r3, #4]
   20608:	mov	r2, #0
   2060c:	str	r2, [r3, #4]
   20610:	ldr	r3, [fp, #-16]
   20614:	ldr	r3, [r3, #4]
   20618:	ldr	r3, [r3, #12]
   2061c:	cmp	r3, #0
   20620:	beq	2063c <rb_dictionary_link+0x218>
   20624:	ldr	r3, [fp, #-16]
   20628:	ldr	r3, [r3, #4]
   2062c:	ldr	r3, [r3, #12]
   20630:	ldr	r2, [fp, #-20]	; 0xffffffec
   20634:	str	r2, [r3, #8]
   20638:	b	20648 <rb_dictionary_link+0x224>
   2063c:	ldr	r3, [fp, #-16]
   20640:	ldr	r2, [fp, #-20]	; 0xffffffec
   20644:	str	r2, [r3, #12]
   20648:	ldr	r3, [fp, #-16]
   2064c:	ldr	r3, [r3, #4]
   20650:	ldr	r2, [r3, #12]
   20654:	ldr	r3, [fp, #-20]	; 0xffffffec
   20658:	str	r2, [r3, #12]
   2065c:	ldr	r3, [fp, #-16]
   20660:	ldr	r2, [r3, #4]
   20664:	ldr	r3, [fp, #-20]	; 0xffffffec
   20668:	str	r2, [r3, #8]
   2066c:	ldr	r3, [fp, #-16]
   20670:	ldr	r3, [r3, #4]
   20674:	ldr	r2, [fp, #-20]	; 0xffffffec
   20678:	str	r2, [r3, #12]
   2067c:	ldr	r3, [fp, #-16]
   20680:	ldr	r2, [fp, #-20]	; 0xffffffec
   20684:	str	r2, [r3, #4]
   20688:	b	206dc <rb_dictionary_link+0x2b8>
   2068c:	ldr	r3, [fp, #-16]
   20690:	ldr	r3, [r3, #4]
   20694:	ldr	r2, [fp, #-20]	; 0xffffffec
   20698:	ldr	r2, [r2, #20]
   2069c:	str	r2, [r3, #20]
   206a0:	ldr	r3, [fp, #-16]
   206a4:	ldr	r3, [r3, #4]
   206a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   206ac:	ldr	r2, [r2, #16]
   206b0:	str	r2, [r3, #16]
   206b4:	ldr	r3, [fp, #-16]
   206b8:	ldr	r3, [r3, #16]
   206bc:	sub	r2, r3, #1
   206c0:	ldr	r3, [fp, #-16]
   206c4:	str	r2, [r3, #16]
   206c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   206cc:	bl	1ffdc <rb_free>
   206d0:	ldr	r3, [fp, #-16]
   206d4:	ldr	r3, [r3, #4]
   206d8:	str	r3, [fp, #-20]	; 0xffffffec
   206dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   206e0:	mov	r0, r3
   206e4:	sub	sp, fp, #4
   206e8:	ldr	fp, [sp]
   206ec:	add	sp, sp, #4
   206f0:	pop	{pc}		; (ldr pc, [sp], #4)

000206f4 <rb_dictionary_unlink_root>:
   206f4:	push	{fp}		; (str fp, [sp, #-4]!)
   206f8:	add	fp, sp, #0
   206fc:	sub	sp, sp, #28
   20700:	str	r0, [fp, #-24]	; 0xffffffe8
   20704:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20708:	ldrb	r3, [r2, #24]
   2070c:	orr	r3, r3, #1
   20710:	strb	r3, [r2, #24]
   20714:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20718:	ldr	r3, [r3, #4]
   2071c:	str	r3, [fp, #-12]
   20720:	ldr	r3, [fp, #-12]
   20724:	cmp	r3, #0
   20728:	beq	208f4 <rb_dictionary_unlink_root+0x200>
   2072c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20730:	ldr	r3, [r3, #4]
   20734:	ldr	r3, [r3]
   20738:	cmp	r3, #0
   2073c:	bne	20758 <rb_dictionary_unlink_root+0x64>
   20740:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20744:	ldr	r3, [r3, #4]
   20748:	ldr	r2, [r3, #4]
   2074c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20750:	str	r2, [r3, #4]
   20754:	b	2084c <rb_dictionary_unlink_root+0x158>
   20758:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2075c:	ldr	r3, [r3, #4]
   20760:	ldr	r3, [r3, #4]
   20764:	cmp	r3, #0
   20768:	bne	20784 <rb_dictionary_unlink_root+0x90>
   2076c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20770:	ldr	r3, [r3, #4]
   20774:	ldr	r2, [r3]
   20778:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2077c:	str	r2, [r3, #4]
   20780:	b	2084c <rb_dictionary_unlink_root+0x158>
   20784:	ldr	r3, [fp, #-12]
   20788:	ldr	r3, [r3, #12]
   2078c:	str	r3, [fp, #-16]
   20790:	ldr	r3, [fp, #-12]
   20794:	ldr	r3, [r3, #4]
   20798:	ldr	r2, [fp, #-16]
   2079c:	cmp	r2, r3
   207a0:	bne	207c8 <rb_dictionary_unlink_root+0xd4>
   207a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   207a8:	ldr	r2, [fp, #-16]
   207ac:	str	r2, [r3, #4]
   207b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   207b4:	ldr	r3, [r3, #4]
   207b8:	ldr	r2, [fp, #-12]
   207bc:	ldr	r2, [r2]
   207c0:	str	r2, [r3]
   207c4:	b	2084c <rb_dictionary_unlink_root+0x158>
   207c8:	ldr	r3, [fp, #-12]
   207cc:	ldr	r3, [r3, #4]
   207d0:	str	r3, [fp, #-8]
   207d4:	b	207e4 <rb_dictionary_unlink_root+0xf0>
   207d8:	ldr	r3, [fp, #-8]
   207dc:	ldr	r3, [r3]
   207e0:	str	r3, [fp, #-8]
   207e4:	ldr	r3, [fp, #-8]
   207e8:	ldr	r3, [r3]
   207ec:	cmp	r3, #0
   207f0:	beq	20808 <rb_dictionary_unlink_root+0x114>
   207f4:	ldr	r3, [fp, #-8]
   207f8:	ldr	r3, [r3]
   207fc:	ldr	r2, [fp, #-16]
   20800:	cmp	r2, r3
   20804:	bne	207d8 <rb_dictionary_unlink_root+0xe4>
   20808:	ldr	r3, [fp, #-16]
   2080c:	ldr	r2, [r3, #4]
   20810:	ldr	r3, [fp, #-8]
   20814:	str	r2, [r3]
   20818:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2081c:	ldr	r2, [fp, #-16]
   20820:	str	r2, [r3, #4]
   20824:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20828:	ldr	r3, [r3, #4]
   2082c:	ldr	r2, [fp, #-12]
   20830:	ldr	r2, [r2]
   20834:	str	r2, [r3]
   20838:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2083c:	ldr	r3, [r3, #4]
   20840:	ldr	r2, [fp, #-12]
   20844:	ldr	r2, [r2, #4]
   20848:	str	r2, [r3, #4]
   2084c:	ldr	r3, [fp, #-12]
   20850:	ldr	r3, [r3, #8]
   20854:	cmp	r3, #0
   20858:	beq	20870 <rb_dictionary_unlink_root+0x17c>
   2085c:	ldr	r3, [fp, #-12]
   20860:	ldr	r3, [r3, #8]
   20864:	ldr	r2, [fp, #-12]
   20868:	ldr	r2, [r2, #12]
   2086c:	str	r2, [r3, #12]
   20870:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20874:	ldr	r3, [r3, #8]
   20878:	ldr	r2, [fp, #-12]
   2087c:	cmp	r2, r3
   20880:	bne	20894 <rb_dictionary_unlink_root+0x1a0>
   20884:	ldr	r3, [fp, #-12]
   20888:	ldr	r2, [r3, #12]
   2088c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20890:	str	r2, [r3, #8]
   20894:	ldr	r3, [fp, #-12]
   20898:	ldr	r3, [r3, #12]
   2089c:	cmp	r3, #0
   208a0:	beq	208b8 <rb_dictionary_unlink_root+0x1c4>
   208a4:	ldr	r3, [fp, #-12]
   208a8:	ldr	r3, [r3, #12]
   208ac:	ldr	r2, [fp, #-12]
   208b0:	ldr	r2, [r2, #8]
   208b4:	str	r2, [r3, #8]
   208b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   208bc:	ldr	r3, [r3, #12]
   208c0:	ldr	r2, [fp, #-12]
   208c4:	cmp	r2, r3
   208c8:	bne	208dc <rb_dictionary_unlink_root+0x1e8>
   208cc:	ldr	r3, [fp, #-12]
   208d0:	ldr	r2, [r3, #8]
   208d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   208d8:	str	r2, [r3, #12]
   208dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   208e0:	ldr	r3, [r3, #16]
   208e4:	sub	r2, r3, #1
   208e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   208ec:	str	r2, [r3, #16]
   208f0:	b	208f8 <rb_dictionary_unlink_root+0x204>
   208f4:	nop	{0}
   208f8:	add	sp, fp, #0
   208fc:	pop	{fp}		; (ldr fp, [sp], #4)
   20900:	bx	lr

00020904 <rb_dictionary_destroy>:
   20904:	str	fp, [sp, #-8]!
   20908:	str	lr, [sp, #4]
   2090c:	add	fp, sp, #4
   20910:	sub	sp, sp, #24
   20914:	str	r0, [fp, #-16]
   20918:	str	r1, [fp, #-20]	; 0xffffffec
   2091c:	str	r2, [fp, #-24]	; 0xffffffe8
   20920:	ldr	r3, [fp, #-16]
   20924:	ldr	r3, [r3, #8]
   20928:	str	r3, [fp, #-8]
   2092c:	ldr	r3, [fp, #-8]
   20930:	cmp	r3, #0
   20934:	beq	20944 <rb_dictionary_destroy+0x40>
   20938:	ldr	r3, [fp, #-8]
   2093c:	ldr	r3, [r3, #12]
   20940:	b	20948 <rb_dictionary_destroy+0x44>
   20944:	mov	r3, #0
   20948:	str	r3, [fp, #-12]
   2094c:	b	2099c <rb_dictionary_destroy+0x98>
   20950:	ldr	r3, [fp, #-20]	; 0xffffffec
   20954:	cmp	r3, #0
   20958:	beq	2096c <rb_dictionary_destroy+0x68>
   2095c:	ldr	r3, [fp, #-20]	; 0xffffffec
   20960:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20964:	ldr	r0, [fp, #-8]
   20968:	blx	r3
   2096c:	ldr	r0, [fp, #-8]
   20970:	bl	1ffdc <rb_free>
   20974:	ldr	r3, [fp, #-12]
   20978:	str	r3, [fp, #-8]
   2097c:	ldr	r3, [fp, #-8]
   20980:	cmp	r3, #0
   20984:	beq	20994 <rb_dictionary_destroy+0x90>
   20988:	ldr	r3, [fp, #-8]
   2098c:	ldr	r3, [r3, #12]
   20990:	b	20998 <rb_dictionary_destroy+0x94>
   20994:	mov	r3, #0
   20998:	str	r3, [fp, #-12]
   2099c:	ldr	r3, [fp, #-8]
   209a0:	cmp	r3, #0
   209a4:	bne	20950 <rb_dictionary_destroy+0x4c>
   209a8:	ldr	r3, [fp, #-16]
   209ac:	add	r3, r3, #28
   209b0:	ldr	r2, [pc, #56]	; 209f0 <rb_dictionary_destroy+0xec>
   209b4:	add	r2, pc, r2
   209b8:	mov	r1, r2
   209bc:	mov	r0, r3
   209c0:	bl	1fe40 <rb_dlinkDelete>
   209c4:	ldr	r3, [fp, #-16]
   209c8:	ldr	r3, [r3, #20]
   209cc:	mov	r0, r3
   209d0:	bl	1ffdc <rb_free>
   209d4:	ldr	r0, [fp, #-16]
   209d8:	bl	1ffdc <rb_free>
   209dc:	nop	{0}
   209e0:	sub	sp, fp, #4
   209e4:	ldr	fp, [sp]
   209e8:	add	sp, sp, #4
   209ec:	pop	{pc}		; (ldr pc, [sp], #4)
   209f0:	.word	0x00032a48

000209f4 <rb_dictionary_foreach>:
   209f4:	str	fp, [sp, #-8]!
   209f8:	str	lr, [sp, #4]
   209fc:	add	fp, sp, #4
   20a00:	sub	sp, sp, #32
   20a04:	str	r0, [fp, #-24]	; 0xffffffe8
   20a08:	str	r1, [fp, #-28]	; 0xffffffe4
   20a0c:	str	r2, [fp, #-32]	; 0xffffffe0
   20a10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20a14:	ldr	r3, [r3, #8]
   20a18:	str	r3, [fp, #-8]
   20a1c:	ldr	r3, [fp, #-8]
   20a20:	cmp	r3, #0
   20a24:	beq	20a34 <rb_dictionary_foreach+0x40>
   20a28:	ldr	r3, [fp, #-8]
   20a2c:	ldr	r3, [r3, #12]
   20a30:	b	20a38 <rb_dictionary_foreach+0x44>
   20a34:	mov	r3, #0
   20a38:	str	r3, [fp, #-12]
   20a3c:	b	20a8c <rb_dictionary_foreach+0x98>
   20a40:	ldr	r3, [fp, #-8]
   20a44:	str	r3, [fp, #-16]
   20a48:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20a4c:	cmp	r3, #0
   20a50:	beq	20a64 <rb_dictionary_foreach+0x70>
   20a54:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20a58:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20a5c:	ldr	r0, [fp, #-16]
   20a60:	blx	r3
   20a64:	ldr	r3, [fp, #-12]
   20a68:	str	r3, [fp, #-8]
   20a6c:	ldr	r3, [fp, #-8]
   20a70:	cmp	r3, #0
   20a74:	beq	20a84 <rb_dictionary_foreach+0x90>
   20a78:	ldr	r3, [fp, #-8]
   20a7c:	ldr	r3, [r3, #12]
   20a80:	b	20a88 <rb_dictionary_foreach+0x94>
   20a84:	mov	r3, #0
   20a88:	str	r3, [fp, #-12]
   20a8c:	ldr	r3, [fp, #-8]
   20a90:	cmp	r3, #0
   20a94:	bne	20a40 <rb_dictionary_foreach+0x4c>
   20a98:	nop	{0}
   20a9c:	sub	sp, fp, #4
   20aa0:	ldr	fp, [sp]
   20aa4:	add	sp, sp, #4
   20aa8:	pop	{pc}		; (ldr pc, [sp], #4)

00020aac <rb_dictionary_search>:
   20aac:	str	fp, [sp, #-8]!
   20ab0:	str	lr, [sp, #4]
   20ab4:	add	fp, sp, #4
   20ab8:	sub	sp, sp, #32
   20abc:	str	r0, [fp, #-24]	; 0xffffffe8
   20ac0:	str	r1, [fp, #-28]	; 0xffffffe4
   20ac4:	str	r2, [fp, #-32]	; 0xffffffe0
   20ac8:	mov	r3, #0
   20acc:	str	r3, [fp, #-16]
   20ad0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20ad4:	ldr	r3, [r3, #8]
   20ad8:	str	r3, [fp, #-8]
   20adc:	ldr	r3, [fp, #-8]
   20ae0:	cmp	r3, #0
   20ae4:	beq	20af4 <rb_dictionary_search+0x48>
   20ae8:	ldr	r3, [fp, #-8]
   20aec:	ldr	r3, [r3, #12]
   20af0:	b	20af8 <rb_dictionary_search+0x4c>
   20af4:	mov	r3, #0
   20af8:	str	r3, [fp, #-12]
   20afc:	b	20b5c <rb_dictionary_search+0xb0>
   20b00:	ldr	r3, [fp, #-8]
   20b04:	str	r3, [fp, #-20]	; 0xffffffec
   20b08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20b0c:	cmp	r3, #0
   20b10:	beq	20b28 <rb_dictionary_search+0x7c>
   20b14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20b18:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20b1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   20b20:	blx	r3
   20b24:	str	r0, [fp, #-16]
   20b28:	ldr	r3, [fp, #-16]
   20b2c:	cmp	r3, #0
   20b30:	bne	20b6c <rb_dictionary_search+0xc0>
   20b34:	ldr	r3, [fp, #-12]
   20b38:	str	r3, [fp, #-8]
   20b3c:	ldr	r3, [fp, #-8]
   20b40:	cmp	r3, #0
   20b44:	beq	20b54 <rb_dictionary_search+0xa8>
   20b48:	ldr	r3, [fp, #-8]
   20b4c:	ldr	r3, [r3, #12]
   20b50:	b	20b58 <rb_dictionary_search+0xac>
   20b54:	mov	r3, #0
   20b58:	str	r3, [fp, #-12]
   20b5c:	ldr	r3, [fp, #-8]
   20b60:	cmp	r3, #0
   20b64:	bne	20b00 <rb_dictionary_search+0x54>
   20b68:	b	20b70 <rb_dictionary_search+0xc4>
   20b6c:	nop	{0}
   20b70:	ldr	r3, [fp, #-16]
   20b74:	mov	r0, r3
   20b78:	sub	sp, fp, #4
   20b7c:	ldr	fp, [sp]
   20b80:	add	sp, sp, #4
   20b84:	pop	{pc}		; (ldr pc, [sp], #4)

00020b88 <rb_dictionary_foreach_start>:
   20b88:	str	fp, [sp, #-8]!
   20b8c:	str	lr, [sp, #4]
   20b90:	add	fp, sp, #4
   20b94:	sub	sp, sp, #8
   20b98:	str	r0, [fp, #-8]
   20b9c:	str	r1, [fp, #-12]
   20ba0:	ldr	r3, [fp, #-12]
   20ba4:	mov	r2, #0
   20ba8:	str	r2, [r3]
   20bac:	ldr	r3, [fp, #-12]
   20bb0:	mov	r2, #0
   20bb4:	str	r2, [r3, #4]
   20bb8:	ldr	r3, [fp, #-8]
   20bbc:	ldr	r2, [r3, #8]
   20bc0:	ldr	r3, [fp, #-12]
   20bc4:	str	r2, [r3]
   20bc8:	ldr	r3, [fp, #-12]
   20bcc:	ldr	r3, [r3]
   20bd0:	cmp	r3, #0
   20bd4:	beq	20bf8 <rb_dictionary_foreach_start+0x70>
   20bd8:	ldr	r3, [fp, #-12]
   20bdc:	ldr	r2, [r3]
   20be0:	ldr	r3, [fp, #-12]
   20be4:	str	r2, [r3, #4]
   20be8:	ldr	r1, [fp, #-12]
   20bec:	ldr	r0, [fp, #-8]
   20bf0:	bl	4708 <rb_dictionary_foreach_next@plt>
   20bf4:	b	20bfc <rb_dictionary_foreach_start+0x74>
   20bf8:	nop	{0}
   20bfc:	sub	sp, fp, #4
   20c00:	ldr	fp, [sp]
   20c04:	add	sp, sp, #4
   20c08:	pop	{pc}		; (ldr pc, [sp], #4)

00020c0c <rb_dictionary_foreach_cur>:
   20c0c:	push	{fp}		; (str fp, [sp, #-4]!)
   20c10:	add	fp, sp, #0
   20c14:	sub	sp, sp, #12
   20c18:	str	r0, [fp, #-8]
   20c1c:	str	r1, [fp, #-12]
   20c20:	ldr	r3, [fp, #-12]
   20c24:	ldr	r3, [r3]
   20c28:	cmp	r3, #0
   20c2c:	beq	20c40 <rb_dictionary_foreach_cur+0x34>
   20c30:	ldr	r3, [fp, #-12]
   20c34:	ldr	r3, [r3]
   20c38:	ldr	r3, [r3, #16]
   20c3c:	b	20c44 <rb_dictionary_foreach_cur+0x38>
   20c40:	mov	r3, #0
   20c44:	mov	r0, r3
   20c48:	add	sp, fp, #0
   20c4c:	pop	{fp}		; (ldr fp, [sp], #4)
   20c50:	bx	lr

00020c54 <rb_dictionary_foreach_next>:
   20c54:	str	fp, [sp, #-8]!
   20c58:	str	lr, [sp, #4]
   20c5c:	add	fp, sp, #4
   20c60:	sub	sp, sp, #8
   20c64:	str	r0, [fp, #-8]
   20c68:	str	r1, [fp, #-12]
   20c6c:	ldr	r3, [fp, #-12]
   20c70:	ldr	r3, [r3]
   20c74:	cmp	r3, #0
   20c78:	bne	20c94 <rb_dictionary_foreach_next+0x40>
   20c7c:	ldr	r1, [fp, #-8]
   20c80:	ldr	r3, [pc, #88]	; 20ce0 <rb_dictionary_foreach_next+0x8c>
   20c84:	add	r3, pc, r3
   20c88:	mov	r0, r3
   20c8c:	bl	493c <rb_lib_log@plt>
   20c90:	b	20cd0 <rb_dictionary_foreach_next+0x7c>
   20c94:	ldr	r3, [fp, #-12]
   20c98:	ldr	r2, [r3, #4]
   20c9c:	ldr	r3, [fp, #-12]
   20ca0:	str	r2, [r3]
   20ca4:	ldr	r3, [fp, #-12]
   20ca8:	ldr	r3, [r3, #4]
   20cac:	cmp	r3, #0
   20cb0:	beq	20ccc <rb_dictionary_foreach_next+0x78>
   20cb4:	ldr	r3, [fp, #-12]
   20cb8:	ldr	r3, [r3, #4]
   20cbc:	ldr	r2, [r3, #12]
   20cc0:	ldr	r3, [fp, #-12]
   20cc4:	str	r2, [r3, #4]
   20cc8:	b	20cd0 <rb_dictionary_foreach_next+0x7c>
   20ccc:	nop	{0}
   20cd0:	sub	sp, fp, #4
   20cd4:	ldr	fp, [sp]
   20cd8:	add	sp, sp, #4
   20cdc:	pop	{pc}		; (ldr pc, [sp], #4)
   20ce0:	.word	0x00003d1c

00020ce4 <rb_dictionary_find>:
   20ce4:	str	fp, [sp, #-8]!
   20ce8:	str	lr, [sp, #4]
   20cec:	add	fp, sp, #4
   20cf0:	sub	sp, sp, #8
   20cf4:	str	r0, [fp, #-8]
   20cf8:	str	r1, [fp, #-12]
   20cfc:	ldr	r1, [fp, #-12]
   20d00:	ldr	r0, [fp, #-8]
   20d04:	bl	201d0 <rb_dictionary_retune>
   20d08:	ldr	r3, [fp, #-8]
   20d0c:	ldr	r3, [r3, #4]
   20d10:	cmp	r3, #0
   20d14:	beq	20d50 <rb_dictionary_find+0x6c>
   20d18:	ldr	r3, [fp, #-8]
   20d1c:	ldr	r3, [r3]
   20d20:	ldr	r2, [fp, #-8]
   20d24:	ldr	r2, [r2, #4]
   20d28:	ldr	r2, [r2, #20]
   20d2c:	mov	r1, r2
   20d30:	ldr	r0, [fp, #-12]
   20d34:	blx	r3
   20d38:	mov	r3, r0
   20d3c:	cmp	r3, #0
   20d40:	bne	20d50 <rb_dictionary_find+0x6c>
   20d44:	ldr	r3, [fp, #-8]
   20d48:	ldr	r3, [r3, #4]
   20d4c:	b	20d54 <rb_dictionary_find+0x70>
   20d50:	mov	r3, #0
   20d54:	mov	r0, r3
   20d58:	sub	sp, fp, #4
   20d5c:	ldr	fp, [sp]
   20d60:	add	sp, sp, #4
   20d64:	pop	{pc}		; (ldr pc, [sp], #4)

00020d68 <rb_dictionary_add>:
   20d68:	str	fp, [sp, #-8]!
   20d6c:	str	lr, [sp, #4]
   20d70:	add	fp, sp, #4
   20d74:	sub	sp, sp, #24
   20d78:	str	r0, [fp, #-16]
   20d7c:	str	r1, [fp, #-20]	; 0xffffffec
   20d80:	str	r2, [fp, #-24]	; 0xffffffe8
   20d84:	mov	r0, #28
   20d88:	bl	1ff04 <rb_malloc>
   20d8c:	str	r0, [fp, #-8]
   20d90:	ldr	r3, [fp, #-8]
   20d94:	ldr	r2, [fp, #-20]	; 0xffffffec
   20d98:	str	r2, [r3, #20]
   20d9c:	ldr	r3, [fp, #-8]
   20da0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20da4:	str	r2, [r3, #16]
   20da8:	ldr	r1, [fp, #-8]
   20dac:	ldr	r0, [fp, #-16]
   20db0:	bl	20424 <rb_dictionary_link>
   20db4:	mov	r3, r0
   20db8:	mov	r0, r3
   20dbc:	sub	sp, fp, #4
   20dc0:	ldr	fp, [sp]
   20dc4:	add	sp, sp, #4
   20dc8:	pop	{pc}		; (ldr pc, [sp], #4)

00020dcc <rb_dictionary_delete>:
   20dcc:	str	fp, [sp, #-8]!
   20dd0:	str	lr, [sp, #4]
   20dd4:	add	fp, sp, #4
   20dd8:	sub	sp, sp, #16
   20ddc:	str	r0, [fp, #-16]
   20de0:	str	r1, [fp, #-20]	; 0xffffffec
   20de4:	ldr	r1, [fp, #-20]	; 0xffffffec
   20de8:	ldr	r0, [fp, #-16]
   20dec:	bl	4a50 <rb_dictionary_find@plt>
   20df0:	str	r0, [fp, #-8]
   20df4:	ldr	r3, [fp, #-8]
   20df8:	cmp	r3, #0
   20dfc:	bne	20e08 <rb_dictionary_delete+0x3c>
   20e00:	mov	r3, #0
   20e04:	b	20e28 <rb_dictionary_delete+0x5c>
   20e08:	ldr	r3, [fp, #-8]
   20e0c:	ldr	r3, [r3, #16]
   20e10:	str	r3, [fp, #-12]
   20e14:	ldr	r0, [fp, #-16]
   20e18:	bl	206f4 <rb_dictionary_unlink_root>
   20e1c:	ldr	r0, [fp, #-8]
   20e20:	bl	1ffdc <rb_free>
   20e24:	ldr	r3, [fp, #-12]
   20e28:	mov	r0, r3
   20e2c:	sub	sp, fp, #4
   20e30:	ldr	fp, [sp]
   20e34:	add	sp, sp, #4
   20e38:	pop	{pc}		; (ldr pc, [sp], #4)

00020e3c <rb_dictionary_retrieve>:
   20e3c:	str	fp, [sp, #-8]!
   20e40:	str	lr, [sp, #4]
   20e44:	add	fp, sp, #4
   20e48:	sub	sp, sp, #16
   20e4c:	str	r0, [fp, #-16]
   20e50:	str	r1, [fp, #-20]	; 0xffffffec
   20e54:	ldr	r1, [fp, #-20]	; 0xffffffec
   20e58:	ldr	r0, [fp, #-16]
   20e5c:	bl	4a50 <rb_dictionary_find@plt>
   20e60:	str	r0, [fp, #-8]
   20e64:	ldr	r3, [fp, #-8]
   20e68:	cmp	r3, #0
   20e6c:	beq	20e7c <rb_dictionary_retrieve+0x40>
   20e70:	ldr	r3, [fp, #-8]
   20e74:	ldr	r3, [r3, #16]
   20e78:	b	20e80 <rb_dictionary_retrieve+0x44>
   20e7c:	mov	r3, #0
   20e80:	mov	r0, r3
   20e84:	sub	sp, fp, #4
   20e88:	ldr	fp, [sp]
   20e8c:	add	sp, sp, #4
   20e90:	pop	{pc}		; (ldr pc, [sp], #4)

00020e94 <rb_dictionary_size>:
   20e94:	push	{fp}		; (str fp, [sp, #-4]!)
   20e98:	add	fp, sp, #0
   20e9c:	sub	sp, sp, #12
   20ea0:	str	r0, [fp, #-8]
   20ea4:	ldr	r3, [fp, #-8]
   20ea8:	ldr	r3, [r3, #16]
   20eac:	mov	r0, r3
   20eb0:	add	sp, fp, #0
   20eb4:	pop	{fp}		; (ldr fp, [sp], #4)
   20eb8:	bx	lr

00020ebc <stats_recurse>:
   20ebc:	str	fp, [sp, #-8]!
   20ec0:	str	lr, [sp, #4]
   20ec4:	add	fp, sp, #4
   20ec8:	sub	sp, sp, #24
   20ecc:	str	r0, [fp, #-16]
   20ed0:	str	r1, [fp, #-20]	; 0xffffffec
   20ed4:	str	r2, [fp, #-24]	; 0xffffffe8
   20ed8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20edc:	ldr	r3, [r3]
   20ee0:	ldr	r2, [fp, #-20]	; 0xffffffec
   20ee4:	cmp	r2, r3
   20ee8:	ble	20ef8 <stats_recurse+0x3c>
   20eec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20ef0:	ldr	r2, [fp, #-20]	; 0xffffffec
   20ef4:	str	r2, [r3]
   20ef8:	ldr	r3, [fp, #-20]	; 0xffffffec
   20efc:	str	r3, [fp, #-8]
   20f00:	ldr	r3, [fp, #-16]
   20f04:	cmp	r3, #0
   20f08:	beq	20f48 <stats_recurse+0x8c>
   20f0c:	ldr	r3, [fp, #-16]
   20f10:	ldr	r3, [r3]
   20f14:	cmp	r3, #0
   20f18:	beq	20f48 <stats_recurse+0x8c>
   20f1c:	ldr	r3, [fp, #-16]
   20f20:	ldr	r0, [r3]
   20f24:	ldr	r3, [fp, #-20]	; 0xffffffec
   20f28:	add	r3, r3, #1
   20f2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20f30:	mov	r1, r3
   20f34:	bl	20ebc <stats_recurse>
   20f38:	mov	r2, r0
   20f3c:	ldr	r3, [fp, #-8]
   20f40:	add	r3, r3, r2
   20f44:	str	r3, [fp, #-8]
   20f48:	ldr	r3, [fp, #-16]
   20f4c:	cmp	r3, #0
   20f50:	beq	20f90 <stats_recurse+0xd4>
   20f54:	ldr	r3, [fp, #-16]
   20f58:	ldr	r3, [r3, #4]
   20f5c:	cmp	r3, #0
   20f60:	beq	20f90 <stats_recurse+0xd4>
   20f64:	ldr	r3, [fp, #-16]
   20f68:	ldr	r0, [r3, #4]
   20f6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   20f70:	add	r3, r3, #1
   20f74:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20f78:	mov	r1, r3
   20f7c:	bl	20ebc <stats_recurse>
   20f80:	mov	r2, r0
   20f84:	ldr	r3, [fp, #-8]
   20f88:	add	r3, r3, r2
   20f8c:	str	r3, [fp, #-8]
   20f90:	ldr	r3, [fp, #-8]
   20f94:	mov	r0, r3
   20f98:	sub	sp, fp, #4
   20f9c:	ldr	fp, [sp]
   20fa0:	add	sp, sp, #4
   20fa4:	pop	{pc}		; (ldr pc, [sp], #4)

00020fa8 <rb_dictionary_stats>:
   20fa8:	str	fp, [sp, #-8]!
   20fac:	str	lr, [sp, #4]
   20fb0:	add	fp, sp, #4
   20fb4:	sub	sp, sp, #304	; 0x130
   20fb8:	str	r0, [fp, #-272]	; 0xfffffef0
   20fbc:	str	r1, [fp, #-276]	; 0xfffffeec
   20fc0:	str	r2, [fp, #-280]	; 0xfffffee8
   20fc4:	ldr	r3, [fp, #-272]	; 0xfffffef0
   20fc8:	ldr	r3, [r3, #16]
   20fcc:	cmp	r3, #0
   20fd0:	beq	21058 <rb_dictionary_stats+0xb0>
   20fd4:	mov	r3, #0
   20fd8:	str	r3, [fp, #-268]	; 0xfffffef4
   20fdc:	ldr	r3, [fp, #-272]	; 0xfffffef0
   20fe0:	ldr	r3, [r3, #4]
   20fe4:	sub	r2, fp, #268	; 0x10c
   20fe8:	mov	r1, #0
   20fec:	mov	r0, r3
   20ff0:	bl	20ebc <stats_recurse>
   20ff4:	str	r0, [fp, #-8]
   20ff8:	ldr	r3, [fp, #-272]	; 0xfffffef0
   20ffc:	ldr	ip, [r3, #20]
   21000:	ldr	r3, [fp, #-272]	; 0xfffffef0
   21004:	ldr	r3, [r3, #16]
   21008:	ldr	r1, [fp, #-8]
   2100c:	ldr	r2, [fp, #-272]	; 0xfffffef0
   21010:	ldr	r2, [r2, #16]
   21014:	udiv	r2, r1, r2
   21018:	ldr	r1, [fp, #-268]	; 0xfffffef4
   2101c:	sub	r0, fp, #264	; 0x108
   21020:	str	r1, [sp, #16]
   21024:	str	r2, [sp, #12]
   21028:	ldr	r2, [fp, #-8]
   2102c:	str	r2, [sp, #8]
   21030:	str	r3, [sp, #4]
   21034:	ldr	r3, [pc, #156]	; 210d8 <rb_dictionary_stats+0x130>
   21038:	add	r3, pc, r3
   2103c:	str	r3, [sp]
   21040:	mov	r3, ip
   21044:	ldr	r2, [pc, #144]	; 210dc <rb_dictionary_stats+0x134>
   21048:	add	r2, pc, r2
   2104c:	mov	r1, #256	; 0x100
   21050:	bl	4bdc <snprintf@plt>
   21054:	b	210b0 <rb_dictionary_stats+0x108>
   21058:	ldr	r3, [fp, #-272]	; 0xfffffef0
   2105c:	ldr	r3, [r3, #20]
   21060:	sub	r0, fp, #264	; 0x108
   21064:	ldr	r2, [pc, #116]	; 210e0 <rb_dictionary_stats+0x138>
   21068:	add	r2, pc, r2
   2106c:	str	r2, [sp, #16]
   21070:	ldr	r2, [pc, #108]	; 210e4 <rb_dictionary_stats+0x13c>
   21074:	add	r2, pc, r2
   21078:	str	r2, [sp, #12]
   2107c:	ldr	r2, [pc, #100]	; 210e8 <rb_dictionary_stats+0x140>
   21080:	add	r2, pc, r2
   21084:	str	r2, [sp, #8]
   21088:	ldr	r2, [pc, #92]	; 210ec <rb_dictionary_stats+0x144>
   2108c:	add	r2, pc, r2
   21090:	str	r2, [sp, #4]
   21094:	ldr	r2, [pc, #84]	; 210f0 <rb_dictionary_stats+0x148>
   21098:	add	r2, pc, r2
   2109c:	str	r2, [sp]
   210a0:	ldr	r2, [pc, #76]	; 210f4 <rb_dictionary_stats+0x14c>
   210a4:	add	r2, pc, r2
   210a8:	mov	r1, #256	; 0x100
   210ac:	bl	4bdc <snprintf@plt>
   210b0:	sub	r2, fp, #264	; 0x108
   210b4:	ldr	r3, [fp, #-276]	; 0xfffffeec
   210b8:	ldr	r1, [fp, #-280]	; 0xfffffee8
   210bc:	mov	r0, r2
   210c0:	blx	r3
   210c4:	nop	{0}
   210c8:	sub	sp, fp, #4
   210cc:	ldr	fp, [sp]
   210d0:	add	sp, sp, #4
   210d4:	pop	{pc}		; (ldr pc, [sp], #4)
   210d8:	.word	0x000039e0
   210dc:	.word	0x000039ac
   210e0:	.word	0x000039dc
   210e4:	.word	0x000039d0
   210e8:	.word	0x000039c4
   210ec:	.word	0x000039b8
   210f0:	.word	0x00003980
   210f4:	.word	0x0000397c

000210f8 <rb_dictionary_stats_walk>:
   210f8:	str	fp, [sp, #-8]!
   210fc:	str	lr, [sp, #4]
   21100:	add	fp, sp, #4
   21104:	sub	sp, sp, #16
   21108:	str	r0, [fp, #-16]
   2110c:	str	r1, [fp, #-20]	; 0xffffffec
   21110:	ldr	r3, [pc, #80]	; 21168 <rb_dictionary_stats_walk+0x70>
   21114:	add	r3, pc, r3
   21118:	ldr	r3, [r3]
   2111c:	str	r3, [fp, #-8]
   21120:	b	21148 <rb_dictionary_stats_walk+0x50>
   21124:	ldr	r3, [fp, #-8]
   21128:	ldr	r3, [r3]
   2112c:	ldr	r2, [fp, #-20]	; 0xffffffec
   21130:	ldr	r1, [fp, #-16]
   21134:	mov	r0, r3
   21138:	bl	49c0 <rb_dictionary_stats@plt>
   2113c:	ldr	r3, [fp, #-8]
   21140:	ldr	r3, [r3, #8]
   21144:	str	r3, [fp, #-8]
   21148:	ldr	r3, [fp, #-8]
   2114c:	cmp	r3, #0
   21150:	bne	21124 <rb_dictionary_stats_walk+0x2c>
   21154:	nop	{0}
   21158:	sub	sp, fp, #4
   2115c:	ldr	fp, [sp]
   21160:	add	sp, sp, #4
   21164:	pop	{pc}		; (ldr pc, [sp], #4)
   21168:	.word	0x000322e8

0002116c <rb_dlinkAdd>:
   2116c:	push	{fp}		; (str fp, [sp, #-4]!)
   21170:	add	fp, sp, #0
   21174:	sub	sp, sp, #20
   21178:	str	r0, [fp, #-8]
   2117c:	str	r1, [fp, #-12]
   21180:	str	r2, [fp, #-16]
   21184:	ldr	r3, [fp, #-12]
   21188:	ldr	r2, [fp, #-8]
   2118c:	str	r2, [r3]
   21190:	ldr	r3, [fp, #-12]
   21194:	mov	r2, #0
   21198:	str	r2, [r3, #4]
   2119c:	ldr	r3, [fp, #-16]
   211a0:	ldr	r2, [r3]
   211a4:	ldr	r3, [fp, #-12]
   211a8:	str	r2, [r3, #8]
   211ac:	ldr	r3, [fp, #-16]
   211b0:	ldr	r3, [r3]
   211b4:	cmp	r3, #0
   211b8:	beq	211d0 <rb_dlinkAdd+0x64>
   211bc:	ldr	r3, [fp, #-16]
   211c0:	ldr	r3, [r3]
   211c4:	ldr	r2, [fp, #-12]
   211c8:	str	r2, [r3, #4]
   211cc:	b	211ec <rb_dlinkAdd+0x80>
   211d0:	ldr	r3, [fp, #-16]
   211d4:	ldr	r3, [r3, #4]
   211d8:	cmp	r3, #0
   211dc:	bne	211ec <rb_dlinkAdd+0x80>
   211e0:	ldr	r3, [fp, #-16]
   211e4:	ldr	r2, [fp, #-12]
   211e8:	str	r2, [r3, #4]
   211ec:	ldr	r3, [fp, #-16]
   211f0:	ldr	r2, [fp, #-12]
   211f4:	str	r2, [r3]
   211f8:	ldr	r3, [fp, #-16]
   211fc:	ldr	r3, [r3, #8]
   21200:	add	r2, r3, #1
   21204:	ldr	r3, [fp, #-16]
   21208:	str	r2, [r3, #8]
   2120c:	nop	{0}
   21210:	add	sp, fp, #0
   21214:	pop	{fp}		; (ldr fp, [sp], #4)
   21218:	bx	lr

0002121c <rb_dlinkDelete>:
   2121c:	push	{fp}		; (str fp, [sp, #-4]!)
   21220:	add	fp, sp, #0
   21224:	sub	sp, sp, #12
   21228:	str	r0, [fp, #-8]
   2122c:	str	r1, [fp, #-12]
   21230:	ldr	r3, [fp, #-8]
   21234:	ldr	r3, [r3, #8]
   21238:	cmp	r3, #0
   2123c:	beq	21258 <rb_dlinkDelete+0x3c>
   21240:	ldr	r3, [fp, #-8]
   21244:	ldr	r3, [r3, #8]
   21248:	ldr	r2, [fp, #-8]
   2124c:	ldr	r2, [r2, #4]
   21250:	str	r2, [r3, #4]
   21254:	b	21268 <rb_dlinkDelete+0x4c>
   21258:	ldr	r3, [fp, #-8]
   2125c:	ldr	r2, [r3, #4]
   21260:	ldr	r3, [fp, #-12]
   21264:	str	r2, [r3, #4]
   21268:	ldr	r3, [fp, #-8]
   2126c:	ldr	r3, [r3, #4]
   21270:	cmp	r3, #0
   21274:	beq	21290 <rb_dlinkDelete+0x74>
   21278:	ldr	r3, [fp, #-8]
   2127c:	ldr	r3, [r3, #4]
   21280:	ldr	r2, [fp, #-8]
   21284:	ldr	r2, [r2, #8]
   21288:	str	r2, [r3, #8]
   2128c:	b	212a0 <rb_dlinkDelete+0x84>
   21290:	ldr	r3, [fp, #-8]
   21294:	ldr	r2, [r3, #8]
   21298:	ldr	r3, [fp, #-12]
   2129c:	str	r2, [r3]
   212a0:	ldr	r3, [fp, #-8]
   212a4:	mov	r2, #0
   212a8:	str	r2, [r3, #4]
   212ac:	ldr	r3, [fp, #-8]
   212b0:	ldr	r2, [r3, #4]
   212b4:	ldr	r3, [fp, #-8]
   212b8:	str	r2, [r3, #8]
   212bc:	ldr	r3, [fp, #-12]
   212c0:	ldr	r3, [r3, #8]
   212c4:	sub	r2, r3, #1
   212c8:	ldr	r3, [fp, #-12]
   212cc:	str	r2, [r3, #8]
   212d0:	nop	{0}
   212d4:	add	sp, fp, #0
   212d8:	pop	{fp}		; (ldr fp, [sp], #4)
   212dc:	bx	lr

000212e0 <rb_malloc>:
   212e0:	str	fp, [sp, #-8]!
   212e4:	str	lr, [sp, #4]
   212e8:	add	fp, sp, #4
   212ec:	sub	sp, sp, #16
   212f0:	str	r0, [fp, #-16]
   212f4:	ldr	r1, [fp, #-16]
   212f8:	mov	r0, #1
   212fc:	bl	460c <calloc@plt>
   21300:	mov	r3, r0
   21304:	str	r3, [fp, #-8]
   21308:	ldr	r3, [fp, #-8]
   2130c:	cmp	r3, #0
   21310:	moveq	r3, #1
   21314:	movne	r3, #0
   21318:	uxtb	r3, r3
   2131c:	cmp	r3, #0
   21320:	beq	21328 <rb_malloc+0x48>
   21324:	bl	49a8 <rb_outofmemory@plt>
   21328:	ldr	r3, [fp, #-8]
   2132c:	mov	r0, r3
   21330:	sub	sp, fp, #4
   21334:	ldr	fp, [sp]
   21338:	add	sp, sp, #4
   2133c:	pop	{pc}		; (ldr pc, [sp], #4)

00021340 <rb_strdup>:
   21340:	str	fp, [sp, #-8]!
   21344:	str	lr, [sp, #4]
   21348:	add	fp, sp, #4
   2134c:	sub	sp, sp, #16
   21350:	str	r0, [fp, #-16]
   21354:	ldr	r0, [fp, #-16]
   21358:	bl	4810 <strlen@plt>
   2135c:	mov	r3, r0
   21360:	add	r3, r3, #1
   21364:	mov	r0, r3
   21368:	bl	49cc <malloc@plt>
   2136c:	mov	r3, r0
   21370:	str	r3, [fp, #-8]
   21374:	ldr	r3, [fp, #-8]
   21378:	cmp	r3, #0
   2137c:	moveq	r3, #1
   21380:	movne	r3, #0
   21384:	uxtb	r3, r3
   21388:	cmp	r3, #0
   2138c:	beq	21394 <rb_strdup+0x54>
   21390:	bl	49a8 <rb_outofmemory@plt>
   21394:	ldr	r1, [fp, #-16]
   21398:	ldr	r0, [fp, #-8]
   2139c:	bl	48ac <strcpy@plt>
   213a0:	ldr	r3, [fp, #-8]
   213a4:	mov	r0, r3
   213a8:	sub	sp, fp, #4
   213ac:	ldr	fp, [sp]
   213b0:	add	sp, sp, #4
   213b4:	pop	{pc}		; (ldr pc, [sp], #4)

000213b8 <rb_free>:
   213b8:	str	fp, [sp, #-8]!
   213bc:	str	lr, [sp, #4]
   213c0:	add	fp, sp, #4
   213c4:	sub	sp, sp, #8
   213c8:	str	r0, [fp, #-8]
   213cc:	ldr	r3, [fp, #-8]
   213d0:	cmp	r3, #0
   213d4:	movne	r3, #1
   213d8:	moveq	r3, #0
   213dc:	uxtb	r3, r3
   213e0:	cmp	r3, #0
   213e4:	beq	213f0 <rb_free+0x38>
   213e8:	ldr	r0, [fp, #-8]
   213ec:	bl	4720 <free@plt>
   213f0:	nop	{0}
   213f4:	sub	sp, fp, #4
   213f8:	ldr	fp, [sp]
   213fc:	add	sp, sp, #4
   21400:	pop	{pc}		; (ldr pc, [sp], #4)

00021404 <first_leaf>:
   21404:	push	{fp}		; (str fp, [sp, #-4]!)
   21408:	add	fp, sp, #0
   2140c:	sub	sp, sp, #20
   21410:	str	r0, [fp, #-16]
   21414:	b	21474 <first_leaf+0x70>
   21418:	mov	r3, #0
   2141c:	str	r3, [fp, #-8]
   21420:	b	21468 <first_leaf+0x64>
   21424:	ldr	r2, [fp, #-16]
   21428:	ldr	r3, [fp, #-8]
   2142c:	lsl	r3, r3, #2
   21430:	add	r3, r2, r3
   21434:	ldr	r3, [r3, #4]
   21438:	cmp	r3, #0
   2143c:	beq	2145c <first_leaf+0x58>
   21440:	ldr	r2, [fp, #-16]
   21444:	ldr	r3, [fp, #-8]
   21448:	lsl	r3, r3, #2
   2144c:	add	r3, r2, r3
   21450:	ldr	r3, [r3, #4]
   21454:	str	r3, [fp, #-16]
   21458:	b	21474 <first_leaf+0x70>
   2145c:	ldr	r3, [fp, #-8]
   21460:	add	r3, r3, #1
   21464:	str	r3, [fp, #-8]
   21468:	ldr	r3, [fp, #-8]
   2146c:	cmp	r3, #15
   21470:	ble	21424 <first_leaf+0x20>
   21474:	ldr	r3, [fp, #-16]
   21478:	ldr	r3, [r3]
   2147c:	cmn	r3, #1
   21480:	bne	21418 <first_leaf+0x14>
   21484:	ldr	r3, [fp, #-16]
   21488:	mov	r0, r3
   2148c:	add	sp, fp, #0
   21490:	pop	{fp}		; (ldr fp, [sp], #4)
   21494:	bx	lr

00021498 <rb_radixtree_create>:
   21498:	str	r4, [sp, #-12]!
   2149c:	str	fp, [sp, #4]
   214a0:	str	lr, [sp, #8]
   214a4:	add	fp, sp, #8
   214a8:	sub	sp, sp, #20
   214ac:	str	r0, [fp, #-24]	; 0xffffffe8
   214b0:	str	r1, [fp, #-28]	; 0xffffffe4
   214b4:	ldr	r4, [pc, #112]	; 2152c <rb_radixtree_create+0x94>
   214b8:	add	r4, pc, r4
   214bc:	mov	r0, #28
   214c0:	bl	212e0 <rb_malloc>
   214c4:	str	r0, [fp, #-16]
   214c8:	ldr	r3, [fp, #-16]
   214cc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   214d0:	str	r2, [r3]
   214d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   214d8:	bl	21340 <rb_strdup>
   214dc:	mov	r2, r0
   214e0:	ldr	r3, [fp, #-16]
   214e4:	str	r2, [r3, #12]
   214e8:	ldr	r3, [fp, #-16]
   214ec:	mov	r2, #0
   214f0:	str	r2, [r3, #4]
   214f4:	ldr	r3, [fp, #-16]
   214f8:	add	r1, r3, #16
   214fc:	ldr	r3, [pc, #44]	; 21530 <rb_radixtree_create+0x98>
   21500:	ldr	r3, [r4, r3]
   21504:	mov	r2, r3
   21508:	ldr	r0, [fp, #-16]
   2150c:	bl	2116c <rb_dlinkAdd>
   21510:	ldr	r3, [fp, #-16]
   21514:	mov	r0, r3
   21518:	sub	sp, fp, #8
   2151c:	ldr	r4, [sp]
   21520:	ldr	fp, [sp, #4]
   21524:	add	sp, sp, #8
   21528:	pop	{pc}		; (ldr pc, [sp], #4)
   2152c:	.word	0x00013b40
   21530:	.word	0x000003f8

00021534 <rb_radixtree_destroy>:
   21534:	str	r4, [sp, #-12]!
   21538:	str	fp, [sp, #4]
   2153c:	str	lr, [sp, #8]
   21540:	add	fp, sp, #8
   21544:	sub	sp, sp, #68	; 0x44
   21548:	str	r0, [fp, #-64]	; 0xffffffc0
   2154c:	str	r1, [fp, #-68]	; 0xffffffbc
   21550:	str	r2, [fp, #-72]	; 0xffffffb8
   21554:	ldr	r4, [pc, #212]	; 21630 <rb_radixtree_destroy+0xfc>
   21558:	add	r4, pc, r4
   2155c:	sub	r3, fp, #60	; 0x3c
   21560:	mov	r1, r3
   21564:	ldr	r0, [fp, #-64]	; 0xffffffc0
   21568:	bl	442c <rb_radixtree_foreach_start@plt>
   2156c:	b	215c4 <rb_radixtree_destroy+0x90>
   21570:	ldr	r3, [fp, #-52]	; 0xffffffcc
   21574:	str	r3, [fp, #-20]	; 0xffffffec
   21578:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2157c:	cmp	r3, #0
   21580:	beq	215a0 <rb_radixtree_destroy+0x6c>
   21584:	ldr	r3, [fp, #-20]	; 0xffffffec
   21588:	ldr	r0, [r3, #8]
   2158c:	ldr	r3, [fp, #-20]	; 0xffffffec
   21590:	ldr	r1, [r3, #4]
   21594:	ldr	r3, [fp, #-68]	; 0xffffffbc
   21598:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2159c:	blx	r3
   215a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   215a4:	ldr	r3, [r3, #8]
   215a8:	mov	r1, r3
   215ac:	ldr	r0, [fp, #-64]	; 0xffffffc0
   215b0:	bl	4cf0 <rb_radixtree_delete@plt>
   215b4:	sub	r3, fp, #60	; 0x3c
   215b8:	mov	r1, r3
   215bc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   215c0:	bl	4468 <rb_radixtree_foreach_next@plt>
   215c4:	sub	r3, fp, #60	; 0x3c
   215c8:	mov	r1, r3
   215cc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   215d0:	bl	47d4 <rb_radixtree_foreach_cur@plt>
   215d4:	str	r0, [fp, #-16]
   215d8:	ldr	r3, [fp, #-16]
   215dc:	cmp	r3, #0
   215e0:	bne	21570 <rb_radixtree_destroy+0x3c>
   215e4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   215e8:	add	r2, r3, #16
   215ec:	ldr	r3, [pc, #64]	; 21634 <rb_radixtree_destroy+0x100>
   215f0:	ldr	r3, [r4, r3]
   215f4:	mov	r1, r3
   215f8:	mov	r0, r2
   215fc:	bl	2121c <rb_dlinkDelete>
   21600:	ldr	r3, [fp, #-64]	; 0xffffffc0
   21604:	ldr	r3, [r3, #12]
   21608:	mov	r0, r3
   2160c:	bl	213b8 <rb_free>
   21610:	ldr	r0, [fp, #-64]	; 0xffffffc0
   21614:	bl	213b8 <rb_free>
   21618:	nop	{0}
   2161c:	sub	sp, fp, #8
   21620:	ldr	r4, [sp]
   21624:	ldr	fp, [sp, #4]
   21628:	add	sp, sp, #8
   2162c:	pop	{pc}		; (ldr pc, [sp], #4)
   21630:	.word	0x00013aa0
   21634:	.word	0x000003f8

00021638 <rb_radixtree_foreach>:
   21638:	str	fp, [sp, #-8]!
   2163c:	str	lr, [sp, #4]
   21640:	add	fp, sp, #4
   21644:	sub	sp, sp, #32
   21648:	str	r0, [fp, #-24]	; 0xffffffe8
   2164c:	str	r1, [fp, #-28]	; 0xffffffe4
   21650:	str	r2, [fp, #-32]	; 0xffffffe0
   21654:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21658:	ldr	r3, [r3, #4]
   2165c:	str	r3, [fp, #-8]
   21660:	ldr	r3, [fp, #-8]
   21664:	cmp	r3, #0
   21668:	beq	21798 <rb_radixtree_foreach+0x160>
   2166c:	ldr	r3, [fp, #-8]
   21670:	ldr	r3, [r3]
   21674:	cmn	r3, #1
   21678:	bne	216a8 <rb_radixtree_foreach+0x70>
   2167c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21680:	cmp	r3, #0
   21684:	beq	217a0 <rb_radixtree_foreach+0x168>
   21688:	ldr	r3, [fp, #-8]
   2168c:	ldr	r0, [r3, #8]
   21690:	ldr	r3, [fp, #-8]
   21694:	ldr	r1, [r3, #4]
   21698:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2169c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   216a0:	blx	r3
   216a4:	b	217a0 <rb_radixtree_foreach+0x168>
   216a8:	mov	r3, #0
   216ac:	str	r3, [fp, #-12]
   216b0:	ldr	r3, [fp, #-12]
   216b4:	add	r2, r3, #1
   216b8:	str	r2, [fp, #-12]
   216bc:	ldr	r2, [fp, #-8]
   216c0:	lsl	r3, r3, #2
   216c4:	add	r3, r2, r3
   216c8:	ldr	r3, [r3, #4]
   216cc:	str	r3, [fp, #-16]
   216d0:	ldr	r3, [fp, #-16]
   216d4:	cmp	r3, #0
   216d8:	bne	216e8 <rb_radixtree_foreach+0xb0>
   216dc:	ldr	r3, [fp, #-12]
   216e0:	cmp	r3, #15
   216e4:	ble	216b0 <rb_radixtree_foreach+0x78>
   216e8:	ldr	r3, [fp, #-16]
   216ec:	cmp	r3, #0
   216f0:	beq	21774 <rb_radixtree_foreach+0x13c>
   216f4:	ldr	r3, [fp, #-16]
   216f8:	ldr	r3, [r3]
   216fc:	cmn	r3, #1
   21700:	bne	21730 <rb_radixtree_foreach+0xf8>
   21704:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21708:	cmp	r3, #0
   2170c:	beq	21774 <rb_radixtree_foreach+0x13c>
   21710:	ldr	r3, [fp, #-16]
   21714:	ldr	r0, [r3, #8]
   21718:	ldr	r3, [fp, #-16]
   2171c:	ldr	r1, [r3, #4]
   21720:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21724:	ldr	r2, [fp, #-32]	; 0xffffffe0
   21728:	blx	r3
   2172c:	b	21774 <rb_radixtree_foreach+0x13c>
   21730:	ldr	r3, [fp, #-16]
   21734:	str	r3, [fp, #-8]
   21738:	mov	r3, #0
   2173c:	str	r3, [fp, #-12]
   21740:	b	21774 <rb_radixtree_foreach+0x13c>
   21744:	ldr	r3, [fp, #-8]
   21748:	ldrb	r3, [r3, #72]	; 0x48
   2174c:	str	r3, [fp, #-12]
   21750:	ldr	r3, [fp, #-8]
   21754:	ldr	r3, [r3, #68]	; 0x44
   21758:	str	r3, [fp, #-8]
   2175c:	ldr	r3, [fp, #-8]
   21760:	cmp	r3, #0
   21764:	beq	21784 <rb_radixtree_foreach+0x14c>
   21768:	ldr	r3, [fp, #-12]
   2176c:	add	r3, r3, #1
   21770:	str	r3, [fp, #-12]
   21774:	ldr	r3, [fp, #-12]
   21778:	cmp	r3, #15
   2177c:	bgt	21744 <rb_radixtree_foreach+0x10c>
   21780:	b	21788 <rb_radixtree_foreach+0x150>
   21784:	nop	{0}
   21788:	ldr	r3, [fp, #-8]
   2178c:	cmp	r3, #0
   21790:	bne	216b0 <rb_radixtree_foreach+0x78>
   21794:	b	217a4 <rb_radixtree_foreach+0x16c>
   21798:	nop	{0}
   2179c:	b	217a4 <rb_radixtree_foreach+0x16c>
   217a0:	nop	{0}
   217a4:	sub	sp, fp, #4
   217a8:	ldr	fp, [sp]
   217ac:	add	sp, sp, #4
   217b0:	pop	{pc}		; (ldr pc, [sp], #4)

000217b4 <rb_radixtree_search>:
   217b4:	str	fp, [sp, #-8]!
   217b8:	str	lr, [sp, #4]
   217bc:	add	fp, sp, #4
   217c0:	sub	sp, sp, #32
   217c4:	str	r0, [fp, #-24]	; 0xffffffe8
   217c8:	str	r1, [fp, #-28]	; 0xffffffe4
   217cc:	str	r2, [fp, #-32]	; 0xffffffe0
   217d0:	mov	r3, #0
   217d4:	str	r3, [fp, #-16]
   217d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   217dc:	ldr	r3, [r3, #4]
   217e0:	str	r3, [fp, #-8]
   217e4:	ldr	r3, [fp, #-8]
   217e8:	cmp	r3, #0
   217ec:	bne	217f8 <rb_radixtree_search+0x44>
   217f0:	mov	r3, #0
   217f4:	b	21938 <rb_radixtree_search+0x184>
   217f8:	ldr	r3, [fp, #-8]
   217fc:	ldr	r3, [r3]
   21800:	cmn	r3, #1
   21804:	bne	21840 <rb_radixtree_search+0x8c>
   21808:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2180c:	cmp	r3, #0
   21810:	beq	21838 <rb_radixtree_search+0x84>
   21814:	ldr	r3, [fp, #-8]
   21818:	ldr	r0, [r3, #8]
   2181c:	ldr	r3, [fp, #-8]
   21820:	ldr	r1, [r3, #4]
   21824:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21828:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2182c:	blx	r3
   21830:	mov	r3, r0
   21834:	b	21938 <rb_radixtree_search+0x184>
   21838:	mov	r3, #0
   2183c:	b	21938 <rb_radixtree_search+0x184>
   21840:	mov	r3, #0
   21844:	str	r3, [fp, #-12]
   21848:	ldr	r3, [fp, #-12]
   2184c:	add	r2, r3, #1
   21850:	str	r2, [fp, #-12]
   21854:	ldr	r2, [fp, #-8]
   21858:	lsl	r3, r3, #2
   2185c:	add	r3, r2, r3
   21860:	ldr	r3, [r3, #4]
   21864:	str	r3, [fp, #-20]	; 0xffffffec
   21868:	ldr	r3, [fp, #-20]	; 0xffffffec
   2186c:	cmp	r3, #0
   21870:	bne	21880 <rb_radixtree_search+0xcc>
   21874:	ldr	r3, [fp, #-12]
   21878:	cmp	r3, #15
   2187c:	ble	21848 <rb_radixtree_search+0x94>
   21880:	ldr	r3, [fp, #-20]	; 0xffffffec
   21884:	cmp	r3, #0
   21888:	beq	2191c <rb_radixtree_search+0x168>
   2188c:	ldr	r3, [fp, #-20]	; 0xffffffec
   21890:	ldr	r3, [r3]
   21894:	cmn	r3, #1
   21898:	bne	218d8 <rb_radixtree_search+0x124>
   2189c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   218a0:	cmp	r3, #0
   218a4:	beq	218c8 <rb_radixtree_search+0x114>
   218a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   218ac:	ldr	r0, [r3, #8]
   218b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   218b4:	ldr	r1, [r3, #4]
   218b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   218bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   218c0:	blx	r3
   218c4:	str	r0, [fp, #-16]
   218c8:	ldr	r3, [fp, #-16]
   218cc:	cmp	r3, #0
   218d0:	beq	2191c <rb_radixtree_search+0x168>
   218d4:	b	21934 <rb_radixtree_search+0x180>
   218d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   218dc:	str	r3, [fp, #-8]
   218e0:	mov	r3, #0
   218e4:	str	r3, [fp, #-12]
   218e8:	b	2191c <rb_radixtree_search+0x168>
   218ec:	ldr	r3, [fp, #-8]
   218f0:	ldrb	r3, [r3, #72]	; 0x48
   218f4:	str	r3, [fp, #-12]
   218f8:	ldr	r3, [fp, #-8]
   218fc:	ldr	r3, [r3, #68]	; 0x44
   21900:	str	r3, [fp, #-8]
   21904:	ldr	r3, [fp, #-8]
   21908:	cmp	r3, #0
   2190c:	beq	2192c <rb_radixtree_search+0x178>
   21910:	ldr	r3, [fp, #-12]
   21914:	add	r3, r3, #1
   21918:	str	r3, [fp, #-12]
   2191c:	ldr	r3, [fp, #-12]
   21920:	cmp	r3, #15
   21924:	bgt	218ec <rb_radixtree_search+0x138>
   21928:	b	21848 <rb_radixtree_search+0x94>
   2192c:	nop	{0}
   21930:	b	21848 <rb_radixtree_search+0x94>
   21934:	ldr	r3, [fp, #-16]
   21938:	mov	r0, r3
   2193c:	sub	sp, fp, #4
   21940:	ldr	fp, [sp]
   21944:	add	sp, sp, #4
   21948:	pop	{pc}		; (ldr pc, [sp], #4)

0002194c <rb_radixtree_foreach_start>:
   2194c:	str	fp, [sp, #-8]!
   21950:	str	lr, [sp, #4]
   21954:	add	fp, sp, #4
   21958:	sub	sp, sp, #8
   2195c:	str	r0, [fp, #-8]
   21960:	str	r1, [fp, #-12]
   21964:	ldr	r3, [fp, #-8]
   21968:	cmp	r3, #0
   2196c:	beq	219dc <rb_radixtree_foreach_start+0x90>
   21970:	ldr	r3, [fp, #-8]
   21974:	ldr	r3, [r3, #4]
   21978:	cmp	r3, #0
   2197c:	beq	219a0 <rb_radixtree_foreach_start+0x54>
   21980:	ldr	r3, [fp, #-8]
   21984:	ldr	r3, [r3, #4]
   21988:	mov	r0, r3
   2198c:	bl	21404 <first_leaf>
   21990:	mov	r2, r0
   21994:	ldr	r3, [fp, #-12]
   21998:	str	r2, [r3, #12]
   2199c:	b	219ac <rb_radixtree_foreach_start+0x60>
   219a0:	ldr	r3, [fp, #-12]
   219a4:	mov	r2, #0
   219a8:	str	r2, [r3, #12]
   219ac:	ldr	r3, [fp, #-12]
   219b0:	ldr	r2, [r3, #12]
   219b4:	ldr	r3, [fp, #-12]
   219b8:	str	r2, [r3, #8]
   219bc:	ldr	r3, [fp, #-12]
   219c0:	ldr	r3, [r3, #12]
   219c4:	cmp	r3, #0
   219c8:	beq	219e4 <rb_radixtree_foreach_start+0x98>
   219cc:	ldr	r1, [fp, #-12]
   219d0:	ldr	r0, [fp, #-8]
   219d4:	bl	4468 <rb_radixtree_foreach_next@plt>
   219d8:	b	219e8 <rb_radixtree_foreach_start+0x9c>
   219dc:	nop	{0}
   219e0:	b	219e8 <rb_radixtree_foreach_start+0x9c>
   219e4:	nop	{0}
   219e8:	sub	sp, fp, #4
   219ec:	ldr	fp, [sp]
   219f0:	add	sp, sp, #4
   219f4:	pop	{pc}		; (ldr pc, [sp], #4)

000219f8 <rb_radixtree_foreach_cur>:
   219f8:	push	{fp}		; (str fp, [sp, #-4]!)
   219fc:	add	fp, sp, #0
   21a00:	sub	sp, sp, #12
   21a04:	str	r0, [fp, #-8]
   21a08:	str	r1, [fp, #-12]
   21a0c:	ldr	r3, [fp, #-8]
   21a10:	cmp	r3, #0
   21a14:	bne	21a20 <rb_radixtree_foreach_cur+0x28>
   21a18:	mov	r3, #0
   21a1c:	b	21a44 <rb_radixtree_foreach_cur+0x4c>
   21a20:	ldr	r3, [fp, #-12]
   21a24:	ldr	r3, [r3, #8]
   21a28:	cmp	r3, #0
   21a2c:	beq	21a40 <rb_radixtree_foreach_cur+0x48>
   21a30:	ldr	r3, [fp, #-12]
   21a34:	ldr	r3, [r3, #8]
   21a38:	ldr	r3, [r3, #4]
   21a3c:	b	21a44 <rb_radixtree_foreach_cur+0x4c>
   21a40:	mov	r3, #0
   21a44:	mov	r0, r3
   21a48:	add	sp, fp, #0
   21a4c:	pop	{fp}		; (ldr fp, [sp], #4)
   21a50:	bx	lr

00021a54 <rb_radixtree_foreach_next>:
   21a54:	str	fp, [sp, #-8]!
   21a58:	str	lr, [sp, #4]
   21a5c:	add	fp, sp, #4
   21a60:	sub	sp, sp, #24
   21a64:	str	r0, [fp, #-24]	; 0xffffffe8
   21a68:	str	r1, [fp, #-28]	; 0xffffffe4
   21a6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21a70:	cmp	r3, #0
   21a74:	beq	21bec <rb_radixtree_foreach_next+0x198>
   21a78:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21a7c:	ldr	r3, [r3, #8]
   21a80:	cmp	r3, #0
   21a84:	beq	21bf4 <rb_radixtree_foreach_next+0x1a0>
   21a88:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21a8c:	ldr	r2, [r3, #12]
   21a90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21a94:	str	r2, [r3, #8]
   21a98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21a9c:	ldr	r3, [r3, #12]
   21aa0:	cmp	r3, #0
   21aa4:	beq	21bfc <rb_radixtree_foreach_next+0x1a8>
   21aa8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21aac:	ldr	r3, [r3, #12]
   21ab0:	str	r3, [fp, #-16]
   21ab4:	ldr	r3, [fp, #-16]
   21ab8:	ldr	r3, [r3, #12]
   21abc:	str	r3, [fp, #-8]
   21ac0:	ldr	r3, [fp, #-16]
   21ac4:	ldrb	r3, [r3, #16]
   21ac8:	str	r3, [fp, #-12]
   21acc:	b	21bd0 <rb_radixtree_foreach_next+0x17c>
   21ad0:	ldr	r3, [fp, #-12]
   21ad4:	add	r2, r3, #1
   21ad8:	str	r2, [fp, #-12]
   21adc:	ldr	r2, [fp, #-8]
   21ae0:	lsl	r3, r3, #2
   21ae4:	add	r3, r2, r3
   21ae8:	ldr	r3, [r3, #4]
   21aec:	str	r3, [fp, #-20]	; 0xffffffec
   21af0:	ldr	r3, [fp, #-20]	; 0xffffffec
   21af4:	cmp	r3, #0
   21af8:	bne	21b08 <rb_radixtree_foreach_next+0xb4>
   21afc:	ldr	r3, [fp, #-12]
   21b00:	cmp	r3, #15
   21b04:	ble	21ad0 <rb_radixtree_foreach_next+0x7c>
   21b08:	ldr	r3, [fp, #-20]	; 0xffffffec
   21b0c:	cmp	r3, #0
   21b10:	beq	21bc4 <rb_radixtree_foreach_next+0x170>
   21b14:	ldr	r3, [fp, #-20]	; 0xffffffec
   21b18:	ldr	r3, [r3]
   21b1c:	cmn	r3, #1
   21b20:	bne	21b7c <rb_radixtree_foreach_next+0x128>
   21b24:	ldr	r3, [fp, #-20]	; 0xffffffec
   21b28:	ldr	r2, [fp, #-16]
   21b2c:	cmp	r2, r3
   21b30:	beq	21bc4 <rb_radixtree_foreach_next+0x170>
   21b34:	ldr	r3, [fp, #-20]	; 0xffffffec
   21b38:	ldr	r2, [r3, #8]
   21b3c:	ldr	r3, [fp, #-16]
   21b40:	ldr	r3, [r3, #8]
   21b44:	mov	r1, r3
   21b48:	mov	r0, r2
   21b4c:	bl	4d14 <strcmp@plt>
   21b50:	mov	r3, r0
   21b54:	cmp	r3, #0
   21b58:	bge	21b6c <rb_radixtree_foreach_next+0x118>
   21b5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21b60:	mov	r2, #0
   21b64:	str	r2, [r3, #12]
   21b68:	b	21c00 <rb_radixtree_foreach_next+0x1ac>
   21b6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21b70:	ldr	r2, [fp, #-20]	; 0xffffffec
   21b74:	str	r2, [r3, #12]
   21b78:	b	21c00 <rb_radixtree_foreach_next+0x1ac>
   21b7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   21b80:	str	r3, [fp, #-8]
   21b84:	mov	r3, #0
   21b88:	str	r3, [fp, #-12]
   21b8c:	b	21bc4 <rb_radixtree_foreach_next+0x170>
   21b90:	ldr	r3, [fp, #-8]
   21b94:	ldrb	r3, [r3, #72]	; 0x48
   21b98:	str	r3, [fp, #-12]
   21b9c:	ldr	r3, [fp, #-8]
   21ba0:	ldr	r3, [r3, #68]	; 0x44
   21ba4:	str	r3, [fp, #-8]
   21ba8:	ldr	r3, [fp, #-8]
   21bac:	cmp	r3, #0
   21bb0:	bne	21bb8 <rb_radixtree_foreach_next+0x164>
   21bb4:	b	21bd0 <rb_radixtree_foreach_next+0x17c>
   21bb8:	ldr	r3, [fp, #-12]
   21bbc:	add	r3, r3, #1
   21bc0:	str	r3, [fp, #-12]
   21bc4:	ldr	r3, [fp, #-12]
   21bc8:	cmp	r3, #15
   21bcc:	bgt	21b90 <rb_radixtree_foreach_next+0x13c>
   21bd0:	ldr	r3, [fp, #-8]
   21bd4:	cmp	r3, #0
   21bd8:	bne	21ad0 <rb_radixtree_foreach_next+0x7c>
   21bdc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21be0:	mov	r2, #0
   21be4:	str	r2, [r3, #12]
   21be8:	b	21c00 <rb_radixtree_foreach_next+0x1ac>
   21bec:	nop	{0}
   21bf0:	b	21c00 <rb_radixtree_foreach_next+0x1ac>
   21bf4:	nop	{0}
   21bf8:	b	21c00 <rb_radixtree_foreach_next+0x1ac>
   21bfc:	nop	{0}
   21c00:	sub	sp, fp, #4
   21c04:	ldr	fp, [sp]
   21c08:	add	sp, sp, #4
   21c0c:	pop	{pc}		; (ldr pc, [sp], #4)

00021c10 <rb_radixtree_elem_find>:
   21c10:	str	fp, [sp, #-8]!
   21c14:	str	lr, [sp, #4]
   21c18:	add	fp, sp, #4
   21c1c:	sub	sp, sp, #296	; 0x128
   21c20:	str	r0, [fp, #-288]	; 0xfffffee0
   21c24:	str	r1, [fp, #-292]	; 0xfffffedc
   21c28:	str	r2, [fp, #-296]	; 0xfffffed8
   21c2c:	mov	r3, #0
   21c30:	str	r3, [fp, #-8]
   21c34:	ldr	r0, [fp, #-292]	; 0xfffffedc
   21c38:	bl	4810 <strlen@plt>
   21c3c:	mov	r3, r0
   21c40:	str	r3, [fp, #-24]	; 0xffffffe8
   21c44:	ldr	r3, [fp, #-288]	; 0xfffffee0
   21c48:	ldr	r3, [r3]
   21c4c:	cmp	r3, #0
   21c50:	bne	21c60 <rb_radixtree_elem_find+0x50>
   21c54:	ldr	r3, [fp, #-292]	; 0xfffffedc
   21c58:	str	r3, [fp, #-12]
   21c5c:	b	21cc4 <rb_radixtree_elem_find+0xb4>
   21c60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21c64:	cmp	r3, #255	; 0xff
   21c68:	ble	21c94 <rb_radixtree_elem_find+0x84>
   21c6c:	ldr	r0, [fp, #-292]	; 0xfffffedc
   21c70:	bl	21340 <rb_strdup>
   21c74:	str	r0, [fp, #-8]
   21c78:	ldr	r3, [fp, #-288]	; 0xfffffee0
   21c7c:	ldr	r3, [r3]
   21c80:	ldr	r0, [fp, #-8]
   21c84:	blx	r3
   21c88:	ldr	r3, [fp, #-8]
   21c8c:	str	r3, [fp, #-12]
   21c90:	b	21cc4 <rb_radixtree_elem_find+0xb4>
   21c94:	sub	r3, fp, #280	; 0x118
   21c98:	mov	r2, #256	; 0x100
   21c9c:	ldr	r1, [fp, #-292]	; 0xfffffedc
   21ca0:	mov	r0, r3
   21ca4:	bl	46c0 <rb_strlcpy@plt>
   21ca8:	ldr	r3, [fp, #-288]	; 0xfffffee0
   21cac:	ldr	r3, [r3]
   21cb0:	sub	r2, fp, #280	; 0x118
   21cb4:	mov	r0, r2
   21cb8:	blx	r3
   21cbc:	sub	r3, fp, #280	; 0x118
   21cc0:	str	r3, [fp, #-12]
   21cc4:	ldr	r3, [fp, #-288]	; 0xfffffee0
   21cc8:	ldr	r3, [r3, #4]
   21ccc:	str	r3, [fp, #-16]
   21cd0:	b	21d70 <rb_radixtree_elem_find+0x160>
   21cd4:	ldr	r3, [fp, #-16]
   21cd8:	ldr	r3, [r3]
   21cdc:	lsr	r2, r3, #31
   21ce0:	add	r3, r2, r3
   21ce4:	asr	r3, r3, #1
   21ce8:	mov	r2, r3
   21cec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21cf0:	cmp	r3, r2
   21cf4:	ble	21d50 <rb_radixtree_elem_find+0x140>
   21cf8:	ldr	r3, [fp, #-16]
   21cfc:	ldr	r3, [r3]
   21d00:	lsr	r2, r3, #31
   21d04:	add	r3, r2, r3
   21d08:	asr	r3, r3, #1
   21d0c:	mov	r2, r3
   21d10:	ldr	r3, [fp, #-12]
   21d14:	add	r3, r3, r2
   21d18:	ldrb	r3, [r3]
   21d1c:	mov	r2, r3
   21d20:	ldr	r3, [fp, #-16]
   21d24:	ldr	r3, [r3]
   21d28:	and	r3, r3, #1
   21d2c:	cmp	r3, #0
   21d30:	beq	21d3c <rb_radixtree_elem_find+0x12c>
   21d34:	mov	r3, #0
   21d38:	b	21d40 <rb_radixtree_elem_find+0x130>
   21d3c:	mov	r3, #4
   21d40:	asr	r3, r2, r3
   21d44:	and	r3, r3, #15
   21d48:	str	r3, [fp, #-20]	; 0xffffffec
   21d4c:	b	21d58 <rb_radixtree_elem_find+0x148>
   21d50:	mov	r3, #0
   21d54:	str	r3, [fp, #-20]	; 0xffffffec
   21d58:	ldr	r2, [fp, #-16]
   21d5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   21d60:	lsl	r3, r3, #2
   21d64:	add	r3, r2, r3
   21d68:	ldr	r3, [r3, #4]
   21d6c:	str	r3, [fp, #-16]
   21d70:	ldr	r3, [fp, #-16]
   21d74:	cmp	r3, #0
   21d78:	beq	21d8c <rb_radixtree_elem_find+0x17c>
   21d7c:	ldr	r3, [fp, #-16]
   21d80:	ldr	r3, [r3]
   21d84:	cmn	r3, #1
   21d88:	bne	21cd4 <rb_radixtree_elem_find+0xc4>
   21d8c:	ldr	r3, [fp, #-16]
   21d90:	cmp	r3, #0
   21d94:	beq	21dcc <rb_radixtree_elem_find+0x1bc>
   21d98:	ldr	r3, [fp, #-296]	; 0xfffffed8
   21d9c:	cmp	r3, #0
   21da0:	bne	21dcc <rb_radixtree_elem_find+0x1bc>
   21da4:	ldr	r3, [fp, #-16]
   21da8:	ldr	r3, [r3, #8]
   21dac:	ldr	r1, [fp, #-12]
   21db0:	mov	r0, r3
   21db4:	bl	4d14 <strcmp@plt>
   21db8:	mov	r3, r0
   21dbc:	cmp	r3, #0
   21dc0:	beq	21dcc <rb_radixtree_elem_find+0x1bc>
   21dc4:	mov	r3, #0
   21dc8:	str	r3, [fp, #-16]
   21dcc:	ldr	r3, [fp, #-8]
   21dd0:	cmp	r3, #0
   21dd4:	beq	21de0 <rb_radixtree_elem_find+0x1d0>
   21dd8:	ldr	r0, [fp, #-8]
   21ddc:	bl	213b8 <rb_free>
   21de0:	ldr	r3, [fp, #-16]
   21de4:	mov	r0, r3
   21de8:	sub	sp, fp, #4
   21dec:	ldr	fp, [sp]
   21df0:	add	sp, sp, #4
   21df4:	pop	{pc}		; (ldr pc, [sp], #4)

00021df8 <rb_radixtree_foreach_start_from>:
   21df8:	str	fp, [sp, #-8]!
   21dfc:	str	lr, [sp, #4]
   21e00:	add	fp, sp, #4
   21e04:	sub	sp, sp, #16
   21e08:	str	r0, [fp, #-8]
   21e0c:	str	r1, [fp, #-12]
   21e10:	str	r2, [fp, #-16]
   21e14:	ldr	r3, [fp, #-16]
   21e18:	cmp	r3, #0
   21e1c:	beq	21e58 <rb_radixtree_foreach_start_from+0x60>
   21e20:	ldr	r3, [fp, #-12]
   21e24:	mov	r2, #0
   21e28:	str	r2, [r3, #8]
   21e2c:	mov	r2, #1
   21e30:	ldr	r1, [fp, #-16]
   21e34:	ldr	r0, [fp, #-8]
   21e38:	bl	4ba0 <rb_radixtree_elem_find@plt>
   21e3c:	mov	r2, r0
   21e40:	ldr	r3, [fp, #-12]
   21e44:	str	r2, [r3, #12]
   21e48:	ldr	r1, [fp, #-12]
   21e4c:	ldr	r0, [fp, #-8]
   21e50:	bl	4468 <rb_radixtree_foreach_next@plt>
   21e54:	b	21e64 <rb_radixtree_foreach_start_from+0x6c>
   21e58:	ldr	r1, [fp, #-12]
   21e5c:	ldr	r0, [fp, #-8]
   21e60:	bl	442c <rb_radixtree_foreach_start@plt>
   21e64:	nop	{0}
   21e68:	sub	sp, fp, #4
   21e6c:	ldr	fp, [sp]
   21e70:	add	sp, sp, #4
   21e74:	pop	{pc}		; (ldr pc, [sp], #4)

00021e78 <rb_radixtree_elem_add>:
   21e78:	str	fp, [sp, #-8]!
   21e7c:	str	lr, [sp, #4]
   21e80:	add	fp, sp, #4
   21e84:	sub	sp, sp, #56	; 0x38
   21e88:	str	r0, [fp, #-48]	; 0xffffffd0
   21e8c:	str	r1, [fp, #-52]	; 0xffffffcc
   21e90:	str	r2, [fp, #-56]	; 0xffffffc8
   21e94:	ldr	r0, [fp, #-52]	; 0xffffffcc
   21e98:	bl	4810 <strlen@plt>
   21e9c:	mov	r3, r0
   21ea0:	str	r3, [fp, #-32]	; 0xffffffe0
   21ea4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   21ea8:	bl	21340 <rb_strdup>
   21eac:	str	r0, [fp, #-36]	; 0xffffffdc
   21eb0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21eb4:	cmp	r3, #0
   21eb8:	bne	21ec4 <rb_radixtree_elem_add+0x4c>
   21ebc:	mov	r3, #0
   21ec0:	b	22650 <rb_radixtree_elem_add+0x7d8>
   21ec4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21ec8:	ldr	r3, [r3]
   21ecc:	cmp	r3, #0
   21ed0:	beq	21ee4 <rb_radixtree_elem_add+0x6c>
   21ed4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21ed8:	ldr	r3, [r3]
   21edc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21ee0:	blx	r3
   21ee4:	mov	r3, #0
   21ee8:	str	r3, [fp, #-12]
   21eec:	mov	r3, #18
   21ef0:	str	r3, [fp, #-20]	; 0xffffffec
   21ef4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21ef8:	ldr	r3, [r3, #4]
   21efc:	str	r3, [fp, #-8]
   21f00:	b	21fa8 <rb_radixtree_elem_add+0x130>
   21f04:	ldr	r3, [fp, #-8]
   21f08:	str	r3, [fp, #-12]
   21f0c:	ldr	r3, [fp, #-8]
   21f10:	ldr	r3, [r3]
   21f14:	lsr	r2, r3, #31
   21f18:	add	r3, r2, r3
   21f1c:	asr	r3, r3, #1
   21f20:	mov	r2, r3
   21f24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21f28:	cmp	r3, r2
   21f2c:	ble	21f88 <rb_radixtree_elem_add+0x110>
   21f30:	ldr	r3, [fp, #-8]
   21f34:	ldr	r3, [r3]
   21f38:	lsr	r2, r3, #31
   21f3c:	add	r3, r2, r3
   21f40:	asr	r3, r3, #1
   21f44:	mov	r2, r3
   21f48:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21f4c:	add	r3, r3, r2
   21f50:	ldrb	r3, [r3]
   21f54:	mov	r2, r3
   21f58:	ldr	r3, [fp, #-8]
   21f5c:	ldr	r3, [r3]
   21f60:	and	r3, r3, #1
   21f64:	cmp	r3, #0
   21f68:	beq	21f74 <rb_radixtree_elem_add+0xfc>
   21f6c:	mov	r3, #0
   21f70:	b	21f78 <rb_radixtree_elem_add+0x100>
   21f74:	mov	r3, #4
   21f78:	asr	r3, r2, r3
   21f7c:	and	r3, r3, #15
   21f80:	str	r3, [fp, #-20]	; 0xffffffec
   21f84:	b	21f90 <rb_radixtree_elem_add+0x118>
   21f88:	mov	r3, #0
   21f8c:	str	r3, [fp, #-20]	; 0xffffffec
   21f90:	ldr	r2, [fp, #-8]
   21f94:	ldr	r3, [fp, #-20]	; 0xffffffec
   21f98:	lsl	r3, r3, #2
   21f9c:	add	r3, r2, r3
   21fa0:	ldr	r3, [r3, #4]
   21fa4:	str	r3, [fp, #-8]
   21fa8:	ldr	r3, [fp, #-8]
   21fac:	cmp	r3, #0
   21fb0:	beq	21fc4 <rb_radixtree_elem_add+0x14c>
   21fb4:	ldr	r3, [fp, #-8]
   21fb8:	ldr	r3, [r3]
   21fbc:	cmn	r3, #1
   21fc0:	bne	21f04 <rb_radixtree_elem_add+0x8c>
   21fc4:	ldr	r3, [fp, #-8]
   21fc8:	cmp	r3, #0
   21fcc:	beq	22000 <rb_radixtree_elem_add+0x188>
   21fd0:	ldr	r3, [fp, #-8]
   21fd4:	ldr	r3, [r3, #8]
   21fd8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   21fdc:	mov	r0, r3
   21fe0:	bl	4d14 <strcmp@plt>
   21fe4:	mov	r3, r0
   21fe8:	cmp	r3, #0
   21fec:	bne	22000 <rb_radixtree_elem_add+0x188>
   21ff0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21ff4:	bl	213b8 <rb_free>
   21ff8:	mov	r3, #0
   21ffc:	b	22650 <rb_radixtree_elem_add+0x7d8>
   22000:	ldr	r3, [fp, #-8]
   22004:	cmp	r3, #0
   22008:	bne	22024 <rb_radixtree_elem_add+0x1ac>
   2200c:	ldr	r3, [fp, #-12]
   22010:	cmp	r3, #0
   22014:	beq	22024 <rb_radixtree_elem_add+0x1ac>
   22018:	ldr	r0, [fp, #-12]
   2201c:	bl	21404 <first_leaf>
   22020:	str	r0, [fp, #-8]
   22024:	ldr	r3, [fp, #-8]
   22028:	cmp	r3, #0
   2202c:	bne	220c4 <rb_radixtree_elem_add+0x24c>
   22030:	ldr	r3, [fp, #-48]	; 0xffffffd0
   22034:	add	r3, r3, #4
   22038:	str	r3, [fp, #-40]	; 0xffffffd8
   2203c:	mov	r0, #20
   22040:	bl	212e0 <rb_malloc>
   22044:	mov	r2, r0
   22048:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2204c:	str	r2, [r3]
   22050:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22054:	ldr	r3, [r3]
   22058:	mvn	r2, #0
   2205c:	str	r2, [r3]
   22060:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22064:	ldr	r3, [r3]
   22068:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2206c:	str	r2, [r3, #4]
   22070:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22074:	ldr	r3, [r3]
   22078:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2207c:	str	r2, [r3, #8]
   22080:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22084:	ldr	r3, [r3]
   22088:	ldr	r2, [fp, #-12]
   2208c:	str	r2, [r3, #12]
   22090:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22094:	ldr	r3, [r3]
   22098:	ldr	r2, [fp, #-20]	; 0xffffffec
   2209c:	uxtb	r2, r2
   220a0:	strb	r2, [r3, #16]
   220a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   220a8:	ldr	r3, [r3, #8]
   220ac:	add	r2, r3, #1
   220b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   220b4:	str	r2, [r3, #8]
   220b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   220bc:	ldr	r3, [r3]
   220c0:	b	22650 <rb_radixtree_elem_add+0x7d8>
   220c4:	mov	r3, #0
   220c8:	str	r3, [fp, #-24]	; 0xffffffe8
   220cc:	b	220dc <rb_radixtree_elem_add+0x264>
   220d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   220d4:	add	r3, r3, #1
   220d8:	str	r3, [fp, #-24]	; 0xffffffe8
   220dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   220e0:	lsr	r2, r3, #31
   220e4:	add	r3, r2, r3
   220e8:	asr	r3, r3, #1
   220ec:	mov	r2, r3
   220f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   220f4:	add	r3, r3, r2
   220f8:	ldrb	r3, [r3]
   220fc:	mov	r2, r3
   22100:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22104:	and	r3, r3, #1
   22108:	cmp	r3, #0
   2210c:	beq	22118 <rb_radixtree_elem_add+0x2a0>
   22110:	mov	r3, #0
   22114:	b	2211c <rb_radixtree_elem_add+0x2a4>
   22118:	mov	r3, #4
   2211c:	asr	r2, r2, r3
   22120:	ldr	r3, [fp, #-8]
   22124:	ldr	r1, [r3, #8]
   22128:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2212c:	lsr	r0, r3, #31
   22130:	add	r3, r0, r3
   22134:	asr	r3, r3, #1
   22138:	add	r3, r1, r3
   2213c:	ldrb	r3, [r3]
   22140:	mov	r1, r3
   22144:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22148:	and	r3, r3, #1
   2214c:	cmp	r3, #0
   22150:	beq	2215c <rb_radixtree_elem_add+0x2e4>
   22154:	mov	r3, #0
   22158:	b	22160 <rb_radixtree_elem_add+0x2e8>
   2215c:	mov	r3, #4
   22160:	asr	r3, r1, r3
   22164:	eor	r3, r3, r2
   22168:	and	r3, r3, #15
   2216c:	cmp	r3, #0
   22170:	beq	220d0 <rb_radixtree_elem_add+0x258>
   22174:	b	22190 <rb_radixtree_elem_add+0x318>
   22178:	ldr	r3, [fp, #-12]
   2217c:	ldrb	r3, [r3, #72]	; 0x48
   22180:	str	r3, [fp, #-20]	; 0xffffffec
   22184:	ldr	r3, [fp, #-12]
   22188:	ldr	r3, [r3, #68]	; 0x44
   2218c:	str	r3, [fp, #-12]
   22190:	ldr	r3, [fp, #-12]
   22194:	cmp	r3, #0
   22198:	beq	221b0 <rb_radixtree_elem_add+0x338>
   2219c:	ldr	r3, [fp, #-12]
   221a0:	ldr	r3, [r3]
   221a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   221a8:	cmp	r2, r3
   221ac:	blt	22178 <rb_radixtree_elem_add+0x300>
   221b0:	ldr	r3, [fp, #-12]
   221b4:	cmp	r3, #0
   221b8:	beq	221d0 <rb_radixtree_elem_add+0x358>
   221bc:	ldr	r3, [fp, #-12]
   221c0:	ldr	r3, [r3]
   221c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   221c8:	cmp	r2, r3
   221cc:	ble	22560 <rb_radixtree_elem_add+0x6e8>
   221d0:	mov	r0, #76	; 0x4c
   221d4:	bl	212e0 <rb_malloc>
   221d8:	str	r0, [fp, #-16]
   221dc:	ldr	r3, [fp, #-16]
   221e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   221e4:	str	r2, [r3]
   221e8:	ldr	r3, [fp, #-16]
   221ec:	ldr	r2, [fp, #-12]
   221f0:	str	r2, [r3, #68]	; 0x44
   221f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   221f8:	uxtb	r2, r3
   221fc:	ldr	r3, [fp, #-16]
   22200:	strb	r2, [r3, #72]	; 0x48
   22204:	mov	r3, #0
   22208:	str	r3, [fp, #-28]	; 0xffffffe4
   2220c:	b	22234 <rb_radixtree_elem_add+0x3bc>
   22210:	ldr	r2, [fp, #-16]
   22214:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22218:	lsl	r3, r3, #2
   2221c:	add	r3, r2, r3
   22220:	mov	r2, #0
   22224:	str	r2, [r3, #4]
   22228:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2222c:	add	r3, r3, #1
   22230:	str	r3, [fp, #-28]	; 0xffffffe4
   22234:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22238:	cmp	r3, #15
   2223c:	ble	22210 <rb_radixtree_elem_add+0x398>
   22240:	ldr	r3, [fp, #-12]
   22244:	cmp	r3, #0
   22248:	bne	223ac <rb_radixtree_elem_add+0x534>
   2224c:	ldr	r3, [fp, #-8]
   22250:	ldr	r2, [r3, #8]
   22254:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22258:	lsr	r1, r3, #31
   2225c:	add	r3, r1, r3
   22260:	asr	r3, r3, #1
   22264:	add	r3, r2, r3
   22268:	ldrb	r3, [r3]
   2226c:	mov	r2, r3
   22270:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22274:	and	r3, r3, #1
   22278:	cmp	r3, #0
   2227c:	beq	22288 <rb_radixtree_elem_add+0x410>
   22280:	mov	r3, #0
   22284:	b	2228c <rb_radixtree_elem_add+0x414>
   22288:	mov	r3, #4
   2228c:	asr	r3, r2, r3
   22290:	and	r3, r3, #15
   22294:	ldr	r2, [fp, #-48]	; 0xffffffd0
   22298:	ldr	r2, [r2, #4]
   2229c:	ldr	r1, [fp, #-16]
   222a0:	lsl	r3, r3, #2
   222a4:	add	r3, r1, r3
   222a8:	str	r2, [r3, #4]
   222ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   222b0:	ldr	r3, [r3, #4]
   222b4:	ldr	r3, [r3]
   222b8:	cmn	r3, #1
   222bc:	bne	22330 <rb_radixtree_elem_add+0x4b8>
   222c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   222c4:	ldr	r3, [r3, #4]
   222c8:	ldr	r2, [fp, #-16]
   222cc:	str	r2, [r3, #12]
   222d0:	ldr	r3, [fp, #-8]
   222d4:	ldr	r2, [r3, #8]
   222d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   222dc:	lsr	r1, r3, #31
   222e0:	add	r3, r1, r3
   222e4:	asr	r3, r3, #1
   222e8:	add	r3, r2, r3
   222ec:	ldrb	r3, [r3]
   222f0:	mov	r2, r3
   222f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   222f8:	and	r3, r3, #1
   222fc:	cmp	r3, #0
   22300:	beq	2230c <rb_radixtree_elem_add+0x494>
   22304:	mov	r3, #0
   22308:	b	22310 <rb_radixtree_elem_add+0x498>
   2230c:	mov	r3, #4
   22310:	asr	r3, r2, r3
   22314:	uxtb	r2, r3
   22318:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2231c:	ldr	r3, [r3, #4]
   22320:	and	r2, r2, #15
   22324:	uxtb	r2, r2
   22328:	strb	r2, [r3, #16]
   2232c:	b	2239c <rb_radixtree_elem_add+0x524>
   22330:	ldr	r3, [fp, #-48]	; 0xffffffd0
   22334:	ldr	r3, [r3, #4]
   22338:	ldr	r2, [fp, #-16]
   2233c:	str	r2, [r3, #68]	; 0x44
   22340:	ldr	r3, [fp, #-8]
   22344:	ldr	r2, [r3, #8]
   22348:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2234c:	lsr	r1, r3, #31
   22350:	add	r3, r1, r3
   22354:	asr	r3, r3, #1
   22358:	add	r3, r2, r3
   2235c:	ldrb	r3, [r3]
   22360:	mov	r2, r3
   22364:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22368:	and	r3, r3, #1
   2236c:	cmp	r3, #0
   22370:	beq	2237c <rb_radixtree_elem_add+0x504>
   22374:	mov	r3, #0
   22378:	b	22380 <rb_radixtree_elem_add+0x508>
   2237c:	mov	r3, #4
   22380:	asr	r3, r2, r3
   22384:	uxtb	r2, r3
   22388:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2238c:	ldr	r3, [r3, #4]
   22390:	and	r2, r2, #15
   22394:	uxtb	r2, r2
   22398:	strb	r2, [r3, #72]	; 0x48
   2239c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   223a0:	ldr	r2, [fp, #-16]
   223a4:	str	r2, [r3, #4]
   223a8:	b	22568 <rb_radixtree_elem_add+0x6f0>
   223ac:	ldr	r3, [fp, #-8]
   223b0:	ldr	r2, [r3, #8]
   223b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   223b8:	lsr	r1, r3, #31
   223bc:	add	r3, r1, r3
   223c0:	asr	r3, r3, #1
   223c4:	add	r3, r2, r3
   223c8:	ldrb	r3, [r3]
   223cc:	mov	r2, r3
   223d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   223d4:	and	r3, r3, #1
   223d8:	cmp	r3, #0
   223dc:	beq	223e8 <rb_radixtree_elem_add+0x570>
   223e0:	mov	r3, #0
   223e4:	b	223ec <rb_radixtree_elem_add+0x574>
   223e8:	mov	r3, #4
   223ec:	asr	r3, r2, r3
   223f0:	and	r0, r3, #15
   223f4:	ldr	r2, [fp, #-12]
   223f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   223fc:	lsl	r3, r3, #2
   22400:	add	r3, r2, r3
   22404:	ldr	r2, [r3, #4]
   22408:	ldr	r1, [fp, #-16]
   2240c:	lsl	r3, r0, #2
   22410:	add	r3, r1, r3
   22414:	str	r2, [r3, #4]
   22418:	ldr	r2, [fp, #-12]
   2241c:	ldr	r3, [fp, #-20]	; 0xffffffec
   22420:	lsl	r3, r3, #2
   22424:	add	r3, r2, r3
   22428:	ldr	r3, [r3, #4]
   2242c:	ldr	r3, [r3]
   22430:	cmn	r3, #1
   22434:	bne	224c0 <rb_radixtree_elem_add+0x648>
   22438:	ldr	r2, [fp, #-12]
   2243c:	ldr	r3, [fp, #-20]	; 0xffffffec
   22440:	lsl	r3, r3, #2
   22444:	add	r3, r2, r3
   22448:	ldr	r3, [r3, #4]
   2244c:	ldr	r2, [fp, #-16]
   22450:	str	r2, [r3, #12]
   22454:	ldr	r3, [fp, #-8]
   22458:	ldr	r2, [r3, #8]
   2245c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22460:	lsr	r1, r3, #31
   22464:	add	r3, r1, r3
   22468:	asr	r3, r3, #1
   2246c:	add	r3, r2, r3
   22470:	ldrb	r3, [r3]
   22474:	mov	r2, r3
   22478:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2247c:	and	r3, r3, #1
   22480:	cmp	r3, #0
   22484:	beq	22490 <rb_radixtree_elem_add+0x618>
   22488:	mov	r3, #0
   2248c:	b	22494 <rb_radixtree_elem_add+0x61c>
   22490:	mov	r3, #4
   22494:	asr	r3, r2, r3
   22498:	uxtb	r2, r3
   2249c:	ldr	r1, [fp, #-12]
   224a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   224a4:	lsl	r3, r3, #2
   224a8:	add	r3, r1, r3
   224ac:	ldr	r3, [r3, #4]
   224b0:	and	r2, r2, #15
   224b4:	uxtb	r2, r2
   224b8:	strb	r2, [r3, #16]
   224bc:	b	22544 <rb_radixtree_elem_add+0x6cc>
   224c0:	ldr	r2, [fp, #-12]
   224c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   224c8:	lsl	r3, r3, #2
   224cc:	add	r3, r2, r3
   224d0:	ldr	r3, [r3, #4]
   224d4:	ldr	r2, [fp, #-16]
   224d8:	str	r2, [r3, #68]	; 0x44
   224dc:	ldr	r3, [fp, #-8]
   224e0:	ldr	r2, [r3, #8]
   224e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   224e8:	lsr	r1, r3, #31
   224ec:	add	r3, r1, r3
   224f0:	asr	r3, r3, #1
   224f4:	add	r3, r2, r3
   224f8:	ldrb	r3, [r3]
   224fc:	mov	r2, r3
   22500:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22504:	and	r3, r3, #1
   22508:	cmp	r3, #0
   2250c:	beq	22518 <rb_radixtree_elem_add+0x6a0>
   22510:	mov	r3, #0
   22514:	b	2251c <rb_radixtree_elem_add+0x6a4>
   22518:	mov	r3, #4
   2251c:	asr	r3, r2, r3
   22520:	uxtb	r2, r3
   22524:	ldr	r1, [fp, #-12]
   22528:	ldr	r3, [fp, #-20]	; 0xffffffec
   2252c:	lsl	r3, r3, #2
   22530:	add	r3, r1, r3
   22534:	ldr	r3, [r3, #4]
   22538:	and	r2, r2, #15
   2253c:	uxtb	r2, r2
   22540:	strb	r2, [r3, #72]	; 0x48
   22544:	ldr	r2, [fp, #-12]
   22548:	ldr	r3, [fp, #-20]	; 0xffffffec
   2254c:	lsl	r3, r3, #2
   22550:	add	r3, r2, r3
   22554:	ldr	r2, [fp, #-16]
   22558:	str	r2, [r3, #4]
   2255c:	b	22568 <rb_radixtree_elem_add+0x6f0>
   22560:	ldr	r3, [fp, #-12]
   22564:	str	r3, [fp, #-16]
   22568:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2256c:	lsr	r2, r3, #31
   22570:	add	r3, r2, r3
   22574:	asr	r3, r3, #1
   22578:	mov	r2, r3
   2257c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22580:	add	r3, r3, r2
   22584:	ldrb	r3, [r3]
   22588:	mov	r2, r3
   2258c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22590:	and	r3, r3, #1
   22594:	cmp	r3, #0
   22598:	beq	225a4 <rb_radixtree_elem_add+0x72c>
   2259c:	mov	r3, #0
   225a0:	b	225a8 <rb_radixtree_elem_add+0x730>
   225a4:	mov	r3, #4
   225a8:	asr	r3, r2, r3
   225ac:	and	r3, r3, #15
   225b0:	str	r3, [fp, #-20]	; 0xffffffec
   225b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   225b8:	lsl	r3, r3, #2
   225bc:	ldr	r2, [fp, #-16]
   225c0:	add	r3, r2, r3
   225c4:	add	r3, r3, #4
   225c8:	str	r3, [fp, #-40]	; 0xffffffd8
   225cc:	mov	r0, #20
   225d0:	bl	212e0 <rb_malloc>
   225d4:	mov	r2, r0
   225d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   225dc:	str	r2, [r3]
   225e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   225e4:	ldr	r3, [r3]
   225e8:	mvn	r2, #0
   225ec:	str	r2, [r3]
   225f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   225f4:	ldr	r3, [r3]
   225f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   225fc:	str	r2, [r3, #4]
   22600:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22604:	ldr	r3, [r3]
   22608:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2260c:	str	r2, [r3, #8]
   22610:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22614:	ldr	r3, [r3]
   22618:	ldr	r2, [fp, #-16]
   2261c:	str	r2, [r3, #12]
   22620:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22624:	ldr	r3, [r3]
   22628:	ldr	r2, [fp, #-20]	; 0xffffffec
   2262c:	uxtb	r2, r2
   22630:	strb	r2, [r3, #16]
   22634:	ldr	r3, [fp, #-48]	; 0xffffffd0
   22638:	ldr	r3, [r3, #8]
   2263c:	add	r2, r3, #1
   22640:	ldr	r3, [fp, #-48]	; 0xffffffd0
   22644:	str	r2, [r3, #8]
   22648:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2264c:	ldr	r3, [r3]
   22650:	mov	r0, r3
   22654:	sub	sp, fp, #4
   22658:	ldr	fp, [sp]
   2265c:	add	sp, sp, #4
   22660:	pop	{pc}		; (ldr pc, [sp], #4)

00022664 <rb_radixtree_add>:
   22664:	str	fp, [sp, #-8]!
   22668:	str	lr, [sp, #4]
   2266c:	add	fp, sp, #4
   22670:	sub	sp, sp, #16
   22674:	str	r0, [fp, #-8]
   22678:	str	r1, [fp, #-12]
   2267c:	str	r2, [fp, #-16]
   22680:	ldr	r2, [fp, #-16]
   22684:	ldr	r1, [fp, #-12]
   22688:	ldr	r0, [fp, #-8]
   2268c:	bl	4744 <rb_radixtree_elem_add@plt>
   22690:	mov	r3, r0
   22694:	cmp	r3, #0
   22698:	movne	r3, #1
   2269c:	moveq	r3, #0
   226a0:	uxtb	r3, r3
   226a4:	mov	r0, r3
   226a8:	sub	sp, fp, #4
   226ac:	ldr	fp, [sp]
   226b0:	add	sp, sp, #4
   226b4:	pop	{pc}		; (ldr pc, [sp], #4)

000226b8 <rb_radixtree_delete>:
   226b8:	str	fp, [sp, #-8]!
   226bc:	str	lr, [sp, #4]
   226c0:	add	fp, sp, #4
   226c4:	sub	sp, sp, #16
   226c8:	str	r0, [fp, #-16]
   226cc:	str	r1, [fp, #-20]	; 0xffffffec
   226d0:	mov	r2, #0
   226d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   226d8:	ldr	r0, [fp, #-16]
   226dc:	bl	4ba0 <rb_radixtree_elem_find@plt>
   226e0:	str	r0, [fp, #-8]
   226e4:	ldr	r3, [fp, #-8]
   226e8:	cmp	r3, #0
   226ec:	bne	226f8 <rb_radixtree_delete+0x40>
   226f0:	mov	r3, #0
   226f4:	b	22714 <rb_radixtree_delete+0x5c>
   226f8:	ldr	r3, [fp, #-8]
   226fc:	ldr	r3, [r3, #4]
   22700:	str	r3, [fp, #-12]
   22704:	ldr	r1, [fp, #-8]
   22708:	ldr	r0, [fp, #-16]
   2270c:	bl	43cc <rb_radixtree_elem_delete@plt>
   22710:	ldr	r3, [fp, #-12]
   22714:	mov	r0, r3
   22718:	sub	sp, fp, #4
   2271c:	ldr	fp, [sp]
   22720:	add	sp, sp, #4
   22724:	pop	{pc}		; (ldr pc, [sp], #4)

00022728 <rb_radixtree_elem_delete>:
   22728:	str	fp, [sp, #-8]!
   2272c:	str	lr, [sp, #4]
   22730:	add	fp, sp, #4
   22734:	sub	sp, sp, #32
   22738:	str	r0, [fp, #-32]	; 0xffffffe0
   2273c:	str	r1, [fp, #-36]	; 0xffffffdc
   22740:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22744:	str	r3, [fp, #-16]
   22748:	ldr	r3, [fp, #-16]
   2274c:	ldrb	r3, [r3, #16]
   22750:	str	r3, [fp, #-20]	; 0xffffffec
   22754:	ldr	r3, [fp, #-16]
   22758:	ldr	r3, [r3, #12]
   2275c:	str	r3, [fp, #-24]	; 0xffffffe8
   22760:	ldr	r3, [fp, #-16]
   22764:	ldr	r3, [r3, #8]
   22768:	mov	r0, r3
   2276c:	bl	213b8 <rb_free>
   22770:	ldr	r0, [fp, #-16]
   22774:	bl	213b8 <rb_free>
   22778:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2277c:	cmp	r3, #0
   22780:	beq	228d0 <rb_radixtree_elem_delete+0x1a8>
   22784:	ldr	r2, [fp, #-24]	; 0xffffffe8
   22788:	ldr	r3, [fp, #-20]	; 0xffffffec
   2278c:	lsl	r3, r3, #2
   22790:	add	r3, r2, r3
   22794:	mov	r2, #0
   22798:	str	r2, [r3, #4]
   2279c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   227a0:	str	r3, [fp, #-16]
   227a4:	mvn	r3, #0
   227a8:	str	r3, [fp, #-12]
   227ac:	mov	r3, #0
   227b0:	str	r3, [fp, #-8]
   227b4:	b	227fc <rb_radixtree_elem_delete+0xd4>
   227b8:	ldr	r2, [fp, #-16]
   227bc:	ldr	r3, [fp, #-8]
   227c0:	lsl	r3, r3, #2
   227c4:	add	r3, r2, r3
   227c8:	ldr	r3, [r3, #4]
   227cc:	cmp	r3, #0
   227d0:	beq	227f0 <rb_radixtree_elem_delete+0xc8>
   227d4:	ldr	r3, [fp, #-12]
   227d8:	cmn	r3, #1
   227dc:	bne	227e8 <rb_radixtree_elem_delete+0xc0>
   227e0:	ldr	r3, [fp, #-8]
   227e4:	b	227ec <rb_radixtree_elem_delete+0xc4>
   227e8:	mvn	r3, #1
   227ec:	str	r3, [fp, #-12]
   227f0:	ldr	r3, [fp, #-8]
   227f4:	add	r3, r3, #1
   227f8:	str	r3, [fp, #-8]
   227fc:	ldr	r3, [fp, #-8]
   22800:	cmp	r3, #15
   22804:	ble	227b8 <rb_radixtree_elem_delete+0x90>
   22808:	ldr	r3, [fp, #-12]
   2280c:	cmp	r3, #0
   22810:	blt	228dc <rb_radixtree_elem_delete+0x1b4>
   22814:	ldr	r2, [fp, #-16]
   22818:	ldr	r3, [fp, #-12]
   2281c:	lsl	r3, r3, #2
   22820:	add	r3, r2, r3
   22824:	ldr	r3, [r3, #4]
   22828:	str	r3, [fp, #-28]	; 0xffffffe4
   2282c:	ldr	r3, [fp, #-16]
   22830:	ldrb	r3, [r3, #72]	; 0x48
   22834:	str	r3, [fp, #-20]	; 0xffffffec
   22838:	ldr	r3, [fp, #-16]
   2283c:	ldr	r3, [r3, #68]	; 0x44
   22840:	str	r3, [fp, #-24]	; 0xffffffe8
   22844:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22848:	cmp	r3, #0
   2284c:	beq	2286c <rb_radixtree_elem_delete+0x144>
   22850:	ldr	r2, [fp, #-24]	; 0xffffffe8
   22854:	ldr	r3, [fp, #-20]	; 0xffffffec
   22858:	lsl	r3, r3, #2
   2285c:	add	r3, r2, r3
   22860:	ldr	r2, [fp, #-28]	; 0xffffffe4
   22864:	str	r2, [r3, #4]
   22868:	b	22878 <rb_radixtree_elem_delete+0x150>
   2286c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22870:	ldr	r2, [fp, #-28]	; 0xffffffe4
   22874:	str	r2, [r3, #4]
   22878:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2287c:	ldr	r3, [r3]
   22880:	cmn	r3, #1
   22884:	bne	228a8 <rb_radixtree_elem_delete+0x180>
   22888:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2288c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   22890:	str	r2, [r3, #12]
   22894:	ldr	r3, [fp, #-20]	; 0xffffffec
   22898:	uxtb	r2, r3
   2289c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   228a0:	strb	r2, [r3, #16]
   228a4:	b	228c4 <rb_radixtree_elem_delete+0x19c>
   228a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   228ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   228b0:	str	r2, [r3, #68]	; 0x44
   228b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   228b8:	uxtb	r2, r3
   228bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   228c0:	strb	r2, [r3, #72]	; 0x48
   228c4:	ldr	r0, [fp, #-16]
   228c8:	bl	213b8 <rb_free>
   228cc:	b	228dc <rb_radixtree_elem_delete+0x1b4>
   228d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   228d4:	mov	r2, #0
   228d8:	str	r2, [r3, #4]
   228dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   228e0:	ldr	r3, [r3, #8]
   228e4:	sub	r2, r3, #1
   228e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   228ec:	str	r2, [r3, #8]
   228f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   228f4:	ldr	r3, [r3, #8]
   228f8:	cmp	r3, #0
   228fc:	bne	2290c <rb_radixtree_elem_delete+0x1e4>
   22900:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22904:	mov	r2, #0
   22908:	str	r2, [r3, #4]
   2290c:	nop	{0}
   22910:	sub	sp, fp, #4
   22914:	ldr	fp, [sp]
   22918:	add	sp, sp, #4
   2291c:	pop	{pc}		; (ldr pc, [sp], #4)

00022920 <rb_radixtree_retrieve>:
   22920:	str	fp, [sp, #-8]!
   22924:	str	lr, [sp, #4]
   22928:	add	fp, sp, #4
   2292c:	sub	sp, sp, #16
   22930:	str	r0, [fp, #-16]
   22934:	str	r1, [fp, #-20]	; 0xffffffec
   22938:	mov	r2, #0
   2293c:	ldr	r1, [fp, #-20]	; 0xffffffec
   22940:	ldr	r0, [fp, #-16]
   22944:	bl	4ba0 <rb_radixtree_elem_find@plt>
   22948:	str	r0, [fp, #-8]
   2294c:	ldr	r3, [fp, #-8]
   22950:	cmp	r3, #0
   22954:	beq	22964 <rb_radixtree_retrieve+0x44>
   22958:	ldr	r3, [fp, #-8]
   2295c:	ldr	r3, [r3, #4]
   22960:	b	22968 <rb_radixtree_retrieve+0x48>
   22964:	mov	r3, #0
   22968:	mov	r0, r3
   2296c:	sub	sp, fp, #4
   22970:	ldr	fp, [sp]
   22974:	add	sp, sp, #4
   22978:	pop	{pc}		; (ldr pc, [sp], #4)

0002297c <rb_radixtree_elem_get_key>:
   2297c:	push	{fp}		; (str fp, [sp, #-4]!)
   22980:	add	fp, sp, #0
   22984:	sub	sp, sp, #12
   22988:	str	r0, [fp, #-8]
   2298c:	ldr	r3, [fp, #-8]
   22990:	ldr	r3, [r3, #8]
   22994:	mov	r0, r3
   22998:	add	sp, fp, #0
   2299c:	pop	{fp}		; (ldr fp, [sp], #4)
   229a0:	bx	lr

000229a4 <rb_radixtree_elem_set_data>:
   229a4:	push	{fp}		; (str fp, [sp, #-4]!)
   229a8:	add	fp, sp, #0
   229ac:	sub	sp, sp, #12
   229b0:	str	r0, [fp, #-8]
   229b4:	str	r1, [fp, #-12]
   229b8:	ldr	r3, [fp, #-8]
   229bc:	ldr	r2, [fp, #-12]
   229c0:	str	r2, [r3, #4]
   229c4:	nop	{0}
   229c8:	add	sp, fp, #0
   229cc:	pop	{fp}		; (ldr fp, [sp], #4)
   229d0:	bx	lr

000229d4 <rb_radixtree_elem_get_data>:
   229d4:	push	{fp}		; (str fp, [sp, #-4]!)
   229d8:	add	fp, sp, #0
   229dc:	sub	sp, sp, #12
   229e0:	str	r0, [fp, #-8]
   229e4:	ldr	r3, [fp, #-8]
   229e8:	ldr	r3, [r3, #4]
   229ec:	mov	r0, r3
   229f0:	add	sp, fp, #0
   229f4:	pop	{fp}		; (ldr fp, [sp], #4)
   229f8:	bx	lr

000229fc <rb_radixtree_size>:
   229fc:	push	{fp}		; (str fp, [sp, #-4]!)
   22a00:	add	fp, sp, #0
   22a04:	sub	sp, sp, #12
   22a08:	str	r0, [fp, #-8]
   22a0c:	ldr	r3, [fp, #-8]
   22a10:	ldr	r3, [r3, #8]
   22a14:	mov	r0, r3
   22a18:	add	sp, fp, #0
   22a1c:	pop	{fp}		; (ldr fp, [sp], #4)
   22a20:	bx	lr

00022a24 <stats_recurse>:
   22a24:	str	fp, [sp, #-8]!
   22a28:	str	lr, [sp, #4]
   22a2c:	add	fp, sp, #4
   22a30:	sub	sp, sp, #32
   22a34:	str	r0, [fp, #-24]	; 0xffffffe8
   22a38:	str	r1, [fp, #-28]	; 0xffffffe4
   22a3c:	str	r2, [fp, #-32]	; 0xffffffe0
   22a40:	mov	r3, #0
   22a44:	str	r3, [fp, #-8]
   22a48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22a4c:	ldr	r3, [r3]
   22a50:	ldr	r2, [fp, #-28]	; 0xffffffe4
   22a54:	cmp	r2, r3
   22a58:	ble	22a68 <stats_recurse+0x44>
   22a5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22a60:	ldr	r2, [fp, #-28]	; 0xffffffe4
   22a64:	str	r2, [r3]
   22a68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22a6c:	cmp	r3, #0
   22a70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22a74:	ldr	r3, [r3]
   22a78:	cmn	r3, #1
   22a7c:	bne	22a88 <stats_recurse+0x64>
   22a80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22a84:	b	22b04 <stats_recurse+0xe0>
   22a88:	mov	r3, #0
   22a8c:	str	r3, [fp, #-12]
   22a90:	b	22af4 <stats_recurse+0xd0>
   22a94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   22a98:	ldr	r3, [fp, #-12]
   22a9c:	lsl	r3, r3, #2
   22aa0:	add	r3, r2, r3
   22aa4:	ldr	r3, [r3, #4]
   22aa8:	str	r3, [fp, #-16]
   22aac:	ldr	r3, [fp, #-16]
   22ab0:	cmp	r3, #0
   22ab4:	beq	22ae4 <stats_recurse+0xc0>
   22ab8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22abc:	add	r3, r3, #1
   22ac0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22ac4:	mov	r1, r3
   22ac8:	ldr	r0, [fp, #-16]
   22acc:	bl	22a24 <stats_recurse>
   22ad0:	mov	r2, r0
   22ad4:	ldr	r3, [fp, #-8]
   22ad8:	add	r3, r3, r2
   22adc:	str	r3, [fp, #-8]
   22ae0:	b	22ae8 <stats_recurse+0xc4>
   22ae4:	nop	{0}
   22ae8:	ldr	r3, [fp, #-12]
   22aec:	add	r3, r3, #1
   22af0:	str	r3, [fp, #-12]
   22af4:	ldr	r3, [fp, #-12]
   22af8:	cmp	r3, #15
   22afc:	ble	22a94 <stats_recurse+0x70>
   22b00:	ldr	r3, [fp, #-8]
   22b04:	mov	r0, r3
   22b08:	sub	sp, fp, #4
   22b0c:	ldr	fp, [sp]
   22b10:	add	sp, sp, #4
   22b14:	pop	{pc}		; (ldr pc, [sp], #4)

00022b18 <rb_radixtree_stats>:
   22b18:	str	fp, [sp, #-8]!
   22b1c:	str	lr, [sp, #4]
   22b20:	add	fp, sp, #4
   22b24:	sub	sp, sp, #304	; 0x130
   22b28:	str	r0, [fp, #-272]	; 0xfffffef0
   22b2c:	str	r1, [fp, #-276]	; 0xfffffeec
   22b30:	str	r2, [fp, #-280]	; 0xfffffee8
   22b34:	mov	r3, #0
   22b38:	str	r3, [fp, #-268]	; 0xfffffef4
   22b3c:	ldr	r3, [fp, #-272]	; 0xfffffef0
   22b40:	ldr	r3, [r3, #8]
   22b44:	cmp	r3, #0
   22b48:	beq	22bc8 <rb_radixtree_stats+0xb0>
   22b4c:	ldr	r3, [fp, #-272]	; 0xfffffef0
   22b50:	ldr	r3, [r3, #4]
   22b54:	sub	r2, fp, #268	; 0x10c
   22b58:	mov	r1, #0
   22b5c:	mov	r0, r3
   22b60:	bl	22a24 <stats_recurse>
   22b64:	str	r0, [fp, #-8]
   22b68:	ldr	r3, [fp, #-272]	; 0xfffffef0
   22b6c:	ldr	ip, [r3, #12]
   22b70:	ldr	r3, [fp, #-272]	; 0xfffffef0
   22b74:	ldr	r3, [r3, #8]
   22b78:	ldr	r1, [fp, #-8]
   22b7c:	ldr	r2, [fp, #-272]	; 0xfffffef0
   22b80:	ldr	r2, [r2, #8]
   22b84:	udiv	r2, r1, r2
   22b88:	ldr	r1, [fp, #-268]	; 0xfffffef4
   22b8c:	sub	r0, fp, #264	; 0x108
   22b90:	str	r1, [sp, #16]
   22b94:	str	r2, [sp, #12]
   22b98:	ldr	r2, [fp, #-8]
   22b9c:	str	r2, [sp, #8]
   22ba0:	str	r3, [sp, #4]
   22ba4:	ldr	r3, [pc, #156]	; 22c48 <rb_radixtree_stats+0x130>
   22ba8:	add	r3, pc, r3
   22bac:	str	r3, [sp]
   22bb0:	mov	r3, ip
   22bb4:	ldr	r2, [pc, #144]	; 22c4c <rb_radixtree_stats+0x134>
   22bb8:	add	r2, pc, r2
   22bbc:	mov	r1, #256	; 0x100
   22bc0:	bl	4bdc <snprintf@plt>
   22bc4:	b	22c20 <rb_radixtree_stats+0x108>
   22bc8:	ldr	r3, [fp, #-272]	; 0xfffffef0
   22bcc:	ldr	r3, [r3, #12]
   22bd0:	sub	r0, fp, #264	; 0x108
   22bd4:	ldr	r2, [pc, #116]	; 22c50 <rb_radixtree_stats+0x138>
   22bd8:	add	r2, pc, r2
   22bdc:	str	r2, [sp, #16]
   22be0:	ldr	r2, [pc, #108]	; 22c54 <rb_radixtree_stats+0x13c>
   22be4:	add	r2, pc, r2
   22be8:	str	r2, [sp, #12]
   22bec:	ldr	r2, [pc, #100]	; 22c58 <rb_radixtree_stats+0x140>
   22bf0:	add	r2, pc, r2
   22bf4:	str	r2, [sp, #8]
   22bf8:	ldr	r2, [pc, #92]	; 22c5c <rb_radixtree_stats+0x144>
   22bfc:	add	r2, pc, r2
   22c00:	str	r2, [sp, #4]
   22c04:	ldr	r2, [pc, #84]	; 22c60 <rb_radixtree_stats+0x148>
   22c08:	add	r2, pc, r2
   22c0c:	str	r2, [sp]
   22c10:	ldr	r2, [pc, #76]	; 22c64 <rb_radixtree_stats+0x14c>
   22c14:	add	r2, pc, r2
   22c18:	mov	r1, #256	; 0x100
   22c1c:	bl	4bdc <snprintf@plt>
   22c20:	sub	r2, fp, #264	; 0x108
   22c24:	ldr	r3, [fp, #-276]	; 0xfffffeec
   22c28:	ldr	r1, [fp, #-280]	; 0xfffffee8
   22c2c:	mov	r0, r2
   22c30:	blx	r3
   22c34:	nop	{0}
   22c38:	sub	sp, fp, #4
   22c3c:	ldr	fp, [sp]
   22c40:	add	sp, sp, #4
   22c44:	pop	{pc}		; (ldr pc, [sp], #4)
   22c48:	.word	0x00001ec4
   22c4c:	.word	0x00001e90
   22c50:	.word	0x00001ec0
   22c54:	.word	0x00001eb4
   22c58:	.word	0x00001ea8
   22c5c:	.word	0x00001e9c
   22c60:	.word	0x00001e64
   22c64:	.word	0x00001e60

00022c68 <rb_radixtree_stats_walk>:
   22c68:	str	fp, [sp, #-8]!
   22c6c:	str	lr, [sp, #4]
   22c70:	add	fp, sp, #4
   22c74:	sub	sp, sp, #16
   22c78:	str	r0, [fp, #-16]
   22c7c:	str	r1, [fp, #-20]	; 0xffffffec
   22c80:	ldr	r2, [pc, #88]	; 22ce0 <rb_radixtree_stats_walk+0x78>
   22c84:	add	r2, pc, r2
   22c88:	ldr	r3, [pc, #84]	; 22ce4 <rb_radixtree_stats_walk+0x7c>
   22c8c:	ldr	r3, [r2, r3]
   22c90:	ldr	r3, [r3]
   22c94:	str	r3, [fp, #-8]
   22c98:	b	22cc0 <rb_radixtree_stats_walk+0x58>
   22c9c:	ldr	r3, [fp, #-8]
   22ca0:	ldr	r3, [r3]
   22ca4:	ldr	r2, [fp, #-20]	; 0xffffffec
   22ca8:	ldr	r1, [fp, #-16]
   22cac:	mov	r0, r3
   22cb0:	bl	4660 <rb_radixtree_stats@plt>
   22cb4:	ldr	r3, [fp, #-8]
   22cb8:	ldr	r3, [r3, #8]
   22cbc:	str	r3, [fp, #-8]
   22cc0:	ldr	r3, [fp, #-8]
   22cc4:	cmp	r3, #0
   22cc8:	bne	22c9c <rb_radixtree_stats_walk+0x34>
   22ccc:	nop	{0}
   22cd0:	sub	sp, fp, #4
   22cd4:	ldr	fp, [sp]
   22cd8:	add	sp, sp, #4
   22cdc:	pop	{pc}		; (ldr pc, [sp], #4)
   22ce0:	.word	0x00012374
   22ce4:	.word	0x000003f8

00022ce8 <__stat>:
   22ce8:	mov	r2, r1
   22cec:	mov	r1, r0
   22cf0:	mov	r0, #3
   22cf4:	b	44b0 <__xstat@plt>

00022cf8 <__fstat>:
   22cf8:	mov	r2, r1
   22cfc:	mov	r1, r0
   22d00:	mov	r0, #3
   22d04:	b	4b88 <__fxstat@plt>

Disassembly of section .fini:

00022d08 <_fini>:
   22d08:	push	{r3, lr}
   22d0c:	pop	{r3, pc}
