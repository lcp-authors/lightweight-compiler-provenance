
../repos/coreutils/src/mkfifo:     file format elf32-littlearm


Disassembly of section .init:

00011668 <.init>:
   11668:	push	{r3, lr}
   1166c:	bl	11ae4 <__assert_fail@plt+0x48>
   11670:	pop	{r3, pc}

Disassembly of section .plt:

00011674 <fstatfs64@plt-0x14>:
   11674:	push	{lr}		; (str lr, [sp, #-4]!)
   11678:	ldr	lr, [pc, #4]	; 11684 <fstatfs64@plt-0x4>
   1167c:	add	lr, pc, lr
   11680:	ldr	pc, [lr, #8]!
   11684:	andeq	sl, r1, ip, ror r9

00011688 <fstatfs64@plt>:
   11688:	add	ip, pc, #0, 12
   1168c:	add	ip, ip, #106496	; 0x1a000
   11690:	ldr	pc, [ip, #2428]!	; 0x97c

00011694 <selabel_lookup@plt>:
   11694:	add	ip, pc, #0, 12
   11698:	add	ip, ip, #106496	; 0x1a000
   1169c:	ldr	pc, [ip, #2420]!	; 0x974

000116a0 <calloc@plt>:
   116a0:	add	ip, pc, #0, 12
   116a4:	add	ip, ip, #106496	; 0x1a000
   116a8:	ldr	pc, [ip, #2412]!	; 0x96c

000116ac <fputs_unlocked@plt>:
   116ac:	add	ip, pc, #0, 12
   116b0:	add	ip, ip, #106496	; 0x1a000
   116b4:	ldr	pc, [ip, #2404]!	; 0x964

000116b8 <raise@plt>:
   116b8:	add	ip, pc, #0, 12
   116bc:	add	ip, ip, #106496	; 0x1a000
   116c0:	ldr	pc, [ip, #2396]!	; 0x95c

000116c4 <is_selinux_enabled@plt>:
   116c4:	add	ip, pc, #0, 12
   116c8:	add	ip, ip, #106496	; 0x1a000
   116cc:	ldr	pc, [ip, #2388]!	; 0x954

000116d0 <strcmp@plt>:
   116d0:	add	ip, pc, #0, 12
   116d4:	add	ip, ip, #106496	; 0x1a000
   116d8:	ldr	pc, [ip, #2380]!	; 0x94c

000116dc <context_type_get@plt>:
   116dc:	add	ip, pc, #0, 12
   116e0:	add	ip, ip, #106496	; 0x1a000
   116e4:	ldr	pc, [ip, #2372]!	; 0x944

000116e8 <fflush@plt>:
   116e8:	add	ip, pc, #0, 12
   116ec:	add	ip, ip, #106496	; 0x1a000
   116f0:	ldr	pc, [ip, #2364]!	; 0x93c

000116f4 <lsetfilecon@plt>:
   116f4:	add	ip, pc, #0, 12
   116f8:	add	ip, ip, #106496	; 0x1a000
   116fc:	ldr	pc, [ip, #2356]!	; 0x934

00011700 <memmove@plt>:
   11700:	add	ip, pc, #0, 12
   11704:	add	ip, ip, #106496	; 0x1a000
   11708:	ldr	pc, [ip, #2348]!	; 0x92c

0001170c <free@plt>:
   1170c:	add	ip, pc, #0, 12
   11710:	add	ip, ip, #106496	; 0x1a000
   11714:	ldr	pc, [ip, #2340]!	; 0x924

00011718 <faccessat@plt>:
   11718:	add	ip, pc, #0, 12
   1171c:	add	ip, ip, #106496	; 0x1a000
   11720:	ldr	pc, [ip, #2332]!	; 0x91c

00011724 <_exit@plt>:
   11724:	add	ip, pc, #0, 12
   11728:	add	ip, ip, #106496	; 0x1a000
   1172c:	ldr	pc, [ip, #2324]!	; 0x914

00011730 <memcpy@plt>:
   11730:	add	ip, pc, #0, 12
   11734:	add	ip, ip, #106496	; 0x1a000
   11738:	ldr	pc, [ip, #2316]!	; 0x90c

0001173c <mbsinit@plt>:
   1173c:	add	ip, pc, #0, 12
   11740:	add	ip, ip, #106496	; 0x1a000
   11744:	ldr	pc, [ip, #2308]!	; 0x904

00011748 <context_new@plt>:
   11748:	add	ip, pc, #0, 12
   1174c:	add	ip, ip, #106496	; 0x1a000
   11750:	ldr	pc, [ip, #2300]!	; 0x8fc

00011754 <memcmp@plt>:
   11754:	add	ip, pc, #0, 12
   11758:	add	ip, ip, #106496	; 0x1a000
   1175c:	ldr	pc, [ip, #2292]!	; 0x8f4

00011760 <dcgettext@plt>:
   11760:	add	ip, pc, #0, 12
   11764:	add	ip, ip, #106496	; 0x1a000
   11768:	ldr	pc, [ip, #2284]!	; 0x8ec

0001176c <context_type_set@plt>:
   1176c:	add	ip, pc, #0, 12
   11770:	add	ip, ip, #106496	; 0x1a000
   11774:	ldr	pc, [ip, #2276]!	; 0x8e4

00011778 <realloc@plt>:
   11778:	add	ip, pc, #0, 12
   1177c:	add	ip, ip, #106496	; 0x1a000
   11780:	ldr	pc, [ip, #2268]!	; 0x8dc

00011784 <fgetfilecon@plt>:
   11784:	add	ip, pc, #0, 12
   11788:	add	ip, ip, #106496	; 0x1a000
   1178c:	ldr	pc, [ip, #2260]!	; 0x8d4

00011790 <textdomain@plt>:
   11790:	add	ip, pc, #0, 12
   11794:	add	ip, ip, #106496	; 0x1a000
   11798:	ldr	pc, [ip, #2252]!	; 0x8cc

0001179c <rawmemchr@plt>:
   1179c:	add	ip, pc, #0, 12
   117a0:	add	ip, ip, #106496	; 0x1a000
   117a4:	ldr	pc, [ip, #2244]!	; 0x8c4

000117a8 <__fxstatat64@plt>:
   117a8:	add	ip, pc, #0, 12
   117ac:	add	ip, ip, #106496	; 0x1a000
   117b0:	ldr	pc, [ip, #2236]!	; 0x8bc

000117b4 <iswprint@plt>:
   117b4:	add	ip, pc, #0, 12
   117b8:	add	ip, ip, #106496	; 0x1a000
   117bc:	ldr	pc, [ip, #2228]!	; 0x8b4

000117c0 <__fxstat64@plt>:
   117c0:	add	ip, pc, #0, 12
   117c4:	add	ip, ip, #106496	; 0x1a000
   117c8:	ldr	pc, [ip, #2220]!	; 0x8ac

000117cc <readlink@plt>:
   117cc:	add	ip, pc, #0, 12
   117d0:	add	ip, ip, #106496	; 0x1a000
   117d4:	ldr	pc, [ip, #2212]!	; 0x8a4

000117d8 <fwrite@plt>:
   117d8:	add	ip, pc, #0, 12
   117dc:	add	ip, ip, #106496	; 0x1a000
   117e0:	ldr	pc, [ip, #2204]!	; 0x89c

000117e4 <lseek64@plt>:
   117e4:	add	ip, pc, #0, 12
   117e8:	add	ip, ip, #106496	; 0x1a000
   117ec:	ldr	pc, [ip, #2196]!	; 0x894

000117f0 <__ctype_get_mb_cur_max@plt>:
   117f0:	add	ip, pc, #0, 12
   117f4:	add	ip, ip, #106496	; 0x1a000
   117f8:	ldr	pc, [ip, #2188]!	; 0x88c

000117fc <getcon@plt>:
   117fc:	add	ip, pc, #0, 12
   11800:	add	ip, ip, #106496	; 0x1a000
   11804:	ldr	pc, [ip, #2180]!	; 0x884

00011808 <__fpending@plt>:
   11808:	add	ip, pc, #0, 12
   1180c:	add	ip, ip, #106496	; 0x1a000
   11810:	ldr	pc, [ip, #2172]!	; 0x87c

00011814 <mbrtowc@plt>:
   11814:	add	ip, pc, #0, 12
   11818:	add	ip, ip, #106496	; 0x1a000
   1181c:	ldr	pc, [ip, #2164]!	; 0x874

00011820 <error@plt>:
   11820:	add	ip, pc, #0, 12
   11824:	add	ip, ip, #106496	; 0x1a000
   11828:	ldr	pc, [ip, #2156]!	; 0x86c

0001182c <open64@plt>:
   1182c:	add	ip, pc, #0, 12
   11830:	add	ip, ip, #106496	; 0x1a000
   11834:	ldr	pc, [ip, #2148]!	; 0x864

00011838 <lgetfilecon@plt>:
   11838:	add	ip, pc, #0, 12
   1183c:	add	ip, ip, #106496	; 0x1a000
   11840:	ldr	pc, [ip, #2140]!	; 0x85c

00011844 <malloc@plt>:
   11844:	add	ip, pc, #0, 12
   11848:	add	ip, ip, #106496	; 0x1a000
   1184c:	ldr	pc, [ip, #2132]!	; 0x854

00011850 <__libc_start_main@plt>:
   11850:	add	ip, pc, #0, 12
   11854:	add	ip, ip, #106496	; 0x1a000
   11858:	ldr	pc, [ip, #2124]!	; 0x84c

0001185c <__freading@plt>:
   1185c:	add	ip, pc, #0, 12
   11860:	add	ip, ip, #106496	; 0x1a000
   11864:	ldr	pc, [ip, #2116]!	; 0x844

00011868 <__gmon_start__@plt>:
   11868:	add	ip, pc, #0, 12
   1186c:	add	ip, ip, #106496	; 0x1a000
   11870:	ldr	pc, [ip, #2108]!	; 0x83c

00011874 <context_free@plt>:
   11874:	add	ip, pc, #0, 12
   11878:	add	ip, ip, #106496	; 0x1a000
   1187c:	ldr	pc, [ip, #2100]!	; 0x834

00011880 <getopt_long@plt>:
   11880:	add	ip, pc, #0, 12
   11884:	add	ip, ip, #106496	; 0x1a000
   11888:	ldr	pc, [ip, #2092]!	; 0x82c

0001188c <__ctype_b_loc@plt>:
   1188c:	add	ip, pc, #0, 12
   11890:	add	ip, ip, #106496	; 0x1a000
   11894:	ldr	pc, [ip, #2084]!	; 0x824

00011898 <getcwd@plt>:
   11898:	add	ip, pc, #0, 12
   1189c:	add	ip, ip, #106496	; 0x1a000
   118a0:	ldr	pc, [ip, #2076]!	; 0x81c

000118a4 <exit@plt>:
   118a4:	add	ip, pc, #0, 12
   118a8:	add	ip, ip, #106496	; 0x1a000
   118ac:	ldr	pc, [ip, #2068]!	; 0x814

000118b0 <getfilecon@plt>:
   118b0:	add	ip, pc, #0, 12
   118b4:	add	ip, ip, #106496	; 0x1a000
   118b8:	ldr	pc, [ip, #2060]!	; 0x80c

000118bc <strlen@plt>:
   118bc:	add	ip, pc, #0, 12
   118c0:	add	ip, ip, #106496	; 0x1a000
   118c4:	ldr	pc, [ip, #2052]!	; 0x804

000118c8 <selabel_open@plt>:
   118c8:	add	ip, pc, #0, 12
   118cc:	add	ip, ip, #106496	; 0x1a000
   118d0:	ldr	pc, [ip, #2044]!	; 0x7fc

000118d4 <openat64@plt>:
   118d4:	add	ip, pc, #0, 12
   118d8:	add	ip, ip, #106496	; 0x1a000
   118dc:	ldr	pc, [ip, #2036]!	; 0x7f4

000118e0 <setfscreatecon@plt>:
   118e0:	add	ip, pc, #0, 12
   118e4:	add	ip, ip, #106496	; 0x1a000
   118e8:	ldr	pc, [ip, #2028]!	; 0x7ec

000118ec <__errno_location@plt>:
   118ec:	add	ip, pc, #0, 12
   118f0:	add	ip, ip, #106496	; 0x1a000
   118f4:	ldr	pc, [ip, #2020]!	; 0x7e4

000118f8 <__sprintf_chk@plt>:
   118f8:	add	ip, pc, #0, 12
   118fc:	add	ip, ip, #106496	; 0x1a000
   11900:	ldr	pc, [ip, #2012]!	; 0x7dc

00011904 <__cxa_atexit@plt>:
   11904:	add	ip, pc, #0, 12
   11908:	add	ip, ip, #106496	; 0x1a000
   1190c:	ldr	pc, [ip, #2004]!	; 0x7d4

00011910 <memset@plt>:
   11910:	add	ip, pc, #0, 12
   11914:	add	ip, ip, #106496	; 0x1a000
   11918:	ldr	pc, [ip, #1996]!	; 0x7cc

0001191c <__printf_chk@plt>:
   1191c:	add	ip, pc, #0, 12
   11920:	add	ip, ip, #106496	; 0x1a000
   11924:	ldr	pc, [ip, #1988]!	; 0x7c4

00011928 <fileno@plt>:
   11928:	add	ip, pc, #0, 12
   1192c:	add	ip, ip, #106496	; 0x1a000
   11930:	ldr	pc, [ip, #1980]!	; 0x7bc

00011934 <__fprintf_chk@plt>:
   11934:	add	ip, pc, #0, 12
   11938:	add	ip, ip, #106496	; 0x1a000
   1193c:	ldr	pc, [ip, #1972]!	; 0x7b4

00011940 <fclose@plt>:
   11940:	add	ip, pc, #0, 12
   11944:	add	ip, ip, #106496	; 0x1a000
   11948:	ldr	pc, [ip, #1964]!	; 0x7ac

0001194c <fseeko64@plt>:
   1194c:	add	ip, pc, #0, 12
   11950:	add	ip, ip, #106496	; 0x1a000
   11954:	ldr	pc, [ip, #1956]!	; 0x7a4

00011958 <fcntl64@plt>:
   11958:	add	ip, pc, #0, 12
   1195c:	add	ip, ip, #106496	; 0x1a000
   11960:	ldr	pc, [ip, #1948]!	; 0x79c

00011964 <setlocale@plt>:
   11964:	add	ip, pc, #0, 12
   11968:	add	ip, ip, #106496	; 0x1a000
   1196c:	ldr	pc, [ip, #1940]!	; 0x794

00011970 <fsetfilecon@plt>:
   11970:	add	ip, pc, #0, 12
   11974:	add	ip, ip, #106496	; 0x1a000
   11978:	ldr	pc, [ip, #1932]!	; 0x78c

0001197c <strrchr@plt>:
   1197c:	add	ip, pc, #0, 12
   11980:	add	ip, ip, #106496	; 0x1a000
   11984:	ldr	pc, [ip, #1924]!	; 0x784

00011988 <nl_langinfo@plt>:
   11988:	add	ip, pc, #0, 12
   1198c:	add	ip, ip, #106496	; 0x1a000
   11990:	ldr	pc, [ip, #1916]!	; 0x77c

00011994 <readdir64@plt>:
   11994:	add	ip, pc, #0, 12
   11998:	add	ip, ip, #106496	; 0x1a000
   1199c:	ldr	pc, [ip, #1908]!	; 0x774

000119a0 <fdopendir@plt>:
   119a0:	add	ip, pc, #0, 12
   119a4:	add	ip, ip, #106496	; 0x1a000
   119a8:	ldr	pc, [ip, #1900]!	; 0x76c

000119ac <security_compute_create@plt>:
   119ac:	add	ip, pc, #0, 12
   119b0:	add	ip, ip, #106496	; 0x1a000
   119b4:	ldr	pc, [ip, #1892]!	; 0x764

000119b8 <dirfd@plt>:
   119b8:	add	ip, pc, #0, 12
   119bc:	add	ip, ip, #106496	; 0x1a000
   119c0:	ldr	pc, [ip, #1884]!	; 0x75c

000119c4 <fchdir@plt>:
   119c4:	add	ip, pc, #0, 12
   119c8:	add	ip, ip, #106496	; 0x1a000
   119cc:	ldr	pc, [ip, #1876]!	; 0x754

000119d0 <qsort@plt>:
   119d0:	add	ip, pc, #0, 12
   119d4:	add	ip, ip, #106496	; 0x1a000
   119d8:	ldr	pc, [ip, #1868]!	; 0x74c

000119dc <freecon@plt>:
   119dc:	add	ip, pc, #0, 12
   119e0:	add	ip, ip, #106496	; 0x1a000
   119e4:	ldr	pc, [ip, #1860]!	; 0x744

000119e8 <bindtextdomain@plt>:
   119e8:	add	ip, pc, #0, 12
   119ec:	add	ip, ip, #106496	; 0x1a000
   119f0:	ldr	pc, [ip, #1852]!	; 0x73c

000119f4 <getfscreatecon@plt>:
   119f4:	add	ip, pc, #0, 12
   119f8:	add	ip, ip, #106496	; 0x1a000
   119fc:	ldr	pc, [ip, #1844]!	; 0x734

00011a00 <umask@plt>:
   11a00:	add	ip, pc, #0, 12
   11a04:	add	ip, ip, #106496	; 0x1a000
   11a08:	ldr	pc, [ip, #1836]!	; 0x72c

00011a0c <context_str@plt>:
   11a0c:	add	ip, pc, #0, 12
   11a10:	add	ip, ip, #106496	; 0x1a000
   11a14:	ldr	pc, [ip, #1828]!	; 0x724

00011a18 <chmod@plt>:
   11a18:	add	ip, pc, #0, 12
   11a1c:	add	ip, ip, #106496	; 0x1a000
   11a20:	ldr	pc, [ip, #1820]!	; 0x71c

00011a24 <__xstat64@plt>:
   11a24:	add	ip, pc, #0, 12
   11a28:	add	ip, ip, #106496	; 0x1a000
   11a2c:	ldr	pc, [ip, #1812]!	; 0x714

00011a30 <strncmp@plt>:
   11a30:	add	ip, pc, #0, 12
   11a34:	add	ip, ip, #106496	; 0x1a000
   11a38:	ldr	pc, [ip, #1804]!	; 0x70c

00011a3c <abort@plt>:
   11a3c:	add	ip, pc, #0, 12
   11a40:	add	ip, ip, #106496	; 0x1a000
   11a44:	ldr	pc, [ip, #1796]!	; 0x704

00011a48 <close@plt>:
   11a48:	add	ip, pc, #0, 12
   11a4c:	add	ip, ip, #106496	; 0x1a000
   11a50:	ldr	pc, [ip, #1788]!	; 0x6fc

00011a54 <__lxstat64@plt>:
   11a54:	add	ip, pc, #0, 12
   11a58:	add	ip, ip, #106496	; 0x1a000
   11a5c:	ldr	pc, [ip, #1780]!	; 0x6f4

00011a60 <mkfifo@plt>:
   11a60:	add	ip, pc, #0, 12
   11a64:	add	ip, ip, #106496	; 0x1a000
   11a68:	ldr	pc, [ip, #1772]!	; 0x6ec

00011a6c <mode_to_security_class@plt>:
   11a6c:	add	ip, pc, #0, 12
   11a70:	add	ip, ip, #106496	; 0x1a000
   11a74:	ldr	pc, [ip, #1764]!	; 0x6e4

00011a78 <closedir@plt>:
   11a78:	add	ip, pc, #0, 12
   11a7c:	add	ip, ip, #106496	; 0x1a000
   11a80:	ldr	pc, [ip, #1756]!	; 0x6dc

00011a84 <strspn@plt>:
   11a84:	add	ip, pc, #0, 12
   11a88:	add	ip, ip, #106496	; 0x1a000
   11a8c:	ldr	pc, [ip, #1748]!	; 0x6d4

00011a90 <__mempcpy_chk@plt>:
   11a90:	add	ip, pc, #0, 12
   11a94:	add	ip, ip, #106496	; 0x1a000
   11a98:	ldr	pc, [ip, #1740]!	; 0x6cc

00011a9c <__assert_fail@plt>:
   11a9c:	add	ip, pc, #0, 12
   11aa0:	add	ip, ip, #106496	; 0x1a000
   11aa4:	ldr	pc, [ip, #1732]!	; 0x6c4

Disassembly of section .text:

00011aa8 <lchmod@@Base-0x55e4>:
   11aa8:	mov	fp, #0
   11aac:	mov	lr, #0
   11ab0:	pop	{r1}		; (ldr r1, [sp], #4)
   11ab4:	mov	r2, sp
   11ab8:	push	{r2}		; (str r2, [sp, #-4]!)
   11abc:	push	{r0}		; (str r0, [sp, #-4]!)
   11ac0:	ldr	ip, [pc, #16]	; 11ad8 <__assert_fail@plt+0x3c>
   11ac4:	push	{ip}		; (str ip, [sp, #-4]!)
   11ac8:	ldr	r0, [pc, #12]	; 11adc <__assert_fail@plt+0x40>
   11acc:	ldr	r3, [pc, #12]	; 11ae0 <__assert_fail@plt+0x44>
   11ad0:	bl	11850 <__libc_start_main@plt>
   11ad4:	bl	11a3c <abort@plt>
   11ad8:	andeq	fp, r1, ip, lsr #5
   11adc:	andeq	r1, r1, r0, lsr lr
   11ae0:	andeq	fp, r1, ip, asr #4
   11ae4:	ldr	r3, [pc, #20]	; 11b00 <__assert_fail@plt+0x64>
   11ae8:	ldr	r2, [pc, #20]	; 11b04 <__assert_fail@plt+0x68>
   11aec:	add	r3, pc, r3
   11af0:	ldr	r2, [r3, r2]
   11af4:	cmp	r2, #0
   11af8:	bxeq	lr
   11afc:	b	11868 <__gmon_start__@plt>
   11b00:	andeq	sl, r1, ip, lsl #10
   11b04:	andeq	r0, r0, ip, ror #2
   11b08:	ldr	r0, [pc, #24]	; 11b28 <__assert_fail@plt+0x8c>
   11b0c:	ldr	r3, [pc, #24]	; 11b2c <__assert_fail@plt+0x90>
   11b10:	cmp	r3, r0
   11b14:	bxeq	lr
   11b18:	ldr	r3, [pc, #16]	; 11b30 <__assert_fail@plt+0x94>
   11b1c:	cmp	r3, #0
   11b20:	bxeq	lr
   11b24:	bx	r3
   11b28:	andeq	ip, r2, r0, asr #3
   11b2c:	andeq	ip, r2, r0, asr #3
   11b30:	andeq	r0, r0, r0
   11b34:	ldr	r0, [pc, #36]	; 11b60 <__assert_fail@plt+0xc4>
   11b38:	ldr	r1, [pc, #36]	; 11b64 <__assert_fail@plt+0xc8>
   11b3c:	sub	r1, r1, r0
   11b40:	asr	r1, r1, #2
   11b44:	add	r1, r1, r1, lsr #31
   11b48:	asrs	r1, r1, #1
   11b4c:	bxeq	lr
   11b50:	ldr	r3, [pc, #16]	; 11b68 <__assert_fail@plt+0xcc>
   11b54:	cmp	r3, #0
   11b58:	bxeq	lr
   11b5c:	bx	r3
   11b60:	andeq	ip, r2, r0, asr #3
   11b64:	andeq	ip, r2, r0, asr #3
   11b68:	andeq	r0, r0, r0
   11b6c:	push	{r4, lr}
   11b70:	ldr	r4, [pc, #24]	; 11b90 <__assert_fail@plt+0xf4>
   11b74:	ldrb	r3, [r4]
   11b78:	cmp	r3, #0
   11b7c:	popne	{r4, pc}
   11b80:	bl	11b08 <__assert_fail@plt+0x6c>
   11b84:	mov	r3, #1
   11b88:	strb	r3, [r4]
   11b8c:	pop	{r4, pc}
   11b90:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   11b94:	b	11b34 <__assert_fail@plt+0x98>
   11b98:	push	{fp, lr}
   11b9c:	mov	fp, sp
   11ba0:	sub	sp, sp, #56	; 0x38
   11ba4:	mov	r4, r0
   11ba8:	cmp	r0, #0
   11bac:	bne	11dec <__assert_fail@plt+0x350>
   11bb0:	movw	r1, #45819	; 0xb2fb
   11bb4:	mov	r0, #0
   11bb8:	mov	r2, #5
   11bbc:	movt	r1, #1
   11bc0:	bl	11760 <dcgettext@plt>
   11bc4:	mov	r1, r0
   11bc8:	movw	r0, #49640	; 0xc1e8
   11bcc:	movt	r0, #2
   11bd0:	ldr	r2, [r0]
   11bd4:	mov	r0, #1
   11bd8:	bl	1191c <__printf_chk@plt>
   11bdc:	movw	r1, #45850	; 0xb31a
   11be0:	mov	r0, #0
   11be4:	mov	r2, #5
   11be8:	movt	r1, #1
   11bec:	bl	11760 <dcgettext@plt>
   11bf0:	movw	r7, #49620	; 0xc1d4
   11bf4:	movt	r7, #2
   11bf8:	ldr	r1, [r7]
   11bfc:	bl	116ac <fputs_unlocked@plt>
   11c00:	movw	r1, #46619	; 0xb61b
   11c04:	mov	r0, #0
   11c08:	mov	r2, #5
   11c0c:	movt	r1, #1
   11c10:	bl	11760 <dcgettext@plt>
   11c14:	ldr	r1, [r7]
   11c18:	bl	116ac <fputs_unlocked@plt>
   11c1c:	movw	r1, #45900	; 0xb34c
   11c20:	mov	r0, #0
   11c24:	mov	r2, #5
   11c28:	movt	r1, #1
   11c2c:	bl	11760 <dcgettext@plt>
   11c30:	ldr	r1, [r7]
   11c34:	bl	116ac <fputs_unlocked@plt>
   11c38:	movw	r1, #45973	; 0xb395
   11c3c:	mov	r0, #0
   11c40:	mov	r2, #5
   11c44:	movt	r1, #1
   11c48:	bl	11760 <dcgettext@plt>
   11c4c:	ldr	r1, [r7]
   11c50:	bl	116ac <fputs_unlocked@plt>
   11c54:	movw	r1, #46180	; 0xb464
   11c58:	mov	r0, #0
   11c5c:	mov	r2, #5
   11c60:	movt	r1, #1
   11c64:	bl	11760 <dcgettext@plt>
   11c68:	ldr	r1, [r7]
   11c6c:	bl	116ac <fputs_unlocked@plt>
   11c70:	movw	r1, #46225	; 0xb491
   11c74:	mov	r0, #0
   11c78:	mov	r2, #5
   11c7c:	movt	r1, #1
   11c80:	bl	11760 <dcgettext@plt>
   11c84:	ldr	r1, [r7]
   11c88:	bl	116ac <fputs_unlocked@plt>
   11c8c:	movw	r0, #47104	; 0xb800
   11c90:	mov	r2, #48	; 0x30
   11c94:	mov	r6, sp
   11c98:	movw	r5, #46279	; 0xb4c7
   11c9c:	movt	r0, #1
   11ca0:	movt	r5, #1
   11ca4:	add	r1, r0, #32
   11ca8:	add	r3, r0, #16
   11cac:	vld1.64	{d18-d19}, [r0], r2
   11cb0:	vld1.64	{d16-d17}, [r1]
   11cb4:	vld1.64	{d20-d21}, [r3]
   11cb8:	add	r1, r6, #32
   11cbc:	vldr	d22, [r0]
   11cc0:	add	r0, r6, #16
   11cc4:	vst1.64	{d16-d17}, [r1]
   11cc8:	movw	r1, #46694	; 0xb666
   11ccc:	vst1.64	{d20-d21}, [r0]
   11cd0:	mov	r0, r6
   11cd4:	vst1.64	{d18-d19}, [r0], r2
   11cd8:	movt	r1, #1
   11cdc:	vstr	d22, [r0]
   11ce0:	mov	r0, r5
   11ce4:	bl	116d0 <strcmp@plt>
   11ce8:	cmp	r0, #0
   11cec:	ldrne	r1, [r6, #8]!
   11cf0:	cmpne	r1, #0
   11cf4:	bne	11ce0 <__assert_fail@plt+0x244>
   11cf8:	ldr	r6, [r6, #4]
   11cfc:	movw	r1, #46789	; 0xb6c5
   11d00:	mov	r0, #0
   11d04:	mov	r2, #5
   11d08:	movt	r1, #1
   11d0c:	bl	11760 <dcgettext@plt>
   11d10:	movw	r2, #46415	; 0xb54f
   11d14:	movw	r3, #46812	; 0xb6dc
   11d18:	mov	r1, r0
   11d1c:	mov	r0, #1
   11d20:	movt	r2, #1
   11d24:	movt	r3, #1
   11d28:	bl	1191c <__printf_chk@plt>
   11d2c:	cmp	r6, #0
   11d30:	mov	r0, #5
   11d34:	mov	r1, #0
   11d38:	moveq	r6, r5
   11d3c:	bl	11964 <setlocale@plt>
   11d40:	cmp	r0, #0
   11d44:	beq	11d7c <__assert_fail@plt+0x2e0>
   11d48:	movw	r1, #46852	; 0xb704
   11d4c:	mov	r2, #3
   11d50:	movt	r1, #1
   11d54:	bl	11a30 <strncmp@plt>
   11d58:	cmp	r0, #0
   11d5c:	beq	11d7c <__assert_fail@plt+0x2e0>
   11d60:	movw	r1, #46856	; 0xb708
   11d64:	mov	r0, #0
   11d68:	mov	r2, #5
   11d6c:	movt	r1, #1
   11d70:	bl	11760 <dcgettext@plt>
   11d74:	ldr	r1, [r7]
   11d78:	bl	116ac <fputs_unlocked@plt>
   11d7c:	movw	r1, #46927	; 0xb74f
   11d80:	mov	r0, #0
   11d84:	mov	r2, #5
   11d88:	movt	r1, #1
   11d8c:	bl	11760 <dcgettext@plt>
   11d90:	movw	r2, #46812	; 0xb6dc
   11d94:	mov	r1, r0
   11d98:	mov	r0, #1
   11d9c:	mov	r3, r5
   11da0:	movt	r2, #1
   11da4:	bl	1191c <__printf_chk@plt>
   11da8:	movw	r1, #46954	; 0xb76a
   11dac:	mov	r0, #0
   11db0:	mov	r2, #5
   11db4:	movt	r1, #1
   11db8:	bl	11760 <dcgettext@plt>
   11dbc:	movw	r3, #47004	; 0xb79c
   11dc0:	mov	r1, r0
   11dc4:	movw	r0, #46722	; 0xb682
   11dc8:	cmp	r6, r5
   11dcc:	mov	r2, r6
   11dd0:	movt	r0, #1
   11dd4:	movt	r3, #1
   11dd8:	moveq	r3, r0
   11ddc:	mov	r0, #1
   11de0:	bl	1191c <__printf_chk@plt>
   11de4:	mov	r0, r4
   11de8:	bl	118a4 <exit@plt>
   11dec:	movw	r0, #49616	; 0xc1d0
   11df0:	movw	r1, #45780	; 0xb2d4
   11df4:	mov	r2, #5
   11df8:	movt	r0, #2
   11dfc:	movt	r1, #1
   11e00:	ldr	r5, [r0]
   11e04:	mov	r0, #0
   11e08:	bl	11760 <dcgettext@plt>
   11e0c:	mov	r2, r0
   11e10:	movw	r0, #49640	; 0xc1e8
   11e14:	mov	r1, #1
   11e18:	movt	r0, #2
   11e1c:	ldr	r3, [r0]
   11e20:	mov	r0, r5
   11e24:	bl	11934 <__fprintf_chk@plt>
   11e28:	mov	r0, r4
   11e2c:	bl	118a4 <exit@plt>
   11e30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e34:	add	fp, sp, #28
   11e38:	sub	sp, sp, #20
   11e3c:	str	r0, [sp, #16]
   11e40:	ldr	r0, [r1]
   11e44:	mov	r4, r1
   11e48:	bl	17854 <lchmod@@Base+0x7c8>
   11e4c:	movw	r1, #47004	; 0xb79c
   11e50:	mov	r0, #6
   11e54:	movt	r1, #1
   11e58:	bl	11964 <setlocale@plt>
   11e5c:	movw	r6, #46419	; 0xb553
   11e60:	movw	r1, #46286	; 0xb4ce
   11e64:	movt	r6, #1
   11e68:	movt	r1, #1
   11e6c:	mov	r0, r6
   11e70:	bl	119e8 <bindtextdomain@plt>
   11e74:	mov	r0, r6
   11e78:	bl	11790 <textdomain@plt>
   11e7c:	movw	r0, #12488	; 0x30c8
   11e80:	movt	r0, #1
   11e84:	bl	1b2b0 <lchmod@@Base+0x4224>
   11e88:	movw	r5, #46310	; 0xb4e6
   11e8c:	movw	r7, #47024	; 0xb7b0
   11e90:	movw	sl, #49624	; 0xc1d8
   11e94:	mov	r6, #0
   11e98:	mov	r8, #0
   11e9c:	mov	r9, #0
   11ea0:	mov	r0, #0
   11ea4:	movt	r5, #1
   11ea8:	movt	r7, #1
   11eac:	movt	sl, #2
   11eb0:	b	11eb8 <__assert_fail@plt+0x41c>
   11eb4:	ldr	r0, [sl]
   11eb8:	str	r0, [sp, #12]
   11ebc:	b	11ee4 <__assert_fail@plt+0x448>
   11ec0:	movw	r1, #46342	; 0xb506
   11ec4:	mov	r0, #0
   11ec8:	mov	r2, #5
   11ecc:	movt	r1, #1
   11ed0:	bl	11760 <dcgettext@plt>
   11ed4:	mov	r2, r0
   11ed8:	mov	r0, #0
   11edc:	mov	r1, #0
   11ee0:	bl	11820 <error@plt>
   11ee4:	ldr	r0, [sp, #16]
   11ee8:	mov	r1, r4
   11eec:	mov	r2, r5
   11ef0:	mov	r3, r7
   11ef4:	str	r6, [sp]
   11ef8:	bl	11880 <getopt_long@plt>
   11efc:	cmp	r0, #89	; 0x59
   11f00:	ble	11f98 <__assert_fail@plt+0x4fc>
   11f04:	cmp	r0, #90	; 0x5a
   11f08:	bne	11f8c <__assert_fail@plt+0x4f0>
   11f0c:	bl	116c4 <is_selinux_enabled@plt>
   11f10:	ldr	r1, [sl]
   11f14:	cmp	r0, #1
   11f18:	bge	11f28 <__assert_fail@plt+0x48c>
   11f1c:	cmp	r1, #0
   11f20:	beq	11ee4 <__assert_fail@plt+0x448>
   11f24:	b	11ec0 <__assert_fail@plt+0x424>
   11f28:	cmp	r1, #0
   11f2c:	bne	11f84 <__assert_fail@plt+0x4e8>
   11f30:	mov	r0, #0
   11f34:	mov	r1, #0
   11f38:	mov	r2, #0
   11f3c:	bl	118c8 <selabel_open@plt>
   11f40:	mov	r9, r0
   11f44:	cmp	r0, #0
   11f48:	bne	11ee4 <__assert_fail@plt+0x448>
   11f4c:	bl	118ec <__errno_location@plt>
   11f50:	ldr	r0, [r0]
   11f54:	movw	r1, #46314	; 0xb4ea
   11f58:	mov	r2, #5
   11f5c:	mov	r9, #0
   11f60:	movt	r1, #1
   11f64:	str	r0, [sp, #8]
   11f68:	mov	r0, #0
   11f6c:	bl	11760 <dcgettext@plt>
   11f70:	ldr	r1, [sp, #8]
   11f74:	mov	r2, r0
   11f78:	mov	r0, #0
   11f7c:	bl	11820 <error@plt>
   11f80:	b	11ee4 <__assert_fail@plt+0x448>
   11f84:	mov	r8, r1
   11f88:	b	11ee4 <__assert_fail@plt+0x448>
   11f8c:	cmp	r0, #109	; 0x6d
   11f90:	beq	11eb4 <__assert_fail@plt+0x418>
   11f94:	b	122a4 <__assert_fail@plt+0x808>
   11f98:	cmn	r0, #1
   11f9c:	bne	12244 <__assert_fail@plt+0x7a8>
   11fa0:	movw	sl, #49608	; 0xc1c8
   11fa4:	ldr	r6, [sp, #16]
   11fa8:	ldr	r5, [sp, #12]
   11fac:	movt	sl, #2
   11fb0:	ldr	r0, [sl]
   11fb4:	cmp	r0, r6
   11fb8:	beq	122ac <__assert_fail@plt+0x810>
   11fbc:	cmp	r8, #0
   11fc0:	beq	11fd4 <__assert_fail@plt+0x538>
   11fc4:	mov	r0, r8
   11fc8:	bl	118e0 <setfscreatecon@plt>
   11fcc:	cmn	r0, #1
   11fd0:	ble	122d8 <__assert_fail@plt+0x83c>
   11fd4:	cmp	r5, #0
   11fd8:	beq	12224 <__assert_fail@plt+0x788>
   11fdc:	mov	r0, r5
   11fe0:	bl	171d8 <lchmod@@Base+0x14c>
   11fe4:	cmp	r0, #0
   11fe8:	beq	12314 <__assert_fail@plt+0x878>
   11fec:	mov	r7, r0
   11ff0:	mov	r0, #0
   11ff4:	mov	r8, #0
   11ff8:	bl	11a00 <umask@plt>
   11ffc:	mov	r5, r0
   12000:	bl	11a00 <umask@plt>
   12004:	movw	r0, #438	; 0x1b6
   12008:	mov	r1, #0
   1200c:	mov	r2, r5
   12010:	mov	r3, r7
   12014:	str	r8, [sp]
   12018:	bl	176a4 <lchmod@@Base+0x618>
   1201c:	mov	r5, r0
   12020:	mov	r0, r7
   12024:	bl	13370 <__assert_fail@plt+0x18d4>
   12028:	cmp	r5, #512	; 0x200
   1202c:	bcs	12320 <__assert_fail@plt+0x884>
   12030:	ldr	r0, [sl]
   12034:	mov	r7, #0
   12038:	cmp	r0, r6
   1203c:	bge	12238 <__assert_fail@plt+0x79c>
   12040:	mov	r7, #0
   12044:	cmp	r9, #0
   12048:	bne	120c0 <__assert_fail@plt+0x624>
   1204c:	movw	r8, #46568	; 0xb5e8
   12050:	movt	r8, #1
   12054:	b	121b4 <__assert_fail@plt+0x718>
   12058:	ldr	r0, [sp, #12]
   1205c:	cmp	r0, #0
   12060:	beq	12134 <__assert_fail@plt+0x698>
   12064:	ldr	r0, [sl]
   12068:	mov	r1, r5
   1206c:	ldr	r0, [r4, r0, lsl #2]
   12070:	bl	1708c <lchmod@@Base>
   12074:	cmp	r0, #0
   12078:	beq	12134 <__assert_fail@plt+0x698>
   1207c:	bl	118ec <__errno_location@plt>
   12080:	ldr	r8, [r0]
   12084:	movw	r1, #46590	; 0xb5fe
   12088:	mov	r0, #0
   1208c:	mov	r2, #5
   12090:	movt	r1, #1
   12094:	bl	11760 <dcgettext@plt>
   12098:	mov	r7, r0
   1209c:	ldr	r0, [sl]
   120a0:	ldr	r1, [r4, r0, lsl #2]
   120a4:	mov	r0, #4
   120a8:	bl	192a8 <lchmod@@Base+0x221c>
   120ac:	mov	r3, r0
   120b0:	mov	r0, #0
   120b4:	mov	r1, r8
   120b8:	mov	r2, r7
   120bc:	b	1212c <__assert_fail@plt+0x690>
   120c0:	ldr	r1, [r4, r0, lsl #2]
   120c4:	mov	r0, r9
   120c8:	mov	r2, #4096	; 0x1000
   120cc:	bl	12344 <__assert_fail@plt+0x8a8>
   120d0:	ldr	r0, [sl]
   120d4:	mov	r1, r5
   120d8:	ldr	r0, [r4, r0, lsl #2]
   120dc:	bl	11a60 <mkfifo@plt>
   120e0:	cmp	r0, #0
   120e4:	beq	12058 <__assert_fail@plt+0x5bc>
   120e8:	bl	118ec <__errno_location@plt>
   120ec:	ldr	r7, [r0]
   120f0:	movw	r1, #46568	; 0xb5e8
   120f4:	mov	r0, #0
   120f8:	mov	r2, #5
   120fc:	movt	r1, #1
   12100:	bl	11760 <dcgettext@plt>
   12104:	mov	r8, r0
   12108:	ldr	r0, [sl]
   1210c:	ldr	r1, [r4, r0, lsl #2]
   12110:	mov	r0, #4
   12114:	bl	192a8 <lchmod@@Base+0x221c>
   12118:	ldr	r6, [sp, #16]
   1211c:	mov	r3, r0
   12120:	mov	r0, #0
   12124:	mov	r1, r7
   12128:	mov	r2, r8
   1212c:	bl	11820 <error@plt>
   12130:	mov	r7, #1
   12134:	ldr	r0, [sl]
   12138:	add	r0, r0, #1
   1213c:	cmp	r0, r6
   12140:	str	r0, [sl]
   12144:	blt	120c0 <__assert_fail@plt+0x624>
   12148:	b	12238 <__assert_fail@plt+0x79c>
   1214c:	ldr	r0, [sp, #12]
   12150:	cmp	r0, #0
   12154:	beq	1220c <__assert_fail@plt+0x770>
   12158:	ldr	r0, [sl]
   1215c:	mov	r1, r5
   12160:	ldr	r0, [r4, r0, lsl #2]
   12164:	bl	1708c <lchmod@@Base>
   12168:	cmp	r0, #0
   1216c:	beq	1220c <__assert_fail@plt+0x770>
   12170:	bl	118ec <__errno_location@plt>
   12174:	ldr	r9, [r0]
   12178:	movw	r1, #46590	; 0xb5fe
   1217c:	mov	r0, #0
   12180:	mov	r2, #5
   12184:	movt	r1, #1
   12188:	bl	11760 <dcgettext@plt>
   1218c:	mov	r7, r0
   12190:	ldr	r0, [sl]
   12194:	ldr	r1, [r4, r0, lsl #2]
   12198:	mov	r0, #4
   1219c:	bl	192a8 <lchmod@@Base+0x221c>
   121a0:	mov	r3, r0
   121a4:	mov	r0, #0
   121a8:	mov	r1, r9
   121ac:	mov	r2, r7
   121b0:	b	12204 <__assert_fail@plt+0x768>
   121b4:	ldr	r0, [r4, r0, lsl #2]
   121b8:	mov	r1, r5
   121bc:	bl	11a60 <mkfifo@plt>
   121c0:	cmp	r0, #0
   121c4:	beq	1214c <__assert_fail@plt+0x6b0>
   121c8:	bl	118ec <__errno_location@plt>
   121cc:	ldr	r7, [r0]
   121d0:	mov	r0, #0
   121d4:	mov	r1, r8
   121d8:	mov	r2, #5
   121dc:	bl	11760 <dcgettext@plt>
   121e0:	mov	r9, r0
   121e4:	ldr	r0, [sl]
   121e8:	ldr	r1, [r4, r0, lsl #2]
   121ec:	mov	r0, #4
   121f0:	bl	192a8 <lchmod@@Base+0x221c>
   121f4:	mov	r3, r0
   121f8:	mov	r0, #0
   121fc:	mov	r1, r7
   12200:	mov	r2, r9
   12204:	bl	11820 <error@plt>
   12208:	mov	r7, #1
   1220c:	ldr	r0, [sl]
   12210:	add	r0, r0, #1
   12214:	cmp	r0, r6
   12218:	str	r0, [sl]
   1221c:	blt	121b4 <__assert_fail@plt+0x718>
   12220:	b	12238 <__assert_fail@plt+0x79c>
   12224:	movw	r5, #438	; 0x1b6
   12228:	ldr	r0, [sl]
   1222c:	mov	r7, #0
   12230:	cmp	r0, r6
   12234:	blt	12040 <__assert_fail@plt+0x5a4>
   12238:	mov	r0, r7
   1223c:	sub	sp, fp, #28
   12240:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12244:	cmn	r0, #3
   12248:	bne	12294 <__assert_fail@plt+0x7f8>
   1224c:	movw	r0, #49528	; 0xc178
   12250:	movw	r2, #46429	; 0xb55d
   12254:	mov	r1, #0
   12258:	movt	r0, #2
   1225c:	movt	r2, #1
   12260:	str	r1, [sp, #4]
   12264:	movw	r1, #46279	; 0xb4c7
   12268:	ldr	r3, [r0]
   1226c:	movw	r0, #49620	; 0xc1d4
   12270:	str	r2, [sp]
   12274:	movw	r2, #46415	; 0xb54f
   12278:	movt	r1, #1
   1227c:	movt	r0, #2
   12280:	movt	r2, #1
   12284:	ldr	r0, [r0]
   12288:	bl	19fa0 <lchmod@@Base+0x2f14>
   1228c:	mov	r0, #0
   12290:	bl	118a4 <exit@plt>
   12294:	cmn	r0, #2
   12298:	bne	122a4 <__assert_fail@plt+0x808>
   1229c:	mov	r0, #0
   122a0:	bl	11b98 <__assert_fail@plt+0xfc>
   122a4:	mov	r0, #1
   122a8:	bl	11b98 <__assert_fail@plt+0xfc>
   122ac:	movw	r1, #46445	; 0xb56d
   122b0:	mov	r0, #0
   122b4:	mov	r2, #5
   122b8:	movt	r1, #1
   122bc:	bl	11760 <dcgettext@plt>
   122c0:	mov	r2, r0
   122c4:	mov	r0, #0
   122c8:	mov	r1, #0
   122cc:	bl	11820 <error@plt>
   122d0:	mov	r0, #1
   122d4:	bl	11b98 <__assert_fail@plt+0xfc>
   122d8:	bl	118ec <__errno_location@plt>
   122dc:	ldr	r4, [r0]
   122e0:	movw	r1, #46461	; 0xb57d
   122e4:	mov	r0, #0
   122e8:	mov	r2, #5
   122ec:	movt	r1, #1
   122f0:	bl	11760 <dcgettext@plt>
   122f4:	mov	r5, r0
   122f8:	mov	r0, r8
   122fc:	bl	197d0 <lchmod@@Base+0x2744>
   12300:	mov	r3, r0
   12304:	mov	r0, #1
   12308:	mov	r1, r4
   1230c:	mov	r2, r5
   12310:	bl	11820 <error@plt>
   12314:	movw	r1, #46511	; 0xb5af
   12318:	movt	r1, #1
   1231c:	b	12328 <__assert_fail@plt+0x88c>
   12320:	movw	r1, #46524	; 0xb5bc
   12324:	movt	r1, #1
   12328:	mov	r0, #0
   1232c:	mov	r2, #5
   12330:	bl	11760 <dcgettext@plt>
   12334:	mov	r2, r0
   12338:	mov	r0, #1
   1233c:	mov	r1, #0
   12340:	bl	11820 <error@plt>
   12344:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12348:	add	fp, sp, #24
   1234c:	sub	sp, sp, #16
   12350:	mov	r4, #0
   12354:	mov	r7, r0
   12358:	mov	r5, r2
   1235c:	mov	r6, r1
   12360:	str	r4, [sp, #4]
   12364:	str	r4, [sp]
   12368:	ldrb	r0, [r1]
   1236c:	cmp	r0, #47	; 0x2f
   12370:	beq	12390 <__assert_fail@plt+0x8f4>
   12374:	mov	r0, r6
   12378:	mov	r1, #2
   1237c:	bl	128dc <__assert_fail@plt+0xe40>
   12380:	mov	r4, r0
   12384:	cmp	r0, #0
   12388:	mov	r6, r0
   1238c:	beq	124e4 <__assert_fail@plt+0xa48>
   12390:	add	r1, sp, #4
   12394:	mov	r0, r7
   12398:	mov	r2, r6
   1239c:	mov	r3, r5
   123a0:	bl	11694 <selabel_lookup@plt>
   123a4:	cmn	r0, #1
   123a8:	ble	124bc <__assert_fail@plt+0xa20>
   123ac:	mov	r0, #0
   123b0:	str	r0, [sp, #12]
   123b4:	str	r0, [sp, #8]
   123b8:	mov	r0, r6
   123bc:	bl	131b4 <__assert_fail@plt+0x1718>
   123c0:	mov	r6, r0
   123c4:	add	r0, sp, #12
   123c8:	bl	117fc <getcon@plt>
   123cc:	mov	r9, #1
   123d0:	cmp	r0, #0
   123d4:	blt	12414 <__assert_fail@plt+0x978>
   123d8:	add	r1, sp, #8
   123dc:	mov	r0, r6
   123e0:	bl	19974 <lchmod@@Base+0x28e8>
   123e4:	cmp	r0, #0
   123e8:	blt	12414 <__assert_fail@plt+0x978>
   123ec:	mov	r0, r5
   123f0:	bl	11a6c <mode_to_security_class@plt>
   123f4:	cmp	r0, #0
   123f8:	beq	12414 <__assert_fail@plt+0x978>
   123fc:	mov	r2, r0
   12400:	ldr	r1, [sp, #8]
   12404:	ldr	r0, [sp, #12]
   12408:	mov	r3, sp
   1240c:	bl	119ac <security_compute_create@plt>
   12410:	lsr	r9, r0, #31
   12414:	bl	118ec <__errno_location@plt>
   12418:	ldr	r7, [r0]
   1241c:	mov	r5, r0
   12420:	mov	r0, r6
   12424:	bl	13370 <__assert_fail@plt+0x18d4>
   12428:	ldr	r0, [sp, #12]
   1242c:	bl	119dc <freecon@plt>
   12430:	ldr	r0, [sp, #8]
   12434:	bl	119dc <freecon@plt>
   12438:	mvn	r8, #0
   1243c:	cmp	r9, #0
   12440:	str	r7, [r5]
   12444:	bne	124b0 <__assert_fail@plt+0xa14>
   12448:	ldr	r0, [sp, #4]
   1244c:	bl	11748 <context_new@plt>
   12450:	cmp	r0, #0
   12454:	beq	124b0 <__assert_fail@plt+0xa14>
   12458:	mov	r6, r0
   1245c:	ldr	r0, [sp]
   12460:	bl	11748 <context_new@plt>
   12464:	cmp	r0, #0
   12468:	beq	12500 <__assert_fail@plt+0xa64>
   1246c:	mov	r9, r0
   12470:	mov	r0, r6
   12474:	bl	116dc <context_type_get@plt>
   12478:	cmp	r0, #0
   1247c:	beq	12504 <__assert_fail@plt+0xa68>
   12480:	mov	r1, r0
   12484:	mov	r0, r9
   12488:	bl	1176c <context_type_set@plt>
   1248c:	cmp	r0, #0
   12490:	bne	12504 <__assert_fail@plt+0xa68>
   12494:	mov	r0, r9
   12498:	bl	11a0c <context_str@plt>
   1249c:	cmp	r0, #0
   124a0:	beq	12504 <__assert_fail@plt+0xa68>
   124a4:	bl	118e0 <setfscreatecon@plt>
   124a8:	mov	r8, r0
   124ac:	b	12504 <__assert_fail@plt+0xa68>
   124b0:	mov	r9, #0
   124b4:	mov	r6, #0
   124b8:	b	12504 <__assert_fail@plt+0xa68>
   124bc:	bl	118ec <__errno_location@plt>
   124c0:	mov	r5, r0
   124c4:	ldr	r0, [r0]
   124c8:	mvn	r8, #0
   124cc:	mov	r9, #0
   124d0:	mov	r6, #0
   124d4:	cmp	r0, #2
   124d8:	moveq	r0, #61	; 0x3d
   124dc:	streq	r0, [r5]
   124e0:	b	12504 <__assert_fail@plt+0xa68>
   124e4:	mov	r9, #0
   124e8:	mvn	r8, #0
   124ec:	bl	118ec <__errno_location@plt>
   124f0:	mov	r5, r0
   124f4:	mov	r6, #0
   124f8:	mov	r4, #0
   124fc:	b	12504 <__assert_fail@plt+0xa68>
   12500:	mov	r9, #0
   12504:	ldr	r7, [r5]
   12508:	mov	r0, r6
   1250c:	bl	11874 <context_free@plt>
   12510:	mov	r0, r9
   12514:	bl	11874 <context_free@plt>
   12518:	ldr	r0, [sp, #4]
   1251c:	bl	119dc <freecon@plt>
   12520:	ldr	r0, [sp]
   12524:	bl	119dc <freecon@plt>
   12528:	mov	r0, r4
   1252c:	bl	13370 <__assert_fail@plt+0x18d4>
   12530:	str	r7, [r5]
   12534:	mov	r0, r8
   12538:	sub	sp, fp, #24
   1253c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12540:	push	{r4, r5, r6, r7, fp, lr}
   12544:	add	fp, sp, #16
   12548:	sub	sp, sp, #8
   1254c:	mov	r5, r0
   12550:	ldrb	r0, [r1]
   12554:	mov	r6, r2
   12558:	mov	r4, #0
   1255c:	cmp	r0, #47	; 0x2f
   12560:	beq	12588 <__assert_fail@plt+0xaec>
   12564:	mov	r0, r1
   12568:	mov	r1, #2
   1256c:	bl	128dc <__assert_fail@plt+0xe40>
   12570:	mov	r4, r0
   12574:	cmp	r0, #0
   12578:	mov	r1, r0
   1257c:	moveq	r0, #0
   12580:	subeq	sp, fp, #16
   12584:	popeq	{r4, r5, r6, r7, fp, pc}
   12588:	cmp	r6, #0
   1258c:	beq	12638 <__assert_fail@plt+0xb9c>
   12590:	mov	r7, #0
   12594:	mov	r0, sp
   12598:	mov	r2, #0
   1259c:	stm	sp, {r1, r7}
   125a0:	mov	r1, #16
   125a4:	bl	1a778 <lchmod@@Base+0x36ec>
   125a8:	mov	r6, r0
   125ac:	bl	13e40 <__assert_fail@plt+0x23a4>
   125b0:	cmp	r0, #0
   125b4:	beq	125fc <__assert_fail@plt+0xb60>
   125b8:	mov	r7, #0
   125bc:	ldr	r1, [r6, #24]
   125c0:	mov	r0, r5
   125c4:	bl	12670 <__assert_fail@plt+0xbd4>
   125c8:	cmn	r0, #1
   125cc:	ble	125e4 <__assert_fail@plt+0xb48>
   125d0:	mov	r0, r6
   125d4:	bl	13e40 <__assert_fail@plt+0x23a4>
   125d8:	cmp	r0, #0
   125dc:	bne	125bc <__assert_fail@plt+0xb20>
   125e0:	b	125fc <__assert_fail@plt+0xb60>
   125e4:	bl	118ec <__errno_location@plt>
   125e8:	ldr	r7, [r0]
   125ec:	mov	r0, r6
   125f0:	bl	13e40 <__assert_fail@plt+0x23a4>
   125f4:	cmp	r0, #0
   125f8:	bne	125bc <__assert_fail@plt+0xb20>
   125fc:	bl	118ec <__errno_location@plt>
   12600:	mov	r5, r0
   12604:	ldr	r0, [r0]
   12608:	cmp	r0, #0
   1260c:	movne	r7, r0
   12610:	mov	r0, r6
   12614:	bl	13c98 <__assert_fail@plt+0x21fc>
   12618:	cmp	r0, #0
   1261c:	mov	r0, r4
   12620:	ldrne	r7, [r5]
   12624:	bl	13370 <__assert_fail@plt+0x18d4>
   12628:	clz	r0, r7
   1262c:	lsr	r0, r0, #5
   12630:	sub	sp, fp, #16
   12634:	pop	{r4, r5, r6, r7, fp, pc}
   12638:	mov	r0, r5
   1263c:	bl	12670 <__assert_fail@plt+0xbd4>
   12640:	mov	r5, r0
   12644:	bl	118ec <__errno_location@plt>
   12648:	ldr	r7, [r0]
   1264c:	mov	r6, r0
   12650:	mov	r0, r4
   12654:	bl	13370 <__assert_fail@plt+0x18d4>
   12658:	add	r0, r5, #1
   1265c:	cmn	r5, #1
   12660:	str	r7, [r6]
   12664:	movwne	r0, #1
   12668:	sub	sp, fp, #16
   1266c:	pop	{r4, r5, r6, r7, fp, pc}
   12670:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12674:	add	fp, sp, #28
   12678:	sub	sp, sp, #116	; 0x74
   1267c:	mov	r6, r0
   12680:	mov	r0, #0
   12684:	mov	r7, r1
   12688:	cmp	r6, #0
   1268c:	str	r0, [sp, #4]
   12690:	str	r0, [sp]
   12694:	beq	126e8 <__assert_fail@plt+0xc4c>
   12698:	mov	r0, r7
   1269c:	mov	r1, #32768	; 0x8000
   126a0:	bl	1182c <open64@plt>
   126a4:	mov	sl, r0
   126a8:	cmn	r0, #1
   126ac:	beq	12724 <__assert_fail@plt+0xc88>
   126b0:	add	r2, sp, #8
   126b4:	mov	r0, #3
   126b8:	mov	r1, sl
   126bc:	bl	117c0 <__fxstat64@plt>
   126c0:	mov	r5, #1
   126c4:	cmn	r0, #1
   126c8:	bgt	1275c <__assert_fail@plt+0xcc0>
   126cc:	bl	118ec <__errno_location@plt>
   126d0:	ldr	r5, [r0]
   126d4:	mov	r4, r0
   126d8:	mov	r8, #0
   126dc:	mvn	r9, #0
   126e0:	mov	r6, #0
   126e4:	b	12884 <__assert_fail@plt+0xde8>
   126e8:	mov	r0, sp
   126ec:	bl	119f4 <getfscreatecon@plt>
   126f0:	mvn	r9, #0
   126f4:	cmp	r0, #0
   126f8:	blt	12844 <__assert_fail@plt+0xda8>
   126fc:	ldr	r1, [sp]
   12700:	cmp	r1, #0
   12704:	beq	12838 <__assert_fail@plt+0xd9c>
   12708:	mov	r0, r7
   1270c:	bl	116f4 <lsetfilecon@plt>
   12710:	mov	r9, r0
   12714:	bl	118ec <__errno_location@plt>
   12718:	ldr	r5, [r0]
   1271c:	mov	r4, r0
   12720:	b	128a4 <__assert_fail@plt+0xe08>
   12724:	bl	118ec <__errno_location@plt>
   12728:	ldr	r5, [r0]
   1272c:	mov	r4, r0
   12730:	mov	r8, #0
   12734:	mvn	r9, #0
   12738:	cmp	r5, #40	; 0x28
   1273c:	bne	12830 <__assert_fail@plt+0xd94>
   12740:	add	r2, sp, #8
   12744:	mov	r0, #3
   12748:	mov	r1, r7
   1274c:	bl	11a54 <__lxstat64@plt>
   12750:	mov	r5, #0
   12754:	cmn	r0, #1
   12758:	ble	128bc <__assert_fail@plt+0xe20>
   1275c:	ldr	r3, [sp, #24]
   12760:	add	r1, sp, #4
   12764:	mov	r0, r6
   12768:	mov	r2, r7
   1276c:	bl	11694 <selabel_lookup@plt>
   12770:	cmn	r0, #1
   12774:	ble	1280c <__assert_fail@plt+0xd70>
   12778:	ldr	r0, [sp, #4]
   1277c:	bl	11748 <context_new@plt>
   12780:	mvn	r9, #0
   12784:	cmp	r0, #0
   12788:	beq	12850 <__assert_fail@plt+0xdb4>
   1278c:	mov	r8, r0
   12790:	mov	r1, sp
   12794:	cmp	r5, #0
   12798:	beq	1285c <__assert_fail@plt+0xdc0>
   1279c:	mov	r0, sl
   127a0:	bl	19a5c <lchmod@@Base+0x29d0>
   127a4:	cmp	r0, #0
   127a8:	blt	1286c <__assert_fail@plt+0xdd0>
   127ac:	ldr	r0, [sp]
   127b0:	bl	11748 <context_new@plt>
   127b4:	cmp	r0, #0
   127b8:	beq	1286c <__assert_fail@plt+0xdd0>
   127bc:	mov	r6, r0
   127c0:	mov	r0, r8
   127c4:	bl	116dc <context_type_get@plt>
   127c8:	cmp	r0, #0
   127cc:	beq	12870 <__assert_fail@plt+0xdd4>
   127d0:	mov	r1, r0
   127d4:	mov	r0, r6
   127d8:	bl	1176c <context_type_set@plt>
   127dc:	cmp	r0, #0
   127e0:	bne	12870 <__assert_fail@plt+0xdd4>
   127e4:	mov	r0, r6
   127e8:	bl	11a0c <context_str@plt>
   127ec:	cmp	r0, #0
   127f0:	beq	12870 <__assert_fail@plt+0xdd4>
   127f4:	mov	r1, r0
   127f8:	cmp	r5, #0
   127fc:	beq	128cc <__assert_fail@plt+0xe30>
   12800:	mov	r0, sl
   12804:	bl	11970 <fsetfilecon@plt>
   12808:	b	128d4 <__assert_fail@plt+0xe38>
   1280c:	bl	118ec <__errno_location@plt>
   12810:	ldr	r1, [r0]
   12814:	mvn	r9, #0
   12818:	mov	r6, #0
   1281c:	mov	r8, #0
   12820:	cmp	r1, #2
   12824:	moveq	r1, #61	; 0x3d
   12828:	streq	r1, [r0]
   1282c:	b	12870 <__assert_fail@plt+0xdd4>
   12830:	mov	r6, #0
   12834:	b	1288c <__assert_fail@plt+0xdf0>
   12838:	bl	118ec <__errno_location@plt>
   1283c:	mov	r1, #61	; 0x3d
   12840:	str	r1, [r0]
   12844:	mov	r0, r9
   12848:	sub	sp, fp, #28
   1284c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12850:	mov	r6, #0
   12854:	mov	r8, #0
   12858:	b	12870 <__assert_fail@plt+0xdd4>
   1285c:	mov	r0, r7
   12860:	bl	199e8 <lchmod@@Base+0x295c>
   12864:	cmp	r0, #0
   12868:	bge	127ac <__assert_fail@plt+0xd10>
   1286c:	mov	r6, #0
   12870:	bl	118ec <__errno_location@plt>
   12874:	ldr	r5, [r0]
   12878:	mov	r4, r0
   1287c:	cmn	sl, #1
   12880:	beq	1288c <__assert_fail@plt+0xdf0>
   12884:	mov	r0, sl
   12888:	bl	11a48 <close@plt>
   1288c:	mov	r0, r8
   12890:	bl	11874 <context_free@plt>
   12894:	mov	r0, r6
   12898:	bl	11874 <context_free@plt>
   1289c:	ldr	r0, [sp, #4]
   128a0:	bl	119dc <freecon@plt>
   128a4:	ldr	r0, [sp]
   128a8:	bl	119dc <freecon@plt>
   128ac:	str	r5, [r4]
   128b0:	mov	r0, r9
   128b4:	sub	sp, fp, #28
   128b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   128bc:	ldr	r5, [r4]
   128c0:	mov	r8, #0
   128c4:	mov	r6, #0
   128c8:	b	1288c <__assert_fail@plt+0xdf0>
   128cc:	mov	r0, r7
   128d0:	bl	116f4 <lsetfilecon@plt>
   128d4:	mov	r9, r0
   128d8:	b	12870 <__assert_fail@plt+0xdd4>
   128dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   128e0:	add	fp, sp, #28
   128e4:	sub	sp, sp, #180	; 0xb4
   128e8:	sub	sp, sp, #3072	; 0xc00
   128ec:	mov	r8, r0
   128f0:	and	r7, r1, #3
   128f4:	sub	r0, r1, #1
   128f8:	tst	r0, r7
   128fc:	beq	1291c <__assert_fail@plt+0xe80>
   12900:	bl	118ec <__errno_location@plt>
   12904:	mov	r1, #22
   12908:	mov	r4, #0
   1290c:	str	r1, [r0]
   12910:	mov	r0, r4
   12914:	sub	sp, fp, #28
   12918:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1291c:	cmp	r8, #0
   12920:	beq	12900 <__assert_fail@plt+0xe64>
   12924:	ldrb	r0, [r8]
   12928:	cmp	r0, #0
   1292c:	beq	12f34 <__assert_fail@plt+0x1498>
   12930:	sub	lr, fp, #1024	; 0x400
   12934:	mov	r4, r1
   12938:	mov	r1, #1024	; 0x400
   1293c:	cmp	r0, #47	; 0x2f
   12940:	sub	r2, lr, #40	; 0x28
   12944:	str	r1, [fp, #-1060]	; 0xfffffbdc
   12948:	add	r2, r2, #8
   1294c:	str	r2, [sp, #12]
   12950:	str	r2, [fp, #-1064]	; 0xfffffbd8
   12954:	add	r2, sp, #1184	; 0x4a0
   12958:	add	r2, r2, #8
   1295c:	str	r2, [sp, #1184]	; 0x4a0
   12960:	str	r2, [sp, #16]
   12964:	add	r2, sp, #48	; 0x30
   12968:	str	r1, [sp, #1188]	; 0x4a4
   1296c:	add	r5, r2, #8
   12970:	mov	r0, r5
   12974:	str	r5, [sp, #48]	; 0x30
   12978:	str	r1, [sp, #52]	; 0x34
   1297c:	str	r5, [sp, #8]
   12980:	bne	12f40 <__assert_fail@plt+0x14a4>
   12984:	mov	r1, r8
   12988:	mov	r2, #0
   1298c:	mov	r3, #1024	; 0x400
   12990:	bl	11a90 <__mempcpy_chk@plt>
   12994:	mov	r6, r0
   12998:	mov	r0, #47	; 0x2f
   1299c:	strb	r0, [r6], #1
   129a0:	ldrb	r0, [r8]
   129a4:	cmp	r0, #0
   129a8:	beq	12f6c <__assert_fail@plt+0x14d0>
   129ac:	and	r1, r4, #4
   129b0:	add	r9, sp, #48	; 0x30
   129b4:	str	r7, [sp, #32]
   129b8:	str	r1, [sp, #40]	; 0x28
   129bc:	mov	r1, #0
   129c0:	str	r1, [sp, #24]
   129c4:	mov	r1, #0
   129c8:	str	r1, [sp, #36]	; 0x24
   129cc:	mov	r1, #0
   129d0:	str	r1, [sp, #20]
   129d4:	uxtb	r1, r0
   129d8:	cmp	r1, #47	; 0x2f
   129dc:	bne	129ec <__assert_fail@plt+0xf50>
   129e0:	ldrb	r0, [r8, #1]!
   129e4:	cmp	r0, #47	; 0x2f
   129e8:	beq	129e0 <__assert_fail@plt+0xf44>
   129ec:	mov	r1, r0
   129f0:	mov	sl, r8
   129f4:	uxtb	r1, r1
   129f8:	cmp	r1, #0
   129fc:	cmpne	r1, #47	; 0x2f
   12a00:	beq	12a18 <__assert_fail@plt+0xf7c>
   12a04:	ldrb	r1, [sl, #1]!
   12a08:	uxtb	r1, r1
   12a0c:	cmp	r1, #0
   12a10:	cmpne	r1, #47	; 0x2f
   12a14:	bne	12a04 <__assert_fail@plt+0xf68>
   12a18:	sub	r2, sl, r8
   12a1c:	cmp	r2, #1
   12a20:	beq	12a8c <__assert_fail@plt+0xff0>
   12a24:	cmp	r2, #2
   12a28:	beq	12a38 <__assert_fail@plt+0xf9c>
   12a2c:	cmp	r2, #0
   12a30:	bne	12aac <__assert_fail@plt+0x1010>
   12a34:	b	12f74 <__assert_fail@plt+0x14d8>
   12a38:	uxtb	r0, r0
   12a3c:	cmp	r0, #46	; 0x2e
   12a40:	ldrbeq	r0, [r8, #1]
   12a44:	cmpeq	r0, #46	; 0x2e
   12a48:	bne	12aac <__assert_fail@plt+0x1010>
   12a4c:	add	r0, r5, #1
   12a50:	cmp	r6, r0
   12a54:	bls	12ef8 <__assert_fail@plt+0x145c>
   12a58:	sub	r0, r6, #1
   12a5c:	mov	r6, r0
   12a60:	cmp	r0, r5
   12a64:	bls	12f0c <__assert_fail@plt+0x1470>
   12a68:	mov	r0, r6
   12a6c:	ldrb	r1, [r0, #-1]!
   12a70:	cmp	r1, #47	; 0x2f
   12a74:	bne	12a5c <__assert_fail@plt+0xfc0>
   12a78:	mov	r8, sl
   12a7c:	ldrb	r0, [r8]
   12a80:	cmp	r0, #0
   12a84:	bne	129d4 <__assert_fail@plt+0xf38>
   12a88:	b	12f74 <__assert_fail@plt+0x14d8>
   12a8c:	uxtb	r0, r0
   12a90:	cmp	r0, #46	; 0x2e
   12a94:	bne	12aac <__assert_fail@plt+0x1010>
   12a98:	mov	r8, sl
   12a9c:	ldrb	r0, [r8]
   12aa0:	cmp	r0, #0
   12aa4:	bne	129d4 <__assert_fail@plt+0xf38>
   12aa8:	b	12f74 <__assert_fail@plt+0x14d8>
   12aac:	ldrb	r0, [r6, #-1]
   12ab0:	add	r4, r2, #2
   12ab4:	str	r2, [sp, #44]	; 0x2c
   12ab8:	cmp	r0, #47	; 0x2f
   12abc:	movne	r0, #47	; 0x2f
   12ac0:	strbne	r0, [r6], #1
   12ac4:	ldr	r0, [sp, #52]	; 0x34
   12ac8:	add	r0, r5, r0
   12acc:	sub	r0, r0, r6
   12ad0:	cmp	r0, r4
   12ad4:	bcs	12b0c <__assert_fail@plt+0x1070>
   12ad8:	mov	r0, r9
   12adc:	bl	198c0 <lchmod@@Base+0x2834>
   12ae0:	cmp	r0, #0
   12ae4:	beq	13084 <__assert_fail@plt+0x15e8>
   12ae8:	sub	r0, r6, r5
   12aec:	ldr	r5, [sp, #48]	; 0x30
   12af0:	ldr	r1, [sp, #52]	; 0x34
   12af4:	add	r6, r5, r0
   12af8:	add	r0, r5, r1
   12afc:	sub	r0, r0, r6
   12b00:	cmp	r0, r4
   12b04:	bcc	12ad8 <__assert_fail@plt+0x103c>
   12b08:	ldr	r2, [sp, #44]	; 0x2c
   12b0c:	mov	r0, r6
   12b10:	mov	r1, r8
   12b14:	mvn	r3, #0
   12b18:	bl	11a90 <__mempcpy_chk@plt>
   12b1c:	mov	r6, r0
   12b20:	mov	r0, #0
   12b24:	strb	r0, [r6]
   12b28:	ldr	r0, [sp, #40]	; 0x28
   12b2c:	cmp	r0, #0
   12b30:	bne	12b94 <__assert_fail@plt+0x10f8>
   12b34:	ldr	r0, [sp, #1188]	; 0x4a4
   12b38:	ldr	r7, [sp, #1184]	; 0x4a0
   12b3c:	sub	r9, r0, #1
   12b40:	mov	r0, r5
   12b44:	mov	r1, r7
   12b48:	mov	r2, r9
   12b4c:	bl	117cc <readlink@plt>
   12b50:	cmp	r0, r9
   12b54:	blt	12b6c <__assert_fail@plt+0x10d0>
   12b58:	add	r0, sp, #1184	; 0x4a0
   12b5c:	bl	19850 <lchmod@@Base+0x27c4>
   12b60:	cmp	r0, #0
   12b64:	bne	12b34 <__assert_fail@plt+0x1098>
   12b68:	b	13084 <__assert_fail@plt+0x15e8>
   12b6c:	mov	r4, r0
   12b70:	cmp	r0, #0
   12b74:	add	r9, sp, #48	; 0x30
   12b78:	blt	12b94 <__assert_fail@plt+0x10f8>
   12b7c:	ldr	r0, [sp, #24]
   12b80:	cmp	r0, #19
   12b84:	bgt	12c44 <__assert_fail@plt+0x11a8>
   12b88:	add	r0, r0, #1
   12b8c:	str	r0, [sp, #24]
   12b90:	b	12dd0 <__assert_fail@plt+0x1334>
   12b94:	ldr	r7, [sp, #32]
   12b98:	cmp	r7, #2
   12b9c:	bne	12bb4 <__assert_fail@plt+0x1118>
   12ba0:	mov	r8, sl
   12ba4:	ldrb	r0, [r8]
   12ba8:	cmp	r0, #0
   12bac:	bne	129d4 <__assert_fail@plt+0xf38>
   12bb0:	b	12f74 <__assert_fail@plt+0x14d8>
   12bb4:	ldrb	r0, [sl]
   12bb8:	cmp	r0, #47	; 0x2f
   12bbc:	bne	12d14 <__assert_fail@plt+0x1278>
   12bc0:	mov	r2, sl
   12bc4:	mov	r1, r2
   12bc8:	ldrb	r3, [r2, #1]!
   12bcc:	cmp	r3, #47	; 0x2f
   12bd0:	beq	12bc4 <__assert_fail@plt+0x1128>
   12bd4:	cmp	r3, #46	; 0x2e
   12bd8:	bne	12d0c <__assert_fail@plt+0x1270>
   12bdc:	add	r2, r1, #2
   12be0:	ldrb	r3, [r2]
   12be4:	cmp	r3, #47	; 0x2f
   12be8:	beq	12bc4 <__assert_fail@plt+0x1128>
   12bec:	cmp	r3, #0
   12bf0:	beq	12c0c <__assert_fail@plt+0x1170>
   12bf4:	cmp	r3, #46	; 0x2e
   12bf8:	bne	12d14 <__assert_fail@plt+0x1278>
   12bfc:	ldrb	r1, [r1, #3]
   12c00:	cmp	r1, #47	; 0x2f
   12c04:	cmpne	r1, #0
   12c08:	bne	12d14 <__assert_fail@plt+0x1278>
   12c0c:	mov	r0, #47	; 0x2f
   12c10:	mov	r1, r5
   12c14:	mov	r2, #0
   12c18:	mov	r3, #512	; 0x200
   12c1c:	strh	r0, [r6]
   12c20:	mvn	r0, #99	; 0x63
   12c24:	bl	11718 <faccessat@plt>
   12c28:	cmp	r0, #0
   12c2c:	bne	12d7c <__assert_fail@plt+0x12e0>
   12c30:	mov	r8, sl
   12c34:	ldrb	r0, [r8]
   12c38:	cmp	r0, #0
   12c3c:	bne	129d4 <__assert_fail@plt+0xf38>
   12c40:	b	12f74 <__assert_fail@plt+0x14d8>
   12c44:	ldrb	r0, [r8]
   12c48:	cmp	r0, #0
   12c4c:	beq	12dd0 <__assert_fail@plt+0x1334>
   12c50:	ldr	r9, [sp, #44]	; 0x2c
   12c54:	mov	r0, #0
   12c58:	add	lr, sp, #1024	; 0x400
   12c5c:	mov	r1, r5
   12c60:	add	r2, lr, #56	; 0x38
   12c64:	strb	r0, [r6, -r9]
   12c68:	ldrb	r0, [r5]
   12c6c:	cmp	r0, #0
   12c70:	movw	r0, #47195	; 0xb85b
   12c74:	movt	r0, #1
   12c78:	moveq	r1, r0
   12c7c:	mov	r0, #3
   12c80:	bl	11a24 <__xstat64@plt>
   12c84:	cmp	r0, #0
   12c88:	bne	13094 <__assert_fail@plt+0x15f8>
   12c8c:	rsb	r0, r9, #0
   12c90:	ldr	r9, [sp, #20]
   12c94:	ldrb	r1, [r8]
   12c98:	cmp	r9, #0
   12c9c:	strb	r1, [r6, r0]
   12ca0:	bne	12cd8 <__assert_fail@plt+0x123c>
   12ca4:	movw	r0, #28572	; 0x6f9c
   12ca8:	movw	r2, #28428	; 0x6f0c
   12cac:	movw	r3, #28484	; 0x6f44
   12cb0:	mov	r1, #0
   12cb4:	movt	r0, #1
   12cb8:	movt	r2, #1
   12cbc:	movt	r3, #1
   12cc0:	str	r0, [sp]
   12cc4:	mov	r0, #7
   12cc8:	bl	15fd8 <__assert_fail@plt+0x453c>
   12ccc:	mov	r9, r0
   12cd0:	cmp	r0, #0
   12cd4:	beq	13084 <__assert_fail@plt+0x15e8>
   12cd8:	add	lr, sp, #1024	; 0x400
   12cdc:	mov	r0, r9
   12ce0:	mov	r1, r8
   12ce4:	add	r2, lr, #56	; 0x38
   12ce8:	bl	13324 <__assert_fail@plt+0x1888>
   12cec:	cmp	r0, #0
   12cf0:	str	r9, [sp, #20]
   12cf4:	beq	12dbc <__assert_fail@plt+0x1320>
   12cf8:	ldr	r7, [sp, #32]
   12cfc:	cmp	r7, #2
   12d00:	bne	13088 <__assert_fail@plt+0x15ec>
   12d04:	mov	r8, sl
   12d08:	b	12e9c <__assert_fail@plt+0x1400>
   12d0c:	cmp	r3, #0
   12d10:	beq	12c0c <__assert_fail@plt+0x1170>
   12d14:	ldr	r1, [sp, #40]	; 0x28
   12d18:	cmp	r1, #0
   12d1c:	beq	12d3c <__assert_fail@plt+0x12a0>
   12d20:	cmp	r0, #0
   12d24:	beq	12d60 <__assert_fail@plt+0x12c4>
   12d28:	mov	r8, sl
   12d2c:	ldrb	r0, [r8]
   12d30:	cmp	r0, #0
   12d34:	bne	129d4 <__assert_fail@plt+0xf38>
   12d38:	b	12f74 <__assert_fail@plt+0x14d8>
   12d3c:	bl	118ec <__errno_location@plt>
   12d40:	ldr	r0, [r0]
   12d44:	cmp	r0, #22
   12d48:	bne	12d7c <__assert_fail@plt+0x12e0>
   12d4c:	mov	r8, sl
   12d50:	ldrb	r0, [r8]
   12d54:	cmp	r0, #0
   12d58:	bne	129d4 <__assert_fail@plt+0xf38>
   12d5c:	b	12f74 <__assert_fail@plt+0x14d8>
   12d60:	mvn	r0, #99	; 0x63
   12d64:	mov	r1, r5
   12d68:	mov	r2, #0
   12d6c:	mov	r3, #512	; 0x200
   12d70:	bl	11718 <faccessat@plt>
   12d74:	cmp	r0, #0
   12d78:	beq	12f20 <__assert_fail@plt+0x1484>
   12d7c:	mov	r4, #1
   12d80:	cmp	r7, #1
   12d84:	bne	12f94 <__assert_fail@plt+0x14f8>
   12d88:	bl	118ec <__errno_location@plt>
   12d8c:	ldr	r0, [r0]
   12d90:	cmp	r0, #2
   12d94:	bne	12f94 <__assert_fail@plt+0x14f8>
   12d98:	movw	r1, #48393	; 0xbd09
   12d9c:	mov	r0, sl
   12da0:	movt	r1, #1
   12da4:	bl	11a84 <strspn@plt>
   12da8:	ldrb	r0, [sl, r0]
   12dac:	mov	r8, sl
   12db0:	cmp	r0, #0
   12db4:	beq	12ee8 <__assert_fail@plt+0x144c>
   12db8:	b	12f94 <__assert_fail@plt+0x14f8>
   12dbc:	add	lr, sp, #1024	; 0x400
   12dc0:	mov	r0, r9
   12dc4:	mov	r1, r8
   12dc8:	add	r2, lr, #56	; 0x38
   12dcc:	bl	132a8 <__assert_fail@plt+0x180c>
   12dd0:	mov	r0, #0
   12dd4:	strb	r0, [r7, r4]
   12dd8:	ldr	r0, [sp, #36]	; 0x24
   12ddc:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   12de0:	tst	r0, #1
   12de4:	ldr	r0, [sp, #28]
   12de8:	subne	r0, sl, r8
   12dec:	str	r0, [sp, #28]
   12df0:	mov	r0, sl
   12df4:	bl	118bc <strlen@plt>
   12df8:	adds	r9, r0, r4
   12dfc:	str	r0, [sp, #44]	; 0x2c
   12e00:	bcs	13084 <__assert_fail@plt+0x15e8>
   12e04:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   12e08:	cmp	r0, r9
   12e0c:	bhi	12e34 <__assert_fail@plt+0x1398>
   12e10:	sub	lr, fp, #1024	; 0x400
   12e14:	sub	r0, lr, #40	; 0x28
   12e18:	bl	198c0 <lchmod@@Base+0x2834>
   12e1c:	cmp	r0, #0
   12e20:	beq	13084 <__assert_fail@plt+0x15e8>
   12e24:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   12e28:	cmp	r0, r9
   12e2c:	bls	12e10 <__assert_fail@plt+0x1374>
   12e30:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   12e34:	ldr	r0, [sp, #36]	; 0x24
   12e38:	ldr	r1, [sp, #44]	; 0x2c
   12e3c:	tst	r0, #1
   12e40:	ldr	r0, [sp, #28]
   12e44:	add	r2, r1, #1
   12e48:	addne	sl, r8, r0
   12e4c:	add	r0, r8, r4
   12e50:	mov	r1, sl
   12e54:	bl	11700 <memmove@plt>
   12e58:	mov	r0, r8
   12e5c:	mov	r1, r7
   12e60:	mov	r2, r4
   12e64:	bl	11730 <memcpy@plt>
   12e68:	ldrb	r0, [r7]
   12e6c:	cmp	r0, #47	; 0x2f
   12e70:	bne	12eb0 <__assert_fail@plt+0x1414>
   12e74:	mov	r0, r5
   12e78:	mov	r1, r7
   12e7c:	mov	r2, #0
   12e80:	mvn	r3, #0
   12e84:	bl	11a90 <__mempcpy_chk@plt>
   12e88:	mov	r6, r0
   12e8c:	mov	r0, #47	; 0x2f
   12e90:	strb	r0, [r6], #1
   12e94:	mov	r0, #1
   12e98:	str	r0, [sp, #36]	; 0x24
   12e9c:	add	r9, sp, #48	; 0x30
   12ea0:	ldrb	r0, [r8]
   12ea4:	cmp	r0, #0
   12ea8:	bne	129d4 <__assert_fail@plt+0xf38>
   12eac:	b	12f74 <__assert_fail@plt+0x14d8>
   12eb0:	add	r0, r5, #1
   12eb4:	mov	r1, #1
   12eb8:	add	r9, sp, #48	; 0x30
   12ebc:	cmp	r6, r0
   12ec0:	str	r1, [sp, #36]	; 0x24
   12ec4:	bls	12ee8 <__assert_fail@plt+0x144c>
   12ec8:	sub	r0, r6, #1
   12ecc:	mov	r6, r0
   12ed0:	cmp	r0, r5
   12ed4:	bls	12ee8 <__assert_fail@plt+0x144c>
   12ed8:	mov	r0, r6
   12edc:	ldrb	r1, [r0, #-1]!
   12ee0:	cmp	r1, #47	; 0x2f
   12ee4:	bne	12ecc <__assert_fail@plt+0x1430>
   12ee8:	ldrb	r0, [r8]
   12eec:	cmp	r0, #0
   12ef0:	bne	129d4 <__assert_fail@plt+0xf38>
   12ef4:	b	12f74 <__assert_fail@plt+0x14d8>
   12ef8:	mov	r8, sl
   12efc:	ldrb	r0, [r8]
   12f00:	cmp	r0, #0
   12f04:	bne	129d4 <__assert_fail@plt+0xf38>
   12f08:	b	12f74 <__assert_fail@plt+0x14d8>
   12f0c:	mov	r8, sl
   12f10:	ldrb	r0, [r8]
   12f14:	cmp	r0, #0
   12f18:	bne	129d4 <__assert_fail@plt+0xf38>
   12f1c:	b	12f74 <__assert_fail@plt+0x14d8>
   12f20:	mov	r8, sl
   12f24:	ldrb	r0, [r8]
   12f28:	cmp	r0, #0
   12f2c:	bne	129d4 <__assert_fail@plt+0xf38>
   12f30:	b	12f74 <__assert_fail@plt+0x14d8>
   12f34:	bl	118ec <__errno_location@plt>
   12f38:	mov	r1, #2
   12f3c:	b	12908 <__assert_fail@plt+0xe6c>
   12f40:	mov	r1, #1024	; 0x400
   12f44:	bl	11898 <getcwd@plt>
   12f48:	cmp	r0, #0
   12f4c:	beq	12fb8 <__assert_fail@plt+0x151c>
   12f50:	mov	r0, r5
   12f54:	mov	r1, #0
   12f58:	bl	1179c <rawmemchr@plt>
   12f5c:	mov	r6, r0
   12f60:	ldrb	r0, [r8]
   12f64:	cmp	r0, #0
   12f68:	bne	129ac <__assert_fail@plt+0xf10>
   12f6c:	mov	r0, #0
   12f70:	str	r0, [sp, #20]
   12f74:	add	r0, r5, #1
   12f78:	cmp	r6, r0
   12f7c:	bls	12f90 <__assert_fail@plt+0x14f4>
   12f80:	mov	r0, r6
   12f84:	ldrb	r1, [r0, #-1]!
   12f88:	cmp	r1, #47	; 0x2f
   12f8c:	moveq	r6, r0
   12f90:	mov	r4, #0
   12f94:	ldr	r0, [sp, #20]
   12f98:	cmp	r0, #0
   12f9c:	beq	13010 <__assert_fail@plt+0x1574>
   12fa0:	bl	162f4 <__assert_fail@plt+0x4858>
   12fa4:	ldr	r0, [fp, #-1064]	; 0xfffffbd8
   12fa8:	ldr	r1, [sp, #12]
   12fac:	cmp	r0, r1
   12fb0:	bne	13020 <__assert_fail@plt+0x1584>
   12fb4:	b	13024 <__assert_fail@plt+0x1588>
   12fb8:	bl	118ec <__errno_location@plt>
   12fbc:	ldr	r5, [sp, #8]
   12fc0:	mov	r6, r0
   12fc4:	add	r9, sp, #48	; 0x30
   12fc8:	ldr	r0, [r6]
   12fcc:	cmp	r0, #34	; 0x22
   12fd0:	bne	13000 <__assert_fail@plt+0x1564>
   12fd4:	mov	r0, r9
   12fd8:	bl	19850 <lchmod@@Base+0x27c4>
   12fdc:	cmp	r0, #0
   12fe0:	beq	13084 <__assert_fail@plt+0x15e8>
   12fe4:	ldr	r5, [sp, #48]	; 0x30
   12fe8:	ldr	r1, [sp, #52]	; 0x34
   12fec:	mov	r0, r5
   12ff0:	bl	11898 <getcwd@plt>
   12ff4:	cmp	r0, #0
   12ff8:	beq	12fc8 <__assert_fail@plt+0x152c>
   12ffc:	b	12f50 <__assert_fail@plt+0x14b4>
   13000:	cmp	r0, #12
   13004:	beq	13084 <__assert_fail@plt+0x15e8>
   13008:	mov	r4, #1
   1300c:	mov	r6, r5
   13010:	ldr	r0, [fp, #-1064]	; 0xfffffbd8
   13014:	ldr	r1, [sp, #12]
   13018:	cmp	r0, r1
   1301c:	beq	13024 <__assert_fail@plt+0x1588>
   13020:	bl	13370 <__assert_fail@plt+0x18d4>
   13024:	ldr	r0, [sp, #1184]	; 0x4a0
   13028:	ldr	r1, [sp, #16]
   1302c:	cmp	r0, r1
   13030:	beq	13038 <__assert_fail@plt+0x159c>
   13034:	bl	13370 <__assert_fail@plt+0x18d4>
   13038:	cmp	r4, #0
   1303c:	beq	13064 <__assert_fail@plt+0x15c8>
   13040:	ldr	r0, [sp, #48]	; 0x30
   13044:	ldr	r1, [sp, #8]
   13048:	mov	r4, #0
   1304c:	cmp	r0, r1
   13050:	beq	12910 <__assert_fail@plt+0xe74>
   13054:	bl	13370 <__assert_fail@plt+0x18d4>
   13058:	mov	r0, r4
   1305c:	sub	sp, fp, #28
   13060:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13064:	mov	r0, #0
   13068:	strb	r0, [r6], #1
   1306c:	add	r0, sp, #48	; 0x30
   13070:	sub	r1, r6, r5
   13074:	bl	197e8 <lchmod@@Base+0x275c>
   13078:	mov	r4, r0
   1307c:	cmp	r0, #0
   13080:	bne	12910 <__assert_fail@plt+0xe74>
   13084:	bl	1a734 <lchmod@@Base+0x36a8>
   13088:	bl	118ec <__errno_location@plt>
   1308c:	mov	r1, #40	; 0x28
   13090:	str	r1, [r0]
   13094:	mov	r4, #1
   13098:	ldr	r0, [sp, #20]
   1309c:	cmp	r0, #0
   130a0:	bne	12fa0 <__assert_fail@plt+0x1504>
   130a4:	b	13010 <__assert_fail@plt+0x1574>
   130a8:	movw	r1, #49632	; 0xc1e0
   130ac:	movt	r1, #2
   130b0:	str	r0, [r1, #4]
   130b4:	bx	lr
   130b8:	movw	r1, #49632	; 0xc1e0
   130bc:	movt	r1, #2
   130c0:	strb	r0, [r1]
   130c4:	bx	lr
   130c8:	push	{r4, r5, r6, sl, fp, lr}
   130cc:	add	fp, sp, #16
   130d0:	sub	sp, sp, #8
   130d4:	movw	r0, #49620	; 0xc1d4
   130d8:	movt	r0, #2
   130dc:	ldr	r0, [r0]
   130e0:	bl	1a964 <lchmod@@Base+0x38d8>
   130e4:	cmp	r0, #0
   130e8:	beq	13110 <__assert_fail@plt+0x1674>
   130ec:	movw	r5, #49632	; 0xc1e0
   130f0:	movt	r5, #2
   130f4:	ldrb	r0, [r5]
   130f8:	cmp	r0, #0
   130fc:	beq	1313c <__assert_fail@plt+0x16a0>
   13100:	bl	118ec <__errno_location@plt>
   13104:	ldr	r0, [r0]
   13108:	cmp	r0, #32
   1310c:	bne	1313c <__assert_fail@plt+0x16a0>
   13110:	movw	r0, #49616	; 0xc1d0
   13114:	movt	r0, #2
   13118:	ldr	r0, [r0]
   1311c:	bl	1a964 <lchmod@@Base+0x38d8>
   13120:	cmp	r0, #0
   13124:	subeq	sp, fp, #16
   13128:	popeq	{r4, r5, r6, sl, fp, pc}
   1312c:	movw	r0, #49532	; 0xc17c
   13130:	movt	r0, #2
   13134:	ldr	r0, [r0]
   13138:	bl	11724 <_exit@plt>
   1313c:	movw	r1, #47175	; 0xb847
   13140:	mov	r0, #0
   13144:	mov	r2, #5
   13148:	movt	r1, #1
   1314c:	bl	11760 <dcgettext@plt>
   13150:	ldr	r6, [r5, #4]
   13154:	mov	r4, r0
   13158:	bl	118ec <__errno_location@plt>
   1315c:	ldr	r5, [r0]
   13160:	cmp	r6, #0
   13164:	bne	13180 <__assert_fail@plt+0x16e4>
   13168:	movw	r2, #47191	; 0xb857
   1316c:	mov	r0, #0
   13170:	mov	r1, r5
   13174:	mov	r3, r4
   13178:	movt	r2, #1
   1317c:	b	131a0 <__assert_fail@plt+0x1704>
   13180:	mov	r0, r6
   13184:	bl	19448 <lchmod@@Base+0x23bc>
   13188:	movw	r2, #47187	; 0xb853
   1318c:	mov	r3, r0
   13190:	str	r4, [sp]
   13194:	mov	r0, #0
   13198:	mov	r1, r5
   1319c:	movt	r2, #1
   131a0:	bl	11820 <error@plt>
   131a4:	movw	r0, #49532	; 0xc17c
   131a8:	movt	r0, #2
   131ac:	ldr	r0, [r0]
   131b0:	bl	11724 <_exit@plt>
   131b4:	push	{fp, lr}
   131b8:	mov	fp, sp
   131bc:	bl	13214 <__assert_fail@plt+0x1778>
   131c0:	cmp	r0, #0
   131c4:	popne	{fp, pc}
   131c8:	bl	1a734 <lchmod@@Base+0x36a8>
   131cc:	push	{r4, r5, r6, sl, fp, lr}
   131d0:	add	fp, sp, #16
   131d4:	mov	r5, r0
   131d8:	mov	r4, r0
   131dc:	ldrb	r6, [r5], #-1
   131e0:	bl	1a8cc <lchmod@@Base+0x3840>
   131e4:	sub	r2, r0, r4
   131e8:	sub	r0, r6, #47	; 0x2f
   131ec:	clz	r0, r0
   131f0:	lsr	r1, r0, #5
   131f4:	mov	r0, r2
   131f8:	cmp	r2, r1
   131fc:	popls	{r4, r5, r6, sl, fp, pc}
   13200:	ldrb	r3, [r5, r0]
   13204:	sub	r2, r0, #1
   13208:	cmp	r3, #47	; 0x2f
   1320c:	beq	131f4 <__assert_fail@plt+0x1758>
   13210:	pop	{r4, r5, r6, sl, fp, pc}
   13214:	push	{r4, r5, r6, sl, fp, lr}
   13218:	add	fp, sp, #16
   1321c:	mov	r6, r0
   13220:	mov	r4, r0
   13224:	ldrb	r5, [r6], #-1
   13228:	bl	1a8cc <lchmod@@Base+0x3840>
   1322c:	sub	r1, r0, r4
   13230:	sub	r0, r5, #47	; 0x2f
   13234:	clz	r0, r0
   13238:	lsr	r0, r0, #5
   1323c:	mov	r5, r1
   13240:	cmp	r1, r0
   13244:	bls	13258 <__assert_fail@plt+0x17bc>
   13248:	ldrb	r2, [r6, r5]
   1324c:	sub	r1, r5, #1
   13250:	cmp	r2, #47	; 0x2f
   13254:	beq	1323c <__assert_fail@plt+0x17a0>
   13258:	cmp	r5, #0
   1325c:	mov	r0, r5
   13260:	addeq	r0, r0, #1
   13264:	add	r0, r0, #1
   13268:	bl	1a848 <lchmod@@Base+0x37bc>
   1326c:	mov	r6, r0
   13270:	cmp	r0, #0
   13274:	beq	132a0 <__assert_fail@plt+0x1804>
   13278:	mov	r0, r6
   1327c:	mov	r1, r4
   13280:	mov	r2, r5
   13284:	bl	11730 <memcpy@plt>
   13288:	cmp	r5, #0
   1328c:	moveq	r0, #46	; 0x2e
   13290:	moveq	r5, #1
   13294:	strbeq	r0, [r6]
   13298:	mov	r0, #0
   1329c:	strb	r0, [r6, r5]
   132a0:	mov	r0, r6
   132a4:	pop	{r4, r5, r6, sl, fp, pc}
   132a8:	push	{r4, r5, r6, r7, fp, lr}
   132ac:	add	fp, sp, #16
   132b0:	cmp	r0, #0
   132b4:	popeq	{r4, r5, r6, r7, fp, pc}
   132b8:	mov	r5, r0
   132bc:	mov	r0, #24
   132c0:	mov	r6, r2
   132c4:	mov	r7, r1
   132c8:	bl	1a1d4 <lchmod@@Base+0x3148>
   132cc:	mov	r4, r0
   132d0:	mov	r0, r7
   132d4:	bl	1a6f4 <lchmod@@Base+0x3668>
   132d8:	str	r0, [r4]
   132dc:	ldrd	r0, [r6, #96]	; 0x60
   132e0:	str	r1, [r4, #12]
   132e4:	str	r0, [r4, #8]
   132e8:	ldrd	r0, [r6]
   132ec:	str	r1, [r4, #20]
   132f0:	str	r0, [r4, #16]
   132f4:	mov	r0, r5
   132f8:	mov	r1, r4
   132fc:	bl	16c10 <__assert_fail@plt+0x5174>
   13300:	cmp	r0, #0
   13304:	beq	13320 <__assert_fail@plt+0x1884>
   13308:	cmp	r0, r4
   1330c:	beq	1331c <__assert_fail@plt+0x1880>
   13310:	mov	r0, r4
   13314:	pop	{r4, r5, r6, r7, fp, lr}
   13318:	b	16f9c <__assert_fail@plt+0x5500>
   1331c:	pop	{r4, r5, r6, r7, fp, pc}
   13320:	bl	1a734 <lchmod@@Base+0x36a8>
   13324:	cmp	r0, #0
   13328:	moveq	r0, #0
   1332c:	bxeq	lr
   13330:	push	{r4, r5, fp, lr}
   13334:	add	fp, sp, #8
   13338:	sub	sp, sp, #24
   1333c:	str	r1, [sp]
   13340:	mov	r1, sp
   13344:	ldrd	r4, [r2, #96]	; 0x60
   13348:	str	r5, [sp, #12]
   1334c:	str	r4, [sp, #8]
   13350:	ldrd	r2, [r2]
   13354:	str	r3, [sp, #20]
   13358:	str	r2, [sp, #16]
   1335c:	bl	15d10 <__assert_fail@plt+0x4274>
   13360:	cmp	r0, #0
   13364:	movwne	r0, #1
   13368:	sub	sp, fp, #8
   1336c:	pop	{r4, r5, fp, pc}
   13370:	push	{r4, r5, r6, sl, fp, lr}
   13374:	add	fp, sp, #16
   13378:	mov	r4, r0
   1337c:	bl	118ec <__errno_location@plt>
   13380:	ldr	r6, [r0]
   13384:	mov	r5, r0
   13388:	mov	r0, r4
   1338c:	bl	1170c <free@plt>
   13390:	str	r6, [r5]
   13394:	pop	{r4, r5, r6, sl, fp, pc}
   13398:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1339c:	add	fp, sp, #28
   133a0:	sub	sp, sp, #28
   133a4:	cmp	r1, #4096	; 0x1000
   133a8:	bcs	133c4 <__assert_fail@plt+0x1928>
   133ac:	mov	sl, r0
   133b0:	and	r0, r1, #516	; 0x204
   133b4:	mov	r6, r1
   133b8:	cmp	r0, #516	; 0x204
   133bc:	tstne	r6, #18
   133c0:	bne	133e0 <__assert_fail@plt+0x1944>
   133c4:	bl	118ec <__errno_location@plt>
   133c8:	mov	r1, #22
   133cc:	mov	r4, #0
   133d0:	str	r1, [r0]
   133d4:	mov	r0, r4
   133d8:	sub	sp, fp, #28
   133dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133e0:	mov	r0, #1
   133e4:	mov	r1, #96	; 0x60
   133e8:	mov	r5, r2
   133ec:	bl	1a7f4 <lchmod@@Base+0x3768>
   133f0:	cmp	r0, #0
   133f4:	beq	139b0 <__assert_fail@plt+0x1f14>
   133f8:	mov	r4, r0
   133fc:	mvn	r0, #99	; 0x63
   13400:	tst	r6, #2
   13404:	mov	r1, r6
   13408:	str	r0, [r4, #32]
   1340c:	bic	r0, r6, #516	; 0x204
   13410:	str	r5, [r4, #44]	; 0x2c
   13414:	str	r4, [sp, #24]
   13418:	orrne	r1, r0, #4
   1341c:	str	r1, [r4, #48]	; 0x30
   13420:	ldr	r0, [sl]
   13424:	cmp	r0, #0
   13428:	beq	1348c <__assert_fail@plt+0x19f0>
   1342c:	add	r7, sl, #4
   13430:	mov	r4, #0
   13434:	bl	118bc <strlen@plt>
   13438:	cmp	r0, r4
   1343c:	movhi	r4, r0
   13440:	ldr	r0, [r7], #4
   13444:	cmp	r0, #0
   13448:	bne	13434 <__assert_fail@plt+0x1998>
   1344c:	add	r0, r4, #1
   13450:	ldr	r4, [sp, #24]
   13454:	cmp	r0, #4096	; 0x1000
   13458:	movls	r0, #4096	; 0x1000
   1345c:	ldr	r1, [r4, #36]	; 0x24
   13460:	add	r0, r0, #256	; 0x100
   13464:	adds	r1, r0, r1
   13468:	bcc	134a0 <__assert_fail@plt+0x1a04>
   1346c:	ldr	r0, [r4, #24]
   13470:	bl	13370 <__assert_fail@plt+0x18d4>
   13474:	mov	r0, #0
   13478:	str	r0, [r4, #24]
   1347c:	bl	118ec <__errno_location@plt>
   13480:	mov	r1, #36	; 0x24
   13484:	str	r1, [r0]
   13488:	b	139a8 <__assert_fail@plt+0x1f0c>
   1348c:	mov	r0, #4096	; 0x1000
   13490:	ldr	r1, [r4, #36]	; 0x24
   13494:	add	r0, r0, #256	; 0x100
   13498:	adds	r1, r0, r1
   1349c:	bcs	1346c <__assert_fail@plt+0x19d0>
   134a0:	str	r1, [r4, #36]	; 0x24
   134a4:	ldr	r0, [r4, #24]
   134a8:	bl	1a878 <lchmod@@Base+0x37ec>
   134ac:	cmp	r0, #0
   134b0:	beq	13514 <__assert_fail@plt+0x1a78>
   134b4:	str	r0, [r4, #24]
   134b8:	ldr	r0, [sl]
   134bc:	cmp	r0, #0
   134c0:	beq	13528 <__assert_fail@plt+0x1a8c>
   134c4:	mov	r0, #176	; 0xb0
   134c8:	bl	1a848 <lchmod@@Base+0x37bc>
   134cc:	cmp	r0, #0
   134d0:	beq	139a0 <__assert_fail@plt+0x1f04>
   134d4:	ldr	r1, [r4, #24]
   134d8:	mov	r7, r0
   134dc:	mov	r0, #0
   134e0:	mov	r2, #196608	; 0x30000
   134e4:	strb	r0, [r7, #168]	; 0xa8
   134e8:	str	r2, [r7, #58]	; 0x3a
   134ec:	mvn	r2, #0
   134f0:	str	r0, [r7, #12]
   134f4:	str	r0, [r7, #16]
   134f8:	str	r0, [r7, #20]
   134fc:	str	r4, [r7, #44]	; 0x2c
   13500:	str	r2, [r7, #48]	; 0x30
   13504:	str	r0, [r7, #52]	; 0x34
   13508:	str	r1, [r7, #28]
   1350c:	str	r0, [r7, #32]
   13510:	b	1352c <__assert_fail@plt+0x1a90>
   13514:	ldr	r0, [r4, #24]
   13518:	bl	13370 <__assert_fail@plt+0x18d4>
   1351c:	mov	r0, #0
   13520:	str	r0, [r4, #24]
   13524:	b	139a8 <__assert_fail@plt+0x1f0c>
   13528:	mov	r7, #0
   1352c:	cmp	r5, #0
   13530:	ldrbne	r0, [r4, #49]	; 0x31
   13534:	ubfxne	r0, r0, #2, #1
   13538:	ldr	r4, [sl]
   1353c:	moveq	r0, #1
   13540:	str	r0, [sp, #12]
   13544:	cmp	r4, #0
   13548:	beq	136b0 <__assert_fail@plt+0x1c14>
   1354c:	tst	r6, #2048	; 0x800
   13550:	str	r7, [sp, #20]
   13554:	str	r5, [sp, #16]
   13558:	bne	136d4 <__assert_fail@plt+0x1c38>
   1355c:	mov	r0, #0
   13560:	mov	r8, #0
   13564:	mov	r5, #0
   13568:	str	r0, [sp, #8]
   1356c:	mov	r0, r4
   13570:	bl	118bc <strlen@plt>
   13574:	mov	r9, r0
   13578:	cmp	r0, #3
   1357c:	bcc	135ac <__assert_fail@plt+0x1b10>
   13580:	add	r0, r4, r9
   13584:	ldrb	r0, [r0, #-1]
   13588:	cmp	r0, #47	; 0x2f
   1358c:	bne	135ac <__assert_fail@plt+0x1b10>
   13590:	sub	r0, r4, #2
   13594:	ldrb	r1, [r0, r9]
   13598:	cmp	r1, #47	; 0x2f
   1359c:	bne	135ac <__assert_fail@plt+0x1b10>
   135a0:	sub	r9, r9, #1
   135a4:	cmp	r9, #1
   135a8:	bhi	13594 <__assert_fail@plt+0x1af8>
   135ac:	add	r0, r9, #176	; 0xb0
   135b0:	bic	r0, r0, #7
   135b4:	bl	1a848 <lchmod@@Base+0x37bc>
   135b8:	cmp	r0, #0
   135bc:	beq	13814 <__assert_fail@plt+0x1d78>
   135c0:	add	r6, r0, #168	; 0xa8
   135c4:	mov	r7, r0
   135c8:	mov	r1, r4
   135cc:	mov	r2, r9
   135d0:	mov	r0, r6
   135d4:	bl	11730 <memcpy@plt>
   135d8:	ldr	r0, [sp, #24]
   135dc:	mov	r4, #0
   135e0:	mov	r1, #196608	; 0x30000
   135e4:	cmp	r8, #0
   135e8:	strb	r4, [r6, r9]
   135ec:	str	r1, [r7, #58]	; 0x3a
   135f0:	add	r1, r7, #44	; 0x2c
   135f4:	ldr	r2, [r0, #24]
   135f8:	stm	r1, {r0, r4, r9}
   135fc:	ldr	r1, [sp, #20]
   13600:	str	r1, [r7, #4]
   13604:	str	r4, [r7, #12]
   13608:	str	r4, [r7, #16]
   1360c:	str	r4, [r7, #20]
   13610:	str	r6, [r7, #24]
   13614:	str	r2, [r7, #28]
   13618:	ldr	r2, [sp, #12]
   1361c:	mov	r1, r8
   13620:	str	r4, [r7, #32]
   13624:	movwne	r1, #1
   13628:	tst	r2, r1
   1362c:	beq	1365c <__assert_fail@plt+0x1bc0>
   13630:	mov	r0, #2
   13634:	str	r0, [r7, #112]	; 0x70
   13638:	mov	r0, #11
   1363c:	str	r4, [r7, #116]	; 0x74
   13640:	strh	r0, [r7, #56]	; 0x38
   13644:	ldr	r0, [sp, #16]
   13648:	cmp	r0, #0
   1364c:	beq	13678 <__assert_fail@plt+0x1bdc>
   13650:	str	r8, [r7, #8]
   13654:	mov	r8, r7
   13658:	b	13690 <__assert_fail@plt+0x1bf4>
   1365c:	mov	r1, r7
   13660:	mov	r2, #0
   13664:	bl	139fc <__assert_fail@plt+0x1f60>
   13668:	strh	r0, [r7, #56]	; 0x38
   1366c:	ldr	r0, [sp, #16]
   13670:	cmp	r0, #0
   13674:	bne	13650 <__assert_fail@plt+0x1bb4>
   13678:	cmp	r8, #0
   1367c:	str	r4, [r7, #8]
   13680:	beq	136a4 <__assert_fail@plt+0x1c08>
   13684:	ldr	r0, [sp, #8]
   13688:	str	r7, [sp, #8]
   1368c:	str	r7, [r0, #8]
   13690:	ldr	r4, [sl, #4]!
   13694:	add	r5, r5, #1
   13698:	cmp	r4, #0
   1369c:	bne	1356c <__assert_fail@plt+0x1ad0>
   136a0:	b	13824 <__assert_fail@plt+0x1d88>
   136a4:	mov	r0, r7
   136a8:	str	r7, [sp, #8]
   136ac:	b	13654 <__assert_fail@plt+0x1bb8>
   136b0:	ldr	r4, [sp, #24]
   136b4:	mov	r8, #0
   136b8:	mov	r0, #176	; 0xb0
   136bc:	bl	1a848 <lchmod@@Base+0x37bc>
   136c0:	cmp	r0, #0
   136c4:	bne	13880 <__assert_fail@plt+0x1de4>
   136c8:	mov	r0, #0
   136cc:	str	r0, [r4]
   136d0:	b	13964 <__assert_fail@plt+0x1ec8>
   136d4:	add	r0, sl, #4
   136d8:	mov	r9, #0
   136dc:	mov	r8, #0
   136e0:	mov	r5, #0
   136e4:	str	r0, [sp, #8]
   136e8:	ldr	r0, [sp, #12]
   136ec:	eor	r0, r0, #1
   136f0:	str	r0, [sp, #12]
   136f4:	mov	r0, #0
   136f8:	str	r0, [sp, #4]
   136fc:	mov	r0, r4
   13700:	mov	sl, r5
   13704:	bl	118bc <strlen@plt>
   13708:	mov	r7, r0
   1370c:	add	r0, r0, #176	; 0xb0
   13710:	bic	r0, r0, #7
   13714:	bl	1a848 <lchmod@@Base+0x37bc>
   13718:	cmp	r0, #0
   1371c:	beq	13814 <__assert_fail@plt+0x1d78>
   13720:	add	r6, r0, #168	; 0xa8
   13724:	mov	r5, r0
   13728:	mov	r1, r4
   1372c:	mov	r2, r7
   13730:	mov	r0, r6
   13734:	bl	11730 <memcpy@plt>
   13738:	ldr	r0, [sp, #24]
   1373c:	mov	r1, #196608	; 0x30000
   13740:	strb	r9, [r6, r7]
   13744:	str	r1, [r5, #58]	; 0x3a
   13748:	ldr	r1, [sp, #20]
   1374c:	ldr	r2, [r0, #24]
   13750:	str	r0, [r5, #44]	; 0x2c
   13754:	str	r9, [r5, #48]	; 0x30
   13758:	str	r7, [r5, #52]	; 0x34
   1375c:	str	r1, [r5, #4]
   13760:	str	r9, [r5, #12]
   13764:	str	r9, [r5, #16]
   13768:	str	r9, [r5, #20]
   1376c:	str	r6, [r5, #24]
   13770:	clz	r1, r8
   13774:	lsr	r1, r1, #5
   13778:	str	r2, [r5, #28]
   1377c:	ldr	r2, [sp, #12]
   13780:	str	r9, [r5, #32]
   13784:	orrs	r1, r2, r1
   13788:	bne	137b8 <__assert_fail@plt+0x1d1c>
   1378c:	mov	r0, #2
   13790:	str	r0, [r5, #112]	; 0x70
   13794:	str	r9, [r5, #116]	; 0x74
   13798:	mov	r0, #11
   1379c:	strh	r0, [r5, #56]	; 0x38
   137a0:	ldr	r0, [sp, #16]
   137a4:	cmp	r0, #0
   137a8:	beq	137d4 <__assert_fail@plt+0x1d38>
   137ac:	str	r8, [r5, #8]
   137b0:	mov	r8, r5
   137b4:	b	137ec <__assert_fail@plt+0x1d50>
   137b8:	mov	r1, r5
   137bc:	mov	r2, #0
   137c0:	bl	139fc <__assert_fail@plt+0x1f60>
   137c4:	strh	r0, [r5, #56]	; 0x38
   137c8:	ldr	r0, [sp, #16]
   137cc:	cmp	r0, #0
   137d0:	bne	137ac <__assert_fail@plt+0x1d10>
   137d4:	cmp	r8, #0
   137d8:	str	r9, [r5, #8]
   137dc:	beq	13808 <__assert_fail@plt+0x1d6c>
   137e0:	ldr	r0, [sp, #4]
   137e4:	str	r5, [sp, #4]
   137e8:	str	r5, [r0, #8]
   137ec:	ldr	r0, [sp, #8]
   137f0:	mov	r5, sl
   137f4:	add	r5, sl, #1
   137f8:	ldr	r4, [r0, sl, lsl #2]
   137fc:	cmp	r4, #0
   13800:	bne	136fc <__assert_fail@plt+0x1c60>
   13804:	b	13824 <__assert_fail@plt+0x1d88>
   13808:	mov	r0, r5
   1380c:	str	r5, [sp, #4]
   13810:	b	137b0 <__assert_fail@plt+0x1d14>
   13814:	ldr	r7, [sp, #20]
   13818:	cmp	r8, #0
   1381c:	bne	1396c <__assert_fail@plt+0x1ed0>
   13820:	b	13994 <__assert_fail@plt+0x1ef8>
   13824:	ldr	r0, [sp, #16]
   13828:	cmp	r0, #0
   1382c:	beq	13868 <__assert_fail@plt+0x1dcc>
   13830:	ldr	r7, [sp, #20]
   13834:	ldr	r4, [sp, #24]
   13838:	cmp	r5, #2
   1383c:	bcc	13870 <__assert_fail@plt+0x1dd4>
   13840:	mov	r0, r4
   13844:	mov	r1, r8
   13848:	mov	r2, r5
   1384c:	bl	13b94 <__assert_fail@plt+0x20f8>
   13850:	mov	r8, r0
   13854:	mov	r0, #176	; 0xb0
   13858:	bl	1a848 <lchmod@@Base+0x37bc>
   1385c:	cmp	r0, #0
   13860:	bne	13880 <__assert_fail@plt+0x1de4>
   13864:	b	136c8 <__assert_fail@plt+0x1c2c>
   13868:	ldr	r7, [sp, #20]
   1386c:	ldr	r4, [sp, #24]
   13870:	mov	r0, #176	; 0xb0
   13874:	bl	1a848 <lchmod@@Base+0x37bc>
   13878:	cmp	r0, #0
   1387c:	beq	136c8 <__assert_fail@plt+0x1c2c>
   13880:	ldr	r2, [r4, #24]
   13884:	mov	r1, #0
   13888:	mov	r3, #196608	; 0x30000
   1388c:	str	r0, [r4]
   13890:	str	r1, [r0, #52]	; 0x34
   13894:	strb	r1, [r0, #168]	; 0xa8
   13898:	str	r4, [r0, #44]	; 0x2c
   1389c:	str	r3, [r0, #58]	; 0x3a
   138a0:	str	r2, [r0, #28]
   138a4:	mov	r2, #9
   138a8:	str	r1, [r0, #32]
   138ac:	strh	r2, [r0, #56]	; 0x38
   138b0:	str	r8, [r0, #8]
   138b4:	str	r1, [r0, #12]
   138b8:	str	r1, [r0, #16]
   138bc:	str	r1, [r0, #20]
   138c0:	mov	r1, #1
   138c4:	str	r1, [r0, #48]	; 0x30
   138c8:	ldrh	r0, [r4, #48]	; 0x30
   138cc:	movw	r1, #258	; 0x102
   138d0:	tst	r0, r1
   138d4:	beq	13910 <__assert_fail@plt+0x1e74>
   138d8:	movw	r0, #13168	; 0x3370
   138dc:	movw	r2, #22812	; 0x591c
   138e0:	movw	r3, #22844	; 0x593c
   138e4:	mov	r1, #0
   138e8:	movt	r0, #1
   138ec:	movt	r2, #1
   138f0:	movt	r3, #1
   138f4:	str	r0, [sp]
   138f8:	mov	r0, #31
   138fc:	bl	15fd8 <__assert_fail@plt+0x453c>
   13900:	cmp	r0, #0
   13904:	str	r0, [r4, #56]	; 0x38
   13908:	bne	13928 <__assert_fail@plt+0x1e8c>
   1390c:	b	13964 <__assert_fail@plt+0x1ec8>
   13910:	mov	r0, #32
   13914:	bl	1a848 <lchmod@@Base+0x37bc>
   13918:	cmp	r0, #0
   1391c:	str	r0, [r4, #56]	; 0x38
   13920:	beq	13964 <__assert_fail@plt+0x1ec8>
   13924:	bl	1a9e8 <lchmod@@Base+0x395c>
   13928:	ldr	r4, [sp, #24]
   1392c:	ldr	r0, [r4, #48]	; 0x30
   13930:	tst	r0, #516	; 0x204
   13934:	bne	139e4 <__assert_fail@plt+0x1f48>
   13938:	mov	r1, #32768	; 0x8000
   1393c:	tst	r0, #512	; 0x200
   13940:	and	r1, r1, r0, lsl #11
   13944:	orr	r1, r1, #18688	; 0x4900
   13948:	orr	r2, r1, #524288	; 0x80000
   1394c:	bne	139c0 <__assert_fail@plt+0x1f24>
   13950:	movw	r0, #47195	; 0xb85b
   13954:	mov	r1, r2
   13958:	movt	r0, #1
   1395c:	bl	1ad58 <lchmod@@Base+0x3ccc>
   13960:	b	139d0 <__assert_fail@plt+0x1f34>
   13964:	cmp	r8, #0
   13968:	beq	13994 <__assert_fail@plt+0x1ef8>
   1396c:	ldrd	r4, [r8, #8]
   13970:	cmp	r5, #0
   13974:	beq	13980 <__assert_fail@plt+0x1ee4>
   13978:	mov	r0, r5
   1397c:	bl	11a78 <closedir@plt>
   13980:	mov	r0, r8
   13984:	bl	13370 <__assert_fail@plt+0x18d4>
   13988:	cmp	r4, #0
   1398c:	mov	r8, r4
   13990:	bne	1396c <__assert_fail@plt+0x1ed0>
   13994:	mov	r0, r7
   13998:	bl	13370 <__assert_fail@plt+0x18d4>
   1399c:	ldr	r4, [sp, #24]
   139a0:	ldr	r0, [r4, #24]
   139a4:	bl	13370 <__assert_fail@plt+0x18d4>
   139a8:	mov	r0, r4
   139ac:	bl	13370 <__assert_fail@plt+0x18d4>
   139b0:	mov	r4, #0
   139b4:	mov	r0, r4
   139b8:	sub	sp, fp, #28
   139bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   139c0:	ldr	r0, [r4, #32]
   139c4:	movw	r1, #47195	; 0xb85b
   139c8:	movt	r1, #1
   139cc:	bl	177b4 <lchmod@@Base+0x728>
   139d0:	str	r0, [r4, #28]
   139d4:	cmn	r0, #1
   139d8:	ldrle	r0, [r4, #48]	; 0x30
   139dc:	orrle	r0, r0, #4
   139e0:	strle	r0, [r4, #48]	; 0x30
   139e4:	add	r0, r4, #60	; 0x3c
   139e8:	mvn	r1, #0
   139ec:	bl	16fbc <__assert_fail@plt+0x5520>
   139f0:	mov	r0, r4
   139f4:	sub	sp, fp, #28
   139f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   139fc:	push	{r4, r5, r6, sl, fp, lr}
   13a00:	add	fp, sp, #16
   13a04:	sub	sp, sp, #8
   13a08:	mov	r4, r1
   13a0c:	ldr	r1, [r0, #48]	; 0x30
   13a10:	ldr	r3, [r4, #48]	; 0x30
   13a14:	add	r5, r4, #64	; 0x40
   13a18:	cmp	r3, #0
   13a1c:	andeq	r3, r1, #1
   13a20:	orreq	r2, r3, r2
   13a24:	cmp	r2, #0
   13a28:	andseq	r1, r1, #2
   13a2c:	beq	13a88 <__assert_fail@plt+0x1fec>
   13a30:	ldr	r1, [r4, #24]
   13a34:	mov	r0, #3
   13a38:	mov	r2, r5
   13a3c:	bl	11a24 <__xstat64@plt>
   13a40:	cmp	r0, #0
   13a44:	beq	13b08 <__assert_fail@plt+0x206c>
   13a48:	bl	118ec <__errno_location@plt>
   13a4c:	mov	r6, r0
   13a50:	ldr	r0, [r0]
   13a54:	cmp	r0, #2
   13a58:	bne	13ab8 <__assert_fail@plt+0x201c>
   13a5c:	ldr	r1, [r4, #24]
   13a60:	mov	r0, #3
   13a64:	mov	r2, r5
   13a68:	bl	11a54 <__lxstat64@plt>
   13a6c:	cmp	r0, #0
   13a70:	bne	13ab4 <__assert_fail@plt+0x2018>
   13a74:	mov	r0, #0
   13a78:	str	r0, [r6]
   13a7c:	mov	r0, #13
   13a80:	sub	sp, fp, #16
   13a84:	pop	{r4, r5, r6, sl, fp, pc}
   13a88:	ldr	r1, [r0, #32]
   13a8c:	ldr	r2, [r4, #24]
   13a90:	mov	r0, #256	; 0x100
   13a94:	mov	r3, r5
   13a98:	str	r0, [sp]
   13a9c:	mov	r0, #3
   13aa0:	bl	117a8 <__fxstatat64@plt>
   13aa4:	cmp	r0, #0
   13aa8:	beq	13b08 <__assert_fail@plt+0x206c>
   13aac:	bl	118ec <__errno_location@plt>
   13ab0:	mov	r6, r0
   13ab4:	ldr	r0, [r6]
   13ab8:	vmov.i32	q8, #0	; 0x00000000
   13abc:	add	r1, r5, #80	; 0x50
   13ac0:	str	r0, [r4, #32]
   13ac4:	mov	r0, #0
   13ac8:	vst1.64	{d16-d17}, [r1]
   13acc:	add	r1, r5, #64	; 0x40
   13ad0:	str	r0, [r5, #96]	; 0x60
   13ad4:	vst1.64	{d16-d17}, [r1]
   13ad8:	add	r1, r5, #48	; 0x30
   13adc:	vst1.64	{d16-d17}, [r1]
   13ae0:	add	r1, r5, #32
   13ae4:	vst1.64	{d16-d17}, [r1]
   13ae8:	add	r1, r5, #16
   13aec:	vst1.64	{d16-d17}, [r1]
   13af0:	mov	r1, #100	; 0x64
   13af4:	vst1.64	{d16-d17}, [r5], r1
   13af8:	str	r0, [r5]
   13afc:	mov	r0, #10
   13b00:	sub	sp, fp, #16
   13b04:	pop	{r4, r5, r6, sl, fp, pc}
   13b08:	ldr	r0, [r4, #80]	; 0x50
   13b0c:	and	r0, r0, #61440	; 0xf000
   13b10:	cmp	r0, #40960	; 0xa000
   13b14:	beq	13b70 <__assert_fail@plt+0x20d4>
   13b18:	cmp	r0, #32768	; 0x8000
   13b1c:	moveq	r0, #8
   13b20:	subeq	sp, fp, #16
   13b24:	popeq	{r4, r5, r6, sl, fp, pc}
   13b28:	cmp	r0, #16384	; 0x4000
   13b2c:	bne	13b64 <__assert_fail@plt+0x20c8>
   13b30:	ldrb	r1, [r4, #168]	; 0xa8
   13b34:	mov	r0, #1
   13b38:	cmp	r1, #46	; 0x2e
   13b3c:	bne	13b5c <__assert_fail@plt+0x20c0>
   13b40:	ldrb	r1, [r4, #169]	; 0xa9
   13b44:	cmp	r1, #0
   13b48:	beq	13b7c <__assert_fail@plt+0x20e0>
   13b4c:	cmp	r1, #46	; 0x2e
   13b50:	ldrbeq	r1, [r4, #170]	; 0xaa
   13b54:	cmpeq	r1, #0
   13b58:	beq	13b7c <__assert_fail@plt+0x20e0>
   13b5c:	sub	sp, fp, #16
   13b60:	pop	{r4, r5, r6, sl, fp, pc}
   13b64:	mov	r0, #3
   13b68:	sub	sp, fp, #16
   13b6c:	pop	{r4, r5, r6, sl, fp, pc}
   13b70:	mov	r0, #12
   13b74:	sub	sp, fp, #16
   13b78:	pop	{r4, r5, r6, sl, fp, pc}
   13b7c:	ldr	r1, [r4, #48]	; 0x30
   13b80:	mov	r0, #5
   13b84:	cmp	r1, #0
   13b88:	movweq	r0, #1
   13b8c:	sub	sp, fp, #16
   13b90:	pop	{r4, r5, r6, sl, fp, pc}
   13b94:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13b98:	add	fp, sp, #24
   13b9c:	ldrd	r8, [r0, #40]	; 0x28
   13ba0:	mov	r5, r2
   13ba4:	mov	r4, r1
   13ba8:	mov	r6, r0
   13bac:	cmp	r8, r2
   13bb0:	bcs	13bf0 <__assert_fail@plt+0x2154>
   13bb4:	add	r1, r5, #40	; 0x28
   13bb8:	cmn	r1, #-1073741823	; 0xc0000001
   13bbc:	str	r1, [r6, #40]	; 0x28
   13bc0:	bhi	13c7c <__assert_fail@plt+0x21e0>
   13bc4:	add	r7, r6, #8
   13bc8:	lsl	r1, r1, #2
   13bcc:	ldr	r0, [r7]
   13bd0:	bl	1a878 <lchmod@@Base+0x37ec>
   13bd4:	cmp	r0, #0
   13bd8:	beq	13c7c <__assert_fail@plt+0x21e0>
   13bdc:	mov	r6, r7
   13be0:	str	r0, [r7]
   13be4:	cmp	r4, #0
   13be8:	bne	13bfc <__assert_fail@plt+0x2160>
   13bec:	b	13c10 <__assert_fail@plt+0x2174>
   13bf0:	ldr	r0, [r6, #8]!
   13bf4:	cmp	r4, #0
   13bf8:	beq	13c10 <__assert_fail@plt+0x2174>
   13bfc:	str	r4, [r0], #4
   13c00:	ldr	r4, [r4, #8]
   13c04:	cmp	r4, #0
   13c08:	bne	13bfc <__assert_fail@plt+0x2160>
   13c0c:	ldr	r0, [r6]
   13c10:	mov	r1, r5
   13c14:	mov	r2, #4
   13c18:	mov	r3, r9
   13c1c:	bl	119d0 <qsort@plt>
   13c20:	ldr	r7, [r6]
   13c24:	subs	r0, r5, #1
   13c28:	ldr	r4, [r7]
   13c2c:	mov	r1, r4
   13c30:	beq	13c6c <__assert_fail@plt+0x21d0>
   13c34:	mov	r1, r7
   13c38:	cmp	r5, #2
   13c3c:	ldr	r2, [r1, #4]!
   13c40:	str	r2, [r4, #8]
   13c44:	beq	13c68 <__assert_fail@plt+0x21cc>
   13c48:	rsb	r3, r5, #2
   13c4c:	mov	r2, r1
   13c50:	ldr	r6, [r2, #4]!
   13c54:	ldr	r1, [r1]
   13c58:	adds	r3, r3, #1
   13c5c:	str	r6, [r1, #8]
   13c60:	mov	r1, r2
   13c64:	bne	13c50 <__assert_fail@plt+0x21b4>
   13c68:	ldr	r1, [r7, r0, lsl #2]
   13c6c:	mov	r0, #0
   13c70:	str	r0, [r1, #8]
   13c74:	mov	r0, r4
   13c78:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13c7c:	ldr	r0, [r6, #8]
   13c80:	bl	13370 <__assert_fail@plt+0x18d4>
   13c84:	mov	r0, #0
   13c88:	str	r0, [r6, #40]	; 0x28
   13c8c:	str	r0, [r6, #8]
   13c90:	mov	r0, r4
   13c94:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13c98:	push	{r4, r5, r6, r7, fp, lr}
   13c9c:	add	fp, sp, #16
   13ca0:	mov	r4, r0
   13ca4:	ldr	r0, [r0]
   13ca8:	cmp	r0, #0
   13cac:	beq	13cec <__assert_fail@plt+0x2250>
   13cb0:	ldr	r1, [r0, #48]	; 0x30
   13cb4:	cmp	r1, #0
   13cb8:	blt	13ce0 <__assert_fail@plt+0x2244>
   13cbc:	ldr	r5, [r0, #8]
   13cc0:	cmp	r5, #0
   13cc4:	ldreq	r5, [r0, #4]
   13cc8:	bl	13370 <__assert_fail@plt+0x18d4>
   13ccc:	ldr	r0, [r5, #48]	; 0x30
   13cd0:	cmn	r0, #1
   13cd4:	mov	r0, r5
   13cd8:	bgt	13cbc <__assert_fail@plt+0x2220>
   13cdc:	b	13ce4 <__assert_fail@plt+0x2248>
   13ce0:	mov	r5, r0
   13ce4:	mov	r0, r5
   13ce8:	bl	13370 <__assert_fail@plt+0x18d4>
   13cec:	ldr	r5, [r4, #4]
   13cf0:	cmp	r5, #0
   13cf4:	beq	13d20 <__assert_fail@plt+0x2284>
   13cf8:	ldrd	r6, [r5, #8]
   13cfc:	cmp	r7, #0
   13d00:	beq	13d0c <__assert_fail@plt+0x2270>
   13d04:	mov	r0, r7
   13d08:	bl	11a78 <closedir@plt>
   13d0c:	mov	r0, r5
   13d10:	bl	13370 <__assert_fail@plt+0x18d4>
   13d14:	cmp	r6, #0
   13d18:	mov	r5, r6
   13d1c:	bne	13cf8 <__assert_fail@plt+0x225c>
   13d20:	ldr	r0, [r4, #8]
   13d24:	bl	13370 <__assert_fail@plt+0x18d4>
   13d28:	ldr	r0, [r4, #24]
   13d2c:	bl	13370 <__assert_fail@plt+0x18d4>
   13d30:	ldr	r0, [r4, #48]	; 0x30
   13d34:	tst	r0, #512	; 0x200
   13d38:	bne	13d74 <__assert_fail@plt+0x22d8>
   13d3c:	mov	r6, #0
   13d40:	tst	r0, #4
   13d44:	bne	13d98 <__assert_fail@plt+0x22fc>
   13d48:	ldr	r0, [r4, #28]
   13d4c:	bl	119c4 <fchdir@plt>
   13d50:	cmp	r0, #0
   13d54:	beq	13e28 <__assert_fail@plt+0x238c>
   13d58:	bl	118ec <__errno_location@plt>
   13d5c:	ldr	r6, [r0]
   13d60:	ldr	r0, [r4, #28]
   13d64:	bl	11a48 <close@plt>
   13d68:	cmp	r6, #0
   13d6c:	beq	13d88 <__assert_fail@plt+0x22ec>
   13d70:	b	13d98 <__assert_fail@plt+0x22fc>
   13d74:	ldr	r0, [r4, #32]
   13d78:	mov	r6, #0
   13d7c:	cmp	r0, #0
   13d80:	blt	13d98 <__assert_fail@plt+0x22fc>
   13d84:	bl	11a48 <close@plt>
   13d88:	cmp	r0, #0
   13d8c:	beq	13d98 <__assert_fail@plt+0x22fc>
   13d90:	bl	118ec <__errno_location@plt>
   13d94:	ldr	r6, [r0]
   13d98:	add	r5, r4, #60	; 0x3c
   13d9c:	b	13da4 <__assert_fail@plt+0x2308>
   13da0:	bl	11a48 <close@plt>
   13da4:	mov	r0, r5
   13da8:	bl	16fe0 <__assert_fail@plt+0x5544>
   13dac:	cmp	r0, #0
   13db0:	bne	13dc8 <__assert_fail@plt+0x232c>
   13db4:	mov	r0, r5
   13db8:	bl	17034 <__assert_fail@plt+0x5598>
   13dbc:	cmp	r0, #0
   13dc0:	bge	13da0 <__assert_fail@plt+0x2304>
   13dc4:	b	13da4 <__assert_fail@plt+0x2308>
   13dc8:	ldr	r0, [r4, #52]	; 0x34
   13dcc:	cmp	r0, #0
   13dd0:	beq	13dd8 <__assert_fail@plt+0x233c>
   13dd4:	bl	162f4 <__assert_fail@plt+0x4858>
   13dd8:	ldrh	r0, [r4, #48]	; 0x30
   13ddc:	movw	r1, #258	; 0x102
   13de0:	tst	r0, r1
   13de4:	beq	13dfc <__assert_fail@plt+0x2360>
   13de8:	ldr	r0, [r4, #56]	; 0x38
   13dec:	cmp	r0, #0
   13df0:	beq	13e04 <__assert_fail@plt+0x2368>
   13df4:	bl	162f4 <__assert_fail@plt+0x4858>
   13df8:	b	13e04 <__assert_fail@plt+0x2368>
   13dfc:	ldr	r0, [r4, #56]	; 0x38
   13e00:	bl	13370 <__assert_fail@plt+0x18d4>
   13e04:	mov	r0, r4
   13e08:	bl	13370 <__assert_fail@plt+0x18d4>
   13e0c:	cmp	r6, #0
   13e10:	moveq	r0, #0
   13e14:	popeq	{r4, r5, r6, r7, fp, pc}
   13e18:	bl	118ec <__errno_location@plt>
   13e1c:	str	r6, [r0]
   13e20:	mvn	r0, #0
   13e24:	pop	{r4, r5, r6, r7, fp, pc}
   13e28:	mov	r6, #0
   13e2c:	ldr	r0, [r4, #28]
   13e30:	bl	11a48 <close@plt>
   13e34:	cmp	r6, #0
   13e38:	beq	13d88 <__assert_fail@plt+0x22ec>
   13e3c:	b	13d98 <__assert_fail@plt+0x22fc>
   13e40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e44:	add	fp, sp, #28
   13e48:	sub	sp, sp, #4
   13e4c:	ldr	r6, [r0]
   13e50:	mov	sl, #0
   13e54:	cmp	r6, #0
   13e58:	beq	146e0 <__assert_fail@plt+0x2c44>
   13e5c:	mov	r4, r0
   13e60:	ldr	r0, [r0, #48]	; 0x30
   13e64:	tst	r0, #8192	; 0x2000
   13e68:	bne	146e0 <__assert_fail@plt+0x2c44>
   13e6c:	ldrh	r1, [r6, #60]	; 0x3c
   13e70:	mov	r2, #3
   13e74:	strh	r2, [r6, #60]	; 0x3c
   13e78:	cmp	r1, #1
   13e7c:	beq	13efc <__assert_fail@plt+0x2460>
   13e80:	mov	r5, r6
   13e84:	cmp	r1, #2
   13e88:	bne	13f20 <__assert_fail@plt+0x2484>
   13e8c:	ldrh	r2, [r5, #56]!	; 0x38
   13e90:	movw	r3, #65534	; 0xfffe
   13e94:	and	r3, r2, r3
   13e98:	cmp	r3, #12
   13e9c:	bne	13f24 <__assert_fail@plt+0x2488>
   13ea0:	mov	r0, r4
   13ea4:	mov	r1, r6
   13ea8:	mov	r2, #1
   13eac:	bl	139fc <__assert_fail@plt+0x1f60>
   13eb0:	strh	r0, [r6, #56]	; 0x38
   13eb4:	cmp	r0, #1
   13eb8:	ldreq	r0, [r4, #48]	; 0x30
   13ebc:	tsteq	r0, #4
   13ec0:	bne	141d8 <__assert_fail@plt+0x273c>
   13ec4:	mov	r1, #32768	; 0x8000
   13ec8:	tst	r0, #512	; 0x200
   13ecc:	and	r1, r1, r0, lsl #11
   13ed0:	orr	r1, r1, #18688	; 0x4900
   13ed4:	orr	r2, r1, #524288	; 0x80000
   13ed8:	bne	143ec <__assert_fail@plt+0x2950>
   13edc:	movw	r0, #47195	; 0xb85b
   13ee0:	mov	r1, r2
   13ee4:	movt	r0, #1
   13ee8:	bl	1ad58 <lchmod@@Base+0x3ccc>
   13eec:	cmn	r0, #1
   13ef0:	str	r0, [r6, #36]	; 0x24
   13ef4:	bgt	14408 <__assert_fail@plt+0x296c>
   13ef8:	b	1444c <__assert_fail@plt+0x29b0>
   13efc:	mov	r0, r4
   13f00:	mov	r1, r6
   13f04:	mov	r2, #0
   13f08:	bl	139fc <__assert_fail@plt+0x1f60>
   13f0c:	strh	r0, [r6, #56]	; 0x38
   13f10:	mov	sl, r6
   13f14:	mov	r0, sl
   13f18:	sub	sp, fp, #28
   13f1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f20:	ldrh	r2, [r5, #56]!	; 0x38
   13f24:	cmp	r2, #1
   13f28:	bne	13fa8 <__assert_fail@plt+0x250c>
   13f2c:	cmp	r1, #4
   13f30:	bne	14018 <__assert_fail@plt+0x257c>
   13f34:	ldrb	r0, [r6, #58]	; 0x3a
   13f38:	tst	r0, #2
   13f3c:	beq	13f48 <__assert_fail@plt+0x24ac>
   13f40:	ldr	r0, [r6, #36]	; 0x24
   13f44:	bl	11a48 <close@plt>
   13f48:	ldr	r5, [r4, #4]
   13f4c:	cmp	r5, #0
   13f50:	beq	13f84 <__assert_fail@plt+0x24e8>
   13f54:	ldrd	r8, [r5, #8]
   13f58:	cmp	r9, #0
   13f5c:	beq	13f68 <__assert_fail@plt+0x24cc>
   13f60:	mov	r0, r9
   13f64:	bl	11a78 <closedir@plt>
   13f68:	mov	r0, r5
   13f6c:	bl	13370 <__assert_fail@plt+0x18d4>
   13f70:	cmp	r8, #0
   13f74:	mov	r5, r8
   13f78:	bne	13f54 <__assert_fail@plt+0x24b8>
   13f7c:	mov	r0, #0
   13f80:	str	r0, [r4, #4]
   13f84:	mov	r0, #6
   13f88:	strh	r0, [r6, #56]	; 0x38
   13f8c:	mov	r0, r4
   13f90:	mov	r1, r6
   13f94:	bl	146f0 <__assert_fail@plt+0x2c54>
   13f98:	mov	sl, r6
   13f9c:	mov	r0, sl
   13fa0:	sub	sp, fp, #28
   13fa4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13fa8:	mov	r7, r6
   13fac:	ldr	r6, [r7, #8]
   13fb0:	cmp	r6, #0
   13fb4:	beq	140a8 <__assert_fail@plt+0x260c>
   13fb8:	mov	r0, r7
   13fbc:	str	r6, [r4]
   13fc0:	bl	13370 <__assert_fail@plt+0x18d4>
   13fc4:	ldr	r0, [r6, #48]	; 0x30
   13fc8:	cmp	r0, #0
   13fcc:	beq	140f0 <__assert_fail@plt+0x2654>
   13fd0:	ldrh	r0, [r6, #60]	; 0x3c
   13fd4:	mov	r7, r6
   13fd8:	cmp	r0, #4
   13fdc:	beq	13fac <__assert_fail@plt+0x2510>
   13fe0:	cmp	r0, #2
   13fe4:	bne	1419c <__assert_fail@plt+0x2700>
   13fe8:	mov	r0, r4
   13fec:	mov	r1, r6
   13ff0:	mov	r2, #1
   13ff4:	bl	139fc <__assert_fail@plt+0x1f60>
   13ff8:	strh	r0, [r6, #56]	; 0x38
   13ffc:	cmp	r0, #1
   14000:	ldreq	r0, [r4, #48]	; 0x30
   14004:	tsteq	r0, #4
   14008:	beq	145ec <__assert_fail@plt+0x2b50>
   1400c:	mov	r0, #3
   14010:	strh	r0, [r6, #60]	; 0x3c
   14014:	b	1419c <__assert_fail@plt+0x2700>
   14018:	tst	r0, #64	; 0x40
   1401c:	beq	14038 <__assert_fail@plt+0x259c>
   14020:	ldrd	r2, [r4, #16]
   14024:	ldrd	r8, [r6, #64]	; 0x40
   14028:	eor	r1, r9, r3
   1402c:	eor	r2, r8, r2
   14030:	orrs	r1, r2, r1
   14034:	bne	13f34 <__assert_fail@plt+0x2498>
   14038:	ldr	r7, [r4, #4]
   1403c:	cmp	r7, #0
   14040:	beq	14178 <__assert_fail@plt+0x26dc>
   14044:	tst	r0, #4096	; 0x1000
   14048:	bne	14140 <__assert_fail@plt+0x26a4>
   1404c:	ldr	r3, [r6, #24]
   14050:	mov	r0, r4
   14054:	mov	r1, r6
   14058:	mvn	r2, #0
   1405c:	bl	147c0 <__assert_fail@plt+0x2d24>
   14060:	cmp	r0, #0
   14064:	beq	14190 <__assert_fail@plt+0x26f4>
   14068:	bl	118ec <__errno_location@plt>
   1406c:	ldr	r0, [r0]
   14070:	str	r0, [r6, #32]
   14074:	ldrh	r0, [r6, #58]	; 0x3a
   14078:	orr	r0, r0, #1
   1407c:	strh	r0, [r6, #58]	; 0x3a
   14080:	ldr	r0, [r4, #4]
   14084:	cmp	r0, #0
   14088:	beq	14190 <__assert_fail@plt+0x26f4>
   1408c:	ldmib	r0, {r1, r2}
   14090:	ldr	r1, [r1, #24]
   14094:	cmp	r2, #0
   14098:	str	r1, [r0, #24]
   1409c:	mov	r0, r2
   140a0:	bne	1408c <__assert_fail@plt+0x25f0>
   140a4:	b	14190 <__assert_fail@plt+0x26f4>
   140a8:	ldr	r0, [r7, #4]
   140ac:	ldr	r1, [r0, #12]
   140b0:	cmp	r1, #0
   140b4:	beq	14118 <__assert_fail@plt+0x267c>
   140b8:	str	r0, [r4]
   140bc:	mov	r2, #0
   140c0:	ldr	r1, [r4, #24]
   140c4:	ldr	r0, [r0, #40]	; 0x28
   140c8:	strb	r2, [r1, r0]
   140cc:	mov	r0, r4
   140d0:	mov	r1, #3
   140d4:	bl	14a68 <__assert_fail@plt+0x2fcc>
   140d8:	cmp	r0, #0
   140dc:	beq	14360 <__assert_fail@plt+0x28c4>
   140e0:	mov	r6, r0
   140e4:	mov	r0, r7
   140e8:	bl	13370 <__assert_fail@plt+0x18d4>
   140ec:	b	1419c <__assert_fail@plt+0x2700>
   140f0:	mov	r0, r4
   140f4:	bl	15644 <__assert_fail@plt+0x3ba8>
   140f8:	ldr	r1, [r4, #48]	; 0x30
   140fc:	cmp	r0, #0
   14100:	beq	14120 <__assert_fail@plt+0x2684>
   14104:	orr	r0, r1, #8192	; 0x2000
   14108:	str	r0, [r4, #48]	; 0x30
   1410c:	mov	r0, sl
   14110:	sub	sp, fp, #28
   14114:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14118:	mov	sl, r0
   1411c:	b	14374 <__assert_fail@plt+0x28d8>
   14120:	movw	r0, #258	; 0x102
   14124:	tst	r1, r0
   14128:	beq	14474 <__assert_fail@plt+0x29d8>
   1412c:	ldr	r0, [r4, #56]	; 0x38
   14130:	cmp	r0, #0
   14134:	beq	1447c <__assert_fail@plt+0x29e0>
   14138:	bl	162f4 <__assert_fail@plt+0x4858>
   1413c:	b	1447c <__assert_fail@plt+0x29e0>
   14140:	bic	r0, r0, #4096	; 0x1000
   14144:	str	r0, [r4, #48]	; 0x30
   14148:	ldrd	r8, [r7, #8]
   1414c:	cmp	r9, #0
   14150:	beq	1415c <__assert_fail@plt+0x26c0>
   14154:	mov	r0, r9
   14158:	bl	11a78 <closedir@plt>
   1415c:	mov	r0, r7
   14160:	bl	13370 <__assert_fail@plt+0x18d4>
   14164:	cmp	r8, #0
   14168:	mov	r7, r8
   1416c:	bne	14148 <__assert_fail@plt+0x26ac>
   14170:	mov	r0, #0
   14174:	str	r0, [r4, #4]
   14178:	mov	r0, r4
   1417c:	mov	r1, #3
   14180:	bl	14a68 <__assert_fail@plt+0x2fcc>
   14184:	cmp	r0, #0
   14188:	str	r0, [r4, #4]
   1418c:	beq	14328 <__assert_fail@plt+0x288c>
   14190:	ldr	r6, [r4, #4]
   14194:	mov	r0, #0
   14198:	str	r0, [r4, #4]
   1419c:	ldr	r0, [r6, #4]
   141a0:	ldr	r1, [r0, #28]
   141a4:	ldr	r0, [r0, #40]	; 0x28
   141a8:	sub	r2, r0, #1
   141ac:	ldrb	r1, [r1, r2]
   141b0:	cmp	r1, #47	; 0x2f
   141b4:	ldr	r1, [r4, #24]
   141b8:	moveq	r0, r2
   141bc:	mov	r2, #47	; 0x2f
   141c0:	strb	r2, [r1, r0]!
   141c4:	ldr	r2, [r6, #52]	; 0x34
   141c8:	add	r0, r1, #1
   141cc:	add	r1, r6, #168	; 0xa8
   141d0:	add	r2, r2, #1
   141d4:	bl	11700 <memmove@plt>
   141d8:	str	r6, [r4]
   141dc:	ldrh	r0, [r6, #56]	; 0x38
   141e0:	cmp	r0, #11
   141e4:	bne	14218 <__assert_fail@plt+0x277c>
   141e8:	ldrd	r0, [r6, #112]	; 0x70
   141ec:	eor	r2, r0, #1
   141f0:	orrs	r2, r2, r1
   141f4:	beq	142c0 <__assert_fail@plt+0x2824>
   141f8:	eor	r0, r0, #2
   141fc:	orrs	r0, r0, r1
   14200:	bne	146ec <__assert_fail@plt+0x2c50>
   14204:	mov	r0, r4
   14208:	mov	r1, r6
   1420c:	mov	r2, #0
   14210:	bl	139fc <__assert_fail@plt+0x1f60>
   14214:	strh	r0, [r6, #56]	; 0x38
   14218:	cmp	r0, #1
   1421c:	bne	142b0 <__assert_fail@plt+0x2814>
   14220:	ldr	r0, [r6, #48]	; 0x30
   14224:	cmp	r0, #0
   14228:	ldrdeq	r0, [r6, #64]	; 0x40
   1422c:	strdeq	r0, [r4, #16]
   14230:	movw	r1, #258	; 0x102
   14234:	ldrh	r0, [r4, #48]	; 0x30
   14238:	tst	r0, r1
   1423c:	beq	142d0 <__assert_fail@plt+0x2834>
   14240:	mov	r0, #24
   14244:	bl	1a848 <lchmod@@Base+0x37bc>
   14248:	cmp	r0, #0
   1424c:	beq	14300 <__assert_fail@plt+0x2864>
   14250:	mov	r7, r0
   14254:	ldrd	r0, [r6, #64]	; 0x40
   14258:	add	r2, r7, #8
   1425c:	stm	r7, {r0, r1}
   14260:	ldrd	r0, [r6, #160]	; 0xa0
   14264:	stm	r2, {r0, r1, r6}
   14268:	mov	r1, r7
   1426c:	ldr	r0, [r4, #56]	; 0x38
   14270:	bl	16c10 <__assert_fail@plt+0x5174>
   14274:	cmp	r0, r7
   14278:	beq	14350 <__assert_fail@plt+0x28b4>
   1427c:	mov	r4, r0
   14280:	mov	r0, r7
   14284:	bl	13370 <__assert_fail@plt+0x18d4>
   14288:	cmp	r4, #0
   1428c:	beq	14300 <__assert_fail@plt+0x2864>
   14290:	ldr	r0, [r4, #16]
   14294:	mov	r1, #2
   14298:	mov	sl, r6
   1429c:	strh	r1, [r6, #56]	; 0x38
   142a0:	str	r0, [r6]
   142a4:	mov	r0, sl
   142a8:	sub	sp, fp, #28
   142ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   142b0:	mov	sl, r6
   142b4:	mov	r0, sl
   142b8:	sub	sp, fp, #28
   142bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   142c0:	mov	sl, r6
   142c4:	mov	r0, sl
   142c8:	sub	sp, fp, #28
   142cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   142d0:	ldr	r0, [r4, #56]	; 0x38
   142d4:	add	r1, r6, #64	; 0x40
   142d8:	bl	1aa04 <lchmod@@Base+0x3978>
   142dc:	cmp	r0, #0
   142e0:	beq	14318 <__assert_fail@plt+0x287c>
   142e4:	mov	r0, #2
   142e8:	mov	sl, r6
   142ec:	strh	r0, [r6, #56]	; 0x38
   142f0:	str	r6, [r6]
   142f4:	mov	r0, sl
   142f8:	sub	sp, fp, #28
   142fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14300:	bl	118ec <__errno_location@plt>
   14304:	mov	r1, #12
   14308:	str	r1, [r0]
   1430c:	mov	r0, sl
   14310:	sub	sp, fp, #28
   14314:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14318:	mov	sl, r6
   1431c:	mov	r0, sl
   14320:	sub	sp, fp, #28
   14324:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14328:	ldrb	r0, [r4, #49]	; 0x31
   1432c:	tst	r0, #32
   14330:	bne	146e0 <__assert_fail@plt+0x2c44>
   14334:	ldr	r0, [r6, #32]
   14338:	cmp	r0, #0
   1433c:	ldrhne	r0, [r5]
   14340:	cmpne	r0, #4
   14344:	movne	r0, #7
   14348:	strhne	r0, [r5]
   1434c:	b	13f8c <__assert_fail@plt+0x24f0>
   14350:	mov	sl, r6
   14354:	mov	r0, sl
   14358:	sub	sp, fp, #28
   1435c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14360:	ldrb	r0, [r4, #49]	; 0x31
   14364:	mov	sl, #0
   14368:	tst	r0, #32
   1436c:	bne	146e0 <__assert_fail@plt+0x2c44>
   14370:	ldr	sl, [r7, #4]
   14374:	mov	r0, r7
   14378:	str	sl, [r4]
   1437c:	bl	13370 <__assert_fail@plt+0x18d4>
   14380:	ldr	r0, [sl, #48]	; 0x30
   14384:	cmn	r0, #1
   14388:	beq	14428 <__assert_fail@plt+0x298c>
   1438c:	ldrh	r0, [sl, #56]	; 0x38
   14390:	cmp	r0, #11
   14394:	beq	146ec <__assert_fail@plt+0x2c50>
   14398:	ldr	r0, [sl, #40]	; 0x28
   1439c:	ldr	r1, [r4, #24]
   143a0:	mov	r2, #0
   143a4:	strb	r2, [r1, r0]
   143a8:	ldr	r0, [sl, #48]	; 0x30
   143ac:	cmp	r0, #0
   143b0:	beq	1456c <__assert_fail@plt+0x2ad0>
   143b4:	ldrh	r0, [sl, #58]	; 0x3a
   143b8:	tst	r0, #2
   143bc:	bne	145a4 <__assert_fail@plt+0x2b08>
   143c0:	tst	r0, #1
   143c4:	bne	146a4 <__assert_fail@plt+0x2c08>
   143c8:	ldr	r1, [sl, #4]
   143cc:	movw	r3, #47194	; 0xb85a
   143d0:	mov	r0, r4
   143d4:	mvn	r2, #0
   143d8:	movt	r3, #1
   143dc:	bl	147c0 <__assert_fail@plt+0x2d24>
   143e0:	cmp	r0, #0
   143e4:	bne	1457c <__assert_fail@plt+0x2ae0>
   143e8:	b	146a4 <__assert_fail@plt+0x2c08>
   143ec:	ldr	r0, [r4, #32]
   143f0:	movw	r1, #47195	; 0xb85b
   143f4:	movt	r1, #1
   143f8:	bl	177b4 <lchmod@@Base+0x728>
   143fc:	cmn	r0, #1
   14400:	str	r0, [r6, #36]	; 0x24
   14404:	ble	1444c <__assert_fail@plt+0x29b0>
   14408:	ldrh	r0, [r6, #58]	; 0x3a
   1440c:	orr	r0, r0, #2
   14410:	strh	r0, [r6, #58]	; 0x3a
   14414:	str	r6, [r4]
   14418:	ldrh	r0, [r6, #56]	; 0x38
   1441c:	cmp	r0, #11
   14420:	beq	141e8 <__assert_fail@plt+0x274c>
   14424:	b	14218 <__assert_fail@plt+0x277c>
   14428:	mov	r0, sl
   1442c:	bl	13370 <__assert_fail@plt+0x18d4>
   14430:	bl	118ec <__errno_location@plt>
   14434:	mov	sl, #0
   14438:	str	sl, [r0]
   1443c:	str	sl, [r4]
   14440:	mov	r0, sl
   14444:	sub	sp, fp, #28
   14448:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1444c:	bl	118ec <__errno_location@plt>
   14450:	ldr	r0, [r0]
   14454:	mov	r1, #7
   14458:	strh	r1, [r6, #56]	; 0x38
   1445c:	str	r0, [r6, #32]
   14460:	str	r6, [r4]
   14464:	ldrh	r0, [r6, #56]	; 0x38
   14468:	cmp	r0, #11
   1446c:	beq	141e8 <__assert_fail@plt+0x274c>
   14470:	b	14218 <__assert_fail@plt+0x277c>
   14474:	ldr	r0, [r4, #56]	; 0x38
   14478:	bl	13370 <__assert_fail@plt+0x18d4>
   1447c:	ldr	r1, [r6, #52]	; 0x34
   14480:	add	r7, r6, #168	; 0xa8
   14484:	str	r1, [r6, #40]	; 0x28
   14488:	add	r2, r1, #1
   1448c:	mov	r1, r7
   14490:	ldr	r0, [r4, #24]
   14494:	bl	11700 <memmove@plt>
   14498:	mov	r0, r7
   1449c:	mov	r1, #47	; 0x2f
   144a0:	bl	1197c <strrchr@plt>
   144a4:	cmp	r0, #0
   144a8:	beq	144e4 <__assert_fail@plt+0x2a48>
   144ac:	cmp	r0, r7
   144b0:	bne	144c0 <__assert_fail@plt+0x2a24>
   144b4:	ldrb	r1, [r6, #169]	; 0xa9
   144b8:	cmp	r1, #0
   144bc:	beq	144e4 <__assert_fail@plt+0x2a48>
   144c0:	add	r8, r0, #1
   144c4:	mov	r0, r8
   144c8:	bl	118bc <strlen@plt>
   144cc:	mov	r9, r0
   144d0:	add	r2, r0, #1
   144d4:	mov	r0, r7
   144d8:	mov	r1, r8
   144dc:	bl	11700 <memmove@plt>
   144e0:	str	r9, [r6, #52]	; 0x34
   144e4:	ldr	r0, [r4, #24]
   144e8:	movw	r1, #258	; 0x102
   144ec:	str	r0, [r6, #24]
   144f0:	str	r0, [r6, #28]
   144f4:	ldrh	r0, [r4, #48]	; 0x30
   144f8:	tst	r0, r1
   144fc:	beq	14540 <__assert_fail@plt+0x2aa4>
   14500:	movw	r0, #13168	; 0x3370
   14504:	movw	r2, #22812	; 0x591c
   14508:	movw	r3, #22844	; 0x593c
   1450c:	mov	r1, #0
   14510:	movt	r0, #1
   14514:	movt	r2, #1
   14518:	movt	r3, #1
   1451c:	str	r0, [sp]
   14520:	mov	r0, #31
   14524:	bl	15fd8 <__assert_fail@plt+0x453c>
   14528:	str	r0, [r4, #56]	; 0x38
   1452c:	str	r6, [r4]
   14530:	ldrh	r0, [r6, #56]	; 0x38
   14534:	cmp	r0, #11
   14538:	beq	141e8 <__assert_fail@plt+0x274c>
   1453c:	b	14218 <__assert_fail@plt+0x277c>
   14540:	mov	r0, #32
   14544:	bl	1a848 <lchmod@@Base+0x37bc>
   14548:	cmp	r0, #0
   1454c:	str	r0, [r4, #56]	; 0x38
   14550:	beq	141d8 <__assert_fail@plt+0x273c>
   14554:	bl	1a9e8 <lchmod@@Base+0x395c>
   14558:	str	r6, [r4]
   1455c:	ldrh	r0, [r6, #56]	; 0x38
   14560:	cmp	r0, #11
   14564:	beq	141e8 <__assert_fail@plt+0x274c>
   14568:	b	14218 <__assert_fail@plt+0x277c>
   1456c:	mov	r0, r4
   14570:	bl	15644 <__assert_fail@plt+0x3ba8>
   14574:	cmp	r0, #0
   14578:	beq	146a4 <__assert_fail@plt+0x2c08>
   1457c:	bl	118ec <__errno_location@plt>
   14580:	ldr	r0, [r0]
   14584:	str	r0, [sl, #32]
   14588:	ldr	r0, [r4, #48]	; 0x30
   1458c:	orr	r0, r0, #8192	; 0x2000
   14590:	str	r0, [r4, #48]	; 0x30
   14594:	ldrh	r0, [sl, #56]	; 0x38
   14598:	cmp	r0, #2
   1459c:	bne	146b0 <__assert_fail@plt+0x2c14>
   145a0:	b	146d4 <__assert_fail@plt+0x2c38>
   145a4:	ldr	r0, [r4, #48]	; 0x30
   145a8:	tst	r0, #4
   145ac:	bne	14624 <__assert_fail@plt+0x2b88>
   145b0:	mov	r5, sl
   145b4:	tst	r0, #512	; 0x200
   145b8:	ldr	r6, [r5, #36]!	; 0x24
   145bc:	bne	14670 <__assert_fail@plt+0x2bd4>
   145c0:	mov	r0, r6
   145c4:	bl	119c4 <fchdir@plt>
   145c8:	cmp	r0, #0
   145cc:	beq	1469c <__assert_fail@plt+0x2c00>
   145d0:	bl	118ec <__errno_location@plt>
   145d4:	ldr	r0, [r0]
   145d8:	str	r0, [sl, #32]
   145dc:	ldr	r0, [r4, #48]	; 0x30
   145e0:	orr	r0, r0, #8192	; 0x2000
   145e4:	str	r0, [r4, #48]	; 0x30
   145e8:	b	1469c <__assert_fail@plt+0x2c00>
   145ec:	mov	r1, #32768	; 0x8000
   145f0:	tst	r0, #512	; 0x200
   145f4:	and	r1, r1, r0, lsl #11
   145f8:	orr	r1, r1, #18688	; 0x4900
   145fc:	orr	r2, r1, #524288	; 0x80000
   14600:	bne	1462c <__assert_fail@plt+0x2b90>
   14604:	movw	r0, #47195	; 0xb85b
   14608:	mov	r1, r2
   1460c:	movt	r0, #1
   14610:	bl	1ad58 <lchmod@@Base+0x3ccc>
   14614:	cmn	r0, #1
   14618:	str	r0, [r6, #36]	; 0x24
   1461c:	bgt	14648 <__assert_fail@plt+0x2bac>
   14620:	b	14658 <__assert_fail@plt+0x2bbc>
   14624:	add	r5, sl, #36	; 0x24
   14628:	b	1469c <__assert_fail@plt+0x2c00>
   1462c:	ldr	r0, [r4, #32]
   14630:	movw	r1, #47195	; 0xb85b
   14634:	movt	r1, #1
   14638:	bl	177b4 <lchmod@@Base+0x728>
   1463c:	cmn	r0, #1
   14640:	str	r0, [r6, #36]	; 0x24
   14644:	ble	14658 <__assert_fail@plt+0x2bbc>
   14648:	ldrh	r0, [r6, #58]	; 0x3a
   1464c:	orr	r0, r0, #2
   14650:	strh	r0, [r6, #58]	; 0x3a
   14654:	b	1400c <__assert_fail@plt+0x2570>
   14658:	bl	118ec <__errno_location@plt>
   1465c:	ldr	r0, [r0]
   14660:	mov	r1, #7
   14664:	strh	r1, [r6, #56]	; 0x38
   14668:	str	r0, [r6, #32]
   1466c:	b	1400c <__assert_fail@plt+0x2570>
   14670:	ldr	r1, [r4, #32]
   14674:	cmp	r1, r6
   14678:	bne	14684 <__assert_fail@plt+0x2be8>
   1467c:	cmn	r1, #100	; 0x64
   14680:	bne	146ec <__assert_fail@plt+0x2c50>
   14684:	add	r0, r4, #60	; 0x3c
   14688:	bl	16fe8 <__assert_fail@plt+0x554c>
   1468c:	cmp	r0, #0
   14690:	blt	14698 <__assert_fail@plt+0x2bfc>
   14694:	bl	11a48 <close@plt>
   14698:	str	r6, [r4, #32]
   1469c:	ldr	r0, [r5]
   146a0:	bl	11a48 <close@plt>
   146a4:	ldrh	r0, [sl, #56]	; 0x38
   146a8:	cmp	r0, #2
   146ac:	beq	146d4 <__assert_fail@plt+0x2c38>
   146b0:	ldr	r0, [sl, #32]
   146b4:	mov	r1, #7
   146b8:	cmp	r0, #0
   146bc:	movweq	r1, #6
   146c0:	strh	r1, [sl, #56]	; 0x38
   146c4:	bne	146d4 <__assert_fail@plt+0x2c38>
   146c8:	mov	r0, r4
   146cc:	mov	r1, sl
   146d0:	bl	146f0 <__assert_fail@plt+0x2c54>
   146d4:	ldrb	r0, [r4, #49]	; 0x31
   146d8:	tst	r0, #32
   146dc:	movne	sl, #0
   146e0:	mov	r0, sl
   146e4:	sub	sp, fp, #28
   146e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   146ec:	bl	11a3c <abort@plt>
   146f0:	push	{r4, r5, r6, r7, fp, lr}
   146f4:	add	fp, sp, #16
   146f8:	sub	sp, sp, #24
   146fc:	ldrh	r2, [r0, #48]	; 0x30
   14700:	movw	r3, #258	; 0x102
   14704:	add	lr, r1, #64	; 0x40
   14708:	tst	r2, r3
   1470c:	beq	14744 <__assert_fail@plt+0x2ca8>
   14710:	ldrd	r2, [lr]
   14714:	stm	sp, {r2, r3}
   14718:	ldrd	r2, [r1, #160]	; 0xa0
   1471c:	mov	r1, sp
   14720:	str	r3, [sp, #12]
   14724:	str	r2, [sp, #8]
   14728:	ldr	r0, [r0, #56]	; 0x38
   1472c:	bl	16c58 <__assert_fail@plt+0x51bc>
   14730:	cmp	r0, #0
   14734:	beq	147bc <__assert_fail@plt+0x2d20>
   14738:	bl	13370 <__assert_fail@plt+0x18d4>
   1473c:	sub	sp, fp, #16
   14740:	pop	{r4, r5, r6, r7, fp, pc}
   14744:	ldr	r2, [r1, #4]
   14748:	cmp	r2, #0
   1474c:	beq	147b4 <__assert_fail@plt+0x2d18>
   14750:	ldr	r3, [r2, #48]	; 0x30
   14754:	cmp	r3, #0
   14758:	blt	147b4 <__assert_fail@plt+0x2d18>
   1475c:	ldr	ip, [r0, #56]	; 0x38
   14760:	ldrd	r4, [ip, #16]
   14764:	orrs	r3, r4, r5
   14768:	beq	147bc <__assert_fail@plt+0x2d20>
   1476c:	ldrd	r4, [r1, #160]	; 0xa0
   14770:	ldrd	r6, [ip]
   14774:	eor	r1, r7, r5
   14778:	eor	r3, r6, r4
   1477c:	orrs	r1, r3, r1
   14780:	bne	147b4 <__assert_fail@plt+0x2d18>
   14784:	ldr	r1, [ip, #8]!
   14788:	ldrd	r4, [lr]
   1478c:	ldr	r3, [ip, #4]
   14790:	eor	r1, r1, r4
   14794:	eor	r3, r3, r5
   14798:	orrs	r1, r1, r3
   1479c:	bne	147b4 <__assert_fail@plt+0x2d18>
   147a0:	ldrd	r4, [r2, #64]	; 0x40
   147a4:	strd	r4, [ip]
   147a8:	ldr	r0, [r0, #56]	; 0x38
   147ac:	ldrd	r2, [r2, #160]	; 0xa0
   147b0:	strd	r2, [r0]
   147b4:	sub	sp, fp, #16
   147b8:	pop	{r4, r5, r6, r7, fp, pc}
   147bc:	bl	11a3c <abort@plt>
   147c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   147c4:	add	fp, sp, #28
   147c8:	sub	sp, sp, #108	; 0x6c
   147cc:	mov	r7, r3
   147d0:	mov	r4, r2
   147d4:	mov	r8, r1
   147d8:	mov	sl, r0
   147dc:	cmp	r3, #0
   147e0:	beq	1486c <__assert_fail@plt+0x2dd0>
   147e4:	movw	r1, #47194	; 0xb85a
   147e8:	mov	r0, r7
   147ec:	movt	r1, #1
   147f0:	bl	116d0 <strcmp@plt>
   147f4:	mov	r6, r0
   147f8:	cmp	r0, #0
   147fc:	movwne	r6, #1
   14800:	ldr	r0, [sl, #48]	; 0x30
   14804:	tst	r0, #4
   14808:	bne	1487c <__assert_fail@plt+0x2de0>
   1480c:	cmn	r4, #1
   14810:	mov	r1, #0
   14814:	mov	r9, #0
   14818:	movwgt	r1, #1
   1481c:	orrs	r1, r1, r6
   14820:	bne	148a4 <__assert_fail@plt+0x2e08>
   14824:	ands	r0, r0, #512	; 0x200
   14828:	beq	148a4 <__assert_fail@plt+0x2e08>
   1482c:	add	r4, sl, #60	; 0x3c
   14830:	mov	r0, r4
   14834:	bl	16fe0 <__assert_fail@plt+0x5544>
   14838:	cmp	r0, #0
   1483c:	bne	148ac <__assert_fail@plt+0x2e10>
   14840:	mov	r0, r4
   14844:	bl	17034 <__assert_fail@plt+0x5598>
   14848:	cmn	r0, #1
   1484c:	ble	148ac <__assert_fail@plt+0x2e10>
   14850:	mov	r4, r0
   14854:	mov	r9, #0
   14858:	mov	r7, #0
   1485c:	ldr	r5, [sl, #48]	; 0x30
   14860:	tst	r5, #2
   14864:	beq	148f0 <__assert_fail@plt+0x2e54>
   14868:	b	14938 <__assert_fail@plt+0x2e9c>
   1486c:	mov	r6, #1
   14870:	ldr	r0, [sl, #48]	; 0x30
   14874:	tst	r0, #4
   14878:	beq	1480c <__assert_fail@plt+0x2d70>
   1487c:	mov	r5, #0
   14880:	cmp	r4, #0
   14884:	blt	1492c <__assert_fail@plt+0x2e90>
   14888:	ands	r0, r0, #512	; 0x200
   1488c:	beq	1492c <__assert_fail@plt+0x2e90>
   14890:	mov	r0, r4
   14894:	bl	11a48 <close@plt>
   14898:	mov	r0, r5
   1489c:	sub	sp, fp, #28
   148a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148a4:	cmn	r4, #1
   148a8:	bgt	148e4 <__assert_fail@plt+0x2e48>
   148ac:	ldr	r0, [sl, #48]	; 0x30
   148b0:	mov	r1, #32768	; 0x8000
   148b4:	and	r1, r1, r0, lsl #11
   148b8:	tst	r0, #512	; 0x200
   148bc:	orr	r1, r1, #18688	; 0x4900
   148c0:	orr	r2, r1, #524288	; 0x80000
   148c4:	bne	14960 <__assert_fail@plt+0x2ec4>
   148c8:	mov	r0, r7
   148cc:	mov	r1, r2
   148d0:	bl	1ad58 <lchmod@@Base+0x3ccc>
   148d4:	mov	r4, r0
   148d8:	mov	r9, #1
   148dc:	cmp	r0, #0
   148e0:	blt	1497c <__assert_fail@plt+0x2ee0>
   148e4:	ldr	r5, [sl, #48]	; 0x30
   148e8:	tst	r5, #2
   148ec:	bne	14938 <__assert_fail@plt+0x2e9c>
   148f0:	cmp	r7, #0
   148f4:	beq	14910 <__assert_fail@plt+0x2e74>
   148f8:	movw	r1, #47194	; 0xb85a
   148fc:	mov	r0, r7
   14900:	movt	r1, #1
   14904:	bl	116d0 <strcmp@plt>
   14908:	cmp	r0, #0
   1490c:	beq	14938 <__assert_fail@plt+0x2e9c>
   14910:	tst	r5, #512	; 0x200
   14914:	bne	149cc <__assert_fail@plt+0x2f30>
   14918:	mov	r0, r4
   1491c:	bl	119c4 <fchdir@plt>
   14920:	mov	r5, r0
   14924:	cmp	r9, #0
   14928:	bne	14a14 <__assert_fail@plt+0x2f78>
   1492c:	mov	r0, r5
   14930:	sub	sp, fp, #28
   14934:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14938:	mov	r2, sp
   1493c:	mov	r0, #3
   14940:	mov	r1, r4
   14944:	bl	117c0 <__fxstat64@plt>
   14948:	cmp	r0, #0
   1494c:	beq	1498c <__assert_fail@plt+0x2ef0>
   14950:	mvn	r5, #0
   14954:	cmp	r9, #0
   14958:	beq	1492c <__assert_fail@plt+0x2e90>
   1495c:	b	14a14 <__assert_fail@plt+0x2f78>
   14960:	ldr	r0, [sl, #32]
   14964:	mov	r1, r7
   14968:	bl	177b4 <lchmod@@Base+0x728>
   1496c:	mov	r4, r0
   14970:	mov	r9, #1
   14974:	cmp	r0, #0
   14978:	bge	148e4 <__assert_fail@plt+0x2e48>
   1497c:	mvn	r5, #0
   14980:	mov	r0, r5
   14984:	sub	sp, fp, #28
   14988:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1498c:	ldrd	r0, [r8, #64]	; 0x40
   14990:	ldm	sp, {r2, r3}
   14994:	eor	r1, r1, r3
   14998:	eor	r0, r0, r2
   1499c:	orrs	r0, r0, r1
   149a0:	bne	149fc <__assert_fail@plt+0x2f60>
   149a4:	ldrd	r0, [r8, #160]	; 0xa0
   149a8:	ldr	r2, [sp, #96]	; 0x60
   149ac:	ldr	r3, [sp, #100]	; 0x64
   149b0:	eor	r1, r1, r3
   149b4:	eor	r0, r0, r2
   149b8:	orrs	r0, r0, r1
   149bc:	bne	149fc <__assert_fail@plt+0x2f60>
   149c0:	ldr	r5, [sl, #48]	; 0x30
   149c4:	tst	r5, #512	; 0x200
   149c8:	beq	14918 <__assert_fail@plt+0x2e7c>
   149cc:	ldr	r1, [sl, #32]
   149d0:	cmp	r1, r4
   149d4:	bne	149e0 <__assert_fail@plt+0x2f44>
   149d8:	cmn	r1, #100	; 0x64
   149dc:	bne	14a64 <__assert_fail@plt+0x2fc8>
   149e0:	cmp	r6, #0
   149e4:	beq	14a38 <__assert_fail@plt+0x2f9c>
   149e8:	add	r0, sl, #60	; 0x3c
   149ec:	bl	16fe8 <__assert_fail@plt+0x554c>
   149f0:	cmp	r0, #0
   149f4:	bge	14a4c <__assert_fail@plt+0x2fb0>
   149f8:	b	14a50 <__assert_fail@plt+0x2fb4>
   149fc:	bl	118ec <__errno_location@plt>
   14a00:	mov	r1, #2
   14a04:	str	r1, [r0]
   14a08:	mvn	r5, #0
   14a0c:	cmp	r9, #0
   14a10:	beq	1492c <__assert_fail@plt+0x2e90>
   14a14:	bl	118ec <__errno_location@plt>
   14a18:	ldr	r7, [r0]
   14a1c:	mov	r6, r0
   14a20:	mov	r0, r4
   14a24:	bl	11a48 <close@plt>
   14a28:	str	r7, [r6]
   14a2c:	mov	r0, r5
   14a30:	sub	sp, fp, #28
   14a34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a38:	tst	r5, #4
   14a3c:	bne	14a50 <__assert_fail@plt+0x2fb4>
   14a40:	cmp	r1, #0
   14a44:	blt	14a50 <__assert_fail@plt+0x2fb4>
   14a48:	mov	r0, r1
   14a4c:	bl	11a48 <close@plt>
   14a50:	str	r4, [sl, #32]
   14a54:	mov	r5, #0
   14a58:	mov	r0, r5
   14a5c:	sub	sp, fp, #28
   14a60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a64:	bl	11a3c <abort@plt>
   14a68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14a6c:	add	fp, sp, #28
   14a70:	sub	sp, sp, #76	; 0x4c
   14a74:	ldr	r8, [r0]
   14a78:	mov	r9, r1
   14a7c:	mov	r5, r0
   14a80:	str	r0, [sp, #52]	; 0x34
   14a84:	ldr	r4, [r8, #12]
   14a88:	cmp	r4, #0
   14a8c:	beq	14ad8 <__assert_fail@plt+0x303c>
   14a90:	mov	r0, r4
   14a94:	bl	119b8 <dirfd@plt>
   14a98:	cmn	r0, #1
   14a9c:	str	r0, [fp, #-32]	; 0xffffffe0
   14aa0:	ble	14b10 <__assert_fail@plt+0x3074>
   14aa4:	mov	r1, r5
   14aa8:	mvn	r2, #0
   14aac:	str	r4, [sp, #12]
   14ab0:	str	r9, [sp, #4]
   14ab4:	mov	ip, #0
   14ab8:	ldr	r0, [r1, #44]!	; 0x2c
   14abc:	cmp	r0, #0
   14ac0:	str	r1, [fp, #-48]	; 0xffffffd0
   14ac4:	add	sl, r1, #4
   14ac8:	movweq	r2, #34464	; 0x86a0
   14acc:	movteq	r2, #1
   14ad0:	str	r2, [sp, #28]
   14ad4:	b	14da0 <__assert_fail@plt+0x3304>
   14ad8:	mov	sl, r5
   14adc:	mvn	r0, #99	; 0x63
   14ae0:	mov	r2, #0
   14ae4:	ldr	r3, [sl, #48]!	; 0x30
   14ae8:	and	r1, r3, #516	; 0x204
   14aec:	cmp	r1, #512	; 0x200
   14af0:	ldr	r1, [r8, #24]
   14af4:	ldreq	r0, [r5, #32]
   14af8:	tst	r3, #16
   14afc:	beq	14b38 <__assert_fail@plt+0x309c>
   14b00:	tst	r3, #1
   14b04:	bne	14b2c <__assert_fail@plt+0x3090>
   14b08:	mov	r2, #32768	; 0x8000
   14b0c:	b	14b38 <__assert_fail@plt+0x309c>
   14b10:	ldr	r0, [r8, #12]
   14b14:	bl	11a78 <closedir@plt>
   14b18:	mov	r6, #0
   14b1c:	str	r6, [r8, #12]
   14b20:	cmp	r9, #3
   14b24:	beq	14b84 <__assert_fail@plt+0x30e8>
   14b28:	b	15454 <__assert_fail@plt+0x39b8>
   14b2c:	ldr	r3, [r8, #48]	; 0x30
   14b30:	cmp	r3, #0
   14b34:	movne	r2, #32768	; 0x8000
   14b38:	sub	r3, fp, #32
   14b3c:	bl	177f8 <lchmod@@Base+0x76c>
   14b40:	cmp	r0, #0
   14b44:	str	r0, [r8, #12]
   14b48:	beq	14b78 <__assert_fail@plt+0x30dc>
   14b4c:	ldrh	r0, [r8, #56]	; 0x38
   14b50:	cmp	r0, #11
   14b54:	bne	14ba4 <__assert_fail@plt+0x3108>
   14b58:	mov	r0, r5
   14b5c:	mov	r1, r8
   14b60:	mov	r2, #0
   14b64:	bl	139fc <__assert_fail@plt+0x1f60>
   14b68:	mov	r7, r8
   14b6c:	strh	r0, [r8, #56]	; 0x38
   14b70:	mov	r6, r5
   14b74:	b	14c78 <__assert_fail@plt+0x31dc>
   14b78:	mov	r6, #0
   14b7c:	cmp	r9, #3
   14b80:	bne	15454 <__assert_fail@plt+0x39b8>
   14b84:	mov	r0, #4
   14b88:	strh	r0, [r8, #56]	; 0x38
   14b8c:	bl	118ec <__errno_location@plt>
   14b90:	ldr	r0, [r0]
   14b94:	str	r0, [r8, #32]
   14b98:	mov	r0, r6
   14b9c:	sub	sp, fp, #28
   14ba0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ba4:	ldrb	r0, [sl, #1]
   14ba8:	mov	r7, r8
   14bac:	mov	r6, r5
   14bb0:	tst	r0, #1
   14bb4:	beq	14c78 <__assert_fail@plt+0x31dc>
   14bb8:	mov	r0, r6
   14bbc:	mov	r1, r7
   14bc0:	mov	r5, r7
   14bc4:	bl	146f0 <__assert_fail@plt+0x2c54>
   14bc8:	mov	r0, r6
   14bcc:	mov	r1, r7
   14bd0:	mov	r2, #0
   14bd4:	bl	139fc <__assert_fail@plt+0x1f60>
   14bd8:	ldrh	r0, [r6, #48]	; 0x30
   14bdc:	movw	r1, #258	; 0x102
   14be0:	tst	r0, r1
   14be4:	beq	14c58 <__assert_fail@plt+0x31bc>
   14be8:	mov	r0, #24
   14bec:	bl	1a848 <lchmod@@Base+0x37bc>
   14bf0:	cmp	r0, #0
   14bf4:	beq	15610 <__assert_fail@plt+0x3b74>
   14bf8:	mov	r5, r0
   14bfc:	ldrd	r0, [r7, #64]	; 0x40
   14c00:	add	r2, r5, #8
   14c04:	stm	r5, {r0, r1}
   14c08:	ldrd	r0, [r7, #160]	; 0xa0
   14c0c:	stm	r2, {r0, r1, r7}
   14c10:	mov	r1, r5
   14c14:	ldr	r6, [sp, #52]	; 0x34
   14c18:	ldr	r0, [r6, #56]	; 0x38
   14c1c:	bl	16c10 <__assert_fail@plt+0x5174>
   14c20:	cmp	r0, r5
   14c24:	beq	14c78 <__assert_fail@plt+0x31dc>
   14c28:	mov	r8, r0
   14c2c:	mov	r0, r5
   14c30:	bl	13370 <__assert_fail@plt+0x18d4>
   14c34:	cmp	r8, #0
   14c38:	beq	15610 <__assert_fail@plt+0x3b74>
   14c3c:	ldr	r0, [r8, #16]
   14c40:	ldr	r6, [sp, #52]	; 0x34
   14c44:	mov	r1, #2
   14c48:	mov	r2, r7
   14c4c:	strh	r1, [r7, #56]	; 0x38
   14c50:	str	r0, [r7]
   14c54:	b	14c78 <__assert_fail@plt+0x31dc>
   14c58:	ldr	r0, [r6, #56]	; 0x38
   14c5c:	add	r1, r5, #64	; 0x40
   14c60:	bl	1aa04 <lchmod@@Base+0x3978>
   14c64:	cmp	r0, #0
   14c68:	movne	r0, #2
   14c6c:	movne	r1, r7
   14c70:	strhne	r0, [r7, #56]	; 0x38
   14c74:	strne	r7, [r7]
   14c78:	mov	r1, r6
   14c7c:	mov	r5, r6
   14c80:	mov	r8, r7
   14c84:	str	r9, [sp, #4]
   14c88:	str	r4, [sp, #12]
   14c8c:	ldr	r0, [r1, #44]!	; 0x2c
   14c90:	str	r1, [fp, #-48]	; 0xffffffd0
   14c94:	mvn	r1, #0
   14c98:	cmp	r0, #0
   14c9c:	movweq	r1, #34464	; 0x86a0
   14ca0:	movteq	r1, #1
   14ca4:	cmp	r9, #2
   14ca8:	str	r1, [sp, #28]
   14cac:	bne	14cc8 <__assert_fail@plt+0x322c>
   14cb0:	mov	ip, #1
   14cb4:	cmp	r9, #3
   14cb8:	bne	14da0 <__assert_fail@plt+0x3304>
   14cbc:	sub	r0, r9, #3
   14cc0:	mov	r5, #0
   14cc4:	b	14ce8 <__assert_fail@plt+0x324c>
   14cc8:	ldr	r0, [sl]
   14ccc:	and	r0, r0, #56	; 0x38
   14cd0:	cmp	r0, #24
   14cd4:	ldreq	r0, [r8, #84]	; 0x54
   14cd8:	cmpeq	r0, #2
   14cdc:	beq	155d0 <__assert_fail@plt+0x3b34>
   14ce0:	sub	r0, r9, #3
   14ce4:	mov	r5, #1
   14ce8:	clz	r0, r0
   14cec:	lsr	r6, r0, #5
   14cf0:	ldrb	r0, [sl, #1]
   14cf4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14cf8:	tst	r0, #2
   14cfc:	beq	14d18 <__assert_fail@plt+0x327c>
   14d00:	mov	r0, r2
   14d04:	movw	r1, #1030	; 0x406
   14d08:	mov	r2, #3
   14d0c:	bl	1ab78 <lchmod@@Base+0x3aec>
   14d10:	mov	r2, r0
   14d14:	str	r0, [fp, #-32]	; 0xffffffe0
   14d18:	cmp	r2, #0
   14d1c:	blt	14d38 <__assert_fail@plt+0x329c>
   14d20:	ldr	r0, [sp, #52]	; 0x34
   14d24:	mov	r1, r8
   14d28:	mov	r3, #0
   14d2c:	bl	147c0 <__assert_fail@plt+0x2d24>
   14d30:	cmp	r0, #0
   14d34:	beq	14d98 <__assert_fail@plt+0x32fc>
   14d38:	and	r0, r6, r5
   14d3c:	cmp	r0, #1
   14d40:	bne	14d50 <__assert_fail@plt+0x32b4>
   14d44:	bl	118ec <__errno_location@plt>
   14d48:	ldr	r0, [r0]
   14d4c:	str	r0, [r8, #32]
   14d50:	ldrh	r0, [r8, #58]	; 0x3a
   14d54:	orr	r0, r0, #1
   14d58:	strh	r0, [r8, #58]	; 0x3a
   14d5c:	ldr	r0, [r8, #12]
   14d60:	bl	11a78 <closedir@plt>
   14d64:	mov	r4, #0
   14d68:	ldr	r5, [sp, #52]	; 0x34
   14d6c:	str	r4, [r8, #12]
   14d70:	ldr	r0, [sl]
   14d74:	tst	r0, #512	; 0x200
   14d78:	beq	14d8c <__assert_fail@plt+0x32f0>
   14d7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14d80:	cmp	r0, #0
   14d84:	blt	14d8c <__assert_fail@plt+0x32f0>
   14d88:	bl	11a48 <close@plt>
   14d8c:	mov	ip, #1
   14d90:	str	r4, [r8, #12]
   14d94:	b	14da0 <__assert_fail@plt+0x3304>
   14d98:	ldr	r5, [sp, #52]	; 0x34
   14d9c:	mov	ip, #0
   14da0:	ldr	r0, [r8, #40]	; 0x28
   14da4:	ldr	r1, [r8, #28]
   14da8:	mov	r7, #0
   14dac:	sub	r2, r0, #1
   14db0:	ldrb	r1, [r1, r2]
   14db4:	cmp	r1, #47	; 0x2f
   14db8:	ldrb	r1, [sl]
   14dbc:	moveq	r0, r2
   14dc0:	tst	r1, #4
   14dc4:	mov	r1, #0
   14dc8:	str	r1, [sp, #40]	; 0x28
   14dcc:	beq	14de4 <__assert_fail@plt+0x3348>
   14dd0:	ldr	r1, [r5, #24]
   14dd4:	mov	r2, #47	; 0x2f
   14dd8:	strb	r2, [r1, r0]!
   14ddc:	add	r1, r1, #1
   14de0:	str	r1, [sp, #40]	; 0x28
   14de4:	ldr	r6, [r8, #12]
   14de8:	add	r1, r0, #1
   14dec:	str	r1, [fp, #-44]	; 0xffffffd4
   14df0:	cmp	r6, #0
   14df4:	beq	15194 <__assert_fail@plt+0x36f8>
   14df8:	ldr	r0, [r8, #48]	; 0x30
   14dfc:	str	ip, [sp]
   14e00:	add	r0, r0, #1
   14e04:	str	r0, [sp, #20]
   14e08:	ldr	r0, [r5, #36]	; 0x24
   14e0c:	mov	r5, #0
   14e10:	sub	r0, r0, r1
   14e14:	str	r0, [sp, #44]	; 0x2c
   14e18:	bl	118ec <__errno_location@plt>
   14e1c:	str	r0, [sp, #36]	; 0x24
   14e20:	mov	r0, #0
   14e24:	mov	r7, #0
   14e28:	mov	r4, #0
   14e2c:	str	r8, [sp, #24]
   14e30:	str	sl, [sp, #32]
   14e34:	str	r0, [sp, #48]	; 0x30
   14e38:	mov	r0, #0
   14e3c:	str	r0, [sp, #8]
   14e40:	mov	r0, #0
   14e44:	str	r0, [sp, #16]
   14e48:	ldr	r0, [sp, #36]	; 0x24
   14e4c:	str	r7, [fp, #-36]	; 0xffffffdc
   14e50:	str	r5, [r0]
   14e54:	mov	r0, r6
   14e58:	bl	11994 <readdir64@plt>
   14e5c:	cmp	r0, #0
   14e60:	beq	152f8 <__assert_fail@plt+0x385c>
   14e64:	mov	r9, r0
   14e68:	ldrb	r0, [sl]
   14e6c:	str	r4, [fp, #-40]	; 0xffffffd8
   14e70:	mov	r1, sl
   14e74:	add	r4, r9, #19
   14e78:	tst	r0, #32
   14e7c:	ldrbeq	r0, [r4]
   14e80:	cmpeq	r0, #46	; 0x2e
   14e84:	beq	14f80 <__assert_fail@plt+0x34e4>
   14e88:	mov	r0, r4
   14e8c:	bl	118bc <strlen@plt>
   14e90:	mov	r5, r0
   14e94:	add	r0, r0, #176	; 0xb0
   14e98:	bic	r0, r0, #7
   14e9c:	bl	1a848 <lchmod@@Base+0x37bc>
   14ea0:	mov	r6, r0
   14ea4:	cmp	r0, #0
   14ea8:	beq	154b4 <__assert_fail@plt+0x3a18>
   14eac:	add	sl, r6, #168	; 0xa8
   14eb0:	mov	r1, r4
   14eb4:	mov	r2, r5
   14eb8:	mov	r0, sl
   14ebc:	bl	11730 <memcpy@plt>
   14ec0:	ldr	r2, [sp, #52]	; 0x34
   14ec4:	mov	r0, #0
   14ec8:	mov	r1, #196608	; 0x30000
   14ecc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14ed0:	strb	r0, [sl, r5]
   14ed4:	str	r5, [r6, #52]	; 0x34
   14ed8:	str	r2, [r6, #44]	; 0x2c
   14edc:	add	r7, r5, r3
   14ee0:	ldr	r4, [r2, #24]
   14ee4:	str	r1, [r6, #58]	; 0x3a
   14ee8:	str	r0, [r6, #12]
   14eec:	str	r0, [r6, #16]
   14ef0:	str	r0, [r6, #20]
   14ef4:	str	r4, [r6, #28]
   14ef8:	str	r0, [r6, #32]
   14efc:	ldr	r0, [sp, #44]	; 0x2c
   14f00:	cmp	r5, r0
   14f04:	bcs	14f1c <__assert_fail@plt+0x3480>
   14f08:	ldr	r4, [fp, #-40]	; 0xffffffd8
   14f0c:	mov	r5, r2
   14f10:	cmp	r7, r3
   14f14:	bcs	14fd4 <__assert_fail@plt+0x3538>
   14f18:	b	15358 <__assert_fail@plt+0x38bc>
   14f1c:	ldr	r1, [r2, #36]	; 0x24
   14f20:	movw	r0, #257	; 0x101
   14f24:	mov	r5, r2
   14f28:	add	r0, r7, r0
   14f2c:	adds	r1, r0, r1
   14f30:	bcs	15460 <__assert_fail@plt+0x39c4>
   14f34:	mov	r0, r4
   14f38:	str	r1, [r5, #36]	; 0x24
   14f3c:	bl	1a878 <lchmod@@Base+0x37ec>
   14f40:	cmp	r0, #0
   14f44:	beq	154a0 <__assert_fail@plt+0x3a04>
   14f48:	cmp	r0, r4
   14f4c:	str	r0, [r5, #24]
   14f50:	beq	14fb8 <__assert_fail@plt+0x351c>
   14f54:	ldr	r1, [sp, #32]
   14f58:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14f5c:	ldr	r4, [fp, #-40]	; 0xffffffd8
   14f60:	ldrb	r1, [r1]
   14f64:	tst	r1, #4
   14f68:	ldr	r1, [sp, #40]	; 0x28
   14f6c:	addne	r1, r0, r3
   14f70:	mov	r0, #1
   14f74:	str	r1, [sp, #40]	; 0x28
   14f78:	str	r0, [sp, #16]
   14f7c:	b	14fc0 <__assert_fail@plt+0x3524>
   14f80:	ldrb	r0, [r9, #20]
   14f84:	cmp	r0, #0
   14f88:	beq	14f9c <__assert_fail@plt+0x3500>
   14f8c:	cmp	r0, #46	; 0x2e
   14f90:	ldrbeq	r0, [r9, #21]
   14f94:	cmpeq	r0, #0
   14f98:	bne	14e88 <__assert_fail@plt+0x33ec>
   14f9c:	ldr	r4, [fp, #-40]	; 0xffffffd8
   14fa0:	ldr	r7, [fp, #-36]	; 0xffffffdc
   14fa4:	mov	r5, #0
   14fa8:	ldr	r6, [r8, #12]
   14fac:	cmp	r6, #0
   14fb0:	bne	14e48 <__assert_fail@plt+0x33ac>
   14fb4:	b	15178 <__assert_fail@plt+0x36dc>
   14fb8:	ldr	r4, [fp, #-40]	; 0xffffffd8
   14fbc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14fc0:	ldr	r0, [r5, #36]	; 0x24
   14fc4:	sub	r0, r0, r3
   14fc8:	str	r0, [sp, #44]	; 0x2c
   14fcc:	cmp	r7, r3
   14fd0:	bcc	15358 <__assert_fail@plt+0x38bc>
   14fd4:	ldr	r0, [sp, #20]
   14fd8:	str	r0, [r6, #48]	; 0x30
   14fdc:	ldr	r0, [r5]
   14fe0:	str	r7, [r6, #40]	; 0x28
   14fe4:	str	r0, [r6, #4]
   14fe8:	ldrd	r0, [r9]
   14fec:	strd	r0, [r6, #160]	; 0xa0
   14ff0:	ldrb	r0, [r5, #48]	; 0x30
   14ff4:	tst	r0, #4
   14ff8:	bne	15004 <__assert_fail@plt+0x3568>
   14ffc:	str	sl, [r6, #24]
   15000:	b	15020 <__assert_fail@plt+0x3584>
   15004:	ldr	r0, [r6, #28]
   15008:	ldr	r1, [r6, #52]	; 0x34
   1500c:	str	r0, [r6, #24]
   15010:	ldr	r0, [sp, #40]	; 0x28
   15014:	add	r2, r1, #1
   15018:	mov	r1, sl
   1501c:	bl	11700 <memmove@plt>
   15020:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15024:	ldr	sl, [sp, #32]
   15028:	ldr	r8, [sp, #24]
   1502c:	ldr	r0, [r0]
   15030:	ldr	r2, [sl]
   15034:	cmp	r0, #0
   15038:	beq	15064 <__assert_fail@plt+0x35c8>
   1503c:	ands	r0, r2, #1024	; 0x400
   15040:	bne	15064 <__assert_fail@plt+0x35c8>
   15044:	mov	r0, r5
   15048:	mov	r1, r6
   1504c:	mov	r2, #0
   15050:	bl	139fc <__assert_fail@plt+0x1f60>
   15054:	ldr	r7, [fp, #-36]	; 0xffffffdc
   15058:	mov	r5, #0
   1505c:	strh	r0, [r6, #56]	; 0x38
   15060:	b	150dc <__assert_fail@plt+0x3640>
   15064:	ldrb	r3, [r9, #18]
   15068:	mov	r0, #0
   1506c:	tst	r2, #8
   15070:	mov	r1, #0
   15074:	beq	15098 <__assert_fail@plt+0x35fc>
   15078:	orr	r1, r3, #4
   1507c:	cmp	r1, #4
   15080:	mov	r1, #0
   15084:	beq	15098 <__assert_fail@plt+0x35fc>
   15088:	eor	r1, r3, #10
   1508c:	and	r2, r2, #16
   15090:	orrs	r1, r2, r1
   15094:	movwne	r1, #1
   15098:	mov	r2, #11
   1509c:	ldr	r7, [fp, #-36]	; 0xffffffdc
   150a0:	mov	r5, #0
   150a4:	strh	r2, [r6, #56]	; 0x38
   150a8:	sub	r2, r3, #1
   150ac:	uxtb	r3, r2
   150b0:	cmp	r3, #11
   150b4:	sxtbls	r0, r2
   150b8:	movwls	r2, #47200	; 0xb860
   150bc:	movtls	r2, #1
   150c0:	ldrls	r0, [r2, r0, lsl #2]
   150c4:	cmp	r1, #0
   150c8:	str	r0, [r6, #80]	; 0x50
   150cc:	mov	r0, #2
   150d0:	movwne	r0, #1
   150d4:	str	r0, [r6, #112]	; 0x70
   150d8:	str	r5, [r6, #116]	; 0x74
   150dc:	cmp	r7, #0
   150e0:	str	r5, [r6, #8]
   150e4:	ldrne	r0, [sp, #48]	; 0x30
   150e8:	moveq	r7, r6
   150ec:	strne	r6, [r0, #8]
   150f0:	movw	r0, #10000	; 0x2710
   150f4:	cmp	r4, r0
   150f8:	bne	1514c <__assert_fail@plt+0x36b0>
   150fc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15100:	ldr	r0, [r0]
   15104:	cmp	r0, #0
   15108:	bne	1514c <__assert_fail@plt+0x36b0>
   1510c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15110:	mov	r0, r8
   15114:	bl	159bc <__assert_fail@plt+0x3f20>
   15118:	mov	r1, #0
   1511c:	str	r1, [sp, #8]
   15120:	movw	r1, #19778	; 0x4d42
   15124:	movt	r1, #65363	; 0xff53
   15128:	cmp	r0, r1
   1512c:	movwne	r1, #26985	; 0x6969
   15130:	cmpne	r0, r1
   15134:	beq	1514c <__assert_fail@plt+0x36b0>
   15138:	movw	r1, #6548	; 0x1994
   1513c:	movt	r1, #258	; 0x102
   15140:	cmp	r0, r1
   15144:	movne	r0, #1
   15148:	strne	r0, [sp, #8]
   1514c:	ldr	r0, [sp, #28]
   15150:	add	r4, r4, #1
   15154:	cmp	r0, r4
   15158:	mov	r0, #0
   1515c:	movwls	r0, #15
   15160:	cmp	r0, #0
   15164:	bne	153d8 <__assert_fail@plt+0x393c>
   15168:	str	r6, [sp, #48]	; 0x30
   1516c:	ldr	r6, [r8, #12]
   15170:	cmp	r6, #0
   15174:	bne	14e48 <__assert_fail@plt+0x33ac>
   15178:	ldr	r0, [sp, #16]
   1517c:	ldr	ip, [sp]
   15180:	ldr	r6, [sp, #8]
   15184:	ldr	r5, [sp, #52]	; 0x34
   15188:	tst	r0, #1
   1518c:	beq	1519c <__assert_fail@plt+0x3700>
   15190:	b	15544 <__assert_fail@plt+0x3aa8>
   15194:	mov	r4, #0
   15198:	mov	r6, #0
   1519c:	ldrb	r0, [sl]
   151a0:	tst	r0, #4
   151a4:	beq	151d0 <__assert_fail@plt+0x3734>
   151a8:	ldr	r2, [sp, #40]	; 0x28
   151ac:	ldr	r0, [r5, #36]	; 0x24
   151b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   151b4:	cmp	r3, r0
   151b8:	sub	r1, r2, #1
   151bc:	mov	r0, #0
   151c0:	moveq	r2, r1
   151c4:	cmp	r4, #0
   151c8:	moveq	r2, r1
   151cc:	strb	r0, [r2]
   151d0:	ldr	r0, [sp, #12]
   151d4:	cmp	r0, #0
   151d8:	movwne	r0, #1
   151dc:	orrs	r0, r0, ip
   151e0:	beq	15244 <__assert_fail@plt+0x37a8>
   151e4:	cmp	r4, #0
   151e8:	bne	15284 <__assert_fail@plt+0x37e8>
   151ec:	ldr	r0, [sp, #4]
   151f0:	cmp	r0, #3
   151f4:	bne	1520c <__assert_fail@plt+0x3770>
   151f8:	ldrh	r0, [r8, #56]	; 0x38
   151fc:	cmp	r0, #4
   15200:	cmpne	r0, #7
   15204:	movne	r0, #6
   15208:	strhne	r0, [r8, #56]	; 0x38
   1520c:	mov	r6, #0
   15210:	cmp	r7, #0
   15214:	beq	15454 <__assert_fail@plt+0x39b8>
   15218:	ldrd	r4, [r7, #8]
   1521c:	cmp	r5, #0
   15220:	beq	1522c <__assert_fail@plt+0x3790>
   15224:	mov	r0, r5
   15228:	bl	11a78 <closedir@plt>
   1522c:	mov	r0, r7
   15230:	bl	13370 <__assert_fail@plt+0x18d4>
   15234:	cmp	r4, #0
   15238:	mov	r7, r4
   1523c:	bne	15218 <__assert_fail@plt+0x377c>
   15240:	b	15454 <__assert_fail@plt+0x39b8>
   15244:	ldr	r0, [sp, #4]
   15248:	cmp	r0, #1
   1524c:	cmpne	r4, #0
   15250:	bne	15284 <__assert_fail@plt+0x37e8>
   15254:	ldr	r0, [r8, #48]	; 0x30
   15258:	cmp	r0, #0
   1525c:	beq	153fc <__assert_fail@plt+0x3960>
   15260:	ldr	r1, [r8, #4]
   15264:	movw	r3, #47194	; 0xb85a
   15268:	mov	r0, r5
   1526c:	mvn	r2, #0
   15270:	movt	r3, #1
   15274:	bl	147c0 <__assert_fail@plt+0x2d24>
   15278:	cmp	r0, #0
   1527c:	bne	1540c <__assert_fail@plt+0x3970>
   15280:	b	151e4 <__assert_fail@plt+0x3748>
   15284:	tst	r6, #1
   15288:	beq	152c0 <__assert_fail@plt+0x3824>
   1528c:	movw	r0, #22916	; 0x5984
   15290:	mov	r1, r7
   15294:	mov	r2, r4
   15298:	movt	r0, #1
   1529c:	str	r0, [r5, #44]	; 0x2c
   152a0:	mov	r0, r5
   152a4:	bl	13b94 <__assert_fail@plt+0x20f8>
   152a8:	mov	r6, r0
   152ac:	mov	r0, #0
   152b0:	str	r0, [r5, #44]	; 0x2c
   152b4:	mov	r0, r6
   152b8:	sub	sp, fp, #28
   152bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   152c0:	cmp	r4, #2
   152c4:	bcc	15480 <__assert_fail@plt+0x39e4>
   152c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   152cc:	ldr	r0, [r0]
   152d0:	cmp	r0, #0
   152d4:	beq	15490 <__assert_fail@plt+0x39f4>
   152d8:	mov	r0, r5
   152dc:	mov	r1, r7
   152e0:	mov	r2, r4
   152e4:	bl	13b94 <__assert_fail@plt+0x20f8>
   152e8:	mov	r6, r0
   152ec:	mov	r0, r6
   152f0:	sub	sp, fp, #28
   152f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   152f8:	ldr	r0, [sp, #36]	; 0x24
   152fc:	ldr	r0, [r0]
   15300:	cmp	r0, #0
   15304:	beq	15320 <__assert_fail@plt+0x3884>
   15308:	str	r0, [r8, #32]
   1530c:	ldr	r0, [sp, #12]
   15310:	orrs	r0, r0, r4
   15314:	mov	r0, #4
   15318:	movwne	r0, #7
   1531c:	strh	r0, [r8, #56]	; 0x38
   15320:	ldr	r0, [r8, #12]
   15324:	ldr	r6, [sp, #8]
   15328:	ldr	r7, [fp, #-36]	; 0xffffffdc
   1532c:	ldr	r5, [sp, #52]	; 0x34
   15330:	cmp	r0, #0
   15334:	beq	15534 <__assert_fail@plt+0x3a98>
   15338:	bl	11a78 <closedir@plt>
   1533c:	mov	r0, #0
   15340:	ldr	ip, [sp]
   15344:	str	r0, [r8, #12]
   15348:	ldr	r0, [sp, #16]
   1534c:	tst	r0, #1
   15350:	beq	1519c <__assert_fail@plt+0x3700>
   15354:	b	15544 <__assert_fail@plt+0x3aa8>
   15358:	mov	r0, r6
   1535c:	bl	13370 <__assert_fail@plt+0x18d4>
   15360:	ldr	r6, [fp, #-36]	; 0xffffffdc
   15364:	ldr	r7, [sp, #24]
   15368:	cmp	r6, #0
   1536c:	beq	15398 <__assert_fail@plt+0x38fc>
   15370:	ldrd	r4, [r6, #8]
   15374:	cmp	r5, #0
   15378:	beq	15384 <__assert_fail@plt+0x38e8>
   1537c:	mov	r0, r5
   15380:	bl	11a78 <closedir@plt>
   15384:	mov	r0, r6
   15388:	bl	13370 <__assert_fail@plt+0x18d4>
   1538c:	cmp	r4, #0
   15390:	mov	r6, r4
   15394:	bne	15370 <__assert_fail@plt+0x38d4>
   15398:	ldr	r0, [r7, #12]
   1539c:	bl	11a78 <closedir@plt>
   153a0:	ldr	r1, [sp, #32]
   153a4:	mov	r6, #0
   153a8:	mov	r0, #7
   153ac:	str	r6, [r7, #12]
   153b0:	strh	r0, [r7, #56]	; 0x38
   153b4:	ldr	r0, [r1]
   153b8:	orr	r0, r0, #8192	; 0x2000
   153bc:	str	r0, [r1]
   153c0:	ldr	r1, [sp, #36]	; 0x24
   153c4:	mov	r0, #36	; 0x24
   153c8:	str	r0, [r1]
   153cc:	mov	r0, r6
   153d0:	sub	sp, fp, #28
   153d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   153d8:	ldr	ip, [sp]
   153dc:	cmp	r0, #15
   153e0:	bne	1561c <__assert_fail@plt+0x3b80>
   153e4:	ldr	r6, [sp, #8]
   153e8:	ldr	r5, [sp, #52]	; 0x34
   153ec:	ldr	r0, [sp, #16]
   153f0:	tst	r0, #1
   153f4:	beq	1519c <__assert_fail@plt+0x3700>
   153f8:	b	15544 <__assert_fail@plt+0x3aa8>
   153fc:	mov	r0, r5
   15400:	bl	15644 <__assert_fail@plt+0x3ba8>
   15404:	cmp	r0, #0
   15408:	beq	151e4 <__assert_fail@plt+0x3748>
   1540c:	mov	r0, #7
   15410:	mov	r6, #0
   15414:	cmp	r7, #0
   15418:	strh	r0, [r8, #56]	; 0x38
   1541c:	ldr	r0, [sl]
   15420:	orr	r0, r0, #8192	; 0x2000
   15424:	str	r0, [sl]
   15428:	beq	15454 <__assert_fail@plt+0x39b8>
   1542c:	ldrd	r4, [r7, #8]
   15430:	cmp	r5, #0
   15434:	beq	15440 <__assert_fail@plt+0x39a4>
   15438:	mov	r0, r5
   1543c:	bl	11a78 <closedir@plt>
   15440:	mov	r0, r7
   15444:	bl	13370 <__assert_fail@plt+0x18d4>
   15448:	cmp	r4, #0
   1544c:	mov	r7, r4
   15450:	bne	1542c <__assert_fail@plt+0x3990>
   15454:	mov	r0, r6
   15458:	sub	sp, fp, #28
   1545c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15460:	mov	r0, r4
   15464:	bl	13370 <__assert_fail@plt+0x18d4>
   15468:	ldr	r1, [sp, #36]	; 0x24
   1546c:	mov	r0, #0
   15470:	str	r0, [r5, #24]
   15474:	mov	r0, #36	; 0x24
   15478:	str	r0, [r1]
   1547c:	b	154b0 <__assert_fail@plt+0x3a14>
   15480:	mov	r6, r7
   15484:	mov	r0, r6
   15488:	sub	sp, fp, #28
   1548c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15490:	mov	r6, r7
   15494:	mov	r0, r6
   15498:	sub	sp, fp, #28
   1549c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   154a0:	ldr	r0, [r5, #24]
   154a4:	bl	13370 <__assert_fail@plt+0x18d4>
   154a8:	mov	r0, #0
   154ac:	str	r0, [r5, #24]
   154b0:	ldr	r8, [sp, #24]
   154b4:	ldr	r0, [sp, #36]	; 0x24
   154b8:	ldr	r4, [r0]
   154bc:	mov	r0, r6
   154c0:	bl	13370 <__assert_fail@plt+0x18d4>
   154c4:	ldr	r5, [fp, #-36]	; 0xffffffdc
   154c8:	cmp	r5, #0
   154cc:	beq	154f8 <__assert_fail@plt+0x3a5c>
   154d0:	ldrd	r6, [r5, #8]
   154d4:	cmp	r7, #0
   154d8:	beq	154e4 <__assert_fail@plt+0x3a48>
   154dc:	mov	r0, r7
   154e0:	bl	11a78 <closedir@plt>
   154e4:	mov	r0, r5
   154e8:	bl	13370 <__assert_fail@plt+0x18d4>
   154ec:	cmp	r6, #0
   154f0:	mov	r5, r6
   154f4:	bne	154d0 <__assert_fail@plt+0x3a34>
   154f8:	ldr	r0, [r8, #12]
   154fc:	bl	11a78 <closedir@plt>
   15500:	ldr	r1, [sp, #32]
   15504:	mov	r6, #0
   15508:	mov	r0, #7
   1550c:	str	r6, [r8, #12]
   15510:	strh	r0, [r8, #56]	; 0x38
   15514:	ldr	r0, [r1]
   15518:	orr	r0, r0, #8192	; 0x2000
   1551c:	str	r0, [r1]
   15520:	ldr	r0, [sp, #36]	; 0x24
   15524:	str	r4, [r0]
   15528:	mov	r0, r6
   1552c:	sub	sp, fp, #28
   15530:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15534:	ldr	ip, [sp]
   15538:	ldr	r0, [sp, #16]
   1553c:	tst	r0, #1
   15540:	beq	1519c <__assert_fail@plt+0x3700>
   15544:	ldr	r1, [r5, #4]
   15548:	ldr	r0, [r5, #24]
   1554c:	cmp	r1, #0
   15550:	beq	15580 <__assert_fail@plt+0x3ae4>
   15554:	ldr	r2, [r1, #24]
   15558:	add	r3, r1, #168	; 0xa8
   1555c:	cmp	r2, r3
   15560:	ldrne	r3, [r1, #28]
   15564:	subne	r2, r2, r3
   15568:	addne	r2, r0, r2
   1556c:	strne	r2, [r1, #24]
   15570:	str	r0, [r1, #28]
   15574:	ldr	r1, [r1, #8]
   15578:	cmp	r1, #0
   1557c:	bne	15554 <__assert_fail@plt+0x3ab8>
   15580:	ldr	r1, [r7, #48]	; 0x30
   15584:	cmp	r1, #0
   15588:	blt	1519c <__assert_fail@plt+0x3700>
   1558c:	mov	r1, r7
   15590:	ldr	r2, [r1, #24]
   15594:	add	r3, r1, #168	; 0xa8
   15598:	cmp	r2, r3
   1559c:	ldrne	r3, [r1, #28]
   155a0:	subne	r2, r2, r3
   155a4:	addne	r2, r0, r2
   155a8:	strne	r2, [r1, #24]
   155ac:	str	r0, [r1, #28]
   155b0:	ldr	r2, [r1, #8]
   155b4:	cmp	r2, #0
   155b8:	ldreq	r2, [r1, #4]
   155bc:	ldr	r1, [r2, #48]	; 0x30
   155c0:	cmn	r1, #1
   155c4:	mov	r1, r2
   155c8:	bgt	15590 <__assert_fail@plt+0x3af4>
   155cc:	b	1519c <__assert_fail@plt+0x3700>
   155d0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   155d4:	mov	r0, r8
   155d8:	bl	159bc <__assert_fail@plt+0x3f20>
   155dc:	movw	r1, #26984	; 0x6968
   155e0:	cmp	r0, r1
   155e4:	ble	1562c <__assert_fail@plt+0x3b90>
   155e8:	movw	r1, #26985	; 0x6969
   155ec:	cmp	r0, r1
   155f0:	movwne	r1, #16719	; 0x414f
   155f4:	movtne	r1, #21318	; 0x5346
   155f8:	cmpne	r0, r1
   155fc:	beq	14ce0 <__assert_fail@plt+0x3244>
   15600:	movw	r1, #40864	; 0x9fa0
   15604:	cmp	r0, r1
   15608:	beq	14ce0 <__assert_fail@plt+0x3244>
   1560c:	b	14cb0 <__assert_fail@plt+0x3214>
   15610:	bl	118ec <__errno_location@plt>
   15614:	mov	r1, #12
   15618:	str	r1, [r0]
   1561c:	mov	r6, #0
   15620:	mov	r0, r6
   15624:	sub	sp, fp, #28
   15628:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1562c:	movw	r1, #19778	; 0x4d42
   15630:	movt	r1, #65363	; 0xff53
   15634:	cmp	r0, r1
   15638:	cmpne	r0, #0
   1563c:	beq	14ce0 <__assert_fail@plt+0x3244>
   15640:	b	14cb0 <__assert_fail@plt+0x3214>
   15644:	push	{r4, r5, fp, lr}
   15648:	add	fp, sp, #8
   1564c:	mov	r5, r0
   15650:	ldr	r0, [r0, #48]	; 0x30
   15654:	mov	r4, #0
   15658:	tst	r0, #4
   1565c:	bne	156a0 <__assert_fail@plt+0x3c04>
   15660:	tst	r0, #512	; 0x200
   15664:	bne	15680 <__assert_fail@plt+0x3be4>
   15668:	ldr	r0, [r5, #28]
   1566c:	bl	119c4 <fchdir@plt>
   15670:	mov	r4, r0
   15674:	cmp	r0, #0
   15678:	movwne	r4, #1
   1567c:	b	156a0 <__assert_fail@plt+0x3c04>
   15680:	ldr	r1, [r5, #32]
   15684:	add	r0, r5, #60	; 0x3c
   15688:	bl	16fe8 <__assert_fail@plt+0x554c>
   1568c:	cmp	r0, #0
   15690:	blt	15698 <__assert_fail@plt+0x3bfc>
   15694:	bl	11a48 <close@plt>
   15698:	mvn	r0, #99	; 0x63
   1569c:	str	r0, [r5, #32]
   156a0:	add	r5, r5, #60	; 0x3c
   156a4:	b	156ac <__assert_fail@plt+0x3c10>
   156a8:	bl	11a48 <close@plt>
   156ac:	mov	r0, r5
   156b0:	bl	16fe0 <__assert_fail@plt+0x5544>
   156b4:	cmp	r0, #0
   156b8:	movne	r0, r4
   156bc:	popne	{r4, r5, fp, pc}
   156c0:	mov	r0, r5
   156c4:	bl	17034 <__assert_fail@plt+0x5598>
   156c8:	cmp	r0, #0
   156cc:	bge	156a8 <__assert_fail@plt+0x3c0c>
   156d0:	b	156ac <__assert_fail@plt+0x3c10>
   156d4:	cmp	r2, #5
   156d8:	movcc	r0, #0
   156dc:	strhcc	r2, [r1, #60]	; 0x3c
   156e0:	bxcc	lr
   156e4:	push	{fp, lr}
   156e8:	mov	fp, sp
   156ec:	bl	118ec <__errno_location@plt>
   156f0:	mov	r1, #22
   156f4:	str	r1, [r0]
   156f8:	mov	r0, #1
   156fc:	pop	{fp, pc}
   15700:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15704:	add	fp, sp, #28
   15708:	sub	sp, sp, #4
   1570c:	mov	r9, r0
   15710:	orr	r0, r1, #4096	; 0x1000
   15714:	cmp	r0, #4096	; 0x1000
   15718:	bne	15760 <__assert_fail@plt+0x3cc4>
   1571c:	ldr	r8, [r9]
   15720:	mov	r7, r1
   15724:	bl	118ec <__errno_location@plt>
   15728:	mov	r5, #0
   1572c:	mov	sl, r0
   15730:	str	r5, [r0]
   15734:	ldrb	r0, [r9, #49]	; 0x31
   15738:	tst	r0, #32
   1573c:	bne	15754 <__assert_fail@plt+0x3cb8>
   15740:	ldrh	r0, [r8, #56]	; 0x38
   15744:	cmp	r0, #1
   15748:	beq	1577c <__assert_fail@plt+0x3ce0>
   1574c:	cmp	r0, #9
   15750:	ldreq	r5, [r8, #8]
   15754:	mov	r0, r5
   15758:	sub	sp, fp, #28
   1575c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15760:	bl	118ec <__errno_location@plt>
   15764:	mov	r1, #22
   15768:	mov	r5, #0
   1576c:	str	r1, [r0]
   15770:	mov	r0, r5
   15774:	sub	sp, fp, #28
   15778:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1577c:	ldr	r6, [r9, #4]
   15780:	cmp	r6, #0
   15784:	beq	157b4 <__assert_fail@plt+0x3d18>
   15788:	ldr	r4, [r6, #8]
   1578c:	ldr	r1, [r6, #12]
   15790:	cmp	r1, #0
   15794:	beq	157a0 <__assert_fail@plt+0x3d04>
   15798:	mov	r0, r1
   1579c:	bl	11a78 <closedir@plt>
   157a0:	mov	r0, r6
   157a4:	bl	13370 <__assert_fail@plt+0x18d4>
   157a8:	cmp	r4, #0
   157ac:	mov	r6, r4
   157b0:	bne	15788 <__assert_fail@plt+0x3cec>
   157b4:	cmp	r7, #4096	; 0x1000
   157b8:	mov	r4, #1
   157bc:	ldreq	r0, [r9, #48]	; 0x30
   157c0:	moveq	r4, #2
   157c4:	orreq	r0, r0, #4096	; 0x1000
   157c8:	streq	r0, [r9, #48]	; 0x30
   157cc:	ldr	r0, [r8, #48]	; 0x30
   157d0:	cmp	r0, #0
   157d4:	bne	1582c <__assert_fail@plt+0x3d90>
   157d8:	ldr	r0, [r8, #24]
   157dc:	ldrb	r0, [r0]
   157e0:	cmp	r0, #47	; 0x2f
   157e4:	beq	1582c <__assert_fail@plt+0x3d90>
   157e8:	ldr	r0, [r9, #48]	; 0x30
   157ec:	tst	r0, #4
   157f0:	bne	1582c <__assert_fail@plt+0x3d90>
   157f4:	mov	r1, #32768	; 0x8000
   157f8:	tst	r0, #512	; 0x200
   157fc:	and	r1, r1, r0, lsl #11
   15800:	orr	r1, r1, #18688	; 0x4900
   15804:	orr	r2, r1, #524288	; 0x80000
   15808:	bne	1584c <__assert_fail@plt+0x3db0>
   1580c:	movw	r0, #47195	; 0xb85b
   15810:	mov	r1, r2
   15814:	movt	r0, #1
   15818:	bl	1ad58 <lchmod@@Base+0x3ccc>
   1581c:	mov	r8, r0
   15820:	cmn	r0, #1
   15824:	bgt	15868 <__assert_fail@plt+0x3dcc>
   15828:	b	158b0 <__assert_fail@plt+0x3e14>
   1582c:	mov	r0, r9
   15830:	mov	r1, r4
   15834:	bl	14a68 <__assert_fail@plt+0x2fcc>
   15838:	mov	r5, r0
   1583c:	str	r0, [r9, #4]
   15840:	mov	r0, r5
   15844:	sub	sp, fp, #28
   15848:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1584c:	ldr	r0, [r9, #32]
   15850:	movw	r1, #47195	; 0xb85b
   15854:	movt	r1, #1
   15858:	bl	177b4 <lchmod@@Base+0x728>
   1585c:	mov	r8, r0
   15860:	cmn	r0, #1
   15864:	ble	158b0 <__assert_fail@plt+0x3e14>
   15868:	mov	r0, r9
   1586c:	mov	r1, r4
   15870:	bl	14a68 <__assert_fail@plt+0x2fcc>
   15874:	str	r0, [r9, #4]
   15878:	ldrb	r0, [r9, #49]	; 0x31
   1587c:	tst	r0, #2
   15880:	bne	158c4 <__assert_fail@plt+0x3e28>
   15884:	mov	r0, r8
   15888:	bl	119c4 <fchdir@plt>
   1588c:	cmp	r0, #0
   15890:	beq	15900 <__assert_fail@plt+0x3e64>
   15894:	ldr	r4, [sl]
   15898:	mov	r0, r8
   1589c:	bl	11a48 <close@plt>
   158a0:	str	r4, [sl]
   158a4:	mov	r0, r5
   158a8:	sub	sp, fp, #28
   158ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158b0:	mov	r5, #0
   158b4:	str	r5, [r9, #4]
   158b8:	mov	r0, r5
   158bc:	sub	sp, fp, #28
   158c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158c4:	ldr	r1, [r9, #32]
   158c8:	cmp	r1, r8
   158cc:	bne	158d8 <__assert_fail@plt+0x3e3c>
   158d0:	cmn	r1, #100	; 0x64
   158d4:	bne	15918 <__assert_fail@plt+0x3e7c>
   158d8:	add	r0, r9, #60	; 0x3c
   158dc:	bl	16fe8 <__assert_fail@plt+0x554c>
   158e0:	cmp	r0, #0
   158e4:	blt	158ec <__assert_fail@plt+0x3e50>
   158e8:	bl	11a48 <close@plt>
   158ec:	str	r8, [r9, #32]
   158f0:	ldr	r5, [r9, #4]
   158f4:	mov	r0, r5
   158f8:	sub	sp, fp, #28
   158fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15900:	mov	r0, r8
   15904:	bl	11a48 <close@plt>
   15908:	ldr	r5, [r9, #4]
   1590c:	mov	r0, r5
   15910:	sub	sp, fp, #28
   15914:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15918:	bl	11a3c <abort@plt>
   1591c:	push	{fp, lr}
   15920:	mov	fp, sp
   15924:	mov	r2, r1
   15928:	ldrd	r0, [r0, #8]
   1592c:	mov	r3, #0
   15930:	bl	1b0d8 <lchmod@@Base+0x404c>
   15934:	mov	r0, r2
   15938:	pop	{fp, pc}
   1593c:	push	{r4, r5, fp, lr}
   15940:	add	fp, sp, #8
   15944:	ldrd	r2, [r1, #8]
   15948:	ldrd	r4, [r0, #8]
   1594c:	eor	r3, r5, r3
   15950:	eor	r2, r4, r2
   15954:	orrs	r2, r2, r3
   15958:	mov	r2, #0
   1595c:	bne	1597c <__assert_fail@plt+0x3ee0>
   15960:	ldrd	r2, [r1]
   15964:	ldrd	r0, [r0]
   15968:	eor	r1, r1, r3
   1596c:	eor	r0, r0, r2
   15970:	orr	r0, r0, r1
   15974:	clz	r0, r0
   15978:	lsr	r2, r0, #5
   1597c:	mov	r0, r2
   15980:	pop	{r4, r5, fp, pc}
   15984:	push	{r4, r5, fp, lr}
   15988:	add	fp, sp, #8
   1598c:	ldr	r0, [r0]
   15990:	ldrd	r2, [r0, #160]	; 0xa0
   15994:	ldr	r0, [r1]
   15998:	ldrd	r4, [r0, #160]	; 0xa0
   1599c:	mov	r0, #0
   159a0:	subs	r1, r4, r2
   159a4:	sbcs	r1, r5, r3
   159a8:	movwcc	r0, #1
   159ac:	subs	r1, r2, r4
   159b0:	sbcs	r1, r3, r5
   159b4:	subcc	r0, r0, #1
   159b8:	pop	{r4, r5, fp, pc}
   159bc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   159c0:	add	fp, sp, #24
   159c4:	sub	sp, sp, #96	; 0x60
   159c8:	ldr	r7, [r0, #44]	; 0x2c
   159cc:	mov	r4, r0
   159d0:	mov	r5, #0
   159d4:	ldrb	r0, [r7, #49]	; 0x31
   159d8:	tst	r0, #2
   159dc:	beq	15a8c <__assert_fail@plt+0x3ff0>
   159e0:	ldr	r6, [r7, #52]	; 0x34
   159e4:	mov	r9, r1
   159e8:	cmp	r6, #0
   159ec:	bne	15a2c <__assert_fail@plt+0x3f90>
   159f0:	movw	r0, #13168	; 0x3370
   159f4:	movw	r2, #23288	; 0x5af8
   159f8:	movw	r3, #23320	; 0x5b18
   159fc:	mov	r1, #0
   15a00:	mov	r8, #0
   15a04:	movt	r0, #1
   15a08:	movt	r2, #1
   15a0c:	movt	r3, #1
   15a10:	str	r0, [sp]
   15a14:	mov	r0, #13
   15a18:	bl	15fd8 <__assert_fail@plt+0x453c>
   15a1c:	mov	r6, r0
   15a20:	cmp	r0, #0
   15a24:	str	r0, [r7, #52]	; 0x34
   15a28:	beq	15a6c <__assert_fail@plt+0x3fd0>
   15a2c:	ldrd	r0, [r4, #64]	; 0x40
   15a30:	str	r1, [sp, #12]
   15a34:	str	r0, [sp, #8]
   15a38:	add	r1, sp, #8
   15a3c:	mov	r0, r6
   15a40:	bl	15d10 <__assert_fail@plt+0x4274>
   15a44:	cmp	r0, #0
   15a48:	beq	15a5c <__assert_fail@plt+0x3fc0>
   15a4c:	ldr	r5, [r0, #8]
   15a50:	mov	r0, r5
   15a54:	sub	sp, fp, #24
   15a58:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15a5c:	mov	r8, #1
   15a60:	cmp	r9, #0
   15a64:	bge	15a78 <__assert_fail@plt+0x3fdc>
   15a68:	b	15a8c <__assert_fail@plt+0x3ff0>
   15a6c:	mov	r6, #0
   15a70:	cmp	r9, #0
   15a74:	blt	15a8c <__assert_fail@plt+0x3ff0>
   15a78:	add	r1, sp, #8
   15a7c:	mov	r0, r9
   15a80:	bl	11688 <fstatfs64@plt>
   15a84:	cmp	r0, #0
   15a88:	beq	15a98 <__assert_fail@plt+0x3ffc>
   15a8c:	mov	r0, r5
   15a90:	sub	sp, fp, #24
   15a94:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15a98:	cmp	r8, #0
   15a9c:	beq	15ae8 <__assert_fail@plt+0x404c>
   15aa0:	mov	r0, #16
   15aa4:	bl	1a848 <lchmod@@Base+0x37bc>
   15aa8:	cmp	r0, #0
   15aac:	beq	15ae8 <__assert_fail@plt+0x404c>
   15ab0:	mov	r5, r0
   15ab4:	ldrd	r0, [r4, #64]	; 0x40
   15ab8:	ldr	r2, [sp, #8]
   15abc:	stm	r5, {r0, r1, r2}
   15ac0:	mov	r0, r6
   15ac4:	mov	r1, r5
   15ac8:	bl	16c10 <__assert_fail@plt+0x5174>
   15acc:	cmp	r0, #0
   15ad0:	beq	15ae0 <__assert_fail@plt+0x4044>
   15ad4:	cmp	r0, r5
   15ad8:	beq	15ae8 <__assert_fail@plt+0x404c>
   15adc:	bl	11a3c <abort@plt>
   15ae0:	mov	r0, r5
   15ae4:	bl	13370 <__assert_fail@plt+0x18d4>
   15ae8:	ldr	r5, [sp, #8]
   15aec:	mov	r0, r5
   15af0:	sub	sp, fp, #24
   15af4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15af8:	push	{fp, lr}
   15afc:	mov	fp, sp
   15b00:	mov	r2, r1
   15b04:	ldrd	r0, [r0]
   15b08:	mov	r3, #0
   15b0c:	bl	1b0d8 <lchmod@@Base+0x404c>
   15b10:	mov	r0, r2
   15b14:	pop	{fp, pc}
   15b18:	ldrd	r2, [r1]
   15b1c:	ldrd	r0, [r0]
   15b20:	eor	r1, r1, r3
   15b24:	eor	r0, r0, r2
   15b28:	orr	r0, r0, r1
   15b2c:	clz	r0, r0
   15b30:	lsr	r0, r0, #5
   15b34:	bx	lr
   15b38:	ldr	r0, [r0, #8]
   15b3c:	bx	lr
   15b40:	ldr	r0, [r0, #12]
   15b44:	bx	lr
   15b48:	ldr	r0, [r0, #16]
   15b4c:	bx	lr
   15b50:	ldm	r0, {r2, ip}
   15b54:	mov	r0, #0
   15b58:	cmp	r2, ip
   15b5c:	bxcs	lr
   15b60:	mov	r0, #0
   15b64:	ldr	r1, [r2]
   15b68:	cmp	r1, #0
   15b6c:	beq	15b90 <__assert_fail@plt+0x40f4>
   15b70:	mov	r3, #0
   15b74:	mov	r1, r2
   15b78:	ldr	r1, [r1, #4]
   15b7c:	add	r3, r3, #1
   15b80:	cmp	r1, #0
   15b84:	bne	15b78 <__assert_fail@plt+0x40dc>
   15b88:	cmp	r3, r0
   15b8c:	movhi	r0, r3
   15b90:	add	r2, r2, #8
   15b94:	cmp	r2, ip
   15b98:	bcc	15b64 <__assert_fail@plt+0x40c8>
   15b9c:	bx	lr
   15ba0:	push	{fp, lr}
   15ba4:	mov	fp, sp
   15ba8:	ldm	r0, {r3, ip}
   15bac:	mov	lr, #0
   15bb0:	mov	r1, #0
   15bb4:	cmp	r3, ip
   15bb8:	bcs	15bf4 <__assert_fail@plt+0x4158>
   15bbc:	mov	r1, #0
   15bc0:	mov	lr, #0
   15bc4:	ldr	r2, [r3]
   15bc8:	cmp	r2, #0
   15bcc:	beq	15be8 <__assert_fail@plt+0x414c>
   15bd0:	mov	r2, r3
   15bd4:	ldr	r2, [r2, #4]
   15bd8:	add	r1, r1, #1
   15bdc:	cmp	r2, #0
   15be0:	bne	15bd4 <__assert_fail@plt+0x4138>
   15be4:	add	lr, lr, #1
   15be8:	add	r3, r3, #8
   15bec:	cmp	r3, ip
   15bf0:	bcc	15bc4 <__assert_fail@plt+0x4128>
   15bf4:	ldr	r2, [r0, #12]
   15bf8:	cmp	lr, r2
   15bfc:	bne	15c14 <__assert_fail@plt+0x4178>
   15c00:	ldr	r2, [r0, #16]
   15c04:	mov	r0, #1
   15c08:	cmp	r1, r2
   15c0c:	movne	r0, #0
   15c10:	pop	{fp, pc}
   15c14:	mov	r0, #0
   15c18:	pop	{fp, pc}
   15c1c:	nop	{0}
   15c20:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15c24:	add	fp, sp, #24
   15c28:	sub	sp, sp, #8
   15c2c:	ldr	r6, [r0]
   15c30:	ldmib	r0, {r2, r7, r8}
   15c34:	ldr	r3, [r0, #16]
   15c38:	mov	r4, r1
   15c3c:	mov	r5, #0
   15c40:	cmp	r6, r2
   15c44:	bcs	15c84 <__assert_fail@plt+0x41e8>
   15c48:	mov	r5, #0
   15c4c:	ldr	r0, [r6]
   15c50:	cmp	r0, #0
   15c54:	beq	15c78 <__assert_fail@plt+0x41dc>
   15c58:	mov	r0, #0
   15c5c:	mov	r1, r6
   15c60:	ldr	r1, [r1, #4]
   15c64:	add	r0, r0, #1
   15c68:	cmp	r1, #0
   15c6c:	bne	15c60 <__assert_fail@plt+0x41c4>
   15c70:	cmp	r0, r5
   15c74:	movhi	r5, r0
   15c78:	add	r6, r6, #8
   15c7c:	cmp	r6, r2
   15c80:	bcc	15c4c <__assert_fail@plt+0x41b0>
   15c84:	movw	r2, #47248	; 0xb890
   15c88:	mov	r0, r4
   15c8c:	mov	r1, #1
   15c90:	movt	r2, #1
   15c94:	bl	11934 <__fprintf_chk@plt>
   15c98:	movw	r2, #47272	; 0xb8a8
   15c9c:	mov	r0, r4
   15ca0:	mov	r1, #1
   15ca4:	mov	r3, r7
   15ca8:	movt	r2, #1
   15cac:	bl	11934 <__fprintf_chk@plt>
   15cb0:	vldr	d16, [pc, #80]	; 15d08 <__assert_fail@plt+0x426c>
   15cb4:	vmov	s0, r8
   15cb8:	movw	r2, #47296	; 0xb8c0
   15cbc:	mov	r0, r4
   15cc0:	mov	r1, #1
   15cc4:	mov	r3, r8
   15cc8:	vcvt.f64.u32	d17, s0
   15ccc:	vmov	s0, r7
   15cd0:	movt	r2, #1
   15cd4:	vcvt.f64.u32	d18, s0
   15cd8:	vmul.f64	d16, d17, d16
   15cdc:	vdiv.f64	d16, d16, d18
   15ce0:	vstr	d16, [sp]
   15ce4:	bl	11934 <__fprintf_chk@plt>
   15ce8:	movw	r2, #47329	; 0xb8e1
   15cec:	mov	r0, r4
   15cf0:	mov	r1, #1
   15cf4:	mov	r3, r5
   15cf8:	movt	r2, #1
   15cfc:	sub	sp, fp, #24
   15d00:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15d04:	b	11934 <__fprintf_chk@plt>
   15d08:	andeq	r0, r0, r0
   15d0c:	subsmi	r0, r9, r0
   15d10:	push	{r4, r5, r6, r7, fp, lr}
   15d14:	add	fp, sp, #16
   15d18:	mov	r4, r1
   15d1c:	ldr	r1, [r0, #8]
   15d20:	ldr	r2, [r0, #24]
   15d24:	mov	r5, r0
   15d28:	mov	r0, r4
   15d2c:	blx	r2
   15d30:	ldr	r1, [r5, #8]
   15d34:	cmp	r0, r1
   15d38:	bcs	15da4 <__assert_fail@plt+0x4308>
   15d3c:	ldr	r7, [r5]
   15d40:	mov	r6, #0
   15d44:	ldr	r1, [r7, r0, lsl #3]!
   15d48:	cmp	r1, #0
   15d4c:	cmpne	r7, #0
   15d50:	bne	15d60 <__assert_fail@plt+0x42c4>
   15d54:	mov	r0, r6
   15d58:	pop	{r4, r5, r6, r7, fp, pc}
   15d5c:	ldr	r1, [r7]
   15d60:	cmp	r1, r4
   15d64:	beq	15d8c <__assert_fail@plt+0x42f0>
   15d68:	ldr	r2, [r5, #28]
   15d6c:	mov	r0, r4
   15d70:	blx	r2
   15d74:	cmp	r0, #0
   15d78:	bne	15d98 <__assert_fail@plt+0x42fc>
   15d7c:	ldr	r7, [r7, #4]
   15d80:	cmp	r7, #0
   15d84:	bne	15d5c <__assert_fail@plt+0x42c0>
   15d88:	b	15d54 <__assert_fail@plt+0x42b8>
   15d8c:	mov	r6, r4
   15d90:	mov	r0, r6
   15d94:	pop	{r4, r5, r6, r7, fp, pc}
   15d98:	ldr	r6, [r7]
   15d9c:	mov	r0, r6
   15da0:	pop	{r4, r5, r6, r7, fp, pc}
   15da4:	bl	11a3c <abort@plt>
   15da8:	ldr	r1, [r0, #16]
   15dac:	cmp	r1, #0
   15db0:	moveq	r0, #0
   15db4:	bxeq	lr
   15db8:	ldm	r0, {r1, r2}
   15dbc:	cmp	r1, r2
   15dc0:	bcs	15dd8 <__assert_fail@plt+0x433c>
   15dc4:	ldr	r0, [r1], #8
   15dc8:	cmp	r0, #0
   15dcc:	bxne	lr
   15dd0:	cmp	r1, r2
   15dd4:	bcc	15dc4 <__assert_fail@plt+0x4328>
   15dd8:	push	{fp, lr}
   15ddc:	mov	fp, sp
   15de0:	bl	11a3c <abort@plt>
   15de4:	push	{r4, r5, fp, lr}
   15de8:	add	fp, sp, #8
   15dec:	mov	r5, r1
   15df0:	ldr	r1, [r0, #8]
   15df4:	ldr	r2, [r0, #24]
   15df8:	mov	r4, r0
   15dfc:	mov	r0, r5
   15e00:	blx	r2
   15e04:	ldr	r1, [r4, #8]
   15e08:	cmp	r0, r1
   15e0c:	bcs	15e68 <__assert_fail@plt+0x43cc>
   15e10:	ldr	r1, [r4]
   15e14:	add	r2, r1, r0, lsl #3
   15e18:	ldr	r3, [r2]
   15e1c:	ldr	r2, [r2, #4]
   15e20:	cmp	r3, r5
   15e24:	beq	15e34 <__assert_fail@plt+0x4398>
   15e28:	cmp	r2, #0
   15e2c:	bne	15e18 <__assert_fail@plt+0x437c>
   15e30:	b	15e40 <__assert_fail@plt+0x43a4>
   15e34:	cmp	r2, #0
   15e38:	ldrne	r0, [r2]
   15e3c:	popne	{r4, r5, fp, pc}
   15e40:	ldr	r2, [r4, #4]
   15e44:	add	r0, r1, r0, lsl #3
   15e48:	add	r1, r0, #8
   15e4c:	cmp	r1, r2
   15e50:	movcs	r0, #0
   15e54:	popcs	{r4, r5, fp, pc}
   15e58:	ldr	r0, [r1], #8
   15e5c:	cmp	r0, #0
   15e60:	popne	{r4, r5, fp, pc}
   15e64:	b	15e4c <__assert_fail@plt+0x43b0>
   15e68:	bl	11a3c <abort@plt>
   15e6c:	push	{r4, r5, fp, lr}
   15e70:	add	fp, sp, #8
   15e74:	ldm	r0, {r5, lr}
   15e78:	mov	ip, r0
   15e7c:	mov	r0, #0
   15e80:	cmp	r5, lr
   15e84:	bcs	15ee0 <__assert_fail@plt+0x4444>
   15e88:	mov	r0, #0
   15e8c:	ldr	r3, [r5]
   15e90:	cmp	r3, #0
   15e94:	cmpne	r5, #0
   15e98:	bne	15eac <__assert_fail@plt+0x4410>
   15e9c:	add	r5, r5, #8
   15ea0:	cmp	r5, lr
   15ea4:	bcc	15e8c <__assert_fail@plt+0x43f0>
   15ea8:	b	15ee0 <__assert_fail@plt+0x4444>
   15eac:	mov	r3, r5
   15eb0:	cmp	r0, r2
   15eb4:	popcs	{r4, r5, fp, pc}
   15eb8:	ldr	r4, [r3]
   15ebc:	str	r4, [r1, r0, lsl #2]
   15ec0:	add	r0, r0, #1
   15ec4:	ldr	r3, [r3, #4]
   15ec8:	cmp	r3, #0
   15ecc:	bne	15eb0 <__assert_fail@plt+0x4414>
   15ed0:	ldr	lr, [ip, #4]
   15ed4:	add	r5, r5, #8
   15ed8:	cmp	r5, lr
   15edc:	bcc	15e8c <__assert_fail@plt+0x43f0>
   15ee0:	pop	{r4, r5, fp, pc}
   15ee4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15ee8:	add	fp, sp, #24
   15eec:	mov	r5, r1
   15ef0:	ldr	r4, [r0]
   15ef4:	ldr	r1, [r0, #4]
   15ef8:	mov	r6, #0
   15efc:	cmp	r4, r1
   15f00:	bcs	15f7c <__assert_fail@plt+0x44e0>
   15f04:	mov	r9, r2
   15f08:	mov	r8, r0
   15f0c:	mov	r6, #0
   15f10:	ldr	r0, [r4]
   15f14:	cmp	r0, #0
   15f18:	cmpne	r4, #0
   15f1c:	bne	15f30 <__assert_fail@plt+0x4494>
   15f20:	add	r4, r4, #8
   15f24:	cmp	r4, r1
   15f28:	bcc	15f10 <__assert_fail@plt+0x4474>
   15f2c:	b	15f7c <__assert_fail@plt+0x44e0>
   15f30:	mov	r1, r9
   15f34:	blx	r5
   15f38:	cmp	r0, #0
   15f3c:	beq	15f7c <__assert_fail@plt+0x44e0>
   15f40:	mov	r7, r4
   15f44:	ldr	r7, [r7, #4]
   15f48:	add	r6, r6, #1
   15f4c:	cmp	r7, #0
   15f50:	beq	15f6c <__assert_fail@plt+0x44d0>
   15f54:	ldr	r0, [r7]
   15f58:	mov	r1, r9
   15f5c:	blx	r5
   15f60:	cmp	r0, #0
   15f64:	bne	15f44 <__assert_fail@plt+0x44a8>
   15f68:	b	15f7c <__assert_fail@plt+0x44e0>
   15f6c:	ldr	r1, [r8, #4]
   15f70:	add	r4, r4, #8
   15f74:	cmp	r4, r1
   15f78:	bcc	15f10 <__assert_fail@plt+0x4474>
   15f7c:	mov	r0, r6
   15f80:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15f84:	ldrb	r2, [r0]
   15f88:	cmp	r2, #0
   15f8c:	moveq	r0, #0
   15f90:	bxeq	lr
   15f94:	add	r3, r0, #1
   15f98:	mov	r0, #0
   15f9c:	rsb	r0, r0, r0, lsl #5
   15fa0:	uxtab	r0, r0, r2
   15fa4:	udiv	r2, r0, r1
   15fa8:	mls	r0, r2, r1, r0
   15fac:	ldrb	r2, [r3], #1
   15fb0:	cmp	r2, #0
   15fb4:	bne	15f9c <__assert_fail@plt+0x4500>
   15fb8:	bx	lr
   15fbc:	movw	r1, #47360	; 0xb900
   15fc0:	movt	r1, #1
   15fc4:	vld1.32	{d16-d17}, [r1]!
   15fc8:	ldr	r1, [r1]
   15fcc:	vst1.32	{d16-d17}, [r0]!
   15fd0:	str	r1, [r0]
   15fd4:	bx	lr
   15fd8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15fdc:	add	fp, sp, #24
   15fe0:	movw	r9, #25124	; 0x6224
   15fe4:	movw	r5, #25104	; 0x6210
   15fe8:	cmp	r3, #0
   15fec:	mov	r6, r0
   15ff0:	mov	r0, #40	; 0x28
   15ff4:	mov	r7, r1
   15ff8:	movt	r9, #1
   15ffc:	movt	r5, #1
   16000:	movne	r9, r3
   16004:	cmp	r2, #0
   16008:	movne	r5, r2
   1600c:	bl	1a848 <lchmod@@Base+0x37bc>
   16010:	mov	r8, #0
   16014:	cmp	r0, #0
   16018:	beq	161f8 <__assert_fail@plt+0x475c>
   1601c:	mov	r4, r0
   16020:	cmp	r7, #0
   16024:	beq	160d4 <__assert_fail@plt+0x4638>
   16028:	movw	r0, #47360	; 0xb900
   1602c:	str	r7, [r4, #20]
   16030:	movt	r0, #1
   16034:	cmp	r7, r0
   16038:	beq	160e0 <__assert_fail@plt+0x4644>
   1603c:	vldr	s2, [pc, #444]	; 16200 <__assert_fail@plt+0x4764>
   16040:	vldr	s0, [r7, #8]
   16044:	vcmpe.f32	s0, s2
   16048:	vmrs	APSR_nzcv, fpscr
   1604c:	ble	160b8 <__assert_fail@plt+0x461c>
   16050:	vldr	s4, [pc, #428]	; 16204 <__assert_fail@plt+0x4768>
   16054:	vcmpe.f32	s0, s4
   16058:	vmrs	APSR_nzcv, fpscr
   1605c:	bpl	160b8 <__assert_fail@plt+0x461c>
   16060:	vldr	s4, [pc, #416]	; 16208 <__assert_fail@plt+0x476c>
   16064:	vldr	s6, [r7, #12]
   16068:	vcmpe.f32	s6, s4
   1606c:	vmrs	APSR_nzcv, fpscr
   16070:	ble	160b8 <__assert_fail@plt+0x461c>
   16074:	vldr	s4, [r7]
   16078:	vcmpe.f32	s4, #0.0
   1607c:	vmrs	APSR_nzcv, fpscr
   16080:	blt	160b8 <__assert_fail@plt+0x461c>
   16084:	vadd.f32	s2, s4, s2
   16088:	vcmpe.f32	s2, s0
   1608c:	vmrs	APSR_nzcv, fpscr
   16090:	bpl	160b8 <__assert_fail@plt+0x461c>
   16094:	vldr	s0, [r7, #4]
   16098:	vmov.f32	s4, #112	; 0x3f800000  1.0
   1609c:	vcmpe.f32	s0, s4
   160a0:	vmrs	APSR_nzcv, fpscr
   160a4:	bhi	160b8 <__assert_fail@plt+0x461c>
   160a8:	vcmpe.f32	s2, s0
   160ac:	mov	r0, r7
   160b0:	vmrs	APSR_nzcv, fpscr
   160b4:	bmi	160e0 <__assert_fail@plt+0x4644>
   160b8:	movw	r0, #47360	; 0xb900
   160bc:	movt	r0, #1
   160c0:	str	r0, [r4, #20]
   160c4:	mov	r0, r4
   160c8:	bl	13370 <__assert_fail@plt+0x18d4>
   160cc:	mov	r0, r8
   160d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   160d4:	movw	r0, #47360	; 0xb900
   160d8:	movt	r0, #1
   160dc:	str	r0, [r4, #20]
   160e0:	ldrb	r1, [r0, #16]
   160e4:	cmp	r1, #0
   160e8:	bne	16114 <__assert_fail@plt+0x4678>
   160ec:	vldr	s0, [r0, #8]
   160f0:	vldr	s4, [pc, #276]	; 1620c <__assert_fail@plt+0x4770>
   160f4:	vmov	s2, r6
   160f8:	vcvt.f32.u32	s2, s2
   160fc:	vdiv.f32	s2, s2, s0
   16100:	vcmpe.f32	s2, s4
   16104:	vcvt.u32.f32	s0, s2
   16108:	vmrs	APSR_nzcv, fpscr
   1610c:	bge	16194 <__assert_fail@plt+0x46f8>
   16110:	vmov	r6, s0
   16114:	cmp	r6, #10
   16118:	movls	r6, #10
   1611c:	orr	r0, r6, #1
   16120:	cmn	r0, #1
   16124:	beq	16194 <__assert_fail@plt+0x46f8>
   16128:	ldr	r6, [fp, #8]
   1612c:	mov	r1, #3
   16130:	cmp	r0, #10
   16134:	bcc	1616c <__assert_fail@plt+0x46d0>
   16138:	mov	r1, #3
   1613c:	mov	r3, #9
   16140:	mov	r2, #12
   16144:	udiv	r7, r0, r1
   16148:	mls	r7, r7, r1, r0
   1614c:	cmp	r7, #0
   16150:	beq	1616c <__assert_fail@plt+0x46d0>
   16154:	add	r3, r3, r2
   16158:	add	r2, r2, #8
   1615c:	add	r1, r1, #2
   16160:	add	r3, r3, #4
   16164:	cmp	r3, r0
   16168:	bcc	16144 <__assert_fail@plt+0x46a8>
   1616c:	udiv	r2, r0, r1
   16170:	mls	r1, r2, r1, r0
   16174:	cmp	r1, #0
   16178:	bne	1618c <__assert_fail@plt+0x46f0>
   1617c:	add	r0, r0, #2
   16180:	cmn	r0, #1
   16184:	bne	1612c <__assert_fail@plt+0x4690>
   16188:	b	16194 <__assert_fail@plt+0x46f8>
   1618c:	cmp	r0, #536870912	; 0x20000000
   16190:	bcc	161ac <__assert_fail@plt+0x4710>
   16194:	mov	r0, #0
   16198:	str	r0, [r4, #8]
   1619c:	mov	r0, r4
   161a0:	bl	13370 <__assert_fail@plt+0x18d4>
   161a4:	mov	r0, r8
   161a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   161ac:	cmp	r0, #0
   161b0:	str	r0, [r4, #8]
   161b4:	beq	1619c <__assert_fail@plt+0x4700>
   161b8:	mov	r1, #8
   161bc:	bl	1a7f4 <lchmod@@Base+0x3768>
   161c0:	cmp	r0, #0
   161c4:	str	r0, [r4]
   161c8:	beq	1619c <__assert_fail@plt+0x4700>
   161cc:	mov	r1, #0
   161d0:	mov	r8, r4
   161d4:	str	r1, [r4, #12]
   161d8:	str	r1, [r4, #16]
   161dc:	str	r5, [r4, #24]
   161e0:	str	r9, [r4, #28]
   161e4:	str	r6, [r4, #32]
   161e8:	str	r1, [r4, #36]	; 0x24
   161ec:	ldr	r1, [r4, #8]
   161f0:	add	r0, r0, r1, lsl #3
   161f4:	str	r0, [r4, #4]
   161f8:	mov	r0, r8
   161fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16200:	stclcc	12, cr12, [ip, #820]	; 0x334
   16204:	svccc	0x00666666
   16208:	svccc	0x008ccccd
   1620c:	svcmi	0x00800000
   16210:	ror	r2, r0, #3
   16214:	udiv	r2, r2, r1
   16218:	mul	r1, r2, r1
   1621c:	rsb	r0, r1, r0, ror #3
   16220:	bx	lr
   16224:	sub	r0, r0, r1
   16228:	clz	r0, r0
   1622c:	lsr	r0, r0, #5
   16230:	bx	lr
   16234:	push	{r4, r5, r6, r7, fp, lr}
   16238:	add	fp, sp, #16
   1623c:	mov	r4, r0
   16240:	ldr	r5, [r0]
   16244:	ldr	r0, [r0, #4]
   16248:	cmp	r5, r0
   1624c:	bcs	162e4 <__assert_fail@plt+0x4848>
   16250:	mov	r6, #0
   16254:	ldr	r1, [r5]
   16258:	cmp	r1, #0
   1625c:	beq	162d8 <__assert_fail@plt+0x483c>
   16260:	ldr	r1, [r4, #32]
   16264:	ldr	r7, [r5, #4]
   16268:	cmp	r1, #0
   1626c:	mov	r0, r1
   16270:	movwne	r0, #1
   16274:	cmp	r7, #0
   16278:	beq	162bc <__assert_fail@plt+0x4820>
   1627c:	tst	r0, #1
   16280:	beq	16290 <__assert_fail@plt+0x47f4>
   16284:	ldr	r0, [r7]
   16288:	blx	r1
   1628c:	ldr	r1, [r4, #32]
   16290:	str	r6, [r7]
   16294:	cmp	r1, #0
   16298:	ldr	r0, [r4, #36]	; 0x24
   1629c:	ldr	r2, [r7, #4]
   162a0:	str	r0, [r7, #4]
   162a4:	mov	r0, r1
   162a8:	str	r7, [r4, #36]	; 0x24
   162ac:	mov	r7, r2
   162b0:	movwne	r0, #1
   162b4:	cmp	r2, #0
   162b8:	bne	1627c <__assert_fail@plt+0x47e0>
   162bc:	cmp	r0, #0
   162c0:	beq	162cc <__assert_fail@plt+0x4830>
   162c4:	ldr	r0, [r5]
   162c8:	blx	r1
   162cc:	str	r6, [r5]
   162d0:	str	r6, [r5, #4]
   162d4:	ldr	r0, [r4, #4]
   162d8:	add	r5, r5, #8
   162dc:	cmp	r5, r0
   162e0:	bcc	16254 <__assert_fail@plt+0x47b8>
   162e4:	mov	r0, #0
   162e8:	str	r0, [r4, #12]
   162ec:	str	r0, [r4, #16]
   162f0:	pop	{r4, r5, r6, r7, fp, pc}
   162f4:	push	{r4, r5, r6, sl, fp, lr}
   162f8:	add	fp, sp, #16
   162fc:	mov	r4, r0
   16300:	ldr	r0, [r0, #32]
   16304:	cmp	r0, #0
   16308:	ldrne	r0, [r4, #16]
   1630c:	cmpne	r0, #0
   16310:	beq	16378 <__assert_fail@plt+0x48dc>
   16314:	ldr	r5, [r4]
   16318:	ldr	r1, [r4, #4]
   1631c:	cmp	r5, r1
   16320:	bcc	16334 <__assert_fail@plt+0x4898>
   16324:	b	16378 <__assert_fail@plt+0x48dc>
   16328:	add	r5, r5, #8
   1632c:	cmp	r5, r1
   16330:	bcs	16378 <__assert_fail@plt+0x48dc>
   16334:	ldr	r0, [r5]
   16338:	cmp	r0, #0
   1633c:	cmpne	r5, #0
   16340:	beq	16328 <__assert_fail@plt+0x488c>
   16344:	ldr	r1, [r4, #32]
   16348:	blx	r1
   1634c:	ldr	r6, [r5, #4]
   16350:	cmp	r6, #0
   16354:	beq	16370 <__assert_fail@plt+0x48d4>
   16358:	ldr	r1, [r4, #32]
   1635c:	ldr	r0, [r6]
   16360:	blx	r1
   16364:	ldr	r6, [r6, #4]
   16368:	cmp	r6, #0
   1636c:	bne	16358 <__assert_fail@plt+0x48bc>
   16370:	ldr	r1, [r4, #4]
   16374:	b	16328 <__assert_fail@plt+0x488c>
   16378:	ldr	r5, [r4]
   1637c:	ldr	r1, [r4, #4]
   16380:	cmp	r5, r1
   16384:	bcc	16398 <__assert_fail@plt+0x48fc>
   16388:	b	163c0 <__assert_fail@plt+0x4924>
   1638c:	add	r5, r5, #8
   16390:	cmp	r5, r1
   16394:	bcs	163c0 <__assert_fail@plt+0x4924>
   16398:	ldr	r0, [r5, #4]
   1639c:	cmp	r0, #0
   163a0:	beq	1638c <__assert_fail@plt+0x48f0>
   163a4:	ldr	r6, [r0, #4]
   163a8:	bl	13370 <__assert_fail@plt+0x18d4>
   163ac:	cmp	r6, #0
   163b0:	mov	r0, r6
   163b4:	bne	163a4 <__assert_fail@plt+0x4908>
   163b8:	ldr	r1, [r4, #4]
   163bc:	b	1638c <__assert_fail@plt+0x48f0>
   163c0:	ldr	r0, [r4, #36]	; 0x24
   163c4:	cmp	r0, #0
   163c8:	beq	163e0 <__assert_fail@plt+0x4944>
   163cc:	ldr	r5, [r0, #4]
   163d0:	bl	13370 <__assert_fail@plt+0x18d4>
   163d4:	cmp	r5, #0
   163d8:	mov	r0, r5
   163dc:	bne	163cc <__assert_fail@plt+0x4930>
   163e0:	ldr	r0, [r4]
   163e4:	bl	13370 <__assert_fail@plt+0x18d4>
   163e8:	mov	r0, r4
   163ec:	pop	{r4, r5, r6, sl, fp, lr}
   163f0:	b	13370 <__assert_fail@plt+0x18d4>
   163f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   163f8:	add	fp, sp, #28
   163fc:	sub	sp, sp, #44	; 0x2c
   16400:	mov	r7, r0
   16404:	mov	r4, r0
   16408:	ldr	r0, [r7, #20]!
   1640c:	ldrb	r2, [r0, #16]
   16410:	cmp	r2, #0
   16414:	bne	16444 <__assert_fail@plt+0x49a8>
   16418:	vldr	s0, [r0, #8]
   1641c:	vldr	s4, [pc, #576]	; 16664 <__assert_fail@plt+0x4bc8>
   16420:	vmov	s2, r1
   16424:	mov	r5, #0
   16428:	vcvt.f32.u32	s2, s2
   1642c:	vdiv.f32	s2, s2, s0
   16430:	vcmpe.f32	s2, s4
   16434:	vcvt.u32.f32	s0, s2
   16438:	vmrs	APSR_nzcv, fpscr
   1643c:	bge	16568 <__assert_fail@plt+0x4acc>
   16440:	vmov	r1, s0
   16444:	cmp	r1, #10
   16448:	mov	r5, #0
   1644c:	movls	r1, #10
   16450:	orr	r6, r1, #1
   16454:	cmn	r6, #1
   16458:	bne	1646c <__assert_fail@plt+0x49d0>
   1645c:	b	16568 <__assert_fail@plt+0x4acc>
   16460:	add	r6, r6, #2
   16464:	cmn	r6, #1
   16468:	beq	16568 <__assert_fail@plt+0x4acc>
   1646c:	mov	r0, #3
   16470:	cmp	r6, #10
   16474:	bcc	164ac <__assert_fail@plt+0x4a10>
   16478:	mov	r0, #3
   1647c:	mov	r2, #9
   16480:	mov	r1, #12
   16484:	udiv	r3, r6, r0
   16488:	mls	r3, r3, r0, r6
   1648c:	cmp	r3, #0
   16490:	beq	164ac <__assert_fail@plt+0x4a10>
   16494:	add	r2, r2, r1
   16498:	add	r1, r1, #8
   1649c:	add	r0, r0, #2
   164a0:	add	r2, r2, #4
   164a4:	cmp	r2, r6
   164a8:	bcc	16484 <__assert_fail@plt+0x49e8>
   164ac:	udiv	r1, r6, r0
   164b0:	mls	r0, r1, r0, r6
   164b4:	cmp	r0, #0
   164b8:	beq	16460 <__assert_fail@plt+0x49c4>
   164bc:	sub	r0, r6, #1
   164c0:	cmn	r0, #-536870910	; 0xe0000002
   164c4:	bhi	16568 <__assert_fail@plt+0x4acc>
   164c8:	ldr	r0, [r4, #8]
   164cc:	cmp	r6, r0
   164d0:	bne	164e4 <__assert_fail@plt+0x4a48>
   164d4:	mov	r5, #1
   164d8:	mov	r0, r5
   164dc:	sub	sp, fp, #28
   164e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   164e4:	mov	r0, r6
   164e8:	mov	r1, #8
   164ec:	bl	1a7f4 <lchmod@@Base+0x3768>
   164f0:	cmp	r0, #0
   164f4:	str	r0, [sp, #4]
   164f8:	beq	16568 <__assert_fail@plt+0x4acc>
   164fc:	mov	r1, #0
   16500:	add	r0, r0, r6, lsl #3
   16504:	str	r6, [sp, #12]
   16508:	add	r5, sp, #4
   1650c:	mov	sl, r4
   16510:	mov	r2, #0
   16514:	str	r1, [sp, #16]
   16518:	str	r1, [sp, #20]
   1651c:	str	r0, [sp, #8]
   16520:	add	r0, r5, #20
   16524:	mov	r1, r4
   16528:	vld1.32	{d16-d17}, [r7]
   1652c:	vst1.32	{d16-d17}, [r0]
   16530:	ldr	r0, [sl, #36]!	; 0x24
   16534:	str	r0, [sp, #40]	; 0x28
   16538:	mov	r0, r5
   1653c:	bl	16668 <__assert_fail@plt+0x4bcc>
   16540:	cmp	r0, #0
   16544:	beq	16574 <__assert_fail@plt+0x4ad8>
   16548:	ldr	r0, [r4]
   1654c:	bl	13370 <__assert_fail@plt+0x18d4>
   16550:	mov	r0, #36	; 0x24
   16554:	vld1.32	{d16-d17}, [r5], r0
   16558:	vst1.32	{d16-d17}, [r4], r0
   1655c:	ldr	r0, [r5]
   16560:	mov	r5, #1
   16564:	str	r0, [r4]
   16568:	mov	r0, r5
   1656c:	sub	sp, fp, #28
   16570:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16574:	ldr	r0, [sp, #40]	; 0x28
   16578:	str	r0, [sl]
   1657c:	ldr	r0, [sp, #8]
   16580:	ldr	r8, [sp, #4]
   16584:	cmp	r8, r0
   16588:	str	r0, [sp]
   1658c:	bcs	16630 <__assert_fail@plt+0x4b94>
   16590:	mov	r9, #0
   16594:	ldr	r0, [r8]
   16598:	cmp	r0, #0
   1659c:	beq	16620 <__assert_fail@plt+0x4b84>
   165a0:	ldr	r6, [r8, #4]
   165a4:	cmp	r6, #0
   165a8:	beq	1661c <__assert_fail@plt+0x4b80>
   165ac:	ldr	r1, [r4, #8]
   165b0:	ldr	r5, [r6]
   165b4:	ldr	r2, [r4, #24]
   165b8:	mov	r0, r5
   165bc:	blx	r2
   165c0:	ldr	r1, [r4, #8]
   165c4:	cmp	r0, r1
   165c8:	bcs	16660 <__assert_fail@plt+0x4bc4>
   165cc:	ldr	r3, [r4]
   165d0:	ldr	r2, [r6, #4]
   165d4:	ldr	r7, [r3, r0, lsl #3]
   165d8:	cmp	r7, #0
   165dc:	beq	165ec <__assert_fail@plt+0x4b50>
   165e0:	add	r0, r3, r0, lsl #3
   165e4:	add	r0, r0, #4
   165e8:	b	16604 <__assert_fail@plt+0x4b68>
   165ec:	str	r5, [r3, r0, lsl #3]
   165f0:	ldr	r0, [r4, #12]
   165f4:	add	r0, r0, #1
   165f8:	str	r0, [r4, #12]
   165fc:	mov	r0, sl
   16600:	str	r9, [r6]
   16604:	ldr	r3, [r0]
   16608:	cmp	r2, #0
   1660c:	str	r3, [r6, #4]
   16610:	str	r6, [r0]
   16614:	mov	r6, r2
   16618:	bne	165b0 <__assert_fail@plt+0x4b14>
   1661c:	str	r9, [r8, #4]
   16620:	ldr	r0, [sp]
   16624:	add	r8, r8, #8
   16628:	cmp	r8, r0
   1662c:	bcc	16594 <__assert_fail@plt+0x4af8>
   16630:	add	r1, sp, #4
   16634:	mov	r0, r4
   16638:	mov	r2, #0
   1663c:	mov	r5, #0
   16640:	bl	16668 <__assert_fail@plt+0x4bcc>
   16644:	cmp	r0, #0
   16648:	beq	16660 <__assert_fail@plt+0x4bc4>
   1664c:	ldr	r0, [sp, #4]
   16650:	bl	13370 <__assert_fail@plt+0x18d4>
   16654:	mov	r0, r5
   16658:	sub	sp, fp, #28
   1665c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16660:	bl	11a3c <abort@plt>
   16664:	svcmi	0x00800000
   16668:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1666c:	add	fp, sp, #28
   16670:	sub	sp, sp, #4
   16674:	ldr	r8, [r1]
   16678:	ldr	r3, [r1, #4]
   1667c:	mov	r6, r0
   16680:	mov	r0, #1
   16684:	str	r1, [sp]
   16688:	cmp	r8, r3
   1668c:	bcs	1688c <__assert_fail@plt+0x4df0>
   16690:	add	r9, r6, #36	; 0x24
   16694:	cmp	r2, #0
   16698:	beq	16744 <__assert_fail@plt+0x4ca8>
   1669c:	mov	sl, #0
   166a0:	ldr	r1, [r8]
   166a4:	cmp	r1, #0
   166a8:	beq	16734 <__assert_fail@plt+0x4c98>
   166ac:	ldr	r7, [r8, #4]
   166b0:	cmp	r7, #0
   166b4:	beq	16730 <__assert_fail@plt+0x4c94>
   166b8:	ldr	r1, [r6, #8]
   166bc:	ldr	r4, [r7]
   166c0:	ldr	r2, [r6, #24]
   166c4:	mov	r0, r4
   166c8:	blx	r2
   166cc:	ldr	r1, [r6, #8]
   166d0:	cmp	r0, r1
   166d4:	bcs	168a0 <__assert_fail@plt+0x4e04>
   166d8:	ldr	r3, [r6]
   166dc:	ldr	r2, [r7, #4]
   166e0:	ldr	r5, [r3, r0, lsl #3]
   166e4:	cmp	r5, #0
   166e8:	beq	166f8 <__assert_fail@plt+0x4c5c>
   166ec:	add	r0, r3, r0, lsl #3
   166f0:	add	r0, r0, #4
   166f4:	b	16710 <__assert_fail@plt+0x4c74>
   166f8:	str	r4, [r3, r0, lsl #3]
   166fc:	ldr	r0, [r6, #12]
   16700:	add	r0, r0, #1
   16704:	str	r0, [r6, #12]
   16708:	mov	r0, r9
   1670c:	str	sl, [r7]
   16710:	ldr	r3, [r0]
   16714:	cmp	r2, #0
   16718:	str	r3, [r7, #4]
   1671c:	str	r7, [r0]
   16720:	mov	r7, r2
   16724:	bne	166bc <__assert_fail@plt+0x4c20>
   16728:	ldr	r0, [sp]
   1672c:	ldr	r3, [r0, #4]
   16730:	str	sl, [r8, #4]
   16734:	add	r8, r8, #8
   16738:	cmp	r8, r3
   1673c:	bcc	166a0 <__assert_fail@plt+0x4c04>
   16740:	b	16888 <__assert_fail@plt+0x4dec>
   16744:	mov	r5, #0
   16748:	ldr	sl, [r8]
   1674c:	cmp	sl, #0
   16750:	beq	1687c <__assert_fail@plt+0x4de0>
   16754:	ldr	r7, [r8, #4]
   16758:	ldr	r1, [r6, #8]
   1675c:	cmp	r7, #0
   16760:	beq	167dc <__assert_fail@plt+0x4d40>
   16764:	mov	sl, #0
   16768:	ldr	r4, [r7]
   1676c:	ldr	r2, [r6, #24]
   16770:	mov	r0, r4
   16774:	blx	r2
   16778:	ldr	r1, [r6, #8]
   1677c:	cmp	r0, r1
   16780:	bcs	168a0 <__assert_fail@plt+0x4e04>
   16784:	ldr	r3, [r6]
   16788:	ldr	r2, [r7, #4]
   1678c:	ldr	r5, [r3, r0, lsl #3]
   16790:	cmp	r5, #0
   16794:	beq	167a4 <__assert_fail@plt+0x4d08>
   16798:	add	r0, r3, r0, lsl #3
   1679c:	add	r0, r0, #4
   167a0:	b	167bc <__assert_fail@plt+0x4d20>
   167a4:	str	r4, [r3, r0, lsl #3]
   167a8:	ldr	r0, [r6, #12]
   167ac:	add	r0, r0, #1
   167b0:	str	r0, [r6, #12]
   167b4:	mov	r0, r9
   167b8:	str	sl, [r7]
   167bc:	ldr	r3, [r0]
   167c0:	cmp	r2, #0
   167c4:	str	r3, [r7, #4]
   167c8:	str	r7, [r0]
   167cc:	mov	r7, r2
   167d0:	bne	16768 <__assert_fail@plt+0x4ccc>
   167d4:	ldr	sl, [r8]
   167d8:	mov	r5, #0
   167dc:	str	r5, [r8, #4]
   167e0:	mov	r0, sl
   167e4:	ldr	r2, [r6, #24]
   167e8:	blx	r2
   167ec:	mov	r4, r0
   167f0:	ldr	r0, [r6, #8]
   167f4:	cmp	r4, r0
   167f8:	bcs	168a0 <__assert_fail@plt+0x4e04>
   167fc:	ldr	r7, [r6]
   16800:	ldr	r0, [r7, r4, lsl #3]
   16804:	cmp	r0, #0
   16808:	beq	16828 <__assert_fail@plt+0x4d8c>
   1680c:	ldr	r0, [r9]
   16810:	cmp	r0, #0
   16814:	beq	1683c <__assert_fail@plt+0x4da0>
   16818:	mov	r1, r0
   1681c:	ldr	r2, [r1, #4]!
   16820:	str	r2, [r9]
   16824:	b	16850 <__assert_fail@plt+0x4db4>
   16828:	str	sl, [r7, r4, lsl #3]
   1682c:	ldr	r0, [r6, #12]
   16830:	add	r0, r0, #1
   16834:	str	r0, [r6, #12]
   16838:	b	16864 <__assert_fail@plt+0x4dc8>
   1683c:	mov	r0, #8
   16840:	bl	1a848 <lchmod@@Base+0x37bc>
   16844:	cmp	r0, #0
   16848:	beq	16894 <__assert_fail@plt+0x4df8>
   1684c:	add	r1, r0, #4
   16850:	str	sl, [r0]
   16854:	add	r2, r7, r4, lsl #3
   16858:	ldr	r3, [r2, #4]
   1685c:	str	r3, [r1]
   16860:	str	r0, [r2, #4]
   16864:	ldr	r0, [sp]
   16868:	str	r5, [r8]
   1686c:	ldr	r1, [r0, #12]
   16870:	ldr	r3, [r0, #4]
   16874:	sub	r1, r1, #1
   16878:	str	r1, [r0, #12]
   1687c:	add	r8, r8, #8
   16880:	cmp	r8, r3
   16884:	bcc	16748 <__assert_fail@plt+0x4cac>
   16888:	mov	r0, #1
   1688c:	sub	sp, fp, #28
   16890:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16894:	mov	r0, #0
   16898:	sub	sp, fp, #28
   1689c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   168a0:	bl	11a3c <abort@plt>
   168a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   168a8:	add	fp, sp, #28
   168ac:	sub	sp, sp, #4
   168b0:	cmp	r1, #0
   168b4:	beq	16bf8 <__assert_fail@plt+0x515c>
   168b8:	mov	r8, r2
   168bc:	mov	sl, r1
   168c0:	ldr	r1, [r0, #8]
   168c4:	ldr	r2, [r0, #24]
   168c8:	mov	r4, r0
   168cc:	mov	r0, sl
   168d0:	blx	r2
   168d4:	mov	r7, r0
   168d8:	ldr	r0, [r4, #8]
   168dc:	cmp	r7, r0
   168e0:	bcs	16bf8 <__assert_fail@plt+0x515c>
   168e4:	ldr	r5, [r4]
   168e8:	mov	r9, r5
   168ec:	ldr	r1, [r9, r7, lsl #3]!
   168f0:	cmp	r1, #0
   168f4:	beq	16988 <__assert_fail@plt+0x4eec>
   168f8:	cmp	r1, sl
   168fc:	beq	16928 <__assert_fail@plt+0x4e8c>
   16900:	ldr	r2, [r4, #28]
   16904:	mov	r0, sl
   16908:	blx	r2
   1690c:	cmp	r0, #0
   16910:	mov	r6, r9
   16914:	beq	16944 <__assert_fail@plt+0x4ea8>
   16918:	ldr	r0, [r6]
   1691c:	cmp	r0, #0
   16920:	bne	1692c <__assert_fail@plt+0x4e90>
   16924:	b	16988 <__assert_fail@plt+0x4eec>
   16928:	mov	r0, sl
   1692c:	cmp	r8, #0
   16930:	mov	r7, #0
   16934:	strne	r0, [r8]
   16938:	mov	r0, r7
   1693c:	sub	sp, fp, #28
   16940:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16944:	add	r6, r5, r7, lsl #3
   16948:	ldr	r0, [r6, #4]!
   1694c:	cmp	r0, #0
   16950:	beq	16988 <__assert_fail@plt+0x4eec>
   16954:	ldr	r1, [r0]
   16958:	cmp	r1, sl
   1695c:	beq	1697c <__assert_fail@plt+0x4ee0>
   16960:	ldr	r2, [r4, #28]
   16964:	mov	r0, sl
   16968:	blx	r2
   1696c:	ldr	r6, [r6]
   16970:	cmp	r0, #0
   16974:	beq	16948 <__assert_fail@plt+0x4eac>
   16978:	b	16918 <__assert_fail@plt+0x4e7c>
   1697c:	mov	r0, sl
   16980:	cmp	r0, #0
   16984:	bne	1692c <__assert_fail@plt+0x4e90>
   16988:	vldr	s0, [r4, #8]
   1698c:	vldr	s2, [r4, #12]
   16990:	ldr	r0, [r4, #20]
   16994:	vcvt.f32.u32	s0, s0
   16998:	vcvt.f32.u32	s4, s2
   1699c:	vldr	s2, [r0, #8]
   169a0:	vmul.f32	s6, s2, s0
   169a4:	vcmpe.f32	s6, s4
   169a8:	vmrs	APSR_nzcv, fpscr
   169ac:	bpl	16b10 <__assert_fail@plt+0x5074>
   169b0:	movw	r1, #47360	; 0xb900
   169b4:	movt	r1, #1
   169b8:	cmp	r0, r1
   169bc:	beq	16a58 <__assert_fail@plt+0x4fbc>
   169c0:	vldr	s6, [pc, #564]	; 16bfc <__assert_fail@plt+0x5160>
   169c4:	vcmpe.f32	s2, s6
   169c8:	vmrs	APSR_nzcv, fpscr
   169cc:	ble	16a34 <__assert_fail@plt+0x4f98>
   169d0:	vldr	s8, [pc, #552]	; 16c00 <__assert_fail@plt+0x5164>
   169d4:	vcmpe.f32	s2, s8
   169d8:	vmrs	APSR_nzcv, fpscr
   169dc:	bpl	16a34 <__assert_fail@plt+0x4f98>
   169e0:	vldr	s8, [pc, #540]	; 16c04 <__assert_fail@plt+0x5168>
   169e4:	vldr	s10, [r0, #12]
   169e8:	vcmpe.f32	s10, s8
   169ec:	vmrs	APSR_nzcv, fpscr
   169f0:	ble	16a34 <__assert_fail@plt+0x4f98>
   169f4:	vldr	s8, [r0]
   169f8:	vcmpe.f32	s8, #0.0
   169fc:	vmrs	APSR_nzcv, fpscr
   16a00:	blt	16a34 <__assert_fail@plt+0x4f98>
   16a04:	vadd.f32	s6, s8, s6
   16a08:	vcmpe.f32	s6, s2
   16a0c:	vmrs	APSR_nzcv, fpscr
   16a10:	bpl	16a34 <__assert_fail@plt+0x4f98>
   16a14:	vldr	s8, [r0, #4]
   16a18:	vmov.f32	s10, #112	; 0x3f800000  1.0
   16a1c:	vcmpe.f32	s8, s10
   16a20:	vmrs	APSR_nzcv, fpscr
   16a24:	bhi	16a34 <__assert_fail@plt+0x4f98>
   16a28:	vcmpe.f32	s6, s8
   16a2c:	vmrs	APSR_nzcv, fpscr
   16a30:	bmi	16a44 <__assert_fail@plt+0x4fa8>
   16a34:	vldr	s2, [pc, #460]	; 16c08 <__assert_fail@plt+0x516c>
   16a38:	movw	r0, #47360	; 0xb900
   16a3c:	movt	r0, #1
   16a40:	str	r0, [r4, #20]
   16a44:	vmul.f32	s6, s2, s0
   16a48:	vcmpe.f32	s6, s4
   16a4c:	vmrs	APSR_nzcv, fpscr
   16a50:	bmi	16a6c <__assert_fail@plt+0x4fd0>
   16a54:	b	16b10 <__assert_fail@plt+0x5074>
   16a58:	mov	r0, r1
   16a5c:	vmul.f32	s6, s2, s0
   16a60:	vcmpe.f32	s6, s4
   16a64:	vmrs	APSR_nzcv, fpscr
   16a68:	bpl	16b10 <__assert_fail@plt+0x5074>
   16a6c:	vldr	s4, [r0, #12]
   16a70:	ldrb	r0, [r0, #16]
   16a74:	mvn	r7, #0
   16a78:	vmul.f32	s0, s4, s0
   16a7c:	vldr	s4, [pc, #392]	; 16c0c <__assert_fail@plt+0x5170>
   16a80:	cmp	r0, #0
   16a84:	vmul.f32	s2, s2, s0
   16a88:	vseleq.f32	s0, s2, s0
   16a8c:	vcmpe.f32	s0, s4
   16a90:	vmrs	APSR_nzcv, fpscr
   16a94:	bge	16b8c <__assert_fail@plt+0x50f0>
   16a98:	vcvt.u32.f32	s0, s0
   16a9c:	mov	r0, r4
   16aa0:	vmov	r1, s0
   16aa4:	bl	163f4 <__assert_fail@plt+0x4958>
   16aa8:	cmp	r0, #0
   16aac:	beq	16b8c <__assert_fail@plt+0x50f0>
   16ab0:	ldr	r1, [r4, #8]
   16ab4:	ldr	r2, [r4, #24]
   16ab8:	mov	r0, sl
   16abc:	blx	r2
   16ac0:	mov	r7, r0
   16ac4:	ldr	r0, [r4, #8]
   16ac8:	cmp	r7, r0
   16acc:	bcs	16bf8 <__assert_fail@plt+0x515c>
   16ad0:	ldr	r5, [r4]
   16ad4:	mov	r9, r5
   16ad8:	ldr	r1, [r9, r7, lsl #3]!
   16adc:	cmp	r1, #0
   16ae0:	beq	16b38 <__assert_fail@plt+0x509c>
   16ae4:	cmp	r1, sl
   16ae8:	mov	r0, sl
   16aec:	beq	16b08 <__assert_fail@plt+0x506c>
   16af0:	ldr	r2, [r4, #28]
   16af4:	mov	r0, sl
   16af8:	blx	r2
   16afc:	cmp	r0, #0
   16b00:	beq	16ba8 <__assert_fail@plt+0x510c>
   16b04:	ldr	r0, [r9]
   16b08:	cmp	r0, #0
   16b0c:	bne	16bf8 <__assert_fail@plt+0x515c>
   16b10:	ldr	r0, [r9]
   16b14:	cmp	r0, #0
   16b18:	beq	16b38 <__assert_fail@plt+0x509c>
   16b1c:	ldr	r0, [r4, #36]	; 0x24
   16b20:	cmp	r0, #0
   16b24:	beq	16b58 <__assert_fail@plt+0x50bc>
   16b28:	mov	r1, r0
   16b2c:	ldr	r2, [r1, #4]!
   16b30:	str	r2, [r4, #36]	; 0x24
   16b34:	b	16b6c <__assert_fail@plt+0x50d0>
   16b38:	str	sl, [r9]
   16b3c:	ldr	r0, [r4, #12]
   16b40:	ldr	r1, [r4, #16]
   16b44:	add	r0, r0, #1
   16b48:	add	r1, r1, #1
   16b4c:	str	r0, [r4, #12]
   16b50:	str	r1, [r4, #16]
   16b54:	b	16b88 <__assert_fail@plt+0x50ec>
   16b58:	mov	r0, #8
   16b5c:	bl	1a848 <lchmod@@Base+0x37bc>
   16b60:	cmp	r0, #0
   16b64:	beq	16b98 <__assert_fail@plt+0x50fc>
   16b68:	add	r1, r0, #4
   16b6c:	str	sl, [r0]
   16b70:	ldr	r2, [r9, #4]
   16b74:	str	r2, [r1]
   16b78:	str	r0, [r9, #4]
   16b7c:	ldr	r0, [r4, #16]
   16b80:	add	r0, r0, #1
   16b84:	str	r0, [r4, #16]
   16b88:	mov	r7, #1
   16b8c:	mov	r0, r7
   16b90:	sub	sp, fp, #28
   16b94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16b98:	mvn	r7, #0
   16b9c:	mov	r0, r7
   16ba0:	sub	sp, fp, #28
   16ba4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ba8:	add	r6, r5, r7, lsl #3
   16bac:	ldr	r0, [r6, #4]!
   16bb0:	cmp	r0, #0
   16bb4:	beq	16b10 <__assert_fail@plt+0x5074>
   16bb8:	ldr	r1, [r0]
   16bbc:	cmp	r1, sl
   16bc0:	beq	16bec <__assert_fail@plt+0x5150>
   16bc4:	ldr	r2, [r4, #28]
   16bc8:	mov	r0, sl
   16bcc:	blx	r2
   16bd0:	ldr	r6, [r6]
   16bd4:	cmp	r0, #0
   16bd8:	beq	16bac <__assert_fail@plt+0x5110>
   16bdc:	ldr	r0, [r6]
   16be0:	cmp	r0, #0
   16be4:	beq	16b10 <__assert_fail@plt+0x5074>
   16be8:	b	16bf8 <__assert_fail@plt+0x515c>
   16bec:	mov	r0, sl
   16bf0:	cmp	r0, #0
   16bf4:	beq	16b10 <__assert_fail@plt+0x5074>
   16bf8:	bl	11a3c <abort@plt>
   16bfc:	stclcc	12, cr12, [ip, #820]	; 0x334
   16c00:	svccc	0x00666666
   16c04:	svccc	0x008ccccd
   16c08:	svccc	0x004ccccd
   16c0c:	svcmi	0x00800000
   16c10:	push	{r4, sl, fp, lr}
   16c14:	add	fp, sp, #8
   16c18:	sub	sp, sp, #8
   16c1c:	add	r2, sp, #4
   16c20:	mov	r4, r1
   16c24:	bl	168a4 <__assert_fail@plt+0x4e08>
   16c28:	cmn	r0, #1
   16c2c:	beq	16c48 <__assert_fail@plt+0x51ac>
   16c30:	ldr	r1, [sp, #4]
   16c34:	cmp	r0, #0
   16c38:	moveq	r4, r1
   16c3c:	mov	r0, r4
   16c40:	sub	sp, fp, #8
   16c44:	pop	{r4, sl, fp, pc}
   16c48:	mov	r4, #0
   16c4c:	mov	r0, r4
   16c50:	sub	sp, fp, #8
   16c54:	pop	{r4, sl, fp, pc}
   16c58:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16c5c:	add	fp, sp, #24
   16c60:	mov	r9, r1
   16c64:	ldr	r1, [r0, #8]
   16c68:	ldr	r2, [r0, #24]
   16c6c:	mov	r5, r0
   16c70:	mov	r0, r9
   16c74:	blx	r2
   16c78:	mov	r7, r0
   16c7c:	ldr	r0, [r5, #8]
   16c80:	cmp	r7, r0
   16c84:	bcs	16ef4 <__assert_fail@plt+0x5458>
   16c88:	ldr	r6, [r5]
   16c8c:	mov	r8, #0
   16c90:	mov	r4, r6
   16c94:	ldr	r1, [r4, r7, lsl #3]!
   16c98:	cmp	r1, #0
   16c9c:	beq	16d50 <__assert_fail@plt+0x52b4>
   16ca0:	cmp	r1, r9
   16ca4:	beq	16cc0 <__assert_fail@plt+0x5224>
   16ca8:	ldr	r2, [r5, #28]
   16cac:	mov	r0, r9
   16cb0:	blx	r2
   16cb4:	cmp	r0, #0
   16cb8:	beq	16cf8 <__assert_fail@plt+0x525c>
   16cbc:	ldr	r9, [r4]
   16cc0:	add	r0, r6, r7, lsl #3
   16cc4:	ldr	r0, [r0, #4]
   16cc8:	cmp	r0, #0
   16ccc:	beq	16d40 <__assert_fail@plt+0x52a4>
   16cd0:	ldm	r0, {r1, r2}
   16cd4:	stm	r4, {r1, r2}
   16cd8:	mov	r1, #0
   16cdc:	str	r1, [r0]
   16ce0:	ldr	r1, [r5, #36]	; 0x24
   16ce4:	str	r1, [r0, #4]
   16ce8:	str	r0, [r5, #36]	; 0x24
   16cec:	cmp	r9, #0
   16cf0:	bne	16d88 <__assert_fail@plt+0x52ec>
   16cf4:	b	16d50 <__assert_fail@plt+0x52b4>
   16cf8:	add	r7, r6, r7, lsl #3
   16cfc:	ldr	r0, [r7, #4]!
   16d00:	cmp	r0, #0
   16d04:	beq	16d50 <__assert_fail@plt+0x52b4>
   16d08:	ldr	r1, [r0]
   16d0c:	cmp	r1, r9
   16d10:	beq	16d58 <__assert_fail@plt+0x52bc>
   16d14:	ldr	r2, [r5, #28]
   16d18:	mov	r0, r9
   16d1c:	blx	r2
   16d20:	ldr	r1, [r7]
   16d24:	cmp	r0, #0
   16d28:	bne	16d60 <__assert_fail@plt+0x52c4>
   16d2c:	ldr	r0, [r1, #4]!
   16d30:	cmp	r0, #0
   16d34:	mov	r7, r1
   16d38:	bne	16d08 <__assert_fail@plt+0x526c>
   16d3c:	b	16d50 <__assert_fail@plt+0x52b4>
   16d40:	mov	r0, #0
   16d44:	str	r0, [r4]
   16d48:	cmp	r9, #0
   16d4c:	bne	16d88 <__assert_fail@plt+0x52ec>
   16d50:	mov	r0, r8
   16d54:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16d58:	mov	r1, r0
   16d5c:	b	16d64 <__assert_fail@plt+0x52c8>
   16d60:	ldr	r9, [r1]
   16d64:	ldr	r0, [r1, #4]
   16d68:	str	r0, [r7]
   16d6c:	mov	r0, #0
   16d70:	str	r0, [r1]
   16d74:	ldr	r0, [r5, #36]	; 0x24
   16d78:	str	r0, [r1, #4]
   16d7c:	str	r1, [r5, #36]	; 0x24
   16d80:	cmp	r9, #0
   16d84:	beq	16d50 <__assert_fail@plt+0x52b4>
   16d88:	ldr	r0, [r5, #16]
   16d8c:	sub	r0, r0, #1
   16d90:	str	r0, [r5, #16]
   16d94:	ldr	r0, [r4]
   16d98:	cmp	r0, #0
   16d9c:	bne	16eb4 <__assert_fail@plt+0x5418>
   16da0:	ldr	r0, [r5, #12]
   16da4:	vldr	s0, [r5, #8]
   16da8:	sub	r1, r0, #1
   16dac:	str	r1, [r5, #12]
   16db0:	vmov	s2, r1
   16db4:	ldr	r0, [r5, #20]
   16db8:	vcvt.f32.u32	s0, s0
   16dbc:	vcvt.f32.u32	s2, s2
   16dc0:	vldr	s4, [r0]
   16dc4:	vmul.f32	s6, s4, s0
   16dc8:	vcmpe.f32	s6, s2
   16dcc:	vmrs	APSR_nzcv, fpscr
   16dd0:	ble	16eb4 <__assert_fail@plt+0x5418>
   16dd4:	movw	r1, #47360	; 0xb900
   16dd8:	movt	r1, #1
   16ddc:	cmp	r0, r1
   16de0:	beq	16e48 <__assert_fail@plt+0x53ac>
   16de4:	vldr	s8, [pc, #268]	; 16ef8 <__assert_fail@plt+0x545c>
   16de8:	vldr	s6, [r0, #8]
   16dec:	vcmpe.f32	s6, s8
   16df0:	vmrs	APSR_nzcv, fpscr
   16df4:	ble	16e24 <__assert_fail@plt+0x5388>
   16df8:	vldr	s10, [pc, #252]	; 16efc <__assert_fail@plt+0x5460>
   16dfc:	vcmpe.f32	s6, s10
   16e00:	vmrs	APSR_nzcv, fpscr
   16e04:	bpl	16e24 <__assert_fail@plt+0x5388>
   16e08:	vcmpe.f32	s4, #0.0
   16e0c:	vmrs	APSR_nzcv, fpscr
   16e10:	vldrge	s10, [r0, #12]
   16e14:	vldrge	s12, [pc, #228]	; 16f00 <__assert_fail@plt+0x5464>
   16e18:	vcmpege.f32	s10, s12
   16e1c:	vmrsge	APSR_nzcv, fpscr
   16e20:	bgt	16ec0 <__assert_fail@plt+0x5424>
   16e24:	vldr	s4, [pc, #216]	; 16f04 <__assert_fail@plt+0x5468>
   16e28:	movw	r0, #47360	; 0xb900
   16e2c:	movt	r0, #1
   16e30:	str	r0, [r5, #20]
   16e34:	vmul.f32	s4, s4, s0
   16e38:	vcmpe.f32	s4, s2
   16e3c:	vmrs	APSR_nzcv, fpscr
   16e40:	bgt	16e5c <__assert_fail@plt+0x53c0>
   16e44:	b	16eb4 <__assert_fail@plt+0x5418>
   16e48:	mov	r0, r1
   16e4c:	vmul.f32	s4, s4, s0
   16e50:	vcmpe.f32	s4, s2
   16e54:	vmrs	APSR_nzcv, fpscr
   16e58:	ble	16eb4 <__assert_fail@plt+0x5418>
   16e5c:	ldrb	r1, [r0, #16]
   16e60:	vldr	s2, [r0, #4]
   16e64:	cmp	r1, #0
   16e68:	vmul.f32	s0, s2, s0
   16e6c:	vldreq	s2, [r0, #8]
   16e70:	mov	r0, r5
   16e74:	vmuleq.f32	s0, s0, s2
   16e78:	vcvt.u32.f32	s0, s0
   16e7c:	vmov	r1, s0
   16e80:	bl	163f4 <__assert_fail@plt+0x4958>
   16e84:	cmp	r0, #0
   16e88:	bne	16eb4 <__assert_fail@plt+0x5418>
   16e8c:	ldr	r0, [r5, #36]	; 0x24
   16e90:	cmp	r0, #0
   16e94:	beq	16eac <__assert_fail@plt+0x5410>
   16e98:	ldr	r4, [r0, #4]
   16e9c:	bl	13370 <__assert_fail@plt+0x18d4>
   16ea0:	cmp	r4, #0
   16ea4:	mov	r0, r4
   16ea8:	bne	16e98 <__assert_fail@plt+0x53fc>
   16eac:	mov	r0, #0
   16eb0:	str	r0, [r5, #36]	; 0x24
   16eb4:	mov	r8, r9
   16eb8:	mov	r0, r8
   16ebc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16ec0:	vadd.f32	s8, s4, s8
   16ec4:	vcmpe.f32	s8, s6
   16ec8:	vmrs	APSR_nzcv, fpscr
   16ecc:	bpl	16e24 <__assert_fail@plt+0x5388>
   16ed0:	vldr	s6, [r0, #4]
   16ed4:	vmov.f32	s10, #112	; 0x3f800000  1.0
   16ed8:	vcmpe.f32	s6, s10
   16edc:	vmrs	APSR_nzcv, fpscr
   16ee0:	bhi	16e24 <__assert_fail@plt+0x5388>
   16ee4:	vcmpe.f32	s8, s6
   16ee8:	vmrs	APSR_nzcv, fpscr
   16eec:	bmi	16e4c <__assert_fail@plt+0x53b0>
   16ef0:	b	16e24 <__assert_fail@plt+0x5388>
   16ef4:	bl	11a3c <abort@plt>
   16ef8:	stclcc	12, cr12, [ip, #820]	; 0x334
   16efc:	svccc	0x00666666
   16f00:	svccc	0x008ccccd
   16f04:	andeq	r0, r0, r0
   16f08:	b	16c58 <__assert_fail@plt+0x51bc>
   16f0c:	push	{r4, r5, fp, lr}
   16f10:	add	fp, sp, #8
   16f14:	mov	r5, r0
   16f18:	ldr	r0, [r0]
   16f1c:	mov	r4, r1
   16f20:	bl	1aeac <lchmod@@Base+0x3e20>
   16f24:	ldrd	r2, [r5, #8]
   16f28:	eor	r0, r2, r0
   16f2c:	mov	r1, r3
   16f30:	mov	r2, r4
   16f34:	mov	r3, #0
   16f38:	bl	1b0d8 <lchmod@@Base+0x404c>
   16f3c:	mov	r0, r2
   16f40:	pop	{r4, r5, fp, pc}
   16f44:	push	{r4, r5, r6, r7, fp, lr}
   16f48:	add	fp, sp, #16
   16f4c:	ldrd	r2, [r1, #8]
   16f50:	ldrd	r4, [r0, #8]
   16f54:	eor	r3, r5, r3
   16f58:	eor	r2, r4, r2
   16f5c:	orrs	r2, r2, r3
   16f60:	mov	r2, #0
   16f64:	bne	16f94 <__assert_fail@plt+0x54f8>
   16f68:	ldrd	r4, [r1, #16]
   16f6c:	ldrd	r6, [r0, #16]
   16f70:	eor	r3, r7, r5
   16f74:	eor	r7, r6, r4
   16f78:	orrs	r3, r7, r3
   16f7c:	bne	16f94 <__assert_fail@plt+0x54f8>
   16f80:	ldr	r1, [r1]
   16f84:	ldr	r0, [r0]
   16f88:	bl	116d0 <strcmp@plt>
   16f8c:	clz	r0, r0
   16f90:	lsr	r2, r0, #5
   16f94:	mov	r0, r2
   16f98:	pop	{r4, r5, r6, r7, fp, pc}
   16f9c:	push	{r4, sl, fp, lr}
   16fa0:	add	fp, sp, #8
   16fa4:	mov	r4, r0
   16fa8:	ldr	r0, [r0]
   16fac:	bl	13370 <__assert_fail@plt+0x18d4>
   16fb0:	mov	r0, r4
   16fb4:	pop	{r4, sl, fp, lr}
   16fb8:	b	13370 <__assert_fail@plt+0x18d4>
   16fbc:	mov	r3, #1
   16fc0:	mov	r2, #0
   16fc4:	vdup.32	q8, r1
   16fc8:	strb	r3, [r0, #28]
   16fcc:	str	r2, [r0, #20]
   16fd0:	str	r2, [r0, #24]
   16fd4:	vst1.32	{d16-d17}, [r0]!
   16fd8:	str	r1, [r0]
   16fdc:	bx	lr
   16fe0:	ldrb	r0, [r0, #28]
   16fe4:	bx	lr
   16fe8:	push	{fp, lr}
   16fec:	mov	fp, sp
   16ff0:	ldrb	r3, [r0, #28]
   16ff4:	ldr	r2, [r0, #20]
   16ff8:	eor	lr, r3, #1
   16ffc:	add	r2, r2, lr
   17000:	and	r3, r2, #3
   17004:	ldr	ip, [r0, r3, lsl #2]
   17008:	str	r1, [r0, r3, lsl #2]
   1700c:	str	r3, [r0, #20]
   17010:	ldr	r1, [r0, #24]
   17014:	cmp	r3, r1
   17018:	addeq	r1, r2, lr
   1701c:	andeq	r1, r1, #3
   17020:	streq	r1, [r0, #24]
   17024:	mov	r1, #0
   17028:	strb	r1, [r0, #28]
   1702c:	mov	r0, ip
   17030:	pop	{fp, pc}
   17034:	ldrb	r1, [r0, #28]
   17038:	cmp	r1, #0
   1703c:	bne	17080 <__assert_fail@plt+0x55e4>
   17040:	ldr	r3, [r0, #20]
   17044:	ldr	r2, [r0, #16]
   17048:	ldr	r1, [r0, r3, lsl #2]
   1704c:	str	r2, [r0, r3, lsl #2]
   17050:	ldr	r2, [r0, #20]
   17054:	ldr	r3, [r0, #24]
   17058:	cmp	r2, r3
   1705c:	moveq	r2, #1
   17060:	strbeq	r2, [r0, #28]
   17064:	moveq	r0, r1
   17068:	bxeq	lr
   1706c:	sub	r2, r2, #1
   17070:	and	r2, r2, #3
   17074:	str	r2, [r0, #20]
   17078:	mov	r0, r1
   1707c:	bx	lr
   17080:	push	{fp, lr}
   17084:	mov	fp, sp
   17088:	bl	11a3c <abort@plt>

0001708c <lchmod@@Base>:
   1708c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17090:	add	fp, sp, #24
   17094:	sub	sp, sp, #136	; 0x88
   17098:	mov	r4, r1
   1709c:	mov	r1, #2654208	; 0x288000
   170a0:	mov	r5, r0
   170a4:	bl	1182c <open64@plt>
   170a8:	mov	r6, r0
   170ac:	cmp	r0, #0
   170b0:	blt	17104 <lchmod@@Base+0x78>
   170b4:	movw	r2, #47004	; 0xb79c
   170b8:	mov	r0, #4096	; 0x1000
   170bc:	add	r3, sp, #32
   170c0:	mov	r1, r6
   170c4:	str	r0, [sp]
   170c8:	movt	r2, #1
   170cc:	mov	r0, #3
   170d0:	bl	117a8 <__fxstatat64@plt>
   170d4:	cmp	r0, #0
   170d8:	beq	17114 <lchmod@@Base+0x88>
   170dc:	bl	118ec <__errno_location@plt>
   170e0:	ldr	r5, [r0]
   170e4:	mov	r4, r0
   170e8:	mov	r0, r6
   170ec:	bl	11a48 <close@plt>
   170f0:	str	r5, [r4]
   170f4:	mvn	r7, #0
   170f8:	mov	r0, r7
   170fc:	sub	sp, fp, #24
   17100:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17104:	mov	r7, r6
   17108:	mov	r0, r7
   1710c:	sub	sp, fp, #24
   17110:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17114:	ldr	r0, [sp, #48]	; 0x30
   17118:	and	r0, r0, #61440	; 0xf000
   1711c:	cmp	r0, #40960	; 0xa000
   17120:	bne	17148 <lchmod@@Base+0xbc>
   17124:	mov	r0, r6
   17128:	bl	11a48 <close@plt>
   1712c:	bl	118ec <__errno_location@plt>
   17130:	mov	r1, #95	; 0x5f
   17134:	mvn	r7, #0
   17138:	str	r1, [r0]
   1713c:	mov	r0, r7
   17140:	sub	sp, fp, #24
   17144:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17148:	movw	r3, #47380	; 0xb914
   1714c:	add	r7, sp, #6
   17150:	mov	r1, #1
   17154:	mov	r2, #26
   17158:	str	r6, [sp]
   1715c:	movt	r3, #1
   17160:	mov	r0, r7
   17164:	bl	118f8 <__sprintf_chk@plt>
   17168:	mov	r0, r7
   1716c:	mov	r1, r4
   17170:	bl	11a18 <chmod@plt>
   17174:	mov	r7, r0
   17178:	bl	118ec <__errno_location@plt>
   1717c:	ldr	r9, [r0]
   17180:	mov	r8, r0
   17184:	mov	r0, r6
   17188:	bl	11a48 <close@plt>
   1718c:	cmp	r7, #0
   17190:	beq	171b8 <lchmod@@Base+0x12c>
   17194:	cmp	r9, #2
   17198:	bne	171c8 <lchmod@@Base+0x13c>
   1719c:	mov	r0, r5
   171a0:	mov	r1, r4
   171a4:	bl	11a18 <chmod@plt>
   171a8:	mov	r7, r0
   171ac:	mov	r0, r7
   171b0:	sub	sp, fp, #24
   171b4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   171b8:	mov	r7, #0
   171bc:	mov	r0, r7
   171c0:	sub	sp, fp, #24
   171c4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   171c8:	str	r9, [r8]
   171cc:	mov	r0, r7
   171d0:	sub	sp, fp, #24
   171d4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   171d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   171dc:	add	fp, sp, #28
   171e0:	sub	sp, sp, #4
   171e4:	ldrb	r1, [r0]
   171e8:	mov	r4, r0
   171ec:	and	r0, r1, #248	; 0xf8
   171f0:	cmp	r0, #48	; 0x30
   171f4:	bne	17240 <lchmod@@Base+0x1b4>
   171f8:	mov	r0, #0
   171fc:	mov	r5, #0
   17200:	mov	r2, r4
   17204:	lsl	r3, r5, #3
   17208:	uxtab	r1, r3, r1
   1720c:	sub	r5, r1, #48	; 0x30
   17210:	cmp	r0, r5, lsr #12
   17214:	bne	17238 <lchmod@@Base+0x1ac>
   17218:	ldrb	r1, [r2, #1]
   1721c:	add	r6, r2, #1
   17220:	and	r2, r1, #248	; 0xf8
   17224:	cmp	r2, #48	; 0x30
   17228:	mov	r2, r6
   1722c:	beq	17204 <lchmod@@Base+0x178>
   17230:	cmp	r1, #0
   17234:	beq	172c0 <lchmod@@Base+0x234>
   17238:	sub	sp, fp, #28
   1723c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17240:	movw	sl, #5
   17244:	mov	r2, #1
   17248:	mvn	r3, #42	; 0x2a
   1724c:	mov	r7, #1
   17250:	mov	r0, #1
   17254:	movt	sl, #4
   17258:	uxtab	r6, r3, r1
   1725c:	uxtb	r1, r1
   17260:	cmp	r6, #18
   17264:	bls	17288 <lchmod@@Base+0x1fc>
   17268:	b	17294 <lchmod@@Base+0x208>
   1726c:	ldrb	r1, [r4, r7]
   17270:	add	r0, r6, r0
   17274:	add	r7, r7, #1
   17278:	uxtab	r6, r3, r1
   1727c:	uxtb	r1, r1
   17280:	cmp	r6, #18
   17284:	bhi	17294 <lchmod@@Base+0x208>
   17288:	tst	sl, r2, lsl r6
   1728c:	mov	r6, #1
   17290:	bne	1726c <lchmod@@Base+0x1e0>
   17294:	cmp	r1, #0
   17298:	beq	172a4 <lchmod@@Base+0x218>
   1729c:	mov	r6, #0
   172a0:	b	1726c <lchmod@@Base+0x1e0>
   172a4:	mov	r1, #16
   172a8:	bl	1a2a4 <lchmod@@Base+0x3218>
   172ac:	mov	r9, #0
   172b0:	mov	ip, #1
   172b4:	mvn	lr, #87	; 0x57
   172b8:	mov	r8, #0
   172bc:	b	1730c <lchmod@@Base+0x280>
   172c0:	mov	r0, #32
   172c4:	bl	1a1d4 <lchmod@@Base+0x3148>
   172c8:	movw	r1, #317	; 0x13d
   172cc:	mov	r2, #0
   172d0:	and	r3, r5, #3072	; 0xc00
   172d4:	movw	r7, #1023	; 0x3ff
   172d8:	strh	r1, [r0]
   172dc:	strb	r2, [r0, #17]
   172e0:	sub	r2, r6, r4
   172e4:	movw	r1, #4095	; 0xfff
   172e8:	cmp	r2, #5
   172ec:	str	r1, [r0, #4]
   172f0:	str	r5, [r0, #8]
   172f4:	orrlt	r1, r3, r7
   172f8:	str	r1, [r0, #12]
   172fc:	sub	sp, fp, #28
   17300:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17304:	add	r4, r4, #1
   17308:	mov	r8, r3
   1730c:	mov	r2, #0
   17310:	ldrb	r6, [r4]
   17314:	sub	r3, r6, #97	; 0x61
   17318:	cmp	r3, #20
   1731c:	bls	1733c <lchmod@@Base+0x2b0>
   17320:	b	173b4 <lchmod@@Base+0x328>
   17324:	orr	r2, r2, r1
   17328:	add	r4, r4, #1
   1732c:	ldrb	r6, [r4]
   17330:	sub	r3, r6, #97	; 0x61
   17334:	cmp	r3, #20
   17338:	bhi	173b4 <lchmod@@Base+0x328>
   1733c:	add	r5, pc, #4
   17340:	mov	r1, #2496	; 0x9c0
   17344:	ldr	pc, [r5, r3, lsl #2]
   17348:	muleq	r1, ip, r3
   1734c:	andeq	r7, r1, r0, lsr r6
   17350:	andeq	r7, r1, r0, lsr r6
   17354:	andeq	r7, r1, r0, lsr r6
   17358:	andeq	r7, r1, r0, lsr r6
   1735c:	andeq	r7, r1, r0, lsr r6
   17360:	andeq	r7, r1, r4, lsr #7
   17364:	andeq	r7, r1, r0, lsr r6
   17368:	andeq	r7, r1, r0, lsr r6
   1736c:	andeq	r7, r1, r0, lsr r6
   17370:	andeq	r7, r1, r0, lsr r6
   17374:	andeq	r7, r1, r0, lsr r6
   17378:	andeq	r7, r1, r0, lsr r6
   1737c:	andeq	r7, r1, r0, lsr r6
   17380:	andeq	r7, r1, ip, lsr #7
   17384:	andeq	r7, r1, r0, lsr r6
   17388:	andeq	r7, r1, r0, lsr r6
   1738c:	andeq	r7, r1, r0, lsr r6
   17390:	andeq	r7, r1, r0, lsr r6
   17394:	andeq	r7, r1, r0, lsr r6
   17398:	andeq	r7, r1, r4, lsr #6
   1739c:	movw	r1, #4095	; 0xfff
   173a0:	b	17324 <lchmod@@Base+0x298>
   173a4:	movw	r1, #1080	; 0x438
   173a8:	b	17324 <lchmod@@Base+0x298>
   173ac:	movw	r1, #519	; 0x207
   173b0:	b	17324 <lchmod@@Base+0x298>
   173b4:	sub	r1, r6, #43	; 0x2b
   173b8:	cmp	r1, #18
   173bc:	bhi	17630 <lchmod@@Base+0x5a4>
   173c0:	tst	sl, ip, lsl r1
   173c4:	beq	17630 <lchmod@@Base+0x5a4>
   173c8:	ldrb	r1, [r4, #1]
   173cc:	sub	r3, r1, #48	; 0x30
   173d0:	cmp	r3, #8
   173d4:	bcs	17430 <lchmod@@Base+0x3a4>
   173d8:	add	r3, r4, #2
   173dc:	mov	r7, #0
   173e0:	lsl	r4, r7, #3
   173e4:	uxtab	r1, r4, r1
   173e8:	sub	r7, r1, #48	; 0x30
   173ec:	cmp	r9, r7, lsr #12
   173f0:	bne	17630 <lchmod@@Base+0x5a4>
   173f4:	ldrb	r1, [r3], #1
   173f8:	and	r4, r1, #248	; 0xf8
   173fc:	cmp	r4, #48	; 0x30
   17400:	beq	173e0 <lchmod@@Base+0x354>
   17404:	cmp	r2, #0
   17408:	bne	17630 <lchmod@@Base+0x5a4>
   1740c:	sub	r4, r3, #1
   17410:	mov	r5, #1
   17414:	movw	r2, #4095	; 0xfff
   17418:	cmp	r1, #0
   1741c:	beq	1745c <lchmod@@Base+0x3d0>
   17420:	cmp	r1, #44	; 0x2c
   17424:	movw	r1, #4095	; 0xfff
   17428:	beq	1757c <lchmod@@Base+0x4f0>
   1742c:	b	17630 <lchmod@@Base+0x5a4>
   17430:	add	r4, r4, #2
   17434:	cmp	r1, #103	; 0x67
   17438:	beq	17464 <lchmod@@Base+0x3d8>
   1743c:	cmp	r1, #111	; 0x6f
   17440:	beq	17474 <lchmod@@Base+0x3e8>
   17444:	cmp	r1, #117	; 0x75
   17448:	bne	17484 <lchmod@@Base+0x3f8>
   1744c:	mov	r5, #3
   17450:	mov	r1, #0
   17454:	mov	r7, #448	; 0x1c0
   17458:	b	1757c <lchmod@@Base+0x4f0>
   1745c:	movw	r1, #4095	; 0xfff
   17460:	b	1757c <lchmod@@Base+0x4f0>
   17464:	mov	r5, #3
   17468:	mov	r1, #0
   1746c:	mov	r7, #56	; 0x38
   17470:	b	1757c <lchmod@@Base+0x4f0>
   17474:	mov	r5, #3
   17478:	mov	r1, #0
   1747c:	mov	r7, #7
   17480:	b	1757c <lchmod@@Base+0x4f0>
   17484:	mov	r3, #1
   17488:	mov	r7, #0
   1748c:	uxtab	r1, lr, r1
   17490:	mov	r5, r3
   17494:	cmp	r1, #32
   17498:	bls	174b4 <lchmod@@Base+0x428>
   1749c:	b	17570 <lchmod@@Base+0x4e4>
   174a0:	ldrb	r1, [r4], #1
   174a4:	uxtab	r1, lr, r1
   174a8:	mov	r5, r3
   174ac:	cmp	r1, #32
   174b0:	bhi	17570 <lchmod@@Base+0x4e4>
   174b4:	add	ip, pc, #4
   174b8:	mov	r3, #2
   174bc:	ldr	pc, [ip, r1, lsl #2]
   174c0:	andeq	r7, r1, r0, lsr #9
   174c4:	andeq	r7, r1, r0, ror r5
   174c8:	andeq	r7, r1, r0, ror r5
   174cc:	andeq	r7, r1, r0, ror r5
   174d0:	andeq	r7, r1, r0, ror r5
   174d4:	andeq	r7, r1, r0, ror r5
   174d8:	andeq	r7, r1, r0, ror r5
   174dc:	andeq	r7, r1, r0, ror r5
   174e0:	andeq	r7, r1, r0, ror r5
   174e4:	andeq	r7, r1, r0, ror r5
   174e8:	andeq	r7, r1, r0, ror r5
   174ec:	andeq	r7, r1, r0, ror r5
   174f0:	andeq	r7, r1, r0, ror r5
   174f4:	andeq	r7, r1, r0, ror r5
   174f8:	andeq	r7, r1, r0, ror r5
   174fc:	andeq	r7, r1, r0, ror r5
   17500:	andeq	r7, r1, r0, ror r5
   17504:	andeq	r7, r1, r0, ror r5
   17508:	andeq	r7, r1, r0, ror r5
   1750c:	andeq	r7, r1, r0, ror r5
   17510:	andeq	r7, r1, r0, ror r5
   17514:	andeq	r7, r1, r0, ror r5
   17518:	andeq	r7, r1, r0, ror r5
   1751c:	andeq	r7, r1, r0, ror r5
   17520:	andeq	r7, r1, r0, ror r5
   17524:	andeq	r7, r1, r0, ror r5
   17528:	andeq	r7, r1, r4, asr #10
   1752c:	andeq	r7, r1, ip, asr #10
   17530:	andeq	r7, r1, r4, asr r5
   17534:	andeq	r7, r1, r0, ror r5
   17538:	andeq	r7, r1, r0, ror r5
   1753c:	andeq	r7, r1, ip, asr r5
   17540:	andeq	r7, r1, r4, ror #10
   17544:	orr	r7, r7, #292	; 0x124
   17548:	b	17568 <lchmod@@Base+0x4dc>
   1754c:	orr	r7, r7, #3072	; 0xc00
   17550:	b	17568 <lchmod@@Base+0x4dc>
   17554:	orr	r7, r7, #512	; 0x200
   17558:	b	17568 <lchmod@@Base+0x4dc>
   1755c:	orr	r7, r7, #146	; 0x92
   17560:	b	17568 <lchmod@@Base+0x4dc>
   17564:	orr	r7, r7, #73	; 0x49
   17568:	mov	r3, r5
   1756c:	b	174a0 <lchmod@@Base+0x414>
   17570:	sub	r4, r4, #1
   17574:	mov	r1, #0
   17578:	mov	ip, #1
   1757c:	mov	r3, r0
   17580:	cmp	r1, #0
   17584:	strb	r6, [r3, r8, lsl #4]!
   17588:	strb	r5, [r3, #1]
   1758c:	stmib	r3, {r2, r7}
   17590:	bne	175a0 <lchmod@@Base+0x514>
   17594:	cmp	r2, #0
   17598:	andne	r7, r7, r2
   1759c:	mov	r1, r7
   175a0:	add	r7, r0, r8, lsl #4
   175a4:	add	r3, r8, #1
   175a8:	str	r1, [r7, #12]
   175ac:	ldrb	r6, [r4]
   175b0:	sub	r1, r6, #43	; 0x2b
   175b4:	cmp	r1, #18
   175b8:	bhi	17614 <lchmod@@Base+0x588>
   175bc:	add	r7, pc, #4
   175c0:	mov	r8, r3
   175c4:	ldr	pc, [r7, r1, lsl #2]
   175c8:	andeq	r7, r1, r8, asr #7
   175cc:	andeq	r7, r1, r4, lsl #6
   175d0:	andeq	r7, r1, r8, asr #7
   175d4:	andeq	r7, r1, r0, lsr r6
   175d8:	andeq	r7, r1, r0, lsr r6
   175dc:	andeq	r7, r1, r0, lsr r6
   175e0:	andeq	r7, r1, r0, lsr r6
   175e4:	andeq	r7, r1, r0, lsr r6
   175e8:	andeq	r7, r1, r0, lsr r6
   175ec:	andeq	r7, r1, r0, lsr r6
   175f0:	andeq	r7, r1, r0, lsr r6
   175f4:	andeq	r7, r1, r0, lsr r6
   175f8:	andeq	r7, r1, r0, lsr r6
   175fc:	andeq	r7, r1, r0, lsr r6
   17600:	andeq	r7, r1, r0, lsr r6
   17604:	andeq	r7, r1, r0, lsr r6
   17608:	andeq	r7, r1, r0, lsr r6
   1760c:	andeq	r7, r1, r0, lsr r6
   17610:	andeq	r7, r1, r8, asr #7
   17614:	cmp	r6, #0
   17618:	bne	17630 <lchmod@@Base+0x5a4>
   1761c:	add	r1, r0, r3, lsl #4
   17620:	mov	r2, #0
   17624:	strb	r2, [r1, #1]
   17628:	sub	sp, fp, #28
   1762c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17630:	bl	13370 <__assert_fail@plt+0x18d4>
   17634:	mov	r0, #0
   17638:	sub	sp, fp, #28
   1763c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17640:	push	{r4, sl, fp, lr}
   17644:	add	fp, sp, #8
   17648:	sub	sp, sp, #104	; 0x68
   1764c:	mov	r1, r0
   17650:	mov	r2, sp
   17654:	mov	r0, #3
   17658:	bl	11a24 <__xstat64@plt>
   1765c:	mov	r1, r0
   17660:	mov	r0, #0
   17664:	cmp	r1, #0
   17668:	beq	17674 <lchmod@@Base+0x5e8>
   1766c:	sub	sp, fp, #8
   17670:	pop	{r4, sl, fp, pc}
   17674:	ldr	r4, [sp, #16]
   17678:	mov	r0, #32
   1767c:	bl	1a1d4 <lchmod@@Base+0x3148>
   17680:	movw	r1, #317	; 0x13d
   17684:	strh	r1, [r0]
   17688:	movw	r1, #4095	; 0xfff
   1768c:	stmib	r0, {r1, r4}
   17690:	str	r1, [r0, #12]
   17694:	mov	r1, #0
   17698:	strb	r1, [r0, #17]
   1769c:	sub	sp, fp, #8
   176a0:	pop	{r4, sl, fp, pc}
   176a4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   176a8:	add	fp, sp, #24
   176ac:	ldrb	r4, [r3, #1]
   176b0:	ldr	ip, [fp, #8]
   176b4:	bfc	r0, #12, #20
   176b8:	cmp	r4, #0
   176bc:	beq	177a4 <lchmod@@Base+0x718>
   176c0:	cmp	r1, #0
   176c4:	mov	lr, r1
   176c8:	add	r3, r3, #8
   176cc:	mov	r9, #0
   176d0:	movw	r8, #4095	; 0xfff
   176d4:	movwne	lr, #3072	; 0xc00
   176d8:	mov	r5, r3
   176dc:	ldr	r7, [r3, #-4]
   176e0:	ldr	r3, [r3]
   176e4:	uxtb	r4, r4
   176e8:	ldr	r6, [r5, #4]
   176ec:	cmp	r4, #2
   176f0:	bic	r6, lr, r6
   176f4:	beq	17720 <lchmod@@Base+0x694>
   176f8:	cmp	r4, #3
   176fc:	bne	1772c <lchmod@@Base+0x6a0>
   17700:	and	r4, r3, r0
   17704:	tst	r4, #146	; 0x92
   17708:	mov	r3, r4
   1770c:	orrne	r3, r3, #146	; 0x92
   17710:	tst	r4, #292	; 0x124
   17714:	orrne	r3, r3, #292	; 0x124
   17718:	tst	r4, #73	; 0x49
   1771c:	b	17728 <lchmod@@Base+0x69c>
   17720:	and	r4, r0, #73	; 0x49
   17724:	orrs	r4, r4, r1
   17728:	orrne	r3, r3, #73	; 0x49
   1772c:	cmp	r7, #0
   17730:	mov	r4, r7
   17734:	mvneq	r4, r2
   17738:	bic	r4, r4, r6
   1773c:	and	r3, r4, r3
   17740:	ldrb	r4, [r5, #-8]
   17744:	cmp	r4, #43	; 0x2b
   17748:	beq	17778 <lchmod@@Base+0x6ec>
   1774c:	cmp	r4, #45	; 0x2d
   17750:	beq	17780 <lchmod@@Base+0x6f4>
   17754:	cmp	r4, #61	; 0x3d
   17758:	bne	17788 <lchmod@@Base+0x6fc>
   1775c:	mvn	r4, r7
   17760:	cmp	r7, #0
   17764:	orrne	r6, r6, r4
   17768:	and	r0, r6, r0
   1776c:	orr	r0, r3, r0
   17770:	bic	r3, r8, r6
   17774:	b	17784 <lchmod@@Base+0x6f8>
   17778:	orr	r0, r3, r0
   1777c:	b	17784 <lchmod@@Base+0x6f8>
   17780:	bic	r0, r0, r3
   17784:	orr	r9, r3, r9
   17788:	ldrb	r4, [r5, #9]
   1778c:	add	r3, r5, #16
   17790:	cmp	r4, #0
   17794:	bne	176d8 <lchmod@@Base+0x64c>
   17798:	cmp	ip, #0
   1779c:	strne	r9, [ip]
   177a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   177a4:	mov	r9, #0
   177a8:	cmp	ip, #0
   177ac:	strne	r9, [ip]
   177b0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   177b4:	sub	sp, sp, #4
   177b8:	push	{fp, lr}
   177bc:	mov	fp, sp
   177c0:	sub	sp, sp, #4
   177c4:	str	r3, [fp, #8]
   177c8:	mov	r3, #0
   177cc:	tst	r2, #64	; 0x40
   177d0:	addne	r3, fp, #8
   177d4:	addne	r3, r3, #4
   177d8:	strne	r3, [sp]
   177dc:	ldrne	r3, [fp, #8]
   177e0:	bl	118d4 <openat64@plt>
   177e4:	bl	19ad0 <lchmod@@Base+0x2a44>
   177e8:	mov	sp, fp
   177ec:	pop	{fp, lr}
   177f0:	add	sp, sp, #4
   177f4:	bx	lr
   177f8:	push	{r4, r5, r6, sl, fp, lr}
   177fc:	add	fp, sp, #16
   17800:	orr	r2, r2, #18688	; 0x4900
   17804:	mov	r4, r3
   17808:	orr	r2, r2, #524288	; 0x80000
   1780c:	bl	177b4 <lchmod@@Base+0x728>
   17810:	mov	r5, r0
   17814:	mov	r0, #0
   17818:	cmp	r5, #0
   1781c:	poplt	{r4, r5, r6, sl, fp, pc}
   17820:	mov	r0, r5
   17824:	bl	119a0 <fdopendir@plt>
   17828:	cmp	r0, #0
   1782c:	strne	r5, [r4]
   17830:	popne	{r4, r5, r6, sl, fp, pc}
   17834:	bl	118ec <__errno_location@plt>
   17838:	ldr	r6, [r0]
   1783c:	mov	r4, r0
   17840:	mov	r0, r5
   17844:	bl	11a48 <close@plt>
   17848:	mov	r0, #0
   1784c:	str	r6, [r4]
   17850:	pop	{r4, r5, r6, sl, fp, pc}
   17854:	push	{r4, r5, fp, lr}
   17858:	add	fp, sp, #8
   1785c:	cmp	r0, #0
   17860:	beq	178f4 <lchmod@@Base+0x868>
   17864:	mov	r1, #47	; 0x2f
   17868:	mov	r4, r0
   1786c:	bl	1197c <strrchr@plt>
   17870:	cmp	r0, #0
   17874:	mov	r5, r4
   17878:	addne	r5, r0, #1
   1787c:	sub	r0, r5, r4
   17880:	cmp	r0, #7
   17884:	blt	178d8 <lchmod@@Base+0x84c>
   17888:	movw	r1, #47453	; 0xb95d
   1788c:	sub	r0, r5, #7
   17890:	mov	r2, #7
   17894:	movt	r1, #1
   17898:	bl	11a30 <strncmp@plt>
   1789c:	cmp	r0, #0
   178a0:	bne	178d8 <lchmod@@Base+0x84c>
   178a4:	movw	r1, #47461	; 0xb965
   178a8:	mov	r0, r5
   178ac:	mov	r2, #3
   178b0:	movt	r1, #1
   178b4:	bl	11a30 <strncmp@plt>
   178b8:	cmp	r0, #0
   178bc:	beq	178c8 <lchmod@@Base+0x83c>
   178c0:	mov	r4, r5
   178c4:	b	178d8 <lchmod@@Base+0x84c>
   178c8:	movw	r0, #49600	; 0xc1c0
   178cc:	add	r4, r5, #3
   178d0:	movt	r0, #2
   178d4:	str	r4, [r0]
   178d8:	movw	r0, #49604	; 0xc1c4
   178dc:	movt	r0, #2
   178e0:	str	r4, [r0]
   178e4:	movw	r0, #49640	; 0xc1e8
   178e8:	movt	r0, #2
   178ec:	str	r4, [r0]
   178f0:	pop	{r4, r5, fp, pc}
   178f4:	movw	r0, #49616	; 0xc1d0
   178f8:	mov	r1, #55	; 0x37
   178fc:	mov	r2, #1
   17900:	movt	r0, #2
   17904:	ldr	r3, [r0]
   17908:	movw	r0, #47397	; 0xb925
   1790c:	movt	r0, #1
   17910:	bl	117d8 <fwrite@plt>
   17914:	bl	11a3c <abort@plt>
   17918:	push	{r4, r5, r6, sl, fp, lr}
   1791c:	add	fp, sp, #16
   17920:	mov	r4, r0
   17924:	movw	r0, #49648	; 0xc1f0
   17928:	movt	r0, #2
   1792c:	cmp	r4, #0
   17930:	moveq	r4, r0
   17934:	bl	118ec <__errno_location@plt>
   17938:	ldr	r6, [r0]
   1793c:	mov	r5, r0
   17940:	mov	r0, r4
   17944:	mov	r1, #48	; 0x30
   17948:	bl	1a634 <lchmod@@Base+0x35a8>
   1794c:	str	r6, [r5]
   17950:	pop	{r4, r5, r6, sl, fp, pc}
   17954:	movw	r1, #49648	; 0xc1f0
   17958:	cmp	r0, #0
   1795c:	movt	r1, #2
   17960:	movne	r1, r0
   17964:	ldr	r0, [r1]
   17968:	bx	lr
   1796c:	movw	r2, #49648	; 0xc1f0
   17970:	cmp	r0, #0
   17974:	movt	r2, #2
   17978:	movne	r2, r0
   1797c:	str	r1, [r2]
   17980:	bx	lr
   17984:	movw	r3, #49648	; 0xc1f0
   17988:	cmp	r0, #0
   1798c:	movt	r3, #2
   17990:	movne	r3, r0
   17994:	ubfx	r0, r1, #5, #3
   17998:	and	r1, r1, #31
   1799c:	add	r0, r3, r0, lsl #2
   179a0:	ldr	r3, [r0, #8]
   179a4:	eor	r2, r2, r3, lsr r1
   179a8:	and	r2, r2, #1
   179ac:	eor	r2, r3, r2, lsl r1
   179b0:	str	r2, [r0, #8]
   179b4:	mov	r0, #1
   179b8:	and	r0, r0, r3, lsr r1
   179bc:	bx	lr
   179c0:	movw	r2, #49648	; 0xc1f0
   179c4:	cmp	r0, #0
   179c8:	movt	r2, #2
   179cc:	movne	r2, r0
   179d0:	ldr	r0, [r2, #4]
   179d4:	str	r1, [r2, #4]
   179d8:	bx	lr
   179dc:	movw	r3, #49648	; 0xc1f0
   179e0:	cmp	r0, #0
   179e4:	movt	r3, #2
   179e8:	movne	r3, r0
   179ec:	cmp	r1, #0
   179f0:	mov	r0, #10
   179f4:	cmpne	r2, #0
   179f8:	str	r0, [r3]
   179fc:	bne	17a0c <lchmod@@Base+0x980>
   17a00:	push	{fp, lr}
   17a04:	mov	fp, sp
   17a08:	bl	11a3c <abort@plt>
   17a0c:	str	r1, [r3, #40]	; 0x28
   17a10:	str	r2, [r3, #44]	; 0x2c
   17a14:	bx	lr
   17a18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17a1c:	add	fp, sp, #28
   17a20:	sub	sp, sp, #20
   17a24:	mov	r7, r0
   17a28:	ldr	r0, [fp, #8]
   17a2c:	movw	r5, #49648	; 0xc1f0
   17a30:	mov	r8, r3
   17a34:	mov	r9, r2
   17a38:	mov	sl, r1
   17a3c:	movt	r5, #2
   17a40:	cmp	r0, #0
   17a44:	movne	r5, r0
   17a48:	bl	118ec <__errno_location@plt>
   17a4c:	mov	r4, r0
   17a50:	ldm	r5, {r0, r1}
   17a54:	ldr	r2, [r5, #40]	; 0x28
   17a58:	ldr	r3, [r5, #44]	; 0x2c
   17a5c:	add	r5, r5, #8
   17a60:	ldr	r6, [r4]
   17a64:	stm	sp, {r0, r1, r5}
   17a68:	str	r2, [sp, #12]
   17a6c:	str	r3, [sp, #16]
   17a70:	mov	r0, r7
   17a74:	mov	r1, sl
   17a78:	mov	r2, r9
   17a7c:	mov	r3, r8
   17a80:	bl	17a90 <lchmod@@Base+0xa04>
   17a84:	str	r6, [r4]
   17a88:	sub	sp, fp, #28
   17a8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17a90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17a94:	add	fp, sp, #28
   17a98:	sub	sp, sp, #156	; 0x9c
   17a9c:	str	r0, [sp, #76]	; 0x4c
   17aa0:	ldr	r0, [fp, #12]
   17aa4:	mov	r6, r1
   17aa8:	str	r3, [sp, #84]	; 0x54
   17aac:	str	r2, [fp, #-84]	; 0xffffffac
   17ab0:	and	r1, r0, #4
   17ab4:	str	r1, [sp, #24]
   17ab8:	and	r1, r0, #1
   17abc:	str	r1, [sp, #28]
   17ac0:	ubfx	r8, r0, #1, #1
   17ac4:	bl	117f0 <__ctype_get_mb_cur_max@plt>
   17ac8:	str	r0, [sp, #32]
   17acc:	ldr	r0, [fp, #24]
   17ad0:	ldr	r7, [fp, #8]
   17ad4:	mov	r1, #0
   17ad8:	mov	r2, #0
   17adc:	mov	r4, #1
   17ae0:	str	r1, [sp, #52]	; 0x34
   17ae4:	str	r0, [sp, #72]	; 0x48
   17ae8:	ldr	r0, [fp, #20]
   17aec:	str	r0, [sp, #68]	; 0x44
   17af0:	mov	r0, #0
   17af4:	str	r0, [sp, #48]	; 0x30
   17af8:	mov	r0, #0
   17afc:	str	r0, [sp, #92]	; 0x5c
   17b00:	mov	r0, #0
   17b04:	str	r0, [fp, #-76]	; 0xffffffb4
   17b08:	mov	r0, #0
   17b0c:	cmp	r7, #10
   17b10:	bhi	18df8 <lchmod@@Base+0x1d6c>
   17b14:	add	r1, pc, #28
   17b18:	mov	sl, r6
   17b1c:	ldr	r6, [sp, #76]	; 0x4c
   17b20:	ldr	ip, [fp, #-84]	; 0xffffffac
   17b24:	ldr	lr, [sp, #84]	; 0x54
   17b28:	mov	r9, #0
   17b2c:	mov	r3, #1
   17b30:	mov	r5, #0
   17b34:	ldr	pc, [r1, r7, lsl #2]
   17b38:	andeq	r7, r1, r8, lsl #24
   17b3c:	andeq	r7, r1, r4, asr #24
   17b40:	andeq	r7, r1, r8, lsl ip
   17b44:	andeq	r7, r1, r0, lsl #24
   17b48:	andeq	r7, r1, r8, lsr ip
   17b4c:	andeq	r7, r1, ip, ror #24
   17b50:	andeq	r7, r1, r8, lsr #24
   17b54:	andeq	r7, r1, r8, ror lr
   17b58:	andeq	r7, r1, r4, ror #22
   17b5c:	andeq	r7, r1, r4, ror #22
   17b60:	andeq	r7, r1, ip, lsl #28
   17b64:	mov	r9, r4
   17b68:	movw	r4, #47543	; 0xb9b7
   17b6c:	mov	r5, r8
   17b70:	mov	r8, r2
   17b74:	mov	r0, #0
   17b78:	mov	r2, #5
   17b7c:	movt	r4, #1
   17b80:	mov	r1, r4
   17b84:	bl	11760 <dcgettext@plt>
   17b88:	cmp	r0, r4
   17b8c:	str	r0, [sp, #68]	; 0x44
   17b90:	bne	17d20 <lchmod@@Base+0xc94>
   17b94:	bl	1aef0 <lchmod@@Base+0x3e64>
   17b98:	ldrb	r1, [r0]
   17b9c:	and	r1, r1, #223	; 0xdf
   17ba0:	cmp	r1, #71	; 0x47
   17ba4:	beq	17cec <lchmod@@Base+0xc60>
   17ba8:	cmp	r1, #85	; 0x55
   17bac:	bne	17d04 <lchmod@@Base+0xc78>
   17bb0:	ldrb	r1, [r0, #1]
   17bb4:	and	r1, r1, #223	; 0xdf
   17bb8:	cmp	r1, #84	; 0x54
   17bbc:	bne	17d04 <lchmod@@Base+0xc78>
   17bc0:	ldrb	r1, [r0, #2]
   17bc4:	and	r1, r1, #223	; 0xdf
   17bc8:	cmp	r1, #70	; 0x46
   17bcc:	bne	17d04 <lchmod@@Base+0xc78>
   17bd0:	ldrb	r1, [r0, #3]
   17bd4:	cmp	r1, #45	; 0x2d
   17bd8:	ldrbeq	r1, [r0, #4]
   17bdc:	cmpeq	r1, #56	; 0x38
   17be0:	bne	17d04 <lchmod@@Base+0xc78>
   17be4:	ldrb	r0, [r0, #5]
   17be8:	cmp	r0, #0
   17bec:	movw	r0, #47547	; 0xb9bb
   17bf0:	movt	r0, #1
   17bf4:	str	r0, [sp, #68]	; 0x44
   17bf8:	bne	17d04 <lchmod@@Base+0xc78>
   17bfc:	b	17d20 <lchmod@@Base+0xc94>
   17c00:	mov	r0, #1
   17c04:	b	17c44 <lchmod@@Base+0xbb8>
   17c08:	mov	r7, #0
   17c0c:	mov	r9, #0
   17c10:	mov	r3, r0
   17c14:	b	17ce4 <lchmod@@Base+0xc58>
   17c18:	tst	r8, #1
   17c1c:	bne	17c44 <lchmod@@Base+0xbb8>
   17c20:	mov	r3, r0
   17c24:	b	17c9c <lchmod@@Base+0xc10>
   17c28:	mov	r0, #1
   17c2c:	mov	r9, #0
   17c30:	mov	r7, #5
   17c34:	b	17c80 <lchmod@@Base+0xbf4>
   17c38:	mov	r3, #1
   17c3c:	tst	r8, #1
   17c40:	beq	17c9c <lchmod@@Base+0xc10>
   17c44:	mov	r1, #1
   17c48:	mov	r9, #0
   17c4c:	mov	r7, #2
   17c50:	mov	r3, r0
   17c54:	mov	r5, #1
   17c58:	str	r1, [fp, #-76]	; 0xffffffb4
   17c5c:	movw	r1, #47545	; 0xb9b9
   17c60:	movt	r1, #1
   17c64:	str	r1, [sp, #92]	; 0x5c
   17c68:	b	17e78 <lchmod@@Base+0xdec>
   17c6c:	mov	r7, #5
   17c70:	tst	r8, #1
   17c74:	beq	17cbc <lchmod@@Base+0xc30>
   17c78:	mov	r0, #1
   17c7c:	mov	r9, #0
   17c80:	str	r0, [fp, #-76]	; 0xffffffb4
   17c84:	movw	r0, #47541	; 0xb9b5
   17c88:	mov	r3, #1
   17c8c:	mov	r5, #1
   17c90:	movt	r0, #1
   17c94:	str	r0, [sp, #92]	; 0x5c
   17c98:	b	17e78 <lchmod@@Base+0xdec>
   17c9c:	cmp	sl, #0
   17ca0:	mov	r9, #1
   17ca4:	mov	r7, #2
   17ca8:	movne	r0, #39	; 0x27
   17cac:	strbne	r0, [r6]
   17cb0:	movw	r0, #47545	; 0xb9b9
   17cb4:	movt	r0, #1
   17cb8:	b	17cd8 <lchmod@@Base+0xc4c>
   17cbc:	cmp	sl, #0
   17cc0:	mov	r9, #1
   17cc4:	mov	r3, #1
   17cc8:	movne	r0, #34	; 0x22
   17ccc:	strbne	r0, [r6]
   17cd0:	movw	r0, #47541	; 0xb9b5
   17cd4:	movt	r0, #1
   17cd8:	str	r0, [sp, #92]	; 0x5c
   17cdc:	mov	r0, #1
   17ce0:	str	r0, [fp, #-76]	; 0xffffffb4
   17ce4:	mov	r5, #0
   17ce8:	b	17e78 <lchmod@@Base+0xdec>
   17cec:	ldrb	r1, [r0, #1]
   17cf0:	and	r1, r1, #223	; 0xdf
   17cf4:	cmp	r1, #66	; 0x42
   17cf8:	ldrbeq	r1, [r0, #2]
   17cfc:	cmpeq	r1, #49	; 0x31
   17d00:	beq	18c20 <lchmod@@Base+0x1b94>
   17d04:	movw	r0, #47545	; 0xb9b9
   17d08:	movw	r1, #47541	; 0xb9b5
   17d0c:	cmp	r7, #9
   17d10:	movt	r0, #1
   17d14:	movt	r1, #1
   17d18:	moveq	r0, r1
   17d1c:	str	r0, [sp, #68]	; 0x44
   17d20:	movw	r4, #47545	; 0xb9b9
   17d24:	mov	r0, #0
   17d28:	mov	r2, #5
   17d2c:	movt	r4, #1
   17d30:	mov	r1, r4
   17d34:	bl	11760 <dcgettext@plt>
   17d38:	cmp	r0, r4
   17d3c:	str	r0, [sp, #72]	; 0x48
   17d40:	beq	17d50 <lchmod@@Base+0xcc4>
   17d44:	mov	r4, r9
   17d48:	mov	r2, r8
   17d4c:	b	17e08 <lchmod@@Base+0xd7c>
   17d50:	bl	1aef0 <lchmod@@Base+0x3e64>
   17d54:	ldrb	r1, [r0]
   17d58:	mov	r4, r9
   17d5c:	and	r1, r1, #223	; 0xdf
   17d60:	cmp	r1, #71	; 0x47
   17d64:	beq	17dc0 <lchmod@@Base+0xd34>
   17d68:	cmp	r1, #85	; 0x55
   17d6c:	mov	r2, r8
   17d70:	bne	17de8 <lchmod@@Base+0xd5c>
   17d74:	ldrb	r1, [r0, #1]
   17d78:	and	r1, r1, #223	; 0xdf
   17d7c:	cmp	r1, #84	; 0x54
   17d80:	bne	17de8 <lchmod@@Base+0xd5c>
   17d84:	ldrb	r1, [r0, #2]
   17d88:	and	r1, r1, #223	; 0xdf
   17d8c:	cmp	r1, #70	; 0x46
   17d90:	ldrbeq	r1, [r0, #3]
   17d94:	cmpeq	r1, #45	; 0x2d
   17d98:	bne	17de8 <lchmod@@Base+0xd5c>
   17d9c:	ldrb	r1, [r0, #4]
   17da0:	cmp	r1, #56	; 0x38
   17da4:	ldrbeq	r0, [r0, #5]
   17da8:	cmpeq	r0, #0
   17dac:	bne	17de8 <lchmod@@Base+0xd5c>
   17db0:	movw	r0, #47551	; 0xb9bf
   17db4:	movt	r0, #1
   17db8:	str	r0, [sp, #72]	; 0x48
   17dbc:	b	17e08 <lchmod@@Base+0xd7c>
   17dc0:	ldrb	r1, [r0, #1]
   17dc4:	mov	r2, r8
   17dc8:	and	r1, r1, #223	; 0xdf
   17dcc:	cmp	r1, #66	; 0x42
   17dd0:	bne	17de8 <lchmod@@Base+0xd5c>
   17dd4:	ldrb	r1, [r0, #2]
   17dd8:	cmp	r1, #49	; 0x31
   17ddc:	ldrbeq	r1, [r0, #3]
   17de0:	cmpeq	r1, #56	; 0x38
   17de4:	beq	18c64 <lchmod@@Base+0x1bd8>
   17de8:	movw	r0, #47545	; 0xb9b9
   17dec:	cmp	r7, #9
   17df0:	movt	r0, #1
   17df4:	mov	r1, r0
   17df8:	movw	r0, #47541	; 0xb9b5
   17dfc:	movt	r0, #1
   17e00:	moveq	r1, r0
   17e04:	str	r1, [sp, #72]	; 0x48
   17e08:	mov	r8, r5
   17e0c:	mov	r9, #0
   17e10:	tst	r8, #1
   17e14:	mov	r5, r8
   17e18:	str	r2, [fp, #-48]	; 0xffffffd0
   17e1c:	bne	17e54 <lchmod@@Base+0xdc8>
   17e20:	ldr	r0, [sp, #68]	; 0x44
   17e24:	ldrb	r0, [r0]
   17e28:	cmp	r0, #0
   17e2c:	beq	17e54 <lchmod@@Base+0xdc8>
   17e30:	ldr	r1, [sp, #68]	; 0x44
   17e34:	mov	r9, #0
   17e38:	add	r1, r1, #1
   17e3c:	cmp	r9, sl
   17e40:	strbcc	r0, [r6, r9]
   17e44:	ldrb	r0, [r1, r9]
   17e48:	add	r9, r9, #1
   17e4c:	cmp	r0, #0
   17e50:	bne	17e3c <lchmod@@Base+0xdb0>
   17e54:	ldr	r8, [sp, #72]	; 0x48
   17e58:	mov	r0, r8
   17e5c:	bl	118bc <strlen@plt>
   17e60:	ldr	ip, [fp, #-84]	; 0xffffffac
   17e64:	ldr	lr, [sp, #84]	; 0x54
   17e68:	ldr	r2, [fp, #-48]	; 0xffffffd0
   17e6c:	str	r0, [fp, #-76]	; 0xffffffb4
   17e70:	str	r8, [sp, #92]	; 0x5c
   17e74:	mov	r3, #1
   17e78:	ldr	r0, [fp, #16]
   17e7c:	str	r7, [fp, #-64]	; 0xffffffc0
   17e80:	str	r5, [fp, #-72]	; 0xffffffb8
   17e84:	str	r3, [sp, #80]	; 0x50
   17e88:	cmp	r0, #0
   17e8c:	movwne	r0, #1
   17e90:	and	r0, r0, r5
   17e94:	str	r0, [fp, #-88]	; 0xffffffa8
   17e98:	ldr	r0, [fp, #-76]	; 0xffffffb4
   17e9c:	cmp	r0, #0
   17ea0:	movwne	r0, #1
   17ea4:	subs	r7, r7, #2
   17ea8:	and	r1, r0, r5
   17eac:	str	r7, [fp, #-80]	; 0xffffffb0
   17eb0:	and	r1, r3, r1
   17eb4:	str	r1, [sp, #40]	; 0x28
   17eb8:	clz	r1, r7
   17ebc:	lsr	r1, r1, #5
   17ec0:	and	r1, r1, r5
   17ec4:	eor	r5, r5, #1
   17ec8:	str	r1, [sp, #36]	; 0x24
   17ecc:	mov	r1, r7
   17ed0:	str	r5, [sp, #88]	; 0x58
   17ed4:	mov	r7, #0
   17ed8:	movwne	r1, #1
   17edc:	orr	r5, r1, r5
   17ee0:	and	r1, r1, r3
   17ee4:	and	r0, r0, r1
   17ee8:	str	r5, [sp, #60]	; 0x3c
   17eec:	str	r1, [fp, #-68]	; 0xffffffbc
   17ef0:	str	r0, [fp, #-60]	; 0xffffffc4
   17ef4:	eor	r0, r3, #1
   17ef8:	str	r0, [sp, #44]	; 0x2c
   17efc:	cmn	lr, #1
   17f00:	beq	17f10 <lchmod@@Base+0xe84>
   17f04:	cmp	r7, lr
   17f08:	bne	17f1c <lchmod@@Base+0xe90>
   17f0c:	b	18b94 <lchmod@@Base+0x1b08>
   17f10:	ldrb	r0, [ip, r7]
   17f14:	cmp	r0, #0
   17f18:	beq	18b9c <lchmod@@Base+0x1b10>
   17f1c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   17f20:	mov	r8, #0
   17f24:	str	r4, [fp, #-52]	; 0xffffffcc
   17f28:	str	r2, [fp, #-48]	; 0xffffffd0
   17f2c:	cmp	r0, #0
   17f30:	beq	17f64 <lchmod@@Base+0xed8>
   17f34:	ldr	r0, [fp, #-76]	; 0xffffffb4
   17f38:	add	r4, r7, r0
   17f3c:	cmp	r0, #2
   17f40:	bcc	17f5c <lchmod@@Base+0xed0>
   17f44:	cmn	lr, #1
   17f48:	bne	17f5c <lchmod@@Base+0xed0>
   17f4c:	mov	r0, ip
   17f50:	bl	118bc <strlen@plt>
   17f54:	ldr	ip, [fp, #-84]	; 0xffffffac
   17f58:	mov	lr, r0
   17f5c:	cmp	r4, lr
   17f60:	bls	17f7c <lchmod@@Base+0xef0>
   17f64:	mov	r0, #0
   17f68:	str	r0, [fp, #-56]	; 0xffffffc8
   17f6c:	ldrb	r5, [ip, r7]
   17f70:	cmp	r5, #126	; 0x7e
   17f74:	bls	17fcc <lchmod@@Base+0xf40>
   17f78:	b	183d4 <lchmod@@Base+0x1348>
   17f7c:	ldr	r1, [sp, #92]	; 0x5c
   17f80:	ldr	r2, [fp, #-76]	; 0xffffffb4
   17f84:	add	r0, ip, r7
   17f88:	mov	r4, lr
   17f8c:	bl	11754 <memcmp@plt>
   17f90:	ldr	r2, [sp, #88]	; 0x58
   17f94:	cmp	r0, #0
   17f98:	mov	r1, r0
   17f9c:	movwne	r1, #1
   17fa0:	orr	r1, r1, r2
   17fa4:	tst	r1, #1
   17fa8:	beq	18ca8 <lchmod@@Base+0x1c1c>
   17fac:	ldr	ip, [fp, #-84]	; 0xffffffac
   17fb0:	clz	r0, r0
   17fb4:	mov	lr, r4
   17fb8:	lsr	r0, r0, #5
   17fbc:	str	r0, [fp, #-56]	; 0xffffffc8
   17fc0:	ldrb	r5, [ip, r7]
   17fc4:	cmp	r5, #126	; 0x7e
   17fc8:	bhi	183d4 <lchmod@@Base+0x1348>
   17fcc:	add	r3, pc, #16
   17fd0:	mov	r4, #1
   17fd4:	mov	r2, #110	; 0x6e
   17fd8:	mov	r0, #97	; 0x61
   17fdc:	mov	r1, #0
   17fe0:	ldr	pc, [r3, r5, lsl #2]
   17fe4:			; <UNDEFINED> instruction: 0x000182b4
   17fe8:	ldrdeq	r8, [r1], -r4
   17fec:	ldrdeq	r8, [r1], -r4
   17ff0:	ldrdeq	r8, [r1], -r4
   17ff4:	ldrdeq	r8, [r1], -r4
   17ff8:	ldrdeq	r8, [r1], -r4
   17ffc:	ldrdeq	r8, [r1], -r4
   18000:			; <UNDEFINED> instruction: 0x000184b0
   18004:	muleq	r1, r4, r2
   18008:	andeq	r8, r1, ip, ror r2
   1800c:	andeq	r8, r1, r0, lsr #5
   18010:	andeq	r8, r1, r0, lsr r3
   18014:	andeq	r8, r1, r4, ror r2
   18018:	muleq	r1, ip, r2
   1801c:	ldrdeq	r8, [r1], -r4
   18020:	ldrdeq	r8, [r1], -r4
   18024:	ldrdeq	r8, [r1], -r4
   18028:	ldrdeq	r8, [r1], -r4
   1802c:	ldrdeq	r8, [r1], -r4
   18030:	ldrdeq	r8, [r1], -r4
   18034:	ldrdeq	r8, [r1], -r4
   18038:	ldrdeq	r8, [r1], -r4
   1803c:	ldrdeq	r8, [r1], -r4
   18040:	ldrdeq	r8, [r1], -r4
   18044:	ldrdeq	r8, [r1], -r4
   18048:	ldrdeq	r8, [r1], -r4
   1804c:	ldrdeq	r8, [r1], -r4
   18050:	ldrdeq	r8, [r1], -r4
   18054:	ldrdeq	r8, [r1], -r4
   18058:	ldrdeq	r8, [r1], -r4
   1805c:	ldrdeq	r8, [r1], -r4
   18060:	ldrdeq	r8, [r1], -r4
   18064:	andeq	r8, r1, ip, lsr #8
   18068:	andeq	r8, r1, r0, lsr r4
   1806c:	andeq	r8, r1, r0, lsr r4
   18070:	andeq	r8, r1, r0, lsl #4
   18074:	andeq	r8, r1, r0, lsr r4
   18078:	andeq	r8, r1, r0, ror #3
   1807c:	andeq	r8, r1, r0, lsr r4
   18080:	andeq	r8, r1, r8, lsr r3
   18084:	andeq	r8, r1, r0, lsr r4
   18088:	andeq	r8, r1, r0, lsr r4
   1808c:	andeq	r8, r1, r0, lsr r4
   18090:	andeq	r8, r1, r0, ror #3
   18094:	andeq	r8, r1, r0, ror #3
   18098:	andeq	r8, r1, r0, ror #3
   1809c:	andeq	r8, r1, r0, ror #3
   180a0:	andeq	r8, r1, r0, ror #3
   180a4:	andeq	r8, r1, r0, ror #3
   180a8:	andeq	r8, r1, r0, ror #3
   180ac:	andeq	r8, r1, r0, ror #3
   180b0:	andeq	r8, r1, r0, ror #3
   180b4:	andeq	r8, r1, r0, ror #3
   180b8:	andeq	r8, r1, r0, ror #3
   180bc:	andeq	r8, r1, r0, ror #3
   180c0:	andeq	r8, r1, r0, ror #3
   180c4:	andeq	r8, r1, r0, ror #3
   180c8:	andeq	r8, r1, r0, ror #3
   180cc:	andeq	r8, r1, r0, ror #3
   180d0:	andeq	r8, r1, r0, lsr r4
   180d4:	andeq	r8, r1, r0, lsr r4
   180d8:	andeq	r8, r1, r0, lsr r4
   180dc:	andeq	r8, r1, r0, lsr r4
   180e0:	strdeq	r8, [r1], -r4
   180e4:	ldrdeq	r8, [r1], -r4
   180e8:	andeq	r8, r1, r0, ror #3
   180ec:	andeq	r8, r1, r0, ror #3
   180f0:	andeq	r8, r1, r0, ror #3
   180f4:	andeq	r8, r1, r0, ror #3
   180f8:	andeq	r8, r1, r0, ror #3
   180fc:	andeq	r8, r1, r0, ror #3
   18100:	andeq	r8, r1, r0, ror #3
   18104:	andeq	r8, r1, r0, ror #3
   18108:	andeq	r8, r1, r0, ror #3
   1810c:	andeq	r8, r1, r0, ror #3
   18110:	andeq	r8, r1, r0, ror #3
   18114:	andeq	r8, r1, r0, ror #3
   18118:	andeq	r8, r1, r0, ror #3
   1811c:	andeq	r8, r1, r0, ror #3
   18120:	andeq	r8, r1, r0, ror #3
   18124:	andeq	r8, r1, r0, ror #3
   18128:	andeq	r8, r1, r0, ror #3
   1812c:	andeq	r8, r1, r0, ror #3
   18130:	andeq	r8, r1, r0, ror #3
   18134:	andeq	r8, r1, r0, ror #3
   18138:	andeq	r8, r1, r0, ror #3
   1813c:	andeq	r8, r1, r0, ror #3
   18140:	andeq	r8, r1, r0, ror #3
   18144:	andeq	r8, r1, r0, ror #3
   18148:	andeq	r8, r1, r0, ror #3
   1814c:	andeq	r8, r1, r0, ror #3
   18150:	andeq	r8, r1, r0, lsr r4
   18154:	andeq	r8, r1, r0, asr #4
   18158:	andeq	r8, r1, r0, ror #3
   1815c:	andeq	r8, r1, r0, lsr r4
   18160:	andeq	r8, r1, r0, ror #3
   18164:	andeq	r8, r1, r0, lsr r4
   18168:	andeq	r8, r1, r0, ror #3
   1816c:	andeq	r8, r1, r0, ror #3
   18170:	andeq	r8, r1, r0, ror #3
   18174:	andeq	r8, r1, r0, ror #3
   18178:	andeq	r8, r1, r0, ror #3
   1817c:	andeq	r8, r1, r0, ror #3
   18180:	andeq	r8, r1, r0, ror #3
   18184:	andeq	r8, r1, r0, ror #3
   18188:	andeq	r8, r1, r0, ror #3
   1818c:	andeq	r8, r1, r0, ror #3
   18190:	andeq	r8, r1, r0, ror #3
   18194:	andeq	r8, r1, r0, ror #3
   18198:	andeq	r8, r1, r0, ror #3
   1819c:	andeq	r8, r1, r0, ror #3
   181a0:	andeq	r8, r1, r0, ror #3
   181a4:	andeq	r8, r1, r0, ror #3
   181a8:	andeq	r8, r1, r0, ror #3
   181ac:	andeq	r8, r1, r0, ror #3
   181b0:	andeq	r8, r1, r0, ror #3
   181b4:	andeq	r8, r1, r0, ror #3
   181b8:	andeq	r8, r1, r0, ror #3
   181bc:	andeq	r8, r1, r0, ror #3
   181c0:	andeq	r8, r1, r0, ror #3
   181c4:	andeq	r8, r1, r0, ror #3
   181c8:	andeq	r8, r1, r0, ror #3
   181cc:	andeq	r8, r1, r0, ror #3
   181d0:	andeq	r8, r1, r0, lsr #4
   181d4:	andeq	r8, r1, r0, lsr r4
   181d8:	andeq	r8, r1, r0, lsr #4
   181dc:	andeq	r8, r1, r0, lsl #4
   181e0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   181e4:	cmp	r0, #0
   181e8:	beq	184c4 <lchmod@@Base+0x1438>
   181ec:	ldr	r0, [fp, #16]
   181f0:	cmp	r0, #0
   181f4:	mov	r0, r5
   181f8:	bne	184d4 <lchmod@@Base+0x1448>
   181fc:	b	184f4 <lchmod@@Base+0x1468>
   18200:	mov	r4, #0
   18204:	cmp	r7, #0
   18208:	beq	1842c <lchmod@@Base+0x13a0>
   1820c:	mov	r8, #0
   18210:	ldr	r0, [fp, #-68]	; 0xffffffbc
   18214:	cmp	r0, #0
   18218:	bne	181ec <lchmod@@Base+0x1160>
   1821c:	b	184c4 <lchmod@@Base+0x1438>
   18220:	mov	r4, #0
   18224:	cmn	lr, #1
   18228:	beq	18404 <lchmod@@Base+0x1378>
   1822c:	cmp	r7, #0
   18230:	bne	1820c <lchmod@@Base+0x1180>
   18234:	cmp	lr, #1
   18238:	beq	1842c <lchmod@@Base+0x13a0>
   1823c:	b	1820c <lchmod@@Base+0x1180>
   18240:	ldr	r0, [fp, #-64]	; 0xffffffc0
   18244:	cmp	r0, #2
   18248:	bne	1845c <lchmod@@Base+0x13d0>
   1824c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   18250:	tst	r0, #1
   18254:	bne	18cbc <lchmod@@Base+0x1c30>
   18258:	mov	r8, #0
   1825c:	mov	r0, #92	; 0x5c
   18260:	mov	r4, #0
   18264:	cmp	r8, #0
   18268:	beq	1847c <lchmod@@Base+0x13f0>
   1826c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   18270:	b	18570 <lchmod@@Base+0x14e4>
   18274:	mov	r0, #102	; 0x66
   18278:	b	184b0 <lchmod@@Base+0x1424>
   1827c:	mov	r2, #116	; 0x74
   18280:	ldr	r0, [sp, #60]	; 0x3c
   18284:	tst	r0, #1
   18288:	mov	r0, r2
   1828c:	bne	184b0 <lchmod@@Base+0x1424>
   18290:	b	18cbc <lchmod@@Base+0x1c30>
   18294:	mov	r0, #98	; 0x62
   18298:	b	184b0 <lchmod@@Base+0x1424>
   1829c:	mov	r2, #114	; 0x72
   182a0:	ldr	r0, [sp, #60]	; 0x3c
   182a4:	tst	r0, #1
   182a8:	mov	r0, r2
   182ac:	bne	184b0 <lchmod@@Base+0x1424>
   182b0:	b	18cbc <lchmod@@Base+0x1c30>
   182b4:	ldr	r0, [sp, #80]	; 0x50
   182b8:	tst	r0, #1
   182bc:	beq	18598 <lchmod@@Base+0x150c>
   182c0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   182c4:	tst	r0, #1
   182c8:	bne	18de4 <lchmod@@Base+0x1d58>
   182cc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   182d0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   182d4:	cmp	r0, #2
   182d8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   182dc:	movwne	r0, #1
   182e0:	orr	r0, r0, r2
   182e4:	tst	r0, #1
   182e8:	beq	18890 <lchmod@@Base+0x1804>
   182ec:	mov	r0, r9
   182f0:	b	188c4 <lchmod@@Base+0x1838>
   182f4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   182f8:	mov	r8, #0
   182fc:	mov	r5, #63	; 0x3f
   18300:	cmp	r0, #5
   18304:	beq	1874c <lchmod@@Base+0x16c0>
   18308:	cmp	r0, #2
   1830c:	bne	187fc <lchmod@@Base+0x1770>
   18310:	ldr	r0, [fp, #-72]	; 0xffffffb8
   18314:	tst	r0, #1
   18318:	bne	18cbc <lchmod@@Base+0x1c30>
   1831c:	mov	r4, #0
   18320:	ldr	r0, [fp, #-68]	; 0xffffffbc
   18324:	cmp	r0, #0
   18328:	bne	181ec <lchmod@@Base+0x1160>
   1832c:	b	184c4 <lchmod@@Base+0x1438>
   18330:	mov	r0, #118	; 0x76
   18334:	b	184b0 <lchmod@@Base+0x1424>
   18338:	mov	r0, #1
   1833c:	mov	r5, #39	; 0x27
   18340:	str	r0, [sp, #52]	; 0x34
   18344:	ldr	r0, [fp, #-64]	; 0xffffffc0
   18348:	cmp	r0, #2
   1834c:	bne	183c0 <lchmod@@Base+0x1334>
   18350:	ldr	r0, [fp, #-72]	; 0xffffffb8
   18354:	tst	r0, #1
   18358:	bne	18cbc <lchmod@@Base+0x1c30>
   1835c:	ldr	r2, [sp, #48]	; 0x30
   18360:	clz	r1, sl
   18364:	mov	r8, #0
   18368:	lsr	r1, r1, #5
   1836c:	cmp	r2, #0
   18370:	mov	r0, r2
   18374:	movwne	r0, #1
   18378:	orrs	r0, r0, r1
   1837c:	moveq	r2, sl
   18380:	moveq	sl, r0
   18384:	cmp	r9, sl
   18388:	str	r2, [sp, #48]	; 0x30
   1838c:	movcc	r0, #39	; 0x27
   18390:	strbcc	r0, [r6, r9]
   18394:	add	r0, r9, #1
   18398:	cmp	r0, sl
   1839c:	movcc	r1, #92	; 0x5c
   183a0:	strbcc	r1, [r6, r0]
   183a4:	add	r0, r9, #2
   183a8:	add	r9, r9, #3
   183ac:	cmp	r0, sl
   183b0:	movcc	r1, #39	; 0x27
   183b4:	strbcc	r1, [r6, r0]
   183b8:	mov	r0, #0
   183bc:	str	r0, [fp, #-48]	; 0xffffffd0
   183c0:	mov	r4, #1
   183c4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   183c8:	cmp	r0, #0
   183cc:	bne	181ec <lchmod@@Base+0x1160>
   183d0:	b	184c4 <lchmod@@Base+0x1438>
   183d4:	ldr	r0, [sp, #32]
   183d8:	cmp	r0, #1
   183dc:	bne	185c8 <lchmod@@Base+0x153c>
   183e0:	str	lr, [sp, #84]	; 0x54
   183e4:	bl	1188c <__ctype_b_loc@plt>
   183e8:	ldr	r0, [r0]
   183ec:	ldr	ip, [fp, #-84]	; 0xffffffac
   183f0:	mov	r1, #1
   183f4:	add	r0, r0, r5, lsl #1
   183f8:	ldrb	r0, [r0, #1]
   183fc:	ubfx	r4, r0, #6, #1
   18400:	b	189c0 <lchmod@@Base+0x1934>
   18404:	cmp	r7, #0
   18408:	ldrbeq	r0, [ip, #1]
   1840c:	cmpeq	r0, #0
   18410:	beq	1842c <lchmod@@Base+0x13a0>
   18414:	mvn	lr, #0
   18418:	mov	r8, #0
   1841c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   18420:	cmp	r0, #0
   18424:	bne	181ec <lchmod@@Base+0x1160>
   18428:	b	184c4 <lchmod@@Base+0x1438>
   1842c:	mov	r1, #1
   18430:	ldr	r0, [fp, #-64]	; 0xffffffc0
   18434:	cmp	r0, #2
   18438:	bne	18448 <lchmod@@Base+0x13bc>
   1843c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   18440:	tst	r0, #1
   18444:	bne	18cbc <lchmod@@Base+0x1c30>
   18448:	mov	r4, r1
   1844c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   18450:	cmp	r0, #0
   18454:	bne	181ec <lchmod@@Base+0x1160>
   18458:	b	184c4 <lchmod@@Base+0x1438>
   1845c:	ldr	r1, [sp, #40]	; 0x28
   18460:	mov	r8, #0
   18464:	mov	r0, #92	; 0x5c
   18468:	cmp	r1, #0
   1846c:	beq	184b0 <lchmod@@Base+0x1424>
   18470:	mov	r4, #0
   18474:	cmp	r8, #0
   18478:	bne	1826c <lchmod@@Base+0x11e0>
   1847c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   18480:	tst	r2, #1
   18484:	beq	18570 <lchmod@@Base+0x14e4>
   18488:	cmp	r9, sl
   1848c:	movcc	r1, #39	; 0x27
   18490:	strbcc	r1, [r6, r9]
   18494:	add	r1, r9, #1
   18498:	add	r9, r9, #2
   1849c:	cmp	r1, sl
   184a0:	movcc	r2, #39	; 0x27
   184a4:	strbcc	r2, [r6, r1]
   184a8:	mov	r2, #0
   184ac:	b	18570 <lchmod@@Base+0x14e4>
   184b0:	ldr	r1, [sp, #80]	; 0x50
   184b4:	mov	r4, #0
   184b8:	mov	r8, #0
   184bc:	tst	r1, #1
   184c0:	bne	18500 <lchmod@@Base+0x1474>
   184c4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   184c8:	cmp	r0, #0
   184cc:	mov	r0, r5
   184d0:	beq	184f4 <lchmod@@Base+0x1468>
   184d4:	ldr	r1, [fp, #16]
   184d8:	ubfx	r0, r5, #5, #3
   184dc:	mov	r2, #1
   184e0:	ldr	r0, [r1, r0, lsl #2]
   184e4:	and	r1, r5, #31
   184e8:	tst	r0, r2, lsl r1
   184ec:	mov	r0, r5
   184f0:	bne	18500 <lchmod@@Base+0x1474>
   184f4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   184f8:	cmp	r1, #0
   184fc:	beq	18958 <lchmod@@Base+0x18cc>
   18500:	ldr	r1, [fp, #-72]	; 0xffffffb8
   18504:	tst	r1, #1
   18508:	bne	18c9c <lchmod@@Base+0x1c10>
   1850c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   18510:	ldr	r2, [fp, #-48]	; 0xffffffd0
   18514:	cmp	r1, #2
   18518:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1851c:	movwne	r1, #1
   18520:	orr	r1, r1, r2
   18524:	tst	r1, #1
   18528:	bne	18560 <lchmod@@Base+0x14d4>
   1852c:	cmp	r9, sl
   18530:	movcc	r1, #39	; 0x27
   18534:	strbcc	r1, [r6, r9]
   18538:	add	r1, r9, #1
   1853c:	cmp	r1, sl
   18540:	movcc	r2, #36	; 0x24
   18544:	strbcc	r2, [r6, r1]
   18548:	add	r1, r9, #2
   1854c:	add	r9, r9, #3
   18550:	cmp	r1, sl
   18554:	movcc	r2, #39	; 0x27
   18558:	strbcc	r2, [r6, r1]
   1855c:	mov	r2, #1
   18560:	cmp	r9, sl
   18564:	movcc	r1, #92	; 0x5c
   18568:	strbcc	r1, [r6, r9]
   1856c:	add	r9, r9, #1
   18570:	cmp	r9, sl
   18574:	add	r7, r7, #1
   18578:	strbcc	r0, [r6, r9]
   1857c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18580:	add	r9, r9, #1
   18584:	and	r0, r0, r4
   18588:	mov	r4, r0
   1858c:	cmn	lr, #1
   18590:	bne	17f04 <lchmod@@Base+0xe78>
   18594:	b	17f10 <lchmod@@Base+0xe84>
   18598:	ldr	r0, [sp, #28]
   1859c:	mov	r4, #0
   185a0:	mov	r8, #0
   185a4:	mov	r5, #0
   185a8:	cmp	r0, #0
   185ac:	beq	184c4 <lchmod@@Base+0x1438>
   185b0:	ldr	r4, [fp, #-52]	; 0xffffffcc
   185b4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   185b8:	add	r7, r7, #1
   185bc:	cmn	lr, #1
   185c0:	bne	17f04 <lchmod@@Base+0xe78>
   185c4:	b	17f10 <lchmod@@Base+0xe84>
   185c8:	mov	r0, #0
   185cc:	cmn	lr, #1
   185d0:	str	r0, [fp, #-36]	; 0xffffffdc
   185d4:	str	r0, [fp, #-40]	; 0xffffffd8
   185d8:	bne	185ec <lchmod@@Base+0x1560>
   185dc:	mov	r0, ip
   185e0:	bl	118bc <strlen@plt>
   185e4:	ldr	ip, [fp, #-84]	; 0xffffffac
   185e8:	mov	lr, r0
   185ec:	ldr	r0, [sp, #36]	; 0x24
   185f0:	str	sl, [sp, #56]	; 0x38
   185f4:	str	lr, [sp, #84]	; 0x54
   185f8:	cmp	r0, #0
   185fc:	beq	18814 <lchmod@@Base+0x1788>
   18600:	add	r0, ip, r7
   18604:	mov	r4, #1
   18608:	mov	r6, #0
   1860c:	sub	sl, fp, #40	; 0x28
   18610:	str	r0, [sp, #20]
   18614:	str	r6, [sp, #64]	; 0x40
   18618:	add	r6, r6, r7
   1861c:	sub	r0, fp, #44	; 0x2c
   18620:	mov	r3, sl
   18624:	add	r1, ip, r6
   18628:	sub	r2, lr, r6
   1862c:	bl	1af28 <lchmod@@Base+0x3e9c>
   18630:	cmn	r0, #2
   18634:	beq	18970 <lchmod@@Base+0x18e4>
   18638:	ldr	sl, [sp, #56]	; 0x38
   1863c:	cmn	r0, #1
   18640:	beq	18964 <lchmod@@Base+0x18d8>
   18644:	cmp	r0, #0
   18648:	beq	18968 <lchmod@@Base+0x18dc>
   1864c:	cmp	r0, #2
   18650:	bcc	18710 <lchmod@@Base+0x1684>
   18654:	ldr	r1, [sp, #64]	; 0x40
   18658:	ldr	r2, [sp, #20]
   1865c:	add	r1, r2, r1
   18660:	mov	r2, #1
   18664:	ldrb	r3, [r1, r2]
   18668:	sub	r3, r3, #91	; 0x5b
   1866c:	cmp	r3, #33	; 0x21
   18670:	bhi	18704 <lchmod@@Base+0x1678>
   18674:	add	r6, pc, #0
   18678:	ldr	pc, [r6, r3, lsl #2]
   1867c:	andeq	r8, r1, r8, asr #25
   18680:	andeq	r8, r1, r8, asr #25
   18684:	andeq	r8, r1, r4, lsl #14
   18688:	andeq	r8, r1, r8, asr #25
   1868c:	andeq	r8, r1, r4, lsl #14
   18690:	andeq	r8, r1, r8, asr #25
   18694:	andeq	r8, r1, r4, lsl #14
   18698:	andeq	r8, r1, r4, lsl #14
   1869c:	andeq	r8, r1, r4, lsl #14
   186a0:	andeq	r8, r1, r4, lsl #14
   186a4:	andeq	r8, r1, r4, lsl #14
   186a8:	andeq	r8, r1, r4, lsl #14
   186ac:	andeq	r8, r1, r4, lsl #14
   186b0:	andeq	r8, r1, r4, lsl #14
   186b4:	andeq	r8, r1, r4, lsl #14
   186b8:	andeq	r8, r1, r4, lsl #14
   186bc:	andeq	r8, r1, r4, lsl #14
   186c0:	andeq	r8, r1, r4, lsl #14
   186c4:	andeq	r8, r1, r4, lsl #14
   186c8:	andeq	r8, r1, r4, lsl #14
   186cc:	andeq	r8, r1, r4, lsl #14
   186d0:	andeq	r8, r1, r4, lsl #14
   186d4:	andeq	r8, r1, r4, lsl #14
   186d8:	andeq	r8, r1, r4, lsl #14
   186dc:	andeq	r8, r1, r4, lsl #14
   186e0:	andeq	r8, r1, r4, lsl #14
   186e4:	andeq	r8, r1, r4, lsl #14
   186e8:	andeq	r8, r1, r4, lsl #14
   186ec:	andeq	r8, r1, r4, lsl #14
   186f0:	andeq	r8, r1, r4, lsl #14
   186f4:	andeq	r8, r1, r4, lsl #14
   186f8:	andeq	r8, r1, r4, lsl #14
   186fc:	andeq	r8, r1, r4, lsl #14
   18700:	andeq	r8, r1, r8, asr #25
   18704:	add	r2, r2, #1
   18708:	cmp	r2, r0
   1870c:	bcc	18664 <lchmod@@Base+0x15d8>
   18710:	ldr	r6, [sp, #64]	; 0x40
   18714:	add	r6, r0, r6
   18718:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1871c:	bl	117b4 <iswprint@plt>
   18720:	cmp	r0, #0
   18724:	sub	sl, fp, #40	; 0x28
   18728:	movwne	r0, #1
   1872c:	and	r4, r4, r0
   18730:	mov	r0, sl
   18734:	bl	1173c <mbsinit@plt>
   18738:	ldr	ip, [fp, #-84]	; 0xffffffac
   1873c:	ldr	lr, [sp, #84]	; 0x54
   18740:	cmp	r0, #0
   18744:	beq	18614 <lchmod@@Base+0x1588>
   18748:	b	189b4 <lchmod@@Base+0x1928>
   1874c:	ldr	r0, [sp, #24]
   18750:	cmp	r0, #0
   18754:	beq	187fc <lchmod@@Base+0x1770>
   18758:	add	r0, r7, #2
   1875c:	cmp	r0, lr
   18760:	bcs	187fc <lchmod@@Base+0x1770>
   18764:	add	r1, ip, r7
   18768:	ldrb	r1, [r1, #1]
   1876c:	cmp	r1, #63	; 0x3f
   18770:	bne	187fc <lchmod@@Base+0x1770>
   18774:	ldrb	r5, [ip, r0]
   18778:	sub	r1, r5, #33	; 0x21
   1877c:	cmp	r1, #29
   18780:	bhi	187fc <lchmod@@Base+0x1770>
   18784:	movw	r3, #20929	; 0x51c1
   18788:	mov	r2, #1
   1878c:	movt	r3, #14336	; 0x3800
   18790:	tst	r3, r2, lsl r1
   18794:	beq	187fc <lchmod@@Base+0x1770>
   18798:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1879c:	tst	r1, #1
   187a0:	bne	18dec <lchmod@@Base+0x1d60>
   187a4:	cmp	r9, sl
   187a8:	mov	r7, r0
   187ac:	mov	r4, #0
   187b0:	movcc	r1, #63	; 0x3f
   187b4:	strbcc	r1, [r6, r9]
   187b8:	add	r1, r9, #1
   187bc:	cmp	r1, sl
   187c0:	movcc	r2, #34	; 0x22
   187c4:	strbcc	r2, [r6, r1]
   187c8:	add	r1, r9, #2
   187cc:	cmp	r1, sl
   187d0:	movcc	r2, #34	; 0x22
   187d4:	strbcc	r2, [r6, r1]
   187d8:	add	r1, r9, #3
   187dc:	add	r9, r9, #4
   187e0:	cmp	r1, sl
   187e4:	movcc	r2, #63	; 0x3f
   187e8:	strbcc	r2, [r6, r1]
   187ec:	ldr	r0, [fp, #-68]	; 0xffffffbc
   187f0:	cmp	r0, #0
   187f4:	bne	181ec <lchmod@@Base+0x1160>
   187f8:	b	184c4 <lchmod@@Base+0x1438>
   187fc:	mov	r5, #63	; 0x3f
   18800:	mov	r4, #0
   18804:	ldr	r0, [fp, #-68]	; 0xffffffbc
   18808:	cmp	r0, #0
   1880c:	bne	181ec <lchmod@@Base+0x1160>
   18810:	b	184c4 <lchmod@@Base+0x1438>
   18814:	mov	r4, #1
   18818:	mov	r6, #0
   1881c:	sub	sl, fp, #40	; 0x28
   18820:	str	r6, [sp, #64]	; 0x40
   18824:	add	r6, r6, r7
   18828:	sub	r0, fp, #44	; 0x2c
   1882c:	mov	r3, sl
   18830:	add	r1, ip, r6
   18834:	sub	r2, lr, r6
   18838:	bl	1af28 <lchmod@@Base+0x3e9c>
   1883c:	cmn	r0, #2
   18840:	beq	18970 <lchmod@@Base+0x18e4>
   18844:	cmn	r0, #1
   18848:	beq	18964 <lchmod@@Base+0x18d8>
   1884c:	ldr	r6, [sp, #64]	; 0x40
   18850:	cmp	r0, #0
   18854:	beq	189b0 <lchmod@@Base+0x1924>
   18858:	add	r6, r0, r6
   1885c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18860:	bl	117b4 <iswprint@plt>
   18864:	cmp	r0, #0
   18868:	sub	sl, fp, #40	; 0x28
   1886c:	movwne	r0, #1
   18870:	and	r4, r4, r0
   18874:	mov	r0, sl
   18878:	bl	1173c <mbsinit@plt>
   1887c:	ldr	ip, [fp, #-84]	; 0xffffffac
   18880:	ldr	lr, [sp, #84]	; 0x54
   18884:	cmp	r0, #0
   18888:	beq	18820 <lchmod@@Base+0x1794>
   1888c:	b	189b4 <lchmod@@Base+0x1928>
   18890:	cmp	r9, sl
   18894:	mov	r2, #1
   18898:	movcc	r0, #39	; 0x27
   1889c:	strbcc	r0, [r6, r9]
   188a0:	add	r0, r9, #1
   188a4:	cmp	r0, sl
   188a8:	movcc	r1, #36	; 0x24
   188ac:	strbcc	r1, [r6, r0]
   188b0:	add	r0, r9, #2
   188b4:	cmp	r0, sl
   188b8:	movcc	r1, #39	; 0x27
   188bc:	strbcc	r1, [r6, r0]
   188c0:	add	r0, r9, #3
   188c4:	cmp	r0, sl
   188c8:	add	r9, r0, #1
   188cc:	str	r2, [fp, #-48]	; 0xffffffd0
   188d0:	movcc	r1, #92	; 0x5c
   188d4:	strbcc	r1, [r6, r0]
   188d8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   188dc:	cmp	r1, #2
   188e0:	beq	18940 <lchmod@@Base+0x18b4>
   188e4:	add	r1, r7, #1
   188e8:	mov	r4, #0
   188ec:	mov	r8, #1
   188f0:	mov	r5, #48	; 0x30
   188f4:	cmp	r1, lr
   188f8:	bcs	181e0 <lchmod@@Base+0x1154>
   188fc:	ldrb	r1, [ip, r1]
   18900:	sub	r1, r1, #48	; 0x30
   18904:	uxtb	r1, r1
   18908:	cmp	r1, #9
   1890c:	bhi	181e0 <lchmod@@Base+0x1154>
   18910:	cmp	r9, sl
   18914:	movcc	r1, #48	; 0x30
   18918:	strbcc	r1, [r6, r9]
   1891c:	add	r1, r0, #2
   18920:	add	r9, r0, #3
   18924:	cmp	r1, sl
   18928:	movcc	r2, #48	; 0x30
   1892c:	strbcc	r2, [r6, r1]
   18930:	ldr	r0, [fp, #-68]	; 0xffffffbc
   18934:	cmp	r0, #0
   18938:	bne	181ec <lchmod@@Base+0x1160>
   1893c:	b	184c4 <lchmod@@Base+0x1438>
   18940:	mov	r0, #48	; 0x30
   18944:	mov	r8, #1
   18948:	mov	r4, #0
   1894c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   18950:	cmp	r1, #0
   18954:	bne	18500 <lchmod@@Base+0x1474>
   18958:	cmp	r8, #0
   1895c:	beq	1847c <lchmod@@Base+0x13f0>
   18960:	b	1826c <lchmod@@Base+0x11e0>
   18964:	mov	r4, #0
   18968:	ldr	ip, [fp, #-84]	; 0xffffffac
   1896c:	b	189a8 <lchmod@@Base+0x191c>
   18970:	ldr	r1, [sp, #84]	; 0x54
   18974:	ldr	ip, [fp, #-84]	; 0xffffffac
   18978:	mov	r4, #0
   1897c:	cmp	r6, r1
   18980:	bcs	189a8 <lchmod@@Base+0x191c>
   18984:	ldrb	r0, [ip, r6]
   18988:	cmp	r0, #0
   1898c:	beq	189a8 <lchmod@@Base+0x191c>
   18990:	ldr	r0, [sp, #64]	; 0x40
   18994:	add	r0, r0, #1
   18998:	add	r6, r0, r7
   1899c:	str	r0, [sp, #64]	; 0x40
   189a0:	cmp	r6, r1
   189a4:	bcc	18984 <lchmod@@Base+0x18f8>
   189a8:	ldr	r6, [sp, #64]	; 0x40
   189ac:	b	189b4 <lchmod@@Base+0x1928>
   189b0:	ldr	ip, [fp, #-84]	; 0xffffffac
   189b4:	mov	r1, r6
   189b8:	ldr	r6, [sp, #76]	; 0x4c
   189bc:	ldr	sl, [sp, #56]	; 0x38
   189c0:	ldr	r0, [sp, #44]	; 0x2c
   189c4:	cmp	r1, #1
   189c8:	orr	r2, r4, r0
   189cc:	mov	r0, r1
   189d0:	bhi	189f0 <lchmod@@Base+0x1964>
   189d4:	tst	r2, #1
   189d8:	beq	189f0 <lchmod@@Base+0x1964>
   189dc:	ldr	lr, [sp, #84]	; 0x54
   189e0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   189e4:	cmp	r0, #0
   189e8:	bne	181ec <lchmod@@Base+0x1160>
   189ec:	b	184c4 <lchmod@@Base+0x1438>
   189f0:	str	r2, [sp, #64]	; 0x40
   189f4:	add	r0, r0, r7
   189f8:	add	r1, r7, #1
   189fc:	ldr	lr, [sp, #84]	; 0x54
   18a00:	ldr	r7, [fp, #-64]	; 0xffffffc0
   18a04:	ldr	r2, [fp, #-48]	; 0xffffffd0
   18a08:	mov	r3, #0
   18a0c:	str	r0, [sp, #56]	; 0x38
   18a10:	ldr	r0, [sp, #64]	; 0x40
   18a14:	tst	r0, #1
   18a18:	bne	18b00 <lchmod@@Base+0x1a74>
   18a1c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   18a20:	tst	r0, #1
   18a24:	bne	18ca0 <lchmod@@Base+0x1c14>
   18a28:	ldr	r3, [fp, #-80]	; 0xffffffb0
   18a2c:	cmp	r7, #2
   18a30:	movwne	r3, #1
   18a34:	orr	r3, r3, r2
   18a38:	tst	r3, #1
   18a3c:	bne	18a74 <lchmod@@Base+0x19e8>
   18a40:	cmp	r9, sl
   18a44:	add	r3, r9, #1
   18a48:	movcc	r2, #39	; 0x27
   18a4c:	strbcc	r2, [r6, r9]
   18a50:	cmp	r3, sl
   18a54:	movcc	r2, #36	; 0x24
   18a58:	strbcc	r2, [r6, r3]
   18a5c:	add	r3, r9, #2
   18a60:	add	r9, r9, #3
   18a64:	cmp	r3, sl
   18a68:	movcc	r2, #39	; 0x27
   18a6c:	strbcc	r2, [r6, r3]
   18a70:	mov	r2, #1
   18a74:	cmp	r9, sl
   18a78:	mov	r0, r2
   18a7c:	movcc	r3, #92	; 0x5c
   18a80:	strbcc	r3, [r6, r9]
   18a84:	add	r3, r9, #1
   18a88:	cmp	r3, sl
   18a8c:	andcc	r7, r5, #192	; 0xc0
   18a90:	movcc	r2, #48	; 0x30
   18a94:	orrcc	r7, r2, r7, lsr #6
   18a98:	strbcc	r7, [r6, r3]
   18a9c:	add	r3, r9, #2
   18aa0:	add	r9, r9, #3
   18aa4:	cmp	r3, sl
   18aa8:	lsrcc	r7, r5, #3
   18aac:	movcc	r2, #6
   18ab0:	bficc	r7, r2, #3, #29
   18ab4:	mov	r2, #6
   18ab8:	strbcc	r7, [r6, r3]
   18abc:	bfi	r5, r2, #3, #29
   18ac0:	mov	r3, #1
   18ac4:	mov	r2, r0
   18ac8:	ldr	r0, [sp, #56]	; 0x38
   18acc:	and	r8, r3, #1
   18ad0:	cmp	r0, r1
   18ad4:	bhi	18b34 <lchmod@@Base+0x1aa8>
   18ad8:	b	18b74 <lchmod@@Base+0x1ae8>
   18adc:	cmp	r9, sl
   18ae0:	ldr	r7, [fp, #-64]	; 0xffffffc0
   18ae4:	strbcc	r5, [r6, r9]
   18ae8:	add	r9, r9, #1
   18aec:	ldrb	r5, [ip, r1]
   18af0:	add	r1, r1, #1
   18af4:	ldr	r0, [sp, #64]	; 0x40
   18af8:	tst	r0, #1
   18afc:	beq	18a1c <lchmod@@Base+0x1990>
   18b00:	ldr	r7, [fp, #-56]	; 0xffffffc8
   18b04:	tst	r7, #1
   18b08:	beq	18b1c <lchmod@@Base+0x1a90>
   18b0c:	cmp	r9, sl
   18b10:	movcc	r7, #92	; 0x5c
   18b14:	strbcc	r7, [r6, r9]
   18b18:	add	r9, r9, #1
   18b1c:	mov	r7, #0
   18b20:	str	r7, [fp, #-56]	; 0xffffffc8
   18b24:	ldr	r0, [sp, #56]	; 0x38
   18b28:	and	r8, r3, #1
   18b2c:	cmp	r0, r1
   18b30:	bls	18b74 <lchmod@@Base+0x1ae8>
   18b34:	cmp	r8, #0
   18b38:	mvn	r7, r2
   18b3c:	movwne	r8, #1
   18b40:	orr	r7, r7, r8
   18b44:	tst	r7, #1
   18b48:	bne	18adc <lchmod@@Base+0x1a50>
   18b4c:	cmp	r9, sl
   18b50:	movcc	r7, #39	; 0x27
   18b54:	strbcc	r7, [r6, r9]
   18b58:	add	r7, r9, #1
   18b5c:	add	r9, r9, #2
   18b60:	cmp	r7, sl
   18b64:	movcc	r2, #39	; 0x27
   18b68:	strbcc	r2, [r6, r7]
   18b6c:	mov	r2, #0
   18b70:	b	18adc <lchmod@@Base+0x1a50>
   18b74:	cmp	r8, #0
   18b78:	sub	r7, r1, #1
   18b7c:	mov	r0, r5
   18b80:	str	r2, [fp, #-48]	; 0xffffffd0
   18b84:	movwne	r8, #1
   18b88:	cmp	r8, #0
   18b8c:	beq	1847c <lchmod@@Base+0x13f0>
   18b90:	b	1826c <lchmod@@Base+0x11e0>
   18b94:	mov	lr, r7
   18b98:	b	18ba0 <lchmod@@Base+0x1b14>
   18b9c:	mvn	lr, #0
   18ba0:	ldr	r7, [fp, #-64]	; 0xffffffc0
   18ba4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   18ba8:	eor	r0, r7, #2
   18bac:	orr	r0, r0, r9
   18bb0:	clz	r0, r0
   18bb4:	lsr	r0, r0, #5
   18bb8:	tst	r1, r0
   18bbc:	bne	18cbc <lchmod@@Base+0x1c30>
   18bc0:	mov	r0, r1
   18bc4:	ldr	r1, [fp, #-80]	; 0xffffffb0
   18bc8:	cmp	r7, #2
   18bcc:	movwne	r1, #1
   18bd0:	orr	r0, r0, r1
   18bd4:	tst	r0, #1
   18bd8:	ldreq	r0, [sp, #52]	; 0x34
   18bdc:	streq	lr, [sp, #84]	; 0x54
   18be0:	eoreq	r0, r0, #1
   18be4:	tsteq	r0, #1
   18be8:	bne	18d80 <lchmod@@Base+0x1cf4>
   18bec:	tst	r4, #1
   18bf0:	bne	18d3c <lchmod@@Base+0x1cb0>
   18bf4:	ldr	r6, [sp, #48]	; 0x30
   18bf8:	mov	r8, #0
   18bfc:	cmp	r6, #0
   18c00:	beq	18d78 <lchmod@@Base+0x1cec>
   18c04:	ldr	r0, [sp, #80]	; 0x50
   18c08:	mov	r1, #0
   18c0c:	cmp	sl, #0
   18c10:	mov	r4, #0
   18c14:	str	r1, [fp, #-72]	; 0xffffffb8
   18c18:	beq	17b0c <lchmod@@Base+0xa80>
   18c1c:	b	18d80 <lchmod@@Base+0x1cf4>
   18c20:	ldrb	r1, [r0, #3]
   18c24:	cmp	r1, #56	; 0x38
   18c28:	ldrbeq	r1, [r0, #4]
   18c2c:	cmpeq	r1, #48	; 0x30
   18c30:	bne	17d04 <lchmod@@Base+0xc78>
   18c34:	ldrb	r1, [r0, #5]
   18c38:	cmp	r1, #51	; 0x33
   18c3c:	ldrbeq	r1, [r0, #6]
   18c40:	cmpeq	r1, #48	; 0x30
   18c44:	bne	17d04 <lchmod@@Base+0xc78>
   18c48:	ldrb	r0, [r0, #7]
   18c4c:	cmp	r0, #0
   18c50:	movw	r0, #47555	; 0xb9c3
   18c54:	movt	r0, #1
   18c58:	str	r0, [sp, #68]	; 0x44
   18c5c:	bne	17d04 <lchmod@@Base+0xc78>
   18c60:	b	17d20 <lchmod@@Base+0xc94>
   18c64:	ldrb	r1, [r0, #4]
   18c68:	cmp	r1, #48	; 0x30
   18c6c:	ldrbeq	r1, [r0, #5]
   18c70:	cmpeq	r1, #51	; 0x33
   18c74:	bne	17de8 <lchmod@@Base+0xd5c>
   18c78:	ldrb	r1, [r0, #6]
   18c7c:	cmp	r1, #48	; 0x30
   18c80:	ldrbeq	r0, [r0, #7]
   18c84:	cmpeq	r0, #0
   18c88:	bne	17de8 <lchmod@@Base+0xd5c>
   18c8c:	movw	r0, #47559	; 0xb9c7
   18c90:	movt	r0, #1
   18c94:	str	r0, [sp, #72]	; 0x48
   18c98:	b	17e08 <lchmod@@Base+0xd7c>
   18c9c:	ldr	r7, [fp, #-64]	; 0xffffffc0
   18ca0:	ldr	r2, [sp, #80]	; 0x50
   18ca4:	b	18cdc <lchmod@@Base+0x1c50>
   18ca8:	ldr	ip, [fp, #-84]	; 0xffffffac
   18cac:	mov	r2, #1
   18cb0:	mov	lr, r4
   18cb4:	ldr	r7, [fp, #-64]	; 0xffffffc0
   18cb8:	b	18cdc <lchmod@@Base+0x1c50>
   18cbc:	ldr	r2, [sp, #80]	; 0x50
   18cc0:	mov	r7, #2
   18cc4:	b	18cdc <lchmod@@Base+0x1c50>
   18cc8:	ldr	r6, [sp, #76]	; 0x4c
   18ccc:	ldr	ip, [fp, #-84]	; 0xffffffac
   18cd0:	ldr	lr, [sp, #84]	; 0x54
   18cd4:	ldr	r2, [sp, #80]	; 0x50
   18cd8:	mov	r7, #2
   18cdc:	mov	r0, #0
   18ce0:	ldr	r1, [fp, #12]
   18ce4:	tst	r2, #1
   18ce8:	mov	r2, r7
   18cec:	mov	r3, lr
   18cf0:	str	r0, [sp, #8]
   18cf4:	ldr	r0, [sp, #68]	; 0x44
   18cf8:	movwne	r2, #4
   18cfc:	cmp	r7, #2
   18d00:	movne	r2, r7
   18d04:	str	r2, [sp]
   18d08:	mov	r2, ip
   18d0c:	bic	r1, r1, #2
   18d10:	str	r0, [sp, #12]
   18d14:	ldr	r0, [sp, #72]	; 0x48
   18d18:	str	r1, [sp, #4]
   18d1c:	mov	r1, sl
   18d20:	str	r0, [sp, #16]
   18d24:	mov	r0, r6
   18d28:	bl	17a90 <lchmod@@Base+0xa04>
   18d2c:	mov	r9, r0
   18d30:	mov	r0, r9
   18d34:	sub	sp, fp, #28
   18d38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18d3c:	mov	r0, #5
   18d40:	ldr	r1, [sp, #48]	; 0x30
   18d44:	ldr	r2, [fp, #-84]	; 0xffffffac
   18d48:	ldr	r3, [sp, #84]	; 0x54
   18d4c:	str	r0, [sp]
   18d50:	ldr	r0, [fp, #12]
   18d54:	str	r0, [sp, #4]
   18d58:	ldr	r0, [fp, #16]
   18d5c:	str	r0, [sp, #8]
   18d60:	ldr	r0, [sp, #68]	; 0x44
   18d64:	str	r0, [sp, #12]
   18d68:	ldr	r0, [sp, #72]	; 0x48
   18d6c:	str	r0, [sp, #16]
   18d70:	ldr	r0, [sp, #76]	; 0x4c
   18d74:	b	18d28 <lchmod@@Base+0x1c9c>
   18d78:	mov	r0, #0
   18d7c:	str	r0, [fp, #-72]	; 0xffffffb8
   18d80:	ldr	r1, [sp, #92]	; 0x5c
   18d84:	cmp	r1, #0
   18d88:	beq	18dc8 <lchmod@@Base+0x1d3c>
   18d8c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   18d90:	ldr	r2, [sp, #76]	; 0x4c
   18d94:	tst	r0, #1
   18d98:	bne	18dcc <lchmod@@Base+0x1d40>
   18d9c:	ldrb	r0, [r1]
   18da0:	cmp	r0, #0
   18da4:	beq	18dcc <lchmod@@Base+0x1d40>
   18da8:	add	r1, r1, #1
   18dac:	cmp	r9, sl
   18db0:	strbcc	r0, [r2, r9]
   18db4:	add	r9, r9, #1
   18db8:	ldrb	r0, [r1], #1
   18dbc:	cmp	r0, #0
   18dc0:	bne	18dac <lchmod@@Base+0x1d20>
   18dc4:	b	18dcc <lchmod@@Base+0x1d40>
   18dc8:	ldr	r2, [sp, #76]	; 0x4c
   18dcc:	cmp	r9, sl
   18dd0:	movcc	r0, #0
   18dd4:	strbcc	r0, [r2, r9]
   18dd8:	mov	r0, r9
   18ddc:	sub	sp, fp, #28
   18de0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18de4:	mov	r2, #1
   18de8:	b	18cb4 <lchmod@@Base+0x1c28>
   18dec:	ldr	r2, [sp, #80]	; 0x50
   18df0:	mov	r7, #5
   18df4:	b	18cdc <lchmod@@Base+0x1c50>
   18df8:	bl	11a3c <abort@plt>
   18dfc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18e00:	add	fp, sp, #28
   18e04:	sub	sp, sp, #28
   18e08:	movw	r5, #49648	; 0xc1f0
   18e0c:	cmp	r2, #0
   18e10:	mov	r4, r1
   18e14:	mov	r7, r0
   18e18:	str	r0, [sp, #20]
   18e1c:	movt	r5, #2
   18e20:	movne	r5, r2
   18e24:	bl	118ec <__errno_location@plt>
   18e28:	mov	sl, r0
   18e2c:	ldm	r5, {r0, r1}
   18e30:	ldr	r2, [r5, #40]	; 0x28
   18e34:	ldr	r3, [r5, #44]	; 0x2c
   18e38:	add	r9, r5, #8
   18e3c:	ldr	r6, [sl]
   18e40:	orr	r8, r1, #1
   18e44:	mov	r1, #0
   18e48:	str	r6, [sp, #24]
   18e4c:	stm	sp, {r0, r8, r9}
   18e50:	str	r2, [sp, #12]
   18e54:	str	r3, [sp, #16]
   18e58:	mov	r0, #0
   18e5c:	mov	r2, r7
   18e60:	mov	r3, r4
   18e64:	mov	r6, r4
   18e68:	bl	17a90 <lchmod@@Base+0xa04>
   18e6c:	add	r7, r0, #1
   18e70:	mov	r0, r7
   18e74:	bl	1a204 <lchmod@@Base+0x3178>
   18e78:	mov	r4, r0
   18e7c:	ldr	r0, [r5]
   18e80:	ldr	r2, [r5, #44]	; 0x2c
   18e84:	ldr	r1, [r5, #40]	; 0x28
   18e88:	mov	r3, r6
   18e8c:	stm	sp, {r0, r8, r9}
   18e90:	str	r2, [sp, #16]
   18e94:	str	r1, [sp, #12]
   18e98:	mov	r0, r4
   18e9c:	mov	r1, r7
   18ea0:	ldr	r2, [sp, #20]
   18ea4:	bl	17a90 <lchmod@@Base+0xa04>
   18ea8:	ldr	r0, [sp, #24]
   18eac:	str	r0, [sl]
   18eb0:	mov	r0, r4
   18eb4:	sub	sp, fp, #28
   18eb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18ebc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18ec0:	add	fp, sp, #28
   18ec4:	sub	sp, sp, #36	; 0x24
   18ec8:	movw	r8, #49648	; 0xc1f0
   18ecc:	cmp	r3, #0
   18ed0:	mov	r4, r2
   18ed4:	str	r2, [sp, #24]
   18ed8:	mov	r5, r1
   18edc:	mov	r6, r0
   18ee0:	str	r0, [sp, #20]
   18ee4:	movt	r8, #2
   18ee8:	movne	r8, r3
   18eec:	bl	118ec <__errno_location@plt>
   18ef0:	str	r0, [sp, #28]
   18ef4:	cmp	r4, #0
   18ef8:	add	sl, r8, #8
   18efc:	ldm	r8, {r3, r9}
   18f00:	ldr	r7, [r0]
   18f04:	ldr	r1, [r8, #40]	; 0x28
   18f08:	ldr	r2, [r8, #44]	; 0x2c
   18f0c:	mov	r0, #0
   18f10:	orreq	r9, r9, #1
   18f14:	str	r7, [sp, #32]
   18f18:	mov	r7, r5
   18f1c:	stm	sp, {r3, r9, sl}
   18f20:	str	r1, [sp, #12]
   18f24:	str	r2, [sp, #16]
   18f28:	mov	r1, #0
   18f2c:	mov	r2, r6
   18f30:	mov	r3, r5
   18f34:	bl	17a90 <lchmod@@Base+0xa04>
   18f38:	add	r4, r0, #1
   18f3c:	mov	r5, r0
   18f40:	mov	r0, r4
   18f44:	bl	1a204 <lchmod@@Base+0x3178>
   18f48:	mov	r6, r0
   18f4c:	ldr	r0, [r8]
   18f50:	ldr	r2, [r8, #44]	; 0x2c
   18f54:	ldr	r1, [r8, #40]	; 0x28
   18f58:	mov	r3, r7
   18f5c:	stm	sp, {r0, r9, sl}
   18f60:	str	r2, [sp, #16]
   18f64:	str	r1, [sp, #12]
   18f68:	mov	r0, r6
   18f6c:	mov	r1, r4
   18f70:	ldr	r2, [sp, #20]
   18f74:	bl	17a90 <lchmod@@Base+0xa04>
   18f78:	ldr	r0, [sp, #24]
   18f7c:	ldr	r1, [sp, #32]
   18f80:	ldr	r2, [sp, #28]
   18f84:	cmp	r0, #0
   18f88:	str	r1, [r2]
   18f8c:	strne	r5, [r0]
   18f90:	mov	r0, r6
   18f94:	sub	sp, fp, #28
   18f98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18f9c:	push	{r4, r5, r6, r7, fp, lr}
   18fa0:	add	fp, sp, #16
   18fa4:	movw	r4, #49584	; 0xc1b0
   18fa8:	movt	r4, #2
   18fac:	ldrd	r6, [r4]
   18fb0:	cmp	r7, #2
   18fb4:	blt	18fe0 <lchmod@@Base+0x1f54>
   18fb8:	add	r5, r6, #12
   18fbc:	mov	r7, #0
   18fc0:	ldr	r0, [r5, r7, lsl #3]
   18fc4:	bl	13370 <__assert_fail@plt+0x18d4>
   18fc8:	ldr	r1, [r4, #4]
   18fcc:	add	r2, r7, #2
   18fd0:	add	r0, r7, #1
   18fd4:	mov	r7, r0
   18fd8:	cmp	r2, r1
   18fdc:	blt	18fc0 <lchmod@@Base+0x1f34>
   18fe0:	ldr	r0, [r6, #4]
   18fe4:	movw	r5, #49696	; 0xc220
   18fe8:	movt	r5, #2
   18fec:	cmp	r0, r5
   18ff0:	beq	19004 <lchmod@@Base+0x1f78>
   18ff4:	bl	13370 <__assert_fail@plt+0x18d4>
   18ff8:	mov	r0, #256	; 0x100
   18ffc:	str	r0, [r4, #8]
   19000:	str	r5, [r4, #12]
   19004:	add	r5, r4, #8
   19008:	cmp	r6, r5
   1900c:	beq	1901c <lchmod@@Base+0x1f90>
   19010:	mov	r0, r6
   19014:	bl	13370 <__assert_fail@plt+0x18d4>
   19018:	str	r5, [r4]
   1901c:	mov	r0, #1
   19020:	str	r0, [r4, #4]
   19024:	pop	{r4, r5, r6, r7, fp, pc}
   19028:	movw	r3, #49648	; 0xc1f0
   1902c:	mvn	r2, #0
   19030:	movt	r3, #2
   19034:	b	19038 <lchmod@@Base+0x1fac>
   19038:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1903c:	add	fp, sp, #28
   19040:	sub	sp, sp, #44	; 0x2c
   19044:	mov	r7, r3
   19048:	str	r2, [sp, #36]	; 0x24
   1904c:	str	r1, [sp, #32]
   19050:	mov	r5, r0
   19054:	bl	118ec <__errno_location@plt>
   19058:	cmp	r5, #0
   1905c:	blt	191c0 <lchmod@@Base+0x2134>
   19060:	cmn	r5, #-2147483647	; 0x80000001
   19064:	beq	191c0 <lchmod@@Base+0x2134>
   19068:	movw	r8, #49584	; 0xc1b0
   1906c:	mov	r4, r0
   19070:	movt	r8, #2
   19074:	ldr	r6, [r8]
   19078:	ldr	r1, [r8, #4]
   1907c:	ldr	r0, [r0]
   19080:	str	r4, [sp, #28]
   19084:	cmp	r1, r5
   19088:	str	r0, [sp, #24]
   1908c:	ble	19098 <lchmod@@Base+0x200c>
   19090:	mov	sl, r6
   19094:	b	190fc <lchmod@@Base+0x2070>
   19098:	mov	r0, #8
   1909c:	add	r9, r8, #8
   190a0:	add	r2, r5, #1
   190a4:	str	r1, [fp, #-32]	; 0xffffffe0
   190a8:	mvn	r3, #-2147483648	; 0x80000000
   190ac:	str	r0, [sp]
   190b0:	subs	r0, r6, r9
   190b4:	sub	r2, r2, r1
   190b8:	sub	r1, fp, #32
   190bc:	movne	r0, r6
   190c0:	bl	1a404 <lchmod@@Base+0x3378>
   190c4:	str	r0, [r8]
   190c8:	cmp	r6, r9
   190cc:	mov	sl, r0
   190d0:	ldrdeq	r0, [r8, #8]
   190d4:	stmeq	sl, {r0, r1}
   190d8:	ldr	r1, [r8, #4]
   190dc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   190e0:	add	r0, sl, r1, lsl #3
   190e4:	sub	r1, r2, r1
   190e8:	lsl	r2, r1, #3
   190ec:	mov	r1, #0
   190f0:	bl	11910 <memset@plt>
   190f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   190f8:	str	r0, [r8, #4]
   190fc:	mov	r9, sl
   19100:	ldr	r6, [r9, r5, lsl #3]!
   19104:	ldr	r4, [r9, #4]!
   19108:	ldm	r7, {r0, r1}
   1910c:	ldr	r2, [r7, #40]	; 0x28
   19110:	ldr	r3, [r7, #44]	; 0x2c
   19114:	orr	r8, r1, #1
   19118:	add	r1, r7, #8
   1911c:	stm	sp, {r0, r8}
   19120:	add	r0, sp, #8
   19124:	str	r1, [sp, #20]
   19128:	stm	r0, {r1, r2, r3}
   1912c:	mov	r0, r4
   19130:	mov	r1, r6
   19134:	ldr	r2, [sp, #32]
   19138:	ldr	r3, [sp, #36]	; 0x24
   1913c:	bl	17a90 <lchmod@@Base+0xa04>
   19140:	cmp	r6, r0
   19144:	bhi	191a8 <lchmod@@Base+0x211c>
   19148:	add	r6, r0, #1
   1914c:	movw	r0, #49696	; 0xc220
   19150:	movt	r0, #2
   19154:	str	r6, [sl, r5, lsl #3]
   19158:	cmp	r4, r0
   1915c:	beq	19168 <lchmod@@Base+0x20dc>
   19160:	mov	r0, r4
   19164:	bl	13370 <__assert_fail@plt+0x18d4>
   19168:	mov	r0, r6
   1916c:	bl	1a204 <lchmod@@Base+0x3178>
   19170:	str	r0, [r9]
   19174:	mov	r4, r0
   19178:	add	r3, sp, #8
   1917c:	ldr	r0, [r7]
   19180:	ldr	r1, [r7, #40]	; 0x28
   19184:	ldr	r2, [r7, #44]	; 0x2c
   19188:	stm	sp, {r0, r8}
   1918c:	ldr	r0, [sp, #20]
   19190:	stm	r3, {r0, r1, r2}
   19194:	mov	r0, r4
   19198:	mov	r1, r6
   1919c:	ldr	r2, [sp, #32]
   191a0:	ldr	r3, [sp, #36]	; 0x24
   191a4:	bl	17a90 <lchmod@@Base+0xa04>
   191a8:	ldr	r1, [sp, #24]
   191ac:	ldr	r0, [sp, #28]
   191b0:	str	r1, [r0]
   191b4:	mov	r0, r4
   191b8:	sub	sp, fp, #28
   191bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   191c0:	bl	11a3c <abort@plt>
   191c4:	movw	r3, #49648	; 0xc1f0
   191c8:	movt	r3, #2
   191cc:	b	19038 <lchmod@@Base+0x1fac>
   191d0:	movw	r3, #49648	; 0xc1f0
   191d4:	mov	r1, r0
   191d8:	mov	r0, #0
   191dc:	mvn	r2, #0
   191e0:	movt	r3, #2
   191e4:	b	19038 <lchmod@@Base+0x1fac>
   191e8:	movw	r3, #49648	; 0xc1f0
   191ec:	mov	r2, r1
   191f0:	mov	r1, r0
   191f4:	mov	r0, #0
   191f8:	movt	r3, #2
   191fc:	b	19038 <lchmod@@Base+0x1fac>
   19200:	push	{fp, lr}
   19204:	mov	fp, sp
   19208:	sub	sp, sp, #48	; 0x30
   1920c:	vmov.i32	q8, #0	; 0x00000000
   19210:	mov	ip, #32
   19214:	mov	r3, sp
   19218:	mov	lr, r2
   1921c:	cmp	r1, #10
   19220:	add	r2, r3, #16
   19224:	vst1.64	{d16-d17}, [r3], ip
   19228:	vst1.64	{d16-d17}, [r3]
   1922c:	vst1.64	{d16-d17}, [r2]
   19230:	beq	19250 <lchmod@@Base+0x21c4>
   19234:	str	r1, [sp]
   19238:	mov	r3, sp
   1923c:	mov	r1, lr
   19240:	mvn	r2, #0
   19244:	bl	19038 <lchmod@@Base+0x1fac>
   19248:	mov	sp, fp
   1924c:	pop	{fp, pc}
   19250:	bl	11a3c <abort@plt>
   19254:	push	{r4, sl, fp, lr}
   19258:	add	fp, sp, #8
   1925c:	sub	sp, sp, #48	; 0x30
   19260:	mov	ip, r3
   19264:	mov	r3, sp
   19268:	vmov.i32	q8, #0	; 0x00000000
   1926c:	mov	lr, #32
   19270:	cmp	r1, #10
   19274:	add	r4, r3, #16
   19278:	vst1.64	{d16-d17}, [r3], lr
   1927c:	vst1.64	{d16-d17}, [r3]
   19280:	vst1.64	{d16-d17}, [r4]
   19284:	beq	192a4 <lchmod@@Base+0x2218>
   19288:	str	r1, [sp]
   1928c:	mov	r1, r2
   19290:	mov	r3, sp
   19294:	mov	r2, ip
   19298:	bl	19038 <lchmod@@Base+0x1fac>
   1929c:	sub	sp, fp, #8
   192a0:	pop	{r4, sl, fp, pc}
   192a4:	bl	11a3c <abort@plt>
   192a8:	push	{fp, lr}
   192ac:	mov	fp, sp
   192b0:	sub	sp, sp, #48	; 0x30
   192b4:	mov	r3, sp
   192b8:	vmov.i32	q8, #0	; 0x00000000
   192bc:	mov	ip, #32
   192c0:	cmp	r0, #10
   192c4:	add	r2, r3, #16
   192c8:	vst1.64	{d16-d17}, [r3], ip
   192cc:	vst1.64	{d16-d17}, [r3]
   192d0:	vst1.64	{d16-d17}, [r2]
   192d4:	beq	192f4 <lchmod@@Base+0x2268>
   192d8:	str	r0, [sp]
   192dc:	mov	r3, sp
   192e0:	mov	r0, #0
   192e4:	mvn	r2, #0
   192e8:	bl	19038 <lchmod@@Base+0x1fac>
   192ec:	mov	sp, fp
   192f0:	pop	{fp, pc}
   192f4:	bl	11a3c <abort@plt>
   192f8:	push	{fp, lr}
   192fc:	mov	fp, sp
   19300:	sub	sp, sp, #48	; 0x30
   19304:	mov	r3, sp
   19308:	vmov.i32	q8, #0	; 0x00000000
   1930c:	mov	ip, #32
   19310:	cmp	r0, #10
   19314:	add	lr, r3, #16
   19318:	vst1.64	{d16-d17}, [r3], ip
   1931c:	vst1.64	{d16-d17}, [r3]
   19320:	vst1.64	{d16-d17}, [lr]
   19324:	beq	19340 <lchmod@@Base+0x22b4>
   19328:	str	r0, [sp]
   1932c:	mov	r3, sp
   19330:	mov	r0, #0
   19334:	bl	19038 <lchmod@@Base+0x1fac>
   19338:	mov	sp, fp
   1933c:	pop	{fp, pc}
   19340:	bl	11a3c <abort@plt>
   19344:	push	{r4, sl, fp, lr}
   19348:	add	fp, sp, #8
   1934c:	sub	sp, sp, #48	; 0x30
   19350:	mov	lr, r0
   19354:	movw	r0, #49648	; 0xc1f0
   19358:	mov	r3, #32
   1935c:	mov	ip, r1
   19360:	mov	r4, #1
   19364:	movt	r0, #2
   19368:	add	r1, r0, #16
   1936c:	vld1.64	{d16-d17}, [r0], r3
   19370:	mov	r3, sp
   19374:	vld1.64	{d18-d19}, [r1]
   19378:	add	r1, r3, #16
   1937c:	vld1.64	{d20-d21}, [r0]
   19380:	add	r0, r3, #32
   19384:	vst1.64	{d18-d19}, [r1]
   19388:	mov	r1, r3
   1938c:	vst1.64	{d20-d21}, [r0]
   19390:	mov	r0, #28
   19394:	and	r0, r0, r2, lsr #3
   19398:	and	r2, r2, #31
   1939c:	vst1.64	{d16-d17}, [r1], r0
   193a0:	ldr	r0, [r1, #8]
   193a4:	bic	r4, r4, r0, lsr r2
   193a8:	eor	r0, r0, r4, lsl r2
   193ac:	mov	r2, ip
   193b0:	str	r0, [r1, #8]
   193b4:	mov	r0, #0
   193b8:	mov	r1, lr
   193bc:	bl	19038 <lchmod@@Base+0x1fac>
   193c0:	sub	sp, fp, #8
   193c4:	pop	{r4, sl, fp, pc}
   193c8:	push	{fp, lr}
   193cc:	mov	fp, sp
   193d0:	sub	sp, sp, #48	; 0x30
   193d4:	mov	ip, r0
   193d8:	movw	r0, #49648	; 0xc1f0
   193dc:	mov	r3, #32
   193e0:	movt	r0, #2
   193e4:	add	r2, r0, #16
   193e8:	vld1.64	{d16-d17}, [r0], r3
   193ec:	mov	r3, sp
   193f0:	vld1.64	{d18-d19}, [r2]
   193f4:	add	r2, r3, #16
   193f8:	vld1.64	{d20-d21}, [r0]
   193fc:	add	r0, r3, #32
   19400:	vst1.64	{d18-d19}, [r2]
   19404:	mov	r2, r3
   19408:	vst1.64	{d20-d21}, [r0]
   1940c:	mov	r0, #28
   19410:	and	r0, r0, r1, lsr #3
   19414:	and	r1, r1, #31
   19418:	vst1.64	{d16-d17}, [r2], r0
   1941c:	mov	r0, #1
   19420:	ldr	lr, [r2, #8]
   19424:	bic	r0, r0, lr, lsr r1
   19428:	eor	r0, lr, r0, lsl r1
   1942c:	mov	r1, ip
   19430:	str	r0, [r2, #8]
   19434:	mov	r0, #0
   19438:	mvn	r2, #0
   1943c:	bl	19038 <lchmod@@Base+0x1fac>
   19440:	mov	sp, fp
   19444:	pop	{fp, pc}
   19448:	push	{fp, lr}
   1944c:	mov	fp, sp
   19450:	sub	sp, sp, #48	; 0x30
   19454:	movw	r2, #49648	; 0xc1f0
   19458:	mov	r3, #32
   1945c:	mov	r1, r0
   19460:	movt	r2, #2
   19464:	add	r0, r2, #16
   19468:	vld1.64	{d16-d17}, [r2], r3
   1946c:	mov	r3, sp
   19470:	vld1.64	{d18-d19}, [r0]
   19474:	add	r0, r3, #16
   19478:	vld1.64	{d20-d21}, [r2]
   1947c:	mov	r2, r3
   19480:	vst1.64	{d18-d19}, [r0]
   19484:	add	r0, r3, #32
   19488:	vst1.64	{d20-d21}, [r0]
   1948c:	mov	r0, #12
   19490:	vst1.64	{d16-d17}, [r2], r0
   19494:	ldr	r0, [r2]
   19498:	orr	r0, r0, #67108864	; 0x4000000
   1949c:	str	r0, [r2]
   194a0:	mov	r0, #0
   194a4:	mvn	r2, #0
   194a8:	bl	19038 <lchmod@@Base+0x1fac>
   194ac:	mov	sp, fp
   194b0:	pop	{fp, pc}
   194b4:	push	{fp, lr}
   194b8:	mov	fp, sp
   194bc:	sub	sp, sp, #48	; 0x30
   194c0:	mov	ip, r1
   194c4:	mov	r1, r0
   194c8:	movw	r0, #49648	; 0xc1f0
   194cc:	mov	r3, #32
   194d0:	movt	r0, #2
   194d4:	add	r2, r0, #16
   194d8:	vld1.64	{d16-d17}, [r0], r3
   194dc:	mov	r3, sp
   194e0:	vld1.64	{d18-d19}, [r2]
   194e4:	add	r2, r3, #16
   194e8:	vld1.64	{d20-d21}, [r0]
   194ec:	add	r0, r3, #32
   194f0:	vst1.64	{d18-d19}, [r2]
   194f4:	mov	r2, r3
   194f8:	vst1.64	{d20-d21}, [r0]
   194fc:	mov	r0, #12
   19500:	vst1.64	{d16-d17}, [r2], r0
   19504:	ldr	r0, [r2]
   19508:	orr	r0, r0, #67108864	; 0x4000000
   1950c:	str	r0, [r2]
   19510:	mov	r0, #0
   19514:	mov	r2, ip
   19518:	bl	19038 <lchmod@@Base+0x1fac>
   1951c:	mov	sp, fp
   19520:	pop	{fp, pc}
   19524:	push	{r4, sl, fp, lr}
   19528:	add	fp, sp, #8
   1952c:	sub	sp, sp, #96	; 0x60
   19530:	mov	ip, r2
   19534:	mov	r2, sp
   19538:	vmov.i32	q8, #0	; 0x00000000
   1953c:	mov	r4, #28
   19540:	cmp	r1, #10
   19544:	mov	r3, r2
   19548:	add	lr, r2, #16
   1954c:	vst1.64	{d16-d17}, [r3], r4
   19550:	vst1.64	{d16-d17}, [lr]
   19554:	vst1.32	{d16-d17}, [r3]
   19558:	beq	195a8 <lchmod@@Base+0x251c>
   1955c:	vld1.64	{d16-d17}, [r2], r4
   19560:	vld1.64	{d18-d19}, [lr]
   19564:	add	r3, sp, #48	; 0x30
   19568:	add	r4, r3, #4
   1956c:	vld1.32	{d20-d21}, [r2]
   19570:	add	r2, r3, #20
   19574:	vst1.32	{d16-d17}, [r4]
   19578:	vst1.32	{d18-d19}, [r2]
   1957c:	add	r2, r3, #32
   19580:	vst1.32	{d20-d21}, [r2]
   19584:	str	r1, [sp, #48]	; 0x30
   19588:	mvn	r2, #0
   1958c:	ldr	r1, [sp, #60]	; 0x3c
   19590:	orr	r1, r1, #67108864	; 0x4000000
   19594:	str	r1, [sp, #60]	; 0x3c
   19598:	mov	r1, ip
   1959c:	bl	19038 <lchmod@@Base+0x1fac>
   195a0:	sub	sp, fp, #8
   195a4:	pop	{r4, sl, fp, pc}
   195a8:	bl	11a3c <abort@plt>
   195ac:	push	{r4, r5, fp, lr}
   195b0:	add	fp, sp, #8
   195b4:	sub	sp, sp, #48	; 0x30
   195b8:	mov	ip, r3
   195bc:	movw	r3, #49648	; 0xc1f0
   195c0:	mov	lr, #32
   195c4:	cmp	r1, #0
   195c8:	mov	r5, sp
   195cc:	movt	r3, #2
   195d0:	cmpne	r2, #0
   195d4:	add	r4, r3, #16
   195d8:	vld1.64	{d16-d17}, [r3], lr
   195dc:	vld1.64	{d18-d19}, [r4]
   195e0:	add	r4, r5, #16
   195e4:	vld1.64	{d20-d21}, [r3]
   195e8:	vst1.64	{d16-d17}, [r5], lr
   195ec:	mov	r3, #10
   195f0:	vst1.64	{d18-d19}, [r4]
   195f4:	vst1.64	{d20-d21}, [r5]
   195f8:	str	r3, [sp]
   195fc:	bne	19604 <lchmod@@Base+0x2578>
   19600:	bl	11a3c <abort@plt>
   19604:	str	r2, [sp, #44]	; 0x2c
   19608:	str	r1, [sp, #40]	; 0x28
   1960c:	mov	r3, sp
   19610:	mov	r1, ip
   19614:	mvn	r2, #0
   19618:	bl	19038 <lchmod@@Base+0x1fac>
   1961c:	sub	sp, fp, #8
   19620:	pop	{r4, r5, fp, pc}
   19624:	push	{r4, r5, fp, lr}
   19628:	add	fp, sp, #8
   1962c:	sub	sp, sp, #48	; 0x30
   19630:	mov	lr, r3
   19634:	movw	r3, #49648	; 0xc1f0
   19638:	mov	ip, #32
   1963c:	cmp	r1, #0
   19640:	mov	r5, sp
   19644:	movt	r3, #2
   19648:	cmpne	r2, #0
   1964c:	add	r4, r3, #16
   19650:	vld1.64	{d16-d17}, [r3], ip
   19654:	vld1.64	{d18-d19}, [r4]
   19658:	add	r4, r5, #16
   1965c:	vld1.64	{d20-d21}, [r3]
   19660:	vst1.64	{d16-d17}, [r5], ip
   19664:	mov	r3, #10
   19668:	vst1.64	{d18-d19}, [r4]
   1966c:	vst1.64	{d20-d21}, [r5]
   19670:	str	r3, [sp]
   19674:	bne	1967c <lchmod@@Base+0x25f0>
   19678:	bl	11a3c <abort@plt>
   1967c:	ldr	ip, [fp, #8]
   19680:	str	r2, [sp, #44]	; 0x2c
   19684:	str	r1, [sp, #40]	; 0x28
   19688:	mov	r3, sp
   1968c:	mov	r1, lr
   19690:	mov	r2, ip
   19694:	bl	19038 <lchmod@@Base+0x1fac>
   19698:	sub	sp, fp, #8
   1969c:	pop	{r4, r5, fp, pc}
   196a0:	push	{r4, sl, fp, lr}
   196a4:	add	fp, sp, #8
   196a8:	sub	sp, sp, #48	; 0x30
   196ac:	mov	ip, r2
   196b0:	movw	r2, #49648	; 0xc1f0
   196b4:	mov	lr, #32
   196b8:	cmp	r0, #0
   196bc:	mov	r4, sp
   196c0:	movt	r2, #2
   196c4:	cmpne	r1, #0
   196c8:	add	r3, r2, #16
   196cc:	vld1.64	{d16-d17}, [r2], lr
   196d0:	vld1.64	{d18-d19}, [r3]
   196d4:	add	r3, r4, #16
   196d8:	vld1.64	{d20-d21}, [r2]
   196dc:	vst1.64	{d16-d17}, [r4], lr
   196e0:	mov	r2, #10
   196e4:	vst1.64	{d18-d19}, [r3]
   196e8:	vst1.64	{d20-d21}, [r4]
   196ec:	str	r2, [sp]
   196f0:	bne	196f8 <lchmod@@Base+0x266c>
   196f4:	bl	11a3c <abort@plt>
   196f8:	str	r1, [sp, #44]	; 0x2c
   196fc:	str	r0, [sp, #40]	; 0x28
   19700:	mov	r3, sp
   19704:	mov	r0, #0
   19708:	mov	r1, ip
   1970c:	mvn	r2, #0
   19710:	bl	19038 <lchmod@@Base+0x1fac>
   19714:	sub	sp, fp, #8
   19718:	pop	{r4, sl, fp, pc}
   1971c:	push	{r4, r5, fp, lr}
   19720:	add	fp, sp, #8
   19724:	sub	sp, sp, #48	; 0x30
   19728:	mov	lr, r2
   1972c:	movw	r2, #49648	; 0xc1f0
   19730:	mov	ip, r3
   19734:	mov	r3, #32
   19738:	cmp	r0, #0
   1973c:	mov	r5, sp
   19740:	movt	r2, #2
   19744:	cmpne	r1, #0
   19748:	add	r4, r2, #16
   1974c:	vld1.64	{d16-d17}, [r2], r3
   19750:	vld1.64	{d18-d19}, [r4]
   19754:	add	r4, r5, #16
   19758:	vld1.64	{d20-d21}, [r2]
   1975c:	vst1.64	{d16-d17}, [r5], r3
   19760:	mov	r2, #10
   19764:	vst1.64	{d18-d19}, [r4]
   19768:	vst1.64	{d20-d21}, [r5]
   1976c:	str	r2, [sp]
   19770:	bne	19778 <lchmod@@Base+0x26ec>
   19774:	bl	11a3c <abort@plt>
   19778:	str	r1, [sp, #44]	; 0x2c
   1977c:	str	r0, [sp, #40]	; 0x28
   19780:	mov	r3, sp
   19784:	mov	r0, #0
   19788:	mov	r1, lr
   1978c:	mov	r2, ip
   19790:	bl	19038 <lchmod@@Base+0x1fac>
   19794:	sub	sp, fp, #8
   19798:	pop	{r4, r5, fp, pc}
   1979c:	movw	r3, #49536	; 0xc180
   197a0:	movt	r3, #2
   197a4:	b	19038 <lchmod@@Base+0x1fac>
   197a8:	movw	r3, #49536	; 0xc180
   197ac:	mov	r2, r1
   197b0:	mov	r1, r0
   197b4:	mov	r0, #0
   197b8:	movt	r3, #2
   197bc:	b	19038 <lchmod@@Base+0x1fac>
   197c0:	movw	r3, #49536	; 0xc180
   197c4:	mvn	r2, #0
   197c8:	movt	r3, #2
   197cc:	b	19038 <lchmod@@Base+0x1fac>
   197d0:	movw	r3, #49536	; 0xc180
   197d4:	mov	r1, r0
   197d8:	mov	r0, #0
   197dc:	mvn	r2, #0
   197e0:	movt	r3, #2
   197e4:	b	19038 <lchmod@@Base+0x1fac>
   197e8:	push	{r4, r5, r6, sl, fp, lr}
   197ec:	add	fp, sp, #16
   197f0:	ldr	r4, [r0], #8
   197f4:	mov	r5, r1
   197f8:	cmp	r4, r0
   197fc:	beq	19820 <lchmod@@Base+0x2794>
   19800:	mov	r0, r4
   19804:	mov	r1, r5
   19808:	bl	1a878 <lchmod@@Base+0x37ec>
   1980c:	mov	r6, r0
   19810:	cmp	r0, #0
   19814:	moveq	r6, r4
   19818:	mov	r0, r6
   1981c:	pop	{r4, r5, r6, sl, fp, pc}
   19820:	mov	r0, r5
   19824:	bl	1a848 <lchmod@@Base+0x37bc>
   19828:	cmp	r0, #0
   1982c:	moveq	r6, #0
   19830:	moveq	r0, r6
   19834:	popeq	{r4, r5, r6, sl, fp, pc}
   19838:	mov	r1, r4
   1983c:	mov	r2, r5
   19840:	mov	r6, r0
   19844:	bl	11730 <memcpy@plt>
   19848:	mov	r0, r6
   1984c:	pop	{r4, r5, r6, sl, fp, pc}
   19850:	push	{r4, r5, r6, sl, fp, lr}
   19854:	add	fp, sp, #16
   19858:	mov	r4, r0
   1985c:	add	r6, r0, #8
   19860:	ldrd	r0, [r0]
   19864:	lsl	r5, r1, #1
   19868:	cmp	r0, r6
   1986c:	beq	19878 <lchmod@@Base+0x27ec>
   19870:	bl	13370 <__assert_fail@plt+0x18d4>
   19874:	ldr	r1, [r4, #4]
   19878:	cmp	r5, r1
   1987c:	bcc	198a0 <lchmod@@Base+0x2814>
   19880:	mov	r0, r5
   19884:	bl	1a848 <lchmod@@Base+0x37bc>
   19888:	cmp	r0, #0
   1988c:	strne	r0, [r4]
   19890:	movne	r0, #1
   19894:	strne	r5, [r4, #4]
   19898:	popne	{r4, r5, r6, sl, fp, pc}
   1989c:	b	198ac <lchmod@@Base+0x2820>
   198a0:	bl	118ec <__errno_location@plt>
   198a4:	mov	r1, #12
   198a8:	str	r1, [r0]
   198ac:	mov	r0, #0
   198b0:	mov	r5, #1024	; 0x400
   198b4:	str	r6, [r4]
   198b8:	str	r5, [r4, #4]
   198bc:	pop	{r4, r5, r6, sl, fp, pc}
   198c0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   198c4:	add	fp, sp, #24
   198c8:	ldrd	r8, [r0]
   198cc:	add	r7, r0, #8
   198d0:	mov	r4, r0
   198d4:	lsl	r5, r9, #1
   198d8:	cmp	r8, r7
   198dc:	beq	19910 <lchmod@@Base+0x2884>
   198e0:	cmp	r5, r9
   198e4:	bcc	19944 <lchmod@@Base+0x28b8>
   198e8:	mov	r0, r8
   198ec:	mov	r1, r5
   198f0:	bl	1a878 <lchmod@@Base+0x37ec>
   198f4:	mov	r6, r0
   198f8:	cmp	r0, #0
   198fc:	beq	19954 <lchmod@@Base+0x28c8>
   19900:	mov	r0, #1
   19904:	str	r6, [r4]
   19908:	str	r5, [r4, #4]
   1990c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19910:	mov	r0, r5
   19914:	bl	1a848 <lchmod@@Base+0x37bc>
   19918:	cmp	r0, #0
   1991c:	moveq	r0, #0
   19920:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   19924:	ldr	r2, [r4, #4]
   19928:	mov	r1, r8
   1992c:	mov	r6, r0
   19930:	bl	11730 <memcpy@plt>
   19934:	mov	r0, #1
   19938:	str	r6, [r4]
   1993c:	str	r5, [r4, #4]
   19940:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19944:	bl	118ec <__errno_location@plt>
   19948:	mov	r1, #12
   1994c:	str	r1, [r0]
   19950:	b	19958 <lchmod@@Base+0x28cc>
   19954:	ldr	r8, [r4]
   19958:	mov	r0, r8
   1995c:	bl	13370 <__assert_fail@plt+0x18d4>
   19960:	mov	r0, #0
   19964:	mov	r5, #1024	; 0x400
   19968:	str	r7, [r4]
   1996c:	str	r5, [r4, #4]
   19970:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19974:	push	{r4, r5, fp, lr}
   19978:	add	fp, sp, #8
   1997c:	mov	r4, r1
   19980:	bl	118b0 <getfilecon@plt>
   19984:	cmp	r0, #10
   19988:	beq	199a0 <lchmod@@Base+0x2914>
   1998c:	cmp	r0, #0
   19990:	bne	199e4 <lchmod@@Base+0x2958>
   19994:	bl	118ec <__errno_location@plt>
   19998:	mov	r1, #95	; 0x5f
   1999c:	b	199dc <lchmod@@Base+0x2950>
   199a0:	ldr	r5, [r4]
   199a4:	movw	r1, #47648	; 0xba20
   199a8:	movt	r1, #1
   199ac:	mov	r0, r5
   199b0:	bl	116d0 <strcmp@plt>
   199b4:	mov	r1, r0
   199b8:	mov	r0, #10
   199bc:	cmp	r1, #0
   199c0:	popne	{r4, r5, fp, pc}
   199c4:	mov	r0, r5
   199c8:	bl	119dc <freecon@plt>
   199cc:	mov	r0, #0
   199d0:	str	r0, [r4]
   199d4:	bl	118ec <__errno_location@plt>
   199d8:	mov	r1, #61	; 0x3d
   199dc:	str	r1, [r0]
   199e0:	mvn	r0, #0
   199e4:	pop	{r4, r5, fp, pc}
   199e8:	push	{r4, r5, fp, lr}
   199ec:	add	fp, sp, #8
   199f0:	mov	r4, r1
   199f4:	bl	11838 <lgetfilecon@plt>
   199f8:	cmp	r0, #10
   199fc:	beq	19a14 <lchmod@@Base+0x2988>
   19a00:	cmp	r0, #0
   19a04:	bne	19a58 <lchmod@@Base+0x29cc>
   19a08:	bl	118ec <__errno_location@plt>
   19a0c:	mov	r1, #95	; 0x5f
   19a10:	b	19a50 <lchmod@@Base+0x29c4>
   19a14:	ldr	r5, [r4]
   19a18:	movw	r1, #47648	; 0xba20
   19a1c:	movt	r1, #1
   19a20:	mov	r0, r5
   19a24:	bl	116d0 <strcmp@plt>
   19a28:	mov	r1, r0
   19a2c:	mov	r0, #10
   19a30:	cmp	r1, #0
   19a34:	popne	{r4, r5, fp, pc}
   19a38:	mov	r0, r5
   19a3c:	bl	119dc <freecon@plt>
   19a40:	mov	r0, #0
   19a44:	str	r0, [r4]
   19a48:	bl	118ec <__errno_location@plt>
   19a4c:	mov	r1, #61	; 0x3d
   19a50:	str	r1, [r0]
   19a54:	mvn	r0, #0
   19a58:	pop	{r4, r5, fp, pc}
   19a5c:	push	{r4, r5, fp, lr}
   19a60:	add	fp, sp, #8
   19a64:	mov	r4, r1
   19a68:	bl	11784 <fgetfilecon@plt>
   19a6c:	cmp	r0, #10
   19a70:	beq	19a88 <lchmod@@Base+0x29fc>
   19a74:	cmp	r0, #0
   19a78:	bne	19acc <lchmod@@Base+0x2a40>
   19a7c:	bl	118ec <__errno_location@plt>
   19a80:	mov	r1, #95	; 0x5f
   19a84:	b	19ac4 <lchmod@@Base+0x2a38>
   19a88:	ldr	r5, [r4]
   19a8c:	movw	r1, #47648	; 0xba20
   19a90:	movt	r1, #1
   19a94:	mov	r0, r5
   19a98:	bl	116d0 <strcmp@plt>
   19a9c:	mov	r1, r0
   19aa0:	mov	r0, #10
   19aa4:	cmp	r1, #0
   19aa8:	popne	{r4, r5, fp, pc}
   19aac:	mov	r0, r5
   19ab0:	bl	119dc <freecon@plt>
   19ab4:	mov	r0, #0
   19ab8:	str	r0, [r4]
   19abc:	bl	118ec <__errno_location@plt>
   19ac0:	mov	r1, #61	; 0x3d
   19ac4:	str	r1, [r0]
   19ac8:	mvn	r0, #0
   19acc:	pop	{r4, r5, fp, pc}
   19ad0:	push	{r4, r5, r6, r7, fp, lr}
   19ad4:	add	fp, sp, #16
   19ad8:	mov	r4, r0
   19adc:	cmp	r0, #2
   19ae0:	movhi	r0, r4
   19ae4:	pophi	{r4, r5, r6, r7, fp, pc}
   19ae8:	mov	r0, r4
   19aec:	bl	1afc4 <lchmod@@Base+0x3f38>
   19af0:	mov	r5, r0
   19af4:	bl	118ec <__errno_location@plt>
   19af8:	ldr	r7, [r0]
   19afc:	mov	r6, r0
   19b00:	mov	r0, r4
   19b04:	bl	11a48 <close@plt>
   19b08:	mov	r0, r5
   19b0c:	str	r7, [r6]
   19b10:	pop	{r4, r5, r6, r7, fp, pc}
   19b14:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   19b18:	add	fp, sp, #24
   19b1c:	sub	sp, sp, #32
   19b20:	ldr	r6, [fp, #12]
   19b24:	ldr	r7, [fp, #8]
   19b28:	mov	r4, r2
   19b2c:	mov	r8, r0
   19b30:	cmp	r1, #0
   19b34:	beq	19b5c <lchmod@@Base+0x2ad0>
   19b38:	movw	r2, #47658	; 0xba2a
   19b3c:	mov	r5, r1
   19b40:	str	r3, [sp, #4]
   19b44:	str	r4, [sp]
   19b48:	mov	r0, r8
   19b4c:	mov	r1, #1
   19b50:	movt	r2, #1
   19b54:	mov	r3, r5
   19b58:	b	19b74 <lchmod@@Base+0x2ae8>
   19b5c:	movw	r2, #47670	; 0xba36
   19b60:	str	r3, [sp]
   19b64:	mov	r0, r8
   19b68:	mov	r1, #1
   19b6c:	mov	r3, r4
   19b70:	movt	r2, #1
   19b74:	bl	11934 <__fprintf_chk@plt>
   19b78:	movw	r1, #47677	; 0xba3d
   19b7c:	mov	r0, #0
   19b80:	mov	r2, #5
   19b84:	movt	r1, #1
   19b88:	bl	11760 <dcgettext@plt>
   19b8c:	movw	r2, #48395	; 0xbd0b
   19b90:	mov	r3, r0
   19b94:	movw	r0, #2022	; 0x7e6
   19b98:	mov	r1, #1
   19b9c:	str	r0, [sp]
   19ba0:	movt	r2, #1
   19ba4:	mov	r0, r8
   19ba8:	bl	11934 <__fprintf_chk@plt>
   19bac:	movw	r4, #47003	; 0xb79b
   19bb0:	mov	r1, r8
   19bb4:	movt	r4, #1
   19bb8:	mov	r0, r4
   19bbc:	bl	116ac <fputs_unlocked@plt>
   19bc0:	movw	r1, #47681	; 0xba41
   19bc4:	mov	r0, #0
   19bc8:	mov	r2, #5
   19bcc:	movt	r1, #1
   19bd0:	bl	11760 <dcgettext@plt>
   19bd4:	movw	r3, #47852	; 0xbaec
   19bd8:	mov	r2, r0
   19bdc:	mov	r0, r8
   19be0:	mov	r1, #1
   19be4:	movt	r3, #1
   19be8:	bl	11934 <__fprintf_chk@plt>
   19bec:	mov	r0, r4
   19bf0:	mov	r1, r8
   19bf4:	bl	116ac <fputs_unlocked@plt>
   19bf8:	cmp	r6, #9
   19bfc:	bhi	19c38 <lchmod@@Base+0x2bac>
   19c00:	add	r0, pc, #0
   19c04:	ldr	pc, [r0, r6, lsl #2]
   19c08:	andeq	r9, r1, r0, lsr ip
   19c0c:	andeq	r9, r1, r4, asr #24
   19c10:	andeq	r9, r1, r4, ror ip
   19c14:	muleq	r1, ip, ip
   19c18:	andeq	r9, r1, r4, asr #25
   19c1c:	andeq	r9, r1, ip, ror #25
   19c20:	andeq	r9, r1, r4, lsl sp
   19c24:	andeq	r9, r1, ip, asr #26
   19c28:	strdeq	r9, [r1], -r4
   19c2c:	muleq	r1, ip, sp
   19c30:	sub	sp, fp, #24
   19c34:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   19c38:	movw	r1, #48205	; 0xbc4d
   19c3c:	movt	r1, #1
   19c40:	b	19da4 <lchmod@@Base+0x2d18>
   19c44:	movw	r1, #47886	; 0xbb0e
   19c48:	mov	r0, #0
   19c4c:	mov	r2, #5
   19c50:	movt	r1, #1
   19c54:	bl	11760 <dcgettext@plt>
   19c58:	ldr	r3, [r7]
   19c5c:	mov	r2, r0
   19c60:	mov	r0, r8
   19c64:	mov	r1, #1
   19c68:	sub	sp, fp, #24
   19c6c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   19c70:	b	11934 <__fprintf_chk@plt>
   19c74:	movw	r1, #47902	; 0xbb1e
   19c78:	mov	r0, #0
   19c7c:	mov	r2, #5
   19c80:	movt	r1, #1
   19c84:	bl	11760 <dcgettext@plt>
   19c88:	mov	r2, r0
   19c8c:	ldr	r3, [r7]
   19c90:	ldr	r0, [r7, #4]
   19c94:	str	r0, [sp]
   19c98:	b	19d88 <lchmod@@Base+0x2cfc>
   19c9c:	movw	r1, #47925	; 0xbb35
   19ca0:	mov	r0, #0
   19ca4:	mov	r2, #5
   19ca8:	movt	r1, #1
   19cac:	bl	11760 <dcgettext@plt>
   19cb0:	ldr	r3, [r7]
   19cb4:	mov	r2, r0
   19cb8:	ldmib	r7, {r0, r1}
   19cbc:	stm	sp, {r0, r1}
   19cc0:	b	19d88 <lchmod@@Base+0x2cfc>
   19cc4:	movw	r1, #47953	; 0xbb51
   19cc8:	mov	r0, #0
   19ccc:	mov	r2, #5
   19cd0:	movt	r1, #1
   19cd4:	bl	11760 <dcgettext@plt>
   19cd8:	ldr	r3, [r7]
   19cdc:	mov	r2, r0
   19ce0:	ldmib	r7, {r0, r1, r7}
   19ce4:	stm	sp, {r0, r1, r7}
   19ce8:	b	19d88 <lchmod@@Base+0x2cfc>
   19cec:	movw	r1, #47985	; 0xbb71
   19cf0:	mov	r0, #0
   19cf4:	mov	r2, #5
   19cf8:	movt	r1, #1
   19cfc:	bl	11760 <dcgettext@plt>
   19d00:	ldr	r3, [r7]
   19d04:	mov	r2, r0
   19d08:	ldmib	r7, {r0, r1, r6, r7}
   19d0c:	stm	sp, {r0, r1, r6, r7}
   19d10:	b	19d88 <lchmod@@Base+0x2cfc>
   19d14:	movw	r1, #48021	; 0xbb95
   19d18:	mov	r0, #0
   19d1c:	mov	r2, #5
   19d20:	movt	r1, #1
   19d24:	bl	11760 <dcgettext@plt>
   19d28:	ldr	r3, [r7]
   19d2c:	mov	r2, r0
   19d30:	ldmib	r7, {r0, r1, r6}
   19d34:	ldr	r5, [r7, #16]
   19d38:	ldr	r7, [r7, #20]
   19d3c:	stm	sp, {r0, r1, r6}
   19d40:	str	r5, [sp, #12]
   19d44:	str	r7, [sp, #16]
   19d48:	b	19d88 <lchmod@@Base+0x2cfc>
   19d4c:	movw	r1, #48061	; 0xbbbd
   19d50:	mov	r0, #0
   19d54:	mov	r2, #5
   19d58:	movt	r1, #1
   19d5c:	bl	11760 <dcgettext@plt>
   19d60:	ldr	r3, [r7]
   19d64:	mov	r2, r0
   19d68:	ldmib	r7, {r0, r1, r6}
   19d6c:	ldr	r5, [r7, #16]
   19d70:	ldr	r4, [r7, #20]
   19d74:	ldr	r7, [r7, #24]
   19d78:	stm	sp, {r0, r1, r6}
   19d7c:	str	r5, [sp, #12]
   19d80:	str	r4, [sp, #16]
   19d84:	str	r7, [sp, #20]
   19d88:	mov	r0, r8
   19d8c:	mov	r1, #1
   19d90:	bl	11934 <__fprintf_chk@plt>
   19d94:	sub	sp, fp, #24
   19d98:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   19d9c:	movw	r1, #48153	; 0xbc19
   19da0:	movt	r1, #1
   19da4:	mov	r0, #0
   19da8:	mov	r2, #5
   19dac:	bl	11760 <dcgettext@plt>
   19db0:	mov	ip, r0
   19db4:	ldr	r3, [r7]
   19db8:	ldr	r0, [r7, #4]
   19dbc:	ldr	r1, [r7, #8]
   19dc0:	ldr	r6, [r7, #12]
   19dc4:	ldr	r5, [r7, #16]
   19dc8:	ldr	r4, [r7, #20]
   19dcc:	ldr	r2, [r7, #24]
   19dd0:	ldr	lr, [r7, #28]
   19dd4:	ldr	r7, [r7, #32]
   19dd8:	stm	sp, {r0, r1, r6}
   19ddc:	str	r5, [sp, #12]
   19de0:	str	r4, [sp, #16]
   19de4:	str	r2, [sp, #20]
   19de8:	str	lr, [sp, #24]
   19dec:	str	r7, [sp, #28]
   19df0:	b	19e38 <lchmod@@Base+0x2dac>
   19df4:	movw	r1, #48105	; 0xbbe9
   19df8:	mov	r0, #0
   19dfc:	mov	r2, #5
   19e00:	movt	r1, #1
   19e04:	bl	11760 <dcgettext@plt>
   19e08:	mov	ip, r0
   19e0c:	ldr	r3, [r7]
   19e10:	ldmib	r7, {r0, r1, r6}
   19e14:	ldr	r5, [r7, #16]
   19e18:	ldr	r4, [r7, #20]
   19e1c:	ldr	r2, [r7, #24]
   19e20:	ldr	r7, [r7, #28]
   19e24:	stm	sp, {r0, r1, r6}
   19e28:	str	r5, [sp, #12]
   19e2c:	str	r4, [sp, #16]
   19e30:	str	r2, [sp, #20]
   19e34:	str	r7, [sp, #24]
   19e38:	mov	r0, r8
   19e3c:	mov	r1, #1
   19e40:	mov	r2, ip
   19e44:	bl	11934 <__fprintf_chk@plt>
   19e48:	sub	sp, fp, #24
   19e4c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   19e50:	push	{r4, sl, fp, lr}
   19e54:	add	fp, sp, #8
   19e58:	sub	sp, sp, #8
   19e5c:	ldr	ip, [fp, #8]
   19e60:	mov	lr, #0
   19e64:	ldr	r4, [ip, lr, lsl #2]
   19e68:	add	lr, lr, #1
   19e6c:	cmp	r4, #0
   19e70:	bne	19e64 <lchmod@@Base+0x2dd8>
   19e74:	sub	r4, lr, #1
   19e78:	str	ip, [sp]
   19e7c:	str	r4, [sp, #4]
   19e80:	bl	19b14 <lchmod@@Base+0x2a88>
   19e84:	sub	sp, fp, #8
   19e88:	pop	{r4, sl, fp, pc}
   19e8c:	push	{fp, lr}
   19e90:	mov	fp, sp
   19e94:	sub	sp, sp, #48	; 0x30
   19e98:	ldr	ip, [fp, #8]
   19e9c:	ldr	lr, [ip]
   19ea0:	cmp	lr, #0
   19ea4:	str	lr, [sp, #8]
   19ea8:	beq	19f44 <lchmod@@Base+0x2eb8>
   19eac:	ldr	lr, [ip, #4]
   19eb0:	cmp	lr, #0
   19eb4:	str	lr, [sp, #12]
   19eb8:	beq	19f4c <lchmod@@Base+0x2ec0>
   19ebc:	ldr	lr, [ip, #8]
   19ec0:	cmp	lr, #0
   19ec4:	str	lr, [sp, #16]
   19ec8:	beq	19f54 <lchmod@@Base+0x2ec8>
   19ecc:	ldr	lr, [ip, #12]
   19ed0:	cmp	lr, #0
   19ed4:	str	lr, [sp, #20]
   19ed8:	beq	19f5c <lchmod@@Base+0x2ed0>
   19edc:	ldr	lr, [ip, #16]
   19ee0:	cmp	lr, #0
   19ee4:	str	lr, [sp, #24]
   19ee8:	beq	19f64 <lchmod@@Base+0x2ed8>
   19eec:	ldr	lr, [ip, #20]
   19ef0:	cmp	lr, #0
   19ef4:	str	lr, [sp, #28]
   19ef8:	beq	19f6c <lchmod@@Base+0x2ee0>
   19efc:	ldr	lr, [ip, #24]
   19f00:	cmp	lr, #0
   19f04:	str	lr, [sp, #32]
   19f08:	beq	19f74 <lchmod@@Base+0x2ee8>
   19f0c:	ldr	lr, [ip, #28]
   19f10:	cmp	lr, #0
   19f14:	str	lr, [sp, #36]	; 0x24
   19f18:	beq	19f7c <lchmod@@Base+0x2ef0>
   19f1c:	ldr	lr, [ip, #32]
   19f20:	cmp	lr, #0
   19f24:	str	lr, [sp, #40]	; 0x28
   19f28:	beq	19f84 <lchmod@@Base+0x2ef8>
   19f2c:	ldr	lr, [ip, #36]	; 0x24
   19f30:	mov	ip, #10
   19f34:	cmp	lr, #0
   19f38:	str	lr, [sp, #44]	; 0x2c
   19f3c:	movweq	ip, #9
   19f40:	b	19f88 <lchmod@@Base+0x2efc>
   19f44:	mov	ip, #0
   19f48:	b	19f88 <lchmod@@Base+0x2efc>
   19f4c:	mov	ip, #1
   19f50:	b	19f88 <lchmod@@Base+0x2efc>
   19f54:	mov	ip, #2
   19f58:	b	19f88 <lchmod@@Base+0x2efc>
   19f5c:	mov	ip, #3
   19f60:	b	19f88 <lchmod@@Base+0x2efc>
   19f64:	mov	ip, #4
   19f68:	b	19f88 <lchmod@@Base+0x2efc>
   19f6c:	mov	ip, #5
   19f70:	b	19f88 <lchmod@@Base+0x2efc>
   19f74:	mov	ip, #6
   19f78:	b	19f88 <lchmod@@Base+0x2efc>
   19f7c:	mov	ip, #7
   19f80:	b	19f88 <lchmod@@Base+0x2efc>
   19f84:	mov	ip, #8
   19f88:	add	lr, sp, #8
   19f8c:	str	ip, [sp, #4]
   19f90:	str	lr, [sp]
   19f94:	bl	19b14 <lchmod@@Base+0x2a88>
   19f98:	mov	sp, fp
   19f9c:	pop	{fp, pc}
   19fa0:	push	{fp, lr}
   19fa4:	mov	fp, sp
   19fa8:	sub	sp, sp, #56	; 0x38
   19fac:	add	ip, fp, #8
   19fb0:	str	ip, [sp, #12]
   19fb4:	ldr	lr, [fp, #8]
   19fb8:	cmp	lr, #0
   19fbc:	str	lr, [sp, #16]
   19fc0:	beq	1a05c <lchmod@@Base+0x2fd0>
   19fc4:	ldr	lr, [ip, #4]
   19fc8:	cmp	lr, #0
   19fcc:	str	lr, [sp, #20]
   19fd0:	beq	1a064 <lchmod@@Base+0x2fd8>
   19fd4:	ldr	lr, [ip, #8]
   19fd8:	cmp	lr, #0
   19fdc:	str	lr, [sp, #24]
   19fe0:	beq	1a06c <lchmod@@Base+0x2fe0>
   19fe4:	ldr	lr, [ip, #12]
   19fe8:	cmp	lr, #0
   19fec:	str	lr, [sp, #28]
   19ff0:	beq	1a074 <lchmod@@Base+0x2fe8>
   19ff4:	ldr	lr, [ip, #16]
   19ff8:	cmp	lr, #0
   19ffc:	str	lr, [sp, #32]
   1a000:	beq	1a07c <lchmod@@Base+0x2ff0>
   1a004:	ldr	lr, [ip, #20]
   1a008:	cmp	lr, #0
   1a00c:	str	lr, [sp, #36]	; 0x24
   1a010:	beq	1a084 <lchmod@@Base+0x2ff8>
   1a014:	ldr	lr, [ip, #24]
   1a018:	cmp	lr, #0
   1a01c:	str	lr, [sp, #40]	; 0x28
   1a020:	beq	1a08c <lchmod@@Base+0x3000>
   1a024:	ldr	lr, [ip, #28]
   1a028:	cmp	lr, #0
   1a02c:	str	lr, [sp, #44]	; 0x2c
   1a030:	beq	1a094 <lchmod@@Base+0x3008>
   1a034:	ldr	lr, [ip, #32]
   1a038:	cmp	lr, #0
   1a03c:	str	lr, [sp, #48]	; 0x30
   1a040:	beq	1a09c <lchmod@@Base+0x3010>
   1a044:	ldr	lr, [ip, #36]	; 0x24
   1a048:	mov	ip, #10
   1a04c:	cmp	lr, #0
   1a050:	str	lr, [sp, #52]	; 0x34
   1a054:	movweq	ip, #9
   1a058:	b	1a0a0 <lchmod@@Base+0x3014>
   1a05c:	mov	ip, #0
   1a060:	b	1a0a0 <lchmod@@Base+0x3014>
   1a064:	mov	ip, #1
   1a068:	b	1a0a0 <lchmod@@Base+0x3014>
   1a06c:	mov	ip, #2
   1a070:	b	1a0a0 <lchmod@@Base+0x3014>
   1a074:	mov	ip, #3
   1a078:	b	1a0a0 <lchmod@@Base+0x3014>
   1a07c:	mov	ip, #4
   1a080:	b	1a0a0 <lchmod@@Base+0x3014>
   1a084:	mov	ip, #5
   1a088:	b	1a0a0 <lchmod@@Base+0x3014>
   1a08c:	mov	ip, #6
   1a090:	b	1a0a0 <lchmod@@Base+0x3014>
   1a094:	mov	ip, #7
   1a098:	b	1a0a0 <lchmod@@Base+0x3014>
   1a09c:	mov	ip, #8
   1a0a0:	add	lr, sp, #16
   1a0a4:	str	ip, [sp, #4]
   1a0a8:	str	lr, [sp]
   1a0ac:	bl	19b14 <lchmod@@Base+0x2a88>
   1a0b0:	mov	sp, fp
   1a0b4:	pop	{fp, pc}
   1a0b8:	push	{fp, lr}
   1a0bc:	mov	fp, sp
   1a0c0:	movw	r0, #49620	; 0xc1d4
   1a0c4:	movt	r0, #2
   1a0c8:	ldr	r1, [r0]
   1a0cc:	movw	r0, #47003	; 0xb79b
   1a0d0:	movt	r0, #1
   1a0d4:	bl	116ac <fputs_unlocked@plt>
   1a0d8:	movw	r1, #48265	; 0xbc89
   1a0dc:	mov	r0, #0
   1a0e0:	mov	r2, #5
   1a0e4:	movt	r1, #1
   1a0e8:	bl	11760 <dcgettext@plt>
   1a0ec:	movw	r2, #48285	; 0xbc9d
   1a0f0:	mov	r1, r0
   1a0f4:	mov	r0, #1
   1a0f8:	movt	r2, #1
   1a0fc:	bl	1191c <__printf_chk@plt>
   1a100:	movw	r1, #48307	; 0xbcb3
   1a104:	mov	r0, #0
   1a108:	mov	r2, #5
   1a10c:	movt	r1, #1
   1a110:	bl	11760 <dcgettext@plt>
   1a114:	movw	r2, #46415	; 0xb54f
   1a118:	movw	r3, #46812	; 0xb6dc
   1a11c:	mov	r1, r0
   1a120:	mov	r0, #1
   1a124:	movt	r2, #1
   1a128:	movt	r3, #1
   1a12c:	bl	1191c <__printf_chk@plt>
   1a130:	movw	r1, #48327	; 0xbcc7
   1a134:	mov	r0, #0
   1a138:	mov	r2, #5
   1a13c:	movt	r1, #1
   1a140:	bl	11760 <dcgettext@plt>
   1a144:	movw	r2, #48366	; 0xbcee
   1a148:	mov	r1, r0
   1a14c:	mov	r0, #1
   1a150:	movt	r2, #1
   1a154:	pop	{fp, lr}
   1a158:	b	1191c <__printf_chk@plt>
   1a15c:	push	{r4, r5, r6, sl, fp, lr}
   1a160:	add	fp, sp, #16
   1a164:	mov	r4, r2
   1a168:	mov	r5, r1
   1a16c:	mov	r6, r0
   1a170:	bl	1af88 <lchmod@@Base+0x3efc>
   1a174:	cmp	r0, #0
   1a178:	popne	{r4, r5, r6, sl, fp, pc}
   1a17c:	cmp	r6, #0
   1a180:	beq	1a194 <lchmod@@Base+0x3108>
   1a184:	cmp	r5, #0
   1a188:	cmpne	r4, #0
   1a18c:	bne	1a194 <lchmod@@Base+0x3108>
   1a190:	pop	{r4, r5, r6, sl, fp, pc}
   1a194:	bl	1a734 <lchmod@@Base+0x36a8>
   1a198:	push	{r4, r5, r6, sl, fp, lr}
   1a19c:	add	fp, sp, #16
   1a1a0:	mov	r4, r2
   1a1a4:	mov	r5, r1
   1a1a8:	mov	r6, r0
   1a1ac:	bl	1af88 <lchmod@@Base+0x3efc>
   1a1b0:	cmp	r0, #0
   1a1b4:	popne	{r4, r5, r6, sl, fp, pc}
   1a1b8:	cmp	r6, #0
   1a1bc:	beq	1a1d0 <lchmod@@Base+0x3144>
   1a1c0:	cmp	r5, #0
   1a1c4:	cmpne	r4, #0
   1a1c8:	bne	1a1d0 <lchmod@@Base+0x3144>
   1a1cc:	pop	{r4, r5, r6, sl, fp, pc}
   1a1d0:	bl	1a734 <lchmod@@Base+0x36a8>
   1a1d4:	push	{fp, lr}
   1a1d8:	mov	fp, sp
   1a1dc:	bl	1a848 <lchmod@@Base+0x37bc>
   1a1e0:	cmp	r0, #0
   1a1e4:	popne	{fp, pc}
   1a1e8:	bl	1a734 <lchmod@@Base+0x36a8>
   1a1ec:	push	{fp, lr}
   1a1f0:	mov	fp, sp
   1a1f4:	bl	1a848 <lchmod@@Base+0x37bc>
   1a1f8:	cmp	r0, #0
   1a1fc:	popne	{fp, pc}
   1a200:	bl	1a734 <lchmod@@Base+0x36a8>
   1a204:	push	{fp, lr}
   1a208:	mov	fp, sp
   1a20c:	bl	1a848 <lchmod@@Base+0x37bc>
   1a210:	cmp	r0, #0
   1a214:	popne	{fp, pc}
   1a218:	bl	1a734 <lchmod@@Base+0x36a8>
   1a21c:	push	{r4, r5, fp, lr}
   1a220:	add	fp, sp, #8
   1a224:	mov	r4, r1
   1a228:	mov	r5, r0
   1a22c:	bl	1a878 <lchmod@@Base+0x37ec>
   1a230:	cmp	r0, #0
   1a234:	popne	{r4, r5, fp, pc}
   1a238:	cmp	r5, #0
   1a23c:	beq	1a24c <lchmod@@Base+0x31c0>
   1a240:	cmp	r4, #0
   1a244:	bne	1a24c <lchmod@@Base+0x31c0>
   1a248:	pop	{r4, r5, fp, pc}
   1a24c:	bl	1a734 <lchmod@@Base+0x36a8>
   1a250:	push	{fp, lr}
   1a254:	mov	fp, sp
   1a258:	cmp	r1, #0
   1a25c:	orreq	r1, r1, #1
   1a260:	bl	1a878 <lchmod@@Base+0x37ec>
   1a264:	cmp	r0, #0
   1a268:	popne	{fp, pc}
   1a26c:	bl	1a734 <lchmod@@Base+0x36a8>
   1a270:	push	{fp, lr}
   1a274:	mov	fp, sp
   1a278:	clz	r3, r2
   1a27c:	lsr	ip, r3, #5
   1a280:	clz	r3, r1
   1a284:	lsr	r3, r3, #5
   1a288:	orrs	r3, r3, ip
   1a28c:	movwne	r1, #1
   1a290:	movwne	r2, #1
   1a294:	bl	1af88 <lchmod@@Base+0x3efc>
   1a298:	cmp	r0, #0
   1a29c:	popne	{fp, pc}
   1a2a0:	bl	1a734 <lchmod@@Base+0x36a8>
   1a2a4:	push	{fp, lr}
   1a2a8:	mov	fp, sp
   1a2ac:	mov	r2, r1
   1a2b0:	mov	r1, r0
   1a2b4:	mov	r0, #0
   1a2b8:	bl	1af88 <lchmod@@Base+0x3efc>
   1a2bc:	cmp	r0, #0
   1a2c0:	popne	{fp, pc}
   1a2c4:	bl	1a734 <lchmod@@Base+0x36a8>
   1a2c8:	push	{fp, lr}
   1a2cc:	mov	fp, sp
   1a2d0:	mov	r2, r1
   1a2d4:	mov	r1, r0
   1a2d8:	clz	r0, r2
   1a2dc:	clz	r3, r1
   1a2e0:	lsr	r0, r0, #5
   1a2e4:	lsr	r3, r3, #5
   1a2e8:	orrs	r0, r3, r0
   1a2ec:	movwne	r1, #1
   1a2f0:	movwne	r2, #1
   1a2f4:	mov	r0, #0
   1a2f8:	bl	1af88 <lchmod@@Base+0x3efc>
   1a2fc:	cmp	r0, #0
   1a300:	popne	{fp, pc}
   1a304:	bl	1a734 <lchmod@@Base+0x36a8>
   1a308:	push	{r4, r5, r6, sl, fp, lr}
   1a30c:	add	fp, sp, #16
   1a310:	ldr	r5, [r1]
   1a314:	mov	r4, r1
   1a318:	mov	r6, r0
   1a31c:	cmp	r0, #0
   1a320:	beq	1a338 <lchmod@@Base+0x32ac>
   1a324:	mov	r0, #1
   1a328:	add	r0, r0, r5, lsr #1
   1a32c:	adds	r5, r5, r0
   1a330:	bcc	1a340 <lchmod@@Base+0x32b4>
   1a334:	b	1a37c <lchmod@@Base+0x32f0>
   1a338:	cmp	r5, #0
   1a33c:	movweq	r5, #64	; 0x40
   1a340:	mov	r0, r6
   1a344:	mov	r1, r5
   1a348:	mov	r2, #1
   1a34c:	bl	1af88 <lchmod@@Base+0x3efc>
   1a350:	cmp	r5, #0
   1a354:	mov	r1, r5
   1a358:	movwne	r1, #1
   1a35c:	cmp	r0, #0
   1a360:	bne	1a374 <lchmod@@Base+0x32e8>
   1a364:	clz	r2, r6
   1a368:	lsr	r2, r2, #5
   1a36c:	orrs	r1, r2, r1
   1a370:	bne	1a37c <lchmod@@Base+0x32f0>
   1a374:	str	r5, [r4]
   1a378:	pop	{r4, r5, r6, sl, fp, pc}
   1a37c:	bl	1a734 <lchmod@@Base+0x36a8>
   1a380:	push	{r4, r5, r6, r7, fp, lr}
   1a384:	add	fp, sp, #16
   1a388:	ldr	r5, [r1]
   1a38c:	mov	r6, r2
   1a390:	mov	r4, r1
   1a394:	mov	r7, r0
   1a398:	cmp	r0, #0
   1a39c:	beq	1a3b4 <lchmod@@Base+0x3328>
   1a3a0:	mov	r0, #1
   1a3a4:	add	r0, r0, r5, lsr #1
   1a3a8:	adds	r5, r5, r0
   1a3ac:	bcc	1a3cc <lchmod@@Base+0x3340>
   1a3b0:	b	1a400 <lchmod@@Base+0x3374>
   1a3b4:	cmp	r5, #0
   1a3b8:	bne	1a3cc <lchmod@@Base+0x3340>
   1a3bc:	mov	r0, #64	; 0x40
   1a3c0:	cmp	r6, #64	; 0x40
   1a3c4:	udiv	r5, r0, r6
   1a3c8:	addhi	r5, r5, #1
   1a3cc:	mov	r0, r7
   1a3d0:	mov	r1, r5
   1a3d4:	mov	r2, r6
   1a3d8:	bl	1af88 <lchmod@@Base+0x3efc>
   1a3dc:	cmp	r0, #0
   1a3e0:	bne	1a3f8 <lchmod@@Base+0x336c>
   1a3e4:	cmp	r7, #0
   1a3e8:	beq	1a400 <lchmod@@Base+0x3374>
   1a3ec:	cmp	r6, #0
   1a3f0:	cmpne	r5, #0
   1a3f4:	bne	1a400 <lchmod@@Base+0x3374>
   1a3f8:	str	r5, [r4]
   1a3fc:	pop	{r4, r5, r6, r7, fp, pc}
   1a400:	bl	1a734 <lchmod@@Base+0x36a8>
   1a404:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a408:	add	fp, sp, #24
   1a40c:	mov	r8, r1
   1a410:	ldr	r1, [r1]
   1a414:	mov	r5, r0
   1a418:	add	r0, r1, r1, asr #1
   1a41c:	cmp	r0, r1
   1a420:	mvnvs	r0, #-2147483648	; 0x80000000
   1a424:	cmp	r0, r3
   1a428:	mov	r7, r0
   1a42c:	movgt	r7, r3
   1a430:	cmn	r3, #1
   1a434:	movle	r7, r0
   1a438:	ldr	r0, [fp, #8]
   1a43c:	cmn	r0, #1
   1a440:	ble	1a468 <lchmod@@Base+0x33dc>
   1a444:	cmp	r0, #0
   1a448:	beq	1a4bc <lchmod@@Base+0x3430>
   1a44c:	cmn	r7, #1
   1a450:	ble	1a490 <lchmod@@Base+0x3404>
   1a454:	mvn	r4, #-2147483648	; 0x80000000
   1a458:	udiv	r6, r4, r0
   1a45c:	cmp	r6, r7
   1a460:	bge	1a4bc <lchmod@@Base+0x3430>
   1a464:	b	1a4cc <lchmod@@Base+0x3440>
   1a468:	cmn	r7, #1
   1a46c:	ble	1a4ac <lchmod@@Base+0x3420>
   1a470:	cmn	r0, #1
   1a474:	beq	1a4bc <lchmod@@Base+0x3430>
   1a478:	mov	r6, #-2147483648	; 0x80000000
   1a47c:	mvn	r4, #-2147483648	; 0x80000000
   1a480:	sdiv	r6, r6, r0
   1a484:	cmp	r6, r7
   1a488:	bge	1a4bc <lchmod@@Base+0x3430>
   1a48c:	b	1a4cc <lchmod@@Base+0x3440>
   1a490:	beq	1a4bc <lchmod@@Base+0x3430>
   1a494:	mov	r6, #-2147483648	; 0x80000000
   1a498:	mvn	r4, #-2147483648	; 0x80000000
   1a49c:	sdiv	r6, r6, r7
   1a4a0:	cmp	r6, r0
   1a4a4:	bge	1a4bc <lchmod@@Base+0x3430>
   1a4a8:	b	1a4cc <lchmod@@Base+0x3440>
   1a4ac:	mvn	r4, #-2147483648	; 0x80000000
   1a4b0:	sdiv	r6, r4, r0
   1a4b4:	cmp	r7, r6
   1a4b8:	blt	1a4cc <lchmod@@Base+0x3440>
   1a4bc:	mul	r6, r7, r0
   1a4c0:	mov	r4, #64	; 0x40
   1a4c4:	cmp	r6, #63	; 0x3f
   1a4c8:	bgt	1a4d4 <lchmod@@Base+0x3448>
   1a4cc:	sdiv	r7, r4, r0
   1a4d0:	mul	r6, r7, r0
   1a4d4:	cmp	r5, #0
   1a4d8:	moveq	r4, #0
   1a4dc:	streq	r4, [r8]
   1a4e0:	sub	r4, r7, r1
   1a4e4:	cmp	r4, r2
   1a4e8:	bge	1a594 <lchmod@@Base+0x3508>
   1a4ec:	add	r7, r1, r2
   1a4f0:	mov	r6, #0
   1a4f4:	mov	r2, #0
   1a4f8:	cmp	r7, r3
   1a4fc:	movwgt	r6, #1
   1a500:	cmn	r3, #1
   1a504:	movwgt	r2, #1
   1a508:	cmp	r7, r1
   1a50c:	bvs	1a5c8 <lchmod@@Base+0x353c>
   1a510:	ands	r1, r2, r6
   1a514:	bne	1a5c8 <lchmod@@Base+0x353c>
   1a518:	cmn	r0, #1
   1a51c:	ble	1a544 <lchmod@@Base+0x34b8>
   1a520:	cmp	r0, #0
   1a524:	beq	1a590 <lchmod@@Base+0x3504>
   1a528:	cmn	r7, #1
   1a52c:	ble	1a568 <lchmod@@Base+0x34dc>
   1a530:	mvn	r1, #-2147483648	; 0x80000000
   1a534:	udiv	r1, r1, r0
   1a538:	cmp	r1, r7
   1a53c:	bge	1a590 <lchmod@@Base+0x3504>
   1a540:	b	1a5c8 <lchmod@@Base+0x353c>
   1a544:	cmn	r7, #1
   1a548:	ble	1a580 <lchmod@@Base+0x34f4>
   1a54c:	cmn	r0, #1
   1a550:	beq	1a590 <lchmod@@Base+0x3504>
   1a554:	mov	r1, #-2147483648	; 0x80000000
   1a558:	sdiv	r1, r1, r0
   1a55c:	cmp	r1, r7
   1a560:	bge	1a590 <lchmod@@Base+0x3504>
   1a564:	b	1a5c8 <lchmod@@Base+0x353c>
   1a568:	beq	1a590 <lchmod@@Base+0x3504>
   1a56c:	mov	r1, #-2147483648	; 0x80000000
   1a570:	sdiv	r1, r1, r7
   1a574:	cmp	r1, r0
   1a578:	bge	1a590 <lchmod@@Base+0x3504>
   1a57c:	b	1a5c8 <lchmod@@Base+0x353c>
   1a580:	mvn	r1, #-2147483648	; 0x80000000
   1a584:	sdiv	r1, r1, r0
   1a588:	cmp	r7, r1
   1a58c:	blt	1a5c8 <lchmod@@Base+0x353c>
   1a590:	mul	r6, r7, r0
   1a594:	mov	r0, r5
   1a598:	mov	r1, r6
   1a59c:	bl	1a878 <lchmod@@Base+0x37ec>
   1a5a0:	cmp	r6, #0
   1a5a4:	movwne	r6, #1
   1a5a8:	cmp	r0, #0
   1a5ac:	bne	1a5c0 <lchmod@@Base+0x3534>
   1a5b0:	clz	r1, r5
   1a5b4:	lsr	r1, r1, #5
   1a5b8:	orrs	r1, r1, r6
   1a5bc:	bne	1a5c8 <lchmod@@Base+0x353c>
   1a5c0:	str	r7, [r8]
   1a5c4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a5c8:	bl	1a734 <lchmod@@Base+0x36a8>
   1a5cc:	push	{fp, lr}
   1a5d0:	mov	fp, sp
   1a5d4:	mov	r1, #1
   1a5d8:	bl	1a7f4 <lchmod@@Base+0x3768>
   1a5dc:	cmp	r0, #0
   1a5e0:	popne	{fp, pc}
   1a5e4:	bl	1a734 <lchmod@@Base+0x36a8>
   1a5e8:	push	{fp, lr}
   1a5ec:	mov	fp, sp
   1a5f0:	bl	1a7f4 <lchmod@@Base+0x3768>
   1a5f4:	cmp	r0, #0
   1a5f8:	popne	{fp, pc}
   1a5fc:	bl	1a734 <lchmod@@Base+0x36a8>
   1a600:	push	{fp, lr}
   1a604:	mov	fp, sp
   1a608:	mov	r1, #1
   1a60c:	bl	1a7f4 <lchmod@@Base+0x3768>
   1a610:	cmp	r0, #0
   1a614:	popne	{fp, pc}
   1a618:	bl	1a734 <lchmod@@Base+0x36a8>
   1a61c:	push	{fp, lr}
   1a620:	mov	fp, sp
   1a624:	bl	1a7f4 <lchmod@@Base+0x3768>
   1a628:	cmp	r0, #0
   1a62c:	popne	{fp, pc}
   1a630:	bl	1a734 <lchmod@@Base+0x36a8>
   1a634:	push	{r4, r5, r6, sl, fp, lr}
   1a638:	add	fp, sp, #16
   1a63c:	mov	r5, r0
   1a640:	mov	r0, r1
   1a644:	mov	r4, r1
   1a648:	bl	1a848 <lchmod@@Base+0x37bc>
   1a64c:	cmp	r0, #0
   1a650:	beq	1a66c <lchmod@@Base+0x35e0>
   1a654:	mov	r1, r5
   1a658:	mov	r2, r4
   1a65c:	mov	r6, r0
   1a660:	bl	11730 <memcpy@plt>
   1a664:	mov	r0, r6
   1a668:	pop	{r4, r5, r6, sl, fp, pc}
   1a66c:	bl	1a734 <lchmod@@Base+0x36a8>
   1a670:	push	{r4, r5, r6, sl, fp, lr}
   1a674:	add	fp, sp, #16
   1a678:	mov	r5, r0
   1a67c:	mov	r0, r1
   1a680:	mov	r4, r1
   1a684:	bl	1a848 <lchmod@@Base+0x37bc>
   1a688:	cmp	r0, #0
   1a68c:	beq	1a6a8 <lchmod@@Base+0x361c>
   1a690:	mov	r1, r5
   1a694:	mov	r2, r4
   1a698:	mov	r6, r0
   1a69c:	bl	11730 <memcpy@plt>
   1a6a0:	mov	r0, r6
   1a6a4:	pop	{r4, r5, r6, sl, fp, pc}
   1a6a8:	bl	1a734 <lchmod@@Base+0x36a8>
   1a6ac:	push	{r4, r5, r6, sl, fp, lr}
   1a6b0:	add	fp, sp, #16
   1a6b4:	mov	r5, r0
   1a6b8:	add	r0, r1, #1
   1a6bc:	mov	r4, r1
   1a6c0:	bl	1a848 <lchmod@@Base+0x37bc>
   1a6c4:	cmp	r0, #0
   1a6c8:	beq	1a6f0 <lchmod@@Base+0x3664>
   1a6cc:	mov	r6, r0
   1a6d0:	mov	r0, #0
   1a6d4:	mov	r1, r5
   1a6d8:	mov	r2, r4
   1a6dc:	strb	r0, [r6, r4]
   1a6e0:	mov	r0, r6
   1a6e4:	bl	11730 <memcpy@plt>
   1a6e8:	mov	r0, r6
   1a6ec:	pop	{r4, r5, r6, sl, fp, pc}
   1a6f0:	bl	1a734 <lchmod@@Base+0x36a8>
   1a6f4:	push	{r4, r5, r6, sl, fp, lr}
   1a6f8:	add	fp, sp, #16
   1a6fc:	mov	r4, r0
   1a700:	bl	118bc <strlen@plt>
   1a704:	add	r5, r0, #1
   1a708:	mov	r0, r5
   1a70c:	bl	1a848 <lchmod@@Base+0x37bc>
   1a710:	cmp	r0, #0
   1a714:	beq	1a730 <lchmod@@Base+0x36a4>
   1a718:	mov	r1, r4
   1a71c:	mov	r2, r5
   1a720:	mov	r6, r0
   1a724:	bl	11730 <memcpy@plt>
   1a728:	mov	r0, r6
   1a72c:	pop	{r4, r5, r6, sl, fp, pc}
   1a730:	bl	1a734 <lchmod@@Base+0x36a8>
   1a734:	push	{fp, lr}
   1a738:	mov	fp, sp
   1a73c:	movw	r0, #49532	; 0xc17c
   1a740:	movw	r1, #48442	; 0xbd3a
   1a744:	mov	r2, #5
   1a748:	movt	r0, #2
   1a74c:	movt	r1, #1
   1a750:	ldr	r4, [r0]
   1a754:	mov	r0, #0
   1a758:	bl	11760 <dcgettext@plt>
   1a75c:	movw	r2, #47191	; 0xb857
   1a760:	mov	r3, r0
   1a764:	mov	r0, r4
   1a768:	mov	r1, #0
   1a76c:	movt	r2, #1
   1a770:	bl	11820 <error@plt>
   1a774:	bl	11a3c <abort@plt>
   1a778:	push	{fp, lr}
   1a77c:	mov	fp, sp
   1a780:	orr	r1, r1, #512	; 0x200
   1a784:	bl	13398 <__assert_fail@plt+0x18fc>
   1a788:	cmp	r0, #0
   1a78c:	popne	{fp, pc}
   1a790:	bl	118ec <__errno_location@plt>
   1a794:	ldr	r0, [r0]
   1a798:	cmp	r0, #22
   1a79c:	bne	1a7c0 <lchmod@@Base+0x3734>
   1a7a0:	movw	r0, #48459	; 0xbd4b
   1a7a4:	movw	r1, #48475	; 0xbd5b
   1a7a8:	movw	r3, #48486	; 0xbd66
   1a7ac:	mov	r2, #41	; 0x29
   1a7b0:	movt	r0, #1
   1a7b4:	movt	r1, #1
   1a7b8:	movt	r3, #1
   1a7bc:	bl	11a9c <__assert_fail@plt>
   1a7c0:	bl	1a734 <lchmod@@Base+0x36a8>
   1a7c4:	ldr	r0, [r0, #48]	; 0x30
   1a7c8:	and	r0, r0, #17
   1a7cc:	cmp	r0, #16
   1a7d0:	moveq	r0, #1
   1a7d4:	bxeq	lr
   1a7d8:	cmp	r0, #17
   1a7dc:	movne	r0, #0
   1a7e0:	bxne	lr
   1a7e4:	ldr	r0, [r1, #48]	; 0x30
   1a7e8:	cmp	r0, #0
   1a7ec:	movwne	r0, #1
   1a7f0:	bx	lr
   1a7f4:	clz	r2, r1
   1a7f8:	clz	r3, r0
   1a7fc:	lsr	r2, r2, #5
   1a800:	lsr	r3, r3, #5
   1a804:	orrs	r2, r3, r2
   1a808:	movwne	r1, #1
   1a80c:	movwne	r0, #1
   1a810:	cmp	r1, #0
   1a814:	beq	1a844 <lchmod@@Base+0x37b8>
   1a818:	mvn	r2, #-2147483648	; 0x80000000
   1a81c:	udiv	r2, r2, r1
   1a820:	cmp	r2, r0
   1a824:	bcs	1a844 <lchmod@@Base+0x37b8>
   1a828:	push	{fp, lr}
   1a82c:	mov	fp, sp
   1a830:	bl	118ec <__errno_location@plt>
   1a834:	mov	r1, #12
   1a838:	str	r1, [r0]
   1a83c:	mov	r0, #0
   1a840:	pop	{fp, pc}
   1a844:	b	116a0 <calloc@plt>
   1a848:	cmp	r0, #0
   1a84c:	movweq	r0, #1
   1a850:	cmn	r0, #1
   1a854:	ble	1a85c <lchmod@@Base+0x37d0>
   1a858:	b	11844 <malloc@plt>
   1a85c:	push	{fp, lr}
   1a860:	mov	fp, sp
   1a864:	bl	118ec <__errno_location@plt>
   1a868:	mov	r1, #12
   1a86c:	str	r1, [r0]
   1a870:	mov	r0, #0
   1a874:	pop	{fp, pc}
   1a878:	push	{fp, lr}
   1a87c:	mov	fp, sp
   1a880:	cmp	r0, #0
   1a884:	beq	1a8a0 <lchmod@@Base+0x3814>
   1a888:	cmp	r1, #0
   1a88c:	beq	1a8ac <lchmod@@Base+0x3820>
   1a890:	cmn	r1, #1
   1a894:	ble	1a8b8 <lchmod@@Base+0x382c>
   1a898:	pop	{fp, lr}
   1a89c:	b	11778 <realloc@plt>
   1a8a0:	mov	r0, r1
   1a8a4:	pop	{fp, lr}
   1a8a8:	b	1a848 <lchmod@@Base+0x37bc>
   1a8ac:	bl	13370 <__assert_fail@plt+0x18d4>
   1a8b0:	mov	r0, #0
   1a8b4:	pop	{fp, pc}
   1a8b8:	bl	118ec <__errno_location@plt>
   1a8bc:	mov	r1, #12
   1a8c0:	str	r1, [r0]
   1a8c4:	mov	r0, #0
   1a8c8:	pop	{fp, pc}
   1a8cc:	sub	r0, r0, #1
   1a8d0:	ldrb	r3, [r0, #1]!
   1a8d4:	cmp	r3, #47	; 0x2f
   1a8d8:	beq	1a8d0 <lchmod@@Base+0x3844>
   1a8dc:	mov	r2, #0
   1a8e0:	mov	r1, r0
   1a8e4:	uxtb	r3, r3
   1a8e8:	cmp	r3, #47	; 0x2f
   1a8ec:	beq	1a914 <lchmod@@Base+0x3888>
   1a8f0:	cmp	r3, #0
   1a8f4:	bxeq	lr
   1a8f8:	tst	r2, #1
   1a8fc:	mov	r2, #0
   1a900:	movne	r0, r1
   1a904:	ldrb	r3, [r1, #1]!
   1a908:	uxtb	r3, r3
   1a90c:	cmp	r3, #47	; 0x2f
   1a910:	bne	1a8f0 <lchmod@@Base+0x3864>
   1a914:	ldrb	r3, [r1, #1]!
   1a918:	mov	r2, #1
   1a91c:	uxtb	r3, r3
   1a920:	cmp	r3, #47	; 0x2f
   1a924:	bne	1a8f0 <lchmod@@Base+0x3864>
   1a928:	b	1a914 <lchmod@@Base+0x3888>
   1a92c:	push	{r4, sl, fp, lr}
   1a930:	add	fp, sp, #8
   1a934:	mov	r4, r0
   1a938:	bl	118bc <strlen@plt>
   1a93c:	mov	r1, r0
   1a940:	sub	r2, r4, #1
   1a944:	mov	r0, r1
   1a948:	cmp	r1, #2
   1a94c:	popcc	{r4, sl, fp, pc}
   1a950:	ldrb	r3, [r2, r0]
   1a954:	sub	r1, r0, #1
   1a958:	cmp	r3, #47	; 0x2f
   1a95c:	beq	1a944 <lchmod@@Base+0x38b8>
   1a960:	pop	{r4, sl, fp, pc}
   1a964:	push	{r4, r5, r6, sl, fp, lr}
   1a968:	add	fp, sp, #16
   1a96c:	mov	r4, r0
   1a970:	bl	11808 <__fpending@plt>
   1a974:	ldr	r6, [r4]
   1a978:	mov	r5, r0
   1a97c:	mov	r0, r4
   1a980:	bl	1aadc <lchmod@@Base+0x3a50>
   1a984:	tst	r6, #32
   1a988:	bne	1a9c0 <lchmod@@Base+0x3934>
   1a98c:	cmp	r0, #0
   1a990:	mov	r4, r0
   1a994:	mvnne	r4, #0
   1a998:	cmp	r5, #0
   1a99c:	bne	1a9cc <lchmod@@Base+0x3940>
   1a9a0:	cmp	r0, #0
   1a9a4:	beq	1a9cc <lchmod@@Base+0x3940>
   1a9a8:	bl	118ec <__errno_location@plt>
   1a9ac:	ldr	r0, [r0]
   1a9b0:	subs	r4, r0, #9
   1a9b4:	mvnne	r4, #0
   1a9b8:	mov	r0, r4
   1a9bc:	pop	{r4, r5, r6, sl, fp, pc}
   1a9c0:	mvn	r4, #0
   1a9c4:	cmp	r0, #0
   1a9c8:	beq	1a9d4 <lchmod@@Base+0x3948>
   1a9cc:	mov	r0, r4
   1a9d0:	pop	{r4, r5, r6, sl, fp, pc}
   1a9d4:	bl	118ec <__errno_location@plt>
   1a9d8:	mov	r1, #0
   1a9dc:	str	r1, [r0]
   1a9e0:	mov	r0, r4
   1a9e4:	pop	{r4, r5, r6, sl, fp, pc}
   1a9e8:	movw	r2, #62998	; 0xf616
   1a9ec:	mov	r1, #0
   1a9f0:	movt	r2, #149	; 0x95
   1a9f4:	str	r1, [r0, #16]
   1a9f8:	str	r1, [r0, #20]
   1a9fc:	str	r2, [r0, #24]
   1aa00:	bx	lr
   1aa04:	push	{r4, r5, r6, r7, fp, lr}
   1aa08:	add	fp, sp, #16
   1aa0c:	ldr	r2, [r0, #24]
   1aa10:	movw	r3, #62998	; 0xf616
   1aa14:	movt	r3, #149	; 0x95
   1aa18:	cmp	r2, r3
   1aa1c:	bne	1aabc <lchmod@@Base+0x3a30>
   1aa20:	mov	r3, r0
   1aa24:	ldr	r2, [r3, #16]!
   1aa28:	ldr	lr, [r3, #4]
   1aa2c:	orrs	r5, r2, lr
   1aa30:	beq	1aa68 <lchmod@@Base+0x39dc>
   1aa34:	ldrd	r4, [r0]
   1aa38:	ldrd	r6, [r1, #96]	; 0x60
   1aa3c:	eor	r7, r7, r5
   1aa40:	eor	r6, r6, r4
   1aa44:	orrs	r7, r6, r7
   1aa48:	bne	1aa68 <lchmod@@Base+0x39dc>
   1aa4c:	ldrd	r4, [r0, #8]
   1aa50:	ldrd	r6, [r1]
   1aa54:	mov	ip, #1
   1aa58:	eor	r7, r7, r5
   1aa5c:	eor	r6, r6, r4
   1aa60:	orrs	r7, r6, r7
   1aa64:	beq	1aa88 <lchmod@@Base+0x39fc>
   1aa68:	adds	r4, r2, #1
   1aa6c:	mov	ip, #0
   1aa70:	adc	r5, lr, #0
   1aa74:	and	r2, r4, r2
   1aa78:	strd	r4, [r3]
   1aa7c:	and	r3, r5, lr
   1aa80:	orrs	r2, r2, r3
   1aa84:	beq	1aa90 <lchmod@@Base+0x3a04>
   1aa88:	mov	r0, ip
   1aa8c:	pop	{r4, r5, r6, r7, fp, pc}
   1aa90:	orrs	r2, r4, r5
   1aa94:	moveq	ip, #1
   1aa98:	moveq	r0, ip
   1aa9c:	popeq	{r4, r5, r6, r7, fp, pc}
   1aaa0:	ldrd	r2, [r1]
   1aaa4:	str	r3, [r0, #12]
   1aaa8:	str	r2, [r0, #8]
   1aaac:	ldrd	r2, [r1, #96]	; 0x60
   1aab0:	stm	r0, {r2, r3}
   1aab4:	mov	r0, ip
   1aab8:	pop	{r4, r5, r6, r7, fp, pc}
   1aabc:	movw	r0, #48564	; 0xbdb4
   1aac0:	movw	r1, #48588	; 0xbdcc
   1aac4:	movw	r3, #48606	; 0xbdde
   1aac8:	mov	r2, #60	; 0x3c
   1aacc:	movt	r0, #1
   1aad0:	movt	r1, #1
   1aad4:	movt	r3, #1
   1aad8:	bl	11a9c <__assert_fail@plt>
   1aadc:	push	{r4, r5, r6, sl, fp, lr}
   1aae0:	add	fp, sp, #16
   1aae4:	sub	sp, sp, #8
   1aae8:	mov	r4, r0
   1aaec:	bl	11928 <fileno@plt>
   1aaf0:	cmn	r0, #1
   1aaf4:	ble	1ab68 <lchmod@@Base+0x3adc>
   1aaf8:	mov	r0, r4
   1aafc:	bl	1185c <__freading@plt>
   1ab00:	cmp	r0, #0
   1ab04:	beq	1ab30 <lchmod@@Base+0x3aa4>
   1ab08:	mov	r0, r4
   1ab0c:	bl	11928 <fileno@plt>
   1ab10:	mov	r1, #1
   1ab14:	mov	r2, #0
   1ab18:	mov	r3, #0
   1ab1c:	str	r1, [sp]
   1ab20:	bl	117e4 <lseek64@plt>
   1ab24:	and	r0, r0, r1
   1ab28:	cmn	r0, #1
   1ab2c:	beq	1ab68 <lchmod@@Base+0x3adc>
   1ab30:	mov	r0, r4
   1ab34:	bl	1ada0 <lchmod@@Base+0x3d14>
   1ab38:	cmp	r0, #0
   1ab3c:	beq	1ab68 <lchmod@@Base+0x3adc>
   1ab40:	bl	118ec <__errno_location@plt>
   1ab44:	ldr	r6, [r0]
   1ab48:	mov	r5, r0
   1ab4c:	mov	r0, r4
   1ab50:	bl	11940 <fclose@plt>
   1ab54:	cmp	r6, #0
   1ab58:	strne	r6, [r5]
   1ab5c:	mvnne	r0, #0
   1ab60:	sub	sp, fp, #16
   1ab64:	pop	{r4, r5, r6, sl, fp, pc}
   1ab68:	mov	r0, r4
   1ab6c:	sub	sp, fp, #16
   1ab70:	pop	{r4, r5, r6, sl, fp, lr}
   1ab74:	b	11940 <fclose@plt>
   1ab78:	sub	sp, sp, #8
   1ab7c:	push	{r4, r5, r6, r7, fp, lr}
   1ab80:	add	fp, sp, #16
   1ab84:	sub	sp, sp, #8
   1ab88:	mov	r5, r0
   1ab8c:	add	r0, fp, #8
   1ab90:	cmp	r1, #11
   1ab94:	str	r3, [fp, #12]
   1ab98:	str	r2, [fp, #8]
   1ab9c:	str	r0, [sp, #4]
   1aba0:	bhi	1abdc <lchmod@@Base+0x3b50>
   1aba4:	mov	r0, #1
   1aba8:	movw	r2, #1300	; 0x514
   1abac:	tst	r2, r0, lsl r1
   1abb0:	bne	1ac9c <lchmod@@Base+0x3c10>
   1abb4:	movw	r2, #2570	; 0xa0a
   1abb8:	tst	r2, r0, lsl r1
   1abbc:	bne	1ac04 <lchmod@@Base+0x3b78>
   1abc0:	cmp	r1, #0
   1abc4:	bne	1abdc <lchmod@@Base+0x3b50>
   1abc8:	ldr	r0, [sp, #4]
   1abcc:	add	r1, r0, #4
   1abd0:	str	r1, [sp, #4]
   1abd4:	mov	r1, #0
   1abd8:	b	1aca8 <lchmod@@Base+0x3c1c>
   1abdc:	sub	r0, r1, #1024	; 0x400
   1abe0:	cmp	r0, #10
   1abe4:	bhi	1ac9c <lchmod@@Base+0x3c10>
   1abe8:	mov	r2, #1
   1abec:	movw	r3, #645	; 0x285
   1abf0:	tst	r3, r2, lsl r0
   1abf4:	bne	1ac9c <lchmod@@Base+0x3c10>
   1abf8:	movw	r3, #1282	; 0x502
   1abfc:	tst	r3, r2, lsl r0
   1ac00:	beq	1ac10 <lchmod@@Base+0x3b84>
   1ac04:	mov	r0, r5
   1ac08:	bl	11958 <fcntl64@plt>
   1ac0c:	b	1acb4 <lchmod@@Base+0x3c28>
   1ac10:	cmp	r0, #6
   1ac14:	bne	1ac9c <lchmod@@Base+0x3c10>
   1ac18:	ldr	r0, [sp, #4]
   1ac1c:	movw	r7, #49952	; 0xc320
   1ac20:	movt	r7, #2
   1ac24:	add	r1, r0, #4
   1ac28:	str	r1, [sp, #4]
   1ac2c:	ldr	r6, [r0]
   1ac30:	ldr	r0, [r7]
   1ac34:	cmp	r0, #0
   1ac38:	blt	1acd8 <lchmod@@Base+0x3c4c>
   1ac3c:	mov	r0, r5
   1ac40:	movw	r1, #1030	; 0x406
   1ac44:	mov	r2, r6
   1ac48:	bl	11958 <fcntl64@plt>
   1ac4c:	mov	r4, r0
   1ac50:	cmn	r0, #1
   1ac54:	bgt	1accc <lchmod@@Base+0x3c40>
   1ac58:	bl	118ec <__errno_location@plt>
   1ac5c:	ldr	r0, [r0]
   1ac60:	cmp	r0, #22
   1ac64:	bne	1accc <lchmod@@Base+0x3c40>
   1ac68:	mov	r0, r5
   1ac6c:	mov	r1, #0
   1ac70:	mov	r2, r6
   1ac74:	bl	11958 <fcntl64@plt>
   1ac78:	mov	r4, r0
   1ac7c:	cmp	r0, #0
   1ac80:	blt	1acb8 <lchmod@@Base+0x3c2c>
   1ac84:	mvn	r0, #0
   1ac88:	str	r0, [r7]
   1ac8c:	mov	r0, #1
   1ac90:	cmp	r0, #0
   1ac94:	bne	1ad04 <lchmod@@Base+0x3c78>
   1ac98:	b	1acb8 <lchmod@@Base+0x3c2c>
   1ac9c:	ldr	r0, [sp, #4]
   1aca0:	add	r2, r0, #4
   1aca4:	str	r2, [sp, #4]
   1aca8:	ldr	r2, [r0]
   1acac:	mov	r0, r5
   1acb0:	bl	11958 <fcntl64@plt>
   1acb4:	mov	r4, r0
   1acb8:	mov	r0, r4
   1acbc:	sub	sp, fp, #16
   1acc0:	pop	{r4, r5, r6, r7, fp, lr}
   1acc4:	add	sp, sp, #8
   1acc8:	bx	lr
   1accc:	mov	r0, #1
   1acd0:	str	r0, [r7]
   1acd4:	b	1acb8 <lchmod@@Base+0x3c2c>
   1acd8:	mov	r0, r5
   1acdc:	mov	r1, #0
   1ace0:	mov	r2, r6
   1ace4:	bl	11958 <fcntl64@plt>
   1ace8:	mov	r4, r0
   1acec:	ldr	r0, [r7]
   1acf0:	add	r0, r0, #1
   1acf4:	clz	r0, r0
   1acf8:	lsr	r0, r0, #5
   1acfc:	cmp	r0, #0
   1ad00:	beq	1acb8 <lchmod@@Base+0x3c2c>
   1ad04:	cmp	r4, #0
   1ad08:	blt	1acb8 <lchmod@@Base+0x3c2c>
   1ad0c:	mov	r0, r4
   1ad10:	mov	r1, #1
   1ad14:	bl	11958 <fcntl64@plt>
   1ad18:	cmp	r0, #0
   1ad1c:	blt	1ad38 <lchmod@@Base+0x3cac>
   1ad20:	orr	r2, r0, #1
   1ad24:	mov	r0, r4
   1ad28:	mov	r1, #2
   1ad2c:	bl	11958 <fcntl64@plt>
   1ad30:	cmn	r0, #1
   1ad34:	bne	1acb8 <lchmod@@Base+0x3c2c>
   1ad38:	bl	118ec <__errno_location@plt>
   1ad3c:	ldr	r6, [r0]
   1ad40:	mov	r5, r0
   1ad44:	mov	r0, r4
   1ad48:	bl	11a48 <close@plt>
   1ad4c:	str	r6, [r5]
   1ad50:	mvn	r4, #0
   1ad54:	b	1acb8 <lchmod@@Base+0x3c2c>
   1ad58:	sub	sp, sp, #8
   1ad5c:	push	{fp, lr}
   1ad60:	mov	fp, sp
   1ad64:	sub	sp, sp, #8
   1ad68:	str	r2, [fp, #8]
   1ad6c:	mov	r2, #0
   1ad70:	tst	r1, #64	; 0x40
   1ad74:	str	r3, [fp, #12]
   1ad78:	addne	r2, fp, #8
   1ad7c:	orrne	r2, r2, #4
   1ad80:	strne	r2, [sp, #4]
   1ad84:	ldrne	r2, [fp, #8]
   1ad88:	bl	1182c <open64@plt>
   1ad8c:	bl	19ad0 <lchmod@@Base+0x2a44>
   1ad90:	mov	sp, fp
   1ad94:	pop	{fp, lr}
   1ad98:	add	sp, sp, #8
   1ad9c:	bx	lr
   1ada0:	push	{r4, sl, fp, lr}
   1ada4:	add	fp, sp, #8
   1ada8:	sub	sp, sp, #8
   1adac:	mov	r4, r0
   1adb0:	cmp	r0, #0
   1adb4:	beq	1add0 <lchmod@@Base+0x3d44>
   1adb8:	mov	r0, r4
   1adbc:	bl	1185c <__freading@plt>
   1adc0:	cmp	r0, #0
   1adc4:	ldrbne	r0, [r4, #1]
   1adc8:	tstne	r0, #1
   1adcc:	bne	1ade0 <lchmod@@Base+0x3d54>
   1add0:	mov	r0, r4
   1add4:	sub	sp, fp, #8
   1add8:	pop	{r4, sl, fp, lr}
   1addc:	b	116e8 <fflush@plt>
   1ade0:	mov	r0, #1
   1ade4:	mov	r2, #0
   1ade8:	mov	r3, #0
   1adec:	str	r0, [sp]
   1adf0:	mov	r0, r4
   1adf4:	bl	1ae08 <lchmod@@Base+0x3d7c>
   1adf8:	mov	r0, r4
   1adfc:	sub	sp, fp, #8
   1ae00:	pop	{r4, sl, fp, lr}
   1ae04:	b	116e8 <fflush@plt>
   1ae08:	push	{r4, r5, r6, r7, fp, lr}
   1ae0c:	add	fp, sp, #16
   1ae10:	sub	sp, sp, #8
   1ae14:	mov	r4, r0
   1ae18:	ldr	r0, [r0, #4]
   1ae1c:	mov	r5, r3
   1ae20:	mov	r6, r2
   1ae24:	ldr	r1, [r4, #8]
   1ae28:	cmp	r1, r0
   1ae2c:	bne	1ae48 <lchmod@@Base+0x3dbc>
   1ae30:	ldrd	r0, [r4, #16]
   1ae34:	cmp	r1, r0
   1ae38:	bne	1ae48 <lchmod@@Base+0x3dbc>
   1ae3c:	ldr	r0, [r4, #36]	; 0x24
   1ae40:	cmp	r0, #0
   1ae44:	beq	1ae60 <lchmod@@Base+0x3dd4>
   1ae48:	mov	r0, r4
   1ae4c:	mov	r2, r6
   1ae50:	mov	r3, r5
   1ae54:	sub	sp, fp, #16
   1ae58:	pop	{r4, r5, r6, r7, fp, lr}
   1ae5c:	b	1194c <fseeko64@plt>
   1ae60:	ldr	r7, [fp, #8]
   1ae64:	mov	r0, r4
   1ae68:	bl	11928 <fileno@plt>
   1ae6c:	mov	r2, r6
   1ae70:	mov	r3, r5
   1ae74:	str	r7, [sp]
   1ae78:	bl	117e4 <lseek64@plt>
   1ae7c:	and	r2, r0, r1
   1ae80:	cmn	r2, #1
   1ae84:	mvneq	r0, #0
   1ae88:	subeq	sp, fp, #16
   1ae8c:	popeq	{r4, r5, r6, r7, fp, pc}
   1ae90:	strd	r0, [r4, #80]	; 0x50
   1ae94:	ldr	r0, [r4]
   1ae98:	bic	r0, r0, #16
   1ae9c:	str	r0, [r4]
   1aea0:	mov	r0, #0
   1aea4:	sub	sp, fp, #16
   1aea8:	pop	{r4, r5, r6, r7, fp, pc}
   1aeac:	ldrb	r2, [r0]
   1aeb0:	cmp	r2, #0
   1aeb4:	beq	1aee0 <lchmod@@Base+0x3e54>
   1aeb8:	add	r3, r0, #1
   1aebc:	mov	r0, #0
   1aec0:	ror	r0, r0, #23
   1aec4:	uxtab	r0, r0, r2
   1aec8:	ldrb	r2, [r3], #1
   1aecc:	cmp	r2, #0
   1aed0:	bne	1aec0 <lchmod@@Base+0x3e34>
   1aed4:	udiv	r2, r0, r1
   1aed8:	mls	r0, r2, r1, r0
   1aedc:	bx	lr
   1aee0:	mov	r0, #0
   1aee4:	udiv	r2, r0, r1
   1aee8:	mls	r0, r2, r1, r0
   1aeec:	bx	lr
   1aef0:	push	{fp, lr}
   1aef4:	mov	fp, sp
   1aef8:	mov	r0, #14
   1aefc:	bl	11988 <nl_langinfo@plt>
   1af00:	movw	r1, #47004	; 0xb79c
   1af04:	cmp	r0, #0
   1af08:	movt	r1, #1
   1af0c:	movne	r1, r0
   1af10:	movw	r0, #48673	; 0xbe21
   1af14:	ldrb	r2, [r1]
   1af18:	movt	r0, #1
   1af1c:	cmp	r2, #0
   1af20:	movne	r0, r1
   1af24:	pop	{fp, pc}
   1af28:	push	{r4, r5, r6, r7, fp, lr}
   1af2c:	add	fp, sp, #16
   1af30:	sub	sp, sp, #8
   1af34:	add	r5, sp, #4
   1af38:	cmp	r0, #0
   1af3c:	mov	r7, r2
   1af40:	mov	r4, r1
   1af44:	movne	r5, r0
   1af48:	mov	r0, r5
   1af4c:	bl	11814 <mbrtowc@plt>
   1af50:	mov	r6, r0
   1af54:	cmp	r7, #0
   1af58:	beq	1af7c <lchmod@@Base+0x3ef0>
   1af5c:	cmn	r6, #2
   1af60:	bcc	1af7c <lchmod@@Base+0x3ef0>
   1af64:	mov	r0, #0
   1af68:	bl	1afd0 <lchmod@@Base+0x3f44>
   1af6c:	cmp	r0, #0
   1af70:	ldrbeq	r0, [r4]
   1af74:	moveq	r6, #1
   1af78:	streq	r0, [r5]
   1af7c:	mov	r0, r6
   1af80:	sub	sp, fp, #16
   1af84:	pop	{r4, r5, r6, r7, fp, pc}
   1af88:	cmp	r2, #0
   1af8c:	beq	1afbc <lchmod@@Base+0x3f30>
   1af90:	mvn	r3, #0
   1af94:	udiv	r3, r3, r2
   1af98:	cmp	r3, r1
   1af9c:	bcs	1afbc <lchmod@@Base+0x3f30>
   1afa0:	push	{fp, lr}
   1afa4:	mov	fp, sp
   1afa8:	bl	118ec <__errno_location@plt>
   1afac:	mov	r1, #12
   1afb0:	str	r1, [r0]
   1afb4:	mov	r0, #0
   1afb8:	pop	{fp, pc}
   1afbc:	mul	r1, r2, r1
   1afc0:	b	1a878 <lchmod@@Base+0x37ec>
   1afc4:	mov	r1, #0
   1afc8:	mov	r2, #3
   1afcc:	b	1ab78 <lchmod@@Base+0x3aec>
   1afd0:	push	{r4, sl, fp, lr}
   1afd4:	add	fp, sp, #8
   1afd8:	sub	sp, sp, #264	; 0x108
   1afdc:	add	r1, sp, #7
   1afe0:	movw	r2, #257	; 0x101
   1afe4:	bl	1b034 <lchmod@@Base+0x3fa8>
   1afe8:	mov	r4, #0
   1afec:	cmp	r0, #0
   1aff0:	bne	1b028 <lchmod@@Base+0x3f9c>
   1aff4:	movw	r1, #48679	; 0xbe27
   1aff8:	add	r0, sp, #7
   1affc:	movt	r1, #1
   1b000:	bl	116d0 <strcmp@plt>
   1b004:	cmp	r0, #0
   1b008:	beq	1b028 <lchmod@@Base+0x3f9c>
   1b00c:	movw	r1, #48681	; 0xbe29
   1b010:	add	r0, sp, #7
   1b014:	movt	r1, #1
   1b018:	bl	116d0 <strcmp@plt>
   1b01c:	mov	r4, r0
   1b020:	cmp	r0, #0
   1b024:	movwne	r4, #1
   1b028:	mov	r0, r4
   1b02c:	sub	sp, fp, #8
   1b030:	pop	{r4, sl, fp, pc}
   1b034:	push	{r4, r5, r6, r7, fp, lr}
   1b038:	add	fp, sp, #16
   1b03c:	mov	r4, r1
   1b040:	mov	r1, #0
   1b044:	mov	r6, r2
   1b048:	bl	11964 <setlocale@plt>
   1b04c:	cmp	r0, #0
   1b050:	beq	1b080 <lchmod@@Base+0x3ff4>
   1b054:	mov	r7, r0
   1b058:	bl	118bc <strlen@plt>
   1b05c:	cmp	r0, r6
   1b060:	bcs	1b0a0 <lchmod@@Base+0x4014>
   1b064:	add	r2, r0, #1
   1b068:	mov	r0, r4
   1b06c:	mov	r1, r7
   1b070:	bl	11730 <memcpy@plt>
   1b074:	mov	r5, #0
   1b078:	mov	r0, r5
   1b07c:	pop	{r4, r5, r6, r7, fp, pc}
   1b080:	cmp	r6, #0
   1b084:	mov	r5, #22
   1b088:	movne	r0, #0
   1b08c:	strbne	r0, [r4]
   1b090:	movne	r0, r5
   1b094:	popne	{r4, r5, r6, r7, fp, pc}
   1b098:	mov	r0, r5
   1b09c:	pop	{r4, r5, r6, r7, fp, pc}
   1b0a0:	mov	r5, #34	; 0x22
   1b0a4:	cmp	r6, #0
   1b0a8:	beq	1b0c8 <lchmod@@Base+0x403c>
   1b0ac:	sub	r6, r6, #1
   1b0b0:	mov	r0, r4
   1b0b4:	mov	r1, r7
   1b0b8:	mov	r2, r6
   1b0bc:	bl	11730 <memcpy@plt>
   1b0c0:	mov	r0, #0
   1b0c4:	strb	r0, [r4, r6]
   1b0c8:	mov	r0, r5
   1b0cc:	pop	{r4, r5, r6, r7, fp, pc}
   1b0d0:	mov	r1, #0
   1b0d4:	b	11964 <setlocale@plt>
   1b0d8:	cmp	r3, #0
   1b0dc:	cmpeq	r2, #0
   1b0e0:	bne	1b0f8 <lchmod@@Base+0x406c>
   1b0e4:	cmp	r1, #0
   1b0e8:	cmpeq	r0, #0
   1b0ec:	mvnne	r1, #0
   1b0f0:	mvnne	r0, #0
   1b0f4:	b	1b114 <lchmod@@Base+0x4088>
   1b0f8:	sub	sp, sp, #8
   1b0fc:	push	{sp, lr}
   1b100:	bl	1b124 <lchmod@@Base+0x4098>
   1b104:	ldr	lr, [sp, #4]
   1b108:	add	sp, sp, #8
   1b10c:	pop	{r2, r3}
   1b110:	bx	lr
   1b114:	push	{r1, lr}
   1b118:	mov	r0, #8
   1b11c:	bl	116b8 <raise@plt>
   1b120:	pop	{r1, pc}
   1b124:	cmp	r1, r3
   1b128:	cmpeq	r0, r2
   1b12c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b130:	mov	r4, r0
   1b134:	movcc	r0, #0
   1b138:	mov	r5, r1
   1b13c:	ldr	lr, [sp, #36]	; 0x24
   1b140:	movcc	r1, r0
   1b144:	bcc	1b240 <lchmod@@Base+0x41b4>
   1b148:	cmp	r3, #0
   1b14c:	clzeq	ip, r2
   1b150:	clzne	ip, r3
   1b154:	addeq	ip, ip, #32
   1b158:	cmp	r5, #0
   1b15c:	clzeq	r1, r4
   1b160:	addeq	r1, r1, #32
   1b164:	clzne	r1, r5
   1b168:	sub	ip, ip, r1
   1b16c:	sub	sl, ip, #32
   1b170:	lsl	r9, r3, ip
   1b174:	rsb	fp, ip, #32
   1b178:	orr	r9, r9, r2, lsl sl
   1b17c:	orr	r9, r9, r2, lsr fp
   1b180:	lsl	r8, r2, ip
   1b184:	cmp	r5, r9
   1b188:	cmpeq	r4, r8
   1b18c:	movcc	r0, #0
   1b190:	movcc	r1, r0
   1b194:	bcc	1b1b0 <lchmod@@Base+0x4124>
   1b198:	mov	r0, #1
   1b19c:	subs	r4, r4, r8
   1b1a0:	lsl	r1, r0, sl
   1b1a4:	orr	r1, r1, r0, lsr fp
   1b1a8:	lsl	r0, r0, ip
   1b1ac:	sbc	r5, r5, r9
   1b1b0:	cmp	ip, #0
   1b1b4:	beq	1b240 <lchmod@@Base+0x41b4>
   1b1b8:	lsr	r6, r8, #1
   1b1bc:	orr	r6, r6, r9, lsl #31
   1b1c0:	lsr	r7, r9, #1
   1b1c4:	mov	r2, ip
   1b1c8:	b	1b1ec <lchmod@@Base+0x4160>
   1b1cc:	subs	r3, r4, r6
   1b1d0:	sbc	r8, r5, r7
   1b1d4:	adds	r3, r3, r3
   1b1d8:	adc	r8, r8, r8
   1b1dc:	adds	r4, r3, #1
   1b1e0:	adc	r5, r8, #0
   1b1e4:	subs	r2, r2, #1
   1b1e8:	beq	1b208 <lchmod@@Base+0x417c>
   1b1ec:	cmp	r5, r7
   1b1f0:	cmpeq	r4, r6
   1b1f4:	bcs	1b1cc <lchmod@@Base+0x4140>
   1b1f8:	adds	r4, r4, r4
   1b1fc:	adc	r5, r5, r5
   1b200:	subs	r2, r2, #1
   1b204:	bne	1b1ec <lchmod@@Base+0x4160>
   1b208:	lsr	r3, r4, ip
   1b20c:	orr	r3, r3, r5, lsl fp
   1b210:	lsr	r2, r5, ip
   1b214:	orr	r3, r3, r5, lsr sl
   1b218:	adds	r0, r0, r4
   1b21c:	mov	r4, r3
   1b220:	lsl	r3, r2, ip
   1b224:	orr	r3, r3, r4, lsl sl
   1b228:	lsl	ip, r4, ip
   1b22c:	orr	r3, r3, r4, lsr fp
   1b230:	adc	r1, r1, r5
   1b234:	subs	r0, r0, ip
   1b238:	mov	r5, r2
   1b23c:	sbc	r1, r1, r3
   1b240:	cmp	lr, #0
   1b244:	strdne	r4, [lr]
   1b248:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b24c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b250:	mov	r7, r0
   1b254:	ldr	r6, [pc, #72]	; 1b2a4 <lchmod@@Base+0x4218>
   1b258:	ldr	r5, [pc, #72]	; 1b2a8 <lchmod@@Base+0x421c>
   1b25c:	add	r6, pc, r6
   1b260:	add	r5, pc, r5
   1b264:	sub	r6, r6, r5
   1b268:	mov	r8, r1
   1b26c:	mov	r9, r2
   1b270:	bl	11668 <fstatfs64@plt-0x20>
   1b274:	asrs	r6, r6, #2
   1b278:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b27c:	mov	r4, #0
   1b280:	add	r4, r4, #1
   1b284:	ldr	r3, [r5], #4
   1b288:	mov	r2, r9
   1b28c:	mov	r1, r8
   1b290:	mov	r0, r7
   1b294:	blx	r3
   1b298:	cmp	r6, r4
   1b29c:	bne	1b280 <lchmod@@Base+0x41f4>
   1b2a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b2a4:	andeq	r0, r1, r0, lsr #25
   1b2a8:	muleq	r1, r8, ip
   1b2ac:	bx	lr
   1b2b0:	ldr	r3, [pc, #12]	; 1b2c4 <lchmod@@Base+0x4238>
   1b2b4:	mov	r1, #0
   1b2b8:	add	r3, pc, r3
   1b2bc:	ldr	r2, [r3]
   1b2c0:	b	11904 <__cxa_atexit@plt>
   1b2c4:			; <UNDEFINED> instruction: 0x00010eb4

Disassembly of section .fini:

0001b2c8 <.fini>:
   1b2c8:	push	{r3, lr}
   1b2cc:	pop	{r3, pc}
