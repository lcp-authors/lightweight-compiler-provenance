
../repos/coreutils/src/chmod:     file format elf32-littlearm


Disassembly of section .init:

000110b4 <.init>:
   110b4:	push	{r3, lr}
   110b8:	bl	11414 <__assert_fail@plt+0x4c>
   110bc:	pop	{r3, pc}

Disassembly of section .plt:

000110c0 <fstatfs64@plt-0x14>:
   110c0:	push	{lr}		; (str lr, [sp, #-4]!)
   110c4:	ldr	lr, [pc, #4]	; 110d0 <fstatfs64@plt-0x4>
   110c8:	add	lr, pc, lr
   110cc:	ldr	pc, [lr, #8]!
   110d0:	andeq	r2, r2, r0, lsr pc

000110d4 <fstatfs64@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #139264	; 0x22000
   110dc:	ldr	pc, [ip, #3888]!	; 0xf30

000110e0 <calloc@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #139264	; 0x22000
   110e8:	ldr	pc, [ip, #3880]!	; 0xf28

000110ec <fputs_unlocked@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #139264	; 0x22000
   110f4:	ldr	pc, [ip, #3872]!	; 0xf20

000110f8 <raise@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #139264	; 0x22000
   11100:	ldr	pc, [ip, #3864]!	; 0xf18

00011104 <strcmp@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #139264	; 0x22000
   1110c:	ldr	pc, [ip, #3856]!	; 0xf10

00011110 <printf@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #139264	; 0x22000
   11118:	ldr	pc, [ip, #3848]!	; 0xf08

0001111c <fflush@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #139264	; 0x22000
   11124:	ldr	pc, [ip, #3840]!	; 0xf00

00011128 <memmove@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #139264	; 0x22000
   11130:	ldr	pc, [ip, #3832]!	; 0xef8

00011134 <free@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #139264	; 0x22000
   1113c:	ldr	pc, [ip, #3824]!	; 0xef0

00011140 <_exit@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #139264	; 0x22000
   11148:	ldr	pc, [ip, #3816]!	; 0xee8

0001114c <memcpy@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #139264	; 0x22000
   11154:	ldr	pc, [ip, #3808]!	; 0xee0

00011158 <mbsinit@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #139264	; 0x22000
   11160:	ldr	pc, [ip, #3800]!	; 0xed8

00011164 <memcmp@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #139264	; 0x22000
   1116c:	ldr	pc, [ip, #3792]!	; 0xed0

00011170 <realloc@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #139264	; 0x22000
   11178:	ldr	pc, [ip, #3784]!	; 0xec8

0001117c <textdomain@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #139264	; 0x22000
   11184:	ldr	pc, [ip, #3776]!	; 0xec0

00011188 <__fxstatat64@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #139264	; 0x22000
   11190:	ldr	pc, [ip, #3768]!	; 0xeb8

00011194 <iswprint@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #139264	; 0x22000
   1119c:	ldr	pc, [ip, #3760]!	; 0xeb0

000111a0 <__fxstat64@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #139264	; 0x22000
   111a8:	ldr	pc, [ip, #3752]!	; 0xea8

000111ac <lseek64@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #139264	; 0x22000
   111b4:	ldr	pc, [ip, #3744]!	; 0xea0

000111b8 <__ctype_get_mb_cur_max@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #139264	; 0x22000
   111c0:	ldr	pc, [ip, #3736]!	; 0xe98

000111c4 <__fpending@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #139264	; 0x22000
   111cc:	ldr	pc, [ip, #3728]!	; 0xe90

000111d0 <ferror_unlocked@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #139264	; 0x22000
   111d8:	ldr	pc, [ip, #3720]!	; 0xe88

000111dc <mbrtowc@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #139264	; 0x22000
   111e4:	ldr	pc, [ip, #3712]!	; 0xe80

000111e8 <error@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #139264	; 0x22000
   111f0:	ldr	pc, [ip, #3704]!	; 0xe78

000111f4 <open64@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #139264	; 0x22000
   111fc:	ldr	pc, [ip, #3696]!	; 0xe70

00011200 <malloc@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #139264	; 0x22000
   11208:	ldr	pc, [ip, #3688]!	; 0xe68

0001120c <__libc_start_main@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #139264	; 0x22000
   11214:	ldr	pc, [ip, #3680]!	; 0xe60

00011218 <__freading@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #139264	; 0x22000
   11220:	ldr	pc, [ip, #3672]!	; 0xe58

00011224 <__gmon_start__@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #139264	; 0x22000
   1122c:	ldr	pc, [ip, #3664]!	; 0xe50

00011230 <getopt_long@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #139264	; 0x22000
   11238:	ldr	pc, [ip, #3656]!	; 0xe48

0001123c <__ctype_b_loc@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #139264	; 0x22000
   11244:	ldr	pc, [ip, #3648]!	; 0xe40

00011248 <exit@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #139264	; 0x22000
   11250:	ldr	pc, [ip, #3640]!	; 0xe38

00011254 <gettext@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #139264	; 0x22000
   1125c:	ldr	pc, [ip, #3632]!	; 0xe30

00011260 <strlen@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #139264	; 0x22000
   11268:	ldr	pc, [ip, #3624]!	; 0xe28

0001126c <openat64@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #139264	; 0x22000
   11274:	ldr	pc, [ip, #3616]!	; 0xe20

00011278 <fprintf@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #139264	; 0x22000
   11280:	ldr	pc, [ip, #3608]!	; 0xe18

00011284 <fchmodat@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #139264	; 0x22000
   1128c:	ldr	pc, [ip, #3600]!	; 0xe10

00011290 <__errno_location@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #139264	; 0x22000
   11298:	ldr	pc, [ip, #3592]!	; 0xe08

0001129c <__cxa_atexit@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #139264	; 0x22000
   112a4:	ldr	pc, [ip, #3584]!	; 0xe00

000112a8 <memset@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #139264	; 0x22000
   112b0:	ldr	pc, [ip, #3576]!	; 0xdf8

000112b4 <fileno@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #139264	; 0x22000
   112bc:	ldr	pc, [ip, #3568]!	; 0xdf0

000112c0 <fclose@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #139264	; 0x22000
   112c8:	ldr	pc, [ip, #3560]!	; 0xde8

000112cc <fseeko64@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #139264	; 0x22000
   112d4:	ldr	pc, [ip, #3552]!	; 0xde0

000112d8 <fcntl64@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #139264	; 0x22000
   112e0:	ldr	pc, [ip, #3544]!	; 0xdd8

000112e4 <setlocale@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #139264	; 0x22000
   112ec:	ldr	pc, [ip, #3536]!	; 0xdd0

000112f0 <strrchr@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #139264	; 0x22000
   112f8:	ldr	pc, [ip, #3528]!	; 0xdc8

000112fc <nl_langinfo@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #139264	; 0x22000
   11304:	ldr	pc, [ip, #3520]!	; 0xdc0

00011308 <sprintf@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #139264	; 0x22000
   11310:	ldr	pc, [ip, #3512]!	; 0xdb8

00011314 <readdir64@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #139264	; 0x22000
   1131c:	ldr	pc, [ip, #3504]!	; 0xdb0

00011320 <fdopendir@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #139264	; 0x22000
   11328:	ldr	pc, [ip, #3496]!	; 0xda8

0001132c <dirfd@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #139264	; 0x22000
   11334:	ldr	pc, [ip, #3488]!	; 0xda0

00011338 <fchdir@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #139264	; 0x22000
   11340:	ldr	pc, [ip, #3480]!	; 0xd98

00011344 <qsort@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #139264	; 0x22000
   1134c:	ldr	pc, [ip, #3472]!	; 0xd90

00011350 <bindtextdomain@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #139264	; 0x22000
   11358:	ldr	pc, [ip, #3464]!	; 0xd88

0001135c <umask@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #139264	; 0x22000
   11364:	ldr	pc, [ip, #3456]!	; 0xd80

00011368 <chmod@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #139264	; 0x22000
   11370:	ldr	pc, [ip, #3448]!	; 0xd78

00011374 <__xstat64@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #139264	; 0x22000
   1137c:	ldr	pc, [ip, #3440]!	; 0xd70

00011380 <fputs@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #139264	; 0x22000
   11388:	ldr	pc, [ip, #3432]!	; 0xd68

0001138c <strncmp@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #139264	; 0x22000
   11394:	ldr	pc, [ip, #3424]!	; 0xd60

00011398 <abort@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #139264	; 0x22000
   113a0:	ldr	pc, [ip, #3416]!	; 0xd58

000113a4 <close@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #139264	; 0x22000
   113ac:	ldr	pc, [ip, #3408]!	; 0xd50

000113b0 <__lxstat64@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #139264	; 0x22000
   113b8:	ldr	pc, [ip, #3400]!	; 0xd48

000113bc <closedir@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #139264	; 0x22000
   113c4:	ldr	pc, [ip, #3392]!	; 0xd40

000113c8 <__assert_fail@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #139264	; 0x22000
   113d0:	ldr	pc, [ip, #3384]!	; 0xd38

Disassembly of section .text:

000113d8 <.text>:
   113d8:	mov	fp, #0
   113dc:	mov	lr, #0
   113e0:	pop	{r1}		; (ldr r1, [sp], #4)
   113e4:	mov	r2, sp
   113e8:	push	{r2}		; (str r2, [sp, #-4]!)
   113ec:	push	{r0}		; (str r0, [sp, #-4]!)
   113f0:	ldr	ip, [pc, #16]	; 11408 <__assert_fail@plt+0x40>
   113f4:	push	{ip}		; (str ip, [sp, #-4]!)
   113f8:	ldr	r0, [pc, #12]	; 1140c <__assert_fail@plt+0x44>
   113fc:	ldr	r3, [pc, #12]	; 11410 <__assert_fail@plt+0x48>
   11400:	bl	1120c <__libc_start_main@plt>
   11404:	bl	11398 <abort@plt>
   11408:	andeq	r2, r2, r8, asr #26
   1140c:	andeq	r1, r1, r4, asr #16
   11410:	andeq	r2, r2, r8, ror #25
   11414:	ldr	r3, [pc, #20]	; 11430 <__assert_fail@plt+0x68>
   11418:	ldr	r2, [pc, #20]	; 11434 <__assert_fail@plt+0x6c>
   1141c:	add	r3, pc, r3
   11420:	ldr	r2, [r3, r2]
   11424:	cmp	r2, #0
   11428:	bxeq	lr
   1142c:	b	11224 <__gmon_start__@plt>
   11430:	ldrdeq	r2, [r2], -ip
   11434:	andeq	r0, r0, ip, lsl #2
   11438:	ldr	r0, [pc, #24]	; 11458 <__assert_fail@plt+0x90>
   1143c:	ldr	r3, [pc, #24]	; 1145c <__assert_fail@plt+0x94>
   11440:	cmp	r3, r0
   11444:	bxeq	lr
   11448:	ldr	r3, [pc, #16]	; 11460 <__assert_fail@plt+0x98>
   1144c:	cmp	r3, #0
   11450:	bxeq	lr
   11454:	bx	r3
   11458:	andeq	r4, r3, r4, ror #2
   1145c:	andeq	r4, r3, r4, ror #2
   11460:	andeq	r0, r0, r0
   11464:	ldr	r0, [pc, #36]	; 11490 <__assert_fail@plt+0xc8>
   11468:	ldr	r1, [pc, #36]	; 11494 <__assert_fail@plt+0xcc>
   1146c:	sub	r1, r1, r0
   11470:	asr	r1, r1, #2
   11474:	add	r1, r1, r1, lsr #31
   11478:	asrs	r1, r1, #1
   1147c:	bxeq	lr
   11480:	ldr	r3, [pc, #16]	; 11498 <__assert_fail@plt+0xd0>
   11484:	cmp	r3, #0
   11488:	bxeq	lr
   1148c:	bx	r3
   11490:	andeq	r4, r3, r4, ror #2
   11494:	andeq	r4, r3, r4, ror #2
   11498:	andeq	r0, r0, r0
   1149c:	push	{r4, lr}
   114a0:	ldr	r4, [pc, #24]	; 114c0 <__assert_fail@plt+0xf8>
   114a4:	ldrb	r3, [r4]
   114a8:	cmp	r3, #0
   114ac:	popne	{r4, pc}
   114b0:	bl	11438 <__assert_fail@plt+0x70>
   114b4:	mov	r3, #1
   114b8:	strb	r3, [r4]
   114bc:	pop	{r4, pc}
   114c0:	andeq	r4, r3, r4, lsl #3
   114c4:	b	11464 <__assert_fail@plt+0x9c>
   114c8:	push	{fp, lr}
   114cc:	mov	fp, sp
   114d0:	sub	sp, sp, #56	; 0x38
   114d4:	str	r0, [fp, #-4]
   114d8:	ldr	r0, [fp, #-4]
   114dc:	cmp	r0, #0
   114e0:	beq	11530 <__assert_fail@plt+0x168>
   114e4:	b	114e8 <__assert_fail@plt+0x120>
   114e8:	movw	r0, #16760	; 0x4178
   114ec:	movt	r0, #3
   114f0:	ldr	r0, [r0]
   114f4:	movw	r1, #11720	; 0x2dc8
   114f8:	movt	r1, #2
   114fc:	str	r0, [fp, #-8]
   11500:	mov	r0, r1
   11504:	bl	11254 <gettext@plt>
   11508:	movw	r1, #16820	; 0x41b4
   1150c:	movt	r1, #3
   11510:	ldr	r2, [r1]
   11514:	ldr	r1, [fp, #-8]
   11518:	str	r0, [fp, #-12]
   1151c:	mov	r0, r1
   11520:	ldr	r1, [fp, #-12]
   11524:	bl	11278 <fprintf@plt>
   11528:	str	r0, [fp, #-16]
   1152c:	b	11688 <__assert_fail@plt+0x2c0>
   11530:	movw	r0, #11759	; 0x2def
   11534:	movt	r0, #2
   11538:	bl	11254 <gettext@plt>
   1153c:	movw	lr, #16820	; 0x41b4
   11540:	movt	lr, #3
   11544:	ldr	r1, [lr]
   11548:	ldr	r2, [lr]
   1154c:	ldr	r3, [lr]
   11550:	bl	11110 <printf@plt>
   11554:	movw	r1, #11894	; 0x2e76
   11558:	movt	r1, #2
   1155c:	str	r0, [fp, #-20]	; 0xffffffec
   11560:	mov	r0, r1
   11564:	bl	11254 <gettext@plt>
   11568:	movw	r1, #16764	; 0x417c
   1156c:	movt	r1, #3
   11570:	ldr	r1, [r1]
   11574:	bl	110ec <fputs_unlocked@plt>
   11578:	movw	r1, #11999	; 0x2edf
   1157c:	movt	r1, #2
   11580:	str	r0, [fp, #-24]	; 0xffffffe8
   11584:	mov	r0, r1
   11588:	bl	11254 <gettext@plt>
   1158c:	movw	r1, #16764	; 0x417c
   11590:	movt	r1, #3
   11594:	ldr	r1, [r1]
   11598:	bl	110ec <fputs_unlocked@plt>
   1159c:	movw	r1, #12200	; 0x2fa8
   115a0:	movt	r1, #2
   115a4:	str	r0, [sp, #28]
   115a8:	mov	r0, r1
   115ac:	bl	11254 <gettext@plt>
   115b0:	movw	r1, #16764	; 0x417c
   115b4:	movt	r1, #3
   115b8:	ldr	r1, [r1]
   115bc:	bl	110ec <fputs_unlocked@plt>
   115c0:	movw	r1, #12328	; 0x3028
   115c4:	movt	r1, #2
   115c8:	str	r0, [sp, #24]
   115cc:	mov	r0, r1
   115d0:	bl	11254 <gettext@plt>
   115d4:	movw	r1, #16764	; 0x417c
   115d8:	movt	r1, #3
   115dc:	ldr	r1, [r1]
   115e0:	bl	110ec <fputs_unlocked@plt>
   115e4:	movw	r1, #12394	; 0x306a
   115e8:	movt	r1, #2
   115ec:	str	r0, [sp, #20]
   115f0:	mov	r0, r1
   115f4:	bl	11254 <gettext@plt>
   115f8:	movw	r1, #16764	; 0x417c
   115fc:	movt	r1, #3
   11600:	ldr	r1, [r1]
   11604:	bl	110ec <fputs_unlocked@plt>
   11608:	movw	r1, #12461	; 0x30ad
   1160c:	movt	r1, #2
   11610:	str	r0, [sp, #16]
   11614:	mov	r0, r1
   11618:	bl	11254 <gettext@plt>
   1161c:	movw	r1, #16764	; 0x417c
   11620:	movt	r1, #3
   11624:	ldr	r1, [r1]
   11628:	bl	110ec <fputs_unlocked@plt>
   1162c:	movw	r1, #12506	; 0x30da
   11630:	movt	r1, #2
   11634:	str	r0, [sp, #12]
   11638:	mov	r0, r1
   1163c:	bl	11254 <gettext@plt>
   11640:	movw	r1, #16764	; 0x417c
   11644:	movt	r1, #3
   11648:	ldr	r1, [r1]
   1164c:	bl	110ec <fputs_unlocked@plt>
   11650:	movw	r1, #12560	; 0x3110
   11654:	movt	r1, #2
   11658:	str	r0, [sp, #8]
   1165c:	mov	r0, r1
   11660:	bl	11254 <gettext@plt>
   11664:	movw	r1, #16764	; 0x417c
   11668:	movt	r1, #3
   1166c:	ldr	r1, [r1]
   11670:	bl	110ec <fputs_unlocked@plt>
   11674:	movw	r1, #12635	; 0x315b
   11678:	movt	r1, #2
   1167c:	str	r0, [sp, #4]
   11680:	mov	r0, r1
   11684:	bl	11690 <__assert_fail@plt+0x2c8>
   11688:	ldr	r0, [fp, #-4]
   1168c:	bl	11248 <exit@plt>
   11690:	push	{fp, lr}
   11694:	mov	fp, sp
   11698:	sub	sp, sp, #96	; 0x60
   1169c:	add	r1, sp, #36	; 0x24
   116a0:	movw	r2, #14244	; 0x37a4
   116a4:	movt	r2, #2
   116a8:	str	r0, [fp, #-4]
   116ac:	mov	r0, r1
   116b0:	str	r1, [sp, #20]
   116b4:	mov	r1, r2
   116b8:	movw	r2, #56	; 0x38
   116bc:	bl	1114c <memcpy@plt>
   116c0:	ldr	r0, [fp, #-4]
   116c4:	str	r0, [sp, #32]
   116c8:	ldr	r0, [sp, #20]
   116cc:	str	r0, [sp, #28]
   116d0:	ldr	r0, [sp, #28]
   116d4:	ldr	r0, [r0]
   116d8:	movw	r1, #0
   116dc:	cmp	r0, r1
   116e0:	movw	r0, #0
   116e4:	str	r0, [sp, #16]
   116e8:	beq	11714 <__assert_fail@plt+0x34c>
   116ec:	ldr	r0, [fp, #-4]
   116f0:	ldr	r1, [sp, #28]
   116f4:	ldr	r1, [r1]
   116f8:	bl	11104 <strcmp@plt>
   116fc:	cmp	r0, #0
   11700:	movw	r0, #0
   11704:	moveq	r0, #1
   11708:	mvn	r1, #0
   1170c:	eor	r0, r0, r1
   11710:	str	r0, [sp, #16]
   11714:	ldr	r0, [sp, #16]
   11718:	tst	r0, #1
   1171c:	beq	11730 <__assert_fail@plt+0x368>
   11720:	ldr	r0, [sp, #28]
   11724:	add	r0, r0, #8
   11728:	str	r0, [sp, #28]
   1172c:	b	116d0 <__assert_fail@plt+0x308>
   11730:	ldr	r0, [sp, #28]
   11734:	ldr	r0, [r0, #4]
   11738:	movw	r1, #0
   1173c:	cmp	r0, r1
   11740:	beq	11750 <__assert_fail@plt+0x388>
   11744:	ldr	r0, [sp, #28]
   11748:	ldr	r0, [r0, #4]
   1174c:	str	r0, [sp, #32]
   11750:	movw	r0, #13004	; 0x32cc
   11754:	movt	r0, #2
   11758:	bl	11254 <gettext@plt>
   1175c:	movw	r1, #12733	; 0x31bd
   11760:	movt	r1, #2
   11764:	movw	r2, #13027	; 0x32e3
   11768:	movt	r2, #2
   1176c:	bl	11110 <printf@plt>
   11770:	movw	r1, #5
   11774:	str	r0, [sp, #12]
   11778:	mov	r0, r1
   1177c:	movw	r1, #0
   11780:	bl	112e4 <setlocale@plt>
   11784:	str	r0, [sp, #24]
   11788:	ldr	r0, [sp, #24]
   1178c:	movw	r1, #0
   11790:	cmp	r0, r1
   11794:	beq	117d4 <__assert_fail@plt+0x40c>
   11798:	ldr	r0, [sp, #24]
   1179c:	movw	r1, #13067	; 0x330b
   117a0:	movt	r1, #2
   117a4:	movw	r2, #3
   117a8:	bl	1138c <strncmp@plt>
   117ac:	cmp	r0, #0
   117b0:	beq	117d4 <__assert_fail@plt+0x40c>
   117b4:	movw	r0, #13071	; 0x330f
   117b8:	movt	r0, #2
   117bc:	bl	11254 <gettext@plt>
   117c0:	movw	lr, #16764	; 0x417c
   117c4:	movt	lr, #3
   117c8:	ldr	r1, [lr]
   117cc:	bl	110ec <fputs_unlocked@plt>
   117d0:	str	r0, [sp, #8]
   117d4:	movw	r0, #13142	; 0x3356
   117d8:	movt	r0, #2
   117dc:	bl	11254 <gettext@plt>
   117e0:	ldr	r2, [fp, #-4]
   117e4:	movw	r1, #13027	; 0x32e3
   117e8:	movt	r1, #2
   117ec:	bl	11110 <printf@plt>
   117f0:	movw	r1, #13169	; 0x3371
   117f4:	movt	r1, #2
   117f8:	str	r0, [sp, #4]
   117fc:	mov	r0, r1
   11800:	bl	11254 <gettext@plt>
   11804:	ldr	r1, [sp, #32]
   11808:	ldr	r2, [sp, #32]
   1180c:	ldr	lr, [fp, #-4]
   11810:	cmp	r2, lr
   11814:	movw	r2, #0
   11818:	moveq	r2, #1
   1181c:	tst	r2, #1
   11820:	movw	r2, #11998	; 0x2ede
   11824:	movt	r2, #2
   11828:	movw	lr, #12937	; 0x3289
   1182c:	movt	lr, #2
   11830:	movne	r2, lr
   11834:	bl	11110 <printf@plt>
   11838:	str	r0, [sp]
   1183c:	mov	sp, fp
   11840:	pop	{fp, pc}
   11844:	push	{fp, lr}
   11848:	mov	fp, sp
   1184c:	sub	sp, sp, #136	; 0x88
   11850:	movw	r2, #0
   11854:	str	r2, [fp, #-4]
   11858:	str	r0, [fp, #-8]
   1185c:	str	r1, [fp, #-12]
   11860:	str	r2, [fp, #-16]
   11864:	str	r2, [fp, #-20]	; 0xffffffec
   11868:	str	r2, [fp, #-24]	; 0xffffffe8
   1186c:	movw	r0, #0
   11870:	strb	r0, [fp, #-26]	; 0xffffffe6
   11874:	str	r2, [fp, #-32]	; 0xffffffe0
   11878:	ldr	r0, [fp, #-12]
   1187c:	ldr	r0, [r0]
   11880:	bl	19b98 <__assert_fail@plt+0x87d0>
   11884:	movw	r0, #6
   11888:	movw	r1, #11998	; 0x2ede
   1188c:	movt	r1, #2
   11890:	bl	112e4 <setlocale@plt>
   11894:	movw	r1, #12737	; 0x31c1
   11898:	movt	r1, #2
   1189c:	str	r0, [fp, #-56]	; 0xffffffc8
   118a0:	mov	r0, r1
   118a4:	movw	r1, #12641	; 0x3161
   118a8:	movt	r1, #2
   118ac:	bl	11350 <bindtextdomain@plt>
   118b0:	movw	r1, #12737	; 0x31c1
   118b4:	movt	r1, #2
   118b8:	str	r0, [fp, #-60]	; 0xffffffc4
   118bc:	mov	r0, r1
   118c0:	bl	1117c <textdomain@plt>
   118c4:	movw	r1, #11916	; 0x2e8c
   118c8:	movt	r1, #1
   118cc:	str	r0, [fp, #-64]	; 0xffffffc0
   118d0:	mov	r0, r1
   118d4:	bl	22d4c <__assert_fail@plt+0x11984>
   118d8:	movw	r1, #16776	; 0x4188
   118dc:	movt	r1, #3
   118e0:	movw	r2, #0
   118e4:	strb	r2, [r1]
   118e8:	movw	r1, #16777	; 0x4189
   118ec:	movt	r1, #3
   118f0:	strb	r2, [r1]
   118f4:	movw	r1, #16778	; 0x418a
   118f8:	movt	r1, #3
   118fc:	strb	r2, [r1]
   11900:	str	r0, [sp, #68]	; 0x44
   11904:	ldr	r0, [fp, #-8]
   11908:	ldr	r1, [fp, #-12]
   1190c:	movw	r2, #12665	; 0x3179
   11910:	movt	r2, #2
   11914:	movw	r3, #14068	; 0x36f4
   11918:	movt	r3, #2
   1191c:	movw	ip, #0
   11920:	str	ip, [sp]
   11924:	bl	11230 <getopt_long@plt>
   11928:	str	r0, [fp, #-36]	; 0xffffffdc
   1192c:	cmn	r0, #1
   11930:	beq	11f38 <__assert_fail@plt+0xb70>
   11934:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11938:	add	r0, r0, #3
   1193c:	lsr	r1, r0, #1
   11940:	cmp	r1, #130	; 0x82
   11944:	str	r0, [sp, #64]	; 0x40
   11948:	bhi	11f2c <__assert_fail@plt+0xb64>
   1194c:	add	r0, pc, #8
   11950:	ldr	r1, [sp, #64]	; 0x40
   11954:	ldr	r0, [r0, r1, lsl #2]
   11958:	mov	pc, r0
   1195c:	ldrdeq	r1, [r1], -r8
   11960:	ldrdeq	r1, [r1], -r0
   11964:	andeq	r1, r1, ip, lsr #30
   11968:	andeq	r1, r1, ip, lsr #30
   1196c:	andeq	r1, r1, ip, lsr #30
   11970:	andeq	r1, r1, ip, lsr #30
   11974:	andeq	r1, r1, ip, lsr #30
   11978:	andeq	r1, r1, ip, lsr #30
   1197c:	andeq	r1, r1, ip, lsr #30
   11980:	andeq	r1, r1, ip, lsr #30
   11984:	andeq	r1, r1, ip, lsr #30
   11988:	andeq	r1, r1, ip, lsr #30
   1198c:	andeq	r1, r1, ip, lsr #30
   11990:	andeq	r1, r1, ip, lsr #30
   11994:	andeq	r1, r1, ip, lsr #30
   11998:	andeq	r1, r1, ip, lsr #30
   1199c:	andeq	r1, r1, ip, lsr #30
   119a0:	andeq	r1, r1, ip, lsr #30
   119a4:	andeq	r1, r1, ip, lsr #30
   119a8:	andeq	r1, r1, ip, lsr #30
   119ac:	andeq	r1, r1, ip, lsr #30
   119b0:	andeq	r1, r1, ip, lsr #30
   119b4:	andeq	r1, r1, ip, lsr #30
   119b8:	andeq	r1, r1, ip, lsr #30
   119bc:	andeq	r1, r1, ip, lsr #30
   119c0:	andeq	r1, r1, ip, lsr #30
   119c4:	andeq	r1, r1, ip, lsr #30
   119c8:	andeq	r1, r1, ip, lsr #30
   119cc:	andeq	r1, r1, ip, lsr #30
   119d0:	andeq	r1, r1, ip, lsr #30
   119d4:	andeq	r1, r1, ip, lsr #30
   119d8:	andeq	r1, r1, ip, lsr #30
   119dc:	andeq	r1, r1, ip, lsr #30
   119e0:	andeq	r1, r1, ip, lsr #30
   119e4:	andeq	r1, r1, ip, lsr #30
   119e8:	andeq	r1, r1, ip, lsr #30
   119ec:	andeq	r1, r1, ip, lsr #30
   119f0:	andeq	r1, r1, ip, lsr #30
   119f4:	andeq	r1, r1, ip, lsr #30
   119f8:	andeq	r1, r1, ip, lsr #30
   119fc:	andeq	r1, r1, ip, lsr #30
   11a00:	andeq	r1, r1, ip, lsr #30
   11a04:	andeq	r1, r1, ip, lsr #30
   11a08:	andeq	r1, r1, ip, lsr #30
   11a0c:	andeq	r1, r1, ip, lsr #30
   11a10:	andeq	r1, r1, ip, lsr #30
   11a14:	andeq	r1, r1, r4, ror sp
   11a18:	andeq	r1, r1, r4, ror sp
   11a1c:	andeq	r1, r1, ip, lsr #30
   11a20:	andeq	r1, r1, ip, lsr #30
   11a24:	andeq	r1, r1, ip, lsr #30
   11a28:	andeq	r1, r1, r4, ror sp
   11a2c:	andeq	r1, r1, r4, ror sp
   11a30:	andeq	r1, r1, r4, ror sp
   11a34:	andeq	r1, r1, r4, ror sp
   11a38:	andeq	r1, r1, r4, ror sp
   11a3c:	andeq	r1, r1, r4, ror sp
   11a40:	andeq	r1, r1, r4, ror sp
   11a44:	andeq	r1, r1, r4, ror sp
   11a48:	andeq	r1, r1, ip, lsr #30
   11a4c:	andeq	r1, r1, ip, lsr #30
   11a50:	andeq	r1, r1, ip, lsr #30
   11a54:	andeq	r1, r1, ip, lsr #30
   11a58:	andeq	r1, r1, ip, lsr #30
   11a5c:	andeq	r1, r1, r4, ror sp
   11a60:	andeq	r1, r1, ip, lsr #30
   11a64:	andeq	r1, r1, ip, lsr #30
   11a68:	andeq	r1, r1, ip, lsr #30
   11a6c:	andeq	r1, r1, ip, lsr #30
   11a70:	andeq	r1, r1, ip, lsr #30
   11a74:	andeq	r1, r1, ip, lsr #30
   11a78:	andeq	r1, r1, ip, lsr #30
   11a7c:	andeq	r1, r1, ip, lsr #30
   11a80:	andeq	r1, r1, ip, lsr #30
   11a84:	andeq	r1, r1, ip, lsr #30
   11a88:	andeq	r1, r1, ip, lsr #30
   11a8c:	andeq	r1, r1, ip, lsr #30
   11a90:	andeq	r1, r1, ip, lsr #30
   11a94:	andeq	r1, r1, ip, lsr #30
   11a98:	andeq	r1, r1, ip, lsr #30
   11a9c:	andeq	r1, r1, ip, lsr #30
   11aa0:	andeq	r1, r1, ip, lsr #30
   11aa4:	andeq	r1, r1, ip, lsr #30
   11aa8:	andeq	r1, r1, ip, lsr #30
   11aac:	andeq	r1, r1, ip, lsr #30
   11ab0:	andeq	r1, r1, r0, lsl #29
   11ab4:	andeq	r1, r1, ip, lsr #30
   11ab8:	andeq	r1, r1, ip, lsr #30
   11abc:	andeq	r1, r1, ip, lsr #30
   11ac0:	andeq	r1, r1, ip, lsr #30
   11ac4:	andeq	r1, r1, ip, lsr #30
   11ac8:	andeq	r1, r1, r4, ror sp
   11acc:	andeq	r1, r1, ip, lsr #30
   11ad0:	andeq	r1, r1, ip, lsr #30
   11ad4:	andeq	r1, r1, ip, lsr #30
   11ad8:	andeq	r1, r1, ip, lsr #30
   11adc:	andeq	r1, r1, ip, lsr #30
   11ae0:	andeq	r1, r1, ip, lsr #30
   11ae4:	andeq	r1, r1, ip, lsr #30
   11ae8:	andeq	r1, r1, ip, lsr #30
   11aec:	andeq	r1, r1, r4, ror sp
   11af0:	andeq	r1, r1, ip, lsr #30
   11af4:	muleq	r1, r4, lr
   11af8:	andeq	r1, r1, ip, lsr #30
   11afc:	andeq	r1, r1, ip, lsr #30
   11b00:	andeq	r1, r1, r8, lsr #29
   11b04:	andeq	r1, r1, r4, ror sp
   11b08:	andeq	r1, r1, ip, lsr #30
   11b0c:	andeq	r1, r1, ip, lsr #30
   11b10:	andeq	r1, r1, ip, lsr #30
   11b14:	andeq	r1, r1, ip, lsr #30
   11b18:	andeq	r1, r1, ip, lsr #30
   11b1c:	andeq	r1, r1, ip, lsr #30
   11b20:	andeq	r1, r1, ip, lsr #30
   11b24:	andeq	r1, r1, r4, ror sp
   11b28:	andeq	r1, r1, ip, lsr #30
   11b2c:	andeq	r1, r1, ip, lsr #30
   11b30:	andeq	r1, r1, r4, ror sp
   11b34:	andeq	r1, r1, r4, ror sp
   11b38:	andeq	r1, r1, r4, ror sp
   11b3c:	andeq	r1, r1, r4, ror sp
   11b40:			; <UNDEFINED> instruction: 0x00011ebc
   11b44:	andeq	r1, r1, r4, ror sp
   11b48:	andeq	r1, r1, r4, ror sp
   11b4c:	andeq	r1, r1, ip, lsr #30
   11b50:	andeq	r1, r1, ip, lsr #30
   11b54:	andeq	r1, r1, ip, lsr #30
   11b58:	andeq	r1, r1, ip, lsr #30
   11b5c:	andeq	r1, r1, ip, lsr #30
   11b60:	andeq	r1, r1, ip, lsr #30
   11b64:	andeq	r1, r1, ip, lsr #30
   11b68:	andeq	r1, r1, ip, lsr #30
   11b6c:	andeq	r1, r1, ip, lsr #30
   11b70:	andeq	r1, r1, ip, lsr #30
   11b74:	andeq	r1, r1, ip, lsr #30
   11b78:	andeq	r1, r1, ip, lsr #30
   11b7c:	andeq	r1, r1, ip, lsr #30
   11b80:	andeq	r1, r1, ip, lsr #30
   11b84:	andeq	r1, r1, ip, lsr #30
   11b88:	andeq	r1, r1, ip, lsr #30
   11b8c:	andeq	r1, r1, ip, lsr #30
   11b90:	andeq	r1, r1, ip, lsr #30
   11b94:	andeq	r1, r1, ip, lsr #30
   11b98:	andeq	r1, r1, ip, lsr #30
   11b9c:	andeq	r1, r1, ip, lsr #30
   11ba0:	andeq	r1, r1, ip, lsr #30
   11ba4:	andeq	r1, r1, ip, lsr #30
   11ba8:	andeq	r1, r1, ip, lsr #30
   11bac:	andeq	r1, r1, ip, lsr #30
   11bb0:	andeq	r1, r1, ip, lsr #30
   11bb4:	andeq	r1, r1, ip, lsr #30
   11bb8:	andeq	r1, r1, ip, lsr #30
   11bbc:	andeq	r1, r1, ip, lsr #30
   11bc0:	andeq	r1, r1, ip, lsr #30
   11bc4:	andeq	r1, r1, ip, lsr #30
   11bc8:	andeq	r1, r1, ip, lsr #30
   11bcc:	andeq	r1, r1, ip, lsr #30
   11bd0:	andeq	r1, r1, ip, lsr #30
   11bd4:	andeq	r1, r1, ip, lsr #30
   11bd8:	andeq	r1, r1, ip, lsr #30
   11bdc:	andeq	r1, r1, ip, lsr #30
   11be0:	andeq	r1, r1, ip, lsr #30
   11be4:	andeq	r1, r1, ip, lsr #30
   11be8:	andeq	r1, r1, ip, lsr #30
   11bec:	andeq	r1, r1, ip, lsr #30
   11bf0:	andeq	r1, r1, ip, lsr #30
   11bf4:	andeq	r1, r1, ip, lsr #30
   11bf8:	andeq	r1, r1, ip, lsr #30
   11bfc:	andeq	r1, r1, ip, lsr #30
   11c00:	andeq	r1, r1, ip, lsr #30
   11c04:	andeq	r1, r1, ip, lsr #30
   11c08:	andeq	r1, r1, ip, lsr #30
   11c0c:	andeq	r1, r1, ip, lsr #30
   11c10:	andeq	r1, r1, ip, lsr #30
   11c14:	andeq	r1, r1, ip, lsr #30
   11c18:	andeq	r1, r1, ip, lsr #30
   11c1c:	andeq	r1, r1, ip, lsr #30
   11c20:	andeq	r1, r1, ip, lsr #30
   11c24:	andeq	r1, r1, ip, lsr #30
   11c28:	andeq	r1, r1, ip, lsr #30
   11c2c:	andeq	r1, r1, ip, lsr #30
   11c30:	andeq	r1, r1, ip, lsr #30
   11c34:	andeq	r1, r1, ip, lsr #30
   11c38:	andeq	r1, r1, ip, lsr #30
   11c3c:	andeq	r1, r1, ip, lsr #30
   11c40:	andeq	r1, r1, ip, lsr #30
   11c44:	andeq	r1, r1, ip, lsr #30
   11c48:	andeq	r1, r1, ip, lsr #30
   11c4c:	andeq	r1, r1, ip, lsr #30
   11c50:	andeq	r1, r1, ip, lsr #30
   11c54:	andeq	r1, r1, ip, lsr #30
   11c58:	andeq	r1, r1, ip, lsr #30
   11c5c:	andeq	r1, r1, ip, lsr #30
   11c60:	andeq	r1, r1, ip, lsr #30
   11c64:	andeq	r1, r1, ip, lsr #30
   11c68:	andeq	r1, r1, ip, lsr #30
   11c6c:	andeq	r1, r1, ip, lsr #30
   11c70:	andeq	r1, r1, ip, lsr #30
   11c74:	andeq	r1, r1, ip, lsr #30
   11c78:	andeq	r1, r1, ip, lsr #30
   11c7c:	andeq	r1, r1, ip, lsr #30
   11c80:	andeq	r1, r1, ip, lsr #30
   11c84:	andeq	r1, r1, ip, lsr #30
   11c88:	andeq	r1, r1, ip, lsr #30
   11c8c:	andeq	r1, r1, ip, lsr #30
   11c90:	andeq	r1, r1, ip, lsr #30
   11c94:	andeq	r1, r1, ip, lsr #30
   11c98:	andeq	r1, r1, ip, lsr #30
   11c9c:	andeq	r1, r1, ip, lsr #30
   11ca0:	andeq	r1, r1, ip, lsr #30
   11ca4:	andeq	r1, r1, ip, lsr #30
   11ca8:	andeq	r1, r1, ip, lsr #30
   11cac:	andeq	r1, r1, ip, lsr #30
   11cb0:	andeq	r1, r1, ip, lsr #30
   11cb4:	andeq	r1, r1, ip, lsr #30
   11cb8:	andeq	r1, r1, ip, lsr #30
   11cbc:	andeq	r1, r1, ip, lsr #30
   11cc0:	andeq	r1, r1, ip, lsr #30
   11cc4:	andeq	r1, r1, ip, lsr #30
   11cc8:	andeq	r1, r1, ip, lsr #30
   11ccc:	andeq	r1, r1, ip, lsr #30
   11cd0:	andeq	r1, r1, ip, lsr #30
   11cd4:	andeq	r1, r1, ip, lsr #30
   11cd8:	andeq	r1, r1, ip, lsr #30
   11cdc:	andeq	r1, r1, ip, lsr #30
   11ce0:	andeq	r1, r1, ip, lsr #30
   11ce4:	andeq	r1, r1, ip, lsr #30
   11ce8:	andeq	r1, r1, ip, lsr #30
   11cec:	andeq	r1, r1, ip, lsr #30
   11cf0:	andeq	r1, r1, ip, lsr #30
   11cf4:	andeq	r1, r1, ip, lsr #30
   11cf8:	andeq	r1, r1, ip, lsr #30
   11cfc:	andeq	r1, r1, ip, lsr #30
   11d00:	andeq	r1, r1, ip, lsr #30
   11d04:	andeq	r1, r1, ip, lsr #30
   11d08:	andeq	r1, r1, ip, lsr #30
   11d0c:	andeq	r1, r1, ip, lsr #30
   11d10:	andeq	r1, r1, ip, lsr #30
   11d14:	andeq	r1, r1, ip, lsr #30
   11d18:	andeq	r1, r1, ip, lsr #30
   11d1c:	andeq	r1, r1, ip, lsr #30
   11d20:	andeq	r1, r1, ip, lsr #30
   11d24:	andeq	r1, r1, ip, lsr #30
   11d28:	andeq	r1, r1, ip, lsr #30
   11d2c:	andeq	r1, r1, ip, lsr #30
   11d30:	andeq	r1, r1, ip, lsr #30
   11d34:	andeq	r1, r1, ip, lsr #30
   11d38:	andeq	r1, r1, ip, lsr #30
   11d3c:	andeq	r1, r1, ip, lsr #30
   11d40:	andeq	r1, r1, ip, lsr #30
   11d44:	andeq	r1, r1, ip, lsr #30
   11d48:	andeq	r1, r1, ip, lsr #30
   11d4c:	andeq	r1, r1, ip, lsr #30
   11d50:	andeq	r1, r1, ip, lsr #30
   11d54:	andeq	r1, r1, ip, lsr #30
   11d58:	andeq	r1, r1, ip, lsr #30
   11d5c:	andeq	r1, r1, ip, lsr #30
   11d60:	andeq	r1, r1, ip, lsr #30
   11d64:	andeq	r1, r1, ip, lsr #30
   11d68:	andeq	r1, r1, r4, asr lr
   11d6c:	andeq	r1, r1, r0, ror #28
   11d70:	andeq	r1, r1, ip, ror #28
   11d74:	ldr	r0, [fp, #-12]
   11d78:	movw	r1, #16752	; 0x4170
   11d7c:	movt	r1, #3
   11d80:	ldr	r1, [r1]
   11d84:	sub	r1, r1, #1
   11d88:	add	r0, r0, r1, lsl #2
   11d8c:	ldr	r0, [r0]
   11d90:	str	r0, [fp, #-40]	; 0xffffffd8
   11d94:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11d98:	bl	11260 <strlen@plt>
   11d9c:	str	r0, [fp, #-44]	; 0xffffffd4
   11da0:	ldr	r0, [fp, #-20]	; 0xffffffec
   11da4:	ldr	r1, [fp, #-20]	; 0xffffffec
   11da8:	cmp	r1, #0
   11dac:	movw	r1, #0
   11db0:	movne	r1, #1
   11db4:	mvn	lr, #0
   11db8:	eor	r1, r1, lr
   11dbc:	eor	r1, r1, lr
   11dc0:	and	r1, r1, #1
   11dc4:	add	r0, r0, r1
   11dc8:	str	r0, [fp, #-48]	; 0xffffffd0
   11dcc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11dd0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   11dd4:	add	r0, r0, r1
   11dd8:	str	r0, [fp, #-52]	; 0xffffffcc
   11ddc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11de0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   11de4:	cmp	r0, r1
   11de8:	bhi	11e08 <__assert_fail@plt+0xa40>
   11dec:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11df0:	add	r0, r0, #1
   11df4:	str	r0, [fp, #-24]	; 0xffffffe8
   11df8:	ldr	r0, [fp, #-16]
   11dfc:	sub	r1, fp, #24
   11e00:	bl	1ced8 <__assert_fail@plt+0xbb10>
   11e04:	str	r0, [fp, #-16]
   11e08:	ldr	r0, [fp, #-16]
   11e0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   11e10:	add	r0, r0, r1
   11e14:	movw	r1, #44	; 0x2c
   11e18:	strb	r1, [r0]
   11e1c:	ldr	r0, [fp, #-16]
   11e20:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11e24:	add	r0, r0, r1
   11e28:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11e2c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   11e30:	add	r2, r2, #1
   11e34:	bl	1114c <memcpy@plt>
   11e38:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11e3c:	str	r0, [fp, #-20]	; 0xffffffec
   11e40:	movw	r0, #16776	; 0x4188
   11e44:	movt	r0, #3
   11e48:	movw	r1, #1
   11e4c:	strb	r1, [r0]
   11e50:	b	11f34 <__assert_fail@plt+0xb6c>
   11e54:	movw	r0, #0
   11e58:	strb	r0, [fp, #-26]	; 0xffffffe6
   11e5c:	b	11f34 <__assert_fail@plt+0xb6c>
   11e60:	movw	r0, #1
   11e64:	strb	r0, [fp, #-26]	; 0xffffffe6
   11e68:	b	11f34 <__assert_fail@plt+0xb6c>
   11e6c:	movw	r0, #16768	; 0x4180
   11e70:	movt	r0, #3
   11e74:	ldr	r0, [r0]
   11e78:	str	r0, [fp, #-32]	; 0xffffffe0
   11e7c:	b	11f34 <__assert_fail@plt+0xb6c>
   11e80:	movw	r0, #16778	; 0x418a
   11e84:	movt	r0, #3
   11e88:	movw	r1, #1
   11e8c:	strb	r1, [r0]
   11e90:	b	11f34 <__assert_fail@plt+0xb6c>
   11e94:	movw	r0, #16664	; 0x4118
   11e98:	movt	r0, #3
   11e9c:	movw	r1, #1
   11ea0:	str	r1, [r0]
   11ea4:	b	11f34 <__assert_fail@plt+0xb6c>
   11ea8:	movw	r0, #16777	; 0x4189
   11eac:	movt	r0, #3
   11eb0:	movw	r1, #1
   11eb4:	strb	r1, [r0]
   11eb8:	b	11f34 <__assert_fail@plt+0xb6c>
   11ebc:	movw	r0, #16664	; 0x4118
   11ec0:	movt	r0, #3
   11ec4:	movw	r1, #0
   11ec8:	str	r1, [r0]
   11ecc:	b	11f34 <__assert_fail@plt+0xb6c>
   11ed0:	movw	r0, #0
   11ed4:	bl	114c8 <__assert_fail@plt+0x100>
   11ed8:	movw	r0, #16764	; 0x417c
   11edc:	movt	r0, #3
   11ee0:	ldr	r0, [r0]
   11ee4:	movw	r1, #16668	; 0x411c
   11ee8:	movt	r1, #3
   11eec:	ldr	r3, [r1]
   11ef0:	movw	r1, #12635	; 0x315b
   11ef4:	movt	r1, #2
   11ef8:	movw	r2, #12733	; 0x31bd
   11efc:	movt	r2, #2
   11f00:	movw	ip, #12747	; 0x31cb
   11f04:	movt	ip, #2
   11f08:	str	ip, [sp]
   11f0c:	movw	ip, #12763	; 0x31db
   11f10:	movt	ip, #2
   11f14:	str	ip, [sp, #4]
   11f18:	movw	ip, #0
   11f1c:	str	ip, [sp, #8]
   11f20:	bl	1cb98 <__assert_fail@plt+0xb7d0>
   11f24:	movw	r0, #0
   11f28:	bl	11248 <exit@plt>
   11f2c:	movw	r0, #1
   11f30:	bl	114c8 <__assert_fail@plt+0x100>
   11f34:	b	11904 <__assert_fail@plt+0x53c>
   11f38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11f3c:	movw	r1, #0
   11f40:	cmp	r0, r1
   11f44:	beq	11f88 <__assert_fail@plt+0xbc0>
   11f48:	ldr	r0, [fp, #-16]
   11f4c:	movw	r1, #0
   11f50:	cmp	r0, r1
   11f54:	beq	11f84 <__assert_fail@plt+0xbbc>
   11f58:	movw	r0, #12776	; 0x31e8
   11f5c:	movt	r0, #2
   11f60:	bl	11254 <gettext@plt>
   11f64:	movw	lr, #0
   11f68:	str	r0, [sp, #60]	; 0x3c
   11f6c:	mov	r0, lr
   11f70:	mov	r1, lr
   11f74:	ldr	r2, [sp, #60]	; 0x3c
   11f78:	bl	111e8 <error@plt>
   11f7c:	movw	r0, #1
   11f80:	bl	114c8 <__assert_fail@plt+0x100>
   11f84:	b	11fc0 <__assert_fail@plt+0xbf8>
   11f88:	ldr	r0, [fp, #-16]
   11f8c:	movw	r1, #0
   11f90:	cmp	r0, r1
   11f94:	bne	11fbc <__assert_fail@plt+0xbf4>
   11f98:	ldr	r0, [fp, #-12]
   11f9c:	movw	r1, #16752	; 0x4170
   11fa0:	movt	r1, #3
   11fa4:	ldr	r2, [r1]
   11fa8:	add	r3, r2, #1
   11fac:	str	r3, [r1]
   11fb0:	add	r0, r0, r2, lsl #2
   11fb4:	ldr	r0, [r0]
   11fb8:	str	r0, [fp, #-16]
   11fbc:	b	11fc0 <__assert_fail@plt+0xbf8>
   11fc0:	movw	r0, #16752	; 0x4170
   11fc4:	movt	r0, #3
   11fc8:	ldr	r0, [r0]
   11fcc:	ldr	r1, [fp, #-8]
   11fd0:	cmp	r0, r1
   11fd4:	blt	12084 <__assert_fail@plt+0xcbc>
   11fd8:	ldr	r0, [fp, #-16]
   11fdc:	movw	r1, #0
   11fe0:	cmp	r0, r1
   11fe4:	beq	12010 <__assert_fail@plt+0xc48>
   11fe8:	ldr	r0, [fp, #-16]
   11fec:	ldr	r1, [fp, #-12]
   11ff0:	movw	r2, #16752	; 0x4170
   11ff4:	movt	r2, #3
   11ff8:	ldr	r2, [r2]
   11ffc:	sub	r2, r2, #1
   12000:	add	r1, r1, r2, lsl #2
   12004:	ldr	r1, [r1]
   12008:	cmp	r0, r1
   1200c:	beq	12038 <__assert_fail@plt+0xc70>
   12010:	movw	r0, #12820	; 0x3214
   12014:	movt	r0, #2
   12018:	bl	11254 <gettext@plt>
   1201c:	movw	lr, #0
   12020:	str	r0, [sp, #56]	; 0x38
   12024:	mov	r0, lr
   12028:	mov	r1, lr
   1202c:	ldr	r2, [sp, #56]	; 0x38
   12030:	bl	111e8 <error@plt>
   12034:	b	1207c <__assert_fail@plt+0xcb4>
   12038:	movw	r0, #12836	; 0x3224
   1203c:	movt	r0, #2
   12040:	bl	11254 <gettext@plt>
   12044:	ldr	lr, [fp, #-12]
   12048:	ldr	r1, [fp, #-8]
   1204c:	sub	r1, r1, #1
   12050:	add	r1, lr, r1, lsl #2
   12054:	ldr	r1, [r1]
   12058:	str	r0, [sp, #52]	; 0x34
   1205c:	mov	r0, r1
   12060:	bl	1c1f4 <__assert_fail@plt+0xae2c>
   12064:	movw	r1, #0
   12068:	str	r0, [sp, #48]	; 0x30
   1206c:	mov	r0, r1
   12070:	ldr	r2, [sp, #52]	; 0x34
   12074:	ldr	r3, [sp, #48]	; 0x30
   12078:	bl	111e8 <error@plt>
   1207c:	movw	r0, #1
   12080:	bl	114c8 <__assert_fail@plt+0x100>
   12084:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12088:	movw	r1, #0
   1208c:	cmp	r0, r1
   12090:	beq	12104 <__assert_fail@plt+0xd3c>
   12094:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12098:	bl	1970c <__assert_fail@plt+0x8344>
   1209c:	movw	lr, #16780	; 0x418c
   120a0:	movt	lr, #3
   120a4:	str	r0, [lr]
   120a8:	ldr	r0, [lr]
   120ac:	movw	lr, #0
   120b0:	cmp	r0, lr
   120b4:	bne	12100 <__assert_fail@plt+0xd38>
   120b8:	bl	11290 <__errno_location@plt>
   120bc:	ldr	r1, [r0]
   120c0:	movw	r0, #12861	; 0x323d
   120c4:	movt	r0, #2
   120c8:	str	r1, [sp, #44]	; 0x2c
   120cc:	bl	11254 <gettext@plt>
   120d0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   120d4:	movw	lr, #4
   120d8:	str	r0, [sp, #40]	; 0x28
   120dc:	mov	r0, lr
   120e0:	bl	1be5c <__assert_fail@plt+0xaa94>
   120e4:	movw	r1, #1
   120e8:	str	r0, [sp, #36]	; 0x24
   120ec:	mov	r0, r1
   120f0:	ldr	r1, [sp, #44]	; 0x2c
   120f4:	ldr	r2, [sp, #40]	; 0x28
   120f8:	ldr	r3, [sp, #36]	; 0x24
   120fc:	bl	111e8 <error@plt>
   12100:	b	1217c <__assert_fail@plt+0xdb4>
   12104:	ldr	r0, [fp, #-16]
   12108:	bl	18e80 <__assert_fail@plt+0x7ab8>
   1210c:	movw	lr, #16780	; 0x418c
   12110:	movt	lr, #3
   12114:	str	r0, [lr]
   12118:	ldr	r0, [lr]
   1211c:	movw	lr, #0
   12120:	cmp	r0, lr
   12124:	bne	12168 <__assert_fail@plt+0xda0>
   12128:	movw	r0, #12892	; 0x325c
   1212c:	movt	r0, #2
   12130:	bl	11254 <gettext@plt>
   12134:	ldr	lr, [fp, #-16]
   12138:	str	r0, [sp, #32]
   1213c:	mov	r0, lr
   12140:	bl	1c1f4 <__assert_fail@plt+0xae2c>
   12144:	movw	lr, #0
   12148:	str	r0, [sp, #28]
   1214c:	mov	r0, lr
   12150:	mov	r1, lr
   12154:	ldr	r2, [sp, #32]
   12158:	ldr	r3, [sp, #28]
   1215c:	bl	111e8 <error@plt>
   12160:	movw	r0, #1
   12164:	bl	114c8 <__assert_fail@plt+0x100>
   12168:	movw	r0, #0
   1216c:	bl	1135c <umask@plt>
   12170:	movw	lr, #16784	; 0x4190
   12174:	movt	lr, #3
   12178:	str	r0, [lr]
   1217c:	movw	r0, #16778	; 0x418a
   12180:	movt	r0, #3
   12184:	ldrb	r0, [r0]
   12188:	tst	r0, #1
   1218c:	beq	12214 <__assert_fail@plt+0xe4c>
   12190:	ldrb	r0, [fp, #-26]	; 0xffffffe6
   12194:	tst	r0, #1
   12198:	beq	12214 <__assert_fail@plt+0xe4c>
   1219c:	movw	r0, #16792	; 0x4198
   121a0:	movt	r0, #3
   121a4:	bl	1c32c <__assert_fail@plt+0xaf64>
   121a8:	movw	lr, #16808	; 0x41a8
   121ac:	movt	lr, #3
   121b0:	str	r0, [lr]
   121b4:	ldr	r0, [lr]
   121b8:	movw	lr, #0
   121bc:	cmp	r0, lr
   121c0:	bne	12210 <__assert_fail@plt+0xe48>
   121c4:	bl	11290 <__errno_location@plt>
   121c8:	ldr	r1, [r0]
   121cc:	movw	r0, #12861	; 0x323d
   121d0:	movt	r0, #2
   121d4:	str	r1, [sp, #24]
   121d8:	bl	11254 <gettext@plt>
   121dc:	movw	r1, #4
   121e0:	str	r0, [sp, #20]
   121e4:	mov	r0, r1
   121e8:	movw	r1, #15479	; 0x3c77
   121ec:	movt	r1, #2
   121f0:	bl	1be5c <__assert_fail@plt+0xaa94>
   121f4:	movw	r1, #1
   121f8:	str	r0, [sp, #16]
   121fc:	mov	r0, r1
   12200:	ldr	r1, [sp, #24]
   12204:	ldr	r2, [sp, #20]
   12208:	ldr	r3, [sp, #16]
   1220c:	bl	111e8 <error@plt>
   12210:	b	12224 <__assert_fail@plt+0xe5c>
   12214:	movw	r0, #16808	; 0x41a8
   12218:	movt	r0, #3
   1221c:	movw	r1, #0
   12220:	str	r1, [r0]
   12224:	ldr	r0, [fp, #-12]
   12228:	movw	r1, #16752	; 0x4170
   1222c:	movt	r1, #3
   12230:	ldr	r1, [r1]
   12234:	add	r0, r0, r1, lsl #2
   12238:	movw	r1, #1041	; 0x411
   1223c:	bl	12260 <__assert_fail@plt+0xe98>
   12240:	and	r0, r0, #1
   12244:	strb	r0, [fp, #-25]	; 0xffffffe7
   12248:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   1224c:	tst	r0, #1
   12250:	movw	r0, #0
   12254:	moveq	r0, #1
   12258:	mov	sp, fp
   1225c:	pop	{fp, pc}
   12260:	push	{fp, lr}
   12264:	mov	fp, sp
   12268:	sub	sp, sp, #40	; 0x28
   1226c:	str	r0, [fp, #-4]
   12270:	str	r1, [fp, #-8]
   12274:	movw	r0, #1
   12278:	strb	r0, [fp, #-9]
   1227c:	ldr	r0, [fp, #-4]
   12280:	ldr	r1, [fp, #-8]
   12284:	movw	r2, #0
   12288:	bl	1fb54 <__assert_fail@plt+0xe78c>
   1228c:	str	r0, [fp, #-16]
   12290:	ldr	r0, [fp, #-16]
   12294:	bl	14694 <__assert_fail@plt+0x32cc>
   12298:	str	r0, [sp, #20]
   1229c:	ldr	r0, [sp, #20]
   122a0:	movw	lr, #0
   122a4:	cmp	r0, lr
   122a8:	bne	1230c <__assert_fail@plt+0xf44>
   122ac:	bl	11290 <__errno_location@plt>
   122b0:	ldr	r0, [r0]
   122b4:	cmp	r0, #0
   122b8:	beq	12308 <__assert_fail@plt+0xf40>
   122bc:	movw	r0, #16777	; 0x4189
   122c0:	movt	r0, #3
   122c4:	ldrb	r0, [r0]
   122c8:	tst	r0, #1
   122cc:	bne	12300 <__assert_fail@plt+0xf38>
   122d0:	bl	11290 <__errno_location@plt>
   122d4:	ldr	r1, [r0]
   122d8:	movw	r0, #13299	; 0x33f3
   122dc:	movt	r0, #2
   122e0:	str	r1, [sp, #16]
   122e4:	bl	11254 <gettext@plt>
   122e8:	movw	r1, #0
   122ec:	str	r0, [sp, #12]
   122f0:	mov	r0, r1
   122f4:	ldr	r1, [sp, #16]
   122f8:	ldr	r2, [sp, #12]
   122fc:	bl	111e8 <error@plt>
   12300:	movw	r0, #0
   12304:	strb	r0, [fp, #-9]
   12308:	b	12340 <__assert_fail@plt+0xf78>
   1230c:	ldr	r0, [fp, #-16]
   12310:	ldr	r1, [sp, #20]
   12314:	bl	12398 <__assert_fail@plt+0xfd0>
   12318:	and	r0, r0, #1
   1231c:	ldrb	r1, [fp, #-9]
   12320:	and	r1, r1, #1
   12324:	and	r0, r1, r0
   12328:	cmp	r0, #0
   1232c:	movw	r0, #0
   12330:	movne	r0, #1
   12334:	and	r0, r0, #1
   12338:	strb	r0, [fp, #-9]
   1233c:	b	12290 <__assert_fail@plt+0xec8>
   12340:	ldr	r0, [fp, #-16]
   12344:	bl	143d0 <__assert_fail@plt+0x3008>
   12348:	cmp	r0, #0
   1234c:	beq	12388 <__assert_fail@plt+0xfc0>
   12350:	bl	11290 <__errno_location@plt>
   12354:	ldr	r1, [r0]
   12358:	movw	r0, #13315	; 0x3403
   1235c:	movt	r0, #2
   12360:	str	r1, [sp, #8]
   12364:	bl	11254 <gettext@plt>
   12368:	movw	r1, #0
   1236c:	str	r0, [sp, #4]
   12370:	mov	r0, r1
   12374:	ldr	r1, [sp, #8]
   12378:	ldr	r2, [sp, #4]
   1237c:	bl	111e8 <error@plt>
   12380:	movw	r0, #0
   12384:	strb	r0, [fp, #-9]
   12388:	ldrb	r0, [fp, #-9]
   1238c:	and	r0, r0, #1
   12390:	mov	sp, fp
   12394:	pop	{fp, pc}
   12398:	push	{r4, sl, fp, lr}
   1239c:	add	fp, sp, #8
   123a0:	sub	sp, sp, #208	; 0xd0
   123a4:	str	r0, [fp, #-16]
   123a8:	str	r1, [fp, #-20]	; 0xffffffec
   123ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   123b0:	ldr	r0, [r0, #28]
   123b4:	str	r0, [fp, #-24]	; 0xffffffe8
   123b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   123bc:	ldr	r0, [r0, #24]
   123c0:	str	r0, [fp, #-28]	; 0xffffffe4
   123c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   123c8:	add	r0, r0, #64	; 0x40
   123cc:	str	r0, [fp, #-32]	; 0xffffffe0
   123d0:	mov	r0, #0
   123d4:	str	r0, [fp, #-44]	; 0xffffffd4
   123d8:	str	r0, [fp, #-48]	; 0xffffffd0
   123dc:	str	r0, [fp, #-40]	; 0xffffffd8
   123e0:	str	r0, [fp, #-48]	; 0xffffffd0
   123e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   123e8:	ldrh	r0, [r0, #56]	; 0x38
   123ec:	sub	r0, r0, #2
   123f0:	cmp	r0, #11
   123f4:	str	r0, [fp, #-80]	; 0xffffffb0
   123f8:	bhi	12674 <__assert_fail@plt+0x12ac>
   123fc:	add	r0, pc, #8
   12400:	ldr	r1, [fp, #-80]	; 0xffffffb0
   12404:	ldr	r0, [r0, r1, lsl #2]
   12408:	mov	pc, r0
   1240c:	andeq	r2, r1, ip, lsl #12
   12410:	andeq	r2, r1, r4, ror r6
   12414:	andeq	r2, r1, ip, asr r5
   12418:	andeq	r2, r1, r4, ror r6
   1241c:	andeq	r2, r1, ip, lsr r4
   12420:	andeq	r2, r1, r4, lsl #10
   12424:	andeq	r2, r1, r4, ror r6
   12428:	andeq	r2, r1, r4, ror r6
   1242c:	andeq	r2, r1, ip, asr #8
   12430:	andeq	r2, r1, r4, ror r6
   12434:	andeq	r2, r1, r4, ror r6
   12438:			; <UNDEFINED> instruction: 0x000125bc
   1243c:	movw	r0, #1
   12440:	and	r0, r0, #1
   12444:	strb	r0, [fp, #-9]
   12448:	b	12b20 <__assert_fail@plt+0x1758>
   1244c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12450:	ldr	r0, [r0, #48]	; 0x30
   12454:	cmp	r0, #0
   12458:	bne	124a4 <__assert_fail@plt+0x10dc>
   1245c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12460:	ldr	r0, [r0, #16]
   12464:	cmp	r0, #0
   12468:	bne	124a4 <__assert_fail@plt+0x10dc>
   1246c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12470:	movw	r1, #1
   12474:	str	r1, [r0, #16]
   12478:	ldr	r0, [fp, #-16]
   1247c:	ldr	r2, [fp, #-20]	; 0xffffffec
   12480:	str	r1, [fp, #-84]	; 0xffffffac
   12484:	mov	r1, r2
   12488:	ldr	r2, [fp, #-84]	; 0xffffffac
   1248c:	bl	165e8 <__assert_fail@plt+0x5220>
   12490:	movw	r1, #1
   12494:	and	r1, r1, #1
   12498:	strb	r1, [fp, #-9]
   1249c:	str	r0, [fp, #-88]	; 0xffffffa8
   124a0:	b	12b20 <__assert_fail@plt+0x1758>
   124a4:	movw	r0, #16777	; 0x4189
   124a8:	movt	r0, #3
   124ac:	ldrb	r0, [r0]
   124b0:	tst	r0, #1
   124b4:	bne	12500 <__assert_fail@plt+0x1138>
   124b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   124bc:	ldr	r1, [r0, #32]
   124c0:	movw	r0, #13332	; 0x3414
   124c4:	movt	r0, #2
   124c8:	str	r1, [fp, #-92]	; 0xffffffa4
   124cc:	bl	11254 <gettext@plt>
   124d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   124d4:	movw	lr, #4
   124d8:	str	r0, [fp, #-96]	; 0xffffffa0
   124dc:	mov	r0, lr
   124e0:	bl	1be5c <__assert_fail@plt+0xaa94>
   124e4:	movw	r1, #0
   124e8:	str	r0, [fp, #-100]	; 0xffffff9c
   124ec:	mov	r0, r1
   124f0:	ldr	r1, [fp, #-92]	; 0xffffffa4
   124f4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   124f8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   124fc:	bl	111e8 <error@plt>
   12500:	b	1267c <__assert_fail@plt+0x12b4>
   12504:	movw	r0, #16777	; 0x4189
   12508:	movt	r0, #3
   1250c:	ldrb	r0, [r0]
   12510:	tst	r0, #1
   12514:	bne	12558 <__assert_fail@plt+0x1190>
   12518:	ldr	r0, [fp, #-20]	; 0xffffffec
   1251c:	ldr	r1, [r0, #32]
   12520:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12524:	movw	r0, #0
   12528:	movw	r3, #3
   1252c:	str	r1, [fp, #-104]	; 0xffffff98
   12530:	mov	r1, r3
   12534:	bl	1bfb0 <__assert_fail@plt+0xabe8>
   12538:	movw	r1, #0
   1253c:	str	r0, [sp, #108]	; 0x6c
   12540:	mov	r0, r1
   12544:	ldr	r1, [fp, #-104]	; 0xffffff98
   12548:	movw	r2, #12906	; 0x326a
   1254c:	movt	r2, #2
   12550:	ldr	r3, [sp, #108]	; 0x6c
   12554:	bl	111e8 <error@plt>
   12558:	b	1267c <__assert_fail@plt+0x12b4>
   1255c:	movw	r0, #16777	; 0x4189
   12560:	movt	r0, #3
   12564:	ldrb	r0, [r0]
   12568:	tst	r0, #1
   1256c:	bne	125b8 <__assert_fail@plt+0x11f0>
   12570:	ldr	r0, [fp, #-20]	; 0xffffffec
   12574:	ldr	r1, [r0, #32]
   12578:	movw	r0, #13349	; 0x3425
   1257c:	movt	r0, #2
   12580:	str	r1, [sp, #104]	; 0x68
   12584:	bl	11254 <gettext@plt>
   12588:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1258c:	movw	lr, #4
   12590:	str	r0, [sp, #100]	; 0x64
   12594:	mov	r0, lr
   12598:	bl	1be5c <__assert_fail@plt+0xaa94>
   1259c:	movw	r1, #0
   125a0:	str	r0, [sp, #96]	; 0x60
   125a4:	mov	r0, r1
   125a8:	ldr	r1, [sp, #104]	; 0x68
   125ac:	ldr	r2, [sp, #100]	; 0x64
   125b0:	ldr	r3, [sp, #96]	; 0x60
   125b4:	bl	111e8 <error@plt>
   125b8:	b	1267c <__assert_fail@plt+0x12b4>
   125bc:	movw	r0, #16777	; 0x4189
   125c0:	movt	r0, #3
   125c4:	ldrb	r0, [r0]
   125c8:	tst	r0, #1
   125cc:	bne	12608 <__assert_fail@plt+0x1240>
   125d0:	movw	r0, #13374	; 0x343e
   125d4:	movt	r0, #2
   125d8:	bl	11254 <gettext@plt>
   125dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   125e0:	movw	lr, #4
   125e4:	str	r0, [sp, #92]	; 0x5c
   125e8:	mov	r0, lr
   125ec:	bl	1be5c <__assert_fail@plt+0xaa94>
   125f0:	movw	r1, #0
   125f4:	str	r0, [sp, #88]	; 0x58
   125f8:	mov	r0, r1
   125fc:	ldr	r2, [sp, #92]	; 0x5c
   12600:	ldr	r3, [sp, #88]	; 0x58
   12604:	bl	111e8 <error@plt>
   12608:	b	1267c <__assert_fail@plt+0x12b4>
   1260c:	ldr	r0, [fp, #-16]
   12610:	ldr	r1, [fp, #-20]	; 0xffffffec
   12614:	bl	1fbd8 <__assert_fail@plt+0xe810>
   12618:	tst	r0, #1
   1261c:	beq	12670 <__assert_fail@plt+0x12a8>
   12620:	b	12624 <__assert_fail@plt+0x125c>
   12624:	movw	r0, #13412	; 0x3464
   12628:	movt	r0, #2
   1262c:	bl	11254 <gettext@plt>
   12630:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12634:	movw	lr, #0
   12638:	str	r0, [sp, #84]	; 0x54
   1263c:	mov	r0, lr
   12640:	movw	r1, #3
   12644:	bl	1bfb0 <__assert_fail@plt+0xabe8>
   12648:	movw	r1, #0
   1264c:	str	r0, [sp, #80]	; 0x50
   12650:	mov	r0, r1
   12654:	ldr	r2, [sp, #84]	; 0x54
   12658:	ldr	r3, [sp, #80]	; 0x50
   1265c:	bl	111e8 <error@plt>
   12660:	movw	r0, #0
   12664:	and	r0, r0, #1
   12668:	strb	r0, [fp, #-9]
   1266c:	b	12b20 <__assert_fail@plt+0x1758>
   12670:	b	12674 <__assert_fail@plt+0x12ac>
   12674:	movw	r0, #2
   12678:	str	r0, [fp, #-48]	; 0xffffffd0
   1267c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12680:	cmp	r0, #2
   12684:	bne	12820 <__assert_fail@plt+0x1458>
   12688:	movw	r0, #16808	; 0x41a8
   1268c:	movt	r0, #3
   12690:	ldr	r0, [r0]
   12694:	movw	r1, #0
   12698:	cmp	r0, r1
   1269c:	beq	12820 <__assert_fail@plt+0x1458>
   126a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   126a4:	ldr	r1, [r0, #96]	; 0x60
   126a8:	ldr	r0, [r0, #100]	; 0x64
   126ac:	movw	r2, #16808	; 0x41a8
   126b0:	movt	r2, #3
   126b4:	ldr	r2, [r2]
   126b8:	ldr	r3, [r2]
   126bc:	ldr	r2, [r2, #4]
   126c0:	eor	r0, r0, r2
   126c4:	eor	r1, r1, r3
   126c8:	orr	r0, r1, r0
   126cc:	cmp	r0, #0
   126d0:	bne	12820 <__assert_fail@plt+0x1458>
   126d4:	b	126d8 <__assert_fail@plt+0x1310>
   126d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   126dc:	ldr	r1, [r0]
   126e0:	ldr	r0, [r0, #4]
   126e4:	movw	r2, #16808	; 0x41a8
   126e8:	movt	r2, #3
   126ec:	ldr	r2, [r2]
   126f0:	ldr	r3, [r2, #8]
   126f4:	ldr	r2, [r2, #12]
   126f8:	eor	r0, r0, r2
   126fc:	eor	r1, r1, r3
   12700:	orr	r0, r1, r0
   12704:	cmp	r0, #0
   12708:	bne	12820 <__assert_fail@plt+0x1458>
   1270c:	b	12710 <__assert_fail@plt+0x1348>
   12710:	b	12714 <__assert_fail@plt+0x134c>
   12714:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12718:	movw	r1, #15479	; 0x3c77
   1271c:	movt	r1, #2
   12720:	bl	11104 <strcmp@plt>
   12724:	cmp	r0, #0
   12728:	bne	12768 <__assert_fail@plt+0x13a0>
   1272c:	movw	r0, #13598	; 0x351e
   12730:	movt	r0, #2
   12734:	bl	11254 <gettext@plt>
   12738:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1273c:	movw	lr, #4
   12740:	str	r0, [sp, #76]	; 0x4c
   12744:	mov	r0, lr
   12748:	bl	1be5c <__assert_fail@plt+0xaa94>
   1274c:	movw	r1, #0
   12750:	str	r0, [sp, #72]	; 0x48
   12754:	mov	r0, r1
   12758:	ldr	r2, [sp, #76]	; 0x4c
   1275c:	ldr	r3, [sp, #72]	; 0x48
   12760:	bl	111e8 <error@plt>
   12764:	b	127c8 <__assert_fail@plt+0x1400>
   12768:	movw	r0, #13643	; 0x354b
   1276c:	movt	r0, #2
   12770:	bl	11254 <gettext@plt>
   12774:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12778:	movw	lr, #0
   1277c:	str	r0, [sp, #68]	; 0x44
   12780:	mov	r0, lr
   12784:	movw	r1, #4
   12788:	bl	1bd88 <__assert_fail@plt+0xa9c0>
   1278c:	movw	r1, #1
   12790:	str	r0, [sp, #64]	; 0x40
   12794:	mov	r0, r1
   12798:	movw	r1, #4
   1279c:	movw	r2, #15479	; 0x3c77
   127a0:	movt	r2, #2
   127a4:	bl	1bd88 <__assert_fail@plt+0xa9c0>
   127a8:	movw	r1, #0
   127ac:	str	r0, [sp, #60]	; 0x3c
   127b0:	mov	r0, r1
   127b4:	ldr	r2, [sp, #68]	; 0x44
   127b8:	ldr	r3, [sp, #64]	; 0x40
   127bc:	ldr	lr, [sp, #60]	; 0x3c
   127c0:	str	lr, [sp]
   127c4:	bl	111e8 <error@plt>
   127c8:	movw	r0, #13701	; 0x3585
   127cc:	movt	r0, #2
   127d0:	bl	11254 <gettext@plt>
   127d4:	movw	lr, #0
   127d8:	str	r0, [sp, #56]	; 0x38
   127dc:	mov	r0, lr
   127e0:	mov	r1, lr
   127e4:	ldr	r2, [sp, #56]	; 0x38
   127e8:	bl	111e8 <error@plt>
   127ec:	ldr	r0, [fp, #-16]
   127f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   127f4:	movw	r2, #4
   127f8:	bl	165e8 <__assert_fail@plt+0x5220>
   127fc:	ldr	r1, [fp, #-16]
   12800:	str	r0, [sp, #52]	; 0x34
   12804:	mov	r0, r1
   12808:	bl	14694 <__assert_fail@plt+0x32cc>
   1280c:	movw	r1, #0
   12810:	and	r1, r1, #1
   12814:	strb	r1, [fp, #-9]
   12818:	str	r0, [sp, #48]	; 0x30
   1281c:	b	12b20 <__assert_fail@plt+0x1758>
   12820:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12824:	cmp	r0, #2
   12828:	bne	12930 <__assert_fail@plt+0x1568>
   1282c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12830:	ldr	r0, [r0, #16]
   12834:	and	r0, r0, #61440	; 0xf000
   12838:	cmp	r0, #40960	; 0xa000
   1283c:	beq	12930 <__assert_fail@plt+0x1568>
   12840:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12844:	ldr	r0, [r0, #16]
   12848:	str	r0, [fp, #-44]	; 0xffffffd4
   1284c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12850:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12854:	and	r1, r1, #61440	; 0xf000
   12858:	cmp	r1, #16384	; 0x4000
   1285c:	movw	r1, #0
   12860:	moveq	r1, #1
   12864:	and	r1, r1, #1
   12868:	cmp	r1, #0
   1286c:	movw	r1, #0
   12870:	movne	r1, #1
   12874:	movw	r2, #16784	; 0x4190
   12878:	movt	r2, #3
   1287c:	ldr	r2, [r2]
   12880:	movw	r3, #16780	; 0x418c
   12884:	movt	r3, #3
   12888:	ldr	r3, [r3]
   1288c:	and	r1, r1, #1
   12890:	movw	ip, #0
   12894:	str	ip, [sp]
   12898:	bl	19758 <__assert_fail@plt+0x8390>
   1289c:	str	r0, [fp, #-40]	; 0xffffffd8
   128a0:	ldr	r0, [fp, #-16]
   128a4:	ldr	r0, [r0, #32]
   128a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   128ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   128b0:	bl	12ddc <__assert_fail@plt+0x1a14>
   128b4:	cmp	r0, #0
   128b8:	bne	128c8 <__assert_fail@plt+0x1500>
   128bc:	movw	r0, #4
   128c0:	str	r0, [fp, #-48]	; 0xffffffd0
   128c4:	b	1292c <__assert_fail@plt+0x1564>
   128c8:	movw	r0, #16777	; 0x4189
   128cc:	movt	r0, #3
   128d0:	ldrb	r0, [r0]
   128d4:	tst	r0, #1
   128d8:	bne	12924 <__assert_fail@plt+0x155c>
   128dc:	bl	11290 <__errno_location@plt>
   128e0:	ldr	r1, [r0]
   128e4:	movw	r0, #13750	; 0x35b6
   128e8:	movt	r0, #2
   128ec:	str	r1, [sp, #44]	; 0x2c
   128f0:	bl	11254 <gettext@plt>
   128f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   128f8:	movw	lr, #4
   128fc:	str	r0, [sp, #40]	; 0x28
   12900:	mov	r0, lr
   12904:	bl	1be5c <__assert_fail@plt+0xaa94>
   12908:	movw	r1, #0
   1290c:	str	r0, [sp, #36]	; 0x24
   12910:	mov	r0, r1
   12914:	ldr	r1, [sp, #44]	; 0x2c
   12918:	ldr	r2, [sp, #40]	; 0x28
   1291c:	ldr	r3, [sp, #36]	; 0x24
   12920:	bl	111e8 <error@plt>
   12924:	movw	r0, #1
   12928:	str	r0, [fp, #-48]	; 0xffffffd0
   1292c:	b	12930 <__assert_fail@plt+0x1568>
   12930:	movw	r0, #16664	; 0x4118
   12934:	movt	r0, #3
   12938:	ldr	r0, [r0]
   1293c:	cmp	r0, #2
   12940:	beq	129b0 <__assert_fail@plt+0x15e8>
   12944:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12948:	cmp	r0, #4
   1294c:	bne	12980 <__assert_fail@plt+0x15b8>
   12950:	ldr	r0, [fp, #-16]
   12954:	ldr	r0, [r0, #32]
   12958:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1295c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12960:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12964:	ldr	ip, [fp, #-40]	; 0xffffffd8
   12968:	str	ip, [sp]
   1296c:	bl	12b30 <__assert_fail@plt+0x1768>
   12970:	tst	r0, #1
   12974:	bne	12980 <__assert_fail@plt+0x15b8>
   12978:	movw	r0, #3
   1297c:	str	r0, [fp, #-48]	; 0xffffffd0
   12980:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12984:	cmp	r0, #4
   12988:	beq	129a0 <__assert_fail@plt+0x15d8>
   1298c:	movw	r0, #16664	; 0x4118
   12990:	movt	r0, #3
   12994:	ldr	r0, [r0]
   12998:	cmp	r0, #0
   1299c:	bne	129ac <__assert_fail@plt+0x15e4>
   129a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   129a4:	sub	r1, fp, #48	; 0x30
   129a8:	bl	12c2c <__assert_fail@plt+0x1864>
   129ac:	b	129b0 <__assert_fail@plt+0x15e8>
   129b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   129b4:	movw	r1, #3
   129b8:	cmp	r1, r0
   129bc:	bhi	12adc <__assert_fail@plt+0x1714>
   129c0:	movw	r0, #16776	; 0x4188
   129c4:	movt	r0, #3
   129c8:	ldrb	r0, [r0]
   129cc:	tst	r0, #1
   129d0:	beq	12adc <__assert_fail@plt+0x1714>
   129d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   129d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   129dc:	and	r1, r1, #61440	; 0xf000
   129e0:	cmp	r1, #16384	; 0x4000
   129e4:	movw	r1, #0
   129e8:	moveq	r1, #1
   129ec:	and	r1, r1, #1
   129f0:	cmp	r1, #0
   129f4:	movw	r1, #0
   129f8:	movne	r1, #1
   129fc:	movw	r2, #16780	; 0x418c
   12a00:	movt	r2, #3
   12a04:	ldr	r3, [r2]
   12a08:	and	r1, r1, #1
   12a0c:	movw	r2, #0
   12a10:	str	r2, [sp, #32]
   12a14:	ldr	ip, [sp, #32]
   12a18:	str	ip, [sp]
   12a1c:	bl	19758 <__assert_fail@plt+0x8390>
   12a20:	str	r0, [fp, #-52]	; 0xffffffcc
   12a24:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12a28:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12a2c:	mvn	r2, #0
   12a30:	eor	r1, r1, r2
   12a34:	and	r0, r0, r1
   12a38:	cmp	r0, #0
   12a3c:	beq	12ad8 <__assert_fail@plt+0x1710>
   12a40:	sub	r1, fp, #64	; 0x40
   12a44:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12a48:	bl	13180 <__assert_fail@plt+0x1db8>
   12a4c:	sub	r1, fp, #76	; 0x4c
   12a50:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12a54:	bl	13180 <__assert_fail@plt+0x1db8>
   12a58:	movw	r0, #0
   12a5c:	strb	r0, [fp, #-66]	; 0xffffffbe
   12a60:	strb	r0, [fp, #-54]	; 0xffffffca
   12a64:	movw	r0, #13777	; 0x35d1
   12a68:	movt	r0, #2
   12a6c:	bl	11254 <gettext@plt>
   12a70:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12a74:	movw	r1, #0
   12a78:	str	r0, [sp, #28]
   12a7c:	mov	r0, r1
   12a80:	movw	r1, #3
   12a84:	bl	1bfb0 <__assert_fail@plt+0xabe8>
   12a88:	sub	r1, fp, #76	; 0x4c
   12a8c:	sub	r2, fp, #64	; 0x40
   12a90:	add	r2, r2, #1
   12a94:	add	r1, r1, #1
   12a98:	movw	lr, #0
   12a9c:	str	r0, [sp, #24]
   12aa0:	mov	r0, lr
   12aa4:	str	r1, [sp, #20]
   12aa8:	mov	r1, lr
   12aac:	ldr	lr, [sp, #28]
   12ab0:	str	r2, [sp, #16]
   12ab4:	mov	r2, lr
   12ab8:	ldr	r3, [sp, #24]
   12abc:	ldr	ip, [sp, #16]
   12ac0:	str	ip, [sp]
   12ac4:	ldr	r4, [sp, #20]
   12ac8:	str	r4, [sp, #4]
   12acc:	bl	111e8 <error@plt>
   12ad0:	movw	r0, #1
   12ad4:	str	r0, [fp, #-48]	; 0xffffffd0
   12ad8:	b	12adc <__assert_fail@plt+0x1714>
   12adc:	movw	r0, #16778	; 0x418a
   12ae0:	movt	r0, #3
   12ae4:	ldrb	r0, [r0]
   12ae8:	tst	r0, #1
   12aec:	bne	12b04 <__assert_fail@plt+0x173c>
   12af0:	ldr	r0, [fp, #-16]
   12af4:	ldr	r1, [fp, #-20]	; 0xffffffec
   12af8:	movw	r2, #4
   12afc:	bl	165e8 <__assert_fail@plt+0x5220>
   12b00:	str	r0, [sp, #12]
   12b04:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12b08:	movw	r1, #2
   12b0c:	cmp	r1, r0
   12b10:	movw	r0, #0
   12b14:	movls	r0, #1
   12b18:	and	r0, r0, #1
   12b1c:	strb	r0, [fp, #-9]
   12b20:	ldrb	r0, [fp, #-9]
   12b24:	and	r0, r0, #1
   12b28:	sub	sp, fp, #8
   12b2c:	pop	{r4, sl, fp, pc}
   12b30:	push	{fp, lr}
   12b34:	mov	fp, sp
   12b38:	sub	sp, sp, #144	; 0x90
   12b3c:	ldr	ip, [fp, #8]
   12b40:	str	r0, [fp, #-8]
   12b44:	str	r1, [fp, #-12]
   12b48:	str	r2, [fp, #-16]
   12b4c:	str	r3, [fp, #-20]	; 0xffffffec
   12b50:	ldr	r0, [fp, #8]
   12b54:	and	r0, r0, #3584	; 0xe00
   12b58:	cmp	r0, #0
   12b5c:	str	ip, [sp, #12]
   12b60:	beq	12bf4 <__assert_fail@plt+0x182c>
   12b64:	ldr	r0, [fp, #-8]
   12b68:	ldr	r1, [fp, #-12]
   12b6c:	add	r2, sp, #16
   12b70:	movw	r3, #0
   12b74:	bl	22d94 <__assert_fail@plt+0x119cc>
   12b78:	cmp	r0, #0
   12b7c:	beq	12bec <__assert_fail@plt+0x1824>
   12b80:	movw	r0, #16777	; 0x4189
   12b84:	movt	r0, #3
   12b88:	ldrb	r0, [r0]
   12b8c:	tst	r0, #1
   12b90:	bne	12bdc <__assert_fail@plt+0x1814>
   12b94:	bl	11290 <__errno_location@plt>
   12b98:	ldr	r1, [r0]
   12b9c:	movw	r0, #13812	; 0x35f4
   12ba0:	movt	r0, #2
   12ba4:	str	r1, [sp, #8]
   12ba8:	bl	11254 <gettext@plt>
   12bac:	ldr	r1, [fp, #-16]
   12bb0:	movw	lr, #4
   12bb4:	str	r0, [sp, #4]
   12bb8:	mov	r0, lr
   12bbc:	bl	1be5c <__assert_fail@plt+0xaa94>
   12bc0:	movw	r1, #0
   12bc4:	str	r0, [sp]
   12bc8:	mov	r0, r1
   12bcc:	ldr	r1, [sp, #8]
   12bd0:	ldr	r2, [sp, #4]
   12bd4:	ldr	r3, [sp]
   12bd8:	bl	111e8 <error@plt>
   12bdc:	movw	r0, #0
   12be0:	and	r0, r0, #1
   12be4:	strb	r0, [fp, #-1]
   12be8:	b	12c1c <__assert_fail@plt+0x1854>
   12bec:	ldr	r0, [sp, #32]
   12bf0:	str	r0, [fp, #8]
   12bf4:	ldr	r0, [fp, #-20]	; 0xffffffec
   12bf8:	ldr	r1, [fp, #8]
   12bfc:	eor	r0, r0, r1
   12c00:	movw	r1, #4095	; 0xfff
   12c04:	and	r0, r0, r1
   12c08:	cmp	r0, #0
   12c0c:	movw	r0, #0
   12c10:	movne	r0, #1
   12c14:	and	r0, r0, #1
   12c18:	strb	r0, [fp, #-1]
   12c1c:	ldrb	r0, [fp, #-1]
   12c20:	and	r0, r0, #1
   12c24:	mov	sp, fp
   12c28:	pop	{fp, pc}
   12c2c:	push	{fp, lr}
   12c30:	mov	fp, sp
   12c34:	sub	sp, sp, #88	; 0x58
   12c38:	str	r0, [fp, #-4]
   12c3c:	str	r1, [fp, #-8]
   12c40:	ldr	r1, [fp, #-4]
   12c44:	mov	r0, #4
   12c48:	bl	1be5c <__assert_fail@plt+0xaa94>
   12c4c:	str	r0, [fp, #-40]	; 0xffffffd8
   12c50:	ldr	r0, [fp, #-8]
   12c54:	ldr	r0, [r0]
   12c58:	cmp	r0, #0
   12c5c:	str	r0, [sp, #36]	; 0x24
   12c60:	beq	12c94 <__assert_fail@plt+0x18cc>
   12c64:	b	12c68 <__assert_fail@plt+0x18a0>
   12c68:	ldr	r0, [sp, #36]	; 0x24
   12c6c:	cmp	r0, #2
   12c70:	bne	12cb0 <__assert_fail@plt+0x18e8>
   12c74:	b	12c78 <__assert_fail@plt+0x18b0>
   12c78:	movw	r0, #13841	; 0x3611
   12c7c:	movt	r0, #2
   12c80:	bl	11254 <gettext@plt>
   12c84:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12c88:	bl	11110 <printf@plt>
   12c8c:	str	r0, [sp, #32]
   12c90:	b	12dd4 <__assert_fail@plt+0x1a0c>
   12c94:	movw	r0, #13897	; 0x3649
   12c98:	movt	r0, #2
   12c9c:	bl	11254 <gettext@plt>
   12ca0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12ca4:	bl	11110 <printf@plt>
   12ca8:	str	r0, [sp, #28]
   12cac:	b	12dd4 <__assert_fail@plt+0x1a0c>
   12cb0:	b	12cb4 <__assert_fail@plt+0x18ec>
   12cb4:	ldr	r0, [fp, #-8]
   12cb8:	ldr	r0, [r0, #4]
   12cbc:	bfc	r0, #12, #20
   12cc0:	str	r0, [sp, #44]	; 0x2c
   12cc4:	ldr	r0, [fp, #-8]
   12cc8:	ldr	r0, [r0, #8]
   12ccc:	bfc	r0, #12, #20
   12cd0:	str	r0, [sp, #40]	; 0x28
   12cd4:	ldr	r0, [fp, #-8]
   12cd8:	ldr	r0, [r0, #8]
   12cdc:	sub	r1, fp, #20
   12ce0:	bl	13180 <__assert_fail@plt+0x1db8>
   12ce4:	mov	r0, #0
   12ce8:	strb	r0, [fp, #-10]
   12cec:	ldr	r1, [fp, #-8]
   12cf0:	ldr	r1, [r1, #4]
   12cf4:	sub	lr, fp, #32
   12cf8:	str	r0, [sp, #24]
   12cfc:	mov	r0, r1
   12d00:	mov	r1, lr
   12d04:	bl	13180 <__assert_fail@plt+0x1db8>
   12d08:	ldr	r0, [sp, #24]
   12d0c:	strb	r0, [fp, #-22]	; 0xffffffea
   12d10:	ldr	r1, [fp, #-8]
   12d14:	ldr	r1, [r1]
   12d18:	cmp	r1, #1
   12d1c:	str	r1, [sp, #20]
   12d20:	beq	12d5c <__assert_fail@plt+0x1994>
   12d24:	b	12d28 <__assert_fail@plt+0x1960>
   12d28:	ldr	r0, [sp, #20]
   12d2c:	cmp	r0, #3
   12d30:	beq	12d70 <__assert_fail@plt+0x19a8>
   12d34:	b	12d38 <__assert_fail@plt+0x1970>
   12d38:	ldr	r0, [sp, #20]
   12d3c:	cmp	r0, #4
   12d40:	bne	12da0 <__assert_fail@plt+0x19d8>
   12d44:	b	12d48 <__assert_fail@plt+0x1980>
   12d48:	movw	r0, #13923	; 0x3663
   12d4c:	movt	r0, #2
   12d50:	bl	11254 <gettext@plt>
   12d54:	str	r0, [fp, #-36]	; 0xffffffdc
   12d58:	b	12da4 <__assert_fail@plt+0x19dc>
   12d5c:	movw	r0, #13973	; 0x3695
   12d60:	movt	r0, #2
   12d64:	bl	11254 <gettext@plt>
   12d68:	str	r0, [fp, #-36]	; 0xffffffdc
   12d6c:	b	12da4 <__assert_fail@plt+0x19dc>
   12d70:	movw	r0, #14032	; 0x36d0
   12d74:	movt	r0, #2
   12d78:	bl	11254 <gettext@plt>
   12d7c:	str	r0, [fp, #-36]	; 0xffffffdc
   12d80:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12d84:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12d88:	ldr	r2, [sp, #40]	; 0x28
   12d8c:	sub	lr, fp, #20
   12d90:	add	r3, lr, #1
   12d94:	bl	11110 <printf@plt>
   12d98:	str	r0, [sp, #16]
   12d9c:	b	12dd4 <__assert_fail@plt+0x1a0c>
   12da0:	bl	11398 <abort@plt>
   12da4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12da8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12dac:	ldr	r2, [sp, #44]	; 0x2c
   12db0:	sub	r3, fp, #32
   12db4:	add	r3, r3, #1
   12db8:	ldr	ip, [sp, #40]	; 0x28
   12dbc:	sub	lr, fp, #20
   12dc0:	add	lr, lr, #1
   12dc4:	str	ip, [sp]
   12dc8:	str	lr, [sp, #4]
   12dcc:	bl	11110 <printf@plt>
   12dd0:	str	r0, [sp, #12]
   12dd4:	mov	sp, fp
   12dd8:	pop	{fp, pc}
   12ddc:	push	{fp, lr}
   12de0:	mov	fp, sp
   12de4:	sub	sp, sp, #16
   12de8:	str	r0, [fp, #-4]
   12dec:	str	r1, [sp, #8]
   12df0:	str	r2, [sp, #4]
   12df4:	ldr	r0, [fp, #-4]
   12df8:	ldr	r1, [sp, #8]
   12dfc:	ldr	r2, [sp, #4]
   12e00:	movw	r3, #0
   12e04:	bl	12fac <__assert_fail@plt+0x1be4>
   12e08:	mov	sp, fp
   12e0c:	pop	{fp, pc}
   12e10:	push	{fp, lr}
   12e14:	mov	fp, sp
   12e18:	sub	sp, sp, #16
   12e1c:	str	r0, [fp, #-4]
   12e20:	str	r1, [sp, #8]
   12e24:	str	r2, [sp, #4]
   12e28:	ldr	r0, [fp, #-4]
   12e2c:	ldr	r1, [sp, #8]
   12e30:	ldr	r2, [sp, #4]
   12e34:	movw	r3, #256	; 0x100
   12e38:	bl	12fac <__assert_fail@plt+0x1be4>
   12e3c:	mov	sp, fp
   12e40:	pop	{fp, pc}
   12e44:	sub	sp, sp, #4
   12e48:	str	r0, [sp]
   12e4c:	ldr	r0, [sp]
   12e50:	movw	r1, #16812	; 0x41ac
   12e54:	movt	r1, #3
   12e58:	str	r0, [r1]
   12e5c:	add	sp, sp, #4
   12e60:	bx	lr
   12e64:	sub	sp, sp, #4
   12e68:	and	r0, r0, #1
   12e6c:	strb	r0, [sp, #3]
   12e70:	ldrb	r0, [sp, #3]
   12e74:	and	r0, r0, #1
   12e78:	movw	r1, #16816	; 0x41b0
   12e7c:	movt	r1, #3
   12e80:	strb	r0, [r1]
   12e84:	add	sp, sp, #4
   12e88:	bx	lr
   12e8c:	push	{fp, lr}
   12e90:	mov	fp, sp
   12e94:	sub	sp, sp, #24
   12e98:	movw	r0, #16764	; 0x417c
   12e9c:	movt	r0, #3
   12ea0:	ldr	r0, [r0]
   12ea4:	bl	201c4 <__assert_fail@plt+0xedfc>
   12ea8:	cmp	r0, #0
   12eac:	beq	12f7c <__assert_fail@plt+0x1bb4>
   12eb0:	movw	r0, #16816	; 0x41b0
   12eb4:	movt	r0, #3
   12eb8:	ldrb	r0, [r0]
   12ebc:	tst	r0, #1
   12ec0:	beq	12ed4 <__assert_fail@plt+0x1b0c>
   12ec4:	bl	11290 <__errno_location@plt>
   12ec8:	ldr	r0, [r0]
   12ecc:	cmp	r0, #32
   12ed0:	beq	12f7c <__assert_fail@plt+0x1bb4>
   12ed4:	movw	r0, #14315	; 0x37eb
   12ed8:	movt	r0, #2
   12edc:	bl	11254 <gettext@plt>
   12ee0:	str	r0, [fp, #-4]
   12ee4:	movw	r0, #16812	; 0x41ac
   12ee8:	movt	r0, #3
   12eec:	ldr	r0, [r0]
   12ef0:	movw	lr, #0
   12ef4:	cmp	r0, lr
   12ef8:	beq	12f50 <__assert_fail@plt+0x1b88>
   12efc:	bl	11290 <__errno_location@plt>
   12f00:	ldr	r1, [r0]
   12f04:	movw	r0, #16812	; 0x41ac
   12f08:	movt	r0, #3
   12f0c:	ldr	r0, [r0]
   12f10:	str	r1, [fp, #-8]
   12f14:	bl	1bf58 <__assert_fail@plt+0xab90>
   12f18:	ldr	r1, [fp, #-4]
   12f1c:	movw	lr, #0
   12f20:	str	r0, [sp, #12]
   12f24:	mov	r0, lr
   12f28:	ldr	lr, [fp, #-8]
   12f2c:	str	r1, [sp, #8]
   12f30:	mov	r1, lr
   12f34:	movw	r2, #14327	; 0x37f7
   12f38:	movt	r2, #2
   12f3c:	ldr	r3, [sp, #12]
   12f40:	ldr	ip, [sp, #8]
   12f44:	str	ip, [sp]
   12f48:	bl	111e8 <error@plt>
   12f4c:	b	12f6c <__assert_fail@plt+0x1ba4>
   12f50:	bl	11290 <__errno_location@plt>
   12f54:	ldr	r1, [r0]
   12f58:	ldr	r3, [fp, #-4]
   12f5c:	movw	r0, #0
   12f60:	movw	r2, #12906	; 0x326a
   12f64:	movt	r2, #2
   12f68:	bl	111e8 <error@plt>
   12f6c:	movw	r0, #16672	; 0x4120
   12f70:	movt	r0, #3
   12f74:	ldr	r0, [r0]
   12f78:	bl	11140 <_exit@plt>
   12f7c:	movw	r0, #16760	; 0x4178
   12f80:	movt	r0, #3
   12f84:	ldr	r0, [r0]
   12f88:	bl	201c4 <__assert_fail@plt+0xedfc>
   12f8c:	cmp	r0, #0
   12f90:	beq	12fa4 <__assert_fail@plt+0x1bdc>
   12f94:	movw	r0, #16672	; 0x4120
   12f98:	movt	r0, #3
   12f9c:	ldr	r0, [r0]
   12fa0:	bl	11140 <_exit@plt>
   12fa4:	mov	sp, fp
   12fa8:	pop	{fp, pc}
   12fac:	push	{fp, lr}
   12fb0:	mov	fp, sp
   12fb4:	sub	sp, sp, #200	; 0xc8
   12fb8:	str	r0, [fp, #-8]
   12fbc:	str	r1, [fp, #-12]
   12fc0:	str	r2, [fp, #-16]
   12fc4:	str	r3, [fp, #-20]	; 0xffffffec
   12fc8:	ldr	r0, [fp, #-20]	; 0xffffffec
   12fcc:	cmp	r0, #256	; 0x100
   12fd0:	bne	13120 <__assert_fail@plt+0x1d58>
   12fd4:	ldr	r2, [pc, #360]	; 13144 <__assert_fail@plt+0x1d7c>
   12fd8:	ldr	r0, [fp, #-8]
   12fdc:	ldr	r1, [fp, #-12]
   12fe0:	bl	1126c <openat64@plt>
   12fe4:	str	r0, [sp, #68]	; 0x44
   12fe8:	ldr	r0, [sp, #68]	; 0x44
   12fec:	cmp	r0, #0
   12ff0:	bge	13000 <__assert_fail@plt+0x1c38>
   12ff4:	ldr	r0, [sp, #68]	; 0x44
   12ff8:	str	r0, [fp, #-4]
   12ffc:	b	13138 <__assert_fail@plt+0x1d70>
   13000:	ldr	r0, [sp, #68]	; 0x44
   13004:	movw	r1, #11998	; 0x2ede
   13008:	movt	r1, #2
   1300c:	add	r2, sp, #72	; 0x48
   13010:	movw	r3, #4096	; 0x1000
   13014:	bl	22d94 <__assert_fail@plt+0x119cc>
   13018:	cmp	r0, #0
   1301c:	beq	13058 <__assert_fail@plt+0x1c90>
   13020:	bl	11290 <__errno_location@plt>
   13024:	ldr	r0, [r0]
   13028:	str	r0, [sp, #64]	; 0x40
   1302c:	ldr	r0, [sp, #68]	; 0x44
   13030:	bl	113a4 <close@plt>
   13034:	ldr	lr, [sp, #64]	; 0x40
   13038:	str	r0, [sp, #24]
   1303c:	str	lr, [sp, #20]
   13040:	bl	11290 <__errno_location@plt>
   13044:	ldr	lr, [sp, #20]
   13048:	str	lr, [r0]
   1304c:	mvn	r0, #0
   13050:	str	r0, [fp, #-4]
   13054:	b	13138 <__assert_fail@plt+0x1d70>
   13058:	ldr	r0, [sp, #88]	; 0x58
   1305c:	and	r0, r0, #61440	; 0xf000
   13060:	cmp	r0, #40960	; 0xa000
   13064:	bne	1308c <__assert_fail@plt+0x1cc4>
   13068:	ldr	r0, [sp, #68]	; 0x44
   1306c:	bl	113a4 <close@plt>
   13070:	str	r0, [sp, #16]
   13074:	bl	11290 <__errno_location@plt>
   13078:	movw	lr, #95	; 0x5f
   1307c:	str	lr, [r0]
   13080:	mvn	r0, #0
   13084:	str	r0, [fp, #-4]
   13088:	b	13138 <__assert_fail@plt+0x1d70>
   1308c:	add	r0, sp, #38	; 0x26
   13090:	ldr	r2, [sp, #68]	; 0x44
   13094:	movw	r1, #14334	; 0x37fe
   13098:	movt	r1, #2
   1309c:	bl	11308 <sprintf@plt>
   130a0:	add	r1, sp, #38	; 0x26
   130a4:	ldr	r2, [fp, #-16]
   130a8:	str	r0, [sp, #12]
   130ac:	mov	r0, r1
   130b0:	mov	r1, r2
   130b4:	bl	11368 <chmod@plt>
   130b8:	str	r0, [sp, #32]
   130bc:	bl	11290 <__errno_location@plt>
   130c0:	ldr	r0, [r0]
   130c4:	str	r0, [sp, #28]
   130c8:	ldr	r0, [sp, #68]	; 0x44
   130cc:	bl	113a4 <close@plt>
   130d0:	ldr	r1, [sp, #32]
   130d4:	cmp	r1, #0
   130d8:	str	r0, [sp, #8]
   130dc:	bne	130ec <__assert_fail@plt+0x1d24>
   130e0:	ldr	r0, [sp, #32]
   130e4:	str	r0, [fp, #-4]
   130e8:	b	13138 <__assert_fail@plt+0x1d70>
   130ec:	ldr	r0, [sp, #28]
   130f0:	cmp	r0, #2
   130f4:	beq	13118 <__assert_fail@plt+0x1d50>
   130f8:	ldr	r0, [sp, #28]
   130fc:	str	r0, [sp, #4]
   13100:	bl	11290 <__errno_location@plt>
   13104:	ldr	lr, [sp, #4]
   13108:	str	lr, [r0]
   1310c:	ldr	r0, [sp, #32]
   13110:	str	r0, [fp, #-4]
   13114:	b	13138 <__assert_fail@plt+0x1d70>
   13118:	movw	r0, #0
   1311c:	str	r0, [fp, #-20]	; 0xffffffec
   13120:	ldr	r0, [fp, #-8]
   13124:	ldr	r1, [fp, #-12]
   13128:	ldr	r2, [fp, #-16]
   1312c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13130:	bl	13148 <__assert_fail@plt+0x1d80>
   13134:	str	r0, [fp, #-4]
   13138:	ldr	r0, [fp, #-4]
   1313c:	mov	sp, fp
   13140:	pop	{fp, pc}
   13144:	eoreq	r8, r8, r0
   13148:	push	{fp, lr}
   1314c:	mov	fp, sp
   13150:	sub	sp, sp, #16
   13154:	str	r0, [fp, #-4]
   13158:	str	r1, [sp, #8]
   1315c:	str	r2, [sp, #4]
   13160:	str	r3, [sp]
   13164:	ldr	r0, [fp, #-4]
   13168:	ldr	r1, [sp, #8]
   1316c:	ldr	r2, [sp, #4]
   13170:	ldr	r3, [sp]
   13174:	bl	11284 <fchmodat@plt>
   13178:	mov	sp, fp
   1317c:	pop	{fp, pc}
   13180:	push	{fp, lr}
   13184:	mov	fp, sp
   13188:	sub	sp, sp, #24
   1318c:	str	r0, [fp, #-4]
   13190:	str	r1, [fp, #-8]
   13194:	ldr	r0, [fp, #-4]
   13198:	bl	133ec <__assert_fail@plt+0x2024>
   1319c:	ldr	r1, [fp, #-8]
   131a0:	strb	r0, [r1]
   131a4:	ldr	r0, [fp, #-4]
   131a8:	and	r0, r0, #256	; 0x100
   131ac:	cmp	r0, #0
   131b0:	movw	r0, #0
   131b4:	movne	r0, #1
   131b8:	tst	r0, #1
   131bc:	movw	r0, #114	; 0x72
   131c0:	moveq	r0, #45	; 0x2d
   131c4:	ldr	r1, [fp, #-8]
   131c8:	strb	r0, [r1, #1]
   131cc:	ldr	r0, [fp, #-4]
   131d0:	and	r0, r0, #128	; 0x80
   131d4:	cmp	r0, #0
   131d8:	movw	r0, #0
   131dc:	movne	r0, #1
   131e0:	tst	r0, #1
   131e4:	movw	r0, #119	; 0x77
   131e8:	moveq	r0, #45	; 0x2d
   131ec:	ldr	r1, [fp, #-8]
   131f0:	strb	r0, [r1, #2]
   131f4:	ldr	r0, [fp, #-4]
   131f8:	and	r0, r0, #2048	; 0x800
   131fc:	cmp	r0, #0
   13200:	beq	1322c <__assert_fail@plt+0x1e64>
   13204:	ldr	r0, [fp, #-4]
   13208:	and	r0, r0, #64	; 0x40
   1320c:	cmp	r0, #0
   13210:	movw	r0, #0
   13214:	movne	r0, #1
   13218:	tst	r0, #1
   1321c:	movw	r0, #115	; 0x73
   13220:	moveq	r0, #83	; 0x53
   13224:	str	r0, [sp, #12]
   13228:	b	13250 <__assert_fail@plt+0x1e88>
   1322c:	ldr	r0, [fp, #-4]
   13230:	and	r0, r0, #64	; 0x40
   13234:	cmp	r0, #0
   13238:	movw	r0, #0
   1323c:	movne	r0, #1
   13240:	tst	r0, #1
   13244:	movw	r0, #120	; 0x78
   13248:	moveq	r0, #45	; 0x2d
   1324c:	str	r0, [sp, #12]
   13250:	ldr	r0, [sp, #12]
   13254:	ldr	r1, [fp, #-8]
   13258:	strb	r0, [r1, #3]
   1325c:	ldr	r0, [fp, #-4]
   13260:	and	r0, r0, #32
   13264:	cmp	r0, #0
   13268:	movw	r0, #0
   1326c:	movne	r0, #1
   13270:	tst	r0, #1
   13274:	movw	r0, #114	; 0x72
   13278:	moveq	r0, #45	; 0x2d
   1327c:	ldr	r1, [fp, #-8]
   13280:	strb	r0, [r1, #4]
   13284:	ldr	r0, [fp, #-4]
   13288:	and	r0, r0, #16
   1328c:	cmp	r0, #0
   13290:	movw	r0, #0
   13294:	movne	r0, #1
   13298:	tst	r0, #1
   1329c:	movw	r0, #119	; 0x77
   132a0:	moveq	r0, #45	; 0x2d
   132a4:	ldr	r1, [fp, #-8]
   132a8:	strb	r0, [r1, #5]
   132ac:	ldr	r0, [fp, #-4]
   132b0:	and	r0, r0, #1024	; 0x400
   132b4:	cmp	r0, #0
   132b8:	beq	132e4 <__assert_fail@plt+0x1f1c>
   132bc:	ldr	r0, [fp, #-4]
   132c0:	and	r0, r0, #8
   132c4:	cmp	r0, #0
   132c8:	movw	r0, #0
   132cc:	movne	r0, #1
   132d0:	tst	r0, #1
   132d4:	movw	r0, #115	; 0x73
   132d8:	moveq	r0, #83	; 0x53
   132dc:	str	r0, [sp, #8]
   132e0:	b	13308 <__assert_fail@plt+0x1f40>
   132e4:	ldr	r0, [fp, #-4]
   132e8:	and	r0, r0, #8
   132ec:	cmp	r0, #0
   132f0:	movw	r0, #0
   132f4:	movne	r0, #1
   132f8:	tst	r0, #1
   132fc:	movw	r0, #120	; 0x78
   13300:	moveq	r0, #45	; 0x2d
   13304:	str	r0, [sp, #8]
   13308:	ldr	r0, [sp, #8]
   1330c:	ldr	r1, [fp, #-8]
   13310:	strb	r0, [r1, #6]
   13314:	ldr	r0, [fp, #-4]
   13318:	and	r0, r0, #4
   1331c:	cmp	r0, #0
   13320:	movw	r0, #0
   13324:	movne	r0, #1
   13328:	tst	r0, #1
   1332c:	movw	r0, #114	; 0x72
   13330:	moveq	r0, #45	; 0x2d
   13334:	ldr	r1, [fp, #-8]
   13338:	strb	r0, [r1, #7]
   1333c:	ldr	r0, [fp, #-4]
   13340:	and	r0, r0, #2
   13344:	cmp	r0, #0
   13348:	movw	r0, #0
   1334c:	movne	r0, #1
   13350:	tst	r0, #1
   13354:	movw	r0, #119	; 0x77
   13358:	moveq	r0, #45	; 0x2d
   1335c:	ldr	r1, [fp, #-8]
   13360:	strb	r0, [r1, #8]
   13364:	ldr	r0, [fp, #-4]
   13368:	and	r0, r0, #512	; 0x200
   1336c:	cmp	r0, #0
   13370:	beq	1339c <__assert_fail@plt+0x1fd4>
   13374:	ldr	r0, [fp, #-4]
   13378:	and	r0, r0, #1
   1337c:	cmp	r0, #0
   13380:	movw	r0, #0
   13384:	movne	r0, #1
   13388:	tst	r0, #1
   1338c:	movw	r0, #116	; 0x74
   13390:	moveq	r0, #84	; 0x54
   13394:	str	r0, [sp, #4]
   13398:	b	133c0 <__assert_fail@plt+0x1ff8>
   1339c:	ldr	r0, [fp, #-4]
   133a0:	and	r0, r0, #1
   133a4:	cmp	r0, #0
   133a8:	movw	r0, #0
   133ac:	movne	r0, #1
   133b0:	tst	r0, #1
   133b4:	movw	r0, #120	; 0x78
   133b8:	moveq	r0, #45	; 0x2d
   133bc:	str	r0, [sp, #4]
   133c0:	ldr	r0, [sp, #4]
   133c4:	ldr	r1, [fp, #-8]
   133c8:	strb	r0, [r1, #9]
   133cc:	ldr	r0, [fp, #-8]
   133d0:	movw	r1, #32
   133d4:	strb	r1, [r0, #10]
   133d8:	ldr	r0, [fp, #-8]
   133dc:	movw	r1, #0
   133e0:	strb	r1, [r0, #11]
   133e4:	mov	sp, fp
   133e8:	pop	{fp, pc}
   133ec:	sub	sp, sp, #8
   133f0:	str	r0, [sp]
   133f4:	ldr	r0, [sp]
   133f8:	and	r0, r0, #61440	; 0xf000
   133fc:	cmp	r0, #32768	; 0x8000
   13400:	bne	13410 <__assert_fail@plt+0x2048>
   13404:	movw	r0, #45	; 0x2d
   13408:	strb	r0, [sp, #7]
   1340c:	b	134c0 <__assert_fail@plt+0x20f8>
   13410:	ldr	r0, [sp]
   13414:	and	r0, r0, #61440	; 0xf000
   13418:	cmp	r0, #16384	; 0x4000
   1341c:	bne	1342c <__assert_fail@plt+0x2064>
   13420:	movw	r0, #100	; 0x64
   13424:	strb	r0, [sp, #7]
   13428:	b	134c0 <__assert_fail@plt+0x20f8>
   1342c:	ldr	r0, [sp]
   13430:	and	r0, r0, #61440	; 0xf000
   13434:	cmp	r0, #24576	; 0x6000
   13438:	bne	13448 <__assert_fail@plt+0x2080>
   1343c:	movw	r0, #98	; 0x62
   13440:	strb	r0, [sp, #7]
   13444:	b	134c0 <__assert_fail@plt+0x20f8>
   13448:	ldr	r0, [sp]
   1344c:	and	r0, r0, #61440	; 0xf000
   13450:	cmp	r0, #8192	; 0x2000
   13454:	bne	13464 <__assert_fail@plt+0x209c>
   13458:	movw	r0, #99	; 0x63
   1345c:	strb	r0, [sp, #7]
   13460:	b	134c0 <__assert_fail@plt+0x20f8>
   13464:	ldr	r0, [sp]
   13468:	and	r0, r0, #61440	; 0xf000
   1346c:	cmp	r0, #40960	; 0xa000
   13470:	bne	13480 <__assert_fail@plt+0x20b8>
   13474:	movw	r0, #108	; 0x6c
   13478:	strb	r0, [sp, #7]
   1347c:	b	134c0 <__assert_fail@plt+0x20f8>
   13480:	ldr	r0, [sp]
   13484:	and	r0, r0, #61440	; 0xf000
   13488:	cmp	r0, #4096	; 0x1000
   1348c:	bne	1349c <__assert_fail@plt+0x20d4>
   13490:	movw	r0, #112	; 0x70
   13494:	strb	r0, [sp, #7]
   13498:	b	134c0 <__assert_fail@plt+0x20f8>
   1349c:	ldr	r0, [sp]
   134a0:	and	r0, r0, #61440	; 0xf000
   134a4:	cmp	r0, #49152	; 0xc000
   134a8:	bne	134b8 <__assert_fail@plt+0x20f0>
   134ac:	movw	r0, #115	; 0x73
   134b0:	strb	r0, [sp, #7]
   134b4:	b	134c0 <__assert_fail@plt+0x20f8>
   134b8:	movw	r0, #63	; 0x3f
   134bc:	strb	r0, [sp, #7]
   134c0:	ldrb	r0, [sp, #7]
   134c4:	add	sp, sp, #8
   134c8:	bx	lr
   134cc:	push	{fp, lr}
   134d0:	mov	fp, sp
   134d4:	sub	sp, sp, #8
   134d8:	str	r0, [sp, #4]
   134dc:	str	r1, [sp]
   134e0:	ldr	r0, [sp, #4]
   134e4:	ldr	r0, [r0, #16]
   134e8:	ldr	r1, [sp]
   134ec:	bl	13180 <__assert_fail@plt+0x1db8>
   134f0:	ldr	r0, [sp, #4]
   134f4:	ldr	r0, [r0, #16]
   134f8:	ldr	r1, [sp, #4]
   134fc:	ldr	r1, [r1, #16]
   13500:	sub	r0, r0, r1
   13504:	cmp	r0, #0
   13508:	beq	1351c <__assert_fail@plt+0x2154>
   1350c:	ldr	r0, [sp]
   13510:	movw	r1, #70	; 0x46
   13514:	strb	r1, [r0]
   13518:	b	13580 <__assert_fail@plt+0x21b8>
   1351c:	ldr	r0, [sp, #4]
   13520:	ldr	r0, [r0, #16]
   13524:	ldr	r1, [sp, #4]
   13528:	ldr	r1, [r1, #16]
   1352c:	sub	r0, r0, r1
   13530:	cmp	r0, #0
   13534:	beq	13548 <__assert_fail@plt+0x2180>
   13538:	ldr	r0, [sp]
   1353c:	movw	r1, #81	; 0x51
   13540:	strb	r1, [r0]
   13544:	b	1357c <__assert_fail@plt+0x21b4>
   13548:	ldr	r0, [sp, #4]
   1354c:	ldr	r0, [r0, #16]
   13550:	ldr	r1, [sp, #4]
   13554:	ldr	r1, [r1, #16]
   13558:	sub	r0, r0, r1
   1355c:	cmp	r0, #0
   13560:	beq	13574 <__assert_fail@plt+0x21ac>
   13564:	ldr	r0, [sp]
   13568:	movw	r1, #83	; 0x53
   1356c:	strb	r1, [r0]
   13570:	b	13578 <__assert_fail@plt+0x21b0>
   13574:	b	13578 <__assert_fail@plt+0x21b0>
   13578:	b	1357c <__assert_fail@plt+0x21b4>
   1357c:	b	13580 <__assert_fail@plt+0x21b8>
   13580:	mov	sp, fp
   13584:	pop	{fp, pc}
   13588:	push	{fp, lr}
   1358c:	mov	fp, sp
   13590:	sub	sp, sp, #88	; 0x58
   13594:	ldr	r3, [pc, #1456]	; 13b4c <__assert_fail@plt+0x2784>
   13598:	str	r0, [fp, #-8]
   1359c:	str	r1, [fp, #-12]
   135a0:	str	r2, [fp, #-16]
   135a4:	movw	r0, #0
   135a8:	str	r0, [fp, #-36]	; 0xffffffdc
   135ac:	str	r0, [fp, #-40]	; 0xffffffd8
   135b0:	ldr	r0, [fp, #-12]
   135b4:	and	r0, r0, r3
   135b8:	cmp	r0, #0
   135bc:	beq	135d8 <__assert_fail@plt+0x2210>
   135c0:	bl	11290 <__errno_location@plt>
   135c4:	movw	lr, #22
   135c8:	str	lr, [r0]
   135cc:	movw	r0, #0
   135d0:	str	r0, [fp, #-4]
   135d4:	b	13b40 <__assert_fail@plt+0x2778>
   135d8:	ldr	r0, [fp, #-12]
   135dc:	and	r0, r0, #4
   135e0:	cmp	r0, #0
   135e4:	beq	13610 <__assert_fail@plt+0x2248>
   135e8:	ldr	r0, [fp, #-12]
   135ec:	and	r0, r0, #512	; 0x200
   135f0:	cmp	r0, #0
   135f4:	beq	13610 <__assert_fail@plt+0x2248>
   135f8:	bl	11290 <__errno_location@plt>
   135fc:	movw	lr, #22
   13600:	str	lr, [r0]
   13604:	movw	r0, #0
   13608:	str	r0, [fp, #-4]
   1360c:	b	13b40 <__assert_fail@plt+0x2778>
   13610:	ldr	r0, [fp, #-12]
   13614:	and	r0, r0, #18
   13618:	cmp	r0, #0
   1361c:	bne	13638 <__assert_fail@plt+0x2270>
   13620:	bl	11290 <__errno_location@plt>
   13624:	movw	lr, #22
   13628:	str	lr, [r0]
   1362c:	movw	r0, #0
   13630:	str	r0, [fp, #-4]
   13634:	b	13b40 <__assert_fail@plt+0x2778>
   13638:	movw	r0, #1
   1363c:	movw	r1, #96	; 0x60
   13640:	bl	1fc7c <__assert_fail@plt+0xe8b4>
   13644:	str	r0, [fp, #-20]	; 0xffffffec
   13648:	ldr	r0, [fp, #-20]	; 0xffffffec
   1364c:	movw	r1, #0
   13650:	cmp	r0, r1
   13654:	bne	13664 <__assert_fail@plt+0x229c>
   13658:	movw	r0, #0
   1365c:	str	r0, [fp, #-4]
   13660:	b	13b40 <__assert_fail@plt+0x2778>
   13664:	ldr	r0, [fp, #-16]
   13668:	ldr	r1, [fp, #-20]	; 0xffffffec
   1366c:	str	r0, [r1, #44]	; 0x2c
   13670:	ldr	r0, [fp, #-12]
   13674:	ldr	r1, [fp, #-20]	; 0xffffffec
   13678:	str	r0, [r1, #48]	; 0x30
   1367c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13680:	ldr	r0, [r0, #48]	; 0x30
   13684:	and	r0, r0, #2
   13688:	cmp	r0, #0
   1368c:	beq	136b4 <__assert_fail@plt+0x22ec>
   13690:	ldr	r0, [fp, #-20]	; 0xffffffec
   13694:	ldr	r1, [r0, #48]	; 0x30
   13698:	orr	r1, r1, #4
   1369c:	str	r1, [r0, #48]	; 0x30
   136a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   136a4:	ldr	r1, [r0, #48]	; 0x30
   136a8:	mvn	r2, #512	; 0x200
   136ac:	and	r1, r1, r2
   136b0:	str	r1, [r0, #48]	; 0x30
   136b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   136b8:	mvn	r1, #99	; 0x63
   136bc:	str	r1, [r0, #32]
   136c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   136c4:	ldr	r0, [r0, #48]	; 0x30
   136c8:	and	r0, r0, #512	; 0x200
   136cc:	cmp	r0, #0
   136d0:	beq	1370c <__assert_fail@plt+0x2344>
   136d4:	b	1370c <__assert_fail@plt+0x2344>
   136d8:	ldr	r1, [pc, #1136]	; 13b50 <__assert_fail@plt+0x2788>
   136dc:	movw	r0, #14352	; 0x3810
   136e0:	movt	r0, #2
   136e4:	bl	20950 <__assert_fail@plt+0xf588>
   136e8:	str	r0, [sp, #40]	; 0x28
   136ec:	ldr	r0, [sp, #40]	; 0x28
   136f0:	cmp	r0, #0
   136f4:	bge	136fc <__assert_fail@plt+0x2334>
   136f8:	b	13708 <__assert_fail@plt+0x2340>
   136fc:	ldr	r0, [sp, #40]	; 0x28
   13700:	bl	113a4 <close@plt>
   13704:	str	r0, [sp, #24]
   13708:	b	1370c <__assert_fail@plt+0x2344>
   1370c:	ldr	r0, [fp, #-8]
   13710:	bl	13b54 <__assert_fail@plt+0x278c>
   13714:	str	r0, [sp, #36]	; 0x24
   13718:	ldr	r0, [fp, #-20]	; 0xffffffec
   1371c:	ldr	lr, [sp, #36]	; 0x24
   13720:	cmp	lr, #4096	; 0x1000
   13724:	str	r0, [sp, #20]
   13728:	bls	13738 <__assert_fail@plt+0x2370>
   1372c:	ldr	r0, [sp, #36]	; 0x24
   13730:	str	r0, [sp, #16]
   13734:	b	13744 <__assert_fail@plt+0x237c>
   13738:	movw	r0, #4096	; 0x1000
   1373c:	str	r0, [sp, #16]
   13740:	b	13744 <__assert_fail@plt+0x237c>
   13744:	ldr	r0, [sp, #16]
   13748:	ldr	r1, [sp, #20]
   1374c:	str	r0, [sp, #12]
   13750:	mov	r0, r1
   13754:	ldr	r1, [sp, #12]
   13758:	bl	13bc8 <__assert_fail@plt+0x2800>
   1375c:	tst	r0, #1
   13760:	bne	13768 <__assert_fail@plt+0x23a0>
   13764:	b	13b30 <__assert_fail@plt+0x2768>
   13768:	ldr	r0, [fp, #-8]
   1376c:	ldr	r0, [r0]
   13770:	movw	r1, #0
   13774:	cmp	r0, r1
   13778:	beq	137b0 <__assert_fail@plt+0x23e8>
   1377c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13780:	movw	r1, #11998	; 0x2ede
   13784:	movt	r1, #2
   13788:	movw	r2, #0
   1378c:	bl	13cc0 <__assert_fail@plt+0x28f8>
   13790:	str	r0, [fp, #-36]	; 0xffffffdc
   13794:	movw	r1, #0
   13798:	cmp	r0, r1
   1379c:	bne	137a4 <__assert_fail@plt+0x23dc>
   137a0:	b	13b24 <__assert_fail@plt+0x275c>
   137a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   137a8:	mvn	r1, #0
   137ac:	str	r1, [r0, #48]	; 0x30
   137b0:	ldr	r0, [fp, #-16]
   137b4:	movw	r1, #0
   137b8:	cmp	r0, r1
   137bc:	movw	r0, #1
   137c0:	str	r0, [sp, #8]
   137c4:	beq	137e4 <__assert_fail@plt+0x241c>
   137c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   137cc:	ldr	r0, [r0, #48]	; 0x30
   137d0:	and	r0, r0, #1024	; 0x400
   137d4:	cmp	r0, #0
   137d8:	movw	r0, #0
   137dc:	movne	r0, #1
   137e0:	str	r0, [sp, #8]
   137e4:	ldr	r0, [sp, #8]
   137e8:	and	r0, r0, #1
   137ec:	strb	r0, [fp, #-41]	; 0xffffffd7
   137f0:	movw	r0, #0
   137f4:	str	r0, [fp, #-28]	; 0xffffffe4
   137f8:	str	r0, [fp, #-32]	; 0xffffffe0
   137fc:	ldr	r0, [fp, #-8]
   13800:	ldr	r0, [r0]
   13804:	movw	r1, #0
   13808:	cmp	r0, r1
   1380c:	beq	13a00 <__assert_fail@plt+0x2638>
   13810:	ldr	r0, [fp, #-8]
   13814:	ldr	r0, [r0]
   13818:	bl	11260 <strlen@plt>
   1381c:	str	r0, [sp, #32]
   13820:	ldr	r0, [fp, #-12]
   13824:	and	r0, r0, #2048	; 0x800
   13828:	cmp	r0, #0
   1382c:	bne	138d0 <__assert_fail@plt+0x2508>
   13830:	ldr	r0, [fp, #-8]
   13834:	ldr	r0, [r0]
   13838:	str	r0, [sp, #28]
   1383c:	ldr	r0, [sp, #32]
   13840:	movw	r1, #2
   13844:	cmp	r1, r0
   13848:	bcs	138cc <__assert_fail@plt+0x2504>
   1384c:	ldr	r0, [sp, #28]
   13850:	ldr	r1, [sp, #32]
   13854:	sub	r1, r1, #1
   13858:	add	r0, r0, r1
   1385c:	ldrb	r0, [r0]
   13860:	cmp	r0, #47	; 0x2f
   13864:	bne	138cc <__assert_fail@plt+0x2504>
   13868:	b	1386c <__assert_fail@plt+0x24a4>
   1386c:	ldr	r0, [sp, #32]
   13870:	movw	r1, #1
   13874:	cmp	r1, r0
   13878:	movw	r0, #0
   1387c:	str	r0, [sp, #4]
   13880:	bcs	138a8 <__assert_fail@plt+0x24e0>
   13884:	ldr	r0, [sp, #28]
   13888:	ldr	r1, [sp, #32]
   1388c:	sub	r1, r1, #2
   13890:	add	r0, r0, r1
   13894:	ldrb	r0, [r0]
   13898:	cmp	r0, #47	; 0x2f
   1389c:	movw	r0, #0
   138a0:	moveq	r0, #1
   138a4:	str	r0, [sp, #4]
   138a8:	ldr	r0, [sp, #4]
   138ac:	tst	r0, #1
   138b0:	beq	138c8 <__assert_fail@plt+0x2500>
   138b4:	ldr	r0, [sp, #32]
   138b8:	mvn	r1, #0
   138bc:	add	r0, r0, r1
   138c0:	str	r0, [sp, #32]
   138c4:	b	1386c <__assert_fail@plt+0x24a4>
   138c8:	b	138cc <__assert_fail@plt+0x2504>
   138cc:	b	138d0 <__assert_fail@plt+0x2508>
   138d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   138d4:	ldr	r1, [fp, #-8]
   138d8:	ldr	r1, [r1]
   138dc:	ldr	r2, [sp, #32]
   138e0:	bl	13cc0 <__assert_fail@plt+0x28f8>
   138e4:	str	r0, [fp, #-24]	; 0xffffffe8
   138e8:	movw	r1, #0
   138ec:	cmp	r0, r1
   138f0:	bne	138f8 <__assert_fail@plt+0x2530>
   138f4:	b	13b14 <__assert_fail@plt+0x274c>
   138f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   138fc:	movw	r1, #0
   13900:	str	r1, [r0, #48]	; 0x30
   13904:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13908:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1390c:	str	r0, [r1, #4]
   13910:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13914:	add	r0, r0, #168	; 0xa8
   13918:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1391c:	str	r0, [r1, #24]
   13920:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   13924:	tst	r0, #1
   13928:	beq	1395c <__assert_fail@plt+0x2594>
   1392c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13930:	movw	r1, #0
   13934:	cmp	r0, r1
   13938:	beq	1395c <__assert_fail@plt+0x2594>
   1393c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13940:	movw	r1, #11
   13944:	strh	r1, [r0, #56]	; 0x38
   13948:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1394c:	movw	r1, #1
   13950:	and	r1, r1, #1
   13954:	bl	13db8 <__assert_fail@plt+0x29f0>
   13958:	b	13978 <__assert_fail@plt+0x25b0>
   1395c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13960:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13964:	movw	r2, #0
   13968:	and	r2, r2, #1
   1396c:	bl	13e10 <__assert_fail@plt+0x2a48>
   13970:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13974:	strh	r0, [r1, #56]	; 0x38
   13978:	ldr	r0, [fp, #-16]
   1397c:	movw	r1, #0
   13980:	cmp	r0, r1
   13984:	beq	139a0 <__assert_fail@plt+0x25d8>
   13988:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1398c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13990:	str	r0, [r1, #8]
   13994:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13998:	str	r0, [fp, #-28]	; 0xffffffe4
   1399c:	b	139e0 <__assert_fail@plt+0x2618>
   139a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   139a4:	movw	r1, #0
   139a8:	str	r1, [r0, #8]
   139ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   139b0:	cmp	r0, r1
   139b4:	bne	139c8 <__assert_fail@plt+0x2600>
   139b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   139bc:	str	r0, [fp, #-28]	; 0xffffffe4
   139c0:	str	r0, [fp, #-40]	; 0xffffffd8
   139c4:	b	139dc <__assert_fail@plt+0x2614>
   139c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   139cc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   139d0:	str	r0, [r1, #8]
   139d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   139d8:	str	r0, [fp, #-40]	; 0xffffffd8
   139dc:	b	139e0 <__assert_fail@plt+0x2618>
   139e0:	b	139e4 <__assert_fail@plt+0x261c>
   139e4:	ldr	r0, [fp, #-8]
   139e8:	add	r0, r0, #4
   139ec:	str	r0, [fp, #-8]
   139f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   139f4:	add	r0, r0, #1
   139f8:	str	r0, [fp, #-32]	; 0xffffffe0
   139fc:	b	137fc <__assert_fail@plt+0x2434>
   13a00:	ldr	r0, [fp, #-16]
   13a04:	movw	r1, #0
   13a08:	cmp	r0, r1
   13a0c:	beq	13a30 <__assert_fail@plt+0x2668>
   13a10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13a14:	cmp	r0, #1
   13a18:	bls	13a30 <__assert_fail@plt+0x2668>
   13a1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a20:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13a24:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13a28:	bl	14028 <__assert_fail@plt+0x2c60>
   13a2c:	str	r0, [fp, #-28]	; 0xffffffe4
   13a30:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a34:	movw	r1, #11998	; 0x2ede
   13a38:	movt	r1, #2
   13a3c:	movw	r2, #0
   13a40:	bl	13cc0 <__assert_fail@plt+0x28f8>
   13a44:	ldr	r1, [fp, #-20]	; 0xffffffec
   13a48:	str	r0, [r1]
   13a4c:	movw	r1, #0
   13a50:	cmp	r0, r1
   13a54:	bne	13a5c <__assert_fail@plt+0x2694>
   13a58:	b	13b14 <__assert_fail@plt+0x274c>
   13a5c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13a60:	ldr	r1, [fp, #-20]	; 0xffffffec
   13a64:	ldr	r1, [r1]
   13a68:	str	r0, [r1, #8]
   13a6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a70:	ldr	r0, [r0]
   13a74:	movw	r1, #9
   13a78:	strh	r1, [r0, #56]	; 0x38
   13a7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a80:	ldr	r0, [r0]
   13a84:	movw	r1, #1
   13a88:	str	r1, [r0, #48]	; 0x30
   13a8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a90:	bl	141f0 <__assert_fail@plt+0x2e28>
   13a94:	tst	r0, #1
   13a98:	bne	13aa0 <__assert_fail@plt+0x26d8>
   13a9c:	b	13b14 <__assert_fail@plt+0x274c>
   13aa0:	ldr	r0, [fp, #-20]	; 0xffffffec
   13aa4:	ldr	r0, [r0, #48]	; 0x30
   13aa8:	and	r0, r0, #4
   13aac:	cmp	r0, #0
   13ab0:	bne	13af8 <__assert_fail@plt+0x2730>
   13ab4:	ldr	r0, [fp, #-20]	; 0xffffffec
   13ab8:	ldr	r0, [r0, #48]	; 0x30
   13abc:	and	r0, r0, #512	; 0x200
   13ac0:	cmp	r0, #0
   13ac4:	bne	13af8 <__assert_fail@plt+0x2730>
   13ac8:	ldr	r0, [fp, #-20]	; 0xffffffec
   13acc:	movw	r1, #14352	; 0x3810
   13ad0:	movt	r1, #2
   13ad4:	bl	142cc <__assert_fail@plt+0x2f04>
   13ad8:	ldr	r1, [fp, #-20]	; 0xffffffec
   13adc:	str	r0, [r1, #28]
   13ae0:	cmp	r0, #0
   13ae4:	bge	13af8 <__assert_fail@plt+0x2730>
   13ae8:	ldr	r0, [fp, #-20]	; 0xffffffec
   13aec:	ldr	r1, [r0, #48]	; 0x30
   13af0:	orr	r1, r1, #4
   13af4:	str	r1, [r0, #48]	; 0x30
   13af8:	ldr	r0, [fp, #-20]	; 0xffffffec
   13afc:	add	r0, r0, #60	; 0x3c
   13b00:	mvn	r1, #0
   13b04:	bl	18ca4 <__assert_fail@plt+0x78dc>
   13b08:	ldr	r0, [fp, #-20]	; 0xffffffec
   13b0c:	str	r0, [fp, #-4]
   13b10:	b	13b40 <__assert_fail@plt+0x2778>
   13b14:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13b18:	bl	14368 <__assert_fail@plt+0x2fa0>
   13b1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13b20:	bl	20a84 <__assert_fail@plt+0xf6bc>
   13b24:	ldr	r0, [fp, #-20]	; 0xffffffec
   13b28:	ldr	r0, [r0, #24]
   13b2c:	bl	20a84 <__assert_fail@plt+0xf6bc>
   13b30:	ldr	r0, [fp, #-20]	; 0xffffffec
   13b34:	bl	20a84 <__assert_fail@plt+0xf6bc>
   13b38:	movw	r0, #0
   13b3c:	str	r0, [fp, #-4]
   13b40:	ldr	r0, [fp, #-4]
   13b44:	mov	sp, fp
   13b48:	pop	{fp, pc}
   13b4c:			; <UNDEFINED> instruction: 0xfffff000
   13b50:	andeq	r0, r8, r0
   13b54:	push	{fp, lr}
   13b58:	mov	fp, sp
   13b5c:	sub	sp, sp, #16
   13b60:	str	r0, [fp, #-4]
   13b64:	movw	r0, #0
   13b68:	str	r0, [sp, #4]
   13b6c:	ldr	r0, [fp, #-4]
   13b70:	ldr	r0, [r0]
   13b74:	movw	r1, #0
   13b78:	cmp	r0, r1
   13b7c:	beq	13bb8 <__assert_fail@plt+0x27f0>
   13b80:	ldr	r0, [fp, #-4]
   13b84:	ldr	r0, [r0]
   13b88:	bl	11260 <strlen@plt>
   13b8c:	str	r0, [sp, #8]
   13b90:	ldr	lr, [sp, #4]
   13b94:	cmp	r0, lr
   13b98:	bls	13ba4 <__assert_fail@plt+0x27dc>
   13b9c:	ldr	r0, [sp, #8]
   13ba0:	str	r0, [sp, #4]
   13ba4:	b	13ba8 <__assert_fail@plt+0x27e0>
   13ba8:	ldr	r0, [fp, #-4]
   13bac:	add	r0, r0, #4
   13bb0:	str	r0, [fp, #-4]
   13bb4:	b	13b6c <__assert_fail@plt+0x27a4>
   13bb8:	ldr	r0, [sp, #4]
   13bbc:	add	r0, r0, #1
   13bc0:	mov	sp, fp
   13bc4:	pop	{fp, pc}
   13bc8:	push	{fp, lr}
   13bcc:	mov	fp, sp
   13bd0:	sub	sp, sp, #24
   13bd4:	str	r0, [fp, #-8]
   13bd8:	str	r1, [sp, #12]
   13bdc:	ldr	r0, [fp, #-8]
   13be0:	ldr	r0, [r0, #36]	; 0x24
   13be4:	ldr	r1, [sp, #12]
   13be8:	add	r0, r0, r1
   13bec:	add	r0, r0, #256	; 0x100
   13bf0:	str	r0, [sp, #4]
   13bf4:	ldr	r0, [sp, #4]
   13bf8:	ldr	r1, [fp, #-8]
   13bfc:	ldr	r1, [r1, #36]	; 0x24
   13c00:	cmp	r0, r1
   13c04:	bcs	13c3c <__assert_fail@plt+0x2874>
   13c08:	ldr	r0, [fp, #-8]
   13c0c:	ldr	r0, [r0, #24]
   13c10:	bl	20a84 <__assert_fail@plt+0xf6bc>
   13c14:	ldr	r0, [fp, #-8]
   13c18:	movw	lr, #0
   13c1c:	str	lr, [r0, #24]
   13c20:	bl	11290 <__errno_location@plt>
   13c24:	movw	lr, #36	; 0x24
   13c28:	str	lr, [r0]
   13c2c:	movw	r0, #0
   13c30:	and	r0, r0, #1
   13c34:	strb	r0, [fp, #-1]
   13c38:	b	13cb0 <__assert_fail@plt+0x28e8>
   13c3c:	ldr	r0, [sp, #4]
   13c40:	ldr	r1, [fp, #-8]
   13c44:	str	r0, [r1, #36]	; 0x24
   13c48:	ldr	r0, [fp, #-8]
   13c4c:	ldr	r0, [r0, #24]
   13c50:	ldr	r1, [fp, #-8]
   13c54:	ldr	r1, [r1, #36]	; 0x24
   13c58:	bl	1fd88 <__assert_fail@plt+0xe9c0>
   13c5c:	str	r0, [sp, #8]
   13c60:	ldr	r0, [sp, #8]
   13c64:	movw	r1, #0
   13c68:	cmp	r0, r1
   13c6c:	bne	13c98 <__assert_fail@plt+0x28d0>
   13c70:	ldr	r0, [fp, #-8]
   13c74:	ldr	r0, [r0, #24]
   13c78:	bl	20a84 <__assert_fail@plt+0xf6bc>
   13c7c:	ldr	r0, [fp, #-8]
   13c80:	movw	lr, #0
   13c84:	str	lr, [r0, #24]
   13c88:	movw	r0, #0
   13c8c:	and	r0, r0, #1
   13c90:	strb	r0, [fp, #-1]
   13c94:	b	13cb0 <__assert_fail@plt+0x28e8>
   13c98:	ldr	r0, [sp, #8]
   13c9c:	ldr	r1, [fp, #-8]
   13ca0:	str	r0, [r1, #24]
   13ca4:	movw	r0, #1
   13ca8:	and	r0, r0, #1
   13cac:	strb	r0, [fp, #-1]
   13cb0:	ldrb	r0, [fp, #-1]
   13cb4:	and	r0, r0, #1
   13cb8:	mov	sp, fp
   13cbc:	pop	{fp, pc}
   13cc0:	push	{fp, lr}
   13cc4:	mov	fp, sp
   13cc8:	sub	sp, sp, #24
   13ccc:	str	r0, [fp, #-8]
   13cd0:	str	r1, [sp, #12]
   13cd4:	str	r2, [sp, #8]
   13cd8:	ldr	r0, [sp, #8]
   13cdc:	add	r0, r0, #1
   13ce0:	add	r0, r0, #175	; 0xaf
   13ce4:	mvn	r1, #7
   13ce8:	and	r0, r0, r1
   13cec:	str	r0, [sp]
   13cf0:	ldr	r0, [sp]
   13cf4:	bl	1fd18 <__assert_fail@plt+0xe950>
   13cf8:	str	r0, [sp, #4]
   13cfc:	movw	r1, #0
   13d00:	cmp	r0, r1
   13d04:	bne	13d14 <__assert_fail@plt+0x294c>
   13d08:	movw	r0, #0
   13d0c:	str	r0, [fp, #-4]
   13d10:	b	13dac <__assert_fail@plt+0x29e4>
   13d14:	ldr	r0, [sp, #4]
   13d18:	add	r0, r0, #168	; 0xa8
   13d1c:	ldr	r1, [sp, #12]
   13d20:	ldr	r2, [sp, #8]
   13d24:	bl	1114c <memcpy@plt>
   13d28:	ldr	r0, [sp, #4]
   13d2c:	add	r0, r0, #168	; 0xa8
   13d30:	ldr	r1, [sp, #8]
   13d34:	add	r0, r0, r1
   13d38:	movw	r1, #0
   13d3c:	strb	r1, [r0]
   13d40:	ldr	r0, [sp, #8]
   13d44:	ldr	r1, [sp, #4]
   13d48:	str	r0, [r1, #52]	; 0x34
   13d4c:	ldr	r0, [fp, #-8]
   13d50:	ldr	r1, [sp, #4]
   13d54:	str	r0, [r1, #44]	; 0x2c
   13d58:	ldr	r0, [fp, #-8]
   13d5c:	ldr	r0, [r0, #24]
   13d60:	ldr	r1, [sp, #4]
   13d64:	str	r0, [r1, #28]
   13d68:	ldr	r0, [sp, #4]
   13d6c:	movw	r1, #0
   13d70:	str	r1, [r0, #32]
   13d74:	ldr	r0, [sp, #4]
   13d78:	str	r1, [r0, #12]
   13d7c:	ldr	r0, [sp, #4]
   13d80:	movw	r2, #0
   13d84:	strh	r2, [r0, #58]	; 0x3a
   13d88:	ldr	r0, [sp, #4]
   13d8c:	movw	r2, #3
   13d90:	strh	r2, [r0, #60]	; 0x3c
   13d94:	ldr	r0, [sp, #4]
   13d98:	str	r1, [r0, #16]
   13d9c:	ldr	r0, [sp, #4]
   13da0:	str	r1, [r0, #20]
   13da4:	ldr	r0, [sp, #4]
   13da8:	str	r0, [fp, #-4]
   13dac:	ldr	r0, [fp, #-4]
   13db0:	mov	sp, fp
   13db4:	pop	{fp, pc}
   13db8:	push	{fp, lr}
   13dbc:	mov	fp, sp
   13dc0:	sub	sp, sp, #8
   13dc4:	str	r0, [sp, #4]
   13dc8:	and	r0, r1, #1
   13dcc:	strb	r0, [sp, #3]
   13dd0:	ldr	r0, [sp, #4]
   13dd4:	ldrh	r0, [r0, #56]	; 0x38
   13dd8:	cmp	r0, #11
   13ddc:	beq	13de4 <__assert_fail@plt+0x2a1c>
   13de0:	bl	11398 <abort@plt>
   13de4:	b	13de8 <__assert_fail@plt+0x2a20>
   13de8:	ldrb	r0, [sp, #3]
   13dec:	mov	r1, #1
   13df0:	tst	r0, #1
   13df4:	movwne	r1, #2
   13df8:	ldr	r0, [sp, #4]
   13dfc:	mov	r2, #0
   13e00:	str	r2, [r0, #116]	; 0x74
   13e04:	str	r1, [r0, #112]	; 0x70
   13e08:	mov	sp, fp
   13e0c:	pop	{fp, pc}
   13e10:	push	{fp, lr}
   13e14:	mov	fp, sp
   13e18:	sub	sp, sp, #24
   13e1c:	str	r0, [fp, #-8]
   13e20:	str	r1, [sp, #12]
   13e24:	and	r0, r2, #1
   13e28:	strb	r0, [sp, #11]
   13e2c:	ldr	r0, [sp, #12]
   13e30:	add	r0, r0, #64	; 0x40
   13e34:	str	r0, [sp, #4]
   13e38:	ldr	r0, [sp, #12]
   13e3c:	ldr	r0, [r0, #48]	; 0x30
   13e40:	cmp	r0, #0
   13e44:	bne	13e64 <__assert_fail@plt+0x2a9c>
   13e48:	ldr	r0, [fp, #-8]
   13e4c:	ldr	r0, [r0, #48]	; 0x30
   13e50:	and	r0, r0, #1
   13e54:	cmp	r0, #0
   13e58:	beq	13e64 <__assert_fail@plt+0x2a9c>
   13e5c:	movw	r0, #1
   13e60:	strb	r0, [sp, #11]
   13e64:	ldr	r0, [fp, #-8]
   13e68:	ldr	r0, [r0, #48]	; 0x30
   13e6c:	and	r0, r0, #2
   13e70:	cmp	r0, #0
   13e74:	bne	13e84 <__assert_fail@plt+0x2abc>
   13e78:	ldrb	r0, [sp, #11]
   13e7c:	tst	r0, #1
   13e80:	beq	13ef4 <__assert_fail@plt+0x2b2c>
   13e84:	ldr	r0, [sp, #12]
   13e88:	ldr	r0, [r0, #24]
   13e8c:	ldr	r1, [sp, #4]
   13e90:	bl	22d64 <__assert_fail@plt+0x1199c>
   13e94:	cmp	r0, #0
   13e98:	beq	13ef0 <__assert_fail@plt+0x2b28>
   13e9c:	bl	11290 <__errno_location@plt>
   13ea0:	ldr	r0, [r0]
   13ea4:	cmp	r0, #2
   13ea8:	bne	13edc <__assert_fail@plt+0x2b14>
   13eac:	ldr	r0, [sp, #12]
   13eb0:	ldr	r0, [r0, #24]
   13eb4:	ldr	r1, [sp, #4]
   13eb8:	bl	22d84 <__assert_fail@plt+0x119bc>
   13ebc:	cmp	r0, #0
   13ec0:	bne	13edc <__assert_fail@plt+0x2b14>
   13ec4:	bl	11290 <__errno_location@plt>
   13ec8:	movw	lr, #0
   13ecc:	str	lr, [r0]
   13ed0:	movw	r0, #13
   13ed4:	strh	r0, [fp, #-2]
   13ed8:	b	1401c <__assert_fail@plt+0x2c54>
   13edc:	bl	11290 <__errno_location@plt>
   13ee0:	ldr	r0, [r0]
   13ee4:	ldr	lr, [sp, #12]
   13ee8:	str	r0, [lr, #32]
   13eec:	b	13f28 <__assert_fail@plt+0x2b60>
   13ef0:	b	13f4c <__assert_fail@plt+0x2b84>
   13ef4:	ldr	r0, [fp, #-8]
   13ef8:	ldr	r0, [r0, #32]
   13efc:	ldr	r1, [sp, #12]
   13f00:	ldr	r1, [r1, #24]
   13f04:	ldr	r2, [sp, #4]
   13f08:	movw	r3, #256	; 0x100
   13f0c:	bl	22d94 <__assert_fail@plt+0x119cc>
   13f10:	cmp	r0, #0
   13f14:	beq	13f48 <__assert_fail@plt+0x2b80>
   13f18:	bl	11290 <__errno_location@plt>
   13f1c:	ldr	r0, [r0]
   13f20:	ldr	lr, [sp, #12]
   13f24:	str	r0, [lr, #32]
   13f28:	ldr	r0, [sp, #4]
   13f2c:	movw	r1, #0
   13f30:	and	r1, r1, #255	; 0xff
   13f34:	movw	r2, #104	; 0x68
   13f38:	bl	112a8 <memset@plt>
   13f3c:	movw	r0, #10
   13f40:	strh	r0, [fp, #-2]
   13f44:	b	1401c <__assert_fail@plt+0x2c54>
   13f48:	b	13f4c <__assert_fail@plt+0x2b84>
   13f4c:	ldr	r0, [sp, #4]
   13f50:	ldr	r0, [r0, #16]
   13f54:	and	r0, r0, #61440	; 0xf000
   13f58:	cmp	r0, #16384	; 0x4000
   13f5c:	bne	13fd4 <__assert_fail@plt+0x2c0c>
   13f60:	ldr	r0, [sp, #12]
   13f64:	ldrb	r0, [r0, #168]	; 0xa8
   13f68:	cmp	r0, #46	; 0x2e
   13f6c:	bne	13fc8 <__assert_fail@plt+0x2c00>
   13f70:	ldr	r0, [sp, #12]
   13f74:	ldrsb	r0, [r0, #169]	; 0xa9
   13f78:	cmp	r0, #0
   13f7c:	beq	13fa0 <__assert_fail@plt+0x2bd8>
   13f80:	ldr	r0, [sp, #12]
   13f84:	ldrb	r0, [r0, #169]	; 0xa9
   13f88:	cmp	r0, #46	; 0x2e
   13f8c:	bne	13fc8 <__assert_fail@plt+0x2c00>
   13f90:	ldr	r0, [sp, #12]
   13f94:	ldrsb	r0, [r0, #170]	; 0xaa
   13f98:	cmp	r0, #0
   13f9c:	bne	13fc8 <__assert_fail@plt+0x2c00>
   13fa0:	ldr	r0, [sp, #12]
   13fa4:	ldr	r0, [r0, #48]	; 0x30
   13fa8:	cmp	r0, #0
   13fac:	movw	r0, #0
   13fb0:	moveq	r0, #1
   13fb4:	tst	r0, #1
   13fb8:	movw	r0, #1
   13fbc:	moveq	r0, #5
   13fc0:	strh	r0, [fp, #-2]
   13fc4:	b	1401c <__assert_fail@plt+0x2c54>
   13fc8:	movw	r0, #1
   13fcc:	strh	r0, [fp, #-2]
   13fd0:	b	1401c <__assert_fail@plt+0x2c54>
   13fd4:	ldr	r0, [sp, #4]
   13fd8:	ldr	r0, [r0, #16]
   13fdc:	and	r0, r0, #61440	; 0xf000
   13fe0:	cmp	r0, #40960	; 0xa000
   13fe4:	bne	13ff4 <__assert_fail@plt+0x2c2c>
   13fe8:	movw	r0, #12
   13fec:	strh	r0, [fp, #-2]
   13ff0:	b	1401c <__assert_fail@plt+0x2c54>
   13ff4:	ldr	r0, [sp, #4]
   13ff8:	ldr	r0, [r0, #16]
   13ffc:	and	r0, r0, #61440	; 0xf000
   14000:	cmp	r0, #32768	; 0x8000
   14004:	bne	14014 <__assert_fail@plt+0x2c4c>
   14008:	movw	r0, #8
   1400c:	strh	r0, [fp, #-2]
   14010:	b	1401c <__assert_fail@plt+0x2c54>
   14014:	movw	r0, #3
   14018:	strh	r0, [fp, #-2]
   1401c:	ldrh	r0, [fp, #-2]
   14020:	mov	sp, fp
   14024:	pop	{fp, pc}
   14028:	push	{fp, lr}
   1402c:	mov	fp, sp
   14030:	sub	sp, sp, #48	; 0x30
   14034:	add	r3, sp, #20
   14038:	str	r0, [fp, #-8]
   1403c:	str	r1, [fp, #-12]
   14040:	str	r2, [fp, #-16]
   14044:	mov	r0, r3
   14048:	cmp	r3, r0
   1404c:	bne	14060 <__assert_fail@plt+0x2c98>
   14050:	ldr	r0, [fp, #-8]
   14054:	ldr	r0, [r0, #44]	; 0x2c
   14058:	str	r0, [sp, #8]
   1405c:	b	14070 <__assert_fail@plt+0x2ca8>
   14060:	movw	r0, #28636	; 0x6fdc
   14064:	movt	r0, #1
   14068:	str	r0, [sp, #8]
   1406c:	b	14070 <__assert_fail@plt+0x2ca8>
   14070:	ldr	r0, [sp, #8]
   14074:	str	r0, [sp, #16]
   14078:	ldr	r0, [fp, #-16]
   1407c:	ldr	r1, [fp, #-8]
   14080:	ldr	r1, [r1, #40]	; 0x28
   14084:	cmp	r0, r1
   14088:	bls	14118 <__assert_fail@plt+0x2d50>
   1408c:	ldr	r0, [pc, #344]	; 141ec <__assert_fail@plt+0x2e24>
   14090:	ldr	r1, [fp, #-16]
   14094:	add	r1, r1, #40	; 0x28
   14098:	ldr	r2, [fp, #-8]
   1409c:	str	r1, [r2, #40]	; 0x28
   140a0:	ldr	r1, [fp, #-8]
   140a4:	ldr	r1, [r1, #40]	; 0x28
   140a8:	cmp	r0, r1
   140ac:	bcc	140e0 <__assert_fail@plt+0x2d18>
   140b0:	ldr	r0, [fp, #-8]
   140b4:	ldr	r1, [r0, #8]
   140b8:	ldr	r0, [r0, #40]	; 0x28
   140bc:	lsl	r0, r0, #2
   140c0:	str	r0, [sp, #4]
   140c4:	mov	r0, r1
   140c8:	ldr	r1, [sp, #4]
   140cc:	bl	1fd88 <__assert_fail@plt+0xe9c0>
   140d0:	str	r0, [sp, #12]
   140d4:	movw	r1, #0
   140d8:	cmp	r0, r1
   140dc:	bne	1410c <__assert_fail@plt+0x2d44>
   140e0:	ldr	r0, [fp, #-8]
   140e4:	ldr	r0, [r0, #8]
   140e8:	bl	20a84 <__assert_fail@plt+0xf6bc>
   140ec:	ldr	r0, [fp, #-8]
   140f0:	movw	lr, #0
   140f4:	str	lr, [r0, #8]
   140f8:	ldr	r0, [fp, #-8]
   140fc:	str	lr, [r0, #40]	; 0x28
   14100:	ldr	r0, [fp, #-12]
   14104:	str	r0, [fp, #-4]
   14108:	b	141e0 <__assert_fail@plt+0x2e18>
   1410c:	ldr	r0, [sp, #12]
   14110:	ldr	r1, [fp, #-8]
   14114:	str	r0, [r1, #8]
   14118:	ldr	r0, [fp, #-8]
   1411c:	ldr	r0, [r0, #8]
   14120:	str	r0, [fp, #-20]	; 0xffffffec
   14124:	ldr	r0, [fp, #-12]
   14128:	str	r0, [sp, #24]
   1412c:	ldr	r0, [sp, #24]
   14130:	movw	r1, #0
   14134:	cmp	r0, r1
   14138:	beq	14160 <__assert_fail@plt+0x2d98>
   1413c:	ldr	r0, [sp, #24]
   14140:	ldr	r1, [fp, #-20]	; 0xffffffec
   14144:	add	r2, r1, #4
   14148:	str	r2, [fp, #-20]	; 0xffffffec
   1414c:	str	r0, [r1]
   14150:	ldr	r0, [sp, #24]
   14154:	ldr	r0, [r0, #8]
   14158:	str	r0, [sp, #24]
   1415c:	b	1412c <__assert_fail@plt+0x2d64>
   14160:	ldr	r0, [fp, #-8]
   14164:	ldr	r0, [r0, #8]
   14168:	ldr	r1, [fp, #-16]
   1416c:	ldr	r3, [sp, #16]
   14170:	movw	r2, #4
   14174:	bl	11344 <qsort@plt>
   14178:	ldr	r0, [fp, #-8]
   1417c:	ldr	r0, [r0, #8]
   14180:	str	r0, [fp, #-20]	; 0xffffffec
   14184:	ldr	r0, [r0]
   14188:	str	r0, [fp, #-12]
   1418c:	ldr	r0, [fp, #-16]
   14190:	mvn	r1, #0
   14194:	add	r0, r0, r1
   14198:	str	r0, [fp, #-16]
   1419c:	cmp	r0, #0
   141a0:	beq	141c8 <__assert_fail@plt+0x2e00>
   141a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   141a8:	ldr	r0, [r0, #4]
   141ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   141b0:	ldr	r1, [r1]
   141b4:	str	r0, [r1, #8]
   141b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   141bc:	add	r0, r0, #4
   141c0:	str	r0, [fp, #-20]	; 0xffffffec
   141c4:	b	1418c <__assert_fail@plt+0x2dc4>
   141c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   141cc:	ldr	r0, [r0]
   141d0:	movw	r1, #0
   141d4:	str	r1, [r0, #8]
   141d8:	ldr	r0, [fp, #-12]
   141dc:	str	r0, [fp, #-4]
   141e0:	ldr	r0, [fp, #-4]
   141e4:	mov	sp, fp
   141e8:	pop	{fp, pc}
   141ec:	svccc	0x00ffffff
   141f0:	push	{fp, lr}
   141f4:	mov	fp, sp
   141f8:	sub	sp, sp, #16
   141fc:	str	r0, [sp, #8]
   14200:	ldr	r0, [sp, #8]
   14204:	ldr	r0, [r0, #48]	; 0x30
   14208:	movw	r1, #258	; 0x102
   1420c:	and	r0, r0, r1
   14210:	cmp	r0, #0
   14214:	beq	14270 <__assert_fail@plt+0x2ea8>
   14218:	movw	r0, #31
   1421c:	movw	r1, #0
   14220:	movw	r2, #26796	; 0x68ac
   14224:	movt	r2, #1
   14228:	movw	r3, #26880	; 0x6900
   1422c:	movt	r3, #1
   14230:	movw	ip, #2692	; 0xa84
   14234:	movt	ip, #2
   14238:	str	ip, [sp]
   1423c:	bl	17844 <__assert_fail@plt+0x647c>
   14240:	ldr	r1, [sp, #8]
   14244:	str	r0, [r1, #56]	; 0x38
   14248:	ldr	r0, [sp, #8]
   1424c:	ldr	r0, [r0, #56]	; 0x38
   14250:	movw	r1, #0
   14254:	cmp	r0, r1
   14258:	bne	1426c <__assert_fail@plt+0x2ea4>
   1425c:	movw	r0, #0
   14260:	and	r0, r0, #1
   14264:	strb	r0, [fp, #-1]
   14268:	b	142bc <__assert_fail@plt+0x2ef4>
   1426c:	b	142b0 <__assert_fail@plt+0x2ee8>
   14270:	movw	r0, #32
   14274:	bl	1fd18 <__assert_fail@plt+0xe950>
   14278:	ldr	lr, [sp, #8]
   1427c:	str	r0, [lr, #56]	; 0x38
   14280:	ldr	r0, [sp, #8]
   14284:	ldr	r0, [r0, #56]	; 0x38
   14288:	movw	lr, #0
   1428c:	cmp	r0, lr
   14290:	bne	142a4 <__assert_fail@plt+0x2edc>
   14294:	movw	r0, #0
   14298:	and	r0, r0, #1
   1429c:	strb	r0, [fp, #-1]
   142a0:	b	142bc <__assert_fail@plt+0x2ef4>
   142a4:	ldr	r0, [sp, #8]
   142a8:	ldr	r0, [r0, #56]	; 0x38
   142ac:	bl	20294 <__assert_fail@plt+0xeecc>
   142b0:	movw	r0, #1
   142b4:	and	r0, r0, #1
   142b8:	strb	r0, [fp, #-1]
   142bc:	ldrb	r0, [fp, #-1]
   142c0:	and	r0, r0, #1
   142c4:	mov	sp, fp
   142c8:	pop	{fp, pc}
   142cc:	push	{fp, lr}
   142d0:	mov	fp, sp
   142d4:	sub	sp, sp, #24
   142d8:	ldr	r2, [pc, #132]	; 14364 <__assert_fail@plt+0x2f9c>
   142dc:	str	r0, [fp, #-4]
   142e0:	str	r1, [fp, #-8]
   142e4:	ldr	r0, [fp, #-4]
   142e8:	ldr	r0, [r0, #48]	; 0x30
   142ec:	and	r0, r0, #16
   142f0:	cmp	r0, #0
   142f4:	movw	r0, #0
   142f8:	movne	r0, #1
   142fc:	tst	r0, #1
   14300:	movw	r0, #32768	; 0x8000
   14304:	moveq	r0, #0
   14308:	orr	r0, r0, r2
   1430c:	str	r0, [sp, #12]
   14310:	ldr	r0, [fp, #-4]
   14314:	ldr	r0, [r0, #48]	; 0x30
   14318:	and	r0, r0, #512	; 0x200
   1431c:	cmp	r0, #0
   14320:	beq	14340 <__assert_fail@plt+0x2f78>
   14324:	ldr	r0, [fp, #-4]
   14328:	ldr	r0, [r0, #32]
   1432c:	ldr	r1, [fp, #-8]
   14330:	ldr	r2, [sp, #12]
   14334:	bl	19a48 <__assert_fail@plt+0x8680>
   14338:	str	r0, [sp, #4]
   1433c:	b	14350 <__assert_fail@plt+0x2f88>
   14340:	ldr	r0, [fp, #-8]
   14344:	ldr	r1, [sp, #12]
   14348:	bl	20950 <__assert_fail@plt+0xf588>
   1434c:	str	r0, [sp, #4]
   14350:	ldr	r0, [sp, #4]
   14354:	str	r0, [sp, #8]
   14358:	ldr	r0, [sp, #8]
   1435c:	mov	sp, fp
   14360:	pop	{fp, pc}
   14364:	andeq	r4, r8, r0, lsl #18
   14368:	push	{fp, lr}
   1436c:	mov	fp, sp
   14370:	sub	sp, sp, #16
   14374:	str	r0, [fp, #-4]
   14378:	ldr	r0, [fp, #-4]
   1437c:	str	r0, [sp, #8]
   14380:	movw	r1, #0
   14384:	cmp	r0, r1
   14388:	beq	143c8 <__assert_fail@plt+0x3000>
   1438c:	ldr	r0, [fp, #-4]
   14390:	ldr	r0, [r0, #8]
   14394:	str	r0, [fp, #-4]
   14398:	ldr	r0, [sp, #8]
   1439c:	ldr	r0, [r0, #12]
   143a0:	movw	r1, #0
   143a4:	cmp	r0, r1
   143a8:	beq	143bc <__assert_fail@plt+0x2ff4>
   143ac:	ldr	r0, [sp, #8]
   143b0:	ldr	r0, [r0, #12]
   143b4:	bl	113bc <closedir@plt>
   143b8:	str	r0, [sp, #4]
   143bc:	ldr	r0, [sp, #8]
   143c0:	bl	20a84 <__assert_fail@plt+0xf6bc>
   143c4:	b	14378 <__assert_fail@plt+0x2fb0>
   143c8:	mov	sp, fp
   143cc:	pop	{fp, pc}
   143d0:	push	{fp, lr}
   143d4:	mov	fp, sp
   143d8:	sub	sp, sp, #32
   143dc:	str	r0, [fp, #-8]
   143e0:	movw	r0, #0
   143e4:	str	r0, [sp, #12]
   143e8:	ldr	r1, [fp, #-8]
   143ec:	ldr	r1, [r1]
   143f0:	cmp	r1, r0
   143f4:	beq	14468 <__assert_fail@plt+0x30a0>
   143f8:	ldr	r0, [fp, #-8]
   143fc:	ldr	r0, [r0]
   14400:	str	r0, [sp, #16]
   14404:	ldr	r0, [sp, #16]
   14408:	ldr	r0, [r0, #48]	; 0x30
   1440c:	cmp	r0, #0
   14410:	blt	14460 <__assert_fail@plt+0x3098>
   14414:	ldr	r0, [sp, #16]
   14418:	str	r0, [fp, #-12]
   1441c:	ldr	r0, [sp, #16]
   14420:	ldr	r0, [r0, #8]
   14424:	movw	r1, #0
   14428:	cmp	r0, r1
   1442c:	beq	14440 <__assert_fail@plt+0x3078>
   14430:	ldr	r0, [sp, #16]
   14434:	ldr	r0, [r0, #8]
   14438:	str	r0, [sp, #8]
   1443c:	b	1444c <__assert_fail@plt+0x3084>
   14440:	ldr	r0, [sp, #16]
   14444:	ldr	r0, [r0, #4]
   14448:	str	r0, [sp, #8]
   1444c:	ldr	r0, [sp, #8]
   14450:	str	r0, [sp, #16]
   14454:	ldr	r0, [fp, #-12]
   14458:	bl	20a84 <__assert_fail@plt+0xf6bc>
   1445c:	b	14404 <__assert_fail@plt+0x303c>
   14460:	ldr	r0, [sp, #16]
   14464:	bl	20a84 <__assert_fail@plt+0xf6bc>
   14468:	ldr	r0, [fp, #-8]
   1446c:	ldr	r0, [r0, #4]
   14470:	movw	r1, #0
   14474:	cmp	r0, r1
   14478:	beq	14488 <__assert_fail@plt+0x30c0>
   1447c:	ldr	r0, [fp, #-8]
   14480:	ldr	r0, [r0, #4]
   14484:	bl	14368 <__assert_fail@plt+0x2fa0>
   14488:	ldr	r0, [fp, #-8]
   1448c:	ldr	r0, [r0, #8]
   14490:	bl	20a84 <__assert_fail@plt+0xf6bc>
   14494:	ldr	r0, [fp, #-8]
   14498:	ldr	r0, [r0, #24]
   1449c:	bl	20a84 <__assert_fail@plt+0xf6bc>
   144a0:	ldr	r0, [fp, #-8]
   144a4:	ldr	r0, [r0, #48]	; 0x30
   144a8:	and	r0, r0, #512	; 0x200
   144ac:	cmp	r0, #0
   144b0:	beq	144f0 <__assert_fail@plt+0x3128>
   144b4:	ldr	r0, [fp, #-8]
   144b8:	ldr	r0, [r0, #32]
   144bc:	movw	r1, #0
   144c0:	cmp	r1, r0
   144c4:	bgt	144ec <__assert_fail@plt+0x3124>
   144c8:	ldr	r0, [fp, #-8]
   144cc:	ldr	r0, [r0, #32]
   144d0:	bl	113a4 <close@plt>
   144d4:	cmp	r0, #0
   144d8:	beq	144e8 <__assert_fail@plt+0x3120>
   144dc:	bl	11290 <__errno_location@plt>
   144e0:	ldr	r0, [r0]
   144e4:	str	r0, [sp, #12]
   144e8:	b	144ec <__assert_fail@plt+0x3124>
   144ec:	b	1455c <__assert_fail@plt+0x3194>
   144f0:	ldr	r0, [fp, #-8]
   144f4:	ldr	r0, [r0, #48]	; 0x30
   144f8:	and	r0, r0, #4
   144fc:	cmp	r0, #0
   14500:	bne	14558 <__assert_fail@plt+0x3190>
   14504:	ldr	r0, [fp, #-8]
   14508:	ldr	r0, [r0, #28]
   1450c:	bl	11338 <fchdir@plt>
   14510:	cmp	r0, #0
   14514:	beq	14524 <__assert_fail@plt+0x315c>
   14518:	bl	11290 <__errno_location@plt>
   1451c:	ldr	r0, [r0]
   14520:	str	r0, [sp, #12]
   14524:	ldr	r0, [fp, #-8]
   14528:	ldr	r0, [r0, #28]
   1452c:	bl	113a4 <close@plt>
   14530:	cmp	r0, #0
   14534:	beq	14554 <__assert_fail@plt+0x318c>
   14538:	ldr	r0, [sp, #12]
   1453c:	cmp	r0, #0
   14540:	bne	14550 <__assert_fail@plt+0x3188>
   14544:	bl	11290 <__errno_location@plt>
   14548:	ldr	r0, [r0]
   1454c:	str	r0, [sp, #12]
   14550:	b	14554 <__assert_fail@plt+0x318c>
   14554:	b	14558 <__assert_fail@plt+0x3190>
   14558:	b	1455c <__assert_fail@plt+0x3194>
   1455c:	ldr	r0, [fp, #-8]
   14560:	add	r0, r0, #60	; 0x3c
   14564:	bl	145d8 <__assert_fail@plt+0x3210>
   14568:	ldr	r0, [fp, #-8]
   1456c:	ldr	r0, [r0, #52]	; 0x34
   14570:	movw	lr, #0
   14574:	cmp	r0, lr
   14578:	beq	14588 <__assert_fail@plt+0x31c0>
   1457c:	ldr	r0, [fp, #-8]
   14580:	ldr	r0, [r0, #52]	; 0x34
   14584:	bl	17d98 <__assert_fail@plt+0x69d0>
   14588:	ldr	r0, [fp, #-8]
   1458c:	bl	14634 <__assert_fail@plt+0x326c>
   14590:	ldr	r0, [fp, #-8]
   14594:	bl	20a84 <__assert_fail@plt+0xf6bc>
   14598:	ldr	r0, [sp, #12]
   1459c:	cmp	r0, #0
   145a0:	beq	145c4 <__assert_fail@plt+0x31fc>
   145a4:	ldr	r0, [sp, #12]
   145a8:	str	r0, [sp, #4]
   145ac:	bl	11290 <__errno_location@plt>
   145b0:	ldr	lr, [sp, #4]
   145b4:	str	lr, [r0]
   145b8:	mvn	r0, #0
   145bc:	str	r0, [fp, #-4]
   145c0:	b	145cc <__assert_fail@plt+0x3204>
   145c4:	movw	r0, #0
   145c8:	str	r0, [fp, #-4]
   145cc:	ldr	r0, [fp, #-4]
   145d0:	mov	sp, fp
   145d4:	pop	{fp, pc}
   145d8:	push	{fp, lr}
   145dc:	mov	fp, sp
   145e0:	sub	sp, sp, #16
   145e4:	str	r0, [fp, #-4]
   145e8:	ldr	r0, [fp, #-4]
   145ec:	bl	18d18 <__assert_fail@plt+0x7950>
   145f0:	mvn	lr, #0
   145f4:	eor	r0, r0, lr
   145f8:	tst	r0, #1
   145fc:	beq	1462c <__assert_fail@plt+0x3264>
   14600:	ldr	r0, [fp, #-4]
   14604:	bl	18de8 <__assert_fail@plt+0x7a20>
   14608:	str	r0, [sp, #8]
   1460c:	ldr	r0, [sp, #8]
   14610:	movw	lr, #0
   14614:	cmp	lr, r0
   14618:	bgt	14628 <__assert_fail@plt+0x3260>
   1461c:	ldr	r0, [sp, #8]
   14620:	bl	113a4 <close@plt>
   14624:	str	r0, [sp, #4]
   14628:	b	145e8 <__assert_fail@plt+0x3220>
   1462c:	mov	sp, fp
   14630:	pop	{fp, pc}
   14634:	push	{fp, lr}
   14638:	mov	fp, sp
   1463c:	sub	sp, sp, #8
   14640:	str	r0, [sp, #4]
   14644:	ldr	r0, [sp, #4]
   14648:	ldr	r0, [r0, #48]	; 0x30
   1464c:	movw	r1, #258	; 0x102
   14650:	and	r0, r0, r1
   14654:	cmp	r0, #0
   14658:	beq	14680 <__assert_fail@plt+0x32b8>
   1465c:	ldr	r0, [sp, #4]
   14660:	ldr	r0, [r0, #56]	; 0x38
   14664:	movw	r1, #0
   14668:	cmp	r0, r1
   1466c:	beq	1467c <__assert_fail@plt+0x32b4>
   14670:	ldr	r0, [sp, #4]
   14674:	ldr	r0, [r0, #56]	; 0x38
   14678:	bl	17d98 <__assert_fail@plt+0x69d0>
   1467c:	b	1468c <__assert_fail@plt+0x32c4>
   14680:	ldr	r0, [sp, #4]
   14684:	ldr	r0, [r0, #56]	; 0x38
   14688:	bl	20a84 <__assert_fail@plt+0xf6bc>
   1468c:	mov	sp, fp
   14690:	pop	{fp, pc}
   14694:	push	{fp, lr}
   14698:	mov	fp, sp
   1469c:	sub	sp, sp, #48	; 0x30
   146a0:	str	r0, [fp, #-8]
   146a4:	ldr	r0, [fp, #-8]
   146a8:	ldr	r0, [r0]
   146ac:	movw	r1, #0
   146b0:	cmp	r0, r1
   146b4:	beq	146cc <__assert_fail@plt+0x3304>
   146b8:	ldr	r0, [fp, #-8]
   146bc:	ldr	r0, [r0, #48]	; 0x30
   146c0:	and	r0, r0, #8192	; 0x2000
   146c4:	cmp	r0, #0
   146c8:	beq	146d8 <__assert_fail@plt+0x3310>
   146cc:	movw	r0, #0
   146d0:	str	r0, [fp, #-4]
   146d4:	b	15074 <__assert_fail@plt+0x3cac>
   146d8:	ldr	r0, [fp, #-8]
   146dc:	ldr	r0, [r0]
   146e0:	str	r0, [fp, #-12]
   146e4:	ldr	r0, [fp, #-12]
   146e8:	ldrh	r0, [r0, #60]	; 0x3c
   146ec:	strh	r0, [fp, #-18]	; 0xffffffee
   146f0:	ldr	r0, [fp, #-12]
   146f4:	movw	r1, #3
   146f8:	strh	r1, [r0, #60]	; 0x3c
   146fc:	ldrh	r0, [fp, #-18]	; 0xffffffee
   14700:	cmp	r0, #1
   14704:	bne	14730 <__assert_fail@plt+0x3368>
   14708:	ldr	r0, [fp, #-8]
   1470c:	ldr	r1, [fp, #-12]
   14710:	movw	r2, #0
   14714:	and	r2, r2, #1
   14718:	bl	13e10 <__assert_fail@plt+0x2a48>
   1471c:	ldr	r1, [fp, #-12]
   14720:	strh	r0, [r1, #56]	; 0x38
   14724:	ldr	r0, [fp, #-12]
   14728:	str	r0, [fp, #-4]
   1472c:	b	15074 <__assert_fail@plt+0x3cac>
   14730:	ldrh	r0, [fp, #-18]	; 0xffffffee
   14734:	cmp	r0, #2
   14738:	bne	147f4 <__assert_fail@plt+0x342c>
   1473c:	ldr	r0, [fp, #-12]
   14740:	ldrh	r0, [r0, #56]	; 0x38
   14744:	cmp	r0, #12
   14748:	beq	1475c <__assert_fail@plt+0x3394>
   1474c:	ldr	r0, [fp, #-12]
   14750:	ldrh	r0, [r0, #56]	; 0x38
   14754:	cmp	r0, #13
   14758:	bne	147f4 <__assert_fail@plt+0x342c>
   1475c:	ldr	r0, [fp, #-8]
   14760:	ldr	r1, [fp, #-12]
   14764:	movw	r2, #1
   14768:	and	r2, r2, #1
   1476c:	bl	13e10 <__assert_fail@plt+0x2a48>
   14770:	ldr	r1, [fp, #-12]
   14774:	strh	r0, [r1, #56]	; 0x38
   14778:	ldr	r0, [fp, #-12]
   1477c:	ldrh	r0, [r0, #56]	; 0x38
   14780:	cmp	r0, #1
   14784:	bne	147f0 <__assert_fail@plt+0x3428>
   14788:	ldr	r0, [fp, #-8]
   1478c:	ldr	r0, [r0, #48]	; 0x30
   14790:	and	r0, r0, #4
   14794:	cmp	r0, #0
   14798:	bne	147f0 <__assert_fail@plt+0x3428>
   1479c:	ldr	r0, [fp, #-8]
   147a0:	movw	r1, #14352	; 0x3810
   147a4:	movt	r1, #2
   147a8:	bl	142cc <__assert_fail@plt+0x2f04>
   147ac:	ldr	r1, [fp, #-12]
   147b0:	str	r0, [r1, #36]	; 0x24
   147b4:	cmp	r0, #0
   147b8:	bge	147dc <__assert_fail@plt+0x3414>
   147bc:	bl	11290 <__errno_location@plt>
   147c0:	ldr	r0, [r0]
   147c4:	ldr	lr, [fp, #-12]
   147c8:	str	r0, [lr, #32]
   147cc:	ldr	r0, [fp, #-12]
   147d0:	movw	lr, #7
   147d4:	strh	lr, [r0, #56]	; 0x38
   147d8:	b	147ec <__assert_fail@plt+0x3424>
   147dc:	ldr	r0, [fp, #-12]
   147e0:	ldrh	r1, [r0, #58]	; 0x3a
   147e4:	orr	r1, r1, #2
   147e8:	strh	r1, [r0, #58]	; 0x3a
   147ec:	b	147f0 <__assert_fail@plt+0x3428>
   147f0:	b	14d0c <__assert_fail@plt+0x3944>
   147f4:	ldr	r0, [fp, #-12]
   147f8:	ldrh	r0, [r0, #56]	; 0x38
   147fc:	cmp	r0, #1
   14800:	bne	14a60 <__assert_fail@plt+0x3698>
   14804:	ldrh	r0, [fp, #-18]	; 0xffffffee
   14808:	cmp	r0, #4
   1480c:	beq	14854 <__assert_fail@plt+0x348c>
   14810:	ldr	r0, [fp, #-8]
   14814:	ldr	r0, [r0, #48]	; 0x30
   14818:	and	r0, r0, #64	; 0x40
   1481c:	cmp	r0, #0
   14820:	beq	148c8 <__assert_fail@plt+0x3500>
   14824:	ldr	r0, [fp, #-12]
   14828:	ldr	r1, [r0, #64]	; 0x40
   1482c:	ldr	r0, [r0, #68]	; 0x44
   14830:	ldr	r2, [fp, #-8]
   14834:	ldr	r3, [r2, #16]
   14838:	ldr	r2, [r2, #20]
   1483c:	eor	r0, r0, r2
   14840:	eor	r1, r1, r3
   14844:	orr	r0, r1, r0
   14848:	cmp	r0, #0
   1484c:	beq	148c8 <__assert_fail@plt+0x3500>
   14850:	b	14854 <__assert_fail@plt+0x348c>
   14854:	ldr	r0, [fp, #-12]
   14858:	ldrh	r0, [r0, #58]	; 0x3a
   1485c:	and	r0, r0, #2
   14860:	cmp	r0, #0
   14864:	beq	14878 <__assert_fail@plt+0x34b0>
   14868:	ldr	r0, [fp, #-12]
   1486c:	ldr	r0, [r0, #36]	; 0x24
   14870:	bl	113a4 <close@plt>
   14874:	str	r0, [sp, #20]
   14878:	ldr	r0, [fp, #-8]
   1487c:	ldr	r0, [r0, #4]
   14880:	movw	r1, #0
   14884:	cmp	r0, r1
   14888:	beq	148a4 <__assert_fail@plt+0x34dc>
   1488c:	ldr	r0, [fp, #-8]
   14890:	ldr	r0, [r0, #4]
   14894:	bl	14368 <__assert_fail@plt+0x2fa0>
   14898:	ldr	r0, [fp, #-8]
   1489c:	movw	lr, #0
   148a0:	str	lr, [r0, #4]
   148a4:	ldr	r0, [fp, #-12]
   148a8:	movw	r1, #6
   148ac:	strh	r1, [r0, #56]	; 0x38
   148b0:	ldr	r0, [fp, #-8]
   148b4:	ldr	r1, [fp, #-12]
   148b8:	bl	15080 <__assert_fail@plt+0x3cb8>
   148bc:	ldr	r0, [fp, #-12]
   148c0:	str	r0, [fp, #-4]
   148c4:	b	15074 <__assert_fail@plt+0x3cac>
   148c8:	ldr	r0, [fp, #-8]
   148cc:	ldr	r0, [r0, #4]
   148d0:	movw	r1, #0
   148d4:	cmp	r0, r1
   148d8:	beq	1491c <__assert_fail@plt+0x3554>
   148dc:	ldr	r0, [fp, #-8]
   148e0:	ldr	r0, [r0, #48]	; 0x30
   148e4:	and	r0, r0, #4096	; 0x1000
   148e8:	cmp	r0, #0
   148ec:	beq	1491c <__assert_fail@plt+0x3554>
   148f0:	ldr	r0, [fp, #-8]
   148f4:	ldr	r1, [r0, #48]	; 0x30
   148f8:	mvn	r2, #4096	; 0x1000
   148fc:	and	r1, r1, r2
   14900:	str	r1, [r0, #48]	; 0x30
   14904:	ldr	r0, [fp, #-8]
   14908:	ldr	r0, [r0, #4]
   1490c:	bl	14368 <__assert_fail@plt+0x2fa0>
   14910:	ldr	r0, [fp, #-8]
   14914:	movw	r1, #0
   14918:	str	r1, [r0, #4]
   1491c:	ldr	r0, [fp, #-8]
   14920:	ldr	r0, [r0, #4]
   14924:	movw	r1, #0
   14928:	cmp	r0, r1
   1492c:	beq	149b8 <__assert_fail@plt+0x35f0>
   14930:	ldr	r0, [fp, #-8]
   14934:	ldr	r1, [fp, #-12]
   14938:	ldr	r2, [fp, #-12]
   1493c:	ldr	r3, [r2, #24]
   14940:	mvn	r2, #0
   14944:	bl	15220 <__assert_fail@plt+0x3e58>
   14948:	cmp	r0, #0
   1494c:	beq	149b4 <__assert_fail@plt+0x35ec>
   14950:	bl	11290 <__errno_location@plt>
   14954:	ldr	r0, [r0]
   14958:	ldr	lr, [fp, #-12]
   1495c:	str	r0, [lr, #32]
   14960:	ldr	r0, [fp, #-12]
   14964:	ldrh	lr, [r0, #58]	; 0x3a
   14968:	orr	lr, lr, #1
   1496c:	strh	lr, [r0, #58]	; 0x3a
   14970:	ldr	r0, [fp, #-8]
   14974:	ldr	r0, [r0, #4]
   14978:	str	r0, [fp, #-12]
   1497c:	ldr	r0, [fp, #-12]
   14980:	movw	r1, #0
   14984:	cmp	r0, r1
   14988:	beq	149b0 <__assert_fail@plt+0x35e8>
   1498c:	ldr	r0, [fp, #-12]
   14990:	ldr	r0, [r0, #4]
   14994:	ldr	r0, [r0, #24]
   14998:	ldr	r1, [fp, #-12]
   1499c:	str	r0, [r1, #24]
   149a0:	ldr	r0, [fp, #-12]
   149a4:	ldr	r0, [r0, #8]
   149a8:	str	r0, [fp, #-12]
   149ac:	b	1497c <__assert_fail@plt+0x35b4>
   149b0:	b	149b4 <__assert_fail@plt+0x35ec>
   149b4:	b	14a44 <__assert_fail@plt+0x367c>
   149b8:	ldr	r0, [fp, #-8]
   149bc:	movw	r1, #3
   149c0:	bl	154e4 <__assert_fail@plt+0x411c>
   149c4:	ldr	r1, [fp, #-8]
   149c8:	str	r0, [r1, #4]
   149cc:	movw	r1, #0
   149d0:	cmp	r0, r1
   149d4:	bne	14a40 <__assert_fail@plt+0x3678>
   149d8:	ldr	r0, [fp, #-8]
   149dc:	ldr	r0, [r0, #48]	; 0x30
   149e0:	and	r0, r0, #8192	; 0x2000
   149e4:	cmp	r0, #0
   149e8:	beq	149f8 <__assert_fail@plt+0x3630>
   149ec:	movw	r0, #0
   149f0:	str	r0, [fp, #-4]
   149f4:	b	15074 <__assert_fail@plt+0x3cac>
   149f8:	ldr	r0, [fp, #-12]
   149fc:	ldr	r0, [r0, #32]
   14a00:	cmp	r0, #0
   14a04:	beq	14a24 <__assert_fail@plt+0x365c>
   14a08:	ldr	r0, [fp, #-12]
   14a0c:	ldrh	r0, [r0, #56]	; 0x38
   14a10:	cmp	r0, #4
   14a14:	beq	14a24 <__assert_fail@plt+0x365c>
   14a18:	ldr	r0, [fp, #-12]
   14a1c:	movw	r1, #7
   14a20:	strh	r1, [r0, #56]	; 0x38
   14a24:	b	14a28 <__assert_fail@plt+0x3660>
   14a28:	ldr	r0, [fp, #-8]
   14a2c:	ldr	r1, [fp, #-12]
   14a30:	bl	15080 <__assert_fail@plt+0x3cb8>
   14a34:	ldr	r0, [fp, #-12]
   14a38:	str	r0, [fp, #-4]
   14a3c:	b	15074 <__assert_fail@plt+0x3cac>
   14a40:	b	14a44 <__assert_fail@plt+0x367c>
   14a44:	ldr	r0, [fp, #-8]
   14a48:	ldr	r0, [r0, #4]
   14a4c:	str	r0, [fp, #-12]
   14a50:	ldr	r0, [fp, #-8]
   14a54:	movw	r1, #0
   14a58:	str	r1, [r0, #4]
   14a5c:	b	14c6c <__assert_fail@plt+0x38a4>
   14a60:	b	14a64 <__assert_fail@plt+0x369c>
   14a64:	ldr	r0, [fp, #-12]
   14a68:	str	r0, [fp, #-16]
   14a6c:	ldr	r0, [fp, #-12]
   14a70:	ldr	r0, [r0, #8]
   14a74:	movw	r1, #0
   14a78:	cmp	r0, r1
   14a7c:	bne	14b18 <__assert_fail@plt+0x3750>
   14a80:	ldr	r0, [fp, #-12]
   14a84:	ldr	r0, [r0, #4]
   14a88:	ldr	r0, [r0, #12]
   14a8c:	movw	r1, #0
   14a90:	cmp	r0, r1
   14a94:	beq	14b18 <__assert_fail@plt+0x3750>
   14a98:	ldr	r0, [fp, #-16]
   14a9c:	ldr	r0, [r0, #4]
   14aa0:	str	r0, [fp, #-12]
   14aa4:	ldr	r0, [fp, #-12]
   14aa8:	ldr	r1, [fp, #-8]
   14aac:	str	r0, [r1]
   14ab0:	ldr	r0, [fp, #-8]
   14ab4:	ldr	r0, [r0, #24]
   14ab8:	ldr	r1, [fp, #-12]
   14abc:	ldr	r1, [r1, #40]	; 0x28
   14ac0:	add	r0, r0, r1
   14ac4:	movw	r1, #0
   14ac8:	strb	r1, [r0]
   14acc:	ldr	r0, [fp, #-8]
   14ad0:	movw	r1, #3
   14ad4:	bl	154e4 <__assert_fail@plt+0x411c>
   14ad8:	str	r0, [fp, #-12]
   14adc:	movw	r1, #0
   14ae0:	cmp	r0, r1
   14ae4:	bne	14b0c <__assert_fail@plt+0x3744>
   14ae8:	ldr	r0, [fp, #-8]
   14aec:	ldr	r0, [r0, #48]	; 0x30
   14af0:	and	r0, r0, #8192	; 0x2000
   14af4:	cmp	r0, #0
   14af8:	beq	14b08 <__assert_fail@plt+0x3740>
   14afc:	movw	r0, #0
   14b00:	str	r0, [fp, #-4]
   14b04:	b	15074 <__assert_fail@plt+0x3cac>
   14b08:	b	14e14 <__assert_fail@plt+0x3a4c>
   14b0c:	ldr	r0, [fp, #-16]
   14b10:	bl	20a84 <__assert_fail@plt+0xf6bc>
   14b14:	b	14c6c <__assert_fail@plt+0x38a4>
   14b18:	ldr	r0, [fp, #-12]
   14b1c:	ldr	r0, [r0, #8]
   14b20:	str	r0, [fp, #-12]
   14b24:	movw	r1, #0
   14b28:	cmp	r0, r1
   14b2c:	beq	14e10 <__assert_fail@plt+0x3a48>
   14b30:	ldr	r0, [fp, #-12]
   14b34:	ldr	r1, [fp, #-8]
   14b38:	str	r0, [r1]
   14b3c:	ldr	r0, [fp, #-16]
   14b40:	bl	20a84 <__assert_fail@plt+0xf6bc>
   14b44:	ldr	r0, [fp, #-12]
   14b48:	ldr	r0, [r0, #48]	; 0x30
   14b4c:	cmp	r0, #0
   14b50:	bne	14ba4 <__assert_fail@plt+0x37dc>
   14b54:	ldr	r0, [fp, #-8]
   14b58:	bl	161c0 <__assert_fail@plt+0x4df8>
   14b5c:	cmp	r0, #0
   14b60:	beq	14b80 <__assert_fail@plt+0x37b8>
   14b64:	ldr	r0, [fp, #-8]
   14b68:	ldr	r1, [r0, #48]	; 0x30
   14b6c:	orr	r1, r1, #8192	; 0x2000
   14b70:	str	r1, [r0, #48]	; 0x30
   14b74:	movw	r0, #0
   14b78:	str	r0, [fp, #-4]
   14b7c:	b	15074 <__assert_fail@plt+0x3cac>
   14b80:	ldr	r0, [fp, #-8]
   14b84:	bl	14634 <__assert_fail@plt+0x326c>
   14b88:	ldr	r0, [fp, #-8]
   14b8c:	ldr	r1, [fp, #-12]
   14b90:	bl	162d0 <__assert_fail@plt+0x4f08>
   14b94:	ldr	r0, [fp, #-8]
   14b98:	bl	141f0 <__assert_fail@plt+0x2e28>
   14b9c:	str	r0, [sp, #16]
   14ba0:	b	14d0c <__assert_fail@plt+0x3944>
   14ba4:	ldr	r0, [fp, #-12]
   14ba8:	ldrh	r0, [r0, #60]	; 0x3c
   14bac:	cmp	r0, #4
   14bb0:	bne	14bb8 <__assert_fail@plt+0x37f0>
   14bb4:	b	14a64 <__assert_fail@plt+0x369c>
   14bb8:	ldr	r0, [fp, #-12]
   14bbc:	ldrh	r0, [r0, #60]	; 0x3c
   14bc0:	cmp	r0, #2
   14bc4:	bne	14c68 <__assert_fail@plt+0x38a0>
   14bc8:	ldr	r0, [fp, #-8]
   14bcc:	ldr	r1, [fp, #-12]
   14bd0:	movw	r2, #1
   14bd4:	and	r2, r2, #1
   14bd8:	bl	13e10 <__assert_fail@plt+0x2a48>
   14bdc:	ldr	r1, [fp, #-12]
   14be0:	strh	r0, [r1, #56]	; 0x38
   14be4:	ldr	r0, [fp, #-12]
   14be8:	ldrh	r0, [r0, #56]	; 0x38
   14bec:	cmp	r0, #1
   14bf0:	bne	14c5c <__assert_fail@plt+0x3894>
   14bf4:	ldr	r0, [fp, #-8]
   14bf8:	ldr	r0, [r0, #48]	; 0x30
   14bfc:	and	r0, r0, #4
   14c00:	cmp	r0, #0
   14c04:	bne	14c5c <__assert_fail@plt+0x3894>
   14c08:	ldr	r0, [fp, #-8]
   14c0c:	movw	r1, #14352	; 0x3810
   14c10:	movt	r1, #2
   14c14:	bl	142cc <__assert_fail@plt+0x2f04>
   14c18:	ldr	r1, [fp, #-12]
   14c1c:	str	r0, [r1, #36]	; 0x24
   14c20:	cmp	r0, #0
   14c24:	bge	14c48 <__assert_fail@plt+0x3880>
   14c28:	bl	11290 <__errno_location@plt>
   14c2c:	ldr	r0, [r0]
   14c30:	ldr	lr, [fp, #-12]
   14c34:	str	r0, [lr, #32]
   14c38:	ldr	r0, [fp, #-12]
   14c3c:	movw	lr, #7
   14c40:	strh	lr, [r0, #56]	; 0x38
   14c44:	b	14c58 <__assert_fail@plt+0x3890>
   14c48:	ldr	r0, [fp, #-12]
   14c4c:	ldrh	r1, [r0, #58]	; 0x3a
   14c50:	orr	r1, r1, #2
   14c54:	strh	r1, [r0, #58]	; 0x3a
   14c58:	b	14c5c <__assert_fail@plt+0x3894>
   14c5c:	ldr	r0, [fp, #-12]
   14c60:	movw	r1, #3
   14c64:	strh	r1, [r0, #60]	; 0x3c
   14c68:	b	14c6c <__assert_fail@plt+0x38a4>
   14c6c:	ldr	r0, [fp, #-8]
   14c70:	ldr	r0, [r0, #24]
   14c74:	ldr	r1, [fp, #-12]
   14c78:	ldr	r1, [r1, #4]
   14c7c:	ldr	r1, [r1, #28]
   14c80:	ldr	r2, [fp, #-12]
   14c84:	ldr	r2, [r2, #4]
   14c88:	ldr	r2, [r2, #40]	; 0x28
   14c8c:	sub	r2, r2, #1
   14c90:	add	r1, r1, r2
   14c94:	ldrb	r1, [r1]
   14c98:	cmp	r1, #47	; 0x2f
   14c9c:	str	r0, [sp, #12]
   14ca0:	bne	14cbc <__assert_fail@plt+0x38f4>
   14ca4:	ldr	r0, [fp, #-12]
   14ca8:	ldr	r0, [r0, #4]
   14cac:	ldr	r0, [r0, #40]	; 0x28
   14cb0:	sub	r0, r0, #1
   14cb4:	str	r0, [sp, #8]
   14cb8:	b	14ccc <__assert_fail@plt+0x3904>
   14cbc:	ldr	r0, [fp, #-12]
   14cc0:	ldr	r0, [r0, #4]
   14cc4:	ldr	r0, [r0, #40]	; 0x28
   14cc8:	str	r0, [sp, #8]
   14ccc:	ldr	r0, [sp, #8]
   14cd0:	ldr	r1, [sp, #12]
   14cd4:	add	r0, r1, r0
   14cd8:	str	r0, [sp, #24]
   14cdc:	ldr	r0, [sp, #24]
   14ce0:	add	r2, r0, #1
   14ce4:	str	r2, [sp, #24]
   14ce8:	movw	r2, #47	; 0x2f
   14cec:	strb	r2, [r0]
   14cf0:	ldr	r0, [sp, #24]
   14cf4:	ldr	r2, [fp, #-12]
   14cf8:	add	r1, r2, #168	; 0xa8
   14cfc:	ldr	r2, [fp, #-12]
   14d00:	ldr	r2, [r2, #52]	; 0x34
   14d04:	add	r2, r2, #1
   14d08:	bl	11128 <memmove@plt>
   14d0c:	ldr	r0, [fp, #-12]
   14d10:	ldr	r1, [fp, #-8]
   14d14:	str	r0, [r1]
   14d18:	ldr	r0, [fp, #-12]
   14d1c:	ldrh	r0, [r0, #56]	; 0x38
   14d20:	cmp	r0, #11
   14d24:	bne	14d9c <__assert_fail@plt+0x39d4>
   14d28:	ldr	r0, [fp, #-12]
   14d2c:	ldr	r1, [r0, #112]	; 0x70
   14d30:	ldr	r0, [r0, #116]	; 0x74
   14d34:	eor	r1, r1, #2
   14d38:	orr	r0, r1, r0
   14d3c:	cmp	r0, #0
   14d40:	bne	14d68 <__assert_fail@plt+0x39a0>
   14d44:	b	14d48 <__assert_fail@plt+0x3980>
   14d48:	ldr	r0, [fp, #-8]
   14d4c:	ldr	r1, [fp, #-12]
   14d50:	movw	r2, #0
   14d54:	and	r2, r2, #1
   14d58:	bl	13e10 <__assert_fail@plt+0x2a48>
   14d5c:	ldr	r1, [fp, #-12]
   14d60:	strh	r0, [r1, #56]	; 0x38
   14d64:	b	14d98 <__assert_fail@plt+0x39d0>
   14d68:	b	14d6c <__assert_fail@plt+0x39a4>
   14d6c:	ldr	r0, [fp, #-12]
   14d70:	ldr	r1, [r0, #112]	; 0x70
   14d74:	ldr	r0, [r0, #116]	; 0x74
   14d78:	eor	r1, r1, #1
   14d7c:	orr	r0, r1, r0
   14d80:	cmp	r0, #0
   14d84:	beq	14d90 <__assert_fail@plt+0x39c8>
   14d88:	b	14d8c <__assert_fail@plt+0x39c4>
   14d8c:	bl	11398 <abort@plt>
   14d90:	b	14d94 <__assert_fail@plt+0x39cc>
   14d94:	b	14d98 <__assert_fail@plt+0x39d0>
   14d98:	b	14d9c <__assert_fail@plt+0x39d4>
   14d9c:	ldr	r0, [fp, #-12]
   14da0:	ldrh	r0, [r0, #56]	; 0x38
   14da4:	cmp	r0, #1
   14da8:	bne	14e04 <__assert_fail@plt+0x3a3c>
   14dac:	ldr	r0, [fp, #-12]
   14db0:	ldr	r0, [r0, #48]	; 0x30
   14db4:	cmp	r0, #0
   14db8:	bne	14dd4 <__assert_fail@plt+0x3a0c>
   14dbc:	ldr	r0, [fp, #-12]
   14dc0:	ldr	r1, [r0, #64]	; 0x40
   14dc4:	ldr	r0, [r0, #68]	; 0x44
   14dc8:	ldr	r2, [fp, #-8]
   14dcc:	str	r0, [r2, #20]
   14dd0:	str	r1, [r2, #16]
   14dd4:	ldr	r0, [fp, #-8]
   14dd8:	ldr	r1, [fp, #-12]
   14ddc:	bl	163b0 <__assert_fail@plt+0x4fe8>
   14de0:	tst	r0, #1
   14de4:	bne	14e00 <__assert_fail@plt+0x3a38>
   14de8:	bl	11290 <__errno_location@plt>
   14dec:	movw	lr, #12
   14df0:	str	lr, [r0]
   14df4:	movw	r0, #0
   14df8:	str	r0, [fp, #-4]
   14dfc:	b	15074 <__assert_fail@plt+0x3cac>
   14e00:	b	14e04 <__assert_fail@plt+0x3a3c>
   14e04:	ldr	r0, [fp, #-12]
   14e08:	str	r0, [fp, #-4]
   14e0c:	b	15074 <__assert_fail@plt+0x3cac>
   14e10:	b	14e14 <__assert_fail@plt+0x3a4c>
   14e14:	ldr	r0, [fp, #-16]
   14e18:	ldr	r0, [r0, #4]
   14e1c:	str	r0, [fp, #-12]
   14e20:	ldr	r0, [fp, #-12]
   14e24:	ldr	r1, [fp, #-8]
   14e28:	str	r0, [r1]
   14e2c:	ldr	r0, [fp, #-16]
   14e30:	bl	20a84 <__assert_fail@plt+0xf6bc>
   14e34:	ldr	r0, [fp, #-12]
   14e38:	ldr	r0, [r0, #48]	; 0x30
   14e3c:	cmn	r0, #1
   14e40:	bne	14e68 <__assert_fail@plt+0x3aa0>
   14e44:	ldr	r0, [fp, #-12]
   14e48:	bl	20a84 <__assert_fail@plt+0xf6bc>
   14e4c:	bl	11290 <__errno_location@plt>
   14e50:	movw	lr, #0
   14e54:	str	lr, [r0]
   14e58:	ldr	r0, [fp, #-8]
   14e5c:	str	lr, [r0]
   14e60:	str	lr, [fp, #-4]
   14e64:	b	15074 <__assert_fail@plt+0x3cac>
   14e68:	b	14e6c <__assert_fail@plt+0x3aa4>
   14e6c:	ldr	r0, [fp, #-12]
   14e70:	ldrh	r0, [r0, #56]	; 0x38
   14e74:	cmp	r0, #11
   14e78:	bne	14e80 <__assert_fail@plt+0x3ab8>
   14e7c:	bl	11398 <abort@plt>
   14e80:	b	14e84 <__assert_fail@plt+0x3abc>
   14e84:	ldr	r0, [fp, #-8]
   14e88:	ldr	r0, [r0, #24]
   14e8c:	ldr	r1, [fp, #-12]
   14e90:	ldr	r1, [r1, #40]	; 0x28
   14e94:	add	r0, r0, r1
   14e98:	movw	r1, #0
   14e9c:	strb	r1, [r0]
   14ea0:	ldr	r0, [fp, #-12]
   14ea4:	ldr	r0, [r0, #48]	; 0x30
   14ea8:	cmp	r0, #0
   14eac:	bne	14ee4 <__assert_fail@plt+0x3b1c>
   14eb0:	ldr	r0, [fp, #-8]
   14eb4:	bl	161c0 <__assert_fail@plt+0x4df8>
   14eb8:	cmp	r0, #0
   14ebc:	beq	14ee0 <__assert_fail@plt+0x3b18>
   14ec0:	bl	11290 <__errno_location@plt>
   14ec4:	ldr	r0, [r0]
   14ec8:	ldr	lr, [fp, #-12]
   14ecc:	str	r0, [lr, #32]
   14ed0:	ldr	r0, [fp, #-8]
   14ed4:	ldr	lr, [r0, #48]	; 0x30
   14ed8:	orr	lr, lr, #8192	; 0x2000
   14edc:	str	lr, [r0, #48]	; 0x30
   14ee0:	b	14fe4 <__assert_fail@plt+0x3c1c>
   14ee4:	ldr	r0, [fp, #-12]
   14ee8:	ldrh	r0, [r0, #58]	; 0x3a
   14eec:	and	r0, r0, #2
   14ef0:	cmp	r0, #0
   14ef4:	beq	14f84 <__assert_fail@plt+0x3bbc>
   14ef8:	ldr	r0, [fp, #-8]
   14efc:	ldr	r0, [r0, #48]	; 0x30
   14f00:	and	r0, r0, #4
   14f04:	cmp	r0, #0
   14f08:	bne	14f70 <__assert_fail@plt+0x3ba8>
   14f0c:	ldr	r0, [fp, #-8]
   14f10:	ldr	r0, [r0, #48]	; 0x30
   14f14:	and	r0, r0, #512	; 0x200
   14f18:	cmp	r0, #0
   14f1c:	beq	14f3c <__assert_fail@plt+0x3b74>
   14f20:	ldr	r0, [fp, #-8]
   14f24:	ldr	r1, [fp, #-12]
   14f28:	ldr	r1, [r1, #36]	; 0x24
   14f2c:	movw	r2, #1
   14f30:	and	r2, r2, #1
   14f34:	bl	16510 <__assert_fail@plt+0x5148>
   14f38:	b	14f70 <__assert_fail@plt+0x3ba8>
   14f3c:	ldr	r0, [fp, #-12]
   14f40:	ldr	r0, [r0, #36]	; 0x24
   14f44:	bl	11338 <fchdir@plt>
   14f48:	cmp	r0, #0
   14f4c:	beq	14f70 <__assert_fail@plt+0x3ba8>
   14f50:	bl	11290 <__errno_location@plt>
   14f54:	ldr	r0, [r0]
   14f58:	ldr	lr, [fp, #-12]
   14f5c:	str	r0, [lr, #32]
   14f60:	ldr	r0, [fp, #-8]
   14f64:	ldr	lr, [r0, #48]	; 0x30
   14f68:	orr	lr, lr, #8192	; 0x2000
   14f6c:	str	lr, [r0, #48]	; 0x30
   14f70:	ldr	r0, [fp, #-12]
   14f74:	ldr	r0, [r0, #36]	; 0x24
   14f78:	bl	113a4 <close@plt>
   14f7c:	str	r0, [sp, #4]
   14f80:	b	14fe0 <__assert_fail@plt+0x3c18>
   14f84:	ldr	r0, [fp, #-12]
   14f88:	ldrh	r0, [r0, #58]	; 0x3a
   14f8c:	and	r0, r0, #1
   14f90:	cmp	r0, #0
   14f94:	bne	14fdc <__assert_fail@plt+0x3c14>
   14f98:	ldr	r0, [fp, #-8]
   14f9c:	ldr	r1, [fp, #-12]
   14fa0:	ldr	r1, [r1, #4]
   14fa4:	mvn	r2, #0
   14fa8:	movw	r3, #14351	; 0x380f
   14fac:	movt	r3, #2
   14fb0:	bl	15220 <__assert_fail@plt+0x3e58>
   14fb4:	cmp	r0, #0
   14fb8:	beq	14fdc <__assert_fail@plt+0x3c14>
   14fbc:	bl	11290 <__errno_location@plt>
   14fc0:	ldr	r0, [r0]
   14fc4:	ldr	lr, [fp, #-12]
   14fc8:	str	r0, [lr, #32]
   14fcc:	ldr	r0, [fp, #-8]
   14fd0:	ldr	lr, [r0, #48]	; 0x30
   14fd4:	orr	lr, lr, #8192	; 0x2000
   14fd8:	str	lr, [r0, #48]	; 0x30
   14fdc:	b	14fe0 <__assert_fail@plt+0x3c18>
   14fe0:	b	14fe4 <__assert_fail@plt+0x3c1c>
   14fe4:	ldr	r0, [fp, #-12]
   14fe8:	ldrh	r0, [r0, #56]	; 0x38
   14fec:	cmp	r0, #2
   14ff0:	beq	15044 <__assert_fail@plt+0x3c7c>
   14ff4:	ldr	r0, [fp, #-12]
   14ff8:	ldr	r0, [r0, #32]
   14ffc:	cmp	r0, #0
   15000:	movw	r0, #0
   15004:	movne	r0, #1
   15008:	tst	r0, #1
   1500c:	movw	r0, #7
   15010:	moveq	r0, #6
   15014:	ldr	r1, [fp, #-12]
   15018:	strh	r0, [r1, #56]	; 0x38
   1501c:	ldr	r0, [fp, #-12]
   15020:	ldr	r0, [r0, #32]
   15024:	cmp	r0, #0
   15028:	bne	15040 <__assert_fail@plt+0x3c78>
   1502c:	b	15030 <__assert_fail@plt+0x3c68>
   15030:	ldr	r0, [fp, #-8]
   15034:	ldr	r1, [fp, #-12]
   15038:	bl	15080 <__assert_fail@plt+0x3cb8>
   1503c:	b	15040 <__assert_fail@plt+0x3c78>
   15040:	b	15044 <__assert_fail@plt+0x3c7c>
   15044:	ldr	r0, [fp, #-8]
   15048:	ldr	r0, [r0, #48]	; 0x30
   1504c:	and	r0, r0, #8192	; 0x2000
   15050:	cmp	r0, #0
   15054:	beq	15064 <__assert_fail@plt+0x3c9c>
   15058:	movw	r0, #0
   1505c:	str	r0, [sp]
   15060:	b	1506c <__assert_fail@plt+0x3ca4>
   15064:	ldr	r0, [fp, #-12]
   15068:	str	r0, [sp]
   1506c:	ldr	r0, [sp]
   15070:	str	r0, [fp, #-4]
   15074:	ldr	r0, [fp, #-4]
   15078:	mov	sp, fp
   1507c:	pop	{fp, pc}
   15080:	push	{fp, lr}
   15084:	mov	fp, sp
   15088:	sub	sp, sp, #48	; 0x30
   1508c:	str	r0, [fp, #-4]
   15090:	str	r1, [fp, #-8]
   15094:	ldr	r0, [fp, #-8]
   15098:	add	r0, r0, #64	; 0x40
   1509c:	str	r0, [fp, #-12]
   150a0:	ldr	r0, [fp, #-4]
   150a4:	ldr	r0, [r0, #48]	; 0x30
   150a8:	movw	r1, #258	; 0x102
   150ac:	and	r0, r0, r1
   150b0:	cmp	r0, #0
   150b4:	beq	15114 <__assert_fail@plt+0x3d4c>
   150b8:	ldr	r0, [fp, #-12]
   150bc:	ldr	r1, [r0]
   150c0:	ldr	r0, [r0, #4]
   150c4:	str	r0, [sp, #12]
   150c8:	str	r1, [sp, #8]
   150cc:	ldr	r0, [fp, #-12]
   150d0:	ldr	r1, [r0, #96]	; 0x60
   150d4:	ldr	r0, [r0, #100]	; 0x64
   150d8:	str	r0, [sp, #20]
   150dc:	str	r1, [sp, #16]
   150e0:	ldr	r0, [fp, #-4]
   150e4:	ldr	r0, [r0, #56]	; 0x38
   150e8:	add	r1, sp, #8
   150ec:	bl	188e4 <__assert_fail@plt+0x751c>
   150f0:	str	r0, [sp, #4]
   150f4:	ldr	r0, [sp, #4]
   150f8:	movw	r1, #0
   150fc:	cmp	r0, r1
   15100:	bne	15108 <__assert_fail@plt+0x3d40>
   15104:	bl	11398 <abort@plt>
   15108:	ldr	r0, [sp, #4]
   1510c:	bl	20a84 <__assert_fail@plt+0xf6bc>
   15110:	b	15218 <__assert_fail@plt+0x3e50>
   15114:	ldr	r0, [fp, #-8]
   15118:	ldr	r0, [r0, #4]
   1511c:	str	r0, [sp]
   15120:	ldr	r0, [sp]
   15124:	movw	r1, #0
   15128:	cmp	r0, r1
   1512c:	beq	15214 <__assert_fail@plt+0x3e4c>
   15130:	ldr	r0, [sp]
   15134:	ldr	r0, [r0, #48]	; 0x30
   15138:	movw	r1, #0
   1513c:	cmp	r1, r0
   15140:	bgt	15214 <__assert_fail@plt+0x3e4c>
   15144:	b	15148 <__assert_fail@plt+0x3d80>
   15148:	ldr	r0, [fp, #-4]
   1514c:	ldr	r0, [r0, #56]	; 0x38
   15150:	ldr	r1, [r0, #16]
   15154:	ldr	r0, [r0, #20]
   15158:	orr	r0, r1, r0
   1515c:	cmp	r0, #0
   15160:	bne	1516c <__assert_fail@plt+0x3da4>
   15164:	b	15168 <__assert_fail@plt+0x3da0>
   15168:	bl	11398 <abort@plt>
   1516c:	ldr	r0, [fp, #-4]
   15170:	ldr	r0, [r0, #56]	; 0x38
   15174:	ldr	r1, [r0]
   15178:	ldr	r0, [r0, #4]
   1517c:	ldr	r2, [fp, #-12]
   15180:	ldr	r3, [r2, #96]	; 0x60
   15184:	ldr	r2, [r2, #100]	; 0x64
   15188:	eor	r0, r0, r2
   1518c:	eor	r1, r1, r3
   15190:	orr	r0, r1, r0
   15194:	cmp	r0, #0
   15198:	bne	1520c <__assert_fail@plt+0x3e44>
   1519c:	b	151a0 <__assert_fail@plt+0x3dd8>
   151a0:	ldr	r0, [fp, #-4]
   151a4:	ldr	r0, [r0, #56]	; 0x38
   151a8:	ldr	r1, [r0, #8]
   151ac:	ldr	r0, [r0, #12]
   151b0:	ldr	r2, [fp, #-12]
   151b4:	ldr	r3, [r2]
   151b8:	ldr	r2, [r2, #4]
   151bc:	eor	r0, r0, r2
   151c0:	eor	r1, r1, r3
   151c4:	orr	r0, r1, r0
   151c8:	cmp	r0, #0
   151cc:	bne	1520c <__assert_fail@plt+0x3e44>
   151d0:	b	151d4 <__assert_fail@plt+0x3e0c>
   151d4:	ldr	r0, [sp]
   151d8:	ldr	r1, [r0, #64]	; 0x40
   151dc:	ldr	r0, [r0, #68]	; 0x44
   151e0:	ldr	r2, [fp, #-4]
   151e4:	ldr	r2, [r2, #56]	; 0x38
   151e8:	str	r0, [r2, #12]
   151ec:	str	r1, [r2, #8]
   151f0:	ldr	r0, [sp]
   151f4:	ldr	r1, [r0, #160]	; 0xa0
   151f8:	ldr	r0, [r0, #164]	; 0xa4
   151fc:	ldr	r2, [fp, #-4]
   15200:	ldr	r2, [r2, #56]	; 0x38
   15204:	str	r0, [r2, #4]
   15208:	str	r1, [r2]
   1520c:	b	15210 <__assert_fail@plt+0x3e48>
   15210:	b	15214 <__assert_fail@plt+0x3e4c>
   15214:	b	15218 <__assert_fail@plt+0x3e50>
   15218:	mov	sp, fp
   1521c:	pop	{fp, pc}
   15220:	push	{fp, lr}
   15224:	mov	fp, sp
   15228:	sub	sp, sp, #168	; 0xa8
   1522c:	str	r0, [fp, #-8]
   15230:	str	r1, [fp, #-12]
   15234:	str	r2, [fp, #-16]
   15238:	str	r3, [fp, #-20]	; 0xffffffec
   1523c:	ldr	r0, [fp, #-20]	; 0xffffffec
   15240:	movw	r1, #0
   15244:	cmp	r0, r1
   15248:	movw	r0, #0
   1524c:	str	r0, [sp, #16]
   15250:	beq	15274 <__assert_fail@plt+0x3eac>
   15254:	ldr	r0, [fp, #-20]	; 0xffffffec
   15258:	movw	r1, #14351	; 0x380f
   1525c:	movt	r1, #2
   15260:	bl	11104 <strcmp@plt>
   15264:	cmp	r0, #0
   15268:	movw	r0, #0
   1526c:	moveq	r0, #1
   15270:	str	r0, [sp, #16]
   15274:	ldr	r0, [sp, #16]
   15278:	and	r0, r0, #1
   1527c:	strb	r0, [fp, #-25]	; 0xffffffe7
   15280:	ldr	r0, [fp, #-8]
   15284:	ldr	r0, [r0, #48]	; 0x30
   15288:	and	r0, r0, #4
   1528c:	cmp	r0, #0
   15290:	beq	152d0 <__assert_fail@plt+0x3f08>
   15294:	ldr	r0, [fp, #-8]
   15298:	ldr	r0, [r0, #48]	; 0x30
   1529c:	and	r0, r0, #512	; 0x200
   152a0:	cmp	r0, #0
   152a4:	beq	152c4 <__assert_fail@plt+0x3efc>
   152a8:	ldr	r0, [fp, #-16]
   152ac:	movw	r1, #0
   152b0:	cmp	r1, r0
   152b4:	bgt	152c4 <__assert_fail@plt+0x3efc>
   152b8:	ldr	r0, [fp, #-16]
   152bc:	bl	113a4 <close@plt>
   152c0:	str	r0, [sp, #12]
   152c4:	movw	r0, #0
   152c8:	str	r0, [fp, #-4]
   152cc:	b	154d8 <__assert_fail@plt+0x4110>
   152d0:	ldr	r0, [fp, #-16]
   152d4:	cmp	r0, #0
   152d8:	bge	15348 <__assert_fail@plt+0x3f80>
   152dc:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   152e0:	tst	r0, #1
   152e4:	beq	15348 <__assert_fail@plt+0x3f80>
   152e8:	ldr	r0, [fp, #-8]
   152ec:	ldr	r0, [r0, #48]	; 0x30
   152f0:	and	r0, r0, #512	; 0x200
   152f4:	cmp	r0, #0
   152f8:	beq	15348 <__assert_fail@plt+0x3f80>
   152fc:	ldr	r0, [fp, #-8]
   15300:	add	r0, r0, #60	; 0x3c
   15304:	bl	18d18 <__assert_fail@plt+0x7950>
   15308:	tst	r0, #1
   1530c:	bne	15344 <__assert_fail@plt+0x3f7c>
   15310:	ldr	r0, [fp, #-8]
   15314:	add	r0, r0, #60	; 0x3c
   15318:	bl	18de8 <__assert_fail@plt+0x7a20>
   1531c:	str	r0, [fp, #-36]	; 0xffffffdc
   15320:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15324:	movw	lr, #0
   15328:	cmp	lr, r0
   1532c:	bgt	15340 <__assert_fail@plt+0x3f78>
   15330:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15334:	str	r0, [fp, #-16]
   15338:	movw	r0, #0
   1533c:	str	r0, [fp, #-20]	; 0xffffffec
   15340:	b	15344 <__assert_fail@plt+0x3f7c>
   15344:	b	15348 <__assert_fail@plt+0x3f80>
   15348:	ldr	r0, [fp, #-16]
   1534c:	str	r0, [fp, #-32]	; 0xffffffe0
   15350:	ldr	r0, [fp, #-16]
   15354:	cmp	r0, #0
   15358:	bge	15380 <__assert_fail@plt+0x3fb8>
   1535c:	ldr	r0, [fp, #-8]
   15360:	ldr	r1, [fp, #-20]	; 0xffffffec
   15364:	bl	142cc <__assert_fail@plt+0x2f04>
   15368:	str	r0, [fp, #-32]	; 0xffffffe0
   1536c:	cmp	r0, #0
   15370:	bge	15380 <__assert_fail@plt+0x3fb8>
   15374:	mvn	r0, #0
   15378:	str	r0, [fp, #-4]
   1537c:	b	154d8 <__assert_fail@plt+0x4110>
   15380:	ldr	r0, [fp, #-8]
   15384:	ldr	r0, [r0, #48]	; 0x30
   15388:	and	r0, r0, #2
   1538c:	cmp	r0, #0
   15390:	bne	153bc <__assert_fail@plt+0x3ff4>
   15394:	ldr	r0, [fp, #-20]	; 0xffffffec
   15398:	movw	r1, #0
   1539c:	cmp	r0, r1
   153a0:	beq	15450 <__assert_fail@plt+0x4088>
   153a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   153a8:	movw	r1, #14351	; 0x380f
   153ac:	movt	r1, #2
   153b0:	bl	11104 <strcmp@plt>
   153b4:	cmp	r0, #0
   153b8:	bne	15450 <__assert_fail@plt+0x4088>
   153bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   153c0:	add	r1, sp, #24
   153c4:	bl	22d74 <__assert_fail@plt+0x119ac>
   153c8:	cmp	r0, #0
   153cc:	beq	153dc <__assert_fail@plt+0x4014>
   153d0:	mvn	r0, #0
   153d4:	str	r0, [fp, #-24]	; 0xffffffe8
   153d8:	b	15498 <__assert_fail@plt+0x40d0>
   153dc:	ldr	r0, [fp, #-12]
   153e0:	ldr	r1, [r0, #64]	; 0x40
   153e4:	ldr	r0, [r0, #68]	; 0x44
   153e8:	ldr	r2, [sp, #24]
   153ec:	ldr	r3, [sp, #28]
   153f0:	eor	r0, r0, r3
   153f4:	eor	r1, r1, r2
   153f8:	orr	r0, r1, r0
   153fc:	cmp	r0, #0
   15400:	bne	15434 <__assert_fail@plt+0x406c>
   15404:	b	15408 <__assert_fail@plt+0x4040>
   15408:	ldr	r0, [fp, #-12]
   1540c:	ldr	r1, [r0, #160]	; 0xa0
   15410:	ldr	r0, [r0, #164]	; 0xa4
   15414:	ldr	r2, [sp, #120]	; 0x78
   15418:	ldr	r3, [sp, #124]	; 0x7c
   1541c:	eor	r0, r0, r3
   15420:	eor	r1, r1, r2
   15424:	orr	r0, r1, r0
   15428:	cmp	r0, #0
   1542c:	beq	1544c <__assert_fail@plt+0x4084>
   15430:	b	15434 <__assert_fail@plt+0x406c>
   15434:	bl	11290 <__errno_location@plt>
   15438:	movw	lr, #2
   1543c:	str	lr, [r0]
   15440:	mvn	r0, #0
   15444:	str	r0, [fp, #-24]	; 0xffffffe8
   15448:	b	15498 <__assert_fail@plt+0x40d0>
   1544c:	b	15450 <__assert_fail@plt+0x4088>
   15450:	ldr	r0, [fp, #-8]
   15454:	ldr	r0, [r0, #48]	; 0x30
   15458:	and	r0, r0, #512	; 0x200
   1545c:	cmp	r0, #0
   15460:	beq	1548c <__assert_fail@plt+0x40c4>
   15464:	ldr	r0, [fp, #-8]
   15468:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1546c:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   15470:	mvn	r3, #0
   15474:	eor	r2, r2, r3
   15478:	and	r2, r2, #1
   1547c:	bl	16510 <__assert_fail@plt+0x5148>
   15480:	movw	r0, #0
   15484:	str	r0, [fp, #-4]
   15488:	b	154d8 <__assert_fail@plt+0x4110>
   1548c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15490:	bl	11338 <fchdir@plt>
   15494:	str	r0, [fp, #-24]	; 0xffffffe8
   15498:	ldr	r0, [fp, #-16]
   1549c:	cmp	r0, #0
   154a0:	bge	154d0 <__assert_fail@plt+0x4108>
   154a4:	bl	11290 <__errno_location@plt>
   154a8:	ldr	r0, [r0]
   154ac:	str	r0, [sp, #20]
   154b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   154b4:	bl	113a4 <close@plt>
   154b8:	ldr	lr, [sp, #20]
   154bc:	str	r0, [sp, #8]
   154c0:	str	lr, [sp, #4]
   154c4:	bl	11290 <__errno_location@plt>
   154c8:	ldr	lr, [sp, #4]
   154cc:	str	lr, [r0]
   154d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154d4:	str	r0, [fp, #-4]
   154d8:	ldr	r0, [fp, #-4]
   154dc:	mov	sp, fp
   154e0:	pop	{fp, pc}
   154e4:	push	{fp, lr}
   154e8:	mov	fp, sp
   154ec:	sub	sp, sp, #176	; 0xb0
   154f0:	str	r0, [fp, #-8]
   154f4:	str	r1, [fp, #-12]
   154f8:	ldr	r0, [fp, #-8]
   154fc:	ldr	r0, [r0]
   15500:	str	r0, [fp, #-68]	; 0xffffffbc
   15504:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15508:	ldr	r0, [r0, #12]
   1550c:	movw	r1, #0
   15510:	cmp	r0, r1
   15514:	movw	r0, #0
   15518:	movne	r0, #1
   1551c:	mvn	r1, #0
   15520:	eor	r0, r0, r1
   15524:	eor	r0, r0, r1
   15528:	and	r0, r0, #1
   1552c:	strb	r0, [fp, #-69]	; 0xffffffbb
   15530:	movw	r0, #0
   15534:	strb	r0, [fp, #-70]	; 0xffffffba
   15538:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   1553c:	tst	r0, #1
   15540:	beq	155c0 <__assert_fail@plt+0x41f8>
   15544:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15548:	ldr	r0, [r0, #12]
   1554c:	str	r0, [fp, #-80]	; 0xffffffb0
   15550:	ldr	r0, [fp, #-80]	; 0xffffffb0
   15554:	bl	1132c <dirfd@plt>
   15558:	str	r0, [fp, #-64]	; 0xffffffc0
   1555c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15560:	cmp	r0, #0
   15564:	bge	155bc <__assert_fail@plt+0x41f4>
   15568:	b	1556c <__assert_fail@plt+0x41a4>
   1556c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15570:	ldr	r0, [r0, #12]
   15574:	bl	113bc <closedir@plt>
   15578:	ldr	lr, [fp, #-68]	; 0xffffffbc
   1557c:	movw	r1, #0
   15580:	str	r1, [lr, #12]
   15584:	str	r0, [sp, #80]	; 0x50
   15588:	ldr	r0, [fp, #-12]
   1558c:	cmp	r0, #3
   15590:	bne	155b0 <__assert_fail@plt+0x41e8>
   15594:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15598:	movw	r1, #4
   1559c:	strh	r1, [r0, #56]	; 0x38
   155a0:	bl	11290 <__errno_location@plt>
   155a4:	ldr	r0, [r0]
   155a8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   155ac:	str	r0, [r1, #32]
   155b0:	movw	r0, #0
   155b4:	str	r0, [fp, #-4]
   155b8:	b	161b0 <__assert_fail@plt+0x4de8>
   155bc:	b	15798 <__assert_fail@plt+0x43d0>
   155c0:	ldr	r0, [fp, #-8]
   155c4:	ldr	r0, [r0, #48]	; 0x30
   155c8:	and	r0, r0, #4
   155cc:	cmp	r0, #0
   155d0:	bne	155f8 <__assert_fail@plt+0x4230>
   155d4:	ldr	r0, [fp, #-8]
   155d8:	ldr	r0, [r0, #48]	; 0x30
   155dc:	and	r0, r0, #512	; 0x200
   155e0:	cmp	r0, #0
   155e4:	beq	155f8 <__assert_fail@plt+0x4230>
   155e8:	ldr	r0, [fp, #-8]
   155ec:	ldr	r0, [r0, #32]
   155f0:	str	r0, [sp, #76]	; 0x4c
   155f4:	b	15604 <__assert_fail@plt+0x423c>
   155f8:	mvn	r0, #99	; 0x63
   155fc:	str	r0, [sp, #76]	; 0x4c
   15600:	b	15604 <__assert_fail@plt+0x423c>
   15604:	ldr	r0, [sp, #76]	; 0x4c
   15608:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1560c:	ldr	r1, [r1, #24]
   15610:	ldr	r2, [fp, #-8]
   15614:	ldr	r2, [r2, #48]	; 0x30
   15618:	and	r2, r2, #16
   1561c:	cmp	r2, #0
   15620:	movw	r2, #0
   15624:	str	r0, [sp, #72]	; 0x48
   15628:	str	r1, [sp, #68]	; 0x44
   1562c:	str	r2, [sp, #64]	; 0x40
   15630:	beq	15678 <__assert_fail@plt+0x42b0>
   15634:	ldr	r0, [fp, #-8]
   15638:	ldr	r0, [r0, #48]	; 0x30
   1563c:	and	r0, r0, #1
   15640:	cmp	r0, #0
   15644:	movw	r0, #0
   15648:	str	r0, [sp, #60]	; 0x3c
   1564c:	beq	15668 <__assert_fail@plt+0x42a0>
   15650:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15654:	ldr	r0, [r0, #48]	; 0x30
   15658:	cmp	r0, #0
   1565c:	movw	r0, #0
   15660:	moveq	r0, #1
   15664:	str	r0, [sp, #60]	; 0x3c
   15668:	ldr	r0, [sp, #60]	; 0x3c
   1566c:	mvn	r1, #0
   15670:	eor	r0, r0, r1
   15674:	str	r0, [sp, #64]	; 0x40
   15678:	ldr	r0, [sp, #64]	; 0x40
   1567c:	tst	r0, #1
   15680:	movw	r0, #32768	; 0x8000
   15684:	moveq	r0, #0
   15688:	ldr	r1, [sp, #72]	; 0x48
   1568c:	str	r0, [sp, #56]	; 0x38
   15690:	mov	r0, r1
   15694:	ldr	r1, [sp, #68]	; 0x44
   15698:	ldr	r2, [sp, #56]	; 0x38
   1569c:	sub	r3, fp, #64	; 0x40
   156a0:	bl	19ad0 <__assert_fail@plt+0x8708>
   156a4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   156a8:	str	r0, [r1, #12]
   156ac:	movw	r1, #0
   156b0:	cmp	r0, r1
   156b4:	bne	156ec <__assert_fail@plt+0x4324>
   156b8:	ldr	r0, [fp, #-12]
   156bc:	cmp	r0, #3
   156c0:	bne	156e0 <__assert_fail@plt+0x4318>
   156c4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   156c8:	movw	r1, #4
   156cc:	strh	r1, [r0, #56]	; 0x38
   156d0:	bl	11290 <__errno_location@plt>
   156d4:	ldr	r0, [r0]
   156d8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   156dc:	str	r0, [r1, #32]
   156e0:	movw	r0, #0
   156e4:	str	r0, [fp, #-4]
   156e8:	b	161b0 <__assert_fail@plt+0x4de8>
   156ec:	ldr	r0, [fp, #-68]	; 0xffffffbc
   156f0:	ldrh	r0, [r0, #56]	; 0x38
   156f4:	cmp	r0, #11
   156f8:	bne	1571c <__assert_fail@plt+0x4354>
   156fc:	ldr	r0, [fp, #-8]
   15700:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15704:	movw	r2, #0
   15708:	and	r2, r2, #1
   1570c:	bl	13e10 <__assert_fail@plt+0x2a48>
   15710:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15714:	strh	r0, [r1, #56]	; 0x38
   15718:	b	15794 <__assert_fail@plt+0x43cc>
   1571c:	ldr	r0, [fp, #-8]
   15720:	ldr	r0, [r0, #48]	; 0x30
   15724:	and	r0, r0, #256	; 0x100
   15728:	cmp	r0, #0
   1572c:	beq	15790 <__assert_fail@plt+0x43c8>
   15730:	b	15734 <__assert_fail@plt+0x436c>
   15734:	ldr	r0, [fp, #-8]
   15738:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1573c:	bl	15080 <__assert_fail@plt+0x3cb8>
   15740:	ldr	r0, [fp, #-8]
   15744:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15748:	movw	r2, #0
   1574c:	and	r2, r2, #1
   15750:	bl	13e10 <__assert_fail@plt+0x2a48>
   15754:	ldr	r1, [fp, #-8]
   15758:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1575c:	str	r0, [sp, #52]	; 0x34
   15760:	mov	r0, r1
   15764:	mov	r1, r2
   15768:	bl	163b0 <__assert_fail@plt+0x4fe8>
   1576c:	tst	r0, #1
   15770:	bne	1578c <__assert_fail@plt+0x43c4>
   15774:	bl	11290 <__errno_location@plt>
   15778:	movw	lr, #12
   1577c:	str	lr, [r0]
   15780:	movw	r0, #0
   15784:	str	r0, [fp, #-4]
   15788:	b	161b0 <__assert_fail@plt+0x4de8>
   1578c:	b	15790 <__assert_fail@plt+0x43c8>
   15790:	b	15794 <__assert_fail@plt+0x43cc>
   15794:	b	15798 <__assert_fail@plt+0x43d0>
   15798:	ldr	r0, [pc, #2588]	; 161bc <__assert_fail@plt+0x4df4>
   1579c:	ldr	r1, [fp, #-8]
   157a0:	ldr	r1, [r1, #44]	; 0x2c
   157a4:	movw	r2, #0
   157a8:	cmp	r1, r2
   157ac:	movw	r1, #0
   157b0:	movne	r1, #1
   157b4:	tst	r1, #1
   157b8:	mvn	r1, #0
   157bc:	movne	r0, r1
   157c0:	str	r0, [fp, #-76]	; 0xffffffb4
   157c4:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   157c8:	tst	r0, #1
   157cc:	beq	157dc <__assert_fail@plt+0x4414>
   157d0:	movw	r0, #1
   157d4:	strb	r0, [fp, #-37]	; 0xffffffdb
   157d8:	b	159a8 <__assert_fail@plt+0x45e0>
   157dc:	ldr	r0, [fp, #-12]
   157e0:	cmp	r0, #2
   157e4:	movw	r0, #0
   157e8:	str	r0, [sp, #48]	; 0x30
   157ec:	beq	15888 <__assert_fail@plt+0x44c0>
   157f0:	ldr	r0, [fp, #-8]
   157f4:	ldr	r0, [r0, #48]	; 0x30
   157f8:	and	r0, r0, #8
   157fc:	cmp	r0, #0
   15800:	movw	r0, #0
   15804:	str	r0, [sp, #44]	; 0x2c
   15808:	beq	15878 <__assert_fail@plt+0x44b0>
   1580c:	ldr	r0, [fp, #-8]
   15810:	ldr	r0, [r0, #48]	; 0x30
   15814:	and	r0, r0, #16
   15818:	cmp	r0, #0
   1581c:	movw	r0, #0
   15820:	str	r0, [sp, #44]	; 0x2c
   15824:	beq	15878 <__assert_fail@plt+0x44b0>
   15828:	ldr	r0, [fp, #-8]
   1582c:	ldr	r0, [r0, #48]	; 0x30
   15830:	and	r0, r0, #32
   15834:	cmp	r0, #0
   15838:	movw	r0, #0
   1583c:	str	r0, [sp, #44]	; 0x2c
   15840:	bne	15878 <__assert_fail@plt+0x44b0>
   15844:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15848:	ldr	r0, [r0, #84]	; 0x54
   1584c:	cmp	r0, #2
   15850:	movw	r0, #0
   15854:	str	r0, [sp, #44]	; 0x2c
   15858:	bne	15878 <__assert_fail@plt+0x44b0>
   1585c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15860:	ldr	r1, [fp, #-64]	; 0xffffffc0
   15864:	bl	16994 <__assert_fail@plt+0x55cc>
   15868:	cmp	r0, #0
   1586c:	movw	r0, #0
   15870:	movne	r0, #1
   15874:	str	r0, [sp, #44]	; 0x2c
   15878:	ldr	r0, [sp, #44]	; 0x2c
   1587c:	mvn	r1, #0
   15880:	eor	r0, r0, r1
   15884:	str	r0, [sp, #48]	; 0x30
   15888:	ldr	r0, [sp, #48]	; 0x30
   1588c:	and	r0, r0, #1
   15890:	strb	r0, [fp, #-37]	; 0xffffffdb
   15894:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   15898:	tst	r0, #1
   1589c:	bne	158ac <__assert_fail@plt+0x44e4>
   158a0:	ldr	r0, [fp, #-12]
   158a4:	cmp	r0, #3
   158a8:	bne	159a4 <__assert_fail@plt+0x45dc>
   158ac:	ldr	r0, [fp, #-8]
   158b0:	ldr	r0, [r0, #48]	; 0x30
   158b4:	and	r0, r0, #512	; 0x200
   158b8:	cmp	r0, #0
   158bc:	beq	158d4 <__assert_fail@plt+0x450c>
   158c0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   158c4:	movw	r1, #1030	; 0x406
   158c8:	movw	r2, #3
   158cc:	bl	20570 <__assert_fail@plt+0xf1a8>
   158d0:	str	r0, [fp, #-64]	; 0xffffffc0
   158d4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   158d8:	cmp	r0, #0
   158dc:	blt	158fc <__assert_fail@plt+0x4534>
   158e0:	ldr	r0, [fp, #-8]
   158e4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   158e8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   158ec:	movw	r3, #0
   158f0:	bl	15220 <__assert_fail@plt+0x3e58>
   158f4:	cmp	r0, #0
   158f8:	beq	15998 <__assert_fail@plt+0x45d0>
   158fc:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   15900:	tst	r0, #1
   15904:	beq	15924 <__assert_fail@plt+0x455c>
   15908:	ldr	r0, [fp, #-12]
   1590c:	cmp	r0, #3
   15910:	bne	15924 <__assert_fail@plt+0x455c>
   15914:	bl	11290 <__errno_location@plt>
   15918:	ldr	r0, [r0]
   1591c:	ldr	lr, [fp, #-68]	; 0xffffffbc
   15920:	str	r0, [lr, #32]
   15924:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15928:	ldrh	r1, [r0, #58]	; 0x3a
   1592c:	orr	r1, r1, #1
   15930:	strh	r1, [r0, #58]	; 0x3a
   15934:	movw	r0, #0
   15938:	strb	r0, [fp, #-37]	; 0xffffffdb
   1593c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15940:	ldr	r0, [r0, #12]
   15944:	bl	113bc <closedir@plt>
   15948:	ldr	lr, [fp, #-68]	; 0xffffffbc
   1594c:	movw	r1, #0
   15950:	str	r1, [lr, #12]
   15954:	str	r0, [sp, #40]	; 0x28
   15958:	ldr	r0, [fp, #-8]
   1595c:	ldr	r0, [r0, #48]	; 0x30
   15960:	and	r0, r0, #512	; 0x200
   15964:	cmp	r0, #0
   15968:	beq	15988 <__assert_fail@plt+0x45c0>
   1596c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15970:	movw	r1, #0
   15974:	cmp	r1, r0
   15978:	bgt	15988 <__assert_fail@plt+0x45c0>
   1597c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15980:	bl	113a4 <close@plt>
   15984:	str	r0, [sp, #36]	; 0x24
   15988:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1598c:	movw	r1, #0
   15990:	str	r1, [r0, #12]
   15994:	b	159a0 <__assert_fail@plt+0x45d8>
   15998:	movw	r0, #1
   1599c:	strb	r0, [fp, #-37]	; 0xffffffdb
   159a0:	b	159a4 <__assert_fail@plt+0x45dc>
   159a4:	b	159a8 <__assert_fail@plt+0x45e0>
   159a8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   159ac:	ldr	r0, [r0, #28]
   159b0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   159b4:	ldr	r1, [r1, #40]	; 0x28
   159b8:	sub	r1, r1, #1
   159bc:	add	r0, r0, r1
   159c0:	ldrb	r0, [r0]
   159c4:	cmp	r0, #47	; 0x2f
   159c8:	bne	159e0 <__assert_fail@plt+0x4618>
   159cc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   159d0:	ldr	r0, [r0, #40]	; 0x28
   159d4:	sub	r0, r0, #1
   159d8:	str	r0, [sp, #32]
   159dc:	b	159ec <__assert_fail@plt+0x4624>
   159e0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   159e4:	ldr	r0, [r0, #40]	; 0x28
   159e8:	str	r0, [sp, #32]
   159ec:	ldr	r0, [sp, #32]
   159f0:	str	r0, [fp, #-48]	; 0xffffffd0
   159f4:	ldr	r0, [fp, #-8]
   159f8:	ldr	r0, [r0, #48]	; 0x30
   159fc:	and	r0, r0, #4
   15a00:	cmp	r0, #0
   15a04:	beq	15a34 <__assert_fail@plt+0x466c>
   15a08:	ldr	r0, [fp, #-8]
   15a0c:	ldr	r0, [r0, #24]
   15a10:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15a14:	add	r0, r0, r1
   15a18:	str	r0, [fp, #-60]	; 0xffffffc4
   15a1c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15a20:	add	r1, r0, #1
   15a24:	str	r1, [fp, #-60]	; 0xffffffc4
   15a28:	movw	r1, #47	; 0x2f
   15a2c:	strb	r1, [r0]
   15a30:	b	15a3c <__assert_fail@plt+0x4674>
   15a34:	movw	r0, #0
   15a38:	str	r0, [fp, #-60]	; 0xffffffc4
   15a3c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15a40:	add	r0, r0, #1
   15a44:	str	r0, [fp, #-48]	; 0xffffffd0
   15a48:	ldr	r0, [fp, #-8]
   15a4c:	ldr	r0, [r0, #36]	; 0x24
   15a50:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15a54:	sub	r0, r0, r1
   15a58:	str	r0, [fp, #-52]	; 0xffffffcc
   15a5c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15a60:	ldr	r0, [r0, #48]	; 0x30
   15a64:	add	r0, r0, #1
   15a68:	str	r0, [fp, #-44]	; 0xffffffd4
   15a6c:	movw	r0, #0
   15a70:	strb	r0, [fp, #-38]	; 0xffffffda
   15a74:	movw	r0, #0
   15a78:	str	r0, [fp, #-20]	; 0xffffffec
   15a7c:	str	r0, [fp, #-28]	; 0xffffffe4
   15a80:	str	r0, [fp, #-24]	; 0xffffffe8
   15a84:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15a88:	ldr	r0, [r0, #12]
   15a8c:	movw	r1, #0
   15a90:	cmp	r0, r1
   15a94:	beq	15f94 <__assert_fail@plt+0x4bcc>
   15a98:	bl	11290 <__errno_location@plt>
   15a9c:	movw	lr, #0
   15aa0:	str	lr, [r0]
   15aa4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15aa8:	ldr	r0, [r0, #12]
   15aac:	bl	11314 <readdir64@plt>
   15ab0:	str	r0, [sp, #88]	; 0x58
   15ab4:	ldr	r0, [sp, #88]	; 0x58
   15ab8:	movw	lr, #0
   15abc:	cmp	r0, lr
   15ac0:	bne	15b28 <__assert_fail@plt+0x4760>
   15ac4:	bl	11290 <__errno_location@plt>
   15ac8:	ldr	r0, [r0]
   15acc:	cmp	r0, #0
   15ad0:	beq	15b24 <__assert_fail@plt+0x475c>
   15ad4:	bl	11290 <__errno_location@plt>
   15ad8:	ldr	r0, [r0]
   15adc:	ldr	lr, [fp, #-68]	; 0xffffffbc
   15ae0:	str	r0, [lr, #32]
   15ae4:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   15ae8:	tst	r0, #1
   15aec:	movw	r0, #1
   15af0:	str	r0, [sp, #28]
   15af4:	bne	15b0c <__assert_fail@plt+0x4744>
   15af8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15afc:	cmp	r0, #0
   15b00:	movw	r0, #0
   15b04:	movne	r0, #1
   15b08:	str	r0, [sp, #28]
   15b0c:	ldr	r0, [sp, #28]
   15b10:	tst	r0, #1
   15b14:	movw	r0, #7
   15b18:	moveq	r0, #4
   15b1c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15b20:	strh	r0, [r1, #56]	; 0x38
   15b24:	b	15f94 <__assert_fail@plt+0x4bcc>
   15b28:	ldr	r0, [fp, #-8]
   15b2c:	ldr	r0, [r0, #48]	; 0x30
   15b30:	and	r0, r0, #32
   15b34:	cmp	r0, #0
   15b38:	bne	15b80 <__assert_fail@plt+0x47b8>
   15b3c:	ldr	r0, [sp, #88]	; 0x58
   15b40:	ldrb	r0, [r0, #19]
   15b44:	cmp	r0, #46	; 0x2e
   15b48:	bne	15b80 <__assert_fail@plt+0x47b8>
   15b4c:	ldr	r0, [sp, #88]	; 0x58
   15b50:	ldrsb	r0, [r0, #20]
   15b54:	cmp	r0, #0
   15b58:	beq	15b7c <__assert_fail@plt+0x47b4>
   15b5c:	ldr	r0, [sp, #88]	; 0x58
   15b60:	ldrb	r0, [r0, #20]
   15b64:	cmp	r0, #46	; 0x2e
   15b68:	bne	15b80 <__assert_fail@plt+0x47b8>
   15b6c:	ldr	r0, [sp, #88]	; 0x58
   15b70:	ldrsb	r0, [r0, #21]
   15b74:	cmp	r0, #0
   15b78:	bne	15b80 <__assert_fail@plt+0x47b8>
   15b7c:	b	15a84 <__assert_fail@plt+0x46bc>
   15b80:	ldr	r0, [sp, #88]	; 0x58
   15b84:	add	r0, r0, #19
   15b88:	bl	11260 <strlen@plt>
   15b8c:	str	r0, [fp, #-84]	; 0xffffffac
   15b90:	ldr	r0, [fp, #-8]
   15b94:	ldr	lr, [sp, #88]	; 0x58
   15b98:	add	r1, lr, #19
   15b9c:	ldr	r2, [fp, #-84]	; 0xffffffac
   15ba0:	bl	13cc0 <__assert_fail@plt+0x28f8>
   15ba4:	str	r0, [fp, #-16]
   15ba8:	ldr	r0, [fp, #-16]
   15bac:	movw	r1, #0
   15bb0:	cmp	r0, r1
   15bb4:	bne	15bbc <__assert_fail@plt+0x47f4>
   15bb8:	b	15bfc <__assert_fail@plt+0x4834>
   15bbc:	ldr	r0, [fp, #-84]	; 0xffffffac
   15bc0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15bc4:	cmp	r0, r1
   15bc8:	bcc	15ccc <__assert_fail@plt+0x4904>
   15bcc:	ldr	r0, [fp, #-8]
   15bd0:	ldr	r0, [r0, #24]
   15bd4:	str	r0, [fp, #-32]	; 0xffffffe0
   15bd8:	ldr	r0, [fp, #-8]
   15bdc:	ldr	r1, [fp, #-84]	; 0xffffffac
   15be0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15be4:	add	r1, r1, r2
   15be8:	add	r1, r1, #1
   15bec:	bl	13bc8 <__assert_fail@plt+0x2800>
   15bf0:	tst	r0, #1
   15bf4:	bne	15c70 <__assert_fail@plt+0x48a8>
   15bf8:	b	15bfc <__assert_fail@plt+0x4834>
   15bfc:	bl	11290 <__errno_location@plt>
   15c00:	ldr	r0, [r0]
   15c04:	str	r0, [fp, #-36]	; 0xffffffdc
   15c08:	ldr	r0, [fp, #-16]
   15c0c:	bl	20a84 <__assert_fail@plt+0xf6bc>
   15c10:	ldr	r0, [fp, #-20]	; 0xffffffec
   15c14:	bl	14368 <__assert_fail@plt+0x2fa0>
   15c18:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15c1c:	ldr	r0, [r0, #12]
   15c20:	bl	113bc <closedir@plt>
   15c24:	ldr	lr, [fp, #-68]	; 0xffffffbc
   15c28:	movw	r1, #0
   15c2c:	str	r1, [lr, #12]
   15c30:	str	r0, [sp, #24]
   15c34:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15c38:	movw	r1, #7
   15c3c:	strh	r1, [r0, #56]	; 0x38
   15c40:	ldr	r0, [fp, #-8]
   15c44:	ldr	r1, [r0, #48]	; 0x30
   15c48:	orr	r1, r1, #8192	; 0x2000
   15c4c:	str	r1, [r0, #48]	; 0x30
   15c50:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15c54:	str	r0, [sp, #20]
   15c58:	bl	11290 <__errno_location@plt>
   15c5c:	ldr	r1, [sp, #20]
   15c60:	str	r1, [r0]
   15c64:	movw	r0, #0
   15c68:	str	r0, [fp, #-4]
   15c6c:	b	161b0 <__assert_fail@plt+0x4de8>
   15c70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15c74:	ldr	r1, [fp, #-8]
   15c78:	ldr	r1, [r1, #24]
   15c7c:	cmp	r0, r1
   15c80:	beq	15cb8 <__assert_fail@plt+0x48f0>
   15c84:	movw	r0, #1
   15c88:	strb	r0, [fp, #-38]	; 0xffffffda
   15c8c:	ldr	r0, [fp, #-8]
   15c90:	ldr	r0, [r0, #48]	; 0x30
   15c94:	and	r0, r0, #4
   15c98:	cmp	r0, #0
   15c9c:	beq	15cb4 <__assert_fail@plt+0x48ec>
   15ca0:	ldr	r0, [fp, #-8]
   15ca4:	ldr	r0, [r0, #24]
   15ca8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15cac:	add	r0, r0, r1
   15cb0:	str	r0, [fp, #-60]	; 0xffffffc4
   15cb4:	b	15cb8 <__assert_fail@plt+0x48f0>
   15cb8:	ldr	r0, [fp, #-8]
   15cbc:	ldr	r0, [r0, #36]	; 0x24
   15cc0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15cc4:	sub	r0, r0, r1
   15cc8:	str	r0, [fp, #-52]	; 0xffffffcc
   15ccc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15cd0:	ldr	r1, [fp, #-84]	; 0xffffffac
   15cd4:	add	r0, r0, r1
   15cd8:	str	r0, [fp, #-56]	; 0xffffffc8
   15cdc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15ce0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15ce4:	cmp	r0, r1
   15ce8:	bcs	15d4c <__assert_fail@plt+0x4984>
   15cec:	ldr	r0, [fp, #-16]
   15cf0:	bl	20a84 <__assert_fail@plt+0xf6bc>
   15cf4:	ldr	r0, [fp, #-20]	; 0xffffffec
   15cf8:	bl	14368 <__assert_fail@plt+0x2fa0>
   15cfc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15d00:	ldr	r0, [r0, #12]
   15d04:	bl	113bc <closedir@plt>
   15d08:	ldr	lr, [fp, #-68]	; 0xffffffbc
   15d0c:	movw	r1, #0
   15d10:	str	r1, [lr, #12]
   15d14:	str	r0, [sp, #16]
   15d18:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15d1c:	movw	r1, #7
   15d20:	strh	r1, [r0, #56]	; 0x38
   15d24:	ldr	r0, [fp, #-8]
   15d28:	ldr	r1, [r0, #48]	; 0x30
   15d2c:	orr	r1, r1, #8192	; 0x2000
   15d30:	str	r1, [r0, #48]	; 0x30
   15d34:	bl	11290 <__errno_location@plt>
   15d38:	movw	r1, #36	; 0x24
   15d3c:	str	r1, [r0]
   15d40:	movw	r0, #0
   15d44:	str	r0, [fp, #-4]
   15d48:	b	161b0 <__assert_fail@plt+0x4de8>
   15d4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d50:	ldr	r1, [fp, #-16]
   15d54:	str	r0, [r1, #48]	; 0x30
   15d58:	ldr	r0, [fp, #-8]
   15d5c:	ldr	r0, [r0]
   15d60:	ldr	r1, [fp, #-16]
   15d64:	str	r0, [r1, #4]
   15d68:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15d6c:	ldr	r1, [fp, #-16]
   15d70:	str	r0, [r1, #40]	; 0x28
   15d74:	ldr	r0, [sp, #88]	; 0x58
   15d78:	ldr	r1, [r0]
   15d7c:	ldr	r0, [r0, #4]
   15d80:	ldr	r2, [fp, #-16]
   15d84:	str	r0, [r2, #164]	; 0xa4
   15d88:	str	r1, [r2, #160]	; 0xa0
   15d8c:	ldr	r0, [fp, #-8]
   15d90:	ldr	r0, [r0, #48]	; 0x30
   15d94:	and	r0, r0, #4
   15d98:	cmp	r0, #0
   15d9c:	beq	15dd0 <__assert_fail@plt+0x4a08>
   15da0:	ldr	r0, [fp, #-16]
   15da4:	ldr	r0, [r0, #28]
   15da8:	ldr	r1, [fp, #-16]
   15dac:	str	r0, [r1, #24]
   15db0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15db4:	ldr	r1, [fp, #-16]
   15db8:	add	r1, r1, #168	; 0xa8
   15dbc:	ldr	r2, [fp, #-16]
   15dc0:	ldr	r2, [r2, #52]	; 0x34
   15dc4:	add	r2, r2, #1
   15dc8:	bl	11128 <memmove@plt>
   15dcc:	b	15de0 <__assert_fail@plt+0x4a18>
   15dd0:	ldr	r0, [fp, #-16]
   15dd4:	add	r0, r0, #168	; 0xa8
   15dd8:	ldr	r1, [fp, #-16]
   15ddc:	str	r0, [r1, #24]
   15de0:	ldr	r0, [fp, #-8]
   15de4:	ldr	r0, [r0, #44]	; 0x2c
   15de8:	movw	r1, #0
   15dec:	cmp	r0, r1
   15df0:	beq	15e08 <__assert_fail@plt+0x4a40>
   15df4:	ldr	r0, [fp, #-8]
   15df8:	ldr	r0, [r0, #48]	; 0x30
   15dfc:	and	r0, r0, #1024	; 0x400
   15e00:	cmp	r0, #0
   15e04:	beq	15ee0 <__assert_fail@plt+0x4b18>
   15e08:	ldr	r0, [fp, #-8]
   15e0c:	ldr	r0, [r0, #48]	; 0x30
   15e10:	and	r0, r0, #8
   15e14:	cmp	r0, #0
   15e18:	movw	r0, #0
   15e1c:	str	r0, [sp, #12]
   15e20:	beq	15e98 <__assert_fail@plt+0x4ad0>
   15e24:	ldr	r0, [sp, #88]	; 0x58
   15e28:	ldrb	r0, [r0, #18]
   15e2c:	cmp	r0, #0
   15e30:	movw	r0, #0
   15e34:	str	r0, [sp, #12]
   15e38:	beq	15e98 <__assert_fail@plt+0x4ad0>
   15e3c:	ldr	r0, [sp, #88]	; 0x58
   15e40:	ldrb	r0, [r0, #18]
   15e44:	cmp	r0, #4
   15e48:	movw	r0, #0
   15e4c:	str	r0, [sp, #12]
   15e50:	beq	15e98 <__assert_fail@plt+0x4ad0>
   15e54:	ldr	r0, [fp, #-8]
   15e58:	ldr	r0, [r0, #48]	; 0x30
   15e5c:	and	r0, r0, #16
   15e60:	cmp	r0, #0
   15e64:	movw	r0, #1
   15e68:	str	r0, [sp, #8]
   15e6c:	bne	15e90 <__assert_fail@plt+0x4ac8>
   15e70:	ldr	r0, [sp, #88]	; 0x58
   15e74:	ldrb	r0, [r0, #18]
   15e78:	cmp	r0, #10
   15e7c:	movw	r0, #0
   15e80:	moveq	r0, #1
   15e84:	mvn	r1, #0
   15e88:	eor	r0, r0, r1
   15e8c:	str	r0, [sp, #8]
   15e90:	ldr	r0, [sp, #8]
   15e94:	str	r0, [sp, #12]
   15e98:	ldr	r0, [sp, #12]
   15e9c:	and	r0, r0, #1
   15ea0:	strb	r0, [sp, #87]	; 0x57
   15ea4:	ldr	r0, [fp, #-16]
   15ea8:	movw	r1, #11
   15eac:	strh	r1, [r0, #56]	; 0x38
   15eb0:	ldr	r0, [fp, #-16]
   15eb4:	add	r0, r0, #64	; 0x40
   15eb8:	ldr	r1, [sp, #88]	; 0x58
   15ebc:	ldrb	r1, [r1, #18]
   15ec0:	bl	16a50 <__assert_fail@plt+0x5688>
   15ec4:	ldr	r0, [fp, #-16]
   15ec8:	ldrb	r1, [sp, #87]	; 0x57
   15ecc:	mvn	lr, #0
   15ed0:	eor	r1, r1, lr
   15ed4:	and	r1, r1, #1
   15ed8:	bl	13db8 <__assert_fail@plt+0x29f0>
   15edc:	b	15efc <__assert_fail@plt+0x4b34>
   15ee0:	ldr	r0, [fp, #-8]
   15ee4:	ldr	r1, [fp, #-16]
   15ee8:	movw	r2, #0
   15eec:	and	r2, r2, #1
   15ef0:	bl	13e10 <__assert_fail@plt+0x2a48>
   15ef4:	ldr	r1, [fp, #-16]
   15ef8:	strh	r0, [r1, #56]	; 0x38
   15efc:	ldr	r0, [fp, #-16]
   15f00:	movw	r1, #0
   15f04:	str	r1, [r0, #8]
   15f08:	ldr	r0, [fp, #-20]	; 0xffffffec
   15f0c:	cmp	r0, r1
   15f10:	bne	15f24 <__assert_fail@plt+0x4b5c>
   15f14:	ldr	r0, [fp, #-16]
   15f18:	str	r0, [fp, #-28]	; 0xffffffe4
   15f1c:	str	r0, [fp, #-20]	; 0xffffffec
   15f20:	b	15f38 <__assert_fail@plt+0x4b70>
   15f24:	ldr	r0, [fp, #-16]
   15f28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15f2c:	str	r0, [r1, #8]
   15f30:	ldr	r0, [fp, #-16]
   15f34:	str	r0, [fp, #-28]	; 0xffffffe4
   15f38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f3c:	movw	r1, #10000	; 0x2710
   15f40:	cmp	r0, r1
   15f44:	bne	15f70 <__assert_fail@plt+0x4ba8>
   15f48:	ldr	r0, [fp, #-8]
   15f4c:	ldr	r0, [r0, #44]	; 0x2c
   15f50:	movw	r1, #0
   15f54:	cmp	r0, r1
   15f58:	bne	15f70 <__assert_fail@plt+0x4ba8>
   15f5c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15f60:	ldr	r1, [fp, #-64]	; 0xffffffc0
   15f64:	bl	16b20 <__assert_fail@plt+0x5758>
   15f68:	and	r0, r0, #1
   15f6c:	strb	r0, [fp, #-70]	; 0xffffffba
   15f70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f74:	add	r0, r0, #1
   15f78:	str	r0, [fp, #-24]	; 0xffffffe8
   15f7c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   15f80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15f84:	cmp	r0, r1
   15f88:	bhi	15f90 <__assert_fail@plt+0x4bc8>
   15f8c:	b	15fd0 <__assert_fail@plt+0x4c08>
   15f90:	b	15a84 <__assert_fail@plt+0x46bc>
   15f94:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15f98:	ldr	r0, [r0, #12]
   15f9c:	movw	r1, #0
   15fa0:	cmp	r0, r1
   15fa4:	beq	15fcc <__assert_fail@plt+0x4c04>
   15fa8:	b	15fac <__assert_fail@plt+0x4be4>
   15fac:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15fb0:	ldr	r0, [r0, #12]
   15fb4:	bl	113bc <closedir@plt>
   15fb8:	ldr	lr, [fp, #-68]	; 0xffffffbc
   15fbc:	movw	r1, #0
   15fc0:	str	r1, [lr, #12]
   15fc4:	str	r0, [sp, #4]
   15fc8:	b	15fcc <__assert_fail@plt+0x4c04>
   15fcc:	b	15fd0 <__assert_fail@plt+0x4c08>
   15fd0:	ldrb	r0, [fp, #-38]	; 0xffffffda
   15fd4:	tst	r0, #1
   15fd8:	beq	15fe8 <__assert_fail@plt+0x4c20>
   15fdc:	ldr	r0, [fp, #-8]
   15fe0:	ldr	r1, [fp, #-20]	; 0xffffffec
   15fe4:	bl	16bb4 <__assert_fail@plt+0x57ec>
   15fe8:	ldr	r0, [fp, #-8]
   15fec:	ldr	r0, [r0, #48]	; 0x30
   15ff0:	and	r0, r0, #4
   15ff4:	cmp	r0, #0
   15ff8:	beq	16038 <__assert_fail@plt+0x4c70>
   15ffc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16000:	ldr	r1, [fp, #-8]
   16004:	ldr	r1, [r1, #36]	; 0x24
   16008:	cmp	r0, r1
   1600c:	beq	1601c <__assert_fail@plt+0x4c54>
   16010:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16014:	cmp	r0, #0
   16018:	bne	1602c <__assert_fail@plt+0x4c64>
   1601c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   16020:	mvn	r1, #0
   16024:	add	r0, r0, r1
   16028:	str	r0, [fp, #-60]	; 0xffffffc4
   1602c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   16030:	movw	r1, #0
   16034:	strb	r1, [r0]
   16038:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   1603c:	tst	r0, #1
   16040:	bne	160e0 <__assert_fail@plt+0x4d18>
   16044:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   16048:	tst	r0, #1
   1604c:	beq	160e0 <__assert_fail@plt+0x4d18>
   16050:	ldr	r0, [fp, #-12]
   16054:	cmp	r0, #1
   16058:	beq	16068 <__assert_fail@plt+0x4ca0>
   1605c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16060:	cmp	r0, #0
   16064:	bne	160e0 <__assert_fail@plt+0x4d18>
   16068:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1606c:	ldr	r0, [r0, #48]	; 0x30
   16070:	cmp	r0, #0
   16074:	bne	1608c <__assert_fail@plt+0x4cc4>
   16078:	ldr	r0, [fp, #-8]
   1607c:	bl	161c0 <__assert_fail@plt+0x4df8>
   16080:	cmp	r0, #0
   16084:	bne	160b0 <__assert_fail@plt+0x4ce8>
   16088:	b	160e0 <__assert_fail@plt+0x4d18>
   1608c:	ldr	r0, [fp, #-8]
   16090:	ldr	r1, [fp, #-68]	; 0xffffffbc
   16094:	ldr	r1, [r1, #4]
   16098:	mvn	r2, #0
   1609c:	movw	r3, #14351	; 0x380f
   160a0:	movt	r3, #2
   160a4:	bl	15220 <__assert_fail@plt+0x3e58>
   160a8:	cmp	r0, #0
   160ac:	beq	160e0 <__assert_fail@plt+0x4d18>
   160b0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   160b4:	movw	r1, #7
   160b8:	strh	r1, [r0, #56]	; 0x38
   160bc:	ldr	r0, [fp, #-8]
   160c0:	ldr	r1, [r0, #48]	; 0x30
   160c4:	orr	r1, r1, #8192	; 0x2000
   160c8:	str	r1, [r0, #48]	; 0x30
   160cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   160d0:	bl	14368 <__assert_fail@plt+0x2fa0>
   160d4:	movw	r0, #0
   160d8:	str	r0, [fp, #-4]
   160dc:	b	161b0 <__assert_fail@plt+0x4de8>
   160e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   160e4:	cmp	r0, #0
   160e8:	bne	16138 <__assert_fail@plt+0x4d70>
   160ec:	ldr	r0, [fp, #-12]
   160f0:	cmp	r0, #3
   160f4:	bne	16124 <__assert_fail@plt+0x4d5c>
   160f8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   160fc:	ldrh	r0, [r0, #56]	; 0x38
   16100:	cmp	r0, #4
   16104:	beq	16124 <__assert_fail@plt+0x4d5c>
   16108:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1610c:	ldrh	r0, [r0, #56]	; 0x38
   16110:	cmp	r0, #7
   16114:	beq	16124 <__assert_fail@plt+0x4d5c>
   16118:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1611c:	movw	r1, #6
   16120:	strh	r1, [r0, #56]	; 0x38
   16124:	ldr	r0, [fp, #-20]	; 0xffffffec
   16128:	bl	14368 <__assert_fail@plt+0x2fa0>
   1612c:	movw	r0, #0
   16130:	str	r0, [fp, #-4]
   16134:	b	161b0 <__assert_fail@plt+0x4de8>
   16138:	ldrb	r0, [fp, #-70]	; 0xffffffba
   1613c:	tst	r0, #1
   16140:	beq	16174 <__assert_fail@plt+0x4dac>
   16144:	ldr	r0, [fp, #-8]
   16148:	movw	r1, #27888	; 0x6cf0
   1614c:	movt	r1, #1
   16150:	str	r1, [r0, #44]	; 0x2c
   16154:	ldr	r0, [fp, #-8]
   16158:	ldr	r1, [fp, #-20]	; 0xffffffec
   1615c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16160:	bl	14028 <__assert_fail@plt+0x2c60>
   16164:	str	r0, [fp, #-20]	; 0xffffffec
   16168:	ldr	r0, [fp, #-8]
   1616c:	movw	r1, #0
   16170:	str	r1, [r0, #44]	; 0x2c
   16174:	ldr	r0, [fp, #-8]
   16178:	ldr	r0, [r0, #44]	; 0x2c
   1617c:	movw	r1, #0
   16180:	cmp	r0, r1
   16184:	beq	161a8 <__assert_fail@plt+0x4de0>
   16188:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1618c:	cmp	r0, #1
   16190:	bls	161a8 <__assert_fail@plt+0x4de0>
   16194:	ldr	r0, [fp, #-8]
   16198:	ldr	r1, [fp, #-20]	; 0xffffffec
   1619c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   161a0:	bl	14028 <__assert_fail@plt+0x2c60>
   161a4:	str	r0, [fp, #-20]	; 0xffffffec
   161a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   161ac:	str	r0, [fp, #-4]
   161b0:	ldr	r0, [fp, #-4]
   161b4:	mov	sp, fp
   161b8:	pop	{fp, pc}
   161bc:	andeq	r8, r1, r0, lsr #13
   161c0:	push	{fp, lr}
   161c4:	mov	fp, sp
   161c8:	sub	sp, sp, #32
   161cc:	str	r0, [fp, #-4]
   161d0:	ldr	r0, [fp, #-4]
   161d4:	ldr	r0, [r0, #48]	; 0x30
   161d8:	and	r0, r0, #4
   161dc:	cmp	r0, #0
   161e0:	movw	r0, #0
   161e4:	str	r0, [fp, #-12]
   161e8:	bne	162ac <__assert_fail@plt+0x4ee4>
   161ec:	ldr	r0, [fp, #-4]
   161f0:	ldr	r0, [r0, #48]	; 0x30
   161f4:	and	r0, r0, #512	; 0x200
   161f8:	cmp	r0, #0
   161fc:	beq	16260 <__assert_fail@plt+0x4e98>
   16200:	ldr	r0, [fp, #-4]
   16204:	ldr	r1, [fp, #-4]
   16208:	ldr	r1, [r1, #48]	; 0x30
   1620c:	and	r1, r1, #512	; 0x200
   16210:	cmp	r1, #0
   16214:	str	r0, [sp, #16]
   16218:	beq	16228 <__assert_fail@plt+0x4e60>
   1621c:	mvn	r0, #99	; 0x63
   16220:	str	r0, [sp, #12]
   16224:	b	16234 <__assert_fail@plt+0x4e6c>
   16228:	ldr	r0, [fp, #-4]
   1622c:	ldr	r0, [r0, #28]
   16230:	str	r0, [sp, #12]
   16234:	ldr	r0, [sp, #12]
   16238:	ldr	r1, [sp, #16]
   1623c:	str	r0, [sp, #8]
   16240:	mov	r0, r1
   16244:	ldr	r1, [sp, #8]
   16248:	movw	r2, #1
   1624c:	and	r2, r2, #1
   16250:	bl	16510 <__assert_fail@plt+0x5148>
   16254:	movw	r0, #0
   16258:	str	r0, [sp, #4]
   1625c:	b	16298 <__assert_fail@plt+0x4ed0>
   16260:	ldr	r0, [fp, #-4]
   16264:	ldr	r0, [r0, #48]	; 0x30
   16268:	and	r0, r0, #512	; 0x200
   1626c:	cmp	r0, #0
   16270:	beq	16280 <__assert_fail@plt+0x4eb8>
   16274:	mvn	r0, #99	; 0x63
   16278:	str	r0, [sp]
   1627c:	b	1628c <__assert_fail@plt+0x4ec4>
   16280:	ldr	r0, [fp, #-4]
   16284:	ldr	r0, [r0, #28]
   16288:	str	r0, [sp]
   1628c:	ldr	r0, [sp]
   16290:	bl	11338 <fchdir@plt>
   16294:	str	r0, [sp, #4]
   16298:	ldr	r0, [sp, #4]
   1629c:	cmp	r0, #0
   162a0:	movw	r0, #0
   162a4:	movne	r0, #1
   162a8:	str	r0, [fp, #-12]
   162ac:	ldr	r0, [fp, #-12]
   162b0:	and	r0, r0, #1
   162b4:	str	r0, [fp, #-8]
   162b8:	ldr	r0, [fp, #-4]
   162bc:	add	r0, r0, #60	; 0x3c
   162c0:	bl	145d8 <__assert_fail@plt+0x3210>
   162c4:	ldr	r0, [fp, #-8]
   162c8:	mov	sp, fp
   162cc:	pop	{fp, pc}
   162d0:	push	{fp, lr}
   162d4:	mov	fp, sp
   162d8:	sub	sp, sp, #16
   162dc:	str	r0, [fp, #-4]
   162e0:	str	r1, [sp, #8]
   162e4:	ldr	r0, [sp, #8]
   162e8:	ldr	r0, [r0, #52]	; 0x34
   162ec:	ldr	r1, [sp, #8]
   162f0:	str	r0, [r1, #40]	; 0x28
   162f4:	str	r0, [sp, #4]
   162f8:	ldr	r0, [fp, #-4]
   162fc:	ldr	r0, [r0, #24]
   16300:	ldr	r1, [sp, #8]
   16304:	add	r1, r1, #168	; 0xa8
   16308:	ldr	r2, [sp, #4]
   1630c:	add	r2, r2, #1
   16310:	bl	11128 <memmove@plt>
   16314:	ldr	r0, [sp, #8]
   16318:	add	r0, r0, #168	; 0xa8
   1631c:	movw	r1, #47	; 0x2f
   16320:	bl	112f0 <strrchr@plt>
   16324:	str	r0, [sp]
   16328:	movw	r1, #0
   1632c:	cmp	r0, r1
   16330:	beq	16390 <__assert_fail@plt+0x4fc8>
   16334:	ldr	r0, [sp]
   16338:	ldr	r1, [sp, #8]
   1633c:	add	r1, r1, #168	; 0xa8
   16340:	cmp	r0, r1
   16344:	bne	16358 <__assert_fail@plt+0x4f90>
   16348:	ldr	r0, [sp]
   1634c:	ldrb	r0, [r0, #1]
   16350:	cmp	r0, #0
   16354:	beq	16390 <__assert_fail@plt+0x4fc8>
   16358:	ldr	r0, [sp]
   1635c:	add	r0, r0, #1
   16360:	str	r0, [sp]
   16364:	bl	11260 <strlen@plt>
   16368:	str	r0, [sp, #4]
   1636c:	ldr	r0, [sp, #8]
   16370:	add	r0, r0, #168	; 0xa8
   16374:	ldr	r1, [sp]
   16378:	ldr	lr, [sp, #4]
   1637c:	add	r2, lr, #1
   16380:	bl	11128 <memmove@plt>
   16384:	ldr	r0, [sp, #4]
   16388:	ldr	r1, [sp, #8]
   1638c:	str	r0, [r1, #52]	; 0x34
   16390:	ldr	r0, [fp, #-4]
   16394:	ldr	r0, [r0, #24]
   16398:	ldr	r1, [sp, #8]
   1639c:	str	r0, [r1, #28]
   163a0:	ldr	r1, [sp, #8]
   163a4:	str	r0, [r1, #24]
   163a8:	mov	sp, fp
   163ac:	pop	{fp, pc}
   163b0:	push	{fp, lr}
   163b4:	mov	fp, sp
   163b8:	sub	sp, sp, #24
   163bc:	str	r0, [fp, #-8]
   163c0:	str	r1, [sp, #12]
   163c4:	ldr	r0, [fp, #-8]
   163c8:	ldr	r0, [r0, #48]	; 0x30
   163cc:	movw	r1, #258	; 0x102
   163d0:	and	r0, r0, r1
   163d4:	cmp	r0, #0
   163d8:	beq	164bc <__assert_fail@plt+0x50f4>
   163dc:	ldr	r0, [sp, #12]
   163e0:	add	r0, r0, #64	; 0x40
   163e4:	str	r0, [sp, #8]
   163e8:	movw	r0, #24
   163ec:	bl	1fd18 <__assert_fail@plt+0xe950>
   163f0:	str	r0, [sp, #4]
   163f4:	ldr	r0, [sp, #4]
   163f8:	movw	lr, #0
   163fc:	cmp	r0, lr
   16400:	bne	16414 <__assert_fail@plt+0x504c>
   16404:	movw	r0, #0
   16408:	and	r0, r0, #1
   1640c:	strb	r0, [fp, #-1]
   16410:	b	16500 <__assert_fail@plt+0x5138>
   16414:	ldr	r0, [sp, #8]
   16418:	ldr	r1, [r0]
   1641c:	ldr	r0, [r0, #4]
   16420:	ldr	r2, [sp, #4]
   16424:	str	r0, [r2, #4]
   16428:	str	r1, [r2]
   1642c:	ldr	r0, [sp, #8]
   16430:	ldr	r1, [r0, #96]	; 0x60
   16434:	ldr	r0, [r0, #100]	; 0x64
   16438:	ldr	r2, [sp, #4]
   1643c:	str	r0, [r2, #12]
   16440:	str	r1, [r2, #8]
   16444:	ldr	r0, [sp, #12]
   16448:	ldr	r1, [sp, #4]
   1644c:	str	r0, [r1, #16]
   16450:	ldr	r0, [fp, #-8]
   16454:	ldr	r0, [r0, #56]	; 0x38
   16458:	ldr	r1, [sp, #4]
   1645c:	bl	18870 <__assert_fail@plt+0x74a8>
   16460:	str	r0, [sp]
   16464:	ldr	r0, [sp]
   16468:	ldr	r1, [sp, #4]
   1646c:	cmp	r0, r1
   16470:	beq	164b8 <__assert_fail@plt+0x50f0>
   16474:	ldr	r0, [sp, #4]
   16478:	bl	20a84 <__assert_fail@plt+0xf6bc>
   1647c:	ldr	r0, [sp]
   16480:	movw	lr, #0
   16484:	cmp	r0, lr
   16488:	bne	1649c <__assert_fail@plt+0x50d4>
   1648c:	movw	r0, #0
   16490:	and	r0, r0, #1
   16494:	strb	r0, [fp, #-1]
   16498:	b	16500 <__assert_fail@plt+0x5138>
   1649c:	ldr	r0, [sp]
   164a0:	ldr	r0, [r0, #16]
   164a4:	ldr	r1, [sp, #12]
   164a8:	str	r0, [r1]
   164ac:	ldr	r0, [sp, #12]
   164b0:	movw	r1, #2
   164b4:	strh	r1, [r0, #56]	; 0x38
   164b8:	b	164f4 <__assert_fail@plt+0x512c>
   164bc:	ldr	r0, [fp, #-8]
   164c0:	ldr	r0, [r0, #56]	; 0x38
   164c4:	ldr	r1, [sp, #12]
   164c8:	add	r1, r1, #64	; 0x40
   164cc:	bl	202c4 <__assert_fail@plt+0xeefc>
   164d0:	tst	r0, #1
   164d4:	beq	164f0 <__assert_fail@plt+0x5128>
   164d8:	ldr	r0, [sp, #12]
   164dc:	ldr	r1, [sp, #12]
   164e0:	str	r0, [r1]
   164e4:	ldr	r0, [sp, #12]
   164e8:	movw	r1, #2
   164ec:	strh	r1, [r0, #56]	; 0x38
   164f0:	b	164f4 <__assert_fail@plt+0x512c>
   164f4:	movw	r0, #1
   164f8:	and	r0, r0, #1
   164fc:	strb	r0, [fp, #-1]
   16500:	ldrb	r0, [fp, #-1]
   16504:	and	r0, r0, #1
   16508:	mov	sp, fp
   1650c:	pop	{fp, pc}
   16510:	push	{fp, lr}
   16514:	mov	fp, sp
   16518:	sub	sp, sp, #32
   1651c:	str	r0, [fp, #-4]
   16520:	str	r1, [fp, #-8]
   16524:	and	r0, r2, #1
   16528:	strb	r0, [fp, #-9]
   1652c:	ldr	r0, [fp, #-4]
   16530:	ldr	r0, [r0, #32]
   16534:	str	r0, [sp, #16]
   16538:	ldr	r0, [sp, #16]
   1653c:	ldr	r1, [fp, #-8]
   16540:	cmp	r0, r1
   16544:	bne	16558 <__assert_fail@plt+0x5190>
   16548:	ldr	r0, [sp, #16]
   1654c:	cmn	r0, #100	; 0x64
   16550:	beq	16558 <__assert_fail@plt+0x5190>
   16554:	bl	11398 <abort@plt>
   16558:	b	1655c <__assert_fail@plt+0x5194>
   1655c:	ldrb	r0, [fp, #-9]
   16560:	tst	r0, #1
   16564:	beq	1659c <__assert_fail@plt+0x51d4>
   16568:	ldr	r0, [fp, #-4]
   1656c:	add	r0, r0, #60	; 0x3c
   16570:	ldr	r1, [sp, #16]
   16574:	bl	18d34 <__assert_fail@plt+0x796c>
   16578:	str	r0, [sp, #12]
   1657c:	ldr	r0, [sp, #12]
   16580:	movw	r1, #0
   16584:	cmp	r1, r0
   16588:	bgt	16598 <__assert_fail@plt+0x51d0>
   1658c:	ldr	r0, [sp, #12]
   16590:	bl	113a4 <close@plt>
   16594:	str	r0, [sp, #8]
   16598:	b	165d4 <__assert_fail@plt+0x520c>
   1659c:	ldr	r0, [fp, #-4]
   165a0:	ldr	r0, [r0, #48]	; 0x30
   165a4:	and	r0, r0, #4
   165a8:	cmp	r0, #0
   165ac:	bne	165d0 <__assert_fail@plt+0x5208>
   165b0:	ldr	r0, [sp, #16]
   165b4:	movw	r1, #0
   165b8:	cmp	r1, r0
   165bc:	bgt	165cc <__assert_fail@plt+0x5204>
   165c0:	ldr	r0, [sp, #16]
   165c4:	bl	113a4 <close@plt>
   165c8:	str	r0, [sp, #4]
   165cc:	b	165d0 <__assert_fail@plt+0x5208>
   165d0:	b	165d4 <__assert_fail@plt+0x520c>
   165d4:	ldr	r0, [fp, #-8]
   165d8:	ldr	r1, [fp, #-4]
   165dc:	str	r0, [r1, #32]
   165e0:	mov	sp, fp
   165e4:	pop	{fp, pc}
   165e8:	push	{fp, lr}
   165ec:	mov	fp, sp
   165f0:	sub	sp, sp, #16
   165f4:	str	r0, [sp, #8]
   165f8:	str	r1, [sp, #4]
   165fc:	str	r2, [sp]
   16600:	ldr	r0, [sp]
   16604:	cmp	r0, #0
   16608:	beq	16654 <__assert_fail@plt+0x528c>
   1660c:	ldr	r0, [sp]
   16610:	cmp	r0, #1
   16614:	beq	16654 <__assert_fail@plt+0x528c>
   16618:	ldr	r0, [sp]
   1661c:	cmp	r0, #2
   16620:	beq	16654 <__assert_fail@plt+0x528c>
   16624:	ldr	r0, [sp]
   16628:	cmp	r0, #3
   1662c:	beq	16654 <__assert_fail@plt+0x528c>
   16630:	ldr	r0, [sp]
   16634:	cmp	r0, #4
   16638:	beq	16654 <__assert_fail@plt+0x528c>
   1663c:	bl	11290 <__errno_location@plt>
   16640:	movw	lr, #22
   16644:	str	lr, [r0]
   16648:	movw	r0, #1
   1664c:	str	r0, [fp, #-4]
   16650:	b	16668 <__assert_fail@plt+0x52a0>
   16654:	ldr	r0, [sp]
   16658:	ldr	r1, [sp, #4]
   1665c:	strh	r0, [r1, #60]	; 0x3c
   16660:	movw	r0, #0
   16664:	str	r0, [fp, #-4]
   16668:	ldr	r0, [fp, #-4]
   1666c:	mov	sp, fp
   16670:	pop	{fp, pc}
   16674:	push	{fp, lr}
   16678:	mov	fp, sp
   1667c:	sub	sp, sp, #40	; 0x28
   16680:	str	r0, [fp, #-8]
   16684:	str	r1, [fp, #-12]
   16688:	ldr	r0, [fp, #-12]
   1668c:	cmp	r0, #0
   16690:	beq	166b8 <__assert_fail@plt+0x52f0>
   16694:	ldr	r0, [fp, #-12]
   16698:	cmp	r0, #4096	; 0x1000
   1669c:	beq	166b8 <__assert_fail@plt+0x52f0>
   166a0:	bl	11290 <__errno_location@plt>
   166a4:	movw	lr, #22
   166a8:	str	lr, [r0]
   166ac:	movw	r0, #0
   166b0:	str	r0, [fp, #-4]
   166b4:	b	168a0 <__assert_fail@plt+0x54d8>
   166b8:	ldr	r0, [fp, #-8]
   166bc:	ldr	r0, [r0]
   166c0:	str	r0, [fp, #-16]
   166c4:	bl	11290 <__errno_location@plt>
   166c8:	movw	lr, #0
   166cc:	str	lr, [r0]
   166d0:	ldr	r0, [fp, #-8]
   166d4:	ldr	r0, [r0, #48]	; 0x30
   166d8:	and	r0, r0, #8192	; 0x2000
   166dc:	cmp	r0, #0
   166e0:	beq	166f0 <__assert_fail@plt+0x5328>
   166e4:	movw	r0, #0
   166e8:	str	r0, [fp, #-4]
   166ec:	b	168a0 <__assert_fail@plt+0x54d8>
   166f0:	ldr	r0, [fp, #-16]
   166f4:	ldrh	r0, [r0, #56]	; 0x38
   166f8:	cmp	r0, #9
   166fc:	bne	16710 <__assert_fail@plt+0x5348>
   16700:	ldr	r0, [fp, #-16]
   16704:	ldr	r0, [r0, #8]
   16708:	str	r0, [fp, #-4]
   1670c:	b	168a0 <__assert_fail@plt+0x54d8>
   16710:	ldr	r0, [fp, #-16]
   16714:	ldrh	r0, [r0, #56]	; 0x38
   16718:	cmp	r0, #1
   1671c:	beq	1672c <__assert_fail@plt+0x5364>
   16720:	movw	r0, #0
   16724:	str	r0, [fp, #-4]
   16728:	b	168a0 <__assert_fail@plt+0x54d8>
   1672c:	ldr	r0, [fp, #-8]
   16730:	ldr	r0, [r0, #4]
   16734:	movw	r1, #0
   16738:	cmp	r0, r1
   1673c:	beq	1674c <__assert_fail@plt+0x5384>
   16740:	ldr	r0, [fp, #-8]
   16744:	ldr	r0, [r0, #4]
   16748:	bl	14368 <__assert_fail@plt+0x2fa0>
   1674c:	ldr	r0, [fp, #-12]
   16750:	cmp	r0, #4096	; 0x1000
   16754:	bne	16774 <__assert_fail@plt+0x53ac>
   16758:	ldr	r0, [fp, #-8]
   1675c:	ldr	r1, [r0, #48]	; 0x30
   16760:	orr	r1, r1, #4096	; 0x1000
   16764:	str	r1, [r0, #48]	; 0x30
   16768:	movw	r0, #2
   1676c:	str	r0, [fp, #-12]
   16770:	b	1677c <__assert_fail@plt+0x53b4>
   16774:	movw	r0, #1
   16778:	str	r0, [fp, #-12]
   1677c:	ldr	r0, [fp, #-16]
   16780:	ldr	r0, [r0, #48]	; 0x30
   16784:	cmp	r0, #0
   16788:	bne	167b4 <__assert_fail@plt+0x53ec>
   1678c:	ldr	r0, [fp, #-16]
   16790:	ldr	r0, [r0, #24]
   16794:	ldrb	r0, [r0]
   16798:	cmp	r0, #47	; 0x2f
   1679c:	beq	167b4 <__assert_fail@plt+0x53ec>
   167a0:	ldr	r0, [fp, #-8]
   167a4:	ldr	r0, [r0, #48]	; 0x30
   167a8:	and	r0, r0, #4
   167ac:	cmp	r0, #0
   167b0:	beq	167d0 <__assert_fail@plt+0x5408>
   167b4:	ldr	r0, [fp, #-8]
   167b8:	ldr	r1, [fp, #-12]
   167bc:	bl	154e4 <__assert_fail@plt+0x411c>
   167c0:	ldr	r1, [fp, #-8]
   167c4:	str	r0, [r1, #4]
   167c8:	str	r0, [fp, #-4]
   167cc:	b	168a0 <__assert_fail@plt+0x54d8>
   167d0:	ldr	r0, [fp, #-8]
   167d4:	movw	r1, #14352	; 0x3810
   167d8:	movt	r1, #2
   167dc:	bl	142cc <__assert_fail@plt+0x2f04>
   167e0:	str	r0, [sp, #20]
   167e4:	cmp	r0, #0
   167e8:	bge	16800 <__assert_fail@plt+0x5438>
   167ec:	ldr	r0, [fp, #-8]
   167f0:	movw	r1, #0
   167f4:	str	r1, [r0, #4]
   167f8:	str	r1, [fp, #-4]
   167fc:	b	168a0 <__assert_fail@plt+0x54d8>
   16800:	ldr	r0, [fp, #-8]
   16804:	ldr	r1, [fp, #-12]
   16808:	bl	154e4 <__assert_fail@plt+0x411c>
   1680c:	ldr	r1, [fp, #-8]
   16810:	str	r0, [r1, #4]
   16814:	ldr	r0, [fp, #-8]
   16818:	ldr	r0, [r0, #48]	; 0x30
   1681c:	and	r0, r0, #512	; 0x200
   16820:	cmp	r0, #0
   16824:	beq	16840 <__assert_fail@plt+0x5478>
   16828:	ldr	r0, [fp, #-8]
   1682c:	ldr	r1, [sp, #20]
   16830:	movw	r2, #1
   16834:	and	r2, r2, #1
   16838:	bl	16510 <__assert_fail@plt+0x5148>
   1683c:	b	16894 <__assert_fail@plt+0x54cc>
   16840:	ldr	r0, [sp, #20]
   16844:	bl	11338 <fchdir@plt>
   16848:	cmp	r0, #0
   1684c:	beq	16888 <__assert_fail@plt+0x54c0>
   16850:	bl	11290 <__errno_location@plt>
   16854:	ldr	r0, [r0]
   16858:	str	r0, [sp, #16]
   1685c:	ldr	r0, [sp, #20]
   16860:	bl	113a4 <close@plt>
   16864:	ldr	lr, [sp, #16]
   16868:	str	r0, [sp, #12]
   1686c:	str	lr, [sp, #8]
   16870:	bl	11290 <__errno_location@plt>
   16874:	ldr	lr, [sp, #8]
   16878:	str	lr, [r0]
   1687c:	movw	r0, #0
   16880:	str	r0, [fp, #-4]
   16884:	b	168a0 <__assert_fail@plt+0x54d8>
   16888:	ldr	r0, [sp, #20]
   1688c:	bl	113a4 <close@plt>
   16890:	str	r0, [sp, #4]
   16894:	ldr	r0, [fp, #-8]
   16898:	ldr	r0, [r0, #4]
   1689c:	str	r0, [fp, #-4]
   168a0:	ldr	r0, [fp, #-4]
   168a4:	mov	sp, fp
   168a8:	pop	{fp, pc}
   168ac:	push	{fp, lr}
   168b0:	mov	fp, sp
   168b4:	sub	sp, sp, #24
   168b8:	str	r0, [fp, #-4]
   168bc:	str	r1, [fp, #-8]
   168c0:	ldr	r0, [fp, #-4]
   168c4:	str	r0, [sp, #12]
   168c8:	ldr	r0, [sp, #12]
   168cc:	ldr	r1, [r0, #8]
   168d0:	ldr	r0, [r0, #12]
   168d4:	ldr	r2, [fp, #-8]
   168d8:	mov	r3, #0
   168dc:	str	r0, [sp, #8]
   168e0:	mov	r0, r1
   168e4:	ldr	r1, [sp, #8]
   168e8:	bl	22b74 <__assert_fail@plt+0x117ac>
   168ec:	str	r0, [sp, #4]
   168f0:	mov	r0, r2
   168f4:	str	r1, [sp]
   168f8:	mov	sp, fp
   168fc:	pop	{fp, pc}
   16900:	sub	sp, sp, #20
   16904:	str	r0, [sp, #16]
   16908:	str	r1, [sp, #12]
   1690c:	ldr	r0, [sp, #16]
   16910:	str	r0, [sp, #8]
   16914:	ldr	r0, [sp, #12]
   16918:	str	r0, [sp, #4]
   1691c:	ldr	r0, [sp, #8]
   16920:	ldr	r1, [r0, #8]
   16924:	ldr	r0, [r0, #12]
   16928:	ldr	r2, [sp, #4]
   1692c:	ldr	r3, [r2, #8]
   16930:	ldr	r2, [r2, #12]
   16934:	eor	r0, r0, r2
   16938:	eor	r1, r1, r3
   1693c:	orr	r0, r1, r0
   16940:	mov	r1, #0
   16944:	cmp	r0, #0
   16948:	str	r1, [sp]
   1694c:	bne	16984 <__assert_fail@plt+0x55bc>
   16950:	b	16954 <__assert_fail@plt+0x558c>
   16954:	ldr	r0, [sp, #8]
   16958:	ldr	r1, [r0]
   1695c:	ldr	r0, [r0, #4]
   16960:	ldr	r2, [sp, #4]
   16964:	ldr	r3, [r2]
   16968:	ldr	r2, [r2, #4]
   1696c:	eor	r0, r0, r2
   16970:	eor	r1, r1, r3
   16974:	orr	r0, r1, r0
   16978:	clz	r0, r0
   1697c:	lsr	r0, r0, #5
   16980:	str	r0, [sp]
   16984:	ldr	r0, [sp]
   16988:	and	r0, r0, #1
   1698c:	add	sp, sp, #20
   16990:	bx	lr
   16994:	push	{fp, lr}
   16998:	mov	fp, sp
   1699c:	sub	sp, sp, #16
   169a0:	str	r0, [sp, #8]
   169a4:	str	r1, [sp, #4]
   169a8:	ldr	r0, [sp, #8]
   169ac:	ldr	r1, [sp, #4]
   169b0:	bl	16d68 <__assert_fail@plt+0x59a0>
   169b4:	mov	r1, r0
   169b8:	movw	lr, #19778	; 0x4d42
   169bc:	movt	lr, #65363	; 0xff53
   169c0:	cmp	r0, lr
   169c4:	str	r1, [sp]
   169c8:	beq	16a28 <__assert_fail@plt+0x5660>
   169cc:	b	169d0 <__assert_fail@plt+0x5608>
   169d0:	ldr	r0, [sp]
   169d4:	cmp	r0, #0
   169d8:	beq	16a20 <__assert_fail@plt+0x5658>
   169dc:	b	169e0 <__assert_fail@plt+0x5618>
   169e0:	movw	r0, #26985	; 0x6969
   169e4:	ldr	r1, [sp]
   169e8:	cmp	r1, r0
   169ec:	beq	16a2c <__assert_fail@plt+0x5664>
   169f0:	b	169f4 <__assert_fail@plt+0x562c>
   169f4:	movw	r0, #40864	; 0x9fa0
   169f8:	ldr	r1, [sp]
   169fc:	cmp	r1, r0
   16a00:	beq	16a30 <__assert_fail@plt+0x5668>
   16a04:	b	16a08 <__assert_fail@plt+0x5640>
   16a08:	movw	r0, #16719	; 0x414f
   16a0c:	movt	r0, #21318	; 0x5346
   16a10:	ldr	r1, [sp]
   16a14:	cmp	r1, r0
   16a18:	beq	16a24 <__assert_fail@plt+0x565c>
   16a1c:	b	16a3c <__assert_fail@plt+0x5674>
   16a20:	b	16a24 <__assert_fail@plt+0x565c>
   16a24:	b	16a28 <__assert_fail@plt+0x5660>
   16a28:	b	16a2c <__assert_fail@plt+0x5664>
   16a2c:	b	16a30 <__assert_fail@plt+0x5668>
   16a30:	movw	r0, #0
   16a34:	str	r0, [fp, #-4]
   16a38:	b	16a44 <__assert_fail@plt+0x567c>
   16a3c:	movw	r0, #1
   16a40:	str	r0, [fp, #-4]
   16a44:	ldr	r0, [fp, #-4]
   16a48:	mov	sp, fp
   16a4c:	pop	{fp, pc}
   16a50:	sub	sp, sp, #16
   16a54:	str	r0, [sp, #12]
   16a58:	str	r1, [sp, #8]
   16a5c:	ldr	r0, [sp, #8]
   16a60:	sub	r0, r0, #1
   16a64:	cmp	r0, #11
   16a68:	str	r0, [sp]
   16a6c:	bhi	16b04 <__assert_fail@plt+0x573c>
   16a70:	add	r0, pc, #8
   16a74:	ldr	r1, [sp]
   16a78:	ldr	r0, [r0, r1, lsl #2]
   16a7c:	mov	pc, r0
   16a80:	ldrdeq	r6, [r1], -r4
   16a84:			; <UNDEFINED> instruction: 0x00016abc
   16a88:	andeq	r6, r1, r4, lsl #22
   16a8c:	andeq	r6, r1, r8, asr #21
   16a90:	andeq	r6, r1, r4, lsl #22
   16a94:			; <UNDEFINED> instruction: 0x00016ab0
   16a98:	andeq	r6, r1, r4, lsl #22
   16a9c:	andeq	r6, r1, ip, ror #21
   16aa0:	andeq	r6, r1, r4, lsl #22
   16aa4:	andeq	r6, r1, r0, ror #21
   16aa8:	andeq	r6, r1, r4, lsl #22
   16aac:	strdeq	r6, [r1], -r8
   16ab0:	movw	r0, #24576	; 0x6000
   16ab4:	str	r0, [sp, #4]
   16ab8:	b	16b0c <__assert_fail@plt+0x5744>
   16abc:	movw	r0, #8192	; 0x2000
   16ac0:	str	r0, [sp, #4]
   16ac4:	b	16b0c <__assert_fail@plt+0x5744>
   16ac8:	movw	r0, #16384	; 0x4000
   16acc:	str	r0, [sp, #4]
   16ad0:	b	16b0c <__assert_fail@plt+0x5744>
   16ad4:	movw	r0, #4096	; 0x1000
   16ad8:	str	r0, [sp, #4]
   16adc:	b	16b0c <__assert_fail@plt+0x5744>
   16ae0:	movw	r0, #40960	; 0xa000
   16ae4:	str	r0, [sp, #4]
   16ae8:	b	16b0c <__assert_fail@plt+0x5744>
   16aec:	movw	r0, #32768	; 0x8000
   16af0:	str	r0, [sp, #4]
   16af4:	b	16b0c <__assert_fail@plt+0x5744>
   16af8:	movw	r0, #49152	; 0xc000
   16afc:	str	r0, [sp, #4]
   16b00:	b	16b0c <__assert_fail@plt+0x5744>
   16b04:	movw	r0, #0
   16b08:	str	r0, [sp, #4]
   16b0c:	ldr	r0, [sp, #4]
   16b10:	ldr	r1, [sp, #12]
   16b14:	str	r0, [r1, #16]
   16b18:	add	sp, sp, #16
   16b1c:	bx	lr
   16b20:	push	{fp, lr}
   16b24:	mov	fp, sp
   16b28:	sub	sp, sp, #16
   16b2c:	str	r0, [sp, #8]
   16b30:	str	r1, [sp, #4]
   16b34:	ldr	r0, [sp, #8]
   16b38:	ldr	r1, [sp, #4]
   16b3c:	bl	16d68 <__assert_fail@plt+0x59a0>
   16b40:	mov	r1, r0
   16b44:	movw	lr, #19778	; 0x4d42
   16b48:	movt	lr, #65363	; 0xff53
   16b4c:	cmp	r0, lr
   16b50:	str	r1, [sp]
   16b54:	beq	16b88 <__assert_fail@plt+0x57c0>
   16b58:	b	16b5c <__assert_fail@plt+0x5794>
   16b5c:	movw	r0, #26985	; 0x6969
   16b60:	ldr	r1, [sp]
   16b64:	cmp	r1, r0
   16b68:	beq	16b88 <__assert_fail@plt+0x57c0>
   16b6c:	b	16b70 <__assert_fail@plt+0x57a8>
   16b70:	movw	r0, #6548	; 0x1994
   16b74:	movt	r0, #258	; 0x102
   16b78:	ldr	r1, [sp]
   16b7c:	cmp	r1, r0
   16b80:	bne	16b98 <__assert_fail@plt+0x57d0>
   16b84:	b	16b88 <__assert_fail@plt+0x57c0>
   16b88:	movw	r0, #0
   16b8c:	and	r0, r0, #1
   16b90:	strb	r0, [fp, #-1]
   16b94:	b	16ba4 <__assert_fail@plt+0x57dc>
   16b98:	movw	r0, #1
   16b9c:	and	r0, r0, #1
   16ba0:	strb	r0, [fp, #-1]
   16ba4:	ldrb	r0, [fp, #-1]
   16ba8:	and	r0, r0, #1
   16bac:	mov	sp, fp
   16bb0:	pop	{fp, pc}
   16bb4:	sub	sp, sp, #20
   16bb8:	str	r0, [sp, #16]
   16bbc:	str	r1, [sp, #12]
   16bc0:	ldr	r0, [sp, #16]
   16bc4:	ldr	r0, [r0, #24]
   16bc8:	str	r0, [sp, #4]
   16bcc:	ldr	r0, [sp, #16]
   16bd0:	ldr	r0, [r0, #4]
   16bd4:	str	r0, [sp, #8]
   16bd8:	ldr	r0, [sp, #8]
   16bdc:	movw	r1, #0
   16be0:	cmp	r0, r1
   16be4:	beq	16c48 <__assert_fail@plt+0x5880>
   16be8:	b	16bec <__assert_fail@plt+0x5824>
   16bec:	ldr	r0, [sp, #8]
   16bf0:	ldr	r0, [r0, #24]
   16bf4:	ldr	r1, [sp, #8]
   16bf8:	add	r1, r1, #168	; 0xa8
   16bfc:	cmp	r0, r1
   16c00:	beq	16c28 <__assert_fail@plt+0x5860>
   16c04:	ldr	r0, [sp, #4]
   16c08:	ldr	r1, [sp, #8]
   16c0c:	ldr	r1, [r1, #24]
   16c10:	ldr	r2, [sp, #8]
   16c14:	ldr	r2, [r2, #28]
   16c18:	sub	r1, r1, r2
   16c1c:	add	r0, r0, r1
   16c20:	ldr	r1, [sp, #8]
   16c24:	str	r0, [r1, #24]
   16c28:	ldr	r0, [sp, #4]
   16c2c:	ldr	r1, [sp, #8]
   16c30:	str	r0, [r1, #28]
   16c34:	b	16c38 <__assert_fail@plt+0x5870>
   16c38:	ldr	r0, [sp, #8]
   16c3c:	ldr	r0, [r0, #8]
   16c40:	str	r0, [sp, #8]
   16c44:	b	16bd8 <__assert_fail@plt+0x5810>
   16c48:	ldr	r0, [sp, #12]
   16c4c:	str	r0, [sp, #8]
   16c50:	ldr	r0, [sp, #8]
   16c54:	ldr	r0, [r0, #48]	; 0x30
   16c58:	cmp	r0, #0
   16c5c:	blt	16ce8 <__assert_fail@plt+0x5920>
   16c60:	b	16c64 <__assert_fail@plt+0x589c>
   16c64:	ldr	r0, [sp, #8]
   16c68:	ldr	r0, [r0, #24]
   16c6c:	ldr	r1, [sp, #8]
   16c70:	add	r1, r1, #168	; 0xa8
   16c74:	cmp	r0, r1
   16c78:	beq	16ca0 <__assert_fail@plt+0x58d8>
   16c7c:	ldr	r0, [sp, #4]
   16c80:	ldr	r1, [sp, #8]
   16c84:	ldr	r1, [r1, #24]
   16c88:	ldr	r2, [sp, #8]
   16c8c:	ldr	r2, [r2, #28]
   16c90:	sub	r1, r1, r2
   16c94:	add	r0, r0, r1
   16c98:	ldr	r1, [sp, #8]
   16c9c:	str	r0, [r1, #24]
   16ca0:	ldr	r0, [sp, #4]
   16ca4:	ldr	r1, [sp, #8]
   16ca8:	str	r0, [r1, #28]
   16cac:	ldr	r0, [sp, #8]
   16cb0:	ldr	r0, [r0, #8]
   16cb4:	movw	r1, #0
   16cb8:	cmp	r0, r1
   16cbc:	beq	16cd0 <__assert_fail@plt+0x5908>
   16cc0:	ldr	r0, [sp, #8]
   16cc4:	ldr	r0, [r0, #8]
   16cc8:	str	r0, [sp]
   16ccc:	b	16cdc <__assert_fail@plt+0x5914>
   16cd0:	ldr	r0, [sp, #8]
   16cd4:	ldr	r0, [r0, #4]
   16cd8:	str	r0, [sp]
   16cdc:	ldr	r0, [sp]
   16ce0:	str	r0, [sp, #8]
   16ce4:	b	16c50 <__assert_fail@plt+0x5888>
   16ce8:	add	sp, sp, #20
   16cec:	bx	lr
   16cf0:	push	{r4, r5, fp, lr}
   16cf4:	add	fp, sp, #8
   16cf8:	sub	sp, sp, #24
   16cfc:	str	r0, [fp, #-12]
   16d00:	str	r1, [sp, #16]
   16d04:	ldr	r0, [fp, #-12]
   16d08:	ldr	r0, [r0]
   16d0c:	ldr	r1, [r0, #160]	; 0xa0
   16d10:	ldr	r0, [r0, #164]	; 0xa4
   16d14:	ldr	r2, [sp, #16]
   16d18:	ldr	r2, [r2]
   16d1c:	ldr	r3, [r2, #160]	; 0xa0
   16d20:	ldr	r2, [r2, #164]	; 0xa4
   16d24:	subs	ip, r3, r1
   16d28:	sbcs	lr, r2, r0
   16d2c:	mov	r4, #0
   16d30:	mov	r5, r4
   16d34:	movwcc	r5, #1
   16d38:	subs	r1, r1, r3
   16d3c:	sbcs	r0, r0, r2
   16d40:	movwcc	r4, #1
   16d44:	and	r2, r4, #1
   16d48:	sub	r2, r5, r2
   16d4c:	str	r0, [sp, #12]
   16d50:	mov	r0, r2
   16d54:	str	ip, [sp, #8]
   16d58:	str	r1, [sp, #4]
   16d5c:	str	lr, [sp]
   16d60:	sub	sp, fp, #8
   16d64:	pop	{r4, r5, fp, pc}
   16d68:	push	{fp, lr}
   16d6c:	mov	fp, sp
   16d70:	sub	sp, sp, #136	; 0x88
   16d74:	str	r0, [fp, #-8]
   16d78:	str	r1, [fp, #-12]
   16d7c:	ldr	r0, [fp, #-8]
   16d80:	ldr	r0, [r0, #44]	; 0x2c
   16d84:	str	r0, [fp, #-16]
   16d88:	ldr	r0, [fp, #-16]
   16d8c:	ldr	r0, [r0, #52]	; 0x34
   16d90:	str	r0, [fp, #-20]	; 0xffffffec
   16d94:	ldr	r0, [fp, #-16]
   16d98:	ldr	r0, [r0, #48]	; 0x30
   16d9c:	and	r0, r0, #512	; 0x200
   16da0:	cmp	r0, #0
   16da4:	bne	16db4 <__assert_fail@plt+0x59ec>
   16da8:	movw	r0, #0
   16dac:	str	r0, [fp, #-4]
   16db0:	b	16f24 <__assert_fail@plt+0x5b5c>
   16db4:	ldr	r0, [fp, #-20]	; 0xffffffec
   16db8:	movw	r1, #0
   16dbc:	cmp	r0, r1
   16dc0:	bne	16df8 <__assert_fail@plt+0x5a30>
   16dc4:	movw	r0, #13
   16dc8:	movw	r1, #0
   16dcc:	movw	r2, #28464	; 0x6f30
   16dd0:	movt	r2, #1
   16dd4:	movw	r3, #28552	; 0x6f88
   16dd8:	movt	r3, #1
   16ddc:	movw	ip, #2692	; 0xa84
   16de0:	movt	ip, #2
   16de4:	str	ip, [sp]
   16de8:	bl	17844 <__assert_fail@plt+0x647c>
   16dec:	ldr	r1, [fp, #-16]
   16df0:	str	r0, [r1, #52]	; 0x34
   16df4:	str	r0, [fp, #-20]	; 0xffffffec
   16df8:	ldr	r0, [fp, #-20]	; 0xffffffec
   16dfc:	movw	r1, #0
   16e00:	cmp	r0, r1
   16e04:	beq	16e50 <__assert_fail@plt+0x5a88>
   16e08:	ldr	r0, [fp, #-8]
   16e0c:	ldr	r1, [r0, #64]	; 0x40
   16e10:	ldr	r0, [r0, #68]	; 0x44
   16e14:	str	r0, [sp, #12]
   16e18:	str	r1, [sp, #8]
   16e1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16e20:	add	r1, sp, #8
   16e24:	bl	17328 <__assert_fail@plt+0x5f60>
   16e28:	str	r0, [fp, #-24]	; 0xffffffe8
   16e2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e30:	movw	r1, #0
   16e34:	cmp	r0, r1
   16e38:	beq	16e4c <__assert_fail@plt+0x5a84>
   16e3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e40:	ldr	r0, [r0, #8]
   16e44:	str	r0, [fp, #-4]
   16e48:	b	16f24 <__assert_fail@plt+0x5b5c>
   16e4c:	b	16e50 <__assert_fail@plt+0x5a88>
   16e50:	ldr	r0, [fp, #-12]
   16e54:	cmp	r0, #0
   16e58:	blt	16e70 <__assert_fail@plt+0x5aa8>
   16e5c:	ldr	r0, [fp, #-12]
   16e60:	add	r1, sp, #24
   16e64:	bl	110d4 <fstatfs64@plt>
   16e68:	cmp	r0, #0
   16e6c:	beq	16e7c <__assert_fail@plt+0x5ab4>
   16e70:	movw	r0, #0
   16e74:	str	r0, [fp, #-4]
   16e78:	b	16f24 <__assert_fail@plt+0x5b5c>
   16e7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16e80:	movw	r1, #0
   16e84:	cmp	r0, r1
   16e88:	beq	16f1c <__assert_fail@plt+0x5b54>
   16e8c:	movw	r0, #16
   16e90:	bl	1fd18 <__assert_fail@plt+0xe950>
   16e94:	str	r0, [sp, #4]
   16e98:	ldr	r0, [sp, #4]
   16e9c:	movw	lr, #0
   16ea0:	cmp	r0, lr
   16ea4:	beq	16f18 <__assert_fail@plt+0x5b50>
   16ea8:	ldr	r0, [fp, #-8]
   16eac:	ldr	r1, [r0, #64]	; 0x40
   16eb0:	ldr	r0, [r0, #68]	; 0x44
   16eb4:	ldr	r2, [sp, #4]
   16eb8:	str	r0, [r2, #4]
   16ebc:	str	r1, [r2]
   16ec0:	ldr	r0, [sp, #24]
   16ec4:	ldr	r1, [sp, #4]
   16ec8:	str	r0, [r1, #8]
   16ecc:	ldr	r0, [fp, #-20]	; 0xffffffec
   16ed0:	ldr	r1, [sp, #4]
   16ed4:	bl	18870 <__assert_fail@plt+0x74a8>
   16ed8:	str	r0, [fp, #-24]	; 0xffffffe8
   16edc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ee0:	movw	r1, #0
   16ee4:	cmp	r0, r1
   16ee8:	beq	16f0c <__assert_fail@plt+0x5b44>
   16eec:	b	16ef0 <__assert_fail@plt+0x5b28>
   16ef0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ef4:	ldr	r1, [sp, #4]
   16ef8:	cmp	r0, r1
   16efc:	beq	16f04 <__assert_fail@plt+0x5b3c>
   16f00:	bl	11398 <abort@plt>
   16f04:	b	16f08 <__assert_fail@plt+0x5b40>
   16f08:	b	16f14 <__assert_fail@plt+0x5b4c>
   16f0c:	ldr	r0, [sp, #4]
   16f10:	bl	20a84 <__assert_fail@plt+0xf6bc>
   16f14:	b	16f18 <__assert_fail@plt+0x5b50>
   16f18:	b	16f1c <__assert_fail@plt+0x5b54>
   16f1c:	ldr	r0, [sp, #24]
   16f20:	str	r0, [fp, #-4]
   16f24:	ldr	r0, [fp, #-4]
   16f28:	mov	sp, fp
   16f2c:	pop	{fp, pc}
   16f30:	push	{fp, lr}
   16f34:	mov	fp, sp
   16f38:	sub	sp, sp, #32
   16f3c:	str	r0, [fp, #-4]
   16f40:	str	r1, [fp, #-8]
   16f44:	ldr	r0, [fp, #-4]
   16f48:	str	r0, [fp, #-12]
   16f4c:	ldr	r0, [fp, #-12]
   16f50:	ldr	r1, [r0]
   16f54:	ldr	r0, [r0, #4]
   16f58:	str	r0, [sp, #12]
   16f5c:	str	r1, [sp, #8]
   16f60:	ldr	r0, [sp, #8]
   16f64:	ldr	r1, [sp, #12]
   16f68:	ldr	r2, [fp, #-8]
   16f6c:	mov	r3, #0
   16f70:	bl	22b74 <__assert_fail@plt+0x117ac>
   16f74:	str	r0, [sp, #4]
   16f78:	mov	r0, r2
   16f7c:	str	r1, [sp]
   16f80:	mov	sp, fp
   16f84:	pop	{fp, pc}
   16f88:	sub	sp, sp, #16
   16f8c:	str	r0, [sp, #12]
   16f90:	str	r1, [sp, #8]
   16f94:	ldr	r0, [sp, #12]
   16f98:	str	r0, [sp, #4]
   16f9c:	ldr	r0, [sp, #8]
   16fa0:	str	r0, [sp]
   16fa4:	ldr	r0, [sp, #4]
   16fa8:	ldr	r1, [r0]
   16fac:	ldr	r0, [r0, #4]
   16fb0:	ldr	r2, [sp]
   16fb4:	ldr	r3, [r2]
   16fb8:	ldr	r2, [r2, #4]
   16fbc:	eor	r0, r0, r2
   16fc0:	eor	r1, r1, r3
   16fc4:	orr	r0, r1, r0
   16fc8:	clz	r0, r0
   16fcc:	lsr	r0, r0, #5
   16fd0:	and	r0, r0, #1
   16fd4:	add	sp, sp, #16
   16fd8:	bx	lr
   16fdc:	push	{fp, lr}
   16fe0:	mov	fp, sp
   16fe4:	sub	sp, sp, #24
   16fe8:	str	r0, [fp, #-4]
   16fec:	str	r1, [fp, #-8]
   16ff0:	ldr	r0, [fp, #-4]
   16ff4:	str	r0, [sp, #12]
   16ff8:	ldr	r0, [fp, #-8]
   16ffc:	str	r0, [sp, #8]
   17000:	ldr	r0, [sp, #12]
   17004:	ldr	r0, [r0]
   17008:	ldr	r0, [r0, #44]	; 0x2c
   1700c:	ldr	r0, [r0, #44]	; 0x2c
   17010:	ldr	r1, [sp, #12]
   17014:	ldr	r2, [sp, #8]
   17018:	str	r0, [sp, #4]
   1701c:	mov	r0, r1
   17020:	mov	r1, r2
   17024:	ldr	r2, [sp, #4]
   17028:	blx	r2
   1702c:	mov	sp, fp
   17030:	pop	{fp, pc}
   17034:	andeq	r0, r0, r0
   17038:	sub	sp, sp, #4
   1703c:	str	r0, [sp]
   17040:	ldr	r0, [sp]
   17044:	ldr	r0, [r0, #8]
   17048:	add	sp, sp, #4
   1704c:	bx	lr
   17050:	sub	sp, sp, #4
   17054:	str	r0, [sp]
   17058:	ldr	r0, [sp]
   1705c:	ldr	r0, [r0, #12]
   17060:	add	sp, sp, #4
   17064:	bx	lr
   17068:	sub	sp, sp, #4
   1706c:	str	r0, [sp]
   17070:	ldr	r0, [sp]
   17074:	ldr	r0, [r0, #16]
   17078:	add	sp, sp, #4
   1707c:	bx	lr
   17080:	sub	sp, sp, #20
   17084:	str	r0, [sp, #16]
   17088:	movw	r0, #0
   1708c:	str	r0, [sp, #8]
   17090:	ldr	r0, [sp, #16]
   17094:	ldr	r0, [r0]
   17098:	str	r0, [sp, #12]
   1709c:	ldr	r0, [sp, #12]
   170a0:	ldr	r1, [sp, #16]
   170a4:	ldr	r1, [r1, #4]
   170a8:	cmp	r0, r1
   170ac:	bcs	17130 <__assert_fail@plt+0x5d68>
   170b0:	ldr	r0, [sp, #12]
   170b4:	ldr	r0, [r0]
   170b8:	movw	r1, #0
   170bc:	cmp	r0, r1
   170c0:	beq	1711c <__assert_fail@plt+0x5d54>
   170c4:	ldr	r0, [sp, #12]
   170c8:	str	r0, [sp, #4]
   170cc:	movw	r0, #1
   170d0:	str	r0, [sp]
   170d4:	ldr	r0, [sp, #4]
   170d8:	ldr	r0, [r0, #4]
   170dc:	str	r0, [sp, #4]
   170e0:	ldr	r0, [sp, #4]
   170e4:	movw	r1, #0
   170e8:	cmp	r0, r1
   170ec:	beq	17100 <__assert_fail@plt+0x5d38>
   170f0:	ldr	r0, [sp]
   170f4:	add	r0, r0, #1
   170f8:	str	r0, [sp]
   170fc:	b	170d4 <__assert_fail@plt+0x5d0c>
   17100:	ldr	r0, [sp]
   17104:	ldr	r1, [sp, #8]
   17108:	cmp	r0, r1
   1710c:	bls	17118 <__assert_fail@plt+0x5d50>
   17110:	ldr	r0, [sp]
   17114:	str	r0, [sp, #8]
   17118:	b	1711c <__assert_fail@plt+0x5d54>
   1711c:	b	17120 <__assert_fail@plt+0x5d58>
   17120:	ldr	r0, [sp, #12]
   17124:	add	r0, r0, #8
   17128:	str	r0, [sp, #12]
   1712c:	b	1709c <__assert_fail@plt+0x5cd4>
   17130:	ldr	r0, [sp, #8]
   17134:	add	sp, sp, #20
   17138:	bx	lr
   1713c:	sub	sp, sp, #24
   17140:	str	r0, [sp, #16]
   17144:	movw	r0, #0
   17148:	str	r0, [sp, #8]
   1714c:	str	r0, [sp, #4]
   17150:	ldr	r0, [sp, #16]
   17154:	ldr	r0, [r0]
   17158:	str	r0, [sp, #12]
   1715c:	ldr	r0, [sp, #12]
   17160:	ldr	r1, [sp, #16]
   17164:	ldr	r1, [r1, #4]
   17168:	cmp	r0, r1
   1716c:	bcs	171e8 <__assert_fail@plt+0x5e20>
   17170:	ldr	r0, [sp, #12]
   17174:	ldr	r0, [r0]
   17178:	movw	r1, #0
   1717c:	cmp	r0, r1
   17180:	beq	171d4 <__assert_fail@plt+0x5e0c>
   17184:	ldr	r0, [sp, #12]
   17188:	str	r0, [sp]
   1718c:	ldr	r0, [sp, #8]
   17190:	add	r0, r0, #1
   17194:	str	r0, [sp, #8]
   17198:	ldr	r0, [sp, #4]
   1719c:	add	r0, r0, #1
   171a0:	str	r0, [sp, #4]
   171a4:	ldr	r0, [sp]
   171a8:	ldr	r0, [r0, #4]
   171ac:	str	r0, [sp]
   171b0:	ldr	r0, [sp]
   171b4:	movw	r1, #0
   171b8:	cmp	r0, r1
   171bc:	beq	171d0 <__assert_fail@plt+0x5e08>
   171c0:	ldr	r0, [sp, #4]
   171c4:	add	r0, r0, #1
   171c8:	str	r0, [sp, #4]
   171cc:	b	171a4 <__assert_fail@plt+0x5ddc>
   171d0:	b	171d4 <__assert_fail@plt+0x5e0c>
   171d4:	b	171d8 <__assert_fail@plt+0x5e10>
   171d8:	ldr	r0, [sp, #12]
   171dc:	add	r0, r0, #8
   171e0:	str	r0, [sp, #12]
   171e4:	b	1715c <__assert_fail@plt+0x5d94>
   171e8:	ldr	r0, [sp, #8]
   171ec:	ldr	r1, [sp, #16]
   171f0:	ldr	r1, [r1, #12]
   171f4:	cmp	r0, r1
   171f8:	bne	17220 <__assert_fail@plt+0x5e58>
   171fc:	ldr	r0, [sp, #4]
   17200:	ldr	r1, [sp, #16]
   17204:	ldr	r1, [r1, #16]
   17208:	cmp	r0, r1
   1720c:	bne	17220 <__assert_fail@plt+0x5e58>
   17210:	movw	r0, #1
   17214:	and	r0, r0, #1
   17218:	strb	r0, [sp, #23]
   1721c:	b	1722c <__assert_fail@plt+0x5e64>
   17220:	movw	r0, #0
   17224:	and	r0, r0, #1
   17228:	strb	r0, [sp, #23]
   1722c:	ldrb	r0, [sp, #23]
   17230:	and	r0, r0, #1
   17234:	add	sp, sp, #24
   17238:	bx	lr
   1723c:	nop	{0}
   17240:	push	{fp, lr}
   17244:	mov	fp, sp
   17248:	sub	sp, sp, #48	; 0x30
   1724c:	str	r0, [fp, #-4]
   17250:	str	r1, [fp, #-8]
   17254:	ldr	r0, [fp, #-4]
   17258:	bl	17068 <__assert_fail@plt+0x5ca0>
   1725c:	str	r0, [fp, #-12]
   17260:	ldr	r0, [fp, #-4]
   17264:	bl	17038 <__assert_fail@plt+0x5c70>
   17268:	str	r0, [fp, #-16]
   1726c:	ldr	r0, [fp, #-4]
   17270:	bl	17050 <__assert_fail@plt+0x5c88>
   17274:	str	r0, [fp, #-20]	; 0xffffffec
   17278:	ldr	r0, [fp, #-4]
   1727c:	bl	17080 <__assert_fail@plt+0x5cb8>
   17280:	str	r0, [sp, #24]
   17284:	ldr	r0, [fp, #-8]
   17288:	ldr	r2, [fp, #-12]
   1728c:	movw	r1, #14354	; 0x3812
   17290:	movt	r1, #2
   17294:	bl	11278 <fprintf@plt>
   17298:	ldr	r1, [fp, #-8]
   1729c:	ldr	r2, [fp, #-16]
   172a0:	str	r0, [sp, #20]
   172a4:	mov	r0, r1
   172a8:	movw	r1, #14378	; 0x382a
   172ac:	movt	r1, #2
   172b0:	bl	11278 <fprintf@plt>
   172b4:	vldr	d16, [pc, #100]	; 17320 <__assert_fail@plt+0x5f58>
   172b8:	ldr	r1, [fp, #-8]
   172bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   172c0:	ldr	lr, [fp, #-20]	; 0xffffffec
   172c4:	vmov	s0, lr
   172c8:	vcvt.f64.u32	d17, s0
   172cc:	vmul.f64	d16, d16, d17
   172d0:	ldr	lr, [fp, #-16]
   172d4:	vmov	s0, lr
   172d8:	vcvt.f64.u32	d17, s0
   172dc:	vdiv.f64	d16, d16, d17
   172e0:	str	r0, [sp, #16]
   172e4:	mov	r0, r1
   172e8:	movw	r1, #14402	; 0x3842
   172ec:	movt	r1, #2
   172f0:	vstr	d16, [sp]
   172f4:	bl	11278 <fprintf@plt>
   172f8:	ldr	r1, [fp, #-8]
   172fc:	ldr	r2, [sp, #24]
   17300:	str	r0, [sp, #12]
   17304:	mov	r0, r1
   17308:	movw	r1, #14435	; 0x3863
   1730c:	movt	r1, #2
   17310:	bl	11278 <fprintf@plt>
   17314:	str	r0, [sp, #8]
   17318:	mov	sp, fp
   1731c:	pop	{fp, pc}
   17320:	andeq	r0, r0, r0
   17324:	subsmi	r0, r9, r0
   17328:	push	{fp, lr}
   1732c:	mov	fp, sp
   17330:	sub	sp, sp, #24
   17334:	str	r0, [fp, #-8]
   17338:	str	r1, [sp, #12]
   1733c:	ldr	r0, [fp, #-8]
   17340:	ldr	r1, [sp, #12]
   17344:	bl	17400 <__assert_fail@plt+0x6038>
   17348:	str	r0, [sp, #8]
   1734c:	ldr	r0, [sp, #8]
   17350:	ldr	r0, [r0]
   17354:	movw	r1, #0
   17358:	cmp	r0, r1
   1735c:	bne	1736c <__assert_fail@plt+0x5fa4>
   17360:	movw	r0, #0
   17364:	str	r0, [fp, #-4]
   17368:	b	173f4 <__assert_fail@plt+0x602c>
   1736c:	ldr	r0, [sp, #8]
   17370:	str	r0, [sp, #4]
   17374:	ldr	r0, [sp, #4]
   17378:	movw	r1, #0
   1737c:	cmp	r0, r1
   17380:	beq	173ec <__assert_fail@plt+0x6024>
   17384:	ldr	r0, [sp, #12]
   17388:	ldr	r1, [sp, #4]
   1738c:	ldr	r1, [r1]
   17390:	cmp	r0, r1
   17394:	beq	173c8 <__assert_fail@plt+0x6000>
   17398:	ldr	r0, [fp, #-8]
   1739c:	ldr	r0, [r0, #28]
   173a0:	ldr	r1, [sp, #12]
   173a4:	ldr	r2, [sp, #4]
   173a8:	ldr	r2, [r2]
   173ac:	str	r0, [sp]
   173b0:	mov	r0, r1
   173b4:	mov	r1, r2
   173b8:	ldr	r2, [sp]
   173bc:	blx	r2
   173c0:	tst	r0, #1
   173c4:	beq	173d8 <__assert_fail@plt+0x6010>
   173c8:	ldr	r0, [sp, #4]
   173cc:	ldr	r0, [r0]
   173d0:	str	r0, [fp, #-4]
   173d4:	b	173f4 <__assert_fail@plt+0x602c>
   173d8:	b	173dc <__assert_fail@plt+0x6014>
   173dc:	ldr	r0, [sp, #4]
   173e0:	ldr	r0, [r0, #4]
   173e4:	str	r0, [sp, #4]
   173e8:	b	17374 <__assert_fail@plt+0x5fac>
   173ec:	movw	r0, #0
   173f0:	str	r0, [fp, #-4]
   173f4:	ldr	r0, [fp, #-4]
   173f8:	mov	sp, fp
   173fc:	pop	{fp, pc}
   17400:	push	{fp, lr}
   17404:	mov	fp, sp
   17408:	sub	sp, sp, #16
   1740c:	str	r0, [fp, #-4]
   17410:	str	r1, [sp, #8]
   17414:	ldr	r0, [fp, #-4]
   17418:	ldr	r0, [r0, #24]
   1741c:	ldr	r1, [sp, #8]
   17420:	ldr	r2, [fp, #-4]
   17424:	ldr	r2, [r2, #8]
   17428:	str	r0, [sp]
   1742c:	mov	r0, r1
   17430:	mov	r1, r2
   17434:	ldr	r2, [sp]
   17438:	blx	r2
   1743c:	str	r0, [sp, #4]
   17440:	ldr	r0, [sp, #4]
   17444:	ldr	r1, [fp, #-4]
   17448:	ldr	r1, [r1, #8]
   1744c:	cmp	r0, r1
   17450:	bcc	17458 <__assert_fail@plt+0x6090>
   17454:	bl	11398 <abort@plt>
   17458:	ldr	r0, [fp, #-4]
   1745c:	ldr	r0, [r0]
   17460:	ldr	r1, [sp, #4]
   17464:	add	r0, r0, r1, lsl #3
   17468:	mov	sp, fp
   1746c:	pop	{fp, pc}
   17470:	push	{fp, lr}
   17474:	mov	fp, sp
   17478:	sub	sp, sp, #16
   1747c:	str	r0, [sp, #8]
   17480:	ldr	r0, [sp, #8]
   17484:	ldr	r0, [r0, #16]
   17488:	cmp	r0, #0
   1748c:	bne	1749c <__assert_fail@plt+0x60d4>
   17490:	movw	r0, #0
   17494:	str	r0, [fp, #-4]
   17498:	b	174fc <__assert_fail@plt+0x6134>
   1749c:	ldr	r0, [sp, #8]
   174a0:	ldr	r0, [r0]
   174a4:	str	r0, [sp, #4]
   174a8:	ldr	r0, [sp, #4]
   174ac:	ldr	r1, [sp, #8]
   174b0:	ldr	r1, [r1, #4]
   174b4:	cmp	r0, r1
   174b8:	bcc	174c0 <__assert_fail@plt+0x60f8>
   174bc:	bl	11398 <abort@plt>
   174c0:	ldr	r0, [sp, #4]
   174c4:	ldr	r0, [r0]
   174c8:	movw	r1, #0
   174cc:	cmp	r0, r1
   174d0:	beq	174e4 <__assert_fail@plt+0x611c>
   174d4:	ldr	r0, [sp, #4]
   174d8:	ldr	r0, [r0]
   174dc:	str	r0, [fp, #-4]
   174e0:	b	174fc <__assert_fail@plt+0x6134>
   174e4:	b	174e8 <__assert_fail@plt+0x6120>
   174e8:	b	174ec <__assert_fail@plt+0x6124>
   174ec:	ldr	r0, [sp, #4]
   174f0:	add	r0, r0, #8
   174f4:	str	r0, [sp, #4]
   174f8:	b	174a8 <__assert_fail@plt+0x60e0>
   174fc:	ldr	r0, [fp, #-4]
   17500:	mov	sp, fp
   17504:	pop	{fp, pc}
   17508:	push	{fp, lr}
   1750c:	mov	fp, sp
   17510:	sub	sp, sp, #24
   17514:	str	r0, [fp, #-8]
   17518:	str	r1, [sp, #12]
   1751c:	ldr	r0, [fp, #-8]
   17520:	ldr	r1, [sp, #12]
   17524:	bl	17400 <__assert_fail@plt+0x6038>
   17528:	str	r0, [sp, #8]
   1752c:	ldr	r0, [sp, #8]
   17530:	str	r0, [sp, #4]
   17534:	ldr	r0, [sp, #4]
   17538:	ldr	r0, [r0]
   1753c:	ldr	r1, [sp, #12]
   17540:	cmp	r0, r1
   17544:	bne	17570 <__assert_fail@plt+0x61a8>
   17548:	ldr	r0, [sp, #4]
   1754c:	ldr	r0, [r0, #4]
   17550:	movw	r1, #0
   17554:	cmp	r0, r1
   17558:	beq	17570 <__assert_fail@plt+0x61a8>
   1755c:	ldr	r0, [sp, #4]
   17560:	ldr	r0, [r0, #4]
   17564:	ldr	r0, [r0]
   17568:	str	r0, [fp, #-4]
   1756c:	b	175dc <__assert_fail@plt+0x6214>
   17570:	ldr	r0, [sp, #4]
   17574:	ldr	r0, [r0, #4]
   17578:	str	r0, [sp, #4]
   1757c:	ldr	r0, [sp, #4]
   17580:	movw	r1, #0
   17584:	cmp	r0, r1
   17588:	bne	17534 <__assert_fail@plt+0x616c>
   1758c:	b	17590 <__assert_fail@plt+0x61c8>
   17590:	ldr	r0, [sp, #8]
   17594:	add	r0, r0, #8
   17598:	str	r0, [sp, #8]
   1759c:	ldr	r1, [fp, #-8]
   175a0:	ldr	r1, [r1, #4]
   175a4:	cmp	r0, r1
   175a8:	bcs	175d4 <__assert_fail@plt+0x620c>
   175ac:	ldr	r0, [sp, #8]
   175b0:	ldr	r0, [r0]
   175b4:	movw	r1, #0
   175b8:	cmp	r0, r1
   175bc:	beq	175d0 <__assert_fail@plt+0x6208>
   175c0:	ldr	r0, [sp, #8]
   175c4:	ldr	r0, [r0]
   175c8:	str	r0, [fp, #-4]
   175cc:	b	175dc <__assert_fail@plt+0x6214>
   175d0:	b	17590 <__assert_fail@plt+0x61c8>
   175d4:	movw	r0, #0
   175d8:	str	r0, [fp, #-4]
   175dc:	ldr	r0, [fp, #-4]
   175e0:	mov	sp, fp
   175e4:	pop	{fp, pc}
   175e8:	sub	sp, sp, #28
   175ec:	str	r0, [sp, #20]
   175f0:	str	r1, [sp, #16]
   175f4:	str	r2, [sp, #12]
   175f8:	movw	r0, #0
   175fc:	str	r0, [sp, #8]
   17600:	ldr	r0, [sp, #20]
   17604:	ldr	r0, [r0]
   17608:	str	r0, [sp, #4]
   1760c:	ldr	r0, [sp, #4]
   17610:	ldr	r1, [sp, #20]
   17614:	ldr	r1, [r1, #4]
   17618:	cmp	r0, r1
   1761c:	bcs	176b0 <__assert_fail@plt+0x62e8>
   17620:	ldr	r0, [sp, #4]
   17624:	ldr	r0, [r0]
   17628:	movw	r1, #0
   1762c:	cmp	r0, r1
   17630:	beq	1769c <__assert_fail@plt+0x62d4>
   17634:	ldr	r0, [sp, #4]
   17638:	str	r0, [sp]
   1763c:	ldr	r0, [sp]
   17640:	movw	r1, #0
   17644:	cmp	r0, r1
   17648:	beq	17698 <__assert_fail@plt+0x62d0>
   1764c:	ldr	r0, [sp, #8]
   17650:	ldr	r1, [sp, #12]
   17654:	cmp	r0, r1
   17658:	bcc	17668 <__assert_fail@plt+0x62a0>
   1765c:	ldr	r0, [sp, #8]
   17660:	str	r0, [sp, #24]
   17664:	b	176b8 <__assert_fail@plt+0x62f0>
   17668:	ldr	r0, [sp]
   1766c:	ldr	r0, [r0]
   17670:	ldr	r1, [sp, #16]
   17674:	ldr	r2, [sp, #8]
   17678:	add	r3, r2, #1
   1767c:	str	r3, [sp, #8]
   17680:	add	r1, r1, r2, lsl #2
   17684:	str	r0, [r1]
   17688:	ldr	r0, [sp]
   1768c:	ldr	r0, [r0, #4]
   17690:	str	r0, [sp]
   17694:	b	1763c <__assert_fail@plt+0x6274>
   17698:	b	1769c <__assert_fail@plt+0x62d4>
   1769c:	b	176a0 <__assert_fail@plt+0x62d8>
   176a0:	ldr	r0, [sp, #4]
   176a4:	add	r0, r0, #8
   176a8:	str	r0, [sp, #4]
   176ac:	b	1760c <__assert_fail@plt+0x6244>
   176b0:	ldr	r0, [sp, #8]
   176b4:	str	r0, [sp, #24]
   176b8:	ldr	r0, [sp, #24]
   176bc:	add	sp, sp, #28
   176c0:	bx	lr
   176c4:	push	{fp, lr}
   176c8:	mov	fp, sp
   176cc:	sub	sp, sp, #32
   176d0:	str	r0, [fp, #-8]
   176d4:	str	r1, [fp, #-12]
   176d8:	str	r2, [sp, #16]
   176dc:	movw	r0, #0
   176e0:	str	r0, [sp, #12]
   176e4:	ldr	r0, [fp, #-8]
   176e8:	ldr	r0, [r0]
   176ec:	str	r0, [sp, #8]
   176f0:	ldr	r0, [sp, #8]
   176f4:	ldr	r1, [fp, #-8]
   176f8:	ldr	r1, [r1, #4]
   176fc:	cmp	r0, r1
   17700:	bcs	1779c <__assert_fail@plt+0x63d4>
   17704:	ldr	r0, [sp, #8]
   17708:	ldr	r0, [r0]
   1770c:	movw	r1, #0
   17710:	cmp	r0, r1
   17714:	beq	17788 <__assert_fail@plt+0x63c0>
   17718:	ldr	r0, [sp, #8]
   1771c:	str	r0, [sp, #4]
   17720:	ldr	r0, [sp, #4]
   17724:	movw	r1, #0
   17728:	cmp	r0, r1
   1772c:	beq	17784 <__assert_fail@plt+0x63bc>
   17730:	ldr	r0, [fp, #-12]
   17734:	ldr	r1, [sp, #4]
   17738:	ldr	r1, [r1]
   1773c:	ldr	r2, [sp, #16]
   17740:	str	r0, [sp]
   17744:	mov	r0, r1
   17748:	mov	r1, r2
   1774c:	ldr	r2, [sp]
   17750:	blx	r2
   17754:	tst	r0, #1
   17758:	bne	17768 <__assert_fail@plt+0x63a0>
   1775c:	ldr	r0, [sp, #12]
   17760:	str	r0, [fp, #-4]
   17764:	b	177a4 <__assert_fail@plt+0x63dc>
   17768:	ldr	r0, [sp, #12]
   1776c:	add	r0, r0, #1
   17770:	str	r0, [sp, #12]
   17774:	ldr	r0, [sp, #4]
   17778:	ldr	r0, [r0, #4]
   1777c:	str	r0, [sp, #4]
   17780:	b	17720 <__assert_fail@plt+0x6358>
   17784:	b	17788 <__assert_fail@plt+0x63c0>
   17788:	b	1778c <__assert_fail@plt+0x63c4>
   1778c:	ldr	r0, [sp, #8]
   17790:	add	r0, r0, #8
   17794:	str	r0, [sp, #8]
   17798:	b	176f0 <__assert_fail@plt+0x6328>
   1779c:	ldr	r0, [sp, #12]
   177a0:	str	r0, [fp, #-4]
   177a4:	ldr	r0, [fp, #-4]
   177a8:	mov	sp, fp
   177ac:	pop	{fp, pc}
   177b0:	sub	sp, sp, #16
   177b4:	str	r0, [sp, #12]
   177b8:	str	r1, [sp, #8]
   177bc:	movw	r0, #0
   177c0:	str	r0, [sp, #4]
   177c4:	ldr	r0, [sp, #12]
   177c8:	ldrb	r0, [r0]
   177cc:	strb	r0, [sp, #3]
   177d0:	sxtb	r0, r0
   177d4:	cmp	r0, #0
   177d8:	beq	1780c <__assert_fail@plt+0x6444>
   177dc:	ldr	r0, [sp, #4]
   177e0:	rsb	r0, r0, r0, lsl #5
   177e4:	ldrb	r1, [sp, #3]
   177e8:	add	r0, r0, r1
   177ec:	ldr	r1, [sp, #8]
   177f0:	udiv	r2, r0, r1
   177f4:	mls	r0, r2, r1, r0
   177f8:	str	r0, [sp, #4]
   177fc:	ldr	r0, [sp, #12]
   17800:	add	r0, r0, #1
   17804:	str	r0, [sp, #12]
   17808:	b	177c4 <__assert_fail@plt+0x63fc>
   1780c:	ldr	r0, [sp, #4]
   17810:	add	sp, sp, #16
   17814:	bx	lr
   17818:	push	{fp, lr}
   1781c:	mov	fp, sp
   17820:	sub	sp, sp, #8
   17824:	movw	r1, #14460	; 0x387c
   17828:	movt	r1, #2
   1782c:	str	r0, [sp, #4]
   17830:	ldr	r0, [sp, #4]
   17834:	movw	r2, #20
   17838:	bl	1114c <memcpy@plt>
   1783c:	mov	sp, fp
   17840:	pop	{fp, pc}
   17844:	push	{fp, lr}
   17848:	mov	fp, sp
   1784c:	sub	sp, sp, #32
   17850:	ldr	ip, [fp, #8]
   17854:	str	r0, [fp, #-8]
   17858:	str	r1, [fp, #-12]
   1785c:	str	r2, [sp, #16]
   17860:	str	r3, [sp, #12]
   17864:	ldr	r0, [sp, #16]
   17868:	movw	r1, #0
   1786c:	cmp	r0, r1
   17870:	str	ip, [sp, #4]
   17874:	bne	17884 <__assert_fail@plt+0x64bc>
   17878:	movw	r0, #31196	; 0x79dc
   1787c:	movt	r0, #1
   17880:	str	r0, [sp, #16]
   17884:	ldr	r0, [sp, #12]
   17888:	movw	r1, #0
   1788c:	cmp	r0, r1
   17890:	bne	178a0 <__assert_fail@plt+0x64d8>
   17894:	movw	r0, #31256	; 0x7a18
   17898:	movt	r0, #1
   1789c:	str	r0, [sp, #12]
   178a0:	movw	r0, #40	; 0x28
   178a4:	bl	1fd18 <__assert_fail@plt+0xe950>
   178a8:	str	r0, [sp, #8]
   178ac:	ldr	r0, [sp, #8]
   178b0:	movw	lr, #0
   178b4:	cmp	r0, lr
   178b8:	bne	178c8 <__assert_fail@plt+0x6500>
   178bc:	movw	r0, #0
   178c0:	str	r0, [fp, #-4]
   178c4:	b	179d0 <__assert_fail@plt+0x6608>
   178c8:	ldr	r0, [fp, #-12]
   178cc:	movw	r1, #0
   178d0:	cmp	r0, r1
   178d4:	bne	178e4 <__assert_fail@plt+0x651c>
   178d8:	movw	r0, #14460	; 0x387c
   178dc:	movt	r0, #2
   178e0:	str	r0, [fp, #-12]
   178e4:	ldr	r0, [fp, #-12]
   178e8:	ldr	r1, [sp, #8]
   178ec:	str	r0, [r1, #20]
   178f0:	ldr	r0, [sp, #8]
   178f4:	bl	17a44 <__assert_fail@plt+0x667c>
   178f8:	tst	r0, #1
   178fc:	bne	17904 <__assert_fail@plt+0x653c>
   17900:	b	179c0 <__assert_fail@plt+0x65f8>
   17904:	ldr	r0, [fp, #-8]
   17908:	ldr	r1, [fp, #-12]
   1790c:	bl	17b98 <__assert_fail@plt+0x67d0>
   17910:	ldr	r1, [sp, #8]
   17914:	str	r0, [r1, #8]
   17918:	ldr	r0, [sp, #8]
   1791c:	ldr	r0, [r0, #8]
   17920:	cmp	r0, #0
   17924:	bne	1792c <__assert_fail@plt+0x6564>
   17928:	b	179c0 <__assert_fail@plt+0x65f8>
   1792c:	ldr	r0, [sp, #8]
   17930:	ldr	r0, [r0, #8]
   17934:	movw	r1, #8
   17938:	bl	1fc7c <__assert_fail@plt+0xe8b4>
   1793c:	ldr	r1, [sp, #8]
   17940:	str	r0, [r1]
   17944:	ldr	r0, [sp, #8]
   17948:	ldr	r0, [r0]
   1794c:	movw	r1, #0
   17950:	cmp	r0, r1
   17954:	bne	1795c <__assert_fail@plt+0x6594>
   17958:	b	179c0 <__assert_fail@plt+0x65f8>
   1795c:	ldr	r0, [sp, #8]
   17960:	ldr	r1, [r0]
   17964:	ldr	r0, [r0, #8]
   17968:	add	r0, r1, r0, lsl #3
   1796c:	ldr	r1, [sp, #8]
   17970:	str	r0, [r1, #4]
   17974:	ldr	r0, [sp, #8]
   17978:	movw	r1, #0
   1797c:	str	r1, [r0, #12]
   17980:	ldr	r0, [sp, #8]
   17984:	str	r1, [r0, #16]
   17988:	ldr	r0, [sp, #16]
   1798c:	ldr	r2, [sp, #8]
   17990:	str	r0, [r2, #24]
   17994:	ldr	r0, [sp, #12]
   17998:	ldr	r2, [sp, #8]
   1799c:	str	r0, [r2, #28]
   179a0:	ldr	r0, [fp, #8]
   179a4:	ldr	r2, [sp, #8]
   179a8:	str	r0, [r2, #32]
   179ac:	ldr	r0, [sp, #8]
   179b0:	str	r1, [r0, #36]	; 0x24
   179b4:	ldr	r0, [sp, #8]
   179b8:	str	r0, [fp, #-4]
   179bc:	b	179d0 <__assert_fail@plt+0x6608>
   179c0:	ldr	r0, [sp, #8]
   179c4:	bl	20a84 <__assert_fail@plt+0xf6bc>
   179c8:	movw	r0, #0
   179cc:	str	r0, [fp, #-4]
   179d0:	ldr	r0, [fp, #-4]
   179d4:	mov	sp, fp
   179d8:	pop	{fp, pc}
   179dc:	push	{fp, lr}
   179e0:	mov	fp, sp
   179e4:	sub	sp, sp, #16
   179e8:	str	r0, [fp, #-4]
   179ec:	str	r1, [sp, #8]
   179f0:	ldr	r0, [fp, #-4]
   179f4:	mov	r1, #3
   179f8:	bl	1ffcc <__assert_fail@plt+0xec04>
   179fc:	str	r0, [sp, #4]
   17a00:	ldr	r0, [sp, #4]
   17a04:	ldr	r1, [sp, #8]
   17a08:	udiv	lr, r0, r1
   17a0c:	mls	r0, lr, r1, r0
   17a10:	mov	sp, fp
   17a14:	pop	{fp, pc}
   17a18:	sub	sp, sp, #8
   17a1c:	str	r0, [sp, #4]
   17a20:	str	r1, [sp]
   17a24:	ldr	r0, [sp, #4]
   17a28:	ldr	r1, [sp]
   17a2c:	cmp	r0, r1
   17a30:	movw	r0, #0
   17a34:	moveq	r0, #1
   17a38:	and	r0, r0, #1
   17a3c:	add	sp, sp, #8
   17a40:	bx	lr
   17a44:	sub	sp, sp, #16
   17a48:	str	r0, [sp, #8]
   17a4c:	ldr	r0, [sp, #8]
   17a50:	ldr	r0, [r0, #20]
   17a54:	str	r0, [sp, #4]
   17a58:	ldr	r0, [sp, #4]
   17a5c:	movw	r1, #14460	; 0x387c
   17a60:	movt	r1, #2
   17a64:	cmp	r0, r1
   17a68:	bne	17a7c <__assert_fail@plt+0x66b4>
   17a6c:	movw	r0, #1
   17a70:	and	r0, r0, #1
   17a74:	strb	r0, [sp, #15]
   17a78:	b	17b80 <__assert_fail@plt+0x67b8>
   17a7c:	vldr	s0, [pc, #268]	; 17b90 <__assert_fail@plt+0x67c8>
   17a80:	vstr	s0, [sp]
   17a84:	vldr	s0, [sp]
   17a88:	ldr	r0, [sp, #4]
   17a8c:	vldr	s2, [r0, #8]
   17a90:	vcmpe.f32	s0, s2
   17a94:	vmrs	APSR_nzcv, fpscr
   17a98:	bpl	17b64 <__assert_fail@plt+0x679c>
   17a9c:	ldr	r0, [sp, #4]
   17aa0:	vldr	s0, [r0, #8]
   17aa4:	vldr	s2, [sp]
   17aa8:	vmov.f32	s4, #112	; 0x3f800000  1.0
   17aac:	vsub.f32	s2, s4, s2
   17ab0:	vcmpe.f32	s0, s2
   17ab4:	vmrs	APSR_nzcv, fpscr
   17ab8:	bpl	17b64 <__assert_fail@plt+0x679c>
   17abc:	vldr	s0, [sp]
   17ac0:	vmov.f32	s2, #112	; 0x3f800000  1.0
   17ac4:	vadd.f32	s0, s2, s0
   17ac8:	ldr	r0, [sp, #4]
   17acc:	vldr	s2, [r0, #12]
   17ad0:	vcmpe.f32	s0, s2
   17ad4:	vmrs	APSR_nzcv, fpscr
   17ad8:	bpl	17b64 <__assert_fail@plt+0x679c>
   17adc:	vldr	s0, [pc, #176]	; 17b94 <__assert_fail@plt+0x67cc>
   17ae0:	ldr	r0, [sp, #4]
   17ae4:	vldr	s2, [r0]
   17ae8:	vcmpe.f32	s0, s2
   17aec:	vmrs	APSR_nzcv, fpscr
   17af0:	bhi	17b64 <__assert_fail@plt+0x679c>
   17af4:	ldr	r0, [sp, #4]
   17af8:	vldr	s0, [r0]
   17afc:	vldr	s2, [sp]
   17b00:	vadd.f32	s0, s0, s2
   17b04:	ldr	r0, [sp, #4]
   17b08:	vldr	s2, [r0, #4]
   17b0c:	vcmpe.f32	s0, s2
   17b10:	vmrs	APSR_nzcv, fpscr
   17b14:	bpl	17b64 <__assert_fail@plt+0x679c>
   17b18:	ldr	r0, [sp, #4]
   17b1c:	vldr	s0, [r0, #4]
   17b20:	vmov.f32	s2, #112	; 0x3f800000  1.0
   17b24:	vcmpe.f32	s0, s2
   17b28:	vmrs	APSR_nzcv, fpscr
   17b2c:	bhi	17b64 <__assert_fail@plt+0x679c>
   17b30:	ldr	r0, [sp, #4]
   17b34:	vldr	s0, [r0]
   17b38:	vldr	s2, [sp]
   17b3c:	vadd.f32	s0, s0, s2
   17b40:	ldr	r0, [sp, #4]
   17b44:	vldr	s2, [r0, #8]
   17b48:	vcmpe.f32	s0, s2
   17b4c:	vmrs	APSR_nzcv, fpscr
   17b50:	bpl	17b64 <__assert_fail@plt+0x679c>
   17b54:	movw	r0, #1
   17b58:	and	r0, r0, #1
   17b5c:	strb	r0, [sp, #15]
   17b60:	b	17b80 <__assert_fail@plt+0x67b8>
   17b64:	ldr	r0, [sp, #8]
   17b68:	movw	r1, #14460	; 0x387c
   17b6c:	movt	r1, #2
   17b70:	str	r1, [r0, #20]
   17b74:	movw	r0, #0
   17b78:	and	r0, r0, #1
   17b7c:	strb	r0, [sp, #15]
   17b80:	ldrb	r0, [sp, #15]
   17b84:	and	r0, r0, #1
   17b88:	add	sp, sp, #16
   17b8c:	bx	lr
   17b90:	stclcc	12, cr12, [ip, #820]	; 0x334
   17b94:	andeq	r0, r0, r0
   17b98:	push	{fp, lr}
   17b9c:	mov	fp, sp
   17ba0:	sub	sp, sp, #16
   17ba4:	str	r0, [sp, #8]
   17ba8:	str	r1, [sp, #4]
   17bac:	ldr	r0, [sp, #4]
   17bb0:	ldrb	r0, [r0, #16]
   17bb4:	tst	r0, #1
   17bb8:	bne	17c08 <__assert_fail@plt+0x6840>
   17bbc:	vldr	s0, [pc, #128]	; 17c44 <__assert_fail@plt+0x687c>
   17bc0:	ldr	r0, [sp, #8]
   17bc4:	vmov	s2, r0
   17bc8:	vcvt.f32.u32	s2, s2
   17bcc:	ldr	r0, [sp, #4]
   17bd0:	vldr	s4, [r0, #8]
   17bd4:	vdiv.f32	s2, s2, s4
   17bd8:	vstr	s2, [sp]
   17bdc:	vldr	s2, [sp]
   17be0:	vcmpe.f32	s0, s2
   17be4:	vmrs	APSR_nzcv, fpscr
   17be8:	bhi	17bf8 <__assert_fail@plt+0x6830>
   17bec:	movw	r0, #0
   17bf0:	str	r0, [fp, #-4]
   17bf4:	b	17c38 <__assert_fail@plt+0x6870>
   17bf8:	vldr	s0, [sp]
   17bfc:	vcvt.u32.f32	s0, s0
   17c00:	vmov	r0, s0
   17c04:	str	r0, [sp, #8]
   17c08:	ldr	r0, [sp, #8]
   17c0c:	bl	18b10 <__assert_fail@plt+0x7748>
   17c10:	ldr	lr, [pc, #48]	; 17c48 <__assert_fail@plt+0x6880>
   17c14:	str	r0, [sp, #8]
   17c18:	ldr	r0, [sp, #8]
   17c1c:	cmp	lr, r0
   17c20:	bcs	17c30 <__assert_fail@plt+0x6868>
   17c24:	movw	r0, #0
   17c28:	str	r0, [fp, #-4]
   17c2c:	b	17c38 <__assert_fail@plt+0x6870>
   17c30:	ldr	r0, [sp, #8]
   17c34:	str	r0, [fp, #-4]
   17c38:	ldr	r0, [fp, #-4]
   17c3c:	mov	sp, fp
   17c40:	pop	{fp, pc}
   17c44:	svcmi	0x00800000
   17c48:	svcne	0x00ffffff
   17c4c:	push	{fp, lr}
   17c50:	mov	fp, sp
   17c54:	sub	sp, sp, #24
   17c58:	str	r0, [fp, #-4]
   17c5c:	ldr	r0, [fp, #-4]
   17c60:	ldr	r0, [r0]
   17c64:	str	r0, [fp, #-8]
   17c68:	ldr	r0, [fp, #-8]
   17c6c:	ldr	r1, [fp, #-4]
   17c70:	ldr	r1, [r1, #4]
   17c74:	cmp	r0, r1
   17c78:	bcs	17d7c <__assert_fail@plt+0x69b4>
   17c7c:	ldr	r0, [fp, #-8]
   17c80:	ldr	r0, [r0]
   17c84:	movw	r1, #0
   17c88:	cmp	r0, r1
   17c8c:	beq	17d68 <__assert_fail@plt+0x69a0>
   17c90:	ldr	r0, [fp, #-8]
   17c94:	ldr	r0, [r0, #4]
   17c98:	str	r0, [sp, #12]
   17c9c:	ldr	r0, [sp, #12]
   17ca0:	movw	r1, #0
   17ca4:	cmp	r0, r1
   17ca8:	beq	17d20 <__assert_fail@plt+0x6958>
   17cac:	ldr	r0, [fp, #-4]
   17cb0:	ldr	r0, [r0, #32]
   17cb4:	movw	r1, #0
   17cb8:	cmp	r0, r1
   17cbc:	beq	17ce0 <__assert_fail@plt+0x6918>
   17cc0:	ldr	r0, [fp, #-4]
   17cc4:	ldr	r0, [r0, #32]
   17cc8:	ldr	r1, [sp, #12]
   17ccc:	ldr	r1, [r1]
   17cd0:	str	r0, [sp, #4]
   17cd4:	mov	r0, r1
   17cd8:	ldr	r1, [sp, #4]
   17cdc:	blx	r1
   17ce0:	ldr	r0, [sp, #12]
   17ce4:	movw	r1, #0
   17ce8:	str	r1, [r0]
   17cec:	ldr	r0, [sp, #12]
   17cf0:	ldr	r0, [r0, #4]
   17cf4:	str	r0, [sp, #8]
   17cf8:	ldr	r0, [fp, #-4]
   17cfc:	ldr	r0, [r0, #36]	; 0x24
   17d00:	ldr	r1, [sp, #12]
   17d04:	str	r0, [r1, #4]
   17d08:	ldr	r0, [sp, #12]
   17d0c:	ldr	r1, [fp, #-4]
   17d10:	str	r0, [r1, #36]	; 0x24
   17d14:	ldr	r0, [sp, #8]
   17d18:	str	r0, [sp, #12]
   17d1c:	b	17c9c <__assert_fail@plt+0x68d4>
   17d20:	ldr	r0, [fp, #-4]
   17d24:	ldr	r0, [r0, #32]
   17d28:	movw	r1, #0
   17d2c:	cmp	r0, r1
   17d30:	beq	17d54 <__assert_fail@plt+0x698c>
   17d34:	ldr	r0, [fp, #-4]
   17d38:	ldr	r0, [r0, #32]
   17d3c:	ldr	r1, [fp, #-8]
   17d40:	ldr	r1, [r1]
   17d44:	str	r0, [sp]
   17d48:	mov	r0, r1
   17d4c:	ldr	r1, [sp]
   17d50:	blx	r1
   17d54:	ldr	r0, [fp, #-8]
   17d58:	movw	r1, #0
   17d5c:	str	r1, [r0]
   17d60:	ldr	r0, [fp, #-8]
   17d64:	str	r1, [r0, #4]
   17d68:	b	17d6c <__assert_fail@plt+0x69a4>
   17d6c:	ldr	r0, [fp, #-8]
   17d70:	add	r0, r0, #8
   17d74:	str	r0, [fp, #-8]
   17d78:	b	17c68 <__assert_fail@plt+0x68a0>
   17d7c:	ldr	r0, [fp, #-4]
   17d80:	movw	r1, #0
   17d84:	str	r1, [r0, #12]
   17d88:	ldr	r0, [fp, #-4]
   17d8c:	str	r1, [r0, #16]
   17d90:	mov	sp, fp
   17d94:	pop	{fp, pc}
   17d98:	push	{fp, lr}
   17d9c:	mov	fp, sp
   17da0:	sub	sp, sp, #24
   17da4:	str	r0, [fp, #-4]
   17da8:	ldr	r0, [fp, #-4]
   17dac:	ldr	r0, [r0, #32]
   17db0:	movw	r1, #0
   17db4:	cmp	r0, r1
   17db8:	beq	17e64 <__assert_fail@plt+0x6a9c>
   17dbc:	ldr	r0, [fp, #-4]
   17dc0:	ldr	r0, [r0, #16]
   17dc4:	cmp	r0, #0
   17dc8:	beq	17e64 <__assert_fail@plt+0x6a9c>
   17dcc:	ldr	r0, [fp, #-4]
   17dd0:	ldr	r0, [r0]
   17dd4:	str	r0, [fp, #-8]
   17dd8:	ldr	r0, [fp, #-8]
   17ddc:	ldr	r1, [fp, #-4]
   17de0:	ldr	r1, [r1, #4]
   17de4:	cmp	r0, r1
   17de8:	bcs	17e60 <__assert_fail@plt+0x6a98>
   17dec:	ldr	r0, [fp, #-8]
   17df0:	ldr	r0, [r0]
   17df4:	movw	r1, #0
   17df8:	cmp	r0, r1
   17dfc:	beq	17e4c <__assert_fail@plt+0x6a84>
   17e00:	ldr	r0, [fp, #-8]
   17e04:	str	r0, [sp, #12]
   17e08:	ldr	r0, [sp, #12]
   17e0c:	movw	r1, #0
   17e10:	cmp	r0, r1
   17e14:	beq	17e48 <__assert_fail@plt+0x6a80>
   17e18:	ldr	r0, [fp, #-4]
   17e1c:	ldr	r0, [r0, #32]
   17e20:	ldr	r1, [sp, #12]
   17e24:	ldr	r1, [r1]
   17e28:	str	r0, [sp, #4]
   17e2c:	mov	r0, r1
   17e30:	ldr	r1, [sp, #4]
   17e34:	blx	r1
   17e38:	ldr	r0, [sp, #12]
   17e3c:	ldr	r0, [r0, #4]
   17e40:	str	r0, [sp, #12]
   17e44:	b	17e08 <__assert_fail@plt+0x6a40>
   17e48:	b	17e4c <__assert_fail@plt+0x6a84>
   17e4c:	b	17e50 <__assert_fail@plt+0x6a88>
   17e50:	ldr	r0, [fp, #-8]
   17e54:	add	r0, r0, #8
   17e58:	str	r0, [fp, #-8]
   17e5c:	b	17dd8 <__assert_fail@plt+0x6a10>
   17e60:	b	17e64 <__assert_fail@plt+0x6a9c>
   17e64:	ldr	r0, [fp, #-4]
   17e68:	ldr	r0, [r0]
   17e6c:	str	r0, [fp, #-8]
   17e70:	ldr	r0, [fp, #-8]
   17e74:	ldr	r1, [fp, #-4]
   17e78:	ldr	r1, [r1, #4]
   17e7c:	cmp	r0, r1
   17e80:	bcs	17ed4 <__assert_fail@plt+0x6b0c>
   17e84:	ldr	r0, [fp, #-8]
   17e88:	ldr	r0, [r0, #4]
   17e8c:	str	r0, [sp, #12]
   17e90:	ldr	r0, [sp, #12]
   17e94:	movw	r1, #0
   17e98:	cmp	r0, r1
   17e9c:	beq	17ec0 <__assert_fail@plt+0x6af8>
   17ea0:	ldr	r0, [sp, #12]
   17ea4:	ldr	r0, [r0, #4]
   17ea8:	str	r0, [sp, #8]
   17eac:	ldr	r0, [sp, #12]
   17eb0:	bl	20a84 <__assert_fail@plt+0xf6bc>
   17eb4:	ldr	r0, [sp, #8]
   17eb8:	str	r0, [sp, #12]
   17ebc:	b	17e90 <__assert_fail@plt+0x6ac8>
   17ec0:	b	17ec4 <__assert_fail@plt+0x6afc>
   17ec4:	ldr	r0, [fp, #-8]
   17ec8:	add	r0, r0, #8
   17ecc:	str	r0, [fp, #-8]
   17ed0:	b	17e70 <__assert_fail@plt+0x6aa8>
   17ed4:	ldr	r0, [fp, #-4]
   17ed8:	ldr	r0, [r0, #36]	; 0x24
   17edc:	str	r0, [sp, #12]
   17ee0:	ldr	r0, [sp, #12]
   17ee4:	movw	r1, #0
   17ee8:	cmp	r0, r1
   17eec:	beq	17f10 <__assert_fail@plt+0x6b48>
   17ef0:	ldr	r0, [sp, #12]
   17ef4:	ldr	r0, [r0, #4]
   17ef8:	str	r0, [sp, #8]
   17efc:	ldr	r0, [sp, #12]
   17f00:	bl	20a84 <__assert_fail@plt+0xf6bc>
   17f04:	ldr	r0, [sp, #8]
   17f08:	str	r0, [sp, #12]
   17f0c:	b	17ee0 <__assert_fail@plt+0x6b18>
   17f10:	ldr	r0, [fp, #-4]
   17f14:	ldr	r0, [r0]
   17f18:	bl	20a84 <__assert_fail@plt+0xf6bc>
   17f1c:	ldr	r0, [fp, #-4]
   17f20:	bl	20a84 <__assert_fail@plt+0xf6bc>
   17f24:	mov	sp, fp
   17f28:	pop	{fp, pc}
   17f2c:	push	{fp, lr}
   17f30:	mov	fp, sp
   17f34:	sub	sp, sp, #64	; 0x40
   17f38:	str	r0, [fp, #-8]
   17f3c:	str	r1, [fp, #-12]
   17f40:	ldr	r0, [fp, #-12]
   17f44:	ldr	r1, [fp, #-8]
   17f48:	ldr	r1, [r1, #20]
   17f4c:	bl	17b98 <__assert_fail@plt+0x67d0>
   17f50:	str	r0, [sp, #4]
   17f54:	ldr	r0, [sp, #4]
   17f58:	cmp	r0, #0
   17f5c:	bne	17f70 <__assert_fail@plt+0x6ba8>
   17f60:	movw	r0, #0
   17f64:	and	r0, r0, #1
   17f68:	strb	r0, [fp, #-1]
   17f6c:	b	18148 <__assert_fail@plt+0x6d80>
   17f70:	ldr	r0, [sp, #4]
   17f74:	ldr	r1, [fp, #-8]
   17f78:	ldr	r1, [r1, #8]
   17f7c:	cmp	r0, r1
   17f80:	bne	17f94 <__assert_fail@plt+0x6bcc>
   17f84:	movw	r0, #1
   17f88:	and	r0, r0, #1
   17f8c:	strb	r0, [fp, #-1]
   17f90:	b	18148 <__assert_fail@plt+0x6d80>
   17f94:	add	r0, sp, #12
   17f98:	str	r0, [sp, #8]
   17f9c:	ldr	r0, [sp, #4]
   17fa0:	movw	r1, #8
   17fa4:	bl	1fc7c <__assert_fail@plt+0xe8b4>
   17fa8:	ldr	r1, [sp, #8]
   17fac:	str	r0, [r1]
   17fb0:	ldr	r0, [sp, #8]
   17fb4:	ldr	r0, [r0]
   17fb8:	movw	r1, #0
   17fbc:	cmp	r0, r1
   17fc0:	bne	17fd4 <__assert_fail@plt+0x6c0c>
   17fc4:	movw	r0, #0
   17fc8:	and	r0, r0, #1
   17fcc:	strb	r0, [fp, #-1]
   17fd0:	b	18148 <__assert_fail@plt+0x6d80>
   17fd4:	ldr	r0, [sp, #4]
   17fd8:	ldr	r1, [sp, #8]
   17fdc:	str	r0, [r1, #8]
   17fe0:	ldr	r0, [sp, #8]
   17fe4:	ldr	r0, [r0]
   17fe8:	ldr	r1, [sp, #4]
   17fec:	add	r0, r0, r1, lsl #3
   17ff0:	ldr	r1, [sp, #8]
   17ff4:	str	r0, [r1, #4]
   17ff8:	ldr	r0, [sp, #8]
   17ffc:	movw	r1, #0
   18000:	str	r1, [r0, #12]
   18004:	ldr	r0, [sp, #8]
   18008:	str	r1, [r0, #16]
   1800c:	ldr	r0, [fp, #-8]
   18010:	ldr	r0, [r0, #20]
   18014:	ldr	r1, [sp, #8]
   18018:	str	r0, [r1, #20]
   1801c:	ldr	r0, [fp, #-8]
   18020:	ldr	r0, [r0, #24]
   18024:	ldr	r1, [sp, #8]
   18028:	str	r0, [r1, #24]
   1802c:	ldr	r0, [fp, #-8]
   18030:	ldr	r0, [r0, #28]
   18034:	ldr	r1, [sp, #8]
   18038:	str	r0, [r1, #28]
   1803c:	ldr	r0, [fp, #-8]
   18040:	ldr	r0, [r0, #32]
   18044:	ldr	r1, [sp, #8]
   18048:	str	r0, [r1, #32]
   1804c:	ldr	r0, [fp, #-8]
   18050:	ldr	r0, [r0, #36]	; 0x24
   18054:	ldr	r1, [sp, #8]
   18058:	str	r0, [r1, #36]	; 0x24
   1805c:	ldr	r0, [sp, #8]
   18060:	ldr	r1, [fp, #-8]
   18064:	movw	r2, #0
   18068:	and	r2, r2, #1
   1806c:	bl	18158 <__assert_fail@plt+0x6d90>
   18070:	tst	r0, #1
   18074:	beq	180e4 <__assert_fail@plt+0x6d1c>
   18078:	ldr	r0, [fp, #-8]
   1807c:	ldr	r0, [r0]
   18080:	bl	20a84 <__assert_fail@plt+0xf6bc>
   18084:	ldr	r0, [sp, #8]
   18088:	ldr	r0, [r0]
   1808c:	ldr	lr, [fp, #-8]
   18090:	str	r0, [lr]
   18094:	ldr	r0, [sp, #8]
   18098:	ldr	r0, [r0, #4]
   1809c:	ldr	lr, [fp, #-8]
   180a0:	str	r0, [lr, #4]
   180a4:	ldr	r0, [sp, #8]
   180a8:	ldr	r0, [r0, #8]
   180ac:	ldr	lr, [fp, #-8]
   180b0:	str	r0, [lr, #8]
   180b4:	ldr	r0, [sp, #8]
   180b8:	ldr	r0, [r0, #12]
   180bc:	ldr	lr, [fp, #-8]
   180c0:	str	r0, [lr, #12]
   180c4:	ldr	r0, [sp, #8]
   180c8:	ldr	r0, [r0, #36]	; 0x24
   180cc:	ldr	lr, [fp, #-8]
   180d0:	str	r0, [lr, #36]	; 0x24
   180d4:	movw	r0, #1
   180d8:	and	r0, r0, #1
   180dc:	strb	r0, [fp, #-1]
   180e0:	b	18148 <__assert_fail@plt+0x6d80>
   180e4:	ldr	r0, [sp, #8]
   180e8:	ldr	r0, [r0, #36]	; 0x24
   180ec:	ldr	r1, [fp, #-8]
   180f0:	str	r0, [r1, #36]	; 0x24
   180f4:	ldr	r0, [fp, #-8]
   180f8:	ldr	r1, [sp, #8]
   180fc:	movw	r2, #1
   18100:	and	r2, r2, #1
   18104:	bl	18158 <__assert_fail@plt+0x6d90>
   18108:	tst	r0, #1
   1810c:	beq	1812c <__assert_fail@plt+0x6d64>
   18110:	ldr	r0, [fp, #-8]
   18114:	ldr	r1, [sp, #8]
   18118:	movw	r2, #0
   1811c:	and	r2, r2, #1
   18120:	bl	18158 <__assert_fail@plt+0x6d90>
   18124:	tst	r0, #1
   18128:	bne	18130 <__assert_fail@plt+0x6d68>
   1812c:	bl	11398 <abort@plt>
   18130:	ldr	r0, [sp, #8]
   18134:	ldr	r0, [r0]
   18138:	bl	20a84 <__assert_fail@plt+0xf6bc>
   1813c:	movw	r0, #0
   18140:	and	r0, r0, #1
   18144:	strb	r0, [fp, #-1]
   18148:	ldrb	r0, [fp, #-1]
   1814c:	and	r0, r0, #1
   18150:	mov	sp, fp
   18154:	pop	{fp, pc}
   18158:	push	{fp, lr}
   1815c:	mov	fp, sp
   18160:	sub	sp, sp, #40	; 0x28
   18164:	str	r0, [fp, #-8]
   18168:	str	r1, [fp, #-12]
   1816c:	and	r0, r2, #1
   18170:	strb	r0, [fp, #-13]
   18174:	ldr	r0, [fp, #-12]
   18178:	ldr	r0, [r0]
   1817c:	str	r0, [sp, #20]
   18180:	ldr	r0, [sp, #20]
   18184:	ldr	r1, [fp, #-12]
   18188:	ldr	r1, [r1, #4]
   1818c:	cmp	r0, r1
   18190:	bcs	1834c <__assert_fail@plt+0x6f84>
   18194:	ldr	r0, [sp, #20]
   18198:	ldr	r0, [r0]
   1819c:	movw	r1, #0
   181a0:	cmp	r0, r1
   181a4:	beq	18338 <__assert_fail@plt+0x6f70>
   181a8:	ldr	r0, [sp, #20]
   181ac:	ldr	r0, [r0, #4]
   181b0:	str	r0, [sp, #16]
   181b4:	ldr	r0, [sp, #16]
   181b8:	movw	r1, #0
   181bc:	cmp	r0, r1
   181c0:	beq	18258 <__assert_fail@plt+0x6e90>
   181c4:	ldr	r0, [sp, #16]
   181c8:	ldr	r0, [r0]
   181cc:	str	r0, [sp, #8]
   181d0:	ldr	r0, [fp, #-8]
   181d4:	ldr	r1, [sp, #8]
   181d8:	bl	17400 <__assert_fail@plt+0x6038>
   181dc:	str	r0, [sp, #4]
   181e0:	ldr	r0, [sp, #16]
   181e4:	ldr	r0, [r0, #4]
   181e8:	str	r0, [sp, #12]
   181ec:	ldr	r0, [sp, #4]
   181f0:	ldr	r0, [r0]
   181f4:	movw	r1, #0
   181f8:	cmp	r0, r1
   181fc:	beq	18220 <__assert_fail@plt+0x6e58>
   18200:	ldr	r0, [sp, #4]
   18204:	ldr	r0, [r0, #4]
   18208:	ldr	r1, [sp, #16]
   1820c:	str	r0, [r1, #4]
   18210:	ldr	r0, [sp, #16]
   18214:	ldr	r1, [sp, #4]
   18218:	str	r0, [r1, #4]
   1821c:	b	18248 <__assert_fail@plt+0x6e80>
   18220:	ldr	r0, [sp, #8]
   18224:	ldr	r1, [sp, #4]
   18228:	str	r0, [r1]
   1822c:	ldr	r0, [fp, #-8]
   18230:	ldr	r1, [r0, #12]
   18234:	add	r1, r1, #1
   18238:	str	r1, [r0, #12]
   1823c:	ldr	r0, [fp, #-8]
   18240:	ldr	r1, [sp, #16]
   18244:	bl	18c68 <__assert_fail@plt+0x78a0>
   18248:	b	1824c <__assert_fail@plt+0x6e84>
   1824c:	ldr	r0, [sp, #12]
   18250:	str	r0, [sp, #16]
   18254:	b	181b4 <__assert_fail@plt+0x6dec>
   18258:	ldr	r0, [sp, #20]
   1825c:	ldr	r0, [r0]
   18260:	str	r0, [sp, #8]
   18264:	ldr	r0, [sp, #20]
   18268:	movw	r1, #0
   1826c:	str	r1, [r0, #4]
   18270:	ldrb	r0, [fp, #-13]
   18274:	tst	r0, #1
   18278:	beq	18280 <__assert_fail@plt+0x6eb8>
   1827c:	b	1833c <__assert_fail@plt+0x6f74>
   18280:	ldr	r0, [fp, #-8]
   18284:	ldr	r1, [sp, #8]
   18288:	bl	17400 <__assert_fail@plt+0x6038>
   1828c:	str	r0, [sp, #4]
   18290:	ldr	r0, [sp, #4]
   18294:	ldr	r0, [r0]
   18298:	movw	r1, #0
   1829c:	cmp	r0, r1
   182a0:	beq	182fc <__assert_fail@plt+0x6f34>
   182a4:	ldr	r0, [fp, #-8]
   182a8:	bl	18814 <__assert_fail@plt+0x744c>
   182ac:	str	r0, [sp]
   182b0:	ldr	r0, [sp]
   182b4:	movw	lr, #0
   182b8:	cmp	r0, lr
   182bc:	bne	182d0 <__assert_fail@plt+0x6f08>
   182c0:	movw	r0, #0
   182c4:	and	r0, r0, #1
   182c8:	strb	r0, [fp, #-1]
   182cc:	b	18358 <__assert_fail@plt+0x6f90>
   182d0:	ldr	r0, [sp, #8]
   182d4:	ldr	r1, [sp]
   182d8:	str	r0, [r1]
   182dc:	ldr	r0, [sp, #4]
   182e0:	ldr	r0, [r0, #4]
   182e4:	ldr	r1, [sp]
   182e8:	str	r0, [r1, #4]
   182ec:	ldr	r0, [sp]
   182f0:	ldr	r1, [sp, #4]
   182f4:	str	r0, [r1, #4]
   182f8:	b	18318 <__assert_fail@plt+0x6f50>
   182fc:	ldr	r0, [sp, #8]
   18300:	ldr	r1, [sp, #4]
   18304:	str	r0, [r1]
   18308:	ldr	r0, [fp, #-8]
   1830c:	ldr	r1, [r0, #12]
   18310:	add	r1, r1, #1
   18314:	str	r1, [r0, #12]
   18318:	ldr	r0, [sp, #20]
   1831c:	movw	r1, #0
   18320:	str	r1, [r0]
   18324:	ldr	r0, [fp, #-12]
   18328:	ldr	r1, [r0, #12]
   1832c:	mvn	r2, #0
   18330:	add	r1, r1, r2
   18334:	str	r1, [r0, #12]
   18338:	b	1833c <__assert_fail@plt+0x6f74>
   1833c:	ldr	r0, [sp, #20]
   18340:	add	r0, r0, #8
   18344:	str	r0, [sp, #20]
   18348:	b	18180 <__assert_fail@plt+0x6db8>
   1834c:	movw	r0, #1
   18350:	and	r0, r0, #1
   18354:	strb	r0, [fp, #-1]
   18358:	ldrb	r0, [fp, #-1]
   1835c:	and	r0, r0, #1
   18360:	mov	sp, fp
   18364:	pop	{fp, pc}
   18368:	push	{fp, lr}
   1836c:	mov	fp, sp
   18370:	sub	sp, sp, #48	; 0x30
   18374:	str	r0, [fp, #-8]
   18378:	str	r1, [fp, #-12]
   1837c:	str	r2, [fp, #-16]
   18380:	ldr	r0, [fp, #-12]
   18384:	movw	r1, #0
   18388:	cmp	r0, r1
   1838c:	bne	18394 <__assert_fail@plt+0x6fcc>
   18390:	bl	11398 <abort@plt>
   18394:	ldr	r0, [fp, #-8]
   18398:	ldr	r1, [fp, #-12]
   1839c:	add	r2, sp, #24
   183a0:	movw	r3, #0
   183a4:	and	r3, r3, #1
   183a8:	bl	18618 <__assert_fail@plt+0x7250>
   183ac:	str	r0, [fp, #-20]	; 0xffffffec
   183b0:	movw	r1, #0
   183b4:	cmp	r0, r1
   183b8:	beq	183e4 <__assert_fail@plt+0x701c>
   183bc:	ldr	r0, [fp, #-16]
   183c0:	movw	r1, #0
   183c4:	cmp	r0, r1
   183c8:	beq	183d8 <__assert_fail@plt+0x7010>
   183cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   183d0:	ldr	r1, [fp, #-16]
   183d4:	str	r0, [r1]
   183d8:	movw	r0, #0
   183dc:	str	r0, [fp, #-4]
   183e0:	b	18608 <__assert_fail@plt+0x7240>
   183e4:	ldr	r0, [fp, #-8]
   183e8:	ldr	r0, [r0, #12]
   183ec:	vmov	s0, r0
   183f0:	vcvt.f32.u32	s0, s0
   183f4:	ldr	r0, [fp, #-8]
   183f8:	ldr	r0, [r0, #20]
   183fc:	vldr	s2, [r0, #8]
   18400:	ldr	r0, [fp, #-8]
   18404:	ldr	r0, [r0, #8]
   18408:	vmov	s4, r0
   1840c:	vcvt.f32.u32	s4, s4
   18410:	vmul.f32	s2, s2, s4
   18414:	vcmpe.f32	s0, s2
   18418:	vmrs	APSR_nzcv, fpscr
   1841c:	ble	18554 <__assert_fail@plt+0x718c>
   18420:	ldr	r0, [fp, #-8]
   18424:	bl	17a44 <__assert_fail@plt+0x667c>
   18428:	ldr	lr, [fp, #-8]
   1842c:	ldr	lr, [lr, #12]
   18430:	vmov	s0, lr
   18434:	vcvt.f32.u32	s0, s0
   18438:	ldr	lr, [fp, #-8]
   1843c:	ldr	lr, [lr, #20]
   18440:	vldr	s2, [lr, #8]
   18444:	ldr	lr, [fp, #-8]
   18448:	ldr	lr, [lr, #8]
   1844c:	vmov	s4, lr
   18450:	vcvt.f32.u32	s4, s4
   18454:	vmul.f32	s2, s2, s4
   18458:	vcmpe.f32	s0, s2
   1845c:	vmrs	APSR_nzcv, fpscr
   18460:	str	r0, [sp, #8]
   18464:	ble	18550 <__assert_fail@plt+0x7188>
   18468:	ldr	r0, [fp, #-8]
   1846c:	ldr	r0, [r0, #20]
   18470:	str	r0, [sp, #20]
   18474:	ldr	r0, [sp, #20]
   18478:	ldrb	r0, [r0, #16]
   1847c:	tst	r0, #1
   18480:	beq	184a8 <__assert_fail@plt+0x70e0>
   18484:	ldr	r0, [fp, #-8]
   18488:	ldr	r0, [r0, #8]
   1848c:	vmov	s0, r0
   18490:	vcvt.f32.u32	s0, s0
   18494:	ldr	r0, [sp, #20]
   18498:	vldr	s2, [r0, #12]
   1849c:	vmul.f32	s0, s0, s2
   184a0:	vstr	s0, [sp, #4]
   184a4:	b	184d4 <__assert_fail@plt+0x710c>
   184a8:	ldr	r0, [fp, #-8]
   184ac:	ldr	r0, [r0, #8]
   184b0:	vmov	s0, r0
   184b4:	vcvt.f32.u32	s0, s0
   184b8:	ldr	r0, [sp, #20]
   184bc:	vldr	s2, [r0, #12]
   184c0:	vmul.f32	s0, s0, s2
   184c4:	ldr	r0, [sp, #20]
   184c8:	vldr	s2, [r0, #8]
   184cc:	vmul.f32	s0, s0, s2
   184d0:	vstr	s0, [sp, #4]
   184d4:	vldr	s0, [sp, #4]
   184d8:	vldr	s2, [pc, #308]	; 18614 <__assert_fail@plt+0x724c>
   184dc:	vstr	s0, [sp, #16]
   184e0:	vldr	s0, [sp, #16]
   184e4:	vcmpe.f32	s2, s0
   184e8:	vmrs	APSR_nzcv, fpscr
   184ec:	bhi	184fc <__assert_fail@plt+0x7134>
   184f0:	mvn	r0, #0
   184f4:	str	r0, [fp, #-4]
   184f8:	b	18608 <__assert_fail@plt+0x7240>
   184fc:	ldr	r0, [fp, #-8]
   18500:	vldr	s0, [sp, #16]
   18504:	vcvt.u32.f32	s0, s0
   18508:	vmov	r1, s0
   1850c:	bl	17f2c <__assert_fail@plt+0x6b64>
   18510:	tst	r0, #1
   18514:	bne	18524 <__assert_fail@plt+0x715c>
   18518:	mvn	r0, #0
   1851c:	str	r0, [fp, #-4]
   18520:	b	18608 <__assert_fail@plt+0x7240>
   18524:	ldr	r0, [fp, #-8]
   18528:	ldr	r1, [fp, #-12]
   1852c:	add	r2, sp, #24
   18530:	movw	r3, #0
   18534:	and	r3, r3, #1
   18538:	bl	18618 <__assert_fail@plt+0x7250>
   1853c:	movw	r1, #0
   18540:	cmp	r0, r1
   18544:	beq	1854c <__assert_fail@plt+0x7184>
   18548:	bl	11398 <abort@plt>
   1854c:	b	18550 <__assert_fail@plt+0x7188>
   18550:	b	18554 <__assert_fail@plt+0x718c>
   18554:	ldr	r0, [sp, #24]
   18558:	ldr	r0, [r0]
   1855c:	movw	r1, #0
   18560:	cmp	r0, r1
   18564:	beq	185d4 <__assert_fail@plt+0x720c>
   18568:	ldr	r0, [fp, #-8]
   1856c:	bl	18814 <__assert_fail@plt+0x744c>
   18570:	str	r0, [sp, #12]
   18574:	ldr	r0, [sp, #12]
   18578:	movw	lr, #0
   1857c:	cmp	r0, lr
   18580:	bne	18590 <__assert_fail@plt+0x71c8>
   18584:	mvn	r0, #0
   18588:	str	r0, [fp, #-4]
   1858c:	b	18608 <__assert_fail@plt+0x7240>
   18590:	ldr	r0, [fp, #-12]
   18594:	ldr	r1, [sp, #12]
   18598:	str	r0, [r1]
   1859c:	ldr	r0, [sp, #24]
   185a0:	ldr	r0, [r0, #4]
   185a4:	ldr	r1, [sp, #12]
   185a8:	str	r0, [r1, #4]
   185ac:	ldr	r0, [sp, #12]
   185b0:	ldr	r1, [sp, #24]
   185b4:	str	r0, [r1, #4]
   185b8:	ldr	r0, [fp, #-8]
   185bc:	ldr	r1, [r0, #16]
   185c0:	add	r1, r1, #1
   185c4:	str	r1, [r0, #16]
   185c8:	movw	r0, #1
   185cc:	str	r0, [fp, #-4]
   185d0:	b	18608 <__assert_fail@plt+0x7240>
   185d4:	ldr	r0, [fp, #-12]
   185d8:	ldr	r1, [sp, #24]
   185dc:	str	r0, [r1]
   185e0:	ldr	r0, [fp, #-8]
   185e4:	ldr	r1, [r0, #16]
   185e8:	add	r1, r1, #1
   185ec:	str	r1, [r0, #16]
   185f0:	ldr	r0, [fp, #-8]
   185f4:	ldr	r1, [r0, #12]
   185f8:	add	r1, r1, #1
   185fc:	str	r1, [r0, #12]
   18600:	movw	r0, #1
   18604:	str	r0, [fp, #-4]
   18608:	ldr	r0, [fp, #-4]
   1860c:	mov	sp, fp
   18610:	pop	{fp, pc}
   18614:	svcmi	0x00800000
   18618:	push	{fp, lr}
   1861c:	mov	fp, sp
   18620:	sub	sp, sp, #56	; 0x38
   18624:	str	r0, [fp, #-8]
   18628:	str	r1, [fp, #-12]
   1862c:	str	r2, [fp, #-16]
   18630:	and	r0, r3, #1
   18634:	strb	r0, [fp, #-17]	; 0xffffffef
   18638:	ldr	r0, [fp, #-8]
   1863c:	ldr	r1, [fp, #-12]
   18640:	bl	17400 <__assert_fail@plt+0x6038>
   18644:	str	r0, [fp, #-24]	; 0xffffffe8
   18648:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1864c:	ldr	r1, [fp, #-16]
   18650:	str	r0, [r1]
   18654:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18658:	ldr	r0, [r0]
   1865c:	movw	r1, #0
   18660:	cmp	r0, r1
   18664:	bne	18674 <__assert_fail@plt+0x72ac>
   18668:	movw	r0, #0
   1866c:	str	r0, [fp, #-4]
   18670:	b	18808 <__assert_fail@plt+0x7440>
   18674:	ldr	r0, [fp, #-12]
   18678:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1867c:	ldr	r1, [r1]
   18680:	cmp	r0, r1
   18684:	beq	186b8 <__assert_fail@plt+0x72f0>
   18688:	ldr	r0, [fp, #-8]
   1868c:	ldr	r0, [r0, #28]
   18690:	ldr	r1, [fp, #-12]
   18694:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18698:	ldr	r2, [r2]
   1869c:	str	r0, [sp, #8]
   186a0:	mov	r0, r1
   186a4:	mov	r1, r2
   186a8:	ldr	r2, [sp, #8]
   186ac:	blx	r2
   186b0:	tst	r0, #1
   186b4:	beq	18734 <__assert_fail@plt+0x736c>
   186b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186bc:	ldr	r0, [r0]
   186c0:	str	r0, [sp, #24]
   186c4:	ldrb	r0, [fp, #-17]	; 0xffffffef
   186c8:	tst	r0, #1
   186cc:	beq	18728 <__assert_fail@plt+0x7360>
   186d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186d4:	ldr	r0, [r0, #4]
   186d8:	movw	r1, #0
   186dc:	cmp	r0, r1
   186e0:	beq	18718 <__assert_fail@plt+0x7350>
   186e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186e8:	ldr	r0, [r0, #4]
   186ec:	str	r0, [sp, #20]
   186f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186f4:	ldr	r1, [sp, #20]
   186f8:	ldr	r2, [r1]
   186fc:	str	r2, [r0]
   18700:	ldr	r1, [r1, #4]
   18704:	str	r1, [r0, #4]
   18708:	ldr	r0, [fp, #-8]
   1870c:	ldr	r1, [sp, #20]
   18710:	bl	18c68 <__assert_fail@plt+0x78a0>
   18714:	b	18724 <__assert_fail@plt+0x735c>
   18718:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1871c:	movw	r1, #0
   18720:	str	r1, [r0]
   18724:	b	18728 <__assert_fail@plt+0x7360>
   18728:	ldr	r0, [sp, #24]
   1872c:	str	r0, [fp, #-4]
   18730:	b	18808 <__assert_fail@plt+0x7440>
   18734:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18738:	str	r0, [sp, #28]
   1873c:	ldr	r0, [sp, #28]
   18740:	ldr	r0, [r0, #4]
   18744:	movw	r1, #0
   18748:	cmp	r0, r1
   1874c:	beq	18800 <__assert_fail@plt+0x7438>
   18750:	ldr	r0, [fp, #-12]
   18754:	ldr	r1, [sp, #28]
   18758:	ldr	r1, [r1, #4]
   1875c:	ldr	r1, [r1]
   18760:	cmp	r0, r1
   18764:	beq	1879c <__assert_fail@plt+0x73d4>
   18768:	ldr	r0, [fp, #-8]
   1876c:	ldr	r0, [r0, #28]
   18770:	ldr	r1, [fp, #-12]
   18774:	ldr	r2, [sp, #28]
   18778:	ldr	r2, [r2, #4]
   1877c:	ldr	r2, [r2]
   18780:	str	r0, [sp, #4]
   18784:	mov	r0, r1
   18788:	mov	r1, r2
   1878c:	ldr	r2, [sp, #4]
   18790:	blx	r2
   18794:	tst	r0, #1
   18798:	beq	187ec <__assert_fail@plt+0x7424>
   1879c:	ldr	r0, [sp, #28]
   187a0:	ldr	r0, [r0, #4]
   187a4:	ldr	r0, [r0]
   187a8:	str	r0, [sp, #16]
   187ac:	ldrb	r0, [fp, #-17]	; 0xffffffef
   187b0:	tst	r0, #1
   187b4:	beq	187e0 <__assert_fail@plt+0x7418>
   187b8:	ldr	r0, [sp, #28]
   187bc:	ldr	r0, [r0, #4]
   187c0:	str	r0, [sp, #12]
   187c4:	ldr	r0, [sp, #12]
   187c8:	ldr	r0, [r0, #4]
   187cc:	ldr	r1, [sp, #28]
   187d0:	str	r0, [r1, #4]
   187d4:	ldr	r0, [fp, #-8]
   187d8:	ldr	r1, [sp, #12]
   187dc:	bl	18c68 <__assert_fail@plt+0x78a0>
   187e0:	ldr	r0, [sp, #16]
   187e4:	str	r0, [fp, #-4]
   187e8:	b	18808 <__assert_fail@plt+0x7440>
   187ec:	b	187f0 <__assert_fail@plt+0x7428>
   187f0:	ldr	r0, [sp, #28]
   187f4:	ldr	r0, [r0, #4]
   187f8:	str	r0, [sp, #28]
   187fc:	b	1873c <__assert_fail@plt+0x7374>
   18800:	movw	r0, #0
   18804:	str	r0, [fp, #-4]
   18808:	ldr	r0, [fp, #-4]
   1880c:	mov	sp, fp
   18810:	pop	{fp, pc}
   18814:	push	{fp, lr}
   18818:	mov	fp, sp
   1881c:	sub	sp, sp, #8
   18820:	str	r0, [sp, #4]
   18824:	ldr	r0, [sp, #4]
   18828:	ldr	r0, [r0, #36]	; 0x24
   1882c:	movw	r1, #0
   18830:	cmp	r0, r1
   18834:	beq	18858 <__assert_fail@plt+0x7490>
   18838:	ldr	r0, [sp, #4]
   1883c:	ldr	r0, [r0, #36]	; 0x24
   18840:	str	r0, [sp]
   18844:	ldr	r0, [sp]
   18848:	ldr	r0, [r0, #4]
   1884c:	ldr	r1, [sp, #4]
   18850:	str	r0, [r1, #36]	; 0x24
   18854:	b	18864 <__assert_fail@plt+0x749c>
   18858:	movw	r0, #8
   1885c:	bl	1fd18 <__assert_fail@plt+0xe950>
   18860:	str	r0, [sp]
   18864:	ldr	r0, [sp]
   18868:	mov	sp, fp
   1886c:	pop	{fp, pc}
   18870:	push	{fp, lr}
   18874:	mov	fp, sp
   18878:	sub	sp, sp, #24
   1887c:	str	r0, [fp, #-4]
   18880:	str	r1, [fp, #-8]
   18884:	ldr	r0, [fp, #-4]
   18888:	ldr	r1, [fp, #-8]
   1888c:	add	r2, sp, #12
   18890:	bl	18368 <__assert_fail@plt+0x6fa0>
   18894:	str	r0, [sp, #8]
   18898:	ldr	r0, [sp, #8]
   1889c:	cmn	r0, #1
   188a0:	bne	188b0 <__assert_fail@plt+0x74e8>
   188a4:	movw	r0, #0
   188a8:	str	r0, [sp, #4]
   188ac:	b	188d8 <__assert_fail@plt+0x7510>
   188b0:	ldr	r0, [sp, #8]
   188b4:	cmp	r0, #0
   188b8:	bne	188c8 <__assert_fail@plt+0x7500>
   188bc:	ldr	r0, [sp, #12]
   188c0:	str	r0, [sp]
   188c4:	b	188d0 <__assert_fail@plt+0x7508>
   188c8:	ldr	r0, [fp, #-8]
   188cc:	str	r0, [sp]
   188d0:	ldr	r0, [sp]
   188d4:	str	r0, [sp, #4]
   188d8:	ldr	r0, [sp, #4]
   188dc:	mov	sp, fp
   188e0:	pop	{fp, pc}
   188e4:	push	{fp, lr}
   188e8:	mov	fp, sp
   188ec:	sub	sp, sp, #48	; 0x30
   188f0:	str	r0, [fp, #-8]
   188f4:	str	r1, [fp, #-12]
   188f8:	ldr	r0, [fp, #-8]
   188fc:	ldr	r1, [fp, #-12]
   18900:	sub	r2, fp, #20
   18904:	movw	r3, #1
   18908:	and	r3, r3, #1
   1890c:	bl	18618 <__assert_fail@plt+0x7250>
   18910:	str	r0, [fp, #-16]
   18914:	ldr	r0, [fp, #-16]
   18918:	movw	r1, #0
   1891c:	cmp	r0, r1
   18920:	bne	18930 <__assert_fail@plt+0x7568>
   18924:	movw	r0, #0
   18928:	str	r0, [fp, #-4]
   1892c:	b	18adc <__assert_fail@plt+0x7714>
   18930:	ldr	r0, [fp, #-8]
   18934:	ldr	r1, [r0, #16]
   18938:	mvn	r2, #0
   1893c:	add	r1, r1, r2
   18940:	str	r1, [r0, #16]
   18944:	ldr	r0, [fp, #-20]	; 0xffffffec
   18948:	ldr	r0, [r0]
   1894c:	movw	r1, #0
   18950:	cmp	r0, r1
   18954:	bne	18ad4 <__assert_fail@plt+0x770c>
   18958:	ldr	r0, [fp, #-8]
   1895c:	ldr	r1, [r0, #12]
   18960:	mvn	r2, #0
   18964:	add	r1, r1, r2
   18968:	str	r1, [r0, #12]
   1896c:	ldr	r0, [fp, #-8]
   18970:	ldr	r0, [r0, #12]
   18974:	vmov	s0, r0
   18978:	vcvt.f32.u32	s0, s0
   1897c:	ldr	r0, [fp, #-8]
   18980:	ldr	r0, [r0, #20]
   18984:	vldr	s2, [r0]
   18988:	ldr	r0, [fp, #-8]
   1898c:	ldr	r0, [r0, #8]
   18990:	vmov	s4, r0
   18994:	vcvt.f32.u32	s4, s4
   18998:	vmul.f32	s2, s2, s4
   1899c:	vcmpe.f32	s0, s2
   189a0:	vmrs	APSR_nzcv, fpscr
   189a4:	bpl	18ad0 <__assert_fail@plt+0x7708>
   189a8:	ldr	r0, [fp, #-8]
   189ac:	bl	17a44 <__assert_fail@plt+0x667c>
   189b0:	ldr	lr, [fp, #-8]
   189b4:	ldr	lr, [lr, #12]
   189b8:	vmov	s0, lr
   189bc:	vcvt.f32.u32	s0, s0
   189c0:	ldr	lr, [fp, #-8]
   189c4:	ldr	lr, [lr, #20]
   189c8:	vldr	s2, [lr]
   189cc:	ldr	lr, [fp, #-8]
   189d0:	ldr	lr, [lr, #8]
   189d4:	vmov	s4, lr
   189d8:	vcvt.f32.u32	s4, s4
   189dc:	vmul.f32	s2, s2, s4
   189e0:	vcmpe.f32	s0, s2
   189e4:	vmrs	APSR_nzcv, fpscr
   189e8:	str	r0, [sp, #8]
   189ec:	bpl	18acc <__assert_fail@plt+0x7704>
   189f0:	ldr	r0, [fp, #-8]
   189f4:	ldr	r0, [r0, #20]
   189f8:	str	r0, [sp, #24]
   189fc:	ldr	r0, [sp, #24]
   18a00:	ldrb	r0, [r0, #16]
   18a04:	tst	r0, #1
   18a08:	beq	18a30 <__assert_fail@plt+0x7668>
   18a0c:	ldr	r0, [fp, #-8]
   18a10:	ldr	r0, [r0, #8]
   18a14:	vmov	s0, r0
   18a18:	vcvt.f32.u32	s0, s0
   18a1c:	ldr	r0, [sp, #24]
   18a20:	vldr	s2, [r0, #4]
   18a24:	vmul.f32	s0, s0, s2
   18a28:	vstr	s0, [sp, #4]
   18a2c:	b	18a5c <__assert_fail@plt+0x7694>
   18a30:	ldr	r0, [fp, #-8]
   18a34:	ldr	r0, [r0, #8]
   18a38:	vmov	s0, r0
   18a3c:	vcvt.f32.u32	s0, s0
   18a40:	ldr	r0, [sp, #24]
   18a44:	vldr	s2, [r0, #4]
   18a48:	vmul.f32	s0, s0, s2
   18a4c:	ldr	r0, [sp, #24]
   18a50:	vldr	s2, [r0, #8]
   18a54:	vmul.f32	s0, s0, s2
   18a58:	vstr	s0, [sp, #4]
   18a5c:	vldr	s0, [sp, #4]
   18a60:	vcvt.u32.f32	s0, s0
   18a64:	vmov	r0, s0
   18a68:	str	r0, [sp, #20]
   18a6c:	ldr	r0, [fp, #-8]
   18a70:	ldr	r1, [sp, #20]
   18a74:	bl	17f2c <__assert_fail@plt+0x6b64>
   18a78:	tst	r0, #1
   18a7c:	bne	18ac8 <__assert_fail@plt+0x7700>
   18a80:	ldr	r0, [fp, #-8]
   18a84:	ldr	r0, [r0, #36]	; 0x24
   18a88:	str	r0, [sp, #16]
   18a8c:	ldr	r0, [sp, #16]
   18a90:	movw	r1, #0
   18a94:	cmp	r0, r1
   18a98:	beq	18abc <__assert_fail@plt+0x76f4>
   18a9c:	ldr	r0, [sp, #16]
   18aa0:	ldr	r0, [r0, #4]
   18aa4:	str	r0, [sp, #12]
   18aa8:	ldr	r0, [sp, #16]
   18aac:	bl	20a84 <__assert_fail@plt+0xf6bc>
   18ab0:	ldr	r0, [sp, #12]
   18ab4:	str	r0, [sp, #16]
   18ab8:	b	18a8c <__assert_fail@plt+0x76c4>
   18abc:	ldr	r0, [fp, #-8]
   18ac0:	movw	r1, #0
   18ac4:	str	r1, [r0, #36]	; 0x24
   18ac8:	b	18acc <__assert_fail@plt+0x7704>
   18acc:	b	18ad0 <__assert_fail@plt+0x7708>
   18ad0:	b	18ad4 <__assert_fail@plt+0x770c>
   18ad4:	ldr	r0, [fp, #-16]
   18ad8:	str	r0, [fp, #-4]
   18adc:	ldr	r0, [fp, #-4]
   18ae0:	mov	sp, fp
   18ae4:	pop	{fp, pc}
   18ae8:	push	{fp, lr}
   18aec:	mov	fp, sp
   18af0:	sub	sp, sp, #8
   18af4:	str	r0, [sp, #4]
   18af8:	str	r1, [sp]
   18afc:	ldr	r0, [sp, #4]
   18b00:	ldr	r1, [sp]
   18b04:	bl	188e4 <__assert_fail@plt+0x751c>
   18b08:	mov	sp, fp
   18b0c:	pop	{fp, pc}
   18b10:	push	{fp, lr}
   18b14:	mov	fp, sp
   18b18:	sub	sp, sp, #8
   18b1c:	str	r0, [sp, #4]
   18b20:	ldr	r0, [sp, #4]
   18b24:	cmp	r0, #10
   18b28:	bcs	18b34 <__assert_fail@plt+0x776c>
   18b2c:	movw	r0, #10
   18b30:	str	r0, [sp, #4]
   18b34:	ldr	r0, [sp, #4]
   18b38:	orr	r0, r0, #1
   18b3c:	str	r0, [sp, #4]
   18b40:	ldr	r0, [sp, #4]
   18b44:	mvn	r1, #0
   18b48:	cmp	r1, r0
   18b4c:	movw	r0, #0
   18b50:	str	r0, [sp]
   18b54:	beq	18b6c <__assert_fail@plt+0x77a4>
   18b58:	ldr	r0, [sp, #4]
   18b5c:	bl	18b94 <__assert_fail@plt+0x77cc>
   18b60:	mvn	lr, #0
   18b64:	eor	r0, r0, lr
   18b68:	str	r0, [sp]
   18b6c:	ldr	r0, [sp]
   18b70:	tst	r0, #1
   18b74:	beq	18b88 <__assert_fail@plt+0x77c0>
   18b78:	ldr	r0, [sp, #4]
   18b7c:	add	r0, r0, #2
   18b80:	str	r0, [sp, #4]
   18b84:	b	18b40 <__assert_fail@plt+0x7778>
   18b88:	ldr	r0, [sp, #4]
   18b8c:	mov	sp, fp
   18b90:	pop	{fp, pc}
   18b94:	sub	sp, sp, #16
   18b98:	str	r0, [sp, #12]
   18b9c:	movw	r0, #3
   18ba0:	str	r0, [sp, #8]
   18ba4:	ldr	r0, [sp, #8]
   18ba8:	ldr	r1, [sp, #8]
   18bac:	mul	r0, r0, r1
   18bb0:	str	r0, [sp, #4]
   18bb4:	ldr	r0, [sp, #4]
   18bb8:	ldr	r1, [sp, #12]
   18bbc:	cmp	r0, r1
   18bc0:	movw	r0, #0
   18bc4:	str	r0, [sp]
   18bc8:	bcs	18bec <__assert_fail@plt+0x7824>
   18bcc:	ldr	r0, [sp, #12]
   18bd0:	ldr	r1, [sp, #8]
   18bd4:	udiv	r2, r0, r1
   18bd8:	mls	r0, r2, r1, r0
   18bdc:	cmp	r0, #0
   18be0:	movw	r0, #0
   18be4:	movne	r0, #1
   18be8:	str	r0, [sp]
   18bec:	ldr	r0, [sp]
   18bf0:	tst	r0, #1
   18bf4:	beq	18c28 <__assert_fail@plt+0x7860>
   18bf8:	ldr	r0, [sp, #8]
   18bfc:	add	r0, r0, #1
   18c00:	str	r0, [sp, #8]
   18c04:	ldr	r0, [sp, #8]
   18c08:	lsl	r0, r0, #2
   18c0c:	ldr	r1, [sp, #4]
   18c10:	add	r0, r1, r0
   18c14:	str	r0, [sp, #4]
   18c18:	ldr	r0, [sp, #8]
   18c1c:	add	r0, r0, #1
   18c20:	str	r0, [sp, #8]
   18c24:	b	18bb4 <__assert_fail@plt+0x77ec>
   18c28:	ldr	r0, [sp, #12]
   18c2c:	ldr	r1, [sp, #8]
   18c30:	udiv	r2, r0, r1
   18c34:	mls	r0, r2, r1, r0
   18c38:	cmp	r0, #0
   18c3c:	movw	r0, #0
   18c40:	movne	r0, #1
   18c44:	tst	r0, #1
   18c48:	movw	r0, #1
   18c4c:	moveq	r0, #0
   18c50:	cmp	r0, #0
   18c54:	movw	r0, #0
   18c58:	movne	r0, #1
   18c5c:	and	r0, r0, #1
   18c60:	add	sp, sp, #16
   18c64:	bx	lr
   18c68:	sub	sp, sp, #8
   18c6c:	str	r0, [sp, #4]
   18c70:	str	r1, [sp]
   18c74:	ldr	r0, [sp]
   18c78:	movw	r1, #0
   18c7c:	str	r1, [r0]
   18c80:	ldr	r0, [sp, #4]
   18c84:	ldr	r0, [r0, #36]	; 0x24
   18c88:	ldr	r1, [sp]
   18c8c:	str	r0, [r1, #4]
   18c90:	ldr	r0, [sp]
   18c94:	ldr	r1, [sp, #4]
   18c98:	str	r0, [r1, #36]	; 0x24
   18c9c:	add	sp, sp, #8
   18ca0:	bx	lr
   18ca4:	sub	sp, sp, #12
   18ca8:	str	r0, [sp, #8]
   18cac:	str	r1, [sp, #4]
   18cb0:	ldr	r0, [sp, #8]
   18cb4:	movw	r1, #1
   18cb8:	strb	r1, [r0, #28]
   18cbc:	ldr	r0, [sp, #8]
   18cc0:	movw	r1, #0
   18cc4:	str	r1, [r0, #20]
   18cc8:	ldr	r0, [sp, #8]
   18ccc:	str	r1, [r0, #24]
   18cd0:	str	r1, [sp]
   18cd4:	ldr	r0, [sp]
   18cd8:	cmp	r0, #4
   18cdc:	bge	18d04 <__assert_fail@plt+0x793c>
   18ce0:	ldr	r0, [sp, #4]
   18ce4:	ldr	r1, [sp, #8]
   18ce8:	ldr	r2, [sp]
   18cec:	add	r1, r1, r2, lsl #2
   18cf0:	str	r0, [r1]
   18cf4:	ldr	r0, [sp]
   18cf8:	add	r0, r0, #1
   18cfc:	str	r0, [sp]
   18d00:	b	18cd4 <__assert_fail@plt+0x790c>
   18d04:	ldr	r0, [sp, #4]
   18d08:	ldr	r1, [sp, #8]
   18d0c:	str	r0, [r1, #16]
   18d10:	add	sp, sp, #12
   18d14:	bx	lr
   18d18:	sub	sp, sp, #4
   18d1c:	str	r0, [sp]
   18d20:	ldr	r0, [sp]
   18d24:	ldrb	r0, [r0, #28]
   18d28:	and	r0, r0, #1
   18d2c:	add	sp, sp, #4
   18d30:	bx	lr
   18d34:	sub	sp, sp, #16
   18d38:	str	r0, [sp, #12]
   18d3c:	str	r1, [sp, #8]
   18d40:	ldr	r0, [sp, #12]
   18d44:	ldr	r1, [r0, #20]
   18d48:	ldrb	r0, [r0, #28]
   18d4c:	mov	r2, #1
   18d50:	bic	r0, r2, r0
   18d54:	add	r0, r1, r0
   18d58:	and	r0, r0, #3
   18d5c:	str	r0, [sp, #4]
   18d60:	ldr	r0, [sp, #12]
   18d64:	ldr	r1, [sp, #4]
   18d68:	ldr	r0, [r0, r1, lsl #2]
   18d6c:	str	r0, [sp]
   18d70:	ldr	r0, [sp, #8]
   18d74:	ldr	r1, [sp, #12]
   18d78:	ldr	r2, [sp, #4]
   18d7c:	add	r1, r1, r2, lsl #2
   18d80:	str	r0, [r1]
   18d84:	ldr	r0, [sp, #4]
   18d88:	ldr	r1, [sp, #12]
   18d8c:	str	r0, [r1, #20]
   18d90:	ldr	r0, [sp, #4]
   18d94:	ldr	r1, [sp, #12]
   18d98:	ldr	r1, [r1, #24]
   18d9c:	cmp	r0, r1
   18da0:	bne	18dd0 <__assert_fail@plt+0x7a08>
   18da4:	ldr	r0, [sp, #12]
   18da8:	ldr	r0, [r0, #24]
   18dac:	ldr	r1, [sp, #12]
   18db0:	ldrb	r1, [r1, #28]
   18db4:	mvn	r2, #0
   18db8:	eor	r1, r1, r2
   18dbc:	and	r1, r1, #1
   18dc0:	add	r0, r0, r1
   18dc4:	and	r0, r0, #3
   18dc8:	ldr	r1, [sp, #12]
   18dcc:	str	r0, [r1, #24]
   18dd0:	ldr	r0, [sp, #12]
   18dd4:	movw	r1, #0
   18dd8:	strb	r1, [r0, #28]
   18ddc:	ldr	r0, [sp]
   18de0:	add	sp, sp, #16
   18de4:	bx	lr
   18de8:	push	{fp, lr}
   18dec:	mov	fp, sp
   18df0:	sub	sp, sp, #8
   18df4:	str	r0, [sp, #4]
   18df8:	ldr	r0, [sp, #4]
   18dfc:	bl	18d18 <__assert_fail@plt+0x7950>
   18e00:	tst	r0, #1
   18e04:	beq	18e0c <__assert_fail@plt+0x7a44>
   18e08:	bl	11398 <abort@plt>
   18e0c:	ldr	r0, [sp, #4]
   18e10:	ldr	r1, [r0, #20]
   18e14:	ldr	r0, [r0, r1, lsl #2]
   18e18:	str	r0, [sp]
   18e1c:	ldr	r0, [sp, #4]
   18e20:	ldr	r1, [r0, #16]
   18e24:	ldr	r2, [r0, #20]
   18e28:	add	r0, r0, r2, lsl #2
   18e2c:	str	r1, [r0]
   18e30:	ldr	r0, [sp, #4]
   18e34:	ldr	r0, [r0, #20]
   18e38:	ldr	r1, [sp, #4]
   18e3c:	ldr	r1, [r1, #24]
   18e40:	cmp	r0, r1
   18e44:	bne	18e58 <__assert_fail@plt+0x7a90>
   18e48:	ldr	r0, [sp, #4]
   18e4c:	movw	r1, #1
   18e50:	strb	r1, [r0, #28]
   18e54:	b	18e74 <__assert_fail@plt+0x7aac>
   18e58:	ldr	r0, [sp, #4]
   18e5c:	ldr	r0, [r0, #20]
   18e60:	add	r0, r0, #4
   18e64:	sub	r0, r0, #1
   18e68:	and	r0, r0, #3
   18e6c:	ldr	r1, [sp, #4]
   18e70:	str	r0, [r1, #20]
   18e74:	ldr	r0, [sp]
   18e78:	mov	sp, fp
   18e7c:	pop	{fp, pc}
   18e80:	push	{fp, lr}
   18e84:	mov	fp, sp
   18e88:	sub	sp, sp, #104	; 0x68
   18e8c:	str	r0, [fp, #-8]
   18e90:	movw	r0, #0
   18e94:	str	r0, [fp, #-16]
   18e98:	ldr	r0, [fp, #-8]
   18e9c:	ldrb	r0, [r0]
   18ea0:	movw	r1, #48	; 0x30
   18ea4:	cmp	r1, r0
   18ea8:	bgt	18fd0 <__assert_fail@plt+0x7c08>
   18eac:	ldr	r0, [fp, #-8]
   18eb0:	ldrb	r0, [r0]
   18eb4:	cmp	r0, #56	; 0x38
   18eb8:	bge	18fd0 <__assert_fail@plt+0x7c08>
   18ebc:	movw	r0, #0
   18ec0:	str	r0, [fp, #-24]	; 0xffffffe8
   18ec4:	ldr	r0, [fp, #-8]
   18ec8:	str	r0, [fp, #-20]	; 0xffffffec
   18ecc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ed0:	lsl	r0, r0, #3
   18ed4:	ldr	r1, [fp, #-20]	; 0xffffffec
   18ed8:	add	r2, r1, #1
   18edc:	str	r2, [fp, #-20]	; 0xffffffec
   18ee0:	ldrb	r1, [r1]
   18ee4:	add	r0, r0, r1
   18ee8:	sub	r0, r0, #48	; 0x30
   18eec:	str	r0, [fp, #-24]	; 0xffffffe8
   18ef0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ef4:	movw	r1, #4095	; 0xfff
   18ef8:	cmp	r1, r0
   18efc:	bcs	18f0c <__assert_fail@plt+0x7b44>
   18f00:	movw	r0, #0
   18f04:	str	r0, [fp, #-4]
   18f08:	b	19678 <__assert_fail@plt+0x82b0>
   18f0c:	b	18f10 <__assert_fail@plt+0x7b48>
   18f10:	ldr	r0, [fp, #-20]	; 0xffffffec
   18f14:	ldrb	r0, [r0]
   18f18:	movw	r1, #48	; 0x30
   18f1c:	cmp	r1, r0
   18f20:	movw	r0, #0
   18f24:	str	r0, [sp, #36]	; 0x24
   18f28:	bgt	18f44 <__assert_fail@plt+0x7b7c>
   18f2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   18f30:	ldrb	r0, [r0]
   18f34:	cmp	r0, #56	; 0x38
   18f38:	movw	r0, #0
   18f3c:	movlt	r0, #1
   18f40:	str	r0, [sp, #36]	; 0x24
   18f44:	ldr	r0, [sp, #36]	; 0x24
   18f48:	tst	r0, #1
   18f4c:	bne	18ecc <__assert_fail@plt+0x7b04>
   18f50:	ldr	r0, [fp, #-20]	; 0xffffffec
   18f54:	ldrsb	r0, [r0]
   18f58:	cmp	r0, #0
   18f5c:	beq	18f6c <__assert_fail@plt+0x7ba4>
   18f60:	movw	r0, #0
   18f64:	str	r0, [fp, #-4]
   18f68:	b	19678 <__assert_fail@plt+0x82b0>
   18f6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f70:	bl	19684 <__assert_fail@plt+0x82bc>
   18f74:	str	r0, [fp, #-28]	; 0xffffffe4
   18f78:	ldr	r0, [fp, #-20]	; 0xffffffec
   18f7c:	ldr	lr, [fp, #-8]
   18f80:	sub	r0, r0, lr
   18f84:	cmp	r0, #5
   18f88:	bge	18fa8 <__assert_fail@plt+0x7be0>
   18f8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18f90:	and	r0, r0, #3072	; 0xc00
   18f94:	orr	r0, r0, #512	; 0x200
   18f98:	movw	r1, #511	; 0x1ff
   18f9c:	orr	r0, r0, r1
   18fa0:	str	r0, [sp, #32]
   18fa4:	b	18fb4 <__assert_fail@plt+0x7bec>
   18fa8:	movw	r0, #4095	; 0xfff
   18fac:	str	r0, [sp, #32]
   18fb0:	b	18fb4 <__assert_fail@plt+0x7bec>
   18fb4:	ldr	r0, [sp, #32]
   18fb8:	str	r0, [fp, #-32]	; 0xffffffe0
   18fbc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18fc0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18fc4:	bl	19698 <__assert_fail@plt+0x82d0>
   18fc8:	str	r0, [fp, #-4]
   18fcc:	b	19678 <__assert_fail@plt+0x82b0>
   18fd0:	movw	r0, #1
   18fd4:	str	r0, [fp, #-36]	; 0xffffffdc
   18fd8:	ldr	r0, [fp, #-8]
   18fdc:	str	r0, [fp, #-20]	; 0xffffffec
   18fe0:	ldr	r0, [fp, #-20]	; 0xffffffec
   18fe4:	ldrsb	r0, [r0]
   18fe8:	cmp	r0, #0
   18fec:	beq	1905c <__assert_fail@plt+0x7c94>
   18ff0:	ldr	r0, [fp, #-20]	; 0xffffffec
   18ff4:	ldrb	r0, [r0]
   18ff8:	cmp	r0, #61	; 0x3d
   18ffc:	movw	r0, #1
   19000:	str	r0, [sp, #28]
   19004:	beq	19038 <__assert_fail@plt+0x7c70>
   19008:	ldr	r0, [fp, #-20]	; 0xffffffec
   1900c:	ldrb	r0, [r0]
   19010:	cmp	r0, #43	; 0x2b
   19014:	movw	r0, #1
   19018:	str	r0, [sp, #28]
   1901c:	beq	19038 <__assert_fail@plt+0x7c70>
   19020:	ldr	r0, [fp, #-20]	; 0xffffffec
   19024:	ldrb	r0, [r0]
   19028:	cmp	r0, #45	; 0x2d
   1902c:	movw	r0, #0
   19030:	moveq	r0, #1
   19034:	str	r0, [sp, #28]
   19038:	ldr	r0, [sp, #28]
   1903c:	and	r0, r0, #1
   19040:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19044:	add	r0, r1, r0
   19048:	str	r0, [fp, #-36]	; 0xffffffdc
   1904c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19050:	add	r0, r0, #1
   19054:	str	r0, [fp, #-20]	; 0xffffffec
   19058:	b	18fe0 <__assert_fail@plt+0x7c18>
   1905c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19060:	movw	r1, #16
   19064:	bl	1ce80 <__assert_fail@plt+0xbab8>
   19068:	str	r0, [fp, #-12]
   1906c:	ldr	r0, [fp, #-8]
   19070:	str	r0, [fp, #-20]	; 0xffffffec
   19074:	movw	r0, #0
   19078:	str	r0, [fp, #-40]	; 0xffffffd8
   1907c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19080:	ldrb	r0, [r0]
   19084:	mov	r1, r0
   19088:	cmp	r0, #43	; 0x2b
   1908c:	str	r1, [sp, #24]
   19090:	beq	19148 <__assert_fail@plt+0x7d80>
   19094:	b	19098 <__assert_fail@plt+0x7cd0>
   19098:	ldr	r0, [sp, #24]
   1909c:	cmp	r0, #45	; 0x2d
   190a0:	beq	19148 <__assert_fail@plt+0x7d80>
   190a4:	b	190a8 <__assert_fail@plt+0x7ce0>
   190a8:	ldr	r0, [sp, #24]
   190ac:	cmp	r0, #61	; 0x3d
   190b0:	beq	19148 <__assert_fail@plt+0x7d80>
   190b4:	b	190b8 <__assert_fail@plt+0x7cf0>
   190b8:	ldr	r0, [sp, #24]
   190bc:	cmp	r0, #97	; 0x61
   190c0:	beq	19134 <__assert_fail@plt+0x7d6c>
   190c4:	b	190c8 <__assert_fail@plt+0x7d00>
   190c8:	ldr	r0, [sp, #24]
   190cc:	cmp	r0, #103	; 0x67
   190d0:	beq	1910c <__assert_fail@plt+0x7d44>
   190d4:	b	190d8 <__assert_fail@plt+0x7d10>
   190d8:	ldr	r0, [sp, #24]
   190dc:	cmp	r0, #111	; 0x6f
   190e0:	beq	19120 <__assert_fail@plt+0x7d58>
   190e4:	b	190e8 <__assert_fail@plt+0x7d20>
   190e8:	ldr	r0, [sp, #24]
   190ec:	cmp	r0, #117	; 0x75
   190f0:	beq	190fc <__assert_fail@plt+0x7d34>
   190f4:	b	190f8 <__assert_fail@plt+0x7d30>
   190f8:	b	19668 <__assert_fail@plt+0x82a0>
   190fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19100:	orr	r0, r0, #2496	; 0x9c0
   19104:	str	r0, [fp, #-40]	; 0xffffffd8
   19108:	b	1914c <__assert_fail@plt+0x7d84>
   1910c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19110:	movw	r1, #1080	; 0x438
   19114:	orr	r0, r0, r1
   19118:	str	r0, [fp, #-40]	; 0xffffffd8
   1911c:	b	1914c <__assert_fail@plt+0x7d84>
   19120:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19124:	movw	r1, #519	; 0x207
   19128:	orr	r0, r0, r1
   1912c:	str	r0, [fp, #-40]	; 0xffffffd8
   19130:	b	1914c <__assert_fail@plt+0x7d84>
   19134:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19138:	movw	r1, #4095	; 0xfff
   1913c:	orr	r0, r0, r1
   19140:	str	r0, [fp, #-40]	; 0xffffffd8
   19144:	b	1914c <__assert_fail@plt+0x7d84>
   19148:	b	19160 <__assert_fail@plt+0x7d98>
   1914c:	b	19150 <__assert_fail@plt+0x7d88>
   19150:	ldr	r0, [fp, #-20]	; 0xffffffec
   19154:	add	r0, r0, #1
   19158:	str	r0, [fp, #-20]	; 0xffffffec
   1915c:	b	1907c <__assert_fail@plt+0x7cb4>
   19160:	b	19164 <__assert_fail@plt+0x7d9c>
   19164:	ldr	r0, [fp, #-20]	; 0xffffffec
   19168:	add	r1, r0, #1
   1916c:	str	r1, [fp, #-20]	; 0xffffffec
   19170:	ldrb	r0, [r0]
   19174:	strb	r0, [fp, #-41]	; 0xffffffd7
   19178:	mov	r0, #0
   1917c:	str	r0, [sp, #52]	; 0x34
   19180:	mov	r0, #3
   19184:	strb	r0, [sp, #51]	; 0x33
   19188:	ldr	r0, [fp, #-20]	; 0xffffffec
   1918c:	ldrb	r0, [r0]
   19190:	sub	r0, r0, #48	; 0x30
   19194:	cmp	r0, #69	; 0x45
   19198:	str	r0, [sp, #20]
   1919c:	bhi	193e8 <__assert_fail@plt+0x8020>
   191a0:	add	r0, pc, #8
   191a4:	ldr	r1, [sp, #20]
   191a8:	ldr	r0, [r0, r1, lsl #2]
   191ac:	mov	pc, r0
   191b0:	andeq	r9, r1, r8, asr #5
   191b4:	andeq	r9, r1, r8, asr #5
   191b8:	andeq	r9, r1, r8, asr #5
   191bc:	andeq	r9, r1, r8, asr #5
   191c0:	andeq	r9, r1, r8, asr #5
   191c4:	andeq	r9, r1, r8, asr #5
   191c8:	andeq	r9, r1, r8, asr #5
   191cc:	andeq	r9, r1, r8, asr #5
   191d0:	andeq	r9, r1, r8, ror #7
   191d4:	andeq	r9, r1, r8, ror #7
   191d8:	andeq	r9, r1, r8, ror #7
   191dc:	andeq	r9, r1, r8, ror #7
   191e0:	andeq	r9, r1, r8, ror #7
   191e4:	andeq	r9, r1, r8, ror #7
   191e8:	andeq	r9, r1, r8, ror #7
   191ec:	andeq	r9, r1, r8, ror #7
   191f0:	andeq	r9, r1, r8, ror #7
   191f4:	andeq	r9, r1, r8, ror #7
   191f8:	andeq	r9, r1, r8, ror #7
   191fc:	andeq	r9, r1, r8, ror #7
   19200:	andeq	r9, r1, r8, ror #7
   19204:	andeq	r9, r1, r8, ror #7
   19208:	andeq	r9, r1, r8, ror #7
   1920c:	andeq	r9, r1, r8, ror #7
   19210:	andeq	r9, r1, r8, ror #7
   19214:	andeq	r9, r1, r8, ror #7
   19218:	andeq	r9, r1, r8, ror #7
   1921c:	andeq	r9, r1, r8, ror #7
   19220:	andeq	r9, r1, r8, ror #7
   19224:	andeq	r9, r1, r8, ror #7
   19228:	andeq	r9, r1, r8, ror #7
   1922c:	andeq	r9, r1, r8, ror #7
   19230:	andeq	r9, r1, r8, ror #7
   19234:	andeq	r9, r1, r8, ror #7
   19238:	andeq	r9, r1, r8, ror #7
   1923c:	andeq	r9, r1, r8, ror #7
   19240:	andeq	r9, r1, r8, ror #7
   19244:	andeq	r9, r1, r8, ror #7
   19248:	andeq	r9, r1, r8, ror #7
   1924c:	andeq	r9, r1, r8, ror #7
   19250:	andeq	r9, r1, r8, ror #7
   19254:	andeq	r9, r1, r8, ror #7
   19258:	andeq	r9, r1, r8, ror #7
   1925c:	andeq	r9, r1, r8, ror #7
   19260:	andeq	r9, r1, r8, ror #7
   19264:	andeq	r9, r1, r8, ror #7
   19268:	andeq	r9, r1, r8, ror #7
   1926c:	andeq	r9, r1, r8, ror #7
   19270:	andeq	r9, r1, r8, ror #7
   19274:	andeq	r9, r1, r8, ror #7
   19278:	andeq	r9, r1, r8, ror #7
   1927c:	andeq	r9, r1, r8, ror #7
   19280:	andeq	r9, r1, r8, ror #7
   19284:	andeq	r9, r1, r8, ror #7
   19288:	andeq	r9, r1, r8, ror #7
   1928c:			; <UNDEFINED> instruction: 0x000193b8
   19290:	andeq	r9, r1, r8, ror #7
   19294:	andeq	r9, r1, r8, ror #7
   19298:	andeq	r9, r1, r8, ror #7
   1929c:	andeq	r9, r1, r8, ror #7
   192a0:	andeq	r9, r1, r8, ror #7
   192a4:	andeq	r9, r1, r8, ror #7
   192a8:	andeq	r9, r1, r8, ror #7
   192ac:	ldrdeq	r9, [r1], -r0
   192b0:	andeq	r9, r1, r8, ror #7
   192b4:	andeq	r9, r1, r8, ror #7
   192b8:	andeq	r9, r1, r8, ror #7
   192bc:	andeq	r9, r1, r8, ror #7
   192c0:	andeq	r9, r1, r8, ror #7
   192c4:	andeq	r9, r1, r0, lsr #7
   192c8:	movw	r0, #0
   192cc:	str	r0, [sp, #40]	; 0x28
   192d0:	ldr	r0, [sp, #40]	; 0x28
   192d4:	lsl	r0, r0, #3
   192d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   192dc:	add	r2, r1, #1
   192e0:	str	r2, [fp, #-20]	; 0xffffffec
   192e4:	ldrb	r1, [r1]
   192e8:	add	r0, r0, r1
   192ec:	sub	r0, r0, #48	; 0x30
   192f0:	str	r0, [sp, #40]	; 0x28
   192f4:	ldr	r0, [sp, #40]	; 0x28
   192f8:	movw	r1, #4095	; 0xfff
   192fc:	cmp	r1, r0
   19300:	bcs	19308 <__assert_fail@plt+0x7f40>
   19304:	b	19668 <__assert_fail@plt+0x82a0>
   19308:	b	1930c <__assert_fail@plt+0x7f44>
   1930c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19310:	ldrb	r0, [r0]
   19314:	movw	r1, #48	; 0x30
   19318:	cmp	r1, r0
   1931c:	movw	r0, #0
   19320:	str	r0, [sp, #16]
   19324:	bgt	19340 <__assert_fail@plt+0x7f78>
   19328:	ldr	r0, [fp, #-20]	; 0xffffffec
   1932c:	ldrb	r0, [r0]
   19330:	cmp	r0, #56	; 0x38
   19334:	movw	r0, #0
   19338:	movlt	r0, #1
   1933c:	str	r0, [sp, #16]
   19340:	ldr	r0, [sp, #16]
   19344:	tst	r0, #1
   19348:	bne	192d0 <__assert_fail@plt+0x7f08>
   1934c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19350:	cmp	r0, #0
   19354:	bne	19378 <__assert_fail@plt+0x7fb0>
   19358:	ldr	r0, [fp, #-20]	; 0xffffffec
   1935c:	ldrb	r0, [r0]
   19360:	cmp	r0, #0
   19364:	beq	1937c <__assert_fail@plt+0x7fb4>
   19368:	ldr	r0, [fp, #-20]	; 0xffffffec
   1936c:	ldrb	r0, [r0]
   19370:	cmp	r0, #44	; 0x2c
   19374:	beq	1937c <__assert_fail@plt+0x7fb4>
   19378:	b	19668 <__assert_fail@plt+0x82a0>
   1937c:	movw	r0, #4095	; 0xfff
   19380:	str	r0, [sp, #52]	; 0x34
   19384:	str	r0, [fp, #-40]	; 0xffffffd8
   19388:	ldr	r0, [sp, #40]	; 0x28
   1938c:	bl	19684 <__assert_fail@plt+0x82bc>
   19390:	str	r0, [fp, #-48]	; 0xffffffd0
   19394:	movw	r0, #1
   19398:	strb	r0, [sp, #51]	; 0x33
   1939c:	b	1951c <__assert_fail@plt+0x8154>
   193a0:	movw	r0, #448	; 0x1c0
   193a4:	str	r0, [fp, #-48]	; 0xffffffd0
   193a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   193ac:	add	r0, r0, #1
   193b0:	str	r0, [fp, #-20]	; 0xffffffec
   193b4:	b	1951c <__assert_fail@plt+0x8154>
   193b8:	movw	r0, #56	; 0x38
   193bc:	str	r0, [fp, #-48]	; 0xffffffd0
   193c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   193c4:	add	r0, r0, #1
   193c8:	str	r0, [fp, #-20]	; 0xffffffec
   193cc:	b	1951c <__assert_fail@plt+0x8154>
   193d0:	movw	r0, #7
   193d4:	str	r0, [fp, #-48]	; 0xffffffd0
   193d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   193dc:	add	r0, r0, #1
   193e0:	str	r0, [fp, #-20]	; 0xffffffec
   193e4:	b	1951c <__assert_fail@plt+0x8154>
   193e8:	movw	r0, #0
   193ec:	str	r0, [fp, #-48]	; 0xffffffd0
   193f0:	movw	r0, #1
   193f4:	strb	r0, [sp, #51]	; 0x33
   193f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   193fc:	ldrb	r0, [r0]
   19400:	sub	r0, r0, #88	; 0x58
   19404:	cmp	r0, #32
   19408:	str	r0, [sp, #12]
   1940c:	bhi	19500 <__assert_fail@plt+0x8138>
   19410:	add	r0, pc, #8
   19414:	ldr	r1, [sp, #12]
   19418:	ldr	r0, [r0, r1, lsl #2]
   1941c:	mov	pc, r0
   19420:	ldrdeq	r9, [r1], -r4
   19424:	andeq	r9, r1, r0, lsl #10
   19428:	andeq	r9, r1, r0, lsl #10
   1942c:	andeq	r9, r1, r0, lsl #10
   19430:	andeq	r9, r1, r0, lsl #10
   19434:	andeq	r9, r1, r0, lsl #10
   19438:	andeq	r9, r1, r0, lsl #10
   1943c:	andeq	r9, r1, r0, lsl #10
   19440:	andeq	r9, r1, r0, lsl #10
   19444:	andeq	r9, r1, r0, lsl #10
   19448:	andeq	r9, r1, r0, lsl #10
   1944c:	andeq	r9, r1, r0, lsl #10
   19450:	andeq	r9, r1, r0, lsl #10
   19454:	andeq	r9, r1, r0, lsl #10
   19458:	andeq	r9, r1, r0, lsl #10
   1945c:	andeq	r9, r1, r0, lsl #10
   19460:	andeq	r9, r1, r0, lsl #10
   19464:	andeq	r9, r1, r0, lsl #10
   19468:	andeq	r9, r1, r0, lsl #10
   1946c:	andeq	r9, r1, r0, lsl #10
   19470:	andeq	r9, r1, r0, lsl #10
   19474:	andeq	r9, r1, r0, lsl #10
   19478:	andeq	r9, r1, r0, lsl #10
   1947c:	andeq	r9, r1, r0, lsl #10
   19480:	andeq	r9, r1, r0, lsl #10
   19484:	andeq	r9, r1, r0, lsl #10
   19488:	andeq	r9, r1, r4, lsr #9
   1948c:	andeq	r9, r1, r0, ror #9
   19490:	strdeq	r9, [r1], -r0
   19494:	andeq	r9, r1, r0, lsl #10
   19498:	andeq	r9, r1, r0, lsl #10
   1949c:			; <UNDEFINED> instruction: 0x000194b4
   194a0:	andeq	r9, r1, r4, asr #9
   194a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   194a8:	orr	r0, r0, #292	; 0x124
   194ac:	str	r0, [fp, #-48]	; 0xffffffd0
   194b0:	b	19504 <__assert_fail@plt+0x813c>
   194b4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   194b8:	orr	r0, r0, #146	; 0x92
   194bc:	str	r0, [fp, #-48]	; 0xffffffd0
   194c0:	b	19504 <__assert_fail@plt+0x813c>
   194c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   194c8:	orr	r0, r0, #73	; 0x49
   194cc:	str	r0, [fp, #-48]	; 0xffffffd0
   194d0:	b	19504 <__assert_fail@plt+0x813c>
   194d4:	movw	r0, #2
   194d8:	strb	r0, [sp, #51]	; 0x33
   194dc:	b	19504 <__assert_fail@plt+0x813c>
   194e0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   194e4:	orr	r0, r0, #3072	; 0xc00
   194e8:	str	r0, [fp, #-48]	; 0xffffffd0
   194ec:	b	19504 <__assert_fail@plt+0x813c>
   194f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   194f4:	orr	r0, r0, #512	; 0x200
   194f8:	str	r0, [fp, #-48]	; 0xffffffd0
   194fc:	b	19504 <__assert_fail@plt+0x813c>
   19500:	b	19518 <__assert_fail@plt+0x8150>
   19504:	b	19508 <__assert_fail@plt+0x8140>
   19508:	ldr	r0, [fp, #-20]	; 0xffffffec
   1950c:	add	r0, r0, #1
   19510:	str	r0, [fp, #-20]	; 0xffffffec
   19514:	b	193f8 <__assert_fail@plt+0x8030>
   19518:	b	1951c <__assert_fail@plt+0x8154>
   1951c:	ldr	r0, [fp, #-12]
   19520:	ldr	r1, [fp, #-16]
   19524:	add	r2, r1, #1
   19528:	str	r2, [fp, #-16]
   1952c:	add	r0, r0, r1, lsl #4
   19530:	str	r0, [sp, #44]	; 0x2c
   19534:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   19538:	ldr	r1, [sp, #44]	; 0x2c
   1953c:	strb	r0, [r1]
   19540:	ldrb	r0, [sp, #51]	; 0x33
   19544:	ldr	r1, [sp, #44]	; 0x2c
   19548:	strb	r0, [r1, #1]
   1954c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19550:	ldr	r1, [sp, #44]	; 0x2c
   19554:	str	r0, [r1, #4]
   19558:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1955c:	ldr	r1, [sp, #44]	; 0x2c
   19560:	str	r0, [r1, #8]
   19564:	ldr	r0, [sp, #52]	; 0x34
   19568:	cmp	r0, #0
   1956c:	beq	1957c <__assert_fail@plt+0x81b4>
   19570:	ldr	r0, [sp, #52]	; 0x34
   19574:	str	r0, [sp, #8]
   19578:	b	195ac <__assert_fail@plt+0x81e4>
   1957c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19580:	cmp	r0, #0
   19584:	beq	1959c <__assert_fail@plt+0x81d4>
   19588:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1958c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   19590:	and	r0, r0, r1
   19594:	str	r0, [sp, #4]
   19598:	b	195a4 <__assert_fail@plt+0x81dc>
   1959c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   195a0:	str	r0, [sp, #4]
   195a4:	ldr	r0, [sp, #4]
   195a8:	str	r0, [sp, #8]
   195ac:	ldr	r0, [sp, #8]
   195b0:	ldr	r1, [sp, #44]	; 0x2c
   195b4:	str	r0, [r1, #12]
   195b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   195bc:	ldrb	r0, [r0]
   195c0:	cmp	r0, #61	; 0x3d
   195c4:	movw	r0, #1
   195c8:	str	r0, [sp]
   195cc:	beq	19600 <__assert_fail@plt+0x8238>
   195d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   195d4:	ldrb	r0, [r0]
   195d8:	cmp	r0, #43	; 0x2b
   195dc:	movw	r0, #1
   195e0:	str	r0, [sp]
   195e4:	beq	19600 <__assert_fail@plt+0x8238>
   195e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   195ec:	ldrb	r0, [r0]
   195f0:	cmp	r0, #45	; 0x2d
   195f4:	movw	r0, #0
   195f8:	moveq	r0, #1
   195fc:	str	r0, [sp]
   19600:	ldr	r0, [sp]
   19604:	tst	r0, #1
   19608:	bne	19164 <__assert_fail@plt+0x7d9c>
   1960c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19610:	ldrb	r0, [r0]
   19614:	cmp	r0, #44	; 0x2c
   19618:	beq	19620 <__assert_fail@plt+0x8258>
   1961c:	b	19634 <__assert_fail@plt+0x826c>
   19620:	b	19624 <__assert_fail@plt+0x825c>
   19624:	ldr	r0, [fp, #-20]	; 0xffffffec
   19628:	add	r0, r0, #1
   1962c:	str	r0, [fp, #-20]	; 0xffffffec
   19630:	b	19074 <__assert_fail@plt+0x7cac>
   19634:	ldr	r0, [fp, #-20]	; 0xffffffec
   19638:	ldrb	r0, [r0]
   1963c:	cmp	r0, #0
   19640:	bne	19664 <__assert_fail@plt+0x829c>
   19644:	ldr	r0, [fp, #-12]
   19648:	ldr	r1, [fp, #-16]
   1964c:	add	r0, r0, r1, lsl #4
   19650:	movw	r1, #0
   19654:	strb	r1, [r0, #1]
   19658:	ldr	r0, [fp, #-12]
   1965c:	str	r0, [fp, #-4]
   19660:	b	19678 <__assert_fail@plt+0x82b0>
   19664:	b	19668 <__assert_fail@plt+0x82a0>
   19668:	ldr	r0, [fp, #-12]
   1966c:	bl	20a84 <__assert_fail@plt+0xf6bc>
   19670:	movw	r0, #0
   19674:	str	r0, [fp, #-4]
   19678:	ldr	r0, [fp, #-4]
   1967c:	mov	sp, fp
   19680:	pop	{fp, pc}
   19684:	sub	sp, sp, #4
   19688:	str	r0, [sp]
   1968c:	ldr	r0, [sp]
   19690:	add	sp, sp, #4
   19694:	bx	lr
   19698:	push	{fp, lr}
   1969c:	mov	fp, sp
   196a0:	sub	sp, sp, #16
   196a4:	str	r0, [fp, #-4]
   196a8:	str	r1, [sp, #8]
   196ac:	movw	r0, #32
   196b0:	bl	1cd28 <__assert_fail@plt+0xb960>
   196b4:	str	r0, [sp, #4]
   196b8:	ldr	r0, [sp, #4]
   196bc:	movw	r1, #61	; 0x3d
   196c0:	strb	r1, [r0]
   196c4:	ldr	r0, [sp, #4]
   196c8:	movw	r1, #1
   196cc:	strb	r1, [r0, #1]
   196d0:	ldr	r0, [sp, #4]
   196d4:	movw	r1, #4095	; 0xfff
   196d8:	str	r1, [r0, #4]
   196dc:	ldr	r0, [fp, #-4]
   196e0:	ldr	r1, [sp, #4]
   196e4:	str	r0, [r1, #8]
   196e8:	ldr	r0, [sp, #8]
   196ec:	ldr	r1, [sp, #4]
   196f0:	str	r0, [r1, #12]
   196f4:	ldr	r0, [sp, #4]
   196f8:	movw	r1, #0
   196fc:	strb	r1, [r0, #17]
   19700:	ldr	r0, [sp, #4]
   19704:	mov	sp, fp
   19708:	pop	{fp, pc}
   1970c:	push	{fp, lr}
   19710:	mov	fp, sp
   19714:	sub	sp, sp, #112	; 0x70
   19718:	str	r0, [fp, #-8]
   1971c:	ldr	r0, [fp, #-8]
   19720:	mov	r1, sp
   19724:	bl	22d64 <__assert_fail@plt+0x1199c>
   19728:	cmp	r0, #0
   1972c:	beq	1973c <__assert_fail@plt+0x8374>
   19730:	movw	r0, #0
   19734:	str	r0, [fp, #-4]
   19738:	b	1974c <__assert_fail@plt+0x8384>
   1973c:	ldr	r0, [sp, #16]
   19740:	movw	r1, #4095	; 0xfff
   19744:	bl	19698 <__assert_fail@plt+0x82d0>
   19748:	str	r0, [fp, #-4]
   1974c:	ldr	r0, [fp, #-4]
   19750:	mov	sp, fp
   19754:	pop	{fp, pc}
   19758:	sub	sp, sp, #60	; 0x3c
   1975c:	ldr	ip, [sp, #60]	; 0x3c
   19760:	str	r0, [sp, #56]	; 0x38
   19764:	and	r0, r1, #1
   19768:	strb	r0, [sp, #55]	; 0x37
   1976c:	str	r2, [sp, #48]	; 0x30
   19770:	str	r3, [sp, #44]	; 0x2c
   19774:	ldr	r0, [sp, #56]	; 0x38
   19778:	movw	r1, #4095	; 0xfff
   1977c:	and	r0, r0, r1
   19780:	str	r0, [sp, #40]	; 0x28
   19784:	movw	r0, #0
   19788:	str	r0, [sp, #36]	; 0x24
   1978c:	str	ip, [sp, #16]
   19790:	ldr	r0, [sp, #44]	; 0x2c
   19794:	ldrb	r0, [r0, #1]
   19798:	cmp	r0, #0
   1979c:	beq	19a20 <__assert_fail@plt+0x8658>
   197a0:	ldr	r0, [sp, #44]	; 0x2c
   197a4:	ldr	r0, [r0, #4]
   197a8:	str	r0, [sp, #32]
   197ac:	ldrb	r0, [sp, #55]	; 0x37
   197b0:	and	r0, r0, #1
   197b4:	cmp	r0, #0
   197b8:	movwne	r0, #3072	; 0xc00
   197bc:	ldr	r1, [sp, #44]	; 0x2c
   197c0:	ldr	r1, [r1, #12]
   197c4:	bic	r0, r0, r1
   197c8:	str	r0, [sp, #28]
   197cc:	ldr	r0, [sp, #44]	; 0x2c
   197d0:	ldr	r0, [r0, #8]
   197d4:	str	r0, [sp, #24]
   197d8:	ldr	r0, [sp, #44]	; 0x2c
   197dc:	ldrb	r0, [r0, #1]
   197e0:	mov	r1, r0
   197e4:	cmp	r0, #1
   197e8:	str	r1, [sp, #12]
   197ec:	beq	19814 <__assert_fail@plt+0x844c>
   197f0:	b	197f4 <__assert_fail@plt+0x842c>
   197f4:	ldr	r0, [sp, #12]
   197f8:	cmp	r0, #2
   197fc:	beq	198a0 <__assert_fail@plt+0x84d8>
   19800:	b	19804 <__assert_fail@plt+0x843c>
   19804:	ldr	r0, [sp, #12]
   19808:	cmp	r0, #3
   1980c:	beq	19818 <__assert_fail@plt+0x8450>
   19810:	b	198cc <__assert_fail@plt+0x8504>
   19814:	b	198cc <__assert_fail@plt+0x8504>
   19818:	ldr	r0, [sp, #40]	; 0x28
   1981c:	ldr	r1, [sp, #24]
   19820:	and	r0, r1, r0
   19824:	str	r0, [sp, #24]
   19828:	ldr	r0, [sp, #24]
   1982c:	and	r0, r0, #292	; 0x124
   19830:	cmp	r0, #0
   19834:	movw	r0, #0
   19838:	movne	r0, #1
   1983c:	tst	r0, #1
   19840:	movw	r0, #292	; 0x124
   19844:	moveq	r0, #0
   19848:	ldr	r1, [sp, #24]
   1984c:	and	r1, r1, #146	; 0x92
   19850:	cmp	r1, #0
   19854:	movw	r1, #0
   19858:	movne	r1, #1
   1985c:	tst	r1, #1
   19860:	movw	r1, #146	; 0x92
   19864:	moveq	r1, #0
   19868:	orr	r0, r0, r1
   1986c:	ldr	r1, [sp, #24]
   19870:	and	r1, r1, #73	; 0x49
   19874:	cmp	r1, #0
   19878:	movw	r1, #0
   1987c:	movne	r1, #1
   19880:	tst	r1, #1
   19884:	movw	r1, #73	; 0x49
   19888:	moveq	r1, #0
   1988c:	orr	r0, r0, r1
   19890:	ldr	r1, [sp, #24]
   19894:	orr	r0, r1, r0
   19898:	str	r0, [sp, #24]
   1989c:	b	198cc <__assert_fail@plt+0x8504>
   198a0:	ldr	r0, [sp, #40]	; 0x28
   198a4:	and	r0, r0, #73	; 0x49
   198a8:	ldrb	r1, [sp, #55]	; 0x37
   198ac:	and	r1, r1, #1
   198b0:	orr	r0, r0, r1
   198b4:	cmp	r0, #0
   198b8:	beq	198c8 <__assert_fail@plt+0x8500>
   198bc:	ldr	r0, [sp, #24]
   198c0:	orr	r0, r0, #73	; 0x49
   198c4:	str	r0, [sp, #24]
   198c8:	b	198cc <__assert_fail@plt+0x8504>
   198cc:	ldr	r0, [sp, #32]
   198d0:	cmp	r0, #0
   198d4:	beq	198e4 <__assert_fail@plt+0x851c>
   198d8:	ldr	r0, [sp, #32]
   198dc:	str	r0, [sp, #8]
   198e0:	b	198f4 <__assert_fail@plt+0x852c>
   198e4:	ldr	r0, [sp, #48]	; 0x30
   198e8:	mvn	r1, #0
   198ec:	eor	r0, r0, r1
   198f0:	str	r0, [sp, #8]
   198f4:	ldr	r0, [sp, #8]
   198f8:	ldr	r1, [sp, #28]
   198fc:	bic	r0, r0, r1
   19900:	ldr	r1, [sp, #24]
   19904:	and	r0, r1, r0
   19908:	str	r0, [sp, #24]
   1990c:	ldr	r0, [sp, #44]	; 0x2c
   19910:	ldrb	r0, [r0]
   19914:	mov	r1, r0
   19918:	cmp	r0, #43	; 0x2b
   1991c:	str	r1, [sp, #4]
   19920:	beq	199c0 <__assert_fail@plt+0x85f8>
   19924:	b	19928 <__assert_fail@plt+0x8560>
   19928:	ldr	r0, [sp, #4]
   1992c:	cmp	r0, #45	; 0x2d
   19930:	beq	199e4 <__assert_fail@plt+0x861c>
   19934:	b	19938 <__assert_fail@plt+0x8570>
   19938:	ldr	r0, [sp, #4]
   1993c:	cmp	r0, #61	; 0x3d
   19940:	bne	19a0c <__assert_fail@plt+0x8644>
   19944:	b	19948 <__assert_fail@plt+0x8580>
   19948:	ldr	r0, [sp, #32]
   1994c:	cmp	r0, #0
   19950:	beq	19968 <__assert_fail@plt+0x85a0>
   19954:	ldr	r0, [sp, #32]
   19958:	mvn	r1, #0
   1995c:	eor	r0, r0, r1
   19960:	str	r0, [sp]
   19964:	b	19974 <__assert_fail@plt+0x85ac>
   19968:	movw	r0, #0
   1996c:	str	r0, [sp]
   19970:	b	19974 <__assert_fail@plt+0x85ac>
   19974:	ldr	r0, [sp]
   19978:	ldr	r1, [sp, #28]
   1997c:	orr	r0, r0, r1
   19980:	str	r0, [sp, #20]
   19984:	ldr	r0, [sp, #20]
   19988:	mvn	r1, #0
   1998c:	eor	r0, r0, r1
   19990:	movw	r1, #4095	; 0xfff
   19994:	and	r0, r0, r1
   19998:	ldr	r1, [sp, #36]	; 0x24
   1999c:	orr	r0, r1, r0
   199a0:	str	r0, [sp, #36]	; 0x24
   199a4:	ldr	r0, [sp, #40]	; 0x28
   199a8:	ldr	r1, [sp, #20]
   199ac:	and	r0, r0, r1
   199b0:	ldr	r1, [sp, #24]
   199b4:	orr	r0, r0, r1
   199b8:	str	r0, [sp, #40]	; 0x28
   199bc:	b	19a0c <__assert_fail@plt+0x8644>
   199c0:	ldr	r0, [sp, #24]
   199c4:	ldr	r1, [sp, #36]	; 0x24
   199c8:	orr	r0, r1, r0
   199cc:	str	r0, [sp, #36]	; 0x24
   199d0:	ldr	r0, [sp, #24]
   199d4:	ldr	r1, [sp, #40]	; 0x28
   199d8:	orr	r0, r1, r0
   199dc:	str	r0, [sp, #40]	; 0x28
   199e0:	b	19a0c <__assert_fail@plt+0x8644>
   199e4:	ldr	r0, [sp, #24]
   199e8:	ldr	r1, [sp, #36]	; 0x24
   199ec:	orr	r0, r1, r0
   199f0:	str	r0, [sp, #36]	; 0x24
   199f4:	ldr	r0, [sp, #24]
   199f8:	mvn	r1, #0
   199fc:	eor	r0, r0, r1
   19a00:	ldr	r1, [sp, #40]	; 0x28
   19a04:	and	r0, r1, r0
   19a08:	str	r0, [sp, #40]	; 0x28
   19a0c:	b	19a10 <__assert_fail@plt+0x8648>
   19a10:	ldr	r0, [sp, #44]	; 0x2c
   19a14:	add	r0, r0, #16
   19a18:	str	r0, [sp, #44]	; 0x2c
   19a1c:	b	19790 <__assert_fail@plt+0x83c8>
   19a20:	ldr	r0, [sp, #60]	; 0x3c
   19a24:	movw	r1, #0
   19a28:	cmp	r0, r1
   19a2c:	beq	19a3c <__assert_fail@plt+0x8674>
   19a30:	ldr	r0, [sp, #36]	; 0x24
   19a34:	ldr	r1, [sp, #60]	; 0x3c
   19a38:	str	r0, [r1]
   19a3c:	ldr	r0, [sp, #40]	; 0x28
   19a40:	add	sp, sp, #60	; 0x3c
   19a44:	bx	lr
   19a48:	sub	sp, sp, #4
   19a4c:	push	{fp, lr}
   19a50:	mov	fp, sp
   19a54:	sub	sp, sp, #28
   19a58:	str	r3, [fp, #8]
   19a5c:	str	r0, [fp, #-4]
   19a60:	str	r1, [fp, #-8]
   19a64:	str	r2, [fp, #-12]
   19a68:	movw	r0, #0
   19a6c:	str	r0, [sp, #12]
   19a70:	ldr	r0, [fp, #-12]
   19a74:	and	r0, r0, #64	; 0x40
   19a78:	cmp	r0, #0
   19a7c:	beq	19aa8 <__assert_fail@plt+0x86e0>
   19a80:	add	r0, sp, #8
   19a84:	mov	r1, r0
   19a88:	add	r2, fp, #8
   19a8c:	str	r2, [r1]
   19a90:	ldr	r1, [sp, #8]
   19a94:	add	r2, r1, #4
   19a98:	str	r2, [sp, #8]
   19a9c:	ldr	r1, [r1]
   19aa0:	str	r1, [sp, #12]
   19aa4:	str	r0, [sp, #4]
   19aa8:	ldr	r0, [fp, #-4]
   19aac:	ldr	r1, [fp, #-8]
   19ab0:	ldr	r2, [fp, #-12]
   19ab4:	ldr	r3, [sp, #12]
   19ab8:	bl	1126c <openat64@plt>
   19abc:	bl	1c39c <__assert_fail@plt+0xafd4>
   19ac0:	mov	sp, fp
   19ac4:	pop	{fp, lr}
   19ac8:	add	sp, sp, #4
   19acc:	bx	lr
   19ad0:	push	{fp, lr}
   19ad4:	mov	fp, sp
   19ad8:	sub	sp, sp, #48	; 0x30
   19adc:	ldr	ip, [pc, #176]	; 19b94 <__assert_fail@plt+0x87cc>
   19ae0:	str	r0, [fp, #-8]
   19ae4:	str	r1, [fp, #-12]
   19ae8:	str	r2, [fp, #-16]
   19aec:	str	r3, [fp, #-20]	; 0xffffffec
   19af0:	ldr	r0, [fp, #-16]
   19af4:	orr	r0, r0, ip
   19af8:	str	r0, [sp, #24]
   19afc:	ldr	r0, [fp, #-8]
   19b00:	ldr	r1, [fp, #-12]
   19b04:	ldr	r2, [sp, #24]
   19b08:	bl	19a48 <__assert_fail@plt+0x8680>
   19b0c:	str	r0, [sp, #20]
   19b10:	ldr	r0, [sp, #20]
   19b14:	cmp	r0, #0
   19b18:	bge	19b28 <__assert_fail@plt+0x8760>
   19b1c:	movw	r0, #0
   19b20:	str	r0, [fp, #-4]
   19b24:	b	19b88 <__assert_fail@plt+0x87c0>
   19b28:	ldr	r0, [sp, #20]
   19b2c:	bl	11320 <fdopendir@plt>
   19b30:	str	r0, [sp, #16]
   19b34:	ldr	r0, [sp, #16]
   19b38:	movw	lr, #0
   19b3c:	cmp	r0, lr
   19b40:	beq	19b54 <__assert_fail@plt+0x878c>
   19b44:	ldr	r0, [sp, #20]
   19b48:	ldr	r1, [fp, #-20]	; 0xffffffec
   19b4c:	str	r0, [r1]
   19b50:	b	19b80 <__assert_fail@plt+0x87b8>
   19b54:	bl	11290 <__errno_location@plt>
   19b58:	ldr	r0, [r0]
   19b5c:	str	r0, [sp, #12]
   19b60:	ldr	r0, [sp, #20]
   19b64:	bl	113a4 <close@plt>
   19b68:	ldr	lr, [sp, #12]
   19b6c:	str	r0, [sp, #8]
   19b70:	str	lr, [sp, #4]
   19b74:	bl	11290 <__errno_location@plt>
   19b78:	ldr	lr, [sp, #4]
   19b7c:	str	lr, [r0]
   19b80:	ldr	r0, [sp, #16]
   19b84:	str	r0, [fp, #-4]
   19b88:	ldr	r0, [fp, #-4]
   19b8c:	mov	sp, fp
   19b90:	pop	{fp, pc}
   19b94:	andeq	r4, r8, r0, lsl #18
   19b98:	push	{fp, lr}
   19b9c:	mov	fp, sp
   19ba0:	sub	sp, sp, #24
   19ba4:	str	r0, [fp, #-4]
   19ba8:	ldr	r0, [fp, #-4]
   19bac:	movw	r1, #0
   19bb0:	cmp	r0, r1
   19bb4:	bne	19bd8 <__assert_fail@plt+0x8810>
   19bb8:	movw	r0, #16760	; 0x4178
   19bbc:	movt	r0, #3
   19bc0:	ldr	r1, [r0]
   19bc4:	movw	r0, #14480	; 0x3890
   19bc8:	movt	r0, #2
   19bcc:	bl	11380 <fputs@plt>
   19bd0:	str	r0, [sp, #8]
   19bd4:	bl	11398 <abort@plt>
   19bd8:	ldr	r0, [fp, #-4]
   19bdc:	movw	r1, #47	; 0x2f
   19be0:	bl	112f0 <strrchr@plt>
   19be4:	str	r0, [fp, #-8]
   19be8:	ldr	r0, [fp, #-8]
   19bec:	movw	r1, #0
   19bf0:	cmp	r0, r1
   19bf4:	beq	19c08 <__assert_fail@plt+0x8840>
   19bf8:	ldr	r0, [fp, #-8]
   19bfc:	add	r0, r0, #1
   19c00:	str	r0, [sp, #4]
   19c04:	b	19c10 <__assert_fail@plt+0x8848>
   19c08:	ldr	r0, [fp, #-4]
   19c0c:	str	r0, [sp, #4]
   19c10:	ldr	r0, [sp, #4]
   19c14:	str	r0, [sp, #12]
   19c18:	ldr	r0, [sp, #12]
   19c1c:	ldr	r1, [fp, #-4]
   19c20:	sub	r0, r0, r1
   19c24:	cmp	r0, #7
   19c28:	blt	19c94 <__assert_fail@plt+0x88cc>
   19c2c:	ldr	r0, [sp, #12]
   19c30:	mvn	r1, #6
   19c34:	add	r0, r0, r1
   19c38:	movw	r1, #14536	; 0x38c8
   19c3c:	movt	r1, #2
   19c40:	movw	r2, #7
   19c44:	bl	1138c <strncmp@plt>
   19c48:	cmp	r0, #0
   19c4c:	bne	19c94 <__assert_fail@plt+0x88cc>
   19c50:	ldr	r0, [sp, #12]
   19c54:	str	r0, [fp, #-4]
   19c58:	ldr	r0, [sp, #12]
   19c5c:	movw	r1, #14544	; 0x38d0
   19c60:	movt	r1, #2
   19c64:	movw	r2, #3
   19c68:	bl	1138c <strncmp@plt>
   19c6c:	cmp	r0, #0
   19c70:	bne	19c90 <__assert_fail@plt+0x88c8>
   19c74:	ldr	r0, [sp, #12]
   19c78:	add	r0, r0, #3
   19c7c:	str	r0, [fp, #-4]
   19c80:	ldr	r0, [fp, #-4]
   19c84:	movw	r1, #16744	; 0x4168
   19c88:	movt	r1, #3
   19c8c:	str	r0, [r1]
   19c90:	b	19c94 <__assert_fail@plt+0x88cc>
   19c94:	ldr	r0, [fp, #-4]
   19c98:	movw	r1, #16820	; 0x41b4
   19c9c:	movt	r1, #3
   19ca0:	str	r0, [r1]
   19ca4:	ldr	r0, [fp, #-4]
   19ca8:	movw	r1, #16748	; 0x416c
   19cac:	movt	r1, #3
   19cb0:	str	r0, [r1]
   19cb4:	mov	sp, fp
   19cb8:	pop	{fp, pc}
   19cbc:	push	{fp, lr}
   19cc0:	mov	fp, sp
   19cc4:	sub	sp, sp, #24
   19cc8:	str	r0, [fp, #-4]
   19ccc:	bl	11290 <__errno_location@plt>
   19cd0:	ldr	r0, [r0]
   19cd4:	str	r0, [fp, #-8]
   19cd8:	ldr	r0, [fp, #-4]
   19cdc:	movw	lr, #0
   19ce0:	cmp	r0, lr
   19ce4:	beq	19cf4 <__assert_fail@plt+0x892c>
   19ce8:	ldr	r0, [fp, #-4]
   19cec:	str	r0, [sp, #8]
   19cf0:	b	19d04 <__assert_fail@plt+0x893c>
   19cf4:	movw	r0, #16824	; 0x41b8
   19cf8:	movt	r0, #3
   19cfc:	str	r0, [sp, #8]
   19d00:	b	19d04 <__assert_fail@plt+0x893c>
   19d04:	ldr	r0, [sp, #8]
   19d08:	movw	r1, #48	; 0x30
   19d0c:	bl	1fa04 <__assert_fail@plt+0xe63c>
   19d10:	str	r0, [sp, #12]
   19d14:	ldr	r0, [fp, #-8]
   19d18:	str	r0, [sp, #4]
   19d1c:	bl	11290 <__errno_location@plt>
   19d20:	ldr	r1, [sp, #4]
   19d24:	str	r1, [r0]
   19d28:	ldr	r0, [sp, #12]
   19d2c:	mov	sp, fp
   19d30:	pop	{fp, pc}
   19d34:	sub	sp, sp, #8
   19d38:	str	r0, [sp, #4]
   19d3c:	ldr	r0, [sp, #4]
   19d40:	movw	r1, #0
   19d44:	cmp	r0, r1
   19d48:	beq	19d58 <__assert_fail@plt+0x8990>
   19d4c:	ldr	r0, [sp, #4]
   19d50:	str	r0, [sp]
   19d54:	b	19d68 <__assert_fail@plt+0x89a0>
   19d58:	movw	r0, #16824	; 0x41b8
   19d5c:	movt	r0, #3
   19d60:	str	r0, [sp]
   19d64:	b	19d68 <__assert_fail@plt+0x89a0>
   19d68:	ldr	r0, [sp]
   19d6c:	ldr	r0, [r0]
   19d70:	add	sp, sp, #8
   19d74:	bx	lr
   19d78:	sub	sp, sp, #16
   19d7c:	str	r0, [sp, #12]
   19d80:	str	r1, [sp, #8]
   19d84:	ldr	r0, [sp, #8]
   19d88:	ldr	r1, [sp, #12]
   19d8c:	movw	r2, #0
   19d90:	cmp	r1, r2
   19d94:	str	r0, [sp, #4]
   19d98:	beq	19da8 <__assert_fail@plt+0x89e0>
   19d9c:	ldr	r0, [sp, #12]
   19da0:	str	r0, [sp]
   19da4:	b	19db8 <__assert_fail@plt+0x89f0>
   19da8:	movw	r0, #16824	; 0x41b8
   19dac:	movt	r0, #3
   19db0:	str	r0, [sp]
   19db4:	b	19db8 <__assert_fail@plt+0x89f0>
   19db8:	ldr	r0, [sp]
   19dbc:	ldr	r1, [sp, #4]
   19dc0:	str	r1, [r0]
   19dc4:	add	sp, sp, #16
   19dc8:	bx	lr
   19dcc:	sub	sp, sp, #32
   19dd0:	str	r0, [sp, #28]
   19dd4:	strb	r1, [sp, #27]
   19dd8:	str	r2, [sp, #20]
   19ddc:	ldrb	r0, [sp, #27]
   19de0:	strb	r0, [sp, #19]
   19de4:	ldr	r0, [sp, #28]
   19de8:	movw	r1, #0
   19dec:	cmp	r0, r1
   19df0:	beq	19e00 <__assert_fail@plt+0x8a38>
   19df4:	ldr	r0, [sp, #28]
   19df8:	str	r0, [sp]
   19dfc:	b	19e10 <__assert_fail@plt+0x8a48>
   19e00:	movw	r0, #16824	; 0x41b8
   19e04:	movt	r0, #3
   19e08:	str	r0, [sp]
   19e0c:	b	19e10 <__assert_fail@plt+0x8a48>
   19e10:	ldr	r0, [sp]
   19e14:	add	r0, r0, #8
   19e18:	ldrb	r1, [sp, #19]
   19e1c:	lsr	r1, r1, #5
   19e20:	add	r0, r0, r1, lsl #2
   19e24:	str	r0, [sp, #12]
   19e28:	ldrb	r0, [sp, #19]
   19e2c:	and	r0, r0, #31
   19e30:	str	r0, [sp, #8]
   19e34:	ldr	r0, [sp, #12]
   19e38:	ldr	r0, [r0]
   19e3c:	ldr	r1, [sp, #8]
   19e40:	lsr	r0, r0, r1
   19e44:	and	r0, r0, #1
   19e48:	str	r0, [sp, #4]
   19e4c:	ldr	r0, [sp, #20]
   19e50:	and	r0, r0, #1
   19e54:	ldr	r1, [sp, #4]
   19e58:	eor	r0, r0, r1
   19e5c:	ldr	r1, [sp, #8]
   19e60:	lsl	r0, r0, r1
   19e64:	ldr	r1, [sp, #12]
   19e68:	ldr	r2, [r1]
   19e6c:	eor	r0, r2, r0
   19e70:	str	r0, [r1]
   19e74:	ldr	r0, [sp, #4]
   19e78:	add	sp, sp, #32
   19e7c:	bx	lr
   19e80:	sub	sp, sp, #12
   19e84:	str	r0, [sp, #8]
   19e88:	str	r1, [sp, #4]
   19e8c:	ldr	r0, [sp, #8]
   19e90:	movw	r1, #0
   19e94:	cmp	r0, r1
   19e98:	bne	19ea8 <__assert_fail@plt+0x8ae0>
   19e9c:	movw	r0, #16824	; 0x41b8
   19ea0:	movt	r0, #3
   19ea4:	str	r0, [sp, #8]
   19ea8:	ldr	r0, [sp, #8]
   19eac:	ldr	r0, [r0, #4]
   19eb0:	str	r0, [sp]
   19eb4:	ldr	r0, [sp, #4]
   19eb8:	ldr	r1, [sp, #8]
   19ebc:	str	r0, [r1, #4]
   19ec0:	ldr	r0, [sp]
   19ec4:	add	sp, sp, #12
   19ec8:	bx	lr
   19ecc:	push	{fp, lr}
   19ed0:	mov	fp, sp
   19ed4:	sub	sp, sp, #16
   19ed8:	str	r0, [fp, #-4]
   19edc:	str	r1, [sp, #8]
   19ee0:	str	r2, [sp, #4]
   19ee4:	ldr	r0, [fp, #-4]
   19ee8:	movw	r1, #0
   19eec:	cmp	r0, r1
   19ef0:	bne	19f00 <__assert_fail@plt+0x8b38>
   19ef4:	movw	r0, #16824	; 0x41b8
   19ef8:	movt	r0, #3
   19efc:	str	r0, [fp, #-4]
   19f00:	ldr	r0, [fp, #-4]
   19f04:	movw	r1, #10
   19f08:	str	r1, [r0]
   19f0c:	ldr	r0, [sp, #8]
   19f10:	movw	r1, #0
   19f14:	cmp	r0, r1
   19f18:	beq	19f2c <__assert_fail@plt+0x8b64>
   19f1c:	ldr	r0, [sp, #4]
   19f20:	movw	r1, #0
   19f24:	cmp	r0, r1
   19f28:	bne	19f30 <__assert_fail@plt+0x8b68>
   19f2c:	bl	11398 <abort@plt>
   19f30:	ldr	r0, [sp, #8]
   19f34:	ldr	r1, [fp, #-4]
   19f38:	str	r0, [r1, #40]	; 0x28
   19f3c:	ldr	r0, [sp, #4]
   19f40:	ldr	r1, [fp, #-4]
   19f44:	str	r0, [r1, #44]	; 0x2c
   19f48:	mov	sp, fp
   19f4c:	pop	{fp, pc}
   19f50:	push	{r4, r5, r6, sl, fp, lr}
   19f54:	add	fp, sp, #16
   19f58:	sub	sp, sp, #64	; 0x40
   19f5c:	ldr	ip, [fp, #8]
   19f60:	str	r0, [fp, #-20]	; 0xffffffec
   19f64:	str	r1, [fp, #-24]	; 0xffffffe8
   19f68:	str	r2, [fp, #-28]	; 0xffffffe4
   19f6c:	str	r3, [fp, #-32]	; 0xffffffe0
   19f70:	ldr	r0, [fp, #8]
   19f74:	movw	r1, #0
   19f78:	cmp	r0, r1
   19f7c:	str	ip, [sp, #32]
   19f80:	beq	19f90 <__assert_fail@plt+0x8bc8>
   19f84:	ldr	r0, [fp, #8]
   19f88:	str	r0, [sp, #28]
   19f8c:	b	19fa0 <__assert_fail@plt+0x8bd8>
   19f90:	movw	r0, #16824	; 0x41b8
   19f94:	movt	r0, #3
   19f98:	str	r0, [sp, #28]
   19f9c:	b	19fa0 <__assert_fail@plt+0x8bd8>
   19fa0:	ldr	r0, [sp, #28]
   19fa4:	str	r0, [fp, #-36]	; 0xffffffdc
   19fa8:	bl	11290 <__errno_location@plt>
   19fac:	ldr	r0, [r0]
   19fb0:	str	r0, [sp, #40]	; 0x28
   19fb4:	ldr	r0, [fp, #-20]	; 0xffffffec
   19fb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19fbc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   19fc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19fc4:	ldr	lr, [fp, #-36]	; 0xffffffdc
   19fc8:	ldr	lr, [lr]
   19fcc:	ldr	ip, [fp, #-36]	; 0xffffffdc
   19fd0:	ldr	ip, [ip, #4]
   19fd4:	ldr	r4, [fp, #-36]	; 0xffffffdc
   19fd8:	add	r4, r4, #8
   19fdc:	ldr	r5, [fp, #-36]	; 0xffffffdc
   19fe0:	ldr	r5, [r5, #40]	; 0x28
   19fe4:	ldr	r6, [fp, #-36]	; 0xffffffdc
   19fe8:	ldr	r6, [r6, #44]	; 0x2c
   19fec:	str	lr, [sp]
   19ff0:	str	ip, [sp, #4]
   19ff4:	str	r4, [sp, #8]
   19ff8:	str	r5, [sp, #12]
   19ffc:	str	r6, [sp, #16]
   1a000:	bl	1a028 <__assert_fail@plt+0x8c60>
   1a004:	str	r0, [sp, #36]	; 0x24
   1a008:	ldr	r0, [sp, #40]	; 0x28
   1a00c:	str	r0, [sp, #24]
   1a010:	bl	11290 <__errno_location@plt>
   1a014:	ldr	r1, [sp, #24]
   1a018:	str	r1, [r0]
   1a01c:	ldr	r0, [sp, #36]	; 0x24
   1a020:	sub	sp, fp, #16
   1a024:	pop	{r4, r5, r6, sl, fp, pc}
   1a028:	push	{r4, r5, r6, sl, fp, lr}
   1a02c:	add	fp, sp, #16
   1a030:	sub	sp, sp, #168	; 0xa8
   1a034:	ldr	ip, [fp, #24]
   1a038:	ldr	lr, [fp, #20]
   1a03c:	ldr	r4, [fp, #16]
   1a040:	ldr	r5, [fp, #12]
   1a044:	ldr	r6, [fp, #8]
   1a048:	str	r0, [fp, #-24]	; 0xffffffe8
   1a04c:	str	r1, [fp, #-28]	; 0xffffffe4
   1a050:	str	r2, [fp, #-32]	; 0xffffffe0
   1a054:	str	r3, [fp, #-36]	; 0xffffffdc
   1a058:	movw	r0, #0
   1a05c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a060:	str	r0, [fp, #-48]	; 0xffffffd0
   1a064:	str	r0, [fp, #-52]	; 0xffffffcc
   1a068:	str	r0, [fp, #-56]	; 0xffffffc8
   1a06c:	movw	r0, #0
   1a070:	strb	r0, [fp, #-57]	; 0xffffffc7
   1a074:	str	r6, [sp, #80]	; 0x50
   1a078:	str	lr, [sp, #76]	; 0x4c
   1a07c:	str	r4, [sp, #72]	; 0x48
   1a080:	str	r5, [sp, #68]	; 0x44
   1a084:	str	ip, [sp, #64]	; 0x40
   1a088:	bl	111b8 <__ctype_get_mb_cur_max@plt>
   1a08c:	cmp	r0, #1
   1a090:	movw	r0, #0
   1a094:	moveq	r0, #1
   1a098:	and	r0, r0, #1
   1a09c:	strb	r0, [fp, #-58]	; 0xffffffc6
   1a0a0:	ldr	r0, [fp, #12]
   1a0a4:	and	r0, r0, #2
   1a0a8:	cmp	r0, #0
   1a0ac:	movw	r0, #0
   1a0b0:	movne	r0, #1
   1a0b4:	and	r0, r0, #1
   1a0b8:	strb	r0, [fp, #-59]	; 0xffffffc5
   1a0bc:	movw	r0, #0
   1a0c0:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a0c4:	strb	r0, [fp, #-61]	; 0xffffffc3
   1a0c8:	movw	r0, #1
   1a0cc:	strb	r0, [fp, #-62]	; 0xffffffc2
   1a0d0:	ldr	r0, [fp, #8]
   1a0d4:	cmp	r0, #10
   1a0d8:	str	r0, [sp, #60]	; 0x3c
   1a0dc:	bhi	1a304 <__assert_fail@plt+0x8f3c>
   1a0e0:	add	r0, pc, #8
   1a0e4:	ldr	r1, [sp, #60]	; 0x3c
   1a0e8:	ldr	r0, [r0, r1, lsl #2]
   1a0ec:	mov	pc, r0
   1a0f0:	strdeq	sl, [r1], -r8
   1a0f4:	andeq	sl, r1, r4, ror r2
   1a0f8:	muleq	r1, r4, r2
   1a0fc:	andeq	sl, r1, ip, ror #4
   1a100:	andeq	sl, r1, ip, ror r2
   1a104:	andeq	sl, r1, ip, lsr #2
   1a108:	andeq	sl, r1, ip, lsl r1
   1a10c:	muleq	r1, r0, r1
   1a110:	andeq	sl, r1, r4, lsr #3
   1a114:	andeq	sl, r1, r4, lsr #3
   1a118:	andeq	sl, r1, r4, lsr #3
   1a11c:	movw	r0, #5
   1a120:	str	r0, [fp, #8]
   1a124:	movw	r0, #1
   1a128:	strb	r0, [fp, #-59]	; 0xffffffc5
   1a12c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a130:	tst	r0, #1
   1a134:	bne	1a170 <__assert_fail@plt+0x8da8>
   1a138:	b	1a13c <__assert_fail@plt+0x8d74>
   1a13c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a140:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a144:	cmp	r0, r1
   1a148:	bcs	1a160 <__assert_fail@plt+0x8d98>
   1a14c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a150:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a154:	add	r0, r0, r1
   1a158:	movw	r1, #34	; 0x22
   1a15c:	strb	r1, [r0]
   1a160:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a164:	add	r0, r0, #1
   1a168:	str	r0, [fp, #-44]	; 0xffffffd4
   1a16c:	b	1a170 <__assert_fail@plt+0x8da8>
   1a170:	movw	r0, #1
   1a174:	strb	r0, [fp, #-57]	; 0xffffffc7
   1a178:	movw	r0, #14624	; 0x3920
   1a17c:	movt	r0, #2
   1a180:	str	r0, [fp, #-52]	; 0xffffffcc
   1a184:	movw	r0, #1
   1a188:	str	r0, [fp, #-56]	; 0xffffffc8
   1a18c:	b	1a308 <__assert_fail@plt+0x8f40>
   1a190:	movw	r0, #1
   1a194:	strb	r0, [fp, #-57]	; 0xffffffc7
   1a198:	movw	r0, #0
   1a19c:	strb	r0, [fp, #-59]	; 0xffffffc5
   1a1a0:	b	1a308 <__assert_fail@plt+0x8f40>
   1a1a4:	ldr	r0, [fp, #8]
   1a1a8:	cmp	r0, #10
   1a1ac:	beq	1a1d8 <__assert_fail@plt+0x8e10>
   1a1b0:	ldr	r1, [fp, #8]
   1a1b4:	movw	r0, #14626	; 0x3922
   1a1b8:	movt	r0, #2
   1a1bc:	bl	1c218 <__assert_fail@plt+0xae50>
   1a1c0:	str	r0, [fp, #20]
   1a1c4:	ldr	r1, [fp, #8]
   1a1c8:	movw	r0, #14628	; 0x3924
   1a1cc:	movt	r0, #2
   1a1d0:	bl	1c218 <__assert_fail@plt+0xae50>
   1a1d4:	str	r0, [fp, #24]
   1a1d8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a1dc:	tst	r0, #1
   1a1e0:	bne	1a24c <__assert_fail@plt+0x8e84>
   1a1e4:	ldr	r0, [fp, #20]
   1a1e8:	str	r0, [fp, #-52]	; 0xffffffcc
   1a1ec:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a1f0:	ldrsb	r0, [r0]
   1a1f4:	cmp	r0, #0
   1a1f8:	beq	1a248 <__assert_fail@plt+0x8e80>
   1a1fc:	b	1a200 <__assert_fail@plt+0x8e38>
   1a200:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a204:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a208:	cmp	r0, r1
   1a20c:	bcs	1a228 <__assert_fail@plt+0x8e60>
   1a210:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a214:	ldrb	r0, [r0]
   1a218:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a21c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a220:	add	r1, r1, r2
   1a224:	strb	r0, [r1]
   1a228:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a22c:	add	r0, r0, #1
   1a230:	str	r0, [fp, #-44]	; 0xffffffd4
   1a234:	b	1a238 <__assert_fail@plt+0x8e70>
   1a238:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a23c:	add	r0, r0, #1
   1a240:	str	r0, [fp, #-52]	; 0xffffffcc
   1a244:	b	1a1ec <__assert_fail@plt+0x8e24>
   1a248:	b	1a24c <__assert_fail@plt+0x8e84>
   1a24c:	movw	r0, #1
   1a250:	strb	r0, [fp, #-57]	; 0xffffffc7
   1a254:	ldr	r0, [fp, #24]
   1a258:	str	r0, [fp, #-52]	; 0xffffffcc
   1a25c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a260:	bl	11260 <strlen@plt>
   1a264:	str	r0, [fp, #-56]	; 0xffffffc8
   1a268:	b	1a308 <__assert_fail@plt+0x8f40>
   1a26c:	movw	r0, #1
   1a270:	strb	r0, [fp, #-57]	; 0xffffffc7
   1a274:	movw	r0, #1
   1a278:	strb	r0, [fp, #-59]	; 0xffffffc5
   1a27c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a280:	tst	r0, #1
   1a284:	bne	1a290 <__assert_fail@plt+0x8ec8>
   1a288:	movw	r0, #1
   1a28c:	strb	r0, [fp, #-57]	; 0xffffffc7
   1a290:	b	1a294 <__assert_fail@plt+0x8ecc>
   1a294:	movw	r0, #2
   1a298:	str	r0, [fp, #8]
   1a29c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a2a0:	tst	r0, #1
   1a2a4:	bne	1a2e0 <__assert_fail@plt+0x8f18>
   1a2a8:	b	1a2ac <__assert_fail@plt+0x8ee4>
   1a2ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a2b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a2b4:	cmp	r0, r1
   1a2b8:	bcs	1a2d0 <__assert_fail@plt+0x8f08>
   1a2bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a2c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a2c4:	add	r0, r0, r1
   1a2c8:	movw	r1, #39	; 0x27
   1a2cc:	strb	r1, [r0]
   1a2d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a2d4:	add	r0, r0, #1
   1a2d8:	str	r0, [fp, #-44]	; 0xffffffd4
   1a2dc:	b	1a2e0 <__assert_fail@plt+0x8f18>
   1a2e0:	movw	r0, #14628	; 0x3924
   1a2e4:	movt	r0, #2
   1a2e8:	str	r0, [fp, #-52]	; 0xffffffcc
   1a2ec:	movw	r0, #1
   1a2f0:	str	r0, [fp, #-56]	; 0xffffffc8
   1a2f4:	b	1a308 <__assert_fail@plt+0x8f40>
   1a2f8:	movw	r0, #0
   1a2fc:	strb	r0, [fp, #-59]	; 0xffffffc5
   1a300:	b	1a308 <__assert_fail@plt+0x8f40>
   1a304:	bl	11398 <abort@plt>
   1a308:	movw	r0, #0
   1a30c:	str	r0, [fp, #-40]	; 0xffffffd8
   1a310:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a314:	cmn	r0, #1
   1a318:	bne	1a344 <__assert_fail@plt+0x8f7c>
   1a31c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a320:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a324:	add	r0, r0, r1
   1a328:	ldrb	r0, [r0]
   1a32c:	cmp	r0, #0
   1a330:	movw	r0, #0
   1a334:	moveq	r0, #1
   1a338:	and	r0, r0, #1
   1a33c:	str	r0, [sp, #56]	; 0x38
   1a340:	b	1a360 <__assert_fail@plt+0x8f98>
   1a344:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a348:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a34c:	cmp	r0, r1
   1a350:	movw	r0, #0
   1a354:	moveq	r0, #1
   1a358:	and	r0, r0, #1
   1a35c:	str	r0, [sp, #56]	; 0x38
   1a360:	ldr	r0, [sp, #56]	; 0x38
   1a364:	cmp	r0, #0
   1a368:	movw	r0, #0
   1a36c:	movne	r0, #1
   1a370:	mvn	r1, #0
   1a374:	eor	r0, r0, r1
   1a378:	tst	r0, #1
   1a37c:	beq	1b56c <__assert_fail@plt+0xa1a4>
   1a380:	movw	r0, #0
   1a384:	strb	r0, [fp, #-65]	; 0xffffffbf
   1a388:	strb	r0, [fp, #-66]	; 0xffffffbe
   1a38c:	strb	r0, [fp, #-67]	; 0xffffffbd
   1a390:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a394:	tst	r0, #1
   1a398:	beq	1a444 <__assert_fail@plt+0x907c>
   1a39c:	ldr	r0, [fp, #8]
   1a3a0:	cmp	r0, #2
   1a3a4:	beq	1a444 <__assert_fail@plt+0x907c>
   1a3a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a3ac:	cmp	r0, #0
   1a3b0:	beq	1a444 <__assert_fail@plt+0x907c>
   1a3b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a3b8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1a3bc:	add	r0, r0, r1
   1a3c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a3c4:	cmn	r1, #1
   1a3c8:	str	r0, [sp, #52]	; 0x34
   1a3cc:	bne	1a3f4 <__assert_fail@plt+0x902c>
   1a3d0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a3d4:	movw	r1, #1
   1a3d8:	cmp	r1, r0
   1a3dc:	bcs	1a3f4 <__assert_fail@plt+0x902c>
   1a3e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a3e4:	bl	11260 <strlen@plt>
   1a3e8:	str	r0, [fp, #-36]	; 0xffffffdc
   1a3ec:	str	r0, [sp, #48]	; 0x30
   1a3f0:	b	1a3fc <__assert_fail@plt+0x9034>
   1a3f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a3f8:	str	r0, [sp, #48]	; 0x30
   1a3fc:	ldr	r0, [sp, #48]	; 0x30
   1a400:	ldr	r1, [sp, #52]	; 0x34
   1a404:	cmp	r1, r0
   1a408:	bhi	1a444 <__assert_fail@plt+0x907c>
   1a40c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a410:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a414:	add	r0, r0, r1
   1a418:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a41c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a420:	bl	11164 <memcmp@plt>
   1a424:	cmp	r0, #0
   1a428:	bne	1a444 <__assert_fail@plt+0x907c>
   1a42c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a430:	tst	r0, #1
   1a434:	beq	1a43c <__assert_fail@plt+0x9074>
   1a438:	b	1b6ec <__assert_fail@plt+0xa324>
   1a43c:	movw	r0, #1
   1a440:	strb	r0, [fp, #-65]	; 0xffffffbf
   1a444:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a448:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a44c:	ldrb	r0, [r0, r1]
   1a450:	strb	r0, [fp, #-63]	; 0xffffffc1
   1a454:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1a458:	mov	r1, r0
   1a45c:	cmp	r0, #126	; 0x7e
   1a460:	str	r1, [sp, #44]	; 0x2c
   1a464:	bhi	1acd4 <__assert_fail@plt+0x990c>
   1a468:	add	r0, pc, #8
   1a46c:	ldr	r1, [sp, #44]	; 0x2c
   1a470:	ldr	r0, [r0, r1, lsl #2]
   1a474:	mov	pc, r0
   1a478:	andeq	sl, r1, r4, ror r6
   1a47c:	ldrdeq	sl, [r1], -r4
   1a480:	ldrdeq	sl, [r1], -r4
   1a484:	ldrdeq	sl, [r1], -r4
   1a488:	ldrdeq	sl, [r1], -r4
   1a48c:	ldrdeq	sl, [r1], -r4
   1a490:	ldrdeq	sl, [r1], -r4
   1a494:	andeq	sl, r1, ip, ror sl
   1a498:	andeq	sl, r1, r8, lsl #21
   1a49c:			; <UNDEFINED> instruction: 0x0001aab8
   1a4a0:	andeq	sl, r1, r0, lsr #21
   1a4a4:	andeq	sl, r1, r4, asr #21
   1a4a8:	muleq	r1, r4, sl
   1a4ac:	andeq	sl, r1, ip, lsr #21
   1a4b0:	ldrdeq	sl, [r1], -r4
   1a4b4:	ldrdeq	sl, [r1], -r4
   1a4b8:	ldrdeq	sl, [r1], -r4
   1a4bc:	ldrdeq	sl, [r1], -r4
   1a4c0:	ldrdeq	sl, [r1], -r4
   1a4c4:	ldrdeq	sl, [r1], -r4
   1a4c8:	ldrdeq	sl, [r1], -r4
   1a4cc:	ldrdeq	sl, [r1], -r4
   1a4d0:	ldrdeq	sl, [r1], -r4
   1a4d4:	ldrdeq	sl, [r1], -r4
   1a4d8:	ldrdeq	sl, [r1], -r4
   1a4dc:	ldrdeq	sl, [r1], -r4
   1a4e0:	ldrdeq	sl, [r1], -r4
   1a4e4:	ldrdeq	sl, [r1], -r4
   1a4e8:	ldrdeq	sl, [r1], -r4
   1a4ec:	ldrdeq	sl, [r1], -r4
   1a4f0:	ldrdeq	sl, [r1], -r4
   1a4f4:	ldrdeq	sl, [r1], -r4
   1a4f8:	andeq	sl, r1, r8, lsr #23
   1a4fc:			; <UNDEFINED> instruction: 0x0001abb0
   1a500:			; <UNDEFINED> instruction: 0x0001abb0
   1a504:	muleq	r1, r4, fp
   1a508:			; <UNDEFINED> instruction: 0x0001abb0
   1a50c:	andeq	sl, r1, r8, asr #25
   1a510:			; <UNDEFINED> instruction: 0x0001abb0
   1a514:	ldrdeq	sl, [r1], -r0
   1a518:			; <UNDEFINED> instruction: 0x0001abb0
   1a51c:			; <UNDEFINED> instruction: 0x0001abb0
   1a520:			; <UNDEFINED> instruction: 0x0001abb0
   1a524:	andeq	sl, r1, r8, asr #25
   1a528:	andeq	sl, r1, r8, asr #25
   1a52c:	andeq	sl, r1, r8, asr #25
   1a530:	andeq	sl, r1, r8, asr #25
   1a534:	andeq	sl, r1, r8, asr #25
   1a538:	andeq	sl, r1, r8, asr #25
   1a53c:	andeq	sl, r1, r8, asr #25
   1a540:	andeq	sl, r1, r8, asr #25
   1a544:	andeq	sl, r1, r8, asr #25
   1a548:	andeq	sl, r1, r8, asr #25
   1a54c:	andeq	sl, r1, r8, asr #25
   1a550:	andeq	sl, r1, r8, asr #25
   1a554:	andeq	sl, r1, r8, asr #25
   1a558:	andeq	sl, r1, r8, asr #25
   1a55c:	andeq	sl, r1, r8, asr #25
   1a560:	andeq	sl, r1, r8, asr #25
   1a564:			; <UNDEFINED> instruction: 0x0001abb0
   1a568:			; <UNDEFINED> instruction: 0x0001abb0
   1a56c:			; <UNDEFINED> instruction: 0x0001abb0
   1a570:			; <UNDEFINED> instruction: 0x0001abb0
   1a574:	andeq	sl, r1, r0, lsl #17
   1a578:	ldrdeq	sl, [r1], -r4
   1a57c:	andeq	sl, r1, r8, asr #25
   1a580:	andeq	sl, r1, r8, asr #25
   1a584:	andeq	sl, r1, r8, asr #25
   1a588:	andeq	sl, r1, r8, asr #25
   1a58c:	andeq	sl, r1, r8, asr #25
   1a590:	andeq	sl, r1, r8, asr #25
   1a594:	andeq	sl, r1, r8, asr #25
   1a598:	andeq	sl, r1, r8, asr #25
   1a59c:	andeq	sl, r1, r8, asr #25
   1a5a0:	andeq	sl, r1, r8, asr #25
   1a5a4:	andeq	sl, r1, r8, asr #25
   1a5a8:	andeq	sl, r1, r8, asr #25
   1a5ac:	andeq	sl, r1, r8, asr #25
   1a5b0:	andeq	sl, r1, r8, asr #25
   1a5b4:	andeq	sl, r1, r8, asr #25
   1a5b8:	andeq	sl, r1, r8, asr #25
   1a5bc:	andeq	sl, r1, r8, asr #25
   1a5c0:	andeq	sl, r1, r8, asr #25
   1a5c4:	andeq	sl, r1, r8, asr #25
   1a5c8:	andeq	sl, r1, r8, asr #25
   1a5cc:	andeq	sl, r1, r8, asr #25
   1a5d0:	andeq	sl, r1, r8, asr #25
   1a5d4:	andeq	sl, r1, r8, asr #25
   1a5d8:	andeq	sl, r1, r8, asr #25
   1a5dc:	andeq	sl, r1, r8, asr #25
   1a5e0:	andeq	sl, r1, r8, asr #25
   1a5e4:			; <UNDEFINED> instruction: 0x0001abb0
   1a5e8:	ldrdeq	sl, [r1], -r0
   1a5ec:	andeq	sl, r1, r8, asr #25
   1a5f0:			; <UNDEFINED> instruction: 0x0001abb0
   1a5f4:	andeq	sl, r1, r8, asr #25
   1a5f8:			; <UNDEFINED> instruction: 0x0001abb0
   1a5fc:	andeq	sl, r1, r8, asr #25
   1a600:	andeq	sl, r1, r8, asr #25
   1a604:	andeq	sl, r1, r8, asr #25
   1a608:	andeq	sl, r1, r8, asr #25
   1a60c:	andeq	sl, r1, r8, asr #25
   1a610:	andeq	sl, r1, r8, asr #25
   1a614:	andeq	sl, r1, r8, asr #25
   1a618:	andeq	sl, r1, r8, asr #25
   1a61c:	andeq	sl, r1, r8, asr #25
   1a620:	andeq	sl, r1, r8, asr #25
   1a624:	andeq	sl, r1, r8, asr #25
   1a628:	andeq	sl, r1, r8, asr #25
   1a62c:	andeq	sl, r1, r8, asr #25
   1a630:	andeq	sl, r1, r8, asr #25
   1a634:	andeq	sl, r1, r8, asr #25
   1a638:	andeq	sl, r1, r8, asr #25
   1a63c:	andeq	sl, r1, r8, asr #25
   1a640:	andeq	sl, r1, r8, asr #25
   1a644:	andeq	sl, r1, r8, asr #25
   1a648:	andeq	sl, r1, r8, asr #25
   1a64c:	andeq	sl, r1, r8, asr #25
   1a650:	andeq	sl, r1, r8, asr #25
   1a654:	andeq	sl, r1, r8, asr #25
   1a658:	andeq	sl, r1, r8, asr #25
   1a65c:	andeq	sl, r1, r8, asr #25
   1a660:	andeq	sl, r1, r8, asr #25
   1a664:	andeq	sl, r1, r0, ror #22
   1a668:			; <UNDEFINED> instruction: 0x0001abb0
   1a66c:	andeq	sl, r1, r0, ror #22
   1a670:	muleq	r1, r4, fp
   1a674:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a678:	tst	r0, #1
   1a67c:	beq	1a864 <__assert_fail@plt+0x949c>
   1a680:	b	1a684 <__assert_fail@plt+0x92bc>
   1a684:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a688:	tst	r0, #1
   1a68c:	beq	1a694 <__assert_fail@plt+0x92cc>
   1a690:	b	1b6ec <__assert_fail@plt+0xa324>
   1a694:	movw	r0, #1
   1a698:	strb	r0, [fp, #-66]	; 0xffffffbe
   1a69c:	ldr	r0, [fp, #8]
   1a6a0:	cmp	r0, #2
   1a6a4:	bne	1a758 <__assert_fail@plt+0x9390>
   1a6a8:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1a6ac:	tst	r0, #1
   1a6b0:	bne	1a758 <__assert_fail@plt+0x9390>
   1a6b4:	b	1a6b8 <__assert_fail@plt+0x92f0>
   1a6b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a6bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a6c0:	cmp	r0, r1
   1a6c4:	bcs	1a6dc <__assert_fail@plt+0x9314>
   1a6c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a6cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a6d0:	add	r0, r0, r1
   1a6d4:	movw	r1, #39	; 0x27
   1a6d8:	strb	r1, [r0]
   1a6dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a6e0:	add	r0, r0, #1
   1a6e4:	str	r0, [fp, #-44]	; 0xffffffd4
   1a6e8:	b	1a6ec <__assert_fail@plt+0x9324>
   1a6ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a6f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a6f4:	cmp	r0, r1
   1a6f8:	bcs	1a710 <__assert_fail@plt+0x9348>
   1a6fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a700:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a704:	add	r0, r0, r1
   1a708:	movw	r1, #36	; 0x24
   1a70c:	strb	r1, [r0]
   1a710:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a714:	add	r0, r0, #1
   1a718:	str	r0, [fp, #-44]	; 0xffffffd4
   1a71c:	b	1a720 <__assert_fail@plt+0x9358>
   1a720:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a724:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a728:	cmp	r0, r1
   1a72c:	bcs	1a744 <__assert_fail@plt+0x937c>
   1a730:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a734:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a738:	add	r0, r0, r1
   1a73c:	movw	r1, #39	; 0x27
   1a740:	strb	r1, [r0]
   1a744:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a748:	add	r0, r0, #1
   1a74c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a750:	movw	r0, #1
   1a754:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a758:	b	1a75c <__assert_fail@plt+0x9394>
   1a75c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a760:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a764:	cmp	r0, r1
   1a768:	bcs	1a780 <__assert_fail@plt+0x93b8>
   1a76c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a770:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a774:	add	r0, r0, r1
   1a778:	movw	r1, #92	; 0x5c
   1a77c:	strb	r1, [r0]
   1a780:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a784:	add	r0, r0, #1
   1a788:	str	r0, [fp, #-44]	; 0xffffffd4
   1a78c:	b	1a790 <__assert_fail@plt+0x93c8>
   1a790:	ldr	r0, [fp, #8]
   1a794:	cmp	r0, #2
   1a798:	beq	1a858 <__assert_fail@plt+0x9490>
   1a79c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a7a0:	add	r0, r0, #1
   1a7a4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a7a8:	cmp	r0, r1
   1a7ac:	bcs	1a858 <__assert_fail@plt+0x9490>
   1a7b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a7b4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a7b8:	add	r1, r1, #1
   1a7bc:	add	r0, r0, r1
   1a7c0:	ldrb	r0, [r0]
   1a7c4:	movw	r1, #48	; 0x30
   1a7c8:	cmp	r1, r0
   1a7cc:	bgt	1a858 <__assert_fail@plt+0x9490>
   1a7d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a7d4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a7d8:	add	r1, r1, #1
   1a7dc:	add	r0, r0, r1
   1a7e0:	ldrb	r0, [r0]
   1a7e4:	cmp	r0, #57	; 0x39
   1a7e8:	bgt	1a858 <__assert_fail@plt+0x9490>
   1a7ec:	b	1a7f0 <__assert_fail@plt+0x9428>
   1a7f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a7f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a7f8:	cmp	r0, r1
   1a7fc:	bcs	1a814 <__assert_fail@plt+0x944c>
   1a800:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a804:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a808:	add	r0, r0, r1
   1a80c:	movw	r1, #48	; 0x30
   1a810:	strb	r1, [r0]
   1a814:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a818:	add	r0, r0, #1
   1a81c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a820:	b	1a824 <__assert_fail@plt+0x945c>
   1a824:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a828:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a82c:	cmp	r0, r1
   1a830:	bcs	1a848 <__assert_fail@plt+0x9480>
   1a834:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a838:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a83c:	add	r0, r0, r1
   1a840:	movw	r1, #48	; 0x30
   1a844:	strb	r1, [r0]
   1a848:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a84c:	add	r0, r0, #1
   1a850:	str	r0, [fp, #-44]	; 0xffffffd4
   1a854:	b	1a858 <__assert_fail@plt+0x9490>
   1a858:	movw	r0, #48	; 0x30
   1a85c:	strb	r0, [fp, #-63]	; 0xffffffc1
   1a860:	b	1a87c <__assert_fail@plt+0x94b4>
   1a864:	ldr	r0, [fp, #12]
   1a868:	and	r0, r0, #1
   1a86c:	cmp	r0, #0
   1a870:	beq	1a878 <__assert_fail@plt+0x94b0>
   1a874:	b	1b55c <__assert_fail@plt+0xa194>
   1a878:	b	1a87c <__assert_fail@plt+0x94b4>
   1a87c:	b	1b2f8 <__assert_fail@plt+0x9f30>
   1a880:	ldr	r0, [fp, #8]
   1a884:	cmp	r0, #2
   1a888:	str	r0, [sp, #40]	; 0x28
   1a88c:	beq	1a8a4 <__assert_fail@plt+0x94dc>
   1a890:	b	1a894 <__assert_fail@plt+0x94cc>
   1a894:	ldr	r0, [sp, #40]	; 0x28
   1a898:	cmp	r0, #5
   1a89c:	beq	1a8b8 <__assert_fail@plt+0x94f0>
   1a8a0:	b	1aa74 <__assert_fail@plt+0x96ac>
   1a8a4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a8a8:	tst	r0, #1
   1a8ac:	beq	1a8b4 <__assert_fail@plt+0x94ec>
   1a8b0:	b	1b6ec <__assert_fail@plt+0xa324>
   1a8b4:	b	1aa78 <__assert_fail@plt+0x96b0>
   1a8b8:	ldr	r0, [fp, #12]
   1a8bc:	and	r0, r0, #4
   1a8c0:	cmp	r0, #0
   1a8c4:	beq	1aa70 <__assert_fail@plt+0x96a8>
   1a8c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a8cc:	add	r0, r0, #2
   1a8d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a8d4:	cmp	r0, r1
   1a8d8:	bcs	1aa70 <__assert_fail@plt+0x96a8>
   1a8dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a8e0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a8e4:	add	r1, r1, #1
   1a8e8:	add	r0, r0, r1
   1a8ec:	ldrb	r0, [r0]
   1a8f0:	cmp	r0, #63	; 0x3f
   1a8f4:	bne	1aa70 <__assert_fail@plt+0x96a8>
   1a8f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a8fc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a900:	add	r0, r0, r1
   1a904:	ldrb	r0, [r0, #2]
   1a908:	mov	r1, r0
   1a90c:	cmp	r0, #33	; 0x21
   1a910:	str	r1, [sp, #36]	; 0x24
   1a914:	beq	1a964 <__assert_fail@plt+0x959c>
   1a918:	b	1a91c <__assert_fail@plt+0x9554>
   1a91c:	ldr	r0, [sp, #36]	; 0x24
   1a920:	sub	r1, r0, #39	; 0x27
   1a924:	cmp	r1, #3
   1a928:	bcc	1a964 <__assert_fail@plt+0x959c>
   1a92c:	b	1a930 <__assert_fail@plt+0x9568>
   1a930:	ldr	r0, [sp, #36]	; 0x24
   1a934:	cmp	r0, #45	; 0x2d
   1a938:	beq	1a964 <__assert_fail@plt+0x959c>
   1a93c:	b	1a940 <__assert_fail@plt+0x9578>
   1a940:	ldr	r0, [sp, #36]	; 0x24
   1a944:	cmp	r0, #47	; 0x2f
   1a948:	beq	1a964 <__assert_fail@plt+0x959c>
   1a94c:	b	1a950 <__assert_fail@plt+0x9588>
   1a950:	ldr	r0, [sp, #36]	; 0x24
   1a954:	sub	r1, r0, #60	; 0x3c
   1a958:	cmp	r1, #2
   1a95c:	bhi	1aa68 <__assert_fail@plt+0x96a0>
   1a960:	b	1a964 <__assert_fail@plt+0x959c>
   1a964:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a968:	tst	r0, #1
   1a96c:	beq	1a974 <__assert_fail@plt+0x95ac>
   1a970:	b	1b6ec <__assert_fail@plt+0xa324>
   1a974:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a978:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a97c:	add	r1, r1, #2
   1a980:	add	r0, r0, r1
   1a984:	ldrb	r0, [r0]
   1a988:	strb	r0, [fp, #-63]	; 0xffffffc1
   1a98c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a990:	add	r0, r0, #2
   1a994:	str	r0, [fp, #-40]	; 0xffffffd8
   1a998:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a99c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a9a0:	cmp	r0, r1
   1a9a4:	bcs	1a9bc <__assert_fail@plt+0x95f4>
   1a9a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a9ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a9b0:	add	r0, r0, r1
   1a9b4:	movw	r1, #63	; 0x3f
   1a9b8:	strb	r1, [r0]
   1a9bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a9c0:	add	r0, r0, #1
   1a9c4:	str	r0, [fp, #-44]	; 0xffffffd4
   1a9c8:	b	1a9cc <__assert_fail@plt+0x9604>
   1a9cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a9d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a9d4:	cmp	r0, r1
   1a9d8:	bcs	1a9f0 <__assert_fail@plt+0x9628>
   1a9dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a9e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a9e4:	add	r0, r0, r1
   1a9e8:	movw	r1, #34	; 0x22
   1a9ec:	strb	r1, [r0]
   1a9f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a9f4:	add	r0, r0, #1
   1a9f8:	str	r0, [fp, #-44]	; 0xffffffd4
   1a9fc:	b	1aa00 <__assert_fail@plt+0x9638>
   1aa00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aa04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1aa08:	cmp	r0, r1
   1aa0c:	bcs	1aa24 <__assert_fail@plt+0x965c>
   1aa10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa14:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1aa18:	add	r0, r0, r1
   1aa1c:	movw	r1, #34	; 0x22
   1aa20:	strb	r1, [r0]
   1aa24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aa28:	add	r0, r0, #1
   1aa2c:	str	r0, [fp, #-44]	; 0xffffffd4
   1aa30:	b	1aa34 <__assert_fail@plt+0x966c>
   1aa34:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aa38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1aa3c:	cmp	r0, r1
   1aa40:	bcs	1aa58 <__assert_fail@plt+0x9690>
   1aa44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa48:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1aa4c:	add	r0, r0, r1
   1aa50:	movw	r1, #63	; 0x3f
   1aa54:	strb	r1, [r0]
   1aa58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aa5c:	add	r0, r0, #1
   1aa60:	str	r0, [fp, #-44]	; 0xffffffd4
   1aa64:	b	1aa6c <__assert_fail@plt+0x96a4>
   1aa68:	b	1aa6c <__assert_fail@plt+0x96a4>
   1aa6c:	b	1aa70 <__assert_fail@plt+0x96a8>
   1aa70:	b	1aa78 <__assert_fail@plt+0x96b0>
   1aa74:	b	1aa78 <__assert_fail@plt+0x96b0>
   1aa78:	b	1b2f8 <__assert_fail@plt+0x9f30>
   1aa7c:	movw	r0, #97	; 0x61
   1aa80:	strb	r0, [fp, #-64]	; 0xffffffc0
   1aa84:	b	1ab44 <__assert_fail@plt+0x977c>
   1aa88:	movw	r0, #98	; 0x62
   1aa8c:	strb	r0, [fp, #-64]	; 0xffffffc0
   1aa90:	b	1ab44 <__assert_fail@plt+0x977c>
   1aa94:	movw	r0, #102	; 0x66
   1aa98:	strb	r0, [fp, #-64]	; 0xffffffc0
   1aa9c:	b	1ab44 <__assert_fail@plt+0x977c>
   1aaa0:	movw	r0, #110	; 0x6e
   1aaa4:	strb	r0, [fp, #-64]	; 0xffffffc0
   1aaa8:	b	1ab24 <__assert_fail@plt+0x975c>
   1aaac:	movw	r0, #114	; 0x72
   1aab0:	strb	r0, [fp, #-64]	; 0xffffffc0
   1aab4:	b	1ab24 <__assert_fail@plt+0x975c>
   1aab8:	movw	r0, #116	; 0x74
   1aabc:	strb	r0, [fp, #-64]	; 0xffffffc0
   1aac0:	b	1ab24 <__assert_fail@plt+0x975c>
   1aac4:	movw	r0, #118	; 0x76
   1aac8:	strb	r0, [fp, #-64]	; 0xffffffc0
   1aacc:	b	1ab44 <__assert_fail@plt+0x977c>
   1aad0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1aad4:	strb	r0, [fp, #-64]	; 0xffffffc0
   1aad8:	ldr	r0, [fp, #8]
   1aadc:	cmp	r0, #2
   1aae0:	bne	1aaf8 <__assert_fail@plt+0x9730>
   1aae4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1aae8:	tst	r0, #1
   1aaec:	beq	1aaf4 <__assert_fail@plt+0x972c>
   1aaf0:	b	1b6ec <__assert_fail@plt+0xa324>
   1aaf4:	b	1b480 <__assert_fail@plt+0xa0b8>
   1aaf8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1aafc:	tst	r0, #1
   1ab00:	beq	1ab20 <__assert_fail@plt+0x9758>
   1ab04:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1ab08:	tst	r0, #1
   1ab0c:	beq	1ab20 <__assert_fail@plt+0x9758>
   1ab10:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ab14:	cmp	r0, #0
   1ab18:	beq	1ab20 <__assert_fail@plt+0x9758>
   1ab1c:	b	1b480 <__assert_fail@plt+0xa0b8>
   1ab20:	b	1ab24 <__assert_fail@plt+0x975c>
   1ab24:	ldr	r0, [fp, #8]
   1ab28:	cmp	r0, #2
   1ab2c:	bne	1ab40 <__assert_fail@plt+0x9778>
   1ab30:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1ab34:	tst	r0, #1
   1ab38:	beq	1ab40 <__assert_fail@plt+0x9778>
   1ab3c:	b	1b6ec <__assert_fail@plt+0xa324>
   1ab40:	b	1ab44 <__assert_fail@plt+0x977c>
   1ab44:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1ab48:	tst	r0, #1
   1ab4c:	beq	1ab5c <__assert_fail@plt+0x9794>
   1ab50:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   1ab54:	strb	r0, [fp, #-63]	; 0xffffffc1
   1ab58:	b	1b36c <__assert_fail@plt+0x9fa4>
   1ab5c:	b	1b2f8 <__assert_fail@plt+0x9f30>
   1ab60:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ab64:	cmn	r0, #1
   1ab68:	bne	1ab80 <__assert_fail@plt+0x97b8>
   1ab6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ab70:	ldrb	r0, [r0, #1]
   1ab74:	cmp	r0, #0
   1ab78:	beq	1ab90 <__assert_fail@plt+0x97c8>
   1ab7c:	b	1ab8c <__assert_fail@plt+0x97c4>
   1ab80:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ab84:	cmp	r0, #1
   1ab88:	beq	1ab90 <__assert_fail@plt+0x97c8>
   1ab8c:	b	1b2f8 <__assert_fail@plt+0x9f30>
   1ab90:	b	1ab94 <__assert_fail@plt+0x97cc>
   1ab94:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ab98:	cmp	r0, #0
   1ab9c:	beq	1aba4 <__assert_fail@plt+0x97dc>
   1aba0:	b	1b2f8 <__assert_fail@plt+0x9f30>
   1aba4:	b	1aba8 <__assert_fail@plt+0x97e0>
   1aba8:	movw	r0, #1
   1abac:	strb	r0, [fp, #-67]	; 0xffffffbd
   1abb0:	ldr	r0, [fp, #8]
   1abb4:	cmp	r0, #2
   1abb8:	bne	1abcc <__assert_fail@plt+0x9804>
   1abbc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1abc0:	tst	r0, #1
   1abc4:	beq	1abcc <__assert_fail@plt+0x9804>
   1abc8:	b	1b6ec <__assert_fail@plt+0xa324>
   1abcc:	b	1b2f8 <__assert_fail@plt+0x9f30>
   1abd0:	movw	r0, #1
   1abd4:	strb	r0, [fp, #-61]	; 0xffffffc3
   1abd8:	strb	r0, [fp, #-67]	; 0xffffffbd
   1abdc:	ldr	r0, [fp, #8]
   1abe0:	cmp	r0, #2
   1abe4:	bne	1acc4 <__assert_fail@plt+0x98fc>
   1abe8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1abec:	tst	r0, #1
   1abf0:	beq	1abf8 <__assert_fail@plt+0x9830>
   1abf4:	b	1b6ec <__assert_fail@plt+0xa324>
   1abf8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1abfc:	cmp	r0, #0
   1ac00:	beq	1ac20 <__assert_fail@plt+0x9858>
   1ac04:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ac08:	cmp	r0, #0
   1ac0c:	bne	1ac20 <__assert_fail@plt+0x9858>
   1ac10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ac14:	str	r0, [fp, #-48]	; 0xffffffd0
   1ac18:	movw	r0, #0
   1ac1c:	str	r0, [fp, #-28]	; 0xffffffe4
   1ac20:	b	1ac24 <__assert_fail@plt+0x985c>
   1ac24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ac28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ac2c:	cmp	r0, r1
   1ac30:	bcs	1ac48 <__assert_fail@plt+0x9880>
   1ac34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac38:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ac3c:	add	r0, r0, r1
   1ac40:	movw	r1, #39	; 0x27
   1ac44:	strb	r1, [r0]
   1ac48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ac4c:	add	r0, r0, #1
   1ac50:	str	r0, [fp, #-44]	; 0xffffffd4
   1ac54:	b	1ac58 <__assert_fail@plt+0x9890>
   1ac58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ac5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ac60:	cmp	r0, r1
   1ac64:	bcs	1ac7c <__assert_fail@plt+0x98b4>
   1ac68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac6c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ac70:	add	r0, r0, r1
   1ac74:	movw	r1, #92	; 0x5c
   1ac78:	strb	r1, [r0]
   1ac7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ac80:	add	r0, r0, #1
   1ac84:	str	r0, [fp, #-44]	; 0xffffffd4
   1ac88:	b	1ac8c <__assert_fail@plt+0x98c4>
   1ac8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ac90:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ac94:	cmp	r0, r1
   1ac98:	bcs	1acb0 <__assert_fail@plt+0x98e8>
   1ac9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aca0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1aca4:	add	r0, r0, r1
   1aca8:	movw	r1, #39	; 0x27
   1acac:	strb	r1, [r0]
   1acb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1acb4:	add	r0, r0, #1
   1acb8:	str	r0, [fp, #-44]	; 0xffffffd4
   1acbc:	movw	r0, #0
   1acc0:	strb	r0, [fp, #-60]	; 0xffffffc4
   1acc4:	b	1b2f8 <__assert_fail@plt+0x9f30>
   1acc8:	movw	r0, #1
   1accc:	strb	r0, [fp, #-67]	; 0xffffffbd
   1acd0:	b	1b2f8 <__assert_fail@plt+0x9f30>
   1acd4:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   1acd8:	tst	r0, #1
   1acdc:	beq	1ad20 <__assert_fail@plt+0x9958>
   1ace0:	mov	r0, #1
   1ace4:	str	r0, [fp, #-72]	; 0xffffffb8
   1ace8:	bl	1123c <__ctype_b_loc@plt>
   1acec:	ldr	r0, [r0]
   1acf0:	ldrb	lr, [fp, #-63]	; 0xffffffc1
   1acf4:	mov	r1, lr
   1acf8:	add	r0, r0, lr, lsl #1
   1acfc:	ldrh	r0, [r0]
   1ad00:	and	r0, r0, #16384	; 0x4000
   1ad04:	cmp	r0, #0
   1ad08:	movw	r0, #0
   1ad0c:	movne	r0, #1
   1ad10:	and	r0, r0, #1
   1ad14:	strb	r0, [fp, #-73]	; 0xffffffb7
   1ad18:	str	r1, [sp, #32]
   1ad1c:	b	1afac <__assert_fail@plt+0x9be4>
   1ad20:	sub	r0, fp, #84	; 0x54
   1ad24:	movw	r1, #0
   1ad28:	and	r1, r1, #255	; 0xff
   1ad2c:	movw	r2, #8
   1ad30:	bl	112a8 <memset@plt>
   1ad34:	movw	r0, #0
   1ad38:	str	r0, [fp, #-72]	; 0xffffffb8
   1ad3c:	movw	r0, #1
   1ad40:	strb	r0, [fp, #-73]	; 0xffffffb7
   1ad44:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ad48:	cmn	r0, #1
   1ad4c:	bne	1ad5c <__assert_fail@plt+0x9994>
   1ad50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ad54:	bl	11260 <strlen@plt>
   1ad58:	str	r0, [fp, #-36]	; 0xffffffdc
   1ad5c:	b	1ad60 <__assert_fail@plt+0x9998>
   1ad60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ad64:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ad68:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1ad6c:	add	r1, r1, r2
   1ad70:	add	r1, r0, r1
   1ad74:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ad78:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ad7c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1ad80:	add	r2, r2, r3
   1ad84:	sub	r2, r0, r2
   1ad88:	sub	r0, fp, #88	; 0x58
   1ad8c:	sub	r3, fp, #84	; 0x54
   1ad90:	bl	20e00 <__assert_fail@plt+0xfa38>
   1ad94:	str	r0, [sp, #92]	; 0x5c
   1ad98:	ldr	r0, [sp, #92]	; 0x5c
   1ad9c:	cmp	r0, #0
   1ada0:	bne	1ada8 <__assert_fail@plt+0x99e0>
   1ada4:	b	1afa8 <__assert_fail@plt+0x9be0>
   1ada8:	ldr	r0, [sp, #92]	; 0x5c
   1adac:	cmn	r0, #1
   1adb0:	bne	1adc0 <__assert_fail@plt+0x99f8>
   1adb4:	movw	r0, #0
   1adb8:	strb	r0, [fp, #-73]	; 0xffffffb7
   1adbc:	b	1afa8 <__assert_fail@plt+0x9be0>
   1adc0:	ldr	r0, [sp, #92]	; 0x5c
   1adc4:	cmn	r0, #2
   1adc8:	bne	1ae3c <__assert_fail@plt+0x9a74>
   1adcc:	movw	r0, #0
   1add0:	strb	r0, [fp, #-73]	; 0xffffffb7
   1add4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1add8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1addc:	add	r0, r0, r1
   1ade0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ade4:	cmp	r0, r1
   1ade8:	movw	r0, #0
   1adec:	str	r0, [sp, #28]
   1adf0:	bcs	1ae1c <__assert_fail@plt+0x9a54>
   1adf4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1adf8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1adfc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1ae00:	add	r1, r1, r2
   1ae04:	add	r0, r0, r1
   1ae08:	ldrb	r0, [r0]
   1ae0c:	cmp	r0, #0
   1ae10:	movw	r0, #0
   1ae14:	movne	r0, #1
   1ae18:	str	r0, [sp, #28]
   1ae1c:	ldr	r0, [sp, #28]
   1ae20:	tst	r0, #1
   1ae24:	beq	1ae38 <__assert_fail@plt+0x9a70>
   1ae28:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1ae2c:	add	r0, r0, #1
   1ae30:	str	r0, [fp, #-72]	; 0xffffffb8
   1ae34:	b	1add4 <__assert_fail@plt+0x9a0c>
   1ae38:	b	1afa8 <__assert_fail@plt+0x9be0>
   1ae3c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1ae40:	tst	r0, #1
   1ae44:	beq	1af50 <__assert_fail@plt+0x9b88>
   1ae48:	ldr	r0, [fp, #8]
   1ae4c:	cmp	r0, #2
   1ae50:	bne	1af50 <__assert_fail@plt+0x9b88>
   1ae54:	movw	r0, #1
   1ae58:	str	r0, [sp, #88]	; 0x58
   1ae5c:	ldr	r0, [sp, #88]	; 0x58
   1ae60:	ldr	r1, [sp, #92]	; 0x5c
   1ae64:	cmp	r0, r1
   1ae68:	bcs	1af4c <__assert_fail@plt+0x9b84>
   1ae6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ae70:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ae74:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1ae78:	add	r1, r1, r2
   1ae7c:	ldr	r2, [sp, #88]	; 0x58
   1ae80:	add	r1, r1, r2
   1ae84:	ldrb	r0, [r0, r1]
   1ae88:	sub	r0, r0, #91	; 0x5b
   1ae8c:	cmp	r0, #33	; 0x21
   1ae90:	str	r0, [sp, #24]
   1ae94:	bhi	1af34 <__assert_fail@plt+0x9b6c>
   1ae98:	add	r0, pc, #8
   1ae9c:	ldr	r1, [sp, #24]
   1aea0:	ldr	r0, [r0, r1, lsl #2]
   1aea4:	mov	pc, r0
   1aea8:	andeq	sl, r1, r0, lsr pc
   1aeac:	andeq	sl, r1, r0, lsr pc
   1aeb0:	andeq	sl, r1, r4, lsr pc
   1aeb4:	andeq	sl, r1, r0, lsr pc
   1aeb8:	andeq	sl, r1, r4, lsr pc
   1aebc:	andeq	sl, r1, r0, lsr pc
   1aec0:	andeq	sl, r1, r4, lsr pc
   1aec4:	andeq	sl, r1, r4, lsr pc
   1aec8:	andeq	sl, r1, r4, lsr pc
   1aecc:	andeq	sl, r1, r4, lsr pc
   1aed0:	andeq	sl, r1, r4, lsr pc
   1aed4:	andeq	sl, r1, r4, lsr pc
   1aed8:	andeq	sl, r1, r4, lsr pc
   1aedc:	andeq	sl, r1, r4, lsr pc
   1aee0:	andeq	sl, r1, r4, lsr pc
   1aee4:	andeq	sl, r1, r4, lsr pc
   1aee8:	andeq	sl, r1, r4, lsr pc
   1aeec:	andeq	sl, r1, r4, lsr pc
   1aef0:	andeq	sl, r1, r4, lsr pc
   1aef4:	andeq	sl, r1, r4, lsr pc
   1aef8:	andeq	sl, r1, r4, lsr pc
   1aefc:	andeq	sl, r1, r4, lsr pc
   1af00:	andeq	sl, r1, r4, lsr pc
   1af04:	andeq	sl, r1, r4, lsr pc
   1af08:	andeq	sl, r1, r4, lsr pc
   1af0c:	andeq	sl, r1, r4, lsr pc
   1af10:	andeq	sl, r1, r4, lsr pc
   1af14:	andeq	sl, r1, r4, lsr pc
   1af18:	andeq	sl, r1, r4, lsr pc
   1af1c:	andeq	sl, r1, r4, lsr pc
   1af20:	andeq	sl, r1, r4, lsr pc
   1af24:	andeq	sl, r1, r4, lsr pc
   1af28:	andeq	sl, r1, r4, lsr pc
   1af2c:	andeq	sl, r1, r0, lsr pc
   1af30:	b	1b6ec <__assert_fail@plt+0xa324>
   1af34:	b	1af38 <__assert_fail@plt+0x9b70>
   1af38:	b	1af3c <__assert_fail@plt+0x9b74>
   1af3c:	ldr	r0, [sp, #88]	; 0x58
   1af40:	add	r0, r0, #1
   1af44:	str	r0, [sp, #88]	; 0x58
   1af48:	b	1ae5c <__assert_fail@plt+0x9a94>
   1af4c:	b	1af50 <__assert_fail@plt+0x9b88>
   1af50:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1af54:	bl	11194 <iswprint@plt>
   1af58:	cmp	r0, #0
   1af5c:	bne	1af68 <__assert_fail@plt+0x9ba0>
   1af60:	movw	r0, #0
   1af64:	strb	r0, [fp, #-73]	; 0xffffffb7
   1af68:	ldr	r0, [sp, #92]	; 0x5c
   1af6c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1af70:	add	r0, r1, r0
   1af74:	str	r0, [fp, #-72]	; 0xffffffb8
   1af78:	b	1af7c <__assert_fail@plt+0x9bb4>
   1af7c:	b	1af80 <__assert_fail@plt+0x9bb8>
   1af80:	b	1af84 <__assert_fail@plt+0x9bbc>
   1af84:	sub	r0, fp, #84	; 0x54
   1af88:	bl	11158 <mbsinit@plt>
   1af8c:	cmp	r0, #0
   1af90:	movw	r0, #0
   1af94:	movne	r0, #1
   1af98:	mvn	lr, #0
   1af9c:	eor	r0, r0, lr
   1afa0:	tst	r0, #1
   1afa4:	bne	1ad60 <__assert_fail@plt+0x9998>
   1afa8:	b	1afac <__assert_fail@plt+0x9be4>
   1afac:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1afb0:	and	r0, r0, #1
   1afb4:	strb	r0, [fp, #-67]	; 0xffffffbd
   1afb8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1afbc:	movw	r1, #1
   1afc0:	cmp	r1, r0
   1afc4:	bcc	1afe0 <__assert_fail@plt+0x9c18>
   1afc8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1afcc:	tst	r0, #1
   1afd0:	beq	1b2f4 <__assert_fail@plt+0x9f2c>
   1afd4:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1afd8:	tst	r0, #1
   1afdc:	bne	1b2f4 <__assert_fail@plt+0x9f2c>
   1afe0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1afe4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1afe8:	add	r0, r0, r1
   1afec:	str	r0, [sp, #84]	; 0x54
   1aff0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1aff4:	tst	r0, #1
   1aff8:	beq	1b1a8 <__assert_fail@plt+0x9de0>
   1affc:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1b000:	tst	r0, #1
   1b004:	bne	1b1a8 <__assert_fail@plt+0x9de0>
   1b008:	b	1b00c <__assert_fail@plt+0x9c44>
   1b00c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1b010:	tst	r0, #1
   1b014:	beq	1b01c <__assert_fail@plt+0x9c54>
   1b018:	b	1b6ec <__assert_fail@plt+0xa324>
   1b01c:	movw	r0, #1
   1b020:	strb	r0, [fp, #-66]	; 0xffffffbe
   1b024:	ldr	r0, [fp, #8]
   1b028:	cmp	r0, #2
   1b02c:	bne	1b0e0 <__assert_fail@plt+0x9d18>
   1b030:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1b034:	tst	r0, #1
   1b038:	bne	1b0e0 <__assert_fail@plt+0x9d18>
   1b03c:	b	1b040 <__assert_fail@plt+0x9c78>
   1b040:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b044:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b048:	cmp	r0, r1
   1b04c:	bcs	1b064 <__assert_fail@plt+0x9c9c>
   1b050:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b054:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b058:	add	r0, r0, r1
   1b05c:	movw	r1, #39	; 0x27
   1b060:	strb	r1, [r0]
   1b064:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b068:	add	r0, r0, #1
   1b06c:	str	r0, [fp, #-44]	; 0xffffffd4
   1b070:	b	1b074 <__assert_fail@plt+0x9cac>
   1b074:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b078:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b07c:	cmp	r0, r1
   1b080:	bcs	1b098 <__assert_fail@plt+0x9cd0>
   1b084:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b088:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b08c:	add	r0, r0, r1
   1b090:	movw	r1, #36	; 0x24
   1b094:	strb	r1, [r0]
   1b098:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b09c:	add	r0, r0, #1
   1b0a0:	str	r0, [fp, #-44]	; 0xffffffd4
   1b0a4:	b	1b0a8 <__assert_fail@plt+0x9ce0>
   1b0a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b0ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b0b0:	cmp	r0, r1
   1b0b4:	bcs	1b0cc <__assert_fail@plt+0x9d04>
   1b0b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b0bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b0c0:	add	r0, r0, r1
   1b0c4:	movw	r1, #39	; 0x27
   1b0c8:	strb	r1, [r0]
   1b0cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b0d0:	add	r0, r0, #1
   1b0d4:	str	r0, [fp, #-44]	; 0xffffffd4
   1b0d8:	movw	r0, #1
   1b0dc:	strb	r0, [fp, #-60]	; 0xffffffc4
   1b0e0:	b	1b0e4 <__assert_fail@plt+0x9d1c>
   1b0e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b0e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b0ec:	cmp	r0, r1
   1b0f0:	bcs	1b108 <__assert_fail@plt+0x9d40>
   1b0f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b0f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b0fc:	add	r0, r0, r1
   1b100:	movw	r1, #92	; 0x5c
   1b104:	strb	r1, [r0]
   1b108:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b10c:	add	r0, r0, #1
   1b110:	str	r0, [fp, #-44]	; 0xffffffd4
   1b114:	b	1b118 <__assert_fail@plt+0x9d50>
   1b118:	b	1b11c <__assert_fail@plt+0x9d54>
   1b11c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b120:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b124:	cmp	r0, r1
   1b128:	bcs	1b148 <__assert_fail@plt+0x9d80>
   1b12c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1b130:	asr	r0, r0, #6
   1b134:	add	r0, r0, #48	; 0x30
   1b138:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b13c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1b140:	add	r1, r1, r2
   1b144:	strb	r0, [r1]
   1b148:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b14c:	add	r0, r0, #1
   1b150:	str	r0, [fp, #-44]	; 0xffffffd4
   1b154:	b	1b158 <__assert_fail@plt+0x9d90>
   1b158:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b15c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b160:	cmp	r0, r1
   1b164:	bcs	1b188 <__assert_fail@plt+0x9dc0>
   1b168:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1b16c:	asr	r0, r0, #3
   1b170:	and	r0, r0, #7
   1b174:	add	r0, r0, #48	; 0x30
   1b178:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b17c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1b180:	add	r1, r1, r2
   1b184:	strb	r0, [r1]
   1b188:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b18c:	add	r0, r0, #1
   1b190:	str	r0, [fp, #-44]	; 0xffffffd4
   1b194:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1b198:	and	r0, r0, #7
   1b19c:	add	r0, r0, #48	; 0x30
   1b1a0:	strb	r0, [fp, #-63]	; 0xffffffc1
   1b1a4:	b	1b1f4 <__assert_fail@plt+0x9e2c>
   1b1a8:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   1b1ac:	tst	r0, #1
   1b1b0:	beq	1b1f0 <__assert_fail@plt+0x9e28>
   1b1b4:	b	1b1b8 <__assert_fail@plt+0x9df0>
   1b1b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b1bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b1c0:	cmp	r0, r1
   1b1c4:	bcs	1b1dc <__assert_fail@plt+0x9e14>
   1b1c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b1cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b1d0:	add	r0, r0, r1
   1b1d4:	movw	r1, #92	; 0x5c
   1b1d8:	strb	r1, [r0]
   1b1dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b1e0:	add	r0, r0, #1
   1b1e4:	str	r0, [fp, #-44]	; 0xffffffd4
   1b1e8:	movw	r0, #0
   1b1ec:	strb	r0, [fp, #-65]	; 0xffffffbf
   1b1f0:	b	1b1f4 <__assert_fail@plt+0x9e2c>
   1b1f4:	ldr	r0, [sp, #84]	; 0x54
   1b1f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b1fc:	add	r1, r1, #1
   1b200:	cmp	r0, r1
   1b204:	bhi	1b20c <__assert_fail@plt+0x9e44>
   1b208:	b	1b2f0 <__assert_fail@plt+0x9f28>
   1b20c:	b	1b210 <__assert_fail@plt+0x9e48>
   1b210:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1b214:	tst	r0, #1
   1b218:	beq	1b298 <__assert_fail@plt+0x9ed0>
   1b21c:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   1b220:	tst	r0, #1
   1b224:	bne	1b298 <__assert_fail@plt+0x9ed0>
   1b228:	b	1b22c <__assert_fail@plt+0x9e64>
   1b22c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b230:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b234:	cmp	r0, r1
   1b238:	bcs	1b250 <__assert_fail@plt+0x9e88>
   1b23c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b240:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b244:	add	r0, r0, r1
   1b248:	movw	r1, #39	; 0x27
   1b24c:	strb	r1, [r0]
   1b250:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b254:	add	r0, r0, #1
   1b258:	str	r0, [fp, #-44]	; 0xffffffd4
   1b25c:	b	1b260 <__assert_fail@plt+0x9e98>
   1b260:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b264:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b268:	cmp	r0, r1
   1b26c:	bcs	1b284 <__assert_fail@plt+0x9ebc>
   1b270:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b274:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b278:	add	r0, r0, r1
   1b27c:	movw	r1, #39	; 0x27
   1b280:	strb	r1, [r0]
   1b284:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b288:	add	r0, r0, #1
   1b28c:	str	r0, [fp, #-44]	; 0xffffffd4
   1b290:	movw	r0, #0
   1b294:	strb	r0, [fp, #-60]	; 0xffffffc4
   1b298:	b	1b29c <__assert_fail@plt+0x9ed4>
   1b29c:	b	1b2a0 <__assert_fail@plt+0x9ed8>
   1b2a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b2a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b2a8:	cmp	r0, r1
   1b2ac:	bcs	1b2c4 <__assert_fail@plt+0x9efc>
   1b2b0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1b2b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b2b8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1b2bc:	add	r1, r1, r2
   1b2c0:	strb	r0, [r1]
   1b2c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b2c8:	add	r0, r0, #1
   1b2cc:	str	r0, [fp, #-44]	; 0xffffffd4
   1b2d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b2d4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b2d8:	add	r1, r1, #1
   1b2dc:	str	r1, [fp, #-40]	; 0xffffffd8
   1b2e0:	add	r0, r0, r1
   1b2e4:	ldrb	r0, [r0]
   1b2e8:	strb	r0, [fp, #-63]	; 0xffffffc1
   1b2ec:	b	1aff0 <__assert_fail@plt+0x9c28>
   1b2f0:	b	1b480 <__assert_fail@plt+0xa0b8>
   1b2f4:	b	1b2f8 <__assert_fail@plt+0x9f30>
   1b2f8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1b2fc:	tst	r0, #1
   1b300:	beq	1b310 <__assert_fail@plt+0x9f48>
   1b304:	ldr	r0, [fp, #8]
   1b308:	cmp	r0, #2
   1b30c:	bne	1b31c <__assert_fail@plt+0x9f54>
   1b310:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1b314:	tst	r0, #1
   1b318:	beq	1b358 <__assert_fail@plt+0x9f90>
   1b31c:	ldr	r0, [fp, #16]
   1b320:	movw	r1, #0
   1b324:	cmp	r0, r1
   1b328:	beq	1b358 <__assert_fail@plt+0x9f90>
   1b32c:	ldr	r0, [fp, #16]
   1b330:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   1b334:	lsr	r1, r1, #5
   1b338:	add	r0, r0, r1, lsl #2
   1b33c:	ldr	r0, [r0]
   1b340:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   1b344:	and	r1, r1, #31
   1b348:	lsr	r0, r0, r1
   1b34c:	and	r0, r0, #1
   1b350:	cmp	r0, #0
   1b354:	bne	1b368 <__assert_fail@plt+0x9fa0>
   1b358:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   1b35c:	tst	r0, #1
   1b360:	bne	1b368 <__assert_fail@plt+0x9fa0>
   1b364:	b	1b480 <__assert_fail@plt+0xa0b8>
   1b368:	b	1b36c <__assert_fail@plt+0x9fa4>
   1b36c:	b	1b370 <__assert_fail@plt+0x9fa8>
   1b370:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1b374:	tst	r0, #1
   1b378:	beq	1b380 <__assert_fail@plt+0x9fb8>
   1b37c:	b	1b6ec <__assert_fail@plt+0xa324>
   1b380:	movw	r0, #1
   1b384:	strb	r0, [fp, #-66]	; 0xffffffbe
   1b388:	ldr	r0, [fp, #8]
   1b38c:	cmp	r0, #2
   1b390:	bne	1b444 <__assert_fail@plt+0xa07c>
   1b394:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1b398:	tst	r0, #1
   1b39c:	bne	1b444 <__assert_fail@plt+0xa07c>
   1b3a0:	b	1b3a4 <__assert_fail@plt+0x9fdc>
   1b3a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b3a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b3ac:	cmp	r0, r1
   1b3b0:	bcs	1b3c8 <__assert_fail@plt+0xa000>
   1b3b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b3b8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b3bc:	add	r0, r0, r1
   1b3c0:	movw	r1, #39	; 0x27
   1b3c4:	strb	r1, [r0]
   1b3c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b3cc:	add	r0, r0, #1
   1b3d0:	str	r0, [fp, #-44]	; 0xffffffd4
   1b3d4:	b	1b3d8 <__assert_fail@plt+0xa010>
   1b3d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b3dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b3e0:	cmp	r0, r1
   1b3e4:	bcs	1b3fc <__assert_fail@plt+0xa034>
   1b3e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b3ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b3f0:	add	r0, r0, r1
   1b3f4:	movw	r1, #36	; 0x24
   1b3f8:	strb	r1, [r0]
   1b3fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b400:	add	r0, r0, #1
   1b404:	str	r0, [fp, #-44]	; 0xffffffd4
   1b408:	b	1b40c <__assert_fail@plt+0xa044>
   1b40c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b410:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b414:	cmp	r0, r1
   1b418:	bcs	1b430 <__assert_fail@plt+0xa068>
   1b41c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b420:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b424:	add	r0, r0, r1
   1b428:	movw	r1, #39	; 0x27
   1b42c:	strb	r1, [r0]
   1b430:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b434:	add	r0, r0, #1
   1b438:	str	r0, [fp, #-44]	; 0xffffffd4
   1b43c:	movw	r0, #1
   1b440:	strb	r0, [fp, #-60]	; 0xffffffc4
   1b444:	b	1b448 <__assert_fail@plt+0xa080>
   1b448:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b44c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b450:	cmp	r0, r1
   1b454:	bcs	1b46c <__assert_fail@plt+0xa0a4>
   1b458:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b45c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b460:	add	r0, r0, r1
   1b464:	movw	r1, #92	; 0x5c
   1b468:	strb	r1, [r0]
   1b46c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b470:	add	r0, r0, #1
   1b474:	str	r0, [fp, #-44]	; 0xffffffd4
   1b478:	b	1b47c <__assert_fail@plt+0xa0b4>
   1b47c:	b	1b480 <__assert_fail@plt+0xa0b8>
   1b480:	b	1b484 <__assert_fail@plt+0xa0bc>
   1b484:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1b488:	tst	r0, #1
   1b48c:	beq	1b50c <__assert_fail@plt+0xa144>
   1b490:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   1b494:	tst	r0, #1
   1b498:	bne	1b50c <__assert_fail@plt+0xa144>
   1b49c:	b	1b4a0 <__assert_fail@plt+0xa0d8>
   1b4a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b4a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b4a8:	cmp	r0, r1
   1b4ac:	bcs	1b4c4 <__assert_fail@plt+0xa0fc>
   1b4b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b4b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b4b8:	add	r0, r0, r1
   1b4bc:	movw	r1, #39	; 0x27
   1b4c0:	strb	r1, [r0]
   1b4c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b4c8:	add	r0, r0, #1
   1b4cc:	str	r0, [fp, #-44]	; 0xffffffd4
   1b4d0:	b	1b4d4 <__assert_fail@plt+0xa10c>
   1b4d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b4d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b4dc:	cmp	r0, r1
   1b4e0:	bcs	1b4f8 <__assert_fail@plt+0xa130>
   1b4e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b4e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b4ec:	add	r0, r0, r1
   1b4f0:	movw	r1, #39	; 0x27
   1b4f4:	strb	r1, [r0]
   1b4f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b4fc:	add	r0, r0, #1
   1b500:	str	r0, [fp, #-44]	; 0xffffffd4
   1b504:	movw	r0, #0
   1b508:	strb	r0, [fp, #-60]	; 0xffffffc4
   1b50c:	b	1b510 <__assert_fail@plt+0xa148>
   1b510:	b	1b514 <__assert_fail@plt+0xa14c>
   1b514:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b518:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b51c:	cmp	r0, r1
   1b520:	bcs	1b538 <__assert_fail@plt+0xa170>
   1b524:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1b528:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b52c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1b530:	add	r1, r1, r2
   1b534:	strb	r0, [r1]
   1b538:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b53c:	add	r0, r0, #1
   1b540:	str	r0, [fp, #-44]	; 0xffffffd4
   1b544:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   1b548:	tst	r0, #1
   1b54c:	bne	1b558 <__assert_fail@plt+0xa190>
   1b550:	movw	r0, #0
   1b554:	strb	r0, [fp, #-62]	; 0xffffffc2
   1b558:	b	1b55c <__assert_fail@plt+0xa194>
   1b55c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b560:	add	r0, r0, #1
   1b564:	str	r0, [fp, #-40]	; 0xffffffd8
   1b568:	b	1a310 <__assert_fail@plt+0x8f48>
   1b56c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b570:	cmp	r0, #0
   1b574:	bne	1b594 <__assert_fail@plt+0xa1cc>
   1b578:	ldr	r0, [fp, #8]
   1b57c:	cmp	r0, #2
   1b580:	bne	1b594 <__assert_fail@plt+0xa1cc>
   1b584:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1b588:	tst	r0, #1
   1b58c:	beq	1b594 <__assert_fail@plt+0xa1cc>
   1b590:	b	1b6ec <__assert_fail@plt+0xa324>
   1b594:	ldr	r0, [fp, #8]
   1b598:	cmp	r0, #2
   1b59c:	bne	1b63c <__assert_fail@plt+0xa274>
   1b5a0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1b5a4:	tst	r0, #1
   1b5a8:	bne	1b63c <__assert_fail@plt+0xa274>
   1b5ac:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   1b5b0:	tst	r0, #1
   1b5b4:	beq	1b63c <__assert_fail@plt+0xa274>
   1b5b8:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   1b5bc:	tst	r0, #1
   1b5c0:	beq	1b608 <__assert_fail@plt+0xa240>
   1b5c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b5c8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1b5cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1b5d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b5d4:	ldr	ip, [fp, #12]
   1b5d8:	ldr	lr, [fp, #16]
   1b5dc:	ldr	r4, [fp, #20]
   1b5e0:	ldr	r5, [fp, #24]
   1b5e4:	movw	r6, #5
   1b5e8:	str	r6, [sp]
   1b5ec:	str	ip, [sp, #4]
   1b5f0:	str	lr, [sp, #8]
   1b5f4:	str	r4, [sp, #12]
   1b5f8:	str	r5, [sp, #16]
   1b5fc:	bl	1a028 <__assert_fail@plt+0x8c60>
   1b600:	str	r0, [fp, #-20]	; 0xffffffec
   1b604:	b	1b754 <__assert_fail@plt+0xa38c>
   1b608:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b60c:	cmp	r0, #0
   1b610:	bne	1b634 <__assert_fail@plt+0xa26c>
   1b614:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1b618:	cmp	r0, #0
   1b61c:	beq	1b634 <__assert_fail@plt+0xa26c>
   1b620:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1b624:	str	r0, [fp, #-28]	; 0xffffffe4
   1b628:	movw	r0, #0
   1b62c:	str	r0, [fp, #-44]	; 0xffffffd4
   1b630:	b	1a0d0 <__assert_fail@plt+0x8d08>
   1b634:	b	1b638 <__assert_fail@plt+0xa270>
   1b638:	b	1b63c <__assert_fail@plt+0xa274>
   1b63c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1b640:	movw	r1, #0
   1b644:	cmp	r0, r1
   1b648:	beq	1b6bc <__assert_fail@plt+0xa2f4>
   1b64c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1b650:	tst	r0, #1
   1b654:	bne	1b6bc <__assert_fail@plt+0xa2f4>
   1b658:	b	1b65c <__assert_fail@plt+0xa294>
   1b65c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1b660:	ldrsb	r0, [r0]
   1b664:	cmp	r0, #0
   1b668:	beq	1b6b8 <__assert_fail@plt+0xa2f0>
   1b66c:	b	1b670 <__assert_fail@plt+0xa2a8>
   1b670:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b674:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b678:	cmp	r0, r1
   1b67c:	bcs	1b698 <__assert_fail@plt+0xa2d0>
   1b680:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1b684:	ldrb	r0, [r0]
   1b688:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b68c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1b690:	add	r1, r1, r2
   1b694:	strb	r0, [r1]
   1b698:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b69c:	add	r0, r0, #1
   1b6a0:	str	r0, [fp, #-44]	; 0xffffffd4
   1b6a4:	b	1b6a8 <__assert_fail@plt+0xa2e0>
   1b6a8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1b6ac:	add	r0, r0, #1
   1b6b0:	str	r0, [fp, #-52]	; 0xffffffcc
   1b6b4:	b	1b65c <__assert_fail@plt+0xa294>
   1b6b8:	b	1b6bc <__assert_fail@plt+0xa2f4>
   1b6bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b6c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b6c4:	cmp	r0, r1
   1b6c8:	bcs	1b6e0 <__assert_fail@plt+0xa318>
   1b6cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b6d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b6d4:	add	r0, r0, r1
   1b6d8:	movw	r1, #0
   1b6dc:	strb	r1, [r0]
   1b6e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b6e4:	str	r0, [fp, #-20]	; 0xffffffec
   1b6e8:	b	1b754 <__assert_fail@plt+0xa38c>
   1b6ec:	ldr	r0, [fp, #8]
   1b6f0:	cmp	r0, #2
   1b6f4:	bne	1b70c <__assert_fail@plt+0xa344>
   1b6f8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1b6fc:	tst	r0, #1
   1b700:	beq	1b70c <__assert_fail@plt+0xa344>
   1b704:	movw	r0, #4
   1b708:	str	r0, [fp, #8]
   1b70c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b710:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b714:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1b718:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b71c:	ldr	ip, [fp, #8]
   1b720:	ldr	lr, [fp, #12]
   1b724:	mvn	r4, #2
   1b728:	and	lr, lr, r4
   1b72c:	ldr	r4, [fp, #20]
   1b730:	ldr	r5, [fp, #24]
   1b734:	str	ip, [sp]
   1b738:	str	lr, [sp, #4]
   1b73c:	movw	ip, #0
   1b740:	str	ip, [sp, #8]
   1b744:	str	r4, [sp, #12]
   1b748:	str	r5, [sp, #16]
   1b74c:	bl	1a028 <__assert_fail@plt+0x8c60>
   1b750:	str	r0, [fp, #-20]	; 0xffffffec
   1b754:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b758:	sub	sp, fp, #16
   1b75c:	pop	{r4, r5, r6, sl, fp, pc}
   1b760:	push	{fp, lr}
   1b764:	mov	fp, sp
   1b768:	sub	sp, sp, #16
   1b76c:	str	r0, [fp, #-4]
   1b770:	str	r1, [sp, #8]
   1b774:	str	r2, [sp, #4]
   1b778:	ldr	r0, [fp, #-4]
   1b77c:	ldr	r1, [sp, #8]
   1b780:	ldr	r3, [sp, #4]
   1b784:	movw	r2, #0
   1b788:	bl	1b794 <__assert_fail@plt+0xa3cc>
   1b78c:	mov	sp, fp
   1b790:	pop	{fp, pc}
   1b794:	push	{r4, r5, r6, sl, fp, lr}
   1b798:	add	fp, sp, #16
   1b79c:	sub	sp, sp, #72	; 0x48
   1b7a0:	str	r0, [fp, #-20]	; 0xffffffec
   1b7a4:	str	r1, [fp, #-24]	; 0xffffffe8
   1b7a8:	str	r2, [fp, #-28]	; 0xffffffe4
   1b7ac:	str	r3, [fp, #-32]	; 0xffffffe0
   1b7b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b7b4:	movw	r1, #0
   1b7b8:	cmp	r0, r1
   1b7bc:	beq	1b7cc <__assert_fail@plt+0xa404>
   1b7c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b7c4:	str	r0, [sp, #32]
   1b7c8:	b	1b7dc <__assert_fail@plt+0xa414>
   1b7cc:	movw	r0, #16824	; 0x41b8
   1b7d0:	movt	r0, #3
   1b7d4:	str	r0, [sp, #32]
   1b7d8:	b	1b7dc <__assert_fail@plt+0xa414>
   1b7dc:	ldr	r0, [sp, #32]
   1b7e0:	str	r0, [fp, #-36]	; 0xffffffdc
   1b7e4:	bl	11290 <__errno_location@plt>
   1b7e8:	ldr	r0, [r0]
   1b7ec:	str	r0, [fp, #-40]	; 0xffffffd8
   1b7f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b7f4:	ldr	r0, [r0, #4]
   1b7f8:	ldr	lr, [fp, #-28]	; 0xffffffe4
   1b7fc:	movw	r1, #0
   1b800:	cmp	lr, r1
   1b804:	movw	lr, #0
   1b808:	movne	lr, #1
   1b80c:	tst	lr, #1
   1b810:	mov	lr, r1
   1b814:	moveq	lr, #1
   1b818:	orr	r0, r0, lr
   1b81c:	str	r0, [sp, #44]	; 0x2c
   1b820:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b824:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b828:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b82c:	ldr	r0, [r0]
   1b830:	ldr	lr, [sp, #44]	; 0x2c
   1b834:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1b838:	add	ip, ip, #8
   1b83c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1b840:	ldr	r4, [r4, #40]	; 0x28
   1b844:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1b848:	ldr	r5, [r5, #44]	; 0x2c
   1b84c:	str	r0, [sp, #28]
   1b850:	mov	r0, r1
   1b854:	ldr	r6, [sp, #28]
   1b858:	str	r6, [sp]
   1b85c:	str	lr, [sp, #4]
   1b860:	str	ip, [sp, #8]
   1b864:	str	r4, [sp, #12]
   1b868:	str	r5, [sp, #16]
   1b86c:	bl	1a028 <__assert_fail@plt+0x8c60>
   1b870:	add	r0, r0, #1
   1b874:	str	r0, [sp, #40]	; 0x28
   1b878:	ldr	r0, [sp, #40]	; 0x28
   1b87c:	bl	1cda0 <__assert_fail@plt+0xb9d8>
   1b880:	str	r0, [sp, #36]	; 0x24
   1b884:	ldr	r0, [sp, #36]	; 0x24
   1b888:	ldr	r1, [sp, #40]	; 0x28
   1b88c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b890:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b894:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1b898:	ldr	ip, [ip]
   1b89c:	ldr	lr, [sp, #44]	; 0x2c
   1b8a0:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1b8a4:	add	r4, r4, #8
   1b8a8:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1b8ac:	ldr	r5, [r5, #40]	; 0x28
   1b8b0:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1b8b4:	ldr	r6, [r6, #44]	; 0x2c
   1b8b8:	str	ip, [sp]
   1b8bc:	str	lr, [sp, #4]
   1b8c0:	str	r4, [sp, #8]
   1b8c4:	str	r5, [sp, #12]
   1b8c8:	str	r6, [sp, #16]
   1b8cc:	bl	1a028 <__assert_fail@plt+0x8c60>
   1b8d0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b8d4:	str	r0, [sp, #24]
   1b8d8:	str	r1, [sp, #20]
   1b8dc:	bl	11290 <__errno_location@plt>
   1b8e0:	ldr	r1, [sp, #20]
   1b8e4:	str	r1, [r0]
   1b8e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b8ec:	movw	r2, #0
   1b8f0:	cmp	r0, r2
   1b8f4:	beq	1b908 <__assert_fail@plt+0xa540>
   1b8f8:	ldr	r0, [sp, #40]	; 0x28
   1b8fc:	sub	r0, r0, #1
   1b900:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b904:	str	r0, [r1]
   1b908:	ldr	r0, [sp, #36]	; 0x24
   1b90c:	sub	sp, fp, #16
   1b910:	pop	{r4, r5, r6, sl, fp, pc}
   1b914:	push	{fp, lr}
   1b918:	mov	fp, sp
   1b91c:	sub	sp, sp, #8
   1b920:	movw	r0, #16676	; 0x4124
   1b924:	movt	r0, #3
   1b928:	ldr	r0, [r0]
   1b92c:	str	r0, [sp, #4]
   1b930:	movw	r0, #1
   1b934:	str	r0, [sp]
   1b938:	ldr	r0, [sp]
   1b93c:	movw	r1, #16680	; 0x4128
   1b940:	movt	r1, #3
   1b944:	ldr	r1, [r1]
   1b948:	cmp	r0, r1
   1b94c:	bge	1b974 <__assert_fail@plt+0xa5ac>
   1b950:	ldr	r0, [sp, #4]
   1b954:	ldr	r1, [sp]
   1b958:	add	r0, r0, r1, lsl #3
   1b95c:	ldr	r0, [r0, #4]
   1b960:	bl	20a84 <__assert_fail@plt+0xf6bc>
   1b964:	ldr	r0, [sp]
   1b968:	add	r0, r0, #1
   1b96c:	str	r0, [sp]
   1b970:	b	1b938 <__assert_fail@plt+0xa570>
   1b974:	ldr	r0, [sp, #4]
   1b978:	ldr	r0, [r0, #4]
   1b97c:	movw	r1, #16872	; 0x41e8
   1b980:	movt	r1, #3
   1b984:	cmp	r0, r1
   1b988:	beq	1b9b4 <__assert_fail@plt+0xa5ec>
   1b98c:	ldr	r0, [sp, #4]
   1b990:	ldr	r0, [r0, #4]
   1b994:	bl	20a84 <__assert_fail@plt+0xf6bc>
   1b998:	movw	r0, #256	; 0x100
   1b99c:	movw	lr, #16684	; 0x412c
   1b9a0:	movt	lr, #3
   1b9a4:	str	r0, [lr]
   1b9a8:	movw	r0, #16872	; 0x41e8
   1b9ac:	movt	r0, #3
   1b9b0:	str	r0, [lr, #4]
   1b9b4:	ldr	r0, [sp, #4]
   1b9b8:	movw	r1, #16684	; 0x412c
   1b9bc:	movt	r1, #3
   1b9c0:	cmp	r0, r1
   1b9c4:	beq	1b9e4 <__assert_fail@plt+0xa61c>
   1b9c8:	ldr	r0, [sp, #4]
   1b9cc:	bl	20a84 <__assert_fail@plt+0xf6bc>
   1b9d0:	movw	r0, #16676	; 0x4124
   1b9d4:	movt	r0, #3
   1b9d8:	movw	lr, #16684	; 0x412c
   1b9dc:	movt	lr, #3
   1b9e0:	str	lr, [r0]
   1b9e4:	movw	r0, #16680	; 0x4128
   1b9e8:	movt	r0, #3
   1b9ec:	movw	r1, #1
   1b9f0:	str	r1, [r0]
   1b9f4:	mov	sp, fp
   1b9f8:	pop	{fp, pc}
   1b9fc:	push	{fp, lr}
   1ba00:	mov	fp, sp
   1ba04:	sub	sp, sp, #8
   1ba08:	str	r0, [sp, #4]
   1ba0c:	str	r1, [sp]
   1ba10:	ldr	r0, [sp, #4]
   1ba14:	ldr	r1, [sp]
   1ba18:	mvn	r2, #0
   1ba1c:	movw	r3, #16824	; 0x41b8
   1ba20:	movt	r3, #3
   1ba24:	bl	1ba30 <__assert_fail@plt+0xa668>
   1ba28:	mov	sp, fp
   1ba2c:	pop	{fp, pc}
   1ba30:	push	{r4, r5, r6, sl, fp, lr}
   1ba34:	add	fp, sp, #16
   1ba38:	sub	sp, sp, #88	; 0x58
   1ba3c:	str	r0, [fp, #-20]	; 0xffffffec
   1ba40:	str	r1, [fp, #-24]	; 0xffffffe8
   1ba44:	str	r2, [fp, #-28]	; 0xffffffe4
   1ba48:	str	r3, [fp, #-32]	; 0xffffffe0
   1ba4c:	bl	11290 <__errno_location@plt>
   1ba50:	ldr	r1, [pc, #676]	; 1bcfc <__assert_fail@plt+0xa934>
   1ba54:	ldr	r0, [r0]
   1ba58:	str	r0, [fp, #-36]	; 0xffffffdc
   1ba5c:	movw	r0, #16676	; 0x4124
   1ba60:	movt	r0, #3
   1ba64:	ldr	r0, [r0]
   1ba68:	str	r0, [fp, #-40]	; 0xffffffd8
   1ba6c:	str	r1, [fp, #-44]	; 0xffffffd4
   1ba70:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ba74:	movw	r1, #0
   1ba78:	cmp	r1, r0
   1ba7c:	bgt	1ba90 <__assert_fail@plt+0xa6c8>
   1ba80:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ba84:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ba88:	cmp	r0, r1
   1ba8c:	blt	1ba94 <__assert_fail@plt+0xa6cc>
   1ba90:	bl	11398 <abort@plt>
   1ba94:	movw	r0, #16680	; 0x4128
   1ba98:	movt	r0, #3
   1ba9c:	ldr	r0, [r0]
   1baa0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1baa4:	cmp	r0, r1
   1baa8:	bgt	1bba0 <__assert_fail@plt+0xa7d8>
   1baac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bab0:	movw	r1, #16684	; 0x412c
   1bab4:	movt	r1, #3
   1bab8:	cmp	r0, r1
   1babc:	movw	r0, #0
   1bac0:	moveq	r0, #1
   1bac4:	and	r0, r0, #1
   1bac8:	strb	r0, [fp, #-45]	; 0xffffffd3
   1bacc:	movw	r0, #16680	; 0x4128
   1bad0:	movt	r0, #3
   1bad4:	ldr	r0, [r0]
   1bad8:	str	r0, [sp, #52]	; 0x34
   1badc:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1bae0:	tst	r0, #1
   1bae4:	beq	1baf4 <__assert_fail@plt+0xa72c>
   1bae8:	movw	r0, #0
   1baec:	str	r0, [sp, #32]
   1baf0:	b	1bafc <__assert_fail@plt+0xa734>
   1baf4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1baf8:	str	r0, [sp, #32]
   1bafc:	ldr	r0, [sp, #32]
   1bb00:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bb04:	movw	r2, #16680	; 0x4128
   1bb08:	movt	r2, #3
   1bb0c:	ldr	r2, [r2]
   1bb10:	sub	r1, r1, r2
   1bb14:	add	r2, r1, #1
   1bb18:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bb1c:	add	r1, sp, #52	; 0x34
   1bb20:	movw	ip, #8
   1bb24:	str	ip, [sp]
   1bb28:	bl	1cfdc <__assert_fail@plt+0xbc14>
   1bb2c:	str	r0, [fp, #-40]	; 0xffffffd8
   1bb30:	movw	r1, #16676	; 0x4124
   1bb34:	movt	r1, #3
   1bb38:	str	r0, [r1]
   1bb3c:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1bb40:	tst	r0, #1
   1bb44:	beq	1bb64 <__assert_fail@plt+0xa79c>
   1bb48:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bb4c:	movw	r1, #16684	; 0x412c
   1bb50:	movt	r1, #3
   1bb54:	ldr	r2, [r1]
   1bb58:	str	r2, [r0]
   1bb5c:	ldr	r1, [r1, #4]
   1bb60:	str	r1, [r0, #4]
   1bb64:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bb68:	movw	r1, #16680	; 0x4128
   1bb6c:	movt	r1, #3
   1bb70:	ldr	r1, [r1]
   1bb74:	add	r0, r0, r1, lsl #3
   1bb78:	ldr	r2, [sp, #52]	; 0x34
   1bb7c:	sub	r1, r2, r1
   1bb80:	lsl	r2, r1, #3
   1bb84:	movw	r1, #0
   1bb88:	and	r1, r1, #255	; 0xff
   1bb8c:	bl	112a8 <memset@plt>
   1bb90:	ldr	r0, [sp, #52]	; 0x34
   1bb94:	movw	r1, #16680	; 0x4128
   1bb98:	movt	r1, #3
   1bb9c:	str	r0, [r1]
   1bba0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bba4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bba8:	ldr	r0, [r0, r1, lsl #3]
   1bbac:	str	r0, [sp, #48]	; 0x30
   1bbb0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bbb4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bbb8:	add	r0, r0, r1, lsl #3
   1bbbc:	ldr	r0, [r0, #4]
   1bbc0:	str	r0, [sp, #44]	; 0x2c
   1bbc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bbc8:	ldr	r0, [r0, #4]
   1bbcc:	orr	r0, r0, #1
   1bbd0:	str	r0, [sp, #40]	; 0x28
   1bbd4:	ldr	r0, [sp, #44]	; 0x2c
   1bbd8:	ldr	r1, [sp, #48]	; 0x30
   1bbdc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1bbe0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bbe4:	ldr	ip, [fp, #-32]	; 0xffffffe0
   1bbe8:	ldr	ip, [ip]
   1bbec:	ldr	lr, [sp, #40]	; 0x28
   1bbf0:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1bbf4:	add	r4, r4, #8
   1bbf8:	ldr	r5, [fp, #-32]	; 0xffffffe0
   1bbfc:	ldr	r5, [r5, #40]	; 0x28
   1bc00:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1bc04:	ldr	r6, [r6, #44]	; 0x2c
   1bc08:	str	ip, [sp]
   1bc0c:	str	lr, [sp, #4]
   1bc10:	str	r4, [sp, #8]
   1bc14:	str	r5, [sp, #12]
   1bc18:	str	r6, [sp, #16]
   1bc1c:	bl	1a028 <__assert_fail@plt+0x8c60>
   1bc20:	str	r0, [sp, #36]	; 0x24
   1bc24:	ldr	r0, [sp, #48]	; 0x30
   1bc28:	ldr	r1, [sp, #36]	; 0x24
   1bc2c:	cmp	r0, r1
   1bc30:	bhi	1bcdc <__assert_fail@plt+0xa914>
   1bc34:	ldr	r0, [sp, #36]	; 0x24
   1bc38:	add	r0, r0, #1
   1bc3c:	str	r0, [sp, #48]	; 0x30
   1bc40:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1bc44:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bc48:	add	r1, r1, r2, lsl #3
   1bc4c:	str	r0, [r1]
   1bc50:	ldr	r0, [sp, #44]	; 0x2c
   1bc54:	movw	r1, #16872	; 0x41e8
   1bc58:	movt	r1, #3
   1bc5c:	cmp	r0, r1
   1bc60:	beq	1bc6c <__assert_fail@plt+0xa8a4>
   1bc64:	ldr	r0, [sp, #44]	; 0x2c
   1bc68:	bl	20a84 <__assert_fail@plt+0xf6bc>
   1bc6c:	ldr	r0, [sp, #48]	; 0x30
   1bc70:	bl	1cda0 <__assert_fail@plt+0xb9d8>
   1bc74:	mov	lr, r0
   1bc78:	str	r0, [sp, #44]	; 0x2c
   1bc7c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bc80:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bc84:	add	r0, r0, r1, lsl #3
   1bc88:	str	lr, [r0, #4]
   1bc8c:	ldr	r0, [sp, #44]	; 0x2c
   1bc90:	ldr	r1, [sp, #48]	; 0x30
   1bc94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1bc98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bc9c:	ldr	lr, [fp, #-32]	; 0xffffffe0
   1bca0:	ldr	lr, [lr]
   1bca4:	ldr	ip, [sp, #40]	; 0x28
   1bca8:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1bcac:	add	r4, r4, #8
   1bcb0:	ldr	r5, [fp, #-32]	; 0xffffffe0
   1bcb4:	ldr	r5, [r5, #40]	; 0x28
   1bcb8:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1bcbc:	ldr	r6, [r6, #44]	; 0x2c
   1bcc0:	str	lr, [sp]
   1bcc4:	str	ip, [sp, #4]
   1bcc8:	str	r4, [sp, #8]
   1bccc:	str	r5, [sp, #12]
   1bcd0:	str	r6, [sp, #16]
   1bcd4:	bl	1a028 <__assert_fail@plt+0x8c60>
   1bcd8:	str	r0, [sp, #28]
   1bcdc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bce0:	str	r0, [sp, #24]
   1bce4:	bl	11290 <__errno_location@plt>
   1bce8:	ldr	lr, [sp, #24]
   1bcec:	str	lr, [r0]
   1bcf0:	ldr	r0, [sp, #44]	; 0x2c
   1bcf4:	sub	sp, fp, #16
   1bcf8:	pop	{r4, r5, r6, sl, fp, pc}
   1bcfc:	svcvc	0x00ffffff
   1bd00:	push	{fp, lr}
   1bd04:	mov	fp, sp
   1bd08:	sub	sp, sp, #16
   1bd0c:	str	r0, [fp, #-4]
   1bd10:	str	r1, [sp, #8]
   1bd14:	str	r2, [sp, #4]
   1bd18:	ldr	r0, [fp, #-4]
   1bd1c:	ldr	r1, [sp, #8]
   1bd20:	ldr	r2, [sp, #4]
   1bd24:	movw	r3, #16824	; 0x41b8
   1bd28:	movt	r3, #3
   1bd2c:	bl	1ba30 <__assert_fail@plt+0xa668>
   1bd30:	mov	sp, fp
   1bd34:	pop	{fp, pc}
   1bd38:	push	{fp, lr}
   1bd3c:	mov	fp, sp
   1bd40:	sub	sp, sp, #8
   1bd44:	str	r0, [sp, #4]
   1bd48:	ldr	r1, [sp, #4]
   1bd4c:	movw	r0, #0
   1bd50:	bl	1b9fc <__assert_fail@plt+0xa634>
   1bd54:	mov	sp, fp
   1bd58:	pop	{fp, pc}
   1bd5c:	push	{fp, lr}
   1bd60:	mov	fp, sp
   1bd64:	sub	sp, sp, #8
   1bd68:	str	r0, [sp, #4]
   1bd6c:	str	r1, [sp]
   1bd70:	ldr	r1, [sp, #4]
   1bd74:	ldr	r2, [sp]
   1bd78:	movw	r0, #0
   1bd7c:	bl	1bd00 <__assert_fail@plt+0xa938>
   1bd80:	mov	sp, fp
   1bd84:	pop	{fp, pc}
   1bd88:	push	{fp, lr}
   1bd8c:	mov	fp, sp
   1bd90:	sub	sp, sp, #64	; 0x40
   1bd94:	str	r0, [fp, #-4]
   1bd98:	str	r1, [fp, #-8]
   1bd9c:	str	r2, [fp, #-12]
   1bda0:	ldr	r1, [fp, #-8]
   1bda4:	add	r0, sp, #4
   1bda8:	bl	1bdc8 <__assert_fail@plt+0xaa00>
   1bdac:	ldr	r0, [fp, #-4]
   1bdb0:	ldr	r1, [fp, #-12]
   1bdb4:	mvn	r2, #0
   1bdb8:	add	r3, sp, #4
   1bdbc:	bl	1ba30 <__assert_fail@plt+0xa668>
   1bdc0:	mov	sp, fp
   1bdc4:	pop	{fp, pc}
   1bdc8:	push	{fp, lr}
   1bdcc:	mov	fp, sp
   1bdd0:	sub	sp, sp, #8
   1bdd4:	str	r1, [sp, #4]
   1bdd8:	mov	r1, r0
   1bddc:	str	r0, [sp]
   1bde0:	mov	r0, r1
   1bde4:	movw	r1, #0
   1bde8:	and	r1, r1, #255	; 0xff
   1bdec:	movw	r2, #48	; 0x30
   1bdf0:	bl	112a8 <memset@plt>
   1bdf4:	ldr	r0, [sp, #4]
   1bdf8:	cmp	r0, #10
   1bdfc:	bne	1be04 <__assert_fail@plt+0xaa3c>
   1be00:	bl	11398 <abort@plt>
   1be04:	ldr	r0, [sp, #4]
   1be08:	ldr	r1, [sp]
   1be0c:	str	r0, [r1]
   1be10:	mov	sp, fp
   1be14:	pop	{fp, pc}
   1be18:	push	{fp, lr}
   1be1c:	mov	fp, sp
   1be20:	sub	sp, sp, #64	; 0x40
   1be24:	str	r0, [fp, #-4]
   1be28:	str	r1, [fp, #-8]
   1be2c:	str	r2, [fp, #-12]
   1be30:	str	r3, [fp, #-16]
   1be34:	ldr	r1, [fp, #-8]
   1be38:	mov	r0, sp
   1be3c:	bl	1bdc8 <__assert_fail@plt+0xaa00>
   1be40:	ldr	r0, [fp, #-4]
   1be44:	ldr	r1, [fp, #-12]
   1be48:	ldr	r2, [fp, #-16]
   1be4c:	mov	r3, sp
   1be50:	bl	1ba30 <__assert_fail@plt+0xa668>
   1be54:	mov	sp, fp
   1be58:	pop	{fp, pc}
   1be5c:	push	{fp, lr}
   1be60:	mov	fp, sp
   1be64:	sub	sp, sp, #8
   1be68:	str	r0, [sp, #4]
   1be6c:	str	r1, [sp]
   1be70:	ldr	r1, [sp, #4]
   1be74:	ldr	r2, [sp]
   1be78:	movw	r0, #0
   1be7c:	bl	1bd88 <__assert_fail@plt+0xa9c0>
   1be80:	mov	sp, fp
   1be84:	pop	{fp, pc}
   1be88:	push	{fp, lr}
   1be8c:	mov	fp, sp
   1be90:	sub	sp, sp, #16
   1be94:	str	r0, [fp, #-4]
   1be98:	str	r1, [sp, #8]
   1be9c:	str	r2, [sp, #4]
   1bea0:	ldr	r1, [fp, #-4]
   1bea4:	ldr	r2, [sp, #8]
   1bea8:	ldr	r3, [sp, #4]
   1beac:	movw	r0, #0
   1beb0:	bl	1be18 <__assert_fail@plt+0xaa50>
   1beb4:	mov	sp, fp
   1beb8:	pop	{fp, pc}
   1bebc:	push	{fp, lr}
   1bec0:	mov	fp, sp
   1bec4:	sub	sp, sp, #72	; 0x48
   1bec8:	movw	r3, #16824	; 0x41b8
   1becc:	movt	r3, #3
   1bed0:	str	r0, [fp, #-4]
   1bed4:	str	r1, [fp, #-8]
   1bed8:	strb	r2, [fp, #-9]
   1bedc:	add	r0, sp, #12
   1bee0:	mov	r1, r0
   1bee4:	str	r0, [sp, #8]
   1bee8:	mov	r0, r1
   1beec:	mov	r1, r3
   1bef0:	movw	r2, #48	; 0x30
   1bef4:	bl	1114c <memcpy@plt>
   1bef8:	ldr	r0, [sp, #8]
   1befc:	ldrb	r1, [fp, #-9]
   1bf00:	movw	r2, #1
   1bf04:	bl	19dcc <__assert_fail@plt+0x8a04>
   1bf08:	ldr	r1, [fp, #-4]
   1bf0c:	ldr	r2, [fp, #-8]
   1bf10:	movw	r3, #0
   1bf14:	str	r0, [sp, #4]
   1bf18:	mov	r0, r3
   1bf1c:	add	r3, sp, #12
   1bf20:	bl	1ba30 <__assert_fail@plt+0xa668>
   1bf24:	mov	sp, fp
   1bf28:	pop	{fp, pc}
   1bf2c:	push	{fp, lr}
   1bf30:	mov	fp, sp
   1bf34:	sub	sp, sp, #8
   1bf38:	str	r0, [sp, #4]
   1bf3c:	strb	r1, [sp, #3]
   1bf40:	ldr	r0, [sp, #4]
   1bf44:	mvn	r1, #0
   1bf48:	ldrb	r2, [sp, #3]
   1bf4c:	bl	1bebc <__assert_fail@plt+0xaaf4>
   1bf50:	mov	sp, fp
   1bf54:	pop	{fp, pc}
   1bf58:	push	{fp, lr}
   1bf5c:	mov	fp, sp
   1bf60:	sub	sp, sp, #8
   1bf64:	str	r0, [sp, #4]
   1bf68:	ldr	r0, [sp, #4]
   1bf6c:	movw	r1, #58	; 0x3a
   1bf70:	and	r1, r1, #255	; 0xff
   1bf74:	bl	1bf2c <__assert_fail@plt+0xab64>
   1bf78:	mov	sp, fp
   1bf7c:	pop	{fp, pc}
   1bf80:	push	{fp, lr}
   1bf84:	mov	fp, sp
   1bf88:	sub	sp, sp, #8
   1bf8c:	str	r0, [sp, #4]
   1bf90:	str	r1, [sp]
   1bf94:	ldr	r0, [sp, #4]
   1bf98:	ldr	r1, [sp]
   1bf9c:	movw	r2, #58	; 0x3a
   1bfa0:	and	r2, r2, #255	; 0xff
   1bfa4:	bl	1bebc <__assert_fail@plt+0xaaf4>
   1bfa8:	mov	sp, fp
   1bfac:	pop	{fp, pc}
   1bfb0:	push	{fp, lr}
   1bfb4:	mov	fp, sp
   1bfb8:	sub	sp, sp, #120	; 0x78
   1bfbc:	str	r0, [fp, #-4]
   1bfc0:	str	r1, [fp, #-8]
   1bfc4:	str	r2, [fp, #-12]
   1bfc8:	ldr	r1, [fp, #-8]
   1bfcc:	add	r0, sp, #12
   1bfd0:	bl	1bdc8 <__assert_fail@plt+0xaa00>
   1bfd4:	add	r0, sp, #60	; 0x3c
   1bfd8:	mov	r1, r0
   1bfdc:	add	r2, sp, #12
   1bfe0:	str	r0, [sp, #8]
   1bfe4:	mov	r0, r1
   1bfe8:	mov	r1, r2
   1bfec:	movw	r2, #48	; 0x30
   1bff0:	bl	1114c <memcpy@plt>
   1bff4:	ldr	r0, [sp, #8]
   1bff8:	movw	r1, #58	; 0x3a
   1bffc:	and	r1, r1, #255	; 0xff
   1c000:	movw	r2, #1
   1c004:	bl	19dcc <__assert_fail@plt+0x8a04>
   1c008:	ldr	r1, [fp, #-4]
   1c00c:	ldr	r2, [fp, #-12]
   1c010:	str	r0, [sp, #4]
   1c014:	mov	r0, r1
   1c018:	mov	r1, r2
   1c01c:	mvn	r2, #0
   1c020:	add	r3, sp, #60	; 0x3c
   1c024:	bl	1ba30 <__assert_fail@plt+0xa668>
   1c028:	mov	sp, fp
   1c02c:	pop	{fp, pc}
   1c030:	push	{fp, lr}
   1c034:	mov	fp, sp
   1c038:	sub	sp, sp, #24
   1c03c:	str	r0, [fp, #-4]
   1c040:	str	r1, [fp, #-8]
   1c044:	str	r2, [sp, #12]
   1c048:	str	r3, [sp, #8]
   1c04c:	ldr	r0, [fp, #-4]
   1c050:	ldr	r1, [fp, #-8]
   1c054:	ldr	r2, [sp, #12]
   1c058:	ldr	r3, [sp, #8]
   1c05c:	mvn	ip, #0
   1c060:	str	ip, [sp]
   1c064:	bl	1c070 <__assert_fail@plt+0xaca8>
   1c068:	mov	sp, fp
   1c06c:	pop	{fp, pc}
   1c070:	push	{fp, lr}
   1c074:	mov	fp, sp
   1c078:	sub	sp, sp, #72	; 0x48
   1c07c:	ldr	ip, [fp, #8]
   1c080:	movw	lr, #16824	; 0x41b8
   1c084:	movt	lr, #3
   1c088:	str	r0, [fp, #-4]
   1c08c:	str	r1, [fp, #-8]
   1c090:	str	r2, [fp, #-12]
   1c094:	str	r3, [fp, #-16]
   1c098:	add	r0, sp, #8
   1c09c:	mov	r1, r0
   1c0a0:	str	r0, [sp, #4]
   1c0a4:	mov	r0, r1
   1c0a8:	mov	r1, lr
   1c0ac:	movw	r2, #48	; 0x30
   1c0b0:	str	ip, [sp]
   1c0b4:	bl	1114c <memcpy@plt>
   1c0b8:	ldr	r1, [fp, #-8]
   1c0bc:	ldr	r2, [fp, #-12]
   1c0c0:	ldr	r0, [sp, #4]
   1c0c4:	bl	19ecc <__assert_fail@plt+0x8b04>
   1c0c8:	ldr	r0, [fp, #-4]
   1c0cc:	ldr	r1, [fp, #-16]
   1c0d0:	ldr	r2, [fp, #8]
   1c0d4:	add	r3, sp, #8
   1c0d8:	bl	1ba30 <__assert_fail@plt+0xa668>
   1c0dc:	mov	sp, fp
   1c0e0:	pop	{fp, pc}
   1c0e4:	push	{fp, lr}
   1c0e8:	mov	fp, sp
   1c0ec:	sub	sp, sp, #16
   1c0f0:	str	r0, [fp, #-4]
   1c0f4:	str	r1, [sp, #8]
   1c0f8:	str	r2, [sp, #4]
   1c0fc:	ldr	r1, [fp, #-4]
   1c100:	ldr	r2, [sp, #8]
   1c104:	ldr	r3, [sp, #4]
   1c108:	movw	r0, #0
   1c10c:	bl	1c030 <__assert_fail@plt+0xac68>
   1c110:	mov	sp, fp
   1c114:	pop	{fp, pc}
   1c118:	push	{fp, lr}
   1c11c:	mov	fp, sp
   1c120:	sub	sp, sp, #24
   1c124:	str	r0, [fp, #-4]
   1c128:	str	r1, [fp, #-8]
   1c12c:	str	r2, [sp, #12]
   1c130:	str	r3, [sp, #8]
   1c134:	ldr	r1, [fp, #-4]
   1c138:	ldr	r2, [fp, #-8]
   1c13c:	ldr	r3, [sp, #12]
   1c140:	ldr	r0, [sp, #8]
   1c144:	movw	ip, #0
   1c148:	str	r0, [sp, #4]
   1c14c:	mov	r0, ip
   1c150:	ldr	ip, [sp, #4]
   1c154:	str	ip, [sp]
   1c158:	bl	1c070 <__assert_fail@plt+0xaca8>
   1c15c:	mov	sp, fp
   1c160:	pop	{fp, pc}
   1c164:	push	{fp, lr}
   1c168:	mov	fp, sp
   1c16c:	sub	sp, sp, #16
   1c170:	str	r0, [fp, #-4]
   1c174:	str	r1, [sp, #8]
   1c178:	str	r2, [sp, #4]
   1c17c:	ldr	r0, [fp, #-4]
   1c180:	ldr	r1, [sp, #8]
   1c184:	ldr	r2, [sp, #4]
   1c188:	movw	r3, #16692	; 0x4134
   1c18c:	movt	r3, #3
   1c190:	bl	1ba30 <__assert_fail@plt+0xa668>
   1c194:	mov	sp, fp
   1c198:	pop	{fp, pc}
   1c19c:	push	{fp, lr}
   1c1a0:	mov	fp, sp
   1c1a4:	sub	sp, sp, #8
   1c1a8:	str	r0, [sp, #4]
   1c1ac:	str	r1, [sp]
   1c1b0:	ldr	r1, [sp, #4]
   1c1b4:	ldr	r2, [sp]
   1c1b8:	movw	r0, #0
   1c1bc:	bl	1c164 <__assert_fail@plt+0xad9c>
   1c1c0:	mov	sp, fp
   1c1c4:	pop	{fp, pc}
   1c1c8:	push	{fp, lr}
   1c1cc:	mov	fp, sp
   1c1d0:	sub	sp, sp, #8
   1c1d4:	str	r0, [sp, #4]
   1c1d8:	str	r1, [sp]
   1c1dc:	ldr	r0, [sp, #4]
   1c1e0:	ldr	r1, [sp]
   1c1e4:	mvn	r2, #0
   1c1e8:	bl	1c164 <__assert_fail@plt+0xad9c>
   1c1ec:	mov	sp, fp
   1c1f0:	pop	{fp, pc}
   1c1f4:	push	{fp, lr}
   1c1f8:	mov	fp, sp
   1c1fc:	sub	sp, sp, #8
   1c200:	str	r0, [sp, #4]
   1c204:	ldr	r1, [sp, #4]
   1c208:	movw	r0, #0
   1c20c:	bl	1c1c8 <__assert_fail@plt+0xae00>
   1c210:	mov	sp, fp
   1c214:	pop	{fp, pc}
   1c218:	push	{fp, lr}
   1c21c:	mov	fp, sp
   1c220:	sub	sp, sp, #24
   1c224:	str	r0, [fp, #-8]
   1c228:	str	r1, [sp, #12]
   1c22c:	ldr	r0, [fp, #-8]
   1c230:	bl	11254 <gettext@plt>
   1c234:	str	r0, [sp, #8]
   1c238:	ldr	r0, [sp, #8]
   1c23c:	ldr	r1, [fp, #-8]
   1c240:	cmp	r0, r1
   1c244:	beq	1c254 <__assert_fail@plt+0xae8c>
   1c248:	ldr	r0, [sp, #8]
   1c24c:	str	r0, [fp, #-4]
   1c250:	b	1c320 <__assert_fail@plt+0xaf58>
   1c254:	bl	20da4 <__assert_fail@plt+0xf9dc>
   1c258:	str	r0, [sp, #4]
   1c25c:	ldr	r0, [sp, #4]
   1c260:	movw	r1, #14630	; 0x3926
   1c264:	movt	r1, #2
   1c268:	bl	2010c <__assert_fail@plt+0xed44>
   1c26c:	cmp	r0, #0
   1c270:	bne	1c2a8 <__assert_fail@plt+0xaee0>
   1c274:	ldr	r0, [fp, #-8]
   1c278:	ldrb	r0, [r0]
   1c27c:	cmp	r0, #96	; 0x60
   1c280:	movw	r0, #0
   1c284:	moveq	r0, #1
   1c288:	tst	r0, #1
   1c28c:	movw	r0, #14640	; 0x3930
   1c290:	movt	r0, #2
   1c294:	movw	r1, #14636	; 0x392c
   1c298:	movt	r1, #2
   1c29c:	movne	r0, r1
   1c2a0:	str	r0, [fp, #-4]
   1c2a4:	b	1c320 <__assert_fail@plt+0xaf58>
   1c2a8:	ldr	r0, [sp, #4]
   1c2ac:	movw	r1, #14644	; 0x3934
   1c2b0:	movt	r1, #2
   1c2b4:	bl	2010c <__assert_fail@plt+0xed44>
   1c2b8:	cmp	r0, #0
   1c2bc:	bne	1c2f4 <__assert_fail@plt+0xaf2c>
   1c2c0:	ldr	r0, [fp, #-8]
   1c2c4:	ldrb	r0, [r0]
   1c2c8:	cmp	r0, #96	; 0x60
   1c2cc:	movw	r0, #0
   1c2d0:	moveq	r0, #1
   1c2d4:	tst	r0, #1
   1c2d8:	movw	r0, #14656	; 0x3940
   1c2dc:	movt	r0, #2
   1c2e0:	movw	r1, #14652	; 0x393c
   1c2e4:	movt	r1, #2
   1c2e8:	movne	r0, r1
   1c2ec:	str	r0, [fp, #-4]
   1c2f0:	b	1c320 <__assert_fail@plt+0xaf58>
   1c2f4:	ldr	r0, [sp, #12]
   1c2f8:	cmp	r0, #9
   1c2fc:	movw	r0, #0
   1c300:	moveq	r0, #1
   1c304:	tst	r0, #1
   1c308:	movw	r0, #14628	; 0x3924
   1c30c:	movt	r0, #2
   1c310:	movw	r1, #14624	; 0x3920
   1c314:	movt	r1, #2
   1c318:	movne	r0, r1
   1c31c:	str	r0, [fp, #-4]
   1c320:	ldr	r0, [fp, #-4]
   1c324:	mov	sp, fp
   1c328:	pop	{fp, pc}
   1c32c:	push	{fp, lr}
   1c330:	mov	fp, sp
   1c334:	sub	sp, sp, #112	; 0x70
   1c338:	str	r0, [fp, #-8]
   1c33c:	movw	r0, #15479	; 0x3c77
   1c340:	movt	r0, #2
   1c344:	mov	r1, sp
   1c348:	bl	22d84 <__assert_fail@plt+0x119bc>
   1c34c:	cmp	r0, #0
   1c350:	beq	1c360 <__assert_fail@plt+0xaf98>
   1c354:	movw	r0, #0
   1c358:	str	r0, [fp, #-4]
   1c35c:	b	1c390 <__assert_fail@plt+0xafc8>
   1c360:	ldr	r0, [sp, #96]	; 0x60
   1c364:	ldr	r1, [sp, #100]	; 0x64
   1c368:	ldr	r2, [fp, #-8]
   1c36c:	str	r1, [r2, #4]
   1c370:	str	r0, [r2]
   1c374:	ldr	r0, [sp]
   1c378:	ldr	r1, [sp, #4]
   1c37c:	ldr	r2, [fp, #-8]
   1c380:	str	r1, [r2, #12]
   1c384:	str	r0, [r2, #8]
   1c388:	ldr	r0, [fp, #-8]
   1c38c:	str	r0, [fp, #-4]
   1c390:	ldr	r0, [fp, #-4]
   1c394:	mov	sp, fp
   1c398:	pop	{fp, pc}
   1c39c:	push	{fp, lr}
   1c3a0:	mov	fp, sp
   1c3a4:	sub	sp, sp, #24
   1c3a8:	str	r0, [fp, #-4]
   1c3ac:	ldr	r0, [fp, #-4]
   1c3b0:	movw	r1, #0
   1c3b4:	cmp	r1, r0
   1c3b8:	bgt	1c408 <__assert_fail@plt+0xb040>
   1c3bc:	ldr	r0, [fp, #-4]
   1c3c0:	cmp	r0, #2
   1c3c4:	bgt	1c408 <__assert_fail@plt+0xb040>
   1c3c8:	ldr	r0, [fp, #-4]
   1c3cc:	bl	22240 <__assert_fail@plt+0x10e78>
   1c3d0:	str	r0, [fp, #-8]
   1c3d4:	bl	11290 <__errno_location@plt>
   1c3d8:	ldr	r0, [r0]
   1c3dc:	str	r0, [sp, #12]
   1c3e0:	ldr	r0, [fp, #-4]
   1c3e4:	bl	113a4 <close@plt>
   1c3e8:	ldr	lr, [sp, #12]
   1c3ec:	str	r0, [sp, #8]
   1c3f0:	str	lr, [sp, #4]
   1c3f4:	bl	11290 <__errno_location@plt>
   1c3f8:	ldr	lr, [sp, #4]
   1c3fc:	str	lr, [r0]
   1c400:	ldr	r0, [fp, #-8]
   1c404:	str	r0, [fp, #-4]
   1c408:	ldr	r0, [fp, #-4]
   1c40c:	mov	sp, fp
   1c410:	pop	{fp, pc}
   1c414:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c418:	add	fp, sp, #28
   1c41c:	sub	sp, sp, #260	; 0x104
   1c420:	ldr	ip, [fp, #12]
   1c424:	ldr	lr, [fp, #8]
   1c428:	str	r0, [fp, #-32]	; 0xffffffe0
   1c42c:	str	r1, [fp, #-36]	; 0xffffffdc
   1c430:	str	r2, [fp, #-40]	; 0xffffffd8
   1c434:	str	r3, [fp, #-44]	; 0xffffffd4
   1c438:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c43c:	movw	r1, #0
   1c440:	cmp	r0, r1
   1c444:	str	lr, [fp, #-48]	; 0xffffffd0
   1c448:	str	ip, [fp, #-52]	; 0xffffffcc
   1c44c:	beq	1c484 <__assert_fail@plt+0xb0bc>
   1c450:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c454:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c458:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c45c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c460:	movw	ip, #14744	; 0x3998
   1c464:	movt	ip, #2
   1c468:	str	r1, [fp, #-56]	; 0xffffffc8
   1c46c:	mov	r1, ip
   1c470:	ldr	ip, [fp, #-56]	; 0xffffffc8
   1c474:	str	ip, [sp]
   1c478:	bl	11278 <fprintf@plt>
   1c47c:	str	r0, [fp, #-60]	; 0xffffffc4
   1c480:	b	1c4a0 <__assert_fail@plt+0xb0d8>
   1c484:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c488:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c48c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c490:	movw	r1, #14756	; 0x39a4
   1c494:	movt	r1, #2
   1c498:	bl	11278 <fprintf@plt>
   1c49c:	str	r0, [fp, #-64]	; 0xffffffc0
   1c4a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c4a4:	movw	r1, #14763	; 0x39ab
   1c4a8:	movt	r1, #2
   1c4ac:	str	r0, [fp, #-68]	; 0xffffffbc
   1c4b0:	mov	r0, r1
   1c4b4:	bl	11254 <gettext@plt>
   1c4b8:	movw	r1, #15481	; 0x3c79
   1c4bc:	movt	r1, #2
   1c4c0:	movw	r3, #2022	; 0x7e6
   1c4c4:	ldr	lr, [fp, #-68]	; 0xffffffbc
   1c4c8:	str	r0, [fp, #-72]	; 0xffffffb8
   1c4cc:	mov	r0, lr
   1c4d0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1c4d4:	bl	11278 <fprintf@plt>
   1c4d8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c4dc:	movw	r2, #11997	; 0x2edd
   1c4e0:	movt	r2, #2
   1c4e4:	str	r0, [fp, #-76]	; 0xffffffb4
   1c4e8:	mov	r0, r2
   1c4ec:	str	r2, [fp, #-80]	; 0xffffffb0
   1c4f0:	bl	110ec <fputs_unlocked@plt>
   1c4f4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c4f8:	movw	r2, #14767	; 0x39af
   1c4fc:	movt	r2, #2
   1c500:	str	r0, [fp, #-84]	; 0xffffffac
   1c504:	mov	r0, r2
   1c508:	str	r1, [fp, #-88]	; 0xffffffa8
   1c50c:	bl	11254 <gettext@plt>
   1c510:	movw	r2, #14938	; 0x3a5a
   1c514:	movt	r2, #2
   1c518:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1c51c:	str	r0, [fp, #-92]	; 0xffffffa4
   1c520:	mov	r0, r1
   1c524:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1c528:	bl	11278 <fprintf@plt>
   1c52c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c530:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1c534:	str	r0, [fp, #-96]	; 0xffffffa0
   1c538:	mov	r0, r2
   1c53c:	bl	110ec <fputs_unlocked@plt>
   1c540:	ldr	r1, [fp, #12]
   1c544:	cmp	r1, #9
   1c548:	str	r0, [fp, #-100]	; 0xffffff9c
   1c54c:	str	r1, [fp, #-104]	; 0xffffff98
   1c550:	bhi	1c990 <__assert_fail@plt+0xb5c8>
   1c554:	add	r0, pc, #8
   1c558:	ldr	r1, [fp, #-104]	; 0xffffff98
   1c55c:	ldr	r0, [r0, r1, lsl #2]
   1c560:	mov	pc, r0
   1c564:	andeq	ip, r1, ip, lsl #11
   1c568:	muleq	r1, r0, r5
   1c56c:	andeq	ip, r1, ip, asr #11
   1c570:	andeq	ip, r1, r0, lsl r6
   1c574:	andeq	ip, r1, ip, ror #12
   1c578:	ldrdeq	ip, [r1], -r4
   1c57c:	andeq	ip, r1, r8, asr #14
   1c580:	andeq	ip, r1, r8, asr #15
   1c584:	andeq	ip, r1, r4, asr r8
   1c588:	andeq	ip, r1, ip, ror #17
   1c58c:	b	1ca30 <__assert_fail@plt+0xb668>
   1c590:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c594:	movw	r1, #14972	; 0x3a7c
   1c598:	movt	r1, #2
   1c59c:	str	r0, [fp, #-108]	; 0xffffff94
   1c5a0:	mov	r0, r1
   1c5a4:	bl	11254 <gettext@plt>
   1c5a8:	ldr	r1, [fp, #8]
   1c5ac:	ldr	r2, [r1]
   1c5b0:	ldr	r1, [fp, #-108]	; 0xffffff94
   1c5b4:	str	r0, [fp, #-112]	; 0xffffff90
   1c5b8:	mov	r0, r1
   1c5bc:	ldr	r1, [fp, #-112]	; 0xffffff90
   1c5c0:	bl	11278 <fprintf@plt>
   1c5c4:	str	r0, [fp, #-116]	; 0xffffff8c
   1c5c8:	b	1ca30 <__assert_fail@plt+0xb668>
   1c5cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c5d0:	movw	r1, #14988	; 0x3a8c
   1c5d4:	movt	r1, #2
   1c5d8:	str	r0, [fp, #-120]	; 0xffffff88
   1c5dc:	mov	r0, r1
   1c5e0:	bl	11254 <gettext@plt>
   1c5e4:	ldr	r1, [fp, #8]
   1c5e8:	ldr	r2, [r1]
   1c5ec:	ldr	r1, [fp, #8]
   1c5f0:	ldr	r3, [r1, #4]
   1c5f4:	ldr	r1, [fp, #-120]	; 0xffffff88
   1c5f8:	str	r0, [fp, #-124]	; 0xffffff84
   1c5fc:	mov	r0, r1
   1c600:	ldr	r1, [fp, #-124]	; 0xffffff84
   1c604:	bl	11278 <fprintf@plt>
   1c608:	str	r0, [fp, #-128]	; 0xffffff80
   1c60c:	b	1ca30 <__assert_fail@plt+0xb668>
   1c610:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c614:	movw	r1, #15011	; 0x3aa3
   1c618:	movt	r1, #2
   1c61c:	str	r0, [fp, #-132]	; 0xffffff7c
   1c620:	mov	r0, r1
   1c624:	bl	11254 <gettext@plt>
   1c628:	ldr	r1, [fp, #8]
   1c62c:	ldr	r2, [r1]
   1c630:	ldr	r1, [fp, #8]
   1c634:	ldr	r3, [r1, #4]
   1c638:	ldr	r1, [fp, #8]
   1c63c:	ldr	r1, [r1, #8]
   1c640:	ldr	lr, [fp, #-132]	; 0xffffff7c
   1c644:	str	r0, [fp, #-136]	; 0xffffff78
   1c648:	mov	r0, lr
   1c64c:	ldr	ip, [fp, #-136]	; 0xffffff78
   1c650:	str	r1, [fp, #-140]	; 0xffffff74
   1c654:	mov	r1, ip
   1c658:	ldr	r4, [fp, #-140]	; 0xffffff74
   1c65c:	str	r4, [sp]
   1c660:	bl	11278 <fprintf@plt>
   1c664:	str	r0, [sp, #144]	; 0x90
   1c668:	b	1ca30 <__assert_fail@plt+0xb668>
   1c66c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c670:	movw	r1, #15039	; 0x3abf
   1c674:	movt	r1, #2
   1c678:	str	r0, [sp, #140]	; 0x8c
   1c67c:	mov	r0, r1
   1c680:	bl	11254 <gettext@plt>
   1c684:	ldr	r1, [fp, #8]
   1c688:	ldr	r2, [r1]
   1c68c:	ldr	r1, [fp, #8]
   1c690:	ldr	r3, [r1, #4]
   1c694:	ldr	r1, [fp, #8]
   1c698:	ldr	r1, [r1, #8]
   1c69c:	ldr	lr, [fp, #8]
   1c6a0:	ldr	lr, [lr, #12]
   1c6a4:	ldr	ip, [sp, #140]	; 0x8c
   1c6a8:	str	r0, [sp, #136]	; 0x88
   1c6ac:	mov	r0, ip
   1c6b0:	ldr	r4, [sp, #136]	; 0x88
   1c6b4:	str	r1, [sp, #132]	; 0x84
   1c6b8:	mov	r1, r4
   1c6bc:	ldr	r5, [sp, #132]	; 0x84
   1c6c0:	str	r5, [sp]
   1c6c4:	str	lr, [sp, #4]
   1c6c8:	bl	11278 <fprintf@plt>
   1c6cc:	str	r0, [sp, #128]	; 0x80
   1c6d0:	b	1ca30 <__assert_fail@plt+0xb668>
   1c6d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c6d8:	movw	r1, #15071	; 0x3adf
   1c6dc:	movt	r1, #2
   1c6e0:	str	r0, [sp, #124]	; 0x7c
   1c6e4:	mov	r0, r1
   1c6e8:	bl	11254 <gettext@plt>
   1c6ec:	ldr	r1, [fp, #8]
   1c6f0:	ldr	r2, [r1]
   1c6f4:	ldr	r1, [fp, #8]
   1c6f8:	ldr	r3, [r1, #4]
   1c6fc:	ldr	r1, [fp, #8]
   1c700:	ldr	r1, [r1, #8]
   1c704:	ldr	lr, [fp, #8]
   1c708:	ldr	lr, [lr, #12]
   1c70c:	ldr	ip, [fp, #8]
   1c710:	ldr	ip, [ip, #16]
   1c714:	ldr	r4, [sp, #124]	; 0x7c
   1c718:	str	r0, [sp, #120]	; 0x78
   1c71c:	mov	r0, r4
   1c720:	ldr	r5, [sp, #120]	; 0x78
   1c724:	str	r1, [sp, #116]	; 0x74
   1c728:	mov	r1, r5
   1c72c:	ldr	r6, [sp, #116]	; 0x74
   1c730:	str	r6, [sp]
   1c734:	str	lr, [sp, #4]
   1c738:	str	ip, [sp, #8]
   1c73c:	bl	11278 <fprintf@plt>
   1c740:	str	r0, [sp, #112]	; 0x70
   1c744:	b	1ca30 <__assert_fail@plt+0xb668>
   1c748:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c74c:	movw	r1, #15107	; 0x3b03
   1c750:	movt	r1, #2
   1c754:	str	r0, [sp, #108]	; 0x6c
   1c758:	mov	r0, r1
   1c75c:	bl	11254 <gettext@plt>
   1c760:	ldr	r1, [fp, #8]
   1c764:	ldr	r2, [r1]
   1c768:	ldr	r1, [fp, #8]
   1c76c:	ldr	r3, [r1, #4]
   1c770:	ldr	r1, [fp, #8]
   1c774:	ldr	r1, [r1, #8]
   1c778:	ldr	lr, [fp, #8]
   1c77c:	ldr	lr, [lr, #12]
   1c780:	ldr	ip, [fp, #8]
   1c784:	ldr	ip, [ip, #16]
   1c788:	ldr	r4, [fp, #8]
   1c78c:	ldr	r4, [r4, #20]
   1c790:	ldr	r5, [sp, #108]	; 0x6c
   1c794:	str	r0, [sp, #104]	; 0x68
   1c798:	mov	r0, r5
   1c79c:	ldr	r6, [sp, #104]	; 0x68
   1c7a0:	str	r1, [sp, #100]	; 0x64
   1c7a4:	mov	r1, r6
   1c7a8:	ldr	r7, [sp, #100]	; 0x64
   1c7ac:	str	r7, [sp]
   1c7b0:	str	lr, [sp, #4]
   1c7b4:	str	ip, [sp, #8]
   1c7b8:	str	r4, [sp, #12]
   1c7bc:	bl	11278 <fprintf@plt>
   1c7c0:	str	r0, [sp, #96]	; 0x60
   1c7c4:	b	1ca30 <__assert_fail@plt+0xb668>
   1c7c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c7cc:	movw	r1, #15147	; 0x3b2b
   1c7d0:	movt	r1, #2
   1c7d4:	str	r0, [sp, #92]	; 0x5c
   1c7d8:	mov	r0, r1
   1c7dc:	bl	11254 <gettext@plt>
   1c7e0:	ldr	r1, [fp, #8]
   1c7e4:	ldr	r2, [r1]
   1c7e8:	ldr	r1, [fp, #8]
   1c7ec:	ldr	r3, [r1, #4]
   1c7f0:	ldr	r1, [fp, #8]
   1c7f4:	ldr	r1, [r1, #8]
   1c7f8:	ldr	lr, [fp, #8]
   1c7fc:	ldr	lr, [lr, #12]
   1c800:	ldr	ip, [fp, #8]
   1c804:	ldr	ip, [ip, #16]
   1c808:	ldr	r4, [fp, #8]
   1c80c:	ldr	r4, [r4, #20]
   1c810:	ldr	r5, [fp, #8]
   1c814:	ldr	r5, [r5, #24]
   1c818:	ldr	r6, [sp, #92]	; 0x5c
   1c81c:	str	r0, [sp, #88]	; 0x58
   1c820:	mov	r0, r6
   1c824:	ldr	r7, [sp, #88]	; 0x58
   1c828:	str	r1, [sp, #84]	; 0x54
   1c82c:	mov	r1, r7
   1c830:	ldr	r8, [sp, #84]	; 0x54
   1c834:	str	r8, [sp]
   1c838:	str	lr, [sp, #4]
   1c83c:	str	ip, [sp, #8]
   1c840:	str	r4, [sp, #12]
   1c844:	str	r5, [sp, #16]
   1c848:	bl	11278 <fprintf@plt>
   1c84c:	str	r0, [sp, #80]	; 0x50
   1c850:	b	1ca30 <__assert_fail@plt+0xb668>
   1c854:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c858:	movw	r1, #15191	; 0x3b57
   1c85c:	movt	r1, #2
   1c860:	str	r0, [sp, #76]	; 0x4c
   1c864:	mov	r0, r1
   1c868:	bl	11254 <gettext@plt>
   1c86c:	ldr	r1, [fp, #8]
   1c870:	ldr	r2, [r1]
   1c874:	ldr	r1, [fp, #8]
   1c878:	ldr	r3, [r1, #4]
   1c87c:	ldr	r1, [fp, #8]
   1c880:	ldr	r1, [r1, #8]
   1c884:	ldr	lr, [fp, #8]
   1c888:	ldr	lr, [lr, #12]
   1c88c:	ldr	ip, [fp, #8]
   1c890:	ldr	ip, [ip, #16]
   1c894:	ldr	r4, [fp, #8]
   1c898:	ldr	r4, [r4, #20]
   1c89c:	ldr	r5, [fp, #8]
   1c8a0:	ldr	r5, [r5, #24]
   1c8a4:	ldr	r6, [fp, #8]
   1c8a8:	ldr	r6, [r6, #28]
   1c8ac:	ldr	r7, [sp, #76]	; 0x4c
   1c8b0:	str	r0, [sp, #72]	; 0x48
   1c8b4:	mov	r0, r7
   1c8b8:	ldr	r8, [sp, #72]	; 0x48
   1c8bc:	str	r1, [sp, #68]	; 0x44
   1c8c0:	mov	r1, r8
   1c8c4:	ldr	r9, [sp, #68]	; 0x44
   1c8c8:	str	r9, [sp]
   1c8cc:	str	lr, [sp, #4]
   1c8d0:	str	ip, [sp, #8]
   1c8d4:	str	r4, [sp, #12]
   1c8d8:	str	r5, [sp, #16]
   1c8dc:	str	r6, [sp, #20]
   1c8e0:	bl	11278 <fprintf@plt>
   1c8e4:	str	r0, [sp, #64]	; 0x40
   1c8e8:	b	1ca30 <__assert_fail@plt+0xb668>
   1c8ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c8f0:	movw	r1, #15239	; 0x3b87
   1c8f4:	movt	r1, #2
   1c8f8:	str	r0, [sp, #60]	; 0x3c
   1c8fc:	mov	r0, r1
   1c900:	bl	11254 <gettext@plt>
   1c904:	ldr	r1, [fp, #8]
   1c908:	ldr	r2, [r1]
   1c90c:	ldr	r1, [fp, #8]
   1c910:	ldr	r3, [r1, #4]
   1c914:	ldr	r1, [fp, #8]
   1c918:	ldr	r1, [r1, #8]
   1c91c:	ldr	lr, [fp, #8]
   1c920:	ldr	lr, [lr, #12]
   1c924:	ldr	ip, [fp, #8]
   1c928:	ldr	ip, [ip, #16]
   1c92c:	ldr	r4, [fp, #8]
   1c930:	ldr	r4, [r4, #20]
   1c934:	ldr	r5, [fp, #8]
   1c938:	ldr	r5, [r5, #24]
   1c93c:	ldr	r6, [fp, #8]
   1c940:	ldr	r6, [r6, #28]
   1c944:	ldr	r7, [fp, #8]
   1c948:	ldr	r7, [r7, #32]
   1c94c:	ldr	r8, [sp, #60]	; 0x3c
   1c950:	str	r0, [sp, #56]	; 0x38
   1c954:	mov	r0, r8
   1c958:	ldr	r9, [sp, #56]	; 0x38
   1c95c:	str	r1, [sp, #52]	; 0x34
   1c960:	mov	r1, r9
   1c964:	ldr	sl, [sp, #52]	; 0x34
   1c968:	str	sl, [sp]
   1c96c:	str	lr, [sp, #4]
   1c970:	str	ip, [sp, #8]
   1c974:	str	r4, [sp, #12]
   1c978:	str	r5, [sp, #16]
   1c97c:	str	r6, [sp, #20]
   1c980:	str	r7, [sp, #24]
   1c984:	bl	11278 <fprintf@plt>
   1c988:	str	r0, [sp, #48]	; 0x30
   1c98c:	b	1ca30 <__assert_fail@plt+0xb668>
   1c990:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c994:	movw	r1, #15291	; 0x3bbb
   1c998:	movt	r1, #2
   1c99c:	str	r0, [sp, #44]	; 0x2c
   1c9a0:	mov	r0, r1
   1c9a4:	bl	11254 <gettext@plt>
   1c9a8:	ldr	r1, [fp, #8]
   1c9ac:	ldr	r2, [r1]
   1c9b0:	ldr	r1, [fp, #8]
   1c9b4:	ldr	r3, [r1, #4]
   1c9b8:	ldr	r1, [fp, #8]
   1c9bc:	ldr	r1, [r1, #8]
   1c9c0:	ldr	lr, [fp, #8]
   1c9c4:	ldr	lr, [lr, #12]
   1c9c8:	ldr	ip, [fp, #8]
   1c9cc:	ldr	ip, [ip, #16]
   1c9d0:	ldr	r4, [fp, #8]
   1c9d4:	ldr	r4, [r4, #20]
   1c9d8:	ldr	r5, [fp, #8]
   1c9dc:	ldr	r5, [r5, #24]
   1c9e0:	ldr	r6, [fp, #8]
   1c9e4:	ldr	r6, [r6, #28]
   1c9e8:	ldr	r7, [fp, #8]
   1c9ec:	ldr	r7, [r7, #32]
   1c9f0:	ldr	r8, [sp, #44]	; 0x2c
   1c9f4:	str	r0, [sp, #40]	; 0x28
   1c9f8:	mov	r0, r8
   1c9fc:	ldr	r9, [sp, #40]	; 0x28
   1ca00:	str	r1, [sp, #36]	; 0x24
   1ca04:	mov	r1, r9
   1ca08:	ldr	sl, [sp, #36]	; 0x24
   1ca0c:	str	sl, [sp]
   1ca10:	str	lr, [sp, #4]
   1ca14:	str	ip, [sp, #8]
   1ca18:	str	r4, [sp, #12]
   1ca1c:	str	r5, [sp, #16]
   1ca20:	str	r6, [sp, #20]
   1ca24:	str	r7, [sp, #24]
   1ca28:	bl	11278 <fprintf@plt>
   1ca2c:	str	r0, [sp, #32]
   1ca30:	sub	sp, fp, #28
   1ca34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ca38:	push	{fp, lr}
   1ca3c:	mov	fp, sp
   1ca40:	sub	sp, sp, #32
   1ca44:	ldr	ip, [fp, #8]
   1ca48:	str	r0, [fp, #-4]
   1ca4c:	str	r1, [fp, #-8]
   1ca50:	str	r2, [fp, #-12]
   1ca54:	str	r3, [sp, #16]
   1ca58:	movw	r0, #0
   1ca5c:	str	r0, [sp, #12]
   1ca60:	str	ip, [sp, #8]
   1ca64:	ldr	r0, [fp, #8]
   1ca68:	ldr	r1, [sp, #12]
   1ca6c:	add	r0, r0, r1, lsl #2
   1ca70:	ldr	r0, [r0]
   1ca74:	movw	r1, #0
   1ca78:	cmp	r0, r1
   1ca7c:	beq	1ca94 <__assert_fail@plt+0xb6cc>
   1ca80:	b	1ca84 <__assert_fail@plt+0xb6bc>
   1ca84:	ldr	r0, [sp, #12]
   1ca88:	add	r0, r0, #1
   1ca8c:	str	r0, [sp, #12]
   1ca90:	b	1ca64 <__assert_fail@plt+0xb69c>
   1ca94:	ldr	r0, [fp, #-4]
   1ca98:	ldr	r1, [fp, #-8]
   1ca9c:	ldr	r2, [fp, #-12]
   1caa0:	ldr	r3, [sp, #16]
   1caa4:	ldr	ip, [fp, #8]
   1caa8:	ldr	lr, [sp, #12]
   1caac:	str	ip, [sp]
   1cab0:	str	lr, [sp, #4]
   1cab4:	bl	1c414 <__assert_fail@plt+0xb04c>
   1cab8:	mov	sp, fp
   1cabc:	pop	{fp, pc}
   1cac0:	push	{fp, lr}
   1cac4:	mov	fp, sp
   1cac8:	sub	sp, sp, #80	; 0x50
   1cacc:	ldr	ip, [fp, #8]
   1cad0:	str	ip, [fp, #-4]
   1cad4:	str	r0, [fp, #-8]
   1cad8:	str	r1, [fp, #-12]
   1cadc:	str	r2, [fp, #-16]
   1cae0:	str	r3, [fp, #-20]	; 0xffffffec
   1cae4:	movw	r0, #0
   1cae8:	str	r0, [fp, #-24]	; 0xffffffe8
   1caec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1caf0:	cmp	r0, #10
   1caf4:	movw	r0, #0
   1caf8:	str	r0, [sp, #12]
   1cafc:	bcs	1cb34 <__assert_fail@plt+0xb76c>
   1cb00:	ldr	r0, [fp, #-4]
   1cb04:	add	r1, r0, #4
   1cb08:	str	r1, [fp, #-4]
   1cb0c:	ldr	r0, [r0]
   1cb10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cb14:	add	r2, sp, #16
   1cb18:	add	r1, r2, r1, lsl #2
   1cb1c:	str	r0, [r1]
   1cb20:	movw	r1, #0
   1cb24:	cmp	r0, r1
   1cb28:	movw	r0, #0
   1cb2c:	movne	r0, #1
   1cb30:	str	r0, [sp, #12]
   1cb34:	ldr	r0, [sp, #12]
   1cb38:	tst	r0, #1
   1cb3c:	beq	1cb54 <__assert_fail@plt+0xb78c>
   1cb40:	b	1cb44 <__assert_fail@plt+0xb77c>
   1cb44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cb48:	add	r0, r0, #1
   1cb4c:	str	r0, [fp, #-24]	; 0xffffffe8
   1cb50:	b	1caec <__assert_fail@plt+0xb724>
   1cb54:	add	r0, sp, #16
   1cb58:	ldr	r1, [fp, #-8]
   1cb5c:	ldr	r2, [fp, #-12]
   1cb60:	ldr	r3, [fp, #-16]
   1cb64:	ldr	ip, [fp, #-20]	; 0xffffffec
   1cb68:	ldr	lr, [fp, #-24]	; 0xffffffe8
   1cb6c:	str	r0, [sp, #8]
   1cb70:	mov	r0, r1
   1cb74:	mov	r1, r2
   1cb78:	mov	r2, r3
   1cb7c:	mov	r3, ip
   1cb80:	ldr	ip, [sp, #8]
   1cb84:	str	ip, [sp]
   1cb88:	str	lr, [sp, #4]
   1cb8c:	bl	1c414 <__assert_fail@plt+0xb04c>
   1cb90:	mov	sp, fp
   1cb94:	pop	{fp, pc}
   1cb98:	push	{fp, lr}
   1cb9c:	mov	fp, sp
   1cba0:	sub	sp, sp, #32
   1cba4:	str	r0, [fp, #-4]
   1cba8:	str	r1, [fp, #-8]
   1cbac:	str	r2, [fp, #-12]
   1cbb0:	str	r3, [sp, #16]
   1cbb4:	add	r0, fp, #8
   1cbb8:	str	r0, [sp, #12]
   1cbbc:	ldr	r0, [fp, #-4]
   1cbc0:	ldr	r1, [fp, #-8]
   1cbc4:	ldr	r2, [fp, #-12]
   1cbc8:	ldr	r3, [sp, #16]
   1cbcc:	ldr	ip, [sp, #12]
   1cbd0:	mov	lr, sp
   1cbd4:	str	ip, [lr]
   1cbd8:	bl	1cac0 <__assert_fail@plt+0xb6f8>
   1cbdc:	add	r0, sp, #12
   1cbe0:	str	r0, [sp, #8]
   1cbe4:	mov	sp, fp
   1cbe8:	pop	{fp, pc}
   1cbec:	push	{fp, lr}
   1cbf0:	mov	fp, sp
   1cbf4:	sub	sp, sp, #16
   1cbf8:	movw	r0, #16764	; 0x417c
   1cbfc:	movt	r0, #3
   1cc00:	ldr	r1, [r0]
   1cc04:	movw	r0, #11997	; 0x2edd
   1cc08:	movt	r0, #2
   1cc0c:	bl	110ec <fputs_unlocked@plt>
   1cc10:	movw	r1, #15351	; 0x3bf7
   1cc14:	movt	r1, #2
   1cc18:	str	r0, [fp, #-4]
   1cc1c:	mov	r0, r1
   1cc20:	bl	11254 <gettext@plt>
   1cc24:	movw	r1, #15371	; 0x3c0b
   1cc28:	movt	r1, #2
   1cc2c:	bl	11110 <printf@plt>
   1cc30:	movw	r1, #15393	; 0x3c21
   1cc34:	movt	r1, #2
   1cc38:	str	r0, [sp, #8]
   1cc3c:	mov	r0, r1
   1cc40:	bl	11254 <gettext@plt>
   1cc44:	movw	r1, #12733	; 0x31bd
   1cc48:	movt	r1, #2
   1cc4c:	movw	r2, #13027	; 0x32e3
   1cc50:	movt	r2, #2
   1cc54:	bl	11110 <printf@plt>
   1cc58:	movw	r1, #15413	; 0x3c35
   1cc5c:	movt	r1, #2
   1cc60:	str	r0, [sp, #4]
   1cc64:	mov	r0, r1
   1cc68:	bl	11254 <gettext@plt>
   1cc6c:	movw	r1, #15452	; 0x3c5c
   1cc70:	movt	r1, #2
   1cc74:	bl	11110 <printf@plt>
   1cc78:	str	r0, [sp]
   1cc7c:	mov	sp, fp
   1cc80:	pop	{fp, pc}
   1cc84:	push	{fp, lr}
   1cc88:	mov	fp, sp
   1cc8c:	sub	sp, sp, #16
   1cc90:	str	r0, [fp, #-4]
   1cc94:	str	r1, [sp, #8]
   1cc98:	str	r2, [sp, #4]
   1cc9c:	ldr	r0, [fp, #-4]
   1cca0:	ldr	r1, [sp, #8]
   1cca4:	ldr	r2, [sp, #4]
   1cca8:	bl	1ccb4 <__assert_fail@plt+0xb8ec>
   1ccac:	mov	sp, fp
   1ccb0:	pop	{fp, pc}
   1ccb4:	push	{fp, lr}
   1ccb8:	mov	fp, sp
   1ccbc:	sub	sp, sp, #16
   1ccc0:	str	r0, [fp, #-4]
   1ccc4:	str	r1, [sp, #8]
   1ccc8:	str	r2, [sp, #4]
   1cccc:	ldr	r0, [fp, #-4]
   1ccd0:	ldr	r1, [sp, #8]
   1ccd4:	ldr	r2, [sp, #4]
   1ccd8:	bl	20eb0 <__assert_fail@plt+0xfae8>
   1ccdc:	str	r0, [sp]
   1cce0:	ldr	r0, [sp]
   1cce4:	movw	r1, #0
   1cce8:	cmp	r0, r1
   1ccec:	bne	1cd1c <__assert_fail@plt+0xb954>
   1ccf0:	ldr	r0, [fp, #-4]
   1ccf4:	movw	r1, #0
   1ccf8:	cmp	r0, r1
   1ccfc:	beq	1cd18 <__assert_fail@plt+0xb950>
   1cd00:	ldr	r0, [sp, #8]
   1cd04:	cmp	r0, #0
   1cd08:	beq	1cd1c <__assert_fail@plt+0xb954>
   1cd0c:	ldr	r0, [sp, #4]
   1cd10:	cmp	r0, #0
   1cd14:	beq	1cd1c <__assert_fail@plt+0xb954>
   1cd18:	bl	1fb04 <__assert_fail@plt+0xe73c>
   1cd1c:	ldr	r0, [sp]
   1cd20:	mov	sp, fp
   1cd24:	pop	{fp, pc}
   1cd28:	push	{fp, lr}
   1cd2c:	mov	fp, sp
   1cd30:	sub	sp, sp, #8
   1cd34:	str	r0, [sp, #4]
   1cd38:	ldr	r0, [sp, #4]
   1cd3c:	bl	1fd18 <__assert_fail@plt+0xe950>
   1cd40:	bl	1cd4c <__assert_fail@plt+0xb984>
   1cd44:	mov	sp, fp
   1cd48:	pop	{fp, pc}
   1cd4c:	push	{fp, lr}
   1cd50:	mov	fp, sp
   1cd54:	sub	sp, sp, #8
   1cd58:	str	r0, [sp, #4]
   1cd5c:	ldr	r0, [sp, #4]
   1cd60:	movw	r1, #0
   1cd64:	cmp	r0, r1
   1cd68:	bne	1cd70 <__assert_fail@plt+0xb9a8>
   1cd6c:	bl	1fb04 <__assert_fail@plt+0xe73c>
   1cd70:	ldr	r0, [sp, #4]
   1cd74:	mov	sp, fp
   1cd78:	pop	{fp, pc}
   1cd7c:	push	{fp, lr}
   1cd80:	mov	fp, sp
   1cd84:	sub	sp, sp, #8
   1cd88:	str	r0, [sp, #4]
   1cd8c:	ldr	r0, [sp, #4]
   1cd90:	bl	20bec <__assert_fail@plt+0xf824>
   1cd94:	bl	1cd4c <__assert_fail@plt+0xb984>
   1cd98:	mov	sp, fp
   1cd9c:	pop	{fp, pc}
   1cda0:	push	{fp, lr}
   1cda4:	mov	fp, sp
   1cda8:	sub	sp, sp, #8
   1cdac:	str	r0, [sp, #4]
   1cdb0:	ldr	r0, [sp, #4]
   1cdb4:	bl	1cd28 <__assert_fail@plt+0xb960>
   1cdb8:	mov	sp, fp
   1cdbc:	pop	{fp, pc}
   1cdc0:	push	{fp, lr}
   1cdc4:	mov	fp, sp
   1cdc8:	sub	sp, sp, #16
   1cdcc:	str	r0, [fp, #-4]
   1cdd0:	str	r1, [sp, #8]
   1cdd4:	ldr	r0, [fp, #-4]
   1cdd8:	ldr	r1, [sp, #8]
   1cddc:	bl	1fd88 <__assert_fail@plt+0xe9c0>
   1cde0:	str	r0, [sp, #4]
   1cde4:	ldr	r0, [sp, #4]
   1cde8:	movw	r1, #0
   1cdec:	cmp	r0, r1
   1cdf0:	bne	1ce14 <__assert_fail@plt+0xba4c>
   1cdf4:	ldr	r0, [fp, #-4]
   1cdf8:	movw	r1, #0
   1cdfc:	cmp	r0, r1
   1ce00:	beq	1ce10 <__assert_fail@plt+0xba48>
   1ce04:	ldr	r0, [sp, #8]
   1ce08:	cmp	r0, #0
   1ce0c:	beq	1ce14 <__assert_fail@plt+0xba4c>
   1ce10:	bl	1fb04 <__assert_fail@plt+0xe73c>
   1ce14:	ldr	r0, [sp, #4]
   1ce18:	mov	sp, fp
   1ce1c:	pop	{fp, pc}
   1ce20:	push	{fp, lr}
   1ce24:	mov	fp, sp
   1ce28:	sub	sp, sp, #8
   1ce2c:	str	r0, [sp, #4]
   1ce30:	str	r1, [sp]
   1ce34:	ldr	r0, [sp, #4]
   1ce38:	ldr	r1, [sp]
   1ce3c:	bl	20c2c <__assert_fail@plt+0xf864>
   1ce40:	bl	1cd4c <__assert_fail@plt+0xb984>
   1ce44:	mov	sp, fp
   1ce48:	pop	{fp, pc}
   1ce4c:	push	{fp, lr}
   1ce50:	mov	fp, sp
   1ce54:	sub	sp, sp, #16
   1ce58:	str	r0, [fp, #-4]
   1ce5c:	str	r1, [sp, #8]
   1ce60:	str	r2, [sp, #4]
   1ce64:	ldr	r0, [fp, #-4]
   1ce68:	ldr	r1, [sp, #8]
   1ce6c:	ldr	r2, [sp, #4]
   1ce70:	bl	20d24 <__assert_fail@plt+0xf95c>
   1ce74:	bl	1cd4c <__assert_fail@plt+0xb984>
   1ce78:	mov	sp, fp
   1ce7c:	pop	{fp, pc}
   1ce80:	push	{fp, lr}
   1ce84:	mov	fp, sp
   1ce88:	sub	sp, sp, #8
   1ce8c:	str	r0, [sp, #4]
   1ce90:	str	r1, [sp]
   1ce94:	ldr	r1, [sp, #4]
   1ce98:	ldr	r2, [sp]
   1ce9c:	movw	r0, #0
   1cea0:	bl	1ccb4 <__assert_fail@plt+0xb8ec>
   1cea4:	mov	sp, fp
   1cea8:	pop	{fp, pc}
   1ceac:	push	{fp, lr}
   1ceb0:	mov	fp, sp
   1ceb4:	sub	sp, sp, #8
   1ceb8:	str	r0, [sp, #4]
   1cebc:	str	r1, [sp]
   1cec0:	ldr	r1, [sp, #4]
   1cec4:	ldr	r2, [sp]
   1cec8:	movw	r0, #0
   1cecc:	bl	1ce4c <__assert_fail@plt+0xba84>
   1ced0:	mov	sp, fp
   1ced4:	pop	{fp, pc}
   1ced8:	push	{fp, lr}
   1cedc:	mov	fp, sp
   1cee0:	sub	sp, sp, #8
   1cee4:	str	r0, [sp, #4]
   1cee8:	str	r1, [sp]
   1ceec:	ldr	r0, [sp, #4]
   1cef0:	ldr	r1, [sp]
   1cef4:	movw	r2, #1
   1cef8:	bl	1cf04 <__assert_fail@plt+0xbb3c>
   1cefc:	mov	sp, fp
   1cf00:	pop	{fp, pc}
   1cf04:	push	{fp, lr}
   1cf08:	mov	fp, sp
   1cf0c:	sub	sp, sp, #16
   1cf10:	str	r0, [fp, #-4]
   1cf14:	str	r1, [sp, #8]
   1cf18:	str	r2, [sp, #4]
   1cf1c:	ldr	r0, [sp, #8]
   1cf20:	ldr	r0, [r0]
   1cf24:	str	r0, [sp]
   1cf28:	ldr	r0, [fp, #-4]
   1cf2c:	movw	r1, #0
   1cf30:	cmp	r0, r1
   1cf34:	bne	1cf80 <__assert_fail@plt+0xbbb8>
   1cf38:	ldr	r0, [sp]
   1cf3c:	cmp	r0, #0
   1cf40:	bne	1cf7c <__assert_fail@plt+0xbbb4>
   1cf44:	ldr	r0, [sp, #4]
   1cf48:	movw	r1, #64	; 0x40
   1cf4c:	udiv	r0, r1, r0
   1cf50:	str	r0, [sp]
   1cf54:	ldr	r0, [sp]
   1cf58:	cmp	r0, #0
   1cf5c:	movw	r0, #0
   1cf60:	movne	r0, #1
   1cf64:	mvn	r1, #0
   1cf68:	eor	r0, r0, r1
   1cf6c:	and	r0, r0, #1
   1cf70:	ldr	r1, [sp]
   1cf74:	add	r0, r1, r0
   1cf78:	str	r0, [sp]
   1cf7c:	b	1cfb0 <__assert_fail@plt+0xbbe8>
   1cf80:	ldr	r0, [sp]
   1cf84:	ldr	r1, [sp]
   1cf88:	lsr	r1, r1, #1
   1cf8c:	add	r1, r1, #1
   1cf90:	adds	r0, r0, r1
   1cf94:	mov	r1, #0
   1cf98:	adc	r1, r1, #0
   1cf9c:	str	r0, [sp]
   1cfa0:	tst	r1, #1
   1cfa4:	beq	1cfac <__assert_fail@plt+0xbbe4>
   1cfa8:	bl	1fb04 <__assert_fail@plt+0xe73c>
   1cfac:	b	1cfb0 <__assert_fail@plt+0xbbe8>
   1cfb0:	ldr	r0, [fp, #-4]
   1cfb4:	ldr	r1, [sp]
   1cfb8:	ldr	r2, [sp, #4]
   1cfbc:	bl	1ccb4 <__assert_fail@plt+0xb8ec>
   1cfc0:	str	r0, [fp, #-4]
   1cfc4:	ldr	r0, [sp]
   1cfc8:	ldr	r1, [sp, #8]
   1cfcc:	str	r0, [r1]
   1cfd0:	ldr	r0, [fp, #-4]
   1cfd4:	mov	sp, fp
   1cfd8:	pop	{fp, pc}
   1cfdc:	push	{fp, lr}
   1cfe0:	mov	fp, sp
   1cfe4:	sub	sp, sp, #376	; 0x178
   1cfe8:	ldr	ip, [fp, #8]
   1cfec:	str	r0, [fp, #-4]
   1cff0:	str	r1, [fp, #-8]
   1cff4:	str	r2, [fp, #-12]
   1cff8:	str	r3, [fp, #-16]
   1cffc:	ldr	r0, [fp, #-8]
   1d000:	ldr	r0, [r0]
   1d004:	str	r0, [fp, #-20]	; 0xffffffec
   1d008:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d00c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d010:	asr	r1, r1, #1
   1d014:	add	r1, r0, r1
   1d018:	mov	r2, #1
   1d01c:	cmp	r1, r0
   1d020:	movwvc	r2, #0
   1d024:	str	r1, [fp, #-24]	; 0xffffffe8
   1d028:	tst	r2, #1
   1d02c:	str	ip, [fp, #-36]	; 0xffffffdc
   1d030:	beq	1d03c <__assert_fail@plt+0xbc74>
   1d034:	ldr	r0, [pc, #4044]	; 1e008 <__assert_fail@plt+0xcc40>
   1d038:	str	r0, [fp, #-24]	; 0xffffffe8
   1d03c:	ldr	r0, [fp, #-16]
   1d040:	movw	r1, #0
   1d044:	cmp	r1, r0
   1d048:	bgt	1d064 <__assert_fail@plt+0xbc9c>
   1d04c:	ldr	r0, [fp, #-16]
   1d050:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d054:	cmp	r0, r1
   1d058:	bge	1d064 <__assert_fail@plt+0xbc9c>
   1d05c:	ldr	r0, [fp, #-16]
   1d060:	str	r0, [fp, #-24]	; 0xffffffe8
   1d064:	b	1d43c <__assert_fail@plt+0xc074>
   1d068:	b	1d06c <__assert_fail@plt+0xbca4>
   1d06c:	ldr	r0, [fp, #8]
   1d070:	cmp	r0, #0
   1d074:	bge	1d188 <__assert_fail@plt+0xbdc0>
   1d078:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d07c:	cmp	r0, #0
   1d080:	bge	1d10c <__assert_fail@plt+0xbd44>
   1d084:	b	1d088 <__assert_fail@plt+0xbcc0>
   1d088:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d08c:	ldr	r1, [fp, #8]
   1d090:	movw	r2, #127	; 0x7f
   1d094:	sdiv	r1, r2, r1
   1d098:	cmp	r0, r1
   1d09c:	blt	1d228 <__assert_fail@plt+0xbe60>
   1d0a0:	b	1d240 <__assert_fail@plt+0xbe78>
   1d0a4:	b	1d0a8 <__assert_fail@plt+0xbce0>
   1d0a8:	ldr	r0, [pc, #4076]	; 1e09c <__assert_fail@plt+0xccd4>
   1d0ac:	ldr	r1, [fp, #8]
   1d0b0:	cmp	r1, r0
   1d0b4:	blt	1d0cc <__assert_fail@plt+0xbd04>
   1d0b8:	b	1d0d8 <__assert_fail@plt+0xbd10>
   1d0bc:	ldr	r0, [fp, #8]
   1d0c0:	movw	r1, #0
   1d0c4:	cmp	r1, r0
   1d0c8:	bge	1d0d8 <__assert_fail@plt+0xbd10>
   1d0cc:	movw	r0, #0
   1d0d0:	str	r0, [fp, #-40]	; 0xffffffd8
   1d0d4:	b	1d0f0 <__assert_fail@plt+0xbd28>
   1d0d8:	ldr	r0, [fp, #8]
   1d0dc:	movw	r1, #0
   1d0e0:	sub	r0, r1, r0
   1d0e4:	movw	r1, #127	; 0x7f
   1d0e8:	sdiv	r0, r1, r0
   1d0ec:	str	r0, [fp, #-40]	; 0xffffffd8
   1d0f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1d0f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d0f8:	mvn	r2, #0
   1d0fc:	sub	r1, r2, r1
   1d100:	cmp	r0, r1
   1d104:	ble	1d228 <__assert_fail@plt+0xbe60>
   1d108:	b	1d240 <__assert_fail@plt+0xbe78>
   1d10c:	b	1d110 <__assert_fail@plt+0xbd48>
   1d110:	b	1d16c <__assert_fail@plt+0xbda4>
   1d114:	b	1d16c <__assert_fail@plt+0xbda4>
   1d118:	ldr	r0, [fp, #8]
   1d11c:	cmn	r0, #1
   1d120:	bne	1d16c <__assert_fail@plt+0xbda4>
   1d124:	b	1d128 <__assert_fail@plt+0xbd60>
   1d128:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d12c:	mvn	r1, #127	; 0x7f
   1d130:	add	r0, r0, r1
   1d134:	movw	r1, #0
   1d138:	cmp	r1, r0
   1d13c:	blt	1d228 <__assert_fail@plt+0xbe60>
   1d140:	b	1d240 <__assert_fail@plt+0xbe78>
   1d144:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d148:	movw	r1, #0
   1d14c:	cmp	r1, r0
   1d150:	bge	1d240 <__assert_fail@plt+0xbe78>
   1d154:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d158:	sub	r0, r0, #1
   1d15c:	movw	r1, #127	; 0x7f
   1d160:	cmp	r1, r0
   1d164:	blt	1d228 <__assert_fail@plt+0xbe60>
   1d168:	b	1d240 <__assert_fail@plt+0xbe78>
   1d16c:	ldr	r0, [fp, #8]
   1d170:	mvn	r1, #127	; 0x7f
   1d174:	sdiv	r0, r1, r0
   1d178:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d17c:	cmp	r0, r1
   1d180:	blt	1d228 <__assert_fail@plt+0xbe60>
   1d184:	b	1d240 <__assert_fail@plt+0xbe78>
   1d188:	ldr	r0, [fp, #8]
   1d18c:	cmp	r0, #0
   1d190:	bne	1d198 <__assert_fail@plt+0xbdd0>
   1d194:	b	1d240 <__assert_fail@plt+0xbe78>
   1d198:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d19c:	cmp	r0, #0
   1d1a0:	bge	1d210 <__assert_fail@plt+0xbe48>
   1d1a4:	b	1d1a8 <__assert_fail@plt+0xbde0>
   1d1a8:	b	1d1f4 <__assert_fail@plt+0xbe2c>
   1d1ac:	b	1d1f4 <__assert_fail@plt+0xbe2c>
   1d1b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d1b4:	cmn	r0, #1
   1d1b8:	bne	1d1f4 <__assert_fail@plt+0xbe2c>
   1d1bc:	b	1d1c0 <__assert_fail@plt+0xbdf8>
   1d1c0:	ldr	r0, [fp, #8]
   1d1c4:	mvn	r1, #127	; 0x7f
   1d1c8:	add	r0, r0, r1
   1d1cc:	movw	r1, #0
   1d1d0:	cmp	r1, r0
   1d1d4:	blt	1d228 <__assert_fail@plt+0xbe60>
   1d1d8:	b	1d240 <__assert_fail@plt+0xbe78>
   1d1dc:	ldr	r0, [fp, #8]
   1d1e0:	sub	r0, r0, #1
   1d1e4:	movw	r1, #127	; 0x7f
   1d1e8:	cmp	r1, r0
   1d1ec:	blt	1d228 <__assert_fail@plt+0xbe60>
   1d1f0:	b	1d240 <__assert_fail@plt+0xbe78>
   1d1f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d1f8:	mvn	r1, #127	; 0x7f
   1d1fc:	sdiv	r0, r1, r0
   1d200:	ldr	r1, [fp, #8]
   1d204:	cmp	r0, r1
   1d208:	blt	1d228 <__assert_fail@plt+0xbe60>
   1d20c:	b	1d240 <__assert_fail@plt+0xbe78>
   1d210:	ldr	r0, [fp, #8]
   1d214:	movw	r1, #127	; 0x7f
   1d218:	sdiv	r0, r1, r0
   1d21c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d220:	cmp	r0, r1
   1d224:	bge	1d240 <__assert_fail@plt+0xbe78>
   1d228:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d22c:	ldr	r1, [fp, #8]
   1d230:	mul	r0, r0, r1
   1d234:	sxtb	r0, r0
   1d238:	str	r0, [fp, #-28]	; 0xffffffe4
   1d23c:	b	1e454 <__assert_fail@plt+0xd08c>
   1d240:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d244:	ldr	r1, [fp, #8]
   1d248:	mul	r0, r0, r1
   1d24c:	sxtb	r0, r0
   1d250:	str	r0, [fp, #-28]	; 0xffffffe4
   1d254:	b	1e464 <__assert_fail@plt+0xd09c>
   1d258:	ldr	r0, [fp, #8]
   1d25c:	cmp	r0, #0
   1d260:	bge	1d370 <__assert_fail@plt+0xbfa8>
   1d264:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d268:	cmp	r0, #0
   1d26c:	bge	1d2f8 <__assert_fail@plt+0xbf30>
   1d270:	b	1d274 <__assert_fail@plt+0xbeac>
   1d274:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d278:	ldr	r1, [fp, #8]
   1d27c:	movw	r2, #255	; 0xff
   1d280:	sdiv	r1, r2, r1
   1d284:	cmp	r0, r1
   1d288:	blt	1d40c <__assert_fail@plt+0xc044>
   1d28c:	b	1d424 <__assert_fail@plt+0xc05c>
   1d290:	b	1d294 <__assert_fail@plt+0xbecc>
   1d294:	ldr	r0, [pc, #3584]	; 1e09c <__assert_fail@plt+0xccd4>
   1d298:	ldr	r1, [fp, #8]
   1d29c:	cmp	r1, r0
   1d2a0:	blt	1d2b8 <__assert_fail@plt+0xbef0>
   1d2a4:	b	1d2c4 <__assert_fail@plt+0xbefc>
   1d2a8:	ldr	r0, [fp, #8]
   1d2ac:	movw	r1, #0
   1d2b0:	cmp	r1, r0
   1d2b4:	bge	1d2c4 <__assert_fail@plt+0xbefc>
   1d2b8:	movw	r0, #0
   1d2bc:	str	r0, [fp, #-44]	; 0xffffffd4
   1d2c0:	b	1d2dc <__assert_fail@plt+0xbf14>
   1d2c4:	ldr	r0, [fp, #8]
   1d2c8:	movw	r1, #0
   1d2cc:	sub	r0, r1, r0
   1d2d0:	movw	r1, #255	; 0xff
   1d2d4:	sdiv	r0, r1, r0
   1d2d8:	str	r0, [fp, #-44]	; 0xffffffd4
   1d2dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d2e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d2e4:	mvn	r2, #0
   1d2e8:	sub	r1, r2, r1
   1d2ec:	cmp	r0, r1
   1d2f0:	ble	1d40c <__assert_fail@plt+0xc044>
   1d2f4:	b	1d424 <__assert_fail@plt+0xc05c>
   1d2f8:	b	1d2fc <__assert_fail@plt+0xbf34>
   1d2fc:	b	1d354 <__assert_fail@plt+0xbf8c>
   1d300:	b	1d354 <__assert_fail@plt+0xbf8c>
   1d304:	ldr	r0, [fp, #8]
   1d308:	cmn	r0, #1
   1d30c:	bne	1d354 <__assert_fail@plt+0xbf8c>
   1d310:	b	1d314 <__assert_fail@plt+0xbf4c>
   1d314:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d318:	add	r0, r0, #0
   1d31c:	movw	r1, #0
   1d320:	cmp	r1, r0
   1d324:	blt	1d40c <__assert_fail@plt+0xc044>
   1d328:	b	1d424 <__assert_fail@plt+0xc05c>
   1d32c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d330:	movw	r1, #0
   1d334:	cmp	r1, r0
   1d338:	bge	1d424 <__assert_fail@plt+0xc05c>
   1d33c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d340:	sub	r0, r0, #1
   1d344:	mvn	r1, #0
   1d348:	cmp	r1, r0
   1d34c:	blt	1d40c <__assert_fail@plt+0xc044>
   1d350:	b	1d424 <__assert_fail@plt+0xc05c>
   1d354:	ldr	r0, [fp, #8]
   1d358:	movw	r1, #0
   1d35c:	sdiv	r0, r1, r0
   1d360:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d364:	cmp	r0, r1
   1d368:	blt	1d40c <__assert_fail@plt+0xc044>
   1d36c:	b	1d424 <__assert_fail@plt+0xc05c>
   1d370:	ldr	r0, [fp, #8]
   1d374:	cmp	r0, #0
   1d378:	bne	1d380 <__assert_fail@plt+0xbfb8>
   1d37c:	b	1d424 <__assert_fail@plt+0xc05c>
   1d380:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d384:	cmp	r0, #0
   1d388:	bge	1d3f4 <__assert_fail@plt+0xc02c>
   1d38c:	b	1d390 <__assert_fail@plt+0xbfc8>
   1d390:	b	1d3d8 <__assert_fail@plt+0xc010>
   1d394:	b	1d3d8 <__assert_fail@plt+0xc010>
   1d398:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d39c:	cmn	r0, #1
   1d3a0:	bne	1d3d8 <__assert_fail@plt+0xc010>
   1d3a4:	b	1d3a8 <__assert_fail@plt+0xbfe0>
   1d3a8:	ldr	r0, [fp, #8]
   1d3ac:	add	r0, r0, #0
   1d3b0:	movw	r1, #0
   1d3b4:	cmp	r1, r0
   1d3b8:	blt	1d40c <__assert_fail@plt+0xc044>
   1d3bc:	b	1d424 <__assert_fail@plt+0xc05c>
   1d3c0:	ldr	r0, [fp, #8]
   1d3c4:	sub	r0, r0, #1
   1d3c8:	mvn	r1, #0
   1d3cc:	cmp	r1, r0
   1d3d0:	blt	1d40c <__assert_fail@plt+0xc044>
   1d3d4:	b	1d424 <__assert_fail@plt+0xc05c>
   1d3d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d3dc:	movw	r1, #0
   1d3e0:	sdiv	r0, r1, r0
   1d3e4:	ldr	r1, [fp, #8]
   1d3e8:	cmp	r0, r1
   1d3ec:	blt	1d40c <__assert_fail@plt+0xc044>
   1d3f0:	b	1d424 <__assert_fail@plt+0xc05c>
   1d3f4:	ldr	r0, [fp, #8]
   1d3f8:	movw	r1, #255	; 0xff
   1d3fc:	sdiv	r0, r1, r0
   1d400:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d404:	cmp	r0, r1
   1d408:	bge	1d424 <__assert_fail@plt+0xc05c>
   1d40c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d410:	ldr	r1, [fp, #8]
   1d414:	mul	r0, r0, r1
   1d418:	and	r0, r0, #255	; 0xff
   1d41c:	str	r0, [fp, #-28]	; 0xffffffe4
   1d420:	b	1e454 <__assert_fail@plt+0xd08c>
   1d424:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d428:	ldr	r1, [fp, #8]
   1d42c:	mul	r0, r0, r1
   1d430:	and	r0, r0, #255	; 0xff
   1d434:	str	r0, [fp, #-28]	; 0xffffffe4
   1d438:	b	1e464 <__assert_fail@plt+0xd09c>
   1d43c:	b	1d814 <__assert_fail@plt+0xc44c>
   1d440:	b	1d444 <__assert_fail@plt+0xc07c>
   1d444:	ldr	r0, [fp, #8]
   1d448:	cmp	r0, #0
   1d44c:	bge	1d560 <__assert_fail@plt+0xc198>
   1d450:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d454:	cmp	r0, #0
   1d458:	bge	1d4e4 <__assert_fail@plt+0xc11c>
   1d45c:	b	1d460 <__assert_fail@plt+0xc098>
   1d460:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d464:	ldr	r1, [fp, #8]
   1d468:	movw	r2, #32767	; 0x7fff
   1d46c:	sdiv	r1, r2, r1
   1d470:	cmp	r0, r1
   1d474:	blt	1d600 <__assert_fail@plt+0xc238>
   1d478:	b	1d618 <__assert_fail@plt+0xc250>
   1d47c:	b	1d480 <__assert_fail@plt+0xc0b8>
   1d480:	ldr	r0, [pc, #3092]	; 1e09c <__assert_fail@plt+0xccd4>
   1d484:	ldr	r1, [fp, #8]
   1d488:	cmp	r1, r0
   1d48c:	blt	1d4a4 <__assert_fail@plt+0xc0dc>
   1d490:	b	1d4b0 <__assert_fail@plt+0xc0e8>
   1d494:	ldr	r0, [fp, #8]
   1d498:	movw	r1, #0
   1d49c:	cmp	r1, r0
   1d4a0:	bge	1d4b0 <__assert_fail@plt+0xc0e8>
   1d4a4:	movw	r0, #0
   1d4a8:	str	r0, [fp, #-48]	; 0xffffffd0
   1d4ac:	b	1d4c8 <__assert_fail@plt+0xc100>
   1d4b0:	ldr	r0, [fp, #8]
   1d4b4:	movw	r1, #0
   1d4b8:	sub	r0, r1, r0
   1d4bc:	movw	r1, #32767	; 0x7fff
   1d4c0:	sdiv	r0, r1, r0
   1d4c4:	str	r0, [fp, #-48]	; 0xffffffd0
   1d4c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1d4cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d4d0:	mvn	r2, #0
   1d4d4:	sub	r1, r2, r1
   1d4d8:	cmp	r0, r1
   1d4dc:	ble	1d600 <__assert_fail@plt+0xc238>
   1d4e0:	b	1d618 <__assert_fail@plt+0xc250>
   1d4e4:	b	1d4e8 <__assert_fail@plt+0xc120>
   1d4e8:	b	1d544 <__assert_fail@plt+0xc17c>
   1d4ec:	b	1d544 <__assert_fail@plt+0xc17c>
   1d4f0:	ldr	r0, [fp, #8]
   1d4f4:	cmn	r0, #1
   1d4f8:	bne	1d544 <__assert_fail@plt+0xc17c>
   1d4fc:	b	1d500 <__assert_fail@plt+0xc138>
   1d500:	ldr	r0, [pc, #3928]	; 1e460 <__assert_fail@plt+0xd098>
   1d504:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d508:	add	r0, r1, r0
   1d50c:	movw	r1, #0
   1d510:	cmp	r1, r0
   1d514:	blt	1d600 <__assert_fail@plt+0xc238>
   1d518:	b	1d618 <__assert_fail@plt+0xc250>
   1d51c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d520:	movw	r1, #0
   1d524:	cmp	r1, r0
   1d528:	bge	1d618 <__assert_fail@plt+0xc250>
   1d52c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d530:	sub	r0, r0, #1
   1d534:	movw	r1, #32767	; 0x7fff
   1d538:	cmp	r1, r0
   1d53c:	blt	1d600 <__assert_fail@plt+0xc238>
   1d540:	b	1d618 <__assert_fail@plt+0xc250>
   1d544:	ldr	r0, [pc, #3860]	; 1e460 <__assert_fail@plt+0xd098>
   1d548:	ldr	r1, [fp, #8]
   1d54c:	sdiv	r0, r0, r1
   1d550:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d554:	cmp	r0, r1
   1d558:	blt	1d600 <__assert_fail@plt+0xc238>
   1d55c:	b	1d618 <__assert_fail@plt+0xc250>
   1d560:	ldr	r0, [fp, #8]
   1d564:	cmp	r0, #0
   1d568:	bne	1d570 <__assert_fail@plt+0xc1a8>
   1d56c:	b	1d618 <__assert_fail@plt+0xc250>
   1d570:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d574:	cmp	r0, #0
   1d578:	bge	1d5e8 <__assert_fail@plt+0xc220>
   1d57c:	b	1d580 <__assert_fail@plt+0xc1b8>
   1d580:	b	1d5cc <__assert_fail@plt+0xc204>
   1d584:	b	1d5cc <__assert_fail@plt+0xc204>
   1d588:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d58c:	cmn	r0, #1
   1d590:	bne	1d5cc <__assert_fail@plt+0xc204>
   1d594:	b	1d598 <__assert_fail@plt+0xc1d0>
   1d598:	ldr	r0, [pc, #3776]	; 1e460 <__assert_fail@plt+0xd098>
   1d59c:	ldr	r1, [fp, #8]
   1d5a0:	add	r0, r1, r0
   1d5a4:	movw	r1, #0
   1d5a8:	cmp	r1, r0
   1d5ac:	blt	1d600 <__assert_fail@plt+0xc238>
   1d5b0:	b	1d618 <__assert_fail@plt+0xc250>
   1d5b4:	ldr	r0, [fp, #8]
   1d5b8:	sub	r0, r0, #1
   1d5bc:	movw	r1, #32767	; 0x7fff
   1d5c0:	cmp	r1, r0
   1d5c4:	blt	1d600 <__assert_fail@plt+0xc238>
   1d5c8:	b	1d618 <__assert_fail@plt+0xc250>
   1d5cc:	ldr	r0, [pc, #3724]	; 1e460 <__assert_fail@plt+0xd098>
   1d5d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d5d4:	sdiv	r0, r0, r1
   1d5d8:	ldr	r1, [fp, #8]
   1d5dc:	cmp	r0, r1
   1d5e0:	blt	1d600 <__assert_fail@plt+0xc238>
   1d5e4:	b	1d618 <__assert_fail@plt+0xc250>
   1d5e8:	ldr	r0, [fp, #8]
   1d5ec:	movw	r1, #32767	; 0x7fff
   1d5f0:	sdiv	r0, r1, r0
   1d5f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d5f8:	cmp	r0, r1
   1d5fc:	bge	1d618 <__assert_fail@plt+0xc250>
   1d600:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d604:	ldr	r1, [fp, #8]
   1d608:	mul	r0, r0, r1
   1d60c:	sxth	r0, r0
   1d610:	str	r0, [fp, #-28]	; 0xffffffe4
   1d614:	b	1e454 <__assert_fail@plt+0xd08c>
   1d618:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d61c:	ldr	r1, [fp, #8]
   1d620:	mul	r0, r0, r1
   1d624:	sxth	r0, r0
   1d628:	str	r0, [fp, #-28]	; 0xffffffe4
   1d62c:	b	1e464 <__assert_fail@plt+0xd09c>
   1d630:	ldr	r0, [fp, #8]
   1d634:	cmp	r0, #0
   1d638:	bge	1d748 <__assert_fail@plt+0xc380>
   1d63c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d640:	cmp	r0, #0
   1d644:	bge	1d6d0 <__assert_fail@plt+0xc308>
   1d648:	b	1d64c <__assert_fail@plt+0xc284>
   1d64c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d650:	ldr	r1, [fp, #8]
   1d654:	movw	r2, #65535	; 0xffff
   1d658:	sdiv	r1, r2, r1
   1d65c:	cmp	r0, r1
   1d660:	blt	1d7e4 <__assert_fail@plt+0xc41c>
   1d664:	b	1d7fc <__assert_fail@plt+0xc434>
   1d668:	b	1d66c <__assert_fail@plt+0xc2a4>
   1d66c:	ldr	r0, [pc, #2600]	; 1e09c <__assert_fail@plt+0xccd4>
   1d670:	ldr	r1, [fp, #8]
   1d674:	cmp	r1, r0
   1d678:	blt	1d690 <__assert_fail@plt+0xc2c8>
   1d67c:	b	1d69c <__assert_fail@plt+0xc2d4>
   1d680:	ldr	r0, [fp, #8]
   1d684:	movw	r1, #0
   1d688:	cmp	r1, r0
   1d68c:	bge	1d69c <__assert_fail@plt+0xc2d4>
   1d690:	movw	r0, #0
   1d694:	str	r0, [fp, #-52]	; 0xffffffcc
   1d698:	b	1d6b4 <__assert_fail@plt+0xc2ec>
   1d69c:	ldr	r0, [fp, #8]
   1d6a0:	movw	r1, #0
   1d6a4:	sub	r0, r1, r0
   1d6a8:	movw	r1, #65535	; 0xffff
   1d6ac:	sdiv	r0, r1, r0
   1d6b0:	str	r0, [fp, #-52]	; 0xffffffcc
   1d6b4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1d6b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d6bc:	mvn	r2, #0
   1d6c0:	sub	r1, r2, r1
   1d6c4:	cmp	r0, r1
   1d6c8:	ble	1d7e4 <__assert_fail@plt+0xc41c>
   1d6cc:	b	1d7fc <__assert_fail@plt+0xc434>
   1d6d0:	b	1d6d4 <__assert_fail@plt+0xc30c>
   1d6d4:	b	1d72c <__assert_fail@plt+0xc364>
   1d6d8:	b	1d72c <__assert_fail@plt+0xc364>
   1d6dc:	ldr	r0, [fp, #8]
   1d6e0:	cmn	r0, #1
   1d6e4:	bne	1d72c <__assert_fail@plt+0xc364>
   1d6e8:	b	1d6ec <__assert_fail@plt+0xc324>
   1d6ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d6f0:	add	r0, r0, #0
   1d6f4:	movw	r1, #0
   1d6f8:	cmp	r1, r0
   1d6fc:	blt	1d7e4 <__assert_fail@plt+0xc41c>
   1d700:	b	1d7fc <__assert_fail@plt+0xc434>
   1d704:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d708:	movw	r1, #0
   1d70c:	cmp	r1, r0
   1d710:	bge	1d7fc <__assert_fail@plt+0xc434>
   1d714:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d718:	sub	r0, r0, #1
   1d71c:	mvn	r1, #0
   1d720:	cmp	r1, r0
   1d724:	blt	1d7e4 <__assert_fail@plt+0xc41c>
   1d728:	b	1d7fc <__assert_fail@plt+0xc434>
   1d72c:	ldr	r0, [fp, #8]
   1d730:	movw	r1, #0
   1d734:	sdiv	r0, r1, r0
   1d738:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d73c:	cmp	r0, r1
   1d740:	blt	1d7e4 <__assert_fail@plt+0xc41c>
   1d744:	b	1d7fc <__assert_fail@plt+0xc434>
   1d748:	ldr	r0, [fp, #8]
   1d74c:	cmp	r0, #0
   1d750:	bne	1d758 <__assert_fail@plt+0xc390>
   1d754:	b	1d7fc <__assert_fail@plt+0xc434>
   1d758:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d75c:	cmp	r0, #0
   1d760:	bge	1d7cc <__assert_fail@plt+0xc404>
   1d764:	b	1d768 <__assert_fail@plt+0xc3a0>
   1d768:	b	1d7b0 <__assert_fail@plt+0xc3e8>
   1d76c:	b	1d7b0 <__assert_fail@plt+0xc3e8>
   1d770:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d774:	cmn	r0, #1
   1d778:	bne	1d7b0 <__assert_fail@plt+0xc3e8>
   1d77c:	b	1d780 <__assert_fail@plt+0xc3b8>
   1d780:	ldr	r0, [fp, #8]
   1d784:	add	r0, r0, #0
   1d788:	movw	r1, #0
   1d78c:	cmp	r1, r0
   1d790:	blt	1d7e4 <__assert_fail@plt+0xc41c>
   1d794:	b	1d7fc <__assert_fail@plt+0xc434>
   1d798:	ldr	r0, [fp, #8]
   1d79c:	sub	r0, r0, #1
   1d7a0:	mvn	r1, #0
   1d7a4:	cmp	r1, r0
   1d7a8:	blt	1d7e4 <__assert_fail@plt+0xc41c>
   1d7ac:	b	1d7fc <__assert_fail@plt+0xc434>
   1d7b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d7b4:	movw	r1, #0
   1d7b8:	sdiv	r0, r1, r0
   1d7bc:	ldr	r1, [fp, #8]
   1d7c0:	cmp	r0, r1
   1d7c4:	blt	1d7e4 <__assert_fail@plt+0xc41c>
   1d7c8:	b	1d7fc <__assert_fail@plt+0xc434>
   1d7cc:	ldr	r0, [fp, #8]
   1d7d0:	movw	r1, #65535	; 0xffff
   1d7d4:	sdiv	r0, r1, r0
   1d7d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d7dc:	cmp	r0, r1
   1d7e0:	bge	1d7fc <__assert_fail@plt+0xc434>
   1d7e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d7e8:	ldr	r1, [fp, #8]
   1d7ec:	mul	r0, r0, r1
   1d7f0:	uxth	r0, r0
   1d7f4:	str	r0, [fp, #-28]	; 0xffffffe4
   1d7f8:	b	1e454 <__assert_fail@plt+0xd08c>
   1d7fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d800:	ldr	r1, [fp, #8]
   1d804:	mul	r0, r0, r1
   1d808:	uxth	r0, r0
   1d80c:	str	r0, [fp, #-28]	; 0xffffffe4
   1d810:	b	1e464 <__assert_fail@plt+0xd09c>
   1d814:	b	1d818 <__assert_fail@plt+0xc450>
   1d818:	b	1d81c <__assert_fail@plt+0xc454>
   1d81c:	ldr	r0, [fp, #8]
   1d820:	cmp	r0, #0
   1d824:	bge	1d928 <__assert_fail@plt+0xc560>
   1d828:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d82c:	cmp	r0, #0
   1d830:	bge	1d8bc <__assert_fail@plt+0xc4f4>
   1d834:	b	1d838 <__assert_fail@plt+0xc470>
   1d838:	ldr	r0, [pc, #1992]	; 1e008 <__assert_fail@plt+0xcc40>
   1d83c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d840:	ldr	r2, [fp, #8]
   1d844:	sdiv	r0, r0, r2
   1d848:	cmp	r1, r0
   1d84c:	blt	1d9b8 <__assert_fail@plt+0xc5f0>
   1d850:	b	1d9cc <__assert_fail@plt+0xc604>
   1d854:	b	1d858 <__assert_fail@plt+0xc490>
   1d858:	ldr	r0, [pc, #2108]	; 1e09c <__assert_fail@plt+0xccd4>
   1d85c:	ldr	r1, [fp, #8]
   1d860:	cmp	r1, r0
   1d864:	blt	1d87c <__assert_fail@plt+0xc4b4>
   1d868:	b	1d888 <__assert_fail@plt+0xc4c0>
   1d86c:	ldr	r0, [fp, #8]
   1d870:	movw	r1, #0
   1d874:	cmp	r1, r0
   1d878:	bge	1d888 <__assert_fail@plt+0xc4c0>
   1d87c:	movw	r0, #0
   1d880:	str	r0, [fp, #-56]	; 0xffffffc8
   1d884:	b	1d8a0 <__assert_fail@plt+0xc4d8>
   1d888:	ldr	r0, [pc, #1912]	; 1e008 <__assert_fail@plt+0xcc40>
   1d88c:	ldr	r1, [fp, #8]
   1d890:	movw	r2, #0
   1d894:	sub	r1, r2, r1
   1d898:	sdiv	r0, r0, r1
   1d89c:	str	r0, [fp, #-56]	; 0xffffffc8
   1d8a0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d8a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d8a8:	mvn	r2, #0
   1d8ac:	sub	r1, r2, r1
   1d8b0:	cmp	r0, r1
   1d8b4:	ble	1d9b8 <__assert_fail@plt+0xc5f0>
   1d8b8:	b	1d9cc <__assert_fail@plt+0xc604>
   1d8bc:	ldr	r0, [fp, #8]
   1d8c0:	cmn	r0, #1
   1d8c4:	bne	1d90c <__assert_fail@plt+0xc544>
   1d8c8:	b	1d8cc <__assert_fail@plt+0xc504>
   1d8cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d8d0:	add	r0, r0, #-2147483648	; 0x80000000
   1d8d4:	movw	r1, #0
   1d8d8:	cmp	r1, r0
   1d8dc:	blt	1d9b8 <__assert_fail@plt+0xc5f0>
   1d8e0:	b	1d9cc <__assert_fail@plt+0xc604>
   1d8e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d8e8:	movw	r1, #0
   1d8ec:	cmp	r1, r0
   1d8f0:	bge	1d9cc <__assert_fail@plt+0xc604>
   1d8f4:	ldr	r0, [pc, #1804]	; 1e008 <__assert_fail@plt+0xcc40>
   1d8f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d8fc:	sub	r1, r1, #1
   1d900:	cmp	r0, r1
   1d904:	blt	1d9b8 <__assert_fail@plt+0xc5f0>
   1d908:	b	1d9cc <__assert_fail@plt+0xc604>
   1d90c:	ldr	r0, [pc, #4072]	; 1e8fc <__assert_fail@plt+0xd534>
   1d910:	ldr	r1, [fp, #8]
   1d914:	sdiv	r0, r0, r1
   1d918:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d91c:	cmp	r0, r1
   1d920:	blt	1d9b8 <__assert_fail@plt+0xc5f0>
   1d924:	b	1d9cc <__assert_fail@plt+0xc604>
   1d928:	ldr	r0, [fp, #8]
   1d92c:	cmp	r0, #0
   1d930:	bne	1d938 <__assert_fail@plt+0xc570>
   1d934:	b	1d9cc <__assert_fail@plt+0xc604>
   1d938:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d93c:	cmp	r0, #0
   1d940:	bge	1d9a0 <__assert_fail@plt+0xc5d8>
   1d944:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d948:	cmn	r0, #1
   1d94c:	bne	1d984 <__assert_fail@plt+0xc5bc>
   1d950:	b	1d954 <__assert_fail@plt+0xc58c>
   1d954:	ldr	r0, [fp, #8]
   1d958:	add	r0, r0, #-2147483648	; 0x80000000
   1d95c:	movw	r1, #0
   1d960:	cmp	r1, r0
   1d964:	blt	1d9b8 <__assert_fail@plt+0xc5f0>
   1d968:	b	1d9cc <__assert_fail@plt+0xc604>
   1d96c:	ldr	r0, [pc, #1684]	; 1e008 <__assert_fail@plt+0xcc40>
   1d970:	ldr	r1, [fp, #8]
   1d974:	sub	r1, r1, #1
   1d978:	cmp	r0, r1
   1d97c:	blt	1d9b8 <__assert_fail@plt+0xc5f0>
   1d980:	b	1d9cc <__assert_fail@plt+0xc604>
   1d984:	ldr	r0, [pc, #3952]	; 1e8fc <__assert_fail@plt+0xd534>
   1d988:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d98c:	sdiv	r0, r0, r1
   1d990:	ldr	r1, [fp, #8]
   1d994:	cmp	r0, r1
   1d998:	blt	1d9b8 <__assert_fail@plt+0xc5f0>
   1d99c:	b	1d9cc <__assert_fail@plt+0xc604>
   1d9a0:	ldr	r0, [pc, #1632]	; 1e008 <__assert_fail@plt+0xcc40>
   1d9a4:	ldr	r1, [fp, #8]
   1d9a8:	sdiv	r0, r0, r1
   1d9ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d9b0:	cmp	r0, r1
   1d9b4:	bge	1d9cc <__assert_fail@plt+0xc604>
   1d9b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d9bc:	ldr	r1, [fp, #8]
   1d9c0:	mul	r0, r0, r1
   1d9c4:	str	r0, [fp, #-28]	; 0xffffffe4
   1d9c8:	b	1e454 <__assert_fail@plt+0xd08c>
   1d9cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d9d0:	ldr	r1, [fp, #8]
   1d9d4:	mul	r0, r0, r1
   1d9d8:	str	r0, [fp, #-28]	; 0xffffffe4
   1d9dc:	b	1e464 <__assert_fail@plt+0xd09c>
   1d9e0:	ldr	r0, [fp, #8]
   1d9e4:	cmp	r0, #0
   1d9e8:	bge	1daf8 <__assert_fail@plt+0xc730>
   1d9ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d9f0:	cmp	r0, #0
   1d9f4:	bge	1da80 <__assert_fail@plt+0xc6b8>
   1d9f8:	b	1da18 <__assert_fail@plt+0xc650>
   1d9fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da00:	ldr	r1, [fp, #8]
   1da04:	mvn	r2, #0
   1da08:	udiv	r1, r2, r1
   1da0c:	cmp	r0, r1
   1da10:	bcc	1db94 <__assert_fail@plt+0xc7cc>
   1da14:	b	1dba8 <__assert_fail@plt+0xc7e0>
   1da18:	b	1da1c <__assert_fail@plt+0xc654>
   1da1c:	ldr	r0, [pc, #1656]	; 1e09c <__assert_fail@plt+0xccd4>
   1da20:	ldr	r1, [fp, #8]
   1da24:	cmp	r1, r0
   1da28:	blt	1da40 <__assert_fail@plt+0xc678>
   1da2c:	b	1da4c <__assert_fail@plt+0xc684>
   1da30:	ldr	r0, [fp, #8]
   1da34:	movw	r1, #0
   1da38:	cmp	r1, r0
   1da3c:	bge	1da4c <__assert_fail@plt+0xc684>
   1da40:	movw	r0, #1
   1da44:	str	r0, [fp, #-60]	; 0xffffffc4
   1da48:	b	1da64 <__assert_fail@plt+0xc69c>
   1da4c:	ldr	r0, [fp, #8]
   1da50:	movw	r1, #0
   1da54:	sub	r0, r1, r0
   1da58:	mvn	r1, #0
   1da5c:	udiv	r0, r1, r0
   1da60:	str	r0, [fp, #-60]	; 0xffffffc4
   1da64:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1da68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1da6c:	mvn	r2, #0
   1da70:	sub	r1, r2, r1
   1da74:	cmp	r0, r1
   1da78:	bls	1db94 <__assert_fail@plt+0xc7cc>
   1da7c:	b	1dba8 <__assert_fail@plt+0xc7e0>
   1da80:	b	1da84 <__assert_fail@plt+0xc6bc>
   1da84:	b	1dadc <__assert_fail@plt+0xc714>
   1da88:	b	1dadc <__assert_fail@plt+0xc714>
   1da8c:	ldr	r0, [fp, #8]
   1da90:	cmn	r0, #1
   1da94:	bne	1dadc <__assert_fail@plt+0xc714>
   1da98:	b	1da9c <__assert_fail@plt+0xc6d4>
   1da9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1daa0:	add	r0, r0, #0
   1daa4:	movw	r1, #0
   1daa8:	cmp	r1, r0
   1daac:	blt	1db94 <__assert_fail@plt+0xc7cc>
   1dab0:	b	1dba8 <__assert_fail@plt+0xc7e0>
   1dab4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dab8:	movw	r1, #0
   1dabc:	cmp	r1, r0
   1dac0:	bge	1dba8 <__assert_fail@plt+0xc7e0>
   1dac4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dac8:	sub	r0, r0, #1
   1dacc:	mvn	r1, #0
   1dad0:	cmp	r1, r0
   1dad4:	blt	1db94 <__assert_fail@plt+0xc7cc>
   1dad8:	b	1dba8 <__assert_fail@plt+0xc7e0>
   1dadc:	ldr	r0, [fp, #8]
   1dae0:	movw	r1, #0
   1dae4:	sdiv	r0, r1, r0
   1dae8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1daec:	cmp	r0, r1
   1daf0:	blt	1db94 <__assert_fail@plt+0xc7cc>
   1daf4:	b	1dba8 <__assert_fail@plt+0xc7e0>
   1daf8:	ldr	r0, [fp, #8]
   1dafc:	cmp	r0, #0
   1db00:	bne	1db08 <__assert_fail@plt+0xc740>
   1db04:	b	1dba8 <__assert_fail@plt+0xc7e0>
   1db08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db0c:	cmp	r0, #0
   1db10:	bge	1db7c <__assert_fail@plt+0xc7b4>
   1db14:	b	1db18 <__assert_fail@plt+0xc750>
   1db18:	b	1db60 <__assert_fail@plt+0xc798>
   1db1c:	b	1db60 <__assert_fail@plt+0xc798>
   1db20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db24:	cmn	r0, #1
   1db28:	bne	1db60 <__assert_fail@plt+0xc798>
   1db2c:	b	1db30 <__assert_fail@plt+0xc768>
   1db30:	ldr	r0, [fp, #8]
   1db34:	add	r0, r0, #0
   1db38:	movw	r1, #0
   1db3c:	cmp	r1, r0
   1db40:	blt	1db94 <__assert_fail@plt+0xc7cc>
   1db44:	b	1dba8 <__assert_fail@plt+0xc7e0>
   1db48:	ldr	r0, [fp, #8]
   1db4c:	sub	r0, r0, #1
   1db50:	mvn	r1, #0
   1db54:	cmp	r1, r0
   1db58:	blt	1db94 <__assert_fail@plt+0xc7cc>
   1db5c:	b	1dba8 <__assert_fail@plt+0xc7e0>
   1db60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db64:	movw	r1, #0
   1db68:	sdiv	r0, r1, r0
   1db6c:	ldr	r1, [fp, #8]
   1db70:	cmp	r0, r1
   1db74:	blt	1db94 <__assert_fail@plt+0xc7cc>
   1db78:	b	1dba8 <__assert_fail@plt+0xc7e0>
   1db7c:	ldr	r0, [fp, #8]
   1db80:	mvn	r1, #0
   1db84:	udiv	r0, r1, r0
   1db88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1db8c:	cmp	r0, r1
   1db90:	bcs	1dba8 <__assert_fail@plt+0xc7e0>
   1db94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db98:	ldr	r1, [fp, #8]
   1db9c:	mul	r0, r0, r1
   1dba0:	str	r0, [fp, #-28]	; 0xffffffe4
   1dba4:	b	1e454 <__assert_fail@plt+0xd08c>
   1dba8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dbac:	ldr	r1, [fp, #8]
   1dbb0:	mul	r0, r0, r1
   1dbb4:	str	r0, [fp, #-28]	; 0xffffffe4
   1dbb8:	b	1e464 <__assert_fail@plt+0xd09c>
   1dbbc:	b	1dbc0 <__assert_fail@plt+0xc7f8>
   1dbc0:	b	1dbc4 <__assert_fail@plt+0xc7fc>
   1dbc4:	ldr	r0, [fp, #8]
   1dbc8:	cmp	r0, #0
   1dbcc:	bge	1dcd0 <__assert_fail@plt+0xc908>
   1dbd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dbd4:	cmp	r0, #0
   1dbd8:	bge	1dc64 <__assert_fail@plt+0xc89c>
   1dbdc:	b	1dbe0 <__assert_fail@plt+0xc818>
   1dbe0:	ldr	r0, [pc, #1056]	; 1e008 <__assert_fail@plt+0xcc40>
   1dbe4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dbe8:	ldr	r2, [fp, #8]
   1dbec:	sdiv	r0, r0, r2
   1dbf0:	cmp	r1, r0
   1dbf4:	blt	1dd60 <__assert_fail@plt+0xc998>
   1dbf8:	b	1dd74 <__assert_fail@plt+0xc9ac>
   1dbfc:	b	1dc00 <__assert_fail@plt+0xc838>
   1dc00:	ldr	r0, [pc, #1172]	; 1e09c <__assert_fail@plt+0xccd4>
   1dc04:	ldr	r1, [fp, #8]
   1dc08:	cmp	r1, r0
   1dc0c:	blt	1dc24 <__assert_fail@plt+0xc85c>
   1dc10:	b	1dc30 <__assert_fail@plt+0xc868>
   1dc14:	ldr	r0, [fp, #8]
   1dc18:	movw	r1, #0
   1dc1c:	cmp	r1, r0
   1dc20:	bge	1dc30 <__assert_fail@plt+0xc868>
   1dc24:	movw	r0, #0
   1dc28:	str	r0, [fp, #-64]	; 0xffffffc0
   1dc2c:	b	1dc48 <__assert_fail@plt+0xc880>
   1dc30:	ldr	r0, [pc, #976]	; 1e008 <__assert_fail@plt+0xcc40>
   1dc34:	ldr	r1, [fp, #8]
   1dc38:	movw	r2, #0
   1dc3c:	sub	r1, r2, r1
   1dc40:	sdiv	r0, r0, r1
   1dc44:	str	r0, [fp, #-64]	; 0xffffffc0
   1dc48:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1dc4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dc50:	mvn	r2, #0
   1dc54:	sub	r1, r2, r1
   1dc58:	cmp	r0, r1
   1dc5c:	ble	1dd60 <__assert_fail@plt+0xc998>
   1dc60:	b	1dd74 <__assert_fail@plt+0xc9ac>
   1dc64:	ldr	r0, [fp, #8]
   1dc68:	cmn	r0, #1
   1dc6c:	bne	1dcb4 <__assert_fail@plt+0xc8ec>
   1dc70:	b	1dc74 <__assert_fail@plt+0xc8ac>
   1dc74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc78:	add	r0, r0, #-2147483648	; 0x80000000
   1dc7c:	movw	r1, #0
   1dc80:	cmp	r1, r0
   1dc84:	blt	1dd60 <__assert_fail@plt+0xc998>
   1dc88:	b	1dd74 <__assert_fail@plt+0xc9ac>
   1dc8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc90:	movw	r1, #0
   1dc94:	cmp	r1, r0
   1dc98:	bge	1dd74 <__assert_fail@plt+0xc9ac>
   1dc9c:	ldr	r0, [pc, #868]	; 1e008 <__assert_fail@plt+0xcc40>
   1dca0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dca4:	sub	r1, r1, #1
   1dca8:	cmp	r0, r1
   1dcac:	blt	1dd60 <__assert_fail@plt+0xc998>
   1dcb0:	b	1dd74 <__assert_fail@plt+0xc9ac>
   1dcb4:	ldr	r0, [pc, #3136]	; 1e8fc <__assert_fail@plt+0xd534>
   1dcb8:	ldr	r1, [fp, #8]
   1dcbc:	sdiv	r0, r0, r1
   1dcc0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dcc4:	cmp	r0, r1
   1dcc8:	blt	1dd60 <__assert_fail@plt+0xc998>
   1dccc:	b	1dd74 <__assert_fail@plt+0xc9ac>
   1dcd0:	ldr	r0, [fp, #8]
   1dcd4:	cmp	r0, #0
   1dcd8:	bne	1dce0 <__assert_fail@plt+0xc918>
   1dcdc:	b	1dd74 <__assert_fail@plt+0xc9ac>
   1dce0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dce4:	cmp	r0, #0
   1dce8:	bge	1dd48 <__assert_fail@plt+0xc980>
   1dcec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dcf0:	cmn	r0, #1
   1dcf4:	bne	1dd2c <__assert_fail@plt+0xc964>
   1dcf8:	b	1dcfc <__assert_fail@plt+0xc934>
   1dcfc:	ldr	r0, [fp, #8]
   1dd00:	add	r0, r0, #-2147483648	; 0x80000000
   1dd04:	movw	r1, #0
   1dd08:	cmp	r1, r0
   1dd0c:	blt	1dd60 <__assert_fail@plt+0xc998>
   1dd10:	b	1dd74 <__assert_fail@plt+0xc9ac>
   1dd14:	ldr	r0, [pc, #748]	; 1e008 <__assert_fail@plt+0xcc40>
   1dd18:	ldr	r1, [fp, #8]
   1dd1c:	sub	r1, r1, #1
   1dd20:	cmp	r0, r1
   1dd24:	blt	1dd60 <__assert_fail@plt+0xc998>
   1dd28:	b	1dd74 <__assert_fail@plt+0xc9ac>
   1dd2c:	ldr	r0, [pc, #3016]	; 1e8fc <__assert_fail@plt+0xd534>
   1dd30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dd34:	sdiv	r0, r0, r1
   1dd38:	ldr	r1, [fp, #8]
   1dd3c:	cmp	r0, r1
   1dd40:	blt	1dd60 <__assert_fail@plt+0xc998>
   1dd44:	b	1dd74 <__assert_fail@plt+0xc9ac>
   1dd48:	ldr	r0, [pc, #696]	; 1e008 <__assert_fail@plt+0xcc40>
   1dd4c:	ldr	r1, [fp, #8]
   1dd50:	sdiv	r0, r0, r1
   1dd54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dd58:	cmp	r0, r1
   1dd5c:	bge	1dd74 <__assert_fail@plt+0xc9ac>
   1dd60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd64:	ldr	r1, [fp, #8]
   1dd68:	mul	r0, r0, r1
   1dd6c:	str	r0, [fp, #-28]	; 0xffffffe4
   1dd70:	b	1e454 <__assert_fail@plt+0xd08c>
   1dd74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd78:	ldr	r1, [fp, #8]
   1dd7c:	mul	r0, r0, r1
   1dd80:	str	r0, [fp, #-28]	; 0xffffffe4
   1dd84:	b	1e464 <__assert_fail@plt+0xd09c>
   1dd88:	ldr	r0, [fp, #8]
   1dd8c:	cmp	r0, #0
   1dd90:	bge	1dea0 <__assert_fail@plt+0xcad8>
   1dd94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd98:	cmp	r0, #0
   1dd9c:	bge	1de28 <__assert_fail@plt+0xca60>
   1dda0:	b	1ddc0 <__assert_fail@plt+0xc9f8>
   1dda4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dda8:	ldr	r1, [fp, #8]
   1ddac:	mvn	r2, #0
   1ddb0:	udiv	r1, r2, r1
   1ddb4:	cmp	r0, r1
   1ddb8:	bcc	1df3c <__assert_fail@plt+0xcb74>
   1ddbc:	b	1df50 <__assert_fail@plt+0xcb88>
   1ddc0:	b	1ddc4 <__assert_fail@plt+0xc9fc>
   1ddc4:	ldr	r0, [pc, #720]	; 1e09c <__assert_fail@plt+0xccd4>
   1ddc8:	ldr	r1, [fp, #8]
   1ddcc:	cmp	r1, r0
   1ddd0:	blt	1dde8 <__assert_fail@plt+0xca20>
   1ddd4:	b	1ddf4 <__assert_fail@plt+0xca2c>
   1ddd8:	ldr	r0, [fp, #8]
   1dddc:	movw	r1, #0
   1dde0:	cmp	r1, r0
   1dde4:	bge	1ddf4 <__assert_fail@plt+0xca2c>
   1dde8:	movw	r0, #1
   1ddec:	str	r0, [fp, #-68]	; 0xffffffbc
   1ddf0:	b	1de0c <__assert_fail@plt+0xca44>
   1ddf4:	ldr	r0, [fp, #8]
   1ddf8:	movw	r1, #0
   1ddfc:	sub	r0, r1, r0
   1de00:	mvn	r1, #0
   1de04:	udiv	r0, r1, r0
   1de08:	str	r0, [fp, #-68]	; 0xffffffbc
   1de0c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1de10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1de14:	mvn	r2, #0
   1de18:	sub	r1, r2, r1
   1de1c:	cmp	r0, r1
   1de20:	bls	1df3c <__assert_fail@plt+0xcb74>
   1de24:	b	1df50 <__assert_fail@plt+0xcb88>
   1de28:	b	1de2c <__assert_fail@plt+0xca64>
   1de2c:	b	1de84 <__assert_fail@plt+0xcabc>
   1de30:	b	1de84 <__assert_fail@plt+0xcabc>
   1de34:	ldr	r0, [fp, #8]
   1de38:	cmn	r0, #1
   1de3c:	bne	1de84 <__assert_fail@plt+0xcabc>
   1de40:	b	1de44 <__assert_fail@plt+0xca7c>
   1de44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de48:	add	r0, r0, #0
   1de4c:	movw	r1, #0
   1de50:	cmp	r1, r0
   1de54:	blt	1df3c <__assert_fail@plt+0xcb74>
   1de58:	b	1df50 <__assert_fail@plt+0xcb88>
   1de5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de60:	movw	r1, #0
   1de64:	cmp	r1, r0
   1de68:	bge	1df50 <__assert_fail@plt+0xcb88>
   1de6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de70:	sub	r0, r0, #1
   1de74:	mvn	r1, #0
   1de78:	cmp	r1, r0
   1de7c:	blt	1df3c <__assert_fail@plt+0xcb74>
   1de80:	b	1df50 <__assert_fail@plt+0xcb88>
   1de84:	ldr	r0, [fp, #8]
   1de88:	movw	r1, #0
   1de8c:	sdiv	r0, r1, r0
   1de90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1de94:	cmp	r0, r1
   1de98:	blt	1df3c <__assert_fail@plt+0xcb74>
   1de9c:	b	1df50 <__assert_fail@plt+0xcb88>
   1dea0:	ldr	r0, [fp, #8]
   1dea4:	cmp	r0, #0
   1dea8:	bne	1deb0 <__assert_fail@plt+0xcae8>
   1deac:	b	1df50 <__assert_fail@plt+0xcb88>
   1deb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1deb4:	cmp	r0, #0
   1deb8:	bge	1df24 <__assert_fail@plt+0xcb5c>
   1debc:	b	1dec0 <__assert_fail@plt+0xcaf8>
   1dec0:	b	1df08 <__assert_fail@plt+0xcb40>
   1dec4:	b	1df08 <__assert_fail@plt+0xcb40>
   1dec8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1decc:	cmn	r0, #1
   1ded0:	bne	1df08 <__assert_fail@plt+0xcb40>
   1ded4:	b	1ded8 <__assert_fail@plt+0xcb10>
   1ded8:	ldr	r0, [fp, #8]
   1dedc:	add	r0, r0, #0
   1dee0:	movw	r1, #0
   1dee4:	cmp	r1, r0
   1dee8:	blt	1df3c <__assert_fail@plt+0xcb74>
   1deec:	b	1df50 <__assert_fail@plt+0xcb88>
   1def0:	ldr	r0, [fp, #8]
   1def4:	sub	r0, r0, #1
   1def8:	mvn	r1, #0
   1defc:	cmp	r1, r0
   1df00:	blt	1df3c <__assert_fail@plt+0xcb74>
   1df04:	b	1df50 <__assert_fail@plt+0xcb88>
   1df08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1df0c:	movw	r1, #0
   1df10:	sdiv	r0, r1, r0
   1df14:	ldr	r1, [fp, #8]
   1df18:	cmp	r0, r1
   1df1c:	blt	1df3c <__assert_fail@plt+0xcb74>
   1df20:	b	1df50 <__assert_fail@plt+0xcb88>
   1df24:	ldr	r0, [fp, #8]
   1df28:	mvn	r1, #0
   1df2c:	udiv	r0, r1, r0
   1df30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1df34:	cmp	r0, r1
   1df38:	bcs	1df50 <__assert_fail@plt+0xcb88>
   1df3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1df40:	ldr	r1, [fp, #8]
   1df44:	mul	r0, r0, r1
   1df48:	str	r0, [fp, #-28]	; 0xffffffe4
   1df4c:	b	1e454 <__assert_fail@plt+0xd08c>
   1df50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1df54:	ldr	r1, [fp, #8]
   1df58:	mul	r0, r0, r1
   1df5c:	str	r0, [fp, #-28]	; 0xffffffe4
   1df60:	b	1e464 <__assert_fail@plt+0xd09c>
   1df64:	b	1df68 <__assert_fail@plt+0xcba0>
   1df68:	ldr	r0, [fp, #8]
   1df6c:	cmp	r0, #0
   1df70:	bge	1e100 <__assert_fail@plt+0xcd38>
   1df74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1df78:	cmp	r0, #0
   1df7c:	bge	1e068 <__assert_fail@plt+0xcca0>
   1df80:	b	1df84 <__assert_fail@plt+0xcbbc>
   1df84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1df88:	ldr	r1, [fp, #8]
   1df8c:	asr	r3, r1, #31
   1df90:	mvn	r2, #0
   1df94:	mvn	ip, #-2147483648	; 0x80000000
   1df98:	str	r0, [fp, #-72]	; 0xffffffb8
   1df9c:	mov	r0, r2
   1dfa0:	str	r1, [fp, #-76]	; 0xffffffb4
   1dfa4:	mov	r1, ip
   1dfa8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1dfac:	bl	22aa0 <__assert_fail@plt+0x116d8>
   1dfb0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1dfb4:	subs	r0, r2, r0
   1dfb8:	rscs	r1, r1, r2, asr #31
   1dfbc:	str	r0, [fp, #-80]	; 0xffffffb0
   1dfc0:	str	r1, [fp, #-84]	; 0xffffffac
   1dfc4:	blt	1e1e0 <__assert_fail@plt+0xce18>
   1dfc8:	b	1e1f4 <__assert_fail@plt+0xce2c>
   1dfcc:	b	1dfd0 <__assert_fail@plt+0xcc08>
   1dfd0:	ldr	r0, [pc, #196]	; 1e09c <__assert_fail@plt+0xccd4>
   1dfd4:	ldr	r1, [fp, #8]
   1dfd8:	cmp	r1, r0
   1dfdc:	blt	1dff4 <__assert_fail@plt+0xcc2c>
   1dfe0:	b	1e00c <__assert_fail@plt+0xcc44>
   1dfe4:	ldr	r0, [fp, #8]
   1dfe8:	movw	r1, #0
   1dfec:	cmp	r1, r0
   1dff0:	bge	1e00c <__assert_fail@plt+0xcc44>
   1dff4:	mov	r0, #0
   1dff8:	mvn	r1, #0
   1dffc:	str	r1, [fp, #-88]	; 0xffffffa8
   1e000:	str	r0, [fp, #-92]	; 0xffffffa4
   1e004:	b	1e040 <__assert_fail@plt+0xcc78>
   1e008:	svcvc	0x00ffffff
   1e00c:	ldr	r0, [fp, #8]
   1e010:	rsb	r0, r0, #0
   1e014:	asr	r3, r0, #31
   1e018:	mvn	r1, #0
   1e01c:	mvn	r2, #-2147483648	; 0x80000000
   1e020:	str	r0, [fp, #-96]	; 0xffffffa0
   1e024:	mov	r0, r1
   1e028:	mov	r1, r2
   1e02c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1e030:	bl	22aa0 <__assert_fail@plt+0x116d8>
   1e034:	str	r0, [fp, #-88]	; 0xffffffa8
   1e038:	str	r1, [fp, #-92]	; 0xffffffa4
   1e03c:	b	1e040 <__assert_fail@plt+0xcc78>
   1e040:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1e044:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1e048:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e04c:	mvn	r2, r2
   1e050:	subs	r1, r2, r1
   1e054:	rscs	r0, r0, r2, asr #31
   1e058:	str	r1, [fp, #-100]	; 0xffffff9c
   1e05c:	str	r0, [fp, #-104]	; 0xffffff98
   1e060:	bge	1e1e0 <__assert_fail@plt+0xce18>
   1e064:	b	1e1f4 <__assert_fail@plt+0xce2c>
   1e068:	ldr	r0, [fp, #8]
   1e06c:	cmn	r0, #1
   1e070:	bne	1e0c0 <__assert_fail@plt+0xccf8>
   1e074:	b	1e078 <__assert_fail@plt+0xccb0>
   1e078:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e07c:	mov	r1, #-2147483648	; 0x80000000
   1e080:	add	r1, r1, r0, asr #31
   1e084:	rsbs	r0, r0, #0
   1e088:	rscs	r1, r1, #0
   1e08c:	str	r0, [fp, #-108]	; 0xffffff94
   1e090:	str	r1, [fp, #-112]	; 0xffffff90
   1e094:	blt	1e1e0 <__assert_fail@plt+0xce18>
   1e098:	b	1e1f4 <__assert_fail@plt+0xce2c>
   1e09c:	andhi	r0, r0, r1
   1e0a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e0a4:	movw	r1, #0
   1e0a8:	cmp	r1, r0
   1e0ac:	bge	1e1f4 <__assert_fail@plt+0xce2c>
   1e0b0:	mov	r0, #0
   1e0b4:	cmp	r0, #0
   1e0b8:	bne	1e1e0 <__assert_fail@plt+0xce18>
   1e0bc:	b	1e1f4 <__assert_fail@plt+0xce2c>
   1e0c0:	ldr	r0, [fp, #8]
   1e0c4:	asr	r3, r0, #31
   1e0c8:	mov	r1, #0
   1e0cc:	mov	r2, #-2147483648	; 0x80000000
   1e0d0:	str	r0, [fp, #-116]	; 0xffffff8c
   1e0d4:	mov	r0, r1
   1e0d8:	mov	r1, r2
   1e0dc:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1e0e0:	bl	22aa0 <__assert_fail@plt+0x116d8>
   1e0e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e0e8:	subs	r0, r0, r2
   1e0ec:	sbcs	r1, r1, r2, asr #31
   1e0f0:	str	r0, [fp, #-120]	; 0xffffff88
   1e0f4:	str	r1, [fp, #-124]	; 0xffffff84
   1e0f8:	blt	1e1e0 <__assert_fail@plt+0xce18>
   1e0fc:	b	1e1f4 <__assert_fail@plt+0xce2c>
   1e100:	ldr	r0, [fp, #8]
   1e104:	cmp	r0, #0
   1e108:	bne	1e110 <__assert_fail@plt+0xcd48>
   1e10c:	b	1e1f4 <__assert_fail@plt+0xce2c>
   1e110:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e114:	cmp	r0, #0
   1e118:	bge	1e1a0 <__assert_fail@plt+0xcdd8>
   1e11c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e120:	cmn	r0, #1
   1e124:	bne	1e160 <__assert_fail@plt+0xcd98>
   1e128:	b	1e12c <__assert_fail@plt+0xcd64>
   1e12c:	ldr	r0, [fp, #8]
   1e130:	mov	r1, #-2147483648	; 0x80000000
   1e134:	add	r1, r1, r0, asr #31
   1e138:	rsbs	r0, r0, #0
   1e13c:	rscs	r1, r1, #0
   1e140:	str	r0, [fp, #-128]	; 0xffffff80
   1e144:	str	r1, [fp, #-132]	; 0xffffff7c
   1e148:	blt	1e1e0 <__assert_fail@plt+0xce18>
   1e14c:	b	1e1f4 <__assert_fail@plt+0xce2c>
   1e150:	mov	r0, #0
   1e154:	cmp	r0, #0
   1e158:	bne	1e1e0 <__assert_fail@plt+0xce18>
   1e15c:	b	1e1f4 <__assert_fail@plt+0xce2c>
   1e160:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e164:	asr	r3, r0, #31
   1e168:	mov	r1, #0
   1e16c:	mov	r2, #-2147483648	; 0x80000000
   1e170:	str	r0, [fp, #-136]	; 0xffffff78
   1e174:	mov	r0, r1
   1e178:	mov	r1, r2
   1e17c:	ldr	r2, [fp, #-136]	; 0xffffff78
   1e180:	bl	22aa0 <__assert_fail@plt+0x116d8>
   1e184:	ldr	r2, [fp, #8]
   1e188:	subs	r0, r0, r2
   1e18c:	sbcs	r1, r1, r2, asr #31
   1e190:	str	r0, [fp, #-140]	; 0xffffff74
   1e194:	str	r1, [fp, #-144]	; 0xffffff70
   1e198:	blt	1e1e0 <__assert_fail@plt+0xce18>
   1e19c:	b	1e1f4 <__assert_fail@plt+0xce2c>
   1e1a0:	ldr	r0, [fp, #8]
   1e1a4:	asr	r3, r0, #31
   1e1a8:	mvn	r1, #0
   1e1ac:	mvn	r2, #-2147483648	; 0x80000000
   1e1b0:	str	r0, [fp, #-148]	; 0xffffff6c
   1e1b4:	mov	r0, r1
   1e1b8:	mov	r1, r2
   1e1bc:	ldr	r2, [fp, #-148]	; 0xffffff6c
   1e1c0:	bl	22aa0 <__assert_fail@plt+0x116d8>
   1e1c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e1c8:	subs	r0, r0, r2
   1e1cc:	sbcs	r1, r1, r2, asr #31
   1e1d0:	str	r0, [fp, #-152]	; 0xffffff68
   1e1d4:	str	r1, [fp, #-156]	; 0xffffff64
   1e1d8:	bge	1e1f4 <__assert_fail@plt+0xce2c>
   1e1dc:	b	1e1e0 <__assert_fail@plt+0xce18>
   1e1e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e1e4:	ldr	r1, [fp, #8]
   1e1e8:	mul	r0, r0, r1
   1e1ec:	str	r0, [fp, #-28]	; 0xffffffe4
   1e1f0:	b	1e454 <__assert_fail@plt+0xd08c>
   1e1f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e1f8:	ldr	r1, [fp, #8]
   1e1fc:	mul	r0, r0, r1
   1e200:	str	r0, [fp, #-28]	; 0xffffffe4
   1e204:	b	1e464 <__assert_fail@plt+0xd09c>
   1e208:	ldr	r0, [fp, #8]
   1e20c:	cmp	r0, #0
   1e210:	bge	1e370 <__assert_fail@plt+0xcfa8>
   1e214:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e218:	cmp	r0, #0
   1e21c:	bge	1e2f8 <__assert_fail@plt+0xcf30>
   1e220:	b	1e268 <__assert_fail@plt+0xcea0>
   1e224:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e228:	ldr	r1, [fp, #8]
   1e22c:	asr	r3, r1, #31
   1e230:	mvn	r2, #0
   1e234:	str	r0, [fp, #-160]	; 0xffffff60
   1e238:	mov	r0, r2
   1e23c:	str	r1, [fp, #-164]	; 0xffffff5c
   1e240:	mov	r1, r2
   1e244:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1e248:	bl	22b74 <__assert_fail@plt+0x117ac>
   1e24c:	ldr	r2, [fp, #-160]	; 0xffffff60
   1e250:	subs	r0, r2, r0
   1e254:	rscs	r1, r1, r2, asr #31
   1e258:	str	r0, [fp, #-168]	; 0xffffff58
   1e25c:	str	r1, [fp, #-172]	; 0xffffff54
   1e260:	bcc	1e42c <__assert_fail@plt+0xd064>
   1e264:	b	1e440 <__assert_fail@plt+0xd078>
   1e268:	b	1e26c <__assert_fail@plt+0xcea4>
   1e26c:	ldr	r0, [pc, #-472]	; 1e09c <__assert_fail@plt+0xccd4>
   1e270:	ldr	r1, [fp, #8]
   1e274:	cmp	r1, r0
   1e278:	blt	1e290 <__assert_fail@plt+0xcec8>
   1e27c:	b	1e2a4 <__assert_fail@plt+0xcedc>
   1e280:	ldr	r0, [fp, #8]
   1e284:	movw	r1, #0
   1e288:	cmp	r1, r0
   1e28c:	bge	1e2a4 <__assert_fail@plt+0xcedc>
   1e290:	mov	r0, #1
   1e294:	mvn	r1, #0
   1e298:	str	r1, [fp, #-176]	; 0xffffff50
   1e29c:	str	r0, [fp, #-180]	; 0xffffff4c
   1e2a0:	b	1e2d0 <__assert_fail@plt+0xcf08>
   1e2a4:	ldr	r0, [fp, #8]
   1e2a8:	rsb	r0, r0, #0
   1e2ac:	asr	r3, r0, #31
   1e2b0:	mvn	r1, #0
   1e2b4:	str	r0, [fp, #-184]	; 0xffffff48
   1e2b8:	mov	r0, r1
   1e2bc:	ldr	r2, [fp, #-184]	; 0xffffff48
   1e2c0:	bl	22b74 <__assert_fail@plt+0x117ac>
   1e2c4:	str	r0, [fp, #-176]	; 0xffffff50
   1e2c8:	str	r1, [fp, #-180]	; 0xffffff4c
   1e2cc:	b	1e2d0 <__assert_fail@plt+0xcf08>
   1e2d0:	ldr	r0, [fp, #-180]	; 0xffffff4c
   1e2d4:	ldr	r1, [fp, #-176]	; 0xffffff50
   1e2d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e2dc:	mvn	r2, r2
   1e2e0:	subs	r1, r2, r1
   1e2e4:	rscs	r0, r0, r2, asr #31
   1e2e8:	str	r1, [sp, #188]	; 0xbc
   1e2ec:	str	r0, [sp, #184]	; 0xb8
   1e2f0:	bcs	1e42c <__assert_fail@plt+0xd064>
   1e2f4:	b	1e440 <__assert_fail@plt+0xd078>
   1e2f8:	b	1e2fc <__assert_fail@plt+0xcf34>
   1e2fc:	b	1e354 <__assert_fail@plt+0xcf8c>
   1e300:	b	1e354 <__assert_fail@plt+0xcf8c>
   1e304:	ldr	r0, [fp, #8]
   1e308:	cmn	r0, #1
   1e30c:	bne	1e354 <__assert_fail@plt+0xcf8c>
   1e310:	b	1e314 <__assert_fail@plt+0xcf4c>
   1e314:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e318:	add	r0, r0, #0
   1e31c:	movw	r1, #0
   1e320:	cmp	r1, r0
   1e324:	blt	1e42c <__assert_fail@plt+0xd064>
   1e328:	b	1e440 <__assert_fail@plt+0xd078>
   1e32c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e330:	movw	r1, #0
   1e334:	cmp	r1, r0
   1e338:	bge	1e440 <__assert_fail@plt+0xd078>
   1e33c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e340:	sub	r0, r0, #1
   1e344:	mvn	r1, #0
   1e348:	cmp	r1, r0
   1e34c:	blt	1e42c <__assert_fail@plt+0xd064>
   1e350:	b	1e440 <__assert_fail@plt+0xd078>
   1e354:	ldr	r0, [fp, #8]
   1e358:	movw	r1, #0
   1e35c:	sdiv	r0, r1, r0
   1e360:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e364:	cmp	r0, r1
   1e368:	blt	1e42c <__assert_fail@plt+0xd064>
   1e36c:	b	1e440 <__assert_fail@plt+0xd078>
   1e370:	ldr	r0, [fp, #8]
   1e374:	cmp	r0, #0
   1e378:	bne	1e380 <__assert_fail@plt+0xcfb8>
   1e37c:	b	1e440 <__assert_fail@plt+0xd078>
   1e380:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e384:	cmp	r0, #0
   1e388:	bge	1e3f4 <__assert_fail@plt+0xd02c>
   1e38c:	b	1e390 <__assert_fail@plt+0xcfc8>
   1e390:	b	1e3d8 <__assert_fail@plt+0xd010>
   1e394:	b	1e3d8 <__assert_fail@plt+0xd010>
   1e398:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e39c:	cmn	r0, #1
   1e3a0:	bne	1e3d8 <__assert_fail@plt+0xd010>
   1e3a4:	b	1e3a8 <__assert_fail@plt+0xcfe0>
   1e3a8:	ldr	r0, [fp, #8]
   1e3ac:	add	r0, r0, #0
   1e3b0:	movw	r1, #0
   1e3b4:	cmp	r1, r0
   1e3b8:	blt	1e42c <__assert_fail@plt+0xd064>
   1e3bc:	b	1e440 <__assert_fail@plt+0xd078>
   1e3c0:	ldr	r0, [fp, #8]
   1e3c4:	sub	r0, r0, #1
   1e3c8:	mvn	r1, #0
   1e3cc:	cmp	r1, r0
   1e3d0:	blt	1e42c <__assert_fail@plt+0xd064>
   1e3d4:	b	1e440 <__assert_fail@plt+0xd078>
   1e3d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e3dc:	movw	r1, #0
   1e3e0:	sdiv	r0, r1, r0
   1e3e4:	ldr	r1, [fp, #8]
   1e3e8:	cmp	r0, r1
   1e3ec:	blt	1e42c <__assert_fail@plt+0xd064>
   1e3f0:	b	1e440 <__assert_fail@plt+0xd078>
   1e3f4:	ldr	r0, [fp, #8]
   1e3f8:	asr	r3, r0, #31
   1e3fc:	mvn	r1, #0
   1e400:	str	r0, [sp, #180]	; 0xb4
   1e404:	mov	r0, r1
   1e408:	ldr	r2, [sp, #180]	; 0xb4
   1e40c:	bl	22b74 <__assert_fail@plt+0x117ac>
   1e410:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e414:	subs	r0, r0, r2
   1e418:	sbcs	r1, r1, r2, asr #31
   1e41c:	str	r0, [sp, #176]	; 0xb0
   1e420:	str	r1, [sp, #172]	; 0xac
   1e424:	bcs	1e440 <__assert_fail@plt+0xd078>
   1e428:	b	1e42c <__assert_fail@plt+0xd064>
   1e42c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e430:	ldr	r1, [fp, #8]
   1e434:	mul	r0, r0, r1
   1e438:	str	r0, [fp, #-28]	; 0xffffffe4
   1e43c:	b	1e454 <__assert_fail@plt+0xd08c>
   1e440:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e444:	ldr	r1, [fp, #8]
   1e448:	mul	r0, r0, r1
   1e44c:	str	r0, [fp, #-28]	; 0xffffffe4
   1e450:	b	1e464 <__assert_fail@plt+0xd09c>
   1e454:	ldr	r0, [pc, #-1108]	; 1e008 <__assert_fail@plt+0xcc40>
   1e458:	str	r0, [sp, #168]	; 0xa8
   1e45c:	b	1e484 <__assert_fail@plt+0xd0bc>
   1e460:			; <UNDEFINED> instruction: 0xffff8000
   1e464:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e468:	cmp	r0, #64	; 0x40
   1e46c:	movw	r0, #0
   1e470:	movlt	r0, #1
   1e474:	tst	r0, #1
   1e478:	movw	r0, #64	; 0x40
   1e47c:	moveq	r0, #0
   1e480:	str	r0, [sp, #168]	; 0xa8
   1e484:	ldr	r0, [sp, #168]	; 0xa8
   1e488:	str	r0, [fp, #-32]	; 0xffffffe0
   1e48c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e490:	cmp	r0, #0
   1e494:	beq	1e4c4 <__assert_fail@plt+0xd0fc>
   1e498:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e49c:	ldr	r1, [fp, #8]
   1e4a0:	sdiv	r0, r0, r1
   1e4a4:	str	r0, [fp, #-24]	; 0xffffffe8
   1e4a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e4ac:	mov	r1, r0
   1e4b0:	ldr	r2, [fp, #8]
   1e4b4:	sdiv	r3, r0, r2
   1e4b8:	mls	r0, r3, r2, r0
   1e4bc:	sub	r0, r1, r0
   1e4c0:	str	r0, [fp, #-28]	; 0xffffffe4
   1e4c4:	ldr	r0, [fp, #-4]
   1e4c8:	movw	r1, #0
   1e4cc:	cmp	r0, r1
   1e4d0:	bne	1e4e0 <__assert_fail@plt+0xd118>
   1e4d4:	ldr	r0, [fp, #-8]
   1e4d8:	movw	r1, #0
   1e4dc:	str	r1, [r0]
   1e4e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e4e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e4e8:	sub	r0, r0, r1
   1e4ec:	ldr	r1, [fp, #-12]
   1e4f0:	cmp	r0, r1
   1e4f4:	bge	1f92c <__assert_fail@plt+0xe564>
   1e4f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e4fc:	ldr	r1, [fp, #-12]
   1e500:	add	r1, r0, r1
   1e504:	mov	r2, #1
   1e508:	cmp	r1, r0
   1e50c:	movwvc	r2, #0
   1e510:	str	r1, [fp, #-24]	; 0xffffffe8
   1e514:	tst	r2, #1
   1e518:	bne	1f928 <__assert_fail@plt+0xe560>
   1e51c:	ldr	r0, [fp, #-16]
   1e520:	movw	r1, #0
   1e524:	cmp	r1, r0
   1e528:	bgt	1e53c <__assert_fail@plt+0xd174>
   1e52c:	ldr	r0, [fp, #-16]
   1e530:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e534:	cmp	r0, r1
   1e538:	blt	1f928 <__assert_fail@plt+0xe560>
   1e53c:	b	1e918 <__assert_fail@plt+0xd550>
   1e540:	b	1e544 <__assert_fail@plt+0xd17c>
   1e544:	ldr	r0, [fp, #8]
   1e548:	cmp	r0, #0
   1e54c:	bge	1e660 <__assert_fail@plt+0xd298>
   1e550:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e554:	cmp	r0, #0
   1e558:	bge	1e5e4 <__assert_fail@plt+0xd21c>
   1e55c:	b	1e560 <__assert_fail@plt+0xd198>
   1e560:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e564:	ldr	r1, [fp, #8]
   1e568:	movw	r2, #127	; 0x7f
   1e56c:	sdiv	r1, r2, r1
   1e570:	cmp	r0, r1
   1e574:	blt	1e700 <__assert_fail@plt+0xd338>
   1e578:	b	1e718 <__assert_fail@plt+0xd350>
   1e57c:	b	1e580 <__assert_fail@plt+0xd1b8>
   1e580:	ldr	r0, [pc, #-1260]	; 1e09c <__assert_fail@plt+0xccd4>
   1e584:	ldr	r1, [fp, #8]
   1e588:	cmp	r1, r0
   1e58c:	blt	1e5a4 <__assert_fail@plt+0xd1dc>
   1e590:	b	1e5b0 <__assert_fail@plt+0xd1e8>
   1e594:	ldr	r0, [fp, #8]
   1e598:	movw	r1, #0
   1e59c:	cmp	r1, r0
   1e5a0:	bge	1e5b0 <__assert_fail@plt+0xd1e8>
   1e5a4:	movw	r0, #0
   1e5a8:	str	r0, [sp, #164]	; 0xa4
   1e5ac:	b	1e5c8 <__assert_fail@plt+0xd200>
   1e5b0:	ldr	r0, [fp, #8]
   1e5b4:	movw	r1, #0
   1e5b8:	sub	r0, r1, r0
   1e5bc:	movw	r1, #127	; 0x7f
   1e5c0:	sdiv	r0, r1, r0
   1e5c4:	str	r0, [sp, #164]	; 0xa4
   1e5c8:	ldr	r0, [sp, #164]	; 0xa4
   1e5cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e5d0:	mvn	r2, #0
   1e5d4:	sub	r1, r2, r1
   1e5d8:	cmp	r0, r1
   1e5dc:	ble	1e700 <__assert_fail@plt+0xd338>
   1e5e0:	b	1e718 <__assert_fail@plt+0xd350>
   1e5e4:	b	1e5e8 <__assert_fail@plt+0xd220>
   1e5e8:	b	1e644 <__assert_fail@plt+0xd27c>
   1e5ec:	b	1e644 <__assert_fail@plt+0xd27c>
   1e5f0:	ldr	r0, [fp, #8]
   1e5f4:	cmn	r0, #1
   1e5f8:	bne	1e644 <__assert_fail@plt+0xd27c>
   1e5fc:	b	1e600 <__assert_fail@plt+0xd238>
   1e600:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e604:	mvn	r1, #127	; 0x7f
   1e608:	add	r0, r0, r1
   1e60c:	movw	r1, #0
   1e610:	cmp	r1, r0
   1e614:	blt	1e700 <__assert_fail@plt+0xd338>
   1e618:	b	1e718 <__assert_fail@plt+0xd350>
   1e61c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e620:	movw	r1, #0
   1e624:	cmp	r1, r0
   1e628:	bge	1e718 <__assert_fail@plt+0xd350>
   1e62c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e630:	sub	r0, r0, #1
   1e634:	movw	r1, #127	; 0x7f
   1e638:	cmp	r1, r0
   1e63c:	blt	1e700 <__assert_fail@plt+0xd338>
   1e640:	b	1e718 <__assert_fail@plt+0xd350>
   1e644:	ldr	r0, [fp, #8]
   1e648:	mvn	r1, #127	; 0x7f
   1e64c:	sdiv	r0, r1, r0
   1e650:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e654:	cmp	r0, r1
   1e658:	blt	1e700 <__assert_fail@plt+0xd338>
   1e65c:	b	1e718 <__assert_fail@plt+0xd350>
   1e660:	ldr	r0, [fp, #8]
   1e664:	cmp	r0, #0
   1e668:	bne	1e670 <__assert_fail@plt+0xd2a8>
   1e66c:	b	1e718 <__assert_fail@plt+0xd350>
   1e670:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e674:	cmp	r0, #0
   1e678:	bge	1e6e8 <__assert_fail@plt+0xd320>
   1e67c:	b	1e680 <__assert_fail@plt+0xd2b8>
   1e680:	b	1e6cc <__assert_fail@plt+0xd304>
   1e684:	b	1e6cc <__assert_fail@plt+0xd304>
   1e688:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e68c:	cmn	r0, #1
   1e690:	bne	1e6cc <__assert_fail@plt+0xd304>
   1e694:	b	1e698 <__assert_fail@plt+0xd2d0>
   1e698:	ldr	r0, [fp, #8]
   1e69c:	mvn	r1, #127	; 0x7f
   1e6a0:	add	r0, r0, r1
   1e6a4:	movw	r1, #0
   1e6a8:	cmp	r1, r0
   1e6ac:	blt	1e700 <__assert_fail@plt+0xd338>
   1e6b0:	b	1e718 <__assert_fail@plt+0xd350>
   1e6b4:	ldr	r0, [fp, #8]
   1e6b8:	sub	r0, r0, #1
   1e6bc:	movw	r1, #127	; 0x7f
   1e6c0:	cmp	r1, r0
   1e6c4:	blt	1e700 <__assert_fail@plt+0xd338>
   1e6c8:	b	1e718 <__assert_fail@plt+0xd350>
   1e6cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e6d0:	mvn	r1, #127	; 0x7f
   1e6d4:	sdiv	r0, r1, r0
   1e6d8:	ldr	r1, [fp, #8]
   1e6dc:	cmp	r0, r1
   1e6e0:	blt	1e700 <__assert_fail@plt+0xd338>
   1e6e4:	b	1e718 <__assert_fail@plt+0xd350>
   1e6e8:	ldr	r0, [fp, #8]
   1e6ec:	movw	r1, #127	; 0x7f
   1e6f0:	sdiv	r0, r1, r0
   1e6f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e6f8:	cmp	r0, r1
   1e6fc:	bge	1e718 <__assert_fail@plt+0xd350>
   1e700:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e704:	ldr	r1, [fp, #8]
   1e708:	mul	r0, r0, r1
   1e70c:	sxtb	r0, r0
   1e710:	str	r0, [fp, #-28]	; 0xffffffe4
   1e714:	b	1f928 <__assert_fail@plt+0xe560>
   1e718:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e71c:	ldr	r1, [fp, #8]
   1e720:	mul	r0, r0, r1
   1e724:	sxtb	r0, r0
   1e728:	str	r0, [fp, #-28]	; 0xffffffe4
   1e72c:	b	1f92c <__assert_fail@plt+0xe564>
   1e730:	ldr	r0, [fp, #8]
   1e734:	cmp	r0, #0
   1e738:	bge	1e848 <__assert_fail@plt+0xd480>
   1e73c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e740:	cmp	r0, #0
   1e744:	bge	1e7d0 <__assert_fail@plt+0xd408>
   1e748:	b	1e74c <__assert_fail@plt+0xd384>
   1e74c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e750:	ldr	r1, [fp, #8]
   1e754:	movw	r2, #255	; 0xff
   1e758:	sdiv	r1, r2, r1
   1e75c:	cmp	r0, r1
   1e760:	blt	1e8e4 <__assert_fail@plt+0xd51c>
   1e764:	b	1e900 <__assert_fail@plt+0xd538>
   1e768:	b	1e76c <__assert_fail@plt+0xd3a4>
   1e76c:	ldr	r0, [pc, #-1752]	; 1e09c <__assert_fail@plt+0xccd4>
   1e770:	ldr	r1, [fp, #8]
   1e774:	cmp	r1, r0
   1e778:	blt	1e790 <__assert_fail@plt+0xd3c8>
   1e77c:	b	1e79c <__assert_fail@plt+0xd3d4>
   1e780:	ldr	r0, [fp, #8]
   1e784:	movw	r1, #0
   1e788:	cmp	r1, r0
   1e78c:	bge	1e79c <__assert_fail@plt+0xd3d4>
   1e790:	movw	r0, #0
   1e794:	str	r0, [sp, #160]	; 0xa0
   1e798:	b	1e7b4 <__assert_fail@plt+0xd3ec>
   1e79c:	ldr	r0, [fp, #8]
   1e7a0:	movw	r1, #0
   1e7a4:	sub	r0, r1, r0
   1e7a8:	movw	r1, #255	; 0xff
   1e7ac:	sdiv	r0, r1, r0
   1e7b0:	str	r0, [sp, #160]	; 0xa0
   1e7b4:	ldr	r0, [sp, #160]	; 0xa0
   1e7b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e7bc:	mvn	r2, #0
   1e7c0:	sub	r1, r2, r1
   1e7c4:	cmp	r0, r1
   1e7c8:	ble	1e8e4 <__assert_fail@plt+0xd51c>
   1e7cc:	b	1e900 <__assert_fail@plt+0xd538>
   1e7d0:	b	1e7d4 <__assert_fail@plt+0xd40c>
   1e7d4:	b	1e82c <__assert_fail@plt+0xd464>
   1e7d8:	b	1e82c <__assert_fail@plt+0xd464>
   1e7dc:	ldr	r0, [fp, #8]
   1e7e0:	cmn	r0, #1
   1e7e4:	bne	1e82c <__assert_fail@plt+0xd464>
   1e7e8:	b	1e7ec <__assert_fail@plt+0xd424>
   1e7ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e7f0:	add	r0, r0, #0
   1e7f4:	movw	r1, #0
   1e7f8:	cmp	r1, r0
   1e7fc:	blt	1e8e4 <__assert_fail@plt+0xd51c>
   1e800:	b	1e900 <__assert_fail@plt+0xd538>
   1e804:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e808:	movw	r1, #0
   1e80c:	cmp	r1, r0
   1e810:	bge	1e900 <__assert_fail@plt+0xd538>
   1e814:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e818:	sub	r0, r0, #1
   1e81c:	mvn	r1, #0
   1e820:	cmp	r1, r0
   1e824:	blt	1e8e4 <__assert_fail@plt+0xd51c>
   1e828:	b	1e900 <__assert_fail@plt+0xd538>
   1e82c:	ldr	r0, [fp, #8]
   1e830:	movw	r1, #0
   1e834:	sdiv	r0, r1, r0
   1e838:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e83c:	cmp	r0, r1
   1e840:	blt	1e8e4 <__assert_fail@plt+0xd51c>
   1e844:	b	1e900 <__assert_fail@plt+0xd538>
   1e848:	ldr	r0, [fp, #8]
   1e84c:	cmp	r0, #0
   1e850:	bne	1e858 <__assert_fail@plt+0xd490>
   1e854:	b	1e900 <__assert_fail@plt+0xd538>
   1e858:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e85c:	cmp	r0, #0
   1e860:	bge	1e8cc <__assert_fail@plt+0xd504>
   1e864:	b	1e868 <__assert_fail@plt+0xd4a0>
   1e868:	b	1e8b0 <__assert_fail@plt+0xd4e8>
   1e86c:	b	1e8b0 <__assert_fail@plt+0xd4e8>
   1e870:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e874:	cmn	r0, #1
   1e878:	bne	1e8b0 <__assert_fail@plt+0xd4e8>
   1e87c:	b	1e880 <__assert_fail@plt+0xd4b8>
   1e880:	ldr	r0, [fp, #8]
   1e884:	add	r0, r0, #0
   1e888:	movw	r1, #0
   1e88c:	cmp	r1, r0
   1e890:	blt	1e8e4 <__assert_fail@plt+0xd51c>
   1e894:	b	1e900 <__assert_fail@plt+0xd538>
   1e898:	ldr	r0, [fp, #8]
   1e89c:	sub	r0, r0, #1
   1e8a0:	mvn	r1, #0
   1e8a4:	cmp	r1, r0
   1e8a8:	blt	1e8e4 <__assert_fail@plt+0xd51c>
   1e8ac:	b	1e900 <__assert_fail@plt+0xd538>
   1e8b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e8b4:	movw	r1, #0
   1e8b8:	sdiv	r0, r1, r0
   1e8bc:	ldr	r1, [fp, #8]
   1e8c0:	cmp	r0, r1
   1e8c4:	blt	1e8e4 <__assert_fail@plt+0xd51c>
   1e8c8:	b	1e900 <__assert_fail@plt+0xd538>
   1e8cc:	ldr	r0, [fp, #8]
   1e8d0:	movw	r1, #255	; 0xff
   1e8d4:	sdiv	r0, r1, r0
   1e8d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e8dc:	cmp	r0, r1
   1e8e0:	bge	1e900 <__assert_fail@plt+0xd538>
   1e8e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e8e8:	ldr	r1, [fp, #8]
   1e8ec:	mul	r0, r0, r1
   1e8f0:	and	r0, r0, #255	; 0xff
   1e8f4:	str	r0, [fp, #-28]	; 0xffffffe4
   1e8f8:	b	1f928 <__assert_fail@plt+0xe560>
   1e8fc:	andhi	r0, r0, r0
   1e900:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e904:	ldr	r1, [fp, #8]
   1e908:	mul	r0, r0, r1
   1e90c:	and	r0, r0, #255	; 0xff
   1e910:	str	r0, [fp, #-28]	; 0xffffffe4
   1e914:	b	1f92c <__assert_fail@plt+0xe564>
   1e918:	b	1ecf0 <__assert_fail@plt+0xd928>
   1e91c:	b	1e920 <__assert_fail@plt+0xd558>
   1e920:	ldr	r0, [fp, #8]
   1e924:	cmp	r0, #0
   1e928:	bge	1ea3c <__assert_fail@plt+0xd674>
   1e92c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e930:	cmp	r0, #0
   1e934:	bge	1e9c0 <__assert_fail@plt+0xd5f8>
   1e938:	b	1e93c <__assert_fail@plt+0xd574>
   1e93c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e940:	ldr	r1, [fp, #8]
   1e944:	movw	r2, #32767	; 0x7fff
   1e948:	sdiv	r1, r2, r1
   1e94c:	cmp	r0, r1
   1e950:	blt	1eadc <__assert_fail@plt+0xd714>
   1e954:	b	1eaf4 <__assert_fail@plt+0xd72c>
   1e958:	b	1e95c <__assert_fail@plt+0xd594>
   1e95c:	ldr	r0, [pc, #4084]	; 1f958 <__assert_fail@plt+0xe590>
   1e960:	ldr	r1, [fp, #8]
   1e964:	cmp	r1, r0
   1e968:	blt	1e980 <__assert_fail@plt+0xd5b8>
   1e96c:	b	1e98c <__assert_fail@plt+0xd5c4>
   1e970:	ldr	r0, [fp, #8]
   1e974:	movw	r1, #0
   1e978:	cmp	r1, r0
   1e97c:	bge	1e98c <__assert_fail@plt+0xd5c4>
   1e980:	movw	r0, #0
   1e984:	str	r0, [sp, #156]	; 0x9c
   1e988:	b	1e9a4 <__assert_fail@plt+0xd5dc>
   1e98c:	ldr	r0, [fp, #8]
   1e990:	movw	r1, #0
   1e994:	sub	r0, r1, r0
   1e998:	movw	r1, #32767	; 0x7fff
   1e99c:	sdiv	r0, r1, r0
   1e9a0:	str	r0, [sp, #156]	; 0x9c
   1e9a4:	ldr	r0, [sp, #156]	; 0x9c
   1e9a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e9ac:	mvn	r2, #0
   1e9b0:	sub	r1, r2, r1
   1e9b4:	cmp	r0, r1
   1e9b8:	ble	1eadc <__assert_fail@plt+0xd714>
   1e9bc:	b	1eaf4 <__assert_fail@plt+0xd72c>
   1e9c0:	b	1e9c4 <__assert_fail@plt+0xd5fc>
   1e9c4:	b	1ea20 <__assert_fail@plt+0xd658>
   1e9c8:	b	1ea20 <__assert_fail@plt+0xd658>
   1e9cc:	ldr	r0, [fp, #8]
   1e9d0:	cmn	r0, #1
   1e9d4:	bne	1ea20 <__assert_fail@plt+0xd658>
   1e9d8:	b	1e9dc <__assert_fail@plt+0xd614>
   1e9dc:	ldr	r0, [pc, #3964]	; 1f960 <__assert_fail@plt+0xe598>
   1e9e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e9e4:	add	r0, r1, r0
   1e9e8:	movw	r1, #0
   1e9ec:	cmp	r1, r0
   1e9f0:	blt	1eadc <__assert_fail@plt+0xd714>
   1e9f4:	b	1eaf4 <__assert_fail@plt+0xd72c>
   1e9f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e9fc:	movw	r1, #0
   1ea00:	cmp	r1, r0
   1ea04:	bge	1eaf4 <__assert_fail@plt+0xd72c>
   1ea08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ea0c:	sub	r0, r0, #1
   1ea10:	movw	r1, #32767	; 0x7fff
   1ea14:	cmp	r1, r0
   1ea18:	blt	1eadc <__assert_fail@plt+0xd714>
   1ea1c:	b	1eaf4 <__assert_fail@plt+0xd72c>
   1ea20:	ldr	r0, [pc, #3896]	; 1f960 <__assert_fail@plt+0xe598>
   1ea24:	ldr	r1, [fp, #8]
   1ea28:	sdiv	r0, r0, r1
   1ea2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ea30:	cmp	r0, r1
   1ea34:	blt	1eadc <__assert_fail@plt+0xd714>
   1ea38:	b	1eaf4 <__assert_fail@plt+0xd72c>
   1ea3c:	ldr	r0, [fp, #8]
   1ea40:	cmp	r0, #0
   1ea44:	bne	1ea4c <__assert_fail@plt+0xd684>
   1ea48:	b	1eaf4 <__assert_fail@plt+0xd72c>
   1ea4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ea50:	cmp	r0, #0
   1ea54:	bge	1eac4 <__assert_fail@plt+0xd6fc>
   1ea58:	b	1ea5c <__assert_fail@plt+0xd694>
   1ea5c:	b	1eaa8 <__assert_fail@plt+0xd6e0>
   1ea60:	b	1eaa8 <__assert_fail@plt+0xd6e0>
   1ea64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ea68:	cmn	r0, #1
   1ea6c:	bne	1eaa8 <__assert_fail@plt+0xd6e0>
   1ea70:	b	1ea74 <__assert_fail@plt+0xd6ac>
   1ea74:	ldr	r0, [pc, #3812]	; 1f960 <__assert_fail@plt+0xe598>
   1ea78:	ldr	r1, [fp, #8]
   1ea7c:	add	r0, r1, r0
   1ea80:	movw	r1, #0
   1ea84:	cmp	r1, r0
   1ea88:	blt	1eadc <__assert_fail@plt+0xd714>
   1ea8c:	b	1eaf4 <__assert_fail@plt+0xd72c>
   1ea90:	ldr	r0, [fp, #8]
   1ea94:	sub	r0, r0, #1
   1ea98:	movw	r1, #32767	; 0x7fff
   1ea9c:	cmp	r1, r0
   1eaa0:	blt	1eadc <__assert_fail@plt+0xd714>
   1eaa4:	b	1eaf4 <__assert_fail@plt+0xd72c>
   1eaa8:	ldr	r0, [pc, #3760]	; 1f960 <__assert_fail@plt+0xe598>
   1eaac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eab0:	sdiv	r0, r0, r1
   1eab4:	ldr	r1, [fp, #8]
   1eab8:	cmp	r0, r1
   1eabc:	blt	1eadc <__assert_fail@plt+0xd714>
   1eac0:	b	1eaf4 <__assert_fail@plt+0xd72c>
   1eac4:	ldr	r0, [fp, #8]
   1eac8:	movw	r1, #32767	; 0x7fff
   1eacc:	sdiv	r0, r1, r0
   1ead0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ead4:	cmp	r0, r1
   1ead8:	bge	1eaf4 <__assert_fail@plt+0xd72c>
   1eadc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eae0:	ldr	r1, [fp, #8]
   1eae4:	mul	r0, r0, r1
   1eae8:	sxth	r0, r0
   1eaec:	str	r0, [fp, #-28]	; 0xffffffe4
   1eaf0:	b	1f928 <__assert_fail@plt+0xe560>
   1eaf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eaf8:	ldr	r1, [fp, #8]
   1eafc:	mul	r0, r0, r1
   1eb00:	sxth	r0, r0
   1eb04:	str	r0, [fp, #-28]	; 0xffffffe4
   1eb08:	b	1f92c <__assert_fail@plt+0xe564>
   1eb0c:	ldr	r0, [fp, #8]
   1eb10:	cmp	r0, #0
   1eb14:	bge	1ec24 <__assert_fail@plt+0xd85c>
   1eb18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb1c:	cmp	r0, #0
   1eb20:	bge	1ebac <__assert_fail@plt+0xd7e4>
   1eb24:	b	1eb28 <__assert_fail@plt+0xd760>
   1eb28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb2c:	ldr	r1, [fp, #8]
   1eb30:	movw	r2, #65535	; 0xffff
   1eb34:	sdiv	r1, r2, r1
   1eb38:	cmp	r0, r1
   1eb3c:	blt	1ecc0 <__assert_fail@plt+0xd8f8>
   1eb40:	b	1ecd8 <__assert_fail@plt+0xd910>
   1eb44:	b	1eb48 <__assert_fail@plt+0xd780>
   1eb48:	ldr	r0, [pc, #3592]	; 1f958 <__assert_fail@plt+0xe590>
   1eb4c:	ldr	r1, [fp, #8]
   1eb50:	cmp	r1, r0
   1eb54:	blt	1eb6c <__assert_fail@plt+0xd7a4>
   1eb58:	b	1eb78 <__assert_fail@plt+0xd7b0>
   1eb5c:	ldr	r0, [fp, #8]
   1eb60:	movw	r1, #0
   1eb64:	cmp	r1, r0
   1eb68:	bge	1eb78 <__assert_fail@plt+0xd7b0>
   1eb6c:	movw	r0, #0
   1eb70:	str	r0, [sp, #152]	; 0x98
   1eb74:	b	1eb90 <__assert_fail@plt+0xd7c8>
   1eb78:	ldr	r0, [fp, #8]
   1eb7c:	movw	r1, #0
   1eb80:	sub	r0, r1, r0
   1eb84:	movw	r1, #65535	; 0xffff
   1eb88:	sdiv	r0, r1, r0
   1eb8c:	str	r0, [sp, #152]	; 0x98
   1eb90:	ldr	r0, [sp, #152]	; 0x98
   1eb94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eb98:	mvn	r2, #0
   1eb9c:	sub	r1, r2, r1
   1eba0:	cmp	r0, r1
   1eba4:	ble	1ecc0 <__assert_fail@plt+0xd8f8>
   1eba8:	b	1ecd8 <__assert_fail@plt+0xd910>
   1ebac:	b	1ebb0 <__assert_fail@plt+0xd7e8>
   1ebb0:	b	1ec08 <__assert_fail@plt+0xd840>
   1ebb4:	b	1ec08 <__assert_fail@plt+0xd840>
   1ebb8:	ldr	r0, [fp, #8]
   1ebbc:	cmn	r0, #1
   1ebc0:	bne	1ec08 <__assert_fail@plt+0xd840>
   1ebc4:	b	1ebc8 <__assert_fail@plt+0xd800>
   1ebc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ebcc:	add	r0, r0, #0
   1ebd0:	movw	r1, #0
   1ebd4:	cmp	r1, r0
   1ebd8:	blt	1ecc0 <__assert_fail@plt+0xd8f8>
   1ebdc:	b	1ecd8 <__assert_fail@plt+0xd910>
   1ebe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ebe4:	movw	r1, #0
   1ebe8:	cmp	r1, r0
   1ebec:	bge	1ecd8 <__assert_fail@plt+0xd910>
   1ebf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ebf4:	sub	r0, r0, #1
   1ebf8:	mvn	r1, #0
   1ebfc:	cmp	r1, r0
   1ec00:	blt	1ecc0 <__assert_fail@plt+0xd8f8>
   1ec04:	b	1ecd8 <__assert_fail@plt+0xd910>
   1ec08:	ldr	r0, [fp, #8]
   1ec0c:	movw	r1, #0
   1ec10:	sdiv	r0, r1, r0
   1ec14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ec18:	cmp	r0, r1
   1ec1c:	blt	1ecc0 <__assert_fail@plt+0xd8f8>
   1ec20:	b	1ecd8 <__assert_fail@plt+0xd910>
   1ec24:	ldr	r0, [fp, #8]
   1ec28:	cmp	r0, #0
   1ec2c:	bne	1ec34 <__assert_fail@plt+0xd86c>
   1ec30:	b	1ecd8 <__assert_fail@plt+0xd910>
   1ec34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec38:	cmp	r0, #0
   1ec3c:	bge	1eca8 <__assert_fail@plt+0xd8e0>
   1ec40:	b	1ec44 <__assert_fail@plt+0xd87c>
   1ec44:	b	1ec8c <__assert_fail@plt+0xd8c4>
   1ec48:	b	1ec8c <__assert_fail@plt+0xd8c4>
   1ec4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec50:	cmn	r0, #1
   1ec54:	bne	1ec8c <__assert_fail@plt+0xd8c4>
   1ec58:	b	1ec5c <__assert_fail@plt+0xd894>
   1ec5c:	ldr	r0, [fp, #8]
   1ec60:	add	r0, r0, #0
   1ec64:	movw	r1, #0
   1ec68:	cmp	r1, r0
   1ec6c:	blt	1ecc0 <__assert_fail@plt+0xd8f8>
   1ec70:	b	1ecd8 <__assert_fail@plt+0xd910>
   1ec74:	ldr	r0, [fp, #8]
   1ec78:	sub	r0, r0, #1
   1ec7c:	mvn	r1, #0
   1ec80:	cmp	r1, r0
   1ec84:	blt	1ecc0 <__assert_fail@plt+0xd8f8>
   1ec88:	b	1ecd8 <__assert_fail@plt+0xd910>
   1ec8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec90:	movw	r1, #0
   1ec94:	sdiv	r0, r1, r0
   1ec98:	ldr	r1, [fp, #8]
   1ec9c:	cmp	r0, r1
   1eca0:	blt	1ecc0 <__assert_fail@plt+0xd8f8>
   1eca4:	b	1ecd8 <__assert_fail@plt+0xd910>
   1eca8:	ldr	r0, [fp, #8]
   1ecac:	movw	r1, #65535	; 0xffff
   1ecb0:	sdiv	r0, r1, r0
   1ecb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ecb8:	cmp	r0, r1
   1ecbc:	bge	1ecd8 <__assert_fail@plt+0xd910>
   1ecc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ecc4:	ldr	r1, [fp, #8]
   1ecc8:	mul	r0, r0, r1
   1eccc:	uxth	r0, r0
   1ecd0:	str	r0, [fp, #-28]	; 0xffffffe4
   1ecd4:	b	1f928 <__assert_fail@plt+0xe560>
   1ecd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ecdc:	ldr	r1, [fp, #8]
   1ece0:	mul	r0, r0, r1
   1ece4:	uxth	r0, r0
   1ece8:	str	r0, [fp, #-28]	; 0xffffffe4
   1ecec:	b	1f92c <__assert_fail@plt+0xe564>
   1ecf0:	b	1ecf4 <__assert_fail@plt+0xd92c>
   1ecf4:	b	1ecf8 <__assert_fail@plt+0xd930>
   1ecf8:	ldr	r0, [fp, #8]
   1ecfc:	cmp	r0, #0
   1ed00:	bge	1ee04 <__assert_fail@plt+0xda3c>
   1ed04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed08:	cmp	r0, #0
   1ed0c:	bge	1ed98 <__assert_fail@plt+0xd9d0>
   1ed10:	b	1ed14 <__assert_fail@plt+0xd94c>
   1ed14:	ldr	r0, [pc, #3128]	; 1f954 <__assert_fail@plt+0xe58c>
   1ed18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ed1c:	ldr	r2, [fp, #8]
   1ed20:	sdiv	r0, r0, r2
   1ed24:	cmp	r1, r0
   1ed28:	blt	1ee94 <__assert_fail@plt+0xdacc>
   1ed2c:	b	1eea8 <__assert_fail@plt+0xdae0>
   1ed30:	b	1ed34 <__assert_fail@plt+0xd96c>
   1ed34:	ldr	r0, [pc, #3100]	; 1f958 <__assert_fail@plt+0xe590>
   1ed38:	ldr	r1, [fp, #8]
   1ed3c:	cmp	r1, r0
   1ed40:	blt	1ed58 <__assert_fail@plt+0xd990>
   1ed44:	b	1ed64 <__assert_fail@plt+0xd99c>
   1ed48:	ldr	r0, [fp, #8]
   1ed4c:	movw	r1, #0
   1ed50:	cmp	r1, r0
   1ed54:	bge	1ed64 <__assert_fail@plt+0xd99c>
   1ed58:	movw	r0, #0
   1ed5c:	str	r0, [sp, #148]	; 0x94
   1ed60:	b	1ed7c <__assert_fail@plt+0xd9b4>
   1ed64:	ldr	r0, [pc, #3048]	; 1f954 <__assert_fail@plt+0xe58c>
   1ed68:	ldr	r1, [fp, #8]
   1ed6c:	movw	r2, #0
   1ed70:	sub	r1, r2, r1
   1ed74:	sdiv	r0, r0, r1
   1ed78:	str	r0, [sp, #148]	; 0x94
   1ed7c:	ldr	r0, [sp, #148]	; 0x94
   1ed80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ed84:	mvn	r2, #0
   1ed88:	sub	r1, r2, r1
   1ed8c:	cmp	r0, r1
   1ed90:	ble	1ee94 <__assert_fail@plt+0xdacc>
   1ed94:	b	1eea8 <__assert_fail@plt+0xdae0>
   1ed98:	ldr	r0, [fp, #8]
   1ed9c:	cmn	r0, #1
   1eda0:	bne	1ede8 <__assert_fail@plt+0xda20>
   1eda4:	b	1eda8 <__assert_fail@plt+0xd9e0>
   1eda8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1edac:	add	r0, r0, #-2147483648	; 0x80000000
   1edb0:	movw	r1, #0
   1edb4:	cmp	r1, r0
   1edb8:	blt	1ee94 <__assert_fail@plt+0xdacc>
   1edbc:	b	1eea8 <__assert_fail@plt+0xdae0>
   1edc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1edc4:	movw	r1, #0
   1edc8:	cmp	r1, r0
   1edcc:	bge	1eea8 <__assert_fail@plt+0xdae0>
   1edd0:	ldr	r0, [pc, #2940]	; 1f954 <__assert_fail@plt+0xe58c>
   1edd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1edd8:	sub	r1, r1, #1
   1eddc:	cmp	r0, r1
   1ede0:	blt	1ee94 <__assert_fail@plt+0xdacc>
   1ede4:	b	1eea8 <__assert_fail@plt+0xdae0>
   1ede8:	ldr	r0, [pc, #2924]	; 1f95c <__assert_fail@plt+0xe594>
   1edec:	ldr	r1, [fp, #8]
   1edf0:	sdiv	r0, r0, r1
   1edf4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1edf8:	cmp	r0, r1
   1edfc:	blt	1ee94 <__assert_fail@plt+0xdacc>
   1ee00:	b	1eea8 <__assert_fail@plt+0xdae0>
   1ee04:	ldr	r0, [fp, #8]
   1ee08:	cmp	r0, #0
   1ee0c:	bne	1ee14 <__assert_fail@plt+0xda4c>
   1ee10:	b	1eea8 <__assert_fail@plt+0xdae0>
   1ee14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee18:	cmp	r0, #0
   1ee1c:	bge	1ee7c <__assert_fail@plt+0xdab4>
   1ee20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee24:	cmn	r0, #1
   1ee28:	bne	1ee60 <__assert_fail@plt+0xda98>
   1ee2c:	b	1ee30 <__assert_fail@plt+0xda68>
   1ee30:	ldr	r0, [fp, #8]
   1ee34:	add	r0, r0, #-2147483648	; 0x80000000
   1ee38:	movw	r1, #0
   1ee3c:	cmp	r1, r0
   1ee40:	blt	1ee94 <__assert_fail@plt+0xdacc>
   1ee44:	b	1eea8 <__assert_fail@plt+0xdae0>
   1ee48:	ldr	r0, [pc, #2820]	; 1f954 <__assert_fail@plt+0xe58c>
   1ee4c:	ldr	r1, [fp, #8]
   1ee50:	sub	r1, r1, #1
   1ee54:	cmp	r0, r1
   1ee58:	blt	1ee94 <__assert_fail@plt+0xdacc>
   1ee5c:	b	1eea8 <__assert_fail@plt+0xdae0>
   1ee60:	ldr	r0, [pc, #2804]	; 1f95c <__assert_fail@plt+0xe594>
   1ee64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ee68:	sdiv	r0, r0, r1
   1ee6c:	ldr	r1, [fp, #8]
   1ee70:	cmp	r0, r1
   1ee74:	blt	1ee94 <__assert_fail@plt+0xdacc>
   1ee78:	b	1eea8 <__assert_fail@plt+0xdae0>
   1ee7c:	ldr	r0, [pc, #2768]	; 1f954 <__assert_fail@plt+0xe58c>
   1ee80:	ldr	r1, [fp, #8]
   1ee84:	sdiv	r0, r0, r1
   1ee88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ee8c:	cmp	r0, r1
   1ee90:	bge	1eea8 <__assert_fail@plt+0xdae0>
   1ee94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee98:	ldr	r1, [fp, #8]
   1ee9c:	mul	r0, r0, r1
   1eea0:	str	r0, [fp, #-28]	; 0xffffffe4
   1eea4:	b	1f928 <__assert_fail@plt+0xe560>
   1eea8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eeac:	ldr	r1, [fp, #8]
   1eeb0:	mul	r0, r0, r1
   1eeb4:	str	r0, [fp, #-28]	; 0xffffffe4
   1eeb8:	b	1f92c <__assert_fail@plt+0xe564>
   1eebc:	ldr	r0, [fp, #8]
   1eec0:	cmp	r0, #0
   1eec4:	bge	1efd4 <__assert_fail@plt+0xdc0c>
   1eec8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eecc:	cmp	r0, #0
   1eed0:	bge	1ef5c <__assert_fail@plt+0xdb94>
   1eed4:	b	1eef4 <__assert_fail@plt+0xdb2c>
   1eed8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eedc:	ldr	r1, [fp, #8]
   1eee0:	mvn	r2, #0
   1eee4:	udiv	r1, r2, r1
   1eee8:	cmp	r0, r1
   1eeec:	bcc	1f070 <__assert_fail@plt+0xdca8>
   1eef0:	b	1f084 <__assert_fail@plt+0xdcbc>
   1eef4:	b	1eef8 <__assert_fail@plt+0xdb30>
   1eef8:	ldr	r0, [pc, #2648]	; 1f958 <__assert_fail@plt+0xe590>
   1eefc:	ldr	r1, [fp, #8]
   1ef00:	cmp	r1, r0
   1ef04:	blt	1ef1c <__assert_fail@plt+0xdb54>
   1ef08:	b	1ef28 <__assert_fail@plt+0xdb60>
   1ef0c:	ldr	r0, [fp, #8]
   1ef10:	movw	r1, #0
   1ef14:	cmp	r1, r0
   1ef18:	bge	1ef28 <__assert_fail@plt+0xdb60>
   1ef1c:	movw	r0, #1
   1ef20:	str	r0, [sp, #144]	; 0x90
   1ef24:	b	1ef40 <__assert_fail@plt+0xdb78>
   1ef28:	ldr	r0, [fp, #8]
   1ef2c:	movw	r1, #0
   1ef30:	sub	r0, r1, r0
   1ef34:	mvn	r1, #0
   1ef38:	udiv	r0, r1, r0
   1ef3c:	str	r0, [sp, #144]	; 0x90
   1ef40:	ldr	r0, [sp, #144]	; 0x90
   1ef44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ef48:	mvn	r2, #0
   1ef4c:	sub	r1, r2, r1
   1ef50:	cmp	r0, r1
   1ef54:	bls	1f070 <__assert_fail@plt+0xdca8>
   1ef58:	b	1f084 <__assert_fail@plt+0xdcbc>
   1ef5c:	b	1ef60 <__assert_fail@plt+0xdb98>
   1ef60:	b	1efb8 <__assert_fail@plt+0xdbf0>
   1ef64:	b	1efb8 <__assert_fail@plt+0xdbf0>
   1ef68:	ldr	r0, [fp, #8]
   1ef6c:	cmn	r0, #1
   1ef70:	bne	1efb8 <__assert_fail@plt+0xdbf0>
   1ef74:	b	1ef78 <__assert_fail@plt+0xdbb0>
   1ef78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ef7c:	add	r0, r0, #0
   1ef80:	movw	r1, #0
   1ef84:	cmp	r1, r0
   1ef88:	blt	1f070 <__assert_fail@plt+0xdca8>
   1ef8c:	b	1f084 <__assert_fail@plt+0xdcbc>
   1ef90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ef94:	movw	r1, #0
   1ef98:	cmp	r1, r0
   1ef9c:	bge	1f084 <__assert_fail@plt+0xdcbc>
   1efa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1efa4:	sub	r0, r0, #1
   1efa8:	mvn	r1, #0
   1efac:	cmp	r1, r0
   1efb0:	blt	1f070 <__assert_fail@plt+0xdca8>
   1efb4:	b	1f084 <__assert_fail@plt+0xdcbc>
   1efb8:	ldr	r0, [fp, #8]
   1efbc:	movw	r1, #0
   1efc0:	sdiv	r0, r1, r0
   1efc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1efc8:	cmp	r0, r1
   1efcc:	blt	1f070 <__assert_fail@plt+0xdca8>
   1efd0:	b	1f084 <__assert_fail@plt+0xdcbc>
   1efd4:	ldr	r0, [fp, #8]
   1efd8:	cmp	r0, #0
   1efdc:	bne	1efe4 <__assert_fail@plt+0xdc1c>
   1efe0:	b	1f084 <__assert_fail@plt+0xdcbc>
   1efe4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1efe8:	cmp	r0, #0
   1efec:	bge	1f058 <__assert_fail@plt+0xdc90>
   1eff0:	b	1eff4 <__assert_fail@plt+0xdc2c>
   1eff4:	b	1f03c <__assert_fail@plt+0xdc74>
   1eff8:	b	1f03c <__assert_fail@plt+0xdc74>
   1effc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f000:	cmn	r0, #1
   1f004:	bne	1f03c <__assert_fail@plt+0xdc74>
   1f008:	b	1f00c <__assert_fail@plt+0xdc44>
   1f00c:	ldr	r0, [fp, #8]
   1f010:	add	r0, r0, #0
   1f014:	movw	r1, #0
   1f018:	cmp	r1, r0
   1f01c:	blt	1f070 <__assert_fail@plt+0xdca8>
   1f020:	b	1f084 <__assert_fail@plt+0xdcbc>
   1f024:	ldr	r0, [fp, #8]
   1f028:	sub	r0, r0, #1
   1f02c:	mvn	r1, #0
   1f030:	cmp	r1, r0
   1f034:	blt	1f070 <__assert_fail@plt+0xdca8>
   1f038:	b	1f084 <__assert_fail@plt+0xdcbc>
   1f03c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f040:	movw	r1, #0
   1f044:	sdiv	r0, r1, r0
   1f048:	ldr	r1, [fp, #8]
   1f04c:	cmp	r0, r1
   1f050:	blt	1f070 <__assert_fail@plt+0xdca8>
   1f054:	b	1f084 <__assert_fail@plt+0xdcbc>
   1f058:	ldr	r0, [fp, #8]
   1f05c:	mvn	r1, #0
   1f060:	udiv	r0, r1, r0
   1f064:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f068:	cmp	r0, r1
   1f06c:	bcs	1f084 <__assert_fail@plt+0xdcbc>
   1f070:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f074:	ldr	r1, [fp, #8]
   1f078:	mul	r0, r0, r1
   1f07c:	str	r0, [fp, #-28]	; 0xffffffe4
   1f080:	b	1f928 <__assert_fail@plt+0xe560>
   1f084:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f088:	ldr	r1, [fp, #8]
   1f08c:	mul	r0, r0, r1
   1f090:	str	r0, [fp, #-28]	; 0xffffffe4
   1f094:	b	1f92c <__assert_fail@plt+0xe564>
   1f098:	b	1f09c <__assert_fail@plt+0xdcd4>
   1f09c:	b	1f0a0 <__assert_fail@plt+0xdcd8>
   1f0a0:	ldr	r0, [fp, #8]
   1f0a4:	cmp	r0, #0
   1f0a8:	bge	1f1ac <__assert_fail@plt+0xdde4>
   1f0ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f0b0:	cmp	r0, #0
   1f0b4:	bge	1f140 <__assert_fail@plt+0xdd78>
   1f0b8:	b	1f0bc <__assert_fail@plt+0xdcf4>
   1f0bc:	ldr	r0, [pc, #2192]	; 1f954 <__assert_fail@plt+0xe58c>
   1f0c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f0c4:	ldr	r2, [fp, #8]
   1f0c8:	sdiv	r0, r0, r2
   1f0cc:	cmp	r1, r0
   1f0d0:	blt	1f23c <__assert_fail@plt+0xde74>
   1f0d4:	b	1f250 <__assert_fail@plt+0xde88>
   1f0d8:	b	1f0dc <__assert_fail@plt+0xdd14>
   1f0dc:	ldr	r0, [pc, #2164]	; 1f958 <__assert_fail@plt+0xe590>
   1f0e0:	ldr	r1, [fp, #8]
   1f0e4:	cmp	r1, r0
   1f0e8:	blt	1f100 <__assert_fail@plt+0xdd38>
   1f0ec:	b	1f10c <__assert_fail@plt+0xdd44>
   1f0f0:	ldr	r0, [fp, #8]
   1f0f4:	movw	r1, #0
   1f0f8:	cmp	r1, r0
   1f0fc:	bge	1f10c <__assert_fail@plt+0xdd44>
   1f100:	movw	r0, #0
   1f104:	str	r0, [sp, #140]	; 0x8c
   1f108:	b	1f124 <__assert_fail@plt+0xdd5c>
   1f10c:	ldr	r0, [pc, #2112]	; 1f954 <__assert_fail@plt+0xe58c>
   1f110:	ldr	r1, [fp, #8]
   1f114:	movw	r2, #0
   1f118:	sub	r1, r2, r1
   1f11c:	sdiv	r0, r0, r1
   1f120:	str	r0, [sp, #140]	; 0x8c
   1f124:	ldr	r0, [sp, #140]	; 0x8c
   1f128:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f12c:	mvn	r2, #0
   1f130:	sub	r1, r2, r1
   1f134:	cmp	r0, r1
   1f138:	ble	1f23c <__assert_fail@plt+0xde74>
   1f13c:	b	1f250 <__assert_fail@plt+0xde88>
   1f140:	ldr	r0, [fp, #8]
   1f144:	cmn	r0, #1
   1f148:	bne	1f190 <__assert_fail@plt+0xddc8>
   1f14c:	b	1f150 <__assert_fail@plt+0xdd88>
   1f150:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f154:	add	r0, r0, #-2147483648	; 0x80000000
   1f158:	movw	r1, #0
   1f15c:	cmp	r1, r0
   1f160:	blt	1f23c <__assert_fail@plt+0xde74>
   1f164:	b	1f250 <__assert_fail@plt+0xde88>
   1f168:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f16c:	movw	r1, #0
   1f170:	cmp	r1, r0
   1f174:	bge	1f250 <__assert_fail@plt+0xde88>
   1f178:	ldr	r0, [pc, #2004]	; 1f954 <__assert_fail@plt+0xe58c>
   1f17c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f180:	sub	r1, r1, #1
   1f184:	cmp	r0, r1
   1f188:	blt	1f23c <__assert_fail@plt+0xde74>
   1f18c:	b	1f250 <__assert_fail@plt+0xde88>
   1f190:	ldr	r0, [pc, #1988]	; 1f95c <__assert_fail@plt+0xe594>
   1f194:	ldr	r1, [fp, #8]
   1f198:	sdiv	r0, r0, r1
   1f19c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f1a0:	cmp	r0, r1
   1f1a4:	blt	1f23c <__assert_fail@plt+0xde74>
   1f1a8:	b	1f250 <__assert_fail@plt+0xde88>
   1f1ac:	ldr	r0, [fp, #8]
   1f1b0:	cmp	r0, #0
   1f1b4:	bne	1f1bc <__assert_fail@plt+0xddf4>
   1f1b8:	b	1f250 <__assert_fail@plt+0xde88>
   1f1bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f1c0:	cmp	r0, #0
   1f1c4:	bge	1f224 <__assert_fail@plt+0xde5c>
   1f1c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f1cc:	cmn	r0, #1
   1f1d0:	bne	1f208 <__assert_fail@plt+0xde40>
   1f1d4:	b	1f1d8 <__assert_fail@plt+0xde10>
   1f1d8:	ldr	r0, [fp, #8]
   1f1dc:	add	r0, r0, #-2147483648	; 0x80000000
   1f1e0:	movw	r1, #0
   1f1e4:	cmp	r1, r0
   1f1e8:	blt	1f23c <__assert_fail@plt+0xde74>
   1f1ec:	b	1f250 <__assert_fail@plt+0xde88>
   1f1f0:	ldr	r0, [pc, #1884]	; 1f954 <__assert_fail@plt+0xe58c>
   1f1f4:	ldr	r1, [fp, #8]
   1f1f8:	sub	r1, r1, #1
   1f1fc:	cmp	r0, r1
   1f200:	blt	1f23c <__assert_fail@plt+0xde74>
   1f204:	b	1f250 <__assert_fail@plt+0xde88>
   1f208:	ldr	r0, [pc, #1868]	; 1f95c <__assert_fail@plt+0xe594>
   1f20c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f210:	sdiv	r0, r0, r1
   1f214:	ldr	r1, [fp, #8]
   1f218:	cmp	r0, r1
   1f21c:	blt	1f23c <__assert_fail@plt+0xde74>
   1f220:	b	1f250 <__assert_fail@plt+0xde88>
   1f224:	ldr	r0, [pc, #1832]	; 1f954 <__assert_fail@plt+0xe58c>
   1f228:	ldr	r1, [fp, #8]
   1f22c:	sdiv	r0, r0, r1
   1f230:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f234:	cmp	r0, r1
   1f238:	bge	1f250 <__assert_fail@plt+0xde88>
   1f23c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f240:	ldr	r1, [fp, #8]
   1f244:	mul	r0, r0, r1
   1f248:	str	r0, [fp, #-28]	; 0xffffffe4
   1f24c:	b	1f928 <__assert_fail@plt+0xe560>
   1f250:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f254:	ldr	r1, [fp, #8]
   1f258:	mul	r0, r0, r1
   1f25c:	str	r0, [fp, #-28]	; 0xffffffe4
   1f260:	b	1f92c <__assert_fail@plt+0xe564>
   1f264:	ldr	r0, [fp, #8]
   1f268:	cmp	r0, #0
   1f26c:	bge	1f37c <__assert_fail@plt+0xdfb4>
   1f270:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f274:	cmp	r0, #0
   1f278:	bge	1f304 <__assert_fail@plt+0xdf3c>
   1f27c:	b	1f29c <__assert_fail@plt+0xded4>
   1f280:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f284:	ldr	r1, [fp, #8]
   1f288:	mvn	r2, #0
   1f28c:	udiv	r1, r2, r1
   1f290:	cmp	r0, r1
   1f294:	bcc	1f418 <__assert_fail@plt+0xe050>
   1f298:	b	1f42c <__assert_fail@plt+0xe064>
   1f29c:	b	1f2a0 <__assert_fail@plt+0xded8>
   1f2a0:	ldr	r0, [pc, #1712]	; 1f958 <__assert_fail@plt+0xe590>
   1f2a4:	ldr	r1, [fp, #8]
   1f2a8:	cmp	r1, r0
   1f2ac:	blt	1f2c4 <__assert_fail@plt+0xdefc>
   1f2b0:	b	1f2d0 <__assert_fail@plt+0xdf08>
   1f2b4:	ldr	r0, [fp, #8]
   1f2b8:	movw	r1, #0
   1f2bc:	cmp	r1, r0
   1f2c0:	bge	1f2d0 <__assert_fail@plt+0xdf08>
   1f2c4:	movw	r0, #1
   1f2c8:	str	r0, [sp, #136]	; 0x88
   1f2cc:	b	1f2e8 <__assert_fail@plt+0xdf20>
   1f2d0:	ldr	r0, [fp, #8]
   1f2d4:	movw	r1, #0
   1f2d8:	sub	r0, r1, r0
   1f2dc:	mvn	r1, #0
   1f2e0:	udiv	r0, r1, r0
   1f2e4:	str	r0, [sp, #136]	; 0x88
   1f2e8:	ldr	r0, [sp, #136]	; 0x88
   1f2ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f2f0:	mvn	r2, #0
   1f2f4:	sub	r1, r2, r1
   1f2f8:	cmp	r0, r1
   1f2fc:	bls	1f418 <__assert_fail@plt+0xe050>
   1f300:	b	1f42c <__assert_fail@plt+0xe064>
   1f304:	b	1f308 <__assert_fail@plt+0xdf40>
   1f308:	b	1f360 <__assert_fail@plt+0xdf98>
   1f30c:	b	1f360 <__assert_fail@plt+0xdf98>
   1f310:	ldr	r0, [fp, #8]
   1f314:	cmn	r0, #1
   1f318:	bne	1f360 <__assert_fail@plt+0xdf98>
   1f31c:	b	1f320 <__assert_fail@plt+0xdf58>
   1f320:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f324:	add	r0, r0, #0
   1f328:	movw	r1, #0
   1f32c:	cmp	r1, r0
   1f330:	blt	1f418 <__assert_fail@plt+0xe050>
   1f334:	b	1f42c <__assert_fail@plt+0xe064>
   1f338:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f33c:	movw	r1, #0
   1f340:	cmp	r1, r0
   1f344:	bge	1f42c <__assert_fail@plt+0xe064>
   1f348:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f34c:	sub	r0, r0, #1
   1f350:	mvn	r1, #0
   1f354:	cmp	r1, r0
   1f358:	blt	1f418 <__assert_fail@plt+0xe050>
   1f35c:	b	1f42c <__assert_fail@plt+0xe064>
   1f360:	ldr	r0, [fp, #8]
   1f364:	movw	r1, #0
   1f368:	sdiv	r0, r1, r0
   1f36c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f370:	cmp	r0, r1
   1f374:	blt	1f418 <__assert_fail@plt+0xe050>
   1f378:	b	1f42c <__assert_fail@plt+0xe064>
   1f37c:	ldr	r0, [fp, #8]
   1f380:	cmp	r0, #0
   1f384:	bne	1f38c <__assert_fail@plt+0xdfc4>
   1f388:	b	1f42c <__assert_fail@plt+0xe064>
   1f38c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f390:	cmp	r0, #0
   1f394:	bge	1f400 <__assert_fail@plt+0xe038>
   1f398:	b	1f39c <__assert_fail@plt+0xdfd4>
   1f39c:	b	1f3e4 <__assert_fail@plt+0xe01c>
   1f3a0:	b	1f3e4 <__assert_fail@plt+0xe01c>
   1f3a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f3a8:	cmn	r0, #1
   1f3ac:	bne	1f3e4 <__assert_fail@plt+0xe01c>
   1f3b0:	b	1f3b4 <__assert_fail@plt+0xdfec>
   1f3b4:	ldr	r0, [fp, #8]
   1f3b8:	add	r0, r0, #0
   1f3bc:	movw	r1, #0
   1f3c0:	cmp	r1, r0
   1f3c4:	blt	1f418 <__assert_fail@plt+0xe050>
   1f3c8:	b	1f42c <__assert_fail@plt+0xe064>
   1f3cc:	ldr	r0, [fp, #8]
   1f3d0:	sub	r0, r0, #1
   1f3d4:	mvn	r1, #0
   1f3d8:	cmp	r1, r0
   1f3dc:	blt	1f418 <__assert_fail@plt+0xe050>
   1f3e0:	b	1f42c <__assert_fail@plt+0xe064>
   1f3e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f3e8:	movw	r1, #0
   1f3ec:	sdiv	r0, r1, r0
   1f3f0:	ldr	r1, [fp, #8]
   1f3f4:	cmp	r0, r1
   1f3f8:	blt	1f418 <__assert_fail@plt+0xe050>
   1f3fc:	b	1f42c <__assert_fail@plt+0xe064>
   1f400:	ldr	r0, [fp, #8]
   1f404:	mvn	r1, #0
   1f408:	udiv	r0, r1, r0
   1f40c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f410:	cmp	r0, r1
   1f414:	bcs	1f42c <__assert_fail@plt+0xe064>
   1f418:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f41c:	ldr	r1, [fp, #8]
   1f420:	mul	r0, r0, r1
   1f424:	str	r0, [fp, #-28]	; 0xffffffe4
   1f428:	b	1f928 <__assert_fail@plt+0xe560>
   1f42c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f430:	ldr	r1, [fp, #8]
   1f434:	mul	r0, r0, r1
   1f438:	str	r0, [fp, #-28]	; 0xffffffe4
   1f43c:	b	1f92c <__assert_fail@plt+0xe564>
   1f440:	b	1f444 <__assert_fail@plt+0xe07c>
   1f444:	ldr	r0, [fp, #8]
   1f448:	cmp	r0, #0
   1f44c:	bge	1f5d4 <__assert_fail@plt+0xe20c>
   1f450:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f454:	cmp	r0, #0
   1f458:	bge	1f540 <__assert_fail@plt+0xe178>
   1f45c:	b	1f460 <__assert_fail@plt+0xe098>
   1f460:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f464:	ldr	r1, [fp, #8]
   1f468:	asr	r3, r1, #31
   1f46c:	mvn	r2, #0
   1f470:	mvn	ip, #-2147483648	; 0x80000000
   1f474:	str	r0, [sp, #132]	; 0x84
   1f478:	mov	r0, r2
   1f47c:	str	r1, [sp, #128]	; 0x80
   1f480:	mov	r1, ip
   1f484:	ldr	r2, [sp, #128]	; 0x80
   1f488:	bl	22aa0 <__assert_fail@plt+0x116d8>
   1f48c:	ldr	r2, [sp, #132]	; 0x84
   1f490:	subs	r0, r2, r0
   1f494:	rscs	r1, r1, r2, asr #31
   1f498:	str	r0, [sp, #124]	; 0x7c
   1f49c:	str	r1, [sp, #120]	; 0x78
   1f4a0:	blt	1f6b4 <__assert_fail@plt+0xe2ec>
   1f4a4:	b	1f6c8 <__assert_fail@plt+0xe300>
   1f4a8:	b	1f4ac <__assert_fail@plt+0xe0e4>
   1f4ac:	ldr	r0, [pc, #1188]	; 1f958 <__assert_fail@plt+0xe590>
   1f4b0:	ldr	r1, [fp, #8]
   1f4b4:	cmp	r1, r0
   1f4b8:	blt	1f4d0 <__assert_fail@plt+0xe108>
   1f4bc:	b	1f4e4 <__assert_fail@plt+0xe11c>
   1f4c0:	ldr	r0, [fp, #8]
   1f4c4:	movw	r1, #0
   1f4c8:	cmp	r1, r0
   1f4cc:	bge	1f4e4 <__assert_fail@plt+0xe11c>
   1f4d0:	mov	r0, #0
   1f4d4:	mvn	r1, #0
   1f4d8:	str	r1, [sp, #116]	; 0x74
   1f4dc:	str	r0, [sp, #112]	; 0x70
   1f4e0:	b	1f518 <__assert_fail@plt+0xe150>
   1f4e4:	ldr	r0, [fp, #8]
   1f4e8:	rsb	r0, r0, #0
   1f4ec:	asr	r3, r0, #31
   1f4f0:	mvn	r1, #0
   1f4f4:	mvn	r2, #-2147483648	; 0x80000000
   1f4f8:	str	r0, [sp, #108]	; 0x6c
   1f4fc:	mov	r0, r1
   1f500:	mov	r1, r2
   1f504:	ldr	r2, [sp, #108]	; 0x6c
   1f508:	bl	22aa0 <__assert_fail@plt+0x116d8>
   1f50c:	str	r0, [sp, #116]	; 0x74
   1f510:	str	r1, [sp, #112]	; 0x70
   1f514:	b	1f518 <__assert_fail@plt+0xe150>
   1f518:	ldr	r0, [sp, #112]	; 0x70
   1f51c:	ldr	r1, [sp, #116]	; 0x74
   1f520:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f524:	mvn	r2, r2
   1f528:	subs	r1, r2, r1
   1f52c:	rscs	r0, r0, r2, asr #31
   1f530:	str	r1, [sp, #104]	; 0x68
   1f534:	str	r0, [sp, #100]	; 0x64
   1f538:	bge	1f6b4 <__assert_fail@plt+0xe2ec>
   1f53c:	b	1f6c8 <__assert_fail@plt+0xe300>
   1f540:	ldr	r0, [fp, #8]
   1f544:	cmn	r0, #1
   1f548:	bne	1f594 <__assert_fail@plt+0xe1cc>
   1f54c:	b	1f550 <__assert_fail@plt+0xe188>
   1f550:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f554:	mov	r1, #-2147483648	; 0x80000000
   1f558:	add	r1, r1, r0, asr #31
   1f55c:	rsbs	r0, r0, #0
   1f560:	rscs	r1, r1, #0
   1f564:	str	r0, [sp, #96]	; 0x60
   1f568:	str	r1, [sp, #92]	; 0x5c
   1f56c:	blt	1f6b4 <__assert_fail@plt+0xe2ec>
   1f570:	b	1f6c8 <__assert_fail@plt+0xe300>
   1f574:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f578:	movw	r1, #0
   1f57c:	cmp	r1, r0
   1f580:	bge	1f6c8 <__assert_fail@plt+0xe300>
   1f584:	mov	r0, #0
   1f588:	cmp	r0, #0
   1f58c:	bne	1f6b4 <__assert_fail@plt+0xe2ec>
   1f590:	b	1f6c8 <__assert_fail@plt+0xe300>
   1f594:	ldr	r0, [fp, #8]
   1f598:	asr	r3, r0, #31
   1f59c:	mov	r1, #0
   1f5a0:	mov	r2, #-2147483648	; 0x80000000
   1f5a4:	str	r0, [sp, #88]	; 0x58
   1f5a8:	mov	r0, r1
   1f5ac:	mov	r1, r2
   1f5b0:	ldr	r2, [sp, #88]	; 0x58
   1f5b4:	bl	22aa0 <__assert_fail@plt+0x116d8>
   1f5b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f5bc:	subs	r0, r0, r2
   1f5c0:	sbcs	r1, r1, r2, asr #31
   1f5c4:	str	r0, [sp, #84]	; 0x54
   1f5c8:	str	r1, [sp, #80]	; 0x50
   1f5cc:	blt	1f6b4 <__assert_fail@plt+0xe2ec>
   1f5d0:	b	1f6c8 <__assert_fail@plt+0xe300>
   1f5d4:	ldr	r0, [fp, #8]
   1f5d8:	cmp	r0, #0
   1f5dc:	bne	1f5e4 <__assert_fail@plt+0xe21c>
   1f5e0:	b	1f6c8 <__assert_fail@plt+0xe300>
   1f5e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f5e8:	cmp	r0, #0
   1f5ec:	bge	1f674 <__assert_fail@plt+0xe2ac>
   1f5f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f5f4:	cmn	r0, #1
   1f5f8:	bne	1f634 <__assert_fail@plt+0xe26c>
   1f5fc:	b	1f600 <__assert_fail@plt+0xe238>
   1f600:	ldr	r0, [fp, #8]
   1f604:	mov	r1, #-2147483648	; 0x80000000
   1f608:	add	r1, r1, r0, asr #31
   1f60c:	rsbs	r0, r0, #0
   1f610:	rscs	r1, r1, #0
   1f614:	str	r0, [sp, #76]	; 0x4c
   1f618:	str	r1, [sp, #72]	; 0x48
   1f61c:	blt	1f6b4 <__assert_fail@plt+0xe2ec>
   1f620:	b	1f6c8 <__assert_fail@plt+0xe300>
   1f624:	mov	r0, #0
   1f628:	cmp	r0, #0
   1f62c:	bne	1f6b4 <__assert_fail@plt+0xe2ec>
   1f630:	b	1f6c8 <__assert_fail@plt+0xe300>
   1f634:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f638:	asr	r3, r0, #31
   1f63c:	mov	r1, #0
   1f640:	mov	r2, #-2147483648	; 0x80000000
   1f644:	str	r0, [sp, #68]	; 0x44
   1f648:	mov	r0, r1
   1f64c:	mov	r1, r2
   1f650:	ldr	r2, [sp, #68]	; 0x44
   1f654:	bl	22aa0 <__assert_fail@plt+0x116d8>
   1f658:	ldr	r2, [fp, #8]
   1f65c:	subs	r0, r0, r2
   1f660:	sbcs	r1, r1, r2, asr #31
   1f664:	str	r0, [sp, #64]	; 0x40
   1f668:	str	r1, [sp, #60]	; 0x3c
   1f66c:	blt	1f6b4 <__assert_fail@plt+0xe2ec>
   1f670:	b	1f6c8 <__assert_fail@plt+0xe300>
   1f674:	ldr	r0, [fp, #8]
   1f678:	asr	r3, r0, #31
   1f67c:	mvn	r1, #0
   1f680:	mvn	r2, #-2147483648	; 0x80000000
   1f684:	str	r0, [sp, #56]	; 0x38
   1f688:	mov	r0, r1
   1f68c:	mov	r1, r2
   1f690:	ldr	r2, [sp, #56]	; 0x38
   1f694:	bl	22aa0 <__assert_fail@plt+0x116d8>
   1f698:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f69c:	subs	r0, r0, r2
   1f6a0:	sbcs	r1, r1, r2, asr #31
   1f6a4:	str	r0, [sp, #52]	; 0x34
   1f6a8:	str	r1, [sp, #48]	; 0x30
   1f6ac:	bge	1f6c8 <__assert_fail@plt+0xe300>
   1f6b0:	b	1f6b4 <__assert_fail@plt+0xe2ec>
   1f6b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f6b8:	ldr	r1, [fp, #8]
   1f6bc:	mul	r0, r0, r1
   1f6c0:	str	r0, [fp, #-28]	; 0xffffffe4
   1f6c4:	b	1f928 <__assert_fail@plt+0xe560>
   1f6c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f6cc:	ldr	r1, [fp, #8]
   1f6d0:	mul	r0, r0, r1
   1f6d4:	str	r0, [fp, #-28]	; 0xffffffe4
   1f6d8:	b	1f92c <__assert_fail@plt+0xe564>
   1f6dc:	ldr	r0, [fp, #8]
   1f6e0:	cmp	r0, #0
   1f6e4:	bge	1f844 <__assert_fail@plt+0xe47c>
   1f6e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f6ec:	cmp	r0, #0
   1f6f0:	bge	1f7cc <__assert_fail@plt+0xe404>
   1f6f4:	b	1f73c <__assert_fail@plt+0xe374>
   1f6f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f6fc:	ldr	r1, [fp, #8]
   1f700:	asr	r3, r1, #31
   1f704:	mvn	r2, #0
   1f708:	str	r0, [sp, #44]	; 0x2c
   1f70c:	mov	r0, r2
   1f710:	str	r1, [sp, #40]	; 0x28
   1f714:	mov	r1, r2
   1f718:	ldr	r2, [sp, #40]	; 0x28
   1f71c:	bl	22b74 <__assert_fail@plt+0x117ac>
   1f720:	ldr	r2, [sp, #44]	; 0x2c
   1f724:	subs	r0, r2, r0
   1f728:	rscs	r1, r1, r2, asr #31
   1f72c:	str	r0, [sp, #36]	; 0x24
   1f730:	str	r1, [sp, #32]
   1f734:	bcc	1f900 <__assert_fail@plt+0xe538>
   1f738:	b	1f914 <__assert_fail@plt+0xe54c>
   1f73c:	b	1f740 <__assert_fail@plt+0xe378>
   1f740:	ldr	r0, [pc, #528]	; 1f958 <__assert_fail@plt+0xe590>
   1f744:	ldr	r1, [fp, #8]
   1f748:	cmp	r1, r0
   1f74c:	blt	1f764 <__assert_fail@plt+0xe39c>
   1f750:	b	1f778 <__assert_fail@plt+0xe3b0>
   1f754:	ldr	r0, [fp, #8]
   1f758:	movw	r1, #0
   1f75c:	cmp	r1, r0
   1f760:	bge	1f778 <__assert_fail@plt+0xe3b0>
   1f764:	mov	r0, #1
   1f768:	mvn	r1, #0
   1f76c:	str	r1, [sp, #28]
   1f770:	str	r0, [sp, #24]
   1f774:	b	1f7a4 <__assert_fail@plt+0xe3dc>
   1f778:	ldr	r0, [fp, #8]
   1f77c:	rsb	r0, r0, #0
   1f780:	asr	r3, r0, #31
   1f784:	mvn	r1, #0
   1f788:	str	r0, [sp, #20]
   1f78c:	mov	r0, r1
   1f790:	ldr	r2, [sp, #20]
   1f794:	bl	22b74 <__assert_fail@plt+0x117ac>
   1f798:	str	r0, [sp, #28]
   1f79c:	str	r1, [sp, #24]
   1f7a0:	b	1f7a4 <__assert_fail@plt+0xe3dc>
   1f7a4:	ldr	r0, [sp, #24]
   1f7a8:	ldr	r1, [sp, #28]
   1f7ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f7b0:	mvn	r2, r2
   1f7b4:	subs	r1, r2, r1
   1f7b8:	rscs	r0, r0, r2, asr #31
   1f7bc:	str	r1, [sp, #16]
   1f7c0:	str	r0, [sp, #12]
   1f7c4:	bcs	1f900 <__assert_fail@plt+0xe538>
   1f7c8:	b	1f914 <__assert_fail@plt+0xe54c>
   1f7cc:	b	1f7d0 <__assert_fail@plt+0xe408>
   1f7d0:	b	1f828 <__assert_fail@plt+0xe460>
   1f7d4:	b	1f828 <__assert_fail@plt+0xe460>
   1f7d8:	ldr	r0, [fp, #8]
   1f7dc:	cmn	r0, #1
   1f7e0:	bne	1f828 <__assert_fail@plt+0xe460>
   1f7e4:	b	1f7e8 <__assert_fail@plt+0xe420>
   1f7e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f7ec:	add	r0, r0, #0
   1f7f0:	movw	r1, #0
   1f7f4:	cmp	r1, r0
   1f7f8:	blt	1f900 <__assert_fail@plt+0xe538>
   1f7fc:	b	1f914 <__assert_fail@plt+0xe54c>
   1f800:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f804:	movw	r1, #0
   1f808:	cmp	r1, r0
   1f80c:	bge	1f914 <__assert_fail@plt+0xe54c>
   1f810:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f814:	sub	r0, r0, #1
   1f818:	mvn	r1, #0
   1f81c:	cmp	r1, r0
   1f820:	blt	1f900 <__assert_fail@plt+0xe538>
   1f824:	b	1f914 <__assert_fail@plt+0xe54c>
   1f828:	ldr	r0, [fp, #8]
   1f82c:	movw	r1, #0
   1f830:	sdiv	r0, r1, r0
   1f834:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f838:	cmp	r0, r1
   1f83c:	blt	1f900 <__assert_fail@plt+0xe538>
   1f840:	b	1f914 <__assert_fail@plt+0xe54c>
   1f844:	ldr	r0, [fp, #8]
   1f848:	cmp	r0, #0
   1f84c:	bne	1f854 <__assert_fail@plt+0xe48c>
   1f850:	b	1f914 <__assert_fail@plt+0xe54c>
   1f854:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f858:	cmp	r0, #0
   1f85c:	bge	1f8c8 <__assert_fail@plt+0xe500>
   1f860:	b	1f864 <__assert_fail@plt+0xe49c>
   1f864:	b	1f8ac <__assert_fail@plt+0xe4e4>
   1f868:	b	1f8ac <__assert_fail@plt+0xe4e4>
   1f86c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f870:	cmn	r0, #1
   1f874:	bne	1f8ac <__assert_fail@plt+0xe4e4>
   1f878:	b	1f87c <__assert_fail@plt+0xe4b4>
   1f87c:	ldr	r0, [fp, #8]
   1f880:	add	r0, r0, #0
   1f884:	movw	r1, #0
   1f888:	cmp	r1, r0
   1f88c:	blt	1f900 <__assert_fail@plt+0xe538>
   1f890:	b	1f914 <__assert_fail@plt+0xe54c>
   1f894:	ldr	r0, [fp, #8]
   1f898:	sub	r0, r0, #1
   1f89c:	mvn	r1, #0
   1f8a0:	cmp	r1, r0
   1f8a4:	blt	1f900 <__assert_fail@plt+0xe538>
   1f8a8:	b	1f914 <__assert_fail@plt+0xe54c>
   1f8ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f8b0:	movw	r1, #0
   1f8b4:	sdiv	r0, r1, r0
   1f8b8:	ldr	r1, [fp, #8]
   1f8bc:	cmp	r0, r1
   1f8c0:	blt	1f900 <__assert_fail@plt+0xe538>
   1f8c4:	b	1f914 <__assert_fail@plt+0xe54c>
   1f8c8:	ldr	r0, [fp, #8]
   1f8cc:	asr	r3, r0, #31
   1f8d0:	mvn	r1, #0
   1f8d4:	str	r0, [sp, #8]
   1f8d8:	mov	r0, r1
   1f8dc:	ldr	r2, [sp, #8]
   1f8e0:	bl	22b74 <__assert_fail@plt+0x117ac>
   1f8e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f8e8:	subs	r0, r0, r2
   1f8ec:	sbcs	r1, r1, r2, asr #31
   1f8f0:	str	r0, [sp, #4]
   1f8f4:	str	r1, [sp]
   1f8f8:	bcs	1f914 <__assert_fail@plt+0xe54c>
   1f8fc:	b	1f900 <__assert_fail@plt+0xe538>
   1f900:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f904:	ldr	r1, [fp, #8]
   1f908:	mul	r0, r0, r1
   1f90c:	str	r0, [fp, #-28]	; 0xffffffe4
   1f910:	b	1f928 <__assert_fail@plt+0xe560>
   1f914:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f918:	ldr	r1, [fp, #8]
   1f91c:	mul	r0, r0, r1
   1f920:	str	r0, [fp, #-28]	; 0xffffffe4
   1f924:	b	1f92c <__assert_fail@plt+0xe564>
   1f928:	bl	1fb04 <__assert_fail@plt+0xe73c>
   1f92c:	ldr	r0, [fp, #-4]
   1f930:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f934:	bl	1cdc0 <__assert_fail@plt+0xb9f8>
   1f938:	str	r0, [fp, #-4]
   1f93c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f940:	ldr	r1, [fp, #-8]
   1f944:	str	r0, [r1]
   1f948:	ldr	r0, [fp, #-4]
   1f94c:	mov	sp, fp
   1f950:	pop	{fp, pc}
   1f954:	svcvc	0x00ffffff
   1f958:	andhi	r0, r0, r1
   1f95c:	andhi	r0, r0, r0
   1f960:			; <UNDEFINED> instruction: 0xffff8000
   1f964:	push	{fp, lr}
   1f968:	mov	fp, sp
   1f96c:	sub	sp, sp, #8
   1f970:	str	r0, [sp, #4]
   1f974:	ldr	r0, [sp, #4]
   1f978:	movw	r1, #1
   1f97c:	bl	1f988 <__assert_fail@plt+0xe5c0>
   1f980:	mov	sp, fp
   1f984:	pop	{fp, pc}
   1f988:	push	{fp, lr}
   1f98c:	mov	fp, sp
   1f990:	sub	sp, sp, #8
   1f994:	str	r0, [sp, #4]
   1f998:	str	r1, [sp]
   1f99c:	ldr	r0, [sp, #4]
   1f9a0:	ldr	r1, [sp]
   1f9a4:	bl	1fc7c <__assert_fail@plt+0xe8b4>
   1f9a8:	bl	1cd4c <__assert_fail@plt+0xb984>
   1f9ac:	mov	sp, fp
   1f9b0:	pop	{fp, pc}
   1f9b4:	push	{fp, lr}
   1f9b8:	mov	fp, sp
   1f9bc:	sub	sp, sp, #8
   1f9c0:	str	r0, [sp, #4]
   1f9c4:	ldr	r0, [sp, #4]
   1f9c8:	movw	r1, #1
   1f9cc:	bl	1f9d8 <__assert_fail@plt+0xe610>
   1f9d0:	mov	sp, fp
   1f9d4:	pop	{fp, pc}
   1f9d8:	push	{fp, lr}
   1f9dc:	mov	fp, sp
   1f9e0:	sub	sp, sp, #8
   1f9e4:	str	r0, [sp, #4]
   1f9e8:	str	r1, [sp]
   1f9ec:	ldr	r0, [sp, #4]
   1f9f0:	ldr	r1, [sp]
   1f9f4:	bl	20c94 <__assert_fail@plt+0xf8cc>
   1f9f8:	bl	1cd4c <__assert_fail@plt+0xb984>
   1f9fc:	mov	sp, fp
   1fa00:	pop	{fp, pc}
   1fa04:	push	{fp, lr}
   1fa08:	mov	fp, sp
   1fa0c:	sub	sp, sp, #16
   1fa10:	str	r0, [fp, #-4]
   1fa14:	str	r1, [sp, #8]
   1fa18:	ldr	r0, [sp, #8]
   1fa1c:	bl	1cd28 <__assert_fail@plt+0xb960>
   1fa20:	ldr	r1, [fp, #-4]
   1fa24:	ldr	r2, [sp, #8]
   1fa28:	str	r0, [sp, #4]
   1fa2c:	bl	1114c <memcpy@plt>
   1fa30:	ldr	r0, [sp, #4]
   1fa34:	mov	sp, fp
   1fa38:	pop	{fp, pc}
   1fa3c:	push	{fp, lr}
   1fa40:	mov	fp, sp
   1fa44:	sub	sp, sp, #16
   1fa48:	str	r0, [fp, #-4]
   1fa4c:	str	r1, [sp, #8]
   1fa50:	ldr	r0, [sp, #8]
   1fa54:	bl	1cd7c <__assert_fail@plt+0xb9b4>
   1fa58:	ldr	r1, [fp, #-4]
   1fa5c:	ldr	r2, [sp, #8]
   1fa60:	str	r0, [sp, #4]
   1fa64:	bl	1114c <memcpy@plt>
   1fa68:	ldr	r0, [sp, #4]
   1fa6c:	mov	sp, fp
   1fa70:	pop	{fp, pc}
   1fa74:	push	{fp, lr}
   1fa78:	mov	fp, sp
   1fa7c:	sub	sp, sp, #16
   1fa80:	str	r0, [fp, #-4]
   1fa84:	str	r1, [sp, #8]
   1fa88:	ldr	r0, [sp, #8]
   1fa8c:	add	r0, r0, #1
   1fa90:	bl	1cd7c <__assert_fail@plt+0xb9b4>
   1fa94:	str	r0, [sp, #4]
   1fa98:	ldr	r0, [sp, #4]
   1fa9c:	ldr	r1, [sp, #8]
   1faa0:	add	r0, r0, r1
   1faa4:	movw	r1, #0
   1faa8:	strb	r1, [r0]
   1faac:	ldr	r0, [sp, #4]
   1fab0:	ldr	r1, [fp, #-4]
   1fab4:	ldr	r2, [sp, #8]
   1fab8:	str	r0, [sp]
   1fabc:	bl	1114c <memcpy@plt>
   1fac0:	ldr	r0, [sp]
   1fac4:	mov	sp, fp
   1fac8:	pop	{fp, pc}
   1facc:	push	{fp, lr}
   1fad0:	mov	fp, sp
   1fad4:	sub	sp, sp, #8
   1fad8:	str	r0, [sp, #4]
   1fadc:	ldr	r0, [sp, #4]
   1fae0:	ldr	r1, [sp, #4]
   1fae4:	str	r0, [sp]
   1fae8:	mov	r0, r1
   1faec:	bl	11260 <strlen@plt>
   1faf0:	add	r1, r0, #1
   1faf4:	ldr	r0, [sp]
   1faf8:	bl	1fa04 <__assert_fail@plt+0xe63c>
   1fafc:	mov	sp, fp
   1fb00:	pop	{fp, pc}
   1fb04:	push	{fp, lr}
   1fb08:	mov	fp, sp
   1fb0c:	sub	sp, sp, #8
   1fb10:	movw	r0, #16672	; 0x4120
   1fb14:	movt	r0, #3
   1fb18:	ldr	r0, [r0]
   1fb1c:	movw	r1, #15528	; 0x3ca8
   1fb20:	movt	r1, #2
   1fb24:	str	r0, [sp, #4]
   1fb28:	mov	r0, r1
   1fb2c:	bl	11254 <gettext@plt>
   1fb30:	ldr	r1, [sp, #4]
   1fb34:	str	r0, [sp]
   1fb38:	mov	r0, r1
   1fb3c:	movw	r1, #0
   1fb40:	movw	r2, #12906	; 0x326a
   1fb44:	movt	r2, #2
   1fb48:	ldr	r3, [sp]
   1fb4c:	bl	111e8 <error@plt>
   1fb50:	bl	11398 <abort@plt>
   1fb54:	push	{fp, lr}
   1fb58:	mov	fp, sp
   1fb5c:	sub	sp, sp, #16
   1fb60:	str	r0, [fp, #-4]
   1fb64:	str	r1, [sp, #8]
   1fb68:	str	r2, [sp, #4]
   1fb6c:	ldr	r0, [fp, #-4]
   1fb70:	ldr	r1, [sp, #8]
   1fb74:	orr	r1, r1, #512	; 0x200
   1fb78:	ldr	r2, [sp, #4]
   1fb7c:	bl	13588 <__assert_fail@plt+0x21c0>
   1fb80:	str	r0, [sp]
   1fb84:	ldr	r0, [sp]
   1fb88:	movw	r1, #0
   1fb8c:	cmp	r0, r1
   1fb90:	bne	1fbcc <__assert_fail@plt+0xe804>
   1fb94:	bl	11290 <__errno_location@plt>
   1fb98:	ldr	r0, [r0]
   1fb9c:	cmp	r0, #22
   1fba0:	beq	1fba8 <__assert_fail@plt+0xe7e0>
   1fba4:	b	1fbc8 <__assert_fail@plt+0xe800>
   1fba8:	movw	r0, #15545	; 0x3cb9
   1fbac:	movt	r0, #2
   1fbb0:	movw	r1, #15561	; 0x3cc9
   1fbb4:	movt	r1, #2
   1fbb8:	movw	r2, #41	; 0x29
   1fbbc:	movw	r3, #15572	; 0x3cd4
   1fbc0:	movt	r3, #2
   1fbc4:	bl	113c8 <__assert_fail@plt>
   1fbc8:	bl	1fb04 <__assert_fail@plt+0xe73c>
   1fbcc:	ldr	r0, [sp]
   1fbd0:	mov	sp, fp
   1fbd4:	pop	{fp, pc}
   1fbd8:	sub	sp, sp, #16
   1fbdc:	str	r0, [sp, #12]
   1fbe0:	str	r1, [sp, #8]
   1fbe4:	ldr	r0, [sp, #12]
   1fbe8:	ldr	r0, [r0, #48]	; 0x30
   1fbec:	and	r0, r0, #16
   1fbf0:	cmp	r0, #0
   1fbf4:	beq	1fc14 <__assert_fail@plt+0xe84c>
   1fbf8:	ldr	r0, [sp, #12]
   1fbfc:	ldr	r0, [r0, #48]	; 0x30
   1fc00:	and	r0, r0, #1
   1fc04:	cmp	r0, #0
   1fc08:	movw	r0, #1
   1fc0c:	str	r0, [sp, #4]
   1fc10:	beq	1fc6c <__assert_fail@plt+0xe8a4>
   1fc14:	ldr	r0, [sp, #12]
   1fc18:	ldr	r0, [r0, #48]	; 0x30
   1fc1c:	and	r0, r0, #16
   1fc20:	cmp	r0, #0
   1fc24:	movw	r0, #0
   1fc28:	str	r0, [sp]
   1fc2c:	beq	1fc64 <__assert_fail@plt+0xe89c>
   1fc30:	ldr	r0, [sp, #12]
   1fc34:	ldr	r0, [r0, #48]	; 0x30
   1fc38:	and	r0, r0, #1
   1fc3c:	cmp	r0, #0
   1fc40:	movw	r0, #0
   1fc44:	str	r0, [sp]
   1fc48:	beq	1fc64 <__assert_fail@plt+0xe89c>
   1fc4c:	ldr	r0, [sp, #8]
   1fc50:	ldr	r0, [r0, #48]	; 0x30
   1fc54:	cmp	r0, #0
   1fc58:	movw	r0, #0
   1fc5c:	movne	r0, #1
   1fc60:	str	r0, [sp]
   1fc64:	ldr	r0, [sp]
   1fc68:	str	r0, [sp, #4]
   1fc6c:	ldr	r0, [sp, #4]
   1fc70:	and	r0, r0, #1
   1fc74:	add	sp, sp, #16
   1fc78:	bx	lr
   1fc7c:	push	{fp, lr}
   1fc80:	mov	fp, sp
   1fc84:	sub	sp, sp, #16
   1fc88:	str	r0, [sp, #8]
   1fc8c:	str	r1, [sp, #4]
   1fc90:	ldr	r0, [sp, #8]
   1fc94:	cmp	r0, #0
   1fc98:	beq	1fca8 <__assert_fail@plt+0xe8e0>
   1fc9c:	ldr	r0, [sp, #4]
   1fca0:	cmp	r0, #0
   1fca4:	bne	1fcb4 <__assert_fail@plt+0xe8ec>
   1fca8:	movw	r0, #1
   1fcac:	str	r0, [sp, #4]
   1fcb0:	str	r0, [sp, #8]
   1fcb4:	ldr	r0, [sp, #4]
   1fcb8:	cmp	r0, #0
   1fcbc:	beq	1fcf0 <__assert_fail@plt+0xe928>
   1fcc0:	ldr	r0, [pc, #76]	; 1fd14 <__assert_fail@plt+0xe94c>
   1fcc4:	ldr	r1, [sp, #4]
   1fcc8:	udiv	r0, r0, r1
   1fccc:	ldr	r1, [sp, #8]
   1fcd0:	cmp	r0, r1
   1fcd4:	bcs	1fcf0 <__assert_fail@plt+0xe928>
   1fcd8:	bl	11290 <__errno_location@plt>
   1fcdc:	movw	lr, #12
   1fce0:	str	lr, [r0]
   1fce4:	movw	r0, #0
   1fce8:	str	r0, [fp, #-4]
   1fcec:	b	1fd08 <__assert_fail@plt+0xe940>
   1fcf0:	ldr	r0, [sp, #8]
   1fcf4:	ldr	r1, [sp, #4]
   1fcf8:	bl	110e0 <calloc@plt>
   1fcfc:	str	r0, [sp]
   1fd00:	ldr	r0, [sp]
   1fd04:	str	r0, [fp, #-4]
   1fd08:	ldr	r0, [fp, #-4]
   1fd0c:	mov	sp, fp
   1fd10:	pop	{fp, pc}
   1fd14:	svcvc	0x00ffffff
   1fd18:	push	{fp, lr}
   1fd1c:	mov	fp, sp
   1fd20:	sub	sp, sp, #16
   1fd24:	str	r0, [sp, #8]
   1fd28:	ldr	r0, [sp, #8]
   1fd2c:	cmp	r0, #0
   1fd30:	bne	1fd3c <__assert_fail@plt+0xe974>
   1fd34:	movw	r0, #1
   1fd38:	str	r0, [sp, #8]
   1fd3c:	ldr	r0, [pc, #64]	; 1fd84 <__assert_fail@plt+0xe9bc>
   1fd40:	ldr	r1, [sp, #8]
   1fd44:	cmp	r0, r1
   1fd48:	bcs	1fd64 <__assert_fail@plt+0xe99c>
   1fd4c:	bl	11290 <__errno_location@plt>
   1fd50:	movw	lr, #12
   1fd54:	str	lr, [r0]
   1fd58:	movw	r0, #0
   1fd5c:	str	r0, [fp, #-4]
   1fd60:	b	1fd78 <__assert_fail@plt+0xe9b0>
   1fd64:	ldr	r0, [sp, #8]
   1fd68:	bl	11200 <malloc@plt>
   1fd6c:	str	r0, [sp, #4]
   1fd70:	ldr	r0, [sp, #4]
   1fd74:	str	r0, [fp, #-4]
   1fd78:	ldr	r0, [fp, #-4]
   1fd7c:	mov	sp, fp
   1fd80:	pop	{fp, pc}
   1fd84:	svcvc	0x00ffffff
   1fd88:	push	{fp, lr}
   1fd8c:	mov	fp, sp
   1fd90:	sub	sp, sp, #16
   1fd94:	str	r0, [sp, #8]
   1fd98:	str	r1, [sp, #4]
   1fd9c:	ldr	r0, [sp, #8]
   1fda0:	movw	r1, #0
   1fda4:	cmp	r0, r1
   1fda8:	bne	1fdbc <__assert_fail@plt+0xe9f4>
   1fdac:	ldr	r0, [sp, #4]
   1fdb0:	bl	1fd18 <__assert_fail@plt+0xe950>
   1fdb4:	str	r0, [fp, #-4]
   1fdb8:	b	1fe1c <__assert_fail@plt+0xea54>
   1fdbc:	ldr	r0, [sp, #4]
   1fdc0:	cmp	r0, #0
   1fdc4:	bne	1fddc <__assert_fail@plt+0xea14>
   1fdc8:	ldr	r0, [sp, #8]
   1fdcc:	bl	20a84 <__assert_fail@plt+0xf6bc>
   1fdd0:	movw	r0, #0
   1fdd4:	str	r0, [fp, #-4]
   1fdd8:	b	1fe1c <__assert_fail@plt+0xea54>
   1fddc:	ldr	r0, [pc, #68]	; 1fe28 <__assert_fail@plt+0xea60>
   1fde0:	ldr	r1, [sp, #4]
   1fde4:	cmp	r0, r1
   1fde8:	bcs	1fe04 <__assert_fail@plt+0xea3c>
   1fdec:	bl	11290 <__errno_location@plt>
   1fdf0:	movw	lr, #12
   1fdf4:	str	lr, [r0]
   1fdf8:	movw	r0, #0
   1fdfc:	str	r0, [fp, #-4]
   1fe00:	b	1fe1c <__assert_fail@plt+0xea54>
   1fe04:	ldr	r0, [sp, #8]
   1fe08:	ldr	r1, [sp, #4]
   1fe0c:	bl	11170 <realloc@plt>
   1fe10:	str	r0, [sp]
   1fe14:	ldr	r0, [sp]
   1fe18:	str	r0, [fp, #-4]
   1fe1c:	ldr	r0, [fp, #-4]
   1fe20:	mov	sp, fp
   1fe24:	pop	{fp, pc}
   1fe28:	svcvc	0x00ffffff
   1fe2c:	push	{r4, sl, fp, lr}
   1fe30:	add	fp, sp, #8
   1fe34:	sub	sp, sp, #16
   1fe38:	str	r0, [sp, #8]
   1fe3c:	str	r1, [sp, #12]
   1fe40:	str	r2, [sp, #4]
   1fe44:	ldr	r0, [sp, #8]
   1fe48:	ldr	r1, [sp, #12]
   1fe4c:	ldr	r2, [sp, #4]
   1fe50:	rsb	r3, r2, #32
   1fe54:	lsr	ip, r0, r3
   1fe58:	orr	ip, ip, r1, lsl r2
   1fe5c:	sub	lr, r2, #32
   1fe60:	cmp	lr, #0
   1fe64:	lslge	ip, r0, lr
   1fe68:	lsl	r4, r0, r2
   1fe6c:	cmp	lr, #0
   1fe70:	movwge	r4, #0
   1fe74:	rsb	r2, r2, #64	; 0x40
   1fe78:	lsr	lr, r1, r2
   1fe7c:	cmp	r3, #0
   1fe80:	movwge	lr, #0
   1fe84:	lsr	r0, r0, r2
   1fe88:	rsb	r2, r2, #32
   1fe8c:	orr	r0, r0, r1, lsl r2
   1fe90:	cmp	r3, #0
   1fe94:	lsrge	r0, r1, r3
   1fe98:	orr	r0, r4, r0
   1fe9c:	orr	r1, ip, lr
   1fea0:	sub	sp, fp, #8
   1fea4:	pop	{r4, sl, fp, pc}
   1fea8:	push	{r4, sl, fp, lr}
   1feac:	add	fp, sp, #8
   1feb0:	sub	sp, sp, #16
   1feb4:	str	r0, [sp, #8]
   1feb8:	str	r1, [sp, #12]
   1febc:	str	r2, [sp, #4]
   1fec0:	ldr	r0, [sp, #8]
   1fec4:	ldr	r1, [sp, #12]
   1fec8:	ldr	r2, [sp, #4]
   1fecc:	lsr	r3, r1, r2
   1fed0:	sub	ip, r2, #32
   1fed4:	cmp	ip, #0
   1fed8:	movwge	r3, #0
   1fedc:	lsr	lr, r0, r2
   1fee0:	rsb	r4, r2, #32
   1fee4:	orr	lr, lr, r1, lsl r4
   1fee8:	cmp	ip, #0
   1feec:	lsrge	lr, r1, ip
   1fef0:	rsb	r2, r2, #64	; 0x40
   1fef4:	rsb	ip, r2, #32
   1fef8:	lsr	ip, r0, ip
   1fefc:	orr	r1, ip, r1, lsl r2
   1ff00:	cmp	r4, #0
   1ff04:	lslge	r1, r0, r4
   1ff08:	lsl	r0, r0, r2
   1ff0c:	cmp	r4, #0
   1ff10:	movwge	r0, #0
   1ff14:	orr	r0, lr, r0
   1ff18:	orr	r1, r3, r1
   1ff1c:	sub	sp, fp, #8
   1ff20:	pop	{r4, sl, fp, pc}
   1ff24:	sub	sp, sp, #8
   1ff28:	str	r0, [sp, #4]
   1ff2c:	str	r1, [sp]
   1ff30:	ldr	r0, [sp, #4]
   1ff34:	ldr	r1, [sp]
   1ff38:	lsl	r0, r0, r1
   1ff3c:	ldr	r1, [sp, #4]
   1ff40:	ldr	r2, [sp]
   1ff44:	movw	r3, #32
   1ff48:	sub	r2, r3, r2
   1ff4c:	lsr	r1, r1, r2
   1ff50:	orr	r0, r0, r1
   1ff54:	add	sp, sp, #8
   1ff58:	bx	lr
   1ff5c:	sub	sp, sp, #8
   1ff60:	str	r0, [sp, #4]
   1ff64:	str	r1, [sp]
   1ff68:	ldr	r0, [sp, #4]
   1ff6c:	ldr	r1, [sp]
   1ff70:	lsr	r0, r0, r1
   1ff74:	ldr	r1, [sp, #4]
   1ff78:	ldr	r2, [sp]
   1ff7c:	movw	r3, #32
   1ff80:	sub	r2, r3, r2
   1ff84:	lsl	r1, r1, r2
   1ff88:	orr	r0, r0, r1
   1ff8c:	add	sp, sp, #8
   1ff90:	bx	lr
   1ff94:	sub	sp, sp, #8
   1ff98:	str	r0, [sp, #4]
   1ff9c:	str	r1, [sp]
   1ffa0:	ldr	r0, [sp, #4]
   1ffa4:	ldr	r1, [sp]
   1ffa8:	lsl	r0, r0, r1
   1ffac:	ldr	r1, [sp, #4]
   1ffb0:	ldr	r2, [sp]
   1ffb4:	movw	r3, #32
   1ffb8:	sub	r2, r3, r2
   1ffbc:	lsr	r1, r1, r2
   1ffc0:	orr	r0, r0, r1
   1ffc4:	add	sp, sp, #8
   1ffc8:	bx	lr
   1ffcc:	sub	sp, sp, #8
   1ffd0:	str	r0, [sp, #4]
   1ffd4:	str	r1, [sp]
   1ffd8:	ldr	r0, [sp, #4]
   1ffdc:	ldr	r1, [sp]
   1ffe0:	lsr	r0, r0, r1
   1ffe4:	ldr	r1, [sp, #4]
   1ffe8:	ldr	r2, [sp]
   1ffec:	movw	r3, #32
   1fff0:	sub	r2, r3, r2
   1fff4:	lsl	r1, r1, r2
   1fff8:	orr	r0, r0, r1
   1fffc:	add	sp, sp, #8
   20000:	bx	lr
   20004:	sub	sp, sp, #8
   20008:	strh	r0, [sp, #6]
   2000c:	str	r1, [sp]
   20010:	ldrh	r0, [sp, #6]
   20014:	ldr	r1, [sp]
   20018:	lsl	r0, r0, r1
   2001c:	ldrh	r1, [sp, #6]
   20020:	ldr	r2, [sp]
   20024:	movw	r3, #16
   20028:	sub	r2, r3, r2
   2002c:	lsr	r1, r1, r2
   20030:	orr	r0, r0, r1
   20034:	movw	r1, #65535	; 0xffff
   20038:	and	r0, r0, r1
   2003c:	uxth	r0, r0
   20040:	add	sp, sp, #8
   20044:	bx	lr
   20048:	sub	sp, sp, #8
   2004c:	strh	r0, [sp, #6]
   20050:	str	r1, [sp]
   20054:	ldrh	r0, [sp, #6]
   20058:	ldr	r1, [sp]
   2005c:	lsr	r0, r0, r1
   20060:	ldrh	r1, [sp, #6]
   20064:	ldr	r2, [sp]
   20068:	movw	r3, #16
   2006c:	sub	r2, r3, r2
   20070:	lsl	r1, r1, r2
   20074:	orr	r0, r0, r1
   20078:	movw	r1, #65535	; 0xffff
   2007c:	and	r0, r0, r1
   20080:	uxth	r0, r0
   20084:	add	sp, sp, #8
   20088:	bx	lr
   2008c:	sub	sp, sp, #8
   20090:	strb	r0, [sp, #7]
   20094:	str	r1, [sp]
   20098:	ldrb	r0, [sp, #7]
   2009c:	ldr	r1, [sp]
   200a0:	lsl	r0, r0, r1
   200a4:	ldrb	r1, [sp, #7]
   200a8:	ldr	r2, [sp]
   200ac:	movw	r3, #8
   200b0:	sub	r2, r3, r2
   200b4:	lsr	r1, r1, r2
   200b8:	orr	r0, r0, r1
   200bc:	and	r0, r0, #255	; 0xff
   200c0:	and	r0, r0, #255	; 0xff
   200c4:	add	sp, sp, #8
   200c8:	bx	lr
   200cc:	sub	sp, sp, #8
   200d0:	strb	r0, [sp, #7]
   200d4:	str	r1, [sp]
   200d8:	ldrb	r0, [sp, #7]
   200dc:	ldr	r1, [sp]
   200e0:	lsr	r0, r0, r1
   200e4:	ldrb	r1, [sp, #7]
   200e8:	ldr	r2, [sp]
   200ec:	movw	r3, #8
   200f0:	sub	r2, r3, r2
   200f4:	lsl	r1, r1, r2
   200f8:	orr	r0, r0, r1
   200fc:	and	r0, r0, #255	; 0xff
   20100:	and	r0, r0, #255	; 0xff
   20104:	add	sp, sp, #8
   20108:	bx	lr
   2010c:	push	{fp, lr}
   20110:	mov	fp, sp
   20114:	sub	sp, sp, #24
   20118:	str	r0, [fp, #-8]
   2011c:	str	r1, [sp, #12]
   20120:	ldr	r0, [fp, #-8]
   20124:	str	r0, [sp, #8]
   20128:	ldr	r0, [sp, #12]
   2012c:	str	r0, [sp, #4]
   20130:	ldr	r0, [sp, #8]
   20134:	ldr	r1, [sp, #4]
   20138:	cmp	r0, r1
   2013c:	bne	2014c <__assert_fail@plt+0xed84>
   20140:	movw	r0, #0
   20144:	str	r0, [fp, #-4]
   20148:	b	201b8 <__assert_fail@plt+0xedf0>
   2014c:	b	20150 <__assert_fail@plt+0xed88>
   20150:	ldr	r0, [sp, #8]
   20154:	ldrb	r0, [r0]
   20158:	bl	22820 <__assert_fail@plt+0x11458>
   2015c:	strb	r0, [sp, #3]
   20160:	ldr	r0, [sp, #4]
   20164:	ldrb	r0, [r0]
   20168:	bl	22820 <__assert_fail@plt+0x11458>
   2016c:	strb	r0, [sp, #2]
   20170:	ldrb	r0, [sp, #3]
   20174:	cmp	r0, #0
   20178:	bne	20180 <__assert_fail@plt+0xedb8>
   2017c:	b	201a8 <__assert_fail@plt+0xede0>
   20180:	ldr	r0, [sp, #8]
   20184:	add	r0, r0, #1
   20188:	str	r0, [sp, #8]
   2018c:	ldr	r0, [sp, #4]
   20190:	add	r0, r0, #1
   20194:	str	r0, [sp, #4]
   20198:	ldrb	r0, [sp, #3]
   2019c:	ldrb	r1, [sp, #2]
   201a0:	cmp	r0, r1
   201a4:	beq	20150 <__assert_fail@plt+0xed88>
   201a8:	ldrb	r0, [sp, #3]
   201ac:	ldrb	r1, [sp, #2]
   201b0:	sub	r0, r0, r1
   201b4:	str	r0, [fp, #-4]
   201b8:	ldr	r0, [fp, #-4]
   201bc:	mov	sp, fp
   201c0:	pop	{fp, pc}
   201c4:	push	{fp, lr}
   201c8:	mov	fp, sp
   201cc:	sub	sp, sp, #16
   201d0:	str	r0, [sp, #8]
   201d4:	ldr	r0, [sp, #8]
   201d8:	bl	111c4 <__fpending@plt>
   201dc:	cmp	r0, #0
   201e0:	movw	r0, #0
   201e4:	movne	r0, #1
   201e8:	and	r0, r0, #1
   201ec:	strb	r0, [sp, #7]
   201f0:	ldr	r0, [sp, #8]
   201f4:	bl	111d0 <ferror_unlocked@plt>
   201f8:	cmp	r0, #0
   201fc:	movw	r0, #0
   20200:	movne	r0, #1
   20204:	and	r0, r0, #1
   20208:	strb	r0, [sp, #6]
   2020c:	ldr	r0, [sp, #8]
   20210:	bl	20484 <__assert_fail@plt+0xf0bc>
   20214:	cmp	r0, #0
   20218:	movw	r0, #0
   2021c:	movne	r0, #1
   20220:	and	r0, r0, #1
   20224:	strb	r0, [sp, #5]
   20228:	ldrb	r0, [sp, #6]
   2022c:	tst	r0, #1
   20230:	bne	2025c <__assert_fail@plt+0xee94>
   20234:	ldrb	r0, [sp, #5]
   20238:	tst	r0, #1
   2023c:	beq	20280 <__assert_fail@plt+0xeeb8>
   20240:	ldrb	r0, [sp, #7]
   20244:	tst	r0, #1
   20248:	bne	2025c <__assert_fail@plt+0xee94>
   2024c:	bl	11290 <__errno_location@plt>
   20250:	ldr	r0, [r0]
   20254:	cmp	r0, #9
   20258:	beq	20280 <__assert_fail@plt+0xeeb8>
   2025c:	ldrb	r0, [sp, #5]
   20260:	tst	r0, #1
   20264:	bne	20274 <__assert_fail@plt+0xeeac>
   20268:	bl	11290 <__errno_location@plt>
   2026c:	movw	lr, #0
   20270:	str	lr, [r0]
   20274:	mvn	r0, #0
   20278:	str	r0, [fp, #-4]
   2027c:	b	20288 <__assert_fail@plt+0xeec0>
   20280:	movw	r0, #0
   20284:	str	r0, [fp, #-4]
   20288:	ldr	r0, [fp, #-4]
   2028c:	mov	sp, fp
   20290:	pop	{fp, pc}
   20294:	sub	sp, sp, #4
   20298:	ldr	r1, [pc, #32]	; 202c0 <__assert_fail@plt+0xeef8>
   2029c:	str	r0, [sp]
   202a0:	ldr	r0, [sp]
   202a4:	mov	r2, #0
   202a8:	str	r2, [r0, #20]
   202ac:	str	r2, [r0, #16]
   202b0:	ldr	r0, [sp]
   202b4:	str	r1, [r0, #24]
   202b8:	add	sp, sp, #4
   202bc:	bx	lr
   202c0:	addseq	pc, r5, r6, lsl r6	; <UNPREDICTABLE>
   202c4:	push	{fp, lr}
   202c8:	mov	fp, sp
   202cc:	sub	sp, sp, #16
   202d0:	ldr	r2, [pc, #364]	; 20444 <__assert_fail@plt+0xf07c>
   202d4:	str	r0, [sp, #8]
   202d8:	str	r1, [sp, #4]
   202dc:	ldr	r0, [sp, #8]
   202e0:	ldr	r0, [r0, #24]
   202e4:	cmp	r0, r2
   202e8:	bne	202f0 <__assert_fail@plt+0xef28>
   202ec:	b	20310 <__assert_fail@plt+0xef48>
   202f0:	movw	r0, #15650	; 0x3d22
   202f4:	movt	r0, #2
   202f8:	movw	r1, #15674	; 0x3d3a
   202fc:	movt	r1, #2
   20300:	movw	r2, #60	; 0x3c
   20304:	movw	r3, #15692	; 0x3d4c
   20308:	movt	r3, #2
   2030c:	bl	113c8 <__assert_fail@plt>
   20310:	ldr	r0, [sp, #8]
   20314:	ldr	r1, [r0, #16]
   20318:	ldr	r0, [r0, #20]
   2031c:	orr	r0, r1, r0
   20320:	cmp	r0, #0
   20324:	beq	2039c <__assert_fail@plt+0xefd4>
   20328:	b	2032c <__assert_fail@plt+0xef64>
   2032c:	ldr	r0, [sp, #4]
   20330:	ldr	r1, [r0, #96]	; 0x60
   20334:	ldr	r0, [r0, #100]	; 0x64
   20338:	ldr	r2, [sp, #8]
   2033c:	ldr	r3, [r2]
   20340:	ldr	r2, [r2, #4]
   20344:	eor	r0, r0, r2
   20348:	eor	r1, r1, r3
   2034c:	orr	r0, r1, r0
   20350:	cmp	r0, #0
   20354:	bne	2039c <__assert_fail@plt+0xefd4>
   20358:	b	2035c <__assert_fail@plt+0xef94>
   2035c:	ldr	r0, [sp, #4]
   20360:	ldr	r1, [r0]
   20364:	ldr	r0, [r0, #4]
   20368:	ldr	r2, [sp, #8]
   2036c:	ldr	r3, [r2, #8]
   20370:	ldr	r2, [r2, #12]
   20374:	eor	r0, r0, r2
   20378:	eor	r1, r1, r3
   2037c:	orr	r0, r1, r0
   20380:	cmp	r0, #0
   20384:	bne	2039c <__assert_fail@plt+0xefd4>
   20388:	b	2038c <__assert_fail@plt+0xefc4>
   2038c:	movw	r0, #1
   20390:	and	r0, r0, #1
   20394:	strb	r0, [fp, #-1]
   20398:	b	20434 <__assert_fail@plt+0xf06c>
   2039c:	ldr	r0, [sp, #8]
   203a0:	ldr	r1, [r0, #16]
   203a4:	ldr	r2, [r0, #20]
   203a8:	adds	r1, r1, #1
   203ac:	adc	r2, r2, #0
   203b0:	str	r1, [r0, #16]
   203b4:	str	r2, [r0, #20]
   203b8:	mov	r0, r1
   203bc:	mov	r1, r2
   203c0:	bl	20448 <__assert_fail@plt+0xf080>
   203c4:	tst	r0, #1
   203c8:	beq	20428 <__assert_fail@plt+0xf060>
   203cc:	ldr	r0, [sp, #8]
   203d0:	ldr	r1, [r0, #16]
   203d4:	ldr	r0, [r0, #20]
   203d8:	orr	r0, r1, r0
   203dc:	cmp	r0, #0
   203e0:	bne	203f8 <__assert_fail@plt+0xf030>
   203e4:	b	203e8 <__assert_fail@plt+0xf020>
   203e8:	movw	r0, #1
   203ec:	and	r0, r0, #1
   203f0:	strb	r0, [fp, #-1]
   203f4:	b	20434 <__assert_fail@plt+0xf06c>
   203f8:	ldr	r0, [sp, #4]
   203fc:	ldr	r1, [r0]
   20400:	ldr	r0, [r0, #4]
   20404:	ldr	r2, [sp, #8]
   20408:	str	r0, [r2, #12]
   2040c:	str	r1, [r2, #8]
   20410:	ldr	r0, [sp, #4]
   20414:	ldr	r1, [r0, #96]	; 0x60
   20418:	ldr	r0, [r0, #100]	; 0x64
   2041c:	ldr	r2, [sp, #8]
   20420:	str	r0, [r2, #4]
   20424:	str	r1, [r2]
   20428:	movw	r0, #0
   2042c:	and	r0, r0, #1
   20430:	strb	r0, [fp, #-1]
   20434:	ldrb	r0, [fp, #-1]
   20438:	and	r0, r0, #1
   2043c:	mov	sp, fp
   20440:	pop	{fp, pc}
   20444:	addseq	pc, r5, r6, lsl r6	; <UNPREDICTABLE>
   20448:	sub	sp, sp, #8
   2044c:	str	r0, [sp]
   20450:	str	r1, [sp, #4]
   20454:	ldr	r0, [sp]
   20458:	ldr	r1, [sp, #4]
   2045c:	subs	r2, r0, #1
   20460:	sbc	r3, r1, #0
   20464:	and	r0, r0, r2
   20468:	and	r1, r1, r3
   2046c:	orr	r0, r0, r1
   20470:	clz	r0, r0
   20474:	lsr	r0, r0, #5
   20478:	and	r0, r0, #1
   2047c:	add	sp, sp, #8
   20480:	bx	lr
   20484:	push	{fp, lr}
   20488:	mov	fp, sp
   2048c:	sub	sp, sp, #32
   20490:	str	r0, [fp, #-8]
   20494:	movw	r0, #0
   20498:	str	r0, [fp, #-12]
   2049c:	str	r0, [sp, #12]
   204a0:	ldr	r0, [fp, #-8]
   204a4:	bl	112b4 <fileno@plt>
   204a8:	str	r0, [sp, #16]
   204ac:	ldr	r0, [sp, #16]
   204b0:	cmp	r0, #0
   204b4:	bge	204c8 <__assert_fail@plt+0xf100>
   204b8:	ldr	r0, [fp, #-8]
   204bc:	bl	112c0 <fclose@plt>
   204c0:	str	r0, [fp, #-4]
   204c4:	b	20564 <__assert_fail@plt+0xf19c>
   204c8:	ldr	r0, [fp, #-8]
   204cc:	bl	11218 <__freading@plt>
   204d0:	cmp	r0, #0
   204d4:	beq	2050c <__assert_fail@plt+0xf144>
   204d8:	ldr	r0, [fp, #-8]
   204dc:	bl	112b4 <fileno@plt>
   204e0:	mov	lr, sp
   204e4:	mov	r1, #1
   204e8:	str	r1, [lr]
   204ec:	mov	r1, #0
   204f0:	mov	r2, r1
   204f4:	mov	r3, r1
   204f8:	bl	111ac <lseek64@plt>
   204fc:	and	r0, r0, r1
   20500:	cmn	r0, #1
   20504:	beq	20528 <__assert_fail@plt+0xf160>
   20508:	b	2050c <__assert_fail@plt+0xf144>
   2050c:	ldr	r0, [fp, #-8]
   20510:	bl	209d4 <__assert_fail@plt+0xf60c>
   20514:	cmp	r0, #0
   20518:	beq	20528 <__assert_fail@plt+0xf160>
   2051c:	bl	11290 <__errno_location@plt>
   20520:	ldr	r0, [r0]
   20524:	str	r0, [fp, #-12]
   20528:	ldr	r0, [fp, #-8]
   2052c:	bl	112c0 <fclose@plt>
   20530:	str	r0, [sp, #12]
   20534:	ldr	r0, [fp, #-12]
   20538:	cmp	r0, #0
   2053c:	beq	2055c <__assert_fail@plt+0xf194>
   20540:	ldr	r0, [fp, #-12]
   20544:	str	r0, [sp, #8]
   20548:	bl	11290 <__errno_location@plt>
   2054c:	ldr	lr, [sp, #8]
   20550:	str	lr, [r0]
   20554:	mvn	r0, #0
   20558:	str	r0, [sp, #12]
   2055c:	ldr	r0, [sp, #12]
   20560:	str	r0, [fp, #-4]
   20564:	ldr	r0, [fp, #-4]
   20568:	mov	sp, fp
   2056c:	pop	{fp, pc}
   20570:	sub	sp, sp, #8
   20574:	push	{fp, lr}
   20578:	mov	fp, sp
   2057c:	sub	sp, sp, #48	; 0x30
   20580:	str	r3, [fp, #12]
   20584:	str	r2, [fp, #8]
   20588:	str	r0, [fp, #-4]
   2058c:	str	r1, [fp, #-8]
   20590:	mvn	r0, #0
   20594:	str	r0, [fp, #-16]
   20598:	add	r0, fp, #8
   2059c:	str	r0, [fp, #-12]
   205a0:	ldr	r0, [fp, #-8]
   205a4:	cmp	r0, #0
   205a8:	str	r0, [sp, #12]
   205ac:	beq	205c8 <__assert_fail@plt+0xf200>
   205b0:	b	205b4 <__assert_fail@plt+0xf1ec>
   205b4:	movw	r0, #1030	; 0x406
   205b8:	ldr	r1, [sp, #12]
   205bc:	cmp	r1, r0
   205c0:	beq	205f0 <__assert_fail@plt+0xf228>
   205c4:	b	20618 <__assert_fail@plt+0xf250>
   205c8:	ldr	r0, [fp, #-12]
   205cc:	add	r1, r0, #4
   205d0:	str	r1, [fp, #-12]
   205d4:	ldr	r0, [r0]
   205d8:	str	r0, [fp, #-20]	; 0xffffffec
   205dc:	ldr	r0, [fp, #-4]
   205e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   205e4:	bl	207c4 <__assert_fail@plt+0xf3fc>
   205e8:	str	r0, [fp, #-16]
   205ec:	b	207a4 <__assert_fail@plt+0xf3dc>
   205f0:	ldr	r0, [fp, #-12]
   205f4:	add	r1, r0, #4
   205f8:	str	r1, [fp, #-12]
   205fc:	ldr	r0, [r0]
   20600:	str	r0, [sp, #24]
   20604:	ldr	r0, [fp, #-4]
   20608:	ldr	r1, [sp, #24]
   2060c:	bl	207f8 <__assert_fail@plt+0xf430>
   20610:	str	r0, [fp, #-16]
   20614:	b	207a4 <__assert_fail@plt+0xf3dc>
   20618:	ldr	r0, [fp, #-8]
   2061c:	cmp	r0, #0
   20620:	str	r0, [sp, #8]
   20624:	beq	2074c <__assert_fail@plt+0xf384>
   20628:	b	2062c <__assert_fail@plt+0xf264>
   2062c:	ldr	r0, [sp, #8]
   20630:	cmp	r0, #1
   20634:	beq	20738 <__assert_fail@plt+0xf370>
   20638:	b	2063c <__assert_fail@plt+0xf274>
   2063c:	ldr	r0, [sp, #8]
   20640:	cmp	r0, #2
   20644:	beq	2074c <__assert_fail@plt+0xf384>
   20648:	b	2064c <__assert_fail@plt+0xf284>
   2064c:	ldr	r0, [sp, #8]
   20650:	cmp	r0, #3
   20654:	beq	20738 <__assert_fail@plt+0xf370>
   20658:	b	2065c <__assert_fail@plt+0xf294>
   2065c:	ldr	r0, [sp, #8]
   20660:	cmp	r0, #4
   20664:	beq	2074c <__assert_fail@plt+0xf384>
   20668:	b	2066c <__assert_fail@plt+0xf2a4>
   2066c:	ldr	r0, [sp, #8]
   20670:	cmp	r0, #8
   20674:	beq	2074c <__assert_fail@plt+0xf384>
   20678:	b	2067c <__assert_fail@plt+0xf2b4>
   2067c:	ldr	r0, [sp, #8]
   20680:	cmp	r0, #9
   20684:	beq	20738 <__assert_fail@plt+0xf370>
   20688:	b	2068c <__assert_fail@plt+0xf2c4>
   2068c:	ldr	r0, [sp, #8]
   20690:	cmp	r0, #10
   20694:	beq	2074c <__assert_fail@plt+0xf384>
   20698:	b	2069c <__assert_fail@plt+0xf2d4>
   2069c:	ldr	r0, [sp, #8]
   206a0:	cmp	r0, #11
   206a4:	beq	20738 <__assert_fail@plt+0xf370>
   206a8:	b	206ac <__assert_fail@plt+0xf2e4>
   206ac:	ldr	r0, [sp, #8]
   206b0:	cmp	r0, #1024	; 0x400
   206b4:	beq	2074c <__assert_fail@plt+0xf384>
   206b8:	b	206bc <__assert_fail@plt+0xf2f4>
   206bc:	movw	r0, #1025	; 0x401
   206c0:	ldr	r1, [sp, #8]
   206c4:	cmp	r1, r0
   206c8:	beq	20738 <__assert_fail@plt+0xf370>
   206cc:	b	206d0 <__assert_fail@plt+0xf308>
   206d0:	movw	r0, #1026	; 0x402
   206d4:	ldr	r1, [sp, #8]
   206d8:	cmp	r1, r0
   206dc:	beq	2074c <__assert_fail@plt+0xf384>
   206e0:	b	206e4 <__assert_fail@plt+0xf31c>
   206e4:	movw	r0, #1030	; 0x406
   206e8:	ldr	r1, [sp, #8]
   206ec:	sub	r0, r1, r0
   206f0:	cmp	r0, #2
   206f4:	bcc	2074c <__assert_fail@plt+0xf384>
   206f8:	b	206fc <__assert_fail@plt+0xf334>
   206fc:	movw	r0, #1032	; 0x408
   20700:	ldr	r1, [sp, #8]
   20704:	cmp	r1, r0
   20708:	beq	20738 <__assert_fail@plt+0xf370>
   2070c:	b	20710 <__assert_fail@plt+0xf348>
   20710:	movw	r0, #1033	; 0x409
   20714:	ldr	r1, [sp, #8]
   20718:	cmp	r1, r0
   2071c:	beq	2074c <__assert_fail@plt+0xf384>
   20720:	b	20724 <__assert_fail@plt+0xf35c>
   20724:	movw	r0, #1034	; 0x40a
   20728:	ldr	r1, [sp, #8]
   2072c:	cmp	r1, r0
   20730:	bne	20778 <__assert_fail@plt+0xf3b0>
   20734:	b	20738 <__assert_fail@plt+0xf370>
   20738:	ldr	r0, [fp, #-4]
   2073c:	ldr	r1, [fp, #-8]
   20740:	bl	112d8 <fcntl64@plt>
   20744:	str	r0, [fp, #-16]
   20748:	b	207a0 <__assert_fail@plt+0xf3d8>
   2074c:	ldr	r0, [fp, #-12]
   20750:	add	r1, r0, #4
   20754:	str	r1, [fp, #-12]
   20758:	ldr	r0, [r0]
   2075c:	str	r0, [sp, #20]
   20760:	ldr	r0, [fp, #-4]
   20764:	ldr	r1, [fp, #-8]
   20768:	ldr	r2, [sp, #20]
   2076c:	bl	112d8 <fcntl64@plt>
   20770:	str	r0, [fp, #-16]
   20774:	b	207a0 <__assert_fail@plt+0xf3d8>
   20778:	ldr	r0, [fp, #-12]
   2077c:	add	r1, r0, #4
   20780:	str	r1, [fp, #-12]
   20784:	ldr	r0, [r0]
   20788:	str	r0, [sp, #16]
   2078c:	ldr	r0, [fp, #-4]
   20790:	ldr	r1, [fp, #-8]
   20794:	ldr	r2, [sp, #16]
   20798:	bl	112d8 <fcntl64@plt>
   2079c:	str	r0, [fp, #-16]
   207a0:	b	207a4 <__assert_fail@plt+0xf3dc>
   207a4:	sub	r0, fp, #12
   207a8:	ldr	r1, [fp, #-16]
   207ac:	str	r0, [sp, #4]
   207b0:	mov	r0, r1
   207b4:	mov	sp, fp
   207b8:	pop	{fp, lr}
   207bc:	add	sp, sp, #8
   207c0:	bx	lr
   207c4:	push	{fp, lr}
   207c8:	mov	fp, sp
   207cc:	sub	sp, sp, #16
   207d0:	str	r0, [fp, #-4]
   207d4:	str	r1, [sp, #8]
   207d8:	ldr	r0, [fp, #-4]
   207dc:	ldr	r2, [sp, #8]
   207e0:	movw	r1, #0
   207e4:	bl	112d8 <fcntl64@plt>
   207e8:	str	r0, [sp, #4]
   207ec:	ldr	r0, [sp, #4]
   207f0:	mov	sp, fp
   207f4:	pop	{fp, pc}
   207f8:	push	{fp, lr}
   207fc:	mov	fp, sp
   20800:	sub	sp, sp, #32
   20804:	str	r0, [fp, #-4]
   20808:	str	r1, [fp, #-8]
   2080c:	movw	r0, #17128	; 0x42e8
   20810:	movt	r0, #3
   20814:	ldr	r0, [r0]
   20818:	movw	r1, #0
   2081c:	cmp	r1, r0
   20820:	bgt	208a0 <__assert_fail@plt+0xf4d8>
   20824:	ldr	r0, [fp, #-4]
   20828:	ldr	r2, [fp, #-8]
   2082c:	movw	r1, #1030	; 0x406
   20830:	bl	112d8 <fcntl64@plt>
   20834:	str	r0, [fp, #-12]
   20838:	ldr	r0, [fp, #-12]
   2083c:	movw	r1, #0
   20840:	cmp	r1, r0
   20844:	ble	20858 <__assert_fail@plt+0xf490>
   20848:	bl	11290 <__errno_location@plt>
   2084c:	ldr	r0, [r0]
   20850:	cmp	r0, #22
   20854:	beq	2086c <__assert_fail@plt+0xf4a4>
   20858:	movw	r0, #17128	; 0x42e8
   2085c:	movt	r0, #3
   20860:	movw	r1, #1
   20864:	str	r1, [r0]
   20868:	b	2089c <__assert_fail@plt+0xf4d4>
   2086c:	ldr	r0, [fp, #-4]
   20870:	ldr	r1, [fp, #-8]
   20874:	bl	207c4 <__assert_fail@plt+0xf3fc>
   20878:	str	r0, [fp, #-12]
   2087c:	ldr	r0, [fp, #-12]
   20880:	cmp	r0, #0
   20884:	blt	20898 <__assert_fail@plt+0xf4d0>
   20888:	movw	r0, #17128	; 0x42e8
   2088c:	movt	r0, #3
   20890:	mvn	r1, #0
   20894:	str	r1, [r0]
   20898:	b	2089c <__assert_fail@plt+0xf4d4>
   2089c:	b	208b0 <__assert_fail@plt+0xf4e8>
   208a0:	ldr	r0, [fp, #-4]
   208a4:	ldr	r1, [fp, #-8]
   208a8:	bl	207c4 <__assert_fail@plt+0xf3fc>
   208ac:	str	r0, [fp, #-12]
   208b0:	ldr	r0, [fp, #-12]
   208b4:	movw	r1, #0
   208b8:	cmp	r1, r0
   208bc:	bgt	20944 <__assert_fail@plt+0xf57c>
   208c0:	movw	r0, #17128	; 0x42e8
   208c4:	movt	r0, #3
   208c8:	ldr	r0, [r0]
   208cc:	cmn	r0, #1
   208d0:	bne	20944 <__assert_fail@plt+0xf57c>
   208d4:	ldr	r0, [fp, #-12]
   208d8:	movw	r1, #1
   208dc:	bl	112d8 <fcntl64@plt>
   208e0:	str	r0, [sp, #16]
   208e4:	ldr	r0, [sp, #16]
   208e8:	cmp	r0, #0
   208ec:	blt	2090c <__assert_fail@plt+0xf544>
   208f0:	ldr	r0, [fp, #-12]
   208f4:	ldr	r1, [sp, #16]
   208f8:	orr	r2, r1, #1
   208fc:	movw	r1, #2
   20900:	bl	112d8 <fcntl64@plt>
   20904:	cmn	r0, #1
   20908:	bne	20940 <__assert_fail@plt+0xf578>
   2090c:	bl	11290 <__errno_location@plt>
   20910:	ldr	r0, [r0]
   20914:	str	r0, [sp, #12]
   20918:	ldr	r0, [fp, #-12]
   2091c:	bl	113a4 <close@plt>
   20920:	ldr	lr, [sp, #12]
   20924:	str	r0, [sp, #8]
   20928:	str	lr, [sp, #4]
   2092c:	bl	11290 <__errno_location@plt>
   20930:	ldr	lr, [sp, #4]
   20934:	str	lr, [r0]
   20938:	mvn	r0, #0
   2093c:	str	r0, [fp, #-12]
   20940:	b	20944 <__assert_fail@plt+0xf57c>
   20944:	ldr	r0, [fp, #-12]
   20948:	mov	sp, fp
   2094c:	pop	{fp, pc}
   20950:	sub	sp, sp, #8
   20954:	push	{fp, lr}
   20958:	mov	fp, sp
   2095c:	sub	sp, sp, #24
   20960:	str	r3, [fp, #12]
   20964:	str	r2, [fp, #8]
   20968:	str	r0, [fp, #-4]
   2096c:	str	r1, [fp, #-8]
   20970:	movw	r0, #0
   20974:	str	r0, [sp, #12]
   20978:	ldr	r0, [fp, #-8]
   2097c:	and	r0, r0, #64	; 0x40
   20980:	cmp	r0, #0
   20984:	beq	209b0 <__assert_fail@plt+0xf5e8>
   20988:	add	r0, sp, #8
   2098c:	mov	r1, r0
   20990:	add	r2, fp, #8
   20994:	str	r2, [r1]
   20998:	ldr	r1, [sp, #8]
   2099c:	add	r2, r1, #4
   209a0:	str	r2, [sp, #8]
   209a4:	ldr	r1, [r1]
   209a8:	str	r1, [sp, #12]
   209ac:	str	r0, [sp, #4]
   209b0:	ldr	r0, [fp, #-4]
   209b4:	ldr	r1, [fp, #-8]
   209b8:	ldr	r2, [sp, #12]
   209bc:	bl	111f4 <open64@plt>
   209c0:	bl	1c39c <__assert_fail@plt+0xafd4>
   209c4:	mov	sp, fp
   209c8:	pop	{fp, lr}
   209cc:	add	sp, sp, #8
   209d0:	bx	lr
   209d4:	push	{fp, lr}
   209d8:	mov	fp, sp
   209dc:	sub	sp, sp, #8
   209e0:	str	r0, [sp]
   209e4:	ldr	r0, [sp]
   209e8:	movw	r1, #0
   209ec:	cmp	r0, r1
   209f0:	beq	20a04 <__assert_fail@plt+0xf63c>
   209f4:	ldr	r0, [sp]
   209f8:	bl	11218 <__freading@plt>
   209fc:	cmp	r0, #0
   20a00:	bne	20a14 <__assert_fail@plt+0xf64c>
   20a04:	ldr	r0, [sp]
   20a08:	bl	1111c <fflush@plt>
   20a0c:	str	r0, [sp, #4]
   20a10:	b	20a28 <__assert_fail@plt+0xf660>
   20a14:	ldr	r0, [sp]
   20a18:	bl	20a34 <__assert_fail@plt+0xf66c>
   20a1c:	ldr	r0, [sp]
   20a20:	bl	1111c <fflush@plt>
   20a24:	str	r0, [sp, #4]
   20a28:	ldr	r0, [sp, #4]
   20a2c:	mov	sp, fp
   20a30:	pop	{fp, pc}
   20a34:	push	{fp, lr}
   20a38:	mov	fp, sp
   20a3c:	sub	sp, sp, #16
   20a40:	str	r0, [fp, #-4]
   20a44:	ldr	r0, [fp, #-4]
   20a48:	ldr	r0, [r0]
   20a4c:	and	r0, r0, #256	; 0x100
   20a50:	cmp	r0, #0
   20a54:	beq	20a7c <__assert_fail@plt+0xf6b4>
   20a58:	ldr	r0, [fp, #-4]
   20a5c:	mov	r1, sp
   20a60:	mov	r2, #1
   20a64:	str	r2, [r1]
   20a68:	mov	r1, #0
   20a6c:	mov	r2, r1
   20a70:	mov	r3, r1
   20a74:	bl	20ac4 <__assert_fail@plt+0xf6fc>
   20a78:	str	r0, [sp, #8]
   20a7c:	mov	sp, fp
   20a80:	pop	{fp, pc}
   20a84:	push	{fp, lr}
   20a88:	mov	fp, sp
   20a8c:	sub	sp, sp, #16
   20a90:	str	r0, [fp, #-4]
   20a94:	bl	11290 <__errno_location@plt>
   20a98:	ldr	r0, [r0]
   20a9c:	str	r0, [sp, #8]
   20aa0:	ldr	r0, [fp, #-4]
   20aa4:	bl	11134 <free@plt>
   20aa8:	ldr	r0, [sp, #8]
   20aac:	str	r0, [sp, #4]
   20ab0:	bl	11290 <__errno_location@plt>
   20ab4:	ldr	lr, [sp, #4]
   20ab8:	str	lr, [r0]
   20abc:	mov	sp, fp
   20ac0:	pop	{fp, pc}
   20ac4:	push	{fp, lr}
   20ac8:	mov	fp, sp
   20acc:	sub	sp, sp, #32
   20ad0:	ldr	r1, [fp, #8]
   20ad4:	str	r0, [fp, #-8]
   20ad8:	str	r3, [sp, #20]
   20adc:	str	r2, [sp, #16]
   20ae0:	ldr	r0, [fp, #-8]
   20ae4:	ldr	r0, [r0, #8]
   20ae8:	ldr	r2, [fp, #-8]
   20aec:	ldr	r2, [r2, #4]
   20af0:	cmp	r0, r2
   20af4:	str	r1, [sp, #4]
   20af8:	bne	20ba4 <__assert_fail@plt+0xf7dc>
   20afc:	ldr	r0, [fp, #-8]
   20b00:	ldr	r0, [r0, #20]
   20b04:	ldr	r1, [fp, #-8]
   20b08:	ldr	r1, [r1, #16]
   20b0c:	cmp	r0, r1
   20b10:	bne	20ba4 <__assert_fail@plt+0xf7dc>
   20b14:	ldr	r0, [fp, #-8]
   20b18:	ldr	r0, [r0, #36]	; 0x24
   20b1c:	movw	r1, #0
   20b20:	cmp	r0, r1
   20b24:	bne	20ba4 <__assert_fail@plt+0xf7dc>
   20b28:	ldr	r0, [fp, #-8]
   20b2c:	bl	112b4 <fileno@plt>
   20b30:	ldr	r2, [sp, #16]
   20b34:	ldr	r3, [sp, #20]
   20b38:	ldr	lr, [fp, #8]
   20b3c:	mov	r1, sp
   20b40:	str	lr, [r1]
   20b44:	bl	111ac <lseek64@plt>
   20b48:	str	r1, [sp, #12]
   20b4c:	str	r0, [sp, #8]
   20b50:	ldr	r0, [sp, #8]
   20b54:	ldr	r1, [sp, #12]
   20b58:	and	r0, r0, r1
   20b5c:	cmn	r0, #1
   20b60:	bne	20b74 <__assert_fail@plt+0xf7ac>
   20b64:	b	20b68 <__assert_fail@plt+0xf7a0>
   20b68:	mvn	r0, #0
   20b6c:	str	r0, [fp, #-4]
   20b70:	b	20bc4 <__assert_fail@plt+0xf7fc>
   20b74:	ldr	r0, [fp, #-8]
   20b78:	ldr	r1, [r0]
   20b7c:	bic	r1, r1, #16
   20b80:	str	r1, [r0]
   20b84:	ldr	r0, [sp, #8]
   20b88:	ldr	r1, [sp, #12]
   20b8c:	ldr	r2, [fp, #-8]
   20b90:	str	r1, [r2, #84]	; 0x54
   20b94:	str	r0, [r2, #80]	; 0x50
   20b98:	movw	r0, #0
   20b9c:	str	r0, [fp, #-4]
   20ba0:	b	20bc4 <__assert_fail@plt+0xf7fc>
   20ba4:	ldr	r0, [fp, #-8]
   20ba8:	ldr	r2, [sp, #16]
   20bac:	ldr	r3, [sp, #20]
   20bb0:	ldr	r1, [fp, #8]
   20bb4:	mov	ip, sp
   20bb8:	str	r1, [ip]
   20bbc:	bl	112cc <fseeko64@plt>
   20bc0:	str	r0, [fp, #-4]
   20bc4:	ldr	r0, [fp, #-4]
   20bc8:	mov	sp, fp
   20bcc:	pop	{fp, pc}
   20bd0:	push	{fp, lr}
   20bd4:	mov	fp, sp
   20bd8:	bl	11290 <__errno_location@plt>
   20bdc:	movw	lr, #12
   20be0:	str	lr, [r0]
   20be4:	movw	r0, #0
   20be8:	pop	{fp, pc}
   20bec:	push	{fp, lr}
   20bf0:	mov	fp, sp
   20bf4:	sub	sp, sp, #8
   20bf8:	str	r0, [sp, #4]
   20bfc:	ldr	r0, [sp, #4]
   20c00:	cmn	r0, #1
   20c04:	bhi	20c18 <__assert_fail@plt+0xf850>
   20c08:	ldr	r0, [sp, #4]
   20c0c:	bl	1fd18 <__assert_fail@plt+0xe950>
   20c10:	str	r0, [sp]
   20c14:	b	20c20 <__assert_fail@plt+0xf858>
   20c18:	bl	20bd0 <__assert_fail@plt+0xf808>
   20c1c:	str	r0, [sp]
   20c20:	ldr	r0, [sp]
   20c24:	mov	sp, fp
   20c28:	pop	{fp, pc}
   20c2c:	push	{fp, lr}
   20c30:	mov	fp, sp
   20c34:	sub	sp, sp, #16
   20c38:	str	r0, [fp, #-4]
   20c3c:	str	r1, [sp, #8]
   20c40:	ldr	r0, [sp, #8]
   20c44:	cmn	r0, #1
   20c48:	bhi	20c80 <__assert_fail@plt+0xf8b8>
   20c4c:	ldr	r0, [fp, #-4]
   20c50:	ldr	r1, [sp, #8]
   20c54:	ldr	r2, [sp, #8]
   20c58:	cmp	r2, #0
   20c5c:	movw	r2, #0
   20c60:	movne	r2, #1
   20c64:	mvn	r3, #0
   20c68:	eor	r2, r2, r3
   20c6c:	and	r2, r2, #1
   20c70:	orr	r1, r1, r2
   20c74:	bl	1fd88 <__assert_fail@plt+0xe9c0>
   20c78:	str	r0, [sp, #4]
   20c7c:	b	20c88 <__assert_fail@plt+0xf8c0>
   20c80:	bl	20bd0 <__assert_fail@plt+0xf808>
   20c84:	str	r0, [sp, #4]
   20c88:	ldr	r0, [sp, #4]
   20c8c:	mov	sp, fp
   20c90:	pop	{fp, pc}
   20c94:	push	{fp, lr}
   20c98:	mov	fp, sp
   20c9c:	sub	sp, sp, #16
   20ca0:	str	r0, [sp, #8]
   20ca4:	str	r1, [sp, #4]
   20ca8:	ldr	r0, [sp, #8]
   20cac:	mvn	r1, #0
   20cb0:	cmp	r1, r0
   20cb4:	bcs	20cd8 <__assert_fail@plt+0xf910>
   20cb8:	ldr	r0, [sp, #4]
   20cbc:	cmp	r0, #0
   20cc0:	beq	20cd0 <__assert_fail@plt+0xf908>
   20cc4:	bl	20bd0 <__assert_fail@plt+0xf808>
   20cc8:	str	r0, [fp, #-4]
   20ccc:	b	20d18 <__assert_fail@plt+0xf950>
   20cd0:	movw	r0, #0
   20cd4:	str	r0, [sp, #8]
   20cd8:	ldr	r0, [sp, #4]
   20cdc:	mvn	r1, #0
   20ce0:	cmp	r1, r0
   20ce4:	bcs	20d08 <__assert_fail@plt+0xf940>
   20ce8:	ldr	r0, [sp, #8]
   20cec:	cmp	r0, #0
   20cf0:	beq	20d00 <__assert_fail@plt+0xf938>
   20cf4:	bl	20bd0 <__assert_fail@plt+0xf808>
   20cf8:	str	r0, [fp, #-4]
   20cfc:	b	20d18 <__assert_fail@plt+0xf950>
   20d00:	movw	r0, #0
   20d04:	str	r0, [sp, #4]
   20d08:	ldr	r0, [sp, #8]
   20d0c:	ldr	r1, [sp, #4]
   20d10:	bl	1fc7c <__assert_fail@plt+0xe8b4>
   20d14:	str	r0, [fp, #-4]
   20d18:	ldr	r0, [fp, #-4]
   20d1c:	mov	sp, fp
   20d20:	pop	{fp, pc}
   20d24:	push	{fp, lr}
   20d28:	mov	fp, sp
   20d2c:	sub	sp, sp, #16
   20d30:	str	r0, [fp, #-4]
   20d34:	str	r1, [sp, #8]
   20d38:	str	r2, [sp, #4]
   20d3c:	ldr	r0, [sp, #8]
   20d40:	cmp	r0, #0
   20d44:	beq	20d54 <__assert_fail@plt+0xf98c>
   20d48:	ldr	r0, [sp, #4]
   20d4c:	cmp	r0, #0
   20d50:	bne	20d60 <__assert_fail@plt+0xf998>
   20d54:	movw	r0, #1
   20d58:	str	r0, [sp, #4]
   20d5c:	str	r0, [sp, #8]
   20d60:	ldr	r0, [sp, #8]
   20d64:	cmn	r0, #1
   20d68:	bhi	20d90 <__assert_fail@plt+0xf9c8>
   20d6c:	ldr	r0, [sp, #4]
   20d70:	cmn	r0, #1
   20d74:	bhi	20d90 <__assert_fail@plt+0xf9c8>
   20d78:	ldr	r0, [fp, #-4]
   20d7c:	ldr	r1, [sp, #8]
   20d80:	ldr	r2, [sp, #4]
   20d84:	bl	20eb0 <__assert_fail@plt+0xfae8>
   20d88:	str	r0, [sp]
   20d8c:	b	20d98 <__assert_fail@plt+0xf9d0>
   20d90:	bl	20bd0 <__assert_fail@plt+0xf808>
   20d94:	str	r0, [sp]
   20d98:	ldr	r0, [sp]
   20d9c:	mov	sp, fp
   20da0:	pop	{fp, pc}
   20da4:	push	{fp, lr}
   20da8:	mov	fp, sp
   20dac:	sub	sp, sp, #8
   20db0:	movw	r0, #14
   20db4:	bl	112fc <nl_langinfo@plt>
   20db8:	str	r0, [sp, #4]
   20dbc:	ldr	r0, [sp, #4]
   20dc0:	movw	lr, #0
   20dc4:	cmp	r0, lr
   20dc8:	bne	20dd8 <__assert_fail@plt+0xfa10>
   20dcc:	movw	r0, #11998	; 0x2ede
   20dd0:	movt	r0, #2
   20dd4:	str	r0, [sp, #4]
   20dd8:	ldr	r0, [sp, #4]
   20ddc:	ldrb	r0, [r0]
   20de0:	cmp	r0, #0
   20de4:	bne	20df4 <__assert_fail@plt+0xfa2c>
   20de8:	movw	r0, #15759	; 0x3d8f
   20dec:	movt	r0, #2
   20df0:	str	r0, [sp, #4]
   20df4:	ldr	r0, [sp, #4]
   20df8:	mov	sp, fp
   20dfc:	pop	{fp, pc}
   20e00:	push	{fp, lr}
   20e04:	mov	fp, sp
   20e08:	sub	sp, sp, #32
   20e0c:	str	r0, [fp, #-8]
   20e10:	str	r1, [fp, #-12]
   20e14:	str	r2, [sp, #16]
   20e18:	str	r3, [sp, #12]
   20e1c:	ldr	r0, [fp, #-8]
   20e20:	movw	r1, #0
   20e24:	cmp	r0, r1
   20e28:	bne	20e34 <__assert_fail@plt+0xfa6c>
   20e2c:	add	r0, sp, #4
   20e30:	str	r0, [fp, #-8]
   20e34:	ldr	r0, [fp, #-8]
   20e38:	ldr	r1, [fp, #-12]
   20e3c:	ldr	r2, [sp, #16]
   20e40:	ldr	r3, [sp, #12]
   20e44:	bl	111dc <mbrtowc@plt>
   20e48:	str	r0, [sp, #8]
   20e4c:	ldr	r0, [sp, #8]
   20e50:	mvn	r1, #1
   20e54:	cmp	r1, r0
   20e58:	bhi	20e9c <__assert_fail@plt+0xfad4>
   20e5c:	ldr	r0, [sp, #16]
   20e60:	cmp	r0, #0
   20e64:	beq	20e9c <__assert_fail@plt+0xfad4>
   20e68:	movw	r0, #0
   20e6c:	bl	228a8 <__assert_fail@plt+0x114e0>
   20e70:	tst	r0, #1
   20e74:	bne	20e9c <__assert_fail@plt+0xfad4>
   20e78:	ldr	r0, [fp, #-12]
   20e7c:	ldrb	r0, [r0]
   20e80:	strb	r0, [sp, #3]
   20e84:	ldrb	r0, [sp, #3]
   20e88:	ldr	r1, [fp, #-8]
   20e8c:	str	r0, [r1]
   20e90:	movw	r0, #1
   20e94:	str	r0, [fp, #-4]
   20e98:	b	20ea4 <__assert_fail@plt+0xfadc>
   20e9c:	ldr	r0, [sp, #8]
   20ea0:	str	r0, [fp, #-4]
   20ea4:	ldr	r0, [fp, #-4]
   20ea8:	mov	sp, fp
   20eac:	pop	{fp, pc}
   20eb0:	push	{fp, lr}
   20eb4:	mov	fp, sp
   20eb8:	sub	sp, sp, #176	; 0xb0
   20ebc:	str	r0, [fp, #-8]
   20ec0:	str	r1, [fp, #-12]
   20ec4:	str	r2, [fp, #-16]
   20ec8:	b	21280 <__assert_fail@plt+0xfeb8>
   20ecc:	b	210a0 <__assert_fail@plt+0xfcd8>
   20ed0:	ldr	r0, [fp, #-16]
   20ed4:	cmp	r0, #0
   20ed8:	bcs	20fdc <__assert_fail@plt+0xfc14>
   20edc:	ldr	r0, [fp, #-12]
   20ee0:	cmp	r0, #0
   20ee4:	bcs	20f6c <__assert_fail@plt+0xfba4>
   20ee8:	b	20f08 <__assert_fail@plt+0xfb40>
   20eec:	ldr	r0, [fp, #-12]
   20ef0:	ldr	r1, [fp, #-16]
   20ef4:	movw	r2, #127	; 0x7f
   20ef8:	udiv	r1, r2, r1
   20efc:	cmp	r0, r1
   20f00:	bcc	21070 <__assert_fail@plt+0xfca8>
   20f04:	b	21088 <__assert_fail@plt+0xfcc0>
   20f08:	b	20f1c <__assert_fail@plt+0xfb54>
   20f0c:	ldr	r0, [fp, #-16]
   20f10:	cmp	r0, #1
   20f14:	bcc	20f2c <__assert_fail@plt+0xfb64>
   20f18:	b	20f38 <__assert_fail@plt+0xfb70>
   20f1c:	ldr	r0, [fp, #-16]
   20f20:	movw	r1, #0
   20f24:	cmp	r1, r0
   20f28:	bcs	20f38 <__assert_fail@plt+0xfb70>
   20f2c:	movw	r0, #0
   20f30:	str	r0, [fp, #-24]	; 0xffffffe8
   20f34:	b	20f50 <__assert_fail@plt+0xfb88>
   20f38:	ldr	r0, [fp, #-16]
   20f3c:	movw	r1, #0
   20f40:	sub	r0, r1, r0
   20f44:	movw	r1, #127	; 0x7f
   20f48:	udiv	r0, r1, r0
   20f4c:	str	r0, [fp, #-24]	; 0xffffffe8
   20f50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20f54:	ldr	r1, [fp, #-12]
   20f58:	mvn	r2, #0
   20f5c:	sub	r1, r2, r1
   20f60:	cmp	r0, r1
   20f64:	bls	21070 <__assert_fail@plt+0xfca8>
   20f68:	b	21088 <__assert_fail@plt+0xfcc0>
   20f6c:	ldr	r0, [fp, #-16]
   20f70:	cmn	r0, #1
   20f74:	bne	20fc0 <__assert_fail@plt+0xfbf8>
   20f78:	b	20f98 <__assert_fail@plt+0xfbd0>
   20f7c:	ldr	r0, [fp, #-12]
   20f80:	mvn	r1, #127	; 0x7f
   20f84:	add	r0, r0, r1
   20f88:	movw	r1, #0
   20f8c:	cmp	r1, r0
   20f90:	bcc	21070 <__assert_fail@plt+0xfca8>
   20f94:	b	21088 <__assert_fail@plt+0xfcc0>
   20f98:	ldr	r0, [fp, #-12]
   20f9c:	movw	r1, #0
   20fa0:	cmp	r1, r0
   20fa4:	bcs	21088 <__assert_fail@plt+0xfcc0>
   20fa8:	ldr	r0, [fp, #-12]
   20fac:	sub	r0, r0, #1
   20fb0:	movw	r1, #127	; 0x7f
   20fb4:	cmp	r1, r0
   20fb8:	bcc	21070 <__assert_fail@plt+0xfca8>
   20fbc:	b	21088 <__assert_fail@plt+0xfcc0>
   20fc0:	ldr	r0, [fp, #-16]
   20fc4:	mvn	r1, #127	; 0x7f
   20fc8:	udiv	r0, r1, r0
   20fcc:	ldr	r1, [fp, #-12]
   20fd0:	cmp	r0, r1
   20fd4:	bcc	21070 <__assert_fail@plt+0xfca8>
   20fd8:	b	21088 <__assert_fail@plt+0xfcc0>
   20fdc:	ldr	r0, [fp, #-16]
   20fe0:	cmp	r0, #0
   20fe4:	bne	20fec <__assert_fail@plt+0xfc24>
   20fe8:	b	21088 <__assert_fail@plt+0xfcc0>
   20fec:	ldr	r0, [fp, #-12]
   20ff0:	cmp	r0, #0
   20ff4:	bcs	21058 <__assert_fail@plt+0xfc90>
   20ff8:	ldr	r0, [fp, #-12]
   20ffc:	cmn	r0, #1
   21000:	bne	2103c <__assert_fail@plt+0xfc74>
   21004:	b	21024 <__assert_fail@plt+0xfc5c>
   21008:	ldr	r0, [fp, #-16]
   2100c:	mvn	r1, #127	; 0x7f
   21010:	add	r0, r0, r1
   21014:	movw	r1, #0
   21018:	cmp	r1, r0
   2101c:	bcc	21070 <__assert_fail@plt+0xfca8>
   21020:	b	21088 <__assert_fail@plt+0xfcc0>
   21024:	ldr	r0, [fp, #-16]
   21028:	sub	r0, r0, #1
   2102c:	movw	r1, #127	; 0x7f
   21030:	cmp	r1, r0
   21034:	bcc	21070 <__assert_fail@plt+0xfca8>
   21038:	b	21088 <__assert_fail@plt+0xfcc0>
   2103c:	ldr	r0, [fp, #-12]
   21040:	mvn	r1, #127	; 0x7f
   21044:	udiv	r0, r1, r0
   21048:	ldr	r1, [fp, #-16]
   2104c:	cmp	r0, r1
   21050:	bcc	21070 <__assert_fail@plt+0xfca8>
   21054:	b	21088 <__assert_fail@plt+0xfcc0>
   21058:	ldr	r0, [fp, #-16]
   2105c:	movw	r1, #127	; 0x7f
   21060:	udiv	r0, r1, r0
   21064:	ldr	r1, [fp, #-12]
   21068:	cmp	r0, r1
   2106c:	bcs	21088 <__assert_fail@plt+0xfcc0>
   21070:	ldr	r0, [fp, #-12]
   21074:	ldr	r1, [fp, #-16]
   21078:	mul	r0, r0, r1
   2107c:	sxtb	r0, r0
   21080:	str	r0, [fp, #-20]	; 0xffffffec
   21084:	b	22200 <__assert_fail@plt+0x10e38>
   21088:	ldr	r0, [fp, #-12]
   2108c:	ldr	r1, [fp, #-16]
   21090:	mul	r0, r0, r1
   21094:	sxtb	r0, r0
   21098:	str	r0, [fp, #-20]	; 0xffffffec
   2109c:	b	22218 <__assert_fail@plt+0x10e50>
   210a0:	ldr	r0, [fp, #-16]
   210a4:	cmp	r0, #0
   210a8:	bcs	211b4 <__assert_fail@plt+0xfdec>
   210ac:	ldr	r0, [fp, #-12]
   210b0:	cmp	r0, #0
   210b4:	bcs	2113c <__assert_fail@plt+0xfd74>
   210b8:	b	210d8 <__assert_fail@plt+0xfd10>
   210bc:	ldr	r0, [fp, #-12]
   210c0:	ldr	r1, [fp, #-16]
   210c4:	movw	r2, #255	; 0xff
   210c8:	udiv	r1, r2, r1
   210cc:	cmp	r0, r1
   210d0:	bcc	21250 <__assert_fail@plt+0xfe88>
   210d4:	b	21268 <__assert_fail@plt+0xfea0>
   210d8:	b	210ec <__assert_fail@plt+0xfd24>
   210dc:	ldr	r0, [fp, #-16]
   210e0:	cmp	r0, #1
   210e4:	bcc	210fc <__assert_fail@plt+0xfd34>
   210e8:	b	21108 <__assert_fail@plt+0xfd40>
   210ec:	ldr	r0, [fp, #-16]
   210f0:	movw	r1, #0
   210f4:	cmp	r1, r0
   210f8:	bcs	21108 <__assert_fail@plt+0xfd40>
   210fc:	movw	r0, #0
   21100:	str	r0, [fp, #-28]	; 0xffffffe4
   21104:	b	21120 <__assert_fail@plt+0xfd58>
   21108:	ldr	r0, [fp, #-16]
   2110c:	movw	r1, #0
   21110:	sub	r0, r1, r0
   21114:	movw	r1, #255	; 0xff
   21118:	udiv	r0, r1, r0
   2111c:	str	r0, [fp, #-28]	; 0xffffffe4
   21120:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21124:	ldr	r1, [fp, #-12]
   21128:	mvn	r2, #0
   2112c:	sub	r1, r2, r1
   21130:	cmp	r0, r1
   21134:	bls	21250 <__assert_fail@plt+0xfe88>
   21138:	b	21268 <__assert_fail@plt+0xfea0>
   2113c:	b	21144 <__assert_fail@plt+0xfd7c>
   21140:	b	21148 <__assert_fail@plt+0xfd80>
   21144:	b	21198 <__assert_fail@plt+0xfdd0>
   21148:	ldr	r0, [fp, #-16]
   2114c:	cmn	r0, #1
   21150:	bne	21198 <__assert_fail@plt+0xfdd0>
   21154:	b	21170 <__assert_fail@plt+0xfda8>
   21158:	ldr	r0, [fp, #-12]
   2115c:	add	r0, r0, #0
   21160:	movw	r1, #0
   21164:	cmp	r1, r0
   21168:	bcc	21250 <__assert_fail@plt+0xfe88>
   2116c:	b	21268 <__assert_fail@plt+0xfea0>
   21170:	ldr	r0, [fp, #-12]
   21174:	movw	r1, #0
   21178:	cmp	r1, r0
   2117c:	bcs	21268 <__assert_fail@plt+0xfea0>
   21180:	ldr	r0, [fp, #-12]
   21184:	sub	r0, r0, #1
   21188:	mvn	r1, #0
   2118c:	cmp	r1, r0
   21190:	bcc	21250 <__assert_fail@plt+0xfe88>
   21194:	b	21268 <__assert_fail@plt+0xfea0>
   21198:	ldr	r0, [fp, #-16]
   2119c:	movw	r1, #0
   211a0:	udiv	r0, r1, r0
   211a4:	ldr	r1, [fp, #-12]
   211a8:	cmp	r0, r1
   211ac:	bcc	21250 <__assert_fail@plt+0xfe88>
   211b0:	b	21268 <__assert_fail@plt+0xfea0>
   211b4:	ldr	r0, [fp, #-16]
   211b8:	cmp	r0, #0
   211bc:	bne	211c4 <__assert_fail@plt+0xfdfc>
   211c0:	b	21268 <__assert_fail@plt+0xfea0>
   211c4:	ldr	r0, [fp, #-12]
   211c8:	cmp	r0, #0
   211cc:	bcs	21238 <__assert_fail@plt+0xfe70>
   211d0:	b	211d8 <__assert_fail@plt+0xfe10>
   211d4:	b	211dc <__assert_fail@plt+0xfe14>
   211d8:	b	2121c <__assert_fail@plt+0xfe54>
   211dc:	ldr	r0, [fp, #-12]
   211e0:	cmn	r0, #1
   211e4:	bne	2121c <__assert_fail@plt+0xfe54>
   211e8:	b	21204 <__assert_fail@plt+0xfe3c>
   211ec:	ldr	r0, [fp, #-16]
   211f0:	add	r0, r0, #0
   211f4:	movw	r1, #0
   211f8:	cmp	r1, r0
   211fc:	bcc	21250 <__assert_fail@plt+0xfe88>
   21200:	b	21268 <__assert_fail@plt+0xfea0>
   21204:	ldr	r0, [fp, #-16]
   21208:	sub	r0, r0, #1
   2120c:	mvn	r1, #0
   21210:	cmp	r1, r0
   21214:	bcc	21250 <__assert_fail@plt+0xfe88>
   21218:	b	21268 <__assert_fail@plt+0xfea0>
   2121c:	ldr	r0, [fp, #-12]
   21220:	movw	r1, #0
   21224:	udiv	r0, r1, r0
   21228:	ldr	r1, [fp, #-16]
   2122c:	cmp	r0, r1
   21230:	bcc	21250 <__assert_fail@plt+0xfe88>
   21234:	b	21268 <__assert_fail@plt+0xfea0>
   21238:	ldr	r0, [fp, #-16]
   2123c:	movw	r1, #255	; 0xff
   21240:	udiv	r0, r1, r0
   21244:	ldr	r1, [fp, #-12]
   21248:	cmp	r0, r1
   2124c:	bcs	21268 <__assert_fail@plt+0xfea0>
   21250:	ldr	r0, [fp, #-12]
   21254:	ldr	r1, [fp, #-16]
   21258:	mul	r0, r0, r1
   2125c:	and	r0, r0, #255	; 0xff
   21260:	str	r0, [fp, #-20]	; 0xffffffec
   21264:	b	22200 <__assert_fail@plt+0x10e38>
   21268:	ldr	r0, [fp, #-12]
   2126c:	ldr	r1, [fp, #-16]
   21270:	mul	r0, r0, r1
   21274:	and	r0, r0, #255	; 0xff
   21278:	str	r0, [fp, #-20]	; 0xffffffec
   2127c:	b	22218 <__assert_fail@plt+0x10e50>
   21280:	b	21638 <__assert_fail@plt+0x10270>
   21284:	b	21458 <__assert_fail@plt+0x10090>
   21288:	ldr	r0, [fp, #-16]
   2128c:	cmp	r0, #0
   21290:	bcs	21394 <__assert_fail@plt+0xffcc>
   21294:	ldr	r0, [fp, #-12]
   21298:	cmp	r0, #0
   2129c:	bcs	21324 <__assert_fail@plt+0xff5c>
   212a0:	b	212c0 <__assert_fail@plt+0xfef8>
   212a4:	ldr	r0, [fp, #-12]
   212a8:	ldr	r1, [fp, #-16]
   212ac:	movw	r2, #32767	; 0x7fff
   212b0:	udiv	r1, r2, r1
   212b4:	cmp	r0, r1
   212b8:	bcc	21428 <__assert_fail@plt+0x10060>
   212bc:	b	21440 <__assert_fail@plt+0x10078>
   212c0:	b	212d4 <__assert_fail@plt+0xff0c>
   212c4:	ldr	r0, [fp, #-16]
   212c8:	cmp	r0, #1
   212cc:	bcc	212e4 <__assert_fail@plt+0xff1c>
   212d0:	b	212f0 <__assert_fail@plt+0xff28>
   212d4:	ldr	r0, [fp, #-16]
   212d8:	movw	r1, #0
   212dc:	cmp	r1, r0
   212e0:	bcs	212f0 <__assert_fail@plt+0xff28>
   212e4:	movw	r0, #0
   212e8:	str	r0, [fp, #-32]	; 0xffffffe0
   212ec:	b	21308 <__assert_fail@plt+0xff40>
   212f0:	ldr	r0, [fp, #-16]
   212f4:	movw	r1, #0
   212f8:	sub	r0, r1, r0
   212fc:	movw	r1, #32767	; 0x7fff
   21300:	udiv	r0, r1, r0
   21304:	str	r0, [fp, #-32]	; 0xffffffe0
   21308:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2130c:	ldr	r1, [fp, #-12]
   21310:	mvn	r2, #0
   21314:	sub	r1, r2, r1
   21318:	cmp	r0, r1
   2131c:	bls	21428 <__assert_fail@plt+0x10060>
   21320:	b	21440 <__assert_fail@plt+0x10078>
   21324:	ldr	r0, [fp, #-16]
   21328:	cmn	r0, #1
   2132c:	bne	21378 <__assert_fail@plt+0xffb0>
   21330:	b	21350 <__assert_fail@plt+0xff88>
   21334:	ldr	r0, [pc, #3840]	; 2223c <__assert_fail@plt+0x10e74>
   21338:	ldr	r1, [fp, #-12]
   2133c:	add	r0, r1, r0
   21340:	movw	r1, #0
   21344:	cmp	r1, r0
   21348:	bcc	21428 <__assert_fail@plt+0x10060>
   2134c:	b	21440 <__assert_fail@plt+0x10078>
   21350:	ldr	r0, [fp, #-12]
   21354:	movw	r1, #0
   21358:	cmp	r1, r0
   2135c:	bcs	21440 <__assert_fail@plt+0x10078>
   21360:	ldr	r0, [fp, #-12]
   21364:	sub	r0, r0, #1
   21368:	movw	r1, #32767	; 0x7fff
   2136c:	cmp	r1, r0
   21370:	bcc	21428 <__assert_fail@plt+0x10060>
   21374:	b	21440 <__assert_fail@plt+0x10078>
   21378:	ldr	r0, [pc, #3772]	; 2223c <__assert_fail@plt+0x10e74>
   2137c:	ldr	r1, [fp, #-16]
   21380:	udiv	r0, r0, r1
   21384:	ldr	r1, [fp, #-12]
   21388:	cmp	r0, r1
   2138c:	bcc	21428 <__assert_fail@plt+0x10060>
   21390:	b	21440 <__assert_fail@plt+0x10078>
   21394:	ldr	r0, [fp, #-16]
   21398:	cmp	r0, #0
   2139c:	bne	213a4 <__assert_fail@plt+0xffdc>
   213a0:	b	21440 <__assert_fail@plt+0x10078>
   213a4:	ldr	r0, [fp, #-12]
   213a8:	cmp	r0, #0
   213ac:	bcs	21410 <__assert_fail@plt+0x10048>
   213b0:	ldr	r0, [fp, #-12]
   213b4:	cmn	r0, #1
   213b8:	bne	213f4 <__assert_fail@plt+0x1002c>
   213bc:	b	213dc <__assert_fail@plt+0x10014>
   213c0:	ldr	r0, [pc, #3700]	; 2223c <__assert_fail@plt+0x10e74>
   213c4:	ldr	r1, [fp, #-16]
   213c8:	add	r0, r1, r0
   213cc:	movw	r1, #0
   213d0:	cmp	r1, r0
   213d4:	bcc	21428 <__assert_fail@plt+0x10060>
   213d8:	b	21440 <__assert_fail@plt+0x10078>
   213dc:	ldr	r0, [fp, #-16]
   213e0:	sub	r0, r0, #1
   213e4:	movw	r1, #32767	; 0x7fff
   213e8:	cmp	r1, r0
   213ec:	bcc	21428 <__assert_fail@plt+0x10060>
   213f0:	b	21440 <__assert_fail@plt+0x10078>
   213f4:	ldr	r0, [pc, #3648]	; 2223c <__assert_fail@plt+0x10e74>
   213f8:	ldr	r1, [fp, #-12]
   213fc:	udiv	r0, r0, r1
   21400:	ldr	r1, [fp, #-16]
   21404:	cmp	r0, r1
   21408:	bcc	21428 <__assert_fail@plt+0x10060>
   2140c:	b	21440 <__assert_fail@plt+0x10078>
   21410:	ldr	r0, [fp, #-16]
   21414:	movw	r1, #32767	; 0x7fff
   21418:	udiv	r0, r1, r0
   2141c:	ldr	r1, [fp, #-12]
   21420:	cmp	r0, r1
   21424:	bcs	21440 <__assert_fail@plt+0x10078>
   21428:	ldr	r0, [fp, #-12]
   2142c:	ldr	r1, [fp, #-16]
   21430:	mul	r0, r0, r1
   21434:	sxth	r0, r0
   21438:	str	r0, [fp, #-20]	; 0xffffffec
   2143c:	b	22200 <__assert_fail@plt+0x10e38>
   21440:	ldr	r0, [fp, #-12]
   21444:	ldr	r1, [fp, #-16]
   21448:	mul	r0, r0, r1
   2144c:	sxth	r0, r0
   21450:	str	r0, [fp, #-20]	; 0xffffffec
   21454:	b	22218 <__assert_fail@plt+0x10e50>
   21458:	ldr	r0, [fp, #-16]
   2145c:	cmp	r0, #0
   21460:	bcs	2156c <__assert_fail@plt+0x101a4>
   21464:	ldr	r0, [fp, #-12]
   21468:	cmp	r0, #0
   2146c:	bcs	214f4 <__assert_fail@plt+0x1012c>
   21470:	b	21490 <__assert_fail@plt+0x100c8>
   21474:	ldr	r0, [fp, #-12]
   21478:	ldr	r1, [fp, #-16]
   2147c:	movw	r2, #65535	; 0xffff
   21480:	udiv	r1, r2, r1
   21484:	cmp	r0, r1
   21488:	bcc	21608 <__assert_fail@plt+0x10240>
   2148c:	b	21620 <__assert_fail@plt+0x10258>
   21490:	b	214a4 <__assert_fail@plt+0x100dc>
   21494:	ldr	r0, [fp, #-16]
   21498:	cmp	r0, #1
   2149c:	bcc	214b4 <__assert_fail@plt+0x100ec>
   214a0:	b	214c0 <__assert_fail@plt+0x100f8>
   214a4:	ldr	r0, [fp, #-16]
   214a8:	movw	r1, #0
   214ac:	cmp	r1, r0
   214b0:	bcs	214c0 <__assert_fail@plt+0x100f8>
   214b4:	movw	r0, #0
   214b8:	str	r0, [fp, #-36]	; 0xffffffdc
   214bc:	b	214d8 <__assert_fail@plt+0x10110>
   214c0:	ldr	r0, [fp, #-16]
   214c4:	movw	r1, #0
   214c8:	sub	r0, r1, r0
   214cc:	movw	r1, #65535	; 0xffff
   214d0:	udiv	r0, r1, r0
   214d4:	str	r0, [fp, #-36]	; 0xffffffdc
   214d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   214dc:	ldr	r1, [fp, #-12]
   214e0:	mvn	r2, #0
   214e4:	sub	r1, r2, r1
   214e8:	cmp	r0, r1
   214ec:	bls	21608 <__assert_fail@plt+0x10240>
   214f0:	b	21620 <__assert_fail@plt+0x10258>
   214f4:	b	214fc <__assert_fail@plt+0x10134>
   214f8:	b	21500 <__assert_fail@plt+0x10138>
   214fc:	b	21550 <__assert_fail@plt+0x10188>
   21500:	ldr	r0, [fp, #-16]
   21504:	cmn	r0, #1
   21508:	bne	21550 <__assert_fail@plt+0x10188>
   2150c:	b	21528 <__assert_fail@plt+0x10160>
   21510:	ldr	r0, [fp, #-12]
   21514:	add	r0, r0, #0
   21518:	movw	r1, #0
   2151c:	cmp	r1, r0
   21520:	bcc	21608 <__assert_fail@plt+0x10240>
   21524:	b	21620 <__assert_fail@plt+0x10258>
   21528:	ldr	r0, [fp, #-12]
   2152c:	movw	r1, #0
   21530:	cmp	r1, r0
   21534:	bcs	21620 <__assert_fail@plt+0x10258>
   21538:	ldr	r0, [fp, #-12]
   2153c:	sub	r0, r0, #1
   21540:	mvn	r1, #0
   21544:	cmp	r1, r0
   21548:	bcc	21608 <__assert_fail@plt+0x10240>
   2154c:	b	21620 <__assert_fail@plt+0x10258>
   21550:	ldr	r0, [fp, #-16]
   21554:	movw	r1, #0
   21558:	udiv	r0, r1, r0
   2155c:	ldr	r1, [fp, #-12]
   21560:	cmp	r0, r1
   21564:	bcc	21608 <__assert_fail@plt+0x10240>
   21568:	b	21620 <__assert_fail@plt+0x10258>
   2156c:	ldr	r0, [fp, #-16]
   21570:	cmp	r0, #0
   21574:	bne	2157c <__assert_fail@plt+0x101b4>
   21578:	b	21620 <__assert_fail@plt+0x10258>
   2157c:	ldr	r0, [fp, #-12]
   21580:	cmp	r0, #0
   21584:	bcs	215f0 <__assert_fail@plt+0x10228>
   21588:	b	21590 <__assert_fail@plt+0x101c8>
   2158c:	b	21594 <__assert_fail@plt+0x101cc>
   21590:	b	215d4 <__assert_fail@plt+0x1020c>
   21594:	ldr	r0, [fp, #-12]
   21598:	cmn	r0, #1
   2159c:	bne	215d4 <__assert_fail@plt+0x1020c>
   215a0:	b	215bc <__assert_fail@plt+0x101f4>
   215a4:	ldr	r0, [fp, #-16]
   215a8:	add	r0, r0, #0
   215ac:	movw	r1, #0
   215b0:	cmp	r1, r0
   215b4:	bcc	21608 <__assert_fail@plt+0x10240>
   215b8:	b	21620 <__assert_fail@plt+0x10258>
   215bc:	ldr	r0, [fp, #-16]
   215c0:	sub	r0, r0, #1
   215c4:	mvn	r1, #0
   215c8:	cmp	r1, r0
   215cc:	bcc	21608 <__assert_fail@plt+0x10240>
   215d0:	b	21620 <__assert_fail@plt+0x10258>
   215d4:	ldr	r0, [fp, #-12]
   215d8:	movw	r1, #0
   215dc:	udiv	r0, r1, r0
   215e0:	ldr	r1, [fp, #-16]
   215e4:	cmp	r0, r1
   215e8:	bcc	21608 <__assert_fail@plt+0x10240>
   215ec:	b	21620 <__assert_fail@plt+0x10258>
   215f0:	ldr	r0, [fp, #-16]
   215f4:	movw	r1, #65535	; 0xffff
   215f8:	udiv	r0, r1, r0
   215fc:	ldr	r1, [fp, #-12]
   21600:	cmp	r0, r1
   21604:	bcs	21620 <__assert_fail@plt+0x10258>
   21608:	ldr	r0, [fp, #-12]
   2160c:	ldr	r1, [fp, #-16]
   21610:	mul	r0, r0, r1
   21614:	uxth	r0, r0
   21618:	str	r0, [fp, #-20]	; 0xffffffec
   2161c:	b	22200 <__assert_fail@plt+0x10e38>
   21620:	ldr	r0, [fp, #-12]
   21624:	ldr	r1, [fp, #-16]
   21628:	mul	r0, r0, r1
   2162c:	uxth	r0, r0
   21630:	str	r0, [fp, #-20]	; 0xffffffec
   21634:	b	22218 <__assert_fail@plt+0x10e50>
   21638:	b	2163c <__assert_fail@plt+0x10274>
   2163c:	b	21800 <__assert_fail@plt+0x10438>
   21640:	ldr	r0, [fp, #-16]
   21644:	cmp	r0, #0
   21648:	bcs	21748 <__assert_fail@plt+0x10380>
   2164c:	ldr	r0, [fp, #-12]
   21650:	cmp	r0, #0
   21654:	bcs	216dc <__assert_fail@plt+0x10314>
   21658:	b	21678 <__assert_fail@plt+0x102b0>
   2165c:	ldr	r0, [pc, #3024]	; 22234 <__assert_fail@plt+0x10e6c>
   21660:	ldr	r1, [fp, #-12]
   21664:	ldr	r2, [fp, #-16]
   21668:	udiv	r0, r0, r2
   2166c:	cmp	r1, r0
   21670:	bcc	217d8 <__assert_fail@plt+0x10410>
   21674:	b	217ec <__assert_fail@plt+0x10424>
   21678:	b	2168c <__assert_fail@plt+0x102c4>
   2167c:	ldr	r0, [fp, #-16]
   21680:	cmp	r0, #1
   21684:	bcc	2169c <__assert_fail@plt+0x102d4>
   21688:	b	216a8 <__assert_fail@plt+0x102e0>
   2168c:	ldr	r0, [fp, #-16]
   21690:	movw	r1, #0
   21694:	cmp	r1, r0
   21698:	bcs	216a8 <__assert_fail@plt+0x102e0>
   2169c:	movw	r0, #0
   216a0:	str	r0, [fp, #-40]	; 0xffffffd8
   216a4:	b	216c0 <__assert_fail@plt+0x102f8>
   216a8:	ldr	r0, [pc, #2948]	; 22234 <__assert_fail@plt+0x10e6c>
   216ac:	ldr	r1, [fp, #-16]
   216b0:	movw	r2, #0
   216b4:	sub	r1, r2, r1
   216b8:	udiv	r0, r0, r1
   216bc:	str	r0, [fp, #-40]	; 0xffffffd8
   216c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   216c4:	ldr	r1, [fp, #-12]
   216c8:	mvn	r2, #0
   216cc:	sub	r1, r2, r1
   216d0:	cmp	r0, r1
   216d4:	bls	217d8 <__assert_fail@plt+0x10410>
   216d8:	b	217ec <__assert_fail@plt+0x10424>
   216dc:	ldr	r0, [fp, #-16]
   216e0:	cmn	r0, #1
   216e4:	bne	2172c <__assert_fail@plt+0x10364>
   216e8:	b	21704 <__assert_fail@plt+0x1033c>
   216ec:	ldr	r0, [fp, #-12]
   216f0:	add	r0, r0, #-2147483648	; 0x80000000
   216f4:	movw	r1, #0
   216f8:	cmp	r1, r0
   216fc:	bcc	217d8 <__assert_fail@plt+0x10410>
   21700:	b	217ec <__assert_fail@plt+0x10424>
   21704:	ldr	r0, [fp, #-12]
   21708:	movw	r1, #0
   2170c:	cmp	r1, r0
   21710:	bcs	217ec <__assert_fail@plt+0x10424>
   21714:	ldr	r0, [pc, #2840]	; 22234 <__assert_fail@plt+0x10e6c>
   21718:	ldr	r1, [fp, #-12]
   2171c:	sub	r1, r1, #1
   21720:	cmp	r0, r1
   21724:	bcc	217d8 <__assert_fail@plt+0x10410>
   21728:	b	217ec <__assert_fail@plt+0x10424>
   2172c:	ldr	r0, [pc, #2820]	; 22238 <__assert_fail@plt+0x10e70>
   21730:	ldr	r1, [fp, #-16]
   21734:	udiv	r0, r0, r1
   21738:	ldr	r1, [fp, #-12]
   2173c:	cmp	r0, r1
   21740:	bcc	217d8 <__assert_fail@plt+0x10410>
   21744:	b	217ec <__assert_fail@plt+0x10424>
   21748:	ldr	r0, [fp, #-16]
   2174c:	cmp	r0, #0
   21750:	bne	21758 <__assert_fail@plt+0x10390>
   21754:	b	217ec <__assert_fail@plt+0x10424>
   21758:	ldr	r0, [fp, #-12]
   2175c:	cmp	r0, #0
   21760:	bcs	217c0 <__assert_fail@plt+0x103f8>
   21764:	ldr	r0, [fp, #-12]
   21768:	cmn	r0, #1
   2176c:	bne	217a4 <__assert_fail@plt+0x103dc>
   21770:	b	2178c <__assert_fail@plt+0x103c4>
   21774:	ldr	r0, [fp, #-16]
   21778:	add	r0, r0, #-2147483648	; 0x80000000
   2177c:	movw	r1, #0
   21780:	cmp	r1, r0
   21784:	bcc	217d8 <__assert_fail@plt+0x10410>
   21788:	b	217ec <__assert_fail@plt+0x10424>
   2178c:	ldr	r0, [pc, #2720]	; 22234 <__assert_fail@plt+0x10e6c>
   21790:	ldr	r1, [fp, #-16]
   21794:	sub	r1, r1, #1
   21798:	cmp	r0, r1
   2179c:	bcc	217d8 <__assert_fail@plt+0x10410>
   217a0:	b	217ec <__assert_fail@plt+0x10424>
   217a4:	ldr	r0, [pc, #2700]	; 22238 <__assert_fail@plt+0x10e70>
   217a8:	ldr	r1, [fp, #-12]
   217ac:	udiv	r0, r0, r1
   217b0:	ldr	r1, [fp, #-16]
   217b4:	cmp	r0, r1
   217b8:	bcc	217d8 <__assert_fail@plt+0x10410>
   217bc:	b	217ec <__assert_fail@plt+0x10424>
   217c0:	ldr	r0, [pc, #2668]	; 22234 <__assert_fail@plt+0x10e6c>
   217c4:	ldr	r1, [fp, #-16]
   217c8:	udiv	r0, r0, r1
   217cc:	ldr	r1, [fp, #-12]
   217d0:	cmp	r0, r1
   217d4:	bcs	217ec <__assert_fail@plt+0x10424>
   217d8:	ldr	r0, [fp, #-12]
   217dc:	ldr	r1, [fp, #-16]
   217e0:	mul	r0, r0, r1
   217e4:	str	r0, [fp, #-20]	; 0xffffffec
   217e8:	b	22200 <__assert_fail@plt+0x10e38>
   217ec:	ldr	r0, [fp, #-12]
   217f0:	ldr	r1, [fp, #-16]
   217f4:	mul	r0, r0, r1
   217f8:	str	r0, [fp, #-20]	; 0xffffffec
   217fc:	b	22218 <__assert_fail@plt+0x10e50>
   21800:	ldr	r0, [fp, #-16]
   21804:	cmp	r0, #0
   21808:	bcs	21914 <__assert_fail@plt+0x1054c>
   2180c:	ldr	r0, [fp, #-12]
   21810:	cmp	r0, #0
   21814:	bcs	2189c <__assert_fail@plt+0x104d4>
   21818:	b	21838 <__assert_fail@plt+0x10470>
   2181c:	ldr	r0, [fp, #-12]
   21820:	ldr	r1, [fp, #-16]
   21824:	mvn	r2, #0
   21828:	udiv	r1, r2, r1
   2182c:	cmp	r0, r1
   21830:	bcc	219b0 <__assert_fail@plt+0x105e8>
   21834:	b	219c4 <__assert_fail@plt+0x105fc>
   21838:	b	2184c <__assert_fail@plt+0x10484>
   2183c:	ldr	r0, [fp, #-16]
   21840:	cmp	r0, #1
   21844:	bcc	2185c <__assert_fail@plt+0x10494>
   21848:	b	21868 <__assert_fail@plt+0x104a0>
   2184c:	ldr	r0, [fp, #-16]
   21850:	movw	r1, #0
   21854:	cmp	r1, r0
   21858:	bcs	21868 <__assert_fail@plt+0x104a0>
   2185c:	movw	r0, #1
   21860:	str	r0, [fp, #-44]	; 0xffffffd4
   21864:	b	21880 <__assert_fail@plt+0x104b8>
   21868:	ldr	r0, [fp, #-16]
   2186c:	movw	r1, #0
   21870:	sub	r0, r1, r0
   21874:	mvn	r1, #0
   21878:	udiv	r0, r1, r0
   2187c:	str	r0, [fp, #-44]	; 0xffffffd4
   21880:	ldr	r0, [fp, #-44]	; 0xffffffd4
   21884:	ldr	r1, [fp, #-12]
   21888:	mvn	r2, #0
   2188c:	sub	r1, r2, r1
   21890:	cmp	r0, r1
   21894:	bls	219b0 <__assert_fail@plt+0x105e8>
   21898:	b	219c4 <__assert_fail@plt+0x105fc>
   2189c:	b	218a4 <__assert_fail@plt+0x104dc>
   218a0:	b	218a8 <__assert_fail@plt+0x104e0>
   218a4:	b	218f8 <__assert_fail@plt+0x10530>
   218a8:	ldr	r0, [fp, #-16]
   218ac:	cmn	r0, #1
   218b0:	bne	218f8 <__assert_fail@plt+0x10530>
   218b4:	b	218d0 <__assert_fail@plt+0x10508>
   218b8:	ldr	r0, [fp, #-12]
   218bc:	add	r0, r0, #0
   218c0:	movw	r1, #0
   218c4:	cmp	r1, r0
   218c8:	bcc	219b0 <__assert_fail@plt+0x105e8>
   218cc:	b	219c4 <__assert_fail@plt+0x105fc>
   218d0:	ldr	r0, [fp, #-12]
   218d4:	movw	r1, #0
   218d8:	cmp	r1, r0
   218dc:	bcs	219c4 <__assert_fail@plt+0x105fc>
   218e0:	ldr	r0, [fp, #-12]
   218e4:	sub	r0, r0, #1
   218e8:	mvn	r1, #0
   218ec:	cmp	r1, r0
   218f0:	bcc	219b0 <__assert_fail@plt+0x105e8>
   218f4:	b	219c4 <__assert_fail@plt+0x105fc>
   218f8:	ldr	r0, [fp, #-16]
   218fc:	movw	r1, #0
   21900:	udiv	r0, r1, r0
   21904:	ldr	r1, [fp, #-12]
   21908:	cmp	r0, r1
   2190c:	bcc	219b0 <__assert_fail@plt+0x105e8>
   21910:	b	219c4 <__assert_fail@plt+0x105fc>
   21914:	ldr	r0, [fp, #-16]
   21918:	cmp	r0, #0
   2191c:	bne	21924 <__assert_fail@plt+0x1055c>
   21920:	b	219c4 <__assert_fail@plt+0x105fc>
   21924:	ldr	r0, [fp, #-12]
   21928:	cmp	r0, #0
   2192c:	bcs	21998 <__assert_fail@plt+0x105d0>
   21930:	b	21938 <__assert_fail@plt+0x10570>
   21934:	b	2193c <__assert_fail@plt+0x10574>
   21938:	b	2197c <__assert_fail@plt+0x105b4>
   2193c:	ldr	r0, [fp, #-12]
   21940:	cmn	r0, #1
   21944:	bne	2197c <__assert_fail@plt+0x105b4>
   21948:	b	21964 <__assert_fail@plt+0x1059c>
   2194c:	ldr	r0, [fp, #-16]
   21950:	add	r0, r0, #0
   21954:	movw	r1, #0
   21958:	cmp	r1, r0
   2195c:	bcc	219b0 <__assert_fail@plt+0x105e8>
   21960:	b	219c4 <__assert_fail@plt+0x105fc>
   21964:	ldr	r0, [fp, #-16]
   21968:	sub	r0, r0, #1
   2196c:	mvn	r1, #0
   21970:	cmp	r1, r0
   21974:	bcc	219b0 <__assert_fail@plt+0x105e8>
   21978:	b	219c4 <__assert_fail@plt+0x105fc>
   2197c:	ldr	r0, [fp, #-12]
   21980:	movw	r1, #0
   21984:	udiv	r0, r1, r0
   21988:	ldr	r1, [fp, #-16]
   2198c:	cmp	r0, r1
   21990:	bcc	219b0 <__assert_fail@plt+0x105e8>
   21994:	b	219c4 <__assert_fail@plt+0x105fc>
   21998:	ldr	r0, [fp, #-16]
   2199c:	mvn	r1, #0
   219a0:	udiv	r0, r1, r0
   219a4:	ldr	r1, [fp, #-12]
   219a8:	cmp	r0, r1
   219ac:	bcs	219c4 <__assert_fail@plt+0x105fc>
   219b0:	ldr	r0, [fp, #-12]
   219b4:	ldr	r1, [fp, #-16]
   219b8:	mul	r0, r0, r1
   219bc:	str	r0, [fp, #-20]	; 0xffffffec
   219c0:	b	22200 <__assert_fail@plt+0x10e38>
   219c4:	ldr	r0, [fp, #-12]
   219c8:	ldr	r1, [fp, #-16]
   219cc:	mul	r0, r0, r1
   219d0:	str	r0, [fp, #-20]	; 0xffffffec
   219d4:	b	22218 <__assert_fail@plt+0x10e50>
   219d8:	b	219dc <__assert_fail@plt+0x10614>
   219dc:	b	21ba0 <__assert_fail@plt+0x107d8>
   219e0:	ldr	r0, [fp, #-16]
   219e4:	cmp	r0, #0
   219e8:	bcs	21ae8 <__assert_fail@plt+0x10720>
   219ec:	ldr	r0, [fp, #-12]
   219f0:	cmp	r0, #0
   219f4:	bcs	21a7c <__assert_fail@plt+0x106b4>
   219f8:	b	21a18 <__assert_fail@plt+0x10650>
   219fc:	ldr	r0, [pc, #2096]	; 22234 <__assert_fail@plt+0x10e6c>
   21a00:	ldr	r1, [fp, #-12]
   21a04:	ldr	r2, [fp, #-16]
   21a08:	udiv	r0, r0, r2
   21a0c:	cmp	r1, r0
   21a10:	bcc	21b78 <__assert_fail@plt+0x107b0>
   21a14:	b	21b8c <__assert_fail@plt+0x107c4>
   21a18:	b	21a2c <__assert_fail@plt+0x10664>
   21a1c:	ldr	r0, [fp, #-16]
   21a20:	cmp	r0, #1
   21a24:	bcc	21a3c <__assert_fail@plt+0x10674>
   21a28:	b	21a48 <__assert_fail@plt+0x10680>
   21a2c:	ldr	r0, [fp, #-16]
   21a30:	movw	r1, #0
   21a34:	cmp	r1, r0
   21a38:	bcs	21a48 <__assert_fail@plt+0x10680>
   21a3c:	movw	r0, #0
   21a40:	str	r0, [fp, #-48]	; 0xffffffd0
   21a44:	b	21a60 <__assert_fail@plt+0x10698>
   21a48:	ldr	r0, [pc, #2020]	; 22234 <__assert_fail@plt+0x10e6c>
   21a4c:	ldr	r1, [fp, #-16]
   21a50:	movw	r2, #0
   21a54:	sub	r1, r2, r1
   21a58:	udiv	r0, r0, r1
   21a5c:	str	r0, [fp, #-48]	; 0xffffffd0
   21a60:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21a64:	ldr	r1, [fp, #-12]
   21a68:	mvn	r2, #0
   21a6c:	sub	r1, r2, r1
   21a70:	cmp	r0, r1
   21a74:	bls	21b78 <__assert_fail@plt+0x107b0>
   21a78:	b	21b8c <__assert_fail@plt+0x107c4>
   21a7c:	ldr	r0, [fp, #-16]
   21a80:	cmn	r0, #1
   21a84:	bne	21acc <__assert_fail@plt+0x10704>
   21a88:	b	21aa4 <__assert_fail@plt+0x106dc>
   21a8c:	ldr	r0, [fp, #-12]
   21a90:	add	r0, r0, #-2147483648	; 0x80000000
   21a94:	movw	r1, #0
   21a98:	cmp	r1, r0
   21a9c:	bcc	21b78 <__assert_fail@plt+0x107b0>
   21aa0:	b	21b8c <__assert_fail@plt+0x107c4>
   21aa4:	ldr	r0, [fp, #-12]
   21aa8:	movw	r1, #0
   21aac:	cmp	r1, r0
   21ab0:	bcs	21b8c <__assert_fail@plt+0x107c4>
   21ab4:	ldr	r0, [pc, #1912]	; 22234 <__assert_fail@plt+0x10e6c>
   21ab8:	ldr	r1, [fp, #-12]
   21abc:	sub	r1, r1, #1
   21ac0:	cmp	r0, r1
   21ac4:	bcc	21b78 <__assert_fail@plt+0x107b0>
   21ac8:	b	21b8c <__assert_fail@plt+0x107c4>
   21acc:	ldr	r0, [pc, #1892]	; 22238 <__assert_fail@plt+0x10e70>
   21ad0:	ldr	r1, [fp, #-16]
   21ad4:	udiv	r0, r0, r1
   21ad8:	ldr	r1, [fp, #-12]
   21adc:	cmp	r0, r1
   21ae0:	bcc	21b78 <__assert_fail@plt+0x107b0>
   21ae4:	b	21b8c <__assert_fail@plt+0x107c4>
   21ae8:	ldr	r0, [fp, #-16]
   21aec:	cmp	r0, #0
   21af0:	bne	21af8 <__assert_fail@plt+0x10730>
   21af4:	b	21b8c <__assert_fail@plt+0x107c4>
   21af8:	ldr	r0, [fp, #-12]
   21afc:	cmp	r0, #0
   21b00:	bcs	21b60 <__assert_fail@plt+0x10798>
   21b04:	ldr	r0, [fp, #-12]
   21b08:	cmn	r0, #1
   21b0c:	bne	21b44 <__assert_fail@plt+0x1077c>
   21b10:	b	21b2c <__assert_fail@plt+0x10764>
   21b14:	ldr	r0, [fp, #-16]
   21b18:	add	r0, r0, #-2147483648	; 0x80000000
   21b1c:	movw	r1, #0
   21b20:	cmp	r1, r0
   21b24:	bcc	21b78 <__assert_fail@plt+0x107b0>
   21b28:	b	21b8c <__assert_fail@plt+0x107c4>
   21b2c:	ldr	r0, [pc, #1792]	; 22234 <__assert_fail@plt+0x10e6c>
   21b30:	ldr	r1, [fp, #-16]
   21b34:	sub	r1, r1, #1
   21b38:	cmp	r0, r1
   21b3c:	bcc	21b78 <__assert_fail@plt+0x107b0>
   21b40:	b	21b8c <__assert_fail@plt+0x107c4>
   21b44:	ldr	r0, [pc, #1772]	; 22238 <__assert_fail@plt+0x10e70>
   21b48:	ldr	r1, [fp, #-12]
   21b4c:	udiv	r0, r0, r1
   21b50:	ldr	r1, [fp, #-16]
   21b54:	cmp	r0, r1
   21b58:	bcc	21b78 <__assert_fail@plt+0x107b0>
   21b5c:	b	21b8c <__assert_fail@plt+0x107c4>
   21b60:	ldr	r0, [pc, #1740]	; 22234 <__assert_fail@plt+0x10e6c>
   21b64:	ldr	r1, [fp, #-16]
   21b68:	udiv	r0, r0, r1
   21b6c:	ldr	r1, [fp, #-12]
   21b70:	cmp	r0, r1
   21b74:	bcs	21b8c <__assert_fail@plt+0x107c4>
   21b78:	ldr	r0, [fp, #-12]
   21b7c:	ldr	r1, [fp, #-16]
   21b80:	mul	r0, r0, r1
   21b84:	str	r0, [fp, #-20]	; 0xffffffec
   21b88:	b	22200 <__assert_fail@plt+0x10e38>
   21b8c:	ldr	r0, [fp, #-12]
   21b90:	ldr	r1, [fp, #-16]
   21b94:	mul	r0, r0, r1
   21b98:	str	r0, [fp, #-20]	; 0xffffffec
   21b9c:	b	22218 <__assert_fail@plt+0x10e50>
   21ba0:	ldr	r0, [fp, #-16]
   21ba4:	cmp	r0, #0
   21ba8:	bcs	21cb4 <__assert_fail@plt+0x108ec>
   21bac:	ldr	r0, [fp, #-12]
   21bb0:	cmp	r0, #0
   21bb4:	bcs	21c3c <__assert_fail@plt+0x10874>
   21bb8:	b	21bd8 <__assert_fail@plt+0x10810>
   21bbc:	ldr	r0, [fp, #-12]
   21bc0:	ldr	r1, [fp, #-16]
   21bc4:	mvn	r2, #0
   21bc8:	udiv	r1, r2, r1
   21bcc:	cmp	r0, r1
   21bd0:	bcc	21d50 <__assert_fail@plt+0x10988>
   21bd4:	b	21d64 <__assert_fail@plt+0x1099c>
   21bd8:	b	21bec <__assert_fail@plt+0x10824>
   21bdc:	ldr	r0, [fp, #-16]
   21be0:	cmp	r0, #1
   21be4:	bcc	21bfc <__assert_fail@plt+0x10834>
   21be8:	b	21c08 <__assert_fail@plt+0x10840>
   21bec:	ldr	r0, [fp, #-16]
   21bf0:	movw	r1, #0
   21bf4:	cmp	r1, r0
   21bf8:	bcs	21c08 <__assert_fail@plt+0x10840>
   21bfc:	movw	r0, #1
   21c00:	str	r0, [fp, #-52]	; 0xffffffcc
   21c04:	b	21c20 <__assert_fail@plt+0x10858>
   21c08:	ldr	r0, [fp, #-16]
   21c0c:	movw	r1, #0
   21c10:	sub	r0, r1, r0
   21c14:	mvn	r1, #0
   21c18:	udiv	r0, r1, r0
   21c1c:	str	r0, [fp, #-52]	; 0xffffffcc
   21c20:	ldr	r0, [fp, #-52]	; 0xffffffcc
   21c24:	ldr	r1, [fp, #-12]
   21c28:	mvn	r2, #0
   21c2c:	sub	r1, r2, r1
   21c30:	cmp	r0, r1
   21c34:	bls	21d50 <__assert_fail@plt+0x10988>
   21c38:	b	21d64 <__assert_fail@plt+0x1099c>
   21c3c:	b	21c44 <__assert_fail@plt+0x1087c>
   21c40:	b	21c48 <__assert_fail@plt+0x10880>
   21c44:	b	21c98 <__assert_fail@plt+0x108d0>
   21c48:	ldr	r0, [fp, #-16]
   21c4c:	cmn	r0, #1
   21c50:	bne	21c98 <__assert_fail@plt+0x108d0>
   21c54:	b	21c70 <__assert_fail@plt+0x108a8>
   21c58:	ldr	r0, [fp, #-12]
   21c5c:	add	r0, r0, #0
   21c60:	movw	r1, #0
   21c64:	cmp	r1, r0
   21c68:	bcc	21d50 <__assert_fail@plt+0x10988>
   21c6c:	b	21d64 <__assert_fail@plt+0x1099c>
   21c70:	ldr	r0, [fp, #-12]
   21c74:	movw	r1, #0
   21c78:	cmp	r1, r0
   21c7c:	bcs	21d64 <__assert_fail@plt+0x1099c>
   21c80:	ldr	r0, [fp, #-12]
   21c84:	sub	r0, r0, #1
   21c88:	mvn	r1, #0
   21c8c:	cmp	r1, r0
   21c90:	bcc	21d50 <__assert_fail@plt+0x10988>
   21c94:	b	21d64 <__assert_fail@plt+0x1099c>
   21c98:	ldr	r0, [fp, #-16]
   21c9c:	movw	r1, #0
   21ca0:	udiv	r0, r1, r0
   21ca4:	ldr	r1, [fp, #-12]
   21ca8:	cmp	r0, r1
   21cac:	bcc	21d50 <__assert_fail@plt+0x10988>
   21cb0:	b	21d64 <__assert_fail@plt+0x1099c>
   21cb4:	ldr	r0, [fp, #-16]
   21cb8:	cmp	r0, #0
   21cbc:	bne	21cc4 <__assert_fail@plt+0x108fc>
   21cc0:	b	21d64 <__assert_fail@plt+0x1099c>
   21cc4:	ldr	r0, [fp, #-12]
   21cc8:	cmp	r0, #0
   21ccc:	bcs	21d38 <__assert_fail@plt+0x10970>
   21cd0:	b	21cd8 <__assert_fail@plt+0x10910>
   21cd4:	b	21cdc <__assert_fail@plt+0x10914>
   21cd8:	b	21d1c <__assert_fail@plt+0x10954>
   21cdc:	ldr	r0, [fp, #-12]
   21ce0:	cmn	r0, #1
   21ce4:	bne	21d1c <__assert_fail@plt+0x10954>
   21ce8:	b	21d04 <__assert_fail@plt+0x1093c>
   21cec:	ldr	r0, [fp, #-16]
   21cf0:	add	r0, r0, #0
   21cf4:	movw	r1, #0
   21cf8:	cmp	r1, r0
   21cfc:	bcc	21d50 <__assert_fail@plt+0x10988>
   21d00:	b	21d64 <__assert_fail@plt+0x1099c>
   21d04:	ldr	r0, [fp, #-16]
   21d08:	sub	r0, r0, #1
   21d0c:	mvn	r1, #0
   21d10:	cmp	r1, r0
   21d14:	bcc	21d50 <__assert_fail@plt+0x10988>
   21d18:	b	21d64 <__assert_fail@plt+0x1099c>
   21d1c:	ldr	r0, [fp, #-12]
   21d20:	movw	r1, #0
   21d24:	udiv	r0, r1, r0
   21d28:	ldr	r1, [fp, #-16]
   21d2c:	cmp	r0, r1
   21d30:	bcc	21d50 <__assert_fail@plt+0x10988>
   21d34:	b	21d64 <__assert_fail@plt+0x1099c>
   21d38:	ldr	r0, [fp, #-16]
   21d3c:	mvn	r1, #0
   21d40:	udiv	r0, r1, r0
   21d44:	ldr	r1, [fp, #-12]
   21d48:	cmp	r0, r1
   21d4c:	bcs	21d64 <__assert_fail@plt+0x1099c>
   21d50:	ldr	r0, [fp, #-12]
   21d54:	ldr	r1, [fp, #-16]
   21d58:	mul	r0, r0, r1
   21d5c:	str	r0, [fp, #-20]	; 0xffffffec
   21d60:	b	22200 <__assert_fail@plt+0x10e38>
   21d64:	ldr	r0, [fp, #-12]
   21d68:	ldr	r1, [fp, #-16]
   21d6c:	mul	r0, r0, r1
   21d70:	str	r0, [fp, #-20]	; 0xffffffec
   21d74:	b	22218 <__assert_fail@plt+0x10e50>
   21d78:	b	21fcc <__assert_fail@plt+0x10c04>
   21d7c:	ldr	r0, [fp, #-16]
   21d80:	cmp	r0, #0
   21d84:	bcs	21ee4 <__assert_fail@plt+0x10b1c>
   21d88:	ldr	r0, [fp, #-12]
   21d8c:	cmp	r0, #0
   21d90:	bcs	21e60 <__assert_fail@plt+0x10a98>
   21d94:	b	21d98 <__assert_fail@plt+0x109d0>
   21d98:	ldr	r0, [fp, #-12]
   21d9c:	ldr	r2, [fp, #-16]
   21da0:	mvn	r1, #0
   21da4:	mvn	r3, #-2147483648	; 0x80000000
   21da8:	mov	ip, #0
   21dac:	str	r0, [fp, #-56]	; 0xffffffc8
   21db0:	mov	r0, r1
   21db4:	mov	r1, r3
   21db8:	mov	r3, ip
   21dbc:	bl	22b74 <__assert_fail@plt+0x117ac>
   21dc0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   21dc4:	subs	r0, r2, r0
   21dc8:	rscs	r1, r1, #0
   21dcc:	str	r0, [fp, #-60]	; 0xffffffc4
   21dd0:	str	r1, [fp, #-64]	; 0xffffffc0
   21dd4:	blt	21fa4 <__assert_fail@plt+0x10bdc>
   21dd8:	b	21fb8 <__assert_fail@plt+0x10bf0>
   21ddc:	b	21df0 <__assert_fail@plt+0x10a28>
   21de0:	ldr	r0, [fp, #-16]
   21de4:	cmp	r0, #1
   21de8:	bcc	21e00 <__assert_fail@plt+0x10a38>
   21dec:	b	21e14 <__assert_fail@plt+0x10a4c>
   21df0:	ldr	r0, [fp, #-16]
   21df4:	movw	r1, #0
   21df8:	cmp	r1, r0
   21dfc:	bcs	21e14 <__assert_fail@plt+0x10a4c>
   21e00:	mov	r0, #0
   21e04:	mvn	r1, #0
   21e08:	str	r1, [fp, #-68]	; 0xffffffbc
   21e0c:	str	r0, [fp, #-72]	; 0xffffffb8
   21e10:	b	21e38 <__assert_fail@plt+0x10a70>
   21e14:	ldr	r0, [fp, #-16]
   21e18:	rsb	r2, r0, #0
   21e1c:	mvn	r0, #0
   21e20:	mvn	r1, #-2147483648	; 0x80000000
   21e24:	mov	r3, #0
   21e28:	bl	22b74 <__assert_fail@plt+0x117ac>
   21e2c:	str	r0, [fp, #-68]	; 0xffffffbc
   21e30:	str	r1, [fp, #-72]	; 0xffffffb8
   21e34:	b	21e38 <__assert_fail@plt+0x10a70>
   21e38:	ldr	r0, [fp, #-72]	; 0xffffffb8
   21e3c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   21e40:	ldr	r2, [fp, #-12]
   21e44:	mvn	r2, r2
   21e48:	subs	r1, r2, r1
   21e4c:	rscs	r0, r0, #0
   21e50:	str	r1, [fp, #-76]	; 0xffffffb4
   21e54:	str	r0, [fp, #-80]	; 0xffffffb0
   21e58:	bge	21fa4 <__assert_fail@plt+0x10bdc>
   21e5c:	b	21fb8 <__assert_fail@plt+0x10bf0>
   21e60:	ldr	r0, [fp, #-16]
   21e64:	cmn	r0, #1
   21e68:	bne	21eb0 <__assert_fail@plt+0x10ae8>
   21e6c:	b	21e90 <__assert_fail@plt+0x10ac8>
   21e70:	ldr	r0, [fp, #-12]
   21e74:	rsbs	r0, r0, #0
   21e78:	mov	r1, #0
   21e7c:	sbcs	r1, r1, #-2147483648	; 0x80000000
   21e80:	str	r0, [fp, #-84]	; 0xffffffac
   21e84:	str	r1, [sp, #88]	; 0x58
   21e88:	blt	21fa4 <__assert_fail@plt+0x10bdc>
   21e8c:	b	21fb8 <__assert_fail@plt+0x10bf0>
   21e90:	ldr	r0, [fp, #-12]
   21e94:	movw	r1, #0
   21e98:	cmp	r1, r0
   21e9c:	bcs	21fb8 <__assert_fail@plt+0x10bf0>
   21ea0:	mov	r0, #0
   21ea4:	cmp	r0, #0
   21ea8:	bne	21fa4 <__assert_fail@plt+0x10bdc>
   21eac:	b	21fb8 <__assert_fail@plt+0x10bf0>
   21eb0:	ldr	r2, [fp, #-16]
   21eb4:	mov	r1, #-2147483648	; 0x80000000
   21eb8:	mov	r0, #0
   21ebc:	str	r0, [sp, #84]	; 0x54
   21ec0:	ldr	r3, [sp, #84]	; 0x54
   21ec4:	bl	22aa0 <__assert_fail@plt+0x116d8>
   21ec8:	ldr	r2, [fp, #-12]
   21ecc:	subs	r0, r0, r2
   21ed0:	sbcs	r1, r1, #0
   21ed4:	str	r0, [sp, #80]	; 0x50
   21ed8:	str	r1, [sp, #76]	; 0x4c
   21edc:	blt	21fa4 <__assert_fail@plt+0x10bdc>
   21ee0:	b	21fb8 <__assert_fail@plt+0x10bf0>
   21ee4:	ldr	r0, [fp, #-16]
   21ee8:	cmp	r0, #0
   21eec:	bne	21ef4 <__assert_fail@plt+0x10b2c>
   21ef0:	b	21fb8 <__assert_fail@plt+0x10bf0>
   21ef4:	ldr	r0, [fp, #-12]
   21ef8:	cmp	r0, #0
   21efc:	bcs	21f74 <__assert_fail@plt+0x10bac>
   21f00:	ldr	r0, [fp, #-12]
   21f04:	cmn	r0, #1
   21f08:	bne	21f40 <__assert_fail@plt+0x10b78>
   21f0c:	b	21f30 <__assert_fail@plt+0x10b68>
   21f10:	ldr	r0, [fp, #-16]
   21f14:	rsbs	r0, r0, #0
   21f18:	mov	r1, #0
   21f1c:	sbcs	r1, r1, #-2147483648	; 0x80000000
   21f20:	str	r0, [sp, #72]	; 0x48
   21f24:	str	r1, [sp, #68]	; 0x44
   21f28:	blt	21fa4 <__assert_fail@plt+0x10bdc>
   21f2c:	b	21fb8 <__assert_fail@plt+0x10bf0>
   21f30:	mov	r0, #0
   21f34:	cmp	r0, #0
   21f38:	bne	21fa4 <__assert_fail@plt+0x10bdc>
   21f3c:	b	21fb8 <__assert_fail@plt+0x10bf0>
   21f40:	ldr	r2, [fp, #-12]
   21f44:	mov	r1, #-2147483648	; 0x80000000
   21f48:	mov	r0, #0
   21f4c:	str	r0, [sp, #64]	; 0x40
   21f50:	ldr	r3, [sp, #64]	; 0x40
   21f54:	bl	22aa0 <__assert_fail@plt+0x116d8>
   21f58:	ldr	r2, [fp, #-16]
   21f5c:	subs	r0, r0, r2
   21f60:	sbcs	r1, r1, #0
   21f64:	str	r0, [sp, #60]	; 0x3c
   21f68:	str	r1, [sp, #56]	; 0x38
   21f6c:	blt	21fa4 <__assert_fail@plt+0x10bdc>
   21f70:	b	21fb8 <__assert_fail@plt+0x10bf0>
   21f74:	ldr	r2, [fp, #-16]
   21f78:	mvn	r0, #0
   21f7c:	mvn	r1, #-2147483648	; 0x80000000
   21f80:	mov	r3, #0
   21f84:	bl	22b74 <__assert_fail@plt+0x117ac>
   21f88:	ldr	r2, [fp, #-12]
   21f8c:	subs	r0, r0, r2
   21f90:	sbcs	r1, r1, #0
   21f94:	str	r0, [sp, #52]	; 0x34
   21f98:	str	r1, [sp, #48]	; 0x30
   21f9c:	bge	21fb8 <__assert_fail@plt+0x10bf0>
   21fa0:	b	21fa4 <__assert_fail@plt+0x10bdc>
   21fa4:	ldr	r0, [fp, #-12]
   21fa8:	ldr	r1, [fp, #-16]
   21fac:	mul	r0, r0, r1
   21fb0:	str	r0, [fp, #-20]	; 0xffffffec
   21fb4:	b	22200 <__assert_fail@plt+0x10e38>
   21fb8:	ldr	r0, [fp, #-12]
   21fbc:	ldr	r1, [fp, #-16]
   21fc0:	mul	r0, r0, r1
   21fc4:	str	r0, [fp, #-20]	; 0xffffffec
   21fc8:	b	22218 <__assert_fail@plt+0x10e50>
   21fcc:	ldr	r0, [fp, #-16]
   21fd0:	cmp	r0, #0
   21fd4:	bcs	22120 <__assert_fail@plt+0x10d58>
   21fd8:	ldr	r0, [fp, #-12]
   21fdc:	cmp	r0, #0
   21fe0:	bcs	220a8 <__assert_fail@plt+0x10ce0>
   21fe4:	b	22020 <__assert_fail@plt+0x10c58>
   21fe8:	ldr	r0, [fp, #-12]
   21fec:	ldr	r2, [fp, #-16]
   21ff0:	mvn	r1, #0
   21ff4:	mov	r3, #0
   21ff8:	str	r0, [sp, #44]	; 0x2c
   21ffc:	mov	r0, r1
   22000:	bl	22b74 <__assert_fail@plt+0x117ac>
   22004:	ldr	r2, [sp, #44]	; 0x2c
   22008:	subs	r0, r2, r0
   2200c:	rscs	r1, r1, #0
   22010:	str	r0, [sp, #40]	; 0x28
   22014:	str	r1, [sp, #36]	; 0x24
   22018:	bcc	221d8 <__assert_fail@plt+0x10e10>
   2201c:	b	221ec <__assert_fail@plt+0x10e24>
   22020:	b	22034 <__assert_fail@plt+0x10c6c>
   22024:	ldr	r0, [fp, #-16]
   22028:	cmp	r0, #1
   2202c:	bcc	22044 <__assert_fail@plt+0x10c7c>
   22030:	b	22058 <__assert_fail@plt+0x10c90>
   22034:	ldr	r0, [fp, #-16]
   22038:	movw	r1, #0
   2203c:	cmp	r1, r0
   22040:	bcs	22058 <__assert_fail@plt+0x10c90>
   22044:	mov	r0, #1
   22048:	mvn	r1, #0
   2204c:	str	r1, [sp, #32]
   22050:	str	r0, [sp, #28]
   22054:	b	22080 <__assert_fail@plt+0x10cb8>
   22058:	ldr	r0, [fp, #-16]
   2205c:	rsb	r2, r0, #0
   22060:	mvn	r0, #0
   22064:	mov	r3, #0
   22068:	str	r0, [sp, #24]
   2206c:	ldr	r1, [sp, #24]
   22070:	bl	22b74 <__assert_fail@plt+0x117ac>
   22074:	str	r0, [sp, #32]
   22078:	str	r1, [sp, #28]
   2207c:	b	22080 <__assert_fail@plt+0x10cb8>
   22080:	ldr	r0, [sp, #28]
   22084:	ldr	r1, [sp, #32]
   22088:	ldr	r2, [fp, #-12]
   2208c:	mvn	r2, r2
   22090:	subs	r1, r2, r1
   22094:	rscs	r0, r0, #0
   22098:	str	r1, [sp, #20]
   2209c:	str	r0, [sp, #16]
   220a0:	bcs	221d8 <__assert_fail@plt+0x10e10>
   220a4:	b	221ec <__assert_fail@plt+0x10e24>
   220a8:	b	220b0 <__assert_fail@plt+0x10ce8>
   220ac:	b	220b4 <__assert_fail@plt+0x10cec>
   220b0:	b	22104 <__assert_fail@plt+0x10d3c>
   220b4:	ldr	r0, [fp, #-16]
   220b8:	cmn	r0, #1
   220bc:	bne	22104 <__assert_fail@plt+0x10d3c>
   220c0:	b	220dc <__assert_fail@plt+0x10d14>
   220c4:	ldr	r0, [fp, #-12]
   220c8:	add	r0, r0, #0
   220cc:	movw	r1, #0
   220d0:	cmp	r1, r0
   220d4:	bcc	221d8 <__assert_fail@plt+0x10e10>
   220d8:	b	221ec <__assert_fail@plt+0x10e24>
   220dc:	ldr	r0, [fp, #-12]
   220e0:	movw	r1, #0
   220e4:	cmp	r1, r0
   220e8:	bcs	221ec <__assert_fail@plt+0x10e24>
   220ec:	ldr	r0, [fp, #-12]
   220f0:	sub	r0, r0, #1
   220f4:	mvn	r1, #0
   220f8:	cmp	r1, r0
   220fc:	bcc	221d8 <__assert_fail@plt+0x10e10>
   22100:	b	221ec <__assert_fail@plt+0x10e24>
   22104:	ldr	r0, [fp, #-16]
   22108:	movw	r1, #0
   2210c:	udiv	r0, r1, r0
   22110:	ldr	r1, [fp, #-12]
   22114:	cmp	r0, r1
   22118:	bcc	221d8 <__assert_fail@plt+0x10e10>
   2211c:	b	221ec <__assert_fail@plt+0x10e24>
   22120:	ldr	r0, [fp, #-16]
   22124:	cmp	r0, #0
   22128:	bne	22130 <__assert_fail@plt+0x10d68>
   2212c:	b	221ec <__assert_fail@plt+0x10e24>
   22130:	ldr	r0, [fp, #-12]
   22134:	cmp	r0, #0
   22138:	bcs	221a4 <__assert_fail@plt+0x10ddc>
   2213c:	b	22144 <__assert_fail@plt+0x10d7c>
   22140:	b	22148 <__assert_fail@plt+0x10d80>
   22144:	b	22188 <__assert_fail@plt+0x10dc0>
   22148:	ldr	r0, [fp, #-12]
   2214c:	cmn	r0, #1
   22150:	bne	22188 <__assert_fail@plt+0x10dc0>
   22154:	b	22170 <__assert_fail@plt+0x10da8>
   22158:	ldr	r0, [fp, #-16]
   2215c:	add	r0, r0, #0
   22160:	movw	r1, #0
   22164:	cmp	r1, r0
   22168:	bcc	221d8 <__assert_fail@plt+0x10e10>
   2216c:	b	221ec <__assert_fail@plt+0x10e24>
   22170:	ldr	r0, [fp, #-16]
   22174:	sub	r0, r0, #1
   22178:	mvn	r1, #0
   2217c:	cmp	r1, r0
   22180:	bcc	221d8 <__assert_fail@plt+0x10e10>
   22184:	b	221ec <__assert_fail@plt+0x10e24>
   22188:	ldr	r0, [fp, #-12]
   2218c:	movw	r1, #0
   22190:	udiv	r0, r1, r0
   22194:	ldr	r1, [fp, #-16]
   22198:	cmp	r0, r1
   2219c:	bcc	221d8 <__assert_fail@plt+0x10e10>
   221a0:	b	221ec <__assert_fail@plt+0x10e24>
   221a4:	ldr	r2, [fp, #-16]
   221a8:	mvn	r0, #0
   221ac:	mov	r3, #0
   221b0:	str	r0, [sp, #12]
   221b4:	ldr	r1, [sp, #12]
   221b8:	bl	22b74 <__assert_fail@plt+0x117ac>
   221bc:	ldr	r2, [fp, #-12]
   221c0:	subs	r0, r0, r2
   221c4:	sbcs	r1, r1, #0
   221c8:	str	r0, [sp, #8]
   221cc:	str	r1, [sp, #4]
   221d0:	bcs	221ec <__assert_fail@plt+0x10e24>
   221d4:	b	221d8 <__assert_fail@plt+0x10e10>
   221d8:	ldr	r0, [fp, #-12]
   221dc:	ldr	r1, [fp, #-16]
   221e0:	mul	r0, r0, r1
   221e4:	str	r0, [fp, #-20]	; 0xffffffec
   221e8:	b	22200 <__assert_fail@plt+0x10e38>
   221ec:	ldr	r0, [fp, #-12]
   221f0:	ldr	r1, [fp, #-16]
   221f4:	mul	r0, r0, r1
   221f8:	str	r0, [fp, #-20]	; 0xffffffec
   221fc:	b	22218 <__assert_fail@plt+0x10e50>
   22200:	bl	11290 <__errno_location@plt>
   22204:	movw	lr, #12
   22208:	str	lr, [r0]
   2220c:	movw	r0, #0
   22210:	str	r0, [fp, #-4]
   22214:	b	22228 <__assert_fail@plt+0x10e60>
   22218:	ldr	r0, [fp, #-8]
   2221c:	ldr	r1, [fp, #-20]	; 0xffffffec
   22220:	bl	1fd88 <__assert_fail@plt+0xe9c0>
   22224:	str	r0, [fp, #-4]
   22228:	ldr	r0, [fp, #-4]
   2222c:	mov	sp, fp
   22230:	pop	{fp, pc}
   22234:	svcvc	0x00ffffff
   22238:	andhi	r0, r0, r0
   2223c:			; <UNDEFINED> instruction: 0xffff8000
   22240:	push	{fp, lr}
   22244:	mov	fp, sp
   22248:	sub	sp, sp, #8
   2224c:	str	r0, [sp, #4]
   22250:	ldr	r0, [sp, #4]
   22254:	movw	r1, #0
   22258:	movw	r2, #3
   2225c:	bl	20570 <__assert_fail@plt+0xf1a8>
   22260:	mov	sp, fp
   22264:	pop	{fp, pc}
   22268:	sub	sp, sp, #12
   2226c:	str	r0, [sp, #4]
   22270:	ldr	r0, [sp, #4]
   22274:	sub	r1, r0, #48	; 0x30
   22278:	cmp	r1, #10
   2227c:	str	r0, [sp]
   22280:	bcc	222b0 <__assert_fail@plt+0x10ee8>
   22284:	b	22288 <__assert_fail@plt+0x10ec0>
   22288:	ldr	r0, [sp]
   2228c:	sub	r1, r0, #65	; 0x41
   22290:	cmp	r1, #26
   22294:	bcc	222b0 <__assert_fail@plt+0x10ee8>
   22298:	b	2229c <__assert_fail@plt+0x10ed4>
   2229c:	ldr	r0, [sp]
   222a0:	sub	r1, r0, #97	; 0x61
   222a4:	cmp	r1, #25
   222a8:	bhi	222c0 <__assert_fail@plt+0x10ef8>
   222ac:	b	222b0 <__assert_fail@plt+0x10ee8>
   222b0:	movw	r0, #1
   222b4:	and	r0, r0, #1
   222b8:	strb	r0, [sp, #11]
   222bc:	b	222cc <__assert_fail@plt+0x10f04>
   222c0:	movw	r0, #0
   222c4:	and	r0, r0, #1
   222c8:	strb	r0, [sp, #11]
   222cc:	ldrb	r0, [sp, #11]
   222d0:	and	r0, r0, #1
   222d4:	add	sp, sp, #12
   222d8:	bx	lr
   222dc:	sub	sp, sp, #12
   222e0:	str	r0, [sp, #4]
   222e4:	ldr	r0, [sp, #4]
   222e8:	sub	r1, r0, #65	; 0x41
   222ec:	cmp	r1, #26
   222f0:	str	r0, [sp]
   222f4:	bcc	22310 <__assert_fail@plt+0x10f48>
   222f8:	b	222fc <__assert_fail@plt+0x10f34>
   222fc:	ldr	r0, [sp]
   22300:	sub	r1, r0, #97	; 0x61
   22304:	cmp	r1, #25
   22308:	bhi	22320 <__assert_fail@plt+0x10f58>
   2230c:	b	22310 <__assert_fail@plt+0x10f48>
   22310:	movw	r0, #1
   22314:	and	r0, r0, #1
   22318:	strb	r0, [sp, #11]
   2231c:	b	2232c <__assert_fail@plt+0x10f64>
   22320:	movw	r0, #0
   22324:	and	r0, r0, #1
   22328:	strb	r0, [sp, #11]
   2232c:	ldrb	r0, [sp, #11]
   22330:	and	r0, r0, #1
   22334:	add	sp, sp, #12
   22338:	bx	lr
   2233c:	sub	sp, sp, #8
   22340:	str	r0, [sp]
   22344:	ldr	r0, [sp]
   22348:	cmp	r0, #127	; 0x7f
   2234c:	bhi	22364 <__assert_fail@plt+0x10f9c>
   22350:	b	22354 <__assert_fail@plt+0x10f8c>
   22354:	movw	r0, #1
   22358:	and	r0, r0, #1
   2235c:	strb	r0, [sp, #7]
   22360:	b	22370 <__assert_fail@plt+0x10fa8>
   22364:	movw	r0, #0
   22368:	and	r0, r0, #1
   2236c:	strb	r0, [sp, #7]
   22370:	ldrb	r0, [sp, #7]
   22374:	and	r0, r0, #1
   22378:	add	sp, sp, #8
   2237c:	bx	lr
   22380:	sub	sp, sp, #8
   22384:	str	r0, [sp, #4]
   22388:	ldr	r0, [sp, #4]
   2238c:	cmp	r0, #32
   22390:	movw	r0, #1
   22394:	str	r0, [sp]
   22398:	beq	223b0 <__assert_fail@plt+0x10fe8>
   2239c:	ldr	r0, [sp, #4]
   223a0:	cmp	r0, #9
   223a4:	movw	r0, #0
   223a8:	moveq	r0, #1
   223ac:	str	r0, [sp]
   223b0:	ldr	r0, [sp]
   223b4:	and	r0, r0, #1
   223b8:	add	sp, sp, #8
   223bc:	bx	lr
   223c0:	sub	sp, sp, #12
   223c4:	str	r0, [sp, #4]
   223c8:	ldr	r0, [sp, #4]
   223cc:	cmp	r0, #32
   223d0:	str	r0, [sp]
   223d4:	bcc	223ec <__assert_fail@plt+0x11024>
   223d8:	b	223dc <__assert_fail@plt+0x11014>
   223dc:	ldr	r0, [sp]
   223e0:	cmp	r0, #127	; 0x7f
   223e4:	bne	223fc <__assert_fail@plt+0x11034>
   223e8:	b	223ec <__assert_fail@plt+0x11024>
   223ec:	movw	r0, #1
   223f0:	and	r0, r0, #1
   223f4:	strb	r0, [sp, #11]
   223f8:	b	22408 <__assert_fail@plt+0x11040>
   223fc:	movw	r0, #0
   22400:	and	r0, r0, #1
   22404:	strb	r0, [sp, #11]
   22408:	ldrb	r0, [sp, #11]
   2240c:	and	r0, r0, #1
   22410:	add	sp, sp, #12
   22414:	bx	lr
   22418:	sub	sp, sp, #8
   2241c:	str	r0, [sp]
   22420:	ldr	r0, [sp]
   22424:	sub	r0, r0, #48	; 0x30
   22428:	cmp	r0, #9
   2242c:	bhi	22444 <__assert_fail@plt+0x1107c>
   22430:	b	22434 <__assert_fail@plt+0x1106c>
   22434:	movw	r0, #1
   22438:	and	r0, r0, #1
   2243c:	strb	r0, [sp, #7]
   22440:	b	22450 <__assert_fail@plt+0x11088>
   22444:	movw	r0, #0
   22448:	and	r0, r0, #1
   2244c:	strb	r0, [sp, #7]
   22450:	ldrb	r0, [sp, #7]
   22454:	and	r0, r0, #1
   22458:	add	sp, sp, #8
   2245c:	bx	lr
   22460:	sub	sp, sp, #8
   22464:	str	r0, [sp]
   22468:	ldr	r0, [sp]
   2246c:	sub	r0, r0, #33	; 0x21
   22470:	cmp	r0, #93	; 0x5d
   22474:	bhi	2248c <__assert_fail@plt+0x110c4>
   22478:	b	2247c <__assert_fail@plt+0x110b4>
   2247c:	movw	r0, #1
   22480:	and	r0, r0, #1
   22484:	strb	r0, [sp, #7]
   22488:	b	22498 <__assert_fail@plt+0x110d0>
   2248c:	movw	r0, #0
   22490:	and	r0, r0, #1
   22494:	strb	r0, [sp, #7]
   22498:	ldrb	r0, [sp, #7]
   2249c:	and	r0, r0, #1
   224a0:	add	sp, sp, #8
   224a4:	bx	lr
   224a8:	sub	sp, sp, #8
   224ac:	str	r0, [sp]
   224b0:	ldr	r0, [sp]
   224b4:	sub	r0, r0, #97	; 0x61
   224b8:	cmp	r0, #25
   224bc:	bhi	224d4 <__assert_fail@plt+0x1110c>
   224c0:	b	224c4 <__assert_fail@plt+0x110fc>
   224c4:	movw	r0, #1
   224c8:	and	r0, r0, #1
   224cc:	strb	r0, [sp, #7]
   224d0:	b	224e0 <__assert_fail@plt+0x11118>
   224d4:	movw	r0, #0
   224d8:	and	r0, r0, #1
   224dc:	strb	r0, [sp, #7]
   224e0:	ldrb	r0, [sp, #7]
   224e4:	and	r0, r0, #1
   224e8:	add	sp, sp, #8
   224ec:	bx	lr
   224f0:	sub	sp, sp, #8
   224f4:	str	r0, [sp]
   224f8:	ldr	r0, [sp]
   224fc:	sub	r0, r0, #32
   22500:	cmp	r0, #94	; 0x5e
   22504:	bhi	2251c <__assert_fail@plt+0x11154>
   22508:	b	2250c <__assert_fail@plt+0x11144>
   2250c:	movw	r0, #1
   22510:	and	r0, r0, #1
   22514:	strb	r0, [sp, #7]
   22518:	b	22528 <__assert_fail@plt+0x11160>
   2251c:	movw	r0, #0
   22520:	and	r0, r0, #1
   22524:	strb	r0, [sp, #7]
   22528:	ldrb	r0, [sp, #7]
   2252c:	and	r0, r0, #1
   22530:	add	sp, sp, #8
   22534:	bx	lr
   22538:	sub	sp, sp, #12
   2253c:	str	r0, [sp, #4]
   22540:	ldr	r0, [sp, #4]
   22544:	sub	r0, r0, #33	; 0x21
   22548:	cmp	r0, #93	; 0x5d
   2254c:	str	r0, [sp]
   22550:	bhi	226ec <__assert_fail@plt+0x11324>
   22554:	add	r0, pc, #8
   22558:	ldr	r1, [sp]
   2255c:	ldr	r0, [r0, r1, lsl #2]
   22560:	mov	pc, r0
   22564:	ldrdeq	r2, [r2], -ip
   22568:	ldrdeq	r2, [r2], -ip
   2256c:	ldrdeq	r2, [r2], -ip
   22570:	ldrdeq	r2, [r2], -ip
   22574:	ldrdeq	r2, [r2], -ip
   22578:	ldrdeq	r2, [r2], -ip
   2257c:	ldrdeq	r2, [r2], -ip
   22580:	ldrdeq	r2, [r2], -ip
   22584:	ldrdeq	r2, [r2], -ip
   22588:	ldrdeq	r2, [r2], -ip
   2258c:	ldrdeq	r2, [r2], -ip
   22590:	ldrdeq	r2, [r2], -ip
   22594:	ldrdeq	r2, [r2], -ip
   22598:	ldrdeq	r2, [r2], -ip
   2259c:	ldrdeq	r2, [r2], -ip
   225a0:	andeq	r2, r2, ip, ror #13
   225a4:	andeq	r2, r2, ip, ror #13
   225a8:	andeq	r2, r2, ip, ror #13
   225ac:	andeq	r2, r2, ip, ror #13
   225b0:	andeq	r2, r2, ip, ror #13
   225b4:	andeq	r2, r2, ip, ror #13
   225b8:	andeq	r2, r2, ip, ror #13
   225bc:	andeq	r2, r2, ip, ror #13
   225c0:	andeq	r2, r2, ip, ror #13
   225c4:	andeq	r2, r2, ip, ror #13
   225c8:	ldrdeq	r2, [r2], -ip
   225cc:	ldrdeq	r2, [r2], -ip
   225d0:	ldrdeq	r2, [r2], -ip
   225d4:	ldrdeq	r2, [r2], -ip
   225d8:	ldrdeq	r2, [r2], -ip
   225dc:	ldrdeq	r2, [r2], -ip
   225e0:	ldrdeq	r2, [r2], -ip
   225e4:	andeq	r2, r2, ip, ror #13
   225e8:	andeq	r2, r2, ip, ror #13
   225ec:	andeq	r2, r2, ip, ror #13
   225f0:	andeq	r2, r2, ip, ror #13
   225f4:	andeq	r2, r2, ip, ror #13
   225f8:	andeq	r2, r2, ip, ror #13
   225fc:	andeq	r2, r2, ip, ror #13
   22600:	andeq	r2, r2, ip, ror #13
   22604:	andeq	r2, r2, ip, ror #13
   22608:	andeq	r2, r2, ip, ror #13
   2260c:	andeq	r2, r2, ip, ror #13
   22610:	andeq	r2, r2, ip, ror #13
   22614:	andeq	r2, r2, ip, ror #13
   22618:	andeq	r2, r2, ip, ror #13
   2261c:	andeq	r2, r2, ip, ror #13
   22620:	andeq	r2, r2, ip, ror #13
   22624:	andeq	r2, r2, ip, ror #13
   22628:	andeq	r2, r2, ip, ror #13
   2262c:	andeq	r2, r2, ip, ror #13
   22630:	andeq	r2, r2, ip, ror #13
   22634:	andeq	r2, r2, ip, ror #13
   22638:	andeq	r2, r2, ip, ror #13
   2263c:	andeq	r2, r2, ip, ror #13
   22640:	andeq	r2, r2, ip, ror #13
   22644:	andeq	r2, r2, ip, ror #13
   22648:	andeq	r2, r2, ip, ror #13
   2264c:	ldrdeq	r2, [r2], -ip
   22650:	ldrdeq	r2, [r2], -ip
   22654:	ldrdeq	r2, [r2], -ip
   22658:	ldrdeq	r2, [r2], -ip
   2265c:	ldrdeq	r2, [r2], -ip
   22660:	ldrdeq	r2, [r2], -ip
   22664:	andeq	r2, r2, ip, ror #13
   22668:	andeq	r2, r2, ip, ror #13
   2266c:	andeq	r2, r2, ip, ror #13
   22670:	andeq	r2, r2, ip, ror #13
   22674:	andeq	r2, r2, ip, ror #13
   22678:	andeq	r2, r2, ip, ror #13
   2267c:	andeq	r2, r2, ip, ror #13
   22680:	andeq	r2, r2, ip, ror #13
   22684:	andeq	r2, r2, ip, ror #13
   22688:	andeq	r2, r2, ip, ror #13
   2268c:	andeq	r2, r2, ip, ror #13
   22690:	andeq	r2, r2, ip, ror #13
   22694:	andeq	r2, r2, ip, ror #13
   22698:	andeq	r2, r2, ip, ror #13
   2269c:	andeq	r2, r2, ip, ror #13
   226a0:	andeq	r2, r2, ip, ror #13
   226a4:	andeq	r2, r2, ip, ror #13
   226a8:	andeq	r2, r2, ip, ror #13
   226ac:	andeq	r2, r2, ip, ror #13
   226b0:	andeq	r2, r2, ip, ror #13
   226b4:	andeq	r2, r2, ip, ror #13
   226b8:	andeq	r2, r2, ip, ror #13
   226bc:	andeq	r2, r2, ip, ror #13
   226c0:	andeq	r2, r2, ip, ror #13
   226c4:	andeq	r2, r2, ip, ror #13
   226c8:	andeq	r2, r2, ip, ror #13
   226cc:	ldrdeq	r2, [r2], -ip
   226d0:	ldrdeq	r2, [r2], -ip
   226d4:	ldrdeq	r2, [r2], -ip
   226d8:	ldrdeq	r2, [r2], -ip
   226dc:	movw	r0, #1
   226e0:	and	r0, r0, #1
   226e4:	strb	r0, [sp, #11]
   226e8:	b	226f8 <__assert_fail@plt+0x11330>
   226ec:	movw	r0, #0
   226f0:	and	r0, r0, #1
   226f4:	strb	r0, [sp, #11]
   226f8:	ldrb	r0, [sp, #11]
   226fc:	and	r0, r0, #1
   22700:	add	sp, sp, #12
   22704:	bx	lr
   22708:	sub	sp, sp, #12
   2270c:	str	r0, [sp, #4]
   22710:	ldr	r0, [sp, #4]
   22714:	sub	r1, r0, #9
   22718:	cmp	r1, #5
   2271c:	str	r0, [sp]
   22720:	bcc	22738 <__assert_fail@plt+0x11370>
   22724:	b	22728 <__assert_fail@plt+0x11360>
   22728:	ldr	r0, [sp]
   2272c:	cmp	r0, #32
   22730:	bne	22748 <__assert_fail@plt+0x11380>
   22734:	b	22738 <__assert_fail@plt+0x11370>
   22738:	movw	r0, #1
   2273c:	and	r0, r0, #1
   22740:	strb	r0, [sp, #11]
   22744:	b	22754 <__assert_fail@plt+0x1138c>
   22748:	movw	r0, #0
   2274c:	and	r0, r0, #1
   22750:	strb	r0, [sp, #11]
   22754:	ldrb	r0, [sp, #11]
   22758:	and	r0, r0, #1
   2275c:	add	sp, sp, #12
   22760:	bx	lr
   22764:	sub	sp, sp, #8
   22768:	str	r0, [sp]
   2276c:	ldr	r0, [sp]
   22770:	sub	r0, r0, #65	; 0x41
   22774:	cmp	r0, #25
   22778:	bhi	22790 <__assert_fail@plt+0x113c8>
   2277c:	b	22780 <__assert_fail@plt+0x113b8>
   22780:	movw	r0, #1
   22784:	and	r0, r0, #1
   22788:	strb	r0, [sp, #7]
   2278c:	b	2279c <__assert_fail@plt+0x113d4>
   22790:	movw	r0, #0
   22794:	and	r0, r0, #1
   22798:	strb	r0, [sp, #7]
   2279c:	ldrb	r0, [sp, #7]
   227a0:	and	r0, r0, #1
   227a4:	add	sp, sp, #8
   227a8:	bx	lr
   227ac:	sub	sp, sp, #12
   227b0:	str	r0, [sp, #4]
   227b4:	ldr	r0, [sp, #4]
   227b8:	sub	r1, r0, #48	; 0x30
   227bc:	cmp	r1, #10
   227c0:	str	r0, [sp]
   227c4:	bcc	227f4 <__assert_fail@plt+0x1142c>
   227c8:	b	227cc <__assert_fail@plt+0x11404>
   227cc:	ldr	r0, [sp]
   227d0:	sub	r1, r0, #65	; 0x41
   227d4:	cmp	r1, #6
   227d8:	bcc	227f4 <__assert_fail@plt+0x1142c>
   227dc:	b	227e0 <__assert_fail@plt+0x11418>
   227e0:	ldr	r0, [sp]
   227e4:	sub	r1, r0, #97	; 0x61
   227e8:	cmp	r1, #5
   227ec:	bhi	22804 <__assert_fail@plt+0x1143c>
   227f0:	b	227f4 <__assert_fail@plt+0x1142c>
   227f4:	movw	r0, #1
   227f8:	and	r0, r0, #1
   227fc:	strb	r0, [sp, #11]
   22800:	b	22810 <__assert_fail@plt+0x11448>
   22804:	movw	r0, #0
   22808:	and	r0, r0, #1
   2280c:	strb	r0, [sp, #11]
   22810:	ldrb	r0, [sp, #11]
   22814:	and	r0, r0, #1
   22818:	add	sp, sp, #12
   2281c:	bx	lr
   22820:	sub	sp, sp, #8
   22824:	str	r0, [sp]
   22828:	ldr	r0, [sp]
   2282c:	sub	r0, r0, #65	; 0x41
   22830:	cmp	r0, #25
   22834:	bhi	22850 <__assert_fail@plt+0x11488>
   22838:	b	2283c <__assert_fail@plt+0x11474>
   2283c:	ldr	r0, [sp]
   22840:	sub	r0, r0, #65	; 0x41
   22844:	add	r0, r0, #97	; 0x61
   22848:	str	r0, [sp, #4]
   2284c:	b	22858 <__assert_fail@plt+0x11490>
   22850:	ldr	r0, [sp]
   22854:	str	r0, [sp, #4]
   22858:	ldr	r0, [sp, #4]
   2285c:	add	sp, sp, #8
   22860:	bx	lr
   22864:	sub	sp, sp, #8
   22868:	str	r0, [sp]
   2286c:	ldr	r0, [sp]
   22870:	sub	r0, r0, #97	; 0x61
   22874:	cmp	r0, #25
   22878:	bhi	22894 <__assert_fail@plt+0x114cc>
   2287c:	b	22880 <__assert_fail@plt+0x114b8>
   22880:	ldr	r0, [sp]
   22884:	sub	r0, r0, #97	; 0x61
   22888:	add	r0, r0, #65	; 0x41
   2288c:	str	r0, [sp, #4]
   22890:	b	2289c <__assert_fail@plt+0x114d4>
   22894:	ldr	r0, [sp]
   22898:	str	r0, [sp, #4]
   2289c:	ldr	r0, [sp, #4]
   228a0:	add	sp, sp, #8
   228a4:	bx	lr
   228a8:	push	{r4, r5, fp, lr}
   228ac:	add	fp, sp, #8
   228b0:	sub	sp, sp, #272	; 0x110
   228b4:	add	r1, sp, #7
   228b8:	str	r0, [fp, #-16]
   228bc:	ldr	r0, [fp, #-16]
   228c0:	movw	r2, #257	; 0x101
   228c4:	bl	22944 <__assert_fail@plt+0x1157c>
   228c8:	cmp	r0, #0
   228cc:	beq	228e0 <__assert_fail@plt+0x11518>
   228d0:	movw	r0, #0
   228d4:	and	r0, r0, #1
   228d8:	strb	r0, [fp, #-9]
   228dc:	b	22934 <__assert_fail@plt+0x1156c>
   228e0:	add	r0, sp, #7
   228e4:	movw	r1, #15765	; 0x3d95
   228e8:	movt	r1, #2
   228ec:	bl	11104 <strcmp@plt>
   228f0:	cmp	r0, #0
   228f4:	movw	r0, #1
   228f8:	str	r0, [sp]
   228fc:	beq	22920 <__assert_fail@plt+0x11558>
   22900:	add	r0, sp, #7
   22904:	movw	r1, #15767	; 0x3d97
   22908:	movt	r1, #2
   2290c:	bl	11104 <strcmp@plt>
   22910:	cmp	r0, #0
   22914:	movw	r0, #0
   22918:	moveq	r0, #1
   2291c:	str	r0, [sp]
   22920:	ldr	r0, [sp]
   22924:	mvn	r1, #0
   22928:	eor	r0, r0, r1
   2292c:	and	r0, r0, #1
   22930:	strb	r0, [fp, #-9]
   22934:	ldrb	r0, [fp, #-9]
   22938:	and	r0, r0, #1
   2293c:	sub	sp, fp, #8
   22940:	pop	{r4, r5, fp, pc}
   22944:	push	{fp, lr}
   22948:	mov	fp, sp
   2294c:	sub	sp, sp, #16
   22950:	str	r0, [fp, #-4]
   22954:	str	r1, [sp, #8]
   22958:	str	r2, [sp, #4]
   2295c:	ldr	r0, [fp, #-4]
   22960:	ldr	r1, [sp, #8]
   22964:	ldr	r2, [sp, #4]
   22968:	bl	22974 <__assert_fail@plt+0x115ac>
   2296c:	mov	sp, fp
   22970:	pop	{fp, pc}
   22974:	push	{fp, lr}
   22978:	mov	fp, sp
   2297c:	sub	sp, sp, #24
   22980:	str	r0, [fp, #-8]
   22984:	str	r1, [sp, #12]
   22988:	str	r2, [sp, #8]
   2298c:	ldr	r0, [fp, #-8]
   22990:	bl	22a74 <__assert_fail@plt+0x116ac>
   22994:	str	r0, [sp, #4]
   22998:	ldr	r0, [sp, #4]
   2299c:	movw	r1, #0
   229a0:	cmp	r0, r1
   229a4:	bne	229cc <__assert_fail@plt+0x11604>
   229a8:	ldr	r0, [sp, #8]
   229ac:	cmp	r0, #0
   229b0:	bls	229c0 <__assert_fail@plt+0x115f8>
   229b4:	ldr	r0, [sp, #12]
   229b8:	movw	r1, #0
   229bc:	strb	r1, [r0]
   229c0:	movw	r0, #22
   229c4:	str	r0, [fp, #-4]
   229c8:	b	22a48 <__assert_fail@plt+0x11680>
   229cc:	ldr	r0, [sp, #4]
   229d0:	bl	11260 <strlen@plt>
   229d4:	str	r0, [sp]
   229d8:	ldr	r0, [sp]
   229dc:	ldr	lr, [sp, #8]
   229e0:	cmp	r0, lr
   229e4:	bcs	22a08 <__assert_fail@plt+0x11640>
   229e8:	ldr	r0, [sp, #12]
   229ec:	ldr	r1, [sp, #4]
   229f0:	ldr	r2, [sp]
   229f4:	add	r2, r2, #1
   229f8:	bl	1114c <memcpy@plt>
   229fc:	movw	r0, #0
   22a00:	str	r0, [fp, #-4]
   22a04:	b	22a48 <__assert_fail@plt+0x11680>
   22a08:	ldr	r0, [sp, #8]
   22a0c:	cmp	r0, #0
   22a10:	bls	22a40 <__assert_fail@plt+0x11678>
   22a14:	ldr	r0, [sp, #12]
   22a18:	ldr	r1, [sp, #4]
   22a1c:	ldr	r2, [sp, #8]
   22a20:	sub	r2, r2, #1
   22a24:	bl	1114c <memcpy@plt>
   22a28:	ldr	r0, [sp, #12]
   22a2c:	ldr	r1, [sp, #8]
   22a30:	sub	r1, r1, #1
   22a34:	add	r0, r0, r1
   22a38:	movw	r1, #0
   22a3c:	strb	r1, [r0]
   22a40:	movw	r0, #34	; 0x22
   22a44:	str	r0, [fp, #-4]
   22a48:	ldr	r0, [fp, #-4]
   22a4c:	mov	sp, fp
   22a50:	pop	{fp, pc}
   22a54:	push	{fp, lr}
   22a58:	mov	fp, sp
   22a5c:	sub	sp, sp, #8
   22a60:	str	r0, [sp, #4]
   22a64:	ldr	r0, [sp, #4]
   22a68:	bl	22a74 <__assert_fail@plt+0x116ac>
   22a6c:	mov	sp, fp
   22a70:	pop	{fp, pc}
   22a74:	push	{fp, lr}
   22a78:	mov	fp, sp
   22a7c:	sub	sp, sp, #8
   22a80:	str	r0, [sp, #4]
   22a84:	ldr	r0, [sp, #4]
   22a88:	movw	r1, #0
   22a8c:	bl	112e4 <setlocale@plt>
   22a90:	str	r0, [sp]
   22a94:	ldr	r0, [sp]
   22a98:	mov	sp, fp
   22a9c:	pop	{fp, pc}
   22aa0:	cmp	r3, #0
   22aa4:	cmpeq	r2, #0
   22aa8:	bne	22acc <__assert_fail@plt+0x11704>
   22aac:	cmp	r1, #0
   22ab0:	movlt	r1, #-2147483648	; 0x80000000
   22ab4:	movlt	r0, #0
   22ab8:	blt	22ac8 <__assert_fail@plt+0x11700>
   22abc:	cmpeq	r0, #0
   22ac0:	mvnne	r1, #-2147483648	; 0x80000000
   22ac4:	mvnne	r0, #0
   22ac8:	b	22bb0 <__assert_fail@plt+0x117e8>
   22acc:	sub	sp, sp, #8
   22ad0:	push	{sp, lr}
   22ad4:	cmp	r1, #0
   22ad8:	blt	22af8 <__assert_fail@plt+0x11730>
   22adc:	cmp	r3, #0
   22ae0:	blt	22b2c <__assert_fail@plt+0x11764>
   22ae4:	bl	22bc0 <__assert_fail@plt+0x117f8>
   22ae8:	ldr	lr, [sp, #4]
   22aec:	add	sp, sp, #8
   22af0:	pop	{r2, r3}
   22af4:	bx	lr
   22af8:	rsbs	r0, r0, #0
   22afc:	sbc	r1, r1, r1, lsl #1
   22b00:	cmp	r3, #0
   22b04:	blt	22b50 <__assert_fail@plt+0x11788>
   22b08:	bl	22bc0 <__assert_fail@plt+0x117f8>
   22b0c:	ldr	lr, [sp, #4]
   22b10:	add	sp, sp, #8
   22b14:	pop	{r2, r3}
   22b18:	rsbs	r0, r0, #0
   22b1c:	sbc	r1, r1, r1, lsl #1
   22b20:	rsbs	r2, r2, #0
   22b24:	sbc	r3, r3, r3, lsl #1
   22b28:	bx	lr
   22b2c:	rsbs	r2, r2, #0
   22b30:	sbc	r3, r3, r3, lsl #1
   22b34:	bl	22bc0 <__assert_fail@plt+0x117f8>
   22b38:	ldr	lr, [sp, #4]
   22b3c:	add	sp, sp, #8
   22b40:	pop	{r2, r3}
   22b44:	rsbs	r0, r0, #0
   22b48:	sbc	r1, r1, r1, lsl #1
   22b4c:	bx	lr
   22b50:	rsbs	r2, r2, #0
   22b54:	sbc	r3, r3, r3, lsl #1
   22b58:	bl	22bc0 <__assert_fail@plt+0x117f8>
   22b5c:	ldr	lr, [sp, #4]
   22b60:	add	sp, sp, #8
   22b64:	pop	{r2, r3}
   22b68:	rsbs	r2, r2, #0
   22b6c:	sbc	r3, r3, r3, lsl #1
   22b70:	bx	lr
   22b74:	cmp	r3, #0
   22b78:	cmpeq	r2, #0
   22b7c:	bne	22b94 <__assert_fail@plt+0x117cc>
   22b80:	cmp	r1, #0
   22b84:	cmpeq	r0, #0
   22b88:	mvnne	r1, #0
   22b8c:	mvnne	r0, #0
   22b90:	b	22bb0 <__assert_fail@plt+0x117e8>
   22b94:	sub	sp, sp, #8
   22b98:	push	{sp, lr}
   22b9c:	bl	22bc0 <__assert_fail@plt+0x117f8>
   22ba0:	ldr	lr, [sp, #4]
   22ba4:	add	sp, sp, #8
   22ba8:	pop	{r2, r3}
   22bac:	bx	lr
   22bb0:	push	{r1, lr}
   22bb4:	mov	r0, #8
   22bb8:	bl	110f8 <raise@plt>
   22bbc:	pop	{r1, pc}
   22bc0:	cmp	r1, r3
   22bc4:	cmpeq	r0, r2
   22bc8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22bcc:	mov	r4, r0
   22bd0:	movcc	r0, #0
   22bd4:	mov	r5, r1
   22bd8:	ldr	lr, [sp, #36]	; 0x24
   22bdc:	movcc	r1, r0
   22be0:	bcc	22cdc <__assert_fail@plt+0x11914>
   22be4:	cmp	r3, #0
   22be8:	clzeq	ip, r2
   22bec:	clzne	ip, r3
   22bf0:	addeq	ip, ip, #32
   22bf4:	cmp	r5, #0
   22bf8:	clzeq	r1, r4
   22bfc:	addeq	r1, r1, #32
   22c00:	clzne	r1, r5
   22c04:	sub	ip, ip, r1
   22c08:	sub	sl, ip, #32
   22c0c:	lsl	r9, r3, ip
   22c10:	rsb	fp, ip, #32
   22c14:	orr	r9, r9, r2, lsl sl
   22c18:	orr	r9, r9, r2, lsr fp
   22c1c:	lsl	r8, r2, ip
   22c20:	cmp	r5, r9
   22c24:	cmpeq	r4, r8
   22c28:	movcc	r0, #0
   22c2c:	movcc	r1, r0
   22c30:	bcc	22c4c <__assert_fail@plt+0x11884>
   22c34:	mov	r0, #1
   22c38:	subs	r4, r4, r8
   22c3c:	lsl	r1, r0, sl
   22c40:	orr	r1, r1, r0, lsr fp
   22c44:	lsl	r0, r0, ip
   22c48:	sbc	r5, r5, r9
   22c4c:	cmp	ip, #0
   22c50:	beq	22cdc <__assert_fail@plt+0x11914>
   22c54:	lsr	r6, r8, #1
   22c58:	orr	r6, r6, r9, lsl #31
   22c5c:	lsr	r7, r9, #1
   22c60:	mov	r2, ip
   22c64:	b	22c88 <__assert_fail@plt+0x118c0>
   22c68:	subs	r3, r4, r6
   22c6c:	sbc	r8, r5, r7
   22c70:	adds	r3, r3, r3
   22c74:	adc	r8, r8, r8
   22c78:	adds	r4, r3, #1
   22c7c:	adc	r5, r8, #0
   22c80:	subs	r2, r2, #1
   22c84:	beq	22ca4 <__assert_fail@plt+0x118dc>
   22c88:	cmp	r5, r7
   22c8c:	cmpeq	r4, r6
   22c90:	bcs	22c68 <__assert_fail@plt+0x118a0>
   22c94:	adds	r4, r4, r4
   22c98:	adc	r5, r5, r5
   22c9c:	subs	r2, r2, #1
   22ca0:	bne	22c88 <__assert_fail@plt+0x118c0>
   22ca4:	lsr	r3, r4, ip
   22ca8:	orr	r3, r3, r5, lsl fp
   22cac:	lsr	r2, r5, ip
   22cb0:	orr	r3, r3, r5, lsr sl
   22cb4:	adds	r0, r0, r4
   22cb8:	mov	r4, r3
   22cbc:	lsl	r3, r2, ip
   22cc0:	orr	r3, r3, r4, lsl sl
   22cc4:	lsl	ip, r4, ip
   22cc8:	orr	r3, r3, r4, lsr fp
   22ccc:	adc	r1, r1, r5
   22cd0:	subs	r0, r0, ip
   22cd4:	mov	r5, r2
   22cd8:	sbc	r1, r1, r3
   22cdc:	cmp	lr, #0
   22ce0:	strdne	r4, [lr]
   22ce4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22ce8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   22cec:	mov	r7, r0
   22cf0:	ldr	r6, [pc, #72]	; 22d40 <__assert_fail@plt+0x11978>
   22cf4:	ldr	r5, [pc, #72]	; 22d44 <__assert_fail@plt+0x1197c>
   22cf8:	add	r6, pc, r6
   22cfc:	add	r5, pc, r5
   22d00:	sub	r6, r6, r5
   22d04:	mov	r8, r1
   22d08:	mov	r9, r2
   22d0c:	bl	110b4 <fstatfs64@plt-0x20>
   22d10:	asrs	r6, r6, #2
   22d14:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   22d18:	mov	r4, #0
   22d1c:	add	r4, r4, #1
   22d20:	ldr	r3, [r5], #4
   22d24:	mov	r2, r9
   22d28:	mov	r1, r8
   22d2c:	mov	r0, r7
   22d30:	blx	r3
   22d34:	cmp	r6, r4
   22d38:	bne	22d1c <__assert_fail@plt+0x11954>
   22d3c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   22d40:	andeq	r1, r1, ip, lsl #4
   22d44:	andeq	r1, r1, r4, lsl #4
   22d48:	bx	lr
   22d4c:	ldr	r3, [pc, #12]	; 22d60 <__assert_fail@plt+0x11998>
   22d50:	mov	r1, #0
   22d54:	add	r3, pc, r3
   22d58:	ldr	r2, [r3]
   22d5c:	b	1129c <__cxa_atexit@plt>
   22d60:			; <UNDEFINED> instruction: 0x000113b8
   22d64:	mov	r2, r1
   22d68:	mov	r1, r0
   22d6c:	mov	r0, #3
   22d70:	b	11374 <__xstat64@plt>
   22d74:	mov	r2, r1
   22d78:	mov	r1, r0
   22d7c:	mov	r0, #3
   22d80:	b	111a0 <__fxstat64@plt>
   22d84:	mov	r2, r1
   22d88:	mov	r1, r0
   22d8c:	mov	r0, #3
   22d90:	b	113b0 <__lxstat64@plt>
   22d94:	push	{lr}		; (str lr, [sp, #-4]!)
   22d98:	sub	sp, sp, #12
   22d9c:	str	r3, [sp]
   22da0:	mov	r3, r2
   22da4:	mov	r2, r1
   22da8:	mov	r1, r0
   22dac:	mov	r0, #3
   22db0:	bl	11188 <__fxstatat64@plt>
   22db4:	add	sp, sp, #12
   22db8:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .fini:

00022dbc <.fini>:
   22dbc:	push	{r3, lr}
   22dc0:	pop	{r3, pc}
