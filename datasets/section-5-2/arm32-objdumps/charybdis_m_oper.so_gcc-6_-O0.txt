
../repos/charybdis/modules/.libs/m_oper.so:     file format elf32-littlearm


Disassembly of section .init:

00000738 <_init>:
 738:	push	{r3, lr}
 73c:	bl	860 <call_weak_fn>
 740:	pop	{r3, pc}

Disassembly of section .plt:

00000744 <.plt>:
 744:	push	{lr}		; (str lr, [sp, #-4]!)
 748:	ldr	lr, [pc, #4]	; 754 <.plt+0x10>
 74c:	add	lr, pc, lr
 750:	ldr	pc, [lr, #8]!
 754:	.word	0x000118ac

00000758 <strcmp@plt>:
 758:	add	ip, pc, #0, 12
 75c:	add	ip, ip, #69632	; 0x11000
 760:	ldr	pc, [ip, #2220]!	; 0x8ac

00000764 <__cxa_finalize@plt>:
 764:	add	ip, pc, #0, 12
 768:	add	ip, ip, #69632	; 0x11000
 76c:	ldr	pc, [ip, #2212]!	; 0x8a4

00000770 <sendto_one@plt>:
 770:	add	ip, pc, #0, 12
 774:	add	ip, ip, #69632	; 0x11000
 778:	ldr	pc, [ip, #2204]!	; 0x89c

0000077c <rb_strcasecmp@plt>:
 77c:	add	ip, pc, #0, 12
 780:	add	ip, ip, #69632	; 0x11000
 784:	ldr	pc, [ip, #2196]!	; 0x894

00000788 <privilegeset_get@plt>:
 788:	add	ip, pc, #0, 12
 78c:	add	ip, ip, #69632	; 0x11000
 790:	ldr	pc, [ip, #2188]!	; 0x88c

00000794 <rb_outofmemory@plt>:
 794:	add	ip, pc, #0, 12
 798:	add	ip, ip, #69632	; 0x11000
 79c:	ldr	pc, [ip, #2180]!	; 0x884

000007a0 <sendto_realops_snomask@plt>:
 7a0:	add	ip, pc, #0, 12
 7a4:	add	ip, ip, #69632	; 0x11000
 7a8:	ldr	pc, [ip, #2172]!	; 0x87c

000007ac <privilegeset_set_new@plt>:
 7ac:	add	ip, pc, #0, 12
 7b0:	add	ip, ip, #69632	; 0x11000
 7b4:	ldr	pc, [ip, #2164]!	; 0x874

000007b8 <strcpy@plt>:
 7b8:	add	ip, pc, #0, 12
 7bc:	add	ip, ip, #69632	; 0x11000
 7c0:	ldr	pc, [ip, #2156]!	; 0x86c

000007c4 <rb_crypt@plt>:
 7c4:	add	ip, pc, #0, 12
 7c8:	add	ip, ip, #69632	; 0x11000
 7cc:	ldr	pc, [ip, #2148]!	; 0x864

000007d0 <sendto_server@plt>:
 7d0:	add	ip, pc, #0, 12
 7d4:	add	ip, ip, #69632	; 0x11000
 7d8:	ldr	pc, [ip, #2140]!	; 0x85c

000007dc <malloc@plt>:
 7dc:	add	ip, pc, #0, 12
 7e0:	add	ip, ip, #69632	; 0x11000
 7e4:	ldr	pc, [ip, #2132]!	; 0x854

000007e8 <privilegeset_ref@plt>:
 7e8:	add	ip, pc, #0, 12
 7ec:	add	ip, ip, #69632	; 0x11000
 7f0:	ldr	pc, [ip, #2124]!	; 0x84c

000007f4 <__gmon_start__@plt>:
 7f4:	add	ip, pc, #0, 12
 7f8:	add	ip, ip, #69632	; 0x11000
 7fc:	ldr	pc, [ip, #2116]!	; 0x844

00000800 <send_oper_motd@plt>:
 800:	add	ip, pc, #0, 12
 804:	add	ip, ip, #69632	; 0x11000
 808:	ldr	pc, [ip, #2108]!	; 0x83c

0000080c <sendto_one_numeric@plt>:
 80c:	add	ip, pc, #0, 12
 810:	add	ip, ip, #69632	; 0x11000
 814:	ldr	pc, [ip, #2100]!	; 0x834

00000818 <strlen@plt>:
 818:	add	ip, pc, #0, 12
 81c:	add	ip, ip, #69632	; 0x11000
 820:	ldr	pc, [ip, #2092]!	; 0x82c

00000824 <ilog@plt>:
 824:	add	ip, pc, #0, 12
 828:	add	ip, ip, #69632	; 0x11000
 82c:	ldr	pc, [ip, #2084]!	; 0x824

00000830 <flood_endgrace@plt>:
 830:	add	ip, pc, #0, 12
 834:	add	ip, ip, #69632	; 0x11000
 838:	ldr	pc, [ip, #2076]!	; 0x81c

0000083c <find_oper_conf@plt>:
 83c:	add	ip, pc, #0, 12
 840:	add	ip, ip, #69632	; 0x11000
 844:	ldr	pc, [ip, #2068]!	; 0x814

00000848 <oper_up@plt>:
 848:	add	ip, pc, #0, 12
 84c:	add	ip, ip, #69632	; 0x11000
 850:	ldr	pc, [ip, #2060]!	; 0x80c

00000854 <privilegeset_unref@plt>:
 854:	add	ip, pc, #0, 12
 858:	add	ip, ip, #69632	; 0x11000
 85c:	ldr	pc, [ip, #2052]!	; 0x804

Disassembly of section .text:

00000860 <call_weak_fn>:
     860:	ldr	r3, [pc, #20]	; 87c <call_weak_fn+0x1c>
     864:	ldr	r2, [pc, #20]	; 880 <call_weak_fn+0x20>
     868:	add	r3, pc, r3
     86c:	ldr	r2, [r3, r2]
     870:	cmp	r2, #0
     874:	bxeq	lr
     878:	b	7f4 <__gmon_start__@plt>
     87c:	.word	0x00011790
     880:	.word	0x00000070

00000884 <deregister_tm_clones>:
     884:	ldr	r3, [pc, #52]	; 8c0 <deregister_tm_clones+0x3c>
     888:	ldr	r0, [pc, #52]	; 8c4 <deregister_tm_clones+0x40>
     88c:	add	r3, pc, r3
     890:	add	r0, pc, r0
     894:	add	r3, r3, #3
     898:	sub	r3, r3, r0
     89c:	cmp	r3, #6
     8a0:	ldr	r3, [pc, #32]	; 8c8 <deregister_tm_clones+0x44>
     8a4:	add	r3, pc, r3
     8a8:	bxls	lr
     8ac:	ldr	r2, [pc, #24]	; 8cc <deregister_tm_clones+0x48>
     8b0:	ldr	r3, [r3, r2]
     8b4:	cmp	r3, #0
     8b8:	bxeq	lr
     8bc:	bx	r3
     8c0:	.word	0x00011868
     8c4:	.word	0x00011864
     8c8:	.word	0x00011754
     8cc:	.word	0x00000068

000008d0 <register_tm_clones>:
     8d0:	ldr	r1, [pc, #56]	; 910 <register_tm_clones+0x40>
     8d4:	ldr	r0, [pc, #56]	; 914 <register_tm_clones+0x44>
     8d8:	add	r1, pc, r1
     8dc:	add	r0, pc, r0
     8e0:	sub	r1, r1, r0
     8e4:	ldr	r3, [pc, #44]	; 918 <register_tm_clones+0x48>
     8e8:	asr	r1, r1, #2
     8ec:	add	r3, pc, r3
     8f0:	add	r1, r1, r1, lsr #31
     8f4:	asrs	r1, r1, #1
     8f8:	bxeq	lr
     8fc:	ldr	r2, [pc, #24]	; 91c <register_tm_clones+0x4c>
     900:	ldr	r3, [r3, r2]
     904:	cmp	r3, #0
     908:	bxeq	lr
     90c:	bx	r3
     910:	.word	0x0001181c
     914:	.word	0x00011818
     918:	.word	0x0001170c
     91c:	.word	0x00000078

00000920 <__do_global_dtors_aux>:
     920:	ldr	r3, [pc, #76]	; 974 <__do_global_dtors_aux+0x54>
     924:	ldr	r2, [pc, #76]	; 978 <__do_global_dtors_aux+0x58>
     928:	add	r3, pc, r3
     92c:	add	r2, pc, r2
     930:	ldrb	r3, [r3]
     934:	cmp	r3, #0
     938:	bxne	lr
     93c:	ldr	r3, [pc, #56]	; 97c <__do_global_dtors_aux+0x5c>
     940:	push	{r4, lr}
     944:	ldr	r3, [r2, r3]
     948:	cmp	r3, #0
     94c:	beq	95c <__do_global_dtors_aux+0x3c>
     950:	ldr	r3, [pc, #40]	; 980 <__do_global_dtors_aux+0x60>
     954:	ldr	r0, [pc, r3]
     958:	bl	764 <__cxa_finalize@plt>
     95c:	bl	884 <deregister_tm_clones>
     960:	ldr	r3, [pc, #28]	; 984 <__do_global_dtors_aux+0x64>
     964:	mov	r2, #1
     968:	add	r3, pc, r3
     96c:	strb	r2, [r3]
     970:	pop	{r4, pc}
     974:	.word	0x000117cc
     978:	.word	0x000116cc
     97c:	.word	0x00000064
     980:	.word	0x00011728
     984:	.word	0x0001178c

00000988 <frame_dummy>:
     988:	ldr	r0, [pc, #56]	; 9c8 <frame_dummy+0x40>
     98c:	ldr	r3, [pc, #56]	; 9cc <frame_dummy+0x44>
     990:	add	r0, pc, r0
     994:	ldr	r2, [r0]
     998:	add	r3, pc, r3
     99c:	cmp	r2, #0
     9a0:	bne	9a8 <frame_dummy+0x20>
     9a4:	b	8d0 <register_tm_clones>
     9a8:	ldr	r2, [pc, #32]	; 9d0 <frame_dummy+0x48>
     9ac:	ldr	r3, [r3, r2]
     9b0:	cmp	r3, #0
     9b4:	beq	9a4 <frame_dummy+0x1c>
     9b8:	push	{r4, lr}
     9bc:	blx	r3
     9c0:	pop	{r4, lr}
     9c4:	b	8d0 <register_tm_clones>
     9c8:	.word	0x00011564
     9cc:	.word	0x00011660
     9d0:	.word	0x00000074

000009d4 <rb_strdup>:
     9d4:	push	{fp, lr}
     9d8:	add	fp, sp, #4
     9dc:	sub	sp, sp, #16
     9e0:	str	r0, [fp, #-16]
     9e4:	ldr	r0, [fp, #-16]
     9e8:	bl	818 <strlen@plt>
     9ec:	mov	r3, r0
     9f0:	add	r3, r3, #1
     9f4:	mov	r0, r3
     9f8:	bl	7dc <malloc@plt>
     9fc:	mov	r3, r0
     a00:	str	r3, [fp, #-8]
     a04:	ldr	r3, [fp, #-8]
     a08:	cmp	r3, #0
     a0c:	moveq	r3, #1
     a10:	movne	r3, #0
     a14:	uxtb	r3, r3
     a18:	cmp	r3, #0
     a1c:	beq	a24 <rb_strdup+0x50>
     a20:	bl	794 <rb_outofmemory@plt>
     a24:	ldr	r1, [fp, #-16]
     a28:	ldr	r0, [fp, #-8]
     a2c:	bl	7b8 <strcpy@plt>
     a30:	ldr	r3, [fp, #-8]
     a34:	mov	r0, r3
     a38:	sub	sp, fp, #4
     a3c:	pop	{fp, pc}

00000a40 <m_oper>:
     a40:	push	{r4, fp, lr}
     a44:	add	fp, sp, #8
     a48:	sub	sp, sp, #52	; 0x34
     a4c:	str	r0, [fp, #-32]	; 0xffffffe0
     a50:	str	r1, [fp, #-36]	; 0xffffffdc
     a54:	str	r2, [fp, #-40]	; 0xffffffd8
     a58:	str	r3, [fp, #-44]	; 0xffffffd4
     a5c:	ldr	r4, [pc, #1152]	; ee4 <m_oper+0x4a4>
     a60:	add	r4, pc, r4
     a64:	ldr	r3, [fp, #4]
     a68:	ldr	r3, [r3, #4]
     a6c:	str	r3, [fp, #-16]
     a70:	ldr	r3, [fp, #4]
     a74:	ldr	r3, [r3, #8]
     a78:	str	r3, [fp, #-20]	; 0xffffffec
     a7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
     a80:	ldr	r3, [r3, #56]	; 0x38
     a84:	and	r3, r3, #4096	; 0x1000
     a88:	cmp	r3, #0
     a8c:	beq	ac0 <m_oper+0x80>
     a90:	ldr	r3, [fp, #-40]	; 0xffffffd8
     a94:	add	r3, r3, #88	; 0x58
     a98:	ldr	r2, [pc, #1096]	; ee8 <m_oper+0x4a8>
     a9c:	ldr	r2, [r4, r2]
     aa0:	add	r2, r2, #88	; 0x58
     aa4:	ldr	r1, [pc, #1088]	; eec <m_oper+0x4ac>
     aa8:	add	r1, pc, r1
     aac:	ldr	r0, [fp, #-40]	; 0xffffffd8
     ab0:	bl	770 <sendto_one@plt>
     ab4:	ldr	r0, [fp, #-40]	; 0xffffffd8
     ab8:	bl	800 <send_oper_motd@plt>
     abc:	b	edc <m_oper+0x49c>
     ac0:	ldr	r3, [fp, #-40]	; 0xffffffd8
     ac4:	ldrd	r2, [r3, #64]	; 0x40
     ac8:	mov	r0, #256	; 0x100
     acc:	mov	r1, #0
     ad0:	and	r2, r2, r0
     ad4:	and	r3, r3, r1
     ad8:	orrs	r3, r2, r3
     adc:	bne	ae8 <m_oper+0xa8>
     ae0:	ldr	r0, [fp, #-40]	; 0xffffffd8
     ae4:	bl	830 <flood_endgrace@plt>
     ae8:	ldr	r3, [fp, #-40]	; 0xffffffd8
     aec:	add	r0, r3, #152	; 0x98
     af0:	ldr	r3, [fp, #-40]	; 0xffffffd8
     af4:	add	r1, r3, #227	; 0xe3
     af8:	ldr	r3, [fp, #-40]	; 0xffffffd8
     afc:	add	r2, r3, #288	; 0x120
     b00:	add	r2, r2, #3
     b04:	ldr	r3, [fp, #-16]
     b08:	bl	83c <find_oper_conf@plt>
     b0c:	str	r0, [fp, #-24]	; 0xffffffe8
     b10:	ldr	r3, [fp, #-24]	; 0xffffffe8
     b14:	cmp	r3, #0
     b18:	bne	bcc <m_oper+0x18c>
     b1c:	ldr	r3, [pc, #972]	; ef0 <m_oper+0x4b0>
     b20:	add	r3, pc, r3
     b24:	mov	r2, r3
     b28:	ldr	r1, [pc, #964]	; ef4 <m_oper+0x4b4>
     b2c:	ldr	r0, [fp, #-40]	; 0xffffffd8
     b30:	bl	80c <sendto_one_numeric@plt>
     b34:	ldr	r3, [fp, #-40]	; 0xffffffd8
     b38:	add	r0, r3, #88	; 0x58
     b3c:	ldr	r3, [fp, #-40]	; 0xffffffd8
     b40:	add	r2, r3, #152	; 0x98
     b44:	ldr	r3, [fp, #-40]	; 0xffffffd8
     b48:	add	r1, r3, #163	; 0xa3
     b4c:	ldr	r3, [fp, #-40]	; 0xffffffd8
     b50:	add	r3, r3, #288	; 0x120
     b54:	add	r3, r3, #3
     b58:	str	r3, [sp, #8]
     b5c:	str	r1, [sp, #4]
     b60:	str	r2, [sp]
     b64:	mov	r3, r0
     b68:	ldr	r2, [fp, #-16]
     b6c:	ldr	r1, [pc, #900]	; ef8 <m_oper+0x4b8>
     b70:	add	r1, pc, r1
     b74:	mov	r0, #4
     b78:	bl	824 <ilog@plt>
     b7c:	ldr	r3, [pc, #888]	; efc <m_oper+0x4bc>
     b80:	ldr	r3, [r4, r3]
     b84:	ldr	r3, [r3, #84]	; 0x54
     b88:	cmp	r3, #0
     b8c:	beq	ec8 <m_oper+0x488>
     b90:	ldr	r3, [fp, #-40]	; 0xffffffd8
     b94:	add	r1, r3, #88	; 0x58
     b98:	ldr	r3, [fp, #-40]	; 0xffffffd8
     b9c:	add	r3, r3, #152	; 0x98
     ba0:	ldr	r2, [fp, #-40]	; 0xffffffd8
     ba4:	add	r2, r2, #163	; 0xa3
     ba8:	str	r2, [sp, #4]
     bac:	str	r3, [sp]
     bb0:	mov	r3, r1
     bb4:	ldr	r2, [pc, #836]	; f00 <m_oper+0x4c0>
     bb8:	add	r2, pc, r2
     bbc:	mov	r1, #256	; 0x100
     bc0:	mov	r0, #256	; 0x100
     bc4:	bl	7a0 <sendto_realops_snomask@plt>
     bc8:	b	ec8 <m_oper+0x488>
     bcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
     bd0:	ldr	r3, [r3, #20]
     bd4:	and	r3, r3, #524288	; 0x80000
     bd8:	cmp	r3, #0
     bdc:	beq	ca4 <m_oper+0x264>
     be0:	ldr	r3, [fp, #-40]	; 0xffffffd8
     be4:	ldr	r3, [r3, #56]	; 0x38
     be8:	and	r3, r3, #16384	; 0x4000
     bec:	cmp	r3, #0
     bf0:	bne	ca4 <m_oper+0x264>
     bf4:	ldr	r3, [pc, #776]	; f04 <m_oper+0x4c4>
     bf8:	add	r3, pc, r3
     bfc:	mov	r2, r3
     c00:	ldr	r1, [pc, #748]	; ef4 <m_oper+0x4b4>
     c04:	ldr	r0, [fp, #-40]	; 0xffffffd8
     c08:	bl	80c <sendto_one_numeric@plt>
     c0c:	ldr	r3, [fp, #-40]	; 0xffffffd8
     c10:	add	r0, r3, #88	; 0x58
     c14:	ldr	r3, [fp, #-40]	; 0xffffffd8
     c18:	add	r2, r3, #152	; 0x98
     c1c:	ldr	r3, [fp, #-40]	; 0xffffffd8
     c20:	add	r1, r3, #163	; 0xa3
     c24:	ldr	r3, [fp, #-40]	; 0xffffffd8
     c28:	add	r3, r3, #288	; 0x120
     c2c:	add	r3, r3, #3
     c30:	str	r3, [sp, #8]
     c34:	str	r1, [sp, #4]
     c38:	str	r2, [sp]
     c3c:	mov	r3, r0
     c40:	ldr	r2, [fp, #-16]
     c44:	ldr	r1, [pc, #700]	; f08 <m_oper+0x4c8>
     c48:	add	r1, pc, r1
     c4c:	mov	r0, #4
     c50:	bl	824 <ilog@plt>
     c54:	ldr	r3, [pc, #672]	; efc <m_oper+0x4bc>
     c58:	ldr	r3, [r4, r3]
     c5c:	ldr	r3, [r3, #84]	; 0x54
     c60:	cmp	r3, #0
     c64:	beq	ed0 <m_oper+0x490>
     c68:	ldr	r3, [fp, #-40]	; 0xffffffd8
     c6c:	add	r1, r3, #88	; 0x58
     c70:	ldr	r3, [fp, #-40]	; 0xffffffd8
     c74:	add	r3, r3, #152	; 0x98
     c78:	ldr	r2, [fp, #-40]	; 0xffffffd8
     c7c:	add	r2, r2, #163	; 0xa3
     c80:	str	r2, [sp, #4]
     c84:	str	r3, [sp]
     c88:	mov	r3, r1
     c8c:	ldr	r2, [pc, #632]	; f0c <m_oper+0x4cc>
     c90:	add	r2, pc, r2
     c94:	mov	r1, #0
     c98:	mov	r0, #256	; 0x100
     c9c:	bl	7a0 <sendto_realops_snomask@plt>
     ca0:	b	ed0 <m_oper+0x490>
     ca4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     ca8:	ldr	r3, [r3, #16]
     cac:	cmp	r3, #0
     cb0:	beq	d9c <m_oper+0x35c>
     cb4:	ldr	r3, [fp, #-40]	; 0xffffffd8
     cb8:	ldr	r3, [r3, #444]	; 0x1bc
     cbc:	cmp	r3, #0
     cc0:	beq	cec <m_oper+0x2ac>
     cc4:	ldr	r3, [fp, #-40]	; 0xffffffd8
     cc8:	ldr	r2, [r3, #444]	; 0x1bc
     ccc:	ldr	r3, [fp, #-24]	; 0xffffffe8
     cd0:	ldr	r3, [r3, #16]
     cd4:	mov	r1, r3
     cd8:	mov	r0, r2
     cdc:	bl	77c <rb_strcasecmp@plt>
     ce0:	mov	r3, r0
     ce4:	cmp	r3, #0
     ce8:	beq	d9c <m_oper+0x35c>
     cec:	ldr	r3, [pc, #540]	; f10 <m_oper+0x4d0>
     cf0:	add	r3, pc, r3
     cf4:	mov	r2, r3
     cf8:	ldr	r1, [pc, #500]	; ef4 <m_oper+0x4b4>
     cfc:	ldr	r0, [fp, #-40]	; 0xffffffd8
     d00:	bl	80c <sendto_one_numeric@plt>
     d04:	ldr	r3, [fp, #-40]	; 0xffffffd8
     d08:	add	r0, r3, #88	; 0x58
     d0c:	ldr	r3, [fp, #-40]	; 0xffffffd8
     d10:	add	r2, r3, #152	; 0x98
     d14:	ldr	r3, [fp, #-40]	; 0xffffffd8
     d18:	add	r1, r3, #163	; 0xa3
     d1c:	ldr	r3, [fp, #-40]	; 0xffffffd8
     d20:	add	r3, r3, #288	; 0x120
     d24:	add	r3, r3, #3
     d28:	str	r3, [sp, #8]
     d2c:	str	r1, [sp, #4]
     d30:	str	r2, [sp]
     d34:	mov	r3, r0
     d38:	ldr	r2, [fp, #-16]
     d3c:	ldr	r1, [pc, #464]	; f14 <m_oper+0x4d4>
     d40:	add	r1, pc, r1
     d44:	mov	r0, #4
     d48:	bl	824 <ilog@plt>
     d4c:	ldr	r3, [pc, #424]	; efc <m_oper+0x4bc>
     d50:	ldr	r3, [r4, r3]
     d54:	ldr	r3, [r3, #84]	; 0x54
     d58:	cmp	r3, #0
     d5c:	beq	ed8 <m_oper+0x498>
     d60:	ldr	r3, [fp, #-40]	; 0xffffffd8
     d64:	add	r1, r3, #88	; 0x58
     d68:	ldr	r3, [fp, #-40]	; 0xffffffd8
     d6c:	add	r3, r3, #152	; 0x98
     d70:	ldr	r2, [fp, #-40]	; 0xffffffd8
     d74:	add	r2, r2, #163	; 0xa3
     d78:	str	r2, [sp, #4]
     d7c:	str	r3, [sp]
     d80:	mov	r3, r1
     d84:	ldr	r2, [pc, #396]	; f18 <m_oper+0x4d8>
     d88:	add	r2, pc, r2
     d8c:	mov	r1, #0
     d90:	mov	r0, #256	; 0x100
     d94:	bl	7a0 <sendto_realops_snomask@plt>
     d98:	b	ed8 <m_oper+0x498>
     d9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
     da0:	ldr	r0, [fp, #-20]	; 0xffffffec
     da4:	bl	10d8 <match_oper_password>
     da8:	mov	r3, r0
     dac:	cmp	r3, #0
     db0:	beq	e0c <m_oper+0x3cc>
     db4:	ldr	r1, [fp, #-24]	; 0xffffffe8
     db8:	ldr	r0, [fp, #-40]	; 0xffffffd8
     dbc:	bl	848 <oper_up@plt>
     dc0:	ldr	r3, [fp, #-40]	; 0xffffffd8
     dc4:	add	r0, r3, #88	; 0x58
     dc8:	ldr	r3, [fp, #-40]	; 0xffffffd8
     dcc:	add	r2, r3, #152	; 0x98
     dd0:	ldr	r3, [fp, #-40]	; 0xffffffd8
     dd4:	add	r1, r3, #163	; 0xa3
     dd8:	ldr	r3, [fp, #-40]	; 0xffffffd8
     ddc:	add	r3, r3, #288	; 0x120
     de0:	add	r3, r3, #3
     de4:	str	r3, [sp, #8]
     de8:	str	r1, [sp, #4]
     dec:	str	r2, [sp]
     df0:	mov	r3, r0
     df4:	ldr	r2, [fp, #-16]
     df8:	ldr	r1, [pc, #284]	; f1c <m_oper+0x4dc>
     dfc:	add	r1, pc, r1
     e00:	mov	r0, #3
     e04:	bl	824 <ilog@plt>
     e08:	b	edc <m_oper+0x49c>
     e0c:	ldr	r3, [fp, #-40]	; 0xffffffd8
     e10:	add	r3, r3, #88	; 0x58
     e14:	ldr	r2, [pc, #204]	; ee8 <m_oper+0x4a8>
     e18:	ldr	r2, [r4, r2]
     e1c:	add	r2, r2, #88	; 0x58
     e20:	ldr	r1, [pc, #248]	; f20 <m_oper+0x4e0>
     e24:	add	r1, pc, r1
     e28:	ldr	r0, [fp, #-40]	; 0xffffffd8
     e2c:	bl	770 <sendto_one@plt>
     e30:	ldr	r3, [fp, #-40]	; 0xffffffd8
     e34:	add	r0, r3, #88	; 0x58
     e38:	ldr	r3, [fp, #-40]	; 0xffffffd8
     e3c:	add	r2, r3, #152	; 0x98
     e40:	ldr	r3, [fp, #-40]	; 0xffffffd8
     e44:	add	r1, r3, #163	; 0xa3
     e48:	ldr	r3, [fp, #-40]	; 0xffffffd8
     e4c:	add	r3, r3, #288	; 0x120
     e50:	add	r3, r3, #3
     e54:	str	r3, [sp, #8]
     e58:	str	r1, [sp, #4]
     e5c:	str	r2, [sp]
     e60:	mov	r3, r0
     e64:	ldr	r2, [fp, #-16]
     e68:	ldr	r1, [pc, #180]	; f24 <m_oper+0x4e4>
     e6c:	add	r1, pc, r1
     e70:	mov	r0, #4
     e74:	bl	824 <ilog@plt>
     e78:	ldr	r3, [pc, #124]	; efc <m_oper+0x4bc>
     e7c:	ldr	r3, [r4, r3]
     e80:	ldr	r3, [r3, #84]	; 0x54
     e84:	cmp	r3, #0
     e88:	beq	edc <m_oper+0x49c>
     e8c:	ldr	r3, [fp, #-40]	; 0xffffffd8
     e90:	add	r1, r3, #88	; 0x58
     e94:	ldr	r3, [fp, #-40]	; 0xffffffd8
     e98:	add	r3, r3, #152	; 0x98
     e9c:	ldr	r2, [fp, #-40]	; 0xffffffd8
     ea0:	add	r2, r2, #163	; 0xa3
     ea4:	str	r2, [sp, #4]
     ea8:	str	r3, [sp]
     eac:	mov	r3, r1
     eb0:	ldr	r2, [pc, #112]	; f28 <m_oper+0x4e8>
     eb4:	add	r2, pc, r2
     eb8:	mov	r1, #256	; 0x100
     ebc:	mov	r0, #256	; 0x100
     ec0:	bl	7a0 <sendto_realops_snomask@plt>
     ec4:	b	edc <m_oper+0x49c>
     ec8:	nop			; (mov r0, r0)
     ecc:	b	edc <m_oper+0x49c>
     ed0:	nop			; (mov r0, r0)
     ed4:	b	edc <m_oper+0x49c>
     ed8:	nop			; (mov r0, r0)
     edc:	sub	sp, fp, #8
     ee0:	pop	{r4, fp, pc}
     ee4:	.word	0x00011598
     ee8:	.word	0x0000007c
     eec:	.word	0x00000758
     ef0:	.word	0x0000076c
     ef4:	.word	0x000001eb
     ef8:	.word	0x00000758
     efc:	.word	0x00000080
     f00:	.word	0x00000734
     f04:	.word	0x00000694
     f08:	.word	0x000006d8
     f0c:	.word	0x000006c8
     f10:	.word	0x0000059c
     f14:	.word	0x0000064c
     f18:	.word	0x00000654
     f1c:	.word	0x0000062c
     f20:	.word	0x00000620
     f24:	.word	0x0000045c
     f28:	.word	0x000005b0

00000f2c <mc_oper>:
     f2c:	push	{r4, fp, lr}
     f30:	add	fp, sp, #8
     f34:	sub	sp, sp, #44	; 0x2c
     f38:	str	r0, [fp, #-24]	; 0xffffffe8
     f3c:	str	r1, [fp, #-28]	; 0xffffffe4
     f40:	str	r2, [fp, #-32]	; 0xffffffe0
     f44:	str	r3, [fp, #-36]	; 0xffffffdc
     f48:	ldr	r2, [pc, #372]	; 10c4 <mc_oper+0x198>
     f4c:	add	r2, pc, r2
     f50:	ldr	r3, [pc, #368]	; 10c8 <mc_oper+0x19c>
     f54:	ldr	r3, [r2, r3]
     f58:	ldr	r0, [r3]
     f5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
     f60:	ldrb	r3, [r3, #396]	; 0x18c
     f64:	cmp	r3, #0
     f68:	beq	f78 <mc_oper+0x4c>
     f6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
     f70:	add	r3, r3, #396	; 0x18c
     f74:	b	f80 <mc_oper+0x54>
     f78:	ldr	r3, [fp, #-32]	; 0xffffffe0
     f7c:	add	r3, r3, #88	; 0x58
     f80:	ldr	r2, [fp, #4]
     f84:	add	r2, r2, #4
     f88:	ldr	r2, [r2]
     f8c:	ldr	r1, [fp, #4]
     f90:	add	r1, r1, #8
     f94:	ldr	r1, [r1]
     f98:	str	r1, [sp, #12]
     f9c:	str	r2, [sp, #8]
     fa0:	str	r3, [sp, #4]
     fa4:	ldr	r3, [pc, #288]	; 10cc <mc_oper+0x1a0>
     fa8:	add	r3, pc, r3
     fac:	str	r3, [sp]
     fb0:	mov	r3, #0
     fb4:	mov	r2, r0
     fb8:	mov	r1, #0
     fbc:	ldr	r0, [fp, #-28]	; 0xffffffe4
     fc0:	bl	7d0 <sendto_server@plt>
     fc4:	ldr	r3, [fp, #4]
     fc8:	add	r3, r3, #8
     fcc:	ldr	r3, [r3]
     fd0:	mov	r0, r3
     fd4:	bl	788 <privilegeset_get@plt>
     fd8:	str	r0, [fp, #-16]
     fdc:	ldr	r3, [fp, #-16]
     fe0:	cmp	r3, #0
     fe4:	bne	1050 <mc_oper+0x124>
     fe8:	ldr	r3, [fp, #-32]	; 0xffffffe0
     fec:	add	r2, r3, #88	; 0x58
     ff0:	ldr	r3, [fp, #4]
     ff4:	add	r3, r3, #8
     ff8:	ldr	r3, [r3]
     ffc:	str	r3, [sp]
    1000:	mov	r3, r2
    1004:	ldr	r2, [pc, #196]	; 10d0 <mc_oper+0x1a4>
    1008:	add	r2, pc, r2
    100c:	mov	r1, #256	; 0x100
    1010:	mov	r0, #256	; 0x100
    1014:	bl	7a0 <sendto_realops_snomask@plt>
    1018:	ldr	r3, [fp, #4]
    101c:	add	r3, r3, #8
    1020:	ldr	r3, [r3]
    1024:	mov	r2, #0
    1028:	ldr	r1, [pc, #164]	; 10d4 <mc_oper+0x1a8>
    102c:	add	r1, pc, r1
    1030:	mov	r0, r3
    1034:	bl	7ac <privilegeset_set_new@plt>
    1038:	str	r0, [fp, #-16]
    103c:	ldr	r3, [fp, #-16]
    1040:	ldr	r3, [r3]
    1044:	orr	r2, r3, #-2147483648	; 0x80000000
    1048:	ldr	r3, [fp, #-16]
    104c:	str	r2, [r3]
    1050:	ldr	r0, [fp, #-16]
    1054:	bl	7e8 <privilegeset_ref@plt>
    1058:	str	r0, [fp, #-16]
    105c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1060:	ldr	r3, [r3, #24]
    1064:	ldr	r3, [r3, #36]	; 0x24
    1068:	cmp	r3, #0
    106c:	beq	1084 <mc_oper+0x158>
    1070:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1074:	ldr	r3, [r3, #24]
    1078:	ldr	r3, [r3, #36]	; 0x24
    107c:	mov	r0, r3
    1080:	bl	854 <privilegeset_unref@plt>
    1084:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1088:	ldr	r3, [r3, #24]
    108c:	ldr	r2, [fp, #-16]
    1090:	str	r2, [r3, #36]	; 0x24
    1094:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1098:	ldr	r4, [r3, #24]
    109c:	ldr	r3, [fp, #4]
    10a0:	add	r3, r3, #4
    10a4:	ldr	r3, [r3]
    10a8:	mov	r0, r3
    10ac:	bl	9d4 <rb_strdup>
    10b0:	mov	r3, r0
    10b4:	str	r3, [r4, #32]
    10b8:	nop			; (mov r0, r0)
    10bc:	sub	sp, fp, #8
    10c0:	pop	{r4, fp, pc}
    10c4:	.word	0x000110ac
    10c8:	.word	0x0000006c
    10cc:	.word	0x000004e0
    10d0:	.word	0x00000490
    10d4:	.word	0x0000049c

000010d8 <match_oper_password>:
    10d8:	push	{fp, lr}
    10dc:	add	fp, sp, #4
    10e0:	sub	sp, sp, #16
    10e4:	str	r0, [fp, #-16]
    10e8:	str	r1, [fp, #-20]	; 0xffffffec
    10ec:	ldr	r3, [fp, #-20]	; 0xffffffec
    10f0:	ldr	r3, [r3, #12]
    10f4:	cmp	r3, #0
    10f8:	beq	1110 <match_oper_password+0x38>
    10fc:	ldr	r3, [fp, #-20]	; 0xffffffec
    1100:	ldr	r3, [r3, #12]
    1104:	ldrb	r3, [r3]
    1108:	cmp	r3, #0
    110c:	bne	1118 <match_oper_password+0x40>
    1110:	mov	r3, #0
    1114:	b	11b4 <match_oper_password+0xdc>
    1118:	ldr	r3, [fp, #-20]	; 0xffffffec
    111c:	ldr	r3, [r3, #20]
    1120:	and	r3, r3, #1
    1124:	cmp	r3, #0
    1128:	beq	1174 <match_oper_password+0x9c>
    112c:	ldr	r3, [fp, #-16]
    1130:	cmp	r3, #0
    1134:	beq	1164 <match_oper_password+0x8c>
    1138:	ldr	r3, [fp, #-16]
    113c:	ldrb	r3, [r3]
    1140:	cmp	r3, #0
    1144:	beq	1164 <match_oper_password+0x8c>
    1148:	ldr	r3, [fp, #-20]	; 0xffffffec
    114c:	ldr	r3, [r3, #12]
    1150:	mov	r1, r3
    1154:	ldr	r0, [fp, #-16]
    1158:	bl	7c4 <rb_crypt@plt>
    115c:	str	r0, [fp, #-8]
    1160:	b	117c <match_oper_password+0xa4>
    1164:	ldr	r3, [pc, #84]	; 11c0 <match_oper_password+0xe8>
    1168:	add	r3, pc, r3
    116c:	str	r3, [fp, #-8]
    1170:	b	117c <match_oper_password+0xa4>
    1174:	ldr	r3, [fp, #-16]
    1178:	str	r3, [fp, #-8]
    117c:	ldr	r3, [fp, #-8]
    1180:	cmp	r3, #0
    1184:	beq	11b0 <match_oper_password+0xd8>
    1188:	ldr	r3, [fp, #-20]	; 0xffffffec
    118c:	ldr	r3, [r3, #12]
    1190:	mov	r1, r3
    1194:	ldr	r0, [fp, #-8]
    1198:	bl	758 <strcmp@plt>
    119c:	mov	r3, r0
    11a0:	cmp	r3, #0
    11a4:	bne	11b0 <match_oper_password+0xd8>
    11a8:	mov	r3, #1
    11ac:	b	11b4 <match_oper_password+0xdc>
    11b0:	mov	r3, #0
    11b4:	mov	r0, r3
    11b8:	sub	sp, fp, #4
    11bc:	pop	{fp, pc}
    11c0:	.word	0x00000360

Disassembly of section .fini:

000011c4 <_fini>:
    11c4:	push	{r3, lr}
    11c8:	pop	{r3, pc}
