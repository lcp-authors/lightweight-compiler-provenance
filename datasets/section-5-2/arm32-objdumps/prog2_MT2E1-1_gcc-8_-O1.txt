
../repos/prog2/MT2E1-1:     file format elf32-littlearm


Disassembly of section .init:

00010c88 <.init>:
   10c88:	push	{r3, lr}
   10c8c:	bl	10dbc <_start@@Base+0x3c>
   10c90:	pop	{r3, pc}

Disassembly of section .plt:

00010c94 <calloc@plt-0x14>:
   10c94:	push	{lr}		; (str lr, [sp, #-4]!)
   10c98:	ldr	lr, [pc, #4]	; 10ca4 <calloc@plt-0x4>
   10c9c:	add	lr, pc, lr
   10ca0:	ldr	pc, [lr, #8]!
   10ca4:	andeq	r2, r1, ip, asr r3

00010ca8 <calloc@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #73728	; 0x12000
   10cb0:	ldr	pc, [ip, #860]!	; 0x35c

00010cb4 <strcmp@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #73728	; 0x12000
   10cbc:	ldr	pc, [ip, #852]!	; 0x354

00010cc0 <printf@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #73728	; 0x12000
   10cc8:	ldr	pc, [ip, #844]!	; 0x34c

00010ccc <__isoc99_fscanf@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #73728	; 0x12000
   10cd4:	ldr	pc, [ip, #836]!	; 0x344

00010cd8 <fopen@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #73728	; 0x12000
   10ce0:	ldr	pc, [ip, #828]!	; 0x33c

00010ce4 <free@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #73728	; 0x12000
   10cec:	ldr	pc, [ip, #820]!	; 0x334

00010cf0 <memcpy@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #73728	; 0x12000
   10cf8:	ldr	pc, [ip, #812]!	; 0x32c

00010cfc <realloc@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #73728	; 0x12000
   10d04:	ldr	pc, [ip, #804]!	; 0x324

00010d08 <strcpy@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #73728	; 0x12000
   10d10:	ldr	pc, [ip, #796]!	; 0x31c

00010d14 <puts@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #73728	; 0x12000
   10d1c:	ldr	pc, [ip, #788]!	; 0x314

00010d20 <malloc@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #73728	; 0x12000
   10d28:	ldr	pc, [ip, #780]!	; 0x30c

00010d2c <__libc_start_main@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #73728	; 0x12000
   10d34:	ldr	pc, [ip, #772]!	; 0x304

00010d38 <__gmon_start__@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #73728	; 0x12000
   10d40:	ldr	pc, [ip, #764]!	; 0x2fc

00010d44 <strlen@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #73728	; 0x12000
   10d4c:	ldr	pc, [ip, #756]!	; 0x2f4

00010d50 <setvbuf@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #73728	; 0x12000
   10d58:	ldr	pc, [ip, #748]!	; 0x2ec

00010d5c <putchar@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #73728	; 0x12000
   10d64:	ldr	pc, [ip, #740]!	; 0x2e4

00010d68 <fclose@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #73728	; 0x12000
   10d70:	ldr	pc, [ip, #732]!	; 0x2dc

00010d74 <abort@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #73728	; 0x12000
   10d7c:	ldr	pc, [ip, #724]!	; 0x2d4

Disassembly of section .text:

00010d80 <_start@@Base>:
   10d80:	mov	fp, #0
   10d84:	mov	lr, #0
   10d88:	pop	{r1}		; (ldr r1, [sp], #4)
   10d8c:	mov	r2, sp
   10d90:	push	{r2}		; (str r2, [sp, #-4]!)
   10d94:	push	{r0}		; (str r0, [sp, #-4]!)
   10d98:	ldr	ip, [pc, #16]	; 10db0 <_start@@Base+0x30>
   10d9c:	push	{ip}		; (str ip, [sp, #-4]!)
   10da0:	ldr	r0, [pc, #12]	; 10db4 <_start@@Base+0x34>
   10da4:	ldr	r3, [pc, #12]	; 10db8 <_start@@Base+0x38>
   10da8:	bl	10d2c <__libc_start_main@plt>
   10dac:	bl	10d74 <abort@plt>
   10db0:	andeq	r1, r1, r8, asr pc
   10db4:	andeq	r0, r1, r8, asr pc
   10db8:	strdeq	r1, [r1], -r8
   10dbc:	ldr	r3, [pc, #20]	; 10dd8 <_start@@Base+0x58>
   10dc0:	ldr	r2, [pc, #20]	; 10ddc <_start@@Base+0x5c>
   10dc4:	add	r3, pc, r3
   10dc8:	ldr	r2, [r3, r2]
   10dcc:	cmp	r2, #0
   10dd0:	bxeq	lr
   10dd4:	b	10d38 <__gmon_start__@plt>
   10dd8:	andeq	r2, r1, r4, lsr r2
   10ddc:	andeq	r0, r0, r4, asr r0
   10de0:	ldr	r0, [pc, #24]	; 10e00 <_start@@Base+0x80>
   10de4:	ldr	r3, [pc, #24]	; 10e04 <_start@@Base+0x84>
   10de8:	cmp	r3, r0
   10dec:	bxeq	lr
   10df0:	ldr	r3, [pc, #16]	; 10e08 <_start@@Base+0x88>
   10df4:	cmp	r3, #0
   10df8:	bxeq	lr
   10dfc:	bx	r3
   10e00:	andeq	r3, r2, r0, rrx
   10e04:	andeq	r3, r2, r0, rrx
   10e08:	andeq	r0, r0, r0
   10e0c:	ldr	r0, [pc, #36]	; 10e38 <_start@@Base+0xb8>
   10e10:	ldr	r1, [pc, #36]	; 10e3c <_start@@Base+0xbc>
   10e14:	sub	r1, r1, r0
   10e18:	asr	r1, r1, #2
   10e1c:	add	r1, r1, r1, lsr #31
   10e20:	asrs	r1, r1, #1
   10e24:	bxeq	lr
   10e28:	ldr	r3, [pc, #16]	; 10e40 <_start@@Base+0xc0>
   10e2c:	cmp	r3, #0
   10e30:	bxeq	lr
   10e34:	bx	r3
   10e38:	andeq	r3, r2, r0, rrx
   10e3c:	andeq	r3, r2, r0, rrx
   10e40:	andeq	r0, r0, r0
   10e44:	push	{r4, lr}
   10e48:	ldr	r4, [pc, #24]	; 10e68 <_start@@Base+0xe8>
   10e4c:	ldrb	r3, [r4]
   10e50:	cmp	r3, #0
   10e54:	popne	{r4, pc}
   10e58:	bl	10de0 <_start@@Base+0x60>
   10e5c:	mov	r3, #1
   10e60:	strb	r3, [r4]
   10e64:	pop	{r4, pc}
   10e68:	andeq	r3, r2, r4, rrx
   10e6c:	b	10e0c <_start@@Base+0x8c>

00010e70 <avl_max_subarvore@@Base>:
   10e70:	strd	r4, [sp, #-16]!
   10e74:	str	r6, [sp, #8]
   10e78:	str	lr, [sp, #12]
   10e7c:	mov	r5, r0
   10e80:	mov	r6, r1
   10e84:	bl	110f0 <avl_nova@@Base>
   10e88:	mov	r4, r0
   10e8c:	mov	r1, r6
   10e90:	mov	r0, r5
   10e94:	bl	11370 <avl_pesquisa@@Base>
   10e98:	str	r0, [r4]
   10e9c:	mov	r0, r4
   10ea0:	bl	11140 <avl_max@@Base>
   10ea4:	mov	r1, r0
   10ea8:	movw	r0, #8040	; 0x1f68
   10eac:	movt	r0, #1
   10eb0:	bl	10cc0 <printf@plt>
   10eb4:	mov	r0, r4
   10eb8:	bl	10ce4 <free@plt>
   10ebc:	ldrd	r4, [sp]
   10ec0:	ldr	r6, [sp, #8]
   10ec4:	add	sp, sp, #12
   10ec8:	pop	{pc}		; (ldr pc, [sp], #4)

00010ecc <tabela_copia@@Base>:
   10ecc:	strd	r4, [sp, #-20]!	; 0xffffffec
   10ed0:	strd	r6, [sp, #8]
   10ed4:	str	lr, [sp, #16]
   10ed8:	sub	sp, sp, #12
   10edc:	mov	r4, r0
   10ee0:	mov	r0, r1
   10ee4:	ldr	r1, [r4]
   10ee8:	bl	11820 <tabela_nova@@Base>
   10eec:	mov	r6, r0
   10ef0:	add	r1, sp, #4
   10ef4:	mov	r0, r4
   10ef8:	bl	11ce8 <tabela_elementos@@Base>
   10efc:	mov	r7, r0
   10f00:	ldr	r3, [sp, #4]
   10f04:	cmp	r3, #0
   10f08:	ble	10f38 <tabela_copia@@Base+0x6c>
   10f0c:	mov	r4, r0
   10f10:	mov	r5, #0
   10f14:	add	r2, r4, #50	; 0x32
   10f18:	mov	r1, r4
   10f1c:	mov	r0, r6
   10f20:	bl	11948 <tabela_adiciona@@Base>
   10f24:	add	r5, r5, #1
   10f28:	add	r4, r4, #150	; 0x96
   10f2c:	ldr	r3, [sp, #4]
   10f30:	cmp	r3, r5
   10f34:	bgt	10f14 <tabela_copia@@Base+0x48>
   10f38:	mov	r0, r7
   10f3c:	bl	10ce4 <free@plt>
   10f40:	mov	r0, r6
   10f44:	add	sp, sp, #12
   10f48:	ldrd	r4, [sp]
   10f4c:	ldrd	r6, [sp, #8]
   10f50:	add	sp, sp, #16
   10f54:	pop	{pc}		; (ldr pc, [sp], #4)

00010f58 <main@@Base>:
   10f58:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10f5c:	strd	r6, [sp, #8]
   10f60:	str	r8, [sp, #16]
   10f64:	str	lr, [sp, #20]
   10f68:	sub	sp, sp, #504	; 0x1f8
   10f6c:	movw	r0, #12384	; 0x3060
   10f70:	movt	r0, #2
   10f74:	mov	r3, #0
   10f78:	mov	r2, #2
   10f7c:	mov	r1, r3
   10f80:	ldr	r0, [r0]
   10f84:	bl	10d50 <setvbuf@plt>
   10f88:	movw	r4, #8044	; 0x1f6c
   10f8c:	movt	r4, #1
   10f90:	mov	r1, r4
   10f94:	movw	r0, #8048	; 0x1f70
   10f98:	movt	r0, #1
   10f9c:	bl	10cd8 <fopen@plt>
   10fa0:	mov	r7, r0
   10fa4:	mov	r1, r4
   10fa8:	movw	r0, #8060	; 0x1f7c
   10fac:	movt	r0, #1
   10fb0:	bl	10cd8 <fopen@plt>
   10fb4:	mov	r6, r0
   10fb8:	movw	r0, #8072	; 0x1f88
   10fbc:	movt	r0, #1
   10fc0:	bl	10d14 <puts@plt>
   10fc4:	bl	110f0 <avl_nova@@Base>
   10fc8:	mov	r4, r0
   10fcc:	movw	r5, #8040	; 0x1f68
   10fd0:	movt	r5, #1
   10fd4:	add	r2, sp, #4
   10fd8:	mov	r1, r5
   10fdc:	mov	r0, r7
   10fe0:	bl	10ccc <__isoc99_fscanf@plt>
   10fe4:	cmp	r0, #1
   10fe8:	bne	10ffc <main@@Base+0xa4>
   10fec:	add	r1, sp, #4
   10ff0:	mov	r0, r4
   10ff4:	bl	114c8 <avl_insere@@Base>
   10ff8:	b	10fd4 <main@@Base+0x7c>
   10ffc:	movw	r0, #8092	; 0x1f9c
   11000:	movt	r0, #1
   11004:	bl	10cc0 <printf@plt>
   11008:	mov	r0, r4
   1100c:	bl	117f4 <avl_imprime@@Base>
   11010:	movw	r0, #8112	; 0x1fb0
   11014:	movt	r0, #1
   11018:	bl	10cc0 <printf@plt>
   1101c:	movw	r1, #8136	; 0x1fc8
   11020:	movt	r1, #1
   11024:	mov	r0, r4
   11028:	bl	10e70 <avl_max_subarvore@@Base>
   1102c:	mov	r0, r4
   11030:	bl	11738 <avl_apaga@@Base>
   11034:	movw	r0, #8140	; 0x1fcc
   11038:	movt	r0, #1
   1103c:	bl	10d14 <puts@plt>
   11040:	movw	r1, #7656	; 0x1de8
   11044:	movt	r1, #1
   11048:	movw	r0, #601	; 0x259
   1104c:	bl	11820 <tabela_nova@@Base>
   11050:	mov	r4, r0
   11054:	movw	r5, #8040	; 0x1f68
   11058:	movt	r5, #1
   1105c:	movw	r8, #8088	; 0x1f98
   11060:	movt	r8, #1
   11064:	b	11078 <main@@Base+0x120>
   11068:	mov	r2, r8
   1106c:	add	r1, sp, #4
   11070:	mov	r0, r4
   11074:	bl	11948 <tabela_adiciona@@Base>
   11078:	add	r2, sp, #4
   1107c:	mov	r1, r5
   11080:	mov	r0, r6
   11084:	bl	10ccc <__isoc99_fscanf@plt>
   11088:	cmp	r0, #1
   1108c:	beq	11068 <main@@Base+0x110>
   11090:	mov	r0, r4
   11094:	bl	11e20 <mostraTabela@@Base>
   11098:	movw	r1, #619	; 0x26b
   1109c:	mov	r0, r4
   110a0:	bl	10ecc <tabela_copia@@Base>
   110a4:	subs	r5, r0, #0
   110a8:	beq	110b4 <main@@Base+0x15c>
   110ac:	mov	r0, r5
   110b0:	bl	11e20 <mostraTabela@@Base>
   110b4:	mov	r0, r4
   110b8:	bl	118b4 <tabela_apaga@@Base>
   110bc:	mov	r0, r5
   110c0:	bl	118b4 <tabela_apaga@@Base>
   110c4:	mov	r0, r7
   110c8:	bl	10d68 <fclose@plt>
   110cc:	mov	r0, r6
   110d0:	bl	10d68 <fclose@plt>
   110d4:	mov	r0, #0
   110d8:	add	sp, sp, #504	; 0x1f8
   110dc:	ldrd	r4, [sp]
   110e0:	ldrd	r6, [sp, #8]
   110e4:	ldr	r8, [sp, #16]
   110e8:	add	sp, sp, #20
   110ec:	pop	{pc}		; (ldr pc, [sp], #4)

000110f0 <avl_nova@@Base>:
   110f0:	str	r4, [sp, #-8]!
   110f4:	str	lr, [sp, #4]
   110f8:	mov	r0, #4
   110fc:	bl	10d20 <malloc@plt>
   11100:	cmp	r0, #0
   11104:	movne	r3, #0
   11108:	strne	r3, [r0]
   1110c:	ldr	r4, [sp]
   11110:	add	sp, sp, #4
   11114:	pop	{pc}		; (ldr pc, [sp], #4)

00011118 <avl_min@@Base>:
   11118:	cmp	r0, #0
   1111c:	beq	1113c <avl_min@@Base+0x24>
   11120:	ldr	r3, [r0]
   11124:	b	1112c <avl_min@@Base+0x14>
   11128:	mov	r3, r2
   1112c:	ldr	r2, [r3, #4]
   11130:	cmp	r2, #0
   11134:	bne	11128 <avl_min@@Base+0x10>
   11138:	ldr	r0, [r3]
   1113c:	bx	lr

00011140 <avl_max@@Base>:
   11140:	cmp	r0, #0
   11144:	beq	11164 <avl_max@@Base+0x24>
   11148:	ldr	r3, [r0]
   1114c:	b	11154 <avl_max@@Base+0x14>
   11150:	mov	r3, r2
   11154:	ldr	r2, [r3, #8]
   11158:	cmp	r2, #0
   1115c:	bne	11150 <avl_max@@Base+0x10>
   11160:	ldr	r0, [r3]
   11164:	bx	lr

00011168 <avl_altura@@Base>:
   11168:	cmp	r0, #0
   1116c:	ldrne	r0, [r0, #12]
   11170:	mvneq	r0, #0
   11174:	bx	lr

00011178 <max@@Base>:
   11178:	cmp	r1, r0
   1117c:	movge	r0, r1
   11180:	bx	lr

00011184 <avl_novo_no@@Base>:
   11184:	strd	r4, [sp, #-16]!
   11188:	str	r6, [sp, #8]
   1118c:	str	lr, [sp, #12]
   11190:	mov	r5, r0
   11194:	mov	r0, #16
   11198:	bl	10d20 <malloc@plt>
   1119c:	mov	r4, r0
   111a0:	mov	r0, r5
   111a4:	bl	10d44 <strlen@plt>
   111a8:	add	r0, r0, #1
   111ac:	bl	10d20 <malloc@plt>
   111b0:	str	r0, [r4]
   111b4:	mov	r1, r5
   111b8:	bl	10d08 <strcpy@plt>
   111bc:	mov	r3, #0
   111c0:	str	r3, [r4, #4]
   111c4:	str	r3, [r4, #8]
   111c8:	str	r3, [r4, #12]
   111cc:	mov	r0, r4
   111d0:	ldrd	r4, [sp]
   111d4:	ldr	r6, [sp, #8]
   111d8:	add	sp, sp, #12
   111dc:	pop	{pc}		; (ldr pc, [sp], #4)

000111e0 <roda_direita@@Base>:
   111e0:	ldr	r3, [r0, #4]
   111e4:	ldr	r2, [r3, #8]
   111e8:	str	r0, [r3, #8]
   111ec:	str	r2, [r0, #4]
   111f0:	cmp	r2, #0
   111f4:	ldrne	r1, [r2, #12]
   111f8:	mvneq	r1, #0
   111fc:	ldr	r2, [r0, #8]
   11200:	cmp	r2, #0
   11204:	ldrne	r2, [r2, #12]
   11208:	mvneq	r2, #0
   1120c:	cmp	r2, r1
   11210:	movlt	r2, r1
   11214:	add	r2, r2, #1
   11218:	str	r2, [r0, #12]
   1121c:	ldr	r2, [r3, #4]
   11220:	cmp	r2, #0
   11224:	ldrne	r1, [r2, #12]
   11228:	mvneq	r1, #0
   1122c:	ldr	r2, [r3, #8]
   11230:	cmp	r2, #0
   11234:	ldrne	r2, [r2, #12]
   11238:	mvneq	r2, #0
   1123c:	cmp	r2, r1
   11240:	movlt	r2, r1
   11244:	add	r2, r2, #1
   11248:	str	r2, [r3, #12]
   1124c:	mov	r0, r3
   11250:	bx	lr

00011254 <roda_esquerda@@Base>:
   11254:	ldr	r3, [r0, #8]
   11258:	ldr	r1, [r3, #4]
   1125c:	str	r0, [r3, #4]
   11260:	str	r1, [r0, #8]
   11264:	ldr	r2, [r0, #4]
   11268:	cmp	r2, #0
   1126c:	ldrne	ip, [r2, #12]
   11270:	mvneq	ip, #0
   11274:	cmp	r1, #0
   11278:	ldrne	r2, [r1, #12]
   1127c:	mvneq	r2, #0
   11280:	cmp	r2, ip
   11284:	movlt	r2, ip
   11288:	add	r2, r2, #1
   1128c:	str	r2, [r0, #12]
   11290:	ldr	r2, [r3, #4]
   11294:	cmp	r2, #0
   11298:	ldrne	r1, [r2, #12]
   1129c:	mvneq	r1, #0
   112a0:	ldr	r2, [r3, #8]
   112a4:	cmp	r2, #0
   112a8:	ldrne	r2, [r2, #12]
   112ac:	mvneq	r2, #0
   112b0:	cmp	r2, r1
   112b4:	movlt	r2, r1
   112b8:	add	r2, r2, #1
   112bc:	str	r2, [r3, #12]
   112c0:	mov	r0, r3
   112c4:	bx	lr

000112c8 <calc_balanceamento@@Base>:
   112c8:	cmp	r0, #0
   112cc:	beq	112f8 <calc_balanceamento@@Base+0x30>
   112d0:	ldr	r3, [r0, #8]
   112d4:	cmp	r3, #0
   112d8:	ldrne	r3, [r3, #12]
   112dc:	mvneq	r3, #0
   112e0:	ldr	r2, [r0, #4]
   112e4:	cmp	r2, #0
   112e8:	ldrne	r0, [r2, #12]
   112ec:	mvneq	r0, #0
   112f0:	sub	r0, r3, r0
   112f4:	bx	lr
   112f8:	mov	r0, #0
   112fc:	bx	lr

00011300 <avl_pesquisa_impl@@Base>:
   11300:	strd	r4, [sp, #-16]!
   11304:	str	r6, [sp, #8]
   11308:	str	lr, [sp, #12]
   1130c:	subs	r4, r0, #0
   11310:	beq	11334 <avl_pesquisa_impl@@Base+0x34>
   11314:	mov	r5, r1
   11318:	ldr	r1, [r4]
   1131c:	mov	r0, r5
   11320:	bl	10cb4 <strcmp@plt>
   11324:	cmp	r0, #0
   11328:	blt	11348 <avl_pesquisa_impl@@Base+0x48>
   1132c:	cmp	r0, #0
   11330:	bgt	1135c <avl_pesquisa_impl@@Base+0x5c>
   11334:	mov	r0, r4
   11338:	ldrd	r4, [sp]
   1133c:	ldr	r6, [sp, #8]
   11340:	add	sp, sp, #12
   11344:	pop	{pc}		; (ldr pc, [sp], #4)
   11348:	mov	r1, r5
   1134c:	ldr	r0, [r4, #4]
   11350:	bl	11300 <avl_pesquisa_impl@@Base>
   11354:	mov	r4, r0
   11358:	b	11334 <avl_pesquisa_impl@@Base+0x34>
   1135c:	mov	r1, r5
   11360:	ldr	r0, [r4, #8]
   11364:	bl	11300 <avl_pesquisa_impl@@Base>
   11368:	mov	r4, r0
   1136c:	b	11334 <avl_pesquisa_impl@@Base+0x34>

00011370 <avl_pesquisa@@Base>:
   11370:	cmp	r1, #0
   11374:	cmpne	r0, #0
   11378:	beq	11398 <avl_pesquisa@@Base+0x28>
   1137c:	str	r4, [sp, #-8]!
   11380:	str	lr, [sp, #4]
   11384:	ldr	r0, [r0]
   11388:	bl	11300 <avl_pesquisa_impl@@Base>
   1138c:	ldr	r4, [sp]
   11390:	add	sp, sp, #4
   11394:	pop	{pc}		; (ldr pc, [sp], #4)
   11398:	mov	r0, #0
   1139c:	bx	lr

000113a0 <avl_insere_impl@@Base>:
   113a0:	strd	r4, [sp, #-16]!
   113a4:	str	r6, [sp, #8]
   113a8:	str	lr, [sp, #12]
   113ac:	mov	r5, r1
   113b0:	subs	r4, r0, #0
   113b4:	beq	11450 <avl_insere_impl@@Base+0xb0>
   113b8:	ldr	r1, [r4]
   113bc:	mov	r0, r5
   113c0:	bl	10cb4 <strcmp@plt>
   113c4:	cmp	r0, #0
   113c8:	blt	1145c <avl_insere_impl@@Base+0xbc>
   113cc:	cmp	r0, #0
   113d0:	movle	r0, r4
   113d4:	ble	11440 <avl_insere_impl@@Base+0xa0>
   113d8:	mov	r1, r5
   113dc:	ldr	r0, [r4, #8]
   113e0:	bl	113a0 <avl_insere_impl@@Base>
   113e4:	str	r0, [r4, #8]
   113e8:	ldr	r6, [r4, #4]
   113ec:	cmp	r6, #0
   113f0:	ldrne	r2, [r6, #12]
   113f4:	mvneq	r2, #0
   113f8:	ldr	r5, [r4, #8]
   113fc:	cmp	r5, #0
   11400:	ldrne	r3, [r5, #12]
   11404:	mvneq	r3, #0
   11408:	cmp	r3, r2
   1140c:	movlt	r3, r2
   11410:	add	r3, r3, #1
   11414:	str	r3, [r4, #12]
   11418:	mov	r0, r4
   1141c:	bl	112c8 <calc_balanceamento@@Base>
   11420:	cmp	r0, #1
   11424:	ble	11488 <avl_insere_impl@@Base+0xe8>
   11428:	mov	r0, r5
   1142c:	bl	112c8 <calc_balanceamento@@Base>
   11430:	cmp	r0, #0
   11434:	blt	11470 <avl_insere_impl@@Base+0xd0>
   11438:	mov	r0, r4
   1143c:	bl	11254 <roda_esquerda@@Base>
   11440:	ldrd	r4, [sp]
   11444:	ldr	r6, [sp, #8]
   11448:	add	sp, sp, #12
   1144c:	pop	{pc}		; (ldr pc, [sp], #4)
   11450:	mov	r0, r1
   11454:	bl	11184 <avl_novo_no@@Base>
   11458:	b	11440 <avl_insere_impl@@Base+0xa0>
   1145c:	mov	r1, r5
   11460:	ldr	r0, [r4, #4]
   11464:	bl	113a0 <avl_insere_impl@@Base>
   11468:	str	r0, [r4, #4]
   1146c:	b	113e8 <avl_insere_impl@@Base+0x48>
   11470:	mov	r0, r5
   11474:	bl	111e0 <roda_direita@@Base>
   11478:	str	r0, [r4, #8]
   1147c:	mov	r0, r4
   11480:	bl	11254 <roda_esquerda@@Base>
   11484:	b	11440 <avl_insere_impl@@Base+0xa0>
   11488:	cmn	r0, #1
   1148c:	movge	r0, r4
   11490:	bge	11440 <avl_insere_impl@@Base+0xa0>
   11494:	mov	r0, r6
   11498:	bl	112c8 <calc_balanceamento@@Base>
   1149c:	cmp	r0, #0
   114a0:	ble	114bc <avl_insere_impl@@Base+0x11c>
   114a4:	mov	r0, r6
   114a8:	bl	11254 <roda_esquerda@@Base>
   114ac:	str	r0, [r4, #4]
   114b0:	mov	r0, r4
   114b4:	bl	111e0 <roda_direita@@Base>
   114b8:	b	11440 <avl_insere_impl@@Base+0xa0>
   114bc:	mov	r0, r4
   114c0:	bl	111e0 <roda_direita@@Base>
   114c4:	b	11440 <avl_insere_impl@@Base+0xa0>

000114c8 <avl_insere@@Base>:
   114c8:	cmp	r1, #0
   114cc:	cmpne	r0, #0
   114d0:	beq	114fc <avl_insere@@Base+0x34>
   114d4:	str	r4, [sp, #-8]!
   114d8:	str	lr, [sp, #4]
   114dc:	mov	r4, r0
   114e0:	ldr	r0, [r0]
   114e4:	bl	113a0 <avl_insere_impl@@Base>
   114e8:	str	r0, [r4]
   114ec:	mov	r0, #0
   114f0:	ldr	r4, [sp]
   114f4:	add	sp, sp, #4
   114f8:	pop	{pc}		; (ldr pc, [sp], #4)
   114fc:	mvn	r0, #0
   11500:	bx	lr

00011504 <avl_no_valormin@@Base>:
   11504:	b	1150c <avl_no_valormin@@Base+0x8>
   11508:	mov	r0, r3
   1150c:	ldr	r3, [r0, #4]
   11510:	cmp	r3, #0
   11514:	bne	11508 <avl_no_valormin@@Base+0x4>
   11518:	bx	lr

0001151c <avl_no_valormax@@Base>:
   1151c:	b	11524 <avl_no_valormax@@Base+0x8>
   11520:	mov	r0, r3
   11524:	ldr	r3, [r0, #8]
   11528:	cmp	r3, #0
   1152c:	bne	11520 <avl_no_valormax@@Base+0x4>
   11530:	bx	lr

00011534 <avl_remove_impl@@Base>:
   11534:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11538:	strd	r6, [sp, #8]
   1153c:	str	r8, [sp, #16]
   11540:	str	lr, [sp, #20]
   11544:	subs	r4, r0, #0
   11548:	moveq	r5, r4
   1154c:	beq	11658 <avl_remove_impl@@Base+0x124>
   11550:	mov	r5, r1
   11554:	ldr	r7, [r4]
   11558:	mov	r1, r7
   1155c:	mov	r0, r5
   11560:	bl	10cb4 <strcmp@plt>
   11564:	cmp	r0, #0
   11568:	blt	115d8 <avl_remove_impl@@Base+0xa4>
   1156c:	cmp	r0, #0
   11570:	bgt	115ec <avl_remove_impl@@Base+0xb8>
   11574:	ldr	r5, [r4, #4]
   11578:	cmp	r5, #0
   1157c:	beq	11670 <avl_remove_impl@@Base+0x13c>
   11580:	ldr	r6, [r4, #8]
   11584:	cmp	r6, #0
   11588:	bne	11694 <avl_remove_impl@@Base+0x160>
   1158c:	ldr	r0, [r5]
   11590:	bl	10d44 <strlen@plt>
   11594:	add	r1, r0, #1
   11598:	mov	r0, r7
   1159c:	bl	10cfc <realloc@plt>
   115a0:	str	r0, [r4]
   115a4:	ldr	r1, [r5]
   115a8:	bl	10d08 <strcpy@plt>
   115ac:	ldr	r3, [r5, #4]
   115b0:	str	r3, [r4, #4]
   115b4:	ldr	r3, [r5, #8]
   115b8:	str	r3, [r4, #8]
   115bc:	ldr	r3, [r5, #12]
   115c0:	str	r3, [r4, #12]
   115c4:	ldr	r0, [r5]
   115c8:	bl	10ce4 <free@plt>
   115cc:	mov	r0, r5
   115d0:	bl	10ce4 <free@plt>
   115d4:	b	115fc <avl_remove_impl@@Base+0xc8>
   115d8:	mov	r1, r5
   115dc:	ldr	r0, [r4, #4]
   115e0:	bl	11534 <avl_remove_impl@@Base>
   115e4:	str	r0, [r4, #4]
   115e8:	b	115fc <avl_remove_impl@@Base+0xc8>
   115ec:	mov	r1, r5
   115f0:	ldr	r0, [r4, #8]
   115f4:	bl	11534 <avl_remove_impl@@Base>
   115f8:	str	r0, [r4, #8]
   115fc:	ldr	r6, [r4, #4]
   11600:	cmp	r6, #0
   11604:	ldrne	r2, [r6, #12]
   11608:	mvneq	r2, #0
   1160c:	ldr	r5, [r4, #8]
   11610:	cmp	r5, #0
   11614:	ldrne	r3, [r5, #12]
   11618:	mvneq	r3, #0
   1161c:	cmp	r3, r2
   11620:	movlt	r3, r2
   11624:	add	r3, r3, #1
   11628:	str	r3, [r4, #12]
   1162c:	mov	r0, r4
   11630:	bl	112c8 <calc_balanceamento@@Base>
   11634:	cmp	r0, #1
   11638:	ble	116f0 <avl_remove_impl@@Base+0x1bc>
   1163c:	mov	r0, r5
   11640:	bl	112c8 <calc_balanceamento@@Base>
   11644:	cmp	r0, #0
   11648:	blt	116d4 <avl_remove_impl@@Base+0x1a0>
   1164c:	mov	r0, r4
   11650:	bl	11254 <roda_esquerda@@Base>
   11654:	mov	r5, r0
   11658:	mov	r0, r5
   1165c:	ldrd	r4, [sp]
   11660:	ldrd	r6, [sp, #8]
   11664:	ldr	r8, [sp, #16]
   11668:	add	sp, sp, #20
   1166c:	pop	{pc}		; (ldr pc, [sp], #4)
   11670:	ldr	r5, [r4, #8]
   11674:	cmp	r5, #0
   11678:	bne	1158c <avl_remove_impl@@Base+0x58>
   1167c:	ldr	r0, [r4]
   11680:	bl	10ce4 <free@plt>
   11684:	mov	r0, r4
   11688:	bl	10ce4 <free@plt>
   1168c:	b	11658 <avl_remove_impl@@Base+0x124>
   11690:	mov	r6, r3
   11694:	ldr	r3, [r6, #4]
   11698:	cmp	r3, #0
   1169c:	bne	11690 <avl_remove_impl@@Base+0x15c>
   116a0:	ldr	r0, [r6]
   116a4:	bl	10d44 <strlen@plt>
   116a8:	add	r1, r0, #1
   116ac:	mov	r0, r7
   116b0:	bl	10cfc <realloc@plt>
   116b4:	str	r0, [r4]
   116b8:	ldr	r1, [r6]
   116bc:	bl	10d08 <strcpy@plt>
   116c0:	ldr	r1, [r6]
   116c4:	ldr	r0, [r4, #8]
   116c8:	bl	11534 <avl_remove_impl@@Base>
   116cc:	str	r0, [r4, #8]
   116d0:	b	115fc <avl_remove_impl@@Base+0xc8>
   116d4:	mov	r0, r5
   116d8:	bl	111e0 <roda_direita@@Base>
   116dc:	str	r0, [r4, #8]
   116e0:	mov	r0, r4
   116e4:	bl	11254 <roda_esquerda@@Base>
   116e8:	mov	r5, r0
   116ec:	b	11658 <avl_remove_impl@@Base+0x124>
   116f0:	cmn	r0, #1
   116f4:	movge	r5, r4
   116f8:	bge	11658 <avl_remove_impl@@Base+0x124>
   116fc:	mov	r0, r6
   11700:	bl	112c8 <calc_balanceamento@@Base>
   11704:	cmp	r0, #0
   11708:	ble	11728 <avl_remove_impl@@Base+0x1f4>
   1170c:	mov	r0, r6
   11710:	bl	11254 <roda_esquerda@@Base>
   11714:	str	r0, [r4, #4]
   11718:	mov	r0, r4
   1171c:	bl	111e0 <roda_direita@@Base>
   11720:	mov	r5, r0
   11724:	b	11658 <avl_remove_impl@@Base+0x124>
   11728:	mov	r0, r4
   1172c:	bl	111e0 <roda_direita@@Base>
   11730:	mov	r5, r0
   11734:	b	11658 <avl_remove_impl@@Base+0x124>

00011738 <avl_apaga@@Base>:
   11738:	str	r4, [sp, #-8]!
   1173c:	str	lr, [sp, #4]
   11740:	subs	r4, r0, #0
   11744:	beq	11770 <avl_apaga@@Base+0x38>
   11748:	ldr	r0, [r4]
   1174c:	cmp	r0, #0
   11750:	beq	11768 <avl_apaga@@Base+0x30>
   11754:	ldr	r1, [r0]
   11758:	bl	11534 <avl_remove_impl@@Base>
   1175c:	str	r0, [r4]
   11760:	cmp	r0, #0
   11764:	bne	11754 <avl_apaga@@Base+0x1c>
   11768:	mov	r0, r4
   1176c:	bl	10ce4 <free@plt>
   11770:	ldr	r4, [sp]
   11774:	add	sp, sp, #4
   11778:	pop	{pc}		; (ldr pc, [sp], #4)

0001177c <avl_remove@@Base>:
   1177c:	cmp	r1, #0
   11780:	cmpne	r0, #0
   11784:	beq	117b0 <avl_remove@@Base+0x34>
   11788:	str	r4, [sp, #-8]!
   1178c:	str	lr, [sp, #4]
   11790:	mov	r4, r0
   11794:	ldr	r0, [r0]
   11798:	bl	11534 <avl_remove_impl@@Base>
   1179c:	str	r0, [r4]
   117a0:	mov	r0, #0
   117a4:	ldr	r4, [sp]
   117a8:	add	sp, sp, #4
   117ac:	pop	{pc}		; (ldr pc, [sp], #4)
   117b0:	mvn	r0, #0
   117b4:	bx	lr

000117b8 <avl_preordem_impl@@Base>:
   117b8:	str	r4, [sp, #-8]!
   117bc:	str	lr, [sp, #4]
   117c0:	subs	r4, r0, #0
   117c4:	beq	117e8 <avl_preordem_impl@@Base+0x30>
   117c8:	ldr	r1, [r4]
   117cc:	movw	r0, #8160	; 0x1fe0
   117d0:	movt	r0, #1
   117d4:	bl	10cc0 <printf@plt>
   117d8:	ldr	r0, [r4, #4]
   117dc:	bl	117b8 <avl_preordem_impl@@Base>
   117e0:	ldr	r0, [r4, #8]
   117e4:	bl	117b8 <avl_preordem_impl@@Base>
   117e8:	ldr	r4, [sp]
   117ec:	add	sp, sp, #4
   117f0:	pop	{pc}		; (ldr pc, [sp], #4)

000117f4 <avl_imprime@@Base>:
   117f4:	cmp	r0, #0
   117f8:	bxeq	lr
   117fc:	str	r4, [sp, #-8]!
   11800:	str	lr, [sp, #4]
   11804:	ldr	r0, [r0]
   11808:	bl	117b8 <avl_preordem_impl@@Base>
   1180c:	mov	r0, #10
   11810:	bl	10d5c <putchar@plt>
   11814:	ldr	r4, [sp]
   11818:	add	sp, sp, #4
   1181c:	pop	{pc}		; (ldr pc, [sp], #4)

00011820 <tabela_nova@@Base>:
   11820:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11824:	strd	r6, [sp, #8]
   11828:	str	r8, [sp, #16]
   1182c:	str	lr, [sp, #20]
   11830:	subs	r5, r0, #0
   11834:	movle	r3, #1
   11838:	movgt	r3, #0
   1183c:	mov	r6, r1
   11840:	cmp	r1, #0
   11844:	movne	r1, r3
   11848:	moveq	r1, #1
   1184c:	cmp	r1, #0
   11850:	movne	r4, #0
   11854:	bne	1188c <tabela_nova@@Base+0x6c>
   11858:	mov	r0, #12
   1185c:	bl	10d20 <malloc@plt>
   11860:	subs	r4, r0, #0
   11864:	beq	1188c <tabela_nova@@Base+0x6c>
   11868:	mov	r1, #4
   1186c:	mov	r0, r5
   11870:	bl	10ca8 <calloc@plt>
   11874:	mov	r7, r0
   11878:	str	r0, [r4, #4]
   1187c:	cmp	r0, #0
   11880:	strne	r5, [r4, #8]
   11884:	strne	r6, [r4]
   11888:	beq	118a4 <tabela_nova@@Base+0x84>
   1188c:	mov	r0, r4
   11890:	ldrd	r4, [sp]
   11894:	ldrd	r6, [sp, #8]
   11898:	ldr	r8, [sp, #16]
   1189c:	add	sp, sp, #20
   118a0:	pop	{pc}		; (ldr pc, [sp], #4)
   118a4:	mov	r0, r4
   118a8:	bl	10ce4 <free@plt>
   118ac:	mov	r4, r7
   118b0:	b	1188c <tabela_nova@@Base+0x6c>

000118b4 <tabela_apaga@@Base>:
   118b4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   118b8:	strd	r6, [sp, #8]
   118bc:	str	r8, [sp, #16]
   118c0:	str	lr, [sp, #20]
   118c4:	subs	r7, r0, #0
   118c8:	beq	11934 <tabela_apaga@@Base+0x80>
   118cc:	ldr	r3, [r7, #8]
   118d0:	cmp	r3, #0
   118d4:	ble	11924 <tabela_apaga@@Base+0x70>
   118d8:	mov	r6, #0
   118dc:	b	118f0 <tabela_apaga@@Base+0x3c>
   118e0:	add	r6, r6, #1
   118e4:	ldr	r3, [r7, #8]
   118e8:	cmp	r3, r6
   118ec:	ble	11924 <tabela_apaga@@Base+0x70>
   118f0:	ldr	r3, [r7, #4]
   118f4:	ldr	r4, [r3, r6, lsl #2]
   118f8:	cmp	r4, #0
   118fc:	beq	118e0 <tabela_apaga@@Base+0x2c>
   11900:	ldr	r5, [r4, #4]
   11904:	ldr	r0, [r4]
   11908:	bl	10ce4 <free@plt>
   1190c:	mov	r0, r4
   11910:	bl	10ce4 <free@plt>
   11914:	mov	r4, r5
   11918:	cmp	r5, #0
   1191c:	bne	11900 <tabela_apaga@@Base+0x4c>
   11920:	b	118e0 <tabela_apaga@@Base+0x2c>
   11924:	ldr	r0, [r7, #4]
   11928:	bl	10ce4 <free@plt>
   1192c:	mov	r0, r7
   11930:	bl	10ce4 <free@plt>
   11934:	ldrd	r4, [sp]
   11938:	ldrd	r6, [sp, #8]
   1193c:	ldr	r8, [sp, #16]
   11940:	add	sp, sp, #20
   11944:	pop	{pc}		; (ldr pc, [sp], #4)

00011948 <tabela_adiciona@@Base>:
   11948:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1194c:	strd	r6, [sp, #8]
   11950:	strd	r8, [sp, #16]
   11954:	str	sl, [sp, #24]
   11958:	str	lr, [sp, #28]
   1195c:	mov	r8, r2
   11960:	clz	r2, r2
   11964:	lsr	r2, r2, #5
   11968:	cmp	r1, #0
   1196c:	moveq	r2, #1
   11970:	cmp	r0, #0
   11974:	moveq	r2, #1
   11978:	cmp	r2, #0
   1197c:	bne	11a20 <tabela_adiciona@@Base+0xd8>
   11980:	mov	r6, r1
   11984:	mov	r4, r0
   11988:	ldr	r3, [r0]
   1198c:	ldr	r1, [r0, #8]
   11990:	mov	r0, r6
   11994:	blx	r3
   11998:	mov	r9, r0
   1199c:	ldr	sl, [r4, #4]
   119a0:	ldr	r4, [sl, r0, lsl #2]
   119a4:	cmp	r4, #0
   119a8:	beq	119d0 <tabela_adiciona@@Base+0x88>
   119ac:	ldr	r5, [r4]
   119b0:	mov	r1, r6
   119b4:	mov	r0, r5
   119b8:	bl	10cb4 <strcmp@plt>
   119bc:	subs	r7, r0, #0
   119c0:	beq	11a38 <tabela_adiciona@@Base+0xf0>
   119c4:	ldr	r4, [r4, #4]
   119c8:	cmp	r4, #0
   119cc:	bne	119ac <tabela_adiciona@@Base+0x64>
   119d0:	mov	r0, #8
   119d4:	bl	10d20 <malloc@plt>
   119d8:	subs	r5, r0, #0
   119dc:	beq	11a30 <tabela_adiciona@@Base+0xe8>
   119e0:	mov	r0, #150	; 0x96
   119e4:	bl	10d20 <malloc@plt>
   119e8:	mov	r4, r0
   119ec:	str	r0, [r5]
   119f0:	cmp	r0, #0
   119f4:	beq	11a28 <tabela_adiciona@@Base+0xe0>
   119f8:	mov	r1, r6
   119fc:	bl	10d08 <strcpy@plt>
   11a00:	mov	r1, r8
   11a04:	add	r0, r4, #50	; 0x32
   11a08:	bl	10d08 <strcpy@plt>
   11a0c:	ldr	r3, [sl, r9, lsl #2]
   11a10:	str	r3, [r5, #4]
   11a14:	str	r5, [sl, r9, lsl #2]
   11a18:	mov	r7, #0
   11a1c:	b	11a44 <tabela_adiciona@@Base+0xfc>
   11a20:	mvn	r7, #1
   11a24:	b	11a44 <tabela_adiciona@@Base+0xfc>
   11a28:	mvn	r7, #1
   11a2c:	b	11a44 <tabela_adiciona@@Base+0xfc>
   11a30:	mvn	r7, #1
   11a34:	b	11a44 <tabela_adiciona@@Base+0xfc>
   11a38:	mov	r1, r8
   11a3c:	add	r0, r5, #50	; 0x32
   11a40:	bl	10d08 <strcpy@plt>
   11a44:	mov	r0, r7
   11a48:	ldrd	r4, [sp]
   11a4c:	ldrd	r6, [sp, #8]
   11a50:	ldrd	r8, [sp, #16]
   11a54:	ldr	sl, [sp, #24]
   11a58:	add	sp, sp, #28
   11a5c:	pop	{pc}		; (ldr pc, [sp], #4)

00011a60 <tabela_remove@@Base>:
   11a60:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11a64:	strd	r6, [sp, #8]
   11a68:	strd	r8, [sp, #16]
   11a6c:	str	sl, [sp, #24]
   11a70:	str	lr, [sp, #28]
   11a74:	subs	r4, r0, #0
   11a78:	beq	11b18 <tabela_remove@@Base+0xb8>
   11a7c:	mov	r5, r1
   11a80:	ldr	r3, [r4]
   11a84:	ldr	r1, [r4, #8]
   11a88:	mov	r0, r5
   11a8c:	blx	r3
   11a90:	mov	r9, r0
   11a94:	ldr	r8, [r4, #4]
   11a98:	ldr	r4, [r8, r0, lsl #2]
   11a9c:	cmp	r4, #0
   11aa0:	beq	11b20 <tabela_remove@@Base+0xc0>
   11aa4:	mov	r7, #0
   11aa8:	b	11ab0 <tabela_remove@@Base+0x50>
   11aac:	mov	r4, r3
   11ab0:	mov	r1, r5
   11ab4:	ldr	r0, [r4]
   11ab8:	bl	10cb4 <strcmp@plt>
   11abc:	subs	r6, r0, #0
   11ac0:	beq	11adc <tabela_remove@@Base+0x7c>
   11ac4:	ldr	r3, [r4, #4]
   11ac8:	mov	r7, r4
   11acc:	cmp	r3, #0
   11ad0:	bne	11aac <tabela_remove@@Base+0x4c>
   11ad4:	mvn	r6, #2
   11ad8:	b	11afc <tabela_remove@@Base+0x9c>
   11adc:	cmp	r7, #0
   11ae0:	ldr	r3, [r4, #4]
   11ae4:	strne	r3, [r7, #4]
   11ae8:	streq	r3, [r8, r9, lsl #2]
   11aec:	ldr	r0, [r4]
   11af0:	bl	10ce4 <free@plt>
   11af4:	mov	r0, r4
   11af8:	bl	10ce4 <free@plt>
   11afc:	mov	r0, r6
   11b00:	ldrd	r4, [sp]
   11b04:	ldrd	r6, [sp, #8]
   11b08:	ldrd	r8, [sp, #16]
   11b0c:	ldr	sl, [sp, #24]
   11b10:	add	sp, sp, #28
   11b14:	pop	{pc}		; (ldr pc, [sp], #4)
   11b18:	mvn	r6, #1
   11b1c:	b	11afc <tabela_remove@@Base+0x9c>
   11b20:	mvn	r6, #2
   11b24:	b	11afc <tabela_remove@@Base+0x9c>

00011b28 <tabela_valor@@Base>:
   11b28:	strd	r4, [sp, #-16]!
   11b2c:	str	r6, [sp, #8]
   11b30:	str	lr, [sp, #12]
   11b34:	subs	r4, r0, #0
   11b38:	beq	11b8c <tabela_valor@@Base+0x64>
   11b3c:	mov	r6, r1
   11b40:	ldr	r3, [r4]
   11b44:	ldr	r1, [r4, #8]
   11b48:	mov	r0, r6
   11b4c:	blx	r3
   11b50:	ldr	r3, [r4, #4]
   11b54:	ldr	r4, [r3, r0, lsl #2]
   11b58:	cmp	r4, #0
   11b5c:	beq	11b8c <tabela_valor@@Base+0x64>
   11b60:	ldr	r5, [r4]
   11b64:	mov	r1, r6
   11b68:	mov	r0, r5
   11b6c:	bl	10cb4 <strcmp@plt>
   11b70:	cmp	r0, #0
   11b74:	beq	11b88 <tabela_valor@@Base+0x60>
   11b78:	ldr	r4, [r4, #4]
   11b7c:	cmp	r4, #0
   11b80:	bne	11b60 <tabela_valor@@Base+0x38>
   11b84:	b	11b8c <tabela_valor@@Base+0x64>
   11b88:	add	r4, r5, #50	; 0x32
   11b8c:	mov	r0, r4
   11b90:	ldrd	r4, [sp]
   11b94:	ldr	r6, [sp, #8]
   11b98:	add	sp, sp, #12
   11b9c:	pop	{pc}		; (ldr pc, [sp], #4)

00011ba0 <tabela_existe@@Base>:
   11ba0:	cmp	r0, #0
   11ba4:	cmpne	r1, #0
   11ba8:	beq	11bd0 <tabela_existe@@Base+0x30>
   11bac:	str	r4, [sp, #-8]!
   11bb0:	str	lr, [sp, #4]
   11bb4:	bl	11b28 <tabela_valor@@Base>
   11bb8:	cmp	r0, #0
   11bbc:	movne	r0, #1
   11bc0:	mvneq	r0, #2
   11bc4:	ldr	r4, [sp]
   11bc8:	add	sp, sp, #4
   11bcc:	pop	{pc}		; (ldr pc, [sp], #4)
   11bd0:	mvn	r0, #1
   11bd4:	bx	lr

00011bd8 <tabela_esvazia@@Base>:
   11bd8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11bdc:	strd	r6, [sp, #8]
   11be0:	strd	r8, [sp, #16]
   11be4:	str	sl, [sp, #24]
   11be8:	str	lr, [sp, #28]
   11bec:	subs	r7, r0, #0
   11bf0:	beq	11c78 <tabela_esvazia@@Base+0xa0>
   11bf4:	ldr	r3, [r7, #8]
   11bf8:	cmp	r3, #0
   11bfc:	ble	11c80 <tabela_esvazia@@Base+0xa8>
   11c00:	mov	r6, #0
   11c04:	mov	r9, r6
   11c08:	b	11c24 <tabela_esvazia@@Base+0x4c>
   11c0c:	ldr	r3, [r7, #4]
   11c10:	str	r9, [r3, r8]
   11c14:	add	r6, r6, #1
   11c18:	ldr	r3, [r7, #8]
   11c1c:	cmp	r3, r6
   11c20:	ble	11c5c <tabela_esvazia@@Base+0x84>
   11c24:	lsl	r8, r6, #2
   11c28:	ldr	r3, [r7, #4]
   11c2c:	ldr	r4, [r3, r6, lsl #2]
   11c30:	cmp	r4, #0
   11c34:	beq	11c0c <tabela_esvazia@@Base+0x34>
   11c38:	ldr	r5, [r4, #4]
   11c3c:	ldr	r0, [r4]
   11c40:	bl	10ce4 <free@plt>
   11c44:	mov	r0, r4
   11c48:	bl	10ce4 <free@plt>
   11c4c:	mov	r4, r5
   11c50:	cmp	r5, #0
   11c54:	bne	11c38 <tabela_esvazia@@Base+0x60>
   11c58:	b	11c0c <tabela_esvazia@@Base+0x34>
   11c5c:	mov	r0, #0
   11c60:	ldrd	r4, [sp]
   11c64:	ldrd	r6, [sp, #8]
   11c68:	ldrd	r8, [sp, #16]
   11c6c:	ldr	sl, [sp, #24]
   11c70:	add	sp, sp, #28
   11c74:	pop	{pc}		; (ldr pc, [sp], #4)
   11c78:	mvn	r0, #1
   11c7c:	b	11c60 <tabela_esvazia@@Base+0x88>
   11c80:	mov	r0, #0
   11c84:	b	11c60 <tabela_esvazia@@Base+0x88>

00011c88 <tabela_numelementos@@Base>:
   11c88:	cmp	r0, #0
   11c8c:	beq	11cd8 <tabela_numelementos@@Base+0x50>
   11c90:	ldr	r1, [r0, #8]
   11c94:	cmp	r1, #0
   11c98:	ble	11ce0 <tabela_numelementos@@Base+0x58>
   11c9c:	ldr	r2, [r0, #4]
   11ca0:	add	r1, r2, r1, lsl #2
   11ca4:	mov	r0, #0
   11ca8:	b	11cb4 <tabela_numelementos@@Base+0x2c>
   11cac:	cmp	r2, r1
   11cb0:	beq	11cd4 <tabela_numelementos@@Base+0x4c>
   11cb4:	ldr	r3, [r2], #4
   11cb8:	cmp	r3, #0
   11cbc:	beq	11cac <tabela_numelementos@@Base+0x24>
   11cc0:	ldr	r3, [r3, #4]
   11cc4:	add	r0, r0, #1
   11cc8:	cmp	r3, #0
   11ccc:	bne	11cc0 <tabela_numelementos@@Base+0x38>
   11cd0:	b	11cac <tabela_numelementos@@Base+0x24>
   11cd4:	bx	lr
   11cd8:	mvn	r0, #1
   11cdc:	bx	lr
   11ce0:	mov	r0, #0
   11ce4:	bx	lr

00011ce8 <tabela_elementos@@Base>:
   11ce8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11cec:	strd	r6, [sp, #8]
   11cf0:	strd	r8, [sp, #16]
   11cf4:	strd	sl, [sp, #24]
   11cf8:	str	lr, [sp, #32]
   11cfc:	sub	sp, sp, #4
   11d00:	mov	r9, r0
   11d04:	mov	r4, r1
   11d08:	bl	11c88 <tabela_numelementos@@Base>
   11d0c:	str	r0, [r4]
   11d10:	cmp	r0, #0
   11d14:	movle	fp, #0
   11d18:	ble	11d94 <tabela_elementos@@Base+0xac>
   11d1c:	mov	r3, #150	; 0x96
   11d20:	mul	r0, r3, r0
   11d24:	bl	10d20 <malloc@plt>
   11d28:	subs	fp, r0, #0
   11d2c:	beq	11d94 <tabela_elementos@@Base+0xac>
   11d30:	ldr	sl, [r9, #8]
   11d34:	cmp	sl, #0
   11d38:	ble	11d94 <tabela_elementos@@Base+0xac>
   11d3c:	mov	r6, #0
   11d40:	mov	r8, r6
   11d44:	mov	r7, #150	; 0x96
   11d48:	b	11d58 <tabela_elementos@@Base+0x70>
   11d4c:	add	r8, r8, #1
   11d50:	cmp	r8, sl
   11d54:	beq	11d94 <tabela_elementos@@Base+0xac>
   11d58:	ldr	r3, [r9, #4]
   11d5c:	ldr	r4, [r3, r8, lsl #2]
   11d60:	cmp	r4, #0
   11d64:	beq	11d4c <tabela_elementos@@Base+0x64>
   11d68:	mla	r5, r7, r6, fp
   11d6c:	add	r6, r6, #1
   11d70:	mov	r2, r7
   11d74:	ldr	r1, [r4]
   11d78:	mov	r0, r5
   11d7c:	bl	10cf0 <memcpy@plt>
   11d80:	ldr	r4, [r4, #4]
   11d84:	add	r5, r5, #150	; 0x96
   11d88:	cmp	r4, #0
   11d8c:	bne	11d6c <tabela_elementos@@Base+0x84>
   11d90:	b	11d4c <tabela_elementos@@Base+0x64>
   11d94:	mov	r0, fp
   11d98:	add	sp, sp, #4
   11d9c:	ldrd	r4, [sp]
   11da0:	ldrd	r6, [sp, #8]
   11da4:	ldrd	r8, [sp, #16]
   11da8:	ldrd	sl, [sp, #24]
   11dac:	add	sp, sp, #32
   11db0:	pop	{pc}		; (ldr pc, [sp], #4)

00011db4 <hash_krm@@Base>:
   11db4:	ldrb	r3, [r0]
   11db8:	cmp	r3, #0
   11dbc:	beq	11de0 <hash_krm@@Base+0x2c>
   11dc0:	mov	r2, #7
   11dc4:	add	r2, r2, r3
   11dc8:	ldrb	r3, [r0, #1]!
   11dcc:	cmp	r3, #0
   11dd0:	bne	11dc4 <hash_krm@@Base+0x10>
   11dd4:	udiv	r0, r2, r1
   11dd8:	mls	r0, r1, r0, r2
   11ddc:	bx	lr
   11de0:	mov	r2, #7
   11de4:	b	11dd4 <hash_krm@@Base+0x20>

00011de8 <hash_djbm@@Base>:
   11de8:	ldrb	r2, [r0]
   11dec:	cmp	r2, #0
   11df0:	beq	11e18 <hash_djbm@@Base+0x30>
   11df4:	movw	r3, #5347	; 0x14e3
   11df8:	rsb	r3, r3, r3, lsl #5
   11dfc:	eor	r3, r3, r2
   11e00:	ldrb	r2, [r0, #1]!
   11e04:	cmp	r2, #0
   11e08:	bne	11df8 <hash_djbm@@Base+0x10>
   11e0c:	udiv	r0, r3, r1
   11e10:	mls	r0, r1, r0, r3
   11e14:	bx	lr
   11e18:	movw	r3, #5347	; 0x14e3
   11e1c:	b	11e0c <hash_djbm@@Base+0x24>

00011e20 <mostraTabela@@Base>:
   11e20:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11e24:	strd	r6, [sp, #8]
   11e28:	strd	r8, [sp, #16]
   11e2c:	str	sl, [sp, #24]
   11e30:	str	lr, [sp, #28]
   11e34:	mov	r7, r0
   11e38:	bl	11c88 <tabela_numelementos@@Base>
   11e3c:	mov	r1, r0
   11e40:	movw	r0, #8164	; 0x1fe4
   11e44:	movt	r0, #1
   11e48:	bl	10cc0 <printf@plt>
   11e4c:	ldr	r3, [r7, #8]
   11e50:	cmp	r3, #0
   11e54:	ble	11ed8 <mostraTabela@@Base+0xb8>
   11e58:	mov	r5, #0
   11e5c:	movw	r8, #8200	; 0x2008
   11e60:	movt	r8, #1
   11e64:	movw	r6, #8208	; 0x2010
   11e68:	movt	r6, #1
   11e6c:	mov	r9, #10
   11e70:	b	11e8c <mostraTabela@@Base+0x6c>
   11e74:	mov	r0, r9
   11e78:	bl	10d5c <putchar@plt>
   11e7c:	add	r5, r5, #1
   11e80:	ldr	r3, [r7, #8]
   11e84:	cmp	r3, r5
   11e88:	ble	11ed8 <mostraTabela@@Base+0xb8>
   11e8c:	ldr	r3, [r7, #4]
   11e90:	ldr	r3, [r3, r5, lsl #2]
   11e94:	cmp	r3, #0
   11e98:	beq	11e7c <mostraTabela@@Base+0x5c>
   11e9c:	mov	r1, r5
   11ea0:	mov	r0, r8
   11ea4:	bl	10cc0 <printf@plt>
   11ea8:	ldr	r3, [r7, #4]
   11eac:	ldr	r4, [r3, r5, lsl #2]
   11eb0:	cmp	r4, #0
   11eb4:	beq	11e74 <mostraTabela@@Base+0x54>
   11eb8:	ldr	r1, [r4]
   11ebc:	add	r2, r1, #50	; 0x32
   11ec0:	mov	r0, r6
   11ec4:	bl	10cc0 <printf@plt>
   11ec8:	ldr	r4, [r4, #4]
   11ecc:	cmp	r4, #0
   11ed0:	bne	11eb8 <mostraTabela@@Base+0x98>
   11ed4:	b	11e74 <mostraTabela@@Base+0x54>
   11ed8:	mov	r0, #10
   11edc:	bl	10d5c <putchar@plt>
   11ee0:	ldrd	r4, [sp]
   11ee4:	ldrd	r6, [sp, #8]
   11ee8:	ldrd	r8, [sp, #16]
   11eec:	ldr	sl, [sp, #24]
   11ef0:	add	sp, sp, #28
   11ef4:	pop	{pc}		; (ldr pc, [sp], #4)

00011ef8 <__libc_csu_init@@Base>:
   11ef8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11efc:	mov	r7, r0
   11f00:	ldr	r6, [pc, #72]	; 11f50 <__libc_csu_init@@Base+0x58>
   11f04:	ldr	r5, [pc, #72]	; 11f54 <__libc_csu_init@@Base+0x5c>
   11f08:	add	r6, pc, r6
   11f0c:	add	r5, pc, r5
   11f10:	sub	r6, r6, r5
   11f14:	mov	r8, r1
   11f18:	mov	r9, r2
   11f1c:	bl	10c88 <calloc@plt-0x20>
   11f20:	asrs	r6, r6, #2
   11f24:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11f28:	mov	r4, #0
   11f2c:	add	r4, r4, #1
   11f30:	ldr	r3, [r5], #4
   11f34:	mov	r2, r9
   11f38:	mov	r1, r8
   11f3c:	mov	r0, r7
   11f40:	blx	r3
   11f44:	cmp	r6, r4
   11f48:	bne	11f2c <__libc_csu_init@@Base+0x34>
   11f4c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11f50:	andeq	r1, r1, r4
   11f54:	strdeq	r0, [r1], -ip

00011f58 <__libc_csu_fini@@Base>:
   11f58:	bx	lr

Disassembly of section .fini:

00011f5c <.fini>:
   11f5c:	push	{r3, lr}
   11f60:	pop	{r3, pc}
