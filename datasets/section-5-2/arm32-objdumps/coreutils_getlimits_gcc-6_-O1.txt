
../repos/coreutils/src/getlimits:     file format elf32-littlearm


Disassembly of section .init:

00010bc0 <.init>:
   10bc0:	push	{r3, lr}
   10bc4:	bl	10e6c <__snprintf_chk@plt+0x4c>
   10bc8:	pop	{r3, pc}

Disassembly of section .plt:

00010bcc <calloc@plt-0x14>:
   10bcc:	push	{lr}		; (str lr, [sp, #-4]!)
   10bd0:	ldr	lr, [pc, #4]	; 10bdc <calloc@plt-0x4>
   10bd4:	add	lr, pc, lr
   10bd8:	ldr	pc, [lr, #8]!
   10bdc:	andeq	r6, r1, r4, lsr #8

00010be0 <calloc@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #90112	; 0x16000
   10be8:	ldr	pc, [ip, #1060]!	; 0x424

00010bec <fputs_unlocked@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #90112	; 0x16000
   10bf4:	ldr	pc, [ip, #1052]!	; 0x41c

00010bf8 <raise@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #90112	; 0x16000
   10c00:	ldr	pc, [ip, #1044]!	; 0x414

00010c04 <strcmp@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #90112	; 0x16000
   10c0c:	ldr	pc, [ip, #1036]!	; 0x40c

00010c10 <fflush@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #90112	; 0x16000
   10c18:	ldr	pc, [ip, #1028]!	; 0x404

00010c1c <free@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #90112	; 0x16000
   10c24:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c28 <_exit@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #90112	; 0x16000
   10c30:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c34 <memcpy@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #90112	; 0x16000
   10c3c:	ldr	pc, [ip, #1004]!	; 0x3ec

00010c40 <mbsinit@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #90112	; 0x16000
   10c48:	ldr	pc, [ip, #996]!	; 0x3e4

00010c4c <strtold@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #90112	; 0x16000
   10c54:	ldr	pc, [ip, #988]!	; 0x3dc

00010c58 <memcmp@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #90112	; 0x16000
   10c60:	ldr	pc, [ip, #980]!	; 0x3d4

00010c64 <fputc_unlocked@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #90112	; 0x16000
   10c6c:	ldr	pc, [ip, #972]!	; 0x3cc

00010c70 <dcgettext@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #90112	; 0x16000
   10c78:	ldr	pc, [ip, #964]!	; 0x3c4

00010c7c <realloc@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #90112	; 0x16000
   10c84:	ldr	pc, [ip, #956]!	; 0x3bc

00010c88 <textdomain@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #90112	; 0x16000
   10c90:	ldr	pc, [ip, #948]!	; 0x3b4

00010c94 <iswprint@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #90112	; 0x16000
   10c9c:	ldr	pc, [ip, #940]!	; 0x3ac

00010ca0 <fwrite@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #90112	; 0x16000
   10ca8:	ldr	pc, [ip, #932]!	; 0x3a4

00010cac <lseek64@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #90112	; 0x16000
   10cb4:	ldr	pc, [ip, #924]!	; 0x39c

00010cb8 <__ctype_get_mb_cur_max@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #90112	; 0x16000
   10cc0:	ldr	pc, [ip, #916]!	; 0x394

00010cc4 <__fpending@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #90112	; 0x16000
   10ccc:	ldr	pc, [ip, #908]!	; 0x38c

00010cd0 <mbrtowc@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #90112	; 0x16000
   10cd8:	ldr	pc, [ip, #900]!	; 0x384

00010cdc <error@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #90112	; 0x16000
   10ce4:	ldr	pc, [ip, #892]!	; 0x37c

00010ce8 <strtof@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #90112	; 0x16000
   10cf0:	ldr	pc, [ip, #884]!	; 0x374

00010cf4 <puts@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #90112	; 0x16000
   10cfc:	ldr	pc, [ip, #876]!	; 0x36c

00010d00 <malloc@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #90112	; 0x16000
   10d08:	ldr	pc, [ip, #868]!	; 0x364

00010d0c <__libc_start_main@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #90112	; 0x16000
   10d14:	ldr	pc, [ip, #860]!	; 0x35c

00010d18 <__freading@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #90112	; 0x16000
   10d20:	ldr	pc, [ip, #852]!	; 0x354

00010d24 <__gmon_start__@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #90112	; 0x16000
   10d2c:	ldr	pc, [ip, #844]!	; 0x34c

00010d30 <getopt_long@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #90112	; 0x16000
   10d38:	ldr	pc, [ip, #836]!	; 0x344

00010d3c <__ctype_b_loc@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #90112	; 0x16000
   10d44:	ldr	pc, [ip, #828]!	; 0x33c

00010d48 <exit@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #90112	; 0x16000
   10d50:	ldr	pc, [ip, #820]!	; 0x334

00010d54 <strlen@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #90112	; 0x16000
   10d5c:	ldr	pc, [ip, #812]!	; 0x32c

00010d60 <__errno_location@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #90112	; 0x16000
   10d68:	ldr	pc, [ip, #804]!	; 0x324

00010d6c <__sprintf_chk@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #90112	; 0x16000
   10d74:	ldr	pc, [ip, #796]!	; 0x31c

00010d78 <__cxa_atexit@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #90112	; 0x16000
   10d80:	ldr	pc, [ip, #788]!	; 0x314

00010d84 <memset@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #90112	; 0x16000
   10d8c:	ldr	pc, [ip, #780]!	; 0x30c

00010d90 <__printf_chk@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #90112	; 0x16000
   10d98:	ldr	pc, [ip, #772]!	; 0x304

00010d9c <strtod@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #90112	; 0x16000
   10da4:	ldr	pc, [ip, #764]!	; 0x2fc

00010da8 <fileno@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #90112	; 0x16000
   10db0:	ldr	pc, [ip, #756]!	; 0x2f4

00010db4 <__fprintf_chk@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #90112	; 0x16000
   10dbc:	ldr	pc, [ip, #748]!	; 0x2ec

00010dc0 <fclose@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #90112	; 0x16000
   10dc8:	ldr	pc, [ip, #740]!	; 0x2e4

00010dcc <fseeko64@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #90112	; 0x16000
   10dd4:	ldr	pc, [ip, #732]!	; 0x2dc

00010dd8 <setlocale@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #90112	; 0x16000
   10de0:	ldr	pc, [ip, #724]!	; 0x2d4

00010de4 <strrchr@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #90112	; 0x16000
   10dec:	ldr	pc, [ip, #716]!	; 0x2cc

00010df0 <nl_langinfo@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #90112	; 0x16000
   10df8:	ldr	pc, [ip, #708]!	; 0x2c4

00010dfc <bindtextdomain@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #90112	; 0x16000
   10e04:	ldr	pc, [ip, #700]!	; 0x2bc

00010e08 <strncmp@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #90112	; 0x16000
   10e10:	ldr	pc, [ip, #692]!	; 0x2b4

00010e14 <abort@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #90112	; 0x16000
   10e1c:	ldr	pc, [ip, #684]!	; 0x2ac

00010e20 <__snprintf_chk@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #90112	; 0x16000
   10e28:	ldr	pc, [ip, #676]!	; 0x2a4

Disassembly of section .text:

00010e30 <.text>:
   10e30:	mov	fp, #0
   10e34:	mov	lr, #0
   10e38:	pop	{r1}		; (ldr r1, [sp], #4)
   10e3c:	mov	r2, sp
   10e40:	push	{r2}		; (str r2, [sp, #-4]!)
   10e44:	push	{r0}		; (str r0, [sp, #-4]!)
   10e48:	ldr	ip, [pc, #16]	; 10e60 <__snprintf_chk@plt+0x40>
   10e4c:	push	{ip}		; (str ip, [sp, #-4]!)
   10e50:	ldr	r0, [pc, #12]	; 10e64 <__snprintf_chk@plt+0x44>
   10e54:	ldr	r3, [pc, #12]	; 10e68 <__snprintf_chk@plt+0x48>
   10e58:	bl	10d0c <__libc_start_main@plt>
   10e5c:	bl	10e14 <abort@plt>
   10e60:	andeq	r5, r1, r0, ror #7
   10e64:	andeq	r1, r1, ip, lsl #6
   10e68:	andeq	r5, r1, r0, lsl #7
   10e6c:	ldr	r3, [pc, #20]	; 10e88 <__snprintf_chk@plt+0x68>
   10e70:	ldr	r2, [pc, #20]	; 10e8c <__snprintf_chk@plt+0x6c>
   10e74:	add	r3, pc, r3
   10e78:	ldr	r2, [r3, r2]
   10e7c:	cmp	r2, #0
   10e80:	bxeq	lr
   10e84:	b	10d24 <__gmon_start__@plt>
   10e88:	andeq	r6, r1, r4, lsl #3
   10e8c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10e90:	ldr	r3, [pc, #28]	; 10eb4 <__snprintf_chk@plt+0x94>
   10e94:	ldr	r0, [pc, #28]	; 10eb8 <__snprintf_chk@plt+0x98>
   10e98:	sub	r3, r3, r0
   10e9c:	cmp	r3, #6
   10ea0:	bxls	lr
   10ea4:	ldr	r3, [pc, #16]	; 10ebc <__snprintf_chk@plt+0x9c>
   10ea8:	cmp	r3, #0
   10eac:	bxeq	lr
   10eb0:	bx	r3
   10eb4:	andeq	r7, r2, r3, lsr #2
   10eb8:	andeq	r7, r2, r0, lsr #2
   10ebc:	andeq	r0, r0, r0
   10ec0:	ldr	r1, [pc, #36]	; 10eec <__snprintf_chk@plt+0xcc>
   10ec4:	ldr	r0, [pc, #36]	; 10ef0 <__snprintf_chk@plt+0xd0>
   10ec8:	sub	r1, r1, r0
   10ecc:	asr	r1, r1, #2
   10ed0:	add	r1, r1, r1, lsr #31
   10ed4:	asrs	r1, r1, #1
   10ed8:	bxeq	lr
   10edc:	ldr	r3, [pc, #16]	; 10ef4 <__snprintf_chk@plt+0xd4>
   10ee0:	cmp	r3, #0
   10ee4:	bxeq	lr
   10ee8:	bx	r3
   10eec:	andeq	r7, r2, r0, lsr #2
   10ef0:	andeq	r7, r2, r0, lsr #2
   10ef4:	andeq	r0, r0, r0
   10ef8:	push	{r4, lr}
   10efc:	ldr	r4, [pc, #24]	; 10f1c <__snprintf_chk@plt+0xfc>
   10f00:	ldrb	r3, [r4]
   10f04:	cmp	r3, #0
   10f08:	popne	{r4, pc}
   10f0c:	bl	10e90 <__snprintf_chk@plt+0x70>
   10f10:	mov	r3, #1
   10f14:	strb	r3, [r4]
   10f18:	pop	{r4, pc}
   10f1c:	andeq	r7, r2, ip, lsr r1
   10f20:	ldr	r0, [pc, #40]	; 10f50 <__snprintf_chk@plt+0x130>
   10f24:	ldr	r3, [r0]
   10f28:	cmp	r3, #0
   10f2c:	bne	10f34 <__snprintf_chk@plt+0x114>
   10f30:	b	10ec0 <__snprintf_chk@plt+0xa0>
   10f34:	ldr	r3, [pc, #24]	; 10f54 <__snprintf_chk@plt+0x134>
   10f38:	cmp	r3, #0
   10f3c:	beq	10f30 <__snprintf_chk@plt+0x110>
   10f40:	push	{r4, lr}
   10f44:	blx	r3
   10f48:	pop	{r4, lr}
   10f4c:	b	10ec0 <__snprintf_chk@plt+0xa0>
   10f50:	andeq	r6, r2, r4, lsl pc
   10f54:	andeq	r0, r0, r0
   10f58:	push	{lr}		; (str lr, [sp, #-4]!)
   10f5c:	sub	sp, sp, #60	; 0x3c
   10f60:	subs	r6, r0, #0
   10f64:	beq	10fa0 <__snprintf_chk@plt+0x180>
   10f68:	ldr	r3, [pc, #680]	; 11218 <__snprintf_chk@plt+0x3f8>
   10f6c:	ldr	r4, [r3]
   10f70:	mov	r2, #5
   10f74:	ldr	r1, [pc, #672]	; 1121c <__snprintf_chk@plt+0x3fc>
   10f78:	mov	r0, #0
   10f7c:	bl	10c70 <dcgettext@plt>
   10f80:	ldr	r3, [pc, #664]	; 11220 <__snprintf_chk@plt+0x400>
   10f84:	ldr	r3, [r3]
   10f88:	mov	r2, r0
   10f8c:	mov	r1, #1
   10f90:	mov	r0, r4
   10f94:	bl	10db4 <__fprintf_chk@plt>
   10f98:	mov	r0, r6
   10f9c:	bl	10d48 <exit@plt>
   10fa0:	mov	r2, #5
   10fa4:	ldr	r1, [pc, #632]	; 11224 <__snprintf_chk@plt+0x404>
   10fa8:	mov	r0, #0
   10fac:	bl	10c70 <dcgettext@plt>
   10fb0:	ldr	r3, [pc, #616]	; 11220 <__snprintf_chk@plt+0x400>
   10fb4:	ldr	r2, [r3]
   10fb8:	mov	r1, r0
   10fbc:	mov	r0, #1
   10fc0:	bl	10d90 <__printf_chk@plt>
   10fc4:	mov	r2, #5
   10fc8:	ldr	r1, [pc, #600]	; 11228 <__snprintf_chk@plt+0x408>
   10fcc:	mov	r0, #0
   10fd0:	bl	10c70 <dcgettext@plt>
   10fd4:	ldr	r4, [pc, #592]	; 1122c <__snprintf_chk@plt+0x40c>
   10fd8:	ldr	r1, [r4]
   10fdc:	bl	10bec <fputs_unlocked@plt>
   10fe0:	mov	r2, #5
   10fe4:	ldr	r1, [pc, #580]	; 11230 <__snprintf_chk@plt+0x410>
   10fe8:	mov	r0, #0
   10fec:	bl	10c70 <dcgettext@plt>
   10ff0:	ldr	r1, [r4]
   10ff4:	bl	10bec <fputs_unlocked@plt>
   10ff8:	mov	r2, #5
   10ffc:	ldr	r1, [pc, #560]	; 11234 <__snprintf_chk@plt+0x414>
   11000:	mov	r0, #0
   11004:	bl	10c70 <dcgettext@plt>
   11008:	ldr	r1, [r4]
   1100c:	bl	10bec <fputs_unlocked@plt>
   11010:	mov	ip, sp
   11014:	ldr	lr, [pc, #540]	; 11238 <__snprintf_chk@plt+0x418>
   11018:	ldm	lr!, {r0, r1, r2, r3}
   1101c:	stmia	ip!, {r0, r1, r2, r3}
   11020:	ldm	lr!, {r0, r1, r2, r3}
   11024:	stmia	ip!, {r0, r1, r2, r3}
   11028:	ldm	lr!, {r0, r1, r2, r3}
   1102c:	stmia	ip!, {r0, r1, r2, r3}
   11030:	ldm	lr, {r0, r1}
   11034:	stm	ip, {r0, r1}
   11038:	ldr	r1, [sp]
   1103c:	cmp	r1, #0
   11040:	moveq	r4, sp
   11044:	beq	1106c <__snprintf_chk@plt+0x24c>
   11048:	mov	r4, sp
   1104c:	ldr	r5, [pc, #488]	; 1123c <__snprintf_chk@plt+0x41c>
   11050:	mov	r0, r5
   11054:	bl	10c04 <strcmp@plt>
   11058:	cmp	r0, #0
   1105c:	beq	1106c <__snprintf_chk@plt+0x24c>
   11060:	ldr	r1, [r4, #8]!
   11064:	cmp	r1, #0
   11068:	bne	11050 <__snprintf_chk@plt+0x230>
   1106c:	ldr	r4, [r4, #4]
   11070:	cmp	r4, #0
   11074:	beq	11188 <__snprintf_chk@plt+0x368>
   11078:	mov	r2, #5
   1107c:	ldr	r1, [pc, #444]	; 11240 <__snprintf_chk@plt+0x420>
   11080:	mov	r0, #0
   11084:	bl	10c70 <dcgettext@plt>
   11088:	ldr	r3, [pc, #436]	; 11244 <__snprintf_chk@plt+0x424>
   1108c:	ldr	r2, [pc, #436]	; 11248 <__snprintf_chk@plt+0x428>
   11090:	mov	r1, r0
   11094:	mov	r0, #1
   11098:	bl	10d90 <__printf_chk@plt>
   1109c:	mov	r1, #0
   110a0:	mov	r0, #5
   110a4:	bl	10dd8 <setlocale@plt>
   110a8:	cmp	r0, #0
   110ac:	beq	110c4 <__snprintf_chk@plt+0x2a4>
   110b0:	mov	r2, #3
   110b4:	ldr	r1, [pc, #400]	; 1124c <__snprintf_chk@plt+0x42c>
   110b8:	bl	10e08 <strncmp@plt>
   110bc:	cmp	r0, #0
   110c0:	bne	11124 <__snprintf_chk@plt+0x304>
   110c4:	mov	r2, #5
   110c8:	ldr	r1, [pc, #384]	; 11250 <__snprintf_chk@plt+0x430>
   110cc:	mov	r0, #0
   110d0:	bl	10c70 <dcgettext@plt>
   110d4:	ldr	r5, [pc, #352]	; 1123c <__snprintf_chk@plt+0x41c>
   110d8:	mov	r3, r5
   110dc:	ldr	r2, [pc, #352]	; 11244 <__snprintf_chk@plt+0x424>
   110e0:	mov	r1, r0
   110e4:	mov	r0, #1
   110e8:	bl	10d90 <__printf_chk@plt>
   110ec:	mov	r2, #5
   110f0:	ldr	r1, [pc, #348]	; 11254 <__snprintf_chk@plt+0x434>
   110f4:	mov	r0, #0
   110f8:	bl	10c70 <dcgettext@plt>
   110fc:	mov	r1, r0
   11100:	ldr	r2, [pc, #336]	; 11258 <__snprintf_chk@plt+0x438>
   11104:	ldr	r3, [pc, #336]	; 1125c <__snprintf_chk@plt+0x43c>
   11108:	cmp	r4, r5
   1110c:	movne	r3, r2
   11110:	mov	r2, r4
   11114:	mov	r0, #1
   11118:	bl	10d90 <__printf_chk@plt>
   1111c:	b	10f98 <__snprintf_chk@plt+0x178>
   11120:	ldr	r4, [pc, #276]	; 1123c <__snprintf_chk@plt+0x41c>
   11124:	mov	r2, #5
   11128:	ldr	r1, [pc, #304]	; 11260 <__snprintf_chk@plt+0x440>
   1112c:	mov	r0, #0
   11130:	bl	10c70 <dcgettext@plt>
   11134:	ldr	r3, [pc, #240]	; 1122c <__snprintf_chk@plt+0x40c>
   11138:	ldr	r1, [r3]
   1113c:	bl	10bec <fputs_unlocked@plt>
   11140:	b	110c4 <__snprintf_chk@plt+0x2a4>
   11144:	mov	r2, #5
   11148:	ldr	r1, [pc, #256]	; 11250 <__snprintf_chk@plt+0x430>
   1114c:	mov	r0, #0
   11150:	bl	10c70 <dcgettext@plt>
   11154:	ldr	r4, [pc, #224]	; 1123c <__snprintf_chk@plt+0x41c>
   11158:	mov	r3, r4
   1115c:	ldr	r2, [pc, #224]	; 11244 <__snprintf_chk@plt+0x424>
   11160:	mov	r1, r0
   11164:	mov	r0, #1
   11168:	bl	10d90 <__printf_chk@plt>
   1116c:	mov	r2, #5
   11170:	ldr	r1, [pc, #220]	; 11254 <__snprintf_chk@plt+0x434>
   11174:	mov	r0, #0
   11178:	bl	10c70 <dcgettext@plt>
   1117c:	mov	r1, r0
   11180:	ldr	r3, [pc, #212]	; 1125c <__snprintf_chk@plt+0x43c>
   11184:	b	11110 <__snprintf_chk@plt+0x2f0>
   11188:	mov	r2, #5
   1118c:	ldr	r1, [pc, #172]	; 11240 <__snprintf_chk@plt+0x420>
   11190:	mov	r0, #0
   11194:	bl	10c70 <dcgettext@plt>
   11198:	ldr	r3, [pc, #164]	; 11244 <__snprintf_chk@plt+0x424>
   1119c:	ldr	r2, [pc, #164]	; 11248 <__snprintf_chk@plt+0x428>
   111a0:	mov	r1, r0
   111a4:	mov	r0, #1
   111a8:	bl	10d90 <__printf_chk@plt>
   111ac:	mov	r1, #0
   111b0:	mov	r0, #5
   111b4:	bl	10dd8 <setlocale@plt>
   111b8:	cmp	r0, #0
   111bc:	beq	11144 <__snprintf_chk@plt+0x324>
   111c0:	mov	r2, #3
   111c4:	ldr	r1, [pc, #128]	; 1124c <__snprintf_chk@plt+0x42c>
   111c8:	bl	10e08 <strncmp@plt>
   111cc:	cmp	r0, #0
   111d0:	bne	11120 <__snprintf_chk@plt+0x300>
   111d4:	mov	r2, #5
   111d8:	ldr	r1, [pc, #112]	; 11250 <__snprintf_chk@plt+0x430>
   111dc:	mov	r0, #0
   111e0:	bl	10c70 <dcgettext@plt>
   111e4:	ldr	r4, [pc, #80]	; 1123c <__snprintf_chk@plt+0x41c>
   111e8:	mov	r3, r4
   111ec:	ldr	r2, [pc, #80]	; 11244 <__snprintf_chk@plt+0x424>
   111f0:	mov	r1, r0
   111f4:	mov	r0, #1
   111f8:	bl	10d90 <__printf_chk@plt>
   111fc:	mov	r2, #5
   11200:	ldr	r1, [pc, #76]	; 11254 <__snprintf_chk@plt+0x434>
   11204:	mov	r0, #0
   11208:	bl	10c70 <dcgettext@plt>
   1120c:	mov	r1, r0
   11210:	ldr	r3, [pc, #68]	; 1125c <__snprintf_chk@plt+0x43c>
   11214:	b	11110 <__snprintf_chk@plt+0x2f0>
   11218:	andeq	r7, r2, r0, lsr r1
   1121c:	andeq	r5, r1, ip, asr #8
   11220:	andeq	r7, r2, r8, asr #2
   11224:	andeq	r5, r1, r4, ror r4
   11228:	andeq	r5, r1, r0, lsl #9
   1122c:	andeq	r7, r2, r4, lsr r1
   11230:	andeq	r5, r1, ip, asr #9
   11234:	strdeq	r5, [r1], -ip
   11238:	andeq	r5, r1, r8, lsl #8
   1123c:	andeq	r5, r1, r0, asr #8
   11240:	andeq	r5, r1, r4, lsr r5
   11244:	andeq	r5, r1, ip, asr #10
   11248:	andeq	r5, r1, r4, ror r5
   1124c:	andeq	r5, r1, r4, lsl #11
   11250:	ldrdeq	r5, [r1], -r0
   11254:	andeq	r5, r1, ip, ror #11
   11258:	andeq	r5, r1, r8, asr #9
   1125c:	andeq	r5, r1, r4, lsl #20
   11260:	andeq	r5, r1, r8, lsl #11
   11264:	push	{r4, r5, r6, lr}
   11268:	ldrb	r5, [r0, #1]
   1126c:	cmp	r5, #45	; 0x2d
   11270:	movne	r4, #0
   11274:	moveq	r4, #1
   11278:	add	r4, r4, #1
   1127c:	add	r4, r0, r4
   11280:	mov	r0, r4
   11284:	bl	10d54 <strlen@plt>
   11288:	add	r0, r4, r0
   1128c:	mov	r3, #48	; 0x30
   11290:	strb	r3, [r4, #-1]
   11294:	sub	r3, r0, #1
   11298:	ldrb	r2, [r0, #-1]
   1129c:	cmp	r2, #57	; 0x39
   112a0:	bne	112b8 <__snprintf_chk@plt+0x498>
   112a4:	mov	r1, #48	; 0x30
   112a8:	strb	r1, [r3]
   112ac:	ldrb	r2, [r3, #-1]!
   112b0:	cmp	r2, #57	; 0x39
   112b4:	beq	112a8 <__snprintf_chk@plt+0x488>
   112b8:	add	r2, r2, #1
   112bc:	strb	r2, [r3]
   112c0:	cmp	r4, r3
   112c4:	movcc	r0, r4
   112c8:	movcs	r0, r3
   112cc:	cmp	r5, #45	; 0x2d
   112d0:	moveq	r3, #45	; 0x2d
   112d4:	strbeq	r3, [r0, #-1]
   112d8:	subeq	r0, r0, #1
   112dc:	pop	{r4, r5, r6, pc}
   112e0:	push	{lr}		; (str lr, [sp, #-4]!)
   112e4:	sub	sp, sp, #36	; 0x24
   112e8:	mov	r3, #0
   112ec:	mov	r2, #1
   112f0:	mov	r1, #31
   112f4:	mov	r0, sp
   112f8:	bl	11ef0 <__snprintf_chk@plt+0x10d0>
   112fc:	mov	r0, sp
   11300:	bl	10cf4 <puts@plt>
   11304:	add	sp, sp, #36	; 0x24
   11308:	pop	{pc}		; (ldr pc, [sp], #4)
   1130c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11310:	vpush	{d8-d9}
   11314:	sub	sp, sp, #84	; 0x54
   11318:	mov	r6, r0
   1131c:	mov	r4, r1
   11320:	ldr	r0, [r1]
   11324:	bl	12324 <__snprintf_chk@plt+0x1504>
   11328:	ldr	r1, [pc, #2112]	; 11b70 <__snprintf_chk@plt+0xd50>
   1132c:	mov	r0, #6
   11330:	bl	10dd8 <setlocale@plt>
   11334:	ldr	r5, [pc, #2104]	; 11b74 <__snprintf_chk@plt+0xd54>
   11338:	ldr	r1, [pc, #2104]	; 11b78 <__snprintf_chk@plt+0xd58>
   1133c:	mov	r0, r5
   11340:	bl	10dfc <bindtextdomain@plt>
   11344:	mov	r0, r5
   11348:	bl	10c88 <textdomain@plt>
   1134c:	ldr	r0, [pc, #2088]	; 11b7c <__snprintf_chk@plt+0xd5c>
   11350:	bl	153e4 <__snprintf_chk@plt+0x45c4>
   11354:	mov	r3, #0
   11358:	str	r3, [sp, #12]
   1135c:	ldr	r3, [pc, #2076]	; 11b80 <__snprintf_chk@plt+0xd60>
   11360:	str	r3, [sp, #8]
   11364:	ldr	r3, [pc, #2072]	; 11b84 <__snprintf_chk@plt+0xd64>
   11368:	str	r3, [sp, #4]
   1136c:	ldr	r3, [pc, #2068]	; 11b88 <__snprintf_chk@plt+0xd68>
   11370:	str	r3, [sp]
   11374:	ldr	r3, [pc, #2064]	; 11b8c <__snprintf_chk@plt+0xd6c>
   11378:	ldr	r2, [pc, #2064]	; 11b90 <__snprintf_chk@plt+0xd70>
   1137c:	mov	r1, r4
   11380:	mov	r0, r6
   11384:	bl	12198 <__snprintf_chk@plt+0x1378>
   11388:	ldr	r4, [pc, #2052]	; 11b94 <__snprintf_chk@plt+0xd74>
   1138c:	mov	r6, #255	; 0xff
   11390:	mov	r7, #0
   11394:	strd	r6, [sp]
   11398:	mov	r3, r4
   1139c:	mov	r2, #21
   113a0:	mov	r1, #1
   113a4:	add	r0, sp, #57	; 0x39
   113a8:	bl	10d6c <__sprintf_chk@plt>
   113ac:	add	r2, sp, #57	; 0x39
   113b0:	ldr	r1, [pc, #2016]	; 11b98 <__snprintf_chk@plt+0xd78>
   113b4:	mov	r0, #1
   113b8:	bl	10d90 <__printf_chk@plt>
   113bc:	add	r0, sp, #56	; 0x38
   113c0:	bl	11264 <__snprintf_chk@plt+0x444>
   113c4:	mov	r2, r0
   113c8:	ldr	r1, [pc, #1996]	; 11b9c <__snprintf_chk@plt+0xd7c>
   113cc:	mov	r0, #1
   113d0:	bl	10d90 <__printf_chk@plt>
   113d4:	mov	r2, #127	; 0x7f
   113d8:	mov	r3, #0
   113dc:	strd	r2, [sp]
   113e0:	mov	r3, r4
   113e4:	mov	r2, #21
   113e8:	mov	r1, #1
   113ec:	add	r0, sp, #57	; 0x39
   113f0:	bl	10d6c <__sprintf_chk@plt>
   113f4:	add	r2, sp, #57	; 0x39
   113f8:	ldr	r1, [pc, #1952]	; 11ba0 <__snprintf_chk@plt+0xd80>
   113fc:	mov	r0, #1
   11400:	bl	10d90 <__printf_chk@plt>
   11404:	add	r0, sp, #56	; 0x38
   11408:	bl	11264 <__snprintf_chk@plt+0x444>
   1140c:	mov	r2, r0
   11410:	ldr	r1, [pc, #1932]	; 11ba4 <__snprintf_chk@plt+0xd84>
   11414:	mov	r0, #1
   11418:	bl	10d90 <__printf_chk@plt>
   1141c:	ldr	r5, [pc, #1924]	; 11ba8 <__snprintf_chk@plt+0xd88>
   11420:	mvn	r2, #127	; 0x7f
   11424:	mvn	r3, #0
   11428:	strd	r2, [sp]
   1142c:	mov	r3, r5
   11430:	mov	r2, #21
   11434:	mov	r1, #1
   11438:	add	r0, sp, #57	; 0x39
   1143c:	bl	10d6c <__sprintf_chk@plt>
   11440:	add	r2, sp, #57	; 0x39
   11444:	ldr	r1, [pc, #1888]	; 11bac <__snprintf_chk@plt+0xd8c>
   11448:	mov	r0, #1
   1144c:	bl	10d90 <__printf_chk@plt>
   11450:	add	r0, sp, #56	; 0x38
   11454:	bl	11264 <__snprintf_chk@plt+0x444>
   11458:	mov	r2, r0
   1145c:	ldr	r1, [pc, #1868]	; 11bb0 <__snprintf_chk@plt+0xd90>
   11460:	mov	r0, #1
   11464:	bl	10d90 <__printf_chk@plt>
   11468:	strd	r6, [sp]
   1146c:	mov	r3, r4
   11470:	mov	r2, #21
   11474:	mov	r1, #1
   11478:	add	r0, sp, #57	; 0x39
   1147c:	bl	10d6c <__sprintf_chk@plt>
   11480:	add	r2, sp, #57	; 0x39
   11484:	ldr	r1, [pc, #1832]	; 11bb4 <__snprintf_chk@plt+0xd94>
   11488:	mov	r0, #1
   1148c:	bl	10d90 <__printf_chk@plt>
   11490:	add	r0, sp, #56	; 0x38
   11494:	bl	11264 <__snprintf_chk@plt+0x444>
   11498:	mov	r2, r0
   1149c:	ldr	r1, [pc, #1812]	; 11bb8 <__snprintf_chk@plt+0xd98>
   114a0:	mov	r0, #1
   114a4:	bl	10d90 <__printf_chk@plt>
   114a8:	ldr	r2, [pc, #1804]	; 11bbc <__snprintf_chk@plt+0xd9c>
   114ac:	mov	r3, #0
   114b0:	strd	r2, [sp]
   114b4:	mov	r3, r4
   114b8:	mov	r2, #21
   114bc:	mov	r1, #1
   114c0:	add	r0, sp, #57	; 0x39
   114c4:	bl	10d6c <__sprintf_chk@plt>
   114c8:	add	r2, sp, #57	; 0x39
   114cc:	ldr	r1, [pc, #1772]	; 11bc0 <__snprintf_chk@plt+0xda0>
   114d0:	mov	r0, #1
   114d4:	bl	10d90 <__printf_chk@plt>
   114d8:	add	r0, sp, #56	; 0x38
   114dc:	bl	11264 <__snprintf_chk@plt+0x444>
   114e0:	mov	r2, r0
   114e4:	ldr	r1, [pc, #1752]	; 11bc4 <__snprintf_chk@plt+0xda4>
   114e8:	mov	r0, #1
   114ec:	bl	10d90 <__printf_chk@plt>
   114f0:	ldr	r2, [pc, #1744]	; 11bc8 <__snprintf_chk@plt+0xda8>
   114f4:	mvn	r3, #0
   114f8:	strd	r2, [sp]
   114fc:	mov	r3, r5
   11500:	mov	r2, #21
   11504:	mov	r1, #1
   11508:	add	r0, sp, #57	; 0x39
   1150c:	bl	10d6c <__sprintf_chk@plt>
   11510:	add	r2, sp, #57	; 0x39
   11514:	ldr	r1, [pc, #1712]	; 11bcc <__snprintf_chk@plt+0xdac>
   11518:	mov	r0, #1
   1151c:	bl	10d90 <__printf_chk@plt>
   11520:	add	r0, sp, #56	; 0x38
   11524:	bl	11264 <__snprintf_chk@plt+0x444>
   11528:	mov	r2, r0
   1152c:	ldr	r1, [pc, #1692]	; 11bd0 <__snprintf_chk@plt+0xdb0>
   11530:	mov	r0, #1
   11534:	bl	10d90 <__printf_chk@plt>
   11538:	mvn	r8, #-2147483648	; 0x80000000
   1153c:	mov	r9, #0
   11540:	strd	r8, [sp]
   11544:	mov	r3, r4
   11548:	mov	r2, #21
   1154c:	mov	r1, #1
   11550:	add	r0, sp, #57	; 0x39
   11554:	bl	10d6c <__sprintf_chk@plt>
   11558:	add	r2, sp, #57	; 0x39
   1155c:	ldr	r1, [pc, #1648]	; 11bd4 <__snprintf_chk@plt+0xdb4>
   11560:	mov	r0, #1
   11564:	bl	10d90 <__printf_chk@plt>
   11568:	add	r0, sp, #56	; 0x38
   1156c:	bl	11264 <__snprintf_chk@plt+0x444>
   11570:	mov	r2, r0
   11574:	ldr	r1, [pc, #1628]	; 11bd8 <__snprintf_chk@plt+0xdb8>
   11578:	mov	r0, #1
   1157c:	bl	10d90 <__printf_chk@plt>
   11580:	mov	sl, #-2147483648	; 0x80000000
   11584:	mvn	fp, #0
   11588:	strd	sl, [sp]
   1158c:	mov	r3, r5
   11590:	mov	r2, #21
   11594:	mov	r1, #1
   11598:	add	r0, sp, #57	; 0x39
   1159c:	bl	10d6c <__sprintf_chk@plt>
   115a0:	add	r2, sp, #57	; 0x39
   115a4:	ldr	r1, [pc, #1584]	; 11bdc <__snprintf_chk@plt+0xdbc>
   115a8:	mov	r0, #1
   115ac:	bl	10d90 <__printf_chk@plt>
   115b0:	add	r0, sp, #56	; 0x38
   115b4:	bl	11264 <__snprintf_chk@plt+0x444>
   115b8:	mov	r2, r0
   115bc:	ldr	r1, [pc, #1564]	; 11be0 <__snprintf_chk@plt+0xdc0>
   115c0:	mov	r0, #1
   115c4:	bl	10d90 <__printf_chk@plt>
   115c8:	mvn	r6, #0
   115cc:	mov	r7, #0
   115d0:	strd	r6, [sp]
   115d4:	mov	r3, r4
   115d8:	mov	r2, #21
   115dc:	mov	r1, #1
   115e0:	add	r0, sp, #57	; 0x39
   115e4:	bl	10d6c <__sprintf_chk@plt>
   115e8:	add	r2, sp, #57	; 0x39
   115ec:	ldr	r1, [pc, #1520]	; 11be4 <__snprintf_chk@plt+0xdc4>
   115f0:	mov	r0, #1
   115f4:	bl	10d90 <__printf_chk@plt>
   115f8:	add	r0, sp, #56	; 0x38
   115fc:	bl	11264 <__snprintf_chk@plt+0x444>
   11600:	mov	r2, r0
   11604:	ldr	r1, [pc, #1500]	; 11be8 <__snprintf_chk@plt+0xdc8>
   11608:	mov	r0, #1
   1160c:	bl	10d90 <__printf_chk@plt>
   11610:	strd	r8, [sp]
   11614:	mov	r3, r4
   11618:	mov	r2, #21
   1161c:	mov	r1, #1
   11620:	add	r0, sp, #57	; 0x39
   11624:	bl	10d6c <__sprintf_chk@plt>
   11628:	add	r2, sp, #57	; 0x39
   1162c:	ldr	r1, [pc, #1464]	; 11bec <__snprintf_chk@plt+0xdcc>
   11630:	mov	r0, #1
   11634:	bl	10d90 <__printf_chk@plt>
   11638:	add	r0, sp, #56	; 0x38
   1163c:	bl	11264 <__snprintf_chk@plt+0x444>
   11640:	mov	r2, r0
   11644:	ldr	r1, [pc, #1444]	; 11bf0 <__snprintf_chk@plt+0xdd0>
   11648:	mov	r0, #1
   1164c:	bl	10d90 <__printf_chk@plt>
   11650:	strd	sl, [sp]
   11654:	mov	r3, r5
   11658:	mov	r2, #21
   1165c:	mov	r1, #1
   11660:	add	r0, sp, #57	; 0x39
   11664:	bl	10d6c <__sprintf_chk@plt>
   11668:	add	r2, sp, #57	; 0x39
   1166c:	ldr	r1, [pc, #1408]	; 11bf4 <__snprintf_chk@plt+0xdd4>
   11670:	mov	r0, #1
   11674:	bl	10d90 <__printf_chk@plt>
   11678:	add	r0, sp, #56	; 0x38
   1167c:	bl	11264 <__snprintf_chk@plt+0x444>
   11680:	mov	r2, r0
   11684:	ldr	r1, [pc, #1388]	; 11bf8 <__snprintf_chk@plt+0xdd8>
   11688:	mov	r0, #1
   1168c:	bl	10d90 <__printf_chk@plt>
   11690:	strd	r6, [sp]
   11694:	mov	r3, r4
   11698:	mov	r2, #21
   1169c:	mov	r1, #1
   116a0:	add	r0, sp, #57	; 0x39
   116a4:	bl	10d6c <__sprintf_chk@plt>
   116a8:	add	r2, sp, #57	; 0x39
   116ac:	ldr	r1, [pc, #1352]	; 11bfc <__snprintf_chk@plt+0xddc>
   116b0:	mov	r0, #1
   116b4:	bl	10d90 <__printf_chk@plt>
   116b8:	add	r0, sp, #56	; 0x38
   116bc:	bl	11264 <__snprintf_chk@plt+0x444>
   116c0:	mov	r2, r0
   116c4:	ldr	r1, [pc, #1332]	; 11c00 <__snprintf_chk@plt+0xde0>
   116c8:	mov	r0, #1
   116cc:	bl	10d90 <__printf_chk@plt>
   116d0:	strd	r6, [sp]
   116d4:	mov	r3, r4
   116d8:	mov	r2, #21
   116dc:	mov	r1, #1
   116e0:	add	r0, sp, #57	; 0x39
   116e4:	bl	10d6c <__sprintf_chk@plt>
   116e8:	add	r2, sp, #57	; 0x39
   116ec:	ldr	r1, [pc, #1296]	; 11c04 <__snprintf_chk@plt+0xde4>
   116f0:	mov	r0, #1
   116f4:	bl	10d90 <__printf_chk@plt>
   116f8:	add	r0, sp, #56	; 0x38
   116fc:	bl	11264 <__snprintf_chk@plt+0x444>
   11700:	mov	r2, r0
   11704:	ldr	r1, [pc, #1276]	; 11c08 <__snprintf_chk@plt+0xde8>
   11708:	mov	r0, #1
   1170c:	bl	10d90 <__printf_chk@plt>
   11710:	strd	r8, [sp]
   11714:	mov	r3, r4
   11718:	mov	r2, #21
   1171c:	mov	r1, #1
   11720:	add	r0, sp, #57	; 0x39
   11724:	bl	10d6c <__sprintf_chk@plt>
   11728:	add	r2, sp, #57	; 0x39
   1172c:	ldr	r1, [pc, #1240]	; 11c0c <__snprintf_chk@plt+0xdec>
   11730:	mov	r0, #1
   11734:	bl	10d90 <__printf_chk@plt>
   11738:	add	r0, sp, #56	; 0x38
   1173c:	bl	11264 <__snprintf_chk@plt+0x444>
   11740:	mov	r2, r0
   11744:	ldr	r1, [pc, #1220]	; 11c10 <__snprintf_chk@plt+0xdf0>
   11748:	mov	r0, #1
   1174c:	bl	10d90 <__printf_chk@plt>
   11750:	strd	sl, [sp]
   11754:	mov	r3, r5
   11758:	mov	r2, #21
   1175c:	mov	r1, #1
   11760:	add	r0, sp, #57	; 0x39
   11764:	bl	10d6c <__sprintf_chk@plt>
   11768:	add	r2, sp, #57	; 0x39
   1176c:	ldr	r1, [pc, #1184]	; 11c14 <__snprintf_chk@plt+0xdf4>
   11770:	mov	r0, #1
   11774:	bl	10d90 <__printf_chk@plt>
   11778:	add	r0, sp, #56	; 0x38
   1177c:	bl	11264 <__snprintf_chk@plt+0x444>
   11780:	mov	r2, r0
   11784:	ldr	r1, [pc, #1164]	; 11c18 <__snprintf_chk@plt+0xdf8>
   11788:	mov	r0, #1
   1178c:	bl	10d90 <__printf_chk@plt>
   11790:	strd	r8, [sp]
   11794:	mov	r3, r4
   11798:	mov	r2, #21
   1179c:	mov	r1, #1
   117a0:	add	r0, sp, #57	; 0x39
   117a4:	bl	10d6c <__sprintf_chk@plt>
   117a8:	add	r2, sp, #57	; 0x39
   117ac:	ldr	r1, [pc, #1128]	; 11c1c <__snprintf_chk@plt+0xdfc>
   117b0:	mov	r0, #1
   117b4:	bl	10d90 <__printf_chk@plt>
   117b8:	add	r0, sp, #56	; 0x38
   117bc:	bl	11264 <__snprintf_chk@plt+0x444>
   117c0:	mov	r2, r0
   117c4:	ldr	r1, [pc, #1108]	; 11c20 <__snprintf_chk@plt+0xe00>
   117c8:	mov	r0, #1
   117cc:	bl	10d90 <__printf_chk@plt>
   117d0:	strd	sl, [sp]
   117d4:	mov	r3, r5
   117d8:	mov	r2, #21
   117dc:	mov	r1, #1
   117e0:	add	r0, sp, #57	; 0x39
   117e4:	bl	10d6c <__sprintf_chk@plt>
   117e8:	add	r2, sp, #57	; 0x39
   117ec:	ldr	r1, [pc, #1072]	; 11c24 <__snprintf_chk@plt+0xe04>
   117f0:	mov	r0, #1
   117f4:	bl	10d90 <__printf_chk@plt>
   117f8:	add	r0, sp, #56	; 0x38
   117fc:	bl	11264 <__snprintf_chk@plt+0x444>
   11800:	mov	r2, r0
   11804:	ldr	r1, [pc, #1052]	; 11c28 <__snprintf_chk@plt+0xe08>
   11808:	mov	r0, #1
   1180c:	bl	10d90 <__printf_chk@plt>
   11810:	strd	r6, [sp]
   11814:	mov	r3, r4
   11818:	mov	r2, #21
   1181c:	mov	r1, #1
   11820:	add	r0, sp, #57	; 0x39
   11824:	bl	10d6c <__sprintf_chk@plt>
   11828:	add	r2, sp, #57	; 0x39
   1182c:	ldr	r1, [pc, #1016]	; 11c2c <__snprintf_chk@plt+0xe0c>
   11830:	mov	r0, #1
   11834:	bl	10d90 <__printf_chk@plt>
   11838:	add	r0, sp, #56	; 0x38
   1183c:	bl	11264 <__snprintf_chk@plt+0x444>
   11840:	mov	r2, r0
   11844:	ldr	r1, [pc, #996]	; 11c30 <__snprintf_chk@plt+0xe10>
   11848:	mov	r0, #1
   1184c:	bl	10d90 <__printf_chk@plt>
   11850:	strd	r6, [sp]
   11854:	mov	r3, r4
   11858:	mov	r2, #21
   1185c:	mov	r1, #1
   11860:	add	r0, sp, #57	; 0x39
   11864:	bl	10d6c <__sprintf_chk@plt>
   11868:	add	r2, sp, #57	; 0x39
   1186c:	ldr	r1, [pc, #960]	; 11c34 <__snprintf_chk@plt+0xe14>
   11870:	mov	r0, #1
   11874:	bl	10d90 <__printf_chk@plt>
   11878:	add	r0, sp, #56	; 0x38
   1187c:	bl	11264 <__snprintf_chk@plt+0x444>
   11880:	mov	r2, r0
   11884:	ldr	r1, [pc, #940]	; 11c38 <__snprintf_chk@plt+0xe18>
   11888:	mov	r0, #1
   1188c:	bl	10d90 <__printf_chk@plt>
   11890:	strd	r8, [sp]
   11894:	mov	r3, r4
   11898:	mov	r2, #21
   1189c:	mov	r1, #1
   118a0:	add	r0, sp, #57	; 0x39
   118a4:	bl	10d6c <__sprintf_chk@plt>
   118a8:	add	r2, sp, #57	; 0x39
   118ac:	ldr	r1, [pc, #904]	; 11c3c <__snprintf_chk@plt+0xe1c>
   118b0:	mov	r0, #1
   118b4:	bl	10d90 <__printf_chk@plt>
   118b8:	add	r0, sp, #56	; 0x38
   118bc:	bl	11264 <__snprintf_chk@plt+0x444>
   118c0:	mov	r2, r0
   118c4:	ldr	r1, [pc, #884]	; 11c40 <__snprintf_chk@plt+0xe20>
   118c8:	mov	r0, #1
   118cc:	bl	10d90 <__printf_chk@plt>
   118d0:	strd	sl, [sp]
   118d4:	mov	r3, r5
   118d8:	mov	r2, #21
   118dc:	mov	r1, #1
   118e0:	add	r0, sp, #57	; 0x39
   118e4:	bl	10d6c <__sprintf_chk@plt>
   118e8:	add	r2, sp, #57	; 0x39
   118ec:	ldr	r1, [pc, #848]	; 11c44 <__snprintf_chk@plt+0xe24>
   118f0:	mov	r0, #1
   118f4:	bl	10d90 <__printf_chk@plt>
   118f8:	add	r0, sp, #56	; 0x38
   118fc:	bl	11264 <__snprintf_chk@plt+0x444>
   11900:	mov	r2, r0
   11904:	ldr	r1, [pc, #828]	; 11c48 <__snprintf_chk@plt+0xe28>
   11908:	mov	r0, #1
   1190c:	bl	10d90 <__printf_chk@plt>
   11910:	mvn	r8, #0
   11914:	mvn	r9, #-2147483648	; 0x80000000
   11918:	strd	r8, [sp]
   1191c:	mov	r3, r4
   11920:	mov	r2, #21
   11924:	mov	r1, #1
   11928:	add	r0, sp, #57	; 0x39
   1192c:	bl	10d6c <__sprintf_chk@plt>
   11930:	add	r2, sp, #57	; 0x39
   11934:	ldr	r1, [pc, #784]	; 11c4c <__snprintf_chk@plt+0xe2c>
   11938:	mov	r0, #1
   1193c:	bl	10d90 <__printf_chk@plt>
   11940:	add	r0, sp, #56	; 0x38
   11944:	bl	11264 <__snprintf_chk@plt+0x444>
   11948:	mov	r2, r0
   1194c:	ldr	r1, [pc, #764]	; 11c50 <__snprintf_chk@plt+0xe30>
   11950:	mov	r0, #1
   11954:	bl	10d90 <__printf_chk@plt>
   11958:	mov	r6, #0
   1195c:	mov	r7, #-2147483648	; 0x80000000
   11960:	strd	r6, [sp]
   11964:	mov	r3, r5
   11968:	mov	r2, #21
   1196c:	mov	r1, #1
   11970:	add	r0, sp, #57	; 0x39
   11974:	bl	10d6c <__sprintf_chk@plt>
   11978:	add	r2, sp, #57	; 0x39
   1197c:	ldr	r1, [pc, #720]	; 11c54 <__snprintf_chk@plt+0xe34>
   11980:	mov	r0, #1
   11984:	bl	10d90 <__printf_chk@plt>
   11988:	add	r0, sp, #56	; 0x38
   1198c:	bl	11264 <__snprintf_chk@plt+0x444>
   11990:	mov	r2, r0
   11994:	ldr	r1, [pc, #700]	; 11c58 <__snprintf_chk@plt+0xe38>
   11998:	mov	r0, #1
   1199c:	bl	10d90 <__printf_chk@plt>
   119a0:	strd	r8, [sp]
   119a4:	mov	r3, r4
   119a8:	mov	r2, #21
   119ac:	mov	r1, #1
   119b0:	add	r0, sp, #57	; 0x39
   119b4:	bl	10d6c <__sprintf_chk@plt>
   119b8:	add	r2, sp, #57	; 0x39
   119bc:	ldr	r1, [pc, #664]	; 11c5c <__snprintf_chk@plt+0xe3c>
   119c0:	mov	r0, #1
   119c4:	bl	10d90 <__printf_chk@plt>
   119c8:	add	r0, sp, #56	; 0x38
   119cc:	bl	11264 <__snprintf_chk@plt+0x444>
   119d0:	mov	r2, r0
   119d4:	ldr	r1, [pc, #644]	; 11c60 <__snprintf_chk@plt+0xe40>
   119d8:	mov	r0, #1
   119dc:	bl	10d90 <__printf_chk@plt>
   119e0:	strd	r6, [sp]
   119e4:	mov	r3, r5
   119e8:	mov	r2, #21
   119ec:	mov	r1, #1
   119f0:	add	r0, sp, #57	; 0x39
   119f4:	bl	10d6c <__sprintf_chk@plt>
   119f8:	add	r2, sp, #57	; 0x39
   119fc:	ldr	r1, [pc, #608]	; 11c64 <__snprintf_chk@plt+0xe44>
   11a00:	mov	r0, #1
   11a04:	bl	10d90 <__printf_chk@plt>
   11a08:	add	r0, sp, #56	; 0x38
   11a0c:	bl	11264 <__snprintf_chk@plt+0x444>
   11a10:	mov	r2, r0
   11a14:	ldr	r1, [pc, #588]	; 11c68 <__snprintf_chk@plt+0xe48>
   11a18:	mov	r0, #1
   11a1c:	bl	10d90 <__printf_chk@plt>
   11a20:	mvn	r2, #0
   11a24:	mvn	r3, #0
   11a28:	strd	r2, [sp]
   11a2c:	mov	r3, r4
   11a30:	mov	r2, #21
   11a34:	mov	r1, #1
   11a38:	add	r0, sp, #57	; 0x39
   11a3c:	bl	10d6c <__sprintf_chk@plt>
   11a40:	add	r2, sp, #57	; 0x39
   11a44:	ldr	r1, [pc, #544]	; 11c6c <__snprintf_chk@plt+0xe4c>
   11a48:	mov	r0, #1
   11a4c:	bl	10d90 <__printf_chk@plt>
   11a50:	add	r0, sp, #56	; 0x38
   11a54:	bl	11264 <__snprintf_chk@plt+0x444>
   11a58:	mov	r2, r0
   11a5c:	ldr	r1, [pc, #524]	; 11c70 <__snprintf_chk@plt+0xe50>
   11a60:	mov	r0, #1
   11a64:	bl	10d90 <__printf_chk@plt>
   11a68:	ldr	r1, [pc, #516]	; 11c74 <__snprintf_chk@plt+0xe54>
   11a6c:	mov	r0, #1
   11a70:	bl	10d90 <__printf_chk@plt>
   11a74:	vldr	s0, [pc, #236]	; 11b68 <__snprintf_chk@plt+0xd48>
   11a78:	bl	112e0 <__snprintf_chk@plt+0x4c0>
   11a7c:	ldr	r1, [pc, #500]	; 11c78 <__snprintf_chk@plt+0xe58>
   11a80:	mov	r0, #1
   11a84:	bl	10d90 <__printf_chk@plt>
   11a88:	vldr	s0, [pc, #220]	; 11b6c <__snprintf_chk@plt+0xd4c>
   11a8c:	bl	112e0 <__snprintf_chk@plt+0x4c0>
   11a90:	ldr	r1, [pc, #484]	; 11c7c <__snprintf_chk@plt+0xe5c>
   11a94:	mov	r0, #1
   11a98:	bl	10d90 <__printf_chk@plt>
   11a9c:	vldr	d9, [pc, #180]	; 11b58 <__snprintf_chk@plt+0xd38>
   11aa0:	vmov.f64	d0, d9
   11aa4:	mov	r3, #0
   11aa8:	mov	r2, #1
   11aac:	mov	r1, #40	; 0x28
   11ab0:	add	r0, sp, #16
   11ab4:	bl	11da0 <__snprintf_chk@plt+0xf80>
   11ab8:	add	r0, sp, #16
   11abc:	bl	10cf4 <puts@plt>
   11ac0:	ldr	r1, [pc, #440]	; 11c80 <__snprintf_chk@plt+0xe60>
   11ac4:	mov	r0, #1
   11ac8:	bl	10d90 <__printf_chk@plt>
   11acc:	vldr	d8, [pc, #140]	; 11b60 <__snprintf_chk@plt+0xd40>
   11ad0:	vmov.f64	d0, d8
   11ad4:	mov	r3, #0
   11ad8:	mov	r2, #1
   11adc:	mov	r1, #40	; 0x28
   11ae0:	add	r0, sp, #16
   11ae4:	bl	11da0 <__snprintf_chk@plt+0xf80>
   11ae8:	add	r0, sp, #16
   11aec:	bl	10cf4 <puts@plt>
   11af0:	ldr	r1, [pc, #396]	; 11c84 <__snprintf_chk@plt+0xe64>
   11af4:	mov	r0, #1
   11af8:	bl	10d90 <__printf_chk@plt>
   11afc:	vmov.f64	d0, d9
   11b00:	mov	r3, #0
   11b04:	mov	r2, #1
   11b08:	mov	r1, #40	; 0x28
   11b0c:	add	r0, sp, #16
   11b10:	bl	12040 <__snprintf_chk@plt+0x1220>
   11b14:	add	r0, sp, #16
   11b18:	bl	10cf4 <puts@plt>
   11b1c:	ldr	r1, [pc, #356]	; 11c88 <__snprintf_chk@plt+0xe68>
   11b20:	mov	r0, #1
   11b24:	bl	10d90 <__printf_chk@plt>
   11b28:	vmov.f64	d0, d8
   11b2c:	mov	r3, #0
   11b30:	mov	r2, #1
   11b34:	mov	r1, #40	; 0x28
   11b38:	add	r0, sp, #16
   11b3c:	bl	12040 <__snprintf_chk@plt+0x1220>
   11b40:	add	r0, sp, #16
   11b44:	bl	10cf4 <puts@plt>
   11b48:	mov	r0, #0
   11b4c:	add	sp, sp, #84	; 0x54
   11b50:	vpop	{d8-d9}
   11b54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11b58:	andeq	r0, r0, r0
   11b5c:	andseq	r0, r0, r0
   11b60:			; <UNDEFINED> instruction: 0xffffffff
   11b64:	svcvc	0x00efffff
   11b68:	addeq	r0, r0, r0
   11b6c:	svcvc	0x007fffff
   11b70:	andeq	r5, r1, r8, asr #9
   11b74:	andeq	r5, r1, r8, ror r5
   11b78:	andeq	r5, r1, r0, lsr #12
   11b7c:	andeq	r1, r1, ip, lsr #25
   11b80:	andeq	r5, r1, r8, lsr r6
   11b84:	andeq	r0, r1, r8, asr pc
   11b88:	andeq	r5, r1, r8, asr #12
   11b8c:	andeq	r5, r1, r4, ror r5
   11b90:	andeq	r5, r1, r0, asr #8
   11b94:	andeq	r5, r1, r8, asr r6
   11b98:	andeq	r5, r1, r0, ror #12
   11b9c:	andeq	r5, r1, r0, ror r6
   11ba0:	andeq	r5, r1, r0, lsl #13
   11ba4:	muleq	r1, r0, r6
   11ba8:	andeq	r5, r1, r0, lsr #13
   11bac:	andeq	r5, r1, r8, lsr #13
   11bb0:			; <UNDEFINED> instruction: 0x000156b8
   11bb4:	andeq	r5, r1, r8, asr #13
   11bb8:	ldrdeq	r5, [r1], -r8
   11bbc:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   11bc0:	andeq	r5, r1, r8, ror #13
   11bc4:	strdeq	r5, [r1], -r8
   11bc8:			; <UNDEFINED> instruction: 0xffff8000
   11bcc:	andeq	r5, r1, r8, lsl #14
   11bd0:	andeq	r5, r1, r8, lsl r7
   11bd4:	andeq	r5, r1, r8, lsr #14
   11bd8:	andeq	r5, r1, r4, lsr r7
   11bdc:	andeq	r5, r1, r4, asr #14
   11be0:	andeq	r5, r1, r0, asr r7
   11be4:	andeq	r5, r1, r0, ror #14
   11be8:	andeq	r5, r1, r0, ror r7
   11bec:	andeq	r5, r1, r0, lsl #15
   11bf0:	muleq	r1, r0, r7
   11bf4:	andeq	r5, r1, r0, lsr #15
   11bf8:			; <UNDEFINED> instruction: 0x000157b0
   11bfc:	andeq	r5, r1, r0, asr #15
   11c00:	ldrdeq	r5, [r1], -r0
   11c04:	andeq	r5, r1, r0, ror #15
   11c08:	strdeq	r5, [r1], -r0
   11c0c:	andeq	r5, r1, r0, lsl #16
   11c10:	andeq	r5, r1, r0, lsl r8
   11c14:	andeq	r5, r1, r0, lsr #16
   11c18:	andeq	r5, r1, r0, lsr r8
   11c1c:	andeq	r5, r1, r0, asr #16
   11c20:	andeq	r5, r1, r0, asr r8
   11c24:	andeq	r5, r1, r4, ror #16
   11c28:	andeq	r5, r1, r4, ror r8
   11c2c:	andeq	r5, r1, r8, lsl #17
   11c30:	muleq	r1, r8, r8
   11c34:	andeq	r5, r1, r8, lsr #17
   11c38:			; <UNDEFINED> instruction: 0x000158b8
   11c3c:	andeq	r5, r1, r8, asr #17
   11c40:	ldrdeq	r5, [r1], -r8
   11c44:	andeq	r5, r1, r8, ror #17
   11c48:	strdeq	r5, [r1], -r8
   11c4c:	andeq	r5, r1, r8, lsl #18
   11c50:	andeq	r5, r1, r8, lsl r9
   11c54:	andeq	r5, r1, r8, lsr #18
   11c58:	andeq	r5, r1, r8, lsr r9
   11c5c:	andeq	r5, r1, r8, asr #18
   11c60:	andeq	r5, r1, r8, asr r9
   11c64:	andeq	r5, r1, ip, ror #18
   11c68:	andeq	r5, r1, ip, ror r9
   11c6c:	muleq	r1, r0, r9
   11c70:	andeq	r5, r1, r0, lsr #19
   11c74:			; <UNDEFINED> instruction: 0x000159b4
   11c78:	andeq	r5, r1, r0, asr #19
   11c7c:	andeq	r5, r1, ip, asr #19
   11c80:	ldrdeq	r5, [r1], -r8
   11c84:	andeq	r5, r1, r4, ror #19
   11c88:	strdeq	r5, [r1], -r0
   11c8c:	ldr	r3, [pc, #4]	; 11c98 <__snprintf_chk@plt+0xe78>
   11c90:	str	r0, [r3]
   11c94:	bx	lr
   11c98:	andeq	r7, r2, r0, asr #2
   11c9c:	ldr	r3, [pc, #4]	; 11ca8 <__snprintf_chk@plt+0xe88>
   11ca0:	strb	r0, [r3, #4]
   11ca4:	bx	lr
   11ca8:	andeq	r7, r2, r0, asr #2
   11cac:	push	{r4, r5, r6, lr}
   11cb0:	sub	sp, sp, #8
   11cb4:	ldr	r3, [pc, #200]	; 11d84 <__snprintf_chk@plt+0xf64>
   11cb8:	ldr	r0, [r3]
   11cbc:	bl	14ac0 <__snprintf_chk@plt+0x3ca0>
   11cc0:	cmp	r0, #0
   11cc4:	beq	11ce8 <__snprintf_chk@plt+0xec8>
   11cc8:	ldr	r3, [pc, #184]	; 11d88 <__snprintf_chk@plt+0xf68>
   11ccc:	ldrb	r3, [r3, #4]
   11cd0:	cmp	r3, #0
   11cd4:	beq	11d04 <__snprintf_chk@plt+0xee4>
   11cd8:	bl	10d60 <__errno_location@plt>
   11cdc:	ldr	r3, [r0]
   11ce0:	cmp	r3, #32
   11ce4:	bne	11d04 <__snprintf_chk@plt+0xee4>
   11ce8:	ldr	r3, [pc, #156]	; 11d8c <__snprintf_chk@plt+0xf6c>
   11cec:	ldr	r0, [r3]
   11cf0:	bl	14ac0 <__snprintf_chk@plt+0x3ca0>
   11cf4:	cmp	r0, #0
   11cf8:	bne	11d78 <__snprintf_chk@plt+0xf58>
   11cfc:	add	sp, sp, #8
   11d00:	pop	{r4, r5, r6, pc}
   11d04:	mov	r2, #5
   11d08:	ldr	r1, [pc, #128]	; 11d90 <__snprintf_chk@plt+0xf70>
   11d0c:	mov	r0, #0
   11d10:	bl	10c70 <dcgettext@plt>
   11d14:	mov	r4, r0
   11d18:	ldr	r3, [pc, #104]	; 11d88 <__snprintf_chk@plt+0xf68>
   11d1c:	ldr	r5, [r3]
   11d20:	cmp	r5, #0
   11d24:	beq	11d5c <__snprintf_chk@plt+0xf3c>
   11d28:	bl	10d60 <__errno_location@plt>
   11d2c:	ldr	r6, [r0]
   11d30:	mov	r0, r5
   11d34:	bl	13cec <__snprintf_chk@plt+0x2ecc>
   11d38:	str	r4, [sp]
   11d3c:	mov	r3, r0
   11d40:	ldr	r2, [pc, #76]	; 11d94 <__snprintf_chk@plt+0xf74>
   11d44:	mov	r1, r6
   11d48:	mov	r0, #0
   11d4c:	bl	10cdc <error@plt>
   11d50:	ldr	r3, [pc, #64]	; 11d98 <__snprintf_chk@plt+0xf78>
   11d54:	ldr	r0, [r3]
   11d58:	bl	10c28 <_exit@plt>
   11d5c:	bl	10d60 <__errno_location@plt>
   11d60:	mov	r3, r4
   11d64:	ldr	r2, [pc, #48]	; 11d9c <__snprintf_chk@plt+0xf7c>
   11d68:	ldr	r1, [r0]
   11d6c:	mov	r0, #0
   11d70:	bl	10cdc <error@plt>
   11d74:	b	11d50 <__snprintf_chk@plt+0xf30>
   11d78:	ldr	r3, [pc, #24]	; 11d98 <__snprintf_chk@plt+0xf78>
   11d7c:	ldr	r0, [r3]
   11d80:	bl	10c28 <_exit@plt>
   11d84:	andeq	r7, r2, r4, lsr r1
   11d88:	andeq	r7, r2, r0, asr #2
   11d8c:	andeq	r7, r2, r0, lsr r1
   11d90:	andeq	r5, r1, r8, ror #20
   11d94:	andeq	r5, r1, r4, ror sl
   11d98:	ldrdeq	r7, [r2], -ip
   11d9c:	andeq	r5, r1, r8, ror sl
   11da0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11da4:	vpush	{d8}
   11da8:	sub	sp, sp, #44	; 0x2c
   11dac:	mov	r7, r0
   11db0:	mov	r6, r1
   11db4:	mov	fp, r3
   11db8:	vmov.f64	d8, d0
   11dbc:	vcmpe.f64	d0, #0.0
   11dc0:	vmrs	APSR_nzcv, fpscr
   11dc4:	vnegmi.f64	d6, d0
   11dc8:	vmovpl.f64	d6, d0
   11dcc:	mov	r3, #37	; 0x25
   11dd0:	strb	r3, [sp, #28]
   11dd4:	add	r3, sp, #40	; 0x28
   11dd8:	mov	r1, #45	; 0x2d
   11ddc:	strb	r1, [r3, #-11]!
   11de0:	and	r1, r2, #1
   11de4:	add	r0, r3, r1
   11de8:	mov	ip, #43	; 0x2b
   11dec:	strb	ip, [r3, r1]
   11df0:	lsr	r3, r2, #1
   11df4:	and	r3, r3, #1
   11df8:	add	r1, r0, r3
   11dfc:	mov	ip, #32
   11e00:	strb	ip, [r0, r3]
   11e04:	lsr	r3, r2, #2
   11e08:	and	r3, r3, #1
   11e0c:	add	ip, r1, r3
   11e10:	mov	r0, #48	; 0x30
   11e14:	strb	r0, [r1, r3]
   11e18:	lsr	r1, r2, #3
   11e1c:	and	r1, r1, #1
   11e20:	add	r3, ip, r1
   11e24:	mov	r0, #42	; 0x2a
   11e28:	strb	r0, [ip, r1]
   11e2c:	mov	r1, #46	; 0x2e
   11e30:	strb	r1, [r3, #1]
   11e34:	strb	r0, [r3, #2]
   11e38:	and	r2, r2, #16
   11e3c:	cmp	r2, #0
   11e40:	movne	r2, #71	; 0x47
   11e44:	moveq	r2, #103	; 0x67
   11e48:	strb	r2, [r3, #3]
   11e4c:	mov	r2, #0
   11e50:	strb	r2, [r3, #4]
   11e54:	vldr	d7, [pc, #140]	; 11ee8 <__snprintf_chk@plt+0x10c8>
   11e58:	vcmpe.f64	d6, d7
   11e5c:	vmrs	APSR_nzcv, fpscr
   11e60:	movmi	r4, #1
   11e64:	movpl	r4, #15
   11e68:	add	sl, sp, #28
   11e6c:	mvn	r9, #0
   11e70:	mov	r8, #1
   11e74:	b	11e7c <__snprintf_chk@plt+0x105c>
   11e78:	add	r4, r4, #1
   11e7c:	vstr	d8, [sp, #16]
   11e80:	str	r4, [sp, #8]
   11e84:	str	fp, [sp, #4]
   11e88:	str	sl, [sp]
   11e8c:	mov	r3, r9
   11e90:	mov	r2, r8
   11e94:	mov	r1, r6
   11e98:	mov	r0, r7
   11e9c:	bl	10e20 <__snprintf_chk@plt>
   11ea0:	mov	r5, r0
   11ea4:	cmp	r4, #16
   11ea8:	movle	r3, #0
   11eac:	movgt	r3, #1
   11eb0:	orrs	r3, r3, r0, lsr #31
   11eb4:	bne	11ed8 <__snprintf_chk@plt+0x10b8>
   11eb8:	cmp	r6, r0
   11ebc:	bls	11e78 <__snprintf_chk@plt+0x1058>
   11ec0:	mov	r1, #0
   11ec4:	mov	r0, r7
   11ec8:	bl	10d9c <strtod@plt>
   11ecc:	vcmp.f64	d8, d0
   11ed0:	vmrs	APSR_nzcv, fpscr
   11ed4:	bne	11e78 <__snprintf_chk@plt+0x1058>
   11ed8:	mov	r0, r5
   11edc:	add	sp, sp, #44	; 0x2c
   11ee0:	vpop	{d8}
   11ee4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ee8:	andeq	r0, r0, r0
   11eec:	andseq	r0, r0, r0
   11ef0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ef4:	vpush	{d8-d9}
   11ef8:	sub	sp, sp, #44	; 0x2c
   11efc:	mov	r7, r0
   11f00:	mov	r6, r1
   11f04:	mov	fp, r3
   11f08:	vmov.f32	s18, s0
   11f0c:	vcvt.f64.f32	d8, s0
   11f10:	vcmpe.f32	s0, #0.0
   11f14:	vmrs	APSR_nzcv, fpscr
   11f18:	vnegmi.f32	s14, s0
   11f1c:	vmovpl.f32	s14, s0
   11f20:	mov	r3, #37	; 0x25
   11f24:	strb	r3, [sp, #28]
   11f28:	add	r3, sp, #40	; 0x28
   11f2c:	mov	r1, #45	; 0x2d
   11f30:	strb	r1, [r3, #-11]!
   11f34:	and	r1, r2, #1
   11f38:	add	r0, r3, r1
   11f3c:	mov	ip, #43	; 0x2b
   11f40:	strb	ip, [r3, r1]
   11f44:	lsr	r3, r2, #1
   11f48:	and	r3, r3, #1
   11f4c:	add	r1, r0, r3
   11f50:	mov	ip, #32
   11f54:	strb	ip, [r0, r3]
   11f58:	lsr	r3, r2, #2
   11f5c:	and	r3, r3, #1
   11f60:	add	ip, r1, r3
   11f64:	mov	r0, #48	; 0x30
   11f68:	strb	r0, [r1, r3]
   11f6c:	lsr	r1, r2, #3
   11f70:	and	r1, r1, #1
   11f74:	add	r3, ip, r1
   11f78:	mov	r0, #42	; 0x2a
   11f7c:	strb	r0, [ip, r1]
   11f80:	mov	r1, #46	; 0x2e
   11f84:	strb	r1, [r3, #1]
   11f88:	strb	r0, [r3, #2]
   11f8c:	and	r2, r2, #16
   11f90:	cmp	r2, #0
   11f94:	movne	r2, #71	; 0x47
   11f98:	moveq	r2, #103	; 0x67
   11f9c:	strb	r2, [r3, #3]
   11fa0:	mov	r2, #0
   11fa4:	strb	r2, [r3, #4]
   11fa8:	vldr	s15, [pc, #140]	; 1203c <__snprintf_chk@plt+0x121c>
   11fac:	vcmpe.f32	s14, s15
   11fb0:	vmrs	APSR_nzcv, fpscr
   11fb4:	movmi	r4, #1
   11fb8:	movpl	r4, #6
   11fbc:	add	sl, sp, #28
   11fc0:	mvn	r9, #0
   11fc4:	mov	r8, #1
   11fc8:	b	11fd0 <__snprintf_chk@plt+0x11b0>
   11fcc:	add	r4, r4, #1
   11fd0:	vstr	d8, [sp, #16]
   11fd4:	str	r4, [sp, #8]
   11fd8:	str	fp, [sp, #4]
   11fdc:	str	sl, [sp]
   11fe0:	mov	r3, r9
   11fe4:	mov	r2, r8
   11fe8:	mov	r1, r6
   11fec:	mov	r0, r7
   11ff0:	bl	10e20 <__snprintf_chk@plt>
   11ff4:	mov	r5, r0
   11ff8:	cmp	r4, #8
   11ffc:	movle	r3, #0
   12000:	movgt	r3, #1
   12004:	orrs	r3, r3, r0, lsr #31
   12008:	bne	1202c <__snprintf_chk@plt+0x120c>
   1200c:	cmp	r6, r0
   12010:	bls	11fcc <__snprintf_chk@plt+0x11ac>
   12014:	mov	r1, #0
   12018:	mov	r0, r7
   1201c:	bl	10ce8 <strtof@plt>
   12020:	vcmp.f32	s18, s0
   12024:	vmrs	APSR_nzcv, fpscr
   12028:	bne	11fcc <__snprintf_chk@plt+0x11ac>
   1202c:	mov	r0, r5
   12030:	add	sp, sp, #44	; 0x2c
   12034:	vpop	{d8-d9}
   12038:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1203c:	addeq	r0, r0, r0
   12040:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12044:	vpush	{d8}
   12048:	sub	sp, sp, #44	; 0x2c
   1204c:	mov	r7, r0
   12050:	mov	r6, r1
   12054:	mov	fp, r3
   12058:	vmov.f64	d8, d0
   1205c:	vcmpe.f64	d0, #0.0
   12060:	vmrs	APSR_nzcv, fpscr
   12064:	vnegmi.f64	d6, d0
   12068:	vmovpl.f64	d6, d0
   1206c:	mov	r3, #37	; 0x25
   12070:	strb	r3, [sp, #28]
   12074:	add	r3, sp, #40	; 0x28
   12078:	mov	r1, #45	; 0x2d
   1207c:	strb	r1, [r3, #-11]!
   12080:	and	r1, r2, #1
   12084:	add	r0, r3, r1
   12088:	mov	ip, #43	; 0x2b
   1208c:	strb	ip, [r3, r1]
   12090:	lsr	r3, r2, #1
   12094:	and	r3, r3, #1
   12098:	add	r1, r0, r3
   1209c:	mov	ip, #32
   120a0:	strb	ip, [r0, r3]
   120a4:	lsr	r3, r2, #2
   120a8:	and	r3, r3, #1
   120ac:	add	ip, r1, r3
   120b0:	mov	r0, #48	; 0x30
   120b4:	strb	r0, [r1, r3]
   120b8:	lsr	r1, r2, #3
   120bc:	and	r1, r1, #1
   120c0:	add	r3, ip, r1
   120c4:	mov	r0, #42	; 0x2a
   120c8:	strb	r0, [ip, r1]
   120cc:	mov	r1, #46	; 0x2e
   120d0:	strb	r1, [r3, #1]
   120d4:	strb	r0, [r3, #2]
   120d8:	mov	r1, #76	; 0x4c
   120dc:	strb	r1, [r3, #3]
   120e0:	and	r2, r2, #16
   120e4:	cmp	r2, #0
   120e8:	movne	r2, #71	; 0x47
   120ec:	moveq	r2, #103	; 0x67
   120f0:	strb	r2, [r3, #4]
   120f4:	mov	r2, #0
   120f8:	strb	r2, [r3, #5]
   120fc:	vldr	d7, [pc, #140]	; 12190 <__snprintf_chk@plt+0x1370>
   12100:	vcmpe.f64	d6, d7
   12104:	vmrs	APSR_nzcv, fpscr
   12108:	movmi	r4, #1
   1210c:	movpl	r4, #15
   12110:	add	sl, sp, #28
   12114:	mvn	r9, #0
   12118:	mov	r8, #1
   1211c:	b	12124 <__snprintf_chk@plt+0x1304>
   12120:	add	r4, r4, #1
   12124:	vstr	d8, [sp, #16]
   12128:	str	r4, [sp, #8]
   1212c:	str	fp, [sp, #4]
   12130:	str	sl, [sp]
   12134:	mov	r3, r9
   12138:	mov	r2, r8
   1213c:	mov	r1, r6
   12140:	mov	r0, r7
   12144:	bl	10e20 <__snprintf_chk@plt>
   12148:	mov	r5, r0
   1214c:	cmp	r4, #16
   12150:	movle	r3, #0
   12154:	movgt	r3, #1
   12158:	orrs	r3, r3, r0, lsr #31
   1215c:	bne	12180 <__snprintf_chk@plt+0x1360>
   12160:	cmp	r6, r0
   12164:	bls	12120 <__snprintf_chk@plt+0x1300>
   12168:	mov	r1, #0
   1216c:	mov	r0, r7
   12170:	bl	10c4c <strtold@plt>
   12174:	vcmp.f64	d8, d0
   12178:	vmrs	APSR_nzcv, fpscr
   1217c:	bne	12120 <__snprintf_chk@plt+0x1300>
   12180:	mov	r0, r5
   12184:	add	sp, sp, #44	; 0x2c
   12188:	vpop	{d8}
   1218c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12190:	andeq	r0, r0, r0
   12194:	andseq	r0, r0, r0
   12198:	push	{r4, r5, r6, lr}
   1219c:	sub	sp, sp, #16
   121a0:	ldr	ip, [pc, #152]	; 12240 <__snprintf_chk@plt+0x1420>
   121a4:	ldr	r4, [ip]
   121a8:	mov	lr, #0
   121ac:	str	lr, [ip]
   121b0:	cmp	r0, #2
   121b4:	beq	121d4 <__snprintf_chk@plt+0x13b4>
   121b8:	ldr	r3, [pc, #128]	; 12240 <__snprintf_chk@plt+0x1420>
   121bc:	str	r4, [r3]
   121c0:	mov	r2, #0
   121c4:	ldr	r3, [pc, #120]	; 12244 <__snprintf_chk@plt+0x1424>
   121c8:	str	r2, [r3]
   121cc:	add	sp, sp, #16
   121d0:	pop	{r4, r5, r6, pc}
   121d4:	mov	r6, r3
   121d8:	mov	r5, r2
   121dc:	str	lr, [sp]
   121e0:	ldr	r3, [pc, #96]	; 12248 <__snprintf_chk@plt+0x1428>
   121e4:	ldr	r2, [pc, #96]	; 1224c <__snprintf_chk@plt+0x142c>
   121e8:	bl	10d30 <getopt_long@plt>
   121ec:	cmn	r0, #1
   121f0:	beq	121b8 <__snprintf_chk@plt+0x1398>
   121f4:	cmp	r0, #104	; 0x68
   121f8:	beq	12230 <__snprintf_chk@plt+0x1410>
   121fc:	cmp	r0, #118	; 0x76
   12200:	bne	121b8 <__snprintf_chk@plt+0x1398>
   12204:	add	r3, sp, #40	; 0x28
   12208:	str	r3, [sp, #12]
   1220c:	ldr	r2, [pc, #60]	; 12250 <__snprintf_chk@plt+0x1430>
   12210:	ldr	r0, [r2]
   12214:	str	r3, [sp]
   12218:	ldr	r3, [sp, #32]
   1221c:	mov	r2, r6
   12220:	mov	r1, r5
   12224:	bl	142f4 <__snprintf_chk@plt+0x34d4>
   12228:	mov	r0, #0
   1222c:	bl	10d48 <exit@plt>
   12230:	mov	r0, #0
   12234:	ldr	r3, [sp, #36]	; 0x24
   12238:	blx	r3
   1223c:	b	121b8 <__snprintf_chk@plt+0x1398>
   12240:	andeq	r7, r2, r8, lsr r1
   12244:	andeq	r7, r2, r8, lsr #2
   12248:	andeq	r5, r1, ip, ror sl
   1224c:	andeq	r5, r1, ip, lsr #21
   12250:	andeq	r7, r2, r4, lsr r1
   12254:	push	{r4, r5, r6, lr}
   12258:	sub	sp, sp, #16
   1225c:	mov	r5, r2
   12260:	mov	r6, r3
   12264:	ldr	r3, [pc, #160]	; 1230c <__snprintf_chk@plt+0x14ec>
   12268:	ldr	r4, [r3]
   1226c:	mov	r2, #1
   12270:	str	r2, [r3]
   12274:	mov	r3, #0
   12278:	str	r3, [sp]
   1227c:	ldr	r3, [pc, #140]	; 12310 <__snprintf_chk@plt+0x14f0>
   12280:	ldr	ip, [pc, #140]	; 12314 <__snprintf_chk@plt+0x14f4>
   12284:	ldr	r2, [pc, #140]	; 12318 <__snprintf_chk@plt+0x14f8>
   12288:	ldrb	lr, [sp, #36]	; 0x24
   1228c:	cmp	lr, #0
   12290:	moveq	r2, ip
   12294:	bl	10d30 <getopt_long@plt>
   12298:	cmn	r0, #1
   1229c:	beq	122d0 <__snprintf_chk@plt+0x14b0>
   122a0:	cmp	r0, #104	; 0x68
   122a4:	beq	122c4 <__snprintf_chk@plt+0x14a4>
   122a8:	cmp	r0, #118	; 0x76
   122ac:	beq	122e0 <__snprintf_chk@plt+0x14c0>
   122b0:	ldr	r3, [pc, #100]	; 1231c <__snprintf_chk@plt+0x14fc>
   122b4:	ldr	r0, [r3]
   122b8:	ldr	r3, [sp, #40]	; 0x28
   122bc:	blx	r3
   122c0:	b	122d0 <__snprintf_chk@plt+0x14b0>
   122c4:	mov	r0, #0
   122c8:	ldr	r3, [sp, #40]	; 0x28
   122cc:	blx	r3
   122d0:	ldr	r3, [pc, #52]	; 1230c <__snprintf_chk@plt+0x14ec>
   122d4:	str	r4, [r3]
   122d8:	add	sp, sp, #16
   122dc:	pop	{r4, r5, r6, pc}
   122e0:	add	r3, sp, #44	; 0x2c
   122e4:	str	r3, [sp, #12]
   122e8:	ldr	r2, [pc, #48]	; 12320 <__snprintf_chk@plt+0x1500>
   122ec:	ldr	r0, [r2]
   122f0:	str	r3, [sp]
   122f4:	ldr	r3, [sp, #32]
   122f8:	mov	r2, r6
   122fc:	mov	r1, r5
   12300:	bl	142f4 <__snprintf_chk@plt+0x34d4>
   12304:	mov	r0, #0
   12308:	bl	10d48 <exit@plt>
   1230c:	andeq	r7, r2, r8, lsr r1
   12310:	andeq	r5, r1, ip, ror sl
   12314:	andeq	r5, r1, ip, lsr #21
   12318:	andeq	r5, r1, r8, asr #9
   1231c:	ldrdeq	r7, [r2], -ip
   12320:	andeq	r7, r2, r4, lsr r1
   12324:	push	{r4, r5, r6, lr}
   12328:	subs	r4, r0, #0
   1232c:	beq	123a4 <__snprintf_chk@plt+0x1584>
   12330:	mov	r1, #47	; 0x2f
   12334:	mov	r0, r4
   12338:	bl	10de4 <strrchr@plt>
   1233c:	cmp	r0, #0
   12340:	addne	r5, r0, #1
   12344:	moveq	r5, r4
   12348:	sub	r3, r5, r4
   1234c:	cmp	r3, #6
   12350:	ble	12390 <__snprintf_chk@plt+0x1570>
   12354:	mov	r2, #7
   12358:	ldr	r1, [pc, #96]	; 123c0 <__snprintf_chk@plt+0x15a0>
   1235c:	sub	r0, r5, #7
   12360:	bl	10e08 <strncmp@plt>
   12364:	cmp	r0, #0
   12368:	bne	12390 <__snprintf_chk@plt+0x1570>
   1236c:	mov	r2, #3
   12370:	ldr	r1, [pc, #76]	; 123c4 <__snprintf_chk@plt+0x15a4>
   12374:	mov	r0, r5
   12378:	bl	10e08 <strncmp@plt>
   1237c:	cmp	r0, #0
   12380:	addeq	r4, r5, #3
   12384:	ldreq	r3, [pc, #60]	; 123c8 <__snprintf_chk@plt+0x15a8>
   12388:	streq	r4, [r3]
   1238c:	movne	r4, r5
   12390:	ldr	r3, [pc, #52]	; 123cc <__snprintf_chk@plt+0x15ac>
   12394:	str	r4, [r3]
   12398:	ldr	r3, [pc, #48]	; 123d0 <__snprintf_chk@plt+0x15b0>
   1239c:	str	r4, [r3]
   123a0:	pop	{r4, r5, r6, pc}
   123a4:	ldr	r3, [pc, #40]	; 123d4 <__snprintf_chk@plt+0x15b4>
   123a8:	ldr	r3, [r3]
   123ac:	mov	r2, #55	; 0x37
   123b0:	mov	r1, #1
   123b4:	ldr	r0, [pc, #28]	; 123d8 <__snprintf_chk@plt+0x15b8>
   123b8:	bl	10ca0 <fwrite@plt>
   123bc:	bl	10e14 <abort@plt>
   123c0:	strdeq	r5, [r1], -r8
   123c4:	andeq	r5, r1, r0, lsl #22
   123c8:	andeq	r7, r2, r0, lsr #2
   123cc:	andeq	r7, r2, r8, asr #2
   123d0:	andeq	r7, r2, r4, lsr #2
   123d4:	andeq	r7, r2, r0, lsr r1
   123d8:	andeq	r5, r1, r0, asr #21
   123dc:	push	{r4, r5, r6, lr}
   123e0:	mov	r5, r0
   123e4:	mov	r4, r1
   123e8:	mov	r2, #48	; 0x30
   123ec:	mov	r1, #0
   123f0:	bl	10d84 <memset@plt>
   123f4:	cmp	r4, #10
   123f8:	beq	12408 <__snprintf_chk@plt+0x15e8>
   123fc:	str	r4, [r5]
   12400:	mov	r0, r5
   12404:	pop	{r4, r5, r6, pc}
   12408:	bl	10e14 <abort@plt>
   1240c:	push	{r4, r5, r6, lr}
   12410:	mov	r4, r0
   12414:	mov	r5, r1
   12418:	mov	r2, #5
   1241c:	mov	r1, r0
   12420:	mov	r0, #0
   12424:	bl	10c70 <dcgettext@plt>
   12428:	cmp	r4, r0
   1242c:	popne	{r4, r5, r6, pc}
   12430:	bl	14d44 <__snprintf_chk@plt+0x3f24>
   12434:	ldrb	r3, [r0]
   12438:	bic	r3, r3, #32
   1243c:	cmp	r3, #85	; 0x55
   12440:	beq	124bc <__snprintf_chk@plt+0x169c>
   12444:	cmp	r3, #71	; 0x47
   12448:	bne	12518 <__snprintf_chk@plt+0x16f8>
   1244c:	ldrb	r3, [r0, #1]
   12450:	bic	r3, r3, #32
   12454:	cmp	r3, #66	; 0x42
   12458:	bne	12518 <__snprintf_chk@plt+0x16f8>
   1245c:	ldrb	r3, [r0, #2]
   12460:	cmp	r3, #49	; 0x31
   12464:	bne	12518 <__snprintf_chk@plt+0x16f8>
   12468:	ldrb	r3, [r0, #3]
   1246c:	cmp	r3, #56	; 0x38
   12470:	bne	12518 <__snprintf_chk@plt+0x16f8>
   12474:	ldrb	r3, [r0, #4]
   12478:	cmp	r3, #48	; 0x30
   1247c:	bne	12518 <__snprintf_chk@plt+0x16f8>
   12480:	ldrb	r3, [r0, #5]
   12484:	cmp	r3, #51	; 0x33
   12488:	bne	12518 <__snprintf_chk@plt+0x16f8>
   1248c:	ldrb	r3, [r0, #6]
   12490:	cmp	r3, #48	; 0x30
   12494:	bne	12518 <__snprintf_chk@plt+0x16f8>
   12498:	ldrb	r3, [r0, #7]
   1249c:	cmp	r3, #0
   124a0:	bne	12518 <__snprintf_chk@plt+0x16f8>
   124a4:	ldrb	r2, [r4]
   124a8:	ldr	r3, [pc, #124]	; 1252c <__snprintf_chk@plt+0x170c>
   124ac:	ldr	r0, [pc, #124]	; 12530 <__snprintf_chk@plt+0x1710>
   124b0:	cmp	r2, #96	; 0x60
   124b4:	movne	r0, r3
   124b8:	pop	{r4, r5, r6, pc}
   124bc:	ldrb	r3, [r0, #1]
   124c0:	bic	r3, r3, #32
   124c4:	cmp	r3, #84	; 0x54
   124c8:	bne	12518 <__snprintf_chk@plt+0x16f8>
   124cc:	ldrb	r3, [r0, #2]
   124d0:	bic	r3, r3, #32
   124d4:	cmp	r3, #70	; 0x46
   124d8:	bne	12518 <__snprintf_chk@plt+0x16f8>
   124dc:	ldrb	r3, [r0, #3]
   124e0:	cmp	r3, #45	; 0x2d
   124e4:	bne	12518 <__snprintf_chk@plt+0x16f8>
   124e8:	ldrb	r3, [r0, #4]
   124ec:	cmp	r3, #56	; 0x38
   124f0:	bne	12518 <__snprintf_chk@plt+0x16f8>
   124f4:	ldrb	r3, [r0, #5]
   124f8:	cmp	r3, #0
   124fc:	bne	12518 <__snprintf_chk@plt+0x16f8>
   12500:	ldrb	r2, [r4]
   12504:	ldr	r3, [pc, #40]	; 12534 <__snprintf_chk@plt+0x1714>
   12508:	ldr	r0, [pc, #40]	; 12538 <__snprintf_chk@plt+0x1718>
   1250c:	cmp	r2, #96	; 0x60
   12510:	movne	r0, r3
   12514:	pop	{r4, r5, r6, pc}
   12518:	ldr	r3, [pc, #28]	; 1253c <__snprintf_chk@plt+0x171c>
   1251c:	ldr	r0, [pc, #28]	; 12540 <__snprintf_chk@plt+0x1720>
   12520:	cmp	r5, #9
   12524:	movne	r0, r3
   12528:	pop	{r4, r5, r6, pc}
   1252c:	andeq	r5, r1, ip, asr fp
   12530:	andeq	r5, r1, r8, ror #22
   12534:	andeq	r5, r1, r8, asr fp
   12538:	andeq	r5, r1, ip, ror #22
   1253c:	andeq	r5, r1, r0, ror #22
   12540:	andeq	r5, r1, r4, ror #22
   12544:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12548:	sub	sp, sp, #116	; 0x74
   1254c:	str	r0, [sp, #36]	; 0x24
   12550:	mov	sl, r1
   12554:	str	r2, [sp, #52]	; 0x34
   12558:	str	r3, [sp, #28]
   1255c:	ldr	r8, [sp, #152]	; 0x98
   12560:	bl	10cb8 <__ctype_get_mb_cur_max@plt>
   12564:	str	r0, [sp, #84]	; 0x54
   12568:	ldr	r3, [sp, #156]	; 0x9c
   1256c:	lsr	r3, r3, #1
   12570:	and	r3, r3, #1
   12574:	str	r3, [sp, #32]
   12578:	mov	r3, #1
   1257c:	str	r3, [sp, #40]	; 0x28
   12580:	mov	r3, #0
   12584:	str	r3, [sp, #80]	; 0x50
   12588:	str	r3, [sp, #44]	; 0x2c
   1258c:	str	r3, [sp, #48]	; 0x30
   12590:	str	r3, [sp, #60]	; 0x3c
   12594:	str	r3, [sp, #72]	; 0x48
   12598:	str	r3, [sp, #76]	; 0x4c
   1259c:	mov	r7, sl
   125a0:	mov	sl, r8
   125a4:	cmp	sl, #10
   125a8:	ldrls	pc, [pc, sl, lsl #2]
   125ac:	b	12764 <__snprintf_chk@plt+0x1944>
   125b0:	andeq	r2, r1, r4, lsl r6
   125b4:	andeq	r2, r1, r4, ror #11
   125b8:	andeq	r2, r1, r0, asr #14
   125bc:	ldrdeq	r2, [r1], -ip
   125c0:	strdeq	r2, [r1], -r4
   125c4:	andeq	r2, r1, r4, lsr #12
   125c8:	muleq	r1, r0, r6
   125cc:	andeq	r2, r1, r8, ror #14
   125d0:	andeq	r2, r1, r0, ror #12
   125d4:	andeq	r2, r1, r0, ror #12
   125d8:	andeq	r2, r1, r0, ror #12
   125dc:	mov	r3, #1
   125e0:	str	r3, [sp, #48]	; 0x30
   125e4:	mov	r3, #1
   125e8:	str	r3, [sp, #32]
   125ec:	str	r3, [sp, #60]	; 0x3c
   125f0:	ldr	r3, [pc, #4068]	; 135dc <__snprintf_chk@plt+0x27bc>
   125f4:	str	r3, [sp, #72]	; 0x48
   125f8:	mov	fp, #0
   125fc:	mov	sl, #2
   12600:	mov	r6, #0
   12604:	ldr	r3, [sp, #48]	; 0x30
   12608:	eor	r3, r3, #1
   1260c:	str	r3, [sp, #68]	; 0x44
   12610:	b	12ef8 <__snprintf_chk@plt+0x20d8>
   12614:	mov	r3, #0
   12618:	str	r3, [sp, #32]
   1261c:	mov	fp, r3
   12620:	b	12600 <__snprintf_chk@plt+0x17e0>
   12624:	ldr	r3, [sp, #32]
   12628:	cmp	r3, #0
   1262c:	bne	12780 <__snprintf_chk@plt+0x1960>
   12630:	cmp	r7, #0
   12634:	beq	127a0 <__snprintf_chk@plt+0x1980>
   12638:	ldr	r3, [sp, #36]	; 0x24
   1263c:	mov	r2, #34	; 0x22
   12640:	strb	r2, [r3]
   12644:	mov	r3, #1
   12648:	str	r3, [sp, #48]	; 0x30
   1264c:	str	r3, [sp, #60]	; 0x3c
   12650:	ldr	r3, [pc, #3980]	; 135e4 <__snprintf_chk@plt+0x27c4>
   12654:	str	r3, [sp, #72]	; 0x48
   12658:	mov	fp, #1
   1265c:	b	12600 <__snprintf_chk@plt+0x17e0>
   12660:	cmp	sl, #10
   12664:	beq	12688 <__snprintf_chk@plt+0x1868>
   12668:	mov	r1, sl
   1266c:	ldr	r0, [pc, #3948]	; 135e0 <__snprintf_chk@plt+0x27c0>
   12670:	bl	1240c <__snprintf_chk@plt+0x15ec>
   12674:	str	r0, [sp, #164]	; 0xa4
   12678:	mov	r1, sl
   1267c:	ldr	r0, [pc, #3928]	; 135dc <__snprintf_chk@plt+0x27bc>
   12680:	bl	1240c <__snprintf_chk@plt+0x15ec>
   12684:	str	r0, [sp, #168]	; 0xa8
   12688:	ldr	r3, [sp, #32]
   1268c:	cmp	r3, #0
   12690:	movne	fp, #0
   12694:	bne	126cc <__snprintf_chk@plt+0x18ac>
   12698:	ldr	r3, [sp, #164]	; 0xa4
   1269c:	ldrb	r3, [r3]
   126a0:	cmp	r3, #0
   126a4:	beq	126ec <__snprintf_chk@plt+0x18cc>
   126a8:	ldr	r2, [sp, #164]	; 0xa4
   126ac:	mov	fp, #0
   126b0:	ldr	r1, [sp, #36]	; 0x24
   126b4:	cmp	r7, fp
   126b8:	strbhi	r3, [r1, fp]
   126bc:	add	fp, fp, #1
   126c0:	ldrb	r3, [r2, #1]!
   126c4:	cmp	r3, #0
   126c8:	bne	126b4 <__snprintf_chk@plt+0x1894>
   126cc:	ldr	r0, [sp, #168]	; 0xa8
   126d0:	bl	10d54 <strlen@plt>
   126d4:	str	r0, [sp, #60]	; 0x3c
   126d8:	ldr	r3, [sp, #168]	; 0xa8
   126dc:	str	r3, [sp, #72]	; 0x48
   126e0:	mov	r3, #1
   126e4:	str	r3, [sp, #48]	; 0x30
   126e8:	b	12600 <__snprintf_chk@plt+0x17e0>
   126ec:	mov	fp, #0
   126f0:	b	126cc <__snprintf_chk@plt+0x18ac>
   126f4:	ldr	r3, [sp, #32]
   126f8:	cmp	r3, #0
   126fc:	bne	127bc <__snprintf_chk@plt+0x199c>
   12700:	mov	r3, #1
   12704:	str	r3, [sp, #48]	; 0x30
   12708:	cmp	r7, #0
   1270c:	beq	127d8 <__snprintf_chk@plt+0x19b8>
   12710:	ldr	r3, [sp, #36]	; 0x24
   12714:	mov	r2, #39	; 0x27
   12718:	strb	r2, [r3]
   1271c:	mov	r3, #0
   12720:	str	r3, [sp, #32]
   12724:	mov	r3, #1
   12728:	str	r3, [sp, #60]	; 0x3c
   1272c:	ldr	r3, [pc, #3752]	; 135dc <__snprintf_chk@plt+0x27bc>
   12730:	str	r3, [sp, #72]	; 0x48
   12734:	mov	fp, #1
   12738:	mov	sl, #2
   1273c:	b	12600 <__snprintf_chk@plt+0x17e0>
   12740:	ldr	r3, [sp, #32]
   12744:	cmp	r3, #0
   12748:	beq	12708 <__snprintf_chk@plt+0x18e8>
   1274c:	mov	r3, #1
   12750:	str	r3, [sp, #60]	; 0x3c
   12754:	ldr	r3, [pc, #3712]	; 135dc <__snprintf_chk@plt+0x27bc>
   12758:	str	r3, [sp, #72]	; 0x48
   1275c:	mov	fp, #0
   12760:	b	12600 <__snprintf_chk@plt+0x17e0>
   12764:	bl	10e14 <abort@plt>
   12768:	mov	r3, #0
   1276c:	str	r3, [sp, #32]
   12770:	mov	r3, #1
   12774:	str	r3, [sp, #48]	; 0x30
   12778:	mov	fp, #0
   1277c:	b	12600 <__snprintf_chk@plt+0x17e0>
   12780:	ldr	r3, [sp, #32]
   12784:	str	r3, [sp, #48]	; 0x30
   12788:	mov	r3, #1
   1278c:	str	r3, [sp, #60]	; 0x3c
   12790:	ldr	r3, [pc, #3660]	; 135e4 <__snprintf_chk@plt+0x27c4>
   12794:	str	r3, [sp, #72]	; 0x48
   12798:	mov	fp, #0
   1279c:	b	12600 <__snprintf_chk@plt+0x17e0>
   127a0:	mov	r3, #1
   127a4:	str	r3, [sp, #48]	; 0x30
   127a8:	str	r3, [sp, #60]	; 0x3c
   127ac:	ldr	r3, [pc, #3632]	; 135e4 <__snprintf_chk@plt+0x27c4>
   127b0:	str	r3, [sp, #72]	; 0x48
   127b4:	mov	fp, #1
   127b8:	b	12600 <__snprintf_chk@plt+0x17e0>
   127bc:	mov	r3, #1
   127c0:	str	r3, [sp, #60]	; 0x3c
   127c4:	ldr	r3, [pc, #3600]	; 135dc <__snprintf_chk@plt+0x27bc>
   127c8:	str	r3, [sp, #72]	; 0x48
   127cc:	mov	fp, #0
   127d0:	mov	sl, #2
   127d4:	b	12600 <__snprintf_chk@plt+0x17e0>
   127d8:	mov	r3, #0
   127dc:	str	r3, [sp, #32]
   127e0:	mov	r3, #1
   127e4:	str	r3, [sp, #60]	; 0x3c
   127e8:	ldr	r3, [pc, #3564]	; 135dc <__snprintf_chk@plt+0x27bc>
   127ec:	str	r3, [sp, #72]	; 0x48
   127f0:	mov	fp, #1
   127f4:	mov	sl, #2
   127f8:	b	12600 <__snprintf_chk@plt+0x17e0>
   127fc:	mov	r3, #0
   12800:	str	r3, [sp, #56]	; 0x38
   12804:	ldr	r3, [sp, #52]	; 0x34
   12808:	add	r2, r3, r6
   1280c:	str	r2, [sp, #64]	; 0x40
   12810:	ldrb	r4, [r3, r6]
   12814:	cmp	r4, #126	; 0x7e
   12818:	ldrls	pc, [pc, r4, lsl #2]
   1281c:	b	13058 <__snprintf_chk@plt+0x2238>
   12820:	andeq	r2, r1, r8, lsr sl
   12824:	andeq	r3, r1, r8, asr r0
   12828:	andeq	r3, r1, r8, asr r0
   1282c:	andeq	r3, r1, r8, asr r0
   12830:	andeq	r3, r1, r8, asr r0
   12834:	andeq	r3, r1, r8, asr r0
   12838:	andeq	r3, r1, r8, asr r0
   1283c:	muleq	r1, r4, sp
   12840:	andeq	r2, r1, r0, lsr sl
   12844:	andeq	r2, r1, ip, asr #26
   12848:	andeq	r2, r1, r4, asr #26
   1284c:			; <UNDEFINED> instruction: 0x00012cb4
   12850:	andeq	r2, r1, ip, lsr #25
   12854:	andeq	r2, r1, r8, lsr #20
   12858:	andeq	r3, r1, r8, asr r0
   1285c:	andeq	r3, r1, r8, asr r0
   12860:	andeq	r3, r1, r8, asr r0
   12864:	andeq	r3, r1, r8, asr r0
   12868:	andeq	r3, r1, r8, asr r0
   1286c:	andeq	r3, r1, r8, asr r0
   12870:	andeq	r3, r1, r8, asr r0
   12874:	andeq	r3, r1, r8, asr r0
   12878:	andeq	r3, r1, r8, asr r0
   1287c:	andeq	r3, r1, r8, asr r0
   12880:	andeq	r3, r1, r8, asr r0
   12884:	andeq	r3, r1, r8, asr r0
   12888:	andeq	r3, r1, r8, asr r0
   1288c:	andeq	r3, r1, r8, asr r0
   12890:	andeq	r3, r1, r8, asr r0
   12894:	andeq	r3, r1, r8, asr r0
   12898:	andeq	r3, r1, r8, asr r0
   1289c:	andeq	r3, r1, r8, asr r0
   128a0:	andeq	r2, r1, r8, ror #27
   128a4:	andeq	r2, r1, r4, ror #27
   128a8:	andeq	r2, r1, r4, ror #27
   128ac:			; <UNDEFINED> instruction: 0x00012dbc
   128b0:	andeq	r2, r1, r4, ror #27
   128b4:	andeq	r3, r1, ip, lsr #8
   128b8:	andeq	r2, r1, r4, ror #27
   128bc:			; <UNDEFINED> instruction: 0x00012fbc
   128c0:	andeq	r2, r1, r4, ror #27
   128c4:	andeq	r2, r1, r4, ror #27
   128c8:	andeq	r2, r1, r4, ror #27
   128cc:	andeq	r3, r1, ip, lsr #8
   128d0:	andeq	r3, r1, ip, lsr #8
   128d4:	andeq	r3, r1, ip, lsr #8
   128d8:	andeq	r3, r1, ip, lsr #8
   128dc:	andeq	r3, r1, ip, lsr #8
   128e0:	andeq	r3, r1, ip, lsr #8
   128e4:	andeq	r3, r1, ip, lsr #8
   128e8:	andeq	r3, r1, ip, lsr #8
   128ec:	andeq	r3, r1, ip, lsr #8
   128f0:	andeq	r3, r1, ip, lsr #8
   128f4:	andeq	r3, r1, ip, lsr #8
   128f8:	andeq	r3, r1, ip, lsr #8
   128fc:	andeq	r3, r1, ip, lsr #8
   12900:	andeq	r3, r1, ip, lsr #8
   12904:	andeq	r3, r1, ip, lsr #8
   12908:	andeq	r3, r1, ip, lsr #8
   1290c:	andeq	r2, r1, r4, ror #27
   12910:	andeq	r2, r1, r4, ror #27
   12914:	andeq	r2, r1, r4, ror #27
   12918:	andeq	r2, r1, r4, ror #27
   1291c:	andeq	r2, r1, r0, asr #22
   12920:	andeq	r3, r1, r8, asr r0
   12924:	andeq	r3, r1, ip, lsr #8
   12928:	andeq	r3, r1, ip, lsr #8
   1292c:	andeq	r3, r1, ip, lsr #8
   12930:	andeq	r3, r1, ip, lsr #8
   12934:	andeq	r3, r1, ip, lsr #8
   12938:	andeq	r3, r1, ip, lsr #8
   1293c:	andeq	r3, r1, ip, lsr #8
   12940:	andeq	r3, r1, ip, lsr #8
   12944:	andeq	r3, r1, ip, lsr #8
   12948:	andeq	r3, r1, ip, lsr #8
   1294c:	andeq	r3, r1, ip, lsr #8
   12950:	andeq	r3, r1, ip, lsr #8
   12954:	andeq	r3, r1, ip, lsr #8
   12958:	andeq	r3, r1, ip, lsr #8
   1295c:	andeq	r3, r1, ip, lsr #8
   12960:	andeq	r3, r1, ip, lsr #8
   12964:	andeq	r3, r1, ip, lsr #8
   12968:	andeq	r3, r1, ip, lsr #8
   1296c:	andeq	r3, r1, ip, lsr #8
   12970:	andeq	r3, r1, ip, lsr #8
   12974:	andeq	r3, r1, ip, lsr #8
   12978:	andeq	r3, r1, ip, lsr #8
   1297c:	andeq	r3, r1, ip, lsr #8
   12980:	andeq	r3, r1, ip, lsr #8
   12984:	andeq	r3, r1, ip, lsr #8
   12988:	andeq	r3, r1, ip, lsr #8
   1298c:	andeq	r2, r1, r4, ror #27
   12990:			; <UNDEFINED> instruction: 0x00012cbc
   12994:	andeq	r3, r1, ip, lsr #8
   12998:	andeq	r2, r1, r4, ror #27
   1299c:	andeq	r3, r1, ip, lsr #8
   129a0:	andeq	r2, r1, r4, ror #27
   129a4:	andeq	r3, r1, ip, lsr #8
   129a8:	andeq	r3, r1, ip, lsr #8
   129ac:	andeq	r3, r1, ip, lsr #8
   129b0:	andeq	r3, r1, ip, lsr #8
   129b4:	andeq	r3, r1, ip, lsr #8
   129b8:	andeq	r3, r1, ip, lsr #8
   129bc:	andeq	r3, r1, ip, lsr #8
   129c0:	andeq	r3, r1, ip, lsr #8
   129c4:	andeq	r3, r1, ip, lsr #8
   129c8:	andeq	r3, r1, ip, lsr #8
   129cc:	andeq	r3, r1, ip, lsr #8
   129d0:	andeq	r3, r1, ip, lsr #8
   129d4:	andeq	r3, r1, ip, lsr #8
   129d8:	andeq	r3, r1, ip, lsr #8
   129dc:	andeq	r3, r1, ip, lsr #8
   129e0:	andeq	r3, r1, ip, lsr #8
   129e4:	andeq	r3, r1, ip, lsr #8
   129e8:	andeq	r3, r1, ip, lsr #8
   129ec:	andeq	r3, r1, ip, lsr #8
   129f0:	andeq	r3, r1, ip, lsr #8
   129f4:	andeq	r3, r1, ip, lsr #8
   129f8:	andeq	r3, r1, ip, lsr #8
   129fc:	andeq	r3, r1, ip, lsr #8
   12a00:	andeq	r3, r1, ip, lsr #8
   12a04:	andeq	r3, r1, ip, lsr #8
   12a08:	andeq	r3, r1, ip, lsr #8
   12a0c:	muleq	r1, ip, sp
   12a10:	andeq	r2, r1, r4, ror #27
   12a14:	muleq	r1, ip, sp
   12a18:			; <UNDEFINED> instruction: 0x00012dbc
   12a1c:	mov	r3, #0
   12a20:	str	r3, [sp, #56]	; 0x38
   12a24:	b	12804 <__snprintf_chk@plt+0x19e4>
   12a28:	mov	r3, #114	; 0x72
   12a2c:	b	12d50 <__snprintf_chk@plt+0x1f30>
   12a30:	mov	r3, #98	; 0x62
   12a34:	b	12d68 <__snprintf_chk@plt+0x1f48>
   12a38:	ldr	r3, [sp, #48]	; 0x30
   12a3c:	cmp	r3, #0
   12a40:	beq	12b28 <__snprintf_chk@plt+0x1d08>
   12a44:	ldr	r3, [sp, #32]
   12a48:	cmp	r3, #0
   12a4c:	bne	135b0 <__snprintf_chk@plt+0x2790>
   12a50:	ldr	r3, [sp, #44]	; 0x2c
   12a54:	eor	r3, r3, #1
   12a58:	cmp	sl, #2
   12a5c:	movne	r3, #0
   12a60:	andeq	r3, r3, #1
   12a64:	cmp	r3, #0
   12a68:	moveq	r2, fp
   12a6c:	beq	12ab0 <__snprintf_chk@plt+0x1c90>
   12a70:	cmp	r7, fp
   12a74:	ldrhi	r2, [sp, #36]	; 0x24
   12a78:	movhi	r1, #39	; 0x27
   12a7c:	strbhi	r1, [r2, fp]
   12a80:	add	r2, fp, #1
   12a84:	cmp	r7, r2
   12a88:	ldrhi	r1, [sp, #36]	; 0x24
   12a8c:	movhi	r0, #36	; 0x24
   12a90:	strbhi	r0, [r1, r2]
   12a94:	add	r2, fp, #2
   12a98:	cmp	r7, r2
   12a9c:	ldrhi	r1, [sp, #36]	; 0x24
   12aa0:	movhi	r0, #39	; 0x27
   12aa4:	strbhi	r0, [r1, r2]
   12aa8:	add	r2, fp, #3
   12aac:	str	r3, [sp, #44]	; 0x2c
   12ab0:	cmp	r7, r2
   12ab4:	ldrhi	r3, [sp, #36]	; 0x24
   12ab8:	movhi	r1, #92	; 0x5c
   12abc:	strbhi	r1, [r3, r2]
   12ac0:	add	fp, r2, #1
   12ac4:	cmp	r5, #0
   12ac8:	beq	13434 <__snprintf_chk@plt+0x2614>
   12acc:	add	r3, r6, #1
   12ad0:	ldr	r1, [sp, #28]
   12ad4:	cmp	r1, r3
   12ad8:	bls	13444 <__snprintf_chk@plt+0x2624>
   12adc:	ldr	r1, [sp, #52]	; 0x34
   12ae0:	ldrb	r3, [r1, r3]
   12ae4:	sub	r3, r3, #48	; 0x30
   12ae8:	uxtb	r3, r3
   12aec:	cmp	r3, #9
   12af0:	bhi	13450 <__snprintf_chk@plt+0x2630>
   12af4:	cmp	r7, fp
   12af8:	movhi	r3, #48	; 0x30
   12afc:	ldrhi	r1, [sp, #36]	; 0x24
   12b00:	strbhi	r3, [r1, fp]
   12b04:	add	r3, r2, #2
   12b08:	cmp	r7, r3
   12b0c:	movhi	r1, #48	; 0x30
   12b10:	ldrhi	r0, [sp, #36]	; 0x24
   12b14:	strbhi	r1, [r0, r3]
   12b18:	add	fp, r2, #3
   12b1c:	ldr	r8, [sp, #32]
   12b20:	mov	r4, #48	; 0x30
   12b24:	b	12e00 <__snprintf_chk@plt+0x1fe0>
   12b28:	ldr	r3, [sp, #156]	; 0x9c
   12b2c:	tst	r3, #1
   12b30:	bne	12ef4 <__snprintf_chk@plt+0x20d4>
   12b34:	ldr	r5, [sp, #48]	; 0x30
   12b38:	mov	r8, r5
   12b3c:	b	12e00 <__snprintf_chk@plt+0x1fe0>
   12b40:	cmp	sl, #2
   12b44:	beq	12b5c <__snprintf_chk@plt+0x1d3c>
   12b48:	cmp	sl, #5
   12b4c:	beq	12b74 <__snprintf_chk@plt+0x1d54>
   12b50:	mov	r8, #0
   12b54:	mov	r5, r8
   12b58:	b	12e00 <__snprintf_chk@plt+0x1fe0>
   12b5c:	ldr	r3, [sp, #32]
   12b60:	cmp	r3, #0
   12b64:	bne	135c4 <__snprintf_chk@plt+0x27a4>
   12b68:	mov	r8, r3
   12b6c:	mov	r5, r3
   12b70:	b	12e00 <__snprintf_chk@plt+0x1fe0>
   12b74:	ldr	r3, [sp, #156]	; 0x9c
   12b78:	tst	r3, #4
   12b7c:	beq	1345c <__snprintf_chk@plt+0x263c>
   12b80:	add	r3, r6, #2
   12b84:	ldr	r2, [sp, #28]
   12b88:	cmp	r2, r3
   12b8c:	bls	13468 <__snprintf_chk@plt+0x2648>
   12b90:	ldr	r2, [sp, #52]	; 0x34
   12b94:	add	r2, r2, r6
   12b98:	ldrb	r2, [r2, #1]
   12b9c:	cmp	r2, #63	; 0x3f
   12ba0:	movne	r8, #0
   12ba4:	movne	r5, r8
   12ba8:	bne	12e00 <__snprintf_chk@plt+0x1fe0>
   12bac:	ldr	r2, [sp, #52]	; 0x34
   12bb0:	ldrb	r2, [r2, r3]
   12bb4:	sub	r1, r2, #33	; 0x21
   12bb8:	cmp	r1, #29
   12bbc:	ldrls	pc, [pc, r1, lsl #2]
   12bc0:	b	13474 <__snprintf_chk@plt+0x2654>
   12bc4:	andeq	r2, r1, ip, lsr ip
   12bc8:	andeq	r3, r1, r4, ror r4
   12bcc:	andeq	r3, r1, r4, ror r4
   12bd0:	andeq	r3, r1, r4, ror r4
   12bd4:	andeq	r3, r1, r4, ror r4
   12bd8:	andeq	r3, r1, r4, ror r4
   12bdc:	andeq	r2, r1, ip, lsr ip
   12be0:	andeq	r2, r1, ip, lsr ip
   12be4:	andeq	r2, r1, ip, lsr ip
   12be8:	andeq	r3, r1, r4, ror r4
   12bec:	andeq	r3, r1, r4, ror r4
   12bf0:	andeq	r3, r1, r4, ror r4
   12bf4:	andeq	r2, r1, ip, lsr ip
   12bf8:	andeq	r3, r1, r4, ror r4
   12bfc:	andeq	r2, r1, ip, lsr ip
   12c00:	andeq	r3, r1, r4, ror r4
   12c04:	andeq	r3, r1, r4, ror r4
   12c08:	andeq	r3, r1, r4, ror r4
   12c0c:	andeq	r3, r1, r4, ror r4
   12c10:	andeq	r3, r1, r4, ror r4
   12c14:	andeq	r3, r1, r4, ror r4
   12c18:	andeq	r3, r1, r4, ror r4
   12c1c:	andeq	r3, r1, r4, ror r4
   12c20:	andeq	r3, r1, r4, ror r4
   12c24:	andeq	r3, r1, r4, ror r4
   12c28:	andeq	r3, r1, r4, ror r4
   12c2c:	andeq	r3, r1, r4, ror r4
   12c30:	andeq	r2, r1, ip, lsr ip
   12c34:	andeq	r2, r1, ip, lsr ip
   12c38:	andeq	r2, r1, ip, lsr ip
   12c3c:	ldr	r1, [sp, #32]
   12c40:	cmp	r1, #0
   12c44:	bne	13684 <__snprintf_chk@plt+0x2864>
   12c48:	cmp	r7, fp
   12c4c:	movhi	r1, #63	; 0x3f
   12c50:	ldrhi	r0, [sp, #36]	; 0x24
   12c54:	strbhi	r1, [r0, fp]
   12c58:	add	r1, fp, #1
   12c5c:	cmp	r7, r1
   12c60:	ldrhi	r0, [sp, #36]	; 0x24
   12c64:	movhi	ip, #34	; 0x22
   12c68:	strbhi	ip, [r0, r1]
   12c6c:	add	r1, fp, #2
   12c70:	cmp	r7, r1
   12c74:	ldrhi	r0, [sp, #36]	; 0x24
   12c78:	movhi	ip, #34	; 0x22
   12c7c:	strbhi	ip, [r0, r1]
   12c80:	add	r1, fp, #3
   12c84:	cmp	r7, r1
   12c88:	movhi	r0, #63	; 0x3f
   12c8c:	ldrhi	ip, [sp, #36]	; 0x24
   12c90:	strbhi	r0, [ip, r1]
   12c94:	add	fp, fp, #4
   12c98:	ldr	r5, [sp, #32]
   12c9c:	mov	r8, r5
   12ca0:	mov	r4, r2
   12ca4:	mov	r6, r3
   12ca8:	b	12e00 <__snprintf_chk@plt+0x1fe0>
   12cac:	mov	r3, #102	; 0x66
   12cb0:	b	12d68 <__snprintf_chk@plt+0x1f48>
   12cb4:	mov	r3, #118	; 0x76
   12cb8:	b	12d68 <__snprintf_chk@plt+0x1f48>
   12cbc:	cmp	sl, #2
   12cc0:	beq	12d2c <__snprintf_chk@plt+0x1f0c>
   12cc4:	ldr	r3, [sp, #48]	; 0x30
   12cc8:	ldr	r2, [sp, #32]
   12ccc:	and	r3, r3, r2
   12cd0:	tst	r9, r3
   12cd4:	moveq	r3, r4
   12cd8:	beq	12d68 <__snprintf_chk@plt+0x1f48>
   12cdc:	mov	r8, #0
   12ce0:	mov	r5, r8
   12ce4:	eor	r5, r5, #1
   12ce8:	ldr	r3, [sp, #44]	; 0x2c
   12cec:	and	r5, r5, r3
   12cf0:	tst	r5, #255	; 0xff
   12cf4:	beq	12ed4 <__snprintf_chk@plt+0x20b4>
   12cf8:	cmp	r7, fp
   12cfc:	ldrhi	r3, [sp, #36]	; 0x24
   12d00:	movhi	r2, #39	; 0x27
   12d04:	strbhi	r2, [r3, fp]
   12d08:	add	r3, fp, #1
   12d0c:	cmp	r7, r3
   12d10:	ldrhi	r2, [sp, #36]	; 0x24
   12d14:	movhi	r1, #39	; 0x27
   12d18:	strbhi	r1, [r2, r3]
   12d1c:	add	fp, fp, #2
   12d20:	mov	r3, #0
   12d24:	str	r3, [sp, #44]	; 0x2c
   12d28:	b	12ed4 <__snprintf_chk@plt+0x20b4>
   12d2c:	ldr	r3, [sp, #32]
   12d30:	cmp	r3, #0
   12d34:	bne	135d0 <__snprintf_chk@plt+0x27b0>
   12d38:	mov	r8, r3
   12d3c:	mov	r5, r3
   12d40:	b	12ce4 <__snprintf_chk@plt+0x1ec4>
   12d44:	mov	r3, #110	; 0x6e
   12d48:	b	12d50 <__snprintf_chk@plt+0x1f30>
   12d4c:	mov	r3, #116	; 0x74
   12d50:	ldr	r2, [sp, #32]
   12d54:	cmp	sl, #2
   12d58:	movne	r2, #0
   12d5c:	andeq	r2, r2, #1
   12d60:	cmp	r2, #0
   12d64:	bne	12d88 <__snprintf_chk@plt+0x1f68>
   12d68:	ldr	r2, [sp, #48]	; 0x30
   12d6c:	cmp	r2, #0
   12d70:	moveq	r8, r2
   12d74:	moveq	r5, r2
   12d78:	beq	12e00 <__snprintf_chk@plt+0x1fe0>
   12d7c:	mov	r4, r3
   12d80:	mov	r8, #0
   12d84:	b	12e58 <__snprintf_chk@plt+0x2038>
   12d88:	mov	r8, sl
   12d8c:	mov	sl, r7
   12d90:	b	135fc <__snprintf_chk@plt+0x27dc>
   12d94:	mov	r3, #97	; 0x61
   12d98:	b	12d68 <__snprintf_chk@plt+0x1f48>
   12d9c:	ldr	r3, [sp, #28]
   12da0:	cmn	r3, #1
   12da4:	beq	12dd0 <__snprintf_chk@plt+0x1fb0>
   12da8:	ldr	r3, [sp, #28]
   12dac:	subs	r3, r3, #1
   12db0:	movne	r3, #1
   12db4:	cmp	r3, #0
   12db8:	bne	13480 <__snprintf_chk@plt+0x2660>
   12dbc:	cmp	r6, #0
   12dc0:	beq	12de8 <__snprintf_chk@plt+0x1fc8>
   12dc4:	mov	r8, #0
   12dc8:	mov	r5, r8
   12dcc:	b	12e00 <__snprintf_chk@plt+0x1fe0>
   12dd0:	ldr	r3, [sp, #52]	; 0x34
   12dd4:	ldrb	r3, [r3, #1]
   12dd8:	adds	r3, r3, #0
   12ddc:	movne	r3, #1
   12de0:	b	12db4 <__snprintf_chk@plt+0x1f94>
   12de4:	mov	r8, #0
   12de8:	ldr	r5, [sp, #32]
   12dec:	cmp	sl, #2
   12df0:	movne	r5, #0
   12df4:	andeq	r5, r5, #1
   12df8:	cmp	r5, #0
   12dfc:	bne	12fb0 <__snprintf_chk@plt+0x2190>
   12e00:	ldr	r3, [sp, #68]	; 0x44
   12e04:	cmp	sl, #2
   12e08:	orreq	r3, r3, #1
   12e0c:	eor	r3, r3, #1
   12e10:	ldr	r2, [sp, #32]
   12e14:	orr	r3, r2, r3
   12e18:	tst	r3, #255	; 0xff
   12e1c:	beq	12e4c <__snprintf_chk@plt+0x202c>
   12e20:	ldr	r3, [sp, #160]	; 0xa0
   12e24:	cmp	r3, #0
   12e28:	beq	12e4c <__snprintf_chk@plt+0x202c>
   12e2c:	lsr	r2, r4, #5
   12e30:	uxtb	r2, r2
   12e34:	and	r3, r4, #31
   12e38:	ldr	r1, [sp, #160]	; 0xa0
   12e3c:	ldr	r2, [r1, r2, lsl #2]
   12e40:	lsr	r3, r2, r3
   12e44:	tst	r3, #1
   12e48:	bne	12e58 <__snprintf_chk@plt+0x2038>
   12e4c:	ldr	r3, [sp, #56]	; 0x38
   12e50:	cmp	r3, #0
   12e54:	beq	12ce4 <__snprintf_chk@plt+0x1ec4>
   12e58:	ldr	r3, [sp, #32]
   12e5c:	cmp	r3, #0
   12e60:	bne	1366c <__snprintf_chk@plt+0x284c>
   12e64:	ldr	r3, [sp, #44]	; 0x2c
   12e68:	eor	r3, r3, #1
   12e6c:	cmp	sl, #2
   12e70:	movne	r3, #0
   12e74:	andeq	r3, r3, #1
   12e78:	cmp	r3, #0
   12e7c:	beq	12ec0 <__snprintf_chk@plt+0x20a0>
   12e80:	cmp	r7, fp
   12e84:	ldrhi	r2, [sp, #36]	; 0x24
   12e88:	movhi	r1, #39	; 0x27
   12e8c:	strbhi	r1, [r2, fp]
   12e90:	add	r2, fp, #1
   12e94:	cmp	r7, r2
   12e98:	ldrhi	r1, [sp, #36]	; 0x24
   12e9c:	movhi	r0, #36	; 0x24
   12ea0:	strbhi	r0, [r1, r2]
   12ea4:	add	r2, fp, #2
   12ea8:	cmp	r7, r2
   12eac:	ldrhi	r1, [sp, #36]	; 0x24
   12eb0:	movhi	r0, #39	; 0x27
   12eb4:	strbhi	r0, [r1, r2]
   12eb8:	add	fp, fp, #3
   12ebc:	str	r3, [sp, #44]	; 0x2c
   12ec0:	cmp	r7, fp
   12ec4:	ldrhi	r3, [sp, #36]	; 0x24
   12ec8:	movhi	r2, #92	; 0x5c
   12ecc:	strbhi	r2, [r3, fp]
   12ed0:	add	fp, fp, #1
   12ed4:	cmp	fp, r7
   12ed8:	ldrcc	r3, [sp, #36]	; 0x24
   12edc:	strbcc	r4, [r3, fp]
   12ee0:	add	fp, fp, #1
   12ee4:	ldr	r3, [sp, #40]	; 0x28
   12ee8:	cmp	r8, #0
   12eec:	moveq	r3, #0
   12ef0:	str	r3, [sp, #40]	; 0x28
   12ef4:	add	r6, r6, #1
   12ef8:	ldr	r3, [sp, #28]
   12efc:	cmn	r3, #1
   12f00:	beq	1348c <__snprintf_chk@plt+0x266c>
   12f04:	ldr	r3, [sp, #28]
   12f08:	subs	r8, r3, r6
   12f0c:	movne	r8, #1
   12f10:	cmp	r8, #0
   12f14:	beq	134a0 <__snprintf_chk@plt+0x2680>
   12f18:	ldr	r5, [sp, #48]	; 0x30
   12f1c:	cmp	sl, #2
   12f20:	moveq	r5, #0
   12f24:	andne	r5, r5, #1
   12f28:	ldr	r3, [sp, #60]	; 0x3c
   12f2c:	adds	r9, r3, #0
   12f30:	movne	r9, #1
   12f34:	ands	r2, r5, r9
   12f38:	str	r2, [sp, #56]	; 0x38
   12f3c:	beq	12804 <__snprintf_chk@plt+0x19e4>
   12f40:	add	r4, r6, r3
   12f44:	ldr	r2, [sp, #28]
   12f48:	cmp	r3, #1
   12f4c:	movls	r3, #0
   12f50:	movhi	r3, #1
   12f54:	cmn	r2, #1
   12f58:	movne	r3, #0
   12f5c:	cmp	r3, #0
   12f60:	beq	12f70 <__snprintf_chk@plt+0x2150>
   12f64:	ldr	r0, [sp, #52]	; 0x34
   12f68:	bl	10d54 <strlen@plt>
   12f6c:	str	r0, [sp, #28]
   12f70:	ldr	r3, [sp, #28]
   12f74:	cmp	r3, r4
   12f78:	bcc	127fc <__snprintf_chk@plt+0x19dc>
   12f7c:	ldr	r2, [sp, #60]	; 0x3c
   12f80:	ldr	r1, [sp, #72]	; 0x48
   12f84:	ldr	r3, [sp, #52]	; 0x34
   12f88:	add	r0, r3, r6
   12f8c:	bl	10c58 <memcmp@plt>
   12f90:	cmp	r0, #0
   12f94:	bne	12a1c <__snprintf_chk@plt+0x1bfc>
   12f98:	ldr	r3, [sp, #32]
   12f9c:	cmp	r3, #0
   12fa0:	beq	12804 <__snprintf_chk@plt+0x19e4>
   12fa4:	mov	r8, sl
   12fa8:	mov	sl, r7
   12fac:	b	135fc <__snprintf_chk@plt+0x27dc>
   12fb0:	mov	r8, sl
   12fb4:	mov	sl, r7
   12fb8:	b	135fc <__snprintf_chk@plt+0x27dc>
   12fbc:	cmp	sl, #2
   12fc0:	strne	r8, [sp, #80]	; 0x50
   12fc4:	movne	r5, #0
   12fc8:	bne	12e00 <__snprintf_chk@plt+0x1fe0>
   12fcc:	ldr	r3, [sp, #32]
   12fd0:	cmp	r3, #0
   12fd4:	bne	135e8 <__snprintf_chk@plt+0x27c8>
   12fd8:	ldr	r2, [sp, #76]	; 0x4c
   12fdc:	adds	r3, r7, #0
   12fe0:	movne	r3, #1
   12fe4:	cmp	r2, #0
   12fe8:	movne	r3, #0
   12fec:	cmp	r3, #0
   12ff0:	movne	r3, #0
   12ff4:	bne	13024 <__snprintf_chk@plt+0x2204>
   12ff8:	cmp	r7, fp
   12ffc:	ldrhi	r3, [sp, #36]	; 0x24
   13000:	movhi	r2, #39	; 0x27
   13004:	strbhi	r2, [r3, fp]
   13008:	add	r3, fp, #1
   1300c:	cmp	r7, r3
   13010:	ldrhi	r2, [sp, #36]	; 0x24
   13014:	movhi	r1, #92	; 0x5c
   13018:	strbhi	r1, [r2, r3]
   1301c:	mov	r3, r7
   13020:	ldr	r7, [sp, #76]	; 0x4c
   13024:	add	r2, fp, #2
   13028:	cmp	r2, r3
   1302c:	ldrcc	r1, [sp, #36]	; 0x24
   13030:	movcc	r0, #39	; 0x27
   13034:	strbcc	r0, [r1, r2]
   13038:	add	fp, fp, #3
   1303c:	ldr	r2, [sp, #32]
   13040:	mov	r5, r2
   13044:	str	r8, [sp, #80]	; 0x50
   13048:	str	r2, [sp, #44]	; 0x2c
   1304c:	str	r7, [sp, #76]	; 0x4c
   13050:	mov	r7, r3
   13054:	b	12e00 <__snprintf_chk@plt+0x1fe0>
   13058:	ldr	r5, [sp, #84]	; 0x54
   1305c:	cmp	r5, #1
   13060:	beq	13090 <__snprintf_chk@plt+0x2270>
   13064:	mov	r3, #0
   13068:	str	r3, [sp, #104]	; 0x68
   1306c:	str	r3, [sp, #108]	; 0x6c
   13070:	ldr	r3, [sp, #28]
   13074:	cmn	r3, #1
   13078:	beq	130c4 <__snprintf_chk@plt+0x22a4>
   1307c:	mov	r3, #0
   13080:	str	r4, [sp, #88]	; 0x58
   13084:	str	fp, [sp, #92]	; 0x5c
   13088:	mov	fp, r3
   1308c:	b	131ec <__snprintf_chk@plt+0x23cc>
   13090:	bl	10d3c <__ctype_b_loc@plt>
   13094:	ldr	r2, [r0]
   13098:	lsl	r3, r4, #1
   1309c:	ldrh	r8, [r2, r3]
   130a0:	lsr	r8, r8, #14
   130a4:	and	r8, r8, #1
   130a8:	mov	r2, r5
   130ac:	eor	r5, r8, #1
   130b0:	ldr	r3, [sp, #48]	; 0x30
   130b4:	and	r5, r5, r3
   130b8:	ands	r5, r5, #255	; 0xff
   130bc:	beq	12e00 <__snprintf_chk@plt+0x1fe0>
   130c0:	b	13284 <__snprintf_chk@plt+0x2464>
   130c4:	ldr	r0, [sp, #52]	; 0x34
   130c8:	bl	10d54 <strlen@plt>
   130cc:	str	r0, [sp, #28]
   130d0:	b	1307c <__snprintf_chk@plt+0x225c>
   130d4:	mov	r2, fp
   130d8:	mov	r1, r4
   130dc:	ldr	r4, [sp, #88]	; 0x58
   130e0:	ldr	fp, [sp, #92]	; 0x5c
   130e4:	ldr	r0, [sp, #28]
   130e8:	cmp	r0, r5
   130ec:	bls	132b8 <__snprintf_chk@plt+0x2498>
   130f0:	ldrb	r3, [r1]
   130f4:	cmp	r3, #0
   130f8:	beq	132c0 <__snprintf_chk@plt+0x24a0>
   130fc:	mov	r3, r1
   13100:	add	r2, r2, #1
   13104:	add	r1, r6, r2
   13108:	cmp	r0, r1
   1310c:	bls	132c8 <__snprintf_chk@plt+0x24a8>
   13110:	ldrb	r1, [r3, #1]!
   13114:	cmp	r1, #0
   13118:	bne	13100 <__snprintf_chk@plt+0x22e0>
   1311c:	mov	r8, #0
   13120:	b	1327c <__snprintf_chk@plt+0x245c>
   13124:	cmp	r4, r5
   13128:	beq	131c8 <__snprintf_chk@plt+0x23a8>
   1312c:	ldrb	r3, [r4, #1]!
   13130:	sub	r3, r3, #91	; 0x5b
   13134:	cmp	r3, #33	; 0x21
   13138:	ldrls	pc, [pc, r3, lsl #2]
   1313c:	b	13124 <__snprintf_chk@plt+0x2304>
   13140:	strdeq	r3, [r1], -r4
   13144:	strdeq	r3, [r1], -r4
   13148:	andeq	r3, r1, r4, lsr #2
   1314c:	strdeq	r3, [r1], -r4
   13150:	andeq	r3, r1, r4, lsr #2
   13154:	strdeq	r3, [r1], -r4
   13158:	andeq	r3, r1, r4, lsr #2
   1315c:	andeq	r3, r1, r4, lsr #2
   13160:	andeq	r3, r1, r4, lsr #2
   13164:	andeq	r3, r1, r4, lsr #2
   13168:	andeq	r3, r1, r4, lsr #2
   1316c:	andeq	r3, r1, r4, lsr #2
   13170:	andeq	r3, r1, r4, lsr #2
   13174:	andeq	r3, r1, r4, lsr #2
   13178:	andeq	r3, r1, r4, lsr #2
   1317c:	andeq	r3, r1, r4, lsr #2
   13180:	andeq	r3, r1, r4, lsr #2
   13184:	andeq	r3, r1, r4, lsr #2
   13188:	andeq	r3, r1, r4, lsr #2
   1318c:	andeq	r3, r1, r4, lsr #2
   13190:	andeq	r3, r1, r4, lsr #2
   13194:	andeq	r3, r1, r4, lsr #2
   13198:	andeq	r3, r1, r4, lsr #2
   1319c:	andeq	r3, r1, r4, lsr #2
   131a0:	andeq	r3, r1, r4, lsr #2
   131a4:	andeq	r3, r1, r4, lsr #2
   131a8:	andeq	r3, r1, r4, lsr #2
   131ac:	andeq	r3, r1, r4, lsr #2
   131b0:	andeq	r3, r1, r4, lsr #2
   131b4:	andeq	r3, r1, r4, lsr #2
   131b8:	andeq	r3, r1, r4, lsr #2
   131bc:	andeq	r3, r1, r4, lsr #2
   131c0:	andeq	r3, r1, r4, lsr #2
   131c4:	strdeq	r3, [r1], -r4
   131c8:	ldr	r0, [sp, #100]	; 0x64
   131cc:	bl	10c94 <iswprint@plt>
   131d0:	cmp	r0, #0
   131d4:	moveq	r8, #0
   131d8:	add	fp, fp, r9
   131dc:	add	r0, sp, #104	; 0x68
   131e0:	bl	10c40 <mbsinit@plt>
   131e4:	cmp	r0, #0
   131e8:	bne	1325c <__snprintf_chk@plt+0x243c>
   131ec:	add	r5, r6, fp
   131f0:	ldr	r3, [sp, #52]	; 0x34
   131f4:	add	r4, r3, r5
   131f8:	add	r3, sp, #104	; 0x68
   131fc:	ldr	r2, [sp, #28]
   13200:	sub	r2, r2, r5
   13204:	mov	r1, r4
   13208:	add	r0, sp, #100	; 0x64
   1320c:	bl	14d78 <__snprintf_chk@plt+0x3f58>
   13210:	subs	r9, r0, #0
   13214:	beq	132d0 <__snprintf_chk@plt+0x24b0>
   13218:	cmn	r9, #1
   1321c:	beq	1326c <__snprintf_chk@plt+0x244c>
   13220:	cmn	r9, #2
   13224:	beq	130d4 <__snprintf_chk@plt+0x22b4>
   13228:	ldr	r3, [sp, #32]
   1322c:	cmp	sl, #2
   13230:	movne	r3, #0
   13234:	andeq	r3, r3, #1
   13238:	cmp	r3, #0
   1323c:	beq	131c8 <__snprintf_chk@plt+0x23a8>
   13240:	cmp	r9, #1
   13244:	bls	131c8 <__snprintf_chk@plt+0x23a8>
   13248:	sub	r3, r9, #1
   1324c:	add	r5, r3, r5
   13250:	ldr	r3, [sp, #52]	; 0x34
   13254:	add	r5, r3, r5
   13258:	b	1312c <__snprintf_chk@plt+0x230c>
   1325c:	ldr	r4, [sp, #88]	; 0x58
   13260:	mov	r2, fp
   13264:	ldr	fp, [sp, #92]	; 0x5c
   13268:	b	1327c <__snprintf_chk@plt+0x245c>
   1326c:	ldr	r4, [sp, #88]	; 0x58
   13270:	mov	r2, fp
   13274:	ldr	fp, [sp, #92]	; 0x5c
   13278:	mov	r8, #0
   1327c:	cmp	r2, #1
   13280:	bls	130ac <__snprintf_chk@plt+0x228c>
   13284:	add	r1, r6, r2
   13288:	ldr	ip, [sp, #64]	; 0x40
   1328c:	mov	r5, #0
   13290:	eor	r3, r8, #1
   13294:	ldr	r2, [sp, #48]	; 0x30
   13298:	and	r3, r3, r2
   1329c:	uxtb	r3, r3
   132a0:	ldr	r9, [sp, #32]
   132a4:	ldr	lr, [sp, #44]	; 0x2c
   132a8:	ldr	r2, [sp, #56]	; 0x38
   132ac:	str	r8, [sp, #56]	; 0x38
   132b0:	ldr	r0, [sp, #36]	; 0x24
   132b4:	b	13350 <__snprintf_chk@plt+0x2530>
   132b8:	mov	r8, #0
   132bc:	b	1327c <__snprintf_chk@plt+0x245c>
   132c0:	mov	r8, #0
   132c4:	b	1327c <__snprintf_chk@plt+0x245c>
   132c8:	mov	r8, #0
   132cc:	b	1327c <__snprintf_chk@plt+0x245c>
   132d0:	ldr	r4, [sp, #88]	; 0x58
   132d4:	mov	r2, fp
   132d8:	ldr	fp, [sp, #92]	; 0x5c
   132dc:	b	1327c <__snprintf_chk@plt+0x245c>
   132e0:	cmp	r2, #0
   132e4:	beq	132f8 <__snprintf_chk@plt+0x24d8>
   132e8:	cmp	r7, fp
   132ec:	movhi	r2, #92	; 0x5c
   132f0:	strbhi	r2, [r0, fp]
   132f4:	add	fp, fp, #1
   132f8:	add	r8, r6, #1
   132fc:	cmp	r1, r8
   13300:	bls	13408 <__snprintf_chk@plt+0x25e8>
   13304:	eor	r2, r5, #1
   13308:	and	r2, r2, lr
   1330c:	ands	r2, r2, #255	; 0xff
   13310:	beq	13424 <__snprintf_chk@plt+0x2604>
   13314:	cmp	r7, fp
   13318:	movhi	r2, #39	; 0x27
   1331c:	strbhi	r2, [r0, fp]
   13320:	add	r2, fp, #1
   13324:	cmp	r7, r2
   13328:	movhi	lr, #39	; 0x27
   1332c:	strbhi	lr, [r0, r2]
   13330:	add	fp, fp, #2
   13334:	mov	r6, r8
   13338:	mov	r2, r3
   1333c:	mov	lr, r3
   13340:	cmp	r7, fp
   13344:	strbhi	r4, [r0, fp]
   13348:	add	fp, fp, #1
   1334c:	ldrb	r4, [ip, #1]!
   13350:	cmp	r3, #0
   13354:	beq	132e0 <__snprintf_chk@plt+0x24c0>
   13358:	cmp	r9, #0
   1335c:	bne	13660 <__snprintf_chk@plt+0x2840>
   13360:	eor	r5, lr, #1
   13364:	cmp	sl, #2
   13368:	movne	r5, #0
   1336c:	andeq	r5, r5, #1
   13370:	cmp	r5, #0
   13374:	beq	133ac <__snprintf_chk@plt+0x258c>
   13378:	cmp	r7, fp
   1337c:	movhi	lr, #39	; 0x27
   13380:	strbhi	lr, [r0, fp]
   13384:	add	lr, fp, #1
   13388:	cmp	r7, lr
   1338c:	movhi	r8, #36	; 0x24
   13390:	strbhi	r8, [r0, lr]
   13394:	add	lr, fp, #2
   13398:	cmp	r7, lr
   1339c:	movhi	r8, #39	; 0x27
   133a0:	strbhi	r8, [r0, lr]
   133a4:	add	fp, fp, #3
   133a8:	mov	lr, r5
   133ac:	cmp	r7, fp
   133b0:	movhi	r5, #92	; 0x5c
   133b4:	strbhi	r5, [r0, fp]
   133b8:	add	r5, fp, #1
   133bc:	cmp	r7, r5
   133c0:	lsrhi	r8, r4, #6
   133c4:	addhi	r8, r8, #48	; 0x30
   133c8:	strbhi	r8, [r0, r5]
   133cc:	add	r8, fp, #2
   133d0:	cmp	r7, r8
   133d4:	lsrhi	r5, r4, #3
   133d8:	andhi	r5, r5, #7
   133dc:	addhi	r5, r5, #48	; 0x30
   133e0:	strbhi	r5, [r0, r8]
   133e4:	add	fp, fp, #3
   133e8:	and	r4, r4, #7
   133ec:	add	r4, r4, #48	; 0x30
   133f0:	add	r5, r6, #1
   133f4:	cmp	r1, r5
   133f8:	bls	13414 <__snprintf_chk@plt+0x25f4>
   133fc:	mov	r6, r5
   13400:	mov	r5, r3
   13404:	b	13340 <__snprintf_chk@plt+0x2520>
   13408:	str	lr, [sp, #44]	; 0x2c
   1340c:	ldr	r8, [sp, #56]	; 0x38
   13410:	b	12ce4 <__snprintf_chk@plt+0x1ec4>
   13414:	str	lr, [sp, #44]	; 0x2c
   13418:	ldr	r8, [sp, #56]	; 0x38
   1341c:	mov	r5, r3
   13420:	b	12ce4 <__snprintf_chk@plt+0x1ec4>
   13424:	mov	r6, r8
   13428:	b	13340 <__snprintf_chk@plt+0x2520>
   1342c:	mov	r5, #0
   13430:	b	12e00 <__snprintf_chk@plt+0x1fe0>
   13434:	mov	r8, r5
   13438:	ldr	r5, [sp, #48]	; 0x30
   1343c:	mov	r4, #48	; 0x30
   13440:	b	12e00 <__snprintf_chk@plt+0x1fe0>
   13444:	ldr	r8, [sp, #32]
   13448:	mov	r4, #48	; 0x30
   1344c:	b	12e00 <__snprintf_chk@plt+0x1fe0>
   13450:	ldr	r8, [sp, #32]
   13454:	mov	r4, #48	; 0x30
   13458:	b	12e00 <__snprintf_chk@plt+0x1fe0>
   1345c:	mov	r8, #0
   13460:	mov	r5, r8
   13464:	b	12e00 <__snprintf_chk@plt+0x1fe0>
   13468:	mov	r8, #0
   1346c:	mov	r5, r8
   13470:	b	12e00 <__snprintf_chk@plt+0x1fe0>
   13474:	mov	r8, #0
   13478:	mov	r5, r8
   1347c:	b	12e00 <__snprintf_chk@plt+0x1fe0>
   13480:	mov	r8, #0
   13484:	mov	r5, r8
   13488:	b	12e00 <__snprintf_chk@plt+0x1fe0>
   1348c:	ldr	r3, [sp, #52]	; 0x34
   13490:	ldrb	r8, [r3, r6]
   13494:	adds	r8, r8, #0
   13498:	movne	r8, #1
   1349c:	b	12f10 <__snprintf_chk@plt+0x20f0>
   134a0:	cmp	sl, #2
   134a4:	movne	r3, #0
   134a8:	moveq	r3, #1
   134ac:	ldr	r1, [sp, #32]
   134b0:	mov	r2, r1
   134b4:	and	r2, r2, r3
   134b8:	cmp	fp, #0
   134bc:	movne	r2, #0
   134c0:	andeq	r2, r2, #1
   134c4:	cmp	r2, #0
   134c8:	bne	13678 <__snprintf_chk@plt+0x2858>
   134cc:	eor	r2, r1, #1
   134d0:	and	r3, r3, r2
   134d4:	ldr	r1, [sp, #80]	; 0x50
   134d8:	tst	r1, r3
   134dc:	beq	13554 <__snprintf_chk@plt+0x2734>
   134e0:	ldr	r3, [sp, #40]	; 0x28
   134e4:	cmp	r3, #0
   134e8:	bne	13510 <__snprintf_chk@plt+0x26f0>
   134ec:	ldr	r1, [sp, #76]	; 0x4c
   134f0:	clz	r3, r7
   134f4:	lsr	r3, r3, #5
   134f8:	cmp	r1, #0
   134fc:	moveq	r3, #0
   13500:	cmp	r3, #0
   13504:	beq	13554 <__snprintf_chk@plt+0x2734>
   13508:	ldr	r7, [sp, #76]	; 0x4c
   1350c:	b	125a4 <__snprintf_chk@plt+0x1784>
   13510:	ldr	r3, [sp, #168]	; 0xa8
   13514:	str	r3, [sp, #16]
   13518:	ldr	r3, [sp, #164]	; 0xa4
   1351c:	str	r3, [sp, #12]
   13520:	ldr	r3, [sp, #160]	; 0xa0
   13524:	str	r3, [sp, #8]
   13528:	ldr	r3, [sp, #156]	; 0x9c
   1352c:	str	r3, [sp, #4]
   13530:	mov	r3, #5
   13534:	str	r3, [sp]
   13538:	ldr	r3, [sp, #28]
   1353c:	ldr	r2, [sp, #52]	; 0x34
   13540:	ldr	r1, [sp, #76]	; 0x4c
   13544:	ldr	r0, [sp, #36]	; 0x24
   13548:	bl	12544 <__snprintf_chk@plt+0x1724>
   1354c:	mov	fp, r0
   13550:	b	13654 <__snprintf_chk@plt+0x2834>
   13554:	mov	sl, r7
   13558:	ldr	r3, [sp, #72]	; 0x48
   1355c:	cmp	r3, #0
   13560:	moveq	r2, #0
   13564:	andne	r2, r2, #1
   13568:	cmp	r2, #0
   1356c:	beq	1359c <__snprintf_chk@plt+0x277c>
   13570:	mov	r2, r3
   13574:	ldrb	r3, [r3]
   13578:	cmp	r3, #0
   1357c:	beq	1359c <__snprintf_chk@plt+0x277c>
   13580:	ldr	r1, [sp, #36]	; 0x24
   13584:	cmp	sl, fp
   13588:	strbhi	r3, [r1, fp]
   1358c:	add	fp, fp, #1
   13590:	ldrb	r3, [r2, #1]!
   13594:	cmp	r3, #0
   13598:	bne	13584 <__snprintf_chk@plt+0x2764>
   1359c:	cmp	sl, fp
   135a0:	movhi	r3, #0
   135a4:	ldrhi	r2, [sp, #36]	; 0x24
   135a8:	strbhi	r3, [r2, fp]
   135ac:	b	13654 <__snprintf_chk@plt+0x2834>
   135b0:	mov	r8, sl
   135b4:	mov	sl, r7
   135b8:	ldr	r3, [sp, #32]
   135bc:	str	r3, [sp, #48]	; 0x30
   135c0:	b	135fc <__snprintf_chk@plt+0x27dc>
   135c4:	mov	r8, sl
   135c8:	mov	sl, r7
   135cc:	b	135fc <__snprintf_chk@plt+0x27dc>
   135d0:	mov	r8, sl
   135d4:	mov	sl, r7
   135d8:	b	135fc <__snprintf_chk@plt+0x27dc>
   135dc:	andeq	r5, r1, r0, ror #22
   135e0:	andeq	r5, r1, r0, ror fp
   135e4:	andeq	r5, r1, r4, ror #22
   135e8:	mov	r8, sl
   135ec:	mov	sl, r7
   135f0:	b	135fc <__snprintf_chk@plt+0x27dc>
   135f4:	mov	r8, sl
   135f8:	mov	sl, r7
   135fc:	ldr	r3, [sp, #48]	; 0x30
   13600:	cmp	r8, #2
   13604:	movne	r3, #0
   13608:	andeq	r3, r3, #1
   1360c:	cmp	r3, #0
   13610:	movne	r8, #4
   13614:	ldr	r3, [sp, #168]	; 0xa8
   13618:	str	r3, [sp, #16]
   1361c:	ldr	r3, [sp, #164]	; 0xa4
   13620:	str	r3, [sp, #12]
   13624:	mov	r3, #0
   13628:	str	r3, [sp, #8]
   1362c:	ldr	r3, [sp, #156]	; 0x9c
   13630:	bic	r3, r3, #2
   13634:	str	r3, [sp, #4]
   13638:	str	r8, [sp]
   1363c:	ldr	r3, [sp, #28]
   13640:	ldr	r2, [sp, #52]	; 0x34
   13644:	mov	r1, sl
   13648:	ldr	r0, [sp, #36]	; 0x24
   1364c:	bl	12544 <__snprintf_chk@plt+0x1724>
   13650:	mov	fp, r0
   13654:	mov	r0, fp
   13658:	add	sp, sp, #116	; 0x74
   1365c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13660:	mov	r8, sl
   13664:	mov	sl, r7
   13668:	b	135fc <__snprintf_chk@plt+0x27dc>
   1366c:	mov	r8, sl
   13670:	mov	sl, r7
   13674:	b	135fc <__snprintf_chk@plt+0x27dc>
   13678:	mov	r8, sl
   1367c:	mov	sl, r7
   13680:	b	135fc <__snprintf_chk@plt+0x27dc>
   13684:	mov	r8, sl
   13688:	mov	sl, r7
   1368c:	b	13614 <__snprintf_chk@plt+0x27f4>
   13690:	mov	r3, #1
   13694:	str	r3, [sp, #32]
   13698:	str	r3, [sp, #48]	; 0x30
   1369c:	str	r3, [sp, #60]	; 0x3c
   136a0:	ldr	r3, [pc, #-196]	; 135e4 <__snprintf_chk@plt+0x27c4>
   136a4:	str	r3, [sp, #72]	; 0x48
   136a8:	mov	fp, #0
   136ac:	mov	sl, #5
   136b0:	b	12600 <__snprintf_chk@plt+0x17e0>
   136b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   136b8:	sub	sp, sp, #52	; 0x34
   136bc:	mov	r5, r0
   136c0:	str	r1, [sp, #24]
   136c4:	str	r2, [sp, #28]
   136c8:	mov	r4, r3
   136cc:	bl	10d60 <__errno_location@plt>
   136d0:	str	r0, [sp, #32]
   136d4:	ldr	r3, [r0]
   136d8:	str	r3, [sp, #36]	; 0x24
   136dc:	ldr	r3, [pc, #396]	; 13870 <__snprintf_chk@plt+0x2a50>
   136e0:	ldr	r6, [r3]
   136e4:	cmn	r5, #-2147483647	; 0x80000001
   136e8:	movne	r3, #0
   136ec:	moveq	r3, #1
   136f0:	orrs	r3, r3, r5, lsr #31
   136f4:	bne	13834 <__snprintf_chk@plt+0x2a14>
   136f8:	ldr	r3, [pc, #368]	; 13870 <__snprintf_chk@plt+0x2a50>
   136fc:	ldr	r2, [r3, #4]
   13700:	cmp	r5, r2
   13704:	blt	1376c <__snprintf_chk@plt+0x294c>
   13708:	str	r2, [sp, #44]	; 0x2c
   1370c:	add	r3, r3, #8
   13710:	cmp	r6, r3
   13714:	beq	13838 <__snprintf_chk@plt+0x2a18>
   13718:	sub	r2, r5, r2
   1371c:	mov	r3, #8
   13720:	str	r3, [sp]
   13724:	mvn	r3, #-2147483648	; 0x80000000
   13728:	add	r2, r2, #1
   1372c:	add	r1, sp, #44	; 0x2c
   13730:	mov	r0, r6
   13734:	bl	145b8 <__snprintf_chk@plt+0x3798>
   13738:	mov	r6, r0
   1373c:	ldr	r3, [pc, #300]	; 13870 <__snprintf_chk@plt+0x2a50>
   13740:	str	r0, [r3]
   13744:	ldr	r7, [pc, #292]	; 13870 <__snprintf_chk@plt+0x2a50>
   13748:	ldr	r0, [r7, #4]
   1374c:	ldr	r2, [sp, #44]	; 0x2c
   13750:	sub	r2, r2, r0
   13754:	lsl	r2, r2, #3
   13758:	mov	r1, #0
   1375c:	add	r0, r6, r0, lsl #3
   13760:	bl	10d84 <memset@plt>
   13764:	ldr	r3, [sp, #44]	; 0x2c
   13768:	str	r3, [r7, #4]
   1376c:	add	fp, r6, r5, lsl #3
   13770:	ldr	r8, [r6, r5, lsl #3]
   13774:	ldr	r7, [fp, #4]
   13778:	ldr	r9, [r4, #4]
   1377c:	orr	r9, r9, #1
   13780:	add	sl, r4, #8
   13784:	ldr	r3, [r4, #44]	; 0x2c
   13788:	str	r3, [sp, #16]
   1378c:	ldr	r3, [r4, #40]	; 0x28
   13790:	str	r3, [sp, #12]
   13794:	str	sl, [sp, #8]
   13798:	str	r9, [sp, #4]
   1379c:	ldr	r3, [r4]
   137a0:	str	r3, [sp]
   137a4:	ldr	r3, [sp, #28]
   137a8:	ldr	r2, [sp, #24]
   137ac:	mov	r1, r8
   137b0:	mov	r0, r7
   137b4:	bl	12544 <__snprintf_chk@plt+0x1724>
   137b8:	cmp	r8, r0
   137bc:	bhi	1381c <__snprintf_chk@plt+0x29fc>
   137c0:	add	r8, r0, #1
   137c4:	str	r8, [r6, r5, lsl #3]
   137c8:	ldr	r3, [pc, #164]	; 13874 <__snprintf_chk@plt+0x2a54>
   137cc:	cmp	r7, r3
   137d0:	beq	137dc <__snprintf_chk@plt+0x29bc>
   137d4:	mov	r0, r7
   137d8:	bl	14c44 <__snprintf_chk@plt+0x3e24>
   137dc:	mov	r0, r8
   137e0:	bl	14434 <__snprintf_chk@plt+0x3614>
   137e4:	mov	r7, r0
   137e8:	str	r0, [fp, #4]
   137ec:	ldr	r3, [r4, #44]	; 0x2c
   137f0:	str	r3, [sp, #16]
   137f4:	ldr	r3, [r4, #40]	; 0x28
   137f8:	str	r3, [sp, #12]
   137fc:	str	sl, [sp, #8]
   13800:	str	r9, [sp, #4]
   13804:	ldr	r3, [r4]
   13808:	str	r3, [sp]
   1380c:	ldr	r3, [sp, #28]
   13810:	ldr	r2, [sp, #24]
   13814:	mov	r1, r8
   13818:	bl	12544 <__snprintf_chk@plt+0x1724>
   1381c:	ldr	r3, [sp, #32]
   13820:	ldr	r2, [sp, #36]	; 0x24
   13824:	str	r2, [r3]
   13828:	mov	r0, r7
   1382c:	add	sp, sp, #52	; 0x34
   13830:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13834:	bl	10e14 <abort@plt>
   13838:	sub	r2, r5, r2
   1383c:	mov	r3, #8
   13840:	str	r3, [sp]
   13844:	mvn	r3, #-2147483648	; 0x80000000
   13848:	add	r2, r2, #1
   1384c:	add	r1, sp, #44	; 0x2c
   13850:	mov	r0, #0
   13854:	bl	145b8 <__snprintf_chk@plt+0x3798>
   13858:	mov	r6, r0
   1385c:	ldr	r3, [pc, #12]	; 13870 <__snprintf_chk@plt+0x2a50>
   13860:	str	r0, [r3], #8
   13864:	ldm	r3, {r0, r1}
   13868:	stm	r6, {r0, r1}
   1386c:	b	13744 <__snprintf_chk@plt+0x2924>
   13870:	andeq	r7, r2, r0, ror #1
   13874:	andeq	r7, r2, ip, asr #2
   13878:	push	{r4, r5, r6, lr}
   1387c:	mov	r4, r0
   13880:	bl	10d60 <__errno_location@plt>
   13884:	mov	r5, r0
   13888:	ldr	r6, [r0]
   1388c:	cmp	r4, #0
   13890:	ldr	r3, [pc, #20]	; 138ac <__snprintf_chk@plt+0x2a8c>
   13894:	moveq	r4, r3
   13898:	mov	r1, #48	; 0x30
   1389c:	mov	r0, r4
   138a0:	bl	14920 <__snprintf_chk@plt+0x3b00>
   138a4:	str	r6, [r5]
   138a8:	pop	{r4, r5, r6, pc}
   138ac:	andeq	r7, r2, ip, asr #4
   138b0:	subs	r3, r0, #0
   138b4:	ldr	r2, [pc, #8]	; 138c4 <__snprintf_chk@plt+0x2aa4>
   138b8:	moveq	r3, r2
   138bc:	ldr	r0, [r3]
   138c0:	bx	lr
   138c4:	andeq	r7, r2, ip, asr #4
   138c8:	subs	r3, r0, #0
   138cc:	ldr	r2, [pc, #8]	; 138dc <__snprintf_chk@plt+0x2abc>
   138d0:	moveq	r3, r2
   138d4:	str	r1, [r3]
   138d8:	bx	lr
   138dc:	andeq	r7, r2, ip, asr #4
   138e0:	push	{lr}		; (str lr, [sp, #-4]!)
   138e4:	subs	r3, r0, #0
   138e8:	ldr	r0, [pc, #44]	; 1391c <__snprintf_chk@plt+0x2afc>
   138ec:	moveq	r3, r0
   138f0:	add	r3, r3, #8
   138f4:	lsr	lr, r1, #5
   138f8:	and	r1, r1, #31
   138fc:	ldr	ip, [r3, lr, lsl #2]
   13900:	lsr	r0, ip, r1
   13904:	eor	r2, r2, r0
   13908:	and	r2, r2, #1
   1390c:	eor	r1, ip, r2, lsl r1
   13910:	str	r1, [r3, lr, lsl #2]
   13914:	and	r0, r0, #1
   13918:	pop	{pc}		; (ldr pc, [sp], #4)
   1391c:	andeq	r7, r2, ip, asr #4
   13920:	subs	r3, r0, #0
   13924:	ldr	r2, [pc, #12]	; 13938 <__snprintf_chk@plt+0x2b18>
   13928:	moveq	r3, r2
   1392c:	ldr	r0, [r3, #4]
   13930:	str	r1, [r3, #4]
   13934:	bx	lr
   13938:	andeq	r7, r2, ip, asr #4
   1393c:	subs	r3, r0, #0
   13940:	ldr	r0, [pc, #40]	; 13970 <__snprintf_chk@plt+0x2b50>
   13944:	moveq	r3, r0
   13948:	mov	r0, #10
   1394c:	str	r0, [r3]
   13950:	cmp	r2, #0
   13954:	cmpne	r1, #0
   13958:	beq	13968 <__snprintf_chk@plt+0x2b48>
   1395c:	str	r1, [r3, #40]	; 0x28
   13960:	str	r2, [r3, #44]	; 0x2c
   13964:	bx	lr
   13968:	push	{r4, lr}
   1396c:	bl	10e14 <abort@plt>
   13970:	andeq	r7, r2, ip, asr #4
   13974:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13978:	sub	sp, sp, #24
   1397c:	mov	r7, r0
   13980:	mov	r8, r1
   13984:	mov	r9, r2
   13988:	mov	sl, r3
   1398c:	ldr	r4, [sp, #56]	; 0x38
   13990:	cmp	r4, #0
   13994:	ldr	r3, [pc, #84]	; 139f0 <__snprintf_chk@plt+0x2bd0>
   13998:	moveq	r4, r3
   1399c:	bl	10d60 <__errno_location@plt>
   139a0:	mov	r5, r0
   139a4:	ldr	r6, [r0]
   139a8:	ldr	r3, [r4, #44]	; 0x2c
   139ac:	str	r3, [sp, #16]
   139b0:	ldr	r3, [r4, #40]	; 0x28
   139b4:	str	r3, [sp, #12]
   139b8:	add	r3, r4, #8
   139bc:	str	r3, [sp, #8]
   139c0:	ldr	r3, [r4, #4]
   139c4:	str	r3, [sp, #4]
   139c8:	ldr	r3, [r4]
   139cc:	str	r3, [sp]
   139d0:	mov	r3, sl
   139d4:	mov	r2, r9
   139d8:	mov	r1, r8
   139dc:	mov	r0, r7
   139e0:	bl	12544 <__snprintf_chk@plt+0x1724>
   139e4:	str	r6, [r5]
   139e8:	add	sp, sp, #24
   139ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   139f0:	andeq	r7, r2, ip, asr #4
   139f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   139f8:	sub	sp, sp, #44	; 0x2c
   139fc:	str	r0, [sp, #28]
   13a00:	str	r1, [sp, #32]
   13a04:	mov	r6, r2
   13a08:	subs	r4, r3, #0
   13a0c:	ldr	r3, [pc, #172]	; 13ac0 <__snprintf_chk@plt+0x2ca0>
   13a10:	moveq	r4, r3
   13a14:	bl	10d60 <__errno_location@plt>
   13a18:	mov	r7, r0
   13a1c:	ldr	fp, [r0]
   13a20:	ldr	r5, [r4, #4]
   13a24:	cmp	r6, #0
   13a28:	orreq	r5, r5, #1
   13a2c:	add	r9, r4, #8
   13a30:	ldr	r3, [r4, #44]	; 0x2c
   13a34:	str	r3, [sp, #16]
   13a38:	ldr	r3, [r4, #40]	; 0x28
   13a3c:	str	r3, [sp, #12]
   13a40:	str	r9, [sp, #8]
   13a44:	str	r5, [sp, #4]
   13a48:	ldr	r3, [r4]
   13a4c:	str	r3, [sp]
   13a50:	ldr	r3, [sp, #32]
   13a54:	ldr	r2, [sp, #28]
   13a58:	mov	r1, #0
   13a5c:	mov	r0, r1
   13a60:	bl	12544 <__snprintf_chk@plt+0x1724>
   13a64:	mov	sl, r0
   13a68:	add	r8, r0, #1
   13a6c:	mov	r0, r8
   13a70:	bl	14434 <__snprintf_chk@plt+0x3614>
   13a74:	str	r0, [sp, #36]	; 0x24
   13a78:	ldr	r3, [r4, #44]	; 0x2c
   13a7c:	str	r3, [sp, #16]
   13a80:	ldr	r3, [r4, #40]	; 0x28
   13a84:	str	r3, [sp, #12]
   13a88:	str	r9, [sp, #8]
   13a8c:	str	r5, [sp, #4]
   13a90:	ldr	r3, [r4]
   13a94:	str	r3, [sp]
   13a98:	ldr	r3, [sp, #32]
   13a9c:	ldr	r2, [sp, #28]
   13aa0:	mov	r1, r8
   13aa4:	bl	12544 <__snprintf_chk@plt+0x1724>
   13aa8:	str	fp, [r7]
   13aac:	cmp	r6, #0
   13ab0:	strne	sl, [r6]
   13ab4:	ldr	r0, [sp, #36]	; 0x24
   13ab8:	add	sp, sp, #44	; 0x2c
   13abc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ac0:	andeq	r7, r2, ip, asr #4
   13ac4:	push	{r4, lr}
   13ac8:	mov	r3, r2
   13acc:	mov	r2, #0
   13ad0:	bl	139f4 <__snprintf_chk@plt+0x2bd4>
   13ad4:	pop	{r4, pc}
   13ad8:	push	{r4, r5, r6, r7, r8, lr}
   13adc:	ldr	r3, [pc, #140]	; 13b70 <__snprintf_chk@plt+0x2d50>
   13ae0:	ldr	r7, [r3]
   13ae4:	ldr	r3, [r3, #4]
   13ae8:	cmp	r3, #1
   13aec:	ble	13b18 <__snprintf_chk@plt+0x2cf8>
   13af0:	mov	r5, r7
   13af4:	mov	r4, #1
   13af8:	ldr	r6, [pc, #112]	; 13b70 <__snprintf_chk@plt+0x2d50>
   13afc:	ldr	r0, [r5, #12]
   13b00:	bl	14c44 <__snprintf_chk@plt+0x3e24>
   13b04:	add	r4, r4, #1
   13b08:	add	r5, r5, #8
   13b0c:	ldr	r3, [r6, #4]
   13b10:	cmp	r3, r4
   13b14:	bgt	13afc <__snprintf_chk@plt+0x2cdc>
   13b18:	ldr	r0, [r7, #4]
   13b1c:	ldr	r3, [pc, #80]	; 13b74 <__snprintf_chk@plt+0x2d54>
   13b20:	cmp	r0, r3
   13b24:	beq	13b40 <__snprintf_chk@plt+0x2d20>
   13b28:	bl	14c44 <__snprintf_chk@plt+0x3e24>
   13b2c:	ldr	r3, [pc, #60]	; 13b70 <__snprintf_chk@plt+0x2d50>
   13b30:	mov	r2, #256	; 0x100
   13b34:	str	r2, [r3, #8]
   13b38:	ldr	r2, [pc, #52]	; 13b74 <__snprintf_chk@plt+0x2d54>
   13b3c:	str	r2, [r3, #12]
   13b40:	ldr	r3, [pc, #48]	; 13b78 <__snprintf_chk@plt+0x2d58>
   13b44:	cmp	r7, r3
   13b48:	beq	13b60 <__snprintf_chk@plt+0x2d40>
   13b4c:	mov	r0, r7
   13b50:	bl	14c44 <__snprintf_chk@plt+0x3e24>
   13b54:	ldr	r3, [pc, #20]	; 13b70 <__snprintf_chk@plt+0x2d50>
   13b58:	add	r2, r3, #8
   13b5c:	str	r2, [r3]
   13b60:	mov	r2, #1
   13b64:	ldr	r3, [pc, #4]	; 13b70 <__snprintf_chk@plt+0x2d50>
   13b68:	str	r2, [r3, #4]
   13b6c:	pop	{r4, r5, r6, r7, r8, pc}
   13b70:	andeq	r7, r2, r0, ror #1
   13b74:	andeq	r7, r2, ip, asr #2
   13b78:	andeq	r7, r2, r8, ror #1
   13b7c:	push	{r4, lr}
   13b80:	ldr	r3, [pc, #8]	; 13b90 <__snprintf_chk@plt+0x2d70>
   13b84:	mvn	r2, #0
   13b88:	bl	136b4 <__snprintf_chk@plt+0x2894>
   13b8c:	pop	{r4, pc}
   13b90:	andeq	r7, r2, ip, asr #4
   13b94:	push	{r4, lr}
   13b98:	ldr	r3, [pc, #4]	; 13ba4 <__snprintf_chk@plt+0x2d84>
   13b9c:	bl	136b4 <__snprintf_chk@plt+0x2894>
   13ba0:	pop	{r4, pc}
   13ba4:	andeq	r7, r2, ip, asr #4
   13ba8:	push	{r4, lr}
   13bac:	mov	r1, r0
   13bb0:	mov	r0, #0
   13bb4:	bl	13b7c <__snprintf_chk@plt+0x2d5c>
   13bb8:	pop	{r4, pc}
   13bbc:	push	{r4, lr}
   13bc0:	mov	r2, r1
   13bc4:	mov	r1, r0
   13bc8:	mov	r0, #0
   13bcc:	bl	13b94 <__snprintf_chk@plt+0x2d74>
   13bd0:	pop	{r4, pc}
   13bd4:	push	{r4, r5, lr}
   13bd8:	sub	sp, sp, #52	; 0x34
   13bdc:	mov	r4, r0
   13be0:	mov	r5, r2
   13be4:	mov	r0, sp
   13be8:	bl	123dc <__snprintf_chk@plt+0x15bc>
   13bec:	mov	r3, sp
   13bf0:	mvn	r2, #0
   13bf4:	mov	r1, r5
   13bf8:	mov	r0, r4
   13bfc:	bl	136b4 <__snprintf_chk@plt+0x2894>
   13c00:	add	sp, sp, #52	; 0x34
   13c04:	pop	{r4, r5, pc}
   13c08:	push	{r4, r5, r6, lr}
   13c0c:	sub	sp, sp, #48	; 0x30
   13c10:	mov	r4, r0
   13c14:	mov	r5, r2
   13c18:	mov	r6, r3
   13c1c:	mov	r0, sp
   13c20:	bl	123dc <__snprintf_chk@plt+0x15bc>
   13c24:	mov	r3, sp
   13c28:	mov	r2, r6
   13c2c:	mov	r1, r5
   13c30:	mov	r0, r4
   13c34:	bl	136b4 <__snprintf_chk@plt+0x2894>
   13c38:	add	sp, sp, #48	; 0x30
   13c3c:	pop	{r4, r5, r6, pc}
   13c40:	push	{r4, lr}
   13c44:	mov	r2, r1
   13c48:	mov	r1, r0
   13c4c:	mov	r0, #0
   13c50:	bl	13bd4 <__snprintf_chk@plt+0x2db4>
   13c54:	pop	{r4, pc}
   13c58:	push	{r4, lr}
   13c5c:	mov	r3, r2
   13c60:	mov	r2, r1
   13c64:	mov	r1, r0
   13c68:	mov	r0, #0
   13c6c:	bl	13c08 <__snprintf_chk@plt+0x2de8>
   13c70:	pop	{r4, pc}
   13c74:	push	{r4, r5, r6, lr}
   13c78:	sub	sp, sp, #48	; 0x30
   13c7c:	mov	r4, r0
   13c80:	mov	r5, r1
   13c84:	mov	r6, r2
   13c88:	mov	ip, sp
   13c8c:	ldr	lr, [pc, #64]	; 13cd4 <__snprintf_chk@plt+0x2eb4>
   13c90:	ldm	lr!, {r0, r1, r2, r3}
   13c94:	stmia	ip!, {r0, r1, r2, r3}
   13c98:	ldm	lr!, {r0, r1, r2, r3}
   13c9c:	stmia	ip!, {r0, r1, r2, r3}
   13ca0:	ldm	lr, {r0, r1, r2, r3}
   13ca4:	stm	ip, {r0, r1, r2, r3}
   13ca8:	mov	r2, #1
   13cac:	mov	r1, r6
   13cb0:	mov	r0, sp
   13cb4:	bl	138e0 <__snprintf_chk@plt+0x2ac0>
   13cb8:	mov	r3, sp
   13cbc:	mov	r2, r5
   13cc0:	mov	r1, r4
   13cc4:	mov	r0, #0
   13cc8:	bl	136b4 <__snprintf_chk@plt+0x2894>
   13ccc:	add	sp, sp, #48	; 0x30
   13cd0:	pop	{r4, r5, r6, pc}
   13cd4:	andeq	r7, r2, ip, asr #4
   13cd8:	push	{r4, lr}
   13cdc:	mov	r2, r1
   13ce0:	mvn	r1, #0
   13ce4:	bl	13c74 <__snprintf_chk@plt+0x2e54>
   13ce8:	pop	{r4, pc}
   13cec:	push	{r4, lr}
   13cf0:	mov	r1, #58	; 0x3a
   13cf4:	bl	13cd8 <__snprintf_chk@plt+0x2eb8>
   13cf8:	pop	{r4, pc}
   13cfc:	push	{r4, lr}
   13d00:	mov	r2, #58	; 0x3a
   13d04:	bl	13c74 <__snprintf_chk@plt+0x2e54>
   13d08:	pop	{r4, pc}
   13d0c:	push	{r4, r5, lr}
   13d10:	sub	sp, sp, #100	; 0x64
   13d14:	mov	r4, r0
   13d18:	mov	r5, r2
   13d1c:	mov	r0, sp
   13d20:	bl	123dc <__snprintf_chk@plt+0x15bc>
   13d24:	add	lr, sp, #48	; 0x30
   13d28:	mov	ip, sp
   13d2c:	ldm	ip!, {r0, r1, r2, r3}
   13d30:	stmia	lr!, {r0, r1, r2, r3}
   13d34:	ldm	ip!, {r0, r1, r2, r3}
   13d38:	stmia	lr!, {r0, r1, r2, r3}
   13d3c:	ldm	ip, {r0, r1, r2, r3}
   13d40:	stm	lr, {r0, r1, r2, r3}
   13d44:	mov	r2, #1
   13d48:	mov	r1, #58	; 0x3a
   13d4c:	add	r0, sp, #48	; 0x30
   13d50:	bl	138e0 <__snprintf_chk@plt+0x2ac0>
   13d54:	add	r3, sp, #48	; 0x30
   13d58:	mvn	r2, #0
   13d5c:	mov	r1, r5
   13d60:	mov	r0, r4
   13d64:	bl	136b4 <__snprintf_chk@plt+0x2894>
   13d68:	add	sp, sp, #100	; 0x64
   13d6c:	pop	{r4, r5, pc}
   13d70:	push	{r4, r5, r6, r7, lr}
   13d74:	sub	sp, sp, #52	; 0x34
   13d78:	mov	r4, r0
   13d7c:	mov	r6, r1
   13d80:	mov	r7, r2
   13d84:	mov	r5, r3
   13d88:	mov	ip, sp
   13d8c:	ldr	lr, [pc, #64]	; 13dd4 <__snprintf_chk@plt+0x2fb4>
   13d90:	ldm	lr!, {r0, r1, r2, r3}
   13d94:	stmia	ip!, {r0, r1, r2, r3}
   13d98:	ldm	lr!, {r0, r1, r2, r3}
   13d9c:	stmia	ip!, {r0, r1, r2, r3}
   13da0:	ldm	lr, {r0, r1, r2, r3}
   13da4:	stm	ip, {r0, r1, r2, r3}
   13da8:	mov	r2, r7
   13dac:	mov	r1, r6
   13db0:	mov	r0, sp
   13db4:	bl	1393c <__snprintf_chk@plt+0x2b1c>
   13db8:	mov	r3, sp
   13dbc:	ldr	r2, [sp, #72]	; 0x48
   13dc0:	mov	r1, r5
   13dc4:	mov	r0, r4
   13dc8:	bl	136b4 <__snprintf_chk@plt+0x2894>
   13dcc:	add	sp, sp, #52	; 0x34
   13dd0:	pop	{r4, r5, r6, r7, pc}
   13dd4:	andeq	r7, r2, ip, asr #4
   13dd8:	push	{lr}		; (str lr, [sp, #-4]!)
   13ddc:	sub	sp, sp, #12
   13de0:	mvn	ip, #0
   13de4:	str	ip, [sp]
   13de8:	bl	13d70 <__snprintf_chk@plt+0x2f50>
   13dec:	add	sp, sp, #12
   13df0:	pop	{pc}		; (ldr pc, [sp], #4)
   13df4:	push	{r4, lr}
   13df8:	mov	r3, r2
   13dfc:	mov	r2, r1
   13e00:	mov	r1, r0
   13e04:	mov	r0, #0
   13e08:	bl	13dd8 <__snprintf_chk@plt+0x2fb8>
   13e0c:	pop	{r4, pc}
   13e10:	push	{lr}		; (str lr, [sp, #-4]!)
   13e14:	sub	sp, sp, #12
   13e18:	str	r3, [sp]
   13e1c:	mov	r3, r2
   13e20:	mov	r2, r1
   13e24:	mov	r1, r0
   13e28:	mov	r0, #0
   13e2c:	bl	13d70 <__snprintf_chk@plt+0x2f50>
   13e30:	add	sp, sp, #12
   13e34:	pop	{pc}		; (ldr pc, [sp], #4)
   13e38:	push	{r4, lr}
   13e3c:	ldr	r3, [pc, #4]	; 13e48 <__snprintf_chk@plt+0x3028>
   13e40:	bl	136b4 <__snprintf_chk@plt+0x2894>
   13e44:	pop	{r4, pc}
   13e48:	strdeq	r7, [r2], -r0
   13e4c:	push	{r4, lr}
   13e50:	mov	r2, r1
   13e54:	mov	r1, r0
   13e58:	mov	r0, #0
   13e5c:	bl	13e38 <__snprintf_chk@plt+0x3018>
   13e60:	pop	{r4, pc}
   13e64:	push	{r4, lr}
   13e68:	mvn	r2, #0
   13e6c:	bl	13e38 <__snprintf_chk@plt+0x3018>
   13e70:	pop	{r4, pc}
   13e74:	push	{r4, lr}
   13e78:	mov	r1, r0
   13e7c:	mov	r0, #0
   13e80:	bl	13e64 <__snprintf_chk@plt+0x3044>
   13e84:	pop	{r4, pc}
   13e88:	push	{r4, r5, r6, lr}
   13e8c:	sub	sp, sp, #32
   13e90:	mov	r4, r0
   13e94:	ldr	r5, [sp, #48]	; 0x30
   13e98:	ldr	r6, [sp, #52]	; 0x34
   13e9c:	cmp	r1, #0
   13ea0:	beq	13f58 <__snprintf_chk@plt+0x3138>
   13ea4:	str	r3, [sp, #4]
   13ea8:	str	r2, [sp]
   13eac:	mov	r3, r1
   13eb0:	ldr	r2, [pc, #940]	; 14264 <__snprintf_chk@plt+0x3444>
   13eb4:	mov	r1, #1
   13eb8:	bl	10db4 <__fprintf_chk@plt>
   13ebc:	mov	r2, #5
   13ec0:	ldr	r1, [pc, #928]	; 14268 <__snprintf_chk@plt+0x3448>
   13ec4:	mov	r0, #0
   13ec8:	bl	10c70 <dcgettext@plt>
   13ecc:	ldr	r3, [pc, #920]	; 1426c <__snprintf_chk@plt+0x344c>
   13ed0:	str	r3, [sp]
   13ed4:	mov	r3, r0
   13ed8:	ldr	r2, [pc, #912]	; 14270 <__snprintf_chk@plt+0x3450>
   13edc:	mov	r1, #1
   13ee0:	mov	r0, r4
   13ee4:	bl	10db4 <__fprintf_chk@plt>
   13ee8:	mov	r1, r4
   13eec:	mov	r0, #10
   13ef0:	bl	10c64 <fputc_unlocked@plt>
   13ef4:	mov	r2, #5
   13ef8:	ldr	r1, [pc, #884]	; 14274 <__snprintf_chk@plt+0x3454>
   13efc:	mov	r0, #0
   13f00:	bl	10c70 <dcgettext@plt>
   13f04:	ldr	r3, [pc, #876]	; 14278 <__snprintf_chk@plt+0x3458>
   13f08:	mov	r2, r0
   13f0c:	mov	r1, #1
   13f10:	mov	r0, r4
   13f14:	bl	10db4 <__fprintf_chk@plt>
   13f18:	mov	r1, r4
   13f1c:	mov	r0, #10
   13f20:	bl	10c64 <fputc_unlocked@plt>
   13f24:	cmp	r6, #9
   13f28:	ldrls	pc, [pc, r6, lsl #2]
   13f2c:	b	141fc <__snprintf_chk@plt+0x33dc>
   13f30:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   13f34:	andeq	r3, r1, r0, ror pc
   13f38:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   13f3c:	andeq	r3, r1, ip, asr #31
   13f40:	andeq	r4, r1, r4
   13f44:	andeq	r4, r1, r4, asr #32
   13f48:	andeq	r4, r1, ip, lsl #1
   13f4c:	ldrdeq	r4, [r1], -ip
   13f50:	andeq	r4, r1, r4, lsr r1
   13f54:	muleq	r1, r4, r1
   13f58:	str	r3, [sp]
   13f5c:	mov	r3, r2
   13f60:	ldr	r2, [pc, #788]	; 1427c <__snprintf_chk@plt+0x345c>
   13f64:	mov	r1, #1
   13f68:	bl	10db4 <__fprintf_chk@plt>
   13f6c:	b	13ebc <__snprintf_chk@plt+0x309c>
   13f70:	mov	r2, #5
   13f74:	ldr	r1, [pc, #772]	; 14280 <__snprintf_chk@plt+0x3460>
   13f78:	mov	r0, #0
   13f7c:	bl	10c70 <dcgettext@plt>
   13f80:	ldr	r3, [r5]
   13f84:	mov	r2, r0
   13f88:	mov	r1, #1
   13f8c:	mov	r0, r4
   13f90:	bl	10db4 <__fprintf_chk@plt>
   13f94:	add	sp, sp, #32
   13f98:	pop	{r4, r5, r6, pc}
   13f9c:	mov	r2, #5
   13fa0:	ldr	r1, [pc, #732]	; 14284 <__snprintf_chk@plt+0x3464>
   13fa4:	mov	r0, #0
   13fa8:	bl	10c70 <dcgettext@plt>
   13fac:	ldr	r3, [r5]
   13fb0:	ldr	r2, [r5, #4]
   13fb4:	str	r2, [sp]
   13fb8:	mov	r2, r0
   13fbc:	mov	r1, #1
   13fc0:	mov	r0, r4
   13fc4:	bl	10db4 <__fprintf_chk@plt>
   13fc8:	b	13f94 <__snprintf_chk@plt+0x3174>
   13fcc:	mov	r2, #5
   13fd0:	ldr	r1, [pc, #688]	; 14288 <__snprintf_chk@plt+0x3468>
   13fd4:	mov	r0, #0
   13fd8:	bl	10c70 <dcgettext@plt>
   13fdc:	ldr	r3, [r5]
   13fe0:	ldr	r2, [r5, #8]
   13fe4:	str	r2, [sp, #4]
   13fe8:	ldr	r2, [r5, #4]
   13fec:	str	r2, [sp]
   13ff0:	mov	r2, r0
   13ff4:	mov	r1, #1
   13ff8:	mov	r0, r4
   13ffc:	bl	10db4 <__fprintf_chk@plt>
   14000:	b	13f94 <__snprintf_chk@plt+0x3174>
   14004:	mov	r2, #5
   14008:	ldr	r1, [pc, #636]	; 1428c <__snprintf_chk@plt+0x346c>
   1400c:	mov	r0, #0
   14010:	bl	10c70 <dcgettext@plt>
   14014:	ldr	r3, [r5]
   14018:	ldr	r2, [r5, #12]
   1401c:	str	r2, [sp, #8]
   14020:	ldr	r2, [r5, #8]
   14024:	str	r2, [sp, #4]
   14028:	ldr	r2, [r5, #4]
   1402c:	str	r2, [sp]
   14030:	mov	r2, r0
   14034:	mov	r1, #1
   14038:	mov	r0, r4
   1403c:	bl	10db4 <__fprintf_chk@plt>
   14040:	b	13f94 <__snprintf_chk@plt+0x3174>
   14044:	mov	r2, #5
   14048:	ldr	r1, [pc, #576]	; 14290 <__snprintf_chk@plt+0x3470>
   1404c:	mov	r0, #0
   14050:	bl	10c70 <dcgettext@plt>
   14054:	ldr	r3, [r5]
   14058:	ldr	r2, [r5, #16]
   1405c:	str	r2, [sp, #12]
   14060:	ldr	r2, [r5, #12]
   14064:	str	r2, [sp, #8]
   14068:	ldr	r2, [r5, #8]
   1406c:	str	r2, [sp, #4]
   14070:	ldr	r2, [r5, #4]
   14074:	str	r2, [sp]
   14078:	mov	r2, r0
   1407c:	mov	r1, #1
   14080:	mov	r0, r4
   14084:	bl	10db4 <__fprintf_chk@plt>
   14088:	b	13f94 <__snprintf_chk@plt+0x3174>
   1408c:	mov	r2, #5
   14090:	ldr	r1, [pc, #508]	; 14294 <__snprintf_chk@plt+0x3474>
   14094:	mov	r0, #0
   14098:	bl	10c70 <dcgettext@plt>
   1409c:	ldr	r3, [r5]
   140a0:	ldr	r2, [r5, #20]
   140a4:	str	r2, [sp, #16]
   140a8:	ldr	r2, [r5, #16]
   140ac:	str	r2, [sp, #12]
   140b0:	ldr	r2, [r5, #12]
   140b4:	str	r2, [sp, #8]
   140b8:	ldr	r2, [r5, #8]
   140bc:	str	r2, [sp, #4]
   140c0:	ldr	r2, [r5, #4]
   140c4:	str	r2, [sp]
   140c8:	mov	r2, r0
   140cc:	mov	r1, #1
   140d0:	mov	r0, r4
   140d4:	bl	10db4 <__fprintf_chk@plt>
   140d8:	b	13f94 <__snprintf_chk@plt+0x3174>
   140dc:	mov	r2, #5
   140e0:	ldr	r1, [pc, #432]	; 14298 <__snprintf_chk@plt+0x3478>
   140e4:	mov	r0, #0
   140e8:	bl	10c70 <dcgettext@plt>
   140ec:	ldr	r3, [r5]
   140f0:	ldr	r2, [r5, #24]
   140f4:	str	r2, [sp, #20]
   140f8:	ldr	r2, [r5, #20]
   140fc:	str	r2, [sp, #16]
   14100:	ldr	r2, [r5, #16]
   14104:	str	r2, [sp, #12]
   14108:	ldr	r2, [r5, #12]
   1410c:	str	r2, [sp, #8]
   14110:	ldr	r2, [r5, #8]
   14114:	str	r2, [sp, #4]
   14118:	ldr	r2, [r5, #4]
   1411c:	str	r2, [sp]
   14120:	mov	r2, r0
   14124:	mov	r1, #1
   14128:	mov	r0, r4
   1412c:	bl	10db4 <__fprintf_chk@plt>
   14130:	b	13f94 <__snprintf_chk@plt+0x3174>
   14134:	mov	r2, #5
   14138:	ldr	r1, [pc, #348]	; 1429c <__snprintf_chk@plt+0x347c>
   1413c:	mov	r0, #0
   14140:	bl	10c70 <dcgettext@plt>
   14144:	ldr	r3, [r5]
   14148:	ldr	r2, [r5, #28]
   1414c:	str	r2, [sp, #24]
   14150:	ldr	r2, [r5, #24]
   14154:	str	r2, [sp, #20]
   14158:	ldr	r2, [r5, #20]
   1415c:	str	r2, [sp, #16]
   14160:	ldr	r2, [r5, #16]
   14164:	str	r2, [sp, #12]
   14168:	ldr	r2, [r5, #12]
   1416c:	str	r2, [sp, #8]
   14170:	ldr	r2, [r5, #8]
   14174:	str	r2, [sp, #4]
   14178:	ldr	r2, [r5, #4]
   1417c:	str	r2, [sp]
   14180:	mov	r2, r0
   14184:	mov	r1, #1
   14188:	mov	r0, r4
   1418c:	bl	10db4 <__fprintf_chk@plt>
   14190:	b	13f94 <__snprintf_chk@plt+0x3174>
   14194:	mov	r2, #5
   14198:	ldr	r1, [pc, #256]	; 142a0 <__snprintf_chk@plt+0x3480>
   1419c:	mov	r0, #0
   141a0:	bl	10c70 <dcgettext@plt>
   141a4:	ldr	r3, [r5]
   141a8:	ldr	r2, [r5, #32]
   141ac:	str	r2, [sp, #28]
   141b0:	ldr	r2, [r5, #28]
   141b4:	str	r2, [sp, #24]
   141b8:	ldr	r2, [r5, #24]
   141bc:	str	r2, [sp, #20]
   141c0:	ldr	r2, [r5, #20]
   141c4:	str	r2, [sp, #16]
   141c8:	ldr	r2, [r5, #16]
   141cc:	str	r2, [sp, #12]
   141d0:	ldr	r2, [r5, #12]
   141d4:	str	r2, [sp, #8]
   141d8:	ldr	r2, [r5, #8]
   141dc:	str	r2, [sp, #4]
   141e0:	ldr	r2, [r5, #4]
   141e4:	str	r2, [sp]
   141e8:	mov	r2, r0
   141ec:	mov	r1, #1
   141f0:	mov	r0, r4
   141f4:	bl	10db4 <__fprintf_chk@plt>
   141f8:	b	13f94 <__snprintf_chk@plt+0x3174>
   141fc:	mov	r2, #5
   14200:	ldr	r1, [pc, #156]	; 142a4 <__snprintf_chk@plt+0x3484>
   14204:	mov	r0, #0
   14208:	bl	10c70 <dcgettext@plt>
   1420c:	ldr	r3, [r5]
   14210:	ldr	r2, [r5, #32]
   14214:	str	r2, [sp, #28]
   14218:	ldr	r2, [r5, #28]
   1421c:	str	r2, [sp, #24]
   14220:	ldr	r2, [r5, #24]
   14224:	str	r2, [sp, #20]
   14228:	ldr	r2, [r5, #20]
   1422c:	str	r2, [sp, #16]
   14230:	ldr	r2, [r5, #16]
   14234:	str	r2, [sp, #12]
   14238:	ldr	r2, [r5, #12]
   1423c:	str	r2, [sp, #8]
   14240:	ldr	r2, [r5, #8]
   14244:	str	r2, [sp, #4]
   14248:	ldr	r2, [r5, #4]
   1424c:	str	r2, [sp]
   14250:	mov	r2, r0
   14254:	mov	r1, #1
   14258:	mov	r0, r4
   1425c:	bl	10db4 <__fprintf_chk@plt>
   14260:	b	13f94 <__snprintf_chk@plt+0x3174>
   14264:	ldrdeq	r5, [r1], -ip
   14268:	strdeq	r5, [r1], -r0
   1426c:	andeq	r0, r0, r6, ror #15
   14270:	andeq	r5, r1, r8, asr #29
   14274:	strdeq	r5, [r1], -r4
   14278:	andeq	r5, r1, r0, lsr #25
   1427c:	andeq	r5, r1, r8, ror #23
   14280:	andeq	r5, r1, r4, asr #25
   14284:	ldrdeq	r5, [r1], -r4
   14288:	andeq	r5, r1, ip, ror #25
   1428c:	andeq	r5, r1, r8, lsl #26
   14290:	andeq	r5, r1, r8, lsr #26
   14294:	andeq	r5, r1, ip, asr #26
   14298:	andeq	r5, r1, r4, ror sp
   1429c:	andeq	r5, r1, r0, lsr #27
   142a0:	ldrdeq	r5, [r1], -r0
   142a4:	andeq	r5, r1, r4, lsl #28
   142a8:	push	{r4, r5, lr}
   142ac:	sub	sp, sp, #12
   142b0:	ldr	r5, [sp, #24]
   142b4:	ldr	ip, [r5]
   142b8:	cmp	ip, #0
   142bc:	beq	142ec <__snprintf_chk@plt+0x34cc>
   142c0:	mov	lr, r5
   142c4:	mov	ip, #0
   142c8:	add	ip, ip, #1
   142cc:	ldr	r4, [lr, #4]!
   142d0:	cmp	r4, #0
   142d4:	bne	142c8 <__snprintf_chk@plt+0x34a8>
   142d8:	str	ip, [sp, #4]
   142dc:	str	r5, [sp]
   142e0:	bl	13e88 <__snprintf_chk@plt+0x3068>
   142e4:	add	sp, sp, #12
   142e8:	pop	{r4, r5, pc}
   142ec:	mov	ip, #0
   142f0:	b	142d8 <__snprintf_chk@plt+0x34b8>
   142f4:	push	{r4, r5, lr}
   142f8:	sub	sp, sp, #52	; 0x34
   142fc:	ldr	r4, [sp, #64]	; 0x40
   14300:	sub	r4, r4, #4
   14304:	add	r5, sp, #4
   14308:	mov	ip, #0
   1430c:	ldr	lr, [r4, #4]!
   14310:	str	lr, [r5, #4]!
   14314:	cmp	lr, #0
   14318:	beq	14328 <__snprintf_chk@plt+0x3508>
   1431c:	add	ip, ip, #1
   14320:	cmp	ip, #10
   14324:	bne	1430c <__snprintf_chk@plt+0x34ec>
   14328:	str	ip, [sp, #4]
   1432c:	add	ip, sp, #8
   14330:	str	ip, [sp]
   14334:	bl	13e88 <__snprintf_chk@plt+0x3068>
   14338:	add	sp, sp, #52	; 0x34
   1433c:	pop	{r4, r5, pc}
   14340:	push	{r3}		; (str r3, [sp, #-4]!)
   14344:	push	{lr}		; (str lr, [sp, #-4]!)
   14348:	sub	sp, sp, #16
   1434c:	add	r3, sp, #24
   14350:	str	r3, [sp, #12]
   14354:	str	r3, [sp]
   14358:	ldr	r3, [sp, #20]
   1435c:	bl	142f4 <__snprintf_chk@plt+0x34d4>
   14360:	add	sp, sp, #16
   14364:	pop	{lr}		; (ldr lr, [sp], #4)
   14368:	add	sp, sp, #4
   1436c:	bx	lr
   14370:	push	{r4, lr}
   14374:	ldr	r3, [pc, #112]	; 143ec <__snprintf_chk@plt+0x35cc>
   14378:	ldr	r1, [r3]
   1437c:	mov	r0, #10
   14380:	bl	10c64 <fputc_unlocked@plt>
   14384:	mov	r2, #5
   14388:	ldr	r1, [pc, #96]	; 143f0 <__snprintf_chk@plt+0x35d0>
   1438c:	mov	r0, #0
   14390:	bl	10c70 <dcgettext@plt>
   14394:	ldr	r2, [pc, #88]	; 143f4 <__snprintf_chk@plt+0x35d4>
   14398:	mov	r1, r0
   1439c:	mov	r0, #1
   143a0:	bl	10d90 <__printf_chk@plt>
   143a4:	mov	r2, #5
   143a8:	ldr	r1, [pc, #72]	; 143f8 <__snprintf_chk@plt+0x35d8>
   143ac:	mov	r0, #0
   143b0:	bl	10c70 <dcgettext@plt>
   143b4:	ldr	r3, [pc, #64]	; 143fc <__snprintf_chk@plt+0x35dc>
   143b8:	ldr	r2, [pc, #64]	; 14400 <__snprintf_chk@plt+0x35e0>
   143bc:	mov	r1, r0
   143c0:	mov	r0, #1
   143c4:	bl	10d90 <__printf_chk@plt>
   143c8:	mov	r2, #5
   143cc:	ldr	r1, [pc, #48]	; 14404 <__snprintf_chk@plt+0x35e4>
   143d0:	mov	r0, #0
   143d4:	bl	10c70 <dcgettext@plt>
   143d8:	ldr	r2, [pc, #40]	; 14408 <__snprintf_chk@plt+0x35e8>
   143dc:	mov	r1, r0
   143e0:	mov	r0, #1
   143e4:	bl	10d90 <__printf_chk@plt>
   143e8:	pop	{r4, pc}
   143ec:	andeq	r7, r2, r4, lsr r1
   143f0:	andeq	r5, r1, r0, asr #28
   143f4:	andeq	r5, r1, r4, asr lr
   143f8:	andeq	r5, r1, ip, ror #28
   143fc:	andeq	r5, r1, ip, asr #10
   14400:	andeq	r5, r1, r4, ror r5
   14404:	andeq	r5, r1, r0, lsl #29
   14408:	andeq	r5, r1, r8, lsr #29
   1440c:	push	{r4, lr}
   14410:	bl	14a40 <__snprintf_chk@plt+0x3c20>
   14414:	cmp	r0, #0
   14418:	popne	{r4, pc}
   1441c:	bl	149b0 <__snprintf_chk@plt+0x3b90>
   14420:	push	{r4, lr}
   14424:	bl	14a40 <__snprintf_chk@plt+0x3c20>
   14428:	cmp	r0, #0
   1442c:	popne	{r4, pc}
   14430:	bl	149b0 <__snprintf_chk@plt+0x3b90>
   14434:	push	{r4, lr}
   14438:	bl	1440c <__snprintf_chk@plt+0x35ec>
   1443c:	pop	{r4, pc}
   14440:	push	{r4, r5, r6, lr}
   14444:	mov	r5, r0
   14448:	mov	r4, r1
   1444c:	bl	14a70 <__snprintf_chk@plt+0x3c50>
   14450:	cmp	r0, #0
   14454:	popne	{r4, r5, r6, pc}
   14458:	adds	r4, r4, #0
   1445c:	movne	r4, #1
   14460:	cmp	r5, #0
   14464:	orreq	r4, r4, #1
   14468:	cmp	r4, #0
   1446c:	popeq	{r4, r5, r6, pc}
   14470:	bl	149b0 <__snprintf_chk@plt+0x3b90>
   14474:	push	{r4, lr}
   14478:	cmp	r1, #0
   1447c:	orreq	r1, r1, #1
   14480:	bl	14a70 <__snprintf_chk@plt+0x3c50>
   14484:	cmp	r0, #0
   14488:	popne	{r4, pc}
   1448c:	bl	149b0 <__snprintf_chk@plt+0x3b90>
   14490:	push	{r4, r5, r6, lr}
   14494:	mov	r6, r0
   14498:	mov	r5, r1
   1449c:	mov	r4, r2
   144a0:	bl	14dd0 <__snprintf_chk@plt+0x3fb0>
   144a4:	cmp	r0, #0
   144a8:	popne	{r4, r5, r6, pc}
   144ac:	cmp	r6, #0
   144b0:	beq	144c0 <__snprintf_chk@plt+0x36a0>
   144b4:	cmp	r5, #0
   144b8:	cmpne	r4, #0
   144bc:	popeq	{r4, r5, r6, pc}
   144c0:	bl	149b0 <__snprintf_chk@plt+0x3b90>
   144c4:	push	{r4, lr}
   144c8:	bl	14490 <__snprintf_chk@plt+0x3670>
   144cc:	pop	{r4, pc}
   144d0:	push	{r4, lr}
   144d4:	mov	ip, r1
   144d8:	mov	r3, r2
   144dc:	cmp	r2, #0
   144e0:	cmpne	r1, #0
   144e4:	moveq	r3, #1
   144e8:	moveq	ip, r3
   144ec:	mov	r2, r3
   144f0:	mov	r1, ip
   144f4:	bl	14dd0 <__snprintf_chk@plt+0x3fb0>
   144f8:	cmp	r0, #0
   144fc:	popne	{r4, pc}
   14500:	bl	149b0 <__snprintf_chk@plt+0x3b90>
   14504:	push	{r4, lr}
   14508:	mov	r2, r1
   1450c:	mov	r1, r0
   14510:	mov	r0, #0
   14514:	bl	14490 <__snprintf_chk@plt+0x3670>
   14518:	pop	{r4, pc}
   1451c:	push	{r4, lr}
   14520:	mov	r2, r1
   14524:	mov	r1, r0
   14528:	mov	r0, #0
   1452c:	bl	144d0 <__snprintf_chk@plt+0x36b0>
   14530:	pop	{r4, pc}
   14534:	push	{r4, r5, r6, r7, r8, lr}
   14538:	mov	r5, r1
   1453c:	mov	r6, r2
   14540:	ldr	r4, [r1]
   14544:	subs	r7, r0, #0
   14548:	beq	14564 <__snprintf_chk@plt+0x3744>
   1454c:	lsr	r2, r4, #1
   14550:	add	r3, r2, #1
   14554:	mvn	r3, r3
   14558:	cmp	r4, r3
   1455c:	bls	14588 <__snprintf_chk@plt+0x3768>
   14560:	bl	149b0 <__snprintf_chk@plt+0x3b90>
   14564:	cmp	r4, #0
   14568:	bne	14590 <__snprintf_chk@plt+0x3770>
   1456c:	mov	r1, r2
   14570:	mov	r0, #64	; 0x40
   14574:	bl	14f24 <__snprintf_chk@plt+0x4104>
   14578:	cmp	r0, #0
   1457c:	movne	r4, r0
   14580:	addeq	r4, r0, #1
   14584:	b	14590 <__snprintf_chk@plt+0x3770>
   14588:	add	r4, r4, #1
   1458c:	add	r4, r4, r2
   14590:	mov	r2, r6
   14594:	mov	r1, r4
   14598:	mov	r0, r7
   1459c:	bl	14490 <__snprintf_chk@plt+0x3670>
   145a0:	str	r4, [r5]
   145a4:	pop	{r4, r5, r6, r7, r8, pc}
   145a8:	push	{r4, lr}
   145ac:	mov	r2, #1
   145b0:	bl	14534 <__snprintf_chk@plt+0x3714>
   145b4:	pop	{r4, pc}
   145b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   145bc:	sub	sp, sp, #12
   145c0:	mov	fp, r0
   145c4:	mov	sl, r1
   145c8:	mov	r9, r2
   145cc:	mov	r7, r3
   145d0:	ldr	r6, [sp, #48]	; 0x30
   145d4:	ldr	r5, [r1]
   145d8:	asrs	r4, r5, #1
   145dc:	bmi	14738 <__snprintf_chk@plt+0x3918>
   145e0:	cmp	r5, #0
   145e4:	blt	1474c <__snprintf_chk@plt+0x392c>
   145e8:	mvn	r3, #-2147483648	; 0x80000000
   145ec:	sub	r3, r3, r4
   145f0:	cmp	r5, r3
   145f4:	movle	r3, #0
   145f8:	movgt	r3, #1
   145fc:	cmp	r3, #0
   14600:	addeq	r4, r4, r5
   14604:	mvnne	r4, #-2147483648	; 0x80000000
   14608:	mvn	r8, r7
   1460c:	lsr	r8, r8, #31
   14610:	cmp	r7, r4
   14614:	movge	r3, #0
   14618:	andlt	r3, r8, #1
   1461c:	cmp	r3, #0
   14620:	movne	r4, r7
   14624:	cmp	r6, #0
   14628:	blt	14760 <__snprintf_chk@plt+0x3940>
   1462c:	cmp	r6, #0
   14630:	beq	1480c <__snprintf_chk@plt+0x39ec>
   14634:	cmp	r4, #0
   14638:	blt	147bc <__snprintf_chk@plt+0x399c>
   1463c:	mov	r1, r6
   14640:	mvn	r0, #-2147483648	; 0x80000000
   14644:	bl	15130 <__snprintf_chk@plt+0x4310>
   14648:	cmp	r0, r4
   1464c:	movge	r0, #0
   14650:	movlt	r0, #1
   14654:	cmp	r0, #0
   14658:	mvnne	r3, #-2147483648	; 0x80000000
   1465c:	strne	r3, [sp, #4]
   14660:	beq	147f4 <__snprintf_chk@plt+0x39d4>
   14664:	mov	r1, r6
   14668:	ldr	r0, [sp, #4]
   1466c:	bl	15130 <__snprintf_chk@plt+0x4310>
   14670:	mov	r4, r0
   14674:	mov	r1, r6
   14678:	ldr	r0, [sp, #4]
   1467c:	bl	15350 <__snprintf_chk@plt+0x4530>
   14680:	ldr	r3, [sp, #4]
   14684:	sub	r1, r3, r1
   14688:	cmp	fp, #0
   1468c:	moveq	r3, #0
   14690:	streq	r3, [sl]
   14694:	sub	r3, r4, r5
   14698:	cmp	r3, r9
   1469c:	bge	14724 <__snprintf_chk@plt+0x3904>
   146a0:	cmp	r9, #0
   146a4:	blt	14818 <__snprintf_chk@plt+0x39f8>
   146a8:	cmp	r5, #0
   146ac:	blt	1482c <__snprintf_chk@plt+0x3a0c>
   146b0:	mvn	r3, #-2147483648	; 0x80000000
   146b4:	sub	r3, r3, r9
   146b8:	cmp	r5, r3
   146bc:	movle	r3, #0
   146c0:	movgt	r3, #1
   146c4:	cmp	r3, #0
   146c8:	bne	148d4 <__snprintf_chk@plt+0x3ab4>
   146cc:	add	r5, r5, r9
   146d0:	mov	r4, r5
   146d4:	cmp	r7, r5
   146d8:	movge	r7, #0
   146dc:	andlt	r7, r8, #1
   146e0:	cmp	r7, #0
   146e4:	bne	148d4 <__snprintf_chk@plt+0x3ab4>
   146e8:	cmp	r6, #0
   146ec:	blt	14840 <__snprintf_chk@plt+0x3a20>
   146f0:	cmp	r6, #0
   146f4:	beq	14720 <__snprintf_chk@plt+0x3900>
   146f8:	cmp	r5, #0
   146fc:	blt	1489c <__snprintf_chk@plt+0x3a7c>
   14700:	mov	r1, r6
   14704:	mvn	r0, #-2147483648	; 0x80000000
   14708:	bl	15130 <__snprintf_chk@plt+0x4310>
   1470c:	cmp	r5, r0
   14710:	movle	r0, #0
   14714:	movgt	r0, #1
   14718:	cmp	r0, #0
   1471c:	bne	148d4 <__snprintf_chk@plt+0x3ab4>
   14720:	mul	r1, r5, r6
   14724:	mov	r0, fp
   14728:	bl	14440 <__snprintf_chk@plt+0x3620>
   1472c:	str	r4, [sl]
   14730:	add	sp, sp, #12
   14734:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14738:	rsb	r3, r4, #-2147483648	; 0x80000000
   1473c:	cmp	r5, r3
   14740:	movge	r3, #0
   14744:	movlt	r3, #1
   14748:	b	145fc <__snprintf_chk@plt+0x37dc>
   1474c:	rsb	r3, r5, #-2147483648	; 0x80000000
   14750:	cmp	r4, r3
   14754:	movge	r3, #0
   14758:	movlt	r3, #1
   1475c:	b	145fc <__snprintf_chk@plt+0x37dc>
   14760:	cmp	r4, #0
   14764:	blt	1478c <__snprintf_chk@plt+0x396c>
   14768:	cmn	r6, #1
   1476c:	beq	147a8 <__snprintf_chk@plt+0x3988>
   14770:	mov	r1, r6
   14774:	mov	r0, #-2147483648	; 0x80000000
   14778:	bl	15130 <__snprintf_chk@plt+0x4310>
   1477c:	cmp	r0, r4
   14780:	movge	r0, #0
   14784:	movlt	r0, #1
   14788:	b	14654 <__snprintf_chk@plt+0x3834>
   1478c:	mov	r1, r6
   14790:	mvn	r0, #-2147483648	; 0x80000000
   14794:	bl	15130 <__snprintf_chk@plt+0x4310>
   14798:	cmp	r0, r4
   1479c:	movle	r0, #0
   147a0:	movgt	r0, #1
   147a4:	b	14654 <__snprintf_chk@plt+0x3834>
   147a8:	add	r0, r4, #-2147483648	; 0x80000000
   147ac:	cmp	r0, #0
   147b0:	movle	r0, #0
   147b4:	movgt	r0, #1
   147b8:	b	14654 <__snprintf_chk@plt+0x3834>
   147bc:	cmn	r4, #1
   147c0:	beq	147e0 <__snprintf_chk@plt+0x39c0>
   147c4:	mov	r1, r4
   147c8:	mov	r0, #-2147483648	; 0x80000000
   147cc:	bl	15130 <__snprintf_chk@plt+0x4310>
   147d0:	cmp	r6, r0
   147d4:	movle	r0, #0
   147d8:	movgt	r0, #1
   147dc:	b	14654 <__snprintf_chk@plt+0x3834>
   147e0:	add	r0, r6, #-2147483648	; 0x80000000
   147e4:	cmp	r0, #0
   147e8:	movle	r0, #0
   147ec:	movgt	r0, #1
   147f0:	b	14654 <__snprintf_chk@plt+0x3834>
   147f4:	mul	r1, r6, r4
   147f8:	cmp	r1, #63	; 0x3f
   147fc:	movle	r3, #64	; 0x40
   14800:	strle	r3, [sp, #4]
   14804:	bgt	14688 <__snprintf_chk@plt+0x3868>
   14808:	b	14664 <__snprintf_chk@plt+0x3844>
   1480c:	mov	r3, #64	; 0x40
   14810:	str	r3, [sp, #4]
   14814:	b	14664 <__snprintf_chk@plt+0x3844>
   14818:	rsb	r3, r9, #-2147483648	; 0x80000000
   1481c:	cmp	r5, r3
   14820:	movge	r3, #0
   14824:	movlt	r3, #1
   14828:	b	146c4 <__snprintf_chk@plt+0x38a4>
   1482c:	rsb	r3, r5, #-2147483648	; 0x80000000
   14830:	cmp	r9, r3
   14834:	movge	r3, #0
   14838:	movlt	r3, #1
   1483c:	b	146c4 <__snprintf_chk@plt+0x38a4>
   14840:	cmp	r5, #0
   14844:	blt	1486c <__snprintf_chk@plt+0x3a4c>
   14848:	cmn	r6, #1
   1484c:	beq	14888 <__snprintf_chk@plt+0x3a68>
   14850:	mov	r1, r6
   14854:	mov	r0, #-2147483648	; 0x80000000
   14858:	bl	15130 <__snprintf_chk@plt+0x4310>
   1485c:	cmp	r5, r0
   14860:	movle	r0, #0
   14864:	movgt	r0, #1
   14868:	b	14718 <__snprintf_chk@plt+0x38f8>
   1486c:	mov	r1, r6
   14870:	mvn	r0, #-2147483648	; 0x80000000
   14874:	bl	15130 <__snprintf_chk@plt+0x4310>
   14878:	cmp	r5, r0
   1487c:	movge	r0, #0
   14880:	movlt	r0, #1
   14884:	b	14718 <__snprintf_chk@plt+0x38f8>
   14888:	add	r0, r5, #-2147483648	; 0x80000000
   1488c:	cmp	r0, #0
   14890:	movle	r0, #0
   14894:	movgt	r0, #1
   14898:	b	14718 <__snprintf_chk@plt+0x38f8>
   1489c:	cmn	r5, #1
   148a0:	beq	148c0 <__snprintf_chk@plt+0x3aa0>
   148a4:	mov	r1, r5
   148a8:	mov	r0, #-2147483648	; 0x80000000
   148ac:	bl	15130 <__snprintf_chk@plt+0x4310>
   148b0:	cmp	r6, r0
   148b4:	movle	r0, #0
   148b8:	movgt	r0, #1
   148bc:	b	14718 <__snprintf_chk@plt+0x38f8>
   148c0:	add	r0, r6, #-2147483648	; 0x80000000
   148c4:	cmp	r0, #0
   148c8:	movle	r0, #0
   148cc:	movgt	r0, #1
   148d0:	b	14718 <__snprintf_chk@plt+0x38f8>
   148d4:	bl	149b0 <__snprintf_chk@plt+0x3b90>
   148d8:	push	{r4, lr}
   148dc:	bl	149f0 <__snprintf_chk@plt+0x3bd0>
   148e0:	cmp	r0, #0
   148e4:	popne	{r4, pc}
   148e8:	bl	149b0 <__snprintf_chk@plt+0x3b90>
   148ec:	push	{r4, lr}
   148f0:	mov	r1, #1
   148f4:	bl	148d8 <__snprintf_chk@plt+0x3ab8>
   148f8:	pop	{r4, pc}
   148fc:	push	{r4, lr}
   14900:	bl	149f0 <__snprintf_chk@plt+0x3bd0>
   14904:	cmp	r0, #0
   14908:	popne	{r4, pc}
   1490c:	bl	149b0 <__snprintf_chk@plt+0x3b90>
   14910:	push	{r4, lr}
   14914:	mov	r1, #1
   14918:	bl	148fc <__snprintf_chk@plt+0x3adc>
   1491c:	pop	{r4, pc}
   14920:	push	{r4, r5, r6, lr}
   14924:	mov	r5, r0
   14928:	mov	r4, r1
   1492c:	mov	r0, r1
   14930:	bl	1440c <__snprintf_chk@plt+0x35ec>
   14934:	mov	r2, r4
   14938:	mov	r1, r5
   1493c:	bl	10c34 <memcpy@plt>
   14940:	pop	{r4, r5, r6, pc}
   14944:	push	{r4, r5, r6, lr}
   14948:	mov	r5, r0
   1494c:	mov	r4, r1
   14950:	mov	r0, r1
   14954:	bl	14420 <__snprintf_chk@plt+0x3600>
   14958:	mov	r2, r4
   1495c:	mov	r1, r5
   14960:	bl	10c34 <memcpy@plt>
   14964:	pop	{r4, r5, r6, pc}
   14968:	push	{r4, r5, r6, lr}
   1496c:	mov	r5, r0
   14970:	mov	r4, r1
   14974:	add	r0, r1, #1
   14978:	bl	14420 <__snprintf_chk@plt+0x3600>
   1497c:	mov	r2, #0
   14980:	strb	r2, [r0, r4]
   14984:	mov	r2, r4
   14988:	mov	r1, r5
   1498c:	bl	10c34 <memcpy@plt>
   14990:	pop	{r4, r5, r6, pc}
   14994:	push	{r4, lr}
   14998:	mov	r4, r0
   1499c:	bl	10d54 <strlen@plt>
   149a0:	add	r1, r0, #1
   149a4:	mov	r0, r4
   149a8:	bl	14920 <__snprintf_chk@plt+0x3b00>
   149ac:	pop	{r4, pc}
   149b0:	push	{r4, lr}
   149b4:	ldr	r3, [pc, #40]	; 149e4 <__snprintf_chk@plt+0x3bc4>
   149b8:	ldr	r4, [r3]
   149bc:	mov	r2, #5
   149c0:	ldr	r1, [pc, #32]	; 149e8 <__snprintf_chk@plt+0x3bc8>
   149c4:	mov	r0, #0
   149c8:	bl	10c70 <dcgettext@plt>
   149cc:	mov	r3, r0
   149d0:	ldr	r2, [pc, #20]	; 149ec <__snprintf_chk@plt+0x3bcc>
   149d4:	mov	r1, #0
   149d8:	mov	r0, r4
   149dc:	bl	10cdc <error@plt>
   149e0:	bl	10e14 <abort@plt>
   149e4:	ldrdeq	r7, [r2], -ip
   149e8:	strdeq	r5, [r1], -r8
   149ec:	andeq	r5, r1, r8, ror sl
   149f0:	push	{r4, lr}
   149f4:	mov	r2, r0
   149f8:	mov	r3, r1
   149fc:	cmp	r1, #0
   14a00:	cmpne	r0, #0
   14a04:	moveq	r3, #1
   14a08:	moveq	r2, r3
   14a0c:	umull	r0, r1, r2, r3
   14a10:	cmp	r0, #0
   14a14:	cmpge	r1, #0
   14a18:	bne	14a2c <__snprintf_chk@plt+0x3c0c>
   14a1c:	mov	r1, r3
   14a20:	mov	r0, r2
   14a24:	bl	10be0 <calloc@plt>
   14a28:	pop	{r4, pc}
   14a2c:	bl	10d60 <__errno_location@plt>
   14a30:	mov	r3, #12
   14a34:	str	r3, [r0]
   14a38:	mov	r0, #0
   14a3c:	pop	{r4, pc}
   14a40:	push	{r4, lr}
   14a44:	cmp	r0, #0
   14a48:	moveq	r0, #1
   14a4c:	cmp	r0, #0
   14a50:	blt	14a5c <__snprintf_chk@plt+0x3c3c>
   14a54:	bl	10d00 <malloc@plt>
   14a58:	pop	{r4, pc}
   14a5c:	bl	10d60 <__errno_location@plt>
   14a60:	mov	r3, #12
   14a64:	str	r3, [r0]
   14a68:	mov	r0, #0
   14a6c:	pop	{r4, pc}
   14a70:	push	{r4, lr}
   14a74:	cmp	r0, #0
   14a78:	beq	14a94 <__snprintf_chk@plt+0x3c74>
   14a7c:	cmp	r1, #0
   14a80:	beq	14aa0 <__snprintf_chk@plt+0x3c80>
   14a84:	cmp	r1, #0
   14a88:	blt	14aac <__snprintf_chk@plt+0x3c8c>
   14a8c:	bl	10c7c <realloc@plt>
   14a90:	pop	{r4, pc}
   14a94:	mov	r0, r1
   14a98:	bl	14a40 <__snprintf_chk@plt+0x3c20>
   14a9c:	pop	{r4, pc}
   14aa0:	bl	14c44 <__snprintf_chk@plt+0x3e24>
   14aa4:	mov	r0, #0
   14aa8:	pop	{r4, pc}
   14aac:	bl	10d60 <__errno_location@plt>
   14ab0:	mov	r3, #12
   14ab4:	str	r3, [r0]
   14ab8:	mov	r0, #0
   14abc:	pop	{r4, pc}
   14ac0:	push	{r4, r5, r6, lr}
   14ac4:	mov	r5, r0
   14ac8:	bl	10cc4 <__fpending@plt>
   14acc:	mov	r6, r0
   14ad0:	ldr	r4, [r5]
   14ad4:	and	r4, r4, #32
   14ad8:	mov	r0, r5
   14adc:	bl	14b38 <__snprintf_chk@plt+0x3d18>
   14ae0:	cmp	r4, #0
   14ae4:	bne	14b0c <__snprintf_chk@plt+0x3cec>
   14ae8:	cmp	r0, #0
   14aec:	popeq	{r4, r5, r6, pc}
   14af0:	cmp	r6, #0
   14af4:	bne	14b28 <__snprintf_chk@plt+0x3d08>
   14af8:	bl	10d60 <__errno_location@plt>
   14afc:	ldr	r0, [r0]
   14b00:	subs	r0, r0, #9
   14b04:	mvnne	r0, #0
   14b08:	pop	{r4, r5, r6, pc}
   14b0c:	cmp	r0, #0
   14b10:	bne	14b30 <__snprintf_chk@plt+0x3d10>
   14b14:	bl	10d60 <__errno_location@plt>
   14b18:	mov	r3, #0
   14b1c:	str	r3, [r0]
   14b20:	mvn	r0, #0
   14b24:	pop	{r4, r5, r6, pc}
   14b28:	mvn	r0, #0
   14b2c:	pop	{r4, r5, r6, pc}
   14b30:	mvn	r0, #0
   14b34:	pop	{r4, r5, r6, pc}
   14b38:	push	{r4, r5, r6, lr}
   14b3c:	sub	sp, sp, #8
   14b40:	mov	r4, r0
   14b44:	bl	10da8 <fileno@plt>
   14b48:	cmp	r0, #0
   14b4c:	blt	14bc4 <__snprintf_chk@plt+0x3da4>
   14b50:	mov	r0, r4
   14b54:	bl	10d18 <__freading@plt>
   14b58:	cmp	r0, #0
   14b5c:	beq	14b90 <__snprintf_chk@plt+0x3d70>
   14b60:	mov	r0, r4
   14b64:	bl	10da8 <fileno@plt>
   14b68:	mov	r3, #1
   14b6c:	str	r3, [sp]
   14b70:	mov	r2, #0
   14b74:	mov	r3, #0
   14b78:	bl	10cac <lseek64@plt>
   14b7c:	mvn	r2, #0
   14b80:	mvn	r3, #0
   14b84:	cmp	r1, r3
   14b88:	cmpeq	r0, r2
   14b8c:	beq	14bd0 <__snprintf_chk@plt+0x3db0>
   14b90:	mov	r0, r4
   14b94:	bl	14be0 <__snprintf_chk@plt+0x3dc0>
   14b98:	cmp	r0, #0
   14b9c:	beq	14bd0 <__snprintf_chk@plt+0x3db0>
   14ba0:	bl	10d60 <__errno_location@plt>
   14ba4:	mov	r5, r0
   14ba8:	ldr	r6, [r0]
   14bac:	mov	r0, r4
   14bb0:	bl	10dc0 <fclose@plt>
   14bb4:	cmp	r6, #0
   14bb8:	strne	r6, [r5]
   14bbc:	mvnne	r0, #0
   14bc0:	b	14bd8 <__snprintf_chk@plt+0x3db8>
   14bc4:	mov	r0, r4
   14bc8:	bl	10dc0 <fclose@plt>
   14bcc:	b	14bd8 <__snprintf_chk@plt+0x3db8>
   14bd0:	mov	r0, r4
   14bd4:	bl	10dc0 <fclose@plt>
   14bd8:	add	sp, sp, #8
   14bdc:	pop	{r4, r5, r6, pc}
   14be0:	push	{r4, lr}
   14be4:	sub	sp, sp, #8
   14be8:	subs	r4, r0, #0
   14bec:	beq	14c00 <__snprintf_chk@plt+0x3de0>
   14bf0:	mov	r0, r4
   14bf4:	bl	10d18 <__freading@plt>
   14bf8:	cmp	r0, #0
   14bfc:	bne	14c10 <__snprintf_chk@plt+0x3df0>
   14c00:	mov	r0, r4
   14c04:	bl	10c10 <fflush@plt>
   14c08:	add	sp, sp, #8
   14c0c:	pop	{r4, pc}
   14c10:	ldr	r3, [r4]
   14c14:	tst	r3, #256	; 0x100
   14c18:	bne	14c28 <__snprintf_chk@plt+0x3e08>
   14c1c:	mov	r0, r4
   14c20:	bl	10c10 <fflush@plt>
   14c24:	b	14c08 <__snprintf_chk@plt+0x3de8>
   14c28:	mov	r3, #1
   14c2c:	str	r3, [sp]
   14c30:	mov	r2, #0
   14c34:	mov	r3, #0
   14c38:	mov	r0, r4
   14c3c:	bl	14c9c <__snprintf_chk@plt+0x3e7c>
   14c40:	b	14c1c <__snprintf_chk@plt+0x3dfc>
   14c44:	push	{r4, r5, lr}
   14c48:	sub	sp, sp, #12
   14c4c:	mov	r5, r0
   14c50:	bl	10d60 <__errno_location@plt>
   14c54:	mov	r4, r0
   14c58:	ldr	r3, [r0]
   14c5c:	str	r3, [sp]
   14c60:	str	r3, [sp, #4]
   14c64:	mov	r3, #0
   14c68:	str	r3, [r0]
   14c6c:	mov	r0, r5
   14c70:	bl	10c1c <free@plt>
   14c74:	ldr	r3, [r4]
   14c78:	cmp	r3, #0
   14c7c:	moveq	r3, #4
   14c80:	movne	r3, #0
   14c84:	add	r2, sp, #8
   14c88:	add	r3, r2, r3
   14c8c:	ldr	r3, [r3, #-8]
   14c90:	str	r3, [r4]
   14c94:	add	sp, sp, #12
   14c98:	pop	{r4, r5, pc}
   14c9c:	push	{r4, r5, r6, r7, lr}
   14ca0:	sub	sp, sp, #12
   14ca4:	mov	r4, r0
   14ca8:	mov	r6, r2
   14cac:	mov	r7, r3
   14cb0:	ldr	r5, [sp, #32]
   14cb4:	ldr	r2, [r0, #8]
   14cb8:	ldr	r3, [r0, #4]
   14cbc:	cmp	r2, r3
   14cc0:	beq	14ce0 <__snprintf_chk@plt+0x3ec0>
   14cc4:	str	r5, [sp]
   14cc8:	mov	r2, r6
   14ccc:	mov	r3, r7
   14cd0:	mov	r0, r4
   14cd4:	bl	10dcc <fseeko64@plt>
   14cd8:	add	sp, sp, #12
   14cdc:	pop	{r4, r5, r6, r7, pc}
   14ce0:	ldr	r2, [r0, #20]
   14ce4:	ldr	r3, [r0, #16]
   14ce8:	cmp	r2, r3
   14cec:	bne	14cc4 <__snprintf_chk@plt+0x3ea4>
   14cf0:	ldr	r3, [r0, #36]	; 0x24
   14cf4:	cmp	r3, #0
   14cf8:	bne	14cc4 <__snprintf_chk@plt+0x3ea4>
   14cfc:	bl	10da8 <fileno@plt>
   14d00:	str	r5, [sp]
   14d04:	mov	r2, r6
   14d08:	mov	r3, r7
   14d0c:	bl	10cac <lseek64@plt>
   14d10:	mvn	r2, #0
   14d14:	mvn	r3, #0
   14d18:	cmp	r1, r3
   14d1c:	cmpeq	r0, r2
   14d20:	beq	14d3c <__snprintf_chk@plt+0x3f1c>
   14d24:	ldr	r3, [r4]
   14d28:	bic	r3, r3, #16
   14d2c:	str	r3, [r4]
   14d30:	strd	r0, [r4, #80]	; 0x50
   14d34:	mov	r0, #0
   14d38:	b	14cd8 <__snprintf_chk@plt+0x3eb8>
   14d3c:	mvn	r0, #0
   14d40:	b	14cd8 <__snprintf_chk@plt+0x3eb8>
   14d44:	push	{r4, lr}
   14d48:	mov	r0, #14
   14d4c:	bl	10df0 <nl_langinfo@plt>
   14d50:	cmp	r0, #0
   14d54:	beq	14d6c <__snprintf_chk@plt+0x3f4c>
   14d58:	ldrb	r2, [r0]
   14d5c:	ldr	r3, [pc, #16]	; 14d74 <__snprintf_chk@plt+0x3f54>
   14d60:	cmp	r2, #0
   14d64:	moveq	r0, r3
   14d68:	pop	{r4, pc}
   14d6c:	ldr	r0, [pc]	; 14d74 <__snprintf_chk@plt+0x3f54>
   14d70:	pop	{r4, pc}
   14d74:	andeq	r5, r1, ip, lsl #30
   14d78:	push	{r4, r5, r6, r7, lr}
   14d7c:	sub	sp, sp, #12
   14d80:	mov	r7, r1
   14d84:	mov	r5, r2
   14d88:	subs	r6, r0, #0
   14d8c:	addeq	r6, sp, #4
   14d90:	mov	r0, r6
   14d94:	bl	10cd0 <mbrtowc@plt>
   14d98:	mov	r4, r0
   14d9c:	cmp	r5, #0
   14da0:	cmnne	r0, #3
   14da4:	bhi	14db4 <__snprintf_chk@plt+0x3f94>
   14da8:	mov	r0, r4
   14dac:	add	sp, sp, #12
   14db0:	pop	{r4, r5, r6, r7, pc}
   14db4:	mov	r0, #0
   14db8:	bl	14e1c <__snprintf_chk@plt+0x3ffc>
   14dbc:	cmp	r0, #0
   14dc0:	ldrbeq	r3, [r7]
   14dc4:	streq	r3, [r6]
   14dc8:	moveq	r4, #1
   14dcc:	b	14da8 <__snprintf_chk@plt+0x3f88>
   14dd0:	push	{r4, r5, r6, lr}
   14dd4:	mov	r6, r0
   14dd8:	mov	r5, r1
   14ddc:	subs	r4, r2, #0
   14de0:	beq	14e0c <__snprintf_chk@plt+0x3fec>
   14de4:	mov	r1, r4
   14de8:	mvn	r0, #0
   14dec:	bl	14f24 <__snprintf_chk@plt+0x4104>
   14df0:	cmp	r0, r5
   14df4:	bcs	14e0c <__snprintf_chk@plt+0x3fec>
   14df8:	bl	10d60 <__errno_location@plt>
   14dfc:	mov	r3, #12
   14e00:	str	r3, [r0]
   14e04:	mov	r0, #0
   14e08:	pop	{r4, r5, r6, pc}
   14e0c:	mul	r1, r5, r4
   14e10:	mov	r0, r6
   14e14:	bl	14a70 <__snprintf_chk@plt+0x3c50>
   14e18:	pop	{r4, r5, r6, pc}
   14e1c:	push	{lr}		; (str lr, [sp, #-4]!)
   14e20:	sub	sp, sp, #268	; 0x10c
   14e24:	ldr	r2, [pc, #68]	; 14e70 <__snprintf_chk@plt+0x4050>
   14e28:	add	r1, sp, #4
   14e2c:	bl	14e7c <__snprintf_chk@plt+0x405c>
   14e30:	cmp	r0, #0
   14e34:	movne	r0, #0
   14e38:	bne	14e68 <__snprintf_chk@plt+0x4048>
   14e3c:	ldr	r1, [pc, #48]	; 14e74 <__snprintf_chk@plt+0x4054>
   14e40:	add	r0, sp, #4
   14e44:	bl	10c04 <strcmp@plt>
   14e48:	cmp	r0, #0
   14e4c:	moveq	r0, #0
   14e50:	beq	14e68 <__snprintf_chk@plt+0x4048>
   14e54:	ldr	r1, [pc, #28]	; 14e78 <__snprintf_chk@plt+0x4058>
   14e58:	add	r0, sp, #4
   14e5c:	bl	10c04 <strcmp@plt>
   14e60:	adds	r0, r0, #0
   14e64:	movne	r0, #1
   14e68:	add	sp, sp, #268	; 0x10c
   14e6c:	pop	{pc}		; (ldr pc, [sp], #4)
   14e70:	andeq	r0, r0, r1, lsl #2
   14e74:	andeq	r5, r1, r4, lsl pc
   14e78:	andeq	r5, r1, r8, lsl pc
   14e7c:	push	{r4, r5, r6, lr}
   14e80:	mov	r6, r1
   14e84:	mov	r4, r2
   14e88:	mov	r1, #0
   14e8c:	bl	10dd8 <setlocale@plt>
   14e90:	subs	r5, r0, #0
   14e94:	beq	14eb8 <__snprintf_chk@plt+0x4098>
   14e98:	mov	r0, r5
   14e9c:	bl	10d54 <strlen@plt>
   14ea0:	cmp	r4, r0
   14ea4:	bhi	14ed0 <__snprintf_chk@plt+0x40b0>
   14ea8:	cmp	r4, #0
   14eac:	bne	14ee8 <__snprintf_chk@plt+0x40c8>
   14eb0:	mov	r0, #34	; 0x22
   14eb4:	pop	{r4, r5, r6, pc}
   14eb8:	cmp	r4, #0
   14ebc:	beq	14f0c <__snprintf_chk@plt+0x40ec>
   14ec0:	mov	r3, #0
   14ec4:	strb	r3, [r6]
   14ec8:	mov	r0, #22
   14ecc:	pop	{r4, r5, r6, pc}
   14ed0:	add	r2, r0, #1
   14ed4:	mov	r1, r5
   14ed8:	mov	r0, r6
   14edc:	bl	10c34 <memcpy@plt>
   14ee0:	mov	r0, #0
   14ee4:	pop	{r4, r5, r6, pc}
   14ee8:	sub	r4, r4, #1
   14eec:	mov	r2, r4
   14ef0:	mov	r1, r5
   14ef4:	mov	r0, r6
   14ef8:	bl	10c34 <memcpy@plt>
   14efc:	mov	r3, #0
   14f00:	strb	r3, [r6, r4]
   14f04:	mov	r0, #34	; 0x22
   14f08:	pop	{r4, r5, r6, pc}
   14f0c:	mov	r0, #22
   14f10:	pop	{r4, r5, r6, pc}
   14f14:	push	{r4, lr}
   14f18:	mov	r1, #0
   14f1c:	bl	10dd8 <setlocale@plt>
   14f20:	pop	{r4, pc}
   14f24:	subs	r2, r1, #1
   14f28:	bxeq	lr
   14f2c:	bcc	15104 <__snprintf_chk@plt+0x42e4>
   14f30:	cmp	r0, r1
   14f34:	bls	150e8 <__snprintf_chk@plt+0x42c8>
   14f38:	tst	r1, r2
   14f3c:	beq	150f4 <__snprintf_chk@plt+0x42d4>
   14f40:	clz	r3, r0
   14f44:	clz	r2, r1
   14f48:	sub	r3, r2, r3
   14f4c:	rsbs	r3, r3, #31
   14f50:	addne	r3, r3, r3, lsl #1
   14f54:	mov	r2, #0
   14f58:	addne	pc, pc, r3, lsl #2
   14f5c:	nop			; (mov r0, r0)
   14f60:	cmp	r0, r1, lsl #31
   14f64:	adc	r2, r2, r2
   14f68:	subcs	r0, r0, r1, lsl #31
   14f6c:	cmp	r0, r1, lsl #30
   14f70:	adc	r2, r2, r2
   14f74:	subcs	r0, r0, r1, lsl #30
   14f78:	cmp	r0, r1, lsl #29
   14f7c:	adc	r2, r2, r2
   14f80:	subcs	r0, r0, r1, lsl #29
   14f84:	cmp	r0, r1, lsl #28
   14f88:	adc	r2, r2, r2
   14f8c:	subcs	r0, r0, r1, lsl #28
   14f90:	cmp	r0, r1, lsl #27
   14f94:	adc	r2, r2, r2
   14f98:	subcs	r0, r0, r1, lsl #27
   14f9c:	cmp	r0, r1, lsl #26
   14fa0:	adc	r2, r2, r2
   14fa4:	subcs	r0, r0, r1, lsl #26
   14fa8:	cmp	r0, r1, lsl #25
   14fac:	adc	r2, r2, r2
   14fb0:	subcs	r0, r0, r1, lsl #25
   14fb4:	cmp	r0, r1, lsl #24
   14fb8:	adc	r2, r2, r2
   14fbc:	subcs	r0, r0, r1, lsl #24
   14fc0:	cmp	r0, r1, lsl #23
   14fc4:	adc	r2, r2, r2
   14fc8:	subcs	r0, r0, r1, lsl #23
   14fcc:	cmp	r0, r1, lsl #22
   14fd0:	adc	r2, r2, r2
   14fd4:	subcs	r0, r0, r1, lsl #22
   14fd8:	cmp	r0, r1, lsl #21
   14fdc:	adc	r2, r2, r2
   14fe0:	subcs	r0, r0, r1, lsl #21
   14fe4:	cmp	r0, r1, lsl #20
   14fe8:	adc	r2, r2, r2
   14fec:	subcs	r0, r0, r1, lsl #20
   14ff0:	cmp	r0, r1, lsl #19
   14ff4:	adc	r2, r2, r2
   14ff8:	subcs	r0, r0, r1, lsl #19
   14ffc:	cmp	r0, r1, lsl #18
   15000:	adc	r2, r2, r2
   15004:	subcs	r0, r0, r1, lsl #18
   15008:	cmp	r0, r1, lsl #17
   1500c:	adc	r2, r2, r2
   15010:	subcs	r0, r0, r1, lsl #17
   15014:	cmp	r0, r1, lsl #16
   15018:	adc	r2, r2, r2
   1501c:	subcs	r0, r0, r1, lsl #16
   15020:	cmp	r0, r1, lsl #15
   15024:	adc	r2, r2, r2
   15028:	subcs	r0, r0, r1, lsl #15
   1502c:	cmp	r0, r1, lsl #14
   15030:	adc	r2, r2, r2
   15034:	subcs	r0, r0, r1, lsl #14
   15038:	cmp	r0, r1, lsl #13
   1503c:	adc	r2, r2, r2
   15040:	subcs	r0, r0, r1, lsl #13
   15044:	cmp	r0, r1, lsl #12
   15048:	adc	r2, r2, r2
   1504c:	subcs	r0, r0, r1, lsl #12
   15050:	cmp	r0, r1, lsl #11
   15054:	adc	r2, r2, r2
   15058:	subcs	r0, r0, r1, lsl #11
   1505c:	cmp	r0, r1, lsl #10
   15060:	adc	r2, r2, r2
   15064:	subcs	r0, r0, r1, lsl #10
   15068:	cmp	r0, r1, lsl #9
   1506c:	adc	r2, r2, r2
   15070:	subcs	r0, r0, r1, lsl #9
   15074:	cmp	r0, r1, lsl #8
   15078:	adc	r2, r2, r2
   1507c:	subcs	r0, r0, r1, lsl #8
   15080:	cmp	r0, r1, lsl #7
   15084:	adc	r2, r2, r2
   15088:	subcs	r0, r0, r1, lsl #7
   1508c:	cmp	r0, r1, lsl #6
   15090:	adc	r2, r2, r2
   15094:	subcs	r0, r0, r1, lsl #6
   15098:	cmp	r0, r1, lsl #5
   1509c:	adc	r2, r2, r2
   150a0:	subcs	r0, r0, r1, lsl #5
   150a4:	cmp	r0, r1, lsl #4
   150a8:	adc	r2, r2, r2
   150ac:	subcs	r0, r0, r1, lsl #4
   150b0:	cmp	r0, r1, lsl #3
   150b4:	adc	r2, r2, r2
   150b8:	subcs	r0, r0, r1, lsl #3
   150bc:	cmp	r0, r1, lsl #2
   150c0:	adc	r2, r2, r2
   150c4:	subcs	r0, r0, r1, lsl #2
   150c8:	cmp	r0, r1, lsl #1
   150cc:	adc	r2, r2, r2
   150d0:	subcs	r0, r0, r1, lsl #1
   150d4:	cmp	r0, r1
   150d8:	adc	r2, r2, r2
   150dc:	subcs	r0, r0, r1
   150e0:	mov	r0, r2
   150e4:	bx	lr
   150e8:	moveq	r0, #1
   150ec:	movne	r0, #0
   150f0:	bx	lr
   150f4:	clz	r2, r1
   150f8:	rsb	r2, r2, #31
   150fc:	lsr	r0, r0, r2
   15100:	bx	lr
   15104:	cmp	r0, #0
   15108:	mvnne	r0, #0
   1510c:	b	15370 <__snprintf_chk@plt+0x4550>
   15110:	cmp	r1, #0
   15114:	beq	15104 <__snprintf_chk@plt+0x42e4>
   15118:	push	{r0, r1, lr}
   1511c:	bl	14f24 <__snprintf_chk@plt+0x4104>
   15120:	pop	{r1, r2, lr}
   15124:	mul	r3, r2, r0
   15128:	sub	r1, r1, r3
   1512c:	bx	lr
   15130:	cmp	r1, #0
   15134:	beq	15340 <__snprintf_chk@plt+0x4520>
   15138:	eor	ip, r0, r1
   1513c:	rsbmi	r1, r1, #0
   15140:	subs	r2, r1, #1
   15144:	beq	1530c <__snprintf_chk@plt+0x44ec>
   15148:	movs	r3, r0
   1514c:	rsbmi	r3, r0, #0
   15150:	cmp	r3, r1
   15154:	bls	15318 <__snprintf_chk@plt+0x44f8>
   15158:	tst	r1, r2
   1515c:	beq	15328 <__snprintf_chk@plt+0x4508>
   15160:	clz	r2, r3
   15164:	clz	r0, r1
   15168:	sub	r2, r0, r2
   1516c:	rsbs	r2, r2, #31
   15170:	addne	r2, r2, r2, lsl #1
   15174:	mov	r0, #0
   15178:	addne	pc, pc, r2, lsl #2
   1517c:	nop			; (mov r0, r0)
   15180:	cmp	r3, r1, lsl #31
   15184:	adc	r0, r0, r0
   15188:	subcs	r3, r3, r1, lsl #31
   1518c:	cmp	r3, r1, lsl #30
   15190:	adc	r0, r0, r0
   15194:	subcs	r3, r3, r1, lsl #30
   15198:	cmp	r3, r1, lsl #29
   1519c:	adc	r0, r0, r0
   151a0:	subcs	r3, r3, r1, lsl #29
   151a4:	cmp	r3, r1, lsl #28
   151a8:	adc	r0, r0, r0
   151ac:	subcs	r3, r3, r1, lsl #28
   151b0:	cmp	r3, r1, lsl #27
   151b4:	adc	r0, r0, r0
   151b8:	subcs	r3, r3, r1, lsl #27
   151bc:	cmp	r3, r1, lsl #26
   151c0:	adc	r0, r0, r0
   151c4:	subcs	r3, r3, r1, lsl #26
   151c8:	cmp	r3, r1, lsl #25
   151cc:	adc	r0, r0, r0
   151d0:	subcs	r3, r3, r1, lsl #25
   151d4:	cmp	r3, r1, lsl #24
   151d8:	adc	r0, r0, r0
   151dc:	subcs	r3, r3, r1, lsl #24
   151e0:	cmp	r3, r1, lsl #23
   151e4:	adc	r0, r0, r0
   151e8:	subcs	r3, r3, r1, lsl #23
   151ec:	cmp	r3, r1, lsl #22
   151f0:	adc	r0, r0, r0
   151f4:	subcs	r3, r3, r1, lsl #22
   151f8:	cmp	r3, r1, lsl #21
   151fc:	adc	r0, r0, r0
   15200:	subcs	r3, r3, r1, lsl #21
   15204:	cmp	r3, r1, lsl #20
   15208:	adc	r0, r0, r0
   1520c:	subcs	r3, r3, r1, lsl #20
   15210:	cmp	r3, r1, lsl #19
   15214:	adc	r0, r0, r0
   15218:	subcs	r3, r3, r1, lsl #19
   1521c:	cmp	r3, r1, lsl #18
   15220:	adc	r0, r0, r0
   15224:	subcs	r3, r3, r1, lsl #18
   15228:	cmp	r3, r1, lsl #17
   1522c:	adc	r0, r0, r0
   15230:	subcs	r3, r3, r1, lsl #17
   15234:	cmp	r3, r1, lsl #16
   15238:	adc	r0, r0, r0
   1523c:	subcs	r3, r3, r1, lsl #16
   15240:	cmp	r3, r1, lsl #15
   15244:	adc	r0, r0, r0
   15248:	subcs	r3, r3, r1, lsl #15
   1524c:	cmp	r3, r1, lsl #14
   15250:	adc	r0, r0, r0
   15254:	subcs	r3, r3, r1, lsl #14
   15258:	cmp	r3, r1, lsl #13
   1525c:	adc	r0, r0, r0
   15260:	subcs	r3, r3, r1, lsl #13
   15264:	cmp	r3, r1, lsl #12
   15268:	adc	r0, r0, r0
   1526c:	subcs	r3, r3, r1, lsl #12
   15270:	cmp	r3, r1, lsl #11
   15274:	adc	r0, r0, r0
   15278:	subcs	r3, r3, r1, lsl #11
   1527c:	cmp	r3, r1, lsl #10
   15280:	adc	r0, r0, r0
   15284:	subcs	r3, r3, r1, lsl #10
   15288:	cmp	r3, r1, lsl #9
   1528c:	adc	r0, r0, r0
   15290:	subcs	r3, r3, r1, lsl #9
   15294:	cmp	r3, r1, lsl #8
   15298:	adc	r0, r0, r0
   1529c:	subcs	r3, r3, r1, lsl #8
   152a0:	cmp	r3, r1, lsl #7
   152a4:	adc	r0, r0, r0
   152a8:	subcs	r3, r3, r1, lsl #7
   152ac:	cmp	r3, r1, lsl #6
   152b0:	adc	r0, r0, r0
   152b4:	subcs	r3, r3, r1, lsl #6
   152b8:	cmp	r3, r1, lsl #5
   152bc:	adc	r0, r0, r0
   152c0:	subcs	r3, r3, r1, lsl #5
   152c4:	cmp	r3, r1, lsl #4
   152c8:	adc	r0, r0, r0
   152cc:	subcs	r3, r3, r1, lsl #4
   152d0:	cmp	r3, r1, lsl #3
   152d4:	adc	r0, r0, r0
   152d8:	subcs	r3, r3, r1, lsl #3
   152dc:	cmp	r3, r1, lsl #2
   152e0:	adc	r0, r0, r0
   152e4:	subcs	r3, r3, r1, lsl #2
   152e8:	cmp	r3, r1, lsl #1
   152ec:	adc	r0, r0, r0
   152f0:	subcs	r3, r3, r1, lsl #1
   152f4:	cmp	r3, r1
   152f8:	adc	r0, r0, r0
   152fc:	subcs	r3, r3, r1
   15300:	cmp	ip, #0
   15304:	rsbmi	r0, r0, #0
   15308:	bx	lr
   1530c:	teq	ip, r0
   15310:	rsbmi	r0, r0, #0
   15314:	bx	lr
   15318:	movcc	r0, #0
   1531c:	asreq	r0, ip, #31
   15320:	orreq	r0, r0, #1
   15324:	bx	lr
   15328:	clz	r2, r1
   1532c:	rsb	r2, r2, #31
   15330:	cmp	ip, #0
   15334:	lsr	r0, r3, r2
   15338:	rsbmi	r0, r0, #0
   1533c:	bx	lr
   15340:	cmp	r0, #0
   15344:	mvngt	r0, #-2147483648	; 0x80000000
   15348:	movlt	r0, #-2147483648	; 0x80000000
   1534c:	b	15370 <__snprintf_chk@plt+0x4550>
   15350:	cmp	r1, #0
   15354:	beq	15340 <__snprintf_chk@plt+0x4520>
   15358:	push	{r0, r1, lr}
   1535c:	bl	15138 <__snprintf_chk@plt+0x4318>
   15360:	pop	{r1, r2, lr}
   15364:	mul	r3, r2, r0
   15368:	sub	r1, r1, r3
   1536c:	bx	lr
   15370:	push	{r1, lr}
   15374:	mov	r0, #8
   15378:	bl	10bf8 <raise@plt>
   1537c:	pop	{r1, pc}
   15380:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15384:	mov	r7, r0
   15388:	ldr	r6, [pc, #72]	; 153d8 <__snprintf_chk@plt+0x45b8>
   1538c:	ldr	r5, [pc, #72]	; 153dc <__snprintf_chk@plt+0x45bc>
   15390:	add	r6, pc, r6
   15394:	add	r5, pc, r5
   15398:	sub	r6, r6, r5
   1539c:	mov	r8, r1
   153a0:	mov	r9, r2
   153a4:	bl	10bc0 <calloc@plt-0x20>
   153a8:	asrs	r6, r6, #2
   153ac:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   153b0:	mov	r4, #0
   153b4:	add	r4, r4, #1
   153b8:	ldr	r3, [r5], #4
   153bc:	mov	r2, r9
   153c0:	mov	r1, r8
   153c4:	mov	r0, r7
   153c8:	blx	r3
   153cc:	cmp	r6, r4
   153d0:	bne	153b4 <__snprintf_chk@plt+0x4594>
   153d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   153d8:	andeq	r1, r1, r8, ror fp
   153dc:	andeq	r1, r1, r0, ror fp
   153e0:	bx	lr
   153e4:	ldr	r3, [pc, #12]	; 153f8 <__snprintf_chk@plt+0x45d8>
   153e8:	mov	r1, #0
   153ec:	add	r3, pc, r3
   153f0:	ldr	r2, [r3]
   153f4:	b	10d78 <__cxa_atexit@plt>
   153f8:	andeq	r1, r1, r4, ror #25

Disassembly of section .fini:

000153fc <.fini>:
   153fc:	push	{r3, lr}
   15400:	pop	{r3, pc}
