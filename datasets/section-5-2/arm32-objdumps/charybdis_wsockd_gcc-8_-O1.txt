
../repos/charybdis/wsockd/.libs/wsockd:     file format elf32-littlearm


Disassembly of section .init:

00010c38 <.init>:
   10c38:	push	{r3, lr}
   10c3c:	bl	10f10 <rb_base64_encode@plt+0x48>
   10c40:	pop	{r3, pc}

Disassembly of section .plt:

00010c44 <open@plt-0x14>:
   10c44:	push	{lr}		; (str lr, [sp, #-4]!)
   10c48:	ldr	lr, [pc, #4]	; 10c54 <open@plt-0x4>
   10c4c:	add	lr, pc, lr
   10c50:	ldr	pc, [lr, #8]!
   10c54:	andeq	r4, r1, ip, lsr #7

00010c58 <open@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #20, 20	; 0x14000
   10c60:	ldr	pc, [ip, #940]!	; 0x3ac

00010c64 <sigemptyset@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #20, 20	; 0x14000
   10c6c:	ldr	pc, [ip, #932]!	; 0x3a4

00010c70 <strerror@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #20, 20	; 0x14000
   10c78:	ldr	pc, [ip, #924]!	; 0x39c

00010c7c <rb_get_type@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #20, 20	; 0x14000
   10c84:	ldr	pc, [ip, #916]!	; 0x394

00010c88 <abort@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #20, 20	; 0x14000
   10c90:	ldr	pc, [ip, #908]!	; 0x38c

00010c94 <rb_event_addish@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #20, 20	; 0x14000
   10c9c:	ldr	pc, [ip, #900]!	; 0x384

00010ca0 <rb_ignore_errno@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #20, 20	; 0x14000
   10ca8:	ldr	pc, [ip, #892]!	; 0x37c

00010cac <__libc_start_main@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #20, 20	; 0x14000
   10cb4:	ldr	pc, [ip, #884]!	; 0x374

00010cb8 <rb_setselect@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #20, 20	; 0x14000
   10cc0:	ldr	pc, [ip, #876]!	; 0x36c

00010cc4 <__gmon_start__@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #20, 20	; 0x14000
   10ccc:	ldr	pc, [ip, #868]!	; 0x364

00010cd0 <rb_send_fd_buf@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #20, 20	; 0x14000
   10cd8:	ldr	pc, [ip, #860]!	; 0x35c

00010cdc <vsnprintf@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #20, 20	; 0x14000
   10ce4:	ldr	pc, [ip, #852]!	; 0x354

00010ce8 <getenv@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #20, 20	; 0x14000
   10cf0:	ldr	pc, [ip, #844]!	; 0x34c

00010cf4 <calloc@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #20, 20	; 0x14000
   10cfc:	ldr	pc, [ip, #836]!	; 0x344

00010d00 <rb_set_nb@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #20, 20	; 0x14000
   10d08:	ldr	pc, [ip, #828]!	; 0x33c

00010d0c <memset@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #20, 20	; 0x14000
   10d14:	ldr	pc, [ip, #820]!	; 0x334

00010d18 <__assert_fail@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #20, 20	; 0x14000
   10d20:	ldr	pc, [ip, #812]!	; 0x32c

00010d24 <rb_linebuf_parse@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #20, 20	; 0x14000
   10d2c:	ldr	pc, [ip, #804]!	; 0x324

00010d30 <rb_strlcpy@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #20, 20	; 0x14000
   10d38:	ldr	pc, [ip, #796]!	; 0x31c

00010d3c <rb_init_rawbuffers@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #20, 20	; 0x14000
   10d44:	ldr	pc, [ip, #788]!	; 0x314

00010d48 <free@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #20, 20	; 0x14000
   10d50:	ldr	pc, [ip, #780]!	; 0x30c

00010d54 <rb_lib_loop@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #20, 20	; 0x14000
   10d5c:	ldr	pc, [ip, #772]!	; 0x304

00010d60 <rb_read@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #20, 20	; 0x14000
   10d68:	ldr	pc, [ip, #764]!	; 0x2fc

00010d6c <rb_set_type@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #20, 20	; 0x14000
   10d74:	ldr	pc, [ip, #756]!	; 0x2f4

00010d78 <rb_linebuf_get@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #20, 20	; 0x14000
   10d80:	ldr	pc, [ip, #748]!	; 0x2ec

00010d84 <rb_linebuf_flush@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #20, 20	; 0x14000
   10d8c:	ldr	pc, [ip, #740]!	; 0x2e4

00010d90 <strlen@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #20, 20	; 0x14000
   10d98:	ldr	pc, [ip, #732]!	; 0x2dc

00010d9c <memcpy@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #20, 20	; 0x14000
   10da4:	ldr	pc, [ip, #724]!	; 0x2d4

00010da8 <rb_linebuf_donebuf@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #20, 20	; 0x14000
   10db0:	ldr	pc, [ip, #716]!	; 0x2cc

00010db4 <rb_strcasestr@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #20, 20	; 0x14000
   10dbc:	ldr	pc, [ip, #708]!	; 0x2c4

00010dc0 <rb_close@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #20, 20	; 0x14000
   10dc8:	ldr	pc, [ip, #700]!	; 0x2bc

00010dcc <strtol@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #20, 20	; 0x14000
   10dd4:	ldr	pc, [ip, #692]!	; 0x2b4

00010dd8 <sigaddset@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #20, 20	; 0x14000
   10de0:	ldr	pc, [ip, #684]!	; 0x2ac

00010de4 <rb_rawbuf_length@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #20, 20	; 0x14000
   10dec:	ldr	pc, [ip, #676]!	; 0x2a4

00010df0 <rb_free_rawbuffer@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #20, 20	; 0x14000
   10df8:	ldr	pc, [ip, #668]!	; 0x29c

00010dfc <close@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #20, 20	; 0x14000
   10e04:	ldr	pc, [ip, #660]!	; 0x294

00010e08 <fwrite@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #20, 20	; 0x14000
   10e10:	ldr	pc, [ip, #652]!	; 0x28c

00010e14 <rb_outofmemory@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #20, 20	; 0x14000
   10e1c:	ldr	pc, [ip, #644]!	; 0x284

00010e20 <rb_rawbuf_get@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #20, 20	; 0x14000
   10e28:	ldr	pc, [ip, #636]!	; 0x27c

00010e2c <sigaction@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #20, 20	; 0x14000
   10e34:	ldr	pc, [ip, #628]!	; 0x274

00010e38 <rb_lib_init@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #20, 20	; 0x14000
   10e40:	ldr	pc, [ip, #620]!	; 0x26c

00010e44 <rb_new_rawbuffer@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #20, 20	; 0x14000
   10e4c:	ldr	pc, [ip, #612]!	; 0x264

00010e50 <rb_open@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #20, 20	; 0x14000
   10e58:	ldr	pc, [ip, #604]!	; 0x25c

00010e5c <rb_recv_fd_buf@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #20, 20	; 0x14000
   10e64:	ldr	pc, [ip, #596]!	; 0x254

00010e68 <dup2@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #20, 20	; 0x14000
   10e70:	ldr	pc, [ip, #588]!	; 0x24c

00010e74 <rb_linebuf_newbuf@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #20, 20	; 0x14000
   10e7c:	ldr	pc, [ip, #580]!	; 0x244

00010e80 <rb_linebuf_init@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #20, 20	; 0x14000
   10e88:	ldr	pc, [ip, #572]!	; 0x23c

00010e8c <getrlimit@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #20, 20	; 0x14000
   10e94:	ldr	pc, [ip, #564]!	; 0x234

00010e98 <rb_rawbuf_append@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #20, 20	; 0x14000
   10ea0:	ldr	pc, [ip, #556]!	; 0x22c

00010ea4 <rb_rawbuf_flush@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #20, 20	; 0x14000
   10eac:	ldr	pc, [ip, #548]!	; 0x224

00010eb0 <exit@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #20, 20	; 0x14000
   10eb8:	ldr	pc, [ip, #540]!	; 0x21c

00010ebc <__errno_location@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #20, 20	; 0x14000
   10ec4:	ldr	pc, [ip, #532]!	; 0x214

00010ec8 <rb_base64_encode@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #20, 20	; 0x14000
   10ed0:	ldr	pc, [ip, #524]!	; 0x20c

Disassembly of section .text:

00010ed4 <.text>:
   10ed4:	mov	fp, #0
   10ed8:	mov	lr, #0
   10edc:	pop	{r1}		; (ldr r1, [sp], #4)
   10ee0:	mov	r2, sp
   10ee4:	push	{r2}		; (str r2, [sp, #-4]!)
   10ee8:	push	{r0}		; (str r0, [sp, #-4]!)
   10eec:	ldr	ip, [pc, #16]	; 10f04 <rb_base64_encode@plt+0x3c>
   10ef0:	push	{ip}		; (str ip, [sp, #-4]!)
   10ef4:	ldr	r0, [pc, #12]	; 10f08 <rb_base64_encode@plt+0x40>
   10ef8:	ldr	r3, [pc, #12]	; 10f0c <rb_base64_encode@plt+0x44>
   10efc:	bl	10cac <__libc_start_main@plt>
   10f00:	bl	10c88 <abort@plt>
   10f04:	ldrdeq	r3, [r1], -r0
   10f08:	andeq	r2, r1, r4, lsl r4
   10f0c:	andeq	r3, r1, r0, ror ip
   10f10:	ldr	r3, [pc, #20]	; 10f2c <rb_base64_encode@plt+0x64>
   10f14:	ldr	r2, [pc, #20]	; 10f30 <rb_base64_encode@plt+0x68>
   10f18:	add	r3, pc, r3
   10f1c:	ldr	r2, [r3, r2]
   10f20:	cmp	r2, #0
   10f24:	bxeq	lr
   10f28:	b	10cc4 <__gmon_start__@plt>
   10f2c:	andeq	r4, r1, r0, ror #1
   10f30:	andeq	r0, r0, r0, ror #1
   10f34:	ldr	r0, [pc, #24]	; 10f54 <rb_base64_encode@plt+0x8c>
   10f38:	ldr	r3, [pc, #24]	; 10f58 <rb_base64_encode@plt+0x90>
   10f3c:	cmp	r3, r0
   10f40:	bxeq	lr
   10f44:	ldr	r3, [pc, #16]	; 10f5c <rb_base64_encode@plt+0x94>
   10f48:	cmp	r3, #0
   10f4c:	bxeq	lr
   10f50:	bx	r3
   10f54:	andeq	r5, r2, ip, ror #1
   10f58:	andeq	r5, r2, ip, ror #1
   10f5c:	andeq	r0, r0, r0
   10f60:	ldr	r0, [pc, #36]	; 10f8c <rb_base64_encode@plt+0xc4>
   10f64:	ldr	r1, [pc, #36]	; 10f90 <rb_base64_encode@plt+0xc8>
   10f68:	sub	r1, r1, r0
   10f6c:	asr	r1, r1, #2
   10f70:	add	r1, r1, r1, lsr #31
   10f74:	asrs	r1, r1, #1
   10f78:	bxeq	lr
   10f7c:	ldr	r3, [pc, #16]	; 10f94 <rb_base64_encode@plt+0xcc>
   10f80:	cmp	r3, #0
   10f84:	bxeq	lr
   10f88:	bx	r3
   10f8c:	andeq	r5, r2, ip, ror #1
   10f90:	andeq	r5, r2, ip, ror #1
   10f94:	andeq	r0, r0, r0
   10f98:	push	{r4, lr}
   10f9c:	ldr	r4, [pc, #24]	; 10fbc <rb_base64_encode@plt+0xf4>
   10fa0:	ldrb	r3, [r4]
   10fa4:	cmp	r3, #0
   10fa8:	popne	{r4, pc}
   10fac:	bl	10f34 <rb_base64_encode@plt+0x6c>
   10fb0:	mov	r3, #1
   10fb4:	strb	r3, [r4]
   10fb8:	pop	{r4, pc}
   10fbc:	strdeq	r5, [r2], -r4
   10fc0:	b	10f60 <rb_base64_encode@plt+0x98>
   10fc4:	bx	lr
   10fc8:	strd	r4, [sp, #-16]!
   10fcc:	str	r6, [sp, #8]
   10fd0:	str	lr, [sp, #12]
   10fd4:	movw	r3, #20728	; 0x50f8
   10fd8:	movt	r3, #2
   10fdc:	ldr	r3, [r3]
   10fe0:	cmp	r3, #0
   10fe4:	beq	1102c <rb_base64_encode@plt+0x164>
   10fe8:	ldr	r5, [r3, #8]
   10fec:	ldr	r4, [r3]
   10ff0:	add	r0, r4, #52	; 0x34
   10ff4:	bl	10da8 <rb_linebuf_donebuf@plt>
   10ff8:	add	r0, r4, #24
   10ffc:	bl	10da8 <rb_linebuf_donebuf@plt>
   11000:	ldr	r0, [r4, #20]
   11004:	bl	10df0 <rb_free_rawbuffer@plt>
   11008:	ldr	r0, [r4, #16]
   1100c:	bl	10df0 <rb_free_rawbuffer@plt>
   11010:	mov	r0, r4
   11014:	bl	10d48 <free@plt>
   11018:	cmp	r5, #0
   1101c:	beq	1102c <rb_base64_encode@plt+0x164>
   11020:	mov	r3, r5
   11024:	ldr	r5, [r5, #8]
   11028:	b	10fec <rb_base64_encode@plt+0x124>
   1102c:	movw	r3, #20728	; 0x50f8
   11030:	movt	r3, #2
   11034:	mov	r2, #0
   11038:	str	r2, [r3]
   1103c:	str	r2, [r3, #4]
   11040:	ldrd	r4, [sp]
   11044:	ldr	r6, [sp, #8]
   11048:	add	sp, sp, #12
   1104c:	pop	{pc}		; (ldr pc, [sp], #4)
   11050:	strd	r4, [sp, #-12]!
   11054:	str	lr, [sp, #8]
   11058:	sub	sp, sp, #16384	; 0x4000
   1105c:	sub	sp, sp, #4
   11060:	mov	r4, r0
   11064:	mov	r5, #16384	; 0x4000
   11068:	mov	r2, r5
   1106c:	mov	r1, sp
   11070:	mov	r0, r4
   11074:	bl	10d60 <rb_read@plt>
   11078:	cmp	r0, #0
   1107c:	bgt	11068 <rb_base64_encode@plt+0x1a0>
   11080:	beq	11098 <rb_base64_encode@plt+0x1d0>
   11084:	bl	10ebc <__errno_location@plt>
   11088:	ldr	r0, [r0]
   1108c:	bl	10ca0 <rb_ignore_errno@plt>
   11090:	cmp	r0, #0
   11094:	bne	110a0 <rb_base64_encode@plt+0x1d8>
   11098:	mov	r0, #0
   1109c:	bl	10eb0 <exit@plt>
   110a0:	mov	r3, #0
   110a4:	movw	r2, #4176	; 0x1050
   110a8:	movt	r2, #1
   110ac:	mov	r1, #1
   110b0:	mov	r0, r4
   110b4:	bl	10cb8 <rb_setselect@plt>
   110b8:	add	sp, sp, #16384	; 0x4000
   110bc:	add	sp, sp, #4
   110c0:	ldrd	r4, [sp]
   110c4:	add	sp, sp, #8
   110c8:	pop	{pc}		; (ldr pc, [sp], #4)
   110cc:	ldrb	r3, [r0, #128]	; 0x80
   110d0:	tst	r3, #2
   110d4:	bxne	lr
   110d8:	str	r4, [sp, #-8]!
   110dc:	str	lr, [sp, #4]
   110e0:	ldr	r0, [r0, #16]
   110e4:	bl	10e98 <rb_rawbuf_append@plt>
   110e8:	ldr	r4, [sp]
   110ec:	add	sp, sp, #4
   110f0:	pop	{pc}		; (ldr pc, [sp], #4)
   110f4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   110f8:	strd	r6, [sp, #8]
   110fc:	strd	r8, [sp, #16]
   11100:	str	sl, [sp, #24]
   11104:	str	lr, [sp, #28]
   11108:	sub	sp, sp, #8
   1110c:	mov	r7, r1
   11110:	ldr	r5, [r1, #36]	; 0x24
   11114:	cmp	r5, #0
   11118:	beq	1121c <rb_base64_encode@plt+0x354>
   1111c:	ldr	r6, [r5, #8]
   11120:	movw	r8, #20728	; 0x50f8
   11124:	movt	r8, #2
   11128:	mov	r9, #0
   1112c:	b	111c8 <rb_base64_encode@plt+0x300>
   11130:	ldr	r3, [r5, #8]
   11134:	cmp	r3, #0
   11138:	ldrne	r2, [r5, #4]
   1113c:	strne	r2, [r3, #4]
   11140:	ldreq	r3, [r5, #4]
   11144:	streq	r3, [r7, #40]	; 0x28
   11148:	ldr	r3, [r5, #4]
   1114c:	cmp	r3, #0
   11150:	ldrne	r2, [r5, #8]
   11154:	strne	r2, [r3, #8]
   11158:	ldreq	r3, [r5, #8]
   1115c:	streq	r3, [r7, #36]	; 0x24
   11160:	str	r9, [r5, #4]
   11164:	str	r9, [r5, #8]
   11168:	ldr	r3, [r7, #44]	; 0x2c
   1116c:	sub	r3, r3, #1
   11170:	str	r3, [r7, #44]	; 0x2c
   11174:	ldr	r3, [r4, #36]	; 0x24
   11178:	cmp	r3, #0
   1117c:	ble	111a0 <rb_base64_encode@plt+0x2d8>
   11180:	add	sl, r4, #20
   11184:	mov	r5, #0
   11188:	ldr	r0, [sl], #4
   1118c:	bl	10dc0 <rb_close@plt>
   11190:	add	r5, r5, #1
   11194:	ldr	r3, [r4, #36]	; 0x24
   11198:	cmp	r3, r5
   1119c:	bgt	11188 <rb_base64_encode@plt+0x2c0>
   111a0:	ldr	r0, [r4, #12]
   111a4:	cmp	r0, #0
   111a8:	beq	111b0 <rb_base64_encode@plt+0x2e8>
   111ac:	bl	10d48 <free@plt>
   111b0:	mov	r0, r4
   111b4:	bl	10d48 <free@plt>
   111b8:	cmp	r6, #0
   111bc:	beq	1121c <rb_base64_encode@plt+0x354>
   111c0:	mov	r5, r6
   111c4:	ldr	r6, [r6, #8]
   111c8:	ldr	r4, [r5]
   111cc:	ldr	r3, [r4, #12]
   111d0:	ldr	r2, [r4, #36]	; 0x24
   111d4:	ldr	r1, [r8, #12]
   111d8:	str	r1, [sp, #4]
   111dc:	ldr	r1, [r4, #16]
   111e0:	str	r1, [sp]
   111e4:	add	r1, r4, #20
   111e8:	ldr	r0, [r7, #16]
   111ec:	bl	10cd0 <rb_send_fd_buf@plt>
   111f0:	cmp	r0, #0
   111f4:	bgt	11130 <rb_base64_encode@plt+0x268>
   111f8:	cmp	r0, #0
   111fc:	beq	11214 <rb_base64_encode@plt+0x34c>
   11200:	bl	10ebc <__errno_location@plt>
   11204:	ldr	r0, [r0]
   11208:	bl	10ca0 <rb_ignore_errno@plt>
   1120c:	cmp	r0, #0
   11210:	bne	111b8 <rb_base64_encode@plt+0x2f0>
   11214:	mov	r0, #0
   11218:	bl	10eb0 <exit@plt>
   1121c:	ldr	r3, [r7, #44]	; 0x2c
   11220:	cmp	r3, #0
   11224:	bne	11244 <rb_base64_encode@plt+0x37c>
   11228:	add	sp, sp, #8
   1122c:	ldrd	r4, [sp]
   11230:	ldrd	r6, [sp, #8]
   11234:	ldrd	r8, [sp, #16]
   11238:	ldr	sl, [sp, #24]
   1123c:	add	sp, sp, #28
   11240:	pop	{pc}		; (ldr pc, [sp], #4)
   11244:	mov	r3, r7
   11248:	movw	r2, #4340	; 0x10f4
   1124c:	movt	r2, #1
   11250:	mov	r1, #2
   11254:	ldr	r0, [r7, #16]
   11258:	bl	10cb8 <rb_setselect@plt>
   1125c:	b	11228 <rb_base64_encode@plt+0x360>
   11260:	strd	r4, [sp, #-12]!
   11264:	str	lr, [sp, #8]
   11268:	sub	sp, sp, #16384	; 0x4000
   1126c:	sub	sp, sp, #4
   11270:	subs	r4, r1, #0
   11274:	beq	11310 <rb_base64_encode@plt+0x448>
   11278:	mov	r5, #16384	; 0x4000
   1127c:	mov	r2, r5
   11280:	mov	r1, sp
   11284:	ldr	r0, [r4, #88]	; 0x58
   11288:	bl	10d60 <rb_read@plt>
   1128c:	cmp	r0, #0
   11290:	beq	112c8 <rb_base64_encode@plt+0x400>
   11294:	bge	1127c <rb_base64_encode@plt+0x3b4>
   11298:	bl	10ebc <__errno_location@plt>
   1129c:	ldr	r0, [r0]
   112a0:	bl	10ca0 <rb_ignore_errno@plt>
   112a4:	cmp	r0, #0
   112a8:	beq	112c8 <rb_base64_encode@plt+0x400>
   112ac:	mov	r3, r4
   112b0:	movw	r2, #4704	; 0x1260
   112b4:	movt	r2, #1
   112b8:	mov	r1, #1
   112bc:	ldr	r0, [r4, #88]	; 0x58
   112c0:	bl	10cb8 <rb_setselect@plt>
   112c4:	b	11310 <rb_base64_encode@plt+0x448>
   112c8:	ldr	r0, [r4, #88]	; 0x58
   112cc:	bl	10dc0 <rb_close@plt>
   112d0:	str	r4, [r4]
   112d4:	mov	r3, #0
   112d8:	str	r3, [r4, #4]
   112dc:	movw	r3, #20728	; 0x50f8
   112e0:	movt	r3, #2
   112e4:	ldr	r3, [r3]
   112e8:	str	r3, [r4, #8]
   112ec:	cmp	r3, #0
   112f0:	strne	r4, [r3, #4]
   112f4:	beq	11324 <rb_base64_encode@plt+0x45c>
   112f8:	movw	r3, #20728	; 0x50f8
   112fc:	movt	r3, #2
   11300:	str	r4, [r3]
   11304:	ldr	r2, [r3, #8]
   11308:	add	r2, r2, #1
   1130c:	str	r2, [r3, #8]
   11310:	add	sp, sp, #16384	; 0x4000
   11314:	add	sp, sp, #4
   11318:	ldrd	r4, [sp]
   1131c:	add	sp, sp, #8
   11320:	pop	{pc}		; (ldr pc, [sp], #4)
   11324:	movw	r3, #20728	; 0x50f8
   11328:	movt	r3, #2
   1132c:	ldr	r3, [r3, #4]
   11330:	cmp	r3, #0
   11334:	bne	112f8 <rb_base64_encode@plt+0x430>
   11338:	movw	r3, #20728	; 0x50f8
   1133c:	movt	r3, #2
   11340:	str	r4, [r3, #4]
   11344:	b	112f8 <rb_base64_encode@plt+0x430>
   11348:	push	{r2, r3}
   1134c:	strd	r4, [sp, #-16]!
   11350:	str	r6, [sp, #8]
   11354:	str	lr, [sp, #12]
   11358:	sub	sp, sp, #392	; 0x188
   1135c:	ldrb	r3, [r0, #128]	; 0x80
   11360:	tst	r3, #2
   11364:	bne	1152c <rb_base64_encode@plt+0x664>
   11368:	mov	r5, r1
   1136c:	mov	r4, r0
   11370:	tst	r3, #8
   11374:	bne	11548 <rb_base64_encode@plt+0x680>
   11378:	ldr	r1, [r4, #84]	; 0x54
   1137c:	ldr	r0, [r4, #16]
   11380:	bl	10ea4 <rb_rawbuf_flush@plt>
   11384:	add	r1, r4, #24
   11388:	ldr	r0, [r4, #88]	; 0x58
   1138c:	bl	10d84 <rb_linebuf_flush@plt>
   11390:	ldr	r0, [r4, #84]	; 0x54
   11394:	bl	10dc0 <rb_close@plt>
   11398:	ldrb	r3, [r4, #128]	; 0x80
   1139c:	orr	r3, r3, #2
   113a0:	strb	r3, [r4, #128]	; 0x80
   113a4:	ldr	r2, [r4, #80]	; 0x50
   113a8:	movw	r3, #19923	; 0x4dd3
   113ac:	movt	r3, #4194	; 0x1062
   113b0:	umull	r1, r3, r3, r2
   113b4:	lsr	r3, r3, #7
   113b8:	mov	r1, #2000	; 0x7d0
   113bc:	mls	r3, r1, r3, r2
   113c0:	ldr	r2, [r4, #8]
   113c4:	cmp	r2, #0
   113c8:	ldr	r1, [r4, #4]
   113cc:	movweq	r2, #20748	; 0x510c
   113d0:	movteq	r2, #2
   113d4:	addeq	r0, r3, r3, lsl #1
   113d8:	addeq	r2, r2, r0, lsl #2
   113dc:	str	r1, [r2, #4]
   113e0:	ldr	r2, [r4, #4]
   113e4:	cmp	r2, #0
   113e8:	beq	11550 <rb_base64_encode@plt+0x688>
   113ec:	ldr	r1, [r4, #8]
   113f0:	str	r1, [r2, #8]
   113f4:	mov	r2, #0
   113f8:	str	r2, [r4, #4]
   113fc:	str	r2, [r4, #8]
   11400:	movw	r2, #20748	; 0x510c
   11404:	movt	r2, #2
   11408:	lsl	r0, r3, #1
   1140c:	add	r1, r0, r3
   11410:	add	r1, r2, r1, lsl #2
   11414:	ldr	r3, [r1, #8]
   11418:	sub	r3, r3, #1
   1141c:	str	r3, [r1, #8]
   11420:	ldr	r3, [sp, #408]	; 0x198
   11424:	cmp	r3, #0
   11428:	cmpne	r5, #0
   1142c:	beq	11568 <rb_base64_encode@plt+0x6a0>
   11430:	mov	r3, r4
   11434:	movw	r2, #4704	; 0x1260
   11438:	movt	r2, #1
   1143c:	mov	r1, #1
   11440:	ldr	r0, [r4, #88]	; 0x58
   11444:	bl	10cb8 <rb_setselect@plt>
   11448:	mov	r3, #0
   1144c:	mov	r2, r3
   11450:	mov	r1, #2
   11454:	ldr	r0, [r4, #88]	; 0x58
   11458:	bl	10cb8 <rb_setselect@plt>
   1145c:	add	r3, sp, #412	; 0x19c
   11460:	str	r3, [sp, #388]	; 0x184
   11464:	ldr	r2, [sp, #408]	; 0x198
   11468:	mov	r1, #128	; 0x80
   1146c:	add	r0, sp, #260	; 0x104
   11470:	bl	10cdc <vsnprintf@plt>
   11474:	mov	r3, #68	; 0x44
   11478:	strb	r3, [sp, #4]
   1147c:	ldr	r3, [r4, #80]	; 0x50
   11480:	str	r3, [sp, #5]
   11484:	mov	r2, #251	; 0xfb
   11488:	add	r1, sp, #260	; 0x104
   1148c:	add	r0, sp, #9
   11490:	bl	10d30 <rb_strlcpy@plt>
   11494:	add	r0, sp, #260	; 0x104
   11498:	bl	10d90 <strlen@plt>
   1149c:	add	r6, r0, #6
   114a0:	ldr	r5, [r4, #12]
   114a4:	mov	r1, #40	; 0x28
   114a8:	mov	r0, #1
   114ac:	bl	10cf4 <calloc@plt>
   114b0:	subs	r4, r0, #0
   114b4:	beq	115d8 <rb_base64_encode@plt+0x710>
   114b8:	mov	r1, r6
   114bc:	mov	r0, #1
   114c0:	bl	10cf4 <calloc@plt>
   114c4:	cmp	r0, #0
   114c8:	beq	115dc <rb_base64_encode@plt+0x714>
   114cc:	str	r0, [r4, #12]
   114d0:	str	r6, [r4, #16]
   114d4:	mov	r2, r6
   114d8:	add	r1, sp, #4
   114dc:	bl	10d9c <memcpy@plt>
   114e0:	mov	r3, #0
   114e4:	str	r3, [r4, #36]	; 0x24
   114e8:	cmn	r5, #36	; 0x24
   114ec:	beq	115e0 <rb_base64_encode@plt+0x718>
   114f0:	str	r4, [r4]
   114f4:	mov	r3, #0
   114f8:	str	r3, [r4, #8]
   114fc:	ldr	r3, [r5, #40]	; 0x28
   11500:	str	r3, [r4, #4]
   11504:	cmp	r3, #0
   11508:	strne	r4, [r3, #8]
   1150c:	beq	11600 <rb_base64_encode@plt+0x738>
   11510:	str	r4, [r5, #40]	; 0x28
   11514:	ldr	r3, [r5, #44]	; 0x2c
   11518:	add	r3, r3, #1
   1151c:	str	r3, [r5, #44]	; 0x2c
   11520:	mov	r1, r5
   11524:	ldr	r0, [r5, #16]
   11528:	bl	110f4 <rb_base64_encode@plt+0x22c>
   1152c:	add	sp, sp, #392	; 0x188
   11530:	ldrd	r4, [sp]
   11534:	ldr	r6, [sp, #8]
   11538:	ldr	lr, [sp, #12]
   1153c:	add	sp, sp, #16
   11540:	add	sp, sp, #8
   11544:	bx	lr
   11548:	bl	11740 <rb_base64_encode@plt+0x878>
   1154c:	b	11378 <rb_base64_encode@plt+0x4b0>
   11550:	ldr	r0, [r4, #8]
   11554:	movw	r2, #20748	; 0x510c
   11558:	movt	r2, #2
   1155c:	add	r1, r3, r3, lsl #1
   11560:	str	r0, [r2, r1, lsl #2]
   11564:	b	113f4 <rb_base64_encode@plt+0x52c>
   11568:	ldr	r0, [r4, #88]	; 0x58
   1156c:	bl	10dc0 <rb_close@plt>
   11570:	str	r4, [r4]
   11574:	mov	r3, #0
   11578:	str	r3, [r4, #4]
   1157c:	movw	r3, #20728	; 0x50f8
   11580:	movt	r3, #2
   11584:	ldr	r3, [r3]
   11588:	str	r3, [r4, #8]
   1158c:	cmp	r3, #0
   11590:	strne	r4, [r3, #4]
   11594:	beq	115b4 <rb_base64_encode@plt+0x6ec>
   11598:	movw	r3, #20728	; 0x50f8
   1159c:	movt	r3, #2
   115a0:	str	r4, [r3]
   115a4:	ldr	r2, [r3, #8]
   115a8:	add	r2, r2, #1
   115ac:	str	r2, [r3, #8]
   115b0:	b	1152c <rb_base64_encode@plt+0x664>
   115b4:	movw	r3, #20728	; 0x50f8
   115b8:	movt	r3, #2
   115bc:	ldr	r3, [r3, #4]
   115c0:	cmp	r3, #0
   115c4:	bne	11598 <rb_base64_encode@plt+0x6d0>
   115c8:	movw	r3, #20728	; 0x50f8
   115cc:	movt	r3, #2
   115d0:	str	r4, [r3, #4]
   115d4:	b	11598 <rb_base64_encode@plt+0x6d0>
   115d8:	bl	10e14 <rb_outofmemory@plt>
   115dc:	bl	10e14 <rb_outofmemory@plt>
   115e0:	movw	r3, #15584	; 0x3ce0
   115e4:	movt	r3, #1
   115e8:	mov	r2, #212	; 0xd4
   115ec:	movw	r1, #15600	; 0x3cf0
   115f0:	movt	r1, #1
   115f4:	movw	r0, #15628	; 0x3d0c
   115f8:	movt	r0, #1
   115fc:	bl	10d18 <__assert_fail@plt>
   11600:	ldr	r3, [r5, #36]	; 0x24
   11604:	cmp	r3, #0
   11608:	streq	r4, [r5, #36]	; 0x24
   1160c:	b	11510 <rb_base64_encode@plt+0x648>
   11610:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11614:	strd	r6, [sp, #8]
   11618:	str	r8, [sp, #16]
   1161c:	str	lr, [sp, #20]
   11620:	mov	r5, r0
   11624:	mov	r4, r1
   11628:	ldrb	r3, [r1, #128]	; 0x80
   1162c:	tst	r3, #2
   11630:	bne	1172c <rb_base64_encode@plt+0x864>
   11634:	mov	r1, r5
   11638:	ldr	r0, [r4, #16]
   1163c:	bl	10ea4 <rb_rawbuf_flush@plt>
   11640:	cmp	r0, #0
   11644:	ble	1165c <rb_base64_encode@plt+0x794>
   11648:	ldrd	r2, [r4, #96]	; 0x60
   1164c:	adds	r6, r2, r0
   11650:	adc	r7, r3, r0, asr #31
   11654:	strd	r6, [r4, #96]	; 0x60
   11658:	b	11634 <rb_base64_encode@plt+0x76c>
   1165c:	beq	116ec <rb_base64_encode@plt+0x824>
   11660:	bl	10ebc <__errno_location@plt>
   11664:	ldr	r0, [r0]
   11668:	bl	10ca0 <rb_ignore_errno@plt>
   1166c:	cmp	r0, #0
   11670:	beq	11708 <rb_base64_encode@plt+0x840>
   11674:	ldr	r0, [r4, #16]
   11678:	bl	10de4 <rb_rawbuf_length@plt>
   1167c:	cmp	r0, #0
   11680:	ble	116d4 <rb_base64_encode@plt+0x80c>
   11684:	mov	r3, r4
   11688:	movw	r2, #5648	; 0x1610
   1168c:	movt	r2, #1
   11690:	mov	r1, #2
   11694:	ldr	r0, [r4, #84]	; 0x54
   11698:	bl	10cb8 <rb_setselect@plt>
   1169c:	ldrb	r3, [r4, #128]	; 0x80
   116a0:	tst	r3, #1
   116a4:	beq	1172c <rb_base64_encode@plt+0x864>
   116a8:	ldr	r0, [r4, #16]
   116ac:	bl	10de4 <rb_rawbuf_length@plt>
   116b0:	cmp	r0, #0
   116b4:	bne	1172c <rb_base64_encode@plt+0x864>
   116b8:	ldrb	r3, [r4, #128]	; 0x80
   116bc:	bic	r3, r3, #1
   116c0:	strb	r3, [r4, #128]	; 0x80
   116c4:	mov	r1, r4
   116c8:	ldr	r0, [r4, #88]	; 0x58
   116cc:	bl	118f4 <rb_base64_encode@plt+0xa2c>
   116d0:	b	1172c <rb_base64_encode@plt+0x864>
   116d4:	mov	r3, #0
   116d8:	mov	r2, r3
   116dc:	mov	r1, #2
   116e0:	ldr	r0, [r4, #84]	; 0x54
   116e4:	bl	10cb8 <rb_setselect@plt>
   116e8:	b	1169c <rb_base64_encode@plt+0x7d4>
   116ec:	movw	r3, #15660	; 0x3d2c
   116f0:	movt	r3, #1
   116f4:	movw	r2, #15696	; 0x3d50
   116f8:	movt	r2, #1
   116fc:	mov	r1, #1
   11700:	mov	r0, r4
   11704:	bl	11348 <rb_base64_encode@plt+0x480>
   11708:	bl	10ebc <__errno_location@plt>
   1170c:	ldr	r0, [r0]
   11710:	bl	10c70 <strerror@plt>
   11714:	mov	r3, r0
   11718:	movw	r2, #15644	; 0x3d1c
   1171c:	movt	r2, #1
   11720:	mov	r1, #1
   11724:	mov	r0, r4
   11728:	bl	11348 <rb_base64_encode@plt+0x480>
   1172c:	ldrd	r4, [sp]
   11730:	ldrd	r6, [sp, #8]
   11734:	ldr	r8, [sp, #16]
   11738:	add	sp, sp, #20
   1173c:	pop	{pc}		; (ldr pc, [sp], #4)
   11740:	strd	r4, [sp, #-28]!	; 0xffffffe4
   11744:	strd	r6, [sp, #8]
   11748:	strd	r8, [sp, #16]
   1174c:	str	lr, [sp, #24]
   11750:	sub	sp, sp, #16384	; 0x4000
   11754:	sub	sp, sp, #20
   11758:	mov	r4, r0
   1175c:	mov	r2, #16384	; 0x4000
   11760:	mov	r1, #0
   11764:	add	r0, sp, #16
   11768:	bl	10d0c <memset@plt>
   1176c:	add	r9, sp, #12
   11770:	movw	r8, #15700	; 0x3d54
   11774:	movt	r8, #1
   11778:	b	117c8 <rb_base64_encode@plt+0x900>
   1177c:	mvn	r3, #126	; 0x7e
   11780:	strb	r3, [sp, #12]
   11784:	mov	r3, #126	; 0x7e
   11788:	strb	r3, [sp, #13]
   1178c:	add	r3, r5, #2
   11790:	rev16	r3, r3
   11794:	strh	r3, [sp, #14]
   11798:	mov	r2, #4
   1179c:	mov	r1, r9
   117a0:	mov	r0, r4
   117a4:	bl	110cc <rb_base64_encode@plt+0x204>
   117a8:	mov	r2, r5
   117ac:	add	r1, sp, #16
   117b0:	mov	r0, r4
   117b4:	bl	110cc <rb_base64_encode@plt+0x204>
   117b8:	mov	r2, #2
   117bc:	mov	r1, r8
   117c0:	mov	r0, r4
   117c4:	bl	110cc <rb_base64_encode@plt+0x204>
   117c8:	add	r7, r4, #52	; 0x34
   117cc:	mov	r6, #0
   117d0:	str	r6, [sp]
   117d4:	mov	r3, r6
   117d8:	mov	r2, #16384	; 0x4000
   117dc:	add	r1, sp, #16
   117e0:	mov	r0, r7
   117e4:	bl	10d78 <rb_linebuf_get@plt>
   117e8:	subs	r5, r0, #0
   117ec:	beq	1184c <rb_base64_encode@plt+0x984>
   117f0:	ldrb	r3, [r4, #128]	; 0x80
   117f4:	tst	r3, #2
   117f8:	bne	117d0 <rb_base64_encode@plt+0x908>
   117fc:	cmp	r5, #122	; 0x7a
   11800:	bgt	1177c <rb_base64_encode@plt+0x8b4>
   11804:	mvn	r3, #126	; 0x7e
   11808:	strb	r3, [sp, #12]
   1180c:	add	r3, r5, #2
   11810:	and	r3, r3, #127	; 0x7f
   11814:	strb	r3, [sp, #13]
   11818:	mov	r2, #2
   1181c:	mov	r1, r9
   11820:	mov	r0, r4
   11824:	bl	110cc <rb_base64_encode@plt+0x204>
   11828:	mov	r2, r5
   1182c:	add	r1, sp, #16
   11830:	mov	r0, r4
   11834:	bl	110cc <rb_base64_encode@plt+0x204>
   11838:	mov	r2, #2
   1183c:	mov	r1, r8
   11840:	mov	r0, r4
   11844:	bl	110cc <rb_base64_encode@plt+0x204>
   11848:	b	117c8 <rb_base64_encode@plt+0x900>
   1184c:	ldrb	r3, [r4, #128]	; 0x80
   11850:	tst	r3, #8
   11854:	bne	11874 <rb_base64_encode@plt+0x9ac>
   11858:	add	sp, sp, #16384	; 0x4000
   1185c:	add	sp, sp, #20
   11860:	ldrd	r4, [sp]
   11864:	ldrd	r6, [sp, #8]
   11868:	ldrd	r8, [sp, #16]
   1186c:	add	sp, sp, #24
   11870:	pop	{pc}		; (ldr pc, [sp], #4)
   11874:	mov	r1, r4
   11878:	ldr	r0, [r4, #84]	; 0x54
   1187c:	bl	11610 <rb_base64_encode@plt+0x748>
   11880:	b	11858 <rb_base64_encode@plt+0x990>
   11884:	str	r4, [sp, #-8]!
   11888:	str	lr, [sp, #4]
   1188c:	mov	r4, r0
   11890:	ldr	r0, [r0, #16]
   11894:	bl	10de4 <rb_rawbuf_length@plt>
   11898:	cmp	r0, #4096	; 0x1000
   1189c:	movlt	r0, #0
   118a0:	bge	118b0 <rb_base64_encode@plt+0x9e8>
   118a4:	ldr	r4, [sp]
   118a8:	add	sp, sp, #4
   118ac:	pop	{pc}		; (ldr pc, [sp], #4)
   118b0:	ldrb	r3, [r4, #128]	; 0x80
   118b4:	orr	r3, r3, #1
   118b8:	strb	r3, [r4, #128]	; 0x80
   118bc:	mov	r3, #0
   118c0:	mov	r2, r3
   118c4:	mov	r1, #1
   118c8:	ldr	r0, [r4, #88]	; 0x58
   118cc:	bl	10cb8 <rb_setselect@plt>
   118d0:	ldrb	r3, [r4, #128]	; 0x80
   118d4:	tst	r3, #8
   118d8:	moveq	r0, #1
   118dc:	beq	118a4 <rb_base64_encode@plt+0x9dc>
   118e0:	mov	r1, r4
   118e4:	ldr	r0, [r4, #84]	; 0x54
   118e8:	bl	11610 <rb_base64_encode@plt+0x748>
   118ec:	mov	r0, #1
   118f0:	b	118a4 <rb_base64_encode@plt+0x9dc>
   118f4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   118f8:	str	r6, [sp, #8]
   118fc:	strd	r8, [sp, #12]
   11900:	str	lr, [sp, #20]
   11904:	sub	sp, sp, #16384	; 0x4000
   11908:	mov	r4, r1
   1190c:	mov	r2, #16384	; 0x4000
   11910:	mov	r1, #0
   11914:	mov	r0, sp
   11918:	bl	10d0c <memset@plt>
   1191c:	cmp	r4, #0
   11920:	beq	11930 <rb_base64_encode@plt+0xa68>
   11924:	ldrb	r3, [r4, #128]	; 0x80
   11928:	tst	r3, #2
   1192c:	beq	11948 <rb_base64_encode@plt+0xa80>
   11930:	add	sp, sp, #16384	; 0x4000
   11934:	ldrd	r4, [sp]
   11938:	ldr	r6, [sp, #8]
   1193c:	ldrd	r8, [sp, #12]
   11940:	add	sp, sp, #20
   11944:	pop	{pc}		; (ldr pc, [sp], #4)
   11948:	mov	r0, r4
   1194c:	bl	11884 <rb_base64_encode@plt+0x9bc>
   11950:	cmp	r0, #0
   11954:	bne	11930 <rb_base64_encode@plt+0xa68>
   11958:	mov	r5, #16384	; 0x4000
   1195c:	add	r6, r4, #52	; 0x34
   11960:	b	119b4 <rb_base64_encode@plt+0xaec>
   11964:	mov	r2, #0
   11968:	mov	r1, r2
   1196c:	mov	r0, r4
   11970:	bl	11348 <rb_base64_encode@plt+0x480>
   11974:	b	11930 <rb_base64_encode@plt+0xa68>
   11978:	ldrd	r0, [r4, #112]	; 0x70
   1197c:	adds	r8, r0, r2
   11980:	adc	r9, r1, r2, asr #31
   11984:	strd	r8, [r4, #112]	; 0x70
   11988:	mov	r3, #0
   1198c:	mov	r1, sp
   11990:	mov	r0, r6
   11994:	bl	10d24 <rb_linebuf_parse@plt>
   11998:	ldrb	r3, [r4, #128]	; 0x80
   1199c:	tst	r3, #2
   119a0:	bne	11930 <rb_base64_encode@plt+0xa68>
   119a4:	mov	r0, r4
   119a8:	bl	11884 <rb_base64_encode@plt+0x9bc>
   119ac:	cmp	r0, #0
   119b0:	bne	11930 <rb_base64_encode@plt+0xa68>
   119b4:	ldrb	r3, [r4, #128]	; 0x80
   119b8:	tst	r3, #2
   119bc:	bne	11930 <rb_base64_encode@plt+0xa68>
   119c0:	mov	r2, r5
   119c4:	mov	r1, sp
   119c8:	ldr	r0, [r4, #88]	; 0x58
   119cc:	bl	10d60 <rb_read@plt>
   119d0:	subs	r2, r0, #0
   119d4:	beq	11964 <rb_base64_encode@plt+0xa9c>
   119d8:	bge	11978 <rb_base64_encode@plt+0xab0>
   119dc:	bl	10ebc <__errno_location@plt>
   119e0:	ldr	r0, [r0]
   119e4:	bl	10ca0 <rb_ignore_errno@plt>
   119e8:	cmp	r0, #0
   119ec:	beq	11964 <rb_base64_encode@plt+0xa9c>
   119f0:	mov	r3, r4
   119f4:	movw	r2, #6388	; 0x18f4
   119f8:	movt	r2, #1
   119fc:	mov	r1, #1
   11a00:	ldr	r0, [r4, #88]	; 0x58
   11a04:	bl	10cb8 <rb_setselect@plt>
   11a08:	ldrb	r3, [r4, #128]	; 0x80
   11a0c:	tst	r3, #8
   11a10:	beq	11930 <rb_base64_encode@plt+0xa68>
   11a14:	mov	r0, r4
   11a18:	bl	11740 <rb_base64_encode@plt+0x878>
   11a1c:	b	11930 <rb_base64_encode@plt+0xa68>
   11a20:	ldrb	r3, [r1, #128]	; 0x80
   11a24:	tst	r3, #2
   11a28:	bxne	lr
   11a2c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11a30:	str	r6, [sp, #8]
   11a34:	strd	r8, [sp, #12]
   11a38:	str	lr, [sp, #20]
   11a3c:	mov	r4, r1
   11a40:	mov	r5, r0
   11a44:	add	r6, r1, #24
   11a48:	mov	r1, r6
   11a4c:	mov	r0, r5
   11a50:	bl	10d84 <rb_linebuf_flush@plt>
   11a54:	cmp	r0, #0
   11a58:	ble	11a70 <rb_base64_encode@plt+0xba8>
   11a5c:	ldrd	r2, [r4, #120]	; 0x78
   11a60:	adds	r8, r2, r0
   11a64:	adc	r9, r3, r0, asr #31
   11a68:	strd	r8, [r4, #120]	; 0x78
   11a6c:	b	11a48 <rb_base64_encode@plt+0xb80>
   11a70:	beq	11ac0 <rb_base64_encode@plt+0xbf8>
   11a74:	bl	10ebc <__errno_location@plt>
   11a78:	ldr	r0, [r0]
   11a7c:	bl	10ca0 <rb_ignore_errno@plt>
   11a80:	cmp	r0, #0
   11a84:	beq	11ac0 <rb_base64_encode@plt+0xbf8>
   11a88:	ldr	r3, [r4, #40]	; 0x28
   11a8c:	cmp	r3, #0
   11a90:	ble	11ad4 <rb_base64_encode@plt+0xc0c>
   11a94:	mov	r3, r4
   11a98:	movw	r2, #6688	; 0x1a20
   11a9c:	movt	r2, #1
   11aa0:	mov	r1, #2
   11aa4:	ldr	r0, [r4, #88]	; 0x58
   11aa8:	bl	10cb8 <rb_setselect@plt>
   11aac:	ldrd	r4, [sp]
   11ab0:	ldr	r6, [sp, #8]
   11ab4:	ldrd	r8, [sp, #12]
   11ab8:	add	sp, sp, #20
   11abc:	pop	{pc}		; (ldr pc, [sp], #4)
   11ac0:	mov	r2, #0
   11ac4:	mov	r1, r2
   11ac8:	mov	r0, r4
   11acc:	bl	11348 <rb_base64_encode@plt+0x480>
   11ad0:	b	11aac <rb_base64_encode@plt+0xbe4>
   11ad4:	mov	r3, #0
   11ad8:	mov	r2, r3
   11adc:	mov	r1, #2
   11ae0:	ldr	r0, [r4, #88]	; 0x58
   11ae4:	bl	10cb8 <rb_setselect@plt>
   11ae8:	b	11aac <rb_base64_encode@plt+0xbe4>
   11aec:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11af0:	strd	r6, [sp, #8]
   11af4:	strd	r8, [sp, #16]
   11af8:	strd	sl, [sp, #24]
   11afc:	str	lr, [sp, #32]
   11b00:	sub	sp, sp, #32768	; 0x8000
   11b04:	sub	sp, sp, #132	; 0x84
   11b08:	mov	sl, r0
   11b0c:	mov	r4, r1
   11b10:	mov	r2, #16384	; 0x4000
   11b14:	mov	r1, #0
   11b18:	add	r0, sp, #16384	; 0x4000
   11b1c:	add	r0, r0, #128	; 0x80
   11b20:	bl	10d0c <memset@plt>
   11b24:	cmp	r4, #0
   11b28:	beq	11bbc <rb_base64_encode@plt+0xcf4>
   11b2c:	ldrb	r3, [r4, #128]	; 0x80
   11b30:	tst	r3, #2
   11b34:	bne	11bbc <rb_base64_encode@plt+0xcf4>
   11b38:	movw	r8, #16016	; 0x3e90
   11b3c:	movt	r8, #1
   11b40:	movw	fp, #15972	; 0x3e64
   11b44:	movt	fp, #1
   11b48:	movw	r9, #15724	; 0x3d6c
   11b4c:	movt	r9, #1
   11b50:	b	11c10 <rb_base64_encode@plt+0xd48>
   11b54:	bl	10ebc <__errno_location@plt>
   11b58:	ldr	r0, [r0]
   11b5c:	bl	10ca0 <rb_ignore_errno@plt>
   11b60:	cmp	r0, #0
   11b64:	beq	11b90 <rb_base64_encode@plt+0xcc8>
   11b68:	mov	r3, r4
   11b6c:	movw	r2, #6892	; 0x1aec
   11b70:	movt	r2, #1
   11b74:	mov	r1, #1
   11b78:	mov	r0, sl
   11b7c:	bl	10cb8 <rb_setselect@plt>
   11b80:	mov	r1, r4
   11b84:	ldr	r0, [r4, #88]	; 0x58
   11b88:	bl	11a20 <rb_base64_encode@plt+0xb58>
   11b8c:	b	11bbc <rb_base64_encode@plt+0xcf4>
   11b90:	movw	r2, #15704	; 0x3d58
   11b94:	movt	r2, #1
   11b98:	mov	r1, #0
   11b9c:	mov	r0, r4
   11ba0:	bl	11348 <rb_base64_encode@plt+0x480>
   11ba4:	b	11bbc <rb_base64_encode@plt+0xcf4>
   11ba8:	movw	r2, #15704	; 0x3d58
   11bac:	movt	r2, #1
   11bb0:	mov	r1, #0
   11bb4:	mov	r0, r4
   11bb8:	bl	11348 <rb_base64_encode@plt+0x480>
   11bbc:	add	sp, sp, #32768	; 0x8000
   11bc0:	add	sp, sp, #132	; 0x84
   11bc4:	ldrd	r4, [sp]
   11bc8:	ldrd	r6, [sp, #8]
   11bcc:	ldrd	r8, [sp, #16]
   11bd0:	ldrd	sl, [sp, #24]
   11bd4:	add	sp, sp, #32
   11bd8:	pop	{pc}		; (ldr pc, [sp], #4)
   11bdc:	mov	ip, r1
   11be0:	b	11d38 <rb_base64_encode@plt+0xe70>
   11be4:	ldrb	r3, [r4, #128]	; 0x80
   11be8:	tst	r3, #8
   11bec:	bne	11d5c <rb_base64_encode@plt+0xe94>
   11bf0:	mov	r1, r4
   11bf4:	ldr	r0, [r4, #84]	; 0x54
   11bf8:	bl	11610 <rb_base64_encode@plt+0x748>
   11bfc:	cmp	r5, #16384	; 0x4000
   11c00:	bcc	11f30 <rb_base64_encode@plt+0x1068>
   11c04:	ldrb	r3, [r4, #128]	; 0x80
   11c08:	tst	r3, #2
   11c0c:	bne	11bbc <rb_base64_encode@plt+0xcf4>
   11c10:	mov	r2, #16384	; 0x4000
   11c14:	add	r1, sp, #16384	; 0x4000
   11c18:	add	r1, r1, #128	; 0x80
   11c1c:	mov	r0, sl
   11c20:	bl	10d60 <rb_read@plt>
   11c24:	subs	r5, r0, #0
   11c28:	blt	11b54 <rb_base64_encode@plt+0xc8c>
   11c2c:	cmp	r5, #0
   11c30:	beq	11ba8 <rb_base64_encode@plt+0xce0>
   11c34:	mov	r2, r5
   11c38:	add	r1, sp, #16384	; 0x4000
   11c3c:	add	r1, r1, #128	; 0x80
   11c40:	ldr	r0, [r4, #20]
   11c44:	bl	10e98 <rb_rawbuf_append@plt>
   11c48:	ldrb	r3, [r4, #128]	; 0x80
   11c4c:	tst	r3, #8
   11c50:	bne	11f70 <rb_base64_encode@plt+0x10a8>
   11c54:	mov	r2, #16384	; 0x4000
   11c58:	mov	r1, #0
   11c5c:	add	r0, sp, #128	; 0x80
   11c60:	bl	10d0c <memset@plt>
   11c64:	mov	r6, #16384	; 0x4000
   11c68:	mov	r2, r6
   11c6c:	add	r1, sp, #128	; 0x80
   11c70:	ldr	r0, [r4, #20]
   11c74:	bl	10e20 <rb_rawbuf_get@plt>
   11c78:	cmp	r0, #0
   11c7c:	beq	11be4 <rb_base64_encode@plt+0xd1c>
   11c80:	mov	r1, r9
   11c84:	add	r0, sp, #128	; 0x80
   11c88:	bl	10db4 <rb_strcasestr@plt>
   11c8c:	cmp	r0, #0
   11c90:	beq	11c68 <rb_base64_encode@plt+0xda0>
   11c94:	add	r1, r0, #18
   11c98:	add	r3, sp, #16384	; 0x4000
   11c9c:	add	r3, r3, #128	; 0x80
   11ca0:	cmp	r1, r3
   11ca4:	bcs	11d40 <rb_base64_encode@plt+0xe78>
   11ca8:	ldrb	r3, [r0, #18]
   11cac:	cmp	r3, #0
   11cb0:	beq	11cf0 <rb_base64_encode@plt+0xe28>
   11cb4:	cmp	r3, #32
   11cb8:	cmpne	r3, #9
   11cbc:	bne	11cf0 <rb_base64_encode@plt+0xe28>
   11cc0:	add	r0, r0, #19
   11cc4:	add	r2, sp, #16384	; 0x4000
   11cc8:	add	r2, r2, #128	; 0x80
   11ccc:	mov	r1, r0
   11cd0:	cmp	r2, r0
   11cd4:	beq	11d40 <rb_base64_encode@plt+0xe78>
   11cd8:	ldrb	r3, [r0], #1
   11cdc:	cmp	r3, #0
   11ce0:	beq	11cf0 <rb_base64_encode@plt+0xe28>
   11ce4:	cmp	r3, #32
   11ce8:	cmpne	r3, #9
   11cec:	beq	11ccc <rb_base64_encode@plt+0xe04>
   11cf0:	ldrb	r3, [r1]
   11cf4:	cmp	r3, #0
   11cf8:	beq	11d40 <rb_base64_encode@plt+0xe78>
   11cfc:	cmp	r3, #10
   11d00:	cmpne	r3, #13
   11d04:	addne	r3, r1, #1
   11d08:	addne	r0, sp, #16384	; 0x4000
   11d0c:	addne	r0, r0, #128	; 0x80
   11d10:	beq	11bdc <rb_base64_encode@plt+0xd14>
   11d14:	mov	ip, r3
   11d18:	cmp	r3, r0
   11d1c:	bcs	11d40 <rb_base64_encode@plt+0xe78>
   11d20:	ldrb	r2, [r3], #1
   11d24:	cmp	r2, #0
   11d28:	beq	11d40 <rb_base64_encode@plt+0xe78>
   11d2c:	cmp	r2, #10
   11d30:	cmpne	r2, #13
   11d34:	bne	11d14 <rb_base64_encode@plt+0xe4c>
   11d38:	mov	r3, #0
   11d3c:	strb	r3, [ip]
   11d40:	mov	r2, #37	; 0x25
   11d44:	add	r0, r4, #129	; 0x81
   11d48:	bl	10d30 <rb_strlcpy@plt>
   11d4c:	ldrb	r3, [r4, #128]	; 0x80
   11d50:	orr	r3, r3, #8
   11d54:	strb	r3, [r4, #128]	; 0x80
   11d58:	b	11c64 <rb_base64_encode@plt+0xd9c>
   11d5c:	add	r0, sp, #32
   11d60:	bl	13a24 <rb_base64_encode@plt+0x2b5c>
   11d64:	add	r6, r4, #129	; 0x81
   11d68:	mov	r0, r6
   11d6c:	bl	10d90 <strlen@plt>
   11d70:	mov	r2, r0
   11d74:	mov	r1, r6
   11d78:	add	r0, sp, #32
   11d7c:	bl	13a70 <rb_base64_encode@plt+0x2ba8>
   11d80:	mov	r2, #36	; 0x24
   11d84:	movw	r1, #15744	; 0x3d80
   11d88:	movt	r1, #1
   11d8c:	add	r0, sp, #32
   11d90:	bl	13a70 <rb_base64_encode@plt+0x2ba8>
   11d94:	add	r3, sp, #12
   11d98:	str	r3, [sp, #4]
   11d9c:	mov	r1, r3
   11da0:	add	r0, sp, #32
   11da4:	bl	13b48 <rb_base64_encode@plt+0x2c80>
   11da8:	mov	r1, #20
   11dac:	ldr	r0, [sp, #4]
   11db0:	bl	10ec8 <rb_base64_encode@plt>
   11db4:	mov	r6, r0
   11db8:	mov	r2, #129	; 0x81
   11dbc:	movw	r1, #15784	; 0x3da8
   11dc0:	movt	r1, #1
   11dc4:	mov	r0, r4
   11dc8:	bl	110cc <rb_base64_encode@plt+0x204>
   11dcc:	mov	r0, r6
   11dd0:	bl	10d90 <strlen@plt>
   11dd4:	mov	r2, r0
   11dd8:	mov	r1, r6
   11ddc:	mov	r0, r4
   11de0:	bl	110cc <rb_base64_encode@plt+0x204>
   11de4:	mov	r2, #4
   11de8:	movw	r1, #15916	; 0x3e2c
   11dec:	movt	r1, #1
   11df0:	mov	r0, r4
   11df4:	bl	110cc <rb_base64_encode@plt+0x204>
   11df8:	mov	r0, r6
   11dfc:	bl	10d48 <free@plt>
   11e00:	b	11bf0 <rb_base64_encode@plt+0xd28>
   11e04:	mov	r2, #16384	; 0x4000
   11e08:	mov	r1, #0
   11e0c:	add	r0, sp, #128	; 0x80
   11e10:	bl	10d0c <memset@plt>
   11e14:	mov	r2, #2
   11e18:	add	r1, sp, #12
   11e1c:	ldr	r0, [r4, #20]
   11e20:	bl	10e20 <rb_rawbuf_get@plt>
   11e24:	cmp	r0, #0
   11e28:	beq	11eb8 <rb_base64_encode@plt+0xff0>
   11e2c:	ldrh	r3, [sp, #12]
   11e30:	rev16	r3, r3
   11e34:	uxth	r2, r3
   11e38:	strh	r3, [sp, #12]
   11e3c:	cmp	r6, #1
   11e40:	bne	12028 <rb_base64_encode@plt+0x1160>
   11e44:	mov	r2, #4
   11e48:	add	r1, sp, #32
   11e4c:	ldr	r0, [r4, #20]
   11e50:	bl	10e20 <rb_rawbuf_get@plt>
   11e54:	cmp	r0, #0
   11e58:	beq	11ed0 <rb_base64_encode@plt+0x1008>
   11e5c:	ldrh	r2, [sp, #12]
   11e60:	add	r1, sp, #128	; 0x80
   11e64:	ldr	r0, [r4, #20]
   11e68:	bl	10e20 <rb_rawbuf_get@plt>
   11e6c:	subs	r2, r0, #0
   11e70:	beq	11ee4 <rb_base64_encode@plt+0x101c>
   11e74:	cmp	r2, #0
   11e78:	ble	1203c <rb_base64_encode@plt+0x1174>
   11e7c:	add	lr, sp, #128	; 0x80
   11e80:	mov	r3, #0
   11e84:	sub	r6, lr, #96	; 0x60
   11e88:	ldrb	r1, [lr]
   11e8c:	rsbs	ip, r3, #0
   11e90:	and	r0, r3, #3
   11e94:	and	ip, ip, #3
   11e98:	rsbpl	r0, ip, #0
   11e9c:	ldrb	r0, [r6, r0]
   11ea0:	eor	r1, r1, r0
   11ea4:	strb	r1, [lr], #1
   11ea8:	add	r3, r3, #1
   11eac:	cmp	r3, r2
   11eb0:	bne	11e88 <rb_base64_encode@plt+0xfc0>
   11eb4:	b	1203c <rb_base64_encode@plt+0x1174>
   11eb8:	movw	r2, #15924	; 0x3e34
   11ebc:	movt	r2, #1
   11ec0:	mov	r1, #1
   11ec4:	mov	r0, r4
   11ec8:	bl	11348 <rb_base64_encode@plt+0x480>
   11ecc:	b	11f70 <rb_base64_encode@plt+0x10a8>
   11ed0:	mov	r2, fp
   11ed4:	mov	r1, #1
   11ed8:	mov	r0, r4
   11edc:	bl	11348 <rb_base64_encode@plt+0x480>
   11ee0:	b	11f70 <rb_base64_encode@plt+0x10a8>
   11ee4:	mov	r2, r8
   11ee8:	mov	r1, #1
   11eec:	mov	r0, r4
   11ef0:	bl	11348 <rb_base64_encode@plt+0x480>
   11ef4:	b	11f70 <rb_base64_encode@plt+0x10a8>
   11ef8:	mov	r2, fp
   11efc:	mov	r1, #1
   11f00:	mov	r0, r4
   11f04:	bl	11348 <rb_base64_encode@plt+0x480>
   11f08:	b	11f70 <rb_base64_encode@plt+0x10a8>
   11f0c:	mov	r2, r8
   11f10:	mov	r1, #1
   11f14:	mov	r0, r4
   11f18:	bl	11348 <rb_base64_encode@plt+0x480>
   11f1c:	b	11f70 <rb_base64_encode@plt+0x10a8>
   11f20:	mov	r1, r4
   11f24:	ldr	r0, [r4, #88]	; 0x58
   11f28:	bl	11a20 <rb_base64_encode@plt+0xb58>
   11f2c:	b	11bfc <rb_base64_encode@plt+0xd34>
   11f30:	mov	r3, r4
   11f34:	movw	r2, #6892	; 0x1aec
   11f38:	movt	r2, #1
   11f3c:	mov	r1, #1
   11f40:	mov	r0, sl
   11f44:	bl	10cb8 <rb_setselect@plt>
   11f48:	b	11bbc <rb_base64_encode@plt+0xcf4>
   11f4c:	add	r1, sp, #128	; 0x80
   11f50:	ldr	r0, [r4, #20]
   11f54:	bl	10e20 <rb_rawbuf_get@plt>
   11f58:	subs	r2, r0, #0
   11f5c:	beq	11f0c <rb_base64_encode@plt+0x1044>
   11f60:	mov	r3, #1
   11f64:	add	r1, sp, #128	; 0x80
   11f68:	add	r0, r4, #24
   11f6c:	bl	10d24 <rb_linebuf_parse@plt>
   11f70:	mov	r7, #2
   11f74:	mov	r2, r7
   11f78:	add	r1, sp, #8
   11f7c:	ldr	r0, [r4, #20]
   11f80:	bl	10e20 <rb_rawbuf_get@plt>
   11f84:	cmp	r0, #2
   11f88:	bne	11f20 <rb_base64_encode@plt+0x1058>
   11f8c:	ldrb	r2, [sp, #9]
   11f90:	lsr	r6, r2, #7
   11f94:	and	r2, r2, #127	; 0x7f
   11f98:	strb	r2, [sp, #9]
   11f9c:	cmp	r2, #126	; 0x7e
   11fa0:	beq	11e04 <rb_base64_encode@plt+0xf3c>
   11fa4:	cmp	r2, #127	; 0x7f
   11fa8:	beq	11f74 <rb_base64_encode@plt+0x10ac>
   11fac:	cmp	r6, #1
   11fb0:	bne	11f4c <rb_base64_encode@plt+0x1084>
   11fb4:	mov	r2, #4
   11fb8:	add	r1, sp, #32
   11fbc:	ldr	r0, [r4, #20]
   11fc0:	bl	10e20 <rb_rawbuf_get@plt>
   11fc4:	cmp	r0, #0
   11fc8:	beq	11ef8 <rb_base64_encode@plt+0x1030>
   11fcc:	ldrb	r2, [sp, #9]
   11fd0:	add	r1, sp, #128	; 0x80
   11fd4:	ldr	r0, [r4, #20]
   11fd8:	bl	10e20 <rb_rawbuf_get@plt>
   11fdc:	subs	r2, r0, #0
   11fe0:	beq	11f0c <rb_base64_encode@plt+0x1044>
   11fe4:	cmp	r2, #0
   11fe8:	ble	11f60 <rb_base64_encode@plt+0x1098>
   11fec:	add	lr, sp, #128	; 0x80
   11ff0:	mov	r3, #0
   11ff4:	sub	r6, lr, #96	; 0x60
   11ff8:	ldrb	r1, [lr]
   11ffc:	rsbs	ip, r3, #0
   12000:	and	r0, r3, #3
   12004:	and	ip, ip, #3
   12008:	rsbpl	r0, ip, #0
   1200c:	ldrb	r0, [r6, r0]
   12010:	eor	r1, r1, r0
   12014:	strb	r1, [lr], #1
   12018:	add	r3, r3, #1
   1201c:	cmp	r3, r2
   12020:	bne	11ff8 <rb_base64_encode@plt+0x1130>
   12024:	b	11f60 <rb_base64_encode@plt+0x1098>
   12028:	add	r1, sp, #128	; 0x80
   1202c:	ldr	r0, [r4, #20]
   12030:	bl	10e20 <rb_rawbuf_get@plt>
   12034:	subs	r2, r0, #0
   12038:	beq	11ee4 <rb_base64_encode@plt+0x101c>
   1203c:	mov	r3, #1
   12040:	add	r1, sp, #128	; 0x80
   12044:	add	r0, r4, #24
   12048:	bl	10d24 <rb_linebuf_parse@plt>
   1204c:	b	11f70 <rb_base64_encode@plt+0x10a8>
   12050:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12054:	strd	r6, [sp, #8]
   12058:	strd	r8, [sp, #16]
   1205c:	strd	sl, [sp, #24]
   12060:	str	lr, [sp, #32]
   12064:	sub	sp, sp, #20
   12068:	mov	r5, r1
   1206c:	mov	r9, #40	; 0x28
   12070:	mov	r7, #1
   12074:	mov	r6, #16384	; 0x4000
   12078:	mov	r1, r9
   1207c:	mov	r0, r7
   12080:	bl	10cf4 <calloc@plt>
   12084:	subs	r4, r0, #0
   12088:	beq	12104 <rb_base64_encode@plt+0x123c>
   1208c:	mov	r1, r6
   12090:	mov	r0, r7
   12094:	bl	10cf4 <calloc@plt>
   12098:	subs	r1, r0, #0
   1209c:	beq	12108 <rb_base64_encode@plt+0x1240>
   120a0:	str	r1, [r4, #12]
   120a4:	str	r6, [r4, #16]
   120a8:	mov	r3, #4
   120ac:	str	r3, [sp]
   120b0:	add	r3, r4, #20
   120b4:	mov	r2, r6
   120b8:	ldr	r0, [r5, #16]
   120bc:	bl	10e5c <rb_recv_fd_buf@plt>
   120c0:	subs	r8, r0, #0
   120c4:	bgt	1210c <rb_base64_encode@plt+0x1244>
   120c8:	ldr	r0, [r4, #12]
   120cc:	cmp	r0, #0
   120d0:	beq	120d8 <rb_base64_encode@plt+0x1210>
   120d4:	bl	10d48 <free@plt>
   120d8:	mov	r0, r4
   120dc:	bl	10d48 <free@plt>
   120e0:	cmp	r8, #0
   120e4:	beq	120fc <rb_base64_encode@plt+0x1234>
   120e8:	bl	10ebc <__errno_location@plt>
   120ec:	ldr	r0, [r0]
   120f0:	bl	10ca0 <rb_ignore_errno@plt>
   120f4:	cmp	r0, #0
   120f8:	bne	121a4 <rb_base64_encode@plt+0x12dc>
   120fc:	mov	r0, #0
   12100:	bl	10eb0 <exit@plt>
   12104:	bl	10e14 <rb_outofmemory@plt>
   12108:	bl	10e14 <rb_outofmemory@plt>
   1210c:	str	r8, [r4, #16]
   12110:	str	r4, [r4]
   12114:	mov	r3, #0
   12118:	str	r3, [r4, #8]
   1211c:	ldr	r3, [r5, #28]
   12120:	str	r3, [r4, #4]
   12124:	cmp	r3, #0
   12128:	strne	r4, [r3, #8]
   1212c:	beq	1217c <rb_base64_encode@plt+0x12b4>
   12130:	str	r4, [r5, #28]
   12134:	ldr	r3, [r5, #32]
   12138:	add	r3, r3, #1
   1213c:	str	r3, [r5, #32]
   12140:	ldr	r3, [r4, #20]
   12144:	cmp	r3, #0
   12148:	beq	1218c <rb_base64_encode@plt+0x12c4>
   1214c:	ldr	r3, [r4, #24]
   12150:	cmp	r3, #0
   12154:	beq	12194 <rb_base64_encode@plt+0x12cc>
   12158:	ldr	r3, [r4, #28]
   1215c:	cmp	r3, #0
   12160:	beq	1219c <rb_base64_encode@plt+0x12d4>
   12164:	ldr	r3, [r4, #32]
   12168:	cmp	r3, #0
   1216c:	movne	r3, #4
   12170:	moveq	r3, #3
   12174:	str	r3, [r4, #36]	; 0x24
   12178:	b	12078 <rb_base64_encode@plt+0x11b0>
   1217c:	ldr	r3, [r5, #24]
   12180:	cmp	r3, #0
   12184:	streq	r4, [r5, #24]
   12188:	b	12130 <rb_base64_encode@plt+0x1268>
   1218c:	mov	r3, #0
   12190:	b	12174 <rb_base64_encode@plt+0x12ac>
   12194:	mov	r3, r7
   12198:	b	12174 <rb_base64_encode@plt+0x12ac>
   1219c:	mov	r3, #2
   121a0:	b	12174 <rb_base64_encode@plt+0x12ac>
   121a4:	ldr	r4, [r5, #24]
   121a8:	cmp	r4, #0
   121ac:	beq	123e0 <rb_base64_encode@plt+0x1518>
   121b0:	ldr	r7, [r4, #8]
   121b4:	movw	sl, #19923	; 0x4dd3
   121b8:	movt	sl, #4194	; 0x1062
   121bc:	movw	r9, #20748	; 0x510c
   121c0:	movt	r9, #2
   121c4:	b	12260 <rb_base64_encode@plt+0x1398>
   121c8:	cmp	r3, #0
   121cc:	ble	121f0 <rb_base64_encode@plt+0x1328>
   121d0:	add	fp, r6, #20
   121d4:	mov	r8, #0
   121d8:	ldr	r0, [fp], #4
   121dc:	bl	10dc0 <rb_close@plt>
   121e0:	add	r8, r8, #1
   121e4:	ldr	r3, [r6, #36]	; 0x24
   121e8:	cmp	r8, r3
   121ec:	blt	121d8 <rb_base64_encode@plt+0x1310>
   121f0:	ldr	r3, [r4, #8]
   121f4:	cmp	r3, #0
   121f8:	ldrne	r2, [r4, #4]
   121fc:	strne	r2, [r3, #4]
   12200:	ldreq	r3, [r4, #4]
   12204:	streq	r3, [r5, #28]
   12208:	ldr	r3, [r4, #4]
   1220c:	cmp	r3, #0
   12210:	ldrne	r2, [r4, #8]
   12214:	strne	r2, [r3, #8]
   12218:	ldreq	r3, [r4, #8]
   1221c:	streq	r3, [r5, #24]
   12220:	mov	r3, #0
   12224:	str	r3, [r4, #4]
   12228:	str	r3, [r4, #8]
   1222c:	ldr	r3, [r5, #32]
   12230:	sub	r3, r3, #1
   12234:	str	r3, [r5, #32]
   12238:	ldr	r0, [r6, #12]
   1223c:	cmp	r0, #0
   12240:	beq	12248 <rb_base64_encode@plt+0x1380>
   12244:	bl	10d48 <free@plt>
   12248:	mov	r0, r6
   1224c:	bl	10d48 <free@plt>
   12250:	cmp	r7, #0
   12254:	beq	123e0 <rb_base64_encode@plt+0x1518>
   12258:	mov	r4, r7
   1225c:	ldr	r7, [r7, #8]
   12260:	ldr	r6, [r4]
   12264:	ldr	r3, [r6, #12]
   12268:	ldrb	r3, [r3]
   1226c:	cmp	r3, #65	; 0x41
   12270:	bne	121f0 <rb_base64_encode@plt+0x1328>
   12274:	ldr	r3, [r6, #36]	; 0x24
   12278:	cmp	r3, #2
   1227c:	bne	121c8 <rb_base64_encode@plt+0x1300>
   12280:	ldr	r3, [r6, #16]
   12284:	cmp	r3, #5
   12288:	bne	121d0 <rb_base64_encode@plt+0x1308>
   1228c:	ldr	fp, [r6, #20]
   12290:	ldr	r3, [r6, #24]
   12294:	str	r3, [sp, #12]
   12298:	mov	r1, #168	; 0xa8
   1229c:	mov	r0, #1
   122a0:	bl	10cf4 <calloc@plt>
   122a4:	subs	r8, r0, #0
   122a8:	beq	12398 <rb_base64_encode@plt+0x14d0>
   122ac:	str	r5, [r8, #12]
   122b0:	str	fp, [r8, #84]	; 0x54
   122b4:	ldr	r3, [sp, #12]
   122b8:	str	r3, [r8, #88]	; 0x58
   122bc:	mvn	r3, #0
   122c0:	str	r3, [r8, #80]	; 0x50
   122c4:	mov	r0, fp
   122c8:	bl	10d00 <rb_set_nb@plt>
   122cc:	ldr	r0, [sp, #12]
   122d0:	bl	10d00 <rb_set_nb@plt>
   122d4:	add	r0, r8, #52	; 0x34
   122d8:	bl	10e74 <rb_linebuf_newbuf@plt>
   122dc:	add	r0, r8, #24
   122e0:	bl	10e74 <rb_linebuf_newbuf@plt>
   122e4:	bl	10e44 <rb_new_rawbuffer@plt>
   122e8:	str	r0, [r8, #20]
   122ec:	bl	10e44 <rb_new_rawbuffer@plt>
   122f0:	str	r0, [r8, #16]
   122f4:	ldr	r3, [r6, #12]
   122f8:	ldr	r2, [r3, #1]
   122fc:	str	r2, [r8, #80]	; 0x50
   12300:	umull	r1, r3, sl, r2
   12304:	lsr	r3, r3, #7
   12308:	mov	r1, #2000	; 0x7d0
   1230c:	mls	r3, r1, r3, r2
   12310:	str	r8, [r8]
   12314:	mov	r2, #0
   12318:	str	r2, [r8, #4]
   1231c:	add	r2, r3, r3, lsl #1
   12320:	ldr	r2, [r9, r2, lsl #2]
   12324:	str	r2, [r8, #8]
   12328:	cmp	r2, #0
   1232c:	strne	r8, [r2, #4]
   12330:	beq	1239c <rb_base64_encode@plt+0x14d4>
   12334:	lsl	r2, r3, #1
   12338:	add	r0, r2, r3
   1233c:	add	r1, r9, r0, lsl #2
   12340:	str	r8, [r9, r0, lsl #2]
   12344:	ldr	r3, [r1, #8]
   12348:	add	r3, r3, #1
   1234c:	str	r3, [r1, #8]
   12350:	ldrb	r3, [r8, #128]	; 0x80
   12354:	orr	r3, r3, #4
   12358:	strb	r3, [r8, #128]	; 0x80
   1235c:	ldr	r0, [r8, #84]	; 0x54
   12360:	bl	10c7c <rb_get_type@plt>
   12364:	tst	r0, #64	; 0x40
   12368:	bne	123c0 <rb_base64_encode@plt+0x14f8>
   1236c:	ldr	r0, [r8, #88]	; 0x58
   12370:	bl	10c7c <rb_get_type@plt>
   12374:	cmp	r0, #64	; 0x40
   12378:	beq	123d0 <rb_base64_encode@plt+0x1508>
   1237c:	mov	r1, r8
   12380:	ldr	r0, [r8, #84]	; 0x54
   12384:	bl	11aec <rb_base64_encode@plt+0xc24>
   12388:	mov	r1, r8
   1238c:	ldr	r0, [r8, #88]	; 0x58
   12390:	bl	118f4 <rb_base64_encode@plt+0xa2c>
   12394:	b	121f0 <rb_base64_encode@plt+0x1328>
   12398:	bl	10e14 <rb_outofmemory@plt>
   1239c:	add	r2, r3, r3, lsl #1
   123a0:	add	r2, r9, r2, lsl #2
   123a4:	ldr	r2, [r2, #4]
   123a8:	cmp	r2, #0
   123ac:	bne	12334 <rb_base64_encode@plt+0x146c>
   123b0:	add	r2, r3, r3, lsl #1
   123b4:	add	r2, r9, r2, lsl #2
   123b8:	str	r8, [r2, #4]
   123bc:	b	12334 <rb_base64_encode@plt+0x146c>
   123c0:	mov	r1, #4
   123c4:	ldr	r0, [r8, #84]	; 0x54
   123c8:	bl	10d6c <rb_set_type@plt>
   123cc:	b	1236c <rb_base64_encode@plt+0x14a4>
   123d0:	mov	r1, #4
   123d4:	ldr	r0, [r8, #88]	; 0x58
   123d8:	bl	10d6c <rb_set_type@plt>
   123dc:	b	1237c <rb_base64_encode@plt+0x14b4>
   123e0:	mov	r3, r5
   123e4:	movw	r2, #8272	; 0x2050
   123e8:	movt	r2, #1
   123ec:	mov	r1, #1
   123f0:	ldr	r0, [r5, #16]
   123f4:	bl	10cb8 <rb_setselect@plt>
   123f8:	add	sp, sp, #20
   123fc:	ldrd	r4, [sp]
   12400:	ldrd	r6, [sp, #8]
   12404:	ldrd	r8, [sp, #16]
   12408:	ldrd	sl, [sp, #24]
   1240c:	add	sp, sp, #32
   12410:	pop	{pc}		; (ldr pc, [sp], #4)
   12414:	strd	r4, [sp, #-28]!	; 0xffffffe4
   12418:	strd	r6, [sp, #8]
   1241c:	strd	r8, [sp, #16]
   12420:	str	lr, [sp, #24]
   12424:	sub	sp, sp, #164	; 0xa4
   12428:	add	r1, sp, #20
   1242c:	mov	r0, #7
   12430:	bl	10e8c <getrlimit@plt>
   12434:	cmp	r0, #0
   12438:	ldreq	r5, [sp, #20]
   1243c:	movwne	r5, #65535	; 0xffff
   12440:	movw	r0, #16060	; 0x3ebc
   12444:	movt	r0, #1
   12448:	bl	10ce8 <getenv@plt>
   1244c:	mov	r6, r0
   12450:	movw	r0, #16068	; 0x3ec4
   12454:	movt	r0, #1
   12458:	bl	10ce8 <getenv@plt>
   1245c:	mov	r4, r0
   12460:	movw	r0, #16080	; 0x3ed0
   12464:	movt	r0, #1
   12468:	bl	10ce8 <getenv@plt>
   1246c:	clz	r3, r4
   12470:	lsr	r3, r3, #5
   12474:	cmp	r6, #0
   12478:	moveq	r3, #1
   1247c:	mov	r8, r0
   12480:	cmp	r0, #0
   12484:	moveq	r3, #1
   12488:	cmp	r3, #0
   1248c:	beq	124d0 <rb_base64_encode@plt+0x1608>
   12490:	movw	r4, #20720	; 0x50f0
   12494:	movt	r4, #2
   12498:	ldr	r3, [r4]
   1249c:	mov	r2, #52	; 0x34
   124a0:	mov	r1, #1
   124a4:	movw	r0, #16092	; 0x3edc
   124a8:	movt	r0, #1
   124ac:	bl	10e08 <fwrite@plt>
   124b0:	ldr	r3, [r4]
   124b4:	mov	r2, #49	; 0x31
   124b8:	mov	r1, #1
   124bc:	movw	r0, #16148	; 0x3f14
   124c0:	movt	r0, #1
   124c4:	bl	10e08 <fwrite@plt>
   124c8:	mov	r0, #1
   124cc:	bl	10eb0 <exit@plt>
   124d0:	mov	r2, #10
   124d4:	mov	r1, #0
   124d8:	mov	r0, r6
   124dc:	bl	10dcc <strtol@plt>
   124e0:	mov	r7, r0
   124e4:	mov	r2, #10
   124e8:	mov	r1, #0
   124ec:	mov	r0, r4
   124f0:	bl	10dcc <strtol@plt>
   124f4:	mov	r6, r0
   124f8:	mov	r2, #10
   124fc:	mov	r1, #0
   12500:	mov	r0, r8
   12504:	bl	10dcc <strtol@plt>
   12508:	movw	r3, #20728	; 0x50f8
   1250c:	movt	r3, #2
   12510:	str	r0, [r3, #12]
   12514:	cmp	r5, #0
   12518:	movgt	r4, #0
   1251c:	bgt	126e8 <rb_base64_encode@plt+0x1820>
   12520:	mov	r1, #2
   12524:	movw	r0, #16200	; 0x3f48
   12528:	movt	r0, #1
   1252c:	bl	10c58 <open@plt>
   12530:	subs	r4, r0, #0
   12534:	blt	12564 <rb_base64_encode@plt+0x169c>
   12538:	cmp	r7, #0
   1253c:	cmpne	r6, #0
   12540:	bne	1271c <rb_base64_encode@plt+0x1854>
   12544:	cmp	r7, #1
   12548:	cmpne	r6, #1
   1254c:	bne	1272c <rb_base64_encode@plt+0x1864>
   12550:	cmp	r7, #2
   12554:	cmpne	r6, #2
   12558:	bne	1273c <rb_base64_encode@plt+0x1874>
   1255c:	cmp	r4, #2
   12560:	bgt	1274c <rb_base64_encode@plt+0x1884>
   12564:	mov	r4, #0
   12568:	str	r4, [sp, #152]	; 0x98
   1256c:	mov	r9, #1
   12570:	str	r9, [sp, #20]
   12574:	add	r0, sp, #24
   12578:	bl	10c64 <sigemptyset@plt>
   1257c:	mov	r1, #13
   12580:	add	r0, sp, #24
   12584:	bl	10dd8 <sigaddset@plt>
   12588:	mov	r1, #14
   1258c:	add	r0, sp, #24
   12590:	bl	10dd8 <sigaddset@plt>
   12594:	mov	r1, #5
   12598:	add	r0, sp, #24
   1259c:	bl	10dd8 <sigaddset@plt>
   125a0:	mov	r1, #28
   125a4:	add	r0, sp, #24
   125a8:	bl	10dd8 <sigaddset@plt>
   125ac:	mov	r2, r4
   125b0:	add	r1, sp, #20
   125b4:	mov	r0, #28
   125b8:	bl	10e2c <sigaction@plt>
   125bc:	mov	r2, r4
   125c0:	add	r1, sp, #20
   125c4:	mov	r0, #13
   125c8:	bl	10e2c <sigaction@plt>
   125cc:	mov	r2, r4
   125d0:	add	r1, sp, #20
   125d4:	mov	r0, #5
   125d8:	bl	10e2c <sigaction@plt>
   125dc:	movw	r3, #4036	; 0xfc4
   125e0:	movt	r3, #1
   125e4:	str	r3, [sp, #20]
   125e8:	mov	r2, r4
   125ec:	add	r1, sp, #20
   125f0:	mov	r0, #14
   125f4:	bl	10e2c <sigaction@plt>
   125f8:	mov	r8, #4096	; 0x1000
   125fc:	str	r8, [sp, #8]
   12600:	mov	r3, #1024	; 0x400
   12604:	str	r3, [sp, #4]
   12608:	str	r5, [sp]
   1260c:	mov	r3, r4
   12610:	mov	r2, r4
   12614:	mov	r1, r4
   12618:	mov	r0, r4
   1261c:	bl	10e38 <rb_lib_init@plt>
   12620:	mov	r0, r8
   12624:	bl	10e80 <rb_linebuf_init@plt>
   12628:	mov	r0, r8
   1262c:	bl	10d3c <rb_init_rawbuffers@plt>
   12630:	mov	r1, #48	; 0x30
   12634:	mov	r0, r9
   12638:	bl	10cf4 <calloc@plt>
   1263c:	subs	r5, r0, #0
   12640:	beq	12758 <rb_base64_encode@plt+0x1890>
   12644:	movw	r4, #20728	; 0x50f8
   12648:	movt	r4, #2
   1264c:	str	r5, [r4, #16]
   12650:	movw	r2, #16212	; 0x3f54
   12654:	movt	r2, #1
   12658:	mov	r1, #4
   1265c:	mov	r0, r7
   12660:	bl	10e50 <rb_open@plt>
   12664:	str	r0, [r5, #16]
   12668:	ldr	r5, [r4, #16]
   1266c:	movw	r2, #16232	; 0x3f68
   12670:	movt	r2, #1
   12674:	mov	r1, #8
   12678:	mov	r0, r6
   1267c:	bl	10e50 <rb_open@plt>
   12680:	str	r0, [r5, #20]
   12684:	ldr	r3, [r4, #16]
   12688:	ldr	r0, [r3, #16]
   1268c:	bl	10d00 <rb_set_nb@plt>
   12690:	ldr	r3, [r4, #16]
   12694:	ldr	r0, [r3, #20]
   12698:	bl	10d00 <rb_set_nb@plt>
   1269c:	mov	r3, #10
   126a0:	mov	r2, #0
   126a4:	movw	r1, #4040	; 0xfc8
   126a8:	movt	r1, #1
   126ac:	movw	r0, #16244	; 0x3f74
   126b0:	movt	r0, #1
   126b4:	bl	10c94 <rb_event_addish@plt>
   126b8:	ldr	r3, [r4, #16]
   126bc:	mov	r1, #0
   126c0:	ldr	r0, [r3, #20]
   126c4:	bl	11050 <rb_base64_encode@plt+0x188>
   126c8:	ldr	r3, [r4, #16]
   126cc:	mov	r1, r3
   126d0:	ldr	r0, [r3, #16]
   126d4:	bl	12050 <rb_base64_encode@plt+0x1188>
   126d8:	mov	r0, #0
   126dc:	bl	10d54 <rb_lib_loop@plt>
   126e0:	mov	r0, r4
   126e4:	bl	10dfc <close@plt>
   126e8:	add	r4, r4, #1
   126ec:	cmp	r4, r5
   126f0:	beq	12520 <rb_base64_encode@plt+0x1658>
   126f4:	cmp	r4, r7
   126f8:	cmpne	r4, r6
   126fc:	movne	r3, #1
   12700:	moveq	r3, #0
   12704:	cmp	r4, #2
   12708:	movle	r3, #0
   1270c:	andgt	r3, r3, #1
   12710:	cmp	r3, #0
   12714:	beq	126e8 <rb_base64_encode@plt+0x1820>
   12718:	b	126e0 <rb_base64_encode@plt+0x1818>
   1271c:	mov	r1, #0
   12720:	mov	r0, r4
   12724:	bl	10e68 <dup2@plt>
   12728:	b	12544 <rb_base64_encode@plt+0x167c>
   1272c:	mov	r1, #1
   12730:	mov	r0, r4
   12734:	bl	10e68 <dup2@plt>
   12738:	b	12550 <rb_base64_encode@plt+0x1688>
   1273c:	mov	r1, #2
   12740:	mov	r0, r4
   12744:	bl	10e68 <dup2@plt>
   12748:	b	1255c <rb_base64_encode@plt+0x1694>
   1274c:	mov	r0, r4
   12750:	bl	10dfc <close@plt>
   12754:	b	12564 <rb_base64_encode@plt+0x169c>
   12758:	bl	10e14 <rb_outofmemory@plt>
   1275c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12760:	strd	r6, [sp, #8]
   12764:	strd	r8, [sp, #16]
   12768:	strd	sl, [sp, #24]
   1276c:	str	lr, [sp, #32]
   12770:	sub	sp, sp, #156	; 0x9c
   12774:	mov	r3, r0
   12778:	ldr	ip, [r0]
   1277c:	ldr	r2, [r0, #4]
   12780:	mov	lr, r2
   12784:	ldr	r0, [r0, #8]
   12788:	ldr	r4, [r3, #12]
   1278c:	str	r3, [sp, #84]	; 0x54
   12790:	ldr	r6, [r3, #16]
   12794:	ldr	r5, [r1]
   12798:	rev	r5, r5
   1279c:	eor	r7, r0, r4
   127a0:	and	r7, r7, r2
   127a4:	eor	r7, r7, r4
   127a8:	movw	r3, #31129	; 0x7999
   127ac:	movt	r3, #23170	; 0x5a82
   127b0:	str	r6, [sp, #80]	; 0x50
   127b4:	add	r2, r6, r3
   127b8:	add	r2, r2, ip, ror #27
   127bc:	add	r7, r7, r2
   127c0:	str	r5, [sp, #4]
   127c4:	add	r7, r5, r7
   127c8:	str	lr, [sp, #68]	; 0x44
   127cc:	ror	r2, lr, #2
   127d0:	ldr	r5, [r1, #4]
   127d4:	rev	r9, r5
   127d8:	eor	r8, r0, r2
   127dc:	mov	lr, ip
   127e0:	and	r8, r8, ip
   127e4:	mov	ip, r0
   127e8:	eor	r8, r8, r0
   127ec:	str	r4, [sp, #76]	; 0x4c
   127f0:	add	r0, r4, r3
   127f4:	add	r8, r8, r0
   127f8:	str	r9, [sp, #40]	; 0x28
   127fc:	add	r8, r8, r9
   12800:	add	r8, r8, r7, ror #27
   12804:	str	lr, [sp, #64]	; 0x40
   12808:	ror	r9, lr, #2
   1280c:	ldr	r4, [r1, #8]
   12810:	rev	r5, r4
   12814:	eor	r4, r2, r9
   12818:	and	r4, r4, r7
   1281c:	eor	r4, r4, r2
   12820:	str	ip, [sp, #72]	; 0x48
   12824:	add	r0, ip, r3
   12828:	str	r5, [sp, #8]
   1282c:	add	r0, r0, r5
   12830:	add	r4, r4, r0
   12834:	add	r4, r4, r8, ror #27
   12838:	ror	r7, r7, #2
   1283c:	ldr	r5, [r1, #12]
   12840:	rev	sl, r5
   12844:	eor	r6, r9, r7
   12848:	and	r6, r6, r8
   1284c:	eor	r6, r6, r9
   12850:	add	r2, r2, r3
   12854:	str	sl, [sp, #16]
   12858:	add	r2, r2, sl
   1285c:	add	r6, r6, r2
   12860:	add	r6, r6, r4, ror #27
   12864:	ror	r8, r8, #2
   12868:	ldr	lr, [r1, #16]
   1286c:	rev	fp, lr
   12870:	eor	lr, r7, r8
   12874:	and	lr, lr, r4
   12878:	eor	lr, lr, r7
   1287c:	add	r9, r9, r3
   12880:	str	fp, [sp, #36]	; 0x24
   12884:	add	r9, r9, fp
   12888:	add	lr, lr, r9
   1288c:	add	lr, lr, r6, ror #27
   12890:	ror	r4, r4, #2
   12894:	ldr	ip, [r1, #20]
   12898:	rev	r9, ip
   1289c:	eor	ip, r8, r4
   128a0:	and	ip, ip, r6
   128a4:	eor	ip, ip, r8
   128a8:	str	r9, [sp, #44]	; 0x2c
   128ac:	add	r2, r9, r3
   128b0:	add	r7, r2, r7
   128b4:	add	ip, ip, r7
   128b8:	add	ip, ip, lr, ror #27
   128bc:	ror	r6, r6, #2
   128c0:	ldr	r0, [r1, #24]
   128c4:	rev	r2, r0
   128c8:	eor	r0, r4, r6
   128cc:	and	r0, r0, lr
   128d0:	eor	r0, r0, r4
   128d4:	str	r2, [sp, #48]	; 0x30
   128d8:	add	r2, r2, r3
   128dc:	add	r8, r2, r8
   128e0:	add	r0, r0, r8
   128e4:	add	r0, r0, ip, ror #27
   128e8:	ror	lr, lr, #2
   128ec:	ldr	r2, [r1, #28]
   128f0:	rev	r8, r2
   128f4:	eor	fp, r6, lr
   128f8:	and	fp, fp, ip
   128fc:	eor	fp, fp, r6
   12900:	str	r8, [sp, #52]	; 0x34
   12904:	add	r2, r8, r3
   12908:	add	r4, r2, r4
   1290c:	add	fp, fp, r4
   12910:	add	fp, fp, r0, ror #27
   12914:	ror	ip, ip, #2
   12918:	ldr	r2, [r1, #32]
   1291c:	rev	r9, r2
   12920:	eor	r2, lr, ip
   12924:	and	r2, r2, r0
   12928:	eor	r2, r2, lr
   1292c:	add	r4, r9, r3
   12930:	add	r6, r4, r6
   12934:	add	r2, r2, r6
   12938:	add	r2, r2, fp, ror #27
   1293c:	ror	r0, r0, #2
   12940:	ldr	r5, [r1, #36]	; 0x24
   12944:	rev	r6, r5
   12948:	eor	r5, ip, r0
   1294c:	and	r5, r5, fp
   12950:	eor	r5, r5, ip
   12954:	str	r6, [sp, #20]
   12958:	add	r4, r6, r3
   1295c:	add	lr, r4, lr
   12960:	add	r5, r5, lr
   12964:	add	r5, r5, r2, ror #27
   12968:	ror	fp, fp, #2
   1296c:	ldr	lr, [r1, #40]	; 0x28
   12970:	rev	r8, lr
   12974:	eor	r7, r0, fp
   12978:	and	r7, r7, r2
   1297c:	eor	r7, r7, r0
   12980:	str	r8, [sp, #24]
   12984:	add	lr, r8, r3
   12988:	add	ip, lr, ip
   1298c:	add	r7, r7, ip
   12990:	add	r7, r7, r5, ror #27
   12994:	ror	r2, r2, #2
   12998:	ldr	ip, [r1, #44]	; 0x2c
   1299c:	rev	sl, ip
   129a0:	mov	r6, sl
   129a4:	eor	sl, fp, r2
   129a8:	and	sl, sl, r5
   129ac:	eor	sl, sl, fp
   129b0:	str	r6, [sp, #28]
   129b4:	add	ip, r6, r3
   129b8:	add	r0, ip, r0
   129bc:	add	sl, sl, r0
   129c0:	add	sl, sl, r7, ror #27
   129c4:	ror	r5, r5, #2
   129c8:	ldr	r6, [r1, #48]	; 0x30
   129cc:	rev	r0, r6
   129d0:	eor	r4, r2, r5
   129d4:	and	r4, r4, r7
   129d8:	eor	r4, r4, r2
   129dc:	str	r0, [sp, #32]
   129e0:	add	r0, r0, r3
   129e4:	add	fp, r0, fp
   129e8:	add	r4, r4, fp
   129ec:	add	r4, r4, sl, ror #27
   129f0:	ror	r7, r7, #2
   129f4:	ldr	r6, [r1, #52]	; 0x34
   129f8:	rev	fp, r6
   129fc:	eor	r8, r5, r7
   12a00:	and	r8, r8, sl
   12a04:	eor	r8, r8, r5
   12a08:	add	r0, fp, r3
   12a0c:	add	r2, r0, r2
   12a10:	add	r8, r8, r2
   12a14:	add	r8, r8, r4, ror #27
   12a18:	ror	sl, sl, #2
   12a1c:	ldr	r6, [r1, #56]	; 0x38
   12a20:	rev	r2, r6
   12a24:	eor	lr, r7, sl
   12a28:	and	lr, lr, r4
   12a2c:	eor	lr, lr, r7
   12a30:	str	r2, [sp, #12]
   12a34:	add	r2, r2, r3
   12a38:	add	r5, r2, r5
   12a3c:	add	lr, lr, r5
   12a40:	add	lr, lr, r8, ror #27
   12a44:	ror	r4, r4, #2
   12a48:	ldr	r6, [r1, #60]	; 0x3c
   12a4c:	rev	r6, r6
   12a50:	eor	ip, sl, r4
   12a54:	and	ip, ip, r8
   12a58:	eor	ip, ip, sl
   12a5c:	add	r2, r6, r3
   12a60:	add	r7, r2, r7
   12a64:	add	ip, ip, r7
   12a68:	add	ip, ip, lr, ror #27
   12a6c:	ror	r8, r8, #2
   12a70:	ldr	r1, [sp, #4]
   12a74:	ldr	r5, [sp, #8]
   12a78:	eor	r5, r1, r5
   12a7c:	eor	r5, r5, r9
   12a80:	eor	r5, r5, fp
   12a84:	ror	r7, r5, #31
   12a88:	eor	r0, r4, r8
   12a8c:	and	r0, r0, lr
   12a90:	eor	r0, r0, r4
   12a94:	add	r2, r7, r3
   12a98:	add	sl, r2, sl
   12a9c:	add	r0, r0, sl
   12aa0:	add	r0, r0, ip, ror #27
   12aa4:	ror	lr, lr, #2
   12aa8:	ldr	r1, [sp, #40]	; 0x28
   12aac:	ldr	sl, [sp, #16]
   12ab0:	eor	r5, r1, sl
   12ab4:	ldr	r1, [sp, #20]
   12ab8:	eor	r5, r5, r1
   12abc:	ldr	sl, [sp, #12]
   12ac0:	eor	r5, r5, sl
   12ac4:	ror	r2, r5, #31
   12ac8:	eor	r1, r8, lr
   12acc:	and	r1, r1, ip
   12ad0:	eor	r1, r1, r8
   12ad4:	str	r2, [sp, #4]
   12ad8:	add	r2, r2, r3
   12adc:	add	r4, r2, r4
   12ae0:	add	r1, r1, r4
   12ae4:	add	r1, r1, r0, ror #27
   12ae8:	ror	ip, ip, #2
   12aec:	ldr	r5, [sp, #8]
   12af0:	ldr	r2, [sp, #36]	; 0x24
   12af4:	eor	r4, r5, r2
   12af8:	ldr	r5, [sp, #24]
   12afc:	eor	r4, r4, r5
   12b00:	str	r6, [sp, #40]	; 0x28
   12b04:	eor	r4, r4, r6
   12b08:	ror	r4, r4, #31
   12b0c:	eor	r2, lr, ip
   12b10:	and	r2, r2, r0
   12b14:	eor	r2, r2, lr
   12b18:	add	r5, r4, r3
   12b1c:	add	r8, r5, r8
   12b20:	add	r2, r2, r8
   12b24:	add	r2, r2, r1, ror #27
   12b28:	ror	r0, r0, #2
   12b2c:	ldr	r5, [sp, #16]
   12b30:	ldr	r8, [sp, #44]	; 0x2c
   12b34:	eor	r5, r5, r8
   12b38:	ldr	r8, [sp, #28]
   12b3c:	eor	r5, r5, r8
   12b40:	str	r7, [sp, #16]
   12b44:	eor	r5, r5, r7
   12b48:	ror	r5, r5, #31
   12b4c:	mov	r8, r5
   12b50:	eor	r5, ip, r0
   12b54:	and	r5, r5, r1
   12b58:	eor	r5, r5, ip
   12b5c:	str	r8, [sp, #8]
   12b60:	add	r3, r8, r3
   12b64:	add	r3, r3, lr
   12b68:	add	r5, r5, r3
   12b6c:	add	r5, r5, r2, ror #27
   12b70:	ror	r1, r1, #2
   12b74:	ldr	r7, [sp, #36]	; 0x24
   12b78:	ldr	r3, [sp, #48]	; 0x30
   12b7c:	eor	lr, r7, r3
   12b80:	ldr	r7, [sp, #32]
   12b84:	eor	lr, lr, r7
   12b88:	ldr	r8, [sp, #4]
   12b8c:	eor	lr, lr, r8
   12b90:	ror	lr, lr, #31
   12b94:	eor	r7, r0, r1
   12b98:	eor	r7, r7, r2
   12b9c:	movw	r3, #60321	; 0xeba1
   12ba0:	movt	r3, #28377	; 0x6ed9
   12ba4:	add	r6, lr, r3
   12ba8:	add	ip, r6, ip
   12bac:	add	r7, r7, ip
   12bb0:	add	r7, r7, r5, ror #27
   12bb4:	ror	r2, r2, #2
   12bb8:	ldr	ip, [sp, #44]	; 0x2c
   12bbc:	ldr	r6, [sp, #52]	; 0x34
   12bc0:	eor	ip, ip, r6
   12bc4:	str	fp, [sp, #36]	; 0x24
   12bc8:	eor	ip, ip, fp
   12bcc:	eor	ip, ip, r4
   12bd0:	ror	ip, ip, #31
   12bd4:	eor	fp, r1, r2
   12bd8:	eor	fp, fp, r5
   12bdc:	add	r6, ip, r3
   12be0:	add	r0, r6, r0
   12be4:	add	fp, fp, r0
   12be8:	add	fp, fp, r7, ror #27
   12bec:	ror	r5, r5, #2
   12bf0:	ldr	r0, [sp, #48]	; 0x30
   12bf4:	eor	r0, r0, r9
   12bf8:	eor	r0, r0, sl
   12bfc:	ldr	r8, [sp, #8]
   12c00:	eor	r0, r0, r8
   12c04:	ror	r0, r0, #31
   12c08:	eor	r6, r2, r5
   12c0c:	eor	r6, r6, r7
   12c10:	add	r8, r0, r3
   12c14:	add	r1, r8, r1
   12c18:	add	r6, r6, r1
   12c1c:	add	r6, r6, fp, ror #27
   12c20:	ror	r7, r7, #2
   12c24:	ldr	sl, [sp, #52]	; 0x34
   12c28:	ldr	r1, [sp, #20]
   12c2c:	eor	r1, sl, r1
   12c30:	ldr	r8, [sp, #40]	; 0x28
   12c34:	eor	r1, r1, r8
   12c38:	eor	r1, r1, lr
   12c3c:	ror	r1, r1, #31
   12c40:	eor	sl, r5, r7
   12c44:	eor	sl, sl, fp
   12c48:	add	r8, r1, r3
   12c4c:	add	r2, r8, r2
   12c50:	add	sl, sl, r2
   12c54:	add	sl, sl, r6, ror #27
   12c58:	ror	fp, fp, #2
   12c5c:	ldr	r2, [sp, #24]
   12c60:	eor	r2, r9, r2
   12c64:	ldr	r9, [sp, #16]
   12c68:	eor	r2, r2, r9
   12c6c:	eor	r2, r2, ip
   12c70:	ror	r2, r2, #31
   12c74:	eor	r9, r7, fp
   12c78:	eor	r9, r9, r6
   12c7c:	add	r8, r2, r3
   12c80:	add	r5, r8, r5
   12c84:	add	r9, r9, r5
   12c88:	add	r9, r9, sl, ror #27
   12c8c:	ror	r6, r6, #2
   12c90:	ldr	r5, [sp, #20]
   12c94:	ldr	r8, [sp, #28]
   12c98:	eor	r5, r5, r8
   12c9c:	ldr	r8, [sp, #4]
   12ca0:	eor	r5, r5, r8
   12ca4:	eor	r5, r5, r0
   12ca8:	ror	r5, r5, #31
   12cac:	eor	r8, fp, r6
   12cb0:	eor	r8, r8, sl
   12cb4:	str	r5, [sp, #20]
   12cb8:	add	r5, r5, r3
   12cbc:	add	r7, r5, r7
   12cc0:	add	r8, r8, r7
   12cc4:	add	r8, r8, r9, ror #27
   12cc8:	ror	sl, sl, #2
   12ccc:	ldr	r5, [sp, #24]
   12cd0:	ldr	r7, [sp, #32]
   12cd4:	eor	r5, r5, r7
   12cd8:	eor	r5, r5, r4
   12cdc:	eor	r5, r5, r1
   12ce0:	ror	r7, r5, #31
   12ce4:	eor	r5, r6, sl
   12ce8:	eor	r5, r5, r9
   12cec:	str	r7, [sp, #24]
   12cf0:	add	r7, r7, r3
   12cf4:	add	fp, r7, fp
   12cf8:	add	r5, r5, fp
   12cfc:	add	r5, r5, r8, ror #27
   12d00:	ror	r9, r9, #2
   12d04:	ldr	r7, [sp, #28]
   12d08:	ldr	fp, [sp, #36]	; 0x24
   12d0c:	eor	r7, r7, fp
   12d10:	ldr	fp, [sp, #8]
   12d14:	eor	r7, r7, fp
   12d18:	eor	r7, r7, r2
   12d1c:	ror	fp, r7, #31
   12d20:	mov	r7, fp
   12d24:	eor	fp, sl, r9
   12d28:	eor	fp, fp, r8
   12d2c:	str	r7, [sp, #28]
   12d30:	add	r7, r7, r3
   12d34:	add	r6, r7, r6
   12d38:	add	fp, fp, r6
   12d3c:	add	fp, fp, r5, ror #27
   12d40:	ror	r8, r8, #2
   12d44:	ldr	r6, [sp, #32]
   12d48:	ldr	r7, [sp, #12]
   12d4c:	eor	r6, r6, r7
   12d50:	eor	r6, r6, lr
   12d54:	ldr	r7, [sp, #20]
   12d58:	eor	r6, r6, r7
   12d5c:	ror	r6, r6, #31
   12d60:	mov	r7, r6
   12d64:	eor	r6, r9, r8
   12d68:	eor	r6, r6, r5
   12d6c:	str	r7, [sp, #32]
   12d70:	add	r7, r7, r3
   12d74:	add	sl, r7, sl
   12d78:	add	sl, r6, sl
   12d7c:	add	sl, sl, fp, ror #27
   12d80:	ror	r5, r5, #2
   12d84:	ldr	r6, [sp, #36]	; 0x24
   12d88:	ldr	r7, [sp, #40]	; 0x28
   12d8c:	eor	r6, r6, r7
   12d90:	eor	r6, r6, ip
   12d94:	ldr	r7, [sp, #24]
   12d98:	eor	r6, r6, r7
   12d9c:	ror	r6, r6, #31
   12da0:	mov	r7, r6
   12da4:	eor	r6, r8, r5
   12da8:	eor	r6, r6, fp
   12dac:	str	r7, [sp, #36]	; 0x24
   12db0:	add	r7, r7, r3
   12db4:	add	r9, r7, r9
   12db8:	add	r9, r6, r9
   12dbc:	add	r9, r9, sl, ror #27
   12dc0:	ror	fp, fp, #2
   12dc4:	ldr	r6, [sp, #16]
   12dc8:	ldr	r7, [sp, #12]
   12dcc:	eor	r6, r6, r7
   12dd0:	eor	r6, r6, r0
   12dd4:	ldr	r7, [sp, #28]
   12dd8:	eor	r6, r6, r7
   12ddc:	ror	r6, r6, #31
   12de0:	eor	r7, r5, fp
   12de4:	eor	r7, r7, sl
   12de8:	str	r6, [sp, #12]
   12dec:	add	r6, r6, r3
   12df0:	add	r8, r6, r8
   12df4:	add	r7, r7, r8
   12df8:	add	r7, r7, r9, ror #27
   12dfc:	ror	sl, sl, #2
   12e00:	ldr	r8, [sp, #4]
   12e04:	ldr	r6, [sp, #40]	; 0x28
   12e08:	eor	r6, r8, r6
   12e0c:	eor	r6, r6, r1
   12e10:	ldr	r8, [sp, #32]
   12e14:	eor	r6, r6, r8
   12e18:	ror	r6, r6, #31
   12e1c:	eor	r8, fp, sl
   12e20:	eor	r8, r8, r9
   12e24:	str	r6, [sp, #40]	; 0x28
   12e28:	add	r6, r6, r3
   12e2c:	add	r5, r6, r5
   12e30:	add	r8, r8, r5
   12e34:	add	r8, r8, r7, ror #27
   12e38:	ror	r9, r9, #2
   12e3c:	ldr	r6, [sp, #16]
   12e40:	eor	r5, r6, r4
   12e44:	eor	r5, r5, r2
   12e48:	ldr	r6, [sp, #36]	; 0x24
   12e4c:	eor	r5, r5, r6
   12e50:	ror	r5, r5, #31
   12e54:	eor	r6, sl, r9
   12e58:	eor	r6, r6, r7
   12e5c:	str	r5, [sp, #16]
   12e60:	add	r5, r5, r3
   12e64:	add	fp, r5, fp
   12e68:	add	r6, r6, fp
   12e6c:	add	r6, r6, r8, ror #27
   12e70:	ror	r7, r7, #2
   12e74:	ldr	r5, [sp, #4]
   12e78:	ldr	fp, [sp, #8]
   12e7c:	eor	r5, r5, fp
   12e80:	ldr	fp, [sp, #20]
   12e84:	eor	r5, r5, fp
   12e88:	ldr	fp, [sp, #12]
   12e8c:	eor	r5, r5, fp
   12e90:	ror	r5, r5, #31
   12e94:	mov	fp, r5
   12e98:	eor	r5, r9, r7
   12e9c:	eor	r5, r5, r8
   12ea0:	str	fp, [sp, #44]	; 0x2c
   12ea4:	add	fp, fp, r3
   12ea8:	add	sl, fp, sl
   12eac:	add	r5, r5, sl
   12eb0:	add	r5, r5, r6, ror #27
   12eb4:	ror	r8, r8, #2
   12eb8:	eor	r4, r4, lr
   12ebc:	ldr	sl, [sp, #24]
   12ec0:	eor	r4, r4, sl
   12ec4:	ldr	sl, [sp, #40]	; 0x28
   12ec8:	eor	r4, r4, sl
   12ecc:	ror	r4, r4, #31
   12ed0:	mov	sl, r4
   12ed4:	eor	r4, r7, r8
   12ed8:	eor	r4, r4, r6
   12edc:	str	sl, [sp, #48]	; 0x30
   12ee0:	add	sl, sl, r3
   12ee4:	add	r9, sl, r9
   12ee8:	add	r4, r4, r9
   12eec:	add	r4, r4, r5, ror #27
   12ef0:	ror	r6, r6, #2
   12ef4:	ldr	fp, [sp, #8]
   12ef8:	eor	r9, fp, ip
   12efc:	ldr	sl, [sp, #28]
   12f00:	eor	r9, r9, sl
   12f04:	ldr	sl, [sp, #16]
   12f08:	eor	r9, r9, sl
   12f0c:	ror	sl, r9, #31
   12f10:	eor	fp, r8, r6
   12f14:	eor	fp, fp, r5
   12f18:	add	r9, sl, r3
   12f1c:	add	r7, r9, r7
   12f20:	add	fp, fp, r7
   12f24:	add	fp, fp, r4, ror #27
   12f28:	ror	r5, r5, #2
   12f2c:	eor	lr, lr, r0
   12f30:	ldr	r9, [sp, #32]
   12f34:	eor	lr, lr, r9
   12f38:	ldr	r9, [sp, #44]	; 0x2c
   12f3c:	eor	lr, lr, r9
   12f40:	ror	lr, lr, #31
   12f44:	mov	r9, lr
   12f48:	eor	lr, r6, r5
   12f4c:	eor	lr, lr, r4
   12f50:	add	r7, r9, r3
   12f54:	add	r8, r7, r8
   12f58:	add	r8, lr, r8
   12f5c:	add	lr, r8, fp, ror #27
   12f60:	ror	r4, r4, #2
   12f64:	eor	ip, ip, r1
   12f68:	ldr	r8, [sp, #36]	; 0x24
   12f6c:	eor	ip, ip, r8
   12f70:	ldr	r8, [sp, #48]	; 0x30
   12f74:	eor	ip, ip, r8
   12f78:	ror	r8, ip, #31
   12f7c:	eor	ip, r5, r4
   12f80:	eor	ip, ip, fp
   12f84:	str	r8, [sp, #8]
   12f88:	add	r7, r8, r3
   12f8c:	add	r6, r7, r6
   12f90:	add	r6, ip, r6
   12f94:	add	ip, r6, lr, ror #27
   12f98:	ror	fp, fp, #2
   12f9c:	eor	r0, r0, r2
   12fa0:	ldr	r8, [sp, #12]
   12fa4:	eor	r0, r0, r8
   12fa8:	eor	r0, r0, sl
   12fac:	ror	r0, r0, #31
   12fb0:	mov	r6, r0
   12fb4:	eor	r0, r4, fp
   12fb8:	eor	r0, r0, lr
   12fbc:	str	r6, [sp, #52]	; 0x34
   12fc0:	add	r6, r6, r3
   12fc4:	add	r5, r6, r5
   12fc8:	add	r5, r0, r5
   12fcc:	add	r5, r5, ip, ror #27
   12fd0:	ror	lr, lr, #2
   12fd4:	ldr	r6, [sp, #20]
   12fd8:	eor	r1, r1, r6
   12fdc:	ldr	r0, [sp, #40]	; 0x28
   12fe0:	eor	r1, r1, r0
   12fe4:	str	r9, [sp, #56]	; 0x38
   12fe8:	eor	r1, r1, r9
   12fec:	ror	r1, r1, #31
   12ff0:	mov	r0, r1
   12ff4:	eor	r1, fp, lr
   12ff8:	eor	r1, r1, ip
   12ffc:	str	r0, [sp, #4]
   13000:	add	r3, r0, r3
   13004:	add	r4, r3, r4
   13008:	add	r4, r1, r4
   1300c:	add	r1, r4, r5, ror #27
   13010:	ror	ip, ip, #2
   13014:	ldr	r7, [sp, #24]
   13018:	eor	r2, r2, r7
   1301c:	ldr	r4, [sp, #16]
   13020:	eor	r2, r2, r4
   13024:	ldr	r4, [sp, #8]
   13028:	eor	r2, r2, r4
   1302c:	ror	r2, r2, #31
   13030:	mov	r4, r2
   13034:	orr	r2, r5, ip
   13038:	and	r2, r2, lr
   1303c:	and	r3, r5, ip
   13040:	orr	r2, r2, r3
   13044:	movw	r8, #48348	; 0xbcdc
   13048:	movt	r8, #36635	; 0x8f1b
   1304c:	str	r4, [sp, #20]
   13050:	add	r3, r4, r8
   13054:	add	fp, r3, fp
   13058:	add	fp, r2, fp
   1305c:	add	r2, fp, r1, ror #27
   13060:	ror	r0, r5, #2
   13064:	ldr	r9, [sp, #28]
   13068:	eor	r3, r6, r9
   1306c:	ldr	r5, [sp, #44]	; 0x2c
   13070:	eor	r3, r3, r5
   13074:	ldr	r5, [sp, #52]	; 0x34
   13078:	eor	r3, r3, r5
   1307c:	ror	fp, r3, #31
   13080:	orr	r4, r1, r0
   13084:	and	r3, r4, ip
   13088:	and	r4, r1, r0
   1308c:	orr	r4, r3, r4
   13090:	str	fp, [sp, #24]
   13094:	add	r3, fp, r8
   13098:	add	lr, r3, lr
   1309c:	add	lr, r4, lr
   130a0:	add	r4, lr, r2, ror #27
   130a4:	ror	r1, r1, #2
   130a8:	ldr	r6, [sp, #32]
   130ac:	eor	r5, r7, r6
   130b0:	ldr	lr, [sp, #48]	; 0x30
   130b4:	eor	r5, r5, lr
   130b8:	ldr	lr, [sp, #4]
   130bc:	eor	r5, r5, lr
   130c0:	ror	lr, r5, #31
   130c4:	orr	r5, r2, r1
   130c8:	and	r3, r5, r0
   130cc:	and	r5, r2, r1
   130d0:	orr	r5, r3, r5
   130d4:	str	lr, [sp, #28]
   130d8:	add	r3, lr, r8
   130dc:	add	ip, r3, ip
   130e0:	add	ip, r5, ip
   130e4:	add	ip, ip, r4, ror #27
   130e8:	ror	r2, r2, #2
   130ec:	ldr	fp, [sp, #36]	; 0x24
   130f0:	eor	r7, r9, fp
   130f4:	eor	r7, r7, sl
   130f8:	ldr	r9, [sp, #20]
   130fc:	eor	r7, r7, r9
   13100:	ror	r7, r7, #31
   13104:	orr	lr, r4, r2
   13108:	and	r5, lr, r1
   1310c:	and	lr, r4, r2
   13110:	orr	lr, r5, lr
   13114:	str	r7, [sp, #32]
   13118:	add	r5, r7, r8
   1311c:	add	r5, r5, r0
   13120:	add	r5, lr, r5
   13124:	add	lr, r5, ip, ror #27
   13128:	ror	r4, r4, #2
   1312c:	ldr	r7, [sp, #12]
   13130:	eor	r6, r6, r7
   13134:	ldr	r9, [sp, #56]	; 0x38
   13138:	eor	r6, r6, r9
   1313c:	ldr	r9, [sp, #24]
   13140:	eor	r6, r6, r9
   13144:	ror	r0, r6, #31
   13148:	orr	r6, ip, r4
   1314c:	and	r3, r6, r2
   13150:	and	r6, ip, r4
   13154:	orr	r6, r3, r6
   13158:	str	r0, [sp, #12]
   1315c:	add	r3, r0, r8
   13160:	add	r1, r3, r1
   13164:	add	r1, r6, r1
   13168:	add	r1, r1, lr, ror #27
   1316c:	ror	r5, ip, #2
   13170:	ldr	r6, [sp, #40]	; 0x28
   13174:	eor	r3, fp, r6
   13178:	ldr	fp, [sp, #8]
   1317c:	eor	r3, r3, fp
   13180:	ldr	fp, [sp, #28]
   13184:	eor	r3, r3, fp
   13188:	ror	ip, r3, #31
   1318c:	orr	r9, lr, r5
   13190:	and	r3, r9, r4
   13194:	and	r9, lr, r5
   13198:	orr	r9, r3, r9
   1319c:	str	ip, [sp, #36]	; 0x24
   131a0:	add	r3, ip, r8
   131a4:	add	r2, r3, r2
   131a8:	add	r9, r9, r2
   131ac:	add	r9, r9, r1, ror #27
   131b0:	ror	lr, lr, #2
   131b4:	ldr	r0, [sp, #16]
   131b8:	eor	r2, r7, r0
   131bc:	ldr	r7, [sp, #52]	; 0x34
   131c0:	eor	r2, r2, r7
   131c4:	ldr	r7, [sp, #32]
   131c8:	eor	r2, r2, r7
   131cc:	ror	r2, r2, #31
   131d0:	orr	ip, r1, lr
   131d4:	and	r3, ip, r5
   131d8:	and	ip, r1, lr
   131dc:	orr	ip, r3, ip
   131e0:	str	r2, [sp, #16]
   131e4:	add	r3, r2, r8
   131e8:	add	r4, r3, r4
   131ec:	add	r4, ip, r4
   131f0:	add	r4, r4, r9, ror #27
   131f4:	ror	r1, r1, #2
   131f8:	ldr	r7, [sp, #44]	; 0x2c
   131fc:	eor	r3, r6, r7
   13200:	ldr	r2, [sp, #4]
   13204:	eor	r3, r3, r2
   13208:	ldr	r6, [sp, #12]
   1320c:	eor	r3, r3, r6
   13210:	ror	r6, r3, #31
   13214:	orr	fp, r9, r1
   13218:	and	ip, fp, lr
   1321c:	and	fp, r9, r1
   13220:	orr	fp, ip, fp
   13224:	str	r6, [sp, #40]	; 0x28
   13228:	add	ip, r6, r8
   1322c:	add	ip, ip, r5
   13230:	add	fp, fp, ip
   13234:	add	fp, fp, r4, ror #27
   13238:	ror	r9, r9, #2
   1323c:	ldr	r5, [sp, #48]	; 0x30
   13240:	eor	r2, r0, r5
   13244:	ldr	r6, [sp, #20]
   13248:	eor	r2, r2, r6
   1324c:	ldr	r0, [sp, #36]	; 0x24
   13250:	eor	r2, r2, r0
   13254:	ror	r2, r2, #31
   13258:	orr	r0, r4, r9
   1325c:	and	r3, r0, r1
   13260:	and	r0, r4, r9
   13264:	orr	r0, r3, r0
   13268:	str	r2, [sp, #44]	; 0x2c
   1326c:	add	r3, r2, r8
   13270:	add	lr, r3, lr
   13274:	add	r0, r0, lr
   13278:	add	r0, r0, fp, ror #27
   1327c:	ror	ip, r4, #2
   13280:	eor	r3, r7, sl
   13284:	ldr	lr, [sp, #24]
   13288:	eor	r3, r3, lr
   1328c:	ldr	r2, [sp, #16]
   13290:	eor	r3, r3, r2
   13294:	ror	r7, r3, #31
   13298:	orr	r3, fp, ip
   1329c:	and	r2, r3, r9
   132a0:	and	r3, fp, ip
   132a4:	orr	r3, r2, r3
   132a8:	add	r2, r7, r8
   132ac:	add	r1, r2, r1
   132b0:	add	r3, r3, r1
   132b4:	add	r3, r3, r0, ror #27
   132b8:	ror	fp, fp, #2
   132bc:	ldr	r1, [sp, #56]	; 0x38
   132c0:	eor	r6, r5, r1
   132c4:	ldr	r5, [sp, #28]
   132c8:	eor	r6, r6, r5
   132cc:	ldr	lr, [sp, #40]	; 0x28
   132d0:	eor	r6, r6, lr
   132d4:	ror	r5, r6, #31
   132d8:	orr	r6, r0, fp
   132dc:	and	r2, r6, ip
   132e0:	and	r6, r0, fp
   132e4:	orr	r6, r2, r6
   132e8:	str	r5, [sp, #48]	; 0x30
   132ec:	add	r2, r5, r8
   132f0:	add	r9, r2, r9
   132f4:	add	r6, r6, r9
   132f8:	add	r6, r6, r3, ror #27
   132fc:	ror	r0, r0, #2
   13300:	ldr	r4, [sp, #8]
   13304:	eor	r5, sl, r4
   13308:	ldr	sl, [sp, #32]
   1330c:	eor	r5, r5, sl
   13310:	ldr	sl, [sp, #44]	; 0x2c
   13314:	eor	r5, r5, sl
   13318:	ror	r9, r5, #31
   1331c:	orr	lr, r3, r0
   13320:	and	r2, lr, fp
   13324:	and	lr, r3, r0
   13328:	orr	lr, r2, lr
   1332c:	str	r9, [sp, #56]	; 0x38
   13330:	add	r2, r9, r8
   13334:	add	ip, r2, ip
   13338:	add	lr, lr, ip
   1333c:	add	lr, lr, r6, ror #27
   13340:	ror	r3, r3, #2
   13344:	ldr	r9, [sp, #52]	; 0x34
   13348:	eor	r1, r1, r9
   1334c:	ldr	sl, [sp, #12]
   13350:	eor	r1, r1, sl
   13354:	str	r7, [sp, #60]	; 0x3c
   13358:	eor	r1, r1, r7
   1335c:	ror	r1, r1, #31
   13360:	orr	r7, r6, r3
   13364:	and	r2, r7, r0
   13368:	and	r7, r6, r3
   1336c:	orr	r7, r2, r7
   13370:	str	r1, [sp, #52]	; 0x34
   13374:	add	r2, r1, r8
   13378:	add	fp, r2, fp
   1337c:	add	r7, r7, fp
   13380:	add	r7, r7, lr, ror #27
   13384:	ror	r6, r6, #2
   13388:	ldr	r1, [sp, #4]
   1338c:	eor	r5, r4, r1
   13390:	ldr	fp, [sp, #36]	; 0x24
   13394:	eor	r5, r5, fp
   13398:	ldr	fp, [sp, #48]	; 0x30
   1339c:	eor	r5, r5, fp
   133a0:	ror	fp, r5, #31
   133a4:	orr	ip, lr, r6
   133a8:	and	r2, ip, r3
   133ac:	and	ip, lr, r6
   133b0:	orr	ip, r2, ip
   133b4:	add	r2, fp, r8
   133b8:	add	r0, r2, r0
   133bc:	add	ip, ip, r0
   133c0:	add	ip, ip, r7, ror #27
   133c4:	ror	lr, lr, #2
   133c8:	ldr	r4, [sp, #20]
   133cc:	eor	r2, r9, r4
   133d0:	ldr	r9, [sp, #16]
   133d4:	eor	r2, r2, r9
   133d8:	ldr	r9, [sp, #56]	; 0x38
   133dc:	eor	r2, r2, r9
   133e0:	ror	sl, r2, #31
   133e4:	orr	r2, r7, lr
   133e8:	and	r1, r2, r6
   133ec:	and	r2, r7, lr
   133f0:	orr	r2, r1, r2
   133f4:	add	r1, sl, r8
   133f8:	add	r3, r1, r3
   133fc:	add	r2, r2, r3
   13400:	add	r2, r2, ip, ror #27
   13404:	ror	r7, r7, #2
   13408:	ldr	r1, [sp, #4]
   1340c:	ldr	r0, [sp, #24]
   13410:	eor	r3, r1, r0
   13414:	ldr	r1, [sp, #40]	; 0x28
   13418:	eor	r3, r3, r1
   1341c:	ldr	r1, [sp, #52]	; 0x34
   13420:	eor	r3, r3, r1
   13424:	ror	r9, r3, #31
   13428:	orr	r3, ip, r7
   1342c:	and	r1, r3, lr
   13430:	and	r3, ip, r7
   13434:	orr	r3, r1, r3
   13438:	str	r9, [sp, #20]
   1343c:	add	r1, r9, r8
   13440:	add	r6, r1, r6
   13444:	add	r3, r3, r6
   13448:	add	r3, r3, r2, ror #27
   1344c:	ror	ip, ip, #2
   13450:	ldr	r6, [sp, #28]
   13454:	eor	r5, r4, r6
   13458:	ldr	r9, [sp, #44]	; 0x2c
   1345c:	eor	r5, r5, r9
   13460:	eor	r5, r5, fp
   13464:	ror	r4, r5, #31
   13468:	orr	r9, r2, ip
   1346c:	and	r1, r9, r7
   13470:	and	r9, r2, ip
   13474:	orr	r9, r1, r9
   13478:	str	r4, [sp, #24]
   1347c:	add	r1, r4, r8
   13480:	add	lr, r1, lr
   13484:	add	r9, r9, lr
   13488:	add	r9, r9, r3, ror #27
   1348c:	ror	r2, r2, #2
   13490:	ldr	r5, [sp, #32]
   13494:	eor	r4, r0, r5
   13498:	ldr	lr, [sp, #60]	; 0x3c
   1349c:	eor	r4, r4, lr
   134a0:	eor	r4, r4, sl
   134a4:	ror	lr, r4, #31
   134a8:	orr	r4, r3, r2
   134ac:	and	r1, r4, ip
   134b0:	and	r4, r3, r2
   134b4:	orr	r4, r1, r4
   134b8:	str	lr, [sp, #28]
   134bc:	add	r1, lr, r8
   134c0:	add	r7, r1, r7
   134c4:	add	r4, r4, r7
   134c8:	add	r4, r4, r9, ror #27
   134cc:	ror	r3, r3, #2
   134d0:	ldr	r7, [sp, #12]
   134d4:	eor	lr, r6, r7
   134d8:	ldr	r6, [sp, #48]	; 0x30
   134dc:	eor	lr, lr, r6
   134e0:	ldr	r6, [sp, #20]
   134e4:	eor	lr, lr, r6
   134e8:	ror	r0, lr, #31
   134ec:	orr	lr, r9, r3
   134f0:	and	r1, lr, r2
   134f4:	and	lr, r9, r3
   134f8:	orr	lr, r1, lr
   134fc:	str	r0, [sp, #4]
   13500:	add	r1, r0, r8
   13504:	add	ip, r1, ip
   13508:	add	lr, lr, ip
   1350c:	add	lr, lr, r4, ror #27
   13510:	ror	r9, r9, #2
   13514:	ldr	r0, [sp, #36]	; 0x24
   13518:	eor	ip, r5, r0
   1351c:	ldr	r5, [sp, #56]	; 0x38
   13520:	eor	ip, ip, r5
   13524:	ldr	r5, [sp, #24]
   13528:	eor	ip, ip, r5
   1352c:	ror	r5, ip, #31
   13530:	orr	r1, r4, r9
   13534:	and	r1, r1, r3
   13538:	and	r6, r4, r9
   1353c:	orr	r6, r1, r6
   13540:	str	r5, [sp, #12]
   13544:	add	r8, r5, r8
   13548:	add	r8, r8, r2
   1354c:	add	r6, r6, r8
   13550:	add	r6, r6, lr, ror #27
   13554:	ror	r4, r4, #2
   13558:	ldr	ip, [sp, #16]
   1355c:	eor	r1, r7, ip
   13560:	ldr	r8, [sp, #52]	; 0x34
   13564:	eor	r1, r1, r8
   13568:	ldr	r2, [sp, #28]
   1356c:	eor	r1, r1, r2
   13570:	ror	r2, r1, #31
   13574:	eor	r5, r9, r4
   13578:	eor	r5, r5, lr
   1357c:	movw	r8, #49622	; 0xc1d6
   13580:	movt	r8, #51810	; 0xca62
   13584:	str	r2, [sp, #8]
   13588:	add	r2, r2, r8
   1358c:	add	r3, r2, r3
   13590:	add	r5, r5, r3
   13594:	add	r5, r5, r6, ror #27
   13598:	ror	lr, lr, #2
   1359c:	ldr	r7, [sp, #40]	; 0x28
   135a0:	eor	r3, r0, r7
   135a4:	eor	r3, r3, fp
   135a8:	ldr	r0, [sp, #4]
   135ac:	eor	r3, r3, r0
   135b0:	ror	r1, r3, #31
   135b4:	eor	r0, r4, lr
   135b8:	eor	r0, r0, r6
   135bc:	str	r1, [sp, #16]
   135c0:	add	r3, r1, r8
   135c4:	add	r9, r3, r9
   135c8:	add	r0, r0, r9
   135cc:	add	r0, r0, r5, ror #27
   135d0:	ror	r6, r6, #2
   135d4:	mov	r2, ip
   135d8:	ldr	r9, [sp, #44]	; 0x2c
   135dc:	eor	r2, r2, r9
   135e0:	eor	r2, r2, sl
   135e4:	ldr	r1, [sp, #12]
   135e8:	eor	r2, r2, r1
   135ec:	ror	r2, r2, #31
   135f0:	eor	r1, lr, r6
   135f4:	eor	r1, r1, r5
   135f8:	str	r2, [sp, #32]
   135fc:	add	r3, r2, r8
   13600:	add	r4, r3, r4
   13604:	add	r1, r1, r4
   13608:	add	r1, r1, r0, ror #27
   1360c:	ror	r5, r5, #2
   13610:	ldr	r4, [sp, #60]	; 0x3c
   13614:	eor	r3, r7, r4
   13618:	ldr	r7, [sp, #20]
   1361c:	eor	r3, r3, r7
   13620:	ldr	r2, [sp, #8]
   13624:	eor	r3, r3, r2
   13628:	ror	r7, r3, #31
   1362c:	mov	ip, r7
   13630:	eor	r7, r6, r5
   13634:	eor	r7, r7, r0
   13638:	str	ip, [sp, #36]	; 0x24
   1363c:	add	r3, ip, r8
   13640:	add	lr, r3, lr
   13644:	add	r7, r7, lr
   13648:	add	r7, r7, r1, ror #27
   1364c:	ror	r0, r0, #2
   13650:	ldr	lr, [sp, #48]	; 0x30
   13654:	eor	r2, r9, lr
   13658:	ldr	r9, [sp, #24]
   1365c:	eor	r2, r2, r9
   13660:	ldr	ip, [sp, #16]
   13664:	eor	r2, r2, ip
   13668:	ror	r9, r2, #31
   1366c:	eor	r2, r5, r0
   13670:	eor	r2, r2, r1
   13674:	str	r9, [sp, #40]	; 0x28
   13678:	add	r3, r9, r8
   1367c:	add	r6, r3, r6
   13680:	add	r2, r2, r6
   13684:	add	r2, r2, r7, ror #27
   13688:	ror	r1, r1, #2
   1368c:	ldr	r9, [sp, #56]	; 0x38
   13690:	eor	r3, r4, r9
   13694:	ldr	r4, [sp, #28]
   13698:	eor	r3, r3, r4
   1369c:	ldr	r6, [sp, #32]
   136a0:	eor	r3, r3, r6
   136a4:	ror	r6, r3, #31
   136a8:	eor	r3, r0, r1
   136ac:	eor	r3, r3, r7
   136b0:	str	r6, [sp, #44]	; 0x2c
   136b4:	add	r8, r6, r8
   136b8:	add	r8, r8, r5
   136bc:	add	r3, r3, r8
   136c0:	add	r3, r3, r2, ror #27
   136c4:	ror	r7, r7, #2
   136c8:	ldr	r8, [sp, #52]	; 0x34
   136cc:	eor	r6, lr, r8
   136d0:	ldr	r5, [sp, #4]
   136d4:	eor	r6, r6, r5
   136d8:	ldr	lr, [sp, #36]	; 0x24
   136dc:	eor	r6, r6, lr
   136e0:	ror	r6, r6, #31
   136e4:	eor	ip, r1, r7
   136e8:	eor	ip, ip, r2
   136ec:	movw	lr, #49622	; 0xc1d6
   136f0:	movt	lr, #51810	; 0xca62
   136f4:	add	lr, r6, lr
   136f8:	add	lr, lr, r0
   136fc:	add	ip, ip, lr
   13700:	add	ip, ip, r3, ror #27
   13704:	ror	r2, r2, #2
   13708:	eor	r5, r9, fp
   1370c:	ldr	lr, [sp, #12]
   13710:	eor	r5, r5, lr
   13714:	ldr	r9, [sp, #40]	; 0x28
   13718:	eor	r5, r5, r9
   1371c:	ror	r5, r5, #31
   13720:	eor	r4, r7, r2
   13724:	eor	r4, r4, r3
   13728:	movw	r0, #49622	; 0xc1d6
   1372c:	movt	r0, #51810	; 0xca62
   13730:	str	r5, [sp, #48]	; 0x30
   13734:	add	lr, r5, r0
   13738:	add	r1, lr, r1
   1373c:	add	r4, r4, r1
   13740:	add	r4, r4, ip, ror #27
   13744:	ror	r3, r3, #2
   13748:	eor	r1, r8, sl
   1374c:	ldr	r5, [sp, #8]
   13750:	eor	r1, r1, r5
   13754:	ldr	r8, [sp, #44]	; 0x2c
   13758:	eor	r1, r1, r8
   1375c:	ror	r1, r1, #31
   13760:	eor	lr, r2, r3
   13764:	eor	lr, lr, ip
   13768:	add	r5, r1, r0
   1376c:	add	r7, r5, r7
   13770:	add	lr, lr, r7
   13774:	add	lr, lr, r4, ror #27
   13778:	ror	ip, ip, #2
   1377c:	ldr	r7, [sp, #20]
   13780:	eor	r5, fp, r7
   13784:	ldr	fp, [sp, #16]
   13788:	eor	r5, r5, fp
   1378c:	eor	r5, r5, r6
   13790:	ror	r8, r5, #31
   13794:	eor	fp, r3, ip
   13798:	eor	fp, fp, r4
   1379c:	str	r8, [sp, #20]
   137a0:	add	r5, r8, r0
   137a4:	add	r2, r5, r2
   137a8:	add	fp, fp, r2
   137ac:	add	fp, fp, lr, ror #27
   137b0:	ror	r4, r4, #2
   137b4:	ldr	r8, [sp, #24]
   137b8:	eor	r2, sl, r8
   137bc:	ldr	r9, [sp, #32]
   137c0:	eor	r2, r2, r9
   137c4:	ldr	sl, [sp, #48]	; 0x30
   137c8:	eor	r2, r2, sl
   137cc:	ror	r2, r2, #31
   137d0:	eor	sl, ip, r4
   137d4:	eor	sl, sl, lr
   137d8:	str	r2, [sp, #24]
   137dc:	add	r5, r2, r0
   137e0:	add	r3, r5, r3
   137e4:	add	sl, sl, r3
   137e8:	add	sl, sl, fp, ror #27
   137ec:	ror	lr, lr, #2
   137f0:	ldr	r2, [sp, #28]
   137f4:	eor	r3, r7, r2
   137f8:	ldr	r7, [sp, #36]	; 0x24
   137fc:	eor	r3, r3, r7
   13800:	eor	r3, r3, r1
   13804:	ror	r3, r3, #31
   13808:	eor	r9, r4, lr
   1380c:	eor	r9, r9, fp
   13810:	add	r5, r3, r0
   13814:	add	ip, r5, ip
   13818:	add	r9, r9, ip
   1381c:	add	r9, r9, sl, ror #27
   13820:	ror	fp, fp, #2
   13824:	ldr	r7, [sp, #4]
   13828:	eor	r5, r8, r7
   1382c:	ldr	r8, [sp, #40]	; 0x28
   13830:	eor	r5, r5, r8
   13834:	ldr	r8, [sp, #20]
   13838:	eor	r5, r5, r8
   1383c:	ror	r5, r5, #31
   13840:	eor	r8, lr, fp
   13844:	eor	r8, r8, sl
   13848:	add	ip, r5, r0
   1384c:	add	r4, ip, r4
   13850:	add	r8, r8, r4
   13854:	add	r8, r8, r9, ror #27
   13858:	ror	sl, sl, #2
   1385c:	mov	r4, r2
   13860:	ldr	r2, [sp, #12]
   13864:	eor	r4, r4, r2
   13868:	ldr	r7, [sp, #44]	; 0x2c
   1386c:	eor	r4, r4, r7
   13870:	ldr	ip, [sp, #24]
   13874:	eor	r4, r4, ip
   13878:	ror	r4, r4, #31
   1387c:	eor	r7, fp, sl
   13880:	eor	r7, r7, r9
   13884:	add	ip, r4, r0
   13888:	add	lr, ip, lr
   1388c:	add	r7, r7, lr
   13890:	add	r7, r7, r8, ror #27
   13894:	ror	r9, r9, #2
   13898:	ldr	lr, [sp, #4]
   1389c:	ldr	ip, [sp, #8]
   138a0:	eor	lr, lr, ip
   138a4:	eor	lr, lr, r6
   138a8:	eor	lr, lr, r3
   138ac:	ror	lr, lr, #31
   138b0:	eor	r6, sl, r9
   138b4:	eor	r6, r6, r8
   138b8:	add	ip, lr, r0
   138bc:	add	fp, ip, fp
   138c0:	add	r6, r6, fp
   138c4:	add	r6, r6, r7, ror #27
   138c8:	ror	r8, r8, #2
   138cc:	mov	fp, r2
   138d0:	ldr	r2, [sp, #16]
   138d4:	eor	ip, fp, r2
   138d8:	ldr	fp, [sp, #48]	; 0x30
   138dc:	eor	ip, ip, fp
   138e0:	eor	ip, ip, r5
   138e4:	ror	ip, ip, #31
   138e8:	eor	r5, r9, r8
   138ec:	eor	r5, r5, r7
   138f0:	add	fp, ip, r0
   138f4:	add	sl, fp, sl
   138f8:	add	r5, r5, sl
   138fc:	add	r5, r5, r6, ror #27
   13900:	ror	r7, r7, #2
   13904:	ldr	sl, [sp, #8]
   13908:	ldr	fp, [sp, #32]
   1390c:	eor	sl, sl, fp
   13910:	eor	r1, r1, sl
   13914:	eor	r4, r4, r1
   13918:	ror	r4, r4, #31
   1391c:	eor	r1, r8, r7
   13920:	eor	r1, r1, r6
   13924:	add	sl, r4, r0
   13928:	add	r9, sl, r9
   1392c:	add	r9, r1, r9
   13930:	add	r9, r9, r5, ror #27
   13934:	ror	r6, r6, #2
   13938:	mov	r1, r2
   1393c:	ldr	sl, [sp, #36]	; 0x24
   13940:	eor	r1, r1, sl
   13944:	ldr	r2, [sp, #20]
   13948:	eor	r1, r1, r2
   1394c:	eor	r1, r1, lr
   13950:	add	r1, r0, r1, ror #31
   13954:	add	r8, r1, r8
   13958:	eor	r1, r7, r6
   1395c:	eor	r1, r1, r5
   13960:	add	r8, r8, r1
   13964:	add	r8, r8, r9, ror #27
   13968:	ror	r5, r5, #2
   1396c:	ldr	r1, [sp, #40]	; 0x28
   13970:	eor	r1, fp, r1
   13974:	ldr	r2, [sp, #24]
   13978:	eor	r2, r2, r1
   1397c:	eor	r2, r2, ip
   13980:	add	r2, r0, r2, ror #31
   13984:	add	r7, r2, r7
   13988:	eor	r2, r6, r5
   1398c:	eor	r2, r2, r9
   13990:	add	r7, r7, r2
   13994:	add	r7, r7, r8, ror #27
   13998:	ror	r9, r9, #2
   1399c:	ldr	r2, [sp, #44]	; 0x2c
   139a0:	eor	r2, sl, r2
   139a4:	eor	r3, r3, r2
   139a8:	eor	r4, r4, r3
   139ac:	ldr	lr, [sp, #64]	; 0x40
   139b0:	add	r0, lr, r0
   139b4:	add	r4, r0, r4, ror #31
   139b8:	add	r6, r4, r6
   139bc:	eor	r0, r5, r9
   139c0:	eor	r0, r0, r8
   139c4:	add	r6, r6, r0
   139c8:	add	r6, r6, r7, ror #27
   139cc:	ldr	r3, [sp, #84]	; 0x54
   139d0:	str	r6, [r3]
   139d4:	ldr	lr, [sp, #68]	; 0x44
   139d8:	add	r7, lr, r7
   139dc:	str	r7, [r3, #4]
   139e0:	ldr	ip, [sp, #72]	; 0x48
   139e4:	add	r8, ip, r8, ror #2
   139e8:	str	r8, [r3, #8]
   139ec:	ldr	r4, [sp, #76]	; 0x4c
   139f0:	add	r9, r4, r9
   139f4:	str	r9, [r3, #12]
   139f8:	ldr	r6, [sp, #80]	; 0x50
   139fc:	add	r5, r6, r5
   13a00:	str	r5, [r3, #16]
   13a04:	mov	r0, #0
   13a08:	add	sp, sp, #156	; 0x9c
   13a0c:	ldrd	r4, [sp]
   13a10:	ldrd	r6, [sp, #8]
   13a14:	ldrd	r8, [sp, #16]
   13a18:	ldrd	sl, [sp, #24]
   13a1c:	add	sp, sp, #32
   13a20:	pop	{pc}		; (ldr pc, [sp], #4)
   13a24:	movw	r3, #8961	; 0x2301
   13a28:	movt	r3, #26437	; 0x6745
   13a2c:	str	r3, [r0]
   13a30:	movw	r3, #43913	; 0xab89
   13a34:	movt	r3, #61389	; 0xefcd
   13a38:	str	r3, [r0, #4]
   13a3c:	movw	r3, #56574	; 0xdcfe
   13a40:	movt	r3, #39098	; 0x98ba
   13a44:	str	r3, [r0, #8]
   13a48:	movw	r3, #21622	; 0x5476
   13a4c:	movt	r3, #4146	; 0x1032
   13a50:	str	r3, [r0, #12]
   13a54:	movw	r3, #57840	; 0xe1f0
   13a58:	movt	r3, #50130	; 0xc3d2
   13a5c:	str	r3, [r0, #16]
   13a60:	mov	r2, #0
   13a64:	mov	r3, #0
   13a68:	strd	r2, [r0, #24]
   13a6c:	bx	lr
   13a70:	strd	r4, [sp, #-32]!	; 0xffffffe0
   13a74:	strd	r6, [sp, #8]
   13a78:	str	r8, [sp, #16]
   13a7c:	strd	sl, [sp, #20]
   13a80:	str	lr, [sp, #28]
   13a84:	mov	r5, r0
   13a88:	mov	r8, r1
   13a8c:	mov	r6, r2
   13a90:	ldrd	sl, [r0, #24]
   13a94:	ubfx	r7, sl, #3, #6
   13a98:	lsl	r1, r2, #3
   13a9c:	adds	r2, sl, r1
   13aa0:	adc	r3, fp, #0
   13aa4:	strd	r2, [r0, #24]
   13aa8:	add	r3, r7, r6
   13aac:	cmp	r3, #63	; 0x3f
   13ab0:	movls	r1, #0
   13ab4:	bhi	13ae4 <rb_base64_encode@plt+0x2c1c>
   13ab8:	add	r0, r7, #32
   13abc:	sub	r2, r6, r1
   13ac0:	add	r1, r8, r1
   13ac4:	add	r0, r5, r0
   13ac8:	bl	10d9c <memcpy@plt>
   13acc:	ldrd	r4, [sp]
   13ad0:	ldrd	r6, [sp, #8]
   13ad4:	ldr	r8, [sp, #16]
   13ad8:	ldrd	sl, [sp, #20]
   13adc:	add	sp, sp, #28
   13ae0:	pop	{pc}		; (ldr pc, [sp], #4)
   13ae4:	rsb	r4, r7, #64	; 0x40
   13ae8:	add	r0, r7, #32
   13aec:	mov	r2, r4
   13af0:	mov	r1, r8
   13af4:	add	r0, r5, r0
   13af8:	bl	10d9c <memcpy@plt>
   13afc:	add	r1, r5, #32
   13b00:	mov	r0, r5
   13b04:	bl	1275c <rb_base64_encode@plt+0x1894>
   13b08:	rsb	r7, r7, #127	; 0x7f
   13b0c:	cmp	r6, r7
   13b10:	bls	13b3c <rb_base64_encode@plt+0x2c74>
   13b14:	add	r1, r8, r4
   13b18:	mov	r0, r5
   13b1c:	bl	1275c <rb_base64_encode@plt+0x1894>
   13b20:	add	r1, r4, #64	; 0x40
   13b24:	add	r3, r4, #127	; 0x7f
   13b28:	mov	r4, r1
   13b2c:	cmp	r6, r3
   13b30:	bhi	13b14 <rb_base64_encode@plt+0x2c4c>
   13b34:	mov	r7, #0
   13b38:	b	13ab8 <rb_base64_encode@plt+0x2bf0>
   13b3c:	mov	r1, r4
   13b40:	mov	r7, #0
   13b44:	b	13ab8 <rb_base64_encode@plt+0x2bf0>
   13b48:	strd	r4, [sp, #-32]!	; 0xffffffe0
   13b4c:	strd	r6, [sp, #8]
   13b50:	strd	r8, [sp, #16]
   13b54:	str	sl, [sp, #24]
   13b58:	str	lr, [sp, #28]
   13b5c:	sub	sp, sp, #8
   13b60:	mov	r4, r0
   13b64:	mov	r5, r1
   13b68:	ldr	r3, [r0, #24]
   13b6c:	ldr	r2, [r0, #28]
   13b70:	lsr	r1, r2, #24
   13b74:	strb	r1, [sp]
   13b78:	lsr	r1, r2, #16
   13b7c:	strb	r1, [sp, #1]
   13b80:	lsr	r1, r2, #8
   13b84:	strb	r1, [sp, #2]
   13b88:	strb	r2, [sp, #3]
   13b8c:	lsr	r2, r3, #24
   13b90:	strb	r2, [sp, #4]
   13b94:	lsr	r2, r3, #16
   13b98:	strb	r2, [sp, #5]
   13b9c:	lsr	r2, r3, #8
   13ba0:	strb	r2, [sp, #6]
   13ba4:	strb	r3, [sp, #7]
   13ba8:	mov	r2, #1
   13bac:	movw	r1, #16268	; 0x3f8c
   13bb0:	movt	r1, #1
   13bb4:	bl	13a70 <rb_base64_encode@plt+0x2ba8>
   13bb8:	ldr	r1, [r4, #24]
   13bbc:	and	r2, r1, #504	; 0x1f8
   13bc0:	mov	r3, #0
   13bc4:	cmp	r3, #0
   13bc8:	cmpeq	r2, #448	; 0x1c0
   13bcc:	beq	13c04 <rb_base64_encode@plt+0x2d3c>
   13bd0:	movw	r8, #16264	; 0x3f88
   13bd4:	movt	r8, #1
   13bd8:	mov	sl, #1
   13bdc:	mov	r9, r3
   13be0:	mov	r2, sl
   13be4:	mov	r1, r8
   13be8:	mov	r0, r4
   13bec:	bl	13a70 <rb_base64_encode@plt+0x2ba8>
   13bf0:	ldr	r3, [r4, #24]
   13bf4:	and	r6, r3, #504	; 0x1f8
   13bf8:	cmp	r9, #0
   13bfc:	cmpeq	r6, #448	; 0x1c0
   13c00:	bne	13be0 <rb_base64_encode@plt+0x2d18>
   13c04:	mov	r2, #8
   13c08:	mov	r1, sp
   13c0c:	mov	r0, r4
   13c10:	bl	13a70 <rb_base64_encode@plt+0x2ba8>
   13c14:	sub	r1, r5, #1
   13c18:	mov	r2, #0
   13c1c:	lsr	r0, r2, #2
   13c20:	mvn	r3, r2
   13c24:	and	r3, r3, #3
   13c28:	lsl	r3, r3, #3
   13c2c:	ldr	r0, [r4, r0, lsl #2]
   13c30:	lsr	r3, r0, r3
   13c34:	strb	r3, [r1, #1]!
   13c38:	add	r2, r2, #1
   13c3c:	cmp	r2, #20
   13c40:	bne	13c1c <rb_base64_encode@plt+0x2d54>
   13c44:	mov	r2, #96	; 0x60
   13c48:	mov	r1, #0
   13c4c:	mov	r0, r4
   13c50:	bl	10d0c <memset@plt>
   13c54:	add	sp, sp, #8
   13c58:	ldrd	r4, [sp]
   13c5c:	ldrd	r6, [sp, #8]
   13c60:	ldrd	r8, [sp, #16]
   13c64:	ldr	sl, [sp, #24]
   13c68:	add	sp, sp, #28
   13c6c:	pop	{pc}		; (ldr pc, [sp], #4)
   13c70:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13c74:	mov	r7, r0
   13c78:	ldr	r6, [pc, #72]	; 13cc8 <rb_base64_encode@plt+0x2e00>
   13c7c:	ldr	r5, [pc, #72]	; 13ccc <rb_base64_encode@plt+0x2e04>
   13c80:	add	r6, pc, r6
   13c84:	add	r5, pc, r5
   13c88:	sub	r6, r6, r5
   13c8c:	mov	r8, r1
   13c90:	mov	r9, r2
   13c94:	bl	10c38 <open@plt-0x20>
   13c98:	asrs	r6, r6, #2
   13c9c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13ca0:	mov	r4, #0
   13ca4:	add	r4, r4, #1
   13ca8:	ldr	r3, [r5], #4
   13cac:	mov	r2, r9
   13cb0:	mov	r1, r8
   13cb4:	mov	r0, r7
   13cb8:	blx	r3
   13cbc:	cmp	r6, r4
   13cc0:	bne	13ca4 <rb_base64_encode@plt+0x2ddc>
   13cc4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13cc8:	andeq	r1, r1, r4, ror r2
   13ccc:	andeq	r1, r1, ip, ror #4
   13cd0:	bx	lr

Disassembly of section .fini:

00013cd4 <.fini>:
   13cd4:	push	{r3, lr}
   13cd8:	pop	{r3, pc}
