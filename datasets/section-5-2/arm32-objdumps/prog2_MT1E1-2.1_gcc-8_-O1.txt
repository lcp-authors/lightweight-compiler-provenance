
../repos/prog2/MT1E1-2.1:     file format elf32-littlearm


Disassembly of section .init:

00010ae4 <.init>:
   10ae4:	push	{r3, lr}
   10ae8:	bl	10be8 <_start@@Base+0x3c>
   10aec:	pop	{r3, pc}

Disassembly of section .plt:

00010af0 <calloc@plt-0x14>:
   10af0:	push	{lr}		; (str lr, [sp, #-4]!)
   10af4:	ldr	lr, [pc, #4]	; 10b00 <calloc@plt-0x4>
   10af8:	add	lr, pc, lr
   10afc:	ldr	pc, [lr, #8]!
   10b00:	andeq	r1, r1, r0, lsl #10

00010b04 <calloc@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #69632	; 0x11000
   10b0c:	ldr	pc, [ip, #1280]!	; 0x500

00010b10 <strcmp@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #69632	; 0x11000
   10b18:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b1c <free@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #69632	; 0x11000
   10b24:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b28 <realloc@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #69632	; 0x11000
   10b30:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b34 <fwrite@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #69632	; 0x11000
   10b3c:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b40 <strcpy@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #69632	; 0x11000
   10b48:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b4c <puts@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #69632	; 0x11000
   10b54:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b58 <malloc@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #69632	; 0x11000
   10b60:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b64 <__libc_start_main@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #69632	; 0x11000
   10b6c:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b70 <__gmon_start__@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #69632	; 0x11000
   10b78:	ldr	pc, [ip, #1208]!	; 0x4b8

00010b7c <strlen@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #69632	; 0x11000
   10b84:	ldr	pc, [ip, #1200]!	; 0x4b0

00010b88 <fprintf@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #69632	; 0x11000
   10b90:	ldr	pc, [ip, #1192]!	; 0x4a8

00010b94 <sprintf@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #69632	; 0x11000
   10b9c:	ldr	pc, [ip, #1184]!	; 0x4a0

00010ba0 <abort@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #69632	; 0x11000
   10ba8:	ldr	pc, [ip, #1176]!	; 0x498

Disassembly of section .text:

00010bac <_start@@Base>:
   10bac:	mov	fp, #0
   10bb0:	mov	lr, #0
   10bb4:	pop	{r1}		; (ldr r1, [sp], #4)
   10bb8:	mov	r2, sp
   10bbc:	push	{r2}		; (str r2, [sp, #-4]!)
   10bc0:	push	{r0}		; (str r0, [sp, #-4]!)
   10bc4:	ldr	ip, [pc, #16]	; 10bdc <_start@@Base+0x30>
   10bc8:	push	{ip}		; (str ip, [sp, #-4]!)
   10bcc:	ldr	r0, [pc, #12]	; 10be0 <_start@@Base+0x34>
   10bd0:	ldr	r3, [pc, #12]	; 10be4 <_start@@Base+0x38>
   10bd4:	bl	10b64 <__libc_start_main@plt>
   10bd8:	bl	10ba0 <abort@plt>
   10bdc:	andeq	r1, r1, r4, ror #22
   10be0:	strdeq	r0, [r1], -r4
   10be4:	andeq	r1, r1, r4, lsl #22
   10be8:	ldr	r3, [pc, #20]	; 10c04 <_start@@Base+0x58>
   10bec:	ldr	r2, [pc, #20]	; 10c08 <_start@@Base+0x5c>
   10bf0:	add	r3, pc, r3
   10bf4:	ldr	r2, [r3, r2]
   10bf8:	cmp	r2, #0
   10bfc:	bxeq	lr
   10c00:	b	10b70 <__gmon_start__@plt>
   10c04:	andeq	r1, r1, r8, lsl #8
   10c08:	andeq	r0, r0, r4, asr #32
   10c0c:	ldr	r0, [pc, #24]	; 10c2c <_start@@Base+0x80>
   10c10:	ldr	r3, [pc, #24]	; 10c30 <_start@@Base+0x84>
   10c14:	cmp	r3, r0
   10c18:	bxeq	lr
   10c1c:	ldr	r3, [pc, #16]	; 10c34 <_start@@Base+0x88>
   10c20:	cmp	r3, #0
   10c24:	bxeq	lr
   10c28:	bx	r3
   10c2c:	muleq	r2, r8, r1
   10c30:	muleq	r2, r8, r1
   10c34:	andeq	r0, r0, r0
   10c38:	ldr	r0, [pc, #36]	; 10c64 <_start@@Base+0xb8>
   10c3c:	ldr	r1, [pc, #36]	; 10c68 <_start@@Base+0xbc>
   10c40:	sub	r1, r1, r0
   10c44:	asr	r1, r1, #2
   10c48:	add	r1, r1, r1, lsr #31
   10c4c:	asrs	r1, r1, #1
   10c50:	bxeq	lr
   10c54:	ldr	r3, [pc, #16]	; 10c6c <_start@@Base+0xc0>
   10c58:	cmp	r3, #0
   10c5c:	bxeq	lr
   10c60:	bx	r3
   10c64:	muleq	r2, r8, r1
   10c68:	muleq	r2, r8, r1
   10c6c:	andeq	r0, r0, r0
   10c70:	push	{r4, lr}
   10c74:	ldr	r4, [pc, #24]	; 10c94 <_start@@Base+0xe8>
   10c78:	ldrb	r3, [r4]
   10c7c:	cmp	r3, #0
   10c80:	popne	{r4, pc}
   10c84:	bl	10c0c <_start@@Base+0x60>
   10c88:	mov	r3, #1
   10c8c:	strb	r3, [r4]
   10c90:	pop	{r4, pc}
   10c94:	muleq	r2, ip, r1
   10c98:	b	10c38 <_start@@Base+0x8c>

00010c9c <tira_carta@@Base>:
   10c9c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10ca0:	strd	r6, [sp, #8]
   10ca4:	str	r8, [sp, #16]
   10ca8:	str	lr, [sp, #20]
   10cac:	mov	r7, r0
   10cb0:	ldr	r3, [r1]
   10cb4:	ldr	r0, [r3]
   10cb8:	ldr	r4, [r3, #4]
   10cbc:	ldr	r8, [r7]
   10cc0:	ldr	r6, [r8]
   10cc4:	mov	r5, #0
   10cc8:	mov	r1, r6
   10ccc:	bl	10b10 <strcmp@plt>
   10cd0:	cmp	r0, #0
   10cd4:	beq	10ce8 <tira_carta@@Base+0x4c>
   10cd8:	ldr	r0, [r4]
   10cdc:	ldr	r4, [r4, #4]
   10ce0:	add	r5, r5, #1
   10ce4:	b	10cc8 <tira_carta@@Base+0x2c>
   10ce8:	mov	r1, r8
   10cec:	mov	r0, r7
   10cf0:	bl	11898 <lista_remove@@Base>
   10cf4:	mov	r0, r5
   10cf8:	ldrd	r4, [sp]
   10cfc:	ldrd	r6, [sp, #8]
   10d00:	ldr	r8, [sp, #16]
   10d04:	add	sp, sp, #20
   10d08:	pop	{pc}		; (ldr pc, [sp], #4)

00010d0c <faz_jogada@@Base>:
   10d0c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   10d10:	strd	r6, [sp, #8]
   10d14:	strd	r8, [sp, #16]
   10d18:	str	sl, [sp, #24]
   10d1c:	str	lr, [sp, #28]
   10d20:	mov	r6, r0
   10d24:	mov	r9, r1
   10d28:	mov	sl, r2
   10d2c:	ldr	r4, [r0]
   10d30:	lsl	r0, r4, #2
   10d34:	bl	10b58 <malloc@plt>
   10d38:	mov	r7, r0
   10d3c:	cmp	r4, #0
   10d40:	ble	10dcc <faz_jogada@@Base+0xc0>
   10d44:	sub	r5, r0, #4
   10d48:	mov	r8, r5
   10d4c:	mov	r4, #0
   10d50:	mov	r1, sl
   10d54:	mov	r0, r9
   10d58:	bl	10c9c <tira_carta@@Base>
   10d5c:	str	r0, [r8, #4]!
   10d60:	add	r4, r4, #1
   10d64:	ldr	r0, [r6]
   10d68:	cmp	r0, r4
   10d6c:	bgt	10d50 <faz_jogada@@Base+0x44>
   10d70:	cmp	r0, #0
   10d74:	ble	10dd4 <faz_jogada@@Base+0xc8>
   10d78:	mvn	r4, #0
   10d7c:	mov	r2, r4
   10d80:	mov	r3, #0
   10d84:	ldr	r1, [r5, #4]!
   10d88:	cmp	r1, r2
   10d8c:	movgt	r4, r3
   10d90:	cmp	r1, r2
   10d94:	movge	r2, r1
   10d98:	add	r3, r3, #1
   10d9c:	cmp	r0, r3
   10da0:	bne	10d84 <faz_jogada@@Base+0x78>
   10da4:	mov	r0, r7
   10da8:	bl	10b1c <free@plt>
   10dac:	ldr	r3, [r6, #8]
   10db0:	ldr	r0, [r3, r4, lsl #2]
   10db4:	ldrd	r4, [sp]
   10db8:	ldrd	r6, [sp, #8]
   10dbc:	ldrd	r8, [sp, #16]
   10dc0:	ldr	sl, [sp, #24]
   10dc4:	add	sp, sp, #28
   10dc8:	pop	{pc}		; (ldr pc, [sp], #4)
   10dcc:	mvn	r4, #0
   10dd0:	b	10da4 <faz_jogada@@Base+0x98>
   10dd4:	mvn	r4, #0
   10dd8:	b	10da4 <faz_jogada@@Base+0x98>

00010ddc <numero_vitorias@@Base>:
   10ddc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10de0:	strd	r6, [sp, #8]
   10de4:	str	r8, [sp, #16]
   10de8:	str	lr, [sp, #20]
   10dec:	ldr	r5, [r0]
   10df0:	cmp	r5, #0
   10df4:	ble	10e3c <numero_vitorias@@Base+0x60>
   10df8:	mov	r6, r1
   10dfc:	ldr	r4, [r0, #8]
   10e00:	add	r5, r4, r5, lsl #2
   10e04:	mov	r7, #0
   10e08:	ldr	r1, [r4], #4
   10e0c:	mov	r0, r6
   10e10:	bl	10b10 <strcmp@plt>
   10e14:	cmp	r0, #0
   10e18:	addeq	r7, r7, #1
   10e1c:	cmp	r4, r5
   10e20:	bne	10e08 <numero_vitorias@@Base+0x2c>
   10e24:	mov	r0, r7
   10e28:	ldrd	r4, [sp]
   10e2c:	ldrd	r6, [sp, #8]
   10e30:	ldr	r8, [sp, #16]
   10e34:	add	sp, sp, #20
   10e38:	pop	{pc}		; (ldr pc, [sp], #4)
   10e3c:	mov	r7, #0
   10e40:	b	10e24 <numero_vitorias@@Base+0x48>

00010e44 <insere_carta@@Base>:
   10e44:	str	r4, [sp, #-8]!
   10e48:	str	lr, [sp, #4]
   10e4c:	sub	sp, sp, #8
   10e50:	mov	r4, r0
   10e54:	cmp	r1, #7
   10e58:	ble	10ea4 <insere_carta@@Base+0x60>
   10e5c:	cmp	r1, #8
   10e60:	beq	10ed8 <insere_carta@@Base+0x94>
   10e64:	cmp	r1, #9
   10e68:	moveq	r3, #74	; 0x4a
   10e6c:	strheq	r3, [sp, #4]
   10e70:	beq	10eb8 <insere_carta@@Base+0x74>
   10e74:	cmp	r1, #10
   10e78:	moveq	r3, #81	; 0x51
   10e7c:	strheq	r3, [sp, #4]
   10e80:	beq	10eb8 <insere_carta@@Base+0x74>
   10e84:	cmp	r1, #11
   10e88:	moveq	r3, #75	; 0x4b
   10e8c:	strheq	r3, [sp, #4]
   10e90:	beq	10eb8 <insere_carta@@Base+0x74>
   10e94:	cmp	r1, #12
   10e98:	moveq	r3, #65	; 0x41
   10e9c:	strheq	r3, [sp, #4]
   10ea0:	b	10eb8 <insere_carta@@Base+0x74>
   10ea4:	add	r2, r1, #50	; 0x32
   10ea8:	movw	r1, #7028	; 0x1b74
   10eac:	movt	r1, #1
   10eb0:	add	r0, sp, #4
   10eb4:	bl	10b94 <sprintf@plt>
   10eb8:	ldr	r2, [r4]
   10ebc:	add	r1, sp, #4
   10ec0:	mov	r0, r4
   10ec4:	bl	117d8 <lista_insere@@Base>
   10ec8:	add	sp, sp, #8
   10ecc:	ldr	r4, [sp]
   10ed0:	add	sp, sp, #4
   10ed4:	pop	{pc}		; (ldr pc, [sp], #4)
   10ed8:	movw	r3, #7032	; 0x1b78
   10edc:	movt	r3, #1
   10ee0:	ldrh	r2, [r3]
   10ee4:	strh	r2, [sp, #4]
   10ee8:	ldrb	r3, [r3, #2]
   10eec:	strb	r3, [sp, #6]
   10ef0:	b	10eb8 <insere_carta@@Base+0x74>

00010ef4 <main@@Base>:
   10ef4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10ef8:	strd	r6, [sp, #8]
   10efc:	strd	r8, [sp, #16]
   10f00:	strd	sl, [sp, #24]
   10f04:	str	lr, [sp, #32]
   10f08:	sub	sp, sp, #12
   10f0c:	bl	111ec <vetor_novo@@Base>
   10f10:	mov	r5, r0
   10f14:	movw	r7, #8272	; 0x2050
   10f18:	movt	r7, #2
   10f1c:	mov	r6, r7
   10f20:	mov	r4, #0
   10f24:	mov	r2, r4
   10f28:	ldr	r1, [r6], #4
   10f2c:	mov	r0, r5
   10f30:	bl	11398 <vetor_insere@@Base>
   10f34:	add	r4, r4, #1
   10f38:	cmp	r4, #4
   10f3c:	bne	10f24 <main@@Base+0x30>
   10f40:	bl	11720 <lista_nova@@Base>
   10f44:	mov	r4, r0
   10f48:	movw	r8, #8272	; 0x2050
   10f4c:	movt	r8, #2
   10f50:	add	r6, r8, #12
   10f54:	add	r8, r8, #220	; 0xdc
   10f58:	ldr	r1, [r6, #4]!
   10f5c:	mov	r0, r4
   10f60:	bl	10e44 <insere_carta@@Base>
   10f64:	cmp	r8, r6
   10f68:	bne	10f58 <main@@Base+0x64>
   10f6c:	bl	11720 <lista_nova@@Base>
   10f70:	str	r0, [sp]
   10f74:	movw	r8, #8272	; 0x2050
   10f78:	movt	r8, #2
   10f7c:	add	r6, r8, #224	; 0xe0
   10f80:	add	r8, r8, #276	; 0x114
   10f84:	mov	r9, #0
   10f88:	mov	r2, r9
   10f8c:	ldr	r1, [r6], #4
   10f90:	ldr	r0, [sp]
   10f94:	bl	117d8 <lista_insere@@Base>
   10f98:	cmp	r6, r8
   10f9c:	bne	10f88 <main@@Base+0x94>
   10fa0:	movw	r6, #8600	; 0x2198
   10fa4:	movt	r6, #2
   10fa8:	ldr	r8, [r6]
   10fac:	ldr	r9, [sp]
   10fb0:	mov	r1, r9
   10fb4:	mov	r0, r4
   10fb8:	bl	10c9c <tira_carta@@Base>
   10fbc:	mov	r2, r0
   10fc0:	movw	r1, #7036	; 0x1b7c
   10fc4:	movt	r1, #1
   10fc8:	mov	r0, r8
   10fcc:	bl	10b88 <fprintf@plt>
   10fd0:	ldr	r8, [r6]
   10fd4:	mov	r1, r9
   10fd8:	mov	r0, r4
   10fdc:	bl	10c9c <tira_carta@@Base>
   10fe0:	mov	r2, r0
   10fe4:	movw	r1, #7068	; 0x1b9c
   10fe8:	movt	r1, #1
   10fec:	mov	r0, r8
   10ff0:	bl	10b88 <fprintf@plt>
   10ff4:	ldr	r6, [r6]
   10ff8:	mov	r1, r9
   10ffc:	mov	r0, r4
   11000:	bl	10c9c <tira_carta@@Base>
   11004:	mov	r2, r0
   11008:	movw	r1, #7096	; 0x1bb8
   1100c:	movt	r1, #1
   11010:	mov	r0, r6
   11014:	bl	10b88 <fprintf@plt>
   11018:	movw	r6, #8272	; 0x2050
   1101c:	movt	r6, #2
   11020:	ldr	r1, [r6, #212]	; 0xd4
   11024:	mov	r0, r4
   11028:	bl	10e44 <insere_carta@@Base>
   1102c:	ldr	r1, [r6, #216]	; 0xd8
   11030:	mov	r0, r4
   11034:	bl	10e44 <insere_carta@@Base>
   11038:	ldr	r1, [r6, #220]	; 0xdc
   1103c:	mov	r0, r4
   11040:	bl	10e44 <insere_carta@@Base>
   11044:	bl	111ec <vetor_novo@@Base>
   11048:	mov	r6, r0
   1104c:	mov	r8, #0
   11050:	movw	sl, #8600	; 0x2198
   11054:	movt	sl, #2
   11058:	movw	r9, #7128	; 0x1bd8
   1105c:	movt	r9, #1
   11060:	mov	fp, #44	; 0x2c
   11064:	b	11074 <main@@Base+0x180>
   11068:	add	r8, r8, #1
   1106c:	cmp	r8, #13
   11070:	beq	110c0 <main@@Base+0x1cc>
   11074:	ldr	r2, [sp]
   11078:	mov	r1, r4
   1107c:	mov	r0, r5
   11080:	bl	10d0c <faz_jogada@@Base>
   11084:	subs	r1, r0, #0
   11088:	beq	11098 <main@@Base+0x1a4>
   1108c:	mov	r2, r8
   11090:	mov	r0, r6
   11094:	bl	11398 <vetor_insere@@Base>
   11098:	mov	r0, r5
   1109c:	bl	11348 <vetor_tamanho@@Base>
   110a0:	cmp	r0, #4
   110a4:	beq	11068 <main@@Base+0x174>
   110a8:	ldr	r3, [sl]
   110ac:	mov	r2, fp
   110b0:	mov	r1, #1
   110b4:	mov	r0, r9
   110b8:	bl	10b34 <fwrite@plt>
   110bc:	b	11068 <main@@Base+0x174>
   110c0:	movw	r0, #7176	; 0x1c08
   110c4:	movt	r0, #1
   110c8:	bl	10b4c <puts@plt>
   110cc:	ldr	r3, [r6]
   110d0:	cmp	r3, #0
   110d4:	ble	11124 <main@@Base+0x230>
   110d8:	mov	r1, #0
   110dc:	movw	sl, #8600	; 0x2198
   110e0:	movt	sl, #2
   110e4:	movw	fp, #7216	; 0x1c30
   110e8:	movt	fp, #1
   110ec:	ldr	r9, [sl]
   110f0:	add	r8, r1, #1
   110f4:	mov	r0, r6
   110f8:	bl	11358 <vetor_elemento@@Base>
   110fc:	mov	r3, r0
   11100:	mov	r2, r8
   11104:	mov	r1, fp
   11108:	mov	r0, r9
   1110c:	bl	10b88 <fprintf@plt>
   11110:	mov	r1, r8
   11114:	ldr	r3, [r6]
   11118:	cmp	r8, #2
   1111c:	cmple	r8, r3
   11120:	blt	110ec <main@@Base+0x1f8>
   11124:	mov	r0, r6
   11128:	bl	11220 <vetor_apaga@@Base>
   1112c:	bl	111ec <vetor_novo@@Base>
   11130:	str	r0, [sp, #4]
   11134:	ldr	r9, [pc, #172]	; 111e8 <main@@Base+0x2f4>
   11138:	mov	r8, #0
   1113c:	mov	r2, r8
   11140:	ldr	r1, [r9], #4
   11144:	ldr	r0, [sp, #4]
   11148:	bl	11398 <vetor_insere@@Base>
   1114c:	add	r8, r8, #1
   11150:	cmp	r8, #13
   11154:	bne	1113c <main@@Base+0x248>
   11158:	movw	r0, #7172	; 0x1c04
   1115c:	movt	r0, #1
   11160:	bl	10b4c <puts@plt>
   11164:	add	fp, r7, #16
   11168:	movw	sl, #8600	; 0x2198
   1116c:	movt	sl, #2
   11170:	movw	r6, #7232	; 0x1c40
   11174:	movt	r6, #1
   11178:	ldr	r9, [sl]
   1117c:	ldr	r8, [r7], #4
   11180:	mov	r1, r8
   11184:	ldr	r0, [sp, #4]
   11188:	bl	10ddc <numero_vitorias@@Base>
   1118c:	mov	r3, r0
   11190:	mov	r2, r8
   11194:	mov	r1, r6
   11198:	mov	r0, r9
   1119c:	bl	10b88 <fprintf@plt>
   111a0:	cmp	fp, r7
   111a4:	bne	11178 <main@@Base+0x284>
   111a8:	mov	r0, r5
   111ac:	bl	11220 <vetor_apaga@@Base>
   111b0:	mov	r0, r4
   111b4:	bl	11754 <lista_apaga@@Base>
   111b8:	ldr	r0, [sp]
   111bc:	bl	11754 <lista_apaga@@Base>
   111c0:	ldr	r0, [sp, #4]
   111c4:	bl	11220 <vetor_apaga@@Base>
   111c8:	mov	r0, #0
   111cc:	add	sp, sp, #12
   111d0:	ldrd	r4, [sp]
   111d4:	ldrd	r6, [sp, #8]
   111d8:	ldrd	r8, [sp, #16]
   111dc:	ldrd	sl, [sp, #24]
   111e0:	add	sp, sp, #32
   111e4:	pop	{pc}		; (ldr pc, [sp], #4)
   111e8:	andeq	r2, r2, r4, ror #2

000111ec <vetor_novo@@Base>:
   111ec:	str	r4, [sp, #-8]!
   111f0:	str	lr, [sp, #4]
   111f4:	mov	r0, #12
   111f8:	bl	10b58 <malloc@plt>
   111fc:	cmp	r0, #0
   11200:	beq	11214 <vetor_novo@@Base+0x28>
   11204:	mov	r3, #0
   11208:	str	r3, [r0]
   1120c:	str	r3, [r0, #4]
   11210:	str	r3, [r0, #8]
   11214:	ldr	r4, [sp]
   11218:	add	sp, sp, #4
   1121c:	pop	{pc}		; (ldr pc, [sp], #4)

00011220 <vetor_apaga@@Base>:
   11220:	strd	r4, [sp, #-16]!
   11224:	str	r6, [sp, #8]
   11228:	str	lr, [sp, #12]
   1122c:	subs	r5, r0, #0
   11230:	beq	11270 <vetor_apaga@@Base+0x50>
   11234:	ldr	r3, [r5]
   11238:	cmp	r3, #0
   1123c:	ble	11260 <vetor_apaga@@Base+0x40>
   11240:	mov	r4, #0
   11244:	ldr	r3, [r5, #8]
   11248:	ldr	r0, [r3, r4, lsl #2]
   1124c:	bl	10b1c <free@plt>
   11250:	add	r4, r4, #1
   11254:	ldr	r3, [r5]
   11258:	cmp	r3, r4
   1125c:	bgt	11244 <vetor_apaga@@Base+0x24>
   11260:	ldr	r0, [r5, #8]
   11264:	bl	10b1c <free@plt>
   11268:	mov	r0, r5
   1126c:	bl	10b1c <free@plt>
   11270:	ldrd	r4, [sp]
   11274:	ldr	r6, [sp, #8]
   11278:	add	sp, sp, #12
   1127c:	pop	{pc}		; (ldr pc, [sp], #4)

00011280 <vetor_atribui@@Base>:
   11280:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11284:	strd	r6, [sp, #8]
   11288:	strd	r8, [sp, #16]
   1128c:	str	sl, [sp, #24]
   11290:	str	lr, [sp, #28]
   11294:	mov	r5, r0
   11298:	cmp	r0, #0
   1129c:	lsrne	r0, r1, #31
   112a0:	moveq	r0, #1
   112a4:	cmp	r0, #0
   112a8:	bne	11330 <vetor_atribui@@Base+0xb0>
   112ac:	ldr	r3, [r5]
   112b0:	cmp	r3, r1
   112b4:	ble	11338 <vetor_atribui@@Base+0xb8>
   112b8:	mov	r6, r2
   112bc:	mov	r4, r1
   112c0:	mov	r0, r2
   112c4:	bl	10b7c <strlen@plt>
   112c8:	mov	r9, r0
   112cc:	ldr	r7, [r5, #8]
   112d0:	ldr	r8, [r7, r4, lsl #2]
   112d4:	mov	r0, r8
   112d8:	bl	10b7c <strlen@plt>
   112dc:	cmp	r0, r9
   112e0:	bcs	11304 <vetor_atribui@@Base+0x84>
   112e4:	add	r1, r9, #1
   112e8:	mov	r0, r8
   112ec:	bl	10b28 <realloc@plt>
   112f0:	str	r0, [r7, r4, lsl #2]
   112f4:	ldr	r3, [r5, #8]
   112f8:	ldr	r3, [r3, r4, lsl #2]
   112fc:	cmp	r3, #0
   11300:	beq	11340 <vetor_atribui@@Base+0xc0>
   11304:	ldr	r3, [r5, #8]
   11308:	mov	r1, r6
   1130c:	ldr	r0, [r3, r4, lsl #2]
   11310:	bl	10b40 <strcpy@plt>
   11314:	mov	r0, r4
   11318:	ldrd	r4, [sp]
   1131c:	ldrd	r6, [sp, #8]
   11320:	ldrd	r8, [sp, #16]
   11324:	ldr	sl, [sp, #24]
   11328:	add	sp, sp, #28
   1132c:	pop	{pc}		; (ldr pc, [sp], #4)
   11330:	mvn	r0, #0
   11334:	b	11318 <vetor_atribui@@Base+0x98>
   11338:	mvn	r0, #0
   1133c:	b	11318 <vetor_atribui@@Base+0x98>
   11340:	mvn	r0, #0
   11344:	b	11318 <vetor_atribui@@Base+0x98>

00011348 <vetor_tamanho@@Base>:
   11348:	cmp	r0, #0
   1134c:	ldrne	r0, [r0]
   11350:	mvneq	r0, #0
   11354:	bx	lr

00011358 <vetor_elemento@@Base>:
   11358:	mov	r3, r0
   1135c:	cmp	r0, #0
   11360:	lsrne	r0, r1, #31
   11364:	moveq	r0, #1
   11368:	cmp	r0, #0
   1136c:	bne	11388 <vetor_elemento@@Base+0x30>
   11370:	ldr	r2, [r3]
   11374:	cmp	r2, r1
   11378:	ble	11390 <vetor_elemento@@Base+0x38>
   1137c:	ldr	r3, [r3, #8]
   11380:	ldr	r0, [r3, r1, lsl #2]
   11384:	bx	lr
   11388:	mov	r0, #0
   1138c:	bx	lr
   11390:	mov	r0, #0
   11394:	bx	lr

00011398 <vetor_insere@@Base>:
   11398:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1139c:	strd	r6, [sp, #8]
   113a0:	str	r8, [sp, #16]
   113a4:	str	lr, [sp, #20]
   113a8:	mov	r4, r0
   113ac:	cmp	r0, #0
   113b0:	lsrne	r0, r2, #31
   113b4:	moveq	r0, #1
   113b8:	cmp	r0, #0
   113bc:	bne	114a0 <vetor_insere@@Base+0x108>
   113c0:	ldr	r3, [r4]
   113c4:	cmp	r3, r2
   113c8:	blt	114a8 <vetor_insere@@Base+0x110>
   113cc:	mov	r6, r2
   113d0:	mov	r7, r1
   113d4:	ldr	r1, [r4, #4]
   113d8:	cmp	r3, r1
   113dc:	beq	11470 <vetor_insere@@Base+0xd8>
   113e0:	ldr	ip, [r4]
   113e4:	sub	ip, ip, #1
   113e8:	cmp	r6, ip
   113ec:	bgt	11418 <vetor_insere@@Base+0x80>
   113f0:	lsl	r3, ip, #2
   113f4:	sub	r1, r6, #1
   113f8:	ldr	lr, [r4, #8]
   113fc:	add	r5, lr, r3
   11400:	ldr	r2, [lr, r3]
   11404:	str	r2, [r5, #4]
   11408:	sub	ip, ip, #1
   1140c:	sub	r3, r3, #4
   11410:	cmp	ip, r1
   11414:	bne	113f8 <vetor_insere@@Base+0x60>
   11418:	mov	r0, r7
   1141c:	bl	10b7c <strlen@plt>
   11420:	ldr	r5, [r4, #8]
   11424:	mov	r1, #1
   11428:	add	r0, r0, r1
   1142c:	bl	10b04 <calloc@plt>
   11430:	str	r0, [r5, r6, lsl #2]
   11434:	ldr	r3, [r4, #8]
   11438:	ldr	r0, [r3, r6, lsl #2]
   1143c:	cmp	r0, #0
   11440:	beq	114b0 <vetor_insere@@Base+0x118>
   11444:	mov	r1, r7
   11448:	bl	10b40 <strcpy@plt>
   1144c:	ldr	r3, [r4]
   11450:	add	r3, r3, #1
   11454:	str	r3, [r4]
   11458:	mov	r0, r6
   1145c:	ldrd	r4, [sp]
   11460:	ldrd	r6, [sp, #8]
   11464:	ldr	r8, [sp, #16]
   11468:	add	sp, sp, #20
   1146c:	pop	{pc}		; (ldr pc, [sp], #4)
   11470:	cmp	r1, #0
   11474:	lslne	r1, r1, #1
   11478:	moveq	r1, #1
   1147c:	str	r1, [r4, #4]
   11480:	lsl	r1, r1, #2
   11484:	ldr	r0, [r4, #8]
   11488:	bl	10b28 <realloc@plt>
   1148c:	str	r0, [r4, #8]
   11490:	cmp	r0, #0
   11494:	bne	113e0 <vetor_insere@@Base+0x48>
   11498:	mvn	r0, #0
   1149c:	b	1145c <vetor_insere@@Base+0xc4>
   114a0:	mvn	r0, #0
   114a4:	b	1145c <vetor_insere@@Base+0xc4>
   114a8:	mvn	r0, #0
   114ac:	b	1145c <vetor_insere@@Base+0xc4>
   114b0:	mvn	r0, #0
   114b4:	b	1145c <vetor_insere@@Base+0xc4>

000114b8 <vetor_remove@@Base>:
   114b8:	strd	r4, [sp, #-16]!
   114bc:	str	r6, [sp, #8]
   114c0:	str	lr, [sp, #12]
   114c4:	mov	r6, r0
   114c8:	cmp	r0, #0
   114cc:	lsrne	r0, r1, #31
   114d0:	moveq	r0, #1
   114d4:	cmp	r0, #0
   114d8:	bne	11550 <vetor_remove@@Base+0x98>
   114dc:	ldr	r3, [r6]
   114e0:	cmp	r3, r1
   114e4:	ble	11558 <vetor_remove@@Base+0xa0>
   114e8:	mov	r5, r1
   114ec:	lsl	r4, r1, #2
   114f0:	ldr	r3, [r6, #8]
   114f4:	ldr	r0, [r3, r1, lsl #2]
   114f8:	bl	10b1c <free@plt>
   114fc:	add	r1, r5, #1
   11500:	ldr	r2, [r6]
   11504:	cmp	r1, r2
   11508:	bge	11534 <vetor_remove@@Base+0x7c>
   1150c:	add	r3, r4, #4
   11510:	ldr	r2, [r6, #8]
   11514:	add	r0, r2, r3
   11518:	ldr	r2, [r2, r3]
   1151c:	str	r2, [r0, #-4]
   11520:	add	r1, r1, #1
   11524:	ldr	r2, [r6]
   11528:	add	r3, r3, #4
   1152c:	cmp	r2, r1
   11530:	bgt	11510 <vetor_remove@@Base+0x58>
   11534:	sub	r2, r2, #1
   11538:	str	r2, [r6]
   1153c:	mov	r0, #0
   11540:	ldrd	r4, [sp]
   11544:	ldr	r6, [sp, #8]
   11548:	add	sp, sp, #12
   1154c:	pop	{pc}		; (ldr pc, [sp], #4)
   11550:	mvn	r0, #0
   11554:	b	11540 <vetor_remove@@Base+0x88>
   11558:	mvn	r0, #0
   1155c:	b	11540 <vetor_remove@@Base+0x88>

00011560 <vetor_pesquisa@@Base>:
   11560:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11564:	strd	r6, [sp, #8]
   11568:	str	r8, [sp, #16]
   1156c:	str	lr, [sp, #20]
   11570:	cmp	r0, #0
   11574:	beq	115d0 <vetor_pesquisa@@Base+0x70>
   11578:	ldr	r7, [r0]
   1157c:	cmp	r7, #0
   11580:	ble	115d8 <vetor_pesquisa@@Base+0x78>
   11584:	mov	r6, r1
   11588:	ldr	r5, [r0, #8]
   1158c:	sub	r5, r5, #4
   11590:	mov	r4, #0
   11594:	mov	r1, r6
   11598:	ldr	r0, [r5, #4]!
   1159c:	bl	10b10 <strcmp@plt>
   115a0:	cmp	r0, #0
   115a4:	beq	115b8 <vetor_pesquisa@@Base+0x58>
   115a8:	add	r4, r4, #1
   115ac:	cmp	r4, r7
   115b0:	bne	11594 <vetor_pesquisa@@Base+0x34>
   115b4:	mvn	r4, #0
   115b8:	mov	r0, r4
   115bc:	ldrd	r4, [sp]
   115c0:	ldrd	r6, [sp, #8]
   115c4:	ldr	r8, [sp, #16]
   115c8:	add	sp, sp, #20
   115cc:	pop	{pc}		; (ldr pc, [sp], #4)
   115d0:	mvn	r4, #0
   115d4:	b	115b8 <vetor_pesquisa@@Base+0x58>
   115d8:	mvn	r4, #0
   115dc:	b	115b8 <vetor_pesquisa@@Base+0x58>

000115e0 <vetor_ordena@@Base>:
   115e0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   115e4:	strd	r6, [sp, #8]
   115e8:	strd	r8, [sp, #16]
   115ec:	str	sl, [sp, #24]
   115f0:	str	lr, [sp, #28]
   115f4:	subs	r7, r0, #0
   115f8:	beq	11698 <vetor_ordena@@Base+0xb8>
   115fc:	ldr	r3, [r7]
   11600:	cmp	r3, #1
   11604:	ble	116a0 <vetor_ordena@@Base+0xc0>
   11608:	mov	sl, #4
   1160c:	mov	r9, #1
   11610:	b	11634 <vetor_ordena@@Base+0x54>
   11614:	mov	r4, r9
   11618:	ldr	r3, [r7, #8]
   1161c:	str	r8, [r3, r4, lsl #2]
   11620:	add	r9, r9, #1
   11624:	add	sl, sl, #4
   11628:	ldr	r3, [r7]
   1162c:	cmp	r3, r9
   11630:	ble	1167c <vetor_ordena@@Base+0x9c>
   11634:	ldr	r3, [r7, #8]
   11638:	ldr	r8, [r3, sl]
   1163c:	cmp	r9, #0
   11640:	ble	11614 <vetor_ordena@@Base+0x34>
   11644:	sub	r5, sl, #4
   11648:	mov	r4, r9
   1164c:	ldr	r6, [r7, #8]
   11650:	ldr	r1, [r6, r5]
   11654:	mov	r0, r8
   11658:	bl	10b10 <strcmp@plt>
   1165c:	cmp	r0, #0
   11660:	bge	11618 <vetor_ordena@@Base+0x38>
   11664:	ldr	r3, [r6, r5]
   11668:	str	r3, [r6, r4, lsl #2]
   1166c:	sub	r5, r5, #4
   11670:	subs	r4, r4, #1
   11674:	bne	1164c <vetor_ordena@@Base+0x6c>
   11678:	b	11618 <vetor_ordena@@Base+0x38>
   1167c:	mov	r0, #0
   11680:	ldrd	r4, [sp]
   11684:	ldrd	r6, [sp, #8]
   11688:	ldrd	r8, [sp, #16]
   1168c:	ldr	sl, [sp, #24]
   11690:	add	sp, sp, #28
   11694:	pop	{pc}		; (ldr pc, [sp], #4)
   11698:	mvn	r0, #0
   1169c:	b	11680 <vetor_ordena@@Base+0xa0>
   116a0:	mov	r0, #0
   116a4:	b	11680 <vetor_ordena@@Base+0xa0>

000116a8 <novo_str@@Base>:
   116a8:	strd	r4, [sp, #-16]!
   116ac:	str	r6, [sp, #8]
   116b0:	str	lr, [sp, #12]
   116b4:	mov	r6, r0
   116b8:	mov	r0, #12
   116bc:	bl	10b58 <malloc@plt>
   116c0:	subs	r4, r0, #0
   116c4:	beq	116fc <novo_str@@Base+0x54>
   116c8:	mov	r0, r6
   116cc:	bl	10b7c <strlen@plt>
   116d0:	add	r0, r0, #1
   116d4:	bl	10b58 <malloc@plt>
   116d8:	mov	r5, r0
   116dc:	str	r0, [r4]
   116e0:	cmp	r0, #0
   116e4:	beq	11710 <novo_str@@Base+0x68>
   116e8:	mov	r1, r6
   116ec:	bl	10b40 <strcpy@plt>
   116f0:	mov	r3, #0
   116f4:	str	r3, [r4, #4]
   116f8:	str	r3, [r4, #8]
   116fc:	mov	r0, r4
   11700:	ldrd	r4, [sp]
   11704:	ldr	r6, [sp, #8]
   11708:	add	sp, sp, #12
   1170c:	pop	{pc}		; (ldr pc, [sp], #4)
   11710:	mov	r0, r4
   11714:	bl	10b1c <free@plt>
   11718:	mov	r4, r5
   1171c:	b	116fc <novo_str@@Base+0x54>

00011720 <lista_nova@@Base>:
   11720:	str	r4, [sp, #-8]!
   11724:	str	lr, [sp, #4]
   11728:	mov	r0, #12
   1172c:	bl	10b58 <malloc@plt>
   11730:	cmp	r0, #0
   11734:	beq	11748 <lista_nova@@Base+0x28>
   11738:	mov	r3, #0
   1173c:	str	r3, [r0]
   11740:	str	r3, [r0, #4]
   11744:	str	r3, [r0, #8]
   11748:	ldr	r4, [sp]
   1174c:	add	sp, sp, #4
   11750:	pop	{pc}		; (ldr pc, [sp], #4)

00011754 <lista_apaga@@Base>:
   11754:	strd	r4, [sp, #-16]!
   11758:	str	r6, [sp, #8]
   1175c:	str	lr, [sp, #12]
   11760:	subs	r5, r0, #0
   11764:	beq	117a0 <lista_apaga@@Base+0x4c>
   11768:	ldr	r4, [r5]
   1176c:	cmp	r4, #0
   11770:	beq	11798 <lista_apaga@@Base+0x44>
   11774:	ldr	r3, [r4, #4]
   11778:	str	r3, [r5]
   1177c:	ldr	r0, [r4]
   11780:	bl	10b1c <free@plt>
   11784:	mov	r0, r4
   11788:	bl	10b1c <free@plt>
   1178c:	ldr	r4, [r5]
   11790:	cmp	r4, #0
   11794:	bne	11774 <lista_apaga@@Base+0x20>
   11798:	mov	r0, r5
   1179c:	bl	10b1c <free@plt>
   117a0:	ldrd	r4, [sp]
   117a4:	ldr	r6, [sp, #8]
   117a8:	add	sp, sp, #12
   117ac:	pop	{pc}		; (ldr pc, [sp], #4)

000117b0 <lista_tamanho@@Base>:
   117b0:	cmp	r0, #0
   117b4:	ldrne	r0, [r0, #8]
   117b8:	mvneq	r0, #0
   117bc:	bx	lr

000117c0 <lista_inicio@@Base>:
   117c0:	cmp	r0, #0
   117c4:	ldrne	r0, [r0]
   117c8:	bx	lr

000117cc <lista_fim@@Base>:
   117cc:	cmp	r0, #0
   117d0:	ldrne	r0, [r0, #4]
   117d4:	bx	lr

000117d8 <lista_insere@@Base>:
   117d8:	cmp	r1, #0
   117dc:	cmpne	r0, #0
   117e0:	beq	11890 <lista_insere@@Base+0xb8>
   117e4:	strd	r4, [sp, #-16]!
   117e8:	str	r6, [sp, #8]
   117ec:	str	lr, [sp, #12]
   117f0:	mov	r5, r0
   117f4:	mov	r0, r1
   117f8:	mov	r4, r2
   117fc:	bl	116a8 <novo_str@@Base>
   11800:	cmp	r0, #0
   11804:	beq	11840 <lista_insere@@Base+0x68>
   11808:	ldr	r3, [r5, #8]
   1180c:	add	r3, r3, #1
   11810:	str	r3, [r5, #8]
   11814:	cmp	r4, #0
   11818:	beq	11850 <lista_insere@@Base+0x78>
   1181c:	ldr	r3, [r5]
   11820:	cmp	r3, r4
   11824:	beq	1187c <lista_insere@@Base+0xa4>
   11828:	ldr	r3, [r4, #8]
   1182c:	str	r3, [r0, #8]
   11830:	str	r4, [r0, #4]
   11834:	ldr	r3, [r4, #8]
   11838:	str	r0, [r3, #4]
   1183c:	str	r0, [r4, #8]
   11840:	ldrd	r4, [sp]
   11844:	ldr	r6, [sp, #8]
   11848:	add	sp, sp, #12
   1184c:	pop	{pc}		; (ldr pc, [sp], #4)
   11850:	ldr	r3, [r5]
   11854:	cmp	r3, #0
   11858:	streq	r0, [r5, #4]
   1185c:	streq	r0, [r5]
   11860:	beq	11840 <lista_insere@@Base+0x68>
   11864:	ldr	r3, [r5, #4]
   11868:	str	r3, [r0, #8]
   1186c:	ldr	r3, [r5, #4]
   11870:	str	r0, [r3, #4]
   11874:	str	r0, [r5, #4]
   11878:	b	11840 <lista_insere@@Base+0x68>
   1187c:	str	r4, [r0, #4]
   11880:	ldr	r3, [r5]
   11884:	str	r0, [r3, #8]
   11888:	str	r0, [r5]
   1188c:	b	11840 <lista_insere@@Base+0x68>
   11890:	mov	r0, #0
   11894:	bx	lr

00011898 <lista_remove@@Base>:
   11898:	strd	r4, [sp, #-16]!
   1189c:	str	r6, [sp, #8]
   118a0:	str	lr, [sp, #12]
   118a4:	cmp	r1, #0
   118a8:	cmpne	r0, #0
   118ac:	moveq	r5, #0
   118b0:	beq	11908 <lista_remove@@Base+0x70>
   118b4:	mov	r4, r1
   118b8:	ldr	r2, [r0, #8]
   118bc:	sub	r2, r2, #1
   118c0:	str	r2, [r0, #8]
   118c4:	ldr	r2, [r1, #8]
   118c8:	cmp	r2, #0
   118cc:	ldrne	r1, [r1, #4]
   118d0:	strne	r1, [r2, #4]
   118d4:	ldreq	r2, [r4, #4]
   118d8:	streq	r2, [r0]
   118dc:	ldr	r2, [r4, #4]
   118e0:	cmp	r2, #0
   118e4:	ldrne	r1, [r4, #8]
   118e8:	strne	r1, [r2, #8]
   118ec:	ldreq	r2, [r4, #8]
   118f0:	streq	r2, [r0, #4]
   118f4:	ldr	r5, [r4, #4]
   118f8:	ldr	r0, [r4]
   118fc:	bl	10b1c <free@plt>
   11900:	mov	r0, r4
   11904:	bl	10b1c <free@plt>
   11908:	mov	r0, r5
   1190c:	ldrd	r4, [sp]
   11910:	ldr	r6, [sp, #8]
   11914:	add	sp, sp, #12
   11918:	pop	{pc}		; (ldr pc, [sp], #4)

0001191c <lista_pesquisa@@Base>:
   1191c:	strd	r4, [sp, #-16]!
   11920:	str	r6, [sp, #8]
   11924:	str	lr, [sp, #12]
   11928:	cmp	r1, #0
   1192c:	cmpne	r0, #0
   11930:	moveq	r4, #0
   11934:	beq	1197c <lista_pesquisa@@Base+0x60>
   11938:	mov	r5, r1
   1193c:	cmp	r2, #1
   11940:	movhi	r4, #0
   11944:	bhi	1197c <lista_pesquisa@@Base+0x60>
   11948:	cmp	r2, #0
   1194c:	bne	11990 <lista_pesquisa@@Base+0x74>
   11950:	ldr	r4, [r0]
   11954:	cmp	r4, #0
   11958:	beq	1197c <lista_pesquisa@@Base+0x60>
   1195c:	mov	r1, r5
   11960:	ldr	r0, [r4]
   11964:	bl	10b10 <strcmp@plt>
   11968:	cmp	r0, #0
   1196c:	beq	1197c <lista_pesquisa@@Base+0x60>
   11970:	ldr	r4, [r4, #4]
   11974:	cmp	r4, #0
   11978:	bne	1195c <lista_pesquisa@@Base+0x40>
   1197c:	mov	r0, r4
   11980:	ldrd	r4, [sp]
   11984:	ldr	r6, [sp, #8]
   11988:	add	sp, sp, #12
   1198c:	pop	{pc}		; (ldr pc, [sp], #4)
   11990:	ldr	r4, [r0, #4]
   11994:	cmp	r4, #0
   11998:	beq	1197c <lista_pesquisa@@Base+0x60>
   1199c:	mov	r1, r5
   119a0:	ldr	r0, [r4]
   119a4:	bl	10b10 <strcmp@plt>
   119a8:	cmp	r0, #0
   119ac:	beq	1197c <lista_pesquisa@@Base+0x60>
   119b0:	ldr	r4, [r4, #8]
   119b4:	cmp	r4, #0
   119b8:	bne	1199c <lista_pesquisa@@Base+0x80>
   119bc:	b	1197c <lista_pesquisa@@Base+0x60>

000119c0 <lista_ordena@@Base>:
   119c0:	cmp	r0, #0
   119c4:	beq	11a44 <lista_ordena@@Base+0x84>
   119c8:	strd	r4, [sp, #-16]!
   119cc:	str	r6, [sp, #8]
   119d0:	str	lr, [sp, #12]
   119d4:	ldr	r6, [r0]
   119d8:	ldr	r4, [r6, #4]
   119dc:	cmp	r4, #0
   119e0:	moveq	r0, #0
   119e4:	bne	119fc <lista_ordena@@Base+0x3c>
   119e8:	b	11a50 <lista_ordena@@Base+0x90>
   119ec:	ldr	r6, [r6, #4]
   119f0:	ldr	r4, [r6, #4]
   119f4:	cmp	r4, #0
   119f8:	beq	11a4c <lista_ordena@@Base+0x8c>
   119fc:	cmp	r4, #0
   11a00:	movne	r5, r6
   11a04:	beq	119ec <lista_ordena@@Base+0x2c>
   11a08:	ldr	r1, [r5]
   11a0c:	ldr	r0, [r4]
   11a10:	bl	10b10 <strcmp@plt>
   11a14:	cmp	r0, #0
   11a18:	movlt	r5, r4
   11a1c:	ldr	r4, [r4, #4]
   11a20:	cmp	r4, #0
   11a24:	bne	11a08 <lista_ordena@@Base+0x48>
   11a28:	cmp	r5, r6
   11a2c:	beq	119ec <lista_ordena@@Base+0x2c>
   11a30:	ldr	r3, [r6]
   11a34:	ldr	r2, [r5]
   11a38:	str	r2, [r6]
   11a3c:	str	r3, [r5]
   11a40:	b	119ec <lista_ordena@@Base+0x2c>
   11a44:	mvn	r0, #0
   11a48:	bx	lr
   11a4c:	mov	r0, #0
   11a50:	ldrd	r4, [sp]
   11a54:	ldr	r6, [sp, #8]
   11a58:	add	sp, sp, #12
   11a5c:	pop	{pc}		; (ldr pc, [sp], #4)

00011a60 <lista_inverte@@Base>:
   11a60:	subs	r1, r0, #0
   11a64:	beq	11af4 <lista_inverte@@Base+0x94>
   11a68:	ldr	r2, [r1, #8]
   11a6c:	cmp	r2, #1
   11a70:	ble	11afc <lista_inverte@@Base+0x9c>
   11a74:	ldr	r3, [r1]
   11a78:	ldr	r3, [r3, #4]
   11a7c:	cmp	r2, #2
   11a80:	ble	11ac8 <lista_inverte@@Base+0x68>
   11a84:	mov	r0, #0
   11a88:	ldr	ip, [r3, #8]
   11a8c:	ldr	r2, [r3, #4]
   11a90:	str	r2, [ip, #4]
   11a94:	ldr	ip, [r3, #8]
   11a98:	str	ip, [r2, #8]
   11a9c:	ldr	ip, [r3, #4]
   11aa0:	ldr	r2, [r1]
   11aa4:	str	r2, [r3, #4]
   11aa8:	str	r3, [r2, #8]
   11aac:	str	r3, [r1]
   11ab0:	add	r0, r0, #1
   11ab4:	mov	r3, ip
   11ab8:	ldr	r2, [r1, #8]
   11abc:	sub	r2, r2, #2
   11ac0:	cmp	r2, r0
   11ac4:	bgt	11a88 <lista_inverte@@Base+0x28>
   11ac8:	ldr	r3, [r1, #4]
   11acc:	ldr	r2, [r3, #8]
   11ad0:	str	r2, [r1, #4]
   11ad4:	mov	r0, #0
   11ad8:	str	r0, [r2, #4]
   11adc:	str	r0, [r3, #8]
   11ae0:	ldr	r2, [r1]
   11ae4:	str	r2, [r3, #4]
   11ae8:	str	r3, [r2, #8]
   11aec:	str	r3, [r1]
   11af0:	bx	lr
   11af4:	mvn	r0, #0
   11af8:	bx	lr
   11afc:	mov	r0, #0
   11b00:	bx	lr

00011b04 <__libc_csu_init@@Base>:
   11b04:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11b08:	mov	r7, r0
   11b0c:	ldr	r6, [pc, #72]	; 11b5c <__libc_csu_init@@Base+0x58>
   11b10:	ldr	r5, [pc, #72]	; 11b60 <__libc_csu_init@@Base+0x5c>
   11b14:	add	r6, pc, r6
   11b18:	add	r5, pc, r5
   11b1c:	sub	r6, r6, r5
   11b20:	mov	r8, r1
   11b24:	mov	r9, r2
   11b28:	bl	10ae4 <calloc@plt-0x20>
   11b2c:	asrs	r6, r6, #2
   11b30:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11b34:	mov	r4, #0
   11b38:	add	r4, r4, #1
   11b3c:	ldr	r3, [r5], #4
   11b40:	mov	r2, r9
   11b44:	mov	r1, r8
   11b48:	mov	r0, r7
   11b4c:	blx	r3
   11b50:	cmp	r6, r4
   11b54:	bne	11b38 <__libc_csu_init@@Base+0x34>
   11b58:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11b5c:	strdeq	r0, [r1], -r8
   11b60:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>

00011b64 <__libc_csu_fini@@Base>:
   11b64:	bx	lr

Disassembly of section .fini:

00011b68 <.fini>:
   11b68:	push	{r3, lr}
   11b6c:	pop	{r3, pc}
