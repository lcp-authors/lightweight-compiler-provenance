
../repos/prog2/MT1E1-1.1:     file format elf32-littlearm


Disassembly of section .init:

00010c54 <.init>:
   10c54:	push	{r3, lr}
   10c58:	bl	10d7c <_start@@Base+0x3c>
   10c5c:	pop	{r3, pc}

Disassembly of section .plt:

00010c60 <calloc@plt-0x14>:
   10c60:	push	{lr}		; (str lr, [sp, #-4]!)
   10c64:	ldr	lr, [pc, #4]	; 10c70 <calloc@plt-0x4>
   10c68:	add	lr, pc, lr
   10c6c:	ldr	pc, [lr, #8]!
   10c70:	muleq	r1, r0, r3

00010c74 <calloc@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #73728	; 0x12000
   10c7c:	ldr	pc, [ip, #912]!	; 0x390

00010c80 <strcmp@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #73728	; 0x12000
   10c88:	ldr	pc, [ip, #904]!	; 0x388

00010c8c <printf@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #73728	; 0x12000
   10c94:	ldr	pc, [ip, #896]!	; 0x380

00010c98 <fopen@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #73728	; 0x12000
   10ca0:	ldr	pc, [ip, #888]!	; 0x378

00010ca4 <free@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #73728	; 0x12000
   10cac:	ldr	pc, [ip, #880]!	; 0x370

00010cb0 <fgets@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #73728	; 0x12000
   10cb8:	ldr	pc, [ip, #872]!	; 0x368

00010cbc <realloc@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #73728	; 0x12000
   10cc4:	ldr	pc, [ip, #864]!	; 0x360

00010cc8 <strcpy@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #73728	; 0x12000
   10cd0:	ldr	pc, [ip, #856]!	; 0x358

00010cd4 <malloc@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #73728	; 0x12000
   10cdc:	ldr	pc, [ip, #848]!	; 0x350

00010ce0 <__libc_start_main@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #73728	; 0x12000
   10ce8:	ldr	pc, [ip, #840]!	; 0x348

00010cec <__gmon_start__@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #73728	; 0x12000
   10cf4:	ldr	pc, [ip, #832]!	; 0x340

00010cf8 <feof@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #73728	; 0x12000
   10d00:	ldr	pc, [ip, #824]!	; 0x338

00010d04 <strlen@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #73728	; 0x12000
   10d0c:	ldr	pc, [ip, #816]!	; 0x330

00010d10 <strchr@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #73728	; 0x12000
   10d18:	ldr	pc, [ip, #808]!	; 0x328

00010d1c <fclose@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #73728	; 0x12000
   10d24:	ldr	pc, [ip, #800]!	; 0x320

00010d28 <atoi@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #73728	; 0x12000
   10d30:	ldr	pc, [ip, #792]!	; 0x318

00010d34 <abort@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #73728	; 0x12000
   10d3c:	ldr	pc, [ip, #784]!	; 0x310

Disassembly of section .text:

00010d40 <_start@@Base>:
   10d40:	mov	fp, #0
   10d44:	mov	lr, #0
   10d48:	pop	{r1}		; (ldr r1, [sp], #4)
   10d4c:	mov	r2, sp
   10d50:	push	{r2}		; (str r2, [sp, #-4]!)
   10d54:	push	{r0}		; (str r0, [sp, #-4]!)
   10d58:	ldr	ip, [pc, #16]	; 10d70 <_start@@Base+0x30>
   10d5c:	push	{ip}		; (str ip, [sp, #-4]!)
   10d60:	ldr	r0, [pc, #12]	; 10d74 <_start@@Base+0x34>
   10d64:	ldr	r3, [pc, #12]	; 10d78 <_start@@Base+0x38>
   10d68:	bl	10ce0 <__libc_start_main@plt>
   10d6c:	bl	10d34 <abort@plt>
   10d70:	andeq	r2, r1, r0, lsr #9
   10d74:	andeq	r1, r1, r4, lsr #5
   10d78:	andeq	r2, r1, r0, asr #8
   10d7c:	ldr	r3, [pc, #20]	; 10d98 <_start@@Base+0x58>
   10d80:	ldr	r2, [pc, #20]	; 10d9c <_start@@Base+0x5c>
   10d84:	add	r3, pc, r3
   10d88:	ldr	r2, [r3, r2]
   10d8c:	cmp	r2, #0
   10d90:	bxeq	lr
   10d94:	b	10cec <__gmon_start__@plt>
   10d98:	andeq	r2, r1, r4, ror r2
   10d9c:	andeq	r0, r0, r8, asr r0
   10da0:	ldr	r0, [pc, #24]	; 10dc0 <_start@@Base+0x80>
   10da4:	ldr	r3, [pc, #24]	; 10dc4 <_start@@Base+0x84>
   10da8:	cmp	r3, r0
   10dac:	bxeq	lr
   10db0:	ldr	r3, [pc, #16]	; 10dc8 <_start@@Base+0x88>
   10db4:	cmp	r3, #0
   10db8:	bxeq	lr
   10dbc:	bx	r3
   10dc0:	andeq	r3, r2, r4, rrx
   10dc4:	andeq	r3, r2, r4, rrx
   10dc8:	andeq	r0, r0, r0
   10dcc:	ldr	r0, [pc, #36]	; 10df8 <_start@@Base+0xb8>
   10dd0:	ldr	r1, [pc, #36]	; 10dfc <_start@@Base+0xbc>
   10dd4:	sub	r1, r1, r0
   10dd8:	asr	r1, r1, #2
   10ddc:	add	r1, r1, r1, lsr #31
   10de0:	asrs	r1, r1, #1
   10de4:	bxeq	lr
   10de8:	ldr	r3, [pc, #16]	; 10e00 <_start@@Base+0xc0>
   10dec:	cmp	r3, #0
   10df0:	bxeq	lr
   10df4:	bx	r3
   10df8:	andeq	r3, r2, r4, rrx
   10dfc:	andeq	r3, r2, r4, rrx
   10e00:	andeq	r0, r0, r0
   10e04:	push	{r4, lr}
   10e08:	ldr	r4, [pc, #24]	; 10e28 <_start@@Base+0xe8>
   10e0c:	ldrb	r3, [r4]
   10e10:	cmp	r3, #0
   10e14:	popne	{r4, pc}
   10e18:	bl	10da0 <_start@@Base+0x60>
   10e1c:	mov	r3, #1
   10e20:	strb	r3, [r4]
   10e24:	pop	{r4, pc}
   10e28:	andeq	r3, r2, r4, rrx
   10e2c:	b	10dcc <_start@@Base+0x8c>

00010e30 <retira_duplicados@@Base>:
   10e30:	push	{fp, lr}
   10e34:	mov	fp, sp
   10e38:	sub	sp, sp, #32
   10e3c:	str	r0, [fp, #-4]
   10e40:	movw	r0, #0
   10e44:	str	r0, [fp, #-8]
   10e48:	ldr	r0, [fp, #-8]
   10e4c:	ldr	r1, [fp, #-4]
   10e50:	str	r0, [sp, #16]
   10e54:	mov	r0, r1
   10e58:	bl	116c8 <vetor_tamanho@@Base>
   10e5c:	sub	r0, r0, #1
   10e60:	ldr	r1, [sp, #16]
   10e64:	cmp	r1, r0
   10e68:	bge	10f1c <retira_duplicados@@Base+0xec>
   10e6c:	ldr	r0, [fp, #-8]
   10e70:	add	r0, r0, #1
   10e74:	str	r0, [fp, #-12]
   10e78:	ldr	r0, [fp, #-12]
   10e7c:	ldr	r1, [fp, #-4]
   10e80:	str	r0, [sp, #12]
   10e84:	mov	r0, r1
   10e88:	bl	116c8 <vetor_tamanho@@Base>
   10e8c:	ldr	r1, [sp, #12]
   10e90:	cmp	r1, r0
   10e94:	bge	10f08 <retira_duplicados@@Base+0xd8>
   10e98:	ldr	r0, [fp, #-4]
   10e9c:	ldr	r1, [fp, #-8]
   10ea0:	bl	11704 <vetor_elemento@@Base>
   10ea4:	ldr	r1, [fp, #-4]
   10ea8:	ldr	r2, [fp, #-12]
   10eac:	str	r0, [sp, #8]
   10eb0:	mov	r0, r1
   10eb4:	mov	r1, r2
   10eb8:	bl	11704 <vetor_elemento@@Base>
   10ebc:	ldr	r1, [sp, #8]
   10ec0:	str	r0, [sp, #4]
   10ec4:	mov	r0, r1
   10ec8:	ldr	r1, [sp, #4]
   10ecc:	bl	10c80 <strcmp@plt>
   10ed0:	cmp	r0, #0
   10ed4:	bne	10ef4 <retira_duplicados@@Base+0xc4>
   10ed8:	ldr	r0, [fp, #-4]
   10edc:	ldr	r1, [fp, #-12]
   10ee0:	bl	1192c <vetor_remove@@Base>
   10ee4:	ldr	r1, [fp, #-12]
   10ee8:	mvn	r2, #0
   10eec:	add	r1, r1, r2
   10ef0:	str	r1, [fp, #-12]
   10ef4:	b	10ef8 <retira_duplicados@@Base+0xc8>
   10ef8:	ldr	r0, [fp, #-12]
   10efc:	add	r0, r0, #1
   10f00:	str	r0, [fp, #-12]
   10f04:	b	10e78 <retira_duplicados@@Base+0x48>
   10f08:	b	10f0c <retira_duplicados@@Base+0xdc>
   10f0c:	ldr	r0, [fp, #-8]
   10f10:	add	r0, r0, #1
   10f14:	str	r0, [fp, #-8]
   10f18:	b	10e48 <retira_duplicados@@Base+0x18>
   10f1c:	mov	sp, fp
   10f20:	pop	{fp, pc}

00010f24 <interseta@@Base>:
   10f24:	push	{fp, lr}
   10f28:	mov	fp, sp
   10f2c:	sub	sp, sp, #32
   10f30:	ldr	r2, [pc, #268]	; 11044 <interseta@@Base+0x120>
   10f34:	ldr	r2, [pc, r2]
   10f38:	str	r0, [fp, #-4]
   10f3c:	str	r1, [fp, #-8]
   10f40:	blx	r2
   10f44:	str	r0, [fp, #-12]
   10f48:	ldr	r0, [fp, #-4]
   10f4c:	ldr	r0, [r0]
   10f50:	str	r0, [sp, #16]
   10f54:	movw	r0, #0
   10f58:	str	r0, [sp, #8]
   10f5c:	str	r0, [sp, #12]
   10f60:	ldr	r0, [sp, #12]
   10f64:	ldr	r1, [fp, #-4]
   10f68:	ldr	r1, [r1, #8]
   10f6c:	cmp	r0, r1
   10f70:	movw	r0, #1
   10f74:	str	r0, [sp, #4]
   10f78:	blt	10f94 <interseta@@Base+0x70>
   10f7c:	ldr	r0, [sp, #16]
   10f80:	movw	r1, #0
   10f84:	cmp	r0, r1
   10f88:	movw	r0, #0
   10f8c:	movne	r0, #1
   10f90:	str	r0, [sp, #4]
   10f94:	ldr	r0, [sp, #4]
   10f98:	tst	r0, #1
   10f9c:	beq	11038 <interseta@@Base+0x114>
   10fa0:	ldr	r0, [fp, #-8]
   10fa4:	ldr	r1, [sp, #16]
   10fa8:	ldr	r1, [r1]
   10fac:	movw	r2, #0
   10fb0:	bl	120b4 <lista_pesquisa@@Base>
   10fb4:	movw	r1, #0
   10fb8:	cmp	r0, r1
   10fbc:	beq	1101c <interseta@@Base+0xf8>
   10fc0:	ldr	r0, [sp, #16]
   10fc4:	ldr	r0, [r0]
   10fc8:	ldr	r1, [fp, #-8]
   10fcc:	ldr	r2, [sp, #16]
   10fd0:	ldr	r2, [r2]
   10fd4:	str	r0, [sp]
   10fd8:	mov	r0, r1
   10fdc:	mov	r1, r2
   10fe0:	movw	r2, #0
   10fe4:	bl	120b4 <lista_pesquisa@@Base>
   10fe8:	ldr	r1, [r0]
   10fec:	ldr	r0, [sp]
   10ff0:	bl	10c80 <strcmp@plt>
   10ff4:	cmp	r0, #0
   10ff8:	bne	1101c <interseta@@Base+0xf8>
   10ffc:	ldr	r0, [fp, #-12]
   11000:	ldr	r1, [sp, #16]
   11004:	ldr	r1, [r1]
   11008:	ldr	r2, [sp, #8]
   1100c:	bl	11770 <vetor_insere@@Base>
   11010:	ldr	r1, [sp, #8]
   11014:	add	r1, r1, #1
   11018:	str	r1, [sp, #8]
   1101c:	ldr	r0, [sp, #16]
   11020:	ldr	r0, [r0, #4]
   11024:	str	r0, [sp, #16]
   11028:	ldr	r0, [sp, #12]
   1102c:	add	r0, r0, #1
   11030:	str	r0, [sp, #12]
   11034:	b	10f60 <interseta@@Base+0x3c>
   11038:	ldr	r0, [fp, #-12]
   1103c:	mov	sp, fp
   11040:	pop	{fp, pc}
   11044:	andeq	r2, r1, r8, lsl r1

00011048 <anteriores@@Base>:
   11048:	push	{fp, lr}
   1104c:	mov	fp, sp
   11050:	sub	sp, sp, #24
   11054:	ldr	r2, [pc, #160]	; 110fc <anteriores@@Base+0xb4>
   11058:	ldr	r2, [pc, r2]
   1105c:	str	r0, [fp, #-4]
   11060:	str	r1, [fp, #-8]
   11064:	blx	r2
   11068:	str	r0, [sp, #12]
   1106c:	ldr	r0, [fp, #-4]
   11070:	ldr	r0, [r0]
   11074:	str	r0, [sp, #8]
   11078:	ldr	r0, [sp, #8]
   1107c:	movw	r1, #0
   11080:	cmp	r0, r1
   11084:	beq	110f0 <anteriores@@Base+0xa8>
   11088:	ldr	r0, [sp, #8]
   1108c:	ldr	r0, [r0]
   11090:	ldr	r1, [sp, #8]
   11094:	ldr	r1, [r1]
   11098:	str	r0, [sp, #4]
   1109c:	mov	r0, r1
   110a0:	bl	10d04 <strlen@plt>
   110a4:	ldr	r1, [sp, #4]
   110a8:	add	r0, r1, r0
   110ac:	mvn	r1, #4
   110b0:	add	r0, r0, r1
   110b4:	bl	10d28 <atoi@plt>
   110b8:	ldr	r1, [fp, #-8]
   110bc:	cmp	r0, r1
   110c0:	bge	110dc <anteriores@@Base+0x94>
   110c4:	ldr	r0, [sp, #12]
   110c8:	ldr	r1, [sp, #8]
   110cc:	ldr	r1, [r1]
   110d0:	ldr	r2, [sp, #12]
   110d4:	ldr	r2, [r2]
   110d8:	bl	11770 <vetor_insere@@Base>
   110dc:	b	110e0 <anteriores@@Base+0x98>
   110e0:	ldr	r0, [sp, #8]
   110e4:	ldr	r0, [r0, #4]
   110e8:	str	r0, [sp, #8]
   110ec:	b	11078 <anteriores@@Base+0x30>
   110f0:	ldr	r0, [sp, #12]
   110f4:	mov	sp, fp
   110f8:	pop	{fp, pc}
   110fc:	strdeq	r1, [r1], -r4

00011100 <lerAtores@@Base>:
   11100:	push	{r4, r5, fp, lr}
   11104:	add	fp, sp, #8
   11108:	sub	sp, sp, #280	; 0x118
   1110c:	str	r0, [fp, #-16]
   11110:	ldr	r0, [fp, #-16]
   11114:	movw	r1, #0
   11118:	cmp	r0, r1
   1111c:	bne	1112c <lerAtores@@Base+0x2c>
   11120:	movw	r0, #0
   11124:	str	r0, [fp, #-12]
   11128:	b	111c4 <lerAtores@@Base+0xc4>
   1112c:	ldr	r0, [pc, #156]	; 111d0 <lerAtores@@Base+0xd0>
   11130:	ldr	r0, [pc, r0]
   11134:	blx	r0
   11138:	str	r0, [sp, #8]
   1113c:	ldr	r0, [fp, #-16]
   11140:	bl	10cf8 <feof@plt>
   11144:	cmp	r0, #0
   11148:	movw	r0, #0
   1114c:	movne	r0, #1
   11150:	mvn	r1, #0
   11154:	eor	r0, r0, r1
   11158:	tst	r0, #1
   1115c:	beq	111bc <lerAtores@@Base+0xbc>
   11160:	add	r0, sp, #16
   11164:	ldr	r2, [fp, #-16]
   11168:	movw	r1, #255	; 0xff
   1116c:	bl	10cb0 <fgets@plt>
   11170:	add	r1, sp, #16
   11174:	str	r0, [sp, #4]
   11178:	mov	r0, r1
   1117c:	movw	r1, #10
   11180:	bl	10d10 <strchr@plt>
   11184:	str	r0, [sp, #12]
   11188:	ldr	r0, [sp, #12]
   1118c:	movw	r1, #0
   11190:	cmp	r0, r1
   11194:	beq	111a4 <lerAtores@@Base+0xa4>
   11198:	ldr	r0, [sp, #12]
   1119c:	movw	r1, #0
   111a0:	strb	r1, [r0]
   111a4:	add	r1, sp, #16
   111a8:	ldr	r0, [sp, #8]
   111ac:	ldr	r2, [sp, #8]
   111b0:	ldr	r2, [r2]
   111b4:	bl	11770 <vetor_insere@@Base>
   111b8:	b	1113c <lerAtores@@Base+0x3c>
   111bc:	ldr	r0, [sp, #8]
   111c0:	str	r0, [fp, #-12]
   111c4:	ldr	r0, [fp, #-12]
   111c8:	sub	sp, fp, #8
   111cc:	pop	{r4, r5, fp, pc}
   111d0:	andeq	r1, r1, ip, lsl pc

000111d4 <lerFilmes@@Base>:
   111d4:	push	{r4, r5, fp, lr}
   111d8:	add	fp, sp, #8
   111dc:	sub	sp, sp, #280	; 0x118
   111e0:	str	r0, [fp, #-16]
   111e4:	ldr	r0, [fp, #-16]
   111e8:	movw	r1, #0
   111ec:	cmp	r0, r1
   111f0:	bne	11200 <lerFilmes@@Base+0x2c>
   111f4:	movw	r0, #0
   111f8:	str	r0, [fp, #-12]
   111fc:	b	11294 <lerFilmes@@Base+0xc0>
   11200:	ldr	r0, [pc, #152]	; 112a0 <lerFilmes@@Base+0xcc>
   11204:	ldr	r0, [pc, r0]
   11208:	blx	r0
   1120c:	str	r0, [sp, #8]
   11210:	ldr	r0, [fp, #-16]
   11214:	bl	10cf8 <feof@plt>
   11218:	cmp	r0, #0
   1121c:	movw	r0, #0
   11220:	movne	r0, #1
   11224:	mvn	r1, #0
   11228:	eor	r0, r0, r1
   1122c:	tst	r0, #1
   11230:	beq	1128c <lerFilmes@@Base+0xb8>
   11234:	add	r0, sp, #16
   11238:	ldr	r2, [fp, #-16]
   1123c:	movw	r1, #255	; 0xff
   11240:	bl	10cb0 <fgets@plt>
   11244:	add	r1, sp, #16
   11248:	str	r0, [sp, #4]
   1124c:	mov	r0, r1
   11250:	movw	r1, #10
   11254:	bl	10d10 <strchr@plt>
   11258:	str	r0, [sp, #12]
   1125c:	ldr	r0, [sp, #12]
   11260:	movw	r1, #0
   11264:	cmp	r0, r1
   11268:	beq	11278 <lerFilmes@@Base+0xa4>
   1126c:	ldr	r0, [sp, #12]
   11270:	movw	r1, #0
   11274:	strb	r1, [r0]
   11278:	add	r1, sp, #16
   1127c:	ldr	r0, [sp, #8]
   11280:	movw	r2, #0
   11284:	bl	11e28 <lista_insere@@Base>
   11288:	b	11210 <lerFilmes@@Base+0x3c>
   1128c:	ldr	r0, [sp, #8]
   11290:	str	r0, [fp, #-12]
   11294:	ldr	r0, [fp, #-12]
   11298:	sub	sp, fp, #8
   1129c:	pop	{r4, r5, fp, pc}
   112a0:	andeq	r1, r1, r4, asr #28

000112a4 <main@@Base>:
   112a4:	push	{fp, lr}
   112a8:	mov	fp, sp
   112ac:	sub	sp, sp, #72	; 0x48
   112b0:	ldr	r0, [pc, #500]	; 114ac <main@@Base+0x208>
   112b4:	add	r0, pc, r0
   112b8:	ldr	r1, [pc, #496]	; 114b0 <main@@Base+0x20c>
   112bc:	add	r1, pc, r1
   112c0:	movw	r2, #0
   112c4:	str	r2, [fp, #-4]
   112c8:	bl	10c98 <fopen@plt>
   112cc:	ldr	r1, [pc, #464]	; 114a4 <main@@Base+0x200>
   112d0:	add	r1, pc, r1
   112d4:	ldr	r2, [pc, #460]	; 114a8 <main@@Base+0x204>
   112d8:	add	r2, pc, r2
   112dc:	str	r0, [fp, #-8]
   112e0:	mov	r0, r1
   112e4:	mov	r1, r2
   112e8:	bl	10c98 <fopen@plt>
   112ec:	ldr	r1, [pc, #424]	; 1149c <main@@Base+0x1f8>
   112f0:	add	r1, pc, r1
   112f4:	ldr	r2, [pc, #420]	; 114a0 <main@@Base+0x1fc>
   112f8:	add	r2, pc, r2
   112fc:	str	r0, [fp, #-12]
   11300:	mov	r0, r1
   11304:	mov	r1, r2
   11308:	bl	10c98 <fopen@plt>
   1130c:	str	r0, [fp, #-16]
   11310:	ldr	r0, [fp, #-8]
   11314:	bl	11100 <lerAtores@@Base>
   11318:	str	r0, [fp, #-20]	; 0xffffffec
   1131c:	ldr	r0, [fp, #-12]
   11320:	bl	111d4 <lerFilmes@@Base>
   11324:	str	r0, [fp, #-32]	; 0xffffffe0
   11328:	ldr	r0, [fp, #-16]
   1132c:	bl	111d4 <lerFilmes@@Base>
   11330:	str	r0, [sp, #36]	; 0x24
   11334:	ldr	r0, [fp, #-20]	; 0xffffffec
   11338:	bl	116c8 <vetor_tamanho@@Base>
   1133c:	ldr	r1, [pc, #340]	; 11498 <main@@Base+0x1f4>
   11340:	add	r1, pc, r1
   11344:	str	r0, [sp, #32]
   11348:	mov	r0, r1
   1134c:	ldr	r1, [sp, #32]
   11350:	bl	10c8c <printf@plt>
   11354:	ldr	r1, [fp, #-20]	; 0xffffffec
   11358:	str	r0, [sp, #28]
   1135c:	mov	r0, r1
   11360:	bl	10e30 <retira_duplicados@@Base>
   11364:	ldr	r0, [fp, #-20]	; 0xffffffec
   11368:	bl	116c8 <vetor_tamanho@@Base>
   1136c:	ldr	r1, [pc, #288]	; 11494 <main@@Base+0x1f0>
   11370:	add	r1, pc, r1
   11374:	str	r0, [sp, #24]
   11378:	mov	r0, r1
   1137c:	ldr	r1, [sp, #24]
   11380:	bl	10c8c <printf@plt>
   11384:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11388:	ldr	r2, [sp, #36]	; 0x24
   1138c:	str	r0, [sp, #20]
   11390:	mov	r0, r1
   11394:	mov	r1, r2
   11398:	bl	10f24 <interseta@@Base>
   1139c:	str	r0, [fp, #-24]	; 0xffffffe8
   113a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   113a4:	movw	r1, #0
   113a8:	cmp	r0, r1
   113ac:	beq	113d4 <main@@Base+0x130>
   113b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   113b4:	bl	116c8 <vetor_tamanho@@Base>
   113b8:	ldr	r1, [pc, #248]	; 114b8 <main@@Base+0x214>
   113bc:	add	r1, pc, r1
   113c0:	str	r0, [sp, #16]
   113c4:	mov	r0, r1
   113c8:	ldr	r1, [sp, #16]
   113cc:	bl	10c8c <printf@plt>
   113d0:	b	113e0 <main@@Base+0x13c>
   113d4:	ldr	r0, [pc, #216]	; 114b4 <main@@Base+0x210>
   113d8:	add	r0, pc, r0
   113dc:	bl	10c8c <printf@plt>
   113e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   113e4:	movw	r1, #2000	; 0x7d0
   113e8:	bl	11048 <anteriores@@Base>
   113ec:	str	r0, [fp, #-28]	; 0xffffffe4
   113f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   113f4:	movw	r1, #0
   113f8:	cmp	r0, r1
   113fc:	beq	11424 <main@@Base+0x180>
   11400:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11404:	bl	116c8 <vetor_tamanho@@Base>
   11408:	ldr	r1, [pc, #176]	; 114c0 <main@@Base+0x21c>
   1140c:	add	r1, pc, r1
   11410:	str	r0, [sp, #12]
   11414:	mov	r0, r1
   11418:	ldr	r1, [sp, #12]
   1141c:	bl	10c8c <printf@plt>
   11420:	b	11430 <main@@Base+0x18c>
   11424:	ldr	r0, [pc, #144]	; 114bc <main@@Base+0x218>
   11428:	add	r0, pc, r0
   1142c:	bl	10c8c <printf@plt>
   11430:	ldr	r0, [fp, #-20]	; 0xffffffec
   11434:	bl	11528 <vetor_apaga@@Base>
   11438:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1143c:	bl	11528 <vetor_apaga@@Base>
   11440:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11444:	bl	11528 <vetor_apaga@@Base>
   11448:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1144c:	bl	11cf0 <lista_apaga@@Base>
   11450:	ldr	r0, [sp, #36]	; 0x24
   11454:	bl	11cf0 <lista_apaga@@Base>
   11458:	ldr	r0, [fp, #-8]
   1145c:	bl	10d1c <fclose@plt>
   11460:	ldr	r1, [fp, #-12]
   11464:	str	r0, [sp, #8]
   11468:	mov	r0, r1
   1146c:	bl	10d1c <fclose@plt>
   11470:	ldr	r1, [fp, #-16]
   11474:	str	r0, [sp, #4]
   11478:	mov	r0, r1
   1147c:	bl	10d1c <fclose@plt>
   11480:	movw	r1, #0
   11484:	str	r0, [sp]
   11488:	mov	r0, r1
   1148c:	mov	sp, fp
   11490:	pop	{fp, pc}
   11494:	andeq	r1, r0, r0, ror r1
   11498:	andeq	r1, r0, sp, lsl #3
   1149c:	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
   114a0:			; <UNDEFINED> instruction: 0x000011bc
   114a4:	andeq	r1, r0, r6, ror #3
   114a8:	ldrdeq	r1, [r0], -ip
   114ac:	strdeq	r1, [r0], -r4
   114b0:	strdeq	r1, [r0], -r8
   114b4:	andeq	r1, r0, r3, asr #2
   114b8:	andeq	r1, r0, r0, asr #2
   114bc:	andeq	r1, r0, ip, lsr #2
   114c0:	andeq	r1, r0, r7, lsr #2

000114c4 <vetor_novo@@Base>:
   114c4:	push	{fp, lr}
   114c8:	mov	fp, sp
   114cc:	sub	sp, sp, #8
   114d0:	movw	r0, #12
   114d4:	bl	10cd4 <malloc@plt>
   114d8:	str	r0, [sp]
   114dc:	ldr	r0, [sp]
   114e0:	movw	r1, #0
   114e4:	cmp	r0, r1
   114e8:	bne	114f8 <vetor_novo@@Base+0x34>
   114ec:	movw	r0, #0
   114f0:	str	r0, [sp, #4]
   114f4:	b	1151c <vetor_novo@@Base+0x58>
   114f8:	ldr	r0, [sp]
   114fc:	movw	r1, #0
   11500:	str	r1, [r0]
   11504:	ldr	r0, [sp]
   11508:	str	r1, [r0, #4]
   1150c:	ldr	r0, [sp]
   11510:	str	r1, [r0, #8]
   11514:	ldr	r0, [sp]
   11518:	str	r0, [sp, #4]
   1151c:	ldr	r0, [sp, #4]
   11520:	mov	sp, fp
   11524:	pop	{fp, pc}

00011528 <vetor_apaga@@Base>:
   11528:	push	{fp, lr}
   1152c:	mov	fp, sp
   11530:	sub	sp, sp, #8
   11534:	str	r0, [sp, #4]
   11538:	ldr	r0, [sp, #4]
   1153c:	movw	r1, #0
   11540:	cmp	r0, r1
   11544:	bne	1154c <vetor_apaga@@Base+0x24>
   11548:	b	115a4 <vetor_apaga@@Base+0x7c>
   1154c:	movw	r0, #0
   11550:	str	r0, [sp]
   11554:	ldr	r0, [sp]
   11558:	ldr	r1, [sp, #4]
   1155c:	ldr	r1, [r1]
   11560:	cmp	r0, r1
   11564:	bge	11590 <vetor_apaga@@Base+0x68>
   11568:	ldr	r0, [sp, #4]
   1156c:	ldr	r0, [r0, #8]
   11570:	ldr	r1, [sp]
   11574:	add	r0, r0, r1, lsl #2
   11578:	ldr	r0, [r0]
   1157c:	bl	10ca4 <free@plt>
   11580:	ldr	r0, [sp]
   11584:	add	r0, r0, #1
   11588:	str	r0, [sp]
   1158c:	b	11554 <vetor_apaga@@Base+0x2c>
   11590:	ldr	r0, [sp, #4]
   11594:	ldr	r0, [r0, #8]
   11598:	bl	10ca4 <free@plt>
   1159c:	ldr	r0, [sp, #4]
   115a0:	bl	10ca4 <free@plt>
   115a4:	mov	sp, fp
   115a8:	pop	{fp, pc}

000115ac <vetor_atribui@@Base>:
   115ac:	push	{fp, lr}
   115b0:	mov	fp, sp
   115b4:	sub	sp, sp, #24
   115b8:	str	r0, [fp, #-8]
   115bc:	str	r1, [sp, #12]
   115c0:	str	r2, [sp, #8]
   115c4:	ldr	r0, [fp, #-8]
   115c8:	movw	r1, #0
   115cc:	cmp	r0, r1
   115d0:	beq	115f4 <vetor_atribui@@Base+0x48>
   115d4:	ldr	r0, [sp, #12]
   115d8:	cmp	r0, #0
   115dc:	blt	115f4 <vetor_atribui@@Base+0x48>
   115e0:	ldr	r0, [sp, #12]
   115e4:	ldr	r1, [fp, #-8]
   115e8:	ldr	r1, [r1]
   115ec:	cmp	r0, r1
   115f0:	blt	11600 <vetor_atribui@@Base+0x54>
   115f4:	mvn	r0, #0
   115f8:	str	r0, [fp, #-4]
   115fc:	b	116bc <vetor_atribui@@Base+0x110>
   11600:	ldr	r0, [sp, #8]
   11604:	bl	10d04 <strlen@plt>
   11608:	str	r0, [sp, #4]
   1160c:	ldr	r0, [sp, #4]
   11610:	ldr	r1, [fp, #-8]
   11614:	ldr	r1, [r1, #8]
   11618:	ldr	r2, [sp, #12]
   1161c:	add	r1, r1, r2, lsl #2
   11620:	ldr	r1, [r1]
   11624:	str	r0, [sp]
   11628:	mov	r0, r1
   1162c:	bl	10d04 <strlen@plt>
   11630:	ldr	r1, [sp]
   11634:	cmp	r1, r0
   11638:	bls	11698 <vetor_atribui@@Base+0xec>
   1163c:	ldr	r0, [fp, #-8]
   11640:	ldr	r0, [r0, #8]
   11644:	ldr	r1, [sp, #12]
   11648:	ldr	r0, [r0, r1, lsl #2]
   1164c:	ldr	r1, [sp, #4]
   11650:	add	r1, r1, #1
   11654:	bl	10cbc <realloc@plt>
   11658:	ldr	r1, [fp, #-8]
   1165c:	ldr	r1, [r1, #8]
   11660:	ldr	r2, [sp, #12]
   11664:	str	r0, [r1, r2, lsl #2]
   11668:	ldr	r0, [fp, #-8]
   1166c:	ldr	r0, [r0, #8]
   11670:	ldr	r1, [sp, #12]
   11674:	add	r0, r0, r1, lsl #2
   11678:	ldr	r0, [r0]
   1167c:	movw	r1, #0
   11680:	cmp	r0, r1
   11684:	bne	11694 <vetor_atribui@@Base+0xe8>
   11688:	mvn	r0, #0
   1168c:	str	r0, [fp, #-4]
   11690:	b	116bc <vetor_atribui@@Base+0x110>
   11694:	b	11698 <vetor_atribui@@Base+0xec>
   11698:	ldr	r0, [fp, #-8]
   1169c:	ldr	r0, [r0, #8]
   116a0:	ldr	r1, [sp, #12]
   116a4:	add	r0, r0, r1, lsl #2
   116a8:	ldr	r0, [r0]
   116ac:	ldr	r1, [sp, #8]
   116b0:	bl	10cc8 <strcpy@plt>
   116b4:	ldr	r1, [sp, #12]
   116b8:	str	r1, [fp, #-4]
   116bc:	ldr	r0, [fp, #-4]
   116c0:	mov	sp, fp
   116c4:	pop	{fp, pc}

000116c8 <vetor_tamanho@@Base>:
   116c8:	sub	sp, sp, #8
   116cc:	str	r0, [sp]
   116d0:	ldr	r0, [sp]
   116d4:	movw	r1, #0
   116d8:	cmp	r0, r1
   116dc:	bne	116ec <vetor_tamanho@@Base+0x24>
   116e0:	mvn	r0, #0
   116e4:	str	r0, [sp, #4]
   116e8:	b	116f8 <vetor_tamanho@@Base+0x30>
   116ec:	ldr	r0, [sp]
   116f0:	ldr	r0, [r0]
   116f4:	str	r0, [sp, #4]
   116f8:	ldr	r0, [sp, #4]
   116fc:	add	sp, sp, #8
   11700:	bx	lr

00011704 <vetor_elemento@@Base>:
   11704:	sub	sp, sp, #12
   11708:	str	r0, [sp, #4]
   1170c:	str	r1, [sp]
   11710:	ldr	r0, [sp, #4]
   11714:	movw	r1, #0
   11718:	cmp	r0, r1
   1171c:	beq	11740 <vetor_elemento@@Base+0x3c>
   11720:	ldr	r0, [sp]
   11724:	cmp	r0, #0
   11728:	blt	11740 <vetor_elemento@@Base+0x3c>
   1172c:	ldr	r0, [sp]
   11730:	ldr	r1, [sp, #4]
   11734:	ldr	r1, [r1]
   11738:	cmp	r0, r1
   1173c:	blt	1174c <vetor_elemento@@Base+0x48>
   11740:	movw	r0, #0
   11744:	str	r0, [sp, #8]
   11748:	b	11764 <vetor_elemento@@Base+0x60>
   1174c:	ldr	r0, [sp, #4]
   11750:	ldr	r0, [r0, #8]
   11754:	ldr	r1, [sp]
   11758:	add	r0, r0, r1, lsl #2
   1175c:	ldr	r0, [r0]
   11760:	str	r0, [sp, #8]
   11764:	ldr	r0, [sp, #8]
   11768:	add	sp, sp, #12
   1176c:	bx	lr

00011770 <vetor_insere@@Base>:
   11770:	push	{fp, lr}
   11774:	mov	fp, sp
   11778:	sub	sp, sp, #24
   1177c:	str	r0, [fp, #-8]
   11780:	str	r1, [sp, #12]
   11784:	str	r2, [sp, #8]
   11788:	ldr	r0, [fp, #-8]
   1178c:	movw	r1, #0
   11790:	cmp	r0, r1
   11794:	beq	117b8 <vetor_insere@@Base+0x48>
   11798:	ldr	r0, [sp, #8]
   1179c:	cmp	r0, #0
   117a0:	blt	117b8 <vetor_insere@@Base+0x48>
   117a4:	ldr	r0, [sp, #8]
   117a8:	ldr	r1, [fp, #-8]
   117ac:	ldr	r1, [r1]
   117b0:	cmp	r0, r1
   117b4:	ble	117c4 <vetor_insere@@Base+0x54>
   117b8:	mvn	r0, #0
   117bc:	str	r0, [fp, #-4]
   117c0:	b	11920 <vetor_insere@@Base+0x1b0>
   117c4:	ldr	r0, [fp, #-8]
   117c8:	ldr	r0, [r0]
   117cc:	ldr	r1, [fp, #-8]
   117d0:	ldr	r1, [r1, #4]
   117d4:	cmp	r0, r1
   117d8:	bne	1184c <vetor_insere@@Base+0xdc>
   117dc:	ldr	r0, [fp, #-8]
   117e0:	ldr	r0, [r0, #4]
   117e4:	cmp	r0, #0
   117e8:	bne	117fc <vetor_insere@@Base+0x8c>
   117ec:	ldr	r0, [fp, #-8]
   117f0:	movw	r1, #1
   117f4:	str	r1, [r0, #4]
   117f8:	b	1180c <vetor_insere@@Base+0x9c>
   117fc:	ldr	r0, [fp, #-8]
   11800:	ldr	r1, [r0, #4]
   11804:	lsl	r1, r1, #1
   11808:	str	r1, [r0, #4]
   1180c:	ldr	r0, [fp, #-8]
   11810:	ldr	r1, [r0, #4]
   11814:	ldr	r0, [r0, #8]
   11818:	lsl	r1, r1, #2
   1181c:	bl	10cbc <realloc@plt>
   11820:	ldr	r1, [fp, #-8]
   11824:	str	r0, [r1, #8]
   11828:	ldr	r0, [fp, #-8]
   1182c:	ldr	r0, [r0, #8]
   11830:	movw	r1, #0
   11834:	cmp	r0, r1
   11838:	bne	11848 <vetor_insere@@Base+0xd8>
   1183c:	mvn	r0, #0
   11840:	str	r0, [fp, #-4]
   11844:	b	11920 <vetor_insere@@Base+0x1b0>
   11848:	b	1184c <vetor_insere@@Base+0xdc>
   1184c:	ldr	r0, [fp, #-8]
   11850:	ldr	r0, [r0]
   11854:	sub	r0, r0, #1
   11858:	str	r0, [sp, #4]
   1185c:	ldr	r0, [sp, #4]
   11860:	ldr	r1, [sp, #8]
   11864:	cmp	r0, r1
   11868:	blt	1189c <vetor_insere@@Base+0x12c>
   1186c:	ldr	r0, [fp, #-8]
   11870:	ldr	r0, [r0, #8]
   11874:	ldr	r1, [sp, #4]
   11878:	add	r0, r0, r1, lsl #2
   1187c:	add	r1, r0, #4
   11880:	ldr	r0, [r0]
   11884:	str	r0, [r1]
   11888:	ldr	r0, [sp, #4]
   1188c:	mvn	r1, #0
   11890:	add	r0, r0, r1
   11894:	str	r0, [sp, #4]
   11898:	b	1185c <vetor_insere@@Base+0xec>
   1189c:	ldr	r0, [sp, #12]
   118a0:	bl	10d04 <strlen@plt>
   118a4:	add	r0, r0, #1
   118a8:	mov	r1, #1
   118ac:	bl	10c74 <calloc@plt>
   118b0:	ldr	r1, [fp, #-8]
   118b4:	ldr	r1, [r1, #8]
   118b8:	ldr	r2, [sp, #8]
   118bc:	str	r0, [r1, r2, lsl #2]
   118c0:	ldr	r0, [fp, #-8]
   118c4:	ldr	r0, [r0, #8]
   118c8:	ldr	r1, [sp, #8]
   118cc:	add	r0, r0, r1, lsl #2
   118d0:	ldr	r0, [r0]
   118d4:	movw	r1, #0
   118d8:	cmp	r0, r1
   118dc:	bne	118ec <vetor_insere@@Base+0x17c>
   118e0:	mvn	r0, #0
   118e4:	str	r0, [fp, #-4]
   118e8:	b	11920 <vetor_insere@@Base+0x1b0>
   118ec:	ldr	r0, [fp, #-8]
   118f0:	ldr	r0, [r0, #8]
   118f4:	ldr	r1, [sp, #8]
   118f8:	add	r0, r0, r1, lsl #2
   118fc:	ldr	r0, [r0]
   11900:	ldr	r1, [sp, #12]
   11904:	bl	10cc8 <strcpy@plt>
   11908:	ldr	r1, [fp, #-8]
   1190c:	ldr	r2, [r1]
   11910:	add	r2, r2, #1
   11914:	str	r2, [r1]
   11918:	ldr	r1, [sp, #8]
   1191c:	str	r1, [fp, #-4]
   11920:	ldr	r0, [fp, #-4]
   11924:	mov	sp, fp
   11928:	pop	{fp, pc}

0001192c <vetor_remove@@Base>:
   1192c:	push	{fp, lr}
   11930:	mov	fp, sp
   11934:	sub	sp, sp, #16
   11938:	str	r0, [sp, #8]
   1193c:	str	r1, [sp, #4]
   11940:	ldr	r0, [sp, #8]
   11944:	movw	r1, #0
   11948:	cmp	r0, r1
   1194c:	beq	11970 <vetor_remove@@Base+0x44>
   11950:	ldr	r0, [sp, #4]
   11954:	cmp	r0, #0
   11958:	blt	11970 <vetor_remove@@Base+0x44>
   1195c:	ldr	r0, [sp, #4]
   11960:	ldr	r1, [sp, #8]
   11964:	ldr	r1, [r1]
   11968:	cmp	r0, r1
   1196c:	blt	1197c <vetor_remove@@Base+0x50>
   11970:	mvn	r0, #0
   11974:	str	r0, [fp, #-4]
   11978:	b	119fc <vetor_remove@@Base+0xd0>
   1197c:	ldr	r0, [sp, #8]
   11980:	ldr	r0, [r0, #8]
   11984:	ldr	r1, [sp, #4]
   11988:	add	r0, r0, r1, lsl #2
   1198c:	ldr	r0, [r0]
   11990:	bl	10ca4 <free@plt>
   11994:	ldr	r0, [sp, #4]
   11998:	add	r0, r0, #1
   1199c:	str	r0, [sp]
   119a0:	ldr	r0, [sp]
   119a4:	ldr	r1, [sp, #8]
   119a8:	ldr	r1, [r1]
   119ac:	cmp	r0, r1
   119b0:	bge	119e0 <vetor_remove@@Base+0xb4>
   119b4:	ldr	r0, [sp, #8]
   119b8:	ldr	r0, [r0, #8]
   119bc:	ldr	r1, [sp]
   119c0:	add	r0, r0, r1, lsl #2
   119c4:	sub	r1, r0, #4
   119c8:	ldr	r0, [r0]
   119cc:	str	r0, [r1]
   119d0:	ldr	r0, [sp]
   119d4:	add	r0, r0, #1
   119d8:	str	r0, [sp]
   119dc:	b	119a0 <vetor_remove@@Base+0x74>
   119e0:	ldr	r0, [sp, #8]
   119e4:	ldr	r1, [r0]
   119e8:	mvn	r2, #0
   119ec:	add	r1, r1, r2
   119f0:	str	r1, [r0]
   119f4:	movw	r0, #0
   119f8:	str	r0, [fp, #-4]
   119fc:	ldr	r0, [fp, #-4]
   11a00:	mov	sp, fp
   11a04:	pop	{fp, pc}

00011a08 <vetor_pesquisa@@Base>:
   11a08:	push	{fp, lr}
   11a0c:	mov	fp, sp
   11a10:	sub	sp, sp, #16
   11a14:	str	r0, [sp, #8]
   11a18:	str	r1, [sp, #4]
   11a1c:	ldr	r0, [sp, #8]
   11a20:	movw	r1, #0
   11a24:	cmp	r0, r1
   11a28:	bne	11a38 <vetor_pesquisa@@Base+0x30>
   11a2c:	mvn	r0, #0
   11a30:	str	r0, [fp, #-4]
   11a34:	b	11aa0 <vetor_pesquisa@@Base+0x98>
   11a38:	movw	r0, #0
   11a3c:	str	r0, [sp]
   11a40:	ldr	r0, [sp]
   11a44:	ldr	r1, [sp, #8]
   11a48:	ldr	r1, [r1]
   11a4c:	cmp	r0, r1
   11a50:	bge	11a98 <vetor_pesquisa@@Base+0x90>
   11a54:	ldr	r0, [sp, #8]
   11a58:	ldr	r0, [r0, #8]
   11a5c:	ldr	r1, [sp]
   11a60:	add	r0, r0, r1, lsl #2
   11a64:	ldr	r0, [r0]
   11a68:	ldr	r1, [sp, #4]
   11a6c:	bl	10c80 <strcmp@plt>
   11a70:	cmp	r0, #0
   11a74:	bne	11a84 <vetor_pesquisa@@Base+0x7c>
   11a78:	ldr	r0, [sp]
   11a7c:	str	r0, [fp, #-4]
   11a80:	b	11aa0 <vetor_pesquisa@@Base+0x98>
   11a84:	b	11a88 <vetor_pesquisa@@Base+0x80>
   11a88:	ldr	r0, [sp]
   11a8c:	add	r0, r0, #1
   11a90:	str	r0, [sp]
   11a94:	b	11a40 <vetor_pesquisa@@Base+0x38>
   11a98:	mvn	r0, #0
   11a9c:	str	r0, [fp, #-4]
   11aa0:	ldr	r0, [fp, #-4]
   11aa4:	mov	sp, fp
   11aa8:	pop	{fp, pc}

00011aac <vetor_ordena@@Base>:
   11aac:	push	{fp, lr}
   11ab0:	mov	fp, sp
   11ab4:	sub	sp, sp, #24
   11ab8:	str	r0, [fp, #-8]
   11abc:	ldr	r0, [fp, #-8]
   11ac0:	movw	r1, #0
   11ac4:	cmp	r0, r1
   11ac8:	bne	11ad8 <vetor_ordena@@Base+0x2c>
   11acc:	mvn	r0, #0
   11ad0:	str	r0, [fp, #-4]
   11ad4:	b	11bc8 <vetor_ordena@@Base+0x11c>
   11ad8:	movw	r0, #1
   11adc:	str	r0, [sp, #12]
   11ae0:	ldr	r0, [sp, #12]
   11ae4:	ldr	r1, [fp, #-8]
   11ae8:	ldr	r1, [r1]
   11aec:	cmp	r0, r1
   11af0:	bge	11bc0 <vetor_ordena@@Base+0x114>
   11af4:	ldr	r0, [fp, #-8]
   11af8:	ldr	r0, [r0, #8]
   11afc:	ldr	r1, [sp, #12]
   11b00:	add	r0, r0, r1, lsl #2
   11b04:	ldr	r0, [r0]
   11b08:	str	r0, [sp, #4]
   11b0c:	ldr	r0, [sp, #12]
   11b10:	str	r0, [sp, #8]
   11b14:	ldr	r0, [sp, #8]
   11b18:	cmp	r0, #0
   11b1c:	movw	r0, #0
   11b20:	str	r0, [sp]
   11b24:	ble	11b58 <vetor_ordena@@Base+0xac>
   11b28:	ldr	r0, [sp, #4]
   11b2c:	ldr	r1, [fp, #-8]
   11b30:	ldr	r1, [r1, #8]
   11b34:	ldr	r2, [sp, #8]
   11b38:	sub	r2, r2, #1
   11b3c:	add	r1, r1, r2, lsl #2
   11b40:	ldr	r1, [r1]
   11b44:	bl	10c80 <strcmp@plt>
   11b48:	cmp	r0, #0
   11b4c:	movw	r0, #0
   11b50:	movlt	r0, #1
   11b54:	str	r0, [sp]
   11b58:	ldr	r0, [sp]
   11b5c:	tst	r0, #1
   11b60:	beq	11b98 <vetor_ordena@@Base+0xec>
   11b64:	ldr	r0, [fp, #-8]
   11b68:	ldr	r0, [r0, #8]
   11b6c:	ldr	r1, [sp, #8]
   11b70:	add	r2, r0, r1, lsl #2
   11b74:	sub	r1, r1, #1
   11b78:	add	r0, r0, r1, lsl #2
   11b7c:	ldr	r0, [r0]
   11b80:	str	r0, [r2]
   11b84:	ldr	r0, [sp, #8]
   11b88:	mvn	r1, #0
   11b8c:	add	r0, r0, r1
   11b90:	str	r0, [sp, #8]
   11b94:	b	11b14 <vetor_ordena@@Base+0x68>
   11b98:	ldr	r0, [sp, #4]
   11b9c:	ldr	r1, [fp, #-8]
   11ba0:	ldr	r1, [r1, #8]
   11ba4:	ldr	r2, [sp, #8]
   11ba8:	add	r1, r1, r2, lsl #2
   11bac:	str	r0, [r1]
   11bb0:	ldr	r0, [sp, #12]
   11bb4:	add	r0, r0, #1
   11bb8:	str	r0, [sp, #12]
   11bbc:	b	11ae0 <vetor_ordena@@Base+0x34>
   11bc0:	movw	r0, #0
   11bc4:	str	r0, [fp, #-4]
   11bc8:	ldr	r0, [fp, #-4]
   11bcc:	mov	sp, fp
   11bd0:	pop	{fp, pc}

00011bd4 <novo_str@@Base>:
   11bd4:	push	{fp, lr}
   11bd8:	mov	fp, sp
   11bdc:	sub	sp, sp, #16
   11be0:	str	r0, [sp, #8]
   11be4:	movw	r0, #12
   11be8:	bl	10cd4 <malloc@plt>
   11bec:	str	r0, [sp, #4]
   11bf0:	ldr	r0, [sp, #4]
   11bf4:	movw	r1, #0
   11bf8:	cmp	r0, r1
   11bfc:	bne	11c0c <novo_str@@Base+0x38>
   11c00:	movw	r0, #0
   11c04:	str	r0, [fp, #-4]
   11c08:	b	11c80 <novo_str@@Base+0xac>
   11c0c:	ldr	r0, [sp, #8]
   11c10:	bl	10d04 <strlen@plt>
   11c14:	add	r0, r0, #1
   11c18:	mov	r1, r0
   11c1c:	str	r1, [sp]
   11c20:	bl	10cd4 <malloc@plt>
   11c24:	ldr	r1, [sp, #4]
   11c28:	str	r0, [r1]
   11c2c:	ldr	r0, [sp, #4]
   11c30:	ldr	r0, [r0]
   11c34:	movw	r1, #0
   11c38:	cmp	r0, r1
   11c3c:	bne	11c54 <novo_str@@Base+0x80>
   11c40:	ldr	r0, [sp, #4]
   11c44:	bl	10ca4 <free@plt>
   11c48:	movw	r0, #0
   11c4c:	str	r0, [fp, #-4]
   11c50:	b	11c80 <novo_str@@Base+0xac>
   11c54:	ldr	r0, [sp, #4]
   11c58:	ldr	r0, [r0]
   11c5c:	ldr	r1, [sp, #8]
   11c60:	bl	10cc8 <strcpy@plt>
   11c64:	ldr	r1, [sp, #4]
   11c68:	movw	r2, #0
   11c6c:	str	r2, [r1, #4]
   11c70:	ldr	r1, [sp, #4]
   11c74:	str	r2, [r1, #8]
   11c78:	ldr	r1, [sp, #4]
   11c7c:	str	r1, [fp, #-4]
   11c80:	ldr	r0, [fp, #-4]
   11c84:	mov	sp, fp
   11c88:	pop	{fp, pc}

00011c8c <lista_nova@@Base>:
   11c8c:	push	{fp, lr}
   11c90:	mov	fp, sp
   11c94:	sub	sp, sp, #8
   11c98:	movw	r0, #12
   11c9c:	bl	10cd4 <malloc@plt>
   11ca0:	str	r0, [sp]
   11ca4:	ldr	r0, [sp]
   11ca8:	movw	r1, #0
   11cac:	cmp	r0, r1
   11cb0:	bne	11cc0 <lista_nova@@Base+0x34>
   11cb4:	movw	r0, #0
   11cb8:	str	r0, [sp, #4]
   11cbc:	b	11ce4 <lista_nova@@Base+0x58>
   11cc0:	ldr	r0, [sp]
   11cc4:	movw	r1, #0
   11cc8:	str	r1, [r0]
   11ccc:	ldr	r0, [sp]
   11cd0:	str	r1, [r0, #4]
   11cd4:	ldr	r0, [sp]
   11cd8:	str	r1, [r0, #8]
   11cdc:	ldr	r0, [sp]
   11ce0:	str	r0, [sp, #4]
   11ce4:	ldr	r0, [sp, #4]
   11ce8:	mov	sp, fp
   11cec:	pop	{fp, pc}

00011cf0 <lista_apaga@@Base>:
   11cf0:	push	{fp, lr}
   11cf4:	mov	fp, sp
   11cf8:	sub	sp, sp, #8
   11cfc:	str	r0, [sp, #4]
   11d00:	ldr	r0, [sp, #4]
   11d04:	movw	r1, #0
   11d08:	cmp	r0, r1
   11d0c:	bne	11d14 <lista_apaga@@Base+0x24>
   11d10:	b	11d6c <lista_apaga@@Base+0x7c>
   11d14:	b	11d18 <lista_apaga@@Base+0x28>
   11d18:	ldr	r0, [sp, #4]
   11d1c:	ldr	r0, [r0]
   11d20:	movw	r1, #0
   11d24:	cmp	r0, r1
   11d28:	beq	11d64 <lista_apaga@@Base+0x74>
   11d2c:	ldr	r0, [sp, #4]
   11d30:	ldr	r0, [r0]
   11d34:	str	r0, [sp]
   11d38:	ldr	r0, [sp, #4]
   11d3c:	ldr	r0, [r0]
   11d40:	ldr	r0, [r0, #4]
   11d44:	ldr	r1, [sp, #4]
   11d48:	str	r0, [r1]
   11d4c:	ldr	r0, [sp]
   11d50:	ldr	r0, [r0]
   11d54:	bl	10ca4 <free@plt>
   11d58:	ldr	r0, [sp]
   11d5c:	bl	10ca4 <free@plt>
   11d60:	b	11d18 <lista_apaga@@Base+0x28>
   11d64:	ldr	r0, [sp, #4]
   11d68:	bl	10ca4 <free@plt>
   11d6c:	mov	sp, fp
   11d70:	pop	{fp, pc}

00011d74 <lista_tamanho@@Base>:
   11d74:	sub	sp, sp, #8
   11d78:	str	r0, [sp]
   11d7c:	ldr	r0, [sp]
   11d80:	movw	r1, #0
   11d84:	cmp	r0, r1
   11d88:	bne	11d98 <lista_tamanho@@Base+0x24>
   11d8c:	mvn	r0, #0
   11d90:	str	r0, [sp, #4]
   11d94:	b	11da4 <lista_tamanho@@Base+0x30>
   11d98:	ldr	r0, [sp]
   11d9c:	ldr	r0, [r0, #8]
   11da0:	str	r0, [sp, #4]
   11da4:	ldr	r0, [sp, #4]
   11da8:	add	sp, sp, #8
   11dac:	bx	lr

00011db0 <lista_inicio@@Base>:
   11db0:	sub	sp, sp, #8
   11db4:	str	r0, [sp]
   11db8:	ldr	r0, [sp]
   11dbc:	movw	r1, #0
   11dc0:	cmp	r0, r1
   11dc4:	bne	11dd4 <lista_inicio@@Base+0x24>
   11dc8:	movw	r0, #0
   11dcc:	str	r0, [sp, #4]
   11dd0:	b	11de0 <lista_inicio@@Base+0x30>
   11dd4:	ldr	r0, [sp]
   11dd8:	ldr	r0, [r0]
   11ddc:	str	r0, [sp, #4]
   11de0:	ldr	r0, [sp, #4]
   11de4:	add	sp, sp, #8
   11de8:	bx	lr

00011dec <lista_fim@@Base>:
   11dec:	sub	sp, sp, #8
   11df0:	str	r0, [sp]
   11df4:	ldr	r0, [sp]
   11df8:	movw	r1, #0
   11dfc:	cmp	r0, r1
   11e00:	bne	11e10 <lista_fim@@Base+0x24>
   11e04:	movw	r0, #0
   11e08:	str	r0, [sp, #4]
   11e0c:	b	11e1c <lista_fim@@Base+0x30>
   11e10:	ldr	r0, [sp]
   11e14:	ldr	r0, [r0, #4]
   11e18:	str	r0, [sp, #4]
   11e1c:	ldr	r0, [sp, #4]
   11e20:	add	sp, sp, #8
   11e24:	bx	lr

00011e28 <lista_insere@@Base>:
   11e28:	push	{fp, lr}
   11e2c:	mov	fp, sp
   11e30:	sub	sp, sp, #24
   11e34:	str	r0, [fp, #-8]
   11e38:	str	r1, [sp, #12]
   11e3c:	str	r2, [sp, #8]
   11e40:	movw	r0, #0
   11e44:	str	r0, [sp, #4]
   11e48:	ldr	r1, [fp, #-8]
   11e4c:	cmp	r1, r0
   11e50:	beq	11e64 <lista_insere@@Base+0x3c>
   11e54:	ldr	r0, [sp, #12]
   11e58:	movw	r1, #0
   11e5c:	cmp	r0, r1
   11e60:	bne	11e70 <lista_insere@@Base+0x48>
   11e64:	movw	r0, #0
   11e68:	str	r0, [fp, #-4]
   11e6c:	b	11fa8 <lista_insere@@Base+0x180>
   11e70:	ldr	r0, [sp, #12]
   11e74:	bl	11bd4 <novo_str@@Base>
   11e78:	str	r0, [sp, #4]
   11e7c:	ldr	r0, [sp, #4]
   11e80:	movw	r1, #0
   11e84:	cmp	r0, r1
   11e88:	bne	11e98 <lista_insere@@Base+0x70>
   11e8c:	movw	r0, #0
   11e90:	str	r0, [fp, #-4]
   11e94:	b	11fa8 <lista_insere@@Base+0x180>
   11e98:	ldr	r0, [fp, #-8]
   11e9c:	ldr	r1, [r0, #8]
   11ea0:	add	r1, r1, #1
   11ea4:	str	r1, [r0, #8]
   11ea8:	ldr	r0, [sp, #8]
   11eac:	movw	r1, #0
   11eb0:	cmp	r0, r1
   11eb4:	bne	11f1c <lista_insere@@Base+0xf4>
   11eb8:	ldr	r0, [fp, #-8]
   11ebc:	ldr	r0, [r0]
   11ec0:	movw	r1, #0
   11ec4:	cmp	r0, r1
   11ec8:	bne	11ee4 <lista_insere@@Base+0xbc>
   11ecc:	ldr	r0, [sp, #4]
   11ed0:	ldr	r1, [fp, #-8]
   11ed4:	str	r0, [r1, #4]
   11ed8:	ldr	r1, [fp, #-8]
   11edc:	str	r0, [r1]
   11ee0:	b	11f10 <lista_insere@@Base+0xe8>
   11ee4:	ldr	r0, [fp, #-8]
   11ee8:	ldr	r0, [r0, #4]
   11eec:	ldr	r1, [sp, #4]
   11ef0:	str	r0, [r1, #8]
   11ef4:	ldr	r0, [sp, #4]
   11ef8:	ldr	r1, [fp, #-8]
   11efc:	ldr	r1, [r1, #4]
   11f00:	str	r0, [r1, #4]
   11f04:	ldr	r0, [sp, #4]
   11f08:	ldr	r1, [fp, #-8]
   11f0c:	str	r0, [r1, #4]
   11f10:	ldr	r0, [sp, #4]
   11f14:	str	r0, [fp, #-4]
   11f18:	b	11fa8 <lista_insere@@Base+0x180>
   11f1c:	ldr	r0, [sp, #8]
   11f20:	ldr	r1, [fp, #-8]
   11f24:	ldr	r1, [r1]
   11f28:	cmp	r0, r1
   11f2c:	bne	11f68 <lista_insere@@Base+0x140>
   11f30:	ldr	r0, [fp, #-8]
   11f34:	ldr	r0, [r0]
   11f38:	ldr	r1, [sp, #4]
   11f3c:	str	r0, [r1, #4]
   11f40:	ldr	r0, [sp, #4]
   11f44:	ldr	r1, [fp, #-8]
   11f48:	ldr	r1, [r1]
   11f4c:	str	r0, [r1, #8]
   11f50:	ldr	r0, [sp, #4]
   11f54:	ldr	r1, [fp, #-8]
   11f58:	str	r0, [r1]
   11f5c:	ldr	r0, [sp, #4]
   11f60:	str	r0, [fp, #-4]
   11f64:	b	11fa8 <lista_insere@@Base+0x180>
   11f68:	ldr	r0, [sp, #8]
   11f6c:	ldr	r0, [r0, #8]
   11f70:	ldr	r1, [sp, #4]
   11f74:	str	r0, [r1, #8]
   11f78:	ldr	r0, [sp, #8]
   11f7c:	ldr	r1, [sp, #4]
   11f80:	str	r0, [r1, #4]
   11f84:	ldr	r0, [sp, #4]
   11f88:	ldr	r1, [sp, #8]
   11f8c:	ldr	r1, [r1, #8]
   11f90:	str	r0, [r1, #4]
   11f94:	ldr	r0, [sp, #4]
   11f98:	ldr	r1, [sp, #8]
   11f9c:	str	r0, [r1, #8]
   11fa0:	ldr	r0, [sp, #4]
   11fa4:	str	r0, [fp, #-4]
   11fa8:	ldr	r0, [fp, #-4]
   11fac:	mov	sp, fp
   11fb0:	pop	{fp, pc}

00011fb4 <lista_remove@@Base>:
   11fb4:	push	{fp, lr}
   11fb8:	mov	fp, sp
   11fbc:	sub	sp, sp, #16
   11fc0:	str	r0, [sp, #8]
   11fc4:	str	r1, [sp, #4]
   11fc8:	ldr	r0, [sp, #8]
   11fcc:	movw	r1, #0
   11fd0:	cmp	r0, r1
   11fd4:	beq	11fe8 <lista_remove@@Base+0x34>
   11fd8:	ldr	r0, [sp, #4]
   11fdc:	movw	r1, #0
   11fe0:	cmp	r0, r1
   11fe4:	bne	11ff4 <lista_remove@@Base+0x40>
   11fe8:	movw	r0, #0
   11fec:	str	r0, [fp, #-4]
   11ff0:	b	120a8 <lista_remove@@Base+0xf4>
   11ff4:	ldr	r0, [sp, #8]
   11ff8:	ldr	r1, [r0, #8]
   11ffc:	mvn	r2, #0
   12000:	add	r1, r1, r2
   12004:	str	r1, [r0, #8]
   12008:	ldr	r0, [sp, #4]
   1200c:	ldr	r0, [r0, #8]
   12010:	movw	r1, #0
   12014:	cmp	r0, r1
   12018:	beq	12034 <lista_remove@@Base+0x80>
   1201c:	ldr	r0, [sp, #4]
   12020:	ldr	r0, [r0, #4]
   12024:	ldr	r1, [sp, #4]
   12028:	ldr	r1, [r1, #8]
   1202c:	str	r0, [r1, #4]
   12030:	b	12044 <lista_remove@@Base+0x90>
   12034:	ldr	r0, [sp, #4]
   12038:	ldr	r0, [r0, #4]
   1203c:	ldr	r1, [sp, #8]
   12040:	str	r0, [r1]
   12044:	ldr	r0, [sp, #4]
   12048:	ldr	r0, [r0, #4]
   1204c:	movw	r1, #0
   12050:	cmp	r0, r1
   12054:	beq	12070 <lista_remove@@Base+0xbc>
   12058:	ldr	r0, [sp, #4]
   1205c:	ldr	r0, [r0, #8]
   12060:	ldr	r1, [sp, #4]
   12064:	ldr	r1, [r1, #4]
   12068:	str	r0, [r1, #8]
   1206c:	b	12080 <lista_remove@@Base+0xcc>
   12070:	ldr	r0, [sp, #4]
   12074:	ldr	r0, [r0, #8]
   12078:	ldr	r1, [sp, #8]
   1207c:	str	r0, [r1, #4]
   12080:	ldr	r0, [sp, #4]
   12084:	ldr	r0, [r0, #4]
   12088:	str	r0, [sp]
   1208c:	ldr	r0, [sp, #4]
   12090:	ldr	r0, [r0]
   12094:	bl	10ca4 <free@plt>
   12098:	ldr	r0, [sp, #4]
   1209c:	bl	10ca4 <free@plt>
   120a0:	ldr	r0, [sp]
   120a4:	str	r0, [fp, #-4]
   120a8:	ldr	r0, [fp, #-4]
   120ac:	mov	sp, fp
   120b0:	pop	{fp, pc}

000120b4 <lista_pesquisa@@Base>:
   120b4:	push	{fp, lr}
   120b8:	mov	fp, sp
   120bc:	sub	sp, sp, #24
   120c0:	str	r0, [fp, #-8]
   120c4:	str	r1, [sp, #12]
   120c8:	str	r2, [sp, #8]
   120cc:	ldr	r0, [fp, #-8]
   120d0:	movw	r1, #0
   120d4:	cmp	r0, r1
   120d8:	beq	12104 <lista_pesquisa@@Base+0x50>
   120dc:	ldr	r0, [sp, #12]
   120e0:	movw	r1, #0
   120e4:	cmp	r0, r1
   120e8:	beq	12104 <lista_pesquisa@@Base+0x50>
   120ec:	ldr	r0, [sp, #8]
   120f0:	cmp	r0, #0
   120f4:	beq	12110 <lista_pesquisa@@Base+0x5c>
   120f8:	ldr	r0, [sp, #8]
   120fc:	cmp	r0, #1
   12100:	beq	12110 <lista_pesquisa@@Base+0x5c>
   12104:	movw	r0, #0
   12108:	str	r0, [fp, #-4]
   1210c:	b	121d8 <lista_pesquisa@@Base+0x124>
   12110:	ldr	r0, [sp, #8]
   12114:	cmp	r0, #0
   12118:	bne	1217c <lista_pesquisa@@Base+0xc8>
   1211c:	ldr	r0, [fp, #-8]
   12120:	ldr	r0, [r0]
   12124:	str	r0, [sp, #4]
   12128:	ldr	r0, [sp, #4]
   1212c:	movw	r1, #0
   12130:	cmp	r0, r1
   12134:	beq	12170 <lista_pesquisa@@Base+0xbc>
   12138:	ldr	r0, [sp, #4]
   1213c:	ldr	r0, [r0]
   12140:	ldr	r1, [sp, #12]
   12144:	bl	10c80 <strcmp@plt>
   12148:	cmp	r0, #0
   1214c:	bne	1215c <lista_pesquisa@@Base+0xa8>
   12150:	ldr	r0, [sp, #4]
   12154:	str	r0, [fp, #-4]
   12158:	b	121d8 <lista_pesquisa@@Base+0x124>
   1215c:	b	12160 <lista_pesquisa@@Base+0xac>
   12160:	ldr	r0, [sp, #4]
   12164:	ldr	r0, [r0, #4]
   12168:	str	r0, [sp, #4]
   1216c:	b	12128 <lista_pesquisa@@Base+0x74>
   12170:	movw	r0, #0
   12174:	str	r0, [fp, #-4]
   12178:	b	121d8 <lista_pesquisa@@Base+0x124>
   1217c:	ldr	r0, [fp, #-8]
   12180:	ldr	r0, [r0, #4]
   12184:	str	r0, [sp, #4]
   12188:	ldr	r0, [sp, #4]
   1218c:	movw	r1, #0
   12190:	cmp	r0, r1
   12194:	beq	121d0 <lista_pesquisa@@Base+0x11c>
   12198:	ldr	r0, [sp, #4]
   1219c:	ldr	r0, [r0]
   121a0:	ldr	r1, [sp, #12]
   121a4:	bl	10c80 <strcmp@plt>
   121a8:	cmp	r0, #0
   121ac:	bne	121bc <lista_pesquisa@@Base+0x108>
   121b0:	ldr	r0, [sp, #4]
   121b4:	str	r0, [fp, #-4]
   121b8:	b	121d8 <lista_pesquisa@@Base+0x124>
   121bc:	b	121c0 <lista_pesquisa@@Base+0x10c>
   121c0:	ldr	r0, [sp, #4]
   121c4:	ldr	r0, [r0, #8]
   121c8:	str	r0, [sp, #4]
   121cc:	b	12188 <lista_pesquisa@@Base+0xd4>
   121d0:	movw	r0, #0
   121d4:	str	r0, [fp, #-4]
   121d8:	ldr	r0, [fp, #-4]
   121dc:	mov	sp, fp
   121e0:	pop	{fp, pc}

000121e4 <lista_ordena@@Base>:
   121e4:	push	{fp, lr}
   121e8:	mov	fp, sp
   121ec:	sub	sp, sp, #24
   121f0:	str	r0, [fp, #-8]
   121f4:	ldr	r0, [fp, #-8]
   121f8:	movw	r1, #0
   121fc:	cmp	r0, r1
   12200:	bne	12210 <lista_ordena@@Base+0x2c>
   12204:	mvn	r0, #0
   12208:	str	r0, [fp, #-4]
   1220c:	b	122dc <lista_ordena@@Base+0xf8>
   12210:	ldr	r0, [fp, #-8]
   12214:	ldr	r0, [r0]
   12218:	str	r0, [sp, #8]
   1221c:	ldr	r0, [sp, #8]
   12220:	ldr	r0, [r0, #4]
   12224:	movw	r1, #0
   12228:	cmp	r0, r1
   1222c:	beq	122d4 <lista_ordena@@Base+0xf0>
   12230:	ldr	r0, [sp, #8]
   12234:	str	r0, [sp, #4]
   12238:	ldr	r0, [sp, #8]
   1223c:	ldr	r0, [r0, #4]
   12240:	str	r0, [sp, #12]
   12244:	ldr	r0, [sp, #12]
   12248:	movw	r1, #0
   1224c:	cmp	r0, r1
   12250:	beq	12288 <lista_ordena@@Base+0xa4>
   12254:	ldr	r0, [sp, #12]
   12258:	ldr	r0, [r0]
   1225c:	ldr	r1, [sp, #4]
   12260:	ldr	r1, [r1]
   12264:	bl	10c80 <strcmp@plt>
   12268:	cmp	r0, #0
   1226c:	bge	12278 <lista_ordena@@Base+0x94>
   12270:	ldr	r0, [sp, #12]
   12274:	str	r0, [sp, #4]
   12278:	ldr	r0, [sp, #12]
   1227c:	ldr	r0, [r0, #4]
   12280:	str	r0, [sp, #12]
   12284:	b	12244 <lista_ordena@@Base+0x60>
   12288:	ldr	r0, [sp, #4]
   1228c:	ldr	r1, [sp, #8]
   12290:	cmp	r0, r1
   12294:	beq	122c0 <lista_ordena@@Base+0xdc>
   12298:	ldr	r0, [sp, #8]
   1229c:	ldr	r0, [r0]
   122a0:	str	r0, [sp]
   122a4:	ldr	r0, [sp, #4]
   122a8:	ldr	r0, [r0]
   122ac:	ldr	r1, [sp, #8]
   122b0:	str	r0, [r1]
   122b4:	ldr	r0, [sp]
   122b8:	ldr	r1, [sp, #4]
   122bc:	str	r0, [r1]
   122c0:	b	122c4 <lista_ordena@@Base+0xe0>
   122c4:	ldr	r0, [sp, #8]
   122c8:	ldr	r0, [r0, #4]
   122cc:	str	r0, [sp, #8]
   122d0:	b	1221c <lista_ordena@@Base+0x38>
   122d4:	movw	r0, #0
   122d8:	str	r0, [fp, #-4]
   122dc:	ldr	r0, [fp, #-4]
   122e0:	mov	sp, fp
   122e4:	pop	{fp, pc}

000122e8 <lista_inverte@@Base>:
   122e8:	sub	sp, sp, #20
   122ec:	str	r0, [sp, #12]
   122f0:	ldr	r0, [sp, #12]
   122f4:	movw	r1, #0
   122f8:	cmp	r0, r1
   122fc:	bne	1230c <lista_inverte@@Base+0x24>
   12300:	mvn	r0, #0
   12304:	str	r0, [sp, #16]
   12308:	b	12434 <lista_inverte@@Base+0x14c>
   1230c:	ldr	r0, [sp, #12]
   12310:	ldr	r0, [r0, #8]
   12314:	cmp	r0, #2
   12318:	bge	12328 <lista_inverte@@Base+0x40>
   1231c:	movw	r0, #0
   12320:	str	r0, [sp, #16]
   12324:	b	12434 <lista_inverte@@Base+0x14c>
   12328:	ldr	r0, [sp, #12]
   1232c:	ldr	r0, [r0]
   12330:	ldr	r0, [r0, #4]
   12334:	str	r0, [sp, #4]
   12338:	movw	r0, #0
   1233c:	str	r0, [sp, #8]
   12340:	ldr	r0, [sp, #8]
   12344:	ldr	r1, [sp, #12]
   12348:	ldr	r1, [r1, #8]
   1234c:	sub	r1, r1, #2
   12350:	cmp	r0, r1
   12354:	bge	123d0 <lista_inverte@@Base+0xe8>
   12358:	ldr	r0, [sp, #4]
   1235c:	ldr	r0, [r0, #4]
   12360:	ldr	r1, [sp, #4]
   12364:	ldr	r1, [r1, #8]
   12368:	str	r0, [r1, #4]
   1236c:	ldr	r0, [sp, #4]
   12370:	ldr	r0, [r0, #8]
   12374:	ldr	r1, [sp, #4]
   12378:	ldr	r1, [r1, #4]
   1237c:	str	r0, [r1, #8]
   12380:	ldr	r0, [sp, #4]
   12384:	ldr	r0, [r0, #4]
   12388:	str	r0, [sp]
   1238c:	ldr	r0, [sp, #12]
   12390:	ldr	r0, [r0]
   12394:	ldr	r1, [sp, #4]
   12398:	str	r0, [r1, #4]
   1239c:	ldr	r0, [sp, #4]
   123a0:	ldr	r1, [sp, #12]
   123a4:	ldr	r1, [r1]
   123a8:	str	r0, [r1, #8]
   123ac:	ldr	r0, [sp, #4]
   123b0:	ldr	r1, [sp, #12]
   123b4:	str	r0, [r1]
   123b8:	ldr	r0, [sp]
   123bc:	str	r0, [sp, #4]
   123c0:	ldr	r0, [sp, #8]
   123c4:	add	r0, r0, #1
   123c8:	str	r0, [sp, #8]
   123cc:	b	12340 <lista_inverte@@Base+0x58>
   123d0:	ldr	r0, [sp, #12]
   123d4:	ldr	r0, [r0, #4]
   123d8:	str	r0, [sp, #4]
   123dc:	ldr	r0, [sp, #4]
   123e0:	ldr	r0, [r0, #8]
   123e4:	ldr	r1, [sp, #12]
   123e8:	str	r0, [r1, #4]
   123ec:	ldr	r0, [sp, #12]
   123f0:	ldr	r0, [r0, #4]
   123f4:	movw	r1, #0
   123f8:	str	r1, [r0, #4]
   123fc:	ldr	r0, [sp, #4]
   12400:	str	r1, [r0, #8]
   12404:	ldr	r0, [sp, #12]
   12408:	ldr	r0, [r0]
   1240c:	ldr	r2, [sp, #4]
   12410:	str	r0, [r2, #4]
   12414:	ldr	r0, [sp, #4]
   12418:	ldr	r2, [sp, #12]
   1241c:	ldr	r2, [r2]
   12420:	str	r0, [r2, #8]
   12424:	ldr	r0, [sp, #4]
   12428:	ldr	r2, [sp, #12]
   1242c:	str	r0, [r2]
   12430:	str	r1, [sp, #16]
   12434:	ldr	r0, [sp, #16]
   12438:	add	sp, sp, #20
   1243c:	bx	lr

00012440 <__libc_csu_init@@Base>:
   12440:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12444:	mov	r7, r0
   12448:	ldr	r6, [pc, #72]	; 12498 <__libc_csu_init@@Base+0x58>
   1244c:	ldr	r5, [pc, #72]	; 1249c <__libc_csu_init@@Base+0x5c>
   12450:	add	r6, pc, r6
   12454:	add	r5, pc, r5
   12458:	sub	r6, r6, r5
   1245c:	mov	r8, r1
   12460:	mov	r9, r2
   12464:	bl	10c54 <calloc@plt-0x20>
   12468:	asrs	r6, r6, #2
   1246c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12470:	mov	r4, #0
   12474:	add	r4, r4, #1
   12478:	ldr	r3, [r5], #4
   1247c:	mov	r2, r9
   12480:	mov	r1, r8
   12484:	mov	r0, r7
   12488:	blx	r3
   1248c:	cmp	r6, r4
   12490:	bne	12474 <__libc_csu_init@@Base+0x34>
   12494:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12498:			; <UNDEFINED> instruction: 0x00010ab4
   1249c:	andeq	r0, r1, ip, lsr #21

000124a0 <__libc_csu_fini@@Base>:
   124a0:	bx	lr

Disassembly of section .fini:

000124a4 <.fini>:
   124a4:	push	{r3, lr}
   124a8:	pop	{r3, pc}
