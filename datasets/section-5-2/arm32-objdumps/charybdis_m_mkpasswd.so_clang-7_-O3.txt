
../repos/charybdis/extensions/.libs/m_mkpasswd.so:     file format elf32-littlearm


Disassembly of section .init:

00000610 <_init>:
 610:	push	{r3, lr}
 614:	bl	6cc <call_weak_fn>
 618:	pop	{r3, pc}

Disassembly of section .plt:

0000061c <.plt>:
 61c:	push	{lr}		; (str lr, [sp, #-4]!)
 620:	ldr	lr, [pc, #4]	; 62c <.plt+0x10>
 624:	add	lr, pc, lr
 628:	ldr	pc, [lr, #8]!
 62c:	.word	0x000109d4

00000630 <rb_current_time@plt>:
 630:	add	ip, pc, #0, 12
 634:	add	ip, ip, #16, 20	; 0x10000
 638:	ldr	pc, [ip, #2516]!	; 0x9d4

0000063c <__cxa_finalize@plt>:
 63c:	add	ip, pc, #0, 12
 640:	add	ip, ip, #16, 20	; 0x10000
 644:	ldr	pc, [ip, #2508]!	; 0x9cc

00000648 <sendto_one@plt>:
 648:	add	ip, pc, #0, 12
 64c:	add	ip, ip, #16, 20	; 0x10000
 650:	ldr	pc, [ip, #2500]!	; 0x9c4

00000654 <read@plt>:
 654:	add	ip, pc, #0, 12
 658:	add	ip, ip, #16, 20	; 0x10000
 65c:	ldr	pc, [ip, #2492]!	; 0x9bc

00000660 <time@plt>:
 660:	add	ip, pc, #0, 12
 664:	add	ip, ip, #16, 20	; 0x10000
 668:	ldr	pc, [ip, #2484]!	; 0x9b4

0000066c <rb_crypt@plt>:
 66c:	add	ip, pc, #0, 12
 670:	add	ip, ip, #16, 20	; 0x10000
 674:	ldr	pc, [ip, #2476]!	; 0x9ac

00000678 <__gmon_start__@plt>:
 678:	add	ip, pc, #0, 12
 67c:	add	ip, ip, #16, 20	; 0x10000
 680:	ldr	pc, [ip, #2468]!	; 0x9a4

00000684 <open@plt>:
 684:	add	ip, pc, #0, 12
 688:	add	ip, ip, #16, 20	; 0x10000
 68c:	ldr	pc, [ip, #2460]!	; 0x99c

00000690 <srand@plt>:
 690:	add	ip, pc, #0, 12
 694:	add	ip, ip, #16, 20	; 0x10000
 698:	ldr	pc, [ip, #2452]!	; 0x994

0000069c <rand@plt>:
 69c:	add	ip, pc, #0, 12
 6a0:	add	ip, ip, #16, 20	; 0x10000
 6a4:	ldr	pc, [ip, #2444]!	; 0x98c

000006a8 <sendto_one_notice@plt>:
 6a8:	add	ip, pc, #0, 12
 6ac:	add	ip, ip, #16, 20	; 0x10000
 6b0:	ldr	pc, [ip, #2436]!	; 0x984

000006b4 <close@plt>:
 6b4:	add	ip, pc, #0, 12
 6b8:	add	ip, ip, #16, 20	; 0x10000
 6bc:	ldr	pc, [ip, #2428]!	; 0x97c

000006c0 <irccmp@plt>:
 6c0:	add	ip, pc, #0, 12
 6c4:	add	ip, ip, #16, 20	; 0x10000
 6c8:	ldr	pc, [ip, #2420]!	; 0x974

Disassembly of section .text:

000006cc <call_weak_fn>:
 6cc:	ldr	r3, [pc, #20]	; 6e8 <call_weak_fn+0x1c>
 6d0:	ldr	r2, [pc, #20]	; 6ec <call_weak_fn+0x20>
 6d4:	add	r3, pc, r3
 6d8:	ldr	r2, [r3, r2]
 6dc:	cmp	r2, #0
 6e0:	bxeq	lr
 6e4:	b	678 <__gmon_start__@plt>
 6e8:	.word	0x00010924
 6ec:	.word	0x00000048

000006f0 <deregister_tm_clones>:
 6f0:	ldr	r0, [pc, #44]	; 724 <deregister_tm_clones+0x34>
 6f4:	ldr	r3, [pc, #44]	; 728 <deregister_tm_clones+0x38>
 6f8:	add	r0, pc, r0
 6fc:	add	r3, pc, r3
 700:	cmp	r3, r0
 704:	ldr	r3, [pc, #32]	; 72c <deregister_tm_clones+0x3c>
 708:	add	r3, pc, r3
 70c:	bxeq	lr
 710:	ldr	r2, [pc, #24]	; 730 <deregister_tm_clones+0x40>
 714:	ldr	r3, [r3, r2]
 718:	cmp	r3, #0
 71c:	bxeq	lr
 720:	bx	r3
 724:	.word	0x000109d0
 728:	.word	0x000109cc
 72c:	.word	0x000108f0
 730:	.word	0x00000044

00000734 <register_tm_clones>:
 734:	ldr	r0, [pc, #56]	; 774 <register_tm_clones+0x40>
 738:	ldr	r3, [pc, #56]	; 778 <register_tm_clones+0x44>
 73c:	add	r0, pc, r0
 740:	add	r3, pc, r3
 744:	sub	r1, r3, r0
 748:	ldr	r3, [pc, #44]	; 77c <register_tm_clones+0x48>
 74c:	asr	r1, r1, #2
 750:	add	r3, pc, r3
 754:	add	r1, r1, r1, lsr #31
 758:	asrs	r1, r1, #1
 75c:	bxeq	lr
 760:	ldr	r2, [pc, #24]	; 780 <register_tm_clones+0x4c>
 764:	ldr	r3, [r3, r2]
 768:	cmp	r3, #0
 76c:	bxeq	lr
 770:	bx	r3
 774:	.word	0x0001098c
 778:	.word	0x00010988
 77c:	.word	0x000108a8
 780:	.word	0x0000004c

00000784 <__do_global_dtors_aux>:
 784:	ldr	r3, [pc, #76]	; 7d8 <__do_global_dtors_aux+0x54>
 788:	ldr	r2, [pc, #76]	; 7dc <__do_global_dtors_aux+0x58>
 78c:	add	r3, pc, r3
 790:	add	r2, pc, r2
 794:	ldrb	r3, [r3]
 798:	cmp	r3, #0
 79c:	bxne	lr
 7a0:	ldr	r3, [pc, #56]	; 7e0 <__do_global_dtors_aux+0x5c>
 7a4:	push	{r4, lr}
 7a8:	ldr	r3, [r2, r3]
 7ac:	cmp	r3, #0
 7b0:	beq	7c0 <__do_global_dtors_aux+0x3c>
 7b4:	ldr	r3, [pc, #40]	; 7e4 <__do_global_dtors_aux+0x60>
 7b8:	ldr	r0, [pc, r3]
 7bc:	bl	63c <__cxa_finalize@plt>
 7c0:	bl	6f0 <deregister_tm_clones>
 7c4:	ldr	r3, [pc, #28]	; 7e8 <__do_global_dtors_aux+0x64>
 7c8:	mov	r2, #1
 7cc:	add	r3, pc, r3
 7d0:	strb	r2, [r3]
 7d4:	pop	{r4, pc}
 7d8:	.word	0x0001093c
 7dc:	.word	0x00010868
 7e0:	.word	0x00000040
 7e4:	.word	0x00010898
 7e8:	.word	0x000108fc

000007ec <frame_dummy>:
 7ec:	b	734 <register_tm_clones>

000007f0 <m_mkpasswd>:
 7f0:	push	{r4, r5, r6, r7, fp, lr}
 7f4:	add	fp, sp, #16
 7f8:	sub	sp, sp, #16
 7fc:	mov	r0, #0
 800:	ldr	r7, [fp, #8]
 804:	mov	r4, r2
 808:	strb	r0, [sp, #14]
 80c:	movw	r0, #12849	; 0x3231
 810:	strh	r0, [sp, #12]
 814:	movw	r0, #18515	; 0x4853
 818:	movt	r0, #13633	; 0x3541
 81c:	str	r0, [sp, #8]
 820:	ldr	r0, [r7, #4]
 824:	cmp	r0, #0
 828:	ldrbne	r0, [r0]
 82c:	cmpne	r0, #0
 830:	bne	868 <m_mkpasswd+0x78>
 834:	ldr	r0, [pc, #424]	; 9e4 <m_mkpasswd+0x1f4>
 838:	add	r3, r4, #88	; 0x58
 83c:	add	r0, pc, r0
 840:	str	r0, [sp]
 844:	ldr	r0, [pc, #412]	; 9e8 <m_mkpasswd+0x1f8>
 848:	ldr	r0, [pc, r0]
 84c:	ldr	r1, [pc, #408]	; 9ec <m_mkpasswd+0x1fc>
 850:	add	r2, r0, #88	; 0x58
 854:	add	r1, pc, r1
 858:	mov	r0, r4
 85c:	bl	648 <sendto_one@plt>
 860:	sub	sp, fp, #16
 864:	pop	{r4, r5, r6, r7, fp, pc}
 868:	cmp	r3, #3
 86c:	ldrge	r5, [r7, #8]
 870:	ldr	r0, [pc, #376]	; 9f0 <m_mkpasswd+0x200>
 874:	ldr	r0, [pc, r0]
 878:	addlt	r5, sp, #8
 87c:	ldr	r0, [r0, #184]	; 0xb8
 880:	ldr	r1, [pc, #364]	; 9f4 <m_mkpasswd+0x204>
 884:	ldr	r1, [pc, r1]
 888:	add	r6, r0, r1
 88c:	bl	630 <rb_current_time@plt>
 890:	cmp	r6, r0
 894:	ble	8cc <m_mkpasswd+0xdc>
 898:	ldr	r0, [pc, #344]	; 9f8 <m_mkpasswd+0x208>
 89c:	add	r3, r4, #88	; 0x58
 8a0:	add	r0, pc, r0
 8a4:	str	r0, [sp]
 8a8:	ldr	r0, [pc, #332]	; 9fc <m_mkpasswd+0x20c>
 8ac:	ldr	r0, [pc, r0]
 8b0:	ldr	r1, [pc, #328]	; a00 <m_mkpasswd+0x210>
 8b4:	add	r2, r0, #88	; 0x58
 8b8:	add	r1, pc, r1
 8bc:	mov	r0, r4
 8c0:	bl	648 <sendto_one@plt>
 8c4:	sub	sp, fp, #16
 8c8:	pop	{r4, r5, r6, r7, fp, pc}
 8cc:	bl	630 <rb_current_time@plt>
 8d0:	ldr	r6, [pc, #300]	; a04 <m_mkpasswd+0x214>
 8d4:	add	r6, pc, r6
 8d8:	str	r0, [r6]
 8dc:	mov	r0, r5
 8e0:	ldr	r1, [pc, #288]	; a08 <m_mkpasswd+0x218>
 8e4:	add	r1, pc, r1
 8e8:	bl	6c0 <irccmp@plt>
 8ec:	cmp	r0, #0
 8f0:	beq	93c <m_mkpasswd+0x14c>
 8f4:	ldr	r1, [pc, #272]	; a0c <m_mkpasswd+0x21c>
 8f8:	mov	r0, r5
 8fc:	add	r1, pc, r1
 900:	bl	6c0 <irccmp@plt>
 904:	cmp	r0, #0
 908:	beq	948 <m_mkpasswd+0x158>
 90c:	ldr	r1, [pc, #252]	; a10 <m_mkpasswd+0x220>
 910:	mov	r0, r5
 914:	add	r1, pc, r1
 918:	bl	6c0 <irccmp@plt>
 91c:	cmp	r0, #0
 920:	beq	970 <m_mkpasswd+0x180>
 924:	ldr	r1, [pc, #240]	; a1c <m_mkpasswd+0x22c>
 928:	mov	r0, r4
 92c:	add	r1, pc, r1
 930:	bl	6a8 <sendto_one_notice@plt>
 934:	sub	sp, fp, #16
 938:	pop	{r4, r5, r6, r7, fp, pc}
 93c:	movw	r0, #13604	; 0x3524
 940:	strh	r0, [r6, #4]!
 944:	b	950 <m_mkpasswd+0x160>
 948:	movw	r0, #13860	; 0x3624
 94c:	strh	r0, [r6, #25]!
 950:	mov	r0, #36	; 0x24
 954:	mov	r1, #16
 958:	strb	r0, [r6, #2]
 95c:	add	r0, r6, #3
 960:	bl	bf4 <generate_random_salt>
 964:	add	r0, r6, #20
 968:	add	r1, r6, #19
 96c:	b	994 <m_mkpasswd+0x1a4>
 970:	movw	r0, #12580	; 0x3124
 974:	mov	r1, #8
 978:	strh	r0, [r6, #46]!	; 0x2e
 97c:	mov	r0, #36	; 0x24
 980:	strb	r0, [r6, #2]
 984:	add	r0, r6, #3
 988:	bl	bf4 <generate_random_salt>
 98c:	add	r0, r6, #12
 990:	add	r1, r6, #11
 994:	mov	r2, #36	; 0x24
 998:	strb	r2, [r1]
 99c:	mov	r1, #0
 9a0:	strb	r1, [r0]
 9a4:	mov	r1, r6
 9a8:	ldr	r0, [r7, #4]
 9ac:	bl	66c <rb_crypt@plt>
 9b0:	ldr	r1, [pc, #92]	; a14 <m_mkpasswd+0x224>
 9b4:	cmp	r0, #0
 9b8:	ldr	r3, [r7, #4]
 9bc:	mov	r2, r5
 9c0:	add	r1, pc, r1
 9c4:	movne	r1, r0
 9c8:	mov	r0, r4
 9cc:	str	r1, [sp]
 9d0:	ldr	r1, [pc, #64]	; a18 <m_mkpasswd+0x228>
 9d4:	add	r1, pc, r1
 9d8:	bl	6a8 <sendto_one_notice@plt>
 9dc:	sub	sp, fp, #16
 9e0:	pop	{r4, r5, r6, r7, fp, pc}
 9e4:	.word	0x000004f1
 9e8:	.word	0x00010800
 9ec:	.word	0x000004e2
 9f0:	.word	0x000107d8
 9f4:	.word	0x00010848
 9f8:	.word	0x0000048d
 9fc:	.word	0x0001079c
 a00:	.word	0x000004a3
 a04:	.word	0x000107f8
 a08:	.word	0x000004e2
 a0c:	.word	0x00000578
 a10:	.word	0x000004b9
 a14:	.word	0x00000462
 a18:	.word	0x00000438
 a1c:	.word	0x000004a5

00000a20 <mo_mkpasswd>:
 a20:	push	{r4, r5, r6, r7, fp, lr}
 a24:	add	fp, sp, #16
 a28:	sub	sp, sp, #16
 a2c:	mov	r0, #0
 a30:	ldr	r7, [fp, #8]
 a34:	mov	r4, r2
 a38:	strb	r0, [sp, #14]
 a3c:	movw	r0, #12849	; 0x3231
 a40:	strh	r0, [sp, #12]
 a44:	movw	r0, #18515	; 0x4853
 a48:	movt	r0, #13633	; 0x3541
 a4c:	str	r0, [sp, #8]
 a50:	ldr	r0, [r7, #4]
 a54:	cmp	r0, #0
 a58:	ldrbne	r0, [r0]
 a5c:	cmpne	r0, #0
 a60:	bne	a98 <mo_mkpasswd+0x78>
 a64:	ldr	r0, [pc, #344]	; bc4 <mo_mkpasswd+0x1a4>
 a68:	add	r3, r4, #88	; 0x58
 a6c:	add	r0, pc, r0
 a70:	str	r0, [sp]
 a74:	ldr	r0, [pc, #332]	; bc8 <mo_mkpasswd+0x1a8>
 a78:	ldr	r0, [pc, r0]
 a7c:	ldr	r1, [pc, #328]	; bcc <mo_mkpasswd+0x1ac>
 a80:	add	r2, r0, #88	; 0x58
 a84:	add	r1, pc, r1
 a88:	mov	r0, r4
 a8c:	bl	648 <sendto_one@plt>
 a90:	sub	sp, fp, #16
 a94:	pop	{r4, r5, r6, r7, fp, pc}
 a98:	cmp	r3, #3
 a9c:	ldrge	r5, [r7, #8]
 aa0:	ldr	r1, [pc, #296]	; bd0 <mo_mkpasswd+0x1b0>
 aa4:	addlt	r5, sp, #8
 aa8:	add	r1, pc, r1
 aac:	mov	r0, r5
 ab0:	bl	6c0 <irccmp@plt>
 ab4:	cmp	r0, #0
 ab8:	beq	b04 <mo_mkpasswd+0xe4>
 abc:	ldr	r1, [pc, #276]	; bd8 <mo_mkpasswd+0x1b8>
 ac0:	mov	r0, r5
 ac4:	add	r1, pc, r1
 ac8:	bl	6c0 <irccmp@plt>
 acc:	cmp	r0, #0
 ad0:	beq	b18 <mo_mkpasswd+0xf8>
 ad4:	ldr	r1, [pc, #260]	; be0 <mo_mkpasswd+0x1c0>
 ad8:	mov	r0, r5
 adc:	add	r1, pc, r1
 ae0:	bl	6c0 <irccmp@plt>
 ae4:	cmp	r0, #0
 ae8:	beq	b48 <mo_mkpasswd+0x128>
 aec:	ldr	r1, [pc, #252]	; bf0 <mo_mkpasswd+0x1d0>
 af0:	mov	r0, r4
 af4:	add	r1, pc, r1
 af8:	bl	6a8 <sendto_one_notice@plt>
 afc:	sub	sp, fp, #16
 b00:	pop	{r4, r5, r6, r7, fp, pc}
 b04:	ldr	r6, [pc, #200]	; bd4 <mo_mkpasswd+0x1b4>
 b08:	movw	r0, #13604	; 0x3524
 b0c:	add	r6, pc, r6
 b10:	strh	r0, [r6, #4]!
 b14:	b	b28 <mo_mkpasswd+0x108>
 b18:	ldr	r6, [pc, #188]	; bdc <mo_mkpasswd+0x1bc>
 b1c:	movw	r0, #13860	; 0x3624
 b20:	add	r6, pc, r6
 b24:	strh	r0, [r6, #25]!
 b28:	mov	r0, #36	; 0x24
 b2c:	mov	r1, #16
 b30:	strb	r0, [r6, #2]
 b34:	add	r0, r6, #3
 b38:	bl	bf4 <generate_random_salt>
 b3c:	add	r0, r6, #20
 b40:	add	r1, r6, #19
 b44:	b	b74 <mo_mkpasswd+0x154>
 b48:	ldr	r6, [pc, #148]	; be4 <mo_mkpasswd+0x1c4>
 b4c:	movw	r0, #12580	; 0x3124
 b50:	mov	r1, #8
 b54:	add	r6, pc, r6
 b58:	strh	r0, [r6, #46]!	; 0x2e
 b5c:	mov	r0, #36	; 0x24
 b60:	strb	r0, [r6, #2]
 b64:	add	r0, r6, #3
 b68:	bl	bf4 <generate_random_salt>
 b6c:	add	r0, r6, #12
 b70:	add	r1, r6, #11
 b74:	mov	r2, #36	; 0x24
 b78:	strb	r2, [r1]
 b7c:	mov	r1, #0
 b80:	strb	r1, [r0]
 b84:	mov	r1, r6
 b88:	ldr	r0, [r7, #4]
 b8c:	bl	66c <rb_crypt@plt>
 b90:	ldr	r1, [pc, #80]	; be8 <mo_mkpasswd+0x1c8>
 b94:	cmp	r0, #0
 b98:	ldr	r3, [r7, #4]
 b9c:	mov	r2, r5
 ba0:	add	r1, pc, r1
 ba4:	movne	r1, r0
 ba8:	mov	r0, r4
 bac:	str	r1, [sp]
 bb0:	ldr	r1, [pc, #52]	; bec <mo_mkpasswd+0x1cc>
 bb4:	add	r1, pc, r1
 bb8:	bl	6a8 <sendto_one_notice@plt>
 bbc:	sub	sp, fp, #16
 bc0:	pop	{r4, r5, r6, r7, fp, pc}
 bc4:	.word	0x000002c1
 bc8:	.word	0x000105d0
 bcc:	.word	0x000002b2
 bd0:	.word	0x0000031e
 bd4:	.word	0x000105c0
 bd8:	.word	0x000003b0
 bdc:	.word	0x000105ac
 be0:	.word	0x000002f1
 be4:	.word	0x00010578
 be8:	.word	0x00000282
 bec:	.word	0x00000258
 bf0:	.word	0x000002dd

00000bf4 <generate_random_salt>:
 bf4:	push	{r4, r5, r6, sl, fp, lr}
 bf8:	add	fp, sp, #16
 bfc:	mov	r5, r0
 c00:	ldr	r0, [pc, #240]	; cf8 <generate_random_salt+0x104>
 c04:	mov	r4, r1
 c08:	mov	r1, #0
 c0c:	add	r0, pc, r0
 c10:	bl	684 <open@plt>
 c14:	cmn	r0, #1
 c18:	ble	c68 <generate_random_salt+0x74>
 c1c:	mov	r1, r5
 c20:	mov	r2, r4
 c24:	mov	r6, r0
 c28:	bl	654 <read@plt>
 c2c:	cmp	r0, r4
 c30:	bne	cac <generate_random_salt+0xb8>
 c34:	cmp	r4, #1
 c38:	blt	c5c <generate_random_salt+0x68>
 c3c:	ldr	r0, [pc, #188]	; d00 <generate_random_salt+0x10c>
 c40:	add	r0, pc, r0
 c44:	ldrb	r1, [r5]
 c48:	subs	r4, r4, #1
 c4c:	and	r1, r1, #63	; 0x3f
 c50:	ldrb	r1, [r0, r1]
 c54:	strb	r1, [r5], #1
 c58:	bne	c44 <generate_random_salt+0x50>
 c5c:	mov	r0, r6
 c60:	pop	{r4, r5, r6, sl, fp, lr}
 c64:	b	6b4 <close@plt>
 c68:	mov	r0, #0
 c6c:	bl	660 <time@plt>
 c70:	bl	690 <srand@plt>
 c74:	cmp	r4, #1
 c78:	blt	cf4 <generate_random_salt+0x100>
 c7c:	ldr	r6, [pc, #120]	; cfc <generate_random_salt+0x108>
 c80:	add	r6, pc, r6
 c84:	bl	69c <rand@plt>
 c88:	asr	r1, r0, #31
 c8c:	subs	r4, r4, #1
 c90:	add	r1, r0, r1, lsr #26
 c94:	bic	r1, r1, #63	; 0x3f
 c98:	sub	r0, r0, r1
 c9c:	ldrb	r0, [r6, r0]
 ca0:	strb	r0, [r5], #1
 ca4:	bne	c84 <generate_random_salt+0x90>
 ca8:	b	cf4 <generate_random_salt+0x100>
 cac:	mov	r0, r6
 cb0:	bl	6b4 <close@plt>
 cb4:	mov	r0, #0
 cb8:	bl	660 <time@plt>
 cbc:	bl	690 <srand@plt>
 cc0:	cmp	r4, #1
 cc4:	poplt	{r4, r5, r6, sl, fp, pc}
 cc8:	ldr	r6, [pc, #52]	; d04 <generate_random_salt+0x110>
 ccc:	add	r6, pc, r6
 cd0:	bl	69c <rand@plt>
 cd4:	asr	r1, r0, #31
 cd8:	subs	r4, r4, #1
 cdc:	add	r1, r0, r1, lsr #26
 ce0:	bic	r1, r1, #63	; 0x3f
 ce4:	sub	r0, r0, r1
 ce8:	ldrb	r0, [r6, r0]
 cec:	strb	r0, [r5], #1
 cf0:	bne	cd0 <generate_random_salt+0xdc>
 cf4:	pop	{r4, r5, r6, sl, fp, pc}
 cf8:	.word	0x0000021a
 cfc:	.word	0x000001b3
 d00:	.word	0x000001f3
 d04:	.word	0x00000167

Disassembly of section .fini:

00000d08 <_fini>:
 d08:	push	{r3, lr}
 d0c:	pop	{r3, pc}
