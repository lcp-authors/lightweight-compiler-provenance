
../repos/coreutils/src/chroot:     file format elf32-littlearm


Disassembly of section .init:

00011100 <.init>:
   11100:	push	{r3, lr}
   11104:	bl	11474 <__assert_fail@plt+0x48>
   11108:	pop	{r3, pc}

Disassembly of section .plt:

0001110c <calloc@plt-0x14>:
   1110c:	push	{lr}		; (str lr, [sp, #-4]!)
   11110:	ldr	lr, [pc, #4]	; 1111c <calloc@plt-0x4>
   11114:	add	lr, pc, lr
   11118:	ldr	pc, [lr, #8]!
   1111c:	andeq	pc, r1, r4, ror #29

00011120 <calloc@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #126976	; 0x1f000
   11128:	ldr	pc, [ip, #3812]!	; 0xee4

0001112c <endgrent@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #126976	; 0x1f000
   11134:	ldr	pc, [ip, #3804]!	; 0xedc

00011138 <fputs_unlocked@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #126976	; 0x1f000
   11140:	ldr	pc, [ip, #3796]!	; 0xed4

00011144 <raise@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #126976	; 0x1f000
   1114c:	ldr	pc, [ip, #3788]!	; 0xecc

00011150 <getpwnam@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #126976	; 0x1f000
   11158:	ldr	pc, [ip, #3780]!	; 0xec4

0001115c <strcmp@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #126976	; 0x1f000
   11164:	ldr	pc, [ip, #3772]!	; 0xebc

00011168 <getpwuid@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #126976	; 0x1f000
   11170:	ldr	pc, [ip, #3764]!	; 0xeb4

00011174 <printf@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #126976	; 0x1f000
   1117c:	ldr	pc, [ip, #3756]!	; 0xeac

00011180 <fflush@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #126976	; 0x1f000
   11188:	ldr	pc, [ip, #3748]!	; 0xea4

0001118c <free@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #126976	; 0x1f000
   11194:	ldr	pc, [ip, #3740]!	; 0xe9c

00011198 <_exit@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #126976	; 0x1f000
   111a0:	ldr	pc, [ip, #3732]!	; 0xe94

000111a4 <memcpy@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #126976	; 0x1f000
   111ac:	ldr	pc, [ip, #3724]!	; 0xe8c

000111b0 <execvp@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #126976	; 0x1f000
   111b8:	ldr	pc, [ip, #3716]!	; 0xe84

000111bc <mbsinit@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #126976	; 0x1f000
   111c4:	ldr	pc, [ip, #3708]!	; 0xe7c

000111c8 <memcmp@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #126976	; 0x1f000
   111d0:	ldr	pc, [ip, #3700]!	; 0xe74

000111d4 <realloc@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #126976	; 0x1f000
   111dc:	ldr	pc, [ip, #3692]!	; 0xe6c

000111e0 <textdomain@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #126976	; 0x1f000
   111e8:	ldr	pc, [ip, #3684]!	; 0xe64

000111ec <chdir@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #126976	; 0x1f000
   111f4:	ldr	pc, [ip, #3676]!	; 0xe5c

000111f8 <iswprint@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #126976	; 0x1f000
   11200:	ldr	pc, [ip, #3668]!	; 0xe54

00011204 <setgroups@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #126976	; 0x1f000
   1120c:	ldr	pc, [ip, #3660]!	; 0xe4c

00011210 <lseek64@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #126976	; 0x1f000
   11218:	ldr	pc, [ip, #3652]!	; 0xe44

0001121c <__ctype_get_mb_cur_max@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #126976	; 0x1f000
   11224:	ldr	pc, [ip, #3644]!	; 0xe3c

00011228 <chroot@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #126976	; 0x1f000
   11230:	ldr	pc, [ip, #3636]!	; 0xe34

00011234 <__fpending@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #126976	; 0x1f000
   1123c:	ldr	pc, [ip, #3628]!	; 0xe2c

00011240 <ferror_unlocked@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #126976	; 0x1f000
   11248:	ldr	pc, [ip, #3620]!	; 0xe24

0001124c <mbrtowc@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #126976	; 0x1f000
   11254:	ldr	pc, [ip, #3612]!	; 0xe1c

00011258 <error@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #126976	; 0x1f000
   11260:	ldr	pc, [ip, #3604]!	; 0xe14

00011264 <getenv@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #126976	; 0x1f000
   1126c:	ldr	pc, [ip, #3596]!	; 0xe0c

00011270 <setgid@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #126976	; 0x1f000
   11278:	ldr	pc, [ip, #3588]!	; 0xe04

0001127c <malloc@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #126976	; 0x1f000
   11284:	ldr	pc, [ip, #3580]!	; 0xdfc

00011288 <__libc_start_main@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #126976	; 0x1f000
   11290:	ldr	pc, [ip, #3572]!	; 0xdf4

00011294 <__freading@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #126976	; 0x1f000
   1129c:	ldr	pc, [ip, #3564]!	; 0xdec

000112a0 <__gmon_start__@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #126976	; 0x1f000
   112a8:	ldr	pc, [ip, #3556]!	; 0xde4

000112ac <getopt_long@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #126976	; 0x1f000
   112b4:	ldr	pc, [ip, #3548]!	; 0xddc

000112b8 <__ctype_b_loc@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #126976	; 0x1f000
   112c0:	ldr	pc, [ip, #3540]!	; 0xdd4

000112c4 <exit@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #126976	; 0x1f000
   112cc:	ldr	pc, [ip, #3532]!	; 0xdcc

000112d0 <gettext@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #126976	; 0x1f000
   112d8:	ldr	pc, [ip, #3524]!	; 0xdc4

000112dc <strtoul@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #126976	; 0x1f000
   112e4:	ldr	pc, [ip, #3516]!	; 0xdbc

000112e8 <strlen@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #126976	; 0x1f000
   112f0:	ldr	pc, [ip, #3508]!	; 0xdb4

000112f4 <strchr@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #126976	; 0x1f000
   112fc:	ldr	pc, [ip, #3500]!	; 0xdac

00011300 <fprintf@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #126976	; 0x1f000
   11308:	ldr	pc, [ip, #3492]!	; 0xda4

0001130c <__errno_location@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #126976	; 0x1f000
   11314:	ldr	pc, [ip, #3484]!	; 0xd9c

00011318 <__cxa_atexit@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #126976	; 0x1f000
   11320:	ldr	pc, [ip, #3476]!	; 0xd94

00011324 <getgrouplist@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #126976	; 0x1f000
   1132c:	ldr	pc, [ip, #3468]!	; 0xd8c

00011330 <memset@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #126976	; 0x1f000
   11338:	ldr	pc, [ip, #3460]!	; 0xd84

0001133c <setgrent@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #126976	; 0x1f000
   11344:	ldr	pc, [ip, #3452]!	; 0xd7c

00011348 <getgrent@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #126976	; 0x1f000
   11350:	ldr	pc, [ip, #3444]!	; 0xd74

00011354 <fileno@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #126976	; 0x1f000
   1135c:	ldr	pc, [ip, #3436]!	; 0xd6c

00011360 <strtoumax@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #126976	; 0x1f000
   11368:	ldr	pc, [ip, #3428]!	; 0xd64

0001136c <fclose@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #126976	; 0x1f000
   11374:	ldr	pc, [ip, #3420]!	; 0xd5c

00011378 <fseeko64@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #126976	; 0x1f000
   11380:	ldr	pc, [ip, #3412]!	; 0xd54

00011384 <strtok@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #126976	; 0x1f000
   1138c:	ldr	pc, [ip, #3404]!	; 0xd4c

00011390 <setlocale@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #126976	; 0x1f000
   11398:	ldr	pc, [ip, #3396]!	; 0xd44

0001139c <endpwent@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #126976	; 0x1f000
   113a4:	ldr	pc, [ip, #3388]!	; 0xd3c

000113a8 <strrchr@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #126976	; 0x1f000
   113b0:	ldr	pc, [ip, #3380]!	; 0xd34

000113b4 <nl_langinfo@plt>:
   113b4:	add	ip, pc, #0, 12
   113b8:	add	ip, ip, #126976	; 0x1f000
   113bc:	ldr	pc, [ip, #3372]!	; 0xd2c

000113c0 <setuid@plt>:
   113c0:	add	ip, pc, #0, 12
   113c4:	add	ip, ip, #126976	; 0x1f000
   113c8:	ldr	pc, [ip, #3364]!	; 0xd24

000113cc <getgroups@plt>:
   113cc:	add	ip, pc, #0, 12
   113d0:	add	ip, ip, #126976	; 0x1f000
   113d4:	ldr	pc, [ip, #3356]!	; 0xd1c

000113d8 <canonicalize_file_name@plt>:
   113d8:	add	ip, pc, #0, 12
   113dc:	add	ip, ip, #126976	; 0x1f000
   113e0:	ldr	pc, [ip, #3348]!	; 0xd14

000113e4 <bindtextdomain@plt>:
   113e4:	add	ip, pc, #0, 12
   113e8:	add	ip, ip, #126976	; 0x1f000
   113ec:	ldr	pc, [ip, #3340]!	; 0xd0c

000113f0 <fputs@plt>:
   113f0:	add	ip, pc, #0, 12
   113f4:	add	ip, ip, #126976	; 0x1f000
   113f8:	ldr	pc, [ip, #3332]!	; 0xd04

000113fc <strncmp@plt>:
   113fc:	add	ip, pc, #0, 12
   11400:	add	ip, ip, #126976	; 0x1f000
   11404:	ldr	pc, [ip, #3324]!	; 0xcfc

00011408 <abort@plt>:
   11408:	add	ip, pc, #0, 12
   1140c:	add	ip, ip, #126976	; 0x1f000
   11410:	ldr	pc, [ip, #3316]!	; 0xcf4

00011414 <getgrgid@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #126976	; 0x1f000
   1141c:	ldr	pc, [ip, #3308]!	; 0xcec

00011420 <getgrnam@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #126976	; 0x1f000
   11428:	ldr	pc, [ip, #3300]!	; 0xce4

0001142c <__assert_fail@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #126976	; 0x1f000
   11434:	ldr	pc, [ip, #3292]!	; 0xcdc

Disassembly of section .text:

00011438 <.text>:
   11438:	mov	fp, #0
   1143c:	mov	lr, #0
   11440:	pop	{r1}		; (ldr r1, [sp], #4)
   11444:	mov	r2, sp
   11448:	push	{r2}		; (str r2, [sp, #-4]!)
   1144c:	push	{r0}		; (str r0, [sp, #-4]!)
   11450:	ldr	ip, [pc, #16]	; 11468 <__assert_fail@plt+0x3c>
   11454:	push	{ip}		; (str ip, [sp, #-4]!)
   11458:	ldr	r0, [pc, #12]	; 1146c <__assert_fail@plt+0x40>
   1145c:	ldr	r3, [pc, #12]	; 11470 <__assert_fail@plt+0x44>
   11460:	bl	11288 <__libc_start_main@plt>
   11464:	bl	11408 <abort@plt>
   11468:	andeq	pc, r1, r0, ror #20
   1146c:	muleq	r1, r8, r8
   11470:	andeq	pc, r1, r0, lsl #20
   11474:	ldr	r3, [pc, #20]	; 11490 <__assert_fail@plt+0x64>
   11478:	ldr	r2, [pc, #20]	; 11494 <__assert_fail@plt+0x68>
   1147c:	add	r3, pc, r3
   11480:	ldr	r2, [r3, r2]
   11484:	cmp	r2, #0
   11488:	bxeq	lr
   1148c:	b	112a0 <__gmon_start__@plt>
   11490:	andeq	pc, r1, ip, ror fp	; <UNPREDICTABLE>
   11494:	andeq	r0, r0, r4, lsl r1
   11498:	ldr	r0, [pc, #24]	; 114b8 <__assert_fail@plt+0x8c>
   1149c:	ldr	r3, [pc, #24]	; 114bc <__assert_fail@plt+0x90>
   114a0:	cmp	r3, r0
   114a4:	bxeq	lr
   114a8:	ldr	r3, [pc, #16]	; 114c0 <__assert_fail@plt+0x94>
   114ac:	cmp	r3, #0
   114b0:	bxeq	lr
   114b4:	bx	r3
   114b8:	andeq	r1, r3, r4, ror r1
   114bc:	andeq	r1, r3, r4, ror r1
   114c0:	andeq	r0, r0, r0
   114c4:	ldr	r0, [pc, #36]	; 114f0 <__assert_fail@plt+0xc4>
   114c8:	ldr	r1, [pc, #36]	; 114f4 <__assert_fail@plt+0xc8>
   114cc:	sub	r1, r1, r0
   114d0:	asr	r1, r1, #2
   114d4:	add	r1, r1, r1, lsr #31
   114d8:	asrs	r1, r1, #1
   114dc:	bxeq	lr
   114e0:	ldr	r3, [pc, #16]	; 114f8 <__assert_fail@plt+0xcc>
   114e4:	cmp	r3, #0
   114e8:	bxeq	lr
   114ec:	bx	r3
   114f0:	andeq	r1, r3, r4, ror r1
   114f4:	andeq	r1, r3, r4, ror r1
   114f8:	andeq	r0, r0, r0
   114fc:	push	{r4, lr}
   11500:	ldr	r4, [pc, #24]	; 11520 <__assert_fail@plt+0xf4>
   11504:	ldrb	r3, [r4]
   11508:	cmp	r3, #0
   1150c:	popne	{r4, pc}
   11510:	bl	11498 <__assert_fail@plt+0x6c>
   11514:	mov	r3, #1
   11518:	strb	r3, [r4]
   1151c:	pop	{r4, pc}
   11520:	muleq	r3, r4, r1
   11524:	b	114c4 <__assert_fail@plt+0x98>
   11528:	push	{fp, lr}
   1152c:	mov	fp, sp
   11530:	sub	sp, sp, #56	; 0x38
   11534:	str	r0, [fp, #-4]
   11538:	ldr	r0, [fp, #-4]
   1153c:	cmp	r0, #0
   11540:	beq	11590 <__assert_fail@plt+0x164>
   11544:	b	11548 <__assert_fail@plt+0x11c>
   11548:	movw	r0, #4488	; 0x1188
   1154c:	movt	r0, #3
   11550:	ldr	r0, [r0]
   11554:	movw	r1, #64136	; 0xfa88
   11558:	movt	r1, #1
   1155c:	str	r0, [fp, #-8]
   11560:	mov	r0, r1
   11564:	bl	112d0 <gettext@plt>
   11568:	movw	r1, #4512	; 0x11a0
   1156c:	movt	r1, #3
   11570:	ldr	r2, [r1]
   11574:	ldr	r1, [fp, #-8]
   11578:	str	r0, [fp, #-12]
   1157c:	mov	r0, r1
   11580:	ldr	r1, [fp, #-12]
   11584:	bl	11300 <fprintf@plt>
   11588:	str	r0, [fp, #-16]
   1158c:	b	116dc <__assert_fail@plt+0x2b0>
   11590:	movw	r0, #64175	; 0xfaaf
   11594:	movt	r0, #1
   11598:	bl	112d0 <gettext@plt>
   1159c:	movw	lr, #4512	; 0x11a0
   115a0:	movt	lr, #3
   115a4:	ldr	r1, [lr]
   115a8:	ldr	r2, [lr]
   115ac:	bl	11174 <printf@plt>
   115b0:	movw	r1, #64239	; 0xfaef
   115b4:	movt	r1, #1
   115b8:	str	r0, [fp, #-20]	; 0xffffffec
   115bc:	mov	r0, r1
   115c0:	bl	112d0 <gettext@plt>
   115c4:	movw	r1, #4492	; 0x118c
   115c8:	movt	r1, #3
   115cc:	ldr	r1, [r1]
   115d0:	bl	11138 <fputs_unlocked@plt>
   115d4:	movw	r1, #64289	; 0xfb21
   115d8:	movt	r1, #1
   115dc:	str	r0, [fp, #-24]	; 0xffffffe8
   115e0:	mov	r0, r1
   115e4:	bl	112d0 <gettext@plt>
   115e8:	movw	r1, #4492	; 0x118c
   115ec:	movt	r1, #3
   115f0:	ldr	r1, [r1]
   115f4:	bl	11138 <fputs_unlocked@plt>
   115f8:	movw	r1, #64363	; 0xfb6b
   115fc:	movt	r1, #1
   11600:	str	r0, [sp, #28]
   11604:	mov	r0, r1
   11608:	bl	112d0 <gettext@plt>
   1160c:	movw	r1, #4492	; 0x118c
   11610:	movt	r1, #3
   11614:	ldr	r1, [r1]
   11618:	bl	11138 <fputs_unlocked@plt>
   1161c:	movw	r1, #64436	; 0xfbb4
   11620:	movt	r1, #1
   11624:	str	r0, [sp, #24]
   11628:	mov	r0, r1
   1162c:	bl	112d0 <gettext@plt>
   11630:	movw	r1, #4
   11634:	str	r0, [sp, #20]
   11638:	mov	r0, r1
   1163c:	movw	r1, #1143	; 0x477
   11640:	movt	r1, #2
   11644:	bl	14a98 <__assert_fail@plt+0x366c>
   11648:	ldr	r1, [sp, #20]
   1164c:	str	r0, [sp, #16]
   11650:	mov	r0, r1
   11654:	ldr	r1, [sp, #16]
   11658:	bl	11174 <printf@plt>
   1165c:	movw	r1, #64504	; 0xfbf8
   11660:	movt	r1, #1
   11664:	str	r0, [sp, #12]
   11668:	mov	r0, r1
   1166c:	bl	112d0 <gettext@plt>
   11670:	movw	r1, #4492	; 0x118c
   11674:	movt	r1, #3
   11678:	ldr	r1, [r1]
   1167c:	bl	11138 <fputs_unlocked@plt>
   11680:	movw	r1, #64549	; 0xfc25
   11684:	movt	r1, #1
   11688:	str	r0, [sp, #8]
   1168c:	mov	r0, r1
   11690:	bl	112d0 <gettext@plt>
   11694:	movw	r1, #4492	; 0x118c
   11698:	movt	r1, #3
   1169c:	ldr	r1, [r1]
   116a0:	bl	11138 <fputs_unlocked@plt>
   116a4:	movw	r1, #64603	; 0xfc5b
   116a8:	movt	r1, #1
   116ac:	str	r0, [sp, #4]
   116b0:	mov	r0, r1
   116b4:	bl	112d0 <gettext@plt>
   116b8:	movw	r1, #4492	; 0x118c
   116bc:	movt	r1, #3
   116c0:	ldr	r1, [r1]
   116c4:	bl	11138 <fputs_unlocked@plt>
   116c8:	movw	r1, #64672	; 0xfca0
   116cc:	movt	r1, #1
   116d0:	str	r0, [sp]
   116d4:	mov	r0, r1
   116d8:	bl	116e4 <__assert_fail@plt+0x2b8>
   116dc:	ldr	r0, [fp, #-4]
   116e0:	bl	112c4 <exit@plt>
   116e4:	push	{fp, lr}
   116e8:	mov	fp, sp
   116ec:	sub	sp, sp, #96	; 0x60
   116f0:	add	r1, sp, #36	; 0x24
   116f4:	movw	r2, #12
   116f8:	movt	r2, #2
   116fc:	str	r0, [fp, #-4]
   11700:	mov	r0, r1
   11704:	str	r1, [sp, #20]
   11708:	mov	r1, r2
   1170c:	movw	r2, #56	; 0x38
   11710:	bl	111a4 <memcpy@plt>
   11714:	ldr	r0, [fp, #-4]
   11718:	str	r0, [sp, #32]
   1171c:	ldr	r0, [sp, #20]
   11720:	str	r0, [sp, #28]
   11724:	ldr	r0, [sp, #28]
   11728:	ldr	r0, [r0]
   1172c:	movw	r1, #0
   11730:	cmp	r0, r1
   11734:	movw	r0, #0
   11738:	str	r0, [sp, #16]
   1173c:	beq	11768 <__assert_fail@plt+0x33c>
   11740:	ldr	r0, [fp, #-4]
   11744:	ldr	r1, [sp, #28]
   11748:	ldr	r1, [r1]
   1174c:	bl	1115c <strcmp@plt>
   11750:	cmp	r0, #0
   11754:	movw	r0, #0
   11758:	moveq	r0, #1
   1175c:	mvn	r1, #0
   11760:	eor	r0, r0, r1
   11764:	str	r0, [sp, #16]
   11768:	ldr	r0, [sp, #16]
   1176c:	tst	r0, #1
   11770:	beq	11784 <__assert_fail@plt+0x358>
   11774:	ldr	r0, [sp, #28]
   11778:	add	r0, r0, #8
   1177c:	str	r0, [sp, #28]
   11780:	b	11724 <__assert_fail@plt+0x2f8>
   11784:	ldr	r0, [sp, #28]
   11788:	ldr	r0, [r0, #4]
   1178c:	movw	r1, #0
   11790:	cmp	r0, r1
   11794:	beq	117a4 <__assert_fail@plt+0x378>
   11798:	ldr	r0, [sp, #28]
   1179c:	ldr	r0, [r0, #4]
   117a0:	str	r0, [sp, #32]
   117a4:	movw	r0, #65161	; 0xfe89
   117a8:	movt	r0, #1
   117ac:	bl	112d0 <gettext@plt>
   117b0:	movw	r1, #64705	; 0xfcc1
   117b4:	movt	r1, #1
   117b8:	movw	r2, #65184	; 0xfea0
   117bc:	movt	r2, #1
   117c0:	bl	11174 <printf@plt>
   117c4:	movw	r1, #5
   117c8:	str	r0, [sp, #12]
   117cc:	mov	r0, r1
   117d0:	movw	r1, #0
   117d4:	bl	11390 <setlocale@plt>
   117d8:	str	r0, [sp, #24]
   117dc:	ldr	r0, [sp, #24]
   117e0:	movw	r1, #0
   117e4:	cmp	r0, r1
   117e8:	beq	11828 <__assert_fail@plt+0x3fc>
   117ec:	ldr	r0, [sp, #24]
   117f0:	movw	r1, #65224	; 0xfec8
   117f4:	movt	r1, #1
   117f8:	movw	r2, #3
   117fc:	bl	113fc <strncmp@plt>
   11800:	cmp	r0, #0
   11804:	beq	11828 <__assert_fail@plt+0x3fc>
   11808:	movw	r0, #65228	; 0xfecc
   1180c:	movt	r0, #1
   11810:	bl	112d0 <gettext@plt>
   11814:	movw	lr, #4492	; 0x118c
   11818:	movt	lr, #3
   1181c:	ldr	r1, [lr]
   11820:	bl	11138 <fputs_unlocked@plt>
   11824:	str	r0, [sp, #8]
   11828:	movw	r0, #65299	; 0xff13
   1182c:	movt	r0, #1
   11830:	bl	112d0 <gettext@plt>
   11834:	ldr	r2, [fp, #-4]
   11838:	movw	r1, #65184	; 0xfea0
   1183c:	movt	r1, #1
   11840:	bl	11174 <printf@plt>
   11844:	movw	r1, #65326	; 0xff2e
   11848:	movt	r1, #1
   1184c:	str	r0, [sp, #4]
   11850:	mov	r0, r1
   11854:	bl	112d0 <gettext@plt>
   11858:	ldr	r1, [sp, #32]
   1185c:	ldr	r2, [sp, #32]
   11860:	ldr	lr, [fp, #-4]
   11864:	cmp	r2, lr
   11868:	movw	r2, #0
   1186c:	moveq	r2, #1
   11870:	tst	r2, #1
   11874:	movw	r2, #64288	; 0xfb20
   11878:	movt	r2, #1
   1187c:	movw	lr, #65094	; 0xfe46
   11880:	movt	lr, #1
   11884:	movne	r2, lr
   11888:	bl	11174 <printf@plt>
   1188c:	str	r0, [sp]
   11890:	mov	sp, fp
   11894:	pop	{fp, pc}
   11898:	push	{fp, lr}
   1189c:	mov	fp, sp
   118a0:	sub	sp, sp, #232	; 0xe8
   118a4:	movw	r2, #0
   118a8:	str	r2, [fp, #-4]
   118ac:	str	r0, [fp, #-8]
   118b0:	str	r1, [fp, #-12]
   118b4:	str	r2, [fp, #-20]	; 0xffffffec
   118b8:	str	r2, [fp, #-24]	; 0xffffffe8
   118bc:	str	r2, [fp, #-28]	; 0xffffffe4
   118c0:	movw	r0, #0
   118c4:	strb	r0, [fp, #-29]	; 0xffffffe3
   118c8:	mvn	r0, #0
   118cc:	str	r0, [fp, #-36]	; 0xffffffdc
   118d0:	str	r0, [fp, #-40]	; 0xffffffd8
   118d4:	str	r2, [fp, #-44]	; 0xffffffd4
   118d8:	str	r2, [fp, #-48]	; 0xffffffd0
   118dc:	ldr	r0, [fp, #-12]
   118e0:	ldr	r0, [r0]
   118e4:	bl	127d4 <__assert_fail@plt+0x13a8>
   118e8:	movw	r0, #6
   118ec:	movw	r1, #64288	; 0xfb20
   118f0:	movt	r1, #1
   118f4:	bl	11390 <setlocale@plt>
   118f8:	movw	r1, #64709	; 0xfcc5
   118fc:	movt	r1, #1
   11900:	str	r0, [fp, #-100]	; 0xffffff9c
   11904:	mov	r0, r1
   11908:	movw	r1, #64679	; 0xfca7
   1190c:	movt	r1, #1
   11910:	bl	113e4 <bindtextdomain@plt>
   11914:	movw	r1, #64709	; 0xfcc5
   11918:	movt	r1, #1
   1191c:	str	r0, [fp, #-104]	; 0xffffff98
   11920:	mov	r0, r1
   11924:	bl	111e0 <textdomain@plt>
   11928:	movw	r1, #125	; 0x7d
   1192c:	str	r0, [fp, #-108]	; 0xffffff94
   11930:	mov	r0, r1
   11934:	bl	12240 <__assert_fail@plt+0xe14>
   11938:	movw	r0, #9844	; 0x2674
   1193c:	movt	r0, #1
   11940:	bl	1fa64 <__assert_fail@plt+0xe638>
   11944:	str	r0, [fp, #-112]	; 0xffffff90
   11948:	ldr	r0, [fp, #-8]
   1194c:	ldr	r1, [fp, #-12]
   11950:	movw	r2, #64703	; 0xfcbf
   11954:	movt	r2, #1
   11958:	movw	r3, #65452	; 0xffac
   1195c:	movt	r3, #1
   11960:	movw	ip, #0
   11964:	str	ip, [sp]
   11968:	bl	112ac <getopt_long@plt>
   1196c:	str	r0, [fp, #-16]
   11970:	cmn	r0, #1
   11974:	beq	11ab0 <__assert_fail@plt+0x684>
   11978:	ldr	r0, [fp, #-16]
   1197c:	cmn	r0, #3
   11980:	str	r0, [sp, #116]	; 0x74
   11984:	beq	11a5c <__assert_fail@plt+0x630>
   11988:	b	1198c <__assert_fail@plt+0x560>
   1198c:	ldr	r0, [sp, #116]	; 0x74
   11990:	cmn	r0, #2
   11994:	beq	11a54 <__assert_fail@plt+0x628>
   11998:	b	1199c <__assert_fail@plt+0x570>
   1199c:	ldr	r0, [sp, #116]	; 0x74
   119a0:	cmp	r0, #256	; 0x100
   119a4:	beq	11a34 <__assert_fail@plt+0x608>
   119a8:	b	119ac <__assert_fail@plt+0x580>
   119ac:	movw	r0, #257	; 0x101
   119b0:	ldr	r1, [sp, #116]	; 0x74
   119b4:	cmp	r1, r0
   119b8:	beq	119d4 <__assert_fail@plt+0x5a8>
   119bc:	b	119c0 <__assert_fail@plt+0x594>
   119c0:	movw	r0, #258	; 0x102
   119c4:	ldr	r1, [sp, #116]	; 0x74
   119c8:	cmp	r1, r0
   119cc:	beq	11a48 <__assert_fail@plt+0x61c>
   119d0:	b	11aa4 <__assert_fail@plt+0x678>
   119d4:	movw	r0, #4496	; 0x1190
   119d8:	movt	r0, #3
   119dc:	ldr	r0, [r0]
   119e0:	str	r0, [fp, #-20]	; 0xffffffec
   119e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   119e8:	bl	112e8 <strlen@plt>
   119ec:	str	r0, [fp, #-52]	; 0xffffffcc
   119f0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   119f4:	cmp	r0, #0
   119f8:	beq	11a30 <__assert_fail@plt+0x604>
   119fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   11a00:	ldr	r1, [fp, #-52]	; 0xffffffcc
   11a04:	sub	r1, r1, #1
   11a08:	add	r0, r0, r1
   11a0c:	ldrb	r0, [r0]
   11a10:	cmp	r0, #58	; 0x3a
   11a14:	bne	11a30 <__assert_fail@plt+0x604>
   11a18:	ldr	r0, [fp, #-20]	; 0xffffffec
   11a1c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   11a20:	sub	r1, r1, #1
   11a24:	add	r0, r0, r1
   11a28:	movw	r1, #0
   11a2c:	strb	r1, [r0]
   11a30:	b	11aac <__assert_fail@plt+0x680>
   11a34:	movw	r0, #4496	; 0x1190
   11a38:	movt	r0, #3
   11a3c:	ldr	r0, [r0]
   11a40:	str	r0, [fp, #-28]	; 0xffffffe4
   11a44:	b	11aac <__assert_fail@plt+0x680>
   11a48:	movw	r0, #1
   11a4c:	strb	r0, [fp, #-29]	; 0xffffffe3
   11a50:	b	11aac <__assert_fail@plt+0x680>
   11a54:	movw	r0, #0
   11a58:	bl	11528 <__assert_fail@plt+0xfc>
   11a5c:	movw	r0, #4492	; 0x118c
   11a60:	movt	r0, #3
   11a64:	ldr	r0, [r0]
   11a68:	movw	r1, #4384	; 0x1120
   11a6c:	movt	r1, #3
   11a70:	ldr	r3, [r1]
   11a74:	movw	r1, #64672	; 0xfca0
   11a78:	movt	r1, #1
   11a7c:	movw	r2, #64705	; 0xfcc1
   11a80:	movt	r2, #1
   11a84:	movw	ip, #64719	; 0xfccf
   11a88:	movt	ip, #1
   11a8c:	str	ip, [sp]
   11a90:	movw	ip, #0
   11a94:	str	ip, [sp, #4]
   11a98:	bl	15cb8 <__assert_fail@plt+0x488c>
   11a9c:	movw	r0, #0
   11aa0:	bl	112c4 <exit@plt>
   11aa4:	movw	r0, #125	; 0x7d
   11aa8:	bl	11528 <__assert_fail@plt+0xfc>
   11aac:	b	11948 <__assert_fail@plt+0x51c>
   11ab0:	ldr	r0, [fp, #-8]
   11ab4:	movw	r1, #4480	; 0x1180
   11ab8:	movt	r1, #3
   11abc:	ldr	r1, [r1]
   11ac0:	cmp	r0, r1
   11ac4:	bgt	11af4 <__assert_fail@plt+0x6c8>
   11ac8:	movw	r0, #64734	; 0xfcde
   11acc:	movt	r0, #1
   11ad0:	bl	112d0 <gettext@plt>
   11ad4:	movw	lr, #0
   11ad8:	str	r0, [sp, #112]	; 0x70
   11adc:	mov	r0, lr
   11ae0:	mov	r1, lr
   11ae4:	ldr	r2, [sp, #112]	; 0x70
   11ae8:	bl	11258 <error@plt>
   11aec:	movw	r0, #125	; 0x7d
   11af0:	bl	11528 <__assert_fail@plt+0xfc>
   11af4:	ldr	r0, [fp, #-12]
   11af8:	movw	r1, #4480	; 0x1180
   11afc:	movt	r1, #3
   11b00:	ldr	r1, [r1]
   11b04:	add	r0, r0, r1, lsl #2
   11b08:	ldr	r0, [r0]
   11b0c:	str	r0, [fp, #-56]	; 0xffffffc8
   11b10:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11b14:	bl	1226c <__assert_fail@plt+0xe40>
   11b18:	and	r0, r0, #1
   11b1c:	strb	r0, [fp, #-57]	; 0xffffffc7
   11b20:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   11b24:	tst	r0, #1
   11b28:	bne	11b7c <__assert_fail@plt+0x750>
   11b2c:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   11b30:	tst	r0, #1
   11b34:	beq	11b7c <__assert_fail@plt+0x750>
   11b38:	movw	r0, #64750	; 0xfcee
   11b3c:	movt	r0, #1
   11b40:	bl	112d0 <gettext@plt>
   11b44:	movw	lr, #4
   11b48:	str	r0, [sp, #108]	; 0x6c
   11b4c:	mov	r0, lr
   11b50:	movw	r1, #1143	; 0x477
   11b54:	movt	r1, #2
   11b58:	bl	14a98 <__assert_fail@plt+0x366c>
   11b5c:	movw	r1, #0
   11b60:	str	r0, [sp, #104]	; 0x68
   11b64:	mov	r0, r1
   11b68:	ldr	r2, [sp, #108]	; 0x6c
   11b6c:	ldr	r3, [sp, #104]	; 0x68
   11b70:	bl	11258 <error@plt>
   11b74:	movw	r0, #125	; 0x7d
   11b78:	bl	11528 <__assert_fail@plt+0xfc>
   11b7c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   11b80:	tst	r0, #1
   11b84:	bne	11cd8 <__assert_fail@plt+0x8ac>
   11b88:	ldr	r0, [fp, #-20]	; 0xffffffec
   11b8c:	movw	r1, #0
   11b90:	cmp	r0, r1
   11b94:	beq	11bbc <__assert_fail@plt+0x790>
   11b98:	ldr	r0, [fp, #-20]	; 0xffffffec
   11b9c:	sub	r1, fp, #36	; 0x24
   11ba0:	sub	r2, fp, #40	; 0x28
   11ba4:	movw	r3, #0
   11ba8:	str	r3, [sp, #100]	; 0x64
   11bac:	ldr	ip, [sp, #100]	; 0x64
   11bb0:	str	ip, [sp]
   11bb4:	bl	14f68 <__assert_fail@plt+0x3b3c>
   11bb8:	str	r0, [sp, #96]	; 0x60
   11bbc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11bc0:	bl	122e4 <__assert_fail@plt+0xeb8>
   11bc4:	tst	r0, #1
   11bc8:	bne	11c30 <__assert_fail@plt+0x804>
   11bcc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11bd0:	movw	r1, #0
   11bd4:	cmp	r0, r1
   11bd8:	beq	11bec <__assert_fail@plt+0x7c0>
   11bdc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11be0:	bl	12308 <__assert_fail@plt+0xedc>
   11be4:	tst	r0, #1
   11be8:	beq	11c30 <__assert_fail@plt+0x804>
   11bec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11bf0:	bl	11168 <getpwuid@plt>
   11bf4:	str	r0, [fp, #-64]	; 0xffffffc0
   11bf8:	movw	lr, #0
   11bfc:	cmp	r0, lr
   11c00:	beq	11c2c <__assert_fail@plt+0x800>
   11c04:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11c08:	bl	12308 <__assert_fail@plt+0xedc>
   11c0c:	tst	r0, #1
   11c10:	beq	11c20 <__assert_fail@plt+0x7f4>
   11c14:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11c18:	ldr	r0, [r0, #12]
   11c1c:	str	r0, [fp, #-40]	; 0xffffffd8
   11c20:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11c24:	ldr	r0, [r0]
   11c28:	str	r0, [fp, #-24]	; 0xffffffe8
   11c2c:	b	11c30 <__assert_fail@plt+0x804>
   11c30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11c34:	movw	r1, #0
   11c38:	cmp	r0, r1
   11c3c:	beq	11c70 <__assert_fail@plt+0x844>
   11c40:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11c44:	ldrb	r0, [r0]
   11c48:	cmp	r0, #0
   11c4c:	beq	11c70 <__assert_fail@plt+0x844>
   11c50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11c54:	sub	r1, fp, #44	; 0x2c
   11c58:	sub	r2, fp, #48	; 0x30
   11c5c:	movw	r3, #0
   11c60:	and	r3, r3, #1
   11c64:	bl	1232c <__assert_fail@plt+0xf00>
   11c68:	str	r0, [sp, #92]	; 0x5c
   11c6c:	b	11cd4 <__assert_fail@plt+0x8a8>
   11c70:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11c74:	movw	r1, #0
   11c78:	cmp	r0, r1
   11c7c:	bne	11cd0 <__assert_fail@plt+0x8a4>
   11c80:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11c84:	bl	12308 <__assert_fail@plt+0xedc>
   11c88:	tst	r0, #1
   11c8c:	bne	11cd0 <__assert_fail@plt+0x8a4>
   11c90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11c94:	movw	r1, #0
   11c98:	cmp	r0, r1
   11c9c:	beq	11cd0 <__assert_fail@plt+0x8a4>
   11ca0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11ca4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11ca8:	sub	r2, fp, #44	; 0x2c
   11cac:	bl	18c74 <__assert_fail@plt+0x7848>
   11cb0:	str	r0, [fp, #-68]	; 0xffffffbc
   11cb4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11cb8:	movw	r1, #0
   11cbc:	cmp	r1, r0
   11cc0:	bge	11ccc <__assert_fail@plt+0x8a0>
   11cc4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11cc8:	str	r0, [fp, #-48]	; 0xffffffd0
   11ccc:	b	11cd0 <__assert_fail@plt+0x8a4>
   11cd0:	b	11cd4 <__assert_fail@plt+0x8a8>
   11cd4:	b	11cd8 <__assert_fail@plt+0x8ac>
   11cd8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11cdc:	bl	11228 <chroot@plt>
   11ce0:	cmp	r0, #0
   11ce4:	beq	11d30 <__assert_fail@plt+0x904>
   11ce8:	bl	1130c <__errno_location@plt>
   11cec:	ldr	r1, [r0]
   11cf0:	movw	r0, #64806	; 0xfd26
   11cf4:	movt	r0, #1
   11cf8:	str	r1, [sp, #88]	; 0x58
   11cfc:	bl	112d0 <gettext@plt>
   11d00:	ldr	r1, [fp, #-56]	; 0xffffffc8
   11d04:	movw	lr, #4
   11d08:	str	r0, [sp, #84]	; 0x54
   11d0c:	mov	r0, lr
   11d10:	bl	14a98 <__assert_fail@plt+0x366c>
   11d14:	movw	r1, #125	; 0x7d
   11d18:	str	r0, [sp, #80]	; 0x50
   11d1c:	mov	r0, r1
   11d20:	ldr	r1, [sp, #88]	; 0x58
   11d24:	ldr	r2, [sp, #84]	; 0x54
   11d28:	ldr	r3, [sp, #80]	; 0x50
   11d2c:	bl	11258 <error@plt>
   11d30:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   11d34:	tst	r0, #1
   11d38:	bne	11d80 <__assert_fail@plt+0x954>
   11d3c:	movw	r0, #1143	; 0x477
   11d40:	movt	r0, #2
   11d44:	bl	111ec <chdir@plt>
   11d48:	cmp	r0, #0
   11d4c:	beq	11d80 <__assert_fail@plt+0x954>
   11d50:	bl	1130c <__errno_location@plt>
   11d54:	ldr	r1, [r0]
   11d58:	movw	r0, #64841	; 0xfd49
   11d5c:	movt	r0, #1
   11d60:	str	r1, [sp, #76]	; 0x4c
   11d64:	bl	112d0 <gettext@plt>
   11d68:	movw	r1, #125	; 0x7d
   11d6c:	str	r0, [sp, #72]	; 0x48
   11d70:	mov	r0, r1
   11d74:	ldr	r1, [sp, #76]	; 0x4c
   11d78:	ldr	r2, [sp, #72]	; 0x48
   11d7c:	bl	11258 <error@plt>
   11d80:	ldr	r0, [fp, #-8]
   11d84:	movw	r1, #4480	; 0x1180
   11d88:	movt	r1, #3
   11d8c:	ldr	r1, [r1]
   11d90:	add	r1, r1, #1
   11d94:	cmp	r0, r1
   11d98:	bne	11dfc <__assert_fail@plt+0x9d0>
   11d9c:	movw	r0, #64872	; 0xfd68
   11da0:	movt	r0, #1
   11da4:	bl	11264 <getenv@plt>
   11da8:	str	r0, [fp, #-72]	; 0xffffffb8
   11dac:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11db0:	movw	lr, #0
   11db4:	cmp	r0, lr
   11db8:	bne	11dcc <__assert_fail@plt+0x9a0>
   11dbc:	movw	r0, #64878	; 0xfd6e
   11dc0:	movt	r0, #1
   11dc4:	bl	12604 <__assert_fail@plt+0x11d8>
   11dc8:	str	r0, [fp, #-72]	; 0xffffffb8
   11dcc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11dd0:	ldr	r1, [fp, #-12]
   11dd4:	str	r0, [r1]
   11dd8:	movw	r0, #64886	; 0xfd76
   11ddc:	movt	r0, #1
   11de0:	bl	12604 <__assert_fail@plt+0x11d8>
   11de4:	ldr	r1, [fp, #-12]
   11de8:	str	r0, [r1, #4]
   11dec:	ldr	r0, [fp, #-12]
   11df0:	movw	r1, #0
   11df4:	str	r1, [r0, #8]
   11df8:	b	11e18 <__assert_fail@plt+0x9ec>
   11dfc:	movw	r0, #4480	; 0x1180
   11e00:	movt	r0, #3
   11e04:	ldr	r0, [r0]
   11e08:	add	r0, r0, #1
   11e0c:	ldr	r1, [fp, #-12]
   11e10:	add	r0, r1, r0, lsl #2
   11e14:	str	r0, [fp, #-12]
   11e18:	ldr	r0, [fp, #-20]	; 0xffffffec
   11e1c:	movw	r1, #0
   11e20:	cmp	r0, r1
   11e24:	beq	11e9c <__assert_fail@plt+0xa70>
   11e28:	ldr	r0, [fp, #-20]	; 0xffffffec
   11e2c:	sub	r1, fp, #36	; 0x24
   11e30:	sub	r2, fp, #40	; 0x28
   11e34:	movw	r3, #0
   11e38:	str	r3, [sp, #68]	; 0x44
   11e3c:	ldr	ip, [sp, #68]	; 0x44
   11e40:	str	ip, [sp]
   11e44:	bl	14f68 <__assert_fail@plt+0x3b3c>
   11e48:	str	r0, [fp, #-76]	; 0xffffffb4
   11e4c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   11e50:	movw	r1, #0
   11e54:	cmp	r0, r1
   11e58:	beq	11e98 <__assert_fail@plt+0xa6c>
   11e5c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11e60:	bl	122e4 <__assert_fail@plt+0xeb8>
   11e64:	tst	r0, #1
   11e68:	beq	11e98 <__assert_fail@plt+0xa6c>
   11e6c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11e70:	bl	12308 <__assert_fail@plt+0xedc>
   11e74:	tst	r0, #1
   11e78:	beq	11e98 <__assert_fail@plt+0xa6c>
   11e7c:	bl	1130c <__errno_location@plt>
   11e80:	ldr	r1, [r0]
   11e84:	ldr	r3, [fp, #-76]	; 0xffffffb4
   11e88:	movw	r0, #125	; 0x7d
   11e8c:	movw	r2, #99	; 0x63
   11e90:	movt	r2, #2
   11e94:	bl	11258 <error@plt>
   11e98:	b	11e9c <__assert_fail@plt+0xa70>
   11e9c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11ea0:	bl	122e4 <__assert_fail@plt+0xeb8>
   11ea4:	tst	r0, #1
   11ea8:	bne	11f5c <__assert_fail@plt+0xb30>
   11eac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11eb0:	movw	r1, #0
   11eb4:	cmp	r0, r1
   11eb8:	beq	11ecc <__assert_fail@plt+0xaa0>
   11ebc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11ec0:	bl	12308 <__assert_fail@plt+0xedc>
   11ec4:	tst	r0, #1
   11ec8:	beq	11f5c <__assert_fail@plt+0xb30>
   11ecc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11ed0:	bl	11168 <getpwuid@plt>
   11ed4:	str	r0, [fp, #-80]	; 0xffffffb0
   11ed8:	movw	lr, #0
   11edc:	cmp	r0, lr
   11ee0:	beq	11f10 <__assert_fail@plt+0xae4>
   11ee4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11ee8:	bl	12308 <__assert_fail@plt+0xedc>
   11eec:	tst	r0, #1
   11ef0:	beq	11f00 <__assert_fail@plt+0xad4>
   11ef4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   11ef8:	ldr	r0, [r0, #12]
   11efc:	str	r0, [fp, #-40]	; 0xffffffd8
   11f00:	ldr	r0, [fp, #-80]	; 0xffffffb0
   11f04:	ldr	r0, [r0]
   11f08:	str	r0, [fp, #-24]	; 0xffffffe8
   11f0c:	b	11f58 <__assert_fail@plt+0xb2c>
   11f10:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11f14:	bl	12308 <__assert_fail@plt+0xedc>
   11f18:	tst	r0, #1
   11f1c:	beq	11f54 <__assert_fail@plt+0xb28>
   11f20:	bl	1130c <__errno_location@plt>
   11f24:	ldr	r1, [r0]
   11f28:	movw	r0, #64889	; 0xfd79
   11f2c:	movt	r0, #1
   11f30:	str	r1, [sp, #64]	; 0x40
   11f34:	bl	112d0 <gettext@plt>
   11f38:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11f3c:	movw	r1, #125	; 0x7d
   11f40:	str	r0, [sp, #60]	; 0x3c
   11f44:	mov	r0, r1
   11f48:	ldr	r1, [sp, #64]	; 0x40
   11f4c:	ldr	r2, [sp, #60]	; 0x3c
   11f50:	bl	11258 <error@plt>
   11f54:	b	11f58 <__assert_fail@plt+0xb2c>
   11f58:	b	11f5c <__assert_fail@plt+0xb30>
   11f5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   11f60:	str	r0, [fp, #-84]	; 0xffffffac
   11f64:	movw	r0, #0
   11f68:	str	r0, [fp, #-88]	; 0xffffffa8
   11f6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11f70:	cmp	r1, r0
   11f74:	beq	11ff0 <__assert_fail@plt+0xbc4>
   11f78:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11f7c:	ldrb	r0, [r0]
   11f80:	cmp	r0, #0
   11f84:	beq	11ff0 <__assert_fail@plt+0xbc4>
   11f88:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11f8c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11f90:	cmp	r1, #0
   11f94:	movw	r1, #0
   11f98:	movne	r1, #1
   11f9c:	mvn	r2, #0
   11fa0:	eor	r1, r1, r2
   11fa4:	sub	r2, fp, #88	; 0x58
   11fa8:	str	r1, [sp, #56]	; 0x38
   11fac:	mov	r1, r2
   11fb0:	sub	r2, fp, #48	; 0x30
   11fb4:	ldr	r3, [sp, #56]	; 0x38
   11fb8:	and	r3, r3, #1
   11fbc:	bl	1232c <__assert_fail@plt+0xf00>
   11fc0:	cmp	r0, #0
   11fc4:	beq	11fe4 <__assert_fail@plt+0xbb8>
   11fc8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11fcc:	cmp	r0, #0
   11fd0:	bne	11fe0 <__assert_fail@plt+0xbb4>
   11fd4:	movw	r0, #125	; 0x7d
   11fd8:	str	r0, [fp, #-4]
   11fdc:	b	12234 <__assert_fail@plt+0xe08>
   11fe0:	b	11fec <__assert_fail@plt+0xbc0>
   11fe4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   11fe8:	str	r0, [fp, #-84]	; 0xffffffac
   11fec:	b	12098 <__assert_fail@plt+0xc6c>
   11ff0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11ff4:	movw	r1, #0
   11ff8:	cmp	r0, r1
   11ffc:	bne	12094 <__assert_fail@plt+0xc68>
   12000:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12004:	bl	12308 <__assert_fail@plt+0xedc>
   12008:	tst	r0, #1
   1200c:	bne	12094 <__assert_fail@plt+0xc68>
   12010:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12014:	movw	r1, #0
   12018:	cmp	r0, r1
   1201c:	beq	12094 <__assert_fail@plt+0xc68>
   12020:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12024:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12028:	sub	r2, fp, #88	; 0x58
   1202c:	bl	18c74 <__assert_fail@plt+0x7848>
   12030:	str	r0, [fp, #-92]	; 0xffffffa4
   12034:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12038:	cmp	r0, #0
   1203c:	bgt	12080 <__assert_fail@plt+0xc54>
   12040:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12044:	cmp	r0, #0
   12048:	bne	1207c <__assert_fail@plt+0xc50>
   1204c:	bl	1130c <__errno_location@plt>
   12050:	ldr	r1, [r0]
   12054:	movw	r0, #64928	; 0xfda0
   12058:	movt	r0, #1
   1205c:	str	r1, [sp, #52]	; 0x34
   12060:	bl	112d0 <gettext@plt>
   12064:	movw	r1, #125	; 0x7d
   12068:	str	r0, [sp, #48]	; 0x30
   1206c:	mov	r0, r1
   12070:	ldr	r1, [sp, #52]	; 0x34
   12074:	ldr	r2, [sp, #48]	; 0x30
   12078:	bl	11258 <error@plt>
   1207c:	b	12090 <__assert_fail@plt+0xc64>
   12080:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12084:	str	r0, [fp, #-48]	; 0xffffffd0
   12088:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1208c:	str	r0, [fp, #-84]	; 0xffffffac
   12090:	b	12094 <__assert_fail@plt+0xc68>
   12094:	b	12098 <__assert_fail@plt+0xc6c>
   12098:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1209c:	bl	122e4 <__assert_fail@plt+0xeb8>
   120a0:	tst	r0, #1
   120a4:	beq	120b8 <__assert_fail@plt+0xc8c>
   120a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   120ac:	movw	r1, #0
   120b0:	cmp	r0, r1
   120b4:	beq	120fc <__assert_fail@plt+0xcd0>
   120b8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   120bc:	ldr	r1, [fp, #-84]	; 0xffffffac
   120c0:	bl	11204 <setgroups@plt>
   120c4:	cmp	r0, #0
   120c8:	beq	120fc <__assert_fail@plt+0xcd0>
   120cc:	bl	1130c <__errno_location@plt>
   120d0:	ldr	r1, [r0]
   120d4:	movw	r0, #64962	; 0xfdc2
   120d8:	movt	r0, #1
   120dc:	str	r1, [sp, #44]	; 0x2c
   120e0:	bl	112d0 <gettext@plt>
   120e4:	movw	r1, #125	; 0x7d
   120e8:	str	r0, [sp, #40]	; 0x28
   120ec:	mov	r0, r1
   120f0:	ldr	r1, [sp, #44]	; 0x2c
   120f4:	ldr	r2, [sp, #40]	; 0x28
   120f8:	bl	11258 <error@plt>
   120fc:	ldr	r0, [fp, #-88]	; 0xffffffa8
   12100:	bl	12794 <__assert_fail@plt+0x1368>
   12104:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12108:	bl	12794 <__assert_fail@plt+0x1368>
   1210c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12110:	bl	12308 <__assert_fail@plt+0xedc>
   12114:	tst	r0, #1
   12118:	bne	1215c <__assert_fail@plt+0xd30>
   1211c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12120:	bl	11270 <setgid@plt>
   12124:	cmp	r0, #0
   12128:	beq	1215c <__assert_fail@plt+0xd30>
   1212c:	bl	1130c <__errno_location@plt>
   12130:	ldr	r1, [r0]
   12134:	movw	r0, #64996	; 0xfde4
   12138:	movt	r0, #1
   1213c:	str	r1, [sp, #36]	; 0x24
   12140:	bl	112d0 <gettext@plt>
   12144:	movw	r1, #125	; 0x7d
   12148:	str	r0, [sp, #32]
   1214c:	mov	r0, r1
   12150:	ldr	r1, [sp, #36]	; 0x24
   12154:	ldr	r2, [sp, #32]
   12158:	bl	11258 <error@plt>
   1215c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12160:	bl	122e4 <__assert_fail@plt+0xeb8>
   12164:	tst	r0, #1
   12168:	bne	121ac <__assert_fail@plt+0xd80>
   1216c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12170:	bl	113c0 <setuid@plt>
   12174:	cmp	r0, #0
   12178:	beq	121ac <__assert_fail@plt+0xd80>
   1217c:	bl	1130c <__errno_location@plt>
   12180:	ldr	r1, [r0]
   12184:	movw	r0, #65019	; 0xfdfb
   12188:	movt	r0, #1
   1218c:	str	r1, [sp, #28]
   12190:	bl	112d0 <gettext@plt>
   12194:	movw	r1, #125	; 0x7d
   12198:	str	r0, [sp, #24]
   1219c:	mov	r0, r1
   121a0:	ldr	r1, [sp, #28]
   121a4:	ldr	r2, [sp, #24]
   121a8:	bl	11258 <error@plt>
   121ac:	ldr	r0, [fp, #-12]
   121b0:	ldr	r0, [r0]
   121b4:	ldr	r1, [fp, #-12]
   121b8:	bl	111b0 <execvp@plt>
   121bc:	str	r0, [sp, #20]
   121c0:	bl	1130c <__errno_location@plt>
   121c4:	ldr	r0, [r0]
   121c8:	cmp	r0, #2
   121cc:	movw	r0, #0
   121d0:	moveq	r0, #1
   121d4:	tst	r0, #1
   121d8:	movw	r0, #127	; 0x7f
   121dc:	moveq	r0, #126	; 0x7e
   121e0:	str	r0, [fp, #-96]	; 0xffffffa0
   121e4:	bl	1130c <__errno_location@plt>
   121e8:	ldr	r1, [r0]
   121ec:	movw	r0, #65041	; 0xfe11
   121f0:	movt	r0, #1
   121f4:	str	r1, [sp, #16]
   121f8:	bl	112d0 <gettext@plt>
   121fc:	ldr	r1, [fp, #-12]
   12200:	ldr	r1, [r1]
   12204:	str	r0, [sp, #12]
   12208:	mov	r0, r1
   1220c:	bl	14e30 <__assert_fail@plt+0x3a04>
   12210:	movw	r1, #0
   12214:	str	r0, [sp, #8]
   12218:	mov	r0, r1
   1221c:	ldr	r1, [sp, #16]
   12220:	ldr	r2, [sp, #12]
   12224:	ldr	r3, [sp, #8]
   12228:	bl	11258 <error@plt>
   1222c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   12230:	str	r0, [fp, #-4]
   12234:	ldr	r0, [fp, #-4]
   12238:	mov	sp, fp
   1223c:	pop	{fp, pc}
   12240:	sub	sp, sp, #4
   12244:	str	r0, [sp]
   12248:	ldr	r0, [sp]
   1224c:	cmp	r0, #1
   12250:	beq	12264 <__assert_fail@plt+0xe38>
   12254:	ldr	r0, [sp]
   12258:	movw	r1, #4388	; 0x1124
   1225c:	movt	r1, #3
   12260:	str	r0, [r1]
   12264:	add	sp, sp, #4
   12268:	bx	lr
   1226c:	push	{fp, lr}
   12270:	mov	fp, sp
   12274:	sub	sp, sp, #16
   12278:	str	r0, [fp, #-4]
   1227c:	ldr	r0, [fp, #-4]
   12280:	bl	113d8 <canonicalize_file_name@plt>
   12284:	str	r0, [sp, #8]
   12288:	ldr	r0, [sp, #8]
   1228c:	movw	lr, #0
   12290:	cmp	r0, lr
   12294:	movw	r0, #0
   12298:	str	r0, [sp]
   1229c:	beq	122c0 <__assert_fail@plt+0xe94>
   122a0:	ldr	r1, [sp, #8]
   122a4:	movw	r0, #1143	; 0x477
   122a8:	movt	r0, #2
   122ac:	bl	1115c <strcmp@plt>
   122b0:	cmp	r0, #0
   122b4:	movw	r0, #0
   122b8:	moveq	r0, #1
   122bc:	str	r0, [sp]
   122c0:	ldr	r0, [sp]
   122c4:	and	r0, r0, #1
   122c8:	strb	r0, [sp, #7]
   122cc:	ldr	r0, [sp, #8]
   122d0:	bl	12794 <__assert_fail@plt+0x1368>
   122d4:	ldrb	r0, [sp, #7]
   122d8:	and	r0, r0, #1
   122dc:	mov	sp, fp
   122e0:	pop	{fp, pc}
   122e4:	sub	sp, sp, #4
   122e8:	str	r0, [sp]
   122ec:	ldr	r0, [sp]
   122f0:	cmn	r0, #1
   122f4:	movw	r0, #0
   122f8:	moveq	r0, #1
   122fc:	and	r0, r0, #1
   12300:	add	sp, sp, #4
   12304:	bx	lr
   12308:	sub	sp, sp, #4
   1230c:	str	r0, [sp]
   12310:	ldr	r0, [sp]
   12314:	cmn	r0, #1
   12318:	movw	r0, #0
   1231c:	moveq	r0, #1
   12320:	and	r0, r0, #1
   12324:	add	sp, sp, #4
   12328:	bx	lr
   1232c:	push	{fp, lr}
   12330:	mov	fp, sp
   12334:	sub	sp, sp, #88	; 0x58
   12338:	str	r0, [fp, #-4]
   1233c:	str	r1, [fp, #-8]
   12340:	str	r2, [fp, #-12]
   12344:	and	r0, r3, #1
   12348:	strb	r0, [fp, #-13]
   1234c:	movw	r0, #0
   12350:	str	r0, [fp, #-20]	; 0xffffffec
   12354:	str	r0, [fp, #-24]	; 0xffffffe8
   12358:	str	r0, [fp, #-28]	; 0xffffffe4
   1235c:	ldr	r0, [fp, #-4]
   12360:	bl	18bec <__assert_fail@plt+0x77c0>
   12364:	str	r0, [fp, #-32]	; 0xffffffe0
   12368:	movw	r0, #0
   1236c:	str	r0, [fp, #-40]	; 0xffffffd8
   12370:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12374:	movw	r1, #65410	; 0xff82
   12378:	movt	r1, #1
   1237c:	bl	11384 <strtok@plt>
   12380:	str	r0, [fp, #-36]	; 0xffffffdc
   12384:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12388:	movw	r1, #0
   1238c:	cmp	r0, r1
   12390:	beq	12568 <__assert_fail@plt+0x113c>
   12394:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12398:	movw	r1, #0
   1239c:	movw	r2, #10
   123a0:	add	r3, sp, #32
   123a4:	movw	ip, #64288	; 0xfb20
   123a8:	movt	ip, #1
   123ac:	str	ip, [sp]
   123b0:	bl	1a9d8 <__assert_fail@plt+0x95ac>
   123b4:	cmp	r0, #0
   123b8:	bne	1246c <__assert_fail@plt+0x1040>
   123bc:	ldr	r0, [sp, #36]	; 0x24
   123c0:	cmp	r0, #0
   123c4:	bne	1246c <__assert_fail@plt+0x1040>
   123c8:	b	123cc <__assert_fail@plt+0xfa0>
   123cc:	b	123d0 <__assert_fail@plt+0xfa4>
   123d0:	bl	112b8 <__ctype_b_loc@plt>
   123d4:	ldr	r0, [r0]
   123d8:	ldr	lr, [fp, #-36]	; 0xffffffdc
   123dc:	ldrb	lr, [lr]
   123e0:	str	r0, [sp, #28]
   123e4:	mov	r0, lr
   123e8:	bl	12618 <__assert_fail@plt+0x11ec>
   123ec:	mov	lr, r0
   123f0:	ldr	r1, [sp, #28]
   123f4:	add	r0, r1, r0, lsl #1
   123f8:	ldrh	r0, [r0]
   123fc:	and	r0, r0, #8192	; 0x2000
   12400:	cmp	r0, #0
   12404:	str	lr, [sp, #24]
   12408:	beq	1241c <__assert_fail@plt+0xff0>
   1240c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12410:	add	r0, r0, #1
   12414:	str	r0, [fp, #-36]	; 0xffffffdc
   12418:	b	123d0 <__assert_fail@plt+0xfa4>
   1241c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12420:	ldrb	r0, [r0]
   12424:	cmp	r0, #43	; 0x2b
   12428:	beq	12460 <__assert_fail@plt+0x1034>
   1242c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12430:	bl	11420 <getgrnam@plt>
   12434:	str	r0, [sp, #44]	; 0x2c
   12438:	ldr	r0, [sp, #44]	; 0x2c
   1243c:	movw	lr, #0
   12440:	cmp	r0, lr
   12444:	beq	1245c <__assert_fail@plt+0x1030>
   12448:	ldr	r0, [sp, #44]	; 0x2c
   1244c:	ldr	r0, [r0, #8]
   12450:	mov	r1, #0
   12454:	str	r1, [sp, #36]	; 0x24
   12458:	str	r0, [sp, #32]
   1245c:	b	12460 <__assert_fail@plt+0x1034>
   12460:	movw	r0, #1
   12464:	str	r0, [sp, #44]	; 0x2c
   12468:	b	124a0 <__assert_fail@plt+0x1074>
   1246c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12470:	bl	11420 <getgrnam@plt>
   12474:	str	r0, [sp, #44]	; 0x2c
   12478:	ldr	r0, [sp, #44]	; 0x2c
   1247c:	movw	lr, #0
   12480:	cmp	r0, lr
   12484:	beq	1249c <__assert_fail@plt+0x1070>
   12488:	ldr	r0, [sp, #44]	; 0x2c
   1248c:	ldr	r0, [r0, #8]
   12490:	mov	r1, #0
   12494:	str	r1, [sp, #36]	; 0x24
   12498:	str	r0, [sp, #32]
   1249c:	b	124a0 <__assert_fail@plt+0x1074>
   124a0:	ldr	r0, [sp, #44]	; 0x2c
   124a4:	movw	r1, #0
   124a8:	cmp	r0, r1
   124ac:	bne	12510 <__assert_fail@plt+0x10e4>
   124b0:	mvn	r0, #0
   124b4:	str	r0, [fp, #-40]	; 0xffffffd8
   124b8:	ldrb	r0, [fp, #-13]
   124bc:	tst	r0, #1
   124c0:	beq	1250c <__assert_fail@plt+0x10e0>
   124c4:	bl	1130c <__errno_location@plt>
   124c8:	ldr	r1, [r0]
   124cc:	movw	r0, #65412	; 0xff84
   124d0:	movt	r0, #1
   124d4:	str	r1, [sp, #20]
   124d8:	bl	112d0 <gettext@plt>
   124dc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   124e0:	str	r0, [sp, #16]
   124e4:	mov	r0, r1
   124e8:	bl	14e30 <__assert_fail@plt+0x3a04>
   124ec:	movw	r1, #0
   124f0:	str	r0, [sp, #12]
   124f4:	mov	r0, r1
   124f8:	ldr	r1, [sp, #20]
   124fc:	ldr	r2, [sp, #16]
   12500:	ldr	r3, [sp, #12]
   12504:	bl	11258 <error@plt>
   12508:	b	12550 <__assert_fail@plt+0x1124>
   1250c:	b	12568 <__assert_fail@plt+0x113c>
   12510:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12514:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12518:	cmp	r0, r1
   1251c:	bne	12534 <__assert_fail@plt+0x1108>
   12520:	ldr	r0, [fp, #-20]	; 0xffffffec
   12524:	sub	r1, fp, #24
   12528:	movw	r2, #4
   1252c:	bl	16024 <__assert_fail@plt+0x4bf8>
   12530:	str	r0, [fp, #-20]	; 0xffffffec
   12534:	ldr	r0, [sp, #32]
   12538:	ldr	r1, [fp, #-20]	; 0xffffffec
   1253c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12540:	add	r3, r2, #1
   12544:	str	r3, [fp, #-28]	; 0xffffffe4
   12548:	add	r1, r1, r2, lsl #2
   1254c:	str	r0, [r1]
   12550:	movw	r0, #0
   12554:	movw	r1, #65410	; 0xff82
   12558:	movt	r1, #1
   1255c:	bl	11384 <strtok@plt>
   12560:	str	r0, [fp, #-36]	; 0xffffffdc
   12564:	b	12384 <__assert_fail@plt+0xf58>
   12568:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1256c:	cmp	r0, #0
   12570:	bne	125cc <__assert_fail@plt+0x11a0>
   12574:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12578:	cmp	r0, #0
   1257c:	bne	125cc <__assert_fail@plt+0x11a0>
   12580:	ldrb	r0, [fp, #-13]
   12584:	tst	r0, #1
   12588:	beq	125c4 <__assert_fail@plt+0x1198>
   1258c:	movw	r0, #65429	; 0xff95
   12590:	movt	r0, #1
   12594:	bl	112d0 <gettext@plt>
   12598:	ldr	lr, [fp, #-4]
   1259c:	str	r0, [sp, #8]
   125a0:	mov	r0, lr
   125a4:	bl	14e30 <__assert_fail@plt+0x3a04>
   125a8:	movw	lr, #0
   125ac:	str	r0, [sp, #4]
   125b0:	mov	r0, lr
   125b4:	mov	r1, lr
   125b8:	ldr	r2, [sp, #8]
   125bc:	ldr	r3, [sp, #4]
   125c0:	bl	11258 <error@plt>
   125c4:	mvn	r0, #0
   125c8:	str	r0, [fp, #-40]	; 0xffffffd8
   125cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   125d0:	ldr	r1, [fp, #-8]
   125d4:	str	r0, [r1]
   125d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   125dc:	cmp	r0, #0
   125e0:	bne	125f0 <__assert_fail@plt+0x11c4>
   125e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   125e8:	ldr	r1, [fp, #-12]
   125ec:	str	r0, [r1]
   125f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   125f4:	bl	12794 <__assert_fail@plt+0x1368>
   125f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   125fc:	mov	sp, fp
   12600:	pop	{fp, pc}
   12604:	sub	sp, sp, #4
   12608:	str	r0, [sp]
   1260c:	ldr	r0, [sp]
   12610:	add	sp, sp, #4
   12614:	bx	lr
   12618:	sub	sp, sp, #4
   1261c:	strb	r0, [sp, #3]
   12620:	ldrb	r0, [sp, #3]
   12624:	add	sp, sp, #4
   12628:	bx	lr
   1262c:	sub	sp, sp, #4
   12630:	str	r0, [sp]
   12634:	ldr	r0, [sp]
   12638:	movw	r1, #4504	; 0x1198
   1263c:	movt	r1, #3
   12640:	str	r0, [r1]
   12644:	add	sp, sp, #4
   12648:	bx	lr
   1264c:	sub	sp, sp, #4
   12650:	and	r0, r0, #1
   12654:	strb	r0, [sp, #3]
   12658:	ldrb	r0, [sp, #3]
   1265c:	and	r0, r0, #1
   12660:	movw	r1, #4508	; 0x119c
   12664:	movt	r1, #3
   12668:	strb	r0, [r1]
   1266c:	add	sp, sp, #4
   12670:	bx	lr
   12674:	push	{fp, lr}
   12678:	mov	fp, sp
   1267c:	sub	sp, sp, #24
   12680:	movw	r0, #4492	; 0x118c
   12684:	movt	r0, #3
   12688:	ldr	r0, [r0]
   1268c:	bl	1ce40 <__assert_fail@plt+0xba14>
   12690:	cmp	r0, #0
   12694:	beq	12764 <__assert_fail@plt+0x1338>
   12698:	movw	r0, #4508	; 0x119c
   1269c:	movt	r0, #3
   126a0:	ldrb	r0, [r0]
   126a4:	tst	r0, #1
   126a8:	beq	126bc <__assert_fail@plt+0x1290>
   126ac:	bl	1130c <__errno_location@plt>
   126b0:	ldr	r0, [r0]
   126b4:	cmp	r0, #32
   126b8:	beq	12764 <__assert_fail@plt+0x1338>
   126bc:	movw	r0, #83	; 0x53
   126c0:	movt	r0, #2
   126c4:	bl	112d0 <gettext@plt>
   126c8:	str	r0, [fp, #-4]
   126cc:	movw	r0, #4504	; 0x1198
   126d0:	movt	r0, #3
   126d4:	ldr	r0, [r0]
   126d8:	movw	lr, #0
   126dc:	cmp	r0, lr
   126e0:	beq	12738 <__assert_fail@plt+0x130c>
   126e4:	bl	1130c <__errno_location@plt>
   126e8:	ldr	r1, [r0]
   126ec:	movw	r0, #4504	; 0x1198
   126f0:	movt	r0, #3
   126f4:	ldr	r0, [r0]
   126f8:	str	r1, [fp, #-8]
   126fc:	bl	14b94 <__assert_fail@plt+0x3768>
   12700:	ldr	r1, [fp, #-4]
   12704:	movw	lr, #0
   12708:	str	r0, [sp, #12]
   1270c:	mov	r0, lr
   12710:	ldr	lr, [fp, #-8]
   12714:	str	r1, [sp, #8]
   12718:	mov	r1, lr
   1271c:	movw	r2, #95	; 0x5f
   12720:	movt	r2, #2
   12724:	ldr	r3, [sp, #12]
   12728:	ldr	ip, [sp, #8]
   1272c:	str	ip, [sp]
   12730:	bl	11258 <error@plt>
   12734:	b	12754 <__assert_fail@plt+0x1328>
   12738:	bl	1130c <__errno_location@plt>
   1273c:	ldr	r1, [r0]
   12740:	ldr	r3, [fp, #-4]
   12744:	movw	r0, #0
   12748:	movw	r2, #99	; 0x63
   1274c:	movt	r2, #2
   12750:	bl	11258 <error@plt>
   12754:	movw	r0, #4388	; 0x1124
   12758:	movt	r0, #3
   1275c:	ldr	r0, [r0]
   12760:	bl	11198 <_exit@plt>
   12764:	movw	r0, #4488	; 0x1188
   12768:	movt	r0, #3
   1276c:	ldr	r0, [r0]
   12770:	bl	1ce40 <__assert_fail@plt+0xba14>
   12774:	cmp	r0, #0
   12778:	beq	1278c <__assert_fail@plt+0x1360>
   1277c:	movw	r0, #4388	; 0x1124
   12780:	movt	r0, #3
   12784:	ldr	r0, [r0]
   12788:	bl	11198 <_exit@plt>
   1278c:	mov	sp, fp
   12790:	pop	{fp, pc}
   12794:	push	{fp, lr}
   12798:	mov	fp, sp
   1279c:	sub	sp, sp, #16
   127a0:	str	r0, [fp, #-4]
   127a4:	bl	1130c <__errno_location@plt>
   127a8:	ldr	r0, [r0]
   127ac:	str	r0, [sp, #8]
   127b0:	ldr	r0, [fp, #-4]
   127b4:	bl	1118c <free@plt>
   127b8:	ldr	r0, [sp, #8]
   127bc:	str	r0, [sp, #4]
   127c0:	bl	1130c <__errno_location@plt>
   127c4:	ldr	lr, [sp, #4]
   127c8:	str	lr, [r0]
   127cc:	mov	sp, fp
   127d0:	pop	{fp, pc}
   127d4:	push	{fp, lr}
   127d8:	mov	fp, sp
   127dc:	sub	sp, sp, #24
   127e0:	str	r0, [fp, #-4]
   127e4:	ldr	r0, [fp, #-4]
   127e8:	movw	r1, #0
   127ec:	cmp	r0, r1
   127f0:	bne	12814 <__assert_fail@plt+0x13e8>
   127f4:	movw	r0, #4488	; 0x1188
   127f8:	movt	r0, #3
   127fc:	ldr	r1, [r0]
   12800:	movw	r0, #102	; 0x66
   12804:	movt	r0, #2
   12808:	bl	113f0 <fputs@plt>
   1280c:	str	r0, [sp, #8]
   12810:	bl	11408 <abort@plt>
   12814:	ldr	r0, [fp, #-4]
   12818:	movw	r1, #47	; 0x2f
   1281c:	bl	113a8 <strrchr@plt>
   12820:	str	r0, [fp, #-8]
   12824:	ldr	r0, [fp, #-8]
   12828:	movw	r1, #0
   1282c:	cmp	r0, r1
   12830:	beq	12844 <__assert_fail@plt+0x1418>
   12834:	ldr	r0, [fp, #-8]
   12838:	add	r0, r0, #1
   1283c:	str	r0, [sp, #4]
   12840:	b	1284c <__assert_fail@plt+0x1420>
   12844:	ldr	r0, [fp, #-4]
   12848:	str	r0, [sp, #4]
   1284c:	ldr	r0, [sp, #4]
   12850:	str	r0, [sp, #12]
   12854:	ldr	r0, [sp, #12]
   12858:	ldr	r1, [fp, #-4]
   1285c:	sub	r0, r0, r1
   12860:	cmp	r0, #7
   12864:	blt	128d0 <__assert_fail@plt+0x14a4>
   12868:	ldr	r0, [sp, #12]
   1286c:	mvn	r1, #6
   12870:	add	r0, r0, r1
   12874:	movw	r1, #158	; 0x9e
   12878:	movt	r1, #2
   1287c:	movw	r2, #7
   12880:	bl	113fc <strncmp@plt>
   12884:	cmp	r0, #0
   12888:	bne	128d0 <__assert_fail@plt+0x14a4>
   1288c:	ldr	r0, [sp, #12]
   12890:	str	r0, [fp, #-4]
   12894:	ldr	r0, [sp, #12]
   12898:	movw	r1, #166	; 0xa6
   1289c:	movt	r1, #2
   128a0:	movw	r2, #3
   128a4:	bl	113fc <strncmp@plt>
   128a8:	cmp	r0, #0
   128ac:	bne	128cc <__assert_fail@plt+0x14a0>
   128b0:	ldr	r0, [sp, #12]
   128b4:	add	r0, r0, #3
   128b8:	str	r0, [fp, #-4]
   128bc:	ldr	r0, [fp, #-4]
   128c0:	movw	r1, #4472	; 0x1178
   128c4:	movt	r1, #3
   128c8:	str	r0, [r1]
   128cc:	b	128d0 <__assert_fail@plt+0x14a4>
   128d0:	ldr	r0, [fp, #-4]
   128d4:	movw	r1, #4512	; 0x11a0
   128d8:	movt	r1, #3
   128dc:	str	r0, [r1]
   128e0:	ldr	r0, [fp, #-4]
   128e4:	movw	r1, #4476	; 0x117c
   128e8:	movt	r1, #3
   128ec:	str	r0, [r1]
   128f0:	mov	sp, fp
   128f4:	pop	{fp, pc}
   128f8:	push	{fp, lr}
   128fc:	mov	fp, sp
   12900:	sub	sp, sp, #24
   12904:	str	r0, [fp, #-4]
   12908:	bl	1130c <__errno_location@plt>
   1290c:	ldr	r0, [r0]
   12910:	str	r0, [fp, #-8]
   12914:	ldr	r0, [fp, #-4]
   12918:	movw	lr, #0
   1291c:	cmp	r0, lr
   12920:	beq	12930 <__assert_fail@plt+0x1504>
   12924:	ldr	r0, [fp, #-4]
   12928:	str	r0, [sp, #8]
   1292c:	b	12940 <__assert_fail@plt+0x1514>
   12930:	movw	r0, #4516	; 0x11a4
   12934:	movt	r0, #3
   12938:	str	r0, [sp, #8]
   1293c:	b	12940 <__assert_fail@plt+0x1514>
   12940:	ldr	r0, [sp, #8]
   12944:	movw	r1, #48	; 0x30
   12948:	bl	18b24 <__assert_fail@plt+0x76f8>
   1294c:	str	r0, [sp, #12]
   12950:	ldr	r0, [fp, #-8]
   12954:	str	r0, [sp, #4]
   12958:	bl	1130c <__errno_location@plt>
   1295c:	ldr	r1, [sp, #4]
   12960:	str	r1, [r0]
   12964:	ldr	r0, [sp, #12]
   12968:	mov	sp, fp
   1296c:	pop	{fp, pc}
   12970:	sub	sp, sp, #8
   12974:	str	r0, [sp, #4]
   12978:	ldr	r0, [sp, #4]
   1297c:	movw	r1, #0
   12980:	cmp	r0, r1
   12984:	beq	12994 <__assert_fail@plt+0x1568>
   12988:	ldr	r0, [sp, #4]
   1298c:	str	r0, [sp]
   12990:	b	129a4 <__assert_fail@plt+0x1578>
   12994:	movw	r0, #4516	; 0x11a4
   12998:	movt	r0, #3
   1299c:	str	r0, [sp]
   129a0:	b	129a4 <__assert_fail@plt+0x1578>
   129a4:	ldr	r0, [sp]
   129a8:	ldr	r0, [r0]
   129ac:	add	sp, sp, #8
   129b0:	bx	lr
   129b4:	sub	sp, sp, #16
   129b8:	str	r0, [sp, #12]
   129bc:	str	r1, [sp, #8]
   129c0:	ldr	r0, [sp, #8]
   129c4:	ldr	r1, [sp, #12]
   129c8:	movw	r2, #0
   129cc:	cmp	r1, r2
   129d0:	str	r0, [sp, #4]
   129d4:	beq	129e4 <__assert_fail@plt+0x15b8>
   129d8:	ldr	r0, [sp, #12]
   129dc:	str	r0, [sp]
   129e0:	b	129f4 <__assert_fail@plt+0x15c8>
   129e4:	movw	r0, #4516	; 0x11a4
   129e8:	movt	r0, #3
   129ec:	str	r0, [sp]
   129f0:	b	129f4 <__assert_fail@plt+0x15c8>
   129f4:	ldr	r0, [sp]
   129f8:	ldr	r1, [sp, #4]
   129fc:	str	r1, [r0]
   12a00:	add	sp, sp, #16
   12a04:	bx	lr
   12a08:	sub	sp, sp, #32
   12a0c:	str	r0, [sp, #28]
   12a10:	strb	r1, [sp, #27]
   12a14:	str	r2, [sp, #20]
   12a18:	ldrb	r0, [sp, #27]
   12a1c:	strb	r0, [sp, #19]
   12a20:	ldr	r0, [sp, #28]
   12a24:	movw	r1, #0
   12a28:	cmp	r0, r1
   12a2c:	beq	12a3c <__assert_fail@plt+0x1610>
   12a30:	ldr	r0, [sp, #28]
   12a34:	str	r0, [sp]
   12a38:	b	12a4c <__assert_fail@plt+0x1620>
   12a3c:	movw	r0, #4516	; 0x11a4
   12a40:	movt	r0, #3
   12a44:	str	r0, [sp]
   12a48:	b	12a4c <__assert_fail@plt+0x1620>
   12a4c:	ldr	r0, [sp]
   12a50:	add	r0, r0, #8
   12a54:	ldrb	r1, [sp, #19]
   12a58:	lsr	r1, r1, #5
   12a5c:	add	r0, r0, r1, lsl #2
   12a60:	str	r0, [sp, #12]
   12a64:	ldrb	r0, [sp, #19]
   12a68:	and	r0, r0, #31
   12a6c:	str	r0, [sp, #8]
   12a70:	ldr	r0, [sp, #12]
   12a74:	ldr	r0, [r0]
   12a78:	ldr	r1, [sp, #8]
   12a7c:	lsr	r0, r0, r1
   12a80:	and	r0, r0, #1
   12a84:	str	r0, [sp, #4]
   12a88:	ldr	r0, [sp, #20]
   12a8c:	and	r0, r0, #1
   12a90:	ldr	r1, [sp, #4]
   12a94:	eor	r0, r0, r1
   12a98:	ldr	r1, [sp, #8]
   12a9c:	lsl	r0, r0, r1
   12aa0:	ldr	r1, [sp, #12]
   12aa4:	ldr	r2, [r1]
   12aa8:	eor	r0, r2, r0
   12aac:	str	r0, [r1]
   12ab0:	ldr	r0, [sp, #4]
   12ab4:	add	sp, sp, #32
   12ab8:	bx	lr
   12abc:	sub	sp, sp, #12
   12ac0:	str	r0, [sp, #8]
   12ac4:	str	r1, [sp, #4]
   12ac8:	ldr	r0, [sp, #8]
   12acc:	movw	r1, #0
   12ad0:	cmp	r0, r1
   12ad4:	bne	12ae4 <__assert_fail@plt+0x16b8>
   12ad8:	movw	r0, #4516	; 0x11a4
   12adc:	movt	r0, #3
   12ae0:	str	r0, [sp, #8]
   12ae4:	ldr	r0, [sp, #8]
   12ae8:	ldr	r0, [r0, #4]
   12aec:	str	r0, [sp]
   12af0:	ldr	r0, [sp, #4]
   12af4:	ldr	r1, [sp, #8]
   12af8:	str	r0, [r1, #4]
   12afc:	ldr	r0, [sp]
   12b00:	add	sp, sp, #12
   12b04:	bx	lr
   12b08:	push	{fp, lr}
   12b0c:	mov	fp, sp
   12b10:	sub	sp, sp, #16
   12b14:	str	r0, [fp, #-4]
   12b18:	str	r1, [sp, #8]
   12b1c:	str	r2, [sp, #4]
   12b20:	ldr	r0, [fp, #-4]
   12b24:	movw	r1, #0
   12b28:	cmp	r0, r1
   12b2c:	bne	12b3c <__assert_fail@plt+0x1710>
   12b30:	movw	r0, #4516	; 0x11a4
   12b34:	movt	r0, #3
   12b38:	str	r0, [fp, #-4]
   12b3c:	ldr	r0, [fp, #-4]
   12b40:	movw	r1, #10
   12b44:	str	r1, [r0]
   12b48:	ldr	r0, [sp, #8]
   12b4c:	movw	r1, #0
   12b50:	cmp	r0, r1
   12b54:	beq	12b68 <__assert_fail@plt+0x173c>
   12b58:	ldr	r0, [sp, #4]
   12b5c:	movw	r1, #0
   12b60:	cmp	r0, r1
   12b64:	bne	12b6c <__assert_fail@plt+0x1740>
   12b68:	bl	11408 <abort@plt>
   12b6c:	ldr	r0, [sp, #8]
   12b70:	ldr	r1, [fp, #-4]
   12b74:	str	r0, [r1, #40]	; 0x28
   12b78:	ldr	r0, [sp, #4]
   12b7c:	ldr	r1, [fp, #-4]
   12b80:	str	r0, [r1, #44]	; 0x2c
   12b84:	mov	sp, fp
   12b88:	pop	{fp, pc}
   12b8c:	push	{r4, r5, r6, sl, fp, lr}
   12b90:	add	fp, sp, #16
   12b94:	sub	sp, sp, #64	; 0x40
   12b98:	ldr	ip, [fp, #8]
   12b9c:	str	r0, [fp, #-20]	; 0xffffffec
   12ba0:	str	r1, [fp, #-24]	; 0xffffffe8
   12ba4:	str	r2, [fp, #-28]	; 0xffffffe4
   12ba8:	str	r3, [fp, #-32]	; 0xffffffe0
   12bac:	ldr	r0, [fp, #8]
   12bb0:	movw	r1, #0
   12bb4:	cmp	r0, r1
   12bb8:	str	ip, [sp, #32]
   12bbc:	beq	12bcc <__assert_fail@plt+0x17a0>
   12bc0:	ldr	r0, [fp, #8]
   12bc4:	str	r0, [sp, #28]
   12bc8:	b	12bdc <__assert_fail@plt+0x17b0>
   12bcc:	movw	r0, #4516	; 0x11a4
   12bd0:	movt	r0, #3
   12bd4:	str	r0, [sp, #28]
   12bd8:	b	12bdc <__assert_fail@plt+0x17b0>
   12bdc:	ldr	r0, [sp, #28]
   12be0:	str	r0, [fp, #-36]	; 0xffffffdc
   12be4:	bl	1130c <__errno_location@plt>
   12be8:	ldr	r0, [r0]
   12bec:	str	r0, [sp, #40]	; 0x28
   12bf0:	ldr	r0, [fp, #-20]	; 0xffffffec
   12bf4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12bf8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12bfc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12c00:	ldr	lr, [fp, #-36]	; 0xffffffdc
   12c04:	ldr	lr, [lr]
   12c08:	ldr	ip, [fp, #-36]	; 0xffffffdc
   12c0c:	ldr	ip, [ip, #4]
   12c10:	ldr	r4, [fp, #-36]	; 0xffffffdc
   12c14:	add	r4, r4, #8
   12c18:	ldr	r5, [fp, #-36]	; 0xffffffdc
   12c1c:	ldr	r5, [r5, #40]	; 0x28
   12c20:	ldr	r6, [fp, #-36]	; 0xffffffdc
   12c24:	ldr	r6, [r6, #44]	; 0x2c
   12c28:	str	lr, [sp]
   12c2c:	str	ip, [sp, #4]
   12c30:	str	r4, [sp, #8]
   12c34:	str	r5, [sp, #12]
   12c38:	str	r6, [sp, #16]
   12c3c:	bl	12c64 <__assert_fail@plt+0x1838>
   12c40:	str	r0, [sp, #36]	; 0x24
   12c44:	ldr	r0, [sp, #40]	; 0x28
   12c48:	str	r0, [sp, #24]
   12c4c:	bl	1130c <__errno_location@plt>
   12c50:	ldr	r1, [sp, #24]
   12c54:	str	r1, [r0]
   12c58:	ldr	r0, [sp, #36]	; 0x24
   12c5c:	sub	sp, fp, #16
   12c60:	pop	{r4, r5, r6, sl, fp, pc}
   12c64:	push	{r4, r5, r6, sl, fp, lr}
   12c68:	add	fp, sp, #16
   12c6c:	sub	sp, sp, #168	; 0xa8
   12c70:	ldr	ip, [fp, #24]
   12c74:	ldr	lr, [fp, #20]
   12c78:	ldr	r4, [fp, #16]
   12c7c:	ldr	r5, [fp, #12]
   12c80:	ldr	r6, [fp, #8]
   12c84:	str	r0, [fp, #-24]	; 0xffffffe8
   12c88:	str	r1, [fp, #-28]	; 0xffffffe4
   12c8c:	str	r2, [fp, #-32]	; 0xffffffe0
   12c90:	str	r3, [fp, #-36]	; 0xffffffdc
   12c94:	movw	r0, #0
   12c98:	str	r0, [fp, #-44]	; 0xffffffd4
   12c9c:	str	r0, [fp, #-48]	; 0xffffffd0
   12ca0:	str	r0, [fp, #-52]	; 0xffffffcc
   12ca4:	str	r0, [fp, #-56]	; 0xffffffc8
   12ca8:	movw	r0, #0
   12cac:	strb	r0, [fp, #-57]	; 0xffffffc7
   12cb0:	str	r6, [sp, #80]	; 0x50
   12cb4:	str	lr, [sp, #76]	; 0x4c
   12cb8:	str	r4, [sp, #72]	; 0x48
   12cbc:	str	r5, [sp, #68]	; 0x44
   12cc0:	str	ip, [sp, #64]	; 0x40
   12cc4:	bl	1121c <__ctype_get_mb_cur_max@plt>
   12cc8:	cmp	r0, #1
   12ccc:	movw	r0, #0
   12cd0:	moveq	r0, #1
   12cd4:	and	r0, r0, #1
   12cd8:	strb	r0, [fp, #-58]	; 0xffffffc6
   12cdc:	ldr	r0, [fp, #12]
   12ce0:	and	r0, r0, #2
   12ce4:	cmp	r0, #0
   12ce8:	movw	r0, #0
   12cec:	movne	r0, #1
   12cf0:	and	r0, r0, #1
   12cf4:	strb	r0, [fp, #-59]	; 0xffffffc5
   12cf8:	movw	r0, #0
   12cfc:	strb	r0, [fp, #-60]	; 0xffffffc4
   12d00:	strb	r0, [fp, #-61]	; 0xffffffc3
   12d04:	movw	r0, #1
   12d08:	strb	r0, [fp, #-62]	; 0xffffffc2
   12d0c:	ldr	r0, [fp, #8]
   12d10:	cmp	r0, #10
   12d14:	str	r0, [sp, #60]	; 0x3c
   12d18:	bhi	12f40 <__assert_fail@plt+0x1b14>
   12d1c:	add	r0, pc, #8
   12d20:	ldr	r1, [sp, #60]	; 0x3c
   12d24:	ldr	r0, [r0, r1, lsl #2]
   12d28:	mov	pc, r0
   12d2c:	andeq	r2, r1, r4, lsr pc
   12d30:			; <UNDEFINED> instruction: 0x00012eb0
   12d34:	ldrdeq	r2, [r1], -r0
   12d38:	andeq	r2, r1, r8, lsr #29
   12d3c:			; <UNDEFINED> instruction: 0x00012eb8
   12d40:	andeq	r2, r1, r8, ror #26
   12d44:	andeq	r2, r1, r8, asr sp
   12d48:	andeq	r2, r1, ip, asr #27
   12d4c:	andeq	r2, r1, r0, ror #27
   12d50:	andeq	r2, r1, r0, ror #27
   12d54:	andeq	r2, r1, r0, ror #27
   12d58:	movw	r0, #5
   12d5c:	str	r0, [fp, #8]
   12d60:	movw	r0, #1
   12d64:	strb	r0, [fp, #-59]	; 0xffffffc5
   12d68:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12d6c:	tst	r0, #1
   12d70:	bne	12dac <__assert_fail@plt+0x1980>
   12d74:	b	12d78 <__assert_fail@plt+0x194c>
   12d78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12d7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12d80:	cmp	r0, r1
   12d84:	bcs	12d9c <__assert_fail@plt+0x1970>
   12d88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12d8c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12d90:	add	r0, r0, r1
   12d94:	movw	r1, #34	; 0x22
   12d98:	strb	r1, [r0]
   12d9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12da0:	add	r0, r0, #1
   12da4:	str	r0, [fp, #-44]	; 0xffffffd4
   12da8:	b	12dac <__assert_fail@plt+0x1980>
   12dac:	movw	r0, #1
   12db0:	strb	r0, [fp, #-57]	; 0xffffffc7
   12db4:	movw	r0, #246	; 0xf6
   12db8:	movt	r0, #2
   12dbc:	str	r0, [fp, #-52]	; 0xffffffcc
   12dc0:	movw	r0, #1
   12dc4:	str	r0, [fp, #-56]	; 0xffffffc8
   12dc8:	b	12f44 <__assert_fail@plt+0x1b18>
   12dcc:	movw	r0, #1
   12dd0:	strb	r0, [fp, #-57]	; 0xffffffc7
   12dd4:	movw	r0, #0
   12dd8:	strb	r0, [fp, #-59]	; 0xffffffc5
   12ddc:	b	12f44 <__assert_fail@plt+0x1b18>
   12de0:	ldr	r0, [fp, #8]
   12de4:	cmp	r0, #10
   12de8:	beq	12e14 <__assert_fail@plt+0x19e8>
   12dec:	ldr	r1, [fp, #8]
   12df0:	movw	r0, #248	; 0xf8
   12df4:	movt	r0, #2
   12df8:	bl	14e54 <__assert_fail@plt+0x3a28>
   12dfc:	str	r0, [fp, #20]
   12e00:	ldr	r1, [fp, #8]
   12e04:	movw	r0, #250	; 0xfa
   12e08:	movt	r0, #2
   12e0c:	bl	14e54 <__assert_fail@plt+0x3a28>
   12e10:	str	r0, [fp, #24]
   12e14:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12e18:	tst	r0, #1
   12e1c:	bne	12e88 <__assert_fail@plt+0x1a5c>
   12e20:	ldr	r0, [fp, #20]
   12e24:	str	r0, [fp, #-52]	; 0xffffffcc
   12e28:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12e2c:	ldrsb	r0, [r0]
   12e30:	cmp	r0, #0
   12e34:	beq	12e84 <__assert_fail@plt+0x1a58>
   12e38:	b	12e3c <__assert_fail@plt+0x1a10>
   12e3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12e40:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12e44:	cmp	r0, r1
   12e48:	bcs	12e64 <__assert_fail@plt+0x1a38>
   12e4c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12e50:	ldrb	r0, [r0]
   12e54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12e58:	ldr	r2, [fp, #-44]	; 0xffffffd4
   12e5c:	add	r1, r1, r2
   12e60:	strb	r0, [r1]
   12e64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12e68:	add	r0, r0, #1
   12e6c:	str	r0, [fp, #-44]	; 0xffffffd4
   12e70:	b	12e74 <__assert_fail@plt+0x1a48>
   12e74:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12e78:	add	r0, r0, #1
   12e7c:	str	r0, [fp, #-52]	; 0xffffffcc
   12e80:	b	12e28 <__assert_fail@plt+0x19fc>
   12e84:	b	12e88 <__assert_fail@plt+0x1a5c>
   12e88:	movw	r0, #1
   12e8c:	strb	r0, [fp, #-57]	; 0xffffffc7
   12e90:	ldr	r0, [fp, #24]
   12e94:	str	r0, [fp, #-52]	; 0xffffffcc
   12e98:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12e9c:	bl	112e8 <strlen@plt>
   12ea0:	str	r0, [fp, #-56]	; 0xffffffc8
   12ea4:	b	12f44 <__assert_fail@plt+0x1b18>
   12ea8:	movw	r0, #1
   12eac:	strb	r0, [fp, #-57]	; 0xffffffc7
   12eb0:	movw	r0, #1
   12eb4:	strb	r0, [fp, #-59]	; 0xffffffc5
   12eb8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12ebc:	tst	r0, #1
   12ec0:	bne	12ecc <__assert_fail@plt+0x1aa0>
   12ec4:	movw	r0, #1
   12ec8:	strb	r0, [fp, #-57]	; 0xffffffc7
   12ecc:	b	12ed0 <__assert_fail@plt+0x1aa4>
   12ed0:	movw	r0, #2
   12ed4:	str	r0, [fp, #8]
   12ed8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12edc:	tst	r0, #1
   12ee0:	bne	12f1c <__assert_fail@plt+0x1af0>
   12ee4:	b	12ee8 <__assert_fail@plt+0x1abc>
   12ee8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12eec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12ef0:	cmp	r0, r1
   12ef4:	bcs	12f0c <__assert_fail@plt+0x1ae0>
   12ef8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12efc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12f00:	add	r0, r0, r1
   12f04:	movw	r1, #39	; 0x27
   12f08:	strb	r1, [r0]
   12f0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12f10:	add	r0, r0, #1
   12f14:	str	r0, [fp, #-44]	; 0xffffffd4
   12f18:	b	12f1c <__assert_fail@plt+0x1af0>
   12f1c:	movw	r0, #250	; 0xfa
   12f20:	movt	r0, #2
   12f24:	str	r0, [fp, #-52]	; 0xffffffcc
   12f28:	movw	r0, #1
   12f2c:	str	r0, [fp, #-56]	; 0xffffffc8
   12f30:	b	12f44 <__assert_fail@plt+0x1b18>
   12f34:	movw	r0, #0
   12f38:	strb	r0, [fp, #-59]	; 0xffffffc5
   12f3c:	b	12f44 <__assert_fail@plt+0x1b18>
   12f40:	bl	11408 <abort@plt>
   12f44:	movw	r0, #0
   12f48:	str	r0, [fp, #-40]	; 0xffffffd8
   12f4c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12f50:	cmn	r0, #1
   12f54:	bne	12f80 <__assert_fail@plt+0x1b54>
   12f58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12f5c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12f60:	add	r0, r0, r1
   12f64:	ldrb	r0, [r0]
   12f68:	cmp	r0, #0
   12f6c:	movw	r0, #0
   12f70:	moveq	r0, #1
   12f74:	and	r0, r0, #1
   12f78:	str	r0, [sp, #56]	; 0x38
   12f7c:	b	12f9c <__assert_fail@plt+0x1b70>
   12f80:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12f84:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12f88:	cmp	r0, r1
   12f8c:	movw	r0, #0
   12f90:	moveq	r0, #1
   12f94:	and	r0, r0, #1
   12f98:	str	r0, [sp, #56]	; 0x38
   12f9c:	ldr	r0, [sp, #56]	; 0x38
   12fa0:	cmp	r0, #0
   12fa4:	movw	r0, #0
   12fa8:	movne	r0, #1
   12fac:	mvn	r1, #0
   12fb0:	eor	r0, r0, r1
   12fb4:	tst	r0, #1
   12fb8:	beq	141a8 <__assert_fail@plt+0x2d7c>
   12fbc:	movw	r0, #0
   12fc0:	strb	r0, [fp, #-65]	; 0xffffffbf
   12fc4:	strb	r0, [fp, #-66]	; 0xffffffbe
   12fc8:	strb	r0, [fp, #-67]	; 0xffffffbd
   12fcc:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12fd0:	tst	r0, #1
   12fd4:	beq	13080 <__assert_fail@plt+0x1c54>
   12fd8:	ldr	r0, [fp, #8]
   12fdc:	cmp	r0, #2
   12fe0:	beq	13080 <__assert_fail@plt+0x1c54>
   12fe4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12fe8:	cmp	r0, #0
   12fec:	beq	13080 <__assert_fail@plt+0x1c54>
   12ff0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12ff4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   12ff8:	add	r0, r0, r1
   12ffc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13000:	cmn	r1, #1
   13004:	str	r0, [sp, #52]	; 0x34
   13008:	bne	13030 <__assert_fail@plt+0x1c04>
   1300c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13010:	movw	r1, #1
   13014:	cmp	r1, r0
   13018:	bcs	13030 <__assert_fail@plt+0x1c04>
   1301c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13020:	bl	112e8 <strlen@plt>
   13024:	str	r0, [fp, #-36]	; 0xffffffdc
   13028:	str	r0, [sp, #48]	; 0x30
   1302c:	b	13038 <__assert_fail@plt+0x1c0c>
   13030:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13034:	str	r0, [sp, #48]	; 0x30
   13038:	ldr	r0, [sp, #48]	; 0x30
   1303c:	ldr	r1, [sp, #52]	; 0x34
   13040:	cmp	r1, r0
   13044:	bhi	13080 <__assert_fail@plt+0x1c54>
   13048:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1304c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13050:	add	r0, r0, r1
   13054:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13058:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1305c:	bl	111c8 <memcmp@plt>
   13060:	cmp	r0, #0
   13064:	bne	13080 <__assert_fail@plt+0x1c54>
   13068:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1306c:	tst	r0, #1
   13070:	beq	13078 <__assert_fail@plt+0x1c4c>
   13074:	b	14328 <__assert_fail@plt+0x2efc>
   13078:	movw	r0, #1
   1307c:	strb	r0, [fp, #-65]	; 0xffffffbf
   13080:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13084:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13088:	ldrb	r0, [r0, r1]
   1308c:	strb	r0, [fp, #-63]	; 0xffffffc1
   13090:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13094:	mov	r1, r0
   13098:	cmp	r0, #126	; 0x7e
   1309c:	str	r1, [sp, #44]	; 0x2c
   130a0:	bhi	13910 <__assert_fail@plt+0x24e4>
   130a4:	add	r0, pc, #8
   130a8:	ldr	r1, [sp, #44]	; 0x2c
   130ac:	ldr	r0, [r0, r1, lsl #2]
   130b0:	mov	pc, r0
   130b4:			; <UNDEFINED> instruction: 0x000132b0
   130b8:	andeq	r3, r1, r0, lsl r9
   130bc:	andeq	r3, r1, r0, lsl r9
   130c0:	andeq	r3, r1, r0, lsl r9
   130c4:	andeq	r3, r1, r0, lsl r9
   130c8:	andeq	r3, r1, r0, lsl r9
   130cc:	andeq	r3, r1, r0, lsl r9
   130d0:			; <UNDEFINED> instruction: 0x000136b8
   130d4:	andeq	r3, r1, r4, asr #13
   130d8:	strdeq	r3, [r1], -r4
   130dc:	ldrdeq	r3, [r1], -ip
   130e0:	andeq	r3, r1, r0, lsl #14
   130e4:	ldrdeq	r3, [r1], -r0
   130e8:	andeq	r3, r1, r8, ror #13
   130ec:	andeq	r3, r1, r0, lsl r9
   130f0:	andeq	r3, r1, r0, lsl r9
   130f4:	andeq	r3, r1, r0, lsl r9
   130f8:	andeq	r3, r1, r0, lsl r9
   130fc:	andeq	r3, r1, r0, lsl r9
   13100:	andeq	r3, r1, r0, lsl r9
   13104:	andeq	r3, r1, r0, lsl r9
   13108:	andeq	r3, r1, r0, lsl r9
   1310c:	andeq	r3, r1, r0, lsl r9
   13110:	andeq	r3, r1, r0, lsl r9
   13114:	andeq	r3, r1, r0, lsl r9
   13118:	andeq	r3, r1, r0, lsl r9
   1311c:	andeq	r3, r1, r0, lsl r9
   13120:	andeq	r3, r1, r0, lsl r9
   13124:	andeq	r3, r1, r0, lsl r9
   13128:	andeq	r3, r1, r0, lsl r9
   1312c:	andeq	r3, r1, r0, lsl r9
   13130:	andeq	r3, r1, r0, lsl r9
   13134:	andeq	r3, r1, r4, ror #15
   13138:	andeq	r3, r1, ip, ror #15
   1313c:	andeq	r3, r1, ip, ror #15
   13140:	ldrdeq	r3, [r1], -r0
   13144:	andeq	r3, r1, ip, ror #15
   13148:	andeq	r3, r1, r4, lsl #18
   1314c:	andeq	r3, r1, ip, ror #15
   13150:	andeq	r3, r1, ip, lsl #16
   13154:	andeq	r3, r1, ip, ror #15
   13158:	andeq	r3, r1, ip, ror #15
   1315c:	andeq	r3, r1, ip, ror #15
   13160:	andeq	r3, r1, r4, lsl #18
   13164:	andeq	r3, r1, r4, lsl #18
   13168:	andeq	r3, r1, r4, lsl #18
   1316c:	andeq	r3, r1, r4, lsl #18
   13170:	andeq	r3, r1, r4, lsl #18
   13174:	andeq	r3, r1, r4, lsl #18
   13178:	andeq	r3, r1, r4, lsl #18
   1317c:	andeq	r3, r1, r4, lsl #18
   13180:	andeq	r3, r1, r4, lsl #18
   13184:	andeq	r3, r1, r4, lsl #18
   13188:	andeq	r3, r1, r4, lsl #18
   1318c:	andeq	r3, r1, r4, lsl #18
   13190:	andeq	r3, r1, r4, lsl #18
   13194:	andeq	r3, r1, r4, lsl #18
   13198:	andeq	r3, r1, r4, lsl #18
   1319c:	andeq	r3, r1, r4, lsl #18
   131a0:	andeq	r3, r1, ip, ror #15
   131a4:	andeq	r3, r1, ip, ror #15
   131a8:	andeq	r3, r1, ip, ror #15
   131ac:	andeq	r3, r1, ip, ror #15
   131b0:			; <UNDEFINED> instruction: 0x000134bc
   131b4:	andeq	r3, r1, r0, lsl r9
   131b8:	andeq	r3, r1, r4, lsl #18
   131bc:	andeq	r3, r1, r4, lsl #18
   131c0:	andeq	r3, r1, r4, lsl #18
   131c4:	andeq	r3, r1, r4, lsl #18
   131c8:	andeq	r3, r1, r4, lsl #18
   131cc:	andeq	r3, r1, r4, lsl #18
   131d0:	andeq	r3, r1, r4, lsl #18
   131d4:	andeq	r3, r1, r4, lsl #18
   131d8:	andeq	r3, r1, r4, lsl #18
   131dc:	andeq	r3, r1, r4, lsl #18
   131e0:	andeq	r3, r1, r4, lsl #18
   131e4:	andeq	r3, r1, r4, lsl #18
   131e8:	andeq	r3, r1, r4, lsl #18
   131ec:	andeq	r3, r1, r4, lsl #18
   131f0:	andeq	r3, r1, r4, lsl #18
   131f4:	andeq	r3, r1, r4, lsl #18
   131f8:	andeq	r3, r1, r4, lsl #18
   131fc:	andeq	r3, r1, r4, lsl #18
   13200:	andeq	r3, r1, r4, lsl #18
   13204:	andeq	r3, r1, r4, lsl #18
   13208:	andeq	r3, r1, r4, lsl #18
   1320c:	andeq	r3, r1, r4, lsl #18
   13210:	andeq	r3, r1, r4, lsl #18
   13214:	andeq	r3, r1, r4, lsl #18
   13218:	andeq	r3, r1, r4, lsl #18
   1321c:	andeq	r3, r1, r4, lsl #18
   13220:	andeq	r3, r1, ip, ror #15
   13224:	andeq	r3, r1, ip, lsl #14
   13228:	andeq	r3, r1, r4, lsl #18
   1322c:	andeq	r3, r1, ip, ror #15
   13230:	andeq	r3, r1, r4, lsl #18
   13234:	andeq	r3, r1, ip, ror #15
   13238:	andeq	r3, r1, r4, lsl #18
   1323c:	andeq	r3, r1, r4, lsl #18
   13240:	andeq	r3, r1, r4, lsl #18
   13244:	andeq	r3, r1, r4, lsl #18
   13248:	andeq	r3, r1, r4, lsl #18
   1324c:	andeq	r3, r1, r4, lsl #18
   13250:	andeq	r3, r1, r4, lsl #18
   13254:	andeq	r3, r1, r4, lsl #18
   13258:	andeq	r3, r1, r4, lsl #18
   1325c:	andeq	r3, r1, r4, lsl #18
   13260:	andeq	r3, r1, r4, lsl #18
   13264:	andeq	r3, r1, r4, lsl #18
   13268:	andeq	r3, r1, r4, lsl #18
   1326c:	andeq	r3, r1, r4, lsl #18
   13270:	andeq	r3, r1, r4, lsl #18
   13274:	andeq	r3, r1, r4, lsl #18
   13278:	andeq	r3, r1, r4, lsl #18
   1327c:	andeq	r3, r1, r4, lsl #18
   13280:	andeq	r3, r1, r4, lsl #18
   13284:	andeq	r3, r1, r4, lsl #18
   13288:	andeq	r3, r1, r4, lsl #18
   1328c:	andeq	r3, r1, r4, lsl #18
   13290:	andeq	r3, r1, r4, lsl #18
   13294:	andeq	r3, r1, r4, lsl #18
   13298:	andeq	r3, r1, r4, lsl #18
   1329c:	andeq	r3, r1, r4, lsl #18
   132a0:	muleq	r1, ip, r7
   132a4:	andeq	r3, r1, ip, ror #15
   132a8:	muleq	r1, ip, r7
   132ac:	ldrdeq	r3, [r1], -r0
   132b0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   132b4:	tst	r0, #1
   132b8:	beq	134a0 <__assert_fail@plt+0x2074>
   132bc:	b	132c0 <__assert_fail@plt+0x1e94>
   132c0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   132c4:	tst	r0, #1
   132c8:	beq	132d0 <__assert_fail@plt+0x1ea4>
   132cc:	b	14328 <__assert_fail@plt+0x2efc>
   132d0:	movw	r0, #1
   132d4:	strb	r0, [fp, #-66]	; 0xffffffbe
   132d8:	ldr	r0, [fp, #8]
   132dc:	cmp	r0, #2
   132e0:	bne	13394 <__assert_fail@plt+0x1f68>
   132e4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   132e8:	tst	r0, #1
   132ec:	bne	13394 <__assert_fail@plt+0x1f68>
   132f0:	b	132f4 <__assert_fail@plt+0x1ec8>
   132f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   132f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   132fc:	cmp	r0, r1
   13300:	bcs	13318 <__assert_fail@plt+0x1eec>
   13304:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13308:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1330c:	add	r0, r0, r1
   13310:	movw	r1, #39	; 0x27
   13314:	strb	r1, [r0]
   13318:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1331c:	add	r0, r0, #1
   13320:	str	r0, [fp, #-44]	; 0xffffffd4
   13324:	b	13328 <__assert_fail@plt+0x1efc>
   13328:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1332c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13330:	cmp	r0, r1
   13334:	bcs	1334c <__assert_fail@plt+0x1f20>
   13338:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1333c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13340:	add	r0, r0, r1
   13344:	movw	r1, #36	; 0x24
   13348:	strb	r1, [r0]
   1334c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13350:	add	r0, r0, #1
   13354:	str	r0, [fp, #-44]	; 0xffffffd4
   13358:	b	1335c <__assert_fail@plt+0x1f30>
   1335c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13360:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13364:	cmp	r0, r1
   13368:	bcs	13380 <__assert_fail@plt+0x1f54>
   1336c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13370:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13374:	add	r0, r0, r1
   13378:	movw	r1, #39	; 0x27
   1337c:	strb	r1, [r0]
   13380:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13384:	add	r0, r0, #1
   13388:	str	r0, [fp, #-44]	; 0xffffffd4
   1338c:	movw	r0, #1
   13390:	strb	r0, [fp, #-60]	; 0xffffffc4
   13394:	b	13398 <__assert_fail@plt+0x1f6c>
   13398:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1339c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   133a0:	cmp	r0, r1
   133a4:	bcs	133bc <__assert_fail@plt+0x1f90>
   133a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   133ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   133b0:	add	r0, r0, r1
   133b4:	movw	r1, #92	; 0x5c
   133b8:	strb	r1, [r0]
   133bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   133c0:	add	r0, r0, #1
   133c4:	str	r0, [fp, #-44]	; 0xffffffd4
   133c8:	b	133cc <__assert_fail@plt+0x1fa0>
   133cc:	ldr	r0, [fp, #8]
   133d0:	cmp	r0, #2
   133d4:	beq	13494 <__assert_fail@plt+0x2068>
   133d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   133dc:	add	r0, r0, #1
   133e0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   133e4:	cmp	r0, r1
   133e8:	bcs	13494 <__assert_fail@plt+0x2068>
   133ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   133f0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   133f4:	add	r1, r1, #1
   133f8:	add	r0, r0, r1
   133fc:	ldrb	r0, [r0]
   13400:	movw	r1, #48	; 0x30
   13404:	cmp	r1, r0
   13408:	bgt	13494 <__assert_fail@plt+0x2068>
   1340c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13410:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13414:	add	r1, r1, #1
   13418:	add	r0, r0, r1
   1341c:	ldrb	r0, [r0]
   13420:	cmp	r0, #57	; 0x39
   13424:	bgt	13494 <__assert_fail@plt+0x2068>
   13428:	b	1342c <__assert_fail@plt+0x2000>
   1342c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13430:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13434:	cmp	r0, r1
   13438:	bcs	13450 <__assert_fail@plt+0x2024>
   1343c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13440:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13444:	add	r0, r0, r1
   13448:	movw	r1, #48	; 0x30
   1344c:	strb	r1, [r0]
   13450:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13454:	add	r0, r0, #1
   13458:	str	r0, [fp, #-44]	; 0xffffffd4
   1345c:	b	13460 <__assert_fail@plt+0x2034>
   13460:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13464:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13468:	cmp	r0, r1
   1346c:	bcs	13484 <__assert_fail@plt+0x2058>
   13470:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13474:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13478:	add	r0, r0, r1
   1347c:	movw	r1, #48	; 0x30
   13480:	strb	r1, [r0]
   13484:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13488:	add	r0, r0, #1
   1348c:	str	r0, [fp, #-44]	; 0xffffffd4
   13490:	b	13494 <__assert_fail@plt+0x2068>
   13494:	movw	r0, #48	; 0x30
   13498:	strb	r0, [fp, #-63]	; 0xffffffc1
   1349c:	b	134b8 <__assert_fail@plt+0x208c>
   134a0:	ldr	r0, [fp, #12]
   134a4:	and	r0, r0, #1
   134a8:	cmp	r0, #0
   134ac:	beq	134b4 <__assert_fail@plt+0x2088>
   134b0:	b	14198 <__assert_fail@plt+0x2d6c>
   134b4:	b	134b8 <__assert_fail@plt+0x208c>
   134b8:	b	13f34 <__assert_fail@plt+0x2b08>
   134bc:	ldr	r0, [fp, #8]
   134c0:	cmp	r0, #2
   134c4:	str	r0, [sp, #40]	; 0x28
   134c8:	beq	134e0 <__assert_fail@plt+0x20b4>
   134cc:	b	134d0 <__assert_fail@plt+0x20a4>
   134d0:	ldr	r0, [sp, #40]	; 0x28
   134d4:	cmp	r0, #5
   134d8:	beq	134f4 <__assert_fail@plt+0x20c8>
   134dc:	b	136b0 <__assert_fail@plt+0x2284>
   134e0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   134e4:	tst	r0, #1
   134e8:	beq	134f0 <__assert_fail@plt+0x20c4>
   134ec:	b	14328 <__assert_fail@plt+0x2efc>
   134f0:	b	136b4 <__assert_fail@plt+0x2288>
   134f4:	ldr	r0, [fp, #12]
   134f8:	and	r0, r0, #4
   134fc:	cmp	r0, #0
   13500:	beq	136ac <__assert_fail@plt+0x2280>
   13504:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13508:	add	r0, r0, #2
   1350c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13510:	cmp	r0, r1
   13514:	bcs	136ac <__assert_fail@plt+0x2280>
   13518:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1351c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13520:	add	r1, r1, #1
   13524:	add	r0, r0, r1
   13528:	ldrb	r0, [r0]
   1352c:	cmp	r0, #63	; 0x3f
   13530:	bne	136ac <__assert_fail@plt+0x2280>
   13534:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13538:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1353c:	add	r0, r0, r1
   13540:	ldrb	r0, [r0, #2]
   13544:	mov	r1, r0
   13548:	cmp	r0, #33	; 0x21
   1354c:	str	r1, [sp, #36]	; 0x24
   13550:	beq	135a0 <__assert_fail@plt+0x2174>
   13554:	b	13558 <__assert_fail@plt+0x212c>
   13558:	ldr	r0, [sp, #36]	; 0x24
   1355c:	sub	r1, r0, #39	; 0x27
   13560:	cmp	r1, #3
   13564:	bcc	135a0 <__assert_fail@plt+0x2174>
   13568:	b	1356c <__assert_fail@plt+0x2140>
   1356c:	ldr	r0, [sp, #36]	; 0x24
   13570:	cmp	r0, #45	; 0x2d
   13574:	beq	135a0 <__assert_fail@plt+0x2174>
   13578:	b	1357c <__assert_fail@plt+0x2150>
   1357c:	ldr	r0, [sp, #36]	; 0x24
   13580:	cmp	r0, #47	; 0x2f
   13584:	beq	135a0 <__assert_fail@plt+0x2174>
   13588:	b	1358c <__assert_fail@plt+0x2160>
   1358c:	ldr	r0, [sp, #36]	; 0x24
   13590:	sub	r1, r0, #60	; 0x3c
   13594:	cmp	r1, #2
   13598:	bhi	136a4 <__assert_fail@plt+0x2278>
   1359c:	b	135a0 <__assert_fail@plt+0x2174>
   135a0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   135a4:	tst	r0, #1
   135a8:	beq	135b0 <__assert_fail@plt+0x2184>
   135ac:	b	14328 <__assert_fail@plt+0x2efc>
   135b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   135b4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   135b8:	add	r1, r1, #2
   135bc:	add	r0, r0, r1
   135c0:	ldrb	r0, [r0]
   135c4:	strb	r0, [fp, #-63]	; 0xffffffc1
   135c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   135cc:	add	r0, r0, #2
   135d0:	str	r0, [fp, #-40]	; 0xffffffd8
   135d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   135d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   135dc:	cmp	r0, r1
   135e0:	bcs	135f8 <__assert_fail@plt+0x21cc>
   135e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   135e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   135ec:	add	r0, r0, r1
   135f0:	movw	r1, #63	; 0x3f
   135f4:	strb	r1, [r0]
   135f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   135fc:	add	r0, r0, #1
   13600:	str	r0, [fp, #-44]	; 0xffffffd4
   13604:	b	13608 <__assert_fail@plt+0x21dc>
   13608:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1360c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13610:	cmp	r0, r1
   13614:	bcs	1362c <__assert_fail@plt+0x2200>
   13618:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1361c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13620:	add	r0, r0, r1
   13624:	movw	r1, #34	; 0x22
   13628:	strb	r1, [r0]
   1362c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13630:	add	r0, r0, #1
   13634:	str	r0, [fp, #-44]	; 0xffffffd4
   13638:	b	1363c <__assert_fail@plt+0x2210>
   1363c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13640:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13644:	cmp	r0, r1
   13648:	bcs	13660 <__assert_fail@plt+0x2234>
   1364c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13650:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13654:	add	r0, r0, r1
   13658:	movw	r1, #34	; 0x22
   1365c:	strb	r1, [r0]
   13660:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13664:	add	r0, r0, #1
   13668:	str	r0, [fp, #-44]	; 0xffffffd4
   1366c:	b	13670 <__assert_fail@plt+0x2244>
   13670:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13674:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13678:	cmp	r0, r1
   1367c:	bcs	13694 <__assert_fail@plt+0x2268>
   13680:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13684:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13688:	add	r0, r0, r1
   1368c:	movw	r1, #63	; 0x3f
   13690:	strb	r1, [r0]
   13694:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13698:	add	r0, r0, #1
   1369c:	str	r0, [fp, #-44]	; 0xffffffd4
   136a0:	b	136a8 <__assert_fail@plt+0x227c>
   136a4:	b	136a8 <__assert_fail@plt+0x227c>
   136a8:	b	136ac <__assert_fail@plt+0x2280>
   136ac:	b	136b4 <__assert_fail@plt+0x2288>
   136b0:	b	136b4 <__assert_fail@plt+0x2288>
   136b4:	b	13f34 <__assert_fail@plt+0x2b08>
   136b8:	movw	r0, #97	; 0x61
   136bc:	strb	r0, [fp, #-64]	; 0xffffffc0
   136c0:	b	13780 <__assert_fail@plt+0x2354>
   136c4:	movw	r0, #98	; 0x62
   136c8:	strb	r0, [fp, #-64]	; 0xffffffc0
   136cc:	b	13780 <__assert_fail@plt+0x2354>
   136d0:	movw	r0, #102	; 0x66
   136d4:	strb	r0, [fp, #-64]	; 0xffffffc0
   136d8:	b	13780 <__assert_fail@plt+0x2354>
   136dc:	movw	r0, #110	; 0x6e
   136e0:	strb	r0, [fp, #-64]	; 0xffffffc0
   136e4:	b	13760 <__assert_fail@plt+0x2334>
   136e8:	movw	r0, #114	; 0x72
   136ec:	strb	r0, [fp, #-64]	; 0xffffffc0
   136f0:	b	13760 <__assert_fail@plt+0x2334>
   136f4:	movw	r0, #116	; 0x74
   136f8:	strb	r0, [fp, #-64]	; 0xffffffc0
   136fc:	b	13760 <__assert_fail@plt+0x2334>
   13700:	movw	r0, #118	; 0x76
   13704:	strb	r0, [fp, #-64]	; 0xffffffc0
   13708:	b	13780 <__assert_fail@plt+0x2354>
   1370c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13710:	strb	r0, [fp, #-64]	; 0xffffffc0
   13714:	ldr	r0, [fp, #8]
   13718:	cmp	r0, #2
   1371c:	bne	13734 <__assert_fail@plt+0x2308>
   13720:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13724:	tst	r0, #1
   13728:	beq	13730 <__assert_fail@plt+0x2304>
   1372c:	b	14328 <__assert_fail@plt+0x2efc>
   13730:	b	140bc <__assert_fail@plt+0x2c90>
   13734:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13738:	tst	r0, #1
   1373c:	beq	1375c <__assert_fail@plt+0x2330>
   13740:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13744:	tst	r0, #1
   13748:	beq	1375c <__assert_fail@plt+0x2330>
   1374c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13750:	cmp	r0, #0
   13754:	beq	1375c <__assert_fail@plt+0x2330>
   13758:	b	140bc <__assert_fail@plt+0x2c90>
   1375c:	b	13760 <__assert_fail@plt+0x2334>
   13760:	ldr	r0, [fp, #8]
   13764:	cmp	r0, #2
   13768:	bne	1377c <__assert_fail@plt+0x2350>
   1376c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13770:	tst	r0, #1
   13774:	beq	1377c <__assert_fail@plt+0x2350>
   13778:	b	14328 <__assert_fail@plt+0x2efc>
   1377c:	b	13780 <__assert_fail@plt+0x2354>
   13780:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13784:	tst	r0, #1
   13788:	beq	13798 <__assert_fail@plt+0x236c>
   1378c:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   13790:	strb	r0, [fp, #-63]	; 0xffffffc1
   13794:	b	13fa8 <__assert_fail@plt+0x2b7c>
   13798:	b	13f34 <__assert_fail@plt+0x2b08>
   1379c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   137a0:	cmn	r0, #1
   137a4:	bne	137bc <__assert_fail@plt+0x2390>
   137a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   137ac:	ldrb	r0, [r0, #1]
   137b0:	cmp	r0, #0
   137b4:	beq	137cc <__assert_fail@plt+0x23a0>
   137b8:	b	137c8 <__assert_fail@plt+0x239c>
   137bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   137c0:	cmp	r0, #1
   137c4:	beq	137cc <__assert_fail@plt+0x23a0>
   137c8:	b	13f34 <__assert_fail@plt+0x2b08>
   137cc:	b	137d0 <__assert_fail@plt+0x23a4>
   137d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   137d4:	cmp	r0, #0
   137d8:	beq	137e0 <__assert_fail@plt+0x23b4>
   137dc:	b	13f34 <__assert_fail@plt+0x2b08>
   137e0:	b	137e4 <__assert_fail@plt+0x23b8>
   137e4:	movw	r0, #1
   137e8:	strb	r0, [fp, #-67]	; 0xffffffbd
   137ec:	ldr	r0, [fp, #8]
   137f0:	cmp	r0, #2
   137f4:	bne	13808 <__assert_fail@plt+0x23dc>
   137f8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   137fc:	tst	r0, #1
   13800:	beq	13808 <__assert_fail@plt+0x23dc>
   13804:	b	14328 <__assert_fail@plt+0x2efc>
   13808:	b	13f34 <__assert_fail@plt+0x2b08>
   1380c:	movw	r0, #1
   13810:	strb	r0, [fp, #-61]	; 0xffffffc3
   13814:	strb	r0, [fp, #-67]	; 0xffffffbd
   13818:	ldr	r0, [fp, #8]
   1381c:	cmp	r0, #2
   13820:	bne	13900 <__assert_fail@plt+0x24d4>
   13824:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13828:	tst	r0, #1
   1382c:	beq	13834 <__assert_fail@plt+0x2408>
   13830:	b	14328 <__assert_fail@plt+0x2efc>
   13834:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13838:	cmp	r0, #0
   1383c:	beq	1385c <__assert_fail@plt+0x2430>
   13840:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13844:	cmp	r0, #0
   13848:	bne	1385c <__assert_fail@plt+0x2430>
   1384c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13850:	str	r0, [fp, #-48]	; 0xffffffd0
   13854:	movw	r0, #0
   13858:	str	r0, [fp, #-28]	; 0xffffffe4
   1385c:	b	13860 <__assert_fail@plt+0x2434>
   13860:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13864:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13868:	cmp	r0, r1
   1386c:	bcs	13884 <__assert_fail@plt+0x2458>
   13870:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13874:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13878:	add	r0, r0, r1
   1387c:	movw	r1, #39	; 0x27
   13880:	strb	r1, [r0]
   13884:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13888:	add	r0, r0, #1
   1388c:	str	r0, [fp, #-44]	; 0xffffffd4
   13890:	b	13894 <__assert_fail@plt+0x2468>
   13894:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13898:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1389c:	cmp	r0, r1
   138a0:	bcs	138b8 <__assert_fail@plt+0x248c>
   138a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   138a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   138ac:	add	r0, r0, r1
   138b0:	movw	r1, #92	; 0x5c
   138b4:	strb	r1, [r0]
   138b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   138bc:	add	r0, r0, #1
   138c0:	str	r0, [fp, #-44]	; 0xffffffd4
   138c4:	b	138c8 <__assert_fail@plt+0x249c>
   138c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   138cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   138d0:	cmp	r0, r1
   138d4:	bcs	138ec <__assert_fail@plt+0x24c0>
   138d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   138dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   138e0:	add	r0, r0, r1
   138e4:	movw	r1, #39	; 0x27
   138e8:	strb	r1, [r0]
   138ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   138f0:	add	r0, r0, #1
   138f4:	str	r0, [fp, #-44]	; 0xffffffd4
   138f8:	movw	r0, #0
   138fc:	strb	r0, [fp, #-60]	; 0xffffffc4
   13900:	b	13f34 <__assert_fail@plt+0x2b08>
   13904:	movw	r0, #1
   13908:	strb	r0, [fp, #-67]	; 0xffffffbd
   1390c:	b	13f34 <__assert_fail@plt+0x2b08>
   13910:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   13914:	tst	r0, #1
   13918:	beq	1395c <__assert_fail@plt+0x2530>
   1391c:	mov	r0, #1
   13920:	str	r0, [fp, #-72]	; 0xffffffb8
   13924:	bl	112b8 <__ctype_b_loc@plt>
   13928:	ldr	r0, [r0]
   1392c:	ldrb	lr, [fp, #-63]	; 0xffffffc1
   13930:	mov	r1, lr
   13934:	add	r0, r0, lr, lsl #1
   13938:	ldrh	r0, [r0]
   1393c:	and	r0, r0, #16384	; 0x4000
   13940:	cmp	r0, #0
   13944:	movw	r0, #0
   13948:	movne	r0, #1
   1394c:	and	r0, r0, #1
   13950:	strb	r0, [fp, #-73]	; 0xffffffb7
   13954:	str	r1, [sp, #32]
   13958:	b	13be8 <__assert_fail@plt+0x27bc>
   1395c:	sub	r0, fp, #84	; 0x54
   13960:	movw	r1, #0
   13964:	and	r1, r1, #255	; 0xff
   13968:	movw	r2, #8
   1396c:	bl	11330 <memset@plt>
   13970:	movw	r0, #0
   13974:	str	r0, [fp, #-72]	; 0xffffffb8
   13978:	movw	r0, #1
   1397c:	strb	r0, [fp, #-73]	; 0xffffffb7
   13980:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13984:	cmn	r0, #1
   13988:	bne	13998 <__assert_fail@plt+0x256c>
   1398c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13990:	bl	112e8 <strlen@plt>
   13994:	str	r0, [fp, #-36]	; 0xffffffdc
   13998:	b	1399c <__assert_fail@plt+0x2570>
   1399c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   139a0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   139a4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   139a8:	add	r1, r1, r2
   139ac:	add	r1, r0, r1
   139b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   139b4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   139b8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   139bc:	add	r2, r2, r3
   139c0:	sub	r2, r0, r2
   139c4:	sub	r0, fp, #88	; 0x58
   139c8:	sub	r3, fp, #84	; 0x54
   139cc:	bl	1d528 <__assert_fail@plt+0xc0fc>
   139d0:	str	r0, [sp, #92]	; 0x5c
   139d4:	ldr	r0, [sp, #92]	; 0x5c
   139d8:	cmp	r0, #0
   139dc:	bne	139e4 <__assert_fail@plt+0x25b8>
   139e0:	b	13be4 <__assert_fail@plt+0x27b8>
   139e4:	ldr	r0, [sp, #92]	; 0x5c
   139e8:	cmn	r0, #1
   139ec:	bne	139fc <__assert_fail@plt+0x25d0>
   139f0:	movw	r0, #0
   139f4:	strb	r0, [fp, #-73]	; 0xffffffb7
   139f8:	b	13be4 <__assert_fail@plt+0x27b8>
   139fc:	ldr	r0, [sp, #92]	; 0x5c
   13a00:	cmn	r0, #2
   13a04:	bne	13a78 <__assert_fail@plt+0x264c>
   13a08:	movw	r0, #0
   13a0c:	strb	r0, [fp, #-73]	; 0xffffffb7
   13a10:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13a14:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13a18:	add	r0, r0, r1
   13a1c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13a20:	cmp	r0, r1
   13a24:	movw	r0, #0
   13a28:	str	r0, [sp, #28]
   13a2c:	bcs	13a58 <__assert_fail@plt+0x262c>
   13a30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13a34:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13a38:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13a3c:	add	r1, r1, r2
   13a40:	add	r0, r0, r1
   13a44:	ldrb	r0, [r0]
   13a48:	cmp	r0, #0
   13a4c:	movw	r0, #0
   13a50:	movne	r0, #1
   13a54:	str	r0, [sp, #28]
   13a58:	ldr	r0, [sp, #28]
   13a5c:	tst	r0, #1
   13a60:	beq	13a74 <__assert_fail@plt+0x2648>
   13a64:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13a68:	add	r0, r0, #1
   13a6c:	str	r0, [fp, #-72]	; 0xffffffb8
   13a70:	b	13a10 <__assert_fail@plt+0x25e4>
   13a74:	b	13be4 <__assert_fail@plt+0x27b8>
   13a78:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13a7c:	tst	r0, #1
   13a80:	beq	13b8c <__assert_fail@plt+0x2760>
   13a84:	ldr	r0, [fp, #8]
   13a88:	cmp	r0, #2
   13a8c:	bne	13b8c <__assert_fail@plt+0x2760>
   13a90:	movw	r0, #1
   13a94:	str	r0, [sp, #88]	; 0x58
   13a98:	ldr	r0, [sp, #88]	; 0x58
   13a9c:	ldr	r1, [sp, #92]	; 0x5c
   13aa0:	cmp	r0, r1
   13aa4:	bcs	13b88 <__assert_fail@plt+0x275c>
   13aa8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13aac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13ab0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13ab4:	add	r1, r1, r2
   13ab8:	ldr	r2, [sp, #88]	; 0x58
   13abc:	add	r1, r1, r2
   13ac0:	ldrb	r0, [r0, r1]
   13ac4:	sub	r0, r0, #91	; 0x5b
   13ac8:	cmp	r0, #33	; 0x21
   13acc:	str	r0, [sp, #24]
   13ad0:	bhi	13b70 <__assert_fail@plt+0x2744>
   13ad4:	add	r0, pc, #8
   13ad8:	ldr	r1, [sp, #24]
   13adc:	ldr	r0, [r0, r1, lsl #2]
   13ae0:	mov	pc, r0
   13ae4:	andeq	r3, r1, ip, ror #22
   13ae8:	andeq	r3, r1, ip, ror #22
   13aec:	andeq	r3, r1, r0, ror fp
   13af0:	andeq	r3, r1, ip, ror #22
   13af4:	andeq	r3, r1, r0, ror fp
   13af8:	andeq	r3, r1, ip, ror #22
   13afc:	andeq	r3, r1, r0, ror fp
   13b00:	andeq	r3, r1, r0, ror fp
   13b04:	andeq	r3, r1, r0, ror fp
   13b08:	andeq	r3, r1, r0, ror fp
   13b0c:	andeq	r3, r1, r0, ror fp
   13b10:	andeq	r3, r1, r0, ror fp
   13b14:	andeq	r3, r1, r0, ror fp
   13b18:	andeq	r3, r1, r0, ror fp
   13b1c:	andeq	r3, r1, r0, ror fp
   13b20:	andeq	r3, r1, r0, ror fp
   13b24:	andeq	r3, r1, r0, ror fp
   13b28:	andeq	r3, r1, r0, ror fp
   13b2c:	andeq	r3, r1, r0, ror fp
   13b30:	andeq	r3, r1, r0, ror fp
   13b34:	andeq	r3, r1, r0, ror fp
   13b38:	andeq	r3, r1, r0, ror fp
   13b3c:	andeq	r3, r1, r0, ror fp
   13b40:	andeq	r3, r1, r0, ror fp
   13b44:	andeq	r3, r1, r0, ror fp
   13b48:	andeq	r3, r1, r0, ror fp
   13b4c:	andeq	r3, r1, r0, ror fp
   13b50:	andeq	r3, r1, r0, ror fp
   13b54:	andeq	r3, r1, r0, ror fp
   13b58:	andeq	r3, r1, r0, ror fp
   13b5c:	andeq	r3, r1, r0, ror fp
   13b60:	andeq	r3, r1, r0, ror fp
   13b64:	andeq	r3, r1, r0, ror fp
   13b68:	andeq	r3, r1, ip, ror #22
   13b6c:	b	14328 <__assert_fail@plt+0x2efc>
   13b70:	b	13b74 <__assert_fail@plt+0x2748>
   13b74:	b	13b78 <__assert_fail@plt+0x274c>
   13b78:	ldr	r0, [sp, #88]	; 0x58
   13b7c:	add	r0, r0, #1
   13b80:	str	r0, [sp, #88]	; 0x58
   13b84:	b	13a98 <__assert_fail@plt+0x266c>
   13b88:	b	13b8c <__assert_fail@plt+0x2760>
   13b8c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13b90:	bl	111f8 <iswprint@plt>
   13b94:	cmp	r0, #0
   13b98:	bne	13ba4 <__assert_fail@plt+0x2778>
   13b9c:	movw	r0, #0
   13ba0:	strb	r0, [fp, #-73]	; 0xffffffb7
   13ba4:	ldr	r0, [sp, #92]	; 0x5c
   13ba8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13bac:	add	r0, r1, r0
   13bb0:	str	r0, [fp, #-72]	; 0xffffffb8
   13bb4:	b	13bb8 <__assert_fail@plt+0x278c>
   13bb8:	b	13bbc <__assert_fail@plt+0x2790>
   13bbc:	b	13bc0 <__assert_fail@plt+0x2794>
   13bc0:	sub	r0, fp, #84	; 0x54
   13bc4:	bl	111bc <mbsinit@plt>
   13bc8:	cmp	r0, #0
   13bcc:	movw	r0, #0
   13bd0:	movne	r0, #1
   13bd4:	mvn	lr, #0
   13bd8:	eor	r0, r0, lr
   13bdc:	tst	r0, #1
   13be0:	bne	1399c <__assert_fail@plt+0x2570>
   13be4:	b	13be8 <__assert_fail@plt+0x27bc>
   13be8:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   13bec:	and	r0, r0, #1
   13bf0:	strb	r0, [fp, #-67]	; 0xffffffbd
   13bf4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13bf8:	movw	r1, #1
   13bfc:	cmp	r1, r0
   13c00:	bcc	13c1c <__assert_fail@plt+0x27f0>
   13c04:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13c08:	tst	r0, #1
   13c0c:	beq	13f30 <__assert_fail@plt+0x2b04>
   13c10:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   13c14:	tst	r0, #1
   13c18:	bne	13f30 <__assert_fail@plt+0x2b04>
   13c1c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13c20:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13c24:	add	r0, r0, r1
   13c28:	str	r0, [sp, #84]	; 0x54
   13c2c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13c30:	tst	r0, #1
   13c34:	beq	13de4 <__assert_fail@plt+0x29b8>
   13c38:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   13c3c:	tst	r0, #1
   13c40:	bne	13de4 <__assert_fail@plt+0x29b8>
   13c44:	b	13c48 <__assert_fail@plt+0x281c>
   13c48:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13c4c:	tst	r0, #1
   13c50:	beq	13c58 <__assert_fail@plt+0x282c>
   13c54:	b	14328 <__assert_fail@plt+0x2efc>
   13c58:	movw	r0, #1
   13c5c:	strb	r0, [fp, #-66]	; 0xffffffbe
   13c60:	ldr	r0, [fp, #8]
   13c64:	cmp	r0, #2
   13c68:	bne	13d1c <__assert_fail@plt+0x28f0>
   13c6c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   13c70:	tst	r0, #1
   13c74:	bne	13d1c <__assert_fail@plt+0x28f0>
   13c78:	b	13c7c <__assert_fail@plt+0x2850>
   13c7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13c80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13c84:	cmp	r0, r1
   13c88:	bcs	13ca0 <__assert_fail@plt+0x2874>
   13c8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c90:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13c94:	add	r0, r0, r1
   13c98:	movw	r1, #39	; 0x27
   13c9c:	strb	r1, [r0]
   13ca0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13ca4:	add	r0, r0, #1
   13ca8:	str	r0, [fp, #-44]	; 0xffffffd4
   13cac:	b	13cb0 <__assert_fail@plt+0x2884>
   13cb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13cb4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13cb8:	cmp	r0, r1
   13cbc:	bcs	13cd4 <__assert_fail@plt+0x28a8>
   13cc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13cc4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13cc8:	add	r0, r0, r1
   13ccc:	movw	r1, #36	; 0x24
   13cd0:	strb	r1, [r0]
   13cd4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13cd8:	add	r0, r0, #1
   13cdc:	str	r0, [fp, #-44]	; 0xffffffd4
   13ce0:	b	13ce4 <__assert_fail@plt+0x28b8>
   13ce4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13ce8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13cec:	cmp	r0, r1
   13cf0:	bcs	13d08 <__assert_fail@plt+0x28dc>
   13cf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13cf8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13cfc:	add	r0, r0, r1
   13d00:	movw	r1, #39	; 0x27
   13d04:	strb	r1, [r0]
   13d08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d0c:	add	r0, r0, #1
   13d10:	str	r0, [fp, #-44]	; 0xffffffd4
   13d14:	movw	r0, #1
   13d18:	strb	r0, [fp, #-60]	; 0xffffffc4
   13d1c:	b	13d20 <__assert_fail@plt+0x28f4>
   13d20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d24:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13d28:	cmp	r0, r1
   13d2c:	bcs	13d44 <__assert_fail@plt+0x2918>
   13d30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d34:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13d38:	add	r0, r0, r1
   13d3c:	movw	r1, #92	; 0x5c
   13d40:	strb	r1, [r0]
   13d44:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d48:	add	r0, r0, #1
   13d4c:	str	r0, [fp, #-44]	; 0xffffffd4
   13d50:	b	13d54 <__assert_fail@plt+0x2928>
   13d54:	b	13d58 <__assert_fail@plt+0x292c>
   13d58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13d60:	cmp	r0, r1
   13d64:	bcs	13d84 <__assert_fail@plt+0x2958>
   13d68:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13d6c:	asr	r0, r0, #6
   13d70:	add	r0, r0, #48	; 0x30
   13d74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13d78:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13d7c:	add	r1, r1, r2
   13d80:	strb	r0, [r1]
   13d84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d88:	add	r0, r0, #1
   13d8c:	str	r0, [fp, #-44]	; 0xffffffd4
   13d90:	b	13d94 <__assert_fail@plt+0x2968>
   13d94:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d98:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13d9c:	cmp	r0, r1
   13da0:	bcs	13dc4 <__assert_fail@plt+0x2998>
   13da4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13da8:	asr	r0, r0, #3
   13dac:	and	r0, r0, #7
   13db0:	add	r0, r0, #48	; 0x30
   13db4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13db8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13dbc:	add	r1, r1, r2
   13dc0:	strb	r0, [r1]
   13dc4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13dc8:	add	r0, r0, #1
   13dcc:	str	r0, [fp, #-44]	; 0xffffffd4
   13dd0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13dd4:	and	r0, r0, #7
   13dd8:	add	r0, r0, #48	; 0x30
   13ddc:	strb	r0, [fp, #-63]	; 0xffffffc1
   13de0:	b	13e30 <__assert_fail@plt+0x2a04>
   13de4:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   13de8:	tst	r0, #1
   13dec:	beq	13e2c <__assert_fail@plt+0x2a00>
   13df0:	b	13df4 <__assert_fail@plt+0x29c8>
   13df4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13df8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13dfc:	cmp	r0, r1
   13e00:	bcs	13e18 <__assert_fail@plt+0x29ec>
   13e04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13e08:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13e0c:	add	r0, r0, r1
   13e10:	movw	r1, #92	; 0x5c
   13e14:	strb	r1, [r0]
   13e18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e1c:	add	r0, r0, #1
   13e20:	str	r0, [fp, #-44]	; 0xffffffd4
   13e24:	movw	r0, #0
   13e28:	strb	r0, [fp, #-65]	; 0xffffffbf
   13e2c:	b	13e30 <__assert_fail@plt+0x2a04>
   13e30:	ldr	r0, [sp, #84]	; 0x54
   13e34:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13e38:	add	r1, r1, #1
   13e3c:	cmp	r0, r1
   13e40:	bhi	13e48 <__assert_fail@plt+0x2a1c>
   13e44:	b	13f2c <__assert_fail@plt+0x2b00>
   13e48:	b	13e4c <__assert_fail@plt+0x2a20>
   13e4c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   13e50:	tst	r0, #1
   13e54:	beq	13ed4 <__assert_fail@plt+0x2aa8>
   13e58:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   13e5c:	tst	r0, #1
   13e60:	bne	13ed4 <__assert_fail@plt+0x2aa8>
   13e64:	b	13e68 <__assert_fail@plt+0x2a3c>
   13e68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13e70:	cmp	r0, r1
   13e74:	bcs	13e8c <__assert_fail@plt+0x2a60>
   13e78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13e7c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13e80:	add	r0, r0, r1
   13e84:	movw	r1, #39	; 0x27
   13e88:	strb	r1, [r0]
   13e8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e90:	add	r0, r0, #1
   13e94:	str	r0, [fp, #-44]	; 0xffffffd4
   13e98:	b	13e9c <__assert_fail@plt+0x2a70>
   13e9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13ea0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13ea4:	cmp	r0, r1
   13ea8:	bcs	13ec0 <__assert_fail@plt+0x2a94>
   13eac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13eb0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13eb4:	add	r0, r0, r1
   13eb8:	movw	r1, #39	; 0x27
   13ebc:	strb	r1, [r0]
   13ec0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13ec4:	add	r0, r0, #1
   13ec8:	str	r0, [fp, #-44]	; 0xffffffd4
   13ecc:	movw	r0, #0
   13ed0:	strb	r0, [fp, #-60]	; 0xffffffc4
   13ed4:	b	13ed8 <__assert_fail@plt+0x2aac>
   13ed8:	b	13edc <__assert_fail@plt+0x2ab0>
   13edc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13ee0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13ee4:	cmp	r0, r1
   13ee8:	bcs	13f00 <__assert_fail@plt+0x2ad4>
   13eec:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13ef0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13ef4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13ef8:	add	r1, r1, r2
   13efc:	strb	r0, [r1]
   13f00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13f04:	add	r0, r0, #1
   13f08:	str	r0, [fp, #-44]	; 0xffffffd4
   13f0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13f10:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13f14:	add	r1, r1, #1
   13f18:	str	r1, [fp, #-40]	; 0xffffffd8
   13f1c:	add	r0, r0, r1
   13f20:	ldrb	r0, [r0]
   13f24:	strb	r0, [fp, #-63]	; 0xffffffc1
   13f28:	b	13c2c <__assert_fail@plt+0x2800>
   13f2c:	b	140bc <__assert_fail@plt+0x2c90>
   13f30:	b	13f34 <__assert_fail@plt+0x2b08>
   13f34:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13f38:	tst	r0, #1
   13f3c:	beq	13f4c <__assert_fail@plt+0x2b20>
   13f40:	ldr	r0, [fp, #8]
   13f44:	cmp	r0, #2
   13f48:	bne	13f58 <__assert_fail@plt+0x2b2c>
   13f4c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13f50:	tst	r0, #1
   13f54:	beq	13f94 <__assert_fail@plt+0x2b68>
   13f58:	ldr	r0, [fp, #16]
   13f5c:	movw	r1, #0
   13f60:	cmp	r0, r1
   13f64:	beq	13f94 <__assert_fail@plt+0x2b68>
   13f68:	ldr	r0, [fp, #16]
   13f6c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   13f70:	lsr	r1, r1, #5
   13f74:	add	r0, r0, r1, lsl #2
   13f78:	ldr	r0, [r0]
   13f7c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   13f80:	and	r1, r1, #31
   13f84:	lsr	r0, r0, r1
   13f88:	and	r0, r0, #1
   13f8c:	cmp	r0, #0
   13f90:	bne	13fa4 <__assert_fail@plt+0x2b78>
   13f94:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   13f98:	tst	r0, #1
   13f9c:	bne	13fa4 <__assert_fail@plt+0x2b78>
   13fa0:	b	140bc <__assert_fail@plt+0x2c90>
   13fa4:	b	13fa8 <__assert_fail@plt+0x2b7c>
   13fa8:	b	13fac <__assert_fail@plt+0x2b80>
   13fac:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13fb0:	tst	r0, #1
   13fb4:	beq	13fbc <__assert_fail@plt+0x2b90>
   13fb8:	b	14328 <__assert_fail@plt+0x2efc>
   13fbc:	movw	r0, #1
   13fc0:	strb	r0, [fp, #-66]	; 0xffffffbe
   13fc4:	ldr	r0, [fp, #8]
   13fc8:	cmp	r0, #2
   13fcc:	bne	14080 <__assert_fail@plt+0x2c54>
   13fd0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   13fd4:	tst	r0, #1
   13fd8:	bne	14080 <__assert_fail@plt+0x2c54>
   13fdc:	b	13fe0 <__assert_fail@plt+0x2bb4>
   13fe0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13fe4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13fe8:	cmp	r0, r1
   13fec:	bcs	14004 <__assert_fail@plt+0x2bd8>
   13ff0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13ff4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13ff8:	add	r0, r0, r1
   13ffc:	movw	r1, #39	; 0x27
   14000:	strb	r1, [r0]
   14004:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14008:	add	r0, r0, #1
   1400c:	str	r0, [fp, #-44]	; 0xffffffd4
   14010:	b	14014 <__assert_fail@plt+0x2be8>
   14014:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14018:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1401c:	cmp	r0, r1
   14020:	bcs	14038 <__assert_fail@plt+0x2c0c>
   14024:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14028:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1402c:	add	r0, r0, r1
   14030:	movw	r1, #36	; 0x24
   14034:	strb	r1, [r0]
   14038:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1403c:	add	r0, r0, #1
   14040:	str	r0, [fp, #-44]	; 0xffffffd4
   14044:	b	14048 <__assert_fail@plt+0x2c1c>
   14048:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1404c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14050:	cmp	r0, r1
   14054:	bcs	1406c <__assert_fail@plt+0x2c40>
   14058:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1405c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14060:	add	r0, r0, r1
   14064:	movw	r1, #39	; 0x27
   14068:	strb	r1, [r0]
   1406c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14070:	add	r0, r0, #1
   14074:	str	r0, [fp, #-44]	; 0xffffffd4
   14078:	movw	r0, #1
   1407c:	strb	r0, [fp, #-60]	; 0xffffffc4
   14080:	b	14084 <__assert_fail@plt+0x2c58>
   14084:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14088:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1408c:	cmp	r0, r1
   14090:	bcs	140a8 <__assert_fail@plt+0x2c7c>
   14094:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14098:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1409c:	add	r0, r0, r1
   140a0:	movw	r1, #92	; 0x5c
   140a4:	strb	r1, [r0]
   140a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   140ac:	add	r0, r0, #1
   140b0:	str	r0, [fp, #-44]	; 0xffffffd4
   140b4:	b	140b8 <__assert_fail@plt+0x2c8c>
   140b8:	b	140bc <__assert_fail@plt+0x2c90>
   140bc:	b	140c0 <__assert_fail@plt+0x2c94>
   140c0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   140c4:	tst	r0, #1
   140c8:	beq	14148 <__assert_fail@plt+0x2d1c>
   140cc:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   140d0:	tst	r0, #1
   140d4:	bne	14148 <__assert_fail@plt+0x2d1c>
   140d8:	b	140dc <__assert_fail@plt+0x2cb0>
   140dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   140e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   140e4:	cmp	r0, r1
   140e8:	bcs	14100 <__assert_fail@plt+0x2cd4>
   140ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   140f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   140f4:	add	r0, r0, r1
   140f8:	movw	r1, #39	; 0x27
   140fc:	strb	r1, [r0]
   14100:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14104:	add	r0, r0, #1
   14108:	str	r0, [fp, #-44]	; 0xffffffd4
   1410c:	b	14110 <__assert_fail@plt+0x2ce4>
   14110:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14114:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14118:	cmp	r0, r1
   1411c:	bcs	14134 <__assert_fail@plt+0x2d08>
   14120:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14124:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14128:	add	r0, r0, r1
   1412c:	movw	r1, #39	; 0x27
   14130:	strb	r1, [r0]
   14134:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14138:	add	r0, r0, #1
   1413c:	str	r0, [fp, #-44]	; 0xffffffd4
   14140:	movw	r0, #0
   14144:	strb	r0, [fp, #-60]	; 0xffffffc4
   14148:	b	1414c <__assert_fail@plt+0x2d20>
   1414c:	b	14150 <__assert_fail@plt+0x2d24>
   14150:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14154:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14158:	cmp	r0, r1
   1415c:	bcs	14174 <__assert_fail@plt+0x2d48>
   14160:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14164:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14168:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1416c:	add	r1, r1, r2
   14170:	strb	r0, [r1]
   14174:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14178:	add	r0, r0, #1
   1417c:	str	r0, [fp, #-44]	; 0xffffffd4
   14180:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   14184:	tst	r0, #1
   14188:	bne	14194 <__assert_fail@plt+0x2d68>
   1418c:	movw	r0, #0
   14190:	strb	r0, [fp, #-62]	; 0xffffffc2
   14194:	b	14198 <__assert_fail@plt+0x2d6c>
   14198:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1419c:	add	r0, r0, #1
   141a0:	str	r0, [fp, #-40]	; 0xffffffd8
   141a4:	b	12f4c <__assert_fail@plt+0x1b20>
   141a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   141ac:	cmp	r0, #0
   141b0:	bne	141d0 <__assert_fail@plt+0x2da4>
   141b4:	ldr	r0, [fp, #8]
   141b8:	cmp	r0, #2
   141bc:	bne	141d0 <__assert_fail@plt+0x2da4>
   141c0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   141c4:	tst	r0, #1
   141c8:	beq	141d0 <__assert_fail@plt+0x2da4>
   141cc:	b	14328 <__assert_fail@plt+0x2efc>
   141d0:	ldr	r0, [fp, #8]
   141d4:	cmp	r0, #2
   141d8:	bne	14278 <__assert_fail@plt+0x2e4c>
   141dc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   141e0:	tst	r0, #1
   141e4:	bne	14278 <__assert_fail@plt+0x2e4c>
   141e8:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   141ec:	tst	r0, #1
   141f0:	beq	14278 <__assert_fail@plt+0x2e4c>
   141f4:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   141f8:	tst	r0, #1
   141fc:	beq	14244 <__assert_fail@plt+0x2e18>
   14200:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14204:	ldr	r1, [fp, #-48]	; 0xffffffd0
   14208:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1420c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14210:	ldr	ip, [fp, #12]
   14214:	ldr	lr, [fp, #16]
   14218:	ldr	r4, [fp, #20]
   1421c:	ldr	r5, [fp, #24]
   14220:	movw	r6, #5
   14224:	str	r6, [sp]
   14228:	str	ip, [sp, #4]
   1422c:	str	lr, [sp, #8]
   14230:	str	r4, [sp, #12]
   14234:	str	r5, [sp, #16]
   14238:	bl	12c64 <__assert_fail@plt+0x1838>
   1423c:	str	r0, [fp, #-20]	; 0xffffffec
   14240:	b	14390 <__assert_fail@plt+0x2f64>
   14244:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14248:	cmp	r0, #0
   1424c:	bne	14270 <__assert_fail@plt+0x2e44>
   14250:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14254:	cmp	r0, #0
   14258:	beq	14270 <__assert_fail@plt+0x2e44>
   1425c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14260:	str	r0, [fp, #-28]	; 0xffffffe4
   14264:	movw	r0, #0
   14268:	str	r0, [fp, #-44]	; 0xffffffd4
   1426c:	b	12d0c <__assert_fail@plt+0x18e0>
   14270:	b	14274 <__assert_fail@plt+0x2e48>
   14274:	b	14278 <__assert_fail@plt+0x2e4c>
   14278:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1427c:	movw	r1, #0
   14280:	cmp	r0, r1
   14284:	beq	142f8 <__assert_fail@plt+0x2ecc>
   14288:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1428c:	tst	r0, #1
   14290:	bne	142f8 <__assert_fail@plt+0x2ecc>
   14294:	b	14298 <__assert_fail@plt+0x2e6c>
   14298:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1429c:	ldrsb	r0, [r0]
   142a0:	cmp	r0, #0
   142a4:	beq	142f4 <__assert_fail@plt+0x2ec8>
   142a8:	b	142ac <__assert_fail@plt+0x2e80>
   142ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   142b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   142b4:	cmp	r0, r1
   142b8:	bcs	142d4 <__assert_fail@plt+0x2ea8>
   142bc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   142c0:	ldrb	r0, [r0]
   142c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   142c8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   142cc:	add	r1, r1, r2
   142d0:	strb	r0, [r1]
   142d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   142d8:	add	r0, r0, #1
   142dc:	str	r0, [fp, #-44]	; 0xffffffd4
   142e0:	b	142e4 <__assert_fail@plt+0x2eb8>
   142e4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   142e8:	add	r0, r0, #1
   142ec:	str	r0, [fp, #-52]	; 0xffffffcc
   142f0:	b	14298 <__assert_fail@plt+0x2e6c>
   142f4:	b	142f8 <__assert_fail@plt+0x2ecc>
   142f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   142fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14300:	cmp	r0, r1
   14304:	bcs	1431c <__assert_fail@plt+0x2ef0>
   14308:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1430c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14310:	add	r0, r0, r1
   14314:	movw	r1, #0
   14318:	strb	r1, [r0]
   1431c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14320:	str	r0, [fp, #-20]	; 0xffffffec
   14324:	b	14390 <__assert_fail@plt+0x2f64>
   14328:	ldr	r0, [fp, #8]
   1432c:	cmp	r0, #2
   14330:	bne	14348 <__assert_fail@plt+0x2f1c>
   14334:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14338:	tst	r0, #1
   1433c:	beq	14348 <__assert_fail@plt+0x2f1c>
   14340:	movw	r0, #4
   14344:	str	r0, [fp, #8]
   14348:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1434c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14350:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14354:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14358:	ldr	ip, [fp, #8]
   1435c:	ldr	lr, [fp, #12]
   14360:	mvn	r4, #2
   14364:	and	lr, lr, r4
   14368:	ldr	r4, [fp, #20]
   1436c:	ldr	r5, [fp, #24]
   14370:	str	ip, [sp]
   14374:	str	lr, [sp, #4]
   14378:	movw	ip, #0
   1437c:	str	ip, [sp, #8]
   14380:	str	r4, [sp, #12]
   14384:	str	r5, [sp, #16]
   14388:	bl	12c64 <__assert_fail@plt+0x1838>
   1438c:	str	r0, [fp, #-20]	; 0xffffffec
   14390:	ldr	r0, [fp, #-20]	; 0xffffffec
   14394:	sub	sp, fp, #16
   14398:	pop	{r4, r5, r6, sl, fp, pc}
   1439c:	push	{fp, lr}
   143a0:	mov	fp, sp
   143a4:	sub	sp, sp, #16
   143a8:	str	r0, [fp, #-4]
   143ac:	str	r1, [sp, #8]
   143b0:	str	r2, [sp, #4]
   143b4:	ldr	r0, [fp, #-4]
   143b8:	ldr	r1, [sp, #8]
   143bc:	ldr	r3, [sp, #4]
   143c0:	movw	r2, #0
   143c4:	bl	143d0 <__assert_fail@plt+0x2fa4>
   143c8:	mov	sp, fp
   143cc:	pop	{fp, pc}
   143d0:	push	{r4, r5, r6, sl, fp, lr}
   143d4:	add	fp, sp, #16
   143d8:	sub	sp, sp, #72	; 0x48
   143dc:	str	r0, [fp, #-20]	; 0xffffffec
   143e0:	str	r1, [fp, #-24]	; 0xffffffe8
   143e4:	str	r2, [fp, #-28]	; 0xffffffe4
   143e8:	str	r3, [fp, #-32]	; 0xffffffe0
   143ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   143f0:	movw	r1, #0
   143f4:	cmp	r0, r1
   143f8:	beq	14408 <__assert_fail@plt+0x2fdc>
   143fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14400:	str	r0, [sp, #32]
   14404:	b	14418 <__assert_fail@plt+0x2fec>
   14408:	movw	r0, #4516	; 0x11a4
   1440c:	movt	r0, #3
   14410:	str	r0, [sp, #32]
   14414:	b	14418 <__assert_fail@plt+0x2fec>
   14418:	ldr	r0, [sp, #32]
   1441c:	str	r0, [fp, #-36]	; 0xffffffdc
   14420:	bl	1130c <__errno_location@plt>
   14424:	ldr	r0, [r0]
   14428:	str	r0, [fp, #-40]	; 0xffffffd8
   1442c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14430:	ldr	r0, [r0, #4]
   14434:	ldr	lr, [fp, #-28]	; 0xffffffe4
   14438:	movw	r1, #0
   1443c:	cmp	lr, r1
   14440:	movw	lr, #0
   14444:	movne	lr, #1
   14448:	tst	lr, #1
   1444c:	mov	lr, r1
   14450:	moveq	lr, #1
   14454:	orr	r0, r0, lr
   14458:	str	r0, [sp, #44]	; 0x2c
   1445c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14460:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14464:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14468:	ldr	r0, [r0]
   1446c:	ldr	lr, [sp, #44]	; 0x2c
   14470:	ldr	ip, [fp, #-36]	; 0xffffffdc
   14474:	add	ip, ip, #8
   14478:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1447c:	ldr	r4, [r4, #40]	; 0x28
   14480:	ldr	r5, [fp, #-36]	; 0xffffffdc
   14484:	ldr	r5, [r5, #44]	; 0x2c
   14488:	str	r0, [sp, #28]
   1448c:	mov	r0, r1
   14490:	ldr	r6, [sp, #28]
   14494:	str	r6, [sp]
   14498:	str	lr, [sp, #4]
   1449c:	str	ip, [sp, #8]
   144a0:	str	r4, [sp, #12]
   144a4:	str	r5, [sp, #16]
   144a8:	bl	12c64 <__assert_fail@plt+0x1838>
   144ac:	add	r0, r0, #1
   144b0:	str	r0, [sp, #40]	; 0x28
   144b4:	ldr	r0, [sp, #40]	; 0x28
   144b8:	bl	15ec0 <__assert_fail@plt+0x4a94>
   144bc:	str	r0, [sp, #36]	; 0x24
   144c0:	ldr	r0, [sp, #36]	; 0x24
   144c4:	ldr	r1, [sp, #40]	; 0x28
   144c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   144cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   144d0:	ldr	ip, [fp, #-36]	; 0xffffffdc
   144d4:	ldr	ip, [ip]
   144d8:	ldr	lr, [sp, #44]	; 0x2c
   144dc:	ldr	r4, [fp, #-36]	; 0xffffffdc
   144e0:	add	r4, r4, #8
   144e4:	ldr	r5, [fp, #-36]	; 0xffffffdc
   144e8:	ldr	r5, [r5, #40]	; 0x28
   144ec:	ldr	r6, [fp, #-36]	; 0xffffffdc
   144f0:	ldr	r6, [r6, #44]	; 0x2c
   144f4:	str	ip, [sp]
   144f8:	str	lr, [sp, #4]
   144fc:	str	r4, [sp, #8]
   14500:	str	r5, [sp, #12]
   14504:	str	r6, [sp, #16]
   14508:	bl	12c64 <__assert_fail@plt+0x1838>
   1450c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14510:	str	r0, [sp, #24]
   14514:	str	r1, [sp, #20]
   14518:	bl	1130c <__errno_location@plt>
   1451c:	ldr	r1, [sp, #20]
   14520:	str	r1, [r0]
   14524:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14528:	movw	r2, #0
   1452c:	cmp	r0, r2
   14530:	beq	14544 <__assert_fail@plt+0x3118>
   14534:	ldr	r0, [sp, #40]	; 0x28
   14538:	sub	r0, r0, #1
   1453c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14540:	str	r0, [r1]
   14544:	ldr	r0, [sp, #36]	; 0x24
   14548:	sub	sp, fp, #16
   1454c:	pop	{r4, r5, r6, sl, fp, pc}
   14550:	push	{fp, lr}
   14554:	mov	fp, sp
   14558:	sub	sp, sp, #8
   1455c:	movw	r0, #4392	; 0x1128
   14560:	movt	r0, #3
   14564:	ldr	r0, [r0]
   14568:	str	r0, [sp, #4]
   1456c:	movw	r0, #1
   14570:	str	r0, [sp]
   14574:	ldr	r0, [sp]
   14578:	movw	r1, #4396	; 0x112c
   1457c:	movt	r1, #3
   14580:	ldr	r1, [r1]
   14584:	cmp	r0, r1
   14588:	bge	145b0 <__assert_fail@plt+0x3184>
   1458c:	ldr	r0, [sp, #4]
   14590:	ldr	r1, [sp]
   14594:	add	r0, r0, r1, lsl #3
   14598:	ldr	r0, [r0, #4]
   1459c:	bl	12794 <__assert_fail@plt+0x1368>
   145a0:	ldr	r0, [sp]
   145a4:	add	r0, r0, #1
   145a8:	str	r0, [sp]
   145ac:	b	14574 <__assert_fail@plt+0x3148>
   145b0:	ldr	r0, [sp, #4]
   145b4:	ldr	r0, [r0, #4]
   145b8:	movw	r1, #4564	; 0x11d4
   145bc:	movt	r1, #3
   145c0:	cmp	r0, r1
   145c4:	beq	145f0 <__assert_fail@plt+0x31c4>
   145c8:	ldr	r0, [sp, #4]
   145cc:	ldr	r0, [r0, #4]
   145d0:	bl	12794 <__assert_fail@plt+0x1368>
   145d4:	movw	r0, #256	; 0x100
   145d8:	movw	lr, #4400	; 0x1130
   145dc:	movt	lr, #3
   145e0:	str	r0, [lr]
   145e4:	movw	r0, #4564	; 0x11d4
   145e8:	movt	r0, #3
   145ec:	str	r0, [lr, #4]
   145f0:	ldr	r0, [sp, #4]
   145f4:	movw	r1, #4400	; 0x1130
   145f8:	movt	r1, #3
   145fc:	cmp	r0, r1
   14600:	beq	14620 <__assert_fail@plt+0x31f4>
   14604:	ldr	r0, [sp, #4]
   14608:	bl	12794 <__assert_fail@plt+0x1368>
   1460c:	movw	r0, #4392	; 0x1128
   14610:	movt	r0, #3
   14614:	movw	lr, #4400	; 0x1130
   14618:	movt	lr, #3
   1461c:	str	lr, [r0]
   14620:	movw	r0, #4396	; 0x112c
   14624:	movt	r0, #3
   14628:	movw	r1, #1
   1462c:	str	r1, [r0]
   14630:	mov	sp, fp
   14634:	pop	{fp, pc}
   14638:	push	{fp, lr}
   1463c:	mov	fp, sp
   14640:	sub	sp, sp, #8
   14644:	str	r0, [sp, #4]
   14648:	str	r1, [sp]
   1464c:	ldr	r0, [sp, #4]
   14650:	ldr	r1, [sp]
   14654:	mvn	r2, #0
   14658:	movw	r3, #4516	; 0x11a4
   1465c:	movt	r3, #3
   14660:	bl	1466c <__assert_fail@plt+0x3240>
   14664:	mov	sp, fp
   14668:	pop	{fp, pc}
   1466c:	push	{r4, r5, r6, sl, fp, lr}
   14670:	add	fp, sp, #16
   14674:	sub	sp, sp, #88	; 0x58
   14678:	str	r0, [fp, #-20]	; 0xffffffec
   1467c:	str	r1, [fp, #-24]	; 0xffffffe8
   14680:	str	r2, [fp, #-28]	; 0xffffffe4
   14684:	str	r3, [fp, #-32]	; 0xffffffe0
   14688:	bl	1130c <__errno_location@plt>
   1468c:	ldr	r1, [pc, #676]	; 14938 <__assert_fail@plt+0x350c>
   14690:	ldr	r0, [r0]
   14694:	str	r0, [fp, #-36]	; 0xffffffdc
   14698:	movw	r0, #4392	; 0x1128
   1469c:	movt	r0, #3
   146a0:	ldr	r0, [r0]
   146a4:	str	r0, [fp, #-40]	; 0xffffffd8
   146a8:	str	r1, [fp, #-44]	; 0xffffffd4
   146ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   146b0:	movw	r1, #0
   146b4:	cmp	r1, r0
   146b8:	bgt	146cc <__assert_fail@plt+0x32a0>
   146bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   146c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   146c4:	cmp	r0, r1
   146c8:	blt	146d0 <__assert_fail@plt+0x32a4>
   146cc:	bl	11408 <abort@plt>
   146d0:	movw	r0, #4396	; 0x112c
   146d4:	movt	r0, #3
   146d8:	ldr	r0, [r0]
   146dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   146e0:	cmp	r0, r1
   146e4:	bgt	147dc <__assert_fail@plt+0x33b0>
   146e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   146ec:	movw	r1, #4400	; 0x1130
   146f0:	movt	r1, #3
   146f4:	cmp	r0, r1
   146f8:	movw	r0, #0
   146fc:	moveq	r0, #1
   14700:	and	r0, r0, #1
   14704:	strb	r0, [fp, #-45]	; 0xffffffd3
   14708:	movw	r0, #4396	; 0x112c
   1470c:	movt	r0, #3
   14710:	ldr	r0, [r0]
   14714:	str	r0, [sp, #52]	; 0x34
   14718:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1471c:	tst	r0, #1
   14720:	beq	14730 <__assert_fail@plt+0x3304>
   14724:	movw	r0, #0
   14728:	str	r0, [sp, #32]
   1472c:	b	14738 <__assert_fail@plt+0x330c>
   14730:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14734:	str	r0, [sp, #32]
   14738:	ldr	r0, [sp, #32]
   1473c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14740:	movw	r2, #4396	; 0x112c
   14744:	movt	r2, #3
   14748:	ldr	r2, [r2]
   1474c:	sub	r1, r1, r2
   14750:	add	r2, r1, #1
   14754:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14758:	add	r1, sp, #52	; 0x34
   1475c:	movw	ip, #8
   14760:	str	ip, [sp]
   14764:	bl	160fc <__assert_fail@plt+0x4cd0>
   14768:	str	r0, [fp, #-40]	; 0xffffffd8
   1476c:	movw	r1, #4392	; 0x1128
   14770:	movt	r1, #3
   14774:	str	r0, [r1]
   14778:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1477c:	tst	r0, #1
   14780:	beq	147a0 <__assert_fail@plt+0x3374>
   14784:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14788:	movw	r1, #4400	; 0x1130
   1478c:	movt	r1, #3
   14790:	ldr	r2, [r1]
   14794:	str	r2, [r0]
   14798:	ldr	r1, [r1, #4]
   1479c:	str	r1, [r0, #4]
   147a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   147a4:	movw	r1, #4396	; 0x112c
   147a8:	movt	r1, #3
   147ac:	ldr	r1, [r1]
   147b0:	add	r0, r0, r1, lsl #3
   147b4:	ldr	r2, [sp, #52]	; 0x34
   147b8:	sub	r1, r2, r1
   147bc:	lsl	r2, r1, #3
   147c0:	movw	r1, #0
   147c4:	and	r1, r1, #255	; 0xff
   147c8:	bl	11330 <memset@plt>
   147cc:	ldr	r0, [sp, #52]	; 0x34
   147d0:	movw	r1, #4396	; 0x112c
   147d4:	movt	r1, #3
   147d8:	str	r0, [r1]
   147dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   147e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   147e4:	ldr	r0, [r0, r1, lsl #3]
   147e8:	str	r0, [sp, #48]	; 0x30
   147ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   147f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   147f4:	add	r0, r0, r1, lsl #3
   147f8:	ldr	r0, [r0, #4]
   147fc:	str	r0, [sp, #44]	; 0x2c
   14800:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14804:	ldr	r0, [r0, #4]
   14808:	orr	r0, r0, #1
   1480c:	str	r0, [sp, #40]	; 0x28
   14810:	ldr	r0, [sp, #44]	; 0x2c
   14814:	ldr	r1, [sp, #48]	; 0x30
   14818:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1481c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14820:	ldr	ip, [fp, #-32]	; 0xffffffe0
   14824:	ldr	ip, [ip]
   14828:	ldr	lr, [sp, #40]	; 0x28
   1482c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   14830:	add	r4, r4, #8
   14834:	ldr	r5, [fp, #-32]	; 0xffffffe0
   14838:	ldr	r5, [r5, #40]	; 0x28
   1483c:	ldr	r6, [fp, #-32]	; 0xffffffe0
   14840:	ldr	r6, [r6, #44]	; 0x2c
   14844:	str	ip, [sp]
   14848:	str	lr, [sp, #4]
   1484c:	str	r4, [sp, #8]
   14850:	str	r5, [sp, #12]
   14854:	str	r6, [sp, #16]
   14858:	bl	12c64 <__assert_fail@plt+0x1838>
   1485c:	str	r0, [sp, #36]	; 0x24
   14860:	ldr	r0, [sp, #48]	; 0x30
   14864:	ldr	r1, [sp, #36]	; 0x24
   14868:	cmp	r0, r1
   1486c:	bhi	14918 <__assert_fail@plt+0x34ec>
   14870:	ldr	r0, [sp, #36]	; 0x24
   14874:	add	r0, r0, #1
   14878:	str	r0, [sp, #48]	; 0x30
   1487c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14880:	ldr	r2, [fp, #-20]	; 0xffffffec
   14884:	add	r1, r1, r2, lsl #3
   14888:	str	r0, [r1]
   1488c:	ldr	r0, [sp, #44]	; 0x2c
   14890:	movw	r1, #4564	; 0x11d4
   14894:	movt	r1, #3
   14898:	cmp	r0, r1
   1489c:	beq	148a8 <__assert_fail@plt+0x347c>
   148a0:	ldr	r0, [sp, #44]	; 0x2c
   148a4:	bl	12794 <__assert_fail@plt+0x1368>
   148a8:	ldr	r0, [sp, #48]	; 0x30
   148ac:	bl	15ec0 <__assert_fail@plt+0x4a94>
   148b0:	mov	lr, r0
   148b4:	str	r0, [sp, #44]	; 0x2c
   148b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   148bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   148c0:	add	r0, r0, r1, lsl #3
   148c4:	str	lr, [r0, #4]
   148c8:	ldr	r0, [sp, #44]	; 0x2c
   148cc:	ldr	r1, [sp, #48]	; 0x30
   148d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   148d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   148d8:	ldr	lr, [fp, #-32]	; 0xffffffe0
   148dc:	ldr	lr, [lr]
   148e0:	ldr	ip, [sp, #40]	; 0x28
   148e4:	ldr	r4, [fp, #-32]	; 0xffffffe0
   148e8:	add	r4, r4, #8
   148ec:	ldr	r5, [fp, #-32]	; 0xffffffe0
   148f0:	ldr	r5, [r5, #40]	; 0x28
   148f4:	ldr	r6, [fp, #-32]	; 0xffffffe0
   148f8:	ldr	r6, [r6, #44]	; 0x2c
   148fc:	str	lr, [sp]
   14900:	str	ip, [sp, #4]
   14904:	str	r4, [sp, #8]
   14908:	str	r5, [sp, #12]
   1490c:	str	r6, [sp, #16]
   14910:	bl	12c64 <__assert_fail@plt+0x1838>
   14914:	str	r0, [sp, #28]
   14918:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1491c:	str	r0, [sp, #24]
   14920:	bl	1130c <__errno_location@plt>
   14924:	ldr	lr, [sp, #24]
   14928:	str	lr, [r0]
   1492c:	ldr	r0, [sp, #44]	; 0x2c
   14930:	sub	sp, fp, #16
   14934:	pop	{r4, r5, r6, sl, fp, pc}
   14938:	svcvc	0x00ffffff
   1493c:	push	{fp, lr}
   14940:	mov	fp, sp
   14944:	sub	sp, sp, #16
   14948:	str	r0, [fp, #-4]
   1494c:	str	r1, [sp, #8]
   14950:	str	r2, [sp, #4]
   14954:	ldr	r0, [fp, #-4]
   14958:	ldr	r1, [sp, #8]
   1495c:	ldr	r2, [sp, #4]
   14960:	movw	r3, #4516	; 0x11a4
   14964:	movt	r3, #3
   14968:	bl	1466c <__assert_fail@plt+0x3240>
   1496c:	mov	sp, fp
   14970:	pop	{fp, pc}
   14974:	push	{fp, lr}
   14978:	mov	fp, sp
   1497c:	sub	sp, sp, #8
   14980:	str	r0, [sp, #4]
   14984:	ldr	r1, [sp, #4]
   14988:	movw	r0, #0
   1498c:	bl	14638 <__assert_fail@plt+0x320c>
   14990:	mov	sp, fp
   14994:	pop	{fp, pc}
   14998:	push	{fp, lr}
   1499c:	mov	fp, sp
   149a0:	sub	sp, sp, #8
   149a4:	str	r0, [sp, #4]
   149a8:	str	r1, [sp]
   149ac:	ldr	r1, [sp, #4]
   149b0:	ldr	r2, [sp]
   149b4:	movw	r0, #0
   149b8:	bl	1493c <__assert_fail@plt+0x3510>
   149bc:	mov	sp, fp
   149c0:	pop	{fp, pc}
   149c4:	push	{fp, lr}
   149c8:	mov	fp, sp
   149cc:	sub	sp, sp, #64	; 0x40
   149d0:	str	r0, [fp, #-4]
   149d4:	str	r1, [fp, #-8]
   149d8:	str	r2, [fp, #-12]
   149dc:	ldr	r1, [fp, #-8]
   149e0:	add	r0, sp, #4
   149e4:	bl	14a04 <__assert_fail@plt+0x35d8>
   149e8:	ldr	r0, [fp, #-4]
   149ec:	ldr	r1, [fp, #-12]
   149f0:	mvn	r2, #0
   149f4:	add	r3, sp, #4
   149f8:	bl	1466c <__assert_fail@plt+0x3240>
   149fc:	mov	sp, fp
   14a00:	pop	{fp, pc}
   14a04:	push	{fp, lr}
   14a08:	mov	fp, sp
   14a0c:	sub	sp, sp, #8
   14a10:	str	r1, [sp, #4]
   14a14:	mov	r1, r0
   14a18:	str	r0, [sp]
   14a1c:	mov	r0, r1
   14a20:	movw	r1, #0
   14a24:	and	r1, r1, #255	; 0xff
   14a28:	movw	r2, #48	; 0x30
   14a2c:	bl	11330 <memset@plt>
   14a30:	ldr	r0, [sp, #4]
   14a34:	cmp	r0, #10
   14a38:	bne	14a40 <__assert_fail@plt+0x3614>
   14a3c:	bl	11408 <abort@plt>
   14a40:	ldr	r0, [sp, #4]
   14a44:	ldr	r1, [sp]
   14a48:	str	r0, [r1]
   14a4c:	mov	sp, fp
   14a50:	pop	{fp, pc}
   14a54:	push	{fp, lr}
   14a58:	mov	fp, sp
   14a5c:	sub	sp, sp, #64	; 0x40
   14a60:	str	r0, [fp, #-4]
   14a64:	str	r1, [fp, #-8]
   14a68:	str	r2, [fp, #-12]
   14a6c:	str	r3, [fp, #-16]
   14a70:	ldr	r1, [fp, #-8]
   14a74:	mov	r0, sp
   14a78:	bl	14a04 <__assert_fail@plt+0x35d8>
   14a7c:	ldr	r0, [fp, #-4]
   14a80:	ldr	r1, [fp, #-12]
   14a84:	ldr	r2, [fp, #-16]
   14a88:	mov	r3, sp
   14a8c:	bl	1466c <__assert_fail@plt+0x3240>
   14a90:	mov	sp, fp
   14a94:	pop	{fp, pc}
   14a98:	push	{fp, lr}
   14a9c:	mov	fp, sp
   14aa0:	sub	sp, sp, #8
   14aa4:	str	r0, [sp, #4]
   14aa8:	str	r1, [sp]
   14aac:	ldr	r1, [sp, #4]
   14ab0:	ldr	r2, [sp]
   14ab4:	movw	r0, #0
   14ab8:	bl	149c4 <__assert_fail@plt+0x3598>
   14abc:	mov	sp, fp
   14ac0:	pop	{fp, pc}
   14ac4:	push	{fp, lr}
   14ac8:	mov	fp, sp
   14acc:	sub	sp, sp, #16
   14ad0:	str	r0, [fp, #-4]
   14ad4:	str	r1, [sp, #8]
   14ad8:	str	r2, [sp, #4]
   14adc:	ldr	r1, [fp, #-4]
   14ae0:	ldr	r2, [sp, #8]
   14ae4:	ldr	r3, [sp, #4]
   14ae8:	movw	r0, #0
   14aec:	bl	14a54 <__assert_fail@plt+0x3628>
   14af0:	mov	sp, fp
   14af4:	pop	{fp, pc}
   14af8:	push	{fp, lr}
   14afc:	mov	fp, sp
   14b00:	sub	sp, sp, #72	; 0x48
   14b04:	movw	r3, #4516	; 0x11a4
   14b08:	movt	r3, #3
   14b0c:	str	r0, [fp, #-4]
   14b10:	str	r1, [fp, #-8]
   14b14:	strb	r2, [fp, #-9]
   14b18:	add	r0, sp, #12
   14b1c:	mov	r1, r0
   14b20:	str	r0, [sp, #8]
   14b24:	mov	r0, r1
   14b28:	mov	r1, r3
   14b2c:	movw	r2, #48	; 0x30
   14b30:	bl	111a4 <memcpy@plt>
   14b34:	ldr	r0, [sp, #8]
   14b38:	ldrb	r1, [fp, #-9]
   14b3c:	movw	r2, #1
   14b40:	bl	12a08 <__assert_fail@plt+0x15dc>
   14b44:	ldr	r1, [fp, #-4]
   14b48:	ldr	r2, [fp, #-8]
   14b4c:	movw	r3, #0
   14b50:	str	r0, [sp, #4]
   14b54:	mov	r0, r3
   14b58:	add	r3, sp, #12
   14b5c:	bl	1466c <__assert_fail@plt+0x3240>
   14b60:	mov	sp, fp
   14b64:	pop	{fp, pc}
   14b68:	push	{fp, lr}
   14b6c:	mov	fp, sp
   14b70:	sub	sp, sp, #8
   14b74:	str	r0, [sp, #4]
   14b78:	strb	r1, [sp, #3]
   14b7c:	ldr	r0, [sp, #4]
   14b80:	mvn	r1, #0
   14b84:	ldrb	r2, [sp, #3]
   14b88:	bl	14af8 <__assert_fail@plt+0x36cc>
   14b8c:	mov	sp, fp
   14b90:	pop	{fp, pc}
   14b94:	push	{fp, lr}
   14b98:	mov	fp, sp
   14b9c:	sub	sp, sp, #8
   14ba0:	str	r0, [sp, #4]
   14ba4:	ldr	r0, [sp, #4]
   14ba8:	movw	r1, #58	; 0x3a
   14bac:	and	r1, r1, #255	; 0xff
   14bb0:	bl	14b68 <__assert_fail@plt+0x373c>
   14bb4:	mov	sp, fp
   14bb8:	pop	{fp, pc}
   14bbc:	push	{fp, lr}
   14bc0:	mov	fp, sp
   14bc4:	sub	sp, sp, #8
   14bc8:	str	r0, [sp, #4]
   14bcc:	str	r1, [sp]
   14bd0:	ldr	r0, [sp, #4]
   14bd4:	ldr	r1, [sp]
   14bd8:	movw	r2, #58	; 0x3a
   14bdc:	and	r2, r2, #255	; 0xff
   14be0:	bl	14af8 <__assert_fail@plt+0x36cc>
   14be4:	mov	sp, fp
   14be8:	pop	{fp, pc}
   14bec:	push	{fp, lr}
   14bf0:	mov	fp, sp
   14bf4:	sub	sp, sp, #120	; 0x78
   14bf8:	str	r0, [fp, #-4]
   14bfc:	str	r1, [fp, #-8]
   14c00:	str	r2, [fp, #-12]
   14c04:	ldr	r1, [fp, #-8]
   14c08:	add	r0, sp, #12
   14c0c:	bl	14a04 <__assert_fail@plt+0x35d8>
   14c10:	add	r0, sp, #60	; 0x3c
   14c14:	mov	r1, r0
   14c18:	add	r2, sp, #12
   14c1c:	str	r0, [sp, #8]
   14c20:	mov	r0, r1
   14c24:	mov	r1, r2
   14c28:	movw	r2, #48	; 0x30
   14c2c:	bl	111a4 <memcpy@plt>
   14c30:	ldr	r0, [sp, #8]
   14c34:	movw	r1, #58	; 0x3a
   14c38:	and	r1, r1, #255	; 0xff
   14c3c:	movw	r2, #1
   14c40:	bl	12a08 <__assert_fail@plt+0x15dc>
   14c44:	ldr	r1, [fp, #-4]
   14c48:	ldr	r2, [fp, #-12]
   14c4c:	str	r0, [sp, #4]
   14c50:	mov	r0, r1
   14c54:	mov	r1, r2
   14c58:	mvn	r2, #0
   14c5c:	add	r3, sp, #60	; 0x3c
   14c60:	bl	1466c <__assert_fail@plt+0x3240>
   14c64:	mov	sp, fp
   14c68:	pop	{fp, pc}
   14c6c:	push	{fp, lr}
   14c70:	mov	fp, sp
   14c74:	sub	sp, sp, #24
   14c78:	str	r0, [fp, #-4]
   14c7c:	str	r1, [fp, #-8]
   14c80:	str	r2, [sp, #12]
   14c84:	str	r3, [sp, #8]
   14c88:	ldr	r0, [fp, #-4]
   14c8c:	ldr	r1, [fp, #-8]
   14c90:	ldr	r2, [sp, #12]
   14c94:	ldr	r3, [sp, #8]
   14c98:	mvn	ip, #0
   14c9c:	str	ip, [sp]
   14ca0:	bl	14cac <__assert_fail@plt+0x3880>
   14ca4:	mov	sp, fp
   14ca8:	pop	{fp, pc}
   14cac:	push	{fp, lr}
   14cb0:	mov	fp, sp
   14cb4:	sub	sp, sp, #72	; 0x48
   14cb8:	ldr	ip, [fp, #8]
   14cbc:	movw	lr, #4516	; 0x11a4
   14cc0:	movt	lr, #3
   14cc4:	str	r0, [fp, #-4]
   14cc8:	str	r1, [fp, #-8]
   14ccc:	str	r2, [fp, #-12]
   14cd0:	str	r3, [fp, #-16]
   14cd4:	add	r0, sp, #8
   14cd8:	mov	r1, r0
   14cdc:	str	r0, [sp, #4]
   14ce0:	mov	r0, r1
   14ce4:	mov	r1, lr
   14ce8:	movw	r2, #48	; 0x30
   14cec:	str	ip, [sp]
   14cf0:	bl	111a4 <memcpy@plt>
   14cf4:	ldr	r1, [fp, #-8]
   14cf8:	ldr	r2, [fp, #-12]
   14cfc:	ldr	r0, [sp, #4]
   14d00:	bl	12b08 <__assert_fail@plt+0x16dc>
   14d04:	ldr	r0, [fp, #-4]
   14d08:	ldr	r1, [fp, #-16]
   14d0c:	ldr	r2, [fp, #8]
   14d10:	add	r3, sp, #8
   14d14:	bl	1466c <__assert_fail@plt+0x3240>
   14d18:	mov	sp, fp
   14d1c:	pop	{fp, pc}
   14d20:	push	{fp, lr}
   14d24:	mov	fp, sp
   14d28:	sub	sp, sp, #16
   14d2c:	str	r0, [fp, #-4]
   14d30:	str	r1, [sp, #8]
   14d34:	str	r2, [sp, #4]
   14d38:	ldr	r1, [fp, #-4]
   14d3c:	ldr	r2, [sp, #8]
   14d40:	ldr	r3, [sp, #4]
   14d44:	movw	r0, #0
   14d48:	bl	14c6c <__assert_fail@plt+0x3840>
   14d4c:	mov	sp, fp
   14d50:	pop	{fp, pc}
   14d54:	push	{fp, lr}
   14d58:	mov	fp, sp
   14d5c:	sub	sp, sp, #24
   14d60:	str	r0, [fp, #-4]
   14d64:	str	r1, [fp, #-8]
   14d68:	str	r2, [sp, #12]
   14d6c:	str	r3, [sp, #8]
   14d70:	ldr	r1, [fp, #-4]
   14d74:	ldr	r2, [fp, #-8]
   14d78:	ldr	r3, [sp, #12]
   14d7c:	ldr	r0, [sp, #8]
   14d80:	movw	ip, #0
   14d84:	str	r0, [sp, #4]
   14d88:	mov	r0, ip
   14d8c:	ldr	ip, [sp, #4]
   14d90:	str	ip, [sp]
   14d94:	bl	14cac <__assert_fail@plt+0x3880>
   14d98:	mov	sp, fp
   14d9c:	pop	{fp, pc}
   14da0:	push	{fp, lr}
   14da4:	mov	fp, sp
   14da8:	sub	sp, sp, #16
   14dac:	str	r0, [fp, #-4]
   14db0:	str	r1, [sp, #8]
   14db4:	str	r2, [sp, #4]
   14db8:	ldr	r0, [fp, #-4]
   14dbc:	ldr	r1, [sp, #8]
   14dc0:	ldr	r2, [sp, #4]
   14dc4:	movw	r3, #4408	; 0x1138
   14dc8:	movt	r3, #3
   14dcc:	bl	1466c <__assert_fail@plt+0x3240>
   14dd0:	mov	sp, fp
   14dd4:	pop	{fp, pc}
   14dd8:	push	{fp, lr}
   14ddc:	mov	fp, sp
   14de0:	sub	sp, sp, #8
   14de4:	str	r0, [sp, #4]
   14de8:	str	r1, [sp]
   14dec:	ldr	r1, [sp, #4]
   14df0:	ldr	r2, [sp]
   14df4:	movw	r0, #0
   14df8:	bl	14da0 <__assert_fail@plt+0x3974>
   14dfc:	mov	sp, fp
   14e00:	pop	{fp, pc}
   14e04:	push	{fp, lr}
   14e08:	mov	fp, sp
   14e0c:	sub	sp, sp, #8
   14e10:	str	r0, [sp, #4]
   14e14:	str	r1, [sp]
   14e18:	ldr	r0, [sp, #4]
   14e1c:	ldr	r1, [sp]
   14e20:	mvn	r2, #0
   14e24:	bl	14da0 <__assert_fail@plt+0x3974>
   14e28:	mov	sp, fp
   14e2c:	pop	{fp, pc}
   14e30:	push	{fp, lr}
   14e34:	mov	fp, sp
   14e38:	sub	sp, sp, #8
   14e3c:	str	r0, [sp, #4]
   14e40:	ldr	r1, [sp, #4]
   14e44:	movw	r0, #0
   14e48:	bl	14e04 <__assert_fail@plt+0x39d8>
   14e4c:	mov	sp, fp
   14e50:	pop	{fp, pc}
   14e54:	push	{fp, lr}
   14e58:	mov	fp, sp
   14e5c:	sub	sp, sp, #24
   14e60:	str	r0, [fp, #-8]
   14e64:	str	r1, [sp, #12]
   14e68:	ldr	r0, [fp, #-8]
   14e6c:	bl	112d0 <gettext@plt>
   14e70:	str	r0, [sp, #8]
   14e74:	ldr	r0, [sp, #8]
   14e78:	ldr	r1, [fp, #-8]
   14e7c:	cmp	r0, r1
   14e80:	beq	14e90 <__assert_fail@plt+0x3a64>
   14e84:	ldr	r0, [sp, #8]
   14e88:	str	r0, [fp, #-4]
   14e8c:	b	14f5c <__assert_fail@plt+0x3b30>
   14e90:	bl	1d4cc <__assert_fail@plt+0xc0a0>
   14e94:	str	r0, [sp, #4]
   14e98:	ldr	r0, [sp, #4]
   14e9c:	movw	r1, #252	; 0xfc
   14ea0:	movt	r1, #2
   14ea4:	bl	1cd88 <__assert_fail@plt+0xb95c>
   14ea8:	cmp	r0, #0
   14eac:	bne	14ee4 <__assert_fail@plt+0x3ab8>
   14eb0:	ldr	r0, [fp, #-8]
   14eb4:	ldrb	r0, [r0]
   14eb8:	cmp	r0, #96	; 0x60
   14ebc:	movw	r0, #0
   14ec0:	moveq	r0, #1
   14ec4:	tst	r0, #1
   14ec8:	movw	r0, #262	; 0x106
   14ecc:	movt	r0, #2
   14ed0:	movw	r1, #258	; 0x102
   14ed4:	movt	r1, #2
   14ed8:	movne	r0, r1
   14edc:	str	r0, [fp, #-4]
   14ee0:	b	14f5c <__assert_fail@plt+0x3b30>
   14ee4:	ldr	r0, [sp, #4]
   14ee8:	movw	r1, #266	; 0x10a
   14eec:	movt	r1, #2
   14ef0:	bl	1cd88 <__assert_fail@plt+0xb95c>
   14ef4:	cmp	r0, #0
   14ef8:	bne	14f30 <__assert_fail@plt+0x3b04>
   14efc:	ldr	r0, [fp, #-8]
   14f00:	ldrb	r0, [r0]
   14f04:	cmp	r0, #96	; 0x60
   14f08:	movw	r0, #0
   14f0c:	moveq	r0, #1
   14f10:	tst	r0, #1
   14f14:	movw	r0, #278	; 0x116
   14f18:	movt	r0, #2
   14f1c:	movw	r1, #274	; 0x112
   14f20:	movt	r1, #2
   14f24:	movne	r0, r1
   14f28:	str	r0, [fp, #-4]
   14f2c:	b	14f5c <__assert_fail@plt+0x3b30>
   14f30:	ldr	r0, [sp, #12]
   14f34:	cmp	r0, #9
   14f38:	movw	r0, #0
   14f3c:	moveq	r0, #1
   14f40:	tst	r0, #1
   14f44:	movw	r0, #250	; 0xfa
   14f48:	movt	r0, #2
   14f4c:	movw	r1, #246	; 0xf6
   14f50:	movt	r1, #2
   14f54:	movne	r0, r1
   14f58:	str	r0, [fp, #-4]
   14f5c:	ldr	r0, [fp, #-4]
   14f60:	mov	sp, fp
   14f64:	pop	{fp, pc}
   14f68:	push	{fp, lr}
   14f6c:	mov	fp, sp
   14f70:	sub	sp, sp, #48	; 0x30
   14f74:	ldr	ip, [fp, #8]
   14f78:	str	r0, [fp, #-4]
   14f7c:	str	r1, [fp, #-8]
   14f80:	str	r2, [fp, #-12]
   14f84:	str	r3, [fp, #-16]
   14f88:	ldr	r0, [fp, #-12]
   14f8c:	movw	r1, #0
   14f90:	cmp	r0, r1
   14f94:	str	ip, [sp, #16]
   14f98:	beq	14fb0 <__assert_fail@plt+0x3b84>
   14f9c:	ldr	r0, [fp, #-4]
   14fa0:	movw	r1, #58	; 0x3a
   14fa4:	bl	112f4 <strchr@plt>
   14fa8:	str	r0, [sp, #12]
   14fac:	b	14fbc <__assert_fail@plt+0x3b90>
   14fb0:	movw	r0, #0
   14fb4:	str	r0, [sp, #12]
   14fb8:	b	14fbc <__assert_fail@plt+0x3b90>
   14fbc:	ldr	r0, [sp, #12]
   14fc0:	str	r0, [fp, #-20]	; 0xffffffec
   14fc4:	ldr	r0, [fp, #-4]
   14fc8:	ldr	r1, [fp, #-20]	; 0xffffffec
   14fcc:	ldr	r2, [fp, #-8]
   14fd0:	ldr	r3, [fp, #-12]
   14fd4:	ldr	ip, [fp, #-16]
   14fd8:	ldr	lr, [fp, #8]
   14fdc:	str	ip, [sp]
   14fe0:	str	lr, [sp, #4]
   14fe4:	bl	15084 <__assert_fail@plt+0x3c58>
   14fe8:	str	r0, [sp, #24]
   14fec:	ldr	r0, [fp, #-12]
   14ff0:	movw	r1, #0
   14ff4:	cmp	r0, r1
   14ff8:	beq	15078 <__assert_fail@plt+0x3c4c>
   14ffc:	ldr	r0, [fp, #-20]	; 0xffffffec
   15000:	movw	r1, #0
   15004:	cmp	r0, r1
   15008:	bne	15078 <__assert_fail@plt+0x3c4c>
   1500c:	ldr	r0, [sp, #24]
   15010:	movw	r1, #0
   15014:	cmp	r0, r1
   15018:	beq	15078 <__assert_fail@plt+0x3c4c>
   1501c:	ldr	r0, [fp, #-4]
   15020:	movw	r1, #46	; 0x2e
   15024:	bl	112f4 <strchr@plt>
   15028:	str	r0, [sp, #20]
   1502c:	ldr	r0, [sp, #20]
   15030:	movw	r1, #0
   15034:	cmp	r0, r1
   15038:	beq	15074 <__assert_fail@plt+0x3c48>
   1503c:	ldr	r0, [fp, #-4]
   15040:	ldr	r1, [sp, #20]
   15044:	ldr	r2, [fp, #-8]
   15048:	ldr	r3, [fp, #-12]
   1504c:	ldr	ip, [fp, #-16]
   15050:	ldr	lr, [fp, #8]
   15054:	str	ip, [sp]
   15058:	str	lr, [sp, #4]
   1505c:	bl	15084 <__assert_fail@plt+0x3c58>
   15060:	movw	r1, #0
   15064:	cmp	r0, r1
   15068:	bne	15074 <__assert_fail@plt+0x3c48>
   1506c:	movw	r0, #0
   15070:	str	r0, [sp, #24]
   15074:	b	15078 <__assert_fail@plt+0x3c4c>
   15078:	ldr	r0, [sp, #24]
   1507c:	mov	sp, fp
   15080:	pop	{fp, pc}
   15084:	push	{fp, lr}
   15088:	mov	fp, sp
   1508c:	sub	sp, sp, #128	; 0x80
   15090:	ldr	ip, [fp, #12]
   15094:	ldr	lr, [fp, #8]
   15098:	str	r0, [fp, #-4]
   1509c:	str	r1, [fp, #-8]
   150a0:	str	r2, [fp, #-12]
   150a4:	str	r3, [fp, #-16]
   150a8:	movw	r0, #0
   150ac:	str	r0, [fp, #-40]	; 0xffffffd8
   150b0:	ldr	r1, [fp, #-12]
   150b4:	ldr	r1, [r1]
   150b8:	str	r1, [fp, #-44]	; 0xffffffd4
   150bc:	ldr	r1, [fp, #-16]
   150c0:	cmp	r1, r0
   150c4:	str	lr, [sp, #36]	; 0x24
   150c8:	str	ip, [sp, #32]
   150cc:	beq	150e0 <__assert_fail@plt+0x3cb4>
   150d0:	ldr	r0, [fp, #-16]
   150d4:	ldr	r0, [r0]
   150d8:	str	r0, [sp, #28]
   150dc:	b	150ec <__assert_fail@plt+0x3cc0>
   150e0:	mvn	r0, #0
   150e4:	str	r0, [sp, #28]
   150e8:	b	150ec <__assert_fail@plt+0x3cc0>
   150ec:	ldr	r0, [sp, #28]
   150f0:	str	r0, [fp, #-48]	; 0xffffffd0
   150f4:	movw	r0, #0
   150f8:	str	r0, [fp, #-20]	; 0xffffffec
   150fc:	ldr	r1, [fp, #8]
   15100:	cmp	r1, r0
   15104:	beq	15114 <__assert_fail@plt+0x3ce8>
   15108:	ldr	r0, [fp, #8]
   1510c:	movw	r1, #0
   15110:	str	r1, [r0]
   15114:	ldr	r0, [fp, #12]
   15118:	movw	r1, #0
   1511c:	cmp	r0, r1
   15120:	beq	15130 <__assert_fail@plt+0x3d04>
   15124:	ldr	r0, [fp, #12]
   15128:	movw	r1, #0
   1512c:	str	r1, [r0]
   15130:	movw	r0, #0
   15134:	str	r0, [fp, #-32]	; 0xffffffe0
   15138:	ldr	r1, [fp, #-8]
   1513c:	cmp	r1, r0
   15140:	bne	15164 <__assert_fail@plt+0x3d38>
   15144:	ldr	r0, [fp, #-4]
   15148:	ldrsb	r0, [r0]
   1514c:	cmp	r0, #0
   15150:	beq	15160 <__assert_fail@plt+0x3d34>
   15154:	ldr	r0, [fp, #-4]
   15158:	bl	18bec <__assert_fail@plt+0x77c0>
   1515c:	str	r0, [fp, #-32]	; 0xffffffe0
   15160:	b	151ac <__assert_fail@plt+0x3d80>
   15164:	ldr	r0, [fp, #-8]
   15168:	ldr	r1, [fp, #-4]
   1516c:	sub	r0, r0, r1
   15170:	str	r0, [fp, #-52]	; 0xffffffcc
   15174:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15178:	cmp	r0, #0
   1517c:	beq	151a8 <__assert_fail@plt+0x3d7c>
   15180:	ldr	r0, [fp, #-4]
   15184:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15188:	add	r1, r1, #1
   1518c:	bl	18b5c <__assert_fail@plt+0x7730>
   15190:	str	r0, [fp, #-32]	; 0xffffffe0
   15194:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15198:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1519c:	add	r0, r0, r1
   151a0:	movw	r1, #0
   151a4:	strb	r1, [r0]
   151a8:	b	151ac <__assert_fail@plt+0x3d80>
   151ac:	ldr	r0, [fp, #-8]
   151b0:	movw	r1, #0
   151b4:	cmp	r0, r1
   151b8:	beq	151cc <__assert_fail@plt+0x3da0>
   151bc:	ldr	r0, [fp, #-8]
   151c0:	ldrb	r0, [r0, #1]
   151c4:	cmp	r0, #0
   151c8:	bne	151d8 <__assert_fail@plt+0x3dac>
   151cc:	movw	r0, #0
   151d0:	str	r0, [sp, #24]
   151d4:	b	151e4 <__assert_fail@plt+0x3db8>
   151d8:	ldr	r0, [fp, #-8]
   151dc:	add	r0, r0, #1
   151e0:	str	r0, [sp, #24]
   151e4:	ldr	r0, [sp, #24]
   151e8:	str	r0, [fp, #-36]	; 0xffffffdc
   151ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   151f0:	movw	r1, #0
   151f4:	cmp	r0, r1
   151f8:	beq	1538c <__assert_fail@plt+0x3f60>
   151fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15200:	ldrb	r0, [r0]
   15204:	cmp	r0, #43	; 0x2b
   15208:	bne	15218 <__assert_fail@plt+0x3dec>
   1520c:	movw	r0, #0
   15210:	str	r0, [sp, #20]
   15214:	b	15224 <__assert_fail@plt+0x3df8>
   15218:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1521c:	bl	11150 <getpwnam@plt>
   15220:	str	r0, [sp, #20]
   15224:	ldr	r0, [sp, #20]
   15228:	str	r0, [fp, #-24]	; 0xffffffe8
   1522c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15230:	movw	r1, #0
   15234:	cmp	r0, r1
   15238:	bne	152fc <__assert_fail@plt+0x3ed0>
   1523c:	ldr	r0, [fp, #-8]
   15240:	movw	r1, #0
   15244:	cmp	r0, r1
   15248:	movw	r0, #0
   1524c:	str	r0, [sp, #16]
   15250:	beq	1526c <__assert_fail@plt+0x3e40>
   15254:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15258:	movw	r1, #0
   1525c:	cmp	r0, r1
   15260:	movw	r0, #0
   15264:	moveq	r0, #1
   15268:	str	r0, [sp, #16]
   1526c:	ldr	r0, [sp, #16]
   15270:	and	r0, r0, #1
   15274:	strb	r0, [fp, #-53]	; 0xffffffcb
   15278:	ldrb	r0, [fp, #-53]	; 0xffffffcb
   1527c:	tst	r0, #1
   15280:	beq	15298 <__assert_fail@plt+0x3e6c>
   15284:	movw	r0, #4464	; 0x1170
   15288:	movt	r0, #3
   1528c:	ldr	r0, [r0]
   15290:	str	r0, [fp, #-20]	; 0xffffffec
   15294:	b	152f8 <__assert_fail@plt+0x3ecc>
   15298:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1529c:	movw	r1, #0
   152a0:	movw	r2, #10
   152a4:	sub	r3, fp, #60	; 0x3c
   152a8:	movw	ip, #64288	; 0xfb20
   152ac:	movt	ip, #1
   152b0:	str	ip, [sp]
   152b4:	bl	18ccc <__assert_fail@plt+0x78a0>
   152b8:	cmp	r0, #0
   152bc:	bne	152e4 <__assert_fail@plt+0x3eb8>
   152c0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   152c4:	cmn	r0, #1
   152c8:	bhi	152e4 <__assert_fail@plt+0x3eb8>
   152cc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   152d0:	cmn	r0, #1
   152d4:	beq	152e4 <__assert_fail@plt+0x3eb8>
   152d8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   152dc:	str	r0, [fp, #-44]	; 0xffffffd4
   152e0:	b	152f4 <__assert_fail@plt+0x3ec8>
   152e4:	movw	r0, #4456	; 0x1168
   152e8:	movt	r0, #3
   152ec:	ldr	r0, [r0]
   152f0:	str	r0, [fp, #-20]	; 0xffffffec
   152f4:	b	152f8 <__assert_fail@plt+0x3ecc>
   152f8:	b	15388 <__assert_fail@plt+0x3f5c>
   152fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15300:	ldr	r0, [r0, #8]
   15304:	str	r0, [fp, #-44]	; 0xffffffd4
   15308:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1530c:	movw	r1, #0
   15310:	cmp	r0, r1
   15314:	bne	15384 <__assert_fail@plt+0x3f58>
   15318:	ldr	r0, [fp, #-8]
   1531c:	movw	r1, #0
   15320:	cmp	r0, r1
   15324:	beq	15384 <__assert_fail@plt+0x3f58>
   15328:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1532c:	ldr	r0, [r0, #12]
   15330:	str	r0, [fp, #-48]	; 0xffffffd0
   15334:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15338:	bl	11414 <getgrgid@plt>
   1533c:	str	r0, [fp, #-28]	; 0xffffffe4
   15340:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15344:	movw	lr, #0
   15348:	cmp	r0, lr
   1534c:	beq	15360 <__assert_fail@plt+0x3f34>
   15350:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15354:	ldr	r0, [r0]
   15358:	str	r0, [sp, #12]
   1535c:	b	15374 <__assert_fail@plt+0x3f48>
   15360:	add	r2, sp, #47	; 0x2f
   15364:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15368:	mov	r1, #0
   1536c:	bl	1d38c <__assert_fail@plt+0xbf60>
   15370:	str	r0, [sp, #12]
   15374:	ldr	r0, [sp, #12]
   15378:	bl	18bec <__assert_fail@plt+0x77c0>
   1537c:	str	r0, [fp, #-40]	; 0xffffffd8
   15380:	bl	1112c <endgrent@plt>
   15384:	b	15388 <__assert_fail@plt+0x3f5c>
   15388:	bl	1139c <endpwent@plt>
   1538c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15390:	movw	r1, #0
   15394:	cmp	r0, r1
   15398:	beq	15468 <__assert_fail@plt+0x403c>
   1539c:	ldr	r0, [fp, #-20]	; 0xffffffec
   153a0:	movw	r1, #0
   153a4:	cmp	r0, r1
   153a8:	bne	15468 <__assert_fail@plt+0x403c>
   153ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   153b0:	ldrb	r0, [r0]
   153b4:	cmp	r0, #43	; 0x2b
   153b8:	bne	153c8 <__assert_fail@plt+0x3f9c>
   153bc:	movw	r0, #0
   153c0:	str	r0, [sp, #8]
   153c4:	b	153d4 <__assert_fail@plt+0x3fa8>
   153c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   153cc:	bl	11420 <getgrnam@plt>
   153d0:	str	r0, [sp, #8]
   153d4:	ldr	r0, [sp, #8]
   153d8:	str	r0, [fp, #-28]	; 0xffffffe4
   153dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   153e0:	movw	r1, #0
   153e4:	cmp	r0, r1
   153e8:	bne	1544c <__assert_fail@plt+0x4020>
   153ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   153f0:	movw	r1, #0
   153f4:	movw	r2, #10
   153f8:	add	r3, sp, #40	; 0x28
   153fc:	movw	ip, #64288	; 0xfb20
   15400:	movt	ip, #1
   15404:	str	ip, [sp]
   15408:	bl	18ccc <__assert_fail@plt+0x78a0>
   1540c:	cmp	r0, #0
   15410:	bne	15438 <__assert_fail@plt+0x400c>
   15414:	ldr	r0, [sp, #40]	; 0x28
   15418:	cmn	r0, #1
   1541c:	bhi	15438 <__assert_fail@plt+0x400c>
   15420:	ldr	r0, [sp, #40]	; 0x28
   15424:	cmn	r0, #1
   15428:	beq	15438 <__assert_fail@plt+0x400c>
   1542c:	ldr	r0, [sp, #40]	; 0x28
   15430:	str	r0, [fp, #-48]	; 0xffffffd0
   15434:	b	15448 <__assert_fail@plt+0x401c>
   15438:	movw	r0, #4460	; 0x116c
   1543c:	movt	r0, #3
   15440:	ldr	r0, [r0]
   15444:	str	r0, [fp, #-20]	; 0xffffffec
   15448:	b	15458 <__assert_fail@plt+0x402c>
   1544c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15450:	ldr	r0, [r0, #8]
   15454:	str	r0, [fp, #-48]	; 0xffffffd0
   15458:	bl	1112c <endgrent@plt>
   1545c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15460:	bl	18bec <__assert_fail@plt+0x77c0>
   15464:	str	r0, [fp, #-40]	; 0xffffffd8
   15468:	ldr	r0, [fp, #-20]	; 0xffffffec
   1546c:	movw	r1, #0
   15470:	cmp	r0, r1
   15474:	bne	154ec <__assert_fail@plt+0x40c0>
   15478:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1547c:	ldr	r1, [fp, #-12]
   15480:	str	r0, [r1]
   15484:	ldr	r0, [fp, #-16]
   15488:	movw	r1, #0
   1548c:	cmp	r0, r1
   15490:	beq	154a0 <__assert_fail@plt+0x4074>
   15494:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15498:	ldr	r1, [fp, #-16]
   1549c:	str	r0, [r1]
   154a0:	ldr	r0, [fp, #8]
   154a4:	movw	r1, #0
   154a8:	cmp	r0, r1
   154ac:	beq	154c4 <__assert_fail@plt+0x4098>
   154b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   154b4:	ldr	r1, [fp, #8]
   154b8:	str	r0, [r1]
   154bc:	movw	r0, #0
   154c0:	str	r0, [fp, #-32]	; 0xffffffe0
   154c4:	ldr	r0, [fp, #12]
   154c8:	movw	r1, #0
   154cc:	cmp	r0, r1
   154d0:	beq	154e8 <__assert_fail@plt+0x40bc>
   154d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   154d8:	ldr	r1, [fp, #12]
   154dc:	str	r0, [r1]
   154e0:	movw	r0, #0
   154e4:	str	r0, [fp, #-40]	; 0xffffffd8
   154e8:	b	154ec <__assert_fail@plt+0x40c0>
   154ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   154f0:	bl	12794 <__assert_fail@plt+0x1368>
   154f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   154f8:	bl	12794 <__assert_fail@plt+0x1368>
   154fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   15500:	movw	lr, #0
   15504:	cmp	r0, lr
   15508:	beq	1551c <__assert_fail@plt+0x40f0>
   1550c:	ldr	r0, [fp, #-20]	; 0xffffffec
   15510:	bl	112d0 <gettext@plt>
   15514:	str	r0, [sp, #4]
   15518:	b	15528 <__assert_fail@plt+0x40fc>
   1551c:	movw	r0, #0
   15520:	str	r0, [sp, #4]
   15524:	b	15528 <__assert_fail@plt+0x40fc>
   15528:	ldr	r0, [sp, #4]
   1552c:	mov	sp, fp
   15530:	pop	{fp, pc}
   15534:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15538:	add	fp, sp, #28
   1553c:	sub	sp, sp, #260	; 0x104
   15540:	ldr	ip, [fp, #12]
   15544:	ldr	lr, [fp, #8]
   15548:	str	r0, [fp, #-32]	; 0xffffffe0
   1554c:	str	r1, [fp, #-36]	; 0xffffffdc
   15550:	str	r2, [fp, #-40]	; 0xffffffd8
   15554:	str	r3, [fp, #-44]	; 0xffffffd4
   15558:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1555c:	movw	r1, #0
   15560:	cmp	r0, r1
   15564:	str	lr, [fp, #-48]	; 0xffffffd0
   15568:	str	ip, [fp, #-52]	; 0xffffffcc
   1556c:	beq	155a4 <__assert_fail@plt+0x4178>
   15570:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15574:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15578:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1557c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15580:	movw	ip, #408	; 0x198
   15584:	movt	ip, #2
   15588:	str	r1, [fp, #-56]	; 0xffffffc8
   1558c:	mov	r1, ip
   15590:	ldr	ip, [fp, #-56]	; 0xffffffc8
   15594:	str	ip, [sp]
   15598:	bl	11300 <fprintf@plt>
   1559c:	str	r0, [fp, #-60]	; 0xffffffc4
   155a0:	b	155c0 <__assert_fail@plt+0x4194>
   155a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   155a8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   155ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   155b0:	movw	r1, #420	; 0x1a4
   155b4:	movt	r1, #2
   155b8:	bl	11300 <fprintf@plt>
   155bc:	str	r0, [fp, #-64]	; 0xffffffc0
   155c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   155c4:	movw	r1, #427	; 0x1ab
   155c8:	movt	r1, #2
   155cc:	str	r0, [fp, #-68]	; 0xffffffbc
   155d0:	mov	r0, r1
   155d4:	bl	112d0 <gettext@plt>
   155d8:	movw	r1, #1145	; 0x479
   155dc:	movt	r1, #2
   155e0:	movw	r3, #2022	; 0x7e6
   155e4:	ldr	lr, [fp, #-68]	; 0xffffffbc
   155e8:	str	r0, [fp, #-72]	; 0xffffffb8
   155ec:	mov	r0, lr
   155f0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   155f4:	bl	11300 <fprintf@plt>
   155f8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   155fc:	movw	r2, #64287	; 0xfb1f
   15600:	movt	r2, #1
   15604:	str	r0, [fp, #-76]	; 0xffffffb4
   15608:	mov	r0, r2
   1560c:	str	r2, [fp, #-80]	; 0xffffffb0
   15610:	bl	11138 <fputs_unlocked@plt>
   15614:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15618:	movw	r2, #431	; 0x1af
   1561c:	movt	r2, #2
   15620:	str	r0, [fp, #-84]	; 0xffffffac
   15624:	mov	r0, r2
   15628:	str	r1, [fp, #-88]	; 0xffffffa8
   1562c:	bl	112d0 <gettext@plt>
   15630:	movw	r2, #602	; 0x25a
   15634:	movt	r2, #2
   15638:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1563c:	str	r0, [fp, #-92]	; 0xffffffa4
   15640:	mov	r0, r1
   15644:	ldr	r1, [fp, #-92]	; 0xffffffa4
   15648:	bl	11300 <fprintf@plt>
   1564c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15650:	ldr	r2, [fp, #-80]	; 0xffffffb0
   15654:	str	r0, [fp, #-96]	; 0xffffffa0
   15658:	mov	r0, r2
   1565c:	bl	11138 <fputs_unlocked@plt>
   15660:	ldr	r1, [fp, #12]
   15664:	cmp	r1, #9
   15668:	str	r0, [fp, #-100]	; 0xffffff9c
   1566c:	str	r1, [fp, #-104]	; 0xffffff98
   15670:	bhi	15ab0 <__assert_fail@plt+0x4684>
   15674:	add	r0, pc, #8
   15678:	ldr	r1, [fp, #-104]	; 0xffffff98
   1567c:	ldr	r0, [r0, r1, lsl #2]
   15680:	mov	pc, r0
   15684:	andeq	r5, r1, ip, lsr #13
   15688:			; <UNDEFINED> instruction: 0x000156b0
   1568c:	andeq	r5, r1, ip, ror #13
   15690:	andeq	r5, r1, r0, lsr r7
   15694:	andeq	r5, r1, ip, lsl #15
   15698:	strdeq	r5, [r1], -r4
   1569c:	andeq	r5, r1, r8, ror #16
   156a0:	andeq	r5, r1, r8, ror #17
   156a4:	andeq	r5, r1, r4, ror r9
   156a8:	andeq	r5, r1, ip, lsl #20
   156ac:	b	15b50 <__assert_fail@plt+0x4724>
   156b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   156b4:	movw	r1, #636	; 0x27c
   156b8:	movt	r1, #2
   156bc:	str	r0, [fp, #-108]	; 0xffffff94
   156c0:	mov	r0, r1
   156c4:	bl	112d0 <gettext@plt>
   156c8:	ldr	r1, [fp, #8]
   156cc:	ldr	r2, [r1]
   156d0:	ldr	r1, [fp, #-108]	; 0xffffff94
   156d4:	str	r0, [fp, #-112]	; 0xffffff90
   156d8:	mov	r0, r1
   156dc:	ldr	r1, [fp, #-112]	; 0xffffff90
   156e0:	bl	11300 <fprintf@plt>
   156e4:	str	r0, [fp, #-116]	; 0xffffff8c
   156e8:	b	15b50 <__assert_fail@plt+0x4724>
   156ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   156f0:	movw	r1, #652	; 0x28c
   156f4:	movt	r1, #2
   156f8:	str	r0, [fp, #-120]	; 0xffffff88
   156fc:	mov	r0, r1
   15700:	bl	112d0 <gettext@plt>
   15704:	ldr	r1, [fp, #8]
   15708:	ldr	r2, [r1]
   1570c:	ldr	r1, [fp, #8]
   15710:	ldr	r3, [r1, #4]
   15714:	ldr	r1, [fp, #-120]	; 0xffffff88
   15718:	str	r0, [fp, #-124]	; 0xffffff84
   1571c:	mov	r0, r1
   15720:	ldr	r1, [fp, #-124]	; 0xffffff84
   15724:	bl	11300 <fprintf@plt>
   15728:	str	r0, [fp, #-128]	; 0xffffff80
   1572c:	b	15b50 <__assert_fail@plt+0x4724>
   15730:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15734:	movw	r1, #675	; 0x2a3
   15738:	movt	r1, #2
   1573c:	str	r0, [fp, #-132]	; 0xffffff7c
   15740:	mov	r0, r1
   15744:	bl	112d0 <gettext@plt>
   15748:	ldr	r1, [fp, #8]
   1574c:	ldr	r2, [r1]
   15750:	ldr	r1, [fp, #8]
   15754:	ldr	r3, [r1, #4]
   15758:	ldr	r1, [fp, #8]
   1575c:	ldr	r1, [r1, #8]
   15760:	ldr	lr, [fp, #-132]	; 0xffffff7c
   15764:	str	r0, [fp, #-136]	; 0xffffff78
   15768:	mov	r0, lr
   1576c:	ldr	ip, [fp, #-136]	; 0xffffff78
   15770:	str	r1, [fp, #-140]	; 0xffffff74
   15774:	mov	r1, ip
   15778:	ldr	r4, [fp, #-140]	; 0xffffff74
   1577c:	str	r4, [sp]
   15780:	bl	11300 <fprintf@plt>
   15784:	str	r0, [sp, #144]	; 0x90
   15788:	b	15b50 <__assert_fail@plt+0x4724>
   1578c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15790:	movw	r1, #703	; 0x2bf
   15794:	movt	r1, #2
   15798:	str	r0, [sp, #140]	; 0x8c
   1579c:	mov	r0, r1
   157a0:	bl	112d0 <gettext@plt>
   157a4:	ldr	r1, [fp, #8]
   157a8:	ldr	r2, [r1]
   157ac:	ldr	r1, [fp, #8]
   157b0:	ldr	r3, [r1, #4]
   157b4:	ldr	r1, [fp, #8]
   157b8:	ldr	r1, [r1, #8]
   157bc:	ldr	lr, [fp, #8]
   157c0:	ldr	lr, [lr, #12]
   157c4:	ldr	ip, [sp, #140]	; 0x8c
   157c8:	str	r0, [sp, #136]	; 0x88
   157cc:	mov	r0, ip
   157d0:	ldr	r4, [sp, #136]	; 0x88
   157d4:	str	r1, [sp, #132]	; 0x84
   157d8:	mov	r1, r4
   157dc:	ldr	r5, [sp, #132]	; 0x84
   157e0:	str	r5, [sp]
   157e4:	str	lr, [sp, #4]
   157e8:	bl	11300 <fprintf@plt>
   157ec:	str	r0, [sp, #128]	; 0x80
   157f0:	b	15b50 <__assert_fail@plt+0x4724>
   157f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   157f8:	movw	r1, #735	; 0x2df
   157fc:	movt	r1, #2
   15800:	str	r0, [sp, #124]	; 0x7c
   15804:	mov	r0, r1
   15808:	bl	112d0 <gettext@plt>
   1580c:	ldr	r1, [fp, #8]
   15810:	ldr	r2, [r1]
   15814:	ldr	r1, [fp, #8]
   15818:	ldr	r3, [r1, #4]
   1581c:	ldr	r1, [fp, #8]
   15820:	ldr	r1, [r1, #8]
   15824:	ldr	lr, [fp, #8]
   15828:	ldr	lr, [lr, #12]
   1582c:	ldr	ip, [fp, #8]
   15830:	ldr	ip, [ip, #16]
   15834:	ldr	r4, [sp, #124]	; 0x7c
   15838:	str	r0, [sp, #120]	; 0x78
   1583c:	mov	r0, r4
   15840:	ldr	r5, [sp, #120]	; 0x78
   15844:	str	r1, [sp, #116]	; 0x74
   15848:	mov	r1, r5
   1584c:	ldr	r6, [sp, #116]	; 0x74
   15850:	str	r6, [sp]
   15854:	str	lr, [sp, #4]
   15858:	str	ip, [sp, #8]
   1585c:	bl	11300 <fprintf@plt>
   15860:	str	r0, [sp, #112]	; 0x70
   15864:	b	15b50 <__assert_fail@plt+0x4724>
   15868:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1586c:	movw	r1, #771	; 0x303
   15870:	movt	r1, #2
   15874:	str	r0, [sp, #108]	; 0x6c
   15878:	mov	r0, r1
   1587c:	bl	112d0 <gettext@plt>
   15880:	ldr	r1, [fp, #8]
   15884:	ldr	r2, [r1]
   15888:	ldr	r1, [fp, #8]
   1588c:	ldr	r3, [r1, #4]
   15890:	ldr	r1, [fp, #8]
   15894:	ldr	r1, [r1, #8]
   15898:	ldr	lr, [fp, #8]
   1589c:	ldr	lr, [lr, #12]
   158a0:	ldr	ip, [fp, #8]
   158a4:	ldr	ip, [ip, #16]
   158a8:	ldr	r4, [fp, #8]
   158ac:	ldr	r4, [r4, #20]
   158b0:	ldr	r5, [sp, #108]	; 0x6c
   158b4:	str	r0, [sp, #104]	; 0x68
   158b8:	mov	r0, r5
   158bc:	ldr	r6, [sp, #104]	; 0x68
   158c0:	str	r1, [sp, #100]	; 0x64
   158c4:	mov	r1, r6
   158c8:	ldr	r7, [sp, #100]	; 0x64
   158cc:	str	r7, [sp]
   158d0:	str	lr, [sp, #4]
   158d4:	str	ip, [sp, #8]
   158d8:	str	r4, [sp, #12]
   158dc:	bl	11300 <fprintf@plt>
   158e0:	str	r0, [sp, #96]	; 0x60
   158e4:	b	15b50 <__assert_fail@plt+0x4724>
   158e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   158ec:	movw	r1, #811	; 0x32b
   158f0:	movt	r1, #2
   158f4:	str	r0, [sp, #92]	; 0x5c
   158f8:	mov	r0, r1
   158fc:	bl	112d0 <gettext@plt>
   15900:	ldr	r1, [fp, #8]
   15904:	ldr	r2, [r1]
   15908:	ldr	r1, [fp, #8]
   1590c:	ldr	r3, [r1, #4]
   15910:	ldr	r1, [fp, #8]
   15914:	ldr	r1, [r1, #8]
   15918:	ldr	lr, [fp, #8]
   1591c:	ldr	lr, [lr, #12]
   15920:	ldr	ip, [fp, #8]
   15924:	ldr	ip, [ip, #16]
   15928:	ldr	r4, [fp, #8]
   1592c:	ldr	r4, [r4, #20]
   15930:	ldr	r5, [fp, #8]
   15934:	ldr	r5, [r5, #24]
   15938:	ldr	r6, [sp, #92]	; 0x5c
   1593c:	str	r0, [sp, #88]	; 0x58
   15940:	mov	r0, r6
   15944:	ldr	r7, [sp, #88]	; 0x58
   15948:	str	r1, [sp, #84]	; 0x54
   1594c:	mov	r1, r7
   15950:	ldr	r8, [sp, #84]	; 0x54
   15954:	str	r8, [sp]
   15958:	str	lr, [sp, #4]
   1595c:	str	ip, [sp, #8]
   15960:	str	r4, [sp, #12]
   15964:	str	r5, [sp, #16]
   15968:	bl	11300 <fprintf@plt>
   1596c:	str	r0, [sp, #80]	; 0x50
   15970:	b	15b50 <__assert_fail@plt+0x4724>
   15974:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15978:	movw	r1, #855	; 0x357
   1597c:	movt	r1, #2
   15980:	str	r0, [sp, #76]	; 0x4c
   15984:	mov	r0, r1
   15988:	bl	112d0 <gettext@plt>
   1598c:	ldr	r1, [fp, #8]
   15990:	ldr	r2, [r1]
   15994:	ldr	r1, [fp, #8]
   15998:	ldr	r3, [r1, #4]
   1599c:	ldr	r1, [fp, #8]
   159a0:	ldr	r1, [r1, #8]
   159a4:	ldr	lr, [fp, #8]
   159a8:	ldr	lr, [lr, #12]
   159ac:	ldr	ip, [fp, #8]
   159b0:	ldr	ip, [ip, #16]
   159b4:	ldr	r4, [fp, #8]
   159b8:	ldr	r4, [r4, #20]
   159bc:	ldr	r5, [fp, #8]
   159c0:	ldr	r5, [r5, #24]
   159c4:	ldr	r6, [fp, #8]
   159c8:	ldr	r6, [r6, #28]
   159cc:	ldr	r7, [sp, #76]	; 0x4c
   159d0:	str	r0, [sp, #72]	; 0x48
   159d4:	mov	r0, r7
   159d8:	ldr	r8, [sp, #72]	; 0x48
   159dc:	str	r1, [sp, #68]	; 0x44
   159e0:	mov	r1, r8
   159e4:	ldr	r9, [sp, #68]	; 0x44
   159e8:	str	r9, [sp]
   159ec:	str	lr, [sp, #4]
   159f0:	str	ip, [sp, #8]
   159f4:	str	r4, [sp, #12]
   159f8:	str	r5, [sp, #16]
   159fc:	str	r6, [sp, #20]
   15a00:	bl	11300 <fprintf@plt>
   15a04:	str	r0, [sp, #64]	; 0x40
   15a08:	b	15b50 <__assert_fail@plt+0x4724>
   15a0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15a10:	movw	r1, #903	; 0x387
   15a14:	movt	r1, #2
   15a18:	str	r0, [sp, #60]	; 0x3c
   15a1c:	mov	r0, r1
   15a20:	bl	112d0 <gettext@plt>
   15a24:	ldr	r1, [fp, #8]
   15a28:	ldr	r2, [r1]
   15a2c:	ldr	r1, [fp, #8]
   15a30:	ldr	r3, [r1, #4]
   15a34:	ldr	r1, [fp, #8]
   15a38:	ldr	r1, [r1, #8]
   15a3c:	ldr	lr, [fp, #8]
   15a40:	ldr	lr, [lr, #12]
   15a44:	ldr	ip, [fp, #8]
   15a48:	ldr	ip, [ip, #16]
   15a4c:	ldr	r4, [fp, #8]
   15a50:	ldr	r4, [r4, #20]
   15a54:	ldr	r5, [fp, #8]
   15a58:	ldr	r5, [r5, #24]
   15a5c:	ldr	r6, [fp, #8]
   15a60:	ldr	r6, [r6, #28]
   15a64:	ldr	r7, [fp, #8]
   15a68:	ldr	r7, [r7, #32]
   15a6c:	ldr	r8, [sp, #60]	; 0x3c
   15a70:	str	r0, [sp, #56]	; 0x38
   15a74:	mov	r0, r8
   15a78:	ldr	r9, [sp, #56]	; 0x38
   15a7c:	str	r1, [sp, #52]	; 0x34
   15a80:	mov	r1, r9
   15a84:	ldr	sl, [sp, #52]	; 0x34
   15a88:	str	sl, [sp]
   15a8c:	str	lr, [sp, #4]
   15a90:	str	ip, [sp, #8]
   15a94:	str	r4, [sp, #12]
   15a98:	str	r5, [sp, #16]
   15a9c:	str	r6, [sp, #20]
   15aa0:	str	r7, [sp, #24]
   15aa4:	bl	11300 <fprintf@plt>
   15aa8:	str	r0, [sp, #48]	; 0x30
   15aac:	b	15b50 <__assert_fail@plt+0x4724>
   15ab0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15ab4:	movw	r1, #955	; 0x3bb
   15ab8:	movt	r1, #2
   15abc:	str	r0, [sp, #44]	; 0x2c
   15ac0:	mov	r0, r1
   15ac4:	bl	112d0 <gettext@plt>
   15ac8:	ldr	r1, [fp, #8]
   15acc:	ldr	r2, [r1]
   15ad0:	ldr	r1, [fp, #8]
   15ad4:	ldr	r3, [r1, #4]
   15ad8:	ldr	r1, [fp, #8]
   15adc:	ldr	r1, [r1, #8]
   15ae0:	ldr	lr, [fp, #8]
   15ae4:	ldr	lr, [lr, #12]
   15ae8:	ldr	ip, [fp, #8]
   15aec:	ldr	ip, [ip, #16]
   15af0:	ldr	r4, [fp, #8]
   15af4:	ldr	r4, [r4, #20]
   15af8:	ldr	r5, [fp, #8]
   15afc:	ldr	r5, [r5, #24]
   15b00:	ldr	r6, [fp, #8]
   15b04:	ldr	r6, [r6, #28]
   15b08:	ldr	r7, [fp, #8]
   15b0c:	ldr	r7, [r7, #32]
   15b10:	ldr	r8, [sp, #44]	; 0x2c
   15b14:	str	r0, [sp, #40]	; 0x28
   15b18:	mov	r0, r8
   15b1c:	ldr	r9, [sp, #40]	; 0x28
   15b20:	str	r1, [sp, #36]	; 0x24
   15b24:	mov	r1, r9
   15b28:	ldr	sl, [sp, #36]	; 0x24
   15b2c:	str	sl, [sp]
   15b30:	str	lr, [sp, #4]
   15b34:	str	ip, [sp, #8]
   15b38:	str	r4, [sp, #12]
   15b3c:	str	r5, [sp, #16]
   15b40:	str	r6, [sp, #20]
   15b44:	str	r7, [sp, #24]
   15b48:	bl	11300 <fprintf@plt>
   15b4c:	str	r0, [sp, #32]
   15b50:	sub	sp, fp, #28
   15b54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b58:	push	{fp, lr}
   15b5c:	mov	fp, sp
   15b60:	sub	sp, sp, #32
   15b64:	ldr	ip, [fp, #8]
   15b68:	str	r0, [fp, #-4]
   15b6c:	str	r1, [fp, #-8]
   15b70:	str	r2, [fp, #-12]
   15b74:	str	r3, [sp, #16]
   15b78:	movw	r0, #0
   15b7c:	str	r0, [sp, #12]
   15b80:	str	ip, [sp, #8]
   15b84:	ldr	r0, [fp, #8]
   15b88:	ldr	r1, [sp, #12]
   15b8c:	add	r0, r0, r1, lsl #2
   15b90:	ldr	r0, [r0]
   15b94:	movw	r1, #0
   15b98:	cmp	r0, r1
   15b9c:	beq	15bb4 <__assert_fail@plt+0x4788>
   15ba0:	b	15ba4 <__assert_fail@plt+0x4778>
   15ba4:	ldr	r0, [sp, #12]
   15ba8:	add	r0, r0, #1
   15bac:	str	r0, [sp, #12]
   15bb0:	b	15b84 <__assert_fail@plt+0x4758>
   15bb4:	ldr	r0, [fp, #-4]
   15bb8:	ldr	r1, [fp, #-8]
   15bbc:	ldr	r2, [fp, #-12]
   15bc0:	ldr	r3, [sp, #16]
   15bc4:	ldr	ip, [fp, #8]
   15bc8:	ldr	lr, [sp, #12]
   15bcc:	str	ip, [sp]
   15bd0:	str	lr, [sp, #4]
   15bd4:	bl	15534 <__assert_fail@plt+0x4108>
   15bd8:	mov	sp, fp
   15bdc:	pop	{fp, pc}
   15be0:	push	{fp, lr}
   15be4:	mov	fp, sp
   15be8:	sub	sp, sp, #80	; 0x50
   15bec:	ldr	ip, [fp, #8]
   15bf0:	str	ip, [fp, #-4]
   15bf4:	str	r0, [fp, #-8]
   15bf8:	str	r1, [fp, #-12]
   15bfc:	str	r2, [fp, #-16]
   15c00:	str	r3, [fp, #-20]	; 0xffffffec
   15c04:	movw	r0, #0
   15c08:	str	r0, [fp, #-24]	; 0xffffffe8
   15c0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c10:	cmp	r0, #10
   15c14:	movw	r0, #0
   15c18:	str	r0, [sp, #12]
   15c1c:	bcs	15c54 <__assert_fail@plt+0x4828>
   15c20:	ldr	r0, [fp, #-4]
   15c24:	add	r1, r0, #4
   15c28:	str	r1, [fp, #-4]
   15c2c:	ldr	r0, [r0]
   15c30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15c34:	add	r2, sp, #16
   15c38:	add	r1, r2, r1, lsl #2
   15c3c:	str	r0, [r1]
   15c40:	movw	r1, #0
   15c44:	cmp	r0, r1
   15c48:	movw	r0, #0
   15c4c:	movne	r0, #1
   15c50:	str	r0, [sp, #12]
   15c54:	ldr	r0, [sp, #12]
   15c58:	tst	r0, #1
   15c5c:	beq	15c74 <__assert_fail@plt+0x4848>
   15c60:	b	15c64 <__assert_fail@plt+0x4838>
   15c64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c68:	add	r0, r0, #1
   15c6c:	str	r0, [fp, #-24]	; 0xffffffe8
   15c70:	b	15c0c <__assert_fail@plt+0x47e0>
   15c74:	add	r0, sp, #16
   15c78:	ldr	r1, [fp, #-8]
   15c7c:	ldr	r2, [fp, #-12]
   15c80:	ldr	r3, [fp, #-16]
   15c84:	ldr	ip, [fp, #-20]	; 0xffffffec
   15c88:	ldr	lr, [fp, #-24]	; 0xffffffe8
   15c8c:	str	r0, [sp, #8]
   15c90:	mov	r0, r1
   15c94:	mov	r1, r2
   15c98:	mov	r2, r3
   15c9c:	mov	r3, ip
   15ca0:	ldr	ip, [sp, #8]
   15ca4:	str	ip, [sp]
   15ca8:	str	lr, [sp, #4]
   15cac:	bl	15534 <__assert_fail@plt+0x4108>
   15cb0:	mov	sp, fp
   15cb4:	pop	{fp, pc}
   15cb8:	push	{fp, lr}
   15cbc:	mov	fp, sp
   15cc0:	sub	sp, sp, #32
   15cc4:	str	r0, [fp, #-4]
   15cc8:	str	r1, [fp, #-8]
   15ccc:	str	r2, [fp, #-12]
   15cd0:	str	r3, [sp, #16]
   15cd4:	add	r0, fp, #8
   15cd8:	str	r0, [sp, #12]
   15cdc:	ldr	r0, [fp, #-4]
   15ce0:	ldr	r1, [fp, #-8]
   15ce4:	ldr	r2, [fp, #-12]
   15ce8:	ldr	r3, [sp, #16]
   15cec:	ldr	ip, [sp, #12]
   15cf0:	mov	lr, sp
   15cf4:	str	ip, [lr]
   15cf8:	bl	15be0 <__assert_fail@plt+0x47b4>
   15cfc:	add	r0, sp, #12
   15d00:	str	r0, [sp, #8]
   15d04:	mov	sp, fp
   15d08:	pop	{fp, pc}
   15d0c:	push	{fp, lr}
   15d10:	mov	fp, sp
   15d14:	sub	sp, sp, #16
   15d18:	movw	r0, #4492	; 0x118c
   15d1c:	movt	r0, #3
   15d20:	ldr	r1, [r0]
   15d24:	movw	r0, #64287	; 0xfb1f
   15d28:	movt	r0, #1
   15d2c:	bl	11138 <fputs_unlocked@plt>
   15d30:	movw	r1, #1015	; 0x3f7
   15d34:	movt	r1, #2
   15d38:	str	r0, [fp, #-4]
   15d3c:	mov	r0, r1
   15d40:	bl	112d0 <gettext@plt>
   15d44:	movw	r1, #1035	; 0x40b
   15d48:	movt	r1, #2
   15d4c:	bl	11174 <printf@plt>
   15d50:	movw	r1, #1057	; 0x421
   15d54:	movt	r1, #2
   15d58:	str	r0, [sp, #8]
   15d5c:	mov	r0, r1
   15d60:	bl	112d0 <gettext@plt>
   15d64:	movw	r1, #64705	; 0xfcc1
   15d68:	movt	r1, #1
   15d6c:	movw	r2, #65184	; 0xfea0
   15d70:	movt	r2, #1
   15d74:	bl	11174 <printf@plt>
   15d78:	movw	r1, #1077	; 0x435
   15d7c:	movt	r1, #2
   15d80:	str	r0, [sp, #4]
   15d84:	mov	r0, r1
   15d88:	bl	112d0 <gettext@plt>
   15d8c:	movw	r1, #1116	; 0x45c
   15d90:	movt	r1, #2
   15d94:	bl	11174 <printf@plt>
   15d98:	str	r0, [sp]
   15d9c:	mov	sp, fp
   15da0:	pop	{fp, pc}
   15da4:	push	{fp, lr}
   15da8:	mov	fp, sp
   15dac:	sub	sp, sp, #16
   15db0:	str	r0, [fp, #-4]
   15db4:	str	r1, [sp, #8]
   15db8:	str	r2, [sp, #4]
   15dbc:	ldr	r0, [fp, #-4]
   15dc0:	ldr	r1, [sp, #8]
   15dc4:	ldr	r2, [sp, #4]
   15dc8:	bl	15dd4 <__assert_fail@plt+0x49a8>
   15dcc:	mov	sp, fp
   15dd0:	pop	{fp, pc}
   15dd4:	push	{fp, lr}
   15dd8:	mov	fp, sp
   15ddc:	sub	sp, sp, #16
   15de0:	str	r0, [fp, #-4]
   15de4:	str	r1, [sp, #8]
   15de8:	str	r2, [sp, #4]
   15dec:	ldr	r0, [fp, #-4]
   15df0:	ldr	r1, [sp, #8]
   15df4:	ldr	r2, [sp, #4]
   15df8:	bl	1d9f0 <__assert_fail@plt+0xc5c4>
   15dfc:	str	r0, [sp]
   15e00:	ldr	r0, [sp]
   15e04:	movw	r1, #0
   15e08:	cmp	r0, r1
   15e0c:	bne	15e3c <__assert_fail@plt+0x4a10>
   15e10:	ldr	r0, [fp, #-4]
   15e14:	movw	r1, #0
   15e18:	cmp	r0, r1
   15e1c:	beq	15e38 <__assert_fail@plt+0x4a0c>
   15e20:	ldr	r0, [sp, #8]
   15e24:	cmp	r0, #0
   15e28:	beq	15e3c <__assert_fail@plt+0x4a10>
   15e2c:	ldr	r0, [sp, #4]
   15e30:	cmp	r0, #0
   15e34:	beq	15e3c <__assert_fail@plt+0x4a10>
   15e38:	bl	18c24 <__assert_fail@plt+0x77f8>
   15e3c:	ldr	r0, [sp]
   15e40:	mov	sp, fp
   15e44:	pop	{fp, pc}
   15e48:	push	{fp, lr}
   15e4c:	mov	fp, sp
   15e50:	sub	sp, sp, #8
   15e54:	str	r0, [sp, #4]
   15e58:	ldr	r0, [sp, #4]
   15e5c:	bl	1cc74 <__assert_fail@plt+0xb848>
   15e60:	bl	15e6c <__assert_fail@plt+0x4a40>
   15e64:	mov	sp, fp
   15e68:	pop	{fp, pc}
   15e6c:	push	{fp, lr}
   15e70:	mov	fp, sp
   15e74:	sub	sp, sp, #8
   15e78:	str	r0, [sp, #4]
   15e7c:	ldr	r0, [sp, #4]
   15e80:	movw	r1, #0
   15e84:	cmp	r0, r1
   15e88:	bne	15e90 <__assert_fail@plt+0x4a64>
   15e8c:	bl	18c24 <__assert_fail@plt+0x77f8>
   15e90:	ldr	r0, [sp, #4]
   15e94:	mov	sp, fp
   15e98:	pop	{fp, pc}
   15e9c:	push	{fp, lr}
   15ea0:	mov	fp, sp
   15ea4:	sub	sp, sp, #8
   15ea8:	str	r0, [sp, #4]
   15eac:	ldr	r0, [sp, #4]
   15eb0:	bl	1d1d4 <__assert_fail@plt+0xbda8>
   15eb4:	bl	15e6c <__assert_fail@plt+0x4a40>
   15eb8:	mov	sp, fp
   15ebc:	pop	{fp, pc}
   15ec0:	push	{fp, lr}
   15ec4:	mov	fp, sp
   15ec8:	sub	sp, sp, #8
   15ecc:	str	r0, [sp, #4]
   15ed0:	ldr	r0, [sp, #4]
   15ed4:	bl	15e48 <__assert_fail@plt+0x4a1c>
   15ed8:	mov	sp, fp
   15edc:	pop	{fp, pc}
   15ee0:	push	{fp, lr}
   15ee4:	mov	fp, sp
   15ee8:	sub	sp, sp, #16
   15eec:	str	r0, [fp, #-4]
   15ef0:	str	r1, [sp, #8]
   15ef4:	ldr	r0, [fp, #-4]
   15ef8:	ldr	r1, [sp, #8]
   15efc:	bl	1cce4 <__assert_fail@plt+0xb8b8>
   15f00:	str	r0, [sp, #4]
   15f04:	ldr	r0, [sp, #4]
   15f08:	movw	r1, #0
   15f0c:	cmp	r0, r1
   15f10:	bne	15f34 <__assert_fail@plt+0x4b08>
   15f14:	ldr	r0, [fp, #-4]
   15f18:	movw	r1, #0
   15f1c:	cmp	r0, r1
   15f20:	beq	15f30 <__assert_fail@plt+0x4b04>
   15f24:	ldr	r0, [sp, #8]
   15f28:	cmp	r0, #0
   15f2c:	beq	15f34 <__assert_fail@plt+0x4b08>
   15f30:	bl	18c24 <__assert_fail@plt+0x77f8>
   15f34:	ldr	r0, [sp, #4]
   15f38:	mov	sp, fp
   15f3c:	pop	{fp, pc}
   15f40:	push	{fp, lr}
   15f44:	mov	fp, sp
   15f48:	sub	sp, sp, #8
   15f4c:	str	r0, [sp, #4]
   15f50:	str	r1, [sp]
   15f54:	ldr	r0, [sp, #4]
   15f58:	ldr	r1, [sp]
   15f5c:	bl	1d214 <__assert_fail@plt+0xbde8>
   15f60:	bl	15e6c <__assert_fail@plt+0x4a40>
   15f64:	mov	sp, fp
   15f68:	pop	{fp, pc}
   15f6c:	push	{fp, lr}
   15f70:	mov	fp, sp
   15f74:	sub	sp, sp, #16
   15f78:	str	r0, [fp, #-4]
   15f7c:	str	r1, [sp, #8]
   15f80:	str	r2, [sp, #4]
   15f84:	ldr	r0, [fp, #-4]
   15f88:	ldr	r1, [sp, #8]
   15f8c:	ldr	r2, [sp, #4]
   15f90:	bl	1d30c <__assert_fail@plt+0xbee0>
   15f94:	bl	15e6c <__assert_fail@plt+0x4a40>
   15f98:	mov	sp, fp
   15f9c:	pop	{fp, pc}
   15fa0:	push	{fp, lr}
   15fa4:	mov	fp, sp
   15fa8:	sub	sp, sp, #8
   15fac:	str	r0, [sp, #4]
   15fb0:	str	r1, [sp]
   15fb4:	ldr	r1, [sp, #4]
   15fb8:	ldr	r2, [sp]
   15fbc:	movw	r0, #0
   15fc0:	bl	15dd4 <__assert_fail@plt+0x49a8>
   15fc4:	mov	sp, fp
   15fc8:	pop	{fp, pc}
   15fcc:	push	{fp, lr}
   15fd0:	mov	fp, sp
   15fd4:	sub	sp, sp, #8
   15fd8:	str	r0, [sp, #4]
   15fdc:	str	r1, [sp]
   15fe0:	ldr	r1, [sp, #4]
   15fe4:	ldr	r2, [sp]
   15fe8:	movw	r0, #0
   15fec:	bl	15f6c <__assert_fail@plt+0x4b40>
   15ff0:	mov	sp, fp
   15ff4:	pop	{fp, pc}
   15ff8:	push	{fp, lr}
   15ffc:	mov	fp, sp
   16000:	sub	sp, sp, #8
   16004:	str	r0, [sp, #4]
   16008:	str	r1, [sp]
   1600c:	ldr	r0, [sp, #4]
   16010:	ldr	r1, [sp]
   16014:	movw	r2, #1
   16018:	bl	16024 <__assert_fail@plt+0x4bf8>
   1601c:	mov	sp, fp
   16020:	pop	{fp, pc}
   16024:	push	{fp, lr}
   16028:	mov	fp, sp
   1602c:	sub	sp, sp, #16
   16030:	str	r0, [fp, #-4]
   16034:	str	r1, [sp, #8]
   16038:	str	r2, [sp, #4]
   1603c:	ldr	r0, [sp, #8]
   16040:	ldr	r0, [r0]
   16044:	str	r0, [sp]
   16048:	ldr	r0, [fp, #-4]
   1604c:	movw	r1, #0
   16050:	cmp	r0, r1
   16054:	bne	160a0 <__assert_fail@plt+0x4c74>
   16058:	ldr	r0, [sp]
   1605c:	cmp	r0, #0
   16060:	bne	1609c <__assert_fail@plt+0x4c70>
   16064:	ldr	r0, [sp, #4]
   16068:	movw	r1, #64	; 0x40
   1606c:	udiv	r0, r1, r0
   16070:	str	r0, [sp]
   16074:	ldr	r0, [sp]
   16078:	cmp	r0, #0
   1607c:	movw	r0, #0
   16080:	movne	r0, #1
   16084:	mvn	r1, #0
   16088:	eor	r0, r0, r1
   1608c:	and	r0, r0, #1
   16090:	ldr	r1, [sp]
   16094:	add	r0, r1, r0
   16098:	str	r0, [sp]
   1609c:	b	160d0 <__assert_fail@plt+0x4ca4>
   160a0:	ldr	r0, [sp]
   160a4:	ldr	r1, [sp]
   160a8:	lsr	r1, r1, #1
   160ac:	add	r1, r1, #1
   160b0:	adds	r0, r0, r1
   160b4:	mov	r1, #0
   160b8:	adc	r1, r1, #0
   160bc:	str	r0, [sp]
   160c0:	tst	r1, #1
   160c4:	beq	160cc <__assert_fail@plt+0x4ca0>
   160c8:	bl	18c24 <__assert_fail@plt+0x77f8>
   160cc:	b	160d0 <__assert_fail@plt+0x4ca4>
   160d0:	ldr	r0, [fp, #-4]
   160d4:	ldr	r1, [sp]
   160d8:	ldr	r2, [sp, #4]
   160dc:	bl	15dd4 <__assert_fail@plt+0x49a8>
   160e0:	str	r0, [fp, #-4]
   160e4:	ldr	r0, [sp]
   160e8:	ldr	r1, [sp, #8]
   160ec:	str	r0, [r1]
   160f0:	ldr	r0, [fp, #-4]
   160f4:	mov	sp, fp
   160f8:	pop	{fp, pc}
   160fc:	push	{fp, lr}
   16100:	mov	fp, sp
   16104:	sub	sp, sp, #376	; 0x178
   16108:	ldr	ip, [fp, #8]
   1610c:	str	r0, [fp, #-4]
   16110:	str	r1, [fp, #-8]
   16114:	str	r2, [fp, #-12]
   16118:	str	r3, [fp, #-16]
   1611c:	ldr	r0, [fp, #-8]
   16120:	ldr	r0, [r0]
   16124:	str	r0, [fp, #-20]	; 0xffffffec
   16128:	ldr	r0, [fp, #-20]	; 0xffffffec
   1612c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16130:	asr	r1, r1, #1
   16134:	add	r1, r0, r1
   16138:	mov	r2, #1
   1613c:	cmp	r1, r0
   16140:	movwvc	r2, #0
   16144:	str	r1, [fp, #-24]	; 0xffffffe8
   16148:	tst	r2, #1
   1614c:	str	ip, [fp, #-36]	; 0xffffffdc
   16150:	beq	1615c <__assert_fail@plt+0x4d30>
   16154:	ldr	r0, [pc, #4044]	; 17128 <__assert_fail@plt+0x5cfc>
   16158:	str	r0, [fp, #-24]	; 0xffffffe8
   1615c:	ldr	r0, [fp, #-16]
   16160:	movw	r1, #0
   16164:	cmp	r1, r0
   16168:	bgt	16184 <__assert_fail@plt+0x4d58>
   1616c:	ldr	r0, [fp, #-16]
   16170:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16174:	cmp	r0, r1
   16178:	bge	16184 <__assert_fail@plt+0x4d58>
   1617c:	ldr	r0, [fp, #-16]
   16180:	str	r0, [fp, #-24]	; 0xffffffe8
   16184:	b	1655c <__assert_fail@plt+0x5130>
   16188:	b	1618c <__assert_fail@plt+0x4d60>
   1618c:	ldr	r0, [fp, #8]
   16190:	cmp	r0, #0
   16194:	bge	162a8 <__assert_fail@plt+0x4e7c>
   16198:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1619c:	cmp	r0, #0
   161a0:	bge	1622c <__assert_fail@plt+0x4e00>
   161a4:	b	161a8 <__assert_fail@plt+0x4d7c>
   161a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161ac:	ldr	r1, [fp, #8]
   161b0:	movw	r2, #127	; 0x7f
   161b4:	sdiv	r1, r2, r1
   161b8:	cmp	r0, r1
   161bc:	blt	16348 <__assert_fail@plt+0x4f1c>
   161c0:	b	16360 <__assert_fail@plt+0x4f34>
   161c4:	b	161c8 <__assert_fail@plt+0x4d9c>
   161c8:	ldr	r0, [pc, #4076]	; 171bc <__assert_fail@plt+0x5d90>
   161cc:	ldr	r1, [fp, #8]
   161d0:	cmp	r1, r0
   161d4:	blt	161ec <__assert_fail@plt+0x4dc0>
   161d8:	b	161f8 <__assert_fail@plt+0x4dcc>
   161dc:	ldr	r0, [fp, #8]
   161e0:	movw	r1, #0
   161e4:	cmp	r1, r0
   161e8:	bge	161f8 <__assert_fail@plt+0x4dcc>
   161ec:	movw	r0, #0
   161f0:	str	r0, [fp, #-40]	; 0xffffffd8
   161f4:	b	16210 <__assert_fail@plt+0x4de4>
   161f8:	ldr	r0, [fp, #8]
   161fc:	movw	r1, #0
   16200:	sub	r0, r1, r0
   16204:	movw	r1, #127	; 0x7f
   16208:	sdiv	r0, r1, r0
   1620c:	str	r0, [fp, #-40]	; 0xffffffd8
   16210:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16214:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16218:	mvn	r2, #0
   1621c:	sub	r1, r2, r1
   16220:	cmp	r0, r1
   16224:	ble	16348 <__assert_fail@plt+0x4f1c>
   16228:	b	16360 <__assert_fail@plt+0x4f34>
   1622c:	b	16230 <__assert_fail@plt+0x4e04>
   16230:	b	1628c <__assert_fail@plt+0x4e60>
   16234:	b	1628c <__assert_fail@plt+0x4e60>
   16238:	ldr	r0, [fp, #8]
   1623c:	cmn	r0, #1
   16240:	bne	1628c <__assert_fail@plt+0x4e60>
   16244:	b	16248 <__assert_fail@plt+0x4e1c>
   16248:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1624c:	mvn	r1, #127	; 0x7f
   16250:	add	r0, r0, r1
   16254:	movw	r1, #0
   16258:	cmp	r1, r0
   1625c:	blt	16348 <__assert_fail@plt+0x4f1c>
   16260:	b	16360 <__assert_fail@plt+0x4f34>
   16264:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16268:	movw	r1, #0
   1626c:	cmp	r1, r0
   16270:	bge	16360 <__assert_fail@plt+0x4f34>
   16274:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16278:	sub	r0, r0, #1
   1627c:	movw	r1, #127	; 0x7f
   16280:	cmp	r1, r0
   16284:	blt	16348 <__assert_fail@plt+0x4f1c>
   16288:	b	16360 <__assert_fail@plt+0x4f34>
   1628c:	ldr	r0, [fp, #8]
   16290:	mvn	r1, #127	; 0x7f
   16294:	sdiv	r0, r1, r0
   16298:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1629c:	cmp	r0, r1
   162a0:	blt	16348 <__assert_fail@plt+0x4f1c>
   162a4:	b	16360 <__assert_fail@plt+0x4f34>
   162a8:	ldr	r0, [fp, #8]
   162ac:	cmp	r0, #0
   162b0:	bne	162b8 <__assert_fail@plt+0x4e8c>
   162b4:	b	16360 <__assert_fail@plt+0x4f34>
   162b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   162bc:	cmp	r0, #0
   162c0:	bge	16330 <__assert_fail@plt+0x4f04>
   162c4:	b	162c8 <__assert_fail@plt+0x4e9c>
   162c8:	b	16314 <__assert_fail@plt+0x4ee8>
   162cc:	b	16314 <__assert_fail@plt+0x4ee8>
   162d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   162d4:	cmn	r0, #1
   162d8:	bne	16314 <__assert_fail@plt+0x4ee8>
   162dc:	b	162e0 <__assert_fail@plt+0x4eb4>
   162e0:	ldr	r0, [fp, #8]
   162e4:	mvn	r1, #127	; 0x7f
   162e8:	add	r0, r0, r1
   162ec:	movw	r1, #0
   162f0:	cmp	r1, r0
   162f4:	blt	16348 <__assert_fail@plt+0x4f1c>
   162f8:	b	16360 <__assert_fail@plt+0x4f34>
   162fc:	ldr	r0, [fp, #8]
   16300:	sub	r0, r0, #1
   16304:	movw	r1, #127	; 0x7f
   16308:	cmp	r1, r0
   1630c:	blt	16348 <__assert_fail@plt+0x4f1c>
   16310:	b	16360 <__assert_fail@plt+0x4f34>
   16314:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16318:	mvn	r1, #127	; 0x7f
   1631c:	sdiv	r0, r1, r0
   16320:	ldr	r1, [fp, #8]
   16324:	cmp	r0, r1
   16328:	blt	16348 <__assert_fail@plt+0x4f1c>
   1632c:	b	16360 <__assert_fail@plt+0x4f34>
   16330:	ldr	r0, [fp, #8]
   16334:	movw	r1, #127	; 0x7f
   16338:	sdiv	r0, r1, r0
   1633c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16340:	cmp	r0, r1
   16344:	bge	16360 <__assert_fail@plt+0x4f34>
   16348:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1634c:	ldr	r1, [fp, #8]
   16350:	mul	r0, r0, r1
   16354:	sxtb	r0, r0
   16358:	str	r0, [fp, #-28]	; 0xffffffe4
   1635c:	b	17574 <__assert_fail@plt+0x6148>
   16360:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16364:	ldr	r1, [fp, #8]
   16368:	mul	r0, r0, r1
   1636c:	sxtb	r0, r0
   16370:	str	r0, [fp, #-28]	; 0xffffffe4
   16374:	b	17584 <__assert_fail@plt+0x6158>
   16378:	ldr	r0, [fp, #8]
   1637c:	cmp	r0, #0
   16380:	bge	16490 <__assert_fail@plt+0x5064>
   16384:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16388:	cmp	r0, #0
   1638c:	bge	16418 <__assert_fail@plt+0x4fec>
   16390:	b	16394 <__assert_fail@plt+0x4f68>
   16394:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16398:	ldr	r1, [fp, #8]
   1639c:	movw	r2, #255	; 0xff
   163a0:	sdiv	r1, r2, r1
   163a4:	cmp	r0, r1
   163a8:	blt	1652c <__assert_fail@plt+0x5100>
   163ac:	b	16544 <__assert_fail@plt+0x5118>
   163b0:	b	163b4 <__assert_fail@plt+0x4f88>
   163b4:	ldr	r0, [pc, #3584]	; 171bc <__assert_fail@plt+0x5d90>
   163b8:	ldr	r1, [fp, #8]
   163bc:	cmp	r1, r0
   163c0:	blt	163d8 <__assert_fail@plt+0x4fac>
   163c4:	b	163e4 <__assert_fail@plt+0x4fb8>
   163c8:	ldr	r0, [fp, #8]
   163cc:	movw	r1, #0
   163d0:	cmp	r1, r0
   163d4:	bge	163e4 <__assert_fail@plt+0x4fb8>
   163d8:	movw	r0, #0
   163dc:	str	r0, [fp, #-44]	; 0xffffffd4
   163e0:	b	163fc <__assert_fail@plt+0x4fd0>
   163e4:	ldr	r0, [fp, #8]
   163e8:	movw	r1, #0
   163ec:	sub	r0, r1, r0
   163f0:	movw	r1, #255	; 0xff
   163f4:	sdiv	r0, r1, r0
   163f8:	str	r0, [fp, #-44]	; 0xffffffd4
   163fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16400:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16404:	mvn	r2, #0
   16408:	sub	r1, r2, r1
   1640c:	cmp	r0, r1
   16410:	ble	1652c <__assert_fail@plt+0x5100>
   16414:	b	16544 <__assert_fail@plt+0x5118>
   16418:	b	1641c <__assert_fail@plt+0x4ff0>
   1641c:	b	16474 <__assert_fail@plt+0x5048>
   16420:	b	16474 <__assert_fail@plt+0x5048>
   16424:	ldr	r0, [fp, #8]
   16428:	cmn	r0, #1
   1642c:	bne	16474 <__assert_fail@plt+0x5048>
   16430:	b	16434 <__assert_fail@plt+0x5008>
   16434:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16438:	add	r0, r0, #0
   1643c:	movw	r1, #0
   16440:	cmp	r1, r0
   16444:	blt	1652c <__assert_fail@plt+0x5100>
   16448:	b	16544 <__assert_fail@plt+0x5118>
   1644c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16450:	movw	r1, #0
   16454:	cmp	r1, r0
   16458:	bge	16544 <__assert_fail@plt+0x5118>
   1645c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16460:	sub	r0, r0, #1
   16464:	mvn	r1, #0
   16468:	cmp	r1, r0
   1646c:	blt	1652c <__assert_fail@plt+0x5100>
   16470:	b	16544 <__assert_fail@plt+0x5118>
   16474:	ldr	r0, [fp, #8]
   16478:	movw	r1, #0
   1647c:	sdiv	r0, r1, r0
   16480:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16484:	cmp	r0, r1
   16488:	blt	1652c <__assert_fail@plt+0x5100>
   1648c:	b	16544 <__assert_fail@plt+0x5118>
   16490:	ldr	r0, [fp, #8]
   16494:	cmp	r0, #0
   16498:	bne	164a0 <__assert_fail@plt+0x5074>
   1649c:	b	16544 <__assert_fail@plt+0x5118>
   164a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164a4:	cmp	r0, #0
   164a8:	bge	16514 <__assert_fail@plt+0x50e8>
   164ac:	b	164b0 <__assert_fail@plt+0x5084>
   164b0:	b	164f8 <__assert_fail@plt+0x50cc>
   164b4:	b	164f8 <__assert_fail@plt+0x50cc>
   164b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164bc:	cmn	r0, #1
   164c0:	bne	164f8 <__assert_fail@plt+0x50cc>
   164c4:	b	164c8 <__assert_fail@plt+0x509c>
   164c8:	ldr	r0, [fp, #8]
   164cc:	add	r0, r0, #0
   164d0:	movw	r1, #0
   164d4:	cmp	r1, r0
   164d8:	blt	1652c <__assert_fail@plt+0x5100>
   164dc:	b	16544 <__assert_fail@plt+0x5118>
   164e0:	ldr	r0, [fp, #8]
   164e4:	sub	r0, r0, #1
   164e8:	mvn	r1, #0
   164ec:	cmp	r1, r0
   164f0:	blt	1652c <__assert_fail@plt+0x5100>
   164f4:	b	16544 <__assert_fail@plt+0x5118>
   164f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164fc:	movw	r1, #0
   16500:	sdiv	r0, r1, r0
   16504:	ldr	r1, [fp, #8]
   16508:	cmp	r0, r1
   1650c:	blt	1652c <__assert_fail@plt+0x5100>
   16510:	b	16544 <__assert_fail@plt+0x5118>
   16514:	ldr	r0, [fp, #8]
   16518:	movw	r1, #255	; 0xff
   1651c:	sdiv	r0, r1, r0
   16520:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16524:	cmp	r0, r1
   16528:	bge	16544 <__assert_fail@plt+0x5118>
   1652c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16530:	ldr	r1, [fp, #8]
   16534:	mul	r0, r0, r1
   16538:	and	r0, r0, #255	; 0xff
   1653c:	str	r0, [fp, #-28]	; 0xffffffe4
   16540:	b	17574 <__assert_fail@plt+0x6148>
   16544:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16548:	ldr	r1, [fp, #8]
   1654c:	mul	r0, r0, r1
   16550:	and	r0, r0, #255	; 0xff
   16554:	str	r0, [fp, #-28]	; 0xffffffe4
   16558:	b	17584 <__assert_fail@plt+0x6158>
   1655c:	b	16934 <__assert_fail@plt+0x5508>
   16560:	b	16564 <__assert_fail@plt+0x5138>
   16564:	ldr	r0, [fp, #8]
   16568:	cmp	r0, #0
   1656c:	bge	16680 <__assert_fail@plt+0x5254>
   16570:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16574:	cmp	r0, #0
   16578:	bge	16604 <__assert_fail@plt+0x51d8>
   1657c:	b	16580 <__assert_fail@plt+0x5154>
   16580:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16584:	ldr	r1, [fp, #8]
   16588:	movw	r2, #32767	; 0x7fff
   1658c:	sdiv	r1, r2, r1
   16590:	cmp	r0, r1
   16594:	blt	16720 <__assert_fail@plt+0x52f4>
   16598:	b	16738 <__assert_fail@plt+0x530c>
   1659c:	b	165a0 <__assert_fail@plt+0x5174>
   165a0:	ldr	r0, [pc, #3092]	; 171bc <__assert_fail@plt+0x5d90>
   165a4:	ldr	r1, [fp, #8]
   165a8:	cmp	r1, r0
   165ac:	blt	165c4 <__assert_fail@plt+0x5198>
   165b0:	b	165d0 <__assert_fail@plt+0x51a4>
   165b4:	ldr	r0, [fp, #8]
   165b8:	movw	r1, #0
   165bc:	cmp	r1, r0
   165c0:	bge	165d0 <__assert_fail@plt+0x51a4>
   165c4:	movw	r0, #0
   165c8:	str	r0, [fp, #-48]	; 0xffffffd0
   165cc:	b	165e8 <__assert_fail@plt+0x51bc>
   165d0:	ldr	r0, [fp, #8]
   165d4:	movw	r1, #0
   165d8:	sub	r0, r1, r0
   165dc:	movw	r1, #32767	; 0x7fff
   165e0:	sdiv	r0, r1, r0
   165e4:	str	r0, [fp, #-48]	; 0xffffffd0
   165e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   165ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   165f0:	mvn	r2, #0
   165f4:	sub	r1, r2, r1
   165f8:	cmp	r0, r1
   165fc:	ble	16720 <__assert_fail@plt+0x52f4>
   16600:	b	16738 <__assert_fail@plt+0x530c>
   16604:	b	16608 <__assert_fail@plt+0x51dc>
   16608:	b	16664 <__assert_fail@plt+0x5238>
   1660c:	b	16664 <__assert_fail@plt+0x5238>
   16610:	ldr	r0, [fp, #8]
   16614:	cmn	r0, #1
   16618:	bne	16664 <__assert_fail@plt+0x5238>
   1661c:	b	16620 <__assert_fail@plt+0x51f4>
   16620:	ldr	r0, [pc, #3928]	; 17580 <__assert_fail@plt+0x6154>
   16624:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16628:	add	r0, r1, r0
   1662c:	movw	r1, #0
   16630:	cmp	r1, r0
   16634:	blt	16720 <__assert_fail@plt+0x52f4>
   16638:	b	16738 <__assert_fail@plt+0x530c>
   1663c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16640:	movw	r1, #0
   16644:	cmp	r1, r0
   16648:	bge	16738 <__assert_fail@plt+0x530c>
   1664c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16650:	sub	r0, r0, #1
   16654:	movw	r1, #32767	; 0x7fff
   16658:	cmp	r1, r0
   1665c:	blt	16720 <__assert_fail@plt+0x52f4>
   16660:	b	16738 <__assert_fail@plt+0x530c>
   16664:	ldr	r0, [pc, #3860]	; 17580 <__assert_fail@plt+0x6154>
   16668:	ldr	r1, [fp, #8]
   1666c:	sdiv	r0, r0, r1
   16670:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16674:	cmp	r0, r1
   16678:	blt	16720 <__assert_fail@plt+0x52f4>
   1667c:	b	16738 <__assert_fail@plt+0x530c>
   16680:	ldr	r0, [fp, #8]
   16684:	cmp	r0, #0
   16688:	bne	16690 <__assert_fail@plt+0x5264>
   1668c:	b	16738 <__assert_fail@plt+0x530c>
   16690:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16694:	cmp	r0, #0
   16698:	bge	16708 <__assert_fail@plt+0x52dc>
   1669c:	b	166a0 <__assert_fail@plt+0x5274>
   166a0:	b	166ec <__assert_fail@plt+0x52c0>
   166a4:	b	166ec <__assert_fail@plt+0x52c0>
   166a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166ac:	cmn	r0, #1
   166b0:	bne	166ec <__assert_fail@plt+0x52c0>
   166b4:	b	166b8 <__assert_fail@plt+0x528c>
   166b8:	ldr	r0, [pc, #3776]	; 17580 <__assert_fail@plt+0x6154>
   166bc:	ldr	r1, [fp, #8]
   166c0:	add	r0, r1, r0
   166c4:	movw	r1, #0
   166c8:	cmp	r1, r0
   166cc:	blt	16720 <__assert_fail@plt+0x52f4>
   166d0:	b	16738 <__assert_fail@plt+0x530c>
   166d4:	ldr	r0, [fp, #8]
   166d8:	sub	r0, r0, #1
   166dc:	movw	r1, #32767	; 0x7fff
   166e0:	cmp	r1, r0
   166e4:	blt	16720 <__assert_fail@plt+0x52f4>
   166e8:	b	16738 <__assert_fail@plt+0x530c>
   166ec:	ldr	r0, [pc, #3724]	; 17580 <__assert_fail@plt+0x6154>
   166f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   166f4:	sdiv	r0, r0, r1
   166f8:	ldr	r1, [fp, #8]
   166fc:	cmp	r0, r1
   16700:	blt	16720 <__assert_fail@plt+0x52f4>
   16704:	b	16738 <__assert_fail@plt+0x530c>
   16708:	ldr	r0, [fp, #8]
   1670c:	movw	r1, #32767	; 0x7fff
   16710:	sdiv	r0, r1, r0
   16714:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16718:	cmp	r0, r1
   1671c:	bge	16738 <__assert_fail@plt+0x530c>
   16720:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16724:	ldr	r1, [fp, #8]
   16728:	mul	r0, r0, r1
   1672c:	sxth	r0, r0
   16730:	str	r0, [fp, #-28]	; 0xffffffe4
   16734:	b	17574 <__assert_fail@plt+0x6148>
   16738:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1673c:	ldr	r1, [fp, #8]
   16740:	mul	r0, r0, r1
   16744:	sxth	r0, r0
   16748:	str	r0, [fp, #-28]	; 0xffffffe4
   1674c:	b	17584 <__assert_fail@plt+0x6158>
   16750:	ldr	r0, [fp, #8]
   16754:	cmp	r0, #0
   16758:	bge	16868 <__assert_fail@plt+0x543c>
   1675c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16760:	cmp	r0, #0
   16764:	bge	167f0 <__assert_fail@plt+0x53c4>
   16768:	b	1676c <__assert_fail@plt+0x5340>
   1676c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16770:	ldr	r1, [fp, #8]
   16774:	movw	r2, #65535	; 0xffff
   16778:	sdiv	r1, r2, r1
   1677c:	cmp	r0, r1
   16780:	blt	16904 <__assert_fail@plt+0x54d8>
   16784:	b	1691c <__assert_fail@plt+0x54f0>
   16788:	b	1678c <__assert_fail@plt+0x5360>
   1678c:	ldr	r0, [pc, #2600]	; 171bc <__assert_fail@plt+0x5d90>
   16790:	ldr	r1, [fp, #8]
   16794:	cmp	r1, r0
   16798:	blt	167b0 <__assert_fail@plt+0x5384>
   1679c:	b	167bc <__assert_fail@plt+0x5390>
   167a0:	ldr	r0, [fp, #8]
   167a4:	movw	r1, #0
   167a8:	cmp	r1, r0
   167ac:	bge	167bc <__assert_fail@plt+0x5390>
   167b0:	movw	r0, #0
   167b4:	str	r0, [fp, #-52]	; 0xffffffcc
   167b8:	b	167d4 <__assert_fail@plt+0x53a8>
   167bc:	ldr	r0, [fp, #8]
   167c0:	movw	r1, #0
   167c4:	sub	r0, r1, r0
   167c8:	movw	r1, #65535	; 0xffff
   167cc:	sdiv	r0, r1, r0
   167d0:	str	r0, [fp, #-52]	; 0xffffffcc
   167d4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   167d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   167dc:	mvn	r2, #0
   167e0:	sub	r1, r2, r1
   167e4:	cmp	r0, r1
   167e8:	ble	16904 <__assert_fail@plt+0x54d8>
   167ec:	b	1691c <__assert_fail@plt+0x54f0>
   167f0:	b	167f4 <__assert_fail@plt+0x53c8>
   167f4:	b	1684c <__assert_fail@plt+0x5420>
   167f8:	b	1684c <__assert_fail@plt+0x5420>
   167fc:	ldr	r0, [fp, #8]
   16800:	cmn	r0, #1
   16804:	bne	1684c <__assert_fail@plt+0x5420>
   16808:	b	1680c <__assert_fail@plt+0x53e0>
   1680c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16810:	add	r0, r0, #0
   16814:	movw	r1, #0
   16818:	cmp	r1, r0
   1681c:	blt	16904 <__assert_fail@plt+0x54d8>
   16820:	b	1691c <__assert_fail@plt+0x54f0>
   16824:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16828:	movw	r1, #0
   1682c:	cmp	r1, r0
   16830:	bge	1691c <__assert_fail@plt+0x54f0>
   16834:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16838:	sub	r0, r0, #1
   1683c:	mvn	r1, #0
   16840:	cmp	r1, r0
   16844:	blt	16904 <__assert_fail@plt+0x54d8>
   16848:	b	1691c <__assert_fail@plt+0x54f0>
   1684c:	ldr	r0, [fp, #8]
   16850:	movw	r1, #0
   16854:	sdiv	r0, r1, r0
   16858:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1685c:	cmp	r0, r1
   16860:	blt	16904 <__assert_fail@plt+0x54d8>
   16864:	b	1691c <__assert_fail@plt+0x54f0>
   16868:	ldr	r0, [fp, #8]
   1686c:	cmp	r0, #0
   16870:	bne	16878 <__assert_fail@plt+0x544c>
   16874:	b	1691c <__assert_fail@plt+0x54f0>
   16878:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1687c:	cmp	r0, #0
   16880:	bge	168ec <__assert_fail@plt+0x54c0>
   16884:	b	16888 <__assert_fail@plt+0x545c>
   16888:	b	168d0 <__assert_fail@plt+0x54a4>
   1688c:	b	168d0 <__assert_fail@plt+0x54a4>
   16890:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16894:	cmn	r0, #1
   16898:	bne	168d0 <__assert_fail@plt+0x54a4>
   1689c:	b	168a0 <__assert_fail@plt+0x5474>
   168a0:	ldr	r0, [fp, #8]
   168a4:	add	r0, r0, #0
   168a8:	movw	r1, #0
   168ac:	cmp	r1, r0
   168b0:	blt	16904 <__assert_fail@plt+0x54d8>
   168b4:	b	1691c <__assert_fail@plt+0x54f0>
   168b8:	ldr	r0, [fp, #8]
   168bc:	sub	r0, r0, #1
   168c0:	mvn	r1, #0
   168c4:	cmp	r1, r0
   168c8:	blt	16904 <__assert_fail@plt+0x54d8>
   168cc:	b	1691c <__assert_fail@plt+0x54f0>
   168d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168d4:	movw	r1, #0
   168d8:	sdiv	r0, r1, r0
   168dc:	ldr	r1, [fp, #8]
   168e0:	cmp	r0, r1
   168e4:	blt	16904 <__assert_fail@plt+0x54d8>
   168e8:	b	1691c <__assert_fail@plt+0x54f0>
   168ec:	ldr	r0, [fp, #8]
   168f0:	movw	r1, #65535	; 0xffff
   168f4:	sdiv	r0, r1, r0
   168f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   168fc:	cmp	r0, r1
   16900:	bge	1691c <__assert_fail@plt+0x54f0>
   16904:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16908:	ldr	r1, [fp, #8]
   1690c:	mul	r0, r0, r1
   16910:	uxth	r0, r0
   16914:	str	r0, [fp, #-28]	; 0xffffffe4
   16918:	b	17574 <__assert_fail@plt+0x6148>
   1691c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16920:	ldr	r1, [fp, #8]
   16924:	mul	r0, r0, r1
   16928:	uxth	r0, r0
   1692c:	str	r0, [fp, #-28]	; 0xffffffe4
   16930:	b	17584 <__assert_fail@plt+0x6158>
   16934:	b	16938 <__assert_fail@plt+0x550c>
   16938:	b	1693c <__assert_fail@plt+0x5510>
   1693c:	ldr	r0, [fp, #8]
   16940:	cmp	r0, #0
   16944:	bge	16a48 <__assert_fail@plt+0x561c>
   16948:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1694c:	cmp	r0, #0
   16950:	bge	169dc <__assert_fail@plt+0x55b0>
   16954:	b	16958 <__assert_fail@plt+0x552c>
   16958:	ldr	r0, [pc, #1992]	; 17128 <__assert_fail@plt+0x5cfc>
   1695c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16960:	ldr	r2, [fp, #8]
   16964:	sdiv	r0, r0, r2
   16968:	cmp	r1, r0
   1696c:	blt	16ad8 <__assert_fail@plt+0x56ac>
   16970:	b	16aec <__assert_fail@plt+0x56c0>
   16974:	b	16978 <__assert_fail@plt+0x554c>
   16978:	ldr	r0, [pc, #2108]	; 171bc <__assert_fail@plt+0x5d90>
   1697c:	ldr	r1, [fp, #8]
   16980:	cmp	r1, r0
   16984:	blt	1699c <__assert_fail@plt+0x5570>
   16988:	b	169a8 <__assert_fail@plt+0x557c>
   1698c:	ldr	r0, [fp, #8]
   16990:	movw	r1, #0
   16994:	cmp	r1, r0
   16998:	bge	169a8 <__assert_fail@plt+0x557c>
   1699c:	movw	r0, #0
   169a0:	str	r0, [fp, #-56]	; 0xffffffc8
   169a4:	b	169c0 <__assert_fail@plt+0x5594>
   169a8:	ldr	r0, [pc, #1912]	; 17128 <__assert_fail@plt+0x5cfc>
   169ac:	ldr	r1, [fp, #8]
   169b0:	movw	r2, #0
   169b4:	sub	r1, r2, r1
   169b8:	sdiv	r0, r0, r1
   169bc:	str	r0, [fp, #-56]	; 0xffffffc8
   169c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   169c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   169c8:	mvn	r2, #0
   169cc:	sub	r1, r2, r1
   169d0:	cmp	r0, r1
   169d4:	ble	16ad8 <__assert_fail@plt+0x56ac>
   169d8:	b	16aec <__assert_fail@plt+0x56c0>
   169dc:	ldr	r0, [fp, #8]
   169e0:	cmn	r0, #1
   169e4:	bne	16a2c <__assert_fail@plt+0x5600>
   169e8:	b	169ec <__assert_fail@plt+0x55c0>
   169ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169f0:	add	r0, r0, #-2147483648	; 0x80000000
   169f4:	movw	r1, #0
   169f8:	cmp	r1, r0
   169fc:	blt	16ad8 <__assert_fail@plt+0x56ac>
   16a00:	b	16aec <__assert_fail@plt+0x56c0>
   16a04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a08:	movw	r1, #0
   16a0c:	cmp	r1, r0
   16a10:	bge	16aec <__assert_fail@plt+0x56c0>
   16a14:	ldr	r0, [pc, #1804]	; 17128 <__assert_fail@plt+0x5cfc>
   16a18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a1c:	sub	r1, r1, #1
   16a20:	cmp	r0, r1
   16a24:	blt	16ad8 <__assert_fail@plt+0x56ac>
   16a28:	b	16aec <__assert_fail@plt+0x56c0>
   16a2c:	ldr	r0, [pc, #4072]	; 17a1c <__assert_fail@plt+0x65f0>
   16a30:	ldr	r1, [fp, #8]
   16a34:	sdiv	r0, r0, r1
   16a38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a3c:	cmp	r0, r1
   16a40:	blt	16ad8 <__assert_fail@plt+0x56ac>
   16a44:	b	16aec <__assert_fail@plt+0x56c0>
   16a48:	ldr	r0, [fp, #8]
   16a4c:	cmp	r0, #0
   16a50:	bne	16a58 <__assert_fail@plt+0x562c>
   16a54:	b	16aec <__assert_fail@plt+0x56c0>
   16a58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a5c:	cmp	r0, #0
   16a60:	bge	16ac0 <__assert_fail@plt+0x5694>
   16a64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a68:	cmn	r0, #1
   16a6c:	bne	16aa4 <__assert_fail@plt+0x5678>
   16a70:	b	16a74 <__assert_fail@plt+0x5648>
   16a74:	ldr	r0, [fp, #8]
   16a78:	add	r0, r0, #-2147483648	; 0x80000000
   16a7c:	movw	r1, #0
   16a80:	cmp	r1, r0
   16a84:	blt	16ad8 <__assert_fail@plt+0x56ac>
   16a88:	b	16aec <__assert_fail@plt+0x56c0>
   16a8c:	ldr	r0, [pc, #1684]	; 17128 <__assert_fail@plt+0x5cfc>
   16a90:	ldr	r1, [fp, #8]
   16a94:	sub	r1, r1, #1
   16a98:	cmp	r0, r1
   16a9c:	blt	16ad8 <__assert_fail@plt+0x56ac>
   16aa0:	b	16aec <__assert_fail@plt+0x56c0>
   16aa4:	ldr	r0, [pc, #3952]	; 17a1c <__assert_fail@plt+0x65f0>
   16aa8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16aac:	sdiv	r0, r0, r1
   16ab0:	ldr	r1, [fp, #8]
   16ab4:	cmp	r0, r1
   16ab8:	blt	16ad8 <__assert_fail@plt+0x56ac>
   16abc:	b	16aec <__assert_fail@plt+0x56c0>
   16ac0:	ldr	r0, [pc, #1632]	; 17128 <__assert_fail@plt+0x5cfc>
   16ac4:	ldr	r1, [fp, #8]
   16ac8:	sdiv	r0, r0, r1
   16acc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ad0:	cmp	r0, r1
   16ad4:	bge	16aec <__assert_fail@plt+0x56c0>
   16ad8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16adc:	ldr	r1, [fp, #8]
   16ae0:	mul	r0, r0, r1
   16ae4:	str	r0, [fp, #-28]	; 0xffffffe4
   16ae8:	b	17574 <__assert_fail@plt+0x6148>
   16aec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16af0:	ldr	r1, [fp, #8]
   16af4:	mul	r0, r0, r1
   16af8:	str	r0, [fp, #-28]	; 0xffffffe4
   16afc:	b	17584 <__assert_fail@plt+0x6158>
   16b00:	ldr	r0, [fp, #8]
   16b04:	cmp	r0, #0
   16b08:	bge	16c18 <__assert_fail@plt+0x57ec>
   16b0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b10:	cmp	r0, #0
   16b14:	bge	16ba0 <__assert_fail@plt+0x5774>
   16b18:	b	16b38 <__assert_fail@plt+0x570c>
   16b1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b20:	ldr	r1, [fp, #8]
   16b24:	mvn	r2, #0
   16b28:	udiv	r1, r2, r1
   16b2c:	cmp	r0, r1
   16b30:	bcc	16cb4 <__assert_fail@plt+0x5888>
   16b34:	b	16cc8 <__assert_fail@plt+0x589c>
   16b38:	b	16b3c <__assert_fail@plt+0x5710>
   16b3c:	ldr	r0, [pc, #1656]	; 171bc <__assert_fail@plt+0x5d90>
   16b40:	ldr	r1, [fp, #8]
   16b44:	cmp	r1, r0
   16b48:	blt	16b60 <__assert_fail@plt+0x5734>
   16b4c:	b	16b6c <__assert_fail@plt+0x5740>
   16b50:	ldr	r0, [fp, #8]
   16b54:	movw	r1, #0
   16b58:	cmp	r1, r0
   16b5c:	bge	16b6c <__assert_fail@plt+0x5740>
   16b60:	movw	r0, #1
   16b64:	str	r0, [fp, #-60]	; 0xffffffc4
   16b68:	b	16b84 <__assert_fail@plt+0x5758>
   16b6c:	ldr	r0, [fp, #8]
   16b70:	movw	r1, #0
   16b74:	sub	r0, r1, r0
   16b78:	mvn	r1, #0
   16b7c:	udiv	r0, r1, r0
   16b80:	str	r0, [fp, #-60]	; 0xffffffc4
   16b84:	ldr	r0, [fp, #-60]	; 0xffffffc4
   16b88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b8c:	mvn	r2, #0
   16b90:	sub	r1, r2, r1
   16b94:	cmp	r0, r1
   16b98:	bls	16cb4 <__assert_fail@plt+0x5888>
   16b9c:	b	16cc8 <__assert_fail@plt+0x589c>
   16ba0:	b	16ba4 <__assert_fail@plt+0x5778>
   16ba4:	b	16bfc <__assert_fail@plt+0x57d0>
   16ba8:	b	16bfc <__assert_fail@plt+0x57d0>
   16bac:	ldr	r0, [fp, #8]
   16bb0:	cmn	r0, #1
   16bb4:	bne	16bfc <__assert_fail@plt+0x57d0>
   16bb8:	b	16bbc <__assert_fail@plt+0x5790>
   16bbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16bc0:	add	r0, r0, #0
   16bc4:	movw	r1, #0
   16bc8:	cmp	r1, r0
   16bcc:	blt	16cb4 <__assert_fail@plt+0x5888>
   16bd0:	b	16cc8 <__assert_fail@plt+0x589c>
   16bd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16bd8:	movw	r1, #0
   16bdc:	cmp	r1, r0
   16be0:	bge	16cc8 <__assert_fail@plt+0x589c>
   16be4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16be8:	sub	r0, r0, #1
   16bec:	mvn	r1, #0
   16bf0:	cmp	r1, r0
   16bf4:	blt	16cb4 <__assert_fail@plt+0x5888>
   16bf8:	b	16cc8 <__assert_fail@plt+0x589c>
   16bfc:	ldr	r0, [fp, #8]
   16c00:	movw	r1, #0
   16c04:	sdiv	r0, r1, r0
   16c08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16c0c:	cmp	r0, r1
   16c10:	blt	16cb4 <__assert_fail@plt+0x5888>
   16c14:	b	16cc8 <__assert_fail@plt+0x589c>
   16c18:	ldr	r0, [fp, #8]
   16c1c:	cmp	r0, #0
   16c20:	bne	16c28 <__assert_fail@plt+0x57fc>
   16c24:	b	16cc8 <__assert_fail@plt+0x589c>
   16c28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c2c:	cmp	r0, #0
   16c30:	bge	16c9c <__assert_fail@plt+0x5870>
   16c34:	b	16c38 <__assert_fail@plt+0x580c>
   16c38:	b	16c80 <__assert_fail@plt+0x5854>
   16c3c:	b	16c80 <__assert_fail@plt+0x5854>
   16c40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c44:	cmn	r0, #1
   16c48:	bne	16c80 <__assert_fail@plt+0x5854>
   16c4c:	b	16c50 <__assert_fail@plt+0x5824>
   16c50:	ldr	r0, [fp, #8]
   16c54:	add	r0, r0, #0
   16c58:	movw	r1, #0
   16c5c:	cmp	r1, r0
   16c60:	blt	16cb4 <__assert_fail@plt+0x5888>
   16c64:	b	16cc8 <__assert_fail@plt+0x589c>
   16c68:	ldr	r0, [fp, #8]
   16c6c:	sub	r0, r0, #1
   16c70:	mvn	r1, #0
   16c74:	cmp	r1, r0
   16c78:	blt	16cb4 <__assert_fail@plt+0x5888>
   16c7c:	b	16cc8 <__assert_fail@plt+0x589c>
   16c80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c84:	movw	r1, #0
   16c88:	sdiv	r0, r1, r0
   16c8c:	ldr	r1, [fp, #8]
   16c90:	cmp	r0, r1
   16c94:	blt	16cb4 <__assert_fail@plt+0x5888>
   16c98:	b	16cc8 <__assert_fail@plt+0x589c>
   16c9c:	ldr	r0, [fp, #8]
   16ca0:	mvn	r1, #0
   16ca4:	udiv	r0, r1, r0
   16ca8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16cac:	cmp	r0, r1
   16cb0:	bcs	16cc8 <__assert_fail@plt+0x589c>
   16cb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16cb8:	ldr	r1, [fp, #8]
   16cbc:	mul	r0, r0, r1
   16cc0:	str	r0, [fp, #-28]	; 0xffffffe4
   16cc4:	b	17574 <__assert_fail@plt+0x6148>
   16cc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ccc:	ldr	r1, [fp, #8]
   16cd0:	mul	r0, r0, r1
   16cd4:	str	r0, [fp, #-28]	; 0xffffffe4
   16cd8:	b	17584 <__assert_fail@plt+0x6158>
   16cdc:	b	16ce0 <__assert_fail@plt+0x58b4>
   16ce0:	b	16ce4 <__assert_fail@plt+0x58b8>
   16ce4:	ldr	r0, [fp, #8]
   16ce8:	cmp	r0, #0
   16cec:	bge	16df0 <__assert_fail@plt+0x59c4>
   16cf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16cf4:	cmp	r0, #0
   16cf8:	bge	16d84 <__assert_fail@plt+0x5958>
   16cfc:	b	16d00 <__assert_fail@plt+0x58d4>
   16d00:	ldr	r0, [pc, #1056]	; 17128 <__assert_fail@plt+0x5cfc>
   16d04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d08:	ldr	r2, [fp, #8]
   16d0c:	sdiv	r0, r0, r2
   16d10:	cmp	r1, r0
   16d14:	blt	16e80 <__assert_fail@plt+0x5a54>
   16d18:	b	16e94 <__assert_fail@plt+0x5a68>
   16d1c:	b	16d20 <__assert_fail@plt+0x58f4>
   16d20:	ldr	r0, [pc, #1172]	; 171bc <__assert_fail@plt+0x5d90>
   16d24:	ldr	r1, [fp, #8]
   16d28:	cmp	r1, r0
   16d2c:	blt	16d44 <__assert_fail@plt+0x5918>
   16d30:	b	16d50 <__assert_fail@plt+0x5924>
   16d34:	ldr	r0, [fp, #8]
   16d38:	movw	r1, #0
   16d3c:	cmp	r1, r0
   16d40:	bge	16d50 <__assert_fail@plt+0x5924>
   16d44:	movw	r0, #0
   16d48:	str	r0, [fp, #-64]	; 0xffffffc0
   16d4c:	b	16d68 <__assert_fail@plt+0x593c>
   16d50:	ldr	r0, [pc, #976]	; 17128 <__assert_fail@plt+0x5cfc>
   16d54:	ldr	r1, [fp, #8]
   16d58:	movw	r2, #0
   16d5c:	sub	r1, r2, r1
   16d60:	sdiv	r0, r0, r1
   16d64:	str	r0, [fp, #-64]	; 0xffffffc0
   16d68:	ldr	r0, [fp, #-64]	; 0xffffffc0
   16d6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d70:	mvn	r2, #0
   16d74:	sub	r1, r2, r1
   16d78:	cmp	r0, r1
   16d7c:	ble	16e80 <__assert_fail@plt+0x5a54>
   16d80:	b	16e94 <__assert_fail@plt+0x5a68>
   16d84:	ldr	r0, [fp, #8]
   16d88:	cmn	r0, #1
   16d8c:	bne	16dd4 <__assert_fail@plt+0x59a8>
   16d90:	b	16d94 <__assert_fail@plt+0x5968>
   16d94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d98:	add	r0, r0, #-2147483648	; 0x80000000
   16d9c:	movw	r1, #0
   16da0:	cmp	r1, r0
   16da4:	blt	16e80 <__assert_fail@plt+0x5a54>
   16da8:	b	16e94 <__assert_fail@plt+0x5a68>
   16dac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16db0:	movw	r1, #0
   16db4:	cmp	r1, r0
   16db8:	bge	16e94 <__assert_fail@plt+0x5a68>
   16dbc:	ldr	r0, [pc, #868]	; 17128 <__assert_fail@plt+0x5cfc>
   16dc0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16dc4:	sub	r1, r1, #1
   16dc8:	cmp	r0, r1
   16dcc:	blt	16e80 <__assert_fail@plt+0x5a54>
   16dd0:	b	16e94 <__assert_fail@plt+0x5a68>
   16dd4:	ldr	r0, [pc, #3136]	; 17a1c <__assert_fail@plt+0x65f0>
   16dd8:	ldr	r1, [fp, #8]
   16ddc:	sdiv	r0, r0, r1
   16de0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16de4:	cmp	r0, r1
   16de8:	blt	16e80 <__assert_fail@plt+0x5a54>
   16dec:	b	16e94 <__assert_fail@plt+0x5a68>
   16df0:	ldr	r0, [fp, #8]
   16df4:	cmp	r0, #0
   16df8:	bne	16e00 <__assert_fail@plt+0x59d4>
   16dfc:	b	16e94 <__assert_fail@plt+0x5a68>
   16e00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e04:	cmp	r0, #0
   16e08:	bge	16e68 <__assert_fail@plt+0x5a3c>
   16e0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e10:	cmn	r0, #1
   16e14:	bne	16e4c <__assert_fail@plt+0x5a20>
   16e18:	b	16e1c <__assert_fail@plt+0x59f0>
   16e1c:	ldr	r0, [fp, #8]
   16e20:	add	r0, r0, #-2147483648	; 0x80000000
   16e24:	movw	r1, #0
   16e28:	cmp	r1, r0
   16e2c:	blt	16e80 <__assert_fail@plt+0x5a54>
   16e30:	b	16e94 <__assert_fail@plt+0x5a68>
   16e34:	ldr	r0, [pc, #748]	; 17128 <__assert_fail@plt+0x5cfc>
   16e38:	ldr	r1, [fp, #8]
   16e3c:	sub	r1, r1, #1
   16e40:	cmp	r0, r1
   16e44:	blt	16e80 <__assert_fail@plt+0x5a54>
   16e48:	b	16e94 <__assert_fail@plt+0x5a68>
   16e4c:	ldr	r0, [pc, #3016]	; 17a1c <__assert_fail@plt+0x65f0>
   16e50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e54:	sdiv	r0, r0, r1
   16e58:	ldr	r1, [fp, #8]
   16e5c:	cmp	r0, r1
   16e60:	blt	16e80 <__assert_fail@plt+0x5a54>
   16e64:	b	16e94 <__assert_fail@plt+0x5a68>
   16e68:	ldr	r0, [pc, #696]	; 17128 <__assert_fail@plt+0x5cfc>
   16e6c:	ldr	r1, [fp, #8]
   16e70:	sdiv	r0, r0, r1
   16e74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e78:	cmp	r0, r1
   16e7c:	bge	16e94 <__assert_fail@plt+0x5a68>
   16e80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e84:	ldr	r1, [fp, #8]
   16e88:	mul	r0, r0, r1
   16e8c:	str	r0, [fp, #-28]	; 0xffffffe4
   16e90:	b	17574 <__assert_fail@plt+0x6148>
   16e94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e98:	ldr	r1, [fp, #8]
   16e9c:	mul	r0, r0, r1
   16ea0:	str	r0, [fp, #-28]	; 0xffffffe4
   16ea4:	b	17584 <__assert_fail@plt+0x6158>
   16ea8:	ldr	r0, [fp, #8]
   16eac:	cmp	r0, #0
   16eb0:	bge	16fc0 <__assert_fail@plt+0x5b94>
   16eb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16eb8:	cmp	r0, #0
   16ebc:	bge	16f48 <__assert_fail@plt+0x5b1c>
   16ec0:	b	16ee0 <__assert_fail@plt+0x5ab4>
   16ec4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ec8:	ldr	r1, [fp, #8]
   16ecc:	mvn	r2, #0
   16ed0:	udiv	r1, r2, r1
   16ed4:	cmp	r0, r1
   16ed8:	bcc	1705c <__assert_fail@plt+0x5c30>
   16edc:	b	17070 <__assert_fail@plt+0x5c44>
   16ee0:	b	16ee4 <__assert_fail@plt+0x5ab8>
   16ee4:	ldr	r0, [pc, #720]	; 171bc <__assert_fail@plt+0x5d90>
   16ee8:	ldr	r1, [fp, #8]
   16eec:	cmp	r1, r0
   16ef0:	blt	16f08 <__assert_fail@plt+0x5adc>
   16ef4:	b	16f14 <__assert_fail@plt+0x5ae8>
   16ef8:	ldr	r0, [fp, #8]
   16efc:	movw	r1, #0
   16f00:	cmp	r1, r0
   16f04:	bge	16f14 <__assert_fail@plt+0x5ae8>
   16f08:	movw	r0, #1
   16f0c:	str	r0, [fp, #-68]	; 0xffffffbc
   16f10:	b	16f2c <__assert_fail@plt+0x5b00>
   16f14:	ldr	r0, [fp, #8]
   16f18:	movw	r1, #0
   16f1c:	sub	r0, r1, r0
   16f20:	mvn	r1, #0
   16f24:	udiv	r0, r1, r0
   16f28:	str	r0, [fp, #-68]	; 0xffffffbc
   16f2c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16f30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f34:	mvn	r2, #0
   16f38:	sub	r1, r2, r1
   16f3c:	cmp	r0, r1
   16f40:	bls	1705c <__assert_fail@plt+0x5c30>
   16f44:	b	17070 <__assert_fail@plt+0x5c44>
   16f48:	b	16f4c <__assert_fail@plt+0x5b20>
   16f4c:	b	16fa4 <__assert_fail@plt+0x5b78>
   16f50:	b	16fa4 <__assert_fail@plt+0x5b78>
   16f54:	ldr	r0, [fp, #8]
   16f58:	cmn	r0, #1
   16f5c:	bne	16fa4 <__assert_fail@plt+0x5b78>
   16f60:	b	16f64 <__assert_fail@plt+0x5b38>
   16f64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f68:	add	r0, r0, #0
   16f6c:	movw	r1, #0
   16f70:	cmp	r1, r0
   16f74:	blt	1705c <__assert_fail@plt+0x5c30>
   16f78:	b	17070 <__assert_fail@plt+0x5c44>
   16f7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f80:	movw	r1, #0
   16f84:	cmp	r1, r0
   16f88:	bge	17070 <__assert_fail@plt+0x5c44>
   16f8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f90:	sub	r0, r0, #1
   16f94:	mvn	r1, #0
   16f98:	cmp	r1, r0
   16f9c:	blt	1705c <__assert_fail@plt+0x5c30>
   16fa0:	b	17070 <__assert_fail@plt+0x5c44>
   16fa4:	ldr	r0, [fp, #8]
   16fa8:	movw	r1, #0
   16fac:	sdiv	r0, r1, r0
   16fb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16fb4:	cmp	r0, r1
   16fb8:	blt	1705c <__assert_fail@plt+0x5c30>
   16fbc:	b	17070 <__assert_fail@plt+0x5c44>
   16fc0:	ldr	r0, [fp, #8]
   16fc4:	cmp	r0, #0
   16fc8:	bne	16fd0 <__assert_fail@plt+0x5ba4>
   16fcc:	b	17070 <__assert_fail@plt+0x5c44>
   16fd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fd4:	cmp	r0, #0
   16fd8:	bge	17044 <__assert_fail@plt+0x5c18>
   16fdc:	b	16fe0 <__assert_fail@plt+0x5bb4>
   16fe0:	b	17028 <__assert_fail@plt+0x5bfc>
   16fe4:	b	17028 <__assert_fail@plt+0x5bfc>
   16fe8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fec:	cmn	r0, #1
   16ff0:	bne	17028 <__assert_fail@plt+0x5bfc>
   16ff4:	b	16ff8 <__assert_fail@plt+0x5bcc>
   16ff8:	ldr	r0, [fp, #8]
   16ffc:	add	r0, r0, #0
   17000:	movw	r1, #0
   17004:	cmp	r1, r0
   17008:	blt	1705c <__assert_fail@plt+0x5c30>
   1700c:	b	17070 <__assert_fail@plt+0x5c44>
   17010:	ldr	r0, [fp, #8]
   17014:	sub	r0, r0, #1
   17018:	mvn	r1, #0
   1701c:	cmp	r1, r0
   17020:	blt	1705c <__assert_fail@plt+0x5c30>
   17024:	b	17070 <__assert_fail@plt+0x5c44>
   17028:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1702c:	movw	r1, #0
   17030:	sdiv	r0, r1, r0
   17034:	ldr	r1, [fp, #8]
   17038:	cmp	r0, r1
   1703c:	blt	1705c <__assert_fail@plt+0x5c30>
   17040:	b	17070 <__assert_fail@plt+0x5c44>
   17044:	ldr	r0, [fp, #8]
   17048:	mvn	r1, #0
   1704c:	udiv	r0, r1, r0
   17050:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17054:	cmp	r0, r1
   17058:	bcs	17070 <__assert_fail@plt+0x5c44>
   1705c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17060:	ldr	r1, [fp, #8]
   17064:	mul	r0, r0, r1
   17068:	str	r0, [fp, #-28]	; 0xffffffe4
   1706c:	b	17574 <__assert_fail@plt+0x6148>
   17070:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17074:	ldr	r1, [fp, #8]
   17078:	mul	r0, r0, r1
   1707c:	str	r0, [fp, #-28]	; 0xffffffe4
   17080:	b	17584 <__assert_fail@plt+0x6158>
   17084:	b	17088 <__assert_fail@plt+0x5c5c>
   17088:	ldr	r0, [fp, #8]
   1708c:	cmp	r0, #0
   17090:	bge	17220 <__assert_fail@plt+0x5df4>
   17094:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17098:	cmp	r0, #0
   1709c:	bge	17188 <__assert_fail@plt+0x5d5c>
   170a0:	b	170a4 <__assert_fail@plt+0x5c78>
   170a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170a8:	ldr	r1, [fp, #8]
   170ac:	asr	r3, r1, #31
   170b0:	mvn	r2, #0
   170b4:	mvn	ip, #-2147483648	; 0x80000000
   170b8:	str	r0, [fp, #-72]	; 0xffffffb8
   170bc:	mov	r0, r2
   170c0:	str	r1, [fp, #-76]	; 0xffffffb4
   170c4:	mov	r1, ip
   170c8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   170cc:	bl	1f7b8 <__assert_fail@plt+0xe38c>
   170d0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   170d4:	subs	r0, r2, r0
   170d8:	rscs	r1, r1, r2, asr #31
   170dc:	str	r0, [fp, #-80]	; 0xffffffb0
   170e0:	str	r1, [fp, #-84]	; 0xffffffac
   170e4:	blt	17300 <__assert_fail@plt+0x5ed4>
   170e8:	b	17314 <__assert_fail@plt+0x5ee8>
   170ec:	b	170f0 <__assert_fail@plt+0x5cc4>
   170f0:	ldr	r0, [pc, #196]	; 171bc <__assert_fail@plt+0x5d90>
   170f4:	ldr	r1, [fp, #8]
   170f8:	cmp	r1, r0
   170fc:	blt	17114 <__assert_fail@plt+0x5ce8>
   17100:	b	1712c <__assert_fail@plt+0x5d00>
   17104:	ldr	r0, [fp, #8]
   17108:	movw	r1, #0
   1710c:	cmp	r1, r0
   17110:	bge	1712c <__assert_fail@plt+0x5d00>
   17114:	mov	r0, #0
   17118:	mvn	r1, #0
   1711c:	str	r1, [fp, #-88]	; 0xffffffa8
   17120:	str	r0, [fp, #-92]	; 0xffffffa4
   17124:	b	17160 <__assert_fail@plt+0x5d34>
   17128:	svcvc	0x00ffffff
   1712c:	ldr	r0, [fp, #8]
   17130:	rsb	r0, r0, #0
   17134:	asr	r3, r0, #31
   17138:	mvn	r1, #0
   1713c:	mvn	r2, #-2147483648	; 0x80000000
   17140:	str	r0, [fp, #-96]	; 0xffffffa0
   17144:	mov	r0, r1
   17148:	mov	r1, r2
   1714c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   17150:	bl	1f7b8 <__assert_fail@plt+0xe38c>
   17154:	str	r0, [fp, #-88]	; 0xffffffa8
   17158:	str	r1, [fp, #-92]	; 0xffffffa4
   1715c:	b	17160 <__assert_fail@plt+0x5d34>
   17160:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17164:	ldr	r1, [fp, #-88]	; 0xffffffa8
   17168:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1716c:	mvn	r2, r2
   17170:	subs	r1, r2, r1
   17174:	rscs	r0, r0, r2, asr #31
   17178:	str	r1, [fp, #-100]	; 0xffffff9c
   1717c:	str	r0, [fp, #-104]	; 0xffffff98
   17180:	bge	17300 <__assert_fail@plt+0x5ed4>
   17184:	b	17314 <__assert_fail@plt+0x5ee8>
   17188:	ldr	r0, [fp, #8]
   1718c:	cmn	r0, #1
   17190:	bne	171e0 <__assert_fail@plt+0x5db4>
   17194:	b	17198 <__assert_fail@plt+0x5d6c>
   17198:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1719c:	mov	r1, #-2147483648	; 0x80000000
   171a0:	add	r1, r1, r0, asr #31
   171a4:	rsbs	r0, r0, #0
   171a8:	rscs	r1, r1, #0
   171ac:	str	r0, [fp, #-108]	; 0xffffff94
   171b0:	str	r1, [fp, #-112]	; 0xffffff90
   171b4:	blt	17300 <__assert_fail@plt+0x5ed4>
   171b8:	b	17314 <__assert_fail@plt+0x5ee8>
   171bc:	andhi	r0, r0, r1
   171c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171c4:	movw	r1, #0
   171c8:	cmp	r1, r0
   171cc:	bge	17314 <__assert_fail@plt+0x5ee8>
   171d0:	mov	r0, #0
   171d4:	cmp	r0, #0
   171d8:	bne	17300 <__assert_fail@plt+0x5ed4>
   171dc:	b	17314 <__assert_fail@plt+0x5ee8>
   171e0:	ldr	r0, [fp, #8]
   171e4:	asr	r3, r0, #31
   171e8:	mov	r1, #0
   171ec:	mov	r2, #-2147483648	; 0x80000000
   171f0:	str	r0, [fp, #-116]	; 0xffffff8c
   171f4:	mov	r0, r1
   171f8:	mov	r1, r2
   171fc:	ldr	r2, [fp, #-116]	; 0xffffff8c
   17200:	bl	1f7b8 <__assert_fail@plt+0xe38c>
   17204:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17208:	subs	r0, r0, r2
   1720c:	sbcs	r1, r1, r2, asr #31
   17210:	str	r0, [fp, #-120]	; 0xffffff88
   17214:	str	r1, [fp, #-124]	; 0xffffff84
   17218:	blt	17300 <__assert_fail@plt+0x5ed4>
   1721c:	b	17314 <__assert_fail@plt+0x5ee8>
   17220:	ldr	r0, [fp, #8]
   17224:	cmp	r0, #0
   17228:	bne	17230 <__assert_fail@plt+0x5e04>
   1722c:	b	17314 <__assert_fail@plt+0x5ee8>
   17230:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17234:	cmp	r0, #0
   17238:	bge	172c0 <__assert_fail@plt+0x5e94>
   1723c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17240:	cmn	r0, #1
   17244:	bne	17280 <__assert_fail@plt+0x5e54>
   17248:	b	1724c <__assert_fail@plt+0x5e20>
   1724c:	ldr	r0, [fp, #8]
   17250:	mov	r1, #-2147483648	; 0x80000000
   17254:	add	r1, r1, r0, asr #31
   17258:	rsbs	r0, r0, #0
   1725c:	rscs	r1, r1, #0
   17260:	str	r0, [fp, #-128]	; 0xffffff80
   17264:	str	r1, [fp, #-132]	; 0xffffff7c
   17268:	blt	17300 <__assert_fail@plt+0x5ed4>
   1726c:	b	17314 <__assert_fail@plt+0x5ee8>
   17270:	mov	r0, #0
   17274:	cmp	r0, #0
   17278:	bne	17300 <__assert_fail@plt+0x5ed4>
   1727c:	b	17314 <__assert_fail@plt+0x5ee8>
   17280:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17284:	asr	r3, r0, #31
   17288:	mov	r1, #0
   1728c:	mov	r2, #-2147483648	; 0x80000000
   17290:	str	r0, [fp, #-136]	; 0xffffff78
   17294:	mov	r0, r1
   17298:	mov	r1, r2
   1729c:	ldr	r2, [fp, #-136]	; 0xffffff78
   172a0:	bl	1f7b8 <__assert_fail@plt+0xe38c>
   172a4:	ldr	r2, [fp, #8]
   172a8:	subs	r0, r0, r2
   172ac:	sbcs	r1, r1, r2, asr #31
   172b0:	str	r0, [fp, #-140]	; 0xffffff74
   172b4:	str	r1, [fp, #-144]	; 0xffffff70
   172b8:	blt	17300 <__assert_fail@plt+0x5ed4>
   172bc:	b	17314 <__assert_fail@plt+0x5ee8>
   172c0:	ldr	r0, [fp, #8]
   172c4:	asr	r3, r0, #31
   172c8:	mvn	r1, #0
   172cc:	mvn	r2, #-2147483648	; 0x80000000
   172d0:	str	r0, [fp, #-148]	; 0xffffff6c
   172d4:	mov	r0, r1
   172d8:	mov	r1, r2
   172dc:	ldr	r2, [fp, #-148]	; 0xffffff6c
   172e0:	bl	1f7b8 <__assert_fail@plt+0xe38c>
   172e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   172e8:	subs	r0, r0, r2
   172ec:	sbcs	r1, r1, r2, asr #31
   172f0:	str	r0, [fp, #-152]	; 0xffffff68
   172f4:	str	r1, [fp, #-156]	; 0xffffff64
   172f8:	bge	17314 <__assert_fail@plt+0x5ee8>
   172fc:	b	17300 <__assert_fail@plt+0x5ed4>
   17300:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17304:	ldr	r1, [fp, #8]
   17308:	mul	r0, r0, r1
   1730c:	str	r0, [fp, #-28]	; 0xffffffe4
   17310:	b	17574 <__assert_fail@plt+0x6148>
   17314:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17318:	ldr	r1, [fp, #8]
   1731c:	mul	r0, r0, r1
   17320:	str	r0, [fp, #-28]	; 0xffffffe4
   17324:	b	17584 <__assert_fail@plt+0x6158>
   17328:	ldr	r0, [fp, #8]
   1732c:	cmp	r0, #0
   17330:	bge	17490 <__assert_fail@plt+0x6064>
   17334:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17338:	cmp	r0, #0
   1733c:	bge	17418 <__assert_fail@plt+0x5fec>
   17340:	b	17388 <__assert_fail@plt+0x5f5c>
   17344:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17348:	ldr	r1, [fp, #8]
   1734c:	asr	r3, r1, #31
   17350:	mvn	r2, #0
   17354:	str	r0, [fp, #-160]	; 0xffffff60
   17358:	mov	r0, r2
   1735c:	str	r1, [fp, #-164]	; 0xffffff5c
   17360:	mov	r1, r2
   17364:	ldr	r2, [fp, #-164]	; 0xffffff5c
   17368:	bl	1f88c <__assert_fail@plt+0xe460>
   1736c:	ldr	r2, [fp, #-160]	; 0xffffff60
   17370:	subs	r0, r2, r0
   17374:	rscs	r1, r1, r2, asr #31
   17378:	str	r0, [fp, #-168]	; 0xffffff58
   1737c:	str	r1, [fp, #-172]	; 0xffffff54
   17380:	bcc	1754c <__assert_fail@plt+0x6120>
   17384:	b	17560 <__assert_fail@plt+0x6134>
   17388:	b	1738c <__assert_fail@plt+0x5f60>
   1738c:	ldr	r0, [pc, #-472]	; 171bc <__assert_fail@plt+0x5d90>
   17390:	ldr	r1, [fp, #8]
   17394:	cmp	r1, r0
   17398:	blt	173b0 <__assert_fail@plt+0x5f84>
   1739c:	b	173c4 <__assert_fail@plt+0x5f98>
   173a0:	ldr	r0, [fp, #8]
   173a4:	movw	r1, #0
   173a8:	cmp	r1, r0
   173ac:	bge	173c4 <__assert_fail@plt+0x5f98>
   173b0:	mov	r0, #1
   173b4:	mvn	r1, #0
   173b8:	str	r1, [fp, #-176]	; 0xffffff50
   173bc:	str	r0, [fp, #-180]	; 0xffffff4c
   173c0:	b	173f0 <__assert_fail@plt+0x5fc4>
   173c4:	ldr	r0, [fp, #8]
   173c8:	rsb	r0, r0, #0
   173cc:	asr	r3, r0, #31
   173d0:	mvn	r1, #0
   173d4:	str	r0, [fp, #-184]	; 0xffffff48
   173d8:	mov	r0, r1
   173dc:	ldr	r2, [fp, #-184]	; 0xffffff48
   173e0:	bl	1f88c <__assert_fail@plt+0xe460>
   173e4:	str	r0, [fp, #-176]	; 0xffffff50
   173e8:	str	r1, [fp, #-180]	; 0xffffff4c
   173ec:	b	173f0 <__assert_fail@plt+0x5fc4>
   173f0:	ldr	r0, [fp, #-180]	; 0xffffff4c
   173f4:	ldr	r1, [fp, #-176]	; 0xffffff50
   173f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   173fc:	mvn	r2, r2
   17400:	subs	r1, r2, r1
   17404:	rscs	r0, r0, r2, asr #31
   17408:	str	r1, [sp, #188]	; 0xbc
   1740c:	str	r0, [sp, #184]	; 0xb8
   17410:	bcs	1754c <__assert_fail@plt+0x6120>
   17414:	b	17560 <__assert_fail@plt+0x6134>
   17418:	b	1741c <__assert_fail@plt+0x5ff0>
   1741c:	b	17474 <__assert_fail@plt+0x6048>
   17420:	b	17474 <__assert_fail@plt+0x6048>
   17424:	ldr	r0, [fp, #8]
   17428:	cmn	r0, #1
   1742c:	bne	17474 <__assert_fail@plt+0x6048>
   17430:	b	17434 <__assert_fail@plt+0x6008>
   17434:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17438:	add	r0, r0, #0
   1743c:	movw	r1, #0
   17440:	cmp	r1, r0
   17444:	blt	1754c <__assert_fail@plt+0x6120>
   17448:	b	17560 <__assert_fail@plt+0x6134>
   1744c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17450:	movw	r1, #0
   17454:	cmp	r1, r0
   17458:	bge	17560 <__assert_fail@plt+0x6134>
   1745c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17460:	sub	r0, r0, #1
   17464:	mvn	r1, #0
   17468:	cmp	r1, r0
   1746c:	blt	1754c <__assert_fail@plt+0x6120>
   17470:	b	17560 <__assert_fail@plt+0x6134>
   17474:	ldr	r0, [fp, #8]
   17478:	movw	r1, #0
   1747c:	sdiv	r0, r1, r0
   17480:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17484:	cmp	r0, r1
   17488:	blt	1754c <__assert_fail@plt+0x6120>
   1748c:	b	17560 <__assert_fail@plt+0x6134>
   17490:	ldr	r0, [fp, #8]
   17494:	cmp	r0, #0
   17498:	bne	174a0 <__assert_fail@plt+0x6074>
   1749c:	b	17560 <__assert_fail@plt+0x6134>
   174a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174a4:	cmp	r0, #0
   174a8:	bge	17514 <__assert_fail@plt+0x60e8>
   174ac:	b	174b0 <__assert_fail@plt+0x6084>
   174b0:	b	174f8 <__assert_fail@plt+0x60cc>
   174b4:	b	174f8 <__assert_fail@plt+0x60cc>
   174b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174bc:	cmn	r0, #1
   174c0:	bne	174f8 <__assert_fail@plt+0x60cc>
   174c4:	b	174c8 <__assert_fail@plt+0x609c>
   174c8:	ldr	r0, [fp, #8]
   174cc:	add	r0, r0, #0
   174d0:	movw	r1, #0
   174d4:	cmp	r1, r0
   174d8:	blt	1754c <__assert_fail@plt+0x6120>
   174dc:	b	17560 <__assert_fail@plt+0x6134>
   174e0:	ldr	r0, [fp, #8]
   174e4:	sub	r0, r0, #1
   174e8:	mvn	r1, #0
   174ec:	cmp	r1, r0
   174f0:	blt	1754c <__assert_fail@plt+0x6120>
   174f4:	b	17560 <__assert_fail@plt+0x6134>
   174f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174fc:	movw	r1, #0
   17500:	sdiv	r0, r1, r0
   17504:	ldr	r1, [fp, #8]
   17508:	cmp	r0, r1
   1750c:	blt	1754c <__assert_fail@plt+0x6120>
   17510:	b	17560 <__assert_fail@plt+0x6134>
   17514:	ldr	r0, [fp, #8]
   17518:	asr	r3, r0, #31
   1751c:	mvn	r1, #0
   17520:	str	r0, [sp, #180]	; 0xb4
   17524:	mov	r0, r1
   17528:	ldr	r2, [sp, #180]	; 0xb4
   1752c:	bl	1f88c <__assert_fail@plt+0xe460>
   17530:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17534:	subs	r0, r0, r2
   17538:	sbcs	r1, r1, r2, asr #31
   1753c:	str	r0, [sp, #176]	; 0xb0
   17540:	str	r1, [sp, #172]	; 0xac
   17544:	bcs	17560 <__assert_fail@plt+0x6134>
   17548:	b	1754c <__assert_fail@plt+0x6120>
   1754c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17550:	ldr	r1, [fp, #8]
   17554:	mul	r0, r0, r1
   17558:	str	r0, [fp, #-28]	; 0xffffffe4
   1755c:	b	17574 <__assert_fail@plt+0x6148>
   17560:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17564:	ldr	r1, [fp, #8]
   17568:	mul	r0, r0, r1
   1756c:	str	r0, [fp, #-28]	; 0xffffffe4
   17570:	b	17584 <__assert_fail@plt+0x6158>
   17574:	ldr	r0, [pc, #-1108]	; 17128 <__assert_fail@plt+0x5cfc>
   17578:	str	r0, [sp, #168]	; 0xa8
   1757c:	b	175a4 <__assert_fail@plt+0x6178>
   17580:			; <UNDEFINED> instruction: 0xffff8000
   17584:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17588:	cmp	r0, #64	; 0x40
   1758c:	movw	r0, #0
   17590:	movlt	r0, #1
   17594:	tst	r0, #1
   17598:	movw	r0, #64	; 0x40
   1759c:	moveq	r0, #0
   175a0:	str	r0, [sp, #168]	; 0xa8
   175a4:	ldr	r0, [sp, #168]	; 0xa8
   175a8:	str	r0, [fp, #-32]	; 0xffffffe0
   175ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   175b0:	cmp	r0, #0
   175b4:	beq	175e4 <__assert_fail@plt+0x61b8>
   175b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   175bc:	ldr	r1, [fp, #8]
   175c0:	sdiv	r0, r0, r1
   175c4:	str	r0, [fp, #-24]	; 0xffffffe8
   175c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   175cc:	mov	r1, r0
   175d0:	ldr	r2, [fp, #8]
   175d4:	sdiv	r3, r0, r2
   175d8:	mls	r0, r3, r2, r0
   175dc:	sub	r0, r1, r0
   175e0:	str	r0, [fp, #-28]	; 0xffffffe4
   175e4:	ldr	r0, [fp, #-4]
   175e8:	movw	r1, #0
   175ec:	cmp	r0, r1
   175f0:	bne	17600 <__assert_fail@plt+0x61d4>
   175f4:	ldr	r0, [fp, #-8]
   175f8:	movw	r1, #0
   175fc:	str	r1, [r0]
   17600:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17604:	ldr	r1, [fp, #-20]	; 0xffffffec
   17608:	sub	r0, r0, r1
   1760c:	ldr	r1, [fp, #-12]
   17610:	cmp	r0, r1
   17614:	bge	18a4c <__assert_fail@plt+0x7620>
   17618:	ldr	r0, [fp, #-20]	; 0xffffffec
   1761c:	ldr	r1, [fp, #-12]
   17620:	add	r1, r0, r1
   17624:	mov	r2, #1
   17628:	cmp	r1, r0
   1762c:	movwvc	r2, #0
   17630:	str	r1, [fp, #-24]	; 0xffffffe8
   17634:	tst	r2, #1
   17638:	bne	18a48 <__assert_fail@plt+0x761c>
   1763c:	ldr	r0, [fp, #-16]
   17640:	movw	r1, #0
   17644:	cmp	r1, r0
   17648:	bgt	1765c <__assert_fail@plt+0x6230>
   1764c:	ldr	r0, [fp, #-16]
   17650:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17654:	cmp	r0, r1
   17658:	blt	18a48 <__assert_fail@plt+0x761c>
   1765c:	b	17a38 <__assert_fail@plt+0x660c>
   17660:	b	17664 <__assert_fail@plt+0x6238>
   17664:	ldr	r0, [fp, #8]
   17668:	cmp	r0, #0
   1766c:	bge	17780 <__assert_fail@plt+0x6354>
   17670:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17674:	cmp	r0, #0
   17678:	bge	17704 <__assert_fail@plt+0x62d8>
   1767c:	b	17680 <__assert_fail@plt+0x6254>
   17680:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17684:	ldr	r1, [fp, #8]
   17688:	movw	r2, #127	; 0x7f
   1768c:	sdiv	r1, r2, r1
   17690:	cmp	r0, r1
   17694:	blt	17820 <__assert_fail@plt+0x63f4>
   17698:	b	17838 <__assert_fail@plt+0x640c>
   1769c:	b	176a0 <__assert_fail@plt+0x6274>
   176a0:	ldr	r0, [pc, #-1260]	; 171bc <__assert_fail@plt+0x5d90>
   176a4:	ldr	r1, [fp, #8]
   176a8:	cmp	r1, r0
   176ac:	blt	176c4 <__assert_fail@plt+0x6298>
   176b0:	b	176d0 <__assert_fail@plt+0x62a4>
   176b4:	ldr	r0, [fp, #8]
   176b8:	movw	r1, #0
   176bc:	cmp	r1, r0
   176c0:	bge	176d0 <__assert_fail@plt+0x62a4>
   176c4:	movw	r0, #0
   176c8:	str	r0, [sp, #164]	; 0xa4
   176cc:	b	176e8 <__assert_fail@plt+0x62bc>
   176d0:	ldr	r0, [fp, #8]
   176d4:	movw	r1, #0
   176d8:	sub	r0, r1, r0
   176dc:	movw	r1, #127	; 0x7f
   176e0:	sdiv	r0, r1, r0
   176e4:	str	r0, [sp, #164]	; 0xa4
   176e8:	ldr	r0, [sp, #164]	; 0xa4
   176ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   176f0:	mvn	r2, #0
   176f4:	sub	r1, r2, r1
   176f8:	cmp	r0, r1
   176fc:	ble	17820 <__assert_fail@plt+0x63f4>
   17700:	b	17838 <__assert_fail@plt+0x640c>
   17704:	b	17708 <__assert_fail@plt+0x62dc>
   17708:	b	17764 <__assert_fail@plt+0x6338>
   1770c:	b	17764 <__assert_fail@plt+0x6338>
   17710:	ldr	r0, [fp, #8]
   17714:	cmn	r0, #1
   17718:	bne	17764 <__assert_fail@plt+0x6338>
   1771c:	b	17720 <__assert_fail@plt+0x62f4>
   17720:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17724:	mvn	r1, #127	; 0x7f
   17728:	add	r0, r0, r1
   1772c:	movw	r1, #0
   17730:	cmp	r1, r0
   17734:	blt	17820 <__assert_fail@plt+0x63f4>
   17738:	b	17838 <__assert_fail@plt+0x640c>
   1773c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17740:	movw	r1, #0
   17744:	cmp	r1, r0
   17748:	bge	17838 <__assert_fail@plt+0x640c>
   1774c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17750:	sub	r0, r0, #1
   17754:	movw	r1, #127	; 0x7f
   17758:	cmp	r1, r0
   1775c:	blt	17820 <__assert_fail@plt+0x63f4>
   17760:	b	17838 <__assert_fail@plt+0x640c>
   17764:	ldr	r0, [fp, #8]
   17768:	mvn	r1, #127	; 0x7f
   1776c:	sdiv	r0, r1, r0
   17770:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17774:	cmp	r0, r1
   17778:	blt	17820 <__assert_fail@plt+0x63f4>
   1777c:	b	17838 <__assert_fail@plt+0x640c>
   17780:	ldr	r0, [fp, #8]
   17784:	cmp	r0, #0
   17788:	bne	17790 <__assert_fail@plt+0x6364>
   1778c:	b	17838 <__assert_fail@plt+0x640c>
   17790:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17794:	cmp	r0, #0
   17798:	bge	17808 <__assert_fail@plt+0x63dc>
   1779c:	b	177a0 <__assert_fail@plt+0x6374>
   177a0:	b	177ec <__assert_fail@plt+0x63c0>
   177a4:	b	177ec <__assert_fail@plt+0x63c0>
   177a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177ac:	cmn	r0, #1
   177b0:	bne	177ec <__assert_fail@plt+0x63c0>
   177b4:	b	177b8 <__assert_fail@plt+0x638c>
   177b8:	ldr	r0, [fp, #8]
   177bc:	mvn	r1, #127	; 0x7f
   177c0:	add	r0, r0, r1
   177c4:	movw	r1, #0
   177c8:	cmp	r1, r0
   177cc:	blt	17820 <__assert_fail@plt+0x63f4>
   177d0:	b	17838 <__assert_fail@plt+0x640c>
   177d4:	ldr	r0, [fp, #8]
   177d8:	sub	r0, r0, #1
   177dc:	movw	r1, #127	; 0x7f
   177e0:	cmp	r1, r0
   177e4:	blt	17820 <__assert_fail@plt+0x63f4>
   177e8:	b	17838 <__assert_fail@plt+0x640c>
   177ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177f0:	mvn	r1, #127	; 0x7f
   177f4:	sdiv	r0, r1, r0
   177f8:	ldr	r1, [fp, #8]
   177fc:	cmp	r0, r1
   17800:	blt	17820 <__assert_fail@plt+0x63f4>
   17804:	b	17838 <__assert_fail@plt+0x640c>
   17808:	ldr	r0, [fp, #8]
   1780c:	movw	r1, #127	; 0x7f
   17810:	sdiv	r0, r1, r0
   17814:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17818:	cmp	r0, r1
   1781c:	bge	17838 <__assert_fail@plt+0x640c>
   17820:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17824:	ldr	r1, [fp, #8]
   17828:	mul	r0, r0, r1
   1782c:	sxtb	r0, r0
   17830:	str	r0, [fp, #-28]	; 0xffffffe4
   17834:	b	18a48 <__assert_fail@plt+0x761c>
   17838:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1783c:	ldr	r1, [fp, #8]
   17840:	mul	r0, r0, r1
   17844:	sxtb	r0, r0
   17848:	str	r0, [fp, #-28]	; 0xffffffe4
   1784c:	b	18a4c <__assert_fail@plt+0x7620>
   17850:	ldr	r0, [fp, #8]
   17854:	cmp	r0, #0
   17858:	bge	17968 <__assert_fail@plt+0x653c>
   1785c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17860:	cmp	r0, #0
   17864:	bge	178f0 <__assert_fail@plt+0x64c4>
   17868:	b	1786c <__assert_fail@plt+0x6440>
   1786c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17870:	ldr	r1, [fp, #8]
   17874:	movw	r2, #255	; 0xff
   17878:	sdiv	r1, r2, r1
   1787c:	cmp	r0, r1
   17880:	blt	17a04 <__assert_fail@plt+0x65d8>
   17884:	b	17a20 <__assert_fail@plt+0x65f4>
   17888:	b	1788c <__assert_fail@plt+0x6460>
   1788c:	ldr	r0, [pc, #-1752]	; 171bc <__assert_fail@plt+0x5d90>
   17890:	ldr	r1, [fp, #8]
   17894:	cmp	r1, r0
   17898:	blt	178b0 <__assert_fail@plt+0x6484>
   1789c:	b	178bc <__assert_fail@plt+0x6490>
   178a0:	ldr	r0, [fp, #8]
   178a4:	movw	r1, #0
   178a8:	cmp	r1, r0
   178ac:	bge	178bc <__assert_fail@plt+0x6490>
   178b0:	movw	r0, #0
   178b4:	str	r0, [sp, #160]	; 0xa0
   178b8:	b	178d4 <__assert_fail@plt+0x64a8>
   178bc:	ldr	r0, [fp, #8]
   178c0:	movw	r1, #0
   178c4:	sub	r0, r1, r0
   178c8:	movw	r1, #255	; 0xff
   178cc:	sdiv	r0, r1, r0
   178d0:	str	r0, [sp, #160]	; 0xa0
   178d4:	ldr	r0, [sp, #160]	; 0xa0
   178d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   178dc:	mvn	r2, #0
   178e0:	sub	r1, r2, r1
   178e4:	cmp	r0, r1
   178e8:	ble	17a04 <__assert_fail@plt+0x65d8>
   178ec:	b	17a20 <__assert_fail@plt+0x65f4>
   178f0:	b	178f4 <__assert_fail@plt+0x64c8>
   178f4:	b	1794c <__assert_fail@plt+0x6520>
   178f8:	b	1794c <__assert_fail@plt+0x6520>
   178fc:	ldr	r0, [fp, #8]
   17900:	cmn	r0, #1
   17904:	bne	1794c <__assert_fail@plt+0x6520>
   17908:	b	1790c <__assert_fail@plt+0x64e0>
   1790c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17910:	add	r0, r0, #0
   17914:	movw	r1, #0
   17918:	cmp	r1, r0
   1791c:	blt	17a04 <__assert_fail@plt+0x65d8>
   17920:	b	17a20 <__assert_fail@plt+0x65f4>
   17924:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17928:	movw	r1, #0
   1792c:	cmp	r1, r0
   17930:	bge	17a20 <__assert_fail@plt+0x65f4>
   17934:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17938:	sub	r0, r0, #1
   1793c:	mvn	r1, #0
   17940:	cmp	r1, r0
   17944:	blt	17a04 <__assert_fail@plt+0x65d8>
   17948:	b	17a20 <__assert_fail@plt+0x65f4>
   1794c:	ldr	r0, [fp, #8]
   17950:	movw	r1, #0
   17954:	sdiv	r0, r1, r0
   17958:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1795c:	cmp	r0, r1
   17960:	blt	17a04 <__assert_fail@plt+0x65d8>
   17964:	b	17a20 <__assert_fail@plt+0x65f4>
   17968:	ldr	r0, [fp, #8]
   1796c:	cmp	r0, #0
   17970:	bne	17978 <__assert_fail@plt+0x654c>
   17974:	b	17a20 <__assert_fail@plt+0x65f4>
   17978:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1797c:	cmp	r0, #0
   17980:	bge	179ec <__assert_fail@plt+0x65c0>
   17984:	b	17988 <__assert_fail@plt+0x655c>
   17988:	b	179d0 <__assert_fail@plt+0x65a4>
   1798c:	b	179d0 <__assert_fail@plt+0x65a4>
   17990:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17994:	cmn	r0, #1
   17998:	bne	179d0 <__assert_fail@plt+0x65a4>
   1799c:	b	179a0 <__assert_fail@plt+0x6574>
   179a0:	ldr	r0, [fp, #8]
   179a4:	add	r0, r0, #0
   179a8:	movw	r1, #0
   179ac:	cmp	r1, r0
   179b0:	blt	17a04 <__assert_fail@plt+0x65d8>
   179b4:	b	17a20 <__assert_fail@plt+0x65f4>
   179b8:	ldr	r0, [fp, #8]
   179bc:	sub	r0, r0, #1
   179c0:	mvn	r1, #0
   179c4:	cmp	r1, r0
   179c8:	blt	17a04 <__assert_fail@plt+0x65d8>
   179cc:	b	17a20 <__assert_fail@plt+0x65f4>
   179d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179d4:	movw	r1, #0
   179d8:	sdiv	r0, r1, r0
   179dc:	ldr	r1, [fp, #8]
   179e0:	cmp	r0, r1
   179e4:	blt	17a04 <__assert_fail@plt+0x65d8>
   179e8:	b	17a20 <__assert_fail@plt+0x65f4>
   179ec:	ldr	r0, [fp, #8]
   179f0:	movw	r1, #255	; 0xff
   179f4:	sdiv	r0, r1, r0
   179f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   179fc:	cmp	r0, r1
   17a00:	bge	17a20 <__assert_fail@plt+0x65f4>
   17a04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a08:	ldr	r1, [fp, #8]
   17a0c:	mul	r0, r0, r1
   17a10:	and	r0, r0, #255	; 0xff
   17a14:	str	r0, [fp, #-28]	; 0xffffffe4
   17a18:	b	18a48 <__assert_fail@plt+0x761c>
   17a1c:	andhi	r0, r0, r0
   17a20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a24:	ldr	r1, [fp, #8]
   17a28:	mul	r0, r0, r1
   17a2c:	and	r0, r0, #255	; 0xff
   17a30:	str	r0, [fp, #-28]	; 0xffffffe4
   17a34:	b	18a4c <__assert_fail@plt+0x7620>
   17a38:	b	17e10 <__assert_fail@plt+0x69e4>
   17a3c:	b	17a40 <__assert_fail@plt+0x6614>
   17a40:	ldr	r0, [fp, #8]
   17a44:	cmp	r0, #0
   17a48:	bge	17b5c <__assert_fail@plt+0x6730>
   17a4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a50:	cmp	r0, #0
   17a54:	bge	17ae0 <__assert_fail@plt+0x66b4>
   17a58:	b	17a5c <__assert_fail@plt+0x6630>
   17a5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a60:	ldr	r1, [fp, #8]
   17a64:	movw	r2, #32767	; 0x7fff
   17a68:	sdiv	r1, r2, r1
   17a6c:	cmp	r0, r1
   17a70:	blt	17bfc <__assert_fail@plt+0x67d0>
   17a74:	b	17c14 <__assert_fail@plt+0x67e8>
   17a78:	b	17a7c <__assert_fail@plt+0x6650>
   17a7c:	ldr	r0, [pc, #4084]	; 18a78 <__assert_fail@plt+0x764c>
   17a80:	ldr	r1, [fp, #8]
   17a84:	cmp	r1, r0
   17a88:	blt	17aa0 <__assert_fail@plt+0x6674>
   17a8c:	b	17aac <__assert_fail@plt+0x6680>
   17a90:	ldr	r0, [fp, #8]
   17a94:	movw	r1, #0
   17a98:	cmp	r1, r0
   17a9c:	bge	17aac <__assert_fail@plt+0x6680>
   17aa0:	movw	r0, #0
   17aa4:	str	r0, [sp, #156]	; 0x9c
   17aa8:	b	17ac4 <__assert_fail@plt+0x6698>
   17aac:	ldr	r0, [fp, #8]
   17ab0:	movw	r1, #0
   17ab4:	sub	r0, r1, r0
   17ab8:	movw	r1, #32767	; 0x7fff
   17abc:	sdiv	r0, r1, r0
   17ac0:	str	r0, [sp, #156]	; 0x9c
   17ac4:	ldr	r0, [sp, #156]	; 0x9c
   17ac8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17acc:	mvn	r2, #0
   17ad0:	sub	r1, r2, r1
   17ad4:	cmp	r0, r1
   17ad8:	ble	17bfc <__assert_fail@plt+0x67d0>
   17adc:	b	17c14 <__assert_fail@plt+0x67e8>
   17ae0:	b	17ae4 <__assert_fail@plt+0x66b8>
   17ae4:	b	17b40 <__assert_fail@plt+0x6714>
   17ae8:	b	17b40 <__assert_fail@plt+0x6714>
   17aec:	ldr	r0, [fp, #8]
   17af0:	cmn	r0, #1
   17af4:	bne	17b40 <__assert_fail@plt+0x6714>
   17af8:	b	17afc <__assert_fail@plt+0x66d0>
   17afc:	ldr	r0, [pc, #3964]	; 18a80 <__assert_fail@plt+0x7654>
   17b00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b04:	add	r0, r1, r0
   17b08:	movw	r1, #0
   17b0c:	cmp	r1, r0
   17b10:	blt	17bfc <__assert_fail@plt+0x67d0>
   17b14:	b	17c14 <__assert_fail@plt+0x67e8>
   17b18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b1c:	movw	r1, #0
   17b20:	cmp	r1, r0
   17b24:	bge	17c14 <__assert_fail@plt+0x67e8>
   17b28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b2c:	sub	r0, r0, #1
   17b30:	movw	r1, #32767	; 0x7fff
   17b34:	cmp	r1, r0
   17b38:	blt	17bfc <__assert_fail@plt+0x67d0>
   17b3c:	b	17c14 <__assert_fail@plt+0x67e8>
   17b40:	ldr	r0, [pc, #3896]	; 18a80 <__assert_fail@plt+0x7654>
   17b44:	ldr	r1, [fp, #8]
   17b48:	sdiv	r0, r0, r1
   17b4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b50:	cmp	r0, r1
   17b54:	blt	17bfc <__assert_fail@plt+0x67d0>
   17b58:	b	17c14 <__assert_fail@plt+0x67e8>
   17b5c:	ldr	r0, [fp, #8]
   17b60:	cmp	r0, #0
   17b64:	bne	17b6c <__assert_fail@plt+0x6740>
   17b68:	b	17c14 <__assert_fail@plt+0x67e8>
   17b6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b70:	cmp	r0, #0
   17b74:	bge	17be4 <__assert_fail@plt+0x67b8>
   17b78:	b	17b7c <__assert_fail@plt+0x6750>
   17b7c:	b	17bc8 <__assert_fail@plt+0x679c>
   17b80:	b	17bc8 <__assert_fail@plt+0x679c>
   17b84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b88:	cmn	r0, #1
   17b8c:	bne	17bc8 <__assert_fail@plt+0x679c>
   17b90:	b	17b94 <__assert_fail@plt+0x6768>
   17b94:	ldr	r0, [pc, #3812]	; 18a80 <__assert_fail@plt+0x7654>
   17b98:	ldr	r1, [fp, #8]
   17b9c:	add	r0, r1, r0
   17ba0:	movw	r1, #0
   17ba4:	cmp	r1, r0
   17ba8:	blt	17bfc <__assert_fail@plt+0x67d0>
   17bac:	b	17c14 <__assert_fail@plt+0x67e8>
   17bb0:	ldr	r0, [fp, #8]
   17bb4:	sub	r0, r0, #1
   17bb8:	movw	r1, #32767	; 0x7fff
   17bbc:	cmp	r1, r0
   17bc0:	blt	17bfc <__assert_fail@plt+0x67d0>
   17bc4:	b	17c14 <__assert_fail@plt+0x67e8>
   17bc8:	ldr	r0, [pc, #3760]	; 18a80 <__assert_fail@plt+0x7654>
   17bcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17bd0:	sdiv	r0, r0, r1
   17bd4:	ldr	r1, [fp, #8]
   17bd8:	cmp	r0, r1
   17bdc:	blt	17bfc <__assert_fail@plt+0x67d0>
   17be0:	b	17c14 <__assert_fail@plt+0x67e8>
   17be4:	ldr	r0, [fp, #8]
   17be8:	movw	r1, #32767	; 0x7fff
   17bec:	sdiv	r0, r1, r0
   17bf0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17bf4:	cmp	r0, r1
   17bf8:	bge	17c14 <__assert_fail@plt+0x67e8>
   17bfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c00:	ldr	r1, [fp, #8]
   17c04:	mul	r0, r0, r1
   17c08:	sxth	r0, r0
   17c0c:	str	r0, [fp, #-28]	; 0xffffffe4
   17c10:	b	18a48 <__assert_fail@plt+0x761c>
   17c14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c18:	ldr	r1, [fp, #8]
   17c1c:	mul	r0, r0, r1
   17c20:	sxth	r0, r0
   17c24:	str	r0, [fp, #-28]	; 0xffffffe4
   17c28:	b	18a4c <__assert_fail@plt+0x7620>
   17c2c:	ldr	r0, [fp, #8]
   17c30:	cmp	r0, #0
   17c34:	bge	17d44 <__assert_fail@plt+0x6918>
   17c38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c3c:	cmp	r0, #0
   17c40:	bge	17ccc <__assert_fail@plt+0x68a0>
   17c44:	b	17c48 <__assert_fail@plt+0x681c>
   17c48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c4c:	ldr	r1, [fp, #8]
   17c50:	movw	r2, #65535	; 0xffff
   17c54:	sdiv	r1, r2, r1
   17c58:	cmp	r0, r1
   17c5c:	blt	17de0 <__assert_fail@plt+0x69b4>
   17c60:	b	17df8 <__assert_fail@plt+0x69cc>
   17c64:	b	17c68 <__assert_fail@plt+0x683c>
   17c68:	ldr	r0, [pc, #3592]	; 18a78 <__assert_fail@plt+0x764c>
   17c6c:	ldr	r1, [fp, #8]
   17c70:	cmp	r1, r0
   17c74:	blt	17c8c <__assert_fail@plt+0x6860>
   17c78:	b	17c98 <__assert_fail@plt+0x686c>
   17c7c:	ldr	r0, [fp, #8]
   17c80:	movw	r1, #0
   17c84:	cmp	r1, r0
   17c88:	bge	17c98 <__assert_fail@plt+0x686c>
   17c8c:	movw	r0, #0
   17c90:	str	r0, [sp, #152]	; 0x98
   17c94:	b	17cb0 <__assert_fail@plt+0x6884>
   17c98:	ldr	r0, [fp, #8]
   17c9c:	movw	r1, #0
   17ca0:	sub	r0, r1, r0
   17ca4:	movw	r1, #65535	; 0xffff
   17ca8:	sdiv	r0, r1, r0
   17cac:	str	r0, [sp, #152]	; 0x98
   17cb0:	ldr	r0, [sp, #152]	; 0x98
   17cb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17cb8:	mvn	r2, #0
   17cbc:	sub	r1, r2, r1
   17cc0:	cmp	r0, r1
   17cc4:	ble	17de0 <__assert_fail@plt+0x69b4>
   17cc8:	b	17df8 <__assert_fail@plt+0x69cc>
   17ccc:	b	17cd0 <__assert_fail@plt+0x68a4>
   17cd0:	b	17d28 <__assert_fail@plt+0x68fc>
   17cd4:	b	17d28 <__assert_fail@plt+0x68fc>
   17cd8:	ldr	r0, [fp, #8]
   17cdc:	cmn	r0, #1
   17ce0:	bne	17d28 <__assert_fail@plt+0x68fc>
   17ce4:	b	17ce8 <__assert_fail@plt+0x68bc>
   17ce8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cec:	add	r0, r0, #0
   17cf0:	movw	r1, #0
   17cf4:	cmp	r1, r0
   17cf8:	blt	17de0 <__assert_fail@plt+0x69b4>
   17cfc:	b	17df8 <__assert_fail@plt+0x69cc>
   17d00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d04:	movw	r1, #0
   17d08:	cmp	r1, r0
   17d0c:	bge	17df8 <__assert_fail@plt+0x69cc>
   17d10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d14:	sub	r0, r0, #1
   17d18:	mvn	r1, #0
   17d1c:	cmp	r1, r0
   17d20:	blt	17de0 <__assert_fail@plt+0x69b4>
   17d24:	b	17df8 <__assert_fail@plt+0x69cc>
   17d28:	ldr	r0, [fp, #8]
   17d2c:	movw	r1, #0
   17d30:	sdiv	r0, r1, r0
   17d34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17d38:	cmp	r0, r1
   17d3c:	blt	17de0 <__assert_fail@plt+0x69b4>
   17d40:	b	17df8 <__assert_fail@plt+0x69cc>
   17d44:	ldr	r0, [fp, #8]
   17d48:	cmp	r0, #0
   17d4c:	bne	17d54 <__assert_fail@plt+0x6928>
   17d50:	b	17df8 <__assert_fail@plt+0x69cc>
   17d54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d58:	cmp	r0, #0
   17d5c:	bge	17dc8 <__assert_fail@plt+0x699c>
   17d60:	b	17d64 <__assert_fail@plt+0x6938>
   17d64:	b	17dac <__assert_fail@plt+0x6980>
   17d68:	b	17dac <__assert_fail@plt+0x6980>
   17d6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d70:	cmn	r0, #1
   17d74:	bne	17dac <__assert_fail@plt+0x6980>
   17d78:	b	17d7c <__assert_fail@plt+0x6950>
   17d7c:	ldr	r0, [fp, #8]
   17d80:	add	r0, r0, #0
   17d84:	movw	r1, #0
   17d88:	cmp	r1, r0
   17d8c:	blt	17de0 <__assert_fail@plt+0x69b4>
   17d90:	b	17df8 <__assert_fail@plt+0x69cc>
   17d94:	ldr	r0, [fp, #8]
   17d98:	sub	r0, r0, #1
   17d9c:	mvn	r1, #0
   17da0:	cmp	r1, r0
   17da4:	blt	17de0 <__assert_fail@plt+0x69b4>
   17da8:	b	17df8 <__assert_fail@plt+0x69cc>
   17dac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17db0:	movw	r1, #0
   17db4:	sdiv	r0, r1, r0
   17db8:	ldr	r1, [fp, #8]
   17dbc:	cmp	r0, r1
   17dc0:	blt	17de0 <__assert_fail@plt+0x69b4>
   17dc4:	b	17df8 <__assert_fail@plt+0x69cc>
   17dc8:	ldr	r0, [fp, #8]
   17dcc:	movw	r1, #65535	; 0xffff
   17dd0:	sdiv	r0, r1, r0
   17dd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17dd8:	cmp	r0, r1
   17ddc:	bge	17df8 <__assert_fail@plt+0x69cc>
   17de0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17de4:	ldr	r1, [fp, #8]
   17de8:	mul	r0, r0, r1
   17dec:	uxth	r0, r0
   17df0:	str	r0, [fp, #-28]	; 0xffffffe4
   17df4:	b	18a48 <__assert_fail@plt+0x761c>
   17df8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17dfc:	ldr	r1, [fp, #8]
   17e00:	mul	r0, r0, r1
   17e04:	uxth	r0, r0
   17e08:	str	r0, [fp, #-28]	; 0xffffffe4
   17e0c:	b	18a4c <__assert_fail@plt+0x7620>
   17e10:	b	17e14 <__assert_fail@plt+0x69e8>
   17e14:	b	17e18 <__assert_fail@plt+0x69ec>
   17e18:	ldr	r0, [fp, #8]
   17e1c:	cmp	r0, #0
   17e20:	bge	17f24 <__assert_fail@plt+0x6af8>
   17e24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e28:	cmp	r0, #0
   17e2c:	bge	17eb8 <__assert_fail@plt+0x6a8c>
   17e30:	b	17e34 <__assert_fail@plt+0x6a08>
   17e34:	ldr	r0, [pc, #3128]	; 18a74 <__assert_fail@plt+0x7648>
   17e38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17e3c:	ldr	r2, [fp, #8]
   17e40:	sdiv	r0, r0, r2
   17e44:	cmp	r1, r0
   17e48:	blt	17fb4 <__assert_fail@plt+0x6b88>
   17e4c:	b	17fc8 <__assert_fail@plt+0x6b9c>
   17e50:	b	17e54 <__assert_fail@plt+0x6a28>
   17e54:	ldr	r0, [pc, #3100]	; 18a78 <__assert_fail@plt+0x764c>
   17e58:	ldr	r1, [fp, #8]
   17e5c:	cmp	r1, r0
   17e60:	blt	17e78 <__assert_fail@plt+0x6a4c>
   17e64:	b	17e84 <__assert_fail@plt+0x6a58>
   17e68:	ldr	r0, [fp, #8]
   17e6c:	movw	r1, #0
   17e70:	cmp	r1, r0
   17e74:	bge	17e84 <__assert_fail@plt+0x6a58>
   17e78:	movw	r0, #0
   17e7c:	str	r0, [sp, #148]	; 0x94
   17e80:	b	17e9c <__assert_fail@plt+0x6a70>
   17e84:	ldr	r0, [pc, #3048]	; 18a74 <__assert_fail@plt+0x7648>
   17e88:	ldr	r1, [fp, #8]
   17e8c:	movw	r2, #0
   17e90:	sub	r1, r2, r1
   17e94:	sdiv	r0, r0, r1
   17e98:	str	r0, [sp, #148]	; 0x94
   17e9c:	ldr	r0, [sp, #148]	; 0x94
   17ea0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ea4:	mvn	r2, #0
   17ea8:	sub	r1, r2, r1
   17eac:	cmp	r0, r1
   17eb0:	ble	17fb4 <__assert_fail@plt+0x6b88>
   17eb4:	b	17fc8 <__assert_fail@plt+0x6b9c>
   17eb8:	ldr	r0, [fp, #8]
   17ebc:	cmn	r0, #1
   17ec0:	bne	17f08 <__assert_fail@plt+0x6adc>
   17ec4:	b	17ec8 <__assert_fail@plt+0x6a9c>
   17ec8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ecc:	add	r0, r0, #-2147483648	; 0x80000000
   17ed0:	movw	r1, #0
   17ed4:	cmp	r1, r0
   17ed8:	blt	17fb4 <__assert_fail@plt+0x6b88>
   17edc:	b	17fc8 <__assert_fail@plt+0x6b9c>
   17ee0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ee4:	movw	r1, #0
   17ee8:	cmp	r1, r0
   17eec:	bge	17fc8 <__assert_fail@plt+0x6b9c>
   17ef0:	ldr	r0, [pc, #2940]	; 18a74 <__assert_fail@plt+0x7648>
   17ef4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ef8:	sub	r1, r1, #1
   17efc:	cmp	r0, r1
   17f00:	blt	17fb4 <__assert_fail@plt+0x6b88>
   17f04:	b	17fc8 <__assert_fail@plt+0x6b9c>
   17f08:	ldr	r0, [pc, #2924]	; 18a7c <__assert_fail@plt+0x7650>
   17f0c:	ldr	r1, [fp, #8]
   17f10:	sdiv	r0, r0, r1
   17f14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17f18:	cmp	r0, r1
   17f1c:	blt	17fb4 <__assert_fail@plt+0x6b88>
   17f20:	b	17fc8 <__assert_fail@plt+0x6b9c>
   17f24:	ldr	r0, [fp, #8]
   17f28:	cmp	r0, #0
   17f2c:	bne	17f34 <__assert_fail@plt+0x6b08>
   17f30:	b	17fc8 <__assert_fail@plt+0x6b9c>
   17f34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f38:	cmp	r0, #0
   17f3c:	bge	17f9c <__assert_fail@plt+0x6b70>
   17f40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f44:	cmn	r0, #1
   17f48:	bne	17f80 <__assert_fail@plt+0x6b54>
   17f4c:	b	17f50 <__assert_fail@plt+0x6b24>
   17f50:	ldr	r0, [fp, #8]
   17f54:	add	r0, r0, #-2147483648	; 0x80000000
   17f58:	movw	r1, #0
   17f5c:	cmp	r1, r0
   17f60:	blt	17fb4 <__assert_fail@plt+0x6b88>
   17f64:	b	17fc8 <__assert_fail@plt+0x6b9c>
   17f68:	ldr	r0, [pc, #2820]	; 18a74 <__assert_fail@plt+0x7648>
   17f6c:	ldr	r1, [fp, #8]
   17f70:	sub	r1, r1, #1
   17f74:	cmp	r0, r1
   17f78:	blt	17fb4 <__assert_fail@plt+0x6b88>
   17f7c:	b	17fc8 <__assert_fail@plt+0x6b9c>
   17f80:	ldr	r0, [pc, #2804]	; 18a7c <__assert_fail@plt+0x7650>
   17f84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17f88:	sdiv	r0, r0, r1
   17f8c:	ldr	r1, [fp, #8]
   17f90:	cmp	r0, r1
   17f94:	blt	17fb4 <__assert_fail@plt+0x6b88>
   17f98:	b	17fc8 <__assert_fail@plt+0x6b9c>
   17f9c:	ldr	r0, [pc, #2768]	; 18a74 <__assert_fail@plt+0x7648>
   17fa0:	ldr	r1, [fp, #8]
   17fa4:	sdiv	r0, r0, r1
   17fa8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17fac:	cmp	r0, r1
   17fb0:	bge	17fc8 <__assert_fail@plt+0x6b9c>
   17fb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fb8:	ldr	r1, [fp, #8]
   17fbc:	mul	r0, r0, r1
   17fc0:	str	r0, [fp, #-28]	; 0xffffffe4
   17fc4:	b	18a48 <__assert_fail@plt+0x761c>
   17fc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fcc:	ldr	r1, [fp, #8]
   17fd0:	mul	r0, r0, r1
   17fd4:	str	r0, [fp, #-28]	; 0xffffffe4
   17fd8:	b	18a4c <__assert_fail@plt+0x7620>
   17fdc:	ldr	r0, [fp, #8]
   17fe0:	cmp	r0, #0
   17fe4:	bge	180f4 <__assert_fail@plt+0x6cc8>
   17fe8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fec:	cmp	r0, #0
   17ff0:	bge	1807c <__assert_fail@plt+0x6c50>
   17ff4:	b	18014 <__assert_fail@plt+0x6be8>
   17ff8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ffc:	ldr	r1, [fp, #8]
   18000:	mvn	r2, #0
   18004:	udiv	r1, r2, r1
   18008:	cmp	r0, r1
   1800c:	bcc	18190 <__assert_fail@plt+0x6d64>
   18010:	b	181a4 <__assert_fail@plt+0x6d78>
   18014:	b	18018 <__assert_fail@plt+0x6bec>
   18018:	ldr	r0, [pc, #2648]	; 18a78 <__assert_fail@plt+0x764c>
   1801c:	ldr	r1, [fp, #8]
   18020:	cmp	r1, r0
   18024:	blt	1803c <__assert_fail@plt+0x6c10>
   18028:	b	18048 <__assert_fail@plt+0x6c1c>
   1802c:	ldr	r0, [fp, #8]
   18030:	movw	r1, #0
   18034:	cmp	r1, r0
   18038:	bge	18048 <__assert_fail@plt+0x6c1c>
   1803c:	movw	r0, #1
   18040:	str	r0, [sp, #144]	; 0x90
   18044:	b	18060 <__assert_fail@plt+0x6c34>
   18048:	ldr	r0, [fp, #8]
   1804c:	movw	r1, #0
   18050:	sub	r0, r1, r0
   18054:	mvn	r1, #0
   18058:	udiv	r0, r1, r0
   1805c:	str	r0, [sp, #144]	; 0x90
   18060:	ldr	r0, [sp, #144]	; 0x90
   18064:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18068:	mvn	r2, #0
   1806c:	sub	r1, r2, r1
   18070:	cmp	r0, r1
   18074:	bls	18190 <__assert_fail@plt+0x6d64>
   18078:	b	181a4 <__assert_fail@plt+0x6d78>
   1807c:	b	18080 <__assert_fail@plt+0x6c54>
   18080:	b	180d8 <__assert_fail@plt+0x6cac>
   18084:	b	180d8 <__assert_fail@plt+0x6cac>
   18088:	ldr	r0, [fp, #8]
   1808c:	cmn	r0, #1
   18090:	bne	180d8 <__assert_fail@plt+0x6cac>
   18094:	b	18098 <__assert_fail@plt+0x6c6c>
   18098:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1809c:	add	r0, r0, #0
   180a0:	movw	r1, #0
   180a4:	cmp	r1, r0
   180a8:	blt	18190 <__assert_fail@plt+0x6d64>
   180ac:	b	181a4 <__assert_fail@plt+0x6d78>
   180b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180b4:	movw	r1, #0
   180b8:	cmp	r1, r0
   180bc:	bge	181a4 <__assert_fail@plt+0x6d78>
   180c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180c4:	sub	r0, r0, #1
   180c8:	mvn	r1, #0
   180cc:	cmp	r1, r0
   180d0:	blt	18190 <__assert_fail@plt+0x6d64>
   180d4:	b	181a4 <__assert_fail@plt+0x6d78>
   180d8:	ldr	r0, [fp, #8]
   180dc:	movw	r1, #0
   180e0:	sdiv	r0, r1, r0
   180e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   180e8:	cmp	r0, r1
   180ec:	blt	18190 <__assert_fail@plt+0x6d64>
   180f0:	b	181a4 <__assert_fail@plt+0x6d78>
   180f4:	ldr	r0, [fp, #8]
   180f8:	cmp	r0, #0
   180fc:	bne	18104 <__assert_fail@plt+0x6cd8>
   18100:	b	181a4 <__assert_fail@plt+0x6d78>
   18104:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18108:	cmp	r0, #0
   1810c:	bge	18178 <__assert_fail@plt+0x6d4c>
   18110:	b	18114 <__assert_fail@plt+0x6ce8>
   18114:	b	1815c <__assert_fail@plt+0x6d30>
   18118:	b	1815c <__assert_fail@plt+0x6d30>
   1811c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18120:	cmn	r0, #1
   18124:	bne	1815c <__assert_fail@plt+0x6d30>
   18128:	b	1812c <__assert_fail@plt+0x6d00>
   1812c:	ldr	r0, [fp, #8]
   18130:	add	r0, r0, #0
   18134:	movw	r1, #0
   18138:	cmp	r1, r0
   1813c:	blt	18190 <__assert_fail@plt+0x6d64>
   18140:	b	181a4 <__assert_fail@plt+0x6d78>
   18144:	ldr	r0, [fp, #8]
   18148:	sub	r0, r0, #1
   1814c:	mvn	r1, #0
   18150:	cmp	r1, r0
   18154:	blt	18190 <__assert_fail@plt+0x6d64>
   18158:	b	181a4 <__assert_fail@plt+0x6d78>
   1815c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18160:	movw	r1, #0
   18164:	sdiv	r0, r1, r0
   18168:	ldr	r1, [fp, #8]
   1816c:	cmp	r0, r1
   18170:	blt	18190 <__assert_fail@plt+0x6d64>
   18174:	b	181a4 <__assert_fail@plt+0x6d78>
   18178:	ldr	r0, [fp, #8]
   1817c:	mvn	r1, #0
   18180:	udiv	r0, r1, r0
   18184:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18188:	cmp	r0, r1
   1818c:	bcs	181a4 <__assert_fail@plt+0x6d78>
   18190:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18194:	ldr	r1, [fp, #8]
   18198:	mul	r0, r0, r1
   1819c:	str	r0, [fp, #-28]	; 0xffffffe4
   181a0:	b	18a48 <__assert_fail@plt+0x761c>
   181a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181a8:	ldr	r1, [fp, #8]
   181ac:	mul	r0, r0, r1
   181b0:	str	r0, [fp, #-28]	; 0xffffffe4
   181b4:	b	18a4c <__assert_fail@plt+0x7620>
   181b8:	b	181bc <__assert_fail@plt+0x6d90>
   181bc:	b	181c0 <__assert_fail@plt+0x6d94>
   181c0:	ldr	r0, [fp, #8]
   181c4:	cmp	r0, #0
   181c8:	bge	182cc <__assert_fail@plt+0x6ea0>
   181cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181d0:	cmp	r0, #0
   181d4:	bge	18260 <__assert_fail@plt+0x6e34>
   181d8:	b	181dc <__assert_fail@plt+0x6db0>
   181dc:	ldr	r0, [pc, #2192]	; 18a74 <__assert_fail@plt+0x7648>
   181e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   181e4:	ldr	r2, [fp, #8]
   181e8:	sdiv	r0, r0, r2
   181ec:	cmp	r1, r0
   181f0:	blt	1835c <__assert_fail@plt+0x6f30>
   181f4:	b	18370 <__assert_fail@plt+0x6f44>
   181f8:	b	181fc <__assert_fail@plt+0x6dd0>
   181fc:	ldr	r0, [pc, #2164]	; 18a78 <__assert_fail@plt+0x764c>
   18200:	ldr	r1, [fp, #8]
   18204:	cmp	r1, r0
   18208:	blt	18220 <__assert_fail@plt+0x6df4>
   1820c:	b	1822c <__assert_fail@plt+0x6e00>
   18210:	ldr	r0, [fp, #8]
   18214:	movw	r1, #0
   18218:	cmp	r1, r0
   1821c:	bge	1822c <__assert_fail@plt+0x6e00>
   18220:	movw	r0, #0
   18224:	str	r0, [sp, #140]	; 0x8c
   18228:	b	18244 <__assert_fail@plt+0x6e18>
   1822c:	ldr	r0, [pc, #2112]	; 18a74 <__assert_fail@plt+0x7648>
   18230:	ldr	r1, [fp, #8]
   18234:	movw	r2, #0
   18238:	sub	r1, r2, r1
   1823c:	sdiv	r0, r0, r1
   18240:	str	r0, [sp, #140]	; 0x8c
   18244:	ldr	r0, [sp, #140]	; 0x8c
   18248:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1824c:	mvn	r2, #0
   18250:	sub	r1, r2, r1
   18254:	cmp	r0, r1
   18258:	ble	1835c <__assert_fail@plt+0x6f30>
   1825c:	b	18370 <__assert_fail@plt+0x6f44>
   18260:	ldr	r0, [fp, #8]
   18264:	cmn	r0, #1
   18268:	bne	182b0 <__assert_fail@plt+0x6e84>
   1826c:	b	18270 <__assert_fail@plt+0x6e44>
   18270:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18274:	add	r0, r0, #-2147483648	; 0x80000000
   18278:	movw	r1, #0
   1827c:	cmp	r1, r0
   18280:	blt	1835c <__assert_fail@plt+0x6f30>
   18284:	b	18370 <__assert_fail@plt+0x6f44>
   18288:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1828c:	movw	r1, #0
   18290:	cmp	r1, r0
   18294:	bge	18370 <__assert_fail@plt+0x6f44>
   18298:	ldr	r0, [pc, #2004]	; 18a74 <__assert_fail@plt+0x7648>
   1829c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   182a0:	sub	r1, r1, #1
   182a4:	cmp	r0, r1
   182a8:	blt	1835c <__assert_fail@plt+0x6f30>
   182ac:	b	18370 <__assert_fail@plt+0x6f44>
   182b0:	ldr	r0, [pc, #1988]	; 18a7c <__assert_fail@plt+0x7650>
   182b4:	ldr	r1, [fp, #8]
   182b8:	sdiv	r0, r0, r1
   182bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   182c0:	cmp	r0, r1
   182c4:	blt	1835c <__assert_fail@plt+0x6f30>
   182c8:	b	18370 <__assert_fail@plt+0x6f44>
   182cc:	ldr	r0, [fp, #8]
   182d0:	cmp	r0, #0
   182d4:	bne	182dc <__assert_fail@plt+0x6eb0>
   182d8:	b	18370 <__assert_fail@plt+0x6f44>
   182dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182e0:	cmp	r0, #0
   182e4:	bge	18344 <__assert_fail@plt+0x6f18>
   182e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182ec:	cmn	r0, #1
   182f0:	bne	18328 <__assert_fail@plt+0x6efc>
   182f4:	b	182f8 <__assert_fail@plt+0x6ecc>
   182f8:	ldr	r0, [fp, #8]
   182fc:	add	r0, r0, #-2147483648	; 0x80000000
   18300:	movw	r1, #0
   18304:	cmp	r1, r0
   18308:	blt	1835c <__assert_fail@plt+0x6f30>
   1830c:	b	18370 <__assert_fail@plt+0x6f44>
   18310:	ldr	r0, [pc, #1884]	; 18a74 <__assert_fail@plt+0x7648>
   18314:	ldr	r1, [fp, #8]
   18318:	sub	r1, r1, #1
   1831c:	cmp	r0, r1
   18320:	blt	1835c <__assert_fail@plt+0x6f30>
   18324:	b	18370 <__assert_fail@plt+0x6f44>
   18328:	ldr	r0, [pc, #1868]	; 18a7c <__assert_fail@plt+0x7650>
   1832c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18330:	sdiv	r0, r0, r1
   18334:	ldr	r1, [fp, #8]
   18338:	cmp	r0, r1
   1833c:	blt	1835c <__assert_fail@plt+0x6f30>
   18340:	b	18370 <__assert_fail@plt+0x6f44>
   18344:	ldr	r0, [pc, #1832]	; 18a74 <__assert_fail@plt+0x7648>
   18348:	ldr	r1, [fp, #8]
   1834c:	sdiv	r0, r0, r1
   18350:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18354:	cmp	r0, r1
   18358:	bge	18370 <__assert_fail@plt+0x6f44>
   1835c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18360:	ldr	r1, [fp, #8]
   18364:	mul	r0, r0, r1
   18368:	str	r0, [fp, #-28]	; 0xffffffe4
   1836c:	b	18a48 <__assert_fail@plt+0x761c>
   18370:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18374:	ldr	r1, [fp, #8]
   18378:	mul	r0, r0, r1
   1837c:	str	r0, [fp, #-28]	; 0xffffffe4
   18380:	b	18a4c <__assert_fail@plt+0x7620>
   18384:	ldr	r0, [fp, #8]
   18388:	cmp	r0, #0
   1838c:	bge	1849c <__assert_fail@plt+0x7070>
   18390:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18394:	cmp	r0, #0
   18398:	bge	18424 <__assert_fail@plt+0x6ff8>
   1839c:	b	183bc <__assert_fail@plt+0x6f90>
   183a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183a4:	ldr	r1, [fp, #8]
   183a8:	mvn	r2, #0
   183ac:	udiv	r1, r2, r1
   183b0:	cmp	r0, r1
   183b4:	bcc	18538 <__assert_fail@plt+0x710c>
   183b8:	b	1854c <__assert_fail@plt+0x7120>
   183bc:	b	183c0 <__assert_fail@plt+0x6f94>
   183c0:	ldr	r0, [pc, #1712]	; 18a78 <__assert_fail@plt+0x764c>
   183c4:	ldr	r1, [fp, #8]
   183c8:	cmp	r1, r0
   183cc:	blt	183e4 <__assert_fail@plt+0x6fb8>
   183d0:	b	183f0 <__assert_fail@plt+0x6fc4>
   183d4:	ldr	r0, [fp, #8]
   183d8:	movw	r1, #0
   183dc:	cmp	r1, r0
   183e0:	bge	183f0 <__assert_fail@plt+0x6fc4>
   183e4:	movw	r0, #1
   183e8:	str	r0, [sp, #136]	; 0x88
   183ec:	b	18408 <__assert_fail@plt+0x6fdc>
   183f0:	ldr	r0, [fp, #8]
   183f4:	movw	r1, #0
   183f8:	sub	r0, r1, r0
   183fc:	mvn	r1, #0
   18400:	udiv	r0, r1, r0
   18404:	str	r0, [sp, #136]	; 0x88
   18408:	ldr	r0, [sp, #136]	; 0x88
   1840c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18410:	mvn	r2, #0
   18414:	sub	r1, r2, r1
   18418:	cmp	r0, r1
   1841c:	bls	18538 <__assert_fail@plt+0x710c>
   18420:	b	1854c <__assert_fail@plt+0x7120>
   18424:	b	18428 <__assert_fail@plt+0x6ffc>
   18428:	b	18480 <__assert_fail@plt+0x7054>
   1842c:	b	18480 <__assert_fail@plt+0x7054>
   18430:	ldr	r0, [fp, #8]
   18434:	cmn	r0, #1
   18438:	bne	18480 <__assert_fail@plt+0x7054>
   1843c:	b	18440 <__assert_fail@plt+0x7014>
   18440:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18444:	add	r0, r0, #0
   18448:	movw	r1, #0
   1844c:	cmp	r1, r0
   18450:	blt	18538 <__assert_fail@plt+0x710c>
   18454:	b	1854c <__assert_fail@plt+0x7120>
   18458:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1845c:	movw	r1, #0
   18460:	cmp	r1, r0
   18464:	bge	1854c <__assert_fail@plt+0x7120>
   18468:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1846c:	sub	r0, r0, #1
   18470:	mvn	r1, #0
   18474:	cmp	r1, r0
   18478:	blt	18538 <__assert_fail@plt+0x710c>
   1847c:	b	1854c <__assert_fail@plt+0x7120>
   18480:	ldr	r0, [fp, #8]
   18484:	movw	r1, #0
   18488:	sdiv	r0, r1, r0
   1848c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18490:	cmp	r0, r1
   18494:	blt	18538 <__assert_fail@plt+0x710c>
   18498:	b	1854c <__assert_fail@plt+0x7120>
   1849c:	ldr	r0, [fp, #8]
   184a0:	cmp	r0, #0
   184a4:	bne	184ac <__assert_fail@plt+0x7080>
   184a8:	b	1854c <__assert_fail@plt+0x7120>
   184ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184b0:	cmp	r0, #0
   184b4:	bge	18520 <__assert_fail@plt+0x70f4>
   184b8:	b	184bc <__assert_fail@plt+0x7090>
   184bc:	b	18504 <__assert_fail@plt+0x70d8>
   184c0:	b	18504 <__assert_fail@plt+0x70d8>
   184c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184c8:	cmn	r0, #1
   184cc:	bne	18504 <__assert_fail@plt+0x70d8>
   184d0:	b	184d4 <__assert_fail@plt+0x70a8>
   184d4:	ldr	r0, [fp, #8]
   184d8:	add	r0, r0, #0
   184dc:	movw	r1, #0
   184e0:	cmp	r1, r0
   184e4:	blt	18538 <__assert_fail@plt+0x710c>
   184e8:	b	1854c <__assert_fail@plt+0x7120>
   184ec:	ldr	r0, [fp, #8]
   184f0:	sub	r0, r0, #1
   184f4:	mvn	r1, #0
   184f8:	cmp	r1, r0
   184fc:	blt	18538 <__assert_fail@plt+0x710c>
   18500:	b	1854c <__assert_fail@plt+0x7120>
   18504:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18508:	movw	r1, #0
   1850c:	sdiv	r0, r1, r0
   18510:	ldr	r1, [fp, #8]
   18514:	cmp	r0, r1
   18518:	blt	18538 <__assert_fail@plt+0x710c>
   1851c:	b	1854c <__assert_fail@plt+0x7120>
   18520:	ldr	r0, [fp, #8]
   18524:	mvn	r1, #0
   18528:	udiv	r0, r1, r0
   1852c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18530:	cmp	r0, r1
   18534:	bcs	1854c <__assert_fail@plt+0x7120>
   18538:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1853c:	ldr	r1, [fp, #8]
   18540:	mul	r0, r0, r1
   18544:	str	r0, [fp, #-28]	; 0xffffffe4
   18548:	b	18a48 <__assert_fail@plt+0x761c>
   1854c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18550:	ldr	r1, [fp, #8]
   18554:	mul	r0, r0, r1
   18558:	str	r0, [fp, #-28]	; 0xffffffe4
   1855c:	b	18a4c <__assert_fail@plt+0x7620>
   18560:	b	18564 <__assert_fail@plt+0x7138>
   18564:	ldr	r0, [fp, #8]
   18568:	cmp	r0, #0
   1856c:	bge	186f4 <__assert_fail@plt+0x72c8>
   18570:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18574:	cmp	r0, #0
   18578:	bge	18660 <__assert_fail@plt+0x7234>
   1857c:	b	18580 <__assert_fail@plt+0x7154>
   18580:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18584:	ldr	r1, [fp, #8]
   18588:	asr	r3, r1, #31
   1858c:	mvn	r2, #0
   18590:	mvn	ip, #-2147483648	; 0x80000000
   18594:	str	r0, [sp, #132]	; 0x84
   18598:	mov	r0, r2
   1859c:	str	r1, [sp, #128]	; 0x80
   185a0:	mov	r1, ip
   185a4:	ldr	r2, [sp, #128]	; 0x80
   185a8:	bl	1f7b8 <__assert_fail@plt+0xe38c>
   185ac:	ldr	r2, [sp, #132]	; 0x84
   185b0:	subs	r0, r2, r0
   185b4:	rscs	r1, r1, r2, asr #31
   185b8:	str	r0, [sp, #124]	; 0x7c
   185bc:	str	r1, [sp, #120]	; 0x78
   185c0:	blt	187d4 <__assert_fail@plt+0x73a8>
   185c4:	b	187e8 <__assert_fail@plt+0x73bc>
   185c8:	b	185cc <__assert_fail@plt+0x71a0>
   185cc:	ldr	r0, [pc, #1188]	; 18a78 <__assert_fail@plt+0x764c>
   185d0:	ldr	r1, [fp, #8]
   185d4:	cmp	r1, r0
   185d8:	blt	185f0 <__assert_fail@plt+0x71c4>
   185dc:	b	18604 <__assert_fail@plt+0x71d8>
   185e0:	ldr	r0, [fp, #8]
   185e4:	movw	r1, #0
   185e8:	cmp	r1, r0
   185ec:	bge	18604 <__assert_fail@plt+0x71d8>
   185f0:	mov	r0, #0
   185f4:	mvn	r1, #0
   185f8:	str	r1, [sp, #116]	; 0x74
   185fc:	str	r0, [sp, #112]	; 0x70
   18600:	b	18638 <__assert_fail@plt+0x720c>
   18604:	ldr	r0, [fp, #8]
   18608:	rsb	r0, r0, #0
   1860c:	asr	r3, r0, #31
   18610:	mvn	r1, #0
   18614:	mvn	r2, #-2147483648	; 0x80000000
   18618:	str	r0, [sp, #108]	; 0x6c
   1861c:	mov	r0, r1
   18620:	mov	r1, r2
   18624:	ldr	r2, [sp, #108]	; 0x6c
   18628:	bl	1f7b8 <__assert_fail@plt+0xe38c>
   1862c:	str	r0, [sp, #116]	; 0x74
   18630:	str	r1, [sp, #112]	; 0x70
   18634:	b	18638 <__assert_fail@plt+0x720c>
   18638:	ldr	r0, [sp, #112]	; 0x70
   1863c:	ldr	r1, [sp, #116]	; 0x74
   18640:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18644:	mvn	r2, r2
   18648:	subs	r1, r2, r1
   1864c:	rscs	r0, r0, r2, asr #31
   18650:	str	r1, [sp, #104]	; 0x68
   18654:	str	r0, [sp, #100]	; 0x64
   18658:	bge	187d4 <__assert_fail@plt+0x73a8>
   1865c:	b	187e8 <__assert_fail@plt+0x73bc>
   18660:	ldr	r0, [fp, #8]
   18664:	cmn	r0, #1
   18668:	bne	186b4 <__assert_fail@plt+0x7288>
   1866c:	b	18670 <__assert_fail@plt+0x7244>
   18670:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18674:	mov	r1, #-2147483648	; 0x80000000
   18678:	add	r1, r1, r0, asr #31
   1867c:	rsbs	r0, r0, #0
   18680:	rscs	r1, r1, #0
   18684:	str	r0, [sp, #96]	; 0x60
   18688:	str	r1, [sp, #92]	; 0x5c
   1868c:	blt	187d4 <__assert_fail@plt+0x73a8>
   18690:	b	187e8 <__assert_fail@plt+0x73bc>
   18694:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18698:	movw	r1, #0
   1869c:	cmp	r1, r0
   186a0:	bge	187e8 <__assert_fail@plt+0x73bc>
   186a4:	mov	r0, #0
   186a8:	cmp	r0, #0
   186ac:	bne	187d4 <__assert_fail@plt+0x73a8>
   186b0:	b	187e8 <__assert_fail@plt+0x73bc>
   186b4:	ldr	r0, [fp, #8]
   186b8:	asr	r3, r0, #31
   186bc:	mov	r1, #0
   186c0:	mov	r2, #-2147483648	; 0x80000000
   186c4:	str	r0, [sp, #88]	; 0x58
   186c8:	mov	r0, r1
   186cc:	mov	r1, r2
   186d0:	ldr	r2, [sp, #88]	; 0x58
   186d4:	bl	1f7b8 <__assert_fail@plt+0xe38c>
   186d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   186dc:	subs	r0, r0, r2
   186e0:	sbcs	r1, r1, r2, asr #31
   186e4:	str	r0, [sp, #84]	; 0x54
   186e8:	str	r1, [sp, #80]	; 0x50
   186ec:	blt	187d4 <__assert_fail@plt+0x73a8>
   186f0:	b	187e8 <__assert_fail@plt+0x73bc>
   186f4:	ldr	r0, [fp, #8]
   186f8:	cmp	r0, #0
   186fc:	bne	18704 <__assert_fail@plt+0x72d8>
   18700:	b	187e8 <__assert_fail@plt+0x73bc>
   18704:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18708:	cmp	r0, #0
   1870c:	bge	18794 <__assert_fail@plt+0x7368>
   18710:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18714:	cmn	r0, #1
   18718:	bne	18754 <__assert_fail@plt+0x7328>
   1871c:	b	18720 <__assert_fail@plt+0x72f4>
   18720:	ldr	r0, [fp, #8]
   18724:	mov	r1, #-2147483648	; 0x80000000
   18728:	add	r1, r1, r0, asr #31
   1872c:	rsbs	r0, r0, #0
   18730:	rscs	r1, r1, #0
   18734:	str	r0, [sp, #76]	; 0x4c
   18738:	str	r1, [sp, #72]	; 0x48
   1873c:	blt	187d4 <__assert_fail@plt+0x73a8>
   18740:	b	187e8 <__assert_fail@plt+0x73bc>
   18744:	mov	r0, #0
   18748:	cmp	r0, #0
   1874c:	bne	187d4 <__assert_fail@plt+0x73a8>
   18750:	b	187e8 <__assert_fail@plt+0x73bc>
   18754:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18758:	asr	r3, r0, #31
   1875c:	mov	r1, #0
   18760:	mov	r2, #-2147483648	; 0x80000000
   18764:	str	r0, [sp, #68]	; 0x44
   18768:	mov	r0, r1
   1876c:	mov	r1, r2
   18770:	ldr	r2, [sp, #68]	; 0x44
   18774:	bl	1f7b8 <__assert_fail@plt+0xe38c>
   18778:	ldr	r2, [fp, #8]
   1877c:	subs	r0, r0, r2
   18780:	sbcs	r1, r1, r2, asr #31
   18784:	str	r0, [sp, #64]	; 0x40
   18788:	str	r1, [sp, #60]	; 0x3c
   1878c:	blt	187d4 <__assert_fail@plt+0x73a8>
   18790:	b	187e8 <__assert_fail@plt+0x73bc>
   18794:	ldr	r0, [fp, #8]
   18798:	asr	r3, r0, #31
   1879c:	mvn	r1, #0
   187a0:	mvn	r2, #-2147483648	; 0x80000000
   187a4:	str	r0, [sp, #56]	; 0x38
   187a8:	mov	r0, r1
   187ac:	mov	r1, r2
   187b0:	ldr	r2, [sp, #56]	; 0x38
   187b4:	bl	1f7b8 <__assert_fail@plt+0xe38c>
   187b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   187bc:	subs	r0, r0, r2
   187c0:	sbcs	r1, r1, r2, asr #31
   187c4:	str	r0, [sp, #52]	; 0x34
   187c8:	str	r1, [sp, #48]	; 0x30
   187cc:	bge	187e8 <__assert_fail@plt+0x73bc>
   187d0:	b	187d4 <__assert_fail@plt+0x73a8>
   187d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187d8:	ldr	r1, [fp, #8]
   187dc:	mul	r0, r0, r1
   187e0:	str	r0, [fp, #-28]	; 0xffffffe4
   187e4:	b	18a48 <__assert_fail@plt+0x761c>
   187e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187ec:	ldr	r1, [fp, #8]
   187f0:	mul	r0, r0, r1
   187f4:	str	r0, [fp, #-28]	; 0xffffffe4
   187f8:	b	18a4c <__assert_fail@plt+0x7620>
   187fc:	ldr	r0, [fp, #8]
   18800:	cmp	r0, #0
   18804:	bge	18964 <__assert_fail@plt+0x7538>
   18808:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1880c:	cmp	r0, #0
   18810:	bge	188ec <__assert_fail@plt+0x74c0>
   18814:	b	1885c <__assert_fail@plt+0x7430>
   18818:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1881c:	ldr	r1, [fp, #8]
   18820:	asr	r3, r1, #31
   18824:	mvn	r2, #0
   18828:	str	r0, [sp, #44]	; 0x2c
   1882c:	mov	r0, r2
   18830:	str	r1, [sp, #40]	; 0x28
   18834:	mov	r1, r2
   18838:	ldr	r2, [sp, #40]	; 0x28
   1883c:	bl	1f88c <__assert_fail@plt+0xe460>
   18840:	ldr	r2, [sp, #44]	; 0x2c
   18844:	subs	r0, r2, r0
   18848:	rscs	r1, r1, r2, asr #31
   1884c:	str	r0, [sp, #36]	; 0x24
   18850:	str	r1, [sp, #32]
   18854:	bcc	18a20 <__assert_fail@plt+0x75f4>
   18858:	b	18a34 <__assert_fail@plt+0x7608>
   1885c:	b	18860 <__assert_fail@plt+0x7434>
   18860:	ldr	r0, [pc, #528]	; 18a78 <__assert_fail@plt+0x764c>
   18864:	ldr	r1, [fp, #8]
   18868:	cmp	r1, r0
   1886c:	blt	18884 <__assert_fail@plt+0x7458>
   18870:	b	18898 <__assert_fail@plt+0x746c>
   18874:	ldr	r0, [fp, #8]
   18878:	movw	r1, #0
   1887c:	cmp	r1, r0
   18880:	bge	18898 <__assert_fail@plt+0x746c>
   18884:	mov	r0, #1
   18888:	mvn	r1, #0
   1888c:	str	r1, [sp, #28]
   18890:	str	r0, [sp, #24]
   18894:	b	188c4 <__assert_fail@plt+0x7498>
   18898:	ldr	r0, [fp, #8]
   1889c:	rsb	r0, r0, #0
   188a0:	asr	r3, r0, #31
   188a4:	mvn	r1, #0
   188a8:	str	r0, [sp, #20]
   188ac:	mov	r0, r1
   188b0:	ldr	r2, [sp, #20]
   188b4:	bl	1f88c <__assert_fail@plt+0xe460>
   188b8:	str	r0, [sp, #28]
   188bc:	str	r1, [sp, #24]
   188c0:	b	188c4 <__assert_fail@plt+0x7498>
   188c4:	ldr	r0, [sp, #24]
   188c8:	ldr	r1, [sp, #28]
   188cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   188d0:	mvn	r2, r2
   188d4:	subs	r1, r2, r1
   188d8:	rscs	r0, r0, r2, asr #31
   188dc:	str	r1, [sp, #16]
   188e0:	str	r0, [sp, #12]
   188e4:	bcs	18a20 <__assert_fail@plt+0x75f4>
   188e8:	b	18a34 <__assert_fail@plt+0x7608>
   188ec:	b	188f0 <__assert_fail@plt+0x74c4>
   188f0:	b	18948 <__assert_fail@plt+0x751c>
   188f4:	b	18948 <__assert_fail@plt+0x751c>
   188f8:	ldr	r0, [fp, #8]
   188fc:	cmn	r0, #1
   18900:	bne	18948 <__assert_fail@plt+0x751c>
   18904:	b	18908 <__assert_fail@plt+0x74dc>
   18908:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1890c:	add	r0, r0, #0
   18910:	movw	r1, #0
   18914:	cmp	r1, r0
   18918:	blt	18a20 <__assert_fail@plt+0x75f4>
   1891c:	b	18a34 <__assert_fail@plt+0x7608>
   18920:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18924:	movw	r1, #0
   18928:	cmp	r1, r0
   1892c:	bge	18a34 <__assert_fail@plt+0x7608>
   18930:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18934:	sub	r0, r0, #1
   18938:	mvn	r1, #0
   1893c:	cmp	r1, r0
   18940:	blt	18a20 <__assert_fail@plt+0x75f4>
   18944:	b	18a34 <__assert_fail@plt+0x7608>
   18948:	ldr	r0, [fp, #8]
   1894c:	movw	r1, #0
   18950:	sdiv	r0, r1, r0
   18954:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18958:	cmp	r0, r1
   1895c:	blt	18a20 <__assert_fail@plt+0x75f4>
   18960:	b	18a34 <__assert_fail@plt+0x7608>
   18964:	ldr	r0, [fp, #8]
   18968:	cmp	r0, #0
   1896c:	bne	18974 <__assert_fail@plt+0x7548>
   18970:	b	18a34 <__assert_fail@plt+0x7608>
   18974:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18978:	cmp	r0, #0
   1897c:	bge	189e8 <__assert_fail@plt+0x75bc>
   18980:	b	18984 <__assert_fail@plt+0x7558>
   18984:	b	189cc <__assert_fail@plt+0x75a0>
   18988:	b	189cc <__assert_fail@plt+0x75a0>
   1898c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18990:	cmn	r0, #1
   18994:	bne	189cc <__assert_fail@plt+0x75a0>
   18998:	b	1899c <__assert_fail@plt+0x7570>
   1899c:	ldr	r0, [fp, #8]
   189a0:	add	r0, r0, #0
   189a4:	movw	r1, #0
   189a8:	cmp	r1, r0
   189ac:	blt	18a20 <__assert_fail@plt+0x75f4>
   189b0:	b	18a34 <__assert_fail@plt+0x7608>
   189b4:	ldr	r0, [fp, #8]
   189b8:	sub	r0, r0, #1
   189bc:	mvn	r1, #0
   189c0:	cmp	r1, r0
   189c4:	blt	18a20 <__assert_fail@plt+0x75f4>
   189c8:	b	18a34 <__assert_fail@plt+0x7608>
   189cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189d0:	movw	r1, #0
   189d4:	sdiv	r0, r1, r0
   189d8:	ldr	r1, [fp, #8]
   189dc:	cmp	r0, r1
   189e0:	blt	18a20 <__assert_fail@plt+0x75f4>
   189e4:	b	18a34 <__assert_fail@plt+0x7608>
   189e8:	ldr	r0, [fp, #8]
   189ec:	asr	r3, r0, #31
   189f0:	mvn	r1, #0
   189f4:	str	r0, [sp, #8]
   189f8:	mov	r0, r1
   189fc:	ldr	r2, [sp, #8]
   18a00:	bl	1f88c <__assert_fail@plt+0xe460>
   18a04:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18a08:	subs	r0, r0, r2
   18a0c:	sbcs	r1, r1, r2, asr #31
   18a10:	str	r0, [sp, #4]
   18a14:	str	r1, [sp]
   18a18:	bcs	18a34 <__assert_fail@plt+0x7608>
   18a1c:	b	18a20 <__assert_fail@plt+0x75f4>
   18a20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a24:	ldr	r1, [fp, #8]
   18a28:	mul	r0, r0, r1
   18a2c:	str	r0, [fp, #-28]	; 0xffffffe4
   18a30:	b	18a48 <__assert_fail@plt+0x761c>
   18a34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a38:	ldr	r1, [fp, #8]
   18a3c:	mul	r0, r0, r1
   18a40:	str	r0, [fp, #-28]	; 0xffffffe4
   18a44:	b	18a4c <__assert_fail@plt+0x7620>
   18a48:	bl	18c24 <__assert_fail@plt+0x77f8>
   18a4c:	ldr	r0, [fp, #-4]
   18a50:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18a54:	bl	15ee0 <__assert_fail@plt+0x4ab4>
   18a58:	str	r0, [fp, #-4]
   18a5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a60:	ldr	r1, [fp, #-8]
   18a64:	str	r0, [r1]
   18a68:	ldr	r0, [fp, #-4]
   18a6c:	mov	sp, fp
   18a70:	pop	{fp, pc}
   18a74:	svcvc	0x00ffffff
   18a78:	andhi	r0, r0, r1
   18a7c:	andhi	r0, r0, r0
   18a80:			; <UNDEFINED> instruction: 0xffff8000
   18a84:	push	{fp, lr}
   18a88:	mov	fp, sp
   18a8c:	sub	sp, sp, #8
   18a90:	str	r0, [sp, #4]
   18a94:	ldr	r0, [sp, #4]
   18a98:	movw	r1, #1
   18a9c:	bl	18aa8 <__assert_fail@plt+0x767c>
   18aa0:	mov	sp, fp
   18aa4:	pop	{fp, pc}
   18aa8:	push	{fp, lr}
   18aac:	mov	fp, sp
   18ab0:	sub	sp, sp, #8
   18ab4:	str	r0, [sp, #4]
   18ab8:	str	r1, [sp]
   18abc:	ldr	r0, [sp, #4]
   18ac0:	ldr	r1, [sp]
   18ac4:	bl	1cbd8 <__assert_fail@plt+0xb7ac>
   18ac8:	bl	15e6c <__assert_fail@plt+0x4a40>
   18acc:	mov	sp, fp
   18ad0:	pop	{fp, pc}
   18ad4:	push	{fp, lr}
   18ad8:	mov	fp, sp
   18adc:	sub	sp, sp, #8
   18ae0:	str	r0, [sp, #4]
   18ae4:	ldr	r0, [sp, #4]
   18ae8:	movw	r1, #1
   18aec:	bl	18af8 <__assert_fail@plt+0x76cc>
   18af0:	mov	sp, fp
   18af4:	pop	{fp, pc}
   18af8:	push	{fp, lr}
   18afc:	mov	fp, sp
   18b00:	sub	sp, sp, #8
   18b04:	str	r0, [sp, #4]
   18b08:	str	r1, [sp]
   18b0c:	ldr	r0, [sp, #4]
   18b10:	ldr	r1, [sp]
   18b14:	bl	1d27c <__assert_fail@plt+0xbe50>
   18b18:	bl	15e6c <__assert_fail@plt+0x4a40>
   18b1c:	mov	sp, fp
   18b20:	pop	{fp, pc}
   18b24:	push	{fp, lr}
   18b28:	mov	fp, sp
   18b2c:	sub	sp, sp, #16
   18b30:	str	r0, [fp, #-4]
   18b34:	str	r1, [sp, #8]
   18b38:	ldr	r0, [sp, #8]
   18b3c:	bl	15e48 <__assert_fail@plt+0x4a1c>
   18b40:	ldr	r1, [fp, #-4]
   18b44:	ldr	r2, [sp, #8]
   18b48:	str	r0, [sp, #4]
   18b4c:	bl	111a4 <memcpy@plt>
   18b50:	ldr	r0, [sp, #4]
   18b54:	mov	sp, fp
   18b58:	pop	{fp, pc}
   18b5c:	push	{fp, lr}
   18b60:	mov	fp, sp
   18b64:	sub	sp, sp, #16
   18b68:	str	r0, [fp, #-4]
   18b6c:	str	r1, [sp, #8]
   18b70:	ldr	r0, [sp, #8]
   18b74:	bl	15e9c <__assert_fail@plt+0x4a70>
   18b78:	ldr	r1, [fp, #-4]
   18b7c:	ldr	r2, [sp, #8]
   18b80:	str	r0, [sp, #4]
   18b84:	bl	111a4 <memcpy@plt>
   18b88:	ldr	r0, [sp, #4]
   18b8c:	mov	sp, fp
   18b90:	pop	{fp, pc}
   18b94:	push	{fp, lr}
   18b98:	mov	fp, sp
   18b9c:	sub	sp, sp, #16
   18ba0:	str	r0, [fp, #-4]
   18ba4:	str	r1, [sp, #8]
   18ba8:	ldr	r0, [sp, #8]
   18bac:	add	r0, r0, #1
   18bb0:	bl	15e9c <__assert_fail@plt+0x4a70>
   18bb4:	str	r0, [sp, #4]
   18bb8:	ldr	r0, [sp, #4]
   18bbc:	ldr	r1, [sp, #8]
   18bc0:	add	r0, r0, r1
   18bc4:	movw	r1, #0
   18bc8:	strb	r1, [r0]
   18bcc:	ldr	r0, [sp, #4]
   18bd0:	ldr	r1, [fp, #-4]
   18bd4:	ldr	r2, [sp, #8]
   18bd8:	str	r0, [sp]
   18bdc:	bl	111a4 <memcpy@plt>
   18be0:	ldr	r0, [sp]
   18be4:	mov	sp, fp
   18be8:	pop	{fp, pc}
   18bec:	push	{fp, lr}
   18bf0:	mov	fp, sp
   18bf4:	sub	sp, sp, #8
   18bf8:	str	r0, [sp, #4]
   18bfc:	ldr	r0, [sp, #4]
   18c00:	ldr	r1, [sp, #4]
   18c04:	str	r0, [sp]
   18c08:	mov	r0, r1
   18c0c:	bl	112e8 <strlen@plt>
   18c10:	add	r1, r0, #1
   18c14:	ldr	r0, [sp]
   18c18:	bl	18b24 <__assert_fail@plt+0x76f8>
   18c1c:	mov	sp, fp
   18c20:	pop	{fp, pc}
   18c24:	push	{fp, lr}
   18c28:	mov	fp, sp
   18c2c:	sub	sp, sp, #8
   18c30:	movw	r0, #4388	; 0x1124
   18c34:	movt	r0, #3
   18c38:	ldr	r0, [r0]
   18c3c:	movw	r1, #1192	; 0x4a8
   18c40:	movt	r1, #2
   18c44:	str	r0, [sp, #4]
   18c48:	mov	r0, r1
   18c4c:	bl	112d0 <gettext@plt>
   18c50:	ldr	r1, [sp, #4]
   18c54:	str	r0, [sp]
   18c58:	mov	r0, r1
   18c5c:	movw	r1, #0
   18c60:	movw	r2, #99	; 0x63
   18c64:	movt	r2, #2
   18c68:	ldr	r3, [sp]
   18c6c:	bl	11258 <error@plt>
   18c70:	bl	11408 <abort@plt>
   18c74:	push	{fp, lr}
   18c78:	mov	fp, sp
   18c7c:	sub	sp, sp, #16
   18c80:	str	r0, [fp, #-4]
   18c84:	str	r1, [sp, #8]
   18c88:	str	r2, [sp, #4]
   18c8c:	ldr	r0, [fp, #-4]
   18c90:	ldr	r1, [sp, #8]
   18c94:	ldr	r2, [sp, #4]
   18c98:	bl	1d5d8 <__assert_fail@plt+0xc1ac>
   18c9c:	str	r0, [sp]
   18ca0:	ldr	r0, [sp]
   18ca4:	cmn	r0, #1
   18ca8:	bne	18cc0 <__assert_fail@plt+0x7894>
   18cac:	bl	1130c <__errno_location@plt>
   18cb0:	ldr	r0, [r0]
   18cb4:	cmp	r0, #12
   18cb8:	bne	18cc0 <__assert_fail@plt+0x7894>
   18cbc:	bl	18c24 <__assert_fail@plt+0x77f8>
   18cc0:	ldr	r0, [sp]
   18cc4:	mov	sp, fp
   18cc8:	pop	{fp, pc}
   18ccc:	push	{fp, lr}
   18cd0:	mov	fp, sp
   18cd4:	sub	sp, sp, #80	; 0x50
   18cd8:	ldr	ip, [fp, #8]
   18cdc:	str	r0, [fp, #-8]
   18ce0:	str	r1, [fp, #-12]
   18ce4:	str	r2, [fp, #-16]
   18ce8:	str	r3, [fp, #-20]	; 0xffffffec
   18cec:	movw	r0, #0
   18cf0:	str	r0, [fp, #-36]	; 0xffffffdc
   18cf4:	ldr	r1, [fp, #-16]
   18cf8:	cmp	r0, r1
   18cfc:	str	ip, [sp, #20]
   18d00:	bgt	18d14 <__assert_fail@plt+0x78e8>
   18d04:	ldr	r0, [fp, #-16]
   18d08:	cmp	r0, #36	; 0x24
   18d0c:	bgt	18d14 <__assert_fail@plt+0x78e8>
   18d10:	b	18d34 <__assert_fail@plt+0x7908>
   18d14:	movw	r0, #1209	; 0x4b9
   18d18:	movt	r0, #2
   18d1c:	movw	r1, #1247	; 0x4df
   18d20:	movt	r1, #2
   18d24:	movw	r2, #85	; 0x55
   18d28:	movw	r3, #1263	; 0x4ef
   18d2c:	movt	r3, #2
   18d30:	bl	1142c <__assert_fail@plt>
   18d34:	ldr	r0, [fp, #-12]
   18d38:	movw	r1, #0
   18d3c:	cmp	r0, r1
   18d40:	beq	18d50 <__assert_fail@plt+0x7924>
   18d44:	ldr	r0, [fp, #-12]
   18d48:	str	r0, [sp, #16]
   18d4c:	b	18d5c <__assert_fail@plt+0x7930>
   18d50:	sub	r0, fp, #24
   18d54:	str	r0, [sp, #16]
   18d58:	b	18d5c <__assert_fail@plt+0x7930>
   18d5c:	ldr	r0, [sp, #16]
   18d60:	str	r0, [fp, #-28]	; 0xffffffe4
   18d64:	bl	1130c <__errno_location@plt>
   18d68:	movw	lr, #0
   18d6c:	str	lr, [r0]
   18d70:	ldr	r0, [fp, #-8]
   18d74:	str	r0, [sp, #40]	; 0x28
   18d78:	ldr	r0, [sp, #40]	; 0x28
   18d7c:	ldrb	r0, [r0]
   18d80:	strb	r0, [sp, #39]	; 0x27
   18d84:	bl	112b8 <__ctype_b_loc@plt>
   18d88:	ldr	r0, [r0]
   18d8c:	ldrb	lr, [sp, #39]	; 0x27
   18d90:	mov	r1, lr
   18d94:	add	r0, r0, lr, lsl #1
   18d98:	ldrh	r0, [r0]
   18d9c:	and	r0, r0, #8192	; 0x2000
   18da0:	cmp	r0, #0
   18da4:	str	r1, [sp, #12]
   18da8:	beq	18dc4 <__assert_fail@plt+0x7998>
   18dac:	ldr	r0, [sp, #40]	; 0x28
   18db0:	add	r1, r0, #1
   18db4:	str	r1, [sp, #40]	; 0x28
   18db8:	ldrb	r0, [r0, #1]
   18dbc:	strb	r0, [sp, #39]	; 0x27
   18dc0:	b	18d84 <__assert_fail@plt+0x7958>
   18dc4:	ldrb	r0, [sp, #39]	; 0x27
   18dc8:	cmp	r0, #45	; 0x2d
   18dcc:	bne	18ddc <__assert_fail@plt+0x79b0>
   18dd0:	movw	r0, #4
   18dd4:	str	r0, [fp, #-4]
   18dd8:	b	1932c <__assert_fail@plt+0x7f00>
   18ddc:	ldr	r0, [fp, #-8]
   18de0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18de4:	ldr	r2, [fp, #-16]
   18de8:	bl	112dc <strtoul@plt>
   18dec:	str	r0, [fp, #-32]	; 0xffffffe0
   18df0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18df4:	ldr	r0, [r0]
   18df8:	ldr	r1, [fp, #-8]
   18dfc:	cmp	r0, r1
   18e00:	bne	18e64 <__assert_fail@plt+0x7a38>
   18e04:	ldr	r0, [fp, #8]
   18e08:	movw	r1, #0
   18e0c:	cmp	r0, r1
   18e10:	beq	18e54 <__assert_fail@plt+0x7a28>
   18e14:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18e18:	ldr	r0, [r0]
   18e1c:	ldrb	r0, [r0]
   18e20:	cmp	r0, #0
   18e24:	beq	18e54 <__assert_fail@plt+0x7a28>
   18e28:	ldr	r0, [fp, #8]
   18e2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18e30:	ldr	r1, [r1]
   18e34:	ldrb	r1, [r1]
   18e38:	bl	112f4 <strchr@plt>
   18e3c:	movw	r1, #0
   18e40:	cmp	r0, r1
   18e44:	beq	18e54 <__assert_fail@plt+0x7a28>
   18e48:	movw	r0, #1
   18e4c:	str	r0, [fp, #-32]	; 0xffffffe0
   18e50:	b	18e60 <__assert_fail@plt+0x7a34>
   18e54:	movw	r0, #4
   18e58:	str	r0, [fp, #-4]
   18e5c:	b	1932c <__assert_fail@plt+0x7f00>
   18e60:	b	18e9c <__assert_fail@plt+0x7a70>
   18e64:	bl	1130c <__errno_location@plt>
   18e68:	ldr	r0, [r0]
   18e6c:	cmp	r0, #0
   18e70:	beq	18e98 <__assert_fail@plt+0x7a6c>
   18e74:	bl	1130c <__errno_location@plt>
   18e78:	ldr	r0, [r0]
   18e7c:	cmp	r0, #34	; 0x22
   18e80:	beq	18e90 <__assert_fail@plt+0x7a64>
   18e84:	movw	r0, #4
   18e88:	str	r0, [fp, #-4]
   18e8c:	b	1932c <__assert_fail@plt+0x7f00>
   18e90:	movw	r0, #1
   18e94:	str	r0, [fp, #-36]	; 0xffffffdc
   18e98:	b	18e9c <__assert_fail@plt+0x7a70>
   18e9c:	ldr	r0, [fp, #8]
   18ea0:	movw	r1, #0
   18ea4:	cmp	r0, r1
   18ea8:	bne	18ec4 <__assert_fail@plt+0x7a98>
   18eac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18eb0:	ldr	r1, [fp, #-20]	; 0xffffffec
   18eb4:	str	r0, [r1]
   18eb8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18ebc:	str	r0, [fp, #-4]
   18ec0:	b	1932c <__assert_fail@plt+0x7f00>
   18ec4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18ec8:	ldr	r0, [r0]
   18ecc:	ldrb	r0, [r0]
   18ed0:	cmp	r0, #0
   18ed4:	beq	19318 <__assert_fail@plt+0x7eec>
   18ed8:	movw	r0, #1024	; 0x400
   18edc:	str	r0, [sp, #32]
   18ee0:	movw	r0, #1
   18ee4:	str	r0, [sp, #28]
   18ee8:	ldr	r0, [fp, #8]
   18eec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18ef0:	ldr	r1, [r1]
   18ef4:	ldrb	r1, [r1]
   18ef8:	bl	112f4 <strchr@plt>
   18efc:	movw	r1, #0
   18f00:	cmp	r0, r1
   18f04:	bne	18f24 <__assert_fail@plt+0x7af8>
   18f08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18f0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18f10:	str	r0, [r1]
   18f14:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18f18:	orr	r0, r0, #2
   18f1c:	str	r0, [fp, #-4]
   18f20:	b	1932c <__assert_fail@plt+0x7f00>
   18f24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18f28:	ldr	r0, [r0]
   18f2c:	ldrb	r0, [r0]
   18f30:	sub	r0, r0, #69	; 0x45
   18f34:	cmp	r0, #47	; 0x2f
   18f38:	str	r0, [sp, #8]
   18f3c:	bhi	190a8 <__assert_fail@plt+0x7c7c>
   18f40:	add	r0, pc, #8
   18f44:	ldr	r1, [sp, #8]
   18f48:	ldr	r0, [r0, r1, lsl #2]
   18f4c:	mov	pc, r0
   18f50:	andeq	r9, r1, r0, lsl r0
   18f54:	andeq	r9, r1, r8, lsr #1
   18f58:	andeq	r9, r1, r0, lsl r0
   18f5c:	andeq	r9, r1, r8, lsr #1
   18f60:	andeq	r9, r1, r8, lsr #1
   18f64:	andeq	r9, r1, r8, lsr #1
   18f68:	andeq	r9, r1, r0, lsl r0
   18f6c:	andeq	r9, r1, r8, lsr #1
   18f70:	andeq	r9, r1, r0, lsl r0
   18f74:	andeq	r9, r1, r8, lsr #1
   18f78:	andeq	r9, r1, r8, lsr #1
   18f7c:	andeq	r9, r1, r0, lsl r0
   18f80:	andeq	r9, r1, r8, lsr #1
   18f84:	andeq	r9, r1, r8, lsr #1
   18f88:	andeq	r9, r1, r8, lsr #1
   18f8c:	andeq	r9, r1, r0, lsl r0
   18f90:	andeq	r9, r1, r8, lsr #1
   18f94:	andeq	r9, r1, r8, lsr #1
   18f98:	andeq	r9, r1, r8, lsr #1
   18f9c:	andeq	r9, r1, r8, lsr #1
   18fa0:	andeq	r9, r1, r0, lsl r0
   18fa4:	andeq	r9, r1, r0, lsl r0
   18fa8:	andeq	r9, r1, r8, lsr #1
   18fac:	andeq	r9, r1, r8, lsr #1
   18fb0:	andeq	r9, r1, r8, lsr #1
   18fb4:	andeq	r9, r1, r8, lsr #1
   18fb8:	andeq	r9, r1, r8, lsr #1
   18fbc:	andeq	r9, r1, r8, lsr #1
   18fc0:	andeq	r9, r1, r8, lsr #1
   18fc4:	andeq	r9, r1, r8, lsr #1
   18fc8:	andeq	r9, r1, r8, lsr #1
   18fcc:	andeq	r9, r1, r8, lsr #1
   18fd0:	andeq	r9, r1, r8, lsr #1
   18fd4:	andeq	r9, r1, r8, lsr #1
   18fd8:	andeq	r9, r1, r0, lsl r0
   18fdc:	andeq	r9, r1, r8, lsr #1
   18fe0:	andeq	r9, r1, r8, lsr #1
   18fe4:	andeq	r9, r1, r8, lsr #1
   18fe8:	andeq	r9, r1, r0, lsl r0
   18fec:	andeq	r9, r1, r8, lsr #1
   18ff0:	andeq	r9, r1, r0, lsl r0
   18ff4:	andeq	r9, r1, r8, lsr #1
   18ff8:	andeq	r9, r1, r8, lsr #1
   18ffc:	andeq	r9, r1, r8, lsr #1
   19000:	andeq	r9, r1, r8, lsr #1
   19004:	andeq	r9, r1, r8, lsr #1
   19008:	andeq	r9, r1, r8, lsr #1
   1900c:	andeq	r9, r1, r0, lsl r0
   19010:	ldr	r0, [fp, #8]
   19014:	movw	r1, #48	; 0x30
   19018:	bl	112f4 <strchr@plt>
   1901c:	movw	r1, #0
   19020:	cmp	r0, r1
   19024:	beq	190a4 <__assert_fail@plt+0x7c78>
   19028:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1902c:	ldr	r0, [r0]
   19030:	ldrb	r0, [r0, #1]
   19034:	mov	r1, r0
   19038:	cmp	r0, #66	; 0x42
   1903c:	str	r1, [sp, #4]
   19040:	beq	1908c <__assert_fail@plt+0x7c60>
   19044:	b	19048 <__assert_fail@plt+0x7c1c>
   19048:	ldr	r0, [sp, #4]
   1904c:	cmp	r0, #68	; 0x44
   19050:	beq	1908c <__assert_fail@plt+0x7c60>
   19054:	b	19058 <__assert_fail@plt+0x7c2c>
   19058:	ldr	r0, [sp, #4]
   1905c:	cmp	r0, #105	; 0x69
   19060:	bne	190a0 <__assert_fail@plt+0x7c74>
   19064:	b	19068 <__assert_fail@plt+0x7c3c>
   19068:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1906c:	ldr	r0, [r0]
   19070:	ldrb	r0, [r0, #2]
   19074:	cmp	r0, #66	; 0x42
   19078:	bne	19088 <__assert_fail@plt+0x7c5c>
   1907c:	ldr	r0, [sp, #28]
   19080:	add	r0, r0, #2
   19084:	str	r0, [sp, #28]
   19088:	b	190a0 <__assert_fail@plt+0x7c74>
   1908c:	movw	r0, #1000	; 0x3e8
   19090:	str	r0, [sp, #32]
   19094:	ldr	r0, [sp, #28]
   19098:	add	r0, r0, #1
   1909c:	str	r0, [sp, #28]
   190a0:	b	190a4 <__assert_fail@plt+0x7c78>
   190a4:	b	190a8 <__assert_fail@plt+0x7c7c>
   190a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   190ac:	ldr	r0, [r0]
   190b0:	ldrb	r0, [r0]
   190b4:	sub	r0, r0, #66	; 0x42
   190b8:	cmp	r0, #53	; 0x35
   190bc:	str	r0, [sp]
   190c0:	bhi	192b4 <__assert_fail@plt+0x7e88>
   190c4:	add	r0, pc, #8
   190c8:	ldr	r1, [sp]
   190cc:	ldr	r0, [r0, r1, lsl #2]
   190d0:	mov	pc, r0
   190d4:	andeq	r9, r1, r0, asr #3
   190d8:			; <UNDEFINED> instruction: 0x000192b4
   190dc:			; <UNDEFINED> instruction: 0x000192b4
   190e0:	andeq	r9, r1, r0, ror #3
   190e4:			; <UNDEFINED> instruction: 0x000192b4
   190e8:	strdeq	r9, [r1], -r8
   190ec:			; <UNDEFINED> instruction: 0x000192b4
   190f0:			; <UNDEFINED> instruction: 0x000192b4
   190f4:			; <UNDEFINED> instruction: 0x000192b4
   190f8:	andeq	r9, r1, r0, lsl r2
   190fc:			; <UNDEFINED> instruction: 0x000192b4
   19100:	andeq	r9, r1, r8, lsr #4
   19104:			; <UNDEFINED> instruction: 0x000192b4
   19108:			; <UNDEFINED> instruction: 0x000192b4
   1910c:	andeq	r9, r1, r0, asr #4
   19110:			; <UNDEFINED> instruction: 0x000192b4
   19114:			; <UNDEFINED> instruction: 0x000192b4
   19118:			; <UNDEFINED> instruction: 0x000192b4
   1911c:	andeq	r9, r1, r8, asr r2
   19120:			; <UNDEFINED> instruction: 0x000192b4
   19124:			; <UNDEFINED> instruction: 0x000192b4
   19128:			; <UNDEFINED> instruction: 0x000192b4
   1912c:			; <UNDEFINED> instruction: 0x000192b4
   19130:	andeq	r9, r1, r4, lsl #5
   19134:	muleq	r1, ip, r2
   19138:			; <UNDEFINED> instruction: 0x000192b4
   1913c:			; <UNDEFINED> instruction: 0x000192b4
   19140:			; <UNDEFINED> instruction: 0x000192b4
   19144:			; <UNDEFINED> instruction: 0x000192b4
   19148:			; <UNDEFINED> instruction: 0x000192b4
   1914c:			; <UNDEFINED> instruction: 0x000192b4
   19150:			; <UNDEFINED> instruction: 0x000192b4
   19154:	andeq	r9, r1, ip, lsr #3
   19158:	ldrdeq	r9, [r1], -r4
   1915c:			; <UNDEFINED> instruction: 0x000192b4
   19160:			; <UNDEFINED> instruction: 0x000192b4
   19164:			; <UNDEFINED> instruction: 0x000192b4
   19168:	strdeq	r9, [r1], -r8
   1916c:			; <UNDEFINED> instruction: 0x000192b4
   19170:			; <UNDEFINED> instruction: 0x000192b4
   19174:			; <UNDEFINED> instruction: 0x000192b4
   19178:	andeq	r9, r1, r0, lsl r2
   1917c:			; <UNDEFINED> instruction: 0x000192b4
   19180:	andeq	r9, r1, r8, lsr #4
   19184:			; <UNDEFINED> instruction: 0x000192b4
   19188:			; <UNDEFINED> instruction: 0x000192b4
   1918c:			; <UNDEFINED> instruction: 0x000192b4
   19190:			; <UNDEFINED> instruction: 0x000192b4
   19194:			; <UNDEFINED> instruction: 0x000192b4
   19198:			; <UNDEFINED> instruction: 0x000192b4
   1919c:	andeq	r9, r1, r8, asr r2
   191a0:			; <UNDEFINED> instruction: 0x000192b4
   191a4:			; <UNDEFINED> instruction: 0x000192b4
   191a8:	andeq	r9, r1, r0, ror r2
   191ac:	sub	r0, fp, #32
   191b0:	movw	r1, #512	; 0x200
   191b4:	bl	19338 <__assert_fail@plt+0x7f0c>
   191b8:	str	r0, [sp, #24]
   191bc:	b	192d0 <__assert_fail@plt+0x7ea4>
   191c0:	sub	r0, fp, #32
   191c4:	movw	r1, #1024	; 0x400
   191c8:	bl	19338 <__assert_fail@plt+0x7f0c>
   191cc:	str	r0, [sp, #24]
   191d0:	b	192d0 <__assert_fail@plt+0x7ea4>
   191d4:	movw	r0, #0
   191d8:	str	r0, [sp, #24]
   191dc:	b	192d0 <__assert_fail@plt+0x7ea4>
   191e0:	ldr	r1, [sp, #32]
   191e4:	sub	r0, fp, #32
   191e8:	movw	r2, #6
   191ec:	bl	1a978 <__assert_fail@plt+0x954c>
   191f0:	str	r0, [sp, #24]
   191f4:	b	192d0 <__assert_fail@plt+0x7ea4>
   191f8:	ldr	r1, [sp, #32]
   191fc:	sub	r0, fp, #32
   19200:	movw	r2, #3
   19204:	bl	1a978 <__assert_fail@plt+0x954c>
   19208:	str	r0, [sp, #24]
   1920c:	b	192d0 <__assert_fail@plt+0x7ea4>
   19210:	ldr	r1, [sp, #32]
   19214:	sub	r0, fp, #32
   19218:	movw	r2, #1
   1921c:	bl	1a978 <__assert_fail@plt+0x954c>
   19220:	str	r0, [sp, #24]
   19224:	b	192d0 <__assert_fail@plt+0x7ea4>
   19228:	ldr	r1, [sp, #32]
   1922c:	sub	r0, fp, #32
   19230:	movw	r2, #2
   19234:	bl	1a978 <__assert_fail@plt+0x954c>
   19238:	str	r0, [sp, #24]
   1923c:	b	192d0 <__assert_fail@plt+0x7ea4>
   19240:	ldr	r1, [sp, #32]
   19244:	sub	r0, fp, #32
   19248:	movw	r2, #5
   1924c:	bl	1a978 <__assert_fail@plt+0x954c>
   19250:	str	r0, [sp, #24]
   19254:	b	192d0 <__assert_fail@plt+0x7ea4>
   19258:	ldr	r1, [sp, #32]
   1925c:	sub	r0, fp, #32
   19260:	movw	r2, #4
   19264:	bl	1a978 <__assert_fail@plt+0x954c>
   19268:	str	r0, [sp, #24]
   1926c:	b	192d0 <__assert_fail@plt+0x7ea4>
   19270:	sub	r0, fp, #32
   19274:	movw	r1, #2
   19278:	bl	19338 <__assert_fail@plt+0x7f0c>
   1927c:	str	r0, [sp, #24]
   19280:	b	192d0 <__assert_fail@plt+0x7ea4>
   19284:	ldr	r1, [sp, #32]
   19288:	sub	r0, fp, #32
   1928c:	movw	r2, #8
   19290:	bl	1a978 <__assert_fail@plt+0x954c>
   19294:	str	r0, [sp, #24]
   19298:	b	192d0 <__assert_fail@plt+0x7ea4>
   1929c:	ldr	r1, [sp, #32]
   192a0:	sub	r0, fp, #32
   192a4:	movw	r2, #7
   192a8:	bl	1a978 <__assert_fail@plt+0x954c>
   192ac:	str	r0, [sp, #24]
   192b0:	b	192d0 <__assert_fail@plt+0x7ea4>
   192b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   192b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   192bc:	str	r0, [r1]
   192c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   192c4:	orr	r0, r0, #2
   192c8:	str	r0, [fp, #-4]
   192cc:	b	1932c <__assert_fail@plt+0x7f00>
   192d0:	ldr	r0, [sp, #24]
   192d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   192d8:	orr	r0, r1, r0
   192dc:	str	r0, [fp, #-36]	; 0xffffffdc
   192e0:	ldr	r0, [sp, #28]
   192e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   192e8:	ldr	r2, [r1]
   192ec:	add	r0, r2, r0
   192f0:	str	r0, [r1]
   192f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   192f8:	ldr	r0, [r0]
   192fc:	ldrsb	r0, [r0]
   19300:	cmp	r0, #0
   19304:	beq	19314 <__assert_fail@plt+0x7ee8>
   19308:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1930c:	orr	r0, r0, #2
   19310:	str	r0, [fp, #-36]	; 0xffffffdc
   19314:	b	19318 <__assert_fail@plt+0x7eec>
   19318:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1931c:	ldr	r1, [fp, #-20]	; 0xffffffec
   19320:	str	r0, [r1]
   19324:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19328:	str	r0, [fp, #-4]
   1932c:	ldr	r0, [fp, #-4]
   19330:	mov	sp, fp
   19334:	pop	{fp, pc}
   19338:	push	{fp, lr}
   1933c:	mov	fp, sp
   19340:	sub	sp, sp, #184	; 0xb8
   19344:	str	r0, [fp, #-8]
   19348:	str	r1, [fp, #-12]
   1934c:	b	19780 <__assert_fail@plt+0x8354>
   19350:	b	19568 <__assert_fail@plt+0x813c>
   19354:	ldr	r0, [fp, #-12]
   19358:	cmp	r0, #0
   1935c:	bge	1948c <__assert_fail@plt+0x8060>
   19360:	ldr	r0, [fp, #-8]
   19364:	ldr	r0, [r0]
   19368:	cmp	r0, #0
   1936c:	bcs	19400 <__assert_fail@plt+0x7fd4>
   19370:	b	19374 <__assert_fail@plt+0x7f48>
   19374:	ldr	r0, [fp, #-8]
   19378:	ldr	r0, [r0]
   1937c:	ldr	r1, [fp, #-12]
   19380:	movw	r2, #127	; 0x7f
   19384:	sdiv	r1, r2, r1
   19388:	cmp	r0, r1
   1938c:	bcc	19530 <__assert_fail@plt+0x8104>
   19390:	b	1954c <__assert_fail@plt+0x8120>
   19394:	b	19398 <__assert_fail@plt+0x7f6c>
   19398:	ldr	r0, [pc, #4072]	; 1a388 <__assert_fail@plt+0x8f5c>
   1939c:	ldr	r1, [fp, #-12]
   193a0:	cmp	r1, r0
   193a4:	blt	193bc <__assert_fail@plt+0x7f90>
   193a8:	b	193c8 <__assert_fail@plt+0x7f9c>
   193ac:	ldr	r0, [fp, #-12]
   193b0:	movw	r1, #0
   193b4:	cmp	r1, r0
   193b8:	bge	193c8 <__assert_fail@plt+0x7f9c>
   193bc:	movw	r0, #0
   193c0:	str	r0, [fp, #-20]	; 0xffffffec
   193c4:	b	193e0 <__assert_fail@plt+0x7fb4>
   193c8:	ldr	r0, [fp, #-12]
   193cc:	movw	r1, #0
   193d0:	sub	r0, r1, r0
   193d4:	movw	r1, #127	; 0x7f
   193d8:	sdiv	r0, r1, r0
   193dc:	str	r0, [fp, #-20]	; 0xffffffec
   193e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   193e4:	ldr	r1, [fp, #-8]
   193e8:	ldr	r1, [r1]
   193ec:	mvn	r2, #0
   193f0:	sub	r1, r2, r1
   193f4:	cmp	r0, r1
   193f8:	bls	19530 <__assert_fail@plt+0x8104>
   193fc:	b	1954c <__assert_fail@plt+0x8120>
   19400:	b	19404 <__assert_fail@plt+0x7fd8>
   19404:	b	1946c <__assert_fail@plt+0x8040>
   19408:	b	1946c <__assert_fail@plt+0x8040>
   1940c:	ldr	r0, [fp, #-12]
   19410:	cmn	r0, #1
   19414:	bne	1946c <__assert_fail@plt+0x8040>
   19418:	b	1943c <__assert_fail@plt+0x8010>
   1941c:	ldr	r0, [fp, #-8]
   19420:	ldr	r0, [r0]
   19424:	mvn	r1, #127	; 0x7f
   19428:	add	r0, r0, r1
   1942c:	movw	r1, #0
   19430:	cmp	r1, r0
   19434:	bcc	19530 <__assert_fail@plt+0x8104>
   19438:	b	1954c <__assert_fail@plt+0x8120>
   1943c:	ldr	r0, [fp, #-8]
   19440:	ldr	r0, [r0]
   19444:	movw	r1, #0
   19448:	cmp	r1, r0
   1944c:	bcs	1954c <__assert_fail@plt+0x8120>
   19450:	ldr	r0, [fp, #-8]
   19454:	ldr	r0, [r0]
   19458:	sub	r0, r0, #1
   1945c:	movw	r1, #127	; 0x7f
   19460:	cmp	r1, r0
   19464:	bcc	19530 <__assert_fail@plt+0x8104>
   19468:	b	1954c <__assert_fail@plt+0x8120>
   1946c:	ldr	r0, [fp, #-12]
   19470:	mvn	r1, #127	; 0x7f
   19474:	sdiv	r0, r1, r0
   19478:	ldr	r1, [fp, #-8]
   1947c:	ldr	r1, [r1]
   19480:	cmp	r0, r1
   19484:	bcc	19530 <__assert_fail@plt+0x8104>
   19488:	b	1954c <__assert_fail@plt+0x8120>
   1948c:	ldr	r0, [fp, #-12]
   19490:	cmp	r0, #0
   19494:	bne	1949c <__assert_fail@plt+0x8070>
   19498:	b	1954c <__assert_fail@plt+0x8120>
   1949c:	ldr	r0, [fp, #-8]
   194a0:	ldr	r0, [r0]
   194a4:	cmp	r0, #0
   194a8:	bcs	19514 <__assert_fail@plt+0x80e8>
   194ac:	ldr	r0, [fp, #-8]
   194b0:	ldr	r0, [r0]
   194b4:	cmn	r0, #1
   194b8:	bne	194f4 <__assert_fail@plt+0x80c8>
   194bc:	b	194c0 <__assert_fail@plt+0x8094>
   194c0:	ldr	r0, [fp, #-12]
   194c4:	mvn	r1, #127	; 0x7f
   194c8:	add	r0, r0, r1
   194cc:	movw	r1, #0
   194d0:	cmp	r1, r0
   194d4:	blt	19530 <__assert_fail@plt+0x8104>
   194d8:	b	1954c <__assert_fail@plt+0x8120>
   194dc:	ldr	r0, [fp, #-12]
   194e0:	sub	r0, r0, #1
   194e4:	movw	r1, #127	; 0x7f
   194e8:	cmp	r1, r0
   194ec:	blt	19530 <__assert_fail@plt+0x8104>
   194f0:	b	1954c <__assert_fail@plt+0x8120>
   194f4:	ldr	r0, [fp, #-8]
   194f8:	ldr	r0, [r0]
   194fc:	mvn	r1, #127	; 0x7f
   19500:	udiv	r0, r1, r0
   19504:	ldr	r1, [fp, #-12]
   19508:	cmp	r0, r1
   1950c:	bcc	19530 <__assert_fail@plt+0x8104>
   19510:	b	1954c <__assert_fail@plt+0x8120>
   19514:	ldr	r0, [fp, #-12]
   19518:	movw	r1, #127	; 0x7f
   1951c:	sdiv	r0, r1, r0
   19520:	ldr	r1, [fp, #-8]
   19524:	ldr	r1, [r1]
   19528:	cmp	r0, r1
   1952c:	bcs	1954c <__assert_fail@plt+0x8120>
   19530:	ldr	r0, [fp, #-8]
   19534:	ldr	r0, [r0]
   19538:	ldr	r1, [fp, #-12]
   1953c:	mul	r0, r0, r1
   19540:	sxtb	r0, r0
   19544:	str	r0, [fp, #-16]
   19548:	b	1a918 <__assert_fail@plt+0x94ec>
   1954c:	ldr	r0, [fp, #-8]
   19550:	ldr	r0, [r0]
   19554:	ldr	r1, [fp, #-12]
   19558:	mul	r0, r0, r1
   1955c:	sxtb	r0, r0
   19560:	str	r0, [fp, #-16]
   19564:	b	1a94c <__assert_fail@plt+0x9520>
   19568:	ldr	r0, [fp, #-12]
   1956c:	cmp	r0, #0
   19570:	bge	1969c <__assert_fail@plt+0x8270>
   19574:	ldr	r0, [fp, #-8]
   19578:	ldr	r0, [r0]
   1957c:	cmp	r0, #0
   19580:	bcs	19614 <__assert_fail@plt+0x81e8>
   19584:	b	19588 <__assert_fail@plt+0x815c>
   19588:	ldr	r0, [fp, #-8]
   1958c:	ldr	r0, [r0]
   19590:	ldr	r1, [fp, #-12]
   19594:	movw	r2, #255	; 0xff
   19598:	sdiv	r1, r2, r1
   1959c:	cmp	r0, r1
   195a0:	bcc	19748 <__assert_fail@plt+0x831c>
   195a4:	b	19764 <__assert_fail@plt+0x8338>
   195a8:	b	195ac <__assert_fail@plt+0x8180>
   195ac:	ldr	r0, [pc, #3540]	; 1a388 <__assert_fail@plt+0x8f5c>
   195b0:	ldr	r1, [fp, #-12]
   195b4:	cmp	r1, r0
   195b8:	blt	195d0 <__assert_fail@plt+0x81a4>
   195bc:	b	195dc <__assert_fail@plt+0x81b0>
   195c0:	ldr	r0, [fp, #-12]
   195c4:	movw	r1, #0
   195c8:	cmp	r1, r0
   195cc:	bge	195dc <__assert_fail@plt+0x81b0>
   195d0:	movw	r0, #0
   195d4:	str	r0, [fp, #-24]	; 0xffffffe8
   195d8:	b	195f4 <__assert_fail@plt+0x81c8>
   195dc:	ldr	r0, [fp, #-12]
   195e0:	movw	r1, #0
   195e4:	sub	r0, r1, r0
   195e8:	movw	r1, #255	; 0xff
   195ec:	sdiv	r0, r1, r0
   195f0:	str	r0, [fp, #-24]	; 0xffffffe8
   195f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   195f8:	ldr	r1, [fp, #-8]
   195fc:	ldr	r1, [r1]
   19600:	mvn	r2, #0
   19604:	sub	r1, r2, r1
   19608:	cmp	r0, r1
   1960c:	bls	19748 <__assert_fail@plt+0x831c>
   19610:	b	19764 <__assert_fail@plt+0x8338>
   19614:	b	19618 <__assert_fail@plt+0x81ec>
   19618:	b	1967c <__assert_fail@plt+0x8250>
   1961c:	b	1967c <__assert_fail@plt+0x8250>
   19620:	ldr	r0, [fp, #-12]
   19624:	cmn	r0, #1
   19628:	bne	1967c <__assert_fail@plt+0x8250>
   1962c:	b	1964c <__assert_fail@plt+0x8220>
   19630:	ldr	r0, [fp, #-8]
   19634:	ldr	r0, [r0]
   19638:	add	r0, r0, #0
   1963c:	movw	r1, #0
   19640:	cmp	r1, r0
   19644:	bcc	19748 <__assert_fail@plt+0x831c>
   19648:	b	19764 <__assert_fail@plt+0x8338>
   1964c:	ldr	r0, [fp, #-8]
   19650:	ldr	r0, [r0]
   19654:	movw	r1, #0
   19658:	cmp	r1, r0
   1965c:	bcs	19764 <__assert_fail@plt+0x8338>
   19660:	ldr	r0, [fp, #-8]
   19664:	ldr	r0, [r0]
   19668:	sub	r0, r0, #1
   1966c:	mvn	r1, #0
   19670:	cmp	r1, r0
   19674:	bcc	19748 <__assert_fail@plt+0x831c>
   19678:	b	19764 <__assert_fail@plt+0x8338>
   1967c:	ldr	r0, [fp, #-12]
   19680:	movw	r1, #0
   19684:	sdiv	r0, r1, r0
   19688:	ldr	r1, [fp, #-8]
   1968c:	ldr	r1, [r1]
   19690:	cmp	r0, r1
   19694:	bcc	19748 <__assert_fail@plt+0x831c>
   19698:	b	19764 <__assert_fail@plt+0x8338>
   1969c:	ldr	r0, [fp, #-12]
   196a0:	cmp	r0, #0
   196a4:	bne	196ac <__assert_fail@plt+0x8280>
   196a8:	b	19764 <__assert_fail@plt+0x8338>
   196ac:	ldr	r0, [fp, #-8]
   196b0:	ldr	r0, [r0]
   196b4:	cmp	r0, #0
   196b8:	bcs	1972c <__assert_fail@plt+0x8300>
   196bc:	b	196c4 <__assert_fail@plt+0x8298>
   196c0:	b	196c8 <__assert_fail@plt+0x829c>
   196c4:	b	1970c <__assert_fail@plt+0x82e0>
   196c8:	ldr	r0, [fp, #-8]
   196cc:	ldr	r0, [r0]
   196d0:	cmn	r0, #1
   196d4:	bne	1970c <__assert_fail@plt+0x82e0>
   196d8:	b	196dc <__assert_fail@plt+0x82b0>
   196dc:	ldr	r0, [fp, #-12]
   196e0:	add	r0, r0, #0
   196e4:	movw	r1, #0
   196e8:	cmp	r1, r0
   196ec:	blt	19748 <__assert_fail@plt+0x831c>
   196f0:	b	19764 <__assert_fail@plt+0x8338>
   196f4:	ldr	r0, [fp, #-12]
   196f8:	sub	r0, r0, #1
   196fc:	mvn	r1, #0
   19700:	cmp	r1, r0
   19704:	blt	19748 <__assert_fail@plt+0x831c>
   19708:	b	19764 <__assert_fail@plt+0x8338>
   1970c:	ldr	r0, [fp, #-8]
   19710:	ldr	r0, [r0]
   19714:	movw	r1, #0
   19718:	udiv	r0, r1, r0
   1971c:	ldr	r1, [fp, #-12]
   19720:	cmp	r0, r1
   19724:	bcc	19748 <__assert_fail@plt+0x831c>
   19728:	b	19764 <__assert_fail@plt+0x8338>
   1972c:	ldr	r0, [fp, #-12]
   19730:	movw	r1, #255	; 0xff
   19734:	sdiv	r0, r1, r0
   19738:	ldr	r1, [fp, #-8]
   1973c:	ldr	r1, [r1]
   19740:	cmp	r0, r1
   19744:	bcs	19764 <__assert_fail@plt+0x8338>
   19748:	ldr	r0, [fp, #-8]
   1974c:	ldr	r0, [r0]
   19750:	ldr	r1, [fp, #-12]
   19754:	mul	r0, r0, r1
   19758:	and	r0, r0, #255	; 0xff
   1975c:	str	r0, [fp, #-16]
   19760:	b	1a918 <__assert_fail@plt+0x94ec>
   19764:	ldr	r0, [fp, #-8]
   19768:	ldr	r0, [r0]
   1976c:	ldr	r1, [fp, #-12]
   19770:	mul	r0, r0, r1
   19774:	and	r0, r0, #255	; 0xff
   19778:	str	r0, [fp, #-16]
   1977c:	b	1a94c <__assert_fail@plt+0x9520>
   19780:	b	19bb4 <__assert_fail@plt+0x8788>
   19784:	b	1999c <__assert_fail@plt+0x8570>
   19788:	ldr	r0, [fp, #-12]
   1978c:	cmp	r0, #0
   19790:	bge	198c0 <__assert_fail@plt+0x8494>
   19794:	ldr	r0, [fp, #-8]
   19798:	ldr	r0, [r0]
   1979c:	cmp	r0, #0
   197a0:	bcs	19834 <__assert_fail@plt+0x8408>
   197a4:	b	197a8 <__assert_fail@plt+0x837c>
   197a8:	ldr	r0, [fp, #-8]
   197ac:	ldr	r0, [r0]
   197b0:	ldr	r1, [fp, #-12]
   197b4:	movw	r2, #32767	; 0x7fff
   197b8:	sdiv	r1, r2, r1
   197bc:	cmp	r0, r1
   197c0:	bcc	19964 <__assert_fail@plt+0x8538>
   197c4:	b	19980 <__assert_fail@plt+0x8554>
   197c8:	b	197cc <__assert_fail@plt+0x83a0>
   197cc:	ldr	r0, [pc, #2996]	; 1a388 <__assert_fail@plt+0x8f5c>
   197d0:	ldr	r1, [fp, #-12]
   197d4:	cmp	r1, r0
   197d8:	blt	197f0 <__assert_fail@plt+0x83c4>
   197dc:	b	197fc <__assert_fail@plt+0x83d0>
   197e0:	ldr	r0, [fp, #-12]
   197e4:	movw	r1, #0
   197e8:	cmp	r1, r0
   197ec:	bge	197fc <__assert_fail@plt+0x83d0>
   197f0:	movw	r0, #0
   197f4:	str	r0, [fp, #-28]	; 0xffffffe4
   197f8:	b	19814 <__assert_fail@plt+0x83e8>
   197fc:	ldr	r0, [fp, #-12]
   19800:	movw	r1, #0
   19804:	sub	r0, r1, r0
   19808:	movw	r1, #32767	; 0x7fff
   1980c:	sdiv	r0, r1, r0
   19810:	str	r0, [fp, #-28]	; 0xffffffe4
   19814:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19818:	ldr	r1, [fp, #-8]
   1981c:	ldr	r1, [r1]
   19820:	mvn	r2, #0
   19824:	sub	r1, r2, r1
   19828:	cmp	r0, r1
   1982c:	bls	19964 <__assert_fail@plt+0x8538>
   19830:	b	19980 <__assert_fail@plt+0x8554>
   19834:	b	19838 <__assert_fail@plt+0x840c>
   19838:	b	198a0 <__assert_fail@plt+0x8474>
   1983c:	b	198a0 <__assert_fail@plt+0x8474>
   19840:	ldr	r0, [fp, #-12]
   19844:	cmn	r0, #1
   19848:	bne	198a0 <__assert_fail@plt+0x8474>
   1984c:	b	19870 <__assert_fail@plt+0x8444>
   19850:	ldr	r0, [pc, #4076]	; 1a844 <__assert_fail@plt+0x9418>
   19854:	ldr	r1, [fp, #-8]
   19858:	ldr	r1, [r1]
   1985c:	add	r0, r1, r0
   19860:	movw	r1, #0
   19864:	cmp	r1, r0
   19868:	bcc	19964 <__assert_fail@plt+0x8538>
   1986c:	b	19980 <__assert_fail@plt+0x8554>
   19870:	ldr	r0, [fp, #-8]
   19874:	ldr	r0, [r0]
   19878:	movw	r1, #0
   1987c:	cmp	r1, r0
   19880:	bcs	19980 <__assert_fail@plt+0x8554>
   19884:	ldr	r0, [fp, #-8]
   19888:	ldr	r0, [r0]
   1988c:	sub	r0, r0, #1
   19890:	movw	r1, #32767	; 0x7fff
   19894:	cmp	r1, r0
   19898:	bcc	19964 <__assert_fail@plt+0x8538>
   1989c:	b	19980 <__assert_fail@plt+0x8554>
   198a0:	ldr	r0, [pc, #3996]	; 1a844 <__assert_fail@plt+0x9418>
   198a4:	ldr	r1, [fp, #-12]
   198a8:	sdiv	r0, r0, r1
   198ac:	ldr	r1, [fp, #-8]
   198b0:	ldr	r1, [r1]
   198b4:	cmp	r0, r1
   198b8:	bcc	19964 <__assert_fail@plt+0x8538>
   198bc:	b	19980 <__assert_fail@plt+0x8554>
   198c0:	ldr	r0, [fp, #-12]
   198c4:	cmp	r0, #0
   198c8:	bne	198d0 <__assert_fail@plt+0x84a4>
   198cc:	b	19980 <__assert_fail@plt+0x8554>
   198d0:	ldr	r0, [fp, #-8]
   198d4:	ldr	r0, [r0]
   198d8:	cmp	r0, #0
   198dc:	bcs	19948 <__assert_fail@plt+0x851c>
   198e0:	ldr	r0, [fp, #-8]
   198e4:	ldr	r0, [r0]
   198e8:	cmn	r0, #1
   198ec:	bne	19928 <__assert_fail@plt+0x84fc>
   198f0:	b	198f4 <__assert_fail@plt+0x84c8>
   198f4:	ldr	r0, [pc, #3912]	; 1a844 <__assert_fail@plt+0x9418>
   198f8:	ldr	r1, [fp, #-12]
   198fc:	add	r0, r1, r0
   19900:	movw	r1, #0
   19904:	cmp	r1, r0
   19908:	blt	19964 <__assert_fail@plt+0x8538>
   1990c:	b	19980 <__assert_fail@plt+0x8554>
   19910:	ldr	r0, [fp, #-12]
   19914:	sub	r0, r0, #1
   19918:	movw	r1, #32767	; 0x7fff
   1991c:	cmp	r1, r0
   19920:	blt	19964 <__assert_fail@plt+0x8538>
   19924:	b	19980 <__assert_fail@plt+0x8554>
   19928:	ldr	r0, [pc, #3860]	; 1a844 <__assert_fail@plt+0x9418>
   1992c:	ldr	r1, [fp, #-8]
   19930:	ldr	r1, [r1]
   19934:	udiv	r0, r0, r1
   19938:	ldr	r1, [fp, #-12]
   1993c:	cmp	r0, r1
   19940:	bcc	19964 <__assert_fail@plt+0x8538>
   19944:	b	19980 <__assert_fail@plt+0x8554>
   19948:	ldr	r0, [fp, #-12]
   1994c:	movw	r1, #32767	; 0x7fff
   19950:	sdiv	r0, r1, r0
   19954:	ldr	r1, [fp, #-8]
   19958:	ldr	r1, [r1]
   1995c:	cmp	r0, r1
   19960:	bcs	19980 <__assert_fail@plt+0x8554>
   19964:	ldr	r0, [fp, #-8]
   19968:	ldr	r0, [r0]
   1996c:	ldr	r1, [fp, #-12]
   19970:	mul	r0, r0, r1
   19974:	sxth	r0, r0
   19978:	str	r0, [fp, #-16]
   1997c:	b	1a918 <__assert_fail@plt+0x94ec>
   19980:	ldr	r0, [fp, #-8]
   19984:	ldr	r0, [r0]
   19988:	ldr	r1, [fp, #-12]
   1998c:	mul	r0, r0, r1
   19990:	sxth	r0, r0
   19994:	str	r0, [fp, #-16]
   19998:	b	1a94c <__assert_fail@plt+0x9520>
   1999c:	ldr	r0, [fp, #-12]
   199a0:	cmp	r0, #0
   199a4:	bge	19ad0 <__assert_fail@plt+0x86a4>
   199a8:	ldr	r0, [fp, #-8]
   199ac:	ldr	r0, [r0]
   199b0:	cmp	r0, #0
   199b4:	bcs	19a48 <__assert_fail@plt+0x861c>
   199b8:	b	199bc <__assert_fail@plt+0x8590>
   199bc:	ldr	r0, [fp, #-8]
   199c0:	ldr	r0, [r0]
   199c4:	ldr	r1, [fp, #-12]
   199c8:	movw	r2, #65535	; 0xffff
   199cc:	sdiv	r1, r2, r1
   199d0:	cmp	r0, r1
   199d4:	bcc	19b7c <__assert_fail@plt+0x8750>
   199d8:	b	19b98 <__assert_fail@plt+0x876c>
   199dc:	b	199e0 <__assert_fail@plt+0x85b4>
   199e0:	ldr	r0, [pc, #3972]	; 1a96c <__assert_fail@plt+0x9540>
   199e4:	ldr	r1, [fp, #-12]
   199e8:	cmp	r1, r0
   199ec:	blt	19a04 <__assert_fail@plt+0x85d8>
   199f0:	b	19a10 <__assert_fail@plt+0x85e4>
   199f4:	ldr	r0, [fp, #-12]
   199f8:	movw	r1, #0
   199fc:	cmp	r1, r0
   19a00:	bge	19a10 <__assert_fail@plt+0x85e4>
   19a04:	movw	r0, #0
   19a08:	str	r0, [fp, #-32]	; 0xffffffe0
   19a0c:	b	19a28 <__assert_fail@plt+0x85fc>
   19a10:	ldr	r0, [fp, #-12]
   19a14:	movw	r1, #0
   19a18:	sub	r0, r1, r0
   19a1c:	movw	r1, #65535	; 0xffff
   19a20:	sdiv	r0, r1, r0
   19a24:	str	r0, [fp, #-32]	; 0xffffffe0
   19a28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19a2c:	ldr	r1, [fp, #-8]
   19a30:	ldr	r1, [r1]
   19a34:	mvn	r2, #0
   19a38:	sub	r1, r2, r1
   19a3c:	cmp	r0, r1
   19a40:	bls	19b7c <__assert_fail@plt+0x8750>
   19a44:	b	19b98 <__assert_fail@plt+0x876c>
   19a48:	b	19a4c <__assert_fail@plt+0x8620>
   19a4c:	b	19ab0 <__assert_fail@plt+0x8684>
   19a50:	b	19ab0 <__assert_fail@plt+0x8684>
   19a54:	ldr	r0, [fp, #-12]
   19a58:	cmn	r0, #1
   19a5c:	bne	19ab0 <__assert_fail@plt+0x8684>
   19a60:	b	19a80 <__assert_fail@plt+0x8654>
   19a64:	ldr	r0, [fp, #-8]
   19a68:	ldr	r0, [r0]
   19a6c:	add	r0, r0, #0
   19a70:	movw	r1, #0
   19a74:	cmp	r1, r0
   19a78:	bcc	19b7c <__assert_fail@plt+0x8750>
   19a7c:	b	19b98 <__assert_fail@plt+0x876c>
   19a80:	ldr	r0, [fp, #-8]
   19a84:	ldr	r0, [r0]
   19a88:	movw	r1, #0
   19a8c:	cmp	r1, r0
   19a90:	bcs	19b98 <__assert_fail@plt+0x876c>
   19a94:	ldr	r0, [fp, #-8]
   19a98:	ldr	r0, [r0]
   19a9c:	sub	r0, r0, #1
   19aa0:	mvn	r1, #0
   19aa4:	cmp	r1, r0
   19aa8:	bcc	19b7c <__assert_fail@plt+0x8750>
   19aac:	b	19b98 <__assert_fail@plt+0x876c>
   19ab0:	ldr	r0, [fp, #-12]
   19ab4:	movw	r1, #0
   19ab8:	sdiv	r0, r1, r0
   19abc:	ldr	r1, [fp, #-8]
   19ac0:	ldr	r1, [r1]
   19ac4:	cmp	r0, r1
   19ac8:	bcc	19b7c <__assert_fail@plt+0x8750>
   19acc:	b	19b98 <__assert_fail@plt+0x876c>
   19ad0:	ldr	r0, [fp, #-12]
   19ad4:	cmp	r0, #0
   19ad8:	bne	19ae0 <__assert_fail@plt+0x86b4>
   19adc:	b	19b98 <__assert_fail@plt+0x876c>
   19ae0:	ldr	r0, [fp, #-8]
   19ae4:	ldr	r0, [r0]
   19ae8:	cmp	r0, #0
   19aec:	bcs	19b60 <__assert_fail@plt+0x8734>
   19af0:	b	19af8 <__assert_fail@plt+0x86cc>
   19af4:	b	19afc <__assert_fail@plt+0x86d0>
   19af8:	b	19b40 <__assert_fail@plt+0x8714>
   19afc:	ldr	r0, [fp, #-8]
   19b00:	ldr	r0, [r0]
   19b04:	cmn	r0, #1
   19b08:	bne	19b40 <__assert_fail@plt+0x8714>
   19b0c:	b	19b10 <__assert_fail@plt+0x86e4>
   19b10:	ldr	r0, [fp, #-12]
   19b14:	add	r0, r0, #0
   19b18:	movw	r1, #0
   19b1c:	cmp	r1, r0
   19b20:	blt	19b7c <__assert_fail@plt+0x8750>
   19b24:	b	19b98 <__assert_fail@plt+0x876c>
   19b28:	ldr	r0, [fp, #-12]
   19b2c:	sub	r0, r0, #1
   19b30:	mvn	r1, #0
   19b34:	cmp	r1, r0
   19b38:	blt	19b7c <__assert_fail@plt+0x8750>
   19b3c:	b	19b98 <__assert_fail@plt+0x876c>
   19b40:	ldr	r0, [fp, #-8]
   19b44:	ldr	r0, [r0]
   19b48:	movw	r1, #0
   19b4c:	udiv	r0, r1, r0
   19b50:	ldr	r1, [fp, #-12]
   19b54:	cmp	r0, r1
   19b58:	bcc	19b7c <__assert_fail@plt+0x8750>
   19b5c:	b	19b98 <__assert_fail@plt+0x876c>
   19b60:	ldr	r0, [fp, #-12]
   19b64:	movw	r1, #65535	; 0xffff
   19b68:	sdiv	r0, r1, r0
   19b6c:	ldr	r1, [fp, #-8]
   19b70:	ldr	r1, [r1]
   19b74:	cmp	r0, r1
   19b78:	bcs	19b98 <__assert_fail@plt+0x876c>
   19b7c:	ldr	r0, [fp, #-8]
   19b80:	ldr	r0, [r0]
   19b84:	ldr	r1, [fp, #-12]
   19b88:	mul	r0, r0, r1
   19b8c:	uxth	r0, r0
   19b90:	str	r0, [fp, #-16]
   19b94:	b	1a918 <__assert_fail@plt+0x94ec>
   19b98:	ldr	r0, [fp, #-8]
   19b9c:	ldr	r0, [r0]
   19ba0:	ldr	r1, [fp, #-12]
   19ba4:	mul	r0, r0, r1
   19ba8:	uxth	r0, r0
   19bac:	str	r0, [fp, #-16]
   19bb0:	b	1a94c <__assert_fail@plt+0x9520>
   19bb4:	b	19bb8 <__assert_fail@plt+0x878c>
   19bb8:	b	19db4 <__assert_fail@plt+0x8988>
   19bbc:	ldr	r0, [fp, #-12]
   19bc0:	cmp	r0, #0
   19bc4:	bge	19ce4 <__assert_fail@plt+0x88b8>
   19bc8:	ldr	r0, [fp, #-8]
   19bcc:	ldr	r0, [r0]
   19bd0:	cmp	r0, #0
   19bd4:	bcs	19c68 <__assert_fail@plt+0x883c>
   19bd8:	b	19bdc <__assert_fail@plt+0x87b0>
   19bdc:	ldr	r0, [pc, #3468]	; 1a970 <__assert_fail@plt+0x9544>
   19be0:	ldr	r1, [fp, #-8]
   19be4:	ldr	r1, [r1]
   19be8:	ldr	r2, [fp, #-12]
   19bec:	sdiv	r0, r0, r2
   19bf0:	cmp	r1, r0
   19bf4:	bcc	19d84 <__assert_fail@plt+0x8958>
   19bf8:	b	19d9c <__assert_fail@plt+0x8970>
   19bfc:	b	19c00 <__assert_fail@plt+0x87d4>
   19c00:	ldr	r0, [pc, #3428]	; 1a96c <__assert_fail@plt+0x9540>
   19c04:	ldr	r1, [fp, #-12]
   19c08:	cmp	r1, r0
   19c0c:	blt	19c24 <__assert_fail@plt+0x87f8>
   19c10:	b	19c30 <__assert_fail@plt+0x8804>
   19c14:	ldr	r0, [fp, #-12]
   19c18:	movw	r1, #0
   19c1c:	cmp	r1, r0
   19c20:	bge	19c30 <__assert_fail@plt+0x8804>
   19c24:	movw	r0, #0
   19c28:	str	r0, [fp, #-36]	; 0xffffffdc
   19c2c:	b	19c48 <__assert_fail@plt+0x881c>
   19c30:	ldr	r0, [pc, #3384]	; 1a970 <__assert_fail@plt+0x9544>
   19c34:	ldr	r1, [fp, #-12]
   19c38:	movw	r2, #0
   19c3c:	sub	r1, r2, r1
   19c40:	sdiv	r0, r0, r1
   19c44:	str	r0, [fp, #-36]	; 0xffffffdc
   19c48:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19c4c:	ldr	r1, [fp, #-8]
   19c50:	ldr	r1, [r1]
   19c54:	mvn	r2, #0
   19c58:	sub	r1, r2, r1
   19c5c:	cmp	r0, r1
   19c60:	bls	19d84 <__assert_fail@plt+0x8958>
   19c64:	b	19d9c <__assert_fail@plt+0x8970>
   19c68:	ldr	r0, [fp, #-12]
   19c6c:	cmn	r0, #1
   19c70:	bne	19cc4 <__assert_fail@plt+0x8898>
   19c74:	b	19c94 <__assert_fail@plt+0x8868>
   19c78:	ldr	r0, [fp, #-8]
   19c7c:	ldr	r0, [r0]
   19c80:	add	r0, r0, #-2147483648	; 0x80000000
   19c84:	movw	r1, #0
   19c88:	cmp	r1, r0
   19c8c:	bcc	19d84 <__assert_fail@plt+0x8958>
   19c90:	b	19d9c <__assert_fail@plt+0x8970>
   19c94:	ldr	r0, [fp, #-8]
   19c98:	ldr	r0, [r0]
   19c9c:	movw	r1, #0
   19ca0:	cmp	r1, r0
   19ca4:	bcs	19d9c <__assert_fail@plt+0x8970>
   19ca8:	ldr	r0, [pc, #3264]	; 1a970 <__assert_fail@plt+0x9544>
   19cac:	ldr	r1, [fp, #-8]
   19cb0:	ldr	r1, [r1]
   19cb4:	sub	r1, r1, #1
   19cb8:	cmp	r0, r1
   19cbc:	bcc	19d84 <__assert_fail@plt+0x8958>
   19cc0:	b	19d9c <__assert_fail@plt+0x8970>
   19cc4:	ldr	r0, [pc, #3240]	; 1a974 <__assert_fail@plt+0x9548>
   19cc8:	ldr	r1, [fp, #-12]
   19ccc:	sdiv	r0, r0, r1
   19cd0:	ldr	r1, [fp, #-8]
   19cd4:	ldr	r1, [r1]
   19cd8:	cmp	r0, r1
   19cdc:	bcc	19d84 <__assert_fail@plt+0x8958>
   19ce0:	b	19d9c <__assert_fail@plt+0x8970>
   19ce4:	ldr	r0, [fp, #-12]
   19ce8:	cmp	r0, #0
   19cec:	bne	19cf4 <__assert_fail@plt+0x88c8>
   19cf0:	b	19d9c <__assert_fail@plt+0x8970>
   19cf4:	ldr	r0, [fp, #-8]
   19cf8:	ldr	r0, [r0]
   19cfc:	cmp	r0, #0
   19d00:	bcs	19d68 <__assert_fail@plt+0x893c>
   19d04:	ldr	r0, [fp, #-8]
   19d08:	ldr	r0, [r0]
   19d0c:	cmn	r0, #1
   19d10:	bne	19d48 <__assert_fail@plt+0x891c>
   19d14:	b	19d18 <__assert_fail@plt+0x88ec>
   19d18:	ldr	r0, [fp, #-12]
   19d1c:	add	r0, r0, #-2147483648	; 0x80000000
   19d20:	movw	r1, #0
   19d24:	cmp	r1, r0
   19d28:	blt	19d84 <__assert_fail@plt+0x8958>
   19d2c:	b	19d9c <__assert_fail@plt+0x8970>
   19d30:	ldr	r0, [pc, #3128]	; 1a970 <__assert_fail@plt+0x9544>
   19d34:	ldr	r1, [fp, #-12]
   19d38:	sub	r1, r1, #1
   19d3c:	cmp	r0, r1
   19d40:	blt	19d84 <__assert_fail@plt+0x8958>
   19d44:	b	19d9c <__assert_fail@plt+0x8970>
   19d48:	ldr	r0, [pc, #3108]	; 1a974 <__assert_fail@plt+0x9548>
   19d4c:	ldr	r1, [fp, #-8]
   19d50:	ldr	r1, [r1]
   19d54:	udiv	r0, r0, r1
   19d58:	ldr	r1, [fp, #-12]
   19d5c:	cmp	r0, r1
   19d60:	bcc	19d84 <__assert_fail@plt+0x8958>
   19d64:	b	19d9c <__assert_fail@plt+0x8970>
   19d68:	ldr	r0, [pc, #3072]	; 1a970 <__assert_fail@plt+0x9544>
   19d6c:	ldr	r1, [fp, #-12]
   19d70:	sdiv	r0, r0, r1
   19d74:	ldr	r1, [fp, #-8]
   19d78:	ldr	r1, [r1]
   19d7c:	cmp	r0, r1
   19d80:	bcs	19d9c <__assert_fail@plt+0x8970>
   19d84:	ldr	r0, [fp, #-8]
   19d88:	ldr	r0, [r0]
   19d8c:	ldr	r1, [fp, #-12]
   19d90:	mul	r0, r0, r1
   19d94:	str	r0, [fp, #-16]
   19d98:	b	1a918 <__assert_fail@plt+0x94ec>
   19d9c:	ldr	r0, [fp, #-8]
   19da0:	ldr	r0, [r0]
   19da4:	ldr	r1, [fp, #-12]
   19da8:	mul	r0, r0, r1
   19dac:	str	r0, [fp, #-16]
   19db0:	b	1a94c <__assert_fail@plt+0x9520>
   19db4:	ldr	r0, [fp, #-12]
   19db8:	cmp	r0, #0
   19dbc:	bge	19ee8 <__assert_fail@plt+0x8abc>
   19dc0:	ldr	r0, [fp, #-8]
   19dc4:	ldr	r0, [r0]
   19dc8:	cmp	r0, #0
   19dcc:	bcs	19e60 <__assert_fail@plt+0x8a34>
   19dd0:	b	19df4 <__assert_fail@plt+0x89c8>
   19dd4:	ldr	r0, [fp, #-8]
   19dd8:	ldr	r0, [r0]
   19ddc:	ldr	r1, [fp, #-12]
   19de0:	mvn	r2, #0
   19de4:	udiv	r1, r2, r1
   19de8:	cmp	r0, r1
   19dec:	bcc	19f94 <__assert_fail@plt+0x8b68>
   19df0:	b	19fac <__assert_fail@plt+0x8b80>
   19df4:	b	19df8 <__assert_fail@plt+0x89cc>
   19df8:	ldr	r0, [pc, #2924]	; 1a96c <__assert_fail@plt+0x9540>
   19dfc:	ldr	r1, [fp, #-12]
   19e00:	cmp	r1, r0
   19e04:	blt	19e1c <__assert_fail@plt+0x89f0>
   19e08:	b	19e28 <__assert_fail@plt+0x89fc>
   19e0c:	ldr	r0, [fp, #-12]
   19e10:	movw	r1, #0
   19e14:	cmp	r1, r0
   19e18:	bge	19e28 <__assert_fail@plt+0x89fc>
   19e1c:	movw	r0, #1
   19e20:	str	r0, [fp, #-40]	; 0xffffffd8
   19e24:	b	19e40 <__assert_fail@plt+0x8a14>
   19e28:	ldr	r0, [fp, #-12]
   19e2c:	movw	r1, #0
   19e30:	sub	r0, r1, r0
   19e34:	mvn	r1, #0
   19e38:	udiv	r0, r1, r0
   19e3c:	str	r0, [fp, #-40]	; 0xffffffd8
   19e40:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19e44:	ldr	r1, [fp, #-8]
   19e48:	ldr	r1, [r1]
   19e4c:	mvn	r2, #0
   19e50:	sub	r1, r2, r1
   19e54:	cmp	r0, r1
   19e58:	bls	19f94 <__assert_fail@plt+0x8b68>
   19e5c:	b	19fac <__assert_fail@plt+0x8b80>
   19e60:	b	19e64 <__assert_fail@plt+0x8a38>
   19e64:	b	19ec8 <__assert_fail@plt+0x8a9c>
   19e68:	b	19ec8 <__assert_fail@plt+0x8a9c>
   19e6c:	ldr	r0, [fp, #-12]
   19e70:	cmn	r0, #1
   19e74:	bne	19ec8 <__assert_fail@plt+0x8a9c>
   19e78:	b	19e98 <__assert_fail@plt+0x8a6c>
   19e7c:	ldr	r0, [fp, #-8]
   19e80:	ldr	r0, [r0]
   19e84:	add	r0, r0, #0
   19e88:	movw	r1, #0
   19e8c:	cmp	r1, r0
   19e90:	bcc	19f94 <__assert_fail@plt+0x8b68>
   19e94:	b	19fac <__assert_fail@plt+0x8b80>
   19e98:	ldr	r0, [fp, #-8]
   19e9c:	ldr	r0, [r0]
   19ea0:	movw	r1, #0
   19ea4:	cmp	r1, r0
   19ea8:	bcs	19fac <__assert_fail@plt+0x8b80>
   19eac:	ldr	r0, [fp, #-8]
   19eb0:	ldr	r0, [r0]
   19eb4:	sub	r0, r0, #1
   19eb8:	mvn	r1, #0
   19ebc:	cmp	r1, r0
   19ec0:	bcc	19f94 <__assert_fail@plt+0x8b68>
   19ec4:	b	19fac <__assert_fail@plt+0x8b80>
   19ec8:	ldr	r0, [fp, #-12]
   19ecc:	movw	r1, #0
   19ed0:	sdiv	r0, r1, r0
   19ed4:	ldr	r1, [fp, #-8]
   19ed8:	ldr	r1, [r1]
   19edc:	cmp	r0, r1
   19ee0:	bcc	19f94 <__assert_fail@plt+0x8b68>
   19ee4:	b	19fac <__assert_fail@plt+0x8b80>
   19ee8:	ldr	r0, [fp, #-12]
   19eec:	cmp	r0, #0
   19ef0:	bne	19ef8 <__assert_fail@plt+0x8acc>
   19ef4:	b	19fac <__assert_fail@plt+0x8b80>
   19ef8:	ldr	r0, [fp, #-8]
   19efc:	ldr	r0, [r0]
   19f00:	cmp	r0, #0
   19f04:	bcs	19f78 <__assert_fail@plt+0x8b4c>
   19f08:	b	19f10 <__assert_fail@plt+0x8ae4>
   19f0c:	b	19f14 <__assert_fail@plt+0x8ae8>
   19f10:	b	19f58 <__assert_fail@plt+0x8b2c>
   19f14:	ldr	r0, [fp, #-8]
   19f18:	ldr	r0, [r0]
   19f1c:	cmn	r0, #1
   19f20:	bne	19f58 <__assert_fail@plt+0x8b2c>
   19f24:	b	19f28 <__assert_fail@plt+0x8afc>
   19f28:	ldr	r0, [fp, #-12]
   19f2c:	add	r0, r0, #0
   19f30:	movw	r1, #0
   19f34:	cmp	r1, r0
   19f38:	blt	19f94 <__assert_fail@plt+0x8b68>
   19f3c:	b	19fac <__assert_fail@plt+0x8b80>
   19f40:	ldr	r0, [fp, #-12]
   19f44:	sub	r0, r0, #1
   19f48:	mvn	r1, #0
   19f4c:	cmp	r1, r0
   19f50:	blt	19f94 <__assert_fail@plt+0x8b68>
   19f54:	b	19fac <__assert_fail@plt+0x8b80>
   19f58:	ldr	r0, [fp, #-8]
   19f5c:	ldr	r0, [r0]
   19f60:	movw	r1, #0
   19f64:	udiv	r0, r1, r0
   19f68:	ldr	r1, [fp, #-12]
   19f6c:	cmp	r0, r1
   19f70:	bcc	19f94 <__assert_fail@plt+0x8b68>
   19f74:	b	19fac <__assert_fail@plt+0x8b80>
   19f78:	ldr	r0, [fp, #-12]
   19f7c:	mvn	r1, #0
   19f80:	udiv	r0, r1, r0
   19f84:	ldr	r1, [fp, #-8]
   19f88:	ldr	r1, [r1]
   19f8c:	cmp	r0, r1
   19f90:	bcs	19fac <__assert_fail@plt+0x8b80>
   19f94:	ldr	r0, [fp, #-8]
   19f98:	ldr	r0, [r0]
   19f9c:	ldr	r1, [fp, #-12]
   19fa0:	mul	r0, r0, r1
   19fa4:	str	r0, [fp, #-16]
   19fa8:	b	1a918 <__assert_fail@plt+0x94ec>
   19fac:	ldr	r0, [fp, #-8]
   19fb0:	ldr	r0, [r0]
   19fb4:	ldr	r1, [fp, #-12]
   19fb8:	mul	r0, r0, r1
   19fbc:	str	r0, [fp, #-16]
   19fc0:	b	1a94c <__assert_fail@plt+0x9520>
   19fc4:	b	19fc8 <__assert_fail@plt+0x8b9c>
   19fc8:	b	1a1c4 <__assert_fail@plt+0x8d98>
   19fcc:	ldr	r0, [fp, #-12]
   19fd0:	cmp	r0, #0
   19fd4:	bge	1a0f4 <__assert_fail@plt+0x8cc8>
   19fd8:	ldr	r0, [fp, #-8]
   19fdc:	ldr	r0, [r0]
   19fe0:	cmp	r0, #0
   19fe4:	bcs	1a078 <__assert_fail@plt+0x8c4c>
   19fe8:	b	19fec <__assert_fail@plt+0x8bc0>
   19fec:	ldr	r0, [pc, #2428]	; 1a970 <__assert_fail@plt+0x9544>
   19ff0:	ldr	r1, [fp, #-8]
   19ff4:	ldr	r1, [r1]
   19ff8:	ldr	r2, [fp, #-12]
   19ffc:	sdiv	r0, r0, r2
   1a000:	cmp	r1, r0
   1a004:	bcc	1a194 <__assert_fail@plt+0x8d68>
   1a008:	b	1a1ac <__assert_fail@plt+0x8d80>
   1a00c:	b	1a010 <__assert_fail@plt+0x8be4>
   1a010:	ldr	r0, [pc, #2388]	; 1a96c <__assert_fail@plt+0x9540>
   1a014:	ldr	r1, [fp, #-12]
   1a018:	cmp	r1, r0
   1a01c:	blt	1a034 <__assert_fail@plt+0x8c08>
   1a020:	b	1a040 <__assert_fail@plt+0x8c14>
   1a024:	ldr	r0, [fp, #-12]
   1a028:	movw	r1, #0
   1a02c:	cmp	r1, r0
   1a030:	bge	1a040 <__assert_fail@plt+0x8c14>
   1a034:	movw	r0, #0
   1a038:	str	r0, [fp, #-44]	; 0xffffffd4
   1a03c:	b	1a058 <__assert_fail@plt+0x8c2c>
   1a040:	ldr	r0, [pc, #2344]	; 1a970 <__assert_fail@plt+0x9544>
   1a044:	ldr	r1, [fp, #-12]
   1a048:	movw	r2, #0
   1a04c:	sub	r1, r2, r1
   1a050:	sdiv	r0, r0, r1
   1a054:	str	r0, [fp, #-44]	; 0xffffffd4
   1a058:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a05c:	ldr	r1, [fp, #-8]
   1a060:	ldr	r1, [r1]
   1a064:	mvn	r2, #0
   1a068:	sub	r1, r2, r1
   1a06c:	cmp	r0, r1
   1a070:	bls	1a194 <__assert_fail@plt+0x8d68>
   1a074:	b	1a1ac <__assert_fail@plt+0x8d80>
   1a078:	ldr	r0, [fp, #-12]
   1a07c:	cmn	r0, #1
   1a080:	bne	1a0d4 <__assert_fail@plt+0x8ca8>
   1a084:	b	1a0a4 <__assert_fail@plt+0x8c78>
   1a088:	ldr	r0, [fp, #-8]
   1a08c:	ldr	r0, [r0]
   1a090:	add	r0, r0, #-2147483648	; 0x80000000
   1a094:	movw	r1, #0
   1a098:	cmp	r1, r0
   1a09c:	bcc	1a194 <__assert_fail@plt+0x8d68>
   1a0a0:	b	1a1ac <__assert_fail@plt+0x8d80>
   1a0a4:	ldr	r0, [fp, #-8]
   1a0a8:	ldr	r0, [r0]
   1a0ac:	movw	r1, #0
   1a0b0:	cmp	r1, r0
   1a0b4:	bcs	1a1ac <__assert_fail@plt+0x8d80>
   1a0b8:	ldr	r0, [pc, #2224]	; 1a970 <__assert_fail@plt+0x9544>
   1a0bc:	ldr	r1, [fp, #-8]
   1a0c0:	ldr	r1, [r1]
   1a0c4:	sub	r1, r1, #1
   1a0c8:	cmp	r0, r1
   1a0cc:	bcc	1a194 <__assert_fail@plt+0x8d68>
   1a0d0:	b	1a1ac <__assert_fail@plt+0x8d80>
   1a0d4:	ldr	r0, [pc, #2200]	; 1a974 <__assert_fail@plt+0x9548>
   1a0d8:	ldr	r1, [fp, #-12]
   1a0dc:	sdiv	r0, r0, r1
   1a0e0:	ldr	r1, [fp, #-8]
   1a0e4:	ldr	r1, [r1]
   1a0e8:	cmp	r0, r1
   1a0ec:	bcc	1a194 <__assert_fail@plt+0x8d68>
   1a0f0:	b	1a1ac <__assert_fail@plt+0x8d80>
   1a0f4:	ldr	r0, [fp, #-12]
   1a0f8:	cmp	r0, #0
   1a0fc:	bne	1a104 <__assert_fail@plt+0x8cd8>
   1a100:	b	1a1ac <__assert_fail@plt+0x8d80>
   1a104:	ldr	r0, [fp, #-8]
   1a108:	ldr	r0, [r0]
   1a10c:	cmp	r0, #0
   1a110:	bcs	1a178 <__assert_fail@plt+0x8d4c>
   1a114:	ldr	r0, [fp, #-8]
   1a118:	ldr	r0, [r0]
   1a11c:	cmn	r0, #1
   1a120:	bne	1a158 <__assert_fail@plt+0x8d2c>
   1a124:	b	1a128 <__assert_fail@plt+0x8cfc>
   1a128:	ldr	r0, [fp, #-12]
   1a12c:	add	r0, r0, #-2147483648	; 0x80000000
   1a130:	movw	r1, #0
   1a134:	cmp	r1, r0
   1a138:	blt	1a194 <__assert_fail@plt+0x8d68>
   1a13c:	b	1a1ac <__assert_fail@plt+0x8d80>
   1a140:	ldr	r0, [pc, #2088]	; 1a970 <__assert_fail@plt+0x9544>
   1a144:	ldr	r1, [fp, #-12]
   1a148:	sub	r1, r1, #1
   1a14c:	cmp	r0, r1
   1a150:	blt	1a194 <__assert_fail@plt+0x8d68>
   1a154:	b	1a1ac <__assert_fail@plt+0x8d80>
   1a158:	ldr	r0, [pc, #2068]	; 1a974 <__assert_fail@plt+0x9548>
   1a15c:	ldr	r1, [fp, #-8]
   1a160:	ldr	r1, [r1]
   1a164:	udiv	r0, r0, r1
   1a168:	ldr	r1, [fp, #-12]
   1a16c:	cmp	r0, r1
   1a170:	bcc	1a194 <__assert_fail@plt+0x8d68>
   1a174:	b	1a1ac <__assert_fail@plt+0x8d80>
   1a178:	ldr	r0, [pc, #2032]	; 1a970 <__assert_fail@plt+0x9544>
   1a17c:	ldr	r1, [fp, #-12]
   1a180:	sdiv	r0, r0, r1
   1a184:	ldr	r1, [fp, #-8]
   1a188:	ldr	r1, [r1]
   1a18c:	cmp	r0, r1
   1a190:	bcs	1a1ac <__assert_fail@plt+0x8d80>
   1a194:	ldr	r0, [fp, #-8]
   1a198:	ldr	r0, [r0]
   1a19c:	ldr	r1, [fp, #-12]
   1a1a0:	mul	r0, r0, r1
   1a1a4:	str	r0, [fp, #-16]
   1a1a8:	b	1a918 <__assert_fail@plt+0x94ec>
   1a1ac:	ldr	r0, [fp, #-8]
   1a1b0:	ldr	r0, [r0]
   1a1b4:	ldr	r1, [fp, #-12]
   1a1b8:	mul	r0, r0, r1
   1a1bc:	str	r0, [fp, #-16]
   1a1c0:	b	1a94c <__assert_fail@plt+0x9520>
   1a1c4:	ldr	r0, [fp, #-12]
   1a1c8:	cmp	r0, #0
   1a1cc:	bge	1a2f8 <__assert_fail@plt+0x8ecc>
   1a1d0:	ldr	r0, [fp, #-8]
   1a1d4:	ldr	r0, [r0]
   1a1d8:	cmp	r0, #0
   1a1dc:	bcs	1a270 <__assert_fail@plt+0x8e44>
   1a1e0:	b	1a204 <__assert_fail@plt+0x8dd8>
   1a1e4:	ldr	r0, [fp, #-8]
   1a1e8:	ldr	r0, [r0]
   1a1ec:	ldr	r1, [fp, #-12]
   1a1f0:	mvn	r2, #0
   1a1f4:	udiv	r1, r2, r1
   1a1f8:	cmp	r0, r1
   1a1fc:	bcc	1a3a8 <__assert_fail@plt+0x8f7c>
   1a200:	b	1a3c0 <__assert_fail@plt+0x8f94>
   1a204:	b	1a208 <__assert_fail@plt+0x8ddc>
   1a208:	ldr	r0, [pc, #1884]	; 1a96c <__assert_fail@plt+0x9540>
   1a20c:	ldr	r1, [fp, #-12]
   1a210:	cmp	r1, r0
   1a214:	blt	1a22c <__assert_fail@plt+0x8e00>
   1a218:	b	1a238 <__assert_fail@plt+0x8e0c>
   1a21c:	ldr	r0, [fp, #-12]
   1a220:	movw	r1, #0
   1a224:	cmp	r1, r0
   1a228:	bge	1a238 <__assert_fail@plt+0x8e0c>
   1a22c:	movw	r0, #1
   1a230:	str	r0, [fp, #-48]	; 0xffffffd0
   1a234:	b	1a250 <__assert_fail@plt+0x8e24>
   1a238:	ldr	r0, [fp, #-12]
   1a23c:	movw	r1, #0
   1a240:	sub	r0, r1, r0
   1a244:	mvn	r1, #0
   1a248:	udiv	r0, r1, r0
   1a24c:	str	r0, [fp, #-48]	; 0xffffffd0
   1a250:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a254:	ldr	r1, [fp, #-8]
   1a258:	ldr	r1, [r1]
   1a25c:	mvn	r2, #0
   1a260:	sub	r1, r2, r1
   1a264:	cmp	r0, r1
   1a268:	bls	1a3a8 <__assert_fail@plt+0x8f7c>
   1a26c:	b	1a3c0 <__assert_fail@plt+0x8f94>
   1a270:	b	1a274 <__assert_fail@plt+0x8e48>
   1a274:	b	1a2d8 <__assert_fail@plt+0x8eac>
   1a278:	b	1a2d8 <__assert_fail@plt+0x8eac>
   1a27c:	ldr	r0, [fp, #-12]
   1a280:	cmn	r0, #1
   1a284:	bne	1a2d8 <__assert_fail@plt+0x8eac>
   1a288:	b	1a2a8 <__assert_fail@plt+0x8e7c>
   1a28c:	ldr	r0, [fp, #-8]
   1a290:	ldr	r0, [r0]
   1a294:	add	r0, r0, #0
   1a298:	movw	r1, #0
   1a29c:	cmp	r1, r0
   1a2a0:	bcc	1a3a8 <__assert_fail@plt+0x8f7c>
   1a2a4:	b	1a3c0 <__assert_fail@plt+0x8f94>
   1a2a8:	ldr	r0, [fp, #-8]
   1a2ac:	ldr	r0, [r0]
   1a2b0:	movw	r1, #0
   1a2b4:	cmp	r1, r0
   1a2b8:	bcs	1a3c0 <__assert_fail@plt+0x8f94>
   1a2bc:	ldr	r0, [fp, #-8]
   1a2c0:	ldr	r0, [r0]
   1a2c4:	sub	r0, r0, #1
   1a2c8:	mvn	r1, #0
   1a2cc:	cmp	r1, r0
   1a2d0:	bcc	1a3a8 <__assert_fail@plt+0x8f7c>
   1a2d4:	b	1a3c0 <__assert_fail@plt+0x8f94>
   1a2d8:	ldr	r0, [fp, #-12]
   1a2dc:	movw	r1, #0
   1a2e0:	sdiv	r0, r1, r0
   1a2e4:	ldr	r1, [fp, #-8]
   1a2e8:	ldr	r1, [r1]
   1a2ec:	cmp	r0, r1
   1a2f0:	bcc	1a3a8 <__assert_fail@plt+0x8f7c>
   1a2f4:	b	1a3c0 <__assert_fail@plt+0x8f94>
   1a2f8:	ldr	r0, [fp, #-12]
   1a2fc:	cmp	r0, #0
   1a300:	bne	1a308 <__assert_fail@plt+0x8edc>
   1a304:	b	1a3c0 <__assert_fail@plt+0x8f94>
   1a308:	ldr	r0, [fp, #-8]
   1a30c:	ldr	r0, [r0]
   1a310:	cmp	r0, #0
   1a314:	bcs	1a38c <__assert_fail@plt+0x8f60>
   1a318:	b	1a320 <__assert_fail@plt+0x8ef4>
   1a31c:	b	1a324 <__assert_fail@plt+0x8ef8>
   1a320:	b	1a368 <__assert_fail@plt+0x8f3c>
   1a324:	ldr	r0, [fp, #-8]
   1a328:	ldr	r0, [r0]
   1a32c:	cmn	r0, #1
   1a330:	bne	1a368 <__assert_fail@plt+0x8f3c>
   1a334:	b	1a338 <__assert_fail@plt+0x8f0c>
   1a338:	ldr	r0, [fp, #-12]
   1a33c:	add	r0, r0, #0
   1a340:	movw	r1, #0
   1a344:	cmp	r1, r0
   1a348:	blt	1a3a8 <__assert_fail@plt+0x8f7c>
   1a34c:	b	1a3c0 <__assert_fail@plt+0x8f94>
   1a350:	ldr	r0, [fp, #-12]
   1a354:	sub	r0, r0, #1
   1a358:	mvn	r1, #0
   1a35c:	cmp	r1, r0
   1a360:	blt	1a3a8 <__assert_fail@plt+0x8f7c>
   1a364:	b	1a3c0 <__assert_fail@plt+0x8f94>
   1a368:	ldr	r0, [fp, #-8]
   1a36c:	ldr	r0, [r0]
   1a370:	movw	r1, #0
   1a374:	udiv	r0, r1, r0
   1a378:	ldr	r1, [fp, #-12]
   1a37c:	cmp	r0, r1
   1a380:	bcc	1a3a8 <__assert_fail@plt+0x8f7c>
   1a384:	b	1a3c0 <__assert_fail@plt+0x8f94>
   1a388:	andhi	r0, r0, r1
   1a38c:	ldr	r0, [fp, #-12]
   1a390:	mvn	r1, #0
   1a394:	udiv	r0, r1, r0
   1a398:	ldr	r1, [fp, #-8]
   1a39c:	ldr	r1, [r1]
   1a3a0:	cmp	r0, r1
   1a3a4:	bcs	1a3c0 <__assert_fail@plt+0x8f94>
   1a3a8:	ldr	r0, [fp, #-8]
   1a3ac:	ldr	r0, [r0]
   1a3b0:	ldr	r1, [fp, #-12]
   1a3b4:	mul	r0, r0, r1
   1a3b8:	str	r0, [fp, #-16]
   1a3bc:	b	1a918 <__assert_fail@plt+0x94ec>
   1a3c0:	ldr	r0, [fp, #-8]
   1a3c4:	ldr	r0, [r0]
   1a3c8:	ldr	r1, [fp, #-12]
   1a3cc:	mul	r0, r0, r1
   1a3d0:	str	r0, [fp, #-16]
   1a3d4:	b	1a94c <__assert_fail@plt+0x9520>
   1a3d8:	b	1a694 <__assert_fail@plt+0x9268>
   1a3dc:	ldr	r0, [fp, #-12]
   1a3e0:	cmp	r0, #0
   1a3e4:	bge	1a580 <__assert_fail@plt+0x9154>
   1a3e8:	ldr	r0, [fp, #-8]
   1a3ec:	ldr	r0, [r0]
   1a3f0:	cmp	r0, #0
   1a3f4:	bcs	1a4e4 <__assert_fail@plt+0x90b8>
   1a3f8:	b	1a3fc <__assert_fail@plt+0x8fd0>
   1a3fc:	ldr	r0, [fp, #-8]
   1a400:	ldr	r0, [r0]
   1a404:	ldr	r1, [fp, #-12]
   1a408:	asr	r3, r1, #31
   1a40c:	mvn	r2, #0
   1a410:	mvn	ip, #-2147483648	; 0x80000000
   1a414:	str	r0, [fp, #-52]	; 0xffffffcc
   1a418:	mov	r0, r2
   1a41c:	str	r1, [fp, #-56]	; 0xffffffc8
   1a420:	mov	r1, ip
   1a424:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a428:	bl	1f7b8 <__assert_fail@plt+0xe38c>
   1a42c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1a430:	subs	r0, r2, r0
   1a434:	rscs	r1, r1, #0
   1a438:	str	r0, [fp, #-60]	; 0xffffffc4
   1a43c:	str	r1, [fp, #-64]	; 0xffffffc0
   1a440:	blt	1a664 <__assert_fail@plt+0x9238>
   1a444:	b	1a67c <__assert_fail@plt+0x9250>
   1a448:	b	1a44c <__assert_fail@plt+0x9020>
   1a44c:	ldr	r0, [pc, #1304]	; 1a96c <__assert_fail@plt+0x9540>
   1a450:	ldr	r1, [fp, #-12]
   1a454:	cmp	r1, r0
   1a458:	blt	1a470 <__assert_fail@plt+0x9044>
   1a45c:	b	1a484 <__assert_fail@plt+0x9058>
   1a460:	ldr	r0, [fp, #-12]
   1a464:	movw	r1, #0
   1a468:	cmp	r1, r0
   1a46c:	bge	1a484 <__assert_fail@plt+0x9058>
   1a470:	mov	r0, #0
   1a474:	mvn	r1, #0
   1a478:	str	r1, [fp, #-68]	; 0xffffffbc
   1a47c:	str	r0, [fp, #-72]	; 0xffffffb8
   1a480:	b	1a4b8 <__assert_fail@plt+0x908c>
   1a484:	ldr	r0, [fp, #-12]
   1a488:	rsb	r0, r0, #0
   1a48c:	asr	r3, r0, #31
   1a490:	mvn	r1, #0
   1a494:	mvn	r2, #-2147483648	; 0x80000000
   1a498:	str	r0, [fp, #-76]	; 0xffffffb4
   1a49c:	mov	r0, r1
   1a4a0:	mov	r1, r2
   1a4a4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1a4a8:	bl	1f7b8 <__assert_fail@plt+0xe38c>
   1a4ac:	str	r0, [fp, #-68]	; 0xffffffbc
   1a4b0:	str	r1, [fp, #-72]	; 0xffffffb8
   1a4b4:	b	1a4b8 <__assert_fail@plt+0x908c>
   1a4b8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a4bc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1a4c0:	ldr	r2, [fp, #-8]
   1a4c4:	ldr	r2, [r2]
   1a4c8:	mvn	r2, r2
   1a4cc:	subs	r1, r2, r1
   1a4d0:	rscs	r0, r0, #0
   1a4d4:	str	r1, [fp, #-80]	; 0xffffffb0
   1a4d8:	str	r0, [fp, #-84]	; 0xffffffac
   1a4dc:	bge	1a664 <__assert_fail@plt+0x9238>
   1a4e0:	b	1a67c <__assert_fail@plt+0x9250>
   1a4e4:	ldr	r0, [fp, #-12]
   1a4e8:	cmn	r0, #1
   1a4ec:	bne	1a53c <__assert_fail@plt+0x9110>
   1a4f0:	b	1a518 <__assert_fail@plt+0x90ec>
   1a4f4:	ldr	r0, [fp, #-8]
   1a4f8:	ldr	r0, [r0]
   1a4fc:	rsbs	r0, r0, #0
   1a500:	mov	r1, #0
   1a504:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1a508:	str	r0, [fp, #-88]	; 0xffffffa8
   1a50c:	str	r1, [sp, #92]	; 0x5c
   1a510:	blt	1a664 <__assert_fail@plt+0x9238>
   1a514:	b	1a67c <__assert_fail@plt+0x9250>
   1a518:	ldr	r0, [fp, #-8]
   1a51c:	ldr	r0, [r0]
   1a520:	movw	r1, #0
   1a524:	cmp	r1, r0
   1a528:	bcs	1a67c <__assert_fail@plt+0x9250>
   1a52c:	mov	r0, #0
   1a530:	cmp	r0, #0
   1a534:	bne	1a664 <__assert_fail@plt+0x9238>
   1a538:	b	1a67c <__assert_fail@plt+0x9250>
   1a53c:	ldr	r0, [fp, #-12]
   1a540:	asr	r3, r0, #31
   1a544:	mov	r1, #0
   1a548:	mov	r2, #-2147483648	; 0x80000000
   1a54c:	str	r0, [sp, #88]	; 0x58
   1a550:	mov	r0, r1
   1a554:	mov	r1, r2
   1a558:	ldr	r2, [sp, #88]	; 0x58
   1a55c:	bl	1f7b8 <__assert_fail@plt+0xe38c>
   1a560:	ldr	r2, [fp, #-8]
   1a564:	ldr	r2, [r2]
   1a568:	subs	r0, r0, r2
   1a56c:	sbcs	r1, r1, #0
   1a570:	str	r0, [sp, #84]	; 0x54
   1a574:	str	r1, [sp, #80]	; 0x50
   1a578:	blt	1a664 <__assert_fail@plt+0x9238>
   1a57c:	b	1a67c <__assert_fail@plt+0x9250>
   1a580:	ldr	r0, [fp, #-12]
   1a584:	cmp	r0, #0
   1a588:	bne	1a590 <__assert_fail@plt+0x9164>
   1a58c:	b	1a67c <__assert_fail@plt+0x9250>
   1a590:	ldr	r0, [fp, #-8]
   1a594:	ldr	r0, [r0]
   1a598:	cmp	r0, #0
   1a59c:	bcs	1a620 <__assert_fail@plt+0x91f4>
   1a5a0:	ldr	r0, [fp, #-8]
   1a5a4:	ldr	r0, [r0]
   1a5a8:	cmn	r0, #1
   1a5ac:	bne	1a5e8 <__assert_fail@plt+0x91bc>
   1a5b0:	b	1a5b4 <__assert_fail@plt+0x9188>
   1a5b4:	ldr	r0, [fp, #-12]
   1a5b8:	mov	r1, #-2147483648	; 0x80000000
   1a5bc:	add	r1, r1, r0, asr #31
   1a5c0:	rsbs	r0, r0, #0
   1a5c4:	rscs	r1, r1, #0
   1a5c8:	str	r0, [sp, #76]	; 0x4c
   1a5cc:	str	r1, [sp, #72]	; 0x48
   1a5d0:	blt	1a664 <__assert_fail@plt+0x9238>
   1a5d4:	b	1a67c <__assert_fail@plt+0x9250>
   1a5d8:	mov	r0, #0
   1a5dc:	cmp	r0, #0
   1a5e0:	bne	1a664 <__assert_fail@plt+0x9238>
   1a5e4:	b	1a67c <__assert_fail@plt+0x9250>
   1a5e8:	ldr	r0, [fp, #-8]
   1a5ec:	ldr	r2, [r0]
   1a5f0:	mov	r1, #-2147483648	; 0x80000000
   1a5f4:	mov	r0, #0
   1a5f8:	str	r0, [sp, #68]	; 0x44
   1a5fc:	ldr	r3, [sp, #68]	; 0x44
   1a600:	bl	1f7b8 <__assert_fail@plt+0xe38c>
   1a604:	ldr	r2, [fp, #-12]
   1a608:	subs	r0, r0, r2
   1a60c:	sbcs	r1, r1, r2, asr #31
   1a610:	str	r0, [sp, #64]	; 0x40
   1a614:	str	r1, [sp, #60]	; 0x3c
   1a618:	blt	1a664 <__assert_fail@plt+0x9238>
   1a61c:	b	1a67c <__assert_fail@plt+0x9250>
   1a620:	ldr	r0, [fp, #-12]
   1a624:	asr	r3, r0, #31
   1a628:	mvn	r1, #0
   1a62c:	mvn	r2, #-2147483648	; 0x80000000
   1a630:	str	r0, [sp, #56]	; 0x38
   1a634:	mov	r0, r1
   1a638:	mov	r1, r2
   1a63c:	ldr	r2, [sp, #56]	; 0x38
   1a640:	bl	1f7b8 <__assert_fail@plt+0xe38c>
   1a644:	ldr	r2, [fp, #-8]
   1a648:	ldr	r2, [r2]
   1a64c:	subs	r0, r0, r2
   1a650:	sbcs	r1, r1, #0
   1a654:	str	r0, [sp, #52]	; 0x34
   1a658:	str	r1, [sp, #48]	; 0x30
   1a65c:	bge	1a67c <__assert_fail@plt+0x9250>
   1a660:	b	1a664 <__assert_fail@plt+0x9238>
   1a664:	ldr	r0, [fp, #-8]
   1a668:	ldr	r0, [r0]
   1a66c:	ldr	r1, [fp, #-12]
   1a670:	mul	r0, r0, r1
   1a674:	str	r0, [fp, #-16]
   1a678:	b	1a918 <__assert_fail@plt+0x94ec>
   1a67c:	ldr	r0, [fp, #-8]
   1a680:	ldr	r0, [r0]
   1a684:	ldr	r1, [fp, #-12]
   1a688:	mul	r0, r0, r1
   1a68c:	str	r0, [fp, #-16]
   1a690:	b	1a94c <__assert_fail@plt+0x9520>
   1a694:	ldr	r0, [fp, #-12]
   1a698:	cmp	r0, #0
   1a69c:	bge	1a818 <__assert_fail@plt+0x93ec>
   1a6a0:	ldr	r0, [fp, #-8]
   1a6a4:	ldr	r0, [r0]
   1a6a8:	cmp	r0, #0
   1a6ac:	bcs	1a790 <__assert_fail@plt+0x9364>
   1a6b0:	b	1a6fc <__assert_fail@plt+0x92d0>
   1a6b4:	ldr	r0, [fp, #-8]
   1a6b8:	ldr	r0, [r0]
   1a6bc:	ldr	r1, [fp, #-12]
   1a6c0:	asr	r3, r1, #31
   1a6c4:	mvn	r2, #0
   1a6c8:	str	r0, [sp, #44]	; 0x2c
   1a6cc:	mov	r0, r2
   1a6d0:	str	r1, [sp, #40]	; 0x28
   1a6d4:	mov	r1, r2
   1a6d8:	ldr	r2, [sp, #40]	; 0x28
   1a6dc:	bl	1f88c <__assert_fail@plt+0xe460>
   1a6e0:	ldr	r2, [sp, #44]	; 0x2c
   1a6e4:	subs	r0, r2, r0
   1a6e8:	rscs	r1, r1, #0
   1a6ec:	str	r0, [sp, #36]	; 0x24
   1a6f0:	str	r1, [sp, #32]
   1a6f4:	bcc	1a8e8 <__assert_fail@plt+0x94bc>
   1a6f8:	b	1a900 <__assert_fail@plt+0x94d4>
   1a6fc:	b	1a700 <__assert_fail@plt+0x92d4>
   1a700:	ldr	r0, [pc, #612]	; 1a96c <__assert_fail@plt+0x9540>
   1a704:	ldr	r1, [fp, #-12]
   1a708:	cmp	r1, r0
   1a70c:	blt	1a724 <__assert_fail@plt+0x92f8>
   1a710:	b	1a738 <__assert_fail@plt+0x930c>
   1a714:	ldr	r0, [fp, #-12]
   1a718:	movw	r1, #0
   1a71c:	cmp	r1, r0
   1a720:	bge	1a738 <__assert_fail@plt+0x930c>
   1a724:	mov	r0, #1
   1a728:	mvn	r1, #0
   1a72c:	str	r1, [sp, #28]
   1a730:	str	r0, [sp, #24]
   1a734:	b	1a764 <__assert_fail@plt+0x9338>
   1a738:	ldr	r0, [fp, #-12]
   1a73c:	rsb	r0, r0, #0
   1a740:	asr	r3, r0, #31
   1a744:	mvn	r1, #0
   1a748:	str	r0, [sp, #20]
   1a74c:	mov	r0, r1
   1a750:	ldr	r2, [sp, #20]
   1a754:	bl	1f88c <__assert_fail@plt+0xe460>
   1a758:	str	r0, [sp, #28]
   1a75c:	str	r1, [sp, #24]
   1a760:	b	1a764 <__assert_fail@plt+0x9338>
   1a764:	ldr	r0, [sp, #24]
   1a768:	ldr	r1, [sp, #28]
   1a76c:	ldr	r2, [fp, #-8]
   1a770:	ldr	r2, [r2]
   1a774:	mvn	r2, r2
   1a778:	subs	r1, r2, r1
   1a77c:	rscs	r0, r0, #0
   1a780:	str	r1, [sp, #16]
   1a784:	str	r0, [sp, #12]
   1a788:	bcs	1a8e8 <__assert_fail@plt+0x94bc>
   1a78c:	b	1a900 <__assert_fail@plt+0x94d4>
   1a790:	b	1a794 <__assert_fail@plt+0x9368>
   1a794:	b	1a7f8 <__assert_fail@plt+0x93cc>
   1a798:	b	1a7f8 <__assert_fail@plt+0x93cc>
   1a79c:	ldr	r0, [fp, #-12]
   1a7a0:	cmn	r0, #1
   1a7a4:	bne	1a7f8 <__assert_fail@plt+0x93cc>
   1a7a8:	b	1a7c8 <__assert_fail@plt+0x939c>
   1a7ac:	ldr	r0, [fp, #-8]
   1a7b0:	ldr	r0, [r0]
   1a7b4:	add	r0, r0, #0
   1a7b8:	movw	r1, #0
   1a7bc:	cmp	r1, r0
   1a7c0:	bcc	1a8e8 <__assert_fail@plt+0x94bc>
   1a7c4:	b	1a900 <__assert_fail@plt+0x94d4>
   1a7c8:	ldr	r0, [fp, #-8]
   1a7cc:	ldr	r0, [r0]
   1a7d0:	movw	r1, #0
   1a7d4:	cmp	r1, r0
   1a7d8:	bcs	1a900 <__assert_fail@plt+0x94d4>
   1a7dc:	ldr	r0, [fp, #-8]
   1a7e0:	ldr	r0, [r0]
   1a7e4:	sub	r0, r0, #1
   1a7e8:	mvn	r1, #0
   1a7ec:	cmp	r1, r0
   1a7f0:	bcc	1a8e8 <__assert_fail@plt+0x94bc>
   1a7f4:	b	1a900 <__assert_fail@plt+0x94d4>
   1a7f8:	ldr	r0, [fp, #-12]
   1a7fc:	movw	r1, #0
   1a800:	sdiv	r0, r1, r0
   1a804:	ldr	r1, [fp, #-8]
   1a808:	ldr	r1, [r1]
   1a80c:	cmp	r0, r1
   1a810:	bcc	1a8e8 <__assert_fail@plt+0x94bc>
   1a814:	b	1a900 <__assert_fail@plt+0x94d4>
   1a818:	ldr	r0, [fp, #-12]
   1a81c:	cmp	r0, #0
   1a820:	bne	1a828 <__assert_fail@plt+0x93fc>
   1a824:	b	1a900 <__assert_fail@plt+0x94d4>
   1a828:	ldr	r0, [fp, #-8]
   1a82c:	ldr	r0, [r0]
   1a830:	cmp	r0, #0
   1a834:	bcs	1a8ac <__assert_fail@plt+0x9480>
   1a838:	b	1a840 <__assert_fail@plt+0x9414>
   1a83c:	b	1a848 <__assert_fail@plt+0x941c>
   1a840:	b	1a88c <__assert_fail@plt+0x9460>
   1a844:			; <UNDEFINED> instruction: 0xffff8000
   1a848:	ldr	r0, [fp, #-8]
   1a84c:	ldr	r0, [r0]
   1a850:	cmn	r0, #1
   1a854:	bne	1a88c <__assert_fail@plt+0x9460>
   1a858:	b	1a85c <__assert_fail@plt+0x9430>
   1a85c:	ldr	r0, [fp, #-12]
   1a860:	add	r0, r0, #0
   1a864:	movw	r1, #0
   1a868:	cmp	r1, r0
   1a86c:	blt	1a8e8 <__assert_fail@plt+0x94bc>
   1a870:	b	1a900 <__assert_fail@plt+0x94d4>
   1a874:	ldr	r0, [fp, #-12]
   1a878:	sub	r0, r0, #1
   1a87c:	mvn	r1, #0
   1a880:	cmp	r1, r0
   1a884:	blt	1a8e8 <__assert_fail@plt+0x94bc>
   1a888:	b	1a900 <__assert_fail@plt+0x94d4>
   1a88c:	ldr	r0, [fp, #-8]
   1a890:	ldr	r0, [r0]
   1a894:	movw	r1, #0
   1a898:	udiv	r0, r1, r0
   1a89c:	ldr	r1, [fp, #-12]
   1a8a0:	cmp	r0, r1
   1a8a4:	bcc	1a8e8 <__assert_fail@plt+0x94bc>
   1a8a8:	b	1a900 <__assert_fail@plt+0x94d4>
   1a8ac:	ldr	r0, [fp, #-12]
   1a8b0:	asr	r3, r0, #31
   1a8b4:	mvn	r1, #0
   1a8b8:	str	r0, [sp, #8]
   1a8bc:	mov	r0, r1
   1a8c0:	ldr	r2, [sp, #8]
   1a8c4:	bl	1f88c <__assert_fail@plt+0xe460>
   1a8c8:	ldr	r2, [fp, #-8]
   1a8cc:	ldr	r2, [r2]
   1a8d0:	subs	r0, r0, r2
   1a8d4:	sbcs	r1, r1, #0
   1a8d8:	str	r0, [sp, #4]
   1a8dc:	str	r1, [sp]
   1a8e0:	bcs	1a900 <__assert_fail@plt+0x94d4>
   1a8e4:	b	1a8e8 <__assert_fail@plt+0x94bc>
   1a8e8:	ldr	r0, [fp, #-8]
   1a8ec:	ldr	r0, [r0]
   1a8f0:	ldr	r1, [fp, #-12]
   1a8f4:	mul	r0, r0, r1
   1a8f8:	str	r0, [fp, #-16]
   1a8fc:	b	1a918 <__assert_fail@plt+0x94ec>
   1a900:	ldr	r0, [fp, #-8]
   1a904:	ldr	r0, [r0]
   1a908:	ldr	r1, [fp, #-12]
   1a90c:	mul	r0, r0, r1
   1a910:	str	r0, [fp, #-16]
   1a914:	b	1a94c <__assert_fail@plt+0x9520>
   1a918:	ldr	r0, [fp, #-8]
   1a91c:	ldr	r0, [r0]
   1a920:	cmp	r0, #0
   1a924:	movw	r0, #0
   1a928:	movcc	r0, #1
   1a92c:	tst	r0, #1
   1a930:	movw	r0, #0
   1a934:	mvneq	r0, #0
   1a938:	ldr	r1, [fp, #-8]
   1a93c:	str	r0, [r1]
   1a940:	movw	r0, #1
   1a944:	str	r0, [fp, #-4]
   1a948:	b	1a960 <__assert_fail@plt+0x9534>
   1a94c:	ldr	r0, [fp, #-16]
   1a950:	ldr	r1, [fp, #-8]
   1a954:	str	r0, [r1]
   1a958:	movw	r0, #0
   1a95c:	str	r0, [fp, #-4]
   1a960:	ldr	r0, [fp, #-4]
   1a964:	mov	sp, fp
   1a968:	pop	{fp, pc}
   1a96c:	andhi	r0, r0, r1
   1a970:	svcvc	0x00ffffff
   1a974:	andhi	r0, r0, r0
   1a978:	push	{fp, lr}
   1a97c:	mov	fp, sp
   1a980:	sub	sp, sp, #16
   1a984:	str	r0, [fp, #-4]
   1a988:	str	r1, [sp, #8]
   1a98c:	str	r2, [sp, #4]
   1a990:	movw	r0, #0
   1a994:	str	r0, [sp]
   1a998:	ldr	r0, [sp, #4]
   1a99c:	mvn	r1, #0
   1a9a0:	add	r1, r0, r1
   1a9a4:	str	r1, [sp, #4]
   1a9a8:	cmp	r0, #0
   1a9ac:	beq	1a9cc <__assert_fail@plt+0x95a0>
   1a9b0:	ldr	r0, [fp, #-4]
   1a9b4:	ldr	r1, [sp, #8]
   1a9b8:	bl	19338 <__assert_fail@plt+0x7f0c>
   1a9bc:	ldr	r1, [sp]
   1a9c0:	orr	r0, r1, r0
   1a9c4:	str	r0, [sp]
   1a9c8:	b	1a998 <__assert_fail@plt+0x956c>
   1a9cc:	ldr	r0, [sp]
   1a9d0:	mov	sp, fp
   1a9d4:	pop	{fp, pc}
   1a9d8:	push	{fp, lr}
   1a9dc:	mov	fp, sp
   1a9e0:	sub	sp, sp, #88	; 0x58
   1a9e4:	ldr	ip, [fp, #8]
   1a9e8:	str	r0, [fp, #-8]
   1a9ec:	str	r1, [fp, #-12]
   1a9f0:	str	r2, [fp, #-16]
   1a9f4:	str	r3, [fp, #-20]	; 0xffffffec
   1a9f8:	movw	r0, #0
   1a9fc:	str	r0, [sp, #44]	; 0x2c
   1aa00:	ldr	r1, [fp, #-16]
   1aa04:	cmp	r0, r1
   1aa08:	str	ip, [sp, #20]
   1aa0c:	bgt	1aa20 <__assert_fail@plt+0x95f4>
   1aa10:	ldr	r0, [fp, #-16]
   1aa14:	cmp	r0, #36	; 0x24
   1aa18:	bgt	1aa20 <__assert_fail@plt+0x95f4>
   1aa1c:	b	1aa40 <__assert_fail@plt+0x9614>
   1aa20:	movw	r0, #1209	; 0x4b9
   1aa24:	movt	r0, #2
   1aa28:	movw	r1, #1247	; 0x4df
   1aa2c:	movt	r1, #2
   1aa30:	movw	r2, #85	; 0x55
   1aa34:	movw	r3, #1344	; 0x540
   1aa38:	movt	r3, #2
   1aa3c:	bl	1142c <__assert_fail@plt>
   1aa40:	ldr	r0, [fp, #-12]
   1aa44:	movw	r1, #0
   1aa48:	cmp	r0, r1
   1aa4c:	beq	1aa5c <__assert_fail@plt+0x9630>
   1aa50:	ldr	r0, [fp, #-12]
   1aa54:	str	r0, [sp, #16]
   1aa58:	b	1aa68 <__assert_fail@plt+0x963c>
   1aa5c:	sub	r0, fp, #24
   1aa60:	str	r0, [sp, #16]
   1aa64:	b	1aa68 <__assert_fail@plt+0x963c>
   1aa68:	ldr	r0, [sp, #16]
   1aa6c:	str	r0, [fp, #-28]	; 0xffffffe4
   1aa70:	bl	1130c <__errno_location@plt>
   1aa74:	movw	lr, #0
   1aa78:	str	lr, [r0]
   1aa7c:	ldr	r0, [fp, #-8]
   1aa80:	str	r0, [sp, #40]	; 0x28
   1aa84:	ldr	r0, [sp, #40]	; 0x28
   1aa88:	ldrb	r0, [r0]
   1aa8c:	strb	r0, [sp, #39]	; 0x27
   1aa90:	bl	112b8 <__ctype_b_loc@plt>
   1aa94:	ldr	r0, [r0]
   1aa98:	ldrb	lr, [sp, #39]	; 0x27
   1aa9c:	mov	r1, lr
   1aaa0:	add	r0, r0, lr, lsl #1
   1aaa4:	ldrh	r0, [r0]
   1aaa8:	and	r0, r0, #8192	; 0x2000
   1aaac:	cmp	r0, #0
   1aab0:	str	r1, [sp, #12]
   1aab4:	beq	1aad0 <__assert_fail@plt+0x96a4>
   1aab8:	ldr	r0, [sp, #40]	; 0x28
   1aabc:	add	r1, r0, #1
   1aac0:	str	r1, [sp, #40]	; 0x28
   1aac4:	ldrb	r0, [r0, #1]
   1aac8:	strb	r0, [sp, #39]	; 0x27
   1aacc:	b	1aa90 <__assert_fail@plt+0x9664>
   1aad0:	ldrb	r0, [sp, #39]	; 0x27
   1aad4:	cmp	r0, #45	; 0x2d
   1aad8:	bne	1aae8 <__assert_fail@plt+0x96bc>
   1aadc:	movw	r0, #4
   1aae0:	str	r0, [fp, #-4]
   1aae4:	b	1b064 <__assert_fail@plt+0x9c38>
   1aae8:	ldr	r0, [fp, #-8]
   1aaec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1aaf0:	ldr	r2, [fp, #-16]
   1aaf4:	bl	11360 <strtoumax@plt>
   1aaf8:	str	r1, [fp, #-36]	; 0xffffffdc
   1aafc:	str	r0, [fp, #-40]	; 0xffffffd8
   1ab00:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ab04:	ldr	r0, [r0]
   1ab08:	ldr	r1, [fp, #-8]
   1ab0c:	cmp	r0, r1
   1ab10:	bne	1ab7c <__assert_fail@plt+0x9750>
   1ab14:	ldr	r0, [fp, #8]
   1ab18:	movw	r1, #0
   1ab1c:	cmp	r0, r1
   1ab20:	beq	1ab6c <__assert_fail@plt+0x9740>
   1ab24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ab28:	ldr	r0, [r0]
   1ab2c:	ldrb	r0, [r0]
   1ab30:	cmp	r0, #0
   1ab34:	beq	1ab6c <__assert_fail@plt+0x9740>
   1ab38:	ldr	r0, [fp, #8]
   1ab3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ab40:	ldr	r1, [r1]
   1ab44:	ldrb	r1, [r1]
   1ab48:	bl	112f4 <strchr@plt>
   1ab4c:	movw	r1, #0
   1ab50:	cmp	r0, r1
   1ab54:	beq	1ab6c <__assert_fail@plt+0x9740>
   1ab58:	mov	r0, #0
   1ab5c:	str	r0, [fp, #-36]	; 0xffffffdc
   1ab60:	mov	r0, #1
   1ab64:	str	r0, [fp, #-40]	; 0xffffffd8
   1ab68:	b	1ab78 <__assert_fail@plt+0x974c>
   1ab6c:	movw	r0, #4
   1ab70:	str	r0, [fp, #-4]
   1ab74:	b	1b064 <__assert_fail@plt+0x9c38>
   1ab78:	b	1abb4 <__assert_fail@plt+0x9788>
   1ab7c:	bl	1130c <__errno_location@plt>
   1ab80:	ldr	r0, [r0]
   1ab84:	cmp	r0, #0
   1ab88:	beq	1abb0 <__assert_fail@plt+0x9784>
   1ab8c:	bl	1130c <__errno_location@plt>
   1ab90:	ldr	r0, [r0]
   1ab94:	cmp	r0, #34	; 0x22
   1ab98:	beq	1aba8 <__assert_fail@plt+0x977c>
   1ab9c:	movw	r0, #4
   1aba0:	str	r0, [fp, #-4]
   1aba4:	b	1b064 <__assert_fail@plt+0x9c38>
   1aba8:	movw	r0, #1
   1abac:	str	r0, [sp, #44]	; 0x2c
   1abb0:	b	1abb4 <__assert_fail@plt+0x9788>
   1abb4:	ldr	r0, [fp, #8]
   1abb8:	movw	r1, #0
   1abbc:	cmp	r0, r1
   1abc0:	bne	1abe4 <__assert_fail@plt+0x97b8>
   1abc4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1abc8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1abcc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1abd0:	str	r1, [r2, #4]
   1abd4:	str	r0, [r2]
   1abd8:	ldr	r0, [sp, #44]	; 0x2c
   1abdc:	str	r0, [fp, #-4]
   1abe0:	b	1b064 <__assert_fail@plt+0x9c38>
   1abe4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1abe8:	ldr	r0, [r0]
   1abec:	ldrb	r0, [r0]
   1abf0:	cmp	r0, #0
   1abf4:	beq	1b048 <__assert_fail@plt+0x9c1c>
   1abf8:	movw	r0, #1024	; 0x400
   1abfc:	str	r0, [sp, #32]
   1ac00:	movw	r0, #1
   1ac04:	str	r0, [sp, #28]
   1ac08:	ldr	r0, [fp, #8]
   1ac0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ac10:	ldr	r1, [r1]
   1ac14:	ldrb	r1, [r1]
   1ac18:	bl	112f4 <strchr@plt>
   1ac1c:	movw	r1, #0
   1ac20:	cmp	r0, r1
   1ac24:	bne	1ac4c <__assert_fail@plt+0x9820>
   1ac28:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ac2c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ac30:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ac34:	str	r1, [r2, #4]
   1ac38:	str	r0, [r2]
   1ac3c:	ldr	r0, [sp, #44]	; 0x2c
   1ac40:	orr	r0, r0, #2
   1ac44:	str	r0, [fp, #-4]
   1ac48:	b	1b064 <__assert_fail@plt+0x9c38>
   1ac4c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ac50:	ldr	r0, [r0]
   1ac54:	ldrb	r0, [r0]
   1ac58:	sub	r0, r0, #69	; 0x45
   1ac5c:	cmp	r0, #47	; 0x2f
   1ac60:	str	r0, [sp, #8]
   1ac64:	bhi	1add0 <__assert_fail@plt+0x99a4>
   1ac68:	add	r0, pc, #8
   1ac6c:	ldr	r1, [sp, #8]
   1ac70:	ldr	r0, [r0, r1, lsl #2]
   1ac74:	mov	pc, r0
   1ac78:	andeq	sl, r1, r8, lsr sp
   1ac7c:	ldrdeq	sl, [r1], -r0
   1ac80:	andeq	sl, r1, r8, lsr sp
   1ac84:	ldrdeq	sl, [r1], -r0
   1ac88:	ldrdeq	sl, [r1], -r0
   1ac8c:	ldrdeq	sl, [r1], -r0
   1ac90:	andeq	sl, r1, r8, lsr sp
   1ac94:	ldrdeq	sl, [r1], -r0
   1ac98:	andeq	sl, r1, r8, lsr sp
   1ac9c:	ldrdeq	sl, [r1], -r0
   1aca0:	ldrdeq	sl, [r1], -r0
   1aca4:	andeq	sl, r1, r8, lsr sp
   1aca8:	ldrdeq	sl, [r1], -r0
   1acac:	ldrdeq	sl, [r1], -r0
   1acb0:	ldrdeq	sl, [r1], -r0
   1acb4:	andeq	sl, r1, r8, lsr sp
   1acb8:	ldrdeq	sl, [r1], -r0
   1acbc:	ldrdeq	sl, [r1], -r0
   1acc0:	ldrdeq	sl, [r1], -r0
   1acc4:	ldrdeq	sl, [r1], -r0
   1acc8:	andeq	sl, r1, r8, lsr sp
   1accc:	andeq	sl, r1, r8, lsr sp
   1acd0:	ldrdeq	sl, [r1], -r0
   1acd4:	ldrdeq	sl, [r1], -r0
   1acd8:	ldrdeq	sl, [r1], -r0
   1acdc:	ldrdeq	sl, [r1], -r0
   1ace0:	ldrdeq	sl, [r1], -r0
   1ace4:	ldrdeq	sl, [r1], -r0
   1ace8:	ldrdeq	sl, [r1], -r0
   1acec:	ldrdeq	sl, [r1], -r0
   1acf0:	ldrdeq	sl, [r1], -r0
   1acf4:	ldrdeq	sl, [r1], -r0
   1acf8:	ldrdeq	sl, [r1], -r0
   1acfc:	ldrdeq	sl, [r1], -r0
   1ad00:	andeq	sl, r1, r8, lsr sp
   1ad04:	ldrdeq	sl, [r1], -r0
   1ad08:	ldrdeq	sl, [r1], -r0
   1ad0c:	ldrdeq	sl, [r1], -r0
   1ad10:	andeq	sl, r1, r8, lsr sp
   1ad14:	ldrdeq	sl, [r1], -r0
   1ad18:	andeq	sl, r1, r8, lsr sp
   1ad1c:	ldrdeq	sl, [r1], -r0
   1ad20:	ldrdeq	sl, [r1], -r0
   1ad24:	ldrdeq	sl, [r1], -r0
   1ad28:	ldrdeq	sl, [r1], -r0
   1ad2c:	ldrdeq	sl, [r1], -r0
   1ad30:	ldrdeq	sl, [r1], -r0
   1ad34:	andeq	sl, r1, r8, lsr sp
   1ad38:	ldr	r0, [fp, #8]
   1ad3c:	movw	r1, #48	; 0x30
   1ad40:	bl	112f4 <strchr@plt>
   1ad44:	movw	r1, #0
   1ad48:	cmp	r0, r1
   1ad4c:	beq	1adcc <__assert_fail@plt+0x99a0>
   1ad50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ad54:	ldr	r0, [r0]
   1ad58:	ldrb	r0, [r0, #1]
   1ad5c:	mov	r1, r0
   1ad60:	cmp	r0, #66	; 0x42
   1ad64:	str	r1, [sp, #4]
   1ad68:	beq	1adb4 <__assert_fail@plt+0x9988>
   1ad6c:	b	1ad70 <__assert_fail@plt+0x9944>
   1ad70:	ldr	r0, [sp, #4]
   1ad74:	cmp	r0, #68	; 0x44
   1ad78:	beq	1adb4 <__assert_fail@plt+0x9988>
   1ad7c:	b	1ad80 <__assert_fail@plt+0x9954>
   1ad80:	ldr	r0, [sp, #4]
   1ad84:	cmp	r0, #105	; 0x69
   1ad88:	bne	1adc8 <__assert_fail@plt+0x999c>
   1ad8c:	b	1ad90 <__assert_fail@plt+0x9964>
   1ad90:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ad94:	ldr	r0, [r0]
   1ad98:	ldrb	r0, [r0, #2]
   1ad9c:	cmp	r0, #66	; 0x42
   1ada0:	bne	1adb0 <__assert_fail@plt+0x9984>
   1ada4:	ldr	r0, [sp, #28]
   1ada8:	add	r0, r0, #2
   1adac:	str	r0, [sp, #28]
   1adb0:	b	1adc8 <__assert_fail@plt+0x999c>
   1adb4:	movw	r0, #1000	; 0x3e8
   1adb8:	str	r0, [sp, #32]
   1adbc:	ldr	r0, [sp, #28]
   1adc0:	add	r0, r0, #1
   1adc4:	str	r0, [sp, #28]
   1adc8:	b	1adcc <__assert_fail@plt+0x99a0>
   1adcc:	b	1add0 <__assert_fail@plt+0x99a4>
   1add0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1add4:	ldr	r0, [r0]
   1add8:	ldrb	r0, [r0]
   1addc:	sub	r0, r0, #66	; 0x42
   1ade0:	cmp	r0, #53	; 0x35
   1ade4:	str	r0, [sp]
   1ade8:	bhi	1afdc <__assert_fail@plt+0x9bb0>
   1adec:	add	r0, pc, #8
   1adf0:	ldr	r1, [sp]
   1adf4:	ldr	r0, [r0, r1, lsl #2]
   1adf8:	mov	pc, r0
   1adfc:	andeq	sl, r1, r8, ror #29
   1ae00:	ldrdeq	sl, [r1], -ip
   1ae04:	ldrdeq	sl, [r1], -ip
   1ae08:	andeq	sl, r1, r8, lsl #30
   1ae0c:	ldrdeq	sl, [r1], -ip
   1ae10:	andeq	sl, r1, r0, lsr #30
   1ae14:	ldrdeq	sl, [r1], -ip
   1ae18:	ldrdeq	sl, [r1], -ip
   1ae1c:	ldrdeq	sl, [r1], -ip
   1ae20:	andeq	sl, r1, r8, lsr pc
   1ae24:	ldrdeq	sl, [r1], -ip
   1ae28:	andeq	sl, r1, r0, asr pc
   1ae2c:	ldrdeq	sl, [r1], -ip
   1ae30:	ldrdeq	sl, [r1], -ip
   1ae34:	andeq	sl, r1, r8, ror #30
   1ae38:	ldrdeq	sl, [r1], -ip
   1ae3c:	ldrdeq	sl, [r1], -ip
   1ae40:	ldrdeq	sl, [r1], -ip
   1ae44:	andeq	sl, r1, r0, lsl #31
   1ae48:	ldrdeq	sl, [r1], -ip
   1ae4c:	ldrdeq	sl, [r1], -ip
   1ae50:	ldrdeq	sl, [r1], -ip
   1ae54:	ldrdeq	sl, [r1], -ip
   1ae58:	andeq	sl, r1, ip, lsr #31
   1ae5c:	andeq	sl, r1, r4, asr #31
   1ae60:	ldrdeq	sl, [r1], -ip
   1ae64:	ldrdeq	sl, [r1], -ip
   1ae68:	ldrdeq	sl, [r1], -ip
   1ae6c:	ldrdeq	sl, [r1], -ip
   1ae70:	ldrdeq	sl, [r1], -ip
   1ae74:	ldrdeq	sl, [r1], -ip
   1ae78:	ldrdeq	sl, [r1], -ip
   1ae7c:	ldrdeq	sl, [r1], -r4
   1ae80:	strdeq	sl, [r1], -ip
   1ae84:	ldrdeq	sl, [r1], -ip
   1ae88:	ldrdeq	sl, [r1], -ip
   1ae8c:	ldrdeq	sl, [r1], -ip
   1ae90:	andeq	sl, r1, r0, lsr #30
   1ae94:	ldrdeq	sl, [r1], -ip
   1ae98:	ldrdeq	sl, [r1], -ip
   1ae9c:	ldrdeq	sl, [r1], -ip
   1aea0:	andeq	sl, r1, r8, lsr pc
   1aea4:	ldrdeq	sl, [r1], -ip
   1aea8:	andeq	sl, r1, r0, asr pc
   1aeac:	ldrdeq	sl, [r1], -ip
   1aeb0:	ldrdeq	sl, [r1], -ip
   1aeb4:	ldrdeq	sl, [r1], -ip
   1aeb8:	ldrdeq	sl, [r1], -ip
   1aebc:	ldrdeq	sl, [r1], -ip
   1aec0:	ldrdeq	sl, [r1], -ip
   1aec4:	andeq	sl, r1, r0, lsl #31
   1aec8:	ldrdeq	sl, [r1], -ip
   1aecc:	ldrdeq	sl, [r1], -ip
   1aed0:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1aed4:	sub	r0, fp, #40	; 0x28
   1aed8:	movw	r1, #512	; 0x200
   1aedc:	bl	1b070 <__assert_fail@plt+0x9c44>
   1aee0:	str	r0, [sp, #24]
   1aee4:	b	1b000 <__assert_fail@plt+0x9bd4>
   1aee8:	sub	r0, fp, #40	; 0x28
   1aeec:	movw	r1, #1024	; 0x400
   1aef0:	bl	1b070 <__assert_fail@plt+0x9c44>
   1aef4:	str	r0, [sp, #24]
   1aef8:	b	1b000 <__assert_fail@plt+0x9bd4>
   1aefc:	movw	r0, #0
   1af00:	str	r0, [sp, #24]
   1af04:	b	1b000 <__assert_fail@plt+0x9bd4>
   1af08:	ldr	r1, [sp, #32]
   1af0c:	sub	r0, fp, #40	; 0x28
   1af10:	movw	r2, #6
   1af14:	bl	1cb78 <__assert_fail@plt+0xb74c>
   1af18:	str	r0, [sp, #24]
   1af1c:	b	1b000 <__assert_fail@plt+0x9bd4>
   1af20:	ldr	r1, [sp, #32]
   1af24:	sub	r0, fp, #40	; 0x28
   1af28:	movw	r2, #3
   1af2c:	bl	1cb78 <__assert_fail@plt+0xb74c>
   1af30:	str	r0, [sp, #24]
   1af34:	b	1b000 <__assert_fail@plt+0x9bd4>
   1af38:	ldr	r1, [sp, #32]
   1af3c:	sub	r0, fp, #40	; 0x28
   1af40:	movw	r2, #1
   1af44:	bl	1cb78 <__assert_fail@plt+0xb74c>
   1af48:	str	r0, [sp, #24]
   1af4c:	b	1b000 <__assert_fail@plt+0x9bd4>
   1af50:	ldr	r1, [sp, #32]
   1af54:	sub	r0, fp, #40	; 0x28
   1af58:	movw	r2, #2
   1af5c:	bl	1cb78 <__assert_fail@plt+0xb74c>
   1af60:	str	r0, [sp, #24]
   1af64:	b	1b000 <__assert_fail@plt+0x9bd4>
   1af68:	ldr	r1, [sp, #32]
   1af6c:	sub	r0, fp, #40	; 0x28
   1af70:	movw	r2, #5
   1af74:	bl	1cb78 <__assert_fail@plt+0xb74c>
   1af78:	str	r0, [sp, #24]
   1af7c:	b	1b000 <__assert_fail@plt+0x9bd4>
   1af80:	ldr	r1, [sp, #32]
   1af84:	sub	r0, fp, #40	; 0x28
   1af88:	movw	r2, #4
   1af8c:	bl	1cb78 <__assert_fail@plt+0xb74c>
   1af90:	str	r0, [sp, #24]
   1af94:	b	1b000 <__assert_fail@plt+0x9bd4>
   1af98:	sub	r0, fp, #40	; 0x28
   1af9c:	movw	r1, #2
   1afa0:	bl	1b070 <__assert_fail@plt+0x9c44>
   1afa4:	str	r0, [sp, #24]
   1afa8:	b	1b000 <__assert_fail@plt+0x9bd4>
   1afac:	ldr	r1, [sp, #32]
   1afb0:	sub	r0, fp, #40	; 0x28
   1afb4:	movw	r2, #8
   1afb8:	bl	1cb78 <__assert_fail@plt+0xb74c>
   1afbc:	str	r0, [sp, #24]
   1afc0:	b	1b000 <__assert_fail@plt+0x9bd4>
   1afc4:	ldr	r1, [sp, #32]
   1afc8:	sub	r0, fp, #40	; 0x28
   1afcc:	movw	r2, #7
   1afd0:	bl	1cb78 <__assert_fail@plt+0xb74c>
   1afd4:	str	r0, [sp, #24]
   1afd8:	b	1b000 <__assert_fail@plt+0x9bd4>
   1afdc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1afe0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1afe4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1afe8:	str	r1, [r2, #4]
   1afec:	str	r0, [r2]
   1aff0:	ldr	r0, [sp, #44]	; 0x2c
   1aff4:	orr	r0, r0, #2
   1aff8:	str	r0, [fp, #-4]
   1affc:	b	1b064 <__assert_fail@plt+0x9c38>
   1b000:	ldr	r0, [sp, #24]
   1b004:	ldr	r1, [sp, #44]	; 0x2c
   1b008:	orr	r0, r1, r0
   1b00c:	str	r0, [sp, #44]	; 0x2c
   1b010:	ldr	r0, [sp, #28]
   1b014:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b018:	ldr	r2, [r1]
   1b01c:	add	r0, r2, r0
   1b020:	str	r0, [r1]
   1b024:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b028:	ldr	r0, [r0]
   1b02c:	ldrsb	r0, [r0]
   1b030:	cmp	r0, #0
   1b034:	beq	1b044 <__assert_fail@plt+0x9c18>
   1b038:	ldr	r0, [sp, #44]	; 0x2c
   1b03c:	orr	r0, r0, #2
   1b040:	str	r0, [sp, #44]	; 0x2c
   1b044:	b	1b048 <__assert_fail@plt+0x9c1c>
   1b048:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b04c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b050:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b054:	str	r1, [r2, #4]
   1b058:	str	r0, [r2]
   1b05c:	ldr	r0, [sp, #44]	; 0x2c
   1b060:	str	r0, [fp, #-4]
   1b064:	ldr	r0, [fp, #-4]
   1b068:	mov	sp, fp
   1b06c:	pop	{fp, pc}
   1b070:	push	{fp, lr}
   1b074:	mov	fp, sp
   1b078:	sub	sp, sp, #568	; 0x238
   1b07c:	str	r0, [fp, #-8]
   1b080:	str	r1, [fp, #-12]
   1b084:	b	1b5b8 <__assert_fail@plt+0xa18c>
   1b088:	b	1b32c <__assert_fail@plt+0x9f00>
   1b08c:	ldr	r0, [fp, #-12]
   1b090:	cmp	r0, #0
   1b094:	bge	1b20c <__assert_fail@plt+0x9de0>
   1b098:	mov	r0, #1
   1b09c:	cmp	r0, #0
   1b0a0:	bne	1b158 <__assert_fail@plt+0x9d2c>
   1b0a4:	b	1b0a8 <__assert_fail@plt+0x9c7c>
   1b0a8:	b	1b0ac <__assert_fail@plt+0x9c80>
   1b0ac:	ldr	r0, [fp, #-8]
   1b0b0:	ldr	r1, [r0]
   1b0b4:	ldr	r0, [r0, #4]
   1b0b8:	ldr	r2, [fp, #-12]
   1b0bc:	mov	r3, #127	; 0x7f
   1b0c0:	sdiv	r2, r3, r2
   1b0c4:	subs	r1, r1, r2
   1b0c8:	sbcs	r0, r0, r2, asr #31
   1b0cc:	str	r1, [fp, #-28]	; 0xffffffe4
   1b0d0:	str	r0, [fp, #-32]	; 0xffffffe0
   1b0d4:	bcc	1b2e4 <__assert_fail@plt+0x9eb8>
   1b0d8:	b	1b308 <__assert_fail@plt+0x9edc>
   1b0dc:	b	1b0e0 <__assert_fail@plt+0x9cb4>
   1b0e0:	ldr	r0, [pc, #4088]	; 1c0e0 <__assert_fail@plt+0xacb4>
   1b0e4:	ldr	r1, [fp, #-12]
   1b0e8:	cmp	r1, r0
   1b0ec:	blt	1b104 <__assert_fail@plt+0x9cd8>
   1b0f0:	b	1b110 <__assert_fail@plt+0x9ce4>
   1b0f4:	ldr	r0, [fp, #-12]
   1b0f8:	movw	r1, #0
   1b0fc:	cmp	r1, r0
   1b100:	bge	1b110 <__assert_fail@plt+0x9ce4>
   1b104:	movw	r0, #0
   1b108:	str	r0, [fp, #-36]	; 0xffffffdc
   1b10c:	b	1b128 <__assert_fail@plt+0x9cfc>
   1b110:	ldr	r0, [fp, #-12]
   1b114:	movw	r1, #0
   1b118:	sub	r0, r1, r0
   1b11c:	movw	r1, #127	; 0x7f
   1b120:	sdiv	r0, r1, r0
   1b124:	str	r0, [fp, #-36]	; 0xffffffdc
   1b128:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b12c:	ldr	r1, [fp, #-8]
   1b130:	ldr	r2, [r1]
   1b134:	ldr	r1, [r1, #4]
   1b138:	mvn	r1, r1
   1b13c:	mvn	r2, r2
   1b140:	subs	r2, r2, r0
   1b144:	sbcs	r0, r1, r0, asr #31
   1b148:	str	r2, [fp, #-40]	; 0xffffffd8
   1b14c:	str	r0, [fp, #-44]	; 0xffffffd4
   1b150:	bcs	1b2e4 <__assert_fail@plt+0x9eb8>
   1b154:	b	1b308 <__assert_fail@plt+0x9edc>
   1b158:	b	1b15c <__assert_fail@plt+0x9d30>
   1b15c:	b	1b1dc <__assert_fail@plt+0x9db0>
   1b160:	b	1b1dc <__assert_fail@plt+0x9db0>
   1b164:	ldr	r0, [fp, #-12]
   1b168:	cmn	r0, #1
   1b16c:	bne	1b1dc <__assert_fail@plt+0x9db0>
   1b170:	b	1b194 <__assert_fail@plt+0x9d68>
   1b174:	ldr	r0, [fp, #-8]
   1b178:	ldr	r1, [r0]
   1b17c:	ldr	r0, [r0, #4]
   1b180:	eor	r1, r1, #128	; 0x80
   1b184:	orr	r0, r1, r0
   1b188:	cmp	r0, #0
   1b18c:	bne	1b2e4 <__assert_fail@plt+0x9eb8>
   1b190:	b	1b308 <__assert_fail@plt+0x9edc>
   1b194:	ldr	r0, [fp, #-8]
   1b198:	ldr	r1, [r0]
   1b19c:	ldr	r0, [r0, #4]
   1b1a0:	orr	r0, r1, r0
   1b1a4:	cmp	r0, #0
   1b1a8:	beq	1b308 <__assert_fail@plt+0x9edc>
   1b1ac:	b	1b1b0 <__assert_fail@plt+0x9d84>
   1b1b0:	ldr	r0, [fp, #-8]
   1b1b4:	ldr	r1, [r0]
   1b1b8:	ldr	r0, [r0, #4]
   1b1bc:	subs	r1, r1, #1
   1b1c0:	sbc	r0, r0, #0
   1b1c4:	rsbs	r1, r1, #127	; 0x7f
   1b1c8:	rscs	r0, r0, #0
   1b1cc:	str	r1, [fp, #-48]	; 0xffffffd0
   1b1d0:	str	r0, [fp, #-52]	; 0xffffffcc
   1b1d4:	bcc	1b2e4 <__assert_fail@plt+0x9eb8>
   1b1d8:	b	1b308 <__assert_fail@plt+0x9edc>
   1b1dc:	ldr	r0, [fp, #-12]
   1b1e0:	mvn	r1, #127	; 0x7f
   1b1e4:	sdiv	r0, r1, r0
   1b1e8:	ldr	r1, [fp, #-8]
   1b1ec:	ldr	r2, [r1]
   1b1f0:	ldr	r1, [r1, #4]
   1b1f4:	subs	r2, r0, r2
   1b1f8:	rscs	r0, r1, r0, asr #31
   1b1fc:	str	r2, [fp, #-56]	; 0xffffffc8
   1b200:	str	r0, [fp, #-60]	; 0xffffffc4
   1b204:	bcc	1b2e4 <__assert_fail@plt+0x9eb8>
   1b208:	b	1b308 <__assert_fail@plt+0x9edc>
   1b20c:	ldr	r0, [fp, #-12]
   1b210:	cmp	r0, #0
   1b214:	bne	1b21c <__assert_fail@plt+0x9df0>
   1b218:	b	1b308 <__assert_fail@plt+0x9edc>
   1b21c:	mov	r0, #1
   1b220:	cmp	r0, #0
   1b224:	bne	1b2b4 <__assert_fail@plt+0x9e88>
   1b228:	b	1b22c <__assert_fail@plt+0x9e00>
   1b22c:	ldr	r0, [fp, #-8]
   1b230:	ldr	r1, [r0]
   1b234:	ldr	r0, [r0, #4]
   1b238:	and	r0, r1, r0
   1b23c:	cmn	r0, #1
   1b240:	bne	1b280 <__assert_fail@plt+0x9e54>
   1b244:	b	1b248 <__assert_fail@plt+0x9e1c>
   1b248:	b	1b24c <__assert_fail@plt+0x9e20>
   1b24c:	ldr	r0, [fp, #-12]
   1b250:	mvn	r1, #127	; 0x7f
   1b254:	add	r0, r0, r1
   1b258:	movw	r1, #0
   1b25c:	cmp	r1, r0
   1b260:	blt	1b2e4 <__assert_fail@plt+0x9eb8>
   1b264:	b	1b308 <__assert_fail@plt+0x9edc>
   1b268:	ldr	r0, [fp, #-12]
   1b26c:	sub	r0, r0, #1
   1b270:	movw	r1, #127	; 0x7f
   1b274:	cmp	r1, r0
   1b278:	blt	1b2e4 <__assert_fail@plt+0x9eb8>
   1b27c:	b	1b308 <__assert_fail@plt+0x9edc>
   1b280:	ldr	r0, [fp, #-8]
   1b284:	ldr	r2, [r0]
   1b288:	ldr	r3, [r0, #4]
   1b28c:	mvn	r0, #127	; 0x7f
   1b290:	mvn	r1, #0
   1b294:	bl	1f88c <__assert_fail@plt+0xe460>
   1b298:	ldr	r2, [fp, #-12]
   1b29c:	subs	r0, r0, r2
   1b2a0:	sbcs	r1, r1, r2, asr #31
   1b2a4:	str	r0, [fp, #-64]	; 0xffffffc0
   1b2a8:	str	r1, [fp, #-68]	; 0xffffffbc
   1b2ac:	bcc	1b2e4 <__assert_fail@plt+0x9eb8>
   1b2b0:	b	1b308 <__assert_fail@plt+0x9edc>
   1b2b4:	ldr	r0, [fp, #-12]
   1b2b8:	mov	r1, #127	; 0x7f
   1b2bc:	sdiv	r0, r1, r0
   1b2c0:	ldr	r1, [fp, #-8]
   1b2c4:	ldr	r2, [r1]
   1b2c8:	ldr	r1, [r1, #4]
   1b2cc:	subs	r2, r0, r2
   1b2d0:	rscs	r0, r1, r0, asr #31
   1b2d4:	str	r2, [fp, #-72]	; 0xffffffb8
   1b2d8:	str	r0, [fp, #-76]	; 0xffffffb4
   1b2dc:	bcs	1b308 <__assert_fail@plt+0x9edc>
   1b2e0:	b	1b2e4 <__assert_fail@plt+0x9eb8>
   1b2e4:	ldr	r0, [fp, #-8]
   1b2e8:	ldr	r0, [r0]
   1b2ec:	ldr	r1, [fp, #-12]
   1b2f0:	mul	r0, r0, r1
   1b2f4:	sxtb	r0, r0
   1b2f8:	asr	r1, r0, #31
   1b2fc:	str	r0, [fp, #-24]	; 0xffffffe8
   1b300:	str	r1, [fp, #-20]	; 0xffffffec
   1b304:	b	1cb2c <__assert_fail@plt+0xb700>
   1b308:	ldr	r0, [fp, #-8]
   1b30c:	ldr	r0, [r0]
   1b310:	ldr	r1, [fp, #-12]
   1b314:	mul	r0, r0, r1
   1b318:	sxtb	r0, r0
   1b31c:	asr	r1, r0, #31
   1b320:	str	r0, [fp, #-24]	; 0xffffffe8
   1b324:	str	r1, [fp, #-20]	; 0xffffffec
   1b328:	b	1cb48 <__assert_fail@plt+0xb71c>
   1b32c:	ldr	r0, [fp, #-12]
   1b330:	cmp	r0, #0
   1b334:	bge	1b48c <__assert_fail@plt+0xa060>
   1b338:	mov	r0, #1
   1b33c:	cmp	r0, #0
   1b340:	bne	1b3f8 <__assert_fail@plt+0x9fcc>
   1b344:	b	1b348 <__assert_fail@plt+0x9f1c>
   1b348:	b	1b34c <__assert_fail@plt+0x9f20>
   1b34c:	ldr	r0, [fp, #-8]
   1b350:	ldr	r1, [r0]
   1b354:	ldr	r0, [r0, #4]
   1b358:	ldr	r2, [fp, #-12]
   1b35c:	mov	r3, #255	; 0xff
   1b360:	sdiv	r2, r3, r2
   1b364:	subs	r1, r1, r2
   1b368:	sbcs	r0, r0, r2, asr #31
   1b36c:	str	r1, [fp, #-80]	; 0xffffffb0
   1b370:	str	r0, [fp, #-84]	; 0xffffffac
   1b374:	bcc	1b570 <__assert_fail@plt+0xa144>
   1b378:	b	1b594 <__assert_fail@plt+0xa168>
   1b37c:	b	1b380 <__assert_fail@plt+0x9f54>
   1b380:	ldr	r0, [pc, #3416]	; 1c0e0 <__assert_fail@plt+0xacb4>
   1b384:	ldr	r1, [fp, #-12]
   1b388:	cmp	r1, r0
   1b38c:	blt	1b3a4 <__assert_fail@plt+0x9f78>
   1b390:	b	1b3b0 <__assert_fail@plt+0x9f84>
   1b394:	ldr	r0, [fp, #-12]
   1b398:	movw	r1, #0
   1b39c:	cmp	r1, r0
   1b3a0:	bge	1b3b0 <__assert_fail@plt+0x9f84>
   1b3a4:	movw	r0, #0
   1b3a8:	str	r0, [fp, #-88]	; 0xffffffa8
   1b3ac:	b	1b3c8 <__assert_fail@plt+0x9f9c>
   1b3b0:	ldr	r0, [fp, #-12]
   1b3b4:	movw	r1, #0
   1b3b8:	sub	r0, r1, r0
   1b3bc:	movw	r1, #255	; 0xff
   1b3c0:	sdiv	r0, r1, r0
   1b3c4:	str	r0, [fp, #-88]	; 0xffffffa8
   1b3c8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1b3cc:	ldr	r1, [fp, #-8]
   1b3d0:	ldr	r2, [r1]
   1b3d4:	ldr	r1, [r1, #4]
   1b3d8:	mvn	r1, r1
   1b3dc:	mvn	r2, r2
   1b3e0:	subs	r2, r2, r0
   1b3e4:	sbcs	r0, r1, r0, asr #31
   1b3e8:	str	r2, [fp, #-92]	; 0xffffffa4
   1b3ec:	str	r0, [fp, #-96]	; 0xffffffa0
   1b3f0:	bcs	1b570 <__assert_fail@plt+0xa144>
   1b3f4:	b	1b594 <__assert_fail@plt+0xa168>
   1b3f8:	b	1b3fc <__assert_fail@plt+0x9fd0>
   1b3fc:	b	1b45c <__assert_fail@plt+0xa030>
   1b400:	b	1b45c <__assert_fail@plt+0xa030>
   1b404:	ldr	r0, [fp, #-12]
   1b408:	cmn	r0, #1
   1b40c:	bne	1b45c <__assert_fail@plt+0xa030>
   1b410:	b	1b430 <__assert_fail@plt+0xa004>
   1b414:	ldr	r0, [fp, #-8]
   1b418:	ldr	r1, [r0]
   1b41c:	ldr	r0, [r0, #4]
   1b420:	orr	r0, r1, r0
   1b424:	cmp	r0, #0
   1b428:	bne	1b570 <__assert_fail@plt+0xa144>
   1b42c:	b	1b594 <__assert_fail@plt+0xa168>
   1b430:	ldr	r0, [fp, #-8]
   1b434:	ldr	r1, [r0]
   1b438:	ldr	r0, [r0, #4]
   1b43c:	orr	r0, r1, r0
   1b440:	cmp	r0, #0
   1b444:	beq	1b594 <__assert_fail@plt+0xa168>
   1b448:	b	1b44c <__assert_fail@plt+0xa020>
   1b44c:	mov	r0, #0
   1b450:	cmp	r0, #0
   1b454:	bne	1b570 <__assert_fail@plt+0xa144>
   1b458:	b	1b594 <__assert_fail@plt+0xa168>
   1b45c:	ldr	r0, [fp, #-12]
   1b460:	mov	r1, #0
   1b464:	sdiv	r0, r1, r0
   1b468:	ldr	r1, [fp, #-8]
   1b46c:	ldr	r2, [r1]
   1b470:	ldr	r1, [r1, #4]
   1b474:	subs	r2, r0, r2
   1b478:	rscs	r0, r1, r0, asr #31
   1b47c:	str	r2, [fp, #-100]	; 0xffffff9c
   1b480:	str	r0, [fp, #-104]	; 0xffffff98
   1b484:	bcc	1b570 <__assert_fail@plt+0xa144>
   1b488:	b	1b594 <__assert_fail@plt+0xa168>
   1b48c:	ldr	r0, [fp, #-12]
   1b490:	cmp	r0, #0
   1b494:	bne	1b49c <__assert_fail@plt+0xa070>
   1b498:	b	1b594 <__assert_fail@plt+0xa168>
   1b49c:	mov	r0, #1
   1b4a0:	cmp	r0, #0
   1b4a4:	bne	1b540 <__assert_fail@plt+0xa114>
   1b4a8:	b	1b4ac <__assert_fail@plt+0xa080>
   1b4ac:	b	1b4b4 <__assert_fail@plt+0xa088>
   1b4b0:	b	1b4b8 <__assert_fail@plt+0xa08c>
   1b4b4:	b	1b508 <__assert_fail@plt+0xa0dc>
   1b4b8:	ldr	r0, [fp, #-8]
   1b4bc:	ldr	r1, [r0]
   1b4c0:	ldr	r0, [r0, #4]
   1b4c4:	and	r0, r1, r0
   1b4c8:	cmn	r0, #1
   1b4cc:	bne	1b508 <__assert_fail@plt+0xa0dc>
   1b4d0:	b	1b4d4 <__assert_fail@plt+0xa0a8>
   1b4d4:	b	1b4d8 <__assert_fail@plt+0xa0ac>
   1b4d8:	ldr	r0, [fp, #-12]
   1b4dc:	add	r0, r0, #0
   1b4e0:	movw	r1, #0
   1b4e4:	cmp	r1, r0
   1b4e8:	blt	1b570 <__assert_fail@plt+0xa144>
   1b4ec:	b	1b594 <__assert_fail@plt+0xa168>
   1b4f0:	ldr	r0, [fp, #-12]
   1b4f4:	sub	r0, r0, #1
   1b4f8:	mvn	r1, #0
   1b4fc:	cmp	r1, r0
   1b500:	blt	1b570 <__assert_fail@plt+0xa144>
   1b504:	b	1b594 <__assert_fail@plt+0xa168>
   1b508:	ldr	r0, [fp, #-8]
   1b50c:	ldr	r2, [r0]
   1b510:	ldr	r3, [r0, #4]
   1b514:	mov	r0, #0
   1b518:	str	r0, [fp, #-108]	; 0xffffff94
   1b51c:	ldr	r1, [fp, #-108]	; 0xffffff94
   1b520:	bl	1f88c <__assert_fail@plt+0xe460>
   1b524:	ldr	r2, [fp, #-12]
   1b528:	subs	r0, r0, r2
   1b52c:	sbcs	r1, r1, r2, asr #31
   1b530:	str	r0, [fp, #-112]	; 0xffffff90
   1b534:	str	r1, [fp, #-116]	; 0xffffff8c
   1b538:	bcc	1b570 <__assert_fail@plt+0xa144>
   1b53c:	b	1b594 <__assert_fail@plt+0xa168>
   1b540:	ldr	r0, [fp, #-12]
   1b544:	mov	r1, #255	; 0xff
   1b548:	sdiv	r0, r1, r0
   1b54c:	ldr	r1, [fp, #-8]
   1b550:	ldr	r2, [r1]
   1b554:	ldr	r1, [r1, #4]
   1b558:	subs	r2, r0, r2
   1b55c:	rscs	r0, r1, r0, asr #31
   1b560:	str	r2, [fp, #-120]	; 0xffffff88
   1b564:	str	r0, [fp, #-124]	; 0xffffff84
   1b568:	bcs	1b594 <__assert_fail@plt+0xa168>
   1b56c:	b	1b570 <__assert_fail@plt+0xa144>
   1b570:	ldr	r0, [fp, #-8]
   1b574:	ldr	r0, [r0]
   1b578:	ldr	r1, [fp, #-12]
   1b57c:	mul	r0, r0, r1
   1b580:	uxtb	r0, r0
   1b584:	mov	r1, #0
   1b588:	str	r1, [fp, #-20]	; 0xffffffec
   1b58c:	str	r0, [fp, #-24]	; 0xffffffe8
   1b590:	b	1cb2c <__assert_fail@plt+0xb700>
   1b594:	ldr	r0, [fp, #-8]
   1b598:	ldr	r0, [r0]
   1b59c:	ldr	r1, [fp, #-12]
   1b5a0:	mul	r0, r0, r1
   1b5a4:	uxtb	r0, r0
   1b5a8:	mov	r1, #0
   1b5ac:	str	r1, [fp, #-20]	; 0xffffffec
   1b5b0:	str	r0, [fp, #-24]	; 0xffffffe8
   1b5b4:	b	1cb48 <__assert_fail@plt+0xb71c>
   1b5b8:	b	1baf4 <__assert_fail@plt+0xa6c8>
   1b5bc:	b	1b868 <__assert_fail@plt+0xa43c>
   1b5c0:	ldr	r0, [fp, #-12]
   1b5c4:	cmp	r0, #0
   1b5c8:	bge	1b744 <__assert_fail@plt+0xa318>
   1b5cc:	mov	r0, #1
   1b5d0:	cmp	r0, #0
   1b5d4:	bne	1b68c <__assert_fail@plt+0xa260>
   1b5d8:	b	1b5dc <__assert_fail@plt+0xa1b0>
   1b5dc:	b	1b5e0 <__assert_fail@plt+0xa1b4>
   1b5e0:	ldr	r0, [fp, #-8]
   1b5e4:	ldr	r1, [r0]
   1b5e8:	ldr	r0, [r0, #4]
   1b5ec:	ldr	r2, [fp, #-12]
   1b5f0:	movw	r3, #32767	; 0x7fff
   1b5f4:	sdiv	r2, r3, r2
   1b5f8:	subs	r1, r1, r2
   1b5fc:	sbcs	r0, r0, r2, asr #31
   1b600:	str	r1, [fp, #-128]	; 0xffffff80
   1b604:	str	r0, [fp, #-132]	; 0xffffff7c
   1b608:	bcc	1b820 <__assert_fail@plt+0xa3f4>
   1b60c:	b	1b844 <__assert_fail@plt+0xa418>
   1b610:	b	1b614 <__assert_fail@plt+0xa1e8>
   1b614:	ldr	r0, [pc, #2756]	; 1c0e0 <__assert_fail@plt+0xacb4>
   1b618:	ldr	r1, [fp, #-12]
   1b61c:	cmp	r1, r0
   1b620:	blt	1b638 <__assert_fail@plt+0xa20c>
   1b624:	b	1b644 <__assert_fail@plt+0xa218>
   1b628:	ldr	r0, [fp, #-12]
   1b62c:	movw	r1, #0
   1b630:	cmp	r1, r0
   1b634:	bge	1b644 <__assert_fail@plt+0xa218>
   1b638:	movw	r0, #0
   1b63c:	str	r0, [fp, #-136]	; 0xffffff78
   1b640:	b	1b65c <__assert_fail@plt+0xa230>
   1b644:	ldr	r0, [fp, #-12]
   1b648:	movw	r1, #0
   1b64c:	sub	r0, r1, r0
   1b650:	movw	r1, #32767	; 0x7fff
   1b654:	sdiv	r0, r1, r0
   1b658:	str	r0, [fp, #-136]	; 0xffffff78
   1b65c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1b660:	ldr	r1, [fp, #-8]
   1b664:	ldr	r2, [r1]
   1b668:	ldr	r1, [r1, #4]
   1b66c:	mvn	r1, r1
   1b670:	mvn	r2, r2
   1b674:	subs	r2, r2, r0
   1b678:	sbcs	r0, r1, r0, asr #31
   1b67c:	str	r2, [fp, #-140]	; 0xffffff74
   1b680:	str	r0, [fp, #-144]	; 0xffffff70
   1b684:	bcs	1b820 <__assert_fail@plt+0xa3f4>
   1b688:	b	1b844 <__assert_fail@plt+0xa418>
   1b68c:	b	1b690 <__assert_fail@plt+0xa264>
   1b690:	b	1b710 <__assert_fail@plt+0xa2e4>
   1b694:	b	1b710 <__assert_fail@plt+0xa2e4>
   1b698:	ldr	r0, [fp, #-12]
   1b69c:	cmn	r0, #1
   1b6a0:	bne	1b710 <__assert_fail@plt+0xa2e4>
   1b6a4:	b	1b6c8 <__assert_fail@plt+0xa29c>
   1b6a8:	ldr	r0, [fp, #-8]
   1b6ac:	ldr	r1, [r0]
   1b6b0:	ldr	r0, [r0, #4]
   1b6b4:	eor	r1, r1, #32768	; 0x8000
   1b6b8:	orr	r0, r1, r0
   1b6bc:	cmp	r0, #0
   1b6c0:	bne	1b820 <__assert_fail@plt+0xa3f4>
   1b6c4:	b	1b844 <__assert_fail@plt+0xa418>
   1b6c8:	ldr	r0, [fp, #-8]
   1b6cc:	ldr	r1, [r0]
   1b6d0:	ldr	r0, [r0, #4]
   1b6d4:	orr	r0, r1, r0
   1b6d8:	cmp	r0, #0
   1b6dc:	beq	1b844 <__assert_fail@plt+0xa418>
   1b6e0:	b	1b6e4 <__assert_fail@plt+0xa2b8>
   1b6e4:	ldr	r0, [fp, #-8]
   1b6e8:	ldr	r1, [r0]
   1b6ec:	ldr	r0, [r0, #4]
   1b6f0:	subs	r1, r1, #1
   1b6f4:	sbc	r0, r0, #0
   1b6f8:	lsr	r1, r1, #15
   1b6fc:	orr	r1, r1, r0, lsl #17
   1b700:	orr	r0, r1, r0, lsr #15
   1b704:	cmp	r0, #0
   1b708:	bne	1b820 <__assert_fail@plt+0xa3f4>
   1b70c:	b	1b844 <__assert_fail@plt+0xa418>
   1b710:	ldr	r0, [fp, #-12]
   1b714:	movw	r1, #32768	; 0x8000
   1b718:	movt	r1, #65535	; 0xffff
   1b71c:	sdiv	r0, r1, r0
   1b720:	ldr	r1, [fp, #-8]
   1b724:	ldr	r2, [r1]
   1b728:	ldr	r1, [r1, #4]
   1b72c:	subs	r2, r0, r2
   1b730:	rscs	r0, r1, r0, asr #31
   1b734:	str	r2, [fp, #-148]	; 0xffffff6c
   1b738:	str	r0, [fp, #-152]	; 0xffffff68
   1b73c:	bcc	1b820 <__assert_fail@plt+0xa3f4>
   1b740:	b	1b844 <__assert_fail@plt+0xa418>
   1b744:	ldr	r0, [fp, #-12]
   1b748:	cmp	r0, #0
   1b74c:	bne	1b754 <__assert_fail@plt+0xa328>
   1b750:	b	1b844 <__assert_fail@plt+0xa418>
   1b754:	mov	r0, #1
   1b758:	cmp	r0, #0
   1b75c:	bne	1b7f0 <__assert_fail@plt+0xa3c4>
   1b760:	b	1b764 <__assert_fail@plt+0xa338>
   1b764:	ldr	r0, [fp, #-8]
   1b768:	ldr	r1, [r0]
   1b76c:	ldr	r0, [r0, #4]
   1b770:	and	r0, r1, r0
   1b774:	cmn	r0, #1
   1b778:	bne	1b7b8 <__assert_fail@plt+0xa38c>
   1b77c:	b	1b780 <__assert_fail@plt+0xa354>
   1b780:	b	1b784 <__assert_fail@plt+0xa358>
   1b784:	ldr	r0, [pc, #4064]	; 1c76c <__assert_fail@plt+0xb340>
   1b788:	ldr	r1, [fp, #-12]
   1b78c:	add	r0, r1, r0
   1b790:	movw	r1, #0
   1b794:	cmp	r1, r0
   1b798:	blt	1b820 <__assert_fail@plt+0xa3f4>
   1b79c:	b	1b844 <__assert_fail@plt+0xa418>
   1b7a0:	ldr	r0, [fp, #-12]
   1b7a4:	sub	r0, r0, #1
   1b7a8:	movw	r1, #32767	; 0x7fff
   1b7ac:	cmp	r1, r0
   1b7b0:	blt	1b820 <__assert_fail@plt+0xa3f4>
   1b7b4:	b	1b844 <__assert_fail@plt+0xa418>
   1b7b8:	ldr	r0, [fp, #-8]
   1b7bc:	ldr	r2, [r0]
   1b7c0:	ldr	r3, [r0, #4]
   1b7c4:	movw	r0, #32768	; 0x8000
   1b7c8:	movt	r0, #65535	; 0xffff
   1b7cc:	mvn	r1, #0
   1b7d0:	bl	1f88c <__assert_fail@plt+0xe460>
   1b7d4:	ldr	r2, [fp, #-12]
   1b7d8:	subs	r0, r0, r2
   1b7dc:	sbcs	r1, r1, r2, asr #31
   1b7e0:	str	r0, [fp, #-156]	; 0xffffff64
   1b7e4:	str	r1, [fp, #-160]	; 0xffffff60
   1b7e8:	bcc	1b820 <__assert_fail@plt+0xa3f4>
   1b7ec:	b	1b844 <__assert_fail@plt+0xa418>
   1b7f0:	ldr	r0, [fp, #-12]
   1b7f4:	movw	r1, #32767	; 0x7fff
   1b7f8:	sdiv	r0, r1, r0
   1b7fc:	ldr	r1, [fp, #-8]
   1b800:	ldr	r2, [r1]
   1b804:	ldr	r1, [r1, #4]
   1b808:	subs	r2, r0, r2
   1b80c:	rscs	r0, r1, r0, asr #31
   1b810:	str	r2, [fp, #-164]	; 0xffffff5c
   1b814:	str	r0, [fp, #-168]	; 0xffffff58
   1b818:	bcs	1b844 <__assert_fail@plt+0xa418>
   1b81c:	b	1b820 <__assert_fail@plt+0xa3f4>
   1b820:	ldr	r0, [fp, #-8]
   1b824:	ldr	r0, [r0]
   1b828:	ldr	r1, [fp, #-12]
   1b82c:	mul	r0, r0, r1
   1b830:	sxth	r0, r0
   1b834:	asr	r1, r0, #31
   1b838:	str	r0, [fp, #-24]	; 0xffffffe8
   1b83c:	str	r1, [fp, #-20]	; 0xffffffec
   1b840:	b	1cb2c <__assert_fail@plt+0xb700>
   1b844:	ldr	r0, [fp, #-8]
   1b848:	ldr	r0, [r0]
   1b84c:	ldr	r1, [fp, #-12]
   1b850:	mul	r0, r0, r1
   1b854:	sxth	r0, r0
   1b858:	asr	r1, r0, #31
   1b85c:	str	r0, [fp, #-24]	; 0xffffffe8
   1b860:	str	r1, [fp, #-20]	; 0xffffffec
   1b864:	b	1cb48 <__assert_fail@plt+0xb71c>
   1b868:	ldr	r0, [fp, #-12]
   1b86c:	cmp	r0, #0
   1b870:	bge	1b9c8 <__assert_fail@plt+0xa59c>
   1b874:	mov	r0, #1
   1b878:	cmp	r0, #0
   1b87c:	bne	1b934 <__assert_fail@plt+0xa508>
   1b880:	b	1b884 <__assert_fail@plt+0xa458>
   1b884:	b	1b888 <__assert_fail@plt+0xa45c>
   1b888:	ldr	r0, [fp, #-8]
   1b88c:	ldr	r1, [r0]
   1b890:	ldr	r0, [r0, #4]
   1b894:	ldr	r2, [fp, #-12]
   1b898:	movw	r3, #65535	; 0xffff
   1b89c:	sdiv	r2, r3, r2
   1b8a0:	subs	r1, r1, r2
   1b8a4:	sbcs	r0, r0, r2, asr #31
   1b8a8:	str	r1, [fp, #-172]	; 0xffffff54
   1b8ac:	str	r0, [fp, #-176]	; 0xffffff50
   1b8b0:	bcc	1baac <__assert_fail@plt+0xa680>
   1b8b4:	b	1bad0 <__assert_fail@plt+0xa6a4>
   1b8b8:	b	1b8bc <__assert_fail@plt+0xa490>
   1b8bc:	ldr	r0, [pc, #2076]	; 1c0e0 <__assert_fail@plt+0xacb4>
   1b8c0:	ldr	r1, [fp, #-12]
   1b8c4:	cmp	r1, r0
   1b8c8:	blt	1b8e0 <__assert_fail@plt+0xa4b4>
   1b8cc:	b	1b8ec <__assert_fail@plt+0xa4c0>
   1b8d0:	ldr	r0, [fp, #-12]
   1b8d4:	movw	r1, #0
   1b8d8:	cmp	r1, r0
   1b8dc:	bge	1b8ec <__assert_fail@plt+0xa4c0>
   1b8e0:	movw	r0, #0
   1b8e4:	str	r0, [fp, #-180]	; 0xffffff4c
   1b8e8:	b	1b904 <__assert_fail@plt+0xa4d8>
   1b8ec:	ldr	r0, [fp, #-12]
   1b8f0:	movw	r1, #0
   1b8f4:	sub	r0, r1, r0
   1b8f8:	movw	r1, #65535	; 0xffff
   1b8fc:	sdiv	r0, r1, r0
   1b900:	str	r0, [fp, #-180]	; 0xffffff4c
   1b904:	ldr	r0, [fp, #-180]	; 0xffffff4c
   1b908:	ldr	r1, [fp, #-8]
   1b90c:	ldr	r2, [r1]
   1b910:	ldr	r1, [r1, #4]
   1b914:	mvn	r1, r1
   1b918:	mvn	r2, r2
   1b91c:	subs	r2, r2, r0
   1b920:	sbcs	r0, r1, r0, asr #31
   1b924:	str	r2, [fp, #-184]	; 0xffffff48
   1b928:	str	r0, [fp, #-188]	; 0xffffff44
   1b92c:	bcs	1baac <__assert_fail@plt+0xa680>
   1b930:	b	1bad0 <__assert_fail@plt+0xa6a4>
   1b934:	b	1b938 <__assert_fail@plt+0xa50c>
   1b938:	b	1b998 <__assert_fail@plt+0xa56c>
   1b93c:	b	1b998 <__assert_fail@plt+0xa56c>
   1b940:	ldr	r0, [fp, #-12]
   1b944:	cmn	r0, #1
   1b948:	bne	1b998 <__assert_fail@plt+0xa56c>
   1b94c:	b	1b96c <__assert_fail@plt+0xa540>
   1b950:	ldr	r0, [fp, #-8]
   1b954:	ldr	r1, [r0]
   1b958:	ldr	r0, [r0, #4]
   1b95c:	orr	r0, r1, r0
   1b960:	cmp	r0, #0
   1b964:	bne	1baac <__assert_fail@plt+0xa680>
   1b968:	b	1bad0 <__assert_fail@plt+0xa6a4>
   1b96c:	ldr	r0, [fp, #-8]
   1b970:	ldr	r1, [r0]
   1b974:	ldr	r0, [r0, #4]
   1b978:	orr	r0, r1, r0
   1b97c:	cmp	r0, #0
   1b980:	beq	1bad0 <__assert_fail@plt+0xa6a4>
   1b984:	b	1b988 <__assert_fail@plt+0xa55c>
   1b988:	mov	r0, #0
   1b98c:	cmp	r0, #0
   1b990:	bne	1baac <__assert_fail@plt+0xa680>
   1b994:	b	1bad0 <__assert_fail@plt+0xa6a4>
   1b998:	ldr	r0, [fp, #-12]
   1b99c:	mov	r1, #0
   1b9a0:	sdiv	r0, r1, r0
   1b9a4:	ldr	r1, [fp, #-8]
   1b9a8:	ldr	r2, [r1]
   1b9ac:	ldr	r1, [r1, #4]
   1b9b0:	subs	r2, r0, r2
   1b9b4:	rscs	r0, r1, r0, asr #31
   1b9b8:	str	r2, [fp, #-192]	; 0xffffff40
   1b9bc:	str	r0, [fp, #-196]	; 0xffffff3c
   1b9c0:	bcc	1baac <__assert_fail@plt+0xa680>
   1b9c4:	b	1bad0 <__assert_fail@plt+0xa6a4>
   1b9c8:	ldr	r0, [fp, #-12]
   1b9cc:	cmp	r0, #0
   1b9d0:	bne	1b9d8 <__assert_fail@plt+0xa5ac>
   1b9d4:	b	1bad0 <__assert_fail@plt+0xa6a4>
   1b9d8:	mov	r0, #1
   1b9dc:	cmp	r0, #0
   1b9e0:	bne	1ba7c <__assert_fail@plt+0xa650>
   1b9e4:	b	1b9e8 <__assert_fail@plt+0xa5bc>
   1b9e8:	b	1b9f0 <__assert_fail@plt+0xa5c4>
   1b9ec:	b	1b9f4 <__assert_fail@plt+0xa5c8>
   1b9f0:	b	1ba44 <__assert_fail@plt+0xa618>
   1b9f4:	ldr	r0, [fp, #-8]
   1b9f8:	ldr	r1, [r0]
   1b9fc:	ldr	r0, [r0, #4]
   1ba00:	and	r0, r1, r0
   1ba04:	cmn	r0, #1
   1ba08:	bne	1ba44 <__assert_fail@plt+0xa618>
   1ba0c:	b	1ba10 <__assert_fail@plt+0xa5e4>
   1ba10:	b	1ba14 <__assert_fail@plt+0xa5e8>
   1ba14:	ldr	r0, [fp, #-12]
   1ba18:	add	r0, r0, #0
   1ba1c:	movw	r1, #0
   1ba20:	cmp	r1, r0
   1ba24:	blt	1baac <__assert_fail@plt+0xa680>
   1ba28:	b	1bad0 <__assert_fail@plt+0xa6a4>
   1ba2c:	ldr	r0, [fp, #-12]
   1ba30:	sub	r0, r0, #1
   1ba34:	mvn	r1, #0
   1ba38:	cmp	r1, r0
   1ba3c:	blt	1baac <__assert_fail@plt+0xa680>
   1ba40:	b	1bad0 <__assert_fail@plt+0xa6a4>
   1ba44:	ldr	r0, [fp, #-8]
   1ba48:	ldr	r2, [r0]
   1ba4c:	ldr	r3, [r0, #4]
   1ba50:	mov	r0, #0
   1ba54:	str	r0, [fp, #-200]	; 0xffffff38
   1ba58:	ldr	r1, [fp, #-200]	; 0xffffff38
   1ba5c:	bl	1f88c <__assert_fail@plt+0xe460>
   1ba60:	ldr	r2, [fp, #-12]
   1ba64:	subs	r0, r0, r2
   1ba68:	sbcs	r1, r1, r2, asr #31
   1ba6c:	str	r0, [fp, #-204]	; 0xffffff34
   1ba70:	str	r1, [fp, #-208]	; 0xffffff30
   1ba74:	bcc	1baac <__assert_fail@plt+0xa680>
   1ba78:	b	1bad0 <__assert_fail@plt+0xa6a4>
   1ba7c:	ldr	r0, [fp, #-12]
   1ba80:	movw	r1, #65535	; 0xffff
   1ba84:	sdiv	r0, r1, r0
   1ba88:	ldr	r1, [fp, #-8]
   1ba8c:	ldr	r2, [r1]
   1ba90:	ldr	r1, [r1, #4]
   1ba94:	subs	r2, r0, r2
   1ba98:	rscs	r0, r1, r0, asr #31
   1ba9c:	str	r2, [fp, #-212]	; 0xffffff2c
   1baa0:	str	r0, [fp, #-216]	; 0xffffff28
   1baa4:	bcs	1bad0 <__assert_fail@plt+0xa6a4>
   1baa8:	b	1baac <__assert_fail@plt+0xa680>
   1baac:	ldr	r0, [fp, #-8]
   1bab0:	ldr	r0, [r0]
   1bab4:	ldr	r1, [fp, #-12]
   1bab8:	mul	r0, r0, r1
   1babc:	uxth	r0, r0
   1bac0:	mov	r1, #0
   1bac4:	str	r1, [fp, #-20]	; 0xffffffec
   1bac8:	str	r0, [fp, #-24]	; 0xffffffe8
   1bacc:	b	1cb2c <__assert_fail@plt+0xb700>
   1bad0:	ldr	r0, [fp, #-8]
   1bad4:	ldr	r0, [r0]
   1bad8:	ldr	r1, [fp, #-12]
   1badc:	mul	r0, r0, r1
   1bae0:	uxth	r0, r0
   1bae4:	mov	r1, #0
   1bae8:	str	r1, [fp, #-20]	; 0xffffffec
   1baec:	str	r0, [fp, #-24]	; 0xffffffe8
   1baf0:	b	1cb48 <__assert_fail@plt+0xb71c>
   1baf4:	b	1c00c <__assert_fail@plt+0xabe0>
   1baf8:	b	1bd88 <__assert_fail@plt+0xa95c>
   1bafc:	ldr	r0, [fp, #-12]
   1bb00:	cmp	r0, #0
   1bb04:	bge	1bc74 <__assert_fail@plt+0xa848>
   1bb08:	mov	r0, #1
   1bb0c:	cmp	r0, #0
   1bb10:	bne	1bbc8 <__assert_fail@plt+0xa79c>
   1bb14:	b	1bb18 <__assert_fail@plt+0xa6ec>
   1bb18:	b	1bb1c <__assert_fail@plt+0xa6f0>
   1bb1c:	ldr	r0, [fp, #-8]
   1bb20:	ldr	r1, [r0]
   1bb24:	ldr	r0, [r0, #4]
   1bb28:	ldr	r2, [fp, #-12]
   1bb2c:	mvn	r3, #-2147483648	; 0x80000000
   1bb30:	sdiv	r2, r3, r2
   1bb34:	subs	r1, r1, r2
   1bb38:	sbcs	r0, r0, r2, asr #31
   1bb3c:	str	r1, [fp, #-220]	; 0xffffff24
   1bb40:	str	r0, [fp, #-224]	; 0xffffff20
   1bb44:	bcc	1bd48 <__assert_fail@plt+0xa91c>
   1bb48:	b	1bd68 <__assert_fail@plt+0xa93c>
   1bb4c:	b	1bb50 <__assert_fail@plt+0xa724>
   1bb50:	ldr	r0, [pc, #1416]	; 1c0e0 <__assert_fail@plt+0xacb4>
   1bb54:	ldr	r1, [fp, #-12]
   1bb58:	cmp	r1, r0
   1bb5c:	blt	1bb74 <__assert_fail@plt+0xa748>
   1bb60:	b	1bb80 <__assert_fail@plt+0xa754>
   1bb64:	ldr	r0, [fp, #-12]
   1bb68:	movw	r1, #0
   1bb6c:	cmp	r1, r0
   1bb70:	bge	1bb80 <__assert_fail@plt+0xa754>
   1bb74:	movw	r0, #0
   1bb78:	str	r0, [fp, #-228]	; 0xffffff1c
   1bb7c:	b	1bb98 <__assert_fail@plt+0xa76c>
   1bb80:	ldr	r0, [pc, #4076]	; 1cb74 <__assert_fail@plt+0xb748>
   1bb84:	ldr	r1, [fp, #-12]
   1bb88:	movw	r2, #0
   1bb8c:	sub	r1, r2, r1
   1bb90:	sdiv	r0, r0, r1
   1bb94:	str	r0, [fp, #-228]	; 0xffffff1c
   1bb98:	ldr	r0, [fp, #-228]	; 0xffffff1c
   1bb9c:	ldr	r1, [fp, #-8]
   1bba0:	ldr	r2, [r1]
   1bba4:	ldr	r1, [r1, #4]
   1bba8:	mvn	r1, r1
   1bbac:	mvn	r2, r2
   1bbb0:	subs	r2, r2, r0
   1bbb4:	sbcs	r0, r1, r0, asr #31
   1bbb8:	str	r2, [fp, #-232]	; 0xffffff18
   1bbbc:	str	r0, [fp, #-236]	; 0xffffff14
   1bbc0:	bcs	1bd48 <__assert_fail@plt+0xa91c>
   1bbc4:	b	1bd68 <__assert_fail@plt+0xa93c>
   1bbc8:	ldr	r0, [fp, #-12]
   1bbcc:	cmn	r0, #1
   1bbd0:	bne	1bc44 <__assert_fail@plt+0xa818>
   1bbd4:	b	1bbf8 <__assert_fail@plt+0xa7cc>
   1bbd8:	ldr	r0, [fp, #-8]
   1bbdc:	ldr	r1, [r0]
   1bbe0:	ldr	r0, [r0, #4]
   1bbe4:	eor	r1, r1, #-2147483648	; 0x80000000
   1bbe8:	orr	r0, r1, r0
   1bbec:	cmp	r0, #0
   1bbf0:	bne	1bd48 <__assert_fail@plt+0xa91c>
   1bbf4:	b	1bd68 <__assert_fail@plt+0xa93c>
   1bbf8:	ldr	r0, [fp, #-8]
   1bbfc:	ldr	r1, [r0]
   1bc00:	ldr	r0, [r0, #4]
   1bc04:	orr	r0, r1, r0
   1bc08:	cmp	r0, #0
   1bc0c:	beq	1bd68 <__assert_fail@plt+0xa93c>
   1bc10:	b	1bc14 <__assert_fail@plt+0xa7e8>
   1bc14:	ldr	r0, [fp, #-8]
   1bc18:	ldr	r1, [r0]
   1bc1c:	ldr	r0, [r0, #4]
   1bc20:	subs	r1, r1, #1
   1bc24:	sbc	r0, r0, #0
   1bc28:	mvn	r2, #-2147483648	; 0x80000000
   1bc2c:	subs	r1, r2, r1
   1bc30:	rscs	r0, r0, #0
   1bc34:	str	r1, [fp, #-240]	; 0xffffff10
   1bc38:	str	r0, [fp, #-244]	; 0xffffff0c
   1bc3c:	bcc	1bd48 <__assert_fail@plt+0xa91c>
   1bc40:	b	1bd68 <__assert_fail@plt+0xa93c>
   1bc44:	ldr	r0, [fp, #-12]
   1bc48:	mov	r1, #-2147483648	; 0x80000000
   1bc4c:	sdiv	r0, r1, r0
   1bc50:	ldr	r1, [fp, #-8]
   1bc54:	ldr	r2, [r1]
   1bc58:	ldr	r1, [r1, #4]
   1bc5c:	subs	r2, r0, r2
   1bc60:	rscs	r0, r1, r0, asr #31
   1bc64:	str	r2, [fp, #-248]	; 0xffffff08
   1bc68:	str	r0, [fp, #-252]	; 0xffffff04
   1bc6c:	bcc	1bd48 <__assert_fail@plt+0xa91c>
   1bc70:	b	1bd68 <__assert_fail@plt+0xa93c>
   1bc74:	ldr	r0, [fp, #-12]
   1bc78:	cmp	r0, #0
   1bc7c:	bne	1bc84 <__assert_fail@plt+0xa858>
   1bc80:	b	1bd68 <__assert_fail@plt+0xa93c>
   1bc84:	mov	r0, #1
   1bc88:	cmp	r0, #0
   1bc8c:	bne	1bd18 <__assert_fail@plt+0xa8ec>
   1bc90:	b	1bc94 <__assert_fail@plt+0xa868>
   1bc94:	ldr	r0, [fp, #-8]
   1bc98:	ldr	r1, [r0]
   1bc9c:	ldr	r0, [r0, #4]
   1bca0:	and	r0, r1, r0
   1bca4:	cmn	r0, #1
   1bca8:	bne	1bce4 <__assert_fail@plt+0xa8b8>
   1bcac:	b	1bcb0 <__assert_fail@plt+0xa884>
   1bcb0:	b	1bcb4 <__assert_fail@plt+0xa888>
   1bcb4:	ldr	r0, [fp, #-12]
   1bcb8:	add	r0, r0, #-2147483648	; 0x80000000
   1bcbc:	movw	r1, #0
   1bcc0:	cmp	r1, r0
   1bcc4:	blt	1bd48 <__assert_fail@plt+0xa91c>
   1bcc8:	b	1bd68 <__assert_fail@plt+0xa93c>
   1bccc:	ldr	r0, [pc, #3744]	; 1cb74 <__assert_fail@plt+0xb748>
   1bcd0:	ldr	r1, [fp, #-12]
   1bcd4:	sub	r1, r1, #1
   1bcd8:	cmp	r0, r1
   1bcdc:	blt	1bd48 <__assert_fail@plt+0xa91c>
   1bce0:	b	1bd68 <__assert_fail@plt+0xa93c>
   1bce4:	ldr	r0, [fp, #-8]
   1bce8:	ldr	r2, [r0]
   1bcec:	ldr	r3, [r0, #4]
   1bcf0:	mov	r0, #-2147483648	; 0x80000000
   1bcf4:	mvn	r1, #0
   1bcf8:	bl	1f88c <__assert_fail@plt+0xe460>
   1bcfc:	ldr	r2, [fp, #-12]
   1bd00:	subs	r0, r0, r2
   1bd04:	sbcs	r1, r1, r2, asr #31
   1bd08:	str	r0, [fp, #-256]	; 0xffffff00
   1bd0c:	str	r1, [fp, #-260]	; 0xfffffefc
   1bd10:	bcc	1bd48 <__assert_fail@plt+0xa91c>
   1bd14:	b	1bd68 <__assert_fail@plt+0xa93c>
   1bd18:	ldr	r0, [fp, #-12]
   1bd1c:	mvn	r1, #-2147483648	; 0x80000000
   1bd20:	sdiv	r0, r1, r0
   1bd24:	ldr	r1, [fp, #-8]
   1bd28:	ldr	r2, [r1]
   1bd2c:	ldr	r1, [r1, #4]
   1bd30:	subs	r2, r0, r2
   1bd34:	rscs	r0, r1, r0, asr #31
   1bd38:	str	r2, [fp, #-264]	; 0xfffffef8
   1bd3c:	str	r0, [fp, #-268]	; 0xfffffef4
   1bd40:	bcs	1bd68 <__assert_fail@plt+0xa93c>
   1bd44:	b	1bd48 <__assert_fail@plt+0xa91c>
   1bd48:	ldr	r0, [fp, #-8]
   1bd4c:	ldr	r0, [r0]
   1bd50:	ldr	r1, [fp, #-12]
   1bd54:	mul	r0, r0, r1
   1bd58:	asr	r1, r0, #31
   1bd5c:	str	r0, [fp, #-24]	; 0xffffffe8
   1bd60:	str	r1, [fp, #-20]	; 0xffffffec
   1bd64:	b	1cb2c <__assert_fail@plt+0xb700>
   1bd68:	ldr	r0, [fp, #-8]
   1bd6c:	ldr	r0, [r0]
   1bd70:	ldr	r1, [fp, #-12]
   1bd74:	mul	r0, r0, r1
   1bd78:	asr	r1, r0, #31
   1bd7c:	str	r0, [fp, #-24]	; 0xffffffe8
   1bd80:	str	r1, [fp, #-20]	; 0xffffffec
   1bd84:	b	1cb48 <__assert_fail@plt+0xb71c>
   1bd88:	ldr	r0, [fp, #-12]
   1bd8c:	cmp	r0, #0
   1bd90:	bge	1bee8 <__assert_fail@plt+0xaabc>
   1bd94:	mov	r0, #1
   1bd98:	cmp	r0, #0
   1bd9c:	bne	1be54 <__assert_fail@plt+0xaa28>
   1bda0:	b	1bda4 <__assert_fail@plt+0xa978>
   1bda4:	b	1bdd8 <__assert_fail@plt+0xa9ac>
   1bda8:	ldr	r0, [fp, #-8]
   1bdac:	ldr	r1, [r0]
   1bdb0:	ldr	r0, [r0, #4]
   1bdb4:	ldr	r2, [fp, #-12]
   1bdb8:	mvn	r3, #0
   1bdbc:	udiv	r2, r3, r2
   1bdc0:	subs	r1, r1, r2
   1bdc4:	sbcs	r0, r0, #0
   1bdc8:	str	r1, [fp, #-272]	; 0xfffffef0
   1bdcc:	str	r0, [fp, #-276]	; 0xfffffeec
   1bdd0:	bcc	1bfcc <__assert_fail@plt+0xaba0>
   1bdd4:	b	1bfec <__assert_fail@plt+0xabc0>
   1bdd8:	b	1bddc <__assert_fail@plt+0xa9b0>
   1bddc:	ldr	r0, [pc, #3468]	; 1cb70 <__assert_fail@plt+0xb744>
   1bde0:	ldr	r1, [fp, #-12]
   1bde4:	cmp	r1, r0
   1bde8:	blt	1be00 <__assert_fail@plt+0xa9d4>
   1bdec:	b	1be0c <__assert_fail@plt+0xa9e0>
   1bdf0:	ldr	r0, [fp, #-12]
   1bdf4:	movw	r1, #0
   1bdf8:	cmp	r1, r0
   1bdfc:	bge	1be0c <__assert_fail@plt+0xa9e0>
   1be00:	movw	r0, #1
   1be04:	str	r0, [fp, #-280]	; 0xfffffee8
   1be08:	b	1be24 <__assert_fail@plt+0xa9f8>
   1be0c:	ldr	r0, [fp, #-12]
   1be10:	movw	r1, #0
   1be14:	sub	r0, r1, r0
   1be18:	mvn	r1, #0
   1be1c:	udiv	r0, r1, r0
   1be20:	str	r0, [fp, #-280]	; 0xfffffee8
   1be24:	ldr	r0, [fp, #-280]	; 0xfffffee8
   1be28:	ldr	r1, [fp, #-8]
   1be2c:	ldr	r2, [r1]
   1be30:	ldr	r1, [r1, #4]
   1be34:	mvn	r1, r1
   1be38:	mvn	r2, r2
   1be3c:	subs	r0, r2, r0
   1be40:	sbcs	r1, r1, #0
   1be44:	str	r0, [sp, #284]	; 0x11c
   1be48:	str	r1, [sp, #280]	; 0x118
   1be4c:	bcs	1bfcc <__assert_fail@plt+0xaba0>
   1be50:	b	1bfec <__assert_fail@plt+0xabc0>
   1be54:	b	1be58 <__assert_fail@plt+0xaa2c>
   1be58:	b	1beb8 <__assert_fail@plt+0xaa8c>
   1be5c:	b	1beb8 <__assert_fail@plt+0xaa8c>
   1be60:	ldr	r0, [fp, #-12]
   1be64:	cmn	r0, #1
   1be68:	bne	1beb8 <__assert_fail@plt+0xaa8c>
   1be6c:	b	1be8c <__assert_fail@plt+0xaa60>
   1be70:	ldr	r0, [fp, #-8]
   1be74:	ldr	r1, [r0]
   1be78:	ldr	r0, [r0, #4]
   1be7c:	orr	r0, r1, r0
   1be80:	cmp	r0, #0
   1be84:	bne	1bfcc <__assert_fail@plt+0xaba0>
   1be88:	b	1bfec <__assert_fail@plt+0xabc0>
   1be8c:	ldr	r0, [fp, #-8]
   1be90:	ldr	r1, [r0]
   1be94:	ldr	r0, [r0, #4]
   1be98:	orr	r0, r1, r0
   1be9c:	cmp	r0, #0
   1bea0:	beq	1bfec <__assert_fail@plt+0xabc0>
   1bea4:	b	1bea8 <__assert_fail@plt+0xaa7c>
   1bea8:	mov	r0, #0
   1beac:	cmp	r0, #0
   1beb0:	bne	1bfcc <__assert_fail@plt+0xaba0>
   1beb4:	b	1bfec <__assert_fail@plt+0xabc0>
   1beb8:	ldr	r0, [fp, #-12]
   1bebc:	mov	r1, #0
   1bec0:	sdiv	r0, r1, r0
   1bec4:	ldr	r1, [fp, #-8]
   1bec8:	ldr	r2, [r1]
   1becc:	ldr	r1, [r1, #4]
   1bed0:	subs	r2, r0, r2
   1bed4:	rscs	r0, r1, r0, asr #31
   1bed8:	str	r2, [sp, #276]	; 0x114
   1bedc:	str	r0, [sp, #272]	; 0x110
   1bee0:	bcc	1bfcc <__assert_fail@plt+0xaba0>
   1bee4:	b	1bfec <__assert_fail@plt+0xabc0>
   1bee8:	ldr	r0, [fp, #-12]
   1beec:	cmp	r0, #0
   1bef0:	bne	1bef8 <__assert_fail@plt+0xaacc>
   1bef4:	b	1bfec <__assert_fail@plt+0xabc0>
   1bef8:	mov	r0, #1
   1befc:	cmp	r0, #0
   1bf00:	bne	1bf9c <__assert_fail@plt+0xab70>
   1bf04:	b	1bf08 <__assert_fail@plt+0xaadc>
   1bf08:	b	1bf10 <__assert_fail@plt+0xaae4>
   1bf0c:	b	1bf14 <__assert_fail@plt+0xaae8>
   1bf10:	b	1bf64 <__assert_fail@plt+0xab38>
   1bf14:	ldr	r0, [fp, #-8]
   1bf18:	ldr	r1, [r0]
   1bf1c:	ldr	r0, [r0, #4]
   1bf20:	and	r0, r1, r0
   1bf24:	cmn	r0, #1
   1bf28:	bne	1bf64 <__assert_fail@plt+0xab38>
   1bf2c:	b	1bf30 <__assert_fail@plt+0xab04>
   1bf30:	b	1bf34 <__assert_fail@plt+0xab08>
   1bf34:	ldr	r0, [fp, #-12]
   1bf38:	add	r0, r0, #0
   1bf3c:	movw	r1, #0
   1bf40:	cmp	r1, r0
   1bf44:	blt	1bfcc <__assert_fail@plt+0xaba0>
   1bf48:	b	1bfec <__assert_fail@plt+0xabc0>
   1bf4c:	ldr	r0, [fp, #-12]
   1bf50:	sub	r0, r0, #1
   1bf54:	mvn	r1, #0
   1bf58:	cmp	r1, r0
   1bf5c:	blt	1bfcc <__assert_fail@plt+0xaba0>
   1bf60:	b	1bfec <__assert_fail@plt+0xabc0>
   1bf64:	ldr	r0, [fp, #-8]
   1bf68:	ldr	r2, [r0]
   1bf6c:	ldr	r3, [r0, #4]
   1bf70:	mov	r0, #0
   1bf74:	str	r0, [sp, #268]	; 0x10c
   1bf78:	ldr	r1, [sp, #268]	; 0x10c
   1bf7c:	bl	1f88c <__assert_fail@plt+0xe460>
   1bf80:	ldr	r2, [fp, #-12]
   1bf84:	subs	r0, r0, r2
   1bf88:	sbcs	r1, r1, r2, asr #31
   1bf8c:	str	r0, [sp, #264]	; 0x108
   1bf90:	str	r1, [sp, #260]	; 0x104
   1bf94:	bcc	1bfcc <__assert_fail@plt+0xaba0>
   1bf98:	b	1bfec <__assert_fail@plt+0xabc0>
   1bf9c:	ldr	r0, [fp, #-12]
   1bfa0:	mvn	r1, #0
   1bfa4:	udiv	r0, r1, r0
   1bfa8:	ldr	r1, [fp, #-8]
   1bfac:	ldr	r2, [r1]
   1bfb0:	ldr	r1, [r1, #4]
   1bfb4:	subs	r0, r0, r2
   1bfb8:	rscs	r1, r1, #0
   1bfbc:	str	r0, [sp, #256]	; 0x100
   1bfc0:	str	r1, [sp, #252]	; 0xfc
   1bfc4:	bcs	1bfec <__assert_fail@plt+0xabc0>
   1bfc8:	b	1bfcc <__assert_fail@plt+0xaba0>
   1bfcc:	ldr	r0, [fp, #-8]
   1bfd0:	ldr	r0, [r0]
   1bfd4:	ldr	r1, [fp, #-12]
   1bfd8:	mul	r0, r0, r1
   1bfdc:	mov	r1, #0
   1bfe0:	str	r1, [fp, #-20]	; 0xffffffec
   1bfe4:	str	r0, [fp, #-24]	; 0xffffffe8
   1bfe8:	b	1cb2c <__assert_fail@plt+0xb700>
   1bfec:	ldr	r0, [fp, #-8]
   1bff0:	ldr	r0, [r0]
   1bff4:	ldr	r1, [fp, #-12]
   1bff8:	mul	r0, r0, r1
   1bffc:	mov	r1, #0
   1c000:	str	r1, [fp, #-20]	; 0xffffffec
   1c004:	str	r0, [fp, #-24]	; 0xffffffe8
   1c008:	b	1cb48 <__assert_fail@plt+0xb71c>
   1c00c:	b	1c528 <__assert_fail@plt+0xb0fc>
   1c010:	b	1c2a4 <__assert_fail@plt+0xae78>
   1c014:	ldr	r0, [fp, #-12]
   1c018:	cmp	r0, #0
   1c01c:	bge	1c190 <__assert_fail@plt+0xad64>
   1c020:	mov	r0, #1
   1c024:	cmp	r0, #0
   1c028:	bne	1c0e4 <__assert_fail@plt+0xacb8>
   1c02c:	b	1c030 <__assert_fail@plt+0xac04>
   1c030:	b	1c034 <__assert_fail@plt+0xac08>
   1c034:	ldr	r0, [fp, #-8]
   1c038:	ldr	r1, [r0]
   1c03c:	ldr	r0, [r0, #4]
   1c040:	ldr	r2, [fp, #-12]
   1c044:	mvn	r3, #-2147483648	; 0x80000000
   1c048:	sdiv	r2, r3, r2
   1c04c:	subs	r1, r1, r2
   1c050:	sbcs	r0, r0, r2, asr #31
   1c054:	str	r1, [sp, #248]	; 0xf8
   1c058:	str	r0, [sp, #244]	; 0xf4
   1c05c:	bcc	1c264 <__assert_fail@plt+0xae38>
   1c060:	b	1c284 <__assert_fail@plt+0xae58>
   1c064:	b	1c068 <__assert_fail@plt+0xac3c>
   1c068:	ldr	r0, [pc, #2816]	; 1cb70 <__assert_fail@plt+0xb744>
   1c06c:	ldr	r1, [fp, #-12]
   1c070:	cmp	r1, r0
   1c074:	blt	1c08c <__assert_fail@plt+0xac60>
   1c078:	b	1c098 <__assert_fail@plt+0xac6c>
   1c07c:	ldr	r0, [fp, #-12]
   1c080:	movw	r1, #0
   1c084:	cmp	r1, r0
   1c088:	bge	1c098 <__assert_fail@plt+0xac6c>
   1c08c:	movw	r0, #0
   1c090:	str	r0, [sp, #240]	; 0xf0
   1c094:	b	1c0b0 <__assert_fail@plt+0xac84>
   1c098:	ldr	r0, [pc, #2772]	; 1cb74 <__assert_fail@plt+0xb748>
   1c09c:	ldr	r1, [fp, #-12]
   1c0a0:	movw	r2, #0
   1c0a4:	sub	r1, r2, r1
   1c0a8:	sdiv	r0, r0, r1
   1c0ac:	str	r0, [sp, #240]	; 0xf0
   1c0b0:	ldr	r0, [sp, #240]	; 0xf0
   1c0b4:	ldr	r1, [fp, #-8]
   1c0b8:	ldr	r2, [r1]
   1c0bc:	ldr	r1, [r1, #4]
   1c0c0:	mvn	r1, r1
   1c0c4:	mvn	r2, r2
   1c0c8:	subs	r2, r2, r0
   1c0cc:	sbcs	r0, r1, r0, asr #31
   1c0d0:	str	r2, [sp, #236]	; 0xec
   1c0d4:	str	r0, [sp, #232]	; 0xe8
   1c0d8:	bcs	1c264 <__assert_fail@plt+0xae38>
   1c0dc:	b	1c284 <__assert_fail@plt+0xae58>
   1c0e0:	andhi	r0, r0, r1
   1c0e4:	ldr	r0, [fp, #-12]
   1c0e8:	cmn	r0, #1
   1c0ec:	bne	1c160 <__assert_fail@plt+0xad34>
   1c0f0:	b	1c114 <__assert_fail@plt+0xace8>
   1c0f4:	ldr	r0, [fp, #-8]
   1c0f8:	ldr	r1, [r0]
   1c0fc:	ldr	r0, [r0, #4]
   1c100:	eor	r1, r1, #-2147483648	; 0x80000000
   1c104:	orr	r0, r1, r0
   1c108:	cmp	r0, #0
   1c10c:	bne	1c264 <__assert_fail@plt+0xae38>
   1c110:	b	1c284 <__assert_fail@plt+0xae58>
   1c114:	ldr	r0, [fp, #-8]
   1c118:	ldr	r1, [r0]
   1c11c:	ldr	r0, [r0, #4]
   1c120:	orr	r0, r1, r0
   1c124:	cmp	r0, #0
   1c128:	beq	1c284 <__assert_fail@plt+0xae58>
   1c12c:	b	1c130 <__assert_fail@plt+0xad04>
   1c130:	ldr	r0, [fp, #-8]
   1c134:	ldr	r1, [r0]
   1c138:	ldr	r0, [r0, #4]
   1c13c:	subs	r1, r1, #1
   1c140:	sbc	r0, r0, #0
   1c144:	mvn	r2, #-2147483648	; 0x80000000
   1c148:	subs	r1, r2, r1
   1c14c:	rscs	r0, r0, #0
   1c150:	str	r1, [sp, #228]	; 0xe4
   1c154:	str	r0, [sp, #224]	; 0xe0
   1c158:	bcc	1c264 <__assert_fail@plt+0xae38>
   1c15c:	b	1c284 <__assert_fail@plt+0xae58>
   1c160:	ldr	r0, [fp, #-12]
   1c164:	mov	r1, #-2147483648	; 0x80000000
   1c168:	sdiv	r0, r1, r0
   1c16c:	ldr	r1, [fp, #-8]
   1c170:	ldr	r2, [r1]
   1c174:	ldr	r1, [r1, #4]
   1c178:	subs	r2, r0, r2
   1c17c:	rscs	r0, r1, r0, asr #31
   1c180:	str	r2, [sp, #220]	; 0xdc
   1c184:	str	r0, [sp, #216]	; 0xd8
   1c188:	bcc	1c264 <__assert_fail@plt+0xae38>
   1c18c:	b	1c284 <__assert_fail@plt+0xae58>
   1c190:	ldr	r0, [fp, #-12]
   1c194:	cmp	r0, #0
   1c198:	bne	1c1a0 <__assert_fail@plt+0xad74>
   1c19c:	b	1c284 <__assert_fail@plt+0xae58>
   1c1a0:	mov	r0, #1
   1c1a4:	cmp	r0, #0
   1c1a8:	bne	1c234 <__assert_fail@plt+0xae08>
   1c1ac:	b	1c1b0 <__assert_fail@plt+0xad84>
   1c1b0:	ldr	r0, [fp, #-8]
   1c1b4:	ldr	r1, [r0]
   1c1b8:	ldr	r0, [r0, #4]
   1c1bc:	and	r0, r1, r0
   1c1c0:	cmn	r0, #1
   1c1c4:	bne	1c200 <__assert_fail@plt+0xadd4>
   1c1c8:	b	1c1cc <__assert_fail@plt+0xada0>
   1c1cc:	b	1c1d0 <__assert_fail@plt+0xada4>
   1c1d0:	ldr	r0, [fp, #-12]
   1c1d4:	add	r0, r0, #-2147483648	; 0x80000000
   1c1d8:	movw	r1, #0
   1c1dc:	cmp	r1, r0
   1c1e0:	blt	1c264 <__assert_fail@plt+0xae38>
   1c1e4:	b	1c284 <__assert_fail@plt+0xae58>
   1c1e8:	ldr	r0, [pc, #2436]	; 1cb74 <__assert_fail@plt+0xb748>
   1c1ec:	ldr	r1, [fp, #-12]
   1c1f0:	sub	r1, r1, #1
   1c1f4:	cmp	r0, r1
   1c1f8:	blt	1c264 <__assert_fail@plt+0xae38>
   1c1fc:	b	1c284 <__assert_fail@plt+0xae58>
   1c200:	ldr	r0, [fp, #-8]
   1c204:	ldr	r2, [r0]
   1c208:	ldr	r3, [r0, #4]
   1c20c:	mov	r0, #-2147483648	; 0x80000000
   1c210:	mvn	r1, #0
   1c214:	bl	1f88c <__assert_fail@plt+0xe460>
   1c218:	ldr	r2, [fp, #-12]
   1c21c:	subs	r0, r0, r2
   1c220:	sbcs	r1, r1, r2, asr #31
   1c224:	str	r0, [sp, #212]	; 0xd4
   1c228:	str	r1, [sp, #208]	; 0xd0
   1c22c:	bcc	1c264 <__assert_fail@plt+0xae38>
   1c230:	b	1c284 <__assert_fail@plt+0xae58>
   1c234:	ldr	r0, [fp, #-12]
   1c238:	mvn	r1, #-2147483648	; 0x80000000
   1c23c:	sdiv	r0, r1, r0
   1c240:	ldr	r1, [fp, #-8]
   1c244:	ldr	r2, [r1]
   1c248:	ldr	r1, [r1, #4]
   1c24c:	subs	r2, r0, r2
   1c250:	rscs	r0, r1, r0, asr #31
   1c254:	str	r2, [sp, #204]	; 0xcc
   1c258:	str	r0, [sp, #200]	; 0xc8
   1c25c:	bcs	1c284 <__assert_fail@plt+0xae58>
   1c260:	b	1c264 <__assert_fail@plt+0xae38>
   1c264:	ldr	r0, [fp, #-8]
   1c268:	ldr	r0, [r0]
   1c26c:	ldr	r1, [fp, #-12]
   1c270:	mul	r0, r0, r1
   1c274:	asr	r1, r0, #31
   1c278:	str	r0, [fp, #-24]	; 0xffffffe8
   1c27c:	str	r1, [fp, #-20]	; 0xffffffec
   1c280:	b	1cb2c <__assert_fail@plt+0xb700>
   1c284:	ldr	r0, [fp, #-8]
   1c288:	ldr	r0, [r0]
   1c28c:	ldr	r1, [fp, #-12]
   1c290:	mul	r0, r0, r1
   1c294:	asr	r1, r0, #31
   1c298:	str	r0, [fp, #-24]	; 0xffffffe8
   1c29c:	str	r1, [fp, #-20]	; 0xffffffec
   1c2a0:	b	1cb48 <__assert_fail@plt+0xb71c>
   1c2a4:	ldr	r0, [fp, #-12]
   1c2a8:	cmp	r0, #0
   1c2ac:	bge	1c404 <__assert_fail@plt+0xafd8>
   1c2b0:	mov	r0, #1
   1c2b4:	cmp	r0, #0
   1c2b8:	bne	1c370 <__assert_fail@plt+0xaf44>
   1c2bc:	b	1c2c0 <__assert_fail@plt+0xae94>
   1c2c0:	b	1c2f4 <__assert_fail@plt+0xaec8>
   1c2c4:	ldr	r0, [fp, #-8]
   1c2c8:	ldr	r1, [r0]
   1c2cc:	ldr	r0, [r0, #4]
   1c2d0:	ldr	r2, [fp, #-12]
   1c2d4:	mvn	r3, #0
   1c2d8:	udiv	r2, r3, r2
   1c2dc:	subs	r1, r1, r2
   1c2e0:	sbcs	r0, r0, #0
   1c2e4:	str	r1, [sp, #196]	; 0xc4
   1c2e8:	str	r0, [sp, #192]	; 0xc0
   1c2ec:	bcc	1c4e8 <__assert_fail@plt+0xb0bc>
   1c2f0:	b	1c508 <__assert_fail@plt+0xb0dc>
   1c2f4:	b	1c2f8 <__assert_fail@plt+0xaecc>
   1c2f8:	ldr	r0, [pc, #2160]	; 1cb70 <__assert_fail@plt+0xb744>
   1c2fc:	ldr	r1, [fp, #-12]
   1c300:	cmp	r1, r0
   1c304:	blt	1c31c <__assert_fail@plt+0xaef0>
   1c308:	b	1c328 <__assert_fail@plt+0xaefc>
   1c30c:	ldr	r0, [fp, #-12]
   1c310:	movw	r1, #0
   1c314:	cmp	r1, r0
   1c318:	bge	1c328 <__assert_fail@plt+0xaefc>
   1c31c:	movw	r0, #1
   1c320:	str	r0, [sp, #188]	; 0xbc
   1c324:	b	1c340 <__assert_fail@plt+0xaf14>
   1c328:	ldr	r0, [fp, #-12]
   1c32c:	movw	r1, #0
   1c330:	sub	r0, r1, r0
   1c334:	mvn	r1, #0
   1c338:	udiv	r0, r1, r0
   1c33c:	str	r0, [sp, #188]	; 0xbc
   1c340:	ldr	r0, [sp, #188]	; 0xbc
   1c344:	ldr	r1, [fp, #-8]
   1c348:	ldr	r2, [r1]
   1c34c:	ldr	r1, [r1, #4]
   1c350:	mvn	r1, r1
   1c354:	mvn	r2, r2
   1c358:	subs	r0, r2, r0
   1c35c:	sbcs	r1, r1, #0
   1c360:	str	r0, [sp, #184]	; 0xb8
   1c364:	str	r1, [sp, #180]	; 0xb4
   1c368:	bcs	1c4e8 <__assert_fail@plt+0xb0bc>
   1c36c:	b	1c508 <__assert_fail@plt+0xb0dc>
   1c370:	b	1c374 <__assert_fail@plt+0xaf48>
   1c374:	b	1c3d4 <__assert_fail@plt+0xafa8>
   1c378:	b	1c3d4 <__assert_fail@plt+0xafa8>
   1c37c:	ldr	r0, [fp, #-12]
   1c380:	cmn	r0, #1
   1c384:	bne	1c3d4 <__assert_fail@plt+0xafa8>
   1c388:	b	1c3a8 <__assert_fail@plt+0xaf7c>
   1c38c:	ldr	r0, [fp, #-8]
   1c390:	ldr	r1, [r0]
   1c394:	ldr	r0, [r0, #4]
   1c398:	orr	r0, r1, r0
   1c39c:	cmp	r0, #0
   1c3a0:	bne	1c4e8 <__assert_fail@plt+0xb0bc>
   1c3a4:	b	1c508 <__assert_fail@plt+0xb0dc>
   1c3a8:	ldr	r0, [fp, #-8]
   1c3ac:	ldr	r1, [r0]
   1c3b0:	ldr	r0, [r0, #4]
   1c3b4:	orr	r0, r1, r0
   1c3b8:	cmp	r0, #0
   1c3bc:	beq	1c508 <__assert_fail@plt+0xb0dc>
   1c3c0:	b	1c3c4 <__assert_fail@plt+0xaf98>
   1c3c4:	mov	r0, #0
   1c3c8:	cmp	r0, #0
   1c3cc:	bne	1c4e8 <__assert_fail@plt+0xb0bc>
   1c3d0:	b	1c508 <__assert_fail@plt+0xb0dc>
   1c3d4:	ldr	r0, [fp, #-12]
   1c3d8:	mov	r1, #0
   1c3dc:	sdiv	r0, r1, r0
   1c3e0:	ldr	r1, [fp, #-8]
   1c3e4:	ldr	r2, [r1]
   1c3e8:	ldr	r1, [r1, #4]
   1c3ec:	subs	r2, r0, r2
   1c3f0:	rscs	r0, r1, r0, asr #31
   1c3f4:	str	r2, [sp, #176]	; 0xb0
   1c3f8:	str	r0, [sp, #172]	; 0xac
   1c3fc:	bcc	1c4e8 <__assert_fail@plt+0xb0bc>
   1c400:	b	1c508 <__assert_fail@plt+0xb0dc>
   1c404:	ldr	r0, [fp, #-12]
   1c408:	cmp	r0, #0
   1c40c:	bne	1c414 <__assert_fail@plt+0xafe8>
   1c410:	b	1c508 <__assert_fail@plt+0xb0dc>
   1c414:	mov	r0, #1
   1c418:	cmp	r0, #0
   1c41c:	bne	1c4b8 <__assert_fail@plt+0xb08c>
   1c420:	b	1c424 <__assert_fail@plt+0xaff8>
   1c424:	b	1c42c <__assert_fail@plt+0xb000>
   1c428:	b	1c430 <__assert_fail@plt+0xb004>
   1c42c:	b	1c480 <__assert_fail@plt+0xb054>
   1c430:	ldr	r0, [fp, #-8]
   1c434:	ldr	r1, [r0]
   1c438:	ldr	r0, [r0, #4]
   1c43c:	and	r0, r1, r0
   1c440:	cmn	r0, #1
   1c444:	bne	1c480 <__assert_fail@plt+0xb054>
   1c448:	b	1c44c <__assert_fail@plt+0xb020>
   1c44c:	b	1c450 <__assert_fail@plt+0xb024>
   1c450:	ldr	r0, [fp, #-12]
   1c454:	add	r0, r0, #0
   1c458:	movw	r1, #0
   1c45c:	cmp	r1, r0
   1c460:	blt	1c4e8 <__assert_fail@plt+0xb0bc>
   1c464:	b	1c508 <__assert_fail@plt+0xb0dc>
   1c468:	ldr	r0, [fp, #-12]
   1c46c:	sub	r0, r0, #1
   1c470:	mvn	r1, #0
   1c474:	cmp	r1, r0
   1c478:	blt	1c4e8 <__assert_fail@plt+0xb0bc>
   1c47c:	b	1c508 <__assert_fail@plt+0xb0dc>
   1c480:	ldr	r0, [fp, #-8]
   1c484:	ldr	r2, [r0]
   1c488:	ldr	r3, [r0, #4]
   1c48c:	mov	r0, #0
   1c490:	str	r0, [sp, #168]	; 0xa8
   1c494:	ldr	r1, [sp, #168]	; 0xa8
   1c498:	bl	1f88c <__assert_fail@plt+0xe460>
   1c49c:	ldr	r2, [fp, #-12]
   1c4a0:	subs	r0, r0, r2
   1c4a4:	sbcs	r1, r1, r2, asr #31
   1c4a8:	str	r0, [sp, #164]	; 0xa4
   1c4ac:	str	r1, [sp, #160]	; 0xa0
   1c4b0:	bcc	1c4e8 <__assert_fail@plt+0xb0bc>
   1c4b4:	b	1c508 <__assert_fail@plt+0xb0dc>
   1c4b8:	ldr	r0, [fp, #-12]
   1c4bc:	mvn	r1, #0
   1c4c0:	udiv	r0, r1, r0
   1c4c4:	ldr	r1, [fp, #-8]
   1c4c8:	ldr	r2, [r1]
   1c4cc:	ldr	r1, [r1, #4]
   1c4d0:	subs	r0, r0, r2
   1c4d4:	rscs	r1, r1, #0
   1c4d8:	str	r0, [sp, #156]	; 0x9c
   1c4dc:	str	r1, [sp, #152]	; 0x98
   1c4e0:	bcs	1c508 <__assert_fail@plt+0xb0dc>
   1c4e4:	b	1c4e8 <__assert_fail@plt+0xb0bc>
   1c4e8:	ldr	r0, [fp, #-8]
   1c4ec:	ldr	r0, [r0]
   1c4f0:	ldr	r1, [fp, #-12]
   1c4f4:	mul	r0, r0, r1
   1c4f8:	mov	r1, #0
   1c4fc:	str	r1, [fp, #-20]	; 0xffffffec
   1c500:	str	r0, [fp, #-24]	; 0xffffffe8
   1c504:	b	1cb2c <__assert_fail@plt+0xb700>
   1c508:	ldr	r0, [fp, #-8]
   1c50c:	ldr	r0, [r0]
   1c510:	ldr	r1, [fp, #-12]
   1c514:	mul	r0, r0, r1
   1c518:	mov	r1, #0
   1c51c:	str	r1, [fp, #-20]	; 0xffffffec
   1c520:	str	r0, [fp, #-24]	; 0xffffffe8
   1c524:	b	1cb48 <__assert_fail@plt+0xb71c>
   1c528:	b	1c844 <__assert_fail@plt+0xb418>
   1c52c:	ldr	r0, [fp, #-12]
   1c530:	cmp	r0, #0
   1c534:	bge	1c6f8 <__assert_fail@plt+0xb2cc>
   1c538:	mov	r0, #1
   1c53c:	cmp	r0, #0
   1c540:	bne	1c640 <__assert_fail@plt+0xb214>
   1c544:	b	1c548 <__assert_fail@plt+0xb11c>
   1c548:	b	1c54c <__assert_fail@plt+0xb120>
   1c54c:	ldr	r0, [fp, #-8]
   1c550:	ldr	r1, [r0]
   1c554:	ldr	r0, [r0, #4]
   1c558:	ldr	r2, [fp, #-12]
   1c55c:	asr	r3, r2, #31
   1c560:	mvn	ip, #0
   1c564:	mvn	lr, #-2147483648	; 0x80000000
   1c568:	str	r0, [sp, #148]	; 0x94
   1c56c:	mov	r0, ip
   1c570:	str	r1, [sp, #144]	; 0x90
   1c574:	mov	r1, lr
   1c578:	bl	1f7b8 <__assert_fail@plt+0xe38c>
   1c57c:	ldr	r2, [sp, #144]	; 0x90
   1c580:	subs	r0, r2, r0
   1c584:	ldr	r2, [sp, #148]	; 0x94
   1c588:	sbcs	r1, r2, r1
   1c58c:	str	r0, [sp, #140]	; 0x8c
   1c590:	str	r1, [sp, #136]	; 0x88
   1c594:	bcc	1c7ec <__assert_fail@plt+0xb3c0>
   1c598:	b	1c818 <__assert_fail@plt+0xb3ec>
   1c59c:	b	1c5a0 <__assert_fail@plt+0xb174>
   1c5a0:	ldr	r0, [pc, #1480]	; 1cb70 <__assert_fail@plt+0xb744>
   1c5a4:	ldr	r1, [fp, #-12]
   1c5a8:	cmp	r1, r0
   1c5ac:	blt	1c5c4 <__assert_fail@plt+0xb198>
   1c5b0:	b	1c5d8 <__assert_fail@plt+0xb1ac>
   1c5b4:	ldr	r0, [fp, #-12]
   1c5b8:	movw	r1, #0
   1c5bc:	cmp	r1, r0
   1c5c0:	bge	1c5d8 <__assert_fail@plt+0xb1ac>
   1c5c4:	mov	r0, #0
   1c5c8:	mvn	r1, #0
   1c5cc:	str	r1, [sp, #132]	; 0x84
   1c5d0:	str	r0, [sp, #128]	; 0x80
   1c5d4:	b	1c60c <__assert_fail@plt+0xb1e0>
   1c5d8:	ldr	r0, [fp, #-12]
   1c5dc:	rsb	r0, r0, #0
   1c5e0:	asr	r3, r0, #31
   1c5e4:	mvn	r1, #0
   1c5e8:	mvn	r2, #-2147483648	; 0x80000000
   1c5ec:	str	r0, [sp, #124]	; 0x7c
   1c5f0:	mov	r0, r1
   1c5f4:	mov	r1, r2
   1c5f8:	ldr	r2, [sp, #124]	; 0x7c
   1c5fc:	bl	1f7b8 <__assert_fail@plt+0xe38c>
   1c600:	str	r0, [sp, #132]	; 0x84
   1c604:	str	r1, [sp, #128]	; 0x80
   1c608:	b	1c60c <__assert_fail@plt+0xb1e0>
   1c60c:	ldr	r0, [sp, #128]	; 0x80
   1c610:	ldr	r1, [sp, #132]	; 0x84
   1c614:	ldr	r2, [fp, #-8]
   1c618:	ldr	r3, [r2]
   1c61c:	ldr	r2, [r2, #4]
   1c620:	mvn	r2, r2
   1c624:	mvn	r3, r3
   1c628:	subs	r1, r3, r1
   1c62c:	sbcs	r0, r2, r0
   1c630:	str	r1, [sp, #120]	; 0x78
   1c634:	str	r0, [sp, #116]	; 0x74
   1c638:	bcs	1c7ec <__assert_fail@plt+0xb3c0>
   1c63c:	b	1c818 <__assert_fail@plt+0xb3ec>
   1c640:	ldr	r0, [fp, #-12]
   1c644:	cmn	r0, #1
   1c648:	bne	1c6b0 <__assert_fail@plt+0xb284>
   1c64c:	b	1c670 <__assert_fail@plt+0xb244>
   1c650:	ldr	r0, [fp, #-8]
   1c654:	ldr	r1, [r0]
   1c658:	ldr	r0, [r0, #4]
   1c65c:	eor	r0, r0, #-2147483648	; 0x80000000
   1c660:	orr	r0, r1, r0
   1c664:	cmp	r0, #0
   1c668:	bne	1c7ec <__assert_fail@plt+0xb3c0>
   1c66c:	b	1c818 <__assert_fail@plt+0xb3ec>
   1c670:	ldr	r0, [fp, #-8]
   1c674:	ldr	r1, [r0]
   1c678:	ldr	r0, [r0, #4]
   1c67c:	orr	r0, r1, r0
   1c680:	cmp	r0, #0
   1c684:	beq	1c818 <__assert_fail@plt+0xb3ec>
   1c688:	b	1c68c <__assert_fail@plt+0xb260>
   1c68c:	ldr	r0, [fp, #-8]
   1c690:	ldr	r1, [r0]
   1c694:	ldr	r0, [r0, #4]
   1c698:	subs	r1, r1, #1
   1c69c:	sbc	r0, r0, #0
   1c6a0:	cmp	r0, #0
   1c6a4:	str	r1, [sp, #112]	; 0x70
   1c6a8:	blt	1c7ec <__assert_fail@plt+0xb3c0>
   1c6ac:	b	1c818 <__assert_fail@plt+0xb3ec>
   1c6b0:	ldr	r0, [fp, #-12]
   1c6b4:	asr	r3, r0, #31
   1c6b8:	mov	r1, #0
   1c6bc:	mov	r2, #-2147483648	; 0x80000000
   1c6c0:	str	r0, [sp, #108]	; 0x6c
   1c6c4:	mov	r0, r1
   1c6c8:	mov	r1, r2
   1c6cc:	ldr	r2, [sp, #108]	; 0x6c
   1c6d0:	bl	1f7b8 <__assert_fail@plt+0xe38c>
   1c6d4:	ldr	r2, [fp, #-8]
   1c6d8:	ldr	r3, [r2]
   1c6dc:	ldr	r2, [r2, #4]
   1c6e0:	subs	r0, r0, r3
   1c6e4:	sbcs	r1, r1, r2
   1c6e8:	str	r0, [sp, #104]	; 0x68
   1c6ec:	str	r1, [sp, #100]	; 0x64
   1c6f0:	bcc	1c7ec <__assert_fail@plt+0xb3c0>
   1c6f4:	b	1c818 <__assert_fail@plt+0xb3ec>
   1c6f8:	ldr	r0, [fp, #-12]
   1c6fc:	cmp	r0, #0
   1c700:	bne	1c708 <__assert_fail@plt+0xb2dc>
   1c704:	b	1c818 <__assert_fail@plt+0xb3ec>
   1c708:	mov	r0, #1
   1c70c:	cmp	r0, #0
   1c710:	bne	1c7a4 <__assert_fail@plt+0xb378>
   1c714:	b	1c718 <__assert_fail@plt+0xb2ec>
   1c718:	ldr	r0, [fp, #-8]
   1c71c:	ldr	r1, [r0]
   1c720:	ldr	r0, [r0, #4]
   1c724:	and	r0, r1, r0
   1c728:	cmn	r0, #1
   1c72c:	bne	1c770 <__assert_fail@plt+0xb344>
   1c730:	b	1c734 <__assert_fail@plt+0xb308>
   1c734:	b	1c738 <__assert_fail@plt+0xb30c>
   1c738:	ldr	r0, [fp, #-12]
   1c73c:	mov	r1, #-2147483648	; 0x80000000
   1c740:	add	r1, r1, r0, asr #31
   1c744:	rsbs	r0, r0, #0
   1c748:	rscs	r1, r1, #0
   1c74c:	str	r0, [sp, #96]	; 0x60
   1c750:	str	r1, [sp, #92]	; 0x5c
   1c754:	blt	1c7ec <__assert_fail@plt+0xb3c0>
   1c758:	b	1c818 <__assert_fail@plt+0xb3ec>
   1c75c:	mov	r0, #0
   1c760:	cmp	r0, #0
   1c764:	bne	1c7ec <__assert_fail@plt+0xb3c0>
   1c768:	b	1c818 <__assert_fail@plt+0xb3ec>
   1c76c:			; <UNDEFINED> instruction: 0xffff8000
   1c770:	ldr	r0, [fp, #-8]
   1c774:	ldr	r2, [r0]
   1c778:	ldr	r3, [r0, #4]
   1c77c:	mov	r0, #0
   1c780:	mov	r1, #-2147483648	; 0x80000000
   1c784:	bl	1f88c <__assert_fail@plt+0xe460>
   1c788:	ldr	r2, [fp, #-12]
   1c78c:	subs	r0, r0, r2
   1c790:	sbcs	r1, r1, r2, asr #31
   1c794:	str	r0, [sp, #88]	; 0x58
   1c798:	str	r1, [sp, #84]	; 0x54
   1c79c:	bcc	1c7ec <__assert_fail@plt+0xb3c0>
   1c7a0:	b	1c818 <__assert_fail@plt+0xb3ec>
   1c7a4:	ldr	r0, [fp, #-12]
   1c7a8:	asr	r3, r0, #31
   1c7ac:	mvn	r1, #0
   1c7b0:	mvn	r2, #-2147483648	; 0x80000000
   1c7b4:	str	r0, [sp, #80]	; 0x50
   1c7b8:	mov	r0, r1
   1c7bc:	mov	r1, r2
   1c7c0:	ldr	r2, [sp, #80]	; 0x50
   1c7c4:	bl	1f7b8 <__assert_fail@plt+0xe38c>
   1c7c8:	ldr	r2, [fp, #-8]
   1c7cc:	ldr	r3, [r2]
   1c7d0:	ldr	r2, [r2, #4]
   1c7d4:	subs	r0, r0, r3
   1c7d8:	sbcs	r1, r1, r2
   1c7dc:	str	r0, [sp, #76]	; 0x4c
   1c7e0:	str	r1, [sp, #72]	; 0x48
   1c7e4:	bcs	1c818 <__assert_fail@plt+0xb3ec>
   1c7e8:	b	1c7ec <__assert_fail@plt+0xb3c0>
   1c7ec:	ldr	r0, [fp, #-8]
   1c7f0:	ldr	r1, [r0]
   1c7f4:	ldr	r0, [r0, #4]
   1c7f8:	ldr	r2, [fp, #-12]
   1c7fc:	asr	r3, r2, #31
   1c800:	umull	ip, lr, r1, r2
   1c804:	mla	r1, r1, r3, lr
   1c808:	mla	r0, r0, r2, r1
   1c80c:	str	ip, [fp, #-24]	; 0xffffffe8
   1c810:	str	r0, [fp, #-20]	; 0xffffffec
   1c814:	b	1cb2c <__assert_fail@plt+0xb700>
   1c818:	ldr	r0, [fp, #-8]
   1c81c:	ldr	r1, [r0]
   1c820:	ldr	r0, [r0, #4]
   1c824:	ldr	r2, [fp, #-12]
   1c828:	asr	r3, r2, #31
   1c82c:	umull	ip, lr, r1, r2
   1c830:	mla	r1, r1, r3, lr
   1c834:	mla	r0, r0, r2, r1
   1c838:	str	ip, [fp, #-24]	; 0xffffffe8
   1c83c:	str	r0, [fp, #-20]	; 0xffffffec
   1c840:	b	1cb48 <__assert_fail@plt+0xb71c>
   1c844:	ldr	r0, [fp, #-12]
   1c848:	cmp	r0, #0
   1c84c:	bge	1c9e0 <__assert_fail@plt+0xb5b4>
   1c850:	mov	r0, #1
   1c854:	cmp	r0, #0
   1c858:	bne	1c94c <__assert_fail@plt+0xb520>
   1c85c:	b	1c860 <__assert_fail@plt+0xb434>
   1c860:	b	1c8b0 <__assert_fail@plt+0xb484>
   1c864:	ldr	r0, [fp, #-8]
   1c868:	ldr	r1, [r0]
   1c86c:	ldr	r0, [r0, #4]
   1c870:	ldr	r2, [fp, #-12]
   1c874:	asr	r3, r2, #31
   1c878:	mvn	ip, #0
   1c87c:	str	r0, [sp, #68]	; 0x44
   1c880:	mov	r0, ip
   1c884:	str	r1, [sp, #64]	; 0x40
   1c888:	mov	r1, ip
   1c88c:	bl	1f88c <__assert_fail@plt+0xe460>
   1c890:	ldr	r2, [sp, #64]	; 0x40
   1c894:	subs	r0, r2, r0
   1c898:	ldr	r2, [sp, #68]	; 0x44
   1c89c:	sbcs	r1, r2, r1
   1c8a0:	str	r0, [sp, #60]	; 0x3c
   1c8a4:	str	r1, [sp, #56]	; 0x38
   1c8a8:	bcc	1cad4 <__assert_fail@plt+0xb6a8>
   1c8ac:	b	1cb00 <__assert_fail@plt+0xb6d4>
   1c8b0:	b	1c8b4 <__assert_fail@plt+0xb488>
   1c8b4:	ldr	r0, [pc, #692]	; 1cb70 <__assert_fail@plt+0xb744>
   1c8b8:	ldr	r1, [fp, #-12]
   1c8bc:	cmp	r1, r0
   1c8c0:	blt	1c8d8 <__assert_fail@plt+0xb4ac>
   1c8c4:	b	1c8ec <__assert_fail@plt+0xb4c0>
   1c8c8:	ldr	r0, [fp, #-12]
   1c8cc:	movw	r1, #0
   1c8d0:	cmp	r1, r0
   1c8d4:	bge	1c8ec <__assert_fail@plt+0xb4c0>
   1c8d8:	mov	r0, #1
   1c8dc:	mvn	r1, #0
   1c8e0:	str	r1, [sp, #52]	; 0x34
   1c8e4:	str	r0, [sp, #48]	; 0x30
   1c8e8:	b	1c918 <__assert_fail@plt+0xb4ec>
   1c8ec:	ldr	r0, [fp, #-12]
   1c8f0:	rsb	r0, r0, #0
   1c8f4:	asr	r3, r0, #31
   1c8f8:	mvn	r1, #0
   1c8fc:	str	r0, [sp, #44]	; 0x2c
   1c900:	mov	r0, r1
   1c904:	ldr	r2, [sp, #44]	; 0x2c
   1c908:	bl	1f88c <__assert_fail@plt+0xe460>
   1c90c:	str	r0, [sp, #52]	; 0x34
   1c910:	str	r1, [sp, #48]	; 0x30
   1c914:	b	1c918 <__assert_fail@plt+0xb4ec>
   1c918:	ldr	r0, [sp, #48]	; 0x30
   1c91c:	ldr	r1, [sp, #52]	; 0x34
   1c920:	ldr	r2, [fp, #-8]
   1c924:	ldr	r3, [r2]
   1c928:	ldr	r2, [r2, #4]
   1c92c:	mvn	r2, r2
   1c930:	mvn	r3, r3
   1c934:	subs	r1, r3, r1
   1c938:	sbcs	r0, r2, r0
   1c93c:	str	r1, [sp, #40]	; 0x28
   1c940:	str	r0, [sp, #36]	; 0x24
   1c944:	bcs	1cad4 <__assert_fail@plt+0xb6a8>
   1c948:	b	1cb00 <__assert_fail@plt+0xb6d4>
   1c94c:	b	1c950 <__assert_fail@plt+0xb524>
   1c950:	b	1c9b0 <__assert_fail@plt+0xb584>
   1c954:	b	1c9b0 <__assert_fail@plt+0xb584>
   1c958:	ldr	r0, [fp, #-12]
   1c95c:	cmn	r0, #1
   1c960:	bne	1c9b0 <__assert_fail@plt+0xb584>
   1c964:	b	1c984 <__assert_fail@plt+0xb558>
   1c968:	ldr	r0, [fp, #-8]
   1c96c:	ldr	r1, [r0]
   1c970:	ldr	r0, [r0, #4]
   1c974:	orr	r0, r1, r0
   1c978:	cmp	r0, #0
   1c97c:	bne	1cad4 <__assert_fail@plt+0xb6a8>
   1c980:	b	1cb00 <__assert_fail@plt+0xb6d4>
   1c984:	ldr	r0, [fp, #-8]
   1c988:	ldr	r1, [r0]
   1c98c:	ldr	r0, [r0, #4]
   1c990:	orr	r0, r1, r0
   1c994:	cmp	r0, #0
   1c998:	beq	1cb00 <__assert_fail@plt+0xb6d4>
   1c99c:	b	1c9a0 <__assert_fail@plt+0xb574>
   1c9a0:	mov	r0, #0
   1c9a4:	cmp	r0, #0
   1c9a8:	bne	1cad4 <__assert_fail@plt+0xb6a8>
   1c9ac:	b	1cb00 <__assert_fail@plt+0xb6d4>
   1c9b0:	ldr	r0, [fp, #-12]
   1c9b4:	mov	r1, #0
   1c9b8:	sdiv	r0, r1, r0
   1c9bc:	ldr	r1, [fp, #-8]
   1c9c0:	ldr	r2, [r1]
   1c9c4:	ldr	r1, [r1, #4]
   1c9c8:	subs	r2, r0, r2
   1c9cc:	rscs	r0, r1, r0, asr #31
   1c9d0:	str	r2, [sp, #32]
   1c9d4:	str	r0, [sp, #28]
   1c9d8:	bcc	1cad4 <__assert_fail@plt+0xb6a8>
   1c9dc:	b	1cb00 <__assert_fail@plt+0xb6d4>
   1c9e0:	ldr	r0, [fp, #-12]
   1c9e4:	cmp	r0, #0
   1c9e8:	bne	1c9f0 <__assert_fail@plt+0xb5c4>
   1c9ec:	b	1cb00 <__assert_fail@plt+0xb6d4>
   1c9f0:	mov	r0, #1
   1c9f4:	cmp	r0, #0
   1c9f8:	bne	1ca94 <__assert_fail@plt+0xb668>
   1c9fc:	b	1ca00 <__assert_fail@plt+0xb5d4>
   1ca00:	b	1ca08 <__assert_fail@plt+0xb5dc>
   1ca04:	b	1ca0c <__assert_fail@plt+0xb5e0>
   1ca08:	b	1ca5c <__assert_fail@plt+0xb630>
   1ca0c:	ldr	r0, [fp, #-8]
   1ca10:	ldr	r1, [r0]
   1ca14:	ldr	r0, [r0, #4]
   1ca18:	and	r0, r1, r0
   1ca1c:	cmn	r0, #1
   1ca20:	bne	1ca5c <__assert_fail@plt+0xb630>
   1ca24:	b	1ca28 <__assert_fail@plt+0xb5fc>
   1ca28:	b	1ca2c <__assert_fail@plt+0xb600>
   1ca2c:	ldr	r0, [fp, #-12]
   1ca30:	add	r0, r0, #0
   1ca34:	movw	r1, #0
   1ca38:	cmp	r1, r0
   1ca3c:	blt	1cad4 <__assert_fail@plt+0xb6a8>
   1ca40:	b	1cb00 <__assert_fail@plt+0xb6d4>
   1ca44:	ldr	r0, [fp, #-12]
   1ca48:	sub	r0, r0, #1
   1ca4c:	mvn	r1, #0
   1ca50:	cmp	r1, r0
   1ca54:	blt	1cad4 <__assert_fail@plt+0xb6a8>
   1ca58:	b	1cb00 <__assert_fail@plt+0xb6d4>
   1ca5c:	ldr	r0, [fp, #-8]
   1ca60:	ldr	r2, [r0]
   1ca64:	ldr	r3, [r0, #4]
   1ca68:	mov	r0, #0
   1ca6c:	str	r0, [sp, #24]
   1ca70:	ldr	r1, [sp, #24]
   1ca74:	bl	1f88c <__assert_fail@plt+0xe460>
   1ca78:	ldr	r2, [fp, #-12]
   1ca7c:	subs	r0, r0, r2
   1ca80:	sbcs	r1, r1, r2, asr #31
   1ca84:	str	r0, [sp, #20]
   1ca88:	str	r1, [sp, #16]
   1ca8c:	bcc	1cad4 <__assert_fail@plt+0xb6a8>
   1ca90:	b	1cb00 <__assert_fail@plt+0xb6d4>
   1ca94:	ldr	r0, [fp, #-12]
   1ca98:	asr	r3, r0, #31
   1ca9c:	mvn	r1, #0
   1caa0:	str	r0, [sp, #12]
   1caa4:	mov	r0, r1
   1caa8:	ldr	r2, [sp, #12]
   1caac:	bl	1f88c <__assert_fail@plt+0xe460>
   1cab0:	ldr	r2, [fp, #-8]
   1cab4:	ldr	r3, [r2]
   1cab8:	ldr	r2, [r2, #4]
   1cabc:	subs	r0, r0, r3
   1cac0:	sbcs	r1, r1, r2
   1cac4:	str	r0, [sp, #8]
   1cac8:	str	r1, [sp, #4]
   1cacc:	bcs	1cb00 <__assert_fail@plt+0xb6d4>
   1cad0:	b	1cad4 <__assert_fail@plt+0xb6a8>
   1cad4:	ldr	r0, [fp, #-8]
   1cad8:	ldr	r1, [r0]
   1cadc:	ldr	r0, [r0, #4]
   1cae0:	ldr	r2, [fp, #-12]
   1cae4:	asr	r3, r2, #31
   1cae8:	umull	ip, lr, r1, r2
   1caec:	mla	r1, r1, r3, lr
   1caf0:	mla	r0, r0, r2, r1
   1caf4:	str	ip, [fp, #-24]	; 0xffffffe8
   1caf8:	str	r0, [fp, #-20]	; 0xffffffec
   1cafc:	b	1cb2c <__assert_fail@plt+0xb700>
   1cb00:	ldr	r0, [fp, #-8]
   1cb04:	ldr	r1, [r0]
   1cb08:	ldr	r0, [r0, #4]
   1cb0c:	ldr	r2, [fp, #-12]
   1cb10:	asr	r3, r2, #31
   1cb14:	umull	ip, lr, r1, r2
   1cb18:	mla	r1, r1, r3, lr
   1cb1c:	mla	r0, r0, r2, r1
   1cb20:	str	ip, [fp, #-24]	; 0xffffffe8
   1cb24:	str	r0, [fp, #-20]	; 0xffffffec
   1cb28:	b	1cb48 <__assert_fail@plt+0xb71c>
   1cb2c:	ldr	r0, [fp, #-8]
   1cb30:	mvn	r1, #0
   1cb34:	str	r1, [r0, #4]
   1cb38:	str	r1, [r0]
   1cb3c:	movw	r0, #1
   1cb40:	str	r0, [fp, #-4]
   1cb44:	b	1cb64 <__assert_fail@plt+0xb738>
   1cb48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cb4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1cb50:	ldr	r2, [fp, #-8]
   1cb54:	str	r1, [r2, #4]
   1cb58:	str	r0, [r2]
   1cb5c:	movw	r0, #0
   1cb60:	str	r0, [fp, #-4]
   1cb64:	ldr	r0, [fp, #-4]
   1cb68:	mov	sp, fp
   1cb6c:	pop	{fp, pc}
   1cb70:	andhi	r0, r0, r1
   1cb74:	svcvc	0x00ffffff
   1cb78:	push	{fp, lr}
   1cb7c:	mov	fp, sp
   1cb80:	sub	sp, sp, #16
   1cb84:	str	r0, [fp, #-4]
   1cb88:	str	r1, [sp, #8]
   1cb8c:	str	r2, [sp, #4]
   1cb90:	movw	r0, #0
   1cb94:	str	r0, [sp]
   1cb98:	ldr	r0, [sp, #4]
   1cb9c:	mvn	r1, #0
   1cba0:	add	r1, r0, r1
   1cba4:	str	r1, [sp, #4]
   1cba8:	cmp	r0, #0
   1cbac:	beq	1cbcc <__assert_fail@plt+0xb7a0>
   1cbb0:	ldr	r0, [fp, #-4]
   1cbb4:	ldr	r1, [sp, #8]
   1cbb8:	bl	1b070 <__assert_fail@plt+0x9c44>
   1cbbc:	ldr	r1, [sp]
   1cbc0:	orr	r0, r1, r0
   1cbc4:	str	r0, [sp]
   1cbc8:	b	1cb98 <__assert_fail@plt+0xb76c>
   1cbcc:	ldr	r0, [sp]
   1cbd0:	mov	sp, fp
   1cbd4:	pop	{fp, pc}
   1cbd8:	push	{fp, lr}
   1cbdc:	mov	fp, sp
   1cbe0:	sub	sp, sp, #16
   1cbe4:	str	r0, [sp, #8]
   1cbe8:	str	r1, [sp, #4]
   1cbec:	ldr	r0, [sp, #8]
   1cbf0:	cmp	r0, #0
   1cbf4:	beq	1cc04 <__assert_fail@plt+0xb7d8>
   1cbf8:	ldr	r0, [sp, #4]
   1cbfc:	cmp	r0, #0
   1cc00:	bne	1cc10 <__assert_fail@plt+0xb7e4>
   1cc04:	movw	r0, #1
   1cc08:	str	r0, [sp, #4]
   1cc0c:	str	r0, [sp, #8]
   1cc10:	ldr	r0, [sp, #4]
   1cc14:	cmp	r0, #0
   1cc18:	beq	1cc4c <__assert_fail@plt+0xb820>
   1cc1c:	ldr	r0, [pc, #76]	; 1cc70 <__assert_fail@plt+0xb844>
   1cc20:	ldr	r1, [sp, #4]
   1cc24:	udiv	r0, r0, r1
   1cc28:	ldr	r1, [sp, #8]
   1cc2c:	cmp	r0, r1
   1cc30:	bcs	1cc4c <__assert_fail@plt+0xb820>
   1cc34:	bl	1130c <__errno_location@plt>
   1cc38:	movw	lr, #12
   1cc3c:	str	lr, [r0]
   1cc40:	movw	r0, #0
   1cc44:	str	r0, [fp, #-4]
   1cc48:	b	1cc64 <__assert_fail@plt+0xb838>
   1cc4c:	ldr	r0, [sp, #8]
   1cc50:	ldr	r1, [sp, #4]
   1cc54:	bl	11120 <calloc@plt>
   1cc58:	str	r0, [sp]
   1cc5c:	ldr	r0, [sp]
   1cc60:	str	r0, [fp, #-4]
   1cc64:	ldr	r0, [fp, #-4]
   1cc68:	mov	sp, fp
   1cc6c:	pop	{fp, pc}
   1cc70:	svcvc	0x00ffffff
   1cc74:	push	{fp, lr}
   1cc78:	mov	fp, sp
   1cc7c:	sub	sp, sp, #16
   1cc80:	str	r0, [sp, #8]
   1cc84:	ldr	r0, [sp, #8]
   1cc88:	cmp	r0, #0
   1cc8c:	bne	1cc98 <__assert_fail@plt+0xb86c>
   1cc90:	movw	r0, #1
   1cc94:	str	r0, [sp, #8]
   1cc98:	ldr	r0, [pc, #64]	; 1cce0 <__assert_fail@plt+0xb8b4>
   1cc9c:	ldr	r1, [sp, #8]
   1cca0:	cmp	r0, r1
   1cca4:	bcs	1ccc0 <__assert_fail@plt+0xb894>
   1cca8:	bl	1130c <__errno_location@plt>
   1ccac:	movw	lr, #12
   1ccb0:	str	lr, [r0]
   1ccb4:	movw	r0, #0
   1ccb8:	str	r0, [fp, #-4]
   1ccbc:	b	1ccd4 <__assert_fail@plt+0xb8a8>
   1ccc0:	ldr	r0, [sp, #8]
   1ccc4:	bl	1127c <malloc@plt>
   1ccc8:	str	r0, [sp, #4]
   1cccc:	ldr	r0, [sp, #4]
   1ccd0:	str	r0, [fp, #-4]
   1ccd4:	ldr	r0, [fp, #-4]
   1ccd8:	mov	sp, fp
   1ccdc:	pop	{fp, pc}
   1cce0:	svcvc	0x00ffffff
   1cce4:	push	{fp, lr}
   1cce8:	mov	fp, sp
   1ccec:	sub	sp, sp, #16
   1ccf0:	str	r0, [sp, #8]
   1ccf4:	str	r1, [sp, #4]
   1ccf8:	ldr	r0, [sp, #8]
   1ccfc:	movw	r1, #0
   1cd00:	cmp	r0, r1
   1cd04:	bne	1cd18 <__assert_fail@plt+0xb8ec>
   1cd08:	ldr	r0, [sp, #4]
   1cd0c:	bl	1cc74 <__assert_fail@plt+0xb848>
   1cd10:	str	r0, [fp, #-4]
   1cd14:	b	1cd78 <__assert_fail@plt+0xb94c>
   1cd18:	ldr	r0, [sp, #4]
   1cd1c:	cmp	r0, #0
   1cd20:	bne	1cd38 <__assert_fail@plt+0xb90c>
   1cd24:	ldr	r0, [sp, #8]
   1cd28:	bl	12794 <__assert_fail@plt+0x1368>
   1cd2c:	movw	r0, #0
   1cd30:	str	r0, [fp, #-4]
   1cd34:	b	1cd78 <__assert_fail@plt+0xb94c>
   1cd38:	ldr	r0, [pc, #68]	; 1cd84 <__assert_fail@plt+0xb958>
   1cd3c:	ldr	r1, [sp, #4]
   1cd40:	cmp	r0, r1
   1cd44:	bcs	1cd60 <__assert_fail@plt+0xb934>
   1cd48:	bl	1130c <__errno_location@plt>
   1cd4c:	movw	lr, #12
   1cd50:	str	lr, [r0]
   1cd54:	movw	r0, #0
   1cd58:	str	r0, [fp, #-4]
   1cd5c:	b	1cd78 <__assert_fail@plt+0xb94c>
   1cd60:	ldr	r0, [sp, #8]
   1cd64:	ldr	r1, [sp, #4]
   1cd68:	bl	111d4 <realloc@plt>
   1cd6c:	str	r0, [sp]
   1cd70:	ldr	r0, [sp]
   1cd74:	str	r0, [fp, #-4]
   1cd78:	ldr	r0, [fp, #-4]
   1cd7c:	mov	sp, fp
   1cd80:	pop	{fp, pc}
   1cd84:	svcvc	0x00ffffff
   1cd88:	push	{fp, lr}
   1cd8c:	mov	fp, sp
   1cd90:	sub	sp, sp, #24
   1cd94:	str	r0, [fp, #-8]
   1cd98:	str	r1, [sp, #12]
   1cd9c:	ldr	r0, [fp, #-8]
   1cda0:	str	r0, [sp, #8]
   1cda4:	ldr	r0, [sp, #12]
   1cda8:	str	r0, [sp, #4]
   1cdac:	ldr	r0, [sp, #8]
   1cdb0:	ldr	r1, [sp, #4]
   1cdb4:	cmp	r0, r1
   1cdb8:	bne	1cdc8 <__assert_fail@plt+0xb99c>
   1cdbc:	movw	r0, #0
   1cdc0:	str	r0, [fp, #-4]
   1cdc4:	b	1ce34 <__assert_fail@plt+0xba08>
   1cdc8:	b	1cdcc <__assert_fail@plt+0xb9a0>
   1cdcc:	ldr	r0, [sp, #8]
   1cdd0:	ldrb	r0, [r0]
   1cdd4:	bl	1f338 <__assert_fail@plt+0xdf0c>
   1cdd8:	strb	r0, [sp, #3]
   1cddc:	ldr	r0, [sp, #4]
   1cde0:	ldrb	r0, [r0]
   1cde4:	bl	1f338 <__assert_fail@plt+0xdf0c>
   1cde8:	strb	r0, [sp, #2]
   1cdec:	ldrb	r0, [sp, #3]
   1cdf0:	cmp	r0, #0
   1cdf4:	bne	1cdfc <__assert_fail@plt+0xb9d0>
   1cdf8:	b	1ce24 <__assert_fail@plt+0xb9f8>
   1cdfc:	ldr	r0, [sp, #8]
   1ce00:	add	r0, r0, #1
   1ce04:	str	r0, [sp, #8]
   1ce08:	ldr	r0, [sp, #4]
   1ce0c:	add	r0, r0, #1
   1ce10:	str	r0, [sp, #4]
   1ce14:	ldrb	r0, [sp, #3]
   1ce18:	ldrb	r1, [sp, #2]
   1ce1c:	cmp	r0, r1
   1ce20:	beq	1cdcc <__assert_fail@plt+0xb9a0>
   1ce24:	ldrb	r0, [sp, #3]
   1ce28:	ldrb	r1, [sp, #2]
   1ce2c:	sub	r0, r0, r1
   1ce30:	str	r0, [fp, #-4]
   1ce34:	ldr	r0, [fp, #-4]
   1ce38:	mov	sp, fp
   1ce3c:	pop	{fp, pc}
   1ce40:	push	{fp, lr}
   1ce44:	mov	fp, sp
   1ce48:	sub	sp, sp, #16
   1ce4c:	str	r0, [sp, #8]
   1ce50:	ldr	r0, [sp, #8]
   1ce54:	bl	11234 <__fpending@plt>
   1ce58:	cmp	r0, #0
   1ce5c:	movw	r0, #0
   1ce60:	movne	r0, #1
   1ce64:	and	r0, r0, #1
   1ce68:	strb	r0, [sp, #7]
   1ce6c:	ldr	r0, [sp, #8]
   1ce70:	bl	11240 <ferror_unlocked@plt>
   1ce74:	cmp	r0, #0
   1ce78:	movw	r0, #0
   1ce7c:	movne	r0, #1
   1ce80:	and	r0, r0, #1
   1ce84:	strb	r0, [sp, #6]
   1ce88:	ldr	r0, [sp, #8]
   1ce8c:	bl	1cf10 <__assert_fail@plt+0xbae4>
   1ce90:	cmp	r0, #0
   1ce94:	movw	r0, #0
   1ce98:	movne	r0, #1
   1ce9c:	and	r0, r0, #1
   1cea0:	strb	r0, [sp, #5]
   1cea4:	ldrb	r0, [sp, #6]
   1cea8:	tst	r0, #1
   1ceac:	bne	1ced8 <__assert_fail@plt+0xbaac>
   1ceb0:	ldrb	r0, [sp, #5]
   1ceb4:	tst	r0, #1
   1ceb8:	beq	1cefc <__assert_fail@plt+0xbad0>
   1cebc:	ldrb	r0, [sp, #7]
   1cec0:	tst	r0, #1
   1cec4:	bne	1ced8 <__assert_fail@plt+0xbaac>
   1cec8:	bl	1130c <__errno_location@plt>
   1cecc:	ldr	r0, [r0]
   1ced0:	cmp	r0, #9
   1ced4:	beq	1cefc <__assert_fail@plt+0xbad0>
   1ced8:	ldrb	r0, [sp, #5]
   1cedc:	tst	r0, #1
   1cee0:	bne	1cef0 <__assert_fail@plt+0xbac4>
   1cee4:	bl	1130c <__errno_location@plt>
   1cee8:	movw	lr, #0
   1ceec:	str	lr, [r0]
   1cef0:	mvn	r0, #0
   1cef4:	str	r0, [fp, #-4]
   1cef8:	b	1cf04 <__assert_fail@plt+0xbad8>
   1cefc:	movw	r0, #0
   1cf00:	str	r0, [fp, #-4]
   1cf04:	ldr	r0, [fp, #-4]
   1cf08:	mov	sp, fp
   1cf0c:	pop	{fp, pc}
   1cf10:	push	{fp, lr}
   1cf14:	mov	fp, sp
   1cf18:	sub	sp, sp, #32
   1cf1c:	str	r0, [fp, #-8]
   1cf20:	movw	r0, #0
   1cf24:	str	r0, [fp, #-12]
   1cf28:	str	r0, [sp, #12]
   1cf2c:	ldr	r0, [fp, #-8]
   1cf30:	bl	11354 <fileno@plt>
   1cf34:	str	r0, [sp, #16]
   1cf38:	ldr	r0, [sp, #16]
   1cf3c:	cmp	r0, #0
   1cf40:	bge	1cf54 <__assert_fail@plt+0xbb28>
   1cf44:	ldr	r0, [fp, #-8]
   1cf48:	bl	1136c <fclose@plt>
   1cf4c:	str	r0, [fp, #-4]
   1cf50:	b	1cff0 <__assert_fail@plt+0xbbc4>
   1cf54:	ldr	r0, [fp, #-8]
   1cf58:	bl	11294 <__freading@plt>
   1cf5c:	cmp	r0, #0
   1cf60:	beq	1cf98 <__assert_fail@plt+0xbb6c>
   1cf64:	ldr	r0, [fp, #-8]
   1cf68:	bl	11354 <fileno@plt>
   1cf6c:	mov	lr, sp
   1cf70:	mov	r1, #1
   1cf74:	str	r1, [lr]
   1cf78:	mov	r1, #0
   1cf7c:	mov	r2, r1
   1cf80:	mov	r3, r1
   1cf84:	bl	11210 <lseek64@plt>
   1cf88:	and	r0, r0, r1
   1cf8c:	cmn	r0, #1
   1cf90:	beq	1cfb4 <__assert_fail@plt+0xbb88>
   1cf94:	b	1cf98 <__assert_fail@plt+0xbb6c>
   1cf98:	ldr	r0, [fp, #-8]
   1cf9c:	bl	1cffc <__assert_fail@plt+0xbbd0>
   1cfa0:	cmp	r0, #0
   1cfa4:	beq	1cfb4 <__assert_fail@plt+0xbb88>
   1cfa8:	bl	1130c <__errno_location@plt>
   1cfac:	ldr	r0, [r0]
   1cfb0:	str	r0, [fp, #-12]
   1cfb4:	ldr	r0, [fp, #-8]
   1cfb8:	bl	1136c <fclose@plt>
   1cfbc:	str	r0, [sp, #12]
   1cfc0:	ldr	r0, [fp, #-12]
   1cfc4:	cmp	r0, #0
   1cfc8:	beq	1cfe8 <__assert_fail@plt+0xbbbc>
   1cfcc:	ldr	r0, [fp, #-12]
   1cfd0:	str	r0, [sp, #8]
   1cfd4:	bl	1130c <__errno_location@plt>
   1cfd8:	ldr	lr, [sp, #8]
   1cfdc:	str	lr, [r0]
   1cfe0:	mvn	r0, #0
   1cfe4:	str	r0, [sp, #12]
   1cfe8:	ldr	r0, [sp, #12]
   1cfec:	str	r0, [fp, #-4]
   1cff0:	ldr	r0, [fp, #-4]
   1cff4:	mov	sp, fp
   1cff8:	pop	{fp, pc}
   1cffc:	push	{fp, lr}
   1d000:	mov	fp, sp
   1d004:	sub	sp, sp, #8
   1d008:	str	r0, [sp]
   1d00c:	ldr	r0, [sp]
   1d010:	movw	r1, #0
   1d014:	cmp	r0, r1
   1d018:	beq	1d02c <__assert_fail@plt+0xbc00>
   1d01c:	ldr	r0, [sp]
   1d020:	bl	11294 <__freading@plt>
   1d024:	cmp	r0, #0
   1d028:	bne	1d03c <__assert_fail@plt+0xbc10>
   1d02c:	ldr	r0, [sp]
   1d030:	bl	11180 <fflush@plt>
   1d034:	str	r0, [sp, #4]
   1d038:	b	1d050 <__assert_fail@plt+0xbc24>
   1d03c:	ldr	r0, [sp]
   1d040:	bl	1d05c <__assert_fail@plt+0xbc30>
   1d044:	ldr	r0, [sp]
   1d048:	bl	11180 <fflush@plt>
   1d04c:	str	r0, [sp, #4]
   1d050:	ldr	r0, [sp, #4]
   1d054:	mov	sp, fp
   1d058:	pop	{fp, pc}
   1d05c:	push	{fp, lr}
   1d060:	mov	fp, sp
   1d064:	sub	sp, sp, #16
   1d068:	str	r0, [fp, #-4]
   1d06c:	ldr	r0, [fp, #-4]
   1d070:	ldr	r0, [r0]
   1d074:	and	r0, r0, #256	; 0x100
   1d078:	cmp	r0, #0
   1d07c:	beq	1d0a4 <__assert_fail@plt+0xbc78>
   1d080:	ldr	r0, [fp, #-4]
   1d084:	mov	r1, sp
   1d088:	mov	r2, #1
   1d08c:	str	r2, [r1]
   1d090:	mov	r1, #0
   1d094:	mov	r2, r1
   1d098:	mov	r3, r1
   1d09c:	bl	1d0ac <__assert_fail@plt+0xbc80>
   1d0a0:	str	r0, [sp, #8]
   1d0a4:	mov	sp, fp
   1d0a8:	pop	{fp, pc}
   1d0ac:	push	{fp, lr}
   1d0b0:	mov	fp, sp
   1d0b4:	sub	sp, sp, #32
   1d0b8:	ldr	r1, [fp, #8]
   1d0bc:	str	r0, [fp, #-8]
   1d0c0:	str	r3, [sp, #20]
   1d0c4:	str	r2, [sp, #16]
   1d0c8:	ldr	r0, [fp, #-8]
   1d0cc:	ldr	r0, [r0, #8]
   1d0d0:	ldr	r2, [fp, #-8]
   1d0d4:	ldr	r2, [r2, #4]
   1d0d8:	cmp	r0, r2
   1d0dc:	str	r1, [sp, #4]
   1d0e0:	bne	1d18c <__assert_fail@plt+0xbd60>
   1d0e4:	ldr	r0, [fp, #-8]
   1d0e8:	ldr	r0, [r0, #20]
   1d0ec:	ldr	r1, [fp, #-8]
   1d0f0:	ldr	r1, [r1, #16]
   1d0f4:	cmp	r0, r1
   1d0f8:	bne	1d18c <__assert_fail@plt+0xbd60>
   1d0fc:	ldr	r0, [fp, #-8]
   1d100:	ldr	r0, [r0, #36]	; 0x24
   1d104:	movw	r1, #0
   1d108:	cmp	r0, r1
   1d10c:	bne	1d18c <__assert_fail@plt+0xbd60>
   1d110:	ldr	r0, [fp, #-8]
   1d114:	bl	11354 <fileno@plt>
   1d118:	ldr	r2, [sp, #16]
   1d11c:	ldr	r3, [sp, #20]
   1d120:	ldr	lr, [fp, #8]
   1d124:	mov	r1, sp
   1d128:	str	lr, [r1]
   1d12c:	bl	11210 <lseek64@plt>
   1d130:	str	r1, [sp, #12]
   1d134:	str	r0, [sp, #8]
   1d138:	ldr	r0, [sp, #8]
   1d13c:	ldr	r1, [sp, #12]
   1d140:	and	r0, r0, r1
   1d144:	cmn	r0, #1
   1d148:	bne	1d15c <__assert_fail@plt+0xbd30>
   1d14c:	b	1d150 <__assert_fail@plt+0xbd24>
   1d150:	mvn	r0, #0
   1d154:	str	r0, [fp, #-4]
   1d158:	b	1d1ac <__assert_fail@plt+0xbd80>
   1d15c:	ldr	r0, [fp, #-8]
   1d160:	ldr	r1, [r0]
   1d164:	bic	r1, r1, #16
   1d168:	str	r1, [r0]
   1d16c:	ldr	r0, [sp, #8]
   1d170:	ldr	r1, [sp, #12]
   1d174:	ldr	r2, [fp, #-8]
   1d178:	str	r1, [r2, #84]	; 0x54
   1d17c:	str	r0, [r2, #80]	; 0x50
   1d180:	movw	r0, #0
   1d184:	str	r0, [fp, #-4]
   1d188:	b	1d1ac <__assert_fail@plt+0xbd80>
   1d18c:	ldr	r0, [fp, #-8]
   1d190:	ldr	r2, [sp, #16]
   1d194:	ldr	r3, [sp, #20]
   1d198:	ldr	r1, [fp, #8]
   1d19c:	mov	ip, sp
   1d1a0:	str	r1, [ip]
   1d1a4:	bl	11378 <fseeko64@plt>
   1d1a8:	str	r0, [fp, #-4]
   1d1ac:	ldr	r0, [fp, #-4]
   1d1b0:	mov	sp, fp
   1d1b4:	pop	{fp, pc}
   1d1b8:	push	{fp, lr}
   1d1bc:	mov	fp, sp
   1d1c0:	bl	1130c <__errno_location@plt>
   1d1c4:	movw	lr, #12
   1d1c8:	str	lr, [r0]
   1d1cc:	movw	r0, #0
   1d1d0:	pop	{fp, pc}
   1d1d4:	push	{fp, lr}
   1d1d8:	mov	fp, sp
   1d1dc:	sub	sp, sp, #8
   1d1e0:	str	r0, [sp, #4]
   1d1e4:	ldr	r0, [sp, #4]
   1d1e8:	cmn	r0, #1
   1d1ec:	bhi	1d200 <__assert_fail@plt+0xbdd4>
   1d1f0:	ldr	r0, [sp, #4]
   1d1f4:	bl	1cc74 <__assert_fail@plt+0xb848>
   1d1f8:	str	r0, [sp]
   1d1fc:	b	1d208 <__assert_fail@plt+0xbddc>
   1d200:	bl	1d1b8 <__assert_fail@plt+0xbd8c>
   1d204:	str	r0, [sp]
   1d208:	ldr	r0, [sp]
   1d20c:	mov	sp, fp
   1d210:	pop	{fp, pc}
   1d214:	push	{fp, lr}
   1d218:	mov	fp, sp
   1d21c:	sub	sp, sp, #16
   1d220:	str	r0, [fp, #-4]
   1d224:	str	r1, [sp, #8]
   1d228:	ldr	r0, [sp, #8]
   1d22c:	cmn	r0, #1
   1d230:	bhi	1d268 <__assert_fail@plt+0xbe3c>
   1d234:	ldr	r0, [fp, #-4]
   1d238:	ldr	r1, [sp, #8]
   1d23c:	ldr	r2, [sp, #8]
   1d240:	cmp	r2, #0
   1d244:	movw	r2, #0
   1d248:	movne	r2, #1
   1d24c:	mvn	r3, #0
   1d250:	eor	r2, r2, r3
   1d254:	and	r2, r2, #1
   1d258:	orr	r1, r1, r2
   1d25c:	bl	1cce4 <__assert_fail@plt+0xb8b8>
   1d260:	str	r0, [sp, #4]
   1d264:	b	1d270 <__assert_fail@plt+0xbe44>
   1d268:	bl	1d1b8 <__assert_fail@plt+0xbd8c>
   1d26c:	str	r0, [sp, #4]
   1d270:	ldr	r0, [sp, #4]
   1d274:	mov	sp, fp
   1d278:	pop	{fp, pc}
   1d27c:	push	{fp, lr}
   1d280:	mov	fp, sp
   1d284:	sub	sp, sp, #16
   1d288:	str	r0, [sp, #8]
   1d28c:	str	r1, [sp, #4]
   1d290:	ldr	r0, [sp, #8]
   1d294:	mvn	r1, #0
   1d298:	cmp	r1, r0
   1d29c:	bcs	1d2c0 <__assert_fail@plt+0xbe94>
   1d2a0:	ldr	r0, [sp, #4]
   1d2a4:	cmp	r0, #0
   1d2a8:	beq	1d2b8 <__assert_fail@plt+0xbe8c>
   1d2ac:	bl	1d1b8 <__assert_fail@plt+0xbd8c>
   1d2b0:	str	r0, [fp, #-4]
   1d2b4:	b	1d300 <__assert_fail@plt+0xbed4>
   1d2b8:	movw	r0, #0
   1d2bc:	str	r0, [sp, #8]
   1d2c0:	ldr	r0, [sp, #4]
   1d2c4:	mvn	r1, #0
   1d2c8:	cmp	r1, r0
   1d2cc:	bcs	1d2f0 <__assert_fail@plt+0xbec4>
   1d2d0:	ldr	r0, [sp, #8]
   1d2d4:	cmp	r0, #0
   1d2d8:	beq	1d2e8 <__assert_fail@plt+0xbebc>
   1d2dc:	bl	1d1b8 <__assert_fail@plt+0xbd8c>
   1d2e0:	str	r0, [fp, #-4]
   1d2e4:	b	1d300 <__assert_fail@plt+0xbed4>
   1d2e8:	movw	r0, #0
   1d2ec:	str	r0, [sp, #4]
   1d2f0:	ldr	r0, [sp, #8]
   1d2f4:	ldr	r1, [sp, #4]
   1d2f8:	bl	1cbd8 <__assert_fail@plt+0xb7ac>
   1d2fc:	str	r0, [fp, #-4]
   1d300:	ldr	r0, [fp, #-4]
   1d304:	mov	sp, fp
   1d308:	pop	{fp, pc}
   1d30c:	push	{fp, lr}
   1d310:	mov	fp, sp
   1d314:	sub	sp, sp, #16
   1d318:	str	r0, [fp, #-4]
   1d31c:	str	r1, [sp, #8]
   1d320:	str	r2, [sp, #4]
   1d324:	ldr	r0, [sp, #8]
   1d328:	cmp	r0, #0
   1d32c:	beq	1d33c <__assert_fail@plt+0xbf10>
   1d330:	ldr	r0, [sp, #4]
   1d334:	cmp	r0, #0
   1d338:	bne	1d348 <__assert_fail@plt+0xbf1c>
   1d33c:	movw	r0, #1
   1d340:	str	r0, [sp, #4]
   1d344:	str	r0, [sp, #8]
   1d348:	ldr	r0, [sp, #8]
   1d34c:	cmn	r0, #1
   1d350:	bhi	1d378 <__assert_fail@plt+0xbf4c>
   1d354:	ldr	r0, [sp, #4]
   1d358:	cmn	r0, #1
   1d35c:	bhi	1d378 <__assert_fail@plt+0xbf4c>
   1d360:	ldr	r0, [fp, #-4]
   1d364:	ldr	r1, [sp, #8]
   1d368:	ldr	r2, [sp, #4]
   1d36c:	bl	1d9f0 <__assert_fail@plt+0xc5c4>
   1d370:	str	r0, [sp]
   1d374:	b	1d380 <__assert_fail@plt+0xbf54>
   1d378:	bl	1d1b8 <__assert_fail@plt+0xbd8c>
   1d37c:	str	r0, [sp]
   1d380:	ldr	r0, [sp]
   1d384:	mov	sp, fp
   1d388:	pop	{fp, pc}
   1d38c:	push	{fp, lr}
   1d390:	mov	fp, sp
   1d394:	sub	sp, sp, #32
   1d398:	str	r0, [fp, #-8]
   1d39c:	str	r1, [fp, #-4]
   1d3a0:	str	r2, [fp, #-12]
   1d3a4:	ldr	r0, [fp, #-12]
   1d3a8:	add	r0, r0, #20
   1d3ac:	str	r0, [sp, #16]
   1d3b0:	ldr	r0, [sp, #16]
   1d3b4:	mov	r1, #0
   1d3b8:	strb	r1, [r0]
   1d3bc:	mov	r0, #1
   1d3c0:	cmp	r0, #0
   1d3c4:	bne	1d454 <__assert_fail@plt+0xc028>
   1d3c8:	b	1d3cc <__assert_fail@plt+0xbfa0>
   1d3cc:	b	1d3d0 <__assert_fail@plt+0xbfa4>
   1d3d0:	ldr	r0, [fp, #-8]
   1d3d4:	ldr	r1, [fp, #-4]
   1d3d8:	mov	r2, #10
   1d3dc:	mov	r3, #0
   1d3e0:	bl	1f88c <__assert_fail@plt+0xe460>
   1d3e4:	rsb	r2, r2, #48	; 0x30
   1d3e8:	ldr	r3, [sp, #16]
   1d3ec:	mvn	lr, #0
   1d3f0:	add	ip, r3, lr
   1d3f4:	str	ip, [sp, #16]
   1d3f8:	add	r3, r3, lr
   1d3fc:	strb	r2, [r3]
   1d400:	str	r0, [sp, #12]
   1d404:	str	r1, [sp, #8]
   1d408:	ldr	r0, [fp, #-8]
   1d40c:	ldr	r1, [fp, #-4]
   1d410:	mov	r2, #10
   1d414:	mov	r3, #0
   1d418:	bl	1f88c <__assert_fail@plt+0xe460>
   1d41c:	str	r1, [fp, #-4]
   1d420:	str	r0, [fp, #-8]
   1d424:	orr	r0, r0, r1
   1d428:	cmp	r0, #0
   1d42c:	bne	1d3d0 <__assert_fail@plt+0xbfa4>
   1d430:	b	1d434 <__assert_fail@plt+0xc008>
   1d434:	ldr	r0, [sp, #16]
   1d438:	mvn	r1, #0
   1d43c:	add	r2, r0, r1
   1d440:	str	r2, [sp, #16]
   1d444:	add	r0, r0, r1
   1d448:	movw	r1, #45	; 0x2d
   1d44c:	strb	r1, [r0]
   1d450:	b	1d4c0 <__assert_fail@plt+0xc094>
   1d454:	b	1d458 <__assert_fail@plt+0xc02c>
   1d458:	ldr	r0, [fp, #-8]
   1d45c:	ldr	r1, [fp, #-4]
   1d460:	mov	r2, #10
   1d464:	mov	r3, #0
   1d468:	bl	1f88c <__assert_fail@plt+0xe460>
   1d46c:	orr	r2, r2, #48	; 0x30
   1d470:	ldr	r3, [sp, #16]
   1d474:	mvn	lr, #0
   1d478:	add	ip, r3, lr
   1d47c:	str	ip, [sp, #16]
   1d480:	add	r3, r3, lr
   1d484:	strb	r2, [r3]
   1d488:	str	r0, [sp, #4]
   1d48c:	str	r1, [sp]
   1d490:	ldr	r0, [fp, #-8]
   1d494:	ldr	r1, [fp, #-4]
   1d498:	mov	r2, #10
   1d49c:	mov	r3, #0
   1d4a0:	bl	1f88c <__assert_fail@plt+0xe460>
   1d4a4:	str	r1, [fp, #-4]
   1d4a8:	str	r0, [fp, #-8]
   1d4ac:	orr	r0, r0, r1
   1d4b0:	cmp	r0, #0
   1d4b4:	bne	1d458 <__assert_fail@plt+0xc02c>
   1d4b8:	b	1d4bc <__assert_fail@plt+0xc090>
   1d4bc:	b	1d4c0 <__assert_fail@plt+0xc094>
   1d4c0:	ldr	r0, [sp, #16]
   1d4c4:	mov	sp, fp
   1d4c8:	pop	{fp, pc}
   1d4cc:	push	{fp, lr}
   1d4d0:	mov	fp, sp
   1d4d4:	sub	sp, sp, #8
   1d4d8:	movw	r0, #14
   1d4dc:	bl	113b4 <nl_langinfo@plt>
   1d4e0:	str	r0, [sp, #4]
   1d4e4:	ldr	r0, [sp, #4]
   1d4e8:	movw	lr, #0
   1d4ec:	cmp	r0, lr
   1d4f0:	bne	1d500 <__assert_fail@plt+0xc0d4>
   1d4f4:	movw	r0, #64288	; 0xfb20
   1d4f8:	movt	r0, #1
   1d4fc:	str	r0, [sp, #4]
   1d500:	ldr	r0, [sp, #4]
   1d504:	ldrb	r0, [r0]
   1d508:	cmp	r0, #0
   1d50c:	bne	1d51c <__assert_fail@plt+0xc0f0>
   1d510:	movw	r0, #1423	; 0x58f
   1d514:	movt	r0, #2
   1d518:	str	r0, [sp, #4]
   1d51c:	ldr	r0, [sp, #4]
   1d520:	mov	sp, fp
   1d524:	pop	{fp, pc}
   1d528:	push	{fp, lr}
   1d52c:	mov	fp, sp
   1d530:	sub	sp, sp, #32
   1d534:	str	r0, [fp, #-8]
   1d538:	str	r1, [fp, #-12]
   1d53c:	str	r2, [sp, #16]
   1d540:	str	r3, [sp, #12]
   1d544:	ldr	r0, [fp, #-8]
   1d548:	movw	r1, #0
   1d54c:	cmp	r0, r1
   1d550:	bne	1d55c <__assert_fail@plt+0xc130>
   1d554:	add	r0, sp, #4
   1d558:	str	r0, [fp, #-8]
   1d55c:	ldr	r0, [fp, #-8]
   1d560:	ldr	r1, [fp, #-12]
   1d564:	ldr	r2, [sp, #16]
   1d568:	ldr	r3, [sp, #12]
   1d56c:	bl	1124c <mbrtowc@plt>
   1d570:	str	r0, [sp, #8]
   1d574:	ldr	r0, [sp, #8]
   1d578:	mvn	r1, #1
   1d57c:	cmp	r1, r0
   1d580:	bhi	1d5c4 <__assert_fail@plt+0xc198>
   1d584:	ldr	r0, [sp, #16]
   1d588:	cmp	r0, #0
   1d58c:	beq	1d5c4 <__assert_fail@plt+0xc198>
   1d590:	movw	r0, #0
   1d594:	bl	1f5c0 <__assert_fail@plt+0xe194>
   1d598:	tst	r0, #1
   1d59c:	bne	1d5c4 <__assert_fail@plt+0xc198>
   1d5a0:	ldr	r0, [fp, #-12]
   1d5a4:	ldrb	r0, [r0]
   1d5a8:	strb	r0, [sp, #3]
   1d5ac:	ldrb	r0, [sp, #3]
   1d5b0:	ldr	r1, [fp, #-8]
   1d5b4:	str	r0, [r1]
   1d5b8:	movw	r0, #1
   1d5bc:	str	r0, [fp, #-4]
   1d5c0:	b	1d5cc <__assert_fail@plt+0xc1a0>
   1d5c4:	ldr	r0, [sp, #8]
   1d5c8:	str	r0, [fp, #-4]
   1d5cc:	ldr	r0, [fp, #-4]
   1d5d0:	mov	sp, fp
   1d5d4:	pop	{fp, pc}
   1d5d8:	push	{fp, lr}
   1d5dc:	mov	fp, sp
   1d5e0:	sub	sp, sp, #64	; 0x40
   1d5e4:	str	r0, [fp, #-8]
   1d5e8:	str	r1, [fp, #-12]
   1d5ec:	str	r2, [fp, #-16]
   1d5f0:	ldr	r0, [fp, #-8]
   1d5f4:	movw	r1, #0
   1d5f8:	cmp	r0, r1
   1d5fc:	beq	1d6e4 <__assert_fail@plt+0xc2b8>
   1d600:	movw	r0, #10
   1d604:	str	r0, [fp, #-20]	; 0xffffffec
   1d608:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d60c:	movw	r0, #0
   1d610:	bl	1d990 <__assert_fail@plt+0xc564>
   1d614:	str	r0, [fp, #-28]	; 0xffffffe4
   1d618:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d61c:	movw	r1, #0
   1d620:	cmp	r0, r1
   1d624:	bne	1d634 <__assert_fail@plt+0xc208>
   1d628:	mvn	r0, #0
   1d62c:	str	r0, [fp, #-4]
   1d630:	b	1d984 <__assert_fail@plt+0xc558>
   1d634:	b	1d638 <__assert_fail@plt+0xc20c>
   1d638:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d63c:	str	r0, [sp, #28]
   1d640:	ldr	r0, [fp, #-8]
   1d644:	ldr	r1, [fp, #-12]
   1d648:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d64c:	sub	r3, fp, #20
   1d650:	bl	11324 <getgrouplist@plt>
   1d654:	str	r0, [fp, #-24]	; 0xffffffe8
   1d658:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d65c:	cmp	r0, #0
   1d660:	bge	1d680 <__assert_fail@plt+0xc254>
   1d664:	ldr	r0, [sp, #28]
   1d668:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d66c:	cmp	r0, r1
   1d670:	bne	1d680 <__assert_fail@plt+0xc254>
   1d674:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d678:	lsl	r0, r0, #1
   1d67c:	str	r0, [fp, #-20]	; 0xffffffec
   1d680:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d684:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d688:	bl	1d990 <__assert_fail@plt+0xc564>
   1d68c:	str	r0, [sp, #32]
   1d690:	movw	r1, #0
   1d694:	cmp	r0, r1
   1d698:	bne	1d6b0 <__assert_fail@plt+0xc284>
   1d69c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d6a0:	bl	12794 <__assert_fail@plt+0x1368>
   1d6a4:	mvn	r0, #0
   1d6a8:	str	r0, [fp, #-4]
   1d6ac:	b	1d984 <__assert_fail@plt+0xc558>
   1d6b0:	ldr	r0, [sp, #32]
   1d6b4:	str	r0, [fp, #-28]	; 0xffffffe4
   1d6b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d6bc:	movw	r1, #0
   1d6c0:	cmp	r1, r0
   1d6c4:	bgt	1d6e0 <__assert_fail@plt+0xc2b4>
   1d6c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d6cc:	ldr	r1, [fp, #-16]
   1d6d0:	str	r0, [r1]
   1d6d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d6d8:	str	r0, [fp, #-4]
   1d6dc:	b	1d984 <__assert_fail@plt+0xc558>
   1d6e0:	b	1d638 <__assert_fail@plt+0xc20c>
   1d6e4:	ldr	r0, [fp, #-8]
   1d6e8:	movw	r1, #0
   1d6ec:	cmp	r0, r1
   1d6f0:	beq	1d714 <__assert_fail@plt+0xc2e8>
   1d6f4:	ldr	r2, [fp, #-8]
   1d6f8:	ldr	r3, [fp, #-12]
   1d6fc:	movw	r0, #0
   1d700:	str	r0, [sp, #12]
   1d704:	ldr	r1, [sp, #12]
   1d708:	bl	1f3c0 <__assert_fail@plt+0xdf94>
   1d70c:	str	r0, [sp, #8]
   1d710:	b	1d728 <__assert_fail@plt+0xc2fc>
   1d714:	movw	r0, #0
   1d718:	str	r0, [sp, #4]
   1d71c:	ldr	r1, [sp, #4]
   1d720:	bl	113cc <getgroups@plt>
   1d724:	str	r0, [sp, #8]
   1d728:	ldr	r0, [sp, #8]
   1d72c:	str	r0, [fp, #-20]	; 0xffffffec
   1d730:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d734:	cmp	r0, #0
   1d738:	bge	1d7a8 <__assert_fail@plt+0xc37c>
   1d73c:	bl	1130c <__errno_location@plt>
   1d740:	ldr	r0, [r0]
   1d744:	cmp	r0, #38	; 0x26
   1d748:	bne	1d79c <__assert_fail@plt+0xc370>
   1d74c:	movw	r0, #0
   1d750:	movw	r1, #1
   1d754:	bl	1d990 <__assert_fail@plt+0xc564>
   1d758:	str	r0, [fp, #-28]	; 0xffffffe4
   1d75c:	movw	r1, #0
   1d760:	cmp	r0, r1
   1d764:	beq	1d79c <__assert_fail@plt+0xc370>
   1d768:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d76c:	ldr	r1, [fp, #-16]
   1d770:	str	r0, [r1]
   1d774:	ldr	r0, [fp, #-12]
   1d778:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d77c:	str	r0, [r1]
   1d780:	ldr	r0, [fp, #-12]
   1d784:	cmn	r0, #1
   1d788:	movw	r0, #0
   1d78c:	movne	r0, #1
   1d790:	and	r0, r0, #1
   1d794:	str	r0, [fp, #-4]
   1d798:	b	1d984 <__assert_fail@plt+0xc558>
   1d79c:	mvn	r0, #0
   1d7a0:	str	r0, [fp, #-4]
   1d7a4:	b	1d984 <__assert_fail@plt+0xc558>
   1d7a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d7ac:	cmp	r0, #0
   1d7b0:	beq	1d7d0 <__assert_fail@plt+0xc3a4>
   1d7b4:	ldr	r0, [fp, #-8]
   1d7b8:	movw	r1, #0
   1d7bc:	cmp	r0, r1
   1d7c0:	bne	1d7dc <__assert_fail@plt+0xc3b0>
   1d7c4:	ldr	r0, [fp, #-12]
   1d7c8:	cmn	r0, #1
   1d7cc:	beq	1d7dc <__assert_fail@plt+0xc3b0>
   1d7d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d7d4:	add	r0, r0, #1
   1d7d8:	str	r0, [fp, #-20]	; 0xffffffec
   1d7dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d7e0:	movw	r0, #0
   1d7e4:	bl	1d990 <__assert_fail@plt+0xc564>
   1d7e8:	str	r0, [fp, #-28]	; 0xffffffe4
   1d7ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d7f0:	movw	r1, #0
   1d7f4:	cmp	r0, r1
   1d7f8:	bne	1d808 <__assert_fail@plt+0xc3dc>
   1d7fc:	mvn	r0, #0
   1d800:	str	r0, [fp, #-4]
   1d804:	b	1d984 <__assert_fail@plt+0xc558>
   1d808:	ldr	r0, [fp, #-8]
   1d80c:	movw	r1, #0
   1d810:	cmp	r0, r1
   1d814:	beq	1d834 <__assert_fail@plt+0xc408>
   1d818:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d81c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d820:	ldr	r2, [fp, #-8]
   1d824:	ldr	r3, [fp, #-12]
   1d828:	bl	1f3c0 <__assert_fail@plt+0xdf94>
   1d82c:	str	r0, [sp]
   1d830:	b	1d85c <__assert_fail@plt+0xc430>
   1d834:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d838:	ldr	r1, [fp, #-12]
   1d83c:	add	r2, r1, #1
   1d840:	cmn	r1, #1
   1d844:	movwne	r2, #1
   1d848:	sub	r0, r0, r2
   1d84c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d850:	add	r1, r1, r2, lsl #2
   1d854:	bl	113cc <getgroups@plt>
   1d858:	str	r0, [sp]
   1d85c:	ldr	r0, [sp]
   1d860:	str	r0, [fp, #-24]	; 0xffffffe8
   1d864:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d868:	cmp	r0, #0
   1d86c:	bge	1d884 <__assert_fail@plt+0xc458>
   1d870:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d874:	bl	12794 <__assert_fail@plt+0x1368>
   1d878:	mvn	r0, #0
   1d87c:	str	r0, [fp, #-4]
   1d880:	b	1d984 <__assert_fail@plt+0xc558>
   1d884:	ldr	r0, [fp, #-8]
   1d888:	movw	r1, #0
   1d88c:	cmp	r0, r1
   1d890:	bne	1d8b8 <__assert_fail@plt+0xc48c>
   1d894:	ldr	r0, [fp, #-12]
   1d898:	cmn	r0, #1
   1d89c:	beq	1d8b8 <__assert_fail@plt+0xc48c>
   1d8a0:	ldr	r0, [fp, #-12]
   1d8a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d8a8:	str	r0, [r1]
   1d8ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d8b0:	add	r0, r0, #1
   1d8b4:	str	r0, [fp, #-24]	; 0xffffffe8
   1d8b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d8bc:	ldr	r1, [fp, #-16]
   1d8c0:	str	r0, [r1]
   1d8c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d8c8:	movw	r1, #1
   1d8cc:	cmp	r1, r0
   1d8d0:	bge	1d97c <__assert_fail@plt+0xc550>
   1d8d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d8d8:	ldr	r0, [r0]
   1d8dc:	str	r0, [sp, #24]
   1d8e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d8e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d8e8:	add	r0, r0, r1, lsl #2
   1d8ec:	str	r0, [sp, #16]
   1d8f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d8f4:	add	r0, r0, #4
   1d8f8:	str	r0, [sp, #20]
   1d8fc:	ldr	r0, [sp, #20]
   1d900:	ldr	r1, [sp, #16]
   1d904:	cmp	r0, r1
   1d908:	bcs	1d978 <__assert_fail@plt+0xc54c>
   1d90c:	ldr	r0, [sp, #20]
   1d910:	ldr	r0, [r0]
   1d914:	ldr	r1, [sp, #24]
   1d918:	cmp	r0, r1
   1d91c:	beq	1d938 <__assert_fail@plt+0xc50c>
   1d920:	ldr	r0, [sp, #20]
   1d924:	ldr	r0, [r0]
   1d928:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d92c:	ldr	r1, [r1]
   1d930:	cmp	r0, r1
   1d934:	bne	1d94c <__assert_fail@plt+0xc520>
   1d938:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d93c:	mvn	r1, #0
   1d940:	add	r0, r0, r1
   1d944:	str	r0, [fp, #-24]	; 0xffffffe8
   1d948:	b	1d964 <__assert_fail@plt+0xc538>
   1d94c:	ldr	r0, [sp, #20]
   1d950:	ldr	r0, [r0]
   1d954:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d958:	add	r2, r1, #4
   1d95c:	str	r2, [fp, #-28]	; 0xffffffe4
   1d960:	str	r0, [r1, #4]
   1d964:	b	1d968 <__assert_fail@plt+0xc53c>
   1d968:	ldr	r0, [sp, #20]
   1d96c:	add	r0, r0, #4
   1d970:	str	r0, [sp, #20]
   1d974:	b	1d8fc <__assert_fail@plt+0xc4d0>
   1d978:	b	1d97c <__assert_fail@plt+0xc550>
   1d97c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d980:	str	r0, [fp, #-4]
   1d984:	ldr	r0, [fp, #-4]
   1d988:	mov	sp, fp
   1d98c:	pop	{fp, pc}
   1d990:	push	{fp, lr}
   1d994:	mov	fp, sp
   1d998:	sub	sp, sp, #16
   1d99c:	ldr	r2, [pc, #72]	; 1d9ec <__assert_fail@plt+0xc5c0>
   1d9a0:	str	r0, [sp, #8]
   1d9a4:	str	r1, [sp, #4]
   1d9a8:	ldr	r0, [sp, #4]
   1d9ac:	cmp	r2, r0
   1d9b0:	bcs	1d9cc <__assert_fail@plt+0xc5a0>
   1d9b4:	bl	1130c <__errno_location@plt>
   1d9b8:	movw	lr, #12
   1d9bc:	str	lr, [r0]
   1d9c0:	movw	r0, #0
   1d9c4:	str	r0, [fp, #-4]
   1d9c8:	b	1d9e0 <__assert_fail@plt+0xc5b4>
   1d9cc:	ldr	r0, [sp, #8]
   1d9d0:	ldr	r1, [sp, #4]
   1d9d4:	lsl	r1, r1, #2
   1d9d8:	bl	1cce4 <__assert_fail@plt+0xb8b8>
   1d9dc:	str	r0, [fp, #-4]
   1d9e0:	ldr	r0, [fp, #-4]
   1d9e4:	mov	sp, fp
   1d9e8:	pop	{fp, pc}
   1d9ec:	svcne	0x00ffffff
   1d9f0:	push	{fp, lr}
   1d9f4:	mov	fp, sp
   1d9f8:	sub	sp, sp, #176	; 0xb0
   1d9fc:	str	r0, [fp, #-8]
   1da00:	str	r1, [fp, #-12]
   1da04:	str	r2, [fp, #-16]
   1da08:	b	1ddc0 <__assert_fail@plt+0xc994>
   1da0c:	b	1dbe0 <__assert_fail@plt+0xc7b4>
   1da10:	ldr	r0, [fp, #-16]
   1da14:	cmp	r0, #0
   1da18:	bcs	1db1c <__assert_fail@plt+0xc6f0>
   1da1c:	ldr	r0, [fp, #-12]
   1da20:	cmp	r0, #0
   1da24:	bcs	1daac <__assert_fail@plt+0xc680>
   1da28:	b	1da48 <__assert_fail@plt+0xc61c>
   1da2c:	ldr	r0, [fp, #-12]
   1da30:	ldr	r1, [fp, #-16]
   1da34:	movw	r2, #127	; 0x7f
   1da38:	udiv	r1, r2, r1
   1da3c:	cmp	r0, r1
   1da40:	bcc	1dbb0 <__assert_fail@plt+0xc784>
   1da44:	b	1dbc8 <__assert_fail@plt+0xc79c>
   1da48:	b	1da5c <__assert_fail@plt+0xc630>
   1da4c:	ldr	r0, [fp, #-16]
   1da50:	cmp	r0, #1
   1da54:	bcc	1da6c <__assert_fail@plt+0xc640>
   1da58:	b	1da78 <__assert_fail@plt+0xc64c>
   1da5c:	ldr	r0, [fp, #-16]
   1da60:	movw	r1, #0
   1da64:	cmp	r1, r0
   1da68:	bcs	1da78 <__assert_fail@plt+0xc64c>
   1da6c:	movw	r0, #0
   1da70:	str	r0, [fp, #-24]	; 0xffffffe8
   1da74:	b	1da90 <__assert_fail@plt+0xc664>
   1da78:	ldr	r0, [fp, #-16]
   1da7c:	movw	r1, #0
   1da80:	sub	r0, r1, r0
   1da84:	movw	r1, #127	; 0x7f
   1da88:	udiv	r0, r1, r0
   1da8c:	str	r0, [fp, #-24]	; 0xffffffe8
   1da90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da94:	ldr	r1, [fp, #-12]
   1da98:	mvn	r2, #0
   1da9c:	sub	r1, r2, r1
   1daa0:	cmp	r0, r1
   1daa4:	bls	1dbb0 <__assert_fail@plt+0xc784>
   1daa8:	b	1dbc8 <__assert_fail@plt+0xc79c>
   1daac:	ldr	r0, [fp, #-16]
   1dab0:	cmn	r0, #1
   1dab4:	bne	1db00 <__assert_fail@plt+0xc6d4>
   1dab8:	b	1dad8 <__assert_fail@plt+0xc6ac>
   1dabc:	ldr	r0, [fp, #-12]
   1dac0:	mvn	r1, #127	; 0x7f
   1dac4:	add	r0, r0, r1
   1dac8:	movw	r1, #0
   1dacc:	cmp	r1, r0
   1dad0:	bcc	1dbb0 <__assert_fail@plt+0xc784>
   1dad4:	b	1dbc8 <__assert_fail@plt+0xc79c>
   1dad8:	ldr	r0, [fp, #-12]
   1dadc:	movw	r1, #0
   1dae0:	cmp	r1, r0
   1dae4:	bcs	1dbc8 <__assert_fail@plt+0xc79c>
   1dae8:	ldr	r0, [fp, #-12]
   1daec:	sub	r0, r0, #1
   1daf0:	movw	r1, #127	; 0x7f
   1daf4:	cmp	r1, r0
   1daf8:	bcc	1dbb0 <__assert_fail@plt+0xc784>
   1dafc:	b	1dbc8 <__assert_fail@plt+0xc79c>
   1db00:	ldr	r0, [fp, #-16]
   1db04:	mvn	r1, #127	; 0x7f
   1db08:	udiv	r0, r1, r0
   1db0c:	ldr	r1, [fp, #-12]
   1db10:	cmp	r0, r1
   1db14:	bcc	1dbb0 <__assert_fail@plt+0xc784>
   1db18:	b	1dbc8 <__assert_fail@plt+0xc79c>
   1db1c:	ldr	r0, [fp, #-16]
   1db20:	cmp	r0, #0
   1db24:	bne	1db2c <__assert_fail@plt+0xc700>
   1db28:	b	1dbc8 <__assert_fail@plt+0xc79c>
   1db2c:	ldr	r0, [fp, #-12]
   1db30:	cmp	r0, #0
   1db34:	bcs	1db98 <__assert_fail@plt+0xc76c>
   1db38:	ldr	r0, [fp, #-12]
   1db3c:	cmn	r0, #1
   1db40:	bne	1db7c <__assert_fail@plt+0xc750>
   1db44:	b	1db64 <__assert_fail@plt+0xc738>
   1db48:	ldr	r0, [fp, #-16]
   1db4c:	mvn	r1, #127	; 0x7f
   1db50:	add	r0, r0, r1
   1db54:	movw	r1, #0
   1db58:	cmp	r1, r0
   1db5c:	bcc	1dbb0 <__assert_fail@plt+0xc784>
   1db60:	b	1dbc8 <__assert_fail@plt+0xc79c>
   1db64:	ldr	r0, [fp, #-16]
   1db68:	sub	r0, r0, #1
   1db6c:	movw	r1, #127	; 0x7f
   1db70:	cmp	r1, r0
   1db74:	bcc	1dbb0 <__assert_fail@plt+0xc784>
   1db78:	b	1dbc8 <__assert_fail@plt+0xc79c>
   1db7c:	ldr	r0, [fp, #-12]
   1db80:	mvn	r1, #127	; 0x7f
   1db84:	udiv	r0, r1, r0
   1db88:	ldr	r1, [fp, #-16]
   1db8c:	cmp	r0, r1
   1db90:	bcc	1dbb0 <__assert_fail@plt+0xc784>
   1db94:	b	1dbc8 <__assert_fail@plt+0xc79c>
   1db98:	ldr	r0, [fp, #-16]
   1db9c:	movw	r1, #127	; 0x7f
   1dba0:	udiv	r0, r1, r0
   1dba4:	ldr	r1, [fp, #-12]
   1dba8:	cmp	r0, r1
   1dbac:	bcs	1dbc8 <__assert_fail@plt+0xc79c>
   1dbb0:	ldr	r0, [fp, #-12]
   1dbb4:	ldr	r1, [fp, #-16]
   1dbb8:	mul	r0, r0, r1
   1dbbc:	sxtb	r0, r0
   1dbc0:	str	r0, [fp, #-20]	; 0xffffffec
   1dbc4:	b	1ed40 <__assert_fail@plt+0xd914>
   1dbc8:	ldr	r0, [fp, #-12]
   1dbcc:	ldr	r1, [fp, #-16]
   1dbd0:	mul	r0, r0, r1
   1dbd4:	sxtb	r0, r0
   1dbd8:	str	r0, [fp, #-20]	; 0xffffffec
   1dbdc:	b	1ed58 <__assert_fail@plt+0xd92c>
   1dbe0:	ldr	r0, [fp, #-16]
   1dbe4:	cmp	r0, #0
   1dbe8:	bcs	1dcf4 <__assert_fail@plt+0xc8c8>
   1dbec:	ldr	r0, [fp, #-12]
   1dbf0:	cmp	r0, #0
   1dbf4:	bcs	1dc7c <__assert_fail@plt+0xc850>
   1dbf8:	b	1dc18 <__assert_fail@plt+0xc7ec>
   1dbfc:	ldr	r0, [fp, #-12]
   1dc00:	ldr	r1, [fp, #-16]
   1dc04:	movw	r2, #255	; 0xff
   1dc08:	udiv	r1, r2, r1
   1dc0c:	cmp	r0, r1
   1dc10:	bcc	1dd90 <__assert_fail@plt+0xc964>
   1dc14:	b	1dda8 <__assert_fail@plt+0xc97c>
   1dc18:	b	1dc2c <__assert_fail@plt+0xc800>
   1dc1c:	ldr	r0, [fp, #-16]
   1dc20:	cmp	r0, #1
   1dc24:	bcc	1dc3c <__assert_fail@plt+0xc810>
   1dc28:	b	1dc48 <__assert_fail@plt+0xc81c>
   1dc2c:	ldr	r0, [fp, #-16]
   1dc30:	movw	r1, #0
   1dc34:	cmp	r1, r0
   1dc38:	bcs	1dc48 <__assert_fail@plt+0xc81c>
   1dc3c:	movw	r0, #0
   1dc40:	str	r0, [fp, #-28]	; 0xffffffe4
   1dc44:	b	1dc60 <__assert_fail@plt+0xc834>
   1dc48:	ldr	r0, [fp, #-16]
   1dc4c:	movw	r1, #0
   1dc50:	sub	r0, r1, r0
   1dc54:	movw	r1, #255	; 0xff
   1dc58:	udiv	r0, r1, r0
   1dc5c:	str	r0, [fp, #-28]	; 0xffffffe4
   1dc60:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1dc64:	ldr	r1, [fp, #-12]
   1dc68:	mvn	r2, #0
   1dc6c:	sub	r1, r2, r1
   1dc70:	cmp	r0, r1
   1dc74:	bls	1dd90 <__assert_fail@plt+0xc964>
   1dc78:	b	1dda8 <__assert_fail@plt+0xc97c>
   1dc7c:	b	1dc84 <__assert_fail@plt+0xc858>
   1dc80:	b	1dc88 <__assert_fail@plt+0xc85c>
   1dc84:	b	1dcd8 <__assert_fail@plt+0xc8ac>
   1dc88:	ldr	r0, [fp, #-16]
   1dc8c:	cmn	r0, #1
   1dc90:	bne	1dcd8 <__assert_fail@plt+0xc8ac>
   1dc94:	b	1dcb0 <__assert_fail@plt+0xc884>
   1dc98:	ldr	r0, [fp, #-12]
   1dc9c:	add	r0, r0, #0
   1dca0:	movw	r1, #0
   1dca4:	cmp	r1, r0
   1dca8:	bcc	1dd90 <__assert_fail@plt+0xc964>
   1dcac:	b	1dda8 <__assert_fail@plt+0xc97c>
   1dcb0:	ldr	r0, [fp, #-12]
   1dcb4:	movw	r1, #0
   1dcb8:	cmp	r1, r0
   1dcbc:	bcs	1dda8 <__assert_fail@plt+0xc97c>
   1dcc0:	ldr	r0, [fp, #-12]
   1dcc4:	sub	r0, r0, #1
   1dcc8:	mvn	r1, #0
   1dccc:	cmp	r1, r0
   1dcd0:	bcc	1dd90 <__assert_fail@plt+0xc964>
   1dcd4:	b	1dda8 <__assert_fail@plt+0xc97c>
   1dcd8:	ldr	r0, [fp, #-16]
   1dcdc:	movw	r1, #0
   1dce0:	udiv	r0, r1, r0
   1dce4:	ldr	r1, [fp, #-12]
   1dce8:	cmp	r0, r1
   1dcec:	bcc	1dd90 <__assert_fail@plt+0xc964>
   1dcf0:	b	1dda8 <__assert_fail@plt+0xc97c>
   1dcf4:	ldr	r0, [fp, #-16]
   1dcf8:	cmp	r0, #0
   1dcfc:	bne	1dd04 <__assert_fail@plt+0xc8d8>
   1dd00:	b	1dda8 <__assert_fail@plt+0xc97c>
   1dd04:	ldr	r0, [fp, #-12]
   1dd08:	cmp	r0, #0
   1dd0c:	bcs	1dd78 <__assert_fail@plt+0xc94c>
   1dd10:	b	1dd18 <__assert_fail@plt+0xc8ec>
   1dd14:	b	1dd1c <__assert_fail@plt+0xc8f0>
   1dd18:	b	1dd5c <__assert_fail@plt+0xc930>
   1dd1c:	ldr	r0, [fp, #-12]
   1dd20:	cmn	r0, #1
   1dd24:	bne	1dd5c <__assert_fail@plt+0xc930>
   1dd28:	b	1dd44 <__assert_fail@plt+0xc918>
   1dd2c:	ldr	r0, [fp, #-16]
   1dd30:	add	r0, r0, #0
   1dd34:	movw	r1, #0
   1dd38:	cmp	r1, r0
   1dd3c:	bcc	1dd90 <__assert_fail@plt+0xc964>
   1dd40:	b	1dda8 <__assert_fail@plt+0xc97c>
   1dd44:	ldr	r0, [fp, #-16]
   1dd48:	sub	r0, r0, #1
   1dd4c:	mvn	r1, #0
   1dd50:	cmp	r1, r0
   1dd54:	bcc	1dd90 <__assert_fail@plt+0xc964>
   1dd58:	b	1dda8 <__assert_fail@plt+0xc97c>
   1dd5c:	ldr	r0, [fp, #-12]
   1dd60:	movw	r1, #0
   1dd64:	udiv	r0, r1, r0
   1dd68:	ldr	r1, [fp, #-16]
   1dd6c:	cmp	r0, r1
   1dd70:	bcc	1dd90 <__assert_fail@plt+0xc964>
   1dd74:	b	1dda8 <__assert_fail@plt+0xc97c>
   1dd78:	ldr	r0, [fp, #-16]
   1dd7c:	movw	r1, #255	; 0xff
   1dd80:	udiv	r0, r1, r0
   1dd84:	ldr	r1, [fp, #-12]
   1dd88:	cmp	r0, r1
   1dd8c:	bcs	1dda8 <__assert_fail@plt+0xc97c>
   1dd90:	ldr	r0, [fp, #-12]
   1dd94:	ldr	r1, [fp, #-16]
   1dd98:	mul	r0, r0, r1
   1dd9c:	and	r0, r0, #255	; 0xff
   1dda0:	str	r0, [fp, #-20]	; 0xffffffec
   1dda4:	b	1ed40 <__assert_fail@plt+0xd914>
   1dda8:	ldr	r0, [fp, #-12]
   1ddac:	ldr	r1, [fp, #-16]
   1ddb0:	mul	r0, r0, r1
   1ddb4:	and	r0, r0, #255	; 0xff
   1ddb8:	str	r0, [fp, #-20]	; 0xffffffec
   1ddbc:	b	1ed58 <__assert_fail@plt+0xd92c>
   1ddc0:	b	1e178 <__assert_fail@plt+0xcd4c>
   1ddc4:	b	1df98 <__assert_fail@plt+0xcb6c>
   1ddc8:	ldr	r0, [fp, #-16]
   1ddcc:	cmp	r0, #0
   1ddd0:	bcs	1ded4 <__assert_fail@plt+0xcaa8>
   1ddd4:	ldr	r0, [fp, #-12]
   1ddd8:	cmp	r0, #0
   1dddc:	bcs	1de64 <__assert_fail@plt+0xca38>
   1dde0:	b	1de00 <__assert_fail@plt+0xc9d4>
   1dde4:	ldr	r0, [fp, #-12]
   1dde8:	ldr	r1, [fp, #-16]
   1ddec:	movw	r2, #32767	; 0x7fff
   1ddf0:	udiv	r1, r2, r1
   1ddf4:	cmp	r0, r1
   1ddf8:	bcc	1df68 <__assert_fail@plt+0xcb3c>
   1ddfc:	b	1df80 <__assert_fail@plt+0xcb54>
   1de00:	b	1de14 <__assert_fail@plt+0xc9e8>
   1de04:	ldr	r0, [fp, #-16]
   1de08:	cmp	r0, #1
   1de0c:	bcc	1de24 <__assert_fail@plt+0xc9f8>
   1de10:	b	1de30 <__assert_fail@plt+0xca04>
   1de14:	ldr	r0, [fp, #-16]
   1de18:	movw	r1, #0
   1de1c:	cmp	r1, r0
   1de20:	bcs	1de30 <__assert_fail@plt+0xca04>
   1de24:	movw	r0, #0
   1de28:	str	r0, [fp, #-32]	; 0xffffffe0
   1de2c:	b	1de48 <__assert_fail@plt+0xca1c>
   1de30:	ldr	r0, [fp, #-16]
   1de34:	movw	r1, #0
   1de38:	sub	r0, r1, r0
   1de3c:	movw	r1, #32767	; 0x7fff
   1de40:	udiv	r0, r1, r0
   1de44:	str	r0, [fp, #-32]	; 0xffffffe0
   1de48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1de4c:	ldr	r1, [fp, #-12]
   1de50:	mvn	r2, #0
   1de54:	sub	r1, r2, r1
   1de58:	cmp	r0, r1
   1de5c:	bls	1df68 <__assert_fail@plt+0xcb3c>
   1de60:	b	1df80 <__assert_fail@plt+0xcb54>
   1de64:	ldr	r0, [fp, #-16]
   1de68:	cmn	r0, #1
   1de6c:	bne	1deb8 <__assert_fail@plt+0xca8c>
   1de70:	b	1de90 <__assert_fail@plt+0xca64>
   1de74:	ldr	r0, [pc, #3840]	; 1ed7c <__assert_fail@plt+0xd950>
   1de78:	ldr	r1, [fp, #-12]
   1de7c:	add	r0, r1, r0
   1de80:	movw	r1, #0
   1de84:	cmp	r1, r0
   1de88:	bcc	1df68 <__assert_fail@plt+0xcb3c>
   1de8c:	b	1df80 <__assert_fail@plt+0xcb54>
   1de90:	ldr	r0, [fp, #-12]
   1de94:	movw	r1, #0
   1de98:	cmp	r1, r0
   1de9c:	bcs	1df80 <__assert_fail@plt+0xcb54>
   1dea0:	ldr	r0, [fp, #-12]
   1dea4:	sub	r0, r0, #1
   1dea8:	movw	r1, #32767	; 0x7fff
   1deac:	cmp	r1, r0
   1deb0:	bcc	1df68 <__assert_fail@plt+0xcb3c>
   1deb4:	b	1df80 <__assert_fail@plt+0xcb54>
   1deb8:	ldr	r0, [pc, #3772]	; 1ed7c <__assert_fail@plt+0xd950>
   1debc:	ldr	r1, [fp, #-16]
   1dec0:	udiv	r0, r0, r1
   1dec4:	ldr	r1, [fp, #-12]
   1dec8:	cmp	r0, r1
   1decc:	bcc	1df68 <__assert_fail@plt+0xcb3c>
   1ded0:	b	1df80 <__assert_fail@plt+0xcb54>
   1ded4:	ldr	r0, [fp, #-16]
   1ded8:	cmp	r0, #0
   1dedc:	bne	1dee4 <__assert_fail@plt+0xcab8>
   1dee0:	b	1df80 <__assert_fail@plt+0xcb54>
   1dee4:	ldr	r0, [fp, #-12]
   1dee8:	cmp	r0, #0
   1deec:	bcs	1df50 <__assert_fail@plt+0xcb24>
   1def0:	ldr	r0, [fp, #-12]
   1def4:	cmn	r0, #1
   1def8:	bne	1df34 <__assert_fail@plt+0xcb08>
   1defc:	b	1df1c <__assert_fail@plt+0xcaf0>
   1df00:	ldr	r0, [pc, #3700]	; 1ed7c <__assert_fail@plt+0xd950>
   1df04:	ldr	r1, [fp, #-16]
   1df08:	add	r0, r1, r0
   1df0c:	movw	r1, #0
   1df10:	cmp	r1, r0
   1df14:	bcc	1df68 <__assert_fail@plt+0xcb3c>
   1df18:	b	1df80 <__assert_fail@plt+0xcb54>
   1df1c:	ldr	r0, [fp, #-16]
   1df20:	sub	r0, r0, #1
   1df24:	movw	r1, #32767	; 0x7fff
   1df28:	cmp	r1, r0
   1df2c:	bcc	1df68 <__assert_fail@plt+0xcb3c>
   1df30:	b	1df80 <__assert_fail@plt+0xcb54>
   1df34:	ldr	r0, [pc, #3648]	; 1ed7c <__assert_fail@plt+0xd950>
   1df38:	ldr	r1, [fp, #-12]
   1df3c:	udiv	r0, r0, r1
   1df40:	ldr	r1, [fp, #-16]
   1df44:	cmp	r0, r1
   1df48:	bcc	1df68 <__assert_fail@plt+0xcb3c>
   1df4c:	b	1df80 <__assert_fail@plt+0xcb54>
   1df50:	ldr	r0, [fp, #-16]
   1df54:	movw	r1, #32767	; 0x7fff
   1df58:	udiv	r0, r1, r0
   1df5c:	ldr	r1, [fp, #-12]
   1df60:	cmp	r0, r1
   1df64:	bcs	1df80 <__assert_fail@plt+0xcb54>
   1df68:	ldr	r0, [fp, #-12]
   1df6c:	ldr	r1, [fp, #-16]
   1df70:	mul	r0, r0, r1
   1df74:	sxth	r0, r0
   1df78:	str	r0, [fp, #-20]	; 0xffffffec
   1df7c:	b	1ed40 <__assert_fail@plt+0xd914>
   1df80:	ldr	r0, [fp, #-12]
   1df84:	ldr	r1, [fp, #-16]
   1df88:	mul	r0, r0, r1
   1df8c:	sxth	r0, r0
   1df90:	str	r0, [fp, #-20]	; 0xffffffec
   1df94:	b	1ed58 <__assert_fail@plt+0xd92c>
   1df98:	ldr	r0, [fp, #-16]
   1df9c:	cmp	r0, #0
   1dfa0:	bcs	1e0ac <__assert_fail@plt+0xcc80>
   1dfa4:	ldr	r0, [fp, #-12]
   1dfa8:	cmp	r0, #0
   1dfac:	bcs	1e034 <__assert_fail@plt+0xcc08>
   1dfb0:	b	1dfd0 <__assert_fail@plt+0xcba4>
   1dfb4:	ldr	r0, [fp, #-12]
   1dfb8:	ldr	r1, [fp, #-16]
   1dfbc:	movw	r2, #65535	; 0xffff
   1dfc0:	udiv	r1, r2, r1
   1dfc4:	cmp	r0, r1
   1dfc8:	bcc	1e148 <__assert_fail@plt+0xcd1c>
   1dfcc:	b	1e160 <__assert_fail@plt+0xcd34>
   1dfd0:	b	1dfe4 <__assert_fail@plt+0xcbb8>
   1dfd4:	ldr	r0, [fp, #-16]
   1dfd8:	cmp	r0, #1
   1dfdc:	bcc	1dff4 <__assert_fail@plt+0xcbc8>
   1dfe0:	b	1e000 <__assert_fail@plt+0xcbd4>
   1dfe4:	ldr	r0, [fp, #-16]
   1dfe8:	movw	r1, #0
   1dfec:	cmp	r1, r0
   1dff0:	bcs	1e000 <__assert_fail@plt+0xcbd4>
   1dff4:	movw	r0, #0
   1dff8:	str	r0, [fp, #-36]	; 0xffffffdc
   1dffc:	b	1e018 <__assert_fail@plt+0xcbec>
   1e000:	ldr	r0, [fp, #-16]
   1e004:	movw	r1, #0
   1e008:	sub	r0, r1, r0
   1e00c:	movw	r1, #65535	; 0xffff
   1e010:	udiv	r0, r1, r0
   1e014:	str	r0, [fp, #-36]	; 0xffffffdc
   1e018:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e01c:	ldr	r1, [fp, #-12]
   1e020:	mvn	r2, #0
   1e024:	sub	r1, r2, r1
   1e028:	cmp	r0, r1
   1e02c:	bls	1e148 <__assert_fail@plt+0xcd1c>
   1e030:	b	1e160 <__assert_fail@plt+0xcd34>
   1e034:	b	1e03c <__assert_fail@plt+0xcc10>
   1e038:	b	1e040 <__assert_fail@plt+0xcc14>
   1e03c:	b	1e090 <__assert_fail@plt+0xcc64>
   1e040:	ldr	r0, [fp, #-16]
   1e044:	cmn	r0, #1
   1e048:	bne	1e090 <__assert_fail@plt+0xcc64>
   1e04c:	b	1e068 <__assert_fail@plt+0xcc3c>
   1e050:	ldr	r0, [fp, #-12]
   1e054:	add	r0, r0, #0
   1e058:	movw	r1, #0
   1e05c:	cmp	r1, r0
   1e060:	bcc	1e148 <__assert_fail@plt+0xcd1c>
   1e064:	b	1e160 <__assert_fail@plt+0xcd34>
   1e068:	ldr	r0, [fp, #-12]
   1e06c:	movw	r1, #0
   1e070:	cmp	r1, r0
   1e074:	bcs	1e160 <__assert_fail@plt+0xcd34>
   1e078:	ldr	r0, [fp, #-12]
   1e07c:	sub	r0, r0, #1
   1e080:	mvn	r1, #0
   1e084:	cmp	r1, r0
   1e088:	bcc	1e148 <__assert_fail@plt+0xcd1c>
   1e08c:	b	1e160 <__assert_fail@plt+0xcd34>
   1e090:	ldr	r0, [fp, #-16]
   1e094:	movw	r1, #0
   1e098:	udiv	r0, r1, r0
   1e09c:	ldr	r1, [fp, #-12]
   1e0a0:	cmp	r0, r1
   1e0a4:	bcc	1e148 <__assert_fail@plt+0xcd1c>
   1e0a8:	b	1e160 <__assert_fail@plt+0xcd34>
   1e0ac:	ldr	r0, [fp, #-16]
   1e0b0:	cmp	r0, #0
   1e0b4:	bne	1e0bc <__assert_fail@plt+0xcc90>
   1e0b8:	b	1e160 <__assert_fail@plt+0xcd34>
   1e0bc:	ldr	r0, [fp, #-12]
   1e0c0:	cmp	r0, #0
   1e0c4:	bcs	1e130 <__assert_fail@plt+0xcd04>
   1e0c8:	b	1e0d0 <__assert_fail@plt+0xcca4>
   1e0cc:	b	1e0d4 <__assert_fail@plt+0xcca8>
   1e0d0:	b	1e114 <__assert_fail@plt+0xcce8>
   1e0d4:	ldr	r0, [fp, #-12]
   1e0d8:	cmn	r0, #1
   1e0dc:	bne	1e114 <__assert_fail@plt+0xcce8>
   1e0e0:	b	1e0fc <__assert_fail@plt+0xccd0>
   1e0e4:	ldr	r0, [fp, #-16]
   1e0e8:	add	r0, r0, #0
   1e0ec:	movw	r1, #0
   1e0f0:	cmp	r1, r0
   1e0f4:	bcc	1e148 <__assert_fail@plt+0xcd1c>
   1e0f8:	b	1e160 <__assert_fail@plt+0xcd34>
   1e0fc:	ldr	r0, [fp, #-16]
   1e100:	sub	r0, r0, #1
   1e104:	mvn	r1, #0
   1e108:	cmp	r1, r0
   1e10c:	bcc	1e148 <__assert_fail@plt+0xcd1c>
   1e110:	b	1e160 <__assert_fail@plt+0xcd34>
   1e114:	ldr	r0, [fp, #-12]
   1e118:	movw	r1, #0
   1e11c:	udiv	r0, r1, r0
   1e120:	ldr	r1, [fp, #-16]
   1e124:	cmp	r0, r1
   1e128:	bcc	1e148 <__assert_fail@plt+0xcd1c>
   1e12c:	b	1e160 <__assert_fail@plt+0xcd34>
   1e130:	ldr	r0, [fp, #-16]
   1e134:	movw	r1, #65535	; 0xffff
   1e138:	udiv	r0, r1, r0
   1e13c:	ldr	r1, [fp, #-12]
   1e140:	cmp	r0, r1
   1e144:	bcs	1e160 <__assert_fail@plt+0xcd34>
   1e148:	ldr	r0, [fp, #-12]
   1e14c:	ldr	r1, [fp, #-16]
   1e150:	mul	r0, r0, r1
   1e154:	uxth	r0, r0
   1e158:	str	r0, [fp, #-20]	; 0xffffffec
   1e15c:	b	1ed40 <__assert_fail@plt+0xd914>
   1e160:	ldr	r0, [fp, #-12]
   1e164:	ldr	r1, [fp, #-16]
   1e168:	mul	r0, r0, r1
   1e16c:	uxth	r0, r0
   1e170:	str	r0, [fp, #-20]	; 0xffffffec
   1e174:	b	1ed58 <__assert_fail@plt+0xd92c>
   1e178:	b	1e17c <__assert_fail@plt+0xcd50>
   1e17c:	b	1e340 <__assert_fail@plt+0xcf14>
   1e180:	ldr	r0, [fp, #-16]
   1e184:	cmp	r0, #0
   1e188:	bcs	1e288 <__assert_fail@plt+0xce5c>
   1e18c:	ldr	r0, [fp, #-12]
   1e190:	cmp	r0, #0
   1e194:	bcs	1e21c <__assert_fail@plt+0xcdf0>
   1e198:	b	1e1b8 <__assert_fail@plt+0xcd8c>
   1e19c:	ldr	r0, [pc, #3024]	; 1ed74 <__assert_fail@plt+0xd948>
   1e1a0:	ldr	r1, [fp, #-12]
   1e1a4:	ldr	r2, [fp, #-16]
   1e1a8:	udiv	r0, r0, r2
   1e1ac:	cmp	r1, r0
   1e1b0:	bcc	1e318 <__assert_fail@plt+0xceec>
   1e1b4:	b	1e32c <__assert_fail@plt+0xcf00>
   1e1b8:	b	1e1cc <__assert_fail@plt+0xcda0>
   1e1bc:	ldr	r0, [fp, #-16]
   1e1c0:	cmp	r0, #1
   1e1c4:	bcc	1e1dc <__assert_fail@plt+0xcdb0>
   1e1c8:	b	1e1e8 <__assert_fail@plt+0xcdbc>
   1e1cc:	ldr	r0, [fp, #-16]
   1e1d0:	movw	r1, #0
   1e1d4:	cmp	r1, r0
   1e1d8:	bcs	1e1e8 <__assert_fail@plt+0xcdbc>
   1e1dc:	movw	r0, #0
   1e1e0:	str	r0, [fp, #-40]	; 0xffffffd8
   1e1e4:	b	1e200 <__assert_fail@plt+0xcdd4>
   1e1e8:	ldr	r0, [pc, #2948]	; 1ed74 <__assert_fail@plt+0xd948>
   1e1ec:	ldr	r1, [fp, #-16]
   1e1f0:	movw	r2, #0
   1e1f4:	sub	r1, r2, r1
   1e1f8:	udiv	r0, r0, r1
   1e1fc:	str	r0, [fp, #-40]	; 0xffffffd8
   1e200:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e204:	ldr	r1, [fp, #-12]
   1e208:	mvn	r2, #0
   1e20c:	sub	r1, r2, r1
   1e210:	cmp	r0, r1
   1e214:	bls	1e318 <__assert_fail@plt+0xceec>
   1e218:	b	1e32c <__assert_fail@plt+0xcf00>
   1e21c:	ldr	r0, [fp, #-16]
   1e220:	cmn	r0, #1
   1e224:	bne	1e26c <__assert_fail@plt+0xce40>
   1e228:	b	1e244 <__assert_fail@plt+0xce18>
   1e22c:	ldr	r0, [fp, #-12]
   1e230:	add	r0, r0, #-2147483648	; 0x80000000
   1e234:	movw	r1, #0
   1e238:	cmp	r1, r0
   1e23c:	bcc	1e318 <__assert_fail@plt+0xceec>
   1e240:	b	1e32c <__assert_fail@plt+0xcf00>
   1e244:	ldr	r0, [fp, #-12]
   1e248:	movw	r1, #0
   1e24c:	cmp	r1, r0
   1e250:	bcs	1e32c <__assert_fail@plt+0xcf00>
   1e254:	ldr	r0, [pc, #2840]	; 1ed74 <__assert_fail@plt+0xd948>
   1e258:	ldr	r1, [fp, #-12]
   1e25c:	sub	r1, r1, #1
   1e260:	cmp	r0, r1
   1e264:	bcc	1e318 <__assert_fail@plt+0xceec>
   1e268:	b	1e32c <__assert_fail@plt+0xcf00>
   1e26c:	ldr	r0, [pc, #2820]	; 1ed78 <__assert_fail@plt+0xd94c>
   1e270:	ldr	r1, [fp, #-16]
   1e274:	udiv	r0, r0, r1
   1e278:	ldr	r1, [fp, #-12]
   1e27c:	cmp	r0, r1
   1e280:	bcc	1e318 <__assert_fail@plt+0xceec>
   1e284:	b	1e32c <__assert_fail@plt+0xcf00>
   1e288:	ldr	r0, [fp, #-16]
   1e28c:	cmp	r0, #0
   1e290:	bne	1e298 <__assert_fail@plt+0xce6c>
   1e294:	b	1e32c <__assert_fail@plt+0xcf00>
   1e298:	ldr	r0, [fp, #-12]
   1e29c:	cmp	r0, #0
   1e2a0:	bcs	1e300 <__assert_fail@plt+0xced4>
   1e2a4:	ldr	r0, [fp, #-12]
   1e2a8:	cmn	r0, #1
   1e2ac:	bne	1e2e4 <__assert_fail@plt+0xceb8>
   1e2b0:	b	1e2cc <__assert_fail@plt+0xcea0>
   1e2b4:	ldr	r0, [fp, #-16]
   1e2b8:	add	r0, r0, #-2147483648	; 0x80000000
   1e2bc:	movw	r1, #0
   1e2c0:	cmp	r1, r0
   1e2c4:	bcc	1e318 <__assert_fail@plt+0xceec>
   1e2c8:	b	1e32c <__assert_fail@plt+0xcf00>
   1e2cc:	ldr	r0, [pc, #2720]	; 1ed74 <__assert_fail@plt+0xd948>
   1e2d0:	ldr	r1, [fp, #-16]
   1e2d4:	sub	r1, r1, #1
   1e2d8:	cmp	r0, r1
   1e2dc:	bcc	1e318 <__assert_fail@plt+0xceec>
   1e2e0:	b	1e32c <__assert_fail@plt+0xcf00>
   1e2e4:	ldr	r0, [pc, #2700]	; 1ed78 <__assert_fail@plt+0xd94c>
   1e2e8:	ldr	r1, [fp, #-12]
   1e2ec:	udiv	r0, r0, r1
   1e2f0:	ldr	r1, [fp, #-16]
   1e2f4:	cmp	r0, r1
   1e2f8:	bcc	1e318 <__assert_fail@plt+0xceec>
   1e2fc:	b	1e32c <__assert_fail@plt+0xcf00>
   1e300:	ldr	r0, [pc, #2668]	; 1ed74 <__assert_fail@plt+0xd948>
   1e304:	ldr	r1, [fp, #-16]
   1e308:	udiv	r0, r0, r1
   1e30c:	ldr	r1, [fp, #-12]
   1e310:	cmp	r0, r1
   1e314:	bcs	1e32c <__assert_fail@plt+0xcf00>
   1e318:	ldr	r0, [fp, #-12]
   1e31c:	ldr	r1, [fp, #-16]
   1e320:	mul	r0, r0, r1
   1e324:	str	r0, [fp, #-20]	; 0xffffffec
   1e328:	b	1ed40 <__assert_fail@plt+0xd914>
   1e32c:	ldr	r0, [fp, #-12]
   1e330:	ldr	r1, [fp, #-16]
   1e334:	mul	r0, r0, r1
   1e338:	str	r0, [fp, #-20]	; 0xffffffec
   1e33c:	b	1ed58 <__assert_fail@plt+0xd92c>
   1e340:	ldr	r0, [fp, #-16]
   1e344:	cmp	r0, #0
   1e348:	bcs	1e454 <__assert_fail@plt+0xd028>
   1e34c:	ldr	r0, [fp, #-12]
   1e350:	cmp	r0, #0
   1e354:	bcs	1e3dc <__assert_fail@plt+0xcfb0>
   1e358:	b	1e378 <__assert_fail@plt+0xcf4c>
   1e35c:	ldr	r0, [fp, #-12]
   1e360:	ldr	r1, [fp, #-16]
   1e364:	mvn	r2, #0
   1e368:	udiv	r1, r2, r1
   1e36c:	cmp	r0, r1
   1e370:	bcc	1e4f0 <__assert_fail@plt+0xd0c4>
   1e374:	b	1e504 <__assert_fail@plt+0xd0d8>
   1e378:	b	1e38c <__assert_fail@plt+0xcf60>
   1e37c:	ldr	r0, [fp, #-16]
   1e380:	cmp	r0, #1
   1e384:	bcc	1e39c <__assert_fail@plt+0xcf70>
   1e388:	b	1e3a8 <__assert_fail@plt+0xcf7c>
   1e38c:	ldr	r0, [fp, #-16]
   1e390:	movw	r1, #0
   1e394:	cmp	r1, r0
   1e398:	bcs	1e3a8 <__assert_fail@plt+0xcf7c>
   1e39c:	movw	r0, #1
   1e3a0:	str	r0, [fp, #-44]	; 0xffffffd4
   1e3a4:	b	1e3c0 <__assert_fail@plt+0xcf94>
   1e3a8:	ldr	r0, [fp, #-16]
   1e3ac:	movw	r1, #0
   1e3b0:	sub	r0, r1, r0
   1e3b4:	mvn	r1, #0
   1e3b8:	udiv	r0, r1, r0
   1e3bc:	str	r0, [fp, #-44]	; 0xffffffd4
   1e3c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1e3c4:	ldr	r1, [fp, #-12]
   1e3c8:	mvn	r2, #0
   1e3cc:	sub	r1, r2, r1
   1e3d0:	cmp	r0, r1
   1e3d4:	bls	1e4f0 <__assert_fail@plt+0xd0c4>
   1e3d8:	b	1e504 <__assert_fail@plt+0xd0d8>
   1e3dc:	b	1e3e4 <__assert_fail@plt+0xcfb8>
   1e3e0:	b	1e3e8 <__assert_fail@plt+0xcfbc>
   1e3e4:	b	1e438 <__assert_fail@plt+0xd00c>
   1e3e8:	ldr	r0, [fp, #-16]
   1e3ec:	cmn	r0, #1
   1e3f0:	bne	1e438 <__assert_fail@plt+0xd00c>
   1e3f4:	b	1e410 <__assert_fail@plt+0xcfe4>
   1e3f8:	ldr	r0, [fp, #-12]
   1e3fc:	add	r0, r0, #0
   1e400:	movw	r1, #0
   1e404:	cmp	r1, r0
   1e408:	bcc	1e4f0 <__assert_fail@plt+0xd0c4>
   1e40c:	b	1e504 <__assert_fail@plt+0xd0d8>
   1e410:	ldr	r0, [fp, #-12]
   1e414:	movw	r1, #0
   1e418:	cmp	r1, r0
   1e41c:	bcs	1e504 <__assert_fail@plt+0xd0d8>
   1e420:	ldr	r0, [fp, #-12]
   1e424:	sub	r0, r0, #1
   1e428:	mvn	r1, #0
   1e42c:	cmp	r1, r0
   1e430:	bcc	1e4f0 <__assert_fail@plt+0xd0c4>
   1e434:	b	1e504 <__assert_fail@plt+0xd0d8>
   1e438:	ldr	r0, [fp, #-16]
   1e43c:	movw	r1, #0
   1e440:	udiv	r0, r1, r0
   1e444:	ldr	r1, [fp, #-12]
   1e448:	cmp	r0, r1
   1e44c:	bcc	1e4f0 <__assert_fail@plt+0xd0c4>
   1e450:	b	1e504 <__assert_fail@plt+0xd0d8>
   1e454:	ldr	r0, [fp, #-16]
   1e458:	cmp	r0, #0
   1e45c:	bne	1e464 <__assert_fail@plt+0xd038>
   1e460:	b	1e504 <__assert_fail@plt+0xd0d8>
   1e464:	ldr	r0, [fp, #-12]
   1e468:	cmp	r0, #0
   1e46c:	bcs	1e4d8 <__assert_fail@plt+0xd0ac>
   1e470:	b	1e478 <__assert_fail@plt+0xd04c>
   1e474:	b	1e47c <__assert_fail@plt+0xd050>
   1e478:	b	1e4bc <__assert_fail@plt+0xd090>
   1e47c:	ldr	r0, [fp, #-12]
   1e480:	cmn	r0, #1
   1e484:	bne	1e4bc <__assert_fail@plt+0xd090>
   1e488:	b	1e4a4 <__assert_fail@plt+0xd078>
   1e48c:	ldr	r0, [fp, #-16]
   1e490:	add	r0, r0, #0
   1e494:	movw	r1, #0
   1e498:	cmp	r1, r0
   1e49c:	bcc	1e4f0 <__assert_fail@plt+0xd0c4>
   1e4a0:	b	1e504 <__assert_fail@plt+0xd0d8>
   1e4a4:	ldr	r0, [fp, #-16]
   1e4a8:	sub	r0, r0, #1
   1e4ac:	mvn	r1, #0
   1e4b0:	cmp	r1, r0
   1e4b4:	bcc	1e4f0 <__assert_fail@plt+0xd0c4>
   1e4b8:	b	1e504 <__assert_fail@plt+0xd0d8>
   1e4bc:	ldr	r0, [fp, #-12]
   1e4c0:	movw	r1, #0
   1e4c4:	udiv	r0, r1, r0
   1e4c8:	ldr	r1, [fp, #-16]
   1e4cc:	cmp	r0, r1
   1e4d0:	bcc	1e4f0 <__assert_fail@plt+0xd0c4>
   1e4d4:	b	1e504 <__assert_fail@plt+0xd0d8>
   1e4d8:	ldr	r0, [fp, #-16]
   1e4dc:	mvn	r1, #0
   1e4e0:	udiv	r0, r1, r0
   1e4e4:	ldr	r1, [fp, #-12]
   1e4e8:	cmp	r0, r1
   1e4ec:	bcs	1e504 <__assert_fail@plt+0xd0d8>
   1e4f0:	ldr	r0, [fp, #-12]
   1e4f4:	ldr	r1, [fp, #-16]
   1e4f8:	mul	r0, r0, r1
   1e4fc:	str	r0, [fp, #-20]	; 0xffffffec
   1e500:	b	1ed40 <__assert_fail@plt+0xd914>
   1e504:	ldr	r0, [fp, #-12]
   1e508:	ldr	r1, [fp, #-16]
   1e50c:	mul	r0, r0, r1
   1e510:	str	r0, [fp, #-20]	; 0xffffffec
   1e514:	b	1ed58 <__assert_fail@plt+0xd92c>
   1e518:	b	1e51c <__assert_fail@plt+0xd0f0>
   1e51c:	b	1e6e0 <__assert_fail@plt+0xd2b4>
   1e520:	ldr	r0, [fp, #-16]
   1e524:	cmp	r0, #0
   1e528:	bcs	1e628 <__assert_fail@plt+0xd1fc>
   1e52c:	ldr	r0, [fp, #-12]
   1e530:	cmp	r0, #0
   1e534:	bcs	1e5bc <__assert_fail@plt+0xd190>
   1e538:	b	1e558 <__assert_fail@plt+0xd12c>
   1e53c:	ldr	r0, [pc, #2096]	; 1ed74 <__assert_fail@plt+0xd948>
   1e540:	ldr	r1, [fp, #-12]
   1e544:	ldr	r2, [fp, #-16]
   1e548:	udiv	r0, r0, r2
   1e54c:	cmp	r1, r0
   1e550:	bcc	1e6b8 <__assert_fail@plt+0xd28c>
   1e554:	b	1e6cc <__assert_fail@plt+0xd2a0>
   1e558:	b	1e56c <__assert_fail@plt+0xd140>
   1e55c:	ldr	r0, [fp, #-16]
   1e560:	cmp	r0, #1
   1e564:	bcc	1e57c <__assert_fail@plt+0xd150>
   1e568:	b	1e588 <__assert_fail@plt+0xd15c>
   1e56c:	ldr	r0, [fp, #-16]
   1e570:	movw	r1, #0
   1e574:	cmp	r1, r0
   1e578:	bcs	1e588 <__assert_fail@plt+0xd15c>
   1e57c:	movw	r0, #0
   1e580:	str	r0, [fp, #-48]	; 0xffffffd0
   1e584:	b	1e5a0 <__assert_fail@plt+0xd174>
   1e588:	ldr	r0, [pc, #2020]	; 1ed74 <__assert_fail@plt+0xd948>
   1e58c:	ldr	r1, [fp, #-16]
   1e590:	movw	r2, #0
   1e594:	sub	r1, r2, r1
   1e598:	udiv	r0, r0, r1
   1e59c:	str	r0, [fp, #-48]	; 0xffffffd0
   1e5a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1e5a4:	ldr	r1, [fp, #-12]
   1e5a8:	mvn	r2, #0
   1e5ac:	sub	r1, r2, r1
   1e5b0:	cmp	r0, r1
   1e5b4:	bls	1e6b8 <__assert_fail@plt+0xd28c>
   1e5b8:	b	1e6cc <__assert_fail@plt+0xd2a0>
   1e5bc:	ldr	r0, [fp, #-16]
   1e5c0:	cmn	r0, #1
   1e5c4:	bne	1e60c <__assert_fail@plt+0xd1e0>
   1e5c8:	b	1e5e4 <__assert_fail@plt+0xd1b8>
   1e5cc:	ldr	r0, [fp, #-12]
   1e5d0:	add	r0, r0, #-2147483648	; 0x80000000
   1e5d4:	movw	r1, #0
   1e5d8:	cmp	r1, r0
   1e5dc:	bcc	1e6b8 <__assert_fail@plt+0xd28c>
   1e5e0:	b	1e6cc <__assert_fail@plt+0xd2a0>
   1e5e4:	ldr	r0, [fp, #-12]
   1e5e8:	movw	r1, #0
   1e5ec:	cmp	r1, r0
   1e5f0:	bcs	1e6cc <__assert_fail@plt+0xd2a0>
   1e5f4:	ldr	r0, [pc, #1912]	; 1ed74 <__assert_fail@plt+0xd948>
   1e5f8:	ldr	r1, [fp, #-12]
   1e5fc:	sub	r1, r1, #1
   1e600:	cmp	r0, r1
   1e604:	bcc	1e6b8 <__assert_fail@plt+0xd28c>
   1e608:	b	1e6cc <__assert_fail@plt+0xd2a0>
   1e60c:	ldr	r0, [pc, #1892]	; 1ed78 <__assert_fail@plt+0xd94c>
   1e610:	ldr	r1, [fp, #-16]
   1e614:	udiv	r0, r0, r1
   1e618:	ldr	r1, [fp, #-12]
   1e61c:	cmp	r0, r1
   1e620:	bcc	1e6b8 <__assert_fail@plt+0xd28c>
   1e624:	b	1e6cc <__assert_fail@plt+0xd2a0>
   1e628:	ldr	r0, [fp, #-16]
   1e62c:	cmp	r0, #0
   1e630:	bne	1e638 <__assert_fail@plt+0xd20c>
   1e634:	b	1e6cc <__assert_fail@plt+0xd2a0>
   1e638:	ldr	r0, [fp, #-12]
   1e63c:	cmp	r0, #0
   1e640:	bcs	1e6a0 <__assert_fail@plt+0xd274>
   1e644:	ldr	r0, [fp, #-12]
   1e648:	cmn	r0, #1
   1e64c:	bne	1e684 <__assert_fail@plt+0xd258>
   1e650:	b	1e66c <__assert_fail@plt+0xd240>
   1e654:	ldr	r0, [fp, #-16]
   1e658:	add	r0, r0, #-2147483648	; 0x80000000
   1e65c:	movw	r1, #0
   1e660:	cmp	r1, r0
   1e664:	bcc	1e6b8 <__assert_fail@plt+0xd28c>
   1e668:	b	1e6cc <__assert_fail@plt+0xd2a0>
   1e66c:	ldr	r0, [pc, #1792]	; 1ed74 <__assert_fail@plt+0xd948>
   1e670:	ldr	r1, [fp, #-16]
   1e674:	sub	r1, r1, #1
   1e678:	cmp	r0, r1
   1e67c:	bcc	1e6b8 <__assert_fail@plt+0xd28c>
   1e680:	b	1e6cc <__assert_fail@plt+0xd2a0>
   1e684:	ldr	r0, [pc, #1772]	; 1ed78 <__assert_fail@plt+0xd94c>
   1e688:	ldr	r1, [fp, #-12]
   1e68c:	udiv	r0, r0, r1
   1e690:	ldr	r1, [fp, #-16]
   1e694:	cmp	r0, r1
   1e698:	bcc	1e6b8 <__assert_fail@plt+0xd28c>
   1e69c:	b	1e6cc <__assert_fail@plt+0xd2a0>
   1e6a0:	ldr	r0, [pc, #1740]	; 1ed74 <__assert_fail@plt+0xd948>
   1e6a4:	ldr	r1, [fp, #-16]
   1e6a8:	udiv	r0, r0, r1
   1e6ac:	ldr	r1, [fp, #-12]
   1e6b0:	cmp	r0, r1
   1e6b4:	bcs	1e6cc <__assert_fail@plt+0xd2a0>
   1e6b8:	ldr	r0, [fp, #-12]
   1e6bc:	ldr	r1, [fp, #-16]
   1e6c0:	mul	r0, r0, r1
   1e6c4:	str	r0, [fp, #-20]	; 0xffffffec
   1e6c8:	b	1ed40 <__assert_fail@plt+0xd914>
   1e6cc:	ldr	r0, [fp, #-12]
   1e6d0:	ldr	r1, [fp, #-16]
   1e6d4:	mul	r0, r0, r1
   1e6d8:	str	r0, [fp, #-20]	; 0xffffffec
   1e6dc:	b	1ed58 <__assert_fail@plt+0xd92c>
   1e6e0:	ldr	r0, [fp, #-16]
   1e6e4:	cmp	r0, #0
   1e6e8:	bcs	1e7f4 <__assert_fail@plt+0xd3c8>
   1e6ec:	ldr	r0, [fp, #-12]
   1e6f0:	cmp	r0, #0
   1e6f4:	bcs	1e77c <__assert_fail@plt+0xd350>
   1e6f8:	b	1e718 <__assert_fail@plt+0xd2ec>
   1e6fc:	ldr	r0, [fp, #-12]
   1e700:	ldr	r1, [fp, #-16]
   1e704:	mvn	r2, #0
   1e708:	udiv	r1, r2, r1
   1e70c:	cmp	r0, r1
   1e710:	bcc	1e890 <__assert_fail@plt+0xd464>
   1e714:	b	1e8a4 <__assert_fail@plt+0xd478>
   1e718:	b	1e72c <__assert_fail@plt+0xd300>
   1e71c:	ldr	r0, [fp, #-16]
   1e720:	cmp	r0, #1
   1e724:	bcc	1e73c <__assert_fail@plt+0xd310>
   1e728:	b	1e748 <__assert_fail@plt+0xd31c>
   1e72c:	ldr	r0, [fp, #-16]
   1e730:	movw	r1, #0
   1e734:	cmp	r1, r0
   1e738:	bcs	1e748 <__assert_fail@plt+0xd31c>
   1e73c:	movw	r0, #1
   1e740:	str	r0, [fp, #-52]	; 0xffffffcc
   1e744:	b	1e760 <__assert_fail@plt+0xd334>
   1e748:	ldr	r0, [fp, #-16]
   1e74c:	movw	r1, #0
   1e750:	sub	r0, r1, r0
   1e754:	mvn	r1, #0
   1e758:	udiv	r0, r1, r0
   1e75c:	str	r0, [fp, #-52]	; 0xffffffcc
   1e760:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1e764:	ldr	r1, [fp, #-12]
   1e768:	mvn	r2, #0
   1e76c:	sub	r1, r2, r1
   1e770:	cmp	r0, r1
   1e774:	bls	1e890 <__assert_fail@plt+0xd464>
   1e778:	b	1e8a4 <__assert_fail@plt+0xd478>
   1e77c:	b	1e784 <__assert_fail@plt+0xd358>
   1e780:	b	1e788 <__assert_fail@plt+0xd35c>
   1e784:	b	1e7d8 <__assert_fail@plt+0xd3ac>
   1e788:	ldr	r0, [fp, #-16]
   1e78c:	cmn	r0, #1
   1e790:	bne	1e7d8 <__assert_fail@plt+0xd3ac>
   1e794:	b	1e7b0 <__assert_fail@plt+0xd384>
   1e798:	ldr	r0, [fp, #-12]
   1e79c:	add	r0, r0, #0
   1e7a0:	movw	r1, #0
   1e7a4:	cmp	r1, r0
   1e7a8:	bcc	1e890 <__assert_fail@plt+0xd464>
   1e7ac:	b	1e8a4 <__assert_fail@plt+0xd478>
   1e7b0:	ldr	r0, [fp, #-12]
   1e7b4:	movw	r1, #0
   1e7b8:	cmp	r1, r0
   1e7bc:	bcs	1e8a4 <__assert_fail@plt+0xd478>
   1e7c0:	ldr	r0, [fp, #-12]
   1e7c4:	sub	r0, r0, #1
   1e7c8:	mvn	r1, #0
   1e7cc:	cmp	r1, r0
   1e7d0:	bcc	1e890 <__assert_fail@plt+0xd464>
   1e7d4:	b	1e8a4 <__assert_fail@plt+0xd478>
   1e7d8:	ldr	r0, [fp, #-16]
   1e7dc:	movw	r1, #0
   1e7e0:	udiv	r0, r1, r0
   1e7e4:	ldr	r1, [fp, #-12]
   1e7e8:	cmp	r0, r1
   1e7ec:	bcc	1e890 <__assert_fail@plt+0xd464>
   1e7f0:	b	1e8a4 <__assert_fail@plt+0xd478>
   1e7f4:	ldr	r0, [fp, #-16]
   1e7f8:	cmp	r0, #0
   1e7fc:	bne	1e804 <__assert_fail@plt+0xd3d8>
   1e800:	b	1e8a4 <__assert_fail@plt+0xd478>
   1e804:	ldr	r0, [fp, #-12]
   1e808:	cmp	r0, #0
   1e80c:	bcs	1e878 <__assert_fail@plt+0xd44c>
   1e810:	b	1e818 <__assert_fail@plt+0xd3ec>
   1e814:	b	1e81c <__assert_fail@plt+0xd3f0>
   1e818:	b	1e85c <__assert_fail@plt+0xd430>
   1e81c:	ldr	r0, [fp, #-12]
   1e820:	cmn	r0, #1
   1e824:	bne	1e85c <__assert_fail@plt+0xd430>
   1e828:	b	1e844 <__assert_fail@plt+0xd418>
   1e82c:	ldr	r0, [fp, #-16]
   1e830:	add	r0, r0, #0
   1e834:	movw	r1, #0
   1e838:	cmp	r1, r0
   1e83c:	bcc	1e890 <__assert_fail@plt+0xd464>
   1e840:	b	1e8a4 <__assert_fail@plt+0xd478>
   1e844:	ldr	r0, [fp, #-16]
   1e848:	sub	r0, r0, #1
   1e84c:	mvn	r1, #0
   1e850:	cmp	r1, r0
   1e854:	bcc	1e890 <__assert_fail@plt+0xd464>
   1e858:	b	1e8a4 <__assert_fail@plt+0xd478>
   1e85c:	ldr	r0, [fp, #-12]
   1e860:	movw	r1, #0
   1e864:	udiv	r0, r1, r0
   1e868:	ldr	r1, [fp, #-16]
   1e86c:	cmp	r0, r1
   1e870:	bcc	1e890 <__assert_fail@plt+0xd464>
   1e874:	b	1e8a4 <__assert_fail@plt+0xd478>
   1e878:	ldr	r0, [fp, #-16]
   1e87c:	mvn	r1, #0
   1e880:	udiv	r0, r1, r0
   1e884:	ldr	r1, [fp, #-12]
   1e888:	cmp	r0, r1
   1e88c:	bcs	1e8a4 <__assert_fail@plt+0xd478>
   1e890:	ldr	r0, [fp, #-12]
   1e894:	ldr	r1, [fp, #-16]
   1e898:	mul	r0, r0, r1
   1e89c:	str	r0, [fp, #-20]	; 0xffffffec
   1e8a0:	b	1ed40 <__assert_fail@plt+0xd914>
   1e8a4:	ldr	r0, [fp, #-12]
   1e8a8:	ldr	r1, [fp, #-16]
   1e8ac:	mul	r0, r0, r1
   1e8b0:	str	r0, [fp, #-20]	; 0xffffffec
   1e8b4:	b	1ed58 <__assert_fail@plt+0xd92c>
   1e8b8:	b	1eb0c <__assert_fail@plt+0xd6e0>
   1e8bc:	ldr	r0, [fp, #-16]
   1e8c0:	cmp	r0, #0
   1e8c4:	bcs	1ea24 <__assert_fail@plt+0xd5f8>
   1e8c8:	ldr	r0, [fp, #-12]
   1e8cc:	cmp	r0, #0
   1e8d0:	bcs	1e9a0 <__assert_fail@plt+0xd574>
   1e8d4:	b	1e8d8 <__assert_fail@plt+0xd4ac>
   1e8d8:	ldr	r0, [fp, #-12]
   1e8dc:	ldr	r2, [fp, #-16]
   1e8e0:	mvn	r1, #0
   1e8e4:	mvn	r3, #-2147483648	; 0x80000000
   1e8e8:	mov	ip, #0
   1e8ec:	str	r0, [fp, #-56]	; 0xffffffc8
   1e8f0:	mov	r0, r1
   1e8f4:	mov	r1, r3
   1e8f8:	mov	r3, ip
   1e8fc:	bl	1f88c <__assert_fail@plt+0xe460>
   1e900:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1e904:	subs	r0, r2, r0
   1e908:	rscs	r1, r1, #0
   1e90c:	str	r0, [fp, #-60]	; 0xffffffc4
   1e910:	str	r1, [fp, #-64]	; 0xffffffc0
   1e914:	blt	1eae4 <__assert_fail@plt+0xd6b8>
   1e918:	b	1eaf8 <__assert_fail@plt+0xd6cc>
   1e91c:	b	1e930 <__assert_fail@plt+0xd504>
   1e920:	ldr	r0, [fp, #-16]
   1e924:	cmp	r0, #1
   1e928:	bcc	1e940 <__assert_fail@plt+0xd514>
   1e92c:	b	1e954 <__assert_fail@plt+0xd528>
   1e930:	ldr	r0, [fp, #-16]
   1e934:	movw	r1, #0
   1e938:	cmp	r1, r0
   1e93c:	bcs	1e954 <__assert_fail@plt+0xd528>
   1e940:	mov	r0, #0
   1e944:	mvn	r1, #0
   1e948:	str	r1, [fp, #-68]	; 0xffffffbc
   1e94c:	str	r0, [fp, #-72]	; 0xffffffb8
   1e950:	b	1e978 <__assert_fail@plt+0xd54c>
   1e954:	ldr	r0, [fp, #-16]
   1e958:	rsb	r2, r0, #0
   1e95c:	mvn	r0, #0
   1e960:	mvn	r1, #-2147483648	; 0x80000000
   1e964:	mov	r3, #0
   1e968:	bl	1f88c <__assert_fail@plt+0xe460>
   1e96c:	str	r0, [fp, #-68]	; 0xffffffbc
   1e970:	str	r1, [fp, #-72]	; 0xffffffb8
   1e974:	b	1e978 <__assert_fail@plt+0xd54c>
   1e978:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1e97c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1e980:	ldr	r2, [fp, #-12]
   1e984:	mvn	r2, r2
   1e988:	subs	r1, r2, r1
   1e98c:	rscs	r0, r0, #0
   1e990:	str	r1, [fp, #-76]	; 0xffffffb4
   1e994:	str	r0, [fp, #-80]	; 0xffffffb0
   1e998:	bge	1eae4 <__assert_fail@plt+0xd6b8>
   1e99c:	b	1eaf8 <__assert_fail@plt+0xd6cc>
   1e9a0:	ldr	r0, [fp, #-16]
   1e9a4:	cmn	r0, #1
   1e9a8:	bne	1e9f0 <__assert_fail@plt+0xd5c4>
   1e9ac:	b	1e9d0 <__assert_fail@plt+0xd5a4>
   1e9b0:	ldr	r0, [fp, #-12]
   1e9b4:	rsbs	r0, r0, #0
   1e9b8:	mov	r1, #0
   1e9bc:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1e9c0:	str	r0, [fp, #-84]	; 0xffffffac
   1e9c4:	str	r1, [sp, #88]	; 0x58
   1e9c8:	blt	1eae4 <__assert_fail@plt+0xd6b8>
   1e9cc:	b	1eaf8 <__assert_fail@plt+0xd6cc>
   1e9d0:	ldr	r0, [fp, #-12]
   1e9d4:	movw	r1, #0
   1e9d8:	cmp	r1, r0
   1e9dc:	bcs	1eaf8 <__assert_fail@plt+0xd6cc>
   1e9e0:	mov	r0, #0
   1e9e4:	cmp	r0, #0
   1e9e8:	bne	1eae4 <__assert_fail@plt+0xd6b8>
   1e9ec:	b	1eaf8 <__assert_fail@plt+0xd6cc>
   1e9f0:	ldr	r2, [fp, #-16]
   1e9f4:	mov	r1, #-2147483648	; 0x80000000
   1e9f8:	mov	r0, #0
   1e9fc:	str	r0, [sp, #84]	; 0x54
   1ea00:	ldr	r3, [sp, #84]	; 0x54
   1ea04:	bl	1f7b8 <__assert_fail@plt+0xe38c>
   1ea08:	ldr	r2, [fp, #-12]
   1ea0c:	subs	r0, r0, r2
   1ea10:	sbcs	r1, r1, #0
   1ea14:	str	r0, [sp, #80]	; 0x50
   1ea18:	str	r1, [sp, #76]	; 0x4c
   1ea1c:	blt	1eae4 <__assert_fail@plt+0xd6b8>
   1ea20:	b	1eaf8 <__assert_fail@plt+0xd6cc>
   1ea24:	ldr	r0, [fp, #-16]
   1ea28:	cmp	r0, #0
   1ea2c:	bne	1ea34 <__assert_fail@plt+0xd608>
   1ea30:	b	1eaf8 <__assert_fail@plt+0xd6cc>
   1ea34:	ldr	r0, [fp, #-12]
   1ea38:	cmp	r0, #0
   1ea3c:	bcs	1eab4 <__assert_fail@plt+0xd688>
   1ea40:	ldr	r0, [fp, #-12]
   1ea44:	cmn	r0, #1
   1ea48:	bne	1ea80 <__assert_fail@plt+0xd654>
   1ea4c:	b	1ea70 <__assert_fail@plt+0xd644>
   1ea50:	ldr	r0, [fp, #-16]
   1ea54:	rsbs	r0, r0, #0
   1ea58:	mov	r1, #0
   1ea5c:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1ea60:	str	r0, [sp, #72]	; 0x48
   1ea64:	str	r1, [sp, #68]	; 0x44
   1ea68:	blt	1eae4 <__assert_fail@plt+0xd6b8>
   1ea6c:	b	1eaf8 <__assert_fail@plt+0xd6cc>
   1ea70:	mov	r0, #0
   1ea74:	cmp	r0, #0
   1ea78:	bne	1eae4 <__assert_fail@plt+0xd6b8>
   1ea7c:	b	1eaf8 <__assert_fail@plt+0xd6cc>
   1ea80:	ldr	r2, [fp, #-12]
   1ea84:	mov	r1, #-2147483648	; 0x80000000
   1ea88:	mov	r0, #0
   1ea8c:	str	r0, [sp, #64]	; 0x40
   1ea90:	ldr	r3, [sp, #64]	; 0x40
   1ea94:	bl	1f7b8 <__assert_fail@plt+0xe38c>
   1ea98:	ldr	r2, [fp, #-16]
   1ea9c:	subs	r0, r0, r2
   1eaa0:	sbcs	r1, r1, #0
   1eaa4:	str	r0, [sp, #60]	; 0x3c
   1eaa8:	str	r1, [sp, #56]	; 0x38
   1eaac:	blt	1eae4 <__assert_fail@plt+0xd6b8>
   1eab0:	b	1eaf8 <__assert_fail@plt+0xd6cc>
   1eab4:	ldr	r2, [fp, #-16]
   1eab8:	mvn	r0, #0
   1eabc:	mvn	r1, #-2147483648	; 0x80000000
   1eac0:	mov	r3, #0
   1eac4:	bl	1f88c <__assert_fail@plt+0xe460>
   1eac8:	ldr	r2, [fp, #-12]
   1eacc:	subs	r0, r0, r2
   1ead0:	sbcs	r1, r1, #0
   1ead4:	str	r0, [sp, #52]	; 0x34
   1ead8:	str	r1, [sp, #48]	; 0x30
   1eadc:	bge	1eaf8 <__assert_fail@plt+0xd6cc>
   1eae0:	b	1eae4 <__assert_fail@plt+0xd6b8>
   1eae4:	ldr	r0, [fp, #-12]
   1eae8:	ldr	r1, [fp, #-16]
   1eaec:	mul	r0, r0, r1
   1eaf0:	str	r0, [fp, #-20]	; 0xffffffec
   1eaf4:	b	1ed40 <__assert_fail@plt+0xd914>
   1eaf8:	ldr	r0, [fp, #-12]
   1eafc:	ldr	r1, [fp, #-16]
   1eb00:	mul	r0, r0, r1
   1eb04:	str	r0, [fp, #-20]	; 0xffffffec
   1eb08:	b	1ed58 <__assert_fail@plt+0xd92c>
   1eb0c:	ldr	r0, [fp, #-16]
   1eb10:	cmp	r0, #0
   1eb14:	bcs	1ec60 <__assert_fail@plt+0xd834>
   1eb18:	ldr	r0, [fp, #-12]
   1eb1c:	cmp	r0, #0
   1eb20:	bcs	1ebe8 <__assert_fail@plt+0xd7bc>
   1eb24:	b	1eb60 <__assert_fail@plt+0xd734>
   1eb28:	ldr	r0, [fp, #-12]
   1eb2c:	ldr	r2, [fp, #-16]
   1eb30:	mvn	r1, #0
   1eb34:	mov	r3, #0
   1eb38:	str	r0, [sp, #44]	; 0x2c
   1eb3c:	mov	r0, r1
   1eb40:	bl	1f88c <__assert_fail@plt+0xe460>
   1eb44:	ldr	r2, [sp, #44]	; 0x2c
   1eb48:	subs	r0, r2, r0
   1eb4c:	rscs	r1, r1, #0
   1eb50:	str	r0, [sp, #40]	; 0x28
   1eb54:	str	r1, [sp, #36]	; 0x24
   1eb58:	bcc	1ed18 <__assert_fail@plt+0xd8ec>
   1eb5c:	b	1ed2c <__assert_fail@plt+0xd900>
   1eb60:	b	1eb74 <__assert_fail@plt+0xd748>
   1eb64:	ldr	r0, [fp, #-16]
   1eb68:	cmp	r0, #1
   1eb6c:	bcc	1eb84 <__assert_fail@plt+0xd758>
   1eb70:	b	1eb98 <__assert_fail@plt+0xd76c>
   1eb74:	ldr	r0, [fp, #-16]
   1eb78:	movw	r1, #0
   1eb7c:	cmp	r1, r0
   1eb80:	bcs	1eb98 <__assert_fail@plt+0xd76c>
   1eb84:	mov	r0, #1
   1eb88:	mvn	r1, #0
   1eb8c:	str	r1, [sp, #32]
   1eb90:	str	r0, [sp, #28]
   1eb94:	b	1ebc0 <__assert_fail@plt+0xd794>
   1eb98:	ldr	r0, [fp, #-16]
   1eb9c:	rsb	r2, r0, #0
   1eba0:	mvn	r0, #0
   1eba4:	mov	r3, #0
   1eba8:	str	r0, [sp, #24]
   1ebac:	ldr	r1, [sp, #24]
   1ebb0:	bl	1f88c <__assert_fail@plt+0xe460>
   1ebb4:	str	r0, [sp, #32]
   1ebb8:	str	r1, [sp, #28]
   1ebbc:	b	1ebc0 <__assert_fail@plt+0xd794>
   1ebc0:	ldr	r0, [sp, #28]
   1ebc4:	ldr	r1, [sp, #32]
   1ebc8:	ldr	r2, [fp, #-12]
   1ebcc:	mvn	r2, r2
   1ebd0:	subs	r1, r2, r1
   1ebd4:	rscs	r0, r0, #0
   1ebd8:	str	r1, [sp, #20]
   1ebdc:	str	r0, [sp, #16]
   1ebe0:	bcs	1ed18 <__assert_fail@plt+0xd8ec>
   1ebe4:	b	1ed2c <__assert_fail@plt+0xd900>
   1ebe8:	b	1ebf0 <__assert_fail@plt+0xd7c4>
   1ebec:	b	1ebf4 <__assert_fail@plt+0xd7c8>
   1ebf0:	b	1ec44 <__assert_fail@plt+0xd818>
   1ebf4:	ldr	r0, [fp, #-16]
   1ebf8:	cmn	r0, #1
   1ebfc:	bne	1ec44 <__assert_fail@plt+0xd818>
   1ec00:	b	1ec1c <__assert_fail@plt+0xd7f0>
   1ec04:	ldr	r0, [fp, #-12]
   1ec08:	add	r0, r0, #0
   1ec0c:	movw	r1, #0
   1ec10:	cmp	r1, r0
   1ec14:	bcc	1ed18 <__assert_fail@plt+0xd8ec>
   1ec18:	b	1ed2c <__assert_fail@plt+0xd900>
   1ec1c:	ldr	r0, [fp, #-12]
   1ec20:	movw	r1, #0
   1ec24:	cmp	r1, r0
   1ec28:	bcs	1ed2c <__assert_fail@plt+0xd900>
   1ec2c:	ldr	r0, [fp, #-12]
   1ec30:	sub	r0, r0, #1
   1ec34:	mvn	r1, #0
   1ec38:	cmp	r1, r0
   1ec3c:	bcc	1ed18 <__assert_fail@plt+0xd8ec>
   1ec40:	b	1ed2c <__assert_fail@plt+0xd900>
   1ec44:	ldr	r0, [fp, #-16]
   1ec48:	movw	r1, #0
   1ec4c:	udiv	r0, r1, r0
   1ec50:	ldr	r1, [fp, #-12]
   1ec54:	cmp	r0, r1
   1ec58:	bcc	1ed18 <__assert_fail@plt+0xd8ec>
   1ec5c:	b	1ed2c <__assert_fail@plt+0xd900>
   1ec60:	ldr	r0, [fp, #-16]
   1ec64:	cmp	r0, #0
   1ec68:	bne	1ec70 <__assert_fail@plt+0xd844>
   1ec6c:	b	1ed2c <__assert_fail@plt+0xd900>
   1ec70:	ldr	r0, [fp, #-12]
   1ec74:	cmp	r0, #0
   1ec78:	bcs	1ece4 <__assert_fail@plt+0xd8b8>
   1ec7c:	b	1ec84 <__assert_fail@plt+0xd858>
   1ec80:	b	1ec88 <__assert_fail@plt+0xd85c>
   1ec84:	b	1ecc8 <__assert_fail@plt+0xd89c>
   1ec88:	ldr	r0, [fp, #-12]
   1ec8c:	cmn	r0, #1
   1ec90:	bne	1ecc8 <__assert_fail@plt+0xd89c>
   1ec94:	b	1ecb0 <__assert_fail@plt+0xd884>
   1ec98:	ldr	r0, [fp, #-16]
   1ec9c:	add	r0, r0, #0
   1eca0:	movw	r1, #0
   1eca4:	cmp	r1, r0
   1eca8:	bcc	1ed18 <__assert_fail@plt+0xd8ec>
   1ecac:	b	1ed2c <__assert_fail@plt+0xd900>
   1ecb0:	ldr	r0, [fp, #-16]
   1ecb4:	sub	r0, r0, #1
   1ecb8:	mvn	r1, #0
   1ecbc:	cmp	r1, r0
   1ecc0:	bcc	1ed18 <__assert_fail@plt+0xd8ec>
   1ecc4:	b	1ed2c <__assert_fail@plt+0xd900>
   1ecc8:	ldr	r0, [fp, #-12]
   1eccc:	movw	r1, #0
   1ecd0:	udiv	r0, r1, r0
   1ecd4:	ldr	r1, [fp, #-16]
   1ecd8:	cmp	r0, r1
   1ecdc:	bcc	1ed18 <__assert_fail@plt+0xd8ec>
   1ece0:	b	1ed2c <__assert_fail@plt+0xd900>
   1ece4:	ldr	r2, [fp, #-16]
   1ece8:	mvn	r0, #0
   1ecec:	mov	r3, #0
   1ecf0:	str	r0, [sp, #12]
   1ecf4:	ldr	r1, [sp, #12]
   1ecf8:	bl	1f88c <__assert_fail@plt+0xe460>
   1ecfc:	ldr	r2, [fp, #-12]
   1ed00:	subs	r0, r0, r2
   1ed04:	sbcs	r1, r1, #0
   1ed08:	str	r0, [sp, #8]
   1ed0c:	str	r1, [sp, #4]
   1ed10:	bcs	1ed2c <__assert_fail@plt+0xd900>
   1ed14:	b	1ed18 <__assert_fail@plt+0xd8ec>
   1ed18:	ldr	r0, [fp, #-12]
   1ed1c:	ldr	r1, [fp, #-16]
   1ed20:	mul	r0, r0, r1
   1ed24:	str	r0, [fp, #-20]	; 0xffffffec
   1ed28:	b	1ed40 <__assert_fail@plt+0xd914>
   1ed2c:	ldr	r0, [fp, #-12]
   1ed30:	ldr	r1, [fp, #-16]
   1ed34:	mul	r0, r0, r1
   1ed38:	str	r0, [fp, #-20]	; 0xffffffec
   1ed3c:	b	1ed58 <__assert_fail@plt+0xd92c>
   1ed40:	bl	1130c <__errno_location@plt>
   1ed44:	movw	lr, #12
   1ed48:	str	lr, [r0]
   1ed4c:	movw	r0, #0
   1ed50:	str	r0, [fp, #-4]
   1ed54:	b	1ed68 <__assert_fail@plt+0xd93c>
   1ed58:	ldr	r0, [fp, #-8]
   1ed5c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ed60:	bl	1cce4 <__assert_fail@plt+0xb8b8>
   1ed64:	str	r0, [fp, #-4]
   1ed68:	ldr	r0, [fp, #-4]
   1ed6c:	mov	sp, fp
   1ed70:	pop	{fp, pc}
   1ed74:	svcvc	0x00ffffff
   1ed78:	andhi	r0, r0, r0
   1ed7c:			; <UNDEFINED> instruction: 0xffff8000
   1ed80:	sub	sp, sp, #12
   1ed84:	str	r0, [sp, #4]
   1ed88:	ldr	r0, [sp, #4]
   1ed8c:	sub	r1, r0, #48	; 0x30
   1ed90:	cmp	r1, #10
   1ed94:	str	r0, [sp]
   1ed98:	bcc	1edc8 <__assert_fail@plt+0xd99c>
   1ed9c:	b	1eda0 <__assert_fail@plt+0xd974>
   1eda0:	ldr	r0, [sp]
   1eda4:	sub	r1, r0, #65	; 0x41
   1eda8:	cmp	r1, #26
   1edac:	bcc	1edc8 <__assert_fail@plt+0xd99c>
   1edb0:	b	1edb4 <__assert_fail@plt+0xd988>
   1edb4:	ldr	r0, [sp]
   1edb8:	sub	r1, r0, #97	; 0x61
   1edbc:	cmp	r1, #25
   1edc0:	bhi	1edd8 <__assert_fail@plt+0xd9ac>
   1edc4:	b	1edc8 <__assert_fail@plt+0xd99c>
   1edc8:	movw	r0, #1
   1edcc:	and	r0, r0, #1
   1edd0:	strb	r0, [sp, #11]
   1edd4:	b	1ede4 <__assert_fail@plt+0xd9b8>
   1edd8:	movw	r0, #0
   1eddc:	and	r0, r0, #1
   1ede0:	strb	r0, [sp, #11]
   1ede4:	ldrb	r0, [sp, #11]
   1ede8:	and	r0, r0, #1
   1edec:	add	sp, sp, #12
   1edf0:	bx	lr
   1edf4:	sub	sp, sp, #12
   1edf8:	str	r0, [sp, #4]
   1edfc:	ldr	r0, [sp, #4]
   1ee00:	sub	r1, r0, #65	; 0x41
   1ee04:	cmp	r1, #26
   1ee08:	str	r0, [sp]
   1ee0c:	bcc	1ee28 <__assert_fail@plt+0xd9fc>
   1ee10:	b	1ee14 <__assert_fail@plt+0xd9e8>
   1ee14:	ldr	r0, [sp]
   1ee18:	sub	r1, r0, #97	; 0x61
   1ee1c:	cmp	r1, #25
   1ee20:	bhi	1ee38 <__assert_fail@plt+0xda0c>
   1ee24:	b	1ee28 <__assert_fail@plt+0xd9fc>
   1ee28:	movw	r0, #1
   1ee2c:	and	r0, r0, #1
   1ee30:	strb	r0, [sp, #11]
   1ee34:	b	1ee44 <__assert_fail@plt+0xda18>
   1ee38:	movw	r0, #0
   1ee3c:	and	r0, r0, #1
   1ee40:	strb	r0, [sp, #11]
   1ee44:	ldrb	r0, [sp, #11]
   1ee48:	and	r0, r0, #1
   1ee4c:	add	sp, sp, #12
   1ee50:	bx	lr
   1ee54:	sub	sp, sp, #8
   1ee58:	str	r0, [sp]
   1ee5c:	ldr	r0, [sp]
   1ee60:	cmp	r0, #127	; 0x7f
   1ee64:	bhi	1ee7c <__assert_fail@plt+0xda50>
   1ee68:	b	1ee6c <__assert_fail@plt+0xda40>
   1ee6c:	movw	r0, #1
   1ee70:	and	r0, r0, #1
   1ee74:	strb	r0, [sp, #7]
   1ee78:	b	1ee88 <__assert_fail@plt+0xda5c>
   1ee7c:	movw	r0, #0
   1ee80:	and	r0, r0, #1
   1ee84:	strb	r0, [sp, #7]
   1ee88:	ldrb	r0, [sp, #7]
   1ee8c:	and	r0, r0, #1
   1ee90:	add	sp, sp, #8
   1ee94:	bx	lr
   1ee98:	sub	sp, sp, #8
   1ee9c:	str	r0, [sp, #4]
   1eea0:	ldr	r0, [sp, #4]
   1eea4:	cmp	r0, #32
   1eea8:	movw	r0, #1
   1eeac:	str	r0, [sp]
   1eeb0:	beq	1eec8 <__assert_fail@plt+0xda9c>
   1eeb4:	ldr	r0, [sp, #4]
   1eeb8:	cmp	r0, #9
   1eebc:	movw	r0, #0
   1eec0:	moveq	r0, #1
   1eec4:	str	r0, [sp]
   1eec8:	ldr	r0, [sp]
   1eecc:	and	r0, r0, #1
   1eed0:	add	sp, sp, #8
   1eed4:	bx	lr
   1eed8:	sub	sp, sp, #12
   1eedc:	str	r0, [sp, #4]
   1eee0:	ldr	r0, [sp, #4]
   1eee4:	cmp	r0, #32
   1eee8:	str	r0, [sp]
   1eeec:	bcc	1ef04 <__assert_fail@plt+0xdad8>
   1eef0:	b	1eef4 <__assert_fail@plt+0xdac8>
   1eef4:	ldr	r0, [sp]
   1eef8:	cmp	r0, #127	; 0x7f
   1eefc:	bne	1ef14 <__assert_fail@plt+0xdae8>
   1ef00:	b	1ef04 <__assert_fail@plt+0xdad8>
   1ef04:	movw	r0, #1
   1ef08:	and	r0, r0, #1
   1ef0c:	strb	r0, [sp, #11]
   1ef10:	b	1ef20 <__assert_fail@plt+0xdaf4>
   1ef14:	movw	r0, #0
   1ef18:	and	r0, r0, #1
   1ef1c:	strb	r0, [sp, #11]
   1ef20:	ldrb	r0, [sp, #11]
   1ef24:	and	r0, r0, #1
   1ef28:	add	sp, sp, #12
   1ef2c:	bx	lr
   1ef30:	sub	sp, sp, #8
   1ef34:	str	r0, [sp]
   1ef38:	ldr	r0, [sp]
   1ef3c:	sub	r0, r0, #48	; 0x30
   1ef40:	cmp	r0, #9
   1ef44:	bhi	1ef5c <__assert_fail@plt+0xdb30>
   1ef48:	b	1ef4c <__assert_fail@plt+0xdb20>
   1ef4c:	movw	r0, #1
   1ef50:	and	r0, r0, #1
   1ef54:	strb	r0, [sp, #7]
   1ef58:	b	1ef68 <__assert_fail@plt+0xdb3c>
   1ef5c:	movw	r0, #0
   1ef60:	and	r0, r0, #1
   1ef64:	strb	r0, [sp, #7]
   1ef68:	ldrb	r0, [sp, #7]
   1ef6c:	and	r0, r0, #1
   1ef70:	add	sp, sp, #8
   1ef74:	bx	lr
   1ef78:	sub	sp, sp, #8
   1ef7c:	str	r0, [sp]
   1ef80:	ldr	r0, [sp]
   1ef84:	sub	r0, r0, #33	; 0x21
   1ef88:	cmp	r0, #93	; 0x5d
   1ef8c:	bhi	1efa4 <__assert_fail@plt+0xdb78>
   1ef90:	b	1ef94 <__assert_fail@plt+0xdb68>
   1ef94:	movw	r0, #1
   1ef98:	and	r0, r0, #1
   1ef9c:	strb	r0, [sp, #7]
   1efa0:	b	1efb0 <__assert_fail@plt+0xdb84>
   1efa4:	movw	r0, #0
   1efa8:	and	r0, r0, #1
   1efac:	strb	r0, [sp, #7]
   1efb0:	ldrb	r0, [sp, #7]
   1efb4:	and	r0, r0, #1
   1efb8:	add	sp, sp, #8
   1efbc:	bx	lr
   1efc0:	sub	sp, sp, #8
   1efc4:	str	r0, [sp]
   1efc8:	ldr	r0, [sp]
   1efcc:	sub	r0, r0, #97	; 0x61
   1efd0:	cmp	r0, #25
   1efd4:	bhi	1efec <__assert_fail@plt+0xdbc0>
   1efd8:	b	1efdc <__assert_fail@plt+0xdbb0>
   1efdc:	movw	r0, #1
   1efe0:	and	r0, r0, #1
   1efe4:	strb	r0, [sp, #7]
   1efe8:	b	1eff8 <__assert_fail@plt+0xdbcc>
   1efec:	movw	r0, #0
   1eff0:	and	r0, r0, #1
   1eff4:	strb	r0, [sp, #7]
   1eff8:	ldrb	r0, [sp, #7]
   1effc:	and	r0, r0, #1
   1f000:	add	sp, sp, #8
   1f004:	bx	lr
   1f008:	sub	sp, sp, #8
   1f00c:	str	r0, [sp]
   1f010:	ldr	r0, [sp]
   1f014:	sub	r0, r0, #32
   1f018:	cmp	r0, #94	; 0x5e
   1f01c:	bhi	1f034 <__assert_fail@plt+0xdc08>
   1f020:	b	1f024 <__assert_fail@plt+0xdbf8>
   1f024:	movw	r0, #1
   1f028:	and	r0, r0, #1
   1f02c:	strb	r0, [sp, #7]
   1f030:	b	1f040 <__assert_fail@plt+0xdc14>
   1f034:	movw	r0, #0
   1f038:	and	r0, r0, #1
   1f03c:	strb	r0, [sp, #7]
   1f040:	ldrb	r0, [sp, #7]
   1f044:	and	r0, r0, #1
   1f048:	add	sp, sp, #8
   1f04c:	bx	lr
   1f050:	sub	sp, sp, #12
   1f054:	str	r0, [sp, #4]
   1f058:	ldr	r0, [sp, #4]
   1f05c:	sub	r0, r0, #33	; 0x21
   1f060:	cmp	r0, #93	; 0x5d
   1f064:	str	r0, [sp]
   1f068:	bhi	1f204 <__assert_fail@plt+0xddd8>
   1f06c:	add	r0, pc, #8
   1f070:	ldr	r1, [sp]
   1f074:	ldr	r0, [r0, r1, lsl #2]
   1f078:	mov	pc, r0
   1f07c:	strdeq	pc, [r1], -r4
   1f080:	strdeq	pc, [r1], -r4
   1f084:	strdeq	pc, [r1], -r4
   1f088:	strdeq	pc, [r1], -r4
   1f08c:	strdeq	pc, [r1], -r4
   1f090:	strdeq	pc, [r1], -r4
   1f094:	strdeq	pc, [r1], -r4
   1f098:	strdeq	pc, [r1], -r4
   1f09c:	strdeq	pc, [r1], -r4
   1f0a0:	strdeq	pc, [r1], -r4
   1f0a4:	strdeq	pc, [r1], -r4
   1f0a8:	strdeq	pc, [r1], -r4
   1f0ac:	strdeq	pc, [r1], -r4
   1f0b0:	strdeq	pc, [r1], -r4
   1f0b4:	strdeq	pc, [r1], -r4
   1f0b8:	andeq	pc, r1, r4, lsl #4
   1f0bc:	andeq	pc, r1, r4, lsl #4
   1f0c0:	andeq	pc, r1, r4, lsl #4
   1f0c4:	andeq	pc, r1, r4, lsl #4
   1f0c8:	andeq	pc, r1, r4, lsl #4
   1f0cc:	andeq	pc, r1, r4, lsl #4
   1f0d0:	andeq	pc, r1, r4, lsl #4
   1f0d4:	andeq	pc, r1, r4, lsl #4
   1f0d8:	andeq	pc, r1, r4, lsl #4
   1f0dc:	andeq	pc, r1, r4, lsl #4
   1f0e0:	strdeq	pc, [r1], -r4
   1f0e4:	strdeq	pc, [r1], -r4
   1f0e8:	strdeq	pc, [r1], -r4
   1f0ec:	strdeq	pc, [r1], -r4
   1f0f0:	strdeq	pc, [r1], -r4
   1f0f4:	strdeq	pc, [r1], -r4
   1f0f8:	strdeq	pc, [r1], -r4
   1f0fc:	andeq	pc, r1, r4, lsl #4
   1f100:	andeq	pc, r1, r4, lsl #4
   1f104:	andeq	pc, r1, r4, lsl #4
   1f108:	andeq	pc, r1, r4, lsl #4
   1f10c:	andeq	pc, r1, r4, lsl #4
   1f110:	andeq	pc, r1, r4, lsl #4
   1f114:	andeq	pc, r1, r4, lsl #4
   1f118:	andeq	pc, r1, r4, lsl #4
   1f11c:	andeq	pc, r1, r4, lsl #4
   1f120:	andeq	pc, r1, r4, lsl #4
   1f124:	andeq	pc, r1, r4, lsl #4
   1f128:	andeq	pc, r1, r4, lsl #4
   1f12c:	andeq	pc, r1, r4, lsl #4
   1f130:	andeq	pc, r1, r4, lsl #4
   1f134:	andeq	pc, r1, r4, lsl #4
   1f138:	andeq	pc, r1, r4, lsl #4
   1f13c:	andeq	pc, r1, r4, lsl #4
   1f140:	andeq	pc, r1, r4, lsl #4
   1f144:	andeq	pc, r1, r4, lsl #4
   1f148:	andeq	pc, r1, r4, lsl #4
   1f14c:	andeq	pc, r1, r4, lsl #4
   1f150:	andeq	pc, r1, r4, lsl #4
   1f154:	andeq	pc, r1, r4, lsl #4
   1f158:	andeq	pc, r1, r4, lsl #4
   1f15c:	andeq	pc, r1, r4, lsl #4
   1f160:	andeq	pc, r1, r4, lsl #4
   1f164:	strdeq	pc, [r1], -r4
   1f168:	strdeq	pc, [r1], -r4
   1f16c:	strdeq	pc, [r1], -r4
   1f170:	strdeq	pc, [r1], -r4
   1f174:	strdeq	pc, [r1], -r4
   1f178:	strdeq	pc, [r1], -r4
   1f17c:	andeq	pc, r1, r4, lsl #4
   1f180:	andeq	pc, r1, r4, lsl #4
   1f184:	andeq	pc, r1, r4, lsl #4
   1f188:	andeq	pc, r1, r4, lsl #4
   1f18c:	andeq	pc, r1, r4, lsl #4
   1f190:	andeq	pc, r1, r4, lsl #4
   1f194:	andeq	pc, r1, r4, lsl #4
   1f198:	andeq	pc, r1, r4, lsl #4
   1f19c:	andeq	pc, r1, r4, lsl #4
   1f1a0:	andeq	pc, r1, r4, lsl #4
   1f1a4:	andeq	pc, r1, r4, lsl #4
   1f1a8:	andeq	pc, r1, r4, lsl #4
   1f1ac:	andeq	pc, r1, r4, lsl #4
   1f1b0:	andeq	pc, r1, r4, lsl #4
   1f1b4:	andeq	pc, r1, r4, lsl #4
   1f1b8:	andeq	pc, r1, r4, lsl #4
   1f1bc:	andeq	pc, r1, r4, lsl #4
   1f1c0:	andeq	pc, r1, r4, lsl #4
   1f1c4:	andeq	pc, r1, r4, lsl #4
   1f1c8:	andeq	pc, r1, r4, lsl #4
   1f1cc:	andeq	pc, r1, r4, lsl #4
   1f1d0:	andeq	pc, r1, r4, lsl #4
   1f1d4:	andeq	pc, r1, r4, lsl #4
   1f1d8:	andeq	pc, r1, r4, lsl #4
   1f1dc:	andeq	pc, r1, r4, lsl #4
   1f1e0:	andeq	pc, r1, r4, lsl #4
   1f1e4:	strdeq	pc, [r1], -r4
   1f1e8:	strdeq	pc, [r1], -r4
   1f1ec:	strdeq	pc, [r1], -r4
   1f1f0:	strdeq	pc, [r1], -r4
   1f1f4:	movw	r0, #1
   1f1f8:	and	r0, r0, #1
   1f1fc:	strb	r0, [sp, #11]
   1f200:	b	1f210 <__assert_fail@plt+0xdde4>
   1f204:	movw	r0, #0
   1f208:	and	r0, r0, #1
   1f20c:	strb	r0, [sp, #11]
   1f210:	ldrb	r0, [sp, #11]
   1f214:	and	r0, r0, #1
   1f218:	add	sp, sp, #12
   1f21c:	bx	lr
   1f220:	sub	sp, sp, #12
   1f224:	str	r0, [sp, #4]
   1f228:	ldr	r0, [sp, #4]
   1f22c:	sub	r1, r0, #9
   1f230:	cmp	r1, #5
   1f234:	str	r0, [sp]
   1f238:	bcc	1f250 <__assert_fail@plt+0xde24>
   1f23c:	b	1f240 <__assert_fail@plt+0xde14>
   1f240:	ldr	r0, [sp]
   1f244:	cmp	r0, #32
   1f248:	bne	1f260 <__assert_fail@plt+0xde34>
   1f24c:	b	1f250 <__assert_fail@plt+0xde24>
   1f250:	movw	r0, #1
   1f254:	and	r0, r0, #1
   1f258:	strb	r0, [sp, #11]
   1f25c:	b	1f26c <__assert_fail@plt+0xde40>
   1f260:	movw	r0, #0
   1f264:	and	r0, r0, #1
   1f268:	strb	r0, [sp, #11]
   1f26c:	ldrb	r0, [sp, #11]
   1f270:	and	r0, r0, #1
   1f274:	add	sp, sp, #12
   1f278:	bx	lr
   1f27c:	sub	sp, sp, #8
   1f280:	str	r0, [sp]
   1f284:	ldr	r0, [sp]
   1f288:	sub	r0, r0, #65	; 0x41
   1f28c:	cmp	r0, #25
   1f290:	bhi	1f2a8 <__assert_fail@plt+0xde7c>
   1f294:	b	1f298 <__assert_fail@plt+0xde6c>
   1f298:	movw	r0, #1
   1f29c:	and	r0, r0, #1
   1f2a0:	strb	r0, [sp, #7]
   1f2a4:	b	1f2b4 <__assert_fail@plt+0xde88>
   1f2a8:	movw	r0, #0
   1f2ac:	and	r0, r0, #1
   1f2b0:	strb	r0, [sp, #7]
   1f2b4:	ldrb	r0, [sp, #7]
   1f2b8:	and	r0, r0, #1
   1f2bc:	add	sp, sp, #8
   1f2c0:	bx	lr
   1f2c4:	sub	sp, sp, #12
   1f2c8:	str	r0, [sp, #4]
   1f2cc:	ldr	r0, [sp, #4]
   1f2d0:	sub	r1, r0, #48	; 0x30
   1f2d4:	cmp	r1, #10
   1f2d8:	str	r0, [sp]
   1f2dc:	bcc	1f30c <__assert_fail@plt+0xdee0>
   1f2e0:	b	1f2e4 <__assert_fail@plt+0xdeb8>
   1f2e4:	ldr	r0, [sp]
   1f2e8:	sub	r1, r0, #65	; 0x41
   1f2ec:	cmp	r1, #6
   1f2f0:	bcc	1f30c <__assert_fail@plt+0xdee0>
   1f2f4:	b	1f2f8 <__assert_fail@plt+0xdecc>
   1f2f8:	ldr	r0, [sp]
   1f2fc:	sub	r1, r0, #97	; 0x61
   1f300:	cmp	r1, #5
   1f304:	bhi	1f31c <__assert_fail@plt+0xdef0>
   1f308:	b	1f30c <__assert_fail@plt+0xdee0>
   1f30c:	movw	r0, #1
   1f310:	and	r0, r0, #1
   1f314:	strb	r0, [sp, #11]
   1f318:	b	1f328 <__assert_fail@plt+0xdefc>
   1f31c:	movw	r0, #0
   1f320:	and	r0, r0, #1
   1f324:	strb	r0, [sp, #11]
   1f328:	ldrb	r0, [sp, #11]
   1f32c:	and	r0, r0, #1
   1f330:	add	sp, sp, #12
   1f334:	bx	lr
   1f338:	sub	sp, sp, #8
   1f33c:	str	r0, [sp]
   1f340:	ldr	r0, [sp]
   1f344:	sub	r0, r0, #65	; 0x41
   1f348:	cmp	r0, #25
   1f34c:	bhi	1f368 <__assert_fail@plt+0xdf3c>
   1f350:	b	1f354 <__assert_fail@plt+0xdf28>
   1f354:	ldr	r0, [sp]
   1f358:	sub	r0, r0, #65	; 0x41
   1f35c:	add	r0, r0, #97	; 0x61
   1f360:	str	r0, [sp, #4]
   1f364:	b	1f370 <__assert_fail@plt+0xdf44>
   1f368:	ldr	r0, [sp]
   1f36c:	str	r0, [sp, #4]
   1f370:	ldr	r0, [sp, #4]
   1f374:	add	sp, sp, #8
   1f378:	bx	lr
   1f37c:	sub	sp, sp, #8
   1f380:	str	r0, [sp]
   1f384:	ldr	r0, [sp]
   1f388:	sub	r0, r0, #97	; 0x61
   1f38c:	cmp	r0, #25
   1f390:	bhi	1f3ac <__assert_fail@plt+0xdf80>
   1f394:	b	1f398 <__assert_fail@plt+0xdf6c>
   1f398:	ldr	r0, [sp]
   1f39c:	sub	r0, r0, #97	; 0x61
   1f3a0:	add	r0, r0, #65	; 0x41
   1f3a4:	str	r0, [sp, #4]
   1f3a8:	b	1f3b4 <__assert_fail@plt+0xdf88>
   1f3ac:	ldr	r0, [sp]
   1f3b0:	str	r0, [sp, #4]
   1f3b4:	ldr	r0, [sp, #4]
   1f3b8:	add	sp, sp, #8
   1f3bc:	bx	lr
   1f3c0:	push	{fp, lr}
   1f3c4:	mov	fp, sp
   1f3c8:	sub	sp, sp, #40	; 0x28
   1f3cc:	str	r0, [fp, #-4]
   1f3d0:	str	r1, [fp, #-8]
   1f3d4:	str	r2, [fp, #-12]
   1f3d8:	str	r3, [fp, #-16]
   1f3dc:	movw	r0, #0
   1f3e0:	str	r0, [sp, #20]
   1f3e4:	ldr	r0, [fp, #-16]
   1f3e8:	cmn	r0, #1
   1f3ec:	beq	1f41c <__assert_fail@plt+0xdff0>
   1f3f0:	ldr	r0, [fp, #-4]
   1f3f4:	cmp	r0, #0
   1f3f8:	beq	1f410 <__assert_fail@plt+0xdfe4>
   1f3fc:	ldr	r0, [fp, #-16]
   1f400:	ldr	r1, [fp, #-8]
   1f404:	ldr	r2, [sp, #20]
   1f408:	add	r1, r1, r2, lsl #2
   1f40c:	str	r0, [r1]
   1f410:	ldr	r0, [sp, #20]
   1f414:	add	r0, r0, #1
   1f418:	str	r0, [sp, #20]
   1f41c:	bl	1133c <setgrent@plt>
   1f420:	bl	1130c <__errno_location@plt>
   1f424:	movw	lr, #0
   1f428:	str	lr, [r0]
   1f42c:	bl	11348 <getgrent@plt>
   1f430:	str	r0, [sp, #12]
   1f434:	ldr	r0, [sp, #12]
   1f438:	movw	lr, #0
   1f43c:	cmp	r0, lr
   1f440:	bne	1f448 <__assert_fail@plt+0xe01c>
   1f444:	b	1f570 <__assert_fail@plt+0xe144>
   1f448:	ldr	r0, [sp, #12]
   1f44c:	ldr	r0, [r0, #12]
   1f450:	str	r0, [sp, #16]
   1f454:	ldr	r0, [sp, #16]
   1f458:	ldr	r0, [r0]
   1f45c:	movw	r1, #0
   1f460:	cmp	r0, r1
   1f464:	beq	1f56c <__assert_fail@plt+0xe140>
   1f468:	ldr	r0, [fp, #-12]
   1f46c:	ldr	r1, [sp, #16]
   1f470:	ldr	r1, [r1]
   1f474:	bl	1115c <strcmp@plt>
   1f478:	cmp	r0, #0
   1f47c:	beq	1f484 <__assert_fail@plt+0xe058>
   1f480:	b	1f55c <__assert_fail@plt+0xe130>
   1f484:	movw	r0, #0
   1f488:	str	r0, [sp, #8]
   1f48c:	ldr	r0, [sp, #8]
   1f490:	ldr	r1, [sp, #20]
   1f494:	cmp	r0, r1
   1f498:	bge	1f4e4 <__assert_fail@plt+0xe0b8>
   1f49c:	ldr	r0, [fp, #-8]
   1f4a0:	movw	r1, #0
   1f4a4:	cmp	r0, r1
   1f4a8:	beq	1f4d0 <__assert_fail@plt+0xe0a4>
   1f4ac:	ldr	r0, [fp, #-8]
   1f4b0:	ldr	r1, [sp, #8]
   1f4b4:	add	r0, r0, r1, lsl #2
   1f4b8:	ldr	r0, [r0]
   1f4bc:	ldr	r1, [sp, #12]
   1f4c0:	ldr	r1, [r1, #8]
   1f4c4:	cmp	r0, r1
   1f4c8:	bne	1f4d0 <__assert_fail@plt+0xe0a4>
   1f4cc:	b	1f4e4 <__assert_fail@plt+0xe0b8>
   1f4d0:	b	1f4d4 <__assert_fail@plt+0xe0a8>
   1f4d4:	ldr	r0, [sp, #8]
   1f4d8:	add	r0, r0, #1
   1f4dc:	str	r0, [sp, #8]
   1f4e0:	b	1f48c <__assert_fail@plt+0xe060>
   1f4e4:	ldr	r0, [sp, #8]
   1f4e8:	ldr	r1, [sp, #20]
   1f4ec:	cmp	r0, r1
   1f4f0:	bne	1f558 <__assert_fail@plt+0xe12c>
   1f4f4:	ldr	r0, [fp, #-4]
   1f4f8:	cmp	r0, #0
   1f4fc:	beq	1f52c <__assert_fail@plt+0xe100>
   1f500:	ldr	r0, [sp, #20]
   1f504:	ldr	r1, [fp, #-4]
   1f508:	cmp	r0, r1
   1f50c:	blt	1f514 <__assert_fail@plt+0xe0e8>
   1f510:	b	1f58c <__assert_fail@plt+0xe160>
   1f514:	ldr	r0, [sp, #12]
   1f518:	ldr	r0, [r0, #8]
   1f51c:	ldr	r1, [fp, #-8]
   1f520:	ldr	r2, [sp, #20]
   1f524:	add	r1, r1, r2, lsl #2
   1f528:	str	r0, [r1]
   1f52c:	ldr	r0, [pc, #136]	; 1f5bc <__assert_fail@plt+0xe190>
   1f530:	ldr	r1, [sp, #20]
   1f534:	cmp	r1, r0
   1f538:	bne	1f54c <__assert_fail@plt+0xe120>
   1f53c:	bl	1130c <__errno_location@plt>
   1f540:	movw	lr, #75	; 0x4b
   1f544:	str	lr, [r0]
   1f548:	b	1f58c <__assert_fail@plt+0xe160>
   1f54c:	ldr	r0, [sp, #20]
   1f550:	add	r0, r0, #1
   1f554:	str	r0, [sp, #20]
   1f558:	b	1f55c <__assert_fail@plt+0xe130>
   1f55c:	ldr	r0, [sp, #16]
   1f560:	add	r0, r0, #4
   1f564:	str	r0, [sp, #16]
   1f568:	b	1f454 <__assert_fail@plt+0xe028>
   1f56c:	b	1f420 <__assert_fail@plt+0xdff4>
   1f570:	bl	1130c <__errno_location@plt>
   1f574:	ldr	r0, [r0]
   1f578:	cmp	r0, #0
   1f57c:	beq	1f588 <__assert_fail@plt+0xe15c>
   1f580:	mvn	r0, #0
   1f584:	str	r0, [sp, #20]
   1f588:	b	1f58c <__assert_fail@plt+0xe160>
   1f58c:	bl	1130c <__errno_location@plt>
   1f590:	ldr	r0, [r0]
   1f594:	str	r0, [sp, #4]
   1f598:	bl	1112c <endgrent@plt>
   1f59c:	ldr	r0, [sp, #4]
   1f5a0:	str	r0, [sp]
   1f5a4:	bl	1130c <__errno_location@plt>
   1f5a8:	ldr	lr, [sp]
   1f5ac:	str	lr, [r0]
   1f5b0:	ldr	r0, [sp, #20]
   1f5b4:	mov	sp, fp
   1f5b8:	pop	{fp, pc}
   1f5bc:	svcvc	0x00ffffff
   1f5c0:	push	{r4, r5, fp, lr}
   1f5c4:	add	fp, sp, #8
   1f5c8:	sub	sp, sp, #272	; 0x110
   1f5cc:	add	r1, sp, #7
   1f5d0:	str	r0, [fp, #-16]
   1f5d4:	ldr	r0, [fp, #-16]
   1f5d8:	movw	r2, #257	; 0x101
   1f5dc:	bl	1f65c <__assert_fail@plt+0xe230>
   1f5e0:	cmp	r0, #0
   1f5e4:	beq	1f5f8 <__assert_fail@plt+0xe1cc>
   1f5e8:	movw	r0, #0
   1f5ec:	and	r0, r0, #1
   1f5f0:	strb	r0, [fp, #-9]
   1f5f4:	b	1f64c <__assert_fail@plt+0xe220>
   1f5f8:	add	r0, sp, #7
   1f5fc:	movw	r1, #1429	; 0x595
   1f600:	movt	r1, #2
   1f604:	bl	1115c <strcmp@plt>
   1f608:	cmp	r0, #0
   1f60c:	movw	r0, #1
   1f610:	str	r0, [sp]
   1f614:	beq	1f638 <__assert_fail@plt+0xe20c>
   1f618:	add	r0, sp, #7
   1f61c:	movw	r1, #1431	; 0x597
   1f620:	movt	r1, #2
   1f624:	bl	1115c <strcmp@plt>
   1f628:	cmp	r0, #0
   1f62c:	movw	r0, #0
   1f630:	moveq	r0, #1
   1f634:	str	r0, [sp]
   1f638:	ldr	r0, [sp]
   1f63c:	mvn	r1, #0
   1f640:	eor	r0, r0, r1
   1f644:	and	r0, r0, #1
   1f648:	strb	r0, [fp, #-9]
   1f64c:	ldrb	r0, [fp, #-9]
   1f650:	and	r0, r0, #1
   1f654:	sub	sp, fp, #8
   1f658:	pop	{r4, r5, fp, pc}
   1f65c:	push	{fp, lr}
   1f660:	mov	fp, sp
   1f664:	sub	sp, sp, #16
   1f668:	str	r0, [fp, #-4]
   1f66c:	str	r1, [sp, #8]
   1f670:	str	r2, [sp, #4]
   1f674:	ldr	r0, [fp, #-4]
   1f678:	ldr	r1, [sp, #8]
   1f67c:	ldr	r2, [sp, #4]
   1f680:	bl	1f68c <__assert_fail@plt+0xe260>
   1f684:	mov	sp, fp
   1f688:	pop	{fp, pc}
   1f68c:	push	{fp, lr}
   1f690:	mov	fp, sp
   1f694:	sub	sp, sp, #24
   1f698:	str	r0, [fp, #-8]
   1f69c:	str	r1, [sp, #12]
   1f6a0:	str	r2, [sp, #8]
   1f6a4:	ldr	r0, [fp, #-8]
   1f6a8:	bl	1f78c <__assert_fail@plt+0xe360>
   1f6ac:	str	r0, [sp, #4]
   1f6b0:	ldr	r0, [sp, #4]
   1f6b4:	movw	r1, #0
   1f6b8:	cmp	r0, r1
   1f6bc:	bne	1f6e4 <__assert_fail@plt+0xe2b8>
   1f6c0:	ldr	r0, [sp, #8]
   1f6c4:	cmp	r0, #0
   1f6c8:	bls	1f6d8 <__assert_fail@plt+0xe2ac>
   1f6cc:	ldr	r0, [sp, #12]
   1f6d0:	movw	r1, #0
   1f6d4:	strb	r1, [r0]
   1f6d8:	movw	r0, #22
   1f6dc:	str	r0, [fp, #-4]
   1f6e0:	b	1f760 <__assert_fail@plt+0xe334>
   1f6e4:	ldr	r0, [sp, #4]
   1f6e8:	bl	112e8 <strlen@plt>
   1f6ec:	str	r0, [sp]
   1f6f0:	ldr	r0, [sp]
   1f6f4:	ldr	lr, [sp, #8]
   1f6f8:	cmp	r0, lr
   1f6fc:	bcs	1f720 <__assert_fail@plt+0xe2f4>
   1f700:	ldr	r0, [sp, #12]
   1f704:	ldr	r1, [sp, #4]
   1f708:	ldr	r2, [sp]
   1f70c:	add	r2, r2, #1
   1f710:	bl	111a4 <memcpy@plt>
   1f714:	movw	r0, #0
   1f718:	str	r0, [fp, #-4]
   1f71c:	b	1f760 <__assert_fail@plt+0xe334>
   1f720:	ldr	r0, [sp, #8]
   1f724:	cmp	r0, #0
   1f728:	bls	1f758 <__assert_fail@plt+0xe32c>
   1f72c:	ldr	r0, [sp, #12]
   1f730:	ldr	r1, [sp, #4]
   1f734:	ldr	r2, [sp, #8]
   1f738:	sub	r2, r2, #1
   1f73c:	bl	111a4 <memcpy@plt>
   1f740:	ldr	r0, [sp, #12]
   1f744:	ldr	r1, [sp, #8]
   1f748:	sub	r1, r1, #1
   1f74c:	add	r0, r0, r1
   1f750:	movw	r1, #0
   1f754:	strb	r1, [r0]
   1f758:	movw	r0, #34	; 0x22
   1f75c:	str	r0, [fp, #-4]
   1f760:	ldr	r0, [fp, #-4]
   1f764:	mov	sp, fp
   1f768:	pop	{fp, pc}
   1f76c:	push	{fp, lr}
   1f770:	mov	fp, sp
   1f774:	sub	sp, sp, #8
   1f778:	str	r0, [sp, #4]
   1f77c:	ldr	r0, [sp, #4]
   1f780:	bl	1f78c <__assert_fail@plt+0xe360>
   1f784:	mov	sp, fp
   1f788:	pop	{fp, pc}
   1f78c:	push	{fp, lr}
   1f790:	mov	fp, sp
   1f794:	sub	sp, sp, #8
   1f798:	str	r0, [sp, #4]
   1f79c:	ldr	r0, [sp, #4]
   1f7a0:	movw	r1, #0
   1f7a4:	bl	11390 <setlocale@plt>
   1f7a8:	str	r0, [sp]
   1f7ac:	ldr	r0, [sp]
   1f7b0:	mov	sp, fp
   1f7b4:	pop	{fp, pc}
   1f7b8:	cmp	r3, #0
   1f7bc:	cmpeq	r2, #0
   1f7c0:	bne	1f7e4 <__assert_fail@plt+0xe3b8>
   1f7c4:	cmp	r1, #0
   1f7c8:	movlt	r1, #-2147483648	; 0x80000000
   1f7cc:	movlt	r0, #0
   1f7d0:	blt	1f7e0 <__assert_fail@plt+0xe3b4>
   1f7d4:	cmpeq	r0, #0
   1f7d8:	mvnne	r1, #-2147483648	; 0x80000000
   1f7dc:	mvnne	r0, #0
   1f7e0:	b	1f8c8 <__assert_fail@plt+0xe49c>
   1f7e4:	sub	sp, sp, #8
   1f7e8:	push	{sp, lr}
   1f7ec:	cmp	r1, #0
   1f7f0:	blt	1f810 <__assert_fail@plt+0xe3e4>
   1f7f4:	cmp	r3, #0
   1f7f8:	blt	1f844 <__assert_fail@plt+0xe418>
   1f7fc:	bl	1f8d8 <__assert_fail@plt+0xe4ac>
   1f800:	ldr	lr, [sp, #4]
   1f804:	add	sp, sp, #8
   1f808:	pop	{r2, r3}
   1f80c:	bx	lr
   1f810:	rsbs	r0, r0, #0
   1f814:	sbc	r1, r1, r1, lsl #1
   1f818:	cmp	r3, #0
   1f81c:	blt	1f868 <__assert_fail@plt+0xe43c>
   1f820:	bl	1f8d8 <__assert_fail@plt+0xe4ac>
   1f824:	ldr	lr, [sp, #4]
   1f828:	add	sp, sp, #8
   1f82c:	pop	{r2, r3}
   1f830:	rsbs	r0, r0, #0
   1f834:	sbc	r1, r1, r1, lsl #1
   1f838:	rsbs	r2, r2, #0
   1f83c:	sbc	r3, r3, r3, lsl #1
   1f840:	bx	lr
   1f844:	rsbs	r2, r2, #0
   1f848:	sbc	r3, r3, r3, lsl #1
   1f84c:	bl	1f8d8 <__assert_fail@plt+0xe4ac>
   1f850:	ldr	lr, [sp, #4]
   1f854:	add	sp, sp, #8
   1f858:	pop	{r2, r3}
   1f85c:	rsbs	r0, r0, #0
   1f860:	sbc	r1, r1, r1, lsl #1
   1f864:	bx	lr
   1f868:	rsbs	r2, r2, #0
   1f86c:	sbc	r3, r3, r3, lsl #1
   1f870:	bl	1f8d8 <__assert_fail@plt+0xe4ac>
   1f874:	ldr	lr, [sp, #4]
   1f878:	add	sp, sp, #8
   1f87c:	pop	{r2, r3}
   1f880:	rsbs	r2, r2, #0
   1f884:	sbc	r3, r3, r3, lsl #1
   1f888:	bx	lr
   1f88c:	cmp	r3, #0
   1f890:	cmpeq	r2, #0
   1f894:	bne	1f8ac <__assert_fail@plt+0xe480>
   1f898:	cmp	r1, #0
   1f89c:	cmpeq	r0, #0
   1f8a0:	mvnne	r1, #0
   1f8a4:	mvnne	r0, #0
   1f8a8:	b	1f8c8 <__assert_fail@plt+0xe49c>
   1f8ac:	sub	sp, sp, #8
   1f8b0:	push	{sp, lr}
   1f8b4:	bl	1f8d8 <__assert_fail@plt+0xe4ac>
   1f8b8:	ldr	lr, [sp, #4]
   1f8bc:	add	sp, sp, #8
   1f8c0:	pop	{r2, r3}
   1f8c4:	bx	lr
   1f8c8:	push	{r1, lr}
   1f8cc:	mov	r0, #8
   1f8d0:	bl	11144 <raise@plt>
   1f8d4:	pop	{r1, pc}
   1f8d8:	cmp	r1, r3
   1f8dc:	cmpeq	r0, r2
   1f8e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f8e4:	mov	r4, r0
   1f8e8:	movcc	r0, #0
   1f8ec:	mov	r5, r1
   1f8f0:	ldr	lr, [sp, #36]	; 0x24
   1f8f4:	movcc	r1, r0
   1f8f8:	bcc	1f9f4 <__assert_fail@plt+0xe5c8>
   1f8fc:	cmp	r3, #0
   1f900:	clzeq	ip, r2
   1f904:	clzne	ip, r3
   1f908:	addeq	ip, ip, #32
   1f90c:	cmp	r5, #0
   1f910:	clzeq	r1, r4
   1f914:	addeq	r1, r1, #32
   1f918:	clzne	r1, r5
   1f91c:	sub	ip, ip, r1
   1f920:	sub	sl, ip, #32
   1f924:	lsl	r9, r3, ip
   1f928:	rsb	fp, ip, #32
   1f92c:	orr	r9, r9, r2, lsl sl
   1f930:	orr	r9, r9, r2, lsr fp
   1f934:	lsl	r8, r2, ip
   1f938:	cmp	r5, r9
   1f93c:	cmpeq	r4, r8
   1f940:	movcc	r0, #0
   1f944:	movcc	r1, r0
   1f948:	bcc	1f964 <__assert_fail@plt+0xe538>
   1f94c:	mov	r0, #1
   1f950:	subs	r4, r4, r8
   1f954:	lsl	r1, r0, sl
   1f958:	orr	r1, r1, r0, lsr fp
   1f95c:	lsl	r0, r0, ip
   1f960:	sbc	r5, r5, r9
   1f964:	cmp	ip, #0
   1f968:	beq	1f9f4 <__assert_fail@plt+0xe5c8>
   1f96c:	lsr	r6, r8, #1
   1f970:	orr	r6, r6, r9, lsl #31
   1f974:	lsr	r7, r9, #1
   1f978:	mov	r2, ip
   1f97c:	b	1f9a0 <__assert_fail@plt+0xe574>
   1f980:	subs	r3, r4, r6
   1f984:	sbc	r8, r5, r7
   1f988:	adds	r3, r3, r3
   1f98c:	adc	r8, r8, r8
   1f990:	adds	r4, r3, #1
   1f994:	adc	r5, r8, #0
   1f998:	subs	r2, r2, #1
   1f99c:	beq	1f9bc <__assert_fail@plt+0xe590>
   1f9a0:	cmp	r5, r7
   1f9a4:	cmpeq	r4, r6
   1f9a8:	bcs	1f980 <__assert_fail@plt+0xe554>
   1f9ac:	adds	r4, r4, r4
   1f9b0:	adc	r5, r5, r5
   1f9b4:	subs	r2, r2, #1
   1f9b8:	bne	1f9a0 <__assert_fail@plt+0xe574>
   1f9bc:	lsr	r3, r4, ip
   1f9c0:	orr	r3, r3, r5, lsl fp
   1f9c4:	lsr	r2, r5, ip
   1f9c8:	orr	r3, r3, r5, lsr sl
   1f9cc:	adds	r0, r0, r4
   1f9d0:	mov	r4, r3
   1f9d4:	lsl	r3, r2, ip
   1f9d8:	orr	r3, r3, r4, lsl sl
   1f9dc:	lsl	ip, r4, ip
   1f9e0:	orr	r3, r3, r4, lsr fp
   1f9e4:	adc	r1, r1, r5
   1f9e8:	subs	r0, r0, ip
   1f9ec:	mov	r5, r2
   1f9f0:	sbc	r1, r1, r3
   1f9f4:	cmp	lr, #0
   1f9f8:	strdne	r4, [lr]
   1f9fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fa00:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1fa04:	mov	r7, r0
   1fa08:	ldr	r6, [pc, #72]	; 1fa58 <__assert_fail@plt+0xe62c>
   1fa0c:	ldr	r5, [pc, #72]	; 1fa5c <__assert_fail@plt+0xe630>
   1fa10:	add	r6, pc, r6
   1fa14:	add	r5, pc, r5
   1fa18:	sub	r6, r6, r5
   1fa1c:	mov	r8, r1
   1fa20:	mov	r9, r2
   1fa24:	bl	11100 <calloc@plt-0x20>
   1fa28:	asrs	r6, r6, #2
   1fa2c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1fa30:	mov	r4, #0
   1fa34:	add	r4, r4, #1
   1fa38:	ldr	r3, [r5], #4
   1fa3c:	mov	r2, r9
   1fa40:	mov	r1, r8
   1fa44:	mov	r0, r7
   1fa48:	blx	r3
   1fa4c:	cmp	r6, r4
   1fa50:	bne	1fa34 <__assert_fail@plt+0xe608>
   1fa54:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1fa58:	strdeq	r1, [r1], -r4
   1fa5c:	andeq	r1, r1, ip, ror #9
   1fa60:	bx	lr
   1fa64:	ldr	r3, [pc, #12]	; 1fa78 <__assert_fail@plt+0xe64c>
   1fa68:	mov	r1, #0
   1fa6c:	add	r3, pc, r3
   1fa70:	ldr	r2, [r3]
   1fa74:	b	11318 <__cxa_atexit@plt>
   1fa78:	andeq	r1, r1, r8, lsr #13

Disassembly of section .fini:

0001fa7c <.fini>:
   1fa7c:	push	{r3, lr}
   1fa80:	pop	{r3, pc}
