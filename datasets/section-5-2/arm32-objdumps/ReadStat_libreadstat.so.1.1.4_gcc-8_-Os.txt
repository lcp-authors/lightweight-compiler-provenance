
../repos/ReadStat/.libs/libreadstat.so.1.1.4:     file format elf32-littlearm


Disassembly of section .init:

00003d40 <_init>:
    3d40:	push	{r3, lr}
    3d44:	bl	4588 <call_weak_fn>
    3d48:	pop	{r3, pc}

Disassembly of section .plt:

00003d4c <.plt>:
    3d4c:	push	{lr}		; (str lr, [sp, #-4]!)
    3d50:	ldr	lr, [pc, #4]	; 3d5c <.plt+0x10>
    3d54:	add	lr, pc, lr
    3d58:	ldr	pc, [lr, #8]!
    3d5c:	.word	0x0003c2a4

00003d60 <sas_validate_name@plt>:
    3d60:	add	ip, pc, #0, 12
    3d64:	add	ip, ip, #60, 20	; 0x3c000
    3d68:	ldr	pc, [ip, #676]!	; 0x2a4

00003d6c <calloc@plt>:
    3d6c:	add	ip, pc, #0, 12
    3d70:	add	ip, ip, #60, 20	; 0x3c000
    3d74:	ldr	pc, [ip, #668]!	; 0x29c

00003d78 <readstat_set_seek_handler@plt>:
    3d78:	add	ip, pc, #0, 12
    3d7c:	add	ip, ip, #60, 20	; 0x3c000
    3d80:	ldr	pc, [ip, #660]!	; 0x294

00003d84 <readstat_set_open_handler@plt>:
    3d84:	add	ip, pc, #0, 12
    3d88:	add	ip, ip, #60, 20	; 0x3c000
    3d8c:	ldr	pc, [ip, #652]!	; 0x28c

00003d90 <byteswap8@plt>:
    3d90:	add	ip, pc, #0, 12
    3d94:	add	ip, ip, #60, 20	; 0x3c000
    3d98:	ldr	pc, [ip, #644]!	; 0x284

00003d9c <raise@plt>:
    3d9c:	add	ip, pc, #0, 12
    3da0:	add	ip, ip, #60, 20	; 0x3c000
    3da4:	ldr	pc, [ip, #636]!	; 0x27c

00003da8 <byteswap4@plt>:
    3da8:	add	ip, pc, #0, 12
    3dac:	add	ip, ip, #60, 20	; 0x3c000
    3db0:	ldr	pc, [ip, #628]!	; 0x274

00003db4 <readstat_validate_metadata@plt>:
    3db4:	add	ip, pc, #0, 12
    3db8:	add	ip, ip, #60, 20	; 0x3c000
    3dbc:	ldr	pc, [ip, #620]!	; 0x26c

00003dc0 <readstat_sort_label_set@plt>:
    3dc0:	add	ip, pc, #0, 12
    3dc4:	add	ip, ip, #60, 20	; 0x3c000
    3dc8:	ldr	pc, [ip, #612]!	; 0x264

00003dcc <por_ctx_free@plt>:
    3dcc:	add	ip, pc, #0, 12
    3dd0:	add	ip, ip, #60, 20	; 0x3c000
    3dd4:	ldr	pc, [ip, #604]!	; 0x25c

00003dd8 <memreverse@plt>:
    3dd8:	add	ip, pc, #0, 12
    3ddc:	add	ip, ip, #60, 20	; 0x3c000
    3de0:	ldr	pc, [ip, #596]!	; 0x254

00003de4 <iconv_close@plt>:
    3de4:	add	ip, pc, #0, 12
    3de8:	add	ip, ip, #60, 20	; 0x3c000
    3dec:	ldr	pc, [ip, #588]!	; 0x24c

00003df0 <readstat_write_spaces@plt>:
    3df0:	add	ip, pc, #0, 12
    3df4:	add	ip, ip, #60, 20	; 0x3c000
    3df8:	ldr	pc, [ip, #580]!	; 0x244

00003dfc <iconv@plt>:
    3dfc:	add	ip, pc, #0, 12
    3e00:	add	ip, ip, #60, 20	; 0x3c000
    3e04:	ldr	pc, [ip, #572]!	; 0x23c

00003e08 <sav_parse_timestamp@plt>:
    3e08:	add	ip, pc, #0, 12
    3e0c:	add	ip, ip, #60, 20	; 0x3c000
    3e10:	ldr	pc, [ip, #564]!	; 0x234

00003e14 <strcmp@plt>:
    3e14:	add	ip, pc, #0, 12
    3e18:	add	ip, ip, #60, 20	; 0x3c000
    3e1c:	ldr	pc, [ip, #556]!	; 0x22c

00003e20 <__cxa_finalize@plt>:
    3e20:	add	ip, pc, #0, 12
    3e24:	add	ip, ip, #60, 20	; 0x3c000
    3e28:	ldr	pc, [ip, #548]!	; 0x224

00003e2c <ck_hash_table_wipe@plt>:
    3e2c:	add	ip, pc, #0, 12
    3e30:	add	ip, ip, #60, 20	; 0x3c000
    3e34:	ldr	pc, [ip, #540]!	; 0x21c

00003e38 <readstat_type_class@plt>:
    3e38:	add	ip, pc, #0, 12
    3e3c:	add	ip, ip, #60, 20	; 0x3c000
    3e40:	ldr	pc, [ip, #532]!	; 0x214

00003e44 <strtol@plt>:
    3e44:	add	ip, pc, #0, 12
    3e48:	add	ip, ip, #60, 20	; 0x3c000
    3e4c:	ldr	pc, [ip, #524]!	; 0x20c

00003e50 <read@plt>:
    3e50:	add	ip, pc, #0, 12
    3e54:	add	ip, ip, #60, 20	; 0x3c000
    3e58:	ldr	pc, [ip, #516]!	; 0x204

00003e5c <readstat_error_message@plt>:
    3e5c:	add	ip, pc, #0, 12
    3e60:	add	ip, ip, #60, 20	; 0x3c000
    3e64:	ldr	pc, [ip, #508]!	; 0x1fc

00003e68 <mktime@plt>:
    3e68:	add	ip, pc, #0, 12
    3e6c:	add	ip, ip, #60, 20	; 0x3c000
    3e70:	ldr	pc, [ip, #500]!	; 0x1f4

00003e74 <spss_alignment_from_readstat_alignment@plt>:
    3e74:	add	ip, pc, #0, 12
    3e78:	add	ip, ip, #60, 20	; 0x3c000
    3e7c:	ldr	pc, [ip, #492]!	; 0x1ec

00003e80 <readstat_copy@plt>:
    3e80:	add	ip, pc, #0, 12
    3e84:	add	ip, ip, #60, 20	; 0x3c000
    3e88:	ldr	pc, [ip, #484]!	; 0x1e4

00003e8c <dta_ctx_free@plt>:
    3e8c:	add	ip, pc, #0, 12
    3e90:	add	ip, ip, #60, 20	; 0x3c000
    3e94:	ldr	pc, [ip, #476]!	; 0x1dc

00003e98 <deflateBound@plt>:
    3e98:	add	ip, pc, #0, 12
    3e9c:	add	ip, ip, #60, 20	; 0x3c000
    3ea0:	ldr	pc, [ip, #468]!	; 0x1d4

00003ea4 <readstat_set_update_handler@plt>:
    3ea4:	add	ip, pc, #0, 12
    3ea8:	add	ip, ip, #60, 20	; 0x3c000
    3eac:	ldr	pc, [ip, #460]!	; 0x1cc

00003eb0 <memmove@plt>:
    3eb0:	add	ip, pc, #0, 12
    3eb4:	add	ip, ip, #60, 20	; 0x3c000
    3eb8:	ldr	pc, [ip, #452]!	; 0x1c4

00003ebc <byteswap2@plt>:
    3ebc:	add	ip, pc, #0, 12
    3ec0:	add	ip, ip, #60, 20	; 0x3c000
    3ec4:	ldr	pc, [ip, #444]!	; 0x1bc

00003ec8 <machine_is_little_endian@plt>:
    3ec8:	add	ip, pc, #0, 12
    3ecc:	add	ip, ip, #60, 20	; 0x3c000
    3ed0:	ldr	pc, [ip, #436]!	; 0x1b4

00003ed4 <free@plt>:
    3ed4:	add	ip, pc, #0, 12
    3ed8:	add	ip, ip, #60, 20	; 0x3c000
    3edc:	ldr	pc, [ip, #428]!	; 0x1ac

00003ee0 <readstat_value_is_system_missing@plt>:
    3ee0:	add	ip, pc, #0, 12
    3ee4:	add	ip, ip, #60, 20	; 0x3c000
    3ee8:	ldr	pc, [ip, #420]!	; 0x1a4

00003eec <sav_parse_time@plt>:
    3eec:	add	ip, pc, #0, 12
    3ef0:	add	ip, ip, #60, 20	; 0x3c000
    3ef4:	ldr	pc, [ip, #412]!	; 0x19c

00003ef8 <readstat_variable_get_format@plt>:
    3ef8:	add	ip, pc, #0, 12
    3efc:	add	ip, ip, #60, 20	; 0x3c000
    3f00:	ldr	pc, [ip, #404]!	; 0x194

00003f04 <readstat_value_is_defined_missing@plt>:
    3f04:	add	ip, pc, #0, 12
    3f08:	add	ip, ip, #60, 20	; 0x3c000
    3f0c:	ldr	pc, [ip, #396]!	; 0x18c

00003f10 <ones_to_twos_complement4@plt>:
    3f10:	add	ip, pc, #0, 12
    3f14:	add	ip, ip, #60, 20	; 0x3c000
    3f18:	ldr	pc, [ip, #388]!	; 0x184

00003f1c <ones_to_twos_complement2@plt>:
    3f1c:	add	ip, pc, #0, 12
    3f20:	add	ip, ip, #60, 20	; 0x3c000
    3f24:	ldr	pc, [ip, #380]!	; 0x17c

00003f28 <sav_ctx_free@plt>:
    3f28:	add	ip, pc, #0, 12
    3f2c:	add	ip, ip, #60, 20	; 0x3c000
    3f30:	ldr	pc, [ip, #372]!	; 0x174

00003f34 <memcpy@plt>:
    3f34:	add	ip, pc, #0, 12
    3f38:	add	ip, ip, #60, 20	; 0x3c000
    3f3c:	ldr	pc, [ip, #364]!	; 0x16c

00003f40 <spss_parse_format@plt>:
    3f40:	add	ip, pc, #0, 12
    3f44:	add	ip, ip, #60, 20	; 0x3c000
    3f48:	ldr	pc, [ip, #356]!	; 0x164

00003f4c <submit_columns@plt>:
    3f4c:	add	ip, pc, #0, 12
    3f50:	add	ip, ip, #60, 20	; 0x3c000
    3f54:	ldr	pc, [ip, #348]!	; 0x15c

00003f58 <readstat_variable_get_missing_range_lo@plt>:
    3f58:	add	ip, pc, #0, 12
    3f5c:	add	ip, ip, #60, 20	; 0x3c000
    3f60:	ldr	pc, [ip, #340]!	; 0x154

00003f64 <readstat_insert_string_ref@plt>:
    3f64:	add	ip, pc, #0, 12
    3f68:	add	ip, ip, #60, 20	; 0x3c000
    3f6c:	ldr	pc, [ip, #332]!	; 0x14c

00003f70 <time@plt>:
    3f70:	add	ip, pc, #0, 12
    3f74:	add	ip, ip, #60, 20	; 0x3c000
    3f78:	ldr	pc, [ip, #324]!	; 0x144

00003f7c <readstat_begin_writing_file@plt>:
    3f7c:	add	ip, pc, #0, 12
    3f80:	add	ip, ip, #60, 20	; 0x3c000
    3f84:	ldr	pc, [ip, #316]!	; 0x13c

00003f88 <lseek@plt>:
    3f88:	add	ip, pc, #0, 12
    3f8c:	add	ip, ip, #60, 20	; 0x3c000
    3f90:	ldr	pc, [ip, #308]!	; 0x134

00003f94 <unistd_io_init@plt>:
    3f94:	add	ip, pc, #0, 12
    3f98:	add	ip, ip, #60, 20	; 0x3c000
    3f9c:	ldr	pc, [ip, #300]!	; 0x12c

00003fa0 <pow@plt>:
    3fa0:	add	ip, pc, #0, 12
    3fa4:	add	ip, ip, #60, 20	; 0x3c000
    3fa8:	ldr	pc, [ip, #292]!	; 0x124

00003fac <uncompress@plt>:
    3fac:	add	ip, pc, #0, 12
    3fb0:	add	ip, ip, #60, 20	; 0x3c000
    3fb4:	ldr	pc, [ip, #284]!	; 0x11c

00003fb8 <memcmp@plt>:
    3fb8:	add	ip, pc, #0, 12
    3fbc:	add	ip, ip, #60, 20	; 0x3c000
    3fc0:	ldr	pc, [ip, #276]!	; 0x114

00003fc4 <readstat_string_value@plt>:
    3fc4:	add	ip, pc, #0, 12
    3fc8:	add	ip, ip, #60, 20	; 0x3c000
    3fcc:	ldr	pc, [ip, #268]!	; 0x10c

00003fd0 <readstat_schema_free@plt>:
    3fd0:	add	ip, pc, #0, 12
    3fd4:	add	ip, ip, #60, 20	; 0x3c000
    3fd8:	ldr	pc, [ip, #260]!	; 0x104

00003fdc <readstat_calloc@plt>:
    3fdc:	add	ip, pc, #0, 12
    3fe0:	add	ip, ip, #60, 20	; 0x3c000
    3fe4:	ldr	pc, [ip, #252]!	; 0xfc

00003fe8 <ck_str_hash_lookup@plt>:
    3fe8:	add	ip, pc, #0, 12
    3fec:	add	ip, ip, #60, 20	; 0x3c000
    3ff0:	ldr	pc, [ip, #244]!	; 0xf4

00003ff4 <sav_compressed_row_bound@plt>:
    3ff4:	add	ip, pc, #0, 12
    3ff8:	add	ip, ip, #60, 20	; 0x3c000
    3ffc:	ldr	pc, [ip, #236]!	; 0xec

00004000 <ck_hash_table_grow@plt>:
    4000:	add	ip, pc, #0, 12
    4004:	add	ip, ip, #60, 20	; 0x3c000
    4008:	ldr	pc, [ip, #228]!	; 0xe4

0000400c <realloc@plt>:
    400c:	add	ip, pc, #0, 12
    4010:	add	ip, ip, #60, 20	; 0x3c000
    4014:	ldr	pc, [ip, #220]!	; 0xdc

00004018 <cnxptiee@plt>:
    4018:	add	ip, pc, #0, 12
    401c:	add	ip, ip, #60, 20	; 0x3c000
    4020:	ldr	pc, [ip, #212]!	; 0xd4

00004024 <read_version_and_timestamp@plt>:
    4024:	add	ip, pc, #0, 12
    4028:	add	ip, ip, #60, 20	; 0x3c000
    402c:	ldr	pc, [ip, #204]!	; 0xcc

00004030 <readstat_write_zeros@plt>:
    4030:	add	ip, pc, #0, 12
    4034:	add	ip, ip, #60, 20	; 0x3c000
    4038:	ldr	pc, [ip, #196]!	; 0xc4

0000403c <strcasecmp@plt>:
    403c:	add	ip, pc, #0, 12
    4040:	add	ip, ip, #60, 20	; 0x3c000
    4044:	ldr	pc, [ip, #188]!	; 0xbc

00004048 <readstat_copy_quoted@plt>:
    4048:	add	ip, pc, #0, 12
    404c:	add	ip, ip, #60, 20	; 0x3c000
    4050:	ldr	pc, [ip, #180]!	; 0xb4

00004054 <deflate@plt>:
    4054:	add	ip, pc, #0, 12
    4058:	add	ip, ip, #60, 20	; 0x3c000
    405c:	ldr	pc, [ip, #172]!	; 0xac

00004060 <submit_value_label@plt>:
    4060:	add	ip, pc, #0, 12
    4064:	add	ip, ip, #60, 20	; 0x3c000
    4068:	ldr	pc, [ip, #164]!	; 0xa4

0000406c <sav_ctx_init@plt>:
    406c:	add	ip, pc, #0, 12
    4070:	add	ip, ip, #60, 20	; 0x3c000
    4074:	ldr	pc, [ip, #156]!	; 0x9c

00004078 <ck_str_n_hash_lookup@plt>:
    4078:	add	ip, pc, #0, 12
    407c:	add	ip, ip, #60, 20	; 0x3c000
    4080:	ldr	pc, [ip, #148]!	; 0x94

00004084 <spss_measure_from_readstat_measure@plt>:
    4084:	add	ip, pc, #0, 12
    4088:	add	ip, ip, #60, 20	; 0x3c000
    408c:	ldr	pc, [ip, #140]!	; 0x8c

00004090 <sas_rle_decompress@plt>:
    4090:	add	ip, pc, #0, 12
    4094:	add	ip, ip, #60, 20	; 0x3c000
    4098:	ldr	pc, [ip, #132]!	; 0x84

0000409c <sav_parse_date@plt>:
    409c:	add	ip, pc, #0, 12
    40a0:	add	ip, ip, #60, 20	; 0x3c000
    40a4:	ldr	pc, [ip, #124]!	; 0x7c

000040a8 <xport_namestr_bswap@plt>:
    40a8:	add	ip, pc, #0, 12
    40ac:	add	ip, ip, #60, 20	; 0x3c000
    40b0:	ldr	pc, [ip, #116]!	; 0x74

000040b4 <strcpy@plt>:
    40b4:	add	ip, pc, #0, 12
    40b8:	add	ip, ip, #60, 20	; 0x3c000
    40bc:	ldr	pc, [ip, #108]!	; 0x6c

000040c0 <zsav_current_block@plt>:
    40c0:	add	ip, pc, #0, 12
    40c4:	add	ip, ip, #60, 20	; 0x3c000
    40c8:	ldr	pc, [ip, #100]!	; 0x64

000040cc <zsav_ctx_init@plt>:
    40cc:	add	ip, pc, #0, 12
    40d0:	add	ip, ip, #60, 20	; 0x3c000
    40d4:	ldr	pc, [ip, #92]!	; 0x5c

000040d8 <sas_write_header@plt>:
    40d8:	add	ip, pc, #0, 12
    40dc:	add	ip, ip, #60, 20	; 0x3c000
    40e0:	ldr	pc, [ip, #84]!	; 0x54

000040e4 <strtof@plt>:
    40e4:	add	ip, pc, #0, 12
    40e8:	add	ip, ip, #60, 20	; 0x3c000
    40ec:	ldr	pc, [ip, #76]!	; 0x4c

000040f0 <readstat_schema_find_or_create_entry@plt>:
    40f0:	add	ip, pc, #0, 12
    40f4:	add	ip, ip, #60, 20	; 0x3c000
    40f8:	ldr	pc, [ip, #68]!	; 0x44

000040fc <readstat_value_type_class@plt>:
    40fc:	add	ip, pc, #0, 12
    4100:	add	ip, ip, #60, 20	; 0x3c000
    4104:	ldr	pc, [ip, #60]!	; 0x3c

00004108 <readstat_set_io_ctx@plt>:
    4108:	add	ip, pc, #0, 12
    410c:	add	ip, ip, #60, 20	; 0x3c000
    4110:	ldr	pc, [ip, #52]!	; 0x34

00004114 <spss_format_for_variable@plt>:
    4114:	add	ip, pc, #0, 12
    4118:	add	ip, ip, #60, 20	; 0x3c000
    411c:	ldr	pc, [ip, #44]!	; 0x2c

00004120 <readstat_parser_free@plt>:
    4120:	add	ip, pc, #0, 12
    4124:	add	ip, ip, #60, 20	; 0x3c000
    4128:	ldr	pc, [ip, #36]!	; 0x24

0000412c <malloc@plt>:
    412c:	add	ip, pc, #0, 12
    4130:	add	ip, ip, #60, 20	; 0x3c000
    4134:	ldr	pc, [ip, #28]!

00004138 <zsav_add_block@plt>:
    4138:	add	ip, pc, #0, 12
    413c:	add	ip, ip, #60, 20	; 0x3c000
    4140:	ldr	pc, [ip, #20]!

00004144 <deflateInit_@plt>:
    4144:	add	ip, pc, #0, 12
    4148:	add	ip, ip, #60, 20	; 0x3c000
    414c:	ldr	pc, [ip, #12]!

00004150 <iconv_open@plt>:
    4150:	add	ip, pc, #0, 12
    4154:	add	ip, ip, #60, 20	; 0x3c000
    4158:	ldr	pc, [ip, #4]!

0000415c <strerror@plt>:
    415c:	add	ip, pc, #0, 12
    4160:	add	ip, ip, #241664	; 0x3b000
    4164:	ldr	pc, [ip, #4092]!	; 0xffc

00004168 <sas_validate_tag@plt>:
    4168:	add	ip, pc, #0, 12
    416c:	add	ip, ip, #241664	; 0x3b000
    4170:	ldr	pc, [ip, #4084]!	; 0xff4

00004174 <readstat_write_string@plt>:
    4174:	add	ip, pc, #0, 12
    4178:	add	ip, ip, #241664	; 0x3b000
    417c:	ldr	pc, [ip, #4076]!	; 0xfec

00004180 <localtime@plt>:
    4180:	add	ip, pc, #0, 12
    4184:	add	ip, ip, #241664	; 0x3b000
    4188:	ldr	pc, [ip, #4068]!	; 0xfe4

0000418c <__ctype_tolower_loc@plt>:
    418c:	add	ip, pc, #0, 12
    4190:	add	ip, ip, #241664	; 0x3b000
    4194:	ldr	pc, [ip, #4060]!	; 0xfdc

00004198 <modf@plt>:
    4198:	add	ip, pc, #0, 12
    419c:	add	ip, ip, #241664	; 0x3b000
    41a0:	ldr	pc, [ip, #4052]!	; 0xfd4

000041a4 <__ctype_toupper_loc@plt>:
    41a4:	add	ip, pc, #0, 12
    41a8:	add	ip, ip, #241664	; 0x3b000
    41ac:	ldr	pc, [ip, #4044]!	; 0xfcc

000041b0 <ck_hash_table_init@plt>:
    41b0:	add	ip, pc, #0, 12
    41b4:	add	ip, ip, #241664	; 0x3b000
    41b8:	ldr	pc, [ip, #4036]!	; 0xfc4

000041bc <__gmon_start__@plt>:
    41bc:	add	ip, pc, #0, 12
    41c0:	add	ip, ip, #241664	; 0x3b000
    41c4:	ldr	pc, [ip, #4028]!	; 0xfbc

000041c8 <open@plt>:
    41c8:	add	ip, pc, #0, 12
    41cc:	add	ip, ip, #241664	; 0x3b000
    41d0:	ldr	pc, [ip, #4020]!	; 0xfb4

000041d4 <readstat_double_value@plt>:
    41d4:	add	ip, pc, #0, 12
    41d8:	add	ip, ip, #241664	; 0x3b000
    41dc:	ldr	pc, [ip, #4012]!	; 0xfac

000041e0 <get_native@plt>:
    41e0:	add	ip, pc, #0, 12
    41e4:	add	ip, ip, #241664	; 0x3b000
    41e8:	ldr	pc, [ip, #4004]!	; 0xfa4

000041ec <dta_ctx_init@plt>:
    41ec:	add	ip, pc, #0, 12
    41f0:	add	ip, ip, #241664	; 0x3b000
    41f4:	ldr	pc, [ip, #3996]!	; 0xf9c

000041f8 <readstat_variable_get_type@plt>:
    41f8:	add	ip, pc, #0, 12
    41fc:	add	ip, ip, #241664	; 0x3b000
    4200:	ldr	pc, [ip, #3988]!	; 0xf94

00004204 <dta_type_info@plt>:
    4204:	add	ip, pc, #0, 12
    4208:	add	ip, ip, #241664	; 0x3b000
    420c:	ldr	pc, [ip, #3980]!	; 0xf8c

00004210 <sav_parse_long_variable_names_record@plt>:
    4210:	add	ip, pc, #0, 12
    4214:	add	ip, ip, #241664	; 0x3b000
    4218:	ldr	pc, [ip, #3972]!	; 0xf84

0000421c <strlen@plt>:
    421c:	add	ip, pc, #0, 12
    4220:	add	ip, ip, #241664	; 0x3b000
    4224:	ldr	pc, [ip, #3964]!	; 0xf7c

00004228 <sav_decompress_row@plt>:
    4228:	add	ip, pc, #0, 12
    422c:	add	ip, ip, #241664	; 0x3b000
    4230:	ldr	pc, [ip, #3956]!	; 0xf74

00004234 <readstat_variable_get_display_width@plt>:
    4234:	add	ip, pc, #0, 12
    4238:	add	ip, ip, #241664	; 0x3b000
    423c:	ldr	pc, [ip, #3948]!	; 0xf6c

00004240 <readstat_malloc@plt>:
    4240:	add	ip, pc, #0, 12
    4244:	add	ip, ip, #241664	; 0x3b000
    4248:	ldr	pc, [ip, #3940]!	; 0xf64

0000424c <readstat_convert@plt>:
    424c:	add	ip, pc, #0, 12
    4250:	add	ip, ip, #241664	; 0x3b000
    4254:	ldr	pc, [ip, #3932]!	; 0xf5c

00004258 <ck_hash_table_free@plt>:
    4258:	add	ip, pc, #0, 12
    425c:	add	ip, ip, #241664	; 0x3b000
    4260:	ldr	pc, [ip, #3924]!	; 0xf54

00004264 <readstat_por_parse_double@plt>:
    4264:	add	ip, pc, #0, 12
    4268:	add	ip, ip, #241664	; 0x3b000
    426c:	ldr	pc, [ip, #3916]!	; 0xf4c

00004270 <por_utf8_encode@plt>:
    4270:	add	ip, pc, #0, 12
    4274:	add	ip, ip, #241664	; 0x3b000
    4278:	ldr	pc, [ip, #3908]!	; 0xf44

0000427c <__errno_location@plt>:
    427c:	add	ip, pc, #0, 12
    4280:	add	ip, ip, #241664	; 0x3b000
    4284:	ldr	pc, [ip, #3900]!	; 0xf3c

00004288 <spss_init_variable_for_info@plt>:
    4288:	add	ip, pc, #0, 12
    428c:	add	ip, ip, #241664	; 0x3b000
    4290:	ldr	pc, [ip, #3892]!	; 0xf34

00004294 <snprintf@plt>:
    4294:	add	ip, pc, #0, 12
    4298:	add	ip, ip, #241664	; 0x3b000
    429c:	ldr	pc, [ip, #3884]!	; 0xf2c

000042a0 <__isoc99_sscanf@plt>:
    42a0:	add	ip, pc, #0, 12
    42a4:	add	ip, ip, #241664	; 0x3b000
    42a8:	ldr	pc, [ip, #3876]!	; 0xf24

000042ac <ck_str_n_hash_insert@plt>:
    42ac:	add	ip, pc, #0, 12
    42b0:	add	ip, ip, #241664	; 0x3b000
    42b4:	ldr	pc, [ip, #3868]!	; 0xf1c

000042b8 <memset@plt>:
    42b8:	add	ip, pc, #0, 12
    42bc:	add	ip, ip, #241664	; 0x3b000
    42c0:	ldr	pc, [ip, #3860]!	; 0xf14

000042c4 <bsearch@plt>:
    42c4:	add	ip, pc, #0, 12
    42c8:	add	ip, ip, #241664	; 0x3b000
    42cc:	ldr	pc, [ip, #3852]!	; 0xf0c

000042d0 <spss_64bit_value@plt>:
    42d0:	add	ip, pc, #0, 12
    42d4:	add	ip, ip, #241664	; 0x3b000
    42d8:	ldr	pc, [ip, #3844]!	; 0xf04

000042dc <strncpy@plt>:
    42dc:	add	ip, pc, #0, 12
    42e0:	add	ip, ip, #241664	; 0x3b000
    42e4:	ldr	pc, [ip, #3836]!	; 0xefc

000042e8 <readstat_variable_get_storage_width@plt>:
    42e8:	add	ip, pc, #0, 12
    42ec:	add	ip, ip, #241664	; 0x3b000
    42f0:	ldr	pc, [ip, #3828]!	; 0xef4

000042f4 <sav_parse_very_long_string_record@plt>:
    42f4:	add	ip, pc, #0, 12
    42f8:	add	ip, ip, #241664	; 0x3b000
    42fc:	ldr	pc, [ip, #3820]!	; 0xeec

00004300 <readstat_realloc@plt>:
    4300:	add	ip, pc, #0, 12
    4304:	add	ip, ip, #241664	; 0x3b000
    4308:	ldr	pc, [ip, #3812]!	; 0xee4

0000430c <dta_parse_timestamp@plt>:
    430c:	add	ip, pc, #0, 12
    4310:	add	ip, ip, #241664	; 0x3b000
    4314:	ldr	pc, [ip, #3804]!	; 0xedc

00004318 <strtod@plt>:
    4318:	add	ip, pc, #0, 12
    431c:	add	ip, ip, #241664	; 0x3b000
    4320:	ldr	pc, [ip, #3796]!	; 0xed4

00004324 <readstat_variable_get_missing_ranges_count@plt>:
    4324:	add	ip, pc, #0, 12
    4328:	add	ip, ip, #241664	; 0x3b000
    432c:	ldr	pc, [ip, #3788]!	; 0xecc

00004330 <deflateEnd@plt>:
    4330:	add	ip, pc, #0, 12
    4334:	add	ip, ip, #241664	; 0x3b000
    4338:	ldr	pc, [ip, #3780]!	; 0xec4

0000433c <readstat_variable_get_measure@plt>:
    433c:	add	ip, pc, #0, 12
    4340:	add	ip, ip, #241664	; 0x3b000
    4344:	ldr	pc, [ip, #3772]!	; 0xebc

00004348 <readstat_variable_get_missing_range_hi@plt>:
    4348:	add	ip, pc, #0, 12
    434c:	add	ip, ip, #241664	; 0x3b000
    4350:	ldr	pc, [ip, #3764]!	; 0xeb4

00004354 <readstat_set_read_handler@plt>:
    4354:	add	ip, pc, #0, 12
    4358:	add	ip, ip, #241664	; 0x3b000
    435c:	ldr	pc, [ip, #3756]!	; 0xeac

00004360 <readstat_value_type@plt>:
    4360:	add	ip, pc, #0, 12
    4364:	add	ip, ip, #241664	; 0x3b000
    4368:	ldr	pc, [ip, #3748]!	; 0xea4

0000436c <sas_header_info_init@plt>:
    436c:	add	ip, pc, #0, 12
    4370:	add	ip, ip, #241664	; 0x3b000
    4374:	ldr	pc, [ip, #3740]!	; 0xe9c

00004378 <readstat_string_ref_init@plt>:
    4378:	add	ip, pc, #0, 12
    437c:	add	ip, ip, #241664	; 0x3b000
    4380:	ldr	pc, [ip, #3732]!	; 0xe94

00004384 <readstat_variable_get_name@plt>:
    4384:	add	ip, pc, #0, 12
    4388:	add	ip, ip, #241664	; 0x3b000
    438c:	ldr	pc, [ip, #3724]!	; 0xe8c

00004390 <ones_to_twos_complement1@plt>:
    4390:	add	ip, pc, #0, 12
    4394:	add	ip, ip, #241664	; 0x3b000
    4398:	ldr	pc, [ip, #3716]!	; 0xe84

0000439c <readstat_get_variable@plt>:
    439c:	add	ip, pc, #0, 12
    43a0:	add	ip, ip, #241664	; 0x3b000
    43a4:	ldr	pc, [ip, #3708]!	; 0xe7c

000043a8 <spss_alignment_to_readstat_alignment@plt>:
    43a8:	add	ip, pc, #0, 12
    43ac:	add	ip, ip, #241664	; 0x3b000
    43b0:	ldr	pc, [ip, #3700]!	; 0xe74

000043b4 <por_utf8_decode@plt>:
    43b4:	add	ip, pc, #0, 12
    43b8:	add	ip, ip, #241664	; 0x3b000
    43bc:	ldr	pc, [ip, #3692]!	; 0xe6c

000043c0 <sas_read_header@plt>:
    43c0:	add	ip, pc, #0, 12
    43c4:	add	ip, ip, #241664	; 0x3b000
    43c8:	ldr	pc, [ip, #3684]!	; 0xe64

000043cc <spss_measure_to_readstat_measure@plt>:
    43cc:	add	ip, pc, #0, 12
    43d0:	add	ip, ip, #241664	; 0x3b000
    43d4:	ldr	pc, [ip, #3676]!	; 0xe5c

000043d8 <sas_subheader_remainder@plt>:
    43d8:	add	ip, pc, #0, 12
    43dc:	add	ip, ip, #241664	; 0x3b000
    43e0:	ldr	pc, [ip, #3668]!	; 0xe54

000043e4 <sas_read8@plt>:
    43e4:	add	ip, pc, #0, 12
    43e8:	add	ip, ip, #241664	; 0x3b000
    43ec:	ldr	pc, [ip, #3660]!	; 0xe4c

000043f0 <sas_read2@plt>:
    43f0:	add	ip, pc, #0, 12
    43f4:	add	ip, ip, #241664	; 0x3b000
    43f8:	ldr	pc, [ip, #3652]!	; 0xe44

000043fc <readstat_copy_lower@plt>:
    43fc:	add	ip, pc, #0, 12
    4400:	add	ip, ip, #241664	; 0x3b000
    4404:	ldr	pc, [ip, #3644]!	; 0xe3c

00004408 <sprintf@plt>:
    4408:	add	ip, pc, #0, 12
    440c:	add	ip, ip, #241664	; 0x3b000
    4410:	ldr	pc, [ip, #3636]!	; 0xe34

00004414 <sas_read4@plt>:
    4414:	add	ip, pc, #0, 12
    4418:	add	ip, ip, #241664	; 0x3b000
    441c:	ldr	pc, [ip, #3628]!	; 0xe2c

00004420 <readstat_variable_get_label@plt>:
    4420:	add	ip, pc, #0, 12
    4424:	add	ip, ip, #241664	; 0x3b000
    4428:	ldr	pc, [ip, #3620]!	; 0xe24

0000442c <spss_format@plt>:
    442c:	add	ip, pc, #0, 12
    4430:	add	ip, ip, #241664	; 0x3b000
    4434:	ldr	pc, [ip, #3612]!	; 0xe1c

00004438 <spss_varinfo_free@plt>:
    4438:	add	ip, pc, #0, 12
    443c:	add	ip, ip, #241664	; 0x3b000
    4440:	ldr	pc, [ip, #3604]!	; 0xe14

00004444 <readstat_get_label_set@plt>:
    4444:	add	ip, pc, #0, 12
    4448:	add	ip, ip, #241664	; 0x3b000
    444c:	ldr	pc, [ip, #3596]!	; 0xe0c

00004450 <readstat_variable_get_alignment@plt>:
    4450:	add	ip, pc, #0, 12
    4454:	add	ip, ip, #241664	; 0x3b000
    4458:	ldr	pc, [ip, #3588]!	; 0xe04

0000445c <qsort@plt>:
    445c:	add	ip, pc, #0, 12
    4460:	add	ip, ip, #241664	; 0x3b000
    4464:	ldr	pc, [ip, #3580]!	; 0xdfc

00004468 <readstat_get_label_set_variable@plt>:
    4468:	add	ip, pc, #0, 12
    446c:	add	ip, ip, #241664	; 0x3b000
    4470:	ldr	pc, [ip, #3572]!	; 0xdf4

00004474 <readstat_write_bytes@plt>:
    4474:	add	ip, pc, #0, 12
    4478:	add	ip, ip, #241664	; 0x3b000
    447c:	ldr	pc, [ip, #3564]!	; 0xdec

00004480 <sav_compress_row@plt>:
    4480:	add	ip, pc, #0, 12
    4484:	add	ip, ip, #241664	; 0x3b000
    4488:	ldr	pc, [ip, #3556]!	; 0xde4

0000448c <readstat_set_close_handler@plt>:
    448c:	add	ip, pc, #0, 12
    4490:	add	ip, ip, #241664	; 0x3b000
    4494:	ldr	pc, [ip, #3548]!	; 0xddc

00004498 <sas_fill_page@plt>:
    4498:	add	ip, pc, #0, 12
    449c:	add	ip, ip, #241664	; 0x3b000
    44a0:	ldr	pc, [ip, #3540]!	; 0xdd4

000044a4 <sas_rle_compressed_len@plt>:
    44a4:	add	ip, pc, #0, 12
    44a8:	add	ip, ip, #241664	; 0x3b000
    44ac:	ldr	pc, [ip, #3532]!	; 0xdcc

000044b0 <por_ctx_init@plt>:
    44b0:	add	ip, pc, #0, 12
    44b4:	add	ip, ip, #241664	; 0x3b000
    44b8:	ldr	pc, [ip, #3524]!	; 0xdc4

000044bc <readstat_validate_variable@plt>:
    44bc:	add	ip, pc, #0, 12
    44c0:	add	ip, ip, #241664	; 0x3b000
    44c4:	ldr	pc, [ip, #3516]!	; 0xdbc

000044c8 <sas_assign_tag@plt>:
    44c8:	add	ip, pc, #0, 12
    44cc:	add	ip, ip, #241664	; 0x3b000
    44d0:	ldr	pc, [ip, #3508]!	; 0xdb4

000044d4 <zsav_compress_row@plt>:
    44d4:	add	ip, pc, #0, 12
    44d8:	add	ip, ip, #241664	; 0x3b000
    44dc:	ldr	pc, [ip, #3500]!	; 0xdac

000044e0 <zsav_read_compressed_data@plt>:
    44e0:	add	ip, pc, #0, 12
    44e4:	add	ip, ip, #241664	; 0x3b000
    44e8:	ldr	pc, [ip, #3492]!	; 0xda4

000044ec <readstat_get_value_label@plt>:
    44ec:	add	ip, pc, #0, 12
    44f0:	add	ip, ip, #241664	; 0x3b000
    44f4:	ldr	pc, [ip, #3484]!	; 0xd9c

000044f8 <sas_rle_compress@plt>:
    44f8:	add	ip, pc, #0, 12
    44fc:	add	ip, ip, #241664	; 0x3b000
    4500:	ldr	pc, [ip, #3476]!	; 0xd94

00004504 <readstat_write_line_padding@plt>:
    4504:	add	ip, pc, #0, 12
    4508:	add	ip, ip, #241664	; 0x3b000
    450c:	ldr	pc, [ip, #3468]!	; 0xd8c

00004510 <ck_str_hash_insert@plt>:
    4510:	add	ip, pc, #0, 12
    4514:	add	ip, ip, #241664	; 0x3b000
    4518:	ldr	pc, [ip, #3460]!	; 0xd84

0000451c <strncmp@plt>:
    451c:	add	ip, pc, #0, 12
    4520:	add	ip, ip, #241664	; 0x3b000
    4524:	ldr	pc, [ip, #3452]!	; 0xd7c

00004528 <byteswap_double@plt>:
    4528:	add	ip, pc, #0, 12
    452c:	add	ip, ip, #241664	; 0x3b000
    4530:	ldr	pc, [ip, #3444]!	; 0xd74

00004534 <close@plt>:
    4534:	add	ip, pc, #0, 12
    4538:	add	ip, ip, #241664	; 0x3b000
    453c:	ldr	pc, [ip, #3436]!	; 0xd6c

00004540 <readstat_write_bytes_as_lines@plt>:
    4540:	add	ip, pc, #0, 12
    4544:	add	ip, ip, #241664	; 0x3b000
    4548:	ldr	pc, [ip, #3428]!	; 0xd64

0000454c <spss_missingness_for_info@plt>:
    454c:	add	ip, pc, #0, 12
    4550:	add	ip, ip, #241664	; 0x3b000
    4554:	ldr	pc, [ip, #3420]!	; 0xd5c

00004558 <handle_variables@plt>:
    4558:	add	ip, pc, #0, 12
    455c:	add	ip, ip, #241664	; 0x3b000
    4560:	ldr	pc, [ip, #3412]!	; 0xd54

00004564 <readstat_variable_get_type_class@plt>:
    4564:	add	ip, pc, #0, 12
    4568:	add	ip, ip, #241664	; 0x3b000
    456c:	ldr	pc, [ip, #3404]!	; 0xd4c

00004570 <readstat_write_space_padded_string@plt>:
    4570:	add	ip, pc, #0, 12
    4574:	add	ip, ip, #241664	; 0x3b000
    4578:	ldr	pc, [ip, #3396]!	; 0xd44

0000457c <dta_ctx_alloc@plt>:
    457c:	add	ip, pc, #0, 12
    4580:	add	ip, ip, #241664	; 0x3b000
    4584:	ldr	pc, [ip, #3388]!	; 0xd3c

Disassembly of section .text:

00004588 <call_weak_fn>:
    4588:	ldr	r3, [pc, #20]	; 45a4 <call_weak_fn+0x1c>
    458c:	ldr	r2, [pc, #20]	; 45a8 <call_weak_fn+0x20>
    4590:	add	r3, pc, r3
    4594:	ldr	r2, [r3, r2]
    4598:	cmp	r2, #0
    459c:	bxeq	lr
    45a0:	b	41bc <__gmon_start__@plt>
    45a4:	.word	0x0003ba68
    45a8:	.word	0x000002e8

000045ac <deregister_tm_clones>:
    45ac:	ldr	r0, [pc, #44]	; 45e0 <deregister_tm_clones+0x34>
    45b0:	ldr	r3, [pc, #44]	; 45e4 <deregister_tm_clones+0x38>
    45b4:	add	r0, pc, r0
    45b8:	add	r3, pc, r3
    45bc:	cmp	r3, r0
    45c0:	ldr	r3, [pc, #32]	; 45e8 <deregister_tm_clones+0x3c>
    45c4:	add	r3, pc, r3
    45c8:	bxeq	lr
    45cc:	ldr	r2, [pc, #24]	; 45ec <deregister_tm_clones+0x40>
    45d0:	ldr	r3, [r3, r2]
    45d4:	cmp	r3, #0
    45d8:	bxeq	lr
    45dc:	bx	r3
    45e0:	.word	0x0003d768
    45e4:	.word	0x0003d764
    45e8:	.word	0x0003ba34
    45ec:	.word	0x000002d0

000045f0 <register_tm_clones>:
    45f0:	ldr	r0, [pc, #56]	; 4630 <register_tm_clones+0x40>
    45f4:	ldr	r3, [pc, #56]	; 4634 <register_tm_clones+0x44>
    45f8:	add	r0, pc, r0
    45fc:	add	r3, pc, r3
    4600:	sub	r1, r3, r0
    4604:	ldr	r3, [pc, #44]	; 4638 <register_tm_clones+0x48>
    4608:	asr	r1, r1, #2
    460c:	add	r3, pc, r3
    4610:	add	r1, r1, r1, lsr #31
    4614:	asrs	r1, r1, #1
    4618:	bxeq	lr
    461c:	ldr	r2, [pc, #24]	; 463c <register_tm_clones+0x4c>
    4620:	ldr	r3, [r3, r2]
    4624:	cmp	r3, #0
    4628:	bxeq	lr
    462c:	bx	r3
    4630:	.word	0x0003d724
    4634:	.word	0x0003d720
    4638:	.word	0x0003b9ec
    463c:	.word	0x00000314

00004640 <__do_global_dtors_aux>:
    4640:	ldr	r3, [pc, #76]	; 4694 <__do_global_dtors_aux+0x54>
    4644:	ldr	r2, [pc, #76]	; 4698 <__do_global_dtors_aux+0x58>
    4648:	add	r3, pc, r3
    464c:	add	r2, pc, r2
    4650:	ldrb	r3, [r3]
    4654:	cmp	r3, #0
    4658:	bxne	lr
    465c:	ldr	r3, [pc, #56]	; 469c <__do_global_dtors_aux+0x5c>
    4660:	push	{r4, lr}
    4664:	ldr	r3, [r2, r3]
    4668:	cmp	r3, #0
    466c:	beq	467c <__do_global_dtors_aux+0x3c>
    4670:	ldr	r3, [pc, #40]	; 46a0 <__do_global_dtors_aux+0x60>
    4674:	ldr	r0, [pc, r3]
    4678:	bl	3e20 <__cxa_finalize@plt>
    467c:	bl	45ac <deregister_tm_clones>
    4680:	ldr	r3, [pc, #28]	; 46a4 <__do_global_dtors_aux+0x64>
    4684:	mov	r2, #1
    4688:	add	r3, pc, r3
    468c:	strb	r2, [r3]
    4690:	pop	{r4, pc}
    4694:	.word	0x0003d6d4
    4698:	.word	0x0003b9ac
    469c:	.word	0x000002cc
    46a0:	.word	0x0003bc9c
    46a4:	.word	0x0003d694

000046a8 <frame_dummy>:
    46a8:	b	45f0 <register_tm_clones>
    46ac:	andeq	r0, r0, r0

000046b0 <ck_float2str>:
    46b0:	vmov	r2, s0
    46b4:	ldr	r1, [pc, #68]	; 4700 <ck_float2str+0x50>
    46b8:	lsr	ip, r2, #24
    46bc:	and	r3, r2, #1
    46c0:	orr	r1, r2, r1
    46c4:	and	ip, ip, #8
    46c8:	str	r1, [r0]
    46cc:	orr	r3, r3, ip
    46d0:	ubfx	ip, r2, #8, #8
    46d4:	ubfx	r2, r2, #16, #8
    46d8:	and	ip, ip, #2
    46dc:	orr	r3, r3, ip
    46e0:	and	r2, r2, #4
    46e4:	orr	r3, r3, r2
    46e8:	mvn	r3, r3, lsl #28
    46ec:	mvn	r3, r3, lsr #28
    46f0:	strb	r3, [r0, #4]
    46f4:	mov	r3, #0
    46f8:	strb	r3, [r0, #5]
    46fc:	bx	lr
    4700:	.word	0x08040201

00004704 <ck_double2str>:
    4704:	push	{r0, r1, r2, lr}
    4708:	add	r2, sp, #8
    470c:	mov	r3, r0
    4710:	vstr	d0, [sp]
    4714:	ldmdb	r2, {r0, r1}
    4718:	ldr	lr, [pc, #140]	; 47ac <ck_double2str+0xa8>
    471c:	stm	r3, {r0, r1}
    4720:	ldrb	r2, [r3]
    4724:	orr	r0, lr, r0
    4728:	orr	r1, lr, r1
    472c:	ldrb	ip, [r3, #3]
    4730:	and	r2, r2, #1
    4734:	and	ip, ip, #8
    4738:	orr	r2, r2, ip
    473c:	ldrb	ip, [r3, #1]
    4740:	and	ip, ip, #2
    4744:	orr	r2, r2, ip
    4748:	ldrb	ip, [r3, #2]
    474c:	str	r0, [r3]
    4750:	ldrb	r0, [r3, #7]
    4754:	and	ip, ip, #4
    4758:	orr	r2, r2, ip
    475c:	mvn	ip, #15
    4760:	orr	r2, ip, r2
    4764:	and	r0, r0, #8
    4768:	strb	r2, [r3, #8]
    476c:	ldrb	r2, [r3, #4]
    4770:	and	r2, r2, #1
    4774:	orr	r2, r2, r0
    4778:	ldrb	r0, [r3, #5]
    477c:	and	r0, r0, #2
    4780:	orr	r2, r2, r0
    4784:	ldrb	r0, [r3, #6]
    4788:	str	r1, [r3, #4]
    478c:	and	r0, r0, #4
    4790:	orr	r2, r2, r0
    4794:	orr	r2, ip, r2
    4798:	strb	r2, [r3, #9]
    479c:	mov	r2, #0
    47a0:	strb	r2, [r3, #10]
    47a4:	add	sp, sp, #12
    47a8:	pop	{pc}		; (ldr pc, [sp], #4)
    47ac:	.word	0x08040201

000047b0 <ck_hash_str>:
    47b0:	push	{r4, r5, lr}
    47b4:	mov	r1, #0
    47b8:	mov	lr, r0
    47bc:	movw	r0, #5381	; 0x1505
    47c0:	ldrb	ip, [lr], #1
    47c4:	cmp	ip, #0
    47c8:	popeq	{r4, r5, pc}
    47cc:	lsl	r5, r1, #5
    47d0:	lsl	r4, r0, #5
    47d4:	orr	r5, r5, r0, lsr #27
    47d8:	adds	r2, r4, ip
    47dc:	adc	r3, r5, #0
    47e0:	adds	r0, r0, r2
    47e4:	adc	r1, r1, r3
    47e8:	b	47c0 <ck_hash_str+0x10>

000047ec <ck_str_n_hash_lookup>:
    47ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    47f0:	sub	sp, sp, #20
    47f4:	ldrd	r4, [r2, #8]
    47f8:	orrs	r3, r4, r5
    47fc:	beq	48c8 <ck_str_n_hash_lookup+0xdc>
    4800:	sub	r3, r1, #1
    4804:	cmp	r3, #126	; 0x7e
    4808:	bhi	48c8 <ck_str_n_hash_lookup+0xdc>
    480c:	mov	r7, r2
    4810:	mov	r6, r1
    4814:	mov	sl, r0
    4818:	mov	fp, #132	; 0x84
    481c:	bl	47b0 <ck_hash_str>
    4820:	ldrd	r8, [r7]
    4824:	add	r6, r6, #1
    4828:	mov	r2, r8
    482c:	mov	r3, r9
    4830:	bl	201ec <__aeabi_uldivmod>
    4834:	mov	r4, r2
    4838:	mov	r5, r3
    483c:	subs	r0, r4, #1
    4840:	mov	r2, r8
    4844:	mov	r3, r9
    4848:	sbc	r1, r5, #0
    484c:	bl	201ec <__aeabi_uldivmod>
    4850:	strd	r2, [sp]
    4854:	ldrd	r2, [sp]
    4858:	cmp	r3, r5
    485c:	cmpeq	r2, r4
    4860:	beq	48c8 <ck_str_n_hash_lookup+0xdc>
    4864:	ldr	r1, [r7, #16]
    4868:	mul	r2, fp, r4
    486c:	ldrb	r0, [r1, r2]
    4870:	add	r3, r1, r2
    4874:	cmp	r0, #0
    4878:	beq	48a0 <ck_str_n_hash_lookup+0xb4>
    487c:	mov	r0, r3
    4880:	mov	r2, r6
    4884:	str	r3, [sp, #12]
    4888:	mov	r1, sl
    488c:	bl	451c <strncmp@plt>
    4890:	cmp	r0, #0
    4894:	ldr	r3, [sp, #12]
    4898:	bne	48a8 <ck_str_n_hash_lookup+0xbc>
    489c:	ldr	r0, [r3, #128]	; 0x80
    48a0:	add	sp, sp, #20
    48a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    48a8:	adds	r0, r4, #1
    48ac:	mov	r2, r8
    48b0:	adc	r1, r5, #0
    48b4:	mov	r3, r9
    48b8:	bl	201ec <__aeabi_uldivmod>
    48bc:	mov	r4, r2
    48c0:	mov	r5, r3
    48c4:	b	4854 <ck_str_n_hash_lookup+0x68>
    48c8:	mov	r0, #0
    48cc:	b	48a0 <ck_str_n_hash_lookup+0xb4>

000048d0 <ck_float_hash_lookup>:
    48d0:	push	{r0, r1, r2, r4, r5, lr}
    48d4:	mov	r4, sp
    48d8:	mov	r5, r0
    48dc:	mov	r0, r4
    48e0:	bl	46b0 <ck_float2str>
    48e4:	mov	r2, r5
    48e8:	mov	r1, #5
    48ec:	bl	4078 <ck_str_n_hash_lookup@plt>
    48f0:	add	sp, sp, #12
    48f4:	pop	{r4, r5, pc}

000048f8 <ck_double_hash_lookup>:
    48f8:	push	{r4, r5, lr}
    48fc:	sub	sp, sp, #20
    4900:	mov	r5, r0
    4904:	add	r4, sp, #4
    4908:	mov	r0, r4
    490c:	bl	4704 <ck_double2str>
    4910:	mov	r2, r5
    4914:	mov	r1, #10
    4918:	mov	r0, r4
    491c:	bl	4078 <ck_str_n_hash_lookup@plt>
    4920:	add	sp, sp, #20
    4924:	pop	{r4, r5, pc}

00004928 <ck_str_hash_lookup>:
    4928:	push	{r4, r5, r6, lr}
    492c:	mov	r5, r1
    4930:	mov	r4, r0
    4934:	bl	421c <strlen@plt>
    4938:	cmp	r0, #127	; 0x7f
    493c:	mov	r2, r5
    4940:	movcc	r1, r0
    4944:	movcs	r1, #127	; 0x7f
    4948:	mov	r0, r4
    494c:	pop	{r4, r5, r6, lr}
    4950:	b	4078 <ck_str_n_hash_lookup@plt>

00004954 <ck_hash_table_free>:
    4954:	push	{r4, lr}
    4958:	mov	r4, r0
    495c:	ldr	r0, [r0, #16]
    4960:	bl	3ed4 <free@plt>
    4964:	mov	r0, r4
    4968:	pop	{r4, lr}
    496c:	b	3ed4 <free@plt>

00004970 <ck_hash_table_wipe>:
    4970:	ldr	r3, [r0]
    4974:	mov	r2, #132	; 0x84
    4978:	mov	r1, #0
    497c:	ldr	r0, [r0, #16]
    4980:	mul	r2, r2, r3
    4984:	b	42b8 <memset@plt>

00004988 <ck_hash_table_init>:
    4988:	push	{r4, r5, r6, lr}
    498c:	mov	r5, r0
    4990:	mov	r0, #24
    4994:	bl	412c <malloc@plt>
    4998:	subs	r4, r0, #0
    499c:	beq	49cc <ck_hash_table_init+0x44>
    49a0:	mov	r0, #264	; 0x108
    49a4:	lsl	r6, r5, #1
    49a8:	mul	r0, r0, r5
    49ac:	bl	412c <malloc@plt>
    49b0:	cmp	r0, #0
    49b4:	mov	r5, r0
    49b8:	str	r0, [r4, #16]
    49bc:	bne	49d4 <ck_hash_table_init+0x4c>
    49c0:	mov	r0, r4
    49c4:	mov	r4, r5
    49c8:	bl	3ed4 <free@plt>
    49cc:	mov	r0, r4
    49d0:	pop	{r4, r5, r6, pc}
    49d4:	mov	r3, #0
    49d8:	mov	r2, #0
    49dc:	str	r6, [r4]
    49e0:	mov	r0, r4
    49e4:	str	r3, [r4, #4]
    49e8:	mov	r3, #0
    49ec:	strd	r2, [r4, #8]
    49f0:	bl	3e2c <ck_hash_table_wipe@plt>
    49f4:	b	49cc <ck_hash_table_init+0x44>

000049f8 <ck_hash_table_grow>:
    49f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    49fc:	mov	r1, #132	; 0x84
    4a00:	mov	r8, r0
    4a04:	ldrd	r6, [r0]
    4a08:	ldr	sl, [r0, #16]
    4a0c:	adds	r4, r6, r6
    4a10:	mov	r0, r4
    4a14:	adc	r5, r7, r7
    4a18:	bl	3d6c <calloc@plt>
    4a1c:	cmp	r0, #0
    4a20:	str	r0, [r8, #16]
    4a24:	bne	4a30 <ck_hash_table_grow+0x38>
    4a28:	mvn	r0, #0
    4a2c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    4a30:	mov	r2, #0
    4a34:	add	r9, sl, #128	; 0x80
    4a38:	strd	r4, [r8]
    4a3c:	mov	r3, r2
    4a40:	mov	r4, r2
    4a44:	mov	r5, r2
    4a48:	strd	r2, [r8, #8]
    4a4c:	cmp	r5, r7
    4a50:	cmpeq	r4, r6
    4a54:	bne	4a68 <ck_hash_table_grow+0x70>
    4a58:	mov	r0, sl
    4a5c:	bl	3ed4 <free@plt>
    4a60:	mov	r0, #0
    4a64:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    4a68:	ldrb	r3, [r9, #-128]	; 0xffffff80
    4a6c:	cmp	r3, #0
    4a70:	bne	4a84 <ck_hash_table_grow+0x8c>
    4a74:	adds	r4, r4, #1
    4a78:	add	r9, r9, #132	; 0x84
    4a7c:	adc	r5, r5, #0
    4a80:	b	4a4c <ck_hash_table_grow+0x54>
    4a84:	mov	r0, r9
    4a88:	mov	r2, r8
    4a8c:	ldr	r1, [r0], #-128	; 0xffffff80
    4a90:	bl	4510 <ck_str_hash_insert@plt>
    4a94:	cmp	r0, #0
    4a98:	bne	4a74 <ck_hash_table_grow+0x7c>
    4a9c:	b	4a28 <ck_hash_table_grow+0x30>

00004aa0 <ck_str_n_hash_insert>:
    4aa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4aa4:	ldrd	r6, [r3]
    4aa8:	vpush	{d8}
    4aac:	sub	sp, sp, #28
    4ab0:	orrs	ip, r6, r7
    4ab4:	bne	4ac8 <ck_str_n_hash_insert+0x28>
    4ab8:	mov	r0, #0
    4abc:	add	sp, sp, #28
    4ac0:	vpop	{d8}
    4ac4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4ac8:	sub	ip, r1, #1
    4acc:	cmp	ip, #126	; 0x7e
    4ad0:	bhi	4ab8 <ck_str_n_hash_insert+0x18>
    4ad4:	mov	r5, r1
    4ad8:	mov	r9, r0
    4adc:	ldrd	r0, [r3, #8]
    4ae0:	mov	r4, r3
    4ae4:	str	r2, [sp, #16]
    4ae8:	bl	200a4 <__aeabi_ul2d>
    4aec:	vmov	d8, r0, r1
    4af0:	mov	r0, r6
    4af4:	mov	r1, r7
    4af8:	bl	200a4 <__aeabi_ul2d>
    4afc:	vmov	d6, r0, r1
    4b00:	vldr	d7, [pc, #312]	; 4c40 <ck_str_n_hash_insert+0x1a0>
    4b04:	vmul.f64	d7, d6, d7
    4b08:	vcmpe.f64	d8, d7
    4b0c:	vmrs	APSR_nzcv, fpscr
    4b10:	bge	4b50 <ck_str_n_hash_insert+0xb0>
    4b14:	mov	r0, r9
    4b18:	bl	47b0 <ck_hash_str>
    4b1c:	ldm	r4, {r8, fp}
    4b20:	mov	r2, r8
    4b24:	mov	r3, fp
    4b28:	bl	201ec <__aeabi_uldivmod>
    4b2c:	mov	r6, r2
    4b30:	mov	r7, r3
    4b34:	orrs	r3, r6, r7
    4b38:	bne	4b64 <ck_str_n_hash_insert+0xc4>
    4b3c:	subs	r3, r8, #1
    4b40:	str	r3, [sp]
    4b44:	sbc	r3, fp, #0
    4b48:	str	r3, [sp, #4]
    4b4c:	b	4b7c <ck_str_n_hash_insert+0xdc>
    4b50:	mov	r0, r4
    4b54:	bl	4000 <ck_hash_table_grow@plt>
    4b58:	cmn	r0, #1
    4b5c:	bne	4b14 <ck_str_n_hash_insert+0x74>
    4b60:	b	4ab8 <ck_str_n_hash_insert+0x18>
    4b64:	subs	r0, r6, #1
    4b68:	mov	r2, r8
    4b6c:	mov	r3, fp
    4b70:	sbc	r1, r7, #0
    4b74:	bl	201ec <__aeabi_uldivmod>
    4b78:	strd	r2, [sp]
    4b7c:	add	r3, r5, #1
    4b80:	str	r3, [sp, #12]
    4b84:	ldrd	r2, [sp]
    4b88:	cmp	r7, r3
    4b8c:	cmpeq	r6, r2
    4b90:	beq	4ab8 <ck_str_n_hash_insert+0x18>
    4b94:	mov	r3, #132	; 0x84
    4b98:	ldr	r2, [r4, #16]
    4b9c:	mul	sl, r3, r6
    4ba0:	add	r3, r2, sl
    4ba4:	ldrb	r2, [r2, sl]
    4ba8:	cmp	r2, #0
    4bac:	bne	4c00 <ck_str_n_hash_insert+0x160>
    4bb0:	ldr	r2, [r4, #8]
    4bb4:	ldr	r1, [r4, #12]
    4bb8:	adds	r2, r2, #1
    4bbc:	adc	r1, r1, #0
    4bc0:	str	r2, [r4, #8]
    4bc4:	str	r1, [r4, #12]
    4bc8:	mov	r2, r5
    4bcc:	mov	r0, r3
    4bd0:	mov	r1, r9
    4bd4:	bl	3f34 <memcpy@plt>
    4bd8:	ldr	r3, [r4, #16]
    4bdc:	mov	r2, #0
    4be0:	mov	r0, #1
    4be4:	add	r3, r3, sl
    4be8:	strb	r2, [r3, r5]
    4bec:	ldr	r3, [r4, #16]
    4bf0:	add	sl, r3, sl
    4bf4:	ldr	r3, [sp, #16]
    4bf8:	str	r3, [sl, #128]	; 0x80
    4bfc:	b	4abc <ck_str_n_hash_insert+0x1c>
    4c00:	mov	r0, r3
    4c04:	mov	r1, r9
    4c08:	ldr	r2, [sp, #12]
    4c0c:	str	r3, [sp, #20]
    4c10:	bl	451c <strncmp@plt>
    4c14:	cmp	r0, #0
    4c18:	ldr	r3, [sp, #20]
    4c1c:	beq	4bc8 <ck_str_n_hash_insert+0x128>
    4c20:	adds	r0, r6, #1
    4c24:	mov	r2, r8
    4c28:	adc	r1, r7, #0
    4c2c:	mov	r3, fp
    4c30:	bl	201ec <__aeabi_uldivmod>
    4c34:	mov	r6, r2
    4c38:	mov	r7, r3
    4c3c:	b	4b84 <ck_str_n_hash_insert+0xe4>
    4c40:	.word	0x00000000
    4c44:	.word	0x3fe80000

00004c48 <ck_float_hash_insert>:
    4c48:	push	{r0, r1, r4, r5, r6, lr}
    4c4c:	mov	r4, sp
    4c50:	mov	r6, r1
    4c54:	mov	r5, r0
    4c58:	mov	r0, r4
    4c5c:	bl	46b0 <ck_float2str>
    4c60:	mov	r3, r6
    4c64:	mov	r2, r5
    4c68:	mov	r1, #5
    4c6c:	bl	42ac <ck_str_n_hash_insert@plt>
    4c70:	add	sp, sp, #8
    4c74:	pop	{r4, r5, r6, pc}

00004c78 <ck_double_hash_insert>:
    4c78:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    4c7c:	add	r4, sp, #4
    4c80:	mov	r6, r1
    4c84:	mov	r5, r0
    4c88:	mov	r0, r4
    4c8c:	bl	4704 <ck_double2str>
    4c90:	mov	r3, r6
    4c94:	mov	r2, r5
    4c98:	mov	r1, #10
    4c9c:	mov	r0, r4
    4ca0:	bl	42ac <ck_str_n_hash_insert@plt>
    4ca4:	add	sp, sp, #16
    4ca8:	pop	{r4, r5, r6, pc}

00004cac <ck_str_hash_insert>:
    4cac:	push	{r4, r5, r6, lr}
    4cb0:	mov	r5, r1
    4cb4:	mov	r6, r2
    4cb8:	mov	r4, r0
    4cbc:	bl	421c <strlen@plt>
    4cc0:	cmp	r0, #127	; 0x7f
    4cc4:	mov	r3, r6
    4cc8:	mov	r2, r5
    4ccc:	movcc	r1, r0
    4cd0:	movcs	r1, #127	; 0x7f
    4cd4:	mov	r0, r4
    4cd8:	pop	{r4, r5, r6, lr}
    4cdc:	b	42ac <ck_str_n_hash_insert@plt>

00004ce0 <machine_is_little_endian>:
    4ce0:	mov	r0, #1
    4ce4:	bx	lr

00004ce8 <ones_to_twos_complement1>:
    4ce8:	bx	lr

00004cec <ones_to_twos_complement2>:
    4cec:	cmp	r0, #0
    4cf0:	addlt	r0, r0, #1
    4cf4:	sxthlt	r0, r0
    4cf8:	bx	lr

00004cfc <ones_to_twos_complement4>:
    4cfc:	cmp	r0, #0
    4d00:	addlt	r0, r0, #1
    4d04:	bx	lr

00004d08 <twos_to_ones_complement1>:
    4d08:	bx	lr

00004d0c <twos_to_ones_complement2>:
    4d0c:	cmp	r0, #0
    4d10:	sublt	r0, r0, #1
    4d14:	sxthlt	r0, r0
    4d18:	bx	lr

00004d1c <twos_to_ones_complement4>:
    4d1c:	cmp	r0, #0
    4d20:	sublt	r0, r0, #1
    4d24:	bx	lr

00004d28 <byteswap2>:
    4d28:	rev16	r0, r0
    4d2c:	uxth	r0, r0
    4d30:	bx	lr

00004d34 <byteswap4>:
    4d34:	rev	r0, r0
    4d38:	bx	lr

00004d3c <byteswap8>:
    4d3c:	rev	r3, r0
    4d40:	rev	r0, r1
    4d44:	mov	r1, r3
    4d48:	bx	lr

00004d4c <byteswap_float>:
    4d4c:	push	{r4, lr}
    4d50:	vmov	r0, s0
    4d54:	bl	3da8 <byteswap4@plt>
    4d58:	vmov	s0, r0
    4d5c:	pop	{r4, pc}

00004d60 <byteswap_double>:
    4d60:	push	{r4, lr}
    4d64:	vmov	r0, r1, d0
    4d68:	bl	3d90 <byteswap8@plt>
    4d6c:	vmov	d0, r0, r1
    4d70:	pop	{r4, pc}

00004d74 <readstat_convert>:
    4d74:	push	{r4, r5, r6, r7, lr}
    4d78:	sub	sp, sp, #28
    4d7c:	ldr	r4, [sp, #48]	; 0x30
    4d80:	str	r3, [sp, #8]
    4d84:	str	r2, [sp, #12]
    4d88:	ldr	r7, [sp, #8]
    4d8c:	cmp	r7, #0
    4d90:	beq	4da4 <readstat_convert+0x30>
    4d94:	sub	r3, r7, #1
    4d98:	ldrb	ip, [r2, r3]
    4d9c:	cmp	ip, #32
    4da0:	beq	4e34 <readstat_convert+0xc0>
    4da4:	cmp	r1, #0
    4da8:	beq	4e60 <readstat_convert+0xec>
    4dac:	cmp	r4, #0
    4db0:	mov	r3, r2
    4db4:	mov	r6, r1
    4db8:	mov	r5, r0
    4dbc:	beq	4e3c <readstat_convert+0xc8>
    4dc0:	sub	r3, r1, #1
    4dc4:	add	r2, sp, #8
    4dc8:	add	r1, sp, #12
    4dcc:	mov	r0, r4
    4dd0:	str	r3, [sp, #16]
    4dd4:	add	r3, sp, #16
    4dd8:	str	r3, [sp]
    4ddc:	add	r3, sp, #20
    4de0:	str	r5, [sp, #20]
    4de4:	bl	3dfc <iconv@plt>
    4de8:	cmn	r0, #1
    4dec:	bne	4e18 <readstat_convert+0xa4>
    4df0:	bl	427c <__errno_location@plt>
    4df4:	ldr	r3, [r0]
    4df8:	cmp	r3, #7
    4dfc:	beq	4e60 <readstat_convert+0xec>
    4e00:	cmp	r3, #84	; 0x54
    4e04:	moveq	r0, #17
    4e08:	beq	4e2c <readstat_convert+0xb8>
    4e0c:	cmp	r3, #22
    4e10:	movne	r0, #16
    4e14:	bne	4e2c <readstat_convert+0xb8>
    4e18:	ldr	r3, [sp, #16]
    4e1c:	add	r5, r5, r6
    4e20:	mov	r0, #0
    4e24:	mvn	r3, r3
    4e28:	strb	r0, [r5, r3]
    4e2c:	add	sp, sp, #28
    4e30:	pop	{r4, r5, r6, r7, pc}
    4e34:	str	r3, [sp, #8]
    4e38:	b	4d88 <readstat_convert+0x14>
    4e3c:	add	r2, r7, #1
    4e40:	cmp	r2, r1
    4e44:	bhi	4e60 <readstat_convert+0xec>
    4e48:	mov	r2, r7
    4e4c:	mov	r1, r3
    4e50:	bl	3f34 <memcpy@plt>
    4e54:	mov	r0, r4
    4e58:	strb	r4, [r5, r7]
    4e5c:	b	4e2c <readstat_convert+0xb8>
    4e60:	mov	r0, #19
    4e64:	b	4e2c <readstat_convert+0xb8>

00004e68 <readstat_error_message>:
    4e68:	cmp	r0, #0
    4e6c:	bxeq	lr
    4e70:	cmp	r0, #1
    4e74:	beq	4fb4 <readstat_error_message+0x14c>
    4e78:	cmp	r0, #2
    4e7c:	beq	4fc0 <readstat_error_message+0x158>
    4e80:	cmp	r0, #3
    4e84:	beq	4fcc <readstat_error_message+0x164>
    4e88:	cmp	r0, #4
    4e8c:	beq	4fd8 <readstat_error_message+0x170>
    4e90:	cmp	r0, #5
    4e94:	beq	4fe4 <readstat_error_message+0x17c>
    4e98:	cmp	r0, #6
    4e9c:	beq	4ff0 <readstat_error_message+0x188>
    4ea0:	cmp	r0, #7
    4ea4:	beq	4ffc <readstat_error_message+0x194>
    4ea8:	cmp	r0, #8
    4eac:	beq	5008 <readstat_error_message+0x1a0>
    4eb0:	cmp	r0, #9
    4eb4:	beq	5014 <readstat_error_message+0x1ac>
    4eb8:	cmp	r0, #10
    4ebc:	beq	5020 <readstat_error_message+0x1b8>
    4ec0:	cmp	r0, #11
    4ec4:	beq	502c <readstat_error_message+0x1c4>
    4ec8:	cmp	r0, #12
    4ecc:	beq	5038 <readstat_error_message+0x1d0>
    4ed0:	cmp	r0, #13
    4ed4:	beq	5044 <readstat_error_message+0x1dc>
    4ed8:	cmp	r0, #14
    4edc:	beq	5050 <readstat_error_message+0x1e8>
    4ee0:	cmp	r0, #15
    4ee4:	beq	505c <readstat_error_message+0x1f4>
    4ee8:	cmp	r0, #16
    4eec:	beq	5068 <readstat_error_message+0x200>
    4ef0:	cmp	r0, #17
    4ef4:	beq	5074 <readstat_error_message+0x20c>
    4ef8:	cmp	r0, #18
    4efc:	beq	5080 <readstat_error_message+0x218>
    4f00:	cmp	r0, #19
    4f04:	beq	508c <readstat_error_message+0x224>
    4f08:	cmp	r0, #20
    4f0c:	beq	5098 <readstat_error_message+0x230>
    4f10:	cmp	r0, #21
    4f14:	beq	50a4 <readstat_error_message+0x23c>
    4f18:	cmp	r0, #22
    4f1c:	beq	50b0 <readstat_error_message+0x248>
    4f20:	cmp	r0, #23
    4f24:	beq	50bc <readstat_error_message+0x254>
    4f28:	cmp	r0, #24
    4f2c:	beq	50c8 <readstat_error_message+0x260>
    4f30:	cmp	r0, #25
    4f34:	beq	50d4 <readstat_error_message+0x26c>
    4f38:	cmp	r0, #26
    4f3c:	beq	50e0 <readstat_error_message+0x278>
    4f40:	cmp	r0, #27
    4f44:	beq	50ec <readstat_error_message+0x284>
    4f48:	cmp	r0, #28
    4f4c:	beq	50f8 <readstat_error_message+0x290>
    4f50:	cmp	r0, #38	; 0x26
    4f54:	beq	5104 <readstat_error_message+0x29c>
    4f58:	cmp	r0, #29
    4f5c:	beq	5110 <readstat_error_message+0x2a8>
    4f60:	cmp	r0, #30
    4f64:	beq	511c <readstat_error_message+0x2b4>
    4f68:	cmp	r0, #31
    4f6c:	beq	5128 <readstat_error_message+0x2c0>
    4f70:	cmp	r0, #32
    4f74:	beq	5134 <readstat_error_message+0x2cc>
    4f78:	cmp	r0, #33	; 0x21
    4f7c:	beq	5140 <readstat_error_message+0x2d8>
    4f80:	cmp	r0, #34	; 0x22
    4f84:	beq	514c <readstat_error_message+0x2e4>
    4f88:	cmp	r0, #35	; 0x23
    4f8c:	beq	5158 <readstat_error_message+0x2f0>
    4f90:	cmp	r0, #36	; 0x24
    4f94:	beq	5164 <readstat_error_message+0x2fc>
    4f98:	cmp	r0, #37	; 0x25
    4f9c:	beq	5170 <readstat_error_message+0x308>
    4fa0:	cmp	r0, #39	; 0x27
    4fa4:	bne	517c <readstat_error_message+0x314>
    4fa8:	ldr	r0, [pc, #472]	; 5188 <readstat_error_message+0x320>
    4fac:	add	r0, pc, r0
    4fb0:	bx	lr
    4fb4:	ldr	r0, [pc, #464]	; 518c <readstat_error_message+0x324>
    4fb8:	add	r0, pc, r0
    4fbc:	bx	lr
    4fc0:	ldr	r0, [pc, #456]	; 5190 <readstat_error_message+0x328>
    4fc4:	add	r0, pc, r0
    4fc8:	bx	lr
    4fcc:	ldr	r0, [pc, #448]	; 5194 <readstat_error_message+0x32c>
    4fd0:	add	r0, pc, r0
    4fd4:	bx	lr
    4fd8:	ldr	r0, [pc, #440]	; 5198 <readstat_error_message+0x330>
    4fdc:	add	r0, pc, r0
    4fe0:	bx	lr
    4fe4:	ldr	r0, [pc, #432]	; 519c <readstat_error_message+0x334>
    4fe8:	add	r0, pc, r0
    4fec:	bx	lr
    4ff0:	ldr	r0, [pc, #424]	; 51a0 <readstat_error_message+0x338>
    4ff4:	add	r0, pc, r0
    4ff8:	bx	lr
    4ffc:	ldr	r0, [pc, #416]	; 51a4 <readstat_error_message+0x33c>
    5000:	add	r0, pc, r0
    5004:	bx	lr
    5008:	ldr	r0, [pc, #408]	; 51a8 <readstat_error_message+0x340>
    500c:	add	r0, pc, r0
    5010:	bx	lr
    5014:	ldr	r0, [pc, #400]	; 51ac <readstat_error_message+0x344>
    5018:	add	r0, pc, r0
    501c:	bx	lr
    5020:	ldr	r0, [pc, #392]	; 51b0 <readstat_error_message+0x348>
    5024:	add	r0, pc, r0
    5028:	bx	lr
    502c:	ldr	r0, [pc, #384]	; 51b4 <readstat_error_message+0x34c>
    5030:	add	r0, pc, r0
    5034:	bx	lr
    5038:	ldr	r0, [pc, #376]	; 51b8 <readstat_error_message+0x350>
    503c:	add	r0, pc, r0
    5040:	bx	lr
    5044:	ldr	r0, [pc, #368]	; 51bc <readstat_error_message+0x354>
    5048:	add	r0, pc, r0
    504c:	bx	lr
    5050:	ldr	r0, [pc, #360]	; 51c0 <readstat_error_message+0x358>
    5054:	add	r0, pc, r0
    5058:	bx	lr
    505c:	ldr	r0, [pc, #352]	; 51c4 <readstat_error_message+0x35c>
    5060:	add	r0, pc, r0
    5064:	bx	lr
    5068:	ldr	r0, [pc, #344]	; 51c8 <readstat_error_message+0x360>
    506c:	add	r0, pc, r0
    5070:	bx	lr
    5074:	ldr	r0, [pc, #336]	; 51cc <readstat_error_message+0x364>
    5078:	add	r0, pc, r0
    507c:	bx	lr
    5080:	ldr	r0, [pc, #328]	; 51d0 <readstat_error_message+0x368>
    5084:	add	r0, pc, r0
    5088:	bx	lr
    508c:	ldr	r0, [pc, #320]	; 51d4 <readstat_error_message+0x36c>
    5090:	add	r0, pc, r0
    5094:	bx	lr
    5098:	ldr	r0, [pc, #312]	; 51d8 <readstat_error_message+0x370>
    509c:	add	r0, pc, r0
    50a0:	bx	lr
    50a4:	ldr	r0, [pc, #304]	; 51dc <readstat_error_message+0x374>
    50a8:	add	r0, pc, r0
    50ac:	bx	lr
    50b0:	ldr	r0, [pc, #296]	; 51e0 <readstat_error_message+0x378>
    50b4:	add	r0, pc, r0
    50b8:	bx	lr
    50bc:	ldr	r0, [pc, #288]	; 51e4 <readstat_error_message+0x37c>
    50c0:	add	r0, pc, r0
    50c4:	bx	lr
    50c8:	ldr	r0, [pc, #280]	; 51e8 <readstat_error_message+0x380>
    50cc:	add	r0, pc, r0
    50d0:	bx	lr
    50d4:	ldr	r0, [pc, #272]	; 51ec <readstat_error_message+0x384>
    50d8:	add	r0, pc, r0
    50dc:	bx	lr
    50e0:	ldr	r0, [pc, #264]	; 51f0 <readstat_error_message+0x388>
    50e4:	add	r0, pc, r0
    50e8:	bx	lr
    50ec:	ldr	r0, [pc, #256]	; 51f4 <readstat_error_message+0x38c>
    50f0:	add	r0, pc, r0
    50f4:	bx	lr
    50f8:	ldr	r0, [pc, #248]	; 51f8 <readstat_error_message+0x390>
    50fc:	add	r0, pc, r0
    5100:	bx	lr
    5104:	ldr	r0, [pc, #240]	; 51fc <readstat_error_message+0x394>
    5108:	add	r0, pc, r0
    510c:	bx	lr
    5110:	ldr	r0, [pc, #232]	; 5200 <readstat_error_message+0x398>
    5114:	add	r0, pc, r0
    5118:	bx	lr
    511c:	ldr	r0, [pc, #224]	; 5204 <readstat_error_message+0x39c>
    5120:	add	r0, pc, r0
    5124:	bx	lr
    5128:	ldr	r0, [pc, #216]	; 5208 <readstat_error_message+0x3a0>
    512c:	add	r0, pc, r0
    5130:	bx	lr
    5134:	ldr	r0, [pc, #208]	; 520c <readstat_error_message+0x3a4>
    5138:	add	r0, pc, r0
    513c:	bx	lr
    5140:	ldr	r0, [pc, #200]	; 5210 <readstat_error_message+0x3a8>
    5144:	add	r0, pc, r0
    5148:	bx	lr
    514c:	ldr	r0, [pc, #192]	; 5214 <readstat_error_message+0x3ac>
    5150:	add	r0, pc, r0
    5154:	bx	lr
    5158:	ldr	r0, [pc, #184]	; 5218 <readstat_error_message+0x3b0>
    515c:	add	r0, pc, r0
    5160:	bx	lr
    5164:	ldr	r0, [pc, #176]	; 521c <readstat_error_message+0x3b4>
    5168:	add	r0, pc, r0
    516c:	bx	lr
    5170:	ldr	r0, [pc, #168]	; 5220 <readstat_error_message+0x3b8>
    5174:	add	r0, pc, r0
    5178:	bx	lr
    517c:	ldr	r0, [pc, #160]	; 5224 <readstat_error_message+0x3bc>
    5180:	add	r0, pc, r0
    5184:	bx	lr
    5188:	.word	0x0001bc1b
    518c:	.word	0x0001b44b
    5190:	.word	0x0001b453
    5194:	.word	0x0001b460
    5198:	.word	0x0001b46e
    519c:	.word	0x0001b49d
    51a0:	.word	0x0001b4c0
    51a4:	.word	0x0001b4dc
    51a8:	.word	0x0001b4f6
    51ac:	.word	0x0001b51e
    51b0:	.word	0x0001b543
    51b4:	.word	0x0001b565
    51b8:	.word	0x0001b58a
    51bc:	.word	0x0001b5c2
    51c0:	.word	0x0001b5cb
    51c4:	.word	0x0001b62a
    51c8:	.word	0x0001b639
    51cc:	.word	0x0001b660
    51d0:	.word	0x0001b69f
    51d4:	.word	0x0001b6e1
    51d8:	.word	0x0001b722
    51dc:	.word	0x0001b77a
    51e0:	.word	0x0001b7c8
    51e4:	.word	0x0001b817
    51e8:	.word	0x0001b850
    51ec:	.word	0x0001b875
    51f0:	.word	0x0001b89a
    51f4:	.word	0x0001b8bc
    51f8:	.word	0x0001b8d3
    51fc:	.word	0x0001b8f7
    5200:	.word	0x0001b90d
    5204:	.word	0x0001b928
    5208:	.word	0x0001b956
    520c:	.word	0x0001b988
    5210:	.word	0x0001b9ae
    5214:	.word	0x0001b9e5
    5218:	.word	0x0001ba0d
    521c:	.word	0x0001b268
    5220:	.word	0x0001ba25
    5224:	.word	0x0001b275

00005228 <unistd_open_handler>:
    5228:	push	{r4, lr}
    522c:	mov	r4, r1
    5230:	mov	r1, #0
    5234:	bl	41c8 <open@plt>
    5238:	str	r0, [r4]
    523c:	pop	{r4, pc}

00005240 <unistd_close_handler>:
    5240:	ldr	r0, [r0]
    5244:	cmn	r0, #1
    5248:	beq	5250 <unistd_close_handler+0x10>
    524c:	b	4534 <close@plt>
    5250:	mov	r0, #0
    5254:	bx	lr

00005258 <unistd_seek_handler>:
    5258:	cmp	r1, #2
    525c:	mov	r3, r2
    5260:	bhi	527c <unistd_seek_handler+0x24>
    5264:	ldr	r2, [pc, #24]	; 5284 <unistd_seek_handler+0x2c>
    5268:	add	r2, pc, r2
    526c:	ldrsb	r2, [r2, r1]
    5270:	mov	r1, r0
    5274:	ldr	r0, [r3]
    5278:	b	3f88 <lseek@plt>
    527c:	mvn	r0, #0
    5280:	bx	lr
    5284:	.word	0x0001b986

00005288 <unistd_read_handler>:
    5288:	mov	r3, r2
    528c:	mov	r2, r1
    5290:	mov	r1, r0
    5294:	ldr	r0, [r3]
    5298:	b	3e50 <read@plt>

0000529c <unistd_update_handler>:
    529c:	push	{r4, r5, r6, lr}
    52a0:	subs	r4, r1, #0
    52a4:	vpush	{d8}
    52a8:	bne	52b8 <unistd_update_handler+0x1c>
    52ac:	mov	r0, #0
    52b0:	vpop	{d8}
    52b4:	pop	{r4, r5, r6, pc}
    52b8:	mov	r5, r2
    52bc:	vmov	s16, r0
    52c0:	mov	r2, #1
    52c4:	mov	r1, #0
    52c8:	ldr	r0, [r3]
    52cc:	bl	3f88 <lseek@plt>
    52d0:	cmn	r0, #1
    52d4:	moveq	r0, #15
    52d8:	beq	52b0 <unistd_update_handler+0x14>
    52dc:	vmov	s15, r0
    52e0:	vcvt.f64.s32	d8, s16
    52e4:	mov	r0, r5
    52e8:	vcvt.f64.s32	d0, s15
    52ec:	vdiv.f64	d0, d0, d8
    52f0:	blx	r4
    52f4:	cmp	r0, #0
    52f8:	movne	r0, #4
    52fc:	beq	52ac <unistd_update_handler+0x10>
    5300:	b	52b0 <unistd_update_handler+0x14>

00005304 <unistd_io_init>:
    5304:	push	{r0, r1, r4, r5, r6, lr}
    5308:	mov	r4, r0
    530c:	ldr	r5, [pc, #216]	; 53ec <unistd_io_init+0xe8>
    5310:	ldr	r3, [pc, #216]	; 53f0 <unistd_io_init+0xec>
    5314:	add	r5, pc, r5
    5318:	ldr	r3, [r5, r3]
    531c:	mov	r1, r3
    5320:	str	r3, [sp, #4]
    5324:	bl	3d84 <readstat_set_open_handler@plt>
    5328:	subs	r6, r0, #0
    532c:	bne	53e0 <unistd_io_init+0xdc>
    5330:	ldr	r3, [pc, #188]	; 53f4 <unistd_io_init+0xf0>
    5334:	mov	r0, r4
    5338:	ldr	r3, [r5, r3]
    533c:	mov	r1, r3
    5340:	str	r3, [sp, #4]
    5344:	bl	448c <readstat_set_close_handler@plt>
    5348:	subs	r6, r0, #0
    534c:	bne	53e0 <unistd_io_init+0xdc>
    5350:	ldr	r3, [pc, #160]	; 53f8 <unistd_io_init+0xf4>
    5354:	mov	r0, r4
    5358:	ldr	r3, [r5, r3]
    535c:	mov	r1, r3
    5360:	str	r3, [sp, #4]
    5364:	bl	3d78 <readstat_set_seek_handler@plt>
    5368:	subs	r6, r0, #0
    536c:	bne	53e0 <unistd_io_init+0xdc>
    5370:	ldr	r3, [pc, #132]	; 53fc <unistd_io_init+0xf8>
    5374:	mov	r0, r4
    5378:	ldr	r3, [r5, r3]
    537c:	mov	r1, r3
    5380:	str	r3, [sp, #4]
    5384:	bl	4354 <readstat_set_read_handler@plt>
    5388:	subs	r6, r0, #0
    538c:	bne	53e0 <unistd_io_init+0xdc>
    5390:	ldr	r3, [pc, #104]	; 5400 <unistd_io_init+0xfc>
    5394:	mov	r0, r4
    5398:	ldr	r3, [r5, r3]
    539c:	mov	r1, r3
    53a0:	str	r3, [sp, #4]
    53a4:	bl	3ea4 <readstat_set_update_handler@plt>
    53a8:	cmp	r0, #0
    53ac:	bne	53e0 <unistd_io_init+0xdc>
    53b0:	mov	r1, #4
    53b4:	mov	r0, #1
    53b8:	bl	3d6c <calloc@plt>
    53bc:	mov	r1, r0
    53c0:	mvn	r3, #0
    53c4:	mov	r0, r4
    53c8:	str	r3, [r1]
    53cc:	bl	4108 <readstat_set_io_ctx@plt>
    53d0:	ldr	r3, [r4, #32]
    53d4:	mov	r2, #1
    53d8:	mov	r6, r0
    53dc:	str	r2, [r3, #24]
    53e0:	mov	r0, r6
    53e4:	add	sp, sp, #8
    53e8:	pop	{r4, r5, r6, pc}
    53ec:	.word	0x0003ace4
    53f0:	.word	0x000002e0
    53f4:	.word	0x00000310
    53f8:	.word	0x0000030c
    53fc:	.word	0x000002c4
    5400:	.word	0x00000300

00005404 <readstat_malloc>:
    5404:	ldr	r3, [pc, #20]	; 5420 <readstat_malloc+0x1c>
    5408:	sub	r2, r0, #1
    540c:	cmp	r2, r3
    5410:	bhi	5418 <readstat_malloc+0x14>
    5414:	b	412c <malloc@plt>
    5418:	mov	r0, #0
    541c:	bx	lr
    5420:	.word	0x00ffefff

00005424 <readstat_calloc>:
    5424:	ldr	ip, [pc, #52]	; 5460 <readstat_calloc+0x3c>
    5428:	push	{lr}		; (str lr, [sp, #-4]!)
    542c:	mul	lr, r1, r0
    5430:	cmp	lr, ip
    5434:	bhi	5458 <readstat_calloc+0x34>
    5438:	sub	r2, r1, #1
    543c:	sub	ip, ip, #1
    5440:	sub	r3, r0, #1
    5444:	cmp	r3, ip
    5448:	cmpls	r2, ip
    544c:	bhi	5458 <readstat_calloc+0x34>
    5450:	pop	{lr}		; (ldr lr, [sp], #4)
    5454:	b	3d6c <calloc@plt>
    5458:	mov	r0, #0
    545c:	pop	{pc}		; (ldr pc, [sp], #4)
    5460:	.word	0x00fff000

00005464 <readstat_realloc>:
    5464:	ldr	r2, [pc, #44]	; 5498 <readstat_realloc+0x34>
    5468:	sub	ip, r1, #1
    546c:	cmp	ip, r2
    5470:	bls	548c <readstat_realloc+0x28>
    5474:	cmp	r0, #0
    5478:	beq	5490 <readstat_realloc+0x2c>
    547c:	push	{r4, lr}
    5480:	bl	3ed4 <free@plt>
    5484:	mov	r0, #0
    5488:	pop	{r4, pc}
    548c:	b	400c <realloc@plt>
    5490:	mov	r0, #0
    5494:	bx	lr
    5498:	.word	0x00ffefff

0000549c <readstat_get_row_count>:
    549c:	ldr	r0, [r0]
    54a0:	bx	lr

000054a4 <readstat_get_var_count>:
    54a4:	ldr	r0, [r0, #8]
    54a8:	bx	lr

000054ac <readstat_get_creation_time>:
    54ac:	ldr	r0, [r0, #16]
    54b0:	bx	lr

000054b4 <readstat_get_modified_time>:
    54b4:	ldr	r0, [r0, #20]
    54b8:	bx	lr

000054bc <readstat_get_file_format_version>:
    54bc:	ldr	r0, [r0, #24]
    54c0:	bx	lr

000054c4 <readstat_get_file_format_is_64bit>:
    54c4:	ldrb	r0, [r0, #52]	; 0x34
    54c8:	and	r0, r0, #1
    54cc:	bx	lr

000054d0 <readstat_get_compression>:
    54d0:	ldr	r0, [r0, #32]
    54d4:	bx	lr

000054d8 <readstat_get_endianness>:
    54d8:	ldr	r0, [r0, #36]	; 0x24
    54dc:	bx	lr

000054e0 <readstat_get_file_label>:
    54e0:	ldr	r0, [r0, #44]	; 0x2c
    54e4:	bx	lr

000054e8 <readstat_get_file_encoding>:
    54e8:	ldr	r0, [r0, #48]	; 0x30
    54ec:	bx	lr

000054f0 <readstat_get_table_name>:
    54f0:	ldr	r0, [r0, #40]	; 0x28
    54f4:	bx	lr

000054f8 <readstat_set_metadata_handler>:
    54f8:	str	r1, [r0]
    54fc:	mov	r0, #0
    5500:	bx	lr

00005504 <readstat_set_note_handler>:
    5504:	str	r1, [r0, #4]
    5508:	mov	r0, #0
    550c:	bx	lr

00005510 <readstat_set_variable_handler>:
    5510:	str	r1, [r0, #8]
    5514:	mov	r0, #0
    5518:	bx	lr

0000551c <readstat_set_value_handler>:
    551c:	str	r1, [r0, #16]
    5520:	mov	r0, #0
    5524:	bx	lr

00005528 <readstat_set_value_label_handler>:
    5528:	str	r1, [r0, #20]
    552c:	mov	r0, #0
    5530:	bx	lr

00005534 <readstat_set_error_handler>:
    5534:	str	r1, [r0, #24]
    5538:	mov	r0, #0
    553c:	bx	lr

00005540 <readstat_set_progress_handler>:
    5540:	str	r1, [r0, #28]
    5544:	mov	r0, #0
    5548:	bx	lr

0000554c <readstat_set_fweight_handler>:
    554c:	str	r1, [r0, #12]
    5550:	mov	r0, #0
    5554:	bx	lr

00005558 <readstat_set_open_handler>:
    5558:	ldr	r3, [r0, #32]
    555c:	mov	r0, #0
    5560:	str	r1, [r3]
    5564:	bx	lr

00005568 <readstat_set_close_handler>:
    5568:	ldr	r3, [r0, #32]
    556c:	mov	r0, #0
    5570:	str	r1, [r3, #4]
    5574:	bx	lr

00005578 <readstat_set_seek_handler>:
    5578:	ldr	r3, [r0, #32]
    557c:	mov	r0, #0
    5580:	str	r1, [r3, #8]
    5584:	bx	lr

00005588 <readstat_set_read_handler>:
    5588:	ldr	r3, [r0, #32]
    558c:	mov	r0, #0
    5590:	str	r1, [r3, #12]
    5594:	bx	lr

00005598 <readstat_set_update_handler>:
    5598:	ldr	r3, [r0, #32]
    559c:	mov	r0, #0
    55a0:	str	r1, [r3, #16]
    55a4:	bx	lr

000055a8 <readstat_set_io_ctx>:
    55a8:	ldr	r3, [r0, #32]
    55ac:	push	{r4, r5, r6, lr}
    55b0:	mov	r4, r0
    55b4:	mov	r5, r1
    55b8:	ldr	r2, [r3, #24]
    55bc:	cmp	r2, #0
    55c0:	beq	55cc <readstat_set_io_ctx+0x24>
    55c4:	ldr	r0, [r3, #20]
    55c8:	bl	3ed4 <free@plt>
    55cc:	ldr	r3, [r4, #32]
    55d0:	mov	r0, #0
    55d4:	str	r5, [r3, #20]
    55d8:	str	r0, [r3, #24]
    55dc:	pop	{r4, r5, r6, pc}

000055e0 <readstat_parser_free>:
    55e0:	push	{r4, lr}
    55e4:	subs	r4, r0, #0
    55e8:	popeq	{r4, pc}
    55ec:	ldr	r3, [r4, #32]
    55f0:	cmp	r3, #0
    55f4:	beq	5608 <readstat_parser_free+0x28>
    55f8:	mov	r1, #0
    55fc:	bl	4108 <readstat_set_io_ctx@plt>
    5600:	ldr	r0, [r4, #32]
    5604:	bl	3ed4 <free@plt>
    5608:	mov	r0, r4
    560c:	pop	{r4, lr}
    5610:	b	3ed4 <free@plt>

00005614 <readstat_parser_init>:
    5614:	push	{r4, lr}
    5618:	mov	r1, #52	; 0x34
    561c:	mov	r0, #1
    5620:	bl	3d6c <calloc@plt>
    5624:	mov	r4, r0
    5628:	mov	r1, #28
    562c:	mov	r0, #1
    5630:	bl	3d6c <calloc@plt>
    5634:	str	r0, [r4, #32]
    5638:	mov	r0, r4
    563c:	bl	3f94 <unistd_io_init@plt>
    5640:	cmp	r0, #0
    5644:	beq	565c <readstat_parser_init+0x48>
    5648:	mov	r0, r4
    564c:	mov	r4, #0
    5650:	bl	4120 <readstat_parser_free@plt>
    5654:	mov	r0, r4
    5658:	pop	{r4, pc}
    565c:	ldr	r3, [pc, #8]	; 566c <readstat_parser_init+0x58>
    5660:	add	r3, pc, r3
    5664:	str	r3, [r4, #40]	; 0x28
    5668:	b	5654 <readstat_parser_init+0x40>
    566c:	.word	0x0001b591

00005670 <readstat_set_file_character_encoding>:
    5670:	str	r1, [r0, #36]	; 0x24
    5674:	mov	r0, #0
    5678:	bx	lr

0000567c <readstat_set_handler_character_encoding>:
    567c:	str	r1, [r0, #40]	; 0x28
    5680:	mov	r0, #0
    5684:	bx	lr

00005688 <readstat_set_row_limit>:
    5688:	str	r1, [r0, #44]	; 0x2c
    568c:	mov	r0, #0
    5690:	bx	lr

00005694 <readstat_set_row_offset>:
    5694:	str	r1, [r0, #48]	; 0x30
    5698:	mov	r0, #0
    569c:	bx	lr

000056a0 <readstat_type_class>:
    56a0:	sub	r3, r0, #6
    56a4:	cmp	r0, #0
    56a8:	clz	r3, r3
    56ac:	moveq	r0, #1
    56b0:	lsr	r3, r3, #5
    56b4:	movne	r0, r3
    56b8:	eor	r0, r0, #1
    56bc:	bx	lr

000056c0 <readstat_value_type>:
    56c0:	sub	sp, sp, #16
    56c4:	add	ip, sp, #16
    56c8:	stmdb	ip, {r0, r1, r2, r3}
    56cc:	ldr	r0, [sp, #8]
    56d0:	add	sp, sp, #16
    56d4:	bx	lr

000056d8 <readstat_value_type_class>:
    56d8:	sub	sp, sp, #16
    56dc:	add	ip, sp, #16
    56e0:	stmdb	ip, {r0, r1, r2, r3}
    56e4:	ldr	r0, [sp, #8]
    56e8:	add	sp, sp, #16
    56ec:	b	3e38 <readstat_type_class@plt>

000056f0 <readstat_value_tag>:
    56f0:	sub	sp, sp, #16
    56f4:	add	ip, sp, #16
    56f8:	stmdb	ip, {r0, r1, r2, r3}
    56fc:	ldrb	r0, [sp, #12]
    5700:	add	sp, sp, #16
    5704:	bx	lr

00005708 <readstat_value_is_system_missing>:
    5708:	sub	sp, sp, #16
    570c:	add	ip, sp, #16
    5710:	stmdb	ip, {r0, r1, r2, r3}
    5714:	ldrb	r0, [sp, #13]
    5718:	and	r0, r0, #1
    571c:	add	sp, sp, #16
    5720:	bx	lr

00005724 <readstat_value_is_tagged_missing>:
    5724:	sub	sp, sp, #16
    5728:	add	ip, sp, #16
    572c:	stmdb	ip, {r0, r1, r2, r3}
    5730:	ldrb	r0, [sp, #13]
    5734:	ubfx	r0, r0, #1, #1
    5738:	add	sp, sp, #16
    573c:	bx	lr

00005740 <readstat_int8_value>:
    5740:	push	{r4, lr}
    5744:	sub	sp, sp, #24
    5748:	add	ip, sp, #8
    574c:	stm	ip, {r0, r1, r2, r3}
    5750:	ldm	ip, {r0, r1, r2, r3}
    5754:	ldr	r4, [sp, #16]
    5758:	bl	3ee0 <readstat_value_is_system_missing@plt>
    575c:	cmp	r0, #0
    5760:	movne	r0, #0
    5764:	bne	5790 <readstat_int8_value+0x50>
    5768:	cmp	r4, #5
    576c:	vldreq	d7, [sp, #8]
    5770:	vcvteq.u32.f64	s15, d7
    5774:	beq	5788 <readstat_int8_value+0x48>
    5778:	cmp	r4, #4
    577c:	bne	5798 <readstat_int8_value+0x58>
    5780:	vldr	s15, [sp, #8]
    5784:	vcvt.u32.f32	s15, s15
    5788:	vstr	s15, [sp, #4]
    578c:	ldrb	r0, [sp, #4]
    5790:	add	sp, sp, #24
    5794:	pop	{r4, pc}
    5798:	cmp	r4, #3
    579c:	bne	57a8 <readstat_int8_value+0x68>
    57a0:	ldrb	r0, [sp, #8]
    57a4:	b	5790 <readstat_int8_value+0x50>
    57a8:	cmp	r4, #2
    57ac:	beq	57a0 <readstat_int8_value+0x60>
    57b0:	cmp	r4, #1
    57b4:	bne	5790 <readstat_int8_value+0x50>
    57b8:	b	57a0 <readstat_int8_value+0x60>

000057bc <readstat_int16_value>:
    57bc:	push	{r0, r1, r2, r3, r4, lr}
    57c0:	mov	ip, sp
    57c4:	mov	r4, r2
    57c8:	stm	ip, {r0, r1, r2, r3}
    57cc:	ldm	ip, {r0, r1, r2, r3}
    57d0:	bl	3ee0 <readstat_value_is_system_missing@plt>
    57d4:	cmp	r0, #0
    57d8:	movne	r0, #0
    57dc:	bne	580c <readstat_int16_value+0x50>
    57e0:	cmp	r4, #5
    57e4:	vldreq	d7, [sp]
    57e8:	vcvteq.s32.f64	s14, d7
    57ec:	vmoveq	r3, s14
    57f0:	beq	5808 <readstat_int16_value+0x4c>
    57f4:	cmp	r4, #4
    57f8:	bne	5814 <readstat_int16_value+0x58>
    57fc:	vldr	s15, [sp]
    5800:	vcvt.s32.f32	s15, s15
    5804:	vmov	r3, s15
    5808:	sxth	r0, r3
    580c:	add	sp, sp, #16
    5810:	pop	{r4, pc}
    5814:	cmp	r4, #3
    5818:	bne	5824 <readstat_int16_value+0x68>
    581c:	ldrsh	r0, [sp]
    5820:	b	580c <readstat_int16_value+0x50>
    5824:	cmp	r4, #2
    5828:	beq	581c <readstat_int16_value+0x60>
    582c:	cmp	r4, #1
    5830:	ldrsbeq	r0, [sp]
    5834:	b	580c <readstat_int16_value+0x50>

00005838 <readstat_int32_value>:
    5838:	push	{r0, r1, r2, r3, r4, lr}
    583c:	mov	ip, sp
    5840:	mov	r4, r2
    5844:	stm	ip, {r0, r1, r2, r3}
    5848:	ldm	ip, {r0, r1, r2, r3}
    584c:	bl	3ee0 <readstat_value_is_system_missing@plt>
    5850:	cmp	r0, #0
    5854:	movne	r0, #0
    5858:	bne	5880 <readstat_int32_value+0x48>
    585c:	cmp	r4, #5
    5860:	vldreq	d7, [sp]
    5864:	vcvteq.s32.f64	s15, d7
    5868:	beq	587c <readstat_int32_value+0x44>
    586c:	cmp	r4, #4
    5870:	bne	5888 <readstat_int32_value+0x50>
    5874:	vldr	s15, [sp]
    5878:	vcvt.s32.f32	s15, s15
    587c:	vmov	r0, s15
    5880:	add	sp, sp, #16
    5884:	pop	{r4, pc}
    5888:	cmp	r4, #3
    588c:	ldreq	r0, [sp]
    5890:	beq	5880 <readstat_int32_value+0x48>
    5894:	cmp	r4, #2
    5898:	ldrsheq	r0, [sp]
    589c:	beq	5880 <readstat_int32_value+0x48>
    58a0:	cmp	r4, #1
    58a4:	ldrsbeq	r0, [sp]
    58a8:	b	5880 <readstat_int32_value+0x48>

000058ac <readstat_float_value>:
    58ac:	push	{r0, r1, r2, r3, r4, lr}
    58b0:	mov	ip, sp
    58b4:	mov	r4, r2
    58b8:	stm	ip, {r0, r1, r2, r3}
    58bc:	ldm	ip, {r0, r1, r2, r3}
    58c0:	bl	3ee0 <readstat_value_is_system_missing@plt>
    58c4:	cmp	r0, #0
    58c8:	vldrne	s0, [pc, #88]	; 5928 <readstat_float_value+0x7c>
    58cc:	bne	58ec <readstat_float_value+0x40>
    58d0:	cmp	r4, #5
    58d4:	vldreq	d0, [sp]
    58d8:	vcvteq.f32.f64	s0, d0
    58dc:	beq	58ec <readstat_float_value+0x40>
    58e0:	cmp	r4, #4
    58e4:	bne	58f4 <readstat_float_value+0x48>
    58e8:	vldr	s0, [sp]
    58ec:	add	sp, sp, #16
    58f0:	pop	{r4, pc}
    58f4:	cmp	r4, #3
    58f8:	vldreq	s15, [sp]
    58fc:	vcvteq.f32.s32	s0, s15
    5900:	beq	58ec <readstat_float_value+0x40>
    5904:	cmp	r4, #2
    5908:	ldrsheq	r3, [sp]
    590c:	beq	591c <readstat_float_value+0x70>
    5910:	cmp	r4, #1
    5914:	bne	58e8 <readstat_float_value+0x3c>
    5918:	ldrsb	r3, [sp]
    591c:	vmov	s0, r3
    5920:	vcvt.f32.s32	s0, s0
    5924:	b	58ec <readstat_float_value+0x40>
    5928:	.word	0x7fc00000

0000592c <readstat_double_value>:
    592c:	push	{r0, r1, r2, r3, r4, lr}
    5930:	mov	ip, sp
    5934:	mov	r4, r2
    5938:	stm	ip, {r0, r1, r2, r3}
    593c:	ldm	ip, {r0, r1, r2, r3}
    5940:	bl	3ee0 <readstat_value_is_system_missing@plt>
    5944:	cmp	r0, #0
    5948:	bne	59a0 <readstat_double_value+0x74>
    594c:	cmp	r4, #5
    5950:	vldreq	d0, [sp]
    5954:	beq	5998 <readstat_double_value+0x6c>
    5958:	cmp	r4, #4
    595c:	vldreq	s0, [sp]
    5960:	vcvteq.f64.f32	d0, s0
    5964:	beq	5998 <readstat_double_value+0x6c>
    5968:	cmp	r4, #3
    596c:	vldreq	s15, [sp]
    5970:	vcvteq.f64.s32	d0, s15
    5974:	beq	5998 <readstat_double_value+0x6c>
    5978:	cmp	r4, #2
    597c:	ldrsheq	r3, [sp]
    5980:	beq	5990 <readstat_double_value+0x64>
    5984:	cmp	r4, #1
    5988:	bne	59a0 <readstat_double_value+0x74>
    598c:	ldrsb	r3, [sp]
    5990:	vmov	s0, r3
    5994:	vcvt.f64.s32	d0, s0
    5998:	add	sp, sp, #16
    599c:	pop	{r4, pc}
    59a0:	vldr	d0, [pc]	; 59a8 <readstat_double_value+0x7c>
    59a4:	b	5998 <readstat_double_value+0x6c>
    59a8:	.word	0x00000000
    59ac:	.word	0x7ff80000

000059b0 <readstat_string_value>:
    59b0:	push	{r0, r1, r2, r3, r4, lr}
    59b4:	mov	ip, sp
    59b8:	stm	ip, {r0, r1, r2, r3}
    59bc:	ldm	ip, {r0, r1, r2, r3}
    59c0:	bl	4360 <readstat_value_type@plt>
    59c4:	cmp	r0, #0
    59c8:	ldreq	r0, [sp]
    59cc:	movne	r0, #0
    59d0:	add	sp, sp, #20
    59d4:	pop	{pc}		; (ldr pc, [sp], #4)

000059d8 <readstat_value_is_defined_missing>:
    59d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    59dc:	vpush	{d8-d9}
    59e0:	sub	sp, sp, #80	; 0x50
    59e4:	mov	r4, sp
    59e8:	stm	r4, {r0, r1, r2, r3}
    59ec:	ldm	r4, {r0, r1, r2, r3}
    59f0:	bl	40fc <readstat_value_type_class@plt>
    59f4:	mov	r5, r0
    59f8:	ldr	r0, [sp, #128]	; 0x80
    59fc:	bl	4564 <readstat_variable_get_type_class@plt>
    5a00:	cmp	r5, r0
    5a04:	beq	5a18 <readstat_value_is_defined_missing+0x40>
    5a08:	mov	r0, #0
    5a0c:	add	sp, sp, #80	; 0x50
    5a10:	vpop	{d8-d9}
    5a14:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    5a18:	ldm	r4, {r0, r1, r2, r3}
    5a1c:	bl	40fc <readstat_value_type_class@plt>
    5a20:	subs	r5, r0, #0
    5a24:	ldm	r4, {r0, r1, r2, r3}
    5a28:	bne	5ad4 <readstat_value_is_defined_missing+0xfc>
    5a2c:	bl	3fc4 <readstat_string_value@plt>
    5a30:	subs	r7, r0, #0
    5a34:	beq	5a08 <readstat_value_is_defined_missing+0x30>
    5a38:	ldr	r0, [sp, #128]	; 0x80
    5a3c:	mov	r4, r5
    5a40:	add	r6, sp, #16
    5a44:	bl	4324 <readstat_variable_get_missing_ranges_count@plt>
    5a48:	add	r5, sp, #32
    5a4c:	mov	sl, r0
    5a50:	cmp	sl, r4
    5a54:	ble	5a08 <readstat_value_is_defined_missing+0x30>
    5a58:	mov	r2, r4
    5a5c:	mov	r0, r5
    5a60:	ldr	r1, [sp, #128]	; 0x80
    5a64:	bl	3f58 <readstat_variable_get_missing_range_lo@plt>
    5a68:	ldm	r5, {r0, r1, r2, r3}
    5a6c:	bl	3fc4 <readstat_string_value@plt>
    5a70:	mov	r9, r0
    5a74:	mov	r2, r4
    5a78:	ldr	r1, [sp, #128]	; 0x80
    5a7c:	mov	r0, r6
    5a80:	bl	4348 <readstat_variable_get_missing_range_hi@plt>
    5a84:	ldm	r6, {r0, r1, r2, r3}
    5a88:	bl	3fc4 <readstat_string_value@plt>
    5a8c:	cmp	r9, #0
    5a90:	cmpne	r0, #0
    5a94:	mov	r8, r0
    5a98:	beq	5acc <readstat_value_is_defined_missing+0xf4>
    5a9c:	mov	r1, r9
    5aa0:	mov	r0, r7
    5aa4:	bl	3e14 <strcmp@plt>
    5aa8:	cmp	r0, #0
    5aac:	blt	5acc <readstat_value_is_defined_missing+0xf4>
    5ab0:	mov	r1, r8
    5ab4:	mov	r0, r7
    5ab8:	bl	3e14 <strcmp@plt>
    5abc:	cmp	r0, #0
    5ac0:	bgt	5acc <readstat_value_is_defined_missing+0xf4>
    5ac4:	mov	r0, #1
    5ac8:	b	5a0c <readstat_value_is_defined_missing+0x34>
    5acc:	add	r4, r4, #1
    5ad0:	b	5a50 <readstat_value_is_defined_missing+0x78>
    5ad4:	bl	40fc <readstat_value_type_class@plt>
    5ad8:	cmp	r0, #1
    5adc:	bne	5a08 <readstat_value_is_defined_missing+0x30>
    5ae0:	ldm	r4, {r0, r1, r2, r3}
    5ae4:	add	r5, sp, #64	; 0x40
    5ae8:	mov	r4, #0
    5aec:	add	r6, sp, #48	; 0x30
    5af0:	bl	41d4 <readstat_double_value@plt>
    5af4:	ldr	r0, [sp, #128]	; 0x80
    5af8:	vmov.f64	d8, d0
    5afc:	bl	4324 <readstat_variable_get_missing_ranges_count@plt>
    5b00:	mov	r7, r0
    5b04:	cmp	r7, r4
    5b08:	ble	5a08 <readstat_value_is_defined_missing+0x30>
    5b0c:	mov	r2, r4
    5b10:	mov	r0, r5
    5b14:	ldr	r1, [sp, #128]	; 0x80
    5b18:	bl	3f58 <readstat_variable_get_missing_range_lo@plt>
    5b1c:	ldm	r5, {r0, r1, r2, r3}
    5b20:	bl	41d4 <readstat_double_value@plt>
    5b24:	vmov.f64	d9, d0
    5b28:	mov	r2, r4
    5b2c:	mov	r0, r6
    5b30:	ldr	r1, [sp, #128]	; 0x80
    5b34:	bl	4348 <readstat_variable_get_missing_range_hi@plt>
    5b38:	ldm	r6, {r0, r1, r2, r3}
    5b3c:	bl	41d4 <readstat_double_value@plt>
    5b40:	vcmpe.f64	d8, d9
    5b44:	vmrs	APSR_nzcv, fpscr
    5b48:	blt	5b58 <readstat_value_is_defined_missing+0x180>
    5b4c:	vcmpe.f64	d8, d0
    5b50:	vmrs	APSR_nzcv, fpscr
    5b54:	bls	5ac4 <readstat_value_is_defined_missing+0xec>
    5b58:	add	r4, r4, #1
    5b5c:	b	5b04 <readstat_value_is_defined_missing+0x12c>

00005b60 <readstat_value_is_missing>:
    5b60:	sub	sp, sp, #16
    5b64:	mov	ip, sp
    5b68:	stm	ip, {r0, r1, r2, r3}
    5b6c:	ldrb	r3, [sp, #13]
    5b70:	ldr	r0, [sp, #16]
    5b74:	tst	r3, #3
    5b78:	bne	5b90 <readstat_value_is_missing+0x30>
    5b7c:	cmp	r0, #0
    5b80:	beq	5b94 <readstat_value_is_missing+0x34>
    5b84:	ldm	ip, {r0, r1, r2, r3}
    5b88:	add	sp, sp, #16
    5b8c:	b	3f04 <readstat_value_is_defined_missing@plt>
    5b90:	mov	r0, #1
    5b94:	add	sp, sp, #16
    5b98:	bx	lr

00005b9c <make_double_value>:
    5b9c:	mov	r2, #0
    5ba0:	vstr	d0, [r0]
    5ba4:	str	r2, [r0, #12]
    5ba8:	mov	r2, #5
    5bac:	str	r2, [r0, #8]
    5bb0:	bx	lr

00005bb4 <make_string_value>:
    5bb4:	mov	r2, #0
    5bb8:	stm	r0, {r1, r2}
    5bbc:	str	r2, [r0, #8]
    5bc0:	str	r2, [r0, #12]
    5bc4:	bx	lr

00005bc8 <readstat_variable_get_name>:
    5bc8:	ldrb	r3, [r0, #8]
    5bcc:	cmp	r3, #0
    5bd0:	addne	r0, r0, #8
    5bd4:	moveq	r0, r3
    5bd8:	bx	lr

00005bdc <readstat_variable_get_label>:
    5bdc:	ldrb	r3, [r0, #564]	; 0x234
    5be0:	cmp	r3, #0
    5be4:	addne	r0, r0, #564	; 0x234
    5be8:	moveq	r0, r3
    5bec:	bx	lr

00005bf0 <readstat_variable_get_format>:
    5bf0:	ldrb	r3, [r0, #308]	; 0x134
    5bf4:	cmp	r3, #0
    5bf8:	addne	r0, r0, #308	; 0x134
    5bfc:	moveq	r0, r3
    5c00:	bx	lr

00005c04 <readstat_variable_get_type>:
    5c04:	ldr	r0, [r0]
    5c08:	bx	lr

00005c0c <readstat_variable_get_type_class>:
    5c0c:	ldr	r0, [r0]
    5c10:	b	3e38 <readstat_type_class@plt>

00005c14 <readstat_variable_get_index>:
    5c14:	ldr	r0, [r0, #4]
    5c18:	bx	lr

00005c1c <readstat_variable_get_index_after_skipping>:
    5c1c:	ldr	r0, [r0, #2148]	; 0x864
    5c20:	bx	lr

00005c24 <readstat_variable_get_storage_width>:
    5c24:	ldr	r0, [r0, #1596]	; 0x63c
    5c28:	bx	lr

00005c2c <readstat_variable_get_measure>:
    5c2c:	ldr	r0, [r0, #2128]	; 0x850
    5c30:	bx	lr

00005c34 <readstat_variable_get_alignment>:
    5c34:	ldr	r0, [r0, #2132]	; 0x854
    5c38:	bx	lr

00005c3c <readstat_variable_get_display_width>:
    5c3c:	ldr	r0, [r0, #2136]	; 0x858
    5c40:	bx	lr

00005c44 <readstat_variable_get_missing_ranges_count>:
    5c44:	ldr	r0, [r0, #2120]	; 0x848
    5c48:	bx	lr

00005c4c <readstat_variable_get_missing_range_lo>:
    5c4c:	ldr	r3, [r1, #2120]	; 0x848
    5c50:	mov	ip, r0
    5c54:	cmp	r3, r2
    5c58:	ble	5c88 <readstat_variable_get_missing_range_lo+0x3c>
    5c5c:	lsl	r3, r2, #1
    5c60:	add	r3, r3, #1
    5c64:	cmp	r3, #31
    5c68:	bhi	5c88 <readstat_variable_get_missing_range_lo+0x3c>
    5c6c:	add	r2, r1, r2, lsl #5
    5c70:	add	r2, r2, #1600	; 0x640
    5c74:	add	r2, r2, #8
    5c78:	ldm	r2, {r0, r1, r2, r3}
    5c7c:	stm	ip, {r0, r1, r2, r3}
    5c80:	mov	r0, ip
    5c84:	bx	lr
    5c88:	sub	sp, sp, #16
    5c8c:	mov	r3, #0
    5c90:	mov	r2, #0
    5c94:	str	r3, [sp, #12]
    5c98:	ldr	r3, [pc, #40]	; 5cc8 <readstat_variable_get_missing_range_lo+0x7c>
    5c9c:	strd	r2, [sp]
    5ca0:	mov	r3, #5
    5ca4:	str	r3, [sp, #8]
    5ca8:	mov	r3, #1
    5cac:	strb	r3, [sp, #13]
    5cb0:	add	r3, sp, #16
    5cb4:	ldmdb	r3, {r0, r1, r2, r3}
    5cb8:	stm	ip, {r0, r1, r2, r3}
    5cbc:	mov	r0, ip
    5cc0:	add	sp, sp, #16
    5cc4:	bx	lr
    5cc8:	.word	0x7ff80000

00005ccc <readstat_variable_get_missing_range_hi>:
    5ccc:	ldr	r3, [r1, #2120]	; 0x848
    5cd0:	mov	ip, r0
    5cd4:	cmp	r3, r2
    5cd8:	ble	5d08 <readstat_variable_get_missing_range_hi+0x3c>
    5cdc:	lsl	r2, r2, #1
    5ce0:	add	r2, r2, #1
    5ce4:	cmp	r2, #31
    5ce8:	bhi	5d08 <readstat_variable_get_missing_range_hi+0x3c>
    5cec:	add	r1, r1, r2, lsl #4
    5cf0:	add	r1, r1, #1600	; 0x640
    5cf4:	add	r1, r1, #8
    5cf8:	ldm	r1, {r0, r1, r2, r3}
    5cfc:	stm	ip, {r0, r1, r2, r3}
    5d00:	mov	r0, ip
    5d04:	bx	lr
    5d08:	sub	sp, sp, #16
    5d0c:	mov	r3, #0
    5d10:	mov	r2, #0
    5d14:	str	r3, [sp, #12]
    5d18:	ldr	r3, [pc, #40]	; 5d48 <readstat_variable_get_missing_range_hi+0x7c>
    5d1c:	strd	r2, [sp]
    5d20:	mov	r3, #5
    5d24:	str	r3, [sp, #8]
    5d28:	mov	r3, #1
    5d2c:	strb	r3, [sp, #13]
    5d30:	add	r3, sp, #16
    5d34:	ldmdb	r3, {r0, r1, r2, r3}
    5d38:	stm	ip, {r0, r1, r2, r3}
    5d3c:	mov	r0, ip
    5d40:	add	sp, sp, #16
    5d44:	bx	lr
    5d48:	.word	0x7ff80000

00005d4c <readstat_variable_add_missing_double_range>:
    5d4c:	push	{r4, r5, r6, r7, r8, lr}
    5d50:	sub	sp, sp, #64	; 0x40
    5d54:	mov	r6, r0
    5d58:	mov	r3, sp
    5d5c:	add	r4, sp, #16
    5d60:	mov	r0, r3
    5d64:	add	r7, sp, #32
    5d68:	bl	5b9c <make_double_value>
    5d6c:	vmov.f64	d0, d1
    5d70:	mov	r0, r4
    5d74:	add	r5, sp, #48	; 0x30
    5d78:	bl	5b9c <make_double_value>
    5d7c:	ldm	r3, {r0, r1, r2, r3}
    5d80:	stm	r7, {r0, r1, r2, r3}
    5d84:	ldm	r4, {r0, r1, r2, r3}
    5d88:	stm	r5, {r0, r1, r2, r3}
    5d8c:	mov	r0, r6
    5d90:	bl	4324 <readstat_variable_get_missing_ranges_count@plt>
    5d94:	lsl	lr, r0, #1
    5d98:	cmp	lr, #31
    5d9c:	movhi	r0, #31
    5da0:	bhi	5ddc <readstat_variable_add_missing_double_range+0x90>
    5da4:	add	r0, r6, r0, lsl #5
    5da8:	movw	r8, #1608	; 0x648
    5dac:	add	ip, lr, #1
    5db0:	add	ip, r6, ip, lsl #4
    5db4:	add	r4, r0, r8
    5db8:	ldm	r7, {r0, r1, r2, r3}
    5dbc:	add	ip, ip, r8
    5dc0:	stm	r4, {r0, r1, r2, r3}
    5dc4:	ldm	r5, {r0, r1, r2, r3}
    5dc8:	stm	ip, {r0, r1, r2, r3}
    5dcc:	mov	r0, #0
    5dd0:	ldr	r3, [r6, #2120]	; 0x848
    5dd4:	add	r3, r3, #1
    5dd8:	str	r3, [r6, #2120]	; 0x848
    5ddc:	add	sp, sp, #64	; 0x40
    5de0:	pop	{r4, r5, r6, r7, r8, pc}

00005de4 <readstat_variable_add_missing_double_value>:
    5de4:	push	{r4, r5, r6, r7, r8, lr}
    5de8:	sub	sp, sp, #64	; 0x40
    5dec:	mov	r6, r0
    5df0:	mov	r3, sp
    5df4:	add	r4, sp, #16
    5df8:	mov	r0, r3
    5dfc:	add	r7, sp, #32
    5e00:	bl	5b9c <make_double_value>
    5e04:	mov	r0, r4
    5e08:	add	r5, sp, #48	; 0x30
    5e0c:	bl	5b9c <make_double_value>
    5e10:	ldm	r3, {r0, r1, r2, r3}
    5e14:	stm	r7, {r0, r1, r2, r3}
    5e18:	ldm	r4, {r0, r1, r2, r3}
    5e1c:	stm	r5, {r0, r1, r2, r3}
    5e20:	mov	r0, r6
    5e24:	bl	4324 <readstat_variable_get_missing_ranges_count@plt>
    5e28:	lsl	lr, r0, #1
    5e2c:	cmp	lr, #31
    5e30:	movhi	r0, #31
    5e34:	bhi	5e70 <readstat_variable_add_missing_double_value+0x8c>
    5e38:	add	r0, r6, r0, lsl #5
    5e3c:	movw	r8, #1608	; 0x648
    5e40:	add	ip, lr, #1
    5e44:	add	ip, r6, ip, lsl #4
    5e48:	add	r4, r0, r8
    5e4c:	ldm	r7, {r0, r1, r2, r3}
    5e50:	add	ip, ip, r8
    5e54:	stm	r4, {r0, r1, r2, r3}
    5e58:	ldm	r5, {r0, r1, r2, r3}
    5e5c:	stm	ip, {r0, r1, r2, r3}
    5e60:	mov	r0, #0
    5e64:	ldr	r3, [r6, #2120]	; 0x848
    5e68:	add	r3, r3, #1
    5e6c:	str	r3, [r6, #2120]	; 0x848
    5e70:	add	sp, sp, #64	; 0x40
    5e74:	pop	{r4, r5, r6, r7, r8, pc}

00005e78 <readstat_variable_add_missing_string_range>:
    5e78:	push	{r4, r5, r6, r7, r8, lr}
    5e7c:	sub	sp, sp, #64	; 0x40
    5e80:	mov	r4, r2
    5e84:	mov	r3, sp
    5e88:	mov	r6, r0
    5e8c:	mov	r0, r3
    5e90:	add	r7, sp, #32
    5e94:	bl	5bb4 <make_string_value>
    5e98:	mov	r1, r4
    5e9c:	add	r4, sp, #16
    5ea0:	mov	r0, r4
    5ea4:	add	r5, sp, #48	; 0x30
    5ea8:	bl	5bb4 <make_string_value>
    5eac:	ldm	r3, {r0, r1, r2, r3}
    5eb0:	stm	r7, {r0, r1, r2, r3}
    5eb4:	ldm	r4, {r0, r1, r2, r3}
    5eb8:	stm	r5, {r0, r1, r2, r3}
    5ebc:	mov	r0, r6
    5ec0:	bl	4324 <readstat_variable_get_missing_ranges_count@plt>
    5ec4:	lsl	lr, r0, #1
    5ec8:	cmp	lr, #31
    5ecc:	movhi	r0, #31
    5ed0:	bhi	5f0c <readstat_variable_add_missing_string_range+0x94>
    5ed4:	add	r0, r6, r0, lsl #5
    5ed8:	movw	r8, #1608	; 0x648
    5edc:	add	ip, lr, #1
    5ee0:	add	ip, r6, ip, lsl #4
    5ee4:	add	r4, r0, r8
    5ee8:	ldm	r7, {r0, r1, r2, r3}
    5eec:	add	ip, ip, r8
    5ef0:	stm	r4, {r0, r1, r2, r3}
    5ef4:	ldm	r5, {r0, r1, r2, r3}
    5ef8:	stm	ip, {r0, r1, r2, r3}
    5efc:	mov	r0, #0
    5f00:	ldr	r3, [r6, #2120]	; 0x848
    5f04:	add	r3, r3, #1
    5f08:	str	r3, [r6, #2120]	; 0x848
    5f0c:	add	sp, sp, #64	; 0x40
    5f10:	pop	{r4, r5, r6, r7, r8, pc}

00005f14 <readstat_variable_add_missing_string_value>:
    5f14:	push	{r4, r5, r6, r7, r8, lr}
    5f18:	sub	sp, sp, #64	; 0x40
    5f1c:	mov	r6, r0
    5f20:	mov	r3, sp
    5f24:	add	r4, sp, #16
    5f28:	mov	r0, r3
    5f2c:	add	r7, sp, #32
    5f30:	bl	5bb4 <make_string_value>
    5f34:	mov	r0, r4
    5f38:	add	r5, sp, #48	; 0x30
    5f3c:	bl	5bb4 <make_string_value>
    5f40:	ldm	r3, {r0, r1, r2, r3}
    5f44:	stm	r7, {r0, r1, r2, r3}
    5f48:	ldm	r4, {r0, r1, r2, r3}
    5f4c:	stm	r5, {r0, r1, r2, r3}
    5f50:	mov	r0, r6
    5f54:	bl	4324 <readstat_variable_get_missing_ranges_count@plt>
    5f58:	lsl	lr, r0, #1
    5f5c:	cmp	lr, #31
    5f60:	movhi	r0, #31
    5f64:	bhi	5fa0 <readstat_variable_add_missing_string_value+0x8c>
    5f68:	add	r0, r6, r0, lsl #5
    5f6c:	movw	r8, #1608	; 0x648
    5f70:	add	ip, lr, #1
    5f74:	add	ip, r6, ip, lsl #4
    5f78:	add	r4, r0, r8
    5f7c:	ldm	r7, {r0, r1, r2, r3}
    5f80:	add	ip, ip, r8
    5f84:	stm	r4, {r0, r1, r2, r3}
    5f88:	ldm	r5, {r0, r1, r2, r3}
    5f8c:	stm	ip, {r0, r1, r2, r3}
    5f90:	mov	r0, #0
    5f94:	ldr	r3, [r6, #2120]	; 0x848
    5f98:	add	r3, r3, #1
    5f9c:	str	r3, [r6, #2120]	; 0x848
    5fa0:	add	sp, sp, #64	; 0x40
    5fa4:	pop	{r4, r5, r6, r7, r8, pc}

00005fa8 <readstat_compare_string_refs>:
    5fa8:	push	{lr}		; (str lr, [sp, #-4]!)
    5fac:	ldr	ip, [r1]
    5fb0:	ldr	lr, [r0]
    5fb4:	ldrd	r2, [ip]
    5fb8:	ldrd	r0, [lr]
    5fbc:	cmp	r1, r3
    5fc0:	cmpeq	r0, r2
    5fc4:	ldreq	r0, [lr, #8]
    5fc8:	ldreq	r3, [ip, #8]
    5fcc:	subeq	r0, r0, r3
    5fd0:	subne	r0, r0, r2
    5fd4:	pop	{pc}		; (ldr pc, [sp], #4)

00005fd8 <readstat_add_value_label>:
    5fd8:	push	{r4, r5, r6, lr}
    5fdc:	mov	r5, r1
    5fe0:	mov	r4, r0
    5fe4:	ldr	r1, [r0, #264]	; 0x108
    5fe8:	ldr	r3, [r0, #268]	; 0x10c
    5fec:	cmp	r1, r3
    5ff0:	bne	600c <readstat_add_value_label+0x34>
    5ff4:	lsl	r3, r1, #1
    5ff8:	ldr	r0, [r0, #260]	; 0x104
    5ffc:	lsl	r1, r1, #6
    6000:	str	r3, [r4, #268]	; 0x10c
    6004:	bl	400c <realloc@plt>
    6008:	str	r0, [r4, #260]	; 0x104
    600c:	ldr	r3, [r4, #260]	; 0x104
    6010:	ldr	r2, [r4, #264]	; 0x108
    6014:	add	r1, r2, #1
    6018:	str	r1, [r4, #264]	; 0x108
    601c:	add	r4, r3, r2, lsl #5
    6020:	mov	r1, #0
    6024:	mov	r2, #32
    6028:	mov	r0, r4
    602c:	bl	42b8 <memset@plt>
    6030:	cmp	r5, #0
    6034:	beq	6068 <readstat_add_value_label+0x90>
    6038:	ldrb	r3, [r5]
    603c:	cmp	r3, #0
    6040:	beq	6068 <readstat_add_value_label+0x90>
    6044:	mov	r0, r5
    6048:	bl	421c <strlen@plt>
    604c:	str	r0, [r4, #28]
    6050:	mov	r6, r0
    6054:	bl	412c <malloc@plt>
    6058:	mov	r2, r6
    605c:	mov	r1, r5
    6060:	str	r0, [r4, #24]
    6064:	bl	3f34 <memcpy@plt>
    6068:	mov	r0, r4
    606c:	pop	{r4, r5, r6, pc}

00006070 <readstat_string_ref_init>:
    6070:	push	{r4, r5, r6, lr}
    6074:	mov	r6, r0
    6078:	bl	421c <strlen@plt>
    607c:	add	r5, r0, #1
    6080:	add	r1, r0, #25
    6084:	mov	r0, #1
    6088:	bl	3d6c <calloc@plt>
    608c:	mov	r4, r0
    6090:	mvn	r3, #0
    6094:	mvn	r2, #0
    6098:	mov	r1, r6
    609c:	add	r0, r0, #20
    60a0:	strd	r2, [r4]
    60a4:	strd	r2, [r4, #8]
    60a8:	mov	r2, r5
    60ac:	str	r5, [r4, #16]
    60b0:	bl	3f34 <memcpy@plt>
    60b4:	mov	r0, r4
    60b8:	pop	{r4, r5, r6, pc}

000060bc <readstat_writer_init>:
    60bc:	push	{r4, r5, r6, lr}
    60c0:	mov	r1, #312	; 0x138
    60c4:	mov	r0, #1
    60c8:	mov	r5, #50	; 0x32
    60cc:	bl	3d6c <calloc@plt>
    60d0:	mov	r4, r0
    60d4:	mov	r1, #4
    60d8:	mov	r0, #50	; 0x32
    60dc:	bl	3d6c <calloc@plt>
    60e0:	mov	r1, #4
    60e4:	str	r0, [r4, #24]
    60e8:	mov	r0, r5
    60ec:	str	r5, [r4, #32]
    60f0:	bl	3d6c <calloc@plt>
    60f4:	mov	r1, #4
    60f8:	str	r0, [r4, #36]	; 0x24
    60fc:	mov	r0, r5
    6100:	str	r5, [r4, #44]	; 0x2c
    6104:	bl	3d6c <calloc@plt>
    6108:	mov	r1, #4
    610c:	str	r0, [r4, #48]	; 0x30
    6110:	mov	r0, #100	; 0x64
    6114:	str	r5, [r4, #56]	; 0x38
    6118:	bl	3d6c <calloc@plt>
    611c:	mov	r3, #100	; 0x64
    6120:	str	r0, [r4, #60]	; 0x3c
    6124:	mov	r0, #0
    6128:	str	r3, [r4, #68]	; 0x44
    612c:	bl	3f70 <time@plt>
    6130:	mov	r3, #1
    6134:	str	r3, [r4, #12]
    6138:	ldr	r3, [pc, #16]	; 6150 <readstat_writer_init+0x94>
    613c:	str	r0, [r4, #20]
    6140:	mov	r0, r4
    6144:	add	r3, pc, r3
    6148:	str	r3, [r4, #280]	; 0x118
    614c:	pop	{r4, r5, r6, pc}
    6150:	.word	0x000000ac

00006154 <readstat_validate_variable>:
    6154:	ldr	r2, [r0, #308]	; 0x134
    6158:	cmp	r2, #0
    615c:	beq	6174 <readstat_validate_variable+0x20>
    6160:	ldr	r3, [r0, #232]	; 0xe8
    6164:	cmp	r3, #0
    6168:	beq	617c <readstat_validate_variable+0x28>
    616c:	mov	r0, r1
    6170:	bx	r3
    6174:	mov	r0, #14
    6178:	bx	lr
    617c:	mov	r0, r3
    6180:	bx	lr

00006184 <readstat_validate_metadata>:
    6184:	ldr	r2, [r0, #308]	; 0x134
    6188:	cmp	r2, #0
    618c:	beq	61a0 <readstat_validate_metadata+0x1c>
    6190:	ldr	r3, [r0, #292]	; 0x124
    6194:	cmp	r3, #0
    6198:	beq	61a8 <readstat_validate_metadata+0x24>
    619c:	bx	r3
    61a0:	mov	r0, #14
    61a4:	bx	lr
    61a8:	mov	r0, r3
    61ac:	bx	lr

000061b0 <readstat_set_data_writer>:
    61b0:	str	r1, [r0]
    61b4:	mov	r0, #0
    61b8:	bx	lr

000061bc <readstat_write_bytes>:
    61bc:	push	{r4, r5, r6, lr}
    61c0:	mov	r4, r0
    61c4:	mov	r5, r2
    61c8:	mov	r0, r1
    61cc:	mov	r1, r2
    61d0:	ldr	r3, [r4]
    61d4:	ldr	r2, [r4, #304]	; 0x130
    61d8:	blx	r3
    61dc:	cmp	r5, r0
    61e0:	ldrls	r3, [r4, #4]
    61e4:	addls	r3, r3, r0
    61e8:	movls	r0, #0
    61ec:	movhi	r0, #13
    61f0:	strls	r3, [r4, #4]
    61f4:	pop	{r4, r5, r6, pc}

000061f8 <readstat_write_row_default_callback>:
    61f8:	b	4474 <readstat_write_bytes@plt>

000061fc <readstat_write_bytes_as_lines>:
    61fc:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6200:	mov	r6, r0
    6204:	mov	r9, r3
    6208:	mov	fp, r1
    620c:	mov	r8, r2
    6210:	mov	r5, #0
    6214:	ldr	r0, [sp, #40]	; 0x28
    6218:	bl	421c <strlen@plt>
    621c:	mov	sl, r0
    6220:	add	r7, r0, r9
    6224:	cmp	r5, r8
    6228:	movcs	r0, #0
    622c:	bcs	6290 <readstat_write_bytes_as_lines+0x94>
    6230:	ldr	r3, [r6, #4]
    6234:	sub	r2, r8, r5
    6238:	add	r1, fp, r5
    623c:	udiv	r4, r3, r7
    6240:	mls	r4, r7, r4, r3
    6244:	sub	r4, r9, r4
    6248:	cmp	r4, r2
    624c:	bls	6298 <readstat_write_bytes_as_lines+0x9c>
    6250:	mov	r0, r6
    6254:	mov	r5, r8
    6258:	bl	4474 <readstat_write_bytes@plt>
    625c:	cmp	r0, #0
    6260:	bne	6290 <readstat_write_bytes_as_lines+0x94>
    6264:	ldr	r2, [r6, #4]
    6268:	udiv	r3, r2, r7
    626c:	mls	r3, r7, r3, r2
    6270:	cmp	r3, r9
    6274:	bne	6224 <readstat_write_bytes_as_lines+0x28>
    6278:	mov	r2, sl
    627c:	mov	r0, r6
    6280:	ldr	r1, [sp, #40]	; 0x28
    6284:	bl	4474 <readstat_write_bytes@plt>
    6288:	cmp	r0, #0
    628c:	beq	6224 <readstat_write_bytes_as_lines+0x28>
    6290:	add	sp, sp, #4
    6294:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6298:	mov	r2, r4
    629c:	mov	r0, r6
    62a0:	bl	4474 <readstat_write_bytes@plt>
    62a4:	add	r5, r5, r4
    62a8:	b	625c <readstat_write_bytes_as_lines+0x60>

000062ac <readstat_write_line_padding>:
    62ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    62b0:	mov	r5, r0
    62b4:	mov	r0, r3
    62b8:	mov	r4, r2
    62bc:	mov	r8, r1
    62c0:	mov	r7, r3
    62c4:	bl	421c <strlen@plt>
    62c8:	ldr	r1, [r5, #4]
    62cc:	add	r3, r0, r4
    62d0:	udiv	r2, r1, r3
    62d4:	mls	r2, r3, r2, r1
    62d8:	cmp	r2, #0
    62dc:	beq	6330 <readstat_write_line_padding+0x84>
    62e0:	sub	r4, r4, r2
    62e4:	mov	r9, r0
    62e8:	mov	r0, r4
    62ec:	bl	412c <malloc@plt>
    62f0:	mov	r6, r0
    62f4:	mov	r2, r4
    62f8:	mov	r1, r8
    62fc:	bl	42b8 <memset@plt>
    6300:	mov	r2, r4
    6304:	mov	r1, r6
    6308:	mov	r0, r5
    630c:	bl	4474 <readstat_write_bytes@plt>
    6310:	cmp	r0, #0
    6314:	bne	6328 <readstat_write_line_padding+0x7c>
    6318:	mov	r2, r9
    631c:	mov	r1, r7
    6320:	mov	r0, r5
    6324:	bl	4474 <readstat_write_bytes@plt>
    6328:	mov	r0, r6
    632c:	bl	3ed4 <free@plt>
    6330:	mov	r0, #0
    6334:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00006338 <readstat_write_string>:
    6338:	push	{r4, r5, r6, lr}
    633c:	mov	r5, r0
    6340:	mov	r0, r1
    6344:	mov	r4, r1
    6348:	bl	421c <strlen@plt>
    634c:	mov	r2, r0
    6350:	mov	r1, r4
    6354:	mov	r0, r5
    6358:	pop	{r4, r5, r6, lr}
    635c:	b	4474 <readstat_write_bytes@plt>

00006360 <readstat_write_zeros>:
    6360:	push	{r4, r5, fp, lr}
    6364:	subs	r4, r1, #0
    6368:	add	fp, sp, #12
    636c:	beq	63a4 <readstat_write_zeros+0x44>
    6370:	add	r3, r4, #7
    6374:	mov	r2, r4
    6378:	bic	r3, r3, #7
    637c:	mov	r5, r0
    6380:	sub	sp, sp, r3
    6384:	mov	r1, #0
    6388:	mov	r0, sp
    638c:	bl	42b8 <memset@plt>
    6390:	mov	r2, r4
    6394:	mov	r1, sp
    6398:	mov	r0, r5
    639c:	bl	4474 <readstat_write_bytes@plt>
    63a0:	mov	r4, r0
    63a4:	mov	r0, r4
    63a8:	sub	sp, fp, #12
    63ac:	pop	{r4, r5, fp, pc}

000063b0 <readstat_write_spaces>:
    63b0:	push	{r4, r5, fp, lr}
    63b4:	subs	r4, r1, #0
    63b8:	add	fp, sp, #12
    63bc:	beq	63f4 <readstat_write_spaces+0x44>
    63c0:	add	r3, r4, #7
    63c4:	mov	r2, r4
    63c8:	bic	r3, r3, #7
    63cc:	mov	r5, r0
    63d0:	sub	sp, sp, r3
    63d4:	mov	r1, #32
    63d8:	mov	r0, sp
    63dc:	bl	42b8 <memset@plt>
    63e0:	mov	r2, r4
    63e4:	mov	r1, sp
    63e8:	mov	r0, r5
    63ec:	bl	4474 <readstat_write_bytes@plt>
    63f0:	mov	r4, r0
    63f4:	mov	r0, r4
    63f8:	sub	sp, fp, #12
    63fc:	pop	{r4, r5, fp, pc}

00006400 <readstat_write_space_padded_string>:
    6400:	push	{r4, r5, r6, r7, r8, lr}
    6404:	subs	r6, r1, #0
    6408:	beq	6418 <readstat_write_space_padded_string+0x18>
    640c:	ldrb	r3, [r6]
    6410:	cmp	r3, #0
    6414:	bne	6424 <readstat_write_space_padded_string+0x24>
    6418:	mov	r1, r2
    641c:	pop	{r4, r5, r6, r7, r8, lr}
    6420:	b	3df0 <readstat_write_spaces@plt>
    6424:	mov	r5, r0
    6428:	mov	r0, r6
    642c:	mov	r4, r2
    6430:	bl	421c <strlen@plt>
    6434:	cmp	r0, r4
    6438:	mov	r1, r6
    643c:	movcc	r7, r0
    6440:	movcs	r7, r4
    6444:	mov	r2, r7
    6448:	mov	r0, r5
    644c:	bl	4474 <readstat_write_bytes@plt>
    6450:	cmp	r0, #0
    6454:	popne	{r4, r5, r6, r7, r8, pc}
    6458:	sub	r1, r4, r7
    645c:	mov	r0, r5
    6460:	b	641c <readstat_write_space_padded_string+0x1c>

00006464 <readstat_add_label_set>:
    6464:	push	{r4, r5, r6, r7, r8, lr}
    6468:	mov	r7, r1
    646c:	mov	r4, r0
    6470:	mov	r6, r2
    6474:	ldr	r1, [r0, #40]	; 0x28
    6478:	ldr	r3, [r0, #44]	; 0x2c
    647c:	cmp	r1, r3
    6480:	bne	649c <readstat_add_label_set+0x38>
    6484:	lsl	r3, r1, #1
    6488:	ldr	r0, [r0, #36]	; 0x24
    648c:	lsl	r1, r1, #3
    6490:	str	r3, [r4, #44]	; 0x2c
    6494:	bl	400c <realloc@plt>
    6498:	str	r0, [r4, #36]	; 0x24
    649c:	mov	r1, #284	; 0x11c
    64a0:	mov	r0, #1
    64a4:	bl	3d6c <calloc@plt>
    64a8:	ldrd	r2, [r4, #36]	; 0x24
    64ac:	mov	r5, r0
    64b0:	add	r1, r3, #1
    64b4:	str	r1, [r4, #40]	; 0x28
    64b8:	mov	r1, #256	; 0x100
    64bc:	str	r0, [r2, r3, lsl #2]
    64c0:	mov	r3, r6
    64c4:	ldr	r2, [pc, #64]	; 650c <readstat_add_label_set+0xa8>
    64c8:	str	r7, [r0], #4
    64cc:	add	r2, pc, r2
    64d0:	bl	4294 <snprintf@plt>
    64d4:	mov	r1, #32
    64d8:	mov	r0, #10
    64dc:	bl	3d6c <calloc@plt>
    64e0:	mov	r3, #10
    64e4:	mov	r1, #4
    64e8:	str	r0, [r5, #260]	; 0x104
    64ec:	mov	r0, #2
    64f0:	str	r3, [r5, #268]	; 0x10c
    64f4:	bl	3d6c <calloc@plt>
    64f8:	mov	r3, #2
    64fc:	str	r0, [r5, #272]	; 0x110
    6500:	mov	r0, r5
    6504:	str	r3, [r5, #280]	; 0x118
    6508:	pop	{r4, r5, r6, r7, r8, pc}
    650c:	.word	0x0001b67a

00006510 <readstat_get_label_set>:
    6510:	ldr	r3, [r0, #40]	; 0x28
    6514:	cmp	r3, r1
    6518:	ldrgt	r3, [r0, #36]	; 0x24
    651c:	ldrgt	r0, [r3, r1, lsl #2]
    6520:	movle	r0, #0
    6524:	bx	lr

00006528 <readstat_sort_label_set>:
    6528:	mov	r3, r1
    652c:	mov	r2, #32
    6530:	ldr	r1, [r0, #264]	; 0x108
    6534:	ldr	r0, [r0, #260]	; 0x104
    6538:	b	445c <qsort@plt>

0000653c <readstat_get_value_label>:
    653c:	ldr	r3, [r0, #264]	; 0x108
    6540:	cmp	r3, r1
    6544:	ldrgt	r0, [r0, #260]	; 0x104
    6548:	addgt	r0, r0, r1, lsl #5
    654c:	movle	r0, #0
    6550:	bx	lr

00006554 <readstat_writer_free>:
    6554:	push	{r4, r5, r6, r7, r8, lr}
    6558:	subs	r4, r0, #0
    655c:	popeq	{r4, r5, r6, r7, r8, pc}
    6560:	ldr	r3, [r4, #288]	; 0x120
    6564:	cmp	r3, #0
    6568:	beq	657c <readstat_writer_free+0x28>
    656c:	ldr	r0, [r4, #300]	; 0x12c
    6570:	cmp	r0, #0
    6574:	beq	657c <readstat_writer_free+0x28>
    6578:	blx	r3
    657c:	ldr	r3, [r4, #24]
    6580:	cmp	r3, #0
    6584:	movne	r5, #0
    6588:	bne	65e4 <readstat_writer_free+0x90>
    658c:	ldr	r3, [r4, #36]	; 0x24
    6590:	cmp	r3, #0
    6594:	movne	r6, #0
    6598:	bne	662c <readstat_writer_free+0xd8>
    659c:	ldr	r3, [r4, #48]	; 0x30
    65a0:	cmp	r3, #0
    65a4:	movne	r5, #0
    65a8:	bne	6688 <readstat_writer_free+0x134>
    65ac:	ldr	r3, [r4, #60]	; 0x3c
    65b0:	cmp	r3, #0
    65b4:	movne	r5, #0
    65b8:	bne	66ac <readstat_writer_free+0x158>
    65bc:	ldr	r0, [r4, #72]	; 0x48
    65c0:	cmp	r0, #0
    65c4:	beq	65cc <readstat_writer_free+0x78>
    65c8:	bl	3ed4 <free@plt>
    65cc:	mov	r0, r4
    65d0:	pop	{r4, r5, r6, r7, r8, lr}
    65d4:	b	3ed4 <free@plt>
    65d8:	ldr	r0, [r0, r5, lsl #2]
    65dc:	add	r5, r5, #1
    65e0:	bl	3ed4 <free@plt>
    65e4:	ldr	r0, [r4, #24]
    65e8:	ldr	r3, [r4, #28]
    65ec:	cmp	r3, r5
    65f0:	bgt	65d8 <readstat_writer_free+0x84>
    65f4:	bl	3ed4 <free@plt>
    65f8:	b	658c <readstat_writer_free+0x38>
    65fc:	ldr	r5, [r0, r6, lsl #2]
    6600:	mov	r7, #0
    6604:	ldr	r3, [r5, #264]	; 0x108
    6608:	cmp	r7, r3
    660c:	blt	6644 <readstat_writer_free+0xf0>
    6610:	ldr	r0, [r5, #260]	; 0x104
    6614:	add	r6, r6, #1
    6618:	bl	3ed4 <free@plt>
    661c:	ldr	r0, [r5, #272]	; 0x110
    6620:	bl	3ed4 <free@plt>
    6624:	mov	r0, r5
    6628:	bl	3ed4 <free@plt>
    662c:	ldr	r0, [r4, #36]	; 0x24
    6630:	ldr	r3, [r4, #40]	; 0x28
    6634:	cmp	r3, r6
    6638:	bgt	65fc <readstat_writer_free+0xa8>
    663c:	bl	3ed4 <free@plt>
    6640:	b	659c <readstat_writer_free+0x48>
    6644:	mov	r1, r7
    6648:	mov	r0, r5
    664c:	bl	44ec <readstat_get_value_label@plt>
    6650:	mov	r8, r0
    6654:	ldr	r0, [r0, #24]
    6658:	cmp	r0, #0
    665c:	beq	6664 <readstat_writer_free+0x110>
    6660:	bl	3ed4 <free@plt>
    6664:	ldr	r0, [r8, #16]
    6668:	cmp	r0, #0
    666c:	beq	6674 <readstat_writer_free+0x120>
    6670:	bl	3ed4 <free@plt>
    6674:	add	r7, r7, #1
    6678:	b	6604 <readstat_writer_free+0xb0>
    667c:	ldr	r0, [r0, r5, lsl #2]
    6680:	add	r5, r5, #1
    6684:	bl	3ed4 <free@plt>
    6688:	ldr	r0, [r4, #48]	; 0x30
    668c:	ldr	r3, [r4, #52]	; 0x34
    6690:	cmp	r3, r5
    6694:	bgt	667c <readstat_writer_free+0x128>
    6698:	bl	3ed4 <free@plt>
    669c:	b	65ac <readstat_writer_free+0x58>
    66a0:	ldr	r0, [r0, r5, lsl #2]
    66a4:	add	r5, r5, #1
    66a8:	bl	3ed4 <free@plt>
    66ac:	ldr	r0, [r4, #60]	; 0x3c
    66b0:	ldr	r3, [r4, #64]	; 0x40
    66b4:	cmp	r3, r5
    66b8:	bgt	66a0 <readstat_writer_free+0x14c>
    66bc:	bl	3ed4 <free@plt>
    66c0:	b	65bc <readstat_writer_free+0x68>

000066c4 <readstat_get_label_set_variable>:
    66c4:	ldr	r3, [r0, #276]	; 0x114
    66c8:	cmp	r3, r1
    66cc:	ldrgt	r3, [r0, #272]	; 0x110
    66d0:	ldrgt	r0, [r3, r1, lsl #2]
    66d4:	movle	r0, #0
    66d8:	bx	lr

000066dc <readstat_label_double_value>:
    66dc:	push	{r4, lr}
    66e0:	vpush	{d8}
    66e4:	vmov.f64	d8, d0
    66e8:	bl	5fd8 <readstat_add_value_label>
    66ec:	vstr	d8, [r0]
    66f0:	vcvt.s32.f64	s16, d8
    66f4:	vstr	s16, [r0, #8]
    66f8:	vpop	{d8}
    66fc:	pop	{r4, pc}

00006700 <readstat_label_int32_value>:
    6700:	push	{r4, lr}
    6704:	mov	r4, r1
    6708:	mov	r1, r2
    670c:	bl	5fd8 <readstat_add_value_label>
    6710:	vmov	s15, r4
    6714:	str	r4, [r0, #8]
    6718:	vcvt.f64.s32	d7, s15
    671c:	vstr	d7, [r0]
    6720:	pop	{r4, pc}

00006724 <readstat_label_string_value>:
    6724:	push	{r4, r5, r6, lr}
    6728:	mov	r4, r1
    672c:	mov	r1, r2
    6730:	bl	5fd8 <readstat_add_value_label>
    6734:	cmp	r4, #0
    6738:	popeq	{r4, r5, r6, pc}
    673c:	ldrb	r3, [r4]
    6740:	cmp	r3, #0
    6744:	popeq	{r4, r5, r6, pc}
    6748:	mov	r6, r0
    674c:	mov	r0, r4
    6750:	bl	421c <strlen@plt>
    6754:	str	r0, [r6, #20]
    6758:	mov	r5, r0
    675c:	bl	412c <malloc@plt>
    6760:	mov	r2, r5
    6764:	mov	r1, r4
    6768:	str	r0, [r6, #16]
    676c:	pop	{r4, r5, r6, lr}
    6770:	b	3f34 <memcpy@plt>

00006774 <readstat_label_tagged_value>:
    6774:	push	{r4, lr}
    6778:	mov	r4, r1
    677c:	mov	r1, r2
    6780:	bl	5fd8 <readstat_add_value_label>
    6784:	strb	r4, [r0, #12]
    6788:	pop	{r4, pc}

0000678c <readstat_add_variable>:
    678c:	push	{r4, r5, r6, r7, r8, lr}
    6790:	mov	r6, r1
    6794:	mov	r8, r3
    6798:	mov	r5, r0
    679c:	mov	r7, r2
    67a0:	ldr	r1, [r0, #28]
    67a4:	ldr	r3, [r0, #32]
    67a8:	cmp	r1, r3
    67ac:	bne	67c8 <readstat_add_variable+0x3c>
    67b0:	lsl	r3, r1, #1
    67b4:	ldr	r0, [r0, #24]
    67b8:	lsl	r1, r1, #3
    67bc:	str	r3, [r5, #32]
    67c0:	bl	400c <realloc@plt>
    67c4:	str	r0, [r5, #24]
    67c8:	movw	r1, #2152	; 0x868
    67cc:	mov	r0, #1
    67d0:	bl	3d6c <calloc@plt>
    67d4:	ldr	r3, [r5, #28]
    67d8:	mov	r4, r0
    67dc:	add	r2, r3, #1
    67e0:	str	r3, [r0, #4]
    67e4:	str	r2, [r5, #28]
    67e8:	ldr	r2, [r5, #24]
    67ec:	str	r0, [r2, r3, lsl #2]
    67f0:	str	r7, [r0]
    67f4:	str	r8, [r0, #1600]	; 0x640
    67f8:	bl	4564 <readstat_variable_get_type_class@plt>
    67fc:	cmp	r0, #0
    6800:	moveq	r3, #1
    6804:	movne	r3, #3
    6808:	str	r3, [r4, #2132]	; 0x854
    680c:	mov	r3, #0
    6810:	cmp	r6, r3
    6814:	str	r3, [r4, #2128]	; 0x850
    6818:	beq	6834 <readstat_add_variable+0xa8>
    681c:	ldr	r2, [pc, #24]	; 683c <readstat_add_variable+0xb0>
    6820:	mov	r3, r6
    6824:	mov	r1, #300	; 0x12c
    6828:	add	r0, r4, #8
    682c:	add	r2, pc, r2
    6830:	bl	4294 <snprintf@plt>
    6834:	mov	r0, r4
    6838:	pop	{r4, r5, r6, r7, r8, pc}
    683c:	.word	0x0001b31a

00006840 <readstat_add_string_ref>:
    6840:	push	{r4, r5, r6, lr}
    6844:	mov	r4, r0
    6848:	mov	r0, r1
    684c:	bl	4378 <readstat_string_ref_init@plt>
    6850:	ldr	r1, [r4, #64]	; 0x40
    6854:	mov	r5, r0
    6858:	ldr	r3, [r4, #68]	; 0x44
    685c:	cmp	r1, r3
    6860:	bne	687c <readstat_add_string_ref+0x3c>
    6864:	lsl	r3, r1, #1
    6868:	ldr	r0, [r4, #60]	; 0x3c
    686c:	lsl	r1, r1, #3
    6870:	str	r3, [r4, #68]	; 0x44
    6874:	bl	400c <realloc@plt>
    6878:	str	r0, [r4, #60]	; 0x3c
    687c:	ldrd	r2, [r4, #60]	; 0x3c
    6880:	mov	r0, r5
    6884:	add	r1, r3, #1
    6888:	str	r1, [r4, #64]	; 0x40
    688c:	str	r5, [r2, r3, lsl #2]
    6890:	pop	{r4, r5, r6, pc}

00006894 <readstat_add_note>:
    6894:	push	{r4, r5, r6, lr}
    6898:	mov	r5, r1
    689c:	mov	r4, r0
    68a0:	ldr	r1, [r0, #52]	; 0x34
    68a4:	ldr	r3, [r0, #56]	; 0x38
    68a8:	cmp	r1, r3
    68ac:	bne	68c8 <readstat_add_note+0x34>
    68b0:	lsl	r3, r1, #1
    68b4:	ldr	r0, [r0, #48]	; 0x30
    68b8:	lsl	r1, r1, #3
    68bc:	str	r3, [r4, #56]	; 0x38
    68c0:	bl	400c <realloc@plt>
    68c4:	str	r0, [r4, #48]	; 0x30
    68c8:	mov	r0, r5
    68cc:	bl	421c <strlen@plt>
    68d0:	add	r0, r0, #1
    68d4:	bl	412c <malloc@plt>
    68d8:	mov	r1, r5
    68dc:	mov	r6, r0
    68e0:	bl	40b4 <strcpy@plt>
    68e4:	ldrd	r2, [r4, #48]	; 0x30
    68e8:	add	r1, r3, #1
    68ec:	str	r1, [r4, #52]	; 0x34
    68f0:	str	r6, [r2, r3, lsl #2]
    68f4:	pop	{r4, r5, r6, pc}

000068f8 <readstat_variable_set_label>:
    68f8:	subs	r3, r1, #0
    68fc:	add	r0, r0, #564	; 0x234
    6900:	beq	6914 <readstat_variable_set_label+0x1c>
    6904:	ldr	r2, [pc, #16]	; 691c <readstat_variable_set_label+0x24>
    6908:	mov	r1, #1024	; 0x400
    690c:	add	r2, pc, r2
    6910:	b	4294 <snprintf@plt>
    6914:	mov	r2, #1024	; 0x400
    6918:	b	42b8 <memset@plt>
    691c:	.word	0x0001b23a

00006920 <readstat_variable_set_format>:
    6920:	subs	r3, r1, #0
    6924:	add	r0, r0, #308	; 0x134
    6928:	beq	693c <readstat_variable_set_format+0x1c>
    692c:	ldr	r2, [pc, #16]	; 6944 <readstat_variable_set_format+0x24>
    6930:	mov	r1, #256	; 0x100
    6934:	add	r2, pc, r2
    6938:	b	4294 <snprintf@plt>
    693c:	mov	r2, #256	; 0x100
    6940:	b	42b8 <memset@plt>
    6944:	.word	0x0001b212

00006948 <readstat_variable_set_measure>:
    6948:	str	r1, [r0, #2128]	; 0x850
    694c:	bx	lr

00006950 <readstat_variable_set_alignment>:
    6950:	str	r1, [r0, #2132]	; 0x854
    6954:	bx	lr

00006958 <readstat_variable_set_display_width>:
    6958:	str	r1, [r0, #2136]	; 0x858
    695c:	bx	lr

00006960 <readstat_variable_set_label_set>:
    6960:	cmp	r1, #0
    6964:	str	r1, [r0, #1588]	; 0x634
    6968:	bxeq	lr
    696c:	push	{r4, r5, r6, lr}
    6970:	mov	r4, r1
    6974:	mov	r5, r0
    6978:	ldr	r1, [r1, #276]	; 0x114
    697c:	ldr	r3, [r4, #280]	; 0x118
    6980:	cmp	r1, r3
    6984:	bne	69a0 <readstat_variable_set_label_set+0x40>
    6988:	lsl	r3, r1, #1
    698c:	ldr	r0, [r4, #272]	; 0x110
    6990:	lsl	r1, r1, #3
    6994:	str	r3, [r4, #280]	; 0x118
    6998:	bl	400c <realloc@plt>
    699c:	str	r0, [r4, #272]	; 0x110
    69a0:	ldr	r2, [r4, #272]	; 0x110
    69a4:	ldr	r3, [r4, #276]	; 0x114
    69a8:	add	r1, r3, #1
    69ac:	str	r1, [r4, #276]	; 0x114
    69b0:	str	r5, [r2, r3, lsl #2]
    69b4:	pop	{r4, r5, r6, pc}

000069b8 <readstat_get_variable>:
    69b8:	ldr	r3, [r0, #28]
    69bc:	cmp	r3, r1
    69c0:	ldrgt	r3, [r0, #24]
    69c4:	ldrgt	r0, [r3, r1, lsl #2]
    69c8:	movle	r0, #0
    69cc:	bx	lr

000069d0 <readstat_begin_writing_data.part.0>:
    69d0:	push	{r4, r5, r6, r7, r8, lr}
    69d4:	mov	r6, #0
    69d8:	mov	r4, r0
    69dc:	mov	r5, r6
    69e0:	ldr	r3, [r4, #28]
    69e4:	cmp	r6, r3
    69e8:	blt	6a20 <readstat_begin_writing_data.part.0+0x50>
    69ec:	ldr	r3, [r4, #232]	; 0xe8
    69f0:	cmp	r3, #0
    69f4:	movne	r6, #0
    69f8:	bne	6a78 <readstat_begin_writing_data.part.0+0xa8>
    69fc:	mov	r0, r5
    6a00:	str	r5, [r4, #76]	; 0x4c
    6a04:	bl	412c <malloc@plt>
    6a08:	ldr	r3, [r4, #276]	; 0x114
    6a0c:	str	r0, [r4, #72]	; 0x48
    6a10:	cmp	r3, #0
    6a14:	bne	6a88 <readstat_begin_writing_data.part.0+0xb8>
    6a18:	mov	r0, r3
    6a1c:	pop	{r4, r5, r6, r7, r8, pc}
    6a20:	mov	r1, r6
    6a24:	mov	r0, r4
    6a28:	bl	439c <readstat_get_variable@plt>
    6a2c:	mov	r7, r0
    6a30:	ldr	r0, [r0]
    6a34:	add	r6, r6, #1
    6a38:	ldr	r3, [r4, #228]	; 0xe4
    6a3c:	ldr	r1, [r7, #1600]	; 0x640
    6a40:	blx	r3
    6a44:	str	r5, [r7, #1592]	; 0x638
    6a48:	add	r5, r5, r0
    6a4c:	str	r0, [r7, #1596]	; 0x63c
    6a50:	b	69e0 <readstat_begin_writing_data.part.0+0x10>
    6a54:	mov	r1, r6
    6a58:	mov	r0, r4
    6a5c:	bl	439c <readstat_get_variable@plt>
    6a60:	mov	r1, r0
    6a64:	mov	r0, r4
    6a68:	bl	44bc <readstat_validate_variable@plt>
    6a6c:	cmp	r0, #0
    6a70:	popne	{r4, r5, r6, r7, r8, pc}
    6a74:	add	r6, r6, #1
    6a78:	ldr	r3, [r4, #28]
    6a7c:	cmp	r6, r3
    6a80:	blt	6a54 <readstat_begin_writing_data.part.0+0x84>
    6a84:	b	69fc <readstat_begin_writing_data.part.0+0x2c>
    6a88:	mov	r0, r4
    6a8c:	pop	{r4, r5, r6, r7, r8, lr}
    6a90:	bx	r3

00006a94 <readstat_get_string_ref>:
    6a94:	ldr	r3, [r0, #64]	; 0x40
    6a98:	cmp	r3, r1
    6a9c:	ldrgt	r3, [r0, #60]	; 0x3c
    6aa0:	ldrgt	r0, [r3, r1, lsl #2]
    6aa4:	movle	r0, #0
    6aa8:	bx	lr

00006aac <readstat_writer_set_file_label>:
    6aac:	ldr	r2, [pc, #28]	; 6ad0 <readstat_writer_set_file_label+0x24>
    6ab0:	mov	r3, r1
    6ab4:	add	r0, r0, #88	; 0x58
    6ab8:	push	{r4, lr}
    6abc:	mov	r1, #100	; 0x64
    6ac0:	add	r2, pc, r2
    6ac4:	bl	4294 <snprintf@plt>
    6ac8:	mov	r0, #0
    6acc:	pop	{r4, pc}
    6ad0:	.word	0x0001b086

00006ad4 <readstat_writer_set_file_timestamp>:
    6ad4:	str	r1, [r0, #20]
    6ad8:	mov	r0, #0
    6adc:	bx	lr

00006ae0 <readstat_writer_set_table_name>:
    6ae0:	ldr	r2, [pc, #28]	; 6b04 <readstat_writer_set_table_name+0x24>
    6ae4:	mov	r3, r1
    6ae8:	add	r0, r0, #188	; 0xbc
    6aec:	push	{r4, lr}
    6af0:	mov	r1, #33	; 0x21
    6af4:	add	r2, pc, r2
    6af8:	bl	4294 <snprintf@plt>
    6afc:	mov	r0, #0
    6b00:	pop	{r4, pc}
    6b04:	.word	0x0001b052

00006b08 <readstat_writer_set_fweight_variable>:
    6b08:	push	{r4, r5, r6, lr}
    6b0c:	mov	r5, r0
    6b10:	mov	r0, r1
    6b14:	mov	r4, r1
    6b18:	bl	4564 <readstat_variable_get_type_class@plt>
    6b1c:	cmp	r0, #0
    6b20:	movne	r0, #0
    6b24:	moveq	r0, #30
    6b28:	strne	r4, [r5, #224]	; 0xe0
    6b2c:	pop	{r4, r5, r6, pc}

00006b30 <readstat_writer_set_file_format_version>:
    6b30:	str	r1, [r0, #8]
    6b34:	mov	r0, #0
    6b38:	bx	lr

00006b3c <readstat_writer_set_file_format_is_64bit>:
    6b3c:	str	r1, [r0, #12]
    6b40:	mov	r0, #0
    6b44:	bx	lr

00006b48 <readstat_writer_set_compression>:
    6b48:	str	r1, [r0, #16]
    6b4c:	mov	r0, #0
    6b50:	bx	lr

00006b54 <readstat_writer_set_error_handler>:
    6b54:	str	r1, [r0, #296]	; 0x128
    6b58:	mov	r0, #0
    6b5c:	bx	lr

00006b60 <readstat_begin_writing_file>:
    6b60:	str	r2, [r0, #80]	; 0x50
    6b64:	mov	r2, #1
    6b68:	str	r1, [r0, #304]	; 0x130
    6b6c:	str	r2, [r0, #308]	; 0x134
    6b70:	b	3db4 <readstat_validate_metadata@plt>

00006b74 <readstat_begin_row>:
    6b74:	ldr	r3, [r0, #308]	; 0x134
    6b78:	push	{r4, r5, r6, lr}
    6b7c:	cmp	r3, #0
    6b80:	moveq	r5, #14
    6b84:	beq	6bc4 <readstat_begin_row+0x50>
    6b88:	ldr	r3, [r0, #84]	; 0x54
    6b8c:	mov	r4, r0
    6b90:	cmp	r3, #0
    6b94:	movne	r5, #0
    6b98:	bne	6bb4 <readstat_begin_row+0x40>
    6b9c:	bl	3db4 <readstat_validate_metadata@plt>
    6ba0:	subs	r5, r0, #0
    6ba4:	bne	6bb4 <readstat_begin_row+0x40>
    6ba8:	mov	r0, r4
    6bac:	bl	69d0 <readstat_begin_writing_data.part.0>
    6bb0:	mov	r5, r0
    6bb4:	mov	r1, #0
    6bb8:	ldr	r0, [r4, #72]	; 0x48
    6bbc:	ldr	r2, [r4, #76]	; 0x4c
    6bc0:	bl	42b8 <memset@plt>
    6bc4:	mov	r0, r5
    6bc8:	pop	{r4, r5, r6, pc}

00006bcc <readstat_insert_int8_value>:
    6bcc:	ldr	ip, [r0, #308]	; 0x134
    6bd0:	cmp	ip, #0
    6bd4:	beq	6c00 <readstat_insert_int8_value+0x34>
    6bd8:	ldr	ip, [r1]
    6bdc:	cmp	ip, #1
    6be0:	bne	6c08 <readstat_insert_int8_value+0x3c>
    6be4:	push	{lr}		; (str lr, [sp, #-4]!)
    6be8:	ldr	lr, [r0, #72]	; 0x48
    6bec:	ldr	ip, [r1, #1592]	; 0x638
    6bf0:	ldr	r3, [r0, #236]	; 0xec
    6bf4:	add	r0, lr, ip
    6bf8:	pop	{lr}		; (ldr lr, [sp], #4)
    6bfc:	bx	r3
    6c00:	mov	r0, #14
    6c04:	bx	lr
    6c08:	mov	r0, #12
    6c0c:	bx	lr

00006c10 <readstat_insert_int16_value>:
    6c10:	ldr	ip, [r0, #308]	; 0x134
    6c14:	cmp	ip, #0
    6c18:	beq	6c44 <readstat_insert_int16_value+0x34>
    6c1c:	ldr	ip, [r1]
    6c20:	cmp	ip, #2
    6c24:	bne	6c4c <readstat_insert_int16_value+0x3c>
    6c28:	push	{lr}		; (str lr, [sp, #-4]!)
    6c2c:	ldr	lr, [r0, #72]	; 0x48
    6c30:	ldr	ip, [r1, #1592]	; 0x638
    6c34:	ldr	r3, [r0, #240]	; 0xf0
    6c38:	add	r0, lr, ip
    6c3c:	pop	{lr}		; (ldr lr, [sp], #4)
    6c40:	bx	r3
    6c44:	mov	r0, #14
    6c48:	bx	lr
    6c4c:	mov	r0, #12
    6c50:	bx	lr

00006c54 <readstat_insert_int32_value>:
    6c54:	ldr	ip, [r0, #308]	; 0x134
    6c58:	cmp	ip, #0
    6c5c:	beq	6c88 <readstat_insert_int32_value+0x34>
    6c60:	ldr	ip, [r1]
    6c64:	cmp	ip, #3
    6c68:	bne	6c90 <readstat_insert_int32_value+0x3c>
    6c6c:	push	{lr}		; (str lr, [sp, #-4]!)
    6c70:	ldr	lr, [r0, #72]	; 0x48
    6c74:	ldr	ip, [r1, #1592]	; 0x638
    6c78:	ldr	r3, [r0, #244]	; 0xf4
    6c7c:	add	r0, lr, ip
    6c80:	pop	{lr}		; (ldr lr, [sp], #4)
    6c84:	bx	r3
    6c88:	mov	r0, #14
    6c8c:	bx	lr
    6c90:	mov	r0, #12
    6c94:	bx	lr

00006c98 <readstat_insert_float_value>:
    6c98:	ldr	r2, [r0, #308]	; 0x134
    6c9c:	cmp	r2, #0
    6ca0:	beq	6cc4 <readstat_insert_float_value+0x2c>
    6ca4:	ldr	r2, [r1]
    6ca8:	cmp	r2, #4
    6cac:	bne	6ccc <readstat_insert_float_value+0x34>
    6cb0:	ldr	ip, [r0, #72]	; 0x48
    6cb4:	ldr	r2, [r1, #1592]	; 0x638
    6cb8:	ldr	r3, [r0, #248]	; 0xf8
    6cbc:	add	r0, ip, r2
    6cc0:	bx	r3
    6cc4:	mov	r0, #14
    6cc8:	bx	lr
    6ccc:	mov	r0, #12
    6cd0:	bx	lr

00006cd4 <readstat_insert_double_value>:
    6cd4:	ldr	r2, [r0, #308]	; 0x134
    6cd8:	cmp	r2, #0
    6cdc:	beq	6d00 <readstat_insert_double_value+0x2c>
    6ce0:	ldr	r2, [r1]
    6ce4:	cmp	r2, #5
    6ce8:	bne	6d08 <readstat_insert_double_value+0x34>
    6cec:	ldr	ip, [r0, #72]	; 0x48
    6cf0:	ldr	r2, [r1, #1592]	; 0x638
    6cf4:	ldr	r3, [r0, #252]	; 0xfc
    6cf8:	add	r0, ip, r2
    6cfc:	bx	r3
    6d00:	mov	r0, #14
    6d04:	bx	lr
    6d08:	mov	r0, #12
    6d0c:	bx	lr

00006d10 <readstat_insert_string_value>:
    6d10:	ldr	ip, [r0, #308]	; 0x134
    6d14:	cmp	ip, #0
    6d18:	beq	6d44 <readstat_insert_string_value+0x34>
    6d1c:	ldr	ip, [r1]
    6d20:	cmp	ip, #0
    6d24:	bne	6d4c <readstat_insert_string_value+0x3c>
    6d28:	push	{lr}		; (str lr, [sp, #-4]!)
    6d2c:	ldr	lr, [r0, #72]	; 0x48
    6d30:	ldr	ip, [r1, #1592]	; 0x638
    6d34:	ldr	r3, [r0, #256]	; 0x100
    6d38:	add	r0, lr, ip
    6d3c:	pop	{lr}		; (ldr lr, [sp], #4)
    6d40:	bx	r3
    6d44:	mov	r0, #14
    6d48:	bx	lr
    6d4c:	mov	r0, #12
    6d50:	bx	lr

00006d54 <readstat_insert_string_ref>:
    6d54:	ldr	r3, [r0, #308]	; 0x134
    6d58:	cmp	r3, #0
    6d5c:	beq	6de4 <readstat_insert_string_ref+0x90>
    6d60:	ldr	r3, [r1]
    6d64:	cmp	r3, #6
    6d68:	bne	6dec <readstat_insert_string_ref+0x98>
    6d6c:	ldr	r3, [r0, #260]	; 0x104
    6d70:	cmp	r3, #0
    6d74:	beq	6df4 <readstat_insert_string_ref+0xa0>
    6d78:	cmp	r2, #0
    6d7c:	ldreq	ip, [r0, #72]	; 0x48
    6d80:	ldreq	r0, [r1, #1592]	; 0x638
    6d84:	addeq	r0, ip, r0
    6d88:	beq	6de0 <readstat_insert_string_ref+0x8c>
    6d8c:	push	{r4, r5, r6, r7}
    6d90:	mvn	r5, #0
    6d94:	mvn	r4, #0
    6d98:	ldrd	r6, [r2, #8]
    6d9c:	cmp	r7, r5
    6da0:	cmpeq	r6, r4
    6da4:	bne	6dd0 <readstat_insert_string_ref+0x7c>
    6da8:	ldrd	r4, [r2]
    6dac:	cmp	r5, r7
    6db0:	cmpeq	r4, r6
    6db4:	bne	6dd0 <readstat_insert_string_ref+0x7c>
    6db8:	ldr	r4, [r0, #84]	; 0x54
    6dbc:	asr	r5, r4, #31
    6dc0:	strd	r4, [r2, #8]
    6dc4:	ldr	r4, [r1, #4]
    6dc8:	asr	r5, r4, #31
    6dcc:	strd	r4, [r2]
    6dd0:	ldr	ip, [r0, #72]	; 0x48
    6dd4:	pop	{r4, r5, r6, r7}
    6dd8:	ldr	r0, [r1, #1592]	; 0x638
    6ddc:	add	r0, ip, r0
    6de0:	bx	r3
    6de4:	mov	r0, #14
    6de8:	bx	lr
    6dec:	mov	r0, #12
    6df0:	bx	lr
    6df4:	mov	r0, #33	; 0x21
    6df8:	bx	lr

00006dfc <readstat_insert_missing_value>:
    6dfc:	ldr	ip, [r0, #308]	; 0x134
    6e00:	mov	r3, r0
    6e04:	mov	r2, r1
    6e08:	cmp	ip, #0
    6e0c:	beq	6e4c <readstat_insert_missing_value+0x50>
    6e10:	ldr	ip, [r1]
    6e14:	cmp	ip, #0
    6e18:	ldreq	r2, [r1, #1592]	; 0x638
    6e1c:	ldreq	r0, [r0, #72]	; 0x48
    6e20:	ldreq	r3, [r3, #264]	; 0x108
    6e24:	beq	6e44 <readstat_insert_missing_value+0x48>
    6e28:	cmp	ip, #6
    6e2c:	ldrne	r0, [r3, #72]	; 0x48
    6e30:	ldrne	r2, [r2, #1592]	; 0x638
    6e34:	ldrne	r3, [r3, #268]	; 0x10c
    6e38:	bne	6e44 <readstat_insert_missing_value+0x48>
    6e3c:	mov	r2, #0
    6e40:	b	3f64 <readstat_insert_string_ref@plt>
    6e44:	add	r0, r0, r2
    6e48:	bx	r3
    6e4c:	mov	r0, #14
    6e50:	bx	lr

00006e54 <readstat_insert_tagged_missing_value>:
    6e54:	mov	r3, r0
    6e58:	ldr	r0, [r0, #308]	; 0x134
    6e5c:	cmp	r0, #0
    6e60:	beq	6e9c <readstat_insert_tagged_missing_value+0x48>
    6e64:	push	{r4, lr}
    6e68:	ldr	r0, [r3, #72]	; 0x48
    6e6c:	ldr	lr, [r3, #272]	; 0x110
    6e70:	ldr	ip, [r1, #1592]	; 0x638
    6e74:	cmp	lr, #0
    6e78:	add	r0, r0, ip
    6e7c:	bne	6e90 <readstat_insert_tagged_missing_value+0x3c>
    6e80:	ldr	r3, [r3, #268]	; 0x10c
    6e84:	blx	r3
    6e88:	mov	r0, #23
    6e8c:	pop	{r4, pc}
    6e90:	mov	r3, lr
    6e94:	pop	{r4, lr}
    6e98:	bx	r3
    6e9c:	mov	r0, #14
    6ea0:	bx	lr

00006ea4 <readstat_end_row>:
    6ea4:	ldr	r3, [r0, #308]	; 0x134
    6ea8:	cmp	r3, #0
    6eac:	beq	6edc <readstat_end_row+0x38>
    6eb0:	push	{r4, lr}
    6eb4:	mov	r4, r0
    6eb8:	ldr	r1, [r0, #72]	; 0x48
    6ebc:	ldr	r2, [r0, #76]	; 0x4c
    6ec0:	ldr	r3, [r0, #280]	; 0x118
    6ec4:	blx	r3
    6ec8:	cmp	r0, #0
    6ecc:	ldreq	r3, [r4, #84]	; 0x54
    6ed0:	addeq	r3, r3, #1
    6ed4:	streq	r3, [r4, #84]	; 0x54
    6ed8:	pop	{r4, pc}
    6edc:	mov	r0, #14
    6ee0:	bx	lr

00006ee4 <readstat_end_writing>:
    6ee4:	ldr	r3, [r0, #308]	; 0x134
    6ee8:	cmp	r3, #0
    6eec:	beq	6f94 <readstat_end_writing+0xb0>
    6ef0:	ldrd	r2, [r0, #80]	; 0x50
    6ef4:	push	{r4, r5, r6, r7, r8, lr}
    6ef8:	mov	r4, r0
    6efc:	cmp	r3, r2
    6f00:	bne	6f9c <readstat_end_writing+0xb8>
    6f04:	cmp	r3, #0
    6f08:	beq	6f6c <readstat_end_writing+0x88>
    6f0c:	ldr	r7, [r4, #64]	; 0x40
    6f10:	mov	r5, #1
    6f14:	cmp	r7, r5
    6f18:	ble	6f54 <readstat_end_writing+0x70>
    6f1c:	ldr	r6, [r4, #60]	; 0x3c
    6f20:	lsl	r1, r5, #2
    6f24:	sub	r0, r1, #4
    6f28:	add	r0, r6, r0
    6f2c:	add	r1, r6, r1
    6f30:	bl	5fa8 <readstat_compare_string_refs>
    6f34:	cmp	r0, #0
    6f38:	ble	6f8c <readstat_end_writing+0xa8>
    6f3c:	ldr	r3, [pc, #104]	; 6fac <readstat_end_writing+0xc8>
    6f40:	mov	r2, #4
    6f44:	mov	r1, r7
    6f48:	mov	r0, r6
    6f4c:	add	r3, pc, r3
    6f50:	bl	445c <qsort@plt>
    6f54:	ldr	r3, [r4, #284]	; 0x11c
    6f58:	cmp	r3, #0
    6f5c:	beq	6fa4 <readstat_end_writing+0xc0>
    6f60:	mov	r0, r4
    6f64:	pop	{r4, r5, r6, r7, r8, lr}
    6f68:	bx	r3
    6f6c:	bl	3db4 <readstat_validate_metadata@plt>
    6f70:	cmp	r0, #0
    6f74:	popne	{r4, r5, r6, r7, r8, pc}
    6f78:	mov	r0, r4
    6f7c:	bl	69d0 <readstat_begin_writing_data.part.0>
    6f80:	cmp	r0, #0
    6f84:	beq	6f0c <readstat_end_writing+0x28>
    6f88:	pop	{r4, r5, r6, r7, r8, pc}
    6f8c:	add	r5, r5, #1
    6f90:	b	6f14 <readstat_end_writing+0x30>
    6f94:	mov	r0, #14
    6f98:	bx	lr
    6f9c:	mov	r0, #9
    6fa0:	pop	{r4, r5, r6, r7, r8, pc}
    6fa4:	mov	r0, r3
    6fa8:	pop	{r4, r5, r6, r7, r8, pc}
    6fac:	.word	0xfffff054

00006fb0 <memreverse>:
    6fb0:	push	{r4, r5, r6, lr}
    6fb4:	mov	r4, r0
    6fb8:	mov	r5, r1
    6fbc:	bl	3ec8 <machine_is_little_endian@plt>
    6fc0:	cmp	r0, #0
    6fc4:	popeq	{r4, r5, r6, pc}
    6fc8:	add	r3, r5, r5, lsr #31
    6fcc:	add	r1, r4, r5
    6fd0:	sub	r2, r4, #1
    6fd4:	mov	ip, r1
    6fd8:	asr	r3, r3, #1
    6fdc:	sub	r0, ip, r1
    6fe0:	cmp	r3, r0
    6fe4:	pople	{r4, r5, r6, pc}
    6fe8:	ldrb	r0, [r2, #1]!
    6fec:	ldrb	lr, [r1, #-1]!
    6ff0:	strb	lr, [r2]
    6ff4:	strb	r0, [r1]
    6ff8:	b	6fdc <memreverse+0x2c>

00006ffc <get_native>:
    6ffc:	push	{r4, r5, r6, lr}
    7000:	mov	r2, #8
    7004:	ldr	r4, [pc, #96]	; 706c <get_native+0x70>
    7008:	add	r4, pc, r4
    700c:	add	r5, r4, #8
    7010:	mov	r0, r4
    7014:	mov	r1, r5
    7018:	bl	3fb8 <memcmp@plt>
    701c:	cmp	r0, #0
    7020:	beq	705c <get_native+0x60>
    7024:	mov	r2, #8
    7028:	mov	r0, r4
    702c:	add	r1, r5, r2
    7030:	bl	3fb8 <memcmp@plt>
    7034:	cmp	r0, #0
    7038:	beq	7064 <get_native+0x68>
    703c:	mov	r2, #8
    7040:	add	r1, r4, #24
    7044:	mov	r0, r4
    7048:	bl	3fb8 <memcmp@plt>
    704c:	cmp	r0, #0
    7050:	mvnne	r0, #0
    7054:	moveq	r0, #3
    7058:	pop	{r4, r5, r6, pc}
    705c:	mov	r0, #1
    7060:	pop	{r4, r5, r6, pc}
    7064:	mov	r0, #2
    7068:	pop	{r4, r5, r6, pc}
    706c:	.word	0x00039310

00007070 <cnxptiee>:
    7070:	push	{r4, r5, r6, r7, lr}
    7074:	subs	r7, r1, #0
    7078:	sub	sp, sp, #36	; 0x24
    707c:	mov	r5, r0
    7080:	mov	r4, r2
    7084:	mov	r6, r3
    7088:	bne	7094 <cnxptiee+0x24>
    708c:	bl	41e0 <get_native@plt>
    7090:	mov	r7, r0
    7094:	cmp	r7, #0
    7098:	ble	7420 <cnxptiee+0x3b0>
    709c:	cmp	r7, #2
    70a0:	ble	70dc <cnxptiee+0x6c>
    70a4:	cmp	r7, #3
    70a8:	bne	7420 <cnxptiee+0x3b0>
    70ac:	cmp	r6, #3
    70b0:	moveq	r7, r6
    70b4:	beq	70ec <cnxptiee+0x7c>
    70b8:	add	r2, sp, #16
    70bc:	add	r3, r5, #8
    70c0:	mov	r1, r2
    70c4:	ldrb	r0, [r3, #-1]!
    70c8:	cmp	r5, r3
    70cc:	strb	r0, [r2], #1
    70d0:	bne	70c4 <cnxptiee+0x54>
    70d4:	mov	r5, r1
    70d8:	mov	r7, #2
    70dc:	cmp	r6, #0
    70e0:	bne	70ec <cnxptiee+0x7c>
    70e4:	bl	41e0 <get_native@plt>
    70e8:	mov	r6, r0
    70ec:	sub	r3, r6, #1
    70f0:	cmp	r3, #2
    70f4:	mvnhi	r0, #1
    70f8:	bhi	71ac <cnxptiee+0x13c>
    70fc:	cmp	r6, r7
    7100:	ldreq	r3, [r5]
    7104:	streq	r3, [r4]
    7108:	ldreq	r3, [r5, #4]
    710c:	beq	727c <cnxptiee+0x20c>
    7110:	cmp	r7, #1
    7114:	beq	7284 <cnxptiee+0x214>
    7118:	cmp	r7, #2
    711c:	bne	72e0 <cnxptiee+0x270>
    7120:	cmp	r6, #1
    7124:	ldrne	r3, [r5]
    7128:	strne	r3, [r4]
    712c:	ldrne	r3, [r5, #4]
    7130:	bne	7394 <cnxptiee+0x324>
    7134:	add	r3, sp, #24
    7138:	mov	r6, #0
    713c:	ldr	r0, [r5]
    7140:	str	r6, [sp, #12]
    7144:	ldr	r1, [r5, #4]
    7148:	stmia	r3!, {r0, r1}
    714c:	mov	r3, r0
    7150:	mov	r1, #4
    7154:	ldr	r5, [sp, #28]
    7158:	add	r0, sp, #8
    715c:	str	r3, [sp, #8]
    7160:	bl	3dd8 <memreverse@plt>
    7164:	mov	r1, #4
    7168:	add	r0, sp, #12
    716c:	str	r5, [sp, #12]
    7170:	bl	3dd8 <memreverse@plt>
    7174:	ldrb	r3, [sp, #24]
    7178:	str	r6, [r4]
    717c:	ldrb	r2, [sp, #25]
    7180:	str	r6, [r4, #4]
    7184:	and	r3, r3, r2
    7188:	cmp	r3, #255	; 0xff
    718c:	bne	71b4 <cnxptiee+0x144>
    7190:	ldrb	r3, [sp, #26]
    7194:	mvn	r3, r3
    7198:	uxtb	r3, r3
    719c:	cmp	r3, #210	; 0xd2
    71a0:	moveq	r3, #109	; 0x6d
    71a4:	strb	r3, [r4]
    71a8:	mov	r0, #0
    71ac:	add	sp, sp, #36	; 0x24
    71b0:	pop	{r4, r5, r6, r7, pc}
    71b4:	ldr	r3, [sp, #8]
    71b8:	ldr	r0, [sp, #12]
    71bc:	ubfx	r1, r3, #0, #20
    71c0:	orrs	r2, r3, r0
    71c4:	str	r1, [sp]
    71c8:	str	r0, [sp, #4]
    71cc:	beq	7258 <cnxptiee+0x1e8>
    71d0:	ubfx	r2, r3, #20, #11
    71d4:	orr	r1, r1, #1048576	; 0x100000
    71d8:	sub	r2, r2, #1020	; 0x3fc
    71dc:	sub	r2, r2, #3
    71e0:	ands	ip, r2, #3
    71e4:	streq	r1, [sp]
    71e8:	beq	720c <cnxptiee+0x19c>
    71ec:	lsr	lr, r0, #24
    71f0:	rsb	r5, ip, #8
    71f4:	lsl	r1, r1, ip
    71f8:	and	lr, lr, #224	; 0xe0
    71fc:	lsl	r0, r0, ip
    7200:	orr	r1, r1, lr, lsr r5
    7204:	str	r1, [sp]
    7208:	str	r0, [sp, #4]
    720c:	lsr	r3, r3, #24
    7210:	cmn	r2, #260	; 0x104
    7214:	asr	r1, r2, #2
    7218:	and	r0, r3, #128	; 0x80
    721c:	movlt	r3, #0
    7220:	add	r1, r1, #65	; 0x41
    7224:	orr	r1, r1, r0
    7228:	ldr	r0, [sp]
    722c:	strlt	r3, [r4]
    7230:	orr	r1, r0, r1, lsl #24
    7234:	str	r1, [sp]
    7238:	blt	727c <cnxptiee+0x20c>
    723c:	cmp	r2, #248	; 0xf8
    7240:	ble	7258 <cnxptiee+0x1e8>
    7244:	mvn	r2, #0
    7248:	orr	r3, r3, #127	; 0x7f
    724c:	str	r2, [r4, #1]
    7250:	str	r2, [r4, #4]
    7254:	b	71a4 <cnxptiee+0x134>
    7258:	mov	r1, #4
    725c:	mov	r0, sp
    7260:	bl	3dd8 <memreverse@plt>
    7264:	ldr	r3, [sp]
    7268:	mov	r1, #4
    726c:	add	r0, sp, r1
    7270:	str	r3, [r4]
    7274:	bl	3dd8 <memreverse@plt>
    7278:	ldr	r3, [sp, #4]
    727c:	str	r3, [r4, #4]
    7280:	b	71a8 <cnxptiee+0x138>
    7284:	ldr	r0, [r5]
    7288:	add	r2, sp, #24
    728c:	mov	r3, #0
    7290:	ldr	r1, [r5, #4]
    7294:	str	r3, [r4]
    7298:	str	r3, [r4, #4]
    729c:	str	r3, [sp, #8]
    72a0:	str	r3, [sp, #12]
    72a4:	stmia	r2!, {r0, r1}
    72a8:	ldrb	r5, [sp, #24]
    72ac:	cmp	r5, r3
    72b0:	beq	7318 <cnxptiee+0x2a8>
    72b4:	mov	r2, #7
    72b8:	mov	r1, r4
    72bc:	add	r0, sp, #25
    72c0:	bl	3fb8 <memcmp@plt>
    72c4:	cmp	r0, #0
    72c8:	bne	7318 <cnxptiee+0x2a8>
    72cc:	mvn	r3, #0
    72d0:	mvn	r1, r5
    72d4:	strb	r3, [r4]
    72d8:	strb	r3, [r4, #1]
    72dc:	strb	r1, [r4, #2]
    72e0:	cmp	r6, #3
    72e4:	bne	71a8 <cnxptiee+0x138>
    72e8:	ldr	r0, [r4]
    72ec:	add	r3, sp, #16
    72f0:	add	r2, sp, #23
    72f4:	ldr	r1, [r4, #4]
    72f8:	stmia	r3!, {r0, r1}
    72fc:	sub	r3, r4, #1
    7300:	add	r4, r4, #7
    7304:	ldrb	r1, [r2], #-1
    7308:	strb	r1, [r3, #1]!
    730c:	cmp	r4, r3
    7310:	bne	7304 <cnxptiee+0x294>
    7314:	b	71a8 <cnxptiee+0x138>
    7318:	ldr	r3, [sp, #24]
    731c:	mov	r1, #4
    7320:	add	r0, sp, #8
    7324:	str	r3, [sp, #8]
    7328:	bl	3dd8 <memreverse@plt>
    732c:	ldr	r3, [sp, #28]
    7330:	mov	r1, #4
    7334:	add	r0, sp, #12
    7338:	str	r3, [sp, #12]
    733c:	bl	3dd8 <memreverse@plt>
    7340:	ldr	r2, [sp, #8]
    7344:	ldr	r1, [sp, #12]
    7348:	bic	r3, r2, #-2147483648	; 0x80000000
    734c:	cmn	r3, #-2147483647	; 0x80000001
    7350:	bne	739c <cnxptiee+0x32c>
    7354:	cmn	r1, #1
    7358:	bne	739c <cnxptiee+0x32c>
    735c:	and	r2, r2, #-2147483648	; 0x80000000
    7360:	mov	r3, #0
    7364:	orr	r2, r2, #2130706432	; 0x7f000000
    7368:	orr	r2, r2, #15728640	; 0xf00000
    736c:	strd	r2, [sp]
    7370:	mov	r1, #4
    7374:	mov	r0, sp
    7378:	bl	3dd8 <memreverse@plt>
    737c:	ldr	r3, [sp]
    7380:	mov	r1, #4
    7384:	add	r0, sp, r1
    7388:	str	r3, [r4]
    738c:	bl	3dd8 <memreverse@plt>
    7390:	ldr	r3, [sp, #4]
    7394:	str	r3, [r4, #4]
    7398:	b	72e0 <cnxptiee+0x270>
    739c:	bic	r0, r2, #-16777216	; 0xff000000
    73a0:	orrs	r3, r2, r1
    73a4:	strd	r0, [sp]
    73a8:	beq	72e0 <cnxptiee+0x270>
    73ac:	tst	r2, #8388608	; 0x800000
    73b0:	bne	7410 <cnxptiee+0x3a0>
    73b4:	tst	r2, #4194304	; 0x400000
    73b8:	bne	7418 <cnxptiee+0x3a8>
    73bc:	ands	r3, r2, #2097152	; 0x200000
    73c0:	beq	73e4 <cnxptiee+0x374>
    73c4:	lsr	r0, r0, r7
    73c8:	and	r3, r2, #7
    73cc:	rsb	ip, r7, #32
    73d0:	str	r0, [sp]
    73d4:	lsr	r0, r1, r7
    73d8:	orr	r1, r0, r3, lsl ip
    73dc:	mov	r3, r7
    73e0:	str	r1, [sp, #4]
    73e4:	and	r1, r5, #127	; 0x7f
    73e8:	and	r2, r2, #-2147483648	; 0x80000000
    73ec:	add	r3, r3, r1, lsl #2
    73f0:	ldr	r1, [sp]
    73f4:	add	r3, r3, #760	; 0x2f8
    73f8:	add	r3, r3, #3
    73fc:	bic	r1, r1, #1048576	; 0x100000
    7400:	orr	r2, r1, r2
    7404:	orr	r3, r2, r3, lsl #20
    7408:	str	r3, [sp]
    740c:	b	7370 <cnxptiee+0x300>
    7410:	mov	r7, #3
    7414:	b	73c4 <cnxptiee+0x354>
    7418:	mov	r7, #2
    741c:	b	73c4 <cnxptiee+0x354>
    7420:	mvn	r0, #0
    7424:	b	71ac <cnxptiee+0x13c>

00007428 <sas_read8>:
    7428:	mov	r2, r0
    742c:	mov	ip, r1
    7430:	ldr	r0, [r0]
    7434:	sub	sp, sp, #8
    7438:	cmp	ip, #0
    743c:	ldr	r1, [r2, #4]
    7440:	mov	r3, sp
    7444:	stmia	r3!, {r0, r1}
    7448:	ldrd	r0, [sp]
    744c:	beq	7458 <sas_read8+0x30>
    7450:	add	sp, sp, #8
    7454:	b	3d90 <byteswap8@plt>
    7458:	add	sp, sp, #8
    745c:	bx	lr

00007460 <sas_read4>:
    7460:	cmp	r1, #0
    7464:	ldr	r0, [r0]
    7468:	bxeq	lr
    746c:	b	3da8 <byteswap4@plt>

00007470 <sas_read2>:
    7470:	cmp	r1, #0
    7474:	ldrh	r0, [r0]
    7478:	bxeq	lr
    747c:	b	3ebc <byteswap2@plt>

00007480 <sas_subheader_remainder>:
    7480:	add	r1, r1, #2
    7484:	sub	r0, r0, r1, lsl #1
    7488:	bx	lr

0000748c <sas_read_header>:
    748c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7490:	mov	r5, r0
    7494:	mov	r4, r1
    7498:	mov	r9, r2
    749c:	mov	r1, #0
    74a0:	mov	r2, #44	; 0x2c
    74a4:	vpush	{d8}
    74a8:	sub	sp, sp, #1408	; 0x580
    74ac:	sub	sp, sp, #4
    74b0:	ldr	r7, [pc, #1400]	; 7a30 <sas_read_header+0x5a4>
    74b4:	add	r6, sp, #220	; 0xdc
    74b8:	str	r3, [sp, #8]
    74bc:	add	r3, sp, #56	; 0x38
    74c0:	mov	r0, r3
    74c4:	bl	42b8 <memset@plt>
    74c8:	mov	r2, #1
    74cc:	add	r7, pc, r7
    74d0:	str	r2, [sp, #68]	; 0x44
    74d4:	mov	r2, #60	; 0x3c
    74d8:	str	r2, [sp, #76]	; 0x4c
    74dc:	bl	3e68 <mktime@plt>
    74e0:	vmov	s16, r0
    74e4:	mov	r1, #164	; 0xa4
    74e8:	mov	r0, r6
    74ec:	ldr	r3, [r5, #12]
    74f0:	ldr	r2, [r5, #20]
    74f4:	blx	r3
    74f8:	cmp	r0, #163	; 0xa3
    74fc:	bhi	7508 <sas_read_header+0x7c>
    7500:	mov	r0, #2
    7504:	b	7554 <sas_read_header+0xc8>
    7508:	ldr	r3, [pc, #1316]	; 7a34 <sas_read_header+0x5a8>
    750c:	mov	r2, #32
    7510:	mov	r0, r6
    7514:	ldr	r3, [r7, r3]
    7518:	mov	r1, r3
    751c:	str	r3, [sp, #12]
    7520:	bl	3fb8 <memcmp@plt>
    7524:	cmp	r0, #0
    7528:	beq	7564 <sas_read_header+0xd8>
    752c:	ldr	r3, [pc, #1284]	; 7a38 <sas_read_header+0x5ac>
    7530:	mov	r2, #32
    7534:	mov	r0, r6
    7538:	ldr	r3, [r7, r3]
    753c:	mov	r1, r3
    7540:	str	r3, [sp, #12]
    7544:	bl	3fb8 <memcmp@plt>
    7548:	cmp	r0, #0
    754c:	beq	7564 <sas_read_header+0xd8>
    7550:	mov	r0, #5
    7554:	add	sp, sp, #1408	; 0x580
    7558:	add	sp, sp, #4
    755c:	vpop	{d8}
    7560:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7564:	ldrb	r3, [sp, #255]	; 0xff
    7568:	ldrb	r6, [sp, #257]	; 0x101
    756c:	cmp	r3, #51	; 0x33
    7570:	moveq	r3, #4
    7574:	streq	r3, [r4, #24]
    7578:	ldrb	r3, [sp, #252]	; 0xfc
    757c:	cmp	r3, #51	; 0x33
    7580:	moveq	r3, #1
    7584:	streq	r3, [r4, #4]
    7588:	cmp	r6, #0
    758c:	bne	761c <sas_read_header+0x190>
    7590:	bl	3ec8 <machine_is_little_endian@plt>
    7594:	mov	r7, r0
    7598:	ldr	r1, [pc, #1180]	; 7a3c <sas_read_header+0x5b0>
    759c:	mov	r2, #0
    75a0:	mov	ip, #36	; 0x24
    75a4:	str	r6, [r4]
    75a8:	ldrb	r3, [sp, #290]	; 0x122
    75ac:	add	r1, pc, r1
    75b0:	mul	r0, ip, r2
    75b4:	ldr	lr, [r0, r1]
    75b8:	cmp	r3, lr
    75bc:	bne	7634 <sas_read_header+0x1a8>
    75c0:	add	r0, r0, #4
    75c4:	add	r1, r1, r0
    75c8:	str	r1, [r4, #144]	; 0x90
    75cc:	add	lr, sp, #312	; 0x138
    75d0:	add	ip, r4, #80	; 0x50
    75d4:	add	r2, sp, #376	; 0x178
    75d8:	mov	r3, lr
    75dc:	add	ip, ip, #8
    75e0:	ldm	r3!, {r0, r1}
    75e4:	cmp	r3, r2
    75e8:	mov	lr, r3
    75ec:	str	r0, [ip, #-8]
    75f0:	str	r1, [ip, #-4]
    75f4:	bne	75d8 <sas_read_header+0x14c>
    75f8:	mov	r1, #1
    75fc:	ldr	r3, [r5, #8]
    7600:	ldr	r2, [r5, #20]
    7604:	ldr	r0, [r4, #24]
    7608:	blx	r3
    760c:	cmn	r0, #1
    7610:	bne	7680 <sas_read_header+0x1f4>
    7614:	mov	r0, #15
    7618:	b	7554 <sas_read_header+0xc8>
    761c:	cmp	r6, #1
    7620:	bne	7550 <sas_read_header+0xc4>
    7624:	bl	3ec8 <machine_is_little_endian@plt>
    7628:	clz	r7, r0
    762c:	lsr	r7, r7, #5
    7630:	b	7598 <sas_read_header+0x10c>
    7634:	add	r2, r2, #1
    7638:	cmp	r2, #62	; 0x3e
    763c:	bne	75b0 <sas_read_header+0x124>
    7640:	ldr	r2, [r4, #144]	; 0x90
    7644:	cmp	r2, #0
    7648:	bne	75cc <sas_read_header+0x140>
    764c:	cmp	r9, #0
    7650:	beq	7678 <sas_read_header+0x1ec>
    7654:	ldr	r2, [pc, #996]	; 7a40 <sas_read_header+0x5b4>
    7658:	add	r4, sp, #384	; 0x180
    765c:	mov	r1, #1024	; 0x400
    7660:	mov	r0, r4
    7664:	add	r2, pc, r2
    7668:	bl	4294 <snprintf@plt>
    766c:	mov	r0, r4
    7670:	ldr	r1, [sp, #8]
    7674:	blx	r9
    7678:	mov	r0, #7
    767c:	b	7554 <sas_read_header+0xc8>
    7680:	add	r6, sp, #48	; 0x30
    7684:	mov	r1, #8
    7688:	ldr	r3, [r5, #12]
    768c:	sub	r0, r6, #8
    7690:	ldr	r2, [r5, #20]
    7694:	blx	r3
    7698:	cmp	r0, #7
    769c:	bls	7500 <sas_read_header+0x74>
    76a0:	cmp	r7, #0
    76a4:	beq	76b4 <sas_read_header+0x228>
    76a8:	vldr	d0, [r6, #-8]
    76ac:	bl	4528 <byteswap_double@plt>
    76b0:	vstr	d0, [r6, #-8]
    76b4:	mov	r1, #8
    76b8:	mov	r0, r6
    76bc:	ldr	r3, [r5, #12]
    76c0:	ldr	r2, [r5, #20]
    76c4:	blx	r3
    76c8:	cmp	r0, #7
    76cc:	bls	7500 <sas_read_header+0x74>
    76d0:	cmp	r7, #0
    76d4:	beq	76e4 <sas_read_header+0x258>
    76d8:	vldr	d0, [r6]
    76dc:	bl	4528 <byteswap_double@plt>
    76e0:	vstr	d0, [r6]
    76e4:	vcvt.f64.s32	d7, s16
    76e8:	vldr	d6, [r6, #-8]
    76ec:	vadd.f64	d6, d7, d6
    76f0:	vcmp.f64	d6, d6
    76f4:	vmrs	APSR_nzcv, fpscr
    76f8:	movvs	r3, #0
    76fc:	bvs	772c <sas_read_header+0x2a0>
    7700:	vldr	d5, [pc, #792]	; 7a20 <sas_read_header+0x594>
    7704:	vcmpe.f64	d6, d5
    7708:	vmrs	APSR_nzcv, fpscr
    770c:	mvngt	r3, #-2147483648	; 0x80000000
    7710:	bgt	772c <sas_read_header+0x2a0>
    7714:	vldr	d5, [pc, #780]	; 7a28 <sas_read_header+0x59c>
    7718:	vcmpe.f64	d6, d5
    771c:	vmrs	APSR_nzcv, fpscr
    7720:	vcvtpl.s32.f64	s13, d6
    7724:	vmovpl	r3, s13
    7728:	movmi	r3, #-2147483648	; 0x80000000
    772c:	vldr	d6, [r6]
    7730:	str	r3, [r4, #72]	; 0x48
    7734:	vadd.f64	d7, d7, d6
    7738:	vcmp.f64	d7, d7
    773c:	vmrs	APSR_nzcv, fpscr
    7740:	movvs	r3, #0
    7744:	bvs	7774 <sas_read_header+0x2e8>
    7748:	vldr	d6, [pc, #720]	; 7a20 <sas_read_header+0x594>
    774c:	vcmpe.f64	d7, d6
    7750:	vmrs	APSR_nzcv, fpscr
    7754:	mvngt	r3, #-2147483648	; 0x80000000
    7758:	bgt	7774 <sas_read_header+0x2e8>
    775c:	vldr	d6, [pc, #708]	; 7a28 <sas_read_header+0x59c>
    7760:	vcmpe.f64	d7, d6
    7764:	vmrs	APSR_nzcv, fpscr
    7768:	vcvtpl.s32.f64	s15, d7
    776c:	vmovpl	r3, s15
    7770:	movmi	r3, #-2147483648	; 0x80000000
    7774:	mov	r1, #1
    7778:	mov	r0, #16
    777c:	ldr	r2, [r5, #20]
    7780:	str	r3, [r4, #76]	; 0x4c
    7784:	ldr	r3, [r5, #8]
    7788:	blx	r3
    778c:	cmn	r0, #1
    7790:	beq	7614 <sas_read_header+0x188>
    7794:	add	r3, sp, #32
    7798:	mov	r1, #4
    779c:	ldr	r2, [r5, #20]
    77a0:	str	r3, [sp, #12]
    77a4:	ldr	r0, [sp, #12]
    77a8:	ldr	r3, [r5, #12]
    77ac:	sub	r0, r0, #12
    77b0:	blx	r3
    77b4:	cmp	r0, #3
    77b8:	bls	7500 <sas_read_header+0x74>
    77bc:	ldr	r0, [sp, #12]
    77c0:	mov	r1, #4
    77c4:	ldr	r3, [r5, #12]
    77c8:	ldr	r2, [r5, #20]
    77cc:	sub	r0, r0, #8
    77d0:	blx	r3
    77d4:	cmp	r0, #3
    77d8:	bls	7500 <sas_read_header+0x74>
    77dc:	cmp	r7, #0
    77e0:	ldr	r0, [sp, #20]
    77e4:	beq	77ec <sas_read_header+0x360>
    77e8:	bl	3da8 <byteswap4@plt>
    77ec:	mov	r3, #0
    77f0:	str	r0, [r4, #64]	; 0x40
    77f4:	cmp	r7, r3
    77f8:	mov	r8, r3
    77fc:	ldr	r0, [sp, #24]
    7800:	str	r3, [r4, #68]	; 0x44
    7804:	beq	780c <sas_read_header+0x380>
    7808:	bl	3da8 <byteswap4@plt>
    780c:	ldr	r3, [r4, #64]	; 0x40
    7810:	str	r0, [r4, #32]
    7814:	sub	r0, r0, #1024	; 0x400
    7818:	ldr	r2, [r4, #68]	; 0x44
    781c:	str	r8, [r4, #36]	; 0x24
    7820:	subs	sl, r3, #1024	; 0x400
    7824:	mov	r3, #0
    7828:	sbc	fp, r2, #0
    782c:	ldr	r2, [pc, #528]	; 7a44 <sas_read_header+0x5b8>
    7830:	cmp	fp, r3
    7834:	cmpeq	sl, r2
    7838:	add	r2, r2, #15728640	; 0xf00000
    783c:	movhi	r3, #1
    7840:	movls	r3, #0
    7844:	cmp	r0, r2
    7848:	movls	r0, r3
    784c:	orrhi	r0, r3, #1
    7850:	cmp	r0, #0
    7854:	bne	7550 <sas_read_header+0xc4>
    7858:	ldr	r1, [r4, #4]
    785c:	add	r8, sp, #384	; 0x180
    7860:	mov	r0, #24
    7864:	ldr	r3, [r5, #12]
    7868:	ldr	r2, [r5, #20]
    786c:	cmp	r1, #0
    7870:	mov	r1, #0
    7874:	beq	7914 <sas_read_header+0x488>
    7878:	mov	sl, #40	; 0x28
    787c:	mov	fp, #0
    7880:	strd	sl, [r4, #40]	; 0x28
    7884:	strd	r0, [r4, #48]	; 0x30
    7888:	mov	r1, #8
    788c:	mov	r0, r8
    7890:	blx	r3
    7894:	cmp	r0, #7
    7898:	bls	7500 <sas_read_header+0x74>
    789c:	cmp	r7, #0
    78a0:	ldrd	r0, [r8]
    78a4:	beq	78ac <sas_read_header+0x420>
    78a8:	bl	3d90 <byteswap8@plt>
    78ac:	strd	r0, [r4, #56]	; 0x38
    78b0:	ldrd	r2, [r4, #56]	; 0x38
    78b4:	mov	r0, #16777216	; 0x1000000
    78b8:	mov	r1, #0
    78bc:	cmp	r0, r2
    78c0:	sbcs	r3, r1, r3
    78c4:	blt	7550 <sas_read_header+0xc4>
    78c8:	mov	r1, #1
    78cc:	mov	r0, #8
    78d0:	ldr	r3, [r5, #8]
    78d4:	ldr	r2, [r5, #20]
    78d8:	blx	r3
    78dc:	cmn	r0, #1
    78e0:	bne	7958 <sas_read_header+0x4cc>
    78e4:	cmp	r9, #0
    78e8:	beq	7614 <sas_read_header+0x188>
    78ec:	ldr	r2, [pc, #340]	; 7a48 <sas_read_header+0x5bc>
    78f0:	mov	r3, #8
    78f4:	mov	r1, #1024	; 0x400
    78f8:	mov	r0, r8
    78fc:	add	r2, pc, r2
    7900:	bl	4294 <snprintf@plt>
    7904:	mov	r0, r8
    7908:	ldr	r1, [sp, #8]
    790c:	blx	r9
    7910:	b	7614 <sas_read_header+0x188>
    7914:	strd	r0, [r4, #40]	; 0x28
    7918:	mov	r0, #12
    791c:	mov	r1, #0
    7920:	strd	r0, [r4, #48]	; 0x30
    7924:	mov	r1, #4
    7928:	mov	r0, r8
    792c:	blx	r3
    7930:	cmp	r0, #3
    7934:	bls	7500 <sas_read_header+0x74>
    7938:	cmp	r7, #0
    793c:	ldr	r0, [sp, #384]	; 0x180
    7940:	beq	7948 <sas_read_header+0x4bc>
    7944:	bl	3da8 <byteswap4@plt>
    7948:	mov	r3, #0
    794c:	str	r0, [r4, #56]	; 0x38
    7950:	str	r3, [r4, #60]	; 0x3c
    7954:	b	78b0 <sas_read_header+0x424>
    7958:	add	r7, sp, #100	; 0x64
    795c:	mov	r1, #120	; 0x78
    7960:	ldr	r3, [r5, #12]
    7964:	mov	r0, r7
    7968:	ldr	r2, [r5, #20]
    796c:	blx	r3
    7970:	cmp	r0, #119	; 0x77
    7974:	bls	7500 <sas_read_header+0x74>
    7978:	ldr	r1, [pc, #204]	; 7a4c <sas_read_header+0x5c0>
    797c:	sub	r6, r6, #12
    7980:	mov	r0, r7
    7984:	ldr	r3, [sp, #12]
    7988:	str	r6, [sp]
    798c:	add	r1, pc, r1
    7990:	sub	r2, r3, #4
    7994:	bl	42a0 <__isoc99_sscanf@plt>
    7998:	cmp	r0, #3
    799c:	bne	7550 <sas_read_header+0xc4>
    79a0:	ldr	r3, [sp, #28]
    79a4:	ldr	r2, [sp, #32]
    79a8:	ldr	r1, [sp, #36]	; 0x24
    79ac:	str	r3, [r4, #12]
    79b0:	sub	r3, r3, #8
    79b4:	ldr	r0, [r4, #64]	; 0x40
    79b8:	str	r2, [r4, #16]
    79bc:	orr	r2, r2, r1
    79c0:	str	r1, [r4, #20]
    79c4:	mov	r1, #0
    79c8:	cmp	r3, #1
    79cc:	cmpls	r2, #0
    79d0:	ldr	r2, [r5, #20]
    79d4:	moveq	r3, #1
    79d8:	movne	r3, #0
    79dc:	eor	r3, r3, #1
    79e0:	str	r3, [r4, #8]
    79e4:	ldr	r3, [r5, #8]
    79e8:	blx	r3
    79ec:	cmn	r0, #1
    79f0:	movne	r0, #0
    79f4:	bne	7554 <sas_read_header+0xc8>
    79f8:	cmp	r9, #0
    79fc:	beq	7614 <sas_read_header+0x188>
    7a00:	ldrd	r2, [r4, #64]	; 0x40
    7a04:	mov	r1, #1024	; 0x400
    7a08:	mov	r0, r8
    7a0c:	strd	r2, [sp]
    7a10:	ldr	r2, [pc, #56]	; 7a50 <sas_read_header+0x5c4>
    7a14:	add	r2, pc, r2
    7a18:	bl	4294 <snprintf@plt>
    7a1c:	b	7904 <sas_read_header+0x478>
    7a20:	.word	0xffc00000
    7a24:	.word	0x41dfffff
    7a28:	.word	0x00000000
    7a2c:	.word	0xc1e00000
    7a30:	.word	0x00038b2c
    7a34:	.word	0x000002f8
    7a38:	.word	0x000002c8
    7a3c:	.word	0x00038d8c
    7a40:	.word	0x000195a3
    7a44:	.word	0x000ffc00
    7a48:	.word	0x0001932e
    7a4c:	.word	0x000192c5
    7a50:	.word	0x0001924a

00007a54 <sas_write_header>:
    7a54:	sub	sp, sp, #8
    7a58:	push	{r4, r5, r6, r7, r8, r9, lr}
    7a5c:	sub	sp, sp, #212	; 0xd4
    7a60:	mov	r5, r0
    7a64:	add	r8, sp, #240	; 0xf0
    7a68:	mov	r6, r1
    7a6c:	mov	r1, #0
    7a70:	add	r4, sp, #332	; 0x14c
    7a74:	stm	r8, {r2, r3}
    7a78:	mov	r2, #44	; 0x2c
    7a7c:	add	r9, r5, #88	; 0x58
    7a80:	add	r3, sp, r2
    7a84:	mov	r0, r3
    7a88:	bl	42b8 <memset@plt>
    7a8c:	mov	r2, #1
    7a90:	str	r2, [sp, #56]	; 0x38
    7a94:	mov	r2, #60	; 0x3c
    7a98:	str	r2, [sp, #64]	; 0x40
    7a9c:	bl	3e68 <mktime@plt>
    7aa0:	mov	r7, r0
    7aa4:	mov	r2, #64	; 0x40
    7aa8:	mov	r1, #32
    7aac:	mov	r0, r4
    7ab0:	bl	42b8 <memset@plt>
    7ab4:	mov	r0, r9
    7ab8:	bl	421c <strlen@plt>
    7abc:	cmp	r0, #64	; 0x40
    7ac0:	bhi	7af4 <sas_write_header+0xa0>
    7ac4:	cmp	r0, #0
    7ac8:	mov	r2, r0
    7acc:	bne	7af8 <sas_write_header+0xa4>
    7ad0:	ldr	r3, [pc, #532]	; 7cec <sas_write_header+0x298>
    7ad4:	add	r3, pc, r3
    7ad8:	ldr	r2, [r3]
    7adc:	str	r2, [r4]
    7ae0:	ldrh	r2, [r3, #4]
    7ae4:	ldrb	r3, [r3, #6]
    7ae8:	strh	r2, [r4, #4]
    7aec:	strb	r3, [r4, #6]
    7af0:	b	7b04 <sas_write_header+0xb0>
    7af4:	mov	r2, #64	; 0x40
    7af8:	mov	r1, r9
    7afc:	mov	r0, r4
    7b00:	bl	3f34 <memcpy@plt>
    7b04:	mov	r2, #164	; 0xa4
    7b08:	mov	r1, r8
    7b0c:	mov	r0, r5
    7b10:	bl	4474 <readstat_write_bytes@plt>
    7b14:	subs	r4, r0, #0
    7b18:	bne	7cd8 <sas_write_header+0x284>
    7b1c:	mov	r0, r5
    7b20:	ldr	r1, [r6, #24]
    7b24:	bl	4030 <readstat_write_zeros@plt>
    7b28:	subs	r4, r0, #0
    7b2c:	bne	7cd8 <sas_write_header+0x284>
    7b30:	ldr	r3, [r6, #72]	; 0x48
    7b34:	mov	r2, #8
    7b38:	add	r1, sp, #16
    7b3c:	mov	r0, r5
    7b40:	sub	r3, r3, r7
    7b44:	vmov	s15, r3
    7b48:	vcvt.f64.s32	d7, s15
    7b4c:	vstr	d7, [sp, #16]
    7b50:	bl	4474 <readstat_write_bytes@plt>
    7b54:	subs	r4, r0, #0
    7b58:	bne	7cd8 <sas_write_header+0x284>
    7b5c:	ldr	r3, [r6, #76]	; 0x4c
    7b60:	mov	r2, #8
    7b64:	add	r1, sp, #24
    7b68:	mov	r0, r5
    7b6c:	sub	r3, r3, r7
    7b70:	vmov	s15, r3
    7b74:	vcvt.f64.s32	d7, s15
    7b78:	vstr	d7, [sp, #24]
    7b7c:	bl	4474 <readstat_write_bytes@plt>
    7b80:	subs	r4, r0, #0
    7b84:	bne	7cd8 <sas_write_header+0x284>
    7b88:	mov	r1, #16
    7b8c:	mov	r0, r5
    7b90:	bl	4030 <readstat_write_zeros@plt>
    7b94:	subs	r4, r0, #0
    7b98:	bne	7cd8 <sas_write_header+0x284>
    7b9c:	ldr	r3, [r6, #64]	; 0x40
    7ba0:	mov	r2, #4
    7ba4:	add	r1, sp, #8
    7ba8:	mov	r0, r5
    7bac:	str	r3, [sp, #8]
    7bb0:	ldr	r3, [r6, #32]
    7bb4:	str	r3, [sp, #12]
    7bb8:	bl	4474 <readstat_write_bytes@plt>
    7bbc:	subs	r4, r0, #0
    7bc0:	bne	7cd8 <sas_write_header+0x284>
    7bc4:	mov	r2, #4
    7bc8:	add	r1, sp, #12
    7bcc:	mov	r0, r5
    7bd0:	bl	4474 <readstat_write_bytes@plt>
    7bd4:	subs	r4, r0, #0
    7bd8:	bne	7cd8 <sas_write_header+0x284>
    7bdc:	ldr	r1, [r6, #4]
    7be0:	add	r8, sp, #88	; 0x58
    7be4:	mov	r0, r5
    7be8:	ldr	r3, [r6, #56]	; 0x38
    7bec:	ldr	r2, [r6, #60]	; 0x3c
    7bf0:	cmp	r1, #0
    7bf4:	mov	r1, r8
    7bf8:	moveq	r2, #4
    7bfc:	str	r3, [sp, #88]	; 0x58
    7c00:	strne	r2, [sp, #92]	; 0x5c
    7c04:	movne	r2, #8
    7c08:	bl	4474 <readstat_write_bytes@plt>
    7c0c:	cmp	r0, #0
    7c10:	mov	r4, r0
    7c14:	bne	7cd8 <sas_write_header+0x284>
    7c18:	mov	r1, #8
    7c1c:	mov	r0, r5
    7c20:	bl	4030 <readstat_write_zeros@plt>
    7c24:	subs	r4, r0, #0
    7c28:	bne	7cd8 <sas_write_header+0x284>
    7c2c:	mov	r1, r4
    7c30:	mov	r2, #120	; 0x78
    7c34:	mov	r0, r8
    7c38:	add	r7, sp, #32
    7c3c:	bl	42b8 <memset@plt>
    7c40:	ldr	r2, [pc, #168]	; 7cf0 <sas_write_header+0x29c>
    7c44:	add	r3, sp, #96	; 0x60
    7c48:	str	r4, [sp, #32]
    7c4c:	str	r4, [sp, #36]	; 0x24
    7c50:	strb	r4, [sp, #40]	; 0x28
    7c54:	str	r4, [sp, #106]	; 0x6a
    7c58:	add	r2, pc, r2
    7c5c:	strh	r4, [sp, #110]	; 0x6e
    7c60:	ldr	r0, [r2]
    7c64:	ldr	r1, [r2, #4]
    7c68:	ldrh	r2, [r2, #8]
    7c6c:	stmia	r3!, {r0, r1}
    7c70:	mov	r0, #101	; 0x65
    7c74:	strh	r2, [r3]
    7c78:	mov	r2, #10
    7c7c:	ldr	r3, [r5, #8]
    7c80:	str	r0, [sp]
    7c84:	mov	r0, r7
    7c88:	udiv	r1, r3, r2
    7c8c:	mls	r3, r2, r1, r3
    7c90:	ldr	r2, [pc, #92]	; 7cf4 <sas_write_header+0x2a0>
    7c94:	mov	r1, #9
    7c98:	add	r2, pc, r2
    7c9c:	bl	4294 <snprintf@plt>
    7ca0:	ldm	r7, {r0, r1}
    7ca4:	mov	r2, #120	; 0x78
    7ca8:	stm	r8, {r0, r1}
    7cac:	mov	r1, r8
    7cb0:	mov	r0, r5
    7cb4:	bl	4474 <readstat_write_bytes@plt>
    7cb8:	subs	r4, r0, #0
    7cbc:	bne	7cd8 <sas_write_header+0x284>
    7cc0:	ldr	r3, [r5, #4]
    7cc4:	mov	r0, r5
    7cc8:	ldr	r1, [r6, #64]	; 0x40
    7ccc:	sub	r1, r1, r3
    7cd0:	bl	4030 <readstat_write_zeros@plt>
    7cd4:	mov	r4, r0
    7cd8:	mov	r0, r4
    7cdc:	add	sp, sp, #212	; 0xd4
    7ce0:	pop	{r4, r5, r6, r7, r8, r9, lr}
    7ce4:	add	sp, sp, #8
    7ce8:	bx	lr
    7cec:	.word	0x000191b4
    7cf0:	.word	0x00018f9f
    7cf4:	.word	0x00018ff8

00007cf8 <sas_header_info_init>:
    7cf8:	push	{r4, r5, r6, lr}
    7cfc:	mov	r5, r0
    7d00:	mov	r4, r1
    7d04:	mov	r0, #1
    7d08:	mov	r1, #152	; 0x98
    7d0c:	bl	3d6c <calloc@plt>
    7d10:	ldr	r3, [r5, #20]
    7d14:	mov	r2, #4096	; 0x1000
    7d18:	cmp	r4, #0
    7d1c:	str	r3, [r0, #72]	; 0x48
    7d20:	str	r3, [r0, #76]	; 0x4c
    7d24:	mov	r3, #0
    7d28:	strd	r2, [r0, #32]
    7d2c:	movne	r3, #1
    7d30:	moveq	r3, #0
    7d34:	str	r3, [r0, #4]
    7d38:	beq	7d64 <sas_header_info_init+0x6c>
    7d3c:	mov	r2, #8192	; 0x2000
    7d40:	mov	r3, #0
    7d44:	strd	r2, [r0, #64]	; 0x40
    7d48:	mov	r2, #40	; 0x28
    7d4c:	mov	r3, #0
    7d50:	strd	r2, [r0, #40]	; 0x28
    7d54:	mov	r2, #24
    7d58:	mov	r3, #0
    7d5c:	strd	r2, [r0, #48]	; 0x30
    7d60:	pop	{r4, r5, r6, pc}
    7d64:	mov	r2, #1024	; 0x400
    7d68:	mov	r3, #0
    7d6c:	strd	r2, [r0, #64]	; 0x40
    7d70:	mov	r2, #24
    7d74:	mov	r3, #0
    7d78:	strd	r2, [r0, #40]	; 0x28
    7d7c:	mov	r2, #12
    7d80:	b	7d58 <sas_header_info_init+0x60>

00007d84 <sas_fill_page>:
    7d84:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    7d88:	mov	r4, r0
    7d8c:	ldr	r0, [r0, #4]
    7d90:	ldr	r5, [r1, #32]
    7d94:	ldrd	r6, [r1, #64]	; 0x40
    7d98:	ldr	r3, [r1, #36]	; 0x24
    7d9c:	mov	r2, r5
    7da0:	subs	r8, r0, r6
    7da4:	rsc	r9, r7, #0
    7da8:	mov	r0, r8
    7dac:	mov	r1, r9
    7db0:	bl	20118 <__aeabi_ldivmod>
    7db4:	orrs	r1, r2, r3
    7db8:	beq	7dcc <sas_fill_page+0x48>
    7dbc:	sub	r1, r5, r2
    7dc0:	mov	r0, r4
    7dc4:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    7dc8:	b	4030 <readstat_write_zeros@plt>
    7dcc:	mov	r0, #0
    7dd0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00007dd4 <sas_validate_name>:
    7dd4:	sub	ip, r0, #1
    7dd8:	ldrb	r3, [ip, #1]!
    7ddc:	cmp	r3, #0
    7de0:	bne	7ea0 <sas_validate_name+0xcc>
    7de4:	ldrb	r3, [r0]
    7de8:	cmp	r3, #0
    7dec:	beq	7ecc <sas_validate_name+0xf8>
    7df0:	cmp	r3, #95	; 0x5f
    7df4:	beq	7e08 <sas_validate_name+0x34>
    7df8:	bic	r3, r3, #32
    7dfc:	sub	r3, r3, #65	; 0x41
    7e00:	cmp	r3, #25
    7e04:	bhi	7ed4 <sas_validate_name+0x100>
    7e08:	push	{r4, r5, r6, lr}
    7e0c:	mov	r4, r1
    7e10:	mov	r5, r0
    7e14:	ldr	r1, [pc, #200]	; 7ee4 <sas_validate_name+0x110>
    7e18:	add	r1, pc, r1
    7e1c:	bl	3e14 <strcmp@plt>
    7e20:	cmp	r0, #0
    7e24:	beq	7edc <sas_validate_name+0x108>
    7e28:	ldr	r1, [pc, #184]	; 7ee8 <sas_validate_name+0x114>
    7e2c:	mov	r0, r5
    7e30:	add	r1, pc, r1
    7e34:	bl	3e14 <strcmp@plt>
    7e38:	cmp	r0, #0
    7e3c:	beq	7edc <sas_validate_name+0x108>
    7e40:	ldr	r1, [pc, #164]	; 7eec <sas_validate_name+0x118>
    7e44:	mov	r0, r5
    7e48:	add	r1, pc, r1
    7e4c:	bl	3e14 <strcmp@plt>
    7e50:	cmp	r0, #0
    7e54:	beq	7edc <sas_validate_name+0x108>
    7e58:	ldr	r1, [pc, #144]	; 7ef0 <sas_validate_name+0x11c>
    7e5c:	mov	r0, r5
    7e60:	add	r1, pc, r1
    7e64:	bl	3e14 <strcmp@plt>
    7e68:	cmp	r0, #0
    7e6c:	beq	7edc <sas_validate_name+0x108>
    7e70:	ldr	r1, [pc, #124]	; 7ef4 <sas_validate_name+0x120>
    7e74:	mov	r0, r5
    7e78:	add	r1, pc, r1
    7e7c:	bl	3e14 <strcmp@plt>
    7e80:	cmp	r0, #0
    7e84:	beq	7edc <sas_validate_name+0x108>
    7e88:	mov	r0, r5
    7e8c:	bl	421c <strlen@plt>
    7e90:	cmp	r4, r0
    7e94:	movcc	r0, #28
    7e98:	movcs	r0, #0
    7e9c:	pop	{r4, r5, r6, pc}
    7ea0:	cmp	r3, #95	; 0x5f
    7ea4:	beq	7dd8 <sas_validate_name+0x4>
    7ea8:	bic	r2, r3, #32
    7eac:	sub	r2, r2, #65	; 0x41
    7eb0:	cmp	r2, #25
    7eb4:	bls	7dd8 <sas_validate_name+0x4>
    7eb8:	sub	r3, r3, #48	; 0x30
    7ebc:	cmp	r3, #9
    7ec0:	bls	7dd8 <sas_validate_name+0x4>
    7ec4:	mov	r0, #26
    7ec8:	bx	lr
    7ecc:	mov	r0, #38	; 0x26
    7ed0:	bx	lr
    7ed4:	mov	r0, #25
    7ed8:	bx	lr
    7edc:	mov	r0, #27
    7ee0:	pop	{r4, r5, r6, pc}
    7ee4:	.word	0x00018e83
    7ee8:	.word	0x00018e6f
    7eec:	.word	0x00018e5f
    7ef0:	.word	0x00018e51
    7ef4:	.word	0x00018e45

00007ef8 <sas_validate_variable>:
    7ef8:	push	{r4, lr}
    7efc:	bl	4384 <readstat_variable_get_name@plt>
    7f00:	mov	r1, #32
    7f04:	pop	{r4, lr}
    7f08:	b	3d60 <sas_validate_name@plt>

00007f0c <sas_validate_tag>:
    7f0c:	sub	r3, r0, #65	; 0x41
    7f10:	cmp	r0, #95	; 0x5f
    7f14:	cmpne	r3, #25
    7f18:	movhi	r0, #21
    7f1c:	movls	r0, #0
    7f20:	bx	lr

00007f24 <sas_assign_tag>:
    7f24:	push	{r4, r5, r6, lr}
    7f28:	subs	r4, r1, #0
    7f2c:	mov	r5, r0
    7f30:	moveq	r4, #95	; 0x5f
    7f34:	beq	7f48 <sas_assign_tag+0x24>
    7f38:	sub	r3, r4, #2
    7f3c:	cmp	r3, #25
    7f40:	addls	r4, r4, #63	; 0x3f
    7f44:	uxtbls	r4, r4
    7f48:	mov	r0, r4
    7f4c:	bl	4168 <sas_validate_tag@plt>
    7f50:	cmp	r0, #0
    7f54:	ldrhne	r3, [r5, #12]
    7f58:	strbeq	r4, [r5, #12]
    7f5c:	ldrbeq	r3, [r5, #13]
    7f60:	andne	r3, r3, #65024	; 0xfe00
    7f64:	orrne	r3, r3, #256	; 0x100
    7f68:	orreq	r3, r3, #2
    7f6c:	strhne	r3, [r5, #12]
    7f70:	strbeq	r3, [r5, #13]
    7f74:	pop	{r4, r5, r6, pc}

00007f78 <compare_block_pointers>:
    7f78:	ldr	r0, [r0]
    7f7c:	ldr	r3, [r1]
    7f80:	sub	r0, r0, r3
    7f84:	bx	lr

00007f88 <sas7bcat_augment_index>:
    7f88:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7f8c:	mov	r4, r2
    7f90:	mov	r5, r0
    7f94:	add	r8, r0, r1
    7f98:	ldr	r6, [pc, #272]	; 80b0 <sas7bcat_augment_index+0x128>
    7f9c:	add	r6, pc, r6
    7fa0:	ldr	r3, [r4, #32]
    7fa4:	add	r3, r5, r3
    7fa8:	cmp	r3, r8
    7fac:	bls	7fbc <sas7bcat_augment_index+0x34>
    7fb0:	mov	r0, #0
    7fb4:	add	sp, sp, #4
    7fb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7fbc:	mov	r2, #4
    7fc0:	mov	r1, r6
    7fc4:	mov	r0, r5
    7fc8:	bl	3fb8 <memcmp@plt>
    7fcc:	cmp	r0, #0
    7fd0:	beq	7ff0 <sas7bcat_augment_index+0x68>
    7fd4:	add	r5, r5, #8
    7fd8:	mov	r2, #4
    7fdc:	mov	r1, r6
    7fe0:	mov	r0, r5
    7fe4:	bl	3fb8 <memcmp@plt>
    7fe8:	cmp	r0, #0
    7fec:	bne	7fb0 <sas7bcat_augment_index+0x28>
    7ff0:	ldr	r3, [r4, #48]	; 0x30
    7ff4:	ldrb	r3, [r5, r3]
    7ff8:	cmp	r3, #79	; 0x4f
    7ffc:	bne	8050 <sas7bcat_augment_index+0xc8>
    8000:	ldr	r3, [r4, #16]
    8004:	add	r9, r5, #8
    8008:	ldr	r1, [r4, #24]
    800c:	cmp	r3, #0
    8010:	beq	806c <sas7bcat_augment_index+0xe4>
    8014:	mov	r0, r9
    8018:	bl	4414 <sas_read4@plt>
    801c:	mov	r7, r0
    8020:	add	r0, r5, #16
    8024:	ldr	r1, [r4, #24]
    8028:	bl	4414 <sas_read4@plt>
    802c:	ldr	ip, [r4, #80]	; 0x50
    8030:	mov	sl, #0
    8034:	ldr	r3, [r4, #84]	; 0x54
    8038:	add	r2, r3, #1
    803c:	lsl	r1, r3, #3
    8040:	str	r2, [r4, #84]	; 0x54
    8044:	adds	r2, sl, r0
    8048:	adc	r3, r7, #0
    804c:	strd	r2, [ip, r1]
    8050:	ldr	r1, [r4, #84]	; 0x54
    8054:	ldr	r3, [r4, #88]	; 0x58
    8058:	cmp	r1, r3
    805c:	beq	8088 <sas7bcat_augment_index+0x100>
    8060:	ldr	r3, [r4, #32]
    8064:	add	r5, r5, r3
    8068:	b	7fa0 <sas7bcat_augment_index+0x18>
    806c:	add	r0, r5, #4
    8070:	bl	43f0 <sas_read2@plt>
    8074:	mov	r7, r0
    8078:	mov	r0, r9
    807c:	ldr	r1, [r4, #24]
    8080:	bl	43f0 <sas_read2@plt>
    8084:	b	802c <sas7bcat_augment_index+0xa4>
    8088:	lsl	r3, r1, #1
    808c:	ldr	r0, [r4, #80]	; 0x50
    8090:	lsl	r1, r1, #4
    8094:	str	r3, [r4, #88]	; 0x58
    8098:	bl	4300 <readstat_realloc@plt>
    809c:	cmp	r0, #0
    80a0:	str	r0, [r4, #80]	; 0x50
    80a4:	bne	8060 <sas7bcat_augment_index+0xd8>
    80a8:	mov	r0, #3
    80ac:	b	7fb4 <sas7bcat_augment_index+0x2c>
    80b0:	.word	0x00018d27

000080b4 <readstat_parse_sas7bcat>:
    80b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    80b8:	mov	r5, r0
    80bc:	mov	r7, r1
    80c0:	mov	r1, #104	; 0x68
    80c4:	mov	r6, r2
    80c8:	vpush	{d8}
    80cc:	add	fp, sp, #40	; 0x28
    80d0:	sub	sp, sp, #452	; 0x1c4
    80d4:	ldr	r3, [r0, #32]
    80d8:	mov	r0, #1
    80dc:	str	r3, [fp, #-392]	; 0xfffffe78
    80e0:	bl	3d6c <calloc@plt>
    80e4:	mov	r4, r0
    80e8:	mov	r1, #152	; 0x98
    80ec:	mov	r0, #1
    80f0:	bl	3d6c <calloc@plt>
    80f4:	mov	r3, #200	; 0xc8
    80f8:	mov	r9, r0
    80fc:	mov	r0, #1600	; 0x640
    8100:	str	r3, [r4, #88]	; 0x58
    8104:	bl	412c <malloc@plt>
    8108:	ldr	r2, [fp, #-392]	; 0xfffffe78
    810c:	ldr	r3, [r5, #20]
    8110:	ldr	r1, [r2, #20]
    8114:	stmib	r4, {r3, r6}
    8118:	ldr	r3, [r5]
    811c:	str	r0, [r4, #80]	; 0x50
    8120:	mov	r0, r7
    8124:	str	r3, [r4]
    8128:	ldr	r3, [r5, #36]	; 0x24
    812c:	str	r3, [r4, #92]	; 0x5c
    8130:	ldr	r3, [r5, #40]	; 0x28
    8134:	str	r3, [r4, #96]	; 0x60
    8138:	ldr	r3, [fp, #-392]	; 0xfffffe78
    813c:	str	r3, [r4, #12]
    8140:	ldr	r3, [r3]
    8144:	blx	r3
    8148:	cmn	r0, #1
    814c:	beq	8d88 <readstat_parse_sas7bcat+0xcd4>
    8150:	mov	r3, r6
    8154:	mov	r1, r9
    8158:	ldr	r0, [fp, #-392]	; 0xfffffe78
    815c:	ldr	r2, [r5, #24]
    8160:	bl	43c0 <sas_read_header@plt>
    8164:	subs	r8, r0, #0
    8168:	bne	8d8c <readstat_parse_sas7bcat+0xcd8>
    816c:	ldr	r3, [r9, #4]
    8170:	str	r3, [r4, #16]
    8174:	ldr	r3, [r9, #24]
    8178:	str	r3, [r4, #20]
    817c:	bl	3ec8 <machine_is_little_endian@plt>
    8180:	ldr	r3, [r9]
    8184:	ldr	ip, [r4, #16]
    8188:	ldr	r1, [r4, #20]
    818c:	eor	r0, r0, r3
    8190:	ldrd	r2, [r9, #64]	; 0x40
    8194:	str	r0, [r4, #24]
    8198:	add	r0, r1, #428	; 0x1ac
    819c:	add	r6, r1, #212	; 0xd4
    81a0:	lsl	r0, r0, #1
    81a4:	strd	r2, [r4, #72]	; 0x48
    81a8:	asr	r7, r6, #31
    81ac:	ldrd	r2, [r9, #56]	; 0x38
    81b0:	strd	r6, [r4, #32]
    81b4:	strd	r2, [r4, #56]	; 0x38
    81b8:	ldrd	r2, [r9, #32]
    81bc:	strd	r2, [r4, #64]	; 0x40
    81c0:	mov	r2, r0
    81c4:	ldr	r3, [r4, #92]	; 0x5c
    81c8:	cmp	r3, #0
    81cc:	ldreq	r3, [r9, #144]	; 0x90
    81d0:	streq	r3, [r4, #92]	; 0x5c
    81d4:	asr	r3, r0, #31
    81d8:	sub	r0, fp, #404	; 0x194
    81dc:	cmp	ip, #0
    81e0:	strd	r2, [r0]
    81e4:	ldrd	r2, [r0]
    81e8:	strd	r2, [r4, #40]	; 0x28
    81ec:	add	r2, r1, #50	; 0x32
    81f0:	sub	r3, fp, #412	; 0x19c
    81f4:	asr	r1, r2, #31
    81f8:	mov	r0, r2
    81fc:	strd	r0, [r3]
    8200:	mov	r3, r1
    8204:	strd	r2, [r4, #48]	; 0x30
    8208:	beq	8240 <readstat_parse_sas7bcat+0x18c>
    820c:	ldr	r3, [fp, #-404]	; 0xfffffe6c
    8210:	adds	r0, r3, #144	; 0x90
    8214:	ldr	r3, [fp, #-400]	; 0xfffffe70
    8218:	adc	r1, r3, #0
    821c:	ldr	r3, [fp, #-412]	; 0xfffffe64
    8220:	strd	r0, [r4, #40]	; 0x28
    8224:	adds	r0, r6, #72	; 0x48
    8228:	adc	r1, r7, #0
    822c:	adds	r2, r3, #24
    8230:	ldr	r3, [fp, #-408]	; 0xfffffe68
    8234:	strd	r0, [r4, #32]
    8238:	adc	r3, r3, #0
    823c:	strd	r2, [r4, #48]	; 0x30
    8240:	ldr	r6, [r4, #92]	; 0x5c
    8244:	cmp	r6, #0
    8248:	beq	8284 <readstat_parse_sas7bcat+0x1d0>
    824c:	ldr	r5, [r4, #96]	; 0x60
    8250:	cmp	r5, #0
    8254:	beq	8284 <readstat_parse_sas7bcat+0x1d0>
    8258:	mov	r1, r5
    825c:	mov	r0, r6
    8260:	bl	3e14 <strcmp@plt>
    8264:	cmp	r0, #0
    8268:	beq	8284 <readstat_parse_sas7bcat+0x1d0>
    826c:	mov	r1, r6
    8270:	mov	r0, r5
    8274:	bl	4150 <iconv_open@plt>
    8278:	cmn	r0, #1
    827c:	beq	8d98 <readstat_parse_sas7bcat+0xce4>
    8280:	str	r0, [r4, #100]	; 0x64
    8284:	ldr	r3, [r4]
    8288:	cmp	r3, #0
    828c:	beq	8338 <readstat_parse_sas7bcat+0x284>
    8290:	sub	r5, fp, #372	; 0x174
    8294:	mov	r2, #56	; 0x38
    8298:	mov	r1, #0
    829c:	mov	r0, r5
    82a0:	bl	42b8 <memset@plt>
    82a4:	ldr	r2, [r9, #12]
    82a8:	sub	r1, fp, #364	; 0x16c
    82ac:	sub	r6, fp, #304	; 0x130
    82b0:	mov	r0, r6
    82b4:	ldr	r3, [r9, #72]	; 0x48
    82b8:	str	r3, [fp, #-356]	; 0xfffffe9c
    82bc:	ldr	r3, [r9, #76]	; 0x4c
    82c0:	str	r3, [fp, #-352]	; 0xfffffea0
    82c4:	asr	r3, r2, #31
    82c8:	strd	r2, [r1, #16]
    82cc:	mov	r2, r9
    82d0:	ldr	r3, [r2], #80	; 0x50
    82d4:	ldr	r1, [r4, #16]
    82d8:	cmp	r3, #0
    82dc:	movne	r3, #1
    82e0:	moveq	r3, #2
    82e4:	str	r3, [fp, #-336]	; 0xfffffeb0
    82e8:	ldr	r3, [r4, #92]	; 0x5c
    82ec:	str	r3, [fp, #-324]	; 0xfffffebc
    82f0:	mov	r3, #0
    82f4:	bfi	r3, r1, #0, #1
    82f8:	movw	r1, #257	; 0x101
    82fc:	strb	r3, [fp, #-320]	; 0xfffffec0
    8300:	ldr	r3, [r4, #100]	; 0x64
    8304:	str	r3, [sp]
    8308:	mov	r3, #64	; 0x40
    830c:	bl	424c <readstat_convert@plt>
    8310:	subs	r8, r0, #0
    8314:	bne	8d8c <readstat_parse_sas7bcat+0xcd8>
    8318:	mov	r0, r5
    831c:	str	r6, [fp, #-328]	; 0xfffffeb8
    8320:	ldr	r3, [r4]
    8324:	ldr	r1, [r4, #8]
    8328:	blx	r3
    832c:	cmp	r0, #0
    8330:	movne	r8, #4
    8334:	bne	8d8c <readstat_parse_sas7bcat+0xcd8>
    8338:	ldr	r0, [r4, #64]	; 0x40
    833c:	bl	4240 <readstat_malloc@plt>
    8340:	subs	r3, r0, #0
    8344:	str	r3, [fp, #-404]	; 0xfffffe6c
    8348:	beq	8da0 <readstat_parse_sas7bcat+0xcec>
    834c:	ldr	r3, [fp, #-392]	; 0xfffffe78
    8350:	mov	r1, #0
    8354:	ldr	r2, [fp, #-392]	; 0xfffffe78
    8358:	ldr	r0, [r4, #64]	; 0x40
    835c:	ldr	ip, [r4, #72]	; 0x48
    8360:	ldr	r3, [r3, #8]
    8364:	ldr	r2, [r2, #20]
    8368:	add	r0, ip, r0
    836c:	blx	r3
    8370:	cmn	r0, #1
    8374:	beq	8dac <readstat_parse_sas7bcat+0xcf8>
    8378:	ldr	r0, [fp, #-404]	; 0xfffffe6c
    837c:	ldr	r3, [fp, #-392]	; 0xfffffe78
    8380:	ldr	r2, [fp, #-392]	; 0xfffffe78
    8384:	ldr	r1, [r4, #64]	; 0x40
    8388:	ldr	r3, [r3, #12]
    838c:	ldr	r2, [r2, #20]
    8390:	blx	r3
    8394:	ldrd	r6, [r4, #64]	; 0x40
    8398:	asr	r1, r0, #31
    839c:	cmp	r0, r6
    83a0:	sbcs	r3, r1, r7
    83a4:	blt	8db8 <readstat_parse_sas7bcat+0xd04>
    83a8:	ldr	r3, [fp, #-404]	; 0xfffffe6c
    83ac:	mov	r2, r4
    83b0:	ldr	r0, [r4, #40]	; 0x28
    83b4:	sub	r1, r6, r0
    83b8:	add	r0, r3, r0
    83bc:	bl	7f88 <sas7bcat_augment_index>
    83c0:	subs	r8, r0, #0
    83c4:	bne	8db0 <readstat_parse_sas7bcat+0xcfc>
    83c8:	ldr	r3, [fp, #-404]	; 0xfffffe6c
    83cc:	mov	r6, #3
    83d0:	mov	r7, #0
    83d4:	add	sl, r3, #16
    83d8:	ldr	r3, [pc, #1424]	; 8970 <readstat_parse_sas7bcat+0x8bc>
    83dc:	add	r3, pc, r3
    83e0:	str	r3, [fp, #-420]	; 0xfffffe5c
    83e4:	ldrd	r2, [r4, #56]	; 0x38
    83e8:	cmp	r6, r2
    83ec:	sbcs	r3, r7, r3
    83f0:	blt	8498 <readstat_parse_sas7bcat+0x3e4>
    83f4:	ldr	r1, [r4, #84]	; 0x54
    83f8:	cmp	r1, #0
    83fc:	movne	ip, #1
    8400:	bne	8550 <readstat_parse_sas7bcat+0x49c>
    8404:	ldr	r5, [r4, #84]	; 0x54
    8408:	cmp	r5, #0
    840c:	movne	ip, #1
    8410:	movne	lr, ip
    8414:	bne	85c4 <readstat_parse_sas7bcat+0x510>
    8418:	ldr	r3, [fp, #-392]	; 0xfffffe78
    841c:	ldr	r2, [fp, #-392]	; 0xfffffe78
    8420:	ldr	r3, [r3, #4]
    8424:	ldr	r0, [r2, #20]
    8428:	blx	r3
    842c:	ldr	r3, [fp, #-404]	; 0xfffffe6c
    8430:	cmp	r3, #0
    8434:	beq	8440 <readstat_parse_sas7bcat+0x38c>
    8438:	mov	r0, r3
    843c:	bl	3ed4 <free@plt>
    8440:	cmp	r5, #0
    8444:	beq	8450 <readstat_parse_sas7bcat+0x39c>
    8448:	mov	r0, r5
    844c:	bl	3ed4 <free@plt>
    8450:	ldr	r0, [r4, #100]	; 0x64
    8454:	cmp	r0, #0
    8458:	beq	8460 <readstat_parse_sas7bcat+0x3ac>
    845c:	bl	3de4 <iconv_close@plt>
    8460:	ldr	r0, [r4, #80]	; 0x50
    8464:	cmp	r0, #0
    8468:	beq	8470 <readstat_parse_sas7bcat+0x3bc>
    846c:	bl	3ed4 <free@plt>
    8470:	mov	r0, r4
    8474:	bl	3ed4 <free@plt>
    8478:	cmp	r9, #0
    847c:	beq	8488 <readstat_parse_sas7bcat+0x3d4>
    8480:	mov	r0, r9
    8484:	bl	3ed4 <free@plt>
    8488:	mov	r0, r8
    848c:	sub	sp, fp, #40	; 0x28
    8490:	vpop	{d8}
    8494:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8498:	ldr	r3, [fp, #-392]	; 0xfffffe78
    849c:	mov	r1, #0
    84a0:	ldr	r2, [fp, #-392]	; 0xfffffe78
    84a4:	ldr	ip, [r4, #64]	; 0x40
    84a8:	ldr	r0, [r4, #72]	; 0x48
    84ac:	ldr	r3, [r3, #8]
    84b0:	ldr	r2, [r2, #20]
    84b4:	mla	r0, ip, r6, r0
    84b8:	blx	r3
    84bc:	cmn	r0, #1
    84c0:	beq	8dac <readstat_parse_sas7bcat+0xcf8>
    84c4:	ldr	r0, [fp, #-404]	; 0xfffffe6c
    84c8:	ldr	r3, [fp, #-392]	; 0xfffffe78
    84cc:	ldr	r2, [fp, #-392]	; 0xfffffe78
    84d0:	ldr	r1, [r4, #64]	; 0x40
    84d4:	ldr	r3, [r3, #12]
    84d8:	ldr	r2, [r2, #20]
    84dc:	blx	r3
    84e0:	ldrd	r2, [r4, #64]	; 0x40
    84e4:	sub	r1, fp, #412	; 0x19c
    84e8:	strd	r2, [r1]
    84ec:	sub	r3, fp, #412	; 0x19c
    84f0:	asr	r1, r0, #31
    84f4:	ldrd	r2, [r3]
    84f8:	cmp	r0, r2
    84fc:	sbcs	r3, r1, r3
    8500:	blt	8db8 <readstat_parse_sas7bcat+0xd04>
    8504:	mov	r2, #4
    8508:	mov	r0, sl
    850c:	ldr	r1, [fp, #-420]	; 0xfffffe5c
    8510:	bl	3fb8 <memcmp@plt>
    8514:	subs	r5, r0, #0
    8518:	beq	8528 <readstat_parse_sas7bcat+0x474>
    851c:	adds	r6, r6, #1
    8520:	adc	r7, r7, #0
    8524:	b	83e4 <readstat_parse_sas7bcat+0x330>
    8528:	ldr	r3, [fp, #-412]	; 0xfffffe64
    852c:	mov	r2, r4
    8530:	mov	r0, sl
    8534:	sub	r1, r3, #16
    8538:	bl	7f88 <sas7bcat_augment_index>
    853c:	cmp	r0, #0
    8540:	beq	851c <readstat_parse_sas7bcat+0x468>
    8544:	mov	r8, r0
    8548:	b	8418 <readstat_parse_sas7bcat+0x364>
    854c:	add	ip, ip, #1
    8550:	cmp	r1, ip
    8554:	ble	8404 <readstat_parse_sas7bcat+0x350>
    8558:	ldr	r0, [r4, #80]	; 0x50
    855c:	lsl	r2, ip, #3
    8560:	add	r3, r0, r2
    8564:	ldrd	r6, [r0, r2]
    8568:	ldrd	r2, [r3, #-8]
    856c:	cmp	r7, r3
    8570:	cmpeq	r6, r2
    8574:	bcs	854c <readstat_parse_sas7bcat+0x498>
    8578:	ldr	r3, [pc, #1012]	; 8974 <readstat_parse_sas7bcat+0x8c0>
    857c:	mov	r2, #8
    8580:	add	r3, pc, r3
    8584:	bl	445c <qsort@plt>
    8588:	b	8404 <readstat_parse_sas7bcat+0x350>
    858c:	ldr	r6, [r4, #80]	; 0x50
    8590:	lsl	r3, lr, #3
    8594:	mov	r1, r6
    8598:	add	r1, r1, r3
    859c:	ldrd	r2, [r1]
    85a0:	ldrd	r0, [r1, #-8]
    85a4:	cmp	r3, r1
    85a8:	cmpeq	r2, r0
    85ac:	beq	85c0 <readstat_parse_sas7bcat+0x50c>
    85b0:	cmp	lr, ip
    85b4:	lslne	r1, ip, #3
    85b8:	add	ip, ip, #1
    85bc:	strdne	r2, [r6, r1]
    85c0:	add	lr, lr, #1
    85c4:	cmp	r5, lr
    85c8:	bgt	858c <readstat_parse_sas7bcat+0x4d8>
    85cc:	mov	r3, #0
    85d0:	mov	r2, #0
    85d4:	vldr	d8, [pc, #908]	; 8968 <readstat_parse_sas7bcat+0x8b4>
    85d8:	sub	r1, fp, #420	; 0x1a4
    85dc:	mov	r5, #0
    85e0:	str	ip, [r4, #84]	; 0x54
    85e4:	strd	r2, [r1]
    85e8:	ldr	r3, [fp, #-420]	; 0xfffffe5c
    85ec:	str	r3, [fp, #-460]	; 0xfffffe34
    85f0:	ldr	r3, [fp, #-416]	; 0xfffffe60
    85f4:	str	r3, [fp, #-464]	; 0xfffffe30
    85f8:	sub	r1, fp, #420	; 0x1a4
    85fc:	ldr	r2, [r4, #84]	; 0x54
    8600:	ldrd	r0, [r1]
    8604:	asr	r3, r2, #31
    8608:	cmp	r0, r2
    860c:	sbcs	r3, r1, r3
    8610:	bge	8418 <readstat_parse_sas7bcat+0x364>
    8614:	ldr	r3, [fp, #-420]	; 0xfffffe5c
    8618:	ldr	r6, [r4, #12]
    861c:	ldr	r2, [r4, #80]	; 0x50
    8620:	lsl	r3, r3, #3
    8624:	add	r1, r2, r3
    8628:	ldrh	r3, [r2, r3]
    862c:	mov	r2, #0
    8630:	ldr	r1, [r1, #4]
    8634:	str	r3, [fp, #-436]	; 0xfffffe4c
    8638:	ldr	r3, [r4, #16]
    863c:	mov	r7, r1
    8640:	str	r1, [fp, #-396]	; 0xfffffe74
    8644:	sub	r1, fp, #428	; 0x1ac
    8648:	ldr	sl, [fp, #-436]	; 0xfffffe4c
    864c:	cmp	r3, #0
    8650:	moveq	r3, #16
    8654:	movne	r3, #32
    8658:	str	r3, [fp, #-444]	; 0xfffffe44
    865c:	mov	r3, #0
    8660:	strd	r2, [r1]
    8664:	mov	r3, #0
    8668:	str	r3, [fp, #-412]	; 0xfffffe64
    866c:	sub	r3, fp, #304	; 0x130
    8670:	str	r3, [fp, #-440]	; 0xfffffe48
    8674:	sub	r3, fp, #300	; 0x12c
    8678:	str	r3, [fp, #-456]	; 0xfffffe38
    867c:	cmp	r7, #0
    8680:	cmpgt	sl, #0
    8684:	ble	86b0 <readstat_parse_sas7bcat+0x5fc>
    8688:	ldrd	r2, [r4, #56]	; 0x38
    868c:	asr	r1, r7, #31
    8690:	cmp	r2, r7
    8694:	sbcs	r1, r3, r1
    8698:	blt	86b0 <readstat_parse_sas7bcat+0x5fc>
    869c:	sub	r1, fp, #428	; 0x1ac
    86a0:	ldrd	r0, [r1]
    86a4:	cmp	r0, r2
    86a8:	sbcs	r3, r1, r3
    86ac:	blt	8774 <readstat_parse_sas7bcat+0x6c0>
    86b0:	ldr	r3, [fp, #-412]	; 0xfffffe64
    86b4:	cmp	r3, #0
    86b8:	beq	8758 <readstat_parse_sas7bcat+0x6a4>
    86bc:	mov	r0, r5
    86c0:	ldr	r1, [fp, #-412]	; 0xfffffe64
    86c4:	bl	4300 <readstat_realloc@plt>
    86c8:	subs	r5, r0, #0
    86cc:	beq	8da4 <readstat_parse_sas7bcat+0xcf0>
    86d0:	mov	r2, #0
    86d4:	sub	r1, fp, #428	; 0x1ac
    86d8:	ldr	r6, [r4, #12]
    86dc:	sub	sl, fp, #304	; 0x130
    86e0:	ldr	r3, [r4, #16]
    86e4:	cmp	r3, #0
    86e8:	moveq	r3, #16
    86ec:	movne	r3, #32
    86f0:	str	r3, [fp, #-444]	; 0xfffffe44
    86f4:	mov	r3, #0
    86f8:	strd	r2, [r1]
    86fc:	mov	r3, #0
    8700:	str	r3, [fp, #-440]	; 0xfffffe48
    8704:	sub	r3, fp, #300	; 0x12c
    8708:	str	r3, [fp, #-456]	; 0xfffffe38
    870c:	ldr	r2, [fp, #-436]	; 0xfffffe4c
    8710:	ldr	r3, [fp, #-396]	; 0xfffffe74
    8714:	cmp	r3, #0
    8718:	cmpgt	r2, #0
    871c:	ble	874c <readstat_parse_sas7bcat+0x698>
    8720:	ldr	r0, [fp, #-396]	; 0xfffffe74
    8724:	ldrd	r2, [r4, #56]	; 0x38
    8728:	asr	r1, r0, #31
    872c:	cmp	r2, r0
    8730:	sbcs	r1, r3, r1
    8734:	blt	874c <readstat_parse_sas7bcat+0x698>
    8738:	sub	r1, fp, #428	; 0x1ac
    873c:	ldrd	r0, [r1]
    8740:	cmp	r0, r2
    8744:	sbcs	r3, r1, r3
    8748:	blt	8848 <readstat_parse_sas7bcat+0x794>
    874c:	ldr	r3, [fp, #-412]	; 0xfffffe64
    8750:	cmp	r3, #105	; 0x69
    8754:	bgt	8978 <readstat_parse_sas7bcat+0x8c4>
    8758:	ldr	r3, [fp, #-420]	; 0xfffffe5c
    875c:	adds	r3, r3, #1
    8760:	str	r3, [fp, #-420]	; 0xfffffe5c
    8764:	ldr	r3, [fp, #-416]	; 0xfffffe60
    8768:	adc	r3, r3, #0
    876c:	str	r3, [fp, #-416]	; 0xfffffe60
    8770:	b	85f8 <readstat_parse_sas7bcat+0x544>
    8774:	ldr	r0, [r4, #64]	; 0x40
    8778:	sub	r7, r7, #1
    877c:	mov	r1, #0
    8780:	ldr	r3, [r4, #72]	; 0x48
    8784:	ldr	r2, [r6, #20]
    8788:	add	sl, sl, r3
    878c:	ldr	r3, [r6, #8]
    8790:	mla	r0, r0, r7, sl
    8794:	blx	r3
    8798:	cmn	r0, #1
    879c:	beq	8ddc <readstat_parse_sas7bcat+0xd28>
    87a0:	ldr	r1, [fp, #-444]	; 0xfffffe44
    87a4:	ldr	r0, [fp, #-440]	; 0xfffffe48
    87a8:	ldr	r3, [r6, #12]
    87ac:	ldr	r2, [r6, #20]
    87b0:	blx	r3
    87b4:	ldr	r3, [fp, #-444]	; 0xfffffe44
    87b8:	cmp	r3, r0
    87bc:	bgt	889c <readstat_parse_sas7bcat+0x7e8>
    87c0:	ldr	r3, [r4, #16]
    87c4:	ldr	r0, [fp, #-440]	; 0xfffffe48
    87c8:	ldr	r1, [r4, #24]
    87cc:	cmp	r3, #0
    87d0:	beq	8824 <readstat_parse_sas7bcat+0x770>
    87d4:	bl	4414 <sas_read4@plt>
    87d8:	mov	r7, r0
    87dc:	sub	r0, fp, #296	; 0x128
    87e0:	ldr	r1, [r4, #24]
    87e4:	bl	43f0 <sas_read2@plt>
    87e8:	ldr	r1, [r4, #24]
    87ec:	mov	sl, r0
    87f0:	sub	r0, fp, #292	; 0x124
    87f4:	sub	r0, r0, #2
    87f8:	bl	43f0 <sas_read2@plt>
    87fc:	ldr	r3, [fp, #-412]	; 0xfffffe64
    8800:	add	r3, r3, r0
    8804:	str	r3, [fp, #-412]	; 0xfffffe64
    8808:	ldr	r3, [fp, #-428]	; 0xfffffe54
    880c:	adds	r3, r3, #1
    8810:	str	r3, [fp, #-428]	; 0xfffffe54
    8814:	ldr	r3, [fp, #-424]	; 0xfffffe58
    8818:	adc	r3, r3, #0
    881c:	str	r3, [fp, #-424]	; 0xfffffe58
    8820:	b	867c <readstat_parse_sas7bcat+0x5c8>
    8824:	bl	4414 <sas_read4@plt>
    8828:	mov	r7, r0
    882c:	ldr	r0, [fp, #-456]	; 0xfffffe38
    8830:	ldr	r1, [r4, #24]
    8834:	bl	43f0 <sas_read2@plt>
    8838:	mov	sl, r0
    883c:	sub	r0, fp, #296	; 0x128
    8840:	ldr	r1, [r4, #24]
    8844:	b	87f4 <readstat_parse_sas7bcat+0x740>
    8848:	ldr	r3, [fp, #-396]	; 0xfffffe74
    884c:	mov	r1, #0
    8850:	ldr	lr, [r4, #64]	; 0x40
    8854:	ldr	ip, [r4, #72]	; 0x48
    8858:	sub	r0, r3, #1
    885c:	ldr	r3, [fp, #-436]	; 0xfffffe4c
    8860:	ldr	r2, [r6, #20]
    8864:	add	ip, r3, ip
    8868:	ldr	r3, [r6, #8]
    886c:	mla	r0, lr, r0, ip
    8870:	blx	r3
    8874:	cmn	r0, #1
    8878:	beq	8ddc <readstat_parse_sas7bcat+0xd28>
    887c:	mov	r0, sl
    8880:	ldr	r1, [fp, #-444]	; 0xfffffe44
    8884:	ldr	r3, [r6, #12]
    8888:	ldr	r2, [r6, #20]
    888c:	blx	r3
    8890:	ldr	r3, [fp, #-444]	; 0xfffffe44
    8894:	cmp	r3, r0
    8898:	ble	88a4 <readstat_parse_sas7bcat+0x7f0>
    889c:	mov	r8, #2
    88a0:	b	8418 <readstat_parse_sas7bcat+0x364>
    88a4:	ldr	r3, [r4, #16]
    88a8:	mov	r0, sl
    88ac:	ldr	r1, [r4, #24]
    88b0:	cmp	r3, #0
    88b4:	beq	8940 <readstat_parse_sas7bcat+0x88c>
    88b8:	bl	4414 <sas_read4@plt>
    88bc:	str	r0, [fp, #-396]	; 0xfffffe74
    88c0:	sub	r0, fp, #296	; 0x128
    88c4:	ldr	r1, [r4, #24]
    88c8:	bl	43f0 <sas_read2@plt>
    88cc:	ldr	r1, [r4, #24]
    88d0:	str	r0, [fp, #-436]	; 0xfffffe4c
    88d4:	sub	r0, fp, #292	; 0x124
    88d8:	sub	r0, r0, #2
    88dc:	bl	43f0 <sas_read2@plt>
    88e0:	ldr	r3, [fp, #-440]	; 0xfffffe48
    88e4:	mov	r7, r0
    88e8:	ldr	r2, [fp, #-412]	; 0xfffffe64
    88ec:	add	r3, r0, r3
    88f0:	cmp	r2, r3
    88f4:	str	r3, [fp, #-468]	; 0xfffffe2c
    88f8:	bcc	8dd4 <readstat_parse_sas7bcat+0xd20>
    88fc:	ldr	r3, [fp, #-440]	; 0xfffffe48
    8900:	mov	r1, r0
    8904:	ldr	r2, [r6, #20]
    8908:	add	r0, r5, r3
    890c:	ldr	r3, [r6, #12]
    8910:	blx	r3
    8914:	ldr	r3, [fp, #-428]	; 0xfffffe54
    8918:	adds	r3, r3, #1
    891c:	str	r3, [fp, #-428]	; 0xfffffe54
    8920:	ldr	r3, [fp, #-424]	; 0xfffffe58
    8924:	adc	r3, r3, #0
    8928:	cmp	r7, r0
    892c:	str	r3, [fp, #-424]	; 0xfffffe58
    8930:	ldr	r3, [fp, #-468]	; 0xfffffe2c
    8934:	str	r3, [fp, #-440]	; 0xfffffe48
    8938:	ble	870c <readstat_parse_sas7bcat+0x658>
    893c:	b	889c <readstat_parse_sas7bcat+0x7e8>
    8940:	bl	4414 <sas_read4@plt>
    8944:	str	r0, [fp, #-396]	; 0xfffffe74
    8948:	ldr	r0, [fp, #-456]	; 0xfffffe38
    894c:	ldr	r1, [r4, #24]
    8950:	bl	43f0 <sas_read2@plt>
    8954:	str	r0, [fp, #-436]	; 0xfffffe4c
    8958:	sub	r0, fp, #296	; 0x128
    895c:	ldr	r1, [r4, #24]
    8960:	b	88d8 <readstat_parse_sas7bcat+0x824>
    8964:	nop	{0}
    8968:	.word	0x00000000
    896c:	.word	0x7ff80000
    8970:	.word	0x000188e7
    8974:	.word	0xfffff9f0
    8978:	ldrb	r6, [r5, #2]
    897c:	ldr	r3, [r4, #16]
    8980:	ldr	r1, [r4, #24]
    8984:	asr	r6, r6, #1
    8988:	and	r6, r6, #4
    898c:	cmp	r3, #0
    8990:	add	r7, r6, #42	; 0x2a
    8994:	add	r7, r5, r7
    8998:	beq	8c54 <readstat_parse_sas7bcat+0xba0>
    899c:	mov	r0, r7
    89a0:	bl	4414 <sas_read4@plt>
    89a4:	str	r0, [fp, #-436]	; 0xfffffe4c
    89a8:	add	r0, r6, #50	; 0x32
    89ac:	add	r0, r5, r0
    89b0:	ldr	r1, [r4, #24]
    89b4:	bl	4414 <sas_read4@plt>
    89b8:	mov	r7, r0
    89bc:	mov	r3, #138	; 0x8a
    89c0:	str	r3, [fp, #-428]	; 0xfffffe54
    89c4:	mov	r1, #129	; 0x81
    89c8:	sub	r0, fp, #304	; 0x130
    89cc:	ldr	r3, [r4, #100]	; 0x64
    89d0:	str	r3, [sp]
    89d4:	mov	r3, #8
    89d8:	add	r2, r5, r3
    89dc:	bl	424c <readstat_convert@plt>
    89e0:	subs	r3, r0, #0
    89e4:	str	r3, [fp, #-396]	; 0xfffffe74
    89e8:	bne	8dc0 <readstat_parse_sas7bcat+0xd0c>
    89ec:	ldrsb	r3, [r5, #2]
    89f0:	cmp	r6, #0
    89f4:	addne	r6, r6, #16
    89f8:	cmp	r3, #0
    89fc:	bge	8a4c <readstat_parse_sas7bcat+0x998>
    8a00:	ldr	r3, [r4, #16]
    8a04:	cmp	r3, #0
    8a08:	bne	8a4c <readstat_parse_sas7bcat+0x998>
    8a0c:	ldr	r3, [fp, #-428]	; 0xfffffe54
    8a10:	ldr	r1, [fp, #-412]	; 0xfffffe64
    8a14:	add	r2, r3, r6
    8a18:	add	r3, r2, #32
    8a1c:	cmp	r1, r3
    8a20:	bcc	8758 <readstat_parse_sas7bcat+0x6a4>
    8a24:	ldr	r3, [r4, #100]	; 0x64
    8a28:	add	r2, r5, r2
    8a2c:	mov	r1, #129	; 0x81
    8a30:	sub	r0, fp, #304	; 0x130
    8a34:	str	r3, [sp]
    8a38:	mov	r3, #32
    8a3c:	bl	424c <readstat_convert@plt>
    8a40:	cmp	r0, #0
    8a44:	bne	8544 <readstat_parse_sas7bcat+0x490>
    8a48:	add	r6, r6, #32
    8a4c:	ldr	r3, [fp, #-428]	; 0xfffffe54
    8a50:	ldr	r2, [fp, #-412]	; 0xfffffe64
    8a54:	add	r3, r3, r6
    8a58:	cmp	r2, r3
    8a5c:	bcc	8758 <readstat_parse_sas7bcat+0x6a4>
    8a60:	add	sl, r5, r3
    8a64:	mov	r3, r2
    8a68:	ldr	r2, [fp, #-428]	; 0xfffffe54
    8a6c:	mov	r1, #4
    8a70:	mov	r0, r7
    8a74:	sub	r3, r3, r2
    8a78:	sub	r3, r3, r6
    8a7c:	str	r3, [fp, #-412]	; 0xfffffe64
    8a80:	bl	3fdc <readstat_calloc@plt>
    8a84:	str	r0, [fp, #-428]	; 0xfffffe54
    8a88:	bl	3ec8 <machine_is_little_endian@plt>
    8a8c:	ldrb	r3, [fp, #-304]	; 0xfffffed0
    8a90:	str	r0, [fp, #-468]	; 0xfffffe2c
    8a94:	str	r3, [fp, #-444]	; 0xfffffe44
    8a98:	ldr	r3, [fp, #-428]	; 0xfffffe54
    8a9c:	cmp	r3, #0
    8aa0:	beq	8da4 <readstat_parse_sas7bcat+0xcf0>
    8aa4:	mov	r6, sl
    8aa8:	mov	r2, #0
    8aac:	ldr	r3, [fp, #-436]	; 0xfffffe4c
    8ab0:	cmp	r3, r2
    8ab4:	bgt	8c7c <readstat_parse_sas7bcat+0xbc8>
    8ab8:	ldr	r3, [fp, #-444]	; 0xfffffe44
    8abc:	cmp	r3, #36	; 0x24
    8ac0:	moveq	r3, #0
    8ac4:	movne	r3, #5
    8ac8:	str	r3, [fp, #-472]	; 0xfffffe28
    8acc:	mov	r3, #0
    8ad0:	str	r3, [fp, #-440]	; 0xfffffe48
    8ad4:	ldr	r3, [fp, #-436]	; 0xfffffe4c
    8ad8:	cmp	r7, r3
    8adc:	movlt	r3, r7
    8ae0:	str	r3, [fp, #-476]	; 0xfffffe24
    8ae4:	ldr	r2, [fp, #-476]	; 0xfffffe24
    8ae8:	ldr	r3, [fp, #-440]	; 0xfffffe48
    8aec:	cmp	r3, r2
    8af0:	bge	8d64 <readstat_parse_sas7bcat+0xcb0>
    8af4:	ldr	r2, [fp, #-440]	; 0xfffffe48
    8af8:	ldr	r3, [fp, #-428]	; 0xfffffe54
    8afc:	ldr	r3, [r3, r2, lsl #2]
    8b00:	ldr	r2, [fp, #-412]	; 0xfffffe64
    8b04:	add	r0, sl, r3
    8b08:	add	r3, r3, #30
    8b0c:	cmp	r2, r3
    8b10:	bcc	8d80 <readstat_parse_sas7bcat+0xccc>
    8b14:	add	r3, r6, #10
    8b18:	str	r3, [fp, #-436]	; 0xfffffe4c
    8b1c:	sub	r3, r3, sl
    8b20:	cmp	r2, r3
    8b24:	bcc	8d80 <readstat_parse_sas7bcat+0xccc>
    8b28:	ldr	r3, [fp, #-460]	; 0xfffffe34
    8b2c:	sub	r7, fp, #388	; 0x184
    8b30:	str	r3, [r7]
    8b34:	ldr	r3, [fp, #-464]	; 0xfffffe30
    8b38:	str	r3, [r7, #4]
    8b3c:	ldr	r3, [fp, #-464]	; 0xfffffe30
    8b40:	str	r3, [r7, #12]
    8b44:	ldr	r3, [fp, #-472]	; 0xfffffe28
    8b48:	str	r3, [fp, #-380]	; 0xfffffe84
    8b4c:	ldr	r3, [fp, #-444]	; 0xfffffe44
    8b50:	cmp	r3, #36	; 0x24
    8b54:	bne	8cf0 <readstat_parse_sas7bcat+0xc3c>
    8b58:	ldrb	r2, [r0, #2]
    8b5c:	sub	r7, fp, #372	; 0x174
    8b60:	mov	r1, #65	; 0x41
    8b64:	ldr	r3, [r4, #100]	; 0x64
    8b68:	sub	r2, r2, #10
    8b6c:	add	r2, r0, r2
    8b70:	mov	r0, r7
    8b74:	str	r3, [sp]
    8b78:	mov	r3, #16
    8b7c:	bl	424c <readstat_convert@plt>
    8b80:	cmp	r0, #0
    8b84:	bne	8d60 <readstat_parse_sas7bcat+0xcac>
    8b88:	str	r7, [fp, #-388]	; 0xfffffe7c
    8b8c:	add	r0, r6, #8
    8b90:	ldr	r1, [r4, #24]
    8b94:	bl	43f0 <sas_read2@plt>
    8b98:	ldr	r2, [fp, #-412]	; 0xfffffe64
    8b9c:	add	r3, r0, #10
    8ba0:	mov	r7, r0
    8ba4:	add	r3, r6, r3
    8ba8:	sub	r3, r3, sl
    8bac:	cmp	r2, r3
    8bb0:	bcc	8d80 <readstat_parse_sas7bcat+0xccc>
    8bb4:	ldr	r3, [r4, #4]
    8bb8:	cmp	r3, #0
    8bbc:	beq	8c3c <readstat_parse_sas7bcat+0xb88>
    8bc0:	lsl	r1, r0, #2
    8bc4:	str	sp, [fp, #-456]	; 0xfffffe38
    8bc8:	add	r3, r1, #8
    8bcc:	add	r1, r1, #1
    8bd0:	bic	r3, r3, #7
    8bd4:	sub	sp, sp, r3
    8bd8:	ldr	r3, [r4, #100]	; 0x64
    8bdc:	mov	r2, sp
    8be0:	str	r3, [r2], #16
    8be4:	mov	r3, r0
    8be8:	str	r2, [fp, #-436]	; 0xfffffe4c
    8bec:	add	r2, r6, #10
    8bf0:	ldr	r0, [fp, #-436]	; 0xfffffe4c
    8bf4:	bl	424c <readstat_convert@plt>
    8bf8:	cmp	r0, #0
    8bfc:	bne	8d5c <readstat_parse_sas7bcat+0xca8>
    8c00:	ldr	r3, [r4, #8]
    8c04:	str	r3, [sp, #12]
    8c08:	ldr	r3, [fp, #-436]	; 0xfffffe4c
    8c0c:	str	r3, [sp, #8]
    8c10:	sub	r3, fp, #380	; 0x17c
    8c14:	ldm	r3, {r0, r1}
    8c18:	sub	r3, fp, #388	; 0x184
    8c1c:	stm	sp, {r0, r1}
    8c20:	sub	r0, fp, #304	; 0x130
    8c24:	ldm	r3, {r2, r3}
    8c28:	ldr	r1, [r4, #4]
    8c2c:	blx	r1
    8c30:	cmp	r0, #0
    8c34:	bne	8d58 <readstat_parse_sas7bcat+0xca4>
    8c38:	ldr	sp, [fp, #-456]	; 0xfffffe38
    8c3c:	add	r7, r7, #11
    8c40:	ldr	r3, [fp, #-440]	; 0xfffffe48
    8c44:	add	r6, r6, r7
    8c48:	add	r3, r3, #1
    8c4c:	str	r3, [fp, #-440]	; 0xfffffe48
    8c50:	b	8ae4 <readstat_parse_sas7bcat+0xa30>
    8c54:	add	r0, r6, #38	; 0x26
    8c58:	add	r0, r5, r0
    8c5c:	bl	4414 <sas_read4@plt>
    8c60:	str	r0, [fp, #-436]	; 0xfffffe4c
    8c64:	mov	r0, r7
    8c68:	ldr	r1, [r4, #24]
    8c6c:	bl	4414 <sas_read4@plt>
    8c70:	mov	r7, r0
    8c74:	mov	r3, #106	; 0x6a
    8c78:	b	89c0 <readstat_parse_sas7bcat+0x90c>
    8c7c:	ldr	r1, [fp, #-412]	; 0xfffffe64
    8c80:	add	r3, r6, #3
    8c84:	sub	r3, r3, sl
    8c88:	cmp	r1, r3
    8c8c:	bcc	8dc8 <readstat_parse_sas7bcat+0xd14>
    8c90:	cmp	r7, r2
    8c94:	ble	8cdc <readstat_parse_sas7bcat+0xc28>
    8c98:	ldr	r0, [r4, #20]
    8c9c:	str	r2, [fp, #-440]	; 0xfffffe48
    8ca0:	add	r3, r0, #14
    8ca4:	add	r3, r6, r3
    8ca8:	sub	r3, r3, sl
    8cac:	cmp	r1, r3
    8cb0:	bcc	8dc8 <readstat_parse_sas7bcat+0xd14>
    8cb4:	add	r0, r0, #10
    8cb8:	ldr	r1, [r4, #24]
    8cbc:	add	r0, r6, r0
    8cc0:	bl	4414 <sas_read4@plt>
    8cc4:	cmp	r7, r0
    8cc8:	bls	8dc8 <readstat_parse_sas7bcat+0xd14>
    8ccc:	ldr	r2, [fp, #-428]	; 0xfffffe54
    8cd0:	sub	r3, r6, sl
    8cd4:	str	r3, [r2, r0, lsl #2]
    8cd8:	ldr	r2, [fp, #-440]	; 0xfffffe48
    8cdc:	add	r2, r2, #1
    8ce0:	ldrb	r3, [r6, #2]
    8ce4:	add	r3, r3, #6
    8ce8:	add	r6, r6, r3
    8cec:	b	8aac <readstat_parse_sas7bcat+0x9f8>
    8cf0:	add	r0, r0, #22
    8cf4:	ldr	r1, [fp, #-468]	; 0xfffffe2c
    8cf8:	bl	43e4 <sas_read8@plt>
    8cfc:	sub	r3, fp, #436	; 0x1b4
    8d00:	mvn	r2, #0
    8d04:	strd	r0, [r3]
    8d08:	sub	r1, fp, #452	; 0x1c4
    8d0c:	ldr	r3, [fp, #-436]	; 0xfffffe4c
    8d10:	str	r3, [fp, #-452]	; 0xfffffe3c
    8d14:	ldr	r3, [fp, #-432]	; 0xfffffe50
    8d18:	orr	r3, r3, #65280	; 0xff00
    8d1c:	str	r3, [fp, #-448]	; 0xfffffe40
    8d20:	movw	r3, #65535	; 0xffff
    8d24:	ldrd	r0, [r1]
    8d28:	cmp	r1, r3
    8d2c:	cmpeq	r0, r2
    8d30:	vldrne	d7, [fp, #-436]	; 0xfffffe4c
    8d34:	vnegne.f64	d7, d7
    8d38:	bne	8d50 <readstat_parse_sas7bcat+0xc9c>
    8d3c:	ldr	r3, [fp, #-432]	; 0xfffffe50
    8d40:	mov	r0, r7
    8d44:	ubfx	r1, r3, #8, #8
    8d48:	bl	44c8 <sas_assign_tag@plt>
    8d4c:	vmov.f64	d7, d8
    8d50:	vstr	d7, [fp, #-388]	; 0xfffffe7c
    8d54:	b	8b8c <readstat_parse_sas7bcat+0xad8>
    8d58:	mov	r0, #4
    8d5c:	ldr	sp, [fp, #-456]	; 0xfffffe38
    8d60:	str	r0, [fp, #-396]	; 0xfffffe74
    8d64:	ldr	r0, [fp, #-428]	; 0xfffffe54
    8d68:	bl	3ed4 <free@plt>
    8d6c:	ldr	r3, [fp, #-396]	; 0xfffffe74
    8d70:	cmp	r3, #0
    8d74:	beq	8758 <readstat_parse_sas7bcat+0x6a4>
    8d78:	ldr	r8, [fp, #-396]	; 0xfffffe74
    8d7c:	b	8418 <readstat_parse_sas7bcat+0x364>
    8d80:	mov	r0, #5
    8d84:	b	8d60 <readstat_parse_sas7bcat+0xcac>
    8d88:	mov	r8, #1
    8d8c:	mov	r5, #0
    8d90:	str	r5, [fp, #-404]	; 0xfffffe6c
    8d94:	b	8418 <readstat_parse_sas7bcat+0x364>
    8d98:	mov	r8, #7
    8d9c:	b	8d8c <readstat_parse_sas7bcat+0xcd8>
    8da0:	ldr	r5, [fp, #-404]	; 0xfffffe6c
    8da4:	mov	r8, #3
    8da8:	b	8418 <readstat_parse_sas7bcat+0x364>
    8dac:	mov	r8, #15
    8db0:	mov	r5, #0
    8db4:	b	8418 <readstat_parse_sas7bcat+0x364>
    8db8:	mov	r8, #2
    8dbc:	b	8db0 <readstat_parse_sas7bcat+0xcfc>
    8dc0:	ldr	r0, [fp, #-396]	; 0xfffffe74
    8dc4:	b	8544 <readstat_parse_sas7bcat+0x490>
    8dc8:	mov	r3, #5
    8dcc:	str	r3, [fp, #-396]	; 0xfffffe74
    8dd0:	b	8d64 <readstat_parse_sas7bcat+0xcb0>
    8dd4:	mov	r8, #5
    8dd8:	b	8418 <readstat_parse_sas7bcat+0x364>
    8ddc:	mov	r8, #15
    8de0:	b	8418 <readstat_parse_sas7bcat+0x364>

00008de4 <sas7bcat_begin_data>:
    8de4:	ldr	r3, [pc, #1284]	; 92f0 <sas7bcat_begin_data+0x50c>
    8de8:	mov	r1, #0
    8dec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8df0:	sub	sp, sp, #364	; 0x16c
    8df4:	mov	r6, r0
    8df8:	add	r3, pc, r3
    8dfc:	str	r3, [sp, #176]	; 0xb0
    8e00:	bl	436c <sas_header_info_init@plt>
    8e04:	mov	r5, r0
    8e08:	ldr	r0, [r6, #40]	; 0x28
    8e0c:	lsl	r0, r0, #3
    8e10:	bl	412c <malloc@plt>
    8e14:	str	r0, [sp, #164]	; 0xa4
    8e18:	ldr	r0, [r5, #32]
    8e1c:	bl	412c <malloc@plt>
    8e20:	mov	sl, r0
    8e24:	mov	r3, #0
    8e28:	str	r3, [sp, #160]	; 0xa0
    8e2c:	add	r7, sp, #196	; 0xc4
    8e30:	ldr	r3, [r6, #40]	; 0x28
    8e34:	ldr	r2, [sp, #160]	; 0xa0
    8e38:	cmp	r3, r2
    8e3c:	bgt	8ffc <sas7bcat_begin_data+0x218>
    8e40:	mov	r3, #0
    8e44:	mov	r2, #4
    8e48:	mov	r1, #0
    8e4c:	add	r0, sp, #228	; 0xe4
    8e50:	strd	r2, [r5, #56]	; 0x38
    8e54:	mov	r2, #124	; 0x7c
    8e58:	bl	42b8 <memset@plt>
    8e5c:	ldr	r3, [r5, #4]
    8e60:	cmp	r3, #0
    8e64:	movne	r3, #51	; 0x33
    8e68:	moveq	r3, #34	; 0x22
    8e6c:	strb	r3, [sp, #228]	; 0xe4
    8e70:	mov	r3, #34	; 0x22
    8e74:	strb	r3, [sp, #231]	; 0xe7
    8e78:	bl	3ec8 <machine_is_little_endian@plt>
    8e7c:	mov	r3, #49	; 0x31
    8e80:	adds	r0, r0, #0
    8e84:	movne	r0, #1
    8e88:	add	r2, sp, #280	; 0x118
    8e8c:	mov	ip, r7
    8e90:	strb	r3, [sp, #235]	; 0xeb
    8e94:	mov	r3, #20
    8e98:	strb	r0, [sp, #233]	; 0xe9
    8e9c:	strb	r3, [sp, #266]	; 0x10a
    8ea0:	ldr	r3, [pc, #1100]	; 92f4 <sas7bcat_begin_data+0x510>
    8ea4:	add	r3, pc, r3
    8ea8:	ldr	r1, [r3, #4]
    8eac:	ldr	r0, [r3]
    8eb0:	stmia	r2!, {r0, r1}
    8eb4:	add	r2, sp, #352	; 0x160
    8eb8:	ldr	r0, [r3, #9]!
    8ebc:	ldr	r1, [r3, #4]
    8ec0:	ldr	r3, [pc, #1072]	; 92f8 <sas7bcat_begin_data+0x514>
    8ec4:	stmia	r2!, {r0, r1}
    8ec8:	ldr	r2, [sp, #176]	; 0xb0
    8ecc:	ldr	r3, [r2, r3]
    8ed0:	add	lr, r3, #32
    8ed4:	ldr	r0, [r3]
    8ed8:	mov	r2, ip
    8edc:	add	r3, r3, #8
    8ee0:	ldr	r1, [r3, #-4]
    8ee4:	cmp	r3, lr
    8ee8:	stmia	r2!, {r0, r1}
    8eec:	mov	ip, r2
    8ef0:	bne	8ed4 <sas7bcat_begin_data+0xf0>
    8ef4:	mov	r2, #156	; 0x9c
    8ef8:	add	r1, sp, #204	; 0xcc
    8efc:	mov	r0, sp
    8f00:	bl	3f34 <memcpy@plt>
    8f04:	mov	r1, r5
    8f08:	mov	r0, r6
    8f0c:	ldm	r7, {r2, r3}
    8f10:	bl	40d8 <sas_write_header@plt>
    8f14:	subs	r4, r0, #0
    8f18:	bne	8fc8 <sas7bcat_begin_data+0x1e4>
    8f1c:	mov	r0, r6
    8f20:	ldr	r1, [r5, #32]
    8f24:	bl	4030 <readstat_write_zeros@plt>
    8f28:	subs	r4, r0, #0
    8f2c:	bne	8fc8 <sas7bcat_begin_data+0x1e4>
    8f30:	mov	r1, r4
    8f34:	mov	r0, sl
    8f38:	ldr	r2, [r5, #32]
    8f3c:	bl	42b8 <memset@plt>
    8f40:	ldr	ip, [pc, #948]	; 92fc <sas7bcat_begin_data+0x518>
    8f44:	mov	r8, #79	; 0x4f
    8f48:	add	r0, sl, #856	; 0x358
    8f4c:	mov	r3, #16
    8f50:	mov	lr, #4
    8f54:	ldr	r1, [r6, #40]	; 0x28
    8f58:	ldr	r2, [r5, #32]
    8f5c:	cmp	r1, r4
    8f60:	bgt	9210 <sas7bcat_begin_data+0x42c>
    8f64:	mov	r1, sl
    8f68:	mov	r0, r6
    8f6c:	bl	4474 <readstat_write_bytes@plt>
    8f70:	subs	r4, r0, #0
    8f74:	bne	8fc8 <sas7bcat_begin_data+0x1e4>
    8f78:	mov	r0, r6
    8f7c:	ldr	r1, [r5, #32]
    8f80:	bl	4030 <readstat_write_zeros@plt>
    8f84:	subs	r4, r0, #0
    8f88:	bne	8fc8 <sas7bcat_begin_data+0x1e4>
    8f8c:	mov	r1, r4
    8f90:	mov	r0, sl
    8f94:	ldr	r2, [r5, #32]
    8f98:	bl	42b8 <memset@plt>
    8f9c:	add	r9, sp, #212	; 0xd4
    8fa0:	mov	lr, #16
    8fa4:	ldr	r3, [r6, #40]	; 0x28
    8fa8:	ldrd	r0, [r5, #32]
    8fac:	cmp	r3, r4
    8fb0:	bgt	9254 <sas7bcat_begin_data+0x470>
    8fb4:	mov	r2, r0
    8fb8:	mov	r1, sl
    8fbc:	mov	r0, r6
    8fc0:	bl	4474 <readstat_write_bytes@plt>
    8fc4:	mov	r4, r0
    8fc8:	mov	r7, #0
    8fcc:	ldr	r3, [r6, #40]	; 0x28
    8fd0:	cmp	r3, r7
    8fd4:	bgt	92dc <sas7bcat_begin_data+0x4f8>
    8fd8:	ldr	r0, [sp, #164]	; 0xa4
    8fdc:	bl	3ed4 <free@plt>
    8fe0:	mov	r0, r5
    8fe4:	bl	3ed4 <free@plt>
    8fe8:	mov	r0, sl
    8fec:	bl	3ed4 <free@plt>
    8ff0:	mov	r0, r4
    8ff4:	add	sp, sp, #364	; 0x16c
    8ff8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8ffc:	ldr	r3, [r6, #36]	; 0x24
    9000:	ldr	r2, [sp, #160]	; 0xa0
    9004:	ldr	r8, [r3, r2, lsl #2]
    9008:	add	r4, r8, #4
    900c:	mov	r0, r4
    9010:	bl	421c <strlen@plt>
    9014:	cmp	r0, #8
    9018:	mov	fp, r0
    901c:	movls	r9, #106	; 0x6a
    9020:	bls	9030 <sas7bcat_begin_data+0x24c>
    9024:	cmp	r0, #32
    9028:	mov	r9, #138	; 0x8a
    902c:	movcs	fp, #32
    9030:	mov	r1, r4
    9034:	mov	r2, fp
    9038:	mov	r0, r7
    903c:	mov	r4, #0
    9040:	bl	3f34 <memcpy@plt>
    9044:	ldr	r3, [r8, #264]	; 0x108
    9048:	cmp	r4, r3
    904c:	str	r3, [sp, #168]	; 0xa8
    9050:	blt	90fc <sas7bcat_begin_data+0x318>
    9054:	add	r1, r9, #8
    9058:	mov	r0, #1
    905c:	bl	3d6c <calloc@plt>
    9060:	ldr	r3, [sp, #168]	; 0xa8
    9064:	cmp	fp, #8
    9068:	mov	r4, r0
    906c:	str	r9, [r0]
    9070:	str	r3, [r0, #42]	; 0x2a
    9074:	str	r3, [r0, #46]	; 0x2e
    9078:	add	r3, r0, #12
    907c:	bls	911c <sas7bcat_begin_data+0x338>
    9080:	ldm	r7, {r0, r1}
    9084:	mvn	r2, #127	; 0x7f
    9088:	strb	r2, [r4, #6]
    908c:	mov	r2, #32
    9090:	stm	r3, {r0, r1}
    9094:	add	r3, r4, #110	; 0x6e
    9098:	mov	r1, r2
    909c:	mov	r0, r3
    90a0:	bl	42b8 <memset@plt>
    90a4:	mov	r2, fp
    90a8:	mov	r1, r7
    90ac:	bl	3f34 <memcpy@plt>
    90b0:	mov	r3, #138	; 0x8a
    90b4:	ldr	r1, [sp, #168]	; 0xa8
    90b8:	mov	r2, #30
    90bc:	add	r7, r3, #4
    90c0:	add	r7, r4, r7
    90c4:	mov	fp, #0
    90c8:	mla	r9, r2, r1, r3
    90cc:	add	r9, r9, #4
    90d0:	add	r3, r4, r9
    90d4:	str	r3, [sp, #168]	; 0xa8
    90d8:	add	r3, sp, #184	; 0xb8
    90dc:	str	r3, [sp, #180]	; 0xb4
    90e0:	ldr	r3, [r8, #264]	; 0x108
    90e4:	cmp	fp, r3
    90e8:	blt	9140 <sas7bcat_begin_data+0x35c>
    90ec:	ldrd	r2, [sp, #160]	; 0xa0
    90f0:	str	r4, [r3, r2, lsl #2]
    90f4:	add	r3, r2, #1
    90f8:	b	8e28 <sas7bcat_begin_data+0x44>
    90fc:	mov	r1, r4
    9100:	mov	r0, r8
    9104:	bl	44ec <readstat_get_value_label@plt>
    9108:	ldr	r2, [r0, #28]
    910c:	add	r4, r4, #1
    9110:	add	r2, r2, #41	; 0x29
    9114:	add	r9, r9, r2
    9118:	b	9044 <sas7bcat_begin_data+0x260>
    911c:	ldr	r2, [pc, #476]	; 9300 <sas7bcat_begin_data+0x51c>
    9120:	mov	r0, r3
    9124:	mov	r1, r7
    9128:	str	r2, [r4, #12]
    912c:	str	r2, [r3, #4]
    9130:	mov	r2, fp
    9134:	bl	3f34 <memcpy@plt>
    9138:	mov	r3, #106	; 0x6a
    913c:	b	90b4 <sas7bcat_begin_data+0x2d0>
    9140:	mov	r1, fp
    9144:	mov	r0, r8
    9148:	bl	44ec <readstat_get_value_label@plt>
    914c:	mov	r3, #24
    9150:	mov	r9, r0
    9154:	strb	r3, [r7, #2]
    9158:	str	fp, [r7, #10]
    915c:	ldr	r3, [r8]
    9160:	cmp	r3, #0
    9164:	bne	91d4 <sas7bcat_begin_data+0x3f0>
    9168:	ldr	r3, [r0, #20]
    916c:	mov	r2, #16
    9170:	mov	r1, #32
    9174:	str	r3, [sp, #172]	; 0xac
    9178:	add	r3, r7, #14
    917c:	mov	r0, r3
    9180:	bl	42b8 <memset@plt>
    9184:	ldr	r2, [sp, #172]	; 0xac
    9188:	ldr	r1, [r9, #16]
    918c:	cmp	r2, #16
    9190:	movcs	r2, #16
    9194:	bl	3f34 <memcpy@plt>
    9198:	ldr	r2, [r9, #28]
    919c:	add	r7, r7, #30
    91a0:	add	fp, fp, #1
    91a4:	ldr	r3, [sp, #168]	; 0xa8
    91a8:	add	r0, r3, #10
    91ac:	strh	r2, [r3, #8]
    91b0:	sxth	r2, r2
    91b4:	ldr	r1, [r9, #24]
    91b8:	bl	3f34 <memcpy@plt>
    91bc:	ldr	r3, [r9, #28]
    91c0:	ldr	r2, [sp, #168]	; 0xa8
    91c4:	add	r3, r3, #11
    91c8:	add	r3, r2, r3
    91cc:	str	r3, [sp, #168]	; 0xa8
    91d0:	b	90e0 <sas7bcat_begin_data+0x2fc>
    91d4:	vldr	d7, [r0]
    91d8:	vneg.f64	d7, d7
    91dc:	vmov	r2, r3, d7
    91e0:	strd	r2, [sp, #184]	; 0xb8
    91e4:	bl	3ec8 <machine_is_little_endian@plt>
    91e8:	cmp	r0, #0
    91ec:	beq	91fc <sas7bcat_begin_data+0x418>
    91f0:	ldrd	r0, [sp, #184]	; 0xb8
    91f4:	bl	3d90 <byteswap8@plt>
    91f8:	strd	r0, [sp, #184]	; 0xb8
    91fc:	ldr	r3, [sp, #180]	; 0xb4
    9200:	ldm	r3!, {r0, r1}
    9204:	str	r0, [r7, #22]
    9208:	str	r1, [r7, #26]
    920c:	b	9198 <sas7bcat_begin_data+0x3b4>
    9210:	add	r1, r0, #212	; 0xd4
    9214:	add	r9, sl, r2
    9218:	cmp	r1, r9
    921c:	bhi	8f64 <sas7bcat_begin_data+0x180>
    9220:	ldr	r2, [sp, #164]	; 0xa4
    9224:	uxth	r3, r3
    9228:	str	ip, [r0]
    922c:	strh	lr, [r0, #4]
    9230:	strh	r3, [r0, #8]
    9234:	strb	r8, [r0, #50]	; 0x32
    9238:	mov	r0, r1
    923c:	ldr	r2, [r2, r4, lsl #2]
    9240:	add	r4, r4, #1
    9244:	ldr	r2, [r2]
    9248:	add	r3, r3, r2
    924c:	sxth	r3, r3
    9250:	b	8f54 <sas7bcat_begin_data+0x170>
    9254:	ldr	r3, [sp, #164]	; 0xa4
    9258:	add	ip, lr, #16
    925c:	ldr	r8, [r3, r4, lsl #2]
    9260:	mov	r3, #0
    9264:	ldr	fp, [r8]
    9268:	add	r2, ip, fp
    926c:	cmp	r0, r2
    9270:	sbcs	r3, r1, r3
    9274:	blt	8fb4 <sas7bcat_begin_data+0x1d0>
    9278:	mov	r2, #0
    927c:	mov	r3, #0
    9280:	add	lr, sl, lr
    9284:	strd	r2, [r7]
    9288:	strd	r2, [r7, #8]
    928c:	mov	r2, r7
    9290:	strh	fp, [sp, #202]	; 0xca
    9294:	mov	r3, r2
    9298:	add	lr, lr, #8
    929c:	ldm	r3!, {r0, r1}
    92a0:	cmp	r3, r9
    92a4:	mov	r2, r3
    92a8:	str	r0, [lr, #-8]
    92ac:	str	r1, [lr, #-4]
    92b0:	bne	9294 <sas7bcat_begin_data+0x4b0>
    92b4:	uxth	fp, ip
    92b8:	mov	r1, r8
    92bc:	sxtah	r0, sl, fp
    92c0:	ldr	r2, [r1], #4
    92c4:	add	r4, r4, #1
    92c8:	bl	3f34 <memcpy@plt>
    92cc:	ldr	ip, [r8]
    92d0:	add	ip, fp, ip
    92d4:	sxth	lr, ip
    92d8:	b	8fa4 <sas7bcat_begin_data+0x1c0>
    92dc:	ldr	r3, [sp, #164]	; 0xa4
    92e0:	ldr	r0, [r3, r7, lsl #2]
    92e4:	add	r7, r7, #1
    92e8:	bl	3ed4 <free@plt>
    92ec:	b	8fcc <sas7bcat_begin_data+0x1e8>
    92f0:	.word	0x00037200
    92f4:	.word	0x00017e24
    92f8:	.word	0x000002c8
    92fc:	.word	0x52534c58
    9300:	.word	0x20202020

00009304 <readstat_begin_writing_sas7bcat>:
    9304:	ldr	r3, [r0, #8]
    9308:	mov	r2, #0
    930c:	cmp	r3, #0
    9310:	moveq	r3, #9
    9314:	streq	r3, [r0, #8]
    9318:	ldr	r3, [pc, #8]	; 9328 <readstat_begin_writing_sas7bcat+0x24>
    931c:	add	r3, pc, r3
    9320:	str	r3, [r0, #276]	; 0x114
    9324:	b	3f7c <readstat_begin_writing_file@plt>
    9328:	.word	0xfffffac0
    932c:	.word	0x00000000

00009330 <sas7bdat_update_progress>:
    9330:	push	{lr}		; (str lr, [sp, #-4]!)
    9334:	ldrd	r2, [r0, #52]	; 0x34
    9338:	ldr	r1, [r0, #28]
    933c:	ldr	r0, [r0, #32]
    9340:	ldr	lr, [r3, #16]
    9344:	ldr	r3, [r3, #20]
    9348:	mov	ip, lr
    934c:	pop	{lr}		; (ldr lr, [sp], #4)
    9350:	bx	ip

00009354 <sas7bdat_validate_subheader_pointer>:
    9354:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9358:	mov	fp, #0
    935c:	sub	sp, sp, #28
    9360:	ldrd	r4, [r0]
    9364:	cmp	r5, fp
    9368:	cmpeq	r4, r1
    936c:	bhi	9430 <sas7bdat_validate_subheader_pointer+0xdc>
    9370:	ldrd	r8, [r0, #8]
    9374:	mov	sl, r1
    9378:	cmp	fp, r9
    937c:	cmpeq	r1, r8
    9380:	bcc	9430 <sas7bdat_validate_subheader_pointer+0xdc>
    9384:	adds	r6, r4, r8
    9388:	adc	r7, r5, r9
    938c:	cmp	fp, r7
    9390:	cmpeq	r1, r6
    9394:	bcc	9430 <sas7bdat_validate_subheader_pointer+0xdc>
    9398:	uxth	r6, r2
    939c:	mov	r7, #0
    93a0:	mov	ip, r3
    93a4:	ldr	r3, [r3, #148]	; 0x94
    93a8:	strd	r6, [sp]
    93ac:	ldr	r2, [sp]
    93b0:	ldr	r6, [ip, #144]	; 0x90
    93b4:	umull	r6, r7, r6, r2
    93b8:	mla	r7, r3, r2, r7
    93bc:	ldr	r3, [ip, #128]	; 0x80
    93c0:	ldr	r2, [ip, #132]	; 0x84
    93c4:	adds	r3, r6, r3
    93c8:	str	r3, [sp, #8]
    93cc:	adc	r3, r7, r2
    93d0:	str	r3, [sp, #12]
    93d4:	ldrd	r2, [sp, #8]
    93d8:	cmp	r5, r3
    93dc:	cmpeq	r4, r2
    93e0:	bcc	9430 <sas7bdat_validate_subheader_pointer+0xdc>
    93e4:	ldrb	r3, [r0, #16]
    93e8:	cmp	r3, #0
    93ec:	movne	r0, #0
    93f0:	bne	9428 <sas7bdat_validate_subheader_pointer+0xd4>
    93f4:	ldrd	r2, [ip, #136]	; 0x88
    93f8:	cmp	r9, r3
    93fc:	cmpeq	r8, r2
    9400:	bcc	9430 <sas7bdat_validate_subheader_pointer+0xdc>
    9404:	adds	r1, r4, r2
    9408:	adc	r3, r5, r3
    940c:	str	r1, [sp, #16]
    9410:	str	r3, [sp, #20]
    9414:	ldrd	r2, [sp, #16]
    9418:	cmp	fp, r3
    941c:	cmpeq	sl, r2
    9420:	movcs	r0, #0
    9424:	movcc	r0, #5
    9428:	add	sp, sp, #28
    942c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9430:	mov	r0, #5
    9434:	b	9428 <sas7bdat_validate_subheader_pointer+0xd4>

00009438 <sas7bdat_copy_text_ref>:
    9438:	push	{r0, r1, r2, r4, r5, lr}
    943c:	add	ip, sp, #8
    9440:	stmdb	ip, {r2, r3}
    9444:	ldr	ip, [sp, #24]
    9448:	ldrh	lr, [sp]
    944c:	ldr	r3, [ip, #152]	; 0x98
    9450:	cmp	lr, r3
    9454:	bge	94a8 <sas7bdat_copy_text_ref+0x70>
    9458:	ldrh	r3, [sp, #4]
    945c:	cmp	r3, #0
    9460:	moveq	r4, r0
    9464:	moveq	r0, r3
    9468:	strbeq	r3, [r4]
    946c:	beq	94ac <sas7bdat_copy_text_ref+0x74>
    9470:	ldr	r4, [ip, #156]	; 0x9c
    9474:	ldrh	r2, [sp, #2]
    9478:	ldr	r4, [r4, lr, lsl #2]
    947c:	add	r5, r2, r3
    9480:	cmp	r5, r4
    9484:	bhi	94a8 <sas7bdat_copy_text_ref+0x70>
    9488:	ldr	r4, [ip, #160]	; 0xa0
    948c:	ldr	ip, [ip, #208]	; 0xd0
    9490:	ldr	lr, [r4, lr, lsl #2]
    9494:	str	ip, [sp, #24]
    9498:	add	r2, lr, r2
    949c:	add	sp, sp, #12
    94a0:	pop	{r4, r5, lr}
    94a4:	b	424c <readstat_convert@plt>
    94a8:	mov	r0, #5
    94ac:	add	sp, sp, #12
    94b0:	pop	{r4, r5, pc}

000094b4 <sas7bdat_realloc_col_info>:
    94b4:	push	{r4, r5, r6, r7, r8, lr}
    94b8:	ldr	r6, [r0, #188]	; 0xbc
    94bc:	cmp	r6, r1
    94c0:	bcs	9500 <sas7bdat_realloc_col_info+0x4c>
    94c4:	mov	r5, r0
    94c8:	mov	r4, r1
    94cc:	ldr	r0, [r0, #192]	; 0xc0
    94d0:	mov	r7, #40	; 0x28
    94d4:	str	r4, [r5, #188]	; 0xbc
    94d8:	mul	r1, r7, r1
    94dc:	bl	4300 <readstat_realloc@plt>
    94e0:	cmp	r0, #0
    94e4:	str	r0, [r5, #192]	; 0xc0
    94e8:	beq	9508 <sas7bdat_realloc_col_info+0x54>
    94ec:	sub	r2, r4, r6
    94f0:	mov	r1, #0
    94f4:	mla	r0, r7, r6, r0
    94f8:	mul	r2, r7, r2
    94fc:	bl	42b8 <memset@plt>
    9500:	mov	r0, #0
    9504:	pop	{r4, r5, r6, r7, r8, pc}
    9508:	mov	r0, #3
    950c:	pop	{r4, r5, r6, r7, r8, pc}

00009510 <sas7bdat_parse_column_text_subheader>:
    9510:	push	{r4, r5, r6, r7, r8, lr}
    9514:	mov	r8, r1
    9518:	mov	r5, r2
    951c:	ldr	r1, [r2, #60]	; 0x3c
    9520:	ldr	r6, [r2, #136]	; 0x88
    9524:	add	r7, r0, r6
    9528:	mov	r0, r7
    952c:	bl	43f0 <sas_read2@plt>
    9530:	mov	r4, r0
    9534:	mov	r1, r6
    9538:	mov	r0, r8
    953c:	bl	43d8 <sas_subheader_remainder@plt>
    9540:	cmp	r4, r0
    9544:	bne	9614 <sas7bdat_parse_column_text_subheader+0x104>
    9548:	ldr	r1, [r5, #152]	; 0x98
    954c:	ldr	r0, [r5, #160]	; 0xa0
    9550:	add	r1, r1, #1
    9554:	str	r1, [r5, #152]	; 0x98
    9558:	lsl	r1, r1, #2
    955c:	bl	4300 <readstat_realloc@plt>
    9560:	ldr	r1, [r5, #152]	; 0x98
    9564:	str	r0, [r5, #160]	; 0xa0
    9568:	ldr	r0, [r5, #156]	; 0x9c
    956c:	lsl	r1, r1, #2
    9570:	bl	4300 <readstat_realloc@plt>
    9574:	ldr	r4, [r5, #160]	; 0xa0
    9578:	str	r0, [r5, #156]	; 0x9c
    957c:	clz	r0, r0
    9580:	lsr	r0, r0, #5
    9584:	cmp	r4, #0
    9588:	moveq	r4, #1
    958c:	movne	r4, r0
    9590:	cmp	r4, #0
    9594:	beq	95a0 <sas7bdat_parse_column_text_subheader+0x90>
    9598:	mov	r0, #3
    959c:	pop	{r4, r5, r6, r7, r8, pc}
    95a0:	sub	r6, r8, r6
    95a4:	mov	r0, r6
    95a8:	bl	4240 <readstat_malloc@plt>
    95ac:	subs	r8, r0, #0
    95b0:	beq	9598 <sas7bdat_parse_column_text_subheader+0x88>
    95b4:	mov	r2, r6
    95b8:	mov	r1, r7
    95bc:	bl	3f34 <memcpy@plt>
    95c0:	ldr	r3, [r5, #152]	; 0x98
    95c4:	cmp	r6, #20
    95c8:	ldr	r2, [r5, #156]	; 0x9c
    95cc:	sub	r3, r3, #-1073741823	; 0xc0000001
    95d0:	str	r6, [r2, r3, lsl #2]
    95d4:	ldr	r3, [r5, #152]	; 0x98
    95d8:	ldr	r2, [r5, #160]	; 0xa0
    95dc:	sub	r3, r3, #-1073741823	; 0xc0000001
    95e0:	str	r8, [r2, r3, lsl #2]
    95e4:	bls	961c <sas7bdat_parse_column_text_subheader+0x10c>
    95e8:	ldr	r1, [pc, #52]	; 9624 <sas7bdat_parse_column_text_subheader+0x114>
    95ec:	mov	r2, #8
    95f0:	add	r0, r8, #12
    95f4:	add	r1, pc, r1
    95f8:	bl	451c <strncmp@plt>
    95fc:	cmp	r0, #0
    9600:	bne	961c <sas7bdat_parse_column_text_subheader+0x10c>
    9604:	ldrb	r3, [r5, #2529]	; 0x9e1
    9608:	orr	r3, r3, #1
    960c:	strb	r3, [r5, #2529]	; 0x9e1
    9610:	pop	{r4, r5, r6, r7, r8, pc}
    9614:	mov	r0, #5
    9618:	pop	{r4, r5, r6, r7, r8, pc}
    961c:	mov	r0, r4
    9620:	pop	{r4, r5, r6, r7, r8, pc}
    9624:	.word	0x000176e6

00009628 <sas7bdat_parse_text_ref.isra.0>:
    9628:	push	{r4, r5, r6, r7, r8, lr}
    962c:	mov	r4, r0
    9630:	mov	r5, r1
    9634:	mov	r0, r1
    9638:	mov	r6, r2
    963c:	ldr	r1, [r2]
    9640:	bl	43f0 <sas_read2@plt>
    9644:	mov	r8, r0
    9648:	add	r0, r5, #2
    964c:	ldr	r1, [r6]
    9650:	bl	43f0 <sas_read2@plt>
    9654:	mov	r7, r0
    9658:	add	r0, r5, #4
    965c:	ldr	r1, [r6]
    9660:	bl	43f0 <sas_read2@plt>
    9664:	strh	r8, [r4]
    9668:	strh	r7, [r4, #2]
    966c:	strh	r0, [r4, #4]
    9670:	mov	r0, r4
    9674:	pop	{r4, r5, r6, r7, r8, pc}

00009678 <sas7bdat_parse_subheader_pointer>:
    9678:	push	{r4, r5, r6, r7, r8, lr}
    967c:	mov	r6, r0
    9680:	mov	r4, r2
    9684:	mov	r7, r3
    9688:	ldr	r5, [r3, #44]	; 0x2c
    968c:	cmp	r5, #0
    9690:	beq	96d0 <sas7bdat_parse_subheader_pointer+0x58>
    9694:	cmp	r1, #17
    9698:	bls	9708 <sas7bdat_parse_subheader_pointer+0x90>
    969c:	ldr	r1, [r3, #60]	; 0x3c
    96a0:	bl	43e4 <sas_read8@plt>
    96a4:	strd	r0, [r4]
    96a8:	add	r0, r6, #8
    96ac:	ldr	r1, [r7, #60]	; 0x3c
    96b0:	bl	43e4 <sas_read8@plt>
    96b4:	strd	r0, [r4, #8]
    96b8:	ldrb	r3, [r6, #16]
    96bc:	strb	r3, [r4, #16]
    96c0:	ldrb	r3, [r6, #17]
    96c4:	mov	r0, #0
    96c8:	strb	r3, [r4, #17]
    96cc:	pop	{r4, r5, r6, r7, r8, pc}
    96d0:	cmp	r1, #9
    96d4:	bls	9708 <sas7bdat_parse_subheader_pointer+0x90>
    96d8:	ldr	r1, [r3, #60]	; 0x3c
    96dc:	bl	4414 <sas_read4@plt>
    96e0:	ldr	r1, [r7, #60]	; 0x3c
    96e4:	stm	r4, {r0, r5}
    96e8:	add	r0, r6, #4
    96ec:	bl	4414 <sas_read4@plt>
    96f0:	str	r0, [r4, #8]
    96f4:	str	r5, [r4, #12]
    96f8:	ldrb	r3, [r6, #8]
    96fc:	strb	r3, [r4, #16]
    9700:	ldrb	r3, [r6, #9]
    9704:	b	96c4 <sas7bdat_parse_subheader_pointer+0x4c>
    9708:	mov	r0, #5
    970c:	pop	{r4, r5, r6, r7, r8, pc}

00009710 <sas7bdat_parse_single_row>:
    9710:	ldr	r2, [r1, #76]	; 0x4c
    9714:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9718:	ldr	r3, [r1, #84]	; 0x54
    971c:	vpush	{d8}
    9720:	sub	sp, sp, #52	; 0x34
    9724:	cmp	r2, r3
    9728:	beq	9760 <sas7bdat_parse_single_row+0x50>
    972c:	ldr	r8, [r1, #88]	; 0x58
    9730:	cmp	r8, #0
    9734:	subne	r8, r8, #1
    9738:	strne	r8, [r1, #88]	; 0x58
    973c:	bne	9760 <sas7bdat_parse_single_row+0x50>
    9740:	ldr	r3, [r1, #16]
    9744:	mov	r4, r1
    9748:	str	r0, [sp, #20]
    974c:	cmp	r3, #0
    9750:	bne	9774 <sas7bdat_parse_single_row+0x64>
    9754:	ldr	r3, [r4, #76]	; 0x4c
    9758:	add	r3, r3, #1
    975c:	str	r3, [r4, #76]	; 0x4c
    9760:	mov	r7, #0
    9764:	mov	r0, r7
    9768:	add	sp, sp, #52	; 0x34
    976c:	vpop	{d8}
    9770:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9774:	ldr	r1, [r1, #176]	; 0xb0
    9778:	ldr	r0, [r4, #180]	; 0xb4
    977c:	lsl	r1, r1, #2
    9780:	add	r1, r1, #1
    9784:	str	r1, [r4, #184]	; 0xb8
    9788:	bl	4300 <readstat_realloc@plt>
    978c:	cmp	r0, #0
    9790:	str	r0, [r4, #180]	; 0xb4
    9794:	vldrne	d8, [pc, #532]	; 99b0 <sas7bdat_parse_single_row+0x2a0>
    9798:	bne	989c <sas7bdat_parse_single_row+0x18c>
    979c:	mov	r7, #3
    97a0:	b	9764 <sas7bdat_parse_single_row+0x54>
    97a4:	ldr	r3, [r4, #180]	; 0xb4
    97a8:	str	r3, [sp, #32]
    97ac:	ldr	r3, [r4, #52]	; 0x34
    97b0:	str	r3, [sp, #8]
    97b4:	add	r3, sp, #48	; 0x30
    97b8:	ldmdb	r3, {r0, r1}
    97bc:	stm	sp, {r0, r1}
    97c0:	ldm	r9, {r2, r3}
    97c4:	ldr	r5, [r4, #16]
    97c8:	ldr	r1, [sp, #16]
    97cc:	ldr	r0, [r4, #76]	; 0x4c
    97d0:	blx	r5
    97d4:	cmp	r0, #0
    97d8:	beq	9898 <sas7bdat_parse_single_row+0x188>
    97dc:	mov	r7, #4
    97e0:	b	9764 <sas7bdat_parse_single_row+0x54>
    97e4:	cmp	r3, #5
    97e8:	bne	97ac <sas7bdat_parse_single_row+0x9c>
    97ec:	ldr	r1, [r4, #40]	; 0x28
    97f0:	add	r3, r6, ip
    97f4:	cmp	r1, #0
    97f8:	moveq	lr, r1
    97fc:	moveq	r2, r6
    9800:	moveq	r5, lr
    9804:	movne	r1, r3
    9808:	movne	r5, lr
    980c:	bne	983c <sas7bdat_parse_single_row+0x12c>
    9810:	cmp	r3, r2
    9814:	beq	9844 <sas7bdat_parse_single_row+0x134>
    9818:	ldrb	r0, [r2], #1
    981c:	lsl	r5, r5, #8
    9820:	orr	r5, r5, lr, lsr #24
    9824:	orr	lr, r0, lr, lsl #8
    9828:	b	9810 <sas7bdat_parse_single_row+0x100>
    982c:	ldrb	r2, [r1, #-1]!
    9830:	lsl	r5, r5, #8
    9834:	orr	r5, r5, lr, lsr #24
    9838:	orr	lr, r2, lr, lsl #8
    983c:	cmp	r1, r6
    9840:	bne	982c <sas7bdat_parse_single_row+0x11c>
    9844:	mvn	r3, #7
    9848:	mul	ip, r3, ip
    984c:	add	r3, ip, #64	; 0x40
    9850:	add	ip, ip, #32
    9854:	lsl	fp, r5, r3
    9858:	rsb	r2, r3, #32
    985c:	lsl	sl, lr, r3
    9860:	orr	fp, fp, lr, lsl ip
    9864:	orr	fp, fp, lr, lsr r2
    9868:	vmov	d7, sl, fp
    986c:	strd	sl, [sp, #24]
    9870:	vcmp.f64	d7, d7
    9874:	vmrs	APSR_nzcv, fpscr
    9878:	vstrvc	d7, [sp, #32]
    987c:	bvc	97ac <sas7bdat_parse_single_row+0x9c>
    9880:	mvn	r1, fp, lsr #8
    9884:	mov	r0, r9
    9888:	vstr	d8, [sp, #32]
    988c:	uxtb	r1, r1
    9890:	bl	44c8 <sas_assign_tag@plt>
    9894:	b	97ac <sas7bdat_parse_single_row+0x9c>
    9898:	add	r8, r8, #1
    989c:	ldr	r3, [r4, #80]	; 0x50
    98a0:	cmp	r3, r8
    98a4:	bls	9754 <sas7bdat_parse_single_row+0x44>
    98a8:	ldr	r3, [r4, #196]	; 0xc4
    98ac:	ldr	r3, [r3, r8, lsl #2]
    98b0:	ldr	lr, [r3, #2144]	; 0x860
    98b4:	str	r3, [sp, #16]
    98b8:	cmp	lr, #0
    98bc:	bne	9898 <sas7bdat_parse_single_row+0x188>
    98c0:	mov	r3, #40	; 0x28
    98c4:	ldr	r0, [r4, #68]	; 0x44
    98c8:	mov	r1, #0
    98cc:	ldr	r5, [r4, #192]	; 0xc0
    98d0:	mla	r5, r3, r8, r5
    98d4:	ldrd	r2, [r5, #24]
    98d8:	cmp	r3, r1
    98dc:	cmpeq	r2, r0
    98e0:	bhi	99a4 <sas7bdat_parse_single_row+0x294>
    98e4:	ldr	ip, [r5, #32]
    98e8:	adds	r6, r2, ip
    98ec:	adc	r7, r3, #0
    98f0:	cmp	r1, r7
    98f4:	cmpeq	r0, r6
    98f8:	bcc	99a4 <sas7bdat_parse_single_row+0x294>
    98fc:	ldr	r1, [sp, #20]
    9900:	mov	r3, #0
    9904:	add	r9, sp, #32
    9908:	add	r6, r1, r2
    990c:	mov	r2, #0
    9910:	strd	r2, [sp, #32]
    9914:	strd	r2, [r9, #8]
    9918:	ldr	r3, [r5, #36]	; 0x24
    991c:	cmp	r3, #0
    9920:	str	r3, [sp, #40]	; 0x28
    9924:	bne	97e4 <sas7bdat_parse_single_row+0xd4>
    9928:	ldr	r3, [r4, #208]	; 0xd0
    992c:	mov	r2, r6
    9930:	str	r3, [sp]
    9934:	mov	r3, ip
    9938:	ldrd	r0, [r4, #180]	; 0xb4
    993c:	bl	424c <readstat_convert@plt>
    9940:	subs	r7, r0, #0
    9944:	beq	97a4 <sas7bdat_parse_single_row+0x94>
    9948:	ldr	r3, [r4, #24]
    994c:	cmp	r3, #0
    9950:	beq	9764 <sas7bdat_parse_single_row+0x54>
    9954:	ldr	r3, [r4, #76]	; 0x4c
    9958:	add	r8, r4, #480	; 0x1e0
    995c:	mov	r1, #2048	; 0x800
    9960:	str	r6, [sp, #8]
    9964:	add	r8, r8, #1
    9968:	ldr	r2, [r5, #32]
    996c:	mov	r0, r8
    9970:	add	r3, r3, #1
    9974:	str	r2, [sp, #4]
    9978:	ldr	r2, [r5, #20]
    997c:	add	r2, r2, #1
    9980:	str	r2, [sp]
    9984:	ldr	r2, [pc, #44]	; 99b8 <sas7bdat_parse_single_row+0x2a8>
    9988:	add	r2, pc, r2
    998c:	bl	4294 <snprintf@plt>
    9990:	mov	r0, r8
    9994:	ldr	r3, [r4, #24]
    9998:	ldr	r1, [r4, #52]	; 0x34
    999c:	blx	r3
    99a0:	b	9764 <sas7bdat_parse_single_row+0x54>
    99a4:	mov	r7, #5
    99a8:	b	9764 <sas7bdat_parse_single_row+0x54>
    99ac:	nop	{0}
    99b0:	.word	0x00000000
    99b4:	.word	0x7ff80000
    99b8:	.word	0x0001735b

000099bc <sas7bdat_submit_columns_if_needed>:
    99bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    99c0:	sub	sp, sp, #84	; 0x54
    99c4:	ldr	r8, [r0, #64]	; 0x40
    99c8:	cmp	r8, #0
    99cc:	bne	9aa8 <sas7bdat_submit_columns_if_needed+0xec>
    99d0:	ldr	r6, [r0]
    99d4:	mov	r5, r1
    99d8:	mov	r4, r0
    99dc:	cmp	r6, #0
    99e0:	beq	9a94 <sas7bdat_submit_columns_if_needed+0xd8>
    99e4:	mov	r2, #24
    99e8:	mov	r1, r8
    99ec:	ldr	r7, [r4, #80]	; 0x50
    99f0:	add	r0, sp, #56	; 0x38
    99f4:	bl	42b8 <memset@plt>
    99f8:	ldr	r3, [r4, #84]	; 0x54
    99fc:	ldr	r2, [r4, #220]	; 0xdc
    9a00:	str	r3, [sp, #24]
    9a04:	ldr	r3, [r4, #212]	; 0xd4
    9a08:	str	r8, [sp, #28]
    9a0c:	str	r7, [sp, #32]
    9a10:	str	r8, [sp, #36]	; 0x24
    9a14:	str	r3, [sp, #40]	; 0x28
    9a18:	ldr	r3, [r4, #216]	; 0xd8
    9a1c:	str	r3, [sp, #44]	; 0x2c
    9a20:	asr	r3, r2, #31
    9a24:	strd	r2, [sp, #48]	; 0x30
    9a28:	ldr	r3, [r4, #40]	; 0x28
    9a2c:	ldr	r2, [r4, #44]	; 0x2c
    9a30:	cmp	r3, #0
    9a34:	movne	r3, #1
    9a38:	moveq	r3, #2
    9a3c:	cmp	r5, #0
    9a40:	str	r3, [sp, #60]	; 0x3c
    9a44:	add	r3, r4, #224	; 0xe0
    9a48:	str	r3, [sp, #68]	; 0x44
    9a4c:	ldr	r3, [r4, #200]	; 0xc8
    9a50:	str	r3, [sp, #72]	; 0x48
    9a54:	ldrb	r3, [sp, #76]	; 0x4c
    9a58:	bfi	r3, r2, #0, #1
    9a5c:	strb	r3, [sp, #76]	; 0x4c
    9a60:	beq	9a78 <sas7bdat_submit_columns_if_needed+0xbc>
    9a64:	ldrb	r3, [r4, #2529]	; 0x9e1
    9a68:	tst	r3, #1
    9a6c:	movne	r3, #2
    9a70:	moveq	r3, #1
    9a74:	str	r3, [sp, #56]	; 0x38
    9a78:	add	r0, sp, #24
    9a7c:	ldr	r1, [r4, #52]	; 0x34
    9a80:	blx	r6
    9a84:	cmp	r0, #0
    9a88:	beq	9a94 <sas7bdat_submit_columns_if_needed+0xd8>
    9a8c:	mov	r6, #4
    9a90:	b	9af8 <sas7bdat_submit_columns_if_needed+0x13c>
    9a94:	ldr	r0, [r4, #80]	; 0x50
    9a98:	cmp	r0, #0
    9a9c:	bne	9ab0 <sas7bdat_submit_columns_if_needed+0xf4>
    9aa0:	mov	r3, #1
    9aa4:	str	r3, [r4, #64]	; 0x40
    9aa8:	mov	r6, #0
    9aac:	b	9af8 <sas7bdat_submit_columns_if_needed+0x13c>
    9ab0:	mov	r1, #4
    9ab4:	bl	3fdc <readstat_calloc@plt>
    9ab8:	cmp	r0, #0
    9abc:	str	r0, [r4, #196]	; 0xc4
    9ac0:	moveq	r6, #3
    9ac4:	beq	9af8 <sas7bdat_submit_columns_if_needed+0x13c>
    9ac8:	ldr	r3, [pc, #488]	; 9cb8 <sas7bdat_submit_columns_if_needed+0x2fc>
    9acc:	mov	r7, #0
    9ad0:	add	sl, r4, #480	; 0x1e0
    9ad4:	mov	r6, r7
    9ad8:	add	sl, sl, #1
    9adc:	add	r3, pc, r3
    9ae0:	str	r3, [sp, #20]
    9ae4:	ldr	r3, [r4, #80]	; 0x50
    9ae8:	cmp	r3, r7
    9aec:	bhi	9b04 <sas7bdat_submit_columns_if_needed+0x148>
    9af0:	cmp	r6, #0
    9af4:	beq	9aa0 <sas7bdat_submit_columns_if_needed+0xe4>
    9af8:	mov	r0, r6
    9afc:	add	sp, sp, #84	; 0x54
    9b00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9b04:	ldr	r3, [r4, #196]	; 0xc4
    9b08:	movw	r1, #2152	; 0x868
    9b0c:	mov	r0, #1
    9b10:	mov	r9, #40	; 0x28
    9b14:	lsl	fp, r7, #2
    9b18:	mul	r9, r9, r7
    9b1c:	str	r3, [sp, #16]
    9b20:	bl	3fdc <readstat_calloc@plt>
    9b24:	ldr	r2, [r4, #192]	; 0xc0
    9b28:	mov	r5, r0
    9b2c:	add	r2, r2, r9
    9b30:	ldr	r3, [r2, #32]
    9b34:	ldr	r1, [r2, #36]	; 0x24
    9b38:	str	r8, [r0, #2148]	; 0x864
    9b3c:	cmp	r1, #5
    9b40:	stm	r0, {r1, r7}
    9b44:	str	r3, [r0, #1596]	; 0x63c
    9b48:	bne	9bd8 <sas7bdat_submit_columns_if_needed+0x21c>
    9b4c:	sub	r3, r3, #3
    9b50:	cmp	r3, #5
    9b54:	bhi	9bf0 <sas7bdat_submit_columns_if_needed+0x234>
    9b58:	mov	r1, #300	; 0x12c
    9b5c:	add	r0, r5, #8
    9b60:	str	r4, [sp]
    9b64:	ldm	r2, {r2, r3}
    9b68:	bl	9438 <sas7bdat_copy_text_ref>
    9b6c:	cmp	r0, #0
    9b70:	bne	9bd0 <sas7bdat_submit_columns_if_needed+0x214>
    9b74:	ldr	r2, [r4, #192]	; 0xc0
    9b78:	lsr	r0, r0, #16
    9b7c:	mov	r1, #256	; 0x100
    9b80:	str	r4, [sp]
    9b84:	lsl	r0, r0, #16
    9b88:	add	r2, r2, r9
    9b8c:	ldrh	r3, [r2, #10]
    9b90:	ldr	r2, [r2, #6]
    9b94:	orr	r3, r0, r3
    9b98:	add	r0, r5, #308	; 0x134
    9b9c:	bl	9438 <sas7bdat_copy_text_ref>
    9ba0:	cmp	r0, #0
    9ba4:	bne	9bd0 <sas7bdat_submit_columns_if_needed+0x214>
    9ba8:	ldr	r3, [r4, #192]	; 0xc0
    9bac:	mov	r1, #1024	; 0x400
    9bb0:	add	r0, r5, #564	; 0x234
    9bb4:	str	r4, [sp]
    9bb8:	add	r9, r3, r9
    9bbc:	add	r9, r9, #12
    9bc0:	ldm	r9, {r2, r3}
    9bc4:	bl	9438 <sas7bdat_copy_text_ref>
    9bc8:	cmp	r0, #0
    9bcc:	beq	9c54 <sas7bdat_submit_columns_if_needed+0x298>
    9bd0:	mov	r6, r0
    9bd4:	b	9bf4 <sas7bdat_submit_columns_if_needed+0x238>
    9bd8:	cmp	r1, #0
    9bdc:	bne	9b58 <sas7bdat_submit_columns_if_needed+0x19c>
    9be0:	sub	r3, r3, #1
    9be4:	movw	r1, #32766	; 0x7ffe
    9be8:	cmp	r3, r1
    9bec:	b	9b54 <sas7bdat_submit_columns_if_needed+0x198>
    9bf0:	mov	r6, #5
    9bf4:	mov	r0, r5
    9bf8:	bl	3ed4 <free@plt>
    9bfc:	cmp	r6, #17
    9c00:	bne	9c50 <sas7bdat_submit_columns_if_needed+0x294>
    9c04:	ldr	r3, [r4, #24]
    9c08:	cmp	r3, #0
    9c0c:	moveq	r5, r3
    9c10:	beq	9c54 <sas7bdat_submit_columns_if_needed+0x298>
    9c14:	add	r3, r5, #564	; 0x234
    9c18:	mov	r1, #2048	; 0x800
    9c1c:	ldr	r2, [sp, #20]
    9c20:	mov	r0, sl
    9c24:	str	r3, [sp, #8]
    9c28:	add	r3, r5, #308	; 0x134
    9c2c:	add	r5, r5, #8
    9c30:	str	r5, [sp]
    9c34:	str	r3, [sp, #4]
    9c38:	mov	r3, r7
    9c3c:	bl	4294 <snprintf@plt>
    9c40:	mov	r0, sl
    9c44:	ldr	r3, [r4, #24]
    9c48:	ldr	r1, [r4, #52]	; 0x34
    9c4c:	blx	r3
    9c50:	mov	r5, #0
    9c54:	ldr	r3, [sp, #16]
    9c58:	str	r5, [r3, fp]
    9c5c:	ldr	r3, [r4, #196]	; 0xc4
    9c60:	ldr	r1, [r3, fp]
    9c64:	cmp	r1, #0
    9c68:	beq	9af0 <sas7bdat_submit_columns_if_needed+0x134>
    9c6c:	ldr	r5, [r4, #8]
    9c70:	cmp	r5, #0
    9c74:	beq	9cb0 <sas7bdat_submit_columns_if_needed+0x2f4>
    9c78:	add	r2, r1, #308	; 0x134
    9c7c:	mov	r0, r7
    9c80:	ldr	r3, [r4, #52]	; 0x34
    9c84:	blx	r5
    9c88:	cmp	r0, #1
    9c8c:	beq	9a8c <sas7bdat_submit_columns_if_needed+0xd0>
    9c90:	cmp	r0, #2
    9c94:	bne	9cb0 <sas7bdat_submit_columns_if_needed+0x2f4>
    9c98:	ldr	r3, [r4, #196]	; 0xc4
    9c9c:	mov	r2, #1
    9ca0:	ldr	r3, [r3, fp]
    9ca4:	str	r2, [r3, #2144]	; 0x860
    9ca8:	add	r7, r7, #1
    9cac:	b	9ae4 <sas7bdat_submit_columns_if_needed+0x128>
    9cb0:	add	r8, r8, #1
    9cb4:	b	9ca8 <sas7bdat_submit_columns_if_needed+0x2ec>
    9cb8:	.word	0x00017256

00009cbc <sas7bdat_parse_page_pass1>:
    9cbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9cc0:	mov	r5, r0
    9cc4:	sub	sp, sp, #52	; 0x34
    9cc8:	mov	r4, r2
    9ccc:	mov	r9, r1
    9cd0:	ldr	r1, [r2, #60]	; 0x3c
    9cd4:	ldr	r0, [r2, #128]	; 0x80
    9cd8:	sub	r0, r0, #4
    9cdc:	add	r0, r5, r0
    9ce0:	bl	43f0 <sas_read2@plt>
    9ce4:	ldrd	sl, [r4, #128]	; 0x80
    9ce8:	mov	r8, r0
    9cec:	ldr	r3, [r4, #144]	; 0x90
    9cf0:	add	r7, r5, sl
    9cf4:	mul	r1, r3, r0
    9cf8:	str	r3, [sp, #20]
    9cfc:	adds	r2, sl, r1
    9d00:	adc	r3, fp, r1, asr #31
    9d04:	mov	r1, #0
    9d08:	cmp	r3, r1
    9d0c:	cmpeq	r2, r9
    9d10:	addls	r3, sp, #24
    9d14:	movls	r6, #0
    9d18:	strls	r3, [sp, #16]
    9d1c:	bls	9d78 <sas7bdat_parse_page_pass1+0xbc>
    9d20:	mov	r0, #5
    9d24:	b	9e50 <sas7bdat_parse_page_pass1+0x194>
    9d28:	mov	r2, #24
    9d2c:	mov	r1, #0
    9d30:	ldr	r0, [sp, #16]
    9d34:	bl	42b8 <memset@plt>
    9d38:	ldr	r3, [r4, #136]	; 0x88
    9d3c:	add	r1, r5, r9
    9d40:	mov	r0, r7
    9d44:	sub	r1, r1, r7
    9d48:	ldr	r2, [sp, #16]
    9d4c:	mov	sl, r3
    9d50:	mov	r3, r4
    9d54:	bl	9678 <sas7bdat_parse_subheader_pointer>
    9d58:	cmp	r0, #0
    9d5c:	bne	9e50 <sas7bdat_parse_page_pass1+0x194>
    9d60:	ldrd	r2, [sp, #32]
    9d64:	orrs	r3, r2, r3
    9d68:	bne	9d88 <sas7bdat_parse_page_pass1+0xcc>
    9d6c:	ldr	r3, [sp, #20]
    9d70:	add	r6, r6, #1
    9d74:	add	r7, r7, r3
    9d78:	cmp	r8, r6
    9d7c:	bgt	9d28 <sas7bdat_parse_page_pass1+0x6c>
    9d80:	mov	r0, #0
    9d84:	b	9e50 <sas7bdat_parse_page_pass1+0x194>
    9d88:	ldrb	fp, [sp, #40]	; 0x28
    9d8c:	cmp	fp, #1
    9d90:	beq	9d6c <sas7bdat_parse_page_pass1+0xb0>
    9d94:	mov	r3, r4
    9d98:	mov	r2, r8
    9d9c:	ldr	r0, [sp, #16]
    9da0:	mov	r1, r9
    9da4:	bl	9354 <sas7bdat_validate_subheader_pointer>
    9da8:	cmp	r0, #0
    9dac:	bne	9e50 <sas7bdat_parse_page_pass1+0x194>
    9db0:	cmp	fp, #0
    9db4:	bne	9e58 <sas7bdat_parse_page_pass1+0x19c>
    9db8:	ldr	r0, [sp, #24]
    9dbc:	ldr	r1, [r4, #60]	; 0x3c
    9dc0:	add	r0, r5, r0
    9dc4:	bl	4414 <sas_read4@plt>
    9dc8:	ldr	r3, [r4, #40]	; 0x28
    9dcc:	cmp	r3, #0
    9dd0:	bne	9df4 <sas7bdat_parse_page_pass1+0x138>
    9dd4:	cmp	sl, #8
    9dd8:	cmneq	r0, #1
    9ddc:	bne	9df4 <sas7bdat_parse_page_pass1+0x138>
    9de0:	ldr	r0, [sp, #24]
    9de4:	ldr	r1, [r4, #60]	; 0x3c
    9de8:	add	r0, r0, #4
    9dec:	add	r0, r5, r0
    9df0:	bl	4414 <sas_read4@plt>
    9df4:	cmn	r0, #3
    9df8:	bne	9d6c <sas7bdat_parse_page_pass1+0xb0>
    9dfc:	ldr	r3, [r4, #136]	; 0x88
    9e00:	ldr	r2, [r4, #140]	; 0x8c
    9e04:	ldr	r0, [sp, #24]
    9e08:	adds	r3, r3, #2
    9e0c:	ldr	r1, [sp, #32]
    9e10:	str	r3, [sp]
    9e14:	adc	r3, r2, #0
    9e18:	str	r3, [sp, #4]
    9e1c:	mov	r3, #0
    9e20:	add	r0, r5, r0
    9e24:	str	r1, [sp, #8]
    9e28:	str	r3, [sp, #12]
    9e2c:	ldrd	r2, [sp]
    9e30:	ldrd	sl, [sp, #8]
    9e34:	cmp	r3, fp
    9e38:	cmpeq	r2, sl
    9e3c:	bhi	9d20 <sas7bdat_parse_page_pass1+0x64>
    9e40:	mov	r2, r4
    9e44:	bl	9510 <sas7bdat_parse_column_text_subheader>
    9e48:	cmp	r0, #0
    9e4c:	beq	9d6c <sas7bdat_parse_page_pass1+0xb0>
    9e50:	add	sp, sp, #52	; 0x34
    9e54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9e58:	cmp	fp, #4
    9e5c:	beq	9d6c <sas7bdat_parse_page_pass1+0xb0>
    9e60:	mov	r0, #6
    9e64:	b	9e50 <sas7bdat_parse_page_pass1+0x194>

00009e68 <readstat_parse_sas7bdat>:
    9e68:	ldr	r3, [r0, #32]
    9e6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9e70:	sub	sp, sp, #164	; 0xa4
    9e74:	mov	r5, r0
    9e78:	mov	r6, r1
    9e7c:	mov	r0, #1
    9e80:	movw	r1, #2536	; 0x9e8
    9e84:	str	r3, [sp, #48]	; 0x30
    9e88:	str	r2, [sp, #80]	; 0x50
    9e8c:	bl	3d6c <calloc@plt>
    9e90:	mov	r4, r0
    9e94:	mov	r1, #152	; 0x98
    9e98:	mov	r0, #1
    9e9c:	bl	3d6c <calloc@plt>
    9ea0:	mov	lr, r5
    9ea4:	mov	fp, r0
    9ea8:	ldm	lr!, {r0, r1, r2, r3}
    9eac:	mov	ip, r4
    9eb0:	stmia	ip!, {r0, r1, r2, r3}
    9eb4:	ldm	lr, {r0, r1, r2, r3}
    9eb8:	stm	ip, {r0, r1, r2, r3}
    9ebc:	mov	r0, r6
    9ec0:	ldr	r3, [r5, #36]	; 0x24
    9ec4:	ldr	r2, [sp, #48]	; 0x30
    9ec8:	str	r3, [r4, #200]	; 0xc8
    9ecc:	ldr	r3, [r5, #40]	; 0x28
    9ed0:	ldr	r1, [r2, #20]
    9ed4:	str	r3, [r4, #204]	; 0xcc
    9ed8:	ldr	r3, [sp, #80]	; 0x50
    9edc:	str	r3, [r4, #52]	; 0x34
    9ee0:	ldr	r3, [sp, #48]	; 0x30
    9ee4:	str	r3, [r4, #56]	; 0x38
    9ee8:	ldr	r3, [r5, #44]	; 0x2c
    9eec:	str	r3, [r4, #84]	; 0x54
    9ef0:	ldr	r3, [r5, #48]	; 0x30
    9ef4:	cmp	r3, #0
    9ef8:	strgt	r3, [r4, #88]	; 0x58
    9efc:	ldr	r3, [sp, #48]	; 0x30
    9f00:	ldr	r3, [r3]
    9f04:	blx	r3
    9f08:	cmn	r0, #1
    9f0c:	moveq	r6, #1
    9f10:	beq	9f5c <readstat_parse_sas7bdat+0xf4>
    9f14:	ldr	r3, [sp, #48]	; 0x30
    9f18:	mov	r1, #2
    9f1c:	mov	r0, #0
    9f20:	ldr	r2, [sp, #48]	; 0x30
    9f24:	ldr	r3, [r3, #8]
    9f28:	ldr	r2, [r2, #20]
    9f2c:	blx	r3
    9f30:	asr	r1, r0, #31
    9f34:	mvn	r3, #0
    9f38:	mvn	r2, #0
    9f3c:	cmp	r1, r3
    9f40:	cmpeq	r0, r2
    9f44:	strd	r0, [r4, #32]
    9f48:	bne	a09c <readstat_parse_sas7bdat+0x234>
    9f4c:	ldr	r5, [r4, #24]
    9f50:	cmp	r5, #0
    9f54:	bne	a078 <readstat_parse_sas7bdat+0x210>
    9f58:	mov	r6, #15
    9f5c:	ldr	r3, [sp, #48]	; 0x30
    9f60:	ldr	r2, [sp, #48]	; 0x30
    9f64:	ldr	r3, [r3, #4]
    9f68:	ldr	r0, [r2, #20]
    9f6c:	blx	r3
    9f70:	sub	r3, r6, #1
    9f74:	cmp	r6, #15
    9f78:	cmpne	r3, #1
    9f7c:	bhi	9fe4 <readstat_parse_sas7bdat+0x17c>
    9f80:	ldr	r3, [r4, #24]
    9f84:	cmp	r3, #0
    9f88:	beq	9fe4 <readstat_parse_sas7bdat+0x17c>
    9f8c:	mov	r0, r6
    9f90:	add	r5, r4, #480	; 0x1e0
    9f94:	bl	3e5c <readstat_error_message@plt>
    9f98:	mov	r8, r0
    9f9c:	add	r5, r5, #1
    9fa0:	bl	427c <__errno_location@plt>
    9fa4:	mov	r7, r0
    9fa8:	ldr	r0, [r0]
    9fac:	bl	415c <strerror@plt>
    9fb0:	ldr	r2, [pc, #4048]	; af88 <readstat_parse_sas7bdat+0x1120>
    9fb4:	mov	r1, #2048	; 0x800
    9fb8:	ldr	r3, [r7]
    9fbc:	str	r6, [sp]
    9fc0:	add	r2, pc, r2
    9fc4:	stmib	sp, {r0, r3}
    9fc8:	mov	r3, r8
    9fcc:	mov	r0, r5
    9fd0:	bl	4294 <snprintf@plt>
    9fd4:	mov	r0, r5
    9fd8:	ldr	r3, [r4, #24]
    9fdc:	ldr	r1, [sp, #80]	; 0x50
    9fe0:	blx	r3
    9fe4:	ldr	r3, [r4, #160]	; 0xa0
    9fe8:	cmp	r3, #0
    9fec:	movne	r5, #0
    9ff0:	bne	b19c <readstat_parse_sas7bdat+0x1334>
    9ff4:	ldr	r3, [r4, #196]	; 0xc4
    9ff8:	cmp	r3, #0
    9ffc:	movne	r5, #0
    a000:	bne	b1d0 <readstat_parse_sas7bdat+0x1368>
    a004:	ldr	r0, [r4, #192]	; 0xc0
    a008:	cmp	r0, #0
    a00c:	beq	a014 <readstat_parse_sas7bdat+0x1ac>
    a010:	bl	3ed4 <free@plt>
    a014:	ldr	r0, [r4, #180]	; 0xb4
    a018:	cmp	r0, #0
    a01c:	beq	a024 <readstat_parse_sas7bdat+0x1bc>
    a020:	bl	3ed4 <free@plt>
    a024:	ldr	r0, [r4, #120]	; 0x78
    a028:	cmp	r0, #0
    a02c:	beq	a034 <readstat_parse_sas7bdat+0x1cc>
    a030:	bl	3ed4 <free@plt>
    a034:	ldr	r0, [r4, #124]	; 0x7c
    a038:	cmp	r0, #0
    a03c:	beq	a044 <readstat_parse_sas7bdat+0x1dc>
    a040:	bl	3ed4 <free@plt>
    a044:	ldr	r0, [r4, #208]	; 0xd0
    a048:	cmp	r0, #0
    a04c:	beq	a054 <readstat_parse_sas7bdat+0x1ec>
    a050:	bl	3de4 <iconv_close@plt>
    a054:	mov	r0, r4
    a058:	bl	3ed4 <free@plt>
    a05c:	cmp	fp, #0
    a060:	beq	a06c <readstat_parse_sas7bdat+0x204>
    a064:	mov	r0, fp
    a068:	bl	3ed4 <free@plt>
    a06c:	mov	r0, r6
    a070:	add	sp, sp, #164	; 0xa4
    a074:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a078:	ldr	r1, [pc, #3852]	; af8c <readstat_parse_sas7bdat+0x1124>
    a07c:	add	r3, r4, #480	; 0x1e0
    a080:	add	r3, r3, #1
    a084:	add	r1, pc, r1
    a088:	mov	r0, r3
    a08c:	bl	40b4 <strcpy@plt>
    a090:	ldr	r1, [r4, #52]	; 0x34
    a094:	blx	r5
    a098:	b	9f58 <readstat_parse_sas7bdat+0xf0>
    a09c:	ldr	r3, [sp, #48]	; 0x30
    a0a0:	mov	r1, #0
    a0a4:	mov	r0, r1
    a0a8:	ldr	r2, [sp, #48]	; 0x30
    a0ac:	ldr	r3, [r3, #8]
    a0b0:	ldr	r2, [r2, #20]
    a0b4:	blx	r3
    a0b8:	cmn	r0, #1
    a0bc:	bne	a0e0 <readstat_parse_sas7bdat+0x278>
    a0c0:	ldr	r5, [r4, #24]
    a0c4:	cmp	r5, #0
    a0c8:	beq	9f58 <readstat_parse_sas7bdat+0xf0>
    a0cc:	ldr	r1, [pc, #3772]	; af90 <readstat_parse_sas7bdat+0x1128>
    a0d0:	add	r3, r4, #480	; 0x1e0
    a0d4:	add	r3, r3, #1
    a0d8:	add	r1, pc, r1
    a0dc:	b	a088 <readstat_parse_sas7bdat+0x220>
    a0e0:	mov	r1, fp
    a0e4:	ldr	r2, [r4, #24]
    a0e8:	ldr	r0, [sp, #48]	; 0x30
    a0ec:	ldr	r3, [sp, #80]	; 0x50
    a0f0:	bl	43c0 <sas_read_header@plt>
    a0f4:	subs	r6, r0, #0
    a0f8:	bne	9f5c <readstat_parse_sas7bdat+0xf4>
    a0fc:	ldr	r3, [fp, #4]
    a100:	str	r3, [r4, #44]	; 0x2c
    a104:	ldr	r3, [fp]
    a108:	str	r3, [r4, #40]	; 0x28
    a10c:	ldr	r3, [fp, #8]
    a110:	str	r3, [r4, #48]	; 0x30
    a114:	bl	3ec8 <machine_is_little_endian@plt>
    a118:	ldr	r3, [fp]
    a11c:	eor	r0, r0, r3
    a120:	ldrd	r2, [fp, #64]	; 0x40
    a124:	str	r0, [r4, #60]	; 0x3c
    a128:	ldr	r0, [fp, #32]
    a12c:	strd	r2, [r4, #96]	; 0x60
    a130:	ldrd	r2, [fp, #56]	; 0x38
    a134:	strd	r2, [r4, #104]	; 0x68
    a138:	ldr	r3, [fp, #36]	; 0x24
    a13c:	str	r0, [r4, #112]	; 0x70
    a140:	str	r3, [r4, #116]	; 0x74
    a144:	ldrd	r2, [fp, #40]	; 0x28
    a148:	strd	r2, [r4, #128]	; 0x80
    a14c:	ldrd	r2, [fp, #48]	; 0x30
    a150:	strd	r2, [r4, #144]	; 0x90
    a154:	ldr	r3, [r4, #44]	; 0x2c
    a158:	cmp	r3, #0
    a15c:	mov	r3, #0
    a160:	moveq	r2, #4
    a164:	movne	r2, #8
    a168:	strd	r2, [r4, #136]	; 0x88
    a16c:	ldr	r3, [fp, #72]	; 0x48
    a170:	str	r3, [r4, #212]	; 0xd4
    a174:	ldr	r3, [fp, #76]	; 0x4c
    a178:	str	r3, [r4, #216]	; 0xd8
    a17c:	ldr	r3, [fp, #12]
    a180:	str	r3, [r4, #220]	; 0xdc
    a184:	ldr	r3, [r4, #200]	; 0xc8
    a188:	cmp	r3, #0
    a18c:	ldreq	r3, [fp, #144]	; 0x90
    a190:	streq	r3, [r4, #200]	; 0xc8
    a194:	bl	4240 <readstat_malloc@plt>
    a198:	cmp	r0, #0
    a19c:	str	r0, [r4, #120]	; 0x78
    a1a0:	moveq	r6, #3
    a1a4:	beq	9f5c <readstat_parse_sas7bdat+0xf4>
    a1a8:	ldr	r6, [r4, #200]	; 0xc8
    a1ac:	cmp	r6, #0
    a1b0:	beq	a1f0 <readstat_parse_sas7bdat+0x388>
    a1b4:	ldr	r5, [r4, #204]	; 0xcc
    a1b8:	cmp	r5, #0
    a1bc:	beq	a1f0 <readstat_parse_sas7bdat+0x388>
    a1c0:	mov	r1, r5
    a1c4:	mov	r0, r6
    a1c8:	bl	3e14 <strcmp@plt>
    a1cc:	cmp	r0, #0
    a1d0:	beq	a1f0 <readstat_parse_sas7bdat+0x388>
    a1d4:	mov	r1, r6
    a1d8:	mov	r0, r5
    a1dc:	bl	4150 <iconv_open@plt>
    a1e0:	cmn	r0, #1
    a1e4:	moveq	r6, #7
    a1e8:	beq	9f5c <readstat_parse_sas7bdat+0xf4>
    a1ec:	str	r0, [r4, #208]	; 0xd0
    a1f0:	ldr	r3, [r4, #208]	; 0xd0
    a1f4:	add	r2, fp, #80	; 0x50
    a1f8:	movw	r1, #257	; 0x101
    a1fc:	add	r0, r4, #224	; 0xe0
    a200:	str	r3, [sp]
    a204:	mov	r3, #64	; 0x40
    a208:	bl	424c <readstat_convert@plt>
    a20c:	subs	r6, r0, #0
    a210:	moveq	r8, #0
    a214:	moveq	r9, #0
    a218:	ldreq	r5, [r4, #56]	; 0x38
    a21c:	bne	9f5c <readstat_parse_sas7bdat+0xf4>
    a220:	ldr	r0, [r4, #96]	; 0x60
    a224:	ldrd	r2, [r4, #104]	; 0x68
    a228:	cmp	r3, r9
    a22c:	cmpeq	r2, r8
    a230:	bhi	a260 <readstat_parse_sas7bdat+0x3f8>
    a234:	ldr	r5, [r4, #56]	; 0x38
    a238:	ldr	r3, [r4, #104]	; 0x68
    a23c:	ldr	r2, [r4, #108]	; 0x6c
    a240:	subs	r3, r3, #1
    a244:	str	r3, [sp, #32]
    a248:	sbc	r3, r2, #0
    a24c:	mov	r2, #0
    a250:	str	r3, [sp, #36]	; 0x24
    a254:	mov	r3, #0
    a258:	strd	r2, [sp, #40]	; 0x28
    a25c:	b	a528 <readstat_parse_sas7bdat+0x6c0>
    a260:	ldr	ip, [r4, #112]	; 0x70
    a264:	mov	r1, #0
    a268:	ldr	r3, [r5, #8]
    a26c:	ldr	r2, [r5, #20]
    a270:	mla	r0, ip, r8, r0
    a274:	blx	r3
    a278:	cmn	r0, #1
    a27c:	bne	a2f8 <readstat_parse_sas7bdat+0x490>
    a280:	ldr	r3, [r4, #24]
    a284:	cmp	r3, #0
    a288:	beq	9f58 <readstat_parse_sas7bdat+0xf0>
    a28c:	ldr	r3, [r4, #96]	; 0x60
    a290:	add	r5, r4, #480	; 0x1e0
    a294:	add	r5, r5, #1
    a298:	ldrd	r0, [r4, #112]	; 0x70
    a29c:	ldr	r2, [r4, #100]	; 0x64
    a2a0:	strd	r8, [sp, #16]
    a2a4:	str	r3, [sp, #8]
    a2a8:	mul	ip, r0, r9
    a2ac:	str	r2, [sp, #12]
    a2b0:	strd	r0, [sp, #24]
    a2b4:	mla	r1, r1, r8, ip
    a2b8:	umull	r8, r9, r0, r8
    a2bc:	adds	r3, r8, r3
    a2c0:	add	r9, r1, r9
    a2c4:	adc	r2, r9, r2
    a2c8:	str	r3, [sp]
    a2cc:	str	r2, [sp, #4]
    a2d0:	ldr	r2, [pc, #3260]	; af94 <readstat_parse_sas7bdat+0x112c>
    a2d4:	add	r2, pc, r2
    a2d8:	mov	r1, #2048	; 0x800
    a2dc:	mov	r0, r5
    a2e0:	bl	4294 <snprintf@plt>
    a2e4:	mov	r0, r5
    a2e8:	ldr	r3, [r4, #24]
    a2ec:	ldr	r1, [r4, #52]	; 0x34
    a2f0:	blx	r3
    a2f4:	b	9f58 <readstat_parse_sas7bdat+0xf0>
    a2f8:	ldr	r6, [r4, #44]	; 0x2c
    a2fc:	ldr	r3, [r5, #12]
    a300:	ldr	r2, [r5, #20]
    a304:	cmp	r6, #0
    a308:	movne	r6, #16
    a30c:	ldr	sl, [r4, #112]	; 0x70
    a310:	add	r7, r6, #18
    a314:	mov	r1, r7
    a318:	ldr	r0, [r4, #120]	; 0x78
    a31c:	blx	r3
    a320:	cmp	r7, r0
    a324:	bls	a330 <readstat_parse_sas7bdat+0x4c8>
    a328:	mov	r6, #2
    a32c:	b	9f5c <readstat_parse_sas7bdat+0xf4>
    a330:	add	r6, r6, #16
    a334:	ldr	r1, [r4, #60]	; 0x3c
    a338:	ldr	r0, [r4, #120]	; 0x78
    a33c:	add	r0, r0, r6
    a340:	bl	43f0 <sas_read2@plt>
    a344:	and	r3, r0, #3840	; 0xf00
    a348:	cmp	r3, #256	; 0x100
    a34c:	beq	a234 <readstat_parse_sas7bdat+0x3cc>
    a350:	ands	r3, r0, #36864	; 0x9000
    a354:	str	r3, [sp, #40]	; 0x28
    a358:	bne	a41c <readstat_parse_sas7bdat+0x5b4>
    a35c:	ldr	r0, [r4, #120]	; 0x78
    a360:	sub	sl, sl, r7
    a364:	mov	r1, sl
    a368:	ldr	r3, [r5, #12]
    a36c:	ldr	r2, [r5, #20]
    a370:	add	r0, r0, r7
    a374:	blx	r3
    a378:	cmp	sl, r0
    a37c:	bhi	a328 <readstat_parse_sas7bdat+0x4c0>
    a380:	mov	r2, r4
    a384:	ldr	r1, [r4, #112]	; 0x70
    a388:	ldr	r0, [r4, #120]	; 0x78
    a38c:	bl	9cbc <sas7bdat_parse_page_pass1>
    a390:	subs	r6, r0, #0
    a394:	beq	a41c <readstat_parse_sas7bdat+0x5b4>
    a398:	ldr	r3, [r4, #24]
    a39c:	cmp	r3, #0
    a3a0:	beq	9f5c <readstat_parse_sas7bdat+0xf4>
    a3a4:	cmp	r6, #4
    a3a8:	beq	9f5c <readstat_parse_sas7bdat+0xf4>
    a3ac:	mov	r1, #1
    a3b0:	ldr	r3, [r5, #8]
    a3b4:	ldr	r2, [r5, #20]
    a3b8:	add	r5, r4, #480	; 0x1e0
    a3bc:	add	r5, r5, #1
    a3c0:	ldr	r0, [sp, #40]	; 0x28
    a3c4:	blx	r3
    a3c8:	asr	r1, r0, #31
    a3cc:	subs	r2, r0, #1
    a3d0:	strd	r8, [sp]
    a3d4:	sbc	r3, r1, #0
    a3d8:	strd	r2, [sp, #16]
    a3dc:	ldr	r3, [r4, #112]	; 0x70
    a3e0:	ldr	r2, [r4, #116]	; 0x74
    a3e4:	subs	r3, r0, r3
    a3e8:	sbc	r2, r1, r2
    a3ec:	str	r3, [sp, #8]
    a3f0:	str	r2, [sp, #12]
    a3f4:	ldr	r2, [pc, #2972]	; af98 <readstat_parse_sas7bdat+0x1130>
    a3f8:	add	r2, pc, r2
    a3fc:	mov	r1, #2048	; 0x800
    a400:	mov	r0, r5
    a404:	bl	4294 <snprintf@plt>
    a408:	mov	r0, r5
    a40c:	ldr	r3, [r4, #24]
    a410:	ldr	r1, [r4, #52]	; 0x34
    a414:	blx	r3
    a418:	b	9f5c <readstat_parse_sas7bdat+0xf4>
    a41c:	adds	r8, r8, #1
    a420:	adc	r9, r9, #0
    a424:	b	a220 <readstat_parse_sas7bdat+0x3b8>
    a428:	ldr	lr, [sp, #32]
    a42c:	mov	r1, #0
    a430:	ldr	ip, [r4, #112]	; 0x70
    a434:	ldr	r3, [r5, #8]
    a438:	ldr	r2, [r5, #20]
    a43c:	mla	r0, ip, lr, r0
    a440:	blx	r3
    a444:	cmn	r0, #1
    a448:	bne	a4b4 <readstat_parse_sas7bdat+0x64c>
    a44c:	ldr	r3, [r4, #24]
    a450:	cmp	r3, #0
    a454:	beq	9f58 <readstat_parse_sas7bdat+0xf0>
    a458:	ldr	r1, [sp, #32]
    a45c:	add	r5, r4, #480	; 0x1e0
    a460:	add	r5, r5, #1
    a464:	ldr	r0, [r4, #96]	; 0x60
    a468:	ldrd	r2, [r4, #112]	; 0x70
    a46c:	ldr	ip, [r4, #100]	; 0x64
    a470:	str	r0, [sp, #8]
    a474:	ldrd	r6, [sp, #32]
    a478:	strd	r2, [sp, #24]
    a47c:	mul	r3, r1, r3
    a480:	ldr	r1, [sp, #36]	; 0x24
    a484:	str	ip, [sp, #12]
    a488:	strd	r6, [sp, #16]
    a48c:	mla	r1, r2, r1, r3
    a490:	ldr	r3, [sp, #32]
    a494:	umull	r2, r3, r3, r2
    a498:	adds	r0, r2, r0
    a49c:	ldr	r2, [pc, #2808]	; af9c <readstat_parse_sas7bdat+0x1134>
    a4a0:	add	r3, r1, r3
    a4a4:	adc	ip, r3, ip
    a4a8:	stm	sp, {r0, ip}
    a4ac:	add	r2, pc, r2
    a4b0:	b	a2d8 <readstat_parse_sas7bdat+0x470>
    a4b4:	ldr	r6, [r4, #44]	; 0x2c
    a4b8:	ldr	r3, [r5, #12]
    a4bc:	ldr	r2, [r5, #20]
    a4c0:	cmp	r6, #0
    a4c4:	movne	r6, #16
    a4c8:	ldr	sl, [r4, #112]	; 0x70
    a4cc:	add	r7, r6, #18
    a4d0:	mov	r1, r7
    a4d4:	ldr	r0, [r4, #120]	; 0x78
    a4d8:	blx	r3
    a4dc:	cmp	r7, r0
    a4e0:	bhi	a328 <readstat_parse_sas7bdat+0x4c0>
    a4e4:	add	r6, r6, #16
    a4e8:	ldr	r1, [r4, #60]	; 0x3c
    a4ec:	ldr	r0, [r4, #120]	; 0x78
    a4f0:	add	r0, r0, r6
    a4f4:	bl	43f0 <sas_read2@plt>
    a4f8:	and	r3, r0, #3840	; 0xf00
    a4fc:	cmp	r3, #256	; 0x100
    a500:	bne	a594 <readstat_parse_sas7bdat+0x72c>
    a504:	ldrd	r2, [sp, #40]	; 0x28
    a508:	orrs	r3, r2, r3
    a50c:	bne	a53c <readstat_parse_sas7bdat+0x6d4>
    a510:	ldr	r3, [sp, #32]
    a514:	subs	r3, r3, #1
    a518:	str	r3, [sp, #32]
    a51c:	ldr	r3, [sp, #36]	; 0x24
    a520:	sbc	r3, r3, #0
    a524:	str	r3, [sp, #36]	; 0x24
    a528:	ldrd	r2, [sp, #32]
    a52c:	ldr	r0, [r4, #96]	; 0x60
    a530:	cmp	r3, r9
    a534:	cmpeq	r2, r8
    a538:	bhi	a428 <readstat_parse_sas7bdat+0x5c0>
    a53c:	ldr	r3, [sp, #48]	; 0x30
    a540:	mov	r1, #0
    a544:	ldr	r2, [sp, #48]	; 0x30
    a548:	ldr	r0, [r4, #96]	; 0x60
    a54c:	ldr	r3, [r3, #8]
    a550:	ldr	r2, [r2, #20]
    a554:	blx	r3
    a558:	cmn	r0, #1
    a55c:	bne	a664 <readstat_parse_sas7bdat+0x7fc>
    a560:	ldr	r3, [r4, #24]
    a564:	cmp	r3, #0
    a568:	beq	9f58 <readstat_parse_sas7bdat+0xf0>
    a56c:	ldrd	r2, [r4, #96]	; 0x60
    a570:	add	r5, r4, #480	; 0x1e0
    a574:	mov	r1, #2048	; 0x800
    a578:	add	r5, r5, #1
    a57c:	mov	r0, r5
    a580:	strd	r2, [sp]
    a584:	ldr	r2, [pc, #2580]	; afa0 <readstat_parse_sas7bdat+0x1138>
    a588:	add	r2, pc, r2
    a58c:	bl	4294 <snprintf@plt>
    a590:	b	a2e4 <readstat_parse_sas7bdat+0x47c>
    a594:	ands	r3, r0, #36864	; 0x9000
    a598:	str	r3, [sp, #52]	; 0x34
    a59c:	bne	a510 <readstat_parse_sas7bdat+0x6a8>
    a5a0:	ldr	r0, [r4, #120]	; 0x78
    a5a4:	sub	sl, sl, r7
    a5a8:	mov	r1, sl
    a5ac:	ldr	r3, [r5, #12]
    a5b0:	ldr	r2, [r5, #20]
    a5b4:	add	r0, r0, r7
    a5b8:	blx	r3
    a5bc:	cmp	sl, r0
    a5c0:	bhi	a328 <readstat_parse_sas7bdat+0x4c0>
    a5c4:	mov	r2, r4
    a5c8:	ldr	r1, [r4, #112]	; 0x70
    a5cc:	ldr	r0, [r4, #120]	; 0x78
    a5d0:	bl	9cbc <sas7bdat_parse_page_pass1>
    a5d4:	subs	r6, r0, #0
    a5d8:	beq	a648 <readstat_parse_sas7bdat+0x7e0>
    a5dc:	ldr	r3, [r4, #24]
    a5e0:	cmp	r3, #0
    a5e4:	beq	9f5c <readstat_parse_sas7bdat+0xf4>
    a5e8:	cmp	r6, #4
    a5ec:	beq	9f5c <readstat_parse_sas7bdat+0xf4>
    a5f0:	mov	r1, #1
    a5f4:	ldr	r3, [r5, #8]
    a5f8:	ldr	r2, [r5, #20]
    a5fc:	add	r5, r4, #480	; 0x1e0
    a600:	add	r5, r5, #1
    a604:	ldr	r0, [sp, #52]	; 0x34
    a608:	blx	r3
    a60c:	asr	r1, r0, #31
    a610:	subs	r2, r0, #1
    a614:	sbc	r3, r1, #0
    a618:	strd	r2, [sp, #16]
    a61c:	ldr	r3, [r4, #112]	; 0x70
    a620:	ldr	r2, [r4, #116]	; 0x74
    a624:	subs	r3, r0, r3
    a628:	sbc	r2, r1, r2
    a62c:	str	r3, [sp, #8]
    a630:	str	r2, [sp, #12]
    a634:	ldrd	r2, [sp, #32]
    a638:	strd	r2, [sp]
    a63c:	ldr	r2, [pc, #2400]	; afa4 <readstat_parse_sas7bdat+0x113c>
    a640:	add	r2, pc, r2
    a644:	b	a3fc <readstat_parse_sas7bdat+0x594>
    a648:	ldr	r3, [sp, #40]	; 0x28
    a64c:	adds	r3, r3, #1
    a650:	str	r3, [sp, #40]	; 0x28
    a654:	ldr	r3, [sp, #44]	; 0x2c
    a658:	adc	r3, r3, #0
    a65c:	str	r3, [sp, #44]	; 0x2c
    a660:	b	a510 <readstat_parse_sas7bdat+0x6a8>
    a664:	ldr	r3, [r4, #56]	; 0x38
    a668:	mov	r2, #0
    a66c:	str	r3, [sp, #52]	; 0x34
    a670:	mov	r3, #0
    a674:	strd	r2, [sp, #40]	; 0x28
    a678:	ldrd	r0, [sp, #40]	; 0x28
    a67c:	ldrd	r2, [r4, #104]	; 0x68
    a680:	cmp	r1, r3
    a684:	cmpeq	r0, r2
    a688:	bcc	a700 <readstat_parse_sas7bdat+0x898>
    a68c:	mov	r1, #0
    a690:	mov	r0, r4
    a694:	bl	99bc <sas7bdat_submit_columns_if_needed>
    a698:	subs	r6, r0, #0
    a69c:	bne	9f5c <readstat_parse_sas7bdat+0xf4>
    a6a0:	ldr	r3, [r4, #16]
    a6a4:	cmp	r3, #0
    a6a8:	beq	b180 <readstat_parse_sas7bdat+0x1318>
    a6ac:	ldr	r2, [r4, #76]	; 0x4c
    a6b0:	ldr	r3, [r4, #84]	; 0x54
    a6b4:	cmp	r2, r3
    a6b8:	beq	b180 <readstat_parse_sas7bdat+0x1318>
    a6bc:	ldr	r1, [r4, #24]
    a6c0:	cmp	r1, #0
    a6c4:	beq	a6f8 <readstat_parse_sas7bdat+0x890>
    a6c8:	str	r2, [sp]
    a6cc:	add	r5, r4, #480	; 0x1e0
    a6d0:	mov	r1, #2048	; 0x800
    a6d4:	ldr	r2, [pc, #2252]	; afa8 <readstat_parse_sas7bdat+0x1140>
    a6d8:	add	r5, r5, #1
    a6dc:	mov	r0, r5
    a6e0:	add	r2, pc, r2
    a6e4:	bl	4294 <snprintf@plt>
    a6e8:	mov	r0, r5
    a6ec:	ldr	r3, [r4, #24]
    a6f0:	ldr	r1, [r4, #52]	; 0x34
    a6f4:	blx	r3
    a6f8:	mov	r6, #9
    a6fc:	b	9f5c <readstat_parse_sas7bdat+0xf4>
    a700:	mov	r0, r4
    a704:	bl	9330 <sas7bdat_update_progress>
    a708:	subs	r6, r0, #0
    a70c:	bne	9f5c <readstat_parse_sas7bdat+0xf4>
    a710:	ldr	r3, [sp, #52]	; 0x34
    a714:	ldr	r2, [sp, #52]	; 0x34
    a718:	ldr	r1, [r4, #112]	; 0x70
    a71c:	ldr	r3, [r3, #12]
    a720:	ldr	r2, [r2, #20]
    a724:	ldr	r0, [r4, #120]	; 0x78
    a728:	blx	r3
    a72c:	ldrd	r2, [r4, #112]	; 0x70
    a730:	asr	r1, r0, #31
    a734:	cmp	r1, r3
    a738:	strd	r2, [sp, #56]	; 0x38
    a73c:	cmpeq	r0, r2
    a740:	bcc	a328 <readstat_parse_sas7bdat+0x4c0>
    a744:	ldr	r3, [sp, #56]	; 0x38
    a748:	ldr	r0, [r4, #128]	; 0x80
    a74c:	ldr	sl, [r4, #120]	; 0x78
    a750:	str	r3, [sp, #84]	; 0x54
    a754:	ldr	r1, [r4, #60]	; 0x3c
    a758:	sub	r0, r0, #8
    a75c:	add	r0, sl, r0
    a760:	bl	43f0 <sas_read2@plt>
    a764:	and	r3, r0, #3840	; 0xf00
    a768:	cmp	r3, #256	; 0x100
    a76c:	str	r3, [sp, #116]	; 0x74
    a770:	bne	a824 <readstat_parse_sas7bdat+0x9bc>
    a774:	ldr	r1, [r4, #60]	; 0x3c
    a778:	ldr	r0, [r4, #128]	; 0x80
    a77c:	sub	r0, r0, #6
    a780:	add	r0, sl, r0
    a784:	bl	43f0 <sas_read2@plt>
    a788:	ldr	r3, [r4, #128]	; 0x80
    a78c:	str	r0, [r4, #72]	; 0x48
    a790:	add	r3, sl, r3
    a794:	str	r3, [sp, #32]
    a798:	ldr	r3, [sp, #32]
    a79c:	cmp	r3, #0
    a7a0:	beq	a7f8 <readstat_parse_sas7bdat+0x990>
    a7a4:	mov	r1, #0
    a7a8:	mov	r0, r4
    a7ac:	bl	99bc <sas7bdat_submit_columns_if_needed>
    a7b0:	subs	r6, r0, #0
    a7b4:	bne	aa28 <readstat_parse_sas7bdat+0xbc0>
    a7b8:	ldr	r3, [r4, #16]
    a7bc:	cmp	r3, #0
    a7c0:	beq	a7f8 <readstat_parse_sas7bdat+0x990>
    a7c4:	ldr	r3, [sp, #56]	; 0x38
    a7c8:	mov	r5, r6
    a7cc:	mov	r8, r6
    a7d0:	add	r7, sl, r3
    a7d4:	ldr	r3, [sp, #32]
    a7d8:	sub	r7, r7, r3
    a7dc:	ldr	r1, [r4, #72]	; 0x48
    a7e0:	ldr	r3, [r4, #76]	; 0x4c
    a7e4:	ldr	r2, [r4, #84]	; 0x54
    a7e8:	cmp	r8, r1
    a7ec:	bcs	a7f8 <readstat_parse_sas7bdat+0x990>
    a7f0:	cmp	r2, r3
    a7f4:	bhi	b148 <readstat_parse_sas7bdat+0x12e0>
    a7f8:	ldr	r2, [r4, #76]	; 0x4c
    a7fc:	ldr	r3, [r4, #84]	; 0x54
    a800:	cmp	r2, r3
    a804:	beq	a68c <readstat_parse_sas7bdat+0x824>
    a808:	ldr	r3, [sp, #40]	; 0x28
    a80c:	adds	r3, r3, #1
    a810:	str	r3, [sp, #40]	; 0x28
    a814:	ldr	r3, [sp, #44]	; 0x2c
    a818:	adc	r3, r3, #0
    a81c:	str	r3, [sp, #44]	; 0x2c
    a820:	b	a678 <readstat_parse_sas7bdat+0x810>
    a824:	ands	r5, r0, #36864	; 0x9000
    a828:	bne	a7f8 <readstat_parse_sas7bdat+0x990>
    a82c:	ldr	r1, [r4, #60]	; 0x3c
    a830:	ldr	r0, [r4, #128]	; 0x80
    a834:	sub	r0, r0, #4
    a838:	add	r0, sl, r0
    a83c:	bl	43f0 <sas_read2@plt>
    a840:	ldrd	r6, [r4, #128]	; 0x80
    a844:	str	r0, [sp, #72]	; 0x48
    a848:	str	r5, [sp, #92]	; 0x5c
    a84c:	add	r3, sl, r6
    a850:	str	r3, [sp, #32]
    a854:	ldr	r3, [r4, #144]	; 0x90
    a858:	mul	r1, r3, r0
    a85c:	str	r3, [sp, #112]	; 0x70
    a860:	adds	r2, r6, r1
    a864:	adc	r3, r7, r1, asr #31
    a868:	ldr	r1, [sp, #56]	; 0x38
    a86c:	str	r1, [sp, #88]	; 0x58
    a870:	ldrd	r0, [sp, #88]	; 0x58
    a874:	cmp	r3, r1
    a878:	cmpeq	r2, r0
    a87c:	bhi	aae4 <readstat_parse_sas7bdat+0xc7c>
    a880:	str	r5, [sp, #76]	; 0x4c
    a884:	ldr	r3, [sp, #72]	; 0x48
    a888:	ldr	r2, [sp, #76]	; 0x4c
    a88c:	cmp	r3, r2
    a890:	bgt	a8f0 <readstat_parse_sas7bdat+0xa88>
    a894:	ldr	r3, [sp, #116]	; 0x74
    a898:	cmp	r3, #512	; 0x200
    a89c:	bne	a7f8 <readstat_parse_sas7bdat+0x990>
    a8a0:	ldr	r3, [sp, #32]
    a8a4:	sub	r3, r3, sl
    a8a8:	rsbs	r2, r3, #0
    a8ac:	and	r3, r3, #7
    a8b0:	and	r2, r2, #7
    a8b4:	rsbpl	r3, r2, #0
    a8b8:	cmp	r3, #4
    a8bc:	bne	a798 <readstat_parse_sas7bdat+0x930>
    a8c0:	ldr	r3, [sp, #32]
    a8c4:	ldr	r2, [pc, #1760]	; afac <readstat_parse_sas7bdat+0x1144>
    a8c8:	ldr	r3, [r3]
    a8cc:	cmp	r3, r2
    a8d0:	cmpne	r3, #0
    a8d4:	beq	a8e4 <readstat_parse_sas7bdat+0xa7c>
    a8d8:	ldr	r3, [r4, #48]	; 0x30
    a8dc:	cmp	r3, #0
    a8e0:	beq	a7a4 <readstat_parse_sas7bdat+0x93c>
    a8e4:	ldr	r3, [sp, #32]
    a8e8:	add	r3, r3, #4
    a8ec:	b	a794 <readstat_parse_sas7bdat+0x92c>
    a8f0:	add	r7, sp, #136	; 0x88
    a8f4:	mov	r2, #24
    a8f8:	mov	r1, #0
    a8fc:	mov	r0, r7
    a900:	bl	42b8 <memset@plt>
    a904:	ldr	r0, [sp, #32]
    a908:	mov	r2, r7
    a90c:	ldr	r3, [sp, #84]	; 0x54
    a910:	add	r1, sl, r3
    a914:	mov	r3, r4
    a918:	sub	r1, r1, r0
    a91c:	bl	9678 <sas7bdat_parse_subheader_pointer>
    a920:	subs	r6, r0, #0
    a924:	bne	aa28 <readstat_parse_sas7bdat+0xbc0>
    a928:	ldrd	r2, [sp, #144]	; 0x90
    a92c:	orrs	r3, r2, r3
    a930:	beq	b290 <readstat_parse_sas7bdat+0x1428>
    a934:	ldrb	r5, [sp, #152]	; 0x98
    a938:	cmp	r5, #1
    a93c:	beq	b290 <readstat_parse_sas7bdat+0x1428>
    a940:	mov	r3, r4
    a944:	mov	r0, r7
    a948:	ldr	r2, [sp, #72]	; 0x48
    a94c:	ldr	r1, [sp, #84]	; 0x54
    a950:	bl	9354 <sas7bdat_validate_subheader_pointer>
    a954:	subs	r6, r0, #0
    a958:	bne	aa28 <readstat_parse_sas7bdat+0xbc0>
    a95c:	cmp	r5, #0
    a960:	bne	ae98 <readstat_parse_sas7bdat+0x1030>
    a964:	ldr	r0, [sp, #136]	; 0x88
    a968:	ldr	r1, [r4, #60]	; 0x3c
    a96c:	add	r0, sl, r0
    a970:	bl	4414 <sas_read4@plt>
    a974:	ldr	r3, [r4, #40]	; 0x28
    a978:	cmp	r3, #0
    a97c:	cmneq	r0, #1
    a980:	bne	a9a8 <readstat_parse_sas7bdat+0xb40>
    a984:	ldr	r3, [r4, #44]	; 0x2c
    a988:	cmp	r3, #0
    a98c:	mvneq	r0, #0
    a990:	beq	a9a8 <readstat_parse_sas7bdat+0xb40>
    a994:	ldr	r0, [sp, #136]	; 0x88
    a998:	ldr	r1, [r4, #60]	; 0x3c
    a99c:	add	r0, r0, #4
    a9a0:	add	r0, sl, r0
    a9a4:	bl	4414 <sas_read4@plt>
    a9a8:	ldrb	r3, [sp, #153]	; 0x99
    a9ac:	cmp	r3, #0
    a9b0:	beq	aa9c <readstat_parse_sas7bdat+0xc34>
    a9b4:	ldr	r2, [pc, #1524]	; afb0 <readstat_parse_sas7bdat+0x1148>
    a9b8:	ldr	r3, [pc, #1524]	; afb4 <readstat_parse_sas7bdat+0x114c>
    a9bc:	cmp	r0, r3
    a9c0:	cmpne	r0, r2
    a9c4:	beq	aa9c <readstat_parse_sas7bdat+0xc34>
    a9c8:	add	r3, r0, #1024	; 0x400
    a9cc:	add	r3, r3, #2
    a9d0:	bics	r3, r3, #2
    a9d4:	beq	aa9c <readstat_parse_sas7bdat+0xc34>
    a9d8:	bic	r3, r0, #7
    a9dc:	cmn	r3, #8
    a9e0:	beq	aa9c <readstat_parse_sas7bdat+0xc34>
    a9e4:	ldrd	r2, [sp, #144]	; 0x90
    a9e8:	mov	r1, #0
    a9ec:	ldr	r0, [r4, #68]	; 0x44
    a9f0:	cmp	r3, r1
    a9f4:	cmpeq	r2, r0
    a9f8:	bne	b11c <readstat_parse_sas7bdat+0x12b4>
    a9fc:	mov	r1, #1
    aa00:	mov	r0, r4
    aa04:	bl	99bc <sas7bdat_submit_columns_if_needed>
    aa08:	subs	r6, r0, #0
    aa0c:	bne	aa28 <readstat_parse_sas7bdat+0xbc0>
    aa10:	ldr	r0, [sp, #136]	; 0x88
    aa14:	mov	r1, r4
    aa18:	add	r0, sl, r0
    aa1c:	bl	9710 <sas7bdat_parse_single_row>
    aa20:	subs	r6, r0, #0
    aa24:	beq	b290 <readstat_parse_sas7bdat+0x1428>
    aa28:	ldr	r3, [r4, #24]
    aa2c:	cmp	r3, #0
    aa30:	beq	9f5c <readstat_parse_sas7bdat+0xf4>
    aa34:	cmp	r6, #4
    aa38:	beq	9f5c <readstat_parse_sas7bdat+0xf4>
    aa3c:	ldr	r3, [sp, #52]	; 0x34
    aa40:	mov	r1, #1
    aa44:	mov	r0, #0
    aa48:	add	r5, r4, #480	; 0x1e0
    aa4c:	ldr	r2, [sp, #52]	; 0x34
    aa50:	add	r5, r5, #1
    aa54:	ldr	r3, [r3, #8]
    aa58:	ldr	r2, [r2, #20]
    aa5c:	blx	r3
    aa60:	asr	r1, r0, #31
    aa64:	subs	r2, r0, #1
    aa68:	sbc	r3, r1, #0
    aa6c:	strd	r2, [sp, #16]
    aa70:	ldr	r3, [r4, #112]	; 0x70
    aa74:	ldr	r2, [r4, #116]	; 0x74
    aa78:	subs	r3, r0, r3
    aa7c:	sbc	r2, r1, r2
    aa80:	str	r3, [sp, #8]
    aa84:	str	r2, [sp, #12]
    aa88:	ldrd	r2, [sp, #40]	; 0x28
    aa8c:	strd	r2, [sp]
    aa90:	ldr	r2, [pc, #1312]	; afb8 <readstat_parse_sas7bdat+0x1150>
    aa94:	add	r2, pc, r2
    aa98:	b	a3fc <readstat_parse_sas7bdat+0x594>
    aa9c:	cmn	r0, #3
    aaa0:	beq	b290 <readstat_parse_sas7bdat+0x1428>
    aaa4:	ldr	r8, [r4, #136]	; 0x88
    aaa8:	mov	r2, #0
    aaac:	ldr	r3, [r4, #140]	; 0x8c
    aab0:	str	r2, [sp, #100]	; 0x64
    aab4:	ldr	r5, [sp, #136]	; 0x88
    aab8:	adds	r2, r8, #2
    aabc:	ldr	r9, [sp, #144]	; 0x90
    aac0:	adc	r3, r3, #0
    aac4:	add	r5, sl, r5
    aac8:	str	r9, [sp, #96]	; 0x60
    aacc:	strd	r2, [sp, #104]	; 0x68
    aad0:	ldrd	r2, [sp, #96]	; 0x60
    aad4:	ldrd	r6, [sp, #104]	; 0x68
    aad8:	cmp	r3, r7
    aadc:	cmpeq	r2, r6
    aae0:	bcs	aaec <readstat_parse_sas7bdat+0xc84>
    aae4:	mov	r6, #5
    aae8:	b	aa28 <readstat_parse_sas7bdat+0xbc0>
    aaec:	ldr	r3, [pc, #1212]	; afb0 <readstat_parse_sas7bdat+0x1148>
    aaf0:	cmp	r0, r3
    aaf4:	bne	ab54 <readstat_parse_sas7bdat+0xcec>
    aaf8:	ldr	r3, [r4, #44]	; 0x2c
    aafc:	cmp	r3, #0
    ab00:	bne	b1e8 <readstat_parse_sas7bdat+0x1380>
    ab04:	cmp	r9, #63	; 0x3f
    ab08:	bls	aae4 <readstat_parse_sas7bdat+0xc7c>
    ab0c:	add	r0, r5, #20
    ab10:	ldr	r1, [r4, #60]	; 0x3c
    ab14:	mov	r7, #0
    ab18:	bl	4414 <sas_read4@plt>
    ab1c:	mov	r8, r0
    ab20:	add	r0, r5, #24
    ab24:	ldr	r1, [r4, #60]	; 0x3c
    ab28:	bl	4414 <sas_read4@plt>
    ab2c:	mov	r6, r0
    ab30:	add	r0, r5, #60	; 0x3c
    ab34:	ldr	r1, [r4, #60]	; 0x3c
    ab38:	bl	4414 <sas_read4@plt>
    ab3c:	b	b220 <readstat_parse_sas7bdat+0x13b8>
    ab40:	mov	r2, #0
    ab44:	mov	r3, #0
    ab48:	str	r6, [r4, #88]	; 0x58
    ab4c:	strd	r2, [sp, #64]	; 0x40
    ab50:	b	b268 <readstat_parse_sas7bdat+0x1400>
    ab54:	ldr	r3, [pc, #1112]	; afb4 <readstat_parse_sas7bdat+0x114c>
    ab58:	cmp	r0, r3
    ab5c:	bne	ab9c <readstat_parse_sas7bdat+0xd34>
    ab60:	ldr	r3, [r4, #80]	; 0x50
    ab64:	cmp	r3, #0
    ab68:	bne	aae4 <readstat_parse_sas7bdat+0xc7c>
    ab6c:	ldr	r3, [r4, #64]	; 0x40
    ab70:	cmp	r3, #0
    ab74:	bne	aae4 <readstat_parse_sas7bdat+0xc7c>
    ab78:	ldr	r3, [r4, #44]	; 0x2c
    ab7c:	cmp	r3, #0
    ab80:	bne	b2b0 <readstat_parse_sas7bdat+0x1448>
    ab84:	cmp	r9, #7
    ab88:	bls	aae4 <readstat_parse_sas7bdat+0xc7c>
    ab8c:	add	r0, r5, #4
    ab90:	ldr	r1, [r4, #60]	; 0x3c
    ab94:	bl	4414 <sas_read4@plt>
    ab98:	b	b2c4 <readstat_parse_sas7bdat+0x145c>
    ab9c:	cmn	r0, #1024	; 0x400
    aba0:	beq	b290 <readstat_parse_sas7bdat+0x1428>
    aba4:	cmn	r0, #1
    aba8:	bne	ac6c <readstat_parse_sas7bdat+0xe04>
    abac:	ldr	r3, [r4, #44]	; 0x2c
    abb0:	add	r0, r5, r8
    abb4:	ldr	r1, [r4, #60]	; 0x3c
    abb8:	cmp	r3, #0
    abbc:	subne	r6, r9, #28
    abc0:	subeq	r6, r9, #20
    abc4:	bl	43f0 <sas_read2@plt>
    abc8:	lsr	r7, r6, #3
    abcc:	mov	r1, r8
    abd0:	mov	r6, r0
    abd4:	mov	r0, r9
    abd8:	bl	43d8 <sas_subheader_remainder@plt>
    abdc:	cmp	r6, r0
    abe0:	bne	aae4 <readstat_parse_sas7bdat+0xc7c>
    abe4:	ldr	r1, [r4, #164]	; 0xa4
    abe8:	mov	r0, r4
    abec:	add	r1, r7, r1
    abf0:	str	r1, [r4, #164]	; 0xa4
    abf4:	bl	94b4 <sas7bdat_realloc_col_info>
    abf8:	subs	r6, r0, #0
    abfc:	bne	aa28 <readstat_parse_sas7bdat+0xbc0>
    ac00:	ldr	r6, [r4, #164]	; 0xa4
    ac04:	add	r8, r8, #8
    ac08:	add	r3, r4, #60	; 0x3c
    ac0c:	add	r5, r5, r8
    ac10:	str	r3, [sp, #120]	; 0x78
    ac14:	sub	r6, r6, r7
    ac18:	add	r7, sp, #128	; 0x80
    ac1c:	ldr	r3, [r4, #164]	; 0xa4
    ac20:	cmp	r6, r3
    ac24:	bge	b290 <readstat_parse_sas7bdat+0x1428>
    ac28:	mov	r3, #40	; 0x28
    ac2c:	ldr	r9, [r4, #192]	; 0xc0
    ac30:	mov	r1, r5
    ac34:	mov	r0, r7
    ac38:	add	r5, r5, #8
    ac3c:	mul	r8, r3, r6
    ac40:	ldr	r2, [sp, #120]	; 0x78
    ac44:	add	r6, r6, #1
    ac48:	add	r3, r9, r8
    ac4c:	str	r3, [sp, #124]	; 0x7c
    ac50:	bl	9628 <sas7bdat_parse_text_ref.isra.0>
    ac54:	ldr	r0, [r7]
    ac58:	ldr	r3, [sp, #124]	; 0x7c
    ac5c:	str	r0, [r9, r8]
    ac60:	ldrh	r2, [r7, #4]
    ac64:	strh	r2, [r3, #4]
    ac68:	b	ac1c <readstat_parse_sas7bdat+0xdb4>
    ac6c:	cmn	r0, #4
    ac70:	bne	adbc <readstat_parse_sas7bdat+0xf54>
    ac74:	ldr	r3, [r4, #44]	; 0x2c
    ac78:	add	r0, r5, r8
    ac7c:	ldr	r1, [r4, #60]	; 0x3c
    ac80:	cmp	r3, #0
    ac84:	subeq	r7, r9, #20
    ac88:	moveq	r3, #12
    ac8c:	subne	r7, r9, #28
    ac90:	lsrne	r7, r7, #4
    ac94:	udiveq	r7, r7, r3
    ac98:	bl	43f0 <sas_read2@plt>
    ac9c:	mov	r6, r0
    aca0:	mov	r1, r8
    aca4:	mov	r0, r9
    aca8:	bl	43d8 <sas_subheader_remainder@plt>
    acac:	cmp	r6, r0
    acb0:	bne	aae4 <readstat_parse_sas7bdat+0xc7c>
    acb4:	ldr	r1, [r4, #168]	; 0xa8
    acb8:	mov	r0, r4
    acbc:	add	r1, r7, r1
    acc0:	str	r1, [r4, #168]	; 0xa8
    acc4:	bl	94b4 <sas7bdat_realloc_col_info>
    acc8:	subs	r6, r0, #0
    accc:	bne	aa28 <readstat_parse_sas7bdat+0xbc0>
    acd0:	ldr	r3, [r4, #168]	; 0xa8
    acd4:	add	r8, r8, #8
    acd8:	add	r5, r5, r8
    acdc:	sub	r7, r3, r7
    ace0:	ldr	r3, [r4, #168]	; 0xa8
    ace4:	cmp	r7, r3
    ace8:	bge	b290 <readstat_parse_sas7bdat+0x1428>
    acec:	ldr	r8, [r4, #44]	; 0x2c
    acf0:	mov	r3, #40	; 0x28
    acf4:	mul	r9, r3, r7
    acf8:	ldr	r1, [r4, #60]	; 0x3c
    acfc:	cmp	r8, #0
    ad00:	beq	ada0 <readstat_parse_sas7bdat+0xf38>
    ad04:	ldr	r8, [r4, #192]	; 0xc0
    ad08:	mov	r0, r5
    ad0c:	bl	43e4 <sas_read8@plt>
    ad10:	add	r8, r8, r9
    ad14:	strd	r0, [r8, #24]
    ad18:	ldr	r3, [r4, #44]	; 0x2c
    ad1c:	ldr	r1, [r4, #60]	; 0x3c
    ad20:	cmp	r3, #0
    ad24:	ldr	r3, [r4, #192]	; 0xc0
    ad28:	moveq	r8, #4
    ad2c:	movne	r8, #8
    ad30:	add	r2, r3, r9
    ad34:	add	r3, r5, r8
    ad38:	mov	r0, r3
    ad3c:	str	r3, [sp, #120]	; 0x78
    ad40:	str	r2, [sp, #124]	; 0x7c
    ad44:	bl	4414 <sas_read4@plt>
    ad48:	ldr	r1, [r4, #176]	; 0xb0
    ad4c:	ldr	r2, [sp, #124]	; 0x7c
    ad50:	ldr	r3, [sp, #120]	; 0x78
    ad54:	str	r0, [r2, #32]
    ad58:	ldr	r2, [r4, #192]	; 0xc0
    ad5c:	add	r9, r2, r9
    ad60:	ldr	r2, [r9, #32]
    ad64:	cmp	r2, r1
    ad68:	strhi	r2, [r4, #176]	; 0xb0
    ad6c:	ldrb	r3, [r3, #6]
    ad70:	cmp	r3, #1
    ad74:	moveq	r3, #5
    ad78:	streq	r3, [r9, #36]	; 0x24
    ad7c:	beq	ad8c <readstat_parse_sas7bdat+0xf24>
    ad80:	cmp	r3, #2
    ad84:	bne	aae4 <readstat_parse_sas7bdat+0xc7c>
    ad88:	str	r6, [r9, #36]	; 0x24
    ad8c:	add	r8, r8, #8
    ad90:	str	r7, [r9, #20]
    ad94:	add	r7, r7, #1
    ad98:	add	r5, r5, r8
    ad9c:	b	ace0 <readstat_parse_sas7bdat+0xe78>
    ada0:	mov	r0, r5
    ada4:	bl	4414 <sas_read4@plt>
    ada8:	ldr	r3, [r4, #192]	; 0xc0
    adac:	add	r3, r3, r9
    adb0:	str	r0, [r3, #24]
    adb4:	str	r8, [r3, #28]
    adb8:	b	ad18 <readstat_parse_sas7bdat+0xeb0>
    adbc:	ldr	r3, [pc, #504]	; afbc <readstat_parse_sas7bdat+0x1154>
    adc0:	cmp	r0, r3
    adc4:	bne	ae80 <readstat_parse_sas7bdat+0x1018>
    adc8:	ldr	r3, [r4, #44]	; 0x2c
    adcc:	cmp	r3, #0
    add0:	movne	r3, #58	; 0x3a
    add4:	moveq	r3, #46	; 0x2e
    add8:	cmp	r9, r3
    addc:	bcc	aae4 <readstat_parse_sas7bdat+0xc7c>
    ade0:	ldr	r1, [r4, #172]	; 0xac
    ade4:	mov	r0, r4
    ade8:	add	r1, r1, #1
    adec:	str	r1, [r4, #172]	; 0xac
    adf0:	bl	94b4 <sas7bdat_realloc_col_info>
    adf4:	subs	r6, r0, #0
    adf8:	bne	aa28 <readstat_parse_sas7bdat+0xbc0>
    adfc:	ldr	r3, [r4, #44]	; 0x2c
    ae00:	add	r6, sp, #128	; 0x80
    ae04:	add	r9, r4, #60	; 0x3c
    ae08:	mov	r7, #40	; 0x28
    ae0c:	mov	r2, r9
    ae10:	ldr	r8, [r4, #172]	; 0xac
    ae14:	mov	r0, r6
    ae18:	cmp	r3, #0
    ae1c:	ldr	r3, [r4, #192]	; 0xc0
    ae20:	addne	r1, r5, #46	; 0x2e
    ae24:	addeq	r1, r5, #34	; 0x22
    ae28:	mla	r8, r7, r8, r3
    ae2c:	bl	9628 <sas7bdat_parse_text_ref.isra.0>
    ae30:	ldr	r3, [r6]
    ae34:	ldr	r2, [r4, #172]	; 0xac
    ae38:	str	r3, [r8, #-34]	; 0xffffffde
    ae3c:	ldrh	r3, [r6, #4]
    ae40:	strh	r3, [r8, #-30]	; 0xffffffe2
    ae44:	ldr	r3, [r4, #44]	; 0x2c
    ae48:	cmp	r3, #0
    ae4c:	ldr	r3, [r4, #192]	; 0xc0
    ae50:	addne	r1, r5, #52	; 0x34
    ae54:	addeq	r1, r5, #40	; 0x28
    ae58:	add	r5, sp, #128	; 0x80
    ae5c:	mov	r0, r5
    ae60:	mla	r7, r7, r2, r3
    ae64:	mov	r2, r9
    ae68:	bl	9628 <sas7bdat_parse_text_ref.isra.0>
    ae6c:	ldr	r0, [r5]
    ae70:	str	r0, [r7, #-28]	; 0xffffffe4
    ae74:	ldrh	r3, [r5, #4]
    ae78:	strh	r3, [r7, #-24]	; 0xffffffe8
    ae7c:	b	b290 <readstat_parse_sas7bdat+0x1428>
    ae80:	cmn	r0, #2
    ae84:	beq	b290 <readstat_parse_sas7bdat+0x1428>
    ae88:	bic	r0, r0, #7
    ae8c:	cmn	r0, #8
    ae90:	bne	aae4 <readstat_parse_sas7bdat+0xc7c>
    ae94:	b	b290 <readstat_parse_sas7bdat+0x1428>
    ae98:	cmp	r5, #4
    ae9c:	bne	b140 <readstat_parse_sas7bdat+0x12d8>
    aea0:	mov	r1, #1
    aea4:	mov	r0, r4
    aea8:	bl	99bc <sas7bdat_submit_columns_if_needed>
    aeac:	subs	r6, r0, #0
    aeb0:	bne	aa28 <readstat_parse_sas7bdat+0xbc0>
    aeb4:	ldrb	r3, [r4, #2529]	; 0x9e1
    aeb8:	ldr	r5, [sp, #136]	; 0x88
    aebc:	ldr	r6, [sp, #144]	; 0x90
    aec0:	tst	r3, #1
    aec4:	add	r5, sl, r5
    aec8:	beq	b0ac <readstat_parse_sas7bdat+0x1244>
    aecc:	ldr	r0, [r4, #68]	; 0x44
    aed0:	add	r6, r5, r6
    aed4:	bl	412c <malloc@plt>
    aed8:	mov	r7, r0
    aedc:	add	ip, r5, #2
    aee0:	cmp	r6, ip
    aee4:	bcs	af0c <readstat_parse_sas7bdat+0x10a4>
    aee8:	ldr	r3, [r4, #68]	; 0x44
    aeec:	sub	r0, r0, r7
    aef0:	cmp	r0, r3
    aef4:	bne	af54 <readstat_parse_sas7bdat+0x10ec>
    aef8:	mov	r1, r4
    aefc:	mov	r0, r7
    af00:	bl	9710 <sas7bdat_parse_single_row>
    af04:	mov	r6, r0
    af08:	b	af58 <readstat_parse_sas7bdat+0x10f0>
    af0c:	ldrb	r3, [r5]
    af10:	mov	r9, #15
    af14:	ldrb	r8, [r5, #1]
    af18:	add	r8, r8, r3, lsl #8
    af1c:	uxth	r3, r8
    af20:	str	r3, [sp, #120]	; 0x78
    af24:	ldr	r3, [sp, #120]	; 0x78
    af28:	asr	r3, r3, r9
    af2c:	tst	r3, #1
    af30:	bne	afc4 <readstat_parse_sas7bdat+0x115c>
    af34:	add	r2, ip, #1
    af38:	cmp	r2, r6
    af3c:	bhi	af80 <readstat_parse_sas7bdat+0x1118>
    af40:	ldr	r3, [r4, #68]	; 0x44
    af44:	add	r1, r0, #1
    af48:	add	r3, r7, r3
    af4c:	cmp	r1, r3
    af50:	bls	af68 <readstat_parse_sas7bdat+0x1100>
    af54:	mov	r6, #10
    af58:	mov	r0, r7
    af5c:	bl	3ed4 <free@plt>
    af60:	cmp	r6, #0
    af64:	b	aa24 <readstat_parse_sas7bdat+0xbbc>
    af68:	ldrb	r3, [ip]
    af6c:	mov	ip, r2
    af70:	strb	r3, [r0]
    af74:	mov	r0, r1
    af78:	subs	r9, r9, #1
    af7c:	bcs	af24 <readstat_parse_sas7bdat+0x10bc>
    af80:	mov	r5, ip
    af84:	b	aedc <readstat_parse_sas7bdat+0x1074>
    af88:	.word	0x00016ef6
    af8c:	.word	0x00016cfd
    af90:	.word	0x00016cd1
    af94:	.word	0x00016b03
    af98:	.word	0x00016a1e
    af9c:	.word	0x0001692b
    afa0:	.word	0x000166d6
    afa4:	.word	0x000167d6
    afa8:	.word	0x000167a9
    afac:	.word	0x20202020
    afb0:	.word	0xf7f7f7f7
    afb4:	.word	0xf6f6f6f6
    afb8:	.word	0x00016382
    afbc:	.word	0xfffffbfe
    afc0:	.word	0x00015d45
    afc4:	add	r5, ip, #2
    afc8:	cmp	r6, r5
    afcc:	bcc	b084 <readstat_parse_sas7bdat+0x121c>
    afd0:	ldrb	r3, [ip]
    afd4:	ldrb	r1, [ip, #1]
    afd8:	cmp	r3, #15
    afdc:	addls	r2, r3, #3
    afe0:	bls	b010 <readstat_parse_sas7bdat+0x11a8>
    afe4:	lsr	r2, r3, #4
    afe8:	cmp	r2, #1
    afec:	bne	b034 <readstat_parse_sas7bdat+0x11cc>
    aff0:	add	r5, ip, #3
    aff4:	cmp	r6, r5
    aff8:	bcc	b084 <readstat_parse_sas7bdat+0x121c>
    affc:	and	r3, r3, #15
    b000:	mov	r2, #16
    b004:	add	r3, r3, #19
    b008:	smlabb	r2, r2, r1, r3
    b00c:	ldrb	r1, [ip, #2]
    b010:	add	r8, r0, r2
    b014:	ldr	r3, [r4, #68]	; 0x44
    b018:	add	r3, r7, r3
    b01c:	cmp	r8, r3
    b020:	bhi	af54 <readstat_parse_sas7bdat+0x10ec>
    b024:	bl	42b8 <memset@plt>
    b028:	mov	r0, r8
    b02c:	mov	ip, r5
    b030:	b	af78 <readstat_parse_sas7bdat+0x1110>
    b034:	cmp	r2, #2
    b038:	bne	b050 <readstat_parse_sas7bdat+0x11e8>
    b03c:	add	r5, ip, #3
    b040:	cmp	r6, r5
    b044:	bcc	b084 <readstat_parse_sas7bdat+0x121c>
    b048:	ldrb	r2, [ip, #2]
    b04c:	add	r2, r2, #16
    b050:	and	r3, r3, #15
    b054:	mov	ip, #16
    b058:	add	r3, r3, #3
    b05c:	smlabb	r1, ip, r1, r3
    b060:	sub	r3, r0, r7
    b064:	cmp	r2, r1
    b068:	movls	ip, #0
    b06c:	movhi	ip, #1
    b070:	cmp	r3, r1
    b074:	movcs	r3, ip
    b078:	orrcc	r3, ip, #1
    b07c:	cmp	r3, #0
    b080:	beq	b08c <readstat_parse_sas7bdat+0x1224>
    b084:	mov	r6, #5
    b088:	b	af58 <readstat_parse_sas7bdat+0x10f0>
    b08c:	ldr	r3, [r4, #68]	; 0x44
    b090:	add	r8, r0, r2
    b094:	add	r3, r7, r3
    b098:	cmp	r8, r3
    b09c:	bhi	af54 <readstat_parse_sas7bdat+0x10ec>
    b0a0:	sub	r1, r0, r1
    b0a4:	bl	3f34 <memcpy@plt>
    b0a8:	b	b028 <readstat_parse_sas7bdat+0x11c0>
    b0ac:	ldr	r3, [r4, #76]	; 0x4c
    b0b0:	ldr	r2, [r4, #84]	; 0x54
    b0b4:	cmp	r2, r3
    b0b8:	beq	b290 <readstat_parse_sas7bdat+0x1428>
    b0bc:	mov	r3, r6
    b0c0:	mov	r2, r5
    b0c4:	ldr	r1, [r4, #68]	; 0x44
    b0c8:	ldr	r0, [r4, #124]	; 0x7c
    b0cc:	bl	4090 <sas_rle_decompress@plt>
    b0d0:	ldr	r3, [r4, #68]	; 0x44
    b0d4:	cmp	r3, r0
    b0d8:	beq	b124 <readstat_parse_sas7bdat+0x12bc>
    b0dc:	ldr	r2, [r4, #24]
    b0e0:	cmp	r2, #0
    b0e4:	beq	b11c <readstat_parse_sas7bdat+0x12b4>
    b0e8:	ldr	r2, [pc, #-304]	; afc0 <readstat_parse_sas7bdat+0x1158>
    b0ec:	add	r5, r4, #480	; 0x1e0
    b0f0:	mov	r1, #2048	; 0x800
    b0f4:	add	r5, r5, #1
    b0f8:	stm	sp, {r0, r3}
    b0fc:	mov	r0, r5
    b100:	ldr	r3, [r4, #76]	; 0x4c
    b104:	add	r2, pc, r2
    b108:	bl	4294 <snprintf@plt>
    b10c:	mov	r0, r5
    b110:	ldr	r3, [r4, #24]
    b114:	ldr	r1, [r4, #52]	; 0x34
    b118:	blx	r3
    b11c:	mov	r6, #10
    b120:	b	aa28 <readstat_parse_sas7bdat+0xbc0>
    b124:	mov	r1, r4
    b128:	ldr	r0, [r4, #124]	; 0x7c
    b12c:	bl	9710 <sas7bdat_parse_single_row>
    b130:	mov	r6, r0
    b134:	b	af60 <readstat_parse_sas7bdat+0x10f8>
    b138:	mov	r6, #3
    b13c:	b	aa28 <readstat_parse_sas7bdat+0xbc0>
    b140:	mov	r6, #6
    b144:	b	aa28 <readstat_parse_sas7bdat+0xbc0>
    b148:	ldr	r3, [r4, #68]	; 0x44
    b14c:	add	r3, r5, r3
    b150:	cmp	r7, r3
    b154:	bcc	b11c <readstat_parse_sas7bdat+0x12b4>
    b158:	ldr	r3, [sp, #32]
    b15c:	mov	r1, r4
    b160:	add	r0, r3, r5
    b164:	bl	9710 <sas7bdat_parse_single_row>
    b168:	subs	r6, r0, #0
    b16c:	bne	aa28 <readstat_parse_sas7bdat+0xbc0>
    b170:	ldr	r3, [r4, #68]	; 0x44
    b174:	add	r8, r8, #1
    b178:	add	r5, r5, r3
    b17c:	b	a7dc <readstat_parse_sas7bdat+0x974>
    b180:	mov	r0, r4
    b184:	bl	9330 <sas7bdat_update_progress>
    b188:	mov	r6, r0
    b18c:	b	9f5c <readstat_parse_sas7bdat+0xf4>
    b190:	ldr	r0, [r0, r5, lsl #2]
    b194:	add	r5, r5, #1
    b198:	bl	3ed4 <free@plt>
    b19c:	ldr	r3, [r4, #152]	; 0x98
    b1a0:	ldr	r0, [r4, #160]	; 0xa0
    b1a4:	cmp	r5, r3
    b1a8:	blt	b190 <readstat_parse_sas7bdat+0x1328>
    b1ac:	bl	3ed4 <free@plt>
    b1b0:	ldr	r0, [r4, #156]	; 0x9c
    b1b4:	bl	3ed4 <free@plt>
    b1b8:	b	9ff4 <readstat_parse_sas7bdat+0x18c>
    b1bc:	ldr	r0, [r0, r5, lsl #2]
    b1c0:	cmp	r0, #0
    b1c4:	beq	b1cc <readstat_parse_sas7bdat+0x1364>
    b1c8:	bl	3ed4 <free@plt>
    b1cc:	add	r5, r5, #1
    b1d0:	ldr	r3, [r4, #80]	; 0x50
    b1d4:	ldr	r0, [r4, #196]	; 0xc4
    b1d8:	cmp	r5, r3
    b1dc:	bcc	b1bc <readstat_parse_sas7bdat+0x1354>
    b1e0:	bl	3ed4 <free@plt>
    b1e4:	b	a004 <readstat_parse_sas7bdat+0x19c>
    b1e8:	cmp	r9, #127	; 0x7f
    b1ec:	bls	aae4 <readstat_parse_sas7bdat+0xc7c>
    b1f0:	add	r0, r5, #40	; 0x28
    b1f4:	ldr	r1, [r4, #60]	; 0x3c
    b1f8:	bl	43e4 <sas_read8@plt>
    b1fc:	mov	r8, r0
    b200:	add	r0, r5, #48	; 0x30
    b204:	ldr	r1, [r4, #60]	; 0x3c
    b208:	bl	43e4 <sas_read8@plt>
    b20c:	mov	r6, r0
    b210:	mov	r7, r1
    b214:	ldr	r1, [r4, #60]	; 0x3c
    b218:	add	r0, r5, #120	; 0x78
    b21c:	bl	43e4 <sas_read8@plt>
    b220:	mov	r5, r0
    b224:	mov	r1, r8
    b228:	ldr	r0, [r4, #124]	; 0x7c
    b22c:	str	r8, [r4, #68]	; 0x44
    b230:	bl	4300 <readstat_realloc@plt>
    b234:	cmp	r0, #0
    b238:	str	r0, [r4, #124]	; 0x7c
    b23c:	beq	b138 <readstat_parse_sas7bdat+0x12d0>
    b240:	ldr	r2, [r4, #88]	; 0x58
    b244:	mov	r3, #0
    b248:	cmp	r3, r7
    b24c:	str	r5, [r4, #72]	; 0x48
    b250:	cmpeq	r2, r6
    b254:	bcs	ab40 <readstat_parse_sas7bdat+0xcd8>
    b258:	subs	r1, r6, r2
    b25c:	sbc	r3, r7, r3
    b260:	str	r1, [sp, #64]	; 0x40
    b264:	str	r3, [sp, #68]	; 0x44
    b268:	ldr	r2, [r4, #84]	; 0x54
    b26c:	cmp	r2, #0
    b270:	beq	b288 <readstat_parse_sas7bdat+0x1420>
    b274:	ldrd	r0, [sp, #64]	; 0x40
    b278:	mov	r3, #0
    b27c:	cmp	r3, r1
    b280:	cmpeq	r2, r0
    b284:	bls	b290 <readstat_parse_sas7bdat+0x1428>
    b288:	ldr	r3, [sp, #64]	; 0x40
    b28c:	str	r3, [r4, #84]	; 0x54
    b290:	ldr	r3, [sp, #32]
    b294:	ldr	r2, [sp, #112]	; 0x70
    b298:	add	r3, r3, r2
    b29c:	str	r3, [sp, #32]
    b2a0:	ldr	r3, [sp, #76]	; 0x4c
    b2a4:	add	r3, r3, #1
    b2a8:	str	r3, [sp, #76]	; 0x4c
    b2ac:	b	a884 <readstat_parse_sas7bdat+0xa1c>
    b2b0:	cmp	r9, #15
    b2b4:	bls	aae4 <readstat_parse_sas7bdat+0xc7c>
    b2b8:	add	r0, r5, #8
    b2bc:	ldr	r1, [r4, #60]	; 0x3c
    b2c0:	bl	43e4 <sas_read8@plt>
    b2c4:	mov	r1, r0
    b2c8:	str	r0, [r4, #80]	; 0x50
    b2cc:	mov	r0, r4
    b2d0:	bl	94b4 <sas7bdat_realloc_col_info>
    b2d4:	b	aa20 <readstat_parse_sas7bdat+0xbb8>

0000b2d8 <sas7bdat_variable_width>:
    b2d8:	cmp	r0, #0
    b2dc:	moveq	r0, r1
    b2e0:	movne	r0, #8
    b2e4:	bx	lr

0000b2e8 <sas7bdat_metadata_ok>:
    b2e8:	ldr	r3, [r0, #16]
    b2ec:	cmp	r3, #2
    b2f0:	movcs	r0, #6
    b2f4:	movcc	r0, #0
    b2f8:	bx	lr

0000b2fc <sas7bdat_row_length>:
    b2fc:	push	{r4, r5, r6, r7, r8, lr}
    b300:	mov	r4, #0
    b304:	mov	r6, r0
    b308:	mov	r5, r4
    b30c:	ldr	r3, [r6, #28]
    b310:	cmp	r3, r5
    b314:	bgt	b320 <sas7bdat_row_length+0x24>
    b318:	mov	r0, r4
    b31c:	pop	{r4, r5, r6, r7, r8, pc}
    b320:	mov	r1, r5
    b324:	mov	r0, r6
    b328:	bl	439c <readstat_get_variable@plt>
    b32c:	mov	r8, r0
    b330:	add	r5, r5, #1
    b334:	bl	41f8 <readstat_variable_get_type@plt>
    b338:	mov	r7, r0
    b33c:	mov	r0, r8
    b340:	bl	42e8 <readstat_variable_get_storage_width@plt>
    b344:	cmp	r7, #0
    b348:	movne	r0, #8
    b34c:	add	r4, r4, r0
    b350:	b	b30c <sas7bdat_row_length+0x10>

0000b354 <sas7bdat_write_double>:
    b354:	sub	sp, sp, #8
    b358:	mov	r2, r0
    b35c:	mov	r3, sp
    b360:	vstr	d0, [sp]
    b364:	ldm	r3!, {r0, r1}
    b368:	str	r0, [r2]
    b36c:	mov	r0, #0
    b370:	str	r1, [r2, #4]
    b374:	add	sp, sp, #8
    b378:	bx	lr

0000b37c <sas7bdat_write_float>:
    b37c:	vcvt.f64.f32	d0, s0
    b380:	sub	sp, sp, #8
    b384:	mov	r2, r0
    b388:	mov	r3, sp
    b38c:	vstr	d0, [sp]
    b390:	ldm	r3!, {r0, r1}
    b394:	str	r0, [r2]
    b398:	mov	r0, #0
    b39c:	str	r1, [r2, #4]
    b3a0:	add	sp, sp, #8
    b3a4:	bx	lr

0000b3a8 <sas7bdat_write_int32>:
    b3a8:	vmov	s15, r2
    b3ac:	sub	sp, sp, #8
    b3b0:	mov	ip, r0
    b3b4:	mov	r3, sp
    b3b8:	vcvt.f64.s32	d7, s15
    b3bc:	vstr	d7, [sp]
    b3c0:	ldm	r3!, {r0, r1}
    b3c4:	str	r0, [ip]
    b3c8:	mov	r0, #0
    b3cc:	str	r1, [ip, #4]
    b3d0:	add	sp, sp, #8
    b3d4:	bx	lr

0000b3d8 <sas7bdat_write_int16>:
    b3d8:	vmov	s15, r2
    b3dc:	sub	sp, sp, #8
    b3e0:	mov	ip, r0
    b3e4:	mov	r3, sp
    b3e8:	vcvt.f64.s32	d7, s15
    b3ec:	vstr	d7, [sp]
    b3f0:	ldm	r3!, {r0, r1}
    b3f4:	str	r0, [ip]
    b3f8:	mov	r0, #0
    b3fc:	str	r1, [ip, #4]
    b400:	add	sp, sp, #8
    b404:	bx	lr

0000b408 <sas7bdat_write_int8>:
    b408:	vmov	s15, r2
    b40c:	sub	sp, sp, #8
    b410:	mov	ip, r0
    b414:	mov	r3, sp
    b418:	vcvt.f64.s32	d7, s15
    b41c:	vstr	d7, [sp]
    b420:	ldm	r3!, {r0, r1}
    b424:	str	r0, [ip]
    b428:	mov	r0, #0
    b42c:	str	r1, [ip, #4]
    b430:	add	sp, sp, #8
    b434:	bx	lr

0000b438 <sas7bdat_subheader_init>:
    b438:	push	{r4, r5, r6, lr}
    b43c:	mov	r5, r1
    b440:	mov	r6, r0
    b444:	mov	r1, #20
    b448:	mov	r0, #1
    b44c:	bl	3d6c <calloc@plt>
    b450:	mov	r4, r0
    b454:	mov	r1, r5
    b458:	mov	r0, #1
    b45c:	str	r6, [r4]
    b460:	str	r5, [r4, #8]
    b464:	bl	3d6c <calloc@plt>
    b468:	str	r0, [r4, #4]
    b46c:	mov	r0, r4
    b470:	pop	{r4, r5, r6, pc}

0000b474 <sas7bdat_subheader_free>:
    b474:	push	{r4, lr}
    b478:	subs	r4, r0, #0
    b47c:	popeq	{r4, pc}
    b480:	ldr	r0, [r4, #4]
    b484:	cmp	r0, #0
    b488:	beq	b490 <sas7bdat_subheader_free+0x1c>
    b48c:	bl	3ed4 <free@plt>
    b490:	mov	r0, r4
    b494:	pop	{r4, lr}
    b498:	b	3ed4 <free@plt>

0000b49c <sas7bdat_subheader_array_free>:
    b49c:	push	{r4, r5, r6, lr}
    b4a0:	mov	r6, r0
    b4a4:	mov	r4, #0
    b4a8:	mov	r5, #0
    b4ac:	ldrd	r2, [r6]
    b4b0:	ldr	r0, [r6, #16]
    b4b4:	cmp	r4, r2
    b4b8:	sbcs	r3, r5, r3
    b4bc:	blt	b4d0 <sas7bdat_subheader_array_free+0x34>
    b4c0:	bl	3ed4 <free@plt>
    b4c4:	mov	r0, r6
    b4c8:	pop	{r4, r5, r6, lr}
    b4cc:	b	3ed4 <free@plt>
    b4d0:	ldr	r0, [r0, r4, lsl #2]
    b4d4:	bl	b474 <sas7bdat_subheader_free>
    b4d8:	adds	r4, r4, #1
    b4dc:	adc	r5, r5, #0
    b4e0:	b	b4ac <sas7bdat_subheader_array_free+0x10>

0000b4e4 <sas7bdat_make_text_ref>:
    b4e4:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b4e8:	mov	r5, r1
    b4ec:	mov	r7, r0
    b4f0:	mov	r0, r2
    b4f4:	mov	r9, r2
    b4f8:	bl	421c <strlen@plt>
    b4fc:	ldm	r5, {r1, r3}
    b500:	add	sl, r0, #3
    b504:	mov	r8, r0
    b508:	bic	sl, sl, #3
    b50c:	ldr	r0, [r5, #8]
    b510:	sub	r2, r1, #-1073741823	; 0xc0000001
    b514:	ldr	r4, [r0, r2, lsl #2]
    b518:	ldr	ip, [r4, #4]
    b51c:	ldr	r2, [r4, #8]
    b520:	add	r2, sl, r2
    b524:	cmp	r2, ip
    b528:	bls	b58c <sas7bdat_make_text_ref+0xa8>
    b52c:	adds	r1, r1, #1
    b530:	adc	r3, r3, #0
    b534:	stm	r5, {r1, r3}
    b538:	lsl	r1, r1, #2
    b53c:	bl	400c <realloc@plt>
    b540:	mov	fp, r0
    b544:	ldr	r6, [r5]
    b548:	mov	r1, #24
    b54c:	mov	r0, #1
    b550:	ldr	r3, [r5, #4]
    b554:	str	fp, [r5, #8]
    b558:	ldr	r5, [r4, #4]
    b55c:	str	r3, [sp, #4]
    b560:	bl	3d6c <calloc@plt>
    b564:	mov	r4, r0
    b568:	mov	r0, r5
    b56c:	bl	412c <malloc@plt>
    b570:	ldr	r3, [sp, #4]
    b574:	subs	r2, r6, #1
    b578:	sub	r6, r6, #-1073741823	; 0xc0000001
    b57c:	stm	r4, {r0, r5}
    b580:	sbc	r3, r3, #0
    b584:	strd	r2, [r4, #16]
    b588:	str	r4, [fp, r6, lsl #2]
    b58c:	ldr	r0, [r4]
    b590:	mov	r2, sl
    b594:	mov	r1, r9
    b598:	ldr	r5, [r4, #8]
    b59c:	ldrh	r6, [r4, #16]
    b5a0:	add	r0, r0, r5
    b5a4:	add	r5, r5, #28
    b5a8:	bl	42dc <strncpy@plt>
    b5ac:	ldr	r3, [r4, #8]
    b5b0:	mov	r0, r7
    b5b4:	strh	r6, [r7]
    b5b8:	strh	r5, [r7, #2]
    b5bc:	strh	r8, [r7, #4]
    b5c0:	add	sl, r3, sl
    b5c4:	str	sl, [r4, #8]
    b5c8:	add	sp, sp, #12
    b5cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000b5d0 <sas7bdat_write_string>:
    b5d0:	push	{r4, r5, r6, lr}
    b5d4:	mov	r4, r2
    b5d8:	mov	r6, r0
    b5dc:	mov	r0, r1
    b5e0:	bl	42e8 <readstat_variable_get_storage_width@plt>
    b5e4:	cmp	r4, #0
    b5e8:	mov	r5, r0
    b5ec:	beq	b5fc <sas7bdat_write_string+0x2c>
    b5f0:	ldrb	r3, [r4]
    b5f4:	cmp	r3, #0
    b5f8:	bne	b614 <sas7bdat_write_string+0x44>
    b5fc:	mov	r2, r5
    b600:	mov	r1, #0
    b604:	mov	r0, r6
    b608:	bl	42b8 <memset@plt>
    b60c:	mov	r0, #0
    b610:	pop	{r4, r5, r6, pc}
    b614:	mov	r0, r4
    b618:	bl	421c <strlen@plt>
    b61c:	cmp	r5, r0
    b620:	bcc	b638 <sas7bdat_write_string+0x68>
    b624:	mov	r2, r5
    b628:	mov	r1, r4
    b62c:	mov	r0, r6
    b630:	bl	42dc <strncpy@plt>
    b634:	b	b60c <sas7bdat_write_string+0x3c>
    b638:	mov	r0, #22
    b63c:	pop	{r4, r5, r6, pc}

0000b640 <sas7bdat_write_missing_string>:
    b640:	mov	r2, #0
    b644:	b	b5d0 <sas7bdat_write_string>

0000b648 <sas7bdat_write_missing_tagged>:
    b648:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    b64c:	mov	r7, r0
    b650:	mov	r0, r2
    b654:	mov	r6, r2
    b658:	bl	4168 <sas_validate_tag@plt>
    b65c:	subs	r2, r0, #0
    b660:	bne	b688 <sas7bdat_write_missing_tagged+0x40>
    b664:	ldr	r5, [pc, #40]	; b694 <sas7bdat_write_missing_tagged+0x4c>
    b668:	mvn	r6, r6
    b66c:	mov	r4, #0
    b670:	mov	r3, sp
    b674:	bfi	r5, r6, #8, #8
    b678:	strd	r4, [sp]
    b67c:	ldm	r3!, {r0, r1}
    b680:	str	r0, [r7]
    b684:	str	r1, [r7, #4]
    b688:	mov	r0, r2
    b68c:	add	sp, sp, #12
    b690:	pop	{r4, r5, r6, r7, pc}
    b694:	.word	0x7ff80000

0000b698 <sas7bdat_module_ctx_free>:
    b698:	push	{r4, lr}
    b69c:	mov	r4, r0
    b6a0:	ldr	r0, [r0]
    b6a4:	bl	3ed4 <free@plt>
    b6a8:	ldr	r0, [r4, #4]
    b6ac:	bl	b49c <sas7bdat_subheader_array_free>
    b6b0:	mov	r0, r4
    b6b4:	pop	{r4, lr}
    b6b8:	b	3ed4 <free@plt>

0000b6bc <sas7bdat_emit_header_and_meta_pages>:
    b6bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b6c0:	sub	sp, sp, #364	; 0x16c
    b6c4:	mov	r6, r0
    b6c8:	ldr	r4, [pc, #1072]	; bb00 <sas7bdat_emit_header_and_meta_pages+0x444>
    b6cc:	ldr	r5, [r0, #300]	; 0x12c
    b6d0:	bl	b2fc <sas7bdat_row_length>
    b6d4:	cmp	r0, #0
    b6d8:	add	r4, pc, r4
    b6dc:	moveq	r4, #36	; 0x24
    b6e0:	beq	b894 <sas7bdat_emit_header_and_meta_pages+0x1d8>
    b6e4:	ldr	r8, [r6, #16]
    b6e8:	cmp	r8, #0
    b6ec:	beq	b8a0 <sas7bdat_emit_header_and_meta_pages+0x1e4>
    b6f0:	ldr	r2, [r6, #300]	; 0x12c
    b6f4:	mov	r7, #1
    b6f8:	ldm	r2, {r3, ip}
    b6fc:	ldr	r1, [r3, #32]
    b700:	ldr	r2, [r3, #40]	; 0x28
    b704:	ldr	lr, [r3, #48]	; 0x30
    b708:	ldr	r3, [ip]
    b70c:	sub	r2, r1, r2
    b710:	mov	r1, r2
    b714:	sub	r3, r3, #1
    b718:	cmp	r3, #0
    b71c:	bge	b8e0 <sas7bdat_emit_header_and_meta_pages+0x224>
    b720:	ldr	r3, [r6, #16]
    b724:	cmp	r3, #1
    b728:	moveq	r0, #0
    b72c:	beq	b770 <sas7bdat_emit_header_and_meta_pages+0xb4>
    b730:	ldr	r8, [r5]
    b734:	mov	r0, r6
    b738:	bl	b2fc <sas7bdat_row_length>
    b73c:	mov	r2, r0
    b740:	mov	r3, #0
    b744:	ldr	lr, [r8, #32]
    b748:	ldr	r9, [r8, #36]	; 0x24
    b74c:	ldr	ip, [r8, #40]	; 0x28
    b750:	ldr	r1, [r8, #44]	; 0x2c
    b754:	subs	r0, lr, ip
    b758:	sbc	r1, r9, r1
    b75c:	bl	20118 <__aeabi_ldivmod>
    b760:	ldr	r2, [r6, #80]	; 0x50
    b764:	sub	r3, r0, #1
    b768:	add	r3, r3, r2
    b76c:	sdiv	r0, r3, r0
    b770:	ldr	r5, [r5]
    b774:	add	r0, r0, r7
    b778:	mov	r2, #124	; 0x7c
    b77c:	asr	r1, r0, #31
    b780:	strd	r0, [r5, #56]	; 0x38
    b784:	mov	r1, #0
    b788:	add	r0, sp, #224	; 0xe0
    b78c:	bl	42b8 <memset@plt>
    b790:	ldr	r3, [r5, #4]
    b794:	cmp	r3, #0
    b798:	movne	r3, #51	; 0x33
    b79c:	moveq	r3, #34	; 0x22
    b7a0:	strb	r3, [sp, #224]	; 0xe0
    b7a4:	mov	r3, #34	; 0x22
    b7a8:	strb	r3, [sp, #227]	; 0xe3
    b7ac:	bl	3ec8 <machine_is_little_endian@plt>
    b7b0:	mov	r3, #49	; 0x31
    b7b4:	adds	r0, r0, #0
    b7b8:	movne	r0, #1
    b7bc:	add	r2, sp, #276	; 0x114
    b7c0:	strb	r3, [sp, #231]	; 0xe7
    b7c4:	mov	r3, #20
    b7c8:	strb	r0, [sp, #229]	; 0xe5
    b7cc:	strb	r3, [sp, #262]	; 0x106
    b7d0:	ldr	r3, [pc, #812]	; bb04 <sas7bdat_emit_header_and_meta_pages+0x448>
    b7d4:	add	r3, pc, r3
    b7d8:	ldr	r1, [r3, #4]
    b7dc:	ldr	r0, [r3]
    b7e0:	stmia	r2!, {r0, r1}
    b7e4:	add	r2, sp, #348	; 0x15c
    b7e8:	ldr	r0, [r3, #9]!
    b7ec:	ldr	r1, [r3, #4]
    b7f0:	ldr	r3, [pc, #784]	; bb08 <sas7bdat_emit_header_and_meta_pages+0x44c>
    b7f4:	stmia	r2!, {r0, r1}
    b7f8:	add	r2, sp, #192	; 0xc0
    b7fc:	ldr	r3, [r4, r3]
    b800:	mov	r4, r2
    b804:	add	lr, r3, #32
    b808:	ldr	r0, [r3]
    b80c:	mov	ip, r2
    b810:	add	r3, r3, #8
    b814:	ldr	r1, [r3, #-4]
    b818:	cmp	r3, lr
    b81c:	stmia	ip!, {r0, r1}
    b820:	mov	r2, ip
    b824:	bne	b808 <sas7bdat_emit_header_and_meta_pages+0x14c>
    b828:	mov	r2, #156	; 0x9c
    b82c:	add	r1, sp, #200	; 0xc8
    b830:	mov	r0, sp
    b834:	bl	3f34 <memcpy@plt>
    b838:	mov	r1, r5
    b83c:	mov	r0, r6
    b840:	ldm	r4, {r2, r3}
    b844:	bl	40d8 <sas_write_header@plt>
    b848:	subs	r4, r0, #0
    b84c:	bne	b894 <sas7bdat_emit_header_and_meta_pages+0x1d8>
    b850:	ldr	r3, [r6, #300]	; 0x12c
    b854:	ldm	r3, {r7, r9}
    b858:	ldr	r0, [r7, #32]
    b85c:	bl	412c <malloc@plt>
    b860:	mov	r5, r0
    b864:	mov	r2, #0
    b868:	strh	r4, [sp, #174]	; 0xae
    b86c:	mov	r3, #0
    b870:	strd	r2, [sp, #160]	; 0xa0
    b874:	ldrd	r2, [r9]
    b878:	ldrd	r0, [sp, #160]	; 0xa0
    b87c:	cmp	r0, r2
    b880:	sbcs	r3, r1, r3
    b884:	blt	b908 <sas7bdat_emit_header_and_meta_pages+0x24c>
    b888:	mov	r4, #0
    b88c:	mov	r0, r5
    b890:	bl	3ed4 <free@plt>
    b894:	mov	r0, r4
    b898:	add	sp, sp, #364	; 0x16c
    b89c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b8a0:	ldr	r7, [r5]
    b8a4:	mov	r0, r6
    b8a8:	bl	b2fc <sas7bdat_row_length>
    b8ac:	mov	r2, r0
    b8b0:	mov	r3, r8
    b8b4:	ldr	lr, [r7, #32]
    b8b8:	ldr	r9, [r7, #36]	; 0x24
    b8bc:	ldr	ip, [r7, #40]	; 0x28
    b8c0:	ldr	r1, [r7, #44]	; 0x2c
    b8c4:	subs	r0, lr, ip
    b8c8:	sbc	r1, r9, r1
    b8cc:	bl	20118 <__aeabi_ldivmod>
    b8d0:	cmp	r0, #0
    b8d4:	bne	b6f0 <sas7bdat_emit_header_and_meta_pages+0x34>
    b8d8:	mov	r4, #35	; 0x23
    b8dc:	b	b894 <sas7bdat_emit_header_and_meta_pages+0x1d8>
    b8e0:	ldr	r0, [ip, #16]
    b8e4:	ldr	r0, [r0, r3, lsl #2]
    b8e8:	sub	r3, r3, #1
    b8ec:	ldr	r0, [r0, #8]
    b8f0:	add	r0, lr, r0
    b8f4:	cmp	r0, r1
    b8f8:	movhi	r1, r2
    b8fc:	addhi	r7, r7, #1
    b900:	sub	r1, r1, r0
    b904:	b	b718 <sas7bdat_emit_header_and_meta_pages+0x5c>
    b908:	mov	r1, #0
    b90c:	mov	r0, r5
    b910:	ldr	r2, [r7, #32]
    b914:	bl	42b8 <memset@plt>
    b918:	ldr	r8, [r7, #32]
    b91c:	ldr	r2, [r7, #48]	; 0x30
    b920:	ldr	r3, [r7, #40]	; 0x28
    b924:	str	r2, [sp, #168]	; 0xa8
    b928:	ldrh	r2, [sp, #174]	; 0xae
    b92c:	add	r4, r5, r3
    b930:	sub	r3, r8, r3
    b934:	strh	r2, [r4, #-8]
    b938:	ldr	r1, [r9, #16]
    b93c:	ldr	r2, [sp, #160]	; 0xa0
    b940:	ldr	r2, [r1, r2, lsl #2]
    b944:	ldr	r1, [sp, #168]	; 0xa8
    b948:	ldr	r2, [r2, #8]
    b94c:	add	r2, r1, r2
    b950:	cmp	r2, r3
    b954:	bhi	baf8 <sas7bdat_emit_header_and_meta_pages+0x43c>
    b958:	ldrd	sl, [sp, #160]	; 0xa0
    b95c:	ldr	r3, [sp, #160]	; 0xa0
    b960:	ldr	r0, [r7, #4]
    b964:	sub	r1, sl, r3
    b968:	ldrd	r2, [r9]
    b96c:	uxth	r1, r1
    b970:	cmp	sl, r2
    b974:	sbcs	r3, fp, r3
    b978:	bge	b9a0 <sas7bdat_emit_header_and_meta_pages+0x2e4>
    b97c:	ldr	r2, [r9, #16]
    b980:	ldr	r3, [r2, sl, lsl #2]
    b984:	ldr	r2, [sp, #168]	; 0xa8
    b988:	ldr	ip, [r3, #8]
    b98c:	add	lr, r2, ip
    b990:	sub	r2, r5, r4
    b994:	add	r2, r2, r8
    b998:	cmp	lr, r2
    b99c:	bls	b9d4 <sas7bdat_emit_header_and_meta_pages+0x318>
    b9a0:	cmp	r0, #0
    b9a4:	mov	r0, r6
    b9a8:	strhne	r1, [r5, #34]	; 0x22
    b9ac:	strhne	r1, [r5, #36]	; 0x24
    b9b0:	strheq	r1, [r5, #18]
    b9b4:	strheq	r1, [r5, #20]
    b9b8:	mov	r1, r5
    b9bc:	ldr	r2, [r7, #32]
    b9c0:	bl	4474 <readstat_write_bytes@plt>
    b9c4:	subs	r4, r0, #0
    b9c8:	bne	b88c <sas7bdat_emit_header_and_meta_pages+0x1d0>
    b9cc:	strd	sl, [sp, #160]	; 0xa0
    b9d0:	b	b874 <sas7bdat_emit_header_and_meta_pages+0x1b8>
    b9d4:	cmp	r0, #0
    b9d8:	sub	r1, r8, ip
    b9dc:	ldr	r2, [r3]
    b9e0:	beq	baa4 <sas7bdat_emit_header_and_meta_pages+0x3e8>
    b9e4:	str	r1, [sp, #176]	; 0xb0
    b9e8:	mov	r1, #0
    b9ec:	str	ip, [sp, #184]	; 0xb8
    b9f0:	add	ip, sp, #176	; 0xb0
    b9f4:	str	r1, [sp, #180]	; 0xb4
    b9f8:	str	r1, [sp, #188]	; 0xbc
    b9fc:	ldm	ip!, {r0, r1}
    ba00:	add	ip, sp, #184	; 0xb8
    ba04:	str	r0, [r4]
    ba08:	str	r1, [r4, #4]
    ba0c:	ldm	ip!, {r0, r1}
    ba10:	str	r0, [r4, #8]
    ba14:	str	r1, [r4, #12]
    ba18:	ldr	r1, [r3, #12]
    ba1c:	cmp	r1, #0
    ba20:	beq	ba60 <sas7bdat_emit_header_and_meta_pages+0x3a4>
    ba24:	ldr	r2, [r3, #16]
    ba28:	cmp	r2, #0
    ba2c:	movne	r2, #4
    ba30:	strb	r2, [r4, #16]
    ba34:	mov	r2, #1
    ba38:	strb	r2, [r4, #17]
    ba3c:	ldmib	r3, {r1, r2}
    ba40:	sub	r8, r8, r2
    ba44:	add	r0, r5, r8
    ba48:	bl	3f34 <memcpy@plt>
    ba4c:	ldr	r3, [sp, #168]	; 0xa8
    ba50:	adds	sl, sl, #1
    ba54:	adc	fp, fp, #0
    ba58:	add	r4, r4, r3
    ba5c:	b	b95c <sas7bdat_emit_header_and_meta_pages+0x2a0>
    ba60:	ldr	r1, [r3]
    ba64:	add	r1, r1, #4
    ba68:	cmp	r1, #3
    ba6c:	movhi	r1, #0
    ba70:	movls	r1, #1
    ba74:	cmp	r2, #-16777216	; 0xff000000
    ba78:	movcs	r0, r2
    ba7c:	strb	r1, [r4, #17]
    ba80:	addcs	r2, sp, #192	; 0xc0
    ba84:	asrcs	r1, r0, #31
    ba88:	ldr	ip, [r3, #4]
    ba8c:	strdcs	r0, [sp, #192]	; 0xc0
    ba90:	ldmcs	r2!, {r0, r1}
    ba94:	strcc	r2, [ip]
    ba98:	strcs	r0, [ip]
    ba9c:	strcs	r1, [ip, #4]
    baa0:	b	ba3c <sas7bdat_emit_header_and_meta_pages+0x380>
    baa4:	str	r1, [r4]
    baa8:	str	ip, [r4, #4]
    baac:	ldr	r1, [r3, #12]
    bab0:	cmp	r1, #0
    bab4:	beq	bad4 <sas7bdat_emit_header_and_meta_pages+0x418>
    bab8:	ldr	r2, [r3, #16]
    babc:	cmp	r2, #0
    bac0:	movne	r2, #4
    bac4:	strb	r2, [r4, #8]
    bac8:	mov	r2, #1
    bacc:	strb	r2, [r4, #9]
    bad0:	b	ba3c <sas7bdat_emit_header_and_meta_pages+0x380>
    bad4:	ldr	r1, [r3]
    bad8:	add	r1, r1, #4
    badc:	cmp	r1, #3
    bae0:	movhi	r1, #0
    bae4:	movls	r1, #1
    bae8:	strb	r1, [r4, #9]
    baec:	ldr	r1, [r3, #4]
    baf0:	str	r2, [r1]
    baf4:	b	ba3c <sas7bdat_emit_header_and_meta_pages+0x380>
    baf8:	mov	r4, #35	; 0x23
    bafc:	b	b88c <sas7bdat_emit_header_and_meta_pages+0x1d0>
    bb00:	.word	0x00034920
    bb04:	.word	0x0001570e
    bb08:	.word	0x000002f8

0000bb0c <sas7bdat_end_data>:
    bb0c:	ldr	r2, [r0, #16]
    bb10:	cmp	r2, #1
    bb14:	bne	bb1c <sas7bdat_end_data+0x10>
    bb18:	b	b6bc <sas7bdat_emit_header_and_meta_pages>
    bb1c:	ldr	r3, [r0, #300]	; 0x12c
    bb20:	ldr	r1, [r3]
    bb24:	b	4498 <sas_fill_page@plt>

0000bb28 <sas7bdat_write_missing_numeric>:
    bb28:	ldr	r3, [pc, #48]	; bb60 <sas7bdat_write_missing_numeric+0x38>
    bb2c:	mvn	r1, #46	; 0x2e
    bb30:	sub	sp, sp, #8
    bb34:	mov	r2, #0
    bb38:	mov	ip, r0
    bb3c:	bfi	r3, r1, #8, #8
    bb40:	strd	r2, [sp]
    bb44:	mov	r3, sp
    bb48:	ldm	r3!, {r0, r1}
    bb4c:	str	r0, [ip]
    bb50:	mov	r0, #0
    bb54:	str	r1, [ip, #4]
    bb58:	add	sp, sp, #8
    bb5c:	bx	lr
    bb60:	.word	0x7ff80000

0000bb64 <sas7bdat_write_row>:
    bb64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bb68:	add	fp, sp, #32
    bb6c:	sub	sp, sp, #4
    bb70:	mov	r8, r1
    bb74:	mov	r6, r2
    bb78:	ldr	r7, [r0, #16]
    bb7c:	ldr	r9, [r0, #300]	; 0x12c
    bb80:	cmp	r7, #0
    bb84:	bne	bc70 <sas7bdat_write_row+0x10c>
    bb88:	ldr	r5, [r9]
    bb8c:	mov	r4, r0
    bb90:	bl	b2fc <sas7bdat_row_length>
    bb94:	mov	r2, r0
    bb98:	mov	r3, r7
    bb9c:	ldr	lr, [r5, #32]
    bba0:	ldr	sl, [r5, #36]	; 0x24
    bba4:	ldr	ip, [r5, #40]	; 0x28
    bba8:	ldr	r1, [r5, #44]	; 0x2c
    bbac:	subs	r0, lr, ip
    bbb0:	sbc	r1, sl, r1
    bbb4:	bl	20118 <__aeabi_ldivmod>
    bbb8:	ldr	r2, [r4, #84]	; 0x54
    bbbc:	mov	sl, r0
    bbc0:	sdiv	r3, r2, r0
    bbc4:	mls	r3, r0, r3, r2
    bbc8:	cmp	r3, #0
    bbcc:	bne	bc50 <sas7bdat_write_row+0xec>
    bbd0:	mov	r0, r4
    bbd4:	ldr	r1, [r9]
    bbd8:	mov	r7, sp
    bbdc:	bl	4498 <sas_fill_page@plt>
    bbe0:	cmp	r0, #0
    bbe4:	bne	bc64 <sas7bdat_write_row+0x100>
    bbe8:	ldr	r3, [r4, #80]	; 0x50
    bbec:	mov	r1, r0
    bbf0:	ldr	r2, [r4, #84]	; 0x54
    bbf4:	sub	r3, r3, r2
    bbf8:	ldr	r2, [r5, #40]	; 0x28
    bbfc:	cmp	r3, sl
    bc00:	movlt	sl, r3
    bc04:	add	r3, r2, #7
    bc08:	bic	r3, r3, #7
    bc0c:	sub	sp, sp, r3
    bc10:	mov	r0, sp
    bc14:	bl	42b8 <memset@plt>
    bc18:	ldr	r3, [r5, #40]	; 0x28
    bc1c:	mov	r2, #256	; 0x100
    bc20:	mov	r1, sp
    bc24:	mov	r0, r4
    bc28:	add	r3, sp, r3
    bc2c:	strh	sl, [r3, #-6]
    bc30:	ldr	r3, [r5, #40]	; 0x28
    bc34:	add	r3, sp, r3
    bc38:	strh	r2, [r3, #-8]
    bc3c:	ldr	r2, [r5, #40]	; 0x28
    bc40:	bl	4474 <readstat_write_bytes@plt>
    bc44:	cmp	r0, #0
    bc48:	bne	bc64 <sas7bdat_write_row+0x100>
    bc4c:	mov	sp, r7
    bc50:	mov	r2, r6
    bc54:	mov	r1, r8
    bc58:	mov	r0, r4
    bc5c:	bl	4474 <readstat_write_bytes@plt>
    bc60:	b	bc68 <sas7bdat_write_row+0x104>
    bc64:	mov	sp, r7
    bc68:	sub	sp, fp, #32
    bc6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bc70:	cmp	r7, #1
    bc74:	bne	bd18 <sas7bdat_write_row+0x1b4>
    bc78:	mov	r1, r2
    bc7c:	mov	r0, r8
    bc80:	bl	44a4 <sas_rle_compressed_len@plt>
    bc84:	cmp	r6, r0
    bc88:	mov	r5, r0
    bc8c:	bls	bcd0 <sas7bdat_write_row+0x16c>
    bc90:	mov	r1, r0
    bc94:	mov	r0, #0
    bc98:	bl	b438 <sas7bdat_subheader_init>
    bc9c:	mov	r4, r0
    bca0:	mov	r3, r6
    bca4:	ldrd	r0, [r0, #4]
    bca8:	mov	r2, r8
    bcac:	str	r7, [r4, #12]
    bcb0:	str	r7, [r4, #16]
    bcb4:	bl	44f8 <sas_rle_compress@plt>
    bcb8:	cmp	r5, r0
    bcbc:	beq	bcf4 <sas7bdat_write_row+0x190>
    bcc0:	mov	r0, r4
    bcc4:	bl	b474 <sas7bdat_subheader_free>
    bcc8:	mov	r0, #10
    bccc:	b	bc68 <sas7bdat_write_row+0x104>
    bcd0:	mov	r1, r6
    bcd4:	mov	r0, #0
    bcd8:	bl	b438 <sas7bdat_subheader_init>
    bcdc:	mov	r4, r0
    bce0:	mov	r2, r6
    bce4:	ldr	r0, [r0, #4]
    bce8:	mov	r1, r8
    bcec:	str	r7, [r4, #12]
    bcf0:	bl	3f34 <memcpy@plt>
    bcf4:	ldr	r2, [r9, #4]
    bcf8:	ldr	r3, [r2]
    bcfc:	ldr	r1, [r2, #4]
    bd00:	ldr	r0, [r2, #16]
    bd04:	adds	ip, r3, #1
    bd08:	adc	r1, r1, #0
    bd0c:	str	ip, [r2]
    bd10:	str	r1, [r2, #4]
    bd14:	str	r4, [r0, r3, lsl #2]
    bd18:	mov	r0, #0
    bd1c:	b	bc68 <sas7bdat_write_row+0x104>

0000bd20 <sas7bdat_begin_data>:
    bd20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bd24:	mov	r1, #8
    bd28:	sub	sp, sp, #84	; 0x54
    bd2c:	mov	r4, r0
    bd30:	mov	r0, #1
    bd34:	bl	3d6c <calloc@plt>
    bd38:	str	r0, [sp, #12]
    bd3c:	mov	r0, r4
    bd40:	ldr	r1, [r4, #12]
    bd44:	bl	436c <sas_header_info_init@plt>
    bd48:	mov	r6, r0
    bd4c:	mov	r0, r4
    bd50:	bl	b2fc <sas7bdat_row_length>
    bd54:	ldr	r1, [r4, #16]
    bd58:	mov	ip, #12
    bd5c:	ldrd	r2, [r6, #48]	; 0x30
    bd60:	ldr	lr, [r6, #40]	; 0x28
    bd64:	strd	r2, [sp]
    bd68:	adds	r2, r2, r0
    bd6c:	adc	r3, r3, #0
    bd70:	strd	r2, [sp, #24]
    bd74:	ldr	r3, [r6, #32]
    bd78:	cmp	r1, #0
    bd7c:	ldr	r2, [r6, #36]	; 0x24
    bd80:	sub	r5, r3, lr
    bd84:	bne	bda4 <sas7bdat_begin_data+0x84>
    bd88:	cmp	r0, r5
    bd8c:	bls	bdc0 <sas7bdat_begin_data+0xa0>
    bd90:	adds	r3, r3, r3
    bd94:	adc	r2, r2, r2
    bd98:	str	r3, [r6, #32]
    bd9c:	str	r2, [r6, #36]	; 0x24
    bda0:	b	bd74 <sas7bdat_begin_data+0x54>
    bda4:	cmp	r1, #1
    bda8:	bne	bdc0 <sas7bdat_begin_data+0xa0>
    bdac:	ldrd	sl, [sp, #24]
    bdb0:	mov	r9, #0
    bdb4:	cmp	r5, sl
    bdb8:	sbcs	r7, r9, fp
    bdbc:	blt	bd90 <sas7bdat_begin_data+0x70>
    bdc0:	mov	r8, r5
    bdc4:	mov	r9, #0
    bdc8:	ldr	r7, [r4, #28]
    bdcc:	mov	fp, #0
    bdd0:	strd	r8, [sp, #16]
    bdd4:	ldr	r8, [r6, #4]
    bdd8:	lsl	sl, r7, #3
    bddc:	cmp	r8, #0
    bde0:	str	r8, [sp, #16]
    bde4:	ldrd	r8, [sp]
    bde8:	addne	sl, sl, #28
    bdec:	addeq	sl, sl, #20
    bdf0:	adds	r8, r8, sl
    bdf4:	mov	sl, r5
    bdf8:	adc	r9, r9, #0
    bdfc:	cmp	r5, r8
    be00:	sbcs	r8, fp, r9
    be04:	blt	bd90 <sas7bdat_begin_data+0x70>
    be08:	ldr	r8, [sp, #16]
    be0c:	mov	fp, #0
    be10:	cmp	r8, #0
    be14:	ldrd	r8, [sp]
    be18:	lslne	sl, r7, #4
    be1c:	muleq	sl, ip, r7
    be20:	addne	sl, sl, #28
    be24:	addeq	sl, sl, #20
    be28:	adds	r8, r8, sl
    be2c:	adc	r9, r9, #0
    be30:	cmp	r5, r8
    be34:	sbcs	r8, fp, r9
    be38:	blt	bd90 <sas7bdat_begin_data+0x70>
    be3c:	ldr	r3, [sp, #12]
    be40:	mov	r1, #16
    be44:	mov	r0, #1
    be48:	sub	r5, r5, #28
    be4c:	add	fp, sp, #72	; 0x48
    be50:	str	r6, [r3]
    be54:	bl	3d6c <calloc@plt>
    be58:	mov	sl, r0
    be5c:	mov	r2, #1
    be60:	mov	r3, #0
    be64:	mov	r0, #4
    be68:	strd	r2, [sl]
    be6c:	bl	412c <malloc@plt>
    be70:	ldr	r3, [r6, #4]
    be74:	mov	r8, r0
    be78:	mov	r1, #24
    be7c:	mov	r0, #1
    be80:	ldr	r2, [sp]
    be84:	str	r8, [sl, #8]
    be88:	cmp	r3, #0
    be8c:	movne	r3, #8
    be90:	moveq	r3, #4
    be94:	sub	r5, r5, r2
    be98:	sub	r5, r5, r3
    be9c:	bl	3d6c <calloc@plt>
    bea0:	mov	r9, r0
    bea4:	mov	r0, r5
    bea8:	bl	412c <malloc@plt>
    beac:	mov	r2, #0
    beb0:	mov	r3, #0
    beb4:	str	r9, [r8]
    beb8:	mov	r1, #24
    bebc:	stm	r9, {r0, r5}
    bec0:	mov	r0, #1
    bec4:	strd	r2, [r9, #16]
    bec8:	bl	3d6c <calloc@plt>
    becc:	mov	r5, r0
    bed0:	add	r0, r7, #4
    bed4:	asr	r3, r0, #31
    bed8:	mov	r2, r0
    bedc:	mov	r1, #4
    bee0:	strd	r2, [r5]
    bee4:	bl	3d6c <calloc@plt>
    bee8:	ldr	r7, [r4, #28]
    beec:	ldr	r3, [r6, #4]
    bef0:	str	r0, [r5, #16]
    bef4:	lsl	r7, r7, #3
    bef8:	cmp	r3, #0
    befc:	addne	r7, r7, #28
    bf00:	movne	r8, #8
    bf04:	addeq	r7, r7, #20
    bf08:	moveq	r8, #4
    bf0c:	mov	r1, r8
    bf10:	mov	r0, r7
    bf14:	bl	43d8 <sas_subheader_remainder@plt>
    bf18:	mov	r9, r0
    bf1c:	mov	r1, r7
    bf20:	mvn	r0, #0
    bf24:	mov	r7, #0
    bf28:	bl	b438 <sas7bdat_subheader_init>
    bf2c:	ldr	r3, [r0, #4]
    bf30:	str	r0, [sp, #32]
    bf34:	strh	r9, [r3, r8]
    bf38:	add	r8, r8, #8
    bf3c:	ldr	r3, [r0, #4]
    bf40:	add	r8, r3, r8
    bf44:	ldr	r2, [r4, #28]
    bf48:	lsl	r3, r7, #3
    bf4c:	add	r9, r8, r3
    bf50:	cmp	r7, r2
    bf54:	blt	c240 <sas7bdat_begin_data+0x520>
    bf58:	ldr	r3, [r6, #4]
    bf5c:	cmp	r3, #0
    bf60:	moveq	r7, #12
    bf64:	lslne	r7, r2, #4
    bf68:	movne	r9, #8
    bf6c:	moveq	r9, #4
    bf70:	muleq	r7, r7, r2
    bf74:	addne	r7, r7, #28
    bf78:	mov	r1, r9
    bf7c:	addeq	r7, r7, #20
    bf80:	mov	r0, r7
    bf84:	bl	43d8 <sas_subheader_remainder@plt>
    bf88:	mov	r8, r0
    bf8c:	mov	r1, r7
    bf90:	mvn	r0, #3
    bf94:	mov	r7, #0
    bf98:	bl	b438 <sas7bdat_subheader_init>
    bf9c:	ldr	r3, [r0, #4]
    bfa0:	mov	r2, #0
    bfa4:	str	r0, [sp, #24]
    bfa8:	strh	r8, [r3, r9]
    bfac:	add	r9, r9, #8
    bfb0:	ldr	r3, [r0, #4]
    bfb4:	add	r9, r3, r9
    bfb8:	mov	r3, #0
    bfbc:	strd	r2, [sp, #72]	; 0x48
    bfc0:	add	r3, sp, #72	; 0x48
    bfc4:	str	r3, [sp, #16]
    bfc8:	ldr	r3, [r4, #28]
    bfcc:	cmp	r7, r3
    bfd0:	blt	c288 <sas7bdat_begin_data+0x568>
    bfd4:	ldr	r3, [r6, #4]
    bfd8:	ldr	r0, [pc, #1516]	; c5cc <sas7bdat_begin_data+0x8ac>
    bfdc:	ldr	r7, [r5, #16]
    bfe0:	cmp	r3, #0
    bfe4:	movne	r1, #808	; 0x328
    bfe8:	moveq	r1, #480	; 0x1e0
    bfec:	bl	b438 <sas7bdat_subheader_init>
    bff0:	ldr	r3, [r6, #4]
    bff4:	mov	r8, r0
    bff8:	mov	r0, r4
    bffc:	cmp	r3, #0
    c000:	beq	c36c <sas7bdat_begin_data+0x64c>
    c004:	bl	b2fc <sas7bdat_row_length>
    c008:	ldr	r2, [r4, #80]	; 0x50
    c00c:	mov	r3, #0
    c010:	str	r0, [sp, #48]	; 0x30
    c014:	str	r3, [sp, #52]	; 0x34
    c018:	asr	r3, r2, #31
    c01c:	strd	r2, [sp, #56]	; 0x38
    c020:	ldr	r2, [r4, #28]
    c024:	asr	r3, r2, #31
    c028:	strd	r2, [sp, #64]	; 0x40
    c02c:	ldrd	r2, [r6, #32]
    c030:	strd	r2, [sp, #72]	; 0x48
    c034:	add	r3, sp, #48	; 0x30
    c038:	ldm	r3!, {r0, r1}
    c03c:	add	r3, sp, #56	; 0x38
    c040:	ldr	r2, [r8, #4]
    c044:	str	r0, [r2, #40]	; 0x28
    c048:	str	r1, [r2, #44]	; 0x2c
    c04c:	ldm	r3!, {r0, r1}
    c050:	add	r3, sp, #64	; 0x40
    c054:	ldr	r2, [r8, #4]
    c058:	str	r0, [r2, #48]	; 0x30
    c05c:	str	r1, [r2, #52]	; 0x34
    c060:	ldm	r3!, {r0, r1}
    c064:	add	r3, sp, #72	; 0x48
    c068:	ldr	r2, [r8, #4]
    c06c:	str	r0, [r2, #72]	; 0x48
    c070:	str	r1, [r2, #76]	; 0x4c
    c074:	ldm	r3!, {r0, r1}
    c078:	ldr	r2, [r8, #4]
    c07c:	str	r0, [r2, #104]	; 0x68
    c080:	str	r1, [r2, #108]	; 0x6c
    c084:	mov	r2, #16
    c088:	mov	r1, #255	; 0xff
    c08c:	ldr	r0, [r8, #4]
    c090:	add	r0, r0, #128	; 0x80
    c094:	bl	42b8 <memset@plt>
    c098:	ldr	r3, [r6, #4]
    c09c:	str	r8, [r7]
    c0a0:	mov	r8, #0
    c0a4:	ldr	r0, [pc, #1316]	; c5d0 <sas7bdat_begin_data+0x8b0>
    c0a8:	ldr	r7, [r5, #16]
    c0ac:	cmp	r3, #0
    c0b0:	movne	r1, #24
    c0b4:	moveq	r1, #12
    c0b8:	bl	b438 <sas7bdat_subheader_init>
    c0bc:	ldr	r3, [r6, #4]
    c0c0:	mov	lr, r0
    c0c4:	ldr	r2, [r4, #28]
    c0c8:	ldr	ip, [r0, #4]
    c0cc:	cmp	r3, #0
    c0d0:	asrne	r3, r2, #31
    c0d4:	streq	r2, [ip, #4]
    c0d8:	strdne	r2, [sp, #72]	; 0x48
    c0dc:	addne	r3, sp, #72	; 0x48
    c0e0:	ldmne	r3!, {r0, r1}
    c0e4:	strne	r1, [ip, #12]
    c0e8:	mov	r1, #4
    c0ec:	strne	r0, [ip, #8]
    c0f0:	ldr	r0, [r4, #28]
    c0f4:	str	lr, [r7, #4]
    c0f8:	bl	3d6c <calloc@plt>
    c0fc:	add	r3, sp, #72	; 0x48
    c100:	str	r3, [sp]
    c104:	str	r0, [sp, #16]
    c108:	ldr	r3, [r4, #28]
    c10c:	cmp	r8, r3
    c110:	blt	c3b0 <sas7bdat_begin_data+0x690>
    c114:	ldm	r5, {r1, r3}
    c118:	ldr	r2, [sl]
    c11c:	ldr	r0, [sl, #4]
    c120:	adds	r1, r1, r2
    c124:	adc	r3, r3, r0
    c128:	ldr	r0, [r5, #16]
    c12c:	stm	r5, {r1, r3}
    c130:	lsl	r1, r1, #2
    c134:	bl	400c <realloc@plt>
    c138:	mov	r2, #0
    c13c:	mov	r3, #0
    c140:	str	r0, [r5, #16]
    c144:	strd	r2, [sp]
    c148:	ldr	r3, [sp]
    c14c:	ldrd	r8, [sp]
    c150:	ldr	r0, [sl, #8]
    c154:	str	r3, [sp, #44]	; 0x2c
    c158:	add	r3, r3, #3
    c15c:	str	r3, [sp, #40]	; 0x28
    c160:	ldr	r3, [sp]
    c164:	lsl	r1, r3, #2
    c168:	add	r3, r1, #8
    c16c:	str	r3, [sp, #36]	; 0x24
    c170:	ldrd	r2, [sl]
    c174:	cmp	r8, r2
    c178:	sbcs	r3, r9, r3
    c17c:	blt	c4b0 <sas7bdat_begin_data+0x790>
    c180:	mov	r6, #0
    c184:	mov	r7, #0
    c188:	ldrd	r2, [sl]
    c18c:	ldr	r0, [sl, #8]
    c190:	cmp	r6, r2
    c194:	sbcs	r3, r7, r3
    c198:	blt	c55c <sas7bdat_begin_data+0x83c>
    c19c:	bl	3ed4 <free@plt>
    c1a0:	mov	r0, sl
    c1a4:	bl	3ed4 <free@plt>
    c1a8:	ldr	r6, [r5, #16]
    c1ac:	ldrd	r2, [sp, #32]
    c1b0:	str	r2, [r6, r3]
    c1b4:	ldr	r3, [sp, #24]
    c1b8:	ldr	r2, [sp, #40]	; 0x28
    c1bc:	str	r3, [r6, r2, lsl #2]
    c1c0:	ldr	r3, [sp, #44]	; 0x2c
    c1c4:	ldr	r2, [r4, #28]
    c1c8:	add	r8, r3, #3
    c1cc:	mov	r3, #0
    c1d0:	add	r8, r6, r8, lsl #2
    c1d4:	cmp	r3, r2
    c1d8:	blt	c57c <sas7bdat_begin_data+0x85c>
    c1dc:	ldr	r0, [sp, #16]
    c1e0:	bl	3ed4 <free@plt>
    c1e4:	ldr	r1, [r4, #16]
    c1e8:	ldrd	r8, [r5]
    c1ec:	cmp	r1, #1
    c1f0:	strd	r8, [r5, #8]
    c1f4:	bne	c218 <sas7bdat_begin_data+0x4f8>
    c1f8:	ldr	r1, [r4, #80]	; 0x50
    c1fc:	mov	r0, r6
    c200:	adds	r2, r8, r1
    c204:	adc	r3, r9, r1, asr #31
    c208:	lsl	r1, r2, #2
    c20c:	strd	r2, [r5, #8]
    c210:	bl	400c <realloc@plt>
    c214:	str	r0, [r5, #16]
    c218:	ldr	r7, [r4, #16]
    c21c:	ldr	r3, [sp, #12]
    c220:	cmp	r7, #0
    c224:	str	r5, [r3, #4]
    c228:	str	r3, [r4, #300]	; 0x12c
    c22c:	beq	c590 <sas7bdat_begin_data+0x870>
    c230:	mov	r6, #0
    c234:	mov	r0, r6
    c238:	add	sp, sp, #84	; 0x54
    c23c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c240:	mov	r1, r7
    c244:	mov	r0, r4
    c248:	str	r3, [sp]
    c24c:	bl	439c <readstat_get_variable@plt>
    c250:	bl	4384 <readstat_variable_get_name@plt>
    c254:	mov	r2, r0
    c258:	mov	r1, sl
    c25c:	mov	r0, fp
    c260:	add	r7, r7, #1
    c264:	bl	b4e4 <sas7bdat_make_text_ref>
    c268:	ldrh	r2, [sp, #72]	; 0x48
    c26c:	ldr	r3, [sp]
    c270:	strh	r2, [r8, r3]
    c274:	ldrh	r3, [sp, #74]	; 0x4a
    c278:	strh	r3, [r9, #2]
    c27c:	ldrh	r3, [sp, #76]	; 0x4c
    c280:	strh	r3, [r9, #4]
    c284:	b	bf44 <sas7bdat_begin_data+0x224>
    c288:	mov	r1, r7
    c28c:	mov	r0, r4
    c290:	bl	439c <readstat_get_variable@plt>
    c294:	mov	fp, r0
    c298:	bl	4384 <readstat_variable_get_name@plt>
    c29c:	mov	r3, r0
    c2a0:	mov	r0, fp
    c2a4:	str	r3, [sp, #36]	; 0x24
    c2a8:	bl	41f8 <readstat_variable_get_type@plt>
    c2ac:	ldr	r3, [sp, #36]	; 0x24
    c2b0:	mov	r2, r0
    c2b4:	str	r2, [sp]
    c2b8:	mov	r0, r3
    c2bc:	bl	421c <strlen@plt>
    c2c0:	ldr	r1, [r6, #4]
    c2c4:	cmp	r0, #8
    c2c8:	movls	r3, #4
    c2cc:	movhi	r3, #2048	; 0x800
    c2d0:	ldr	r2, [sp]
    c2d4:	cmp	r1, #0
    c2d8:	beq	c344 <sas7bdat_begin_data+0x624>
    c2dc:	ldr	ip, [sp, #16]
    c2e0:	ldm	ip!, {r0, r1}
    c2e4:	str	r0, [r9]
    c2e8:	str	r1, [r9, #4]
    c2ec:	add	r1, r9, #8
    c2f0:	str	r1, [sp]
    c2f4:	cmp	r2, #0
    c2f8:	bne	c358 <sas7bdat_begin_data+0x638>
    c2fc:	str	r3, [sp, #36]	; 0x24
    c300:	mov	r2, #2
    c304:	mov	r0, fp
    c308:	ldr	r3, [sp]
    c30c:	strb	r2, [r3, #6]
    c310:	bl	42e8 <readstat_variable_get_storage_width@plt>
    c314:	ldr	r3, [sp, #36]	; 0x24
    c318:	add	r7, r7, #1
    c31c:	ldr	r2, [sp]
    c320:	str	r0, [r2]
    c324:	strh	r3, [r2, #4]
    c328:	ldrd	r2, [sp, #72]	; 0x48
    c32c:	adds	r8, r2, r0
    c330:	adc	r9, r3, #0
    c334:	ldr	r3, [sp]
    c338:	strd	r8, [sp, #72]	; 0x48
    c33c:	add	r9, r3, #8
    c340:	b	bfc8 <sas7bdat_begin_data+0x2a8>
    c344:	ldr	r1, [sp, #72]	; 0x48
    c348:	mov	r0, r9
    c34c:	str	r1, [r0], #4
    c350:	str	r0, [sp]
    c354:	b	c2f4 <sas7bdat_begin_data+0x5d4>
    c358:	ldr	r2, [sp]
    c35c:	mov	r1, #1
    c360:	mov	r0, #8
    c364:	strb	r1, [r2, #6]
    c368:	b	c318 <sas7bdat_begin_data+0x5f8>
    c36c:	bl	b2fc <sas7bdat_row_length>
    c370:	ldr	r3, [r8, #4]
    c374:	ldr	r1, [r4, #28]
    c378:	ldr	r2, [r6, #32]
    c37c:	ldr	ip, [r4, #80]	; 0x50
    c380:	str	r0, [r3, #20]
    c384:	ldr	r3, [r8, #4]
    c388:	str	ip, [r3, #24]
    c38c:	ldr	r3, [r8, #4]
    c390:	str	r1, [r3, #36]	; 0x24
    c394:	ldr	r3, [r8, #4]
    c398:	str	r2, [r3, #52]	; 0x34
    c39c:	mvn	r2, #0
    c3a0:	ldr	r3, [r8, #4]
    c3a4:	str	r2, [r3, #64]	; 0x40
    c3a8:	str	r2, [r3, #68]	; 0x44
    c3ac:	b	c098 <sas7bdat_begin_data+0x378>
    c3b0:	mov	r1, r8
    c3b4:	mov	r0, r4
    c3b8:	bl	439c <readstat_get_variable@plt>
    c3bc:	ldr	r3, [r6, #4]
    c3c0:	mov	r9, r0
    c3c4:	ldr	r0, [pc, #520]	; c5d4 <sas7bdat_begin_data+0x8b4>
    c3c8:	cmp	r3, #0
    c3cc:	movne	r1, #64	; 0x40
    c3d0:	moveq	r1, #52	; 0x34
    c3d4:	bl	b438 <sas7bdat_subheader_init>
    c3d8:	mov	r7, r0
    c3dc:	mov	r0, r9
    c3e0:	bl	3ef8 <readstat_variable_get_format@plt>
    c3e4:	mov	r2, r0
    c3e8:	mov	r0, r9
    c3ec:	str	r2, [sp, #36]	; 0x24
    c3f0:	bl	4420 <readstat_variable_get_label@plt>
    c3f4:	ldr	r1, [r6, #4]
    c3f8:	mov	r3, r0
    c3fc:	ldr	r2, [sp, #36]	; 0x24
    c400:	cmp	r1, #0
    c404:	moveq	fp, #34	; 0x22
    c408:	movne	fp, #46	; 0x2e
    c40c:	moveq	r9, #40	; 0x28
    c410:	movne	r9, #52	; 0x34
    c414:	cmp	r2, #0
    c418:	beq	c45c <sas7bdat_begin_data+0x73c>
    c41c:	mov	r1, sl
    c420:	ldr	r0, [sp]
    c424:	str	r3, [sp, #36]	; 0x24
    c428:	bl	b4e4 <sas7bdat_make_text_ref>
    c42c:	ldrh	r1, [sp, #72]	; 0x48
    c430:	ldr	r2, [r7, #4]
    c434:	ldr	r3, [sp, #36]	; 0x24
    c438:	strh	r1, [r2, fp]
    c43c:	ldr	r2, [r7, #4]
    c440:	ldrh	r1, [sp, #74]	; 0x4a
    c444:	add	r2, r2, fp
    c448:	strh	r1, [r2, #2]
    c44c:	ldr	r2, [r7, #4]
    c450:	add	fp, r2, fp
    c454:	ldrh	r2, [sp, #76]	; 0x4c
    c458:	strh	r2, [fp, #4]
    c45c:	cmp	r3, #0
    c460:	beq	c4a0 <sas7bdat_begin_data+0x780>
    c464:	mov	r2, r3
    c468:	mov	r1, sl
    c46c:	ldr	r0, [sp]
    c470:	bl	b4e4 <sas7bdat_make_text_ref>
    c474:	ldrh	r2, [sp, #72]	; 0x48
    c478:	ldr	r3, [r7, #4]
    c47c:	strh	r2, [r3, r9]
    c480:	ldr	r3, [r7, #4]
    c484:	ldrh	r2, [sp, #74]	; 0x4a
    c488:	add	r3, r3, r9
    c48c:	strh	r2, [r3, #2]
    c490:	ldr	r3, [r7, #4]
    c494:	add	r9, r3, r9
    c498:	ldrh	r3, [sp, #76]	; 0x4c
    c49c:	strh	r3, [r9, #4]
    c4a0:	ldr	r3, [sp, #16]
    c4a4:	str	r7, [r3, r8, lsl #2]
    c4a8:	add	r8, r8, #1
    c4ac:	b	c108 <sas7bdat_begin_data+0x3e8>
    c4b0:	ldr	r3, [r5, #16]
    c4b4:	ldr	r8, [r0, r1]
    c4b8:	mvn	r0, #2
    c4bc:	str	r3, [sp, #40]	; 0x28
    c4c0:	ldr	r3, [r6, #4]
    c4c4:	cmp	r3, #0
    c4c8:	movne	r7, #8
    c4cc:	moveq	r7, #4
    c4d0:	cmp	r8, #0
    c4d4:	add	fp, r7, #28
    c4d8:	ldrne	r3, [r8, #8]
    c4dc:	moveq	r3, r8
    c4e0:	add	r3, r3, fp
    c4e4:	mov	r1, r3
    c4e8:	str	r3, [sp, #44]	; 0x2c
    c4ec:	bl	b438 <sas7bdat_subheader_init>
    c4f0:	ldr	r3, [sp, #44]	; 0x2c
    c4f4:	mov	r9, r0
    c4f8:	mov	r1, r7
    c4fc:	mov	r0, r3
    c500:	bl	43d8 <sas_subheader_remainder@plt>
    c504:	ldr	r3, [r9, #4]
    c508:	ldr	r1, [pc, #200]	; c5d8 <sas7bdat_begin_data+0x8b8>
    c50c:	strh	r0, [r3, r7]
    c510:	add	r7, r7, #12
    c514:	ldr	r3, [r9, #4]
    c518:	add	r2, r3, r7
    c51c:	str	r1, [r3, r7]
    c520:	str	r1, [r2, #4]
    c524:	ldr	r0, [r9, #4]
    c528:	ldr	r1, [r8]
    c52c:	ldr	r2, [r8, #8]
    c530:	add	r0, r0, fp
    c534:	bl	3f34 <memcpy@plt>
    c538:	ldrd	r2, [sp, #36]	; 0x24
    c53c:	str	r9, [r3, r2]
    c540:	ldr	r3, [sp]
    c544:	adds	r3, r3, #1
    c548:	str	r3, [sp]
    c54c:	ldr	r3, [sp, #4]
    c550:	adc	r3, r3, #0
    c554:	str	r3, [sp, #4]
    c558:	b	c148 <sas7bdat_begin_data+0x428>
    c55c:	ldr	fp, [r0, r6, lsl #2]
    c560:	ldr	r0, [fp]
    c564:	bl	3ed4 <free@plt>
    c568:	mov	r0, fp
    c56c:	bl	3ed4 <free@plt>
    c570:	adds	r6, r6, #1
    c574:	adc	r7, r7, #0
    c578:	b	c188 <sas7bdat_begin_data+0x468>
    c57c:	ldr	r1, [sp, #16]
    c580:	ldr	r1, [r1, r3, lsl #2]
    c584:	add	r3, r3, #1
    c588:	str	r1, [r8, #4]!
    c58c:	b	c1d4 <sas7bdat_begin_data+0x4b4>
    c590:	mov	r0, r4
    c594:	bl	b6bc <sas7bdat_emit_header_and_meta_pages>
    c598:	subs	r6, r0, #0
    c59c:	beq	c230 <sas7bdat_begin_data+0x510>
    c5a0:	ldr	r5, [r4, #300]	; 0x12c
    c5a4:	cmp	r5, #0
    c5a8:	beq	c234 <sas7bdat_begin_data+0x514>
    c5ac:	ldr	r0, [r5]
    c5b0:	bl	3ed4 <free@plt>
    c5b4:	ldr	r0, [r5, #4]
    c5b8:	bl	b49c <sas7bdat_subheader_array_free>
    c5bc:	mov	r0, r5
    c5c0:	bl	3ed4 <free@plt>
    c5c4:	str	r7, [r4, #300]	; 0x12c
    c5c8:	b	c234 <sas7bdat_begin_data+0x514>
    c5cc:	.word	0xf7f7f7f7
    c5d0:	.word	0xf6f6f6f6
    c5d4:	.word	0xfffffbfe
    c5d8:	.word	0x20202020

0000c5dc <readstat_begin_writing_sas7bdat>:
    c5dc:	ldr	ip, [r0, #8]
    c5e0:	ldr	r3, [pc, #208]	; c6b8 <readstat_begin_writing_sas7bdat+0xdc>
    c5e4:	cmp	ip, #0
    c5e8:	moveq	ip, #9
    c5ec:	add	r3, pc, r3
    c5f0:	streq	ip, [r0, #8]
    c5f4:	ldr	ip, [pc, #192]	; c6bc <readstat_begin_writing_sas7bdat+0xe0>
    c5f8:	add	ip, pc, ip
    c5fc:	str	ip, [r0, #292]	; 0x124
    c600:	ldr	ip, [pc, #184]	; c6c0 <readstat_begin_writing_sas7bdat+0xe4>
    c604:	add	ip, pc, ip
    c608:	str	ip, [r0, #236]	; 0xec
    c60c:	ldr	ip, [pc, #176]	; c6c4 <readstat_begin_writing_sas7bdat+0xe8>
    c610:	add	ip, pc, ip
    c614:	str	ip, [r0, #240]	; 0xf0
    c618:	ldr	ip, [pc, #168]	; c6c8 <readstat_begin_writing_sas7bdat+0xec>
    c61c:	add	ip, pc, ip
    c620:	str	ip, [r0, #244]	; 0xf4
    c624:	ldr	ip, [pc, #160]	; c6cc <readstat_begin_writing_sas7bdat+0xf0>
    c628:	add	ip, pc, ip
    c62c:	str	ip, [r0, #248]	; 0xf8
    c630:	ldr	ip, [pc, #152]	; c6d0 <readstat_begin_writing_sas7bdat+0xf4>
    c634:	add	ip, pc, ip
    c638:	str	ip, [r0, #252]	; 0xfc
    c63c:	ldr	ip, [pc, #144]	; c6d4 <readstat_begin_writing_sas7bdat+0xf8>
    c640:	add	ip, pc, ip
    c644:	str	ip, [r0, #256]	; 0x100
    c648:	ldr	ip, [pc, #136]	; c6d8 <readstat_begin_writing_sas7bdat+0xfc>
    c64c:	add	ip, pc, ip
    c650:	str	ip, [r0, #264]	; 0x108
    c654:	ldr	ip, [pc, #128]	; c6dc <readstat_begin_writing_sas7bdat+0x100>
    c658:	add	ip, pc, ip
    c65c:	str	ip, [r0, #268]	; 0x10c
    c660:	ldr	ip, [pc, #120]	; c6e0 <readstat_begin_writing_sas7bdat+0x104>
    c664:	add	ip, pc, ip
    c668:	str	ip, [r0, #272]	; 0x110
    c66c:	ldr	ip, [pc, #112]	; c6e4 <readstat_begin_writing_sas7bdat+0x108>
    c670:	add	ip, pc, ip
    c674:	str	ip, [r0, #228]	; 0xe4
    c678:	ldr	ip, [pc, #104]	; c6e8 <readstat_begin_writing_sas7bdat+0x10c>
    c67c:	ldr	r3, [r3, ip]
    c680:	str	r3, [r0, #232]	; 0xe8
    c684:	ldr	r3, [pc, #96]	; c6ec <readstat_begin_writing_sas7bdat+0x110>
    c688:	add	r3, pc, r3
    c68c:	str	r3, [r0, #276]	; 0x114
    c690:	ldr	r3, [pc, #88]	; c6f0 <readstat_begin_writing_sas7bdat+0x114>
    c694:	add	r3, pc, r3
    c698:	str	r3, [r0, #284]	; 0x11c
    c69c:	ldr	r3, [pc, #80]	; c6f4 <readstat_begin_writing_sas7bdat+0x118>
    c6a0:	add	r3, pc, r3
    c6a4:	str	r3, [r0, #288]	; 0x120
    c6a8:	ldr	r3, [pc, #72]	; c6f8 <readstat_begin_writing_sas7bdat+0x11c>
    c6ac:	add	r3, pc, r3
    c6b0:	str	r3, [r0, #280]	; 0x118
    c6b4:	b	3f7c <readstat_begin_writing_file@plt>
    c6b8:	.word	0x00033a0c
    c6bc:	.word	0xffffece8
    c6c0:	.word	0xffffedfc
    c6c4:	.word	0xffffedc0
    c6c8:	.word	0xffffed84
    c6cc:	.word	0xffffed4c
    c6d0:	.word	0xffffed18
    c6d4:	.word	0xffffef88
    c6d8:	.word	0xffffefec
    c6dc:	.word	0xfffff4c8
    c6e0:	.word	0xffffefdc
    c6e4:	.word	0xffffec60
    c6e8:	.word	0x000002f0
    c6ec:	.word	0xfffff690
    c6f0:	.word	0xfffff470
    c6f4:	.word	0xffffeff0
    c6f8:	.word	0xfffff4b0

0000c6fc <sas_rle_is_special_byte>:
    c6fc:	and	r3, r0, #223	; 0xdf
    c700:	cmp	r3, #0
    c704:	cmpne	r0, #64	; 0x40
    c708:	moveq	r0, #1
    c70c:	movne	r0, #0
    c710:	bx	lr

0000c714 <sas_rle_insert_run>:
    c714:	push	{r4, r5, r6, lr}
    c718:	mov	r5, r0
    c71c:	add	r6, r0, r1
    c720:	mov	r0, r2
    c724:	mov	r4, r3
    c728:	bl	c6fc <sas_rle_is_special_byte>
    c72c:	cmp	r5, #0
    c730:	bne	c75c <sas_rle_insert_run+0x48>
    c734:	cmp	r0, #0
    c738:	beq	c74c <sas_rle_insert_run+0x38>
    c73c:	cmp	r4, #17
    c740:	movhi	r0, #2
    c744:	movls	r0, #1
    c748:	pop	{r4, r5, r6, pc}
    c74c:	cmp	r4, #19
    c750:	movcc	r0, #2
    c754:	movcs	r0, #3
    c758:	pop	{r4, r5, r6, pc}
    c75c:	cmp	r0, #0
    c760:	beq	c800 <sas_rle_insert_run+0xec>
    c764:	cmp	r4, #17
    c768:	bls	c7c0 <sas_rle_insert_run+0xac>
    c76c:	sub	r4, r4, #17
    c770:	cmp	r2, #64	; 0x40
    c774:	lsr	r3, r4, #8
    c778:	add	r0, r6, #1
    c77c:	uxtb	r4, r4
    c780:	andeq	r3, r3, #15
    c784:	addeq	r3, r3, #80	; 0x50
    c788:	beq	c7b0 <sas_rle_insert_run+0x9c>
    c78c:	cmp	r2, #32
    c790:	andeq	r3, r3, #15
    c794:	addeq	r3, r3, #96	; 0x60
    c798:	beq	c7b0 <sas_rle_insert_run+0x9c>
    c79c:	cmp	r2, #0
    c7a0:	movne	r0, r6
    c7a4:	bne	c7b4 <sas_rle_insert_run+0xa0>
    c7a8:	and	r3, r3, #15
    c7ac:	add	r3, r3, #112	; 0x70
    c7b0:	strb	r3, [r5, r1]
    c7b4:	strb	r4, [r0], #1
    c7b8:	sub	r0, r0, r6
    c7bc:	pop	{r4, r5, r6, pc}
    c7c0:	cmp	r4, #1
    c7c4:	bls	c844 <sas_rle_insert_run+0x130>
    c7c8:	cmp	r2, #64	; 0x40
    c7cc:	addeq	r0, r6, #1
    c7d0:	subeq	r4, r4, #50	; 0x32
    c7d4:	beq	c7f8 <sas_rle_insert_run+0xe4>
    c7d8:	cmp	r2, #32
    c7dc:	addeq	r0, r6, #1
    c7e0:	subeq	r4, r4, #34	; 0x22
    c7e4:	beq	c7f8 <sas_rle_insert_run+0xe4>
    c7e8:	cmp	r2, #0
    c7ec:	bne	c844 <sas_rle_insert_run+0x130>
    c7f0:	add	r0, r6, #1
    c7f4:	sub	r4, r4, #18
    c7f8:	strb	r4, [r5, r1]
    c7fc:	b	c7b8 <sas_rle_insert_run+0xa4>
    c800:	cmp	r4, #18
    c804:	bls	c828 <sas_rle_insert_run+0x114>
    c808:	sub	r4, r4, #18
    c80c:	add	r0, r6, #3
    c810:	ubfx	r3, r4, #8, #4
    c814:	add	r3, r3, #64	; 0x40
    c818:	strb	r3, [r5, r1]
    c81c:	strb	r4, [r6, #1]
    c820:	strb	r2, [r6, #2]
    c824:	b	c7b8 <sas_rle_insert_run+0xa4>
    c828:	cmp	r4, #2
    c82c:	bls	c844 <sas_rle_insert_run+0x130>
    c830:	sub	r4, r4, #67	; 0x43
    c834:	add	r0, r6, #2
    c838:	strb	r4, [r5, r1]
    c83c:	strb	r2, [r6, #1]
    c840:	b	c7b8 <sas_rle_insert_run+0xa4>
    c844:	mov	r0, r6
    c848:	b	c7b8 <sas_rle_insert_run+0xa4>

0000c84c <sas_rle_copy_run>:
    c84c:	cmp	r0, #0
    c850:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    c854:	add	r8, r0, r1
    c858:	beq	c8e0 <sas_rle_copy_run+0x94>
    c85c:	add	r6, r8, #2
    c860:	mov	r5, r3
    c864:	add	r7, r2, r3
    c868:	movw	r9, #4158	; 0x103e
    c86c:	mov	sl, #15
    c870:	cmp	r5, r9
    c874:	sub	r4, r6, #2
    c878:	sub	r1, r7, r5
    c87c:	bhi	c8ec <sas_rle_copy_run+0xa0>
    c880:	cmp	r5, #64	; 0x40
    c884:	bls	c918 <sas_rle_copy_run+0xcc>
    c888:	sub	r3, r5, #64	; 0x40
    c88c:	lsr	r2, r3, #8
    c890:	strb	r2, [r4]
    c894:	strb	r3, [r4, #1]
    c898:	mov	r4, r6
    c89c:	mov	r2, r5
    c8a0:	mov	r0, r4
    c8a4:	bl	3f34 <memcpy@plt>
    c8a8:	add	r0, r4, r5
    c8ac:	sub	r0, r0, r8
    c8b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    c8b4:	sub	r3, r3, #4096	; 0x1000
    c8b8:	add	r0, r0, r1
    c8bc:	sub	r3, r3, #63	; 0x3f
    c8c0:	cmp	r3, r2
    c8c4:	bhi	c8b4 <sas_rle_copy_run+0x68>
    c8c8:	add	r0, r0, r3
    c8cc:	cmp	r3, #64	; 0x40
    c8d0:	addhi	r0, r0, #1
    c8d4:	cmp	r3, #0
    c8d8:	addne	r0, r0, #1
    c8dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    c8e0:	movw	r2, #4158	; 0x103e
    c8e4:	movw	r1, #4161	; 0x1041
    c8e8:	b	c8c0 <sas_rle_copy_run+0x74>
    c8ec:	mvn	r3, #0
    c8f0:	mov	r0, r6
    c8f4:	strb	sl, [r6, #-2]
    c8f8:	movw	r2, #4159	; 0x103f
    c8fc:	sub	r5, r5, #4096	; 0x1000
    c900:	strb	r3, [r6, #-1]
    c904:	add	r6, r6, #4160	; 0x1040
    c908:	sub	r5, r5, #63	; 0x3f
    c90c:	bl	3f34 <memcpy@plt>
    c910:	add	r6, r6, #1
    c914:	b	c870 <sas_rle_copy_run+0x24>
    c918:	cmp	r5, #48	; 0x30
    c91c:	bls	c930 <sas_rle_copy_run+0xe4>
    c920:	add	r3, r5, #127	; 0x7f
    c924:	strb	r3, [r4]
    c928:	sub	r4, r6, #1
    c92c:	b	c89c <sas_rle_copy_run+0x50>
    c930:	cmp	r5, #32
    c934:	bhi	c920 <sas_rle_copy_run+0xd4>
    c938:	cmp	r5, #16
    c93c:	bhi	c920 <sas_rle_copy_run+0xd4>
    c940:	cmp	r5, #0
    c944:	beq	c89c <sas_rle_copy_run+0x50>
    c948:	b	c920 <sas_rle_copy_run+0xd4>

0000c94c <sas_rle_decompress>:
    c94c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    c950:	mov	r5, r0
    c954:	mov	r6, r1
    c958:	mov	r0, #0
    c95c:	add	r8, r2, r3
    c960:	ldr	r7, [pc, #408]	; cb00 <sas_rle_decompress+0x1b4>
    c964:	add	r7, pc, r7
    c968:	cmp	r8, r2
    c96c:	popls	{r4, r5, r6, r7, r8, r9, sl, pc}
    c970:	mov	r4, r2
    c974:	ldrb	ip, [r4], #1
    c978:	lsr	r3, ip, #4
    c97c:	and	ip, ip, #15
    c980:	ldr	r1, [r7, r3, lsl #2]
    c984:	add	r1, r4, r1
    c988:	cmp	r8, r1
    c98c:	bcc	c9f8 <sas_rle_decompress+0xac>
    c990:	cmp	r3, #15
    c994:	addls	pc, pc, r3, lsl #2
    c998:	b	caf8 <sas_rle_decompress+0x1ac>
    c99c:	b	c9dc <sas_rle_decompress+0x90>
    c9a0:	b	caf8 <sas_rle_decompress+0x1ac>
    c9a4:	b	caf8 <sas_rle_decompress+0x1ac>
    c9a8:	b	caf8 <sas_rle_decompress+0x1ac>
    c9ac:	b	ca00 <sas_rle_decompress+0xb4>
    c9b0:	b	ca40 <sas_rle_decompress+0xf4>
    c9b4:	b	ca58 <sas_rle_decompress+0x10c>
    c9b8:	b	ca70 <sas_rle_decompress+0x124>
    c9bc:	b	ca88 <sas_rle_decompress+0x13c>
    c9c0:	b	ca90 <sas_rle_decompress+0x144>
    c9c4:	b	ca98 <sas_rle_decompress+0x14c>
    c9c8:	b	caa0 <sas_rle_decompress+0x154>
    c9cc:	b	caa8 <sas_rle_decompress+0x15c>
    c9d0:	b	cab8 <sas_rle_decompress+0x16c>
    c9d4:	b	cac0 <sas_rle_decompress+0x174>
    c9d8:	b	cac8 <sas_rle_decompress+0x17c>
    c9dc:	add	r4, r2, #2
    c9e0:	ldrb	r2, [r2, #1]
    c9e4:	add	r2, r2, #64	; 0x40
    c9e8:	add	r2, r2, ip, lsl #8
    c9ec:	add	r9, r2, r0
    c9f0:	cmp	r9, r6
    c9f4:	bls	cad0 <sas_rle_decompress+0x184>
    c9f8:	mvn	r0, #0
    c9fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    ca00:	ldrb	r3, [r2, #1]
    ca04:	add	r4, r2, #3
    ca08:	ldrb	r1, [r2, #2]
    ca0c:	add	r3, r3, #18
    ca10:	add	ip, r3, ip, lsl #8
    ca14:	add	r9, ip, r0
    ca18:	cmp	r9, r6
    ca1c:	bhi	c9f8 <sas_rle_decompress+0xac>
    ca20:	cmp	r5, #0
    ca24:	beq	ca34 <sas_rle_decompress+0xe8>
    ca28:	mov	r2, ip
    ca2c:	add	r0, r5, r0
    ca30:	bl	42b8 <memset@plt>
    ca34:	mov	r2, r4
    ca38:	mov	r0, r9
    ca3c:	b	c968 <sas_rle_decompress+0x1c>
    ca40:	add	r4, r2, #2
    ca44:	ldrb	r2, [r2, #1]
    ca48:	add	r2, r2, #17
    ca4c:	add	ip, r2, ip, lsl #8
    ca50:	mov	r1, #64	; 0x40
    ca54:	b	ca14 <sas_rle_decompress+0xc8>
    ca58:	add	r4, r2, #2
    ca5c:	ldrb	r2, [r2, #1]
    ca60:	add	r2, r2, #17
    ca64:	add	ip, r2, ip, lsl #8
    ca68:	mov	r1, #32
    ca6c:	b	ca14 <sas_rle_decompress+0xc8>
    ca70:	add	r4, r2, #2
    ca74:	ldrb	r2, [r2, #1]
    ca78:	add	r2, r2, #17
    ca7c:	add	ip, r2, ip, lsl #8
    ca80:	mov	r1, #0
    ca84:	b	ca14 <sas_rle_decompress+0xc8>
    ca88:	add	r2, ip, #1
    ca8c:	b	c9ec <sas_rle_decompress+0xa0>
    ca90:	add	r2, ip, #17
    ca94:	b	c9ec <sas_rle_decompress+0xa0>
    ca98:	add	r2, ip, #33	; 0x21
    ca9c:	b	c9ec <sas_rle_decompress+0xa0>
    caa0:	add	r2, ip, #49	; 0x31
    caa4:	b	c9ec <sas_rle_decompress+0xa0>
    caa8:	add	r4, r2, #2
    caac:	ldrb	r1, [r2, #1]
    cab0:	add	ip, ip, #3
    cab4:	b	ca14 <sas_rle_decompress+0xc8>
    cab8:	add	ip, ip, #2
    cabc:	b	ca50 <sas_rle_decompress+0x104>
    cac0:	add	ip, ip, #2
    cac4:	b	ca68 <sas_rle_decompress+0x11c>
    cac8:	add	ip, ip, #2
    cacc:	b	ca80 <sas_rle_decompress+0x134>
    cad0:	add	sl, r4, r2
    cad4:	cmp	sl, r8
    cad8:	bhi	c9f8 <sas_rle_decompress+0xac>
    cadc:	cmp	r5, #0
    cae0:	beq	caf0 <sas_rle_decompress+0x1a4>
    cae4:	mov	r1, r4
    cae8:	add	r0, r5, r0
    caec:	bl	3f34 <memcpy@plt>
    caf0:	mov	r4, sl
    caf4:	b	ca34 <sas_rle_decompress+0xe8>
    caf8:	mov	r9, r0
    cafc:	b	ca34 <sas_rle_decompress+0xe8>
    cb00:	.word	0x00014590

0000cb04 <sas_rle_decompressed_len>:
    cb04:	mov	r3, r1
    cb08:	mov	r1, #0
    cb0c:	mov	r2, r0
    cb10:	mov	r0, r1
    cb14:	b	4090 <sas_rle_decompress@plt>

0000cb18 <sas_rle_compress>:
    cb18:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cb1c:	mov	r6, #0
    cb20:	mov	r7, r0
    cb24:	add	sl, r2, r3
    cb28:	mov	r8, r2
    cb2c:	mov	r4, r6
    cb30:	mov	r1, r6
    cb34:	mov	r5, r6
    cb38:	movw	fp, #4111	; 0x100f
    cb3c:	cmp	r8, sl
    cb40:	str	r8, [sp, #4]
    cb44:	bcc	cba0 <sas_rle_compress+0x88>
    cb48:	mov	r0, r6
    cb4c:	bl	c6fc <sas_rle_is_special_byte>
    cb50:	cmp	r0, #0
    cb54:	beq	cc2c <sas_rle_compress+0x114>
    cb58:	cmp	r5, #1
    cb5c:	movls	r3, #0
    cb60:	movhi	r3, #1
    cb64:	cmp	r3, #0
    cb68:	beq	cc34 <sas_rle_compress+0x11c>
    cb6c:	mov	r3, r1
    cb70:	mov	r0, r7
    cb74:	mov	r1, r4
    cb78:	bl	c84c <sas_rle_copy_run>
    cb7c:	add	r4, r4, r0
    cb80:	mov	r3, r5
    cb84:	mov	r2, r6
    cb88:	mov	r1, r4
    cb8c:	mov	r0, r7
    cb90:	bl	c714 <sas_rle_insert_run>
    cb94:	add	r0, r4, r0
    cb98:	add	sp, sp, #12
    cb9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cba0:	cmp	r5, #0
    cba4:	ldrb	r9, [r8], #1
    cba8:	beq	cc18 <sas_rle_compress+0x100>
    cbac:	cmp	r5, fp
    cbb0:	cmpls	r6, r9
    cbb4:	addeq	r5, r5, #1
    cbb8:	beq	cc1c <sas_rle_compress+0x104>
    cbbc:	mov	r0, r6
    cbc0:	bl	c6fc <sas_rle_is_special_byte>
    cbc4:	cmp	r0, #0
    cbc8:	beq	cc24 <sas_rle_compress+0x10c>
    cbcc:	cmp	r5, #1
    cbd0:	movls	r3, #0
    cbd4:	movhi	r3, #1
    cbd8:	cmp	r3, #0
    cbdc:	addeq	r1, r1, r5
    cbe0:	beq	cc18 <sas_rle_compress+0x100>
    cbe4:	mov	r3, r1
    cbe8:	mov	r0, r7
    cbec:	mov	r1, r4
    cbf0:	bl	c84c <sas_rle_copy_run>
    cbf4:	add	r4, r4, r0
    cbf8:	mov	r2, r6
    cbfc:	mov	r1, r4
    cc00:	mov	r3, r5
    cc04:	mov	r0, r7
    cc08:	bl	c714 <sas_rle_insert_run>
    cc0c:	ldr	r2, [sp, #4]
    cc10:	add	r4, r4, r0
    cc14:	mov	r1, #0
    cc18:	mov	r5, #1
    cc1c:	mov	r6, r9
    cc20:	b	cb3c <sas_rle_compress+0x24>
    cc24:	cmp	r5, #2
    cc28:	b	cbd0 <sas_rle_compress+0xb8>
    cc2c:	cmp	r5, #2
    cc30:	b	cb5c <sas_rle_compress+0x44>
    cc34:	add	r3, r5, r1
    cc38:	mov	r0, r7
    cc3c:	mov	r1, r4
    cc40:	bl	c84c <sas_rle_copy_run>
    cc44:	b	cb94 <sas_rle_compress+0x7c>

0000cc48 <sas_rle_compressed_len>:
    cc48:	mov	r3, r1
    cc4c:	mov	r1, #0
    cc50:	mov	r2, r0
    cc54:	mov	r0, r1
    cc58:	b	44f8 <sas_rle_compress@plt>

0000cc5c <xport_namestr_bswap>:
    cc5c:	push	{r4, lr}
    cc60:	mov	r4, r0
    cc64:	bl	3ec8 <machine_is_little_endian@plt>
    cc68:	cmp	r0, #0
    cc6c:	popeq	{r4, pc}
    cc70:	ldrh	r0, [r4]
    cc74:	bl	3ebc <byteswap2@plt>
    cc78:	strh	r0, [r4]
    cc7c:	ldrh	r0, [r4, #2]
    cc80:	bl	3ebc <byteswap2@plt>
    cc84:	strh	r0, [r4, #2]
    cc88:	ldrh	r0, [r4, #4]
    cc8c:	bl	3ebc <byteswap2@plt>
    cc90:	strh	r0, [r4, #4]
    cc94:	ldrh	r0, [r4, #6]
    cc98:	bl	3ebc <byteswap2@plt>
    cc9c:	strh	r0, [r4, #6]
    cca0:	ldrh	r0, [r4, #64]	; 0x40
    cca4:	bl	3ebc <byteswap2@plt>
    cca8:	strh	r0, [r4, #64]	; 0x40
    ccac:	ldrh	r0, [r4, #66]	; 0x42
    ccb0:	bl	3ebc <byteswap2@plt>
    ccb4:	strh	r0, [r4, #66]	; 0x42
    ccb8:	ldrh	r0, [r4, #68]	; 0x44
    ccbc:	bl	3ebc <byteswap2@plt>
    ccc0:	strh	r0, [r4, #68]	; 0x44
    ccc4:	ldrh	r0, [r4, #80]	; 0x50
    ccc8:	bl	3ebc <byteswap2@plt>
    cccc:	strh	r0, [r4, #80]	; 0x50
    ccd0:	ldrh	r0, [r4, #82]	; 0x52
    ccd4:	bl	3ebc <byteswap2@plt>
    ccd8:	strh	r0, [r4, #82]	; 0x52
    ccdc:	ldr	r0, [r4, #84]	; 0x54
    cce0:	bl	3da8 <byteswap4@plt>
    cce4:	str	r0, [r4, #84]	; 0x54
    cce8:	ldrh	r0, [r4, #120]	; 0x78
    ccec:	bl	3ebc <byteswap2@plt>
    ccf0:	strh	r0, [r4, #120]	; 0x78
    ccf4:	pop	{r4, pc}

0000ccf8 <read_bytes.isra.0>:
    ccf8:	mov	r3, r0
    ccfc:	push	{lr}		; (str lr, [sp, #-4]!)
    cd00:	mov	r0, r1
    cd04:	mov	r1, r2
    cd08:	ldr	lr, [r3, #12]
    cd0c:	ldr	r2, [r3, #20]
    cd10:	mov	r3, lr
    cd14:	pop	{lr}		; (ldr lr, [sp], #4)
    cd18:	bx	r3

0000cd1c <xport_read_record>:
    cd1c:	push	{r4, lr}
    cd20:	mov	r2, #80	; 0x50
    cd24:	mov	r4, r1
    cd28:	ldr	r0, [r0, #52]	; 0x34
    cd2c:	bl	ccf8 <read_bytes.isra.0>
    cd30:	cmp	r0, #79	; 0x4f
    cd34:	movgt	r0, #0
    cd38:	movle	r0, #2
    cd3c:	strbgt	r0, [r4, #80]	; 0x50
    cd40:	pop	{r4, pc}

0000cd44 <xport_read_header_record>:
    cd44:	push	{r4, r5, r6, lr}
    cd48:	sub	sp, sp, #112	; 0x70
    cd4c:	mov	r4, r1
    cd50:	add	r6, sp, #28
    cd54:	mov	r1, r6
    cd58:	bl	cd1c <xport_read_record>
    cd5c:	subs	r5, r0, #0
    cd60:	bne	cdbc <xport_read_header_record+0x78>
    cd64:	mov	r1, r5
    cd68:	mov	r2, #36	; 0x24
    cd6c:	mov	r0, r4
    cd70:	bl	42b8 <memset@plt>
    cd74:	add	r3, r4, #32
    cd78:	ldr	r1, [pc, #72]	; cdc8 <xport_read_header_record+0x84>
    cd7c:	mov	r2, r4
    cd80:	mov	r0, r6
    cd84:	str	r3, [sp, #16]
    cd88:	add	r3, r4, #28
    cd8c:	str	r3, [sp, #12]
    cd90:	add	r3, r4, #24
    cd94:	add	r1, pc, r1
    cd98:	str	r3, [sp, #8]
    cd9c:	add	r3, r4, #20
    cda0:	str	r3, [sp, #4]
    cda4:	add	r3, r4, #16
    cda8:	str	r3, [sp]
    cdac:	add	r3, r4, #12
    cdb0:	bl	42a0 <__isoc99_sscanf@plt>
    cdb4:	cmp	r0, #1
    cdb8:	movle	r5, #5
    cdbc:	mov	r0, r5
    cdc0:	add	sp, sp, #112	; 0x70
    cdc4:	pop	{r4, r5, r6, pc}
    cdc8:	.word	0x000141a0

0000cdcc <xport_expect_header_record>:
    cdcc:	push	{r4, r5, r6, r7, r8, lr}
    cdd0:	sub	sp, sp, #40	; 0x28
    cdd4:	mov	r7, r1
    cdd8:	add	r5, sp, #4
    cddc:	mov	r8, r0
    cde0:	mov	r1, r5
    cde4:	mov	r6, r2
    cde8:	bl	cd44 <xport_read_header_record>
    cdec:	subs	r4, r0, #0
    cdf0:	bne	ce20 <xport_expect_header_record+0x54>
    cdf4:	ldr	r3, [r8, #380]	; 0x17c
    cdf8:	cmp	r3, #5
    cdfc:	moveq	r1, r7
    ce00:	beq	ce10 <xport_expect_header_record+0x44>
    ce04:	cmp	r3, #8
    ce08:	bne	ce20 <xport_expect_header_record+0x54>
    ce0c:	mov	r1, r6
    ce10:	mov	r0, r5
    ce14:	bl	3e14 <strcmp@plt>
    ce18:	cmp	r0, #0
    ce1c:	movne	r4, #5
    ce20:	mov	r0, r4
    ce24:	add	sp, sp, #40	; 0x28
    ce28:	pop	{r4, r5, r6, r7, r8, pc}

0000ce2c <xport_skip_rest_of_record.isra.2>:
    ce2c:	push	{r4, lr}
    ce30:	mov	r1, #1
    ce34:	mov	r4, r0
    ce38:	ldr	r3, [r0, #8]
    ce3c:	ldr	r2, [r0, #20]
    ce40:	mov	r0, #0
    ce44:	blx	r3
    ce48:	cmn	r0, #1
    ce4c:	beq	ce88 <xport_skip_rest_of_record.isra.2+0x5c>
    ce50:	mov	r2, #80	; 0x50
    ce54:	sdiv	r3, r0, r2
    ce58:	mls	r0, r2, r3, r0
    ce5c:	cmp	r0, #0
    ce60:	bne	ce6c <xport_skip_rest_of_record.isra.2+0x40>
    ce64:	mov	r0, #0
    ce68:	pop	{r4, pc}
    ce6c:	mov	r1, #1
    ce70:	rsb	r0, r0, #80	; 0x50
    ce74:	ldr	r3, [r4, #8]
    ce78:	ldr	r2, [r4, #20]
    ce7c:	blx	r3
    ce80:	cmn	r0, #1
    ce84:	bne	ce64 <xport_skip_rest_of_record.isra.2+0x38>
    ce88:	mov	r0, #15
    ce8c:	pop	{r4, pc}

0000ce90 <xport_process_row.isra.3>:
    ce90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ce94:	mov	r5, #0
    ce98:	mov	r4, r0
    ce9c:	mov	r9, r1
    cea0:	mov	r6, r5
    cea4:	mov	r8, r5
    cea8:	vpush	{d8}
    ceac:	sub	sp, sp, #60	; 0x3c
    ceb0:	vldr	d8, [pc, #496]	; d0a8 <xport_process_row.isra.3+0x218>
    ceb4:	add	sl, sp, #40	; 0x28
    ceb8:	ldr	r3, [r4, #64]	; 0x40
    cebc:	cmp	r8, r3
    cec0:	blt	cee8 <xport_process_row.isra.3+0x58>
    cec4:	ldr	fp, [r4, #72]	; 0x48
    cec8:	cmp	fp, #0
    cecc:	ldreq	r3, [r4, #80]	; 0x50
    ced0:	subne	fp, fp, #1
    ced4:	strne	fp, [r4, #72]	; 0x48
    ced8:	movne	fp, #0
    cedc:	addeq	r3, r3, #1
    cee0:	streq	r3, [r4, #80]	; 0x50
    cee4:	b	d030 <xport_process_row.isra.3+0x1a0>
    cee8:	lsl	r3, r8, #2
    ceec:	mov	r2, #0
    cef0:	str	r3, [sp, #20]
    cef4:	ldr	r3, [r4, #376]	; 0x178
    cef8:	ldr	r7, [r3, r8, lsl #2]
    cefc:	mov	r3, #0
    cf00:	strd	r2, [sl]
    cf04:	strd	r2, [sl, #8]
    cf08:	ldr	r3, [r7]
    cf0c:	ldr	r2, [r7, #1596]	; 0x63c
    cf10:	cmp	r3, #0
    cf14:	str	r3, [sp, #48]	; 0x30
    cf18:	bne	cf78 <xport_process_row.isra.3+0xe8>
    cf1c:	lsl	r2, r2, #2
    cf20:	mov	r0, r5
    cf24:	add	r1, r2, #1
    cf28:	bl	4300 <readstat_realloc@plt>
    cf2c:	subs	r5, r0, #0
    cf30:	beq	d0a0 <xport_process_row.isra.3+0x210>
    cf34:	ldr	r3, [r7, #1596]	; 0x63c
    cf38:	ldr	r2, [r4, #48]	; 0x30
    cf3c:	lsl	r1, r3, #2
    cf40:	add	r1, r1, #1
    cf44:	str	r2, [sp]
    cf48:	add	r2, r9, r6
    cf4c:	bl	424c <readstat_convert@plt>
    cf50:	subs	fp, r0, #0
    cf54:	bne	d030 <xport_process_row.isra.3+0x1a0>
    cf58:	str	r5, [sp, #40]	; 0x28
    cf5c:	ldr	fp, [r4, #16]
    cf60:	ldr	r3, [r7, #1596]	; 0x63c
    cf64:	cmp	fp, #0
    cf68:	add	r6, r6, r3
    cf6c:	bne	d048 <xport_process_row.isra.3+0x1b8>
    cf70:	add	r8, r8, #1
    cf74:	b	ceb8 <xport_process_row.isra.3+0x28>
    cf78:	sub	r3, r2, #3
    cf7c:	vstr	d8, [sp, #24]
    cf80:	cmp	r3, #5
    cf84:	bhi	cfe4 <xport_process_row.isra.3+0x154>
    cf88:	mov	r0, #0
    cf8c:	mov	r1, #0
    cf90:	sub	r2, r2, #1
    cf94:	add	fp, sp, #32
    cf98:	strd	r0, [sp, #32]
    cf9c:	add	r1, r6, #1
    cfa0:	add	r0, sp, #33	; 0x21
    cfa4:	add	r1, r9, r1
    cfa8:	bl	3fb8 <memcmp@plt>
    cfac:	cmp	r0, #0
    cfb0:	add	r1, r9, r6
    cfb4:	bne	d004 <xport_process_row.isra.3+0x174>
    cfb8:	ldrb	r0, [r9, r6]
    cfbc:	cmp	r0, #46	; 0x2e
    cfc0:	bne	cff0 <xport_process_row.isra.3+0x160>
    cfc4:	ldrb	r3, [r1]
    cfc8:	cmp	r3, #46	; 0x2e
    cfcc:	strbne	r3, [sp, #52]	; 0x34
    cfd0:	ldrbne	r3, [sp, #53]	; 0x35
    cfd4:	orrne	r3, r3, #2
    cfd8:	ldrbeq	r3, [sp, #53]	; 0x35
    cfdc:	orreq	r3, r3, #1
    cfe0:	strb	r3, [sp, #53]	; 0x35
    cfe4:	ldrd	r2, [sp, #24]
    cfe8:	strd	r2, [sp, #40]	; 0x28
    cfec:	b	cf5c <xport_process_row.isra.3+0xcc>
    cff0:	str	r1, [sp, #20]
    cff4:	bl	4168 <sas_validate_tag@plt>
    cff8:	cmp	r0, #0
    cffc:	ldr	r1, [sp, #20]
    d000:	beq	cfc4 <xport_process_row.isra.3+0x134>
    d004:	mov	r0, fp
    d008:	ldr	r2, [r7, #1596]	; 0x63c
    d00c:	bl	3f34 <memcpy@plt>
    d010:	mov	r3, #0
    d014:	add	r2, sp, #24
    d018:	mov	r1, #1
    d01c:	mov	r0, fp
    d020:	bl	4018 <cnxptiee@plt>
    d024:	cmp	r0, #0
    d028:	beq	cfe4 <xport_process_row.isra.3+0x154>
    d02c:	mov	fp, #16
    d030:	mov	r0, r5
    d034:	bl	3ed4 <free@plt>
    d038:	mov	r0, fp
    d03c:	add	sp, sp, #60	; 0x3c
    d040:	vpop	{d8}
    d044:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d048:	ldr	r3, [r4, #376]	; 0x178
    d04c:	lsl	r2, r8, #2
    d050:	ldr	r3, [r3, r2]
    d054:	ldr	r3, [r3, #2144]	; 0x860
    d058:	cmp	r3, #0
    d05c:	bne	cf70 <xport_process_row.isra.3+0xe0>
    d060:	ldr	r3, [r4, #72]	; 0x48
    d064:	cmp	r3, #0
    d068:	bne	cf70 <xport_process_row.isra.3+0xe0>
    d06c:	ldr	r3, [r4, #36]	; 0x24
    d070:	str	r3, [sp, #8]
    d074:	add	r3, sp, #56	; 0x38
    d078:	ldmdb	r3, {r0, r1}
    d07c:	stm	sp, {r0, r1}
    d080:	mov	r1, r7
    d084:	ldm	sl, {r2, r3}
    d088:	ldr	r0, [r4, #80]	; 0x50
    d08c:	blx	fp
    d090:	cmp	r0, #0
    d094:	beq	cf70 <xport_process_row.isra.3+0xe0>
    d098:	mov	fp, #4
    d09c:	b	d030 <xport_process_row.isra.3+0x1a0>
    d0a0:	mov	fp, #3
    d0a4:	b	d030 <xport_process_row.isra.3+0x1a0>
    d0a8:	.word	0x00000000
    d0ac:	.word	0x7ff80000

0000d0b0 <xport_construct_format.constprop.4>:
    d0b0:	push	{r4, r5, r6, r7, r8, fp, lr}
    d0b4:	mov	r5, r0
    d0b8:	lsl	r0, r2, #2
    d0bc:	add	fp, sp, #24
    d0c0:	mov	r6, r3
    d0c4:	sub	sp, sp, #12
    d0c8:	add	r3, r0, #8
    d0cc:	bic	r3, r3, #7
    d0d0:	sub	sp, sp, r3
    d0d4:	mov	r3, #0
    d0d8:	ldr	r8, [fp, #4]
    d0dc:	mov	r4, sp
    d0e0:	str	r3, [r4], #8
    d0e4:	mov	r3, r2
    d0e8:	mov	r2, r1
    d0ec:	add	r1, r0, #1
    d0f0:	mov	r0, r4
    d0f4:	bl	424c <readstat_convert@plt>
    d0f8:	subs	r7, r0, #0
    d0fc:	bne	d134 <xport_construct_format.constprop.4+0x84>
    d100:	ldrb	r3, [sp, #8]
    d104:	cmp	r3, #0
    d108:	strbeq	r7, [r5]
    d10c:	beq	d134 <xport_construct_format.constprop.4+0x84>
    d110:	cmp	r8, #0
    d114:	beq	d140 <xport_construct_format.constprop.4+0x90>
    d118:	ldr	r2, [pc, #100]	; d184 <xport_construct_format.constprop.4+0xd4>
    d11c:	mov	r3, r4
    d120:	mov	r1, #256	; 0x100
    d124:	mov	r0, r5
    d128:	stm	sp, {r6, r8}
    d12c:	add	r2, pc, r2
    d130:	bl	4294 <snprintf@plt>
    d134:	mov	r0, r7
    d138:	sub	sp, fp, #24
    d13c:	pop	{r4, r5, r6, r7, r8, fp, pc}
    d140:	cmp	r6, #0
    d144:	beq	d168 <xport_construct_format.constprop.4+0xb8>
    d148:	ldr	r2, [pc, #56]	; d188 <xport_construct_format.constprop.4+0xd8>
    d14c:	mov	r3, r4
    d150:	mov	r1, #256	; 0x100
    d154:	mov	r0, r5
    d158:	str	r6, [sp]
    d15c:	add	r2, pc, r2
    d160:	bl	4294 <snprintf@plt>
    d164:	b	d134 <xport_construct_format.constprop.4+0x84>
    d168:	ldr	r2, [pc, #28]	; d18c <xport_construct_format.constprop.4+0xdc>
    d16c:	mov	r3, r4
    d170:	mov	r1, #256	; 0x100
    d174:	mov	r0, r5
    d178:	add	r2, pc, r2
    d17c:	bl	4294 <snprintf@plt>
    d180:	b	d134 <xport_construct_format.constprop.4+0x84>
    d184:	.word	0x00013e4d
    d188:	.word	0x00013e25
    d18c:	.word	0x000149ce

0000d190 <readstat_parse_xport>:
    d190:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d194:	add	fp, sp, #32
    d198:	sub	sp, sp, #252	; 0xfc
    d19c:	mov	r5, r0
    d1a0:	mov	r6, r1
    d1a4:	mov	r1, #384	; 0x180
    d1a8:	mov	r8, r2
    d1ac:	ldr	r3, [r0, #32]
    d1b0:	mov	r0, #1
    d1b4:	ldr	r7, [pc, #2980]	; dd60 <readstat_parse_xport+0xbd0>
    d1b8:	str	r3, [fp, #-232]	; 0xffffff18
    d1bc:	bl	3d6c <calloc@plt>
    d1c0:	mov	lr, r5
    d1c4:	mov	r4, r0
    d1c8:	mov	ip, r0
    d1cc:	ldm	lr!, {r0, r1, r2, r3}
    d1d0:	add	r7, pc, r7
    d1d4:	stmia	ip!, {r0, r1, r2, r3}
    d1d8:	ldm	lr, {r0, r1, r2, r3}
    d1dc:	stm	ip, {r0, r1, r2, r3}
    d1e0:	mov	r0, r6
    d1e4:	ldr	r3, [r5, #36]	; 0x24
    d1e8:	str	r8, [r4, #36]	; 0x24
    d1ec:	ldr	r2, [fp, #-232]	; 0xffffff18
    d1f0:	str	r3, [r4, #40]	; 0x28
    d1f4:	ldr	r3, [r5, #40]	; 0x28
    d1f8:	ldr	r1, [r2, #20]
    d1fc:	str	r3, [r4, #44]	; 0x2c
    d200:	ldr	r3, [fp, #-232]	; 0xffffff18
    d204:	str	r3, [r4, #52]	; 0x34
    d208:	ldr	r3, [r5, #44]	; 0x2c
    d20c:	str	r3, [r4, #68]	; 0x44
    d210:	ldr	r3, [r5, #48]	; 0x30
    d214:	cmp	r3, #0
    d218:	strgt	r3, [r4, #72]	; 0x48
    d21c:	ldr	r3, [fp, #-232]	; 0xffffff18
    d220:	ldr	r3, [r3]
    d224:	blx	r3
    d228:	cmn	r0, #1
    d22c:	moveq	sl, #1
    d230:	beq	d260 <readstat_parse_xport+0xd0>
    d234:	ldr	r3, [fp, #-232]	; 0xffffff18
    d238:	mov	r1, #2
    d23c:	mov	r0, #0
    d240:	ldr	r2, [fp, #-232]	; 0xffffff18
    d244:	ldr	r3, [r3, #8]
    d248:	ldr	r2, [r2, #20]
    d24c:	blx	r3
    d250:	cmn	r0, #1
    d254:	str	r0, [r4, #32]
    d258:	bne	d2a8 <readstat_parse_xport+0x118>
    d25c:	mov	sl, #15
    d260:	ldr	r3, [fp, #-232]	; 0xffffff18
    d264:	ldr	r2, [fp, #-232]	; 0xffffff18
    d268:	ldr	r3, [r3, #4]
    d26c:	ldr	r0, [r2, #20]
    d270:	blx	r3
    d274:	ldr	r3, [r4, #376]	; 0x178
    d278:	cmp	r3, #0
    d27c:	movne	r5, #0
    d280:	bne	dd48 <readstat_parse_xport+0xbb8>
    d284:	ldr	r0, [r4, #48]	; 0x30
    d288:	cmp	r0, #0
    d28c:	beq	d294 <readstat_parse_xport+0x104>
    d290:	bl	3de4 <iconv_close@plt>
    d294:	mov	r0, r4
    d298:	bl	3ed4 <free@plt>
    d29c:	mov	r0, sl
    d2a0:	sub	sp, fp, #32
    d2a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d2a8:	ldr	r3, [fp, #-232]	; 0xffffff18
    d2ac:	mov	r1, #0
    d2b0:	mov	r0, r1
    d2b4:	ldr	r2, [fp, #-232]	; 0xffffff18
    d2b8:	ldr	r3, [r3, #8]
    d2bc:	ldr	r2, [r2, #20]
    d2c0:	blx	r3
    d2c4:	cmn	r0, #1
    d2c8:	beq	d25c <readstat_parse_xport+0xcc>
    d2cc:	ldr	r6, [r4, #40]	; 0x28
    d2d0:	cmp	r6, #0
    d2d4:	beq	d314 <readstat_parse_xport+0x184>
    d2d8:	ldr	r5, [r4, #44]	; 0x2c
    d2dc:	cmp	r5, #0
    d2e0:	beq	d314 <readstat_parse_xport+0x184>
    d2e4:	mov	r1, r5
    d2e8:	mov	r0, r6
    d2ec:	bl	3e14 <strcmp@plt>
    d2f0:	cmp	r0, #0
    d2f4:	beq	d314 <readstat_parse_xport+0x184>
    d2f8:	mov	r1, r6
    d2fc:	mov	r0, r5
    d300:	bl	4150 <iconv_open@plt>
    d304:	cmn	r0, #1
    d308:	moveq	sl, #7
    d30c:	beq	d260 <readstat_parse_xport+0xd0>
    d310:	str	r0, [r4, #48]	; 0x30
    d314:	sub	r5, fp, #180	; 0xb4
    d318:	mov	r0, r4
    d31c:	mov	r1, r5
    d320:	bl	cd44 <xport_read_header_record>
    d324:	subs	sl, r0, #0
    d328:	bne	d260 <readstat_parse_xport+0xd0>
    d32c:	ldr	r1, [pc, #2608]	; dd64 <readstat_parse_xport+0xbd4>
    d330:	mov	r0, r5
    d334:	add	r1, pc, r1
    d338:	bl	3e14 <strcmp@plt>
    d33c:	cmp	r0, #0
    d340:	moveq	r3, #5
    d344:	beq	d368 <readstat_parse_xport+0x1d8>
    d348:	ldr	r1, [pc, #2584]	; dd68 <readstat_parse_xport+0xbd8>
    d34c:	mov	r0, r5
    d350:	add	r1, pc, r1
    d354:	bl	3e14 <strcmp@plt>
    d358:	cmp	r0, #0
    d35c:	movne	sl, #24
    d360:	bne	d260 <readstat_parse_xport+0xd0>
    d364:	mov	r3, #8
    d368:	str	r3, [r4, #380]	; 0x17c
    d36c:	mov	r1, #1
    d370:	mov	r0, #80	; 0x50
    d374:	ldr	r3, [r4, #52]	; 0x34
    d378:	ldr	r6, [r3, #8]
    d37c:	ldr	r2, [r3, #20]
    d380:	blx	r6
    d384:	cmn	r0, #1
    d388:	beq	d25c <readstat_parse_xport+0xcc>
    d38c:	sub	r6, fp, #224	; 0xe0
    d390:	mov	r2, #44	; 0x2c
    d394:	mov	r1, #0
    d398:	mov	r0, r6
    d39c:	bl	42b8 <memset@plt>
    d3a0:	mvn	r3, #0
    d3a4:	mov	r1, r5
    d3a8:	mov	r0, r4
    d3ac:	str	r3, [fp, #-192]	; 0xffffff40
    d3b0:	bl	cd1c <xport_read_record>
    d3b4:	subs	sl, r0, #0
    d3b8:	bne	d260 <readstat_parse_xport+0xd0>
    d3bc:	sub	r3, fp, #220	; 0xdc
    d3c0:	ldr	r1, [pc, #2468]	; dd6c <readstat_parse_xport+0xbdc>
    d3c4:	sub	r8, fp, #228	; 0xe4
    d3c8:	sub	r2, fp, #212	; 0xd4
    d3cc:	mov	r0, r5
    d3d0:	str	r3, [sp, #8]
    d3d4:	sub	r3, fp, #216	; 0xd8
    d3d8:	str	r3, [sp, #4]
    d3dc:	sub	r3, fp, #204	; 0xcc
    d3e0:	add	r1, pc, r1
    d3e4:	str	r3, [sp]
    d3e8:	mov	r3, r8
    d3ec:	str	r6, [sp, #12]
    d3f0:	bl	42a0 <__isoc99_sscanf@plt>
    d3f4:	ldr	r3, [pc, #2420]	; dd70 <readstat_parse_xport+0xbe0>
    d3f8:	ldr	r9, [r7, r3]
    d3fc:	mov	r1, r9
    d400:	mov	r0, r8
    d404:	bl	3e14 <strcmp@plt>
    d408:	cmp	r0, #0
    d40c:	bne	d5d0 <readstat_parse_xport+0x440>
    d410:	str	sl, [fp, #-208]	; 0xffffff30
    d414:	ldr	r3, [fp, #-204]	; 0xffffff34
    d418:	mov	r0, r6
    d41c:	cmp	r3, #59	; 0x3b
    d420:	addle	r3, r3, #100	; 0x64
    d424:	strle	r3, [fp, #-204]	; 0xffffff34
    d428:	bl	3e68 <mktime@plt>
    d42c:	ldr	r2, [pc, #2368]	; dd74 <readstat_parse_xport+0xbe4>
    d430:	str	r0, [r4, #56]	; 0x38
    d434:	mov	r0, r4
    d438:	ldr	r1, [pc, #2360]	; dd78 <readstat_parse_xport+0xbe8>
    d43c:	add	r2, pc, r2
    d440:	add	r1, pc, r1
    d444:	bl	cdcc <xport_expect_header_record>
    d448:	subs	sl, r0, #0
    d44c:	bne	d260 <readstat_parse_xport+0xd0>
    d450:	ldr	r2, [pc, #2340]	; dd7c <readstat_parse_xport+0xbec>
    d454:	mov	r0, r4
    d458:	ldr	r1, [pc, #2336]	; dd80 <readstat_parse_xport+0xbf0>
    d45c:	add	r2, pc, r2
    d460:	add	r1, pc, r1
    d464:	bl	cdcc <xport_expect_header_record>
    d468:	subs	sl, r0, #0
    d46c:	bne	d260 <readstat_parse_xport+0xd0>
    d470:	mov	r1, r5
    d474:	mov	r0, r4
    d478:	bl	cd1c <xport_read_record>
    d47c:	subs	sl, r0, #0
    d480:	bne	d260 <readstat_parse_xport+0xd0>
    d484:	ldr	r3, [r4, #380]	; 0x17c
    d488:	add	r9, r4, #245	; 0xf5
    d48c:	sub	r7, fp, #172	; 0xac
    d490:	mov	r2, r7
    d494:	mov	r1, #129	; 0x81
    d498:	mov	r0, r9
    d49c:	cmp	r3, #5
    d4a0:	ldr	r3, [r4, #48]	; 0x30
    d4a4:	str	r3, [sp]
    d4a8:	moveq	r3, #8
    d4ac:	movne	r3, #32
    d4b0:	bl	424c <readstat_convert@plt>
    d4b4:	subs	sl, r0, #0
    d4b8:	bne	d260 <readstat_parse_xport+0xd0>
    d4bc:	mov	r1, r5
    d4c0:	mov	r0, r4
    d4c4:	bl	cd1c <xport_read_record>
    d4c8:	subs	sl, r0, #0
    d4cc:	bne	d260 <readstat_parse_xport+0xd0>
    d4d0:	sub	r3, fp, #148	; 0x94
    d4d4:	add	r8, r4, #84	; 0x54
    d4d8:	mov	r1, #161	; 0xa1
    d4dc:	mov	r0, r8
    d4e0:	str	r3, [fp, #-236]	; 0xffffff14
    d4e4:	ldr	r3, [r4, #48]	; 0x30
    d4e8:	str	r3, [sp]
    d4ec:	mov	r3, #40	; 0x28
    d4f0:	ldr	r2, [fp, #-236]	; 0xffffff14
    d4f4:	bl	424c <readstat_convert@plt>
    d4f8:	subs	sl, r0, #0
    d4fc:	bne	d260 <readstat_parse_xport+0xd0>
    d500:	mov	r1, r6
    d504:	mov	r0, r4
    d508:	bl	cd44 <xport_read_header_record>
    d50c:	subs	sl, r0, #0
    d510:	bne	d260 <readstat_parse_xport+0xd0>
    d514:	ldr	r3, [r4, #380]	; 0x17c
    d518:	cmp	r3, #5
    d51c:	bne	d5e4 <readstat_parse_xport+0x454>
    d520:	ldr	r1, [pc, #2140]	; dd84 <readstat_parse_xport+0xbf4>
    d524:	add	r1, pc, r1
    d528:	mov	r0, r6
    d52c:	bl	3e14 <strcmp@plt>
    d530:	cmp	r0, #0
    d534:	movne	sl, #5
    d538:	bne	d260 <readstat_parse_xport+0xd0>
    d53c:	ldr	r0, [fp, #-208]	; 0xffffff30
    d540:	mov	r1, #4
    d544:	str	r0, [r4, #64]	; 0x40
    d548:	bl	3fdc <readstat_calloc@plt>
    d54c:	cmp	r0, #0
    d550:	str	r0, [r4, #376]	; 0x178
    d554:	moveq	sl, #3
    d558:	beq	d260 <readstat_parse_xport+0xd0>
    d55c:	ldr	sl, [r4]
    d560:	cmp	sl, #0
    d564:	beq	d5f8 <readstat_parse_xport+0x468>
    d568:	ldr	r6, [r4, #64]	; 0x40
    d56c:	mov	r2, #24
    d570:	mov	r1, #0
    d574:	ldr	r0, [fp, #-236]	; 0xffffff14
    d578:	bl	42b8 <memset@plt>
    d57c:	mvn	r0, #0
    d580:	mvn	r1, #0
    d584:	ldr	r2, [r4, #56]	; 0x38
    d588:	strd	r0, [fp, #-180]	; 0xffffff4c
    d58c:	asr	r1, r6, #31
    d590:	mov	r0, r6
    d594:	strd	r0, [fp, #-172]	; 0xffffff54
    d598:	ldr	r0, [r4, #380]	; 0x17c
    d59c:	str	r2, [fp, #-164]	; 0xffffff5c
    d5a0:	str	r2, [fp, #-160]	; 0xffffff60
    d5a4:	str	r9, [fp, #-140]	; 0xffffff74
    d5a8:	str	r8, [fp, #-136]	; 0xffffff78
    d5ac:	asr	r1, r0, #31
    d5b0:	strd	r0, [fp, #-156]	; 0xffffff64
    d5b4:	mov	r0, r5
    d5b8:	ldr	r1, [r4, #36]	; 0x24
    d5bc:	blx	sl
    d5c0:	cmp	r0, #0
    d5c4:	beq	d5f8 <readstat_parse_xport+0x468>
    d5c8:	mov	sl, #4
    d5cc:	b	d260 <readstat_parse_xport+0xd0>
    d5d0:	add	sl, sl, #1
    d5d4:	add	r9, r9, #4
    d5d8:	cmp	sl, #12
    d5dc:	bne	d3fc <readstat_parse_xport+0x26c>
    d5e0:	b	d414 <readstat_parse_xport+0x284>
    d5e4:	cmp	r3, #8
    d5e8:	bne	d53c <readstat_parse_xport+0x3ac>
    d5ec:	ldr	r1, [pc, #1940]	; dd88 <readstat_parse_xport+0xbf8>
    d5f0:	add	r1, pc, r1
    d5f4:	b	d528 <readstat_parse_xport+0x398>
    d5f8:	mov	r8, #0
    d5fc:	ldr	r0, [r4, #52]	; 0x34
    d600:	ldr	r3, [r4, #64]	; 0x40
    d604:	cmp	r8, r3
    d608:	blt	d6ec <readstat_parse_xport+0x55c>
    d60c:	bl	ce2c <xport_skip_rest_of_record.isra.2>
    d610:	subs	sl, r0, #0
    d614:	bne	d260 <readstat_parse_xport+0xd0>
    d618:	ldr	r3, [r4, #380]	; 0x17c
    d61c:	cmp	r3, #5
    d620:	bne	d7e4 <readstat_parse_xport+0x654>
    d624:	ldr	r2, [pc, #1888]	; dd8c <readstat_parse_xport+0xbfc>
    d628:	mov	r0, r4
    d62c:	ldr	r1, [pc, #1884]	; dd90 <readstat_parse_xport+0xc00>
    d630:	add	r2, pc, r2
    d634:	add	r1, pc, r1
    d638:	bl	cdcc <xport_expect_header_record>
    d63c:	cmp	r0, #0
    d640:	bne	d8e8 <readstat_parse_xport+0x758>
    d644:	mov	r5, #0
    d648:	mov	r9, #1
    d64c:	mov	r6, r5
    d650:	str	r5, [r4, #76]	; 0x4c
    d654:	ldr	r3, [r4, #64]	; 0x40
    d658:	cmp	r6, r3
    d65c:	blt	dc08 <readstat_parse_xport+0xa78>
    d660:	ldr	r0, [r4, #76]	; 0x4c
    d664:	cmp	r0, #0
    d668:	beq	d8e8 <readstat_parse_xport+0x758>
    d66c:	ldr	r3, [r4, #16]
    d670:	cmp	r3, #0
    d674:	beq	d260 <readstat_parse_xport+0xd0>
    d678:	bl	4240 <readstat_malloc@plt>
    d67c:	mov	r8, r0
    d680:	ldr	r0, [r4, #76]	; 0x4c
    d684:	bl	4240 <readstat_malloc@plt>
    d688:	clz	r5, r0
    d68c:	cmp	r8, #0
    d690:	lsr	r5, r5, #5
    d694:	moveq	r5, #1
    d698:	mov	r7, r0
    d69c:	cmp	r5, #0
    d6a0:	bne	dd0c <readstat_parse_xport+0xb7c>
    d6a4:	mov	r1, #32
    d6a8:	ldr	r2, [r4, #76]	; 0x4c
    d6ac:	bl	42b8 <memset@plt>
    d6b0:	mov	r1, r8
    d6b4:	ldr	r0, [r4, #52]	; 0x34
    d6b8:	ldr	r2, [r4, #76]	; 0x4c
    d6bc:	bl	ccf8 <read_bytes.isra.0>
    d6c0:	cmn	r0, #1
    d6c4:	beq	dd2c <readstat_parse_xport+0xb9c>
    d6c8:	ldr	r3, [r4, #76]	; 0x4c
    d6cc:	cmp	r3, r0
    d6d0:	bhi	dcc8 <readstat_parse_xport+0xb38>
    d6d4:	mov	r2, r8
    d6d8:	add	r3, r3, r8
    d6dc:	cmp	r3, r2
    d6e0:	bne	dc64 <readstat_parse_xport+0xad4>
    d6e4:	add	r5, r5, #1
    d6e8:	b	d6b0 <readstat_parse_xport+0x520>
    d6ec:	mov	r2, #140	; 0x8c
    d6f0:	mov	r1, r5
    d6f4:	bl	ccf8 <read_bytes.isra.0>
    d6f8:	cmp	r0, #139	; 0x8b
    d6fc:	bls	d9ac <readstat_parse_xport+0x81c>
    d700:	mov	r0, r5
    d704:	bl	40a8 <xport_namestr_bswap@plt>
    d708:	movw	r1, #2152	; 0x868
    d70c:	mov	r0, #1
    d710:	bl	3d6c <calloc@plt>
    d714:	ldrh	r3, [fp, #-180]	; 0xffffff4c
    d718:	mov	r6, r0
    d71c:	mov	r1, #300	; 0x12c
    d720:	add	r0, r0, #8
    d724:	ldr	r2, [r4, #380]	; 0x17c
    d728:	cmp	r3, #2
    d72c:	moveq	r3, #0
    d730:	movne	r3, #5
    d734:	stm	r6, {r3, r8}
    d738:	ldrh	r3, [fp, #-176]	; 0xffffff50
    d73c:	str	r3, [r6, #1596]	; 0x63c
    d740:	ldrh	r3, [fp, #-116]	; 0xffffff8c
    d744:	str	r3, [r6, #2136]	; 0x858
    d748:	ldrh	r3, [fp, #-114]	; 0xffffff8e
    d74c:	str	r3, [r6, #2140]	; 0x85c
    d750:	ldrh	r3, [fp, #-112]	; 0xffffff90
    d754:	cmp	r3, #0
    d758:	movne	r3, #3
    d75c:	moveq	r3, #1
    d760:	cmp	r2, #5
    d764:	str	r3, [r6, #2132]	; 0x854
    d768:	moveq	r2, r7
    d76c:	subne	r2, fp, #92	; 0x5c
    d770:	ldr	r3, [r4, #48]	; 0x30
    d774:	str	r3, [sp]
    d778:	moveq	r3, #8
    d77c:	movne	r3, #32
    d780:	bl	424c <readstat_convert@plt>
    d784:	cmp	r0, #0
    d788:	bne	d8e8 <readstat_parse_xport+0x758>
    d78c:	ldr	r3, [r4, #48]	; 0x30
    d790:	sub	r2, fp, #164	; 0xa4
    d794:	mov	r1, #1024	; 0x400
    d798:	add	r0, r6, #564	; 0x234
    d79c:	str	r3, [sp]
    d7a0:	mov	r3, #40	; 0x28
    d7a4:	bl	424c <readstat_convert@plt>
    d7a8:	cmp	r0, #0
    d7ac:	bne	d8e8 <readstat_parse_xport+0x758>
    d7b0:	ldr	r3, [r6, #2140]	; 0x85c
    d7b4:	mov	r2, #8
    d7b8:	sub	r1, fp, #124	; 0x7c
    d7bc:	add	r0, r6, #308	; 0x134
    d7c0:	str	r3, [sp]
    d7c4:	ldr	r3, [r6, #2136]	; 0x858
    d7c8:	bl	d0b0 <xport_construct_format.constprop.4>
    d7cc:	cmp	r0, #0
    d7d0:	bne	d8e8 <readstat_parse_xport+0x758>
    d7d4:	ldr	r3, [r4, #376]	; 0x178
    d7d8:	str	r6, [r3, r8, lsl #2]
    d7dc:	add	r8, r8, #1
    d7e0:	b	d5fc <readstat_parse_xport+0x46c>
    d7e4:	mov	r1, r5
    d7e8:	mov	r0, r4
    d7ec:	bl	cd44 <xport_read_header_record>
    d7f0:	cmp	r0, #0
    d7f4:	bne	d8e8 <readstat_parse_xport+0x758>
    d7f8:	ldr	r1, [pc, #1428]	; dd94 <readstat_parse_xport+0xc04>
    d7fc:	mov	r0, r5
    d800:	add	r1, pc, r1
    d804:	bl	3e14 <strcmp@plt>
    d808:	cmp	r0, #0
    d80c:	beq	d644 <readstat_parse_xport+0x4b4>
    d810:	ldr	r1, [pc, #1408]	; dd98 <readstat_parse_xport+0xc08>
    d814:	mov	r0, r5
    d818:	add	r1, pc, r1
    d81c:	bl	3e14 <strcmp@plt>
    d820:	subs	r7, r0, #0
    d824:	bne	d9c0 <readstat_parse_xport+0x830>
    d828:	ldr	r3, [fp, #-168]	; 0xffffff58
    d82c:	str	r3, [fp, #-244]	; 0xffffff0c
    d830:	sub	r3, fp, #224	; 0xe0
    d834:	str	r3, [fp, #-248]	; 0xffffff08
    d838:	ldr	r3, [fp, #-244]	; 0xffffff0c
    d83c:	ldr	r0, [r4, #52]	; 0x34
    d840:	cmp	r3, r7
    d844:	bgt	d870 <readstat_parse_xport+0x6e0>
    d848:	bl	ce2c <xport_skip_rest_of_record.isra.2>
    d84c:	cmp	r0, #0
    d850:	bne	d8e8 <readstat_parse_xport+0x758>
    d854:	ldr	r2, [pc, #1344]	; dd9c <readstat_parse_xport+0xc0c>
    d858:	ldr	r1, [pc, #1344]	; dda0 <readstat_parse_xport+0xc10>
    d85c:	add	r2, pc, r2
    d860:	add	r1, pc, r1
    d864:	mov	r0, r4
    d868:	bl	cdcc <xport_expect_header_record>
    d86c:	b	d9b8 <readstat_parse_xport+0x828>
    d870:	mov	r2, #6
    d874:	ldr	r1, [fp, #-248]	; 0xffffff08
    d878:	mov	r6, sp
    d87c:	bl	ccf8 <read_bytes.isra.0>
    d880:	cmp	r0, #6
    d884:	bne	d9a8 <readstat_parse_xport+0x818>
    d888:	bl	3ec8 <machine_is_little_endian@plt>
    d88c:	cmp	r0, #0
    d890:	ldrh	r0, [fp, #-224]	; 0xffffff20
    d894:	ldrheq	r9, [fp, #-222]	; 0xffffff22
    d898:	ldrheq	r5, [fp, #-220]	; 0xffffff24
    d89c:	moveq	r8, r0
    d8a0:	beq	d8c4 <readstat_parse_xport+0x734>
    d8a4:	bl	3ebc <byteswap2@plt>
    d8a8:	mov	r8, r0
    d8ac:	ldrh	r0, [fp, #-222]	; 0xffffff22
    d8b0:	bl	3ebc <byteswap2@plt>
    d8b4:	mov	r9, r0
    d8b8:	ldrh	r0, [fp, #-220]	; 0xffffff24
    d8bc:	bl	3ebc <byteswap2@plt>
    d8c0:	mov	r5, r0
    d8c4:	ldr	r1, [r4, #64]	; 0x40
    d8c8:	clz	r2, r8
    d8cc:	lsr	r2, r2, #5
    d8d0:	cmp	r1, r8
    d8d4:	orrlt	r2, r2, #1
    d8d8:	cmp	r2, #0
    d8dc:	beq	d8f0 <readstat_parse_xport+0x760>
    d8e0:	mov	sp, r6
    d8e4:	mov	r0, #5
    d8e8:	mov	sl, r0
    d8ec:	b	d260 <readstat_parse_xport+0xd0>
    d8f0:	add	r2, r9, #8
    d8f4:	sub	r8, r8, #-1073741823	; 0xc0000001
    d8f8:	ldr	r0, [r4, #52]	; 0x34
    d8fc:	bic	r2, r2, #7
    d900:	sub	sp, sp, r2
    d904:	add	r2, r5, #8
    d908:	bic	r2, r2, #7
    d90c:	add	r3, sp, #16
    d910:	sub	sp, sp, r2
    d914:	ldr	r2, [r4, #376]	; 0x178
    d918:	str	r3, [fp, #-236]	; 0xffffff14
    d91c:	add	r3, sp, #16
    d920:	ldr	r1, [fp, #-236]	; 0xffffff14
    d924:	str	r3, [fp, #-240]	; 0xffffff10
    d928:	ldr	r8, [r2, r8, lsl #2]
    d92c:	mov	r2, r9
    d930:	bl	ccf8 <read_bytes.isra.0>
    d934:	cmp	r9, r0
    d938:	bne	d9a8 <readstat_parse_xport+0x818>
    d93c:	mov	r2, r5
    d940:	ldr	r1, [fp, #-240]	; 0xffffff10
    d944:	ldr	r0, [r4, #52]	; 0x34
    d948:	bl	ccf8 <read_bytes.isra.0>
    d94c:	cmp	r5, r0
    d950:	bne	d9a8 <readstat_parse_xport+0x818>
    d954:	ldr	r2, [r4, #48]	; 0x30
    d958:	mov	r3, r9
    d95c:	mov	r1, #300	; 0x12c
    d960:	add	r0, r8, #8
    d964:	str	r2, [sp]
    d968:	ldr	r2, [fp, #-236]	; 0xffffff14
    d96c:	bl	424c <readstat_convert@plt>
    d970:	cmp	r0, #0
    d974:	bne	d9b4 <readstat_parse_xport+0x824>
    d978:	ldr	r3, [r4, #48]	; 0x30
    d97c:	mov	r1, #1024	; 0x400
    d980:	add	r0, r8, #564	; 0x234
    d984:	str	r3, [sp]
    d988:	mov	r3, r5
    d98c:	ldr	r2, [fp, #-240]	; 0xffffff10
    d990:	bl	424c <readstat_convert@plt>
    d994:	cmp	r0, #0
    d998:	bne	d9b4 <readstat_parse_xport+0x824>
    d99c:	add	r7, r7, #1
    d9a0:	mov	sp, r6
    d9a4:	b	d838 <readstat_parse_xport+0x6a8>
    d9a8:	mov	sp, r6
    d9ac:	mov	r0, #2
    d9b0:	b	d8e8 <readstat_parse_xport+0x758>
    d9b4:	mov	sp, r6
    d9b8:	cmp	r0, #0
    d9bc:	b	d640 <readstat_parse_xport+0x4b0>
    d9c0:	ldr	r1, [pc, #988]	; dda4 <readstat_parse_xport+0xc14>
    d9c4:	mov	r0, r5
    d9c8:	add	r1, pc, r1
    d9cc:	bl	3e14 <strcmp@plt>
    d9d0:	subs	r3, r0, #0
    d9d4:	str	r3, [fp, #-240]	; 0xffffff10
    d9d8:	bne	d644 <readstat_parse_xport+0x4b4>
    d9dc:	ldr	r3, [fp, #-168]	; 0xffffff58
    d9e0:	str	r3, [fp, #-256]	; 0xffffff00
    d9e4:	sub	r3, fp, #224	; 0xe0
    d9e8:	str	r3, [fp, #-264]	; 0xfffffef8
    d9ec:	ldr	r3, [fp, #-256]	; 0xffffff00
    d9f0:	ldr	r2, [fp, #-240]	; 0xffffff10
    d9f4:	ldr	r0, [r4, #52]	; 0x34
    d9f8:	cmp	r3, r2
    d9fc:	bgt	da20 <readstat_parse_xport+0x890>
    da00:	bl	ce2c <xport_skip_rest_of_record.isra.2>
    da04:	cmp	r0, #0
    da08:	bne	d8e8 <readstat_parse_xport+0x758>
    da0c:	ldr	r2, [pc, #916]	; dda8 <readstat_parse_xport+0xc18>
    da10:	ldr	r1, [pc, #916]	; ddac <readstat_parse_xport+0xc1c>
    da14:	add	r2, pc, r2
    da18:	add	r1, pc, r1
    da1c:	b	d864 <readstat_parse_xport+0x6d4>
    da20:	mov	r2, #10
    da24:	ldr	r1, [fp, #-264]	; 0xfffffef8
    da28:	str	sp, [fp, #-236]	; 0xffffff14
    da2c:	bl	ccf8 <read_bytes.isra.0>
    da30:	cmp	r0, #10
    da34:	bne	dbf8 <readstat_parse_xport+0xa68>
    da38:	bl	3ec8 <machine_is_little_endian@plt>
    da3c:	cmp	r0, #0
    da40:	ldrh	r0, [fp, #-224]	; 0xffffff20
    da44:	beq	daa4 <readstat_parse_xport+0x914>
    da48:	bl	3ebc <byteswap2@plt>
    da4c:	mov	r5, r0
    da50:	ldrh	r0, [fp, #-222]	; 0xffffff22
    da54:	bl	3ebc <byteswap2@plt>
    da58:	mov	r7, r0
    da5c:	ldrh	r0, [fp, #-220]	; 0xffffff24
    da60:	bl	3ebc <byteswap2@plt>
    da64:	mov	r6, r0
    da68:	ldrh	r0, [fp, #-218]	; 0xffffff26
    da6c:	bl	3ebc <byteswap2@plt>
    da70:	mov	r8, r0
    da74:	ldrh	r0, [fp, #-216]	; 0xffffff28
    da78:	bl	3ebc <byteswap2@plt>
    da7c:	mov	r9, r0
    da80:	ldr	r2, [r4, #64]	; 0x40
    da84:	clz	r3, r5
    da88:	lsr	r3, r3, #5
    da8c:	cmp	r2, r5
    da90:	orrlt	r3, r3, #1
    da94:	cmp	r3, #0
    da98:	beq	dabc <readstat_parse_xport+0x92c>
    da9c:	ldr	sp, [fp, #-236]	; 0xffffff14
    daa0:	b	d8e4 <readstat_parse_xport+0x754>
    daa4:	mov	r5, r0
    daa8:	ldrh	r7, [fp, #-222]	; 0xffffff22
    daac:	ldrh	r6, [fp, #-220]	; 0xffffff24
    dab0:	ldrh	r8, [fp, #-218]	; 0xffffff26
    dab4:	ldrh	r9, [fp, #-216]	; 0xffffff28
    dab8:	b	da80 <readstat_parse_xport+0x8f0>
    dabc:	add	r3, r7, #8
    dac0:	sub	r5, r5, #-1073741823	; 0xc0000001
    dac4:	ldr	r0, [r4, #52]	; 0x34
    dac8:	bic	r3, r3, #7
    dacc:	mov	r2, r7
    dad0:	sub	sp, sp, r3
    dad4:	add	r3, sp, #16
    dad8:	str	r3, [fp, #-244]	; 0xffffff0c
    dadc:	add	r3, r6, #8
    dae0:	bic	r3, r3, #7
    dae4:	ldr	r1, [fp, #-244]	; 0xffffff0c
    dae8:	sub	sp, sp, r3
    daec:	add	r3, sp, #16
    daf0:	str	r3, [fp, #-248]	; 0xffffff08
    daf4:	add	r3, r8, #8
    daf8:	bic	r3, r3, #7
    dafc:	sub	sp, sp, r3
    db00:	add	r3, sp, #16
    db04:	str	r3, [fp, #-260]	; 0xfffffefc
    db08:	add	r3, r9, #8
    db0c:	bic	r3, r3, #7
    db10:	sub	sp, sp, r3
    db14:	add	r3, sp, #16
    db18:	str	r3, [fp, #-252]	; 0xffffff04
    db1c:	ldr	r3, [r4, #376]	; 0x178
    db20:	ldr	r5, [r3, r5, lsl #2]
    db24:	bl	ccf8 <read_bytes.isra.0>
    db28:	cmp	r7, r0
    db2c:	bne	dbf8 <readstat_parse_xport+0xa68>
    db30:	mov	r2, r6
    db34:	ldr	r1, [fp, #-248]	; 0xffffff08
    db38:	ldr	r0, [r4, #52]	; 0x34
    db3c:	bl	ccf8 <read_bytes.isra.0>
    db40:	cmp	r6, r0
    db44:	bne	dbf8 <readstat_parse_xport+0xa68>
    db48:	mov	r2, r8
    db4c:	ldr	r1, [fp, #-260]	; 0xfffffefc
    db50:	ldr	r0, [r4, #52]	; 0x34
    db54:	bl	ccf8 <read_bytes.isra.0>
    db58:	cmp	r8, r0
    db5c:	bne	dbf8 <readstat_parse_xport+0xa68>
    db60:	mov	r2, r9
    db64:	ldr	r1, [fp, #-252]	; 0xffffff04
    db68:	ldr	r0, [r4, #52]	; 0x34
    db6c:	bl	ccf8 <read_bytes.isra.0>
    db70:	cmp	r9, r0
    db74:	bne	dbf8 <readstat_parse_xport+0xa68>
    db78:	ldr	r3, [r4, #48]	; 0x30
    db7c:	mov	r1, #300	; 0x12c
    db80:	add	r0, r5, #8
    db84:	str	r3, [sp]
    db88:	mov	r3, r7
    db8c:	ldr	r2, [fp, #-244]	; 0xffffff0c
    db90:	bl	424c <readstat_convert@plt>
    db94:	cmp	r0, #0
    db98:	bne	dc00 <readstat_parse_xport+0xa70>
    db9c:	ldr	r3, [r4, #48]	; 0x30
    dba0:	mov	r1, #1024	; 0x400
    dba4:	add	r0, r5, #564	; 0x234
    dba8:	str	r3, [sp]
    dbac:	mov	r3, r9
    dbb0:	ldr	r2, [fp, #-252]	; 0xffffff04
    dbb4:	bl	424c <readstat_convert@plt>
    dbb8:	cmp	r0, #0
    dbbc:	bne	dc00 <readstat_parse_xport+0xa70>
    dbc0:	ldr	r3, [r5, #2140]	; 0x85c
    dbc4:	mov	r2, r6
    dbc8:	add	r0, r5, #308	; 0x134
    dbcc:	str	r3, [sp]
    dbd0:	ldr	r1, [fp, #-248]	; 0xffffff08
    dbd4:	ldr	r3, [r5, #2136]	; 0x858
    dbd8:	bl	d0b0 <xport_construct_format.constprop.4>
    dbdc:	cmp	r0, #0
    dbe0:	bne	dc00 <readstat_parse_xport+0xa70>
    dbe4:	ldr	r3, [fp, #-240]	; 0xffffff10
    dbe8:	ldr	sp, [fp, #-236]	; 0xffffff14
    dbec:	add	r3, r3, #1
    dbf0:	str	r3, [fp, #-240]	; 0xffffff10
    dbf4:	b	d9ec <readstat_parse_xport+0x85c>
    dbf8:	ldr	sp, [fp, #-236]	; 0xffffff14
    dbfc:	b	d9ac <readstat_parse_xport+0x81c>
    dc00:	ldr	sp, [fp, #-236]	; 0xffffff14
    dc04:	b	d9b8 <readstat_parse_xport+0x828>
    dc08:	ldr	r8, [r4, #8]
    dc0c:	ldr	r3, [r4, #376]	; 0x178
    dc10:	cmp	r8, #0
    dc14:	ldr	r7, [r3, r6, lsl #2]
    dc18:	str	r5, [r7, #2148]	; 0x864
    dc1c:	beq	dc48 <readstat_parse_xport+0xab8>
    dc20:	add	r2, r7, #308	; 0x134
    dc24:	mov	r1, r7
    dc28:	ldr	r3, [r4, #36]	; 0x24
    dc2c:	mov	r0, r6
    dc30:	blx	r8
    dc34:	cmp	r0, #1
    dc38:	beq	d5c8 <readstat_parse_xport+0x438>
    dc3c:	cmp	r0, #2
    dc40:	streq	r9, [r7, #2144]	; 0x860
    dc44:	beq	dc4c <readstat_parse_xport+0xabc>
    dc48:	add	r5, r5, #1
    dc4c:	ldr	r3, [r4, #76]	; 0x4c
    dc50:	add	r6, r6, #1
    dc54:	ldr	r2, [r7, #1596]	; 0x63c
    dc58:	add	r3, r3, r2
    dc5c:	str	r3, [r4, #76]	; 0x4c
    dc60:	b	d654 <readstat_parse_xport+0x4c4>
    dc64:	ldrb	r1, [r2], #1
    dc68:	cmp	r1, #32
    dc6c:	beq	d6dc <readstat_parse_xport+0x54c>
    dc70:	cmp	r5, #0
    dc74:	bne	dcd8 <readstat_parse_xport+0xb48>
    dc78:	mov	r1, r8
    dc7c:	mov	r0, r4
    dc80:	bl	ce90 <xport_process_row.isra.3>
    dc84:	subs	sl, r0, #0
    dc88:	bne	dccc <readstat_parse_xport+0xb3c>
    dc8c:	ldr	r1, [r4, #28]
    dc90:	ldr	r3, [r4, #52]	; 0x34
    dc94:	ldr	r0, [r4, #32]
    dc98:	ldr	r2, [r4, #36]	; 0x24
    dc9c:	ldr	r6, [r3, #16]
    dca0:	ldr	r3, [r3, #20]
    dca4:	blx	r6
    dca8:	subs	sl, r0, #0
    dcac:	bne	dccc <readstat_parse_xport+0xb3c>
    dcb0:	ldr	r3, [r4, #68]	; 0x44
    dcb4:	cmp	r3, #0
    dcb8:	ble	d6b0 <readstat_parse_xport+0x520>
    dcbc:	ldr	r2, [r4, #80]	; 0x50
    dcc0:	cmp	r3, r2
    dcc4:	bne	d6b0 <readstat_parse_xport+0x520>
    dcc8:	mov	sl, #0
    dccc:	mov	r0, r8
    dcd0:	bl	3ed4 <free@plt>
    dcd4:	b	dd18 <readstat_parse_xport+0xb88>
    dcd8:	mov	r1, r7
    dcdc:	mov	r0, r4
    dce0:	bl	ce90 <xport_process_row.isra.3>
    dce4:	subs	sl, r0, #0
    dce8:	bne	dccc <readstat_parse_xport+0xb3c>
    dcec:	ldr	r3, [r4, #68]	; 0x44
    dcf0:	cmp	r3, #0
    dcf4:	ble	dd04 <readstat_parse_xport+0xb74>
    dcf8:	ldr	r2, [r4, #80]	; 0x50
    dcfc:	cmp	r3, r2
    dd00:	beq	dcc8 <readstat_parse_xport+0xb38>
    dd04:	sub	r5, r5, #1
    dd08:	b	dc70 <readstat_parse_xport+0xae0>
    dd0c:	cmp	r8, #0
    dd10:	mov	sl, #3
    dd14:	bne	dccc <readstat_parse_xport+0xb3c>
    dd18:	cmp	r7, #0
    dd1c:	beq	d260 <readstat_parse_xport+0xd0>
    dd20:	mov	r0, r7
    dd24:	bl	3ed4 <free@plt>
    dd28:	b	d260 <readstat_parse_xport+0xd0>
    dd2c:	mov	sl, #2
    dd30:	b	dccc <readstat_parse_xport+0xb3c>
    dd34:	ldr	r0, [r0, r5, lsl #2]
    dd38:	cmp	r0, #0
    dd3c:	beq	dd44 <readstat_parse_xport+0xbb4>
    dd40:	bl	3ed4 <free@plt>
    dd44:	add	r5, r5, #1
    dd48:	ldr	r3, [r4, #64]	; 0x40
    dd4c:	ldr	r0, [r4, #376]	; 0x178
    dd50:	cmp	r5, r3
    dd54:	blt	dd34 <readstat_parse_xport+0xba4>
    dd58:	bl	3ed4 <free@plt>
    dd5c:	b	d284 <readstat_parse_xport+0xf4>
    dd60:	.word	0x00032e28
    dd64:	.word	0x00013c52
    dd68:	.word	0x00013c3e
    dd6c:	.word	0x00013bb4
    dd70:	.word	0x000002dc
    dd74:	.word	0x00013b73
    dd78:	.word	0x00013b76
    dd7c:	.word	0x00013b61
    dd80:	.word	0x00013b65
    dd84:	.word	0x00013aa9
    dd88:	.word	0x000139e5
    dd8c:	.word	0x000139ad
    dd90:	.word	0x000139af
    dd94:	.word	0x000137dd
    dd98:	.word	0x000137cf
    dd9c:	.word	0x00013781
    dda0:	.word	0x00013783
    dda4:	.word	0x00013627
    dda8:	.word	0x000135c9
    ddac:	.word	0x000135cb

0000ddb0 <copypad>:
    ddb0:	add	r1, r0, r1
    ddb4:	sub	r2, r2, #1
    ddb8:	cmp	r0, r1
    ddbc:	mov	r3, r0
    ddc0:	bxcs	lr
    ddc4:	ldrb	ip, [r2, #1]!
    ddc8:	cmp	ip, #0
    ddcc:	bne	dde4 <copypad+0x34>
    ddd0:	mov	r2, #32
    ddd4:	strb	r2, [r3], #1
    ddd8:	cmp	r1, r3
    dddc:	bhi	ddd4 <copypad+0x24>
    dde0:	bx	lr
    dde4:	strb	ip, [r0], #1
    dde8:	b	ddb8 <copypad+0x8>

0000ddec <xport_write_missing_numeric>:
    ddec:	mov	r3, #46	; 0x2e
    ddf0:	strb	r3, [r0]
    ddf4:	mov	r0, #0
    ddf8:	bx	lr

0000ddfc <xport_finish_record>:
    ddfc:	ldr	r3, [pc, #12]	; de10 <xport_finish_record+0x14>
    de00:	mov	r2, #80	; 0x50
    de04:	mov	r1, #32
    de08:	add	r3, pc, r3
    de0c:	b	4504 <readstat_write_line_padding@plt>
    de10:	.word	0x0001358c

0000de14 <xport_end_data>:
    de14:	b	ddfc <xport_finish_record>

0000de18 <xport_write_missing_string>:
    de18:	push	{r4, lr}
    de1c:	ldr	r2, [r1, #1596]	; 0x63c
    de20:	mov	r1, #32
    de24:	bl	42b8 <memset@plt>
    de28:	mov	r0, #0
    de2c:	pop	{r4, pc}

0000de30 <xport_write_missing_tagged>:
    de30:	push	{r4, r5, r6, lr}
    de34:	mov	r5, r0
    de38:	mov	r0, r2
    de3c:	mov	r4, r2
    de40:	bl	4168 <sas_validate_tag@plt>
    de44:	cmp	r0, #0
    de48:	strbeq	r4, [r5]
    de4c:	pop	{r4, r5, r6, pc}

0000de50 <xport_write_double>:
    de50:	push	{r4, r5, r6, r7, lr}
    de54:	sub	sp, sp, #20
    de58:	mov	r6, r0
    de5c:	add	r5, sp, #8
    de60:	mov	r7, r1
    de64:	mov	r3, #1
    de68:	mov	r2, r5
    de6c:	mov	r1, #0
    de70:	mov	r0, sp
    de74:	vstr	d0, [sp]
    de78:	bl	4018 <cnxptiee@plt>
    de7c:	subs	r4, r0, #0
    de80:	movne	r0, #16
    de84:	bne	de9c <xport_write_double+0x4c>
    de88:	mov	r1, r5
    de8c:	mov	r0, r6
    de90:	ldr	r2, [r7, #1596]	; 0x63c
    de94:	bl	3f34 <memcpy@plt>
    de98:	mov	r0, r4
    de9c:	add	sp, sp, #20
    dea0:	pop	{r4, r5, r6, r7, pc}

0000dea4 <xport_write_float>:
    dea4:	vcvt.f64.f32	d0, s0
    dea8:	b	de50 <xport_write_double>

0000deac <xport_write_int32>:
    deac:	vmov	s15, r2
    deb0:	vcvt.f64.s32	d0, s15
    deb4:	b	de50 <xport_write_double>

0000deb8 <xport_write_int16>:
    deb8:	vmov	s15, r2
    debc:	vcvt.f64.s32	d0, s15
    dec0:	b	de50 <xport_write_double>

0000dec4 <xport_write_int8>:
    dec4:	vmov	s15, r2
    dec8:	vcvt.f64.s32	d0, s15
    decc:	b	de50 <xport_write_double>

0000ded0 <xport_variable_width>:
    ded0:	cmp	r0, #0
    ded4:	beq	def0 <xport_variable_width+0x20>
    ded8:	sub	r3, r1, #1
    dedc:	cmp	r3, #6
    dee0:	movhi	r1, #8
    dee4:	bhi	def0 <xport_variable_width+0x20>
    dee8:	cmp	r1, #3
    deec:	movcc	r1, #3
    def0:	mov	r0, r1
    def4:	bx	lr

0000def8 <xport_write_string>:
    def8:	push	{r4, r5, r6, lr}
    defc:	mov	r4, r2
    df00:	mov	r5, r1
    df04:	mov	r6, r0
    df08:	ldr	r2, [r1, #1596]	; 0x63c
    df0c:	mov	r1, #32
    df10:	bl	42b8 <memset@plt>
    df14:	cmp	r4, #0
    df18:	beq	df4c <xport_write_string+0x54>
    df1c:	ldrb	r0, [r4]
    df20:	cmp	r0, #0
    df24:	popeq	{r4, r5, r6, pc}
    df28:	mov	r0, r4
    df2c:	bl	421c <strlen@plt>
    df30:	ldr	r3, [r5, #1596]	; 0x63c
    df34:	mov	r2, r0
    df38:	cmp	r0, r3
    df3c:	bhi	df54 <xport_write_string+0x5c>
    df40:	mov	r1, r4
    df44:	mov	r0, r6
    df48:	bl	3f34 <memcpy@plt>
    df4c:	mov	r0, #0
    df50:	pop	{r4, r5, r6, pc}
    df54:	mov	r0, #22
    df58:	pop	{r4, r5, r6, pc}

0000df5c <xport_metadata_ok>:
    df5c:	ldr	r3, [r0, #8]
    df60:	cmp	r3, #5
    df64:	cmpne	r3, #8
    df68:	movne	r2, #1
    df6c:	moveq	r2, #0
    df70:	bne	dfa0 <xport_metadata_ok+0x44>
    df74:	ldrb	r1, [r0, #188]	; 0xbc
    df78:	cmp	r1, #0
    df7c:	beq	dfa8 <xport_metadata_ok+0x4c>
    df80:	cmp	r3, #8
    df84:	moveq	r1, #32
    df88:	beq	df98 <xport_metadata_ok+0x3c>
    df8c:	cmp	r3, #5
    df90:	bne	dfb0 <xport_metadata_ok+0x54>
    df94:	mov	r1, #8
    df98:	add	r0, r0, #188	; 0xbc
    df9c:	b	3d60 <sas_validate_name@plt>
    dfa0:	mov	r0, #24
    dfa4:	bx	lr
    dfa8:	mov	r0, r1
    dfac:	bx	lr
    dfb0:	mov	r0, r2
    dfb4:	bx	lr

0000dfb8 <xport_write_row>:
    dfb8:	ldr	r3, [pc, #24]	; dfd8 <xport_write_row+0x20>
    dfbc:	push	{r0, r1, r2, lr}
    dfc0:	add	r3, pc, r3
    dfc4:	str	r3, [sp]
    dfc8:	mov	r3, #80	; 0x50
    dfcc:	bl	4540 <readstat_write_bytes_as_lines@plt>
    dfd0:	add	sp, sp, #12
    dfd4:	pop	{pc}		; (ldr pc, [sp], #4)
    dfd8:	.word	0x000133d4

0000dfdc <xport_write_record>:
    dfdc:	push	{r0, r1, r2, r4, r5, lr}
    dfe0:	mov	r4, r0
    dfe4:	mov	r0, r1
    dfe8:	mov	r5, r1
    dfec:	bl	421c <strlen@plt>
    dff0:	ldr	r3, [pc, #56]	; e030 <xport_write_record+0x54>
    dff4:	mov	r2, r0
    dff8:	mov	r1, r5
    dffc:	mov	r0, r4
    e000:	add	r3, pc, r3
    e004:	str	r3, [sp]
    e008:	mov	r3, #80	; 0x50
    e00c:	bl	4540 <readstat_write_bytes_as_lines@plt>
    e010:	cmp	r0, #0
    e014:	bne	e028 <xport_write_record+0x4c>
    e018:	mov	r0, r4
    e01c:	add	sp, sp, #12
    e020:	pop	{r4, r5, lr}
    e024:	b	ddfc <xport_finish_record>
    e028:	add	sp, sp, #12
    e02c:	pop	{r4, r5, pc}
    e030:	.word	0x00013394

0000e034 <xport_write_header_record>:
    e034:	mov	r3, r1
    e038:	push	{r4, r5, lr}
    e03c:	sub	sp, sp, #116	; 0x74
    e040:	add	r4, sp, #28
    e044:	mov	r5, r0
    e048:	mov	r1, #81	; 0x51
    e04c:	mov	r0, r4
    e050:	ldr	r2, [r3, #32]
    e054:	str	r2, [sp, #20]
    e058:	ldr	r2, [r3, #28]
    e05c:	str	r2, [sp, #16]
    e060:	ldr	r2, [r3, #24]
    e064:	str	r2, [sp, #12]
    e068:	ldr	r2, [r3, #20]
    e06c:	str	r2, [sp, #8]
    e070:	ldr	r2, [r3, #16]
    e074:	str	r2, [sp, #4]
    e078:	ldr	r2, [r3, #12]
    e07c:	str	r2, [sp]
    e080:	ldr	r2, [pc, #24]	; e0a0 <xport_write_header_record+0x6c>
    e084:	add	r2, pc, r2
    e088:	bl	4294 <snprintf@plt>
    e08c:	mov	r1, r4
    e090:	mov	r0, r5
    e094:	bl	dfdc <xport_write_record>
    e098:	add	sp, sp, #116	; 0x74
    e09c:	pop	{r4, r5, pc}
    e0a0:	.word	0x00012fa9

0000e0a4 <xport_write_variables>:
    e0a4:	ldr	r3, [pc, #1260]	; e598 <xport_write_variables+0x4f4>
    e0a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e0ac:	sub	sp, sp, #228	; 0xe4
    e0b0:	mov	r6, #0
    e0b4:	mov	sl, r0
    e0b8:	mov	r9, r6
    e0bc:	mov	r8, r6
    e0c0:	str	r6, [sp, #8]
    e0c4:	add	r3, pc, r3
    e0c8:	str	r3, [sp, #16]
    e0cc:	ldr	r3, [pc, #1224]	; e59c <xport_write_variables+0x4f8>
    e0d0:	add	r3, pc, r3
    e0d4:	str	r3, [sp, #24]
    e0d8:	ldr	r3, [pc, #1216]	; e5a0 <xport_write_variables+0x4fc>
    e0dc:	add	r3, pc, r3
    e0e0:	str	r3, [sp, #28]
    e0e4:	ldr	r3, [sl, #28]
    e0e8:	cmp	r3, r8
    e0ec:	bgt	e1d0 <xport_write_variables+0x12c>
    e0f0:	mov	r0, sl
    e0f4:	bl	ddfc <xport_finish_record>
    e0f8:	subs	fp, r0, #0
    e0fc:	bne	e438 <xport_write_variables+0x394>
    e100:	ldr	r2, [sl, #8]
    e104:	cmp	r9, #0
    e108:	sub	r3, r2, #8
    e10c:	clz	r3, r3
    e110:	lsr	r3, r3, #5
    e114:	moveq	r3, #0
    e118:	cmp	r3, #0
    e11c:	beq	e438 <xport_write_variables+0x394>
    e120:	mov	r2, #28
    e124:	mov	r1, fp
    e128:	add	r0, sp, #56	; 0x38
    e12c:	bl	42b8 <memset@plt>
    e130:	ldr	r2, [pc, #1132]	; e5a4 <xport_write_variables+0x500>
    e134:	add	r3, sp, #48	; 0x30
    e138:	cmp	r6, #0
    e13c:	strb	fp, [sp, #56]	; 0x38
    e140:	str	r9, [sp, #60]	; 0x3c
    e144:	add	r2, pc, r2
    e148:	ldr	r0, [r2, #9]!
    e14c:	ldr	r1, [r2, #4]
    e150:	stmia	r3!, {r0, r1}
    e154:	add	r3, sp, #48	; 0x30
    e158:	beq	e170 <xport_write_variables+0xcc>
    e15c:	ldr	r1, [pc, #1092]	; e5a8 <xport_write_variables+0x504>
    e160:	mov	r0, r3
    e164:	add	r1, pc, r1
    e168:	bl	40b4 <strcpy@plt>
    e16c:	mov	r3, r0
    e170:	ldr	r2, [sp, #60]	; 0x3c
    e174:	add	r4, sp, #84	; 0x54
    e178:	mov	r1, #81	; 0x51
    e17c:	mov	r0, r4
    e180:	str	r2, [sp]
    e184:	ldr	r2, [pc, #1056]	; e5ac <xport_write_variables+0x508>
    e188:	add	r2, pc, r2
    e18c:	bl	4294 <snprintf@plt>
    e190:	mov	r1, r4
    e194:	mov	r0, sl
    e198:	bl	dfdc <xport_write_record>
    e19c:	subs	fp, r0, #0
    e1a0:	bne	e438 <xport_write_variables+0x394>
    e1a4:	ldr	r3, [pc, #1028]	; e5b0 <xport_write_variables+0x50c>
    e1a8:	mov	r5, fp
    e1ac:	add	r3, pc, r3
    e1b0:	str	r3, [sp, #12]
    e1b4:	ldr	r3, [sl, #28]
    e1b8:	cmp	r3, r5
    e1bc:	bgt	e3b0 <xport_write_variables+0x30c>
    e1c0:	mov	r0, sl
    e1c4:	bl	ddfc <xport_finish_record>
    e1c8:	mov	fp, r0
    e1cc:	b	e438 <xport_write_variables+0x394>
    e1d0:	mov	r1, r8
    e1d4:	mov	r0, sl
    e1d8:	bl	439c <readstat_get_variable@plt>
    e1dc:	mov	r5, r0
    e1e0:	add	fp, r0, #8
    e1e4:	ldr	r0, [r0]
    e1e8:	ldr	r1, [r5, #1600]	; 0x640
    e1ec:	bl	ded0 <xport_variable_width>
    e1f0:	mov	r2, #140	; 0x8c
    e1f4:	mov	r1, #0
    e1f8:	str	r0, [sp, #12]
    e1fc:	add	r0, sp, #84	; 0x54
    e200:	bl	42b8 <memset@plt>
    e204:	ldr	r3, [sp, #12]
    e208:	ldr	r2, [sp, #16]
    e20c:	strh	r3, [sp, #88]	; 0x58
    e210:	add	r3, r8, #1
    e214:	ldr	r0, [r2]
    e218:	strh	r3, [sp, #90]	; 0x5a
    e21c:	add	r3, sp, #140	; 0x8c
    e220:	ldr	r1, [r2, #4]
    e224:	stmia	r3!, {r0, r1}
    e228:	add	r3, sp, #156	; 0x9c
    e22c:	stmia	r3!, {r0, r1}
    e230:	mov	r0, r5
    e234:	ldr	r3, [sp, #8]
    e238:	str	r3, [sp, #168]	; 0xa8
    e23c:	bl	4564 <readstat_variable_get_type_class@plt>
    e240:	cmp	r0, #0
    e244:	mov	r2, fp
    e248:	moveq	r3, #2
    e24c:	movne	r3, #1
    e250:	mov	r1, #8
    e254:	add	r0, sp, #92	; 0x5c
    e258:	strh	r3, [sp, #84]	; 0x54
    e25c:	bl	ddb0 <copypad>
    e260:	add	r3, r5, #564	; 0x234
    e264:	mov	r1, #40	; 0x28
    e268:	mov	r2, r3
    e26c:	add	r0, sp, #100	; 0x64
    e270:	str	r3, [sp, #20]
    e274:	bl	ddb0 <copypad>
    e278:	ldrb	r3, [r5, #308]	; 0x134
    e27c:	cmp	r3, #0
    e280:	beq	e350 <xport_write_variables+0x2ac>
    e284:	add	r3, sp, #32
    e288:	add	r7, sp, #48	; 0x30
    e28c:	ldr	r1, [sp, #24]
    e290:	mov	r4, #0
    e294:	mov	r2, r7
    e298:	add	r0, r5, #308	; 0x134
    e29c:	str	r3, [sp]
    e2a0:	add	r3, sp, #36	; 0x24
    e2a4:	str	r4, [sp, #32]
    e2a8:	str	r4, [sp, #36]	; 0x24
    e2ac:	bl	42a0 <__isoc99_sscanf@plt>
    e2b0:	mov	r2, r7
    e2b4:	mov	r1, #8
    e2b8:	add	r0, sp, #140	; 0x8c
    e2bc:	bl	ddb0 <copypad>
    e2c0:	ldr	r3, [sp, #36]	; 0x24
    e2c4:	mov	r2, r7
    e2c8:	mov	r1, #8
    e2cc:	add	r0, sp, #156	; 0x9c
    e2d0:	strh	r3, [sp, #148]	; 0x94
    e2d4:	ldr	r3, [sp, #32]
    e2d8:	strh	r3, [sp, #150]	; 0x96
    e2dc:	bl	ddb0 <copypad>
    e2e0:	ldr	r3, [sp, #36]	; 0x24
    e2e4:	mov	r0, r7
    e2e8:	strh	r3, [sp, #164]	; 0xa4
    e2ec:	ldr	r3, [sp, #32]
    e2f0:	strh	r3, [sp, #166]	; 0xa6
    e2f4:	bl	421c <strlen@plt>
    e2f8:	cmp	r0, #8
    e2fc:	movhi	r6, #1
    e300:	movhi	r4, r6
    e304:	ldr	r3, [r5, #2132]	; 0x854
    e308:	sub	r3, r3, #3
    e30c:	clz	r3, r3
    e310:	lsr	r3, r3, #5
    e314:	strh	r3, [sp, #152]	; 0x98
    e318:	ldr	r3, [sl, #8]
    e31c:	cmp	r3, #8
    e320:	bne	e364 <xport_write_variables+0x2c0>
    e324:	mov	r2, fp
    e328:	mov	r1, #32
    e32c:	add	r0, sp, #172	; 0xac
    e330:	bl	ddb0 <copypad>
    e334:	ldr	r0, [sp, #20]
    e338:	bl	421c <strlen@plt>
    e33c:	cmp	r0, #40	; 0x28
    e340:	strh	r0, [sp, #204]	; 0xcc
    e344:	bls	e364 <xport_write_variables+0x2c0>
    e348:	add	r9, r9, #1
    e34c:	b	e36c <xport_write_variables+0x2c8>
    e350:	ldr	r4, [r5, #2136]	; 0x858
    e354:	cmp	r4, #0
    e358:	strhne	r4, [sp, #148]	; 0x94
    e35c:	movne	r4, r3
    e360:	b	e304 <xport_write_variables+0x260>
    e364:	cmp	r4, #0
    e368:	bne	e348 <xport_write_variables+0x2a4>
    e36c:	ldrd	r2, [sp, #8]
    e370:	add	r4, sp, #84	; 0x54
    e374:	mov	r0, r4
    e378:	add	r3, r3, r2
    e37c:	str	r3, [sp, #8]
    e380:	bl	40a8 <xport_namestr_bswap@plt>
    e384:	ldr	r3, [sp, #28]
    e388:	mov	r2, #140	; 0x8c
    e38c:	mov	r1, r4
    e390:	mov	r0, sl
    e394:	str	r3, [sp]
    e398:	mov	r3, #80	; 0x50
    e39c:	bl	4540 <readstat_write_bytes_as_lines@plt>
    e3a0:	subs	fp, r0, #0
    e3a4:	bne	e438 <xport_write_variables+0x394>
    e3a8:	add	r8, r8, #1
    e3ac:	b	e0e4 <xport_write_variables+0x40>
    e3b0:	mov	r1, r5
    e3b4:	mov	r0, sl
    e3b8:	bl	439c <readstat_get_variable@plt>
    e3bc:	add	r7, r0, #564	; 0x234
    e3c0:	mov	r6, r0
    e3c4:	mov	r0, r7
    e3c8:	add	r8, r6, #8
    e3cc:	bl	421c <strlen@plt>
    e3d0:	mov	r9, r0
    e3d4:	mov	r0, r8
    e3d8:	bl	421c <strlen@plt>
    e3dc:	mov	r2, #24
    e3e0:	mov	r1, #0
    e3e4:	str	r0, [sp, #8]
    e3e8:	mov	r0, r4
    e3ec:	bl	42b8 <memset@plt>
    e3f0:	ldrb	r3, [r6, #308]	; 0x134
    e3f4:	cmp	r3, #0
    e3f8:	beq	e52c <xport_write_variables+0x488>
    e3fc:	mov	r3, #2
    e400:	add	fp, sp, #36	; 0x24
    e404:	ldr	r1, [sp, #12]
    e408:	mov	r2, r4
    e40c:	add	r0, r6, #308	; 0x134
    e410:	str	r3, [sp, #32]
    e414:	mov	r3, #8
    e418:	str	r3, [sp, #36]	; 0x24
    e41c:	add	r3, sp, #32
    e420:	str	r3, [sp]
    e424:	mov	r3, fp
    e428:	bl	42a0 <__isoc99_sscanf@plt>
    e42c:	cmp	r0, #0
    e430:	bgt	e444 <xport_write_variables+0x3a0>
    e434:	mov	fp, #11
    e438:	mov	r0, fp
    e43c:	add	sp, sp, #228	; 0xe4
    e440:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e444:	mov	r0, r4
    e448:	bl	421c <strlen@plt>
    e44c:	cmp	r0, #8
    e450:	bls	e52c <xport_write_variables+0x488>
    e454:	add	r3, r5, #1
    e458:	uxth	r0, r0
    e45c:	strh	r3, [sp, #36]	; 0x24
    e460:	ldr	r3, [sp, #8]
    e464:	strh	r3, [sp, #38]	; 0x26
    e468:	strh	r0, [sp, #40]	; 0x28
    e46c:	strh	r0, [sp, #42]	; 0x2a
    e470:	strh	r9, [sp, #44]	; 0x2c
    e474:	bl	3ec8 <machine_is_little_endian@plt>
    e478:	cmp	r0, #0
    e47c:	beq	e4bc <xport_write_variables+0x418>
    e480:	ldrh	r0, [sp, #36]	; 0x24
    e484:	bl	3ebc <byteswap2@plt>
    e488:	strh	r0, [sp, #36]	; 0x24
    e48c:	ldrh	r0, [sp, #38]	; 0x26
    e490:	bl	3ebc <byteswap2@plt>
    e494:	strh	r0, [sp, #38]	; 0x26
    e498:	ldrh	r0, [sp, #40]	; 0x28
    e49c:	bl	3ebc <byteswap2@plt>
    e4a0:	strh	r0, [sp, #40]	; 0x28
    e4a4:	ldrh	r0, [sp, #42]	; 0x2a
    e4a8:	bl	3ebc <byteswap2@plt>
    e4ac:	strh	r0, [sp, #42]	; 0x2a
    e4b0:	ldrh	r0, [sp, #44]	; 0x2c
    e4b4:	bl	3ebc <byteswap2@plt>
    e4b8:	strh	r0, [sp, #44]	; 0x2c
    e4bc:	mov	r1, fp
    e4c0:	mov	r2, #10
    e4c4:	mov	r0, sl
    e4c8:	bl	4474 <readstat_write_bytes@plt>
    e4cc:	subs	fp, r0, #0
    e4d0:	bne	e438 <xport_write_variables+0x394>
    e4d4:	mov	r1, r8
    e4d8:	mov	r0, sl
    e4dc:	bl	4174 <readstat_write_string@plt>
    e4e0:	subs	fp, r0, #0
    e4e4:	bne	e438 <xport_write_variables+0x394>
    e4e8:	mov	r1, r4
    e4ec:	mov	r0, sl
    e4f0:	bl	4174 <readstat_write_string@plt>
    e4f4:	subs	fp, r0, #0
    e4f8:	bne	e438 <xport_write_variables+0x394>
    e4fc:	mov	r1, r4
    e500:	mov	r0, sl
    e504:	bl	4174 <readstat_write_string@plt>
    e508:	subs	fp, r0, #0
    e50c:	bne	e438 <xport_write_variables+0x394>
    e510:	mov	r1, r7
    e514:	mov	r0, sl
    e518:	bl	4174 <readstat_write_string@plt>
    e51c:	subs	fp, r0, #0
    e520:	bne	e438 <xport_write_variables+0x394>
    e524:	add	r5, r5, #1
    e528:	b	e1b4 <xport_write_variables+0x110>
    e52c:	cmp	r9, #40	; 0x28
    e530:	bls	e524 <xport_write_variables+0x480>
    e534:	add	r3, r5, #1
    e538:	strh	r3, [sp, #36]	; 0x24
    e53c:	ldr	r3, [sp, #8]
    e540:	strh	r9, [sp, #40]	; 0x28
    e544:	strh	r3, [sp, #38]	; 0x26
    e548:	bl	3ec8 <machine_is_little_endian@plt>
    e54c:	cmp	r0, #0
    e550:	beq	e578 <xport_write_variables+0x4d4>
    e554:	ldrh	r0, [sp, #36]	; 0x24
    e558:	bl	3ebc <byteswap2@plt>
    e55c:	strh	r0, [sp, #36]	; 0x24
    e560:	ldrh	r0, [sp, #38]	; 0x26
    e564:	bl	3ebc <byteswap2@plt>
    e568:	strh	r0, [sp, #38]	; 0x26
    e56c:	ldrh	r0, [sp, #40]	; 0x28
    e570:	bl	3ebc <byteswap2@plt>
    e574:	strh	r0, [sp, #40]	; 0x28
    e578:	mov	r2, #6
    e57c:	add	r1, sp, #36	; 0x24
    e580:	mov	r0, sl
    e584:	bl	4474 <readstat_write_bytes@plt>
    e588:	subs	fp, r0, #0
    e58c:	bne	e438 <xport_write_variables+0x394>
    e590:	mov	r1, r8
    e594:	b	e500 <xport_write_variables+0x45c>
    e598:	.word	0x00012f33
    e59c:	.word	0x00012ea9
    e5a0:	.word	0x000132b8
    e5a4:	.word	0x00012eb3
    e5a8:	.word	0x00012e8b
    e5ac:	.word	0x00012eea
    e5b0:	.word	0x00012dcd

0000e5b4 <xport_begin_data>:
    e5b4:	ldr	r3, [r0, #20]
    e5b8:	push	{r4, r5, r6, r7, r8, lr}
    e5bc:	sub	sp, sp, #128	; 0x80
    e5c0:	mov	r5, r0
    e5c4:	add	r4, sp, #44	; 0x2c
    e5c8:	mov	r0, r4
    e5cc:	ldr	r6, [pc, #1076]	; ea08 <xport_begin_data+0x454>
    e5d0:	str	r3, [sp, #44]	; 0x2c
    e5d4:	bl	4180 <localtime@plt>
    e5d8:	cmp	r0, #0
    e5dc:	add	r6, pc, r6
    e5e0:	moveq	r6, #39	; 0x27
    e5e4:	beq	e994 <xport_begin_data+0x3e0>
    e5e8:	ldr	lr, [r0]
    e5ec:	mov	r2, #100	; 0x64
    e5f0:	add	r7, sp, #24
    e5f4:	add	r8, sp, #52	; 0x34
    e5f8:	ldr	r3, [r0, #12]
    e5fc:	udiv	r1, lr, r2
    e600:	udiv	ip, r3, r2
    e604:	mls	r1, r2, r1, lr
    e608:	str	r1, [sp, #16]
    e60c:	ldr	lr, [r0, #4]
    e610:	mls	r3, r2, ip, r3
    e614:	udiv	r1, lr, r2
    e618:	mls	r1, r2, r1, lr
    e61c:	str	r1, [sp, #12]
    e620:	ldr	lr, [r0, #8]
    e624:	udiv	r1, lr, r2
    e628:	mls	r1, r2, r1, lr
    e62c:	str	r1, [sp, #8]
    e630:	ldr	lr, [r0, #20]
    e634:	udiv	r1, lr, r2
    e638:	mls	r1, r2, r1, lr
    e63c:	ldr	r2, [pc, #968]	; ea0c <xport_begin_data+0x458>
    e640:	str	r1, [sp, #4]
    e644:	ldr	r1, [pc, #964]	; ea10 <xport_begin_data+0x45c>
    e648:	add	r2, pc, r2
    e64c:	ldr	r0, [r0, #16]
    e650:	ldr	r1, [r6, r1]
    e654:	add	r1, r1, r0, lsl #2
    e658:	mov	r0, r7
    e65c:	str	r1, [sp]
    e660:	mov	r1, #17
    e664:	bl	4294 <snprintf@plt>
    e668:	mov	r2, #28
    e66c:	mov	r1, #0
    e670:	mov	r0, r8
    e674:	bl	42b8 <memset@plt>
    e678:	ldr	r2, [pc, #916]	; ea14 <xport_begin_data+0x460>
    e67c:	mov	r3, r4
    e680:	add	r2, pc, r2
    e684:	ldr	r0, [r2, #18]!
    e688:	ldr	r1, [r2, #4]
    e68c:	stmia	r3!, {r0, r1}
    e690:	mov	r3, #0
    e694:	strb	r3, [sp, #52]	; 0x34
    e698:	ldr	r3, [r5, #8]
    e69c:	cmp	r3, #8
    e6a0:	bne	e6b4 <xport_begin_data+0x100>
    e6a4:	ldr	r1, [pc, #876]	; ea18 <xport_begin_data+0x464>
    e6a8:	mov	r0, r4
    e6ac:	add	r1, pc, r1
    e6b0:	bl	40b4 <strcpy@plt>
    e6b4:	mov	r1, r4
    e6b8:	mov	r0, r5
    e6bc:	bl	e034 <xport_write_header_record>
    e6c0:	subs	r6, r0, #0
    e6c4:	bne	e994 <xport_begin_data+0x3e0>
    e6c8:	ldr	r2, [pc, #844]	; ea1c <xport_begin_data+0x468>
    e6cc:	mov	r1, #81	; 0x51
    e6d0:	mov	r0, r4
    e6d4:	str	r7, [sp, #20]
    e6d8:	ldr	r3, [pc, #832]	; ea20 <xport_begin_data+0x46c>
    e6dc:	add	r2, pc, r2
    e6e0:	str	r2, [sp, #16]
    e6e4:	add	r3, pc, r3
    e6e8:	ldr	r2, [pc, #820]	; ea24 <xport_begin_data+0x470>
    e6ec:	str	r3, [sp]
    e6f0:	add	r2, pc, r2
    e6f4:	str	r2, [sp, #12]
    e6f8:	ldr	r2, [pc, #808]	; ea28 <xport_begin_data+0x474>
    e6fc:	add	r2, pc, r2
    e700:	str	r2, [sp, #8]
    e704:	ldr	r2, [pc, #800]	; ea2c <xport_begin_data+0x478>
    e708:	add	r2, pc, r2
    e70c:	str	r2, [sp, #4]
    e710:	ldr	r2, [pc, #792]	; ea30 <xport_begin_data+0x47c>
    e714:	add	r2, pc, r2
    e718:	bl	4294 <snprintf@plt>
    e71c:	mov	r1, r4
    e720:	mov	r0, r5
    e724:	bl	dfdc <xport_write_record>
    e728:	subs	r6, r0, #0
    e72c:	bne	e994 <xport_begin_data+0x3e0>
    e730:	mov	r1, r7
    e734:	mov	r0, r5
    e738:	bl	dfdc <xport_write_record>
    e73c:	subs	r6, r0, #0
    e740:	bne	e994 <xport_begin_data+0x3e0>
    e744:	mov	r2, #24
    e748:	mov	r1, r6
    e74c:	mov	r0, r8
    e750:	bl	42b8 <memset@plt>
    e754:	ldr	r3, [pc, #728]	; ea34 <xport_begin_data+0x480>
    e758:	strh	r6, [sp, #51]	; 0x33
    e75c:	add	r3, pc, r3
    e760:	ldr	r0, [r3, #27]!
    e764:	ldrh	r2, [r3, #4]
    e768:	str	r0, [r4]
    e76c:	ldrb	r3, [r3, #6]
    e770:	strh	r2, [r4, #4]
    e774:	strb	r3, [r4, #6]
    e778:	mov	r3, #160	; 0xa0
    e77c:	str	r3, [sp, #68]	; 0x44
    e780:	mov	r3, #140	; 0x8c
    e784:	str	r3, [sp, #76]	; 0x4c
    e788:	ldr	r3, [r5, #8]
    e78c:	cmp	r3, #8
    e790:	bne	e7a4 <xport_begin_data+0x1f0>
    e794:	ldr	r1, [pc, #668]	; ea38 <xport_begin_data+0x484>
    e798:	mov	r0, r4
    e79c:	add	r1, pc, r1
    e7a0:	bl	40b4 <strcpy@plt>
    e7a4:	mov	r1, r4
    e7a8:	mov	r0, r5
    e7ac:	bl	e034 <xport_write_header_record>
    e7b0:	subs	r6, r0, #0
    e7b4:	bne	e994 <xport_begin_data+0x3e0>
    e7b8:	mov	r2, #28
    e7bc:	mov	r1, r6
    e7c0:	mov	r0, r8
    e7c4:	bl	42b8 <memset@plt>
    e7c8:	ldr	r2, [pc, #620]	; ea3c <xport_begin_data+0x488>
    e7cc:	mov	r3, r4
    e7d0:	strb	r6, [sp, #52]	; 0x34
    e7d4:	add	r2, pc, r2
    e7d8:	ldr	r0, [r2, #36]!	; 0x24
    e7dc:	ldr	r1, [r2, #4]
    e7e0:	stmia	r3!, {r0, r1}
    e7e4:	ldr	r3, [r5, #8]
    e7e8:	cmp	r3, #8
    e7ec:	bne	e800 <xport_begin_data+0x24c>
    e7f0:	ldr	r1, [pc, #584]	; ea40 <xport_begin_data+0x48c>
    e7f4:	mov	r0, r4
    e7f8:	add	r1, pc, r1
    e7fc:	bl	40b4 <strcpy@plt>
    e800:	mov	r1, r4
    e804:	mov	r0, r5
    e808:	bl	e034 <xport_write_header_record>
    e80c:	subs	r6, r0, #0
    e810:	bne	e994 <xport_begin_data+0x3e0>
    e814:	ldr	r2, [r5, #8]
    e818:	ldrb	r3, [r5, #188]	; 0xbc
    e81c:	cmp	r2, #8
    e820:	bne	e9a0 <xport_begin_data+0x3ec>
    e824:	cmp	r3, #0
    e828:	addne	r3, r5, #188	; 0xbc
    e82c:	ldreq	r3, [pc, #528]	; ea44 <xport_begin_data+0x490>
    e830:	addeq	r3, pc, r3
    e834:	ldr	r2, [pc, #524]	; ea48 <xport_begin_data+0x494>
    e838:	mov	r1, #81	; 0x51
    e83c:	mov	r0, r4
    e840:	str	r3, [sp]
    e844:	ldr	r3, [pc, #512]	; ea4c <xport_begin_data+0x498>
    e848:	str	r7, [sp, #16]
    e84c:	add	r2, pc, r2
    e850:	str	r2, [sp, #12]
    e854:	add	r3, pc, r3
    e858:	ldr	r2, [pc, #496]	; ea50 <xport_begin_data+0x49c>
    e85c:	add	r2, pc, r2
    e860:	str	r2, [sp, #8]
    e864:	ldr	r2, [pc, #488]	; ea54 <xport_begin_data+0x4a0>
    e868:	add	r2, pc, r2
    e86c:	str	r2, [sp, #4]
    e870:	ldr	r2, [pc, #480]	; ea58 <xport_begin_data+0x4a4>
    e874:	add	r2, pc, r2
    e878:	bl	4294 <snprintf@plt>
    e87c:	mov	r1, r4
    e880:	mov	r0, r5
    e884:	bl	dfdc <xport_write_record>
    e888:	cmp	r0, #0
    e88c:	mov	r6, r0
    e890:	bne	e994 <xport_begin_data+0x3e0>
    e894:	ldr	r3, [pc, #448]	; ea5c <xport_begin_data+0x4a8>
    e898:	add	r2, r5, #88	; 0x58
    e89c:	mov	r1, #81	; 0x51
    e8a0:	mov	r0, r4
    e8a4:	add	r3, pc, r3
    e8a8:	str	r3, [sp]
    e8ac:	strd	r2, [sp, #4]
    e8b0:	mov	r3, r7
    e8b4:	ldr	r2, [pc, #420]	; ea60 <xport_begin_data+0x4ac>
    e8b8:	add	r2, pc, r2
    e8bc:	bl	4294 <snprintf@plt>
    e8c0:	mov	r1, r4
    e8c4:	mov	r0, r5
    e8c8:	bl	dfdc <xport_write_record>
    e8cc:	subs	r6, r0, #0
    e8d0:	bne	e994 <xport_begin_data+0x3e0>
    e8d4:	mov	r2, #28
    e8d8:	mov	r1, r6
    e8dc:	mov	r0, r8
    e8e0:	bl	42b8 <memset@plt>
    e8e4:	ldr	r2, [pc, #376]	; ea64 <xport_begin_data+0x4b0>
    e8e8:	mov	r3, r4
    e8ec:	strb	r6, [sp, #52]	; 0x34
    e8f0:	add	r2, pc, r2
    e8f4:	ldr	r0, [r2, #45]!	; 0x2d
    e8f8:	ldr	r1, [r2, #4]
    e8fc:	stmia	r3!, {r0, r1}
    e900:	ldr	r3, [r5, #28]
    e904:	str	r3, [sp, #60]	; 0x3c
    e908:	ldr	r3, [r5, #8]
    e90c:	cmp	r3, #8
    e910:	bne	e924 <xport_begin_data+0x370>
    e914:	ldr	r1, [pc, #332]	; ea68 <xport_begin_data+0x4b4>
    e918:	mov	r0, r4
    e91c:	add	r1, pc, r1
    e920:	bl	40b4 <strcpy@plt>
    e924:	mov	r1, r4
    e928:	mov	r0, r5
    e92c:	bl	e034 <xport_write_header_record>
    e930:	subs	r6, r0, #0
    e934:	bne	e994 <xport_begin_data+0x3e0>
    e938:	mov	r0, r5
    e93c:	bl	e0a4 <xport_write_variables>
    e940:	subs	r6, r0, #0
    e944:	bne	e994 <xport_begin_data+0x3e0>
    e948:	mov	r2, #28
    e94c:	mov	r1, r6
    e950:	add	r0, sp, #52	; 0x34
    e954:	bl	42b8 <memset@plt>
    e958:	ldr	r3, [pc, #268]	; ea6c <xport_begin_data+0x4b8>
    e95c:	str	r3, [sp, #44]	; 0x2c
    e960:	ldr	r3, [r5, #8]
    e964:	str	r6, [sp, #48]	; 0x30
    e968:	strb	r6, [sp, #52]	; 0x34
    e96c:	cmp	r3, #8
    e970:	bne	e984 <xport_begin_data+0x3d0>
    e974:	ldr	r1, [pc, #244]	; ea70 <xport_begin_data+0x4bc>
    e978:	mov	r0, r4
    e97c:	add	r1, pc, r1
    e980:	bl	40b4 <strcpy@plt>
    e984:	mov	r1, r4
    e988:	mov	r0, r5
    e98c:	bl	e034 <xport_write_header_record>
    e990:	mov	r6, r0
    e994:	mov	r0, r6
    e998:	add	sp, sp, #128	; 0x80
    e99c:	pop	{r4, r5, r6, r7, r8, pc}
    e9a0:	cmp	r3, #0
    e9a4:	addne	r3, r5, #188	; 0xbc
    e9a8:	ldreq	r3, [pc, #196]	; ea74 <xport_begin_data+0x4c0>
    e9ac:	addeq	r3, pc, r3
    e9b0:	ldr	r2, [pc, #192]	; ea78 <xport_begin_data+0x4c4>
    e9b4:	mov	r1, #81	; 0x51
    e9b8:	mov	r0, r4
    e9bc:	str	r3, [sp]
    e9c0:	ldr	r3, [pc, #180]	; ea7c <xport_begin_data+0x4c8>
    e9c4:	str	r7, [sp, #20]
    e9c8:	add	r2, pc, r2
    e9cc:	str	r2, [sp, #16]
    e9d0:	add	r3, pc, r3
    e9d4:	ldr	r2, [pc, #164]	; ea80 <xport_begin_data+0x4cc>
    e9d8:	add	r2, pc, r2
    e9dc:	str	r2, [sp, #12]
    e9e0:	ldr	r2, [pc, #156]	; ea84 <xport_begin_data+0x4d0>
    e9e4:	add	r2, pc, r2
    e9e8:	str	r2, [sp, #8]
    e9ec:	ldr	r2, [pc, #148]	; ea88 <xport_begin_data+0x4d4>
    e9f0:	add	r2, pc, r2
    e9f4:	str	r2, [sp, #4]
    e9f8:	ldr	r2, [pc, #140]	; ea8c <xport_begin_data+0x4d8>
    e9fc:	add	r2, pc, r2
    ea00:	bl	4294 <snprintf@plt>
    ea04:	b	e87c <xport_begin_data+0x2c8>
    ea08:	.word	0x00031a1c
    ea0c:	.word	0x00012a5c
    ea10:	.word	0x000002dc
    ea14:	.word	0x00012977
    ea18:	.word	0x000128e2
    ea1c:	.word	0x00012cb8
    ea20:	.word	0x000129dd
    ea24:	.word	0x00012a03
    ea28:	.word	0x000129fe
    ea2c:	.word	0x000129f7
    ea30:	.word	0x000129b1
    ea34:	.word	0x0001289b
    ea38:	.word	0x00012813
    ea3c:	.word	0x00012823
    ea40:	.word	0x000127c5
    ea44:	.word	0x00012458
    ea48:	.word	0x000128a7
    ea4c:	.word	0x0001286d
    ea50:	.word	0x0001289e
    ea54:	.word	0x000128c6
    ea58:	.word	0x00012892
    ea5c:	.word	0x00012af0
    ea60:	.word	0x0001287e
    ea64:	.word	0x00012707
    ea68:	.word	0x000126b9
    ea6c:	.word	0x0053424f
    ea70:	.word	0x00012661
    ea74:	.word	0x000122dc
    ea78:	.word	0x000129cc
    ea7c:	.word	0x000126f1
    ea80:	.word	0x0001271b
    ea84:	.word	0x00012716
    ea88:	.word	0x0001273e
    ea8c:	.word	0x000126c9

0000ea90 <readstat_begin_writing_xport>:
    ea90:	ldr	ip, [r0, #8]
    ea94:	ldr	r3, [pc, #196]	; eb60 <readstat_begin_writing_xport+0xd0>
    ea98:	cmp	ip, #0
    ea9c:	moveq	ip, #8
    eaa0:	add	r3, pc, r3
    eaa4:	streq	ip, [r0, #8]
    eaa8:	ldr	ip, [pc, #180]	; eb64 <readstat_begin_writing_xport+0xd4>
    eaac:	add	ip, pc, ip
    eab0:	str	ip, [r0, #292]	; 0x124
    eab4:	ldr	ip, [pc, #172]	; eb68 <readstat_begin_writing_xport+0xd8>
    eab8:	add	ip, pc, ip
    eabc:	str	ip, [r0, #236]	; 0xec
    eac0:	ldr	ip, [pc, #164]	; eb6c <readstat_begin_writing_xport+0xdc>
    eac4:	add	ip, pc, ip
    eac8:	str	ip, [r0, #240]	; 0xf0
    eacc:	ldr	ip, [pc, #156]	; eb70 <readstat_begin_writing_xport+0xe0>
    ead0:	add	ip, pc, ip
    ead4:	str	ip, [r0, #244]	; 0xf4
    ead8:	ldr	ip, [pc, #148]	; eb74 <readstat_begin_writing_xport+0xe4>
    eadc:	add	ip, pc, ip
    eae0:	str	ip, [r0, #248]	; 0xf8
    eae4:	ldr	ip, [pc, #140]	; eb78 <readstat_begin_writing_xport+0xe8>
    eae8:	add	ip, pc, ip
    eaec:	str	ip, [r0, #252]	; 0xfc
    eaf0:	ldr	ip, [pc, #132]	; eb7c <readstat_begin_writing_xport+0xec>
    eaf4:	add	ip, pc, ip
    eaf8:	str	ip, [r0, #256]	; 0x100
    eafc:	ldr	ip, [pc, #124]	; eb80 <readstat_begin_writing_xport+0xf0>
    eb00:	add	ip, pc, ip
    eb04:	str	ip, [r0, #264]	; 0x108
    eb08:	ldr	ip, [pc, #116]	; eb84 <readstat_begin_writing_xport+0xf4>
    eb0c:	add	ip, pc, ip
    eb10:	str	ip, [r0, #268]	; 0x10c
    eb14:	ldr	ip, [pc, #108]	; eb88 <readstat_begin_writing_xport+0xf8>
    eb18:	add	ip, pc, ip
    eb1c:	str	ip, [r0, #272]	; 0x110
    eb20:	ldr	ip, [pc, #100]	; eb8c <readstat_begin_writing_xport+0xfc>
    eb24:	add	ip, pc, ip
    eb28:	str	ip, [r0, #228]	; 0xe4
    eb2c:	ldr	ip, [pc, #92]	; eb90 <readstat_begin_writing_xport+0x100>
    eb30:	ldr	r3, [r3, ip]
    eb34:	str	r3, [r0, #232]	; 0xe8
    eb38:	ldr	r3, [pc, #84]	; eb94 <readstat_begin_writing_xport+0x104>
    eb3c:	add	r3, pc, r3
    eb40:	str	r3, [r0, #276]	; 0x114
    eb44:	ldr	r3, [pc, #76]	; eb98 <readstat_begin_writing_xport+0x108>
    eb48:	add	r3, pc, r3
    eb4c:	str	r3, [r0, #284]	; 0x11c
    eb50:	ldr	r3, [pc, #68]	; eb9c <readstat_begin_writing_xport+0x10c>
    eb54:	add	r3, pc, r3
    eb58:	str	r3, [r0, #280]	; 0x118
    eb5c:	b	3f7c <readstat_begin_writing_file@plt>
    eb60:	.word	0x00031558
    eb64:	.word	0xfffff4a8
    eb68:	.word	0xfffff404
    eb6c:	.word	0xfffff3ec
    eb70:	.word	0xfffff3d4
    eb74:	.word	0xfffff3c0
    eb78:	.word	0xfffff360
    eb7c:	.word	0xfffff3fc
    eb80:	.word	0xfffff310
    eb84:	.word	0xfffff2d8
    eb88:	.word	0xfffff310
    eb8c:	.word	0xfffff3a4
    eb90:	.word	0x000002f0
    eb94:	.word	0xfffffa70
    eb98:	.word	0xfffff2c4
    eb9c:	.word	0xfffff45c

0000eba0 <por_ctx_init>:
    eba0:	push	{r4, lr}
    eba4:	mov	r1, #660	; 0x294
    eba8:	mov	r0, #1
    ebac:	bl	3d6c <calloc@plt>
    ebb0:	mov	r4, r0
    ebb4:	mov	r3, #32
    ebb8:	mov	r0, #1024	; 0x400
    ebbc:	strb	r3, [r4, #48]	; 0x30
    ebc0:	mov	r3, #20
    ebc4:	str	r3, [r4, #608]	; 0x260
    ebc8:	bl	41b0 <ck_hash_table_init@plt>
    ebcc:	str	r0, [r4, #656]	; 0x290
    ebd0:	mov	r0, r4
    ebd4:	pop	{r4, pc}

0000ebd8 <por_ctx_free>:
    ebd8:	push	{r4, r5, r6, lr}
    ebdc:	mov	r4, r0
    ebe0:	ldr	r0, [r0, #616]	; 0x268
    ebe4:	cmp	r0, #0
    ebe8:	beq	ebf0 <por_ctx_free+0x18>
    ebec:	bl	3ed4 <free@plt>
    ebf0:	ldr	r3, [r4, #652]	; 0x28c
    ebf4:	cmp	r3, #0
    ebf8:	movne	r5, #0
    ebfc:	movne	r6, #280	; 0x118
    ec00:	bne	ec58 <por_ctx_free+0x80>
    ec04:	ldr	r3, [r4, #648]	; 0x288
    ec08:	cmp	r3, #0
    ec0c:	movne	r5, #0
    ec10:	bne	ec84 <por_ctx_free+0xac>
    ec14:	ldr	r0, [r4, #656]	; 0x290
    ec18:	cmp	r0, #0
    ec1c:	beq	ec24 <por_ctx_free+0x4c>
    ec20:	bl	4258 <ck_hash_table_free@plt>
    ec24:	ldr	r0, [r4, #612]	; 0x264
    ec28:	cmp	r0, #0
    ec2c:	beq	ec34 <por_ctx_free+0x5c>
    ec30:	bl	3de4 <iconv_close@plt>
    ec34:	mov	r0, r4
    ec38:	pop	{r4, r5, r6, lr}
    ec3c:	b	3ed4 <free@plt>
    ec40:	mla	r0, r6, r5, r0
    ec44:	ldr	r0, [r0, #264]	; 0x108
    ec48:	cmp	r0, #0
    ec4c:	beq	ec54 <por_ctx_free+0x7c>
    ec50:	bl	3ed4 <free@plt>
    ec54:	add	r5, r5, #1
    ec58:	ldr	r3, [r4, #632]	; 0x278
    ec5c:	ldr	r0, [r4, #652]	; 0x28c
    ec60:	cmp	r3, r5
    ec64:	bgt	ec40 <por_ctx_free+0x68>
    ec68:	bl	3ed4 <free@plt>
    ec6c:	b	ec04 <por_ctx_free+0x2c>
    ec70:	ldr	r0, [r0, r5, lsl #2]
    ec74:	cmp	r0, #0
    ec78:	beq	ec80 <por_ctx_free+0xa8>
    ec7c:	bl	3ed4 <free@plt>
    ec80:	add	r5, r5, #1
    ec84:	ldr	r3, [r4, #632]	; 0x278
    ec88:	ldr	r0, [r4, #648]	; 0x288
    ec8c:	cmp	r3, r5
    ec90:	bgt	ec70 <por_ctx_free+0x98>
    ec94:	bl	3ed4 <free@plt>
    ec98:	b	ec14 <por_ctx_free+0x3c>

0000ec9c <por_utf8_encode>:
    ec9c:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    eca0:	mov	r6, r2
    eca4:	mov	r7, r3
    eca8:	mov	r5, r0
    ecac:	add	r8, r0, r1
    ecb0:	mov	r4, #0
    ecb4:	mov	fp, #32
    ecb8:	ldr	sl, [pc, #156]	; ed5c <por_utf8_encode+0xc0>
    ecbc:	ldr	r9, [sp, #40]	; 0x28
    ecc0:	add	sl, pc, sl
    ecc4:	cmp	r5, r8
    ecc8:	bne	ecd8 <por_utf8_encode+0x3c>
    eccc:	mov	r0, r4
    ecd0:	add	sp, sp, #4
    ecd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ecd8:	ldrb	r3, [r5], #1
    ecdc:	lsl	r3, r3, #1
    ece0:	ldrh	r2, [r9, r3]
    ece4:	cmp	r2, #0
    ece8:	beq	ed4c <por_utf8_encode+0xb0>
    ecec:	cmp	r2, #31
    ecf0:	bls	ed54 <por_utf8_encode+0xb8>
    ecf4:	cmp	r2, #127	; 0x7f
    ecf8:	bhi	ed14 <por_utf8_encode+0x78>
    ecfc:	add	r0, r4, #1
    ed00:	cmp	r0, r7
    ed04:	bhi	eccc <por_utf8_encode+0x30>
    ed08:	strb	r2, [r6, r4]
    ed0c:	mov	r4, r0
    ed10:	b	ecc4 <por_utf8_encode+0x28>
    ed14:	cmp	r2, #2048	; 0x800
    ed18:	addcc	r3, r4, #2
    ed1c:	bcc	ed24 <por_utf8_encode+0x88>
    ed20:	add	r3, r4, #3
    ed24:	cmp	r3, r7
    ed28:	bhi	eccc <por_utf8_encode+0x30>
    ed2c:	mov	r1, sl
    ed30:	add	r0, r6, r4
    ed34:	bl	4408 <sprintf@plt>
    ed38:	cmp	r0, #0
    ed3c:	addne	r0, r4, r0
    ed40:	addeq	r0, r4, #1
    ed44:	strbeq	fp, [r6, r4]
    ed48:	b	ed0c <por_utf8_encode+0x70>
    ed4c:	movw	r2, #65533	; 0xfffd
    ed50:	b	ed20 <por_utf8_encode+0x84>
    ed54:	mvn	r4, #0
    ed58:	b	eccc <por_utf8_encode+0x30>
    ed5c:	.word	0x00012493

0000ed60 <por_utf8_decode>:
    ed60:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ed64:	mov	r4, #0
    ed68:	mov	r5, r0
    ed6c:	mov	r7, r2
    ed70:	mov	r8, r3
    ed74:	mov	r9, r4
    ed78:	add	sl, sp, #4
    ed7c:	ldr	fp, [pc, #160]	; ee24 <por_utf8_decode+0xc4>
    ed80:	str	r4, [sp]
    ed84:	add	fp, pc, fp
    ed88:	add	r6, r4, #1
    ed8c:	mov	r0, r4
    ed90:	str	r9, [sp, #4]
    ed94:	cmp	r8, r6
    ed98:	bcc	edc0 <por_utf8_decode+0x60>
    ed9c:	ldrb	r3, [r5]
    eda0:	sub	r2, r3, #32
    eda4:	cmp	r2, #94	; 0x5e
    eda8:	bhi	edd8 <por_utf8_decode+0x78>
    edac:	ldr	r2, [sp, #48]	; 0x30
    edb0:	ldrb	r3, [r2, r3]
    edb4:	cmp	r3, #0
    edb8:	bne	edc8 <por_utf8_decode+0x68>
    edbc:	mvn	r0, #0
    edc0:	add	sp, sp, #12
    edc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    edc8:	add	r5, r5, #1
    edcc:	strb	r3, [r7, r4]
    edd0:	mov	r4, r6
    edd4:	b	ed88 <por_utf8_decode+0x28>
    edd8:	mov	r3, sl
    eddc:	mov	r2, sp
    ede0:	mov	r1, fp
    ede4:	mov	r0, r5
    ede8:	bl	42a0 <__isoc99_sscanf@plt>
    edec:	cmp	r0, #0
    edf0:	beq	edbc <por_utf8_decode+0x5c>
    edf4:	ldr	r3, [sp]
    edf8:	ldr	r2, [sp, #52]	; 0x34
    edfc:	cmp	r3, r2
    ee00:	bcs	edbc <por_utf8_decode+0x5c>
    ee04:	ldr	r2, [sp, #48]	; 0x30
    ee08:	ldrb	r3, [r2, r3]
    ee0c:	cmp	r3, #0
    ee10:	beq	edbc <por_utf8_decode+0x5c>
    ee14:	strb	r3, [r7, r4]
    ee18:	ldr	r3, [sp, #4]
    ee1c:	add	r5, r5, r3
    ee20:	b	edd0 <por_utf8_decode+0x70>
    ee24:	.word	0x000123d3

0000ee28 <readstat_por_parse_double>:
    ee28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ee2c:	mov	r6, r0
    ee30:	mov	r4, r0
    ee34:	vpush	{d8-d9}
    ee38:	sub	sp, sp, #1072	; 0x430
    ee3c:	sub	sp, sp, #4
    ee40:	str	r1, [sp, #24]
    ee44:	strd	r2, [sp, #28]
    ee48:	add	r3, r0, r1
    ee4c:	cmp	r0, r3
    ee50:	str	r3, [sp, #20]
    ee54:	beq	f108 <readstat_por_parse_double+0x2e0>
    ee58:	vldr	d7, [pc, #840]	; f1a8 <readstat_por_parse_double+0x380>
    ee5c:	mov	lr, #0
    ee60:	mov	r5, #1
    ee64:	mov	r7, lr
    ee68:	vldr	d4, [pc, #832]	; f1b0 <readstat_por_parse_double+0x388>
    ee6c:	ldr	r3, [pc, #844]	; f1c0 <readstat_por_parse_double+0x398>
    ee70:	ldr	r8, [pc, #844]	; f1c4 <readstat_por_parse_double+0x39c>
    ee74:	vmov.f64	d1, d7
    ee78:	vmov.f64	d3, d7
    ee7c:	vmov.f64	d6, d7
    ee80:	vmov.f64	d8, d7
    ee84:	vmov.f64	d2, d4
    ee88:	vmov.f64	d0, d7
    ee8c:	add	r3, pc, r3
    ee90:	add	r8, pc, r8
    ee94:	str	r3, [sp, #40]	; 0x28
    ee98:	add	r3, r8, #204	; 0xcc
    ee9c:	str	r8, [sp, #36]	; 0x24
    eea0:	str	r3, [sp, #44]	; 0x2c
    eea4:	add	r1, r8, r5
    eea8:	ldrb	r9, [r1, #82]	; 0x52
    eeac:	ldrb	r2, [r1, #56]	; 0x38
    eeb0:	ldrb	r3, [r1, #69]	; 0x45
    eeb4:	cmp	r9, #0
    eeb8:	add	r2, r8, r2
    eebc:	beq	ef70 <readstat_por_parse_double+0x148>
    eec0:	sub	ip, r9, #1
    eec4:	mov	r0, r2
    eec8:	add	ip, r2, ip
    eecc:	cmp	r0, ip
    eed0:	bhi	ef68 <readstat_por_parse_double+0x140>
    eed4:	sub	sl, ip, r0
    eed8:	ldrb	fp, [r4]
    eedc:	add	r1, r0, sl, asr #1
    eee0:	ldrb	sl, [r0, sl, asr #1]
    eee4:	cmp	fp, sl
    eee8:	subcc	ip, r1, #1
    eeec:	bcc	eecc <readstat_por_parse_double+0xa4>
    eef0:	addhi	r0, r1, #1
    eef4:	bhi	eecc <readstat_por_parse_double+0xa4>
    eef8:	sub	r2, r1, r2
    eefc:	add	r3, r3, r2
    ef00:	ldr	r2, [sp, #36]	; 0x24
    ef04:	add	r3, r2, r3
    ef08:	ldrb	r5, [r3, #108]	; 0x6c
    ef0c:	ldrb	r3, [r3, #156]	; 0x9c
    ef10:	cmp	r3, #0
    ef14:	beq	ef3c <readstat_por_parse_double+0x114>
    ef18:	ldr	r1, [sp, #44]	; 0x2c
    ef1c:	add	r2, r3, #1
    ef20:	add	r2, r1, r2
    ef24:	ldr	r1, [sp, #36]	; 0x24
    ef28:	add	r3, r1, r3
    ef2c:	ldrb	r0, [r3, #204]	; 0xcc
    ef30:	add	r0, r2, r0
    ef34:	cmp	r2, r0
    ef38:	bne	efe0 <readstat_por_parse_double+0x1b8>
    ef3c:	cmp	r5, #0
    ef40:	beq	ef54 <readstat_por_parse_double+0x12c>
    ef44:	ldr	r3, [sp, #20]
    ef48:	add	r4, r4, #1
    ef4c:	cmp	r3, r4
    ef50:	bne	eea4 <readstat_por_parse_double+0x7c>
    ef54:	vcmp.f64	d8, d8
    ef58:	vmrs	APSR_nzcv, fpscr
    ef5c:	movvc	r8, #0
    ef60:	bvc	f124 <readstat_por_parse_double+0x2fc>
    ef64:	b	f158 <readstat_por_parse_double+0x330>
    ef68:	add	r2, r2, r9
    ef6c:	add	r3, r3, r9
    ef70:	ldr	r1, [sp, #40]	; 0x28
    ef74:	add	r5, r1, r5
    ef78:	ldrb	r9, [r5, #95]	; 0x5f
    ef7c:	cmp	r9, #0
    ef80:	beq	ef00 <readstat_por_parse_double+0xd8>
    ef84:	add	r5, r2, r9, lsl #1
    ef88:	mov	ip, r2
    ef8c:	sub	r5, r5, #2
    ef90:	cmp	ip, r5
    ef94:	bhi	efd8 <readstat_por_parse_double+0x1b0>
    ef98:	sub	r0, r5, ip
    ef9c:	ldrb	sl, [r4]
    efa0:	asr	r0, r0, #1
    efa4:	bic	r0, r0, #1
    efa8:	add	r1, ip, r0
    efac:	ldrb	r0, [ip, r0]
    efb0:	cmp	r0, sl
    efb4:	subhi	r5, r1, #2
    efb8:	bhi	ef90 <readstat_por_parse_double+0x168>
    efbc:	ldrb	r0, [r1, #1]
    efc0:	cmp	r0, sl
    efc4:	addcc	ip, r1, #2
    efc8:	bcc	ef90 <readstat_por_parse_double+0x168>
    efcc:	sub	r2, r1, r2
    efd0:	add	r3, r3, r2, asr #1
    efd4:	b	ef00 <readstat_por_parse_double+0xd8>
    efd8:	add	r3, r3, r9
    efdc:	b	ef00 <readstat_por_parse_double+0xd8>
    efe0:	ldrb	r3, [r2], #1
    efe4:	cmp	r3, #10
    efe8:	addls	pc, pc, r3, lsl #2
    efec:	b	ef34 <readstat_por_parse_double+0x10c>
    eff0:	b	f024 <readstat_por_parse_double+0x1fc>
    eff4:	b	f060 <readstat_por_parse_double+0x238>
    eff8:	b	f01c <readstat_por_parse_double+0x1f4>
    effc:	b	f100 <readstat_por_parse_double+0x2d8>
    f000:	b	f0b8 <readstat_por_parse_double+0x290>
    f004:	b	f0a0 <readstat_por_parse_double+0x278>
    f008:	b	f0a8 <readstat_por_parse_double+0x280>
    f00c:	b	f0b0 <readstat_por_parse_double+0x288>
    f010:	b	f0b8 <readstat_por_parse_double+0x290>
    f014:	b	f0c0 <readstat_por_parse_double+0x298>
    f018:	b	f0c8 <readstat_por_parse_double+0x2a0>
    f01c:	vmov.f64	d7, d0
    f020:	b	ef34 <readstat_por_parse_double+0x10c>
    f024:	ldrb	r3, [r4]
    f028:	sub	r1, r3, #48	; 0x30
    f02c:	uxtb	ip, r1
    f030:	cmp	ip, #9
    f034:	vmovls	s11, r1
    f038:	bls	f050 <readstat_por_parse_double+0x228>
    f03c:	sub	r1, r3, #65	; 0x41
    f040:	cmp	r1, #19
    f044:	bhi	ef34 <readstat_por_parse_double+0x10c>
    f048:	sub	r3, r3, #55	; 0x37
    f04c:	vmov	s11, r3
    f050:	vcvt.f64.s32	d5, s11
    f054:	vmla.f64	d5, d7, d2
    f058:	vmov.f64	d7, d5
    f05c:	b	ef34 <readstat_por_parse_double+0x10c>
    f060:	ldrb	r3, [r4]
    f064:	sub	r1, r3, #48	; 0x30
    f068:	uxtb	ip, r1
    f06c:	cmp	ip, #9
    f070:	vmovls	s11, r1
    f074:	bls	f08c <readstat_por_parse_double+0x264>
    f078:	sub	r1, r3, #65	; 0x41
    f07c:	cmp	r1, #19
    f080:	bhi	f098 <readstat_por_parse_double+0x270>
    f084:	sub	r3, r3, #55	; 0x37
    f088:	vmov	s11, r3
    f08c:	vcvt.f64.s32	d5, s11
    f090:	vdiv.f64	d9, d5, d4
    f094:	vadd.f64	d6, d6, d9
    f098:	vmul.f64	d4, d4, d2
    f09c:	b	ef34 <readstat_por_parse_double+0x10c>
    f0a0:	vmov.f64	d3, d7
    f0a4:	b	ef34 <readstat_por_parse_double+0x10c>
    f0a8:	mov	lr, #1
    f0ac:	b	ef34 <readstat_por_parse_double+0x10c>
    f0b0:	vmov.f64	d1, d7
    f0b4:	b	ef34 <readstat_por_parse_double+0x10c>
    f0b8:	mov	r7, #1
    f0bc:	b	ef34 <readstat_por_parse_double+0x10c>
    f0c0:	vldr	d8, [pc, #240]	; f1b8 <readstat_por_parse_double+0x390>
    f0c4:	b	ef34 <readstat_por_parse_double+0x10c>
    f0c8:	vcmp.f64	d8, d8
    f0cc:	add	r4, r4, #1
    f0d0:	vmrs	APSR_nzcv, fpscr
    f0d4:	movvc	r8, #1
    f0d8:	bvc	f124 <readstat_por_parse_double+0x2fc>
    f0dc:	ldr	r3, [sp, #28]
    f0e0:	sub	r0, r4, r6
    f0e4:	cmp	r3, #0
    f0e8:	ldrne	r3, [sp, #28]
    f0ec:	vstrne	d8, [r3]
    f0f0:	add	sp, sp, #1072	; 0x430
    f0f4:	add	sp, sp, #4
    f0f8:	vpop	{d8-d9}
    f0fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f100:	vldr	d6, [pc, #160]	; f1a8 <readstat_por_parse_double+0x380>
    f104:	b	ef34 <readstat_por_parse_double+0x10c>
    f108:	vldr	d1, [pc, #152]	; f1a8 <readstat_por_parse_double+0x380>
    f10c:	mov	r8, #0
    f110:	mov	r5, #1
    f114:	mov	lr, r8
    f118:	mov	r7, r8
    f11c:	vmov.f64	d3, d1
    f120:	vmov.f64	d6, d1
    f124:	cmp	lr, #0
    f128:	vadd.f64	d8, d6, d3
    f12c:	vnegne.f64	d1, d1
    f130:	vcmp.f64	d1, #0.0
    f134:	vmrs	APSR_nzcv, fpscr
    f138:	beq	f148 <readstat_por_parse_double+0x320>
    f13c:	vldr	d0, [pc, #108]	; f1b0 <readstat_por_parse_double+0x388>
    f140:	bl	3fa0 <pow@plt>
    f144:	vmul.f64	d8, d8, d0
    f148:	cmp	r7, #0
    f14c:	vnegne.f64	d8, d8
    f150:	cmp	r8, #0
    f154:	bne	f0dc <readstat_por_parse_double+0x2b4>
    f158:	ldr	r3, [sp, #32]
    f15c:	cmp	r3, #0
    f160:	beq	f19c <readstat_por_parse_double+0x374>
    f164:	ldr	r3, [sp, #24]
    f168:	mov	r1, #1024	; 0x400
    f16c:	ldr	r2, [pc, #84]	; f1c8 <readstat_por_parse_double+0x3a0>
    f170:	stm	sp, {r3, r6}
    f174:	sub	r3, r4, r6
    f178:	add	r4, sp, #48	; 0x30
    f17c:	mov	r0, r4
    f180:	str	r5, [sp, #8]
    f184:	add	r2, pc, r2
    f188:	bl	4294 <snprintf@plt>
    f18c:	mov	r0, r4
    f190:	ldr	r3, [sp, #32]
    f194:	ldr	r1, [sp, #1128]	; 0x468
    f198:	blx	r3
    f19c:	mvn	r0, #0
    f1a0:	b	f0f0 <readstat_por_parse_double+0x2c8>
    f1a4:	nop	{0}
	...
    f1b4:	.word	0x403e0000
    f1b8:	.word	0x00000000
    f1bc:	.word	0x7ff80000
    f1c0:	.word	0x000122d1
    f1c4:	.word	0x000122cd
    f1c8:	.word	0x000120c6
    f1cc:	.word	0x00000000

0000f1d0 <read_bytes>:
    f1d0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    f1d4:	mov	r5, r0
    f1d8:	mov	r7, r1
    f1dc:	mov	r4, r1
    f1e0:	add	r9, r1, r2
    f1e4:	add	r8, sp, #7
    f1e8:	ldr	r6, [r0, #44]	; 0x2c
    f1ec:	cmp	r4, r9
    f1f0:	bcs	f234 <read_bytes+0x64>
    f1f4:	ldr	r3, [r5, #52]	; 0x34
    f1f8:	cmp	r3, #0
    f1fc:	beq	f218 <read_bytes+0x48>
    f200:	ldrb	r3, [r5, #48]	; 0x30
    f204:	strb	r3, [r4], #1
    f208:	ldr	r3, [r5, #52]	; 0x34
    f20c:	sub	r3, r3, #1
    f210:	str	r3, [r5, #52]	; 0x34
    f214:	b	f1ec <read_bytes+0x1c>
    f218:	mov	r1, #1
    f21c:	mov	r0, r8
    f220:	ldr	r3, [r6, #12]
    f224:	ldr	r2, [r6, #20]
    f228:	blx	r3
    f22c:	cmp	r0, #0
    f230:	bne	f240 <read_bytes+0x70>
    f234:	sub	r0, r4, r7
    f238:	add	sp, sp, #12
    f23c:	pop	{r4, r5, r6, r7, r8, r9, pc}
    f240:	cmn	r0, #1
    f244:	bne	f250 <read_bytes+0x80>
    f248:	mvn	r0, #0
    f24c:	b	f238 <read_bytes+0x68>
    f250:	ldrb	r3, [sp, #7]
    f254:	cmp	r3, #10
    f258:	cmpne	r3, #13
    f25c:	bne	f2b0 <read_bytes+0xe0>
    f260:	cmp	r3, #13
    f264:	beq	f280 <read_bytes+0xb0>
    f268:	ldr	r3, [r5, #40]	; 0x28
    f26c:	rsb	r3, r3, #80	; 0x50
    f270:	str	r3, [r5, #52]	; 0x34
    f274:	mov	r3, #0
    f278:	str	r3, [r5, #40]	; 0x28
    f27c:	b	f1ec <read_bytes+0x1c>
    f280:	mov	r1, #1
    f284:	mov	r0, r8
    f288:	ldr	r3, [r6, #12]
    f28c:	ldr	r2, [r6, #20]
    f290:	blx	r3
    f294:	add	r0, r0, #1
    f298:	cmp	r0, #1
    f29c:	bls	f248 <read_bytes+0x78>
    f2a0:	ldrb	r3, [sp, #7]
    f2a4:	cmp	r3, #10
    f2a8:	beq	f268 <read_bytes+0x98>
    f2ac:	b	f248 <read_bytes+0x78>
    f2b0:	ldr	r2, [r5, #40]	; 0x28
    f2b4:	cmp	r2, #80	; 0x50
    f2b8:	beq	f248 <read_bytes+0x78>
    f2bc:	strb	r3, [r4], #1
    f2c0:	ldr	r3, [r5, #40]	; 0x28
    f2c4:	add	r3, r3, #1
    f2c8:	b	f278 <read_bytes+0xa8>

0000f2cc <read_double_with_peek>:
    f2cc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    f2d0:	sub	sp, sp, #1456	; 0x5b0
    f2d4:	mov	r6, #0
    f2d8:	sub	sp, sp, #8
    f2dc:	mov	sl, r1
    f2e0:	add	r5, sp, #40	; 0x28
    f2e4:	mov	r4, r0
    f2e8:	ldr	r7, [pc, #416]	; f490 <read_double_with_peek+0x1c4>
    f2ec:	strb	r2, [sp, #40]	; 0x28
    f2f0:	mov	r2, #1
    f2f4:	add	r1, r5, r2
    f2f8:	strd	r6, [r5, #-8]
    f2fc:	bl	f1d0 <read_bytes>
    f300:	cmp	r0, #1
    f304:	bne	f40c <read_double_with_peek+0x140>
    f308:	ldrb	r3, [sp, #40]	; 0x28
    f30c:	add	r3, r4, r3, lsl #1
    f310:	ldrh	r3, [r3, #94]	; 0x5e
    f314:	cmp	r3, #42	; 0x2a
    f318:	bne	f338 <read_double_with_peek+0x6c>
    f31c:	ldrb	r3, [sp, #41]	; 0x29
    f320:	add	r3, r4, r3, lsl #1
    f324:	ldrh	r3, [r3, #94]	; 0x5e
    f328:	cmp	r3, #46	; 0x2e
    f32c:	moveq	r0, #0
    f330:	strdeq	r6, [sl]
    f334:	beq	f410 <read_double_with_peek+0x144>
    f338:	add	r8, r5, #1
    f33c:	mov	r6, #2
    f340:	mov	r7, #0
    f344:	ldrb	r3, [r8], #1
    f348:	add	r3, r4, r3, lsl #1
    f34c:	ldrh	r3, [r3, #94]	; 0x5e
    f350:	cmp	r3, #47	; 0x2f
    f354:	bne	f3e0 <read_double_with_peek+0x114>
    f358:	add	r3, r4, #94	; 0x5e
    f35c:	add	r9, sp, #140	; 0x8c
    f360:	mov	r2, r9
    f364:	mov	r1, r6
    f368:	mov	r0, r5
    f36c:	str	r3, [sp]
    f370:	mov	r3, #300	; 0x12c
    f374:	bl	4270 <por_utf8_encode@plt>
    f378:	asr	r3, r0, #31
    f37c:	mov	r2, r0
    f380:	cmn	r0, #1
    f384:	mov	r8, r0
    f388:	strd	r2, [sp, #24]
    f38c:	bne	f41c <read_double_with_peek+0x150>
    f390:	ldr	r3, [r4, #24]
    f394:	cmp	r3, #0
    f398:	beq	f3d0 <read_double_with_peek+0x104>
    f39c:	ldr	r2, [pc, #240]	; f494 <read_double_with_peek+0x1c8>
    f3a0:	mov	r1, #1024	; 0x400
    f3a4:	strd	r6, [sp]
    f3a8:	str	r6, [sp, #8]
    f3ac:	add	r6, sp, #440	; 0x1b8
    f3b0:	mov	r0, r6
    f3b4:	str	r5, [sp, #12]
    f3b8:	add	r2, pc, r2
    f3bc:	bl	4294 <snprintf@plt>
    f3c0:	mov	r0, r6
    f3c4:	ldr	r3, [r4, #24]
    f3c8:	ldr	r1, [r4, #36]	; 0x24
    f3cc:	blx	r3
    f3d0:	mov	r0, #16
    f3d4:	ldrd	r2, [r5, #-8]
    f3d8:	strd	r2, [sl]
    f3dc:	b	f410 <read_double_with_peek+0x144>
    f3e0:	mov	r2, #1
    f3e4:	mov	r1, r8
    f3e8:	mov	r0, r4
    f3ec:	bl	f1d0 <read_bytes>
    f3f0:	cmp	r0, #1
    f3f4:	bne	f40c <read_double_with_peek+0x140>
    f3f8:	adds	r6, r6, #1
    f3fc:	adc	r7, r7, #0
    f400:	cmp	r7, #0
    f404:	cmpeq	r6, #100	; 0x64
    f408:	bne	f344 <read_double_with_peek+0x78>
    f40c:	mov	r0, #5
    f410:	add	sp, sp, #1456	; 0x5b0
    f414:	add	sp, sp, #8
    f418:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    f41c:	ldr	r3, [r4, #36]	; 0x24
    f420:	sub	r2, r5, #8
    f424:	mov	r1, r8
    f428:	mov	r0, r9
    f42c:	str	r3, [sp]
    f430:	ldr	r3, [r4, #24]
    f434:	bl	4264 <readstat_por_parse_double@plt>
    f438:	cmn	r0, #1
    f43c:	movne	r0, #0
    f440:	bne	f3d4 <read_double_with_peek+0x108>
    f444:	ldr	r3, [r4, #24]
    f448:	cmp	r3, #0
    f44c:	beq	f488 <read_double_with_peek+0x1bc>
    f450:	ldrd	r2, [sp, #24]
    f454:	add	r6, sp, #440	; 0x1b8
    f458:	mov	r1, #1024	; 0x400
    f45c:	mov	r0, r6
    f460:	strd	r2, [sp]
    f464:	ldr	r2, [pc, #44]	; f498 <read_double_with_peek+0x1cc>
    f468:	strd	r8, [sp, #8]
    f46c:	str	r5, [sp, #16]
    f470:	add	r2, pc, r2
    f474:	bl	4294 <snprintf@plt>
    f478:	mov	r0, r6
    f47c:	ldr	r3, [r4, #24]
    f480:	ldr	r1, [r4, #36]	; 0x24
    f484:	blx	r3
    f488:	mov	r0, #5
    f48c:	b	f3d4 <read_double_with_peek+0x108>
    f490:	.word	0x7ff80000
    f494:	.word	0x00011ec3
    f498:	.word	0x00011e3e

0000f49c <read_double>:
    f49c:	push	{r0, r1, r2, r4, r5, lr}
    f4a0:	mov	r5, r1
    f4a4:	mov	r2, #1
    f4a8:	add	r1, sp, #7
    f4ac:	mov	r4, r0
    f4b0:	bl	f1d0 <read_bytes>
    f4b4:	cmp	r0, #1
    f4b8:	movne	r0, #5
    f4bc:	bne	f4d0 <read_double+0x34>
    f4c0:	ldrb	r2, [sp, #7]
    f4c4:	mov	r1, r5
    f4c8:	mov	r0, r4
    f4cc:	bl	f2cc <read_double_with_peek>
    f4d0:	add	sp, sp, #12
    f4d4:	pop	{r4, r5, pc}

0000f4d8 <maybe_read_string>:
    f4d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    f4dc:	sub	sp, sp, #1040	; 0x410
    f4e0:	mov	r8, r1
    f4e4:	add	r7, sp, #16
    f4e8:	mov	sl, r2
    f4ec:	mov	r1, r7
    f4f0:	mov	r2, #1
    f4f4:	mov	r4, r0
    f4f8:	mov	r9, r3
    f4fc:	bl	f1d0 <read_bytes>
    f500:	cmp	r0, #1
    f504:	movne	r0, #0
    f508:	movne	r6, #5
    f50c:	bne	f540 <maybe_read_string+0x68>
    f510:	ldrb	r2, [sp, #16]
    f514:	add	r3, r4, r2, lsl #1
    f518:	ldrh	r3, [r3, #94]	; 0x5e
    f51c:	cmp	r3, #90	; 0x5a
    f520:	moveq	r6, #0
    f524:	beq	f540 <maybe_read_string+0x68>
    f528:	sub	r1, r7, #8
    f52c:	mov	r0, r4
    f530:	bl	f2cc <read_double_with_peek>
    f534:	subs	r6, r0, #0
    f538:	beq	f630 <maybe_read_string+0x158>
    f53c:	mov	r0, #0
    f540:	str	r0, [r9]
    f544:	b	f624 <maybe_read_string+0x14c>
    f548:	vldr	d6, [pc, #248]	; f648 <maybe_read_string+0x170>
    f54c:	vcmpe.f64	d7, d6
    f550:	vmrs	APSR_nzcv, fpscr
    f554:	bgt	f640 <maybe_read_string+0x168>
    f558:	vcmp.f64	d7, d7
    f55c:	vmrs	APSR_nzcv, fpscr
    f560:	bvs	f640 <maybe_read_string+0x168>
    f564:	vcvt.u32.f64	s15, d7
    f568:	ldr	r3, [r4, #620]	; 0x26c
    f56c:	vmov	r5, s15
    f570:	cmp	r3, r5
    f574:	bcs	f598 <maybe_read_string+0xc0>
    f578:	vmov	r1, s15
    f57c:	vstr	s15, [r4, #620]	; 0x26c
    f580:	ldr	r0, [r4, #616]	; 0x268
    f584:	bl	400c <realloc@plt>
    f588:	mov	r1, r6
    f58c:	str	r0, [r4, #616]	; 0x268
    f590:	ldr	r2, [r4, #620]	; 0x26c
    f594:	bl	42b8 <memset@plt>
    f598:	mov	r2, r5
    f59c:	mov	r0, r4
    f5a0:	ldr	r1, [r4, #616]	; 0x268
    f5a4:	bl	f1d0 <read_bytes>
    f5a8:	cmn	r0, #1
    f5ac:	moveq	r6, #2
    f5b0:	beq	f624 <maybe_read_string+0x14c>
    f5b4:	add	r3, r4, #94	; 0x5e
    f5b8:	mov	r2, r8
    f5bc:	ldr	r0, [r4, #616]	; 0x268
    f5c0:	mov	r1, r5
    f5c4:	str	r3, [sp]
    f5c8:	sub	r3, sl, #1
    f5cc:	bl	4270 <por_utf8_encode@plt>
    f5d0:	cmn	r0, #1
    f5d4:	movne	r3, #0
    f5d8:	strbne	r3, [r8, r0]
    f5dc:	strne	r3, [r9]
    f5e0:	bne	f624 <maybe_read_string+0x14c>
    f5e4:	ldr	r3, [r4, #24]
    f5e8:	cmp	r3, #0
    f5ec:	beq	f620 <maybe_read_string+0x148>
    f5f0:	ldr	r2, [pc, #88]	; f650 <maybe_read_string+0x178>
    f5f4:	mov	r1, #1024	; 0x400
    f5f8:	mov	r0, r7
    f5fc:	ldr	r3, [r4, #616]	; 0x268
    f600:	add	r2, pc, r2
    f604:	str	r3, [sp]
    f608:	mov	r3, r5
    f60c:	bl	4294 <snprintf@plt>
    f610:	mov	r0, r7
    f614:	ldr	r3, [r4, #24]
    f618:	ldr	r1, [r4, #36]	; 0x24
    f61c:	blx	r3
    f620:	mov	r6, #16
    f624:	mov	r0, r6
    f628:	add	sp, sp, #1040	; 0x410
    f62c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    f630:	vldr	d7, [r7, #-8]
    f634:	vcmpe.f64	d7, #0.0
    f638:	vmrs	APSR_nzcv, fpscr
    f63c:	bpl	f548 <maybe_read_string+0x70>
    f640:	mov	r6, #5
    f644:	b	f624 <maybe_read_string+0x14c>
    f648:	.word	0x00000000
    f64c:	.word	0x40d38800
    f650:	.word	0x00011ce3

0000f654 <read_string>:
    f654:	mov	r3, #0
    f658:	push	{r0, r1, r2, lr}
    f65c:	str	r3, [sp, #4]
    f660:	add	r3, sp, #4
    f664:	bl	f4d8 <maybe_read_string>
    f668:	cmp	r0, #0
    f66c:	bne	f67c <read_string+0x28>
    f670:	ldr	r3, [sp, #4]
    f674:	cmp	r3, #0
    f678:	movne	r0, #5
    f67c:	add	sp, sp, #12
    f680:	pop	{pc}		; (ldr pc, [sp], #4)

0000f684 <read_integer_in_range.constprop.1>:
    f684:	ldr	r3, [pc, #108]	; f6f8 <read_integer_in_range.constprop.1+0x74>
    f688:	push	{r4, lr}
    f68c:	mov	r4, r2
    f690:	mov	r2, #0
    f694:	vpush	{d8}
    f698:	sub	sp, sp, #8
    f69c:	vmov	s16, r1
    f6a0:	mov	r1, sp
    f6a4:	strd	r2, [sp]
    f6a8:	bl	f49c <read_double>
    f6ac:	cmp	r0, #0
    f6b0:	bne	f6ec <read_integer_in_range.constprop.1+0x68>
    f6b4:	vldr	d7, [sp]
    f6b8:	vcmp.f64	d7, d7
    f6bc:	vmrs	APSR_nzcv, fpscr
    f6c0:	bvs	f6e8 <read_integer_in_range.constprop.1+0x64>
    f6c4:	vcmpe.f64	d7, #0.0
    f6c8:	vmrs	APSR_nzcv, fpscr
    f6cc:	bmi	f6e8 <read_integer_in_range.constprop.1+0x64>
    f6d0:	vcvt.f64.s32	d8, s16
    f6d4:	vcmpe.f64	d7, d8
    f6d8:	vmrs	APSR_nzcv, fpscr
    f6dc:	vcvtle.s32.f64	s14, d7
    f6e0:	vstrle	s14, [r4]
    f6e4:	ble	f6ec <read_integer_in_range.constprop.1+0x68>
    f6e8:	mov	r0, #5
    f6ec:	add	sp, sp, #8
    f6f0:	vpop	{d8}
    f6f4:	pop	{r4, pc}
    f6f8:	.word	0x7ff80000

0000f6fc <read_version_and_timestamp>:
    f6fc:	push	{r4, r5, r6, r7, lr}
    f700:	sub	sp, sp, #316	; 0x13c
    f704:	mov	r4, r0
    f708:	add	r7, sp, #12
    f70c:	mov	r2, #44	; 0x2c
    f710:	mov	r1, #0
    f714:	mov	r0, r7
    f718:	bl	42b8 <memset@plt>
    f71c:	mvn	r3, #0
    f720:	mov	r2, #1
    f724:	add	r1, sp, #11
    f728:	mov	r0, r4
    f72c:	str	r3, [sp, #44]	; 0x2c
    f730:	bl	f1d0 <read_bytes>
    f734:	cmp	r0, #1
    f738:	movne	r5, #2
    f73c:	bne	f788 <read_version_and_timestamp+0x8c>
    f740:	add	r6, sp, #56	; 0x38
    f744:	mov	r2, #256	; 0x100
    f748:	mov	r1, r6
    f74c:	mov	r0, r4
    f750:	bl	f654 <read_string>
    f754:	subs	r5, r0, #0
    f758:	bne	f788 <read_version_and_timestamp+0x8c>
    f75c:	ldr	r1, [pc, #172]	; f810 <read_version_and_timestamp+0x114>
    f760:	add	r3, sp, #24
    f764:	add	r2, sp, #32
    f768:	mov	r0, r6
    f76c:	str	r3, [sp]
    f770:	add	r3, sp, #28
    f774:	add	r1, pc, r1
    f778:	bl	42a0 <__isoc99_sscanf@plt>
    f77c:	cmp	r0, #3
    f780:	beq	f794 <read_version_and_timestamp+0x98>
    f784:	mov	r5, #29
    f788:	mov	r0, r5
    f78c:	add	sp, sp, #316	; 0x13c
    f790:	pop	{r4, r5, r6, r7, pc}
    f794:	mov	r2, #256	; 0x100
    f798:	mov	r1, r6
    f79c:	mov	r0, r4
    f7a0:	bl	f654 <read_string>
    f7a4:	subs	r5, r0, #0
    f7a8:	bne	f788 <read_version_and_timestamp+0x8c>
    f7ac:	ldr	r1, [pc, #96]	; f814 <read_version_and_timestamp+0x118>
    f7b0:	add	r3, sp, #16
    f7b4:	add	r2, sp, #20
    f7b8:	mov	r0, r6
    f7bc:	str	r7, [sp]
    f7c0:	add	r1, pc, r1
    f7c4:	bl	42a0 <__isoc99_sscanf@plt>
    f7c8:	cmp	r0, #3
    f7cc:	bne	f784 <read_version_and_timestamp+0x88>
    f7d0:	ldr	r3, [sp, #32]
    f7d4:	mov	r0, r7
    f7d8:	sub	r3, r3, #1888	; 0x760
    f7dc:	sub	r3, r3, #12
    f7e0:	str	r3, [sp, #32]
    f7e4:	ldr	r3, [sp, #28]
    f7e8:	sub	r3, r3, #1
    f7ec:	str	r3, [sp, #28]
    f7f0:	bl	3e68 <mktime@plt>
    f7f4:	ldrb	r3, [sp, #11]
    f7f8:	add	r3, r4, r3, lsl #1
    f7fc:	ldrh	r3, [r3, #94]	; 0x5e
    f800:	str	r0, [r4, #56]	; 0x38
    f804:	sub	r3, r3, #65	; 0x41
    f808:	str	r3, [r4, #60]	; 0x3c
    f80c:	b	f788 <read_version_and_timestamp+0x8c>
    f810:	.word	0x00011b8d
    f814:	.word	0x00011b4e

0000f818 <handle_variables>:
    f818:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f81c:	mov	r7, #0
    f820:	sub	sp, sp, #260	; 0x104
    f824:	mov	r4, r0
    f828:	mov	r5, r7
    f82c:	mov	r8, sp
    f830:	ldr	sl, [pc, #300]	; f964 <handle_variables+0x14c>
    f834:	add	sl, pc, sl
    f838:	ldr	r6, [r4, #632]	; 0x278
    f83c:	cmp	r6, r5
    f840:	bgt	f85c <handle_variables+0x44>
    f844:	ldr	r7, [r4, #12]
    f848:	cmp	r7, #0
    f84c:	bne	f904 <handle_variables+0xec>
    f850:	mov	r0, #0
    f854:	add	sp, sp, #260	; 0x104
    f858:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f85c:	mov	r3, #280	; 0x118
    f860:	mov	r1, r7
    f864:	ldr	r2, [r4, #612]	; 0x264
    f868:	lsl	fp, r5, #2
    f86c:	ldr	r6, [r4, #652]	; 0x28c
    f870:	ldr	r9, [r4, #648]	; 0x288
    f874:	mla	r6, r3, r5, r6
    f878:	mov	r0, r6
    f87c:	str	r5, [r6, #8]
    f880:	bl	4288 <spss_init_variable_for_info@plt>
    f884:	mov	r2, sl
    f888:	mov	r1, #256	; 0x100
    f88c:	str	r0, [r9, r5, lsl #2]
    f890:	mov	r0, r8
    f894:	ldr	r3, [r6, #4]
    f898:	bl	4294 <snprintf@plt>
    f89c:	ldr	r9, [r4, #8]
    f8a0:	cmp	r9, #0
    f8a4:	beq	f8fc <handle_variables+0xe4>
    f8a8:	ldr	r3, [r6, #4]
    f8ac:	mov	r0, r5
    f8b0:	ldr	r1, [r4, #648]	; 0x288
    f8b4:	cmn	r3, #1
    f8b8:	ldr	r3, [r4, #36]	; 0x24
    f8bc:	movne	r2, r8
    f8c0:	moveq	r2, #0
    f8c4:	ldr	r1, [r1, r5, lsl #2]
    f8c8:	blx	r9
    f8cc:	cmp	r0, #1
    f8d0:	bne	f8dc <handle_variables+0xc4>
    f8d4:	mov	r0, #4
    f8d8:	b	f854 <handle_variables+0x3c>
    f8dc:	cmp	r0, #2
    f8e0:	bne	f8fc <handle_variables+0xe4>
    f8e4:	ldr	r3, [r4, #648]	; 0x288
    f8e8:	mov	r2, #1
    f8ec:	ldr	r3, [r3, fp]
    f8f0:	str	r2, [r3, #2144]	; 0x860
    f8f4:	add	r5, r5, #1
    f8f8:	b	f838 <handle_variables+0x20>
    f8fc:	add	r7, r7, #1
    f900:	b	f8f4 <handle_variables+0xdc>
    f904:	ldrb	r3, [r4, #64]	; 0x40
    f908:	cmp	r3, #0
    f90c:	beq	f850 <handle_variables+0x38>
    f910:	mov	r5, #0
    f914:	add	r8, r4, #64	; 0x40
    f918:	mov	r9, #280	; 0x118
    f91c:	b	f924 <handle_variables+0x10c>
    f920:	add	r5, r5, #1
    f924:	cmp	r6, r5
    f928:	ble	f850 <handle_variables+0x38>
    f92c:	ldr	r0, [r4, #652]	; 0x28c
    f930:	mov	r1, r8
    f934:	mla	r0, r9, r5, r0
    f938:	add	r0, r0, #187	; 0xbb
    f93c:	bl	3e14 <strcmp@plt>
    f940:	cmp	r0, #0
    f944:	bne	f920 <handle_variables+0x108>
    f948:	ldr	r1, [r4, #36]	; 0x24
    f94c:	ldr	r3, [r4, #648]	; 0x288
    f950:	ldr	r0, [r3, r5, lsl #2]
    f954:	blx	r7
    f958:	cmp	r0, #0
    f95c:	beq	f850 <handle_variables+0x38>
    f960:	b	f8d4 <handle_variables+0xbc>
    f964:	.word	0x00011ae7

0000f968 <readstat_parse_por>:
    f968:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f96c:	mov	r5, r0
    f970:	mov	r8, r2
    f974:	mov	r7, r1
    f978:	vpush	{d8}
    f97c:	sub	sp, sp, #3104	; 0xc20
    f980:	sub	sp, sp, #4
    f984:	ldr	fp, [r0, #32]
    f988:	bl	44b0 <por_ctx_init@plt>
    f98c:	mov	lr, r5
    f990:	mov	r4, r0
    f994:	ldr	r6, [pc, #1692]	; 10038 <readstat_parse_por+0x6d0>
    f998:	mov	ip, r0
    f99c:	ldm	lr!, {r0, r1, r2, r3}
    f9a0:	add	r6, pc, r6
    f9a4:	stmia	ip!, {r0, r1, r2, r3}
    f9a8:	ldm	lr, {r0, r1, r2, r3}
    f9ac:	stm	ip, {r0, r1, r2, r3}
    f9b0:	ldr	r3, [r5, #44]	; 0x2c
    f9b4:	str	r8, [r4, #36]	; 0x24
    f9b8:	str	fp, [r4, #44]	; 0x2c
    f9bc:	str	r3, [r4, #640]	; 0x280
    f9c0:	ldr	r3, [r5, #48]	; 0x30
    f9c4:	ldr	r5, [r5, #40]	; 0x28
    f9c8:	cmp	r3, #0
    f9cc:	strgt	r3, [r4, #644]	; 0x284
    f9d0:	cmp	r5, #0
    f9d4:	beq	fa1c <readstat_parse_por+0xb4>
    f9d8:	ldr	r8, [pc, #1628]	; 1003c <readstat_parse_por+0x6d4>
    f9dc:	mov	r0, r5
    f9e0:	add	r8, pc, r8
    f9e4:	mov	r1, r8
    f9e8:	bl	3e14 <strcmp@plt>
    f9ec:	cmp	r0, #0
    f9f0:	beq	fa04 <readstat_parse_por+0x9c>
    f9f4:	mov	r1, r8
    f9f8:	mov	r0, r5
    f9fc:	bl	4150 <iconv_open@plt>
    fa00:	str	r0, [r4, #612]	; 0x264
    fa04:	ldr	r3, [r4, #612]	; 0x264
    fa08:	cmn	r3, #1
    fa0c:	moveq	r3, #0
    fa10:	moveq	r5, #7
    fa14:	streq	r3, [r4, #612]	; 0x264
    fa18:	beq	fa5c <readstat_parse_por+0xf4>
    fa1c:	mov	r0, r7
    fa20:	ldr	r3, [fp]
    fa24:	ldr	r1, [fp, #20]
    fa28:	blx	r3
    fa2c:	cmn	r0, #1
    fa30:	moveq	r5, #1
    fa34:	beq	fa5c <readstat_parse_por+0xf4>
    fa38:	mov	r1, #2
    fa3c:	mov	r0, #0
    fa40:	ldr	r3, [fp, #8]
    fa44:	ldr	r2, [fp, #20]
    fa48:	blx	r3
    fa4c:	cmn	r0, #1
    fa50:	str	r0, [r4, #32]
    fa54:	bne	fa84 <readstat_parse_por+0x11c>
    fa58:	mov	r5, #15
    fa5c:	ldr	r3, [fp, #4]
    fa60:	ldr	r0, [fp, #20]
    fa64:	blx	r3
    fa68:	mov	r0, r4
    fa6c:	bl	3dcc <por_ctx_free@plt>
    fa70:	mov	r0, r5
    fa74:	add	sp, sp, #3104	; 0xc20
    fa78:	add	sp, sp, #4
    fa7c:	vpop	{d8}
    fa80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fa84:	mov	r1, #0
    fa88:	ldr	r3, [fp, #8]
    fa8c:	mov	r0, r1
    fa90:	ldr	r2, [fp, #20]
    fa94:	blx	r3
    fa98:	cmn	r0, #1
    fa9c:	beq	fa58 <readstat_parse_por+0xf0>
    faa0:	add	r3, sp, #80	; 0x50
    faa4:	mov	r2, #200	; 0xc8
    faa8:	mov	r1, r3
    faac:	mov	r0, r4
    fab0:	str	r3, [sp, #20]
    fab4:	bl	f1d0 <read_bytes>
    fab8:	cmp	r0, #200	; 0xc8
    fabc:	beq	fac8 <readstat_parse_por+0x160>
    fac0:	mov	r5, #2
    fac4:	b	fa5c <readstat_parse_por+0xf4>
    fac8:	ldr	r2, [sp, #20]
    facc:	add	r3, r4, #73	; 0x49
    fad0:	mov	r1, #21
    fad4:	add	r0, r4, #73	; 0x49
    fad8:	str	r3, [sp, #28]
    fadc:	mov	r3, #0
    fae0:	str	r3, [sp]
    fae4:	mov	r3, #20
    fae8:	add	r2, r2, #60	; 0x3c
    faec:	bl	424c <readstat_convert@plt>
    faf0:	subs	r5, r0, #0
    faf4:	bne	fa5c <readstat_parse_por+0xf4>
    faf8:	add	r7, sp, #280	; 0x118
    fafc:	mov	r2, #256	; 0x100
    fb00:	mov	r1, r7
    fb04:	mov	r0, r4
    fb08:	bl	f1d0 <read_bytes>
    fb0c:	cmp	r0, #256	; 0x100
    fb10:	bne	fac0 <readstat_parse_por+0x158>
    fb14:	ldrb	r3, [sp, #406]	; 0x196
    fb18:	strb	r3, [r4, #48]	; 0x30
    fb1c:	ldr	r3, [pc, #1308]	; 10040 <readstat_parse_por+0x6d8>
    fb20:	ldr	r2, [r6, r3]
    fb24:	ldrsb	r1, [r2], #1
    fb28:	cmp	r1, #0
    fb2c:	beq	fb40 <readstat_parse_por+0x1d8>
    fb30:	ldrb	r3, [r7, r5]
    fb34:	add	r3, r4, r3, lsl #1
    fb38:	strh	r1, [r3, #94]	; 0x5e
    fb3c:	b	fb58 <readstat_parse_por+0x1f0>
    fb40:	ldr	r1, [pc, #1276]	; 10044 <readstat_parse_por+0x6dc>
    fb44:	lsl	r3, r5, #1
    fb48:	ldr	r1, [r6, r1]
    fb4c:	ldrh	r1, [r3, r1]
    fb50:	cmp	r1, #0
    fb54:	bne	fb30 <readstat_parse_por+0x1c8>
    fb58:	add	r5, r5, #1
    fb5c:	cmp	r5, #256	; 0x100
    fb60:	bne	fb24 <readstat_parse_por+0x1bc>
    fb64:	ldr	r2, [pc, #1240]	; 10044 <readstat_parse_por+0x6dc>
    fb68:	mov	r0, r4
    fb6c:	ldrb	r3, [sp, #344]	; 0x158
    fb70:	ldr	r2, [r6, r2]
    fb74:	add	r3, r4, r3, lsl #1
    fb78:	ldrh	r2, [r2, #128]	; 0x80
    fb7c:	strh	r2, [r3, #94]	; 0x5e
    fb80:	add	r3, sp, #48	; 0x30
    fb84:	mov	r2, #8
    fb88:	mov	r1, r3
    fb8c:	str	r3, [sp, #16]
    fb90:	bl	f1d0 <read_bytes>
    fb94:	cmp	r0, #8
    fb98:	mov	r5, r0
    fb9c:	bne	fac0 <readstat_parse_por+0x158>
    fba0:	add	r3, r4, #94	; 0x5e
    fba4:	add	sl, sp, #64	; 0x40
    fba8:	sub	r6, sl, #8
    fbac:	mov	r1, r0
    fbb0:	ldr	r0, [sp, #16]
    fbb4:	mov	r2, r6
    fbb8:	str	r3, [sp]
    fbbc:	mov	r3, r5
    fbc0:	bl	4270 <por_utf8_encode@plt>
    fbc4:	cmn	r0, #1
    fbc8:	mov	r2, r0
    fbcc:	bne	fc1c <readstat_parse_por+0x2b4>
    fbd0:	ldr	r3, [r4, #24]
    fbd4:	cmp	r3, #0
    fbd8:	beq	fc14 <readstat_parse_por+0x2ac>
    fbdc:	ldr	r3, [sp, #16]
    fbe0:	mov	r1, #1024	; 0x400
    fbe4:	ldr	r2, [pc, #1116]	; 10048 <readstat_parse_por+0x6e0>
    fbe8:	str	r3, [sp]
    fbec:	mov	r3, r5
    fbf0:	add	r5, sp, #2064	; 0x810
    fbf4:	add	r5, r5, #8
    fbf8:	add	r2, pc, r2
    fbfc:	mov	r0, r5
    fc00:	bl	4294 <snprintf@plt>
    fc04:	mov	r0, r5
    fc08:	ldr	r3, [r4, #24]
    fc0c:	ldr	r1, [r4, #36]	; 0x24
    fc10:	blx	r3
    fc14:	mov	r5, #16
    fc18:	b	fa5c <readstat_parse_por+0xf4>
    fc1c:	ldr	r0, [pc, #1064]	; 1004c <readstat_parse_por+0x6e4>
    fc20:	mov	r1, r6
    fc24:	add	r0, pc, r0
    fc28:	bl	451c <strncmp@plt>
    fc2c:	cmp	r0, #0
    fc30:	beq	fc3c <readstat_parse_por+0x2d4>
    fc34:	mov	r5, #5
    fc38:	b	fa5c <readstat_parse_por+0xf4>
    fc3c:	mvn	r3, #0
    fc40:	mov	r0, r4
    fc44:	str	r3, [r4, #636]	; 0x27c
    fc48:	bl	4024 <read_version_and_timestamp@plt>
    fc4c:	subs	r5, r0, #0
    fc50:	bne	fa5c <readstat_parse_por+0xf4>
    fc54:	vldr	d8, [pc, #980]	; 10030 <readstat_parse_por+0x6c8>
    fc58:	add	r7, sp, #2080	; 0x820
    fc5c:	mov	r2, #1
    fc60:	sub	r6, r7, #8
    fc64:	mov	r0, r4
    fc68:	mov	r1, r6
    fc6c:	bl	f1d0 <read_bytes>
    fc70:	cmp	r0, #1
    fc74:	bne	fc34 <readstat_parse_por+0x2cc>
    fc78:	ldrb	r3, [sp, #2072]	; 0x818
    fc7c:	add	r3, r4, r3, lsl #1
    fc80:	ldrh	r3, [r3, #94]	; 0x5e
    fc84:	sub	r3, r3, #49	; 0x31
    fc88:	cmp	r3, #21
    fc8c:	addls	pc, pc, r3, lsl #2
    fc90:	b	fc34 <readstat_parse_por+0x2cc>
    fc94:	b	fcec <readstat_parse_por+0x384>
    fc98:	b	fcec <readstat_parse_por+0x384>
    fc9c:	b	fcec <readstat_parse_por+0x384>
    fca0:	b	fd0c <readstat_parse_por+0x3a4>
    fca4:	b	fde8 <readstat_parse_por+0x480>
    fca8:	b	fe14 <readstat_parse_por+0x4ac>
    fcac:	b	fe20 <readstat_parse_por+0x4b8>
    fcb0:	b	ff40 <readstat_parse_por+0x5d8>
    fcb4:	b	10088 <readstat_parse_por+0x720>
    fcb8:	b	fc34 <readstat_parse_por+0x2cc>
    fcbc:	b	fc34 <readstat_parse_por+0x2cc>
    fcc0:	b	fc34 <readstat_parse_por+0x2cc>
    fcc4:	b	fc34 <readstat_parse_por+0x2cc>
    fcc8:	b	fc34 <readstat_parse_por+0x2cc>
    fccc:	b	fc34 <readstat_parse_por+0x2cc>
    fcd0:	b	fc34 <readstat_parse_por+0x2cc>
    fcd4:	b	100f4 <readstat_parse_por+0x78c>
    fcd8:	b	ffc4 <readstat_parse_por+0x65c>
    fcdc:	b	10174 <readstat_parse_por+0x80c>
    fce0:	b	101fc <readstat_parse_por+0x894>
    fce4:	b	103ac <readstat_parse_por+0xa44>
    fce8:	b	10424 <readstat_parse_por+0xabc>
    fcec:	mov	r2, #256	; 0x100
    fcf0:	add	r1, sp, #536	; 0x218
    fcf4:	mov	r0, r4
    fcf8:	bl	f654 <read_string>
    fcfc:	cmp	r0, #0
    fd00:	mov	r5, r0
    fd04:	beq	fc58 <readstat_parse_por+0x2f0>
    fd08:	b	fa5c <readstat_parse_por+0xf4>
    fd0c:	ldr	r3, [r4, #632]	; 0x278
    fd10:	cmp	r3, #0
    fd14:	bne	fc34 <readstat_parse_por+0x2cc>
    fd18:	add	r2, sp, #1040	; 0x410
    fd1c:	ldr	r1, [pc, #820]	; 10058 <readstat_parse_por+0x6f0>
    fd20:	mov	r0, r4
    fd24:	add	r2, r2, #8
    fd28:	bl	f684 <read_integer_in_range.constprop.1>
    fd2c:	subs	r5, r0, #0
    fd30:	bne	fa5c <readstat_parse_por+0xf4>
    fd34:	ldr	r0, [sp, #1048]	; 0x418
    fd38:	mov	r1, #4
    fd3c:	str	r0, [r4, #632]	; 0x278
    fd40:	bl	3fdc <readstat_calloc@plt>
    fd44:	mov	r1, #280	; 0x118
    fd48:	str	r0, [r4, #648]	; 0x288
    fd4c:	ldr	r0, [r4, #632]	; 0x278
    fd50:	bl	3fdc <readstat_calloc@plt>
    fd54:	ldr	r3, [r4, #648]	; 0x288
    fd58:	str	r0, [r4, #652]	; 0x28c
    fd5c:	cmp	r3, #0
    fd60:	beq	fde0 <readstat_parse_por+0x478>
    fd64:	cmp	r0, #0
    fd68:	beq	fde0 <readstat_parse_por+0x478>
    fd6c:	ldr	r8, [r4]
    fd70:	cmp	r8, #0
    fd74:	beq	fc58 <readstat_parse_por+0x2f0>
    fd78:	add	r0, sp, #2096	; 0x830
    fd7c:	mov	r2, #24
    fd80:	mov	r1, r5
    fd84:	add	r0, r0, #8
    fd88:	bl	42b8 <memset@plt>
    fd8c:	mvn	r2, #0
    fd90:	mvn	r3, #0
    fd94:	ldr	r1, [r4, #36]	; 0x24
    fd98:	mov	r0, r6
    fd9c:	strd	r2, [r7, #-8]
    fda0:	ldr	r2, [r4, #632]	; 0x278
    fda4:	asr	r3, r2, #31
    fda8:	strd	r2, [r7]
    fdac:	ldr	r3, [r4, #56]	; 0x38
    fdb0:	ldr	r2, [r4, #60]	; 0x3c
    fdb4:	str	r3, [sp, #2088]	; 0x828
    fdb8:	str	r3, [sp, #2092]	; 0x82c
    fdbc:	asr	r3, r2, #31
    fdc0:	strd	r2, [r7, #16]
    fdc4:	ldr	r3, [sp, #28]
    fdc8:	str	r3, [sp, #2116]	; 0x844
    fdcc:	blx	r8
    fdd0:	cmp	r0, #0
    fdd4:	beq	fc58 <readstat_parse_por+0x2f0>
    fdd8:	mov	r5, #4
    fddc:	b	fa5c <readstat_parse_por+0xf4>
    fde0:	mov	r5, #3
    fde4:	b	fa5c <readstat_parse_por+0xf4>
    fde8:	mov	r3, #0
    fdec:	mov	r2, r6
    fdf0:	mov	r1, #100	; 0x64
    fdf4:	mov	r0, r4
    fdf8:	str	r3, [sp, #2072]	; 0x818
    fdfc:	bl	f684 <read_integer_in_range.constprop.1>
    fe00:	subs	r5, r0, #0
    fe04:	bne	fa5c <readstat_parse_por+0xf4>
    fe08:	ldr	r3, [sp, #2072]	; 0x818
    fe0c:	str	r3, [r4, #608]	; 0x260
    fe10:	b	fc58 <readstat_parse_por+0x2f0>
    fe14:	mov	r2, #9
    fe18:	add	r1, r4, #64	; 0x40
    fe1c:	b	fcf4 <readstat_parse_por+0x38c>
    fe20:	ldr	r2, [r4, #632]	; 0x278
    fe24:	ldr	r9, [r4, #636]	; 0x27c
    fe28:	add	r3, r9, #1
    fe2c:	cmp	r3, r2
    fe30:	str	r3, [r4, #636]	; 0x27c
    fe34:	beq	fc34 <readstat_parse_por+0x2cc>
    fe38:	mov	r9, #280	; 0x118
    fe3c:	add	r8, sp, #1040	; 0x410
    fe40:	ldr	r1, [pc, #528]	; 10058 <readstat_parse_por+0x6f0>
    fe44:	add	r8, r8, #8
    fe48:	mov	r0, r4
    fe4c:	mul	r9, r9, r3
    fe50:	ldr	r3, [r4, #652]	; 0x28c
    fe54:	mov	r2, r8
    fe58:	add	r7, r3, r9
    fe5c:	str	r3, [sp, #24]
    fe60:	add	r3, r7, #24
    fe64:	str	r3, [sp, #2072]	; 0x818
    fe68:	add	r3, r7, #36	; 0x24
    fe6c:	str	r3, [sp, #2076]	; 0x81c
    fe70:	mvn	r3, #0
    fe74:	str	r3, [r7, #4]
    fe78:	bl	f684 <read_integer_in_range.constprop.1>
    fe7c:	subs	r5, r0, #0
    fe80:	bne	fa5c <readstat_parse_por+0xf4>
    fe84:	ldr	r3, [sp, #1048]	; 0x418
    fe88:	mov	r2, #9
    fe8c:	mov	r0, r4
    fe90:	cmp	r3, #0
    fe94:	str	r3, [r7, #16]
    fe98:	ldr	r3, [sp, #24]
    fe9c:	moveq	r5, #5
    fea0:	str	r5, [r3, r9]
    fea4:	add	r9, r7, #187	; 0xbb
    fea8:	mov	r1, r9
    feac:	bl	f654 <read_string>
    feb0:	subs	r5, r0, #0
    feb4:	bne	fa5c <readstat_parse_por+0xf4>
    feb8:	mov	r0, r9
    febc:	mov	r1, r7
    fec0:	ldr	r2, [r4, #656]	; 0x290
    fec4:	mov	r9, r5
    fec8:	bl	4510 <ck_str_hash_insert@plt>
    fecc:	mov	r2, r8
    fed0:	mov	r1, #120	; 0x78
    fed4:	ldr	r7, [r6], #4
    fed8:	mov	r0, r4
    fedc:	bl	f684 <read_integer_in_range.constprop.1>
    fee0:	subs	r5, r0, #0
    fee4:	bne	fa5c <readstat_parse_por+0xf4>
    fee8:	ldr	r3, [sp, #1048]	; 0x418
    feec:	mov	r2, r8
    fef0:	movw	r1, #20000	; 0x4e20
    fef4:	mov	r0, r4
    fef8:	str	r3, [r7]
    fefc:	bl	f684 <read_integer_in_range.constprop.1>
    ff00:	subs	r5, r0, #0
    ff04:	bne	fa5c <readstat_parse_por+0xf4>
    ff08:	ldr	r3, [sp, #1048]	; 0x418
    ff0c:	mov	r2, r8
    ff10:	mov	r1, #100	; 0x64
    ff14:	mov	r0, r4
    ff18:	str	r3, [r7, #4]
    ff1c:	bl	f684 <read_integer_in_range.constprop.1>
    ff20:	subs	r5, r0, #0
    ff24:	bne	fa5c <readstat_parse_por+0xf4>
    ff28:	ldr	r3, [sp, #1048]	; 0x418
    ff2c:	cmp	r9, #1
    ff30:	str	r3, [r7, #8]
    ff34:	beq	fc58 <readstat_parse_por+0x2f0>
    ff38:	mov	r9, #1
    ff3c:	b	fecc <readstat_parse_por+0x564>
    ff40:	ldr	r2, [r4, #636]	; 0x27c
    ff44:	cmp	r2, #0
    ff48:	blt	fc34 <readstat_parse_por+0x2cc>
    ff4c:	ldr	r3, [r4, #632]	; 0x278
    ff50:	cmp	r2, r3
    ff54:	bge	fc34 <readstat_parse_por+0x2cc>
    ff58:	mov	r3, #280	; 0x118
    ff5c:	mul	r3, r3, r2
    ff60:	ldr	r2, [r4, #652]	; 0x28c
    ff64:	add	r6, r2, r3
    ff68:	ldr	r3, [r2, r3]
    ff6c:	ldr	r1, [r6, #52]	; 0x34
    ff70:	cmp	r3, #5
    ff74:	bne	ffa8 <readstat_parse_por+0x640>
    ff78:	add	r1, r1, #8
    ff7c:	mov	r0, r4
    ff80:	add	r1, r6, r1, lsl #3
    ff84:	bl	f49c <read_double>
    ff88:	subs	r5, r0, #0
    ff8c:	bne	fa5c <readstat_parse_por+0xf4>
    ff90:	ldr	r3, [r6, #52]	; 0x34
    ff94:	cmp	r3, #2
    ff98:	bgt	fc34 <readstat_parse_por+0x2cc>
    ff9c:	add	r3, r3, #1
    ffa0:	str	r3, [r6, #52]	; 0x34
    ffa4:	b	fc58 <readstat_parse_por+0x2f0>
    ffa8:	add	r1, r1, r1, lsl #5
    ffac:	mov	r2, #33	; 0x21
    ffb0:	mov	r0, r4
    ffb4:	add	r1, r1, #88	; 0x58
    ffb8:	add	r1, r6, r1
    ffbc:	bl	f654 <read_string>
    ffc0:	b	ff88 <readstat_parse_por+0x620>
    ffc4:	ldr	r3, [r4, #636]	; 0x27c
    ffc8:	cmp	r3, #0
    ffcc:	blt	fc34 <readstat_parse_por+0x2cc>
    ffd0:	ldr	r2, [r4, #632]	; 0x278
    ffd4:	cmp	r3, r2
    ffd8:	beq	fc34 <readstat_parse_por+0x2cc>
    ffdc:	mov	r2, #280	; 0x118
    ffe0:	mov	r1, #1
    ffe4:	mul	r3, r2, r3
    ffe8:	ldr	r2, [r4, #652]	; 0x28c
    ffec:	add	r6, r2, r3
    fff0:	ldr	r3, [r2, r3]
    fff4:	str	r1, [r6, #56]	; 0x38
    fff8:	mov	r1, #2
    fffc:	str	r1, [r6, #52]	; 0x34
   10000:	cmp	r3, #5
   10004:	bne	10064 <readstat_parse_por+0x6fc>
   10008:	add	r1, r6, #64	; 0x40
   1000c:	mov	r0, r4
   10010:	bl	f49c <read_double>
   10014:	subs	r5, r0, #0
   10018:	bne	fa5c <readstat_parse_por+0xf4>
   1001c:	add	r1, r6, #72	; 0x48
   10020:	mov	r0, r4
   10024:	bl	f49c <read_double>
   10028:	b	fcfc <readstat_parse_por+0x394>
   1002c:	nop	{0}
   10030:	.word	0x00000000
   10034:	.word	0x7ff00000
   10038:	.word	0x00030658
   1003c:	.word	0x00011211
   10040:	.word	0x00000308
   10044:	.word	0x000002fc
   10048:	.word	0x0001172c
   1004c:	.word	0x00011724
   10050:	.word	0xfff00000
   10054:	.word	0x00011103
   10058:	.word	0x000f4240
   1005c:	.word	0x00010de9
   10060:	.word	0x00010ced
   10064:	mov	r2, #33	; 0x21
   10068:	add	r1, r6, #88	; 0x58
   1006c:	mov	r0, r4
   10070:	bl	f654 <read_string>
   10074:	subs	r5, r0, #0
   10078:	bne	fa5c <readstat_parse_por+0xf4>
   1007c:	mov	r2, #33	; 0x21
   10080:	add	r1, r6, #121	; 0x79
   10084:	b	fcf4 <readstat_parse_por+0x38c>
   10088:	ldr	r3, [r4, #636]	; 0x27c
   1008c:	cmp	r3, #0
   10090:	blt	fc34 <readstat_parse_por+0x2cc>
   10094:	ldr	r2, [r4, #632]	; 0x278
   10098:	cmp	r3, r2
   1009c:	beq	fc34 <readstat_parse_por+0x2cc>
   100a0:	mov	r2, #280	; 0x118
   100a4:	mov	r0, #1
   100a8:	mul	r3, r2, r3
   100ac:	ldr	r2, [r4, #652]	; 0x28c
   100b0:	add	r1, r2, r3
   100b4:	ldr	r3, [r2, r3]
   100b8:	str	r0, [r1, #56]	; 0x38
   100bc:	mov	r0, #2
   100c0:	str	r0, [r1, #52]	; 0x34
   100c4:	cmp	r3, #5
   100c8:	bne	100e0 <readstat_parse_por+0x778>
   100cc:	ldr	r3, [pc, #-132]	; 10050 <readstat_parse_por+0x6e8>
   100d0:	mov	r2, #0
   100d4:	add	r1, r1, #72	; 0x48
   100d8:	strd	r2, [r1, #-8]
   100dc:	b	10020 <readstat_parse_por+0x6b8>
   100e0:	mov	r3, #0
   100e4:	mov	r2, #33	; 0x21
   100e8:	add	r1, r1, #121	; 0x79
   100ec:	strb	r3, [r1, #-33]	; 0xffffffdf
   100f0:	b	fcf4 <readstat_parse_por+0x38c>
   100f4:	ldr	r3, [r4, #636]	; 0x27c
   100f8:	cmp	r3, #0
   100fc:	blt	fc34 <readstat_parse_por+0x2cc>
   10100:	ldr	r2, [r4, #632]	; 0x278
   10104:	cmp	r3, r2
   10108:	beq	fc34 <readstat_parse_por+0x2cc>
   1010c:	mov	r2, #280	; 0x118
   10110:	mov	r1, #1
   10114:	mul	r3, r2, r3
   10118:	ldr	r2, [r4, #652]	; 0x28c
   1011c:	add	r6, r2, r3
   10120:	ldr	r3, [r2, r3]
   10124:	str	r1, [r6, #56]	; 0x38
   10128:	mov	r1, #2
   1012c:	str	r1, [r6, #52]	; 0x34
   10130:	cmp	r3, #5
   10134:	bne	10154 <readstat_parse_por+0x7ec>
   10138:	add	r1, r6, #64	; 0x40
   1013c:	mov	r0, r4
   10140:	bl	f49c <read_double>
   10144:	subs	r5, r0, #0
   10148:	bne	fa5c <readstat_parse_por+0xf4>
   1014c:	vstr	d8, [r6, #72]	; 0x48
   10150:	b	fc58 <readstat_parse_por+0x2f0>
   10154:	mov	r2, #33	; 0x21
   10158:	add	r1, r6, #88	; 0x58
   1015c:	mov	r0, r4
   10160:	bl	f654 <read_string>
   10164:	subs	r5, r0, #0
   10168:	bne	fa5c <readstat_parse_por+0xf4>
   1016c:	strb	r5, [r6, #121]	; 0x79
   10170:	b	fc58 <readstat_parse_por+0x2f0>
   10174:	ldr	r7, [r4, #636]	; 0x27c
   10178:	cmp	r7, #0
   1017c:	blt	fc34 <readstat_parse_por+0x2cc>
   10180:	ldr	r3, [r4, #632]	; 0x278
   10184:	cmp	r7, r3
   10188:	beq	fc34 <readstat_parse_por+0x2cc>
   1018c:	mov	r2, #256	; 0x100
   10190:	mov	r1, r6
   10194:	ldr	r8, [r4, #652]	; 0x28c
   10198:	mov	r0, r4
   1019c:	bl	f654 <read_string>
   101a0:	subs	r5, r0, #0
   101a4:	bne	fa5c <readstat_parse_por+0xf4>
   101a8:	mov	r5, #280	; 0x118
   101ac:	mov	r0, r6
   101b0:	bl	421c <strlen@plt>
   101b4:	mla	r5, r5, r7, r8
   101b8:	lsl	r1, r0, #2
   101bc:	add	r1, r1, #1
   101c0:	ldr	r0, [r5, #264]	; 0x108
   101c4:	bl	400c <realloc@plt>
   101c8:	mov	r7, r0
   101cc:	mov	r0, r6
   101d0:	str	r7, [r5, #264]	; 0x108
   101d4:	bl	421c <strlen@plt>
   101d8:	ldr	r2, [r4, #612]	; 0x264
   101dc:	lsl	r1, r0, #2
   101e0:	mov	r3, r0
   101e4:	mov	r0, r7
   101e8:	add	r1, r1, #1
   101ec:	str	r2, [sp]
   101f0:	mov	r2, r6
   101f4:	bl	424c <readstat_convert@plt>
   101f8:	b	fcfc <readstat_parse_por+0x394>
   101fc:	mov	r3, #0
   10200:	ldr	r2, [pc, #-436]	; 10054 <readstat_parse_por+0x6ec>
   10204:	mov	r1, #256	; 0x100
   10208:	str	r3, [sp, #32]
   1020c:	str	r3, [sp, #36]	; 0x24
   10210:	add	r3, sp, #1040	; 0x410
   10214:	add	r3, r3, #8
   10218:	add	r2, pc, r2
   1021c:	str	r3, [sp, #24]
   10220:	ldr	r0, [sp, #24]
   10224:	ldr	r3, [r4, #624]	; 0x270
   10228:	bl	4294 <snprintf@plt>
   1022c:	add	r2, sp, #32
   10230:	ldr	r1, [pc, #-480]	; 10058 <readstat_parse_por+0x6f0>
   10234:	mov	r0, r4
   10238:	bl	f684 <read_integer_in_range.constprop.1>
   1023c:	subs	r5, r0, #0
   10240:	bne	fa5c <readstat_parse_por+0xf4>
   10244:	mov	r8, r5
   10248:	mov	r9, #5
   1024c:	add	r7, sp, #792	; 0x318
   10250:	ldr	r3, [sp, #32]
   10254:	cmp	r8, r3
   10258:	blt	1029c <readstat_parse_por+0x934>
   1025c:	ldr	r3, [sp, #16]
   10260:	mov	r0, r4
   10264:	ldr	r1, [pc, #-532]	; 10058 <readstat_parse_por+0x6f0>
   10268:	sub	r2, r3, #12
   1026c:	bl	f684 <read_integer_in_range.constprop.1>
   10270:	subs	r5, r0, #0
   10274:	bne	fa5c <readstat_parse_por+0xf4>
   10278:	mov	r7, r5
   1027c:	add	r8, sp, #792	; 0x318
   10280:	ldr	r3, [sp, #36]	; 0x24
   10284:	cmp	r7, r3
   10288:	blt	102d8 <readstat_parse_por+0x970>
   1028c:	ldr	r3, [r4, #624]	; 0x270
   10290:	add	r3, r3, #1
   10294:	str	r3, [r4, #624]	; 0x270
   10298:	b	fc58 <readstat_parse_por+0x2f0>
   1029c:	mov	r2, #256	; 0x100
   102a0:	mov	r1, r7
   102a4:	mov	r0, r4
   102a8:	bl	f654 <read_string>
   102ac:	subs	r5, r0, #0
   102b0:	bne	fa5c <readstat_parse_por+0xf4>
   102b4:	mov	r0, r7
   102b8:	ldr	r1, [r4, #656]	; 0x290
   102bc:	add	r8, r8, #1
   102c0:	bl	3fe8 <ck_str_hash_lookup@plt>
   102c4:	cmp	r0, #0
   102c8:	ldrne	r3, [r4, #624]	; 0x270
   102cc:	ldrne	r9, [r0]
   102d0:	strne	r3, [r0, #4]
   102d4:	b	10250 <readstat_parse_por+0x8e8>
   102d8:	mov	r2, #0
   102dc:	mov	r3, #0
   102e0:	cmp	r9, #0
   102e4:	strd	r2, [sl]
   102e8:	strd	r2, [sl, #8]
   102ec:	str	r9, [sp, #72]	; 0x48
   102f0:	bne	1033c <readstat_parse_por+0x9d4>
   102f4:	mov	r2, #256	; 0x100
   102f8:	mov	r1, r8
   102fc:	mov	r0, r4
   10300:	bl	f654 <read_string>
   10304:	subs	r5, r0, #0
   10308:	bne	fa5c <readstat_parse_por+0xf4>
   1030c:	mov	r2, #256	; 0x100
   10310:	mov	r1, r6
   10314:	mov	r0, r4
   10318:	bl	f654 <read_string>
   1031c:	subs	r5, r0, #0
   10320:	bne	fa5c <readstat_parse_por+0xf4>
   10324:	str	r8, [sp, #64]	; 0x40
   10328:	ldr	r5, [r4, #20]
   1032c:	cmp	r5, #0
   10330:	bne	1037c <readstat_parse_por+0xa14>
   10334:	add	r7, r7, #1
   10338:	b	10280 <readstat_parse_por+0x918>
   1033c:	ldr	r3, [sp, #16]
   10340:	mov	r0, r4
   10344:	sub	r1, r3, #8
   10348:	bl	f49c <read_double>
   1034c:	subs	r5, r0, #0
   10350:	bne	fa5c <readstat_parse_por+0xf4>
   10354:	mov	r2, #256	; 0x100
   10358:	mov	r1, r6
   1035c:	mov	r0, r4
   10360:	bl	f654 <read_string>
   10364:	subs	r5, r0, #0
   10368:	bne	fa5c <readstat_parse_por+0xf4>
   1036c:	ldr	r3, [sp, #16]
   10370:	ldrd	r2, [r3, #-8]
   10374:	strd	r2, [sl]
   10378:	b	10328 <readstat_parse_por+0x9c0>
   1037c:	ldr	r3, [r4, #36]	; 0x24
   10380:	str	r6, [sp, #8]
   10384:	str	r3, [sp, #12]
   10388:	ldr	r3, [sp, #20]
   1038c:	ldmdb	r3, {r0, r1}
   10390:	stm	sp, {r0, r1}
   10394:	ldm	sl, {r2, r3}
   10398:	ldr	r0, [sp, #24]
   1039c:	blx	r5
   103a0:	cmp	r0, #0
   103a4:	beq	10334 <readstat_parse_por+0x9cc>
   103a8:	b	fdd8 <readstat_parse_por+0x470>
   103ac:	mov	r3, #0
   103b0:	add	r2, sp, #1040	; 0x410
   103b4:	ldr	r1, [pc, #-868]	; 10058 <readstat_parse_por+0x6f0>
   103b8:	add	r2, r2, #8
   103bc:	mov	r0, r4
   103c0:	str	r3, [sp, #1048]	; 0x418
   103c4:	bl	f684 <read_integer_in_range.constprop.1>
   103c8:	subs	r5, r0, #0
   103cc:	bne	fa5c <readstat_parse_por+0xf4>
   103d0:	ldr	r3, [sp, #1048]	; 0x418
   103d4:	cmp	r5, r3
   103d8:	bge	fc58 <readstat_parse_por+0x2f0>
   103dc:	mov	r2, #256	; 0x100
   103e0:	mov	r1, r6
   103e4:	mov	r0, r4
   103e8:	bl	f654 <read_string>
   103ec:	cmp	r0, #0
   103f0:	bne	fcfc <readstat_parse_por+0x394>
   103f4:	ldr	r3, [r4, #4]
   103f8:	cmp	r3, #0
   103fc:	bne	10408 <readstat_parse_por+0xaa0>
   10400:	add	r5, r5, #1
   10404:	b	103d0 <readstat_parse_por+0xa68>
   10408:	mov	r1, r6
   1040c:	mov	r0, r5
   10410:	ldr	r2, [r4, #36]	; 0x24
   10414:	blx	r3
   10418:	cmp	r0, #0
   1041c:	beq	10400 <readstat_parse_por+0xa98>
   10420:	b	fdd8 <readstat_parse_por+0x470>
   10424:	ldr	r3, [r4, #632]	; 0x278
   10428:	ldr	r2, [r4, #636]	; 0x27c
   1042c:	sub	r3, r3, #1
   10430:	cmp	r2, r3
   10434:	movne	r5, #8
   10438:	bne	fa5c <readstat_parse_por+0xf4>
   1043c:	mov	r0, r4
   10440:	bl	4558 <handle_variables@plt>
   10444:	subs	r5, r0, #0
   10448:	bne	fa5c <readstat_parse_por+0xf4>
   1044c:	ldr	r3, [r4, #16]
   10450:	cmp	r3, #0
   10454:	beq	fa5c <readstat_parse_por+0xf4>
   10458:	ldr	r3, [r4, #632]	; 0x278
   1045c:	cmp	r3, #0
   10460:	beq	fa5c <readstat_parse_por+0xf4>
   10464:	str	r5, [sp, #28]
   10468:	ldr	r3, [sp, #28]
   1046c:	add	r8, sp, #1040	; 0x410
   10470:	mov	r7, #0
   10474:	add	r8, r8, #8
   10478:	str	r3, [sp, #40]	; 0x28
   1047c:	ldr	r3, [r4, #632]	; 0x278
   10480:	cmp	r7, r3
   10484:	blt	104e4 <readstat_parse_por+0xb7c>
   10488:	ldr	r1, [r4, #28]
   1048c:	ldr	r3, [r4, #644]	; 0x284
   10490:	ldr	r0, [r4, #32]
   10494:	ldr	r2, [r4, #36]	; 0x24
   10498:	cmp	r3, #0
   1049c:	ldreq	r3, [r4, #628]	; 0x274
   104a0:	subne	r3, r3, #1
   104a4:	strne	r3, [r4, #644]	; 0x284
   104a8:	addeq	r3, r3, #1
   104ac:	streq	r3, [r4, #628]	; 0x274
   104b0:	ldr	r3, [r4, #44]	; 0x2c
   104b4:	ldr	r5, [r3, #16]
   104b8:	ldr	r3, [r3, #20]
   104bc:	blx	r5
   104c0:	subs	r5, r0, #0
   104c4:	bne	fa5c <readstat_parse_por+0xf4>
   104c8:	ldr	r3, [r4, #640]	; 0x280
   104cc:	cmp	r3, #0
   104d0:	ble	10468 <readstat_parse_por+0xb00>
   104d4:	ldr	r2, [r4, #628]	; 0x274
   104d8:	cmp	r3, r2
   104dc:	bne	10468 <readstat_parse_por+0xb00>
   104e0:	b	fa5c <readstat_parse_por+0xf4>
   104e4:	mov	r3, #280	; 0x118
   104e8:	ldr	r2, [r4, #652]	; 0x28c
   104ec:	mov	r0, #0
   104f0:	mul	r3, r3, r7
   104f4:	ldr	r5, [r2, r3]
   104f8:	add	r1, r2, r3
   104fc:	str	r1, [sp, #24]
   10500:	mov	r1, #0
   10504:	strd	r0, [sl]
   10508:	cmp	r5, #0
   1050c:	strd	r0, [sl, #8]
   10510:	str	r5, [sp, #72]	; 0x48
   10514:	bne	105ec <readstat_parse_por+0xc84>
   10518:	ldr	r3, [sp, #16]
   1051c:	add	r9, sp, #792	; 0x318
   10520:	mov	r2, #256	; 0x100
   10524:	mov	r1, r9
   10528:	mov	r0, r4
   1052c:	sub	r3, r3, #8
   10530:	bl	f4d8 <maybe_read_string>
   10534:	subs	r5, r0, #0
   10538:	beq	1058c <readstat_parse_por+0xc24>
   1053c:	ldr	r3, [r4, #24]
   10540:	cmp	r3, #0
   10544:	beq	fa5c <readstat_parse_por+0xf4>
   10548:	ldr	r3, [r4, #628]	; 0x274
   1054c:	add	r6, sp, #1040	; 0x410
   10550:	mov	r1, #1024	; 0x400
   10554:	add	r6, r6, #8
   10558:	ldr	r2, [pc, #-1284]	; 1005c <readstat_parse_por+0x6f4>
   1055c:	mov	r0, r6
   10560:	add	r3, r3, #1
   10564:	str	r3, [sp]
   10568:	add	r2, pc, r2
   1056c:	ldr	r3, [sp, #24]
   10570:	add	r3, r3, #187	; 0xbb
   10574:	bl	4294 <snprintf@plt>
   10578:	ldr	r3, [r4, #24]
   1057c:	mov	r0, r6
   10580:	ldr	r1, [r4, #36]	; 0x24
   10584:	blx	r3
   10588:	b	fa5c <readstat_parse_por+0xf4>
   1058c:	ldr	r3, [sp, #40]	; 0x28
   10590:	cmp	r3, #0
   10594:	beq	105a8 <readstat_parse_por+0xc40>
   10598:	cmp	r7, #0
   1059c:	moveq	r5, #0
   105a0:	beq	fa5c <readstat_parse_por+0xf4>
   105a4:	b	fc34 <readstat_parse_por+0x2cc>
   105a8:	mov	r0, r9
   105ac:	bl	421c <strlen@plt>
   105b0:	ldr	r3, [r4, #612]	; 0x264
   105b4:	mov	r2, r9
   105b8:	movw	r1, #1025	; 0x401
   105bc:	str	r3, [sp]
   105c0:	mov	r3, r0
   105c4:	mov	r0, r6
   105c8:	bl	424c <readstat_convert@plt>
   105cc:	subs	r5, r0, #0
   105d0:	bne	fa5c <readstat_parse_por+0xf4>
   105d4:	str	r6, [sp, #64]	; 0x40
   105d8:	ldr	r5, [r4, #16]
   105dc:	cmp	r5, #0
   105e0:	bne	106b4 <readstat_parse_por+0xd4c>
   105e4:	add	r7, r7, #1
   105e8:	b	1047c <readstat_parse_por+0xb14>
   105ec:	cmp	r5, #5
   105f0:	bne	105d8 <readstat_parse_por+0xc70>
   105f4:	mov	r2, #1
   105f8:	mov	r1, r8
   105fc:	mov	r0, r4
   10600:	bl	f1d0 <read_bytes>
   10604:	cmp	r0, #1
   10608:	bne	10640 <readstat_parse_por+0xcd8>
   1060c:	ldrb	r2, [sp, #1048]	; 0x418
   10610:	add	r3, r4, r2, lsl #1
   10614:	ldrh	r3, [r3, #94]	; 0x5e
   10618:	cmp	r3, #90	; 0x5a
   1061c:	streq	r0, [sp, #40]	; 0x28
   10620:	beq	10598 <readstat_parse_por+0xc30>
   10624:	ldr	r3, [sp, #28]
   10628:	mov	r1, sl
   1062c:	mov	r0, r4
   10630:	str	r3, [sp, #40]	; 0x28
   10634:	bl	f2cc <read_double_with_peek>
   10638:	subs	r5, r0, #0
   1063c:	beq	10684 <readstat_parse_por+0xd1c>
   10640:	ldr	r3, [r4, #24]
   10644:	cmp	r3, #0
   10648:	beq	fa5c <readstat_parse_por+0xf4>
   1064c:	ldr	r3, [r4, #628]	; 0x274
   10650:	mov	r1, #1024	; 0x400
   10654:	mov	r0, r8
   10658:	ldr	r2, [pc, #-1536]	; 10060 <readstat_parse_por+0x6f8>
   1065c:	add	r3, r3, #1
   10660:	str	r3, [sp]
   10664:	add	r2, pc, r2
   10668:	ldr	r3, [sp, #24]
   1066c:	add	r3, r3, #187	; 0xbb
   10670:	bl	4294 <snprintf@plt>
   10674:	mov	r0, r8
   10678:	ldr	r3, [r4, #24]
   1067c:	ldr	r1, [r4, #36]	; 0x24
   10680:	b	10584 <readstat_parse_por+0xc1c>
   10684:	ldr	r3, [sp, #40]	; 0x28
   10688:	cmp	r3, #0
   1068c:	bne	10598 <readstat_parse_por+0xc30>
   10690:	vldr	d7, [sl]
   10694:	ldrb	r3, [sp, #77]	; 0x4d
   10698:	vcmp.f64	d7, d7
   1069c:	vmrs	APSR_nzcv, fpscr
   106a0:	movvs	r2, #1
   106a4:	movvc	r2, #0
   106a8:	bfi	r3, r2, #0, #1
   106ac:	strb	r3, [sp, #77]	; 0x4d
   106b0:	b	105d8 <readstat_parse_por+0xc70>
   106b4:	ldr	r3, [r4, #648]	; 0x288
   106b8:	ldr	ip, [r3, r7, lsl #2]
   106bc:	ldr	r3, [ip, #2144]	; 0x860
   106c0:	cmp	r3, #0
   106c4:	bne	105e4 <readstat_parse_por+0xc7c>
   106c8:	ldr	r3, [r4, #644]	; 0x284
   106cc:	cmp	r3, #0
   106d0:	bne	105e4 <readstat_parse_por+0xc7c>
   106d4:	ldr	r3, [r4, #36]	; 0x24
   106d8:	str	r3, [sp, #8]
   106dc:	ldr	r3, [sp, #20]
   106e0:	ldmdb	r3, {r0, r1}
   106e4:	stm	sp, {r0, r1}
   106e8:	mov	r1, ip
   106ec:	ldm	sl, {r2, r3}
   106f0:	ldr	r0, [r4, #628]	; 0x274
   106f4:	blx	r5
   106f8:	cmp	r0, #0
   106fc:	beq	105e4 <readstat_parse_por+0xc7c>
   10700:	b	fdd8 <readstat_parse_por+0x470>
   10704:	andeq	r0, r0, r0

00010708 <por_variable_width>:
   10708:	cmp	r0, #0
   1070c:	addeq	r0, r1, #54	; 0x36
   10710:	movne	r0, #54	; 0x36
   10714:	bx	lr

00010718 <por_metadata_ok>:
   10718:	ldr	r0, [r0, #16]
   1071c:	cmp	r0, #0
   10720:	movne	r0, #6
   10724:	bx	lr

00010728 <por_variable_ok>:
   10728:	push	{r4, lr}
   1072c:	bl	4384 <readstat_variable_get_name@plt>
   10730:	mov	r4, r0
   10734:	bl	421c <strlen@plt>
   10738:	sub	r0, r0, #1
   1073c:	cmp	r0, #7
   10740:	bhi	107b4 <por_variable_ok+0x8c>
   10744:	ldr	lr, [pc, #112]	; 107bc <por_variable_ok+0x94>
   10748:	sub	ip, r4, #1
   1074c:	ldrb	r1, [ip, #1]!
   10750:	cmp	r1, #0
   10754:	bne	10770 <por_variable_ok+0x48>
   10758:	ldrb	r3, [r4]
   1075c:	sub	r3, r3, #64	; 0x40
   10760:	cmp	r3, #26
   10764:	movls	r0, #0
   10768:	movhi	r0, #25
   1076c:	pop	{r4, pc}
   10770:	sub	r3, r1, #35	; 0x23
   10774:	sub	r0, r1, #64	; 0x40
   10778:	uxtb	r3, r3
   1077c:	cmp	r3, #22
   10780:	mvnls	r3, lr, lsr r3
   10784:	movhi	r3, #1
   10788:	andls	r3, r3, #1
   1078c:	eor	r2, r3, #1
   10790:	cmp	r0, #26
   10794:	movhi	r3, r2
   10798:	orrls	r3, r2, #1
   1079c:	cmp	r3, #0
   107a0:	bne	1074c <por_variable_ok+0x24>
   107a4:	cmp	r1, #95	; 0x5f
   107a8:	beq	1074c <por_variable_ok+0x24>
   107ac:	mov	r0, #26
   107b0:	pop	{r4, pc}
   107b4:	mov	r0, #28
   107b8:	pop	{r4, pc}
   107bc:	.word	0x007fe803

000107c0 <por_write_base30_integer.isra.0>:
   107c0:	push	{r4, r5, r6, r7, r8, lr}
   107c4:	mov	r6, r0
   107c8:	mov	r4, r2
   107cc:	mov	r5, r3
   107d0:	mov	r7, #0
   107d4:	orrs	r3, r4, r5
   107d8:	bne	10800 <por_write_base30_integer.isra.0+0x40>
   107dc:	sub	r2, r6, #1
   107e0:	mov	r3, #0
   107e4:	add	r6, r6, r7
   107e8:	sub	r0, r7, #1
   107ec:	sub	r1, r0, r3
   107f0:	cmp	r3, r1
   107f4:	blt	10858 <por_write_base30_integer.isra.0+0x98>
   107f8:	mov	r0, r7
   107fc:	pop	{r4, r5, r6, r7, r8, pc}
   10800:	mov	r0, r4
   10804:	mov	r1, r5
   10808:	mov	r2, #30
   1080c:	mov	r3, #0
   10810:	bl	201ec <__aeabi_uldivmod>
   10814:	mov	r1, r3
   10818:	uxtb	r3, r2
   1081c:	cmp	r1, #0
   10820:	mov	r0, r4
   10824:	cmpeq	r2, #9
   10828:	mov	r1, r5
   1082c:	addls	r3, r3, #48	; 0x30
   10830:	addhi	r3, r3, #55	; 0x37
   10834:	uxtb	r3, r3
   10838:	mov	r2, #30
   1083c:	strb	r3, [r6, r7]
   10840:	mov	r3, #0
   10844:	add	r7, r7, #1
   10848:	bl	201ec <__aeabi_uldivmod>
   1084c:	mov	r4, r0
   10850:	mov	r5, r1
   10854:	b	107d4 <por_write_base30_integer.isra.0+0x14>
   10858:	ldrb	r1, [r2, #1]!
   1085c:	add	r3, r3, #1
   10860:	ldrb	ip, [r6, #-1]!
   10864:	strb	ip, [r2]
   10868:	strb	r1, [r6]
   1086c:	b	107ec <por_write_base30_integer.isra.0+0x2c>

00010870 <por_write_double_to_buffer.isra.1.constprop.4>:
   10870:	vcmp.f64	d0, d0
   10874:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10878:	mov	r6, r0
   1087c:	vpush	{d8-d9}
   10880:	sub	sp, sp, #12
   10884:	vmrs	APSR_nzcv, fpscr
   10888:	bvc	108ac <por_write_double_to_buffer.isra.1.constprop.4+0x3c>
   1088c:	mov	r3, #42	; 0x2a
   10890:	mov	r0, #2
   10894:	strb	r3, [r6]
   10898:	mov	r3, #46	; 0x2e
   1089c:	strb	r3, [r6, #1]
   108a0:	mov	r3, #0
   108a4:	strb	r3, [r6, r0]
   108a8:	b	10aa4 <por_write_double_to_buffer.isra.1.constprop.4+0x234>
   108ac:	vldr	d7, [pc, #548]	; 10ad8 <por_write_double_to_buffer.isra.1.constprop.4+0x268>
   108b0:	vmov.f64	d9, d0
   108b4:	vabs.f64	d0, d0
   108b8:	vcmp.f64	d0, d7
   108bc:	vmrs	APSR_nzcv, fpscr
   108c0:	ble	1090c <por_write_double_to_buffer.isra.1.constprop.4+0x9c>
   108c4:	vcmpe.f64	d9, #0.0
   108c8:	mov	r2, #49	; 0x31
   108cc:	vmrs	APSR_nzcv, fpscr
   108d0:	movmi	r3, #45	; 0x2d
   108d4:	movmi	r0, #1
   108d8:	movpl	r0, #0
   108dc:	strbmi	r3, [r6]
   108e0:	mov	r3, r6
   108e4:	strb	r2, [r3, r0]!
   108e8:	mov	r2, #43	; 0x2b
   108ec:	add	r0, r0, #5
   108f0:	strb	r2, [r3, #1]
   108f4:	mov	r2, #84	; 0x54
   108f8:	strb	r2, [r3, #2]
   108fc:	strb	r2, [r3, #3]
   10900:	mov	r2, #47	; 0x2f
   10904:	strb	r2, [r3, #4]
   10908:	b	108a0 <por_write_double_to_buffer.isra.1.constprop.4+0x30>
   1090c:	mov	r9, sp
   10910:	mov	r0, r9
   10914:	bl	4198 <modf@plt>
   10918:	ldrd	r0, [sp]
   1091c:	vmov.f64	d8, d0
   10920:	bl	20238 <__aeabi_d2lz>
   10924:	vcmpe.f64	d9, #0.0
   10928:	mov	r4, r0
   1092c:	mov	r5, r1
   10930:	vmrs	APSR_nzcv, fpscr
   10934:	movmi	r3, #45	; 0x2d
   10938:	movmi	r8, #1
   1093c:	movpl	r8, #0
   10940:	strbmi	r3, [r6]
   10944:	orrs	r3, r4, r5
   10948:	add	fp, r6, r8
   1094c:	bne	10a68 <por_write_double_to_buffer.isra.1.constprop.4+0x1f8>
   10950:	vcmp.f64	d8, #0.0
   10954:	mov	r2, #48	; 0x30
   10958:	add	r3, r8, #1
   1095c:	strb	r2, [r6, r8]
   10960:	vmrs	APSR_nzcv, fpscr
   10964:	bne	10a74 <por_write_double_to_buffer.isra.1.constprop.4+0x204>
   10968:	mov	r2, #47	; 0x2f
   1096c:	add	r0, r3, #1
   10970:	strb	r2, [r6, r3]
   10974:	b	108a0 <por_write_double_to_buffer.isra.1.constprop.4+0x30>
   10978:	mov	r0, r4
   1097c:	mov	r1, r5
   10980:	mov	r2, #30
   10984:	mov	r3, #0
   10988:	bl	20118 <__aeabi_ldivmod>
   1098c:	adds	r7, r7, #1
   10990:	mov	r4, r0
   10994:	mov	r5, r1
   10998:	adc	sl, sl, #0
   1099c:	vcmp.f64	d8, #0.0
   109a0:	vmrs	APSR_nzcv, fpscr
   109a4:	moveq	r3, #1
   109a8:	movne	r3, #0
   109ac:	orrs	r2, r4, r5
   109b0:	moveq	r3, #0
   109b4:	cmp	r3, #0
   109b8:	beq	109d8 <por_write_double_to_buffer.isra.1.constprop.4+0x168>
   109bc:	mov	r2, #30
   109c0:	mov	r3, #0
   109c4:	mov	r0, r4
   109c8:	mov	r1, r5
   109cc:	bl	20118 <__aeabi_ldivmod>
   109d0:	orrs	r3, r2, r3
   109d4:	beq	10978 <por_write_double_to_buffer.isra.1.constprop.4+0x108>
   109d8:	mov	r3, r5
   109dc:	mov	r2, r4
   109e0:	mov	r0, fp
   109e4:	mov	r4, r7
   109e8:	bl	107c0 <por_write_base30_integer.isra.0>
   109ec:	vcmp.f64	d8, #0.0
   109f0:	mov	fp, r0
   109f4:	add	r3, r8, r0
   109f8:	mov	r5, sl
   109fc:	vmrs	APSR_nzcv, fpscr
   10a00:	beq	10a3c <por_write_double_to_buffer.isra.1.constprop.4+0x1cc>
   10a04:	vldr	d9, [pc, #212]	; 10ae0 <por_write_double_to_buffer.isra.1.constprop.4+0x270>
   10a08:	mov	r2, #46	; 0x2e
   10a0c:	add	r7, r3, #1
   10a10:	strb	r2, [r6, r3]
   10a14:	vcmp.f64	d8, #0.0
   10a18:	mov	r3, r7
   10a1c:	vmrs	APSR_nzcv, fpscr
   10a20:	movne	r2, #1
   10a24:	moveq	r2, #0
   10a28:	cmp	fp, #49	; 0x31
   10a2c:	movgt	r2, #0
   10a30:	andle	r2, r2, #1
   10a34:	cmp	r2, #0
   10a38:	bne	10a7c <por_write_double_to_buffer.isra.1.constprop.4+0x20c>
   10a3c:	orrs	r2, r4, r5
   10a40:	beq	10968 <por_write_double_to_buffer.isra.1.constprop.4+0xf8>
   10a44:	mov	r2, #43	; 0x2b
   10a48:	add	r7, r3, #1
   10a4c:	add	r0, r6, r7
   10a50:	strb	r2, [r6, r3]
   10a54:	mov	r3, r5
   10a58:	mov	r2, r4
   10a5c:	bl	107c0 <por_write_base30_integer.isra.0>
   10a60:	add	r3, r0, r7
   10a64:	b	10968 <por_write_double_to_buffer.isra.1.constprop.4+0xf8>
   10a68:	mov	r7, #0
   10a6c:	mov	sl, r7
   10a70:	b	1099c <por_write_double_to_buffer.isra.1.constprop.4+0x12c>
   10a74:	mov	fp, #0
   10a78:	b	10a04 <por_write_double_to_buffer.isra.1.constprop.4+0x194>
   10a7c:	mov	r0, r9
   10a80:	vmul.f64	d0, d8, d9
   10a84:	bl	4198 <modf@plt>
   10a88:	ldrd	r0, [sp]
   10a8c:	vmov.f64	d8, d0
   10a90:	bl	20238 <__aeabi_d2lz>
   10a94:	cmp	r0, #0
   10a98:	sbcs	r3, r1, #0
   10a9c:	bge	10ab0 <por_write_double_to_buffer.isra.1.constprop.4+0x240>
   10aa0:	mvn	r0, #0
   10aa4:	add	sp, sp, #12
   10aa8:	vpop	{d8-d9}
   10aac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ab0:	cmp	r0, #10
   10ab4:	uxtb	r3, r0
   10ab8:	sbcs	r2, r1, #0
   10abc:	add	fp, fp, #1
   10ac0:	addlt	r3, r3, #48	; 0x30
   10ac4:	addge	r3, r3, #55	; 0x37
   10ac8:	uxtb	r3, r3
   10acc:	strb	r3, [r6, r7]
   10ad0:	add	r7, r7, #1
   10ad4:	b	10a14 <por_write_double_to_buffer.isra.1.constprop.4+0x1a4>
   10ad8:	.word	0xffffffff
   10adc:	.word	0x7fefffff
   10ae0:	.word	0x00000000
   10ae4:	.word	0x403e0000

00010ae8 <por_write_string_value>:
   10ae8:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   10aec:	mov	r6, r0
   10af0:	mov	r0, r2
   10af4:	mov	r7, r1
   10af8:	mov	r5, r2
   10afc:	bl	421c <strlen@plt>
   10b00:	subs	r4, r0, #0
   10b04:	ldreq	r5, [pc, #84]	; 10b60 <por_write_string_value+0x78>
   10b08:	moveq	r4, #1
   10b0c:	addeq	r5, pc, r5
   10b10:	mov	r0, r7
   10b14:	bl	42e8 <readstat_variable_get_storage_width@plt>
   10b18:	cmp	r4, r0
   10b1c:	movcs	r2, r0
   10b20:	movcc	r2, r4
   10b24:	mov	r0, r6
   10b28:	vmov	s15, r2
   10b2c:	str	r2, [sp, #4]
   10b30:	vcvt.f64.s32	d0, s15
   10b34:	bl	10870 <por_write_double_to_buffer.isra.1.constprop.4>
   10b38:	cmn	r0, #1
   10b3c:	moveq	r0, #13
   10b40:	beq	10b58 <por_write_string_value+0x70>
   10b44:	mov	r1, r5
   10b48:	add	r0, r6, r0
   10b4c:	ldr	r2, [sp, #4]
   10b50:	bl	42dc <strncpy@plt>
   10b54:	mov	r0, #0
   10b58:	add	sp, sp, #12
   10b5c:	pop	{r4, r5, r6, r7, pc}
   10b60:	.word	0x000108cc

00010b64 <por_write_double_value>:
   10b64:	push	{r4, lr}
   10b68:	bl	10870 <por_write_double_to_buffer.isra.1.constprop.4>
   10b6c:	cmn	r0, #1
   10b70:	moveq	r0, #13
   10b74:	movne	r0, #0
   10b78:	pop	{r4, pc}

00010b7c <por_write_missing_number>:
   10b7c:	vldr	d0, [pc, #4]	; 10b88 <por_write_missing_number+0xc>
   10b80:	b	10b64 <por_write_double_value>
   10b84:	nop	{0}
   10b88:	.word	0x00000000
   10b8c:	.word	0x7ff80000

00010b90 <por_write_missing_string>:
   10b90:	vldr	d0, [pc]	; 10b98 <por_write_missing_string+0x8>
   10b94:	b	10b64 <por_write_double_value>
	...

00010ba0 <por_write_float_value>:
   10ba0:	vcvt.f64.f32	d0, s0
   10ba4:	b	10b64 <por_write_double_value>

00010ba8 <por_write_int32_value>:
   10ba8:	vmov	s15, r2
   10bac:	vcvt.f64.s32	d0, s15
   10bb0:	b	10b64 <por_write_double_value>

00010bb4 <por_write_int16_value>:
   10bb4:	vmov	s15, r2
   10bb8:	vcvt.f64.s32	d0, s15
   10bbc:	b	10b64 <por_write_double_value>

00010bc0 <por_write_int8_value>:
   10bc0:	vmov	s15, r2
   10bc4:	vcvt.f64.s32	d0, s15
   10bc8:	b	10b64 <por_write_double_value>

00010bcc <por_write_string_n>:
   10bcc:	push	{r4, r5, r6, r7, r8, lr}
   10bd0:	mov	r8, r1
   10bd4:	sub	sp, sp, #1040	; 0x410
   10bd8:	mov	r6, r0
   10bdc:	mov	r0, r3
   10be0:	mov	r4, r3
   10be4:	mov	r7, r2
   10be8:	bl	412c <malloc@plt>
   10bec:	ldr	r3, [r8, #4]
   10bf0:	mov	r2, r0
   10bf4:	mov	r5, r0
   10bf8:	mov	r1, r4
   10bfc:	mov	r0, r7
   10c00:	str	r3, [sp, #4]
   10c04:	ldr	r3, [r8]
   10c08:	str	r3, [sp]
   10c0c:	mov	r3, r4
   10c10:	bl	43b4 <por_utf8_decode@plt>
   10c14:	cmn	r0, #1
   10c18:	bne	10c64 <por_write_string_n+0x98>
   10c1c:	ldr	r3, [r6, #296]	; 0x128
   10c20:	cmp	r3, #0
   10c24:	beq	10c5c <por_write_string_n+0x90>
   10c28:	ldr	r2, [pc, #116]	; 10ca4 <por_write_string_n+0xd8>
   10c2c:	mov	r3, #0
   10c30:	mov	r1, #1024	; 0x400
   10c34:	str	r4, [sp]
   10c38:	stmib	sp, {r3, r4, r7}
   10c3c:	add	r4, sp, #16
   10c40:	mov	r0, r4
   10c44:	add	r2, pc, r2
   10c48:	bl	4294 <snprintf@plt>
   10c4c:	mov	r0, r4
   10c50:	ldr	r3, [r6, #296]	; 0x128
   10c54:	ldr	r1, [r6, #304]	; 0x130
   10c58:	blx	r3
   10c5c:	mov	r4, #16
   10c60:	b	10c88 <por_write_string_n+0xbc>
   10c64:	ldr	r3, [pc, #60]	; 10ca8 <por_write_string_n+0xdc>
   10c68:	mov	r2, r0
   10c6c:	mov	r1, r5
   10c70:	mov	r0, r6
   10c74:	add	r3, pc, r3
   10c78:	str	r3, [sp]
   10c7c:	mov	r3, #80	; 0x50
   10c80:	bl	4540 <readstat_write_bytes_as_lines@plt>
   10c84:	mov	r4, r0
   10c88:	cmp	r5, #0
   10c8c:	beq	10c98 <por_write_string_n+0xcc>
   10c90:	mov	r0, r5
   10c94:	bl	3ed4 <free@plt>
   10c98:	mov	r0, r4
   10c9c:	add	sp, sp, #1040	; 0x410
   10ca0:	pop	{r4, r5, r6, r7, r8, pc}
   10ca4:	.word	0x00010722
   10ca8:	.word	0x0001071e

00010cac <por_write_tag>:
   10cac:	mov	r3, #0
   10cb0:	push	{r0, r1, r2, lr}
   10cb4:	strb	r2, [sp, #4]
   10cb8:	add	r2, sp, #4
   10cbc:	strb	r3, [sp, #5]
   10cc0:	mov	r3, #1
   10cc4:	bl	10bcc <por_write_string_n>
   10cc8:	add	sp, sp, #12
   10ccc:	pop	{pc}		; (ldr pc, [sp], #4)

00010cd0 <por_write_row>:
   10cd0:	mov	r3, #0
   10cd4:	cmp	r3, r2
   10cd8:	mov	ip, r3
   10cdc:	moveq	r2, r1
   10ce0:	ldreq	r1, [r0, #300]	; 0x12c
   10ce4:	beq	10d1c <por_write_row+0x4c>
   10ce8:	push	{lr}		; (str lr, [sp, #-4]!)
   10cec:	ldrb	lr, [r1, ip]
   10cf0:	cmp	lr, #0
   10cf4:	beq	10d04 <por_write_row+0x34>
   10cf8:	cmp	ip, r3
   10cfc:	strbne	lr, [r1, r3]
   10d00:	add	r3, r3, #1
   10d04:	add	ip, ip, #1
   10d08:	cmp	ip, r2
   10d0c:	bne	10cec <por_write_row+0x1c>
   10d10:	mov	r2, r1
   10d14:	pop	{lr}		; (ldr lr, [sp], #4)
   10d18:	ldr	r1, [r0, #300]	; 0x12c
   10d1c:	b	10bcc <por_write_string_n>

00010d20 <por_emit_header>:
   10d20:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10d24:	add	sl, r0, #88	; 0x58
   10d28:	sub	sp, sp, #464	; 0x1d0
   10d2c:	mov	r4, r0
   10d30:	mov	r0, sl
   10d34:	mov	r8, r1
   10d38:	add	r7, sp, #8
   10d3c:	bl	421c <strlen@plt>
   10d40:	mov	r5, r0
   10d44:	mov	r2, #200	; 0xc8
   10d48:	ldr	r6, [pc, #272]	; 10e60 <por_emit_header+0x140>
   10d4c:	mov	r1, #48	; 0x30
   10d50:	mov	r0, r7
   10d54:	bl	42b8 <memset@plt>
   10d58:	ldr	r3, [pc, #260]	; 10e64 <por_emit_header+0x144>
   10d5c:	add	r9, sp, #48	; 0x30
   10d60:	mov	r2, r9
   10d64:	add	r6, pc, r6
   10d68:	add	r3, pc, r3
   10d6c:	add	lr, r3, #16
   10d70:	ldr	r0, [r3]
   10d74:	mov	ip, r2
   10d78:	add	r3, r3, #8
   10d7c:	ldr	r1, [r3, #-4]
   10d80:	cmp	r3, lr
   10d84:	stmia	ip!, {r0, r1}
   10d88:	mov	r2, ip
   10d8c:	bne	10d70 <por_emit_header+0x50>
   10d90:	ldr	r0, [r3]
   10d94:	mov	r1, sl
   10d98:	mov	r2, #20
   10d9c:	str	r0, [ip]
   10da0:	add	r0, sp, #68	; 0x44
   10da4:	bl	42dc <strncpy@plt>
   10da8:	cmp	r5, #19
   10dac:	bhi	10dc4 <por_emit_header+0xa4>
   10db0:	add	r0, r5, #20
   10db4:	rsb	r2, r5, #20
   10db8:	mov	r1, #32
   10dbc:	add	r0, r9, r0
   10dc0:	bl	42b8 <memset@plt>
   10dc4:	ldr	r3, [pc, #156]	; 10e68 <por_emit_header+0x148>
   10dc8:	mov	r2, #200	; 0xc8
   10dcc:	mov	r1, r7
   10dd0:	mov	r0, r4
   10dd4:	add	r5, sp, #208	; 0xd0
   10dd8:	add	r3, pc, r3
   10ddc:	str	r3, [sp]
   10de0:	mov	r3, #80	; 0x50
   10de4:	bl	4540 <readstat_write_bytes_as_lines@plt>
   10de8:	mov	r2, #256	; 0x100
   10dec:	mov	r1, #48	; 0x30
   10df0:	mov	r0, r5
   10df4:	bl	42b8 <memset@plt>
   10df8:	ldr	r3, [pc, #108]	; 10e6c <por_emit_header+0x14c>
   10dfc:	mov	r2, #0
   10e00:	ldr	r3, [r6, r3]
   10e04:	ldrsb	r1, [r3], #1
   10e08:	cmp	r1, #0
   10e0c:	strbne	r1, [r5, r2]
   10e10:	add	r2, r2, #1
   10e14:	cmp	r2, #256	; 0x100
   10e18:	bne	10e04 <por_emit_header+0xe4>
   10e1c:	ldr	r3, [pc, #76]	; 10e70 <por_emit_header+0x150>
   10e20:	mov	r1, r5
   10e24:	mov	r0, r4
   10e28:	add	r3, pc, r3
   10e2c:	str	r3, [sp]
   10e30:	mov	r3, #80	; 0x50
   10e34:	bl	4540 <readstat_write_bytes_as_lines@plt>
   10e38:	cmp	r0, #0
   10e3c:	bne	10e58 <por_emit_header+0x138>
   10e40:	ldr	r2, [pc, #44]	; 10e74 <por_emit_header+0x154>
   10e44:	mov	r3, #8
   10e48:	mov	r1, r8
   10e4c:	mov	r0, r4
   10e50:	add	r2, pc, r2
   10e54:	bl	10bcc <por_write_string_n>
   10e58:	add	sp, sp, #464	; 0x1d0
   10e5c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10e60:	.word	0x0002f294
   10e64:	.word	0x0001062d
   10e68:	.word	0x000105ba
   10e6c:	.word	0x00000308
   10e70:	.word	0x0001056a
   10e74:	.word	0x000104f8

00010e78 <por_write_double>:
   10e78:	push	{r4, r5, r6, lr}
   10e7c:	mov	r4, r0
   10e80:	mov	r6, r1
   10e84:	vpush	{d8}
   10e88:	sub	sp, sp, #1280	; 0x500
   10e8c:	vmov.f64	d8, d0
   10e90:	sub	sp, sp, #8
   10e94:	add	r5, sp, #8
   10e98:	mov	r0, r5
   10e9c:	bl	10870 <por_write_double_to_buffer.isra.1.constprop.4>
   10ea0:	cmn	r0, #1
   10ea4:	bne	10ef4 <por_write_double+0x7c>
   10ea8:	ldr	r3, [r4, #296]	; 0x128
   10eac:	cmp	r3, #0
   10eb0:	beq	10ee0 <por_write_double+0x68>
   10eb4:	ldr	r2, [pc, #80]	; 10f0c <por_write_double+0x94>
   10eb8:	add	r5, sp, #264	; 0x108
   10ebc:	mov	r1, #1024	; 0x400
   10ec0:	mov	r0, r5
   10ec4:	vstr	d8, [sp]
   10ec8:	add	r2, pc, r2
   10ecc:	bl	4294 <snprintf@plt>
   10ed0:	mov	r0, r5
   10ed4:	ldr	r3, [r4, #296]	; 0x128
   10ed8:	ldr	r1, [r4, #304]	; 0x130
   10edc:	blx	r3
   10ee0:	mov	r0, #13
   10ee4:	add	sp, sp, #1280	; 0x500
   10ee8:	add	sp, sp, #8
   10eec:	vpop	{d8}
   10ef0:	pop	{r4, r5, r6, pc}
   10ef4:	mov	r3, r0
   10ef8:	mov	r2, r5
   10efc:	mov	r1, r6
   10f00:	mov	r0, r4
   10f04:	bl	10bcc <por_write_string_n>
   10f08:	b	10ee4 <por_write_double+0x6c>
   10f0c:	.word	0x000104e2

00010f10 <por_emit_format>:
   10f10:	vldr	s15, [r2]
   10f14:	push	{r4, r5, r6, lr}
   10f18:	mov	r5, r0
   10f1c:	mov	r6, r1
   10f20:	mov	r4, r2
   10f24:	vcvt.f64.s32	d0, s15
   10f28:	bl	10e78 <por_write_double>
   10f2c:	cmp	r0, #0
   10f30:	popne	{r4, r5, r6, pc}
   10f34:	mov	r1, r6
   10f38:	mov	r0, r5
   10f3c:	vldr	s15, [r4, #4]
   10f40:	vcvt.f64.s32	d0, s15
   10f44:	bl	10e78 <por_write_double>
   10f48:	cmp	r0, #0
   10f4c:	popne	{r4, r5, r6, pc}
   10f50:	mov	r1, r6
   10f54:	mov	r0, r5
   10f58:	vldr	s0, [r4, #8]
   10f5c:	pop	{r4, r5, r6, lr}
   10f60:	vcvt.f64.s32	d0, s0
   10f64:	b	10e78 <por_write_double>

00010f68 <por_write_string_field_n>:
   10f68:	vmov	s15, r3
   10f6c:	push	{r0, r1, r4, r5, r6, lr}
   10f70:	mov	r4, r0
   10f74:	mov	r5, r1
   10f78:	mov	r6, r2
   10f7c:	str	r3, [sp, #4]
   10f80:	vcvt.f64.u32	d0, s15
   10f84:	bl	10e78 <por_write_double>
   10f88:	cmp	r0, #0
   10f8c:	bne	10fac <por_write_string_field_n+0x44>
   10f90:	ldr	r3, [sp, #4]
   10f94:	mov	r2, r6
   10f98:	mov	r1, r5
   10f9c:	mov	r0, r4
   10fa0:	add	sp, sp, #8
   10fa4:	pop	{r4, r5, r6, lr}
   10fa8:	b	10bcc <por_write_string_n>
   10fac:	add	sp, sp, #8
   10fb0:	pop	{r4, r5, r6, pc}

00010fb4 <por_write_string_field>:
   10fb4:	push	{r4, r5, r6, lr}
   10fb8:	mov	r5, r0
   10fbc:	mov	r0, r2
   10fc0:	mov	r6, r1
   10fc4:	mov	r4, r2
   10fc8:	bl	421c <strlen@plt>
   10fcc:	mov	r3, r0
   10fd0:	mov	r2, r4
   10fd4:	mov	r1, r6
   10fd8:	mov	r0, r5
   10fdc:	pop	{r4, r5, r6, lr}
   10fe0:	b	10f68 <por_write_string_field_n>

00010fe4 <por_begin_data>:
   10fe4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10fe8:	mov	r1, #8
   10fec:	mov	r4, r0
   10ff0:	mov	r0, #1
   10ff4:	vpush	{d8-d11}
   10ff8:	sub	sp, sp, #76	; 0x4c
   10ffc:	ldr	r8, [pc, #1564]	; 11620 <por_begin_data+0x63c>
   11000:	bl	3d6c <calloc@plt>
   11004:	ldr	r3, [pc, #1560]	; 11624 <por_begin_data+0x640>
   11008:	mov	r5, r0
   1100c:	mov	r0, #0
   11010:	add	r8, pc, r8
   11014:	ldr	r7, [r8, r3]
   11018:	mov	r3, r0
   1101c:	mov	r1, r7
   11020:	ldrh	r2, [r1], #2
   11024:	add	r3, r3, #1
   11028:	cmp	r2, r0
   1102c:	movcs	r0, r2
   11030:	cmp	r3, #256	; 0x100
   11034:	bne	11020 <por_begin_data+0x3c>
   11038:	add	r6, r0, #1
   1103c:	mov	r0, r6
   11040:	bl	412c <malloc@plt>
   11044:	ldr	r3, [pc, #1500]	; 11628 <por_begin_data+0x644>
   11048:	stm	r5, {r0, r6}
   1104c:	ldr	r2, [r8, r3]
   11050:	mov	r3, #0
   11054:	add	r3, r3, #1
   11058:	ldrh	r1, [r7], #2
   1105c:	cmp	r1, #0
   11060:	ldrbne	ip, [r2]
   11064:	ldrne	r0, [r5]
   11068:	strbne	ip, [r0, r1]
   1106c:	ldrsb	r1, [r2], #1
   11070:	cmp	r1, #0
   11074:	ldrne	r0, [r5]
   11078:	strbne	r1, [r0, r1]
   1107c:	cmp	r3, #256	; 0x100
   11080:	bne	11054 <por_begin_data+0x70>
   11084:	mov	r1, r5
   11088:	mov	r0, r4
   1108c:	bl	10d20 <por_emit_header>
   11090:	subs	fp, r0, #0
   11094:	bne	115e0 <por_begin_data+0x5fc>
   11098:	add	r0, r4, #20
   1109c:	bl	4180 <localtime@plt>
   110a0:	subs	r9, r0, #0
   110a4:	moveq	fp, #39	; 0x27
   110a8:	beq	115e0 <por_begin_data+0x5fc>
   110ac:	mov	r2, #65	; 0x41
   110b0:	mov	r1, r5
   110b4:	mov	r0, r4
   110b8:	bl	10cac <por_write_tag>
   110bc:	subs	fp, r0, #0
   110c0:	bne	115e0 <por_begin_data+0x5fc>
   110c4:	ldr	r0, [r9, #12]
   110c8:	mov	r8, #100	; 0x64
   110cc:	movw	r3, #10000	; 0x2710
   110d0:	add	r6, sp, #56	; 0x38
   110d4:	ldr	r2, [r9, #20]
   110d8:	udiv	r1, r0, r8
   110dc:	add	r2, r2, #1888	; 0x760
   110e0:	add	r2, r2, #12
   110e4:	udiv	ip, r2, r3
   110e8:	mls	r1, r8, r1, r0
   110ec:	str	r1, [sp, #4]
   110f0:	ldr	r1, [r9, #16]
   110f4:	mls	r3, r3, ip, r2
   110f8:	ldr	r2, [pc, #1324]	; 1162c <por_begin_data+0x648>
   110fc:	add	r1, r1, #1
   11100:	udiv	r0, r1, r8
   11104:	add	r2, pc, r2
   11108:	mls	r1, r8, r0, r1
   1110c:	mov	r0, r6
   11110:	str	r1, [sp]
   11114:	mov	r1, #9
   11118:	bl	4294 <snprintf@plt>
   1111c:	mov	r2, r6
   11120:	mov	r1, r5
   11124:	mov	r0, r4
   11128:	bl	10fb4 <por_write_string_field>
   1112c:	subs	fp, r0, #0
   11130:	bne	115e0 <por_begin_data+0x5fc>
   11134:	ldr	r1, [r9]
   11138:	add	r7, sp, #40	; 0x28
   1113c:	ldr	r3, [r9, #8]
   11140:	udiv	r2, r1, r8
   11144:	udiv	r0, r3, r8
   11148:	mls	r2, r8, r2, r1
   1114c:	str	r2, [sp, #4]
   11150:	ldr	r1, [r9, #4]
   11154:	mls	r3, r8, r0, r3
   11158:	mov	r0, r7
   1115c:	udiv	r2, r1, r8
   11160:	mls	r2, r8, r2, r1
   11164:	mov	r1, #7
   11168:	str	r2, [sp]
   1116c:	ldr	r2, [pc, #1212]	; 11630 <por_begin_data+0x64c>
   11170:	add	r2, pc, r2
   11174:	bl	4294 <snprintf@plt>
   11178:	mov	r2, r7
   1117c:	mov	r1, r5
   11180:	mov	r0, r4
   11184:	bl	10fb4 <por_write_string_field>
   11188:	subs	fp, r0, #0
   1118c:	bne	115e0 <por_begin_data+0x5fc>
   11190:	mov	r2, #49	; 0x31
   11194:	mov	r1, r5
   11198:	mov	r0, r4
   1119c:	bl	10cac <por_write_tag>
   111a0:	subs	fp, r0, #0
   111a4:	bne	115e0 <por_begin_data+0x5fc>
   111a8:	ldr	r2, [pc, #1156]	; 11634 <por_begin_data+0x650>
   111ac:	mov	r1, r5
   111b0:	mov	r0, r4
   111b4:	add	r2, pc, r2
   111b8:	bl	10fb4 <por_write_string_field>
   111bc:	subs	fp, r0, #0
   111c0:	bne	115e0 <por_begin_data+0x5fc>
   111c4:	mov	r2, #51	; 0x33
   111c8:	mov	r1, r5
   111cc:	mov	r0, r4
   111d0:	bl	10cac <por_write_tag>
   111d4:	subs	fp, r0, #0
   111d8:	bne	115e0 <por_begin_data+0x5fc>
   111dc:	ldr	r2, [pc, #1108]	; 11638 <por_begin_data+0x654>
   111e0:	mov	r1, r5
   111e4:	mov	r0, r4
   111e8:	add	r2, pc, r2
   111ec:	bl	10fb4 <por_write_string_field>
   111f0:	subs	fp, r0, #0
   111f4:	bne	115e0 <por_begin_data+0x5fc>
   111f8:	mov	r2, #52	; 0x34
   111fc:	mov	r1, r5
   11200:	mov	r0, r4
   11204:	bl	10cac <por_write_tag>
   11208:	subs	fp, r0, #0
   1120c:	bne	115e0 <por_begin_data+0x5fc>
   11210:	vldr	s15, [r4, #28]
   11214:	mov	r1, r5
   11218:	mov	r0, r4
   1121c:	vcvt.f64.s32	d0, s15
   11220:	bl	10e78 <por_write_double>
   11224:	subs	fp, r0, #0
   11228:	bne	115e0 <por_begin_data+0x5fc>
   1122c:	mov	r2, #53	; 0x35
   11230:	mov	r1, r5
   11234:	mov	r0, r4
   11238:	bl	10cac <por_write_tag>
   1123c:	subs	fp, r0, #0
   11240:	bne	115e0 <por_begin_data+0x5fc>
   11244:	vldr	d0, [pc, #956]	; 11608 <por_begin_data+0x624>
   11248:	mov	r1, r5
   1124c:	mov	r0, r4
   11250:	bl	10e78 <por_write_double>
   11254:	subs	fp, r0, #0
   11258:	bne	115e0 <por_begin_data+0x5fc>
   1125c:	ldr	r3, [r4, #224]	; 0xe0
   11260:	cmp	r3, #0
   11264:	beq	112a0 <por_begin_data+0x2bc>
   11268:	mov	r2, #54	; 0x36
   1126c:	mov	r1, r5
   11270:	mov	r0, r4
   11274:	bl	10cac <por_write_tag>
   11278:	subs	fp, r0, #0
   1127c:	bne	115e0 <por_begin_data+0x5fc>
   11280:	ldr	r0, [r4, #224]	; 0xe0
   11284:	bl	4384 <readstat_variable_get_name@plt>
   11288:	mov	r2, r0
   1128c:	mov	r1, r5
   11290:	mov	r0, r4
   11294:	bl	10fb4 <por_write_string_field>
   11298:	subs	fp, r0, #0
   1129c:	bne	115e0 <por_begin_data+0x5fc>
   112a0:	mov	r3, #0
   112a4:	vldr	d10, [pc, #868]	; 11610 <por_begin_data+0x62c>
   112a8:	vldr	d8, [pc, #872]	; 11618 <por_begin_data+0x634>
   112ac:	str	r3, [sp, #12]
   112b0:	b	113d0 <por_begin_data+0x3ec>
   112b4:	mov	r0, r4
   112b8:	ldr	r1, [sp, #12]
   112bc:	bl	439c <readstat_get_variable@plt>
   112c0:	mov	r8, r0
   112c4:	bl	4384 <readstat_variable_get_name@plt>
   112c8:	mov	r9, r0
   112cc:	mov	r2, #55	; 0x37
   112d0:	mov	r1, r5
   112d4:	mov	r0, r4
   112d8:	bl	10cac <por_write_tag>
   112dc:	subs	fp, r0, #0
   112e0:	bne	115e0 <por_begin_data+0x5fc>
   112e4:	ldr	r3, [r8]
   112e8:	mov	r1, r5
   112ec:	mov	r0, r4
   112f0:	cmp	r3, #0
   112f4:	ldreq	r3, [r8, #1600]	; 0x640
   112f8:	vmovne.f64	d0, d10
   112fc:	vmoveq	s15, r3
   11300:	vcvteq.f64.u32	d0, s15
   11304:	bl	10e78 <por_write_double>
   11308:	subs	fp, r0, #0
   1130c:	bne	115e0 <por_begin_data+0x5fc>
   11310:	mov	r2, r9
   11314:	mov	r1, r5
   11318:	mov	r0, r4
   1131c:	bl	10fb4 <por_write_string_field>
   11320:	subs	fp, r0, #0
   11324:	bne	115e0 <por_begin_data+0x5fc>
   11328:	add	r9, sp, #28
   1132c:	mov	r0, r8
   11330:	mov	r1, r9
   11334:	bl	4114 <spss_format_for_variable@plt>
   11338:	subs	fp, r0, #0
   1133c:	bne	115e0 <por_begin_data+0x5fc>
   11340:	mov	r2, r9
   11344:	mov	r1, r5
   11348:	mov	r0, r4
   1134c:	bl	10f10 <por_emit_format>
   11350:	subs	fp, r0, #0
   11354:	bne	115e0 <por_begin_data+0x5fc>
   11358:	mov	r2, r9
   1135c:	mov	r1, r5
   11360:	mov	r0, r4
   11364:	bl	10f10 <por_emit_format>
   11368:	subs	fp, r0, #0
   1136c:	bne	115e0 <por_begin_data+0x5fc>
   11370:	ldr	r2, [r8]
   11374:	mov	r0, r8
   11378:	cmp	r2, #5
   1137c:	bne	1163c <por_begin_data+0x658>
   11380:	mov	sl, fp
   11384:	mov	r9, fp
   11388:	bl	4324 <readstat_variable_get_missing_ranges_count@plt>
   1138c:	str	r0, [sp, #8]
   11390:	ldr	r3, [sp, #8]
   11394:	cmp	r3, sl
   11398:	bgt	11454 <por_begin_data+0x470>
   1139c:	mov	sl, #0
   113a0:	ldr	r3, [sp, #8]
   113a4:	cmp	r3, sl
   113a8:	bgt	11540 <por_begin_data+0x55c>
   113ac:	cmp	r9, #3
   113b0:	bgt	115dc <por_begin_data+0x5f8>
   113b4:	mov	r0, r8
   113b8:	bl	4420 <readstat_variable_get_label@plt>
   113bc:	subs	r8, r0, #0
   113c0:	bne	117c4 <por_begin_data+0x7e0>
   113c4:	ldr	r3, [sp, #12]
   113c8:	add	r3, r3, #1
   113cc:	str	r3, [sp, #12]
   113d0:	ldr	r2, [sp, #12]
   113d4:	ldr	r3, [r4, #28]
   113d8:	cmp	r2, r3
   113dc:	blt	112b4 <por_begin_data+0x2d0>
   113e0:	mov	r8, #0
   113e4:	ldr	r3, [r4, #40]	; 0x28
   113e8:	cmp	r8, r3
   113ec:	blt	117f8 <por_begin_data+0x814>
   113f0:	mov	r2, #69	; 0x45
   113f4:	mov	r1, r5
   113f8:	mov	r0, r4
   113fc:	bl	10cac <por_write_tag>
   11400:	subs	fp, r0, #0
   11404:	bne	115e0 <por_begin_data+0x5fc>
   11408:	vldr	s15, [r4, #52]	; 0x34
   1140c:	mov	r1, r5
   11410:	mov	r0, r4
   11414:	vcvt.f64.s32	d0, s15
   11418:	bl	10e78 <por_write_double>
   1141c:	subs	fp, r0, #0
   11420:	moveq	r6, fp
   11424:	bne	115e0 <por_begin_data+0x5fc>
   11428:	ldr	r3, [r4, #52]	; 0x34
   1142c:	cmp	r6, r3
   11430:	blt	11950 <por_begin_data+0x96c>
   11434:	mov	r2, #70	; 0x46
   11438:	mov	r1, r5
   1143c:	mov	r0, r4
   11440:	bl	10cac <por_write_tag>
   11444:	subs	fp, r0, #0
   11448:	streq	r5, [r4, #300]	; 0x12c
   1144c:	beq	115f8 <por_begin_data+0x614>
   11450:	b	115e0 <por_begin_data+0x5fc>
   11454:	mov	r2, sl
   11458:	mov	r1, r8
   1145c:	mov	r0, r7
   11460:	bl	3f58 <readstat_variable_get_missing_range_lo@plt>
   11464:	mov	r2, sl
   11468:	mov	r1, r8
   1146c:	mov	r0, r6
   11470:	bl	4348 <readstat_variable_get_missing_range_hi@plt>
   11474:	ldm	r7, {r0, r1, r2, r3}
   11478:	bl	41d4 <readstat_double_value@plt>
   1147c:	vmov.f64	d11, d0
   11480:	ldm	r6, {r0, r1, r2, r3}
   11484:	bl	41d4 <readstat_double_value@plt>
   11488:	vabs.f64	d7, d11
   1148c:	vmov.f64	d9, d0
   11490:	vcmp.f64	d7, d8
   11494:	vmrs	APSR_nzcv, fpscr
   11498:	ble	114bc <por_begin_data+0x4d8>
   1149c:	mov	r2, #57	; 0x39
   114a0:	mov	r1, r5
   114a4:	mov	r0, r4
   114a8:	bl	10cac <por_write_tag>
   114ac:	subs	fp, r0, #0
   114b0:	bne	115e0 <por_begin_data+0x5fc>
   114b4:	vmov.f64	d0, d9
   114b8:	b	114e8 <por_begin_data+0x504>
   114bc:	vabs.f64	d7, d0
   114c0:	vcmp.f64	d7, d8
   114c4:	vmrs	APSR_nzcv, fpscr
   114c8:	ble	11508 <por_begin_data+0x524>
   114cc:	mov	r2, #65	; 0x41
   114d0:	mov	r1, r5
   114d4:	mov	r0, r4
   114d8:	bl	10cac <por_write_tag>
   114dc:	subs	fp, r0, #0
   114e0:	bne	115e0 <por_begin_data+0x5fc>
   114e4:	vmov.f64	d0, d11
   114e8:	mov	r1, r5
   114ec:	mov	r0, r4
   114f0:	bl	10e78 <por_write_double>
   114f4:	subs	fp, r0, #0
   114f8:	bne	115e0 <por_begin_data+0x5fc>
   114fc:	add	r9, r9, #2
   11500:	add	sl, sl, #1
   11504:	b	11390 <por_begin_data+0x3ac>
   11508:	vcmp.f64	d11, d0
   1150c:	vmrs	APSR_nzcv, fpscr
   11510:	beq	11500 <por_begin_data+0x51c>
   11514:	mov	r2, #66	; 0x42
   11518:	mov	r1, r5
   1151c:	mov	r0, r4
   11520:	bl	10cac <por_write_tag>
   11524:	subs	fp, r0, #0
   11528:	bne	115e0 <por_begin_data+0x5fc>
   1152c:	vmov.f64	d0, d11
   11530:	mov	r1, r5
   11534:	mov	r0, r4
   11538:	bl	10e78 <por_write_double>
   1153c:	b	114ac <por_begin_data+0x4c8>
   11540:	mov	r2, sl
   11544:	mov	r1, r8
   11548:	mov	r0, r7
   1154c:	bl	3f58 <readstat_variable_get_missing_range_lo@plt>
   11550:	mov	r2, sl
   11554:	mov	r1, r8
   11558:	mov	r0, r6
   1155c:	bl	4348 <readstat_variable_get_missing_range_hi@plt>
   11560:	ldm	r7, {r0, r1, r2, r3}
   11564:	bl	41d4 <readstat_double_value@plt>
   11568:	vmov.f64	d9, d0
   1156c:	ldm	r6, {r0, r1, r2, r3}
   11570:	bl	41d4 <readstat_double_value@plt>
   11574:	vcmp.f64	d9, d0
   11578:	vmrs	APSR_nzcv, fpscr
   1157c:	bne	115d4 <por_begin_data+0x5f0>
   11580:	vabs.f64	d7, d9
   11584:	vcmp.f64	d7, d8
   11588:	vmrs	APSR_nzcv, fpscr
   1158c:	bgt	115d4 <por_begin_data+0x5f0>
   11590:	vabs.f64	d0, d0
   11594:	vcmp.f64	d0, d8
   11598:	vmrs	APSR_nzcv, fpscr
   1159c:	bgt	115d4 <por_begin_data+0x5f0>
   115a0:	mov	r2, #56	; 0x38
   115a4:	mov	r1, r5
   115a8:	mov	r0, r4
   115ac:	bl	10cac <por_write_tag>
   115b0:	subs	fp, r0, #0
   115b4:	bne	115e0 <por_begin_data+0x5fc>
   115b8:	vmov.f64	d0, d9
   115bc:	mov	r1, r5
   115c0:	mov	r0, r4
   115c4:	bl	10e78 <por_write_double>
   115c8:	subs	fp, r0, #0
   115cc:	bne	115e0 <por_begin_data+0x5fc>
   115d0:	add	r9, r9, #1
   115d4:	add	sl, sl, #1
   115d8:	b	113a0 <por_begin_data+0x3bc>
   115dc:	mov	fp, #31
   115e0:	ldr	r0, [r5]
   115e4:	cmp	r0, #0
   115e8:	beq	115f0 <por_begin_data+0x60c>
   115ec:	bl	3ed4 <free@plt>
   115f0:	mov	r0, r5
   115f4:	bl	3ed4 <free@plt>
   115f8:	mov	r0, fp
   115fc:	add	sp, sp, #76	; 0x4c
   11600:	vpop	{d8-d11}
   11604:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11608:	.word	0x00000000
   1160c:	.word	0x40490000
	...
   11618:	.word	0xffffffff
   1161c:	.word	0x7fefffff
   11620:	.word	0x0002efe8
   11624:	.word	0x000002fc
   11628:	.word	0x00000308
   1162c:	.word	0x000101fd
   11630:	.word	0x0001019e
   11634:	.word	0x00010e7d
   11638:	.word	0x00010e2c
   1163c:	mov	r9, fp
   11640:	bl	4324 <readstat_variable_get_missing_ranges_count@plt>
   11644:	str	fp, [sp, #8]
   11648:	str	r0, [sp, #20]
   1164c:	ldr	r3, [sp, #20]
   11650:	cmp	r3, r9
   11654:	bgt	11674 <por_begin_data+0x690>
   11658:	mov	r9, #0
   1165c:	ldr	r3, [sp, #20]
   11660:	cmp	r3, r9
   11664:	bgt	1172c <por_begin_data+0x748>
   11668:	ldr	r3, [sp, #8]
   1166c:	cmp	r3, #3
   11670:	b	113b0 <por_begin_data+0x3cc>
   11674:	mov	r2, r9
   11678:	mov	r1, r8
   1167c:	mov	r0, r7
   11680:	bl	3f58 <readstat_variable_get_missing_range_lo@plt>
   11684:	mov	r2, r9
   11688:	mov	r1, r8
   1168c:	mov	r0, r6
   11690:	bl	4348 <readstat_variable_get_missing_range_hi@plt>
   11694:	ldm	r7, {r0, r1, r2, r3}
   11698:	bl	3fc4 <readstat_string_value@plt>
   1169c:	str	r0, [sp, #16]
   116a0:	ldm	r6, {r0, r1, r2, r3}
   116a4:	bl	3fc4 <readstat_string_value@plt>
   116a8:	ldr	r3, [sp, #16]
   116ac:	mov	sl, r0
   116b0:	cmp	r3, #0
   116b4:	cmpne	r0, #0
   116b8:	beq	11724 <por_begin_data+0x740>
   116bc:	mov	r1, r0
   116c0:	mov	r0, r3
   116c4:	bl	3e14 <strcmp@plt>
   116c8:	cmp	r0, #0
   116cc:	beq	11724 <por_begin_data+0x740>
   116d0:	mov	r2, #66	; 0x42
   116d4:	mov	r1, r5
   116d8:	mov	r0, r4
   116dc:	bl	10cac <por_write_tag>
   116e0:	subs	fp, r0, #0
   116e4:	bne	115e0 <por_begin_data+0x5fc>
   116e8:	mov	r1, r5
   116ec:	mov	r0, r4
   116f0:	ldr	r2, [sp, #16]
   116f4:	bl	10fb4 <por_write_string_field>
   116f8:	subs	fp, r0, #0
   116fc:	bne	115e0 <por_begin_data+0x5fc>
   11700:	mov	r2, sl
   11704:	mov	r1, r5
   11708:	mov	r0, r4
   1170c:	bl	10fb4 <por_write_string_field>
   11710:	subs	fp, r0, #0
   11714:	bne	115e0 <por_begin_data+0x5fc>
   11718:	ldr	r3, [sp, #8]
   1171c:	add	r3, r3, #2
   11720:	str	r3, [sp, #8]
   11724:	add	r9, r9, #1
   11728:	b	1164c <por_begin_data+0x668>
   1172c:	mov	r2, r9
   11730:	mov	r1, r8
   11734:	mov	r0, r7
   11738:	bl	3f58 <readstat_variable_get_missing_range_lo@plt>
   1173c:	mov	r2, r9
   11740:	mov	r1, r8
   11744:	mov	r0, r6
   11748:	bl	4348 <readstat_variable_get_missing_range_hi@plt>
   1174c:	ldm	r7, {r0, r1, r2, r3}
   11750:	bl	3fc4 <readstat_string_value@plt>
   11754:	mov	sl, r0
   11758:	ldm	r6, {r0, r1, r2, r3}
   1175c:	bl	3fc4 <readstat_string_value@plt>
   11760:	cmp	sl, #0
   11764:	cmpne	r0, #0
   11768:	mov	r1, r0
   1176c:	beq	117bc <por_begin_data+0x7d8>
   11770:	mov	r0, sl
   11774:	bl	3e14 <strcmp@plt>
   11778:	cmp	r0, #0
   1177c:	bne	117bc <por_begin_data+0x7d8>
   11780:	mov	r2, #56	; 0x38
   11784:	mov	r1, r5
   11788:	mov	r0, r4
   1178c:	bl	10cac <por_write_tag>
   11790:	subs	fp, r0, #0
   11794:	bne	115e0 <por_begin_data+0x5fc>
   11798:	mov	r2, sl
   1179c:	mov	r1, r5
   117a0:	mov	r0, r4
   117a4:	bl	10fb4 <por_write_string_field>
   117a8:	subs	fp, r0, #0
   117ac:	bne	115e0 <por_begin_data+0x5fc>
   117b0:	ldr	r3, [sp, #8]
   117b4:	add	r3, r3, #1
   117b8:	str	r3, [sp, #8]
   117bc:	add	r9, r9, #1
   117c0:	b	1165c <por_begin_data+0x678>
   117c4:	mov	r2, #67	; 0x43
   117c8:	mov	r1, r5
   117cc:	mov	r0, r4
   117d0:	bl	10cac <por_write_tag>
   117d4:	subs	fp, r0, #0
   117d8:	bne	115e0 <por_begin_data+0x5fc>
   117dc:	mov	r2, r8
   117e0:	mov	r1, r5
   117e4:	mov	r0, r4
   117e8:	bl	10fb4 <por_write_string_field>
   117ec:	subs	fp, r0, #0
   117f0:	beq	113c4 <por_begin_data+0x3e0>
   117f4:	b	115e0 <por_begin_data+0x5fc>
   117f8:	mov	r1, r8
   117fc:	mov	r0, r4
   11800:	bl	4444 <readstat_get_label_set@plt>
   11804:	ldr	r3, [r0, #264]	; 0x108
   11808:	mov	r6, r0
   1180c:	cmp	r3, #0
   11810:	bne	1181c <por_begin_data+0x838>
   11814:	add	r8, r8, #1
   11818:	b	113e4 <por_begin_data+0x400>
   1181c:	ldr	r3, [r0, #276]	; 0x114
   11820:	cmp	r3, #0
   11824:	beq	11814 <por_begin_data+0x830>
   11828:	mov	r2, #68	; 0x44
   1182c:	mov	r1, r5
   11830:	ldr	sl, [r6]
   11834:	mov	r0, r4
   11838:	bl	10cac <por_write_tag>
   1183c:	subs	fp, r0, #0
   11840:	bne	115e0 <por_begin_data+0x5fc>
   11844:	vldr	s15, [r6, #276]	; 0x114
   11848:	mov	r1, r5
   1184c:	mov	r0, r4
   11850:	vcvt.f64.s32	d0, s15
   11854:	bl	10e78 <por_write_double>
   11858:	subs	fp, r0, #0
   1185c:	bne	115e0 <por_begin_data+0x5fc>
   11860:	mov	r7, fp
   11864:	ldr	r3, [r6, #276]	; 0x114
   11868:	cmp	r7, r3
   1186c:	blt	118d4 <por_begin_data+0x8f0>
   11870:	vldr	s15, [r6, #264]	; 0x108
   11874:	mov	r1, r5
   11878:	mov	r0, r4
   1187c:	vcvt.f64.s32	d0, s15
   11880:	bl	10e78 <por_write_double>
   11884:	subs	fp, r0, #0
   11888:	bne	115e0 <por_begin_data+0x5fc>
   1188c:	mov	r9, fp
   11890:	ldr	r3, [r6, #264]	; 0x108
   11894:	cmp	r9, r3
   11898:	bge	11814 <por_begin_data+0x830>
   1189c:	mov	r1, r9
   118a0:	mov	r0, r6
   118a4:	bl	44ec <readstat_get_value_label@plt>
   118a8:	cmp	sl, #0
   118ac:	mov	r7, r0
   118b0:	bne	11904 <por_begin_data+0x920>
   118b4:	mov	r1, r5
   118b8:	mov	r0, r4
   118bc:	ldrd	r2, [r7, #16]
   118c0:	bl	10f68 <por_write_string_field_n>
   118c4:	cmp	r0, #0
   118c8:	mov	fp, r0
   118cc:	beq	11918 <por_begin_data+0x934>
   118d0:	b	115e0 <por_begin_data+0x5fc>
   118d4:	mov	r1, r7
   118d8:	mov	r0, r6
   118dc:	bl	4468 <readstat_get_label_set_variable@plt>
   118e0:	bl	4384 <readstat_variable_get_name@plt>
   118e4:	mov	r2, r0
   118e8:	mov	r1, r5
   118ec:	mov	r0, r4
   118f0:	bl	10fb4 <por_write_string_field>
   118f4:	subs	fp, r0, #0
   118f8:	bne	115e0 <por_begin_data+0x5fc>
   118fc:	add	r7, r7, #1
   11900:	b	11864 <por_begin_data+0x880>
   11904:	cmp	sl, #5
   11908:	vldreq	d0, [r0]
   1190c:	beq	11940 <por_begin_data+0x95c>
   11910:	cmp	sl, #3
   11914:	beq	11938 <por_begin_data+0x954>
   11918:	mov	r1, r5
   1191c:	mov	r0, r4
   11920:	ldrd	r2, [r7, #24]
   11924:	bl	10f68 <por_write_string_field_n>
   11928:	subs	fp, r0, #0
   1192c:	bne	115e0 <por_begin_data+0x5fc>
   11930:	add	r9, r9, #1
   11934:	b	11890 <por_begin_data+0x8ac>
   11938:	vldr	s15, [r0, #8]
   1193c:	vcvt.f64.s32	d0, s15
   11940:	mov	r1, r5
   11944:	mov	r0, r4
   11948:	bl	10e78 <por_write_double>
   1194c:	b	118c4 <por_begin_data+0x8e0>
   11950:	ldr	r3, [r4, #48]	; 0x30
   11954:	ldr	r7, [r3, r6, lsl #2]
   11958:	mov	r0, r7
   1195c:	bl	421c <strlen@plt>
   11960:	cmp	r0, #80	; 0x50
   11964:	mov	r3, r0
   11968:	bhi	1198c <por_begin_data+0x9a8>
   1196c:	mov	r2, r7
   11970:	mov	r1, r5
   11974:	mov	r0, r4
   11978:	bl	10f68 <por_write_string_field_n>
   1197c:	subs	fp, r0, #0
   11980:	bne	115e0 <por_begin_data+0x5fc>
   11984:	add	r6, r6, #1
   11988:	b	11428 <por_begin_data+0x444>
   1198c:	mov	fp, #32
   11990:	b	115e0 <por_begin_data+0x5fc>

00011994 <por_end_data>:
   11994:	push	{r4, r5, r6, lr}
   11998:	mov	r2, #90	; 0x5a
   1199c:	mov	r4, r0
   119a0:	ldr	r1, [r0, #300]	; 0x12c
   119a4:	bl	10cac <por_write_tag>
   119a8:	subs	r5, r0, #0
   119ac:	bne	119cc <por_end_data+0x38>
   119b0:	ldr	r3, [pc, #56]	; 119f0 <por_end_data+0x5c>
   119b4:	mov	r2, #80	; 0x50
   119b8:	mov	r1, #90	; 0x5a
   119bc:	mov	r0, r4
   119c0:	add	r3, pc, r3
   119c4:	bl	4504 <readstat_write_line_padding@plt>
   119c8:	mov	r5, r0
   119cc:	ldr	r4, [r4, #300]	; 0x12c
   119d0:	ldr	r0, [r4]
   119d4:	cmp	r0, #0
   119d8:	beq	119e0 <por_end_data+0x4c>
   119dc:	bl	3ed4 <free@plt>
   119e0:	mov	r0, r4
   119e4:	bl	3ed4 <free@plt>
   119e8:	mov	r0, r5
   119ec:	pop	{r4, r5, r6, pc}
   119f0:	.word	0x0000f9d2

000119f4 <readstat_begin_writing_por>:
   119f4:	ldr	ip, [pc, #164]	; 11aa0 <readstat_begin_writing_por+0xac>
   119f8:	add	ip, pc, ip
   119fc:	str	ip, [r0, #292]	; 0x124
   11a00:	ldr	ip, [pc, #156]	; 11aa4 <readstat_begin_writing_por+0xb0>
   11a04:	add	ip, pc, ip
   11a08:	str	ip, [r0, #228]	; 0xe4
   11a0c:	ldr	ip, [pc, #148]	; 11aa8 <readstat_begin_writing_por+0xb4>
   11a10:	add	ip, pc, ip
   11a14:	str	ip, [r0, #232]	; 0xe8
   11a18:	ldr	ip, [pc, #140]	; 11aac <readstat_begin_writing_por+0xb8>
   11a1c:	add	ip, pc, ip
   11a20:	str	ip, [r0, #236]	; 0xec
   11a24:	ldr	ip, [pc, #132]	; 11ab0 <readstat_begin_writing_por+0xbc>
   11a28:	add	ip, pc, ip
   11a2c:	str	ip, [r0, #240]	; 0xf0
   11a30:	ldr	ip, [pc, #124]	; 11ab4 <readstat_begin_writing_por+0xc0>
   11a34:	add	ip, pc, ip
   11a38:	str	ip, [r0, #244]	; 0xf4
   11a3c:	ldr	ip, [pc, #116]	; 11ab8 <readstat_begin_writing_por+0xc4>
   11a40:	add	ip, pc, ip
   11a44:	str	ip, [r0, #248]	; 0xf8
   11a48:	ldr	ip, [pc, #108]	; 11abc <readstat_begin_writing_por+0xc8>
   11a4c:	add	ip, pc, ip
   11a50:	str	ip, [r0, #252]	; 0xfc
   11a54:	ldr	ip, [pc, #100]	; 11ac0 <readstat_begin_writing_por+0xcc>
   11a58:	add	ip, pc, ip
   11a5c:	str	ip, [r0, #256]	; 0x100
   11a60:	ldr	ip, [pc, #92]	; 11ac4 <readstat_begin_writing_por+0xd0>
   11a64:	add	ip, pc, ip
   11a68:	str	ip, [r0, #264]	; 0x108
   11a6c:	ldr	ip, [pc, #84]	; 11ac8 <readstat_begin_writing_por+0xd4>
   11a70:	add	ip, pc, ip
   11a74:	str	ip, [r0, #268]	; 0x10c
   11a78:	ldr	ip, [pc, #76]	; 11acc <readstat_begin_writing_por+0xd8>
   11a7c:	add	ip, pc, ip
   11a80:	str	ip, [r0, #276]	; 0x114
   11a84:	ldr	ip, [pc, #68]	; 11ad0 <readstat_begin_writing_por+0xdc>
   11a88:	add	ip, pc, ip
   11a8c:	str	ip, [r0, #280]	; 0x118
   11a90:	ldr	ip, [pc, #60]	; 11ad4 <readstat_begin_writing_por+0xe0>
   11a94:	add	ip, pc, ip
   11a98:	str	ip, [r0, #284]	; 0x11c
   11a9c:	b	3f7c <readstat_begin_writing_file@plt>
   11aa0:	.word	0xffffed18
   11aa4:	.word	0xffffecfc
   11aa8:	.word	0xffffed10
   11aac:	.word	0xfffff19c
   11ab0:	.word	0xfffff184
   11ab4:	.word	0xfffff16c
   11ab8:	.word	0xfffff158
   11abc:	.word	0xfffff110
   11ac0:	.word	0xfffff088
   11ac4:	.word	0xfffff124
   11ac8:	.word	0xfffff104
   11acc:	.word	0xfffff560
   11ad0:	.word	0xfffff240
   11ad4:	.word	0xfffffef8

00011ad8 <sav_ctx_free>:
   11ad8:	ldr	r3, [r0, #44]	; 0x2c
   11adc:	push	{r4, r5, r6, lr}
   11ae0:	mov	r4, r0
   11ae4:	cmp	r3, #0
   11ae8:	movne	r5, #0
   11aec:	bne	11b58 <sav_ctx_free+0x80>
   11af0:	ldr	r3, [r4, #52]	; 0x34
   11af4:	cmp	r3, #0
   11af8:	movne	r5, #0
   11afc:	bne	11b84 <sav_ctx_free+0xac>
   11b00:	ldr	r0, [r4, #376]	; 0x178
   11b04:	cmp	r0, #0
   11b08:	beq	11b10 <sav_ctx_free+0x38>
   11b0c:	bl	3ed4 <free@plt>
   11b10:	ldr	r0, [r4, #384]	; 0x180
   11b14:	cmp	r0, #0
   11b18:	beq	11b20 <sav_ctx_free+0x48>
   11b1c:	bl	3ed4 <free@plt>
   11b20:	ldr	r0, [r4, #336]	; 0x150
   11b24:	cmp	r0, #0
   11b28:	beq	11b30 <sav_ctx_free+0x58>
   11b2c:	bl	3de4 <iconv_close@plt>
   11b30:	ldr	r0, [r4, #328]	; 0x148
   11b34:	cmp	r0, #0
   11b38:	beq	11b40 <sav_ctx_free+0x68>
   11b3c:	bl	3ed4 <free@plt>
   11b40:	mov	r0, r4
   11b44:	pop	{r4, r5, r6, lr}
   11b48:	b	3ed4 <free@plt>
   11b4c:	ldr	r0, [r0, r5, lsl #2]
   11b50:	add	r5, r5, #1
   11b54:	bl	4438 <spss_varinfo_free@plt>
   11b58:	ldr	r0, [r4, #44]	; 0x2c
   11b5c:	ldr	r3, [r4, #340]	; 0x154
   11b60:	cmp	r3, r5
   11b64:	bgt	11b4c <sav_ctx_free+0x74>
   11b68:	bl	3ed4 <free@plt>
   11b6c:	b	11af0 <sav_ctx_free+0x18>
   11b70:	ldr	r0, [r0, r5, lsl #2]
   11b74:	cmp	r0, #0
   11b78:	beq	11b80 <sav_ctx_free+0xa8>
   11b7c:	bl	3ed4 <free@plt>
   11b80:	add	r5, r5, #1
   11b84:	ldr	r0, [r4, #52]	; 0x34
   11b88:	ldr	r3, [r4, #348]	; 0x15c
   11b8c:	cmp	r3, r5
   11b90:	bgt	11b70 <sav_ctx_free+0x98>
   11b94:	bl	3ed4 <free@plt>
   11b98:	b	11b00 <sav_ctx_free+0x28>

00011b9c <sav_ctx_init>:
   11b9c:	push	{r4, r5, r6, lr}
   11ba0:	mov	r5, r0
   11ba4:	mov	r6, r1
   11ba8:	mov	r0, #1
   11bac:	mov	r1, #440	; 0x1b8
   11bb0:	bl	3fdc <readstat_calloc@plt>
   11bb4:	subs	r4, r0, #0
   11bb8:	beq	11d04 <sav_ctx_init+0x168>
   11bbc:	ldr	r1, [pc, #376]	; 11d3c <sav_ctx_init+0x1a0>
   11bc0:	mov	r2, #4
   11bc4:	mov	r0, r5
   11bc8:	add	r1, pc, r1
   11bcc:	bl	3fb8 <memcmp@plt>
   11bd0:	cmp	r0, #0
   11bd4:	moveq	r3, #2
   11bd8:	beq	11bfc <sav_ctx_init+0x60>
   11bdc:	ldr	r1, [pc, #348]	; 11d40 <sav_ctx_init+0x1a4>
   11be0:	mov	r2, #4
   11be4:	mov	r0, r5
   11be8:	add	r1, pc, r1
   11bec:	bl	3fb8 <memcmp@plt>
   11bf0:	cmp	r0, #0
   11bf4:	bne	11cf8 <sav_ctx_init+0x15c>
   11bf8:	mov	r3, #3
   11bfc:	str	r3, [r4, #424]	; 0x1a8
   11c00:	ldr	r3, [r5, #64]	; 0x40
   11c04:	ldrb	r2, [r4, #436]	; 0x1b4
   11c08:	sub	r3, r3, #2
   11c0c:	cmp	r3, #1
   11c10:	movls	r3, #0
   11c14:	movhi	r3, #1
   11c18:	bfi	r2, r3, #0, #1
   11c1c:	strb	r2, [r4, #436]	; 0x1b4
   11c20:	bl	3ec8 <machine_is_little_endian@plt>
   11c24:	ldrb	r3, [r4, #436]	; 0x1b4
   11c28:	and	r3, r3, #1
   11c2c:	cmp	r0, r3
   11c30:	movne	r0, #1
   11c34:	moveq	r0, #2
   11c38:	str	r0, [r4, #432]	; 0x1b0
   11c3c:	ldr	r0, [r5, #72]	; 0x48
   11c40:	cmp	r0, #1
   11c44:	bne	11d0c <sav_ctx_init+0x170>
   11c48:	mov	r3, #1
   11c4c:	str	r3, [r4, #428]	; 0x1ac
   11c50:	ldrb	r3, [r4, #436]	; 0x1b4
   11c54:	ldr	r0, [r5, #80]	; 0x50
   11c58:	tst	r3, #1
   11c5c:	beq	11c64 <sav_ctx_init+0xc8>
   11c60:	bl	3da8 <byteswap4@plt>
   11c64:	ldrb	r3, [r4, #436]	; 0x1b4
   11c68:	str	r0, [r4, #352]	; 0x160
   11c6c:	ldr	r0, [r5, #76]	; 0x4c
   11c70:	tst	r3, #1
   11c74:	beq	11c7c <sav_ctx_init+0xe0>
   11c78:	bl	3da8 <byteswap4@plt>
   11c7c:	add	r3, r4, #400	; 0x190
   11c80:	mvn	r1, #1048576	; 0x100000
   11c84:	str	r0, [r4, #372]	; 0x174
   11c88:	mvn	r0, #0
   11c8c:	strd	r0, [r3, #-8]
   11c90:	mvn	r0, #1
   11c94:	mvn	r1, #1048576	; 0x100000
   11c98:	strd	r0, [r3]
   11c9c:	add	r3, r4, #416	; 0x1a0
   11ca0:	mvn	r0, #0
   11ca4:	ldr	r1, [pc, #152]	; 11d44 <sav_ctx_init+0x1a8>
   11ca8:	strd	r0, [r3, #-8]
   11cac:	ldrb	r1, [r4, #436]	; 0x1b4
   11cb0:	ldr	r2, [r5, #84]	; 0x54
   11cb4:	ldr	r3, [r5, #88]	; 0x58
   11cb8:	tst	r1, #1
   11cbc:	beq	11ccc <sav_ctx_init+0x130>
   11cc0:	vmov	d0, r2, r3
   11cc4:	bl	4528 <byteswap_double@plt>
   11cc8:	vmov	r2, r3, d0
   11ccc:	mov	r0, #512	; 0x200
   11cd0:	mov	r1, #4
   11cd4:	str	r0, [r4, #48]	; 0x30
   11cd8:	str	r2, [r4, #416]	; 0x1a0
   11cdc:	str	r3, [r4, #420]	; 0x1a4
   11ce0:	bl	3fdc <readstat_calloc@plt>
   11ce4:	cmp	r0, #0
   11ce8:	mov	r5, r0
   11cec:	str	r0, [r4, #44]	; 0x2c
   11cf0:	strne	r6, [r4, #36]	; 0x24
   11cf4:	bne	11d04 <sav_ctx_init+0x168>
   11cf8:	mov	r0, r4
   11cfc:	mov	r4, #0
   11d00:	bl	3f28 <sav_ctx_free@plt>
   11d04:	mov	r0, r4
   11d08:	pop	{r4, r5, r6, pc}
   11d0c:	bl	3da8 <byteswap4@plt>
   11d10:	cmp	r0, #1
   11d14:	beq	11c48 <sav_ctx_init+0xac>
   11d18:	ldr	r0, [r5, #72]	; 0x48
   11d1c:	cmp	r0, #2
   11d20:	bne	11d2c <sav_ctx_init+0x190>
   11d24:	mov	r3, #2
   11d28:	b	11c4c <sav_ctx_init+0xb0>
   11d2c:	bl	3da8 <byteswap4@plt>
   11d30:	cmp	r0, #2
   11d34:	bne	11c50 <sav_ctx_init+0xb4>
   11d38:	b	11d24 <sav_ctx_init+0x188>
   11d3c:	.word	0x0000f7ff
   11d40:	.word	0x0000f7e4
   11d44:	.word	0x7fefffff

00011d48 <sav_compressed_row_bound>:
   11d48:	lsr	r3, r0, #3
   11d4c:	add	r3, r3, #8
   11d50:	bic	r3, r3, #7
   11d54:	add	r0, r3, r0
   11d58:	bx	lr

00011d5c <sav_compress_row>:
   11d5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d60:	mov	r8, #0
   11d64:	mov	r6, r0
   11d68:	mov	r9, r3
   11d6c:	mov	r5, r8
   11d70:	mov	r4, #8
   11d74:	mov	r7, r8
   11d78:	vpush	{d8-d9}
   11d7c:	sub	sp, sp, #28
   11d80:	vldr	d8, [pc, #448]	; 11f48 <sav_compress_row+0x1ec>
   11d84:	str	r8, [r0]
   11d88:	vldr	d9, [pc, #448]	; 11f50 <sav_compress_row+0x1f4>
   11d8c:	str	r1, [sp]
   11d90:	str	r8, [r0, #4]
   11d94:	ldr	r3, [r9, #28]
   11d98:	cmp	r3, r8
   11d9c:	bgt	11dc4 <sav_compress_row+0x68>
   11da0:	ldrd	r2, [r9, #80]	; 0x50
   11da4:	mov	r0, r4
   11da8:	add	r3, r3, #1
   11dac:	cmp	r3, r2
   11db0:	mvneq	r3, #3
   11db4:	strbeq	r3, [r6, r5]
   11db8:	add	sp, sp, #28
   11dbc:	vpop	{d8-d9}
   11dc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11dc4:	mov	r1, r8
   11dc8:	mov	r0, r9
   11dcc:	bl	439c <readstat_get_variable@plt>
   11dd0:	ldr	r3, [r0]
   11dd4:	cmp	r3, #0
   11dd8:	bne	11e7c <sav_compress_row+0x120>
   11ddc:	ldr	r2, [pc, #372]	; 11f58 <sav_compress_row+0x1fc>
   11de0:	ldr	r3, [r0, #1596]	; 0x63c
   11de4:	add	r2, pc, r2
   11de8:	mov	fp, r2
   11dec:	add	r3, r7, r3
   11df0:	cmp	r7, r3
   11df4:	bne	11e00 <sav_compress_row+0xa4>
   11df8:	add	r8, r8, #1
   11dfc:	b	11d94 <sav_compress_row+0x38>
   11e00:	str	r3, [sp, #4]
   11e04:	mov	r1, fp
   11e08:	mov	r2, #8
   11e0c:	ldr	r3, [sp]
   11e10:	add	sl, r3, r7
   11e14:	mov	r0, sl
   11e18:	bl	3fb8 <memcmp@plt>
   11e1c:	cmp	r0, #0
   11e20:	add	r2, r6, r5
   11e24:	ldr	r3, [sp, #4]
   11e28:	mvneq	r1, #1
   11e2c:	add	r5, r5, #1
   11e30:	strbeq	r1, [r2]
   11e34:	beq	11e58 <sav_compress_row+0xfc>
   11e38:	mvn	r1, #2
   11e3c:	strb	r1, [r2]
   11e40:	add	r1, r6, r4
   11e44:	ldr	r2, [sl]
   11e48:	str	r2, [r6, r4]
   11e4c:	add	r4, r4, #8
   11e50:	ldr	r2, [sl, #4]
   11e54:	str	r2, [r1, #4]
   11e58:	ands	r2, r5, #7
   11e5c:	bne	11e74 <sav_compress_row+0x118>
   11e60:	add	r1, r6, r4
   11e64:	mov	r5, r4
   11e68:	str	r2, [r6, r4]
   11e6c:	add	r4, r4, #8
   11e70:	str	r2, [r1, #4]
   11e74:	add	r7, r7, #8
   11e78:	b	11df0 <sav_compress_row+0x94>
   11e7c:	ldr	r3, [sp]
   11e80:	mvn	fp, #1048576	; 0x100000
   11e84:	mvn	sl, #0
   11e88:	add	lr, r6, r5
   11e8c:	add	r5, r5, #1
   11e90:	add	ip, r3, r7
   11e94:	add	r3, sp, #8
   11e98:	ldr	r0, [ip]
   11e9c:	ldr	r1, [ip, #4]
   11ea0:	stmia	r3!, {r0, r1}
   11ea4:	ldrd	r2, [sp, #8]
   11ea8:	cmp	r3, fp
   11eac:	cmpeq	r2, sl
   11eb0:	mvneq	r3, #0
   11eb4:	beq	11ef8 <sav_compress_row+0x19c>
   11eb8:	add	r3, sp, #16
   11ebc:	stmia	r3!, {r0, r1}
   11ec0:	vldr	d6, [sp, #16]
   11ec4:	vcmpe.f64	d6, d8
   11ec8:	vmrs	APSR_nzcv, fpscr
   11ecc:	ble	11f20 <sav_compress_row+0x1c4>
   11ed0:	vcmpe.f64	d6, d9
   11ed4:	vmrs	APSR_nzcv, fpscr
   11ed8:	bpl	11f20 <sav_compress_row+0x1c4>
   11edc:	vcvt.s32.f64	s15, d6
   11ee0:	vcvt.f64.s32	d5, s15
   11ee4:	vcmp.f64	d6, d5
   11ee8:	vmrs	APSR_nzcv, fpscr
   11eec:	bne	11f20 <sav_compress_row+0x1c4>
   11ef0:	vmov	r3, s15
   11ef4:	add	r3, r3, #100	; 0x64
   11ef8:	strb	r3, [lr]
   11efc:	ands	r3, r5, #7
   11f00:	bne	11f18 <sav_compress_row+0x1bc>
   11f04:	add	r2, r6, r4
   11f08:	mov	r5, r4
   11f0c:	str	r3, [r6, r4]
   11f10:	add	r4, r4, #8
   11f14:	str	r3, [r2, #4]
   11f18:	add	r7, r7, #8
   11f1c:	b	11df8 <sav_compress_row+0x9c>
   11f20:	mvn	r3, #2
   11f24:	add	r2, r6, r4
   11f28:	strb	r3, [lr]
   11f2c:	ldr	r3, [ip]
   11f30:	str	r3, [r6, r4]
   11f34:	add	r4, r4, #8
   11f38:	ldr	r3, [ip, #4]
   11f3c:	str	r3, [r2, #4]
   11f40:	b	11efc <sav_compress_row+0x1a0>
   11f44:	nop	{0}
   11f48:	.word	0x00000000
   11f4c:	.word	0xc0590000
   11f50:	.word	0x00000000
   11f54:	.word	0x40630000
   11f58:	.word	0x0000f5ed

00011f5c <sav_decompress_row>:
   11f5c:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   11f60:	mov	r4, r0
   11f64:	ldr	r3, [r4, #44]	; 0x2c
   11f68:	ldrd	r0, [r0, #16]
   11f6c:	cmp	r3, #0
   11f70:	beq	11f78 <sav_decompress_row+0x1c>
   11f74:	bl	3d90 <byteswap8@plt>
   11f78:	ldr	r5, [r4, #40]	; 0x28
   11f7c:	mov	r7, sp
   11f80:	strd	r0, [sp, #8]
   11f84:	ldr	r6, [pc, #376]	; 12104 <sav_decompress_row+0x1a8>
   11f88:	rsb	r5, r5, #8
   11f8c:	cmp	r5, #8
   11f90:	bne	11fd4 <sav_decompress_row+0x78>
   11f94:	ldr	r2, [r4, #4]
   11f98:	cmp	r2, #7
   11f9c:	bhi	11fa8 <sav_decompress_row+0x4c>
   11fa0:	mov	r3, #0
   11fa4:	b	12084 <sav_decompress_row+0x128>
   11fa8:	mov	r1, r4
   11fac:	sub	r2, r2, #8
   11fb0:	ldr	r3, [r1], #32
   11fb4:	mov	r5, #0
   11fb8:	ldr	r0, [r3]
   11fbc:	add	r3, r3, #8
   11fc0:	str	r0, [r4, #32]
   11fc4:	ldr	r0, [r3, #-4]
   11fc8:	str	r0, [r1, #4]
   11fcc:	str	r3, [r4]
   11fd0:	str	r2, [r4, #4]
   11fd4:	add	r8, r4, #32
   11fd8:	cmp	r5, #7
   11fdc:	bgt	11f8c <sav_decompress_row+0x30>
   11fe0:	ldrb	r3, [r8, r5]
   11fe4:	cmp	r3, #253	; 0xfd
   11fe8:	beq	12098 <sav_decompress_row+0x13c>
   11fec:	bhi	12034 <sav_decompress_row+0xd8>
   11ff0:	cmp	r3, #0
   11ff4:	beq	120ec <sav_decompress_row+0x190>
   11ff8:	cmp	r3, #252	; 0xfc
   11ffc:	beq	12080 <sav_decompress_row+0x124>
   12000:	vmov	s15, r3
   12004:	ldr	r3, [r4, #44]	; 0x2c
   12008:	cmp	r3, #0
   1200c:	vcvt.f64.s32	d0, s15
   12010:	vldr	d7, [r4, #24]
   12014:	vsub.f64	d0, d0, d7
   12018:	vstr	d0, [sp]
   1201c:	beq	12024 <sav_decompress_row+0xc8>
   12020:	bl	4528 <byteswap_double@plt>
   12024:	mov	r3, r7
   12028:	vstr	d0, [sp]
   1202c:	ldr	r2, [r4, #8]
   12030:	b	12058 <sav_decompress_row+0xfc>
   12034:	cmp	r3, #254	; 0xfe
   12038:	ldreq	r3, [r4, #8]
   1203c:	streq	r6, [r3]
   12040:	streq	r6, [r3, #4]
   12044:	beq	12064 <sav_decompress_row+0x108>
   12048:	cmp	r3, #255	; 0xff
   1204c:	addeq	r3, sp, #8
   12050:	ldreq	r2, [r4, #8]
   12054:	bne	12000 <sav_decompress_row+0xa4>
   12058:	ldm	r3!, {r0, r1}
   1205c:	str	r0, [r2]
   12060:	str	r1, [r2, #4]
   12064:	ldr	r3, [r4, #8]
   12068:	add	r3, r3, #8
   1206c:	str	r3, [r4, #8]
   12070:	ldr	r3, [r4, #12]
   12074:	sub	r3, r3, #8
   12078:	str	r3, [r4, #12]
   1207c:	b	120ec <sav_decompress_row+0x190>
   12080:	mov	r3, #3
   12084:	rsb	r5, r5, #8
   12088:	str	r5, [r4, #40]	; 0x28
   1208c:	str	r3, [r4, #48]	; 0x30
   12090:	add	sp, sp, #16
   12094:	pop	{r4, r5, r6, r7, r8, pc}
   12098:	ldr	r3, [r4, #4]
   1209c:	cmp	r3, #7
   120a0:	bls	11fa0 <sav_decompress_row+0x44>
   120a4:	ldr	r1, [r4]
   120a8:	ldr	r2, [r4, #8]
   120ac:	ldr	r3, [r1]
   120b0:	str	r3, [r2]
   120b4:	ldr	r3, [r1, #4]
   120b8:	str	r3, [r2, #4]
   120bc:	ldr	r3, [r4, #8]
   120c0:	add	r3, r3, #8
   120c4:	str	r3, [r4, #8]
   120c8:	ldr	r3, [r4, #12]
   120cc:	sub	r3, r3, #8
   120d0:	str	r3, [r4, #12]
   120d4:	ldr	r3, [r4]
   120d8:	add	r3, r3, #8
   120dc:	str	r3, [r4]
   120e0:	ldr	r3, [r4, #4]
   120e4:	sub	r3, r3, #8
   120e8:	str	r3, [r4, #4]
   120ec:	ldr	r3, [r4, #12]
   120f0:	add	r5, r5, #1
   120f4:	cmp	r3, #7
   120f8:	bhi	11fd8 <sav_decompress_row+0x7c>
   120fc:	mov	r3, #2
   12100:	b	12084 <sav_decompress_row+0x128>
   12104:	.word	0x20202020

00012108 <compare_key_varlookup>:
   12108:	b	3e14 <strcmp@plt>

0001210c <count_vars>:
   1210c:	push	{r4, r5, r6, r7, r8, lr}
   12110:	mov	r4, #0
   12114:	mov	r6, r0
   12118:	mov	r1, r4
   1211c:	mov	r5, r4
   12120:	ldr	r8, [r0, #340]	; 0x154
   12124:	cmp	r8, r5
   12128:	bgt	12134 <count_vars+0x28>
   1212c:	mov	r0, r4
   12130:	pop	{r4, r5, r6, r7, r8, pc}
   12134:	ldr	r3, [r6, #44]	; 0x2c
   12138:	cmp	r1, #0
   1213c:	ldr	r7, [r3, r5, lsl #2]
   12140:	beq	12158 <count_vars+0x4c>
   12144:	add	r1, r1, #187	; 0xbb
   12148:	add	r0, r7, #187	; 0xbb
   1214c:	bl	3e14 <strcmp@plt>
   12150:	cmp	r0, #0
   12154:	beq	1215c <count_vars+0x50>
   12158:	add	r4, r4, #1
   1215c:	add	r5, r5, #1
   12160:	mov	r1, r7
   12164:	b	12124 <count_vars+0x18>

00012168 <compare_varlookups>:
   12168:	b	3e14 <strcmp@plt>

0001216c <build_lookup_table>:
   1216c:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12170:	mov	r6, #40	; 0x28
   12174:	mov	sl, r0
   12178:	mov	fp, r1
   1217c:	mul	r0, r6, r0
   12180:	bl	4240 <readstat_malloc@plt>
   12184:	mov	r1, #0
   12188:	mov	r4, r0
   1218c:	mov	r5, r1
   12190:	mov	r8, r1
   12194:	ldr	r3, [fp, #340]	; 0x154
   12198:	cmp	r3, r5
   1219c:	bgt	121c4 <build_lookup_table+0x58>
   121a0:	ldr	r3, [pc, #124]	; 12224 <build_lookup_table+0xb8>
   121a4:	mov	r0, r4
   121a8:	mov	r2, #40	; 0x28
   121ac:	mov	r1, sl
   121b0:	add	r3, pc, r3
   121b4:	bl	445c <qsort@plt>
   121b8:	mov	r0, r4
   121bc:	add	sp, sp, #4
   121c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   121c4:	ldr	r3, [fp, #44]	; 0x2c
   121c8:	cmp	r1, #0
   121cc:	ldr	r9, [r3, r5, lsl #2]
   121d0:	add	r7, r9, #187	; 0xbb
   121d4:	beq	121ec <build_lookup_table+0x80>
   121d8:	add	r1, r1, #187	; 0xbb
   121dc:	mov	r0, r7
   121e0:	bl	3e14 <strcmp@plt>
   121e4:	cmp	r0, #0
   121e8:	beq	12218 <build_lookup_table+0xac>
   121ec:	ldr	r2, [r7]
   121f0:	mul	r1, r6, r8
   121f4:	add	r8, r8, #1
   121f8:	add	r3, r4, r1
   121fc:	str	r2, [r4, r1]
   12200:	ldr	r2, [r7, #4]
   12204:	str	r2, [r3, #4]
   12208:	ldrb	r2, [r7, #8]
   1220c:	strb	r2, [r3, #8]
   12210:	ldr	r2, [r9, #8]
   12214:	str	r2, [r3, #36]	; 0x24
   12218:	add	r5, r5, #1
   1221c:	mov	r1, r9
   12220:	b	12194 <build_lookup_table+0x28>
   12224:	.word	0xffffffb0

00012228 <sav_parse_long_variable_names_record>:
   12228:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1222c:	sub	sp, sp, #8320	; 0x2080
   12230:	mov	r6, r2
   12234:	sub	sp, sp, #20
   12238:	str	r0, [sp, #24]
   1223c:	mov	r0, r2
   12240:	str	r1, [sp, #36]	; 0x24
   12244:	bl	1210c <count_vars>
   12248:	ldr	r3, [sp, #24]
   1224c:	mov	r1, r6
   12250:	str	r0, [sp, #48]	; 0x30
   12254:	ldr	r2, [sp, #36]	; 0x24
   12258:	add	r3, r3, r2
   1225c:	str	r3, [sp, #32]
   12260:	bl	1216c <build_lookup_table>
   12264:	ldr	r3, [sp, #24]
   12268:	str	r0, [sp, #28]
   1226c:	ldr	r2, [sp, #32]
   12270:	cmp	r3, r2
   12274:	beq	126d0 <sav_parse_long_variable_names_record+0x4a8>
   12278:	ldr	r7, [pc, #1124]	; 126e4 <sav_parse_long_variable_names_record+0x4bc>
   1227c:	mov	r4, #0
   12280:	mov	r5, r3
   12284:	mov	r8, #1
   12288:	str	r4, [sp, #20]
   1228c:	add	r7, pc, r7
   12290:	add	fp, r7, #1488	; 0x5d0
   12294:	add	fp, fp, #9
   12298:	str	r7, [sp, #52]	; 0x34
   1229c:	lsl	r1, r8, #1
   122a0:	add	r3, r7, #496	; 0x1f0
   122a4:	ldrsh	r2, [r3, r1]
   122a8:	add	r3, r7, #648	; 0x288
   122ac:	ldrsh	r3, [r3, r1]
   122b0:	add	r1, r7, r8
   122b4:	ldrb	lr, [r1, #800]	; 0x320
   122b8:	add	r2, r7, r2
   122bc:	cmp	lr, #0
   122c0:	beq	123c0 <sav_parse_long_variable_names_record+0x198>
   122c4:	sub	ip, lr, #1
   122c8:	mov	r0, r2
   122cc:	add	ip, r2, ip
   122d0:	cmp	r0, ip
   122d4:	bhi	123b8 <sav_parse_long_variable_names_record+0x190>
   122d8:	sub	r9, ip, r0
   122dc:	ldrb	sl, [r5]
   122e0:	add	r1, r0, r9, asr #1
   122e4:	ldrb	r9, [r0, r9, asr #1]
   122e8:	cmp	sl, r9
   122ec:	subcc	ip, r1, #1
   122f0:	bcc	122d0 <sav_parse_long_variable_names_record+0xa8>
   122f4:	addhi	r0, r1, #1
   122f8:	bhi	122d0 <sav_parse_long_variable_names_record+0xa8>
   122fc:	sub	r2, r1, r2
   12300:	add	r3, r3, r2
   12304:	ldr	r2, [sp, #52]	; 0x34
   12308:	add	r3, r2, r3
   1230c:	ldrb	r3, [r3, #952]	; 0x3b8
   12310:	add	r3, r2, r3
   12314:	ldrb	r8, [r3, #1347]	; 0x543
   12318:	ldrb	r3, [r3, #1422]	; 0x58e
   1231c:	cmp	r3, #0
   12320:	beq	12358 <sav_parse_long_variable_names_record+0x130>
   12324:	add	r2, fp, r3
   12328:	ldrb	sl, [fp, r3]
   1232c:	add	r3, sp, #80	; 0x50
   12330:	add	r2, r2, #1
   12334:	str	r3, [sp, #40]	; 0x28
   12338:	sub	r3, r3, #4
   1233c:	str	r2, [sp, #44]	; 0x2c
   12340:	str	r3, [sp, #56]	; 0x38
   12344:	ldr	r3, [pc, #924]	; 126e8 <sav_parse_long_variable_names_record+0x4c0>
   12348:	add	r3, pc, r3
   1234c:	str	r3, [sp, #60]	; 0x3c
   12350:	subs	sl, sl, #1
   12354:	bcs	12434 <sav_parse_long_variable_names_record+0x20c>
   12358:	cmp	r8, #0
   1235c:	beq	125d4 <sav_parse_long_variable_names_record+0x3ac>
   12360:	ldr	r3, [sp, #32]
   12364:	add	r5, r5, #1
   12368:	cmp	r3, r5
   1236c:	bne	1229c <sav_parse_long_variable_names_record+0x74>
   12370:	ldr	r3, [pc, #884]	; 126ec <sav_parse_long_variable_names_record+0x4c4>
   12374:	add	sl, sp, #80	; 0x50
   12378:	add	r3, pc, r3
   1237c:	add	r2, r3, r8
   12380:	ldrb	r2, [r2, #1509]	; 0x5e5
   12384:	add	r7, r3, r2
   12388:	add	r3, r3, r2
   1238c:	ldrb	r3, [r3, #1497]	; 0x5d9
   12390:	add	r7, r7, #1488	; 0x5d0
   12394:	add	r7, r7, #10
   12398:	add	r3, r7, r3
   1239c:	str	r3, [sp, #44]	; 0x2c
   123a0:	sub	r3, sl, #4
   123a4:	str	r3, [sp, #40]	; 0x28
   123a8:	ldr	r3, [pc, #832]	; 126f0 <sav_parse_long_variable_names_record+0x4c8>
   123ac:	add	r3, pc, r3
   123b0:	str	r3, [sp, #52]	; 0x34
   123b4:	b	125c8 <sav_parse_long_variable_names_record+0x3a0>
   123b8:	add	r2, r2, lr
   123bc:	add	r3, r3, lr
   123c0:	ldr	r1, [pc, #812]	; 126f4 <sav_parse_long_variable_names_record+0x4cc>
   123c4:	add	r1, pc, r1
   123c8:	add	r8, r1, r8
   123cc:	ldrb	r8, [r8, #876]	; 0x36c
   123d0:	cmp	r8, #0
   123d4:	beq	12304 <sav_parse_long_variable_names_record+0xdc>
   123d8:	add	lr, r2, r8, lsl #1
   123dc:	mov	ip, r2
   123e0:	sub	lr, lr, #2
   123e4:	cmp	ip, lr
   123e8:	bhi	1242c <sav_parse_long_variable_names_record+0x204>
   123ec:	sub	r0, lr, ip
   123f0:	ldrb	r9, [r5]
   123f4:	asr	r0, r0, #1
   123f8:	bic	r0, r0, #1
   123fc:	add	r1, ip, r0
   12400:	ldrb	r0, [ip, r0]
   12404:	cmp	r0, r9
   12408:	subhi	lr, r1, #2
   1240c:	bhi	123e4 <sav_parse_long_variable_names_record+0x1bc>
   12410:	ldrb	r0, [r1, #1]
   12414:	cmp	r0, r9
   12418:	addcc	ip, r1, #2
   1241c:	bcc	123e4 <sav_parse_long_variable_names_record+0x1bc>
   12420:	sub	r2, r1, r2
   12424:	add	r3, r3, r2, asr #1
   12428:	b	12304 <sav_parse_long_variable_names_record+0xdc>
   1242c:	add	r3, r3, r8
   12430:	b	12304 <sav_parse_long_variable_names_record+0xdc>
   12434:	ldr	r2, [sp, #44]	; 0x2c
   12438:	ldrb	r3, [r2], #1
   1243c:	str	r2, [sp, #44]	; 0x2c
   12440:	cmp	r3, #6
   12444:	addls	pc, pc, r3, lsl #2
   12448:	b	12350 <sav_parse_long_variable_names_record+0x128>
   1244c:	b	12470 <sav_parse_long_variable_names_record+0x248>
   12450:	b	12504 <sav_parse_long_variable_names_record+0x2dc>
   12454:	b	1252c <sav_parse_long_variable_names_record+0x304>
   12458:	b	12468 <sav_parse_long_variable_names_record+0x240>
   1245c:	b	12550 <sav_parse_long_variable_names_record+0x328>
   12460:	b	12468 <sav_parse_long_variable_names_record+0x240>
   12464:	b	12550 <sav_parse_long_variable_names_record+0x328>
   12468:	str	r5, [sp, #20]
   1246c:	b	12350 <sav_parse_long_variable_names_record+0x128>
   12470:	ldr	r1, [sp, #28]
   12474:	ldr	r3, [sp, #40]	; 0x28
   12478:	ldr	r2, [sp, #48]	; 0x30
   1247c:	sub	r9, r3, #16
   12480:	ldr	r3, [sp, #60]	; 0x3c
   12484:	mov	r0, r9
   12488:	str	r3, [sp]
   1248c:	mov	r3, #40	; 0x28
   12490:	bl	42c4 <bsearch@plt>
   12494:	cmp	r0, #0
   12498:	beq	124c8 <sav_parse_long_variable_names_record+0x2a0>
   1249c:	ldr	r2, [r0, #36]	; 0x24
   124a0:	ldr	r3, [r6, #44]	; 0x2c
   124a4:	ldr	r1, [sp, #56]	; 0x38
   124a8:	ldr	r9, [r3, r2, lsl #2]
   124ac:	mov	r2, r4
   124b0:	add	r0, r9, #196	; 0xc4
   124b4:	add	r9, r9, r4
   124b8:	bl	3f34 <memcpy@plt>
   124bc:	mov	r3, #0
   124c0:	strb	r3, [r9, #196]	; 0xc4
   124c4:	b	12350 <sav_parse_long_variable_names_record+0x128>
   124c8:	ldr	r3, [r6, #24]
   124cc:	cmp	r3, #0
   124d0:	beq	12350 <sav_parse_long_variable_names_record+0x128>
   124d4:	ldr	r2, [pc, #540]	; 126f8 <sav_parse_long_variable_names_record+0x4d0>
   124d8:	mov	r3, r9
   124dc:	add	r9, sp, #144	; 0x90
   124e0:	mov	r1, #8192	; 0x2000
   124e4:	mov	r0, r9
   124e8:	add	r2, pc, r2
   124ec:	bl	4294 <snprintf@plt>
   124f0:	mov	r0, r9
   124f4:	ldr	r3, [r6, #24]
   124f8:	ldr	r1, [r6, #40]	; 0x28
   124fc:	blx	r3
   12500:	b	12350 <sav_parse_long_variable_names_record+0x128>
   12504:	mov	r2, r4
   12508:	ldr	r1, [sp, #20]
   1250c:	ldr	r3, [sp, #40]	; 0x28
   12510:	sub	r0, r3, #16
   12514:	bl	3f34 <memcpy@plt>
   12518:	add	r3, sp, #144	; 0x90
   1251c:	mov	r2, #0
   12520:	add	r3, r3, r4
   12524:	strb	r2, [r3, #-80]	; 0xffffffb0
   12528:	b	12350 <sav_parse_long_variable_names_record+0x128>
   1252c:	mov	r2, r4
   12530:	ldr	r1, [sp, #20]
   12534:	ldr	r0, [sp, #56]	; 0x38
   12538:	bl	3f34 <memcpy@plt>
   1253c:	add	r3, sp, #144	; 0x90
   12540:	mov	r2, #0
   12544:	add	r3, r3, r4
   12548:	strb	r2, [r3, #-68]	; 0xffffffbc
   1254c:	b	12350 <sav_parse_long_variable_names_record+0x128>
   12550:	ldr	r3, [sp, #20]
   12554:	sub	r4, r5, r3
   12558:	b	12350 <sav_parse_long_variable_names_record+0x128>
   1255c:	ldrb	r9, [r7], #1
   12560:	cmp	r9, #2
   12564:	beq	126ac <sav_parse_long_variable_names_record+0x484>
   12568:	cmp	r9, #6
   1256c:	ldreq	r3, [sp, #20]
   12570:	subeq	r4, r5, r3
   12574:	beq	125c8 <sav_parse_long_variable_names_record+0x3a0>
   12578:	cmp	r9, #0
   1257c:	bne	125c8 <sav_parse_long_variable_names_record+0x3a0>
   12580:	sub	fp, sl, #16
   12584:	ldr	r1, [sp, #28]
   12588:	mov	r0, fp
   1258c:	ldrd	r2, [sp, #48]	; 0x30
   12590:	str	r3, [sp]
   12594:	mov	r3, #40	; 0x28
   12598:	bl	42c4 <bsearch@plt>
   1259c:	cmp	r0, #0
   125a0:	beq	12670 <sav_parse_long_variable_names_record+0x448>
   125a4:	ldr	r2, [r0, #36]	; 0x24
   125a8:	ldr	r3, [r6, #44]	; 0x2c
   125ac:	ldr	r1, [sp, #40]	; 0x28
   125b0:	ldr	fp, [r3, r2, lsl #2]
   125b4:	mov	r2, r4
   125b8:	add	r0, fp, #196	; 0xc4
   125bc:	add	fp, fp, r4
   125c0:	bl	3f34 <memcpy@plt>
   125c4:	strb	r9, [fp, #196]	; 0xc4
   125c8:	ldr	r3, [sp, #44]	; 0x2c
   125cc:	cmp	r7, r3
   125d0:	bne	1255c <sav_parse_long_variable_names_record+0x334>
   125d4:	ldr	r3, [sp, #32]
   125d8:	subs	r3, r5, r3
   125dc:	movne	r3, #1
   125e0:	cmp	r8, #10
   125e4:	movgt	r8, r3
   125e8:	orrle	r8, r3, #1
   125ec:	cmp	r8, #0
   125f0:	beq	1264c <sav_parse_long_variable_names_record+0x424>
   125f4:	ldr	r3, [r6, #24]
   125f8:	cmp	r3, #0
   125fc:	beq	12648 <sav_parse_long_variable_names_record+0x420>
   12600:	ldrb	r3, [r5]
   12604:	add	r4, sp, #144	; 0x90
   12608:	mov	r1, #8192	; 0x2000
   1260c:	mov	r0, r4
   12610:	ldr	r2, [pc, #228]	; 126fc <sav_parse_long_variable_names_record+0x4d4>
   12614:	str	r3, [sp, #12]
   12618:	ldr	r3, [sp, #36]	; 0x24
   1261c:	add	r2, pc, r2
   12620:	str	r3, [sp, #8]
   12624:	ldr	r3, [sp, #24]
   12628:	sub	r5, r5, r3
   1262c:	stm	sp, {r3, r5}
   12630:	ldr	r3, [sp, #36]	; 0x24
   12634:	bl	4294 <snprintf@plt>
   12638:	mov	r0, r4
   1263c:	ldr	r3, [r6, #24]
   12640:	ldr	r1, [r6, #40]	; 0x28
   12644:	blx	r3
   12648:	mov	r8, #5
   1264c:	ldr	r3, [sp, #28]
   12650:	cmp	r3, #0
   12654:	beq	12660 <sav_parse_long_variable_names_record+0x438>
   12658:	mov	r0, r3
   1265c:	bl	3ed4 <free@plt>
   12660:	mov	r0, r8
   12664:	add	sp, sp, #8320	; 0x2080
   12668:	add	sp, sp, #20
   1266c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12670:	ldr	r3, [r6, #24]
   12674:	cmp	r3, #0
   12678:	beq	125c8 <sav_parse_long_variable_names_record+0x3a0>
   1267c:	ldr	r2, [pc, #124]	; 12700 <sav_parse_long_variable_names_record+0x4d8>
   12680:	add	r9, sp, #144	; 0x90
   12684:	mov	r3, fp
   12688:	mov	r1, #8192	; 0x2000
   1268c:	mov	r0, r9
   12690:	add	r2, pc, r2
   12694:	bl	4294 <snprintf@plt>
   12698:	mov	r0, r9
   1269c:	ldr	r3, [r6, #24]
   126a0:	ldr	r1, [r6, #40]	; 0x28
   126a4:	blx	r3
   126a8:	b	125c8 <sav_parse_long_variable_names_record+0x3a0>
   126ac:	mov	r2, r4
   126b0:	ldr	r1, [sp, #20]
   126b4:	ldr	r0, [sp, #40]	; 0x28
   126b8:	bl	3f34 <memcpy@plt>
   126bc:	add	r3, sp, #144	; 0x90
   126c0:	mov	r2, #0
   126c4:	add	r3, r3, r4
   126c8:	strb	r2, [r3, #-68]	; 0xffffffbc
   126cc:	b	125c8 <sav_parse_long_variable_names_record+0x3a0>
   126d0:	mov	r4, #0
   126d4:	mov	r8, #1
   126d8:	ldr	r5, [sp, #24]
   126dc:	str	r4, [sp, #20]
   126e0:	b	12370 <sav_parse_long_variable_names_record+0x148>
   126e4:	.word	0x0000f14e
   126e8:	.word	0xfffffdb8
   126ec:	.word	0x0000f062
   126f0:	.word	0xfffffd54
   126f4:	.word	0x0000f016
   126f8:	.word	0x0000f64f
   126fc:	.word	0x0000f52d
   12700:	.word	0x0000f4a7

00012704 <sav_parse_very_long_string_record>:
   12704:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12708:	sub	sp, sp, #108	; 0x6c
   1270c:	mov	r7, r0
   12710:	mov	r0, r2
   12714:	mov	r6, r2
   12718:	mov	r4, r7
   1271c:	mov	r5, #1
   12720:	str	r1, [sp, #32]
   12724:	bl	1210c <count_vars>
   12728:	ldr	r3, [sp, #32]
   1272c:	str	r0, [sp, #40]	; 0x28
   12730:	add	r3, r3, #1024	; 0x400
   12734:	str	r3, [sp, #44]	; 0x2c
   12738:	ldr	r3, [sp, #32]
   1273c:	ldr	r0, [sp, #44]	; 0x2c
   12740:	add	r3, r7, r3
   12744:	str	r3, [sp, #16]
   12748:	bl	4240 <readstat_malloc@plt>
   1274c:	mov	r1, r6
   12750:	str	r0, [sp, #20]
   12754:	ldr	r0, [sp, #40]	; 0x28
   12758:	bl	1216c <build_lookup_table>
   1275c:	ldr	r3, [sp, #16]
   12760:	str	r0, [sp, #28]
   12764:	cmp	r7, r3
   12768:	beq	129a0 <sav_parse_very_long_string_record+0x29c>
   1276c:	ldr	r3, [pc, #736]	; 12a54 <sav_parse_very_long_string_record+0x350>
   12770:	mov	r8, #0
   12774:	mov	r9, r8
   12778:	str	r8, [sp, #24]
   1277c:	add	r3, pc, r3
   12780:	str	r3, [sp, #48]	; 0x30
   12784:	add	r3, r3, #1584	; 0x630
   12788:	add	r3, r3, r5
   1278c:	str	r3, [sp, #36]	; 0x24
   12790:	ldr	r3, [pc, #704]	; 12a58 <sav_parse_very_long_string_record+0x354>
   12794:	add	r3, pc, r3
   12798:	str	r3, [sp, #60]	; 0x3c
   1279c:	ldr	r3, [sp, #48]	; 0x30
   127a0:	add	r1, r3, r5
   127a4:	ldr	r3, [sp, #36]	; 0x24
   127a8:	ldrb	lr, [r1, #1732]	; 0x6c4
   127ac:	ldrb	r2, [r1, #1704]	; 0x6a8
   127b0:	cmp	lr, #0
   127b4:	add	r2, r3, r2
   127b8:	ldrb	r3, [r1, #1718]	; 0x6b6
   127bc:	beq	12878 <sav_parse_very_long_string_record+0x174>
   127c0:	sub	ip, lr, #1
   127c4:	mov	r0, r2
   127c8:	add	ip, r2, ip
   127cc:	cmp	r0, ip
   127d0:	bhi	12870 <sav_parse_very_long_string_record+0x16c>
   127d4:	sub	sl, ip, r0
   127d8:	ldrb	fp, [r4]
   127dc:	add	r1, r0, sl, asr #1
   127e0:	ldrb	sl, [r0, sl, asr #1]
   127e4:	cmp	fp, sl
   127e8:	subcc	ip, r1, #1
   127ec:	bcc	127cc <sav_parse_very_long_string_record+0xc8>
   127f0:	addhi	r0, r1, #1
   127f4:	bhi	127cc <sav_parse_very_long_string_record+0xc8>
   127f8:	sub	r2, r1, r2
   127fc:	add	r3, r3, r2
   12800:	ldr	r2, [pc, #596]	; 12a5c <sav_parse_very_long_string_record+0x358>
   12804:	add	r2, pc, r2
   12808:	add	r3, r2, r3
   1280c:	ldrb	r3, [r3, #1760]	; 0x6e0
   12810:	add	r3, r2, r3
   12814:	ldrb	r5, [r3, #1842]	; 0x732
   12818:	ldrb	r3, [r3, #1857]	; 0x741
   1281c:	cmp	r3, #0
   12820:	beq	12854 <sav_parse_very_long_string_record+0x150>
   12824:	add	r2, r2, #1872	; 0x750
   12828:	mov	fp, #10
   1282c:	add	sl, r2, r3
   12830:	ldrb	r3, [r2, r3]
   12834:	add	r3, r3, sl
   12838:	str	r3, [sp, #52]	; 0x34
   1283c:	ldr	r3, [pc, #540]	; 12a60 <sav_parse_very_long_string_record+0x35c>
   12840:	add	r3, pc, r3
   12844:	str	r3, [sp, #56]	; 0x38
   12848:	ldr	r3, [sp, #52]	; 0x34
   1284c:	cmp	r3, sl
   12850:	bne	128e8 <sav_parse_very_long_string_record+0x1e4>
   12854:	cmp	r5, #0
   12858:	beq	129a0 <sav_parse_very_long_string_record+0x29c>
   1285c:	ldr	r3, [sp, #16]
   12860:	add	r4, r4, #1
   12864:	cmp	r3, r4
   12868:	bne	1279c <sav_parse_very_long_string_record+0x98>
   1286c:	b	129a0 <sav_parse_very_long_string_record+0x29c>
   12870:	add	r2, r2, lr
   12874:	add	r3, r3, lr
   12878:	ldr	r1, [sp, #60]	; 0x3c
   1287c:	add	r5, r1, r5
   12880:	ldrb	r5, [r5, #1746]	; 0x6d2
   12884:	cmp	r5, #0
   12888:	beq	12800 <sav_parse_very_long_string_record+0xfc>
   1288c:	add	lr, r2, r5, lsl #1
   12890:	mov	ip, r2
   12894:	sub	lr, lr, #2
   12898:	cmp	ip, lr
   1289c:	bhi	128e0 <sav_parse_very_long_string_record+0x1dc>
   128a0:	sub	r0, lr, ip
   128a4:	ldrb	sl, [r4]
   128a8:	asr	r0, r0, #1
   128ac:	bic	r0, r0, #1
   128b0:	add	r1, ip, r0
   128b4:	ldrb	r0, [ip, r0]
   128b8:	cmp	r0, sl
   128bc:	subhi	lr, r1, #2
   128c0:	bhi	12898 <sav_parse_very_long_string_record+0x194>
   128c4:	ldrb	r0, [r1, #1]
   128c8:	cmp	r0, sl
   128cc:	addcc	ip, r1, #2
   128d0:	bcc	12898 <sav_parse_very_long_string_record+0x194>
   128d4:	sub	r2, r1, r2
   128d8:	add	r3, r3, r2, asr #1
   128dc:	b	12800 <sav_parse_very_long_string_record+0xfc>
   128e0:	add	r3, r3, r5
   128e4:	b	12800 <sav_parse_very_long_string_record+0xfc>
   128e8:	ldrb	r3, [sl, #1]!
   128ec:	cmp	r3, #5
   128f0:	addls	pc, pc, r3, lsl #2
   128f4:	b	12848 <sav_parse_very_long_string_record+0x144>
   128f8:	b	12918 <sav_parse_very_long_string_record+0x214>
   128fc:	b	12950 <sav_parse_very_long_string_record+0x24c>
   12900:	b	12974 <sav_parse_very_long_string_record+0x270>
   12904:	b	12910 <sav_parse_very_long_string_record+0x20c>
   12908:	b	12a40 <sav_parse_very_long_string_record+0x33c>
   1290c:	b	12a4c <sav_parse_very_long_string_record+0x348>
   12910:	str	r4, [sp, #24]
   12914:	b	12848 <sav_parse_very_long_string_record+0x144>
   12918:	add	r0, sp, #68	; 0x44
   1291c:	ldr	r1, [sp, #28]
   12920:	ldr	r3, [sp, #56]	; 0x38
   12924:	ldr	r2, [sp, #40]	; 0x28
   12928:	str	r3, [sp]
   1292c:	mov	r3, #40	; 0x28
   12930:	bl	42c4 <bsearch@plt>
   12934:	cmp	r0, #0
   12938:	beq	12848 <sav_parse_very_long_string_record+0x144>
   1293c:	ldr	r2, [r0, #36]	; 0x24
   12940:	ldr	r3, [r6, #44]	; 0x2c
   12944:	ldr	r3, [r3, r2, lsl #2]
   12948:	str	r9, [r3, #20]
   1294c:	b	12848 <sav_parse_very_long_string_record+0x144>
   12950:	mov	r2, r8
   12954:	add	r0, sp, #68	; 0x44
   12958:	ldr	r1, [sp, #24]
   1295c:	bl	3f34 <memcpy@plt>
   12960:	add	r3, sp, #104	; 0x68
   12964:	mov	r2, #0
   12968:	add	r3, r3, r8
   1296c:	strb	r2, [r3, #-36]	; 0xffffffdc
   12970:	b	12848 <sav_parse_very_long_string_record+0x144>
   12974:	ldrb	r3, [r4]
   12978:	cmp	r3, #0
   1297c:	beq	12848 <sav_parse_very_long_string_record+0x144>
   12980:	sub	r3, r3, #48	; 0x30
   12984:	uxtb	r3, r3
   12988:	mvn	r2, r3
   1298c:	udiv	r2, r2, fp
   12990:	cmp	r2, r9
   12994:	mlacs	r9, fp, r9, r3
   12998:	bcs	12848 <sav_parse_very_long_string_record+0x144>
   1299c:	add	r4, r4, #1
   129a0:	ldr	r3, [sp, #16]
   129a4:	subs	r3, r4, r3
   129a8:	movne	r3, #1
   129ac:	cmp	r5, #11
   129b0:	movgt	r5, r3
   129b4:	orrle	r5, r3, #1
   129b8:	cmp	r5, #0
   129bc:	beq	12a0c <sav_parse_very_long_string_record+0x308>
   129c0:	ldr	r3, [r6, #24]
   129c4:	cmp	r3, #0
   129c8:	beq	12a08 <sav_parse_very_long_string_record+0x304>
   129cc:	ldr	r3, [sp, #16]
   129d0:	ldr	r2, [pc, #140]	; 12a64 <sav_parse_very_long_string_record+0x360>
   129d4:	ldr	r0, [sp, #20]
   129d8:	sub	r3, r3, r4
   129dc:	ldr	r1, [sp, #44]	; 0x2c
   129e0:	stmib	sp, {r3, r4}
   129e4:	add	r2, pc, r2
   129e8:	ldr	r3, [sp, #32]
   129ec:	str	r3, [sp]
   129f0:	sub	r3, r4, r7
   129f4:	bl	4294 <snprintf@plt>
   129f8:	ldr	r0, [sp, #20]
   129fc:	ldr	r3, [r6, #24]
   12a00:	ldr	r1, [r6, #40]	; 0x28
   12a04:	blx	r3
   12a08:	mov	r5, #5
   12a0c:	ldr	r3, [sp, #28]
   12a10:	cmp	r3, #0
   12a14:	beq	12a20 <sav_parse_very_long_string_record+0x31c>
   12a18:	mov	r0, r3
   12a1c:	bl	3ed4 <free@plt>
   12a20:	ldr	r3, [sp, #20]
   12a24:	cmp	r3, #0
   12a28:	beq	12a34 <sav_parse_very_long_string_record+0x330>
   12a2c:	mov	r0, r3
   12a30:	bl	3ed4 <free@plt>
   12a34:	mov	r0, r5
   12a38:	add	sp, sp, #108	; 0x6c
   12a3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a40:	ldr	r3, [sp, #24]
   12a44:	sub	r8, r4, r3
   12a48:	b	12848 <sav_parse_very_long_string_record+0x144>
   12a4c:	mov	r9, #0
   12a50:	b	12848 <sav_parse_very_long_string_record+0x144>
   12a54:	.word	0x0000ec5e
   12a58:	.word	0x0000ec46
   12a5c:	.word	0x0000ebd6
   12a60:	.word	0xfffff8c0
   12a64:	.word	0x0000f1a3

00012a68 <sav_parse_time>:
   12a68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a6c:	sub	sp, sp, #8192	; 0x2000
   12a70:	add	fp, r0, r1
   12a74:	sub	sp, sp, #36	; 0x24
   12a78:	cmp	r0, fp
   12a7c:	mov	ip, #0
   12a80:	mov	r4, #1
   12a84:	str	r2, [sp, #8]
   12a88:	str	r1, [sp, #12]
   12a8c:	str	r3, [sp, #16]
   12a90:	mov	r3, r0
   12a94:	beq	12b58 <sav_parse_time+0xf0>
   12a98:	ldr	r1, [pc, #584]	; 12ce8 <sav_parse_time+0x280>
   12a9c:	ldr	r8, [pc, #584]	; 12cec <sav_parse_time+0x284>
   12aa0:	add	r1, pc, r1
   12aa4:	add	r8, pc, r8
   12aa8:	str	r1, [sp, #28]
   12aac:	add	r1, r8, #130	; 0x82
   12ab0:	str	r1, [sp, #20]
   12ab4:	str	r8, [sp, #24]
   12ab8:	add	r5, r8, r4
   12abc:	ldrb	r9, [r5, #50]	; 0x32
   12ac0:	ldrb	lr, [r5, #24]
   12ac4:	ldrb	r1, [r5, #37]	; 0x25
   12ac8:	cmp	r9, #0
   12acc:	add	lr, r8, lr
   12ad0:	beq	12b84 <sav_parse_time+0x11c>
   12ad4:	sub	r7, r9, #1
   12ad8:	mov	r6, lr
   12adc:	add	r7, lr, r7
   12ae0:	cmp	r6, r7
   12ae4:	bhi	12b7c <sav_parse_time+0x114>
   12ae8:	sub	sl, r7, r6
   12aec:	ldrb	r2, [r3]
   12af0:	add	r5, r6, sl, asr #1
   12af4:	ldrb	sl, [r6, sl, asr #1]
   12af8:	cmp	r2, sl
   12afc:	subcc	r7, r5, #1
   12b00:	bcc	12ae0 <sav_parse_time+0x78>
   12b04:	addhi	r6, r5, #1
   12b08:	bhi	12ae0 <sav_parse_time+0x78>
   12b0c:	sub	lr, r5, lr
   12b10:	add	r1, r1, lr
   12b14:	ldr	r2, [sp, #24]
   12b18:	add	r1, r2, r1
   12b1c:	ldrb	lr, [r1, #103]	; 0x67
   12b20:	ldrb	r4, [r1, #76]	; 0x4c
   12b24:	cmp	lr, #0
   12b28:	beq	12b44 <sav_parse_time+0xdc>
   12b2c:	ldr	r2, [sp, #20]
   12b30:	add	r1, r2, lr
   12b34:	ldrb	lr, [r2, lr]
   12b38:	add	r1, r1, #1
   12b3c:	subs	lr, lr, #1
   12b40:	bcs	12bf4 <sav_parse_time+0x18c>
   12b44:	cmp	r4, #0
   12b48:	beq	12c70 <sav_parse_time+0x208>
   12b4c:	add	r3, r3, #1
   12b50:	cmp	fp, r3
   12b54:	bne	12ab8 <sav_parse_time+0x50>
   12b58:	ldr	r1, [pc, #400]	; 12cf0 <sav_parse_time+0x288>
   12b5c:	add	r1, pc, r1
   12b60:	add	r5, r1, #130	; 0x82
   12b64:	add	r1, r1, r4
   12b68:	ldrb	lr, [r1, #144]	; 0x90
   12b6c:	add	r1, r5, lr
   12b70:	ldrb	lr, [r5, lr]
   12b74:	add	r1, r1, #1
   12b78:	b	12c68 <sav_parse_time+0x200>
   12b7c:	add	lr, lr, r9
   12b80:	add	r1, r1, r9
   12b84:	ldr	r2, [sp, #28]
   12b88:	add	r4, r2, r4
   12b8c:	ldrb	r9, [r4, #63]	; 0x3f
   12b90:	cmp	r9, #0
   12b94:	beq	12b14 <sav_parse_time+0xac>
   12b98:	add	r7, lr, r9, lsl #1
   12b9c:	mov	r6, lr
   12ba0:	sub	r7, r7, #2
   12ba4:	cmp	r6, r7
   12ba8:	bhi	12bec <sav_parse_time+0x184>
   12bac:	sub	r5, r7, r6
   12bb0:	ldrb	sl, [r3]
   12bb4:	asr	r5, r5, #1
   12bb8:	bic	r5, r5, #1
   12bbc:	add	r4, r6, r5
   12bc0:	ldrb	r5, [r6, r5]
   12bc4:	cmp	r5, sl
   12bc8:	subhi	r7, r4, #2
   12bcc:	bhi	12ba4 <sav_parse_time+0x13c>
   12bd0:	ldrb	r5, [r4, #1]
   12bd4:	cmp	r5, sl
   12bd8:	addcc	r6, r4, #2
   12bdc:	bcc	12ba4 <sav_parse_time+0x13c>
   12be0:	sub	lr, r4, lr
   12be4:	add	r1, r1, lr, asr #1
   12be8:	b	12b14 <sav_parse_time+0xac>
   12bec:	add	r1, r1, r9
   12bf0:	b	12b14 <sav_parse_time+0xac>
   12bf4:	ldrb	r5, [r1], #1
   12bf8:	cmp	r5, #4
   12bfc:	addls	pc, pc, r5, lsl #2
   12c00:	b	12b3c <sav_parse_time+0xd4>
   12c04:	b	12c20 <sav_parse_time+0x1b8>
   12c08:	b	12c18 <sav_parse_time+0x1b0>
   12c0c:	b	12c34 <sav_parse_time+0x1cc>
   12c10:	b	12c40 <sav_parse_time+0x1d8>
   12c14:	b	12c4c <sav_parse_time+0x1e4>
   12c18:	mov	ip, #0
   12c1c:	b	12b3c <sav_parse_time+0xd4>
   12c20:	ldrb	r5, [r3]
   12c24:	mov	r2, #10
   12c28:	sub	r5, r5, #48	; 0x30
   12c2c:	mla	ip, r2, ip, r5
   12c30:	b	12b3c <sav_parse_time+0xd4>
   12c34:	ldrb	ip, [r3]
   12c38:	sub	ip, ip, #48	; 0x30
   12c3c:	b	12b3c <sav_parse_time+0xd4>
   12c40:	ldr	r2, [sp, #8]
   12c44:	str	ip, [r2, #8]
   12c48:	b	12b3c <sav_parse_time+0xd4>
   12c4c:	ldr	r2, [sp, #8]
   12c50:	str	ip, [r2, #4]
   12c54:	b	12b3c <sav_parse_time+0xd4>
   12c58:	ldrb	r5, [r1], #1
   12c5c:	cmp	r5, #5
   12c60:	ldreq	r2, [sp, #8]
   12c64:	streq	ip, [r2]
   12c68:	subs	lr, lr, #1
   12c6c:	bcs	12c58 <sav_parse_time+0x1f0>
   12c70:	subs	r3, r3, fp
   12c74:	movne	r3, #1
   12c78:	cmp	r4, #11
   12c7c:	movgt	r4, r3
   12c80:	orrle	r4, r3, #1
   12c84:	cmp	r4, #0
   12c88:	moveq	r0, r4
   12c8c:	beq	12cdc <sav_parse_time+0x274>
   12c90:	ldr	r3, [sp, #16]
   12c94:	cmp	r3, #0
   12c98:	beq	12cd8 <sav_parse_time+0x270>
   12c9c:	mov	r5, r3
   12ca0:	ldr	r2, [pc, #76]	; 12cf4 <sav_parse_time+0x28c>
   12ca4:	add	r4, sp, #32
   12ca8:	mov	r1, #8192	; 0x2000
   12cac:	str	r0, [sp, #4]
   12cb0:	mov	r0, r4
   12cb4:	ldr	r3, [sp, #12]
   12cb8:	add	r2, pc, r2
   12cbc:	str	r3, [sp]
   12cc0:	bl	4294 <snprintf@plt>
   12cc4:	add	r3, sp, #8256	; 0x2040
   12cc8:	mov	r0, r4
   12ccc:	add	r3, r3, #8
   12cd0:	ldr	r1, [r3]
   12cd4:	blx	r5
   12cd8:	mov	r0, #29
   12cdc:	add	sp, sp, #8192	; 0x2000
   12ce0:	add	sp, sp, #36	; 0x24
   12ce4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ce8:	.word	0x0000f116
   12cec:	.word	0x0000f112
   12cf0:	.word	0x0000f05a
   12cf4:	.word	0x0000f202

00012cf8 <sav_parse_date>:
   12cf8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12cfc:	sub	sp, sp, #8192	; 0x2000
   12d00:	mov	ip, #1
   12d04:	sub	sp, sp, #44	; 0x2c
   12d08:	str	r1, [sp, #16]
   12d0c:	str	r3, [sp, #20]
   12d10:	add	r3, r0, r1
   12d14:	mov	r1, #0
   12d18:	cmp	r0, r3
   12d1c:	str	r3, [sp, #8]
   12d20:	mov	r3, r0
   12d24:	beq	12e2c <sav_parse_date+0x134>
   12d28:	ldr	r5, [pc, #804]	; 13054 <sav_parse_date+0x35c>
   12d2c:	add	r5, pc, r5
   12d30:	add	lr, r5, #157	; 0x9d
   12d34:	str	r5, [sp, #12]
   12d38:	str	lr, [sp, #28]
   12d3c:	ldr	lr, [pc, #788]	; 13058 <sav_parse_date+0x360>
   12d40:	add	lr, pc, lr
   12d44:	str	lr, [sp, #32]
   12d48:	add	lr, r5, #688	; 0x2b0
   12d4c:	add	lr, lr, #2
   12d50:	str	lr, [sp, #36]	; 0x24
   12d54:	add	r6, r5, ip
   12d58:	ldr	lr, [sp, #28]
   12d5c:	ldrb	r9, [r6, #344]	; 0x158
   12d60:	ldrb	r4, [r6, #248]	; 0xf8
   12d64:	cmp	r9, #0
   12d68:	add	r4, lr, r4
   12d6c:	ldrb	lr, [r6, #296]	; 0x128
   12d70:	beq	12e64 <sav_parse_date+0x16c>
   12d74:	sub	r8, r9, #1
   12d78:	mov	r7, r4
   12d7c:	add	r8, r4, r8
   12d80:	cmp	r7, r8
   12d84:	bhi	12e5c <sav_parse_date+0x164>
   12d88:	sub	sl, r8, r7
   12d8c:	ldrb	fp, [r3]
   12d90:	add	r6, r7, sl, asr #1
   12d94:	ldrb	sl, [r7, sl, asr #1]
   12d98:	cmp	fp, sl
   12d9c:	subcc	r8, r6, #1
   12da0:	bcc	12d80 <sav_parse_date+0x88>
   12da4:	addhi	r7, r6, #1
   12da8:	bhi	12d80 <sav_parse_date+0x88>
   12dac:	sub	r4, r6, r4
   12db0:	add	lr, lr, r4
   12db4:	ldr	ip, [sp, #12]
   12db8:	add	lr, ip, lr
   12dbc:	ldrb	lr, [lr, #440]	; 0x1b8
   12dc0:	add	lr, ip, lr
   12dc4:	ldrb	r4, [lr, #632]	; 0x278
   12dc8:	ldrb	ip, [lr, #574]	; 0x23e
   12dcc:	cmp	r4, #0
   12dd0:	beq	12e14 <sav_parse_date+0x11c>
   12dd4:	ldr	r6, [sp, #36]	; 0x24
   12dd8:	add	lr, r4, #1
   12ddc:	mov	r7, #7
   12de0:	mov	r8, #6
   12de4:	mov	r9, #5
   12de8:	mov	sl, #4
   12dec:	mov	fp, #3
   12df0:	add	lr, r6, lr
   12df4:	ldr	r6, [sp, #12]
   12df8:	add	r4, r6, r4
   12dfc:	ldrb	r4, [r4, #690]	; 0x2b2
   12e00:	add	r4, lr, r4
   12e04:	str	r4, [sp, #24]
   12e08:	ldr	r4, [sp, #24]
   12e0c:	cmp	lr, r4
   12e10:	bne	12ed4 <sav_parse_date+0x1dc>
   12e14:	cmp	ip, #0
   12e18:	beq	12fd8 <sav_parse_date+0x2e0>
   12e1c:	ldr	lr, [sp, #8]
   12e20:	add	r3, r3, #1
   12e24:	cmp	lr, r3
   12e28:	bne	12d54 <sav_parse_date+0x5c>
   12e2c:	ldr	r4, [pc, #552]	; 1305c <sav_parse_date+0x364>
   12e30:	add	r4, pc, r4
   12e34:	add	lr, r4, ip
   12e38:	ldrb	r5, [lr, #724]	; 0x2d4
   12e3c:	add	lr, r4, r5
   12e40:	add	r4, r4, r5
   12e44:	ldrb	r4, [r4, #690]	; 0x2b2
   12e48:	add	lr, lr, #688	; 0x2b0
   12e4c:	add	r5, r1, #100	; 0x64
   12e50:	add	lr, lr, #3
   12e54:	add	r4, lr, r4
   12e58:	b	12fd0 <sav_parse_date+0x2d8>
   12e5c:	add	r4, r4, r9
   12e60:	add	lr, lr, r9
   12e64:	ldr	r6, [sp, #32]
   12e68:	add	ip, r6, ip
   12e6c:	ldrb	r9, [ip, #392]	; 0x188
   12e70:	cmp	r9, #0
   12e74:	beq	12db4 <sav_parse_date+0xbc>
   12e78:	add	r8, r4, r9, lsl #1
   12e7c:	mov	r7, r4
   12e80:	sub	r8, r8, #2
   12e84:	cmp	r7, r8
   12e88:	bhi	12ecc <sav_parse_date+0x1d4>
   12e8c:	sub	r6, r8, r7
   12e90:	ldrb	sl, [r3]
   12e94:	asr	r6, r6, #1
   12e98:	bic	r6, r6, #1
   12e9c:	add	ip, r7, r6
   12ea0:	ldrb	r6, [r7, r6]
   12ea4:	cmp	r6, sl
   12ea8:	subhi	r8, ip, #2
   12eac:	bhi	12e84 <sav_parse_date+0x18c>
   12eb0:	ldrb	r6, [ip, #1]
   12eb4:	cmp	r6, sl
   12eb8:	addcc	r7, ip, #2
   12ebc:	bcc	12e84 <sav_parse_date+0x18c>
   12ec0:	sub	r4, ip, r4
   12ec4:	add	lr, lr, r4, asr #1
   12ec8:	b	12db4 <sav_parse_date+0xbc>
   12ecc:	add	lr, lr, r9
   12ed0:	b	12db4 <sav_parse_date+0xbc>
   12ed4:	ldrb	r4, [lr], #1
   12ed8:	cmp	r4, #15
   12edc:	addls	pc, pc, r4, lsl #2
   12ee0:	b	12e08 <sav_parse_date+0x110>
   12ee4:	b	12f2c <sav_parse_date+0x234>
   12ee8:	b	12e08 <sav_parse_date+0x110>
   12eec:	b	12f24 <sav_parse_date+0x22c>
   12ef0:	b	12f48 <sav_parse_date+0x250>
   12ef4:	b	12f50 <sav_parse_date+0x258>
   12ef8:	b	12f5c <sav_parse_date+0x264>
   12efc:	b	12f64 <sav_parse_date+0x26c>
   12f00:	b	12f6c <sav_parse_date+0x274>
   12f04:	b	12f74 <sav_parse_date+0x27c>
   12f08:	b	12f7c <sav_parse_date+0x284>
   12f0c:	b	12f84 <sav_parse_date+0x28c>
   12f10:	b	12f8c <sav_parse_date+0x294>
   12f14:	b	12f94 <sav_parse_date+0x29c>
   12f18:	b	12f9c <sav_parse_date+0x2a4>
   12f1c:	b	12fa4 <sav_parse_date+0x2ac>
   12f20:	b	12fac <sav_parse_date+0x2b4>
   12f24:	mov	r1, #0
   12f28:	b	12e08 <sav_parse_date+0x110>
   12f2c:	ldrb	r4, [r3]
   12f30:	sub	r4, r4, #48	; 0x30
   12f34:	uxtb	r4, r4
   12f38:	cmp	r4, #9
   12f3c:	movls	r6, #10
   12f40:	mlals	r1, r6, r1, r4
   12f44:	b	12e08 <sav_parse_date+0x110>
   12f48:	str	r1, [r2, #12]
   12f4c:	b	12e08 <sav_parse_date+0x110>
   12f50:	mov	r4, #0
   12f54:	str	r4, [r2, #16]
   12f58:	b	12e08 <sav_parse_date+0x110>
   12f5c:	mov	r4, #1
   12f60:	b	12f54 <sav_parse_date+0x25c>
   12f64:	mov	r4, #2
   12f68:	b	12f54 <sav_parse_date+0x25c>
   12f6c:	str	fp, [r2, #16]
   12f70:	b	12e08 <sav_parse_date+0x110>
   12f74:	str	sl, [r2, #16]
   12f78:	b	12e08 <sav_parse_date+0x110>
   12f7c:	str	r9, [r2, #16]
   12f80:	b	12e08 <sav_parse_date+0x110>
   12f84:	str	r8, [r2, #16]
   12f88:	b	12e08 <sav_parse_date+0x110>
   12f8c:	str	r7, [r2, #16]
   12f90:	b	12e08 <sav_parse_date+0x110>
   12f94:	mov	r4, #8
   12f98:	b	12f54 <sav_parse_date+0x25c>
   12f9c:	mov	r4, #9
   12fa0:	b	12f54 <sav_parse_date+0x25c>
   12fa4:	mov	r4, #10
   12fa8:	b	12f54 <sav_parse_date+0x25c>
   12fac:	mov	r4, #11
   12fb0:	b	12f54 <sav_parse_date+0x25c>
   12fb4:	ldrb	r6, [lr], #1
   12fb8:	cmp	r6, #1
   12fbc:	bne	12fd0 <sav_parse_date+0x2d8>
   12fc0:	cmp	r1, #69	; 0x45
   12fc4:	movgt	r6, r1
   12fc8:	movle	r6, r5
   12fcc:	str	r6, [r2, #20]
   12fd0:	cmp	lr, r4
   12fd4:	bne	12fb4 <sav_parse_date+0x2bc>
   12fd8:	ldr	r2, [sp, #8]
   12fdc:	subs	r3, r3, r2
   12fe0:	movne	r3, #1
   12fe4:	cmp	ip, #46	; 0x2e
   12fe8:	movgt	ip, r3
   12fec:	orrle	ip, r3, #1
   12ff0:	cmp	ip, #0
   12ff4:	moveq	r0, ip
   12ff8:	beq	13048 <sav_parse_date+0x350>
   12ffc:	ldr	r3, [sp, #20]
   13000:	cmp	r3, #0
   13004:	beq	13044 <sav_parse_date+0x34c>
   13008:	mov	r5, r3
   1300c:	ldr	r2, [pc, #76]	; 13060 <sav_parse_date+0x368>
   13010:	add	r4, sp, #40	; 0x28
   13014:	mov	r1, #8192	; 0x2000
   13018:	str	r0, [sp, #4]
   1301c:	mov	r0, r4
   13020:	ldr	r3, [sp, #16]
   13024:	add	r2, pc, r2
   13028:	str	r3, [sp]
   1302c:	bl	4294 <snprintf@plt>
   13030:	add	r3, sp, #8256	; 0x2040
   13034:	mov	r0, r4
   13038:	add	r3, r3, #16
   1303c:	ldr	r1, [r3]
   13040:	blx	r5
   13044:	mov	r0, #29
   13048:	add	sp, sp, #8192	; 0x2000
   1304c:	add	sp, sp, #44	; 0x2c
   13050:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13054:	.word	0x0000ee8a
   13058:	.word	0x0000ee76
   1305c:	.word	0x0000ed86
   13060:	.word	0x0000eebc
   13064:	.word	0x00000000

00013068 <sav_update_progress>:
   13068:	push	{lr}		; (str lr, [sp, #-4]!)
   1306c:	ldr	r3, [r0, #36]	; 0x24
   13070:	ldr	r1, [r0, #28]
   13074:	ldr	r2, [r0, #40]	; 0x28
   13078:	ldr	lr, [r3, #16]
   1307c:	ldr	r3, [r3, #20]
   13080:	ldr	r0, [r0, #32]
   13084:	mov	ip, lr
   13088:	pop	{lr}		; (ldr lr, [sp], #4)
   1308c:	bx	ip

00013090 <sav_skip_document_record>:
   13090:	push	{r0, r1, r2, r4, r5, lr}
   13094:	mov	r1, #4
   13098:	mov	r5, r0
   1309c:	ldr	r4, [r0, #36]	; 0x24
   130a0:	add	r0, sp, r1
   130a4:	ldr	r3, [r4, #12]
   130a8:	ldr	r2, [r4, #20]
   130ac:	blx	r3
   130b0:	cmp	r0, #3
   130b4:	movls	r0, #2
   130b8:	bls	130fc <sav_skip_document_record+0x6c>
   130bc:	ldrb	r3, [r5, #436]	; 0x1b4
   130c0:	tst	r3, #1
   130c4:	beq	130d4 <sav_skip_document_record+0x44>
   130c8:	ldr	r0, [sp, #4]
   130cc:	bl	3da8 <byteswap4@plt>
   130d0:	str	r0, [sp, #4]
   130d4:	ldr	r0, [sp, #4]
   130d8:	mov	ip, #80	; 0x50
   130dc:	mov	r1, #1
   130e0:	ldr	r3, [r4, #8]
   130e4:	ldr	r2, [r4, #20]
   130e8:	mul	r0, ip, r0
   130ec:	blx	r3
   130f0:	cmn	r0, #1
   130f4:	movne	r0, #0
   130f8:	moveq	r0, #15
   130fc:	add	sp, sp, #12
   13100:	pop	{r4, r5, pc}

00013104 <sav_parse_records_pass1>:
   13104:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13108:	sub	sp, sp, #5120	; 0x1400
   1310c:	mov	r6, r0
   13110:	sub	sp, sp, #52	; 0x34
   13114:	add	r7, sp, #48	; 0x30
   13118:	ldr	r8, [r0, #36]	; 0x24
   1311c:	sub	r9, r7, #44	; 0x2c
   13120:	mov	r1, #4
   13124:	sub	r0, r7, #48	; 0x30
   13128:	ldr	r3, [r8, #12]
   1312c:	ldr	r2, [r8, #20]
   13130:	blx	r3
   13134:	cmp	r0, #3
   13138:	bls	13540 <sav_parse_records_pass1+0x43c>
   1313c:	ldrb	r3, [r6, #436]	; 0x1b4
   13140:	add	r4, sp, #1072	; 0x430
   13144:	tst	r3, #1
   13148:	beq	13158 <sav_parse_records_pass1+0x54>
   1314c:	ldr	r0, [r4, #-1072]	; 0xfffffbd0
   13150:	bl	3da8 <byteswap4@plt>
   13154:	str	r0, [r4, #-1072]	; 0xfffffbd0
   13158:	ldr	r5, [r4, #-1072]	; 0xfffffbd0
   1315c:	cmp	r5, #6
   13160:	beq	133b0 <sav_parse_records_pass1+0x2ac>
   13164:	bhi	13180 <sav_parse_records_pass1+0x7c>
   13168:	cmp	r5, #2
   1316c:	beq	131a8 <sav_parse_records_pass1+0xa4>
   13170:	cmp	r5, #3
   13174:	beq	13274 <sav_parse_records_pass1+0x170>
   13178:	mov	r5, #5
   1317c:	b	13198 <sav_parse_records_pass1+0x94>
   13180:	cmp	r5, #7
   13184:	beq	133c4 <sav_parse_records_pass1+0x2c0>
   13188:	movw	r3, #999	; 0x3e7
   1318c:	cmp	r5, r3
   13190:	movne	r5, #5
   13194:	moveq	r5, #0
   13198:	mov	r0, r5
   1319c:	add	sp, sp, #5120	; 0x1400
   131a0:	add	sp, sp, #52	; 0x34
   131a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   131a8:	ldr	sl, [r6, #36]	; 0x24
   131ac:	mov	r1, #28
   131b0:	mov	r0, r7
   131b4:	ldr	r3, [sl, #12]
   131b8:	ldr	r2, [sl, #20]
   131bc:	blx	r3
   131c0:	cmp	r0, #27
   131c4:	bls	13198 <sav_parse_records_pass1+0x94>
   131c8:	ldr	r3, [r4, #-1020]	; 0xfffffc04
   131cc:	cmp	r3, #0
   131d0:	beq	13230 <sav_parse_records_pass1+0x12c>
   131d4:	mov	r1, #4
   131d8:	sub	r0, r7, #32
   131dc:	ldr	r3, [sl, #12]
   131e0:	ldr	r2, [sl, #20]
   131e4:	blx	r3
   131e8:	cmp	r0, #3
   131ec:	bls	13198 <sav_parse_records_pass1+0x94>
   131f0:	ldrb	r3, [r6, #436]	; 0x1b4
   131f4:	ldr	r0, [r4, #-1056]	; 0xfffffbe0
   131f8:	tst	r3, #1
   131fc:	beq	13204 <sav_parse_records_pass1+0x100>
   13200:	bl	3da8 <byteswap4@plt>
   13204:	ldr	r3, [sl, #8]
   13208:	mov	r1, #1
   1320c:	ldr	r2, [sl, #20]
   13210:	str	r0, [r4, #-1056]	; 0xfffffbe0
   13214:	add	r0, r0, #3
   13218:	bic	r0, r0, #3
   1321c:	blx	r3
   13220:	cmn	r0, #1
   13224:	bne	13230 <sav_parse_records_pass1+0x12c>
   13228:	mov	r5, #15
   1322c:	b	13198 <sav_parse_records_pass1+0x94>
   13230:	ldr	r0, [r4, #-1016]	; 0xfffffc08
   13234:	cmp	r0, #0
   13238:	beq	13120 <sav_parse_records_pass1+0x1c>
   1323c:	ldrb	r3, [r6, #436]	; 0x1b4
   13240:	tst	r3, #1
   13244:	beq	1324c <sav_parse_records_pass1+0x148>
   13248:	bl	3da8 <byteswap4@plt>
   1324c:	cmp	r0, #0
   13250:	ldr	r3, [sl, #8]
   13254:	mov	r1, #1
   13258:	rsblt	r0, r0, #0
   1325c:	ldr	r2, [sl, #20]
   13260:	lsl	r0, r0, #3
   13264:	blx	r3
   13268:	cmn	r0, #1
   1326c:	bne	13120 <sav_parse_records_pass1+0x1c>
   13270:	b	13228 <sav_parse_records_pass1+0x124>
   13274:	ldr	r5, [r6, #36]	; 0x24
   13278:	mov	r1, #4
   1327c:	mov	r0, r9
   13280:	ldr	r3, [r5, #12]
   13284:	ldr	r2, [r5, #20]
   13288:	blx	r3
   1328c:	cmp	r0, #3
   13290:	bls	13540 <sav_parse_records_pass1+0x43c>
   13294:	ldrb	r3, [r6, #436]	; 0x1b4
   13298:	tst	r3, #1
   1329c:	beq	132ac <sav_parse_records_pass1+0x1a8>
   132a0:	ldr	r0, [r4, #-1068]	; 0xfffffbd4
   132a4:	bl	3da8 <byteswap4@plt>
   132a8:	str	r0, [r4, #-1068]	; 0xfffffbd4
   132ac:	mov	sl, #0
   132b0:	mov	fp, sl
   132b4:	ldr	r3, [r4, #-1068]	; 0xfffffbd4
   132b8:	ldr	r2, [r5, #20]
   132bc:	cmp	r3, sl
   132c0:	bhi	13348 <sav_parse_records_pass1+0x244>
   132c4:	mov	r1, #4
   132c8:	sub	r0, r7, #32
   132cc:	ldr	r3, [r5, #12]
   132d0:	blx	r3
   132d4:	cmp	r0, #3
   132d8:	bls	13540 <sav_parse_records_pass1+0x43c>
   132dc:	ldrb	r3, [r6, #436]	; 0x1b4
   132e0:	tst	r3, #1
   132e4:	beq	132f4 <sav_parse_records_pass1+0x1f0>
   132e8:	ldr	r0, [r4, #-1056]	; 0xfffffbe0
   132ec:	bl	3da8 <byteswap4@plt>
   132f0:	str	r0, [r4, #-1056]	; 0xfffffbe0
   132f4:	ldr	r1, [r4, #-1056]	; 0xfffffbe0
   132f8:	cmp	r1, #4
   132fc:	bne	13178 <sav_parse_records_pass1+0x74>
   13300:	mov	r0, r7
   13304:	ldr	r3, [r5, #12]
   13308:	ldr	r2, [r5, #20]
   1330c:	blx	r3
   13310:	cmp	r0, #3
   13314:	bls	13540 <sav_parse_records_pass1+0x43c>
   13318:	ldrb	r3, [r6, #436]	; 0x1b4
   1331c:	tst	r3, #1
   13320:	beq	13330 <sav_parse_records_pass1+0x22c>
   13324:	ldr	r0, [r4, #-1024]	; 0xfffffc00
   13328:	bl	3da8 <byteswap4@plt>
   1332c:	str	r0, [r4, #-1024]	; 0xfffffc00
   13330:	ldr	r0, [r4, #-1024]	; 0xfffffc00
   13334:	mov	r1, #1
   13338:	ldr	r3, [r5, #8]
   1333c:	ldr	r2, [r5, #20]
   13340:	lsl	r0, r0, #2
   13344:	b	13264 <sav_parse_records_pass1+0x160>
   13348:	mov	r1, #1
   1334c:	mov	r0, #8
   13350:	strb	fp, [r4, #-1024]	; 0xfffffc00
   13354:	ldr	r3, [r5, #8]
   13358:	blx	r3
   1335c:	cmn	r0, #1
   13360:	beq	13228 <sav_parse_records_pass1+0x124>
   13364:	mov	r1, #1
   13368:	mov	r0, r7
   1336c:	ldr	r3, [r5, #12]
   13370:	ldr	r2, [r5, #20]
   13374:	blx	r3
   13378:	cmp	r0, #0
   1337c:	ble	13540 <sav_parse_records_pass1+0x43c>
   13380:	ldrb	r0, [r4, #-1024]	; 0xfffffc00
   13384:	mov	r1, #1
   13388:	ldr	r3, [r5, #8]
   1338c:	ldr	r2, [r5, #20]
   13390:	add	r0, r0, #8
   13394:	and	r0, r0, #504	; 0x1f8
   13398:	sub	r0, r0, #1
   1339c:	blx	r3
   133a0:	cmn	r0, #1
   133a4:	beq	13228 <sav_parse_records_pass1+0x124>
   133a8:	add	sl, sl, #1
   133ac:	b	132b4 <sav_parse_records_pass1+0x1b0>
   133b0:	mov	r0, r6
   133b4:	bl	13090 <sav_skip_document_record>
   133b8:	subs	r5, r0, #0
   133bc:	beq	13120 <sav_parse_records_pass1+0x1c>
   133c0:	b	13198 <sav_parse_records_pass1+0x94>
   133c4:	mov	r1, #12
   133c8:	mov	r0, r9
   133cc:	ldr	r3, [r8, #12]
   133d0:	ldr	r2, [r8, #20]
   133d4:	blx	r3
   133d8:	cmp	r0, #11
   133dc:	bls	13540 <sav_parse_records_pass1+0x43c>
   133e0:	ldrb	r3, [r6, #436]	; 0x1b4
   133e4:	tst	r3, #1
   133e8:	bne	134c8 <sav_parse_records_pass1+0x3c4>
   133ec:	ldr	r3, [r4, #-1064]	; 0xfffffbd8
   133f0:	ldr	sl, [r4, #-1060]	; 0xfffffbdc
   133f4:	mul	sl, sl, r3
   133f8:	ldr	r3, [r4, #-1068]	; 0xfffffbd4
   133fc:	cmp	r3, #3
   13400:	bne	1352c <sav_parse_records_pass1+0x428>
   13404:	cmp	sl, #4096	; 0x1000
   13408:	bhi	13178 <sav_parse_records_pass1+0x74>
   1340c:	mov	r1, sl
   13410:	mov	r0, r4
   13414:	ldr	r3, [r8, #12]
   13418:	ldr	r2, [r8, #20]
   1341c:	blx	r3
   13420:	cmp	r0, sl
   13424:	bcc	13178 <sav_parse_records_pass1+0x74>
   13428:	cmp	sl, #32
   1342c:	bne	13178 <sav_parse_records_pass1+0x74>
   13430:	mov	lr, r4
   13434:	sub	ip, r4, #1056	; 0x420
   13438:	ldr	sl, [r6, #60]	; 0x3c
   1343c:	ldm	lr!, {r0, r1, r2, r3}
   13440:	stmia	ip!, {r0, r1, r2, r3}
   13444:	ldm	lr, {r0, r1, r2, r3}
   13448:	stm	ip, {r0, r1, r2, r3}
   1344c:	ldrb	r3, [r6, #436]	; 0x1b4
   13450:	ldr	r0, [r4, #-1028]	; 0xfffffbfc
   13454:	tst	r3, #1
   13458:	beq	13460 <sav_parse_records_pass1+0x35c>
   1345c:	bl	3da8 <byteswap4@plt>
   13460:	ldr	r1, [r6, #56]	; 0x38
   13464:	cmp	r1, #0
   13468:	bne	13494 <sav_parse_records_pass1+0x390>
   1346c:	ldr	r2, [pc, #212]	; 13548 <sav_parse_records_pass1+0x444>
   13470:	mov	ip, #36	; 0x24
   13474:	add	r2, pc, r2
   13478:	mul	r3, ip, r1
   1347c:	ldr	lr, [r3, r2]
   13480:	cmp	lr, r0
   13484:	bne	134e8 <sav_parse_records_pass1+0x3e4>
   13488:	add	r1, r3, #4
   1348c:	add	r1, r2, r1
   13490:	str	r1, [r6, #56]	; 0x38
   13494:	cmp	sl, #0
   13498:	beq	13120 <sav_parse_records_pass1+0x1c>
   1349c:	mov	r0, sl
   134a0:	bl	4150 <iconv_open@plt>
   134a4:	cmn	r0, #1
   134a8:	mov	r4, r0
   134ac:	beq	13198 <sav_parse_records_pass1+0x94>
   134b0:	ldr	r0, [r6, #336]	; 0x150
   134b4:	cmp	r0, #0
   134b8:	beq	134c0 <sav_parse_records_pass1+0x3bc>
   134bc:	bl	3de4 <iconv_close@plt>
   134c0:	str	r4, [r6, #336]	; 0x150
   134c4:	b	13120 <sav_parse_records_pass1+0x1c>
   134c8:	mov	fp, r9
   134cc:	mov	sl, #3
   134d0:	ldr	r0, [fp]
   134d4:	bl	3da8 <byteswap4@plt>
   134d8:	subs	sl, sl, #1
   134dc:	str	r0, [fp], #4
   134e0:	bne	134d0 <sav_parse_records_pass1+0x3cc>
   134e4:	b	133ec <sav_parse_records_pass1+0x2e8>
   134e8:	add	r1, r1, #1
   134ec:	cmp	r1, #79	; 0x4f
   134f0:	bne	13478 <sav_parse_records_pass1+0x374>
   134f4:	ldr	r3, [r6, #24]
   134f8:	cmp	r3, #0
   134fc:	beq	13198 <sav_parse_records_pass1+0x94>
   13500:	ldr	r2, [pc, #68]	; 1354c <sav_parse_records_pass1+0x448>
   13504:	mov	r3, r0
   13508:	mov	r1, #1024	; 0x400
   1350c:	mov	r0, r7
   13510:	add	r2, pc, r2
   13514:	bl	4294 <snprintf@plt>
   13518:	mov	r0, r7
   1351c:	ldr	r3, [r6, #24]
   13520:	ldr	r1, [r6, #40]	; 0x28
   13524:	blx	r3
   13528:	b	13198 <sav_parse_records_pass1+0x94>
   1352c:	mov	r1, #1
   13530:	mov	r0, sl
   13534:	ldr	r3, [r8, #8]
   13538:	ldr	r2, [r8, #20]
   1353c:	b	13264 <sav_parse_records_pass1+0x160>
   13540:	mov	r5, #2
   13544:	b	13198 <sav_parse_records_pass1+0x94>
   13548:	.word	0x0002daec
   1354c:	.word	0x0000e9f6

00013550 <sav_read_pascal_string.constprop.4>:
   13550:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   13554:	mov	r5, r1
   13558:	ldr	r1, [r1]
   1355c:	add	r7, r1, r2
   13560:	add	r4, r1, #4
   13564:	cmp	r7, r4
   13568:	bcc	135c0 <sav_read_pascal_string.constprop.4+0x70>
   1356c:	ldrb	r3, [r3, #436]	; 0x1b4
   13570:	mov	r8, r0
   13574:	ldr	r0, [r1]
   13578:	tst	r3, #1
   1357c:	beq	13584 <sav_read_pascal_string.constprop.4+0x34>
   13580:	bl	3da8 <byteswap4@plt>
   13584:	add	r6, r4, r0
   13588:	cmp	r7, r6
   1358c:	bcc	135c4 <sav_read_pascal_string.constprop.4+0x74>
   13590:	mov	r3, #0
   13594:	mov	r2, r4
   13598:	movw	r1, #257	; 0x101
   1359c:	str	r3, [sp]
   135a0:	mov	r3, r0
   135a4:	mov	r0, r8
   135a8:	bl	424c <readstat_convert@plt>
   135ac:	cmp	r0, #0
   135b0:	moveq	r4, r6
   135b4:	str	r4, [r5]
   135b8:	add	sp, sp, #8
   135bc:	pop	{r4, r5, r6, r7, r8, pc}
   135c0:	mov	r4, r1
   135c4:	mov	r0, #5
   135c8:	b	135b4 <sav_read_pascal_string.constprop.4+0x64>

000135cc <sav_process_row>:
   135cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   135d0:	sub	sp, sp, #68	; 0x44
   135d4:	ldr	r5, [r2, #360]	; 0x168
   135d8:	cmp	r5, #0
   135dc:	subne	r5, r5, #1
   135e0:	strne	r5, [r2, #360]	; 0x168
   135e4:	bne	13708 <sav_process_row+0x13c>
   135e8:	add	r3, sp, #48	; 0x30
   135ec:	mov	r4, r2
   135f0:	mov	r8, r5
   135f4:	mov	r9, r5
   135f8:	mov	fp, r5
   135fc:	mov	sl, r5
   13600:	str	r3, [sp, #20]
   13604:	mov	r6, r5
   13608:	strd	r0, [sp, #32]
   1360c:	b	136d8 <sav_process_row+0x10c>
   13610:	ldr	r3, [r4, #44]	; 0x2c
   13614:	mov	r2, #0
   13618:	cmp	sl, #31
   1361c:	ldr	r1, [sp, #20]
   13620:	ldr	r7, [r3, r8, lsl #2]
   13624:	ldr	r0, [r3, r5, lsl #2]
   13628:	mov	r3, #0
   1362c:	strd	r2, [r1]
   13630:	strd	r2, [r1, #8]
   13634:	ldr	r3, [r7]
   13638:	str	r3, [sp, #56]	; 0x38
   1363c:	bgt	1389c <sav_process_row+0x2d0>
   13640:	cmp	r3, #0
   13644:	bne	13784 <sav_process_row+0x1b8>
   13648:	ldr	r3, [r4, #380]	; 0x17c
   1364c:	add	r2, r6, #8
   13650:	cmp	r2, r3
   13654:	bhi	1367c <sav_process_row+0xb0>
   13658:	ldr	r3, [sp, #32]
   1365c:	ldr	ip, [r4, #376]	; 0x178
   13660:	add	r1, r3, fp
   13664:	ldr	r3, [r1]
   13668:	add	lr, ip, r6
   1366c:	str	r3, [ip, r6]
   13670:	mov	r6, r2
   13674:	ldr	r3, [r1, #4]
   13678:	str	r3, [lr, #4]
   1367c:	ldr	r2, [r0, #16]
   13680:	add	sl, sl, #1
   13684:	ldr	r3, [r7, #48]	; 0x30
   13688:	cmp	sl, r2
   1368c:	bne	136a4 <sav_process_row+0xd8>
   13690:	add	r9, r9, #1
   13694:	add	r5, r5, #1
   13698:	cmp	r9, r3
   1369c:	mov	sl, #0
   136a0:	sublt	r6, r6, #1
   136a4:	cmp	r9, r3
   136a8:	bne	136d4 <sav_process_row+0x108>
   136ac:	ldr	r2, [r7, #8]
   136b0:	ldr	r3, [r4, #52]	; 0x34
   136b4:	ldr	r3, [r3, r2, lsl #2]
   136b8:	ldr	r3, [r3, #2144]	; 0x860
   136bc:	cmp	r3, #0
   136c0:	beq	13710 <sav_process_row+0x144>
   136c4:	ldr	r3, [r7, #48]	; 0x30
   136c8:	mov	r9, #0
   136cc:	mov	r6, r9
   136d0:	add	r8, r8, r3
   136d4:	add	fp, fp, #8
   136d8:	ldr	r3, [sp, #36]	; 0x24
   136dc:	cmp	r3, fp
   136e0:	bls	136fc <sav_process_row+0x130>
   136e4:	ldr	r2, [r4, #340]	; 0x154
   136e8:	cmp	r5, r8
   136ec:	movge	r3, r5
   136f0:	movlt	r3, r8
   136f4:	cmp	r2, r3
   136f8:	bgt	13610 <sav_process_row+0x44>
   136fc:	ldr	r3, [r4, #364]	; 0x16c
   13700:	add	r3, r3, #1
   13704:	str	r3, [r4, #364]	; 0x16c
   13708:	mov	r0, #0
   1370c:	b	1377c <sav_process_row+0x1b0>
   13710:	ldr	r3, [r4, #336]	; 0x150
   13714:	str	r3, [sp]
   13718:	mov	r3, r6
   1371c:	ldr	r2, [r4, #376]	; 0x178
   13720:	ldr	r0, [r4, #384]	; 0x180
   13724:	ldr	r1, [r4, #388]	; 0x184
   13728:	bl	424c <readstat_convert@plt>
   1372c:	cmp	r0, #0
   13730:	bne	1377c <sav_process_row+0x1b0>
   13734:	ldr	lr, [r7, #8]
   13738:	ldr	r3, [r4, #384]	; 0x180
   1373c:	ldr	ip, [r4, #52]	; 0x34
   13740:	str	r3, [sp, #48]	; 0x30
   13744:	ldr	r3, [r4, #40]	; 0x28
   13748:	str	r3, [sp, #8]
   1374c:	add	r3, sp, #64	; 0x40
   13750:	ldmdb	r3, {r0, r1}
   13754:	ldr	r3, [sp, #20]
   13758:	stm	sp, {r0, r1}
   1375c:	ldr	r1, [ip, lr, lsl #2]
   13760:	ldm	r3, {r2, r3}
   13764:	ldr	r6, [r4, #16]
   13768:	ldr	r0, [r4, #364]	; 0x16c
   1376c:	blx	r6
   13770:	cmp	r0, #0
   13774:	beq	136c4 <sav_process_row+0xf8>
   13778:	mov	r0, #4
   1377c:	add	sp, sp, #68	; 0x44
   13780:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13784:	cmp	r3, #5
   13788:	bne	136d4 <sav_process_row+0x108>
   1378c:	ldr	r2, [r7, #8]
   13790:	ldr	r3, [r4, #52]	; 0x34
   13794:	ldr	r3, [r3, r2, lsl #2]
   13798:	ldr	r3, [r3, #2144]	; 0x860
   1379c:	cmp	r3, #0
   137a0:	beq	137b4 <sav_process_row+0x1e8>
   137a4:	ldr	r3, [r7, #48]	; 0x30
   137a8:	add	r5, r5, #1
   137ac:	add	r8, r8, r3
   137b0:	b	136d4 <sav_process_row+0x108>
   137b4:	ldr	r3, [sp, #32]
   137b8:	add	r2, r3, fp
   137bc:	add	r3, sp, #40	; 0x28
   137c0:	ldr	r0, [r2]
   137c4:	ldr	r1, [r2, #4]
   137c8:	stmia	r3!, {r0, r1}
   137cc:	ldrb	r3, [r4, #436]	; 0x1b4
   137d0:	tst	r3, #1
   137d4:	beq	137e4 <sav_process_row+0x218>
   137d8:	vldr	d0, [sp, #40]	; 0x28
   137dc:	bl	4528 <byteswap_double@plt>
   137e0:	vstr	d0, [sp, #40]	; 0x28
   137e4:	vldr	d7, [sp, #40]	; 0x28
   137e8:	add	ip, r4, #400	; 0x190
   137ec:	ldrd	r2, [ip, #-8]
   137f0:	ldr	lr, [r7, #8]
   137f4:	vstr	d7, [sp, #24]
   137f8:	ldrd	r0, [sp, #24]
   137fc:	vstr	d7, [sp, #48]	; 0x30
   13800:	vldr	d7, [sp, #24]
   13804:	cmp	r1, r3
   13808:	cmpeq	r0, r2
   1380c:	ldrbeq	r3, [sp, #61]	; 0x3d
   13810:	vcmp.f64	d7, d7
   13814:	orreq	r3, r3, #1
   13818:	strbeq	r3, [sp, #61]	; 0x3d
   1381c:	ldrd	r2, [ip]
   13820:	ldr	ip, [r4, #52]	; 0x34
   13824:	cmp	r1, r3
   13828:	cmpeq	r0, r2
   1382c:	ldrbeq	r3, [sp, #61]	; 0x3d
   13830:	orreq	r3, r3, #1
   13834:	strbeq	r3, [sp, #61]	; 0x3d
   13838:	add	r3, r4, #416	; 0x1a0
   1383c:	ldrd	r2, [r3, #-8]
   13840:	cmp	r1, r3
   13844:	cmpeq	r0, r2
   13848:	ldrbeq	r3, [sp, #61]	; 0x3d
   1384c:	orreq	r3, r3, #1
   13850:	strbeq	r3, [sp, #61]	; 0x3d
   13854:	vmrs	APSR_nzcv, fpscr
   13858:	ldrbvs	r3, [sp, #61]	; 0x3d
   1385c:	orrvs	r3, r3, #1
   13860:	strbvs	r3, [sp, #61]	; 0x3d
   13864:	ldr	r3, [r4, #40]	; 0x28
   13868:	str	r3, [sp, #8]
   1386c:	add	r3, sp, #64	; 0x40
   13870:	ldmdb	r3, {r0, r1}
   13874:	ldr	r3, [sp, #20]
   13878:	stm	sp, {r0, r1}
   1387c:	ldr	r1, [ip, lr, lsl #2]
   13880:	ldm	r3, {r2, r3}
   13884:	ldr	ip, [r4, #16]
   13888:	ldr	r0, [r4, #364]	; 0x16c
   1388c:	blx	ip
   13890:	cmp	r0, #0
   13894:	beq	137a4 <sav_process_row+0x1d8>
   13898:	b	13778 <sav_process_row+0x1ac>
   1389c:	mov	r0, #5
   138a0:	b	1377c <sav_process_row+0x1b0>

000138a4 <sav_read_compressed_data.constprop.5>:
   138a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   138a8:	sub	sp, sp, #65536	; 0x10000
   138ac:	mov	r6, r0
   138b0:	sub	sp, sp, #68	; 0x44
   138b4:	mov	r2, #56	; 0x38
   138b8:	add	r4, sp, #64	; 0x40
   138bc:	mov	r1, #0
   138c0:	ldr	fp, [r0, #36]	; 0x24
   138c4:	ldr	r7, [r0, #344]	; 0x158
   138c8:	sub	r0, r4, #56	; 0x38
   138cc:	bl	42b8 <memset@plt>
   138d0:	add	r3, r6, #400	; 0x190
   138d4:	ldrd	r2, [r3, #-8]
   138d8:	lsl	r7, r7, #3
   138dc:	cmp	r7, #0
   138e0:	strd	r2, [r4, #-40]	; 0xffffffd8
   138e4:	moveq	r9, r7
   138e8:	add	r3, r6, #416	; 0x1a0
   138ec:	ldrd	r2, [r3]
   138f0:	strd	r2, [r4, #-32]	; 0xffffffe0
   138f4:	ldrb	r3, [r6, #436]	; 0x1b4
   138f8:	and	r3, r3, #1
   138fc:	str	r3, [r4, #-12]
   13900:	beq	13918 <sav_read_compressed_data.constprop.5+0x74>
   13904:	mov	r0, r7
   13908:	bl	4240 <readstat_malloc@plt>
   1390c:	subs	r9, r0, #0
   13910:	moveq	sl, #3
   13914:	beq	13a1c <sav_read_compressed_data.constprop.5+0x178>
   13918:	mov	r5, #0
   1391c:	mov	r0, r6
   13920:	bl	13068 <sav_update_progress>
   13924:	subs	sl, r0, #0
   13928:	bne	13a0c <sav_read_compressed_data.constprop.5+0x168>
   1392c:	mov	r1, #65536	; 0x10000
   13930:	mov	r0, r4
   13934:	ldr	r3, [fp, #12]
   13938:	ldr	r2, [fp, #20]
   1393c:	blx	r3
   13940:	add	r2, r0, #1
   13944:	mov	r3, r0
   13948:	cmp	r2, #1
   1394c:	bls	13a0c <sav_read_compressed_data.constprop.5+0x168>
   13950:	tst	r0, #7
   13954:	bne	13a0c <sav_read_compressed_data.constprop.5+0x168>
   13958:	mov	r2, #1
   1395c:	mov	r8, sl
   13960:	str	r2, [r4, #-8]
   13964:	sub	r2, r4, #56	; 0x38
   13968:	str	r2, [sp]
   1396c:	add	r2, r4, r8
   13970:	sub	r8, r3, r8
   13974:	ldr	r0, [sp]
   13978:	str	r3, [sp, #4]
   1397c:	str	r2, [r4, #-56]	; 0xffffffc8
   13980:	add	r2, r9, r5
   13984:	sub	r5, r7, r5
   13988:	str	r8, [r4, #-52]	; 0xffffffcc
   1398c:	str	r2, [r4, #-48]	; 0xffffffd0
   13990:	str	r5, [r4, #-44]	; 0xffffffd4
   13994:	bl	4228 <sav_decompress_row@plt>
   13998:	ldr	r8, [r4, #-52]	; 0xffffffcc
   1399c:	ldr	r2, [r4, #-8]
   139a0:	ldr	r3, [sp, #4]
   139a4:	cmp	r2, #2
   139a8:	ldrne	r5, [r4, #-44]	; 0xffffffd4
   139ac:	sub	r8, r3, r8
   139b0:	subne	r5, r7, r5
   139b4:	bne	139d8 <sav_read_compressed_data.constprop.5+0x134>
   139b8:	mov	r2, r6
   139bc:	mov	r1, r7
   139c0:	str	r3, [sp, #4]
   139c4:	mov	r0, r9
   139c8:	bl	135cc <sav_process_row>
   139cc:	subs	r5, r0, #0
   139d0:	bne	13a08 <sav_read_compressed_data.constprop.5+0x164>
   139d4:	ldr	r3, [sp, #4]
   139d8:	ldr	r2, [r4, #-8]
   139dc:	cmp	r2, #3
   139e0:	beq	13a0c <sav_read_compressed_data.constprop.5+0x168>
   139e4:	ldr	r1, [r6, #356]	; 0x164
   139e8:	cmp	r1, #0
   139ec:	ble	139fc <sav_read_compressed_data.constprop.5+0x158>
   139f0:	ldr	r0, [r6, #364]	; 0x16c
   139f4:	cmp	r1, r0
   139f8:	beq	13a0c <sav_read_compressed_data.constprop.5+0x168>
   139fc:	cmp	r2, #0
   13a00:	bne	1396c <sav_read_compressed_data.constprop.5+0xc8>
   13a04:	b	1391c <sav_read_compressed_data.constprop.5+0x78>
   13a08:	mov	sl, r5
   13a0c:	cmp	r9, #0
   13a10:	beq	13a1c <sav_read_compressed_data.constprop.5+0x178>
   13a14:	mov	r0, r9
   13a18:	bl	3ed4 <free@plt>
   13a1c:	mov	r0, sl
   13a20:	add	sp, sp, #65536	; 0x10000
   13a24:	add	sp, sp, #68	; 0x44
   13a28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013a2c <sav_parse_timestamp>:
   13a2c:	push	{r4, r5, r6, r7, lr}
   13a30:	sub	sp, sp, #60	; 0x3c
   13a34:	mov	r4, r0
   13a38:	add	r5, sp, #12
   13a3c:	mov	r7, r1
   13a40:	mov	r2, #44	; 0x2c
   13a44:	mov	r1, #0
   13a48:	mov	r0, r5
   13a4c:	bl	42b8 <memset@plt>
   13a50:	mvn	r3, #0
   13a54:	mov	r2, r5
   13a58:	mov	r1, #8
   13a5c:	add	r0, r7, #101	; 0x65
   13a60:	str	r3, [sp, #44]	; 0x2c
   13a64:	ldr	r3, [r4, #40]	; 0x28
   13a68:	str	r3, [sp]
   13a6c:	ldr	r3, [r4, #24]
   13a70:	bl	3eec <sav_parse_time@plt>
   13a74:	subs	r6, r0, #0
   13a78:	bne	13aac <sav_parse_timestamp+0x80>
   13a7c:	ldr	r3, [r4, #40]	; 0x28
   13a80:	mov	r2, r5
   13a84:	mov	r1, #9
   13a88:	add	r0, r7, #92	; 0x5c
   13a8c:	str	r3, [sp]
   13a90:	ldr	r3, [r4, #24]
   13a94:	bl	409c <sav_parse_date@plt>
   13a98:	subs	r6, r0, #0
   13a9c:	bne	13aac <sav_parse_timestamp+0x80>
   13aa0:	mov	r0, r5
   13aa4:	bl	3e68 <mktime@plt>
   13aa8:	str	r0, [r4, #324]	; 0x144
   13aac:	mov	r0, r6
   13ab0:	add	sp, sp, #60	; 0x3c
   13ab4:	pop	{r4, r5, r6, r7, pc}

00013ab8 <readstat_parse_sav>:
   13ab8:	ldr	r3, [pc, #1232]	; 13f90 <readstat_parse_sav+0x4d8>
   13abc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ac0:	mov	r5, r0
   13ac4:	mov	r8, r2
   13ac8:	mov	r0, r1
   13acc:	vpush	{d8-d10}
   13ad0:	sub	sp, sp, #892	; 0x37c
   13ad4:	add	r3, pc, r3
   13ad8:	str	r3, [sp, #52]	; 0x34
   13adc:	ldr	r3, [r5, #32]
   13ae0:	str	r3, [sp, #24]
   13ae4:	ldr	r2, [sp, #24]
   13ae8:	ldr	r3, [r3]
   13aec:	ldr	r1, [r2, #20]
   13af0:	blx	r3
   13af4:	cmn	r0, #1
   13af8:	moveq	r3, #1
   13afc:	streq	r3, [sp, #20]
   13b00:	beq	13e74 <readstat_parse_sav+0x3bc>
   13b04:	ldr	r3, [sp, #24]
   13b08:	mov	r1, #2
   13b0c:	mov	r0, #0
   13b10:	ldr	r2, [sp, #24]
   13b14:	ldr	r3, [r3, #8]
   13b18:	ldr	r2, [r2, #20]
   13b1c:	blx	r3
   13b20:	cmn	r0, #1
   13b24:	mov	r7, r0
   13b28:	bne	13b3c <readstat_parse_sav+0x84>
   13b2c:	mov	r4, #0
   13b30:	mov	r3, #15
   13b34:	str	r3, [sp, #20]
   13b38:	b	13e50 <readstat_parse_sav+0x398>
   13b3c:	ldr	r3, [sp, #24]
   13b40:	mov	r1, #0
   13b44:	mov	r0, r1
   13b48:	ldr	r2, [sp, #24]
   13b4c:	ldr	r3, [r3, #8]
   13b50:	ldr	r2, [r2, #20]
   13b54:	blx	r3
   13b58:	cmn	r0, #1
   13b5c:	beq	13b2c <readstat_parse_sav+0x74>
   13b60:	ldr	r3, [sp, #24]
   13b64:	add	r6, sp, #128	; 0x80
   13b68:	mov	r1, #176	; 0xb0
   13b6c:	mov	r0, r6
   13b70:	ldr	r2, [sp, #24]
   13b74:	ldr	r3, [r3, #12]
   13b78:	ldr	r2, [r2, #20]
   13b7c:	blx	r3
   13b80:	cmp	r0, #175	; 0xaf
   13b84:	movls	r4, #0
   13b88:	movls	r3, #2
   13b8c:	bls	13b34 <readstat_parse_sav+0x7c>
   13b90:	mov	r0, r6
   13b94:	ldr	r1, [sp, #24]
   13b98:	bl	406c <sav_ctx_init@plt>
   13b9c:	subs	r4, r0, #0
   13ba0:	beq	152f4 <readstat_parse_sav+0x183c>
   13ba4:	mov	lr, r5
   13ba8:	mov	ip, r4
   13bac:	ldm	lr!, {r0, r1, r2, r3}
   13bb0:	stmia	ip!, {r0, r1, r2, r3}
   13bb4:	ldm	lr, {r0, r1, r2, r3}
   13bb8:	stm	ip, {r0, r1, r2, r3}
   13bbc:	ldr	r3, [r5, #36]	; 0x24
   13bc0:	ldr	r1, [r4, #352]	; 0x160
   13bc4:	str	r3, [r4, #56]	; 0x38
   13bc8:	ldr	r3, [r5, #40]	; 0x28
   13bcc:	str	r7, [r4, #32]
   13bd0:	str	r8, [r4, #40]	; 0x28
   13bd4:	str	r3, [r4, #60]	; 0x3c
   13bd8:	ldr	r3, [r5, #48]	; 0x30
   13bdc:	cmp	r3, #0
   13be0:	strgt	r3, [r4, #360]	; 0x168
   13be4:	cmn	r1, #1
   13be8:	ldr	r3, [r5, #44]	; 0x2c
   13bec:	beq	13c14 <readstat_parse_sav+0x15c>
   13bf0:	ldr	r2, [r4, #360]	; 0x168
   13bf4:	subs	r2, r1, r2
   13bf8:	movmi	r2, #0
   13bfc:	strmi	r1, [r4, #360]	; 0x168
   13c00:	cmp	r3, #0
   13c04:	cmpgt	r2, r3
   13c08:	movle	r3, r2
   13c0c:	str	r3, [r4, #356]	; 0x164
   13c10:	b	13c1c <readstat_parse_sav+0x164>
   13c14:	cmp	r3, #0
   13c18:	bgt	13c0c <readstat_parse_sav+0x154>
   13c1c:	mov	r1, r6
   13c20:	mov	r0, r4
   13c24:	bl	3e08 <sav_parse_timestamp@plt>
   13c28:	subs	r3, r0, #0
   13c2c:	str	r3, [sp, #20]
   13c30:	bne	13e50 <readstat_parse_sav+0x398>
   13c34:	mov	r0, r4
   13c38:	bl	13104 <sav_parse_records_pass1>
   13c3c:	subs	r3, r0, #0
   13c40:	str	r3, [sp, #20]
   13c44:	bne	13e50 <readstat_parse_sav+0x398>
   13c48:	ldr	r3, [sp, #24]
   13c4c:	mov	r1, r0
   13c50:	mov	r0, #176	; 0xb0
   13c54:	ldr	r2, [sp, #24]
   13c58:	ldr	r3, [r3, #8]
   13c5c:	ldr	r2, [r2, #20]
   13c60:	blx	r3
   13c64:	cmn	r0, #1
   13c68:	beq	13b30 <readstat_parse_sav+0x78>
   13c6c:	mov	r0, r4
   13c70:	bl	13068 <sav_update_progress>
   13c74:	subs	r3, r0, #0
   13c78:	str	r3, [sp, #20]
   13c7c:	bne	13e50 <readstat_parse_sav+0x398>
   13c80:	ldr	r3, [r4, #36]	; 0x24
   13c84:	mov	r0, #4096	; 0x1000
   13c88:	str	r3, [sp, #32]
   13c8c:	bl	4240 <readstat_malloc@plt>
   13c90:	subs	r3, r0, #0
   13c94:	str	r3, [sp, #28]
   13c98:	beq	15304 <readstat_parse_sav+0x184c>
   13c9c:	vldr	d8, [pc, #732]	; 13f80 <readstat_parse_sav+0x4c8>
   13ca0:	mov	r3, #4096	; 0x1000
   13ca4:	vldr	d9, [pc, #732]	; 13f88 <readstat_parse_sav+0x4d0>
   13ca8:	str	r3, [sp, #48]	; 0x30
   13cac:	ldr	r3, [sp, #32]
   13cb0:	mov	r1, #4
   13cb4:	add	r0, sp, #68	; 0x44
   13cb8:	ldr	r2, [sp, #32]
   13cbc:	ldr	r3, [r3, #12]
   13cc0:	ldr	r2, [r2, #20]
   13cc4:	blx	r3
   13cc8:	cmp	r0, #3
   13ccc:	bls	147f8 <readstat_parse_sav+0xd40>
   13cd0:	ldrb	r3, [r4, #436]	; 0x1b4
   13cd4:	tst	r3, #1
   13cd8:	beq	13ce8 <readstat_parse_sav+0x230>
   13cdc:	ldr	r0, [sp, #68]	; 0x44
   13ce0:	bl	3da8 <byteswap4@plt>
   13ce4:	str	r0, [sp, #68]	; 0x44
   13ce8:	ldr	sl, [sp, #68]	; 0x44
   13cec:	cmp	sl, #6
   13cf0:	beq	147b8 <readstat_parse_sav+0xd00>
   13cf4:	bhi	13d10 <readstat_parse_sav+0x258>
   13cf8:	cmp	sl, #2
   13cfc:	beq	13e84 <readstat_parse_sav+0x3cc>
   13d00:	cmp	sl, #3
   13d04:	beq	14334 <readstat_parse_sav+0x87c>
   13d08:	mov	sl, #5
   13d0c:	b	1431c <readstat_parse_sav+0x864>
   13d10:	cmp	sl, #7
   13d14:	beq	14898 <readstat_parse_sav+0xde0>
   13d18:	movw	r3, #999	; 0x3e7
   13d1c:	cmp	sl, r3
   13d20:	bne	13d08 <readstat_parse_sav+0x250>
   13d24:	ldr	r3, [r4, #36]	; 0x24
   13d28:	mov	r1, #4
   13d2c:	add	r0, sp, #560	; 0x230
   13d30:	ldr	r5, [r3, #12]
   13d34:	ldr	r2, [r3, #20]
   13d38:	blx	r5
   13d3c:	cmp	r0, #3
   13d40:	bls	147f8 <readstat_parse_sav+0xd40>
   13d44:	ldr	r0, [sp, #28]
   13d48:	bl	3ed4 <free@plt>
   13d4c:	ldr	r3, [sp, #20]
   13d50:	cmp	r3, #0
   13d54:	bne	13e50 <readstat_parse_sav+0x398>
   13d58:	ldr	r0, [r4, #340]	; 0x154
   13d5c:	mov	r2, r3
   13d60:	mov	ip, #252	; 0xfc
   13d64:	str	r3, [r4, #348]	; 0x15c
   13d68:	cmp	r2, r0
   13d6c:	blt	14f34 <readstat_parse_sav+0x147c>
   13d70:	mov	r1, #4
   13d74:	ldr	r0, [r4, #348]	; 0x15c
   13d78:	bl	3fdc <readstat_calloc@plt>
   13d7c:	ldr	r2, [r4, #348]	; 0x15c
   13d80:	str	r0, [r4, #52]	; 0x34
   13d84:	cmp	r2, #0
   13d88:	beq	152f4 <readstat_parse_sav+0x183c>
   13d8c:	ldr	r3, [r4]
   13d90:	cmp	r3, #0
   13d94:	beq	14f6c <readstat_parse_sav+0x14b4>
   13d98:	mov	r0, #0
   13d9c:	mov	r1, #0
   13da0:	add	r3, sp, #600	; 0x258
   13da4:	add	ip, sp, #568	; 0x238
   13da8:	add	r5, r4, #64	; 0x40
   13dac:	strd	r0, [r3]
   13db0:	strd	r0, [r3, #8]
   13db4:	ldr	r3, [r4, #352]	; 0x160
   13db8:	cmn	r3, #1
   13dbc:	asr	r3, r2, #31
   13dc0:	ldrne	r0, [r4, #356]	; 0x164
   13dc4:	mvneq	r0, #0
   13dc8:	mvneq	r1, #0
   13dcc:	strd	r2, [ip]
   13dd0:	ldr	r3, [r4, #324]	; 0x144
   13dd4:	ldr	r2, [r4, #424]	; 0x1a8
   13dd8:	asrne	r1, r0, #31
   13ddc:	str	r3, [sp, #576]	; 0x240
   13de0:	str	r3, [sp, #580]	; 0x244
   13de4:	asr	r3, r2, #31
   13de8:	strd	r0, [ip, #-8]
   13dec:	movw	r1, #257	; 0x101
   13df0:	mov	r0, r5
   13df4:	strd	r2, [ip, #16]
   13df8:	add	r2, sp, #237	; 0xed
   13dfc:	ldr	r3, [r4, #428]	; 0x1ac
   13e00:	str	r3, [sp, #592]	; 0x250
   13e04:	ldr	r3, [r4, #432]	; 0x1b0
   13e08:	str	r3, [sp, #596]	; 0x254
   13e0c:	ldr	r3, [r4, #56]	; 0x38
   13e10:	str	r3, [sp, #608]	; 0x260
   13e14:	ldr	r3, [r4, #336]	; 0x150
   13e18:	str	r3, [sp]
   13e1c:	mov	r3, #64	; 0x40
   13e20:	bl	424c <readstat_convert@plt>
   13e24:	cmp	r0, #0
   13e28:	bne	13e4c <readstat_parse_sav+0x394>
   13e2c:	add	r0, sp, #560	; 0x230
   13e30:	ldr	r3, [r4]
   13e34:	ldr	r1, [r4, #40]	; 0x28
   13e38:	str	r5, [sp, #604]	; 0x25c
   13e3c:	blx	r3
   13e40:	cmp	r0, #0
   13e44:	beq	14f6c <readstat_parse_sav+0x14b4>
   13e48:	mov	r0, #4
   13e4c:	str	r0, [sp, #20]
   13e50:	ldr	r3, [sp, #24]
   13e54:	ldr	r2, [sp, #24]
   13e58:	ldr	r3, [r3, #4]
   13e5c:	ldr	r0, [r2, #20]
   13e60:	blx	r3
   13e64:	cmp	r4, #0
   13e68:	beq	13e74 <readstat_parse_sav+0x3bc>
   13e6c:	mov	r0, r4
   13e70:	bl	3f28 <sav_ctx_free@plt>
   13e74:	ldr	r0, [sp, #20]
   13e78:	add	sp, sp, #892	; 0x37c
   13e7c:	vpop	{d8-d10}
   13e80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e84:	add	r6, sp, #560	; 0x230
   13e88:	mov	r1, #0
   13e8c:	ldr	r5, [r4, #36]	; 0x24
   13e90:	mov	r2, #28
   13e94:	mov	r0, r6
   13e98:	bl	42b8 <memset@plt>
   13e9c:	ldr	r3, [r4, #48]	; 0x30
   13ea0:	ldr	r1, [r4, #340]	; 0x154
   13ea4:	cmp	r1, r3
   13ea8:	beq	13ed0 <readstat_parse_sav+0x418>
   13eac:	mov	r1, #28
   13eb0:	mov	r0, r6
   13eb4:	ldr	r3, [r5, #12]
   13eb8:	ldr	r2, [r5, #20]
   13ebc:	blx	r3
   13ec0:	cmp	r0, #27
   13ec4:	bhi	13ef8 <readstat_parse_sav+0x440>
   13ec8:	mov	r5, #0
   13ecc:	b	14314 <readstat_parse_sav+0x85c>
   13ed0:	lsl	r3, r1, #1
   13ed4:	ldr	r0, [r4, #44]	; 0x2c
   13ed8:	lsl	r1, r1, #3
   13edc:	str	r3, [r4, #48]	; 0x30
   13ee0:	bl	4300 <readstat_realloc@plt>
   13ee4:	cmp	r0, #0
   13ee8:	str	r0, [r4, #44]	; 0x2c
   13eec:	bne	13eac <readstat_parse_sav+0x3f4>
   13ef0:	mov	sl, #3
   13ef4:	b	13ec8 <readstat_parse_sav+0x410>
   13ef8:	ldrb	r3, [r4, #436]	; 0x1b4
   13efc:	ldr	r0, [sp, #572]	; 0x23c
   13f00:	tst	r3, #1
   13f04:	beq	13f0c <readstat_parse_sav+0x454>
   13f08:	bl	3da8 <byteswap4@plt>
   13f0c:	ldrb	r3, [r4, #436]	; 0x1b4
   13f10:	str	r0, [sp, #572]	; 0x23c
   13f14:	ldr	r0, [sp, #576]	; 0x240
   13f18:	tst	r3, #1
   13f1c:	beq	13f24 <readstat_parse_sav+0x46c>
   13f20:	bl	3da8 <byteswap4@plt>
   13f24:	ldrb	r3, [r4, #436]	; 0x1b4
   13f28:	str	r0, [sp, #576]	; 0x240
   13f2c:	ldr	r6, [sp, #560]	; 0x230
   13f30:	tst	r3, #1
   13f34:	beq	13f44 <readstat_parse_sav+0x48c>
   13f38:	mov	r0, r6
   13f3c:	bl	3da8 <byteswap4@plt>
   13f40:	mov	r6, r0
   13f44:	cmp	r6, #0
   13f48:	bge	13f9c <readstat_parse_sav+0x4e4>
   13f4c:	ldr	r3, [r4, #340]	; 0x154
   13f50:	cmp	r3, #0
   13f54:	beq	13d08 <readstat_parse_sav+0x250>
   13f58:	ldr	r2, [r4, #344]	; 0x158
   13f5c:	sub	r3, r3, #-1073741823	; 0xc0000001
   13f60:	add	r2, r2, #1
   13f64:	str	r2, [r4, #344]	; 0x158
   13f68:	ldr	r2, [r4, #44]	; 0x2c
   13f6c:	ldr	r2, [r2, r3, lsl #2]
   13f70:	ldr	r3, [r2, #16]
   13f74:	add	r3, r3, #1
   13f78:	str	r3, [r2, #16]
   13f7c:	b	13cac <readstat_parse_sav+0x1f4>
   13f80:	.word	0x00000000
   13f84:	.word	0x7ff80000
   13f88:	.word	0x00000000
   13f8c:	.word	0x7ff00000
   13f90:	.word	0x0002c524
   13f94:	.word	0xfff00000
   13f98:	.word	0x000002f4
   13f9c:	mov	r1, #280	; 0x118
   13fa0:	mov	r0, #1
   13fa4:	bl	3fdc <readstat_calloc@plt>
   13fa8:	subs	r5, r0, #0
   13fac:	beq	13ef0 <readstat_parse_sav+0x438>
   13fb0:	mov	r3, #1
   13fb4:	add	r7, sp, #580	; 0x244
   13fb8:	mov	r2, r7
   13fbc:	mov	r1, #9
   13fc0:	str	r3, [r5, #16]
   13fc4:	add	r0, r5, #187	; 0xbb
   13fc8:	str	r3, [r5, #48]	; 0x30
   13fcc:	ldr	r3, [r4, #340]	; 0x154
   13fd0:	str	r3, [r5, #8]
   13fd4:	ldr	r3, [r4, #344]	; 0x158
   13fd8:	str	r3, [r5, #12]
   13fdc:	mvn	r3, #0
   13fe0:	str	r3, [r5, #4]
   13fe4:	mov	r3, #0
   13fe8:	str	r3, [sp]
   13fec:	mov	r3, #8
   13ff0:	bl	424c <readstat_convert@plt>
   13ff4:	cmp	r0, #0
   13ff8:	bne	14324 <readstat_parse_sav+0x86c>
   13ffc:	mov	r3, #8
   14000:	mov	r2, r7
   14004:	str	r0, [sp]
   14008:	mov	r1, #65	; 0x41
   1400c:	add	r0, r5, #196	; 0xc4
   14010:	bl	424c <readstat_convert@plt>
   14014:	cmp	r0, #0
   14018:	bne	14324 <readstat_parse_sav+0x86c>
   1401c:	ldr	r3, [sp, #572]	; 0x23c
   14020:	uxtb	r2, r3
   14024:	str	r2, [r5, #32]
   14028:	ubfx	r2, r3, #8, #8
   1402c:	ubfx	r3, r3, #16, #8
   14030:	str	r2, [r5, #28]
   14034:	ldr	r2, [sp, #576]	; 0x240
   14038:	str	r3, [r5, #24]
   1403c:	uxtb	r1, r2
   14040:	str	r1, [r5, #44]	; 0x2c
   14044:	ubfx	r1, r2, #8, #8
   14048:	ubfx	r2, r2, #16, #8
   1404c:	cmp	r2, #1
   14050:	cmpne	r3, #1
   14054:	moveq	r3, #1
   14058:	movne	r3, #0
   1405c:	cmp	r6, #0
   14060:	moveq	r6, r3
   14064:	ldr	r3, [sp, #564]	; 0x234
   14068:	movne	r6, #1
   1406c:	cmp	r6, #0
   14070:	str	r2, [r5, #36]	; 0x24
   14074:	moveq	r0, #5
   14078:	str	r0, [r5]
   1407c:	cmp	r3, #0
   14080:	str	r1, [r5, #40]	; 0x28
   14084:	beq	14154 <readstat_parse_sav+0x69c>
   14088:	ldr	r8, [r4, #36]	; 0x24
   1408c:	mov	r1, #4
   14090:	add	r0, sp, #304	; 0x130
   14094:	ldr	r3, [r8, #12]
   14098:	ldr	r2, [r8, #20]
   1409c:	blx	r3
   140a0:	cmp	r0, #3
   140a4:	bls	14184 <readstat_parse_sav+0x6cc>
   140a8:	ldrb	r3, [r4, #436]	; 0x1b4
   140ac:	ldr	r0, [sp, #304]	; 0x130
   140b0:	tst	r3, #1
   140b4:	beq	140bc <readstat_parse_sav+0x604>
   140b8:	bl	3da8 <byteswap4@plt>
   140bc:	cmp	r0, #0
   140c0:	str	r0, [sp, #304]	; 0x130
   140c4:	beq	14154 <readstat_parse_sav+0x69c>
   140c8:	add	r0, r0, #3
   140cc:	bic	r6, r0, #3
   140d0:	mov	r0, r6
   140d4:	bl	4240 <readstat_malloc@plt>
   140d8:	subs	r9, r0, #0
   140dc:	beq	141a8 <readstat_parse_sav+0x6f0>
   140e0:	ldr	r7, [sp, #304]	; 0x130
   140e4:	lsl	r7, r7, #2
   140e8:	add	r7, r7, #1
   140ec:	mov	r0, r7
   140f0:	bl	4240 <readstat_malloc@plt>
   140f4:	cmp	r0, #0
   140f8:	str	r0, [r5, #264]	; 0x108
   140fc:	moveq	r6, #3
   14100:	beq	14144 <readstat_parse_sav+0x68c>
   14104:	mov	r1, r6
   14108:	mov	r0, r9
   1410c:	ldr	r3, [r8, #12]
   14110:	ldr	r2, [r8, #20]
   14114:	blx	r3
   14118:	cmp	r6, r0
   1411c:	movhi	r6, #2
   14120:	bhi	14144 <readstat_parse_sav+0x68c>
   14124:	ldr	r3, [r4, #336]	; 0x150
   14128:	mov	r2, r9
   1412c:	mov	r1, r7
   14130:	str	r3, [sp]
   14134:	ldr	r0, [r5, #264]	; 0x108
   14138:	ldr	r3, [sp, #304]	; 0x130
   1413c:	bl	424c <readstat_convert@plt>
   14140:	mov	r6, r0
   14144:	mov	r0, r9
   14148:	bl	3ed4 <free@plt>
   1414c:	cmp	r6, #0
   14150:	bne	14188 <readstat_parse_sav+0x6d0>
   14154:	ldr	r0, [sp, #568]	; 0x238
   14158:	cmp	r0, #0
   1415c:	bne	141b0 <readstat_parse_sav+0x6f8>
   14160:	ldr	r2, [r4, #44]	; 0x2c
   14164:	ldr	r3, [r4, #340]	; 0x154
   14168:	str	r5, [r2, r3, lsl #2]
   1416c:	add	r3, r3, #1
   14170:	str	r3, [r4, #340]	; 0x154
   14174:	ldr	r3, [r4, #344]	; 0x158
   14178:	add	r3, r3, #1
   1417c:	str	r3, [r4, #344]	; 0x158
   14180:	b	13cac <readstat_parse_sav+0x1f4>
   14184:	mov	r6, #2
   14188:	ldr	r0, [r5, #264]	; 0x108
   1418c:	cmp	r0, #0
   14190:	beq	141a0 <readstat_parse_sav+0x6e8>
   14194:	bl	3ed4 <free@plt>
   14198:	mov	r3, #0
   1419c:	str	r3, [r5, #264]	; 0x108
   141a0:	mov	sl, r6
   141a4:	b	14314 <readstat_parse_sav+0x85c>
   141a8:	mov	r6, #3
   141ac:	b	14188 <readstat_parse_sav+0x6d0>
   141b0:	ldrb	r3, [r4, #436]	; 0x1b4
   141b4:	tst	r3, #1
   141b8:	beq	141c0 <readstat_parse_sav+0x708>
   141bc:	bl	3da8 <byteswap4@plt>
   141c0:	add	r3, r0, #3
   141c4:	str	r0, [r5, #52]	; 0x34
   141c8:	cmp	r3, #6
   141cc:	bhi	1432c <readstat_parse_sav+0x874>
   141d0:	cmp	r0, #0
   141d4:	ldr	r7, [r4, #36]	; 0x24
   141d8:	movlt	r3, #1
   141dc:	movge	r3, #0
   141e0:	rsblt	r0, r0, #0
   141e4:	str	r3, [r5, #56]	; 0x38
   141e8:	ldr	r3, [r5]
   141ec:	strlt	r0, [r5, #52]	; 0x34
   141f0:	cmp	r3, #5
   141f4:	addne	r8, r5, #88	; 0x58
   141f8:	movne	r6, #0
   141fc:	addne	r9, sp, #304	; 0x130
   14200:	bne	14300 <readstat_parse_sav+0x848>
   14204:	ldr	r1, [r5, #52]	; 0x34
   14208:	add	r6, r5, #64	; 0x40
   1420c:	mov	r0, r6
   14210:	ldr	r3, [r7, #12]
   14214:	ldr	r2, [r7, #20]
   14218:	lsl	r1, r1, #3
   1421c:	blx	r3
   14220:	ldr	r3, [r5, #52]	; 0x34
   14224:	cmp	r0, r3, lsl #3
   14228:	bcc	14314 <readstat_parse_sav+0x85c>
   1422c:	ldr	r9, [pc, #-672]	; 13f94 <readstat_parse_sav+0x4dc>
   14230:	mov	r7, #0
   14234:	mov	r8, #0
   14238:	ldr	r3, [r5, #52]	; 0x34
   1423c:	cmp	r7, r3
   14240:	bge	14160 <readstat_parse_sav+0x6a8>
   14244:	ldrb	r3, [r4, #436]	; 0x1b4
   14248:	tst	r3, #1
   1424c:	beq	1425c <readstat_parse_sav+0x7a4>
   14250:	vldr	d0, [r6]
   14254:	bl	4528 <byteswap_double@plt>
   14258:	vstr	d0, [r6]
   1425c:	ldr	r0, [r6]
   14260:	add	r3, sp, #304	; 0x130
   14264:	add	ip, r4, #400	; 0x190
   14268:	add	r7, r7, #1
   1426c:	add	r6, r6, #8
   14270:	ldr	r1, [r6, #-4]
   14274:	stmia	r3!, {r0, r1}
   14278:	add	r3, sp, #312	; 0x138
   1427c:	ldrd	r0, [r3, #-8]
   14280:	ldrd	r2, [ip, #-8]
   14284:	cmp	r3, r1
   14288:	cmpeq	r2, r0
   1428c:	ldrd	r2, [ip]
   14290:	vstreq	d8, [r6, #-8]
   14294:	cmp	r1, r3
   14298:	add	r3, r4, #416	; 0x1a0
   1429c:	cmpeq	r0, r2
   142a0:	ldrd	r2, [r3, #-8]
   142a4:	strdeq	r8, [r6, #-8]
   142a8:	cmp	r1, r3
   142ac:	cmpeq	r0, r2
   142b0:	vstreq	d9, [r6, #-8]
   142b4:	b	14238 <readstat_parse_sav+0x780>
   142b8:	mov	r1, #8
   142bc:	mov	r0, r9
   142c0:	ldr	r3, [r7, #12]
   142c4:	ldr	r2, [r7, #20]
   142c8:	blx	r3
   142cc:	cmp	r0, #7
   142d0:	bls	14310 <readstat_parse_sav+0x858>
   142d4:	ldr	r3, [r4, #336]	; 0x150
   142d8:	mov	r0, r8
   142dc:	mov	r2, r9
   142e0:	mov	r1, #33	; 0x21
   142e4:	add	r8, r8, #33	; 0x21
   142e8:	str	r3, [sp]
   142ec:	mov	r3, #8
   142f0:	bl	424c <readstat_convert@plt>
   142f4:	subs	sl, r0, #0
   142f8:	bne	14314 <readstat_parse_sav+0x85c>
   142fc:	add	r6, r6, #1
   14300:	ldr	r3, [r5, #52]	; 0x34
   14304:	cmp	r6, r3
   14308:	blt	142b8 <readstat_parse_sav+0x800>
   1430c:	b	14160 <readstat_parse_sav+0x6a8>
   14310:	mov	sl, #2
   14314:	mov	r0, r5
   14318:	bl	4438 <spss_varinfo_free@plt>
   1431c:	str	sl, [sp, #20]
   14320:	b	13d44 <readstat_parse_sav+0x28c>
   14324:	mov	sl, r0
   14328:	b	14314 <readstat_parse_sav+0x85c>
   1432c:	mov	sl, #5
   14330:	b	14314 <readstat_parse_sav+0x85c>
   14334:	ldr	r5, [r4, #36]	; 0x24
   14338:	mov	r1, #4
   1433c:	add	r0, sp, #72	; 0x48
   14340:	ldr	r3, [r5, #12]
   14344:	ldr	r2, [r5, #20]
   14348:	blx	r3
   1434c:	cmp	r0, #3
   14350:	bls	147f8 <readstat_parse_sav+0xd40>
   14354:	ldrb	r3, [r4, #436]	; 0x1b4
   14358:	tst	r3, #1
   1435c:	beq	1436c <readstat_parse_sav+0x8b4>
   14360:	ldr	r0, [sp, #72]	; 0x48
   14364:	bl	3da8 <byteswap4@plt>
   14368:	str	r0, [sp, #72]	; 0x48
   1436c:	ldr	r0, [sp, #72]	; 0x48
   14370:	cmp	r0, #0
   14374:	moveq	fp, r0
   14378:	beq	1438c <readstat_parse_sav+0x8d4>
   1437c:	mov	r1, #72	; 0x48
   14380:	bl	3fdc <readstat_calloc@plt>
   14384:	subs	fp, r0, #0
   14388:	beq	1431c <readstat_parse_sav+0x864>
   1438c:	add	r3, sp, #560	; 0x230
   14390:	mov	r8, fp
   14394:	str	fp, [sp, #36]	; 0x24
   14398:	mov	r7, #0
   1439c:	str	r3, [sp, #40]	; 0x28
   143a0:	ldr	r1, [sp, #72]	; 0x48
   143a4:	ldr	r3, [r5, #12]
   143a8:	ldr	r2, [r5, #20]
   143ac:	cmp	r1, r7
   143b0:	bhi	14470 <readstat_parse_sav+0x9b8>
   143b4:	mov	r1, #4
   143b8:	add	r0, sp, #88	; 0x58
   143bc:	blx	r3
   143c0:	cmp	r0, #3
   143c4:	bls	1530c <readstat_parse_sav+0x1854>
   143c8:	ldrb	r3, [r4, #436]	; 0x1b4
   143cc:	tst	r3, #1
   143d0:	beq	143e0 <readstat_parse_sav+0x928>
   143d4:	ldr	r0, [sp, #88]	; 0x58
   143d8:	bl	3da8 <byteswap4@plt>
   143dc:	str	r0, [sp, #88]	; 0x58
   143e0:	ldr	r1, [sp, #88]	; 0x58
   143e4:	cmp	r1, #4
   143e8:	bne	15314 <readstat_parse_sav+0x185c>
   143ec:	add	r0, sp, #76	; 0x4c
   143f0:	ldr	r3, [r5, #12]
   143f4:	ldr	r2, [r5, #20]
   143f8:	blx	r3
   143fc:	cmp	r0, #3
   14400:	bls	1530c <readstat_parse_sav+0x1854>
   14404:	ldrb	r3, [r4, #436]	; 0x1b4
   14408:	tst	r3, #1
   1440c:	beq	1441c <readstat_parse_sav+0x964>
   14410:	ldr	r0, [sp, #76]	; 0x4c
   14414:	bl	3da8 <byteswap4@plt>
   14418:	str	r0, [sp, #76]	; 0x4c
   1441c:	ldr	r9, [sp, #76]	; 0x4c
   14420:	cmp	r9, #0
   14424:	beq	14438 <readstat_parse_sav+0x980>
   14428:	lsl	r0, r9, #2
   1442c:	bl	4240 <readstat_malloc@plt>
   14430:	subs	r9, r0, #0
   14434:	beq	1452c <readstat_parse_sav+0xa74>
   14438:	ldr	r1, [sp, #76]	; 0x4c
   1443c:	mov	r0, r9
   14440:	ldr	r3, [r5, #12]
   14444:	ldr	r2, [r5, #20]
   14448:	lsl	r1, r1, #2
   1444c:	blx	r3
   14450:	ldr	r3, [sp, #76]	; 0x4c
   14454:	cmp	r0, r3, lsl #2
   14458:	movcs	r8, #0
   1445c:	addcs	r6, sp, #560	; 0x230
   14460:	movcs	r5, r8
   14464:	bcs	145a4 <readstat_parse_sav+0xaec>
   14468:	mov	sl, #2
   1446c:	b	14614 <readstat_parse_sav+0xb5c>
   14470:	mov	r1, #0
   14474:	mov	r0, r8
   14478:	strb	r1, [sp, #560]	; 0x230
   1447c:	mov	r1, #8
   14480:	blx	r3
   14484:	cmp	r0, #7
   14488:	ble	14524 <readstat_parse_sav+0xa6c>
   1448c:	mov	r1, #1
   14490:	ldr	r3, [r5, #12]
   14494:	ldr	r2, [r5, #20]
   14498:	ldr	r0, [sp, #40]	; 0x28
   1449c:	blx	r3
   144a0:	cmp	r0, #0
   144a4:	ble	14524 <readstat_parse_sav+0xa6c>
   144a8:	ldrb	r6, [sp, #560]	; 0x230
   144ac:	add	r9, sp, #304	; 0x130
   144b0:	mov	r0, r9
   144b4:	ldr	r3, [r5, #12]
   144b8:	ldr	r2, [r5, #20]
   144bc:	add	r6, r6, #8
   144c0:	and	r6, r6, #504	; 0x1f8
   144c4:	sub	r6, r6, #1
   144c8:	mov	r1, r6
   144cc:	blx	r3
   144d0:	cmp	r6, r0
   144d4:	bhi	14524 <readstat_parse_sav+0xa6c>
   144d8:	lsl	r1, r6, #2
   144dc:	add	r1, r1, #1
   144e0:	mov	r0, r1
   144e4:	str	r1, [sp, #56]	; 0x38
   144e8:	bl	4240 <readstat_malloc@plt>
   144ec:	cmp	r0, #0
   144f0:	str	r0, [r8, #64]	; 0x40
   144f4:	beq	14538 <readstat_parse_sav+0xa80>
   144f8:	ldr	r3, [r4, #336]	; 0x150
   144fc:	mov	r2, r9
   14500:	add	r8, r8, #72	; 0x48
   14504:	ldr	r1, [sp, #56]	; 0x38
   14508:	str	r3, [sp]
   1450c:	mov	r3, r6
   14510:	bl	424c <readstat_convert@plt>
   14514:	cmp	r0, #0
   14518:	bne	14528 <readstat_parse_sav+0xa70>
   1451c:	add	r7, r7, #1
   14520:	b	143a0 <readstat_parse_sav+0x8e8>
   14524:	mov	r0, #2
   14528:	mov	sl, r0
   1452c:	cmp	fp, #0
   14530:	bne	1462c <readstat_parse_sav+0xb74>
   14534:	b	1431c <readstat_parse_sav+0x864>
   14538:	mov	r0, #3
   1453c:	b	14528 <readstat_parse_sav+0xa70>
   14540:	ldr	r0, [r9, r5, lsl #2]
   14544:	str	r0, [sp, #560]	; 0x230
   14548:	ldrb	r3, [r4, #436]	; 0x1b4
   1454c:	tst	r3, #1
   14550:	beq	1455c <readstat_parse_sav+0xaa4>
   14554:	bl	3da8 <byteswap4@plt>
   14558:	str	r0, [sp, #560]	; 0x230
   1455c:	ldr	r2, [sp, #52]	; 0x34
   14560:	mov	r0, r6
   14564:	add	r5, r5, #1
   14568:	ldr	r3, [sp, #560]	; 0x230
   1456c:	sub	r3, r3, #1
   14570:	str	r3, [sp, #560]	; 0x230
   14574:	ldr	r3, [pc, #-1508]	; 13f98 <readstat_parse_sav+0x4e0>
   14578:	ldr	r3, [r2, r3]
   1457c:	str	r3, [sp]
   14580:	mov	r3, #4
   14584:	ldr	r1, [r4, #44]	; 0x2c
   14588:	ldr	r2, [r4, #340]	; 0x154
   1458c:	bl	42c4 <bsearch@plt>
   14590:	cmp	r0, #0
   14594:	ldrne	r3, [r0]
   14598:	ldrne	r2, [r4, #368]	; 0x170
   1459c:	ldrne	r8, [r3]
   145a0:	strne	r2, [r3, #4]
   145a4:	ldr	r3, [sp, #76]	; 0x4c
   145a8:	cmp	r3, r5
   145ac:	bhi	14540 <readstat_parse_sav+0xa88>
   145b0:	vldr	d10, [pc, #1000]	; 149a0 <readstat_parse_sav+0xee8>
   145b4:	mov	r5, fp
   145b8:	mov	r7, #0
   145bc:	add	r6, r4, #400	; 0x190
   145c0:	ldr	r3, [sp, #72]	; 0x48
   145c4:	cmp	r7, r3
   145c8:	bcc	14654 <readstat_parse_sav+0xb9c>
   145cc:	mov	sl, #0
   145d0:	ldr	r3, [r4, #20]
   145d4:	cmp	r3, #0
   145d8:	beq	14608 <readstat_parse_sav+0xb50>
   145dc:	ldr	r2, [pc, #964]	; 149a8 <readstat_parse_sav+0xef0>
   145e0:	add	r5, sp, #560	; 0x230
   145e4:	mov	r1, #256	; 0x100
   145e8:	mov	r0, r5
   145ec:	mov	r6, #0
   145f0:	ldr	r3, [r4, #368]	; 0x170
   145f4:	ldr	r7, [sp, #72]	; 0x48
   145f8:	add	r2, pc, r2
   145fc:	bl	4294 <snprintf@plt>
   14600:	cmp	r7, r6
   14604:	bgt	14744 <readstat_parse_sav+0xc8c>
   14608:	ldr	r3, [r4, #368]	; 0x170
   1460c:	add	r3, r3, #1
   14610:	str	r3, [r4, #368]	; 0x170
   14614:	cmp	r9, #0
   14618:	beq	14624 <readstat_parse_sav+0xb6c>
   1461c:	mov	r0, r9
   14620:	bl	3ed4 <free@plt>
   14624:	cmp	fp, #0
   14628:	beq	1464c <readstat_parse_sav+0xb94>
   1462c:	mov	r5, #0
   14630:	add	r6, fp, #64	; 0x40
   14634:	mov	r7, #72	; 0x48
   14638:	ldr	r3, [sp, #72]	; 0x48
   1463c:	cmp	r3, r5
   14640:	bhi	1479c <readstat_parse_sav+0xce4>
   14644:	mov	r0, fp
   14648:	bl	3ed4 <free@plt>
   1464c:	cmp	sl, #0
   14650:	b	147d0 <readstat_parse_sav+0xd18>
   14654:	cmp	r8, #5
   14658:	vstr	d10, [sp, #560]	; 0x230
   1465c:	str	r8, [r5, #56]	; 0x38
   14660:	bne	1470c <readstat_parse_sav+0xc54>
   14664:	ldr	r0, [r5]
   14668:	add	r3, sp, #560	; 0x230
   1466c:	ldr	r1, [r5, #4]
   14670:	stmia	r3!, {r0, r1}
   14674:	ldrb	r3, [r4, #436]	; 0x1b4
   14678:	tst	r3, #1
   1467c:	beq	1468c <readstat_parse_sav+0xbd4>
   14680:	vldr	d0, [sp, #560]	; 0x230
   14684:	bl	4528 <byteswap_double@plt>
   14688:	vstr	d0, [sp, #560]	; 0x230
   1468c:	vldr	d7, [sp, #560]	; 0x230
   14690:	ldrd	r2, [r6, #-8]
   14694:	vstr	d7, [sp, #40]	; 0x28
   14698:	ldrd	r0, [sp, #40]	; 0x28
   1469c:	vstr	d7, [r5, #48]	; 0x30
   146a0:	vldr	d7, [sp, #40]	; 0x28
   146a4:	cmp	r1, r3
   146a8:	cmpeq	r0, r2
   146ac:	ldrbeq	r3, [r5, #61]	; 0x3d
   146b0:	vcmp.f64	d7, d7
   146b4:	orreq	r3, r3, #1
   146b8:	strbeq	r3, [r5, #61]	; 0x3d
   146bc:	ldrd	r2, [r6]
   146c0:	cmp	r1, r3
   146c4:	cmpeq	r0, r2
   146c8:	ldrbeq	r3, [r5, #61]	; 0x3d
   146cc:	orreq	r3, r3, #1
   146d0:	strbeq	r3, [r5, #61]	; 0x3d
   146d4:	add	r3, r4, #416	; 0x1a0
   146d8:	ldrd	r2, [r3, #-8]
   146dc:	cmp	r1, r3
   146e0:	cmpeq	r0, r2
   146e4:	ldrbeq	r3, [r5, #61]	; 0x3d
   146e8:	orreq	r3, r3, #1
   146ec:	strbeq	r3, [r5, #61]	; 0x3d
   146f0:	vmrs	APSR_nzcv, fpscr
   146f4:	ldrbvs	r3, [r5, #61]	; 0x3d
   146f8:	orrvs	r3, r3, #1
   146fc:	strbvs	r3, [r5, #61]	; 0x3d
   14700:	add	r7, r7, #1
   14704:	add	r5, r5, #72	; 0x48
   14708:	b	145c0 <readstat_parse_sav+0xb08>
   1470c:	add	r3, r5, #8
   14710:	mov	r2, r5
   14714:	mov	r1, #33	; 0x21
   14718:	str	r3, [sp, #40]	; 0x28
   1471c:	ldr	r3, [r4, #336]	; 0x150
   14720:	str	r3, [sp]
   14724:	mov	r3, #8
   14728:	add	r0, r5, r3
   1472c:	bl	424c <readstat_convert@plt>
   14730:	subs	sl, r0, #0
   14734:	bne	145d0 <readstat_parse_sav+0xb18>
   14738:	ldr	r3, [sp, #40]	; 0x28
   1473c:	str	r3, [r5, #48]	; 0x30
   14740:	b	14700 <readstat_parse_sav+0xc48>
   14744:	ldr	r3, [r4, #40]	; 0x28
   14748:	str	r3, [sp, #12]
   1474c:	ldr	r3, [sp, #36]	; 0x24
   14750:	ldr	r3, [r3, #64]	; 0x40
   14754:	str	r3, [sp, #8]
   14758:	ldr	r3, [sp, #36]	; 0x24
   1475c:	add	r3, r3, #56	; 0x38
   14760:	ldm	r3, {r0, r1}
   14764:	ldr	r3, [sp, #36]	; 0x24
   14768:	stm	sp, {r0, r1}
   1476c:	mov	r0, r5
   14770:	ldr	r1, [r4, #20]
   14774:	add	r3, r3, #48	; 0x30
   14778:	ldm	r3, {r2, r3}
   1477c:	blx	r1
   14780:	ldr	r3, [sp, #36]	; 0x24
   14784:	cmp	r0, #0
   14788:	add	r3, r3, #72	; 0x48
   1478c:	str	r3, [sp, #36]	; 0x24
   14790:	bne	14608 <readstat_parse_sav+0xb50>
   14794:	add	r6, r6, #1
   14798:	b	14600 <readstat_parse_sav+0xb48>
   1479c:	mul	r3, r7, r5
   147a0:	ldr	r0, [r6, r3]
   147a4:	cmp	r0, #0
   147a8:	beq	147b0 <readstat_parse_sav+0xcf8>
   147ac:	bl	3ed4 <free@plt>
   147b0:	add	r5, r5, #1
   147b4:	b	14638 <readstat_parse_sav+0xb80>
   147b8:	ldr	r3, [r4, #4]
   147bc:	cmp	r3, #0
   147c0:	bne	147d8 <readstat_parse_sav+0xd20>
   147c4:	mov	r0, r4
   147c8:	bl	13090 <sav_skip_document_record>
   147cc:	subs	sl, r0, #0
   147d0:	beq	13cac <readstat_parse_sav+0x1f4>
   147d4:	b	1431c <readstat_parse_sav+0x864>
   147d8:	ldr	r6, [r4, #36]	; 0x24
   147dc:	mov	r1, #4
   147e0:	add	r0, sp, #88	; 0x58
   147e4:	ldr	r3, [r6, #12]
   147e8:	ldr	r2, [r6, #20]
   147ec:	blx	r3
   147f0:	cmp	r0, #3
   147f4:	bhi	14800 <readstat_parse_sav+0xd48>
   147f8:	mov	sl, #2
   147fc:	b	1431c <readstat_parse_sav+0x864>
   14800:	ldrb	r3, [r4, #436]	; 0x1b4
   14804:	tst	r3, #1
   14808:	beq	14818 <readstat_parse_sav+0xd60>
   1480c:	ldr	r0, [sp, #88]	; 0x58
   14810:	bl	3da8 <byteswap4@plt>
   14814:	str	r0, [sp, #88]	; 0x58
   14818:	mov	r5, #0
   1481c:	add	r7, sp, #304	; 0x130
   14820:	add	r8, sp, #560	; 0x230
   14824:	b	14888 <readstat_parse_sav+0xdd0>
   14828:	mov	r1, #80	; 0x50
   1482c:	mov	r0, r7
   14830:	ldr	r3, [r6, #12]
   14834:	ldr	r2, [r6, #20]
   14838:	blx	r3
   1483c:	cmp	r0, #79	; 0x4f
   14840:	ble	147f8 <readstat_parse_sav+0xd40>
   14844:	ldr	r3, [r4, #336]	; 0x150
   14848:	mov	r2, r7
   1484c:	movw	r1, #321	; 0x141
   14850:	mov	r0, r8
   14854:	str	r3, [sp]
   14858:	mov	r3, #80	; 0x50
   1485c:	bl	424c <readstat_convert@plt>
   14860:	subs	sl, r0, #0
   14864:	bne	1431c <readstat_parse_sav+0x864>
   14868:	mov	r1, r8
   1486c:	mov	r0, r5
   14870:	ldr	r3, [r4, #4]
   14874:	ldr	r2, [r4, #40]	; 0x28
   14878:	blx	r3
   1487c:	cmp	r0, #0
   14880:	bne	152fc <readstat_parse_sav+0x1844>
   14884:	add	r5, r5, #1
   14888:	ldr	r3, [sp, #88]	; 0x58
   1488c:	cmp	r3, r5
   14890:	bhi	14828 <readstat_parse_sav+0xd70>
   14894:	b	13cac <readstat_parse_sav+0x1f4>
   14898:	ldr	r3, [sp, #32]
   1489c:	add	r6, sp, #76	; 0x4c
   148a0:	mov	r1, #12
   148a4:	mov	r0, r6
   148a8:	ldr	r2, [sp, #32]
   148ac:	ldr	r3, [r3, #12]
   148b0:	ldr	r2, [r2, #20]
   148b4:	blx	r3
   148b8:	cmp	r0, #11
   148bc:	bls	147f8 <readstat_parse_sav+0xd40>
   148c0:	ldrb	r3, [r4, #436]	; 0x1b4
   148c4:	tst	r3, #1
   148c8:	bne	14984 <readstat_parse_sav+0xecc>
   148cc:	ldr	r3, [sp, #48]	; 0x30
   148d0:	ldr	r7, [sp, #80]	; 0x50
   148d4:	ldr	r6, [sp, #84]	; 0x54
   148d8:	ldr	r8, [sp, #76]	; 0x4c
   148dc:	mul	r5, r6, r7
   148e0:	cmp	r5, r3
   148e4:	bls	149b8 <readstat_parse_sav+0xf00>
   148e8:	mov	r1, r5
   148ec:	ldr	r0, [sp, #28]
   148f0:	bl	4300 <readstat_realloc@plt>
   148f4:	subs	r3, r0, #0
   148f8:	str	r3, [sp, #28]
   148fc:	beq	15304 <readstat_parse_sav+0x184c>
   14900:	str	r5, [sp, #48]	; 0x30
   14904:	mov	r1, r5
   14908:	ldr	r0, [sp, #28]
   1490c:	ldr	r3, [sp, #32]
   14910:	ldr	r2, [sp, #32]
   14914:	ldr	r3, [r3, #12]
   14918:	ldr	r2, [r2, #20]
   1491c:	blx	r3
   14920:	cmp	r5, r0
   14924:	bhi	13d08 <readstat_parse_sav+0x250>
   14928:	sub	r8, r8, #4
   1492c:	cmp	r8, #18
   14930:	addls	pc, pc, r8, lsl #2
   14934:	b	13cac <readstat_parse_sav+0x1f4>
   14938:	b	149c4 <readstat_parse_sav+0xf0c>
   1493c:	b	13cac <readstat_parse_sav+0x1f4>
   14940:	b	13cac <readstat_parse_sav+0x1f4>
   14944:	b	13cac <readstat_parse_sav+0x1f4>
   14948:	b	13cac <readstat_parse_sav+0x1f4>
   1494c:	b	13cac <readstat_parse_sav+0x1f4>
   14950:	b	13cac <readstat_parse_sav+0x1f4>
   14954:	b	14a74 <readstat_parse_sav+0xfbc>
   14958:	b	13cac <readstat_parse_sav+0x1f4>
   1495c:	b	14ae0 <readstat_parse_sav+0x1028>
   14960:	b	14af4 <readstat_parse_sav+0x103c>
   14964:	b	13cac <readstat_parse_sav+0x1f4>
   14968:	b	13cac <readstat_parse_sav+0x1f4>
   1496c:	b	13cac <readstat_parse_sav+0x1f4>
   14970:	b	13cac <readstat_parse_sav+0x1f4>
   14974:	b	13cac <readstat_parse_sav+0x1f4>
   14978:	b	13cac <readstat_parse_sav+0x1f4>
   1497c:	b	14b08 <readstat_parse_sav+0x1050>
   14980:	b	14dec <readstat_parse_sav+0x1334>
   14984:	mov	r5, #3
   14988:	ldr	r0, [r6]
   1498c:	bl	3da8 <byteswap4@plt>
   14990:	subs	r5, r5, #1
   14994:	str	r0, [r6], #4
   14998:	bne	14988 <readstat_parse_sav+0xed0>
   1499c:	b	148cc <readstat_parse_sav+0xe14>
	...
   149a8:	.word	0x0000cd23
   149ac:	.word	0x0000c7e7
   149b0:	.word	0x0000c387
   149b4:	.word	0xffffe3a8
   149b8:	cmp	r5, #0
   149bc:	bne	14904 <readstat_parse_sav+0xe4c>
   149c0:	b	13d08 <readstat_parse_sav+0x250>
   149c4:	cmp	r6, #3
   149c8:	cmpeq	r7, #8
   149cc:	bne	13d08 <readstat_parse_sav+0x250>
   149d0:	ldr	r2, [sp, #28]
   149d4:	add	ip, sp, #104	; 0x68
   149d8:	mov	r3, ip
   149dc:	add	r5, r2, #24
   149e0:	ldr	r0, [r2]
   149e4:	mov	lr, ip
   149e8:	add	r2, r2, #8
   149ec:	ldr	r1, [r2, #-4]
   149f0:	cmp	r2, r5
   149f4:	stmia	lr!, {r0, r1}
   149f8:	mov	ip, lr
   149fc:	bne	149e0 <readstat_parse_sav+0xf28>
   14a00:	ldrd	r0, [r3]
   14a04:	ldrd	r8, [r3, #8]
   14a08:	ldrd	r6, [r3, #16]
   14a0c:	ldrb	r3, [r4, #436]	; 0x1b4
   14a10:	tst	r3, #1
   14a14:	beq	14a1c <readstat_parse_sav+0xf64>
   14a18:	bl	3d90 <byteswap8@plt>
   14a1c:	ldrb	r3, [r4, #436]	; 0x1b4
   14a20:	add	r5, r4, #400	; 0x190
   14a24:	strd	r0, [r5, #-8]
   14a28:	tst	r3, #1
   14a2c:	beq	14a44 <readstat_parse_sav+0xf8c>
   14a30:	mov	r0, r8
   14a34:	mov	r1, r9
   14a38:	bl	3d90 <byteswap8@plt>
   14a3c:	mov	r8, r0
   14a40:	mov	r9, r1
   14a44:	add	r3, r4, #416	; 0x1a0
   14a48:	strd	r8, [r3, #-8]
   14a4c:	ldrb	r3, [r4, #436]	; 0x1b4
   14a50:	tst	r3, #1
   14a54:	beq	14a6c <readstat_parse_sav+0xfb4>
   14a58:	mov	r0, r6
   14a5c:	mov	r1, r7
   14a60:	bl	3d90 <byteswap8@plt>
   14a64:	mov	r6, r0
   14a68:	mov	r7, r1
   14a6c:	strd	r6, [r5]
   14a70:	b	13cac <readstat_parse_sav+0x1f4>
   14a74:	cmp	r7, #4
   14a78:	bne	13d08 <readstat_parse_sav+0x250>
   14a7c:	lsl	r1, r6, #2
   14a80:	ldr	r0, [r4, #328]	; 0x148
   14a84:	bl	4300 <readstat_realloc@plt>
   14a88:	str	r0, [r4, #328]	; 0x148
   14a8c:	clz	r0, r0
   14a90:	cmp	r6, #0
   14a94:	lsr	r0, r0, #5
   14a98:	moveq	r5, #0
   14a9c:	movne	r5, r0
   14aa0:	cmp	r5, #0
   14aa4:	bne	1531c <readstat_parse_sav+0x1864>
   14aa8:	str	r6, [r4, #332]	; 0x14c
   14aac:	cmp	r5, r6
   14ab0:	beq	13cac <readstat_parse_sav+0x1f4>
   14ab4:	ldr	r3, [sp, #28]
   14ab8:	lsl	r7, r5, #2
   14abc:	ldr	r0, [r3, r5, lsl #2]
   14ac0:	ldrb	r3, [r4, #436]	; 0x1b4
   14ac4:	tst	r3, #1
   14ac8:	beq	14ad0 <readstat_parse_sav+0x1018>
   14acc:	bl	3da8 <byteswap4@plt>
   14ad0:	ldr	r3, [r4, #328]	; 0x148
   14ad4:	add	r5, r5, #1
   14ad8:	str	r0, [r3, r7]
   14adc:	b	14aac <readstat_parse_sav+0xff4>
   14ae0:	mov	r2, r4
   14ae4:	mov	r1, r6
   14ae8:	ldr	r0, [sp, #28]
   14aec:	bl	4210 <sav_parse_long_variable_names_record@plt>
   14af0:	b	147cc <readstat_parse_sav+0xd14>
   14af4:	mov	r2, r4
   14af8:	mov	r1, r6
   14afc:	ldr	r0, [sp, #28]
   14b00:	bl	42f4 <sav_parse_very_long_string_record@plt>
   14b04:	b	147cc <readstat_parse_sav+0xd14>
   14b08:	ldr	r3, [r4, #20]
   14b0c:	cmp	r3, #0
   14b10:	beq	13cac <readstat_parse_sav+0x1f4>
   14b14:	cmp	r7, #1
   14b18:	bne	13d08 <readstat_parse_sav+0x250>
   14b1c:	ldr	r3, [sp, #28]
   14b20:	mov	r6, #0
   14b24:	mov	r8, r6
   14b28:	add	r5, r3, r5
   14b2c:	str	r3, [sp, #72]	; 0x48
   14b30:	ldr	r3, [pc, #-396]	; 149ac <readstat_parse_sav+0xef4>
   14b34:	add	r3, pc, r3
   14b38:	str	r3, [sp, #56]	; 0x38
   14b3c:	add	r3, sp, #96	; 0x60
   14b40:	str	r3, [sp, #60]	; 0x3c
   14b44:	ldr	r7, [sp, #72]	; 0x48
   14b48:	cmp	r5, r7
   14b4c:	bhi	14b60 <readstat_parse_sav+0x10a8>
   14b50:	moveq	sl, #0
   14b54:	beq	14dbc <readstat_parse_sav+0x1304>
   14b58:	mov	sl, #5
   14b5c:	b	14dbc <readstat_parse_sav+0x1304>
   14b60:	mov	r2, #256	; 0x100
   14b64:	mov	r1, #0
   14b68:	add	r0, sp, #304	; 0x130
   14b6c:	add	r9, sp, #560	; 0x230
   14b70:	bl	42b8 <memset@plt>
   14b74:	mov	r3, r4
   14b78:	sub	r2, r5, r7
   14b7c:	add	r1, sp, #72	; 0x48
   14b80:	mov	r0, r9
   14b84:	bl	13550 <sav_read_pascal_string.constprop.4>
   14b88:	subs	sl, r0, #0
   14b8c:	bne	14dbc <readstat_parse_sav+0x1304>
   14b90:	ldr	fp, [r4, #340]	; 0x154
   14b94:	mov	r7, sl
   14b98:	cmp	r7, fp
   14b9c:	bcs	14be4 <readstat_parse_sav+0x112c>
   14ba0:	ldr	r3, [r4, #44]	; 0x2c
   14ba4:	mov	r0, r9
   14ba8:	ldr	r2, [r3, r7, lsl #2]
   14bac:	add	r1, r2, #196	; 0xc4
   14bb0:	str	r2, [sp, #36]	; 0x24
   14bb4:	bl	3e14 <strcmp@plt>
   14bb8:	cmp	r0, #0
   14bbc:	ldr	r2, [sp, #36]	; 0x24
   14bc0:	bne	14da8 <readstat_parse_sav+0x12f0>
   14bc4:	ldr	r3, [r4, #368]	; 0x170
   14bc8:	add	r0, sp, #304	; 0x130
   14bcc:	add	r1, r3, #1
   14bd0:	str	r1, [r4, #368]	; 0x170
   14bd4:	mov	r1, #256	; 0x100
   14bd8:	str	r3, [r2, #4]
   14bdc:	ldr	r2, [sp, #56]	; 0x38
   14be0:	bl	4294 <snprintf@plt>
   14be4:	ldrb	r3, [sp, #304]	; 0x130
   14be8:	cmp	r3, #0
   14bec:	beq	14b58 <readstat_parse_sav+0x10a0>
   14bf0:	ldr	r3, [sp, #72]	; 0x48
   14bf4:	add	r2, r3, #4
   14bf8:	str	r2, [sp, #72]	; 0x48
   14bfc:	add	r2, r3, #8
   14c00:	cmp	r5, r2
   14c04:	bcc	14b58 <readstat_parse_sav+0x10a0>
   14c08:	ldr	r9, [r3, #4]
   14c0c:	ldrb	r3, [r4, #436]	; 0x1b4
   14c10:	tst	r3, #1
   14c14:	beq	14c24 <readstat_parse_sav+0x116c>
   14c18:	mov	r0, r9
   14c1c:	bl	3da8 <byteswap4@plt>
   14c20:	mov	r9, r0
   14c24:	ldr	r3, [sp, #72]	; 0x48
   14c28:	add	r3, r3, #4
   14c2c:	str	r3, [sp, #72]	; 0x48
   14c30:	add	r3, sp, #304	; 0x130
   14c34:	str	r3, [sp, #36]	; 0x24
   14c38:	add	r3, sp, #88	; 0x58
   14c3c:	str	r3, [sp, #40]	; 0x28
   14c40:	cmp	sl, r9
   14c44:	ldr	r3, [sp, #72]	; 0x48
   14c48:	beq	14b44 <readstat_parse_sav+0x108c>
   14c4c:	add	r2, r3, #4
   14c50:	cmp	r5, r2
   14c54:	bcc	14ddc <readstat_parse_sav+0x1324>
   14c58:	ldr	r7, [r3]
   14c5c:	ldrb	r3, [r4, #436]	; 0x1b4
   14c60:	tst	r3, #1
   14c64:	beq	14c74 <readstat_parse_sav+0x11bc>
   14c68:	mov	r0, r7
   14c6c:	bl	3da8 <byteswap4@plt>
   14c70:	mov	r7, r0
   14c74:	ldr	r3, [sp, #72]	; 0x48
   14c78:	lsl	fp, r7, #2
   14c7c:	mov	r0, r8
   14c80:	add	fp, fp, #1
   14c84:	mov	r1, fp
   14c88:	add	r3, r3, #4
   14c8c:	str	r3, [sp, #72]	; 0x48
   14c90:	bl	4300 <readstat_realloc@plt>
   14c94:	subs	r8, r0, #0
   14c98:	beq	14db4 <readstat_parse_sav+0x12fc>
   14c9c:	ldr	r2, [sp, #72]	; 0x48
   14ca0:	add	r3, r2, r7
   14ca4:	cmp	r5, r3
   14ca8:	bcc	14ddc <readstat_parse_sav+0x1324>
   14cac:	ldr	r3, [r4, #336]	; 0x150
   14cb0:	mov	r1, fp
   14cb4:	str	r3, [sp]
   14cb8:	mov	r3, r7
   14cbc:	bl	424c <readstat_convert@plt>
   14cc0:	cmp	r0, #0
   14cc4:	bne	14db8 <readstat_parse_sav+0x1300>
   14cc8:	ldr	r3, [sp, #72]	; 0x48
   14ccc:	add	r7, r3, r7
   14cd0:	add	r3, r7, #4
   14cd4:	cmp	r5, r3
   14cd8:	str	r7, [sp, #72]	; 0x48
   14cdc:	bcc	14ddc <readstat_parse_sav+0x1324>
   14ce0:	ldrb	r3, [r4, #436]	; 0x1b4
   14ce4:	ldr	r7, [r7]
   14ce8:	tst	r3, #1
   14cec:	beq	14cfc <readstat_parse_sav+0x1244>
   14cf0:	mov	r0, r7
   14cf4:	bl	3da8 <byteswap4@plt>
   14cf8:	mov	r7, r0
   14cfc:	ldr	r3, [sp, #72]	; 0x48
   14d00:	lsl	fp, r7, #2
   14d04:	mov	r0, r6
   14d08:	add	fp, fp, #1
   14d0c:	mov	r1, fp
   14d10:	add	r3, r3, #4
   14d14:	str	r3, [sp, #72]	; 0x48
   14d18:	bl	4300 <readstat_realloc@plt>
   14d1c:	subs	r6, r0, #0
   14d20:	beq	14db4 <readstat_parse_sav+0x12fc>
   14d24:	ldr	r2, [sp, #72]	; 0x48
   14d28:	add	r3, r2, r7
   14d2c:	cmp	r5, r3
   14d30:	bcc	14ddc <readstat_parse_sav+0x1324>
   14d34:	ldr	r3, [r4, #336]	; 0x150
   14d38:	mov	r1, fp
   14d3c:	str	r3, [sp]
   14d40:	mov	r3, r7
   14d44:	bl	424c <readstat_convert@plt>
   14d48:	cmp	r0, #0
   14d4c:	bne	14db8 <readstat_parse_sav+0x1300>
   14d50:	ldr	r3, [sp, #72]	; 0x48
   14d54:	str	r8, [sp, #88]	; 0x58
   14d58:	str	r0, [sp, #92]	; 0x5c
   14d5c:	str	r0, [sp, #96]	; 0x60
   14d60:	str	r0, [sp, #100]	; 0x64
   14d64:	add	r7, r3, r7
   14d68:	str	r7, [sp, #72]	; 0x48
   14d6c:	ldr	r3, [r4, #40]	; 0x28
   14d70:	str	r6, [sp, #8]
   14d74:	str	r3, [sp, #12]
   14d78:	ldr	r3, [sp, #60]	; 0x3c
   14d7c:	ldm	r3, {r0, r1}
   14d80:	ldr	r3, [sp, #40]	; 0x28
   14d84:	stm	sp, {r0, r1}
   14d88:	ldr	r1, [r4, #20]
   14d8c:	ldm	r3, {r2, r3}
   14d90:	ldr	r0, [sp, #36]	; 0x24
   14d94:	blx	r1
   14d98:	cmp	r0, #0
   14d9c:	bne	14de4 <readstat_parse_sav+0x132c>
   14da0:	add	sl, sl, #1
   14da4:	b	14c40 <readstat_parse_sav+0x1188>
   14da8:	ldr	r3, [r2, #48]	; 0x30
   14dac:	add	r7, r7, r3
   14db0:	b	14b98 <readstat_parse_sav+0x10e0>
   14db4:	mov	r0, #3
   14db8:	mov	sl, r0
   14dbc:	cmp	r8, #0
   14dc0:	beq	14dcc <readstat_parse_sav+0x1314>
   14dc4:	mov	r0, r8
   14dc8:	bl	3ed4 <free@plt>
   14dcc:	cmp	r6, #0
   14dd0:	beq	1464c <readstat_parse_sav+0xb94>
   14dd4:	mov	r0, r6
   14dd8:	b	14648 <readstat_parse_sav+0xb90>
   14ddc:	mov	r0, #5
   14de0:	b	14db8 <readstat_parse_sav+0x1300>
   14de4:	mov	r0, #4
   14de8:	b	14db8 <readstat_parse_sav+0x1300>
   14dec:	cmp	r7, #1
   14df0:	bne	13d08 <readstat_parse_sav+0x250>
   14df4:	ldr	r3, [sp, #28]
   14df8:	add	r5, r3, r5
   14dfc:	str	r3, [sp, #304]	; 0x130
   14e00:	add	r3, sp, #304	; 0x130
   14e04:	str	r3, [sp, #40]	; 0x28
   14e08:	add	r3, sp, #560	; 0x230
   14e0c:	str	r3, [sp, #36]	; 0x24
   14e10:	ldr	r2, [sp, #304]	; 0x130
   14e14:	cmp	r5, r2
   14e18:	bhi	14e24 <readstat_parse_sav+0x136c>
   14e1c:	bne	13d08 <readstat_parse_sav+0x250>
   14e20:	b	13cac <readstat_parse_sav+0x1f4>
   14e24:	mov	r3, r4
   14e28:	sub	r2, r5, r2
   14e2c:	ldrd	r0, [sp, #36]	; 0x24
   14e30:	bl	13550 <sav_read_pascal_string.constprop.4>
   14e34:	subs	sl, r0, #0
   14e38:	bne	1431c <readstat_parse_sav+0x864>
   14e3c:	ldr	r8, [sp, #304]	; 0x130
   14e40:	cmp	r5, r8
   14e44:	beq	13d08 <readstat_parse_sav+0x250>
   14e48:	add	r3, r8, #1
   14e4c:	str	r3, [sp, #304]	; 0x130
   14e50:	ldrb	r9, [r8]
   14e54:	sub	r3, r9, #1
   14e58:	cmp	r3, #2
   14e5c:	bhi	13d08 <readstat_parse_sav+0x250>
   14e60:	ldr	fp, [r4, #340]	; 0x154
   14e64:	mov	r7, sl
   14e68:	cmp	r7, fp
   14e6c:	bcs	14f18 <readstat_parse_sav+0x1460>
   14e70:	ldr	r3, [r4, #44]	; 0x2c
   14e74:	ldr	r0, [sp, #36]	; 0x24
   14e78:	ldr	r6, [r3, r7, lsl #2]
   14e7c:	add	r1, r6, #196	; 0xc4
   14e80:	bl	3e14 <strcmp@plt>
   14e84:	cmp	r0, #0
   14e88:	bne	14f28 <readstat_parse_sav+0x1470>
   14e8c:	add	r3, r8, #5
   14e90:	str	r9, [r6, #52]	; 0x34
   14e94:	cmp	r5, r3
   14e98:	bcc	13d08 <readstat_parse_sav+0x250>
   14e9c:	ldrb	r3, [r4, #436]	; 0x1b4
   14ea0:	ldr	r8, [r8, #1]
   14ea4:	tst	r3, #1
   14ea8:	beq	14eb8 <readstat_parse_sav+0x1400>
   14eac:	mov	r0, r8
   14eb0:	bl	3da8 <byteswap4@plt>
   14eb4:	mov	r8, r0
   14eb8:	ldr	r3, [sp, #304]	; 0x130
   14ebc:	add	r6, r6, #88	; 0x58
   14ec0:	mov	fp, #0
   14ec4:	add	r3, r3, #4
   14ec8:	str	r3, [sp, #304]	; 0x130
   14ecc:	ldr	r2, [sp, #304]	; 0x130
   14ed0:	add	r3, r2, r8
   14ed4:	cmp	r5, r3
   14ed8:	bcc	13d08 <readstat_parse_sav+0x250>
   14edc:	ldr	r3, [r4, #336]	; 0x150
   14ee0:	mov	r1, #33	; 0x21
   14ee4:	mov	r0, r6
   14ee8:	str	r3, [sp]
   14eec:	mov	r3, r8
   14ef0:	bl	424c <readstat_convert@plt>
   14ef4:	subs	sl, r0, #0
   14ef8:	bne	1431c <readstat_parse_sav+0x864>
   14efc:	ldr	r3, [sp, #304]	; 0x130
   14f00:	add	fp, fp, #1
   14f04:	add	r6, r6, #33	; 0x21
   14f08:	cmp	fp, r9
   14f0c:	add	r3, r3, r8
   14f10:	str	r3, [sp, #304]	; 0x130
   14f14:	bcc	14ecc <readstat_parse_sav+0x1414>
   14f18:	ldr	r3, [r4, #340]	; 0x154
   14f1c:	cmp	r7, r3
   14f20:	bne	14e10 <readstat_parse_sav+0x1358>
   14f24:	b	13d08 <readstat_parse_sav+0x250>
   14f28:	ldr	r3, [r6, #48]	; 0x30
   14f2c:	add	r7, r7, r3
   14f30:	b	14e68 <readstat_parse_sav+0x13b0>
   14f34:	ldr	r3, [r4, #44]	; 0x2c
   14f38:	ldr	r1, [r3, r2, lsl #2]
   14f3c:	ldr	r3, [r1, #20]
   14f40:	cmp	r3, #0
   14f44:	addne	r3, r3, #251	; 0xfb
   14f48:	udivne	r3, r3, ip
   14f4c:	strne	r3, [r1, #48]	; 0x30
   14f50:	ldr	r3, [r4, #348]	; 0x15c
   14f54:	add	lr, r3, #1
   14f58:	str	lr, [r4, #348]	; 0x15c
   14f5c:	str	r3, [r1, #8]
   14f60:	ldr	r3, [r1, #48]	; 0x30
   14f64:	add	r2, r2, r3
   14f68:	b	13d68 <readstat_parse_sav+0x2b0>
   14f6c:	ldr	r3, [r4, #328]	; 0x148
   14f70:	cmp	r3, #0
   14f74:	bne	1505c <readstat_parse_sav+0x15a4>
   14f78:	ldr	r3, [r4, #8]
   14f7c:	cmp	r3, #0
   14f80:	beq	14fa4 <readstat_parse_sav+0x14ec>
   14f84:	ldr	r9, [pc, #-1500]	; 149b0 <readstat_parse_sav+0xef8>
   14f88:	mov	r7, #0
   14f8c:	add	r8, sp, #560	; 0x230
   14f90:	mov	r6, r7
   14f94:	add	r9, pc, r9
   14f98:	ldr	r3, [r4, #340]	; 0x154
   14f9c:	cmp	r6, r3
   14fa0:	blt	150f4 <readstat_parse_sav+0x163c>
   14fa4:	ldr	r5, [r4, #12]
   14fa8:	cmp	r5, #0
   14fac:	bne	1518c <readstat_parse_sav+0x16d4>
   14fb0:	ldr	r3, [r4, #16]
   14fb4:	cmp	r3, #0
   14fb8:	movne	r3, #0
   14fbc:	movne	r5, #256	; 0x100
   14fc0:	ldrne	r0, [r4, #340]	; 0x154
   14fc4:	beq	13e50 <readstat_parse_sav+0x398>
   14fc8:	cmp	r3, r0
   14fcc:	blt	151ec <readstat_parse_sav+0x1734>
   14fd0:	add	r0, r5, #7
   14fd4:	str	r0, [r4, #380]	; 0x17c
   14fd8:	bl	4240 <readstat_malloc@plt>
   14fdc:	str	r0, [r4, #376]	; 0x178
   14fe0:	add	r0, r5, #2
   14fe4:	lsl	r0, r0, #2
   14fe8:	str	r0, [r4, #388]	; 0x184
   14fec:	bl	4240 <readstat_malloc@plt>
   14ff0:	ldr	r5, [r4, #376]	; 0x178
   14ff4:	str	r0, [r4, #384]	; 0x180
   14ff8:	clz	r0, r0
   14ffc:	lsr	r0, r0, #5
   15000:	cmp	r5, #0
   15004:	moveq	r5, #1
   15008:	movne	r5, r0
   1500c:	cmp	r5, #0
   15010:	bne	15304 <readstat_parse_sav+0x184c>
   15014:	ldr	r3, [r4, #428]	; 0x1ac
   15018:	cmp	r3, #1
   1501c:	bne	1520c <readstat_parse_sav+0x1754>
   15020:	mov	r0, r4
   15024:	bl	138a4 <sav_read_compressed_data.constprop.5>
   15028:	mov	r5, r0
   1502c:	cmp	r5, #0
   15030:	bne	15278 <readstat_parse_sav+0x17c0>
   15034:	ldr	r3, [r4, #352]	; 0x160
   15038:	cmn	r3, #1
   1503c:	beq	13e50 <readstat_parse_sav+0x398>
   15040:	ldr	r3, [r4, #356]	; 0x164
   15044:	ldr	r2, [r4, #364]	; 0x16c
   15048:	ldr	r1, [sp, #20]
   1504c:	cmp	r2, r3
   15050:	movne	r1, #9
   15054:	str	r1, [sp, #20]
   15058:	b	13e50 <readstat_parse_sav+0x398>
   1505c:	ldr	r3, [r4, #332]	; 0x14c
   15060:	ldr	r6, [r4, #340]	; 0x154
   15064:	lsl	r2, r6, #1
   15068:	cmp	r3, r2
   1506c:	beq	1507c <readstat_parse_sav+0x15c4>
   15070:	add	r2, r2, r6
   15074:	cmp	r3, r2
   15078:	bne	152f4 <readstat_parse_sav+0x183c>
   1507c:	cmp	r6, #0
   15080:	ble	14f78 <readstat_parse_sav+0x14c0>
   15084:	sdiv	r3, r3, r6
   15088:	mov	r5, #0
   1508c:	sub	r6, r3, #3
   15090:	clz	r6, r6
   15094:	lsr	r6, r6, #5
   15098:	add	r9, r6, #2
   1509c:	ldr	r3, [r4, #340]	; 0x154
   150a0:	cmp	r5, r3
   150a4:	bge	14f78 <readstat_parse_sav+0x14c0>
   150a8:	ldr	r3, [r4, #44]	; 0x2c
   150ac:	mul	sl, r5, r9
   150b0:	add	r8, sl, #1
   150b4:	ldr	r7, [r3, r5, lsl #2]
   150b8:	ldr	r3, [r4, #328]	; 0x148
   150bc:	ldr	r0, [r3, sl, lsl #2]
   150c0:	bl	43cc <spss_measure_to_readstat_measure@plt>
   150c4:	ldr	r3, [r4, #328]	; 0x148
   150c8:	cmp	r6, #0
   150cc:	str	r0, [r7, #268]	; 0x10c
   150d0:	ldrne	r2, [r3, r8, lsl #2]
   150d4:	addne	r8, sl, #2
   150d8:	strne	r2, [r7, #276]	; 0x114
   150dc:	ldr	r0, [r3, r8, lsl #2]
   150e0:	bl	43a8 <spss_alignment_to_readstat_alignment@plt>
   150e4:	ldr	r3, [r7, #48]	; 0x30
   150e8:	str	r0, [r7, #272]	; 0x110
   150ec:	add	r5, r5, r3
   150f0:	b	1509c <readstat_parse_sav+0x15e4>
   150f4:	ldr	r3, [r4, #44]	; 0x2c
   150f8:	mov	r1, r7
   150fc:	ldr	sl, [r4, #52]	; 0x34
   15100:	ldr	r2, [r4, #336]	; 0x150
   15104:	ldr	r5, [r3, r6, lsl #2]
   15108:	ldr	fp, [r5, #8]
   1510c:	mov	r0, r5
   15110:	bl	4288 <spss_init_variable_for_info@plt>
   15114:	mov	r2, r9
   15118:	mov	r1, #256	; 0x100
   1511c:	ldr	r3, [r5, #4]
   15120:	str	r0, [sl, fp, lsl #2]
   15124:	mov	r0, r8
   15128:	bl	4294 <snprintf@plt>
   1512c:	ldr	r3, [r5, #4]
   15130:	ldr	r0, [r5, #8]
   15134:	ldr	sl, [r4, #8]
   15138:	cmn	r3, #1
   1513c:	ldr	r1, [r4, #52]	; 0x34
   15140:	movne	r2, r8
   15144:	moveq	r2, #0
   15148:	ldr	r3, [r4, #40]	; 0x28
   1514c:	ldr	r1, [r1, r0, lsl #2]
   15150:	blx	sl
   15154:	cmp	r0, #1
   15158:	bne	15164 <readstat_parse_sav+0x16ac>
   1515c:	mov	r3, #4
   15160:	b	13b34 <readstat_parse_sav+0x7c>
   15164:	cmp	r0, #2
   15168:	ldreq	r3, [r4, #52]	; 0x34
   1516c:	addne	r7, r7, #1
   15170:	ldreq	r2, [r5, #8]
   15174:	ldreq	r3, [r3, r2, lsl #2]
   15178:	moveq	r2, #1
   1517c:	streq	r2, [r3, #2144]	; 0x860
   15180:	ldr	r3, [r5, #48]	; 0x30
   15184:	add	r6, r6, r3
   15188:	b	14f98 <readstat_parse_sav+0x14e0>
   1518c:	ldr	r2, [r4, #372]	; 0x174
   15190:	cmp	r2, #0
   15194:	movge	r3, #0
   15198:	subge	r2, r2, #1
   1519c:	ldrge	r0, [r4, #340]	; 0x154
   151a0:	blt	14fb0 <readstat_parse_sav+0x14f8>
   151a4:	cmp	r3, r0
   151a8:	bge	14fb0 <readstat_parse_sav+0x14f8>
   151ac:	ldr	r1, [r4, #44]	; 0x2c
   151b0:	ldr	r1, [r1, r3, lsl #2]
   151b4:	ldr	ip, [r1, #12]
   151b8:	cmp	ip, r2
   151bc:	bne	151e0 <readstat_parse_sav+0x1728>
   151c0:	ldr	r2, [r1, #8]
   151c4:	ldr	r1, [r4, #40]	; 0x28
   151c8:	ldr	r3, [r4, #52]	; 0x34
   151cc:	ldr	r0, [r3, r2, lsl #2]
   151d0:	blx	r5
   151d4:	cmp	r0, #0
   151d8:	beq	14fb0 <readstat_parse_sav+0x14f8>
   151dc:	b	1515c <readstat_parse_sav+0x16a4>
   151e0:	ldr	r1, [r1, #48]	; 0x30
   151e4:	add	r3, r3, r1
   151e8:	b	151a4 <readstat_parse_sav+0x16ec>
   151ec:	ldr	r2, [r4, #44]	; 0x2c
   151f0:	ldr	r2, [r2, r3, lsl #2]
   151f4:	ldr	r1, [r2, #20]
   151f8:	ldr	r2, [r2, #48]	; 0x30
   151fc:	cmp	r5, r1
   15200:	movcc	r5, r1
   15204:	add	r3, r3, r2
   15208:	b	14fc8 <readstat_parse_sav+0x1510>
   1520c:	cmp	r3, #2
   15210:	bne	15228 <readstat_parse_sav+0x1770>
   15214:	ldr	r1, [pc, #-2152]	; 149b4 <readstat_parse_sav+0xefc>
   15218:	mov	r0, r4
   1521c:	add	r1, pc, r1
   15220:	bl	44e0 <zsav_read_compressed_data@plt>
   15224:	b	15028 <readstat_parse_sav+0x1570>
   15228:	ldr	r8, [r4, #36]	; 0x24
   1522c:	ldr	r6, [r4, #344]	; 0x158
   15230:	lsl	r6, r6, #3
   15234:	mov	r0, r6
   15238:	bl	4240 <readstat_malloc@plt>
   1523c:	mov	r7, r0
   15240:	ldr	r0, [r4, #360]	; 0x168
   15244:	cmp	r0, #0
   15248:	beq	152c4 <readstat_parse_sav+0x180c>
   1524c:	mov	r1, #1
   15250:	mul	r0, r6, r0
   15254:	ldr	r3, [r8, #8]
   15258:	ldr	r2, [r8, #20]
   1525c:	blx	r3
   15260:	cmn	r0, #1
   15264:	strne	r5, [r4, #360]	; 0x168
   15268:	bne	152c4 <readstat_parse_sav+0x180c>
   1526c:	mov	r5, #15
   15270:	cmp	r7, #0
   15274:	bne	152e8 <readstat_parse_sav+0x1830>
   15278:	str	r5, [sp, #20]
   1527c:	b	13e50 <readstat_parse_sav+0x398>
   15280:	mov	r0, r4
   15284:	bl	13068 <sav_update_progress>
   15288:	subs	r5, r0, #0
   1528c:	bne	15270 <readstat_parse_sav+0x17b8>
   15290:	mov	r1, r6
   15294:	mov	r0, r7
   15298:	ldr	r3, [r8, #12]
   1529c:	ldr	r2, [r8, #20]
   152a0:	blx	r3
   152a4:	cmp	r6, r0
   152a8:	bne	152dc <readstat_parse_sav+0x1824>
   152ac:	mov	r2, r4
   152b0:	mov	r1, r6
   152b4:	mov	r0, r7
   152b8:	bl	135cc <sav_process_row>
   152bc:	subs	r5, r0, #0
   152c0:	bne	15270 <readstat_parse_sav+0x17b8>
   152c4:	ldr	r3, [r4, #356]	; 0x164
   152c8:	cmn	r3, #1
   152cc:	beq	15280 <readstat_parse_sav+0x17c8>
   152d0:	ldr	r2, [r4, #364]	; 0x16c
   152d4:	cmp	r3, r2
   152d8:	bgt	15280 <readstat_parse_sav+0x17c8>
   152dc:	cmp	r7, #0
   152e0:	movne	r5, #0
   152e4:	beq	15034 <readstat_parse_sav+0x157c>
   152e8:	mov	r0, r7
   152ec:	bl	3ed4 <free@plt>
   152f0:	b	1502c <readstat_parse_sav+0x1574>
   152f4:	mov	r3, #5
   152f8:	b	13b34 <readstat_parse_sav+0x7c>
   152fc:	mov	sl, #4
   15300:	b	1431c <readstat_parse_sav+0x864>
   15304:	mov	r3, #3
   15308:	b	13b34 <readstat_parse_sav+0x7c>
   1530c:	mov	sl, #2
   15310:	b	1452c <readstat_parse_sav+0xa74>
   15314:	mov	sl, #5
   15318:	b	1452c <readstat_parse_sav+0xa74>
   1531c:	mov	sl, #3
   15320:	b	1431c <readstat_parse_sav+0x864>

00015324 <sav_variable_segments>:
   15324:	cmp	r1, #255	; 0xff
   15328:	movls	r3, #0
   1532c:	movhi	r3, #1
   15330:	cmp	r0, #0
   15334:	movne	r0, #0
   15338:	moveq	r0, r3
   1533c:	cmp	r0, #0
   15340:	movne	r0, #252	; 0xfc
   15344:	addne	r1, r1, #251	; 0xfb
   15348:	udivne	r0, r1, r0
   1534c:	moveq	r0, #1
   15350:	bx	lr

00015354 <sav_metadata_ok>:
   15354:	ldr	r3, [r0, #8]
   15358:	cmp	r3, #2
   1535c:	bne	15374 <sav_metadata_ok+0x20>
   15360:	ldr	r3, [r0, #16]
   15364:	cmp	r3, #2
   15368:	movne	r0, #0
   1536c:	moveq	r0, #6
   15370:	bx	lr
   15374:	cmp	r3, #3
   15378:	moveq	r0, #0
   1537c:	movne	r0, #24
   15380:	bx	lr

00015384 <sav_write_compressed_row>:
   15384:	push	{r4, r5, r6, lr}
   15388:	mov	r3, r0
   1538c:	mov	r4, r0
   15390:	ldr	r5, [r0, #300]	; 0x12c
   15394:	mov	r0, r5
   15398:	bl	4480 <sav_compress_row@plt>
   1539c:	mov	r2, r0
   153a0:	mov	r1, r5
   153a4:	mov	r0, r4
   153a8:	pop	{r4, r5, r6, lr}
   153ac:	b	4474 <readstat_write_bytes@plt>

000153b0 <sav_emit_blank_variable_records>:
   153b0:	push	{r4, r5, r6, r7, r8, r9, lr}
   153b4:	mov	r3, #2
   153b8:	sub	sp, sp, #36	; 0x24
   153bc:	mov	r5, r0
   153c0:	mov	r4, r1
   153c4:	mov	r6, #0
   153c8:	mov	r7, #0
   153cc:	ldr	r8, [pc, #104]	; 1543c <sav_emit_blank_variable_records+0x8c>
   153d0:	str	r3, [sp]
   153d4:	ldr	r9, [pc, #100]	; 15440 <sav_emit_blank_variable_records+0x90>
   153d8:	cmp	r4, #0
   153dc:	moveq	r0, r4
   153e0:	beq	15434 <sav_emit_blank_variable_records+0x84>
   153e4:	mov	r2, #4
   153e8:	mov	r1, sp
   153ec:	mov	r0, r5
   153f0:	bl	4474 <readstat_write_bytes@plt>
   153f4:	cmp	r0, #0
   153f8:	bne	15434 <sav_emit_blank_variable_records+0x84>
   153fc:	mvn	r3, #0
   15400:	mov	r2, #28
   15404:	add	r1, sp, #4
   15408:	mov	r0, r5
   1540c:	str	r3, [sp, #4]
   15410:	sub	r4, r4, #1
   15414:	strd	r6, [sp, #8]
   15418:	str	r9, [sp, #16]
   1541c:	str	r9, [sp, #20]
   15420:	str	r8, [sp, #24]
   15424:	str	r8, [sp, #28]
   15428:	bl	4474 <readstat_write_bytes@plt>
   1542c:	cmp	r0, #0
   15430:	beq	153d8 <sav_emit_blank_variable_records+0x28>
   15434:	add	sp, sp, #36	; 0x24
   15438:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1543c:	.word	0x20202020
   15440:	.word	0x00011d01

00015444 <sav_write_missing_string>:
   15444:	push	{r4, lr}
   15448:	ldr	r2, [r1, #1596]	; 0x63c
   1544c:	mov	r1, #32
   15450:	bl	42b8 <memset@plt>
   15454:	mov	r0, #0
   15458:	pop	{r4, pc}

0001545c <sav_write_missing_number>:
   1545c:	sub	sp, sp, #8
   15460:	mov	r2, r0
   15464:	mvn	r1, #1048576	; 0x100000
   15468:	mvn	r0, #0
   1546c:	mov	r3, sp
   15470:	strd	r0, [sp]
   15474:	ldm	r3!, {r0, r1}
   15478:	str	r0, [r2]
   1547c:	mov	r0, #0
   15480:	str	r1, [r2, #4]
   15484:	add	sp, sp, #8
   15488:	bx	lr

0001548c <sav_write_double>:
   1548c:	sub	sp, sp, #8
   15490:	mov	r2, r0
   15494:	mov	r3, sp
   15498:	vstr	d0, [sp]
   1549c:	ldm	r3!, {r0, r1}
   154a0:	str	r0, [r2]
   154a4:	mov	r0, #0
   154a8:	str	r1, [r2, #4]
   154ac:	add	sp, sp, #8
   154b0:	bx	lr

000154b4 <sav_write_float>:
   154b4:	vcvt.f64.f32	d0, s0
   154b8:	sub	sp, sp, #8
   154bc:	mov	r2, r0
   154c0:	mov	r3, sp
   154c4:	vstr	d0, [sp]
   154c8:	ldm	r3!, {r0, r1}
   154cc:	str	r0, [r2]
   154d0:	mov	r0, #0
   154d4:	str	r1, [r2, #4]
   154d8:	add	sp, sp, #8
   154dc:	bx	lr

000154e0 <sav_write_int32>:
   154e0:	vmov	s15, r2
   154e4:	sub	sp, sp, #8
   154e8:	mov	ip, r0
   154ec:	mov	r3, sp
   154f0:	vcvt.f64.s32	d7, s15
   154f4:	vstr	d7, [sp]
   154f8:	ldm	r3!, {r0, r1}
   154fc:	str	r0, [ip]
   15500:	mov	r0, #0
   15504:	str	r1, [ip, #4]
   15508:	add	sp, sp, #8
   1550c:	bx	lr

00015510 <sav_write_int16>:
   15510:	vmov	s15, r2
   15514:	sub	sp, sp, #8
   15518:	mov	ip, r0
   1551c:	mov	r3, sp
   15520:	vcvt.f64.s32	d7, s15
   15524:	vstr	d7, [sp]
   15528:	ldm	r3!, {r0, r1}
   1552c:	str	r0, [ip]
   15530:	mov	r0, #0
   15534:	str	r1, [ip, #4]
   15538:	add	sp, sp, #8
   1553c:	bx	lr

00015540 <sav_write_int8>:
   15540:	vmov	s15, r2
   15544:	sub	sp, sp, #8
   15548:	mov	ip, r0
   1554c:	mov	r3, sp
   15550:	vcvt.f64.s32	d7, s15
   15554:	vstr	d7, [sp]
   15558:	ldm	r3!, {r0, r1}
   1555c:	str	r0, [ip]
   15560:	mov	r0, #0
   15564:	str	r1, [ip, #4]
   15568:	add	sp, sp, #8
   1556c:	bx	lr

00015570 <readstat_label_set_number_short_variables>:
   15570:	push	{r4, r5, r6, lr}
   15574:	mov	r4, #0
   15578:	mov	r6, r0
   1557c:	mov	r5, r4
   15580:	ldr	r3, [r6, #276]	; 0x114
   15584:	cmp	r3, r4
   15588:	bgt	15594 <readstat_label_set_number_short_variables+0x24>
   1558c:	mov	r0, r5
   15590:	pop	{r4, r5, r6, pc}
   15594:	mov	r1, r4
   15598:	mov	r0, r6
   1559c:	bl	4468 <readstat_get_label_set_variable@plt>
   155a0:	ldr	r3, [r0, #1596]	; 0x63c
   155a4:	add	r4, r4, #1
   155a8:	cmp	r3, #8
   155ac:	addls	r5, r5, #1
   155b0:	b	15580 <readstat_label_set_number_short_variables+0x10>

000155b4 <sav_variable_width>:
   155b4:	cmp	r0, #0
   155b8:	bne	15608 <sav_variable_width+0x54>
   155bc:	cmp	r1, #255	; 0xff
   155c0:	mov	r2, r1
   155c4:	bls	155f4 <sav_variable_width+0x40>
   155c8:	push	{r4, lr}
   155cc:	bl	15324 <sav_variable_segments>
   155d0:	add	r3, r2, #256	; 0x100
   155d4:	mvn	r2, #251	; 0xfb
   155d8:	add	r3, r3, #3
   155dc:	mla	r3, r2, r0, r3
   155e0:	add	r0, r0, #16777216	; 0x1000000
   155e4:	sub	r0, r0, #1
   155e8:	bic	r3, r3, #7
   155ec:	add	r0, r3, r0, lsl #8
   155f0:	pop	{r4, pc}
   155f4:	cmp	r1, #0
   155f8:	beq	15608 <sav_variable_width+0x54>
   155fc:	add	r0, r1, #7
   15600:	bic	r0, r0, #7
   15604:	bx	lr
   15608:	mov	r0, #8
   1560c:	bx	lr

00015610 <sav_write_string>:
   15610:	push	{r4, r5, r6, lr}
   15614:	mov	r5, r2
   15618:	mov	r4, r1
   1561c:	mov	r6, r0
   15620:	ldr	r2, [r1, #1596]	; 0x63c
   15624:	mov	r1, #32
   15628:	bl	42b8 <memset@plt>
   1562c:	cmp	r5, #0
   15630:	beq	1568c <sav_write_string+0x7c>
   15634:	ldrb	r0, [r5]
   15638:	cmp	r0, #0
   1563c:	popeq	{r4, r5, r6, pc}
   15640:	mov	r0, r5
   15644:	bl	421c <strlen@plt>
   15648:	ldr	r3, [r4, #1596]	; 0x63c
   1564c:	cmp	r0, r3
   15650:	movls	r4, r0
   15654:	addls	r5, r5, r4
   15658:	bls	15670 <sav_write_string+0x60>
   1565c:	mov	r0, #22
   15660:	pop	{r4, r5, r6, pc}
   15664:	mov	r2, #255	; 0xff
   15668:	sub	r4, r4, #255	; 0xff
   1566c:	bl	3f34 <memcpy@plt>
   15670:	cmp	r4, #255	; 0xff
   15674:	mov	r0, r6
   15678:	sub	r1, r5, r4
   1567c:	add	r6, r6, #256	; 0x100
   15680:	bhi	15664 <sav_write_string+0x54>
   15684:	mov	r2, r4
   15688:	bl	3f34 <memcpy@plt>
   1568c:	mov	r0, #0
   15690:	pop	{r4, r5, r6, pc}

00015694 <sav_variable_ok>:
   15694:	push	{r4, r5, r6, lr}
   15698:	add	r4, r0, #8
   1569c:	mov	r5, r0
   156a0:	mov	r0, r4
   156a4:	bl	421c <strlen@plt>
   156a8:	cmp	r0, #64	; 0x40
   156ac:	bhi	15884 <sav_variable_ok+0x1f0>
   156b0:	cmp	r0, #0
   156b4:	beq	1588c <sav_variable_ok+0x1f8>
   156b8:	ldr	r1, [pc, #476]	; 1589c <sav_variable_ok+0x208>
   156bc:	mov	r0, r4
   156c0:	add	r1, pc, r1
   156c4:	bl	3e14 <strcmp@plt>
   156c8:	cmp	r0, #0
   156cc:	beq	15894 <sav_variable_ok+0x200>
   156d0:	ldr	r1, [pc, #456]	; 158a0 <sav_variable_ok+0x20c>
   156d4:	mov	r0, r4
   156d8:	add	r1, pc, r1
   156dc:	bl	3e14 <strcmp@plt>
   156e0:	cmp	r0, #0
   156e4:	beq	15894 <sav_variable_ok+0x200>
   156e8:	ldr	r1, [pc, #436]	; 158a4 <sav_variable_ok+0x210>
   156ec:	mov	r0, r4
   156f0:	add	r1, pc, r1
   156f4:	bl	3e14 <strcmp@plt>
   156f8:	cmp	r0, #0
   156fc:	beq	15894 <sav_variable_ok+0x200>
   15700:	ldr	r1, [pc, #416]	; 158a8 <sav_variable_ok+0x214>
   15704:	mov	r0, r4
   15708:	add	r1, pc, r1
   1570c:	bl	3e14 <strcmp@plt>
   15710:	cmp	r0, #0
   15714:	beq	15894 <sav_variable_ok+0x200>
   15718:	ldr	r1, [pc, #396]	; 158ac <sav_variable_ok+0x218>
   1571c:	mov	r0, r4
   15720:	add	r1, pc, r1
   15724:	bl	3e14 <strcmp@plt>
   15728:	cmp	r0, #0
   1572c:	beq	15894 <sav_variable_ok+0x200>
   15730:	ldr	r1, [pc, #376]	; 158b0 <sav_variable_ok+0x21c>
   15734:	mov	r0, r4
   15738:	add	r1, pc, r1
   1573c:	bl	3e14 <strcmp@plt>
   15740:	cmp	r0, #0
   15744:	beq	15894 <sav_variable_ok+0x200>
   15748:	ldr	r1, [pc, #356]	; 158b4 <sav_variable_ok+0x220>
   1574c:	mov	r0, r4
   15750:	add	r1, pc, r1
   15754:	bl	3e14 <strcmp@plt>
   15758:	cmp	r0, #0
   1575c:	beq	15894 <sav_variable_ok+0x200>
   15760:	ldr	r1, [pc, #336]	; 158b8 <sav_variable_ok+0x224>
   15764:	mov	r0, r4
   15768:	add	r1, pc, r1
   1576c:	bl	3e14 <strcmp@plt>
   15770:	cmp	r0, #0
   15774:	beq	15894 <sav_variable_ok+0x200>
   15778:	ldr	r1, [pc, #316]	; 158bc <sav_variable_ok+0x228>
   1577c:	mov	r0, r4
   15780:	add	r1, pc, r1
   15784:	bl	3e14 <strcmp@plt>
   15788:	cmp	r0, #0
   1578c:	beq	15894 <sav_variable_ok+0x200>
   15790:	ldr	r1, [pc, #296]	; 158c0 <sav_variable_ok+0x22c>
   15794:	mov	r0, r4
   15798:	add	r1, pc, r1
   1579c:	bl	3e14 <strcmp@plt>
   157a0:	cmp	r0, #0
   157a4:	beq	15894 <sav_variable_ok+0x200>
   157a8:	ldr	r1, [pc, #276]	; 158c4 <sav_variable_ok+0x230>
   157ac:	mov	r0, r4
   157b0:	add	r1, pc, r1
   157b4:	bl	3e14 <strcmp@plt>
   157b8:	cmp	r0, #0
   157bc:	beq	15894 <sav_variable_ok+0x200>
   157c0:	ldr	r1, [pc, #256]	; 158c8 <sav_variable_ok+0x234>
   157c4:	mov	r0, r4
   157c8:	add	r1, pc, r1
   157cc:	bl	3e14 <strcmp@plt>
   157d0:	cmp	r0, #0
   157d4:	beq	15894 <sav_variable_ok+0x200>
   157d8:	ldr	r1, [pc, #236]	; 158cc <sav_variable_ok+0x238>
   157dc:	mov	r0, r4
   157e0:	add	r1, pc, r1
   157e4:	bl	3e14 <strcmp@plt>
   157e8:	cmp	r0, #0
   157ec:	beq	15894 <sav_variable_ok+0x200>
   157f0:	ldr	ip, [pc, #216]	; 158d0 <sav_variable_ok+0x23c>
   157f4:	add	r0, r5, #7
   157f8:	ldrb	r2, [r0, #1]!
   157fc:	cmp	r2, #0
   15800:	bne	15834 <sav_variable_ok+0x1a0>
   15804:	ldrb	r3, [r5, #8]
   15808:	sub	r0, r3, #64	; 0x40
   1580c:	cmp	r3, #0
   15810:	cmpne	r0, #26
   15814:	movhi	r0, #1
   15818:	movls	r0, #0
   1581c:	popls	{r4, r5, r6, pc}
   15820:	sub	r3, r3, #97	; 0x61
   15824:	cmp	r3, #25
   15828:	movls	r0, #0
   1582c:	movhi	r0, #25
   15830:	pop	{r4, r5, r6, pc}
   15834:	cmp	r2, #32
   15838:	beq	1587c <sav_variable_ok+0x1e8>
   1583c:	sub	r1, r2, #64	; 0x40
   15840:	sub	r3, r2, #35	; 0x23
   15844:	uxtb	r3, r3
   15848:	cmp	r2, #95	; 0x5f
   1584c:	cmpne	r1, #26
   15850:	movhi	r1, #1
   15854:	movls	r1, #0
   15858:	cmp	r3, #22
   1585c:	mvnls	r3, ip, lsr r3
   15860:	movhi	r3, #1
   15864:	andls	r3, r3, #1
   15868:	tst	r3, r1
   1586c:	beq	157f8 <sav_variable_ok+0x164>
   15870:	sub	r2, r2, #97	; 0x61
   15874:	cmp	r2, #25
   15878:	bls	157f8 <sav_variable_ok+0x164>
   1587c:	mov	r0, #26
   15880:	pop	{r4, r5, r6, pc}
   15884:	mov	r0, #28
   15888:	pop	{r4, r5, r6, pc}
   1588c:	mov	r0, #38	; 0x26
   15890:	pop	{r4, r5, r6, pc}
   15894:	mov	r0, #27
   15898:	pop	{r4, r5, r6, pc}
   1589c:	.word	0x0000c905
   158a0:	.word	0x0000c8f1
   158a4:	.word	0x0000c8dd
   158a8:	.word	0x0000c8c8
   158ac:	.word	0x0000c8b3
   158b0:	.word	0x0000c89e
   158b4:	.word	0x0000bc57
   158b8:	.word	0x0000c871
   158bc:	.word	0x0000c85c
   158c0:	.word	0x0000c847
   158c4:	.word	0x0000c833
   158c8:	.word	0x0000c81e
   158cc:	.word	0x0000c809
   158d0:	.word	0x007fe803

000158d4 <sav_format_variable_name.constprop.5>:
   158d4:	ldr	r2, [pc, #32]	; 158fc <sav_format_variable_name.constprop.5+0x28>
   158d8:	mov	r3, r1
   158dc:	mov	r1, #9
   158e0:	push	{r4, lr}
   158e4:	mov	r4, r0
   158e8:	add	r2, pc, r2
   158ec:	bl	4294 <snprintf@plt>
   158f0:	mov	r0, r4
   158f4:	pop	{r4, lr}
   158f8:	b	421c <strlen@plt>
   158fc:	.word	0x0000c25e

00015900 <sav_emit_variable_records>:
   15900:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15904:	add	r3, r1, #9
   15908:	sub	sp, sp, #372	; 0x174
   1590c:	mov	fp, r0
   15910:	str	r3, [sp, #4]
   15914:	mov	r3, #0
   15918:	str	r3, [sp]
   1591c:	ldr	r3, [pc, #1868]	; 16070 <sav_emit_variable_records+0x770>
   15920:	add	r3, pc, r3
   15924:	str	r3, [sp, #20]
   15928:	ldr	r2, [sp]
   1592c:	ldr	r3, [fp, #28]
   15930:	cmp	r3, r2
   15934:	bgt	15944 <sav_emit_variable_records+0x44>
   15938:	mov	r0, #0
   1593c:	add	sp, sp, #372	; 0x174
   15940:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15944:	mov	r0, fp
   15948:	ldr	r1, [sp]
   1594c:	bl	439c <readstat_get_variable@plt>
   15950:	mov	r3, #2
   15954:	mov	r9, r0
   15958:	add	r0, sp, #52	; 0x34
   1595c:	str	r3, [sp, #28]
   15960:	ldr	r3, [sp, #4]
   15964:	sub	r1, r3, #9
   15968:	bl	158d4 <sav_format_variable_name.constprop.5>
   1596c:	mov	r2, #4
   15970:	add	r1, sp, #28
   15974:	str	r0, [sp, #16]
   15978:	mov	r0, fp
   1597c:	bl	4474 <readstat_write_bytes@plt>
   15980:	cmp	r0, #0
   15984:	bne	1593c <sav_emit_variable_records+0x3c>
   15988:	mov	r2, #28
   1598c:	mov	r1, r0
   15990:	add	r0, sp, #84	; 0x54
   15994:	bl	42b8 <memset@plt>
   15998:	ldr	r2, [r9]
   1599c:	cmp	r2, #0
   159a0:	bne	159b4 <sav_emit_variable_records+0xb4>
   159a4:	ldr	r3, [r9, #1600]	; 0x640
   159a8:	cmp	r3, #255	; 0xff
   159ac:	movcs	r3, #255	; 0xff
   159b0:	str	r3, [sp, #84]	; 0x54
   159b4:	ldrb	r3, [r9, #564]	; 0x234
   159b8:	mov	r0, r9
   159bc:	adds	r3, r3, #0
   159c0:	movne	r3, #1
   159c4:	cmp	r2, #5
   159c8:	str	r3, [sp, #88]	; 0x58
   159cc:	bne	15b90 <sav_emit_variable_records+0x290>
   159d0:	bl	4324 <readstat_variable_get_missing_ranges_count@plt>
   159d4:	mov	r5, #0
   159d8:	mov	r8, r0
   159dc:	mov	r4, r0
   159e0:	mov	sl, r5
   159e4:	add	r6, sp, #64	; 0x40
   159e8:	add	r7, sp, #112	; 0x70
   159ec:	cmp	r8, r5
   159f0:	bgt	15b40 <sav_emit_variable_records+0x240>
   159f4:	cmp	sl, #0
   159f8:	rsbne	r4, r4, #0
   159fc:	eor	r3, r4, r4, asr #31
   15a00:	sub	r3, r3, r4, asr #31
   15a04:	cmp	r3, #3
   15a08:	bgt	16068 <sav_emit_variable_records+0x768>
   15a0c:	add	sl, sp, #112	; 0x70
   15a10:	mov	r0, r9
   15a14:	str	r4, [sp, #92]	; 0x5c
   15a18:	mov	r1, sl
   15a1c:	bl	4114 <spss_format_for_variable@plt>
   15a20:	cmp	r0, #0
   15a24:	bne	1593c <sav_emit_variable_records+0x3c>
   15a28:	ldr	r1, [sp, #112]	; 0x70
   15a2c:	add	r0, sp, #104	; 0x68
   15a30:	ldr	r3, [sp, #116]	; 0x74
   15a34:	ldr	r2, [sp, #120]	; 0x78
   15a38:	cmp	r3, #255	; 0xff
   15a3c:	movge	r3, #255	; 0xff
   15a40:	lsl	r3, r3, #8
   15a44:	orr	r2, r2, r1, lsl #16
   15a48:	uxth	r3, r3
   15a4c:	orr	r3, r3, r2
   15a50:	str	r3, [sp, #96]	; 0x60
   15a54:	str	r3, [sp, #100]	; 0x64
   15a58:	ldr	r3, [pc, #1556]	; 16074 <sav_emit_variable_records+0x774>
   15a5c:	str	r3, [sp, #104]	; 0x68
   15a60:	str	r3, [r0, #4]
   15a64:	ldr	r3, [sp, #16]
   15a68:	sub	r3, r3, #1
   15a6c:	cmp	r3, #7
   15a70:	bhi	15a80 <sav_emit_variable_records+0x180>
   15a74:	add	r1, sp, #52	; 0x34
   15a78:	ldr	r2, [sp, #16]
   15a7c:	bl	3f34 <memcpy@plt>
   15a80:	mov	r2, #28
   15a84:	add	r1, sp, #84	; 0x54
   15a88:	mov	r0, fp
   15a8c:	bl	4474 <readstat_write_bytes@plt>
   15a90:	cmp	r0, #0
   15a94:	bne	1593c <sav_emit_variable_records+0x3c>
   15a98:	add	r4, r9, #564	; 0x234
   15a9c:	mov	r0, r4
   15aa0:	bl	421c <strlen@plt>
   15aa4:	cmp	r0, #0
   15aa8:	beq	15b08 <sav_emit_variable_records+0x208>
   15aac:	cmp	r0, #256	; 0x100
   15ab0:	mov	r2, #4
   15ab4:	movhi	r3, #256	; 0x100
   15ab8:	add	r1, sp, #64	; 0x40
   15abc:	strls	r0, [sp, #64]	; 0x40
   15ac0:	mov	r0, fp
   15ac4:	strhi	r3, [sp, #64]	; 0x40
   15ac8:	bl	4474 <readstat_write_bytes@plt>
   15acc:	cmp	r0, #0
   15ad0:	bne	1593c <sav_emit_variable_records+0x3c>
   15ad4:	ldr	r5, [sp, #64]	; 0x40
   15ad8:	mov	r1, r4
   15adc:	mov	r0, sl
   15ae0:	add	r5, r5, #3
   15ae4:	bic	r5, r5, #3
   15ae8:	mov	r2, r5
   15aec:	bl	42dc <strncpy@plt>
   15af0:	mov	r2, r5
   15af4:	mov	r1, sl
   15af8:	mov	r0, fp
   15afc:	bl	4474 <readstat_write_bytes@plt>
   15b00:	cmp	r0, #0
   15b04:	bne	1593c <sav_emit_variable_records+0x3c>
   15b08:	ldr	r3, [r9]
   15b0c:	mov	r0, r9
   15b10:	cmp	r3, #5
   15b14:	bne	15dcc <sav_emit_variable_records+0x4cc>
   15b18:	mov	r8, #0
   15b1c:	add	r6, sp, #64	; 0x40
   15b20:	add	r7, sp, #112	; 0x70
   15b24:	bl	4324 <readstat_variable_get_missing_ranges_count@plt>
   15b28:	str	r0, [sp, #16]
   15b2c:	ldr	r3, [sp, #16]
   15b30:	cmp	r3, r8
   15b34:	bgt	15c34 <sav_emit_variable_records+0x334>
   15b38:	mov	r6, #0
   15b3c:	b	15cc8 <sav_emit_variable_records+0x3c8>
   15b40:	mov	r2, r5
   15b44:	mov	r1, r9
   15b48:	mov	r0, r6
   15b4c:	bl	3f58 <readstat_variable_get_missing_range_lo@plt>
   15b50:	mov	r2, r5
   15b54:	mov	r1, r9
   15b58:	mov	r0, r7
   15b5c:	add	r5, r5, #1
   15b60:	bl	4348 <readstat_variable_get_missing_range_hi@plt>
   15b64:	ldm	r6, {r0, r1, r2, r3}
   15b68:	bl	42d0 <spss_64bit_value@plt>
   15b6c:	strd	r0, [sp, #8]
   15b70:	ldm	r7, {r0, r1, r2, r3}
   15b74:	bl	42d0 <spss_64bit_value@plt>
   15b78:	ldrd	r2, [sp, #8]
   15b7c:	cmp	r3, r1
   15b80:	cmpeq	r2, r0
   15b84:	addne	r4, r4, #1
   15b88:	movne	sl, #1
   15b8c:	b	159ec <sav_emit_variable_records+0xec>
   15b90:	bl	42e8 <readstat_variable_get_storage_width@plt>
   15b94:	cmp	r0, #8
   15b98:	movhi	r4, #0
   15b9c:	bhi	159fc <sav_emit_variable_records+0xfc>
   15ba0:	mov	r0, r9
   15ba4:	mov	r5, #0
   15ba8:	bl	4324 <readstat_variable_get_missing_ranges_count@plt>
   15bac:	mov	r4, r0
   15bb0:	mov	r8, r5
   15bb4:	str	r0, [sp, #8]
   15bb8:	add	r6, sp, #64	; 0x40
   15bbc:	add	r7, sp, #112	; 0x70
   15bc0:	ldr	r3, [sp, #8]
   15bc4:	cmp	r3, r5
   15bc8:	bgt	15bd4 <sav_emit_variable_records+0x2d4>
   15bcc:	cmp	r8, #0
   15bd0:	b	159f8 <sav_emit_variable_records+0xf8>
   15bd4:	mov	r2, r5
   15bd8:	mov	r1, r9
   15bdc:	mov	r0, r6
   15be0:	bl	3f58 <readstat_variable_get_missing_range_lo@plt>
   15be4:	mov	r2, r5
   15be8:	mov	r1, r9
   15bec:	mov	r0, r7
   15bf0:	bl	4348 <readstat_variable_get_missing_range_hi@plt>
   15bf4:	ldm	r6, {r0, r1, r2, r3}
   15bf8:	bl	3fc4 <readstat_string_value@plt>
   15bfc:	mov	sl, r0
   15c00:	ldm	r7, {r0, r1, r2, r3}
   15c04:	bl	3fc4 <readstat_string_value@plt>
   15c08:	cmp	sl, #0
   15c0c:	cmpne	r0, #0
   15c10:	mov	r1, r0
   15c14:	beq	15c2c <sav_emit_variable_records+0x32c>
   15c18:	mov	r0, sl
   15c1c:	bl	3e14 <strcmp@plt>
   15c20:	cmp	r0, #0
   15c24:	addne	r4, r4, #1
   15c28:	movne	r8, #1
   15c2c:	add	r5, r5, #1
   15c30:	b	15bc0 <sav_emit_variable_records+0x2c0>
   15c34:	mov	r2, r8
   15c38:	mov	r1, r9
   15c3c:	mov	r0, r6
   15c40:	bl	3f58 <readstat_variable_get_missing_range_lo@plt>
   15c44:	mov	r2, r8
   15c48:	mov	r1, r9
   15c4c:	mov	r0, r7
   15c50:	bl	4348 <readstat_variable_get_missing_range_hi@plt>
   15c54:	ldm	r6, {r0, r1, r2, r3}
   15c58:	bl	42d0 <spss_64bit_value@plt>
   15c5c:	mov	r4, r0
   15c60:	mov	r5, r1
   15c64:	ldm	r7, {r0, r1, r2, r3}
   15c68:	bl	42d0 <spss_64bit_value@plt>
   15c6c:	cmp	r5, r1
   15c70:	cmpeq	r4, r0
   15c74:	beq	15cdc <sav_emit_variable_records+0x3dc>
   15c78:	ldm	r6, {r0, r1, r2, r3}
   15c7c:	bl	42d0 <spss_64bit_value@plt>
   15c80:	add	r3, sp, #32
   15c84:	mov	r2, #8
   15c88:	strd	r0, [sp, #32]
   15c8c:	mov	r1, r3
   15c90:	mov	r0, fp
   15c94:	bl	4474 <readstat_write_bytes@plt>
   15c98:	cmp	r0, #0
   15c9c:	bne	1593c <sav_emit_variable_records+0x3c>
   15ca0:	ldm	r7, {r0, r1, r2, r3}
   15ca4:	bl	42d0 <spss_64bit_value@plt>
   15ca8:	mov	r2, #8
   15cac:	strd	r0, [sp, #40]	; 0x28
   15cb0:	add	r1, sp, #40	; 0x28
   15cb4:	mov	r0, fp
   15cb8:	bl	4474 <readstat_write_bytes@plt>
   15cbc:	cmp	r0, #0
   15cc0:	bne	1593c <sav_emit_variable_records+0x3c>
   15cc4:	mov	r6, #2
   15cc8:	mov	r5, #0
   15ccc:	add	r4, sp, #64	; 0x40
   15cd0:	add	r8, sp, #112	; 0x70
   15cd4:	add	r7, sp, #48	; 0x30
   15cd8:	b	15d5c <sav_emit_variable_records+0x45c>
   15cdc:	add	r8, r8, #1
   15ce0:	b	15b2c <sav_emit_variable_records+0x22c>
   15ce4:	mov	r2, r5
   15ce8:	mov	r1, r9
   15cec:	mov	r0, r4
   15cf0:	bl	3f58 <readstat_variable_get_missing_range_lo@plt>
   15cf4:	mov	r2, r5
   15cf8:	mov	r1, r9
   15cfc:	mov	r0, r8
   15d00:	bl	4348 <readstat_variable_get_missing_range_hi@plt>
   15d04:	ldm	r4, {r0, r1, r2, r3}
   15d08:	bl	42d0 <spss_64bit_value@plt>
   15d0c:	strd	r0, [sp, #8]
   15d10:	ldm	r8, {r0, r1, r2, r3}
   15d14:	bl	42d0 <spss_64bit_value@plt>
   15d18:	ldrd	r2, [sp, #8]
   15d1c:	cmp	r3, r1
   15d20:	cmpeq	r2, r0
   15d24:	bne	15d58 <sav_emit_variable_records+0x458>
   15d28:	ldm	r4, {r0, r1, r2, r3}
   15d2c:	bl	42d0 <spss_64bit_value@plt>
   15d30:	mov	r2, #8
   15d34:	strd	r0, [r7, #-8]
   15d38:	add	r1, sp, #40	; 0x28
   15d3c:	mov	r0, fp
   15d40:	bl	4474 <readstat_write_bytes@plt>
   15d44:	cmp	r0, #0
   15d48:	bne	1593c <sav_emit_variable_records+0x3c>
   15d4c:	add	r6, r6, #1
   15d50:	cmp	r6, #3
   15d54:	beq	15d68 <sav_emit_variable_records+0x468>
   15d58:	add	r5, r5, #1
   15d5c:	ldr	r3, [sp, #16]
   15d60:	cmp	r3, r5
   15d64:	bgt	15ce4 <sav_emit_variable_records+0x3e4>
   15d68:	ldr	r1, [r9, #1596]	; 0x63c
   15d6c:	mov	r0, fp
   15d70:	lsr	r1, r1, #3
   15d74:	sub	r1, r1, #1
   15d78:	cmp	r1, #31
   15d7c:	movge	r1, #31
   15d80:	bl	153b0 <sav_emit_blank_variable_records>
   15d84:	cmp	r0, #0
   15d88:	bne	1593c <sav_emit_variable_records+0x3c>
   15d8c:	ldr	r0, [r9]
   15d90:	mov	r5, #1
   15d94:	ldr	r1, [r9, #1600]	; 0x640
   15d98:	bl	15324 <sav_variable_segments>
   15d9c:	sub	r8, r0, #1
   15da0:	str	r0, [sp, #16]
   15da4:	ldr	r3, [sp, #16]
   15da8:	cmp	r3, r5
   15dac:	bgt	15f20 <sav_emit_variable_records+0x620>
   15db0:	ldr	r3, [sp]
   15db4:	add	r3, r3, #1
   15db8:	str	r3, [sp]
   15dbc:	ldr	r3, [sp, #4]
   15dc0:	add	r3, r3, #15
   15dc4:	str	r3, [sp, #4]
   15dc8:	b	15928 <sav_emit_variable_records+0x28>
   15dcc:	bl	42e8 <readstat_variable_get_storage_width@plt>
   15dd0:	cmp	r0, #8
   15dd4:	bhi	15d68 <sav_emit_variable_records+0x468>
   15dd8:	mov	r0, r9
   15ddc:	mov	r4, #0
   15de0:	bl	4324 <readstat_variable_get_missing_ranges_count@plt>
   15de4:	mov	r8, r0
   15de8:	add	r5, sp, #64	; 0x40
   15dec:	cmp	r8, r4
   15df0:	movle	r6, #0
   15df4:	ble	15e84 <sav_emit_variable_records+0x584>
   15df8:	mov	r2, r4
   15dfc:	mov	r1, r9
   15e00:	mov	r0, r5
   15e04:	bl	3f58 <readstat_variable_get_missing_range_lo@plt>
   15e08:	mov	r2, r4
   15e0c:	mov	r1, r9
   15e10:	mov	r0, sl
   15e14:	bl	4348 <readstat_variable_get_missing_range_hi@plt>
   15e18:	ldm	r5, {r0, r1, r2, r3}
   15e1c:	bl	3fc4 <readstat_string_value@plt>
   15e20:	mov	r6, r0
   15e24:	ldm	sl, {r0, r1, r2, r3}
   15e28:	bl	3fc4 <readstat_string_value@plt>
   15e2c:	cmp	r6, #0
   15e30:	cmpne	r0, #0
   15e34:	mov	r7, r0
   15e38:	beq	15e90 <sav_emit_variable_records+0x590>
   15e3c:	mov	r1, r0
   15e40:	mov	r0, r6
   15e44:	bl	3e14 <strcmp@plt>
   15e48:	cmp	r0, #0
   15e4c:	beq	15e90 <sav_emit_variable_records+0x590>
   15e50:	mov	r2, #8
   15e54:	mov	r1, r6
   15e58:	mov	r0, fp
   15e5c:	bl	4570 <readstat_write_space_padded_string@plt>
   15e60:	cmp	r0, #0
   15e64:	bne	1593c <sav_emit_variable_records+0x3c>
   15e68:	mov	r2, #8
   15e6c:	mov	r1, r7
   15e70:	mov	r0, fp
   15e74:	bl	4570 <readstat_write_space_padded_string@plt>
   15e78:	cmp	r0, #0
   15e7c:	bne	1593c <sav_emit_variable_records+0x3c>
   15e80:	mov	r6, #2
   15e84:	mov	r4, #0
   15e88:	add	r5, sp, #64	; 0x40
   15e8c:	b	15f14 <sav_emit_variable_records+0x614>
   15e90:	add	r4, r4, #1
   15e94:	b	15dec <sav_emit_variable_records+0x4ec>
   15e98:	mov	r2, r4
   15e9c:	mov	r1, r9
   15ea0:	mov	r0, r5
   15ea4:	bl	3f58 <readstat_variable_get_missing_range_lo@plt>
   15ea8:	mov	r2, r4
   15eac:	mov	r1, r9
   15eb0:	mov	r0, sl
   15eb4:	bl	4348 <readstat_variable_get_missing_range_hi@plt>
   15eb8:	ldm	r5, {r0, r1, r2, r3}
   15ebc:	bl	3fc4 <readstat_string_value@plt>
   15ec0:	mov	r7, r0
   15ec4:	ldm	sl, {r0, r1, r2, r3}
   15ec8:	bl	3fc4 <readstat_string_value@plt>
   15ecc:	cmp	r7, #0
   15ed0:	cmpne	r0, #0
   15ed4:	mov	r1, r0
   15ed8:	beq	15f10 <sav_emit_variable_records+0x610>
   15edc:	mov	r0, r7
   15ee0:	bl	3e14 <strcmp@plt>
   15ee4:	cmp	r0, #0
   15ee8:	bne	15f10 <sav_emit_variable_records+0x610>
   15eec:	mov	r2, #8
   15ef0:	mov	r1, r7
   15ef4:	mov	r0, fp
   15ef8:	bl	4570 <readstat_write_space_padded_string@plt>
   15efc:	cmp	r0, #0
   15f00:	bne	1593c <sav_emit_variable_records+0x3c>
   15f04:	add	r6, r6, #1
   15f08:	cmp	r6, #3
   15f0c:	beq	15d68 <sav_emit_variable_records+0x468>
   15f10:	add	r4, r4, #1
   15f14:	cmp	r8, r4
   15f18:	bgt	15e98 <sav_emit_variable_records+0x598>
   15f1c:	b	15d68 <sav_emit_variable_records+0x468>
   15f20:	cmp	r8, r5
   15f24:	mov	r3, #2
   15f28:	ldreq	r1, [r9, #1600]	; 0x640
   15f2c:	moveq	r4, #252	; 0xfc
   15f30:	mov	r2, #28
   15f34:	add	r6, sp, #64	; 0x40
   15f38:	mov	r0, sl
   15f3c:	str	r3, [sp, #52]	; 0x34
   15f40:	movne	r4, #255	; 0xff
   15f44:	mlseq	r4, r4, r8, r1
   15f48:	mov	r1, #0
   15f4c:	bl	42b8 <memset@plt>
   15f50:	mov	r1, #9
   15f54:	mov	r0, r6
   15f58:	ldr	r3, [sp, #4]
   15f5c:	ldr	r2, [sp, #20]
   15f60:	bl	4294 <snprintf@plt>
   15f64:	mov	r0, r6
   15f68:	bl	421c <strlen@plt>
   15f6c:	mov	r3, #36	; 0x24
   15f70:	mov	r7, r0
   15f74:	add	r1, sp, #52	; 0x34
   15f78:	udiv	r2, r5, r3
   15f7c:	mls	r2, r3, r2, r5
   15f80:	uxtb	r3, r2
   15f84:	cmp	r2, #9
   15f88:	add	r2, r0, #1
   15f8c:	addls	r3, r3, #48	; 0x30
   15f90:	addhi	r3, r3, #55	; 0x37
   15f94:	str	r2, [sp, #8]
   15f98:	add	r2, sp, #368	; 0x170
   15f9c:	add	r2, r2, r0
   15fa0:	mov	r0, fp
   15fa4:	strb	r3, [r2, #-304]	; 0xfffffed0
   15fa8:	mov	r2, #4
   15fac:	bl	4474 <readstat_write_bytes@plt>
   15fb0:	cmp	r0, #0
   15fb4:	bne	1593c <sav_emit_variable_records+0x3c>
   15fb8:	add	r1, sp, #84	; 0x54
   15fbc:	mov	r0, r9
   15fc0:	str	r4, [sp, #112]	; 0x70
   15fc4:	bl	4114 <spss_format_for_variable@plt>
   15fc8:	cmp	r0, #0
   15fcc:	str	r4, [sp, #88]	; 0x58
   15fd0:	bne	1593c <sav_emit_variable_records+0x3c>
   15fd4:	ldr	r2, [sp, #84]	; 0x54
   15fd8:	cmp	r4, #255	; 0xff
   15fdc:	add	r0, sp, #132	; 0x84
   15fe0:	ldr	r3, [sp, #92]	; 0x5c
   15fe4:	orr	r3, r3, r2, lsl #16
   15fe8:	movlt	r2, r4
   15fec:	movge	r2, #255	; 0xff
   15ff0:	lsl	r2, r2, #8
   15ff4:	cmp	r7, #8
   15ff8:	uxth	r2, r2
   15ffc:	orr	r3, r3, r2
   16000:	str	r3, [sp, #124]	; 0x7c
   16004:	str	r3, [sp, #128]	; 0x80
   16008:	ldr	r3, [pc, #100]	; 16074 <sav_emit_variable_records+0x774>
   1600c:	str	r3, [sp, #132]	; 0x84
   16010:	str	r3, [r0, #4]
   16014:	beq	16024 <sav_emit_variable_records+0x724>
   16018:	mov	r1, r6
   1601c:	ldr	r2, [sp, #8]
   16020:	bl	3f34 <memcpy@plt>
   16024:	mov	r2, #28
   16028:	add	r1, sp, #112	; 0x70
   1602c:	mov	r0, fp
   16030:	bl	4474 <readstat_write_bytes@plt>
   16034:	cmp	r0, #0
   16038:	bne	1593c <sav_emit_variable_records+0x3c>
   1603c:	add	r1, r4, #7
   16040:	mov	r0, fp
   16044:	lsr	r1, r1, #3
   16048:	sub	r1, r1, #1
   1604c:	cmp	r1, #31
   16050:	movge	r1, #31
   16054:	bl	153b0 <sav_emit_blank_variable_records>
   16058:	cmp	r0, #0
   1605c:	bne	1593c <sav_emit_variable_records+0x3c>
   16060:	add	r5, r5, #1
   16064:	b	15da4 <sav_emit_variable_records+0x4a4>
   16068:	mov	r0, #31
   1606c:	b	1593c <sav_emit_variable_records+0x3c>
   16070:	.word	0x0000c226
   16074:	.word	0x20202020

00016078 <sav_begin_data>:
   16078:	ldr	r3, [r0, #308]	; 0x134
   1607c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16080:	sub	sp, sp, #292	; 0x124
   16084:	cmp	r3, #0
   16088:	moveq	r4, #14
   1608c:	beq	16444 <sav_begin_data+0x3cc>
   16090:	ldr	r4, [r0, #28]
   16094:	mov	r1, #15
   16098:	mov	fp, r0
   1609c:	ldr	r9, [pc, #3764]	; 16f58 <sav_begin_data+0xee0>
   160a0:	ldr	sl, [pc, #3764]	; 16f5c <sav_begin_data+0xee4>
   160a4:	mov	r0, r4
   160a8:	bl	3d6c <calloc@plt>
   160ac:	str	r0, [sp, #8]
   160b0:	mov	r0, r4
   160b4:	add	r9, pc, r9
   160b8:	bl	41b0 <ck_hash_table_init@plt>
   160bc:	ldr	r3, [sp, #8]
   160c0:	add	sl, pc, sl
   160c4:	mov	r7, r0
   160c8:	mov	r4, #0
   160cc:	add	r5, r3, #9
   160d0:	ldr	r3, [pc, #3720]	; 16f60 <sav_begin_data+0xee8>
   160d4:	add	r3, pc, r3
   160d8:	str	r3, [sp, #12]
   160dc:	ldr	r3, [fp, #28]
   160e0:	cmp	r4, r3
   160e4:	blt	16208 <sav_begin_data+0x190>
   160e8:	mov	r0, r7
   160ec:	add	r5, sp, #112	; 0x70
   160f0:	bl	4258 <ck_hash_table_free@plt>
   160f4:	mov	r2, #176	; 0xb0
   160f8:	mov	r1, #0
   160fc:	mov	r0, r5
   16100:	bl	42b8 <memset@plt>
   16104:	ldr	r3, [fp, #20]
   16108:	str	r3, [sp, #32]
   1610c:	add	r3, sp, #32
   16110:	mov	r0, r3
   16114:	str	r3, [sp, #12]
   16118:	bl	4180 <localtime@plt>
   1611c:	ldr	r3, [pc, #3648]	; 16f64 <sav_begin_data+0xeec>
   16120:	add	r2, sp, #64	; 0x40
   16124:	mov	r8, r0
   16128:	mov	r6, r2
   1612c:	add	r3, pc, r3
   16130:	add	lr, r3, #48	; 0x30
   16134:	ldr	r0, [r3]
   16138:	mov	ip, r2
   1613c:	add	r3, r3, #8
   16140:	ldr	r1, [r3, #-4]
   16144:	cmp	r3, lr
   16148:	stmia	ip!, {r0, r1}
   1614c:	mov	r2, ip
   16150:	bne	16134 <sav_begin_data+0xbc>
   16154:	mov	r3, #0
   16158:	add	r9, sp, #48	; 0x30
   1615c:	add	r7, sp, #36	; 0x24
   16160:	cmp	r8, r3
   16164:	moveq	r4, #39	; 0x27
   16168:	str	r3, [r7, #4]
   1616c:	str	r3, [r9, #4]
   16170:	strb	r3, [r7, #8]
   16174:	strh	r3, [r9, #8]
   16178:	str	r3, [sp, #36]	; 0x24
   1617c:	str	r3, [sp, #48]	; 0x30
   16180:	beq	16418 <sav_begin_data+0x3a0>
   16184:	ldr	r2, [fp, #16]
   16188:	add	ip, sp, #116	; 0x74
   1618c:	ldr	r3, [pc, #3540]	; 16f68 <sav_begin_data+0xef0>
   16190:	cmp	r2, #2
   16194:	str	r3, [sp, #112]	; 0x70
   16198:	moveq	r3, #51	; 0x33
   1619c:	strbeq	r3, [sp, #115]	; 0x73
   161a0:	movw	r3, #8224	; 0x2020
   161a4:	strh	r3, [sp, #174]	; 0xae
   161a8:	ldr	r3, [pc, #3516]	; 16f6c <sav_begin_data+0xef4>
   161ac:	add	r3, pc, r3
   161b0:	add	r4, r3, #56	; 0x38
   161b4:	ldr	r0, [r3]
   161b8:	mov	lr, ip
   161bc:	add	r3, r3, #8
   161c0:	ldr	r1, [r3, #-4]
   161c4:	cmp	r3, r4
   161c8:	stmia	lr!, {r0, r1}
   161cc:	mov	ip, lr
   161d0:	bne	161b4 <sav_begin_data+0x13c>
   161d4:	ldrh	r1, [r3]
   161d8:	cmp	r2, #1
   161dc:	ldrb	r3, [r3, #2]
   161e0:	strh	r1, [lr]
   161e4:	strb	r3, [lr, #2]
   161e8:	mov	r3, #2
   161ec:	str	r3, [sp, #176]	; 0xb0
   161f0:	ldr	r3, [fp, #76]	; 0x4c
   161f4:	lsr	r3, r3, #3
   161f8:	str	r3, [sp, #180]	; 0xb4
   161fc:	bne	162c0 <sav_begin_data+0x248>
   16200:	str	r2, [sp, #184]	; 0xb8
   16204:	b	162c8 <sav_begin_data+0x250>
   16208:	mov	r1, r4
   1620c:	mov	r0, fp
   16210:	bl	439c <readstat_get_variable@plt>
   16214:	sub	r6, r5, #9
   16218:	add	r3, r0, #8
   1621c:	ldr	r2, [sp, #12]
   16220:	mov	r8, r0
   16224:	mov	r1, #9
   16228:	mov	r0, r6
   1622c:	bl	4294 <snprintf@plt>
   16230:	sub	r3, r5, #10
   16234:	ldrb	r2, [r3, #1]!
   16238:	cmp	r2, #0
   1623c:	bne	162a4 <sav_begin_data+0x22c>
   16240:	mov	r1, r7
   16244:	mov	r0, r6
   16248:	bl	3fe8 <ck_str_hash_lookup@plt>
   1624c:	cmp	r0, #0
   16250:	add	r4, r4, #1
   16254:	beq	1626c <sav_begin_data+0x1f4>
   16258:	mov	r3, r4
   1625c:	mov	r2, r9
   16260:	mov	r1, #9
   16264:	mov	r0, r6
   16268:	bl	4294 <snprintf@plt>
   1626c:	mov	r2, r7
   16270:	mov	r1, r8
   16274:	mov	r0, r6
   16278:	bl	4510 <ck_str_hash_insert@plt>
   1627c:	ldr	r3, [r8, #1600]	; 0x640
   16280:	cmp	r3, #255	; 0xff
   16284:	bls	1629c <sav_begin_data+0x224>
   16288:	mov	r3, r6
   1628c:	mov	r2, sl
   16290:	mov	r1, #6
   16294:	mov	r0, r5
   16298:	bl	4294 <snprintf@plt>
   1629c:	add	r5, r5, #15
   162a0:	b	160dc <sav_begin_data+0x64>
   162a4:	strd	r2, [sp, #16]
   162a8:	bl	41a4 <__ctype_toupper_loc@plt>
   162ac:	ldr	r1, [r0]
   162b0:	ldrd	r2, [sp, #16]
   162b4:	ldr	r2, [r1, r2, lsl #2]
   162b8:	strb	r2, [r3]
   162bc:	b	16234 <sav_begin_data+0x1bc>
   162c0:	cmp	r2, #2
   162c4:	beq	16200 <sav_begin_data+0x188>
   162c8:	ldr	r3, [fp, #224]	; 0xe0
   162cc:	cmp	r3, #0
   162d0:	beq	162ec <sav_begin_data+0x274>
   162d4:	ldr	r3, [r3, #1592]	; 0x638
   162d8:	add	r2, r3, #7
   162dc:	cmp	r3, #0
   162e0:	movlt	r3, r2
   162e4:	asr	r3, r3, #3
   162e8:	add	r3, r3, #1
   162ec:	ldr	r0, [r8, #20]
   162f0:	mov	r4, #100	; 0x64
   162f4:	str	r3, [sp, #188]	; 0xbc
   162f8:	ldr	r3, [fp, #80]	; 0x50
   162fc:	udiv	r2, r0, r4
   16300:	str	r3, [sp, #192]	; 0xc0
   16304:	mov	r3, #0
   16308:	str	r3, [sp, #196]	; 0xc4
   1630c:	ldr	r3, [pc, #3164]	; 16f70 <sav_begin_data+0xef8>
   16310:	mls	r2, r4, r2, r0
   16314:	str	r3, [sp, #200]	; 0xc8
   16318:	mov	r0, r9
   1631c:	ldr	r3, [r8, #12]
   16320:	str	r2, [sp, #4]
   16324:	ldr	r2, [r8, #16]
   16328:	udiv	r1, r3, r4
   1632c:	add	r2, r6, r2, lsl #2
   16330:	str	r2, [sp]
   16334:	ldr	r2, [pc, #3128]	; 16f74 <sav_begin_data+0xefc>
   16338:	mls	r3, r4, r1, r3
   1633c:	mov	r1, #10
   16340:	add	r2, pc, r2
   16344:	bl	4294 <snprintf@plt>
   16348:	ldm	r9, {r0, r1, r2}
   1634c:	add	r3, sp, #204	; 0xcc
   16350:	stmia	r3!, {r0, r1}
   16354:	strb	r2, [r3]
   16358:	ldr	r0, [r8]
   1635c:	ldr	r3, [r8, #8]
   16360:	udiv	r2, r0, r4
   16364:	udiv	r1, r3, r4
   16368:	mls	r2, r4, r2, r0
   1636c:	str	r2, [sp, #4]
   16370:	ldr	r0, [r8, #4]
   16374:	mls	r3, r4, r1, r3
   16378:	mov	r1, #9
   1637c:	udiv	r2, r0, r4
   16380:	mls	r2, r4, r2, r0
   16384:	mov	r0, r7
   16388:	add	r4, sp, #221	; 0xdd
   1638c:	str	r2, [sp]
   16390:	ldr	r2, [pc, #3040]	; 16f78 <sav_begin_data+0xf00>
   16394:	add	r2, pc, r2
   16398:	bl	4294 <snprintf@plt>
   1639c:	ldm	r7!, {r0, r1}
   163a0:	mov	r2, #64	; 0x40
   163a4:	str	r0, [sp, #213]	; 0xd5
   163a8:	mov	r0, r4
   163ac:	str	r1, [sp, #217]	; 0xd9
   163b0:	mov	r1, #32
   163b4:	bl	42b8 <memset@plt>
   163b8:	ldrb	r3, [fp, #88]	; 0x58
   163bc:	cmp	r3, #0
   163c0:	beq	163e8 <sav_begin_data+0x370>
   163c4:	add	r7, fp, #88	; 0x58
   163c8:	mov	r0, r7
   163cc:	bl	421c <strlen@plt>
   163d0:	cmp	r0, #64	; 0x40
   163d4:	mov	r1, r7
   163d8:	movcc	r2, r0
   163dc:	movcs	r2, #64	; 0x40
   163e0:	mov	r0, r4
   163e4:	bl	3f34 <memcpy@plt>
   163e8:	mov	r2, #176	; 0xb0
   163ec:	mov	r1, r5
   163f0:	mov	r0, fp
   163f4:	bl	4474 <readstat_write_bytes@plt>
   163f8:	subs	r4, r0, #0
   163fc:	bne	16418 <sav_begin_data+0x3a0>
   16400:	mov	r0, fp
   16404:	ldr	r1, [sp, #8]
   16408:	bl	15900 <sav_emit_variable_records>
   1640c:	subs	r4, r0, #0
   16410:	moveq	r8, r4
   16414:	beq	16470 <sav_begin_data+0x3f8>
   16418:	ldr	r0, [sp, #8]
   1641c:	bl	3ed4 <free@plt>
   16420:	cmp	r4, #0
   16424:	bne	16444 <sav_begin_data+0x3cc>
   16428:	ldr	r0, [fp, #76]	; 0x4c
   1642c:	bl	3ff4 <sav_compressed_row_bound@plt>
   16430:	ldr	r3, [fp, #16]
   16434:	cmp	r3, #1
   16438:	bne	17458 <sav_begin_data+0x13e0>
   1643c:	bl	4240 <readstat_malloc@plt>
   16440:	str	r0, [fp, #300]	; 0x12c
   16444:	mov	r0, r4
   16448:	add	sp, sp, #292	; 0x124
   1644c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16450:	mov	r1, r8
   16454:	mov	r0, fp
   16458:	bl	4444 <readstat_get_label_set@plt>
   1645c:	mov	r7, r0
   16460:	bl	15570 <readstat_label_set_number_short_variables>
   16464:	cmp	r0, #0
   16468:	bgt	16698 <sav_begin_data+0x620>
   1646c:	add	r8, r8, #1
   16470:	ldr	r3, [fp, #40]	; 0x28
   16474:	cmp	r8, r3
   16478:	blt	16450 <sav_begin_data+0x3d8>
   1647c:	mov	r3, #6
   16480:	str	r3, [sp, #64]	; 0x40
   16484:	ldr	r3, [fp, #52]	; 0x34
   16488:	cmp	r3, #0
   1648c:	str	r3, [sp, #112]	; 0x70
   16490:	beq	164d4 <sav_begin_data+0x45c>
   16494:	mov	r2, #4
   16498:	mov	r1, r6
   1649c:	mov	r0, fp
   164a0:	bl	4474 <readstat_write_bytes@plt>
   164a4:	subs	r4, r0, #0
   164a8:	bne	16418 <sav_begin_data+0x3a0>
   164ac:	mov	r2, #4
   164b0:	mov	r1, r5
   164b4:	mov	r0, fp
   164b8:	bl	4474 <readstat_write_bytes@plt>
   164bc:	subs	r4, r0, #0
   164c0:	moveq	r7, r4
   164c4:	bne	16418 <sav_begin_data+0x3a0>
   164c8:	ldr	r3, [fp, #52]	; 0x34
   164cc:	cmp	r7, r3
   164d0:	blt	168a8 <sav_begin_data+0x830>
   164d4:	ldr	r2, [pc, #2720]	; 16f7c <sav_begin_data+0xf04>
   164d8:	mov	lr, r6
   164dc:	add	r2, pc, r2
   164e0:	add	r3, r2, #48	; 0x30
   164e4:	add	r2, r2, #64	; 0x40
   164e8:	ldr	r0, [r3]
   164ec:	mov	ip, lr
   164f0:	add	r3, r3, #8
   164f4:	ldr	r1, [r3, #-4]
   164f8:	cmp	r3, r2
   164fc:	stmia	ip!, {r0, r1}
   16500:	mov	lr, ip
   16504:	bne	164e8 <sav_begin_data+0x470>
   16508:	mov	r3, #0
   1650c:	mov	r2, #20
   16510:	strd	r2, [sp, #112]	; 0x70
   16514:	mvn	r2, #0
   16518:	str	r3, [sp, #120]	; 0x78
   1651c:	mov	r3, #1
   16520:	strd	r2, [sp, #124]	; 0x7c
   16524:	str	r3, [sp, #132]	; 0x84
   16528:	bl	3ec8 <machine_is_little_endian@plt>
   1652c:	cmp	r0, #0
   16530:	mov	r2, #16
   16534:	movne	r3, #2
   16538:	moveq	r3, #1
   1653c:	mov	r1, r6
   16540:	mov	r0, fp
   16544:	str	r3, [sp, #136]	; 0x88
   16548:	movw	r3, #65001	; 0xfde9
   1654c:	str	r3, [sp, #140]	; 0x8c
   16550:	bl	4474 <readstat_write_bytes@plt>
   16554:	subs	r4, r0, #0
   16558:	bne	16418 <sav_begin_data+0x3a0>
   1655c:	mov	r2, #32
   16560:	mov	r1, r5
   16564:	mov	r0, fp
   16568:	bl	4474 <readstat_write_bytes@plt>
   1656c:	subs	r4, r0, #0
   16570:	bne	16418 <sav_begin_data+0x3a0>
   16574:	ldr	r2, [pc, #2564]	; 16f80 <sav_begin_data+0xf08>
   16578:	mov	lr, r6
   1657c:	add	r2, pc, r2
   16580:	add	r3, r2, #64	; 0x40
   16584:	add	r2, r2, #80	; 0x50
   16588:	ldr	r0, [r3]
   1658c:	mov	ip, lr
   16590:	add	r3, r3, #8
   16594:	ldr	r1, [r3, #-4]
   16598:	cmp	r3, r2
   1659c:	stmia	ip!, {r0, r1}
   165a0:	mov	lr, ip
   165a4:	bne	16588 <sav_begin_data+0x510>
   165a8:	mov	r2, #16
   165ac:	mov	r1, r6
   165b0:	mov	r0, fp
   165b4:	bl	4474 <readstat_write_bytes@plt>
   165b8:	subs	r4, r0, #0
   165bc:	bne	16418 <sav_begin_data+0x3a0>
   165c0:	mvn	r2, #0
   165c4:	mvn	r3, #1048576	; 0x100000
   165c8:	mov	r1, r5
   165cc:	mov	r0, fp
   165d0:	strd	r2, [sp, #112]	; 0x70
   165d4:	mvn	r2, #0
   165d8:	ldr	r3, [pc, #2468]	; 16f84 <sav_begin_data+0xf0c>
   165dc:	strd	r2, [sp, #120]	; 0x78
   165e0:	mvn	r2, #1
   165e4:	mvn	r3, #1048576	; 0x100000
   165e8:	strd	r2, [sp, #128]	; 0x80
   165ec:	mov	r2, #24
   165f0:	bl	4474 <readstat_write_bytes@plt>
   165f4:	subs	r4, r0, #0
   165f8:	bne	16418 <sav_begin_data+0x3a0>
   165fc:	mov	r3, #7
   16600:	mov	r0, #11
   16604:	mov	r1, #4
   16608:	mov	r6, r4
   1660c:	str	r3, [sp, #112]	; 0x70
   16610:	strd	r0, [sp, #116]	; 0x74
   16614:	str	r4, [sp, #124]	; 0x7c
   16618:	ldr	r3, [fp, #28]
   1661c:	cmp	r6, r3
   16620:	blt	168f8 <sav_begin_data+0x880>
   16624:	add	r4, r4, r4, lsl #1
   16628:	mov	r2, #16
   1662c:	mov	r1, r5
   16630:	mov	r0, fp
   16634:	str	r4, [sp, #124]	; 0x7c
   16638:	bl	4474 <readstat_write_bytes@plt>
   1663c:	subs	r4, r0, #0
   16640:	moveq	r6, r4
   16644:	moveq	r8, #8
   16648:	addeq	r9, sp, #36	; 0x24
   1664c:	bne	16418 <sav_begin_data+0x3a0>
   16650:	ldr	r3, [fp, #28]
   16654:	cmp	r6, r3
   16658:	blt	1691c <sav_begin_data+0x8a4>
   1665c:	ldr	r2, [pc, #2340]	; 16f88 <sav_begin_data+0xf10>
   16660:	add	r2, pc, r2
   16664:	add	r3, r2, #144	; 0x90
   16668:	add	r2, r2, #160	; 0xa0
   1666c:	ldr	r0, [r3]
   16670:	mov	ip, r5
   16674:	add	r3, r3, #8
   16678:	ldr	r1, [r3, #-4]
   1667c:	cmp	r3, r2
   16680:	stmia	ip!, {r0, r1}
   16684:	mov	r5, ip
   16688:	bne	1666c <sav_begin_data+0x5f4>
   1668c:	mov	r4, #0
   16690:	add	r5, sp, #64	; 0x40
   16694:	b	16a28 <sav_begin_data+0x9b0>
   16698:	mov	r2, #0
   1669c:	ldr	sl, [r7]
   166a0:	ldr	r3, [r7, #264]	; 0x108
   166a4:	cmp	r3, r2
   166a8:	str	r3, [sp, #36]	; 0x24
   166ac:	str	r2, [sp, #48]	; 0x30
   166b0:	beq	1646c <sav_begin_data+0x3f4>
   166b4:	mov	r3, #3
   166b8:	mov	r2, #4
   166bc:	add	r1, sp, #48	; 0x30
   166c0:	mov	r0, fp
   166c4:	str	r3, [sp, #48]	; 0x30
   166c8:	bl	4474 <readstat_write_bytes@plt>
   166cc:	subs	r4, r0, #0
   166d0:	bne	16418 <sav_begin_data+0x3a0>
   166d4:	mov	r2, #4
   166d8:	add	r1, sp, #36	; 0x24
   166dc:	mov	r0, fp
   166e0:	bl	4474 <readstat_write_bytes@plt>
   166e4:	subs	r4, r0, #0
   166e8:	bne	16418 <sav_begin_data+0x3a0>
   166ec:	mov	r9, r4
   166f0:	ldr	r3, [sp, #36]	; 0x24
   166f4:	cmp	r9, r3
   166f8:	blt	16770 <sav_begin_data+0x6f8>
   166fc:	mov	r9, #4
   16700:	mov	r0, r7
   16704:	str	r9, [sp, #48]	; 0x30
   16708:	bl	15570 <readstat_label_set_number_short_variables>
   1670c:	mov	r2, r9
   16710:	add	r1, sp, #48	; 0x30
   16714:	str	r0, [sp, #64]	; 0x40
   16718:	mov	r0, fp
   1671c:	bl	4474 <readstat_write_bytes@plt>
   16720:	subs	r4, r0, #0
   16724:	bne	16418 <sav_begin_data+0x3a0>
   16728:	mov	r2, r9
   1672c:	mov	r1, r6
   16730:	mov	r0, fp
   16734:	bl	4474 <readstat_write_bytes@plt>
   16738:	subs	r4, r0, #0
   1673c:	bne	16418 <sav_begin_data+0x3a0>
   16740:	mov	r9, r4
   16744:	ldr	r3, [r7, #276]	; 0x114
   16748:	cmp	r9, r3
   1674c:	bge	1646c <sav_begin_data+0x3f4>
   16750:	mov	r1, r9
   16754:	mov	r0, r7
   16758:	bl	4468 <readstat_get_label_set_variable@plt>
   1675c:	ldr	r3, [r0, #1596]	; 0x63c
   16760:	cmp	r3, #8
   16764:	bls	16870 <sav_begin_data+0x7f8>
   16768:	add	r9, r9, #1
   1676c:	b	16744 <sav_begin_data+0x6cc>
   16770:	mov	r1, r9
   16774:	mov	r0, r7
   16778:	bl	44ec <readstat_get_value_label@plt>
   1677c:	cmp	sl, #0
   16780:	mov	r4, r0
   16784:	bne	16840 <sav_begin_data+0x7c8>
   16788:	ldr	r2, [r4, #20]
   1678c:	mov	r0, r6
   16790:	ldr	r3, [pc, #2036]	; 16f8c <sav_begin_data+0xf14>
   16794:	cmp	r2, #8
   16798:	movcs	r2, #8
   1679c:	str	r3, [r6]
   167a0:	str	r3, [r6, #4]
   167a4:	ldr	r1, [r4, #16]
   167a8:	bl	3f34 <memcpy@plt>
   167ac:	mov	r2, #8
   167b0:	mov	r1, r6
   167b4:	mov	r0, fp
   167b8:	bl	4474 <readstat_write_bytes@plt>
   167bc:	ldr	r3, [r4, #24]
   167c0:	mov	r2, #1
   167c4:	mov	r0, fp
   167c8:	ldr	r1, [sp, #12]
   167cc:	str	r3, [sp, #16]
   167d0:	mov	r3, #120	; 0x78
   167d4:	strb	r3, [sp, #32]
   167d8:	ldr	r3, [r4, #28]
   167dc:	cmp	r3, #119	; 0x77
   167e0:	movhi	r3, #120	; 0x78
   167e4:	strb	r3, [sp, #32]
   167e8:	bl	4474 <readstat_write_bytes@plt>
   167ec:	subs	r4, r0, #0
   167f0:	bne	16418 <sav_begin_data+0x3a0>
   167f4:	mov	r2, #128	; 0x80
   167f8:	mov	r1, #32
   167fc:	mov	r0, r5
   16800:	bl	42b8 <memset@plt>
   16804:	ldrb	r4, [sp, #32]
   16808:	mov	r0, r5
   1680c:	ldr	r1, [sp, #16]
   16810:	mov	r2, r4
   16814:	bl	3f34 <memcpy@plt>
   16818:	add	r2, r4, #8
   1681c:	mov	r1, r5
   16820:	bic	r2, r2, #7
   16824:	mov	r0, fp
   16828:	sub	r2, r2, #1
   1682c:	bl	4474 <readstat_write_bytes@plt>
   16830:	subs	r4, r0, #0
   16834:	bne	16418 <sav_begin_data+0x3a0>
   16838:	add	r9, r9, #1
   1683c:	b	166f0 <sav_begin_data+0x678>
   16840:	cmp	sl, #5
   16844:	ldrdeq	r2, [r0]
   16848:	strdeq	r2, [sp, #112]	; 0x70
   1684c:	beq	16864 <sav_begin_data+0x7ec>
   16850:	cmp	sl, #3
   16854:	bne	167ac <sav_begin_data+0x734>
   16858:	vldr	s15, [r0, #8]
   1685c:	vcvt.f64.s32	d7, s15
   16860:	vstr	d7, [sp, #112]	; 0x70
   16864:	ldm	r5, {r0, r1}
   16868:	stm	r6, {r0, r1}
   1686c:	b	167ac <sav_begin_data+0x734>
   16870:	ldr	r3, [r0, #1592]	; 0x638
   16874:	mov	r1, r5
   16878:	mov	r0, fp
   1687c:	cmp	r3, #0
   16880:	add	r2, r3, #7
   16884:	movlt	r3, r2
   16888:	mov	r2, #4
   1688c:	asr	r3, r3, #3
   16890:	add	r3, r3, #1
   16894:	str	r3, [sp, #112]	; 0x70
   16898:	bl	4474 <readstat_write_bytes@plt>
   1689c:	subs	r4, r0, #0
   168a0:	beq	16768 <sav_begin_data+0x6f0>
   168a4:	b	16418 <sav_begin_data+0x3a0>
   168a8:	ldr	r3, [fp, #48]	; 0x30
   168ac:	ldr	r4, [r3, r7, lsl #2]
   168b0:	mov	r0, r4
   168b4:	bl	421c <strlen@plt>
   168b8:	cmp	r0, #80	; 0x50
   168bc:	mov	r8, r0
   168c0:	bhi	17470 <sav_begin_data+0x13f8>
   168c4:	mov	r2, r0
   168c8:	mov	r1, r4
   168cc:	mov	r0, fp
   168d0:	bl	4474 <readstat_write_bytes@plt>
   168d4:	subs	r4, r0, #0
   168d8:	bne	16418 <sav_begin_data+0x3a0>
   168dc:	rsb	r1, r8, #80	; 0x50
   168e0:	mov	r0, fp
   168e4:	bl	3df0 <readstat_write_spaces@plt>
   168e8:	subs	r4, r0, #0
   168ec:	bne	16418 <sav_begin_data+0x3a0>
   168f0:	add	r7, r7, #1
   168f4:	b	164c8 <sav_begin_data+0x450>
   168f8:	mov	r1, r6
   168fc:	mov	r0, fp
   16900:	bl	439c <readstat_get_variable@plt>
   16904:	ldr	r1, [r0, #1600]	; 0x640
   16908:	add	r6, r6, #1
   1690c:	ldr	r0, [r0]
   16910:	bl	15324 <sav_variable_segments>
   16914:	add	r4, r4, r0
   16918:	b	16618 <sav_begin_data+0x5a0>
   1691c:	mov	r1, r6
   16920:	mov	r0, fp
   16924:	bl	439c <readstat_get_variable@plt>
   16928:	mov	r4, r0
   1692c:	add	sl, sp, #48	; 0x30
   16930:	bl	433c <readstat_variable_get_measure@plt>
   16934:	bl	4084 <spss_measure_from_readstat_measure@plt>
   16938:	str	r0, [sp, #36]	; 0x24
   1693c:	mov	r0, r4
   16940:	bl	4234 <readstat_variable_get_display_width@plt>
   16944:	subs	r3, r0, #0
   16948:	mov	r0, r4
   1694c:	movle	r3, r8
   16950:	str	r3, [sp, #48]	; 0x30
   16954:	bl	4450 <readstat_variable_get_alignment@plt>
   16958:	bl	3e74 <spss_alignment_from_readstat_alignment@plt>
   1695c:	str	r0, [sp, #64]	; 0x40
   16960:	ldr	r0, [r4]
   16964:	ldr	r1, [r4, #1600]	; 0x640
   16968:	bl	15324 <sav_variable_segments>
   1696c:	mov	r7, r0
   16970:	cmp	r7, #0
   16974:	addeq	r6, r6, #1
   16978:	beq	16650 <sav_begin_data+0x5d8>
   1697c:	mov	r2, #4
   16980:	mov	r1, r9
   16984:	mov	r0, fp
   16988:	bl	4474 <readstat_write_bytes@plt>
   1698c:	subs	r4, r0, #0
   16990:	bne	16418 <sav_begin_data+0x3a0>
   16994:	mov	r2, #4
   16998:	mov	r1, sl
   1699c:	mov	r0, fp
   169a0:	bl	4474 <readstat_write_bytes@plt>
   169a4:	subs	r4, r0, #0
   169a8:	bne	16418 <sav_begin_data+0x3a0>
   169ac:	mov	r2, #4
   169b0:	add	r1, sp, #64	; 0x40
   169b4:	mov	r0, fp
   169b8:	sub	r7, r7, #1
   169bc:	bl	4474 <readstat_write_bytes@plt>
   169c0:	subs	r4, r0, #0
   169c4:	beq	16970 <sav_begin_data+0x8f8>
   169c8:	b	16418 <sav_begin_data+0x3a0>
   169cc:	mov	r1, r4
   169d0:	mov	r0, fp
   169d4:	bl	439c <readstat_get_variable@plt>
   169d8:	ldr	r3, [sp, #8]
   169dc:	rsb	r1, r4, r4, lsl #4
   169e0:	mov	r7, r0
   169e4:	mov	r0, r5
   169e8:	add	r1, r3, r1
   169ec:	bl	158d4 <sav_format_variable_name.constprop.5>
   169f0:	mov	r6, r0
   169f4:	add	r0, r7, #8
   169f8:	bl	421c <strlen@plt>
   169fc:	cmp	r0, #0
   16a00:	cmpne	r6, #0
   16a04:	beq	16a24 <sav_begin_data+0x9ac>
   16a08:	ldr	r3, [sp, #124]	; 0x7c
   16a0c:	add	r3, r3, #2
   16a10:	add	r3, r3, r6
   16a14:	cmp	r0, #64	; 0x40
   16a18:	addls	r3, r3, r0
   16a1c:	addhi	r3, r3, #64	; 0x40
   16a20:	str	r3, [sp, #124]	; 0x7c
   16a24:	add	r4, r4, #1
   16a28:	ldr	r3, [fp, #28]
   16a2c:	cmp	r4, r3
   16a30:	blt	169cc <sav_begin_data+0x954>
   16a34:	ldr	r3, [sp, #124]	; 0x7c
   16a38:	add	r6, sp, #112	; 0x70
   16a3c:	cmp	r3, #0
   16a40:	bgt	16b34 <sav_begin_data+0xabc>
   16a44:	ldr	r2, [pc, #1348]	; 16f90 <sav_begin_data+0xf18>
   16a48:	mov	r3, #2304	; 0x900
   16a4c:	mov	lr, r6
   16a50:	strh	r3, [sp, #36]	; 0x24
   16a54:	add	r2, pc, r2
   16a58:	add	r3, r2, #80	; 0x50
   16a5c:	add	r2, r2, #96	; 0x60
   16a60:	ldr	r0, [r3]
   16a64:	mov	ip, lr
   16a68:	add	r3, r3, #8
   16a6c:	ldr	r1, [r3, #-4]
   16a70:	cmp	r3, r2
   16a74:	stmia	ip!, {r0, r1}
   16a78:	mov	lr, ip
   16a7c:	bne	16a60 <sav_begin_data+0x9e8>
   16a80:	ldr	r8, [pc, #1292]	; 16f94 <sav_begin_data+0xf1c>
   16a84:	mov	r4, #0
   16a88:	add	r5, sp, #48	; 0x30
   16a8c:	ldr	r7, [pc, #1284]	; 16f98 <sav_begin_data+0xf20>
   16a90:	add	r8, pc, r8
   16a94:	ldr	r3, [fp, #28]
   16a98:	cmp	r4, r3
   16a9c:	blt	16c3c <sav_begin_data+0xbc4>
   16aa0:	ldr	r3, [sp, #124]	; 0x7c
   16aa4:	cmp	r3, #0
   16aa8:	bne	16cb4 <sav_begin_data+0xc3c>
   16aac:	ldr	r2, [pc, #1256]	; 16f9c <sav_begin_data+0xf24>
   16ab0:	mov	lr, r6
   16ab4:	add	r2, pc, r2
   16ab8:	add	r3, r2, #96	; 0x60
   16abc:	add	r2, r2, #112	; 0x70
   16ac0:	ldr	r0, [r3]
   16ac4:	mov	ip, lr
   16ac8:	add	r3, r3, #8
   16acc:	ldr	r1, [r3, #-4]
   16ad0:	cmp	r3, r2
   16ad4:	stmia	ip!, {r0, r1}
   16ad8:	mov	lr, ip
   16adc:	bne	16ac0 <sav_begin_data+0xa48>
   16ae0:	mov	r4, #0
   16ae4:	ldr	r3, [fp, #40]	; 0x28
   16ae8:	cmp	r4, r3
   16aec:	blt	16d7c <sav_begin_data+0xd04>
   16af0:	ldr	r3, [sp, #124]	; 0x7c
   16af4:	cmp	r3, #0
   16af8:	beq	17044 <sav_begin_data+0xfcc>
   16afc:	mov	r1, r6
   16b00:	mov	r2, #16
   16b04:	mov	r0, fp
   16b08:	bl	4474 <readstat_write_bytes@plt>
   16b0c:	subs	r4, r0, #0
   16b10:	moveq	r5, r4
   16b14:	moveq	r6, r4
   16b18:	bne	16418 <sav_begin_data+0x3a0>
   16b1c:	ldr	r3, [fp, #40]	; 0x28
   16b20:	cmp	r6, r3
   16b24:	blt	16e44 <sav_begin_data+0xdcc>
   16b28:	cmp	r5, #0
   16b2c:	beq	17044 <sav_begin_data+0xfcc>
   16b30:	b	17034 <sav_begin_data+0xfbc>
   16b34:	sub	r3, r3, #1
   16b38:	mov	r2, #16
   16b3c:	mov	r1, r6
   16b40:	mov	r0, fp
   16b44:	str	r3, [sp, #124]	; 0x7c
   16b48:	bl	4474 <readstat_write_bytes@plt>
   16b4c:	subs	r4, r0, #0
   16b50:	bne	16418 <sav_begin_data+0x3a0>
   16b54:	mov	r3, #1
   16b58:	mov	r5, r4
   16b5c:	add	r9, sp, #64	; 0x40
   16b60:	mov	sl, #61	; 0x3d
   16b64:	ldr	r2, [fp, #28]
   16b68:	cmp	r5, r2
   16b6c:	bge	16a44 <sav_begin_data+0x9cc>
   16b70:	mov	r1, r5
   16b74:	mov	r0, fp
   16b78:	str	r3, [sp, #12]
   16b7c:	bl	439c <readstat_get_variable@plt>
   16b80:	ldr	r3, [sp, #8]
   16b84:	rsb	r1, r5, r5, lsl #4
   16b88:	mov	r7, r0
   16b8c:	add	r7, r7, #8
   16b90:	mov	r0, r9
   16b94:	add	r1, r3, r1
   16b98:	bl	158d4 <sav_format_variable_name.constprop.5>
   16b9c:	mov	r0, r7
   16ba0:	bl	421c <strlen@plt>
   16ba4:	mov	r3, #9
   16ba8:	cmp	r0, #0
   16bac:	strb	sl, [sp, #36]	; 0x24
   16bb0:	strb	r3, [sp, #48]	; 0x30
   16bb4:	ldr	r3, [sp, #12]
   16bb8:	beq	16c18 <sav_begin_data+0xba0>
   16bbc:	cmp	r0, #64	; 0x40
   16bc0:	movcc	r8, r0
   16bc4:	movcs	r8, #64	; 0x40
   16bc8:	cmp	r3, #0
   16bcc:	beq	16c20 <sav_begin_data+0xba8>
   16bd0:	mov	r1, r9
   16bd4:	mov	r0, fp
   16bd8:	bl	4174 <readstat_write_string@plt>
   16bdc:	subs	r4, r0, #0
   16be0:	bne	16418 <sav_begin_data+0x3a0>
   16be4:	mov	r2, #1
   16be8:	add	r1, sp, #36	; 0x24
   16bec:	mov	r0, fp
   16bf0:	bl	4474 <readstat_write_bytes@plt>
   16bf4:	subs	r4, r0, #0
   16bf8:	bne	16418 <sav_begin_data+0x3a0>
   16bfc:	mov	r2, r8
   16c00:	mov	r1, r7
   16c04:	mov	r0, fp
   16c08:	bl	4474 <readstat_write_bytes@plt>
   16c0c:	subs	r4, r0, #0
   16c10:	bne	16418 <sav_begin_data+0x3a0>
   16c14:	mov	r3, r4
   16c18:	add	r5, r5, #1
   16c1c:	b	16b64 <sav_begin_data+0xaec>
   16c20:	mov	r2, #1
   16c24:	add	r1, sp, #48	; 0x30
   16c28:	mov	r0, fp
   16c2c:	bl	4474 <readstat_write_bytes@plt>
   16c30:	subs	r4, r0, #0
   16c34:	beq	16bd0 <sav_begin_data+0xb58>
   16c38:	b	16418 <sav_begin_data+0x3a0>
   16c3c:	mov	r1, r4
   16c40:	mov	r0, fp
   16c44:	bl	439c <readstat_get_variable@plt>
   16c48:	ldr	r3, [r0, #1600]	; 0x640
   16c4c:	mov	r9, r0
   16c50:	cmp	r3, #255	; 0xff
   16c54:	bls	16cac <sav_begin_data+0xc34>
   16c58:	ldr	r3, [sp, #8]
   16c5c:	rsb	r1, r4, r4, lsl #4
   16c60:	mov	r0, r5
   16c64:	add	r1, r3, r1
   16c68:	bl	158d4 <sav_format_variable_name.constprop.5>
   16c6c:	ldr	r2, [r9, #1600]	; 0x640
   16c70:	add	r9, sp, #64	; 0x40
   16c74:	mov	r1, #15
   16c78:	mov	r0, r9
   16c7c:	udiv	r3, r2, r7
   16c80:	mls	r3, r7, r3, r2
   16c84:	mov	r2, r8
   16c88:	str	r3, [sp]
   16c8c:	mov	r3, r5
   16c90:	bl	4294 <snprintf@plt>
   16c94:	mov	r0, r9
   16c98:	bl	421c <strlen@plt>
   16c9c:	ldr	r3, [sp, #124]	; 0x7c
   16ca0:	add	r3, r3, #2
   16ca4:	add	r0, r3, r0
   16ca8:	str	r0, [sp, #124]	; 0x7c
   16cac:	add	r4, r4, #1
   16cb0:	b	16a94 <sav_begin_data+0xa1c>
   16cb4:	mov	r2, #16
   16cb8:	mov	r1, r6
   16cbc:	mov	r0, fp
   16cc0:	bl	4474 <readstat_write_bytes@plt>
   16cc4:	subs	r4, r0, #0
   16cc8:	bne	16418 <sav_begin_data+0x3a0>
   16ccc:	ldr	r9, [pc, #716]	; 16fa0 <sav_begin_data+0xf28>
   16cd0:	mov	r5, r4
   16cd4:	add	r7, sp, #48	; 0x30
   16cd8:	ldr	r8, [pc, #696]	; 16f98 <sav_begin_data+0xf20>
   16cdc:	add	r9, pc, r9
   16ce0:	ldr	r3, [fp, #28]
   16ce4:	cmp	r5, r3
   16ce8:	bge	16aac <sav_begin_data+0xa34>
   16cec:	mov	r1, r5
   16cf0:	mov	r0, fp
   16cf4:	bl	439c <readstat_get_variable@plt>
   16cf8:	ldr	r3, [r0, #1600]	; 0x640
   16cfc:	mov	r4, r0
   16d00:	cmp	r3, #255	; 0xff
   16d04:	bhi	16d10 <sav_begin_data+0xc98>
   16d08:	add	r5, r5, #1
   16d0c:	b	16ce0 <sav_begin_data+0xc68>
   16d10:	ldr	r3, [sp, #8]
   16d14:	rsb	r1, r5, r5, lsl #4
   16d18:	mov	r0, r7
   16d1c:	add	r1, r3, r1
   16d20:	bl	158d4 <sav_format_variable_name.constprop.5>
   16d24:	ldr	r2, [r4, #1600]	; 0x640
   16d28:	add	r4, sp, #64	; 0x40
   16d2c:	mov	r1, #15
   16d30:	mov	r0, r4
   16d34:	udiv	r3, r2, r8
   16d38:	mls	r3, r8, r3, r2
   16d3c:	mov	r2, r9
   16d40:	str	r3, [sp]
   16d44:	mov	r3, r7
   16d48:	bl	4294 <snprintf@plt>
   16d4c:	mov	r1, r4
   16d50:	mov	r0, fp
   16d54:	bl	4174 <readstat_write_string@plt>
   16d58:	subs	r4, r0, #0
   16d5c:	bne	16418 <sav_begin_data+0x3a0>
   16d60:	mov	r2, #2
   16d64:	add	r1, sp, #36	; 0x24
   16d68:	mov	r0, fp
   16d6c:	bl	4474 <readstat_write_bytes@plt>
   16d70:	subs	r4, r0, #0
   16d74:	beq	16d08 <sav_begin_data+0xc90>
   16d78:	b	16418 <sav_begin_data+0x3a0>
   16d7c:	mov	r1, r4
   16d80:	mov	r0, fp
   16d84:	bl	4444 <readstat_get_label_set@plt>
   16d88:	mov	r7, r0
   16d8c:	bl	15570 <readstat_label_set_number_short_variables>
   16d90:	ldr	r8, [r7, #276]	; 0x114
   16d94:	cmp	r0, r8
   16d98:	blt	16da4 <sav_begin_data+0xd2c>
   16d9c:	add	r4, r4, #1
   16da0:	b	16ae4 <sav_begin_data+0xa6c>
   16da4:	ldr	r3, [r7, #264]	; 0x108
   16da8:	mov	r5, #0
   16dac:	str	r3, [sp, #12]
   16db0:	cmp	r5, r8
   16db4:	bge	16d9c <sav_begin_data+0xd24>
   16db8:	mov	r1, r5
   16dbc:	mov	r0, r7
   16dc0:	bl	4468 <readstat_get_label_set_variable@plt>
   16dc4:	mov	r9, r0
   16dc8:	add	r0, r0, #8
   16dcc:	bl	421c <strlen@plt>
   16dd0:	mov	sl, r0
   16dd4:	mov	r0, r9
   16dd8:	bl	42e8 <readstat_variable_get_storage_width@plt>
   16ddc:	cmp	r0, #8
   16de0:	mov	r9, r0
   16de4:	bgt	16df0 <sav_begin_data+0xd78>
   16de8:	add	r5, r5, #1
   16dec:	b	16db0 <sav_begin_data+0xd38>
   16df0:	ldr	r3, [sp, #124]	; 0x7c
   16df4:	add	sl, sl, r3
   16df8:	add	sl, sl, #12
   16dfc:	str	sl, [sp, #124]	; 0x7c
   16e00:	mov	sl, #0
   16e04:	ldr	r3, [sp, #12]
   16e08:	cmp	r3, sl
   16e0c:	ble	16de8 <sav_begin_data+0xd70>
   16e10:	mov	r1, sl
   16e14:	mov	r0, r7
   16e18:	bl	44ec <readstat_get_value_label@plt>
   16e1c:	ldr	r3, [sp, #124]	; 0x7c
   16e20:	add	sl, sl, #1
   16e24:	ldr	r2, [r0, #28]
   16e28:	add	r3, r9, r3
   16e2c:	add	r3, r3, #8
   16e30:	cmp	r2, #120	; 0x78
   16e34:	addle	r3, r3, r2
   16e38:	addgt	r3, r3, #120	; 0x78
   16e3c:	str	r3, [sp, #124]	; 0x7c
   16e40:	b	16e04 <sav_begin_data+0xd8c>
   16e44:	mov	r1, r6
   16e48:	mov	r0, fp
   16e4c:	bl	4444 <readstat_get_label_set@plt>
   16e50:	mov	r8, r0
   16e54:	bl	15570 <readstat_label_set_number_short_variables>
   16e58:	ldr	r3, [r8, #276]	; 0x114
   16e5c:	cmp	r0, r3
   16e60:	str	r3, [sp, #12]
   16e64:	ldrlt	r3, [r8, #264]	; 0x108
   16e68:	movlt	r7, #0
   16e6c:	strlt	r3, [sp, #32]
   16e70:	blt	16f48 <sav_begin_data+0xed0>
   16e74:	add	r6, r6, #1
   16e78:	b	16b1c <sav_begin_data+0xaa4>
   16e7c:	mov	r1, r7
   16e80:	mov	r0, r8
   16e84:	bl	4468 <readstat_get_label_set_variable@plt>
   16e88:	add	r9, r0, #8
   16e8c:	mov	sl, r0
   16e90:	mov	r0, r9
   16e94:	bl	421c <strlen@plt>
   16e98:	str	r0, [sp, #36]	; 0x24
   16e9c:	mov	r0, sl
   16ea0:	bl	42e8 <readstat_variable_get_storage_width@plt>
   16ea4:	cmp	r0, #8
   16ea8:	mov	r1, r0
   16eac:	str	r0, [sp, #48]	; 0x30
   16eb0:	ble	16f44 <sav_begin_data+0xecc>
   16eb4:	mov	r0, r5
   16eb8:	bl	400c <realloc@plt>
   16ebc:	mov	r1, #32
   16ec0:	ldr	r2, [sp, #48]	; 0x30
   16ec4:	mov	r5, r0
   16ec8:	bl	42b8 <memset@plt>
   16ecc:	mov	r2, #4
   16ed0:	add	r1, sp, #36	; 0x24
   16ed4:	mov	r0, fp
   16ed8:	bl	4474 <readstat_write_bytes@plt>
   16edc:	cmp	r0, #0
   16ee0:	bne	17030 <sav_begin_data+0xfb8>
   16ee4:	mov	r1, r9
   16ee8:	mov	r0, fp
   16eec:	ldr	r2, [sp, #36]	; 0x24
   16ef0:	bl	4474 <readstat_write_bytes@plt>
   16ef4:	cmp	r0, #0
   16ef8:	bne	17030 <sav_begin_data+0xfb8>
   16efc:	add	sl, sp, #48	; 0x30
   16f00:	mov	r2, #4
   16f04:	mov	r1, sl
   16f08:	mov	r0, fp
   16f0c:	bl	4474 <readstat_write_bytes@plt>
   16f10:	cmp	r0, #0
   16f14:	bne	17030 <sav_begin_data+0xfb8>
   16f18:	mov	r2, #4
   16f1c:	add	r1, sp, #32
   16f20:	mov	r0, fp
   16f24:	bl	4474 <readstat_write_bytes@plt>
   16f28:	cmp	r0, #0
   16f2c:	bne	17030 <sav_begin_data+0xfb8>
   16f30:	mov	r9, r0
   16f34:	str	sl, [sp, #16]
   16f38:	ldr	r3, [sp, #32]
   16f3c:	cmp	r9, r3
   16f40:	blt	16fac <sav_begin_data+0xf34>
   16f44:	add	r7, r7, #1
   16f48:	ldr	r3, [sp, #12]
   16f4c:	cmp	r7, r3
   16f50:	blt	16e7c <sav_begin_data+0xe04>
   16f54:	b	16e74 <sav_begin_data+0xdfc>
   16f58:	.word	0x0000bf3f
   16f5c:	.word	0x0000bf39
   16f60:	.word	0x0000bf1a
   16f64:	.word	0x0000bdf9
   16f68:	.word	0x324c4624
   16f6c:	.word	0x0000be52
   16f70:	.word	0x40590000
   16f74:	.word	0x0000bcfa
   16f78:	.word	0x0000ac0c
   16f7c:	.word	0x0000ba49
   16f80:	.word	0x0000b9a9
   16f84:	.word	0x7fefffff
   16f88:	.word	0x0000b8c5
   16f8c:	.word	0x20202020
   16f90:	.word	0x0000b4d1
   16f94:	.word	0x0000b5ba
   16f98:	.word	0x000186a0
   16f9c:	.word	0x0000b471
   16fa0:	.word	0x0000b36e
   16fa4:	.word	0x0000aed5
   16fa8:	.word	0x0000ae75
   16fac:	mov	r1, r9
   16fb0:	mov	r0, r8
   16fb4:	bl	44ec <readstat_get_value_label@plt>
   16fb8:	mov	sl, r0
   16fbc:	mov	r0, fp
   16fc0:	ldr	r1, [sp, #16]
   16fc4:	ldr	r3, [sl, #20]
   16fc8:	ldr	r2, [sl, #28]
   16fcc:	str	r3, [sp, #20]
   16fd0:	cmp	r2, #120	; 0x78
   16fd4:	movgt	r2, #120	; 0x78
   16fd8:	str	r2, [sp, #64]	; 0x40
   16fdc:	mov	r2, #4
   16fe0:	bl	4474 <readstat_write_bytes@plt>
   16fe4:	cmp	r0, #0
   16fe8:	bne	17030 <sav_begin_data+0xfb8>
   16fec:	ldr	r3, [sp, #20]
   16ff0:	mov	r0, fp
   16ff4:	ldr	r1, [sl, #16]
   16ff8:	mov	r2, r3
   16ffc:	bl	4474 <readstat_write_bytes@plt>
   17000:	cmp	r0, #0
   17004:	bne	17030 <sav_begin_data+0xfb8>
   17008:	ldr	r3, [sp, #20]
   1700c:	ldr	r2, [sp, #48]	; 0x30
   17010:	cmp	r3, r2
   17014:	blt	17160 <sav_begin_data+0x10e8>
   17018:	mov	r2, #4
   1701c:	add	r1, sp, #64	; 0x40
   17020:	mov	r0, fp
   17024:	bl	4474 <readstat_write_bytes@plt>
   17028:	cmp	r0, #0
   1702c:	beq	1717c <sav_begin_data+0x1104>
   17030:	mov	r4, r0
   17034:	mov	r0, r5
   17038:	bl	3ed4 <free@plt>
   1703c:	cmp	r4, #0
   17040:	bne	16418 <sav_begin_data+0x3a0>
   17044:	ldr	r2, [pc, #-168]	; 16fa4 <sav_begin_data+0xf2c>
   17048:	add	ip, sp, #112	; 0x70
   1704c:	str	ip, [sp, #12]
   17050:	add	r2, pc, r2
   17054:	add	r3, r2, #112	; 0x70
   17058:	add	r2, r2, #128	; 0x80
   1705c:	ldr	r0, [r3]
   17060:	mov	lr, ip
   17064:	add	r3, r3, #8
   17068:	ldr	r1, [r3, #-4]
   1706c:	cmp	r3, r2
   17070:	stmia	lr!, {r0, r1}
   17074:	mov	ip, lr
   17078:	bne	1705c <sav_begin_data+0xfe4>
   1707c:	ldr	r3, [fp, #28]
   17080:	mov	r9, #0
   17084:	add	r4, sp, #48	; 0x30
   17088:	add	r5, sp, #64	; 0x40
   1708c:	str	r3, [sp, #16]
   17090:	ldr	r3, [sp, #16]
   17094:	cmp	r3, r9
   17098:	bgt	1719c <sav_begin_data+0x1124>
   1709c:	ldr	r3, [sp, #124]	; 0x7c
   170a0:	cmp	r3, #0
   170a4:	bne	17264 <sav_begin_data+0x11ec>
   170a8:	ldr	r2, [pc, #-264]	; 16fa8 <sav_begin_data+0xf30>
   170ac:	ldr	lr, [sp, #12]
   170b0:	add	r2, pc, r2
   170b4:	add	r3, r2, #128	; 0x80
   170b8:	add	r2, r2, #144	; 0x90
   170bc:	ldr	r0, [r3]
   170c0:	mov	ip, lr
   170c4:	add	r3, r3, #8
   170c8:	ldr	r1, [r3, #-4]
   170cc:	cmp	r3, r2
   170d0:	stmia	ip!, {r0, r1}
   170d4:	mov	lr, ip
   170d8:	bne	170bc <sav_begin_data+0x1044>
   170dc:	mov	r2, #1
   170e0:	mov	r3, #0
   170e4:	ldr	r1, [sp, #12]
   170e8:	mov	r0, fp
   170ec:	strd	r2, [sp, #48]	; 0x30
   170f0:	ldr	r2, [fp, #80]	; 0x50
   170f4:	asr	r3, r2, #31
   170f8:	strd	r2, [sp, #64]	; 0x40
   170fc:	mov	r2, #16
   17100:	bl	4474 <readstat_write_bytes@plt>
   17104:	subs	r4, r0, #0
   17108:	bne	16418 <sav_begin_data+0x3a0>
   1710c:	mov	r2, #8
   17110:	add	r1, sp, #48	; 0x30
   17114:	mov	r0, fp
   17118:	bl	4474 <readstat_write_bytes@plt>
   1711c:	subs	r4, r0, #0
   17120:	bne	16418 <sav_begin_data+0x3a0>
   17124:	mov	r2, #8
   17128:	add	r1, sp, #64	; 0x40
   1712c:	mov	r0, fp
   17130:	bl	4474 <readstat_write_bytes@plt>
   17134:	subs	r4, r0, #0
   17138:	bne	16418 <sav_begin_data+0x3a0>
   1713c:	movw	r3, #999	; 0x3e7
   17140:	mov	r2, #8
   17144:	ldr	r1, [sp, #12]
   17148:	mov	r0, fp
   1714c:	str	r3, [sp, #112]	; 0x70
   17150:	str	r4, [sp, #116]	; 0x74
   17154:	bl	4474 <readstat_write_bytes@plt>
   17158:	mov	r4, r0
   1715c:	b	16418 <sav_begin_data+0x3a0>
   17160:	sub	r2, r2, r3
   17164:	mov	r1, r5
   17168:	mov	r0, fp
   1716c:	bl	4474 <readstat_write_bytes@plt>
   17170:	cmp	r0, #0
   17174:	beq	17018 <sav_begin_data+0xfa0>
   17178:	b	17030 <sav_begin_data+0xfb8>
   1717c:	mov	r0, fp
   17180:	ldr	r1, [sl, #24]
   17184:	ldr	r2, [sp, #64]	; 0x40
   17188:	bl	4474 <readstat_write_bytes@plt>
   1718c:	cmp	r0, #0
   17190:	bne	17030 <sav_begin_data+0xfb8>
   17194:	add	r9, r9, #1
   17198:	b	16f38 <sav_begin_data+0xec0>
   1719c:	mov	r1, r9
   171a0:	mov	r0, fp
   171a4:	bl	439c <readstat_get_variable@plt>
   171a8:	mov	r8, r0
   171ac:	add	r0, r0, #8
   171b0:	bl	421c <strlen@plt>
   171b4:	str	r0, [sp, #20]
   171b8:	mov	r0, r8
   171bc:	bl	42e8 <readstat_variable_get_storage_width@plt>
   171c0:	cmp	r0, #8
   171c4:	ble	1725c <sav_begin_data+0x11e4>
   171c8:	mov	r6, #0
   171cc:	mov	r7, r6
   171d0:	b	1722c <sav_begin_data+0x11b4>
   171d4:	mov	r2, r7
   171d8:	mov	r1, r8
   171dc:	mov	r0, r4
   171e0:	bl	3f58 <readstat_variable_get_missing_range_lo@plt>
   171e4:	mov	r2, r7
   171e8:	mov	r1, r8
   171ec:	mov	r0, r5
   171f0:	bl	4348 <readstat_variable_get_missing_range_hi@plt>
   171f4:	ldm	r4, {r0, r1, r2, r3}
   171f8:	bl	3fc4 <readstat_string_value@plt>
   171fc:	mov	sl, r0
   17200:	ldm	r5, {r0, r1, r2, r3}
   17204:	bl	3fc4 <readstat_string_value@plt>
   17208:	cmp	sl, #0
   1720c:	cmpne	r0, #0
   17210:	mov	r1, r0
   17214:	beq	17228 <sav_begin_data+0x11b0>
   17218:	mov	r0, sl
   1721c:	bl	3e14 <strcmp@plt>
   17220:	cmp	r0, #0
   17224:	addeq	r6, r6, #1
   17228:	add	r7, r7, #1
   1722c:	mov	r0, r8
   17230:	bl	4324 <readstat_variable_get_missing_ranges_count@plt>
   17234:	cmp	r7, r0
   17238:	blt	171d4 <sav_begin_data+0x115c>
   1723c:	cmp	r6, #0
   17240:	beq	1725c <sav_begin_data+0x11e4>
   17244:	ldr	r2, [sp, #20]
   17248:	ldr	r3, [sp, #124]	; 0x7c
   1724c:	add	r3, r2, r3
   17250:	add	r3, r3, #9
   17254:	add	r6, r3, r6, lsl #3
   17258:	str	r6, [sp, #124]	; 0x7c
   1725c:	add	r9, r9, #1
   17260:	b	17090 <sav_begin_data+0x1018>
   17264:	mov	r2, #16
   17268:	mov	r0, fp
   1726c:	ldr	r1, [sp, #12]
   17270:	bl	4474 <readstat_write_bytes@plt>
   17274:	subs	r4, r0, #0
   17278:	addeq	r3, sp, #31
   1727c:	moveq	r6, r4
   17280:	streq	r3, [sp, #20]
   17284:	bne	16418 <sav_begin_data+0x3a0>
   17288:	ldr	r3, [sp, #16]
   1728c:	cmp	r3, r6
   17290:	ble	170a8 <sav_begin_data+0x1030>
   17294:	mov	r1, r6
   17298:	mov	r0, fp
   1729c:	bl	439c <readstat_get_variable@plt>
   172a0:	add	r9, r0, #8
   172a4:	mov	r5, r0
   172a8:	mov	r0, r9
   172ac:	bl	421c <strlen@plt>
   172b0:	mov	r3, #0
   172b4:	str	r0, [sp, #32]
   172b8:	mov	r0, r5
   172bc:	strb	r3, [sp, #31]
   172c0:	bl	42e8 <readstat_variable_get_storage_width@plt>
   172c4:	cmp	r0, #8
   172c8:	movgt	r4, #0
   172cc:	addgt	r7, sp, #48	; 0x30
   172d0:	addgt	r8, sp, #64	; 0x40
   172d4:	bgt	17340 <sav_begin_data+0x12c8>
   172d8:	add	r6, r6, #1
   172dc:	b	17288 <sav_begin_data+0x1210>
   172e0:	mov	r2, r4
   172e4:	mov	r1, r5
   172e8:	mov	r0, r7
   172ec:	bl	3f58 <readstat_variable_get_missing_range_lo@plt>
   172f0:	mov	r2, r4
   172f4:	mov	r1, r5
   172f8:	mov	r0, r8
   172fc:	bl	4348 <readstat_variable_get_missing_range_hi@plt>
   17300:	ldm	r7, {r0, r1, r2, r3}
   17304:	bl	3fc4 <readstat_string_value@plt>
   17308:	mov	sl, r0
   1730c:	ldm	r8, {r0, r1, r2, r3}
   17310:	bl	3fc4 <readstat_string_value@plt>
   17314:	cmp	sl, #0
   17318:	cmpne	r0, #0
   1731c:	mov	r1, r0
   17320:	beq	1733c <sav_begin_data+0x12c4>
   17324:	mov	r0, sl
   17328:	bl	3e14 <strcmp@plt>
   1732c:	cmp	r0, #0
   17330:	ldrbeq	r3, [sp, #31]
   17334:	addeq	r3, r3, #1
   17338:	strbeq	r3, [sp, #31]
   1733c:	add	r4, r4, #1
   17340:	mov	r0, r5
   17344:	bl	4324 <readstat_variable_get_missing_ranges_count@plt>
   17348:	cmp	r4, r0
   1734c:	blt	172e0 <sav_begin_data+0x1268>
   17350:	ldr	r3, [sp, #20]
   17354:	ldrsb	r3, [r3]
   17358:	cmp	r3, #0
   1735c:	beq	172d8 <sav_begin_data+0x1260>
   17360:	mov	r2, #4
   17364:	add	r1, sp, #32
   17368:	mov	r0, fp
   1736c:	bl	4474 <readstat_write_bytes@plt>
   17370:	subs	r4, r0, #0
   17374:	bne	16418 <sav_begin_data+0x3a0>
   17378:	mov	r1, r9
   1737c:	mov	r0, fp
   17380:	ldr	r2, [sp, #32]
   17384:	bl	4474 <readstat_write_bytes@plt>
   17388:	subs	r4, r0, #0
   1738c:	bne	16418 <sav_begin_data+0x3a0>
   17390:	mov	r2, #1
   17394:	mov	r0, fp
   17398:	ldr	r1, [sp, #20]
   1739c:	bl	4474 <readstat_write_bytes@plt>
   173a0:	subs	r4, r0, #0
   173a4:	bne	16418 <sav_begin_data+0x3a0>
   173a8:	mov	r3, #8
   173ac:	mov	r2, #4
   173b0:	add	r1, sp, #36	; 0x24
   173b4:	mov	r0, fp
   173b8:	str	r3, [sp, #36]	; 0x24
   173bc:	bl	4474 <readstat_write_bytes@plt>
   173c0:	subs	r4, r0, #0
   173c4:	bne	16418 <sav_begin_data+0x3a0>
   173c8:	mov	r7, r4
   173cc:	add	r8, sp, #48	; 0x30
   173d0:	add	r9, sp, #64	; 0x40
   173d4:	mov	r0, r5
   173d8:	bl	4324 <readstat_variable_get_missing_ranges_count@plt>
   173dc:	cmp	r7, r0
   173e0:	bge	172d8 <sav_begin_data+0x1260>
   173e4:	mov	r2, r7
   173e8:	mov	r1, r5
   173ec:	mov	r0, r8
   173f0:	bl	3f58 <readstat_variable_get_missing_range_lo@plt>
   173f4:	mov	r2, r7
   173f8:	mov	r1, r5
   173fc:	mov	r0, r9
   17400:	bl	4348 <readstat_variable_get_missing_range_hi@plt>
   17404:	ldm	r8, {r0, r1, r2, r3}
   17408:	bl	3fc4 <readstat_string_value@plt>
   1740c:	mov	r4, r0
   17410:	ldm	r9, {r0, r1, r2, r3}
   17414:	bl	3fc4 <readstat_string_value@plt>
   17418:	cmp	r4, #0
   1741c:	cmpne	r0, #0
   17420:	mov	r1, r0
   17424:	beq	17450 <sav_begin_data+0x13d8>
   17428:	mov	r0, r4
   1742c:	bl	3e14 <strcmp@plt>
   17430:	cmp	r0, #0
   17434:	bne	17450 <sav_begin_data+0x13d8>
   17438:	mov	r1, r4
   1743c:	mov	r0, fp
   17440:	ldr	r2, [sp, #36]	; 0x24
   17444:	bl	4570 <readstat_write_space_padded_string@plt>
   17448:	subs	r4, r0, #0
   1744c:	bne	16418 <sav_begin_data+0x3a0>
   17450:	add	r7, r7, #1
   17454:	b	173d4 <sav_begin_data+0x135c>
   17458:	cmp	r3, #2
   1745c:	bne	16444 <sav_begin_data+0x3cc>
   17460:	mov	r3, r4
   17464:	ldr	r2, [fp, #4]
   17468:	bl	40cc <zsav_ctx_init@plt>
   1746c:	b	16440 <sav_begin_data+0x3c8>
   17470:	mov	r4, #32
   17474:	b	16418 <sav_begin_data+0x3a0>

00017478 <readstat_begin_writing_sav>:
   17478:	ldr	ip, [pc, #288]	; 175a0 <readstat_begin_writing_sav+0x128>
   1747c:	ldr	r3, [pc, #288]	; 175a4 <readstat_begin_writing_sav+0x12c>
   17480:	add	ip, pc, ip
   17484:	str	ip, [r0, #292]	; 0x124
   17488:	add	r3, pc, r3
   1748c:	ldr	ip, [pc, #276]	; 175a8 <readstat_begin_writing_sav+0x130>
   17490:	add	ip, pc, ip
   17494:	str	ip, [r0, #228]	; 0xe4
   17498:	ldr	ip, [pc, #268]	; 175ac <readstat_begin_writing_sav+0x134>
   1749c:	add	ip, pc, ip
   174a0:	str	ip, [r0, #232]	; 0xe8
   174a4:	ldr	ip, [pc, #260]	; 175b0 <readstat_begin_writing_sav+0x138>
   174a8:	add	ip, pc, ip
   174ac:	str	ip, [r0, #236]	; 0xec
   174b0:	ldr	ip, [pc, #252]	; 175b4 <readstat_begin_writing_sav+0x13c>
   174b4:	add	ip, pc, ip
   174b8:	str	ip, [r0, #240]	; 0xf0
   174bc:	ldr	ip, [pc, #244]	; 175b8 <readstat_begin_writing_sav+0x140>
   174c0:	add	ip, pc, ip
   174c4:	str	ip, [r0, #244]	; 0xf4
   174c8:	ldr	ip, [pc, #236]	; 175bc <readstat_begin_writing_sav+0x144>
   174cc:	add	ip, pc, ip
   174d0:	str	ip, [r0, #248]	; 0xf8
   174d4:	ldr	ip, [pc, #228]	; 175c0 <readstat_begin_writing_sav+0x148>
   174d8:	add	ip, pc, ip
   174dc:	str	ip, [r0, #252]	; 0xfc
   174e0:	ldr	ip, [pc, #220]	; 175c4 <readstat_begin_writing_sav+0x14c>
   174e4:	add	ip, pc, ip
   174e8:	str	ip, [r0, #256]	; 0x100
   174ec:	ldr	ip, [pc, #212]	; 175c8 <readstat_begin_writing_sav+0x150>
   174f0:	add	ip, pc, ip
   174f4:	str	ip, [r0, #264]	; 0x108
   174f8:	ldr	ip, [pc, #204]	; 175cc <readstat_begin_writing_sav+0x154>
   174fc:	add	ip, pc, ip
   17500:	str	ip, [r0, #268]	; 0x10c
   17504:	ldr	ip, [pc, #196]	; 175d0 <readstat_begin_writing_sav+0x158>
   17508:	add	ip, pc, ip
   1750c:	str	ip, [r0, #276]	; 0x114
   17510:	ldr	ip, [r0, #8]
   17514:	cmp	ip, #3
   17518:	moveq	ip, #2
   1751c:	streq	ip, [r0, #16]
   17520:	beq	17540 <readstat_begin_writing_sav+0xc8>
   17524:	cmp	ip, #0
   17528:	bne	17540 <readstat_begin_writing_sav+0xc8>
   1752c:	ldr	ip, [r0, #16]
   17530:	cmp	ip, #2
   17534:	moveq	ip, #3
   17538:	movne	ip, #2
   1753c:	str	ip, [r0, #8]
   17540:	ldr	ip, [r0, #16]
   17544:	cmp	ip, #1
   17548:	bne	17568 <readstat_begin_writing_sav+0xf0>
   1754c:	ldr	ip, [pc, #128]	; 175d4 <readstat_begin_writing_sav+0x15c>
   17550:	add	ip, pc, ip
   17554:	str	ip, [r0, #280]	; 0x118
   17558:	ldr	ip, [pc, #120]	; 175d8 <readstat_begin_writing_sav+0x160>
   1755c:	ldr	r3, [r3, ip]
   17560:	str	r3, [r0, #288]	; 0x120
   17564:	b	3f7c <readstat_begin_writing_file@plt>
   17568:	cmp	ip, #2
   1756c:	bne	17590 <readstat_begin_writing_sav+0x118>
   17570:	ldr	ip, [pc, #100]	; 175dc <readstat_begin_writing_sav+0x164>
   17574:	ldr	ip, [r3, ip]
   17578:	str	ip, [r0, #280]	; 0x118
   1757c:	ldr	ip, [pc, #92]	; 175e0 <readstat_begin_writing_sav+0x168>
   17580:	ldr	ip, [r3, ip]
   17584:	str	ip, [r0, #284]	; 0x11c
   17588:	ldr	ip, [pc, #84]	; 175e4 <readstat_begin_writing_sav+0x16c>
   1758c:	b	1755c <readstat_begin_writing_sav+0xe4>
   17590:	cmp	ip, #0
   17594:	beq	17564 <readstat_begin_writing_sav+0xec>
   17598:	mov	r0, #6
   1759c:	bx	lr
   175a0:	.word	0xffffdecc
   175a4:	.word	0x00028b70
   175a8:	.word	0xffffe11c
   175ac:	.word	0xffffe1f0
   175b0:	.word	0xffffe090
   175b4:	.word	0xffffe054
   175b8:	.word	0xffffe018
   175bc:	.word	0xffffdfe0
   175c0:	.word	0xffffdfac
   175c4:	.word	0xffffe124
   175c8:	.word	0xffffdf4c
   175cc:	.word	0xffffdf58
   175d0:	.word	0xffffeb68
   175d4:	.word	0xffffde2c
   175d8:	.word	0x000002d8
   175dc:	.word	0x000002e4
   175e0:	.word	0x000002ec
   175e4:	.word	0x000002d4

000175e8 <spss_boxed_missing_value>:
   175e8:	push	{r0, r1, r2, r3, r4, lr}
   175ec:	mov	ip, r0
   175f0:	mov	r3, sp
   175f4:	ldr	r0, [r1]
   175f8:	cmp	r0, #5
   175fc:	bne	1763c <spss_boxed_missing_value+0x54>
   17600:	add	r1, r1, r2, lsl #3
   17604:	mov	r2, #0
   17608:	str	r0, [sp, #8]
   1760c:	str	r2, [sp, #12]
   17610:	vldr	d7, [r1, #64]	; 0x40
   17614:	vcmp.f64	d7, d7
   17618:	vstr	d7, [sp]
   1761c:	vmrs	APSR_nzcv, fpscr
   17620:	movvs	r2, #1
   17624:	strb	r2, [sp, #13]
   17628:	ldm	r3, {r0, r1, r2, r3}
   1762c:	stm	ip, {r0, r1, r2, r3}
   17630:	mov	r0, ip
   17634:	add	sp, sp, #20
   17638:	pop	{pc}		; (ldr pc, [sp], #4)
   1763c:	add	r2, r2, r2, lsl #5
   17640:	mov	lr, #0
   17644:	add	r2, r2, #88	; 0x58
   17648:	str	lr, [sp, #8]
   1764c:	add	r1, r1, r2
   17650:	stm	sp, {r1, lr}
   17654:	str	lr, [sp, #12]
   17658:	b	17628 <spss_boxed_missing_value+0x40>

0001765c <spss_format>:
   1765c:	push	{r0, r1, r2, lr}
   17660:	ldr	lr, [r2]
   17664:	cmp	lr, #41	; 0x29
   17668:	movhi	r0, #0
   1766c:	bhi	176c0 <spss_format+0x64>
   17670:	ldr	r3, [pc, #124]	; 176f4 <spss_format+0x98>
   17674:	add	r3, pc, r3
   17678:	ldrb	ip, [r3, lr, lsl #4]
   1767c:	cmp	ip, #0
   17680:	moveq	r0, ip
   17684:	beq	176c0 <spss_format+0x64>
   17688:	ldmib	r2, {r2, ip}
   1768c:	add	r3, r3, lr, lsl #4
   17690:	sub	lr, lr, #5
   17694:	clz	lr, lr
   17698:	lsr	lr, lr, #5
   1769c:	cmp	ip, #0
   176a0:	movne	lr, #1
   176a4:	cmp	lr, #0
   176a8:	beq	176c8 <spss_format+0x6c>
   176ac:	stm	sp, {r2, ip}
   176b0:	ldr	r2, [pc, #64]	; 176f8 <spss_format+0x9c>
   176b4:	add	r2, pc, r2
   176b8:	bl	4294 <snprintf@plt>
   176bc:	mov	r0, #1
   176c0:	add	sp, sp, #12
   176c4:	pop	{pc}		; (ldr pc, [sp], #4)
   176c8:	cmp	r2, #0
   176cc:	beq	176e4 <spss_format+0x88>
   176d0:	str	r2, [sp]
   176d4:	ldr	r2, [pc, #32]	; 176fc <spss_format+0xa0>
   176d8:	add	r2, pc, r2
   176dc:	bl	4294 <snprintf@plt>
   176e0:	b	176bc <spss_format+0x60>
   176e4:	ldr	r2, [pc, #20]	; 17700 <spss_format+0xa4>
   176e8:	add	r2, pc, r2
   176ec:	bl	4294 <snprintf@plt>
   176f0:	b	176bc <spss_format+0x60>
   176f4:	.word	0x0002a408
   176f8:	.word	0x000098c5
   176fc:	.word	0x000098a9
   17700:	.word	0x0000a45e

00017704 <spss_varinfo_compare>:
   17704:	ldr	r2, [r1]
   17708:	ldr	r3, [r0]
   1770c:	ldr	r2, [r2, #12]
   17710:	cmp	r2, r3
   17714:	bgt	17724 <spss_varinfo_compare+0x20>
   17718:	movlt	r0, #1
   1771c:	movge	r0, #0
   17720:	bx	lr
   17724:	mvn	r0, #0
   17728:	bx	lr

0001772c <spss_varinfo_free>:
   1772c:	push	{r4, lr}
   17730:	subs	r4, r0, #0
   17734:	popeq	{r4, pc}
   17738:	ldr	r0, [r4, #264]	; 0x108
   1773c:	cmp	r0, #0
   17740:	beq	17748 <spss_varinfo_free+0x1c>
   17744:	bl	3ed4 <free@plt>
   17748:	mov	r0, r4
   1774c:	pop	{r4, lr}
   17750:	b	3ed4 <free@plt>

00017754 <spss_64bit_value>:
   17754:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   17758:	add	ip, sp, #8
   1775c:	stm	ip, {r0, r1, r2, r3}
   17760:	ldm	ip, {r0, r1, r2, r3}
   17764:	bl	41d4 <readstat_double_value@plt>
   17768:	vldr	d7, [pc, #80]	; 177c0 <spss_64bit_value+0x6c>
   1776c:	vabs.f64	d6, d0
   17770:	vstr	d0, [sp]
   17774:	vcmp.f64	d6, d7
   17778:	vmrs	APSR_nzcv, fpscr
   1777c:	ble	177a4 <spss_64bit_value+0x50>
   17780:	vcmpe.f64	d0, #0.0
   17784:	vmrs	APSR_nzcv, fpscr
   17788:	mvnpl	r0, #0
   1778c:	ldrpl	r1, [pc, #52]	; 177c8 <spss_64bit_value+0x74>
   17790:	bpl	1779c <spss_64bit_value+0x48>
   17794:	mvn	r0, #1
   17798:	mvn	r1, #1048576	; 0x100000
   1779c:	add	sp, sp, #28
   177a0:	pop	{pc}		; (ldr pc, [sp], #4)
   177a4:	vldr	d7, [sp]
   177a8:	vcmp.f64	d7, d7
   177ac:	vmrs	APSR_nzcv, fpscr
   177b0:	ldrdvc	r0, [sp]
   177b4:	bvc	1779c <spss_64bit_value+0x48>
   177b8:	mvn	r0, #0
   177bc:	b	17798 <spss_64bit_value+0x44>
   177c0:	.word	0xffffffff
   177c4:	.word	0x7fefffff
   177c8:	.word	0x7fefffff

000177cc <spss_missingness_for_info>:
   177cc:	push	{r4, r5, r6, r7, r8, lr}
   177d0:	sub	sp, sp, #520	; 0x208
   177d4:	mov	r4, r1
   177d8:	mov	r7, sp
   177dc:	mov	r8, r0
   177e0:	mov	r2, #520	; 0x208
   177e4:	mov	r1, #0
   177e8:	mov	r0, r7
   177ec:	bl	42b8 <memset@plt>
   177f0:	ldr	r6, [r4, #56]	; 0x38
   177f4:	cmp	r6, #0
   177f8:	beq	17870 <spss_missingness_for_info+0xa4>
   177fc:	mov	r5, #1
   17800:	mov	r2, #0
   17804:	mov	r1, r4
   17808:	mov	r0, r7
   1780c:	str	r5, [sp, #512]	; 0x200
   17810:	bl	175e8 <spss_boxed_missing_value>
   17814:	mov	r2, r5
   17818:	mov	r1, r4
   1781c:	add	r0, sp, #16
   17820:	bl	175e8 <spss_boxed_missing_value>
   17824:	ldr	r3, [r4, #52]	; 0x34
   17828:	cmp	r3, #3
   1782c:	bne	17854 <spss_missingness_for_info+0x88>
   17830:	mov	r2, #2
   17834:	mov	r1, r4
   17838:	add	r4, sp, #48	; 0x30
   1783c:	mov	r0, r4
   17840:	str	r2, [sp, #512]	; 0x200
   17844:	bl	175e8 <spss_boxed_missing_value>
   17848:	ldm	r4, {r0, r1, r2, r3}
   1784c:	add	ip, sp, #32
   17850:	stm	ip, {r0, r1, r2, r3}
   17854:	mov	r2, #520	; 0x208
   17858:	mov	r1, r7
   1785c:	mov	r0, r8
   17860:	bl	3f34 <memcpy@plt>
   17864:	mov	r0, r8
   17868:	add	sp, sp, #520	; 0x208
   1786c:	pop	{r4, r5, r6, r7, r8, pc}
   17870:	ldr	r3, [r4, #52]	; 0x34
   17874:	cmp	r3, #0
   17878:	ble	17854 <spss_missingness_for_info+0x88>
   1787c:	mov	r5, r7
   17880:	str	r3, [sp, #512]	; 0x200
   17884:	add	r3, sp, #520	; 0x208
   17888:	mov	r2, r6
   1788c:	add	r0, r3, r6, lsl #5
   17890:	mov	r1, r4
   17894:	add	r6, r6, #1
   17898:	sub	r0, r0, #504	; 0x1f8
   1789c:	bl	175e8 <spss_boxed_missing_value>
   178a0:	add	r3, r5, #16
   178a4:	ldm	r3, {r0, r1, r2, r3}
   178a8:	stm	r5, {r0, r1, r2, r3}
   178ac:	add	r5, r5, #32
   178b0:	ldr	r3, [r4, #52]	; 0x34
   178b4:	cmp	r3, r6
   178b8:	bgt	17884 <spss_missingness_for_info+0xb8>
   178bc:	b	17854 <spss_missingness_for_info+0x88>

000178c0 <spss_init_variable_for_info>:
   178c0:	push	{r4, r5, r6, r7, lr}
   178c4:	mov	r4, r0
   178c8:	sub	sp, sp, #532	; 0x214
   178cc:	mov	r7, r1
   178d0:	mov	r0, #1
   178d4:	movw	r1, #2152	; 0x868
   178d8:	mov	r6, r2
   178dc:	bl	3d6c <calloc@plt>
   178e0:	ldr	r3, [r4, #8]
   178e4:	mov	r5, r0
   178e8:	mov	r1, #300	; 0x12c
   178ec:	add	r0, r0, #8
   178f0:	str	r3, [r0, #-4]
   178f4:	ldr	r3, [r4]
   178f8:	str	r7, [r0, #2140]	; 0x85c
   178fc:	str	r3, [r0, #-8]
   17900:	ldr	r3, [r4, #20]
   17904:	cmp	r3, #0
   17908:	ldreq	r3, [r4, #16]
   1790c:	str	r6, [sp]
   17910:	lsleq	r3, r3, #3
   17914:	str	r3, [r5, #1596]	; 0x63c
   17918:	ldrb	r3, [r4, #196]	; 0xc4
   1791c:	cmp	r3, #0
   17920:	movne	r3, #65	; 0x41
   17924:	moveq	r3, #9
   17928:	addne	r2, r4, #196	; 0xc4
   1792c:	addeq	r2, r4, #187	; 0xbb
   17930:	bl	424c <readstat_convert@plt>
   17934:	ldr	r3, [r4, #264]	; 0x108
   17938:	cmp	r3, #0
   1793c:	beq	17954 <spss_init_variable_for_info+0x94>
   17940:	ldr	r2, [pc, #100]	; 179ac <spss_init_variable_for_info+0xec>
   17944:	mov	r1, #1024	; 0x400
   17948:	add	r0, r5, #564	; 0x234
   1794c:	add	r2, pc, r2
   17950:	bl	4294 <snprintf@plt>
   17954:	add	r2, r4, #24
   17958:	add	r6, sp, #8
   1795c:	mov	r1, #256	; 0x100
   17960:	add	r0, r5, #308	; 0x134
   17964:	bl	442c <spss_format@plt>
   17968:	mov	r1, r4
   1796c:	mov	r0, r6
   17970:	bl	454c <spss_missingness_for_info@plt>
   17974:	add	r0, r5, #1600	; 0x640
   17978:	mov	r2, #520	; 0x208
   1797c:	mov	r1, r6
   17980:	add	r0, r0, #8
   17984:	bl	3f34 <memcpy@plt>
   17988:	ldr	r3, [r4, #268]	; 0x10c
   1798c:	mov	r0, r5
   17990:	str	r3, [r5, #2128]	; 0x850
   17994:	ldr	r3, [r4, #276]	; 0x114
   17998:	cmp	r3, #0
   1799c:	ldreq	r3, [r4, #28]
   179a0:	str	r3, [r5, #2136]	; 0x858
   179a4:	add	sp, sp, #532	; 0x214
   179a8:	pop	{r4, r5, r6, r7, pc}
   179ac:	.word	0x0000a1fa

000179b0 <spss_measure_from_readstat_measure>:
   179b0:	cmp	r0, #1
   179b4:	bxeq	lr
   179b8:	cmp	r0, #2
   179bc:	bxeq	lr
   179c0:	cmp	r0, #3
   179c4:	movne	r0, #0
   179c8:	bx	lr

000179cc <spss_measure_to_readstat_measure>:
   179cc:	cmp	r0, #1
   179d0:	bxeq	lr
   179d4:	cmp	r0, #2
   179d8:	bxeq	lr
   179dc:	cmp	r0, #3
   179e0:	movne	r0, #0
   179e4:	bx	lr

000179e8 <spss_alignment_from_readstat_alignment>:
   179e8:	cmp	r0, #1
   179ec:	beq	17a04 <spss_alignment_from_readstat_alignment+0x1c>
   179f0:	cmp	r0, #2
   179f4:	subne	r0, r0, #3
   179f8:	clzne	r0, r0
   179fc:	lsrne	r0, r0, #5
   17a00:	bx	lr
   17a04:	mov	r0, #0
   17a08:	bx	lr

00017a0c <spss_alignment_to_readstat_alignment>:
   17a0c:	cmp	r0, #0
   17a10:	beq	17a2c <spss_alignment_to_readstat_alignment+0x20>
   17a14:	cmp	r0, #2
   17a18:	bxeq	lr
   17a1c:	cmp	r0, #1
   17a20:	movne	r0, #0
   17a24:	moveq	r0, #3
   17a28:	bx	lr
   17a2c:	mov	r0, #1
   17a30:	bx	lr

00017a34 <spss_format_for_variable>:
   17a34:	mov	r3, #0
   17a38:	str	r3, [r1]
   17a3c:	str	r3, [r1, #4]
   17a40:	str	r3, [r1, #8]
   17a44:	ldr	r2, [r0]
   17a48:	cmp	r2, r3
   17a4c:	ldr	r3, [r0, #2136]	; 0x858
   17a50:	bne	17a8c <spss_format_for_variable+0x58>
   17a54:	mov	r2, #1
   17a58:	cmp	r3, #0
   17a5c:	str	r2, [r1]
   17a60:	beq	17a7c <spss_format_for_variable+0x48>
   17a64:	str	r3, [r1, #4]
   17a68:	ldrb	r3, [r0, #308]	; 0x134
   17a6c:	cmp	r3, #0
   17a70:	bne	17abc <spss_format_for_variable+0x88>
   17a74:	mov	r0, #0
   17a78:	bx	lr
   17a7c:	ldr	r3, [r0, #1600]	; 0x640
   17a80:	cmp	r3, #0
   17a84:	ldreq	r3, [r0, #1596]	; 0x63c
   17a88:	b	17a64 <spss_format_for_variable+0x30>
   17a8c:	cmp	r3, #0
   17a90:	sub	r2, r2, #4
   17a94:	moveq	r3, #8
   17a98:	cmp	r2, #1
   17a9c:	mov	ip, #5
   17aa0:	str	r3, [r1, #4]
   17aa4:	movls	r3, #2
   17aa8:	str	ip, [r1]
   17aac:	strls	r3, [r1, #8]
   17ab0:	b	17a68 <spss_format_for_variable+0x34>
   17ab4:	mov	r0, #0
   17ab8:	pop	{r4, r5, r6, pc}
   17abc:	mov	r3, #0
   17ac0:	push	{r4, r5, r6, lr}
   17ac4:	add	r5, r0, #308	; 0x134
   17ac8:	mov	r0, r5
   17acc:	mov	r4, r1
   17ad0:	str	r3, [r1, #8]
   17ad4:	bl	421c <strlen@plt>
   17ad8:	mov	r1, r0
   17adc:	mov	r2, r4
   17ae0:	mov	r0, r5
   17ae4:	bl	3f40 <spss_parse_format@plt>
   17ae8:	cmp	r0, #0
   17aec:	beq	17ab4 <spss_format_for_variable+0x80>
   17af0:	mov	r0, #11
   17af4:	pop	{r4, r5, r6, pc}

00017af8 <spss_parse_format>:
   17af8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17afc:	add	r3, r0, r1
   17b00:	sub	sp, sp, #28
   17b04:	cmp	r0, r3
   17b08:	mov	r4, #0
   17b0c:	mov	ip, #1
   17b10:	str	r3, [sp, #4]
   17b14:	beq	17c18 <spss_parse_format+0x120>
   17b18:	ldr	r5, [pc, #1572]	; 18144 <spss_parse_format+0x64c>
   17b1c:	mov	r6, #10
   17b20:	add	r5, pc, r5
   17b24:	add	r3, r5, #284	; 0x11c
   17b28:	add	r3, r3, #2
   17b2c:	str	r5, [sp, #8]
   17b30:	str	r3, [sp, #16]
   17b34:	ldr	r3, [pc, #1548]	; 18148 <spss_parse_format+0x650>
   17b38:	add	r3, pc, r3
   17b3c:	str	r3, [sp, #20]
   17b40:	add	r3, r5, #1568	; 0x620
   17b44:	str	r3, [sp, #12]
   17b48:	ldr	r1, [sp, #16]
   17b4c:	lsl	r3, ip, #1
   17b50:	ldrsh	lr, [r1, r3]
   17b54:	add	r1, r5, #500	; 0x1f4
   17b58:	ldrsh	r3, [r1, r3]
   17b5c:	add	r1, r5, ip
   17b60:	ldrb	r9, [r1, #714]	; 0x2ca
   17b64:	add	lr, r5, lr
   17b68:	cmp	r9, #0
   17b6c:	beq	17c60 <spss_parse_format+0x168>
   17b70:	sub	r8, r9, #1
   17b74:	mov	r7, lr
   17b78:	add	r8, lr, r8
   17b7c:	cmp	r7, r8
   17b80:	bhi	17c58 <spss_parse_format+0x160>
   17b84:	sub	sl, r8, r7
   17b88:	ldrb	fp, [r0]
   17b8c:	add	r1, r7, sl, asr #1
   17b90:	ldrb	sl, [r7, sl, asr #1]
   17b94:	cmp	fp, sl
   17b98:	subcc	r8, r1, #1
   17b9c:	bcc	17b7c <spss_parse_format+0x84>
   17ba0:	addhi	r7, r1, #1
   17ba4:	bhi	17b7c <spss_parse_format+0x84>
   17ba8:	sub	lr, r1, lr
   17bac:	add	r3, r3, lr
   17bb0:	ldr	r1, [sp, #8]
   17bb4:	add	r3, r1, r3
   17bb8:	ldrb	r3, [r3, #928]	; 0x3a0
   17bbc:	add	r3, r1, r3
   17bc0:	ldrb	r1, [r3, #1424]	; 0x590
   17bc4:	ldrb	ip, [r3, #1280]	; 0x500
   17bc8:	cmp	r1, #0
   17bcc:	beq	17c00 <spss_parse_format+0x108>
   17bd0:	ldr	r3, [sp, #12]
   17bd4:	mov	fp, #36	; 0x24
   17bd8:	mov	sl, #35	; 0x23
   17bdc:	mov	r9, #34	; 0x22
   17be0:	mov	r7, #33	; 0x21
   17be4:	ldr	lr, [sp, #12]
   17be8:	mov	r8, #32
   17bec:	add	r3, r3, r1
   17bf0:	add	r3, r3, #1
   17bf4:	ldrb	r1, [lr, r1]
   17bf8:	subs	r1, r1, #1
   17bfc:	bcs	17cd0 <spss_parse_format+0x1d8>
   17c00:	cmp	ip, #0
   17c04:	beq	17fb8 <spss_parse_format+0x4c0>
   17c08:	ldr	r3, [sp, #4]
   17c0c:	add	r0, r0, #1
   17c10:	cmp	r3, r0
   17c14:	bne	17b48 <spss_parse_format+0x50>
   17c18:	ldr	r3, [pc, #1324]	; 1814c <spss_parse_format+0x654>
   17c1c:	mov	fp, #39	; 0x27
   17c20:	mov	sl, #38	; 0x26
   17c24:	mov	r9, #37	; 0x25
   17c28:	mov	r8, #36	; 0x24
   17c2c:	mov	r7, #35	; 0x23
   17c30:	mov	r6, #34	; 0x22
   17c34:	add	r3, pc, r3
   17c38:	add	lr, r3, #1568	; 0x620
   17c3c:	add	r3, r3, ip
   17c40:	ldrb	r3, [r3, #1800]	; 0x708
   17c44:	add	r1, lr, r3
   17c48:	ldrb	r5, [lr, r3]
   17c4c:	mov	r3, #10
   17c50:	add	r1, r1, #1
   17c54:	b	17fb0 <spss_parse_format+0x4b8>
   17c58:	add	lr, lr, r9
   17c5c:	add	r3, r3, r9
   17c60:	ldr	r1, [sp, #20]
   17c64:	add	ip, r1, ip
   17c68:	ldrb	r9, [ip, #821]	; 0x335
   17c6c:	cmp	r9, #0
   17c70:	beq	17bb0 <spss_parse_format+0xb8>
   17c74:	add	r8, lr, r9, lsl #1
   17c78:	mov	r7, lr
   17c7c:	sub	r8, r8, #2
   17c80:	cmp	r7, r8
   17c84:	bhi	17cc8 <spss_parse_format+0x1d0>
   17c88:	sub	ip, r8, r7
   17c8c:	ldrb	sl, [r0]
   17c90:	asr	ip, ip, #1
   17c94:	bic	ip, ip, #1
   17c98:	add	r1, r7, ip
   17c9c:	ldrb	ip, [r7, ip]
   17ca0:	cmp	ip, sl
   17ca4:	subhi	r8, r1, #2
   17ca8:	bhi	17c80 <spss_parse_format+0x188>
   17cac:	ldrb	ip, [r1, #1]
   17cb0:	cmp	ip, sl
   17cb4:	addcc	r7, r1, #2
   17cb8:	bcc	17c80 <spss_parse_format+0x188>
   17cbc:	sub	lr, r1, lr
   17cc0:	add	r3, r3, lr, asr #1
   17cc4:	b	17bb0 <spss_parse_format+0xb8>
   17cc8:	add	r3, r3, r9
   17ccc:	b	17bb0 <spss_parse_format+0xb8>
   17cd0:	ldrb	lr, [r3], #1
   17cd4:	cmp	lr, #40	; 0x28
   17cd8:	addls	pc, pc, lr, lsl #2
   17cdc:	b	17bf8 <spss_parse_format+0x100>
   17ce0:	b	17d84 <spss_parse_format+0x28c>
   17ce4:	b	17d8c <spss_parse_format+0x294>
   17ce8:	b	17d9c <spss_parse_format+0x2a4>
   17cec:	b	17bf8 <spss_parse_format+0x100>
   17cf0:	b	17da4 <spss_parse_format+0x2ac>
   17cf4:	b	17db0 <spss_parse_format+0x2b8>
   17cf8:	b	17db8 <spss_parse_format+0x2c0>
   17cfc:	b	17dc0 <spss_parse_format+0x2c8>
   17d00:	b	17dc8 <spss_parse_format+0x2d0>
   17d04:	b	17dd0 <spss_parse_format+0x2d8>
   17d08:	b	17dd8 <spss_parse_format+0x2e0>
   17d0c:	b	17de0 <spss_parse_format+0x2e8>
   17d10:	b	17de8 <spss_parse_format+0x2f0>
   17d14:	b	17df0 <spss_parse_format+0x2f8>
   17d18:	b	17df8 <spss_parse_format+0x300>
   17d1c:	b	17e00 <spss_parse_format+0x308>
   17d20:	b	17e08 <spss_parse_format+0x310>
   17d24:	b	17e10 <spss_parse_format+0x318>
   17d28:	b	17e18 <spss_parse_format+0x320>
   17d2c:	b	17e20 <spss_parse_format+0x328>
   17d30:	b	17e34 <spss_parse_format+0x33c>
   17d34:	b	17e3c <spss_parse_format+0x344>
   17d38:	b	17e4c <spss_parse_format+0x354>
   17d3c:	b	17e5c <spss_parse_format+0x364>
   17d40:	b	17e6c <spss_parse_format+0x374>
   17d44:	b	17e74 <spss_parse_format+0x37c>
   17d48:	b	17e84 <spss_parse_format+0x38c>
   17d4c:	b	17e8c <spss_parse_format+0x394>
   17d50:	b	17e94 <spss_parse_format+0x39c>
   17d54:	b	17e9c <spss_parse_format+0x3a4>
   17d58:	b	17ea4 <spss_parse_format+0x3ac>
   17d5c:	b	17eac <spss_parse_format+0x3b4>
   17d60:	b	17eb4 <spss_parse_format+0x3bc>
   17d64:	b	17ebc <spss_parse_format+0x3c4>
   17d68:	b	17ec4 <spss_parse_format+0x3cc>
   17d6c:	b	17ecc <spss_parse_format+0x3d4>
   17d70:	b	17ed4 <spss_parse_format+0x3dc>
   17d74:	b	17edc <spss_parse_format+0x3e4>
   17d78:	b	17ee4 <spss_parse_format+0x3ec>
   17d7c:	b	17eec <spss_parse_format+0x3f4>
   17d80:	b	17ef4 <spss_parse_format+0x3fc>
   17d84:	mov	r4, #0
   17d88:	b	17bf8 <spss_parse_format+0x100>
   17d8c:	ldrb	lr, [r0]
   17d90:	sub	lr, lr, #48	; 0x30
   17d94:	mla	r4, r6, r4, lr
   17d98:	b	17bf8 <spss_parse_format+0x100>
   17d9c:	str	r4, [r2, #4]
   17da0:	b	17bf8 <spss_parse_format+0x100>
   17da4:	mov	lr, #1
   17da8:	str	lr, [r2]
   17dac:	b	17bf8 <spss_parse_format+0x100>
   17db0:	mov	lr, #2
   17db4:	b	17da8 <spss_parse_format+0x2b0>
   17db8:	mov	lr, #3
   17dbc:	b	17da8 <spss_parse_format+0x2b0>
   17dc0:	mov	lr, #4
   17dc4:	b	17da8 <spss_parse_format+0x2b0>
   17dc8:	mov	lr, #5
   17dcc:	b	17da8 <spss_parse_format+0x2b0>
   17dd0:	mov	lr, #6
   17dd4:	b	17da8 <spss_parse_format+0x2b0>
   17dd8:	mov	lr, #7
   17ddc:	b	17da8 <spss_parse_format+0x2b0>
   17de0:	mov	lr, #8
   17de4:	b	17da8 <spss_parse_format+0x2b0>
   17de8:	mov	lr, #9
   17dec:	b	17da8 <spss_parse_format+0x2b0>
   17df0:	str	r6, [r2]
   17df4:	b	17bf8 <spss_parse_format+0x100>
   17df8:	mov	lr, #11
   17dfc:	b	17da8 <spss_parse_format+0x2b0>
   17e00:	mov	lr, #12
   17e04:	b	17da8 <spss_parse_format+0x2b0>
   17e08:	mov	lr, #15
   17e0c:	b	17da8 <spss_parse_format+0x2b0>
   17e10:	mov	lr, #16
   17e14:	b	17da8 <spss_parse_format+0x2b0>
   17e18:	mov	lr, #17
   17e1c:	b	17da8 <spss_parse_format+0x2b0>
   17e20:	mov	lr, #20
   17e24:	str	lr, [r2]
   17e28:	mov	lr, #11
   17e2c:	str	lr, [r2, #4]
   17e30:	b	17bf8 <spss_parse_format+0x100>
   17e34:	mov	lr, #21
   17e38:	b	17da8 <spss_parse_format+0x2b0>
   17e3c:	mov	lr, #22
   17e40:	str	lr, [r2]
   17e44:	mov	lr, #20
   17e48:	b	17e2c <spss_parse_format+0x334>
   17e4c:	mov	lr, #41	; 0x29
   17e50:	str	lr, [r2]
   17e54:	mov	lr, #19
   17e58:	b	17e2c <spss_parse_format+0x334>
   17e5c:	mov	lr, #23
   17e60:	str	lr, [r2]
   17e64:	str	r6, [r2, #4]
   17e68:	b	17bf8 <spss_parse_format+0x100>
   17e6c:	mov	lr, #24
   17e70:	b	17da8 <spss_parse_format+0x2b0>
   17e74:	mov	lr, #25
   17e78:	str	lr, [r2]
   17e7c:	mov	lr, #23
   17e80:	b	17e2c <spss_parse_format+0x334>
   17e84:	mov	lr, #40	; 0x28
   17e88:	b	17da8 <spss_parse_format+0x2b0>
   17e8c:	mov	lr, #26
   17e90:	b	17da8 <spss_parse_format+0x2b0>
   17e94:	mov	lr, #27
   17e98:	b	17da8 <spss_parse_format+0x2b0>
   17e9c:	mov	lr, #28
   17ea0:	b	17da8 <spss_parse_format+0x2b0>
   17ea4:	mov	lr, #29
   17ea8:	b	17da8 <spss_parse_format+0x2b0>
   17eac:	mov	lr, #30
   17eb0:	b	17e60 <spss_parse_format+0x368>
   17eb4:	mov	lr, #31
   17eb8:	b	17da8 <spss_parse_format+0x2b0>
   17ebc:	str	r8, [r2]
   17ec0:	b	17bf8 <spss_parse_format+0x100>
   17ec4:	str	r7, [r2]
   17ec8:	b	17bf8 <spss_parse_format+0x100>
   17ecc:	str	r9, [r2]
   17ed0:	b	17bf8 <spss_parse_format+0x100>
   17ed4:	str	sl, [r2]
   17ed8:	b	17bf8 <spss_parse_format+0x100>
   17edc:	str	fp, [r2]
   17ee0:	b	17bf8 <spss_parse_format+0x100>
   17ee4:	mov	lr, #37	; 0x25
   17ee8:	b	17da8 <spss_parse_format+0x2b0>
   17eec:	mov	lr, #38	; 0x26
   17ef0:	b	17e60 <spss_parse_format+0x368>
   17ef4:	mov	lr, #39	; 0x27
   17ef8:	b	17e60 <spss_parse_format+0x368>
   17efc:	ldrb	lr, [r1], #1
   17f00:	sub	lr, lr, #2
   17f04:	cmp	lr, #38	; 0x26
   17f08:	addls	pc, pc, lr, lsl #2
   17f0c:	b	17fb0 <spss_parse_format+0x4b8>
   17f10:	b	17fac <spss_parse_format+0x4b4>
   17f14:	b	17fe4 <spss_parse_format+0x4ec>
   17f18:	b	17fec <spss_parse_format+0x4f4>
   17f1c:	b	17ff8 <spss_parse_format+0x500>
   17f20:	b	18000 <spss_parse_format+0x508>
   17f24:	b	18008 <spss_parse_format+0x510>
   17f28:	b	18010 <spss_parse_format+0x518>
   17f2c:	b	18018 <spss_parse_format+0x520>
   17f30:	b	18020 <spss_parse_format+0x528>
   17f34:	b	18028 <spss_parse_format+0x530>
   17f38:	b	18030 <spss_parse_format+0x538>
   17f3c:	b	18038 <spss_parse_format+0x540>
   17f40:	b	18040 <spss_parse_format+0x548>
   17f44:	b	18048 <spss_parse_format+0x550>
   17f48:	b	18050 <spss_parse_format+0x558>
   17f4c:	b	18058 <spss_parse_format+0x560>
   17f50:	b	18060 <spss_parse_format+0x568>
   17f54:	b	18068 <spss_parse_format+0x570>
   17f58:	b	1807c <spss_parse_format+0x584>
   17f5c:	b	18084 <spss_parse_format+0x58c>
   17f60:	b	18094 <spss_parse_format+0x59c>
   17f64:	b	180a4 <spss_parse_format+0x5ac>
   17f68:	b	180b4 <spss_parse_format+0x5bc>
   17f6c:	b	180bc <spss_parse_format+0x5c4>
   17f70:	b	180cc <spss_parse_format+0x5d4>
   17f74:	b	180d4 <spss_parse_format+0x5dc>
   17f78:	b	180dc <spss_parse_format+0x5e4>
   17f7c:	b	180e4 <spss_parse_format+0x5ec>
   17f80:	b	180ec <spss_parse_format+0x5f4>
   17f84:	b	180f4 <spss_parse_format+0x5fc>
   17f88:	b	180fc <spss_parse_format+0x604>
   17f8c:	b	18104 <spss_parse_format+0x60c>
   17f90:	b	1810c <spss_parse_format+0x614>
   17f94:	b	18114 <spss_parse_format+0x61c>
   17f98:	b	1811c <spss_parse_format+0x624>
   17f9c:	b	18124 <spss_parse_format+0x62c>
   17fa0:	b	1812c <spss_parse_format+0x634>
   17fa4:	b	18134 <spss_parse_format+0x63c>
   17fa8:	b	1813c <spss_parse_format+0x644>
   17fac:	str	r4, [r2, #4]
   17fb0:	subs	r5, r5, #1
   17fb4:	bcs	17efc <spss_parse_format+0x404>
   17fb8:	ldr	r3, [sp, #4]
   17fbc:	subs	r0, r0, r3
   17fc0:	movne	r0, #1
   17fc4:	cmp	ip, #67	; 0x43
   17fc8:	movgt	ip, r0
   17fcc:	orrle	ip, r0, #1
   17fd0:	cmp	ip, #0
   17fd4:	moveq	r0, #0
   17fd8:	movne	r0, #5
   17fdc:	add	sp, sp, #28
   17fe0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17fe4:	str	r4, [r2, #8]
   17fe8:	b	17fb0 <spss_parse_format+0x4b8>
   17fec:	mov	lr, #1
   17ff0:	str	lr, [r2]
   17ff4:	b	17fb0 <spss_parse_format+0x4b8>
   17ff8:	mov	lr, #2
   17ffc:	b	17ff0 <spss_parse_format+0x4f8>
   18000:	mov	lr, #3
   18004:	b	17ff0 <spss_parse_format+0x4f8>
   18008:	mov	lr, #4
   1800c:	b	17ff0 <spss_parse_format+0x4f8>
   18010:	mov	lr, #5
   18014:	b	17ff0 <spss_parse_format+0x4f8>
   18018:	mov	lr, #6
   1801c:	b	17ff0 <spss_parse_format+0x4f8>
   18020:	mov	lr, #7
   18024:	b	17ff0 <spss_parse_format+0x4f8>
   18028:	mov	lr, #8
   1802c:	b	17ff0 <spss_parse_format+0x4f8>
   18030:	mov	lr, #9
   18034:	b	17ff0 <spss_parse_format+0x4f8>
   18038:	str	r3, [r2]
   1803c:	b	17fb0 <spss_parse_format+0x4b8>
   18040:	mov	lr, #11
   18044:	b	17ff0 <spss_parse_format+0x4f8>
   18048:	mov	lr, #12
   1804c:	b	17ff0 <spss_parse_format+0x4f8>
   18050:	mov	lr, #15
   18054:	b	17ff0 <spss_parse_format+0x4f8>
   18058:	mov	lr, #16
   1805c:	b	17ff0 <spss_parse_format+0x4f8>
   18060:	mov	lr, #17
   18064:	b	17ff0 <spss_parse_format+0x4f8>
   18068:	mov	lr, #20
   1806c:	str	lr, [r2]
   18070:	mov	lr, #11
   18074:	str	lr, [r2, #4]
   18078:	b	17fb0 <spss_parse_format+0x4b8>
   1807c:	mov	lr, #21
   18080:	b	17ff0 <spss_parse_format+0x4f8>
   18084:	mov	lr, #22
   18088:	str	lr, [r2]
   1808c:	mov	lr, #20
   18090:	b	18074 <spss_parse_format+0x57c>
   18094:	mov	lr, #41	; 0x29
   18098:	str	lr, [r2]
   1809c:	mov	lr, #19
   180a0:	b	18074 <spss_parse_format+0x57c>
   180a4:	mov	lr, #23
   180a8:	str	lr, [r2]
   180ac:	str	r3, [r2, #4]
   180b0:	b	17fb0 <spss_parse_format+0x4b8>
   180b4:	mov	lr, #24
   180b8:	b	17ff0 <spss_parse_format+0x4f8>
   180bc:	mov	lr, #25
   180c0:	str	lr, [r2]
   180c4:	mov	lr, #23
   180c8:	b	18074 <spss_parse_format+0x57c>
   180cc:	mov	lr, #40	; 0x28
   180d0:	b	17ff0 <spss_parse_format+0x4f8>
   180d4:	mov	lr, #26
   180d8:	b	17ff0 <spss_parse_format+0x4f8>
   180dc:	mov	lr, #27
   180e0:	b	17ff0 <spss_parse_format+0x4f8>
   180e4:	mov	lr, #28
   180e8:	b	17ff0 <spss_parse_format+0x4f8>
   180ec:	mov	lr, #29
   180f0:	b	17ff0 <spss_parse_format+0x4f8>
   180f4:	mov	lr, #30
   180f8:	b	180a8 <spss_parse_format+0x5b0>
   180fc:	mov	lr, #31
   18100:	b	17ff0 <spss_parse_format+0x4f8>
   18104:	mov	lr, #32
   18108:	b	17ff0 <spss_parse_format+0x4f8>
   1810c:	mov	lr, #33	; 0x21
   18110:	b	17ff0 <spss_parse_format+0x4f8>
   18114:	str	r6, [r2]
   18118:	b	17fb0 <spss_parse_format+0x4b8>
   1811c:	str	r7, [r2]
   18120:	b	17fb0 <spss_parse_format+0x4b8>
   18124:	str	r8, [r2]
   18128:	b	17fb0 <spss_parse_format+0x4b8>
   1812c:	str	r9, [r2]
   18130:	b	17fb0 <spss_parse_format+0x4b8>
   18134:	str	sl, [r2]
   18138:	b	180ac <spss_parse_format+0x5b4>
   1813c:	str	fp, [r2]
   18140:	b	180ac <spss_parse_format+0x5b4>
   18144:	.word	0x0000a532
   18148:	.word	0x0000a51a
   1814c:	.word	0x0000a41e

00018150 <dta_ctx_alloc>:
   18150:	push	{r4, lr}
   18154:	mov	r1, #544	; 0x220
   18158:	mov	r4, r0
   1815c:	mov	r0, #1
   18160:	bl	3d6c <calloc@plt>
   18164:	cmp	r0, #0
   18168:	movne	r3, #0
   1816c:	strne	r4, [r0, #280]	; 0x118
   18170:	strne	r3, [r0, #284]	; 0x11c
   18174:	pop	{r4, pc}

00018178 <dta_ctx_init>:
   18178:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1817c:	ldrb	r5, [sp, #44]	; 0x2c
   18180:	ldrb	fp, [sp, #40]	; 0x28
   18184:	ldr	sl, [sp, #48]	; 0x30
   18188:	sub	ip, r5, #104	; 0x68
   1818c:	cmp	ip, #15
   18190:	ldr	r6, [sp, #52]	; 0x34
   18194:	movhi	r0, #24
   18198:	bhi	18260 <dta_ctx_init+0xe8>
   1819c:	mov	r4, r0
   181a0:	mov	r9, r3
   181a4:	mov	r8, r2
   181a8:	mov	r7, r1
   181ac:	bl	3ec8 <machine_is_little_endian@plt>
   181b0:	ldrb	r2, [r4, #192]	; 0xc0
   181b4:	cmp	r0, #0
   181b8:	moveq	r3, #1
   181bc:	movne	r3, #2
   181c0:	str	r5, [r4, #144]	; 0x90
   181c4:	subs	r3, fp, r3
   181c8:	str	r7, [r4, #148]	; 0x94
   181cc:	movne	r3, #1
   181d0:	cmp	fp, #2
   181d4:	strd	r8, [r4, #152]	; 0x98
   181d8:	bfi	r2, r3, #0, #1
   181dc:	moveq	r3, #1
   181e0:	movne	r3, #2
   181e4:	cmp	r7, #0
   181e8:	strb	r2, [r4, #192]	; 0xc0
   181ec:	str	r3, [r4, #232]	; 0xe8
   181f0:	bne	18244 <dta_ctx_init+0xcc>
   181f4:	ldrb	r3, [r4, #192]	; 0xc0
   181f8:	cmp	r5, #104	; 0x68
   181fc:	mvn	r0, #0
   18200:	ldr	r1, [pc, #904]	; 18590 <dta_ctx_init+0x418>
   18204:	bfc	r3, #1, #1
   18208:	uxtb	r2, r3
   1820c:	strb	r3, [r4, #192]	; 0xc0
   18210:	beq	18268 <dta_ctx_init+0xf0>
   18214:	cmp	r5, #113	; 0x71
   18218:	bhi	182a4 <dta_ctx_init+0x12c>
   1821c:	mov	r3, #12
   18220:	cmp	r5, #110	; 0x6e
   18224:	str	r3, [r4, #80]	; 0x50
   18228:	bls	18270 <dta_ctx_init+0xf8>
   1822c:	mov	r3, #111	; 0x6f
   18230:	strb	r3, [r4, #20]
   18234:	cmp	r5, #109	; 0x6d
   18238:	bhi	18300 <dta_ctx_init+0x188>
   1823c:	mov	r3, #2
   18240:	b	18280 <dta_ctx_init+0x108>
   18244:	mov	r1, #4
   18248:	mov	r0, r7
   1824c:	bl	3fdc <readstat_calloc@plt>
   18250:	cmp	r0, #0
   18254:	str	r0, [r4, #228]	; 0xe4
   18258:	bne	181f4 <dta_ctx_init+0x7c>
   1825c:	mov	r0, #3
   18260:	add	sp, sp, #4
   18264:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18268:	mov	r3, #7
   1826c:	str	r3, [r4, #80]	; 0x50
   18270:	mov	r3, #0
   18274:	cmp	r5, #104	; 0x68
   18278:	strb	r3, [r4, #20]
   1827c:	bne	18234 <dta_ctx_init+0xbc>
   18280:	str	r3, [r4, #92]	; 0x5c
   18284:	mov	r3, #9
   18288:	cmp	r5, #107	; 0x6b
   1828c:	str	r3, [r4, #76]	; 0x4c
   18290:	str	r3, [r4, #84]	; 0x54
   18294:	str	r3, [r4, #96]	; 0x60
   18298:	bls	18344 <dta_ctx_init+0x1cc>
   1829c:	mov	r3, #81	; 0x51
   182a0:	b	18324 <dta_ctx_init+0x1ac>
   182a4:	cmp	r5, #117	; 0x75
   182a8:	bhi	182e0 <dta_ctx_init+0x168>
   182ac:	mov	r3, #49	; 0x31
   182b0:	str	r3, [r4, #80]	; 0x50
   182b4:	bne	1822c <dta_ctx_init+0xb4>
   182b8:	mov	r3, #117	; 0x75
   182bc:	cmp	r5, r3
   182c0:	strb	r3, [r4, #20]
   182c4:	bhi	182ec <dta_ctx_init+0x174>
   182c8:	bne	18300 <dta_ctx_init+0x188>
   182cc:	mov	r3, #1
   182d0:	str	r3, [r4, #8]
   182d4:	mov	r3, #4
   182d8:	str	r3, [r4, #112]	; 0x70
   182dc:	b	182fc <dta_ctx_init+0x184>
   182e0:	mov	r3, #57	; 0x39
   182e4:	str	r3, [r4, #80]	; 0x50
   182e8:	b	182b8 <dta_ctx_init+0x140>
   182ec:	mov	r3, #2
   182f0:	str	r3, [r4, #8]
   182f4:	str	r3, [r4, #112]	; 0x70
   182f8:	mov	r3, #6
   182fc:	str	r3, [r4, #116]	; 0x74
   18300:	mov	r3, #4
   18304:	cmp	r5, #117	; 0x75
   18308:	str	r3, [r4, #92]	; 0x5c
   1830c:	bls	18330 <dta_ctx_init+0x1b8>
   18310:	mov	r3, #129	; 0x81
   18314:	str	r3, [r4, #76]	; 0x4c
   18318:	str	r3, [r4, #84]	; 0x54
   1831c:	str	r3, [r4, #96]	; 0x60
   18320:	movw	r3, #321	; 0x141
   18324:	str	r3, [r4, #4]
   18328:	str	r3, [r4, #88]	; 0x58
   1832c:	b	18358 <dta_ctx_init+0x1e0>
   18330:	mov	r3, #33	; 0x21
   18334:	str	r3, [r4, #76]	; 0x4c
   18338:	str	r3, [r4, #84]	; 0x54
   1833c:	str	r3, [r4, #96]	; 0x60
   18340:	b	1829c <dta_ctx_init+0x124>
   18344:	mov	r3, #32
   18348:	cmp	r5, #104	; 0x68
   1834c:	str	r3, [r4, #4]
   18350:	str	r3, [r4, #88]	; 0x58
   18354:	beq	1839c <dta_ctx_init+0x224>
   18358:	mov	r3, #18
   1835c:	cmp	r5, #117	; 0x75
   18360:	str	r3, [r4, #16]
   18364:	mov	r3, #4
   18368:	str	r3, [r4, #100]	; 0x64
   1836c:	movhi	r3, #129	; 0x81
   18370:	movls	r3, #33	; 0x21
   18374:	cmp	r5, #116	; 0x74
   18378:	str	r3, [r4, #104]	; 0x68
   1837c:	mov	r3, #3
   18380:	str	r3, [r4, #108]	; 0x6c
   18384:	bls	183b8 <dta_ctx_init+0x240>
   18388:	mov	r3, #2
   1838c:	str	r3, [r4, #24]
   18390:	orr	r3, r2, #4
   18394:	strb	r3, [r4, #192]	; 0xc0
   18398:	b	183d4 <dta_ctx_init+0x25c>
   1839c:	mov	r3, #0
   183a0:	mov	ip, #12
   183a4:	str	r3, [r4, #16]
   183a8:	mov	r3, #2
   183ac:	str	r3, [r4, #100]	; 0x64
   183b0:	str	ip, [r4, #104]	; 0x68
   183b4:	str	r3, [r4, #108]	; 0x6c
   183b8:	mov	r3, #1
   183bc:	cmp	r5, #112	; 0x70
   183c0:	str	r3, [r4, #24]
   183c4:	mov	r3, r2
   183c8:	bfc	r3, #2, #1
   183cc:	strb	r3, [r4, #192]	; 0xc0
   183d0:	bls	18418 <dta_ctx_init+0x2a0>
   183d4:	ldr	r2, [r4, #192]	; 0xc0
   183d8:	cmp	r6, #0
   183dc:	strd	r0, [r4, #208]	; 0xd0
   183e0:	mvn	r0, #-2147483621	; 0x8000001b
   183e4:	mvn	r1, #-2130706432	; 0x81000000
   183e8:	ldr	r3, [pc, #420]	; 18594 <dta_ctx_init+0x41c>
   183ec:	strd	r0, [r4, #196]	; 0xc4
   183f0:	and	r2, r2, #247	; 0xf7
   183f4:	orr	r3, r2, r3
   183f8:	str	r3, [r4, #192]	; 0xc0
   183fc:	bne	1847c <dta_ctx_init+0x304>
   18400:	cmp	r5, #119	; 0x77
   18404:	bne	18440 <dta_ctx_init+0x2c8>
   18408:	ldr	r0, [r4, #148]	; 0x94
   1840c:	add	r0, r0, #1
   18410:	lsl	r0, r0, #2
   18414:	b	1844c <dta_ctx_init+0x2d4>
   18418:	mov	r3, #126	; 0x7e
   1841c:	mvn	r8, #-2147483647	; 0x80000001
   18420:	mvn	r9, #-2130706432	; 0x81000000
   18424:	cmp	r6, #0
   18428:	strb	r3, [r4, #193]	; 0xc1
   1842c:	movw	r3, #32766	; 0x7ffe
   18430:	strh	r3, [r4, #194]	; 0xc2
   18434:	strd	r8, [r4, #196]	; 0xc4
   18438:	strd	r0, [r4, #208]	; 0xd0
   1843c:	bne	18584 <dta_ctx_init+0x40c>
   18440:	ldr	r0, [r4, #148]	; 0x94
   18444:	add	r0, r0, #1
   18448:	lsl	r0, r0, #1
   1844c:	str	r0, [r4, #48]	; 0x30
   18450:	bl	4240 <readstat_malloc@plt>
   18454:	cmp	r0, #0
   18458:	str	r0, [r4, #44]	; 0x2c
   1845c:	beq	1825c <dta_ctx_init+0xe4>
   18460:	ldr	r3, [r4, #148]	; 0x94
   18464:	cmp	r3, #0
   18468:	bgt	184e8 <dta_ctx_init+0x370>
   1846c:	mov	r3, #1
   18470:	mov	r0, #0
   18474:	str	r3, [r4, #284]	; 0x11c
   18478:	b	18260 <dta_ctx_init+0xe8>
   1847c:	cmp	sl, #0
   18480:	beq	184b0 <dta_ctx_init+0x338>
   18484:	mov	r1, sl
   18488:	mov	r0, r6
   1848c:	bl	4150 <iconv_open@plt>
   18490:	str	r0, [r4, #236]	; 0xec
   18494:	ldr	r3, [r4, #236]	; 0xec
   18498:	cmn	r3, #1
   1849c:	moveq	r3, #0
   184a0:	moveq	r0, #7
   184a4:	streq	r3, [r4, #236]	; 0xec
   184a8:	bne	18400 <dta_ctx_init+0x288>
   184ac:	b	18260 <dta_ctx_init+0xe8>
   184b0:	cmp	r5, #117	; 0x75
   184b4:	bhi	184c4 <dta_ctx_init+0x34c>
   184b8:	ldr	r1, [pc, #216]	; 18598 <dta_ctx_init+0x420>
   184bc:	add	r1, pc, r1
   184c0:	b	18488 <dta_ctx_init+0x310>
   184c4:	ldr	r7, [pc, #208]	; 1859c <dta_ctx_init+0x424>
   184c8:	mov	r0, r6
   184cc:	add	r7, pc, r7
   184d0:	mov	r1, r7
   184d4:	bl	3e14 <strcmp@plt>
   184d8:	cmp	r0, #0
   184dc:	beq	18494 <dta_ctx_init+0x31c>
   184e0:	mov	r1, r7
   184e4:	b	18488 <dta_ctx_init+0x310>
   184e8:	ldr	r2, [r4, #76]	; 0x4c
   184ec:	lsl	r0, r3, #1
   184f0:	str	r0, [r4, #32]
   184f4:	mul	r2, r3, r2
   184f8:	str	r2, [r4, #40]	; 0x28
   184fc:	ldr	r2, [r4, #80]	; 0x50
   18500:	mul	r2, r3, r2
   18504:	str	r2, [r4, #56]	; 0x38
   18508:	ldr	r2, [r4, #84]	; 0x54
   1850c:	mul	r2, r3, r2
   18510:	str	r2, [r4, #64]	; 0x40
   18514:	ldr	r2, [r4, #88]	; 0x58
   18518:	mul	r3, r3, r2
   1851c:	str	r3, [r4, #72]	; 0x48
   18520:	bl	4240 <readstat_malloc@plt>
   18524:	cmp	r0, #0
   18528:	str	r0, [r4, #28]
   1852c:	beq	1825c <dta_ctx_init+0xe4>
   18530:	ldr	r0, [r4, #40]	; 0x28
   18534:	bl	4240 <readstat_malloc@plt>
   18538:	cmp	r0, #0
   1853c:	str	r0, [r4, #36]	; 0x24
   18540:	beq	1825c <dta_ctx_init+0xe4>
   18544:	ldr	r0, [r4, #56]	; 0x38
   18548:	bl	4240 <readstat_malloc@plt>
   1854c:	cmp	r0, #0
   18550:	str	r0, [r4, #52]	; 0x34
   18554:	beq	1825c <dta_ctx_init+0xe4>
   18558:	ldr	r0, [r4, #64]	; 0x40
   1855c:	bl	4240 <readstat_malloc@plt>
   18560:	cmp	r0, #0
   18564:	str	r0, [r4, #60]	; 0x3c
   18568:	beq	1825c <dta_ctx_init+0xe4>
   1856c:	ldr	r0, [r4, #72]	; 0x48
   18570:	bl	4240 <readstat_malloc@plt>
   18574:	cmp	r0, #0
   18578:	str	r0, [r4, #68]	; 0x44
   1857c:	bne	1846c <dta_ctx_init+0x2f4>
   18580:	b	1825c <dta_ctx_init+0xe4>
   18584:	cmp	sl, #0
   18588:	bne	18484 <dta_ctx_init+0x30c>
   1858c:	b	184b8 <dta_ctx_init+0x340>
   18590:	.word	0x7fdfffff
   18594:	.word	0x7fe46408
   18598:	.word	0x0000a334
   1859c:	.word	0x00008725

000185a0 <dta_ctx_free>:
   185a0:	push	{r4, r5, r6, lr}
   185a4:	mov	r4, r0
   185a8:	ldr	r0, [r0, #28]
   185ac:	cmp	r0, #0
   185b0:	beq	185b8 <dta_ctx_free+0x18>
   185b4:	bl	3ed4 <free@plt>
   185b8:	ldr	r0, [r4, #36]	; 0x24
   185bc:	cmp	r0, #0
   185c0:	beq	185c8 <dta_ctx_free+0x28>
   185c4:	bl	3ed4 <free@plt>
   185c8:	ldr	r0, [r4, #44]	; 0x2c
   185cc:	cmp	r0, #0
   185d0:	beq	185d8 <dta_ctx_free+0x38>
   185d4:	bl	3ed4 <free@plt>
   185d8:	ldr	r0, [r4, #52]	; 0x34
   185dc:	cmp	r0, #0
   185e0:	beq	185e8 <dta_ctx_free+0x48>
   185e4:	bl	3ed4 <free@plt>
   185e8:	ldr	r0, [r4, #60]	; 0x3c
   185ec:	cmp	r0, #0
   185f0:	beq	185f8 <dta_ctx_free+0x58>
   185f4:	bl	3ed4 <free@plt>
   185f8:	ldr	r0, [r4, #68]	; 0x44
   185fc:	cmp	r0, #0
   18600:	beq	18608 <dta_ctx_free+0x68>
   18604:	bl	3ed4 <free@plt>
   18608:	ldr	r0, [r4, #236]	; 0xec
   1860c:	cmp	r0, #0
   18610:	beq	18618 <dta_ctx_free+0x78>
   18614:	bl	3de4 <iconv_close@plt>
   18618:	ldr	r0, [r4]
   1861c:	cmp	r0, #0
   18620:	beq	18628 <dta_ctx_free+0x88>
   18624:	bl	3ed4 <free@plt>
   18628:	ldr	r3, [r4, #228]	; 0xe4
   1862c:	cmp	r3, #0
   18630:	movne	r5, #0
   18634:	bne	18668 <dta_ctx_free+0xc8>
   18638:	ldr	r3, [r4, #216]	; 0xd8
   1863c:	cmp	r3, #0
   18640:	movne	r5, #0
   18644:	bne	1868c <dta_ctx_free+0xec>
   18648:	mov	r0, r4
   1864c:	pop	{r4, r5, r6, lr}
   18650:	b	3ed4 <free@plt>
   18654:	ldr	r0, [r0, r5, lsl #2]
   18658:	cmp	r0, #0
   1865c:	beq	18664 <dta_ctx_free+0xc4>
   18660:	bl	3ed4 <free@plt>
   18664:	add	r5, r5, #1
   18668:	ldr	r3, [r4, #148]	; 0x94
   1866c:	ldr	r0, [r4, #228]	; 0xe4
   18670:	cmp	r3, r5
   18674:	bgt	18654 <dta_ctx_free+0xb4>
   18678:	bl	3ed4 <free@plt>
   1867c:	b	18638 <dta_ctx_free+0x98>
   18680:	ldr	r0, [r0, r5, lsl #2]
   18684:	add	r5, r5, #1
   18688:	bl	3ed4 <free@plt>
   1868c:	ldr	r0, [r4, #216]	; 0xd8
   18690:	ldr	r3, [r4, #220]	; 0xdc
   18694:	cmp	r3, r5
   18698:	bhi	18680 <dta_ctx_free+0xe0>
   1869c:	bl	3ed4 <free@plt>
   186a0:	b	18648 <dta_ctx_free+0xa8>

000186a4 <dta_type_info>:
   186a4:	ldrb	r1, [r1, #20]
   186a8:	cmp	r1, #111	; 0x6f
   186ac:	bne	186d8 <dta_type_info+0x34>
   186b0:	sub	r1, r0, #251	; 0xfb
   186b4:	uxth	r1, r1
   186b8:	cmp	r1, #4
   186bc:	bhi	18708 <dta_type_info+0x64>
   186c0:	ldr	r0, [pc, #240]	; 187b8 <dta_type_info+0x114>
   186c4:	add	r0, pc, r0
   186c8:	ldrb	r1, [r0, r1]!
   186cc:	ldrb	ip, [r0, #5]
   186d0:	mov	r0, #0
   186d4:	b	18780 <dta_type_info+0xdc>
   186d8:	cmp	r1, #117	; 0x75
   186dc:	bne	18744 <dta_type_info+0xa0>
   186e0:	movw	r1, #65527	; 0xfff7
   186e4:	cmp	r0, r1
   186e8:	beq	1879c <dta_type_info+0xf8>
   186ec:	bhi	18714 <dta_type_info+0x70>
   186f0:	cmp	r0, #32768	; 0x8000
   186f4:	beq	187a4 <dta_type_info+0x100>
   186f8:	movw	r1, #65526	; 0xfff6
   186fc:	cmp	r0, r1
   18700:	moveq	ip, #5
   18704:	beq	187a8 <dta_type_info+0x104>
   18708:	mov	r1, r0
   1870c:	mov	ip, #0
   18710:	b	186d0 <dta_type_info+0x2c>
   18714:	movw	r1, #65529	; 0xfff9
   18718:	cmp	r0, r1
   1871c:	beq	187b0 <dta_type_info+0x10c>
   18720:	movcc	ip, #3
   18724:	movcc	r1, #4
   18728:	bcc	186d0 <dta_type_info+0x2c>
   1872c:	movw	r1, #65530	; 0xfffa
   18730:	cmp	r0, r1
   18734:	moveq	ip, #1
   18738:	bne	18708 <dta_type_info+0x64>
   1873c:	mov	r1, ip
   18740:	b	186d0 <dta_type_info+0x2c>
   18744:	cmp	r0, #126	; 0x7e
   18748:	bhi	18794 <dta_type_info+0xf0>
   1874c:	sub	r1, r0, #98	; 0x62
   18750:	uxth	r1, r1
   18754:	cmp	r1, #10
   18758:	movhi	ip, #0
   1875c:	movhi	r0, #5
   18760:	movhi	r1, ip
   18764:	bhi	18780 <dta_type_info+0xdc>
   18768:	ldr	ip, [pc, #76]	; 187bc <dta_type_info+0x118>
   1876c:	add	ip, pc, ip
   18770:	add	ip, ip, r1
   18774:	ldrb	r0, [ip, #10]
   18778:	ldrb	r1, [ip, #21]
   1877c:	ldrb	ip, [ip, #32]
   18780:	cmp	r2, #0
   18784:	strne	r1, [r2]
   18788:	cmp	r3, #0
   1878c:	strne	ip, [r3]
   18790:	bx	lr
   18794:	sub	r1, r0, #127	; 0x7f
   18798:	b	1870c <dta_type_info+0x68>
   1879c:	mov	ip, #4
   187a0:	b	1873c <dta_type_info+0x98>
   187a4:	mov	ip, #6
   187a8:	mov	r1, #8
   187ac:	b	186d0 <dta_type_info+0x2c>
   187b0:	mov	ip, #2
   187b4:	b	1873c <dta_type_info+0x98>
   187b8:	.word	0x0000a101
   187bc:	.word	0x0000a059

000187c0 <dta_parse_timestamp>:
   187c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   187c4:	sub	sp, sp, #1056	; 0x420
   187c8:	mov	r4, #0
   187cc:	sub	sp, sp, #4
   187d0:	mov	lr, #1
   187d4:	str	r1, [sp, #12]
   187d8:	str	r3, [sp, #16]
   187dc:	add	r3, r0, r1
   187e0:	cmp	r0, r3
   187e4:	str	r3, [sp, #8]
   187e8:	mov	r3, r0
   187ec:	beq	188d4 <dta_parse_timestamp+0x114>
   187f0:	ldr	r1, [pc, #760]	; 18af0 <dta_parse_timestamp+0x330>
   187f4:	ldr	fp, [pc, #760]	; 18af4 <dta_parse_timestamp+0x334>
   187f8:	add	r1, pc, r1
   187fc:	add	fp, pc, fp
   18800:	str	r1, [sp, #28]
   18804:	add	r1, fp, #568	; 0x238
   18808:	add	r1, r1, #3
   1880c:	str	fp, [sp, #20]
   18810:	str	r1, [sp, #24]
   18814:	add	r5, fp, lr
   18818:	ldrb	r9, [r5, #208]	; 0xd0
   1881c:	ldrb	ip, [r5, #118]	; 0x76
   18820:	ldrb	r1, [r5, #163]	; 0xa3
   18824:	cmp	r9, #0
   18828:	add	ip, fp, ip
   1882c:	beq	18904 <dta_parse_timestamp+0x144>
   18830:	sub	r7, r9, #1
   18834:	mov	r6, ip
   18838:	add	r7, ip, r7
   1883c:	cmp	r6, r7
   18840:	bhi	188fc <dta_parse_timestamp+0x13c>
   18844:	sub	sl, r7, r6
   18848:	ldrb	r8, [r3]
   1884c:	add	r5, r6, sl, asr #1
   18850:	ldrb	sl, [r6, sl, asr #1]
   18854:	cmp	r8, sl
   18858:	subcc	r7, r5, #1
   1885c:	bcc	1883c <dta_parse_timestamp+0x7c>
   18860:	addhi	r6, r5, #1
   18864:	bhi	1883c <dta_parse_timestamp+0x7c>
   18868:	sub	ip, r5, ip
   1886c:	add	r1, r1, ip
   18870:	ldr	ip, [sp, #20]
   18874:	add	r1, ip, r1
   18878:	ldrb	r1, [r1, #298]	; 0x12a
   1887c:	add	r1, ip, r1
   18880:	ldrb	ip, [r1, #511]	; 0x1ff
   18884:	ldrb	lr, [r1, #451]	; 0x1c3
   18888:	cmp	ip, #0
   1888c:	beq	188bc <dta_parse_timestamp+0xfc>
   18890:	ldr	r1, [sp, #24]
   18894:	mov	r6, #6
   18898:	mov	r7, #5
   1889c:	mov	r9, #4
   188a0:	mov	sl, #3
   188a4:	ldr	r5, [sp, #24]
   188a8:	add	r1, r1, ip
   188ac:	add	r1, r1, #1
   188b0:	ldrb	ip, [r5, ip]
   188b4:	subs	ip, ip, #1
   188b8:	bcs	18974 <dta_parse_timestamp+0x1b4>
   188bc:	cmp	lr, #0
   188c0:	beq	18a7c <dta_parse_timestamp+0x2bc>
   188c4:	ldr	r1, [sp, #8]
   188c8:	add	r3, r3, #1
   188cc:	cmp	r1, r3
   188d0:	bne	18814 <dta_parse_timestamp+0x54>
   188d4:	ldr	ip, [pc, #540]	; 18af8 <dta_parse_timestamp+0x338>
   188d8:	add	ip, pc, ip
   188dc:	add	r1, ip, #568	; 0x238
   188e0:	add	ip, ip, lr
   188e4:	ldrb	r5, [ip, #609]	; 0x261
   188e8:	add	r1, r1, #3
   188ec:	add	ip, r1, r5
   188f0:	ldrb	r1, [r1, r5]
   188f4:	add	ip, ip, #1
   188f8:	b	18a74 <dta_parse_timestamp+0x2b4>
   188fc:	add	ip, ip, r9
   18900:	add	r1, r1, r9
   18904:	ldr	r5, [sp, #28]
   18908:	add	lr, r5, lr
   1890c:	ldrb	r9, [lr, #253]	; 0xfd
   18910:	cmp	r9, #0
   18914:	beq	18870 <dta_parse_timestamp+0xb0>
   18918:	add	r7, ip, r9, lsl #1
   1891c:	mov	r6, ip
   18920:	sub	r7, r7, #2
   18924:	cmp	r6, r7
   18928:	bhi	1896c <dta_parse_timestamp+0x1ac>
   1892c:	sub	r5, r7, r6
   18930:	ldrb	sl, [r3]
   18934:	asr	r5, r5, #1
   18938:	bic	r5, r5, #1
   1893c:	add	lr, r6, r5
   18940:	ldrb	r5, [r6, r5]
   18944:	cmp	r5, sl
   18948:	subhi	r7, lr, #2
   1894c:	bhi	18924 <dta_parse_timestamp+0x164>
   18950:	ldrb	r5, [lr, #1]
   18954:	cmp	r5, sl
   18958:	addcc	r6, lr, #2
   1895c:	bcc	18924 <dta_parse_timestamp+0x164>
   18960:	sub	ip, lr, ip
   18964:	add	r1, r1, ip, asr #1
   18968:	b	18870 <dta_parse_timestamp+0xb0>
   1896c:	add	r1, r1, r9
   18970:	b	18870 <dta_parse_timestamp+0xb0>
   18974:	ldrb	r5, [r1], #1
   18978:	cmp	r5, #16
   1897c:	addls	pc, pc, r5, lsl #2
   18980:	b	188b4 <dta_parse_timestamp+0xf4>
   18984:	b	189d0 <dta_parse_timestamp+0x210>
   18988:	b	189c8 <dta_parse_timestamp+0x208>
   1898c:	b	189e4 <dta_parse_timestamp+0x224>
   18990:	b	189ec <dta_parse_timestamp+0x22c>
   18994:	b	189f8 <dta_parse_timestamp+0x238>
   18998:	b	18a00 <dta_parse_timestamp+0x240>
   1899c:	b	18a08 <dta_parse_timestamp+0x248>
   189a0:	b	18a10 <dta_parse_timestamp+0x250>
   189a4:	b	18a18 <dta_parse_timestamp+0x258>
   189a8:	b	18a20 <dta_parse_timestamp+0x260>
   189ac:	b	18a28 <dta_parse_timestamp+0x268>
   189b0:	b	18a30 <dta_parse_timestamp+0x270>
   189b4:	b	18a38 <dta_parse_timestamp+0x278>
   189b8:	b	18a40 <dta_parse_timestamp+0x280>
   189bc:	b	18a48 <dta_parse_timestamp+0x288>
   189c0:	b	18a50 <dta_parse_timestamp+0x290>
   189c4:	b	18a60 <dta_parse_timestamp+0x2a0>
   189c8:	mov	r4, #0
   189cc:	b	188b4 <dta_parse_timestamp+0xf4>
   189d0:	ldrb	r5, [r3]
   189d4:	mov	r8, #10
   189d8:	sub	r5, r5, #48	; 0x30
   189dc:	mla	r4, r8, r4, r5
   189e0:	b	188b4 <dta_parse_timestamp+0xf4>
   189e4:	str	r4, [r2, #12]
   189e8:	b	188b4 <dta_parse_timestamp+0xf4>
   189ec:	mov	r5, #0
   189f0:	str	r5, [r2, #16]
   189f4:	b	188b4 <dta_parse_timestamp+0xf4>
   189f8:	mov	r5, #1
   189fc:	b	189f0 <dta_parse_timestamp+0x230>
   18a00:	mov	r5, #2
   18a04:	b	189f0 <dta_parse_timestamp+0x230>
   18a08:	str	sl, [r2, #16]
   18a0c:	b	188b4 <dta_parse_timestamp+0xf4>
   18a10:	str	r9, [r2, #16]
   18a14:	b	188b4 <dta_parse_timestamp+0xf4>
   18a18:	str	r7, [r2, #16]
   18a1c:	b	188b4 <dta_parse_timestamp+0xf4>
   18a20:	str	r6, [r2, #16]
   18a24:	b	188b4 <dta_parse_timestamp+0xf4>
   18a28:	mov	r5, #7
   18a2c:	b	189f0 <dta_parse_timestamp+0x230>
   18a30:	mov	r5, #8
   18a34:	b	189f0 <dta_parse_timestamp+0x230>
   18a38:	mov	r5, #9
   18a3c:	b	189f0 <dta_parse_timestamp+0x230>
   18a40:	mov	r5, #10
   18a44:	b	189f0 <dta_parse_timestamp+0x230>
   18a48:	mov	r5, #11
   18a4c:	b	189f0 <dta_parse_timestamp+0x230>
   18a50:	sub	r5, r4, #1888	; 0x760
   18a54:	sub	r5, r5, #12
   18a58:	str	r5, [r2, #20]
   18a5c:	b	188b4 <dta_parse_timestamp+0xf4>
   18a60:	str	r4, [r2, #8]
   18a64:	b	188b4 <dta_parse_timestamp+0xf4>
   18a68:	ldrb	r5, [ip], #1
   18a6c:	cmp	r5, #17
   18a70:	streq	r4, [r2, #4]
   18a74:	subs	r1, r1, #1
   18a78:	bcs	18a68 <dta_parse_timestamp+0x2a8>
   18a7c:	ldr	r2, [sp, #8]
   18a80:	subs	r3, r3, r2
   18a84:	movne	r3, #1
   18a88:	cmp	lr, #43	; 0x2b
   18a8c:	movgt	lr, r3
   18a90:	orrle	lr, r3, #1
   18a94:	cmp	lr, #0
   18a98:	moveq	r0, lr
   18a9c:	beq	18ae4 <dta_parse_timestamp+0x324>
   18aa0:	ldr	r3, [sp, #16]
   18aa4:	cmp	r3, #0
   18aa8:	beq	18ae0 <dta_parse_timestamp+0x320>
   18aac:	mov	r5, r3
   18ab0:	ldr	r2, [pc, #68]	; 18afc <dta_parse_timestamp+0x33c>
   18ab4:	add	r4, sp, #32
   18ab8:	mov	r1, #1024	; 0x400
   18abc:	str	r0, [sp, #4]
   18ac0:	mov	r0, r4
   18ac4:	ldr	r3, [sp, #12]
   18ac8:	add	r2, pc, r2
   18acc:	str	r3, [sp]
   18ad0:	bl	4294 <snprintf@plt>
   18ad4:	mov	r0, r4
   18ad8:	ldr	r1, [sp, #1096]	; 0x448
   18adc:	blx	r5
   18ae0:	mov	r0, #29
   18ae4:	add	sp, sp, #1056	; 0x420
   18ae8:	add	sp, sp, #4
   18aec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18af0:	.word	0x0000a005
   18af4:	.word	0x0000a001
   18af8:	.word	0x00009f25
   18afc:	.word	0x00009fc3

00018b00 <dta_update_progress>:
   18b00:	push	{r4, r6, r7, lr}
   18b04:	mov	r4, r0
   18b08:	ldrd	r6, [r0, #168]	; 0xa8
   18b0c:	vpush	{d8}
   18b10:	cmp	r6, #1
   18b14:	sbcs	r3, r7, #0
   18b18:	vldrlt	d0, [pc, #80]	; 18b70 <dta_update_progress+0x70>
   18b1c:	blt	18b40 <dta_update_progress+0x40>
   18b20:	ldrd	r0, [r0, #184]	; 0xb8
   18b24:	bl	200b8 <__aeabi_l2d>
   18b28:	vmov	d8, r0, r1
   18b2c:	mov	r0, r6
   18b30:	mov	r1, r7
   18b34:	bl	200b8 <__aeabi_l2d>
   18b38:	vmov	d7, r0, r1
   18b3c:	vdiv.f64	d0, d8, d7
   18b40:	ldr	r3, [r4, #268]	; 0x10c
   18b44:	cmp	r3, #0
   18b48:	bne	18b58 <dta_update_progress+0x58>
   18b4c:	mov	r0, #0
   18b50:	vpop	{d8}
   18b54:	pop	{r4, r6, r7, pc}
   18b58:	ldr	r0, [r4, #276]	; 0x114
   18b5c:	blx	r3
   18b60:	cmp	r0, #0
   18b64:	beq	18b4c <dta_update_progress+0x4c>
   18b68:	mov	r0, #4
   18b6c:	b	18b50 <dta_update_progress+0x50>
	...

00018b78 <dta_compare_strls>:
   18b78:	ldr	r1, [r1]
   18b7c:	ldrh	r3, [r0]
   18b80:	ldrh	r2, [r1]
   18b84:	cmp	r3, r2
   18b88:	ldreq	r0, [r0, #8]
   18b8c:	ldreq	r3, [r1, #8]
   18b90:	subeq	r0, r0, r3
   18b94:	subne	r0, r3, r2
   18b98:	bx	lr

00018b9c <dta_read_tag>:
   18b9c:	ldr	r3, [r0, #284]	; 0x11c
   18ba0:	cmp	r3, #0
   18ba4:	beq	18bbc <dta_read_tag+0x20>
   18ba8:	ldrb	r3, [r0, #192]	; 0xc0
   18bac:	tst	r3, #4
   18bb0:	bne	18bbc <dta_read_tag+0x20>
   18bb4:	mov	r0, #0
   18bb8:	bx	lr
   18bbc:	push	{r4, r5, r6, r7, lr}
   18bc0:	mov	r4, r0
   18bc4:	sub	sp, sp, #260	; 0x104
   18bc8:	mov	r0, r1
   18bcc:	mov	r5, r1
   18bd0:	bl	421c <strlen@plt>
   18bd4:	ldr	r3, [r4, #280]	; 0x118
   18bd8:	mov	r4, sp
   18bdc:	mov	r6, r0
   18be0:	mov	r1, r0
   18be4:	mov	r0, r4
   18be8:	ldr	r7, [r3, #12]
   18bec:	ldr	r2, [r3, #20]
   18bf0:	blx	r7
   18bf4:	cmp	r0, r6
   18bf8:	mov	r2, r0
   18bfc:	movne	r0, #2
   18c00:	bne	18c1c <dta_read_tag+0x80>
   18c04:	mov	r1, r5
   18c08:	mov	r0, r4
   18c0c:	bl	451c <strncmp@plt>
   18c10:	cmp	r0, #0
   18c14:	movne	r0, #5
   18c18:	moveq	r0, #0
   18c1c:	add	sp, sp, #260	; 0x104
   18c20:	pop	{r4, r5, r6, r7, pc}

00018c24 <dta_interpret_int32_bytes>:
   18c24:	push	{r4, r5, r6, lr}
   18c28:	mov	r5, r1
   18c2c:	mov	r4, r0
   18c30:	mov	r1, #0
   18c34:	mov	r0, #0
   18c38:	ldrb	r3, [r5, #192]	; 0xc0
   18c3c:	strd	r0, [r4]
   18c40:	strd	r0, [r4, #8]
   18c44:	ldr	r0, [r2]
   18c48:	tst	r3, #1
   18c4c:	beq	18c54 <dta_interpret_int32_bytes+0x30>
   18c50:	bl	3da8 <byteswap4@plt>
   18c54:	ldrb	r3, [r5, #192]	; 0xc0
   18c58:	tst	r3, #2
   18c5c:	beq	18c64 <dta_interpret_int32_bytes+0x40>
   18c60:	bl	3f10 <ones_to_twos_complement4@plt>
   18c64:	ldr	r3, [r5, #196]	; 0xc4
   18c68:	cmp	r3, r0
   18c6c:	bge	18c9c <dta_interpret_int32_bytes+0x78>
   18c70:	ldrb	r2, [r5, #192]	; 0xc0
   18c74:	cmn	r0, #-2147483621	; 0x8000001b
   18c78:	movle	r3, #0
   18c7c:	movgt	r3, #1
   18c80:	ands	r3, r3, r2, lsr #3
   18c84:	addne	r2, r0, #123	; 0x7b
   18c88:	movne	r1, #0
   18c8c:	uxtbne	r2, r2
   18c90:	bne	18ca8 <dta_interpret_int32_bytes+0x84>
   18c94:	mov	r1, #1
   18c98:	b	18ca4 <dta_interpret_int32_bytes+0x80>
   18c9c:	mov	r3, #0
   18ca0:	mov	r1, r3
   18ca4:	mov	r2, r3
   18ca8:	str	r0, [r4]
   18cac:	mov	r0, #3
   18cb0:	strb	r2, [r4, #12]
   18cb4:	ldrb	r2, [r4, #13]
   18cb8:	str	r0, [r4, #8]
   18cbc:	mov	r0, r4
   18cc0:	bfi	r2, r1, #0, #1
   18cc4:	bfi	r2, r3, #1, #1
   18cc8:	strb	r2, [r4, #13]
   18ccc:	pop	{r4, r5, r6, pc}

00018cd0 <dta_handle_row>:
   18cd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18cd4:	mov	fp, #0
   18cd8:	mov	sl, r0
   18cdc:	mov	r4, r1
   18ce0:	vpush	{d8}
   18ce4:	sub	sp, sp, #2208	; 0x8a0
   18ce8:	vldr	d8, [pc, #920]	; 19088 <dta_handle_row+0x3b8>
   18cec:	sub	sp, sp, #12
   18cf0:	str	fp, [sp, #20]
   18cf4:	ldr	r2, [sp, #20]
   18cf8:	ldr	r3, [r4, #148]	; 0x94
   18cfc:	cmp	r3, r2
   18d00:	movle	r0, #0
   18d04:	ble	192dc <dta_handle_row+0x60c>
   18d08:	ldr	r2, [sp, #20]
   18d0c:	add	r5, sp, #88	; 0x58
   18d10:	mov	r6, #0
   18d14:	mov	r7, #0
   18d18:	mov	r3, r5
   18d1c:	ldr	ip, [r4, #28]
   18d20:	add	r8, sp, #72	; 0x48
   18d24:	mov	r1, r4
   18d28:	strd	r6, [r3, #8]!
   18d2c:	strd	r6, [r5]
   18d30:	lsl	r0, r2, #1
   18d34:	sub	r2, r8, #4
   18d38:	ldrh	r0, [ip, r0]
   18d3c:	bl	4204 <dta_type_info@plt>
   18d40:	cmp	r0, #0
   18d44:	bne	192dc <dta_handle_row+0x60c>
   18d48:	ldr	r1, [sp, #20]
   18d4c:	ldr	r2, [r4, #228]	; 0xe4
   18d50:	ldr	r3, [sp, #20]
   18d54:	ldr	ip, [sp, #68]	; 0x44
   18d58:	ldr	r2, [r2, r1, lsl #2]
   18d5c:	lsl	r3, r3, #2
   18d60:	str	r3, [sp, #44]	; 0x2c
   18d64:	add	r3, ip, fp
   18d68:	ldr	r9, [r2, #2144]	; 0x860
   18d6c:	cmp	r9, #0
   18d70:	movne	fp, r3
   18d74:	bne	18f30 <dta_handle_row+0x260>
   18d78:	ldr	r2, [r4, #160]	; 0xa0
   18d7c:	cmp	r2, r3
   18d80:	bcc	192d8 <dta_handle_row+0x608>
   18d84:	ldr	r3, [sp, #96]	; 0x60
   18d88:	cmp	r3, #0
   18d8c:	addeq	r2, sl, fp
   18d90:	moveq	r1, r2
   18d94:	beq	18eb4 <dta_handle_row+0x1e4>
   18d98:	cmp	r3, #6
   18d9c:	bne	18ff0 <dta_handle_row+0x320>
   18da0:	mov	r2, #32
   18da4:	mov	r1, r9
   18da8:	add	r0, sp, #136	; 0x88
   18dac:	add	r8, sl, fp
   18db0:	bl	42b8 <memset@plt>
   18db4:	ldr	r3, [r4, #112]	; 0x70
   18db8:	cmp	r3, #2
   18dbc:	bne	18f94 <dta_handle_row+0x2c4>
   18dc0:	ldrb	r2, [r8, #3]
   18dc4:	mov	r7, #0
   18dc8:	ldrb	r3, [r8, #1]
   18dcc:	ldrb	r1, [r8, #2]
   18dd0:	str	r2, [sp, #40]	; 0x28
   18dd4:	ldrb	r0, [r8, #4]
   18dd8:	ldrb	ip, [r8, #6]
   18ddc:	ldrb	r6, [r8, #7]
   18de0:	ldrb	r2, [r8, #5]
   18de4:	ldr	r8, [r4, #232]	; 0xe8
   18de8:	ldrb	r5, [sl, fp]
   18dec:	cmp	r8, #2
   18df0:	bne	18f40 <dta_handle_row+0x270>
   18df4:	lsl	r8, r1, #8
   18df8:	adds	r1, r9, r9
   18dfc:	ldr	r9, [sp, #40]	; 0x28
   18e00:	uxtb	r0, r0
   18e04:	add	r5, r3, r5, lsl #8
   18e08:	mov	r3, r6
   18e0c:	lsr	r6, r0, #8
   18e10:	lsl	r2, r2, #16
   18e14:	uxth	r5, r5
   18e18:	lsl	ip, ip, #8
   18e1c:	adc	r8, r8, r9
   18e20:	adds	lr, r1, r3
   18e24:	lsl	r1, r0, #24
   18e28:	adc	r8, r8, r7
   18e2c:	adds	r3, lr, r1
   18e30:	str	r3, [sp, #24]
   18e34:	adc	r3, r8, r6
   18e38:	str	r3, [sp, #28]
   18e3c:	ldrd	r6, [sp, #24]
   18e40:	adds	r6, r6, r2
   18e44:	adc	r7, r7, r2, asr #31
   18e48:	adds	r0, r6, ip
   18e4c:	adc	r1, r7, ip, asr #31
   18e50:	add	r3, sp, #136	; 0x88
   18e54:	strh	r5, [sp, #136]	; 0x88
   18e58:	add	ip, sp, #104	; 0x68
   18e5c:	mov	lr, r3
   18e60:	strd	r0, [sp, #144]	; 0x90
   18e64:	ldm	lr!, {r0, r1, r2, r3}
   18e68:	stmia	ip!, {r0, r1, r2, r3}
   18e6c:	ldm	lr, {r0, r1, r2, r3}
   18e70:	stm	ip, {r0, r1, r2, r3}
   18e74:	add	r0, sp, #104	; 0x68
   18e78:	ldr	r3, [pc, #528]	; 19090 <dta_handle_row+0x3c0>
   18e7c:	ldr	r1, [r4, #216]	; 0xd8
   18e80:	ldr	r2, [r4, #220]	; 0xdc
   18e84:	add	r3, pc, r3
   18e88:	str	r3, [sp]
   18e8c:	mov	r3, #4
   18e90:	bl	42c4 <bsearch@plt>
   18e94:	cmp	r0, #0
   18e98:	ldrne	r3, [r0]
   18e9c:	addne	r3, r3, #24
   18ea0:	strne	r3, [sp, #88]	; 0x58
   18ea4:	mov	r3, #0
   18ea8:	str	r3, [sp, #96]	; 0x60
   18eac:	b	18eec <dta_handle_row+0x21c>
   18eb0:	add	r3, r3, #1
   18eb4:	cmp	r3, ip
   18eb8:	beq	18ec8 <dta_handle_row+0x1f8>
   18ebc:	ldrb	r0, [r1], #1
   18ec0:	cmp	r0, #0
   18ec4:	bne	18eb0 <dta_handle_row+0x1e0>
   18ec8:	ldr	r1, [r4, #236]	; 0xec
   18ecc:	add	r5, sp, #168	; 0xa8
   18ed0:	mov	r0, r5
   18ed4:	str	r1, [sp]
   18ed8:	mov	r1, #2048	; 0x800
   18edc:	bl	424c <readstat_convert@plt>
   18ee0:	cmp	r0, #0
   18ee4:	bne	192dc <dta_handle_row+0x60c>
   18ee8:	str	r5, [sp, #88]	; 0x58
   18eec:	ldr	ip, [r4, #228]	; 0xe4
   18ef0:	ldr	r3, [r4, #276]	; 0x114
   18ef4:	ldr	r5, [r4, #256]	; 0x100
   18ef8:	str	r3, [sp, #8]
   18efc:	add	r3, sp, #96	; 0x60
   18f00:	ldm	r3, {r0, r1}
   18f04:	add	r3, sp, #88	; 0x58
   18f08:	stm	sp, {r0, r1}
   18f0c:	ldr	r1, [sp, #44]	; 0x2c
   18f10:	ldm	r3, {r2, r3}
   18f14:	ldr	r0, [r4, #184]	; 0xb8
   18f18:	ldr	r1, [ip, r1]
   18f1c:	blx	r5
   18f20:	cmp	r0, #0
   18f24:	bne	192ec <dta_handle_row+0x61c>
   18f28:	ldr	r3, [sp, #68]	; 0x44
   18f2c:	add	fp, fp, r3
   18f30:	ldr	r3, [sp, #20]
   18f34:	add	r3, r3, #1
   18f38:	str	r3, [sp, #20]
   18f3c:	b	18cf4 <dta_handle_row+0x24>
   18f40:	uxtb	r2, r2
   18f44:	add	r5, r5, r3, lsl #8
   18f48:	lsl	r3, r2, #24
   18f4c:	lsr	r8, r2, #8
   18f50:	uxth	r5, r5
   18f54:	adds	r3, r3, r9
   18f58:	lsl	r6, r6, #8
   18f5c:	adc	r2, r8, ip
   18f60:	adds	r3, r3, r9
   18f64:	str	r3, [sp, #32]
   18f68:	adc	r3, r2, r6
   18f6c:	str	r3, [sp, #36]	; 0x24
   18f70:	ldrd	r6, [sp, #32]
   18f74:	ldr	r3, [sp, #40]	; 0x28
   18f78:	add	r1, r1, r3, lsl #8
   18f7c:	add	r0, r1, r0, lsl #16
   18f80:	adds	r6, r6, r0
   18f84:	adc	r7, r7, r0, asr #31
   18f88:	mov	r0, r6
   18f8c:	mov	r1, r7
   18f90:	b	18e50 <dta_handle_row+0x180>
   18f94:	cmp	r3, #4
   18f98:	movne	r0, r6
   18f9c:	movne	r1, r7
   18fa0:	movne	r5, r9
   18fa4:	bne	18e50 <dta_handle_row+0x180>
   18fa8:	ldrb	r3, [r4, #192]	; 0xc0
   18fac:	ldr	r0, [r8]
   18fb0:	ldr	r6, [r8, #4]
   18fb4:	tst	r3, #1
   18fb8:	uxtheq	r5, r0
   18fbc:	beq	18fd4 <dta_handle_row+0x304>
   18fc0:	bl	3da8 <byteswap4@plt>
   18fc4:	ldrb	r3, [r4, #192]	; 0xc0
   18fc8:	uxth	r5, r0
   18fcc:	tst	r3, #1
   18fd0:	bne	18fe0 <dta_handle_row+0x310>
   18fd4:	mov	r0, r6
   18fd8:	mov	r1, #0
   18fdc:	b	18e50 <dta_handle_row+0x180>
   18fe0:	mov	r0, r6
   18fe4:	bl	3da8 <byteswap4@plt>
   18fe8:	mov	r6, r0
   18fec:	b	18fd4 <dta_handle_row+0x304>
   18ff0:	cmp	r3, #1
   18ff4:	add	r9, sp, #104	; 0x68
   18ff8:	bne	190a0 <dta_handle_row+0x3d0>
   18ffc:	ldrb	r3, [r4, #192]	; 0xc0
   19000:	strd	r6, [r9]
   19004:	ldrb	r0, [sl, fp]
   19008:	strd	r6, [r9, #8]
   1900c:	tst	r3, #2
   19010:	bne	19050 <dta_handle_row+0x380>
   19014:	ldrsb	r3, [r4, #193]	; 0xc1
   19018:	sxtb	r0, r0
   1901c:	cmp	r3, r0
   19020:	bge	19058 <dta_handle_row+0x388>
   19024:	ldrb	r3, [r4, #192]	; 0xc0
   19028:	cmp	r0, #101	; 0x65
   1902c:	movle	r2, #0
   19030:	movgt	r2, #1
   19034:	ands	r2, r2, r3, lsr #3
   19038:	subne	r3, r0, #5
   1903c:	movne	r1, #0
   19040:	uxtbne	r3, r3
   19044:	bne	19064 <dta_handle_row+0x394>
   19048:	mov	r1, #1
   1904c:	b	19060 <dta_handle_row+0x390>
   19050:	bl	4390 <ones_to_twos_complement1@plt>
   19054:	b	19014 <dta_handle_row+0x344>
   19058:	mov	r2, #0
   1905c:	mov	r1, r2
   19060:	mov	r3, r2
   19064:	strb	r0, [sp, #104]	; 0x68
   19068:	mov	r0, #1
   1906c:	str	r0, [sp, #112]	; 0x70
   19070:	strb	r3, [sp, #116]	; 0x74
   19074:	ldrb	r3, [sp, #117]	; 0x75
   19078:	bfi	r3, r1, #0, #1
   1907c:	bfi	r3, r2, #1, #1
   19080:	strb	r3, [sp, #117]	; 0x75
   19084:	b	191f0 <dta_handle_row+0x520>
   19088:	.word	0x00000000
   1908c:	.word	0x7ff80000
   19090:	.word	0xfffffcec
   19094:	.word	0x7fc00000
   19098:	.word	0x7fe00000
   1909c:	.word	0x801fff00
   190a0:	cmp	r3, #2
   190a4:	bne	19130 <dta_handle_row+0x460>
   190a8:	ldrb	r3, [r4, #192]	; 0xc0
   190ac:	strd	r6, [r9]
   190b0:	ldrh	r0, [sl, fp]
   190b4:	strd	r6, [r9, #8]
   190b8:	tst	r3, #1
   190bc:	bne	19110 <dta_handle_row+0x440>
   190c0:	ldrb	r3, [r4, #192]	; 0xc0
   190c4:	sxth	r0, r0
   190c8:	tst	r3, #2
   190cc:	beq	190d4 <dta_handle_row+0x404>
   190d0:	bl	3f1c <ones_to_twos_complement2@plt>
   190d4:	ldrsh	r3, [r4, #194]	; 0xc2
   190d8:	cmp	r3, r0
   190dc:	bge	19118 <dta_handle_row+0x448>
   190e0:	ldrb	r2, [r4, #192]	; 0xc0
   190e4:	movw	r3, #32741	; 0x7fe5
   190e8:	cmp	r0, r3
   190ec:	movle	r3, #0
   190f0:	movgt	r3, #1
   190f4:	ands	r2, r3, r2, lsr #3
   190f8:	addne	r3, r0, #123	; 0x7b
   190fc:	movne	r1, #0
   19100:	uxtbne	r3, r3
   19104:	bne	19124 <dta_handle_row+0x454>
   19108:	mov	r1, #1
   1910c:	b	19120 <dta_handle_row+0x450>
   19110:	bl	3ebc <byteswap2@plt>
   19114:	b	190c0 <dta_handle_row+0x3f0>
   19118:	mov	r2, #0
   1911c:	mov	r1, r2
   19120:	mov	r3, r2
   19124:	strh	r0, [r9]
   19128:	mov	r0, #2
   1912c:	b	1906c <dta_handle_row+0x39c>
   19130:	cmp	r3, #3
   19134:	bne	19158 <dta_handle_row+0x488>
   19138:	add	r6, sp, #48	; 0x30
   1913c:	add	r2, sl, fp
   19140:	mov	r1, r4
   19144:	mov	r0, r6
   19148:	bl	18c24 <dta_interpret_int32_bytes>
   1914c:	ldm	r6, {r0, r1, r2, r3}
   19150:	stm	r5, {r0, r1, r2, r3}
   19154:	b	18eec <dta_handle_row+0x21c>
   19158:	cmp	r3, #4
   1915c:	bne	19214 <dta_handle_row+0x544>
   19160:	mov	r3, #0
   19164:	mov	r2, #0
   19168:	ldr	r0, [sl, fp]
   1916c:	strd	r2, [r9]
   19170:	strd	r2, [r9, #8]
   19174:	ldr	r3, [pc, #-232]	; 19094 <dta_handle_row+0x3c4>
   19178:	str	r3, [r5, #-8]
   1917c:	ldrb	r3, [r4, #192]	; 0xc0
   19180:	tst	r3, #1
   19184:	beq	1918c <dta_handle_row+0x4bc>
   19188:	bl	3da8 <byteswap4@plt>
   1918c:	ldr	r3, [r4, #200]	; 0xc8
   19190:	cmp	r3, r0
   19194:	bge	19200 <dta_handle_row+0x530>
   19198:	ldrb	r2, [r4, #192]	; 0xc0
   1919c:	cmp	r0, #2130706432	; 0x7f000000
   191a0:	movle	r3, #0
   191a4:	movgt	r3, #1
   191a8:	ands	r3, r3, r2, lsr #3
   191ac:	moveq	r1, #1
   191b0:	beq	1920c <dta_handle_row+0x53c>
   191b4:	add	r0, r0, #-2130706432	; 0x81000000
   191b8:	mov	r1, #0
   191bc:	sub	r0, r0, #2048	; 0x800
   191c0:	asr	r0, r0, #11
   191c4:	add	r0, r0, #97	; 0x61
   191c8:	uxtb	r0, r0
   191cc:	ldr	r2, [r5, #-8]
   191d0:	str	r2, [r9]
   191d4:	mov	r2, #4
   191d8:	str	r2, [sp, #112]	; 0x70
   191dc:	ldrb	r2, [sp, #117]	; 0x75
   191e0:	strb	r0, [sp, #116]	; 0x74
   191e4:	bfi	r2, r1, #0, #1
   191e8:	bfi	r2, r3, #1, #1
   191ec:	strb	r2, [sp, #117]	; 0x75
   191f0:	ldm	r9, {r0, r1, r2, r3}
   191f4:	add	ip, sp, #136	; 0x88
   191f8:	stm	ip, {r0, r1, r2, r3}
   191fc:	b	19150 <dta_handle_row+0x480>
   19200:	mov	r3, #0
   19204:	str	r0, [sp, #80]	; 0x50
   19208:	mov	r1, r3
   1920c:	mov	r0, r3
   19210:	b	191cc <dta_handle_row+0x4fc>
   19214:	cmp	r3, #5
   19218:	bne	18eec <dta_handle_row+0x21c>
   1921c:	mov	r2, #0
   19220:	mov	r3, #0
   19224:	vstr	d8, [r8]
   19228:	strd	r2, [r9]
   1922c:	strd	r2, [r9, #8]
   19230:	add	r3, sl, fp
   19234:	sub	r2, r5, #8
   19238:	ldr	r0, [r3]
   1923c:	ldr	r1, [r3, #4]
   19240:	ldrb	r3, [r4, #192]	; 0xc0
   19244:	stmia	r2!, {r0, r1}
   19248:	tst	r3, #1
   1924c:	beq	1925c <dta_handle_row+0x58c>
   19250:	ldrd	r0, [r5, #-8]
   19254:	bl	3d90 <byteswap8@plt>
   19258:	strd	r0, [r5, #-8]
   1925c:	ldrd	r0, [r5, #-8]
   19260:	ldrd	r2, [r4, #208]	; 0xd0
   19264:	cmp	r2, r0
   19268:	sbcs	r3, r3, r1
   1926c:	bge	192c4 <dta_handle_row+0x5f4>
   19270:	ldr	r7, [pc, #-480]	; 19098 <dta_handle_row+0x3c8>
   19274:	mov	r6, #0
   19278:	cmp	r6, r0
   1927c:	ldrb	r3, [r4, #192]	; 0xc0
   19280:	sbcs	r2, r7, r1
   19284:	movlt	r2, #1
   19288:	movge	r2, #0
   1928c:	ands	r2, r2, r3, lsr #3
   19290:	moveq	r1, #1
   19294:	beq	192d0 <dta_handle_row+0x600>
   19298:	adds	r3, r0, #0
   1929c:	ldr	r3, [pc, #-520]	; 1909c <dta_handle_row+0x3cc>
   192a0:	adc	r3, r1, r3
   192a4:	mov	r1, #0
   192a8:	asr	r3, r3, #8
   192ac:	add	r3, r3, #97	; 0x61
   192b0:	uxtb	r3, r3
   192b4:	ldrd	r6, [r8]
   192b8:	mov	r0, #5
   192bc:	strd	r6, [r9]
   192c0:	b	1906c <dta_handle_row+0x39c>
   192c4:	mov	r2, #0
   192c8:	strd	r0, [r8]
   192cc:	mov	r1, r2
   192d0:	mov	r3, r2
   192d4:	b	192b4 <dta_handle_row+0x5e4>
   192d8:	mov	r0, #5
   192dc:	add	sp, sp, #2208	; 0x8a0
   192e0:	add	sp, sp, #12
   192e4:	vpop	{d8}
   192e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   192ec:	mov	r0, #4
   192f0:	b	192dc <dta_handle_row+0x60c>

000192f4 <dta_read_chunk>:
   192f4:	push	{r4, r5, r6, r7, r8, lr}
   192f8:	mov	r4, r0
   192fc:	mov	r8, r2
   19300:	mov	r5, r3
   19304:	ldr	r7, [sp, #24]
   19308:	ldr	r6, [r0, #280]	; 0x118
   1930c:	bl	18b9c <dta_read_tag>
   19310:	cmp	r0, #0
   19314:	popne	{r4, r5, r6, r7, r8, pc}
   19318:	mov	r1, r5
   1931c:	mov	r0, r8
   19320:	ldr	r3, [r6, #12]
   19324:	ldr	r2, [r6, #20]
   19328:	blx	r3
   1932c:	cmp	r0, r5
   19330:	bne	19344 <dta_read_chunk+0x50>
   19334:	mov	r1, r7
   19338:	mov	r0, r4
   1933c:	pop	{r4, r5, r6, r7, r8, lr}
   19340:	b	18b9c <dta_read_tag>
   19344:	mov	r0, #2
   19348:	pop	{r4, r5, r6, r7, r8, pc}

0001934c <readstat_parse_dta>:
   1934c:	ldr	r3, [r0, #32]
   19350:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19354:	sub	sp, sp, #268	; 0x10c
   19358:	mov	r6, r0
   1935c:	mov	r5, r1
   19360:	mov	r0, r3
   19364:	str	r3, [sp, #20]
   19368:	str	r2, [sp, #48]	; 0x30
   1936c:	bl	457c <dta_ctx_alloc@plt>
   19370:	ldr	r3, [sp, #20]
   19374:	mov	r4, r0
   19378:	mov	r0, r5
   1937c:	ldr	r2, [sp, #20]
   19380:	ldr	r3, [r3]
   19384:	ldr	r1, [r2, #20]
   19388:	blx	r3
   1938c:	cmn	r0, #1
   19390:	moveq	r5, #1
   19394:	beq	193fc <readstat_parse_dta+0xb0>
   19398:	ldr	r3, [sp, #20]
   1939c:	add	r5, sp, #68	; 0x44
   193a0:	mov	r1, #4
   193a4:	mov	r0, r5
   193a8:	ldr	r2, [sp, #20]
   193ac:	ldr	r3, [r3, #12]
   193b0:	ldr	r2, [r2, #20]
   193b4:	blx	r3
   193b8:	cmp	r0, #4
   193bc:	mov	r7, r0
   193c0:	bne	19a24 <readstat_parse_dta+0x6d8>
   193c4:	ldr	r3, [sp, #20]
   193c8:	mov	r1, #2
   193cc:	mov	r0, #0
   193d0:	ldr	r2, [sp, #20]
   193d4:	ldr	r3, [r3, #8]
   193d8:	ldr	r2, [r2, #20]
   193dc:	blx	r3
   193e0:	cmn	r0, #1
   193e4:	str	r0, [sp, #44]	; 0x2c
   193e8:	bne	1944c <readstat_parse_dta+0x100>
   193ec:	ldr	r5, [r4, #264]	; 0x108
   193f0:	cmp	r5, #0
   193f4:	bne	1942c <readstat_parse_dta+0xe0>
   193f8:	mov	r5, #15
   193fc:	ldr	r3, [sp, #20]
   19400:	ldr	r2, [sp, #20]
   19404:	ldr	r3, [r3, #4]
   19408:	ldr	r0, [r2, #20]
   1940c:	blx	r3
   19410:	cmp	r4, #0
   19414:	beq	19420 <readstat_parse_dta+0xd4>
   19418:	mov	r0, r4
   1941c:	bl	3e8c <dta_ctx_free@plt>
   19420:	mov	r0, r5
   19424:	add	sp, sp, #268	; 0x10c
   19428:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1942c:	ldr	r1, [pc, #3996]	; 1a3d0 <readstat_parse_dta+0x1084>
   19430:	add	r3, r4, #288	; 0x120
   19434:	add	r1, pc, r1
   19438:	mov	r0, r3
   1943c:	bl	40b4 <strcpy@plt>
   19440:	ldr	r1, [r4, #276]	; 0x114
   19444:	blx	r5
   19448:	b	193f8 <readstat_parse_dta+0xac>
   1944c:	ldr	r3, [sp, #20]
   19450:	mov	r1, #0
   19454:	mov	r0, r1
   19458:	ldr	r2, [sp, #20]
   1945c:	ldr	r3, [r3, #8]
   19460:	ldr	r2, [r2, #20]
   19464:	blx	r3
   19468:	cmn	r0, #1
   1946c:	bne	1948c <readstat_parse_dta+0x140>
   19470:	ldr	r5, [r4, #264]	; 0x108
   19474:	cmp	r5, #0
   19478:	beq	193f8 <readstat_parse_dta+0xac>
   1947c:	ldr	r1, [pc, #3920]	; 1a3d4 <readstat_parse_dta+0x1088>
   19480:	add	r3, r4, #288	; 0x120
   19484:	add	r1, pc, r1
   19488:	b	19438 <readstat_parse_dta+0xec>
   1948c:	ldr	r1, [pc, #3908]	; 1a3d8 <readstat_parse_dta+0x108c>
   19490:	mov	r2, r7
   19494:	mov	r0, r5
   19498:	add	r1, pc, r1
   1949c:	bl	451c <strncmp@plt>
   194a0:	cmp	r0, #0
   194a4:	bne	1996c <readstat_parse_dta+0x620>
   194a8:	ldr	r1, [pc, #3884]	; 1a3dc <readstat_parse_dta+0x1090>
   194ac:	mov	r0, r4
   194b0:	add	r1, pc, r1
   194b4:	bl	18b9c <dta_read_tag>
   194b8:	subs	r5, r0, #0
   194bc:	bne	193fc <readstat_parse_dta+0xb0>
   194c0:	ldr	r1, [pc, #3864]	; 1a3e0 <readstat_parse_dta+0x1094>
   194c4:	mov	r0, r4
   194c8:	add	r1, pc, r1
   194cc:	bl	18b9c <dta_read_tag>
   194d0:	subs	r5, r0, #0
   194d4:	bne	193fc <readstat_parse_dta+0xb0>
   194d8:	ldr	r3, [pc, #3844]	; 1a3e4 <readstat_parse_dta+0x1098>
   194dc:	add	r2, sp, #72	; 0x48
   194e0:	mov	r0, r4
   194e4:	ldr	r1, [pc, #3836]	; 1a3e8 <readstat_parse_dta+0x109c>
   194e8:	add	r3, pc, r3
   194ec:	add	r1, pc, r1
   194f0:	str	r3, [sp]
   194f4:	mov	r3, #3
   194f8:	bl	192f4 <dta_read_chunk>
   194fc:	subs	r5, r0, #0
   19500:	bne	193fc <readstat_parse_dta+0xb0>
   19504:	ldr	r3, [pc, #3808]	; 1a3ec <readstat_parse_dta+0x10a0>
   19508:	add	sl, sp, #88	; 0x58
   1950c:	mov	r0, r4
   19510:	mov	r2, sl
   19514:	ldr	r1, [pc, #3796]	; 1a3f0 <readstat_parse_dta+0x10a4>
   19518:	ldrb	r7, [sp, #72]	; 0x48
   1951c:	add	r3, pc, r3
   19520:	ldrb	r9, [sp, #73]	; 0x49
   19524:	add	r1, pc, r1
   19528:	str	r3, [sp]
   1952c:	mov	r3, #3
   19530:	ldrb	fp, [sp, #74]	; 0x4a
   19534:	bl	192f4 <dta_read_chunk>
   19538:	subs	r5, r0, #0
   1953c:	bne	193fc <readstat_parse_dta+0xb0>
   19540:	ldr	r1, [pc, #3756]	; 1a3f4 <readstat_parse_dta+0x10a8>
   19544:	mov	r2, #3
   19548:	mov	r0, sl
   1954c:	add	r1, pc, r1
   19550:	bl	451c <strncmp@plt>
   19554:	cmp	r0, #0
   19558:	beq	19584 <readstat_parse_dta+0x238>
   1955c:	ldr	r1, [pc, #3732]	; 1a3f8 <readstat_parse_dta+0x10ac>
   19560:	mov	r2, #3
   19564:	mov	r0, sl
   19568:	add	r1, pc, r1
   1956c:	bl	451c <strncmp@plt>
   19570:	cmp	r0, #0
   19574:	moveq	r3, #2
   19578:	beq	19588 <readstat_parse_dta+0x23c>
   1957c:	mov	r5, #5
   19580:	b	193fc <readstat_parse_dta+0xb0>
   19584:	mov	r3, #1
   19588:	sub	r7, r7, #48	; 0x30
   1958c:	str	r3, [sp, #40]	; 0x28
   19590:	sub	fp, fp, #48	; 0x30
   19594:	add	r7, r7, r7, lsl #2
   19598:	sub	r9, r9, #48	; 0x30
   1959c:	ldr	r3, [sp, #40]	; 0x28
   195a0:	add	r9, r9, r9, lsl #2
   195a4:	add	sl, sp, #128	; 0x80
   195a8:	add	r7, r7, r7, lsl #2
   195ac:	add	r7, fp, r7, lsl #2
   195b0:	add	fp, r7, r9, lsl #1
   195b4:	sub	r9, r3, #2
   195b8:	clz	r9, r9
   195bc:	uxtb	fp, fp
   195c0:	lsr	r9, r9, #5
   195c4:	bl	3ec8 <machine_is_little_endian@plt>
   195c8:	cmp	fp, #118	; 0x76
   195cc:	mov	r8, r0
   195d0:	bls	198e0 <readstat_parse_dta+0x594>
   195d4:	ldr	r3, [pc, #3616]	; 1a3fc <readstat_parse_dta+0x10b0>
   195d8:	mov	r2, sl
   195dc:	mov	r0, r4
   195e0:	ldr	r1, [pc, #3608]	; 1a400 <readstat_parse_dta+0x10b4>
   195e4:	add	r3, pc, r3
   195e8:	add	r1, pc, r1
   195ec:	str	r3, [sp]
   195f0:	mov	r3, #4
   195f4:	bl	192f4 <dta_read_chunk>
   195f8:	subs	r5, r0, #0
   195fc:	bne	193fc <readstat_parse_dta+0xb0>
   19600:	cmp	r9, r8
   19604:	ldr	r7, [sp, #128]	; 0x80
   19608:	beq	19618 <readstat_parse_dta+0x2cc>
   1960c:	mov	r0, r7
   19610:	bl	3da8 <byteswap4@plt>
   19614:	mov	r7, r0
   19618:	ldr	r3, [pc, #3556]	; 1a404 <readstat_parse_dta+0x10b8>
   1961c:	mov	r2, sl
   19620:	mov	r0, r4
   19624:	ldr	r1, [pc, #3548]	; 1a408 <readstat_parse_dta+0x10bc>
   19628:	add	r3, pc, r3
   1962c:	add	r1, pc, r1
   19630:	str	r3, [sp]
   19634:	mov	r3, #8
   19638:	bl	192f4 <dta_read_chunk>
   1963c:	subs	r5, r0, #0
   19640:	bne	193fc <readstat_parse_dta+0xb0>
   19644:	cmp	r9, r8
   19648:	ldrd	r0, [sp, #128]	; 0x80
   1964c:	beq	19654 <readstat_parse_dta+0x308>
   19650:	bl	3d90 <byteswap8@plt>
   19654:	ldr	r3, [r6, #40]	; 0x28
   19658:	mov	r2, r0
   1965c:	str	r3, [sp, #12]
   19660:	ldr	r3, [r6, #36]	; 0x24
   19664:	str	fp, [sp, #4]
   19668:	str	r3, [sp, #8]
   1966c:	ldr	r3, [sp, #40]	; 0x28
   19670:	str	r3, [sp]
   19674:	mov	r3, r1
   19678:	mov	r1, r7
   1967c:	mov	r0, r4
   19680:	bl	41ec <dta_ctx_init@plt>
   19684:	cmp	r0, #0
   19688:	mov	r5, r0
   1968c:	bne	193fc <readstat_parse_dta+0xb0>
   19690:	ldr	r3, [sp, #48]	; 0x30
   19694:	mov	lr, r6
   19698:	add	ip, r4, #240	; 0xf0
   1969c:	str	r3, [r4, #276]	; 0x114
   196a0:	ldr	r3, [sp, #44]	; 0x2c
   196a4:	str	r3, [r4, #272]	; 0x110
   196a8:	ldm	lr!, {r0, r1, r2, r3}
   196ac:	stmia	ip!, {r0, r1, r2, r3}
   196b0:	ldm	lr, {r0, r1, r2, r3}
   196b4:	stm	ip, {r0, r1, r2, r3}
   196b8:	ldr	r2, [r6, #48]	; 0x30
   196bc:	cmp	r2, #0
   196c0:	asrgt	r3, r2, #31
   196c4:	strdgt	r2, [r4, #176]	; 0xb0
   196c8:	ldr	r3, [r4, #152]	; 0x98
   196cc:	ldr	r2, [r4, #156]	; 0x9c
   196d0:	ldr	r1, [r4, #176]	; 0xb0
   196d4:	ldr	r0, [r4, #180]	; 0xb4
   196d8:	subs	r1, r3, r1
   196dc:	str	r1, [sp, #24]
   196e0:	sbc	r1, r2, r0
   196e4:	str	r1, [sp, #28]
   196e8:	ldrd	r0, [sp, #24]
   196ec:	cmp	r0, #0
   196f0:	sbcs	r1, r1, #0
   196f4:	bge	1970c <readstat_parse_dta+0x3c0>
   196f8:	str	r3, [r4, #176]	; 0xb0
   196fc:	mov	r3, #0
   19700:	str	r2, [r4, #180]	; 0xb4
   19704:	mov	r2, #0
   19708:	strd	r2, [sp, #24]
   1970c:	ldrd	r2, [sp, #24]
   19710:	strd	r2, [r4, #168]	; 0xa8
   19714:	ldr	r2, [r6, #44]	; 0x2c
   19718:	cmp	r2, #0
   1971c:	ble	19734 <readstat_parse_dta+0x3e8>
   19720:	ldrd	r0, [sp, #24]
   19724:	asr	r3, r2, #31
   19728:	cmp	r2, r0
   1972c:	sbcs	r1, r3, r1
   19730:	strdlt	r2, [r4, #168]	; 0xa8
   19734:	mov	r0, r4
   19738:	bl	18b00 <dta_update_progress>
   1973c:	subs	r5, r0, #0
   19740:	bne	193fc <readstat_parse_dta+0xb0>
   19744:	add	sl, sp, #128	; 0x80
   19748:	mov	r2, #44	; 0x2c
   1974c:	strb	r5, [sp, #67]	; 0x43
   19750:	mov	r1, r5
   19754:	mov	r0, sl
   19758:	ldr	r7, [r4, #280]	; 0x118
   1975c:	strh	r5, [sp, #88]	; 0x58
   19760:	bl	42b8 <memset@plt>
   19764:	mvn	r3, #0
   19768:	str	r3, [sp, #160]	; 0xa0
   1976c:	ldrb	r3, [r4, #192]	; 0xc0
   19770:	tst	r3, #4
   19774:	ldreq	r3, [r4, #4]
   19778:	beq	19a2c <readstat_parse_dta+0x6e0>
   1977c:	mov	r0, r4
   19780:	ldr	r1, [pc, #3204]	; 1a40c <readstat_parse_dta+0x10c0>
   19784:	add	r1, pc, r1
   19788:	bl	18b9c <dta_read_tag>
   1978c:	subs	r5, r0, #0
   19790:	bne	193fc <readstat_parse_dta+0xb0>
   19794:	ldr	r5, [r4, #8]
   19798:	cmp	r5, #2
   1979c:	bne	199fc <readstat_parse_dta+0x6b0>
   197a0:	mov	r1, r5
   197a4:	add	r0, sp, #88	; 0x58
   197a8:	ldr	r3, [r7, #12]
   197ac:	ldr	r2, [r7, #20]
   197b0:	blx	r3
   197b4:	cmp	r0, #2
   197b8:	bne	193fc <readstat_parse_dta+0xb0>
   197bc:	ldrb	r3, [r4, #192]	; 0xc0
   197c0:	ldrh	r0, [sp, #88]	; 0x58
   197c4:	tst	r3, #1
   197c8:	beq	197d0 <readstat_parse_dta+0x484>
   197cc:	bl	3ebc <byteswap2@plt>
   197d0:	strh	r0, [sp, #88]	; 0x58
   197d4:	ldrh	r0, [sp, #88]	; 0x58
   197d8:	add	r0, r0, #1
   197dc:	bl	4240 <readstat_malloc@plt>
   197e0:	subs	r8, r0, #0
   197e4:	beq	1a698 <readstat_parse_dta+0x134c>
   197e8:	ldrh	r1, [sp, #88]	; 0x58
   197ec:	ldr	r3, [r7, #12]
   197f0:	ldr	r2, [r7, #20]
   197f4:	blx	r3
   197f8:	ldrh	r3, [sp, #88]	; 0x58
   197fc:	cmp	r0, r3
   19800:	bne	198d4 <readstat_parse_dta+0x588>
   19804:	ldrb	r3, [r4, #192]	; 0xc0
   19808:	ands	r3, r3, #4
   1980c:	movne	r9, #0
   19810:	bne	1982c <readstat_parse_dta+0x4e0>
   19814:	add	r2, r8, r0
   19818:	ldrb	r9, [r2, #-1]
   1981c:	strb	r3, [r8, r0]
   19820:	mov	r0, r8
   19824:	bl	421c <strlen@plt>
   19828:	strh	r0, [sp, #88]	; 0x58
   1982c:	ldrh	r0, [sp, #88]	; 0x58
   19830:	lsl	r0, r0, #2
   19834:	add	r0, r0, #1
   19838:	bl	4240 <readstat_malloc@plt>
   1983c:	cmp	r0, #0
   19840:	mov	r6, r0
   19844:	str	r0, [r4]
   19848:	moveq	r5, #3
   1984c:	beq	19afc <readstat_parse_dta+0x7b0>
   19850:	ldrh	r3, [sp, #88]	; 0x58
   19854:	ldr	r2, [r4, #236]	; 0xec
   19858:	lsl	r1, r3, #2
   1985c:	add	r1, r1, #1
   19860:	str	r2, [sp]
   19864:	mov	r2, r8
   19868:	bl	424c <readstat_convert@plt>
   1986c:	subs	r5, r0, #0
   19870:	bne	1ad6c <readstat_parse_dta+0x1a20>
   19874:	ldrb	r3, [r4, #192]	; 0xc0
   19878:	tst	r3, #4
   1987c:	ldreq	r3, [r4, #16]
   19880:	strbeq	r3, [sp, #67]	; 0x43
   19884:	beq	19a34 <readstat_parse_dta+0x6e8>
   19888:	ldr	r1, [pc, #2944]	; 1a410 <readstat_parse_dta+0x10c4>
   1988c:	mov	r0, r4
   19890:	add	r1, pc, r1
   19894:	bl	18b9c <dta_read_tag>
   19898:	subs	r5, r0, #0
   1989c:	bne	1ad6c <readstat_parse_dta+0x1a20>
   198a0:	ldr	r1, [pc, #2924]	; 1a414 <readstat_parse_dta+0x10c8>
   198a4:	mov	r0, r4
   198a8:	add	r1, pc, r1
   198ac:	bl	18b9c <dta_read_tag>
   198b0:	subs	r5, r0, #0
   198b4:	bne	1ad6c <readstat_parse_dta+0x1a20>
   198b8:	mov	r1, #1
   198bc:	add	r0, sp, #67	; 0x43
   198c0:	ldr	r3, [r7, #12]
   198c4:	ldr	r2, [r7, #20]
   198c8:	blx	r3
   198cc:	cmp	r0, #1
   198d0:	beq	19a34 <readstat_parse_dta+0x6e8>
   198d4:	mov	r6, #0
   198d8:	mov	r5, #2
   198dc:	b	19afc <readstat_parse_dta+0x7b0>
   198e0:	ldr	r3, [pc, #2864]	; 1a418 <readstat_parse_dta+0x10cc>
   198e4:	mov	r2, sl
   198e8:	mov	r0, r4
   198ec:	ldr	r1, [pc, #2856]	; 1a41c <readstat_parse_dta+0x10d0>
   198f0:	add	r3, pc, r3
   198f4:	add	r1, pc, r1
   198f8:	str	r3, [sp]
   198fc:	mov	r3, #2
   19900:	bl	192f4 <dta_read_chunk>
   19904:	subs	r5, r0, #0
   19908:	bne	193fc <readstat_parse_dta+0xb0>
   1990c:	cmp	r9, r8
   19910:	ldrh	r0, [sp, #128]	; 0x80
   19914:	beq	1991c <readstat_parse_dta+0x5d0>
   19918:	bl	3ebc <byteswap2@plt>
   1991c:	cmp	fp, #118	; 0x76
   19920:	mov	r7, r0
   19924:	beq	19618 <readstat_parse_dta+0x2cc>
   19928:	ldr	r3, [pc, #2800]	; 1a420 <readstat_parse_dta+0x10d4>
   1992c:	mov	r2, sl
   19930:	mov	r0, r4
   19934:	ldr	r1, [pc, #2792]	; 1a424 <readstat_parse_dta+0x10d8>
   19938:	add	r3, pc, r3
   1993c:	add	r1, pc, r1
   19940:	str	r3, [sp]
   19944:	mov	r3, #4
   19948:	bl	192f4 <dta_read_chunk>
   1994c:	subs	r5, r0, #0
   19950:	bne	193fc <readstat_parse_dta+0xb0>
   19954:	cmp	r9, r8
   19958:	ldr	r0, [sp, #128]	; 0x80
   1995c:	beq	19964 <readstat_parse_dta+0x618>
   19960:	bl	3da8 <byteswap4@plt>
   19964:	mov	r1, #0
   19968:	b	19654 <readstat_parse_dta+0x308>
   1996c:	ldr	r2, [r4, #280]	; 0x118
   19970:	mov	r1, #10
   19974:	add	r0, sp, #128	; 0x80
   19978:	ldr	r3, [r2, #12]
   1997c:	ldr	r2, [r2, #20]
   19980:	blx	r3
   19984:	cmp	r0, #10
   19988:	bne	19a24 <readstat_parse_dta+0x6d8>
   1998c:	ldrb	r5, [sp, #129]	; 0x81
   19990:	bl	3ec8 <machine_is_little_endian@plt>
   19994:	mov	r7, r0
   19998:	sub	r5, r5, #2
   1999c:	clz	r5, r5
   199a0:	lsr	r5, r5, #5
   199a4:	cmp	r5, r0
   199a8:	ldrh	r0, [sp, #132]	; 0x84
   199ac:	beq	199b4 <readstat_parse_dta+0x668>
   199b0:	bl	3ebc <byteswap2@plt>
   199b4:	cmp	r5, r7
   199b8:	strh	r0, [sp, #132]	; 0x84
   199bc:	ldr	r0, [sp, #134]	; 0x86
   199c0:	beq	199c8 <readstat_parse_dta+0x67c>
   199c4:	bl	3da8 <byteswap4@plt>
   199c8:	ldr	r3, [r6, #40]	; 0x28
   199cc:	mov	r2, r0
   199d0:	ldrh	r1, [sp, #132]	; 0x84
   199d4:	str	r3, [sp, #12]
   199d8:	ldr	r3, [r6, #36]	; 0x24
   199dc:	str	r0, [sp, #134]	; 0x86
   199e0:	str	r3, [sp, #8]
   199e4:	ldrb	r3, [sp, #128]	; 0x80
   199e8:	str	r3, [sp, #4]
   199ec:	ldrb	r3, [sp, #129]	; 0x81
   199f0:	str	r3, [sp]
   199f4:	mov	r3, #0
   199f8:	b	1967c <readstat_parse_dta+0x330>
   199fc:	cmp	r5, #1
   19a00:	bne	197d4 <readstat_parse_dta+0x488>
   19a04:	mov	r1, r5
   19a08:	add	r0, sp, #72	; 0x48
   19a0c:	ldr	r3, [r7, #12]
   19a10:	ldr	r2, [r7, #20]
   19a14:	blx	r3
   19a18:	cmp	r0, #1
   19a1c:	ldrbeq	r3, [sp, #72]	; 0x48
   19a20:	beq	19a2c <readstat_parse_dta+0x6e0>
   19a24:	mov	r5, #2
   19a28:	b	193fc <readstat_parse_dta+0xb0>
   19a2c:	strh	r3, [sp, #88]	; 0x58
   19a30:	b	197d4 <readstat_parse_dta+0x488>
   19a34:	ldrb	r0, [sp, #67]	; 0x43
   19a38:	cmp	r0, #0
   19a3c:	beq	19bc4 <readstat_parse_dta+0x878>
   19a40:	bl	4240 <readstat_malloc@plt>
   19a44:	ldrb	r1, [sp, #67]	; 0x43
   19a48:	mov	r6, r0
   19a4c:	ldr	r3, [r7, #12]
   19a50:	ldr	r2, [r7, #20]
   19a54:	blx	r3
   19a58:	ldrb	r3, [sp, #67]	; 0x43
   19a5c:	cmp	r0, r3
   19a60:	bne	198d8 <readstat_parse_dta+0x58c>
   19a64:	ldrb	r3, [r4, #192]	; 0xc0
   19a68:	tst	r3, #4
   19a6c:	subeq	r0, r0, #1
   19a70:	strbeq	r0, [sp, #67]	; 0x43
   19a74:	ldrb	r3, [r6]
   19a78:	cmp	r3, #0
   19a7c:	beq	19ae8 <readstat_parse_dta+0x79c>
   19a80:	ldrb	r2, [sp, #67]	; 0x43
   19a84:	add	r3, r6, r2
   19a88:	ldrb	r1, [r3, #-1]
   19a8c:	adds	r3, r9, #0
   19a90:	movne	r3, #1
   19a94:	cmp	r1, #0
   19a98:	movne	r3, #0
   19a9c:	cmp	r3, #0
   19aa0:	beq	19ab8 <readstat_parse_dta+0x76c>
   19aa4:	sub	r2, r2, #1
   19aa8:	mov	r1, r6
   19aac:	add	r0, r6, #1
   19ab0:	bl	3eb0 <memmove@plt>
   19ab4:	strb	r9, [r6]
   19ab8:	ldr	r3, [r4, #276]	; 0x114
   19abc:	mov	r2, sl
   19ac0:	mov	r0, r6
   19ac4:	ldrb	r1, [sp, #67]	; 0x43
   19ac8:	str	r3, [sp]
   19acc:	ldr	r3, [r4, #264]	; 0x108
   19ad0:	bl	430c <dta_parse_timestamp@plt>
   19ad4:	subs	r5, r0, #0
   19ad8:	bne	19afc <readstat_parse_dta+0x7b0>
   19adc:	mov	r0, sl
   19ae0:	bl	3e68 <mktime@plt>
   19ae4:	str	r0, [r4, #12]
   19ae8:	ldr	r1, [pc, #2360]	; 1a428 <readstat_parse_dta+0x10dc>
   19aec:	mov	r0, r4
   19af0:	add	r1, pc, r1
   19af4:	bl	18b9c <dta_read_tag>
   19af8:	mov	r5, r0
   19afc:	mov	r0, r8
   19b00:	bl	3ed4 <free@plt>
   19b04:	cmp	r6, #0
   19b08:	beq	19b14 <readstat_parse_dta+0x7c8>
   19b0c:	mov	r0, r6
   19b10:	bl	3ed4 <free@plt>
   19b14:	cmp	r5, #0
   19b18:	bne	193fc <readstat_parse_dta+0xb0>
   19b1c:	ldr	r1, [pc, #2312]	; 1a42c <readstat_parse_dta+0x10e0>
   19b20:	mov	r0, r4
   19b24:	add	r1, pc, r1
   19b28:	bl	18b9c <dta_read_tag>
   19b2c:	subs	r5, r0, #0
   19b30:	bne	193fc <readstat_parse_dta+0xb0>
   19b34:	ldr	r6, [r4, #240]	; 0xf0
   19b38:	cmp	r6, #0
   19b3c:	beq	19bcc <readstat_parse_dta+0x880>
   19b40:	mov	r2, #24
   19b44:	mov	r1, r5
   19b48:	add	r0, sp, #160	; 0xa0
   19b4c:	bl	42b8 <memset@plt>
   19b50:	ldrd	r2, [r4, #168]	; 0xa8
   19b54:	strd	r2, [sp, #128]	; 0x80
   19b58:	ldr	r2, [r4, #148]	; 0x94
   19b5c:	asr	r3, r2, #31
   19b60:	strd	r2, [sp, #136]	; 0x88
   19b64:	ldr	r3, [r4, #12]
   19b68:	ldr	r2, [r4, #232]	; 0xe8
   19b6c:	str	r3, [sp, #144]	; 0x90
   19b70:	str	r3, [sp, #148]	; 0x94
   19b74:	ldr	r3, [r4, #144]	; 0x90
   19b78:	str	r2, [sp, #164]	; 0xa4
   19b7c:	ldr	r2, [r4]
   19b80:	cmp	r3, #117	; 0x75
   19b84:	mov	r0, r3
   19b88:	asr	r1, r3, #31
   19b8c:	movle	r3, #0
   19b90:	movgt	r3, #1
   19b94:	str	r2, [sp, #172]	; 0xac
   19b98:	ldrb	r2, [sp, #180]	; 0xb4
   19b9c:	strd	r0, [sp, #152]	; 0x98
   19ba0:	mov	r0, sl
   19ba4:	ldr	r1, [sp, #48]	; 0x30
   19ba8:	bfi	r2, r3, #0, #1
   19bac:	strb	r2, [sp, #180]	; 0xb4
   19bb0:	blx	r6
   19bb4:	cmp	r0, #0
   19bb8:	beq	19bcc <readstat_parse_dta+0x880>
   19bbc:	mov	r5, #4
   19bc0:	b	193fc <readstat_parse_dta+0xb0>
   19bc4:	mov	r6, r0
   19bc8:	b	19ae8 <readstat_parse_dta+0x79c>
   19bcc:	ldrb	r3, [r4, #192]	; 0xc0
   19bd0:	tst	r3, #4
   19bd4:	beq	19c4c <readstat_parse_dta+0x900>
   19bd8:	ldr	r3, [pc, #2128]	; 1a430 <readstat_parse_dta+0x10e4>
   19bdc:	mov	r2, sl
   19be0:	mov	r0, r4
   19be4:	ldr	r1, [pc, #2120]	; 1a434 <readstat_parse_dta+0x10e8>
   19be8:	add	r3, pc, r3
   19bec:	add	r1, pc, r1
   19bf0:	str	r3, [sp]
   19bf4:	mov	r3, #112	; 0x70
   19bf8:	bl	192f4 <dta_read_chunk>
   19bfc:	cmp	r0, #0
   19c00:	bne	19a24 <readstat_parse_dta+0x6d8>
   19c04:	ldrb	r3, [r4, #192]	; 0xc0
   19c08:	ldrd	r0, [sp, #200]	; 0xc8
   19c0c:	tst	r3, #1
   19c10:	beq	19c18 <readstat_parse_dta+0x8cc>
   19c14:	bl	3d90 <byteswap8@plt>
   19c18:	ldrb	r3, [r4, #192]	; 0xc0
   19c1c:	strd	r0, [r4, #120]	; 0x78
   19c20:	ldrd	r0, [sp, #208]	; 0xd0
   19c24:	tst	r3, #1
   19c28:	beq	19c30 <readstat_parse_dta+0x8e4>
   19c2c:	bl	3d90 <byteswap8@plt>
   19c30:	ldrb	r3, [r4, #192]	; 0xc0
   19c34:	strd	r0, [r4, #128]	; 0x80
   19c38:	ldrd	r0, [sp, #216]	; 0xd8
   19c3c:	tst	r3, #1
   19c40:	beq	19c48 <readstat_parse_dta+0x8fc>
   19c44:	bl	3d90 <byteswap8@plt>
   19c48:	strd	r0, [r4, #136]	; 0x88
   19c4c:	ldr	r6, [r4, #24]
   19c50:	ldr	r7, [r4, #148]	; 0x94
   19c54:	cmp	r7, #0
   19c58:	mul	r6, r6, r7
   19c5c:	beq	19c70 <readstat_parse_dta+0x924>
   19c60:	mov	r0, r6
   19c64:	bl	4240 <readstat_malloc@plt>
   19c68:	subs	r7, r0, #0
   19c6c:	beq	1a698 <readstat_parse_dta+0x134c>
   19c70:	ldr	r3, [pc, #1984]	; 1a438 <readstat_parse_dta+0x10ec>
   19c74:	mov	r2, r7
   19c78:	mov	r0, r4
   19c7c:	ldr	r1, [pc, #1976]	; 1a43c <readstat_parse_dta+0x10f0>
   19c80:	add	r3, pc, r3
   19c84:	add	r1, pc, r1
   19c88:	str	r3, [sp]
   19c8c:	mov	r3, r6
   19c90:	bl	192f4 <dta_read_chunk>
   19c94:	subs	r5, r0, #0
   19c98:	bne	1ad60 <readstat_parse_dta+0x1a14>
   19c9c:	ldr	r3, [r4, #24]
   19ca0:	cmp	r3, #1
   19ca4:	ldreq	r3, [r4, #148]	; 0x94
   19ca8:	beq	19d0c <readstat_parse_dta+0x9c0>
   19cac:	cmp	r3, #2
   19cb0:	bne	19d14 <readstat_parse_dta+0x9c8>
   19cb4:	mov	r2, r6
   19cb8:	mov	r1, r7
   19cbc:	ldr	r0, [r4, #28]
   19cc0:	bl	3f34 <memcpy@plt>
   19cc4:	ldrb	r3, [r4, #192]	; 0xc0
   19cc8:	tst	r3, #1
   19ccc:	beq	19d14 <readstat_parse_dta+0x9c8>
   19cd0:	ldr	r3, [r4, #148]	; 0x94
   19cd4:	cmp	r5, r3
   19cd8:	bge	19d14 <readstat_parse_dta+0x9c8>
   19cdc:	ldr	r8, [r4, #28]
   19ce0:	lsl	r6, r5, #1
   19ce4:	add	r5, r5, #1
   19ce8:	ldrh	r0, [r8, r6]
   19cec:	bl	3ebc <byteswap2@plt>
   19cf0:	strh	r0, [r8, r6]
   19cf4:	b	19cd0 <readstat_parse_dta+0x984>
   19cf8:	ldrb	r0, [r7, r5]
   19cfc:	lsl	r2, r5, #1
   19d00:	add	r5, r5, #1
   19d04:	ldr	r1, [r4, #28]
   19d08:	strh	r0, [r1, r2]
   19d0c:	cmp	r5, r3
   19d10:	blt	19cf8 <readstat_parse_dta+0x9ac>
   19d14:	ldr	r3, [pc, #1828]	; 1a440 <readstat_parse_dta+0x10f4>
   19d18:	mov	r0, r4
   19d1c:	ldr	r1, [pc, #1824]	; 1a444 <readstat_parse_dta+0x10f8>
   19d20:	add	r3, pc, r3
   19d24:	add	r1, pc, r1
   19d28:	str	r3, [sp]
   19d2c:	ldrd	r2, [r4, #36]	; 0x24
   19d30:	bl	192f4 <dta_read_chunk>
   19d34:	subs	r5, r0, #0
   19d38:	bne	1ad60 <readstat_parse_dta+0x1a14>
   19d3c:	ldr	r3, [pc, #1796]	; 1a448 <readstat_parse_dta+0x10fc>
   19d40:	mov	r0, r4
   19d44:	ldr	r1, [pc, #1792]	; 1a44c <readstat_parse_dta+0x1100>
   19d48:	add	r3, pc, r3
   19d4c:	add	r1, pc, r1
   19d50:	str	r3, [sp]
   19d54:	ldrd	r2, [r4, #44]	; 0x2c
   19d58:	bl	192f4 <dta_read_chunk>
   19d5c:	subs	r5, r0, #0
   19d60:	bne	1ad60 <readstat_parse_dta+0x1a14>
   19d64:	ldr	r3, [pc, #1764]	; 1a450 <readstat_parse_dta+0x1104>
   19d68:	mov	r0, r4
   19d6c:	ldr	r1, [pc, #1760]	; 1a454 <readstat_parse_dta+0x1108>
   19d70:	add	r3, pc, r3
   19d74:	add	r1, pc, r1
   19d78:	str	r3, [sp]
   19d7c:	ldrd	r2, [r4, #52]	; 0x34
   19d80:	bl	192f4 <dta_read_chunk>
   19d84:	subs	r5, r0, #0
   19d88:	bne	1ad60 <readstat_parse_dta+0x1a14>
   19d8c:	ldr	r3, [pc, #1732]	; 1a458 <readstat_parse_dta+0x110c>
   19d90:	mov	r0, r4
   19d94:	ldr	r1, [pc, #1728]	; 1a45c <readstat_parse_dta+0x1110>
   19d98:	add	r3, pc, r3
   19d9c:	add	r1, pc, r1
   19da0:	str	r3, [sp]
   19da4:	ldrd	r2, [r4, #60]	; 0x3c
   19da8:	bl	192f4 <dta_read_chunk>
   19dac:	subs	r5, r0, #0
   19db0:	bne	1ad60 <readstat_parse_dta+0x1a14>
   19db4:	ldr	r3, [pc, #1700]	; 1a460 <readstat_parse_dta+0x1114>
   19db8:	mov	r0, r4
   19dbc:	ldr	r1, [pc, #1696]	; 1a464 <readstat_parse_dta+0x1118>
   19dc0:	add	r3, pc, r3
   19dc4:	add	r1, pc, r1
   19dc8:	str	r3, [sp]
   19dcc:	ldrd	r2, [r4, #68]	; 0x44
   19dd0:	bl	192f4 <dta_read_chunk>
   19dd4:	cmp	r7, #0
   19dd8:	mov	r5, r0
   19ddc:	beq	19de8 <readstat_parse_dta+0xa9c>
   19de0:	mov	r0, r7
   19de4:	bl	3ed4 <free@plt>
   19de8:	cmp	r5, #0
   19dec:	moveq	r6, r5
   19df0:	bne	193fc <readstat_parse_dta+0xb0>
   19df4:	ldr	r3, [r4, #148]	; 0x94
   19df8:	cmp	r3, r6
   19dfc:	bgt	19e8c <readstat_parse_dta+0xb40>
   19e00:	cmp	r3, #0
   19e04:	bgt	19e18 <readstat_parse_dta+0xacc>
   19e08:	ldrd	r2, [r4, #152]	; 0x98
   19e0c:	cmp	r2, #1
   19e10:	sbcs	r3, r3, #0
   19e14:	blt	19e24 <readstat_parse_dta+0xad8>
   19e18:	ldr	r3, [r4, #160]	; 0xa0
   19e1c:	cmp	r3, #0
   19e20:	beq	1957c <readstat_parse_dta+0x230>
   19e24:	ldr	r3, [r4, #248]	; 0xf8
   19e28:	cmp	r3, #0
   19e2c:	bne	1a0a4 <readstat_parse_dta+0xd58>
   19e30:	ldr	r3, [r4, #92]	; 0x5c
   19e34:	cmp	r3, #0
   19e38:	bne	1a0cc <readstat_parse_dta+0xd80>
   19e3c:	ldrb	r0, [r4, #192]	; 0xc0
   19e40:	ands	r0, r0, #4
   19e44:	beq	1a4c4 <readstat_parse_dta+0x1178>
   19e48:	mov	r1, #0
   19e4c:	ldr	r0, [r4, #128]	; 0x80
   19e50:	ldr	r6, [r4, #280]	; 0x118
   19e54:	ldr	r3, [r6, #8]
   19e58:	ldr	r2, [r6, #20]
   19e5c:	blx	r3
   19e60:	cmn	r0, #1
   19e64:	bne	1a574 <readstat_parse_dta+0x1228>
   19e68:	ldr	r3, [r4, #264]	; 0x108
   19e6c:	cmp	r3, #0
   19e70:	beq	193f8 <readstat_parse_dta+0xac>
   19e74:	ldrd	r2, [r4, #128]	; 0x80
   19e78:	add	r5, r4, #288	; 0x120
   19e7c:	strd	r2, [sp]
   19e80:	ldr	r2, [pc, #1504]	; 1a468 <readstat_parse_dta+0x111c>
   19e84:	add	r2, pc, r2
   19e88:	b	1a120 <readstat_parse_dta+0xdd4>
   19e8c:	ldr	ip, [r4, #28]
   19e90:	lsl	r0, r6, #1
   19e94:	mov	r3, #0
   19e98:	mov	r2, sl
   19e9c:	mov	r1, r4
   19ea0:	ldrh	r0, [ip, r0]
   19ea4:	bl	4204 <dta_type_info@plt>
   19ea8:	subs	r5, r0, #0
   19eac:	bne	193fc <readstat_parse_dta+0xb0>
   19eb0:	ldr	r2, [sp, #128]	; 0x80
   19eb4:	add	r6, r6, #1
   19eb8:	ldr	r3, [r4, #160]	; 0xa0
   19ebc:	add	r3, r3, r2
   19ec0:	str	r3, [r4, #160]	; 0xa0
   19ec4:	b	19df4 <readstat_parse_dta+0xaa8>
   19ec8:	ldr	ip, [r4, #28]
   19ecc:	lsl	r0, r6, #1
   19ed0:	add	r2, sp, #72	; 0x48
   19ed4:	mov	r1, r4
   19ed8:	ldr	r3, [sp, #40]	; 0x28
   19edc:	ldrh	r0, [ip, r0]
   19ee0:	bl	4204 <dta_type_info@plt>
   19ee4:	subs	r5, r0, #0
   19ee8:	bne	193fc <readstat_parse_dta+0xb0>
   19eec:	ldr	r3, [sp, #88]	; 0x58
   19ef0:	cmp	r3, #0
   19ef4:	ldreq	r3, [sp, #72]	; 0x48
   19ef8:	addeq	r3, r3, #1
   19efc:	streq	r3, [sp, #72]	; 0x48
   19f00:	beq	19f10 <readstat_parse_dta+0xbc4>
   19f04:	cmp	r3, #6
   19f08:	streq	r5, [sp, #72]	; 0x48
   19f0c:	streq	r5, [sp, #88]	; 0x58
   19f10:	movw	r1, #2152	; 0x868
   19f14:	mov	r0, #1
   19f18:	ldr	r9, [sp, #72]	; 0x48
   19f1c:	lsl	r8, r6, #2
   19f20:	ldr	r3, [sp, #88]	; 0x58
   19f24:	str	r3, [sp, #48]	; 0x30
   19f28:	ldr	r3, [r4, #228]	; 0xe4
   19f2c:	str	r3, [sp, #24]
   19f30:	bl	3d6c <calloc@plt>
   19f34:	ldr	r3, [sp, #48]	; 0x30
   19f38:	mov	r5, r0
   19f3c:	add	r0, r0, #8
   19f40:	ldr	r2, [r4, #36]	; 0x24
   19f44:	ldr	r1, [r4, #236]	; 0xec
   19f48:	stm	r5, {r3, r6}
   19f4c:	ldr	r3, [r4, #76]	; 0x4c
   19f50:	str	r9, [r5, #1596]	; 0x63c
   19f54:	str	r7, [r5, #2148]	; 0x864
   19f58:	str	r1, [sp]
   19f5c:	mov	r1, #300	; 0x12c
   19f60:	mla	r2, r3, r6, r2
   19f64:	bl	424c <readstat_convert@plt>
   19f68:	ldr	r0, [r4, #68]	; 0x44
   19f6c:	ldr	r3, [r4, #88]	; 0x58
   19f70:	mul	r1, r3, r6
   19f74:	add	r2, r0, r1
   19f78:	ldrb	r1, [r0, r1]
   19f7c:	cmp	r1, #0
   19f80:	beq	19f98 <readstat_parse_dta+0xc4c>
   19f84:	ldr	r1, [r4, #236]	; 0xec
   19f88:	add	r0, r5, #564	; 0x234
   19f8c:	str	r1, [sp]
   19f90:	mov	r1, #1024	; 0x400
   19f94:	bl	424c <readstat_convert@plt>
   19f98:	ldr	r0, [r4, #52]	; 0x34
   19f9c:	ldr	r3, [r4, #80]	; 0x50
   19fa0:	mul	r1, r3, r6
   19fa4:	add	r2, r0, r1
   19fa8:	ldrb	r1, [r0, r1]
   19fac:	cmp	r1, #0
   19fb0:	beq	1a018 <readstat_parse_dta+0xccc>
   19fb4:	ldr	r1, [r4, #236]	; 0xec
   19fb8:	add	r9, r5, #308	; 0x134
   19fbc:	mov	r0, r9
   19fc0:	str	r1, [sp]
   19fc4:	mov	r1, #256	; 0x100
   19fc8:	bl	424c <readstat_convert@plt>
   19fcc:	ldrb	r3, [r5, #308]	; 0x134
   19fd0:	cmp	r3, #37	; 0x25
   19fd4:	bne	19ff8 <readstat_parse_dta+0xcac>
   19fd8:	ldrb	r3, [r5, #309]	; 0x135
   19fdc:	cmp	r3, #45	; 0x2d
   19fe0:	moveq	r3, #1
   19fe4:	beq	19ff4 <readstat_parse_dta+0xca8>
   19fe8:	cmp	r3, #126	; 0x7e
   19fec:	moveq	r3, #2
   19ff0:	movne	r3, #3
   19ff4:	str	r3, [r5, #2132]	; 0x854
   19ff8:	mov	r2, sl
   19ffc:	mov	r0, r9
   1a000:	ldr	r1, [sp, #44]	; 0x2c
   1a004:	bl	42a0 <__isoc99_sscanf@plt>
   1a008:	cmp	r0, #1
   1a00c:	bne	1a088 <readstat_parse_dta+0xd3c>
   1a010:	ldr	r3, [sp, #128]	; 0x80
   1a014:	str	r3, [r5, #2136]	; 0x858
   1a018:	ldr	r3, [sp, #24]
   1a01c:	ldr	r2, [r4, #84]	; 0x54
   1a020:	ldr	r1, [r4, #60]	; 0x3c
   1a024:	ldr	r0, [r4, #228]	; 0xe4
   1a028:	mul	r2, r2, r6
   1a02c:	str	r5, [r3, r8]
   1a030:	ldr	r5, [r4, #248]	; 0xf8
   1a034:	ldrb	r3, [r1, r2]
   1a038:	cmp	r3, #0
   1a03c:	ldr	r3, [r4, #276]	; 0x114
   1a040:	addne	r2, r1, r2
   1a044:	moveq	r2, #0
   1a048:	ldr	r1, [r0, r8]
   1a04c:	mov	r0, r6
   1a050:	blx	r5
   1a054:	cmp	r0, #1
   1a058:	beq	19bbc <readstat_parse_dta+0x870>
   1a05c:	cmp	r0, #2
   1a060:	add	r6, r6, #1
   1a064:	ldreq	r3, [r4, #228]	; 0xe4
   1a068:	moveq	r2, #1
   1a06c:	addne	r7, r7, #1
   1a070:	ldreq	r3, [r3, r8]
   1a074:	streq	r2, [r3, #2144]	; 0x860
   1a078:	ldr	r3, [r4, #148]	; 0x94
   1a07c:	cmp	r6, r3
   1a080:	blt	19ec8 <readstat_parse_dta+0xb7c>
   1a084:	b	19e30 <readstat_parse_dta+0xae4>
   1a088:	mov	r2, sl
   1a08c:	mov	r1, fp
   1a090:	mov	r0, r9
   1a094:	bl	42a0 <__isoc99_sscanf@plt>
   1a098:	cmp	r0, #1
   1a09c:	bne	1a018 <readstat_parse_dta+0xccc>
   1a0a0:	b	1a010 <readstat_parse_dta+0xcc4>
   1a0a4:	add	r3, sp, #88	; 0x58
   1a0a8:	ldr	fp, [pc, #956]	; 1a46c <readstat_parse_dta+0x1120>
   1a0ac:	mov	r7, #0
   1a0b0:	mov	r6, r7
   1a0b4:	str	r3, [sp, #40]	; 0x28
   1a0b8:	ldr	r3, [pc, #944]	; 1a470 <readstat_parse_dta+0x1124>
   1a0bc:	add	fp, pc, fp
   1a0c0:	add	r3, pc, r3
   1a0c4:	str	r3, [sp, #44]	; 0x2c
   1a0c8:	b	1a078 <readstat_parse_dta+0xd2c>
   1a0cc:	ldrb	r3, [r4, #192]	; 0xc0
   1a0d0:	ldr	r7, [r4, #280]	; 0x118
   1a0d4:	tst	r3, #4
   1a0d8:	beq	1a140 <readstat_parse_dta+0xdf4>
   1a0dc:	ldr	r1, [r4, #244]	; 0xf4
   1a0e0:	cmp	r1, #0
   1a0e4:	bne	1a140 <readstat_parse_dta+0xdf4>
   1a0e8:	ldr	r3, [r7, #8]
   1a0ec:	ldr	r2, [r7, #20]
   1a0f0:	ldr	r0, [r4, #120]	; 0x78
   1a0f4:	blx	r3
   1a0f8:	cmn	r0, #1
   1a0fc:	bne	19e3c <readstat_parse_dta+0xaf0>
   1a100:	ldr	r3, [r4, #264]	; 0x108
   1a104:	cmp	r3, #0
   1a108:	beq	193f8 <readstat_parse_dta+0xac>
   1a10c:	ldrd	r2, [r4, #120]	; 0x78
   1a110:	add	r5, r4, #288	; 0x120
   1a114:	strd	r2, [sp]
   1a118:	ldr	r2, [pc, #852]	; 1a474 <readstat_parse_dta+0x1128>
   1a11c:	add	r2, pc, r2
   1a120:	mov	r1, #256	; 0x100
   1a124:	mov	r0, r5
   1a128:	bl	4294 <snprintf@plt>
   1a12c:	mov	r0, r5
   1a130:	ldr	r3, [r4, #264]	; 0x108
   1a134:	ldr	r1, [r4, #276]	; 0x114
   1a138:	blx	r3
   1a13c:	b	193f8 <readstat_parse_dta+0xac>
   1a140:	ldr	r1, [pc, #816]	; 1a478 <readstat_parse_dta+0x112c>
   1a144:	mov	r0, r4
   1a148:	add	r1, pc, r1
   1a14c:	bl	18b9c <dta_read_tag>
   1a150:	subs	r6, r0, #0
   1a154:	movne	r5, r6
   1a158:	bne	193fc <readstat_parse_dta+0xb0>
   1a15c:	ldr	r9, [pc, #792]	; 1a47c <readstat_parse_dta+0x1130>
   1a160:	ldr	r3, [pc, #792]	; 1a480 <readstat_parse_dta+0x1134>
   1a164:	ldr	fp, [pc, #792]	; 1a484 <readstat_parse_dta+0x1138>
   1a168:	add	r9, pc, r9
   1a16c:	add	r3, pc, r3
   1a170:	add	fp, pc, fp
   1a174:	str	r3, [sp, #24]
   1a178:	ldrb	r1, [r4, #192]	; 0xc0
   1a17c:	ldr	r3, [r7, #12]
   1a180:	ldr	r2, [r7, #20]
   1a184:	tst	r1, #4
   1a188:	beq	1a274 <readstat_parse_dta+0xf28>
   1a18c:	mov	r1, #4
   1a190:	mov	r0, sl
   1a194:	blx	r3
   1a198:	cmp	r0, #4
   1a19c:	mov	r5, r0
   1a1a0:	bne	1a288 <readstat_parse_dta+0xf3c>
   1a1a4:	mov	r2, r0
   1a1a8:	mov	r1, r9
   1a1ac:	mov	r0, sl
   1a1b0:	bl	3fb8 <memcmp@plt>
   1a1b4:	cmp	r0, #0
   1a1b8:	bne	1a1f0 <readstat_parse_dta+0xea4>
   1a1bc:	ldr	r1, [pc, #708]	; 1a488 <readstat_parse_dta+0x113c>
   1a1c0:	mov	r0, r4
   1a1c4:	add	r1, pc, r1
   1a1c8:	bl	18b9c <dta_read_tag>
   1a1cc:	subs	r5, r0, #0
   1a1d0:	beq	1a3c0 <readstat_parse_dta+0x1074>
   1a1d4:	cmp	r6, #0
   1a1d8:	beq	193fc <readstat_parse_dta+0xb0>
   1a1dc:	mov	r0, r6
   1a1e0:	bl	3ed4 <free@plt>
   1a1e4:	cmp	r5, #0
   1a1e8:	beq	19e3c <readstat_parse_dta+0xaf0>
   1a1ec:	b	193fc <readstat_parse_dta+0xb0>
   1a1f0:	mov	r2, r5
   1a1f4:	mov	r0, sl
   1a1f8:	ldr	r1, [sp, #24]
   1a1fc:	bl	3fb8 <memcmp@plt>
   1a200:	cmp	r0, #0
   1a204:	bne	1a26c <readstat_parse_dta+0xf20>
   1a208:	mov	r3, #1
   1a20c:	strb	r3, [sp, #88]	; 0x58
   1a210:	ldr	r5, [r4, #92]	; 0x5c
   1a214:	ldr	r3, [r7, #12]
   1a218:	ldr	r2, [r7, #20]
   1a21c:	cmp	r5, #2
   1a220:	bne	1a290 <readstat_parse_dta+0xf44>
   1a224:	mov	r1, r5
   1a228:	mov	r0, sl
   1a22c:	blx	r3
   1a230:	cmp	r0, #2
   1a234:	bne	1a1d4 <readstat_parse_dta+0xe88>
   1a238:	ldrb	r3, [r4, #192]	; 0xc0
   1a23c:	ldrh	r0, [sp, #128]	; 0x80
   1a240:	tst	r3, #1
   1a244:	beq	1a24c <readstat_parse_dta+0xf00>
   1a248:	bl	3ebc <byteswap2@plt>
   1a24c:	mov	r5, r0
   1a250:	ldrb	r8, [sp, #88]	; 0x58
   1a254:	cmp	r8, #0
   1a258:	bne	1a2c0 <readstat_parse_dta+0xf74>
   1a25c:	cmp	r5, #0
   1a260:	beq	1a3c0 <readstat_parse_dta+0x1074>
   1a264:	mov	r5, #32
   1a268:	b	1a1d4 <readstat_parse_dta+0xe88>
   1a26c:	mov	r5, #5
   1a270:	b	1a1d4 <readstat_parse_dta+0xe88>
   1a274:	mov	r1, #1
   1a278:	add	r0, sp, #88	; 0x58
   1a27c:	blx	r3
   1a280:	cmp	r0, #1
   1a284:	beq	1a210 <readstat_parse_dta+0xec4>
   1a288:	mov	r5, #2
   1a28c:	b	1a1d4 <readstat_parse_dta+0xe88>
   1a290:	mov	r1, #4
   1a294:	mov	r0, sl
   1a298:	blx	r3
   1a29c:	cmp	r0, #4
   1a2a0:	bne	1a288 <readstat_parse_dta+0xf3c>
   1a2a4:	ldrb	r3, [r4, #192]	; 0xc0
   1a2a8:	ldr	r5, [sp, #128]	; 0x80
   1a2ac:	tst	r3, #1
   1a2b0:	beq	1a250 <readstat_parse_dta+0xf04>
   1a2b4:	mov	r0, r5
   1a2b8:	bl	3da8 <byteswap4@plt>
   1a2bc:	b	1a24c <readstat_parse_dta+0xf00>
   1a2c0:	cmp	r5, #1048576	; 0x100000
   1a2c4:	cmpls	r8, #1
   1a2c8:	movne	r8, #1
   1a2cc:	moveq	r8, #0
   1a2d0:	bne	1a264 <readstat_parse_dta+0xf18>
   1a2d4:	ldr	r3, [r4, #244]	; 0xf4
   1a2d8:	cmp	r3, #0
   1a2dc:	beq	1a380 <readstat_parse_dta+0x1034>
   1a2e0:	ldr	r3, [r4, #96]	; 0x60
   1a2e4:	cmp	r5, r3, lsl #1
   1a2e8:	bcc	1a380 <readstat_parse_dta+0x1034>
   1a2ec:	mov	r0, r6
   1a2f0:	add	r1, r5, #1
   1a2f4:	bl	4300 <readstat_realloc@plt>
   1a2f8:	subs	r6, r0, #0
   1a2fc:	beq	1a698 <readstat_parse_dta+0x134c>
   1a300:	mov	r1, r5
   1a304:	strb	r8, [r6, r5]
   1a308:	ldr	r3, [r7, #12]
   1a30c:	ldr	r2, [r7, #20]
   1a310:	blx	r3
   1a314:	cmp	r5, r0
   1a318:	bne	1a288 <readstat_parse_dta+0xf3c>
   1a31c:	mov	r2, #4
   1a320:	mov	r1, fp
   1a324:	str	r8, [sp, #128]	; 0x80
   1a328:	mov	r0, r6
   1a32c:	bl	451c <strncmp@plt>
   1a330:	cmp	r0, #0
   1a334:	bne	1a39c <readstat_parse_dta+0x1050>
   1a338:	ldr	r1, [pc, #332]	; 1a48c <readstat_parse_dta+0x1140>
   1a33c:	mov	r2, sl
   1a340:	ldr	r0, [r4, #96]	; 0x60
   1a344:	add	r1, pc, r1
   1a348:	add	r0, r6, r0
   1a34c:	bl	42a0 <__isoc99_sscanf@plt>
   1a350:	cmp	r0, #1
   1a354:	bne	1a39c <readstat_parse_dta+0x1050>
   1a358:	ldr	r1, [r4, #96]	; 0x60
   1a35c:	ldr	r0, [sp, #128]	; 0x80
   1a360:	ldr	r3, [r4, #244]	; 0xf4
   1a364:	add	r1, r6, r1, lsl #1
   1a368:	ldr	r2, [r4, #276]	; 0x114
   1a36c:	blx	r3
   1a370:	cmp	r0, #0
   1a374:	beq	1a39c <readstat_parse_dta+0x1050>
   1a378:	mov	r5, #4
   1a37c:	b	1a1d4 <readstat_parse_dta+0xe88>
   1a380:	mov	r1, #1
   1a384:	mov	r0, r5
   1a388:	ldr	r3, [r7, #8]
   1a38c:	ldr	r2, [r7, #20]
   1a390:	blx	r3
   1a394:	cmn	r0, #1
   1a398:	beq	1a3b8 <readstat_parse_dta+0x106c>
   1a39c:	ldr	r1, [pc, #236]	; 1a490 <readstat_parse_dta+0x1144>
   1a3a0:	mov	r0, r4
   1a3a4:	add	r1, pc, r1
   1a3a8:	bl	18b9c <dta_read_tag>
   1a3ac:	subs	r5, r0, #0
   1a3b0:	beq	1a178 <readstat_parse_dta+0xe2c>
   1a3b4:	b	1a1d4 <readstat_parse_dta+0xe88>
   1a3b8:	mov	r5, #15
   1a3bc:	b	1a1d4 <readstat_parse_dta+0xe88>
   1a3c0:	cmp	r6, #0
   1a3c4:	beq	19e3c <readstat_parse_dta+0xaf0>
   1a3c8:	mov	r5, #0
   1a3cc:	b	1a1dc <readstat_parse_dta+0xe90>
   1a3d0:	.word	0x00007957
   1a3d4:	.word	0x00009632
   1a3d8:	.word	0x0000963e
   1a3dc:	.word	0x0000962b
   1a3e0:	.word	0x0000961f
   1a3e4:	.word	0x00009921
   1a3e8:	.word	0x00009604
   1a3ec:	.word	0x000095ea
   1a3f0:	.word	0x000095d6
   1a3f4:	.word	0x000095c7
   1a3f8:	.word	0x000095af
   1a3fc:	.word	0x0000953b
   1a400:	.word	0x00009533
   1a404:	.word	0x00009500
   1a408:	.word	0x000094f8
   1a40c:	.word	0x000093a9
   1a410:	.word	0x000092a5
   1a414:	.word	0x00009296
   1a418:	.word	0x0000922f
   1a41c:	.word	0x00009227
   1a420:	.word	0x000091f0
   1a424:	.word	0x000091e8
   1a428:	.word	0x0000905a
   1a42c:	.word	0x00009033
   1a430:	.word	0x00008f7f
   1a434:	.word	0x00008f75
   1a438:	.word	0x00008eff
   1a43c:	.word	0x00008eea
   1a440:	.word	0x00008e7c
   1a444:	.word	0x00008e6d
   1a448:	.word	0x00008e6b
   1a44c:	.word	0x00008e5c
   1a450:	.word	0x00008e59
   1a454:	.word	0x00008e4b
   1a458:	.word	0x00008e50
   1a45c:	.word	0x00008e38
   1a460:	.word	0x00008e4f
   1a464:	.word	0x00008e39
   1a468:	.word	0x00008e06
   1a46c:	.word	0x00008b6c
   1a470:	.word	0x00008b62
   1a474:	.word	0x00008b13
   1a478:	.word	0x00008b14
   1a47c:	.word	0x00008b06
   1a480:	.word	0x00008b07
   1a484:	.word	0x00008b08
   1a488:	.word	0x00008c54
   1a48c:	.word	0x00008939
   1a490:	.word	0x000088e0
   1a494:	.word	0x0000876b
   1a498:	.word	0x0000873c
   1a49c:	.word	0x00008718
   1a4a0:	.word	0x00008538
   1a4a4:	.word	0x000085b7
   1a4a8:	.word	0x0000843b
   1a4ac:	.word	0x000084c4
   1a4b0:	.word	0x000083d3
   1a4b4:	.word	0x00008374
   1a4b8:	.word	0x0000835b
   1a4bc:	.word	0x00008355
   1a4c0:	.word	0x0001f401
   1a4c4:	ldr	r3, [sp, #20]
   1a4c8:	mov	r1, #1
   1a4cc:	ldr	r2, [sp, #20]
   1a4d0:	ldr	r3, [r3, #8]
   1a4d4:	ldr	r2, [r2, #20]
   1a4d8:	blx	r3
   1a4dc:	asr	r1, r0, #31
   1a4e0:	mvn	r3, #0
   1a4e4:	mvn	r2, #0
   1a4e8:	cmp	r1, r3
   1a4ec:	cmpeq	r0, r2
   1a4f0:	strd	r0, [r4, #120]	; 0x78
   1a4f4:	beq	193f8 <readstat_parse_dta+0xac>
   1a4f8:	ldr	r2, [r4, #152]	; 0x98
   1a4fc:	ldr	lr, [r4, #156]	; 0x9c
   1a500:	ldr	ip, [r4, #160]	; 0xa0
   1a504:	umull	r6, r7, r2, ip
   1a508:	mla	r7, ip, lr, r7
   1a50c:	adds	r2, r6, r0
   1a510:	adc	r3, r7, r1
   1a514:	strd	r2, [r4, #136]	; 0x88
   1a518:	ldrb	r3, [r4, #192]	; 0xc0
   1a51c:	tst	r3, #4
   1a520:	bne	19e48 <readstat_parse_dta+0xafc>
   1a524:	ldr	r3, [r4, #256]	; 0x100
   1a528:	cmp	r3, #0
   1a52c:	bne	1a7b8 <readstat_parse_dta+0x146c>
   1a530:	mov	r1, #0
   1a534:	ldr	r0, [r4, #136]	; 0x88
   1a538:	ldr	r6, [r4, #280]	; 0x118
   1a53c:	ldr	r3, [r6, #8]
   1a540:	ldr	r2, [r6, #20]
   1a544:	blx	r3
   1a548:	cmn	r0, #1
   1a54c:	bne	1a990 <readstat_parse_dta+0x1644>
   1a550:	ldr	r3, [r4, #264]	; 0x108
   1a554:	cmp	r3, #0
   1a558:	beq	193f8 <readstat_parse_dta+0xac>
   1a55c:	ldrd	r2, [r4, #136]	; 0x88
   1a560:	add	r5, r4, #288	; 0x120
   1a564:	strd	r2, [sp]
   1a568:	ldr	r2, [pc, #-220]	; 1a494 <readstat_parse_dta+0x1148>
   1a56c:	add	r2, pc, r2
   1a570:	b	1a120 <readstat_parse_dta+0xdd4>
   1a574:	ldr	r1, [pc, #-228]	; 1a498 <readstat_parse_dta+0x114c>
   1a578:	mov	r0, r4
   1a57c:	add	r1, pc, r1
   1a580:	bl	18b9c <dta_read_tag>
   1a584:	subs	r5, r0, #0
   1a588:	bne	193fc <readstat_parse_dta+0xb0>
   1a58c:	ldr	r8, [pc, #-248]	; 1a49c <readstat_parse_dta+0x1150>
   1a590:	mov	r3, #100	; 0x64
   1a594:	mov	r0, #400	; 0x190
   1a598:	add	r7, sp, #72	; 0x48
   1a59c:	str	r3, [r4, #224]	; 0xe0
   1a5a0:	bl	4240 <readstat_malloc@plt>
   1a5a4:	str	r0, [r4, #216]	; 0xd8
   1a5a8:	add	r8, pc, r8
   1a5ac:	mov	r1, #3
   1a5b0:	mov	r0, r7
   1a5b4:	ldr	r3, [r6, #12]
   1a5b8:	ldr	r2, [r6, #20]
   1a5bc:	blx	r3
   1a5c0:	cmp	r0, #3
   1a5c4:	mov	r5, r0
   1a5c8:	bne	19a24 <readstat_parse_dta+0x6d8>
   1a5cc:	mov	r2, r0
   1a5d0:	mov	r1, r8
   1a5d4:	mov	r0, r7
   1a5d8:	bl	3fb8 <memcmp@plt>
   1a5dc:	cmp	r0, #0
   1a5e0:	bne	1a780 <readstat_parse_dta+0x1434>
   1a5e4:	ldr	r1, [r4, #116]	; 0x74
   1a5e8:	add	r0, sp, #88	; 0x58
   1a5ec:	ldr	r2, [r4, #280]	; 0x118
   1a5f0:	cmp	r1, #4
   1a5f4:	ldr	r3, [r2, #12]
   1a5f8:	ldr	r2, [r2, #20]
   1a5fc:	bls	1a6a0 <readstat_parse_dta+0x1354>
   1a600:	mov	r1, #17
   1a604:	blx	r3
   1a608:	cmp	r0, #17
   1a60c:	bne	19a24 <readstat_parse_dta+0x6d8>
   1a610:	ldrb	r3, [r4, #192]	; 0xc0
   1a614:	ldr	r0, [sp, #88]	; 0x58
   1a618:	tst	r3, #1
   1a61c:	beq	1a624 <readstat_parse_dta+0x12d8>
   1a620:	bl	3da8 <byteswap4@plt>
   1a624:	ldrb	r3, [r4, #192]	; 0xc0
   1a628:	uxth	r0, r0
   1a62c:	strh	r0, [sp, #128]	; 0x80
   1a630:	ldr	r0, [sp, #92]	; 0x5c
   1a634:	tst	r3, #1
   1a638:	ldr	r1, [sp, #96]	; 0x60
   1a63c:	beq	1a644 <readstat_parse_dta+0x12f8>
   1a640:	bl	3d90 <byteswap8@plt>
   1a644:	ldrb	r3, [sp, #100]	; 0x64
   1a648:	strd	r0, [sp, #136]	; 0x88
   1a64c:	ldr	r0, [sp, #101]	; 0x65
   1a650:	strb	r3, [sp, #144]	; 0x90
   1a654:	ldrb	r3, [r4, #192]	; 0xc0
   1a658:	tst	r3, #1
   1a65c:	beq	1a664 <readstat_parse_dta+0x1318>
   1a660:	bl	3da8 <byteswap4@plt>
   1a664:	ldrb	r3, [sp, #144]	; 0x90
   1a668:	str	r0, [sp, #148]	; 0x94
   1a66c:	cmp	r3, #130	; 0x82
   1a670:	bne	1a5ac <readstat_parse_dta+0x1260>
   1a674:	ldr	r1, [r4, #220]	; 0xdc
   1a678:	ldr	r3, [r4, #224]	; 0xe0
   1a67c:	cmp	r1, r3
   1a680:	beq	1a6fc <readstat_parse_dta+0x13b0>
   1a684:	ldr	r9, [sp, #148]	; 0x94
   1a688:	add	r0, r9, #32
   1a68c:	bl	4240 <readstat_malloc@plt>
   1a690:	subs	r5, r0, #0
   1a694:	bne	1a720 <readstat_parse_dta+0x13d4>
   1a698:	mov	r5, #3
   1a69c:	b	193fc <readstat_parse_dta+0xb0>
   1a6a0:	mov	r1, #13
   1a6a4:	blx	r3
   1a6a8:	cmp	r0, #13
   1a6ac:	bne	19a24 <readstat_parse_dta+0x6d8>
   1a6b0:	ldrb	r3, [r4, #192]	; 0xc0
   1a6b4:	ldr	r0, [sp, #88]	; 0x58
   1a6b8:	tst	r3, #1
   1a6bc:	beq	1a6c4 <readstat_parse_dta+0x1378>
   1a6c0:	bl	3da8 <byteswap4@plt>
   1a6c4:	ldrb	r3, [r4, #192]	; 0xc0
   1a6c8:	uxth	r0, r0
   1a6cc:	strh	r0, [sp, #128]	; 0x80
   1a6d0:	ldr	r0, [sp, #92]	; 0x5c
   1a6d4:	tst	r3, #1
   1a6d8:	beq	1a6e0 <readstat_parse_dta+0x1394>
   1a6dc:	bl	3da8 <byteswap4@plt>
   1a6e0:	mov	r3, #0
   1a6e4:	str	r0, [sp, #136]	; 0x88
   1a6e8:	ldr	r0, [sp, #97]	; 0x61
   1a6ec:	str	r3, [sp, #140]	; 0x8c
   1a6f0:	ldrb	r3, [sp, #96]	; 0x60
   1a6f4:	strb	r3, [sp, #144]	; 0x90
   1a6f8:	b	1a654 <readstat_parse_dta+0x1308>
   1a6fc:	lsl	r3, r1, #1
   1a700:	ldr	r0, [r4, #216]	; 0xd8
   1a704:	lsl	r1, r1, #3
   1a708:	str	r3, [r4, #224]	; 0xe0
   1a70c:	bl	4300 <readstat_realloc@plt>
   1a710:	cmp	r0, #0
   1a714:	str	r0, [r4, #216]	; 0xd8
   1a718:	bne	1a684 <readstat_parse_dta+0x1338>
   1a71c:	b	1a698 <readstat_parse_dta+0x134c>
   1a720:	mov	ip, sl
   1a724:	mov	r2, r5
   1a728:	add	lr, sp, #160	; 0xa0
   1a72c:	mov	r3, ip
   1a730:	add	r2, r2, #8
   1a734:	ldm	r3!, {r0, r1}
   1a738:	cmp	r3, lr
   1a73c:	mov	ip, r3
   1a740:	str	r0, [r2, #-8]
   1a744:	str	r1, [r2, #-4]
   1a748:	bne	1a72c <readstat_parse_dta+0x13e0>
   1a74c:	ldrd	r2, [r4, #216]	; 0xd8
   1a750:	add	r0, r5, #24
   1a754:	add	r1, r3, #1
   1a758:	str	r1, [r4, #220]	; 0xdc
   1a75c:	mov	r1, r9
   1a760:	str	r5, [r2, r3, lsl #2]
   1a764:	ldr	r3, [r6, #12]
   1a768:	ldr	r2, [r6, #20]
   1a76c:	blx	r3
   1a770:	ldr	r3, [r5, #20]
   1a774:	cmp	r0, r3
   1a778:	beq	1a5ac <readstat_parse_dta+0x1260>
   1a77c:	b	19a24 <readstat_parse_dta+0x6d8>
   1a780:	ldr	r1, [pc, #-744]	; 1a4a0 <readstat_parse_dta+0x1154>
   1a784:	mov	r2, r5
   1a788:	mov	r0, r7
   1a78c:	add	r1, pc, r1
   1a790:	bl	3fb8 <memcmp@plt>
   1a794:	cmp	r0, #0
   1a798:	bne	1957c <readstat_parse_dta+0x230>
   1a79c:	ldr	r1, [pc, #-768]	; 1a4a4 <readstat_parse_dta+0x1158>
   1a7a0:	mov	r0, r4
   1a7a4:	add	r1, pc, r1
   1a7a8:	bl	18b9c <dta_read_tag>
   1a7ac:	subs	r5, r0, #0
   1a7b0:	beq	1a524 <readstat_parse_dta+0x11d8>
   1a7b4:	b	193fc <readstat_parse_dta+0xb0>
   1a7b8:	mov	r1, #0
   1a7bc:	ldr	r0, [r4, #120]	; 0x78
   1a7c0:	ldr	r3, [r4, #280]	; 0x118
   1a7c4:	ldr	r5, [r3, #8]
   1a7c8:	ldr	r2, [r3, #20]
   1a7cc:	blx	r5
   1a7d0:	cmn	r0, #1
   1a7d4:	bne	1a7fc <readstat_parse_dta+0x14b0>
   1a7d8:	ldr	r3, [r4, #264]	; 0x108
   1a7dc:	cmp	r3, #0
   1a7e0:	beq	193f8 <readstat_parse_dta+0xac>
   1a7e4:	ldrd	r2, [r4, #120]	; 0x78
   1a7e8:	add	r5, r4, #288	; 0x120
   1a7ec:	strd	r2, [sp]
   1a7f0:	ldr	r2, [pc, #-848]	; 1a4a8 <readstat_parse_dta+0x115c>
   1a7f4:	add	r2, pc, r2
   1a7f8:	b	1a120 <readstat_parse_dta+0xdd4>
   1a7fc:	ldr	r1, [pc, #-856]	; 1a4ac <readstat_parse_dta+0x1160>
   1a800:	mov	r0, r4
   1a804:	add	r1, pc, r1
   1a808:	bl	18b9c <dta_read_tag>
   1a80c:	subs	r5, r0, #0
   1a810:	bne	193fc <readstat_parse_dta+0xb0>
   1a814:	mov	r0, r4
   1a818:	bl	18b00 <dta_update_progress>
   1a81c:	subs	r5, r0, #0
   1a820:	bne	193fc <readstat_parse_dta+0xb0>
   1a824:	ldr	r0, [r4, #160]	; 0xa0
   1a828:	ldr	r9, [r4, #280]	; 0x118
   1a82c:	cmp	r0, #0
   1a830:	moveq	r8, r0
   1a834:	beq	1a844 <readstat_parse_dta+0x14f8>
   1a838:	bl	4240 <readstat_malloc@plt>
   1a83c:	subs	r8, r0, #0
   1a840:	beq	1a698 <readstat_parse_dta+0x134c>
   1a844:	ldrd	r6, [r4, #176]	; 0xb0
   1a848:	orrs	r3, r6, r7
   1a84c:	beq	1a910 <readstat_parse_dta+0x15c4>
   1a850:	ldr	ip, [r4, #160]	; 0xa0
   1a854:	mov	r1, #1
   1a858:	ldr	r3, [r9, #8]
   1a85c:	ldr	r2, [r9, #20]
   1a860:	mul	r0, ip, r6
   1a864:	blx	r3
   1a868:	cmn	r0, #1
   1a86c:	bne	1a910 <readstat_parse_dta+0x15c4>
   1a870:	mov	r5, #15
   1a874:	b	1a8dc <readstat_parse_dta+0x1590>
   1a878:	mov	r0, r8
   1a87c:	ldr	r3, [r9, #12]
   1a880:	ldr	r2, [r9, #20]
   1a884:	ldr	r1, [r4, #160]	; 0xa0
   1a888:	blx	r3
   1a88c:	ldr	r3, [r4, #160]	; 0xa0
   1a890:	cmp	r0, r3
   1a894:	bne	1ad58 <readstat_parse_dta+0x1a0c>
   1a898:	mov	r1, r4
   1a89c:	mov	r0, r8
   1a8a0:	bl	18cd0 <dta_handle_row>
   1a8a4:	subs	r5, r0, #0
   1a8a8:	bne	1a8dc <readstat_parse_dta+0x1590>
   1a8ac:	ldr	r3, [r4, #184]	; 0xb8
   1a8b0:	mov	r0, r4
   1a8b4:	ldr	r2, [r4, #188]	; 0xbc
   1a8b8:	adds	r3, r3, #1
   1a8bc:	adc	r2, r2, #0
   1a8c0:	str	r3, [r4, #184]	; 0xb8
   1a8c4:	str	r2, [r4, #188]	; 0xbc
   1a8c8:	bl	18b00 <dta_update_progress>
   1a8cc:	adds	r6, r6, #1
   1a8d0:	adc	r7, r7, #0
   1a8d4:	subs	r5, r0, #0
   1a8d8:	beq	1a918 <readstat_parse_dta+0x15cc>
   1a8dc:	cmp	r8, #0
   1a8e0:	beq	193fc <readstat_parse_dta+0xb0>
   1a8e4:	mov	r0, r8
   1a8e8:	bl	3ed4 <free@plt>
   1a8ec:	cmp	r5, #0
   1a8f0:	bne	193fc <readstat_parse_dta+0xb0>
   1a8f4:	ldr	r1, [pc, #-1100]	; 1a4b0 <readstat_parse_dta+0x1164>
   1a8f8:	mov	r0, r4
   1a8fc:	add	r1, pc, r1
   1a900:	bl	18b9c <dta_read_tag>
   1a904:	subs	r5, r0, #0
   1a908:	beq	1a530 <readstat_parse_dta+0x11e4>
   1a90c:	b	193fc <readstat_parse_dta+0xb0>
   1a910:	mov	r6, #0
   1a914:	mov	r7, #0
   1a918:	ldrd	r0, [r4, #168]	; 0xa8
   1a91c:	cmp	r6, r0
   1a920:	sbcs	r3, r7, r1
   1a924:	blt	1a878 <readstat_parse_dta+0x152c>
   1a928:	ldr	r2, [r4, #152]	; 0x98
   1a92c:	ldr	lr, [r4, #156]	; 0x9c
   1a930:	ldr	r3, [r4, #176]	; 0xb0
   1a934:	ldr	ip, [r4, #180]	; 0xb4
   1a938:	subs	r3, r2, r3
   1a93c:	str	r3, [sp, #32]
   1a940:	sbc	r3, lr, ip
   1a944:	str	r3, [sp, #36]	; 0x24
   1a948:	ldrd	r2, [sp, #32]
   1a94c:	cmp	r0, r2
   1a950:	sbcs	r3, r1, r3
   1a954:	bge	1a980 <readstat_parse_dta+0x1634>
   1a958:	ldr	r3, [sp, #32]
   1a95c:	mov	r1, #1
   1a960:	ldr	ip, [r4, #160]	; 0xa0
   1a964:	ldr	r2, [r9, #20]
   1a968:	subs	r0, r3, r0
   1a96c:	ldr	r3, [r9, #8]
   1a970:	mul	r0, ip, r0
   1a974:	blx	r3
   1a978:	cmn	r0, #1
   1a97c:	beq	1a870 <readstat_parse_dta+0x1524>
   1a980:	cmp	r8, #0
   1a984:	movne	r5, #0
   1a988:	bne	1a8e4 <readstat_parse_dta+0x1598>
   1a98c:	b	1a8f4 <readstat_parse_dta+0x15a8>
   1a990:	ldr	r1, [pc, #-1252]	; 1a4b4 <readstat_parse_dta+0x1168>
   1a994:	mov	r0, r4
   1a998:	add	r1, pc, r1
   1a99c:	bl	18b9c <dta_read_tag>
   1a9a0:	subs	r5, r0, #0
   1a9a4:	bne	193fc <readstat_parse_dta+0xb0>
   1a9a8:	ldr	r3, [r4, #260]	; 0x104
   1a9ac:	cmp	r3, #0
   1a9b0:	beq	193fc <readstat_parse_dta+0xb0>
   1a9b4:	ldr	r3, [pc, #-1284]	; 1a4b8 <readstat_parse_dta+0x116c>
   1a9b8:	mov	sl, r5
   1a9bc:	mov	r7, r5
   1a9c0:	add	r3, pc, r3
   1a9c4:	str	r3, [sp, #56]	; 0x38
   1a9c8:	ldr	r3, [pc, #-1300]	; 1a4bc <readstat_parse_dta+0x1170>
   1a9cc:	add	r3, pc, r3
   1a9d0:	str	r3, [sp, #60]	; 0x3c
   1a9d4:	ldr	r1, [r4, #100]	; 0x64
   1a9d8:	cmp	r1, #2
   1a9dc:	bne	1aaa8 <readstat_parse_dta+0x175c>
   1a9e0:	add	r0, sp, #128	; 0x80
   1a9e4:	ldr	r3, [r6, #12]
   1a9e8:	ldr	r2, [r6, #20]
   1a9ec:	blx	r3
   1a9f0:	cmp	r0, #1
   1a9f4:	bls	1ad2c <readstat_parse_dta+0x19e0>
   1a9f8:	ldrb	r3, [r4, #192]	; 0xc0
   1a9fc:	ldrsh	r8, [sp, #128]	; 0x80
   1aa00:	tst	r3, #1
   1aa04:	beq	1aa14 <readstat_parse_dta+0x16c8>
   1aa08:	uxth	r0, r8
   1aa0c:	bl	3ebc <byteswap2@plt>
   1aa10:	mov	r8, r0
   1aa14:	lsr	r3, r8, #3
   1aa18:	str	r3, [sp, #24]
   1aa1c:	add	r3, sp, #128	; 0x80
   1aa20:	ldr	r2, [r6, #20]
   1aa24:	str	r3, [sp, #40]	; 0x28
   1aa28:	ldr	r3, [r6, #12]
   1aa2c:	ldr	r0, [sp, #40]	; 0x28
   1aa30:	ldr	r1, [r4, #104]	; 0x68
   1aa34:	blx	r3
   1aa38:	ldr	r3, [r4, #104]	; 0x68
   1aa3c:	cmp	r0, r3
   1aa40:	bcc	1ad2c <readstat_parse_dta+0x19e0>
   1aa44:	mov	r1, #1
   1aa48:	ldr	r3, [r6, #8]
   1aa4c:	ldr	r2, [r6, #20]
   1aa50:	ldr	r0, [r4, #108]	; 0x6c
   1aa54:	blx	r3
   1aa58:	cmn	r0, #1
   1aa5c:	beq	1ad2c <readstat_parse_dta+0x19e0>
   1aa60:	mov	r0, r7
   1aa64:	mov	r1, r8
   1aa68:	bl	4300 <readstat_realloc@plt>
   1aa6c:	subs	r7, r0, #0
   1aa70:	beq	1ad50 <readstat_parse_dta+0x1a04>
   1aa74:	mov	r1, r8
   1aa78:	ldr	r3, [r6, #12]
   1aa7c:	ldr	r2, [r6, #20]
   1aa80:	blx	r3
   1aa84:	cmp	r8, r0
   1aa88:	bhi	1ad2c <readstat_parse_dta+0x19e0>
   1aa8c:	ldr	r3, [r4, #100]	; 0x64
   1aa90:	cmp	r3, #2
   1aa94:	bne	1ab8c <readstat_parse_dta+0x1840>
   1aa98:	mov	r8, #0
   1aa9c:	add	fp, sp, #88	; 0x58
   1aaa0:	mov	r9, r8
   1aaa4:	b	1ab40 <readstat_parse_dta+0x17f4>
   1aaa8:	mov	r0, r4
   1aaac:	ldr	r1, [sp, #56]	; 0x38
   1aab0:	bl	18b9c <dta_read_tag>
   1aab4:	subs	r3, r0, #0
   1aab8:	str	r3, [sp, #24]
   1aabc:	bne	1ad2c <readstat_parse_dta+0x19e0>
   1aac0:	mov	r1, #4
   1aac4:	add	r0, sp, #128	; 0x80
   1aac8:	ldr	r3, [r6, #12]
   1aacc:	ldr	r2, [r6, #20]
   1aad0:	blx	r3
   1aad4:	cmp	r0, #3
   1aad8:	bls	1ad2c <readstat_parse_dta+0x19e0>
   1aadc:	ldrb	r3, [r4, #192]	; 0xc0
   1aae0:	ldr	r8, [sp, #128]	; 0x80
   1aae4:	tst	r3, #1
   1aae8:	beq	1aa1c <readstat_parse_dta+0x16d0>
   1aaec:	mov	r0, r8
   1aaf0:	bl	3da8 <byteswap4@plt>
   1aaf4:	mov	r8, r0
   1aaf8:	b	1aa1c <readstat_parse_dta+0x16d0>
   1aafc:	mov	r3, #3
   1ab00:	strd	r8, [sp, #72]	; 0x48
   1ab04:	add	r2, r7, r8, lsl #3
   1ab08:	mov	r1, #33	; 0x21
   1ab0c:	mov	r0, fp
   1ab10:	str	r3, [sp, #80]	; 0x50
   1ab14:	ldr	r3, [r4, #236]	; 0xec
   1ab18:	str	r3, [sp]
   1ab1c:	mov	r3, #8
   1ab20:	str	r9, [sp, #84]	; 0x54
   1ab24:	bl	424c <readstat_convert@plt>
   1ab28:	cmp	r0, #0
   1ab2c:	bne	1ad28 <readstat_parse_dta+0x19dc>
   1ab30:	ldrb	r3, [sp, #88]	; 0x58
   1ab34:	cmp	r3, #0
   1ab38:	bne	1ab50 <readstat_parse_dta+0x1804>
   1ab3c:	add	r8, r8, #1
   1ab40:	ldr	r3, [sp, #24]
   1ab44:	cmp	r8, r3
   1ab48:	bne	1aafc <readstat_parse_dta+0x17b0>
   1ab4c:	b	1a9d4 <readstat_parse_dta+0x1688>
   1ab50:	ldr	r3, [r4, #276]	; 0x114
   1ab54:	str	fp, [sp, #8]
   1ab58:	str	r3, [sp, #12]
   1ab5c:	add	r3, sp, #80	; 0x50
   1ab60:	ldm	r3, {r0, r1}
   1ab64:	add	r3, sp, #72	; 0x48
   1ab68:	stm	sp, {r0, r1}
   1ab6c:	ldm	r3, {r2, r3}
   1ab70:	ldr	r0, [sp, #40]	; 0x28
   1ab74:	ldr	r1, [r4, #260]	; 0x104
   1ab78:	blx	r1
   1ab7c:	cmp	r0, #0
   1ab80:	beq	1ab3c <readstat_parse_dta+0x17f0>
   1ab84:	mov	r0, #4
   1ab88:	b	1ad28 <readstat_parse_dta+0x19dc>
   1ab8c:	cmp	r8, #8
   1ab90:	bls	1a9d4 <readstat_parse_dta+0x1688>
   1ab94:	mov	r0, r4
   1ab98:	ldr	r1, [sp, #60]	; 0x3c
   1ab9c:	bl	18b9c <dta_read_tag>
   1aba0:	cmp	r0, #0
   1aba4:	bne	1ad28 <readstat_parse_dta+0x19dc>
   1aba8:	ldrb	r3, [r4, #192]	; 0xc0
   1abac:	ldr	fp, [r7]
   1abb0:	ldr	r9, [r7, #4]
   1abb4:	tst	r3, #1
   1abb8:	beq	1abd4 <readstat_parse_dta+0x1888>
   1abbc:	mov	r0, fp
   1abc0:	bl	3da8 <byteswap4@plt>
   1abc4:	mov	fp, r0
   1abc8:	mov	r0, r9
   1abcc:	bl	3da8 <byteswap4@plt>
   1abd0:	mov	r9, r0
   1abd4:	sub	r8, r8, #8
   1abd8:	cmp	r8, r9
   1abdc:	bcc	1ad2c <readstat_parse_dta+0x19e0>
   1abe0:	sub	r8, r8, r9
   1abe4:	cmp	fp, r8, lsr #3
   1abe8:	bhi	1ad2c <readstat_parse_dta+0x19e0>
   1abec:	add	r3, fp, #1
   1abf0:	mov	r0, sl
   1abf4:	lsl	r3, r3, #3
   1abf8:	add	r8, r7, #8
   1abfc:	str	r3, [sp, #32]
   1ac00:	movw	r3, #32001	; 0x7d01
   1ac04:	cmp	r9, r3
   1ac08:	ldrhi	r3, [pc, #-1872]	; 1a4c0 <readstat_parse_dta+0x1174>
   1ac0c:	lslls	r3, r9, #2
   1ac10:	addls	r3, r3, #1
   1ac14:	str	r3, [sp, #24]
   1ac18:	ldr	r1, [sp, #24]
   1ac1c:	bl	400c <realloc@plt>
   1ac20:	subs	sl, r0, #0
   1ac24:	beq	1ad50 <readstat_parse_dta+0x1a04>
   1ac28:	ldrb	r3, [r4, #192]	; 0xc0
   1ac2c:	tst	r3, #1
   1ac30:	addne	r3, r7, #4
   1ac34:	addne	r2, r3, fp, lsl #2
   1ac38:	bne	1ac80 <readstat_parse_dta+0x1934>
   1ac3c:	lsl	fp, fp, #2
   1ac40:	add	r3, r8, fp
   1ac44:	str	r3, [sp, #44]	; 0x2c
   1ac48:	add	r3, sp, #88	; 0x58
   1ac4c:	str	r3, [sp, #40]	; 0x28
   1ac50:	add	r3, sp, #128	; 0x80
   1ac54:	str	r3, [sp, #48]	; 0x30
   1ac58:	add	r3, sp, #96	; 0x60
   1ac5c:	str	r3, [sp, #52]	; 0x34
   1ac60:	b	1ad14 <readstat_parse_dta+0x19c8>
   1ac64:	ldr	r0, [r3, #4]!
   1ac68:	str	r3, [sp, #40]	; 0x28
   1ac6c:	strd	r2, [sp, #44]	; 0x2c
   1ac70:	bl	3da8 <byteswap4@plt>
   1ac74:	ldr	r3, [sp, #40]	; 0x28
   1ac78:	ldr	r2, [sp, #44]	; 0x2c
   1ac7c:	str	r0, [r3]
   1ac80:	cmp	r2, r3
   1ac84:	bne	1ac64 <readstat_parse_dta+0x1918>
   1ac88:	b	1ac3c <readstat_parse_dta+0x18f0>
   1ac8c:	ldr	r3, [r8]
   1ac90:	cmp	r9, r3
   1ac94:	bls	1ad24 <readstat_parse_dta+0x19d8>
   1ac98:	add	r2, fp, r8
   1ac9c:	mov	r1, r4
   1aca0:	ldr	r0, [sp, #40]	; 0x28
   1aca4:	bl	18c24 <dta_interpret_int32_bytes>
   1aca8:	ldr	r2, [r8], #4
   1acac:	mov	r0, sl
   1acb0:	ldr	r1, [sp, #32]
   1acb4:	sub	r3, r9, r2
   1acb8:	cmp	r3, #32000	; 0x7d00
   1acbc:	add	r2, r1, r2
   1acc0:	ldr	r1, [r4, #236]	; 0xec
   1acc4:	movcs	r3, #32000	; 0x7d00
   1acc8:	add	r2, r7, r2
   1accc:	str	r1, [sp]
   1acd0:	ldr	r1, [sp, #24]
   1acd4:	bl	424c <readstat_convert@plt>
   1acd8:	cmp	r0, #0
   1acdc:	bne	1ad28 <readstat_parse_dta+0x19dc>
   1ace0:	ldr	r3, [r4, #276]	; 0x114
   1ace4:	str	sl, [sp, #8]
   1ace8:	str	r3, [sp, #12]
   1acec:	ldr	r3, [sp, #52]	; 0x34
   1acf0:	ldm	r3, {r0, r1}
   1acf4:	ldr	r3, [sp, #40]	; 0x28
   1acf8:	stm	sp, {r0, r1}
   1acfc:	ldr	r0, [sp, #48]	; 0x30
   1ad00:	ldm	r3, {r2, r3}
   1ad04:	ldr	r1, [r4, #260]	; 0x104
   1ad08:	blx	r1
   1ad0c:	cmp	r0, #0
   1ad10:	bne	1ab84 <readstat_parse_dta+0x1838>
   1ad14:	ldr	r3, [sp, #44]	; 0x2c
   1ad18:	cmp	r3, r8
   1ad1c:	bne	1ac8c <readstat_parse_dta+0x1940>
   1ad20:	b	1a9d4 <readstat_parse_dta+0x1688>
   1ad24:	mov	r0, #5
   1ad28:	mov	r5, r0
   1ad2c:	cmp	r7, #0
   1ad30:	beq	1ad3c <readstat_parse_dta+0x19f0>
   1ad34:	mov	r0, r7
   1ad38:	bl	3ed4 <free@plt>
   1ad3c:	cmp	sl, #0
   1ad40:	beq	193fc <readstat_parse_dta+0xb0>
   1ad44:	mov	r0, sl
   1ad48:	bl	3ed4 <free@plt>
   1ad4c:	b	193fc <readstat_parse_dta+0xb0>
   1ad50:	mov	r0, #3
   1ad54:	b	1ad28 <readstat_parse_dta+0x19dc>
   1ad58:	mov	r5, #2
   1ad5c:	b	1a8dc <readstat_parse_dta+0x1590>
   1ad60:	cmp	r7, #0
   1ad64:	bne	19de0 <readstat_parse_dta+0xa94>
   1ad68:	b	193fc <readstat_parse_dta+0xb0>
   1ad6c:	mov	r6, #0
   1ad70:	b	19afc <readstat_parse_dta+0x7b0>
   1ad74:	andeq	r0, r0, r0

0001ad78 <dta_113_write_int8>:
   1ad78:	cmp	r2, #100	; 0x64
   1ad7c:	strble	r2, [r0]
   1ad80:	movle	r0, #0
   1ad84:	movgt	r0, #20
   1ad88:	bx	lr

0001ad8c <dta_old_write_int8>:
   1ad8c:	cmp	r2, #127	; 0x7f
   1ad90:	strbne	r2, [r0]
   1ad94:	movne	r0, #0
   1ad98:	moveq	r0, #20
   1ad9c:	bx	lr

0001ada0 <dta_113_write_int16>:
   1ada0:	movw	r3, #32740	; 0x7fe4
   1ada4:	cmp	r2, r3
   1ada8:	strhle	r2, [r0]
   1adac:	movle	r0, #0
   1adb0:	movgt	r0, #20
   1adb4:	bx	lr

0001adb8 <dta_old_write_int16>:
   1adb8:	movw	r3, #32767	; 0x7fff
   1adbc:	cmp	r2, r3
   1adc0:	strhne	r2, [r0]
   1adc4:	movne	r0, #0
   1adc8:	moveq	r0, #20
   1adcc:	bx	lr

0001add0 <dta_113_write_int32>:
   1add0:	cmn	r2, #-2147483620	; 0x8000001c
   1add4:	strle	r2, [r0]
   1add8:	movle	r0, #0
   1addc:	movgt	r0, #20
   1ade0:	bx	lr

0001ade4 <dta_old_write_int32>:
   1ade4:	cmn	r2, #-2147483647	; 0x80000001
   1ade8:	strne	r2, [r0]
   1adec:	movne	r0, #0
   1adf0:	moveq	r0, #20
   1adf4:	bx	lr

0001adf8 <dta_117_write_string_ref>:
   1adf8:	cmp	r2, #0
   1adfc:	ldrne	r3, [r2, #8]
   1ae00:	ldrne	r2, [r2]
   1ae04:	strne	r3, [r0, #4]
   1ae08:	strne	r2, [r0]
   1ae0c:	movne	r0, #0
   1ae10:	moveq	r0, #34	; 0x22
   1ae14:	bx	lr

0001ae18 <dta_metadata_ok>:
   1ae18:	ldr	r3, [r0, #16]
   1ae1c:	cmp	r3, #0
   1ae20:	movne	r3, #6
   1ae24:	bne	1ae38 <dta_metadata_ok+0x20>
   1ae28:	ldr	r2, [r0, #8]
   1ae2c:	sub	r2, r2, #104	; 0x68
   1ae30:	cmp	r2, #16
   1ae34:	movcs	r3, #24
   1ae38:	mov	r0, r3
   1ae3c:	bx	lr

0001ae40 <dta_module_ctx_free>:
   1ae40:	b	3e8c <dta_ctx_free@plt>

0001ae44 <dta_write_tag>:
   1ae44:	ldrb	r3, [r1, #192]	; 0xc0
   1ae48:	ands	r3, r3, #4
   1ae4c:	beq	1ae58 <dta_write_tag+0x14>
   1ae50:	mov	r1, r2
   1ae54:	b	4174 <readstat_write_string@plt>
   1ae58:	mov	r0, r3
   1ae5c:	bx	lr

0001ae60 <dta_end_data>:
   1ae60:	ldr	r3, [r0, #308]	; 0x134
   1ae64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ae68:	sub	sp, sp, #60	; 0x3c
   1ae6c:	cmp	r3, #0
   1ae70:	moveq	r4, #14
   1ae74:	beq	1af20 <dta_end_data+0xc0>
   1ae78:	ldr	r2, [pc, #1612]	; 1b4cc <dta_end_data+0x66c>
   1ae7c:	mov	r5, r0
   1ae80:	ldr	r6, [r0, #300]	; 0x12c
   1ae84:	add	r2, pc, r2
   1ae88:	mov	r1, r6
   1ae8c:	bl	1ae44 <dta_write_tag>
   1ae90:	subs	r8, r0, #0
   1ae94:	movne	r4, r8
   1ae98:	bne	1af20 <dta_end_data+0xc0>
   1ae9c:	ldrb	r3, [r6, #192]	; 0xc0
   1aea0:	tst	r3, #4
   1aea4:	bne	1aecc <dta_end_data+0x6c>
   1aea8:	ldr	r3, [r6, #100]	; 0x64
   1aeac:	cmp	r3, #2
   1aeb0:	bne	1b150 <dta_end_data+0x2f0>
   1aeb4:	add	r3, sp, #32
   1aeb8:	mov	r4, #0
   1aebc:	mov	r9, r4
   1aec0:	add	sl, sp, #36	; 0x24
   1aec4:	str	r3, [sp]
   1aec8:	b	1b08c <dta_end_data+0x22c>
   1aecc:	ldr	r1, [pc, #1532]	; 1b4d0 <dta_end_data+0x670>
   1aed0:	mov	r0, r5
   1aed4:	add	r1, pc, r1
   1aed8:	bl	4174 <readstat_write_string@plt>
   1aedc:	subs	r4, r0, #0
   1aee0:	bne	1af20 <dta_end_data+0xc0>
   1aee4:	ldr	r3, [pc, #1512]	; 1b4d4 <dta_end_data+0x674>
   1aee8:	mov	r7, r8
   1aeec:	mvn	r9, #125	; 0x7d
   1aef0:	add	sl, sp, #36	; 0x24
   1aef4:	add	r3, pc, r3
   1aef8:	str	r3, [sp]
   1aefc:	ldr	r3, [r5, #64]	; 0x40
   1af00:	cmp	r7, r3
   1af04:	blt	1af2c <dta_end_data+0xcc>
   1af08:	ldr	r1, [pc, #1480]	; 1b4d8 <dta_end_data+0x678>
   1af0c:	mov	r0, r5
   1af10:	add	r1, pc, r1
   1af14:	bl	4174 <readstat_write_string@plt>
   1af18:	subs	r4, r0, #0
   1af1c:	beq	1aea8 <dta_end_data+0x48>
   1af20:	mov	r0, r4
   1af24:	add	sp, sp, #60	; 0x3c
   1af28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1af2c:	ldr	r3, [r5, #60]	; 0x3c
   1af30:	mov	r0, r5
   1af34:	ldr	r1, [sp]
   1af38:	ldr	fp, [r3, r7, lsl #2]
   1af3c:	bl	4174 <readstat_write_string@plt>
   1af40:	subs	r4, r0, #0
   1af44:	bne	1af20 <dta_end_data+0xc0>
   1af48:	ldr	lr, [r6, #116]	; 0x74
   1af4c:	ldr	r0, [fp]
   1af50:	ldr	r1, [fp, #8]
   1af54:	cmp	lr, #4
   1af58:	ldr	ip, [fp, #12]
   1af5c:	ldr	r2, [fp, #16]
   1af60:	strd	r0, [sp, #36]	; 0x24
   1af64:	mov	r1, sl
   1af68:	mov	r0, r5
   1af6c:	strbhi	r9, [sp, #48]	; 0x30
   1af70:	strhi	ip, [sp, #44]	; 0x2c
   1af74:	strbls	r9, [sp, #44]	; 0x2c
   1af78:	strhi	r2, [sp, #49]	; 0x31
   1af7c:	movhi	r2, #17
   1af80:	strls	r2, [sp, #45]	; 0x2d
   1af84:	movls	r2, #13
   1af88:	bl	4474 <readstat_write_bytes@plt>
   1af8c:	cmp	r0, #0
   1af90:	mov	r4, r0
   1af94:	bne	1af20 <dta_end_data+0xc0>
   1af98:	add	r1, fp, #20
   1af9c:	mov	r0, r5
   1afa0:	ldr	r2, [fp, #16]
   1afa4:	bl	4474 <readstat_write_bytes@plt>
   1afa8:	subs	r4, r0, #0
   1afac:	bne	1af20 <dta_end_data+0xc0>
   1afb0:	add	r7, r7, #1
   1afb4:	b	1aefc <dta_end_data+0x9c>
   1afb8:	mov	r1, r9
   1afbc:	mov	r0, r5
   1afc0:	bl	4444 <readstat_get_label_set@plt>
   1afc4:	mov	fp, #0
   1afc8:	mov	r7, r0
   1afcc:	mov	r2, fp
   1afd0:	ldr	r1, [r7, #264]	; 0x108
   1afd4:	cmp	r2, r1
   1afd8:	blt	1b09c <dta_end_data+0x23c>
   1afdc:	add	r3, fp, #1
   1afe0:	mov	r2, #2
   1afe4:	ldr	r1, [sp]
   1afe8:	lsl	r3, r3, #3
   1afec:	mov	r0, r5
   1aff0:	strh	r3, [sp, #32]
   1aff4:	bl	4474 <readstat_write_bytes@plt>
   1aff8:	subs	fp, r0, #0
   1affc:	bne	1b10c <dta_end_data+0x2ac>
   1b000:	mov	r1, fp
   1b004:	mov	r2, #14
   1b008:	mov	r0, sl
   1b00c:	bl	42b8 <memset@plt>
   1b010:	ldr	fp, [r6, #104]	; 0x68
   1b014:	add	r1, r7, #4
   1b018:	mov	r0, sl
   1b01c:	mov	r2, fp
   1b020:	bl	42dc <strncpy@plt>
   1b024:	ldr	r2, [r6, #108]	; 0x6c
   1b028:	mov	r1, sl
   1b02c:	mov	r0, r5
   1b030:	add	r2, fp, r2
   1b034:	bl	4474 <readstat_write_bytes@plt>
   1b038:	subs	fp, r0, #0
   1b03c:	bne	1b10c <dta_end_data+0x2ac>
   1b040:	ldrsh	r2, [sp, #32]
   1b044:	mov	r0, r4
   1b048:	mov	r1, r2
   1b04c:	str	r2, [sp, #4]
   1b050:	bl	400c <realloc@plt>
   1b054:	mov	r1, fp
   1b058:	ldr	r2, [sp, #4]
   1b05c:	mov	r4, r0
   1b060:	bl	42b8 <memset@plt>
   1b064:	ldr	r2, [r7, #264]	; 0x108
   1b068:	cmp	fp, r2
   1b06c:	blt	1b0d8 <dta_end_data+0x278>
   1b070:	ldrsh	r2, [sp, #32]
   1b074:	mov	r1, r4
   1b078:	mov	r0, r5
   1b07c:	bl	4474 <readstat_write_bytes@plt>
   1b080:	subs	fp, r0, #0
   1b084:	bne	1b10c <dta_end_data+0x2ac>
   1b088:	add	r9, r9, #1
   1b08c:	ldr	r3, [r5, #40]	; 0x28
   1b090:	cmp	r9, r3
   1b094:	blt	1afb8 <dta_end_data+0x158>
   1b098:	b	1b110 <dta_end_data+0x2b0>
   1b09c:	mov	r1, r2
   1b0a0:	mov	r0, r7
   1b0a4:	str	r2, [sp, #4]
   1b0a8:	bl	44ec <readstat_get_value_label@plt>
   1b0ac:	ldrb	r1, [r0, #12]
   1b0b0:	cmp	r1, #0
   1b0b4:	bne	1b108 <dta_end_data+0x2a8>
   1b0b8:	ldr	r1, [r0, #8]
   1b0bc:	cmp	r1, #1024	; 0x400
   1b0c0:	bhi	1b148 <dta_end_data+0x2e8>
   1b0c4:	ldr	r2, [sp, #4]
   1b0c8:	cmp	fp, r1
   1b0cc:	movlt	fp, r1
   1b0d0:	add	r2, r2, #1
   1b0d4:	b	1afd0 <dta_end_data+0x170>
   1b0d8:	mov	r1, fp
   1b0dc:	mov	r0, r7
   1b0e0:	bl	44ec <readstat_get_value_label@plt>
   1b0e4:	ldr	ip, [r0, #8]
   1b0e8:	add	fp, fp, #1
   1b0ec:	ldr	r2, [r0, #28]
   1b0f0:	ldr	r1, [r0, #24]
   1b0f4:	add	r0, r4, ip, lsl #3
   1b0f8:	cmp	r2, #8
   1b0fc:	movcs	r2, #8
   1b100:	bl	3f34 <memcpy@plt>
   1b104:	b	1b064 <dta_end_data+0x204>
   1b108:	mov	fp, #23
   1b10c:	mov	r8, fp
   1b110:	cmp	r4, #0
   1b114:	beq	1b120 <dta_end_data+0x2c0>
   1b118:	mov	r0, r4
   1b11c:	bl	3ed4 <free@plt>
   1b120:	mov	r4, r8
   1b124:	cmp	r4, #0
   1b128:	bne	1af20 <dta_end_data+0xc0>
   1b12c:	ldr	r2, [pc, #936]	; 1b4dc <dta_end_data+0x67c>
   1b130:	mov	r1, r6
   1b134:	mov	r0, r5
   1b138:	add	r2, pc, r2
   1b13c:	bl	1ae44 <dta_write_tag>
   1b140:	mov	r4, r0
   1b144:	b	1af20 <dta_end_data+0xc0>
   1b148:	mov	fp, #20
   1b14c:	b	1b10c <dta_end_data+0x2ac>
   1b150:	ldr	r1, [r6, #104]	; 0x68
   1b154:	mov	r0, #1
   1b158:	ldr	r3, [r6, #108]	; 0x6c
   1b15c:	add	r1, r1, r3
   1b160:	bl	3d6c <calloc@plt>
   1b164:	ldr	r2, [pc, #884]	; 1b4e0 <dta_end_data+0x680>
   1b168:	mov	sl, r0
   1b16c:	mov	r1, r6
   1b170:	mov	r0, r5
   1b174:	add	r2, pc, r2
   1b178:	bl	1ae44 <dta_write_tag>
   1b17c:	subs	r4, r0, #0
   1b180:	beq	1b494 <dta_end_data+0x634>
   1b184:	cmp	sl, #0
   1b188:	beq	1af20 <dta_end_data+0xc0>
   1b18c:	mov	r0, sl
   1b190:	bl	3ed4 <free@plt>
   1b194:	b	1b124 <dta_end_data+0x2c4>
   1b198:	mov	r0, r5
   1b19c:	ldr	r1, [sp]
   1b1a0:	mov	r4, #0
   1b1a4:	bl	4444 <readstat_get_label_set@plt>
   1b1a8:	ldr	r3, [r0, #264]	; 0x108
   1b1ac:	mov	fp, r0
   1b1b0:	str	r3, [sp, #28]
   1b1b4:	str	r4, [sp, #32]
   1b1b8:	ldr	r3, [sp, #28]
   1b1bc:	cmp	r4, r3
   1b1c0:	blt	1b2d0 <dta_end_data+0x470>
   1b1c4:	mov	r1, r6
   1b1c8:	mov	r0, r5
   1b1cc:	ldr	r2, [sp, #8]
   1b1d0:	bl	1ae44 <dta_write_tag>
   1b1d4:	subs	r4, r0, #0
   1b1d8:	bne	1b294 <dta_end_data+0x434>
   1b1dc:	ldr	r3, [sp, #28]
   1b1e0:	add	r1, sp, #36	; 0x24
   1b1e4:	mov	r0, r5
   1b1e8:	add	r2, r3, #1
   1b1ec:	ldr	r3, [sp, #32]
   1b1f0:	add	r3, r3, r2, lsl #3
   1b1f4:	mov	r2, #4
   1b1f8:	str	r3, [sp, #36]	; 0x24
   1b1fc:	bl	4474 <readstat_write_bytes@plt>
   1b200:	subs	r4, r0, #0
   1b204:	bne	1b294 <dta_end_data+0x434>
   1b208:	ldr	r4, [r6, #104]	; 0x68
   1b20c:	add	r1, fp, #4
   1b210:	mov	r0, sl
   1b214:	mov	r2, r4
   1b218:	bl	42dc <strncpy@plt>
   1b21c:	ldr	r2, [r6, #108]	; 0x6c
   1b220:	mov	r1, sl
   1b224:	mov	r0, r5
   1b228:	add	r2, r4, r2
   1b22c:	bl	4474 <readstat_write_bytes@plt>
   1b230:	subs	r4, r0, #0
   1b234:	bne	1b294 <dta_end_data+0x434>
   1b238:	ldr	r3, [sp, #32]
   1b23c:	cmp	r3, #0
   1b240:	bne	1b2f8 <dta_end_data+0x498>
   1b244:	add	fp, sp, #32
   1b248:	mov	r2, #4
   1b24c:	mov	r1, fp
   1b250:	mov	r0, r5
   1b254:	bl	4474 <readstat_write_bytes@plt>
   1b258:	subs	r4, r0, #0
   1b25c:	bne	1b294 <dta_end_data+0x434>
   1b260:	mov	r2, #4
   1b264:	mov	r1, fp
   1b268:	mov	r0, r5
   1b26c:	bl	4474 <readstat_write_bytes@plt>
   1b270:	subs	r4, r0, #0
   1b274:	bne	1b294 <dta_end_data+0x434>
   1b278:	ldr	r2, [pc, #612]	; 1b4e4 <dta_end_data+0x684>
   1b27c:	add	r2, pc, r2
   1b280:	mov	r1, r6
   1b284:	mov	r0, r5
   1b288:	bl	1ae44 <dta_write_tag>
   1b28c:	subs	r4, r0, #0
   1b290:	beq	1b45c <dta_end_data+0x5fc>
   1b294:	cmp	r9, #0
   1b298:	beq	1b2a4 <dta_end_data+0x444>
   1b29c:	mov	r0, r9
   1b2a0:	bl	3ed4 <free@plt>
   1b2a4:	cmp	r8, #0
   1b2a8:	beq	1b2b4 <dta_end_data+0x454>
   1b2ac:	mov	r0, r8
   1b2b0:	bl	3ed4 <free@plt>
   1b2b4:	cmp	r7, #0
   1b2b8:	beq	1b2c4 <dta_end_data+0x464>
   1b2bc:	mov	r0, r7
   1b2c0:	bl	3ed4 <free@plt>
   1b2c4:	cmp	sl, #0
   1b2c8:	bne	1b18c <dta_end_data+0x32c>
   1b2cc:	b	1b124 <dta_end_data+0x2c4>
   1b2d0:	mov	r1, r4
   1b2d4:	mov	r0, fp
   1b2d8:	bl	44ec <readstat_get_value_label@plt>
   1b2dc:	ldr	r3, [sp, #32]
   1b2e0:	add	r4, r4, #1
   1b2e4:	ldr	r2, [r0, #28]
   1b2e8:	add	r3, r3, #1
   1b2ec:	add	r3, r3, r2
   1b2f0:	str	r3, [sp, #32]
   1b2f4:	b	1b1b8 <dta_end_data+0x358>
   1b2f8:	ldr	r1, [sp, #28]
   1b2fc:	mov	r0, r9
   1b300:	lsl	r1, r1, #2
   1b304:	bl	400c <realloc@plt>
   1b308:	ldr	r1, [sp, #28]
   1b30c:	mov	r9, r0
   1b310:	mov	r0, r8
   1b314:	lsl	r1, r1, #2
   1b318:	bl	400c <realloc@plt>
   1b31c:	mov	r8, r0
   1b320:	mov	r0, r7
   1b324:	ldr	r1, [sp, #32]
   1b328:	bl	400c <realloc@plt>
   1b32c:	mov	r7, r0
   1b330:	mov	r0, fp
   1b334:	ldr	r1, [sp, #12]
   1b338:	bl	3dc0 <readstat_sort_label_set@plt>
   1b33c:	mov	r3, r4
   1b340:	ldr	r2, [sp, #28]
   1b344:	cmp	r3, r2
   1b348:	blt	1b3d4 <dta_end_data+0x574>
   1b34c:	mov	r2, #4
   1b350:	add	r1, sp, #28
   1b354:	mov	r0, r5
   1b358:	bl	4474 <readstat_write_bytes@plt>
   1b35c:	subs	r4, r0, #0
   1b360:	bne	1b294 <dta_end_data+0x434>
   1b364:	mov	r2, #4
   1b368:	add	r1, sp, #32
   1b36c:	mov	r0, r5
   1b370:	bl	4474 <readstat_write_bytes@plt>
   1b374:	subs	r4, r0, #0
   1b378:	bne	1b294 <dta_end_data+0x434>
   1b37c:	ldr	r2, [sp, #28]
   1b380:	mov	r1, r9
   1b384:	mov	r0, r5
   1b388:	lsl	r2, r2, #2
   1b38c:	bl	4474 <readstat_write_bytes@plt>
   1b390:	subs	r4, r0, #0
   1b394:	bne	1b294 <dta_end_data+0x434>
   1b398:	ldr	r2, [sp, #28]
   1b39c:	mov	r1, r8
   1b3a0:	mov	r0, r5
   1b3a4:	lsl	r2, r2, #2
   1b3a8:	bl	4474 <readstat_write_bytes@plt>
   1b3ac:	subs	r4, r0, #0
   1b3b0:	bne	1b294 <dta_end_data+0x434>
   1b3b4:	mov	r1, r7
   1b3b8:	mov	r0, r5
   1b3bc:	ldr	r2, [sp, #32]
   1b3c0:	bl	4474 <readstat_write_bytes@plt>
   1b3c4:	subs	r4, r0, #0
   1b3c8:	bne	1b294 <dta_end_data+0x434>
   1b3cc:	ldr	r2, [sp, #16]
   1b3d0:	b	1b280 <dta_end_data+0x420>
   1b3d4:	mov	r1, r3
   1b3d8:	mov	r0, fp
   1b3dc:	str	r3, [sp, #20]
   1b3e0:	bl	44ec <readstat_get_value_label@plt>
   1b3e4:	ldr	r1, [r0, #24]
   1b3e8:	ldr	r3, [r0, #28]
   1b3ec:	str	r3, [sp, #4]
   1b3f0:	ldr	r3, [sp, #20]
   1b3f4:	str	r4, [r9, r3, lsl #2]
   1b3f8:	ldrb	r2, [r0, #12]
   1b3fc:	cmp	r2, #0
   1b400:	beq	1b44c <dta_end_data+0x5ec>
   1b404:	ldr	r0, [r5, #8]
   1b408:	cmp	r0, #112	; 0x70
   1b40c:	ble	1b454 <dta_end_data+0x5f4>
   1b410:	add	r2, r2, #-2147483648	; 0x80000000
   1b414:	sub	r2, r2, #123	; 0x7b
   1b418:	add	r0, r7, r4
   1b41c:	str	r2, [r8, r3, lsl #2]
   1b420:	ldr	r2, [sp, #4]
   1b424:	str	r3, [sp, #20]
   1b428:	bl	3f34 <memcpy@plt>
   1b42c:	ldr	r3, [sp, #4]
   1b430:	add	r2, r3, r4
   1b434:	mov	r3, #0
   1b438:	add	r4, r2, #1
   1b43c:	strb	r3, [r7, r2]
   1b440:	ldr	r3, [sp, #20]
   1b444:	add	r3, r3, #1
   1b448:	b	1b340 <dta_end_data+0x4e0>
   1b44c:	ldr	r2, [r0, #8]
   1b450:	b	1b418 <dta_end_data+0x5b8>
   1b454:	mov	r4, #23
   1b458:	b	1b294 <dta_end_data+0x434>
   1b45c:	ldr	r3, [sp]
   1b460:	add	r3, r3, #1
   1b464:	str	r3, [sp]
   1b468:	ldr	r2, [sp]
   1b46c:	ldr	r3, [r5, #40]	; 0x28
   1b470:	cmp	r2, r3
   1b474:	blt	1b198 <dta_end_data+0x338>
   1b478:	ldr	r2, [pc, #104]	; 1b4e8 <dta_end_data+0x688>
   1b47c:	mov	r1, r6
   1b480:	mov	r0, r5
   1b484:	add	r2, pc, r2
   1b488:	bl	1ae44 <dta_write_tag>
   1b48c:	mov	r4, r0
   1b490:	b	1b294 <dta_end_data+0x434>
   1b494:	ldr	r3, [pc, #80]	; 1b4ec <dta_end_data+0x68c>
   1b498:	mov	r7, r4
   1b49c:	mov	r8, r4
   1b4a0:	mov	r9, r4
   1b4a4:	str	r4, [sp]
   1b4a8:	add	r3, pc, r3
   1b4ac:	str	r3, [sp, #8]
   1b4b0:	ldr	r3, [pc, #56]	; 1b4f0 <dta_end_data+0x690>
   1b4b4:	add	r3, pc, r3
   1b4b8:	str	r3, [sp, #12]
   1b4bc:	ldr	r3, [pc, #48]	; 1b4f4 <dta_end_data+0x694>
   1b4c0:	add	r3, pc, r3
   1b4c4:	str	r3, [sp, #16]
   1b4c8:	b	1b468 <dta_end_data+0x608>
   1b4cc:	.word	0x00007e4b
   1b4d0:	.word	0x00007de4
   1b4d4:	.word	0x00007dcc
   1b4d8:	.word	0x00007e48
   1b4dc:	.word	0x00007c39
   1b4e0:	.word	0x00007b98
   1b4e4:	.word	0x00007aa5
   1b4e8:	.word	0x000078dd
   1b4ec:	.word	0x00007873
   1b4f0:	.word	0x00000134
   1b4f4:	.word	0x00007861

0001b4f8 <dta_write_missing_string>:
   1b4f8:	push	{r4, lr}
   1b4fc:	ldr	r2, [r1, #1596]	; 0x63c
   1b500:	mov	r1, #0
   1b504:	bl	42b8 <memset@plt>
   1b508:	mov	r0, #0
   1b50c:	pop	{r4, pc}

0001b510 <dta_118_write_string_ref>:
   1b510:	cmp	r2, #0
   1b514:	push	{r0, r1, r4, r5, r6, lr}
   1b518:	moveq	r0, #34	; 0x22
   1b51c:	beq	1b570 <dta_118_write_string_ref+0x60>
   1b520:	mov	r5, r0
   1b524:	ldr	r3, [r2]
   1b528:	ldr	r6, [r2, #8]
   1b52c:	ldr	r4, [r2, #12]
   1b530:	strh	r3, [r0]
   1b534:	str	r6, [sp]
   1b538:	str	r4, [sp, #4]
   1b53c:	bl	3ec8 <machine_is_little_endian@plt>
   1b540:	cmp	r0, #0
   1b544:	bne	1b55c <dta_118_write_string_ref+0x4c>
   1b548:	lsl	r3, r4, #16
   1b54c:	orr	r3, r3, r6, lsr #16
   1b550:	lsl	r6, r6, #16
   1b554:	str	r6, [sp]
   1b558:	str	r3, [sp, #4]
   1b55c:	ldr	r0, [sp]
   1b560:	ldrh	r3, [sp, #4]
   1b564:	str	r0, [r5, #2]
   1b568:	mov	r0, #0
   1b56c:	strh	r3, [r5, #6]
   1b570:	add	sp, sp, #8
   1b574:	pop	{r4, r5, r6, pc}

0001b578 <dta_measure_tag>:
   1b578:	ldrb	r0, [r0, #192]	; 0xc0
   1b57c:	ands	r0, r0, #4
   1b580:	bxeq	lr
   1b584:	mov	r0, r1
   1b588:	b	421c <strlen@plt>

0001b58c <dta_write_string>:
   1b58c:	push	{r4, r5, r6, lr}
   1b590:	subs	r4, r2, #0
   1b594:	mov	r6, r0
   1b598:	ldr	r5, [r1, #1596]	; 0x63c
   1b59c:	beq	1b5ac <dta_write_string+0x20>
   1b5a0:	ldrb	r3, [r4]
   1b5a4:	cmp	r3, #0
   1b5a8:	bne	1b5c4 <dta_write_string+0x38>
   1b5ac:	mov	r2, r5
   1b5b0:	mov	r1, #0
   1b5b4:	mov	r0, r6
   1b5b8:	bl	42b8 <memset@plt>
   1b5bc:	mov	r0, #0
   1b5c0:	pop	{r4, r5, r6, pc}
   1b5c4:	mov	r0, r4
   1b5c8:	bl	421c <strlen@plt>
   1b5cc:	cmp	r5, r0
   1b5d0:	bcc	1b5e8 <dta_write_string+0x5c>
   1b5d4:	mov	r2, r5
   1b5d8:	mov	r1, r4
   1b5dc:	mov	r0, r6
   1b5e0:	bl	42dc <strncpy@plt>
   1b5e4:	b	1b5bc <dta_write_string+0x30>
   1b5e8:	mov	r0, #22
   1b5ec:	pop	{r4, r5, r6, pc}

0001b5f0 <dta_compare_value_labels>:
   1b5f0:	ldrb	r3, [r0, #12]
   1b5f4:	ldrb	r2, [r1, #12]
   1b5f8:	cmp	r3, #0
   1b5fc:	beq	1b610 <dta_compare_value_labels+0x20>
   1b600:	cmp	r2, #0
   1b604:	beq	1b628 <dta_compare_value_labels+0x38>
   1b608:	sub	r0, r3, r2
   1b60c:	bx	lr
   1b610:	cmp	r2, #0
   1b614:	bne	1b630 <dta_compare_value_labels+0x40>
   1b618:	ldr	r0, [r0, #8]
   1b61c:	ldr	r3, [r1, #8]
   1b620:	sub	r0, r0, r3
   1b624:	bx	lr
   1b628:	mov	r0, #1
   1b62c:	bx	lr
   1b630:	mvn	r0, #0
   1b634:	bx	lr

0001b638 <dta_numeric_variable_width.isra.1>:
   1b638:	cmp	r0, #5
   1b63c:	beq	1b660 <dta_numeric_variable_width.isra.1+0x28>
   1b640:	sub	r3, r0, #3
   1b644:	cmp	r3, #1
   1b648:	bls	1b668 <dta_numeric_variable_width.isra.1+0x30>
   1b64c:	cmp	r0, #2
   1b650:	subne	r0, r0, #1
   1b654:	clzne	r0, r0
   1b658:	lsrne	r0, r0, #5
   1b65c:	bx	lr
   1b660:	mov	r0, #8
   1b664:	bx	lr
   1b668:	mov	r0, #4
   1b66c:	bx	lr

0001b670 <dta_111_variable_width>:
   1b670:	cmp	r0, #0
   1b674:	beq	1b67c <dta_111_variable_width+0xc>
   1b678:	b	1b638 <dta_numeric_variable_width.isra.1>
   1b67c:	sub	r3, r1, #1
   1b680:	cmp	r3, #244	; 0xf4
   1b684:	movcs	r1, #244	; 0xf4
   1b688:	mov	r0, r1
   1b68c:	bx	lr

0001b690 <dta_old_variable_width>:
   1b690:	cmp	r0, #0
   1b694:	beq	1b69c <dta_old_variable_width+0xc>
   1b698:	b	1b638 <dta_numeric_variable_width.isra.1>
   1b69c:	sub	r3, r1, #1
   1b6a0:	cmp	r3, #128	; 0x80
   1b6a4:	movcs	r1, #128	; 0x80
   1b6a8:	mov	r0, r1
   1b6ac:	bx	lr

0001b6b0 <dta_117_variable_width>:
   1b6b0:	subs	r3, r0, #0
   1b6b4:	bne	1b6d4 <dta_117_variable_width+0x24>
   1b6b8:	sub	r0, r1, #1
   1b6bc:	movw	r2, #2044	; 0x7fc
   1b6c0:	movw	r3, #2045	; 0x7fd
   1b6c4:	cmp	r0, r2
   1b6c8:	movhi	r1, r3
   1b6cc:	mov	r0, r1
   1b6d0:	bx	lr
   1b6d4:	cmp	r3, #6
   1b6d8:	beq	1b6e0 <dta_117_variable_width+0x30>
   1b6dc:	b	1b638 <dta_numeric_variable_width.isra.1>
   1b6e0:	mov	r1, #8
   1b6e4:	b	1b6cc <dta_117_variable_width+0x1c>

0001b6e8 <dta_write_chunk>:
   1b6e8:	push	{r4, r5, r6, r7, r8, lr}
   1b6ec:	mov	r4, r0
   1b6f0:	mov	r5, r1
   1b6f4:	mov	r7, r3
   1b6f8:	ldr	r8, [sp, #24]
   1b6fc:	ldr	r6, [sp, #28]
   1b700:	bl	1ae44 <dta_write_tag>
   1b704:	cmp	r0, #0
   1b708:	popne	{r4, r5, r6, r7, r8, pc}
   1b70c:	mov	r2, r8
   1b710:	mov	r1, r7
   1b714:	mov	r0, r4
   1b718:	bl	4474 <readstat_write_bytes@plt>
   1b71c:	cmp	r0, #0
   1b720:	popne	{r4, r5, r6, r7, r8, pc}
   1b724:	mov	r2, r6
   1b728:	mov	r1, r5
   1b72c:	mov	r0, r4
   1b730:	pop	{r4, r5, r6, r7, r8, lr}
   1b734:	b	1ae44 <dta_write_tag>

0001b738 <dta_old_write_missing_numeric>:
   1b738:	ldr	r2, [r1]
   1b73c:	mov	r3, r0
   1b740:	cmp	r2, #1
   1b744:	moveq	r2, #127	; 0x7f
   1b748:	strbeq	r2, [r0]
   1b74c:	beq	1b77c <dta_old_write_missing_numeric+0x44>
   1b750:	cmp	r2, #2
   1b754:	movweq	r2, #32767	; 0x7fff
   1b758:	strheq	r2, [r0]
   1b75c:	beq	1b77c <dta_old_write_missing_numeric+0x44>
   1b760:	cmp	r2, #3
   1b764:	mvneq	r2, #-2147483648	; 0x80000000
   1b768:	beq	1b778 <dta_old_write_missing_numeric+0x40>
   1b76c:	cmp	r2, #4
   1b770:	bne	1b784 <dta_old_write_missing_numeric+0x4c>
   1b774:	mov	r2, #2130706432	; 0x7f000000
   1b778:	str	r2, [r3]
   1b77c:	mov	r0, #0
   1b780:	bx	lr
   1b784:	cmp	r2, #5
   1b788:	bne	1b77c <dta_old_write_missing_numeric+0x44>
   1b78c:	ldr	r1, [pc, #36]	; 1b7b8 <dta_old_write_missing_numeric+0x80>
   1b790:	sub	sp, sp, #8
   1b794:	mov	r0, #0
   1b798:	mov	r2, sp
   1b79c:	strd	r0, [sp]
   1b7a0:	ldm	r2!, {r0, r1}
   1b7a4:	str	r0, [r3]
   1b7a8:	mov	r0, #0
   1b7ac:	str	r1, [r3, #4]
   1b7b0:	add	sp, sp, #8
   1b7b4:	bx	lr
   1b7b8:	.word	0x7fe00000

0001b7bc <dta_113_write_missing_tagged>:
   1b7bc:	mov	ip, r0
   1b7c0:	sub	r0, r2, #97	; 0x61
   1b7c4:	uxtb	r3, r0
   1b7c8:	cmp	r3, #25
   1b7cc:	bhi	1b870 <dta_113_write_missing_tagged+0xb4>
   1b7d0:	ldr	r3, [r1]
   1b7d4:	cmp	r3, #1
   1b7d8:	addeq	r2, r2, #5
   1b7dc:	strbeq	r2, [ip]
   1b7e0:	beq	1b7f8 <dta_113_write_missing_tagged+0x3c>
   1b7e4:	cmp	r3, #2
   1b7e8:	bne	1b800 <dta_113_write_missing_tagged+0x44>
   1b7ec:	add	r2, r2, #32512	; 0x7f00
   1b7f0:	add	r2, r2, #133	; 0x85
   1b7f4:	strh	r2, [ip]
   1b7f8:	mov	r0, #0
   1b7fc:	bx	lr
   1b800:	cmp	r3, #3
   1b804:	addeq	r2, r2, #-2147483648	; 0x80000000
   1b808:	subeq	r2, r2, #123	; 0x7b
   1b80c:	streq	r2, [ip]
   1b810:	beq	1b7f8 <dta_113_write_missing_tagged+0x3c>
   1b814:	cmp	r3, #4
   1b818:	bne	1b830 <dta_113_write_missing_tagged+0x74>
   1b81c:	lsl	r0, r0, #11
   1b820:	add	r0, r0, #2130706432	; 0x7f000000
   1b824:	add	r0, r0, #2048	; 0x800
   1b828:	str	r0, [ip]
   1b82c:	b	1b7f8 <dta_113_write_missing_tagged+0x3c>
   1b830:	cmp	r3, #5
   1b834:	bne	1b878 <dta_113_write_missing_tagged+0xbc>
   1b838:	lsl	r2, r0, #8
   1b83c:	ldr	r0, [pc, #60]	; 1b880 <dta_113_write_missing_tagged+0xc4>
   1b840:	mov	r3, #0
   1b844:	adds	r1, r3, r3
   1b848:	sub	sp, sp, #8
   1b84c:	adc	r2, r2, r0
   1b850:	stm	sp, {r1, r2}
   1b854:	mov	r2, sp
   1b858:	ldm	r2!, {r0, r1}
   1b85c:	str	r0, [ip]
   1b860:	mov	r0, r3
   1b864:	str	r1, [ip, #4]
   1b868:	add	sp, sp, #8
   1b86c:	bx	lr
   1b870:	mov	r0, #21
   1b874:	bx	lr
   1b878:	mov	r0, #23
   1b87c:	bx	lr
   1b880:	.word	0x7fe00100

0001b884 <dta_emit_header_data_label.part.8>:
   1b884:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   1b888:	mov	r5, r0
   1b88c:	mov	r8, r1
   1b890:	add	r7, r0, #88	; 0x58
   1b894:	ldr	r4, [r1, #8]
   1b898:	cmp	r4, #0
   1b89c:	beq	1b908 <dta_emit_header_data_label.part.8+0x84>
   1b8a0:	cmp	r4, #1
   1b8a4:	bne	1b8f0 <dta_emit_header_data_label.part.8+0x6c>
   1b8a8:	mov	r0, r7
   1b8ac:	bl	421c <strlen@plt>
   1b8b0:	strb	r0, [sp, #6]
   1b8b4:	mov	r2, r4
   1b8b8:	add	r1, sp, #6
   1b8bc:	mov	r0, r5
   1b8c0:	bl	4474 <readstat_write_bytes@plt>
   1b8c4:	subs	r4, r0, #0
   1b8c8:	bne	1b8e4 <dta_emit_header_data_label.part.8+0x60>
   1b8cc:	mov	r1, r7
   1b8d0:	mov	r0, r5
   1b8d4:	bl	4174 <readstat_write_string@plt>
   1b8d8:	subs	r4, r0, #0
   1b8dc:	moveq	r6, r4
   1b8e0:	beq	1b940 <dta_emit_header_data_label.part.8+0xbc>
   1b8e4:	mov	r0, r4
   1b8e8:	add	sp, sp, #8
   1b8ec:	pop	{r4, r5, r6, r7, r8, pc}
   1b8f0:	cmp	r4, #2
   1b8f4:	bne	1b8cc <dta_emit_header_data_label.part.8+0x48>
   1b8f8:	mov	r0, r7
   1b8fc:	bl	421c <strlen@plt>
   1b900:	strh	r0, [sp, #6]
   1b904:	b	1b8b4 <dta_emit_header_data_label.part.8+0x30>
   1b908:	ldr	r4, [r1, #4]
   1b90c:	mov	r0, #1
   1b910:	mov	r1, r4
   1b914:	bl	3d6c <calloc@plt>
   1b918:	mov	r6, r0
   1b91c:	mov	r2, r4
   1b920:	mov	r1, r7
   1b924:	bl	42dc <strncpy@plt>
   1b928:	mov	r2, r4
   1b92c:	mov	r1, r6
   1b930:	mov	r0, r5
   1b934:	bl	4474 <readstat_write_bytes@plt>
   1b938:	subs	r4, r0, #0
   1b93c:	bne	1b960 <dta_emit_header_data_label.part.8+0xdc>
   1b940:	ldr	r2, [pc, #36]	; 1b96c <dta_emit_header_data_label.part.8+0xe8>
   1b944:	mov	r1, r8
   1b948:	mov	r0, r5
   1b94c:	add	r2, pc, r2
   1b950:	bl	1ae44 <dta_write_tag>
   1b954:	cmp	r6, #0
   1b958:	mov	r4, r0
   1b95c:	beq	1b8e4 <dta_emit_header_data_label.part.8+0x60>
   1b960:	mov	r0, r6
   1b964:	bl	3ed4 <free@plt>
   1b968:	b	1b8e4 <dta_emit_header_data_label.part.8+0x60>
   1b96c:	.word	0x000071e9

0001b970 <dta_emit_header_time_stamp.part.9>:
   1b970:	push	{r4, r5, r6, r7, r8, r9, lr}
   1b974:	mov	r5, r0
   1b978:	sub	sp, sp, #76	; 0x4c
   1b97c:	mov	r7, r1
   1b980:	add	r0, sp, #20
   1b984:	ldr	r3, [r5, #20]
   1b988:	str	r3, [sp, #20]
   1b98c:	bl	4180 <localtime@plt>
   1b990:	ldr	r8, [r7, #16]
   1b994:	mov	r4, r0
   1b998:	mov	r0, #1
   1b99c:	mov	r1, r8
   1b9a0:	bl	3d6c <calloc@plt>
   1b9a4:	ldr	r3, [pc, #312]	; 1bae4 <dta_emit_header_time_stamp.part.9+0x174>
   1b9a8:	add	r2, sp, #24
   1b9ac:	mov	r6, r0
   1b9b0:	mov	lr, r2
   1b9b4:	add	r3, pc, r3
   1b9b8:	add	r9, r3, #48	; 0x30
   1b9bc:	ldr	r0, [r3]
   1b9c0:	mov	ip, r2
   1b9c4:	add	r3, r3, #8
   1b9c8:	ldr	r1, [r3, #-4]
   1b9cc:	cmp	r3, r9
   1b9d0:	stmia	ip!, {r0, r1}
   1b9d4:	mov	r2, ip
   1b9d8:	bne	1b9bc <dta_emit_header_time_stamp.part.9+0x4c>
   1b9dc:	cmp	r4, #0
   1b9e0:	moveq	r4, #39	; 0x27
   1b9e4:	beq	1babc <dta_emit_header_time_stamp.part.9+0x14c>
   1b9e8:	cmp	r6, #0
   1b9ec:	moveq	r4, #3
   1b9f0:	beq	1babc <dta_emit_header_time_stamp.part.9+0x14c>
   1b9f4:	ldr	r3, [r4, #4]
   1b9f8:	mov	r1, r8
   1b9fc:	mov	r0, r6
   1ba00:	ldr	r2, [pc, #224]	; 1bae8 <dta_emit_header_time_stamp.part.9+0x178>
   1ba04:	str	r3, [sp, #12]
   1ba08:	ldr	r3, [r4, #8]
   1ba0c:	add	r2, pc, r2
   1ba10:	str	r3, [sp, #8]
   1ba14:	ldr	r3, [r4, #20]
   1ba18:	add	r3, r3, #1888	; 0x760
   1ba1c:	add	r3, r3, #12
   1ba20:	str	r3, [sp, #4]
   1ba24:	ldr	r3, [r4, #16]
   1ba28:	add	lr, lr, r3, lsl #2
   1ba2c:	str	lr, [sp]
   1ba30:	ldr	r3, [r4, #12]
   1ba34:	bl	4294 <snprintf@plt>
   1ba38:	uxtb	r0, r0
   1ba3c:	cmp	r0, #0
   1ba40:	moveq	r4, #13
   1ba44:	strb	r0, [sp, #19]
   1ba48:	beq	1babc <dta_emit_header_time_stamp.part.9+0x14c>
   1ba4c:	ldrb	r3, [r7, #192]	; 0xc0
   1ba50:	tst	r3, #4
   1ba54:	beq	1bad0 <dta_emit_header_time_stamp.part.9+0x160>
   1ba58:	ldr	r2, [pc, #140]	; 1baec <dta_emit_header_time_stamp.part.9+0x17c>
   1ba5c:	mov	r1, r7
   1ba60:	mov	r0, r5
   1ba64:	add	r2, pc, r2
   1ba68:	bl	1ae44 <dta_write_tag>
   1ba6c:	subs	r4, r0, #0
   1ba70:	bne	1babc <dta_emit_header_time_stamp.part.9+0x14c>
   1ba74:	mov	r2, #1
   1ba78:	add	r1, sp, #19
   1ba7c:	mov	r0, r5
   1ba80:	bl	4474 <readstat_write_bytes@plt>
   1ba84:	subs	r4, r0, #0
   1ba88:	bne	1babc <dta_emit_header_time_stamp.part.9+0x14c>
   1ba8c:	ldrb	r2, [sp, #19]
   1ba90:	mov	r1, r6
   1ba94:	mov	r0, r5
   1ba98:	bl	4474 <readstat_write_bytes@plt>
   1ba9c:	subs	r4, r0, #0
   1baa0:	bne	1babc <dta_emit_header_time_stamp.part.9+0x14c>
   1baa4:	ldr	r2, [pc, #68]	; 1baf0 <dta_emit_header_time_stamp.part.9+0x180>
   1baa8:	mov	r1, r7
   1baac:	mov	r0, r5
   1bab0:	add	r2, pc, r2
   1bab4:	bl	1ae44 <dta_write_tag>
   1bab8:	mov	r4, r0
   1babc:	mov	r0, r6
   1bac0:	bl	3ed4 <free@plt>
   1bac4:	mov	r0, r4
   1bac8:	add	sp, sp, #76	; 0x4c
   1bacc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1bad0:	mov	r1, r6
   1bad4:	mov	r0, r5
   1bad8:	ldr	r2, [r7, #16]
   1badc:	bl	4474 <readstat_write_bytes@plt>
   1bae0:	b	1bab8 <dta_emit_header_time_stamp.part.9+0x148>
   1bae4:	.word	0x00007374
   1bae8:	.word	0x00007372
   1baec:	.word	0x000070da
   1baf0:	.word	0x0000709a

0001baf4 <dta_validate_name>:
   1baf4:	push	{r0, r1, r2, r4, r5, lr}
   1baf8:	mov	r5, r2
   1bafc:	mov	r4, r0
   1bb00:	bl	421c <strlen@plt>
   1bb04:	cmp	r0, r5
   1bb08:	movhi	r0, #28
   1bb0c:	bhi	1bd78 <dta_validate_name+0x284>
   1bb10:	ldrb	r3, [r4]
   1bb14:	cmp	r3, #0
   1bb18:	subne	r0, r4, #1
   1bb1c:	bne	1bb4c <dta_validate_name+0x58>
   1bb20:	mov	r0, #38	; 0x26
   1bb24:	b	1bd78 <dta_validate_name+0x284>
   1bb28:	cmp	r2, #95	; 0x5f
   1bb2c:	beq	1bb4c <dta_validate_name+0x58>
   1bb30:	bic	r1, r2, #32
   1bb34:	sub	r1, r1, #65	; 0x41
   1bb38:	cmp	r1, #25
   1bb3c:	bls	1bb4c <dta_validate_name+0x58>
   1bb40:	sub	r2, r2, #48	; 0x30
   1bb44:	cmp	r2, #9
   1bb48:	bhi	1bd80 <dta_validate_name+0x28c>
   1bb4c:	ldrb	r2, [r0, #1]!
   1bb50:	cmp	r2, #0
   1bb54:	bne	1bb28 <dta_validate_name+0x34>
   1bb58:	cmp	r3, #95	; 0x5f
   1bb5c:	beq	1bb74 <dta_validate_name+0x80>
   1bb60:	bic	r3, r3, #32
   1bb64:	sub	r3, r3, #65	; 0x41
   1bb68:	cmp	r3, #25
   1bb6c:	movhi	r0, #25
   1bb70:	bhi	1bd78 <dta_validate_name+0x284>
   1bb74:	ldr	r1, [pc, #524]	; 1bd88 <dta_validate_name+0x294>
   1bb78:	mov	r0, r4
   1bb7c:	add	r1, pc, r1
   1bb80:	bl	3e14 <strcmp@plt>
   1bb84:	cmp	r0, #0
   1bb88:	beq	1bd74 <dta_validate_name+0x280>
   1bb8c:	ldr	r1, [pc, #504]	; 1bd8c <dta_validate_name+0x298>
   1bb90:	mov	r0, r4
   1bb94:	add	r1, pc, r1
   1bb98:	bl	3e14 <strcmp@plt>
   1bb9c:	cmp	r0, #0
   1bba0:	beq	1bd74 <dta_validate_name+0x280>
   1bba4:	ldr	r1, [pc, #484]	; 1bd90 <dta_validate_name+0x29c>
   1bba8:	mov	r0, r4
   1bbac:	add	r1, pc, r1
   1bbb0:	bl	3e14 <strcmp@plt>
   1bbb4:	cmp	r0, #0
   1bbb8:	beq	1bd74 <dta_validate_name+0x280>
   1bbbc:	ldr	r1, [pc, #464]	; 1bd94 <dta_validate_name+0x2a0>
   1bbc0:	mov	r0, r4
   1bbc4:	add	r1, pc, r1
   1bbc8:	bl	3e14 <strcmp@plt>
   1bbcc:	cmp	r0, #0
   1bbd0:	beq	1bd74 <dta_validate_name+0x280>
   1bbd4:	ldr	r1, [pc, #444]	; 1bd98 <dta_validate_name+0x2a4>
   1bbd8:	mov	r0, r4
   1bbdc:	add	r1, pc, r1
   1bbe0:	bl	3e14 <strcmp@plt>
   1bbe4:	cmp	r0, #0
   1bbe8:	beq	1bd74 <dta_validate_name+0x280>
   1bbec:	ldr	r1, [pc, #424]	; 1bd9c <dta_validate_name+0x2a8>
   1bbf0:	mov	r0, r4
   1bbf4:	add	r1, pc, r1
   1bbf8:	bl	3e14 <strcmp@plt>
   1bbfc:	cmp	r0, #0
   1bc00:	beq	1bd74 <dta_validate_name+0x280>
   1bc04:	ldr	r1, [pc, #404]	; 1bda0 <dta_validate_name+0x2ac>
   1bc08:	mov	r0, r4
   1bc0c:	add	r1, pc, r1
   1bc10:	bl	3e14 <strcmp@plt>
   1bc14:	cmp	r0, #0
   1bc18:	beq	1bd74 <dta_validate_name+0x280>
   1bc1c:	ldr	r1, [pc, #384]	; 1bda4 <dta_validate_name+0x2b0>
   1bc20:	mov	r0, r4
   1bc24:	add	r1, pc, r1
   1bc28:	bl	3e14 <strcmp@plt>
   1bc2c:	cmp	r0, #0
   1bc30:	beq	1bd74 <dta_validate_name+0x280>
   1bc34:	ldr	r1, [pc, #364]	; 1bda8 <dta_validate_name+0x2b4>
   1bc38:	mov	r0, r4
   1bc3c:	add	r1, pc, r1
   1bc40:	bl	3e14 <strcmp@plt>
   1bc44:	cmp	r0, #0
   1bc48:	beq	1bd74 <dta_validate_name+0x280>
   1bc4c:	ldr	r1, [pc, #344]	; 1bdac <dta_validate_name+0x2b8>
   1bc50:	mov	r0, r4
   1bc54:	add	r1, pc, r1
   1bc58:	bl	3e14 <strcmp@plt>
   1bc5c:	cmp	r0, #0
   1bc60:	beq	1bd74 <dta_validate_name+0x280>
   1bc64:	ldr	r1, [pc, #324]	; 1bdb0 <dta_validate_name+0x2bc>
   1bc68:	mov	r0, r4
   1bc6c:	add	r1, pc, r1
   1bc70:	bl	3e14 <strcmp@plt>
   1bc74:	cmp	r0, #0
   1bc78:	beq	1bd74 <dta_validate_name+0x280>
   1bc7c:	ldr	r1, [pc, #304]	; 1bdb4 <dta_validate_name+0x2c0>
   1bc80:	mov	r0, r4
   1bc84:	add	r1, pc, r1
   1bc88:	bl	3e14 <strcmp@plt>
   1bc8c:	cmp	r0, #0
   1bc90:	beq	1bd74 <dta_validate_name+0x280>
   1bc94:	ldr	r1, [pc, #284]	; 1bdb8 <dta_validate_name+0x2c4>
   1bc98:	mov	r0, r4
   1bc9c:	add	r1, pc, r1
   1bca0:	bl	3e14 <strcmp@plt>
   1bca4:	cmp	r0, #0
   1bca8:	beq	1bd74 <dta_validate_name+0x280>
   1bcac:	ldr	r1, [pc, #264]	; 1bdbc <dta_validate_name+0x2c8>
   1bcb0:	mov	r0, r4
   1bcb4:	add	r1, pc, r1
   1bcb8:	bl	3e14 <strcmp@plt>
   1bcbc:	cmp	r0, #0
   1bcc0:	beq	1bd74 <dta_validate_name+0x280>
   1bcc4:	ldr	r1, [pc, #244]	; 1bdc0 <dta_validate_name+0x2cc>
   1bcc8:	mov	r0, r4
   1bccc:	add	r1, pc, r1
   1bcd0:	bl	3e14 <strcmp@plt>
   1bcd4:	cmp	r0, #0
   1bcd8:	beq	1bd74 <dta_validate_name+0x280>
   1bcdc:	ldr	r1, [pc, #224]	; 1bdc4 <dta_validate_name+0x2d0>
   1bce0:	mov	r0, r4
   1bce4:	add	r1, pc, r1
   1bce8:	bl	3e14 <strcmp@plt>
   1bcec:	cmp	r0, #0
   1bcf0:	beq	1bd74 <dta_validate_name+0x280>
   1bcf4:	ldr	r1, [pc, #204]	; 1bdc8 <dta_validate_name+0x2d4>
   1bcf8:	mov	r0, r4
   1bcfc:	add	r1, pc, r1
   1bd00:	bl	3e14 <strcmp@plt>
   1bd04:	cmp	r0, #0
   1bd08:	beq	1bd74 <dta_validate_name+0x280>
   1bd0c:	ldr	r1, [pc, #184]	; 1bdcc <dta_validate_name+0x2d8>
   1bd10:	mov	r0, r4
   1bd14:	add	r1, pc, r1
   1bd18:	bl	3e14 <strcmp@plt>
   1bd1c:	cmp	r0, #0
   1bd20:	beq	1bd74 <dta_validate_name+0x280>
   1bd24:	ldr	r1, [pc, #164]	; 1bdd0 <dta_validate_name+0x2dc>
   1bd28:	mov	r0, r4
   1bd2c:	add	r1, pc, r1
   1bd30:	bl	3e14 <strcmp@plt>
   1bd34:	cmp	r0, #0
   1bd38:	beq	1bd74 <dta_validate_name+0x280>
   1bd3c:	ldr	r1, [pc, #144]	; 1bdd4 <dta_validate_name+0x2e0>
   1bd40:	mov	r0, r4
   1bd44:	add	r1, pc, r1
   1bd48:	bl	3e14 <strcmp@plt>
   1bd4c:	cmp	r0, #0
   1bd50:	beq	1bd74 <dta_validate_name+0x280>
   1bd54:	ldr	r1, [pc, #124]	; 1bdd8 <dta_validate_name+0x2e4>
   1bd58:	add	r2, sp, #4
   1bd5c:	mov	r0, r4
   1bd60:	add	r1, pc, r1
   1bd64:	bl	42a0 <__isoc99_sscanf@plt>
   1bd68:	cmp	r0, #1
   1bd6c:	movne	r0, #0
   1bd70:	bne	1bd78 <dta_validate_name+0x284>
   1bd74:	mov	r0, #27
   1bd78:	add	sp, sp, #12
   1bd7c:	pop	{r4, r5, pc}
   1bd80:	mov	r0, #26
   1bd84:	b	1bd78 <dta_validate_name+0x284>
   1bd88:	.word	0x0000721a
   1bd8c:	.word	0x00007207
   1bd90:	.word	0x000071f2
   1bd94:	.word	0x000071df
   1bd98:	.word	0x000071cd
   1bd9c:	.word	0x000071bb
   1bda0:	.word	0x000071aa
   1bda4:	.word	0x00007198
   1bda8:	.word	0x00007183
   1bdac:	.word	0x0000716e
   1bdb0:	.word	0x0000715a
   1bdb4:	.word	0x00007147
   1bdb8:	.word	0x00007132
   1bdbc:	.word	0x0000711d
   1bdc0:	.word	0x00007109
   1bdc4:	.word	0x000070f7
   1bdc8:	.word	0x000070e3
   1bdcc:	.word	0x000070d1
   1bdd0:	.word	0x000070be
   1bdd4:	.word	0x000070ac
   1bdd8:	.word	0x00007095

0001bddc <dta_old_variable_ok>:
   1bddc:	push	{r4, lr}
   1bde0:	bl	4384 <readstat_variable_get_name@plt>
   1bde4:	mov	r2, #9
   1bde8:	mov	r1, #0
   1bdec:	pop	{r4, lr}
   1bdf0:	b	1baf4 <dta_validate_name>

0001bdf4 <dta_110_variable_ok>:
   1bdf4:	push	{r4, lr}
   1bdf8:	bl	4384 <readstat_variable_get_name@plt>
   1bdfc:	mov	r2, #33	; 0x21
   1be00:	mov	r1, #0
   1be04:	pop	{r4, lr}
   1be08:	b	1baf4 <dta_validate_name>

0001be0c <dta_118_variable_ok>:
   1be0c:	push	{r4, lr}
   1be10:	bl	4384 <readstat_variable_get_name@plt>
   1be14:	mov	r2, #129	; 0x81
   1be18:	mov	r1, #1
   1be1c:	pop	{r4, lr}
   1be20:	b	1baf4 <dta_validate_name>

0001be24 <dta_typecode_for_variable.constprop.12>:
   1be24:	cmp	r1, #111	; 0x6f
   1be28:	ldr	r3, [r0, #1596]	; 0x63c
   1be2c:	ldr	r0, [r0]
   1be30:	bne	1be8c <dta_typecode_for_variable.constprop.12+0x68>
   1be34:	cmp	r0, #6
   1be38:	addls	pc, pc, r0, lsl #2
   1be3c:	b	1bf40 <dta_typecode_for_variable.constprop.12+0x11c>
   1be40:	b	1bf38 <dta_typecode_for_variable.constprop.12+0x114>
   1be44:	b	1be7c <dta_typecode_for_variable.constprop.12+0x58>
   1be48:	b	1be74 <dta_typecode_for_variable.constprop.12+0x50>
   1be4c:	b	1be6c <dta_typecode_for_variable.constprop.12+0x48>
   1be50:	b	1be5c <dta_typecode_for_variable.constprop.12+0x38>
   1be54:	b	1be84 <dta_typecode_for_variable.constprop.12+0x60>
   1be58:	b	1bf48 <dta_typecode_for_variable.constprop.12+0x124>
   1be5c:	mov	r3, #254	; 0xfe
   1be60:	mov	r0, #0
   1be64:	strh	r3, [r2]
   1be68:	bx	lr
   1be6c:	mov	r3, #253	; 0xfd
   1be70:	b	1be60 <dta_typecode_for_variable.constprop.12+0x3c>
   1be74:	mov	r3, #252	; 0xfc
   1be78:	b	1be60 <dta_typecode_for_variable.constprop.12+0x3c>
   1be7c:	mov	r3, #251	; 0xfb
   1be80:	b	1be60 <dta_typecode_for_variable.constprop.12+0x3c>
   1be84:	mov	r3, #255	; 0xff
   1be88:	b	1be60 <dta_typecode_for_variable.constprop.12+0x3c>
   1be8c:	cmp	r1, #117	; 0x75
   1be90:	bne	1bee4 <dta_typecode_for_variable.constprop.12+0xc0>
   1be94:	cmp	r0, #6
   1be98:	addls	pc, pc, r0, lsl #2
   1be9c:	b	1bf40 <dta_typecode_for_variable.constprop.12+0x11c>
   1bea0:	b	1bf38 <dta_typecode_for_variable.constprop.12+0x114>
   1bea4:	b	1bf50 <dta_typecode_for_variable.constprop.12+0x12c>
   1bea8:	b	1bebc <dta_typecode_for_variable.constprop.12+0x98>
   1beac:	b	1bec4 <dta_typecode_for_variable.constprop.12+0xa0>
   1beb0:	b	1becc <dta_typecode_for_variable.constprop.12+0xa8>
   1beb4:	b	1bed4 <dta_typecode_for_variable.constprop.12+0xb0>
   1beb8:	b	1bedc <dta_typecode_for_variable.constprop.12+0xb8>
   1bebc:	movw	r3, #65529	; 0xfff9
   1bec0:	b	1be60 <dta_typecode_for_variable.constprop.12+0x3c>
   1bec4:	movw	r3, #65528	; 0xfff8
   1bec8:	b	1be60 <dta_typecode_for_variable.constprop.12+0x3c>
   1becc:	movw	r3, #65527	; 0xfff7
   1bed0:	b	1be60 <dta_typecode_for_variable.constprop.12+0x3c>
   1bed4:	movw	r3, #65526	; 0xfff6
   1bed8:	b	1be60 <dta_typecode_for_variable.constprop.12+0x3c>
   1bedc:	mov	r3, #32768	; 0x8000
   1bee0:	b	1be60 <dta_typecode_for_variable.constprop.12+0x3c>
   1bee4:	cmp	r0, #6
   1bee8:	addls	pc, pc, r0, lsl #2
   1beec:	b	1bf40 <dta_typecode_for_variable.constprop.12+0x11c>
   1bef0:	b	1bf34 <dta_typecode_for_variable.constprop.12+0x110>
   1bef4:	b	1bf0c <dta_typecode_for_variable.constprop.12+0xe8>
   1bef8:	b	1bf14 <dta_typecode_for_variable.constprop.12+0xf0>
   1befc:	b	1bf1c <dta_typecode_for_variable.constprop.12+0xf8>
   1bf00:	b	1bf24 <dta_typecode_for_variable.constprop.12+0x100>
   1bf04:	b	1bf2c <dta_typecode_for_variable.constprop.12+0x108>
   1bf08:	b	1bf48 <dta_typecode_for_variable.constprop.12+0x124>
   1bf0c:	mov	r3, #98	; 0x62
   1bf10:	b	1be60 <dta_typecode_for_variable.constprop.12+0x3c>
   1bf14:	mov	r3, #105	; 0x69
   1bf18:	b	1be60 <dta_typecode_for_variable.constprop.12+0x3c>
   1bf1c:	mov	r3, #108	; 0x6c
   1bf20:	b	1be60 <dta_typecode_for_variable.constprop.12+0x3c>
   1bf24:	mov	r3, #102	; 0x66
   1bf28:	b	1be60 <dta_typecode_for_variable.constprop.12+0x3c>
   1bf2c:	mov	r3, #100	; 0x64
   1bf30:	b	1be60 <dta_typecode_for_variable.constprop.12+0x3c>
   1bf34:	add	r3, r3, #127	; 0x7f
   1bf38:	uxth	r3, r3
   1bf3c:	b	1be60 <dta_typecode_for_variable.constprop.12+0x3c>
   1bf40:	mov	r3, #0
   1bf44:	b	1be60 <dta_typecode_for_variable.constprop.12+0x3c>
   1bf48:	mov	r0, #33	; 0x21
   1bf4c:	bx	lr
   1bf50:	movw	r3, #65530	; 0xfffa
   1bf54:	b	1be60 <dta_typecode_for_variable.constprop.12+0x3c>

0001bf58 <dta_begin_data>:
   1bf58:	ldr	r3, [r0, #308]	; 0x134
   1bf5c:	cmp	r3, #0
   1bf60:	beq	1ce64 <dta_begin_data+0xf0c>
   1bf64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bf68:	add	fp, sp, #32
   1bf6c:	sub	sp, sp, #188	; 0xbc
   1bf70:	mov	r5, r0
   1bf74:	mov	r0, #0
   1bf78:	bl	457c <dta_ctx_alloc@plt>
   1bf7c:	mov	r4, r0
   1bf80:	ldr	r8, [r5, #28]
   1bf84:	ldr	r6, [r5, #80]	; 0x50
   1bf88:	bl	3ec8 <machine_is_little_endian@plt>
   1bf8c:	mov	r3, #0
   1bf90:	cmp	r0, #0
   1bf94:	movne	r2, #2
   1bf98:	moveq	r2, #1
   1bf9c:	str	r3, [sp, #8]
   1bfa0:	mov	r1, r8
   1bfa4:	mov	r0, r4
   1bfa8:	str	r3, [sp, #12]
   1bfac:	asr	r7, r6, #31
   1bfb0:	ldrb	r3, [r5, #8]
   1bfb4:	strd	r2, [sp]
   1bfb8:	mov	r2, r6
   1bfbc:	mov	r3, r7
   1bfc0:	bl	41ec <dta_ctx_init@plt>
   1bfc4:	subs	r6, r0, #0
   1bfc8:	movne	r1, r6
   1bfcc:	bne	1c178 <dta_begin_data+0x220>
   1bfd0:	ldrb	r3, [r4, #192]	; 0xc0
   1bfd4:	tst	r3, #4
   1bfd8:	beq	1c200 <dta_begin_data+0x2a8>
   1bfdc:	ldr	r2, [pc, #3752]	; 1ce8c <dta_begin_data+0xf34>
   1bfe0:	mov	r1, r4
   1bfe4:	mov	r0, r5
   1bfe8:	add	r2, pc, r2
   1bfec:	bl	1ae44 <dta_write_tag>
   1bff0:	subs	r1, r0, #0
   1bff4:	bne	1c178 <dta_begin_data+0x220>
   1bff8:	ldr	r2, [pc, #3728]	; 1ce90 <dta_begin_data+0xf38>
   1bffc:	mov	r1, r4
   1c000:	mov	r0, r5
   1c004:	add	r2, pc, r2
   1c008:	bl	1ae44 <dta_write_tag>
   1c00c:	subs	r1, r0, #0
   1c010:	bne	1c178 <dta_begin_data+0x220>
   1c014:	ldr	r2, [pc, #3704]	; 1ce94 <dta_begin_data+0xf3c>
   1c018:	sub	r7, fp, #164	; 0xa4
   1c01c:	mov	r1, #128	; 0x80
   1c020:	mov	r0, r7
   1c024:	ldr	r3, [r5, #8]
   1c028:	add	r2, pc, r2
   1c02c:	bl	4294 <snprintf@plt>
   1c030:	mov	r1, r7
   1c034:	mov	r0, r5
   1c038:	bl	4174 <readstat_write_string@plt>
   1c03c:	subs	r1, r0, #0
   1c040:	bne	1c178 <dta_begin_data+0x220>
   1c044:	bl	3ec8 <machine_is_little_endian@plt>
   1c048:	cmp	r0, #0
   1c04c:	bne	1c18c <dta_begin_data+0x234>
   1c050:	ldr	r3, [pc, #3648]	; 1ce98 <dta_begin_data+0xf40>
   1c054:	add	r3, pc, r3
   1c058:	ldr	r2, [pc, #3644]	; 1ce9c <dta_begin_data+0xf44>
   1c05c:	mov	r1, r4
   1c060:	mov	r0, r5
   1c064:	add	r2, pc, r2
   1c068:	str	r2, [sp, #4]
   1c06c:	mov	r2, #3
   1c070:	str	r2, [sp]
   1c074:	ldr	r2, [pc, #3620]	; 1cea0 <dta_begin_data+0xf48>
   1c078:	add	r2, pc, r2
   1c07c:	bl	1b6e8 <dta_write_chunk>
   1c080:	subs	r1, r0, #0
   1c084:	bne	1c178 <dta_begin_data+0x220>
   1c088:	ldr	r2, [r5, #8]
   1c08c:	sub	r7, fp, #172	; 0xac
   1c090:	ldr	r3, [r5, #28]
   1c094:	cmp	r2, #118	; 0x76
   1c098:	ble	1c198 <dta_begin_data+0x240>
   1c09c:	str	r3, [fp, #-172]	; 0xffffff54
   1c0a0:	ldr	r3, [pc, #3580]	; 1cea4 <dta_begin_data+0xf4c>
   1c0a4:	ldr	r2, [pc, #3580]	; 1cea8 <dta_begin_data+0xf50>
   1c0a8:	add	r3, pc, r3
   1c0ac:	str	r3, [sp, #4]
   1c0b0:	mov	r3, #4
   1c0b4:	add	r2, pc, r2
   1c0b8:	str	r3, [sp]
   1c0bc:	mov	r3, r7
   1c0c0:	mov	r1, r4
   1c0c4:	mov	r0, r5
   1c0c8:	bl	1b6e8 <dta_write_chunk>
   1c0cc:	subs	r1, r0, #0
   1c0d0:	bne	1c178 <dta_begin_data+0x220>
   1c0d4:	ldr	r3, [r5, #8]
   1c0d8:	ldr	r2, [r5, #80]	; 0x50
   1c0dc:	cmp	r3, #117	; 0x75
   1c0e0:	ble	1c1c0 <dta_begin_data+0x268>
   1c0e4:	asr	r3, r2, #31
   1c0e8:	strd	r2, [fp, #-172]	; 0xffffff54
   1c0ec:	ldr	r3, [pc, #3512]	; 1ceac <dta_begin_data+0xf54>
   1c0f0:	ldr	r2, [pc, #3512]	; 1ceb0 <dta_begin_data+0xf58>
   1c0f4:	add	r3, pc, r3
   1c0f8:	str	r3, [sp, #4]
   1c0fc:	mov	r3, #8
   1c100:	add	r2, pc, r2
   1c104:	str	r3, [sp]
   1c108:	mov	r3, r7
   1c10c:	mov	r1, r4
   1c110:	mov	r0, r5
   1c114:	bl	1b6e8 <dta_write_chunk>
   1c118:	subs	r1, r0, #0
   1c11c:	bne	1c178 <dta_begin_data+0x220>
   1c120:	ldr	r2, [pc, #3468]	; 1ceb4 <dta_begin_data+0xf5c>
   1c124:	mov	r1, r4
   1c128:	mov	r0, r5
   1c12c:	add	r2, pc, r2
   1c130:	bl	1ae44 <dta_write_tag>
   1c134:	subs	r1, r0, #0
   1c138:	bne	1c178 <dta_begin_data+0x220>
   1c13c:	mov	r1, r4
   1c140:	mov	r0, r5
   1c144:	bl	1b884 <dta_emit_header_data_label.part.8>
   1c148:	subs	r1, r0, #0
   1c14c:	bne	1c178 <dta_begin_data+0x220>
   1c150:	ldr	r3, [r4, #16]
   1c154:	cmp	r3, #0
   1c158:	bne	1c1e8 <dta_begin_data+0x290>
   1c15c:	ldr	r2, [pc, #3412]	; 1ceb8 <dta_begin_data+0xf60>
   1c160:	mov	r1, r4
   1c164:	mov	r0, r5
   1c168:	add	r2, pc, r2
   1c16c:	bl	1ae44 <dta_write_tag>
   1c170:	subs	r1, r0, #0
   1c174:	beq	1c2ac <dta_begin_data+0x354>
   1c178:	mov	r0, r4
   1c17c:	str	r1, [fp, #-188]	; 0xffffff44
   1c180:	bl	3e8c <dta_ctx_free@plt>
   1c184:	ldr	r1, [fp, #-188]	; 0xffffff44
   1c188:	b	1c904 <dta_begin_data+0x9ac>
   1c18c:	ldr	r3, [pc, #3368]	; 1cebc <dta_begin_data+0xf64>
   1c190:	add	r3, pc, r3
   1c194:	b	1c058 <dta_begin_data+0x100>
   1c198:	strh	r3, [fp, #-172]	; 0xffffff54
   1c19c:	ldr	r3, [pc, #3356]	; 1cec0 <dta_begin_data+0xf68>
   1c1a0:	ldr	r2, [pc, #3356]	; 1cec4 <dta_begin_data+0xf6c>
   1c1a4:	add	r3, pc, r3
   1c1a8:	str	r3, [sp, #4]
   1c1ac:	mov	r3, #2
   1c1b0:	add	r2, pc, r2
   1c1b4:	str	r3, [sp]
   1c1b8:	mov	r3, r7
   1c1bc:	b	1c0c0 <dta_begin_data+0x168>
   1c1c0:	ldr	r3, [pc, #3328]	; 1cec8 <dta_begin_data+0xf70>
   1c1c4:	str	r2, [fp, #-172]	; 0xffffff54
   1c1c8:	ldr	r2, [pc, #3324]	; 1cecc <dta_begin_data+0xf74>
   1c1cc:	add	r3, pc, r3
   1c1d0:	str	r3, [sp, #4]
   1c1d4:	mov	r3, #4
   1c1d8:	add	r2, pc, r2
   1c1dc:	str	r3, [sp]
   1c1e0:	mov	r3, r7
   1c1e4:	b	1c10c <dta_begin_data+0x1b4>
   1c1e8:	mov	r1, r4
   1c1ec:	mov	r0, r5
   1c1f0:	bl	1b970 <dta_emit_header_time_stamp.part.9>
   1c1f4:	subs	r1, r0, #0
   1c1f8:	bne	1c178 <dta_begin_data+0x220>
   1c1fc:	b	1c15c <dta_begin_data+0x204>
   1c200:	ldr	r3, [r5, #8]
   1c204:	sub	r7, fp, #164	; 0xa4
   1c208:	str	r6, [fp, #-164]	; 0xffffff5c
   1c20c:	strb	r3, [fp, #-164]	; 0xffffff5c
   1c210:	str	r6, [fp, #-160]	; 0xffffff60
   1c214:	strh	r6, [fp, #-156]	; 0xffffff64
   1c218:	bl	3ec8 <machine_is_little_endian@plt>
   1c21c:	cmp	r0, #0
   1c220:	ldr	r2, [r5, #80]	; 0x50
   1c224:	movne	r3, #2
   1c228:	moveq	r3, #1
   1c22c:	strb	r3, [fp, #-163]	; 0xffffff5d
   1c230:	mov	r3, #1
   1c234:	strh	r3, [fp, #-162]	; 0xffffff5e
   1c238:	ldr	r3, [r5, #28]
   1c23c:	cmp	r3, #32768	; 0x8000
   1c240:	strh	r3, [fp, #-160]	; 0xffffff60
   1c244:	str	r2, [fp, #-158]	; 0xffffff62
   1c248:	bge	1c2ac <dta_begin_data+0x354>
   1c24c:	mov	r2, #10
   1c250:	mov	r1, r7
   1c254:	mov	r0, r5
   1c258:	bl	4474 <readstat_write_bytes@plt>
   1c25c:	cmp	r0, #0
   1c260:	bne	1c2ac <dta_begin_data+0x354>
   1c264:	ldr	r2, [pc, #3172]	; 1ced0 <dta_begin_data+0xf78>
   1c268:	mov	r1, r4
   1c26c:	mov	r0, r5
   1c270:	add	r2, pc, r2
   1c274:	bl	1ae44 <dta_write_tag>
   1c278:	cmp	r0, #0
   1c27c:	bne	1c2ac <dta_begin_data+0x354>
   1c280:	mov	r1, r4
   1c284:	mov	r0, r5
   1c288:	bl	1b884 <dta_emit_header_data_label.part.8>
   1c28c:	cmp	r0, #0
   1c290:	bne	1c2ac <dta_begin_data+0x354>
   1c294:	ldr	r3, [r4, #16]
   1c298:	cmp	r3, #0
   1c29c:	beq	1c2ac <dta_begin_data+0x354>
   1c2a0:	mov	r1, r4
   1c2a4:	mov	r0, r5
   1c2a8:	bl	1b970 <dta_emit_header_time_stamp.part.9>
   1c2ac:	ldrb	r3, [r4, #192]	; 0xc0
   1c2b0:	tst	r3, #4
   1c2b4:	beq	1c664 <dta_begin_data+0x70c>
   1c2b8:	ldr	r1, [pc, #3092]	; 1ced4 <dta_begin_data+0xf7c>
   1c2bc:	mov	r2, #0
   1c2c0:	mov	r3, #0
   1c2c4:	mov	r9, #0
   1c2c8:	mov	r0, r4
   1c2cc:	ldr	r8, [r5, #4]
   1c2d0:	strd	r2, [fp, #-164]	; 0xffffff5c
   1c2d4:	add	r1, pc, r1
   1c2d8:	strd	r8, [fp, #-156]	; 0xffffff64
   1c2dc:	bl	1b578 <dta_measure_tag>
   1c2e0:	ldr	r1, [pc, #3056]	; 1ced8 <dta_begin_data+0xf80>
   1c2e4:	mov	r7, r0
   1c2e8:	mov	r0, r4
   1c2ec:	add	r1, pc, r1
   1c2f0:	bl	1b578 <dta_measure_tag>
   1c2f4:	ldr	r1, [pc, #3040]	; 1cedc <dta_begin_data+0xf84>
   1c2f8:	add	r0, r7, r0
   1c2fc:	add	r0, r0, #112	; 0x70
   1c300:	adds	r2, r8, r0
   1c304:	mov	r0, r4
   1c308:	adc	r3, r9, #0
   1c30c:	mov	r8, r2
   1c310:	mov	r9, r3
   1c314:	add	r1, pc, r1
   1c318:	strd	r2, [fp, #-148]	; 0xffffff6c
   1c31c:	bl	1b578 <dta_measure_tag>
   1c320:	mov	r7, r0
   1c324:	ldr	r1, [pc, #2996]	; 1cee0 <dta_begin_data+0xf88>
   1c328:	ldr	sl, [r4, #24]
   1c32c:	ldr	r0, [r4, #148]	; 0x94
   1c330:	add	r1, pc, r1
   1c334:	mul	sl, r0, sl
   1c338:	mov	r0, r4
   1c33c:	bl	1b578 <dta_measure_tag>
   1c340:	ldr	r1, [pc, #2972]	; 1cee4 <dta_begin_data+0xf8c>
   1c344:	add	r0, r7, r0
   1c348:	add	r0, r0, sl
   1c34c:	adds	r8, r8, r0
   1c350:	mov	r0, r4
   1c354:	ldr	sl, [pc, #2956]	; 1cee8 <dta_begin_data+0xf90>
   1c358:	adc	r9, r9, #0
   1c35c:	add	r1, pc, r1
   1c360:	strd	r8, [fp, #-140]	; 0xffffff74
   1c364:	bl	1b578 <dta_measure_tag>
   1c368:	ldr	r1, [pc, #2940]	; 1ceec <dta_begin_data+0xf94>
   1c36c:	mov	r7, r0
   1c370:	mov	r0, r4
   1c374:	add	sl, pc, sl
   1c378:	add	r1, pc, r1
   1c37c:	bl	1b578 <dta_measure_tag>
   1c380:	add	r0, r7, r0
   1c384:	ldr	r7, [r4, #40]	; 0x28
   1c388:	ldr	r1, [pc, #2912]	; 1cef0 <dta_begin_data+0xf98>
   1c38c:	add	r0, r0, r7
   1c390:	adds	r2, r8, r0
   1c394:	mov	r0, r4
   1c398:	adc	r3, r9, #0
   1c39c:	add	r1, pc, r1
   1c3a0:	mov	r8, r2
   1c3a4:	mov	r9, r3
   1c3a8:	strd	r2, [fp, #-132]	; 0xffffff7c
   1c3ac:	bl	1b578 <dta_measure_tag>
   1c3b0:	ldr	r1, [pc, #2876]	; 1cef4 <dta_begin_data+0xf9c>
   1c3b4:	mov	r7, r0
   1c3b8:	mov	r0, r4
   1c3bc:	add	r1, pc, r1
   1c3c0:	bl	1b578 <dta_measure_tag>
   1c3c4:	add	r0, r7, r0
   1c3c8:	ldr	r7, [r4, #48]	; 0x30
   1c3cc:	ldr	r1, [pc, #2852]	; 1cef8 <dta_begin_data+0xfa0>
   1c3d0:	add	r0, r0, r7
   1c3d4:	adds	r8, r8, r0
   1c3d8:	mov	r0, r4
   1c3dc:	adc	r9, r9, #0
   1c3e0:	add	r1, pc, r1
   1c3e4:	strd	r8, [fp, #-124]	; 0xffffff84
   1c3e8:	bl	1b578 <dta_measure_tag>
   1c3ec:	ldr	r1, [pc, #2824]	; 1cefc <dta_begin_data+0xfa4>
   1c3f0:	mov	r7, r0
   1c3f4:	mov	r0, r4
   1c3f8:	add	r1, pc, r1
   1c3fc:	bl	1b578 <dta_measure_tag>
   1c400:	add	r0, r7, r0
   1c404:	ldr	r7, [r4, #56]	; 0x38
   1c408:	ldr	r1, [pc, #2800]	; 1cf00 <dta_begin_data+0xfa8>
   1c40c:	add	r0, r0, r7
   1c410:	adds	r2, r8, r0
   1c414:	mov	r0, r4
   1c418:	adc	r3, r9, #0
   1c41c:	add	r1, pc, r1
   1c420:	mov	r8, r2
   1c424:	mov	r9, r3
   1c428:	strd	r2, [fp, #-116]	; 0xffffff8c
   1c42c:	bl	1b578 <dta_measure_tag>
   1c430:	ldr	r1, [pc, #2764]	; 1cf04 <dta_begin_data+0xfac>
   1c434:	mov	r7, r0
   1c438:	mov	r0, r4
   1c43c:	add	r1, pc, r1
   1c440:	bl	1b578 <dta_measure_tag>
   1c444:	add	r0, r7, r0
   1c448:	ldr	r7, [r4, #64]	; 0x40
   1c44c:	ldr	r1, [pc, #2740]	; 1cf08 <dta_begin_data+0xfb0>
   1c450:	add	r0, r0, r7
   1c454:	adds	r8, r8, r0
   1c458:	mov	r0, r4
   1c45c:	adc	r9, r9, #0
   1c460:	add	r1, pc, r1
   1c464:	strd	r8, [fp, #-108]	; 0xffffff94
   1c468:	bl	1b578 <dta_measure_tag>
   1c46c:	ldr	r1, [pc, #2712]	; 1cf0c <dta_begin_data+0xfb4>
   1c470:	mov	r7, r0
   1c474:	mov	r0, r4
   1c478:	add	r1, pc, r1
   1c47c:	bl	1b578 <dta_measure_tag>
   1c480:	add	r0, r7, r0
   1c484:	ldr	r7, [r4, #72]	; 0x48
   1c488:	add	r0, r0, r7
   1c48c:	mov	r7, #0
   1c490:	adds	r2, r8, r0
   1c494:	adc	r3, r9, #0
   1c498:	mov	r9, r7
   1c49c:	strd	r2, [fp, #-188]	; 0xffffff44
   1c4a0:	strd	r2, [fp, #-100]	; 0xffffff9c
   1c4a4:	ldr	r3, [r5, #52]	; 0x34
   1c4a8:	str	r3, [fp, #-192]	; 0xffffff40
   1c4ac:	ldr	r3, [pc, #2652]	; 1cf10 <dta_begin_data+0xfb8>
   1c4b0:	add	r3, pc, r3
   1c4b4:	ldr	r2, [fp, #-192]	; 0xffffff40
   1c4b8:	cmp	r9, r2
   1c4bc:	blt	1c910 <dta_begin_data+0x9b8>
   1c4c0:	ldr	r1, [pc, #2636]	; 1cf14 <dta_begin_data+0xfbc>
   1c4c4:	mov	r0, r4
   1c4c8:	sub	r9, fp, #174	; 0xae
   1c4cc:	sub	sl, fp, #172	; 0xac
   1c4d0:	add	r1, pc, r1
   1c4d4:	bl	1b578 <dta_measure_tag>
   1c4d8:	ldr	r1, [pc, #2616]	; 1cf18 <dta_begin_data+0xfc0>
   1c4dc:	mov	r8, r0
   1c4e0:	mov	r0, r4
   1c4e4:	add	r7, r7, r8
   1c4e8:	add	r1, pc, r1
   1c4ec:	bl	1b578 <dta_measure_tag>
   1c4f0:	ldrd	r2, [fp, #-188]	; 0xffffff44
   1c4f4:	add	r7, r7, r0
   1c4f8:	adds	r2, r2, r7
   1c4fc:	mov	r7, #0
   1c500:	adc	r3, r3, #0
   1c504:	mov	r8, r7
   1c508:	strd	r2, [fp, #-188]	; 0xffffff44
   1c50c:	strd	r2, [fp, #-92]	; 0xffffffa4
   1c510:	ldr	r3, [r4, #148]	; 0x94
   1c514:	cmp	r7, r3
   1c518:	blt	1c970 <dta_begin_data+0xa18>
   1c51c:	ldr	r1, [pc, #2552]	; 1cf1c <dta_begin_data+0xfc4>
   1c520:	mov	r0, r4
   1c524:	add	r1, pc, r1
   1c528:	bl	1b578 <dta_measure_tag>
   1c52c:	mov	r7, r0
   1c530:	ldr	r1, [pc, #2536]	; 1cf20 <dta_begin_data+0xfc8>
   1c534:	ldr	r8, [r4, #152]	; 0x98
   1c538:	ldr	r0, [r4, #160]	; 0xa0
   1c53c:	add	r1, pc, r1
   1c540:	mul	r8, r0, r8
   1c544:	mov	r0, r4
   1c548:	bl	1b578 <dta_measure_tag>
   1c54c:	add	r0, r7, r0
   1c550:	ldr	r1, [r5, #64]	; 0x40
   1c554:	mov	r3, #0
   1c558:	add	r0, r0, r8
   1c55c:	ldrd	r8, [fp, #-188]	; 0xffffff44
   1c560:	adds	r8, r8, r0
   1c564:	adc	r9, r9, #0
   1c568:	strd	r8, [fp, #-84]	; 0xffffffac
   1c56c:	cmp	r3, r1
   1c570:	blt	1c9c0 <dta_begin_data+0xa68>
   1c574:	ldr	r1, [pc, #2472]	; 1cf24 <dta_begin_data+0xfcc>
   1c578:	mov	r0, r4
   1c57c:	ldr	sl, [pc, #2468]	; 1cf28 <dta_begin_data+0xfd0>
   1c580:	add	r1, pc, r1
   1c584:	bl	1b578 <dta_measure_tag>
   1c588:	ldr	r1, [pc, #2460]	; 1cf2c <dta_begin_data+0xfd4>
   1c58c:	mov	r7, r0
   1c590:	mov	r0, r4
   1c594:	add	r6, r6, r7
   1c598:	add	sl, pc, sl
   1c59c:	add	r1, pc, r1
   1c5a0:	bl	1b578 <dta_measure_tag>
   1c5a4:	ldr	r1, [pc, #2436]	; 1cf30 <dta_begin_data+0xfd8>
   1c5a8:	add	r6, r6, r0
   1c5ac:	mov	r0, r4
   1c5b0:	adds	r2, r8, r6
   1c5b4:	mov	r8, #0
   1c5b8:	adc	r3, r9, #0
   1c5bc:	strd	r2, [fp, #-188]	; 0xffffff44
   1c5c0:	add	r1, pc, r1
   1c5c4:	strd	r2, [fp, #-76]	; 0xffffffb4
   1c5c8:	bl	1b578 <dta_measure_tag>
   1c5cc:	ldr	r3, [pc, #2400]	; 1cf34 <dta_begin_data+0xfdc>
   1c5d0:	mov	r7, r0
   1c5d4:	add	r3, pc, r3
   1c5d8:	str	r3, [fp, #-192]	; 0xffffff40
   1c5dc:	ldr	r3, [r5, #40]	; 0x28
   1c5e0:	cmp	r8, r3
   1c5e4:	blt	1c9e8 <dta_begin_data+0xa90>
   1c5e8:	ldr	r1, [pc, #2376]	; 1cf38 <dta_begin_data+0xfe0>
   1c5ec:	mov	r0, r4
   1c5f0:	add	r1, pc, r1
   1c5f4:	bl	1b578 <dta_measure_tag>
   1c5f8:	ldrd	r8, [fp, #-188]	; 0xffffff44
   1c5fc:	add	r0, r7, r0
   1c600:	ldr	r1, [pc, #2356]	; 1cf3c <dta_begin_data+0xfe4>
   1c604:	adds	r8, r8, r0
   1c608:	mov	r0, r4
   1c60c:	adc	r9, r9, #0
   1c610:	add	r1, pc, r1
   1c614:	strd	r8, [fp, #-68]	; 0xffffffbc
   1c618:	bl	1b578 <dta_measure_tag>
   1c61c:	adds	r2, r8, r0
   1c620:	adc	r3, r9, #0
   1c624:	mov	r0, r2
   1c628:	ldr	r2, [pc, #2320]	; 1cf40 <dta_begin_data+0xfe8>
   1c62c:	mov	r1, r3
   1c630:	ldr	r3, [pc, #2316]	; 1cf44 <dta_begin_data+0xfec>
   1c634:	strd	r0, [fp, #-60]	; 0xffffffc4
   1c638:	mov	r1, r4
   1c63c:	mov	r0, r5
   1c640:	add	r2, pc, r2
   1c644:	add	r3, pc, r3
   1c648:	str	r3, [sp, #4]
   1c64c:	mov	r3, #112	; 0x70
   1c650:	str	r3, [sp]
   1c654:	sub	r3, fp, #164	; 0xa4
   1c658:	bl	1b6e8 <dta_write_chunk>
   1c65c:	subs	r1, r0, #0
   1c660:	bne	1c178 <dta_begin_data+0x220>
   1c664:	ldr	r2, [pc, #2268]	; 1cf48 <dta_begin_data+0xff0>
   1c668:	mov	r1, r4
   1c66c:	mov	r0, r5
   1c670:	add	r2, pc, r2
   1c674:	bl	1ae44 <dta_write_tag>
   1c678:	subs	r1, r0, #0
   1c67c:	moveq	r6, r1
   1c680:	subeq	r8, fp, #164	; 0xa4
   1c684:	moveq	r7, r6
   1c688:	bne	1c178 <dta_begin_data+0x220>
   1c68c:	ldr	r3, [r4, #148]	; 0x94
   1c690:	cmp	r6, r3
   1c694:	blt	1ca80 <dta_begin_data+0xb28>
   1c698:	mov	r6, #0
   1c69c:	sub	r7, fp, #164	; 0xa4
   1c6a0:	ldr	r3, [r4, #148]	; 0x94
   1c6a4:	cmp	r6, r3
   1c6a8:	blt	1cabc <dta_begin_data+0xb64>
   1c6ac:	ldr	r2, [pc, #2200]	; 1cf4c <dta_begin_data+0xff4>
   1c6b0:	mov	r1, r4
   1c6b4:	mov	r0, r5
   1c6b8:	add	r2, pc, r2
   1c6bc:	bl	1ae44 <dta_write_tag>
   1c6c0:	subs	r1, r0, #0
   1c6c4:	bne	1c178 <dta_begin_data+0x220>
   1c6c8:	ldr	r2, [pc, #2176]	; 1cf50 <dta_begin_data+0xff8>
   1c6cc:	mov	r1, r4
   1c6d0:	mov	r0, r5
   1c6d4:	add	r2, pc, r2
   1c6d8:	bl	1ae44 <dta_write_tag>
   1c6dc:	subs	r1, r0, #0
   1c6e0:	moveq	r6, r1
   1c6e4:	bne	1c178 <dta_begin_data+0x220>
   1c6e8:	ldr	r3, [r4, #148]	; 0x94
   1c6ec:	cmp	r6, r3
   1c6f0:	blt	1cb18 <dta_begin_data+0xbc0>
   1c6f4:	mov	r0, r5
   1c6f8:	ldr	r1, [r4, #36]	; 0x24
   1c6fc:	ldr	r2, [r4, #40]	; 0x28
   1c700:	bl	4474 <readstat_write_bytes@plt>
   1c704:	subs	r1, r0, #0
   1c708:	bne	1c178 <dta_begin_data+0x220>
   1c70c:	ldr	r2, [pc, #2112]	; 1cf54 <dta_begin_data+0xffc>
   1c710:	mov	r1, r4
   1c714:	mov	r0, r5
   1c718:	add	r2, pc, r2
   1c71c:	bl	1ae44 <dta_write_tag>
   1c720:	subs	r1, r0, #0
   1c724:	bne	1c178 <dta_begin_data+0x220>
   1c728:	ldr	r2, [pc, #2088]	; 1cf58 <dta_begin_data+0x1000>
   1c72c:	mov	r1, r4
   1c730:	mov	r0, r5
   1c734:	add	r2, pc, r2
   1c738:	bl	1ae44 <dta_write_tag>
   1c73c:	subs	r1, r0, #0
   1c740:	bne	1c178 <dta_begin_data+0x220>
   1c744:	ldr	r0, [r4, #44]	; 0x2c
   1c748:	ldr	r2, [r4, #48]	; 0x30
   1c74c:	bl	42b8 <memset@plt>
   1c750:	mov	r0, r5
   1c754:	ldr	r1, [r4, #44]	; 0x2c
   1c758:	ldr	r2, [r4, #48]	; 0x30
   1c75c:	bl	4474 <readstat_write_bytes@plt>
   1c760:	subs	r1, r0, #0
   1c764:	bne	1c178 <dta_begin_data+0x220>
   1c768:	ldr	r2, [pc, #2028]	; 1cf5c <dta_begin_data+0x1004>
   1c76c:	mov	r1, r4
   1c770:	mov	r0, r5
   1c774:	add	r2, pc, r2
   1c778:	bl	1ae44 <dta_write_tag>
   1c77c:	subs	r1, r0, #0
   1c780:	bne	1c178 <dta_begin_data+0x220>
   1c784:	ldr	r2, [pc, #2004]	; 1cf60 <dta_begin_data+0x1008>
   1c788:	mov	r1, r4
   1c78c:	mov	r0, r5
   1c790:	add	r2, pc, r2
   1c794:	bl	1ae44 <dta_write_tag>
   1c798:	subs	r1, r0, #0
   1c79c:	bne	1c178 <dta_begin_data+0x220>
   1c7a0:	ldr	r8, [pc, #1980]	; 1cf64 <dta_begin_data+0x100c>
   1c7a4:	mov	r6, r1
   1c7a8:	ldr	r9, [pc, #1976]	; 1cf68 <dta_begin_data+0x1010>
   1c7ac:	ldr	sl, [pc, #1976]	; 1cf6c <dta_begin_data+0x1014>
   1c7b0:	add	r8, pc, r8
   1c7b4:	add	r9, pc, r9
   1c7b8:	add	sl, pc, sl
   1c7bc:	ldr	r3, [r4, #148]	; 0x94
   1c7c0:	cmp	r6, r3
   1c7c4:	blt	1cb40 <dta_begin_data+0xbe8>
   1c7c8:	mov	r0, r5
   1c7cc:	ldr	r1, [r4, #52]	; 0x34
   1c7d0:	ldr	r2, [r4, #56]	; 0x38
   1c7d4:	bl	4474 <readstat_write_bytes@plt>
   1c7d8:	subs	r1, r0, #0
   1c7dc:	bne	1c178 <dta_begin_data+0x220>
   1c7e0:	ldr	r2, [pc, #1928]	; 1cf70 <dta_begin_data+0x1018>
   1c7e4:	mov	r1, r4
   1c7e8:	mov	r0, r5
   1c7ec:	add	r2, pc, r2
   1c7f0:	bl	1ae44 <dta_write_tag>
   1c7f4:	subs	r1, r0, #0
   1c7f8:	bne	1c178 <dta_begin_data+0x220>
   1c7fc:	ldr	r2, [pc, #1904]	; 1cf74 <dta_begin_data+0x101c>
   1c800:	mov	r1, r4
   1c804:	mov	r0, r5
   1c808:	add	r2, pc, r2
   1c80c:	bl	1ae44 <dta_write_tag>
   1c810:	subs	r1, r0, #0
   1c814:	moveq	r6, r1
   1c818:	bne	1c178 <dta_begin_data+0x220>
   1c81c:	ldr	r3, [r4, #148]	; 0x94
   1c820:	cmp	r6, r3
   1c824:	blt	1cc24 <dta_begin_data+0xccc>
   1c828:	mov	r0, r5
   1c82c:	ldr	r1, [r4, #60]	; 0x3c
   1c830:	ldr	r2, [r4, #64]	; 0x40
   1c834:	bl	4474 <readstat_write_bytes@plt>
   1c838:	subs	r1, r0, #0
   1c83c:	bne	1c178 <dta_begin_data+0x220>
   1c840:	ldr	r2, [pc, #1840]	; 1cf78 <dta_begin_data+0x1020>
   1c844:	mov	r1, r4
   1c848:	mov	r0, r5
   1c84c:	add	r2, pc, r2
   1c850:	bl	1ae44 <dta_write_tag>
   1c854:	subs	r1, r0, #0
   1c858:	bne	1c178 <dta_begin_data+0x220>
   1c85c:	ldr	r2, [pc, #1816]	; 1cf7c <dta_begin_data+0x1024>
   1c860:	mov	r1, r4
   1c864:	mov	r0, r5
   1c868:	add	r2, pc, r2
   1c86c:	bl	1ae44 <dta_write_tag>
   1c870:	subs	r1, r0, #0
   1c874:	moveq	r6, r1
   1c878:	bne	1c178 <dta_begin_data+0x220>
   1c87c:	ldr	r3, [r4, #148]	; 0x94
   1c880:	cmp	r6, r3
   1c884:	blt	1cc64 <dta_begin_data+0xd0c>
   1c888:	mov	r0, r5
   1c88c:	ldr	r1, [r4, #68]	; 0x44
   1c890:	ldr	r2, [r4, #72]	; 0x48
   1c894:	bl	4474 <readstat_write_bytes@plt>
   1c898:	subs	r1, r0, #0
   1c89c:	bne	1c178 <dta_begin_data+0x220>
   1c8a0:	ldr	r2, [pc, #1752]	; 1cf80 <dta_begin_data+0x1028>
   1c8a4:	mov	r1, r4
   1c8a8:	mov	r0, r5
   1c8ac:	add	r2, pc, r2
   1c8b0:	bl	1ae44 <dta_write_tag>
   1c8b4:	subs	r1, r0, #0
   1c8b8:	bne	1c178 <dta_begin_data+0x220>
   1c8bc:	ldr	r3, [r4, #96]	; 0x60
   1c8c0:	mov	r9, sp
   1c8c4:	add	r3, r3, #7
   1c8c8:	bic	r3, r3, #7
   1c8cc:	sub	sp, sp, r3
   1c8d0:	ldr	r3, [r4, #92]	; 0x5c
   1c8d4:	add	r7, sp, #16
   1c8d8:	cmp	r3, #0
   1c8dc:	bne	1cc8c <dta_begin_data+0xd34>
   1c8e0:	mov	sp, r9
   1c8e4:	ldr	r2, [pc, #1688]	; 1cf84 <dta_begin_data+0x102c>
   1c8e8:	mov	r1, r4
   1c8ec:	mov	r0, r5
   1c8f0:	add	r2, pc, r2
   1c8f4:	bl	1ae44 <dta_write_tag>
   1c8f8:	subs	r1, r0, #0
   1c8fc:	streq	r4, [r5, #300]	; 0x12c
   1c900:	bne	1c178 <dta_begin_data+0x220>
   1c904:	mov	r0, r1
   1c908:	sub	sp, fp, #32
   1c90c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c910:	mov	r1, r3
   1c914:	mov	r0, r4
   1c918:	str	r3, [fp, #-200]	; 0xffffff38
   1c91c:	bl	1b578 <dta_measure_tag>
   1c920:	ldr	r2, [r5, #48]	; 0x30
   1c924:	mov	r8, r0
   1c928:	ldr	r0, [r2, r9, lsl #2]
   1c92c:	add	r9, r9, #1
   1c930:	bl	421c <strlen@plt>
   1c934:	mov	r2, r0
   1c938:	ldrd	r0, [r4, #92]	; 0x5c
   1c93c:	str	r2, [fp, #-196]	; 0xffffff3c
   1c940:	add	r0, r0, #1
   1c944:	add	r0, r0, r1, lsl #1
   1c948:	mov	r1, sl
   1c94c:	add	r7, r0, r7
   1c950:	mov	r0, r4
   1c954:	bl	1b578 <dta_measure_tag>
   1c958:	add	r7, r8, r7
   1c95c:	ldr	r3, [fp, #-200]	; 0xffffff38
   1c960:	ldr	r2, [fp, #-196]	; 0xffffff3c
   1c964:	add	r7, r7, r2
   1c968:	add	r7, r7, r0
   1c96c:	b	1c4b4 <dta_begin_data+0x55c>
   1c970:	mov	r1, r7
   1c974:	mov	r0, r5
   1c978:	str	r8, [fp, #-172]	; 0xffffff54
   1c97c:	bl	439c <readstat_get_variable@plt>
   1c980:	mov	r2, r9
   1c984:	ldrb	r1, [r4, #20]
   1c988:	add	r7, r7, #1
   1c98c:	strh	r8, [fp, #-174]	; 0xffffff52
   1c990:	bl	1be24 <dta_typecode_for_variable.constprop.12>
   1c994:	mov	r3, #0
   1c998:	mov	r2, sl
   1c99c:	ldrh	r0, [fp, #-174]	; 0xffffff52
   1c9a0:	mov	r1, r4
   1c9a4:	bl	4204 <dta_type_info@plt>
   1c9a8:	cmp	r0, #0
   1c9ac:	ldreq	r3, [r4, #160]	; 0xa0
   1c9b0:	ldreq	r2, [fp, #-172]	; 0xffffff54
   1c9b4:	addeq	r3, r3, r2
   1c9b8:	streq	r3, [r4, #160]	; 0xa0
   1c9bc:	b	1c510 <dta_begin_data+0x5b8>
   1c9c0:	ldr	r2, [r5, #60]	; 0x3c
   1c9c4:	ldr	r0, [r4, #116]	; 0x74
   1c9c8:	ldr	r2, [r2, r3, lsl #2]
   1c9cc:	add	r3, r3, #1
   1c9d0:	cmp	r0, #4
   1c9d4:	addhi	r6, r6, #20
   1c9d8:	addls	r6, r6, #16
   1c9dc:	ldr	r2, [r2, #16]
   1c9e0:	add	r6, r2, r6
   1c9e4:	b	1c56c <dta_begin_data+0x614>
   1c9e8:	mov	r1, r8
   1c9ec:	mov	r0, r5
   1c9f0:	bl	4444 <readstat_get_label_set@plt>
   1c9f4:	ldr	r9, [r0, #264]	; 0x108
   1c9f8:	mov	r6, #0
   1c9fc:	mov	r2, r0
   1ca00:	mov	r3, r6
   1ca04:	cmp	r9, r3
   1ca08:	bgt	1ca50 <dta_begin_data+0xaf8>
   1ca0c:	mov	r0, r4
   1ca10:	ldr	r1, [fp, #-192]	; 0xffffff40
   1ca14:	add	r9, r9, #1
   1ca18:	bl	1b578 <dta_measure_tag>
   1ca1c:	ldrd	r2, [r4, #104]	; 0x68
   1ca20:	mov	r1, sl
   1ca24:	add	r6, r6, r9, lsl #3
   1ca28:	add	r8, r8, #1
   1ca2c:	add	r3, r3, r2
   1ca30:	add	r3, r3, #4
   1ca34:	add	r7, r3, r7
   1ca38:	add	r7, r7, r0
   1ca3c:	mov	r0, r4
   1ca40:	bl	1b578 <dta_measure_tag>
   1ca44:	add	r7, r0, r7
   1ca48:	add	r7, r6, r7
   1ca4c:	b	1c5dc <dta_begin_data+0x684>
   1ca50:	mov	r1, r3
   1ca54:	mov	r0, r2
   1ca58:	str	r3, [fp, #-200]	; 0xffffff38
   1ca5c:	str	r2, [fp, #-196]	; 0xffffff3c
   1ca60:	add	r6, r6, #1
   1ca64:	bl	44ec <readstat_get_value_label@plt>
   1ca68:	ldr	r3, [fp, #-200]	; 0xffffff38
   1ca6c:	ldr	r0, [r0, #28]
   1ca70:	ldr	r2, [fp, #-196]	; 0xffffff3c
   1ca74:	add	r3, r3, #1
   1ca78:	add	r6, r6, r0
   1ca7c:	b	1ca04 <dta_begin_data+0xaac>
   1ca80:	mov	r1, r6
   1ca84:	mov	r0, r5
   1ca88:	bl	439c <readstat_get_variable@plt>
   1ca8c:	mov	r2, r8
   1ca90:	strh	r7, [fp, #-164]	; 0xffffff5c
   1ca94:	ldrb	r1, [r4, #20]
   1ca98:	bl	1be24 <dta_typecode_for_variable.constprop.12>
   1ca9c:	subs	r1, r0, #0
   1caa0:	bne	1c178 <dta_begin_data+0x220>
   1caa4:	ldrh	r1, [fp, #-164]	; 0xffffff5c
   1caa8:	lsl	r3, r6, #1
   1caac:	add	r6, r6, #1
   1cab0:	ldr	r2, [r4, #28]
   1cab4:	strh	r1, [r2, r3]
   1cab8:	b	1c68c <dta_begin_data+0x734>
   1cabc:	ldr	r2, [r4, #24]
   1cac0:	cmp	r2, #1
   1cac4:	bne	1caf4 <dta_begin_data+0xb9c>
   1cac8:	ldr	r1, [r4, #28]
   1cacc:	lsl	r3, r6, #1
   1cad0:	ldrh	r3, [r1, r3]
   1cad4:	strb	r3, [fp, #-164]	; 0xffffff5c
   1cad8:	mov	r1, r7
   1cadc:	mov	r0, r5
   1cae0:	bl	4474 <readstat_write_bytes@plt>
   1cae4:	cmp	r0, #0
   1cae8:	mov	r1, r0
   1caec:	beq	1cafc <dta_begin_data+0xba4>
   1caf0:	b	1c178 <dta_begin_data+0x220>
   1caf4:	cmp	r2, #2
   1caf8:	beq	1cb04 <dta_begin_data+0xbac>
   1cafc:	add	r6, r6, #1
   1cb00:	b	1c6a0 <dta_begin_data+0x748>
   1cb04:	ldr	r1, [r4, #28]
   1cb08:	lsl	r3, r6, #1
   1cb0c:	ldrh	r3, [r1, r3]
   1cb10:	strh	r3, [fp, #-164]	; 0xffffff5c
   1cb14:	b	1cad8 <dta_begin_data+0xb80>
   1cb18:	mov	r1, r6
   1cb1c:	mov	r0, r5
   1cb20:	bl	439c <readstat_get_variable@plt>
   1cb24:	ldr	r3, [r4, #36]	; 0x24
   1cb28:	add	r1, r0, #8
   1cb2c:	ldr	r2, [r4, #76]	; 0x4c
   1cb30:	mla	r0, r2, r6, r3
   1cb34:	add	r6, r6, #1
   1cb38:	bl	42dc <strncpy@plt>
   1cb3c:	b	1c6e8 <dta_begin_data+0x790>
   1cb40:	mov	r1, r6
   1cb44:	mov	r0, r5
   1cb48:	bl	439c <readstat_get_variable@plt>
   1cb4c:	ldrb	r3, [r0, #308]	; 0x134
   1cb50:	mov	r1, r0
   1cb54:	cmp	r3, #0
   1cb58:	addne	r1, r0, #308	; 0x134
   1cb5c:	ldrne	r2, [r4, #80]	; 0x50
   1cb60:	ldrne	r0, [r4, #52]	; 0x34
   1cb64:	bne	1cc08 <dta_begin_data+0xcb0>
   1cb68:	str	r1, [fp, #-188]	; 0xffffff44
   1cb6c:	sub	r7, fp, #164	; 0xa4
   1cb70:	ldr	r0, [r1]
   1cb74:	ldr	r3, [r1, #2136]	; 0x858
   1cb78:	str	r3, [fp, #-192]	; 0xffffff40
   1cb7c:	bl	3e38 <readstat_type_class@plt>
   1cb80:	cmp	r0, #0
   1cb84:	ldr	r3, [fp, #-192]	; 0xffffff40
   1cb88:	ldr	r1, [fp, #-188]	; 0xffffff44
   1cb8c:	ldr	r2, [r1, #2132]	; 0x854
   1cb90:	beq	1ce70 <dta_begin_data+0xf18>
   1cb94:	cmp	r3, #0
   1cb98:	bne	1cbdc <dta_begin_data+0xc84>
   1cb9c:	mov	r0, #103	; 0x67
   1cba0:	b	1cba8 <dta_begin_data+0xc50>
   1cba4:	mov	r0, #115	; 0x73
   1cba8:	ldr	r3, [r1]
   1cbac:	sub	r1, r3, #1
   1cbb0:	cmp	r1, #1
   1cbb4:	movls	r3, #8
   1cbb8:	bls	1cbd4 <dta_begin_data+0xc7c>
   1cbbc:	cmp	r3, #3
   1cbc0:	moveq	r3, #12
   1cbc4:	beq	1cbd4 <dta_begin_data+0xc7c>
   1cbc8:	cmp	r3, #5
   1cbcc:	moveq	r3, #10
   1cbd0:	movne	r3, #9
   1cbd4:	cmp	r0, #103	; 0x67
   1cbd8:	bne	1ce78 <dta_begin_data+0xf20>
   1cbdc:	cmp	r2, #1
   1cbe0:	beq	1cc18 <dta_begin_data+0xcc0>
   1cbe4:	ldr	r2, [pc, #924]	; 1cf88 <dta_begin_data+0x1030>
   1cbe8:	add	r2, pc, r2
   1cbec:	ldr	r1, [pc, #920]	; 1cf8c <dta_begin_data+0x1034>
   1cbf0:	add	r1, pc, r1
   1cbf4:	mov	r0, r7
   1cbf8:	bl	4408 <sprintf@plt>
   1cbfc:	ldr	r0, [r4, #52]	; 0x34
   1cc00:	mov	r1, r7
   1cc04:	ldr	r2, [r4, #80]	; 0x50
   1cc08:	mla	r0, r6, r2, r0
   1cc0c:	add	r6, r6, #1
   1cc10:	bl	42dc <strncpy@plt>
   1cc14:	b	1c7bc <dta_begin_data+0x864>
   1cc18:	ldr	r2, [pc, #880]	; 1cf90 <dta_begin_data+0x1038>
   1cc1c:	add	r2, pc, r2
   1cc20:	b	1cbec <dta_begin_data+0xc94>
   1cc24:	mov	r1, r6
   1cc28:	mov	r0, r5
   1cc2c:	bl	439c <readstat_get_variable@plt>
   1cc30:	ldr	r1, [r0, #1588]	; 0x634
   1cc34:	ldr	r0, [r4, #60]	; 0x3c
   1cc38:	ldr	r2, [r4, #84]	; 0x54
   1cc3c:	cmp	r1, #0
   1cc40:	beq	1cc58 <dta_begin_data+0xd00>
   1cc44:	add	r1, r1, #4
   1cc48:	mla	r0, r6, r2, r0
   1cc4c:	bl	42dc <strncpy@plt>
   1cc50:	add	r6, r6, #1
   1cc54:	b	1c81c <dta_begin_data+0x8c4>
   1cc58:	mla	r0, r6, r2, r0
   1cc5c:	bl	42b8 <memset@plt>
   1cc60:	b	1cc50 <dta_begin_data+0xcf8>
   1cc64:	mov	r1, r6
   1cc68:	mov	r0, r5
   1cc6c:	bl	439c <readstat_get_variable@plt>
   1cc70:	ldr	r3, [r4, #68]	; 0x44
   1cc74:	add	r1, r0, #564	; 0x234
   1cc78:	ldr	r2, [r4, #88]	; 0x58
   1cc7c:	mla	r0, r2, r6, r3
   1cc80:	add	r6, r6, #1
   1cc84:	bl	42dc <strncpy@plt>
   1cc88:	b	1c87c <dta_begin_data+0x924>
   1cc8c:	ldr	r2, [pc, #768]	; 1cf94 <dta_begin_data+0x103c>
   1cc90:	mov	r1, r4
   1cc94:	mov	r0, r5
   1cc98:	add	r2, pc, r2
   1cc9c:	bl	1ae44 <dta_write_tag>
   1cca0:	subs	r1, r0, #0
   1cca4:	bne	1cd94 <dta_begin_data+0xe3c>
   1cca8:	ldr	r3, [pc, #744]	; 1cf98 <dta_begin_data+0x1040>
   1ccac:	mov	r6, r1
   1ccb0:	add	r3, pc, r3
   1ccb4:	str	r3, [fp, #-188]	; 0xffffff44
   1ccb8:	ldr	r3, [pc, #732]	; 1cf9c <dta_begin_data+0x1044>
   1ccbc:	add	r3, pc, r3
   1ccc0:	str	r3, [fp, #-192]	; 0xffffff40
   1ccc4:	ldr	r3, [pc, #724]	; 1cfa0 <dta_begin_data+0x1048>
   1ccc8:	add	r3, pc, r3
   1cccc:	str	r3, [fp, #-196]	; 0xffffff3c
   1ccd0:	ldr	r2, [r5, #52]	; 0x34
   1ccd4:	ldrb	r3, [r4, #192]	; 0xc0
   1ccd8:	cmp	r6, r2
   1ccdc:	and	r3, r3, #4
   1cce0:	blt	1cd08 <dta_begin_data+0xdb0>
   1cce4:	cmp	r3, #0
   1cce8:	beq	1ce50 <dta_begin_data+0xef8>
   1ccec:	ldr	r2, [pc, #688]	; 1cfa4 <dta_begin_data+0x104c>
   1ccf0:	mov	r1, r4
   1ccf4:	mov	r0, r5
   1ccf8:	add	r2, pc, r2
   1ccfc:	bl	1ae44 <dta_write_tag>
   1cd00:	mov	r1, r0
   1cd04:	b	1cd94 <dta_begin_data+0xe3c>
   1cd08:	cmp	r3, #0
   1cd0c:	beq	1cda4 <dta_begin_data+0xe4c>
   1cd10:	mov	r1, r4
   1cd14:	mov	r0, r5
   1cd18:	ldr	r2, [fp, #-188]	; 0xffffff44
   1cd1c:	bl	1ae44 <dta_write_tag>
   1cd20:	cmp	r0, #0
   1cd24:	mov	r1, r0
   1cd28:	bne	1cd94 <dta_begin_data+0xe3c>
   1cd2c:	ldr	r3, [r5, #48]	; 0x30
   1cd30:	lsl	sl, r6, #2
   1cd34:	ldr	r0, [r3, r6, lsl #2]
   1cd38:	bl	421c <strlen@plt>
   1cd3c:	ldrd	r2, [r4, #92]	; 0x5c
   1cd40:	mov	r8, r0
   1cd44:	cmp	r2, #2
   1cd48:	addeq	r3, r0, r3, lsl #1
   1cd4c:	addeq	r3, r3, #1
   1cd50:	strheq	r3, [fp, #-164]	; 0xffffff5c
   1cd54:	beq	1cdc8 <dta_begin_data+0xe70>
   1cd58:	cmp	r2, #4
   1cd5c:	beq	1cdbc <dta_begin_data+0xe64>
   1cd60:	ldr	r3, [r4, #96]	; 0x60
   1cd64:	mov	r0, r7
   1cd68:	ldr	r1, [fp, #-192]	; 0xffffff40
   1cd6c:	mov	r2, r3
   1cd70:	str	r3, [fp, #-200]	; 0xffffff38
   1cd74:	bl	42dc <strncpy@plt>
   1cd78:	ldr	r3, [fp, #-200]	; 0xffffff38
   1cd7c:	mov	r1, r7
   1cd80:	mov	r0, r5
   1cd84:	mov	r2, r3
   1cd88:	bl	4474 <readstat_write_bytes@plt>
   1cd8c:	subs	r1, r0, #0
   1cd90:	beq	1cde4 <dta_begin_data+0xe8c>
   1cd94:	cmp	r1, #0
   1cd98:	mov	sp, r9
   1cd9c:	bne	1c178 <dta_begin_data+0x220>
   1cda0:	b	1c8e4 <dta_begin_data+0x98c>
   1cda4:	mov	r2, #1
   1cda8:	sub	r1, fp, #164	; 0xa4
   1cdac:	mov	r0, r5
   1cdb0:	strb	r2, [fp, #-164]	; 0xffffff5c
   1cdb4:	bl	4474 <readstat_write_bytes@plt>
   1cdb8:	b	1cd20 <dta_begin_data+0xdc8>
   1cdbc:	add	r3, r0, r3, lsl #1
   1cdc0:	add	r3, r3, #1
   1cdc4:	str	r3, [fp, #-164]	; 0xffffff5c
   1cdc8:	sub	r1, fp, #164	; 0xa4
   1cdcc:	mov	r0, r5
   1cdd0:	bl	4474 <readstat_write_bytes@plt>
   1cdd4:	cmp	r0, #0
   1cdd8:	mov	r1, r0
   1cddc:	beq	1cd60 <dta_begin_data+0xe08>
   1cde0:	b	1cd94 <dta_begin_data+0xe3c>
   1cde4:	add	r6, r6, #1
   1cde8:	mov	r0, r7
   1cdec:	ldr	r2, [fp, #-196]	; 0xffffff3c
   1cdf0:	mov	r3, r6
   1cdf4:	ldr	r1, [r4, #96]	; 0x60
   1cdf8:	bl	4294 <snprintf@plt>
   1cdfc:	mov	r1, r7
   1ce00:	mov	r0, r5
   1ce04:	ldr	r2, [r4, #96]	; 0x60
   1ce08:	bl	4474 <readstat_write_bytes@plt>
   1ce0c:	subs	r1, r0, #0
   1ce10:	bne	1cd94 <dta_begin_data+0xe3c>
   1ce14:	ldr	r3, [r5, #48]	; 0x30
   1ce18:	add	r2, r8, #1
   1ce1c:	mov	r0, r5
   1ce20:	ldr	r1, [r3, sl]
   1ce24:	bl	4474 <readstat_write_bytes@plt>
   1ce28:	subs	r1, r0, #0
   1ce2c:	bne	1cd94 <dta_begin_data+0xe3c>
   1ce30:	ldr	r2, [pc, #368]	; 1cfa8 <dta_begin_data+0x1050>
   1ce34:	mov	r1, r4
   1ce38:	mov	r0, r5
   1ce3c:	add	r2, pc, r2
   1ce40:	bl	1ae44 <dta_write_tag>
   1ce44:	subs	r1, r0, #0
   1ce48:	beq	1ccd0 <dta_begin_data+0xd78>
   1ce4c:	b	1cd94 <dta_begin_data+0xe3c>
   1ce50:	ldr	r1, [r4, #92]	; 0x5c
   1ce54:	mov	r0, r5
   1ce58:	add	r1, r1, #1
   1ce5c:	bl	4030 <readstat_write_zeros@plt>
   1ce60:	b	1cd00 <dta_begin_data+0xda8>
   1ce64:	mov	r1, #14
   1ce68:	mov	r0, r1
   1ce6c:	bx	lr
   1ce70:	cmp	r3, #0
   1ce74:	beq	1cba4 <dta_begin_data+0xc4c>
   1ce78:	cmp	r2, #1
   1ce7c:	mov	r1, r8
   1ce80:	moveq	r2, r9
   1ce84:	movne	r2, sl
   1ce88:	b	1cbf4 <dta_begin_data+0xc9c>
   1ce8c:	.word	0x00006af3
   1ce90:	.word	0x00006ae3
   1ce94:	.word	0x00006dd5
   1ce98:	.word	0x00006abf
   1ce9c:	.word	0x00006aa2
   1cea0:	.word	0x00006a82
   1cea4:	.word	0x00006a77
   1cea8:	.word	0x00006a67
   1ceac:	.word	0x00006a34
   1ceb0:	.word	0x00006a24
   1ceb4:	.word	0x00006a01
   1ceb8:	.word	0x000069ef
   1cebc:	.word	0x00006987
   1cec0:	.word	0x0000697b
   1cec4:	.word	0x0000696b
   1cec8:	.word	0x0000695c
   1cecc:	.word	0x0000694c
   1ced0:	.word	0x000068bd
   1ced4:	.word	0x0000688d
   1ced8:	.word	0x0000687b
   1cedc:	.word	0x0000685a
   1cee0:	.word	0x0000684f
   1cee4:	.word	0x00006835
   1cee8:	.word	0x00006910
   1ceec:	.word	0x00006824
   1cef0:	.word	0x0000680c
   1cef4:	.word	0x000067f7
   1cef8:	.word	0x000067df
   1cefc:	.word	0x000067d1
   1cf00:	.word	0x000067b8
   1cf04:	.word	0x000067ac
   1cf08:	.word	0x0000679d
   1cf0c:	.word	0x00006797
   1cf10:	.word	0x000067c3
   1cf14:	.word	0x0000678c
   1cf18:	.word	0x0000692c
   1cf1c:	.word	0x000067a4
   1cf20:	.word	0x00006793
   1cf24:	.word	0x00006738
   1cf28:	.word	0x00006789
   1cf2c:	.word	0x000067bc
   1cf30:	.word	0x0000674c
   1cf34:	.word	0x00006747
   1cf38:	.word	0x00006771
   1cf3c:	.word	0x00006761
   1cf40:	.word	0x00006521
   1cf44:	.word	0x00006523
   1cf48:	.word	0x000064fe
   1cf4c:	.word	0x000064c7
   1cf50:	.word	0x000064bd
   1cf54:	.word	0x00006484
   1cf58:	.word	0x00006474
   1cf5c:	.word	0x0000643f
   1cf60:	.word	0x0000642f
   1cf64:	.word	0x00006681
   1cf68:	.word	0x00006647
   1cf6c:	.word	0x00004bdc
   1cf70:	.word	0x000063dd
   1cf74:	.word	0x000063cc
   1cf78:	.word	0x0000639c
   1cf7c:	.word	0x00006395
   1cf80:	.word	0x00006363
   1cf84:	.word	0x000063d8
   1cf88:	.word	0x000047ac
   1cf8c:	.word	0x00006237
   1cf90:	.word	0x000061df
   1cf94:	.word	0x00005fc4
   1cf98:	.word	0x00005fc3
   1cf9c:	.word	0x00005fbc
   1cfa0:	.word	0x00005fb5
   1cfa4:	.word	0x0000611c
   1cfa8:	.word	0x00005e48

0001cfac <dta_113_write_missing_numeric>:
   1cfac:	ldr	r2, [r1]
   1cfb0:	mov	r3, r0
   1cfb4:	cmp	r2, #1
   1cfb8:	moveq	r2, #101	; 0x65
   1cfbc:	strbeq	r2, [r0]
   1cfc0:	beq	1cff0 <dta_113_write_missing_numeric+0x44>
   1cfc4:	cmp	r2, #2
   1cfc8:	movweq	r2, #32741	; 0x7fe5
   1cfcc:	strheq	r2, [r0]
   1cfd0:	beq	1cff0 <dta_113_write_missing_numeric+0x44>
   1cfd4:	cmp	r2, #3
   1cfd8:	mvneq	r2, #-2147483622	; 0x8000001a
   1cfdc:	beq	1cfec <dta_113_write_missing_numeric+0x40>
   1cfe0:	cmp	r2, #4
   1cfe4:	bne	1cff8 <dta_113_write_missing_numeric+0x4c>
   1cfe8:	mov	r2, #2130706432	; 0x7f000000
   1cfec:	str	r2, [r3]
   1cff0:	mov	r0, #0
   1cff4:	bx	lr
   1cff8:	cmp	r2, #5
   1cffc:	bne	1cff0 <dta_113_write_missing_numeric+0x44>
   1d000:	ldr	r1, [pc, #36]	; 1d02c <dta_113_write_missing_numeric+0x80>
   1d004:	sub	sp, sp, #8
   1d008:	mov	r0, #0
   1d00c:	mov	r2, sp
   1d010:	strd	r0, [sp]
   1d014:	ldm	r2!, {r0, r1}
   1d018:	str	r0, [r3]
   1d01c:	mov	r0, #0
   1d020:	str	r1, [r3, #4]
   1d024:	add	sp, sp, #8
   1d028:	bx	lr
   1d02c:	.word	0x7fe00000

0001d030 <dta_write_double>:
   1d030:	vldr	d7, [pc, #96]	; 1d098 <dta_write_double+0x68>
   1d034:	push	{r0, r1, r2, r3, r4, r5}
   1d038:	mvn	r4, #0
   1d03c:	ldr	r5, [pc, #92]	; 1d0a0 <dta_write_double+0x70>
   1d040:	vcmpe.f64	d0, d7
   1d044:	strd	r4, [sp]
   1d048:	vmrs	APSR_nzcv, fpscr
   1d04c:	bgt	1d090 <dta_write_double+0x60>
   1d050:	vcmp.f64	d0, d0
   1d054:	vmrs	APSR_nzcv, fpscr
   1d058:	bvc	1d068 <dta_write_double+0x38>
   1d05c:	add	sp, sp, #16
   1d060:	pop	{r4, r5}
   1d064:	b	1cfac <dta_113_write_missing_numeric>
   1d068:	add	r3, sp, #8
   1d06c:	mov	r2, r0
   1d070:	vstr	d0, [sp, #8]
   1d074:	ldm	r3!, {r0, r1}
   1d078:	str	r0, [r2]
   1d07c:	mov	r0, #0
   1d080:	str	r1, [r2, #4]
   1d084:	add	sp, sp, #16
   1d088:	pop	{r4, r5}
   1d08c:	bx	lr
   1d090:	mov	r0, #20
   1d094:	b	1d084 <dta_write_double+0x54>
   1d098:	.word	0xffffffff
   1d09c:	.word	0x7fdfffff
   1d0a0:	.word	0x7fdfffff

0001d0a4 <dta_write_float>:
   1d0a4:	vldr	s15, [pc, #68]	; 1d0f0 <dta_write_float+0x4c>
   1d0a8:	sub	sp, sp, #8
   1d0ac:	mvn	r2, #-2130706432	; 0x81000000
   1d0b0:	str	r2, [sp, #4]
   1d0b4:	vcmpe.f32	s0, s15
   1d0b8:	vmrs	APSR_nzcv, fpscr
   1d0bc:	bgt	1d0e8 <dta_write_float+0x44>
   1d0c0:	vcmp.f32	s0, s0
   1d0c4:	vmrs	APSR_nzcv, fpscr
   1d0c8:	bvc	1d0d4 <dta_write_float+0x30>
   1d0cc:	add	sp, sp, #8
   1d0d0:	b	1cfac <dta_113_write_missing_numeric>
   1d0d4:	vmov	r2, s0
   1d0d8:	str	r2, [r0]
   1d0dc:	mov	r0, #0
   1d0e0:	add	sp, sp, #8
   1d0e4:	bx	lr
   1d0e8:	mov	r0, #20
   1d0ec:	b	1d0e0 <dta_write_float+0x3c>
   1d0f0:	.word	0x7effffff

0001d0f4 <readstat_begin_writing_dta>:
   1d0f4:	ldr	ip, [r0, #8]
   1d0f8:	ldr	r3, [pc, #380]	; 1d27c <readstat_begin_writing_dta+0x188>
   1d0fc:	cmp	ip, #0
   1d100:	moveq	ip, #118	; 0x76
   1d104:	add	r3, pc, r3
   1d108:	streq	ip, [r0, #8]
   1d10c:	ldr	ip, [pc, #364]	; 1d280 <readstat_begin_writing_dta+0x18c>
   1d110:	ldr	r3, [r3, ip]
   1d114:	str	r3, [r0, #292]	; 0x124
   1d118:	ldr	r3, [r0, #8]
   1d11c:	cmp	r3, #116	; 0x74
   1d120:	ble	1d15c <readstat_begin_writing_dta+0x68>
   1d124:	ldr	ip, [pc, #344]	; 1d284 <readstat_begin_writing_dta+0x190>
   1d128:	cmp	r3, #117	; 0x75
   1d12c:	add	ip, pc, ip
   1d130:	str	ip, [r0, #228]	; 0xe4
   1d134:	bne	1d1b8 <readstat_begin_writing_dta+0xc4>
   1d138:	ldr	ip, [pc, #328]	; 1d288 <readstat_begin_writing_dta+0x194>
   1d13c:	cmp	r3, #117	; 0x75
   1d140:	add	ip, pc, ip
   1d144:	str	ip, [r0, #232]	; 0xe8
   1d148:	bgt	1d1c4 <readstat_begin_writing_dta+0xd0>
   1d14c:	bne	1d264 <readstat_begin_writing_dta+0x170>
   1d150:	ldr	r3, [pc, #308]	; 1d28c <readstat_begin_writing_dta+0x198>
   1d154:	add	r3, pc, r3
   1d158:	b	1d1cc <readstat_begin_writing_dta+0xd8>
   1d15c:	cmp	r3, #110	; 0x6e
   1d160:	bgt	1d270 <readstat_begin_writing_dta+0x17c>
   1d164:	ldr	ip, [pc, #292]	; 1d290 <readstat_begin_writing_dta+0x19c>
   1d168:	add	ip, pc, ip
   1d16c:	cmp	r3, #109	; 0x6d
   1d170:	str	ip, [r0, #228]	; 0xe4
   1d174:	bgt	1d138 <readstat_begin_writing_dta+0x44>
   1d178:	ldr	r3, [pc, #276]	; 1d294 <readstat_begin_writing_dta+0x1a0>
   1d17c:	add	r3, pc, r3
   1d180:	str	r3, [r0, #232]	; 0xe8
   1d184:	ldr	r3, [pc, #268]	; 1d298 <readstat_begin_writing_dta+0x1a4>
   1d188:	add	r3, pc, r3
   1d18c:	str	r3, [r0, #236]	; 0xec
   1d190:	ldr	r3, [pc, #260]	; 1d29c <readstat_begin_writing_dta+0x1a8>
   1d194:	add	r3, pc, r3
   1d198:	str	r3, [r0, #240]	; 0xf0
   1d19c:	ldr	r3, [pc, #252]	; 1d2a0 <readstat_begin_writing_dta+0x1ac>
   1d1a0:	add	r3, pc, r3
   1d1a4:	str	r3, [r0, #244]	; 0xf4
   1d1a8:	ldr	r3, [pc, #244]	; 1d2a4 <readstat_begin_writing_dta+0x1b0>
   1d1ac:	add	r3, pc, r3
   1d1b0:	str	r3, [r0, #268]	; 0x10c
   1d1b4:	b	1d20c <readstat_begin_writing_dta+0x118>
   1d1b8:	ldr	r3, [pc, #232]	; 1d2a8 <readstat_begin_writing_dta+0x1b4>
   1d1bc:	add	r3, pc, r3
   1d1c0:	str	r3, [r0, #232]	; 0xe8
   1d1c4:	ldr	r3, [pc, #224]	; 1d2ac <readstat_begin_writing_dta+0x1b8>
   1d1c8:	add	r3, pc, r3
   1d1cc:	str	r3, [r0, #260]	; 0x104
   1d1d0:	ldr	r3, [pc, #216]	; 1d2b0 <readstat_begin_writing_dta+0x1bc>
   1d1d4:	add	r3, pc, r3
   1d1d8:	str	r3, [r0, #236]	; 0xec
   1d1dc:	ldr	r3, [pc, #208]	; 1d2b4 <readstat_begin_writing_dta+0x1c0>
   1d1e0:	add	r3, pc, r3
   1d1e4:	str	r3, [r0, #240]	; 0xf0
   1d1e8:	ldr	r3, [pc, #200]	; 1d2b8 <readstat_begin_writing_dta+0x1c4>
   1d1ec:	add	r3, pc, r3
   1d1f0:	str	r3, [r0, #244]	; 0xf4
   1d1f4:	ldr	r3, [pc, #192]	; 1d2bc <readstat_begin_writing_dta+0x1c8>
   1d1f8:	add	r3, pc, r3
   1d1fc:	str	r3, [r0, #268]	; 0x10c
   1d200:	ldr	r3, [pc, #184]	; 1d2c0 <readstat_begin_writing_dta+0x1cc>
   1d204:	add	r3, pc, r3
   1d208:	str	r3, [r0, #272]	; 0x110
   1d20c:	ldr	r3, [pc, #176]	; 1d2c4 <readstat_begin_writing_dta+0x1d0>
   1d210:	add	r3, pc, r3
   1d214:	str	r3, [r0, #248]	; 0xf8
   1d218:	ldr	r3, [pc, #168]	; 1d2c8 <readstat_begin_writing_dta+0x1d4>
   1d21c:	add	r3, pc, r3
   1d220:	str	r3, [r0, #252]	; 0xfc
   1d224:	ldr	r3, [pc, #160]	; 1d2cc <readstat_begin_writing_dta+0x1d8>
   1d228:	add	r3, pc, r3
   1d22c:	str	r3, [r0, #256]	; 0x100
   1d230:	ldr	r3, [pc, #152]	; 1d2d0 <readstat_begin_writing_dta+0x1dc>
   1d234:	add	r3, pc, r3
   1d238:	str	r3, [r0, #264]	; 0x108
   1d23c:	ldr	r3, [pc, #144]	; 1d2d4 <readstat_begin_writing_dta+0x1e0>
   1d240:	add	r3, pc, r3
   1d244:	str	r3, [r0, #276]	; 0x114
   1d248:	ldr	r3, [pc, #136]	; 1d2d8 <readstat_begin_writing_dta+0x1e4>
   1d24c:	add	r3, pc, r3
   1d250:	str	r3, [r0, #284]	; 0x11c
   1d254:	ldr	r3, [pc, #128]	; 1d2dc <readstat_begin_writing_dta+0x1e8>
   1d258:	add	r3, pc, r3
   1d25c:	str	r3, [r0, #288]	; 0x120
   1d260:	b	3f7c <readstat_begin_writing_file@plt>
   1d264:	cmp	r3, #112	; 0x70
   1d268:	ble	1d184 <readstat_begin_writing_dta+0x90>
   1d26c:	b	1d1d0 <readstat_begin_writing_dta+0xdc>
   1d270:	ldr	ip, [pc, #104]	; 1d2e0 <readstat_begin_writing_dta+0x1ec>
   1d274:	add	ip, pc, ip
   1d278:	b	1d16c <readstat_begin_writing_dta+0x78>
   1d27c:	.word	0x00022ef4
   1d280:	.word	0x00000304
   1d284:	.word	0xffffe57c
   1d288:	.word	0xffffecac
   1d28c:	.word	0xffffdc9c
   1d290:	.word	0xffffe520
   1d294:	.word	0xffffec58
   1d298:	.word	0xffffdbfc
   1d29c:	.word	0xffffdc1c
   1d2a0:	.word	0xffffdc3c
   1d2a4:	.word	0xffffe584
   1d2a8:	.word	0xffffec48
   1d2ac:	.word	0xffffe340
   1d2b0:	.word	0xffffdb9c
   1d2b4:	.word	0xffffdbb8
   1d2b8:	.word	0xffffdbdc
   1d2bc:	.word	0xfffffdac
   1d2c0:	.word	0xffffe5b0
   1d2c4:	.word	0xfffffe8c
   1d2c8:	.word	0xfffffe0c
   1d2cc:	.word	0xffffe35c
   1d2d0:	.word	0xffffe2bc
   1d2d4:	.word	0xffffed10
   1d2d8:	.word	0xffffdc0c
   1d2dc:	.word	0xffffdbe0
   1d2e0:	.word	0xffffe3f4

0001d2e4 <submit_value_label>:
   1d2e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d2e8:	sub	sp, sp, #36	; 0x24
   1d2ec:	ldr	r9, [r0, #20]
   1d2f0:	ldrd	r4, [sp, #72]	; 0x48
   1d2f4:	ldr	r8, [sp, #96]	; 0x60
   1d2f8:	cmp	r9, #0
   1d2fc:	bne	1d30c <submit_value_label+0x28>
   1d300:	mov	r0, #0
   1d304:	add	sp, sp, #36	; 0x24
   1d308:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d30c:	cmp	r2, #2
   1d310:	mov	r6, r1
   1d314:	mov	r7, r0
   1d318:	moveq	sl, #0
   1d31c:	moveq	fp, #5
   1d320:	addeq	r9, sp, #24
   1d324:	beq	1d3bc <submit_value_label+0xd8>
   1d328:	cmp	r2, #3
   1d32c:	beq	1d300 <submit_value_label+0x1c>
   1d330:	cmp	r2, #0
   1d334:	mov	r0, #0
   1d338:	mov	r1, #0
   1d33c:	add	r3, sp, #16
   1d340:	moveq	r2, #5
   1d344:	strd	r0, [r3, #8]
   1d348:	streq	r2, [sp, #24]
   1d34c:	strd	r0, [sp, #16]
   1d350:	vstreq	d0, [sp, #16]
   1d354:	beq	1d384 <submit_value_label+0xa0>
   1d358:	cmp	r2, #1
   1d35c:	ldreq	r2, [sp, #88]	; 0x58
   1d360:	streq	r2, [sp, #16]
   1d364:	beq	1d384 <submit_value_label+0xa0>
   1d368:	cmn	r2, #1
   1d36c:	bne	1d384 <submit_value_label+0xa0>
   1d370:	ldr	r1, [pc, #164]	; 1d41c <submit_value_label+0x138>
   1d374:	mov	r2, #5
   1d378:	mov	r0, #0
   1d37c:	strd	r0, [sp, #16]
   1d380:	str	r2, [sp, #24]
   1d384:	ldr	r2, [sp, #92]	; 0x5c
   1d388:	str	r2, [sp, #8]
   1d38c:	add	r2, sp, #32
   1d390:	str	r8, [sp, #12]
   1d394:	ldmdb	r2, {r0, r1}
   1d398:	stm	sp, {r0, r1}
   1d39c:	mov	r0, r6
   1d3a0:	ldm	r3, {r2, r3}
   1d3a4:	blx	r9
   1d3a8:	cmp	r0, #0
   1d3ac:	beq	1d300 <submit_value_label+0x1c>
   1d3b0:	b	1d414 <submit_value_label+0x130>
   1d3b4:	adds	r4, r4, #1
   1d3b8:	adc	r5, r5, #0
   1d3bc:	ldrd	r2, [sp, #80]	; 0x50
   1d3c0:	cmp	r2, r4
   1d3c4:	sbcs	r3, r3, r5
   1d3c8:	blt	1d300 <submit_value_label+0x1c>
   1d3cc:	mov	r0, r4
   1d3d0:	mov	r1, r5
   1d3d4:	str	sl, [sp, #28]
   1d3d8:	bl	200b8 <__aeabi_l2d>
   1d3dc:	ldr	r3, [sp, #92]	; 0x5c
   1d3e0:	str	r3, [sp, #8]
   1d3e4:	add	r3, sp, #16
   1d3e8:	str	r8, [sp, #12]
   1d3ec:	strd	r0, [sp, #16]
   1d3f0:	str	fp, [sp, #24]
   1d3f4:	ldm	r9, {r0, r1}
   1d3f8:	stm	sp, {r0, r1}
   1d3fc:	mov	r0, r6
   1d400:	ldm	r3, {r2, r3}
   1d404:	ldr	r1, [r7, #20]
   1d408:	blx	r1
   1d40c:	cmp	r0, #0
   1d410:	beq	1d3b4 <submit_value_label+0xd0>
   1d414:	mov	r0, #4
   1d418:	b	1d304 <submit_value_label+0x20>
   1d41c:	.word	0x7ff80000

0001d420 <submit_columns>:
   1d420:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d424:	mov	r3, #0
   1d428:	mov	r4, #2208	; 0x8a0
   1d42c:	ldr	lr, [r1, #268]	; 0x10c
   1d430:	cmp	lr, r3
   1d434:	bgt	1d450 <submit_columns+0x30>
   1d438:	ldr	r3, [r0, #8]
   1d43c:	cmp	r3, #0
   1d440:	bne	1d4e8 <submit_columns+0xc8>
   1d444:	mov	r0, #0
   1d448:	add	sp, sp, #4
   1d44c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d450:	ldr	r5, [r1, #276]	; 0x114
   1d454:	mul	ip, r4, r3
   1d458:	add	r3, r3, #1
   1d45c:	ldr	ip, [r5, ip]
   1d460:	ldr	r5, [r1, #256]	; 0x100
   1d464:	cmp	ip, r5
   1d468:	addge	ip, ip, #1
   1d46c:	strge	ip, [r1, #256]	; 0x100
   1d470:	b	1d430 <submit_columns+0x10>
   1d474:	ldr	r4, [r5, #276]	; 0x114
   1d478:	mov	r3, #2208	; 0x8a0
   1d47c:	mov	r0, r6
   1d480:	ldr	fp, [r8, #8]
   1d484:	mla	r4, r3, r6, r4
   1d488:	ldr	r3, [r4, #16]
   1d48c:	add	r1, r4, #16
   1d490:	str	r6, [r4, #20]
   1d494:	ldrb	r2, [r4, #2168]	; 0x878
   1d498:	str	r7, [r4, #2164]	; 0x874
   1d49c:	cmp	r3, #0
   1d4a0:	ldreq	r3, [r4, #8]
   1d4a4:	streq	r3, [r4, #1612]	; 0x64c
   1d4a8:	cmp	r2, #0
   1d4ac:	mov	r3, r9
   1d4b0:	addne	r2, r4, sl
   1d4b4:	blx	fp
   1d4b8:	cmp	r0, #2
   1d4bc:	moveq	r3, #1
   1d4c0:	streq	r3, [r4, #12]
   1d4c4:	beq	1d4d4 <submit_columns+0xb4>
   1d4c8:	cmp	r0, #1
   1d4cc:	beq	1d504 <submit_columns+0xe4>
   1d4d0:	add	r7, r7, #1
   1d4d4:	add	r6, r6, #1
   1d4d8:	ldr	r3, [r5, #268]	; 0x10c
   1d4dc:	cmp	r3, r6
   1d4e0:	bgt	1d474 <submit_columns+0x54>
   1d4e4:	b	1d444 <submit_columns+0x24>
   1d4e8:	mov	r7, #0
   1d4ec:	mov	r9, r2
   1d4f0:	mov	r5, r1
   1d4f4:	mov	r8, r0
   1d4f8:	mov	r6, r7
   1d4fc:	movw	sl, #2168	; 0x878
   1d500:	b	1d4d8 <submit_columns+0xb8>
   1d504:	mov	r0, #4
   1d508:	b	1d448 <submit_columns+0x28>

0001d50c <readstat_copy>:
   1d50c:	cmp	r3, r1
   1d510:	push	{r4, r5, r6, lr}
   1d514:	mov	r5, r0
   1d518:	subcs	r4, r1, #1
   1d51c:	movcc	r4, r3
   1d520:	mov	r0, r2
   1d524:	mov	r2, r4
   1d528:	mov	r1, r0
   1d52c:	mov	r0, r5
   1d530:	bl	3f34 <memcpy@plt>
   1d534:	mov	r3, #0
   1d538:	strb	r3, [r5, r4]
   1d53c:	pop	{r4, r5, r6, pc}

0001d540 <readstat_copy_lower>:
   1d540:	push	{r4, r5, r6, lr}
   1d544:	mov	r4, r0
   1d548:	mov	r5, r1
   1d54c:	add	r5, r4, r5
   1d550:	bl	3e80 <readstat_copy@plt>
   1d554:	cmp	r4, r5
   1d558:	popeq	{r4, r5, r6, pc}
   1d55c:	ldrb	r6, [r4]
   1d560:	cmp	r6, #0
   1d564:	popeq	{r4, r5, r6, pc}
   1d568:	bl	418c <__ctype_tolower_loc@plt>
   1d56c:	ldr	r3, [r0]
   1d570:	ldr	r3, [r3, r6, lsl #2]
   1d574:	strb	r3, [r4], #1
   1d578:	b	1d554 <readstat_copy_lower+0x14>

0001d57c <readstat_copy_quoted>:
   1d57c:	cmp	r3, r1
   1d580:	mov	ip, #0
   1d584:	push	{r4, r5, lr}
   1d588:	subcs	r3, r1, #1
   1d58c:	mov	r5, #9
   1d590:	add	r3, r2, r3
   1d594:	mov	r1, ip
   1d598:	cmp	r3, r2
   1d59c:	add	lr, r0, r1
   1d5a0:	bne	1d5b0 <readstat_copy_quoted+0x34>
   1d5a4:	mov	r3, #0
   1d5a8:	strb	r3, [lr]
   1d5ac:	pop	{r4, r5, pc}
   1d5b0:	cmp	ip, #0
   1d5b4:	ldrb	r4, [r2], #1
   1d5b8:	beq	1d5d4 <readstat_copy_quoted+0x58>
   1d5bc:	cmp	r4, #116	; 0x74
   1d5c0:	add	r1, r1, #1
   1d5c4:	mov	ip, #0
   1d5c8:	strbeq	r5, [lr]
   1d5cc:	strbne	r4, [lr]
   1d5d0:	b	1d598 <readstat_copy_quoted+0x1c>
   1d5d4:	cmp	r4, #92	; 0x5c
   1d5d8:	addne	r1, r1, #1
   1d5dc:	moveq	ip, #1
   1d5e0:	strbne	r4, [lr]
   1d5e4:	b	1d598 <readstat_copy_quoted+0x1c>

0001d5e8 <readstat_parse_sas_commands>:
   1d5e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d5ec:	sub	sp, sp, #2304	; 0x900
   1d5f0:	sub	sp, sp, #4
   1d5f4:	str	r0, [sp, #44]	; 0x2c
   1d5f8:	mov	r0, r1
   1d5fc:	str	r3, [sp, #56]	; 0x38
   1d600:	ldr	r3, [sp, #44]	; 0x2c
   1d604:	str	r2, [sp, #88]	; 0x58
   1d608:	ldr	r3, [r3, #32]
   1d60c:	ldr	r2, [r3]
   1d610:	ldr	r1, [r3, #20]
   1d614:	blx	r2
   1d618:	cmn	r0, #1
   1d61c:	bne	1d648 <readstat_parse_sas_commands+0x60>
   1d620:	ldr	r3, [sp, #56]	; 0x38
   1d624:	cmp	r3, #0
   1d628:	ldrne	r2, [sp, #56]	; 0x38
   1d62c:	movne	r3, #1
   1d630:	strne	r3, [r2]
   1d634:	mov	r5, #0
   1d638:	mov	r0, r5
   1d63c:	add	sp, sp, #2304	; 0x900
   1d640:	add	sp, sp, #4
   1d644:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d648:	ldr	r3, [sp, #44]	; 0x2c
   1d64c:	mov	r1, #2
   1d650:	mov	r0, #0
   1d654:	ldr	r3, [r3, #32]
   1d658:	ldr	r4, [r3, #8]
   1d65c:	ldr	r2, [r3, #20]
   1d660:	blx	r4
   1d664:	cmn	r0, #1
   1d668:	mov	r4, r0
   1d66c:	moveq	fp, #0
   1d670:	moveq	r3, #15
   1d674:	moveq	r5, fp
   1d678:	beq	1dc24 <readstat_parse_sas_commands+0x63c>
   1d67c:	ldr	r3, [sp, #44]	; 0x2c
   1d680:	mov	r1, #0
   1d684:	mov	r0, r1
   1d688:	ldr	r3, [r3, #32]
   1d68c:	ldr	r5, [r3, #8]
   1d690:	ldr	r2, [r3, #20]
   1d694:	blx	r5
   1d698:	mov	r0, r4
   1d69c:	bl	412c <malloc@plt>
   1d6a0:	ldr	r3, [sp, #44]	; 0x2c
   1d6a4:	mov	fp, r0
   1d6a8:	mov	r1, r4
   1d6ac:	ldr	r3, [r3, #32]
   1d6b0:	ldr	r5, [r3, #12]
   1d6b4:	ldr	r2, [r3, #20]
   1d6b8:	blx	r5
   1d6bc:	add	r3, fp, r4
   1d6c0:	mov	r1, #280	; 0x118
   1d6c4:	mov	r0, #1
   1d6c8:	str	r3, [sp, #84]	; 0x54
   1d6cc:	bl	3d6c <calloc@plt>
   1d6d0:	subs	r5, r0, #0
   1d6d4:	moveq	r3, #3
   1d6d8:	beq	1dc24 <readstat_parse_sas_commands+0x63c>
   1d6dc:	mov	r3, #1
   1d6e0:	str	r3, [r5, #256]	; 0x100
   1d6e4:	ldr	r3, [sp, #84]	; 0x54
   1d6e8:	cmp	fp, r3
   1d6ec:	beq	1d888 <readstat_parse_sas_commands+0x2a0>
   1d6f0:	mov	r3, #5
   1d6f4:	vldr	d7, [pc, #996]	; 1dae0 <readstat_parse_sas_commands+0x4f8>
   1d6f8:	mov	r6, #0
   1d6fc:	mov	r8, #0
   1d700:	mov	r9, #0
   1d704:	mov	r4, fp
   1d708:	mov	r7, r6
   1d70c:	str	r6, [sp, #40]	; 0x28
   1d710:	str	r3, [sp, #68]	; 0x44
   1d714:	movw	r3, #1094	; 0x446
   1d718:	str	r6, [sp, #48]	; 0x30
   1d71c:	str	r3, [sp, #52]	; 0x34
   1d720:	ldr	r3, [pc, #960]	; 1dae8 <readstat_parse_sas_commands+0x500>
   1d724:	str	r6, [sp, #60]	; 0x3c
   1d728:	str	r6, [sp, #64]	; 0x40
   1d72c:	vstr	d7, [sp, #72]	; 0x48
   1d730:	str	r6, [sp, #80]	; 0x50
   1d734:	add	r3, pc, r3
   1d738:	str	fp, [sp, #96]	; 0x60
   1d73c:	str	r3, [sp, #100]	; 0x64
   1d740:	ldr	r3, [pc, #932]	; 1daec <readstat_parse_sas_commands+0x504>
   1d744:	strd	r8, [sp, #104]	; 0x68
   1d748:	add	r3, pc, r3
   1d74c:	str	r3, [sp, #112]	; 0x70
   1d750:	ldr	r3, [sp, #100]	; 0x64
   1d754:	add	r3, r3, #2192	; 0x890
   1d758:	add	r3, r3, #4
   1d75c:	str	r3, [sp, #92]	; 0x5c
   1d760:	ldr	r3, [sp, #52]	; 0x34
   1d764:	ldr	r0, [sp, #52]	; 0x34
   1d768:	ldr	r2, [sp, #100]	; 0x64
   1d76c:	lsl	r3, r3, #1
   1d770:	ldr	r1, [sp, #112]	; 0x70
   1d774:	ldrsh	r2, [r2, r3]
   1d778:	add	r2, r2, r1
   1d77c:	ldr	r1, [sp, #92]	; 0x5c
   1d780:	ldrsh	r3, [r1, r3]
   1d784:	ldr	r1, [pc, #868]	; 1daf0 <readstat_parse_sas_commands+0x508>
   1d788:	str	r3, [sp, #36]	; 0x24
   1d78c:	add	r1, pc, r1
   1d790:	add	r1, r1, r0
   1d794:	ldrb	lr, [r1, #-3792]	; 0xfffff130
   1d798:	cmp	lr, #0
   1d79c:	beq	1d8b0 <readstat_parse_sas_commands+0x2c8>
   1d7a0:	sub	ip, lr, #1
   1d7a4:	mov	r0, r2
   1d7a8:	add	ip, r2, ip
   1d7ac:	cmp	r0, ip
   1d7b0:	bhi	1d8a0 <readstat_parse_sas_commands+0x2b8>
   1d7b4:	sub	sl, ip, r0
   1d7b8:	ldrb	r3, [r4]
   1d7bc:	add	r1, r0, sl, asr #1
   1d7c0:	ldrb	sl, [r0, sl, asr #1]
   1d7c4:	cmp	r3, sl
   1d7c8:	subcc	ip, r1, #1
   1d7cc:	bcc	1d7ac <readstat_parse_sas_commands+0x1c4>
   1d7d0:	addhi	r0, r1, #1
   1d7d4:	bhi	1d7ac <readstat_parse_sas_commands+0x1c4>
   1d7d8:	ldr	r3, [sp, #36]	; 0x24
   1d7dc:	sub	r2, r1, r2
   1d7e0:	add	r3, r3, r2
   1d7e4:	str	r3, [sp, #36]	; 0x24
   1d7e8:	ldr	r3, [sp, #36]	; 0x24
   1d7ec:	ldr	r1, [pc, #768]	; 1daf4 <readstat_parse_sas_commands+0x50c>
   1d7f0:	lsl	r2, r3, #1
   1d7f4:	add	r1, pc, r1
   1d7f8:	ldrsh	r3, [r1, r2]
   1d7fc:	ldr	r2, [pc, #756]	; 1daf8 <readstat_parse_sas_commands+0x510>
   1d800:	str	r3, [sp, #52]	; 0x34
   1d804:	ldr	r3, [sp, #36]	; 0x24
   1d808:	add	r2, pc, r2
   1d80c:	ldrb	r2, [r2, r3]
   1d810:	cmp	r2, #0
   1d814:	beq	1d85c <readstat_parse_sas_commands+0x274>
   1d818:	ldr	r3, [pc, #732]	; 1dafc <readstat_parse_sas_commands+0x514>
   1d81c:	add	r3, pc, r3
   1d820:	sub	r3, r3, #1584	; 0x630
   1d824:	sub	r3, r3, #12
   1d828:	add	sl, r3, r2
   1d82c:	ldrb	r3, [r3, r2]
   1d830:	add	r3, r3, sl
   1d834:	str	r3, [sp, #36]	; 0x24
   1d838:	ldr	r3, [pc, #704]	; 1db00 <readstat_parse_sas_commands+0x518>
   1d83c:	add	r3, pc, r3
   1d840:	str	r3, [sp, #116]	; 0x74
   1d844:	ldr	r3, [pc, #696]	; 1db04 <readstat_parse_sas_commands+0x51c>
   1d848:	add	r3, pc, r3
   1d84c:	str	r3, [sp, #120]	; 0x78
   1d850:	ldr	r3, [sp, #36]	; 0x24
   1d854:	cmp	sl, r3
   1d858:	bne	1d930 <readstat_parse_sas_commands+0x348>
   1d85c:	ldr	r3, [sp, #52]	; 0x34
   1d860:	cmp	r3, #0
   1d864:	beq	1dd2c <readstat_parse_sas_commands+0x744>
   1d868:	ldr	r3, [sp, #84]	; 0x54
   1d86c:	add	r4, r4, #1
   1d870:	cmp	r3, r4
   1d874:	bne	1d760 <readstat_parse_sas_commands+0x178>
   1d878:	ldr	r2, [sp, #52]	; 0x34
   1d87c:	movw	r3, #1093	; 0x445
   1d880:	cmp	r2, r3
   1d884:	ble	1dd38 <readstat_parse_sas_commands+0x750>
   1d888:	mov	r1, r5
   1d88c:	ldr	r0, [sp, #44]	; 0x2c
   1d890:	ldr	r2, [sp, #88]	; 0x58
   1d894:	bl	3f4c <submit_columns@plt>
   1d898:	mov	r3, r0
   1d89c:	b	1dc24 <readstat_parse_sas_commands+0x63c>
   1d8a0:	ldr	r3, [sp, #36]	; 0x24
   1d8a4:	add	r2, r2, lr
   1d8a8:	add	r3, r3, lr
   1d8ac:	str	r3, [sp, #36]	; 0x24
   1d8b0:	ldr	r1, [pc, #592]	; 1db08 <readstat_parse_sas_commands+0x520>
   1d8b4:	ldr	r3, [sp, #52]	; 0x34
   1d8b8:	add	r1, pc, r1
   1d8bc:	add	r1, r1, r3
   1d8c0:	ldrb	sl, [r1, #-2694]	; 0xfffff57a
   1d8c4:	cmp	sl, #0
   1d8c8:	beq	1d7e8 <readstat_parse_sas_commands+0x200>
   1d8cc:	add	lr, r2, sl, lsl #1
   1d8d0:	mov	ip, r2
   1d8d4:	sub	lr, lr, #2
   1d8d8:	cmp	ip, lr
   1d8dc:	bhi	1d924 <readstat_parse_sas_commands+0x33c>
   1d8e0:	sub	r0, lr, ip
   1d8e4:	ldrb	r3, [r4]
   1d8e8:	asr	r0, r0, #1
   1d8ec:	bic	r0, r0, #1
   1d8f0:	add	r1, ip, r0
   1d8f4:	ldrb	r0, [ip, r0]
   1d8f8:	cmp	r0, r3
   1d8fc:	subhi	lr, r1, #2
   1d900:	bhi	1d8d8 <readstat_parse_sas_commands+0x2f0>
   1d904:	ldrb	r0, [r1, #1]
   1d908:	cmp	r0, r3
   1d90c:	addcc	ip, r1, #2
   1d910:	bcc	1d8d8 <readstat_parse_sas_commands+0x2f0>
   1d914:	ldr	r3, [sp, #36]	; 0x24
   1d918:	sub	r2, r1, r2
   1d91c:	add	r3, r3, r2, asr #1
   1d920:	b	1d7e4 <readstat_parse_sas_commands+0x1fc>
   1d924:	ldr	r3, [sp, #36]	; 0x24
   1d928:	add	r3, r3, sl
   1d92c:	b	1d7e4 <readstat_parse_sas_commands+0x1fc>
   1d930:	ldrb	r3, [sl, #1]!
   1d934:	cmp	r3, #34	; 0x22
   1d938:	addls	pc, pc, r3, lsl #2
   1d93c:	b	1d850 <readstat_parse_sas_commands+0x268>
   1d940:	b	1d9cc <readstat_parse_sas_commands+0x3e4>
   1d944:	b	1d9d8 <readstat_parse_sas_commands+0x3f0>
   1d948:	b	1d9f8 <readstat_parse_sas_commands+0x410>
   1d94c:	b	1da44 <readstat_parse_sas_commands+0x45c>
   1d950:	b	1da54 <readstat_parse_sas_commands+0x46c>
   1d954:	b	1da60 <readstat_parse_sas_commands+0x478>
   1d958:	b	1da6c <readstat_parse_sas_commands+0x484>
   1d95c:	b	1da74 <readstat_parse_sas_commands+0x48c>
   1d960:	b	1da8c <readstat_parse_sas_commands+0x4a4>
   1d964:	b	1daa0 <readstat_parse_sas_commands+0x4b8>
   1d968:	b	1dab4 <readstat_parse_sas_commands+0x4cc>
   1d96c:	b	1dac8 <readstat_parse_sas_commands+0x4e0>
   1d970:	b	1db14 <readstat_parse_sas_commands+0x52c>
   1d974:	b	1db5c <readstat_parse_sas_commands+0x574>
   1d978:	b	1db88 <readstat_parse_sas_commands+0x5a0>
   1d97c:	b	1db98 <readstat_parse_sas_commands+0x5b0>
   1d980:	b	1dbb8 <readstat_parse_sas_commands+0x5d0>
   1d984:	b	1dbdc <readstat_parse_sas_commands+0x5f4>
   1d988:	b	1dc7c <readstat_parse_sas_commands+0x694>
   1d98c:	b	1dc84 <readstat_parse_sas_commands+0x69c>
   1d990:	b	1dc7c <readstat_parse_sas_commands+0x694>
   1d994:	b	1dc84 <readstat_parse_sas_commands+0x69c>
   1d998:	b	1dc68 <readstat_parse_sas_commands+0x680>
   1d99c:	b	1dc7c <readstat_parse_sas_commands+0x694>
   1d9a0:	b	1dc84 <readstat_parse_sas_commands+0x69c>
   1d9a4:	b	1dc90 <readstat_parse_sas_commands+0x6a8>
   1d9a8:	b	1dcac <readstat_parse_sas_commands+0x6c4>
   1d9ac:	b	1dcb8 <readstat_parse_sas_commands+0x6d0>
   1d9b0:	b	1dcc0 <readstat_parse_sas_commands+0x6d8>
   1d9b4:	b	1dcc8 <readstat_parse_sas_commands+0x6e0>
   1d9b8:	b	1dcc8 <readstat_parse_sas_commands+0x6e0>
   1d9bc:	b	1dcd0 <readstat_parse_sas_commands+0x6e8>
   1d9c0:	b	1dcd8 <readstat_parse_sas_commands+0x6f0>
   1d9c4:	b	1dce0 <readstat_parse_sas_commands+0x6f8>
   1d9c8:	b	1dcec <readstat_parse_sas_commands+0x704>
   1d9cc:	mov	r8, #0
   1d9d0:	mov	r9, #0
   1d9d4:	b	1d850 <readstat_parse_sas_commands+0x268>
   1d9d8:	mov	r1, #10
   1d9dc:	umull	r2, r3, r8, r1
   1d9e0:	mla	r3, r1, r9, r3
   1d9e4:	ldrb	r1, [r4]
   1d9e8:	sub	r1, r1, #48	; 0x30
   1d9ec:	adds	r8, r2, r1
   1d9f0:	adc	r9, r3, r1, asr #31
   1d9f4:	b	1d850 <readstat_parse_sas_commands+0x268>
   1d9f8:	ldrb	r2, [r4]
   1d9fc:	sub	r3, r2, #48	; 0x30
   1da00:	uxtb	r1, r3
   1da04:	cmp	r1, #9
   1da08:	bls	1da2c <readstat_parse_sas_commands+0x444>
   1da0c:	sub	r3, r2, #65	; 0x41
   1da10:	cmp	r3, #5
   1da14:	subls	r3, r2, #55	; 0x37
   1da18:	bls	1da2c <readstat_parse_sas_commands+0x444>
   1da1c:	sub	r3, r2, #97	; 0x61
   1da20:	cmp	r3, #5
   1da24:	subls	r3, r2, #87	; 0x57
   1da28:	movhi	r3, #0
   1da2c:	lsl	r1, r9, #4
   1da30:	lsl	r0, r8, #4
   1da34:	orr	r1, r1, r8, lsr #28
   1da38:	adds	r8, r0, r3
   1da3c:	adc	r9, r1, r3, asr #31
   1da40:	b	1d850 <readstat_parse_sas_commands+0x268>
   1da44:	sub	r3, r8, #1
   1da48:	mov	r6, #1
   1da4c:	str	r3, [sp, #60]	; 0x3c
   1da50:	b	1d850 <readstat_parse_sas_commands+0x268>
   1da54:	ldr	r3, [sp, #60]	; 0x3c
   1da58:	sub	r6, r8, r3
   1da5c:	b	1d850 <readstat_parse_sas_commands+0x268>
   1da60:	mov	r3, #0
   1da64:	str	r3, [sp, #68]	; 0x44
   1da68:	b	1d850 <readstat_parse_sas_commands+0x268>
   1da6c:	mov	r3, #5
   1da70:	b	1da64 <readstat_parse_sas_commands+0x47c>
   1da74:	ldr	r3, [sp, #40]	; 0x28
   1da78:	mov	r2, r7
   1da7c:	mov	r1, #1024	; 0x400
   1da80:	add	r0, sp, #256	; 0x100
   1da84:	bl	3e80 <readstat_copy@plt>
   1da88:	b	1d850 <readstat_parse_sas_commands+0x268>
   1da8c:	mov	r2, r7
   1da90:	mov	r1, #32
   1da94:	ldr	r3, [sp, #40]	; 0x28
   1da98:	add	r0, sp, #192	; 0xc0
   1da9c:	b	1da84 <readstat_parse_sas_commands+0x49c>
   1daa0:	mov	r2, r7
   1daa4:	mov	r1, #32
   1daa8:	ldr	r3, [sp, #40]	; 0x28
   1daac:	add	r0, sp, #224	; 0xe0
   1dab0:	b	1da84 <readstat_parse_sas_commands+0x49c>
   1dab4:	mov	r2, r7
   1dab8:	mov	r1, #32
   1dabc:	ldr	r3, [sp, #40]	; 0x28
   1dac0:	add	r0, sp, #160	; 0xa0
   1dac4:	b	1da84 <readstat_parse_sas_commands+0x49c>
   1dac8:	mov	r2, r7
   1dacc:	mov	r1, #32
   1dad0:	ldr	r3, [sp, #40]	; 0x28
   1dad4:	add	r0, sp, #128	; 0x80
   1dad8:	bl	43fc <readstat_copy_lower@plt>
   1dadc:	b	1d850 <readstat_parse_sas_commands+0x268>
   1dae0:	.word	0x00000000
   1dae4:	.word	0x7ff80000
   1dae8:	.word	0x00005706
   1daec:	.word	0x0000b4cc
   1daf0:	.word	0x000076a6
   1daf4:	.word	0x0000873a
   1daf8:	.word	0x000070b3
   1dafc:	.word	0x00007616
   1db00:	.word	0x0000c94e
   1db04:	.word	0x0000c94b
   1db08:	.word	0x0000757a
   1db0c:	.word	0x0000c4cd
   1db10:	.word	0x0000c457
   1db14:	add	r3, sp, #160	; 0xa0
   1db18:	ldr	r1, [sp, #116]	; 0x74
   1db1c:	mov	r0, r3
   1db20:	str	r3, [sp, #124]	; 0x7c
   1db24:	bl	403c <strcasecmp@plt>
   1db28:	cmp	r0, #0
   1db2c:	ldr	r1, [sp, #120]	; 0x78
   1db30:	ldr	r3, [sp, #124]	; 0x7c
   1db34:	streq	r8, [r5, #264]	; 0x108
   1db38:	mov	r0, r3
   1db3c:	bl	403c <strcasecmp@plt>
   1db40:	cmp	r0, #0
   1db44:	bne	1d850 <readstat_parse_sas_commands+0x268>
   1db48:	orrs	r3, r8, r9
   1db4c:	ldrbeq	r3, [sp, #256]	; 0x100
   1db50:	uxtbne	r3, r8
   1db54:	strb	r3, [r5, #272]	; 0x110
   1db58:	b	1d850 <readstat_parse_sas_commands+0x268>
   1db5c:	add	r1, sp, #128	; 0x80
   1db60:	mov	r0, r5
   1db64:	bl	40f0 <readstat_schema_find_or_create_entry@plt>
   1db68:	ldr	r3, [sp, #68]	; 0x44
   1db6c:	str	r3, [r0, #16]
   1db70:	ldr	r3, [sp, #64]	; 0x40
   1db74:	str	r3, [r0]
   1db78:	ldr	r3, [sp, #60]	; 0x3c
   1db7c:	str	r3, [r0, #4]
   1db80:	str	r6, [r0, #8]
   1db84:	b	1d850 <readstat_parse_sas_commands+0x268>
   1db88:	add	r1, sp, #128	; 0x80
   1db8c:	mov	r0, r5
   1db90:	bl	40f0 <readstat_schema_find_or_create_entry@plt>
   1db94:	b	1db80 <readstat_parse_sas_commands+0x598>
   1db98:	add	r1, sp, #128	; 0x80
   1db9c:	mov	r0, r5
   1dba0:	bl	40f0 <readstat_schema_find_or_create_entry@plt>
   1dba4:	mov	r3, #1024	; 0x400
   1dba8:	add	r2, sp, #256	; 0x100
   1dbac:	mov	r1, r3
   1dbb0:	add	r0, r0, #580	; 0x244
   1dbb4:	b	1da84 <readstat_parse_sas_commands+0x49c>
   1dbb8:	add	r1, sp, #128	; 0x80
   1dbbc:	mov	r0, r5
   1dbc0:	bl	40f0 <readstat_schema_find_or_create_entry@plt>
   1dbc4:	add	r0, r0, #2160	; 0x870
   1dbc8:	mov	r3, #32
   1dbcc:	add	r2, sp, #192	; 0xc0
   1dbd0:	mov	r1, r3
   1dbd4:	add	r0, r0, #8
   1dbd8:	b	1da84 <readstat_parse_sas_commands+0x49c>
   1dbdc:	add	r1, sp, #192	; 0xc0
   1dbe0:	strd	r8, [sp, #8]
   1dbe4:	ldr	r3, [sp, #88]	; 0x58
   1dbe8:	ldr	r0, [sp, #44]	; 0x2c
   1dbec:	ldr	r2, [sp, #48]	; 0x30
   1dbf0:	str	r3, [sp, #24]
   1dbf4:	add	r3, sp, #256	; 0x100
   1dbf8:	vldr	d0, [sp, #72]	; 0x48
   1dbfc:	str	r3, [sp, #20]
   1dc00:	add	r3, sp, #224	; 0xe0
   1dc04:	str	r3, [sp, #16]
   1dc08:	ldr	r3, [sp, #104]	; 0x68
   1dc0c:	str	r3, [sp]
   1dc10:	ldr	r3, [sp, #108]	; 0x6c
   1dc14:	str	r3, [sp, #4]
   1dc18:	bl	4060 <submit_value_label@plt>
   1dc1c:	subs	r3, r0, #0
   1dc20:	beq	1d850 <readstat_parse_sas_commands+0x268>
   1dc24:	str	r3, [sp, #36]	; 0x24
   1dc28:	ldr	r3, [sp, #44]	; 0x2c
   1dc2c:	ldr	r2, [r3, #32]
   1dc30:	ldr	r1, [r2, #4]
   1dc34:	ldr	r0, [r2, #20]
   1dc38:	blx	r1
   1dc3c:	mov	r0, fp
   1dc40:	bl	3ed4 <free@plt>
   1dc44:	ldr	r3, [sp, #36]	; 0x24
   1dc48:	cmp	r3, #0
   1dc4c:	beq	1d638 <readstat_parse_sas_commands+0x50>
   1dc50:	ldr	r2, [sp, #56]	; 0x38
   1dc54:	mov	r0, r5
   1dc58:	cmp	r2, #0
   1dc5c:	strne	r3, [r2]
   1dc60:	bl	3fd0 <readstat_schema_free@plt>
   1dc64:	b	1d634 <readstat_parse_sas_commands+0x4c>
   1dc68:	ldr	r3, [sp, #80]	; 0x50
   1dc6c:	str	r4, [sp, #96]	; 0x60
   1dc70:	add	r3, r3, #1
   1dc74:	str	r3, [sp, #80]	; 0x50
   1dc78:	b	1d850 <readstat_parse_sas_commands+0x268>
   1dc7c:	mov	r7, r4
   1dc80:	b	1d850 <readstat_parse_sas_commands+0x268>
   1dc84:	sub	r3, r4, r7
   1dc88:	str	r3, [sp, #40]	; 0x28
   1dc8c:	b	1d850 <readstat_parse_sas_commands+0x268>
   1dc90:	rsbs	r0, r8, #0
   1dc94:	rsc	r1, r9, #0
   1dc98:	bl	200a4 <__aeabi_ul2d>
   1dc9c:	mov	r3, #0
   1dca0:	strd	r0, [sp, #72]	; 0x48
   1dca4:	str	r3, [sp, #48]	; 0x30
   1dca8:	b	1d850 <readstat_parse_sas_commands+0x268>
   1dcac:	mov	r0, r8
   1dcb0:	mov	r1, r9
   1dcb4:	b	1dc98 <readstat_parse_sas_commands+0x6b0>
   1dcb8:	strd	r8, [sp, #104]	; 0x68
   1dcbc:	b	1d850 <readstat_parse_sas_commands+0x268>
   1dcc0:	mov	r3, #2
   1dcc4:	b	1dca4 <readstat_parse_sas_commands+0x6bc>
   1dcc8:	mov	r3, #1
   1dccc:	b	1dca4 <readstat_parse_sas_commands+0x6bc>
   1dcd0:	mov	r3, #3
   1dcd4:	b	1dca4 <readstat_parse_sas_commands+0x6bc>
   1dcd8:	mov	r6, r8
   1dcdc:	b	1d850 <readstat_parse_sas_commands+0x268>
   1dce0:	sub	r3, r8, #1
   1dce4:	str	r3, [sp, #64]	; 0x40
   1dce8:	b	1d850 <readstat_parse_sas_commands+0x268>
   1dcec:	mov	r3, #0
   1dcf0:	b	1dce4 <readstat_parse_sas_commands+0x6fc>
   1dcf4:	ldrb	r3, [r4]
   1dcf8:	mov	r1, #1024	; 0x400
   1dcfc:	add	r0, sp, #1280	; 0x500
   1dd00:	ldr	r2, [pc, #-508]	; 1db0c <readstat_parse_sas_commands+0x524>
   1dd04:	str	r3, [sp, #4]
   1dd08:	ldr	r3, [sp, #96]	; 0x60
   1dd0c:	add	r2, pc, r2
   1dd10:	sub	r4, r4, r3
   1dd14:	ldr	r3, [sp, #80]	; 0x50
   1dd18:	add	r4, r4, #1
   1dd1c:	str	r4, [sp]
   1dd20:	add	r3, r3, #1
   1dd24:	bl	4294 <snprintf@plt>
   1dd28:	b	1dd48 <readstat_parse_sas_commands+0x760>
   1dd2c:	ldr	r3, [sp, #84]	; 0x54
   1dd30:	cmp	r4, r3
   1dd34:	bne	1dcf4 <readstat_parse_sas_commands+0x70c>
   1dd38:	ldr	r1, [pc, #-560]	; 1db10 <readstat_parse_sas_commands+0x528>
   1dd3c:	add	r0, sp, #1280	; 0x500
   1dd40:	add	r1, pc, r1
   1dd44:	bl	40b4 <strcpy@plt>
   1dd48:	ldr	r3, [sp, #44]	; 0x2c
   1dd4c:	ldr	r3, [r3, #24]
   1dd50:	cmp	r3, #0
   1dd54:	beq	1dd64 <readstat_parse_sas_commands+0x77c>
   1dd58:	add	r0, sp, #1280	; 0x500
   1dd5c:	ldr	r1, [sp, #88]	; 0x58
   1dd60:	blx	r3
   1dd64:	mov	r3, #5
   1dd68:	b	1dc24 <readstat_parse_sas_commands+0x63c>
   1dd6c:	andeq	r0, r0, r0

0001dd70 <readstat_parse_spss_commands>:
   1dd70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dd74:	sub	sp, sp, #2288	; 0x8f0
   1dd78:	mov	r6, r0
   1dd7c:	sub	sp, sp, #4
   1dd80:	mov	r0, r1
   1dd84:	str	r3, [sp, #68]	; 0x44
   1dd88:	ldr	r3, [r6, #32]
   1dd8c:	str	r2, [sp, #96]	; 0x60
   1dd90:	ldr	r2, [r3]
   1dd94:	ldr	r1, [r3, #20]
   1dd98:	blx	r2
   1dd9c:	cmn	r0, #1
   1dda0:	bne	1ddcc <readstat_parse_spss_commands+0x5c>
   1dda4:	ldr	r3, [sp, #68]	; 0x44
   1dda8:	cmp	r3, #0
   1ddac:	ldrne	r2, [sp, #68]	; 0x44
   1ddb0:	movne	r3, #1
   1ddb4:	strne	r3, [r2]
   1ddb8:	mov	r5, #0
   1ddbc:	mov	r0, r5
   1ddc0:	add	sp, sp, #2288	; 0x8f0
   1ddc4:	add	sp, sp, #4
   1ddc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ddcc:	ldr	r3, [r6, #32]
   1ddd0:	mov	r1, #2
   1ddd4:	mov	r0, #0
   1ddd8:	ldr	r4, [r3, #8]
   1dddc:	ldr	r2, [r3, #20]
   1dde0:	blx	r4
   1dde4:	cmn	r0, #1
   1dde8:	mov	r4, r0
   1ddec:	beq	1e4fc <readstat_parse_spss_commands+0x78c>
   1ddf0:	ldr	r3, [r6, #32]
   1ddf4:	mov	r1, #0
   1ddf8:	mov	r0, r1
   1ddfc:	ldr	r5, [r3, #8]
   1de00:	ldr	r2, [r3, #20]
   1de04:	blx	r5
   1de08:	mov	r0, r4
   1de0c:	bl	412c <malloc@plt>
   1de10:	ldr	r3, [r6, #32]
   1de14:	mov	r1, r4
   1de18:	str	r0, [sp, #52]	; 0x34
   1de1c:	ldr	r5, [r3, #12]
   1de20:	ldr	r2, [r3, #20]
   1de24:	blx	r5
   1de28:	ldr	r3, [sp, #52]	; 0x34
   1de2c:	mov	r1, #280	; 0x118
   1de30:	mov	r0, #1
   1de34:	add	r3, r3, r4
   1de38:	str	r3, [sp, #92]	; 0x5c
   1de3c:	bl	3d6c <calloc@plt>
   1de40:	subs	r5, r0, #0
   1de44:	moveq	r8, #3
   1de48:	beq	1e390 <readstat_parse_spss_commands+0x620>
   1de4c:	mov	r3, #1
   1de50:	ldr	r2, [sp, #92]	; 0x5c
   1de54:	str	r3, [r5, #256]	; 0x100
   1de58:	ldr	r3, [sp, #52]	; 0x34
   1de5c:	cmp	r3, r2
   1de60:	beq	1e54c <readstat_parse_spss_commands+0x7dc>
   1de64:	mov	r4, r3
   1de68:	mov	r2, #0
   1de6c:	str	r3, [sp, #104]	; 0x68
   1de70:	mov	r3, #0
   1de74:	vldr	d7, [pc, #980]	; 1e250 <readstat_parse_spss_commands+0x4e0>
   1de78:	mov	r7, #0
   1de7c:	mov	fp, #5
   1de80:	mov	sl, #628	; 0x274
   1de84:	strd	r2, [sp, #32]
   1de88:	ldr	r3, [sp, #32]
   1de8c:	str	r7, [sp, #40]	; 0x28
   1de90:	str	r7, [sp, #44]	; 0x2c
   1de94:	str	r7, [sp, #48]	; 0x30
   1de98:	str	r7, [sp, #56]	; 0x38
   1de9c:	str	r7, [sp, #60]	; 0x3c
   1dea0:	str	r3, [sp, #116]	; 0x74
   1dea4:	ldr	r3, [sp, #36]	; 0x24
   1dea8:	str	r7, [sp, #64]	; 0x40
   1deac:	str	r7, [sp, #72]	; 0x48
   1deb0:	vstr	d7, [sp, #80]	; 0x50
   1deb4:	str	r7, [sp, #88]	; 0x58
   1deb8:	str	r3, [sp, #120]	; 0x78
   1debc:	ldr	r3, [pc, #916]	; 1e258 <readstat_parse_spss_commands+0x4e8>
   1dec0:	add	r3, pc, r3
   1dec4:	str	r3, [sp, #108]	; 0x6c
   1dec8:	add	r3, r3, #3024	; 0xbd0
   1decc:	add	r3, r3, #12
   1ded0:	str	r3, [sp, #100]	; 0x64
   1ded4:	ldr	r3, [pc, #896]	; 1e25c <readstat_parse_spss_commands+0x4ec>
   1ded8:	add	r3, pc, r3
   1dedc:	str	r3, [sp, #112]	; 0x70
   1dee0:	ldr	r3, [sp, #100]	; 0x64
   1dee4:	lsl	r1, sl, #1
   1dee8:	ldrsh	r2, [r3, r1]
   1deec:	ldr	r3, [sp, #108]	; 0x6c
   1def0:	add	r2, r3, r2
   1def4:	ldr	r3, [sp, #112]	; 0x70
   1def8:	sub	r3, r3, #3872	; 0xf20
   1defc:	sub	r3, r3, #12
   1df00:	ldrsh	r3, [r3, r1]
   1df04:	ldr	r1, [sp, #112]	; 0x70
   1df08:	add	r1, r1, sl
   1df0c:	ldrb	lr, [r1, #-2620]	; 0xfffff5c4
   1df10:	cmp	lr, #0
   1df14:	beq	1e01c <readstat_parse_spss_commands+0x2ac>
   1df18:	sub	ip, lr, #1
   1df1c:	mov	r0, r2
   1df20:	add	ip, r2, ip
   1df24:	cmp	r0, ip
   1df28:	bhi	1e014 <readstat_parse_spss_commands+0x2a4>
   1df2c:	sub	r8, ip, r0
   1df30:	ldrb	r9, [r4]
   1df34:	add	r1, r0, r8, asr #1
   1df38:	ldrb	r8, [r0, r8, asr #1]
   1df3c:	cmp	r9, r8
   1df40:	subcc	ip, r1, #1
   1df44:	bcc	1df24 <readstat_parse_spss_commands+0x1b4>
   1df48:	addhi	r0, r1, #1
   1df4c:	bhi	1df24 <readstat_parse_spss_commands+0x1b4>
   1df50:	sub	r2, r1, r2
   1df54:	add	r3, r3, r2
   1df58:	ldr	r1, [pc, #768]	; 1e260 <readstat_parse_spss_commands+0x4f0>
   1df5c:	lsl	r2, r3, #1
   1df60:	add	r1, pc, r1
   1df64:	ldrsh	sl, [r1, r2]
   1df68:	ldr	r2, [pc, #756]	; 1e264 <readstat_parse_spss_commands+0x4f4>
   1df6c:	add	r2, pc, r2
   1df70:	add	r3, r2, r3
   1df74:	ldrb	r1, [r3, #-1356]	; 0xfffffab4
   1df78:	cmp	r1, #0
   1df7c:	beq	1dfd0 <readstat_parse_spss_commands+0x260>
   1df80:	add	r3, r2, #1920	; 0x780
   1df84:	add	r3, r3, #10
   1df88:	add	r2, r3, r1
   1df8c:	ldrb	r3, [r3, r1]
   1df90:	str	r2, [sp, #76]	; 0x4c
   1df94:	add	r3, r3, r2
   1df98:	str	r3, [sp, #124]	; 0x7c
   1df9c:	ldr	r3, [pc, #708]	; 1e268 <readstat_parse_spss_commands+0x4f8>
   1dfa0:	add	r3, pc, r3
   1dfa4:	str	r3, [sp, #132]	; 0x84
   1dfa8:	ldr	r3, [pc, #700]	; 1e26c <readstat_parse_spss_commands+0x4fc>
   1dfac:	add	r3, pc, r3
   1dfb0:	str	r3, [sp, #136]	; 0x88
   1dfb4:	ldr	r3, [pc, #692]	; 1e270 <readstat_parse_spss_commands+0x500>
   1dfb8:	add	r3, pc, r3
   1dfbc:	str	r3, [sp, #140]	; 0x8c
   1dfc0:	ldr	r2, [sp, #76]	; 0x4c
   1dfc4:	ldr	r3, [sp, #124]	; 0x7c
   1dfc8:	cmp	r3, r2
   1dfcc:	bne	1e090 <readstat_parse_spss_commands+0x320>
   1dfd0:	cmp	sl, #0
   1dfd4:	beq	1e510 <readstat_parse_spss_commands+0x7a0>
   1dfd8:	ldr	r3, [sp, #92]	; 0x5c
   1dfdc:	add	r4, r4, #1
   1dfe0:	cmp	r3, r4
   1dfe4:	bne	1dee0 <readstat_parse_spss_commands+0x170>
   1dfe8:	ldr	r2, [pc, #644]	; 1e274 <readstat_parse_spss_commands+0x504>
   1dfec:	add	r8, sp, #144	; 0x90
   1dff0:	add	r2, pc, r2
   1dff4:	add	r3, r2, #1920	; 0x780
   1dff8:	add	r2, r2, sl
   1dffc:	ldrb	r2, [r2, #2093]	; 0x82d
   1e000:	add	r3, r3, #10
   1e004:	add	r4, r3, r2
   1e008:	ldrb	r7, [r3, r2]
   1e00c:	add	r4, r4, #1
   1e010:	b	1e49c <readstat_parse_spss_commands+0x72c>
   1e014:	add	r2, r2, lr
   1e018:	add	r3, r3, lr
   1e01c:	ldr	r1, [pc, #596]	; 1e278 <readstat_parse_spss_commands+0x508>
   1e020:	add	r1, pc, r1
   1e024:	add	r1, r1, sl
   1e028:	ldrb	r8, [r1, #-1988]	; 0xfffff83c
   1e02c:	cmp	r8, #0
   1e030:	beq	1df58 <readstat_parse_spss_commands+0x1e8>
   1e034:	add	lr, r2, r8, lsl #1
   1e038:	mov	ip, r2
   1e03c:	sub	lr, lr, #2
   1e040:	cmp	ip, lr
   1e044:	bhi	1e088 <readstat_parse_spss_commands+0x318>
   1e048:	sub	r0, lr, ip
   1e04c:	ldrb	sl, [r4]
   1e050:	asr	r0, r0, #1
   1e054:	bic	r0, r0, #1
   1e058:	add	r1, ip, r0
   1e05c:	ldrb	r0, [ip, r0]
   1e060:	cmp	r0, sl
   1e064:	subhi	lr, r1, #2
   1e068:	bhi	1e040 <readstat_parse_spss_commands+0x2d0>
   1e06c:	ldrb	r0, [r1, #1]
   1e070:	cmp	r0, sl
   1e074:	addcc	ip, r1, #2
   1e078:	bcc	1e040 <readstat_parse_spss_commands+0x2d0>
   1e07c:	sub	r2, r1, r2
   1e080:	add	r3, r3, r2, asr #1
   1e084:	b	1df58 <readstat_parse_spss_commands+0x1e8>
   1e088:	add	r3, r3, r8
   1e08c:	b	1df58 <readstat_parse_spss_commands+0x1e8>
   1e090:	ldr	r2, [sp, #76]	; 0x4c
   1e094:	ldrb	r3, [r2, #1]!
   1e098:	str	r2, [sp, #76]	; 0x4c
   1e09c:	cmp	r3, #35	; 0x23
   1e0a0:	addls	pc, pc, r3, lsl #2
   1e0a4:	b	1dfc0 <readstat_parse_spss_commands+0x250>
   1e0a8:	b	1e138 <readstat_parse_spss_commands+0x3c8>
   1e0ac:	b	1e148 <readstat_parse_spss_commands+0x3d8>
   1e0b0:	b	1e174 <readstat_parse_spss_commands+0x404>
   1e0b4:	b	1e18c <readstat_parse_spss_commands+0x41c>
   1e0b8:	b	1e19c <readstat_parse_spss_commands+0x42c>
   1e0bc:	b	1e1b0 <readstat_parse_spss_commands+0x440>
   1e0c0:	b	1e1c0 <readstat_parse_spss_commands+0x450>
   1e0c4:	b	1e1d4 <readstat_parse_spss_commands+0x464>
   1e0c8:	b	1e1e4 <readstat_parse_spss_commands+0x474>
   1e0cc:	b	1e210 <readstat_parse_spss_commands+0x4a0>
   1e0d0:	b	1e230 <readstat_parse_spss_commands+0x4c0>
   1e0d4:	b	1e23c <readstat_parse_spss_commands+0x4cc>
   1e0d8:	b	1e288 <readstat_parse_spss_commands+0x518>
   1e0dc:	b	1e2c4 <readstat_parse_spss_commands+0x554>
   1e0e0:	b	1e32c <readstat_parse_spss_commands+0x5bc>
   1e0e4:	b	1e3dc <readstat_parse_spss_commands+0x66c>
   1e0e8:	b	1e3e4 <readstat_parse_spss_commands+0x674>
   1e0ec:	b	1e3dc <readstat_parse_spss_commands+0x66c>
   1e0f0:	b	1e3e4 <readstat_parse_spss_commands+0x674>
   1e0f4:	b	1e3c8 <readstat_parse_spss_commands+0x658>
   1e0f8:	b	1e3dc <readstat_parse_spss_commands+0x66c>
   1e0fc:	b	1e3e4 <readstat_parse_spss_commands+0x674>
   1e100:	b	1e3f4 <readstat_parse_spss_commands+0x684>
   1e104:	b	1e3f4 <readstat_parse_spss_commands+0x684>
   1e108:	b	1e40c <readstat_parse_spss_commands+0x69c>
   1e10c:	b	1e40c <readstat_parse_spss_commands+0x69c>
   1e110:	b	1e3f4 <readstat_parse_spss_commands+0x684>
   1e114:	b	1e3fc <readstat_parse_spss_commands+0x68c>
   1e118:	b	1e40c <readstat_parse_spss_commands+0x69c>
   1e11c:	b	1e40c <readstat_parse_spss_commands+0x69c>
   1e120:	b	1e414 <readstat_parse_spss_commands+0x6a4>
   1e124:	b	1e420 <readstat_parse_spss_commands+0x6b0>
   1e128:	b	1e43c <readstat_parse_spss_commands+0x6cc>
   1e12c:	b	1e444 <readstat_parse_spss_commands+0x6d4>
   1e130:	b	1e458 <readstat_parse_spss_commands+0x6e8>
   1e134:	b	1e460 <readstat_parse_spss_commands+0x6f0>
   1e138:	mov	r2, #0
   1e13c:	mov	r3, #0
   1e140:	strd	r2, [sp, #32]
   1e144:	b	1dfc0 <readstat_parse_spss_commands+0x250>
   1e148:	ldr	r3, [sp, #32]
   1e14c:	mov	r1, #10
   1e150:	ldr	r0, [sp, #36]	; 0x24
   1e154:	umull	r2, r3, r3, r1
   1e158:	mla	r3, r1, r0, r3
   1e15c:	ldrb	r1, [r4]
   1e160:	sub	r1, r1, #48	; 0x30
   1e164:	adds	r8, r2, r1
   1e168:	adc	r9, r3, r1, asr #31
   1e16c:	strd	r8, [sp, #32]
   1e170:	b	1dfc0 <readstat_parse_spss_commands+0x250>
   1e174:	ldr	r3, [sp, #32]
   1e178:	sub	r3, r3, #1
   1e17c:	str	r3, [sp, #64]	; 0x40
   1e180:	mov	r3, #1
   1e184:	str	r3, [sp, #60]	; 0x3c
   1e188:	b	1dfc0 <readstat_parse_spss_commands+0x250>
   1e18c:	ldr	r3, [sp, #32]
   1e190:	ldr	r2, [sp, #64]	; 0x40
   1e194:	sub	r3, r3, r2
   1e198:	b	1e184 <readstat_parse_spss_commands+0x414>
   1e19c:	ldrd	r2, [sp, #40]	; 0x28
   1e1a0:	mov	r1, #1024	; 0x400
   1e1a4:	add	r0, sp, #240	; 0xf0
   1e1a8:	bl	4048 <readstat_copy_quoted@plt>
   1e1ac:	b	1dfc0 <readstat_parse_spss_commands+0x250>
   1e1b0:	mov	r1, #32
   1e1b4:	add	r0, sp, #208	; 0xd0
   1e1b8:	ldrd	r2, [sp, #40]	; 0x28
   1e1bc:	b	1e1a8 <readstat_parse_spss_commands+0x438>
   1e1c0:	ldrd	r2, [sp, #40]	; 0x28
   1e1c4:	mov	r1, #32
   1e1c8:	add	r0, sp, #144	; 0x90
   1e1cc:	bl	3e80 <readstat_copy@plt>
   1e1d0:	b	1dfc0 <readstat_parse_spss_commands+0x250>
   1e1d4:	mov	r1, #32
   1e1d8:	add	r0, sp, #176	; 0xb0
   1e1dc:	ldrd	r2, [sp, #40]	; 0x28
   1e1e0:	b	1e1cc <readstat_parse_spss_commands+0x45c>
   1e1e4:	add	r1, sp, #144	; 0x90
   1e1e8:	mov	r0, r5
   1e1ec:	bl	40f0 <readstat_schema_find_or_create_entry@plt>
   1e1f0:	ldr	r3, [sp, #72]	; 0x48
   1e1f4:	str	r3, [r0]
   1e1f8:	ldr	r3, [sp, #64]	; 0x40
   1e1fc:	str	fp, [r0, #16]
   1e200:	str	r3, [r0, #4]
   1e204:	ldr	r3, [sp, #60]	; 0x3c
   1e208:	str	r3, [r0, #8]
   1e20c:	b	1dfc0 <readstat_parse_spss_commands+0x250>
   1e210:	add	r1, sp, #144	; 0x90
   1e214:	mov	r0, r5
   1e218:	bl	40f0 <readstat_schema_find_or_create_entry@plt>
   1e21c:	mov	r3, #1024	; 0x400
   1e220:	add	r2, sp, #240	; 0xf0
   1e224:	mov	r1, r3
   1e228:	add	r0, r0, #580	; 0x244
   1e22c:	b	1e1cc <readstat_parse_spss_commands+0x45c>
   1e230:	mov	r3, #0
   1e234:	str	r3, [sp, #56]	; 0x38
   1e238:	b	1dfc0 <readstat_parse_spss_commands+0x250>
   1e23c:	ldr	r3, [sp, #56]	; 0x38
   1e240:	cmp	r3, #1024	; 0x400
   1e244:	bge	1dfc0 <readstat_parse_spss_commands+0x250>
   1e248:	add	r3, r3, #1
   1e24c:	b	1e234 <readstat_parse_spss_commands+0x4c4>
   1e250:	.word	0x00000000
   1e254:	.word	0x7ff80000
   1e258:	.word	0x0000c358
   1e25c:	.word	0x0000e338
   1e260:	.word	0x0000ed56
   1e264:	.word	0x0000e2a4
   1e268:	.word	0x0000337b
   1e26c:	.word	0x0000336f
   1e270:	.word	0x000106aa
   1e274:	.word	0x0000e220
   1e278:	.word	0x0000e1f0
   1e27c:	.word	0x000103c4
   1e280:	.word	0x000101de
   1e284:	.word	0x00010153
   1e288:	add	r8, sp, #176	; 0xb0
   1e28c:	ldr	r1, [sp, #140]	; 0x8c
   1e290:	mov	r0, r8
   1e294:	bl	403c <strcasecmp@plt>
   1e298:	cmp	r0, #0
   1e29c:	ldr	r1, [pc, #-40]	; 1e27c <readstat_parse_spss_commands+0x50c>
   1e2a0:	mov	r0, r8
   1e2a4:	ldreq	r3, [sp, #32]
   1e2a8:	add	r1, pc, r1
   1e2ac:	streq	r3, [r5, #264]	; 0x108
   1e2b0:	bl	403c <strcasecmp@plt>
   1e2b4:	cmp	r0, #0
   1e2b8:	ldrbeq	r3, [sp, #240]	; 0xf0
   1e2bc:	strbeq	r3, [r5, #272]	; 0x110
   1e2c0:	b	1dfc0 <readstat_parse_spss_commands+0x250>
   1e2c4:	add	r3, r7, #1
   1e2c8:	mov	r1, #256	; 0x100
   1e2cc:	ldr	r2, [sp, #136]	; 0x88
   1e2d0:	mov	r9, r3
   1e2d4:	mov	r3, r7
   1e2d8:	add	r7, sp, #1264	; 0x4f0
   1e2dc:	mov	r8, #0
   1e2e0:	mov	r0, r7
   1e2e4:	bl	4294 <snprintf@plt>
   1e2e8:	add	r3, sp, #144	; 0x90
   1e2ec:	str	r3, [sp, #128]	; 0x80
   1e2f0:	ldr	r3, [sp, #56]	; 0x38
   1e2f4:	cmp	r8, r3
   1e2f8:	moveq	r7, r9
   1e2fc:	beq	1dfc0 <readstat_parse_spss_commands+0x250>
   1e300:	mov	r0, r5
   1e304:	ldr	r1, [sp, #128]	; 0x80
   1e308:	add	r8, r8, #1
   1e30c:	bl	40f0 <readstat_schema_find_or_create_entry@plt>
   1e310:	add	r0, r0, #2160	; 0x870
   1e314:	mov	r3, #256	; 0x100
   1e318:	mov	r2, r7
   1e31c:	mov	r1, #32
   1e320:	add	r0, r0, #8
   1e324:	bl	3e80 <readstat_copy@plt>
   1e328:	b	1e2f0 <readstat_parse_spss_commands+0x580>
   1e32c:	add	r8, sp, #1264	; 0x4f0
   1e330:	mov	r3, r7
   1e334:	ldr	r2, [sp, #132]	; 0x84
   1e338:	mov	r1, #256	; 0x100
   1e33c:	mov	r0, r8
   1e340:	bl	4294 <snprintf@plt>
   1e344:	mov	r1, r8
   1e348:	mov	r0, r6
   1e34c:	vldr	d0, [sp, #80]	; 0x50
   1e350:	ldr	r3, [sp, #96]	; 0x60
   1e354:	str	r3, [sp, #24]
   1e358:	add	r3, sp, #240	; 0xf0
   1e35c:	str	r3, [sp, #20]
   1e360:	add	r3, sp, #208	; 0xd0
   1e364:	str	r3, [sp, #16]
   1e368:	ldrd	r2, [sp, #32]
   1e36c:	strd	r2, [sp, #8]
   1e370:	ldr	r2, [sp, #48]	; 0x30
   1e374:	ldr	r3, [sp, #116]	; 0x74
   1e378:	str	r3, [sp]
   1e37c:	ldr	r3, [sp, #120]	; 0x78
   1e380:	str	r3, [sp, #4]
   1e384:	bl	4060 <submit_value_label@plt>
   1e388:	subs	r8, r0, #0
   1e38c:	beq	1dfc0 <readstat_parse_spss_commands+0x250>
   1e390:	ldr	r3, [r6, #32]
   1e394:	ldr	r2, [r3, #4]
   1e398:	ldr	r0, [r3, #20]
   1e39c:	blx	r2
   1e3a0:	ldr	r0, [sp, #52]	; 0x34
   1e3a4:	bl	3ed4 <free@plt>
   1e3a8:	cmp	r8, #0
   1e3ac:	beq	1ddbc <readstat_parse_spss_commands+0x4c>
   1e3b0:	ldr	r3, [sp, #68]	; 0x44
   1e3b4:	mov	r0, r5
   1e3b8:	cmp	r3, #0
   1e3bc:	strne	r8, [r3]
   1e3c0:	bl	3fd0 <readstat_schema_free@plt>
   1e3c4:	b	1ddb8 <readstat_parse_spss_commands+0x48>
   1e3c8:	ldr	r3, [sp, #88]	; 0x58
   1e3cc:	str	r4, [sp, #104]	; 0x68
   1e3d0:	add	r3, r3, #1
   1e3d4:	str	r3, [sp, #88]	; 0x58
   1e3d8:	b	1dfc0 <readstat_parse_spss_commands+0x250>
   1e3dc:	str	r4, [sp, #40]	; 0x28
   1e3e0:	b	1dfc0 <readstat_parse_spss_commands+0x250>
   1e3e4:	ldr	r3, [sp, #40]	; 0x28
   1e3e8:	sub	r3, r4, r3
   1e3ec:	str	r3, [sp, #44]	; 0x2c
   1e3f0:	b	1dfc0 <readstat_parse_spss_commands+0x250>
   1e3f4:	mov	fp, #0
   1e3f8:	b	1dfc0 <readstat_parse_spss_commands+0x250>
   1e3fc:	ldr	r3, [sp, #32]
   1e400:	sub	r3, r3, #1
   1e404:	str	r3, [sp, #72]	; 0x48
   1e408:	b	1dfc0 <readstat_parse_spss_commands+0x250>
   1e40c:	mov	fp, #5
   1e410:	b	1dfc0 <readstat_parse_spss_commands+0x250>
   1e414:	mvn	r3, #0
   1e418:	str	r3, [sp, #48]	; 0x30
   1e41c:	b	1dfc0 <readstat_parse_spss_commands+0x250>
   1e420:	ldrd	r0, [sp, #32]
   1e424:	rsbs	r0, r0, #0
   1e428:	rsc	r1, r1, #0
   1e42c:	bl	200a4 <__aeabi_ul2d>
   1e430:	mov	r3, #0
   1e434:	strd	r0, [sp, #80]	; 0x50
   1e438:	b	1e418 <readstat_parse_spss_commands+0x6a8>
   1e43c:	ldrd	r0, [sp, #32]
   1e440:	b	1e42c <readstat_parse_spss_commands+0x6bc>
   1e444:	ldr	r3, [sp, #32]
   1e448:	str	r3, [sp, #116]	; 0x74
   1e44c:	ldr	r3, [sp, #36]	; 0x24
   1e450:	str	r3, [sp, #120]	; 0x78
   1e454:	b	1dfc0 <readstat_parse_spss_commands+0x250>
   1e458:	mov	r3, #2
   1e45c:	b	1e418 <readstat_parse_spss_commands+0x6a8>
   1e460:	mov	r3, #1
   1e464:	b	1e418 <readstat_parse_spss_commands+0x6a8>
   1e468:	ldrb	r3, [r4], #1
   1e46c:	cmp	r3, #8
   1e470:	bne	1e49c <readstat_parse_spss_commands+0x72c>
   1e474:	mov	r1, r8
   1e478:	mov	r0, r5
   1e47c:	bl	40f0 <readstat_schema_find_or_create_entry@plt>
   1e480:	ldr	r3, [sp, #72]	; 0x48
   1e484:	str	r3, [r0]
   1e488:	ldr	r3, [sp, #64]	; 0x40
   1e48c:	str	fp, [r0, #16]
   1e490:	str	r3, [r0, #4]
   1e494:	ldr	r3, [sp, #60]	; 0x3c
   1e498:	str	r3, [r0, #8]
   1e49c:	subs	r7, r7, #1
   1e4a0:	bcs	1e468 <readstat_parse_spss_commands+0x6f8>
   1e4a4:	cmp	sl, #628	; 0x274
   1e4a8:	blt	1e51c <readstat_parse_spss_commands+0x7ac>
   1e4ac:	mov	r1, r5
   1e4b0:	mov	r0, r6
   1e4b4:	ldr	r2, [sp, #96]	; 0x60
   1e4b8:	bl	3f4c <submit_columns@plt>
   1e4bc:	mov	r8, r0
   1e4c0:	b	1e390 <readstat_parse_spss_commands+0x620>
   1e4c4:	ldrb	r3, [r4]
   1e4c8:	mov	r1, #1024	; 0x400
   1e4cc:	add	r0, sp, #1264	; 0x4f0
   1e4d0:	ldr	r2, [pc, #-600]	; 1e280 <readstat_parse_spss_commands+0x510>
   1e4d4:	str	r3, [sp, #4]
   1e4d8:	ldr	r3, [sp, #104]	; 0x68
   1e4dc:	add	r2, pc, r2
   1e4e0:	sub	r4, r4, r3
   1e4e4:	ldr	r3, [sp, #88]	; 0x58
   1e4e8:	add	r4, r4, #1
   1e4ec:	str	r4, [sp]
   1e4f0:	add	r3, r3, #1
   1e4f4:	bl	4294 <snprintf@plt>
   1e4f8:	b	1e52c <readstat_parse_spss_commands+0x7bc>
   1e4fc:	mov	r3, #0
   1e500:	mov	r8, #15
   1e504:	mov	r5, r3
   1e508:	str	r3, [sp, #52]	; 0x34
   1e50c:	b	1e390 <readstat_parse_spss_commands+0x620>
   1e510:	ldr	r3, [sp, #92]	; 0x5c
   1e514:	cmp	r4, r3
   1e518:	bne	1e4c4 <readstat_parse_spss_commands+0x754>
   1e51c:	ldr	r1, [pc, #-672]	; 1e284 <readstat_parse_spss_commands+0x514>
   1e520:	add	r0, sp, #1264	; 0x4f0
   1e524:	add	r1, pc, r1
   1e528:	bl	40b4 <strcpy@plt>
   1e52c:	ldr	r3, [r6, #24]
   1e530:	cmp	r3, #0
   1e534:	beq	1e544 <readstat_parse_spss_commands+0x7d4>
   1e538:	add	r0, sp, #1264	; 0x4f0
   1e53c:	ldr	r1, [sp, #96]	; 0x60
   1e540:	blx	r3
   1e544:	mov	r8, #5
   1e548:	b	1e390 <readstat_parse_spss_commands+0x620>
   1e54c:	mov	r3, #0
   1e550:	mov	fp, #5
   1e554:	mov	sl, #628	; 0x274
   1e558:	str	r3, [sp, #60]	; 0x3c
   1e55c:	str	r3, [sp, #64]	; 0x40
   1e560:	str	r3, [sp, #72]	; 0x48
   1e564:	b	1dfe8 <readstat_parse_spss_commands+0x278>

0001e568 <readstat_schema_free>:
   1e568:	push	{r4, lr}
   1e56c:	subs	r4, r0, #0
   1e570:	popeq	{r4, pc}
   1e574:	ldr	r0, [r4, #276]	; 0x114
   1e578:	bl	3ed4 <free@plt>
   1e57c:	mov	r0, r4
   1e580:	pop	{r4, lr}
   1e584:	b	3ed4 <free@plt>

0001e588 <readstat_schema_find_or_create_entry>:
   1e588:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e58c:	mov	r5, r0
   1e590:	mov	r7, r1
   1e594:	mov	r6, #0
   1e598:	mov	sl, #2208	; 0x8a0
   1e59c:	ldr	r9, [r0, #268]	; 0x10c
   1e5a0:	ldr	r8, [r0, #276]	; 0x114
   1e5a4:	cmp	r9, r6
   1e5a8:	bgt	1e610 <readstat_schema_find_or_create_entry+0x88>
   1e5ac:	mov	r6, #2208	; 0x8a0
   1e5b0:	mov	r0, r8
   1e5b4:	mla	r1, r9, r6, r6
   1e5b8:	bl	400c <realloc@plt>
   1e5bc:	ldr	r4, [r5, #268]	; 0x10c
   1e5c0:	mov	r2, r6
   1e5c4:	mov	r1, #0
   1e5c8:	str	r0, [r5, #276]	; 0x114
   1e5cc:	mla	r4, r6, r4, r0
   1e5d0:	mov	r0, r4
   1e5d4:	bl	42b8 <memset@plt>
   1e5d8:	mov	r0, r7
   1e5dc:	bl	421c <strlen@plt>
   1e5e0:	mov	r3, r0
   1e5e4:	mov	r2, r7
   1e5e8:	mov	r1, #300	; 0x12c
   1e5ec:	add	r0, r4, #24
   1e5f0:	bl	3e80 <readstat_copy@plt>
   1e5f4:	mov	r3, #46	; 0x2e
   1e5f8:	strb	r3, [r4, #2200]	; 0x898
   1e5fc:	ldr	r3, [r5, #268]	; 0x10c
   1e600:	add	r2, r3, #1
   1e604:	str	r2, [r5, #268]	; 0x10c
   1e608:	str	r3, [r4, #20]
   1e60c:	b	1e634 <readstat_schema_find_or_create_entry+0xac>
   1e610:	mla	r4, sl, r6, r8
   1e614:	mov	r1, r7
   1e618:	add	r0, r4, #24
   1e61c:	bl	3e14 <strcmp@plt>
   1e620:	cmp	r0, #0
   1e624:	addne	r6, r6, #1
   1e628:	bne	1e5a4 <readstat_schema_find_or_create_entry+0x1c>
   1e62c:	cmp	r4, #0
   1e630:	beq	1e5ac <readstat_schema_find_or_create_entry+0x24>
   1e634:	mov	r0, r4
   1e638:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

0001e63c <readstat_parse_stata_dictionary>:
   1e63c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e640:	sub	sp, sp, #3312	; 0xcf0
   1e644:	mov	r9, r0
   1e648:	sub	sp, sp, #4
   1e64c:	mov	r0, r1
   1e650:	str	r3, [sp, #28]
   1e654:	ldr	r3, [r9, #32]
   1e658:	str	r2, [sp, #68]	; 0x44
   1e65c:	ldr	r2, [r3]
   1e660:	ldr	r1, [r3, #20]
   1e664:	blx	r2
   1e668:	cmn	r0, #1
   1e66c:	bne	1e690 <readstat_parse_stata_dictionary+0x54>
   1e670:	ldr	r3, [sp, #28]
   1e674:	cmp	r3, #0
   1e678:	ldrne	r2, [sp, #28]
   1e67c:	movne	r3, #1
   1e680:	strne	r3, [r2]
   1e684:	bne	1e8e0 <readstat_parse_stata_dictionary+0x2a4>
   1e688:	ldr	r5, [sp, #28]
   1e68c:	b	1e8e4 <readstat_parse_stata_dictionary+0x2a8>
   1e690:	ldr	r3, [r9, #32]
   1e694:	mov	r1, #2
   1e698:	mov	r0, #0
   1e69c:	ldr	r4, [r3, #8]
   1e6a0:	ldr	r2, [r3, #20]
   1e6a4:	blx	r4
   1e6a8:	cmn	r0, #1
   1e6ac:	mov	r4, r0
   1e6b0:	beq	1ec38 <readstat_parse_stata_dictionary+0x5fc>
   1e6b4:	ldr	r3, [r9, #32]
   1e6b8:	mov	r1, #0
   1e6bc:	mov	r0, r1
   1e6c0:	ldr	r5, [r3, #8]
   1e6c4:	ldr	r2, [r3, #20]
   1e6c8:	blx	r5
   1e6cc:	mov	r0, r4
   1e6d0:	bl	412c <malloc@plt>
   1e6d4:	ldr	r3, [r9, #32]
   1e6d8:	mov	r1, r4
   1e6dc:	str	r0, [sp, #20]
   1e6e0:	ldr	r5, [r3, #12]
   1e6e4:	ldr	r2, [r3, #20]
   1e6e8:	blx	r5
   1e6ec:	ldr	r3, [sp, #20]
   1e6f0:	mov	r1, #280	; 0x118
   1e6f4:	mov	r0, #1
   1e6f8:	add	r3, r3, r4
   1e6fc:	str	r3, [sp, #52]	; 0x34
   1e700:	bl	3d6c <calloc@plt>
   1e704:	subs	r5, r0, #0
   1e708:	moveq	r4, #3
   1e70c:	beq	1e8ac <readstat_parse_stata_dictionary+0x270>
   1e710:	ldr	r2, [sp, #20]
   1e714:	mov	r3, #1
   1e718:	ldr	r1, [sp, #52]	; 0x34
   1e71c:	str	r3, [r5, #256]	; 0x100
   1e720:	cmp	r2, r1
   1e724:	bne	1e758 <readstat_parse_stata_dictionary+0x11c>
   1e728:	ldr	r1, [pc, #1316]	; 1ec54 <readstat_parse_stata_dictionary+0x618>
   1e72c:	add	r0, sp, #80	; 0x50
   1e730:	add	r1, pc, r1
   1e734:	bl	40b4 <strcpy@plt>
   1e738:	ldr	r3, [r9, #24]
   1e73c:	cmp	r3, #0
   1e740:	beq	1e750 <readstat_parse_stata_dictionary+0x114>
   1e744:	add	r0, sp, #80	; 0x50
   1e748:	ldr	r1, [sp, #68]	; 0x44
   1e74c:	blx	r3
   1e750:	mov	r4, #5
   1e754:	b	1e8ac <readstat_parse_stata_dictionary+0x270>
   1e758:	str	r3, [sp, #24]
   1e75c:	mov	r7, #0
   1e760:	ldr	r3, [pc, #1264]	; 1ec58 <readstat_parse_stata_dictionary+0x61c>
   1e764:	mov	r6, r7
   1e768:	mov	r8, r7
   1e76c:	str	r7, [sp, #12]
   1e770:	ldr	r2, [sp, #20]
   1e774:	str	r7, [sp, #16]
   1e778:	str	r7, [sp, #32]
   1e77c:	add	r3, pc, r3
   1e780:	str	r7, [sp, #36]	; 0x24
   1e784:	str	r3, [sp, #44]	; 0x2c
   1e788:	add	r3, r3, #824	; 0x338
   1e78c:	mov	r4, r2
   1e790:	add	r3, r3, #2
   1e794:	str	r7, [sp, #48]	; 0x30
   1e798:	str	r3, [sp, #56]	; 0x38
   1e79c:	ldr	r3, [sp, #44]	; 0x2c
   1e7a0:	str	r2, [sp, #64]	; 0x40
   1e7a4:	add	r3, r3, #1136	; 0x470
   1e7a8:	add	r3, r3, #4
   1e7ac:	str	r3, [sp, #60]	; 0x3c
   1e7b0:	ldr	r3, [sp, #24]
   1e7b4:	ldr	r0, [sp, #24]
   1e7b8:	ldr	r2, [sp, #56]	; 0x38
   1e7bc:	lsl	r3, r3, #1
   1e7c0:	ldr	r1, [sp, #44]	; 0x2c
   1e7c4:	ldrsh	r2, [r2, r3]
   1e7c8:	add	r2, r1, r2
   1e7cc:	ldr	r1, [sp, #60]	; 0x3c
   1e7d0:	ldrsh	r3, [r1, r3]
   1e7d4:	ldr	r1, [sp, #44]	; 0x2c
   1e7d8:	add	r1, r1, r0
   1e7dc:	ldrb	lr, [r1, #1454]	; 0x5ae
   1e7e0:	cmp	lr, #0
   1e7e4:	beq	1e8fc <readstat_parse_stata_dictionary+0x2c0>
   1e7e8:	sub	ip, lr, #1
   1e7ec:	mov	r0, r2
   1e7f0:	add	ip, r2, ip
   1e7f4:	cmp	r0, ip
   1e7f8:	bhi	1e8f4 <readstat_parse_stata_dictionary+0x2b8>
   1e7fc:	sub	sl, ip, r0
   1e800:	ldrb	fp, [r4]
   1e804:	add	r1, r0, sl, asr #1
   1e808:	ldrb	sl, [r0, sl, asr #1]
   1e80c:	cmp	fp, sl
   1e810:	subcc	ip, r1, #1
   1e814:	bcc	1e7f4 <readstat_parse_stata_dictionary+0x1b8>
   1e818:	addhi	r0, r1, #1
   1e81c:	bhi	1e7f4 <readstat_parse_stata_dictionary+0x1b8>
   1e820:	sub	r2, r1, r2
   1e824:	add	r3, r3, r2
   1e828:	ldr	r2, [pc, #1068]	; 1ec5c <readstat_parse_stata_dictionary+0x620>
   1e82c:	add	r2, pc, r2
   1e830:	add	r3, r2, r3
   1e834:	ldrb	r1, [r3, #1768]	; 0x6e8
   1e838:	str	r1, [sp, #24]
   1e83c:	ldrb	r1, [r3, #2618]	; 0xa3a
   1e840:	cmp	r1, #0
   1e844:	beq	1e880 <readstat_parse_stata_dictionary+0x244>
   1e848:	add	r3, r2, #3456	; 0xd80
   1e84c:	add	fp, sp, #1104	; 0x450
   1e850:	add	r3, r3, #12
   1e854:	add	r2, r3, r1
   1e858:	ldrb	r3, [r3, r1]
   1e85c:	str	r2, [sp, #40]	; 0x28
   1e860:	add	r3, r3, r2
   1e864:	str	r3, [sp, #72]	; 0x48
   1e868:	add	r3, fp, #580	; 0x244
   1e86c:	str	r3, [sp, #76]	; 0x4c
   1e870:	ldr	r2, [sp, #40]	; 0x28
   1e874:	ldr	r3, [sp, #72]	; 0x48
   1e878:	cmp	r3, r2
   1e87c:	bne	1e974 <readstat_parse_stata_dictionary+0x338>
   1e880:	ldr	r3, [sp, #24]
   1e884:	cmp	r3, #0
   1e888:	beq	1ebf8 <readstat_parse_stata_dictionary+0x5bc>
   1e88c:	ldr	r3, [sp, #52]	; 0x34
   1e890:	add	r4, r4, #1
   1e894:	cmp	r3, r4
   1e898:	bne	1e7b0 <readstat_parse_stata_dictionary+0x174>
   1e89c:	ldr	r3, [sp, #24]
   1e8a0:	cmp	r3, #155	; 0x9b
   1e8a4:	movgt	r4, #0
   1e8a8:	ble	1e728 <readstat_parse_stata_dictionary+0xec>
   1e8ac:	ldr	r3, [r9, #32]
   1e8b0:	ldr	r2, [r3, #4]
   1e8b4:	ldr	r0, [r3, #20]
   1e8b8:	blx	r2
   1e8bc:	ldr	r0, [sp, #20]
   1e8c0:	bl	3ed4 <free@plt>
   1e8c4:	cmp	r4, #0
   1e8c8:	beq	1e8e4 <readstat_parse_stata_dictionary+0x2a8>
   1e8cc:	ldr	r3, [sp, #28]
   1e8d0:	mov	r0, r5
   1e8d4:	cmp	r3, #0
   1e8d8:	strne	r4, [r3]
   1e8dc:	bl	3fd0 <readstat_schema_free@plt>
   1e8e0:	mov	r5, #0
   1e8e4:	mov	r0, r5
   1e8e8:	add	sp, sp, #3312	; 0xcf0
   1e8ec:	add	sp, sp, #4
   1e8f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e8f4:	add	r2, r2, lr
   1e8f8:	add	r3, r3, lr
   1e8fc:	ldr	r1, [pc, #860]	; 1ec60 <readstat_parse_stata_dictionary+0x624>
   1e900:	ldr	r0, [sp, #24]
   1e904:	add	r1, pc, r1
   1e908:	add	r1, r1, r0
   1e90c:	ldrb	sl, [r1, #1611]	; 0x64b
   1e910:	cmp	sl, #0
   1e914:	beq	1e828 <readstat_parse_stata_dictionary+0x1ec>
   1e918:	add	lr, r2, sl, lsl #1
   1e91c:	mov	ip, r2
   1e920:	sub	lr, lr, #2
   1e924:	cmp	ip, lr
   1e928:	bhi	1e96c <readstat_parse_stata_dictionary+0x330>
   1e92c:	sub	r0, lr, ip
   1e930:	ldrb	fp, [r4]
   1e934:	asr	r0, r0, #1
   1e938:	bic	r0, r0, #1
   1e93c:	add	r1, ip, r0
   1e940:	ldrb	r0, [ip, r0]
   1e944:	cmp	r0, fp
   1e948:	subhi	lr, r1, #2
   1e94c:	bhi	1e924 <readstat_parse_stata_dictionary+0x2e8>
   1e950:	ldrb	r0, [r1, #1]
   1e954:	cmp	r0, fp
   1e958:	addcc	ip, r1, #2
   1e95c:	bcc	1e924 <readstat_parse_stata_dictionary+0x2e8>
   1e960:	sub	r2, r1, r2
   1e964:	add	r3, r3, r2, asr #1
   1e968:	b	1e828 <readstat_parse_stata_dictionary+0x1ec>
   1e96c:	add	r3, r3, sl
   1e970:	b	1e828 <readstat_parse_stata_dictionary+0x1ec>
   1e974:	ldr	r2, [sp, #40]	; 0x28
   1e978:	ldrb	r3, [r2, #1]!
   1e97c:	str	r2, [sp, #40]	; 0x28
   1e980:	cmp	r3, #28
   1e984:	addls	pc, pc, r3, lsl #2
   1e988:	b	1e870 <readstat_parse_stata_dictionary+0x234>
   1e98c:	b	1ea00 <readstat_parse_stata_dictionary+0x3c4>
   1e990:	b	1ea08 <readstat_parse_stata_dictionary+0x3cc>
   1e994:	b	1ea1c <readstat_parse_stata_dictionary+0x3e0>
   1e998:	b	1ea48 <readstat_parse_stata_dictionary+0x40c>
   1e99c:	b	1eaf8 <readstat_parse_stata_dictionary+0x4bc>
   1e9a0:	b	1eb10 <readstat_parse_stata_dictionary+0x4d4>
   1e9a4:	b	1eb24 <readstat_parse_stata_dictionary+0x4e8>
   1e9a8:	b	1eb38 <readstat_parse_stata_dictionary+0x4fc>
   1e9ac:	b	1eb40 <readstat_parse_stata_dictionary+0x504>
   1e9b0:	b	1eb38 <readstat_parse_stata_dictionary+0x4fc>
   1e9b4:	b	1eb40 <readstat_parse_stata_dictionary+0x504>
   1e9b8:	b	1eb38 <readstat_parse_stata_dictionary+0x4fc>
   1e9bc:	b	1eb40 <readstat_parse_stata_dictionary+0x504>
   1e9c0:	b	1eb4c <readstat_parse_stata_dictionary+0x510>
   1e9c4:	b	1eb58 <readstat_parse_stata_dictionary+0x51c>
   1e9c8:	b	1eb60 <readstat_parse_stata_dictionary+0x524>
   1e9cc:	b	1eb6c <readstat_parse_stata_dictionary+0x530>
   1e9d0:	b	1eb78 <readstat_parse_stata_dictionary+0x53c>
   1e9d4:	b	1eb84 <readstat_parse_stata_dictionary+0x548>
   1e9d8:	b	1eb94 <readstat_parse_stata_dictionary+0x558>
   1e9dc:	b	1eb9c <readstat_parse_stata_dictionary+0x560>
   1e9e0:	b	1eba8 <readstat_parse_stata_dictionary+0x56c>
   1e9e4:	b	1ebb4 <readstat_parse_stata_dictionary+0x578>
   1e9e8:	b	1ebbc <readstat_parse_stata_dictionary+0x580>
   1e9ec:	b	1ebc4 <readstat_parse_stata_dictionary+0x588>
   1e9f0:	b	1ebcc <readstat_parse_stata_dictionary+0x590>
   1e9f4:	b	1ebd4 <readstat_parse_stata_dictionary+0x598>
   1e9f8:	b	1ebe4 <readstat_parse_stata_dictionary+0x5a8>
   1e9fc:	b	1ebec <readstat_parse_stata_dictionary+0x5b0>
   1ea00:	mov	r6, #0
   1ea04:	b	1e870 <readstat_parse_stata_dictionary+0x234>
   1ea08:	ldrb	r3, [r4]
   1ea0c:	mov	r2, #10
   1ea10:	sub	r3, r3, #48	; 0x30
   1ea14:	mla	r6, r2, r6, r3
   1ea18:	b	1e870 <readstat_parse_stata_dictionary+0x234>
   1ea1c:	mov	r2, #2208	; 0x8a0
   1ea20:	mov	r1, #0
   1ea24:	mov	r0, fp
   1ea28:	bl	42b8 <memset@plt>
   1ea2c:	mov	r3, #46	; 0x2e
   1ea30:	strb	r3, [sp, #3304]	; 0xce8
   1ea34:	mov	r3, #5
   1ea38:	str	r3, [sp, #1120]	; 0x460
   1ea3c:	ldr	r3, [sp, #36]	; 0x24
   1ea40:	str	r3, [sp, #1124]	; 0x464
   1ea44:	b	1e870 <readstat_parse_stata_dictionary+0x234>
   1ea48:	ldr	r3, [sp, #12]
   1ea4c:	ldr	r2, [sp, #32]
   1ea50:	ldr	sl, [r9, #8]
   1ea54:	str	r3, [sp, #1104]	; 0x450
   1ea58:	ldr	r3, [sp, #32]
   1ea5c:	cmp	sl, #0
   1ea60:	str	r3, [sp, #1108]	; 0x454
   1ea64:	ldr	r3, [sp, #1112]	; 0x458
   1ea68:	add	r3, r2, r3
   1ea6c:	str	r3, [sp, #32]
   1ea70:	beq	1eaa8 <readstat_parse_stata_dictionary+0x46c>
   1ea74:	mov	r2, #0
   1ea78:	add	r1, sp, #1120	; 0x460
   1ea7c:	ldr	r0, [sp, #36]	; 0x24
   1ea80:	ldr	r3, [sp, #48]	; 0x30
   1ea84:	str	r3, [sp, #3268]	; 0xcc4
   1ea88:	ldr	r3, [sp, #68]	; 0x44
   1ea8c:	blx	sl
   1ea90:	cmp	r0, #1
   1ea94:	beq	1ec4c <readstat_parse_stata_dictionary+0x610>
   1ea98:	cmp	r0, #2
   1ea9c:	moveq	r3, #1
   1eaa0:	streq	r3, [sp, #1116]	; 0x45c
   1eaa4:	beq	1eab4 <readstat_parse_stata_dictionary+0x478>
   1eaa8:	ldr	r3, [sp, #48]	; 0x30
   1eaac:	add	r3, r3, #1
   1eab0:	str	r3, [sp, #48]	; 0x30
   1eab4:	ldr	r1, [r5, #268]	; 0x10c
   1eab8:	mov	sl, #2208	; 0x8a0
   1eabc:	ldr	r0, [r5, #276]	; 0x114
   1eac0:	mla	r1, r1, sl, sl
   1eac4:	bl	400c <realloc@plt>
   1eac8:	ldr	r3, [r5, #268]	; 0x10c
   1eacc:	mov	r1, fp
   1ead0:	str	r0, [r5, #276]	; 0x114
   1ead4:	add	r2, r3, #1
   1ead8:	mla	r0, sl, r3, r0
   1eadc:	str	r2, [r5, #268]	; 0x10c
   1eae0:	mov	r2, sl
   1eae4:	bl	3f34 <memcpy@plt>
   1eae8:	ldr	r3, [sp, #36]	; 0x24
   1eaec:	add	r3, r3, #1
   1eaf0:	str	r3, [sp, #36]	; 0x24
   1eaf4:	b	1e870 <readstat_parse_stata_dictionary+0x234>
   1eaf8:	ldr	r3, [sp, #16]
   1eafc:	mov	r2, r8
   1eb00:	mov	r1, #255	; 0xff
   1eb04:	mov	r0, r5
   1eb08:	bl	3e80 <readstat_copy@plt>
   1eb0c:	b	1e870 <readstat_parse_stata_dictionary+0x234>
   1eb10:	mov	r2, r8
   1eb14:	mov	r1, #300	; 0x12c
   1eb18:	ldr	r3, [sp, #16]
   1eb1c:	add	r0, fp, #24
   1eb20:	b	1eb08 <readstat_parse_stata_dictionary+0x4cc>
   1eb24:	mov	r2, r8
   1eb28:	mov	r1, #1024	; 0x400
   1eb2c:	ldr	r3, [sp, #16]
   1eb30:	ldr	r0, [sp, #76]	; 0x4c
   1eb34:	b	1eb08 <readstat_parse_stata_dictionary+0x4cc>
   1eb38:	mov	r8, r4
   1eb3c:	b	1e870 <readstat_parse_stata_dictionary+0x234>
   1eb40:	sub	r3, r4, r8
   1eb44:	str	r3, [sp, #16]
   1eb48:	b	1e870 <readstat_parse_stata_dictionary+0x234>
   1eb4c:	add	r7, r7, #1
   1eb50:	str	r4, [sp, #64]	; 0x40
   1eb54:	b	1e870 <readstat_parse_stata_dictionary+0x234>
   1eb58:	str	r6, [r5, #256]	; 0x100
   1eb5c:	b	1e870 <readstat_parse_stata_dictionary+0x234>
   1eb60:	sub	r3, r6, #1
   1eb64:	str	r3, [sp, #12]
   1eb68:	b	1e870 <readstat_parse_stata_dictionary+0x234>
   1eb6c:	sub	r3, r6, #1
   1eb70:	str	r3, [sp, #32]
   1eb74:	b	1e870 <readstat_parse_stata_dictionary+0x234>
   1eb78:	ldr	r3, [sp, #12]
   1eb7c:	add	r3, r3, #1
   1eb80:	b	1eb64 <readstat_parse_stata_dictionary+0x528>
   1eb84:	ldr	r2, [sp, #12]
   1eb88:	sub	r3, r6, #1
   1eb8c:	add	r3, r2, r3
   1eb90:	b	1eb64 <readstat_parse_stata_dictionary+0x528>
   1eb94:	str	r6, [r5, #260]	; 0x104
   1eb98:	b	1e870 <readstat_parse_stata_dictionary+0x234>
   1eb9c:	sub	r3, r6, #1
   1eba0:	str	r3, [r5, #264]	; 0x108
   1eba4:	b	1e870 <readstat_parse_stata_dictionary+0x234>
   1eba8:	mov	r3, #1
   1ebac:	str	r3, [sp, #1120]	; 0x460
   1ebb0:	b	1e870 <readstat_parse_stata_dictionary+0x234>
   1ebb4:	mov	r3, #2
   1ebb8:	b	1ebac <readstat_parse_stata_dictionary+0x570>
   1ebbc:	mov	r3, #3
   1ebc0:	b	1ebac <readstat_parse_stata_dictionary+0x570>
   1ebc4:	mov	r3, #4
   1ebc8:	b	1ebac <readstat_parse_stata_dictionary+0x570>
   1ebcc:	mov	r3, #5
   1ebd0:	b	1ebac <readstat_parse_stata_dictionary+0x570>
   1ebd4:	mov	r3, #0
   1ebd8:	str	r3, [sp, #1120]	; 0x460
   1ebdc:	str	r6, [sp, #2716]	; 0xa9c
   1ebe0:	b	1e870 <readstat_parse_stata_dictionary+0x234>
   1ebe4:	str	r6, [sp, #1112]	; 0x458
   1ebe8:	b	1e870 <readstat_parse_stata_dictionary+0x234>
   1ebec:	mov	r3, #44	; 0x2c
   1ebf0:	strb	r3, [sp, #3304]	; 0xce8
   1ebf4:	b	1e870 <readstat_parse_stata_dictionary+0x234>
   1ebf8:	ldr	r3, [sp, #52]	; 0x34
   1ebfc:	cmp	r4, r3
   1ec00:	beq	1e728 <readstat_parse_stata_dictionary+0xec>
   1ec04:	ldrb	r3, [r4]
   1ec08:	mov	r1, #1024	; 0x400
   1ec0c:	add	r0, sp, #80	; 0x50
   1ec10:	ldr	r2, [pc, #76]	; 1ec64 <readstat_parse_stata_dictionary+0x628>
   1ec14:	str	r3, [sp, #4]
   1ec18:	ldr	r3, [sp, #64]	; 0x40
   1ec1c:	add	r2, pc, r2
   1ec20:	sub	r4, r4, r3
   1ec24:	add	r3, r7, #1
   1ec28:	add	r4, r4, #1
   1ec2c:	str	r4, [sp]
   1ec30:	bl	4294 <snprintf@plt>
   1ec34:	b	1e738 <readstat_parse_stata_dictionary+0xfc>
   1ec38:	mov	r3, #0
   1ec3c:	mov	r4, #15
   1ec40:	mov	r5, r3
   1ec44:	str	r3, [sp, #20]
   1ec48:	b	1e8ac <readstat_parse_stata_dictionary+0x270>
   1ec4c:	mov	r4, #4
   1ec50:	b	1e8ac <readstat_parse_stata_dictionary+0x270>
   1ec54:	.word	0x00010dcd
   1ec58:	.word	0x0000ff7e
   1ec5c:	.word	0x0000fece
   1ec60:	.word	0x0000fdf6
   1ec64:	.word	0x0001091c

0001ec68 <handle_value.isra.0>:
   1ec68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ec6c:	add	fp, sp, #32
   1ec70:	sub	sp, sp, #52	; 0x34
   1ec74:	mov	r7, r2
   1ec78:	mov	r9, r0
   1ec7c:	sub	r5, fp, #52	; 0x34
   1ec80:	mov	r0, #0
   1ec84:	add	r8, r3, #16
   1ec88:	str	r3, [fp, #-68]	; 0xffffffbc
   1ec8c:	ldr	r2, [fp, #8]
   1ec90:	str	r1, [fp, #-64]	; 0xffffffc0
   1ec94:	mov	r1, #0
   1ec98:	ldr	r4, [fp, #4]
   1ec9c:	strd	r0, [fp, #-52]	; 0xffffffcc
   1eca0:	strd	r0, [r5, #8]
   1eca4:	lsl	r2, r2, #2
   1eca8:	ldr	r0, [r3, #16]
   1ecac:	add	sl, r2, #1
   1ecb0:	add	r2, r2, #8
   1ecb4:	bic	r2, r2, #7
   1ecb8:	sub	sp, sp, r2
   1ecbc:	str	r0, [fp, #-44]	; 0xffffffd4
   1ecc0:	bl	3e38 <readstat_type_class@plt>
   1ecc4:	cmp	r0, #0
   1ecc8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1eccc:	bne	1ed04 <handle_value.isra.0+0x9c>
   1ecd0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1ecd4:	add	r6, sp, #16
   1ecd8:	mov	r2, r4
   1ecdc:	mov	r1, sl
   1ece0:	mov	r0, r6
   1ece4:	str	r3, [sp]
   1ece8:	ldr	r3, [fp, #8]
   1ecec:	bl	424c <readstat_convert@plt>
   1ecf0:	cmp	r0, #0
   1ecf4:	streq	r6, [fp, #-52]	; 0xffffffcc
   1ecf8:	beq	1ed44 <handle_value.isra.0+0xdc>
   1ecfc:	sub	sp, fp, #32
   1ed00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ed04:	ldr	r3, [r3, #16]
   1ed08:	mov	r2, #0
   1ed0c:	sub	r1, fp, #56	; 0x38
   1ed10:	str	r2, [fp, #-56]	; 0xffffffc8
   1ed14:	cmp	r3, #5
   1ed18:	bne	1ed7c <handle_value.isra.0+0x114>
   1ed1c:	mov	r0, r4
   1ed20:	bl	4318 <strtod@plt>
   1ed24:	vstr	d0, [fp, #-52]	; 0xffffffcc
   1ed28:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ed2c:	sub	r4, r3, r4
   1ed30:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   1ed34:	clz	r4, r4
   1ed38:	lsr	r4, r4, #5
   1ed3c:	bfi	r3, r4, #0, #1
   1ed40:	strb	r3, [fp, #-39]	; 0xffffffd9
   1ed44:	ldr	r3, [fp, #12]
   1ed48:	ldr	r4, [r9]
   1ed4c:	str	r3, [sp, #8]
   1ed50:	sub	r3, fp, #36	; 0x24
   1ed54:	ldmdb	r3, {r0, r1}
   1ed58:	stm	sp, {r0, r1}
   1ed5c:	mov	r1, r8
   1ed60:	mov	r0, r7
   1ed64:	ldm	r5, {r2, r3}
   1ed68:	blx	r4
   1ed6c:	cmp	r0, #1
   1ed70:	movne	r0, #0
   1ed74:	moveq	r0, #4
   1ed78:	b	1ecfc <handle_value.isra.0+0x94>
   1ed7c:	cmp	r3, #4
   1ed80:	bne	1ed94 <handle_value.isra.0+0x12c>
   1ed84:	mov	r0, r4
   1ed88:	bl	40e4 <strtof@plt>
   1ed8c:	vstr	s0, [fp, #-52]	; 0xffffffcc
   1ed90:	b	1ed28 <handle_value.isra.0+0xc0>
   1ed94:	mov	r2, #10
   1ed98:	mov	r0, r4
   1ed9c:	bl	3e44 <strtol@plt>
   1eda0:	mov	r3, #3
   1eda4:	str	r0, [fp, #-52]	; 0xffffffcc
   1eda8:	str	r3, [fp, #-44]	; 0xffffffd4
   1edac:	b	1ed28 <handle_value.isra.0+0xc0>

0001edb0 <txt_parse_fixed_width>:
   1edb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1edb4:	sub	sp, sp, #4096	; 0x1000
   1edb8:	mov	r7, r0
   1edbc:	sub	sp, sp, #52	; 0x34
   1edc0:	mov	r5, #0
   1edc4:	add	r6, sp, #48	; 0x30
   1edc8:	ldr	r8, [r1, #8]
   1edcc:	str	r1, [sp, #20]
   1edd0:	ldr	r9, [r0, #32]
   1edd4:	str	r3, [sp, #24]
   1edd8:	str	r2, [sp, #28]
   1eddc:	mov	r4, #0
   1ede0:	str	r4, [sp, #16]
   1ede4:	ldr	r3, [r8, #256]	; 0x100
   1ede8:	cmp	r3, r4
   1edec:	bgt	1ee08 <txt_parse_fixed_width+0x58>
   1edf0:	ldr	r3, [r7, #44]	; 0x2c
   1edf4:	add	r5, r5, #1
   1edf8:	cmp	r3, r5
   1edfc:	bne	1eddc <txt_parse_fixed_width+0x2c>
   1ee00:	mov	r0, #0
   1ee04:	b	1ef44 <txt_parse_fixed_width+0x194>
   1ee08:	ldr	r1, [sp, #24]
   1ee0c:	add	r0, sp, #4160	; 0x1040
   1ee10:	add	r0, r0, #24
   1ee14:	ldr	r0, [r0]
   1ee18:	ldr	r3, [r9, #12]
   1ee1c:	ldr	r1, [r1, r4, lsl #2]
   1ee20:	ldr	r2, [r9, #20]
   1ee24:	blx	r3
   1ee28:	cmp	r0, #0
   1ee2c:	beq	1ef44 <txt_parse_fixed_width+0x194>
   1ee30:	ldr	r3, [sp, #24]
   1ee34:	ldr	r3, [r3, r4, lsl #2]
   1ee38:	cmp	r3, r0
   1ee3c:	bhi	1ef58 <txt_parse_fixed_width+0x1a8>
   1ee40:	add	r3, r7, #16
   1ee44:	str	r3, [sp, #32]
   1ee48:	ldr	r2, [sp, #16]
   1ee4c:	ldr	r3, [r8, #268]	; 0x10c
   1ee50:	cmp	r3, r2
   1ee54:	ble	1ee74 <txt_parse_fixed_width+0xc4>
   1ee58:	mov	r3, #2208	; 0x8a0
   1ee5c:	mul	r3, r3, r2
   1ee60:	ldr	r2, [r8, #276]	; 0x114
   1ee64:	add	sl, r2, r3
   1ee68:	ldr	r3, [r2, r3]
   1ee6c:	cmp	r3, r4
   1ee70:	beq	1eeb8 <txt_parse_fixed_width+0x108>
   1ee74:	ldr	r3, [r8, #260]	; 0x104
   1ee78:	cmp	r3, #0
   1ee7c:	bne	1eeb0 <txt_parse_fixed_width+0x100>
   1ee80:	add	sl, sp, #47	; 0x2f
   1ee84:	strb	r3, [r6, #-1]
   1ee88:	mov	r1, #1
   1ee8c:	mov	r0, sl
   1ee90:	ldr	r3, [r9, #12]
   1ee94:	ldr	r2, [r9, #20]
   1ee98:	blx	r3
   1ee9c:	cmp	r0, #1
   1eea0:	bne	1eeb0 <txt_parse_fixed_width+0x100>
   1eea4:	ldrb	r3, [r6, #-1]
   1eea8:	cmp	r3, #10
   1eeac:	bne	1ee88 <txt_parse_fixed_width+0xd8>
   1eeb0:	add	r4, r4, #1
   1eeb4:	b	1ede4 <txt_parse_fixed_width+0x34>
   1eeb8:	ldr	fp, [sl, #8]
   1eebc:	cmp	fp, #4096	; 0x1000
   1eec0:	bcc	1eed4 <txt_parse_fixed_width+0x124>
   1eec4:	ldr	r3, [sp, #16]
   1eec8:	add	r3, r3, #1
   1eecc:	str	r3, [sp, #16]
   1eed0:	b	1ee48 <txt_parse_fixed_width+0x98>
   1eed4:	ldr	r3, [r7, #16]
   1eed8:	cmp	r3, #0
   1eedc:	beq	1eec4 <txt_parse_fixed_width+0x114>
   1eee0:	ldr	r3, [sl, #12]
   1eee4:	cmp	r3, #0
   1eee8:	bne	1eec4 <txt_parse_fixed_width+0x114>
   1eeec:	str	r3, [sp, #36]	; 0x24
   1eef0:	add	r3, sp, #4160	; 0x1040
   1eef4:	mov	r2, fp
   1eef8:	add	r3, r3, #24
   1eefc:	ldr	r1, [sl, #4]
   1ef00:	mov	r0, r6
   1ef04:	ldr	r3, [r3]
   1ef08:	add	r1, r3, r1
   1ef0c:	bl	3f34 <memcpy@plt>
   1ef10:	ldr	r1, [sp, #20]
   1ef14:	mov	r2, r5
   1ef18:	ldr	r3, [sp, #36]	; 0x24
   1ef1c:	ldr	r0, [sp, #32]
   1ef20:	strb	r3, [r6, fp]
   1ef24:	ldr	r3, [sp, #28]
   1ef28:	stm	sp, {r6, fp}
   1ef2c:	str	r3, [sp, #8]
   1ef30:	mov	r3, sl
   1ef34:	ldr	r1, [r1, #4]
   1ef38:	bl	1ec68 <handle_value.isra.0>
   1ef3c:	cmp	r0, #0
   1ef40:	beq	1eec4 <txt_parse_fixed_width+0x114>
   1ef44:	ldr	r3, [sp, #20]
   1ef48:	str	r5, [r3]
   1ef4c:	add	sp, sp, #4096	; 0x1000
   1ef50:	add	sp, sp, #52	; 0x34
   1ef54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ef58:	mov	r0, #2
   1ef5c:	b	1ef44 <txt_parse_fixed_width+0x194>

0001ef60 <readstat_parse_txt>:
   1ef60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ef64:	mov	r7, r0
   1ef68:	sub	sp, sp, #124	; 0x7c
   1ef6c:	mov	r9, r2
   1ef70:	mov	r2, #0
   1ef74:	mov	r4, r1
   1ef78:	ldr	sl, [r0, #32]
   1ef7c:	str	r3, [sp, #28]
   1ef80:	mov	r3, #0
   1ef84:	ldr	r0, [r0, #40]	; 0x28
   1ef88:	strd	r2, [sp, #52]	; 0x34
   1ef8c:	str	r9, [sp, #60]	; 0x3c
   1ef90:	cmp	r0, #0
   1ef94:	beq	1f00c <readstat_parse_txt+0xac>
   1ef98:	ldr	r1, [r7, #36]	; 0x24
   1ef9c:	cmp	r1, #0
   1efa0:	beq	1f00c <readstat_parse_txt+0xac>
   1efa4:	bl	4150 <iconv_open@plt>
   1efa8:	cmn	r0, #1
   1efac:	str	r0, [sp, #56]	; 0x38
   1efb0:	bne	1f00c <readstat_parse_txt+0xac>
   1efb4:	mov	r5, #0
   1efb8:	mov	r4, #7
   1efbc:	mov	r6, r5
   1efc0:	str	r5, [sp, #56]	; 0x38
   1efc4:	ldr	r3, [sl, #4]
   1efc8:	ldr	r0, [sl, #20]
   1efcc:	blx	r3
   1efd0:	cmp	r5, #0
   1efd4:	beq	1efe0 <readstat_parse_txt+0x80>
   1efd8:	mov	r0, r5
   1efdc:	bl	3ed4 <free@plt>
   1efe0:	cmp	r6, #0
   1efe4:	beq	1eff0 <readstat_parse_txt+0x90>
   1efe8:	mov	r0, r6
   1efec:	bl	3ed4 <free@plt>
   1eff0:	ldr	r0, [sp, #56]	; 0x38
   1eff4:	cmp	r0, #0
   1eff8:	beq	1f000 <readstat_parse_txt+0xa0>
   1effc:	bl	3de4 <iconv_close@plt>
   1f000:	mov	r0, r4
   1f004:	add	sp, sp, #124	; 0x7c
   1f008:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f00c:	mov	r0, r4
   1f010:	ldr	r3, [sl]
   1f014:	ldr	r1, [sl, #20]
   1f018:	blx	r3
   1f01c:	cmn	r0, #1
   1f020:	moveq	r5, #0
   1f024:	moveq	r4, #1
   1f028:	moveq	r6, r5
   1f02c:	beq	1efc4 <readstat_parse_txt+0x64>
   1f030:	ldr	r4, [r9, #256]	; 0x100
   1f034:	lsl	r0, r4, #2
   1f038:	bl	412c <malloc@plt>
   1f03c:	subs	r6, r0, #0
   1f040:	movne	r3, #0
   1f044:	bne	1f060 <readstat_parse_txt+0x100>
   1f048:	mov	r5, r6
   1f04c:	mov	r4, #3
   1f050:	b	1efc4 <readstat_parse_txt+0x64>
   1f054:	ldr	r2, [r9, #260]	; 0x104
   1f058:	str	r2, [r6, r3, lsl #2]
   1f05c:	add	r3, r3, #1
   1f060:	cmp	r4, r3
   1f064:	bgt	1f054 <readstat_parse_txt+0xf4>
   1f068:	ldr	r0, [r9, #268]	; 0x10c
   1f06c:	mov	r2, #0
   1f070:	mov	ip, #2208	; 0x8a0
   1f074:	cmp	r0, r2
   1f078:	bgt	1f12c <readstat_parse_txt+0x1cc>
   1f07c:	mov	r0, #0
   1f080:	mov	r3, r0
   1f084:	cmp	r4, r3
   1f088:	bgt	1f158 <readstat_parse_txt+0x1f8>
   1f08c:	add	r0, r0, #2
   1f090:	bl	412c <malloc@plt>
   1f094:	subs	r5, r0, #0
   1f098:	beq	1f04c <readstat_parse_txt+0xec>
   1f09c:	ldr	r4, [r9, #264]	; 0x108
   1f0a0:	cmp	r4, #1
   1f0a4:	ble	1f0c0 <readstat_parse_txt+0x160>
   1f0a8:	mov	r3, #0
   1f0ac:	sub	r4, r4, #2
   1f0b0:	add	r8, sp, #64	; 0x40
   1f0b4:	strb	r3, [sp, #64]	; 0x40
   1f0b8:	cmn	r4, #1
   1f0bc:	bne	1f16c <readstat_parse_txt+0x20c>
   1f0c0:	ldrb	r3, [r9, #272]	; 0x110
   1f0c4:	cmp	r3, #0
   1f0c8:	beq	1f334 <readstat_parse_txt+0x3d4>
   1f0cc:	mov	r0, #4096	; 0x1000
   1f0d0:	bl	412c <malloc@plt>
   1f0d4:	ldr	r3, [sp, #60]	; 0x3c
   1f0d8:	mov	r8, r0
   1f0dc:	mov	r1, #4096	; 0x1000
   1f0e0:	mov	r0, #0
   1f0e4:	strd	r0, [sp, #16]
   1f0e8:	str	r3, [sp, #24]
   1f0ec:	ldr	r3, [r7, #32]
   1f0f0:	str	r3, [sp, #32]
   1f0f4:	mov	fp, #0
   1f0f8:	ldr	r3, [sp, #24]
   1f0fc:	ldr	r3, [r3, #268]	; 0x10c
   1f100:	cmp	fp, r3
   1f104:	blt	1f19c <readstat_parse_txt+0x23c>
   1f108:	ldr	r3, [sp, #16]
   1f10c:	add	r3, r3, #1
   1f110:	str	r3, [sp, #16]
   1f114:	ldr	r2, [sp, #16]
   1f118:	ldr	r3, [r7, #44]	; 0x2c
   1f11c:	cmp	r2, r3
   1f120:	bne	1f0f4 <readstat_parse_txt+0x194>
   1f124:	mov	r4, #0
   1f128:	b	1f274 <readstat_parse_txt+0x314>
   1f12c:	ldr	lr, [r9, #276]	; 0x114
   1f130:	mul	r3, ip, r2
   1f134:	add	r2, r2, #1
   1f138:	add	r1, lr, r3
   1f13c:	ldr	r3, [lr, r3]
   1f140:	ldmib	r1, {r1, lr}
   1f144:	add	r1, r1, lr
   1f148:	ldr	lr, [r6, r3, lsl #2]
   1f14c:	cmp	lr, r1
   1f150:	strcc	r1, [r6, r3, lsl #2]
   1f154:	b	1f074 <readstat_parse_txt+0x114>
   1f158:	ldr	r2, [r6, r3, lsl #2]
   1f15c:	add	r3, r3, #1
   1f160:	cmp	r0, r2
   1f164:	movcc	r0, r2
   1f168:	b	1f084 <readstat_parse_txt+0x124>
   1f16c:	mov	r1, #1
   1f170:	mov	r0, r8
   1f174:	ldr	r3, [sl, #12]
   1f178:	ldr	r2, [sl, #20]
   1f17c:	blx	r3
   1f180:	cmp	r0, #1
   1f184:	bne	1f194 <readstat_parse_txt+0x234>
   1f188:	ldrb	r3, [sp, #64]	; 0x40
   1f18c:	cmp	r3, #10
   1f190:	bne	1f16c <readstat_parse_txt+0x20c>
   1f194:	sub	r4, r4, #1
   1f198:	b	1f0b8 <readstat_parse_txt+0x158>
   1f19c:	sub	r3, r3, #1
   1f1a0:	ldr	r2, [sp, #24]
   1f1a4:	mov	r4, #0
   1f1a8:	cmp	fp, r3
   1f1ac:	ldrne	r3, [sp, #24]
   1f1b0:	moveq	r3, #10
   1f1b4:	ldr	r2, [r2, #276]	; 0x114
   1f1b8:	ldrbne	r3, [r3, #272]	; 0x110
   1f1bc:	str	r3, [sp, #36]	; 0x24
   1f1c0:	str	r2, [sp, #40]	; 0x28
   1f1c4:	ldr	r2, [sp, #32]
   1f1c8:	add	r3, r8, r4
   1f1cc:	mov	r1, #1
   1f1d0:	mov	r0, r3
   1f1d4:	str	r3, [sp, #44]	; 0x2c
   1f1d8:	ldr	r2, [r2, #12]
   1f1dc:	mov	ip, r2
   1f1e0:	ldr	r2, [sp, #32]
   1f1e4:	mov	r3, ip
   1f1e8:	ldr	r2, [r2, #20]
   1f1ec:	blx	r3
   1f1f0:	cmp	r0, #1
   1f1f4:	bne	1f264 <readstat_parse_txt+0x304>
   1f1f8:	ldr	r2, [sp, #36]	; 0x24
   1f1fc:	add	r4, r4, #1
   1f200:	ldr	r3, [sp, #44]	; 0x2c
   1f204:	ldrb	r3, [r3]
   1f208:	cmp	r2, r3
   1f20c:	bne	1f23c <readstat_parse_txt+0x2dc>
   1f210:	ldr	r3, [r7, #16]
   1f214:	cmp	r3, #0
   1f218:	beq	1f234 <readstat_parse_txt+0x2d4>
   1f21c:	ldr	r2, [sp, #40]	; 0x28
   1f220:	mov	r3, #2208	; 0x8a0
   1f224:	mla	r3, r3, fp, r2
   1f228:	ldr	r2, [r3, #12]
   1f22c:	cmp	r2, #0
   1f230:	beq	1f2e0 <readstat_parse_txt+0x380>
   1f234:	add	fp, fp, #1
   1f238:	b	1f0f8 <readstat_parse_txt+0x198>
   1f23c:	ldr	r3, [sp, #20]
   1f240:	cmp	r3, r4
   1f244:	bne	1f1c4 <readstat_parse_txt+0x264>
   1f248:	lsl	r3, r3, #1
   1f24c:	mov	r0, r8
   1f250:	mov	r1, r3
   1f254:	str	r3, [sp, #20]
   1f258:	bl	400c <realloc@plt>
   1f25c:	mov	r8, r0
   1f260:	b	1f1c4 <readstat_parse_txt+0x264>
   1f264:	cmn	r0, #1
   1f268:	beq	1f32c <readstat_parse_txt+0x3cc>
   1f26c:	cmp	r4, #0
   1f270:	bne	1f210 <readstat_parse_txt+0x2b0>
   1f274:	ldr	r3, [sp, #16]
   1f278:	cmp	r8, #0
   1f27c:	str	r3, [sp, #52]	; 0x34
   1f280:	beq	1f28c <readstat_parse_txt+0x32c>
   1f284:	mov	r0, r8
   1f288:	bl	3ed4 <free@plt>
   1f28c:	cmp	r4, #0
   1f290:	bne	1efc4 <readstat_parse_txt+0x64>
   1f294:	ldr	r7, [r7]
   1f298:	cmp	r7, #0
   1f29c:	beq	1efc4 <readstat_parse_txt+0x64>
   1f2a0:	mov	r1, r4
   1f2a4:	mov	r2, #40	; 0x28
   1f2a8:	add	r0, sp, #80	; 0x50
   1f2ac:	bl	42b8 <memset@plt>
   1f2b0:	add	r0, sp, #64	; 0x40
   1f2b4:	ldr	r1, [sp, #28]
   1f2b8:	ldr	r2, [sp, #52]	; 0x34
   1f2bc:	asr	r3, r2, #31
   1f2c0:	strd	r2, [sp, #64]	; 0x40
   1f2c4:	ldr	r2, [r9, #268]	; 0x10c
   1f2c8:	asr	r3, r2, #31
   1f2cc:	strd	r2, [sp, #72]	; 0x48
   1f2d0:	blx	r7
   1f2d4:	cmp	r0, #1
   1f2d8:	moveq	r4, #4
   1f2dc:	b	1efc4 <readstat_parse_txt+0x64>
   1f2e0:	subs	r2, r4, #1
   1f2e4:	beq	1f2f8 <readstat_parse_txt+0x398>
   1f2e8:	add	r1, r8, r4
   1f2ec:	ldrb	r1, [r1, #-2]
   1f2f0:	cmp	r1, #13
   1f2f4:	subeq	r2, r4, #2
   1f2f8:	mov	r1, #0
   1f2fc:	add	r0, r7, #16
   1f300:	strb	r1, [r8, r2]
   1f304:	ldr	r1, [sp, #28]
   1f308:	str	r8, [sp]
   1f30c:	str	r2, [sp, #4]
   1f310:	ldr	r2, [sp, #16]
   1f314:	str	r1, [sp, #8]
   1f318:	ldr	r1, [sp, #56]	; 0x38
   1f31c:	bl	1ec68 <handle_value.isra.0>
   1f320:	subs	r4, r0, #0
   1f324:	beq	1f234 <readstat_parse_txt+0x2d4>
   1f328:	b	1f274 <readstat_parse_txt+0x314>
   1f32c:	mov	r4, #2
   1f330:	b	1f274 <readstat_parse_txt+0x314>
   1f334:	mov	r3, r6
   1f338:	add	r1, sp, #52	; 0x34
   1f33c:	str	r5, [sp]
   1f340:	mov	r0, r7
   1f344:	ldr	r2, [sp, #28]
   1f348:	bl	1edb0 <txt_parse_fixed_width>
   1f34c:	mov	r4, r0
   1f350:	b	1f28c <readstat_parse_txt+0x32c>

0001f354 <zsav_ctx_init>:
   1f354:	push	{r4, r5, r6, r7, r8, lr}
   1f358:	mov	r1, #40	; 0x28
   1f35c:	mov	r5, r0
   1f360:	mov	r0, #1
   1f364:	mov	r6, r2
   1f368:	mov	r7, r3
   1f36c:	bl	3d6c <calloc@plt>
   1f370:	mov	r4, r0
   1f374:	mov	r0, r5
   1f378:	bl	412c <malloc@plt>
   1f37c:	str	r0, [r4]
   1f380:	mov	r0, #10
   1f384:	mov	r1, #4
   1f388:	str	r0, [r4, #12]
   1f38c:	bl	3d6c <calloc@plt>
   1f390:	ldr	r2, [pc, #28]	; 1f3b4 <zsav_ctx_init+0x60>
   1f394:	mov	r3, #0
   1f398:	str	r0, [r4, #4]
   1f39c:	mov	r0, r4
   1f3a0:	strd	r2, [r4, #16]
   1f3a4:	mvn	r3, #0
   1f3a8:	strd	r6, [r4, #24]
   1f3ac:	str	r3, [r4, #32]
   1f3b0:	pop	{r4, r5, r6, r7, r8, pc}
   1f3b4:	.word	0x003ff000

0001f3b8 <zsav_ctx_free>:
   1f3b8:	push	{r4, r5, r6, lr}
   1f3bc:	mov	r4, r0
   1f3c0:	mov	r5, #0
   1f3c4:	ldmib	r4, {r0, r3}
   1f3c8:	cmp	r3, r5
   1f3cc:	bgt	1f3e8 <zsav_ctx_free+0x30>
   1f3d0:	bl	3ed4 <free@plt>
   1f3d4:	ldr	r0, [r4]
   1f3d8:	bl	3ed4 <free@plt>
   1f3dc:	mov	r0, r4
   1f3e0:	pop	{r4, r5, r6, lr}
   1f3e4:	b	3ed4 <free@plt>
   1f3e8:	ldr	r6, [r0, r5, lsl #2]
   1f3ec:	add	r5, r5, #1
   1f3f0:	add	r0, r6, #8
   1f3f4:	bl	4330 <deflateEnd@plt>
   1f3f8:	ldr	r0, [r6, #64]	; 0x40
   1f3fc:	bl	3ed4 <free@plt>
   1f400:	mov	r0, r6
   1f404:	bl	3ed4 <free@plt>
   1f408:	b	1f3c4 <zsav_ctx_free+0xc>

0001f40c <zsav_add_block>:
   1f40c:	ldr	r1, [r0, #8]
   1f410:	push	{r4, r5, r6, lr}
   1f414:	mov	r4, r0
   1f418:	ldr	r3, [r0, #12]
   1f41c:	cmp	r1, r3
   1f420:	bne	1f43c <zsav_add_block+0x30>
   1f424:	lsl	r3, r1, #1
   1f428:	ldr	r0, [r0, #4]
   1f42c:	lsl	r1, r1, #3
   1f430:	str	r3, [r4, #12]
   1f434:	bl	400c <realloc@plt>
   1f438:	str	r0, [r4, #4]
   1f43c:	mov	r1, #72	; 0x48
   1f440:	mov	r0, #1
   1f444:	bl	3d6c <calloc@plt>
   1f448:	ldrd	r2, [r4, #4]
   1f44c:	mov	r5, r0
   1f450:	add	r6, r0, #8
   1f454:	mov	r0, r6
   1f458:	add	r1, r3, #1
   1f45c:	str	r1, [r4, #8]
   1f460:	str	r5, [r2, r3, lsl #2]
   1f464:	mov	r3, #56	; 0x38
   1f468:	ldr	r2, [pc, #40]	; 1f498 <zsav_add_block+0x8c>
   1f46c:	ldr	r1, [r4, #32]
   1f470:	add	r2, pc, r2
   1f474:	bl	4144 <deflateInit_@plt>
   1f478:	mov	r0, r6
   1f47c:	ldr	r1, [r4, #16]
   1f480:	bl	3e98 <deflateBound@plt>
   1f484:	str	r0, [r5, #68]	; 0x44
   1f488:	bl	412c <malloc@plt>
   1f48c:	str	r0, [r5, #64]	; 0x40
   1f490:	mov	r0, r5
   1f494:	pop	{r4, r5, r6, pc}
   1f498:	.word	0x000100ff

0001f49c <zsav_current_block>:
   1f49c:	ldr	r3, [r0, #8]
   1f4a0:	cmp	r3, #0
   1f4a4:	ldrne	r2, [r0, #4]
   1f4a8:	subne	r3, r3, #-1073741823	; 0xc0000001
   1f4ac:	ldrne	r0, [r2, r3, lsl #2]
   1f4b0:	moveq	r0, r3
   1f4b4:	bx	lr

0001f4b8 <zsav_compress_row>:
   1f4b8:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   1f4bc:	mov	sl, r0
   1f4c0:	mov	r0, r3
   1f4c4:	mov	r7, r1
   1f4c8:	mov	r9, r2
   1f4cc:	mov	r5, r3
   1f4d0:	bl	40c0 <zsav_current_block@plt>
   1f4d4:	subs	r4, r0, #0
   1f4d8:	bne	1f4e8 <zsav_compress_row+0x30>
   1f4dc:	mov	r0, r5
   1f4e0:	bl	4138 <zsav_add_block@plt>
   1f4e4:	mov	r4, r0
   1f4e8:	ldr	r1, [r4, #4]
   1f4ec:	mov	r6, #0
   1f4f0:	str	sl, [r4, #8]
   1f4f4:	ldrd	r2, [r4, #64]	; 0x40
   1f4f8:	str	r7, [r4, #12]
   1f4fc:	add	r2, r2, r1
   1f500:	sub	r3, r3, r1
   1f504:	strd	r2, [r4, #20]
   1f508:	ldrd	r2, [r5, #16]
   1f50c:	mov	r1, #0
   1f510:	mov	lr, r4
   1f514:	sub	r8, r7, r6
   1f518:	ldr	ip, [lr], #8
   1f51c:	strd	r2, [sp]
   1f520:	mov	r3, r1
   1f524:	ldrd	r0, [sp]
   1f528:	subs	r0, r0, ip
   1f52c:	sbc	r1, r1, ip, asr #31
   1f530:	cmp	r0, r8
   1f534:	sbcs	r3, r1, r3
   1f538:	blt	1f57c <zsav_compress_row+0xc4>
   1f53c:	cmp	r9, #0
   1f540:	mov	r0, lr
   1f544:	moveq	r1, r9
   1f548:	movne	r1, #4
   1f54c:	bl	4054 <deflate@plt>
   1f550:	ldr	r2, [r4, #24]
   1f554:	ldr	r3, [r4, #68]	; 0x44
   1f558:	sub	r3, r3, r2
   1f55c:	ldr	r2, [r4, #12]
   1f560:	str	r3, [r4, #4]
   1f564:	ldr	r3, [r4]
   1f568:	sub	r3, r3, r2
   1f56c:	add	r8, r3, r8
   1f570:	str	r8, [r4]
   1f574:	add	sp, sp, #8
   1f578:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1f57c:	ldr	r3, [sp]
   1f580:	mov	r1, #4
   1f584:	mov	r0, lr
   1f588:	sub	r2, r3, ip
   1f58c:	add	r6, r2, r6
   1f590:	str	r2, [r4, #12]
   1f594:	bl	4054 <deflate@plt>
   1f598:	cmp	r0, #1
   1f59c:	bne	1f574 <zsav_compress_row+0xbc>
   1f5a0:	ldr	r2, [r4, #24]
   1f5a4:	mov	r0, r5
   1f5a8:	ldr	r3, [r4, #68]	; 0x44
   1f5ac:	sub	r3, r3, r2
   1f5b0:	ldr	r2, [r4, #12]
   1f5b4:	str	r3, [r4, #4]
   1f5b8:	ldr	r3, [r5, #16]
   1f5bc:	sub	r3, r3, r2
   1f5c0:	str	r3, [r4]
   1f5c4:	bl	4138 <zsav_add_block@plt>
   1f5c8:	add	r3, sl, r6
   1f5cc:	mov	r4, r0
   1f5d0:	str	r3, [r0, #8]
   1f5d4:	sub	r3, r7, r6
   1f5d8:	str	r3, [r0, #12]
   1f5dc:	ldr	r3, [r0, #64]	; 0x40
   1f5e0:	str	r3, [r0, #20]
   1f5e4:	ldr	r3, [r0, #68]	; 0x44
   1f5e8:	str	r3, [r0, #24]
   1f5ec:	b	1f508 <zsav_compress_row+0x50>

0001f5f0 <zsav_read_compressed_data>:
   1f5f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f5f4:	sub	sp, sp, #148	; 0x94
   1f5f8:	mov	r4, r0
   1f5fc:	mov	r2, #56	; 0x38
   1f600:	str	r1, [sp, #16]
   1f604:	mov	r1, #0
   1f608:	ldr	r5, [r0, #36]	; 0x24
   1f60c:	str	r1, [sp, #36]	; 0x24
   1f610:	ldr	r8, [r0, #344]	; 0x158
   1f614:	add	r0, sp, #88	; 0x58
   1f618:	bl	42b8 <memset@plt>
   1f61c:	add	r3, r4, #400	; 0x190
   1f620:	mov	r1, #24
   1f624:	ldrd	r2, [r3, #-8]
   1f628:	add	r0, sp, #40	; 0x28
   1f62c:	strd	r2, [sp, #104]	; 0x68
   1f630:	add	r3, r4, #416	; 0x1a0
   1f634:	ldrd	r2, [r3]
   1f638:	strd	r2, [sp, #112]	; 0x70
   1f63c:	ldrb	r3, [r4, #436]	; 0x1b4
   1f640:	ldr	r2, [r5, #20]
   1f644:	and	r3, r3, #1
   1f648:	str	r3, [sp, #132]	; 0x84
   1f64c:	ldr	r3, [r5, #12]
   1f650:	blx	r3
   1f654:	cmp	r0, #23
   1f658:	bls	1fa90 <zsav_read_compressed_data+0x4a0>
   1f65c:	ldrb	r3, [r4, #436]	; 0x1b4
   1f660:	ldrd	r0, [sp, #40]	; 0x28
   1f664:	tst	r3, #1
   1f668:	beq	1f670 <zsav_read_compressed_data+0x80>
   1f66c:	bl	3d90 <byteswap8@plt>
   1f670:	ldrb	r3, [r4, #436]	; 0x1b4
   1f674:	strd	r0, [sp, #40]	; 0x28
   1f678:	ldrd	r0, [sp, #48]	; 0x30
   1f67c:	tst	r3, #1
   1f680:	beq	1f688 <zsav_read_compressed_data+0x98>
   1f684:	bl	3d90 <byteswap8@plt>
   1f688:	ldrb	r3, [r4, #436]	; 0x1b4
   1f68c:	strd	r0, [sp, #48]	; 0x30
   1f690:	ldrd	r0, [sp, #56]	; 0x38
   1f694:	tst	r3, #1
   1f698:	beq	1f6a0 <zsav_read_compressed_data+0xb0>
   1f69c:	bl	3d90 <byteswap8@plt>
   1f6a0:	ldrd	r6, [sp, #40]	; 0x28
   1f6a4:	ldr	r3, [r5, #8]
   1f6a8:	ldr	r2, [r5, #20]
   1f6ac:	strd	r0, [sp, #56]	; 0x38
   1f6b0:	mov	r1, #1
   1f6b4:	mov	r0, #0
   1f6b8:	blx	r3
   1f6bc:	mov	r1, #0
   1f6c0:	sub	r0, r0, #24
   1f6c4:	cmp	r7, r1
   1f6c8:	cmpeq	r6, r0
   1f6cc:	beq	1f6e0 <zsav_read_compressed_data+0xf0>
   1f6d0:	mov	fp, #5
   1f6d4:	mov	r0, fp
   1f6d8:	add	sp, sp, #148	; 0x94
   1f6dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f6e0:	mov	r1, #0
   1f6e4:	ldr	r3, [r5, #8]
   1f6e8:	ldr	r2, [r5, #20]
   1f6ec:	ldr	r0, [sp, #48]	; 0x30
   1f6f0:	ldr	r7, [sp, #56]	; 0x38
   1f6f4:	ldr	r9, [sp, #60]	; 0x3c
   1f6f8:	blx	r3
   1f6fc:	cmn	r0, #1
   1f700:	moveq	fp, #15
   1f704:	beq	1f6d4 <zsav_read_compressed_data+0xe4>
   1f708:	mov	r1, #24
   1f70c:	add	r0, sp, #64	; 0x40
   1f710:	ldr	r3, [r5, #12]
   1f714:	ldr	r2, [r5, #20]
   1f718:	blx	r3
   1f71c:	cmp	r0, #23
   1f720:	bls	1fa90 <zsav_read_compressed_data+0x4a0>
   1f724:	ldrb	r3, [r4, #436]	; 0x1b4
   1f728:	ldrd	r0, [sp, #64]	; 0x40
   1f72c:	tst	r3, #1
   1f730:	beq	1f738 <zsav_read_compressed_data+0x148>
   1f734:	bl	3d90 <byteswap8@plt>
   1f738:	ldrb	r3, [r4, #436]	; 0x1b4
   1f73c:	strd	r0, [sp, #64]	; 0x40
   1f740:	ldrd	r0, [sp, #72]	; 0x48
   1f744:	tst	r3, #1
   1f748:	beq	1f750 <zsav_read_compressed_data+0x160>
   1f74c:	bl	3d90 <byteswap8@plt>
   1f750:	ldrb	r3, [r4, #436]	; 0x1b4
   1f754:	strd	r0, [sp, #72]	; 0x48
   1f758:	ldr	r0, [sp, #80]	; 0x50
   1f75c:	tst	r3, #1
   1f760:	beq	1f768 <zsav_read_compressed_data+0x178>
   1f764:	bl	3da8 <byteswap4@plt>
   1f768:	ldrb	r3, [r4, #436]	; 0x1b4
   1f76c:	str	r0, [sp, #80]	; 0x50
   1f770:	ldr	r6, [sp, #84]	; 0x54
   1f774:	tst	r3, #1
   1f778:	beq	1f788 <zsav_read_compressed_data+0x198>
   1f77c:	mov	r0, r6
   1f780:	bl	3da8 <byteswap4@plt>
   1f784:	mov	r6, r0
   1f788:	subs	r0, r7, #24
   1f78c:	mov	r2, #24
   1f790:	sbc	r1, r9, #0
   1f794:	mov	r3, #0
   1f798:	bl	201ec <__aeabi_uldivmod>
   1f79c:	cmp	r6, r0
   1f7a0:	str	r0, [sp, #12]
   1f7a4:	str	r6, [sp, #84]	; 0x54
   1f7a8:	bne	1f6d0 <zsav_read_compressed_data+0xe0>
   1f7ac:	mov	r9, #24
   1f7b0:	cmp	r6, #0
   1f7b4:	ldreq	r7, [sp, #12]
   1f7b8:	mul	r9, r9, r6
   1f7bc:	beq	1f7d4 <zsav_read_compressed_data+0x1e4>
   1f7c0:	mov	r0, r9
   1f7c4:	bl	4240 <readstat_malloc@plt>
   1f7c8:	subs	r7, r0, #0
   1f7cc:	moveq	fp, #3
   1f7d0:	beq	1f6d4 <zsav_read_compressed_data+0xe4>
   1f7d4:	mov	r1, r9
   1f7d8:	mov	r0, r7
   1f7dc:	ldr	r3, [r5, #12]
   1f7e0:	ldr	r2, [r5, #20]
   1f7e4:	blx	r3
   1f7e8:	cmp	r0, r9
   1f7ec:	movcs	r6, r7
   1f7f0:	movcs	sl, r7
   1f7f4:	movcs	r9, #0
   1f7f8:	bcs	1f884 <zsav_read_compressed_data+0x294>
   1f7fc:	mov	fp, #2
   1f800:	cmp	r7, #0
   1f804:	movne	r8, #0
   1f808:	movne	r9, r8
   1f80c:	beq	1f6d4 <zsav_read_compressed_data+0xe4>
   1f810:	mov	r0, r7
   1f814:	bl	3ed4 <free@plt>
   1f818:	b	1fa4c <zsav_read_compressed_data+0x45c>
   1f81c:	ldrb	r3, [r4, #436]	; 0x1b4
   1f820:	ldrd	r0, [sl]
   1f824:	tst	r3, #1
   1f828:	beq	1f830 <zsav_read_compressed_data+0x240>
   1f82c:	bl	3d90 <byteswap8@plt>
   1f830:	strd	r0, [sl]
   1f834:	ldrb	r3, [r4, #436]	; 0x1b4
   1f838:	ldrd	r0, [sl, #8]
   1f83c:	tst	r3, #1
   1f840:	beq	1f848 <zsav_read_compressed_data+0x258>
   1f844:	bl	3d90 <byteswap8@plt>
   1f848:	strd	r0, [sl, #8]
   1f84c:	ldrb	r3, [r4, #436]	; 0x1b4
   1f850:	ldr	r0, [sl, #16]
   1f854:	tst	r3, #1
   1f858:	beq	1f860 <zsav_read_compressed_data+0x270>
   1f85c:	bl	3da8 <byteswap4@plt>
   1f860:	str	r0, [sl, #16]
   1f864:	ldrb	r3, [r4, #436]	; 0x1b4
   1f868:	ldr	r0, [sl, #20]
   1f86c:	tst	r3, #1
   1f870:	beq	1f878 <zsav_read_compressed_data+0x288>
   1f874:	bl	3da8 <byteswap4@plt>
   1f878:	add	r9, r9, #1
   1f87c:	add	sl, sl, #24
   1f880:	str	r0, [sl, #-4]
   1f884:	ldr	r3, [sp, #12]
   1f888:	cmp	r9, r3
   1f88c:	blt	1f81c <zsav_read_compressed_data+0x22c>
   1f890:	lsls	r3, r8, #3
   1f894:	str	r3, [sp, #4]
   1f898:	ldreq	r3, [sp, #4]
   1f89c:	streq	r3, [sp, #8]
   1f8a0:	beq	1f8bc <zsav_read_compressed_data+0x2cc>
   1f8a4:	mov	r0, r3
   1f8a8:	bl	4240 <readstat_malloc@plt>
   1f8ac:	subs	r3, r0, #0
   1f8b0:	str	r3, [sp, #8]
   1f8b4:	moveq	fp, #3
   1f8b8:	beq	1f800 <zsav_read_compressed_data+0x210>
   1f8bc:	mov	sl, #0
   1f8c0:	add	r3, sp, #36	; 0x24
   1f8c4:	mov	r8, sl
   1f8c8:	mov	r9, sl
   1f8cc:	mov	fp, sl
   1f8d0:	str	r3, [sp, #24]
   1f8d4:	ldr	r3, [sp, #12]
   1f8d8:	cmp	sl, r3
   1f8dc:	beq	1fa88 <zsav_read_compressed_data+0x498>
   1f8e0:	mov	r1, #0
   1f8e4:	ldr	r3, [r5, #8]
   1f8e8:	ldr	r0, [r6, #8]
   1f8ec:	ldr	r2, [r5, #20]
   1f8f0:	blx	r3
   1f8f4:	cmn	r0, #1
   1f8f8:	beq	1fa2c <zsav_read_compressed_data+0x43c>
   1f8fc:	mov	r0, r9
   1f900:	ldr	r1, [r6, #20]
   1f904:	bl	4300 <readstat_realloc@plt>
   1f908:	subs	r9, r0, #0
   1f90c:	beq	1fa78 <zsav_read_compressed_data+0x488>
   1f910:	ldr	r3, [r5, #12]
   1f914:	ldr	r2, [r5, #20]
   1f918:	ldr	r1, [r6, #20]
   1f91c:	blx	r3
   1f920:	ldr	r3, [r6, #20]
   1f924:	cmp	r0, r3
   1f928:	bne	1fa70 <zsav_read_compressed_data+0x480>
   1f92c:	ldr	r1, [r6, #16]
   1f930:	mov	r0, r8
   1f934:	str	r1, [sp, #36]	; 0x24
   1f938:	bl	4300 <readstat_realloc@plt>
   1f93c:	subs	r8, r0, #0
   1f940:	beq	1fa78 <zsav_read_compressed_data+0x488>
   1f944:	mov	r2, r9
   1f948:	ldr	r3, [r6, #20]
   1f94c:	ldr	r1, [sp, #24]
   1f950:	bl	3fac <uncompress@plt>
   1f954:	subs	r3, r0, #0
   1f958:	bne	1fa80 <zsav_read_compressed_data+0x490>
   1f95c:	ldr	r1, [r6, #16]
   1f960:	ldr	r2, [sp, #36]	; 0x24
   1f964:	cmp	r1, r2
   1f968:	bne	1fa80 <zsav_read_compressed_data+0x490>
   1f96c:	mov	r2, #1
   1f970:	add	sl, sl, #1
   1f974:	str	r2, [sp, #136]	; 0x88
   1f978:	add	r2, sp, #88	; 0x58
   1f97c:	str	r2, [sp, #20]
   1f980:	ldr	r0, [sp, #36]	; 0x24
   1f984:	add	r2, r8, r3
   1f988:	sub	r3, r0, r3
   1f98c:	ldr	r0, [sp, #20]
   1f990:	strd	r2, [sp, #88]	; 0x58
   1f994:	ldr	r3, [sp, #8]
   1f998:	add	r3, r3, fp
   1f99c:	str	r3, [sp, #96]	; 0x60
   1f9a0:	ldr	r3, [sp, #4]
   1f9a4:	sub	r3, r3, fp
   1f9a8:	str	r3, [sp, #100]	; 0x64
   1f9ac:	bl	4228 <sav_decompress_row@plt>
   1f9b0:	ldr	r3, [sp, #36]	; 0x24
   1f9b4:	ldr	r2, [sp, #136]	; 0x88
   1f9b8:	ldr	r0, [sp, #92]	; 0x5c
   1f9bc:	cmp	r2, #2
   1f9c0:	ldrne	r1, [sp, #4]
   1f9c4:	sub	r3, r3, r0
   1f9c8:	ldrne	r2, [sp, #100]	; 0x64
   1f9cc:	subne	fp, r1, r2
   1f9d0:	bne	1f9f8 <zsav_read_compressed_data+0x408>
   1f9d4:	mov	r2, r4
   1f9d8:	str	r3, [sp, #28]
   1f9dc:	ldr	r1, [sp, #4]
   1f9e0:	ldr	r0, [sp, #8]
   1f9e4:	ldr	r3, [sp, #16]
   1f9e8:	blx	r3
   1f9ec:	subs	fp, r0, #0
   1f9f0:	bne	1fa30 <zsav_read_compressed_data+0x440>
   1f9f4:	ldr	r3, [sp, #28]
   1f9f8:	ldr	r2, [sp, #136]	; 0x88
   1f9fc:	cmp	r2, #3
   1fa00:	beq	1fa88 <zsav_read_compressed_data+0x498>
   1fa04:	ldr	r1, [r4, #356]	; 0x164
   1fa08:	cmp	r1, #0
   1fa0c:	ble	1fa1c <zsav_read_compressed_data+0x42c>
   1fa10:	ldr	r0, [r4, #364]	; 0x16c
   1fa14:	cmp	r1, r0
   1fa18:	beq	1fa88 <zsav_read_compressed_data+0x498>
   1fa1c:	cmp	r2, #0
   1fa20:	bne	1f980 <zsav_read_compressed_data+0x390>
   1fa24:	add	r6, r6, #24
   1fa28:	b	1f8d4 <zsav_read_compressed_data+0x2e4>
   1fa2c:	mov	fp, #15
   1fa30:	ldr	r3, [sp, #8]
   1fa34:	cmp	r3, #0
   1fa38:	beq	1fa44 <zsav_read_compressed_data+0x454>
   1fa3c:	mov	r0, r3
   1fa40:	bl	3ed4 <free@plt>
   1fa44:	cmp	r7, #0
   1fa48:	bne	1f810 <zsav_read_compressed_data+0x220>
   1fa4c:	cmp	r9, #0
   1fa50:	beq	1fa5c <zsav_read_compressed_data+0x46c>
   1fa54:	mov	r0, r9
   1fa58:	bl	3ed4 <free@plt>
   1fa5c:	cmp	r8, #0
   1fa60:	beq	1f6d4 <zsav_read_compressed_data+0xe4>
   1fa64:	mov	r0, r8
   1fa68:	bl	3ed4 <free@plt>
   1fa6c:	b	1f6d4 <zsav_read_compressed_data+0xe4>
   1fa70:	mov	fp, #2
   1fa74:	b	1fa30 <zsav_read_compressed_data+0x440>
   1fa78:	mov	fp, #3
   1fa7c:	b	1fa30 <zsav_read_compressed_data+0x440>
   1fa80:	mov	fp, #5
   1fa84:	b	1fa30 <zsav_read_compressed_data+0x440>
   1fa88:	mov	fp, #0
   1fa8c:	b	1fa30 <zsav_read_compressed_data+0x440>
   1fa90:	mov	fp, #2
   1fa94:	b	1f6d4 <zsav_read_compressed_data+0xe4>

0001fa98 <zsav_write_compressed_row>:
   1fa98:	push	{r4, r5, r6, lr}
   1fa9c:	mov	r3, r0
   1faa0:	mov	r4, r0
   1faa4:	ldr	r5, [r0, #300]	; 0x12c
   1faa8:	ldr	r0, [r5]
   1faac:	bl	4480 <sav_compress_row@plt>
   1fab0:	ldr	r1, [r4, #80]	; 0x50
   1fab4:	mov	r3, r5
   1fab8:	ldr	r2, [r4, #84]	; 0x54
   1fabc:	add	r2, r2, #1
   1fac0:	sub	r2, r2, r1
   1fac4:	mov	r1, r0
   1fac8:	ldr	r0, [r5]
   1facc:	clz	r2, r2
   1fad0:	lsr	r2, r2, #5
   1fad4:	bl	44d4 <zsav_compress_row@plt>
   1fad8:	cmp	r0, #1
   1fadc:	movhi	r0, #13
   1fae0:	movls	r0, #0
   1fae4:	pop	{r4, r5, r6, pc}

0001fae8 <zsav_end_data>:
   1fae8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1faec:	sub	sp, sp, #60	; 0x3c
   1faf0:	mov	r4, r0
   1faf4:	ldr	r6, [r0, #300]	; 0x12c
   1faf8:	ldr	r1, [r6, #8]
   1fafc:	ldr	r3, [r6, #24]
   1fb00:	ldr	r2, [r6, #28]
   1fb04:	adds	r8, r3, #24
   1fb08:	str	r3, [sp, #32]
   1fb0c:	adc	r9, r2, #0
   1fb10:	str	r2, [sp, #36]	; 0x24
   1fb14:	mov	r2, #24
   1fb18:	mla	r2, r1, r2, r2
   1fb1c:	strd	r8, [sp, #40]	; 0x28
   1fb20:	asr	r3, r2, #31
   1fb24:	strd	r2, [sp, #48]	; 0x30
   1fb28:	mov	r2, #0
   1fb2c:	mov	r3, r2
   1fb30:	cmp	r1, r3
   1fb34:	bgt	1fba8 <zsav_end_data+0xc0>
   1fb38:	cmp	r2, #0
   1fb3c:	add	sl, sp, #32
   1fb40:	mov	r2, #8
   1fb44:	mov	r1, sl
   1fb48:	mov	r0, r4
   1fb4c:	strdne	r8, [sp, #40]	; 0x28
   1fb50:	bl	4474 <readstat_write_bytes@plt>
   1fb54:	subs	r5, r0, #0
   1fb58:	bne	1fb9c <zsav_end_data+0xb4>
   1fb5c:	add	fp, sp, #40	; 0x28
   1fb60:	mov	r2, #8
   1fb64:	mov	r1, fp
   1fb68:	mov	r0, r4
   1fb6c:	bl	4474 <readstat_write_bytes@plt>
   1fb70:	subs	r5, r0, #0
   1fb74:	bne	1fb9c <zsav_end_data+0xb4>
   1fb78:	add	r3, sp, #48	; 0x30
   1fb7c:	mov	r2, #8
   1fb80:	mov	r1, r3
   1fb84:	mov	r0, r4
   1fb88:	str	r3, [sp, #4]
   1fb8c:	bl	4474 <readstat_write_bytes@plt>
   1fb90:	subs	r5, r0, #0
   1fb94:	moveq	r7, r5
   1fb98:	beq	1fbec <zsav_end_data+0x104>
   1fb9c:	mov	r0, r5
   1fba0:	add	sp, sp, #60	; 0x3c
   1fba4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fba8:	ldr	r2, [r6, #4]
   1fbac:	ldr	r2, [r2, r3, lsl #2]
   1fbb0:	add	r3, r3, #1
   1fbb4:	ldr	r2, [r2, #4]
   1fbb8:	adds	r8, r8, r2
   1fbbc:	adc	r9, r9, r2, asr #31
   1fbc0:	mov	r2, #1
   1fbc4:	b	1fb30 <zsav_end_data+0x48>
   1fbc8:	ldr	r3, [r6, #4]
   1fbcc:	mov	r0, r4
   1fbd0:	ldr	r3, [r3, r7, lsl #2]
   1fbd4:	ldr	r2, [r3, #4]
   1fbd8:	ldr	r1, [r3, #64]	; 0x40
   1fbdc:	bl	4474 <readstat_write_bytes@plt>
   1fbe0:	subs	r5, r0, #0
   1fbe4:	bne	1fb9c <zsav_end_data+0xb4>
   1fbe8:	add	r7, r7, #1
   1fbec:	ldr	r3, [r6, #8]
   1fbf0:	cmp	r7, r3
   1fbf4:	blt	1fbc8 <zsav_end_data+0xe0>
   1fbf8:	mvn	r0, #99	; 0x63
   1fbfc:	mvn	r1, #0
   1fc00:	str	r3, [sp, #12]
   1fc04:	strd	r0, [sp, #24]
   1fc08:	mov	r0, #0
   1fc0c:	mov	r1, #0
   1fc10:	strd	r0, [sp, #32]
   1fc14:	add	r1, sp, #24
   1fc18:	mov	r0, r4
   1fc1c:	ldr	r2, [r6, #16]
   1fc20:	str	r2, [sp, #8]
   1fc24:	mov	r2, #8
   1fc28:	bl	4474 <readstat_write_bytes@plt>
   1fc2c:	subs	r5, r0, #0
   1fc30:	bne	1fb9c <zsav_end_data+0xb4>
   1fc34:	mov	r2, #8
   1fc38:	mov	r1, sl
   1fc3c:	mov	r0, r4
   1fc40:	bl	4474 <readstat_write_bytes@plt>
   1fc44:	subs	r5, r0, #0
   1fc48:	bne	1fb9c <zsav_end_data+0xb4>
   1fc4c:	mov	r2, #4
   1fc50:	add	r1, sp, #8
   1fc54:	mov	r0, r4
   1fc58:	bl	4474 <readstat_write_bytes@plt>
   1fc5c:	subs	r5, r0, #0
   1fc60:	bne	1fb9c <zsav_end_data+0xb4>
   1fc64:	mov	r2, #4
   1fc68:	add	r1, sp, #12
   1fc6c:	mov	r0, r4
   1fc70:	bl	4474 <readstat_write_bytes@plt>
   1fc74:	subs	r5, r0, #0
   1fc78:	bne	1fb9c <zsav_end_data+0xb4>
   1fc7c:	ldr	r3, [r6, #24]
   1fc80:	mov	r7, r5
   1fc84:	add	sl, sp, #16
   1fc88:	ldr	r2, [r6, #28]
   1fc8c:	str	r3, [sp, #40]	; 0x28
   1fc90:	adds	r3, r3, #24
   1fc94:	str	r2, [sp, #44]	; 0x2c
   1fc98:	adc	r2, r2, #0
   1fc9c:	str	r3, [sp, #48]	; 0x30
   1fca0:	str	r2, [sp, #52]	; 0x34
   1fca4:	ldr	r3, [r6, #8]
   1fca8:	cmp	r7, r3
   1fcac:	bge	1fb9c <zsav_end_data+0xb4>
   1fcb0:	ldr	r3, [r6, #4]
   1fcb4:	mov	r1, fp
   1fcb8:	mov	r0, r4
   1fcbc:	ldr	r3, [r3, r7, lsl #2]
   1fcc0:	ldrd	r2, [r3]
   1fcc4:	strd	r2, [sp, #16]
   1fcc8:	mov	r2, #8
   1fccc:	bl	4474 <readstat_write_bytes@plt>
   1fcd0:	cmp	r0, #0
   1fcd4:	bne	1fd50 <zsav_end_data+0x268>
   1fcd8:	mov	r2, #8
   1fcdc:	mov	r0, r4
   1fce0:	ldr	r1, [sp, #4]
   1fce4:	bl	4474 <readstat_write_bytes@plt>
   1fce8:	cmp	r0, #0
   1fcec:	bne	1fd50 <zsav_end_data+0x268>
   1fcf0:	mov	r2, #4
   1fcf4:	mov	r1, sl
   1fcf8:	mov	r0, r4
   1fcfc:	bl	4474 <readstat_write_bytes@plt>
   1fd00:	cmp	r0, #0
   1fd04:	bne	1fd50 <zsav_end_data+0x268>
   1fd08:	mov	r2, #4
   1fd0c:	add	r1, sp, #20
   1fd10:	mov	r0, r4
   1fd14:	bl	4474 <readstat_write_bytes@plt>
   1fd18:	cmp	r0, #0
   1fd1c:	bne	1fd50 <zsav_end_data+0x268>
   1fd20:	ldr	r1, [sp, #16]
   1fd24:	add	r7, r7, #1
   1fd28:	ldrd	r2, [sp, #40]	; 0x28
   1fd2c:	adds	r8, r2, r1
   1fd30:	adc	r9, r3, r1, asr #31
   1fd34:	ldr	r1, [sp, #20]
   1fd38:	ldrd	r2, [sp, #48]	; 0x30
   1fd3c:	strd	r8, [sp, #40]	; 0x28
   1fd40:	adds	r8, r2, r1
   1fd44:	adc	r9, r3, r1, asr #31
   1fd48:	strd	r8, [sp, #48]	; 0x30
   1fd4c:	b	1fca4 <zsav_end_data+0x1bc>
   1fd50:	mov	r5, r0
   1fd54:	b	1fb9c <zsav_end_data+0xb4>

0001fd58 <__aeabi_drsub>:
   1fd58:	eor	r1, r1, #-2147483648	; 0x80000000
   1fd5c:	b	1fd64 <__adddf3>

0001fd60 <__aeabi_dsub>:
   1fd60:	eor	r3, r3, #-2147483648	; 0x80000000

0001fd64 <__adddf3>:
   1fd64:	push	{r4, r5, lr}
   1fd68:	lsl	r4, r1, #1
   1fd6c:	lsl	r5, r3, #1
   1fd70:	teq	r4, r5
   1fd74:	teqeq	r0, r2
   1fd78:	orrsne	ip, r4, r0
   1fd7c:	orrsne	ip, r5, r2
   1fd80:	mvnsne	ip, r4, asr #21
   1fd84:	mvnsne	ip, r5, asr #21
   1fd88:	beq	1ff74 <__adddf3+0x210>
   1fd8c:	lsr	r4, r4, #21
   1fd90:	rsbs	r5, r4, r5, lsr #21
   1fd94:	rsblt	r5, r5, #0
   1fd98:	ble	1fdb8 <__adddf3+0x54>
   1fd9c:	add	r4, r4, r5
   1fda0:	eor	r2, r0, r2
   1fda4:	eor	r3, r1, r3
   1fda8:	eor	r0, r2, r0
   1fdac:	eor	r1, r3, r1
   1fdb0:	eor	r2, r0, r2
   1fdb4:	eor	r3, r1, r3
   1fdb8:	cmp	r5, #54	; 0x36
   1fdbc:	pophi	{r4, r5, pc}
   1fdc0:	tst	r1, #-2147483648	; 0x80000000
   1fdc4:	lsl	r1, r1, #12
   1fdc8:	mov	ip, #1048576	; 0x100000
   1fdcc:	orr	r1, ip, r1, lsr #12
   1fdd0:	beq	1fddc <__adddf3+0x78>
   1fdd4:	rsbs	r0, r0, #0
   1fdd8:	rsc	r1, r1, #0
   1fddc:	tst	r3, #-2147483648	; 0x80000000
   1fde0:	lsl	r3, r3, #12
   1fde4:	orr	r3, ip, r3, lsr #12
   1fde8:	beq	1fdf4 <__adddf3+0x90>
   1fdec:	rsbs	r2, r2, #0
   1fdf0:	rsc	r3, r3, #0
   1fdf4:	teq	r4, r5
   1fdf8:	beq	1ff5c <__adddf3+0x1f8>
   1fdfc:	sub	r4, r4, #1
   1fe00:	rsbs	lr, r5, #32
   1fe04:	blt	1fe20 <__adddf3+0xbc>
   1fe08:	lsl	ip, r2, lr
   1fe0c:	adds	r0, r0, r2, lsr r5
   1fe10:	adc	r1, r1, #0
   1fe14:	adds	r0, r0, r3, lsl lr
   1fe18:	adcs	r1, r1, r3, asr r5
   1fe1c:	b	1fe3c <__adddf3+0xd8>
   1fe20:	sub	r5, r5, #32
   1fe24:	add	lr, lr, #32
   1fe28:	cmp	r2, #1
   1fe2c:	lsl	ip, r3, lr
   1fe30:	orrcs	ip, ip, #2
   1fe34:	adds	r0, r0, r3, asr r5
   1fe38:	adcs	r1, r1, r3, asr #31
   1fe3c:	and	r5, r1, #-2147483648	; 0x80000000
   1fe40:	bpl	1fe50 <__adddf3+0xec>
   1fe44:	rsbs	ip, ip, #0
   1fe48:	rscs	r0, r0, #0
   1fe4c:	rsc	r1, r1, #0
   1fe50:	cmp	r1, #1048576	; 0x100000
   1fe54:	bcc	1fe94 <__adddf3+0x130>
   1fe58:	cmp	r1, #2097152	; 0x200000
   1fe5c:	bcc	1fe7c <__adddf3+0x118>
   1fe60:	lsrs	r1, r1, #1
   1fe64:	rrxs	r0, r0
   1fe68:	rrx	ip, ip
   1fe6c:	add	r4, r4, #1
   1fe70:	lsl	r2, r4, #21
   1fe74:	cmn	r2, #4194304	; 0x400000
   1fe78:	bcs	1ffd4 <__adddf3+0x270>
   1fe7c:	cmp	ip, #-2147483648	; 0x80000000
   1fe80:	lsrseq	ip, r0, #1
   1fe84:	adcs	r0, r0, #0
   1fe88:	adc	r1, r1, r4, lsl #20
   1fe8c:	orr	r1, r1, r5
   1fe90:	pop	{r4, r5, pc}
   1fe94:	lsls	ip, ip, #1
   1fe98:	adcs	r0, r0, r0
   1fe9c:	adc	r1, r1, r1
   1fea0:	tst	r1, #1048576	; 0x100000
   1fea4:	sub	r4, r4, #1
   1fea8:	bne	1fe7c <__adddf3+0x118>
   1feac:	teq	r1, #0
   1feb0:	moveq	r1, r0
   1feb4:	moveq	r0, #0
   1feb8:	clz	r3, r1
   1febc:	addeq	r3, r3, #32
   1fec0:	sub	r3, r3, #11
   1fec4:	subs	r2, r3, #32
   1fec8:	bge	1feec <__adddf3+0x188>
   1fecc:	adds	r2, r2, #12
   1fed0:	ble	1fee8 <__adddf3+0x184>
   1fed4:	add	ip, r2, #20
   1fed8:	rsb	r2, r2, #12
   1fedc:	lsl	r0, r1, ip
   1fee0:	lsr	r1, r1, r2
   1fee4:	b	1fefc <__adddf3+0x198>
   1fee8:	add	r2, r2, #20
   1feec:	rsble	ip, r2, #32
   1fef0:	lsl	r1, r1, r2
   1fef4:	orrle	r1, r1, r0, lsr ip
   1fef8:	lslle	r0, r0, r2
   1fefc:	subs	r4, r4, r3
   1ff00:	addge	r1, r1, r4, lsl #20
   1ff04:	orrge	r1, r1, r5
   1ff08:	popge	{r4, r5, pc}
   1ff0c:	mvn	r4, r4
   1ff10:	subs	r4, r4, #31
   1ff14:	bge	1ff50 <__adddf3+0x1ec>
   1ff18:	adds	r4, r4, #12
   1ff1c:	bgt	1ff38 <__adddf3+0x1d4>
   1ff20:	add	r4, r4, #20
   1ff24:	rsb	r2, r4, #32
   1ff28:	lsr	r0, r0, r4
   1ff2c:	orr	r0, r0, r1, lsl r2
   1ff30:	orr	r1, r5, r1, lsr r4
   1ff34:	pop	{r4, r5, pc}
   1ff38:	rsb	r4, r4, #12
   1ff3c:	rsb	r2, r4, #32
   1ff40:	lsr	r0, r0, r2
   1ff44:	orr	r0, r0, r1, lsl r4
   1ff48:	mov	r1, r5
   1ff4c:	pop	{r4, r5, pc}
   1ff50:	lsr	r0, r1, r4
   1ff54:	mov	r1, r5
   1ff58:	pop	{r4, r5, pc}
   1ff5c:	teq	r4, #0
   1ff60:	eor	r3, r3, #1048576	; 0x100000
   1ff64:	eoreq	r1, r1, #1048576	; 0x100000
   1ff68:	addeq	r4, r4, #1
   1ff6c:	subne	r5, r5, #1
   1ff70:	b	1fdfc <__adddf3+0x98>
   1ff74:	mvns	ip, r4, asr #21
   1ff78:	mvnsne	ip, r5, asr #21
   1ff7c:	beq	1ffe4 <__adddf3+0x280>
   1ff80:	teq	r4, r5
   1ff84:	teqeq	r0, r2
   1ff88:	beq	1ff9c <__adddf3+0x238>
   1ff8c:	orrs	ip, r4, r0
   1ff90:	moveq	r1, r3
   1ff94:	moveq	r0, r2
   1ff98:	pop	{r4, r5, pc}
   1ff9c:	teq	r1, r3
   1ffa0:	movne	r1, #0
   1ffa4:	movne	r0, #0
   1ffa8:	popne	{r4, r5, pc}
   1ffac:	lsrs	ip, r4, #21
   1ffb0:	bne	1ffc4 <__adddf3+0x260>
   1ffb4:	lsls	r0, r0, #1
   1ffb8:	adcs	r1, r1, r1
   1ffbc:	orrcs	r1, r1, #-2147483648	; 0x80000000
   1ffc0:	pop	{r4, r5, pc}
   1ffc4:	adds	r4, r4, #4194304	; 0x400000
   1ffc8:	addcc	r1, r1, #1048576	; 0x100000
   1ffcc:	popcc	{r4, r5, pc}
   1ffd0:	and	r5, r1, #-2147483648	; 0x80000000
   1ffd4:	orr	r1, r5, #2130706432	; 0x7f000000
   1ffd8:	orr	r1, r1, #15728640	; 0xf00000
   1ffdc:	mov	r0, #0
   1ffe0:	pop	{r4, r5, pc}
   1ffe4:	mvns	ip, r4, asr #21
   1ffe8:	movne	r1, r3
   1ffec:	movne	r0, r2
   1fff0:	mvnseq	ip, r5, asr #21
   1fff4:	movne	r3, r1
   1fff8:	movne	r2, r0
   1fffc:	orrs	r4, r0, r1, lsl #12
   20000:	orrseq	r5, r2, r3, lsl #12
   20004:	teqeq	r1, r3
   20008:	orrne	r1, r1, #524288	; 0x80000
   2000c:	pop	{r4, r5, pc}

00020010 <__aeabi_ui2d>:
   20010:	teq	r0, #0
   20014:	moveq	r1, #0
   20018:	bxeq	lr
   2001c:	push	{r4, r5, lr}
   20020:	mov	r4, #1024	; 0x400
   20024:	add	r4, r4, #50	; 0x32
   20028:	mov	r5, #0
   2002c:	mov	r1, #0
   20030:	b	1feac <__adddf3+0x148>

00020034 <__aeabi_i2d>:
   20034:	teq	r0, #0
   20038:	moveq	r1, #0
   2003c:	bxeq	lr
   20040:	push	{r4, r5, lr}
   20044:	mov	r4, #1024	; 0x400
   20048:	add	r4, r4, #50	; 0x32
   2004c:	ands	r5, r0, #-2147483648	; 0x80000000
   20050:	rsbmi	r0, r0, #0
   20054:	mov	r1, #0
   20058:	b	1feac <__adddf3+0x148>

0002005c <__aeabi_f2d>:
   2005c:	lsls	r2, r0, #1
   20060:	asr	r1, r2, #3
   20064:	rrx	r1, r1
   20068:	lsl	r0, r2, #28
   2006c:	andsne	r3, r2, #-16777216	; 0xff000000
   20070:	teqne	r3, #-16777216	; 0xff000000
   20074:	eorne	r1, r1, #939524096	; 0x38000000
   20078:	bxne	lr
   2007c:	bics	r2, r2, #-16777216	; 0xff000000
   20080:	bxeq	lr
   20084:	teq	r3, #-16777216	; 0xff000000
   20088:	orreq	r1, r1, #524288	; 0x80000
   2008c:	bxeq	lr
   20090:	push	{r4, r5, lr}
   20094:	mov	r4, #896	; 0x380
   20098:	and	r5, r1, #-2147483648	; 0x80000000
   2009c:	bic	r1, r1, #-2147483648	; 0x80000000
   200a0:	b	1feac <__adddf3+0x148>

000200a4 <__aeabi_ul2d>:
   200a4:	orrs	r2, r0, r1
   200a8:	bxeq	lr
   200ac:	push	{r4, r5, lr}
   200b0:	mov	r5, #0
   200b4:	b	200d4 <__aeabi_l2d+0x1c>

000200b8 <__aeabi_l2d>:
   200b8:	orrs	r2, r0, r1
   200bc:	bxeq	lr
   200c0:	push	{r4, r5, lr}
   200c4:	ands	r5, r1, #-2147483648	; 0x80000000
   200c8:	bpl	200d4 <__aeabi_l2d+0x1c>
   200cc:	rsbs	r0, r0, #0
   200d0:	rsc	r1, r1, #0
   200d4:	mov	r4, #1024	; 0x400
   200d8:	add	r4, r4, #50	; 0x32
   200dc:	lsrs	ip, r1, #22
   200e0:	beq	1fe50 <__adddf3+0xec>
   200e4:	mov	r2, #3
   200e8:	lsrs	ip, ip, #3
   200ec:	addne	r2, r2, #3
   200f0:	lsrs	ip, ip, #3
   200f4:	addne	r2, r2, #3
   200f8:	add	r2, r2, ip, lsr #3
   200fc:	rsb	r3, r2, #32
   20100:	lsl	ip, r0, r3
   20104:	lsr	r0, r0, r2
   20108:	orr	r0, r0, r1, lsl r3
   2010c:	lsr	r1, r1, r2
   20110:	add	r4, r4, r2
   20114:	b	1fe50 <__adddf3+0xec>

00020118 <__aeabi_ldivmod>:
   20118:	cmp	r3, #0
   2011c:	cmpeq	r2, #0
   20120:	bne	20144 <__aeabi_ldivmod+0x2c>
   20124:	cmp	r1, #0
   20128:	movlt	r1, #-2147483648	; 0x80000000
   2012c:	movlt	r0, #0
   20130:	blt	20140 <__aeabi_ldivmod+0x28>
   20134:	cmpeq	r0, #0
   20138:	mvnne	r1, #-2147483648	; 0x80000000
   2013c:	mvnne	r0, #0
   20140:	b	20228 <__aeabi_idiv0>
   20144:	sub	sp, sp, #8
   20148:	push	{sp, lr}
   2014c:	cmp	r1, #0
   20150:	blt	20170 <__aeabi_ldivmod+0x58>
   20154:	cmp	r3, #0
   20158:	blt	201a4 <__aeabi_ldivmod+0x8c>
   2015c:	bl	202a8 <__udivmoddi4>
   20160:	ldr	lr, [sp, #4]
   20164:	add	sp, sp, #8
   20168:	pop	{r2, r3}
   2016c:	bx	lr
   20170:	rsbs	r0, r0, #0
   20174:	sbc	r1, r1, r1, lsl #1
   20178:	cmp	r3, #0
   2017c:	blt	201c8 <__aeabi_ldivmod+0xb0>
   20180:	bl	202a8 <__udivmoddi4>
   20184:	ldr	lr, [sp, #4]
   20188:	add	sp, sp, #8
   2018c:	pop	{r2, r3}
   20190:	rsbs	r0, r0, #0
   20194:	sbc	r1, r1, r1, lsl #1
   20198:	rsbs	r2, r2, #0
   2019c:	sbc	r3, r3, r3, lsl #1
   201a0:	bx	lr
   201a4:	rsbs	r2, r2, #0
   201a8:	sbc	r3, r3, r3, lsl #1
   201ac:	bl	202a8 <__udivmoddi4>
   201b0:	ldr	lr, [sp, #4]
   201b4:	add	sp, sp, #8
   201b8:	pop	{r2, r3}
   201bc:	rsbs	r0, r0, #0
   201c0:	sbc	r1, r1, r1, lsl #1
   201c4:	bx	lr
   201c8:	rsbs	r2, r2, #0
   201cc:	sbc	r3, r3, r3, lsl #1
   201d0:	bl	202a8 <__udivmoddi4>
   201d4:	ldr	lr, [sp, #4]
   201d8:	add	sp, sp, #8
   201dc:	pop	{r2, r3}
   201e0:	rsbs	r2, r2, #0
   201e4:	sbc	r3, r3, r3, lsl #1
   201e8:	bx	lr

000201ec <__aeabi_uldivmod>:
   201ec:	cmp	r3, #0
   201f0:	cmpeq	r2, #0
   201f4:	bne	2020c <__aeabi_uldivmod+0x20>
   201f8:	cmp	r1, #0
   201fc:	cmpeq	r0, #0
   20200:	mvnne	r1, #0
   20204:	mvnne	r0, #0
   20208:	b	20228 <__aeabi_idiv0>
   2020c:	sub	sp, sp, #8
   20210:	push	{sp, lr}
   20214:	bl	202a8 <__udivmoddi4>
   20218:	ldr	lr, [sp, #4]
   2021c:	add	sp, sp, #8
   20220:	pop	{r2, r3}
   20224:	bx	lr

00020228 <__aeabi_idiv0>:
   20228:	push	{r1, lr}
   2022c:	mov	r0, #8
   20230:	bl	3d9c <raise@plt>
   20234:	pop	{r1, pc}

00020238 <__aeabi_d2lz>:
   20238:	vmov	d7, r0, r1
   2023c:	vcmpe.f64	d7, #0.0
   20240:	vmrs	APSR_nzcv, fpscr
   20244:	bmi	2024c <__aeabi_d2lz+0x14>
   20248:	b	20268 <__aeabi_d2ulz>
   2024c:	push	{r4, lr}
   20250:	eor	r1, r1, #-2147483648	; 0x80000000
   20254:	bl	20268 <__aeabi_d2ulz>
   20258:	rsbs	r0, r0, #0
   2025c:	rsc	r1, r1, #0
   20260:	pop	{r4, pc}
   20264:	andeq	r0, r0, r0

00020268 <__aeabi_d2ulz>:
   20268:	vmov	d6, r0, r1
   2026c:	vldr	d7, [pc, #36]	; 20298 <__aeabi_d2ulz+0x30>
   20270:	vldr	d5, [pc, #40]	; 202a0 <__aeabi_d2ulz+0x38>
   20274:	vmul.f64	d7, d6, d7
   20278:	vcvt.u32.f64	s14, d7
   2027c:	vcvt.f64.u32	d4, s14
   20280:	vmov	r1, s14
   20284:	vmls.f64	d6, d4, d5
   20288:	vcvt.u32.f64	s15, d6
   2028c:	vmov	r0, s15
   20290:	bx	lr
   20294:	nop			; (mov r0, r0)
   20298:	.word	0x00000000
   2029c:	.word	0x3df00000
   202a0:	.word	0x00000000
   202a4:	.word	0x41f00000

000202a8 <__udivmoddi4>:
   202a8:	cmp	r1, r3
   202ac:	cmpeq	r0, r2
   202b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   202b4:	mov	r4, r0
   202b8:	movcc	r0, #0
   202bc:	mov	r5, r1
   202c0:	ldr	lr, [sp, #36]	; 0x24
   202c4:	movcc	r1, r0
   202c8:	bcc	203c4 <__udivmoddi4+0x11c>
   202cc:	cmp	r3, #0
   202d0:	clzeq	ip, r2
   202d4:	clzne	ip, r3
   202d8:	addeq	ip, ip, #32
   202dc:	cmp	r5, #0
   202e0:	clzeq	r1, r4
   202e4:	addeq	r1, r1, #32
   202e8:	clzne	r1, r5
   202ec:	sub	ip, ip, r1
   202f0:	sub	sl, ip, #32
   202f4:	lsl	r9, r3, ip
   202f8:	rsb	fp, ip, #32
   202fc:	orr	r9, r9, r2, lsl sl
   20300:	orr	r9, r9, r2, lsr fp
   20304:	lsl	r8, r2, ip
   20308:	cmp	r5, r9
   2030c:	cmpeq	r4, r8
   20310:	movcc	r0, #0
   20314:	movcc	r1, r0
   20318:	bcc	20334 <__udivmoddi4+0x8c>
   2031c:	mov	r0, #1
   20320:	subs	r4, r4, r8
   20324:	lsl	r1, r0, sl
   20328:	orr	r1, r1, r0, lsr fp
   2032c:	lsl	r0, r0, ip
   20330:	sbc	r5, r5, r9
   20334:	cmp	ip, #0
   20338:	beq	203c4 <__udivmoddi4+0x11c>
   2033c:	lsr	r6, r8, #1
   20340:	orr	r6, r6, r9, lsl #31
   20344:	lsr	r7, r9, #1
   20348:	mov	r2, ip
   2034c:	b	20370 <__udivmoddi4+0xc8>
   20350:	subs	r3, r4, r6
   20354:	sbc	r8, r5, r7
   20358:	adds	r3, r3, r3
   2035c:	adc	r8, r8, r8
   20360:	adds	r4, r3, #1
   20364:	adc	r5, r8, #0
   20368:	subs	r2, r2, #1
   2036c:	beq	2038c <__udivmoddi4+0xe4>
   20370:	cmp	r5, r7
   20374:	cmpeq	r4, r6
   20378:	bcs	20350 <__udivmoddi4+0xa8>
   2037c:	adds	r4, r4, r4
   20380:	adc	r5, r5, r5
   20384:	subs	r2, r2, #1
   20388:	bne	20370 <__udivmoddi4+0xc8>
   2038c:	lsr	r3, r4, ip
   20390:	orr	r3, r3, r5, lsl fp
   20394:	lsr	r2, r5, ip
   20398:	orr	r3, r3, r5, lsr sl
   2039c:	adds	r0, r0, r4
   203a0:	mov	r4, r3
   203a4:	lsl	r3, r2, ip
   203a8:	orr	r3, r3, r4, lsl sl
   203ac:	lsl	ip, r4, ip
   203b0:	orr	r3, r3, r4, lsr fp
   203b4:	adc	r1, r1, r5
   203b8:	subs	r0, r0, ip
   203bc:	mov	r5, r2
   203c0:	sbc	r1, r1, r3
   203c4:	cmp	lr, #0
   203c8:	strdne	r4, [lr]
   203cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

Disassembly of section .fini:

000203d0 <_fini>:
   203d0:	push	{r3, lr}
   203d4:	pop	{r3, pc}
