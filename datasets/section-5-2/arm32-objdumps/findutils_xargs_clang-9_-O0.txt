
../repos/findutils/xargs/xargs:     file format elf32-littlearm


Disassembly of section .init:

000113ec <.init>:
   113ec:	push	{r3, lr}
   113f0:	bl	11820 <__assert_fail@plt+0x48>
   113f4:	pop	{r3, pc}

Disassembly of section .plt:

000113f8 <fdopen@plt-0x14>:
   113f8:	push	{lr}		; (str lr, [sp, #-4]!)
   113fc:	ldr	lr, [pc, #4]	; 11408 <fdopen@plt-0x4>
   11400:	add	lr, pc, lr
   11404:	ldr	pc, [lr, #8]!
   11408:	strdeq	r3, [r2], -r8

0001140c <fdopen@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #143360	; 0x23000
   11414:	ldr	pc, [ip, #3064]!	; 0xbf8

00011418 <calloc@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #143360	; 0x23000
   11420:	ldr	pc, [ip, #3056]!	; 0xbf0

00011424 <raise@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #143360	; 0x23000
   1142c:	ldr	pc, [ip, #3048]!	; 0xbe8

00011430 <strcmp@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #143360	; 0x23000
   11438:	ldr	pc, [ip, #3040]!	; 0xbe0

0001143c <strtol@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #143360	; 0x23000
   11444:	ldr	pc, [ip, #3032]!	; 0xbd8

00011448 <printf@plt>:
   11448:	add	ip, pc, #0, 12
   1144c:	add	ip, ip, #143360	; 0x23000
   11450:	ldr	pc, [ip, #3024]!	; 0xbd0

00011454 <read@plt>:
   11454:	add	ip, pc, #0, 12
   11458:	add	ip, ip, #143360	; 0x23000
   1145c:	ldr	pc, [ip, #3016]!	; 0xbc8

00011460 <fflush@plt>:
   11460:	add	ip, pc, #0, 12
   11464:	add	ip, ip, #143360	; 0x23000
   11468:	ldr	pc, [ip, #3008]!	; 0xbc0

0001146c <wcwidth@plt>:
   1146c:	add	ip, pc, #0, 12
   11470:	add	ip, ip, #143360	; 0x23000
   11474:	ldr	pc, [ip, #3000]!	; 0xbb8

00011478 <free@plt>:
   11478:	add	ip, pc, #0, 12
   1147c:	add	ip, ip, #143360	; 0x23000
   11480:	ldr	pc, [ip, #2992]!	; 0xbb0

00011484 <ferror@plt>:
   11484:	add	ip, pc, #0, 12
   11488:	add	ip, ip, #143360	; 0x23000
   1148c:	ldr	pc, [ip, #2984]!	; 0xba8

00011490 <_exit@plt>:
   11490:	add	ip, pc, #0, 12
   11494:	add	ip, ip, #143360	; 0x23000
   11498:	ldr	pc, [ip, #2976]!	; 0xba0

0001149c <memcpy@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #143360	; 0x23000
   114a4:	ldr	pc, [ip, #2968]!	; 0xb98

000114a8 <execvp@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #143360	; 0x23000
   114b0:	ldr	pc, [ip, #2960]!	; 0xb90

000114b4 <mbsinit@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #143360	; 0x23000
   114bc:	ldr	pc, [ip, #2952]!	; 0xb88

000114c0 <signal@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #143360	; 0x23000
   114c8:	ldr	pc, [ip, #2944]!	; 0xb80

000114cc <memcmp@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #143360	; 0x23000
   114d4:	ldr	pc, [ip, #2936]!	; 0xb78

000114d8 <sysconf@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #143360	; 0x23000
   114e0:	ldr	pc, [ip, #2928]!	; 0xb70

000114e4 <dup2@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #143360	; 0x23000
   114ec:	ldr	pc, [ip, #2920]!	; 0xb68

000114f0 <getrlimit64@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #143360	; 0x23000
   114f8:	ldr	pc, [ip, #2912]!	; 0xb60

000114fc <realloc@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #143360	; 0x23000
   11504:	ldr	pc, [ip, #2904]!	; 0xb58

00011508 <textdomain@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #143360	; 0x23000
   11510:	ldr	pc, [ip, #2896]!	; 0xb50

00011514 <iswcntrl@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #143360	; 0x23000
   1151c:	ldr	pc, [ip, #2888]!	; 0xb48

00011520 <iswprint@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #143360	; 0x23000
   11528:	ldr	pc, [ip, #2880]!	; 0xb40

0001152c <poll@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #143360	; 0x23000
   11534:	ldr	pc, [ip, #2872]!	; 0xb38

00011538 <sigaction@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #143360	; 0x23000
   11540:	ldr	pc, [ip, #2864]!	; 0xb30

00011544 <lseek64@plt>:
   11544:	add	ip, pc, #0, 12
   11548:	add	ip, ip, #143360	; 0x23000
   1154c:	ldr	pc, [ip, #2856]!	; 0xb28

00011550 <waitpid@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #143360	; 0x23000
   11558:	ldr	pc, [ip, #2848]!	; 0xb20

0001155c <__ctype_get_mb_cur_max@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #143360	; 0x23000
   11564:	ldr	pc, [ip, #2840]!	; 0xb18

00011568 <strcpy@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #143360	; 0x23000
   11570:	ldr	pc, [ip, #2832]!	; 0xb10

00011574 <__fpending@plt>:
   11574:	add	ip, pc, #0, 12
   11578:	add	ip, ip, #143360	; 0x23000
   1157c:	ldr	pc, [ip, #2824]!	; 0xb08

00011580 <mbrtowc@plt>:
   11580:	add	ip, pc, #0, 12
   11584:	add	ip, ip, #143360	; 0x23000
   11588:	ldr	pc, [ip, #2816]!	; 0xb00

0001158c <error@plt>:
   1158c:	add	ip, pc, #0, 12
   11590:	add	ip, ip, #143360	; 0x23000
   11594:	ldr	pc, [ip, #2808]!	; 0xaf8

00011598 <opendir@plt>:
   11598:	add	ip, pc, #0, 12
   1159c:	add	ip, ip, #143360	; 0x23000
   115a0:	ldr	pc, [ip, #2800]!	; 0xaf0

000115a4 <open64@plt>:
   115a4:	add	ip, pc, #0, 12
   115a8:	add	ip, ip, #143360	; 0x23000
   115ac:	ldr	pc, [ip, #2792]!	; 0xae8

000115b0 <getenv@plt>:
   115b0:	add	ip, pc, #0, 12
   115b4:	add	ip, ip, #143360	; 0x23000
   115b8:	ldr	pc, [ip, #2784]!	; 0xae0

000115bc <malloc@plt>:
   115bc:	add	ip, pc, #0, 12
   115c0:	add	ip, ip, #143360	; 0x23000
   115c4:	ldr	pc, [ip, #2776]!	; 0xad8

000115c8 <__libc_start_main@plt>:
   115c8:	add	ip, pc, #0, 12
   115cc:	add	ip, ip, #143360	; 0x23000
   115d0:	ldr	pc, [ip, #2768]!	; 0xad0

000115d4 <__freading@plt>:
   115d4:	add	ip, pc, #0, 12
   115d8:	add	ip, ip, #143360	; 0x23000
   115dc:	ldr	pc, [ip, #2760]!	; 0xac8

000115e0 <__gmon_start__@plt>:
   115e0:	add	ip, pc, #0, 12
   115e4:	add	ip, ip, #143360	; 0x23000
   115e8:	ldr	pc, [ip, #2752]!	; 0xac0

000115ec <getopt_long@plt>:
   115ec:	add	ip, pc, #0, 12
   115f0:	add	ip, ip, #143360	; 0x23000
   115f4:	ldr	pc, [ip, #2744]!	; 0xab8

000115f8 <__ctype_b_loc@plt>:
   115f8:	add	ip, pc, #0, 12
   115fc:	add	ip, ip, #143360	; 0x23000
   11600:	ldr	pc, [ip, #2736]!	; 0xab0

00011604 <getpid@plt>:
   11604:	add	ip, pc, #0, 12
   11608:	add	ip, ip, #143360	; 0x23000
   1160c:	ldr	pc, [ip, #2728]!	; 0xaa8

00011610 <exit@plt>:
   11610:	add	ip, pc, #0, 12
   11614:	add	ip, ip, #143360	; 0x23000
   11618:	ldr	pc, [ip, #2720]!	; 0xaa0

0001161c <gettext@plt>:
   1161c:	add	ip, pc, #0, 12
   11620:	add	ip, ip, #143360	; 0x23000
   11624:	ldr	pc, [ip, #2712]!	; 0xa98

00011628 <strtoul@plt>:
   11628:	add	ip, pc, #0, 12
   1162c:	add	ip, ip, #143360	; 0x23000
   11630:	ldr	pc, [ip, #2704]!	; 0xa90

00011634 <strlen@plt>:
   11634:	add	ip, pc, #0, 12
   11638:	add	ip, ip, #143360	; 0x23000
   1163c:	ldr	pc, [ip, #2696]!	; 0xa88

00011640 <strchr@plt>:
   11640:	add	ip, pc, #0, 12
   11644:	add	ip, ip, #143360	; 0x23000
   11648:	ldr	pc, [ip, #2688]!	; 0xa80

0001164c <setenv@plt>:
   1164c:	add	ip, pc, #0, 12
   11650:	add	ip, ip, #143360	; 0x23000
   11654:	ldr	pc, [ip, #2680]!	; 0xa78

00011658 <fprintf@plt>:
   11658:	add	ip, pc, #0, 12
   1165c:	add	ip, ip, #143360	; 0x23000
   11660:	ldr	pc, [ip, #2672]!	; 0xa70

00011664 <__errno_location@plt>:
   11664:	add	ip, pc, #0, 12
   11668:	add	ip, ip, #143360	; 0x23000
   1166c:	ldr	pc, [ip, #2664]!	; 0xa68

00011670 <snprintf@plt>:
   11670:	add	ip, pc, #0, 12
   11674:	add	ip, ip, #143360	; 0x23000
   11678:	ldr	pc, [ip, #2656]!	; 0xa60

0001167c <__cxa_atexit@plt>:
   1167c:	add	ip, pc, #0, 12
   11680:	add	ip, ip, #143360	; 0x23000
   11684:	ldr	pc, [ip, #2648]!	; 0xa58

00011688 <memset@plt>:
   11688:	add	ip, pc, #0, 12
   1168c:	add	ip, ip, #143360	; 0x23000
   11690:	ldr	pc, [ip, #2640]!	; 0xa50

00011694 <strncpy@plt>:
   11694:	add	ip, pc, #0, 12
   11698:	add	ip, ip, #143360	; 0x23000
   1169c:	ldr	pc, [ip, #2632]!	; 0xa48

000116a0 <write@plt>:
   116a0:	add	ip, pc, #0, 12
   116a4:	add	ip, ip, #143360	; 0x23000
   116a8:	ldr	pc, [ip, #2624]!	; 0xa40

000116ac <fileno@plt>:
   116ac:	add	ip, pc, #0, 12
   116b0:	add	ip, ip, #143360	; 0x23000
   116b4:	ldr	pc, [ip, #2616]!	; 0xa38

000116b8 <memchr@plt>:
   116b8:	add	ip, pc, #0, 12
   116bc:	add	ip, ip, #143360	; 0x23000
   116c0:	ldr	pc, [ip, #2608]!	; 0xa30

000116c4 <fclose@plt>:
   116c4:	add	ip, pc, #0, 12
   116c8:	add	ip, ip, #143360	; 0x23000
   116cc:	ldr	pc, [ip, #2600]!	; 0xa28

000116d0 <strnlen@plt>:
   116d0:	add	ip, pc, #0, 12
   116d4:	add	ip, ip, #143360	; 0x23000
   116d8:	ldr	pc, [ip, #2592]!	; 0xa20

000116dc <pipe@plt>:
   116dc:	add	ip, pc, #0, 12
   116e0:	add	ip, ip, #143360	; 0x23000
   116e4:	ldr	pc, [ip, #2584]!	; 0xa18

000116e8 <fseeko64@plt>:
   116e8:	add	ip, pc, #0, 12
   116ec:	add	ip, ip, #143360	; 0x23000
   116f0:	ldr	pc, [ip, #2576]!	; 0xa10

000116f4 <fcntl64@plt>:
   116f4:	add	ip, pc, #0, 12
   116f8:	add	ip, ip, #143360	; 0x23000
   116fc:	ldr	pc, [ip, #2568]!	; 0xa08

00011700 <setlocale@plt>:
   11700:	add	ip, pc, #0, 12
   11704:	add	ip, ip, #143360	; 0x23000
   11708:	ldr	pc, [ip, #2560]!	; 0xa00

0001170c <sigemptyset@plt>:
   1170c:	add	ip, pc, #0, 12
   11710:	add	ip, ip, #143360	; 0x23000
   11714:	ldr	pc, [ip, #2552]!	; 0x9f8

00011718 <fork@plt>:
   11718:	add	ip, pc, #0, 12
   1171c:	add	ip, ip, #143360	; 0x23000
   11720:	ldr	pc, [ip, #2544]!	; 0x9f0

00011724 <strrchr@plt>:
   11724:	add	ip, pc, #0, 12
   11728:	add	ip, ip, #143360	; 0x23000
   1172c:	ldr	pc, [ip, #2536]!	; 0x9e8

00011730 <nl_langinfo@plt>:
   11730:	add	ip, pc, #0, 12
   11734:	add	ip, ip, #143360	; 0x23000
   11738:	ldr	pc, [ip, #2528]!	; 0x9e0

0001173c <readdir64@plt>:
   1173c:	add	ip, pc, #0, 12
   11740:	add	ip, ip, #143360	; 0x23000
   11744:	ldr	pc, [ip, #2520]!	; 0x9d8

00011748 <fdopendir@plt>:
   11748:	add	ip, pc, #0, 12
   1174c:	add	ip, ip, #143360	; 0x23000
   11750:	ldr	pc, [ip, #2512]!	; 0x9d0

00011754 <putc@plt>:
   11754:	add	ip, pc, #0, 12
   11758:	add	ip, ip, #143360	; 0x23000
   1175c:	ldr	pc, [ip, #2504]!	; 0x9c8

00011760 <dirfd@plt>:
   11760:	add	ip, pc, #0, 12
   11764:	add	ip, ip, #143360	; 0x23000
   11768:	ldr	pc, [ip, #2496]!	; 0x9c0

0001176c <bindtextdomain@plt>:
   1176c:	add	ip, pc, #0, 12
   11770:	add	ip, ip, #143360	; 0x23000
   11774:	ldr	pc, [ip, #2488]!	; 0x9b8

00011778 <isatty@plt>:
   11778:	add	ip, pc, #0, 12
   1177c:	add	ip, ip, #143360	; 0x23000
   11780:	ldr	pc, [ip, #2480]!	; 0x9b0

00011784 <unsetenv@plt>:
   11784:	add	ip, pc, #0, 12
   11788:	add	ip, ip, #143360	; 0x23000
   1178c:	ldr	pc, [ip, #2472]!	; 0x9a8

00011790 <fputs@plt>:
   11790:	add	ip, pc, #0, 12
   11794:	add	ip, ip, #143360	; 0x23000
   11798:	ldr	pc, [ip, #2464]!	; 0x9a0

0001179c <strncmp@plt>:
   1179c:	add	ip, pc, #0, 12
   117a0:	add	ip, ip, #143360	; 0x23000
   117a4:	ldr	pc, [ip, #2456]!	; 0x998

000117a8 <abort@plt>:
   117a8:	add	ip, pc, #0, 12
   117ac:	add	ip, ip, #143360	; 0x23000
   117b0:	ldr	pc, [ip, #2448]!	; 0x990

000117b4 <getc@plt>:
   117b4:	add	ip, pc, #0, 12
   117b8:	add	ip, ip, #143360	; 0x23000
   117bc:	ldr	pc, [ip, #2440]!	; 0x988

000117c0 <close@plt>:
   117c0:	add	ip, pc, #0, 12
   117c4:	add	ip, ip, #143360	; 0x23000
   117c8:	ldr	pc, [ip, #2432]!	; 0x980

000117cc <closedir@plt>:
   117cc:	add	ip, pc, #0, 12
   117d0:	add	ip, ip, #143360	; 0x23000
   117d4:	ldr	pc, [ip, #2424]!	; 0x978

000117d8 <__assert_fail@plt>:
   117d8:	add	ip, pc, #0, 12
   117dc:	add	ip, ip, #143360	; 0x23000
   117e0:	ldr	pc, [ip, #2416]!	; 0x970

Disassembly of section .text:

000117e4 <.text>:
   117e4:	mov	fp, #0
   117e8:	mov	lr, #0
   117ec:	pop	{r1}		; (ldr r1, [sp], #4)
   117f0:	mov	r2, sp
   117f4:	push	{r2}		; (str r2, [sp, #-4]!)
   117f8:	push	{r0}		; (str r0, [sp, #-4]!)
   117fc:	ldr	ip, [pc, #16]	; 11814 <__assert_fail@plt+0x3c>
   11800:	push	{ip}		; (str ip, [sp, #-4]!)
   11804:	ldr	r0, [pc, #12]	; 11818 <__assert_fail@plt+0x40>
   11808:	ldr	r3, [pc, #12]	; 1181c <__assert_fail@plt+0x44>
   1180c:	bl	115c8 <__libc_start_main@plt>
   11810:	bl	117a8 <abort@plt>
   11814:	strdeq	r2, [r2], -ip
   11818:	ldrdeq	r1, [r1], -r4
   1181c:	muleq	r2, ip, r3
   11820:	ldr	r3, [pc, #20]	; 1183c <__assert_fail@plt+0x64>
   11824:	ldr	r2, [pc, #20]	; 11840 <__assert_fail@plt+0x68>
   11828:	add	r3, pc, r3
   1182c:	ldr	r2, [r3, r2]
   11830:	cmp	r2, #0
   11834:	bxeq	lr
   11838:	b	115e0 <__gmon_start__@plt>
   1183c:	ldrdeq	r3, [r2], -r0
   11840:	andeq	r0, r0, r4, asr r1
   11844:	ldr	r0, [pc, #24]	; 11864 <__assert_fail@plt+0x8c>
   11848:	ldr	r3, [pc, #24]	; 11868 <__assert_fail@plt+0x90>
   1184c:	cmp	r3, r0
   11850:	bxeq	lr
   11854:	ldr	r3, [pc, #16]	; 1186c <__assert_fail@plt+0x94>
   11858:	cmp	r3, #0
   1185c:	bxeq	lr
   11860:	bx	r3
   11864:			; <UNDEFINED> instruction: 0x000351b4
   11868:			; <UNDEFINED> instruction: 0x000351b4
   1186c:	andeq	r0, r0, r0
   11870:	ldr	r0, [pc, #36]	; 1189c <__assert_fail@plt+0xc4>
   11874:	ldr	r1, [pc, #36]	; 118a0 <__assert_fail@plt+0xc8>
   11878:	sub	r1, r1, r0
   1187c:	asr	r1, r1, #2
   11880:	add	r1, r1, r1, lsr #31
   11884:	asrs	r1, r1, #1
   11888:	bxeq	lr
   1188c:	ldr	r3, [pc, #16]	; 118a4 <__assert_fail@plt+0xcc>
   11890:	cmp	r3, #0
   11894:	bxeq	lr
   11898:	bx	r3
   1189c:			; <UNDEFINED> instruction: 0x000351b4
   118a0:			; <UNDEFINED> instruction: 0x000351b4
   118a4:	andeq	r0, r0, r0
   118a8:	push	{r4, lr}
   118ac:	ldr	r4, [pc, #24]	; 118cc <__assert_fail@plt+0xf4>
   118b0:	ldrb	r3, [r4]
   118b4:	cmp	r3, #0
   118b8:	popne	{r4, pc}
   118bc:	bl	11844 <__assert_fail@plt+0x6c>
   118c0:	mov	r3, #1
   118c4:	strb	r3, [r4]
   118c8:	pop	{r4, pc}
   118cc:	andeq	r5, r3, r4, ror #3
   118d0:	b	11870 <__assert_fail@plt+0x98>
   118d4:	push	{r4, sl, fp, lr}
   118d8:	add	fp, sp, #8
   118dc:	sub	sp, sp, #488	; 0x1e8
   118e0:	movw	r2, #0
   118e4:	str	r2, [fp, #-12]
   118e8:	str	r0, [fp, #-16]
   118ec:	str	r1, [fp, #-20]	; 0xffffffec
   118f0:	str	r2, [fp, #-32]	; 0xffffffe0
   118f4:	movw	r0, #1
   118f8:	str	r0, [fp, #-36]	; 0xffffffdc
   118fc:	movw	r0, #17535	; 0x447f
   11900:	movt	r0, #2
   11904:	str	r0, [fp, #-40]	; 0xffffffd8
   11908:	movw	r0, #9252	; 0x2424
   1190c:	movt	r0, #2
   11910:	ldrb	r1, [r0]
   11914:	strb	r1, [fp, #-45]	; 0xffffffd3
   11918:	ldrb	r1, [r0, #1]
   1191c:	strb	r1, [fp, #-44]	; 0xffffffd4
   11920:	ldrb	r1, [r0, #2]
   11924:	strb	r1, [fp, #-43]	; 0xffffffd5
   11928:	ldrb	r1, [r0, #3]
   1192c:	strb	r1, [fp, #-42]	; 0xffffffd6
   11930:	ldrb	r0, [r0, #4]
   11934:	strb	r0, [fp, #-41]	; 0xffffffd7
   11938:	movw	r0, #11896	; 0x2e78
   1193c:	movt	r0, #1
   11940:	str	r0, [fp, #-56]	; 0xffffffc8
   11944:	movw	r0, #13984	; 0x36a0
   11948:	movt	r0, #1
   1194c:	str	r0, [fp, #-60]	; 0xffffffc4
   11950:	ldr	r0, [fp, #-20]	; 0xffffffec
   11954:	ldr	r0, [r0]
   11958:	cmp	r0, r2
   1195c:	beq	11970 <__assert_fail@plt+0x198>
   11960:	ldr	r0, [fp, #-20]	; 0xffffffec
   11964:	ldr	r0, [r0]
   11968:	bl	18dcc <__assert_fail@plt+0x75f4>
   1196c:	b	1197c <__assert_fail@plt+0x1a4>
   11970:	movw	r0, #9257	; 0x2429
   11974:	movt	r0, #2
   11978:	bl	18dcc <__assert_fail@plt+0x75f4>
   1197c:	bl	1660c <__assert_fail@plt+0x4e34>
   11980:	bl	11604 <getpid@plt>
   11984:	movw	r1, #20968	; 0x51e8
   11988:	movt	r1, #3
   1198c:	str	r0, [r1]
   11990:	movw	r0, #20972	; 0x51ec
   11994:	movt	r0, #3
   11998:	movw	r1, #0
   1199c:	str	r1, [r0]
   119a0:	movw	r0, #6
   119a4:	movw	r1, #12626	; 0x3152
   119a8:	movt	r1, #2
   119ac:	bl	11700 <setlocale@plt>
   119b0:	movw	r1, #16806	; 0x41a6
   119b4:	movt	r1, #2
   119b8:	str	r0, [fp, #-232]	; 0xffffff18
   119bc:	mov	r0, r1
   119c0:	movw	r1, #9263	; 0x242f
   119c4:	movt	r1, #2
   119c8:	bl	1176c <bindtextdomain@plt>
   119cc:	movw	r1, #16806	; 0x41a6
   119d0:	movt	r1, #2
   119d4:	str	r0, [fp, #-236]	; 0xffffff14
   119d8:	mov	r0, r1
   119dc:	bl	11508 <textdomain@plt>
   119e0:	movw	r1, #30104	; 0x7598
   119e4:	movt	r1, #1
   119e8:	str	r0, [fp, #-240]	; 0xffffff10
   119ec:	mov	r0, r1
   119f0:	bl	22400 <__assert_fail@plt+0x10c28>
   119f4:	cmp	r0, #0
   119f8:	bne	11a10 <__assert_fail@plt+0x238>
   119fc:	movw	r0, #13988	; 0x36a4
   11a00:	movt	r0, #1
   11a04:	bl	22400 <__assert_fail@plt+0x10c28>
   11a08:	cmp	r0, #0
   11a0c:	beq	11a40 <__assert_fail@plt+0x268>
   11a10:	bl	11664 <__errno_location@plt>
   11a14:	ldr	r1, [r0]
   11a18:	movw	r0, #9287	; 0x2447
   11a1c:	movt	r0, #2
   11a20:	str	r1, [fp, #-244]	; 0xffffff0c
   11a24:	bl	1161c <gettext@plt>
   11a28:	movw	r1, #1
   11a2c:	str	r0, [sp, #248]	; 0xf8
   11a30:	mov	r0, r1
   11a34:	ldr	r1, [fp, #-244]	; 0xffffff0c
   11a38:	ldr	r2, [sp, #248]	; 0xf8
   11a3c:	bl	1158c <error@plt>
   11a40:	movw	r0, #20976	; 0x51f0
   11a44:	movt	r0, #3
   11a48:	movw	r1, #2048	; 0x800
   11a4c:	bl	161cc <__assert_fail@plt+0x49f4>
   11a50:	str	r0, [fp, #-64]	; 0xffffffc0
   11a54:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11a58:	movw	r1, #1
   11a5c:	cmp	r1, r0
   11a60:	bne	11a74 <__assert_fail@plt+0x29c>
   11a64:	movw	r0, #14180	; 0x3764
   11a68:	movt	r0, #1
   11a6c:	str	r0, [fp, #-60]	; 0xffffffc4
   11a70:	b	11b60 <__assert_fail@plt+0x388>
   11a74:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11a78:	movw	r1, #2
   11a7c:	cmp	r1, r0
   11a80:	bne	11a94 <__assert_fail@plt+0x2bc>
   11a84:	movw	r0, #14180	; 0x3764
   11a88:	movt	r0, #1
   11a8c:	str	r0, [fp, #-60]	; 0xffffffc4
   11a90:	b	11b5c <__assert_fail@plt+0x384>
   11a94:	movw	r0, #0
   11a98:	bl	114d8 <sysconf@plt>
   11a9c:	str	r0, [fp, #-208]	; 0xffffff30
   11aa0:	ldr	r0, [fp, #-208]	; 0xffffff30
   11aa4:	cmp	r0, #0
   11aa8:	ble	11b04 <__assert_fail@plt+0x32c>
   11aac:	ldr	r0, [fp, #-208]	; 0xffffff30
   11ab0:	cmp	r0, #2048	; 0x800
   11ab4:	ble	11abc <__assert_fail@plt+0x2e4>
   11ab8:	b	11adc <__assert_fail@plt+0x304>
   11abc:	movw	r0, #9322	; 0x246a
   11ac0:	movt	r0, #2
   11ac4:	movw	r1, #9349	; 0x2485
   11ac8:	movt	r1, #2
   11acc:	movw	r2, #483	; 0x1e3
   11ad0:	movw	r3, #9357	; 0x248d
   11ad4:	movt	r3, #2
   11ad8:	bl	117d8 <__assert_fail@plt>
   11adc:	movw	r0, #20976	; 0x51f0
   11ae0:	movt	r0, #3
   11ae4:	ldr	r0, [r0, #12]
   11ae8:	ldr	r1, [fp, #-208]	; 0xffffff30
   11aec:	sub	r1, r1, #2048	; 0x800
   11af0:	bl	13794 <__assert_fail@plt+0x1fbc>
   11af4:	movw	r1, #20976	; 0x51f0
   11af8:	movt	r1, #3
   11afc:	str	r0, [r1, #12]
   11b00:	b	11b08 <__assert_fail@plt+0x330>
   11b04:	b	11b08 <__assert_fail@plt+0x330>
   11b08:	movw	r0, #20976	; 0x51f0
   11b0c:	movt	r0, #3
   11b10:	ldr	r0, [r0, #12]
   11b14:	cmp	r0, #2048	; 0x800
   11b18:	bcc	11b20 <__assert_fail@plt+0x348>
   11b1c:	b	11b40 <__assert_fail@plt+0x368>
   11b20:	movw	r0, #9380	; 0x24a4
   11b24:	movt	r0, #2
   11b28:	movw	r1, #9349	; 0x2485
   11b2c:	movt	r1, #2
   11b30:	movw	r2, #511	; 0x1ff
   11b34:	movw	r3, #9357	; 0x248d
   11b38:	movt	r3, #2
   11b3c:	bl	117d8 <__assert_fail@plt>
   11b40:	movw	r0, #14288	; 0x37d0
   11b44:	movt	r0, #1
   11b48:	movw	r1, #20976	; 0x51f0
   11b4c:	movt	r1, #3
   11b50:	str	r0, [r1, #32]
   11b54:	mov	r0, r1
   11b58:	bl	16348 <__assert_fail@plt+0x4b70>
   11b5c:	b	11b60 <__assert_fail@plt+0x388>
   11b60:	b	11b64 <__assert_fail@plt+0x38c>
   11b64:	ldr	r0, [fp, #-16]
   11b68:	ldr	r1, [fp, #-20]	; 0xffffffec
   11b6c:	movw	r2, #9407	; 0x24bf
   11b70:	movt	r2, #2
   11b74:	movw	r3, #15324	; 0x3bdc
   11b78:	movt	r3, #2
   11b7c:	sub	ip, fp, #28
   11b80:	str	ip, [sp]
   11b84:	bl	115ec <getopt_long@plt>
   11b88:	str	r0, [fp, #-24]	; 0xffffffe8
   11b8c:	cmn	r0, #1
   11b90:	beq	12510 <__assert_fail@plt+0xd38>
   11b94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11b98:	sub	r0, r0, #48	; 0x30
   11b9c:	cmp	r0, #208	; 0xd0
   11ba0:	str	r0, [sp, #244]	; 0xf4
   11ba4:	bhi	12504 <__assert_fail@plt+0xd2c>
   11ba8:	add	r0, pc, #8
   11bac:	ldr	r1, [sp, #244]	; 0xf4
   11bb0:	ldr	r0, [r0, r1, lsl #2]
   11bb4:	mov	pc, r0
   11bb8:	strdeq	r1, [r1], -ip
   11bbc:	andeq	r2, r1, r4, lsl #10
   11bc0:	andeq	r2, r1, r4, lsl #10
   11bc4:	andeq	r2, r1, r4, lsl #10
   11bc8:	andeq	r2, r1, r4, lsl #10
   11bcc:	andeq	r2, r1, r4, lsl #10
   11bd0:	andeq	r2, r1, r4, lsl #10
   11bd4:	andeq	r2, r1, r4, lsl #10
   11bd8:	andeq	r2, r1, r4, lsl #10
   11bdc:	andeq	r2, r1, r4, lsl #10
   11be0:	andeq	r2, r1, r4, lsl #10
   11be4:	andeq	r2, r1, r4, lsl #10
   11be8:	andeq	r2, r1, r4, lsl #10
   11bec:	andeq	r2, r1, r4, lsl #10
   11bf0:	andeq	r2, r1, r4, lsl #10
   11bf4:	andeq	r2, r1, r4, lsl #10
   11bf8:	andeq	r2, r1, r4, lsl #10
   11bfc:	andeq	r2, r1, r4, lsl #10
   11c00:	andeq	r2, r1, r4, lsl #10
   11c04:	andeq	r2, r1, r4, lsl #10
   11c08:	andeq	r2, r1, r4, lsl #10
   11c0c:	andeq	r1, r1, r8, asr #30
   11c10:	andeq	r2, r1, r4, lsl #10
   11c14:	andeq	r2, r1, r4, lsl #10
   11c18:	andeq	r2, r1, r4, lsl #10
   11c1c:			; <UNDEFINED> instruction: 0x00011fb0
   11c20:	andeq	r2, r1, r4, lsl #10
   11c24:	andeq	r2, r1, r4, lsl #10
   11c28:	andeq	r2, r1, ip, rrx
   11c2c:	andeq	r2, r1, r4, lsl #10
   11c30:	andeq	r2, r1, r4, lsl #10
   11c34:	andeq	r2, r1, r4, lsl #10
   11c38:	andeq	r2, r1, r0, ror #7
   11c3c:	andeq	r2, r1, r4, lsl #10
   11c40:	andeq	r2, r1, r4, lsl #10
   11c44:	andeq	r2, r1, ip, ror #6
   11c48:	andeq	r2, r1, r4, lsl #10
   11c4c:	andeq	r2, r1, r4, lsl #10
   11c50:	andeq	r2, r1, r4, lsl #10
   11c54:	andeq	r2, r1, r4, lsl #10
   11c58:	andeq	r2, r1, r4, lsl #10
   11c5c:	andeq	r2, r1, r4, lsl #10
   11c60:	andeq	r2, r1, r4, lsl #10
   11c64:	andeq	r2, r1, r4, lsl #10
   11c68:	andeq	r2, r1, r4, lsl #10
   11c6c:	andeq	r2, r1, r4, lsl #10
   11c70:	andeq	r2, r1, r4, lsl #10
   11c74:	andeq	r2, r1, r4, lsl #10
   11c78:	andeq	r2, r1, r4, lsl #10
   11c7c:	andeq	r2, r1, r4, lsl r4
   11c80:	andeq	r2, r1, r4, lsl #10
   11c84:	andeq	r2, r1, r4, lsl #10
   11c88:	andeq	r1, r1, ip, lsl pc
   11c8c:	andeq	r1, r1, r8, asr #30
   11c90:	andeq	r2, r1, r4, lsl #10
   11c94:	andeq	r2, r1, r4, lsl #10
   11c98:	andeq	r1, r1, r8, lsr #31
   11c9c:			; <UNDEFINED> instruction: 0x00011fb0
   11ca0:	andeq	r2, r1, r4, lsl #10
   11ca4:	andeq	r2, r1, r4, lsl #10
   11ca8:	andeq	r2, r1, r0, lsl r1
   11cac:	andeq	r2, r1, r4, lsl #10
   11cb0:	andeq	r2, r1, r8, ror #3
   11cb4:	andeq	r2, r1, r0, lsr #7
   11cb8:			; <UNDEFINED> instruction: 0x000123b4
   11cbc:	andeq	r2, r1, r4, lsl #10
   11cc0:	ldrdeq	r2, [r1], -r4
   11cc4:			; <UNDEFINED> instruction: 0x000122b8
   11cc8:	andeq	r2, r1, r8, ror r3
   11ccc:	andeq	r2, r1, r4, lsl #10
   11cd0:	andeq	r2, r1, r8, lsr #8
   11cd4:	andeq	r2, r1, r4, lsl #10
   11cd8:	andeq	r2, r1, ip, lsl #7
   11cdc:	andeq	r2, r1, r4, lsl #10
   11ce0:	andeq	r2, r1, r4, lsl #10
   11ce4:	andeq	r2, r1, r4, lsl #10
   11ce8:	andeq	r2, r1, r4, lsl #10
   11cec:	andeq	r2, r1, r4, lsl #10
   11cf0:	andeq	r2, r1, r4, lsl #10
   11cf4:	andeq	r2, r1, r4, lsl #10
   11cf8:	andeq	r2, r1, r4, lsl #10
   11cfc:	andeq	r2, r1, r4, lsl #10
   11d00:	andeq	r2, r1, r4, lsl #10
   11d04:	andeq	r2, r1, r4, lsl #10
   11d08:	andeq	r2, r1, r4, lsl #10
   11d0c:	andeq	r2, r1, r4, lsl #10
   11d10:	andeq	r2, r1, r4, lsl #10
   11d14:	andeq	r2, r1, r4, lsl #10
   11d18:	andeq	r2, r1, r4, lsl #10
   11d1c:	andeq	r2, r1, r4, lsl #10
   11d20:	andeq	r2, r1, r4, lsl #10
   11d24:	andeq	r2, r1, r4, lsl #10
   11d28:	andeq	r2, r1, r4, lsl #10
   11d2c:	andeq	r2, r1, r4, lsl #10
   11d30:	andeq	r2, r1, r4, lsl #10
   11d34:	andeq	r2, r1, r4, lsl #10
   11d38:	andeq	r2, r1, r4, lsl #10
   11d3c:	andeq	r2, r1, r4, lsl #10
   11d40:	andeq	r2, r1, r4, lsl #10
   11d44:	andeq	r2, r1, r4, lsl #10
   11d48:	andeq	r2, r1, r4, lsl #10
   11d4c:	andeq	r2, r1, r4, lsl #10
   11d50:	andeq	r2, r1, r4, lsl #10
   11d54:	andeq	r2, r1, r4, lsl #10
   11d58:	andeq	r2, r1, r4, lsl #10
   11d5c:	andeq	r2, r1, r4, lsl #10
   11d60:	andeq	r2, r1, r4, lsl #10
   11d64:	andeq	r2, r1, r4, lsl #10
   11d68:	andeq	r2, r1, r4, lsl #10
   11d6c:	andeq	r2, r1, r4, lsl #10
   11d70:	andeq	r2, r1, r4, lsl #10
   11d74:	andeq	r2, r1, r4, lsl #10
   11d78:	andeq	r2, r1, r4, lsl #10
   11d7c:	andeq	r2, r1, r4, lsl #10
   11d80:	andeq	r2, r1, r4, lsl #10
   11d84:	andeq	r2, r1, r4, lsl #10
   11d88:	andeq	r2, r1, r4, lsl #10
   11d8c:	andeq	r2, r1, r4, lsl #10
   11d90:	andeq	r2, r1, r4, lsl #10
   11d94:	andeq	r2, r1, r4, lsl #10
   11d98:	andeq	r2, r1, r4, lsl #10
   11d9c:	andeq	r2, r1, r4, lsl #10
   11da0:	andeq	r2, r1, r4, lsl #10
   11da4:	andeq	r2, r1, r4, lsl #10
   11da8:	andeq	r2, r1, r4, lsl #10
   11dac:	andeq	r2, r1, r4, lsl #10
   11db0:	andeq	r2, r1, r4, lsl #10
   11db4:	andeq	r2, r1, r4, lsl #10
   11db8:	andeq	r2, r1, r4, lsl #10
   11dbc:	andeq	r2, r1, r4, lsl #10
   11dc0:	andeq	r2, r1, r4, lsl #10
   11dc4:	andeq	r2, r1, r4, lsl #10
   11dc8:	andeq	r2, r1, r4, lsl #10
   11dcc:	andeq	r2, r1, r4, lsl #10
   11dd0:	andeq	r2, r1, r4, lsl #10
   11dd4:	andeq	r2, r1, r4, lsl #10
   11dd8:	andeq	r2, r1, r4, lsl #10
   11ddc:	andeq	r2, r1, r4, lsl #10
   11de0:	andeq	r2, r1, r4, lsl #10
   11de4:	andeq	r2, r1, r4, lsl #10
   11de8:	andeq	r2, r1, r4, lsl #10
   11dec:	andeq	r2, r1, r4, lsl #10
   11df0:	andeq	r2, r1, r4, lsl #10
   11df4:	andeq	r2, r1, r4, lsl #10
   11df8:	andeq	r2, r1, r4, lsl #10
   11dfc:	andeq	r2, r1, r4, lsl #10
   11e00:	andeq	r2, r1, r4, lsl #10
   11e04:	andeq	r2, r1, r4, lsl #10
   11e08:	andeq	r2, r1, r4, lsl #10
   11e0c:	andeq	r2, r1, r4, lsl #10
   11e10:	andeq	r2, r1, r4, lsl #10
   11e14:	andeq	r2, r1, r4, lsl #10
   11e18:	andeq	r2, r1, r4, lsl #10
   11e1c:	andeq	r2, r1, r4, lsl #10
   11e20:	andeq	r2, r1, r4, lsl #10
   11e24:	andeq	r2, r1, r4, lsl #10
   11e28:	andeq	r2, r1, r4, lsl #10
   11e2c:	andeq	r2, r1, r4, lsl #10
   11e30:	andeq	r2, r1, r4, lsl #10
   11e34:	andeq	r2, r1, r4, lsl #10
   11e38:	andeq	r2, r1, r4, lsl #10
   11e3c:	andeq	r2, r1, r4, lsl #10
   11e40:	andeq	r2, r1, r4, lsl #10
   11e44:	andeq	r2, r1, r4, lsl #10
   11e48:	andeq	r2, r1, r4, lsl #10
   11e4c:	andeq	r2, r1, r4, lsl #10
   11e50:	andeq	r2, r1, r4, lsl #10
   11e54:	andeq	r2, r1, r4, lsl #10
   11e58:	andeq	r2, r1, r4, lsl #10
   11e5c:	andeq	r2, r1, r4, lsl #10
   11e60:	andeq	r2, r1, r4, lsl #10
   11e64:	andeq	r2, r1, r4, lsl #10
   11e68:	andeq	r2, r1, r4, lsl #10
   11e6c:	andeq	r2, r1, r4, lsl #10
   11e70:	andeq	r2, r1, r4, lsl #10
   11e74:	andeq	r2, r1, r4, lsl #10
   11e78:	andeq	r2, r1, r4, lsl #10
   11e7c:	andeq	r2, r1, r4, lsl #10
   11e80:	andeq	r2, r1, r4, lsl #10
   11e84:	andeq	r2, r1, r4, lsl #10
   11e88:	andeq	r2, r1, r4, lsl #10
   11e8c:	andeq	r2, r1, r4, lsl #10
   11e90:	andeq	r2, r1, r4, lsl #10
   11e94:	andeq	r2, r1, r4, lsl #10
   11e98:	andeq	r2, r1, r4, lsl #10
   11e9c:	andeq	r2, r1, r4, lsl #10
   11ea0:	andeq	r2, r1, r4, lsl #10
   11ea4:	andeq	r2, r1, r4, lsl #10
   11ea8:	andeq	r2, r1, r4, lsl #10
   11eac:	andeq	r2, r1, r4, lsl #10
   11eb0:	andeq	r2, r1, r4, lsl #10
   11eb4:	andeq	r2, r1, r4, lsl #10
   11eb8:	andeq	r2, r1, r4, lsl #10
   11ebc:	andeq	r2, r1, r4, lsl #10
   11ec0:	andeq	r2, r1, r4, lsl #10
   11ec4:	andeq	r2, r1, r4, lsl #10
   11ec8:	andeq	r2, r1, r4, lsl #10
   11ecc:	andeq	r2, r1, r4, lsl #10
   11ed0:	andeq	r2, r1, r4, lsl #10
   11ed4:	andeq	r2, r1, r4, lsl #10
   11ed8:	andeq	r2, r1, r4, lsl #10
   11edc:	andeq	r2, r1, r4, lsl #10
   11ee0:	andeq	r2, r1, r4, lsl #10
   11ee4:	andeq	r2, r1, r4, lsl #10
   11ee8:	andeq	r2, r1, r4, lsl #10
   11eec:	andeq	r2, r1, r4, lsl #10
   11ef0:	andeq	r2, r1, r4, lsl #10
   11ef4:	andeq	r2, r1, r4, lsl #10
   11ef8:	andeq	r2, r1, r0, asr #8
   11efc:	movw	r0, #15336	; 0x3be8
   11f00:	movt	r0, #1
   11f04:	str	r0, [fp, #-56]	; 0xffffffc8
   11f08:	movw	r0, #21020	; 0x521c
   11f0c:	movt	r0, #3
   11f10:	movw	r1, #0
   11f14:	strb	r1, [r0]
   11f18:	b	1250c <__assert_fail@plt+0xd34>
   11f1c:	movw	r0, #15336	; 0x3be8
   11f20:	movt	r0, #1
   11f24:	str	r0, [fp, #-56]	; 0xffffffc8
   11f28:	movw	r0, #20960	; 0x51e0
   11f2c:	movt	r0, #3
   11f30:	ldr	r0, [r0]
   11f34:	bl	13e7c <__assert_fail@plt+0x26a4>
   11f38:	movw	r1, #21020	; 0x521c
   11f3c:	movt	r1, #3
   11f40:	strb	r0, [r1]
   11f44:	b	1250c <__assert_fail@plt+0xd34>
   11f48:	movw	r0, #20960	; 0x51e0
   11f4c:	movt	r0, #3
   11f50:	ldr	r0, [r0]
   11f54:	movw	r1, #0
   11f58:	cmp	r0, r1
   11f5c:	beq	11f94 <__assert_fail@plt+0x7bc>
   11f60:	movw	r0, #20960	; 0x51e0
   11f64:	movt	r0, #3
   11f68:	ldr	r0, [r0]
   11f6c:	bl	11634 <strlen@plt>
   11f70:	cmp	r0, #0
   11f74:	bls	11f94 <__assert_fail@plt+0x7bc>
   11f78:	movw	r0, #20960	; 0x51e0
   11f7c:	movt	r0, #3
   11f80:	ldr	r0, [r0]
   11f84:	movw	r1, #21024	; 0x5220
   11f88:	movt	r1, #3
   11f8c:	str	r0, [r1]
   11f90:	b	11fa4 <__assert_fail@plt+0x7cc>
   11f94:	movw	r0, #21024	; 0x5220
   11f98:	movt	r0, #3
   11f9c:	movw	r1, #0
   11fa0:	str	r1, [r0]
   11fa4:	b	1250c <__assert_fail@plt+0xd34>
   11fa8:	movw	r0, #0
   11fac:	bl	13ffc <__assert_fail@plt+0x2824>
   11fb0:	movw	r0, #20960	; 0x51e0
   11fb4:	movt	r0, #3
   11fb8:	ldr	r0, [r0]
   11fbc:	movw	r1, #0
   11fc0:	cmp	r0, r1
   11fc4:	beq	11fe4 <__assert_fail@plt+0x80c>
   11fc8:	movw	r0, #20960	; 0x51e0
   11fcc:	movt	r0, #3
   11fd0:	ldr	r0, [r0]
   11fd4:	movw	r1, #20976	; 0x51f0
   11fd8:	movt	r1, #3
   11fdc:	str	r0, [r1, #24]
   11fe0:	b	11ff8 <__assert_fail@plt+0x820>
   11fe4:	movw	r0, #20976	; 0x51f0
   11fe8:	movt	r0, #3
   11fec:	movw	r1, #9440	; 0x24e0
   11ff0:	movt	r1, #2
   11ff4:	str	r1, [r0, #24]
   11ff8:	movw	r0, #20976	; 0x51f0
   11ffc:	movt	r0, #3
   12000:	ldr	r0, [r0, #40]	; 0x28
   12004:	cmp	r0, #0
   12008:	beq	12030 <__assert_fail@plt+0x858>
   1200c:	movw	r0, #9443	; 0x24e3
   12010:	movt	r0, #2
   12014:	movw	r1, #9459	; 0x24f3
   12018:	movt	r1, #2
   1201c:	bl	1441c <__assert_fail@plt+0x2c44>
   12020:	movw	r0, #20976	; 0x51f0
   12024:	movt	r0, #3
   12028:	movw	r1, #0
   1202c:	str	r1, [r0, #40]	; 0x28
   12030:	movw	r0, #20976	; 0x51f0
   12034:	movt	r0, #3
   12038:	ldr	r0, [r0, #36]	; 0x24
   1203c:	cmp	r0, #0
   12040:	beq	12068 <__assert_fail@plt+0x890>
   12044:	movw	r0, #9443	; 0x24e3
   12048:	movt	r0, #2
   1204c:	movw	r1, #9470	; 0x24fe
   12050:	movt	r1, #2
   12054:	bl	1441c <__assert_fail@plt+0x2c44>
   12058:	movw	r0, #20976	; 0x51f0
   1205c:	movt	r0, #3
   12060:	movw	r1, #0
   12064:	str	r1, [r0, #36]	; 0x24
   12068:	b	1250c <__assert_fail@plt+0xd34>
   1206c:	movw	r0, #20960	; 0x51e0
   12070:	movt	r0, #3
   12074:	ldr	r0, [r0]
   12078:	movw	r1, #76	; 0x4c
   1207c:	movw	r2, #1
   12080:	str	r2, [sp, #240]	; 0xf0
   12084:	mvn	r3, #0
   12088:	ldr	ip, [sp, #240]	; 0xf0
   1208c:	str	ip, [sp]
   12090:	bl	14484 <__assert_fail@plt+0x2cac>
   12094:	movw	r1, #20976	; 0x51f0
   12098:	movt	r1, #3
   1209c:	str	r0, [r1, #36]	; 0x24
   120a0:	ldr	r0, [r1, #40]	; 0x28
   120a4:	cmp	r0, #0
   120a8:	beq	120d0 <__assert_fail@plt+0x8f8>
   120ac:	movw	r0, #9482	; 0x250a
   120b0:	movt	r0, #2
   120b4:	movw	r1, #9459	; 0x24f3
   120b8:	movt	r1, #2
   120bc:	bl	1441c <__assert_fail@plt+0x2c44>
   120c0:	movw	r0, #20976	; 0x51f0
   120c4:	movt	r0, #3
   120c8:	movw	r1, #0
   120cc:	str	r1, [r0, #40]	; 0x28
   120d0:	movw	r0, #20976	; 0x51f0
   120d4:	movt	r0, #3
   120d8:	ldr	r0, [r0, #24]
   120dc:	movw	r1, #0
   120e0:	cmp	r0, r1
   120e4:	beq	1210c <__assert_fail@plt+0x934>
   120e8:	movw	r0, #9482	; 0x250a
   120ec:	movt	r0, #2
   120f0:	movw	r1, #9485	; 0x250d
   120f4:	movt	r1, #2
   120f8:	bl	1441c <__assert_fail@plt+0x2c44>
   120fc:	movw	r0, #20976	; 0x51f0
   12100:	movt	r0, #3
   12104:	movw	r1, #0
   12108:	str	r1, [r0, #24]
   1210c:	b	1250c <__assert_fail@plt+0xd34>
   12110:	movw	r0, #20960	; 0x51e0
   12114:	movt	r0, #3
   12118:	ldr	r0, [r0]
   1211c:	movw	r1, #0
   12120:	cmp	r0, r1
   12124:	beq	12160 <__assert_fail@plt+0x988>
   12128:	movw	r0, #20960	; 0x51e0
   1212c:	movt	r0, #3
   12130:	ldr	r0, [r0]
   12134:	movw	r1, #108	; 0x6c
   12138:	movw	r2, #1
   1213c:	str	r2, [sp, #236]	; 0xec
   12140:	mvn	r3, #0
   12144:	ldr	ip, [sp, #236]	; 0xec
   12148:	str	ip, [sp]
   1214c:	bl	14484 <__assert_fail@plt+0x2cac>
   12150:	movw	r1, #20976	; 0x51f0
   12154:	movt	r1, #3
   12158:	str	r0, [r1, #36]	; 0x24
   1215c:	b	12170 <__assert_fail@plt+0x998>
   12160:	movw	r0, #20976	; 0x51f0
   12164:	movt	r0, #3
   12168:	movw	r1, #1
   1216c:	str	r1, [r0, #36]	; 0x24
   12170:	movw	r0, #20976	; 0x51f0
   12174:	movt	r0, #3
   12178:	ldr	r0, [r0, #40]	; 0x28
   1217c:	cmp	r0, #0
   12180:	beq	121a8 <__assert_fail@plt+0x9d0>
   12184:	movw	r0, #9495	; 0x2517
   12188:	movt	r0, #2
   1218c:	movw	r1, #9459	; 0x24f3
   12190:	movt	r1, #2
   12194:	bl	1441c <__assert_fail@plt+0x2c44>
   12198:	movw	r0, #20976	; 0x51f0
   1219c:	movt	r0, #3
   121a0:	movw	r1, #0
   121a4:	str	r1, [r0, #40]	; 0x28
   121a8:	movw	r0, #20976	; 0x51f0
   121ac:	movt	r0, #3
   121b0:	ldr	r0, [r0, #24]
   121b4:	movw	r1, #0
   121b8:	cmp	r0, r1
   121bc:	beq	121e4 <__assert_fail@plt+0xa0c>
   121c0:	movw	r0, #9495	; 0x2517
   121c4:	movt	r0, #2
   121c8:	movw	r1, #9485	; 0x250d
   121cc:	movt	r1, #2
   121d0:	bl	1441c <__assert_fail@plt+0x2c44>
   121d4:	movw	r0, #20976	; 0x51f0
   121d8:	movt	r0, #3
   121dc:	movw	r1, #0
   121e0:	str	r1, [r0, #24]
   121e4:	b	1250c <__assert_fail@plt+0xd34>
   121e8:	movw	r0, #20960	; 0x51e0
   121ec:	movt	r0, #3
   121f0:	ldr	r0, [r0]
   121f4:	movw	r1, #110	; 0x6e
   121f8:	movw	r2, #1
   121fc:	str	r2, [sp, #232]	; 0xe8
   12200:	mvn	r3, #0
   12204:	ldr	ip, [sp, #232]	; 0xe8
   12208:	str	ip, [sp]
   1220c:	bl	14484 <__assert_fail@plt+0x2cac>
   12210:	movw	r1, #20976	; 0x51f0
   12214:	movt	r1, #3
   12218:	str	r0, [r1, #40]	; 0x28
   1221c:	ldr	r0, [r1, #36]	; 0x24
   12220:	cmp	r0, #0
   12224:	beq	1224c <__assert_fail@plt+0xa74>
   12228:	movw	r0, #9510	; 0x2526
   1222c:	movt	r0, #2
   12230:	movw	r1, #9470	; 0x24fe
   12234:	movt	r1, #2
   12238:	bl	1441c <__assert_fail@plt+0x2c44>
   1223c:	movw	r0, #20976	; 0x51f0
   12240:	movt	r0, #3
   12244:	movw	r1, #0
   12248:	str	r1, [r0, #36]	; 0x24
   1224c:	movw	r0, #20976	; 0x51f0
   12250:	movt	r0, #3
   12254:	ldr	r0, [r0, #24]
   12258:	movw	r1, #0
   1225c:	cmp	r0, r1
   12260:	beq	122b4 <__assert_fail@plt+0xadc>
   12264:	movw	r0, #20976	; 0x51f0
   12268:	movt	r0, #3
   1226c:	ldr	r0, [r0, #40]	; 0x28
   12270:	cmp	r0, #1
   12274:	bne	1228c <__assert_fail@plt+0xab4>
   12278:	movw	r0, #20976	; 0x51f0
   1227c:	movt	r0, #3
   12280:	movw	r1, #0
   12284:	str	r1, [r0, #40]	; 0x28
   12288:	b	122b0 <__assert_fail@plt+0xad8>
   1228c:	movw	r0, #9510	; 0x2526
   12290:	movt	r0, #2
   12294:	movw	r1, #9485	; 0x250d
   12298:	movt	r1, #2
   1229c:	bl	1441c <__assert_fail@plt+0x2c44>
   122a0:	movw	r0, #20976	; 0x51f0
   122a4:	movt	r0, #3
   122a8:	movw	r1, #0
   122ac:	str	r1, [r0, #24]
   122b0:	b	122b4 <__assert_fail@plt+0xadc>
   122b4:	b	1250c <__assert_fail@plt+0xd34>
   122b8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   122bc:	blx	r0
   122c0:	movw	r0, #20960	; 0x51e0
   122c4:	movt	r0, #3
   122c8:	ldr	r0, [r0]
   122cc:	movw	r1, #20976	; 0x51f0
   122d0:	movt	r1, #3
   122d4:	ldr	r3, [r1, #4]
   122d8:	movw	r1, #115	; 0x73
   122dc:	movw	r2, #1
   122e0:	movw	ip, #0
   122e4:	str	ip, [sp]
   122e8:	bl	14484 <__assert_fail@plt+0x2cac>
   122ec:	str	r0, [fp, #-212]	; 0xffffff2c
   122f0:	ldr	r0, [fp, #-212]	; 0xffffff2c
   122f4:	movw	r1, #20976	; 0x51f0
   122f8:	movt	r1, #3
   122fc:	ldr	r1, [r1, #4]
   12300:	cmp	r0, r1
   12304:	bls	12358 <__assert_fail@plt+0xb80>
   12308:	movw	r0, #9524	; 0x2534
   1230c:	movt	r0, #2
   12310:	bl	1161c <gettext@plt>
   12314:	ldr	r3, [fp, #-212]	; 0xffffff2c
   12318:	movw	r1, #20976	; 0x51f0
   1231c:	movt	r1, #3
   12320:	ldr	r1, [r1, #4]
   12324:	movw	r2, #0
   12328:	str	r0, [sp, #228]	; 0xe4
   1232c:	mov	r0, r2
   12330:	str	r1, [sp, #224]	; 0xe0
   12334:	mov	r1, r2
   12338:	ldr	r2, [sp, #228]	; 0xe4
   1233c:	ldr	ip, [sp, #224]	; 0xe0
   12340:	str	ip, [sp]
   12344:	bl	1158c <error@plt>
   12348:	movw	r0, #20976	; 0x51f0
   1234c:	movt	r0, #3
   12350:	ldr	r0, [r0, #4]
   12354:	str	r0, [fp, #-212]	; 0xffffff2c
   12358:	ldr	r0, [fp, #-212]	; 0xffffff2c
   1235c:	movw	r1, #20976	; 0x51f0
   12360:	movt	r1, #3
   12364:	str	r0, [r1, #12]
   12368:	b	1250c <__assert_fail@plt+0xd34>
   1236c:	movw	r0, #1
   12370:	str	r0, [fp, #-32]	; 0xffffffe0
   12374:	b	1250c <__assert_fail@plt+0xd34>
   12378:	movw	r0, #21028	; 0x5224
   1237c:	movt	r0, #3
   12380:	movw	r1, #1
   12384:	strb	r1, [r0]
   12388:	b	1250c <__assert_fail@plt+0xd34>
   1238c:	movw	r0, #20976	; 0x51f0
   12390:	movt	r0, #3
   12394:	movw	r1, #1
   12398:	str	r1, [r0]
   1239c:	b	1250c <__assert_fail@plt+0xd34>
   123a0:	movw	r0, #21029	; 0x5225
   123a4:	movt	r0, #3
   123a8:	movw	r1, #1
   123ac:	strb	r1, [r0]
   123b0:	b	1250c <__assert_fail@plt+0xd34>
   123b4:	movw	r0, #21030	; 0x5226
   123b8:	movt	r0, #3
   123bc:	movw	r1, #1
   123c0:	strb	r1, [r0]
   123c4:	movw	r0, #21028	; 0x5224
   123c8:	movt	r0, #3
   123cc:	strb	r1, [r0]
   123d0:	b	1250c <__assert_fail@plt+0xd34>
   123d4:	movw	r0, #0
   123d8:	str	r0, [fp, #-36]	; 0xffffffdc
   123dc:	b	1250c <__assert_fail@plt+0xd34>
   123e0:	ldr	r3, [pc, #2700]	; 12e74 <__assert_fail@plt+0x169c>
   123e4:	movw	r0, #20960	; 0x51e0
   123e8:	movt	r0, #3
   123ec:	ldr	r0, [r0]
   123f0:	movw	r1, #80	; 0x50
   123f4:	movw	r2, #0
   123f8:	movw	ip, #1
   123fc:	str	ip, [sp]
   12400:	bl	14484 <__assert_fail@plt+0x2cac>
   12404:	movw	r1, #20832	; 0x5160
   12408:	movt	r1, #3
   1240c:	str	r0, [r1]
   12410:	b	1250c <__assert_fail@plt+0xd34>
   12414:	movw	r0, #20960	; 0x51e0
   12418:	movt	r0, #3
   1241c:	ldr	r0, [r0]
   12420:	str	r0, [fp, #-40]	; 0xffffffd8
   12424:	b	1250c <__assert_fail@plt+0xd34>
   12428:	movw	r0, #9257	; 0x2429
   1242c:	movt	r0, #2
   12430:	bl	16f4c <__assert_fail@plt+0x5774>
   12434:	movw	r0, #0
   12438:	str	r0, [fp, #-12]
   1243c:	b	12e68 <__assert_fail@plt+0x1690>
   12440:	movw	r0, #20960	; 0x51e0
   12444:	movt	r0, #3
   12448:	ldr	r0, [r0]
   1244c:	movw	r1, #61	; 0x3d
   12450:	bl	11640 <strchr@plt>
   12454:	movw	r1, #0
   12458:	cmp	r0, r1
   1245c:	beq	12498 <__assert_fail@plt+0xcc0>
   12460:	movw	r0, #9589	; 0x2575
   12464:	movt	r0, #2
   12468:	bl	1161c <gettext@plt>
   1246c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12470:	movw	r2, #15324	; 0x3bdc
   12474:	movt	r2, #2
   12478:	add	r1, r2, r1, lsl #4
   1247c:	ldr	r3, [r1]
   12480:	movw	r1, #1
   12484:	str	r0, [sp, #220]	; 0xdc
   12488:	mov	r0, r1
   1248c:	movw	r1, #0
   12490:	ldr	r2, [sp, #220]	; 0xdc
   12494:	bl	1158c <error@plt>
   12498:	movw	r0, #20960	; 0x51e0
   1249c:	movt	r0, #3
   124a0:	ldr	r0, [r0]
   124a4:	movw	r1, #21032	; 0x5228
   124a8:	movt	r1, #3
   124ac:	str	r0, [r1]
   124b0:	ldr	r0, [r1]
   124b4:	bl	11784 <unsetenv@plt>
   124b8:	movw	r1, #0
   124bc:	cmp	r1, r0
   124c0:	beq	12500 <__assert_fail@plt+0xd28>
   124c4:	bl	11664 <__errno_location@plt>
   124c8:	ldr	r1, [r0]
   124cc:	movw	r0, #9646	; 0x25ae
   124d0:	movt	r0, #2
   124d4:	str	r1, [sp, #216]	; 0xd8
   124d8:	bl	1161c <gettext@plt>
   124dc:	movw	r1, #21032	; 0x5228
   124e0:	movt	r1, #3
   124e4:	ldr	r3, [r1]
   124e8:	movw	r1, #1
   124ec:	str	r0, [sp, #212]	; 0xd4
   124f0:	mov	r0, r1
   124f4:	ldr	r1, [sp, #216]	; 0xd8
   124f8:	ldr	r2, [sp, #212]	; 0xd4
   124fc:	bl	1158c <error@plt>
   12500:	b	1250c <__assert_fail@plt+0xd34>
   12504:	movw	r0, #1
   12508:	bl	13ffc <__assert_fail@plt+0x2824>
   1250c:	b	11b64 <__assert_fail@plt+0x38c>
   12510:	movw	r0, #21024	; 0x5220
   12514:	movt	r0, #3
   12518:	ldr	r0, [r0]
   1251c:	movw	r1, #0
   12520:	cmp	r0, r1
   12524:	beq	1255c <__assert_fail@plt+0xd84>
   12528:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1252c:	movw	r1, #15336	; 0x3be8
   12530:	movt	r1, #1
   12534:	cmp	r0, r1
   12538:	bne	1255c <__assert_fail@plt+0xd84>
   1253c:	movw	r0, #9686	; 0x25d6
   12540:	movt	r0, #2
   12544:	bl	1161c <gettext@plt>
   12548:	movw	r1, #0
   1254c:	str	r0, [sp, #208]	; 0xd0
   12550:	mov	r0, r1
   12554:	ldr	r2, [sp, #208]	; 0xd0
   12558:	bl	1158c <error@plt>
   1255c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12560:	blx	r0
   12564:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12568:	movw	r1, #0
   1256c:	cmp	r1, r0
   12570:	bne	12578 <__assert_fail@plt+0xda0>
   12574:	b	12598 <__assert_fail@plt+0xdc0>
   12578:	movw	r0, #9745	; 0x2611
   1257c:	movt	r0, #2
   12580:	movw	r1, #9349	; 0x2485
   12584:	movt	r1, #2
   12588:	movw	r2, #723	; 0x2d3
   1258c:	movw	r3, #9357	; 0x248d
   12590:	movt	r3, #2
   12594:	bl	117d8 <__assert_fail@plt>
   12598:	movw	r0, #18048	; 0x4680
   1259c:	movt	r0, #1
   125a0:	str	r0, [fp, #-204]	; 0xffffff34
   125a4:	sub	r0, fp, #204	; 0xcc
   125a8:	add	r0, r0, #4
   125ac:	bl	1170c <sigemptyset@plt>
   125b0:	movw	r1, #0
   125b4:	str	r1, [fp, #-72]	; 0xffffffb8
   125b8:	movw	r2, #10
   125bc:	str	r0, [sp, #204]	; 0xcc
   125c0:	mov	r0, r2
   125c4:	sub	r2, fp, #204	; 0xcc
   125c8:	str	r1, [sp, #200]	; 0xc8
   125cc:	mov	r1, r2
   125d0:	ldr	r2, [sp, #200]	; 0xc8
   125d4:	bl	11538 <sigaction@plt>
   125d8:	movw	r1, #0
   125dc:	cmp	r1, r0
   125e0:	beq	12614 <__assert_fail@plt+0xe3c>
   125e4:	bl	11664 <__errno_location@plt>
   125e8:	ldr	r1, [r0]
   125ec:	movw	r0, #9768	; 0x2628
   125f0:	movt	r0, #2
   125f4:	str	r1, [sp, #196]	; 0xc4
   125f8:	bl	1161c <gettext@plt>
   125fc:	movw	r1, #0
   12600:	str	r0, [sp, #192]	; 0xc0
   12604:	mov	r0, r1
   12608:	ldr	r1, [sp, #196]	; 0xc4
   1260c:	ldr	r2, [sp, #192]	; 0xc0
   12610:	bl	1158c <error@plt>
   12614:	movw	r0, #18128	; 0x46d0
   12618:	movt	r0, #1
   1261c:	str	r0, [fp, #-204]	; 0xffffff34
   12620:	sub	r0, fp, #204	; 0xcc
   12624:	add	r0, r0, #4
   12628:	bl	1170c <sigemptyset@plt>
   1262c:	movw	r1, #0
   12630:	str	r1, [fp, #-72]	; 0xffffffb8
   12634:	movw	r2, #12
   12638:	str	r0, [sp, #188]	; 0xbc
   1263c:	mov	r0, r2
   12640:	sub	r2, fp, #204	; 0xcc
   12644:	str	r1, [sp, #184]	; 0xb8
   12648:	mov	r1, r2
   1264c:	ldr	r2, [sp, #184]	; 0xb8
   12650:	bl	11538 <sigaction@plt>
   12654:	movw	r1, #0
   12658:	cmp	r1, r0
   1265c:	beq	12690 <__assert_fail@plt+0xeb8>
   12660:	bl	11664 <__errno_location@plt>
   12664:	ldr	r1, [r0]
   12668:	movw	r0, #9802	; 0x264a
   1266c:	movt	r0, #2
   12670:	str	r1, [sp, #180]	; 0xb4
   12674:	bl	1161c <gettext@plt>
   12678:	movw	r1, #0
   1267c:	str	r0, [sp, #176]	; 0xb0
   12680:	mov	r0, r1
   12684:	ldr	r1, [sp, #180]	; 0xb4
   12688:	ldr	r2, [sp, #176]	; 0xb0
   1268c:	bl	1158c <error@plt>
   12690:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12694:	movw	r1, #17535	; 0x447f
   12698:	movt	r1, #2
   1269c:	bl	11430 <strcmp@plt>
   126a0:	movw	r1, #0
   126a4:	cmp	r1, r0
   126a8:	bne	126c8 <__assert_fail@plt+0xef0>
   126ac:	movw	r0, #20952	; 0x51d8
   126b0:	movt	r0, #3
   126b4:	ldr	r0, [r0]
   126b8:	movw	r1, #21036	; 0x522c
   126bc:	movt	r1, #3
   126c0:	str	r0, [r1]
   126c4:	b	1274c <__assert_fail@plt+0xf74>
   126c8:	movw	r0, #21040	; 0x5230
   126cc:	movt	r0, #3
   126d0:	movw	r1, #1
   126d4:	str	r1, [r0]
   126d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   126dc:	bl	1470c <__assert_fail@plt+0x2f34>
   126e0:	movw	r1, #21036	; 0x522c
   126e4:	movt	r1, #3
   126e8:	str	r0, [r1]
   126ec:	ldr	r0, [r1]
   126f0:	movw	r1, #0
   126f4:	cmp	r1, r0
   126f8:	bne	12748 <__assert_fail@plt+0xf70>
   126fc:	bl	11664 <__errno_location@plt>
   12700:	ldr	r1, [r0]
   12704:	movw	r0, #9836	; 0x266c
   12708:	movt	r0, #2
   1270c:	str	r1, [sp, #172]	; 0xac
   12710:	bl	1161c <gettext@plt>
   12714:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12718:	movw	r1, #0
   1271c:	str	r0, [sp, #168]	; 0xa8
   12720:	mov	r0, r1
   12724:	movw	r1, #8
   12728:	bl	1afbc <__assert_fail@plt+0x97e4>
   1272c:	movw	r1, #1
   12730:	str	r0, [sp, #164]	; 0xa4
   12734:	mov	r0, r1
   12738:	ldr	r1, [sp, #172]	; 0xac
   1273c:	ldr	r2, [sp, #168]	; 0xa8
   12740:	ldr	r3, [sp, #164]	; 0xa4
   12744:	bl	1158c <error@plt>
   12748:	b	1274c <__assert_fail@plt+0xf74>
   1274c:	movw	r0, #20976	; 0x51f0
   12750:	movt	r0, #3
   12754:	ldr	r0, [r0, #24]
   12758:	movw	r1, #0
   1275c:	cmp	r0, r1
   12760:	bne	12778 <__assert_fail@plt+0xfa0>
   12764:	movw	r0, #20976	; 0x51f0
   12768:	movt	r0, #3
   1276c:	ldr	r0, [r0, #36]	; 0x24
   12770:	cmp	r0, #0
   12774:	beq	12788 <__assert_fail@plt+0xfb0>
   12778:	movw	r0, #20976	; 0x51f0
   1277c:	movt	r0, #3
   12780:	movw	r1, #1
   12784:	str	r1, [r0]
   12788:	movw	r0, #20936	; 0x51c8
   1278c:	movt	r0, #3
   12790:	ldr	r0, [r0]
   12794:	ldr	r1, [fp, #-16]
   12798:	cmp	r0, r1
   1279c:	bne	127c8 <__assert_fail@plt+0xff0>
   127a0:	sub	r0, fp, #52	; 0x34
   127a4:	sub	r1, fp, #45	; 0x2d
   127a8:	movw	r2, #20936	; 0x51c8
   127ac:	movt	r2, #3
   127b0:	movw	r3, #0
   127b4:	str	r3, [r2]
   127b8:	movw	r2, #1
   127bc:	str	r2, [fp, #-16]
   127c0:	str	r1, [fp, #-52]	; 0xffffffcc
   127c4:	str	r0, [fp, #-20]	; 0xffffffec
   127c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   127cc:	cmp	r0, #0
   127d0:	beq	12a2c <__assert_fail@plt+0x1254>
   127d4:	movw	r0, #20944	; 0x51d0
   127d8:	movt	r0, #3
   127dc:	ldr	r1, [r0]
   127e0:	movw	r2, #9862	; 0x2686
   127e4:	movt	r2, #2
   127e8:	str	r0, [sp, #160]	; 0xa0
   127ec:	mov	r0, r2
   127f0:	str	r1, [sp, #156]	; 0x9c
   127f4:	bl	1161c <gettext@plt>
   127f8:	str	r0, [sp, #152]	; 0x98
   127fc:	bl	16160 <__assert_fail@plt+0x4988>
   12800:	mov	r1, #0
   12804:	ldr	r2, [sp, #156]	; 0x9c
   12808:	str	r0, [sp, #148]	; 0x94
   1280c:	mov	r0, r2
   12810:	ldr	r3, [sp, #152]	; 0x98
   12814:	str	r1, [sp, #144]	; 0x90
   12818:	mov	r1, r3
   1281c:	ldr	r2, [sp, #148]	; 0x94
   12820:	ldr	r3, [sp, #144]	; 0x90
   12824:	bl	11658 <fprintf@plt>
   12828:	ldr	r1, [sp, #160]	; 0xa0
   1282c:	ldr	r2, [r1]
   12830:	movw	r3, #9909	; 0x26b5
   12834:	movt	r3, #2
   12838:	str	r0, [sp, #140]	; 0x8c
   1283c:	mov	r0, r3
   12840:	str	r2, [sp, #136]	; 0x88
   12844:	bl	1161c <gettext@plt>
   12848:	movw	r1, #20976	; 0x51f0
   1284c:	movt	r1, #3
   12850:	ldr	r2, [r1, #4]
   12854:	ldr	r3, [sp, #136]	; 0x88
   12858:	str	r0, [sp, #132]	; 0x84
   1285c:	mov	r0, r3
   12860:	ldr	ip, [sp, #132]	; 0x84
   12864:	str	r1, [sp, #128]	; 0x80
   12868:	mov	r1, ip
   1286c:	ldr	r3, [sp, #144]	; 0x90
   12870:	bl	11658 <fprintf@plt>
   12874:	ldr	r1, [sp, #160]	; 0xa0
   12878:	ldr	r2, [r1]
   1287c:	movw	r3, #9967	; 0x26ef
   12880:	movt	r3, #2
   12884:	str	r0, [sp, #124]	; 0x7c
   12888:	mov	r0, r3
   1288c:	str	r2, [sp, #120]	; 0x78
   12890:	bl	1161c <gettext@plt>
   12894:	ldr	r1, [sp, #128]	; 0x80
   12898:	ldr	r2, [r1, #8]
   1289c:	ldr	r3, [sp, #120]	; 0x78
   128a0:	str	r0, [sp, #116]	; 0x74
   128a4:	mov	r0, r3
   128a8:	ldr	r1, [sp, #116]	; 0x74
   128ac:	ldr	r3, [sp, #144]	; 0x90
   128b0:	bl	11658 <fprintf@plt>
   128b4:	ldr	r1, [sp, #160]	; 0xa0
   128b8:	ldr	r2, [r1]
   128bc:	movw	r3, #10044	; 0x273c
   128c0:	movt	r3, #2
   128c4:	str	r0, [sp, #112]	; 0x70
   128c8:	mov	r0, r3
   128cc:	str	r2, [sp, #108]	; 0x6c
   128d0:	bl	1161c <gettext@plt>
   128d4:	ldr	r1, [sp, #128]	; 0x80
   128d8:	ldr	r2, [r1, #4]
   128dc:	str	r0, [sp, #104]	; 0x68
   128e0:	str	r2, [sp, #100]	; 0x64
   128e4:	bl	16160 <__assert_fail@plt+0x4988>
   128e8:	ldr	r1, [sp, #100]	; 0x64
   128ec:	sub	r2, r1, r0
   128f0:	ldr	r0, [sp, #108]	; 0x6c
   128f4:	ldr	r1, [sp, #104]	; 0x68
   128f8:	ldr	r3, [sp, #144]	; 0x90
   128fc:	bl	11658 <fprintf@plt>
   12900:	ldr	r1, [sp, #160]	; 0xa0
   12904:	ldr	r2, [r1]
   12908:	movw	r3, #10099	; 0x2773
   1290c:	movt	r3, #2
   12910:	str	r0, [sp, #96]	; 0x60
   12914:	mov	r0, r3
   12918:	str	r2, [sp, #92]	; 0x5c
   1291c:	bl	1161c <gettext@plt>
   12920:	ldr	r1, [sp, #128]	; 0x80
   12924:	ldr	r2, [r1, #12]
   12928:	ldr	r3, [sp, #92]	; 0x5c
   1292c:	str	r0, [sp, #88]	; 0x58
   12930:	mov	r0, r3
   12934:	ldr	r1, [sp, #88]	; 0x58
   12938:	ldr	r3, [sp, #144]	; 0x90
   1293c:	bl	11658 <fprintf@plt>
   12940:	movw	r1, #20944	; 0x51d0
   12944:	movt	r1, #3
   12948:	ldr	r1, [r1]
   1294c:	movw	r2, #10151	; 0x27a7
   12950:	movt	r2, #2
   12954:	str	r0, [sp, #84]	; 0x54
   12958:	mov	r0, r2
   1295c:	str	r1, [sp, #80]	; 0x50
   12960:	bl	1161c <gettext@plt>
   12964:	mvn	r2, #-2147483648	; 0x80000000
   12968:	mov	r3, #0
   1296c:	ldr	r1, [sp, #80]	; 0x50
   12970:	str	r0, [sp, #76]	; 0x4c
   12974:	mov	r0, r1
   12978:	ldr	r1, [sp, #76]	; 0x4c
   1297c:	bl	11658 <fprintf@plt>
   12980:	movw	r1, #0
   12984:	str	r0, [sp, #72]	; 0x48
   12988:	mov	r0, r1
   1298c:	bl	11778 <isatty@plt>
   12990:	cmp	r0, #0
   12994:	beq	12a28 <__assert_fail@plt+0x1250>
   12998:	movw	r0, #20944	; 0x51d0
   1299c:	movt	r0, #3
   129a0:	ldr	r0, [r0]
   129a4:	movw	r1, #10211	; 0x27e3
   129a8:	movt	r1, #2
   129ac:	str	r0, [sp, #68]	; 0x44
   129b0:	mov	r0, r1
   129b4:	bl	1161c <gettext@plt>
   129b8:	ldr	r1, [sp, #68]	; 0x44
   129bc:	str	r0, [sp, #64]	; 0x40
   129c0:	mov	r0, r1
   129c4:	ldr	r1, [sp, #64]	; 0x40
   129c8:	bl	11658 <fprintf@plt>
   129cc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   129d0:	cmp	r1, #0
   129d4:	beq	12a24 <__assert_fail@plt+0x124c>
   129d8:	movw	r0, #20944	; 0x51d0
   129dc:	movt	r0, #3
   129e0:	ldr	r0, [r0]
   129e4:	movw	r1, #10384	; 0x2890
   129e8:	movt	r1, #2
   129ec:	str	r0, [sp, #60]	; 0x3c
   129f0:	mov	r0, r1
   129f4:	bl	1161c <gettext@plt>
   129f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   129fc:	movw	r2, #20936	; 0x51c8
   12a00:	movt	r2, #3
   12a04:	ldr	r2, [r2]
   12a08:	add	r1, r1, r2, lsl #2
   12a0c:	ldr	r2, [r1]
   12a10:	ldr	r1, [sp, #60]	; 0x3c
   12a14:	str	r0, [sp, #56]	; 0x38
   12a18:	mov	r0, r1
   12a1c:	ldr	r1, [sp, #56]	; 0x38
   12a20:	bl	11658 <fprintf@plt>
   12a24:	b	12a28 <__assert_fail@plt+0x1250>
   12a28:	b	12a2c <__assert_fail@plt+0x1254>
   12a2c:	movw	r0, #20976	; 0x51f0
   12a30:	movt	r0, #3
   12a34:	ldr	r0, [r0, #12]
   12a38:	add	r0, r0, #1
   12a3c:	bl	1c09c <__assert_fail@plt+0xa8c4>
   12a40:	movw	r1, #21044	; 0x5234
   12a44:	movt	r1, #3
   12a48:	str	r0, [r1]
   12a4c:	movw	r0, #20976	; 0x51f0
   12a50:	movt	r0, #3
   12a54:	ldr	r0, [r0, #12]
   12a58:	add	r0, r0, #1
   12a5c:	bl	1c09c <__assert_fail@plt+0xa8c4>
   12a60:	movw	r1, #21048	; 0x5238
   12a64:	movt	r1, #3
   12a68:	str	r0, [r1, #12]
   12a6c:	movw	r0, #17
   12a70:	movw	r1, #0
   12a74:	bl	114c0 <signal@plt>
   12a78:	movw	r1, #20976	; 0x51f0
   12a7c:	movt	r1, #3
   12a80:	ldr	r1, [r1, #24]
   12a84:	movw	r2, #0
   12a88:	cmp	r1, r2
   12a8c:	bne	12c2c <__assert_fail@plt+0x1454>
   12a90:	b	12a94 <__assert_fail@plt+0x12bc>
   12a94:	movw	r0, #20936	; 0x51c8
   12a98:	movt	r0, #3
   12a9c:	ldr	r0, [r0]
   12aa0:	ldr	r1, [fp, #-16]
   12aa4:	cmp	r0, r1
   12aa8:	bge	12b2c <__assert_fail@plt+0x1354>
   12aac:	ldr	r0, [fp, #-20]	; 0xffffffec
   12ab0:	movw	r1, #20936	; 0x51c8
   12ab4:	movt	r1, #3
   12ab8:	ldr	r1, [r1]
   12abc:	ldr	r2, [r0, r1, lsl #2]!
   12ac0:	ldr	r0, [r0]
   12ac4:	str	r2, [sp, #52]	; 0x34
   12ac8:	bl	11634 <strlen@plt>
   12acc:	add	r3, r0, #1
   12ad0:	movw	r0, #20836	; 0x5164
   12ad4:	movt	r0, #3
   12ad8:	ldrb	r0, [r0]
   12adc:	and	r0, r0, #1
   12ae0:	movw	r1, #20976	; 0x51f0
   12ae4:	movt	r1, #3
   12ae8:	str	r0, [sp, #48]	; 0x30
   12aec:	mov	r0, r1
   12af0:	movw	r1, #21048	; 0x5238
   12af4:	movt	r1, #3
   12af8:	ldr	r2, [sp, #52]	; 0x34
   12afc:	movw	ip, #0
   12b00:	str	ip, [sp]
   12b04:	str	ip, [sp, #4]
   12b08:	ldr	ip, [sp, #48]	; 0x30
   12b0c:	str	ip, [sp, #8]
   12b10:	bl	15770 <__assert_fail@plt+0x3f98>
   12b14:	movw	r0, #20936	; 0x51c8
   12b18:	movt	r0, #3
   12b1c:	ldr	r1, [r0]
   12b20:	add	r1, r1, #1
   12b24:	str	r1, [r0]
   12b28:	b	12a94 <__assert_fail@plt+0x12bc>
   12b2c:	movw	r0, #20836	; 0x5164
   12b30:	movt	r0, #3
   12b34:	movw	r1, #0
   12b38:	strb	r1, [r0]
   12b3c:	movw	r0, #21048	; 0x5238
   12b40:	movt	r0, #3
   12b44:	ldr	r1, [r0]
   12b48:	movw	r2, #20976	; 0x51f0
   12b4c:	movt	r2, #3
   12b50:	str	r1, [r2, #28]
   12b54:	ldr	r1, [r0, #16]
   12b58:	str	r1, [r0, #20]
   12b5c:	ldr	r0, [r0]
   12b60:	str	r0, [r2, #28]
   12b64:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12b68:	blx	r0
   12b6c:	cmn	r0, #1
   12b70:	beq	12bd0 <__assert_fail@plt+0x13f8>
   12b74:	movw	r0, #20976	; 0x51f0
   12b78:	movt	r0, #3
   12b7c:	ldr	r0, [r0, #36]	; 0x24
   12b80:	cmp	r0, #0
   12b84:	beq	12bcc <__assert_fail@plt+0x13f4>
   12b88:	movw	r0, #21092	; 0x5264
   12b8c:	movt	r0, #3
   12b90:	ldr	r0, [r0]
   12b94:	movw	r1, #20976	; 0x51f0
   12b98:	movt	r1, #3
   12b9c:	ldr	r1, [r1, #36]	; 0x24
   12ba0:	cmp	r0, r1
   12ba4:	bcc	12bcc <__assert_fail@plt+0x13f4>
   12ba8:	movw	r0, #20976	; 0x51f0
   12bac:	movt	r0, #3
   12bb0:	movw	r1, #21048	; 0x5238
   12bb4:	movt	r1, #3
   12bb8:	bl	15ad4 <__assert_fail@plt+0x42fc>
   12bbc:	movw	r0, #21092	; 0x5264
   12bc0:	movt	r0, #3
   12bc4:	movw	r1, #0
   12bc8:	str	r1, [r0]
   12bcc:	b	12b64 <__assert_fail@plt+0x138c>
   12bd0:	movw	r0, #21048	; 0x5238
   12bd4:	movt	r0, #3
   12bd8:	ldr	r0, [r0]
   12bdc:	movw	r1, #20976	; 0x51f0
   12be0:	movt	r1, #3
   12be4:	ldr	r1, [r1, #28]
   12be8:	cmp	r0, r1
   12bec:	bne	12c14 <__assert_fail@plt+0x143c>
   12bf0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12bf4:	cmp	r0, #0
   12bf8:	beq	12c28 <__assert_fail@plt+0x1450>
   12bfc:	movw	r0, #21096	; 0x5268
   12c00:	movt	r0, #3
   12c04:	ldrb	r0, [r0]
   12c08:	and	r0, r0, #1
   12c0c:	cmp	r0, #0
   12c10:	bne	12c28 <__assert_fail@plt+0x1450>
   12c14:	movw	r0, #20976	; 0x51f0
   12c18:	movt	r0, #3
   12c1c:	movw	r1, #21048	; 0x5238
   12c20:	movt	r1, #3
   12c24:	bl	15ad4 <__assert_fail@plt+0x42fc>
   12c28:	b	12e48 <__assert_fail@plt+0x1670>
   12c2c:	ldr	r0, [fp, #-16]
   12c30:	lsl	r0, r0, #2
   12c34:	bl	1c09c <__assert_fail@plt+0xa8c4>
   12c38:	str	r0, [fp, #-224]	; 0xffffff20
   12c3c:	movw	r0, #20936	; 0x51c8
   12c40:	movt	r0, #3
   12c44:	ldr	r0, [r0]
   12c48:	str	r0, [fp, #-216]	; 0xffffff28
   12c4c:	ldr	r0, [fp, #-216]	; 0xffffff28
   12c50:	ldr	r1, [fp, #-16]
   12c54:	cmp	r0, r1
   12c58:	bge	12c8c <__assert_fail@plt+0x14b4>
   12c5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12c60:	ldr	r1, [fp, #-216]	; 0xffffff28
   12c64:	ldr	r0, [r0, r1, lsl #2]
   12c68:	bl	11634 <strlen@plt>
   12c6c:	ldr	r1, [fp, #-224]	; 0xffffff20
   12c70:	ldr	r2, [fp, #-216]	; 0xffffff28
   12c74:	add	r1, r1, r2, lsl #2
   12c78:	str	r0, [r1]
   12c7c:	ldr	r0, [fp, #-216]	; 0xffffff28
   12c80:	add	r0, r0, #1
   12c84:	str	r0, [fp, #-216]	; 0xffffff28
   12c88:	b	12c4c <__assert_fail@plt+0x1474>
   12c8c:	movw	r0, #20976	; 0x51f0
   12c90:	movt	r0, #3
   12c94:	ldr	r1, [r0, #24]
   12c98:	str	r0, [sp, #44]	; 0x2c
   12c9c:	mov	r0, r1
   12ca0:	bl	11634 <strlen@plt>
   12ca4:	ldr	r1, [sp, #44]	; 0x2c
   12ca8:	str	r0, [r1, #20]
   12cac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12cb0:	blx	r0
   12cb4:	str	r0, [fp, #-220]	; 0xffffff24
   12cb8:	cmn	r0, #1
   12cbc:	beq	12e44 <__assert_fail@plt+0x166c>
   12cc0:	ldr	r0, [fp, #-220]	; 0xffffff24
   12cc4:	str	r0, [fp, #-228]	; 0xffffff1c
   12cc8:	movw	r0, #20976	; 0x51f0
   12ccc:	movt	r0, #3
   12cd0:	movw	r1, #21048	; 0x5238
   12cd4:	movt	r1, #3
   12cd8:	str	r1, [sp, #40]	; 0x28
   12cdc:	bl	16040 <__assert_fail@plt+0x4868>
   12ce0:	mov	r0, #0
   12ce4:	ldr	r1, [sp, #40]	; 0x28
   12ce8:	str	r0, [r1, #16]
   12cec:	ldr	r0, [fp, #-20]	; 0xffffffec
   12cf0:	movw	r2, #20936	; 0x51c8
   12cf4:	movt	r2, #3
   12cf8:	ldr	r2, [r2]
   12cfc:	ldr	r0, [r0, r2, lsl #2]
   12d00:	ldr	r3, [fp, #-224]	; 0xffffff20
   12d04:	add	r2, r3, r2, lsl #2
   12d08:	ldr	r2, [r2]
   12d0c:	add	r3, r2, #1
   12d10:	movw	r2, #20836	; 0x5164
   12d14:	movt	r2, #3
   12d18:	ldrb	r2, [r2]
   12d1c:	and	r2, r2, #1
   12d20:	movw	ip, #20976	; 0x51f0
   12d24:	movt	ip, #3
   12d28:	str	r0, [sp, #36]	; 0x24
   12d2c:	mov	r0, ip
   12d30:	movw	r1, #21048	; 0x5238
   12d34:	movt	r1, #3
   12d38:	ldr	ip, [sp, #36]	; 0x24
   12d3c:	str	r2, [sp, #32]
   12d40:	mov	r2, ip
   12d44:	movw	lr, #0
   12d48:	str	lr, [sp]
   12d4c:	str	lr, [sp, #4]
   12d50:	ldr	lr, [sp, #32]
   12d54:	str	lr, [sp, #8]
   12d58:	bl	15770 <__assert_fail@plt+0x3f98>
   12d5c:	ldr	r0, [fp, #-228]	; 0xffffff1c
   12d60:	mvn	r1, #0
   12d64:	add	r0, r0, r1
   12d68:	str	r0, [fp, #-228]	; 0xffffff1c
   12d6c:	movw	r0, #20836	; 0x5164
   12d70:	movt	r0, #3
   12d74:	movw	r1, #0
   12d78:	strb	r1, [r0]
   12d7c:	movw	r0, #20936	; 0x51c8
   12d80:	movt	r0, #3
   12d84:	ldr	r0, [r0]
   12d88:	add	r0, r0, #1
   12d8c:	str	r0, [fp, #-216]	; 0xffffff28
   12d90:	ldr	r0, [fp, #-216]	; 0xffffff28
   12d94:	ldr	r1, [fp, #-16]
   12d98:	cmp	r0, r1
   12d9c:	bge	12e2c <__assert_fail@plt+0x1654>
   12da0:	ldr	r0, [fp, #-20]	; 0xffffffec
   12da4:	ldr	r1, [fp, #-216]	; 0xffffff28
   12da8:	ldr	r2, [r0, r1, lsl #2]
   12dac:	ldr	r0, [fp, #-224]	; 0xffffff20
   12db0:	add	r0, r0, r1, lsl #2
   12db4:	ldr	r3, [r0]
   12db8:	movw	r0, #21044	; 0x5234
   12dbc:	movt	r0, #3
   12dc0:	ldr	r0, [r0]
   12dc4:	ldr	r1, [fp, #-228]	; 0xffffff1c
   12dc8:	movw	ip, #20836	; 0x5164
   12dcc:	movt	ip, #3
   12dd0:	ldrb	ip, [ip]
   12dd4:	and	ip, ip, #1
   12dd8:	movw	lr, #20976	; 0x51f0
   12ddc:	movt	lr, #3
   12de0:	str	r0, [sp, #28]
   12de4:	mov	r0, lr
   12de8:	movw	lr, #21048	; 0x5238
   12dec:	movt	lr, #3
   12df0:	str	r1, [sp, #24]
   12df4:	mov	r1, lr
   12df8:	movw	lr, #0
   12dfc:	str	lr, [sp]
   12e00:	str	lr, [sp, #4]
   12e04:	ldr	lr, [sp, #28]
   12e08:	str	lr, [sp, #8]
   12e0c:	ldr	r4, [sp, #24]
   12e10:	str	r4, [sp, #12]
   12e14:	str	ip, [sp, #16]
   12e18:	bl	154ec <__assert_fail@plt+0x3d14>
   12e1c:	ldr	r0, [fp, #-216]	; 0xffffff28
   12e20:	add	r0, r0, #1
   12e24:	str	r0, [fp, #-216]	; 0xffffff28
   12e28:	b	12d90 <__assert_fail@plt+0x15b8>
   12e2c:	movw	r0, #20976	; 0x51f0
   12e30:	movt	r0, #3
   12e34:	movw	r1, #21048	; 0x5238
   12e38:	movt	r1, #3
   12e3c:	bl	15ad4 <__assert_fail@plt+0x42fc>
   12e40:	b	12cac <__assert_fail@plt+0x14d4>
   12e44:	b	12e48 <__assert_fail@plt+0x1670>
   12e48:	movw	r0, #21100	; 0x526c
   12e4c:	movt	r0, #3
   12e50:	ldr	r1, [r0]
   12e54:	movw	r2, #20972	; 0x51ec
   12e58:	movt	r2, #3
   12e5c:	str	r1, [r2]
   12e60:	ldr	r0, [r0]
   12e64:	str	r0, [fp, #-12]
   12e68:	ldr	r0, [fp, #-12]
   12e6c:	sub	sp, fp, #8
   12e70:	pop	{r4, sl, fp, pc}
   12e74:	svcvc	0x00ffffff
   12e78:	push	{fp, lr}
   12e7c:	mov	fp, sp
   12e80:	sub	sp, sp, #112	; 0x70
   12e84:	movw	r0, #1
   12e88:	str	r0, [fp, #-8]
   12e8c:	movw	r0, #0
   12e90:	str	r0, [fp, #-16]
   12e94:	mvn	r1, #0
   12e98:	str	r1, [fp, #-20]	; 0xffffffec
   12e9c:	movw	r2, #1
   12ea0:	strb	r2, [fp, #-21]	; 0xffffffeb
   12ea4:	movw	r2, #0
   12ea8:	strb	r2, [fp, #-22]	; 0xffffffea
   12eac:	movw	r2, #21044	; 0x5234
   12eb0:	movt	r2, #3
   12eb4:	ldr	r3, [r2]
   12eb8:	str	r3, [fp, #-32]	; 0xffffffe0
   12ebc:	ldr	r2, [r2]
   12ec0:	movw	r3, #20976	; 0x51f0
   12ec4:	movt	r3, #3
   12ec8:	ldr	r3, [r3, #12]
   12ecc:	add	r2, r2, r3
   12ed0:	movw	r3, #21048	; 0x5238
   12ed4:	movt	r3, #3
   12ed8:	ldr	r3, [r3, #20]
   12edc:	sub	r0, r0, r3
   12ee0:	add	r0, r2, r0
   12ee4:	add	r0, r0, r1
   12ee8:	str	r0, [fp, #-36]	; 0xffffffdc
   12eec:	movw	r0, #21104	; 0x5270
   12ef0:	movt	r0, #3
   12ef4:	ldrb	r0, [r0]
   12ef8:	tst	r0, #1
   12efc:	beq	12f0c <__assert_fail@plt+0x1734>
   12f00:	mvn	r0, #0
   12f04:	str	r0, [fp, #-4]
   12f08:	b	13694 <__assert_fail@plt+0x1ebc>
   12f0c:	b	12f10 <__assert_fail@plt+0x1738>
   12f10:	ldr	r0, [fp, #-20]	; 0xffffffec
   12f14:	str	r0, [fp, #-12]
   12f18:	movw	r0, #21036	; 0x522c
   12f1c:	movt	r0, #3
   12f20:	ldr	r0, [r0]
   12f24:	bl	117b4 <getc@plt>
   12f28:	str	r0, [fp, #-20]	; 0xffffffec
   12f2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12f30:	cmn	r0, #1
   12f34:	bne	130f8 <__assert_fail@plt+0x1920>
   12f38:	movw	r0, #21104	; 0x5270
   12f3c:	movt	r0, #3
   12f40:	movw	r1, #1
   12f44:	strb	r1, [r0]
   12f48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12f4c:	movw	r1, #21044	; 0x5234
   12f50:	movt	r1, #3
   12f54:	ldr	r1, [r1]
   12f58:	cmp	r0, r1
   12f5c:	bne	12f6c <__assert_fail@plt+0x1794>
   12f60:	mvn	r0, #0
   12f64:	str	r0, [fp, #-4]
   12f68:	b	13694 <__assert_fail@plt+0x1ebc>
   12f6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12f70:	add	r1, r0, #1
   12f74:	str	r1, [fp, #-32]	; 0xffffffe0
   12f78:	movw	r1, #0
   12f7c:	strb	r1, [r0]
   12f80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12f84:	movw	r1, #21044	; 0x5234
   12f88:	movt	r1, #3
   12f8c:	ldr	r1, [r1]
   12f90:	sub	r0, r0, r1
   12f94:	str	r0, [fp, #-28]	; 0xffffffe4
   12f98:	ldr	r0, [fp, #-8]
   12f9c:	cmp	r0, #2
   12fa0:	bne	13008 <__assert_fail@plt+0x1830>
   12fa4:	bl	149c8 <__assert_fail@plt+0x31f0>
   12fa8:	movw	r0, #11290	; 0x2c1a
   12fac:	movt	r0, #2
   12fb0:	bl	1161c <gettext@plt>
   12fb4:	ldr	r1, [fp, #-16]
   12fb8:	cmp	r1, #34	; 0x22
   12fbc:	str	r0, [fp, #-40]	; 0xffffffd8
   12fc0:	bne	12fd8 <__assert_fail@plt+0x1800>
   12fc4:	movw	r0, #11378	; 0x2c72
   12fc8:	movt	r0, #2
   12fcc:	bl	1161c <gettext@plt>
   12fd0:	str	r0, [fp, #-44]	; 0xffffffd4
   12fd4:	b	12fe8 <__assert_fail@plt+0x1810>
   12fd8:	movw	r0, #11385	; 0x2c79
   12fdc:	movt	r0, #2
   12fe0:	bl	1161c <gettext@plt>
   12fe4:	str	r0, [fp, #-44]	; 0xffffffd4
   12fe8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12fec:	movw	r1, #1
   12ff0:	str	r0, [fp, #-48]	; 0xffffffd0
   12ff4:	mov	r0, r1
   12ff8:	movw	r1, #0
   12ffc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13000:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13004:	bl	1158c <error@plt>
   13008:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   1300c:	tst	r0, #1
   13010:	beq	13084 <__assert_fail@plt+0x18ac>
   13014:	movw	r0, #21024	; 0x5220
   13018:	movt	r0, #3
   1301c:	ldr	r0, [r0]
   13020:	movw	r1, #0
   13024:	cmp	r0, r1
   13028:	beq	13084 <__assert_fail@plt+0x18ac>
   1302c:	movw	r0, #21024	; 0x5220
   13030:	movt	r0, #3
   13034:	ldr	r0, [r0]
   13038:	ldrb	r0, [r0]
   1303c:	movw	r1, #21044	; 0x5234
   13040:	movt	r1, #3
   13044:	ldr	r1, [r1]
   13048:	ldrb	r1, [r1]
   1304c:	cmp	r0, r1
   13050:	bne	13084 <__assert_fail@plt+0x18ac>
   13054:	movw	r0, #21024	; 0x5220
   13058:	movt	r0, #3
   1305c:	ldr	r0, [r0]
   13060:	movw	r1, #21044	; 0x5234
   13064:	movt	r1, #3
   13068:	ldr	r1, [r1]
   1306c:	bl	11430 <strcmp@plt>
   13070:	cmp	r0, #0
   13074:	bne	13084 <__assert_fail@plt+0x18ac>
   13078:	mvn	r0, #0
   1307c:	str	r0, [fp, #-4]
   13080:	b	13694 <__assert_fail@plt+0x1ebc>
   13084:	movw	r0, #20976	; 0x51f0
   13088:	movt	r0, #3
   1308c:	ldr	r0, [r0, #24]
   13090:	movw	r1, #0
   13094:	cmp	r0, r1
   13098:	bne	130ec <__assert_fail@plt+0x1914>
   1309c:	movw	r0, #21044	; 0x5234
   130a0:	movt	r0, #3
   130a4:	ldr	r2, [r0]
   130a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   130ac:	movw	r0, #20836	; 0x5164
   130b0:	movt	r0, #3
   130b4:	ldrb	r0, [r0]
   130b8:	and	r0, r0, #1
   130bc:	movw	r1, #20976	; 0x51f0
   130c0:	movt	r1, #3
   130c4:	str	r0, [fp, #-52]	; 0xffffffcc
   130c8:	mov	r0, r1
   130cc:	movw	r1, #21048	; 0x5238
   130d0:	movt	r1, #3
   130d4:	movw	ip, #0
   130d8:	str	ip, [sp]
   130dc:	str	ip, [sp, #4]
   130e0:	ldr	ip, [fp, #-52]	; 0xffffffcc
   130e4:	str	ip, [sp, #8]
   130e8:	bl	15770 <__assert_fail@plt+0x3f98>
   130ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   130f0:	str	r0, [fp, #-4]
   130f4:	b	13694 <__assert_fail@plt+0x1ebc>
   130f8:	ldr	r0, [fp, #-8]
   130fc:	cmp	r0, #3
   13100:	str	r0, [sp, #56]	; 0x38
   13104:	bhi	135f0 <__assert_fail@plt+0x1e18>
   13108:	add	r0, pc, #8
   1310c:	ldr	r1, [sp, #56]	; 0x38
   13110:	ldr	r0, [r0, r1, lsl #2]
   13114:	mov	pc, r0
   13118:	muleq	r1, r8, r1
   1311c:	andeq	r3, r1, r8, lsr #2
   13120:	andeq	r3, r1, r0, asr r5
   13124:	andeq	r3, r1, r8, ror #11
   13128:	ldr	r0, [fp, #-20]	; 0xffffffec
   1312c:	mvn	r1, #127	; 0x7f
   13130:	and	r0, r0, r1
   13134:	cmp	r0, #0
   13138:	bne	1315c <__assert_fail@plt+0x1984>
   1313c:	bl	115f8 <__ctype_b_loc@plt>
   13140:	ldr	r0, [r0]
   13144:	ldr	r1, [fp, #-20]	; 0xffffffec
   13148:	add	r0, r0, r1, lsl #1
   1314c:	ldrh	r0, [r0]
   13150:	and	r0, r0, #1
   13154:	cmp	r0, #0
   13158:	bne	1318c <__assert_fail@plt+0x19b4>
   1315c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13160:	cmp	r0, #10
   13164:	beq	1318c <__assert_fail@plt+0x19b4>
   13168:	ldr	r0, [fp, #-20]	; 0xffffffec
   1316c:	cmp	r0, #13
   13170:	beq	1318c <__assert_fail@plt+0x19b4>
   13174:	ldr	r0, [fp, #-20]	; 0xffffffec
   13178:	cmp	r0, #12
   1317c:	beq	1318c <__assert_fail@plt+0x19b4>
   13180:	ldr	r0, [fp, #-20]	; 0xffffffec
   13184:	cmp	r0, #11
   13188:	bne	13190 <__assert_fail@plt+0x19b8>
   1318c:	b	12f10 <__assert_fail@plt+0x1738>
   13190:	movw	r0, #0
   13194:	str	r0, [fp, #-8]
   13198:	ldr	r0, [fp, #-20]	; 0xffffffec
   1319c:	cmp	r0, #10
   131a0:	bne	13364 <__assert_fail@plt+0x1b8c>
   131a4:	ldr	r0, [fp, #-12]
   131a8:	mvn	r1, #127	; 0x7f
   131ac:	and	r0, r0, r1
   131b0:	cmp	r0, #0
   131b4:	bne	131d8 <__assert_fail@plt+0x1a00>
   131b8:	bl	115f8 <__ctype_b_loc@plt>
   131bc:	ldr	r0, [r0]
   131c0:	ldr	r1, [fp, #-12]
   131c4:	add	r0, r0, r1, lsl #1
   131c8:	ldrh	r0, [r0]
   131cc:	and	r0, r0, #1
   131d0:	cmp	r0, #0
   131d4:	bne	131ec <__assert_fail@plt+0x1a14>
   131d8:	movw	r0, #21092	; 0x5264
   131dc:	movt	r0, #3
   131e0:	ldr	r1, [r0]
   131e4:	add	r1, r1, #1
   131e8:	str	r1, [r0]
   131ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   131f0:	movw	r1, #21044	; 0x5234
   131f4:	movt	r1, #3
   131f8:	ldr	r1, [r1]
   131fc:	cmp	r0, r1
   13200:	bne	13224 <__assert_fail@plt+0x1a4c>
   13204:	ldrb	r0, [fp, #-22]	; 0xffffffea
   13208:	tst	r0, #1
   1320c:	beq	13214 <__assert_fail@plt+0x1a3c>
   13210:	b	13220 <__assert_fail@plt+0x1a48>
   13214:	movw	r0, #1
   13218:	str	r0, [fp, #-8]
   1321c:	b	12f10 <__assert_fail@plt+0x1738>
   13220:	b	13224 <__assert_fail@plt+0x1a4c>
   13224:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13228:	add	r1, r0, #1
   1322c:	str	r1, [fp, #-32]	; 0xffffffe0
   13230:	movw	r1, #0
   13234:	strb	r1, [r0]
   13238:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1323c:	movw	r1, #21044	; 0x5234
   13240:	movt	r1, #3
   13244:	ldr	r1, [r1]
   13248:	sub	r0, r0, r1
   1324c:	str	r0, [fp, #-28]	; 0xffffffe4
   13250:	movw	r0, #21024	; 0x5220
   13254:	movt	r0, #3
   13258:	ldr	r0, [r0]
   1325c:	movw	r1, #0
   13260:	cmp	r0, r1
   13264:	beq	132f0 <__assert_fail@plt+0x1b18>
   13268:	movw	r0, #21024	; 0x5220
   1326c:	movt	r0, #3
   13270:	ldr	r0, [r0]
   13274:	ldrb	r0, [r0]
   13278:	movw	r1, #21044	; 0x5234
   1327c:	movt	r1, #3
   13280:	ldr	r1, [r1]
   13284:	ldrb	r1, [r1]
   13288:	cmp	r0, r1
   1328c:	bne	132f0 <__assert_fail@plt+0x1b18>
   13290:	movw	r0, #21024	; 0x5220
   13294:	movt	r0, #3
   13298:	ldr	r0, [r0]
   1329c:	movw	r1, #21044	; 0x5234
   132a0:	movt	r1, #3
   132a4:	ldr	r1, [r1]
   132a8:	bl	11430 <strcmp@plt>
   132ac:	cmp	r0, #0
   132b0:	bne	132f0 <__assert_fail@plt+0x1b18>
   132b4:	movw	r0, #21104	; 0x5270
   132b8:	movt	r0, #3
   132bc:	movw	r1, #1
   132c0:	strb	r1, [r0]
   132c4:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   132c8:	tst	r0, #1
   132cc:	beq	132dc <__assert_fail@plt+0x1b04>
   132d0:	mvn	r0, #0
   132d4:	str	r0, [sp, #52]	; 0x34
   132d8:	b	132e4 <__assert_fail@plt+0x1b0c>
   132dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   132e0:	str	r0, [sp, #52]	; 0x34
   132e4:	ldr	r0, [sp, #52]	; 0x34
   132e8:	str	r0, [fp, #-4]
   132ec:	b	13694 <__assert_fail@plt+0x1ebc>
   132f0:	movw	r0, #20976	; 0x51f0
   132f4:	movt	r0, #3
   132f8:	ldr	r0, [r0, #24]
   132fc:	movw	r1, #0
   13300:	cmp	r0, r1
   13304:	bne	13358 <__assert_fail@plt+0x1b80>
   13308:	movw	r0, #21044	; 0x5234
   1330c:	movt	r0, #3
   13310:	ldr	r2, [r0]
   13314:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13318:	movw	r0, #20836	; 0x5164
   1331c:	movt	r0, #3
   13320:	ldrb	r0, [r0]
   13324:	and	r0, r0, #1
   13328:	movw	r1, #20976	; 0x51f0
   1332c:	movt	r1, #3
   13330:	str	r0, [sp, #48]	; 0x30
   13334:	mov	r0, r1
   13338:	movw	r1, #21048	; 0x5238
   1333c:	movt	r1, #3
   13340:	movw	ip, #0
   13344:	str	ip, [sp]
   13348:	str	ip, [sp, #4]
   1334c:	ldr	ip, [sp, #48]	; 0x30
   13350:	str	ip, [sp, #8]
   13354:	bl	15770 <__assert_fail@plt+0x3f98>
   13358:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1335c:	str	r0, [fp, #-4]
   13360:	b	13694 <__assert_fail@plt+0x1ebc>
   13364:	movw	r0, #1
   13368:	strb	r0, [fp, #-22]	; 0xffffffea
   1336c:	movw	r0, #20976	; 0x51f0
   13370:	movt	r0, #3
   13374:	ldr	r0, [r0, #24]
   13378:	movw	r1, #0
   1337c:	cmp	r0, r1
   13380:	bne	134f8 <__assert_fail@plt+0x1d20>
   13384:	ldr	r0, [fp, #-20]	; 0xffffffec
   13388:	mvn	r1, #127	; 0x7f
   1338c:	and	r0, r0, r1
   13390:	cmp	r0, #0
   13394:	bne	134f8 <__assert_fail@plt+0x1d20>
   13398:	bl	115f8 <__ctype_b_loc@plt>
   1339c:	ldr	r0, [r0]
   133a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   133a4:	add	r0, r0, r1, lsl #1
   133a8:	ldrh	r0, [r0]
   133ac:	and	r0, r0, #1
   133b0:	cmp	r0, #0
   133b4:	beq	134f8 <__assert_fail@plt+0x1d20>
   133b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   133bc:	add	r1, r0, #1
   133c0:	str	r1, [fp, #-32]	; 0xffffffe0
   133c4:	movw	r1, #0
   133c8:	strb	r1, [r0]
   133cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   133d0:	movw	r1, #21044	; 0x5234
   133d4:	movt	r1, #3
   133d8:	ldr	r1, [r1]
   133dc:	sub	r0, r0, r1
   133e0:	str	r0, [fp, #-28]	; 0xffffffe4
   133e4:	movw	r0, #21024	; 0x5220
   133e8:	movt	r0, #3
   133ec:	ldr	r0, [r0]
   133f0:	movw	r1, #0
   133f4:	cmp	r0, r1
   133f8:	beq	13484 <__assert_fail@plt+0x1cac>
   133fc:	movw	r0, #21024	; 0x5220
   13400:	movt	r0, #3
   13404:	ldr	r0, [r0]
   13408:	ldrb	r0, [r0]
   1340c:	movw	r1, #21044	; 0x5234
   13410:	movt	r1, #3
   13414:	ldr	r1, [r1]
   13418:	ldrb	r1, [r1]
   1341c:	cmp	r0, r1
   13420:	bne	13484 <__assert_fail@plt+0x1cac>
   13424:	movw	r0, #21024	; 0x5220
   13428:	movt	r0, #3
   1342c:	ldr	r0, [r0]
   13430:	movw	r1, #21044	; 0x5234
   13434:	movt	r1, #3
   13438:	ldr	r1, [r1]
   1343c:	bl	11430 <strcmp@plt>
   13440:	cmp	r0, #0
   13444:	bne	13484 <__assert_fail@plt+0x1cac>
   13448:	movw	r0, #21104	; 0x5270
   1344c:	movt	r0, #3
   13450:	movw	r1, #1
   13454:	strb	r1, [r0]
   13458:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   1345c:	tst	r0, #1
   13460:	beq	13470 <__assert_fail@plt+0x1c98>
   13464:	mvn	r0, #0
   13468:	str	r0, [sp, #44]	; 0x2c
   1346c:	b	13478 <__assert_fail@plt+0x1ca0>
   13470:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13474:	str	r0, [sp, #44]	; 0x2c
   13478:	ldr	r0, [sp, #44]	; 0x2c
   1347c:	str	r0, [fp, #-4]
   13480:	b	13694 <__assert_fail@plt+0x1ebc>
   13484:	movw	r0, #21044	; 0x5234
   13488:	movt	r0, #3
   1348c:	ldr	r2, [r0]
   13490:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13494:	movw	r0, #20836	; 0x5164
   13498:	movt	r0, #3
   1349c:	ldrb	r0, [r0]
   134a0:	and	r0, r0, #1
   134a4:	movw	r1, #20976	; 0x51f0
   134a8:	movt	r1, #3
   134ac:	str	r0, [sp, #40]	; 0x28
   134b0:	mov	r0, r1
   134b4:	movw	r1, #21048	; 0x5238
   134b8:	movt	r1, #3
   134bc:	movw	ip, #0
   134c0:	str	ip, [sp]
   134c4:	str	ip, [sp, #4]
   134c8:	ldr	ip, [sp, #40]	; 0x28
   134cc:	str	ip, [sp, #8]
   134d0:	bl	15770 <__assert_fail@plt+0x3f98>
   134d4:	movw	r0, #21044	; 0x5234
   134d8:	movt	r0, #3
   134dc:	ldr	r0, [r0]
   134e0:	str	r0, [fp, #-32]	; 0xffffffe0
   134e4:	movw	r0, #1
   134e8:	str	r0, [fp, #-8]
   134ec:	movw	r0, #0
   134f0:	strb	r0, [fp, #-21]	; 0xffffffeb
   134f4:	b	12f10 <__assert_fail@plt+0x1738>
   134f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   134fc:	cmp	r0, #34	; 0x22
   13500:	str	r0, [sp, #36]	; 0x24
   13504:	beq	13538 <__assert_fail@plt+0x1d60>
   13508:	b	1350c <__assert_fail@plt+0x1d34>
   1350c:	ldr	r0, [sp, #36]	; 0x24
   13510:	cmp	r0, #39	; 0x27
   13514:	beq	13538 <__assert_fail@plt+0x1d60>
   13518:	b	1351c <__assert_fail@plt+0x1d44>
   1351c:	ldr	r0, [sp, #36]	; 0x24
   13520:	cmp	r0, #92	; 0x5c
   13524:	bne	1354c <__assert_fail@plt+0x1d74>
   13528:	b	1352c <__assert_fail@plt+0x1d54>
   1352c:	movw	r0, #3
   13530:	str	r0, [fp, #-8]
   13534:	b	12f10 <__assert_fail@plt+0x1738>
   13538:	movw	r0, #2
   1353c:	str	r0, [fp, #-8]
   13540:	ldr	r0, [fp, #-20]	; 0xffffffec
   13544:	str	r0, [fp, #-16]
   13548:	b	12f10 <__assert_fail@plt+0x1738>
   1354c:	b	135f0 <__assert_fail@plt+0x1e18>
   13550:	ldr	r0, [fp, #-20]	; 0xffffffec
   13554:	cmp	r0, #10
   13558:	bne	135c0 <__assert_fail@plt+0x1de8>
   1355c:	bl	149c8 <__assert_fail@plt+0x31f0>
   13560:	movw	r0, #11290	; 0x2c1a
   13564:	movt	r0, #2
   13568:	bl	1161c <gettext@plt>
   1356c:	ldr	r1, [fp, #-16]
   13570:	cmp	r1, #34	; 0x22
   13574:	str	r0, [sp, #32]
   13578:	bne	13590 <__assert_fail@plt+0x1db8>
   1357c:	movw	r0, #11378	; 0x2c72
   13580:	movt	r0, #2
   13584:	bl	1161c <gettext@plt>
   13588:	str	r0, [sp, #28]
   1358c:	b	135a0 <__assert_fail@plt+0x1dc8>
   13590:	movw	r0, #11385	; 0x2c79
   13594:	movt	r0, #2
   13598:	bl	1161c <gettext@plt>
   1359c:	str	r0, [sp, #28]
   135a0:	ldr	r0, [sp, #28]
   135a4:	movw	r1, #1
   135a8:	str	r0, [sp, #24]
   135ac:	mov	r0, r1
   135b0:	movw	r1, #0
   135b4:	ldr	r2, [sp, #32]
   135b8:	ldr	r3, [sp, #24]
   135bc:	bl	1158c <error@plt>
   135c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   135c4:	ldr	r1, [fp, #-16]
   135c8:	cmp	r0, r1
   135cc:	bne	135e4 <__assert_fail@plt+0x1e0c>
   135d0:	movw	r0, #0
   135d4:	str	r0, [fp, #-8]
   135d8:	movw	r0, #1
   135dc:	strb	r0, [fp, #-22]	; 0xffffffea
   135e0:	b	12f10 <__assert_fail@plt+0x1738>
   135e4:	b	135f0 <__assert_fail@plt+0x1e18>
   135e8:	movw	r0, #0
   135ec:	str	r0, [fp, #-8]
   135f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   135f4:	movw	r1, #0
   135f8:	cmp	r1, r0
   135fc:	bne	13644 <__assert_fail@plt+0x1e6c>
   13600:	movw	r0, #21108	; 0x5274
   13604:	movt	r0, #3
   13608:	ldr	r0, [r0]
   1360c:	cmp	r0, #0
   13610:	bne	13644 <__assert_fail@plt+0x1e6c>
   13614:	movw	r0, #11392	; 0x2c80
   13618:	movt	r0, #2
   1361c:	bl	1161c <gettext@plt>
   13620:	movw	r1, #0
   13624:	str	r0, [sp, #20]
   13628:	mov	r0, r1
   1362c:	ldr	r2, [sp, #20]
   13630:	bl	1158c <error@plt>
   13634:	movw	r0, #21108	; 0x5274
   13638:	movt	r0, #3
   1363c:	movw	r1, #1
   13640:	str	r1, [r0]
   13644:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13648:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1364c:	cmp	r0, r1
   13650:	bcc	1367c <__assert_fail@plt+0x1ea4>
   13654:	bl	149c8 <__assert_fail@plt+0x31f0>
   13658:	movw	r0, #11531	; 0x2d0b
   1365c:	movt	r0, #2
   13660:	bl	1161c <gettext@plt>
   13664:	movw	r1, #1
   13668:	str	r0, [sp, #16]
   1366c:	mov	r0, r1
   13670:	movw	r1, #0
   13674:	ldr	r2, [sp, #16]
   13678:	bl	1158c <error@plt>
   1367c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13680:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13684:	add	r2, r1, #1
   13688:	str	r2, [fp, #-32]	; 0xffffffe0
   1368c:	strb	r0, [r1]
   13690:	b	12f10 <__assert_fail@plt+0x1738>
   13694:	ldr	r0, [fp, #-4]
   13698:	mov	sp, fp
   1369c:	pop	{fp, pc}
   136a0:	bx	lr
   136a4:	push	{fp, lr}
   136a8:	mov	fp, sp
   136ac:	bl	11604 <getpid@plt>
   136b0:	movw	r1, #20968	; 0x51e8
   136b4:	movt	r1, #3
   136b8:	ldr	r1, [r1]
   136bc:	cmp	r0, r1
   136c0:	bne	136c8 <__assert_fail@plt+0x1ef0>
   136c4:	b	136e8 <__assert_fail@plt+0x1f10>
   136c8:	movw	r0, #12280	; 0x2ff8
   136cc:	movt	r0, #2
   136d0:	movw	r1, #9349	; 0x2485
   136d4:	movt	r1, #2
   136d8:	movw	r2, #1605	; 0x645
   136dc:	movw	r3, #12300	; 0x300c
   136e0:	movt	r3, #2
   136e4:	bl	117d8 <__assert_fail@plt>
   136e8:	movw	r0, #21136	; 0x5290
   136ec:	movt	r0, #3
   136f0:	ldrb	r0, [r0]
   136f4:	tst	r0, #1
   136f8:	beq	13700 <__assert_fail@plt+0x1f28>
   136fc:	b	13760 <__assert_fail@plt+0x1f88>
   13700:	movw	r0, #21136	; 0x5290
   13704:	movt	r0, #3
   13708:	movw	r1, #1
   1370c:	strb	r1, [r0]
   13710:	movw	r0, #1
   13714:	and	r0, r0, #1
   13718:	movw	r1, #0
   1371c:	bl	14a4c <__assert_fail@plt+0x3274>
   13720:	movw	r0, #21136	; 0x5290
   13724:	movt	r0, #3
   13728:	movw	r1, #0
   1372c:	strb	r1, [r0]
   13730:	movw	r0, #20972	; 0x51ec
   13734:	movt	r0, #3
   13738:	ldr	r0, [r0]
   1373c:	movw	r1, #21100	; 0x526c
   13740:	movt	r1, #3
   13744:	ldr	r1, [r1]
   13748:	cmp	r0, r1
   1374c:	beq	13760 <__assert_fail@plt+0x1f88>
   13750:	movw	r0, #21100	; 0x526c
   13754:	movt	r0, #3
   13758:	ldr	r0, [r0]
   1375c:	bl	11490 <_exit@plt>
   13760:	pop	{fp, pc}
   13764:	push	{fp, lr}
   13768:	mov	fp, sp
   1376c:	sub	sp, sp, #8
   13770:	movw	r0, #10496	; 0x2900
   13774:	movt	r0, #2
   13778:	bl	1161c <gettext@plt>
   1377c:	movw	r1, #1
   13780:	str	r0, [sp, #4]
   13784:	mov	r0, r1
   13788:	movw	r1, #0
   1378c:	ldr	r2, [sp, #4]
   13790:	bl	1158c <error@plt>
   13794:	sub	sp, sp, #12
   13798:	str	r0, [sp, #4]
   1379c:	str	r1, [sp]
   137a0:	ldr	r0, [sp, #4]
   137a4:	ldr	r1, [sp]
   137a8:	cmp	r0, r1
   137ac:	bcs	137bc <__assert_fail@plt+0x1fe4>
   137b0:	ldr	r0, [sp, #4]
   137b4:	str	r0, [sp, #8]
   137b8:	b	137c4 <__assert_fail@plt+0x1fec>
   137bc:	ldr	r0, [sp]
   137c0:	str	r0, [sp, #8]
   137c4:	ldr	r0, [sp, #8]
   137c8:	add	sp, sp, #12
   137cc:	bx	lr
   137d0:	push	{fp, lr}
   137d4:	mov	fp, sp
   137d8:	sub	sp, sp, #112	; 0x70
   137dc:	str	r0, [fp, #-8]
   137e0:	str	r1, [fp, #-12]
   137e4:	str	r2, [fp, #-16]
   137e8:	str	r3, [fp, #-20]	; 0xffffffec
   137ec:	movw	r0, #20832	; 0x5160
   137f0:	movt	r0, #3
   137f4:	ldr	r0, [r0]
   137f8:	cmp	r0, #0
   137fc:	beq	1383c <__assert_fail@plt+0x2064>
   13800:	b	13804 <__assert_fail@plt+0x202c>
   13804:	movw	r0, #21116	; 0x527c
   13808:	movt	r0, #3
   1380c:	ldr	r0, [r0]
   13810:	movw	r1, #20832	; 0x5160
   13814:	movt	r1, #3
   13818:	ldr	r1, [r1]
   1381c:	cmp	r0, r1
   13820:	bcc	13838 <__assert_fail@plt+0x2060>
   13824:	movw	r0, #0
   13828:	and	r0, r0, #1
   1382c:	movw	r1, #1
   13830:	bl	14a4c <__assert_fail@plt+0x3274>
   13834:	b	13804 <__assert_fail@plt+0x202c>
   13838:	b	1383c <__assert_fail@plt+0x2064>
   1383c:	movw	r0, #21030	; 0x5226
   13840:	movt	r0, #3
   13844:	ldrb	r0, [r0]
   13848:	tst	r0, #1
   1384c:	beq	13864 <__assert_fail@plt+0x208c>
   13850:	movw	r0, #1
   13854:	and	r0, r0, #1
   13858:	bl	14de8 <__assert_fail@plt+0x3610>
   1385c:	tst	r0, #1
   13860:	beq	13bd4 <__assert_fail@plt+0x23fc>
   13864:	movw	r0, #21030	; 0x5226
   13868:	movt	r0, #3
   1386c:	ldrb	r0, [r0]
   13870:	tst	r0, #1
   13874:	bne	13898 <__assert_fail@plt+0x20c0>
   13878:	movw	r0, #21028	; 0x5224
   1387c:	movt	r0, #3
   13880:	ldrb	r0, [r0]
   13884:	tst	r0, #1
   13888:	beq	13898 <__assert_fail@plt+0x20c0>
   1388c:	movw	r0, #0
   13890:	and	r0, r0, #1
   13894:	bl	14de8 <__assert_fail@plt+0x3610>
   13898:	movw	r0, #0
   1389c:	and	r0, r0, #1
   138a0:	movw	r1, #0
   138a4:	bl	14a4c <__assert_fail@plt+0x3274>
   138a8:	sub	r0, fp, #32
   138ac:	bl	1b6ec <__assert_fail@plt+0x9f14>
   138b0:	cmp	r0, #0
   138b4:	beq	138e8 <__assert_fail@plt+0x2110>
   138b8:	bl	11664 <__errno_location@plt>
   138bc:	ldr	r1, [r0]
   138c0:	movw	r0, #11554	; 0x2d22
   138c4:	movt	r0, #2
   138c8:	str	r1, [fp, #-48]	; 0xffffffd0
   138cc:	bl	1161c <gettext@plt>
   138d0:	movw	r1, #1
   138d4:	str	r0, [fp, #-52]	; 0xffffffcc
   138d8:	mov	r0, r1
   138dc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   138e0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   138e4:	bl	1158c <error@plt>
   138e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   138ec:	movw	r1, #2
   138f0:	movw	r2, #1
   138f4:	bl	1f5ec <__assert_fail@plt+0xde14>
   138f8:	bl	11718 <fork@plt>
   138fc:	str	r0, [fp, #-24]	; 0xffffffe8
   13900:	cmp	r0, #0
   13904:	movw	r0, #0
   13908:	str	r0, [sp, #56]	; 0x38
   1390c:	bge	13944 <__assert_fail@plt+0x216c>
   13910:	bl	11664 <__errno_location@plt>
   13914:	ldr	r0, [r0]
   13918:	cmp	r0, #11
   1391c:	movw	r0, #0
   13920:	str	r0, [sp, #56]	; 0x38
   13924:	bne	13944 <__assert_fail@plt+0x216c>
   13928:	movw	r0, #21116	; 0x527c
   1392c:	movt	r0, #3
   13930:	ldr	r0, [r0]
   13934:	cmp	r0, #0
   13938:	movw	r0, #0
   1393c:	movne	r0, #1
   13940:	str	r0, [sp, #56]	; 0x38
   13944:	ldr	r0, [sp, #56]	; 0x38
   13948:	tst	r0, #1
   1394c:	beq	13964 <__assert_fail@plt+0x218c>
   13950:	movw	r0, #0
   13954:	and	r0, r0, #1
   13958:	movw	r1, #1
   1395c:	bl	14a4c <__assert_fail@plt+0x3274>
   13960:	b	138f8 <__assert_fail@plt+0x2120>
   13964:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13968:	cmn	r0, #1
   1396c:	str	r0, [sp, #52]	; 0x34
   13970:	beq	13988 <__assert_fail@plt+0x21b0>
   13974:	b	13978 <__assert_fail@plt+0x21a0>
   13978:	ldr	r0, [sp, #52]	; 0x34
   1397c:	cmp	r0, #0
   13980:	beq	139b8 <__assert_fail@plt+0x21e0>
   13984:	b	13aa0 <__assert_fail@plt+0x22c8>
   13988:	bl	11664 <__errno_location@plt>
   1398c:	ldr	r1, [r0]
   13990:	movw	r0, #11588	; 0x2d44
   13994:	movt	r0, #2
   13998:	str	r1, [sp, #48]	; 0x30
   1399c:	bl	1161c <gettext@plt>
   139a0:	movw	r1, #1
   139a4:	str	r0, [sp, #44]	; 0x2c
   139a8:	mov	r0, r1
   139ac:	ldr	r1, [sp, #48]	; 0x30
   139b0:	ldr	r2, [sp, #44]	; 0x2c
   139b4:	bl	1158c <error@plt>
   139b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   139bc:	bl	117c0 <close@plt>
   139c0:	movw	r1, #21100	; 0x526c
   139c4:	movt	r1, #3
   139c8:	movw	r2, #0
   139cc:	str	r2, [r1]
   139d0:	str	r0, [sp, #40]	; 0x28
   139d4:	bl	150c8 <__assert_fail@plt+0x38f0>
   139d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   139dc:	bl	16498 <__assert_fail@plt+0x4cc0>
   139e0:	tst	r0, #1
   139e4:	beq	139f8 <__assert_fail@plt+0x2220>
   139e8:	bl	11664 <__errno_location@plt>
   139ec:	movw	r1, #7
   139f0:	str	r1, [r0]
   139f4:	b	13a08 <__assert_fail@plt+0x2230>
   139f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   139fc:	ldr	r0, [r0]
   13a00:	ldr	r1, [fp, #-20]	; 0xffffffec
   13a04:	bl	114a8 <execvp@plt>
   13a08:	bl	11664 <__errno_location@plt>
   13a0c:	ldr	r0, [r0]
   13a10:	cmp	r0, #0
   13a14:	beq	13a3c <__assert_fail@plt+0x2264>
   13a18:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13a1c:	str	r0, [sp, #36]	; 0x24
   13a20:	bl	11664 <__errno_location@plt>
   13a24:	ldr	r1, [sp, #36]	; 0x24
   13a28:	str	r0, [sp, #32]
   13a2c:	mov	r0, r1
   13a30:	ldr	r1, [sp, #32]
   13a34:	movw	r2, #4
   13a38:	bl	116a0 <write@plt>
   13a3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13a40:	bl	117c0 <close@plt>
   13a44:	str	r0, [sp, #28]
   13a48:	bl	11664 <__errno_location@plt>
   13a4c:	ldr	r0, [r0]
   13a50:	movw	r1, #7
   13a54:	cmp	r1, r0
   13a58:	beq	13a7c <__assert_fail@plt+0x22a4>
   13a5c:	bl	11664 <__errno_location@plt>
   13a60:	ldr	r1, [r0]
   13a64:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a68:	ldr	r3, [r0]
   13a6c:	movw	r0, #0
   13a70:	movw	r2, #16907	; 0x420b
   13a74:	movt	r2, #2
   13a78:	bl	1158c <error@plt>
   13a7c:	bl	11664 <__errno_location@plt>
   13a80:	ldr	r0, [r0]
   13a84:	cmp	r0, #2
   13a88:	movw	r0, #0
   13a8c:	moveq	r0, #1
   13a90:	tst	r0, #1
   13a94:	movw	r0, #127	; 0x7f
   13a98:	moveq	r0, #126	; 0x7e
   13a9c:	bl	11490 <_exit@plt>
   13aa0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13aa4:	bl	117c0 <close@plt>
   13aa8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13aac:	sub	r1, fp, #36	; 0x24
   13ab0:	mov	r2, #4
   13ab4:	bl	1b560 <__assert_fail@plt+0x9d88>
   13ab8:	str	r0, [fp, #-40]	; 0xffffffd8
   13abc:	mov	r1, r0
   13ac0:	cmn	r0, #1
   13ac4:	str	r1, [sp, #24]
   13ac8:	beq	13af0 <__assert_fail@plt+0x2318>
   13acc:	b	13ad0 <__assert_fail@plt+0x22f8>
   13ad0:	ldr	r0, [sp, #24]
   13ad4:	cmp	r0, #0
   13ad8:	beq	13b8c <__assert_fail@plt+0x23b4>
   13adc:	b	13ae0 <__assert_fail@plt+0x2308>
   13ae0:	ldr	r0, [sp, #24]
   13ae4:	cmp	r0, #4
   13ae8:	beq	13b30 <__assert_fail@plt+0x2358>
   13aec:	b	13b98 <__assert_fail@plt+0x23c0>
   13af0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13af4:	bl	117c0 <close@plt>
   13af8:	str	r0, [sp, #20]
   13afc:	bl	11664 <__errno_location@plt>
   13b00:	ldr	r1, [r0]
   13b04:	movw	r0, #11600	; 0x2d50
   13b08:	movt	r0, #2
   13b0c:	str	r1, [sp, #16]
   13b10:	bl	1161c <gettext@plt>
   13b14:	movw	r1, #0
   13b18:	str	r0, [sp, #12]
   13b1c:	mov	r0, r1
   13b20:	ldr	r1, [sp, #16]
   13b24:	ldr	r2, [sp, #12]
   13b28:	bl	1158c <error@plt>
   13b2c:	b	13bcc <__assert_fail@plt+0x23f4>
   13b30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13b34:	bl	117c0 <close@plt>
   13b38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13b3c:	str	r0, [sp, #8]
   13b40:	mov	r0, r1
   13b44:	sub	r1, fp, #44	; 0x2c
   13b48:	movw	r2, #0
   13b4c:	bl	11550 <waitpid@plt>
   13b50:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13b54:	movw	r2, #7
   13b58:	cmp	r2, r1
   13b5c:	bne	13b6c <__assert_fail@plt+0x2394>
   13b60:	movw	r0, #0
   13b64:	str	r0, [fp, #-4]
   13b68:	b	13bdc <__assert_fail@plt+0x2404>
   13b6c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13b70:	movw	r1, #2
   13b74:	cmp	r1, r0
   13b78:	bne	13b84 <__assert_fail@plt+0x23ac>
   13b7c:	movw	r0, #127	; 0x7f
   13b80:	bl	11610 <exit@plt>
   13b84:	movw	r0, #126	; 0x7e
   13b88:	bl	11610 <exit@plt>
   13b8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13b90:	bl	15270 <__assert_fail@plt+0x3a98>
   13b94:	b	13bcc <__assert_fail@plt+0x23f4>
   13b98:	bl	11664 <__errno_location@plt>
   13b9c:	ldr	r1, [r0]
   13ba0:	movw	r0, #11690	; 0x2daa
   13ba4:	movt	r0, #2
   13ba8:	str	r1, [sp, #4]
   13bac:	bl	1161c <gettext@plt>
   13bb0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13bb4:	movw	r1, #1
   13bb8:	str	r0, [sp]
   13bbc:	mov	r0, r1
   13bc0:	ldr	r1, [sp, #4]
   13bc4:	ldr	r2, [sp]
   13bc8:	bl	1158c <error@plt>
   13bcc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13bd0:	bl	117c0 <close@plt>
   13bd4:	movw	r0, #1
   13bd8:	str	r0, [fp, #-4]
   13bdc:	ldr	r0, [fp, #-4]
   13be0:	mov	sp, fp
   13be4:	pop	{fp, pc}
   13be8:	push	{fp, lr}
   13bec:	mov	fp, sp
   13bf0:	sub	sp, sp, #48	; 0x30
   13bf4:	movw	r0, #21044	; 0x5234
   13bf8:	movt	r0, #3
   13bfc:	ldr	r1, [r0]
   13c00:	str	r1, [fp, #-12]
   13c04:	ldr	r0, [r0]
   13c08:	movw	r1, #20976	; 0x51f0
   13c0c:	movt	r1, #3
   13c10:	ldr	r1, [r1, #12]
   13c14:	add	r0, r0, r1
   13c18:	movw	r1, #21048	; 0x5238
   13c1c:	movt	r1, #3
   13c20:	ldr	r1, [r1, #20]
   13c24:	movw	r2, #0
   13c28:	sub	r1, r2, r1
   13c2c:	add	r0, r0, r1
   13c30:	mvn	r1, #0
   13c34:	add	r0, r0, r1
   13c38:	str	r0, [fp, #-16]
   13c3c:	movw	r0, #21112	; 0x5278
   13c40:	movt	r0, #3
   13c44:	ldrb	r0, [r0]
   13c48:	tst	r0, #1
   13c4c:	beq	13c5c <__assert_fail@plt+0x2484>
   13c50:	mvn	r0, #0
   13c54:	str	r0, [fp, #-4]
   13c58:	b	13e70 <__assert_fail@plt+0x2698>
   13c5c:	b	13c60 <__assert_fail@plt+0x2488>
   13c60:	movw	r0, #21036	; 0x522c
   13c64:	movt	r0, #3
   13c68:	ldr	r0, [r0]
   13c6c:	bl	117b4 <getc@plt>
   13c70:	str	r0, [fp, #-20]	; 0xffffffec
   13c74:	ldr	r0, [fp, #-20]	; 0xffffffec
   13c78:	cmn	r0, #1
   13c7c:	bne	13d54 <__assert_fail@plt+0x257c>
   13c80:	movw	r0, #21112	; 0x5278
   13c84:	movt	r0, #3
   13c88:	movw	r1, #1
   13c8c:	strb	r1, [r0]
   13c90:	ldr	r0, [fp, #-12]
   13c94:	movw	r1, #21044	; 0x5234
   13c98:	movt	r1, #3
   13c9c:	ldr	r1, [r1]
   13ca0:	cmp	r0, r1
   13ca4:	bne	13cb4 <__assert_fail@plt+0x24dc>
   13ca8:	mvn	r0, #0
   13cac:	str	r0, [fp, #-4]
   13cb0:	b	13e70 <__assert_fail@plt+0x2698>
   13cb4:	ldr	r0, [fp, #-12]
   13cb8:	add	r1, r0, #1
   13cbc:	str	r1, [fp, #-12]
   13cc0:	movw	r1, #0
   13cc4:	strb	r1, [r0]
   13cc8:	ldr	r0, [fp, #-12]
   13ccc:	movw	r1, #21044	; 0x5234
   13cd0:	movt	r1, #3
   13cd4:	ldr	r1, [r1]
   13cd8:	sub	r0, r0, r1
   13cdc:	str	r0, [fp, #-8]
   13ce0:	movw	r0, #20976	; 0x51f0
   13ce4:	movt	r0, #3
   13ce8:	ldr	r0, [r0, #24]
   13cec:	movw	r1, #0
   13cf0:	cmp	r0, r1
   13cf4:	bne	13d48 <__assert_fail@plt+0x2570>
   13cf8:	movw	r0, #21044	; 0x5234
   13cfc:	movt	r0, #3
   13d00:	ldr	r2, [r0]
   13d04:	ldr	r3, [fp, #-8]
   13d08:	movw	r0, #20836	; 0x5164
   13d0c:	movt	r0, #3
   13d10:	ldrb	r0, [r0]
   13d14:	and	r0, r0, #1
   13d18:	movw	r1, #20976	; 0x51f0
   13d1c:	movt	r1, #3
   13d20:	str	r0, [sp, #24]
   13d24:	mov	r0, r1
   13d28:	movw	r1, #21048	; 0x5238
   13d2c:	movt	r1, #3
   13d30:	movw	ip, #0
   13d34:	str	ip, [sp]
   13d38:	str	ip, [sp, #4]
   13d3c:	ldr	ip, [sp, #24]
   13d40:	str	ip, [sp, #8]
   13d44:	bl	15770 <__assert_fail@plt+0x3f98>
   13d48:	ldr	r0, [fp, #-8]
   13d4c:	str	r0, [fp, #-4]
   13d50:	b	13e70 <__assert_fail@plt+0x2698>
   13d54:	ldr	r0, [fp, #-20]	; 0xffffffec
   13d58:	movw	r1, #21020	; 0x521c
   13d5c:	movt	r1, #3
   13d60:	ldrb	r1, [r1]
   13d64:	cmp	r0, r1
   13d68:	bne	13e20 <__assert_fail@plt+0x2648>
   13d6c:	movw	r0, #21092	; 0x5264
   13d70:	movt	r0, #3
   13d74:	ldr	r1, [r0]
   13d78:	add	r1, r1, #1
   13d7c:	str	r1, [r0]
   13d80:	ldr	r0, [fp, #-12]
   13d84:	add	r1, r0, #1
   13d88:	str	r1, [fp, #-12]
   13d8c:	movw	r1, #0
   13d90:	strb	r1, [r0]
   13d94:	ldr	r0, [fp, #-12]
   13d98:	movw	r1, #21044	; 0x5234
   13d9c:	movt	r1, #3
   13da0:	ldr	r1, [r1]
   13da4:	sub	r0, r0, r1
   13da8:	str	r0, [fp, #-8]
   13dac:	movw	r0, #20976	; 0x51f0
   13db0:	movt	r0, #3
   13db4:	ldr	r0, [r0, #24]
   13db8:	movw	r1, #0
   13dbc:	cmp	r0, r1
   13dc0:	bne	13e14 <__assert_fail@plt+0x263c>
   13dc4:	movw	r0, #21044	; 0x5234
   13dc8:	movt	r0, #3
   13dcc:	ldr	r2, [r0]
   13dd0:	ldr	r3, [fp, #-8]
   13dd4:	movw	r0, #20836	; 0x5164
   13dd8:	movt	r0, #3
   13ddc:	ldrb	r0, [r0]
   13de0:	and	r0, r0, #1
   13de4:	movw	r1, #20976	; 0x51f0
   13de8:	movt	r1, #3
   13dec:	str	r0, [sp, #20]
   13df0:	mov	r0, r1
   13df4:	movw	r1, #21048	; 0x5238
   13df8:	movt	r1, #3
   13dfc:	movw	ip, #0
   13e00:	str	ip, [sp]
   13e04:	str	ip, [sp, #4]
   13e08:	ldr	ip, [sp, #20]
   13e0c:	str	ip, [sp, #8]
   13e10:	bl	15770 <__assert_fail@plt+0x3f98>
   13e14:	ldr	r0, [fp, #-8]
   13e18:	str	r0, [fp, #-4]
   13e1c:	b	13e70 <__assert_fail@plt+0x2698>
   13e20:	ldr	r0, [fp, #-12]
   13e24:	ldr	r1, [fp, #-16]
   13e28:	cmp	r0, r1
   13e2c:	bcc	13e58 <__assert_fail@plt+0x2680>
   13e30:	bl	149c8 <__assert_fail@plt+0x31f0>
   13e34:	movw	r0, #11531	; 0x2d0b
   13e38:	movt	r0, #2
   13e3c:	bl	1161c <gettext@plt>
   13e40:	movw	r1, #1
   13e44:	str	r0, [sp, #16]
   13e48:	mov	r0, r1
   13e4c:	movw	r1, #0
   13e50:	ldr	r2, [sp, #16]
   13e54:	bl	1158c <error@plt>
   13e58:	ldr	r0, [fp, #-20]	; 0xffffffec
   13e5c:	ldr	r1, [fp, #-12]
   13e60:	add	r2, r1, #1
   13e64:	str	r2, [fp, #-12]
   13e68:	strb	r0, [r1]
   13e6c:	b	13c60 <__assert_fail@plt+0x2488>
   13e70:	ldr	r0, [fp, #-4]
   13e74:	mov	sp, fp
   13e78:	pop	{fp, pc}
   13e7c:	push	{fp, lr}
   13e80:	mov	fp, sp
   13e84:	sub	sp, sp, #16
   13e88:	str	r0, [sp, #8]
   13e8c:	ldr	r0, [sp, #8]
   13e90:	bl	11634 <strlen@plt>
   13e94:	movw	r1, #1
   13e98:	cmp	r1, r0
   13e9c:	bne	13eb0 <__assert_fail@plt+0x26d8>
   13ea0:	ldr	r0, [sp, #8]
   13ea4:	ldrb	r0, [r0]
   13ea8:	strb	r0, [fp, #-1]
   13eac:	b	13ff0 <__assert_fail@plt+0x2818>
   13eb0:	ldr	r0, [sp, #8]
   13eb4:	ldrb	r0, [r0]
   13eb8:	movw	r1, #92	; 0x5c
   13ebc:	cmp	r1, r0
   13ec0:	bne	13fc8 <__assert_fail@plt+0x27f0>
   13ec4:	ldr	r0, [sp, #8]
   13ec8:	ldrb	r0, [r0, #1]
   13ecc:	sub	r0, r0, #92	; 0x5c
   13ed0:	cmp	r0, #26
   13ed4:	str	r0, [sp, #4]
   13ed8:	bhi	13fb8 <__assert_fail@plt+0x27e0>
   13edc:	add	r0, pc, #8
   13ee0:	ldr	r1, [sp, #4]
   13ee4:	ldr	r0, [r0, r1, lsl #2]
   13ee8:	mov	pc, r0
   13eec:	andeq	r3, r1, ip, lsr #31
   13ef0:			; <UNDEFINED> instruction: 0x00013fb8
   13ef4:			; <UNDEFINED> instruction: 0x00013fb8
   13ef8:			; <UNDEFINED> instruction: 0x00013fb8
   13efc:			; <UNDEFINED> instruction: 0x00013fb8
   13f00:	andeq	r3, r1, r8, asr pc
   13f04:	andeq	r3, r1, r4, ror #30
   13f08:			; <UNDEFINED> instruction: 0x00013fb8
   13f0c:			; <UNDEFINED> instruction: 0x00013fb8
   13f10:			; <UNDEFINED> instruction: 0x00013fb8
   13f14:	andeq	r3, r1, r0, ror pc
   13f18:			; <UNDEFINED> instruction: 0x00013fb8
   13f1c:			; <UNDEFINED> instruction: 0x00013fb8
   13f20:			; <UNDEFINED> instruction: 0x00013fb8
   13f24:			; <UNDEFINED> instruction: 0x00013fb8
   13f28:			; <UNDEFINED> instruction: 0x00013fb8
   13f2c:			; <UNDEFINED> instruction: 0x00013fb8
   13f30:			; <UNDEFINED> instruction: 0x00013fb8
   13f34:	andeq	r3, r1, ip, ror pc
   13f38:			; <UNDEFINED> instruction: 0x00013fb8
   13f3c:			; <UNDEFINED> instruction: 0x00013fb8
   13f40:			; <UNDEFINED> instruction: 0x00013fb8
   13f44:	andeq	r3, r1, r8, lsl #31
   13f48:			; <UNDEFINED> instruction: 0x00013fb8
   13f4c:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   13f50:			; <UNDEFINED> instruction: 0x00013fb8
   13f54:	andeq	r3, r1, r0, lsr #31
   13f58:	movw	r0, #7
   13f5c:	strb	r0, [fp, #-1]
   13f60:	b	13ff0 <__assert_fail@plt+0x2818>
   13f64:	movw	r0, #8
   13f68:	strb	r0, [fp, #-1]
   13f6c:	b	13ff0 <__assert_fail@plt+0x2818>
   13f70:	movw	r0, #12
   13f74:	strb	r0, [fp, #-1]
   13f78:	b	13ff0 <__assert_fail@plt+0x2818>
   13f7c:	movw	r0, #10
   13f80:	strb	r0, [fp, #-1]
   13f84:	b	13ff0 <__assert_fail@plt+0x2818>
   13f88:	movw	r0, #13
   13f8c:	strb	r0, [fp, #-1]
   13f90:	b	13ff0 <__assert_fail@plt+0x2818>
   13f94:	movw	r0, #9
   13f98:	strb	r0, [fp, #-1]
   13f9c:	b	13ff0 <__assert_fail@plt+0x2818>
   13fa0:	movw	r0, #11
   13fa4:	strb	r0, [fp, #-1]
   13fa8:	b	13ff0 <__assert_fail@plt+0x2818>
   13fac:	movw	r0, #92	; 0x5c
   13fb0:	strb	r0, [fp, #-1]
   13fb4:	b	13ff0 <__assert_fail@plt+0x2818>
   13fb8:	ldr	r0, [sp, #8]
   13fbc:	bl	147b4 <__assert_fail@plt+0x2fdc>
   13fc0:	strb	r0, [fp, #-1]
   13fc4:	b	13ff0 <__assert_fail@plt+0x2818>
   13fc8:	movw	r0, #10665	; 0x29a9
   13fcc:	movt	r0, #2
   13fd0:	bl	1161c <gettext@plt>
   13fd4:	ldr	r3, [sp, #8]
   13fd8:	movw	r1, #1
   13fdc:	str	r0, [sp]
   13fe0:	mov	r0, r1
   13fe4:	movw	r1, #0
   13fe8:	ldr	r2, [sp]
   13fec:	bl	1158c <error@plt>
   13ff0:	ldrb	r0, [fp, #-1]
   13ff4:	mov	sp, fp
   13ff8:	pop	{fp, pc}
   13ffc:	push	{fp, lr}
   14000:	mov	fp, sp
   14004:	sub	sp, sp, #128	; 0x80
   14008:	str	r0, [fp, #-4]
   1400c:	ldr	r0, [fp, #-4]
   14010:	cmp	r0, #0
   14014:	beq	14068 <__assert_fail@plt+0x2890>
   14018:	movw	r0, #20944	; 0x51d0
   1401c:	movt	r0, #3
   14020:	ldr	r0, [r0]
   14024:	movw	r1, #12461	; 0x30ad
   14028:	movt	r1, #2
   1402c:	str	r0, [fp, #-8]
   14030:	mov	r0, r1
   14034:	bl	1161c <gettext@plt>
   14038:	movw	r1, #21168	; 0x52b0
   1403c:	movt	r1, #3
   14040:	ldr	r2, [r1]
   14044:	ldr	r1, [fp, #-8]
   14048:	str	r0, [fp, #-12]
   1404c:	mov	r0, r1
   14050:	ldr	r1, [fp, #-12]
   14054:	bl	11658 <fprintf@plt>
   14058:	ldr	r1, [fp, #-4]
   1405c:	str	r0, [fp, #-16]
   14060:	mov	r0, r1
   14064:	bl	11610 <exit@plt>
   14068:	movw	r0, #20956	; 0x51dc
   1406c:	movt	r0, #3
   14070:	ldr	r0, [r0]
   14074:	movw	r1, #12500	; 0x30d4
   14078:	movt	r1, #2
   1407c:	str	r0, [fp, #-20]	; 0xffffffec
   14080:	mov	r0, r1
   14084:	bl	1161c <gettext@plt>
   14088:	movw	r1, #21168	; 0x52b0
   1408c:	movt	r1, #3
   14090:	ldr	r2, [r1]
   14094:	ldr	r1, [fp, #-20]	; 0xffffffec
   14098:	str	r0, [fp, #-24]	; 0xffffffe8
   1409c:	mov	r0, r1
   140a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   140a4:	bl	11658 <fprintf@plt>
   140a8:	movw	r1, #12549	; 0x3105
   140ac:	movt	r1, #2
   140b0:	str	r0, [fp, #-28]	; 0xffffffe4
   140b4:	mov	r0, r1
   140b8:	bl	1161c <gettext@plt>
   140bc:	movw	r1, #20956	; 0x51dc
   140c0:	movt	r1, #3
   140c4:	ldr	r1, [r1]
   140c8:	bl	11790 <fputs@plt>
   140cc:	movw	r1, #12627	; 0x3153
   140d0:	movt	r1, #2
   140d4:	str	r0, [fp, #-32]	; 0xffffffe0
   140d8:	mov	r0, r1
   140dc:	bl	1161c <gettext@plt>
   140e0:	movw	r1, #20956	; 0x51dc
   140e4:	movt	r1, #3
   140e8:	ldr	r1, [r1]
   140ec:	bl	11790 <fputs@plt>
   140f0:	movw	r1, #12744	; 0x31c8
   140f4:	movt	r1, #2
   140f8:	str	r0, [fp, #-36]	; 0xffffffdc
   140fc:	mov	r0, r1
   14100:	bl	1161c <gettext@plt>
   14104:	movw	r1, #20956	; 0x51dc
   14108:	movt	r1, #3
   1410c:	ldr	r1, [r1]
   14110:	bl	11790 <fputs@plt>
   14114:	movw	r1, #12956	; 0x329c
   14118:	movt	r1, #2
   1411c:	str	r0, [fp, #-40]	; 0xffffffd8
   14120:	mov	r0, r1
   14124:	bl	1161c <gettext@plt>
   14128:	movw	r1, #20956	; 0x51dc
   1412c:	movt	r1, #3
   14130:	ldr	r1, [r1]
   14134:	bl	11790 <fputs@plt>
   14138:	movw	r1, #13033	; 0x32e9
   1413c:	movt	r1, #2
   14140:	str	r0, [fp, #-44]	; 0xffffffd4
   14144:	mov	r0, r1
   14148:	bl	1161c <gettext@plt>
   1414c:	movw	r1, #20956	; 0x51dc
   14150:	movt	r1, #3
   14154:	ldr	r1, [r1]
   14158:	bl	11790 <fputs@plt>
   1415c:	movw	r1, #13267	; 0x33d3
   14160:	movt	r1, #2
   14164:	str	r0, [fp, #-48]	; 0xffffffd0
   14168:	mov	r0, r1
   1416c:	bl	1161c <gettext@plt>
   14170:	movw	r1, #20956	; 0x51dc
   14174:	movt	r1, #3
   14178:	ldr	r1, [r1]
   1417c:	bl	11790 <fputs@plt>
   14180:	movw	r1, #13492	; 0x34b4
   14184:	movt	r1, #2
   14188:	str	r0, [fp, #-52]	; 0xffffffcc
   1418c:	mov	r0, r1
   14190:	bl	1161c <gettext@plt>
   14194:	movw	r1, #20956	; 0x51dc
   14198:	movt	r1, #3
   1419c:	ldr	r1, [r1]
   141a0:	bl	11790 <fputs@plt>
   141a4:	movw	r1, #13641	; 0x3549
   141a8:	movt	r1, #2
   141ac:	str	r0, [fp, #-56]	; 0xffffffc8
   141b0:	mov	r0, r1
   141b4:	bl	1161c <gettext@plt>
   141b8:	movw	r1, #20956	; 0x51dc
   141bc:	movt	r1, #3
   141c0:	ldr	r1, [r1]
   141c4:	bl	11790 <fputs@plt>
   141c8:	movw	r1, #13693	; 0x357d
   141cc:	movt	r1, #2
   141d0:	str	r0, [fp, #-60]	; 0xffffffc4
   141d4:	mov	r0, r1
   141d8:	bl	1161c <gettext@plt>
   141dc:	movw	r1, #20956	; 0x51dc
   141e0:	movt	r1, #3
   141e4:	ldr	r1, [r1]
   141e8:	bl	11790 <fputs@plt>
   141ec:	movw	r1, #13904	; 0x3650
   141f0:	movt	r1, #2
   141f4:	str	r0, [sp, #64]	; 0x40
   141f8:	mov	r0, r1
   141fc:	bl	1161c <gettext@plt>
   14200:	movw	r1, #20956	; 0x51dc
   14204:	movt	r1, #3
   14208:	ldr	r1, [r1]
   1420c:	bl	11790 <fputs@plt>
   14210:	movw	r1, #14030	; 0x36ce
   14214:	movt	r1, #2
   14218:	str	r0, [sp, #60]	; 0x3c
   1421c:	mov	r0, r1
   14220:	bl	1161c <gettext@plt>
   14224:	movw	r1, #20956	; 0x51dc
   14228:	movt	r1, #3
   1422c:	ldr	r1, [r1]
   14230:	bl	11790 <fputs@plt>
   14234:	movw	r1, #14189	; 0x376d
   14238:	movt	r1, #2
   1423c:	str	r0, [sp, #56]	; 0x38
   14240:	mov	r0, r1
   14244:	bl	1161c <gettext@plt>
   14248:	movw	r1, #20956	; 0x51dc
   1424c:	movt	r1, #3
   14250:	ldr	r1, [r1]
   14254:	bl	11790 <fputs@plt>
   14258:	movw	r1, #14269	; 0x37bd
   1425c:	movt	r1, #2
   14260:	str	r0, [sp, #52]	; 0x34
   14264:	mov	r0, r1
   14268:	bl	1161c <gettext@plt>
   1426c:	movw	r1, #20956	; 0x51dc
   14270:	movt	r1, #3
   14274:	ldr	r1, [r1]
   14278:	bl	11790 <fputs@plt>
   1427c:	movw	r1, #14485	; 0x3895
   14280:	movt	r1, #2
   14284:	str	r0, [sp, #48]	; 0x30
   14288:	mov	r0, r1
   1428c:	bl	1161c <gettext@plt>
   14290:	movw	r1, #20956	; 0x51dc
   14294:	movt	r1, #3
   14298:	ldr	r1, [r1]
   1429c:	bl	11790 <fputs@plt>
   142a0:	movw	r1, #14559	; 0x38df
   142a4:	movt	r1, #2
   142a8:	str	r0, [sp, #44]	; 0x2c
   142ac:	mov	r0, r1
   142b0:	bl	1161c <gettext@plt>
   142b4:	movw	r1, #20956	; 0x51dc
   142b8:	movt	r1, #3
   142bc:	ldr	r1, [r1]
   142c0:	bl	11790 <fputs@plt>
   142c4:	movw	r1, #14622	; 0x391e
   142c8:	movt	r1, #2
   142cc:	str	r0, [sp, #40]	; 0x28
   142d0:	mov	r0, r1
   142d4:	bl	1161c <gettext@plt>
   142d8:	movw	r1, #20956	; 0x51dc
   142dc:	movt	r1, #3
   142e0:	ldr	r1, [r1]
   142e4:	bl	11790 <fputs@plt>
   142e8:	movw	r1, #14702	; 0x396e
   142ec:	movt	r1, #2
   142f0:	str	r0, [sp, #36]	; 0x24
   142f4:	mov	r0, r1
   142f8:	bl	1161c <gettext@plt>
   142fc:	movw	r1, #20956	; 0x51dc
   14300:	movt	r1, #3
   14304:	ldr	r1, [r1]
   14308:	bl	11790 <fputs@plt>
   1430c:	movw	r1, #14915	; 0x3a43
   14310:	movt	r1, #2
   14314:	str	r0, [sp, #32]
   14318:	mov	r0, r1
   1431c:	bl	1161c <gettext@plt>
   14320:	movw	r1, #20956	; 0x51dc
   14324:	movt	r1, #3
   14328:	ldr	r1, [r1]
   1432c:	bl	11790 <fputs@plt>
   14330:	movw	r1, #14989	; 0x3a8d
   14334:	movt	r1, #2
   14338:	str	r0, [sp, #28]
   1433c:	mov	r0, r1
   14340:	bl	1161c <gettext@plt>
   14344:	movw	r1, #20956	; 0x51dc
   14348:	movt	r1, #3
   1434c:	ldr	r1, [r1]
   14350:	bl	11790 <fputs@plt>
   14354:	movw	r1, #15056	; 0x3ad0
   14358:	movt	r1, #2
   1435c:	str	r0, [sp, #24]
   14360:	mov	r0, r1
   14364:	bl	1161c <gettext@plt>
   14368:	movw	r1, #20956	; 0x51dc
   1436c:	movt	r1, #3
   14370:	ldr	r1, [r1]
   14374:	bl	11790 <fputs@plt>
   14378:	movw	r1, #15125	; 0x3b15
   1437c:	movt	r1, #2
   14380:	str	r0, [sp, #20]
   14384:	mov	r0, r1
   14388:	bl	1161c <gettext@plt>
   1438c:	movw	r1, #20956	; 0x51dc
   14390:	movt	r1, #3
   14394:	ldr	r1, [r1]
   14398:	bl	11790 <fputs@plt>
   1439c:	movw	r1, #15195	; 0x3b5b
   143a0:	movt	r1, #2
   143a4:	str	r0, [sp, #16]
   143a8:	mov	r0, r1
   143ac:	bl	1161c <gettext@plt>
   143b0:	movw	r1, #20956	; 0x51dc
   143b4:	movt	r1, #3
   143b8:	ldr	r1, [r1]
   143bc:	bl	11790 <fputs@plt>
   143c0:	movw	r1, #15254	; 0x3b96
   143c4:	movt	r1, #2
   143c8:	str	r0, [sp, #12]
   143cc:	mov	r0, r1
   143d0:	bl	1161c <gettext@plt>
   143d4:	movw	r1, #20956	; 0x51dc
   143d8:	movt	r1, #3
   143dc:	ldr	r1, [r1]
   143e0:	bl	11790 <fputs@plt>
   143e4:	movw	r1, #20956	; 0x51dc
   143e8:	movt	r1, #3
   143ec:	ldr	r1, [r1]
   143f0:	movw	r2, #21168	; 0x52b0
   143f4:	movt	r2, #3
   143f8:	ldr	r2, [r2]
   143fc:	str	r0, [sp, #8]
   14400:	mov	r0, r1
   14404:	mov	r1, r2
   14408:	bl	171ec <__assert_fail@plt+0x5a14>
   1440c:	ldr	r1, [fp, #-4]
   14410:	str	r0, [sp, #4]
   14414:	mov	r0, r1
   14418:	bl	11610 <exit@plt>
   1441c:	push	{r4, sl, fp, lr}
   14420:	add	fp, sp, #8
   14424:	sub	sp, sp, #32
   14428:	str	r0, [fp, #-12]
   1442c:	str	r1, [fp, #-16]
   14430:	movw	r0, #11212	; 0x2bcc
   14434:	movt	r0, #2
   14438:	bl	1161c <gettext@plt>
   1443c:	ldr	r3, [fp, #-16]
   14440:	ldr	r1, [fp, #-12]
   14444:	ldr	r2, [fp, #-16]
   14448:	movw	ip, #0
   1444c:	str	r0, [sp, #20]
   14450:	mov	r0, ip
   14454:	str	r1, [sp, #16]
   14458:	mov	r1, ip
   1445c:	ldr	ip, [sp, #20]
   14460:	str	r2, [sp, #12]
   14464:	mov	r2, ip
   14468:	ldr	lr, [sp, #16]
   1446c:	str	lr, [sp]
   14470:	ldr	r4, [sp, #12]
   14474:	str	r4, [sp, #4]
   14478:	bl	1158c <error@plt>
   1447c:	sub	sp, fp, #8
   14480:	pop	{r4, sl, fp, pc}
   14484:	push	{r4, r5, fp, lr}
   14488:	add	fp, sp, #8
   1448c:	sub	sp, sp, #80	; 0x50
   14490:	ldr	ip, [fp, #8]
   14494:	str	r0, [fp, #-12]
   14498:	str	r1, [fp, #-16]
   1449c:	str	r2, [fp, #-20]	; 0xffffffec
   144a0:	str	r3, [fp, #-24]	; 0xffffffe8
   144a4:	ldr	r0, [fp, #-12]
   144a8:	sub	r1, fp, #28
   144ac:	movw	r2, #10
   144b0:	str	ip, [fp, #-36]	; 0xffffffdc
   144b4:	bl	1143c <strtol@plt>
   144b8:	str	r0, [fp, #-32]	; 0xffffffe0
   144bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   144c0:	ldr	r1, [fp, #-12]
   144c4:	cmp	r0, r1
   144c8:	beq	144dc <__assert_fail@plt+0x2d04>
   144cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   144d0:	ldrb	r0, [r0]
   144d4:	cmp	r0, #0
   144d8:	beq	14544 <__assert_fail@plt+0x2d6c>
   144dc:	movw	r0, #20944	; 0x51d0
   144e0:	movt	r0, #3
   144e4:	ldr	r0, [r0]
   144e8:	movw	r1, #12329	; 0x3029
   144ec:	movt	r1, #2
   144f0:	str	r0, [fp, #-40]	; 0xffffffd8
   144f4:	mov	r0, r1
   144f8:	bl	1161c <gettext@plt>
   144fc:	movw	r1, #21168	; 0x52b0
   14500:	movt	r1, #3
   14504:	ldr	r2, [r1]
   14508:	ldr	r3, [fp, #-12]
   1450c:	ldr	r1, [fp, #-16]
   14510:	ldr	ip, [fp, #-40]	; 0xffffffd8
   14514:	str	r0, [sp, #44]	; 0x2c
   14518:	mov	r0, ip
   1451c:	ldr	lr, [sp, #44]	; 0x2c
   14520:	str	r1, [sp, #40]	; 0x28
   14524:	mov	r1, lr
   14528:	ldr	r4, [sp, #40]	; 0x28
   1452c:	str	r4, [sp]
   14530:	bl	11658 <fprintf@plt>
   14534:	movw	r1, #1
   14538:	str	r0, [sp, #36]	; 0x24
   1453c:	mov	r0, r1
   14540:	bl	13ffc <__assert_fail@plt+0x2824>
   14544:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14548:	ldr	r1, [fp, #-20]	; 0xffffffec
   1454c:	cmp	r0, r1
   14550:	bge	145d4 <__assert_fail@plt+0x2dfc>
   14554:	movw	r0, #20944	; 0x51d0
   14558:	movt	r0, #3
   1455c:	ldr	r0, [r0]
   14560:	movw	r1, #12369	; 0x3051
   14564:	movt	r1, #2
   14568:	str	r0, [sp, #32]
   1456c:	mov	r0, r1
   14570:	bl	1161c <gettext@plt>
   14574:	movw	r1, #21168	; 0x52b0
   14578:	movt	r1, #3
   1457c:	ldr	r2, [r1]
   14580:	ldr	r3, [fp, #-12]
   14584:	ldr	r1, [fp, #-16]
   14588:	ldr	ip, [fp, #-20]	; 0xffffffec
   1458c:	ldr	lr, [sp, #32]
   14590:	str	r0, [sp, #28]
   14594:	mov	r0, lr
   14598:	ldr	r4, [sp, #28]
   1459c:	str	r1, [sp, #24]
   145a0:	mov	r1, r4
   145a4:	ldr	r5, [sp, #24]
   145a8:	str	r5, [sp]
   145ac:	str	ip, [sp, #4]
   145b0:	bl	11658 <fprintf@plt>
   145b4:	ldr	r1, [fp, #8]
   145b8:	cmp	r1, #0
   145bc:	beq	145c8 <__assert_fail@plt+0x2df0>
   145c0:	movw	r0, #1
   145c4:	bl	13ffc <__assert_fail@plt+0x2824>
   145c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   145cc:	str	r0, [fp, #-32]	; 0xffffffe0
   145d0:	b	14670 <__assert_fail@plt+0x2e98>
   145d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   145d8:	cmp	r0, #0
   145dc:	blt	1466c <__assert_fail@plt+0x2e94>
   145e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   145e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   145e8:	cmp	r0, r1
   145ec:	ble	1466c <__assert_fail@plt+0x2e94>
   145f0:	movw	r0, #20944	; 0x51d0
   145f4:	movt	r0, #3
   145f8:	ldr	r0, [r0]
   145fc:	movw	r1, #12415	; 0x307f
   14600:	movt	r1, #2
   14604:	str	r0, [sp, #20]
   14608:	mov	r0, r1
   1460c:	bl	1161c <gettext@plt>
   14610:	movw	r1, #21168	; 0x52b0
   14614:	movt	r1, #3
   14618:	ldr	r2, [r1]
   1461c:	ldr	r3, [fp, #-12]
   14620:	ldr	r1, [fp, #-16]
   14624:	ldr	ip, [fp, #-24]	; 0xffffffe8
   14628:	ldr	lr, [sp, #20]
   1462c:	str	r0, [sp, #16]
   14630:	mov	r0, lr
   14634:	ldr	r4, [sp, #16]
   14638:	str	r1, [sp, #12]
   1463c:	mov	r1, r4
   14640:	ldr	r5, [sp, #12]
   14644:	str	r5, [sp]
   14648:	str	ip, [sp, #4]
   1464c:	bl	11658 <fprintf@plt>
   14650:	ldr	r1, [fp, #8]
   14654:	cmp	r1, #0
   14658:	beq	14664 <__assert_fail@plt+0x2e8c>
   1465c:	movw	r0, #1
   14660:	bl	13ffc <__assert_fail@plt+0x2824>
   14664:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14668:	str	r0, [fp, #-32]	; 0xffffffe0
   1466c:	b	14670 <__assert_fail@plt+0x2e98>
   14670:	b	14674 <__assert_fail@plt+0x2e9c>
   14674:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14678:	sub	sp, fp, #8
   1467c:	pop	{r4, r5, fp, pc}
   14680:	sub	sp, sp, #4
   14684:	ldr	r1, [pc, #64]	; 146cc <__assert_fail@plt+0x2ef4>
   14688:	str	r0, [sp]
   1468c:	movw	r0, #20832	; 0x5160
   14690:	movt	r0, #3
   14694:	ldr	r0, [r0]
   14698:	cmp	r0, r1
   1469c:	bge	146b4 <__assert_fail@plt+0x2edc>
   146a0:	movw	r0, #20832	; 0x5160
   146a4:	movt	r0, #3
   146a8:	ldr	r1, [r0]
   146ac:	add	r1, r1, #1
   146b0:	str	r1, [r0]
   146b4:	movw	r0, #21120	; 0x5280
   146b8:	movt	r0, #3
   146bc:	movw	r1, #1
   146c0:	str	r1, [r0]
   146c4:	add	sp, sp, #4
   146c8:	bx	lr
   146cc:	svcvc	0x00ffffff
   146d0:	sub	sp, sp, #4
   146d4:	str	r0, [sp]
   146d8:	movw	r0, #20832	; 0x5160
   146dc:	movt	r0, #3
   146e0:	ldr	r0, [r0]
   146e4:	cmp	r0, #1
   146e8:	ble	14704 <__assert_fail@plt+0x2f2c>
   146ec:	movw	r0, #20832	; 0x5160
   146f0:	movt	r0, #3
   146f4:	ldr	r1, [r0]
   146f8:	mvn	r2, #0
   146fc:	add	r1, r1, r2
   14700:	str	r1, [r0]
   14704:	add	sp, sp, #4
   14708:	bx	lr
   1470c:	push	{fp, lr}
   14710:	mov	fp, sp
   14714:	sub	sp, sp, #32
   14718:	str	r0, [fp, #-8]
   1471c:	ldr	r0, [fp, #-8]
   14720:	movw	r1, #0
   14724:	bl	169b4 <__assert_fail@plt+0x51dc>
   14728:	str	r0, [fp, #-12]
   1472c:	ldr	r0, [fp, #-12]
   14730:	cmp	r0, #0
   14734:	bge	14744 <__assert_fail@plt+0x2f6c>
   14738:	movw	r0, #0
   1473c:	str	r0, [fp, #-4]
   14740:	b	147a8 <__assert_fail@plt+0x2fd0>
   14744:	ldr	r0, [fp, #-12]
   14748:	movw	r1, #10650	; 0x299a
   1474c:	movt	r1, #2
   14750:	bl	1140c <fdopen@plt>
   14754:	str	r0, [sp, #16]
   14758:	ldr	r0, [sp, #16]
   1475c:	movw	r1, #0
   14760:	cmp	r0, r1
   14764:	bne	147a0 <__assert_fail@plt+0x2fc8>
   14768:	bl	11664 <__errno_location@plt>
   1476c:	ldr	r0, [r0]
   14770:	str	r0, [sp, #12]
   14774:	ldr	r0, [fp, #-12]
   14778:	bl	117c0 <close@plt>
   1477c:	ldr	r1, [sp, #12]
   14780:	str	r0, [sp, #8]
   14784:	str	r1, [sp, #4]
   14788:	bl	11664 <__errno_location@plt>
   1478c:	ldr	r1, [sp, #4]
   14790:	str	r1, [r0]
   14794:	movw	r0, #0
   14798:	str	r0, [fp, #-4]
   1479c:	b	147a8 <__assert_fail@plt+0x2fd0>
   147a0:	ldr	r0, [sp, #16]
   147a4:	str	r0, [fp, #-4]
   147a8:	ldr	r0, [fp, #-4]
   147ac:	mov	sp, fp
   147b0:	pop	{fp, pc}
   147b4:	push	{fp, lr}
   147b8:	mov	fp, sp
   147bc:	sub	sp, sp, #48	; 0x30
   147c0:	str	r0, [fp, #-4]
   147c4:	movw	r0, #8
   147c8:	str	r0, [fp, #-12]
   147cc:	ldr	r0, [fp, #-4]
   147d0:	ldrb	r0, [r0]
   147d4:	movw	r1, #92	; 0x5c
   147d8:	cmp	r1, r0
   147dc:	bne	147e4 <__assert_fail@plt+0x300c>
   147e0:	b	14804 <__assert_fail@plt+0x302c>
   147e4:	movw	r0, #10794	; 0x2a2a
   147e8:	movt	r0, #2
   147ec:	movw	r1, #9349	; 0x2485
   147f0:	movt	r1, #2
   147f4:	movw	r2, #236	; 0xec
   147f8:	movw	r3, #10807	; 0x2a37
   147fc:	movt	r3, #2
   14800:	bl	117d8 <__assert_fail@plt>
   14804:	ldr	r0, [fp, #-4]
   14808:	ldrb	r0, [r0, #1]
   1480c:	movw	r1, #120	; 0x78
   14810:	cmp	r1, r0
   14814:	bne	14830 <__assert_fail@plt+0x3058>
   14818:	ldr	r0, [fp, #-4]
   1481c:	add	r0, r0, #2
   14820:	str	r0, [fp, #-8]
   14824:	movw	r0, #16
   14828:	str	r0, [fp, #-12]
   1482c:	b	148a4 <__assert_fail@plt+0x30cc>
   14830:	bl	115f8 <__ctype_b_loc@plt>
   14834:	ldr	r0, [r0]
   14838:	ldr	r1, [fp, #-4]
   1483c:	ldrb	r1, [r1, #1]
   14840:	mov	r2, r1
   14844:	add	r0, r0, r1, lsl #1
   14848:	ldrh	r0, [r0]
   1484c:	and	r0, r0, #2048	; 0x800
   14850:	cmp	r0, #0
   14854:	beq	14870 <__assert_fail@plt+0x3098>
   14858:	ldr	r0, [fp, #-4]
   1485c:	add	r0, r0, #1
   14860:	str	r0, [fp, #-8]
   14864:	movw	r0, #8
   14868:	str	r0, [fp, #-12]
   1486c:	b	148a0 <__assert_fail@plt+0x30c8>
   14870:	movw	r0, #0
   14874:	str	r0, [fp, #-8]
   14878:	movw	r0, #10853	; 0x2a65
   1487c:	movt	r0, #2
   14880:	bl	1161c <gettext@plt>
   14884:	ldr	r3, [fp, #-4]
   14888:	movw	r1, #1
   1488c:	str	r0, [sp, #24]
   14890:	mov	r0, r1
   14894:	movw	r1, #0
   14898:	ldr	r2, [sp, #24]
   1489c:	bl	1158c <error@plt>
   148a0:	b	148a4 <__assert_fail@plt+0x30cc>
   148a4:	bl	11664 <__errno_location@plt>
   148a8:	movw	r1, #0
   148ac:	str	r1, [r0]
   148b0:	str	r1, [fp, #-20]	; 0xffffffec
   148b4:	ldr	r0, [fp, #-8]
   148b8:	ldr	r2, [fp, #-12]
   148bc:	sub	r1, fp, #20
   148c0:	bl	11628 <strtoul@plt>
   148c4:	str	r0, [fp, #-16]
   148c8:	ldr	r0, [fp, #-16]
   148cc:	mvn	r1, #0
   148d0:	cmp	r1, r0
   148d4:	bne	148ec <__assert_fail@plt+0x3114>
   148d8:	bl	11664 <__errno_location@plt>
   148dc:	ldr	r0, [r0]
   148e0:	movw	r1, #34	; 0x22
   148e4:	cmp	r1, r0
   148e8:	beq	148f8 <__assert_fail@plt+0x3120>
   148ec:	ldr	r0, [fp, #-16]
   148f0:	cmp	r0, #255	; 0xff
   148f4:	bls	14968 <__assert_fail@plt+0x3190>
   148f8:	ldr	r0, [fp, #-12]
   148fc:	movw	r1, #16
   14900:	cmp	r1, r0
   14904:	bne	14938 <__assert_fail@plt+0x3160>
   14908:	movw	r0, #10914	; 0x2aa2
   1490c:	movt	r0, #2
   14910:	bl	1161c <gettext@plt>
   14914:	ldr	r3, [fp, #-4]
   14918:	movw	r1, #1
   1491c:	str	r0, [sp, #20]
   14920:	mov	r0, r1
   14924:	movw	r1, #0
   14928:	ldr	r2, [sp, #20]
   1492c:	movw	ip, #255	; 0xff
   14930:	str	ip, [sp]
   14934:	bl	1158c <error@plt>
   14938:	movw	r0, #11013	; 0x2b05
   1493c:	movt	r0, #2
   14940:	bl	1161c <gettext@plt>
   14944:	ldr	r3, [fp, #-4]
   14948:	movw	r1, #1
   1494c:	str	r0, [sp, #16]
   14950:	mov	r0, r1
   14954:	movw	r1, #0
   14958:	ldr	r2, [sp, #16]
   1495c:	movw	ip, #255	; 0xff
   14960:	str	ip, [sp]
   14964:	bl	1158c <error@plt>
   14968:	ldr	r0, [fp, #-20]	; 0xffffffec
   1496c:	ldrb	r0, [r0]
   14970:	movw	r1, #0
   14974:	cmp	r1, r0
   14978:	beq	149b8 <__assert_fail@plt+0x31e0>
   1497c:	movw	r0, #11112	; 0x2b68
   14980:	movt	r0, #2
   14984:	bl	1161c <gettext@plt>
   14988:	ldr	r3, [fp, #-4]
   1498c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14990:	movw	r2, #1
   14994:	str	r0, [sp, #12]
   14998:	mov	r0, r2
   1499c:	movw	r2, #0
   149a0:	str	r1, [sp, #8]
   149a4:	mov	r1, r2
   149a8:	ldr	r2, [sp, #12]
   149ac:	ldr	ip, [sp, #8]
   149b0:	str	ip, [sp]
   149b4:	bl	1158c <error@plt>
   149b8:	ldr	r0, [fp, #-16]
   149bc:	and	r0, r0, #255	; 0xff
   149c0:	mov	sp, fp
   149c4:	pop	{fp, pc}
   149c8:	push	{fp, lr}
   149cc:	mov	fp, sp
   149d0:	movw	r0, #20976	; 0x51f0
   149d4:	movt	r0, #3
   149d8:	ldr	r0, [r0, #24]
   149dc:	movw	r1, #0
   149e0:	cmp	r0, r1
   149e4:	bne	14a30 <__assert_fail@plt+0x3258>
   149e8:	movw	r0, #20836	; 0x5164
   149ec:	movt	r0, #3
   149f0:	ldrb	r0, [r0]
   149f4:	tst	r0, #1
   149f8:	bne	14a30 <__assert_fail@plt+0x3258>
   149fc:	movw	r0, #21048	; 0x5238
   14a00:	movt	r0, #3
   14a04:	ldr	r0, [r0]
   14a08:	movw	r1, #20976	; 0x51f0
   14a0c:	movt	r1, #3
   14a10:	ldr	r1, [r1, #28]
   14a14:	cmp	r0, r1
   14a18:	beq	14a30 <__assert_fail@plt+0x3258>
   14a1c:	movw	r0, #20976	; 0x51f0
   14a20:	movt	r0, #3
   14a24:	ldr	r0, [r0]
   14a28:	cmp	r0, #0
   14a2c:	beq	14a34 <__assert_fail@plt+0x325c>
   14a30:	b	14a48 <__assert_fail@plt+0x3270>
   14a34:	movw	r0, #20976	; 0x51f0
   14a38:	movt	r0, #3
   14a3c:	movw	r1, #21048	; 0x5238
   14a40:	movt	r1, #3
   14a44:	bl	15ad4 <__assert_fail@plt+0x42fc>
   14a48:	pop	{fp, pc}
   14a4c:	push	{fp, lr}
   14a50:	mov	fp, sp
   14a54:	sub	sp, sp, #72	; 0x48
   14a58:	and	r0, r0, #1
   14a5c:	strb	r0, [fp, #-1]
   14a60:	str	r1, [fp, #-8]
   14a64:	movw	r0, #0
   14a68:	str	r0, [fp, #-12]
   14a6c:	movw	r0, #21116	; 0x527c
   14a70:	movt	r0, #3
   14a74:	ldr	r0, [r0]
   14a78:	cmp	r0, #0
   14a7c:	beq	14de0 <__assert_fail@plt+0x3608>
   14a80:	movw	r0, #0
   14a84:	str	r0, [fp, #-28]	; 0xffffffe4
   14a88:	ldrb	r0, [fp, #-1]
   14a8c:	tst	r0, #1
   14a90:	bne	14ab0 <__assert_fail@plt+0x32d8>
   14a94:	ldr	r0, [fp, #-12]
   14a98:	ldr	r1, [fp, #-8]
   14a9c:	cmp	r0, r1
   14aa0:	bcc	14aac <__assert_fail@plt+0x32d4>
   14aa4:	movw	r0, #1
   14aa8:	str	r0, [fp, #-28]	; 0xffffffe4
   14aac:	b	14ab0 <__assert_fail@plt+0x32d8>
   14ab0:	movw	r0, #21120	; 0x5280
   14ab4:	movt	r0, #3
   14ab8:	movw	r1, #0
   14abc:	str	r1, [r0]
   14ac0:	b	14ac4 <__assert_fail@plt+0x32ec>
   14ac4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14ac8:	mvn	r0, #0
   14acc:	sub	r1, fp, #20
   14ad0:	bl	11550 <waitpid@plt>
   14ad4:	str	r0, [fp, #-24]	; 0xffffffe8
   14ad8:	cmn	r0, #1
   14adc:	bne	14b4c <__assert_fail@plt+0x3374>
   14ae0:	bl	11664 <__errno_location@plt>
   14ae4:	ldr	r0, [r0]
   14ae8:	cmp	r0, #4
   14aec:	beq	14b20 <__assert_fail@plt+0x3348>
   14af0:	bl	11664 <__errno_location@plt>
   14af4:	ldr	r1, [r0]
   14af8:	movw	r0, #11768	; 0x2df8
   14afc:	movt	r0, #2
   14b00:	str	r1, [fp, #-32]	; 0xffffffe0
   14b04:	bl	1161c <gettext@plt>
   14b08:	movw	r1, #1
   14b0c:	str	r0, [sp, #36]	; 0x24
   14b10:	mov	r0, r1
   14b14:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14b18:	ldr	r2, [sp, #36]	; 0x24
   14b1c:	bl	1158c <error@plt>
   14b20:	movw	r0, #21120	; 0x5280
   14b24:	movt	r0, #3
   14b28:	ldr	r0, [r0]
   14b2c:	cmp	r0, #0
   14b30:	beq	14b48 <__assert_fail@plt+0x3370>
   14b34:	ldrb	r0, [fp, #-1]
   14b38:	tst	r0, #1
   14b3c:	bne	14b48 <__assert_fail@plt+0x3370>
   14b40:	movw	r0, #1
   14b44:	str	r0, [fp, #-28]	; 0xffffffe4
   14b48:	b	14ac4 <__assert_fail@plt+0x32ec>
   14b4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b50:	cmp	r0, #0
   14b54:	beq	14bd0 <__assert_fail@plt+0x33f8>
   14b58:	movw	r0, #0
   14b5c:	str	r0, [fp, #-16]
   14b60:	ldr	r0, [fp, #-16]
   14b64:	movw	r1, #21124	; 0x5284
   14b68:	movt	r1, #3
   14b6c:	ldr	r1, [r1]
   14b70:	cmp	r0, r1
   14b74:	movw	r0, #0
   14b78:	str	r0, [sp, #32]
   14b7c:	bcs	14bac <__assert_fail@plt+0x33d4>
   14b80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b84:	movw	r1, #21128	; 0x5288
   14b88:	movt	r1, #3
   14b8c:	ldr	r1, [r1]
   14b90:	ldr	r2, [fp, #-16]
   14b94:	add	r1, r1, r2, lsl #2
   14b98:	ldr	r1, [r1]
   14b9c:	cmp	r0, r1
   14ba0:	movw	r0, #0
   14ba4:	movne	r0, #1
   14ba8:	str	r0, [sp, #32]
   14bac:	ldr	r0, [sp, #32]
   14bb0:	tst	r0, #1
   14bb4:	beq	14bcc <__assert_fail@plt+0x33f4>
   14bb8:	b	14bbc <__assert_fail@plt+0x33e4>
   14bbc:	ldr	r0, [fp, #-16]
   14bc0:	add	r0, r0, #1
   14bc4:	str	r0, [fp, #-16]
   14bc8:	b	14b60 <__assert_fail@plt+0x3388>
   14bcc:	b	14bd0 <__assert_fail@plt+0x33f8>
   14bd0:	b	14bd4 <__assert_fail@plt+0x33fc>
   14bd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14bd8:	cmp	r0, #0
   14bdc:	movw	r0, #0
   14be0:	str	r0, [sp, #28]
   14be4:	beq	14c08 <__assert_fail@plt+0x3430>
   14be8:	ldr	r0, [fp, #-16]
   14bec:	movw	r1, #21124	; 0x5284
   14bf0:	movt	r1, #3
   14bf4:	ldr	r1, [r1]
   14bf8:	cmp	r0, r1
   14bfc:	movw	r0, #0
   14c00:	moveq	r0, #1
   14c04:	str	r0, [sp, #28]
   14c08:	ldr	r0, [sp, #28]
   14c0c:	tst	r0, #1
   14c10:	bne	14ac0 <__assert_fail@plt+0x32e8>
   14c14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14c18:	cmp	r0, #0
   14c1c:	bne	14c68 <__assert_fail@plt+0x3490>
   14c20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14c24:	and	r0, r0, #1
   14c28:	cmp	r0, #0
   14c2c:	bne	14c60 <__assert_fail@plt+0x3488>
   14c30:	movw	r0, #11800	; 0x2e18
   14c34:	movt	r0, #2
   14c38:	bl	1161c <gettext@plt>
   14c3c:	movw	r1, #21116	; 0x527c
   14c40:	movt	r1, #3
   14c44:	ldr	r3, [r1]
   14c48:	movw	r1, #0
   14c4c:	str	r0, [sp, #24]
   14c50:	mov	r0, r1
   14c54:	ldr	r2, [sp, #24]
   14c58:	bl	1158c <error@plt>
   14c5c:	b	14c64 <__assert_fail@plt+0x348c>
   14c60:	b	14c64 <__assert_fail@plt+0x348c>
   14c64:	b	14de0 <__assert_fail@plt+0x3608>
   14c68:	movw	r0, #21128	; 0x5288
   14c6c:	movt	r0, #3
   14c70:	ldr	r0, [r0]
   14c74:	ldr	r1, [fp, #-16]
   14c78:	add	r0, r0, r1, lsl #2
   14c7c:	movw	r1, #0
   14c80:	str	r1, [r0]
   14c84:	movw	r0, #21116	; 0x527c
   14c88:	movt	r0, #3
   14c8c:	ldr	r1, [r0]
   14c90:	mvn	r2, #0
   14c94:	add	r1, r1, r2
   14c98:	str	r1, [r0]
   14c9c:	ldr	r0, [fp, #-12]
   14ca0:	add	r0, r0, #1
   14ca4:	str	r0, [fp, #-12]
   14ca8:	ldr	r0, [fp, #-20]	; 0xffffffec
   14cac:	and	r0, r0, #65280	; 0xff00
   14cb0:	asr	r0, r0, #8
   14cb4:	cmp	r0, #255	; 0xff
   14cb8:	bne	14cf0 <__assert_fail@plt+0x3518>
   14cbc:	movw	r0, #11843	; 0x2e43
   14cc0:	movt	r0, #2
   14cc4:	bl	1161c <gettext@plt>
   14cc8:	movw	r1, #21048	; 0x5238
   14ccc:	movt	r1, #3
   14cd0:	ldr	r1, [r1, #4]
   14cd4:	ldr	r3, [r1]
   14cd8:	movw	r1, #124	; 0x7c
   14cdc:	str	r0, [sp, #20]
   14ce0:	mov	r0, r1
   14ce4:	movw	r1, #0
   14ce8:	ldr	r2, [sp, #20]
   14cec:	bl	1158c <error@plt>
   14cf0:	ldr	r0, [fp, #-20]	; 0xffffffec
   14cf4:	and	r0, r0, #255	; 0xff
   14cf8:	cmp	r0, #127	; 0x7f
   14cfc:	bne	14d50 <__assert_fail@plt+0x3578>
   14d00:	movw	r0, #11880	; 0x2e68
   14d04:	movt	r0, #2
   14d08:	bl	1161c <gettext@plt>
   14d0c:	movw	r1, #21048	; 0x5238
   14d10:	movt	r1, #3
   14d14:	ldr	r1, [r1, #4]
   14d18:	ldr	r3, [r1]
   14d1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14d20:	and	r1, r1, #65280	; 0xff00
   14d24:	asr	r1, r1, #8
   14d28:	movw	r2, #125	; 0x7d
   14d2c:	str	r0, [sp, #16]
   14d30:	mov	r0, r2
   14d34:	movw	r2, #0
   14d38:	str	r1, [sp, #12]
   14d3c:	mov	r1, r2
   14d40:	ldr	r2, [sp, #16]
   14d44:	ldr	ip, [sp, #12]
   14d48:	str	ip, [sp]
   14d4c:	bl	1158c <error@plt>
   14d50:	ldr	r0, [fp, #-20]	; 0xffffffec
   14d54:	and	r0, r0, #127	; 0x7f
   14d58:	add	r0, r0, #1
   14d5c:	sxtb	r0, r0
   14d60:	asr	r0, r0, #1
   14d64:	cmp	r0, #0
   14d68:	ble	14db8 <__assert_fail@plt+0x35e0>
   14d6c:	movw	r0, #11905	; 0x2e81
   14d70:	movt	r0, #2
   14d74:	bl	1161c <gettext@plt>
   14d78:	movw	r1, #21048	; 0x5238
   14d7c:	movt	r1, #3
   14d80:	ldr	r1, [r1, #4]
   14d84:	ldr	r3, [r1]
   14d88:	ldr	r1, [fp, #-20]	; 0xffffffec
   14d8c:	and	r1, r1, #127	; 0x7f
   14d90:	movw	r2, #125	; 0x7d
   14d94:	str	r0, [sp, #8]
   14d98:	mov	r0, r2
   14d9c:	movw	r2, #0
   14da0:	str	r1, [sp, #4]
   14da4:	mov	r1, r2
   14da8:	ldr	r2, [sp, #8]
   14dac:	ldr	ip, [sp, #4]
   14db0:	str	ip, [sp]
   14db4:	bl	1158c <error@plt>
   14db8:	ldr	r0, [fp, #-20]	; 0xffffffec
   14dbc:	and	r0, r0, #65280	; 0xff00
   14dc0:	asr	r0, r0, #8
   14dc4:	cmp	r0, #0
   14dc8:	beq	14ddc <__assert_fail@plt+0x3604>
   14dcc:	movw	r0, #21100	; 0x526c
   14dd0:	movt	r0, #3
   14dd4:	movw	r1, #123	; 0x7b
   14dd8:	str	r1, [r0]
   14ddc:	b	14a6c <__assert_fail@plt+0x3294>
   14de0:	mov	sp, fp
   14de4:	pop	{fp, pc}
   14de8:	push	{fp, lr}
   14dec:	mov	fp, sp
   14df0:	sub	sp, sp, #72	; 0x48
   14df4:	and	r0, r0, #1
   14df8:	strb	r0, [fp, #-2]
   14dfc:	movw	r0, #0
   14e00:	str	r0, [fp, #-8]
   14e04:	ldr	r0, [fp, #-8]
   14e08:	movw	r1, #21048	; 0x5238
   14e0c:	movt	r1, #3
   14e10:	ldr	r1, [r1]
   14e14:	sub	r1, r1, #1
   14e18:	cmp	r0, r1
   14e1c:	bcs	14ee0 <__assert_fail@plt+0x3708>
   14e20:	movw	r0, #20944	; 0x51d0
   14e24:	movt	r0, #3
   14e28:	ldr	r0, [r0]
   14e2c:	ldr	r1, [fp, #-8]
   14e30:	movw	r2, #12626	; 0x3152
   14e34:	movt	r2, #2
   14e38:	movw	r3, #11938	; 0x2ea2
   14e3c:	movt	r3, #2
   14e40:	cmp	r1, #0
   14e44:	moveq	r3, r2
   14e48:	movw	r2, #21048	; 0x5238
   14e4c:	movt	r2, #3
   14e50:	ldr	r2, [r2, #4]
   14e54:	add	r1, r2, r1, lsl #2
   14e58:	ldr	r2, [r1]
   14e5c:	movw	r1, #0
   14e60:	str	r0, [fp, #-20]	; 0xffffffec
   14e64:	mov	r0, r1
   14e68:	movw	r1, #3
   14e6c:	str	r3, [fp, #-24]	; 0xffffffe8
   14e70:	bl	1afbc <__assert_fail@plt+0x97e4>
   14e74:	ldr	r1, [fp, #-20]	; 0xffffffec
   14e78:	str	r0, [fp, #-28]	; 0xffffffe4
   14e7c:	mov	r0, r1
   14e80:	movw	r1, #11933	; 0x2e9d
   14e84:	movt	r1, #2
   14e88:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14e8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14e90:	bl	11658 <fprintf@plt>
   14e94:	cmp	r0, #0
   14e98:	bge	14ecc <__assert_fail@plt+0x36f4>
   14e9c:	bl	11664 <__errno_location@plt>
   14ea0:	ldr	r1, [r0]
   14ea4:	movw	r0, #11940	; 0x2ea4
   14ea8:	movt	r0, #2
   14eac:	str	r1, [fp, #-32]	; 0xffffffe0
   14eb0:	bl	1161c <gettext@plt>
   14eb4:	movw	r1, #1
   14eb8:	str	r0, [sp, #36]	; 0x24
   14ebc:	mov	r0, r1
   14ec0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14ec4:	ldr	r2, [sp, #36]	; 0x24
   14ec8:	bl	1158c <error@plt>
   14ecc:	b	14ed0 <__assert_fail@plt+0x36f8>
   14ed0:	ldr	r0, [fp, #-8]
   14ed4:	add	r0, r0, #1
   14ed8:	str	r0, [fp, #-8]
   14edc:	b	14e04 <__assert_fail@plt+0x362c>
   14ee0:	ldrb	r0, [fp, #-2]
   14ee4:	tst	r0, #1
   14ee8:	beq	15098 <__assert_fail@plt+0x38c0>
   14eec:	movw	r0, #21132	; 0x528c
   14ef0:	movt	r0, #3
   14ef4:	ldr	r0, [r0]
   14ef8:	movw	r1, #0
   14efc:	cmp	r0, r1
   14f00:	bne	14f60 <__assert_fail@plt+0x3788>
   14f04:	movw	r0, #11966	; 0x2ebe
   14f08:	movt	r0, #2
   14f0c:	bl	1470c <__assert_fail@plt+0x2f34>
   14f10:	movw	r1, #21132	; 0x528c
   14f14:	movt	r1, #3
   14f18:	str	r0, [r1]
   14f1c:	ldr	r0, [r1]
   14f20:	movw	r1, #0
   14f24:	cmp	r0, r1
   14f28:	bne	14f5c <__assert_fail@plt+0x3784>
   14f2c:	bl	11664 <__errno_location@plt>
   14f30:	ldr	r1, [r0]
   14f34:	movw	r0, #11975	; 0x2ec7
   14f38:	movt	r0, #2
   14f3c:	str	r1, [sp, #32]
   14f40:	bl	1161c <gettext@plt>
   14f44:	movw	r1, #1
   14f48:	str	r0, [sp, #28]
   14f4c:	mov	r0, r1
   14f50:	ldr	r1, [sp, #32]
   14f54:	ldr	r2, [sp, #28]
   14f58:	bl	1158c <error@plt>
   14f5c:	b	14f60 <__assert_fail@plt+0x3788>
   14f60:	movw	r0, #20944	; 0x51d0
   14f64:	movt	r0, #3
   14f68:	ldr	r1, [r0]
   14f6c:	movw	r0, #12011	; 0x2eeb
   14f70:	movt	r0, #2
   14f74:	bl	11790 <fputs@plt>
   14f78:	movw	r1, #20944	; 0x51d0
   14f7c:	movt	r1, #3
   14f80:	ldr	r1, [r1]
   14f84:	str	r0, [sp, #24]
   14f88:	mov	r0, r1
   14f8c:	bl	1f9cc <__assert_fail@plt+0xe1f4>
   14f90:	cmp	r0, #0
   14f94:	beq	14fc8 <__assert_fail@plt+0x37f0>
   14f98:	bl	11664 <__errno_location@plt>
   14f9c:	ldr	r1, [r0]
   14fa0:	movw	r0, #11940	; 0x2ea4
   14fa4:	movt	r0, #2
   14fa8:	str	r1, [sp, #20]
   14fac:	bl	1161c <gettext@plt>
   14fb0:	movw	r1, #1
   14fb4:	str	r0, [sp, #16]
   14fb8:	mov	r0, r1
   14fbc:	ldr	r1, [sp, #20]
   14fc0:	ldr	r2, [sp, #16]
   14fc4:	bl	1158c <error@plt>
   14fc8:	movw	r0, #21132	; 0x528c
   14fcc:	movt	r0, #3
   14fd0:	ldr	r0, [r0]
   14fd4:	bl	117b4 <getc@plt>
   14fd8:	str	r0, [fp, #-16]
   14fdc:	str	r0, [fp, #-12]
   14fe0:	ldr	r0, [fp, #-12]
   14fe4:	cmn	r0, #1
   14fe8:	movw	r0, #0
   14fec:	str	r0, [sp, #12]
   14ff0:	beq	15008 <__assert_fail@plt+0x3830>
   14ff4:	ldr	r0, [fp, #-12]
   14ff8:	cmp	r0, #10
   14ffc:	movw	r0, #0
   15000:	movne	r0, #1
   15004:	str	r0, [sp, #12]
   15008:	ldr	r0, [sp, #12]
   1500c:	tst	r0, #1
   15010:	beq	1502c <__assert_fail@plt+0x3854>
   15014:	movw	r0, #21132	; 0x528c
   15018:	movt	r0, #3
   1501c:	ldr	r0, [r0]
   15020:	bl	117b4 <getc@plt>
   15024:	str	r0, [fp, #-12]
   15028:	b	14fe0 <__assert_fail@plt+0x3808>
   1502c:	ldr	r0, [fp, #-12]
   15030:	mvn	r1, #0
   15034:	cmp	r1, r0
   15038:	bne	1506c <__assert_fail@plt+0x3894>
   1503c:	bl	11664 <__errno_location@plt>
   15040:	ldr	r1, [r0]
   15044:	movw	r0, #12016	; 0x2ef0
   15048:	movt	r0, #2
   1504c:	str	r1, [sp, #8]
   15050:	bl	1161c <gettext@plt>
   15054:	movw	r1, #1
   15058:	str	r0, [sp, #4]
   1505c:	mov	r0, r1
   15060:	ldr	r1, [sp, #8]
   15064:	ldr	r2, [sp, #4]
   15068:	bl	1158c <error@plt>
   1506c:	ldr	r0, [fp, #-16]
   15070:	cmp	r0, #121	; 0x79
   15074:	beq	15084 <__assert_fail@plt+0x38ac>
   15078:	ldr	r0, [fp, #-16]
   1507c:	cmp	r0, #89	; 0x59
   15080:	bne	15094 <__assert_fail@plt+0x38bc>
   15084:	movw	r0, #1
   15088:	and	r0, r0, #1
   1508c:	strb	r0, [fp, #-1]
   15090:	b	150b8 <__assert_fail@plt+0x38e0>
   15094:	b	150ac <__assert_fail@plt+0x38d4>
   15098:	movw	r0, #20944	; 0x51d0
   1509c:	movt	r0, #3
   150a0:	ldr	r1, [r0]
   150a4:	movw	r0, #10
   150a8:	bl	11754 <putc@plt>
   150ac:	movw	r0, #0
   150b0:	and	r0, r0, #1
   150b4:	strb	r0, [fp, #-1]
   150b8:	ldrb	r0, [fp, #-1]
   150bc:	and	r0, r0, #1
   150c0:	mov	sp, fp
   150c4:	pop	{fp, pc}
   150c8:	push	{fp, lr}
   150cc:	mov	fp, sp
   150d0:	sub	sp, sp, #40	; 0x28
   150d4:	bl	16b48 <__assert_fail@plt+0x5370>
   150d8:	tst	r0, #1
   150dc:	beq	150e4 <__assert_fail@plt+0x390c>
   150e0:	bl	16b98 <__assert_fail@plt+0x53c0>
   150e4:	movw	r0, #0
   150e8:	bl	15270 <__assert_fail@plt+0x3a98>
   150ec:	str	r0, [fp, #-4]
   150f0:	ldr	r0, [fp, #-4]
   150f4:	bl	15414 <__assert_fail@plt+0x3c3c>
   150f8:	movw	r0, #21040	; 0x5230
   150fc:	movt	r0, #3
   15100:	ldr	r0, [r0]
   15104:	cmp	r0, #0
   15108:	beq	15120 <__assert_fail@plt+0x3948>
   1510c:	movw	r0, #21029	; 0x5225
   15110:	movt	r0, #3
   15114:	ldrb	r0, [r0]
   15118:	tst	r0, #1
   1511c:	beq	15268 <__assert_fail@plt+0x3a90>
   15120:	movw	r0, #21029	; 0x5225
   15124:	movt	r0, #3
   15128:	ldrb	r0, [r0]
   1512c:	tst	r0, #1
   15130:	movw	r0, #12042	; 0x2f0a
   15134:	movt	r0, #2
   15138:	movw	r1, #11966	; 0x2ebe
   1513c:	movt	r1, #2
   15140:	movne	r0, r1
   15144:	str	r0, [fp, #-12]
   15148:	movw	r0, #0
   1514c:	bl	117c0 <close@plt>
   15150:	ldr	r1, [fp, #-12]
   15154:	str	r0, [fp, #-16]
   15158:	mov	r0, r1
   1515c:	movw	r1, #0
   15160:	bl	17968 <__assert_fail@plt+0x6190>
   15164:	str	r0, [fp, #-8]
   15168:	cmp	r0, #0
   1516c:	bge	15208 <__assert_fail@plt+0x3a30>
   15170:	movw	r0, #21029	; 0x5225
   15174:	movt	r0, #3
   15178:	ldrb	r0, [r0]
   1517c:	tst	r0, #1
   15180:	beq	151c4 <__assert_fail@plt+0x39ec>
   15184:	bl	11664 <__errno_location@plt>
   15188:	ldr	r1, [r0]
   1518c:	ldr	r2, [fp, #-12]
   15190:	movw	r0, #0
   15194:	movw	r3, #8
   15198:	str	r1, [sp, #20]
   1519c:	mov	r1, r3
   151a0:	bl	1afbc <__assert_fail@plt+0x97e4>
   151a4:	movw	r1, #1
   151a8:	str	r0, [sp, #16]
   151ac:	mov	r0, r1
   151b0:	ldr	r1, [sp, #20]
   151b4:	movw	r2, #16907	; 0x420b
   151b8:	movt	r2, #2
   151bc:	ldr	r3, [sp, #16]
   151c0:	bl	1158c <error@plt>
   151c4:	bl	11664 <__errno_location@plt>
   151c8:	ldr	r1, [r0]
   151cc:	ldr	r2, [fp, #-12]
   151d0:	movw	r0, #0
   151d4:	movw	r3, #8
   151d8:	str	r1, [sp, #12]
   151dc:	mov	r1, r3
   151e0:	bl	1afbc <__assert_fail@plt+0x97e4>
   151e4:	movw	r1, #0
   151e8:	str	r0, [sp, #8]
   151ec:	mov	r0, r1
   151f0:	ldr	r1, [sp, #12]
   151f4:	movw	r2, #16907	; 0x420b
   151f8:	movt	r2, #2
   151fc:	ldr	r3, [sp, #8]
   15200:	bl	1158c <error@plt>
   15204:	b	15208 <__assert_fail@plt+0x3a30>
   15208:	ldr	r0, [fp, #-8]
   1520c:	movw	r1, #0
   15210:	cmp	r1, r0
   15214:	bge	15264 <__assert_fail@plt+0x3a8c>
   15218:	ldr	r0, [fp, #-8]
   1521c:	movw	r1, #0
   15220:	bl	114e4 <dup2@plt>
   15224:	cmp	r0, #0
   15228:	beq	1525c <__assert_fail@plt+0x3a84>
   1522c:	bl	11664 <__errno_location@plt>
   15230:	ldr	r1, [r0]
   15234:	movw	r0, #12052	; 0x2f14
   15238:	movt	r0, #2
   1523c:	str	r1, [sp, #4]
   15240:	bl	1161c <gettext@plt>
   15244:	movw	r1, #1
   15248:	str	r0, [sp]
   1524c:	mov	r0, r1
   15250:	ldr	r1, [sp, #4]
   15254:	ldr	r2, [sp]
   15258:	bl	1158c <error@plt>
   1525c:	ldr	r0, [fp, #-8]
   15260:	bl	117c0 <close@plt>
   15264:	b	15268 <__assert_fail@plt+0x3a90>
   15268:	mov	sp, fp
   1526c:	pop	{fp, pc}
   15270:	push	{fp, lr}
   15274:	mov	fp, sp
   15278:	sub	sp, sp, #16
   1527c:	str	r0, [fp, #-4]
   15280:	movw	r0, #0
   15284:	str	r0, [sp, #8]
   15288:	ldr	r0, [sp, #8]
   1528c:	movw	r1, #21124	; 0x5284
   15290:	movt	r1, #3
   15294:	ldr	r1, [r1]
   15298:	cmp	r0, r1
   1529c:	movw	r0, #0
   152a0:	str	r0, [sp]
   152a4:	bcs	152d0 <__assert_fail@plt+0x3af8>
   152a8:	movw	r0, #21128	; 0x5288
   152ac:	movt	r0, #3
   152b0:	ldr	r0, [r0]
   152b4:	ldr	r1, [sp, #8]
   152b8:	add	r0, r0, r1, lsl #2
   152bc:	ldr	r0, [r0]
   152c0:	cmp	r0, #0
   152c4:	movw	r0, #0
   152c8:	movne	r0, #1
   152cc:	str	r0, [sp]
   152d0:	ldr	r0, [sp]
   152d4:	tst	r0, #1
   152d8:	beq	152f0 <__assert_fail@plt+0x3b18>
   152dc:	b	152e0 <__assert_fail@plt+0x3b08>
   152e0:	ldr	r0, [sp, #8]
   152e4:	add	r0, r0, #1
   152e8:	str	r0, [sp, #8]
   152ec:	b	15288 <__assert_fail@plt+0x3ab0>
   152f0:	ldr	r0, [sp, #8]
   152f4:	movw	r1, #21124	; 0x5284
   152f8:	movt	r1, #3
   152fc:	ldr	r1, [r1]
   15300:	cmp	r0, r1
   15304:	bne	15380 <__assert_fail@plt+0x3ba8>
   15308:	movw	r0, #21128	; 0x5288
   1530c:	movt	r0, #3
   15310:	ldr	r0, [r0]
   15314:	movw	r1, #21124	; 0x5284
   15318:	movt	r1, #3
   1531c:	movw	r2, #4
   15320:	bl	1c278 <__assert_fail@plt+0xaaa0>
   15324:	movw	r1, #21128	; 0x5288
   15328:	movt	r1, #3
   1532c:	str	r0, [r1]
   15330:	ldr	r0, [sp, #8]
   15334:	str	r0, [sp, #4]
   15338:	ldr	r0, [sp, #4]
   1533c:	movw	r1, #21124	; 0x5284
   15340:	movt	r1, #3
   15344:	ldr	r1, [r1]
   15348:	cmp	r0, r1
   1534c:	bcs	1537c <__assert_fail@plt+0x3ba4>
   15350:	movw	r0, #21128	; 0x5288
   15354:	movt	r0, #3
   15358:	ldr	r0, [r0]
   1535c:	ldr	r1, [sp, #4]
   15360:	add	r0, r0, r1, lsl #2
   15364:	movw	r1, #0
   15368:	str	r1, [r0]
   1536c:	ldr	r0, [sp, #4]
   15370:	add	r0, r0, #1
   15374:	str	r0, [sp, #4]
   15378:	b	15338 <__assert_fail@plt+0x3b60>
   1537c:	b	15380 <__assert_fail@plt+0x3ba8>
   15380:	movw	r0, #21128	; 0x5288
   15384:	movt	r0, #3
   15388:	ldr	r0, [r0]
   1538c:	ldr	r1, [sp, #8]
   15390:	add	r0, r0, r1, lsl #2
   15394:	ldr	r0, [r0]
   15398:	movw	r1, #0
   1539c:	cmp	r1, r0
   153a0:	bne	153a8 <__assert_fail@plt+0x3bd0>
   153a4:	b	153c8 <__assert_fail@plt+0x3bf0>
   153a8:	movw	r0, #12238	; 0x2fce
   153ac:	movt	r0, #2
   153b0:	movw	r1, #9349	; 0x2485
   153b4:	movt	r1, #2
   153b8:	movw	r2, #1477	; 0x5c5
   153bc:	movw	r3, #12251	; 0x2fdb
   153c0:	movt	r3, #2
   153c4:	bl	117d8 <__assert_fail@plt>
   153c8:	ldr	r0, [fp, #-4]
   153cc:	movw	r1, #21128	; 0x5288
   153d0:	movt	r1, #3
   153d4:	ldr	r1, [r1]
   153d8:	ldr	r2, [sp, #8]
   153dc:	add	r1, r1, r2, lsl #2
   153e0:	str	r0, [r1]
   153e4:	movw	r0, #21116	; 0x527c
   153e8:	movt	r0, #3
   153ec:	ldr	r1, [r0]
   153f0:	add	r1, r1, #1
   153f4:	str	r1, [r0]
   153f8:	movw	r0, #21096	; 0x5268
   153fc:	movt	r0, #3
   15400:	movw	r1, #1
   15404:	strb	r1, [r0]
   15408:	ldr	r0, [sp, #8]
   1540c:	mov	sp, fp
   15410:	pop	{fp, pc}
   15414:	push	{fp, lr}
   15418:	mov	fp, sp
   1541c:	sub	sp, sp, #32
   15420:	add	r1, sp, #8
   15424:	str	r0, [fp, #-4]
   15428:	ldr	r3, [fp, #-4]
   1542c:	mov	r0, r1
   15430:	movw	r1, #19
   15434:	movw	r2, #12107	; 0x2f4b
   15438:	movt	r2, #2
   1543c:	bl	11670 <snprintf@plt>
   15440:	cmp	r0, #19
   15444:	bhi	1544c <__assert_fail@plt+0x3c74>
   15448:	b	1546c <__assert_fail@plt+0x3c94>
   1544c:	movw	r0, #12110	; 0x2f4e
   15450:	movt	r0, #2
   15454:	movw	r1, #9349	; 0x2485
   15458:	movt	r1, #2
   1545c:	movw	r2, #1190	; 0x4a6
   15460:	movw	r3, #12168	; 0x2f88
   15464:	movt	r3, #2
   15468:	bl	117d8 <__assert_fail@plt>
   1546c:	movw	r0, #21032	; 0x5228
   15470:	movt	r0, #3
   15474:	ldr	r0, [r0]
   15478:	movw	r1, #0
   1547c:	cmp	r0, r1
   15480:	beq	154e4 <__assert_fail@plt+0x3d0c>
   15484:	add	r1, sp, #8
   15488:	movw	r0, #21032	; 0x5228
   1548c:	movt	r0, #3
   15490:	ldr	r0, [r0]
   15494:	movw	r2, #1
   15498:	bl	1164c <setenv@plt>
   1549c:	cmp	r0, #0
   154a0:	bge	154e0 <__assert_fail@plt+0x3d08>
   154a4:	bl	11664 <__errno_location@plt>
   154a8:	ldr	r1, [r0]
   154ac:	movw	r0, #12200	; 0x2fa8
   154b0:	movt	r0, #2
   154b4:	str	r1, [sp, #4]
   154b8:	bl	1161c <gettext@plt>
   154bc:	movw	r1, #21032	; 0x5228
   154c0:	movt	r1, #3
   154c4:	ldr	r3, [r1]
   154c8:	movw	r1, #0
   154cc:	str	r0, [sp]
   154d0:	mov	r0, r1
   154d4:	ldr	r1, [sp, #4]
   154d8:	ldr	r2, [sp]
   154dc:	bl	1158c <error@plt>
   154e0:	b	154e4 <__assert_fail@plt+0x3d0c>
   154e4:	mov	sp, fp
   154e8:	pop	{fp, pc}
   154ec:	push	{r4, r5, r6, sl, fp, lr}
   154f0:	add	fp, sp, #16
   154f4:	sub	sp, sp, #56	; 0x38
   154f8:	ldr	ip, [fp, #24]
   154fc:	ldr	lr, [fp, #20]
   15500:	ldr	r4, [fp, #16]
   15504:	ldr	r5, [fp, #12]
   15508:	ldr	r6, [fp, #8]
   1550c:	str	r0, [fp, #-20]	; 0xffffffec
   15510:	str	r1, [fp, #-24]	; 0xffffffe8
   15514:	str	r2, [fp, #-28]	; 0xffffffe4
   15518:	str	r3, [fp, #-32]	; 0xffffffe0
   1551c:	ldr	r0, [fp, #-20]	; 0xffffffec
   15520:	ldr	r0, [r0, #12]
   15524:	sub	r0, r0, #1
   15528:	str	r0, [sp, #32]
   1552c:	movw	r0, #21140	; 0x5294
   15530:	movt	r0, #3
   15534:	ldr	r0, [r0]
   15538:	movw	r1, #0
   1553c:	cmp	r0, r1
   15540:	bne	15560 <__assert_fail@plt+0x3d88>
   15544:	ldr	r0, [fp, #-20]	; 0xffffffec
   15548:	ldr	r0, [r0, #12]
   1554c:	add	r0, r0, #1
   15550:	bl	1c09c <__assert_fail@plt+0xa8c4>
   15554:	movw	r1, #21140	; 0x5294
   15558:	movt	r1, #3
   1555c:	str	r0, [r1]
   15560:	movw	r0, #21140	; 0x5294
   15564:	movt	r0, #3
   15568:	ldr	r0, [r0]
   1556c:	str	r0, [sp, #36]	; 0x24
   15570:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15574:	ldr	r1, [fp, #-20]	; 0xffffffec
   15578:	ldr	r1, [r1, #24]
   1557c:	bl	179e8 <__assert_fail@plt+0x6210>
   15580:	str	r0, [sp, #24]
   15584:	ldr	r0, [sp, #24]
   15588:	movw	r1, #0
   1558c:	cmp	r0, r1
   15590:	beq	155a8 <__assert_fail@plt+0x3dd0>
   15594:	ldr	r0, [sp, #24]
   15598:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1559c:	sub	r0, r0, r1
   155a0:	str	r0, [sp, #28]
   155a4:	b	155b0 <__assert_fail@plt+0x3dd8>
   155a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   155ac:	str	r0, [sp, #28]
   155b0:	ldr	r0, [sp, #32]
   155b4:	ldr	r1, [sp, #28]
   155b8:	cmp	r0, r1
   155bc:	bhi	155c4 <__assert_fail@plt+0x3dec>
   155c0:	b	156dc <__assert_fail@plt+0x3f04>
   155c4:	ldr	r0, [sp, #28]
   155c8:	ldr	r1, [sp, #32]
   155cc:	sub	r0, r1, r0
   155d0:	str	r0, [sp, #32]
   155d4:	ldr	r0, [sp, #36]	; 0x24
   155d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   155dc:	ldr	r2, [sp, #28]
   155e0:	bl	11694 <strncpy@plt>
   155e4:	ldr	r1, [sp, #28]
   155e8:	ldr	r2, [sp, #36]	; 0x24
   155ec:	add	r1, r2, r1
   155f0:	str	r1, [sp, #36]	; 0x24
   155f4:	ldr	r1, [sp, #28]
   155f8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   155fc:	add	r1, r2, r1
   15600:	str	r1, [fp, #-28]	; 0xffffffe4
   15604:	ldr	r1, [sp, #28]
   15608:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1560c:	sub	r1, r2, r1
   15610:	str	r1, [fp, #-32]	; 0xffffffe0
   15614:	ldr	r1, [sp, #24]
   15618:	movw	r2, #0
   1561c:	cmp	r1, r2
   15620:	beq	156c8 <__assert_fail@plt+0x3ef0>
   15624:	ldr	r0, [sp, #32]
   15628:	ldr	r1, [fp, #20]
   1562c:	ldr	r2, [fp, #12]
   15630:	add	r1, r1, r2
   15634:	cmp	r0, r1
   15638:	bhi	15640 <__assert_fail@plt+0x3e68>
   1563c:	b	156dc <__assert_fail@plt+0x3f04>
   15640:	ldr	r0, [fp, #20]
   15644:	ldr	r1, [fp, #12]
   15648:	add	r0, r0, r1
   1564c:	ldr	r1, [sp, #32]
   15650:	sub	r0, r1, r0
   15654:	str	r0, [sp, #32]
   15658:	ldr	r0, [fp, #8]
   1565c:	movw	r1, #0
   15660:	cmp	r0, r1
   15664:	beq	15684 <__assert_fail@plt+0x3eac>
   15668:	ldr	r0, [sp, #36]	; 0x24
   1566c:	ldr	r1, [fp, #8]
   15670:	bl	11568 <strcpy@plt>
   15674:	ldr	r1, [fp, #12]
   15678:	ldr	r2, [sp, #36]	; 0x24
   1567c:	add	r1, r2, r1
   15680:	str	r1, [sp, #36]	; 0x24
   15684:	ldr	r0, [sp, #36]	; 0x24
   15688:	ldr	r1, [fp, #16]
   1568c:	bl	11568 <strcpy@plt>
   15690:	ldr	r1, [fp, #20]
   15694:	ldr	r2, [sp, #36]	; 0x24
   15698:	add	r1, r2, r1
   1569c:	str	r1, [sp, #36]	; 0x24
   156a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   156a4:	ldr	r1, [r1, #20]
   156a8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   156ac:	add	r1, r2, r1
   156b0:	str	r1, [fp, #-28]	; 0xffffffe4
   156b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   156b8:	ldr	r1, [r1, #20]
   156bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   156c0:	sub	r1, r2, r1
   156c4:	str	r1, [fp, #-32]	; 0xffffffe0
   156c8:	b	156cc <__assert_fail@plt+0x3ef4>
   156cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   156d0:	ldrsb	r0, [r0]
   156d4:	cmp	r0, #0
   156d8:	bne	15570 <__assert_fail@plt+0x3d98>
   156dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   156e0:	ldrsb	r0, [r0]
   156e4:	cmp	r0, #0
   156e8:	beq	15710 <__assert_fail@plt+0x3f38>
   156ec:	movw	r0, #15628	; 0x3d0c
   156f0:	movt	r0, #2
   156f4:	bl	1161c <gettext@plt>
   156f8:	movw	r1, #1
   156fc:	str	r0, [sp, #20]
   15700:	mov	r0, r1
   15704:	movw	r1, #0
   15708:	ldr	r2, [sp, #20]
   1570c:	bl	1158c <error@plt>
   15710:	ldr	r0, [sp, #36]	; 0x24
   15714:	add	r1, r0, #1
   15718:	str	r1, [sp, #36]	; 0x24
   1571c:	movw	r1, #0
   15720:	strb	r1, [r0]
   15724:	ldr	r0, [fp, #-20]	; 0xffffffec
   15728:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1572c:	movw	r2, #21140	; 0x5294
   15730:	movt	r2, #3
   15734:	ldr	r3, [r2]
   15738:	ldr	ip, [sp, #36]	; 0x24
   1573c:	ldr	r2, [r2]
   15740:	sub	r2, ip, r2
   15744:	ldr	ip, [fp, #24]
   15748:	str	r2, [sp, #16]
   1574c:	mov	r2, r3
   15750:	ldr	r3, [sp, #16]
   15754:	movw	lr, #0
   15758:	str	lr, [sp]
   1575c:	str	lr, [sp, #4]
   15760:	str	ip, [sp, #8]
   15764:	bl	15770 <__assert_fail@plt+0x3f98>
   15768:	sub	sp, fp, #16
   1576c:	pop	{r4, r5, r6, sl, fp, pc}
   15770:	push	{r4, sl, fp, lr}
   15774:	add	fp, sp, #8
   15778:	sub	sp, sp, #40	; 0x28
   1577c:	ldr	ip, [fp, #16]
   15780:	ldr	lr, [fp, #12]
   15784:	ldr	r4, [fp, #8]
   15788:	str	r0, [fp, #-12]
   1578c:	str	r1, [fp, #-16]
   15790:	str	r2, [fp, #-20]	; 0xffffffec
   15794:	str	r3, [sp, #24]
   15798:	ldr	r0, [fp, #-20]	; 0xffffffec
   1579c:	movw	r1, #20840	; 0x5168
   157a0:	movt	r1, #3
   157a4:	ldr	r1, [r1]
   157a8:	cmp	r0, r1
   157ac:	movw	r0, #0
   157b0:	moveq	r0, #1
   157b4:	and	r0, r0, #1
   157b8:	str	r0, [sp, #20]
   157bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   157c0:	movw	r1, #0
   157c4:	cmp	r0, r1
   157c8:	beq	157d0 <__assert_fail@plt+0x3ff8>
   157cc:	b	157f0 <__assert_fail@plt+0x4018>
   157d0:	movw	r0, #15839	; 0x3ddf
   157d4:	movt	r0, #2
   157d8:	movw	r1, #15665	; 0x3d31
   157dc:	movt	r1, #2
   157e0:	movw	r2, #341	; 0x155
   157e4:	movw	r3, #15851	; 0x3deb
   157e8:	movt	r3, #2
   157ec:	bl	117d8 <__assert_fail@plt>
   157f0:	ldr	r0, [sp, #20]
   157f4:	cmp	r0, #0
   157f8:	bne	15908 <__assert_fail@plt+0x4130>
   157fc:	ldr	r0, [fp, #-16]
   15800:	ldr	r0, [r0, #16]
   15804:	ldr	r1, [sp, #24]
   15808:	add	r0, r0, r1
   1580c:	ldr	r1, [fp, #12]
   15810:	add	r0, r0, r1
   15814:	ldr	r1, [fp, #-12]
   15818:	ldr	r1, [r1, #12]
   1581c:	cmp	r0, r1
   15820:	bls	158e0 <__assert_fail@plt+0x4108>
   15824:	ldr	r0, [fp, #16]
   15828:	cmp	r0, #0
   1582c:	bne	15848 <__assert_fail@plt+0x4070>
   15830:	ldr	r0, [fp, #-16]
   15834:	ldr	r0, [r0]
   15838:	ldr	r1, [fp, #-12]
   1583c:	ldr	r1, [r1, #28]
   15840:	cmp	r0, r1
   15844:	bne	1586c <__assert_fail@plt+0x4094>
   15848:	movw	r0, #15969	; 0x3e61
   1584c:	movt	r0, #2
   15850:	bl	1161c <gettext@plt>
   15854:	movw	r1, #1
   15858:	str	r0, [sp, #16]
   1585c:	mov	r0, r1
   15860:	movw	r1, #0
   15864:	ldr	r2, [sp, #16]
   15868:	bl	1158c <error@plt>
   1586c:	ldr	r0, [fp, #-12]
   15870:	ldr	r0, [r0, #24]
   15874:	movw	r1, #0
   15878:	cmp	r0, r1
   1587c:	bne	158b0 <__assert_fail@plt+0x40d8>
   15880:	ldr	r0, [fp, #-12]
   15884:	ldr	r0, [r0]
   15888:	cmp	r0, #0
   1588c:	beq	158d4 <__assert_fail@plt+0x40fc>
   15890:	ldr	r0, [fp, #-12]
   15894:	ldr	r0, [r0, #36]	; 0x24
   15898:	cmp	r0, #0
   1589c:	bne	158b0 <__assert_fail@plt+0x40d8>
   158a0:	ldr	r0, [fp, #-12]
   158a4:	ldr	r0, [r0, #40]	; 0x28
   158a8:	cmp	r0, #0
   158ac:	beq	158d4 <__assert_fail@plt+0x40fc>
   158b0:	movw	r0, #16028	; 0x3e9c
   158b4:	movt	r0, #2
   158b8:	bl	1161c <gettext@plt>
   158bc:	movw	r1, #1
   158c0:	str	r0, [sp, #12]
   158c4:	mov	r0, r1
   158c8:	movw	r1, #0
   158cc:	ldr	r2, [sp, #12]
   158d0:	bl	1158c <error@plt>
   158d4:	ldr	r0, [fp, #-12]
   158d8:	ldr	r1, [fp, #-16]
   158dc:	bl	15ad4 <__assert_fail@plt+0x42fc>
   158e0:	ldr	r0, [fp, #16]
   158e4:	ldr	r1, [fp, #-12]
   158e8:	ldr	r2, [fp, #-16]
   158ec:	bl	1608c <__assert_fail@plt+0x48b4>
   158f0:	cmp	r0, #0
   158f4:	beq	15904 <__assert_fail@plt+0x412c>
   158f8:	ldr	r0, [fp, #-12]
   158fc:	ldr	r1, [fp, #-16]
   15900:	bl	15ad4 <__assert_fail@plt+0x42fc>
   15904:	b	15908 <__assert_fail@plt+0x4130>
   15908:	ldr	r0, [fp, #16]
   1590c:	cmp	r0, #0
   15910:	bne	15920 <__assert_fail@plt+0x4148>
   15914:	ldr	r0, [fp, #-16]
   15918:	movw	r1, #1
   1591c:	str	r1, [r0, #28]
   15920:	ldr	r0, [fp, #-16]
   15924:	ldr	r0, [r0]
   15928:	ldr	r1, [fp, #-16]
   1592c:	ldr	r1, [r1, #8]
   15930:	cmp	r0, r1
   15934:	bcc	159b0 <__assert_fail@plt+0x41d8>
   15938:	ldr	r0, [fp, #-16]
   1593c:	ldr	r0, [r0, #4]
   15940:	movw	r1, #0
   15944:	cmp	r0, r1
   15948:	bne	15974 <__assert_fail@plt+0x419c>
   1594c:	ldr	r0, [fp, #-16]
   15950:	mov	r1, #64	; 0x40
   15954:	str	r1, [r0, #8]
   15958:	ldr	r0, [fp, #-16]
   1595c:	ldr	r0, [r0, #8]
   15960:	lsl	r0, r0, #2
   15964:	bl	1c09c <__assert_fail@plt+0xa8c4>
   15968:	ldr	r1, [fp, #-16]
   1596c:	str	r0, [r1, #4]
   15970:	b	159ac <__assert_fail@plt+0x41d4>
   15974:	ldr	r0, [fp, #-16]
   15978:	ldr	r1, [r0, #8]
   1597c:	lsl	r1, r1, #1
   15980:	str	r1, [r0, #8]
   15984:	ldr	r0, [fp, #-16]
   15988:	ldr	r1, [r0, #4]
   1598c:	ldr	r0, [r0, #8]
   15990:	lsl	r0, r0, #2
   15994:	str	r0, [sp, #8]
   15998:	mov	r0, r1
   1599c:	ldr	r1, [sp, #8]
   159a0:	bl	1c134 <__assert_fail@plt+0xa95c>
   159a4:	ldr	r1, [fp, #-16]
   159a8:	str	r0, [r1, #4]
   159ac:	b	159b0 <__assert_fail@plt+0x41d8>
   159b0:	ldr	r0, [sp, #20]
   159b4:	cmp	r0, #0
   159b8:	beq	159e0 <__assert_fail@plt+0x4208>
   159bc:	ldr	r0, [fp, #-16]
   159c0:	ldr	r1, [r0]
   159c4:	ldr	r2, [r0, #4]
   159c8:	add	r3, r1, #1
   159cc:	str	r3, [r0]
   159d0:	add	r0, r2, r1, lsl #2
   159d4:	movw	r1, #0
   159d8:	str	r1, [r0]
   159dc:	b	15ab0 <__assert_fail@plt+0x42d8>
   159e0:	ldr	r0, [fp, #-16]
   159e4:	ldr	r1, [r0]
   159e8:	ldr	r2, [r0, #4]
   159ec:	ldr	r3, [r0, #12]
   159f0:	ldr	ip, [r0, #16]
   159f4:	add	r3, r3, ip
   159f8:	add	ip, r1, #1
   159fc:	str	ip, [r0]
   15a00:	add	r0, r2, r1, lsl #2
   15a04:	str	r3, [r0]
   15a08:	ldr	r0, [fp, #8]
   15a0c:	movw	r1, #0
   15a10:	cmp	r0, r1
   15a14:	beq	15a48 <__assert_fail@plt+0x4270>
   15a18:	ldr	r0, [fp, #-16]
   15a1c:	ldr	r0, [r0, #12]
   15a20:	ldr	r1, [fp, #-16]
   15a24:	ldr	r1, [r1, #16]
   15a28:	add	r0, r0, r1
   15a2c:	ldr	r1, [fp, #8]
   15a30:	bl	11568 <strcpy@plt>
   15a34:	ldr	r1, [fp, #12]
   15a38:	ldr	r2, [fp, #-16]
   15a3c:	ldr	r3, [r2, #16]
   15a40:	add	r1, r3, r1
   15a44:	str	r1, [r2, #16]
   15a48:	ldr	r0, [fp, #-16]
   15a4c:	ldr	r0, [r0, #12]
   15a50:	ldr	r1, [fp, #-16]
   15a54:	ldr	r1, [r1, #16]
   15a58:	add	r0, r0, r1
   15a5c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15a60:	bl	11568 <strcpy@plt>
   15a64:	ldr	r1, [sp, #24]
   15a68:	ldr	r2, [fp, #-16]
   15a6c:	ldr	r3, [r2, #16]
   15a70:	add	r1, r3, r1
   15a74:	str	r1, [r2, #16]
   15a78:	ldr	r1, [fp, #16]
   15a7c:	ldr	r2, [fp, #-12]
   15a80:	ldr	r3, [fp, #-16]
   15a84:	str	r0, [sp, #4]
   15a88:	mov	r0, r1
   15a8c:	mov	r1, r2
   15a90:	mov	r2, r3
   15a94:	bl	1608c <__assert_fail@plt+0x48b4>
   15a98:	cmp	r0, #0
   15a9c:	beq	15aac <__assert_fail@plt+0x42d4>
   15aa0:	ldr	r0, [fp, #-12]
   15aa4:	ldr	r1, [fp, #-16]
   15aa8:	bl	15ad4 <__assert_fail@plt+0x42fc>
   15aac:	b	15ab0 <__assert_fail@plt+0x42d8>
   15ab0:	ldr	r0, [fp, #16]
   15ab4:	cmp	r0, #0
   15ab8:	beq	15acc <__assert_fail@plt+0x42f4>
   15abc:	ldr	r0, [fp, #-16]
   15ac0:	ldr	r0, [r0, #16]
   15ac4:	ldr	r1, [fp, #-16]
   15ac8:	str	r0, [r1, #20]
   15acc:	sub	sp, fp, #8
   15ad0:	pop	{r4, sl, fp, pc}
   15ad4:	push	{fp, lr}
   15ad8:	mov	fp, sp
   15adc:	sub	sp, sp, #40	; 0x28
   15ae0:	str	r0, [fp, #-4]
   15ae4:	str	r1, [fp, #-8]
   15ae8:	ldr	r0, [fp, #-4]
   15aec:	ldr	r1, [fp, #-8]
   15af0:	bl	15cd8 <__assert_fail@plt+0x4500>
   15af4:	ldr	r0, [fp, #-8]
   15af8:	ldr	r0, [r0]
   15afc:	cmp	r0, #0
   15b00:	bls	15b08 <__assert_fail@plt+0x4330>
   15b04:	b	15b28 <__assert_fail@plt+0x4350>
   15b08:	movw	r0, #15645	; 0x3d1d
   15b0c:	movt	r0, #2
   15b10:	movw	r1, #15665	; 0x3d31
   15b14:	movt	r1, #2
   15b18:	movw	r2, #261	; 0x105
   15b1c:	movw	r3, #15676	; 0x3d3c
   15b20:	movt	r3, #2
   15b24:	bl	117d8 <__assert_fail@plt>
   15b28:	ldr	r0, [fp, #-8]
   15b2c:	ldr	r1, [r0]
   15b30:	ldr	r0, [r0, #4]
   15b34:	sub	r1, r1, #1
   15b38:	add	r0, r0, r1, lsl #2
   15b3c:	ldr	r0, [r0]
   15b40:	movw	r1, #0
   15b44:	cmp	r0, r1
   15b48:	bne	15b50 <__assert_fail@plt+0x4378>
   15b4c:	b	15b70 <__assert_fail@plt+0x4398>
   15b50:	movw	r0, #15744	; 0x3d80
   15b54:	movt	r0, #2
   15b58:	movw	r1, #15665	; 0x3d31
   15b5c:	movt	r1, #2
   15b60:	movw	r2, #262	; 0x106
   15b64:	movw	r3, #15676	; 0x3d3c
   15b68:	movt	r3, #2
   15b6c:	bl	117d8 <__assert_fail@plt>
   15b70:	ldr	r0, [fp, #-8]
   15b74:	ldr	r0, [r0]
   15b78:	add	r0, r0, #1
   15b7c:	lsl	r0, r0, #2
   15b80:	bl	1c09c <__assert_fail@plt+0xa8c4>
   15b84:	str	r0, [fp, #-12]
   15b88:	movw	r0, #0
   15b8c:	str	r0, [sp, #20]
   15b90:	ldr	r0, [fp, #-8]
   15b94:	ldr	r0, [r0]
   15b98:	str	r0, [fp, #-16]
   15b9c:	ldr	r0, [fp, #-4]
   15ba0:	ldr	r1, [fp, #-8]
   15ba4:	ldr	r2, [fp, #-12]
   15ba8:	ldr	r3, [fp, #-16]
   15bac:	ldr	ip, [sp, #20]
   15bb0:	str	ip, [sp]
   15bb4:	bl	15d24 <__assert_fail@plt+0x454c>
   15bb8:	str	r0, [sp, #16]
   15bbc:	ldr	r0, [fp, #-4]
   15bc0:	ldr	r0, [r0, #32]
   15bc4:	ldr	r1, [fp, #-4]
   15bc8:	ldr	r2, [fp, #-8]
   15bcc:	ldr	r2, [r2, #24]
   15bd0:	ldr	r3, [sp, #16]
   15bd4:	ldr	ip, [fp, #-12]
   15bd8:	str	r0, [sp, #12]
   15bdc:	mov	r0, r1
   15be0:	mov	r1, r2
   15be4:	mov	r2, r3
   15be8:	mov	r3, ip
   15bec:	ldr	ip, [sp, #12]
   15bf0:	blx	ip
   15bf4:	cmp	r0, #0
   15bf8:	beq	15c38 <__assert_fail@plt+0x4460>
   15bfc:	ldr	r0, [fp, #-4]
   15c00:	ldr	r1, [fp, #-8]
   15c04:	ldr	r3, [fp, #-16]
   15c08:	movw	r2, #1
   15c0c:	and	r2, r2, #1
   15c10:	bl	15e74 <__assert_fail@plt+0x469c>
   15c14:	str	r0, [fp, #-16]
   15c18:	ldr	r0, [sp, #16]
   15c1c:	ldr	r1, [fp, #-4]
   15c20:	ldr	r1, [r1, #28]
   15c24:	sub	r0, r0, r1
   15c28:	ldr	r1, [sp, #20]
   15c2c:	add	r0, r1, r0
   15c30:	str	r0, [sp, #20]
   15c34:	b	15c94 <__assert_fail@plt+0x44bc>
   15c38:	ldr	r0, [fp, #-16]
   15c3c:	ldr	r1, [fp, #-4]
   15c40:	ldr	r1, [r1, #28]
   15c44:	add	r1, r1, #1
   15c48:	cmp	r0, r1
   15c4c:	bhi	15c74 <__assert_fail@plt+0x449c>
   15c50:	movw	r0, #15787	; 0x3dab
   15c54:	movt	r0, #2
   15c58:	bl	1161c <gettext@plt>
   15c5c:	movw	r1, #1
   15c60:	str	r0, [sp, #8]
   15c64:	mov	r0, r1
   15c68:	movw	r1, #0
   15c6c:	ldr	r2, [sp, #8]
   15c70:	bl	1158c <error@plt>
   15c74:	ldr	r0, [fp, #-4]
   15c78:	ldr	r1, [fp, #-8]
   15c7c:	ldr	r3, [fp, #-16]
   15c80:	movw	r2, #0
   15c84:	and	r2, r2, #1
   15c88:	bl	15e74 <__assert_fail@plt+0x469c>
   15c8c:	str	r0, [fp, #-16]
   15c90:	b	15c94 <__assert_fail@plt+0x44bc>
   15c94:	b	15c98 <__assert_fail@plt+0x44c0>
   15c98:	ldr	r0, [sp, #20]
   15c9c:	add	r0, r0, #1
   15ca0:	ldr	r1, [fp, #-8]
   15ca4:	ldr	r1, [r1]
   15ca8:	ldr	r2, [fp, #-4]
   15cac:	ldr	r2, [r2, #28]
   15cb0:	sub	r1, r1, r2
   15cb4:	cmp	r0, r1
   15cb8:	bcc	15b9c <__assert_fail@plt+0x43c4>
   15cbc:	ldr	r0, [fp, #-12]
   15cc0:	bl	1fb14 <__assert_fail@plt+0xe33c>
   15cc4:	ldr	r0, [fp, #-4]
   15cc8:	ldr	r1, [fp, #-8]
   15ccc:	bl	16040 <__assert_fail@plt+0x4868>
   15cd0:	mov	sp, fp
   15cd4:	pop	{fp, pc}
   15cd8:	push	{fp, lr}
   15cdc:	mov	fp, sp
   15ce0:	sub	sp, sp, #24
   15ce4:	str	r0, [fp, #-4]
   15ce8:	str	r1, [fp, #-8]
   15cec:	ldr	r0, [fp, #-4]
   15cf0:	ldr	r1, [fp, #-8]
   15cf4:	movw	r2, #20840	; 0x5168
   15cf8:	movt	r2, #3
   15cfc:	ldr	r2, [r2]
   15d00:	movw	r3, #0
   15d04:	str	r3, [sp, #12]
   15d08:	ldr	ip, [sp, #12]
   15d0c:	str	ip, [sp]
   15d10:	str	ip, [sp, #4]
   15d14:	str	ip, [sp, #8]
   15d18:	bl	15770 <__assert_fail@plt+0x3f98>
   15d1c:	mov	sp, fp
   15d20:	pop	{fp, pc}
   15d24:	push	{fp, lr}
   15d28:	mov	fp, sp
   15d2c:	sub	sp, sp, #32
   15d30:	ldr	ip, [fp, #8]
   15d34:	str	r0, [fp, #-4]
   15d38:	str	r1, [fp, #-8]
   15d3c:	str	r2, [fp, #-12]
   15d40:	str	r3, [sp, #16]
   15d44:	movw	r0, #0
   15d48:	str	r0, [sp, #12]
   15d4c:	str	r0, [sp, #8]
   15d50:	ldr	r0, [sp, #8]
   15d54:	ldr	r1, [fp, #-4]
   15d58:	ldr	r1, [r1, #28]
   15d5c:	cmp	r0, r1
   15d60:	bcs	15d98 <__assert_fail@plt+0x45c0>
   15d64:	ldr	r0, [fp, #-8]
   15d68:	ldr	r0, [r0, #4]
   15d6c:	ldr	r1, [sp, #8]
   15d70:	add	r2, r1, #1
   15d74:	str	r2, [sp, #8]
   15d78:	ldr	r0, [r0, r1, lsl #2]
   15d7c:	ldr	r1, [fp, #-12]
   15d80:	ldr	r2, [sp, #12]
   15d84:	add	r3, r2, #1
   15d88:	str	r3, [sp, #12]
   15d8c:	add	r1, r1, r2, lsl #2
   15d90:	str	r0, [r1]
   15d94:	b	15d50 <__assert_fail@plt+0x4578>
   15d98:	ldr	r0, [fp, #8]
   15d9c:	ldr	r1, [sp, #8]
   15da0:	add	r0, r1, r0
   15da4:	str	r0, [sp, #8]
   15da8:	ldr	r0, [sp, #8]
   15dac:	ldr	r1, [fp, #-8]
   15db0:	ldr	r1, [r1]
   15db4:	cmp	r0, r1
   15db8:	movw	r0, #0
   15dbc:	str	r0, [sp, #4]
   15dc0:	bcs	15ddc <__assert_fail@plt+0x4604>
   15dc4:	ldr	r0, [sp, #12]
   15dc8:	ldr	r1, [sp, #16]
   15dcc:	cmp	r0, r1
   15dd0:	movw	r0, #0
   15dd4:	movcc	r0, #1
   15dd8:	str	r0, [sp, #4]
   15ddc:	ldr	r0, [sp, #4]
   15de0:	tst	r0, #1
   15de4:	beq	15e1c <__assert_fail@plt+0x4644>
   15de8:	ldr	r0, [fp, #-8]
   15dec:	ldr	r0, [r0, #4]
   15df0:	ldr	r1, [sp, #8]
   15df4:	add	r2, r1, #1
   15df8:	str	r2, [sp, #8]
   15dfc:	ldr	r0, [r0, r1, lsl #2]
   15e00:	ldr	r1, [fp, #-12]
   15e04:	ldr	r2, [sp, #12]
   15e08:	add	r3, r2, #1
   15e0c:	str	r3, [sp, #12]
   15e10:	add	r1, r1, r2, lsl #2
   15e14:	str	r0, [r1]
   15e18:	b	15da8 <__assert_fail@plt+0x45d0>
   15e1c:	ldr	r0, [sp, #12]
   15e20:	ldr	r1, [fp, #-4]
   15e24:	ldr	r1, [r1, #28]
   15e28:	cmp	r0, r1
   15e2c:	bcc	15e34 <__assert_fail@plt+0x465c>
   15e30:	b	15e54 <__assert_fail@plt+0x467c>
   15e34:	movw	r0, #16344	; 0x3fd8
   15e38:	movt	r0, #2
   15e3c:	movw	r1, #15665	; 0x3d31
   15e40:	movt	r1, #2
   15e44:	movw	r2, #242	; 0xf2
   15e48:	movw	r3, #16373	; 0x3ff5
   15e4c:	movt	r3, #2
   15e50:	bl	117d8 <__assert_fail@plt>
   15e54:	ldr	r0, [fp, #-12]
   15e58:	ldr	r1, [sp, #12]
   15e5c:	add	r0, r0, r1, lsl #2
   15e60:	movw	r1, #0
   15e64:	str	r1, [r0]
   15e68:	ldr	r0, [sp, #12]
   15e6c:	mov	sp, fp
   15e70:	pop	{fp, pc}
   15e74:	sub	sp, sp, #20
   15e78:	str	r0, [sp, #16]
   15e7c:	str	r1, [sp, #12]
   15e80:	and	r0, r2, #1
   15e84:	strb	r0, [sp, #11]
   15e88:	str	r3, [sp, #4]
   15e8c:	ldrb	r0, [sp, #11]
   15e90:	tst	r0, #1
   15e94:	beq	15ebc <__assert_fail@plt+0x46e4>
   15e98:	ldr	r0, [sp, #4]
   15e9c:	ldr	r1, [sp, #12]
   15ea0:	ldr	r1, [r1, #36]	; 0x24
   15ea4:	cmp	r0, r1
   15ea8:	bls	15eb8 <__assert_fail@plt+0x46e0>
   15eac:	ldr	r0, [sp, #4]
   15eb0:	ldr	r1, [sp, #12]
   15eb4:	str	r0, [r1, #36]	; 0x24
   15eb8:	b	15ef4 <__assert_fail@plt+0x471c>
   15ebc:	ldr	r0, [sp, #4]
   15ec0:	ldr	r1, [sp, #12]
   15ec4:	ldr	r1, [r1, #40]	; 0x28
   15ec8:	cmp	r0, r1
   15ecc:	bcc	15ee4 <__assert_fail@plt+0x470c>
   15ed0:	ldr	r0, [sp, #12]
   15ed4:	ldr	r0, [r0, #40]	; 0x28
   15ed8:	movw	r1, #0
   15edc:	cmp	r1, r0
   15ee0:	bne	15ef0 <__assert_fail@plt+0x4718>
   15ee4:	ldr	r0, [sp, #4]
   15ee8:	ldr	r1, [sp, #12]
   15eec:	str	r0, [r1, #40]	; 0x28
   15ef0:	b	15ef4 <__assert_fail@plt+0x471c>
   15ef4:	ldr	r0, [sp, #12]
   15ef8:	ldr	r0, [r0, #36]	; 0x24
   15efc:	movw	r1, #0
   15f00:	cmp	r1, r0
   15f04:	beq	15f20 <__assert_fail@plt+0x4748>
   15f08:	ldr	r0, [sp, #12]
   15f0c:	ldr	r0, [r0, #40]	; 0x28
   15f10:	ldr	r1, [sp, #12]
   15f14:	ldr	r1, [r1, #36]	; 0x24
   15f18:	cmp	r0, r1
   15f1c:	bhi	15f58 <__assert_fail@plt+0x4780>
   15f20:	ldrb	r0, [sp, #11]
   15f24:	tst	r0, #1
   15f28:	beq	15f48 <__assert_fail@plt+0x4770>
   15f2c:	ldr	r0, [sp, #4]
   15f30:	cmn	r0, #1
   15f34:	bcs	15f44 <__assert_fail@plt+0x476c>
   15f38:	ldr	r0, [sp, #4]
   15f3c:	add	r0, r0, #1
   15f40:	str	r0, [sp, #4]
   15f44:	b	15f54 <__assert_fail@plt+0x477c>
   15f48:	ldr	r0, [sp, #4]
   15f4c:	lsr	r0, r0, #1
   15f50:	str	r0, [sp, #4]
   15f54:	b	15fe4 <__assert_fail@plt+0x480c>
   15f58:	ldr	r0, [sp, #12]
   15f5c:	ldr	r1, [r0, #36]	; 0x24
   15f60:	ldr	r0, [r0, #40]	; 0x28
   15f64:	sub	r0, r0, r1
   15f68:	lsr	r0, r0, #1
   15f6c:	str	r0, [sp]
   15f70:	ldrb	r0, [sp, #11]
   15f74:	tst	r0, #1
   15f78:	beq	15fac <__assert_fail@plt+0x47d4>
   15f7c:	ldr	r0, [sp]
   15f80:	cmp	r0, #0
   15f84:	beq	15f9c <__assert_fail@plt+0x47c4>
   15f88:	ldr	r0, [sp]
   15f8c:	ldr	r1, [sp, #4]
   15f90:	add	r0, r1, r0
   15f94:	str	r0, [sp, #4]
   15f98:	b	15fa8 <__assert_fail@plt+0x47d0>
   15f9c:	ldr	r0, [sp, #4]
   15fa0:	add	r0, r0, #1
   15fa4:	str	r0, [sp, #4]
   15fa8:	b	15fe0 <__assert_fail@plt+0x4808>
   15fac:	ldr	r0, [sp]
   15fb0:	cmp	r0, #0
   15fb4:	beq	15fcc <__assert_fail@plt+0x47f4>
   15fb8:	ldr	r0, [sp]
   15fbc:	ldr	r1, [sp, #4]
   15fc0:	sub	r0, r1, r0
   15fc4:	str	r0, [sp, #4]
   15fc8:	b	15fdc <__assert_fail@plt+0x4804>
   15fcc:	ldr	r0, [sp, #4]
   15fd0:	mvn	r1, #0
   15fd4:	add	r0, r0, r1
   15fd8:	str	r0, [sp, #4]
   15fdc:	b	15fe0 <__assert_fail@plt+0x4808>
   15fe0:	b	15fe4 <__assert_fail@plt+0x480c>
   15fe4:	ldr	r0, [sp, #16]
   15fe8:	ldr	r0, [r0, #28]
   15fec:	cmp	r0, #0
   15ff0:	beq	1601c <__assert_fail@plt+0x4844>
   15ff4:	ldr	r0, [sp, #4]
   15ff8:	ldr	r1, [sp, #16]
   15ffc:	ldr	r1, [r1, #28]
   16000:	add	r1, r1, #1
   16004:	cmp	r0, r1
   16008:	bhi	1601c <__assert_fail@plt+0x4844>
   1600c:	ldr	r0, [sp, #16]
   16010:	ldr	r0, [r0, #28]
   16014:	add	r0, r0, #1
   16018:	str	r0, [sp, #4]
   1601c:	ldr	r0, [sp, #4]
   16020:	movw	r1, #0
   16024:	cmp	r1, r0
   16028:	bne	16034 <__assert_fail@plt+0x485c>
   1602c:	movw	r0, #1
   16030:	str	r0, [sp, #4]
   16034:	ldr	r0, [sp, #4]
   16038:	add	sp, sp, #20
   1603c:	bx	lr
   16040:	sub	sp, sp, #8
   16044:	str	r0, [sp, #4]
   16048:	str	r1, [sp]
   1604c:	ldr	r0, [sp, #4]
   16050:	ldr	r0, [r0, #28]
   16054:	ldr	r1, [sp]
   16058:	str	r0, [r1]
   1605c:	ldr	r0, [sp]
   16060:	ldr	r0, [r0, #20]
   16064:	ldr	r1, [sp]
   16068:	str	r0, [r1, #16]
   1606c:	ldr	r0, [sp]
   16070:	movw	r1, #0
   16074:	str	r1, [r0, #28]
   16078:	ldr	r0, [sp]
   1607c:	mvn	r1, #0
   16080:	str	r1, [r0, #32]
   16084:	add	sp, sp, #8
   16088:	bx	lr
   1608c:	sub	sp, sp, #16
   16090:	str	r0, [sp, #8]
   16094:	str	r1, [sp, #4]
   16098:	str	r2, [sp]
   1609c:	ldr	r0, [sp, #8]
   160a0:	cmp	r0, #0
   160a4:	bne	160e8 <__assert_fail@plt+0x4910>
   160a8:	ldr	r0, [sp, #4]
   160ac:	ldr	r0, [r0, #40]	; 0x28
   160b0:	cmp	r0, #0
   160b4:	beq	160e8 <__assert_fail@plt+0x4910>
   160b8:	ldr	r0, [sp]
   160bc:	ldr	r0, [r0]
   160c0:	ldr	r1, [sp, #4]
   160c4:	ldr	r1, [r1, #28]
   160c8:	sub	r0, r0, r1
   160cc:	ldr	r1, [sp, #4]
   160d0:	ldr	r1, [r1, #40]	; 0x28
   160d4:	cmp	r0, r1
   160d8:	bne	160e8 <__assert_fail@plt+0x4910>
   160dc:	movw	r0, #1
   160e0:	str	r0, [sp, #12]
   160e4:	b	1610c <__assert_fail@plt+0x4934>
   160e8:	ldr	r0, [sp]
   160ec:	ldr	r0, [r0]
   160f0:	ldr	r1, [sp, #4]
   160f4:	ldr	r1, [r1, #16]
   160f8:	cmp	r0, r1
   160fc:	movw	r0, #0
   16100:	moveq	r0, #1
   16104:	and	r0, r0, #1
   16108:	str	r0, [sp, #12]
   1610c:	ldr	r0, [sp, #12]
   16110:	add	sp, sp, #16
   16114:	bx	lr
   16118:	push	{fp, lr}
   1611c:	mov	fp, sp
   16120:	sub	sp, sp, #8
   16124:	movw	r0, #0
   16128:	bl	114d8 <sysconf@plt>
   1612c:	str	r0, [sp]
   16130:	ldr	r0, [sp]
   16134:	cmp	r0, #0
   16138:	ble	16148 <__assert_fail@plt+0x4970>
   1613c:	ldr	r0, [sp]
   16140:	str	r0, [sp, #4]
   16144:	b	16150 <__assert_fail@plt+0x4978>
   16148:	ldr	r0, [pc, #12]	; 1615c <__assert_fail@plt+0x4984>
   1614c:	str	r0, [sp, #4]
   16150:	ldr	r0, [sp, #4]
   16154:	mov	sp, fp
   16158:	pop	{fp, pc}
   1615c:	svcvc	0x00ffffff
   16160:	push	{fp, lr}
   16164:	mov	fp, sp
   16168:	sub	sp, sp, #8
   1616c:	movw	r0, #0
   16170:	str	r0, [sp, #4]
   16174:	movw	r0, #20924	; 0x51bc
   16178:	movt	r0, #3
   1617c:	ldr	r0, [r0]
   16180:	str	r0, [sp]
   16184:	ldr	r0, [sp]
   16188:	ldr	r0, [r0]
   1618c:	movw	r1, #0
   16190:	cmp	r0, r1
   16194:	beq	161c0 <__assert_fail@plt+0x49e8>
   16198:	ldr	r0, [sp]
   1619c:	add	r1, r0, #4
   161a0:	str	r1, [sp]
   161a4:	ldr	r0, [r0]
   161a8:	bl	11634 <strlen@plt>
   161ac:	add	r0, r0, #1
   161b0:	ldr	r1, [sp, #4]
   161b4:	add	r0, r1, r0
   161b8:	str	r0, [sp, #4]
   161bc:	b	16184 <__assert_fail@plt+0x49ac>
   161c0:	ldr	r0, [sp, #4]
   161c4:	mov	sp, fp
   161c8:	pop	{fp, pc}
   161cc:	push	{fp, lr}
   161d0:	mov	fp, sp
   161d4:	sub	sp, sp, #16
   161d8:	str	r0, [sp, #8]
   161dc:	str	r1, [sp, #4]
   161e0:	bl	16160 <__assert_fail@plt+0x4988>
   161e4:	str	r0, [sp]
   161e8:	ldr	r0, [sp, #8]
   161ec:	movw	r1, #4096	; 0x1000
   161f0:	str	r1, [r0, #8]
   161f4:	bl	16118 <__assert_fail@plt+0x4940>
   161f8:	ldr	r1, [sp, #8]
   161fc:	str	r0, [r1, #4]
   16200:	ldr	r0, [sp, #8]
   16204:	movw	r1, #0
   16208:	str	r1, [r0]
   1620c:	ldr	r0, [sp]
   16210:	ldr	r1, [sp, #8]
   16214:	ldr	r1, [r1, #4]
   16218:	cmp	r0, r1
   1621c:	bls	1622c <__assert_fail@plt+0x4a54>
   16220:	movw	r0, #1
   16224:	str	r0, [fp, #-4]
   16228:	b	1631c <__assert_fail@plt+0x4b44>
   1622c:	ldr	r0, [sp, #4]
   16230:	ldr	r1, [sp]
   16234:	add	r0, r0, r1
   16238:	ldr	r1, [sp, #8]
   1623c:	ldr	r1, [r1, #4]
   16240:	cmp	r0, r1
   16244:	bcc	16254 <__assert_fail@plt+0x4a7c>
   16248:	movw	r0, #2
   1624c:	str	r0, [fp, #-4]
   16250:	b	1631c <__assert_fail@plt+0x4b44>
   16254:	ldr	r0, [sp]
   16258:	ldr	r1, [sp, #8]
   1625c:	ldr	r2, [r1, #4]
   16260:	sub	r0, r2, r0
   16264:	str	r0, [r1, #4]
   16268:	ldr	r0, [sp, #4]
   1626c:	ldr	r1, [sp, #8]
   16270:	ldr	r2, [r1, #4]
   16274:	sub	r0, r2, r0
   16278:	str	r0, [r1, #4]
   1627c:	b	16280 <__assert_fail@plt+0x4aa8>
   16280:	ldr	r0, [sp, #8]
   16284:	ldr	r0, [r0, #4]
   16288:	lsr	r0, r0, #2
   1628c:	sub	r0, r0, #2
   16290:	ldr	r1, [sp, #8]
   16294:	str	r0, [r1, #16]
   16298:	ldr	r0, [sp, #8]
   1629c:	ldr	r0, [r0, #16]
   162a0:	cmp	r0, #0
   162a4:	bls	162ac <__assert_fail@plt+0x4ad4>
   162a8:	b	162cc <__assert_fail@plt+0x4af4>
   162ac:	movw	r0, #16051	; 0x3eb3
   162b0:	movt	r0, #2
   162b4:	movw	r1, #15665	; 0x3d31
   162b8:	movt	r1, #2
   162bc:	movw	r2, #518	; 0x206
   162c0:	movw	r3, #16074	; 0x3eca
   162c4:	movt	r3, #2
   162c8:	bl	117d8 <__assert_fail@plt>
   162cc:	ldr	r0, [sp, #8]
   162d0:	movw	r1, #0
   162d4:	str	r1, [r0, #20]
   162d8:	ldr	r0, [sp, #8]
   162dc:	str	r1, [r0, #24]
   162e0:	ldr	r0, [sp, #8]
   162e4:	str	r1, [r0, #28]
   162e8:	ldr	r0, [sp, #8]
   162ec:	movw	r2, #25384	; 0x6328
   162f0:	movt	r2, #1
   162f4:	str	r2, [r0, #32]
   162f8:	ldr	r0, [sp, #8]
   162fc:	str	r1, [r0, #36]	; 0x24
   16300:	ldr	r0, [sp, #8]
   16304:	str	r1, [r0, #40]	; 0x28
   16308:	ldr	r0, [sp, #8]
   1630c:	ldr	r0, [r0, #4]
   16310:	ldr	r2, [sp, #8]
   16314:	str	r0, [r2, #12]
   16318:	str	r1, [fp, #-4]
   1631c:	ldr	r0, [fp, #-4]
   16320:	mov	sp, fp
   16324:	pop	{fp, pc}
   16328:	sub	sp, sp, #16
   1632c:	str	r0, [sp, #12]
   16330:	str	r1, [sp, #8]
   16334:	str	r2, [sp, #4]
   16338:	str	r3, [sp]
   1633c:	movw	r0, #0
   16340:	add	sp, sp, #16
   16344:	bx	lr
   16348:	sub	sp, sp, #4
   1634c:	ldr	r1, [pc, #100]	; 163b8 <__assert_fail@plt+0x4be0>
   16350:	str	r0, [sp]
   16354:	ldr	r0, [sp]
   16358:	ldr	r0, [r0, #4]
   1635c:	cmp	r1, r0
   16360:	bls	16378 <__assert_fail@plt+0x4ba0>
   16364:	ldr	r0, [sp]
   16368:	ldr	r0, [r0, #4]
   1636c:	ldr	r1, [sp]
   16370:	str	r0, [r1, #12]
   16374:	b	163b0 <__assert_fail@plt+0x4bd8>
   16378:	ldr	r0, [pc, #56]	; 163b8 <__assert_fail@plt+0x4be0>
   1637c:	ldr	r1, [sp]
   16380:	ldr	r1, [r1, #8]
   16384:	cmp	r0, r1
   16388:	bcs	163a0 <__assert_fail@plt+0x4bc8>
   1638c:	ldr	r0, [sp]
   16390:	ldr	r0, [r0, #8]
   16394:	ldr	r1, [sp]
   16398:	str	r0, [r1, #12]
   1639c:	b	163ac <__assert_fail@plt+0x4bd4>
   163a0:	ldr	r0, [pc, #16]	; 163b8 <__assert_fail@plt+0x4be0>
   163a4:	ldr	r1, [sp]
   163a8:	str	r0, [r1, #12]
   163ac:	b	163b0 <__assert_fail@plt+0x4bd8>
   163b0:	add	sp, sp, #4
   163b4:	bx	lr
   163b8:	andeq	r0, r2, r0
   163bc:	push	{fp, lr}
   163c0:	mov	fp, sp
   163c4:	sub	sp, sp, #16
   163c8:	ldr	r3, [pc, #196]	; 16494 <__assert_fail@plt+0x4cbc>
   163cc:	str	r0, [fp, #-4]
   163d0:	str	r1, [sp, #8]
   163d4:	str	r2, [sp, #4]
   163d8:	ldr	r0, [sp, #8]
   163dc:	movw	r1, #0
   163e0:	str	r1, [r0]
   163e4:	ldr	r0, [sp, #8]
   163e8:	str	r1, [r0, #16]
   163ec:	ldr	r0, [sp, #8]
   163f0:	str	r1, [r0, #4]
   163f4:	ldr	r0, [sp, #8]
   163f8:	str	r1, [r0, #8]
   163fc:	ldr	r0, [sp, #8]
   16400:	str	r1, [r0, #36]	; 0x24
   16404:	ldr	r0, [sp, #8]
   16408:	str	r1, [r0, #40]	; 0x28
   1640c:	ldr	r0, [fp, #-4]
   16410:	ldr	r0, [r0, #12]
   16414:	cmp	r0, r3
   16418:	bhi	16420 <__assert_fail@plt+0x4c48>
   1641c:	b	16440 <__assert_fail@plt+0x4c68>
   16420:	movw	r0, #16149	; 0x3f15
   16424:	movt	r0, #2
   16428:	movw	r1, #15665	; 0x3d31
   1642c:	movt	r1, #2
   16430:	movw	r2, #572	; 0x23c
   16434:	movw	r3, #16184	; 0x3f38
   16438:	movt	r3, #2
   1643c:	bl	117d8 <__assert_fail@plt>
   16440:	ldr	r0, [fp, #-4]
   16444:	ldr	r0, [r0, #12]
   16448:	add	r0, r0, #1
   1644c:	bl	1c09c <__assert_fail@plt+0xa8c4>
   16450:	ldr	r1, [sp, #8]
   16454:	str	r0, [r1, #12]
   16458:	ldr	r0, [sp, #8]
   1645c:	movw	r1, #0
   16460:	str	r1, [r0, #20]
   16464:	ldr	r0, [sp, #8]
   16468:	str	r1, [r0, #16]
   1646c:	ldr	r0, [sp, #8]
   16470:	str	r1, [r0, #28]
   16474:	ldr	r0, [sp, #8]
   16478:	mvn	r1, #0
   1647c:	str	r1, [r0, #32]
   16480:	ldr	r0, [sp, #4]
   16484:	ldr	r1, [sp, #8]
   16488:	str	r0, [r1, #24]
   1648c:	mov	sp, fp
   16490:	pop	{fp, pc}
   16494:	svcvc	0x00fff7ff
   16498:	push	{fp, lr}
   1649c:	mov	fp, sp
   164a0:	sub	sp, sp, #16
   164a4:	str	r0, [fp, #-4]
   164a8:	movw	r0, #0
   164ac:	str	r0, [sp, #4]
   164b0:	str	r0, [sp, #8]
   164b4:	ldr	r0, [fp, #-4]
   164b8:	ldr	r0, [r0]
   164bc:	movw	r1, #0
   164c0:	cmp	r0, r1
   164c4:	beq	164fc <__assert_fail@plt+0x4d24>
   164c8:	ldr	r0, [sp, #4]
   164cc:	add	r0, r0, #1
   164d0:	str	r0, [sp, #4]
   164d4:	ldr	r0, [fp, #-4]
   164d8:	ldr	r0, [r0]
   164dc:	bl	11634 <strlen@plt>
   164e0:	ldr	r1, [sp, #8]
   164e4:	add	r0, r1, r0
   164e8:	str	r0, [sp, #8]
   164ec:	ldr	r0, [fp, #-4]
   164f0:	add	r0, r0, #4
   164f4:	str	r0, [fp, #-4]
   164f8:	b	164b4 <__assert_fail@plt+0x4cdc>
   164fc:	ldr	r1, [sp, #4]
   16500:	movw	r0, #16269	; 0x3f8d
   16504:	movt	r0, #2
   16508:	bl	1654c <__assert_fail@plt+0x4d74>
   1650c:	cmp	r0, #0
   16510:	movw	r0, #1
   16514:	str	r0, [sp]
   16518:	bne	1653c <__assert_fail@plt+0x4d64>
   1651c:	ldr	r1, [sp, #8]
   16520:	movw	r0, #16306	; 0x3fb2
   16524:	movt	r0, #2
   16528:	bl	1654c <__assert_fail@plt+0x4d74>
   1652c:	cmp	r0, #0
   16530:	movw	r0, #0
   16534:	movne	r0, #1
   16538:	str	r0, [sp]
   1653c:	ldr	r0, [sp]
   16540:	and	r0, r0, #1
   16544:	mov	sp, fp
   16548:	pop	{fp, pc}
   1654c:	push	{fp, lr}
   16550:	mov	fp, sp
   16554:	sub	sp, sp, #40	; 0x28
   16558:	str	r0, [fp, #-8]
   1655c:	str	r1, [fp, #-12]
   16560:	ldr	r0, [fp, #-8]
   16564:	bl	115b0 <getenv@plt>
   16568:	str	r0, [fp, #-16]
   1656c:	ldr	r0, [fp, #-16]
   16570:	movw	r1, #0
   16574:	cmp	r0, r1
   16578:	beq	165f8 <__assert_fail@plt+0x4e20>
   1657c:	ldr	r0, [fp, #-16]
   16580:	add	r1, sp, #20
   16584:	movw	r2, #10
   16588:	add	r3, sp, #16
   1658c:	movw	ip, #0
   16590:	str	ip, [sp]
   16594:	bl	1ee24 <__assert_fail@plt+0xd64c>
   16598:	cmp	r0, #0
   1659c:	bne	165c0 <__assert_fail@plt+0x4de8>
   165a0:	ldr	r0, [fp, #-12]
   165a4:	ldr	r1, [sp, #16]
   165a8:	cmp	r0, r1
   165ac:	bls	165bc <__assert_fail@plt+0x4de4>
   165b0:	movw	r0, #1
   165b4:	str	r0, [fp, #-4]
   165b8:	b	16600 <__assert_fail@plt+0x4e28>
   165bc:	b	165f4 <__assert_fail@plt+0x4e1c>
   165c0:	bl	11664 <__errno_location@plt>
   165c4:	ldr	r1, [r0]
   165c8:	movw	r0, #16479	; 0x405f
   165cc:	movt	r0, #2
   165d0:	str	r1, [sp, #12]
   165d4:	bl	1161c <gettext@plt>
   165d8:	ldr	r3, [fp, #-8]
   165dc:	movw	r1, #1
   165e0:	str	r0, [sp, #8]
   165e4:	mov	r0, r1
   165e8:	ldr	r1, [sp, #12]
   165ec:	ldr	r2, [sp, #8]
   165f0:	bl	1158c <error@plt>
   165f4:	b	165f8 <__assert_fail@plt+0x4e20>
   165f8:	movw	r0, #0
   165fc:	str	r0, [fp, #-4]
   16600:	ldr	r0, [fp, #-4]
   16604:	mov	sp, fp
   16608:	pop	{fp, pc}
   1660c:	push	{fp, lr}
   16610:	mov	fp, sp
   16614:	sub	sp, sp, #24
   16618:	bl	1669c <__assert_fail@plt+0x4ec4>
   1661c:	ldr	r1, [pc, #116]	; 16698 <__assert_fail@plt+0x4ec0>
   16620:	str	r0, [fp, #-4]
   16624:	movw	r0, #0
   16628:	str	r0, [sp, #8]
   1662c:	str	r0, [sp, #16]
   16630:	str	r0, [sp, #12]
   16634:	ldr	r0, [fp, #-4]
   16638:	cmp	r0, r1
   1663c:	bge	1664c <__assert_fail@plt+0x4e74>
   16640:	ldr	r0, [fp, #-4]
   16644:	add	r0, r0, #1
   16648:	str	r0, [fp, #-4]
   1664c:	ldr	r1, [fp, #-4]
   16650:	add	r0, sp, #8
   16654:	movw	r2, #0
   16658:	str	r0, [sp, #4]
   1665c:	mov	r0, r2
   16660:	movw	r2, #26856	; 0x68e8
   16664:	movt	r2, #1
   16668:	ldr	r3, [sp, #4]
   1666c:	bl	16744 <__assert_fail@plt+0x4f6c>
   16670:	ldr	r1, [sp, #8]
   16674:	movw	r2, #21144	; 0x5298
   16678:	movt	r2, #3
   1667c:	str	r1, [r2]
   16680:	ldr	r1, [sp, #12]
   16684:	movw	r2, #21148	; 0x529c
   16688:	movt	r2, #3
   1668c:	str	r1, [r2]
   16690:	mov	sp, fp
   16694:	pop	{fp, pc}
   16698:	svcvc	0x00ffffff
   1669c:	push	{fp, lr}
   166a0:	mov	fp, sp
   166a4:	sub	sp, sp, #24
   166a8:	bl	16ccc <__assert_fail@plt+0x54f4>
   166ac:	str	r0, [fp, #-8]
   166b0:	ldr	r0, [fp, #-8]
   166b4:	cmp	r0, #0
   166b8:	blt	166c8 <__assert_fail@plt+0x4ef0>
   166bc:	ldr	r0, [fp, #-8]
   166c0:	str	r0, [fp, #-4]
   166c4:	b	16738 <__assert_fail@plt+0x4f60>
   166c8:	movw	r0, #4
   166cc:	bl	114d8 <sysconf@plt>
   166d0:	str	r0, [fp, #-8]
   166d4:	ldr	r0, [fp, #-8]
   166d8:	cmn	r0, #1
   166dc:	bne	166e8 <__assert_fail@plt+0x4f10>
   166e0:	movw	r0, #20
   166e4:	str	r0, [fp, #-8]
   166e8:	movw	r0, #7
   166ec:	mov	r1, sp
   166f0:	bl	114f0 <getrlimit64@plt>
   166f4:	movw	r1, #0
   166f8:	cmp	r1, r0
   166fc:	bne	16730 <__assert_fail@plt+0x4f58>
   16700:	ldr	r0, [sp]
   16704:	ldr	r1, [sp, #4]
   16708:	and	r0, r0, r1
   1670c:	cmn	r0, #1
   16710:	bne	16724 <__assert_fail@plt+0x4f4c>
   16714:	b	16718 <__assert_fail@plt+0x4f40>
   16718:	ldr	r0, [fp, #-8]
   1671c:	str	r0, [fp, #-4]
   16720:	b	16738 <__assert_fail@plt+0x4f60>
   16724:	ldr	r0, [sp]
   16728:	str	r0, [fp, #-4]
   1672c:	b	16738 <__assert_fail@plt+0x4f60>
   16730:	ldr	r0, [fp, #-8]
   16734:	str	r0, [fp, #-4]
   16738:	ldr	r0, [fp, #-4]
   1673c:	mov	sp, fp
   16740:	pop	{fp, pc}
   16744:	push	{r4, r5, fp, lr}
   16748:	add	fp, sp, #8
   1674c:	sub	sp, sp, #552	; 0x228
   16750:	str	r0, [fp, #-16]
   16754:	str	r1, [fp, #-20]	; 0xffffffec
   16758:	str	r2, [fp, #-24]	; 0xffffffe8
   1675c:	str	r3, [fp, #-28]	; 0xffffffe4
   16760:	movw	r0, #0
   16764:	str	r0, [sp, #16]
   16768:	ldr	r0, [fp, #-16]
   1676c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16770:	cmp	r0, r1
   16774:	bge	168d4 <__assert_fail@plt+0x50fc>
   16778:	ldr	r0, [fp, #-20]	; 0xffffffec
   1677c:	ldr	r1, [fp, #-16]
   16780:	sub	r0, r0, r1
   16784:	str	r0, [sp, #8]
   16788:	ldr	r0, [sp, #8]
   1678c:	cmp	r0, #64	; 0x40
   16790:	ble	1679c <__assert_fail@plt+0x4fc4>
   16794:	movw	r0, #64	; 0x40
   16798:	str	r0, [sp, #8]
   1679c:	movw	r0, #0
   167a0:	str	r0, [sp, #12]
   167a4:	ldr	r0, [sp, #12]
   167a8:	ldr	r1, [sp, #8]
   167ac:	cmp	r0, r1
   167b0:	bge	167fc <__assert_fail@plt+0x5024>
   167b4:	ldr	r0, [sp, #12]
   167b8:	add	r1, sp, #20
   167bc:	add	r0, r1, r0, lsl #3
   167c0:	mov	r2, #5
   167c4:	strh	r2, [r0, #4]
   167c8:	ldr	r0, [sp, #12]
   167cc:	add	r0, r1, r0, lsl #3
   167d0:	mov	r2, #0
   167d4:	strh	r2, [r0, #6]
   167d8:	ldr	r0, [fp, #-16]
   167dc:	ldr	r2, [sp, #12]
   167e0:	add	r0, r0, r2
   167e4:	add	r1, r1, r2, lsl #3
   167e8:	str	r0, [r1]
   167ec:	ldr	r0, [sp, #12]
   167f0:	add	r0, r0, #1
   167f4:	str	r0, [sp, #12]
   167f8:	b	167a4 <__assert_fail@plt+0x4fcc>
   167fc:	add	r0, sp, #20
   16800:	ldr	r1, [sp, #8]
   16804:	movw	r2, #0
   16808:	bl	1152c <poll@plt>
   1680c:	str	r0, [sp, #16]
   16810:	ldr	r0, [sp, #16]
   16814:	mvn	r1, #0
   16818:	cmp	r1, r0
   1681c:	bne	1682c <__assert_fail@plt+0x5054>
   16820:	mvn	r0, #0
   16824:	str	r0, [fp, #-12]
   16828:	b	168dc <__assert_fail@plt+0x5104>
   1682c:	movw	r0, #0
   16830:	str	r0, [sp, #4]
   16834:	ldr	r0, [sp, #4]
   16838:	ldr	r1, [sp, #8]
   1683c:	cmp	r0, r1
   16840:	bge	168bc <__assert_fail@plt+0x50e4>
   16844:	ldr	r0, [sp, #4]
   16848:	add	r1, sp, #20
   1684c:	add	r0, r1, r0, lsl #3
   16850:	ldrsh	r0, [r0, #6]
   16854:	cmp	r0, #32
   16858:	beq	168a8 <__assert_fail@plt+0x50d0>
   1685c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16860:	ldr	r1, [sp, #4]
   16864:	add	r2, sp, #20
   16868:	add	r1, r2, r1, lsl #3
   1686c:	ldr	r1, [r1]
   16870:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16874:	str	r0, [sp]
   16878:	mov	r0, r1
   1687c:	mov	r1, r2
   16880:	ldr	r2, [sp]
   16884:	blx	r2
   16888:	str	r0, [sp, #16]
   1688c:	movw	r1, #0
   16890:	cmp	r1, r0
   16894:	beq	168a4 <__assert_fail@plt+0x50cc>
   16898:	ldr	r0, [sp, #16]
   1689c:	str	r0, [fp, #-12]
   168a0:	b	168dc <__assert_fail@plt+0x5104>
   168a4:	b	168a8 <__assert_fail@plt+0x50d0>
   168a8:	b	168ac <__assert_fail@plt+0x50d4>
   168ac:	ldr	r0, [sp, #4]
   168b0:	add	r0, r0, #1
   168b4:	str	r0, [sp, #4]
   168b8:	b	16834 <__assert_fail@plt+0x505c>
   168bc:	b	168c0 <__assert_fail@plt+0x50e8>
   168c0:	ldr	r0, [sp, #8]
   168c4:	ldr	r1, [fp, #-16]
   168c8:	add	r0, r1, r0
   168cc:	str	r0, [fp, #-16]
   168d0:	b	16768 <__assert_fail@plt+0x4f90>
   168d4:	movw	r0, #0
   168d8:	str	r0, [fp, #-12]
   168dc:	ldr	r0, [fp, #-12]
   168e0:	sub	sp, fp, #8
   168e4:	pop	{r4, r5, fp, pc}
   168e8:	push	{fp, lr}
   168ec:	mov	fp, sp
   168f0:	sub	sp, sp, #24
   168f4:	str	r0, [fp, #-8]
   168f8:	str	r1, [sp, #12]
   168fc:	ldr	r0, [fp, #-8]
   16900:	bl	16e44 <__assert_fail@plt+0x566c>
   16904:	cmp	r0, #0
   16908:	beq	16918 <__assert_fail@plt+0x5140>
   1690c:	movw	r0, #0
   16910:	str	r0, [fp, #-4]
   16914:	b	169a8 <__assert_fail@plt+0x51d0>
   16918:	ldr	r0, [sp, #12]
   1691c:	str	r0, [sp, #8]
   16920:	ldr	r0, [sp, #8]
   16924:	ldr	r1, [r0]
   16928:	ldr	r0, [r0, #4]
   1692c:	add	r0, r0, #1
   16930:	lsl	r0, r0, #2
   16934:	ldr	r2, [sp, #8]
   16938:	add	r2, r2, #8
   1693c:	str	r0, [sp]
   16940:	mov	r0, r1
   16944:	ldr	r1, [sp]
   16948:	bl	17264 <__assert_fail@plt+0x5a8c>
   1694c:	str	r0, [sp, #4]
   16950:	ldr	r0, [sp, #4]
   16954:	movw	r1, #0
   16958:	cmp	r0, r1
   1695c:	beq	169a0 <__assert_fail@plt+0x51c8>
   16960:	ldr	r0, [sp, #4]
   16964:	ldr	r1, [sp, #8]
   16968:	str	r0, [r1]
   1696c:	ldr	r0, [fp, #-8]
   16970:	ldr	r1, [sp, #8]
   16974:	ldr	r2, [r1]
   16978:	ldr	r1, [r1, #4]
   1697c:	add	r1, r2, r1, lsl #2
   16980:	str	r0, [r1]
   16984:	ldr	r0, [sp, #8]
   16988:	ldr	r1, [r0, #4]
   1698c:	add	r1, r1, #1
   16990:	str	r1, [r0, #4]
   16994:	movw	r0, #0
   16998:	str	r0, [fp, #-4]
   1699c:	b	169a8 <__assert_fail@plt+0x51d0>
   169a0:	mvn	r0, #0
   169a4:	str	r0, [fp, #-4]
   169a8:	ldr	r0, [fp, #-4]
   169ac:	mov	sp, fp
   169b0:	pop	{fp, pc}
   169b4:	sub	sp, sp, #8
   169b8:	push	{fp, lr}
   169bc:	mov	fp, sp
   169c0:	sub	sp, sp, #24
   169c4:	str	r3, [fp, #12]
   169c8:	str	r2, [fp, #8]
   169cc:	str	r0, [fp, #-4]
   169d0:	str	r1, [fp, #-8]
   169d4:	movw	r0, #0
   169d8:	str	r0, [sp, #8]
   169dc:	ldr	r0, [fp, #-8]
   169e0:	and	r0, r0, #64	; 0x40
   169e4:	cmp	r0, #0
   169e8:	beq	16a10 <__assert_fail@plt+0x5238>
   169ec:	add	r0, sp, #4
   169f0:	mov	r1, r0
   169f4:	add	r2, fp, #8
   169f8:	str	r2, [r1]
   169fc:	ldr	r1, [sp, #4]
   16a00:	add	r2, r1, #4
   16a04:	str	r2, [sp, #4]
   16a08:	ldr	r1, [r1]
   16a0c:	str	r1, [sp, #8]
   16a10:	movw	r0, #21153	; 0x52a1
   16a14:	movt	r0, #3
   16a18:	ldrb	r0, [r0]
   16a1c:	tst	r0, #1
   16a20:	bne	16a48 <__assert_fail@plt+0x5270>
   16a24:	bl	16aa4 <__assert_fail@plt+0x52cc>
   16a28:	and	r0, r0, #1
   16a2c:	movw	r1, #21152	; 0x52a0
   16a30:	movt	r1, #3
   16a34:	strb	r0, [r1]
   16a38:	movw	r0, #21153	; 0x52a1
   16a3c:	movt	r0, #3
   16a40:	movw	r1, #1
   16a44:	strb	r1, [r0]
   16a48:	ldr	r0, [fp, #-4]
   16a4c:	ldr	r1, [fp, #-8]
   16a50:	orr	r1, r1, #524288	; 0x80000
   16a54:	ldr	r2, [sp, #8]
   16a58:	bl	17968 <__assert_fail@plt+0x6190>
   16a5c:	str	r0, [sp, #12]
   16a60:	ldr	r0, [sp, #12]
   16a64:	cmp	r0, #0
   16a68:	blt	16a90 <__assert_fail@plt+0x52b8>
   16a6c:	movw	r0, #21152	; 0x52a0
   16a70:	movt	r0, #3
   16a74:	ldrb	r0, [r0]
   16a78:	tst	r0, #1
   16a7c:	bne	16a90 <__assert_fail@plt+0x52b8>
   16a80:	ldr	r0, [sp, #12]
   16a84:	movw	r1, #1
   16a88:	and	r1, r1, #1
   16a8c:	bl	17494 <__assert_fail@plt+0x5cbc>
   16a90:	ldr	r0, [sp, #12]
   16a94:	mov	sp, fp
   16a98:	pop	{fp, lr}
   16a9c:	add	sp, sp, #8
   16aa0:	bx	lr
   16aa4:	push	{fp, lr}
   16aa8:	mov	fp, sp
   16aac:	sub	sp, sp, #8
   16ab0:	ldr	r1, [pc, #84]	; 16b0c <__assert_fail@plt+0x5334>
   16ab4:	movw	r0, #0
   16ab8:	strb	r0, [fp, #-1]
   16abc:	movw	r0, #18445	; 0x480d
   16ac0:	movt	r0, #2
   16ac4:	bl	17968 <__assert_fail@plt+0x6190>
   16ac8:	str	r0, [sp]
   16acc:	ldr	r0, [sp]
   16ad0:	cmp	r0, #0
   16ad4:	blt	16afc <__assert_fail@plt+0x5324>
   16ad8:	ldr	r0, [sp]
   16adc:	bl	16e44 <__assert_fail@plt+0x566c>
   16ae0:	cmp	r0, #0
   16ae4:	movw	r0, #0
   16ae8:	movne	r0, #1
   16aec:	and	r0, r0, #1
   16af0:	strb	r0, [fp, #-1]
   16af4:	ldr	r0, [sp]
   16af8:	bl	117c0 <close@plt>
   16afc:	ldrb	r0, [fp, #-1]
   16b00:	and	r0, r0, #1
   16b04:	mov	sp, fp
   16b08:	pop	{fp, pc}
   16b0c:	andeq	r0, r8, r0
   16b10:	push	{fp, lr}
   16b14:	mov	fp, sp
   16b18:	movw	r0, #21144	; 0x5298
   16b1c:	movt	r0, #3
   16b20:	ldr	r0, [r0]
   16b24:	bl	1fb14 <__assert_fail@plt+0xe33c>
   16b28:	movw	r0, #21144	; 0x5298
   16b2c:	movt	r0, #3
   16b30:	movw	r1, #0
   16b34:	str	r1, [r0]
   16b38:	movw	r0, #21148	; 0x529c
   16b3c:	movt	r0, #3
   16b40:	str	r1, [r0]
   16b44:	pop	{fp, pc}
   16b48:	push	{fp, lr}
   16b4c:	mov	fp, sp
   16b50:	sub	sp, sp, #8
   16b54:	movw	r0, #16540	; 0x409c
   16b58:	movt	r0, #2
   16b5c:	bl	115b0 <getenv@plt>
   16b60:	movw	r1, #0
   16b64:	cmp	r0, r1
   16b68:	beq	16b7c <__assert_fail@plt+0x53a4>
   16b6c:	movw	r0, #1
   16b70:	and	r0, r0, #1
   16b74:	strb	r0, [fp, #-1]
   16b78:	b	16b88 <__assert_fail@plt+0x53b0>
   16b7c:	movw	r0, #0
   16b80:	and	r0, r0, #1
   16b84:	strb	r0, [fp, #-1]
   16b88:	ldrb	r0, [fp, #-1]
   16b8c:	and	r0, r0, #1
   16b90:	mov	sp, fp
   16b94:	pop	{fp, pc}
   16b98:	push	{fp, lr}
   16b9c:	mov	fp, sp
   16ba0:	sub	sp, sp, #16
   16ba4:	movw	r0, #1
   16ba8:	str	r0, [fp, #-4]
   16bac:	movw	r0, #21144	; 0x5298
   16bb0:	movt	r0, #3
   16bb4:	ldr	r0, [r0]
   16bb8:	movw	r1, #21148	; 0x529c
   16bbc:	movt	r1, #3
   16bc0:	ldr	r1, [r1]
   16bc4:	bl	16c3c <__assert_fail@plt+0x5464>
   16bc8:	str	r0, [sp, #8]
   16bcc:	ldr	r0, [sp, #8]
   16bd0:	cmp	r0, #0
   16bd4:	blt	16c04 <__assert_fail@plt+0x542c>
   16bd8:	movw	r0, #0
   16bdc:	str	r0, [fp, #-4]
   16be0:	movw	r0, #16568	; 0x40b8
   16be4:	movt	r0, #2
   16be8:	bl	1161c <gettext@plt>
   16bec:	ldr	r3, [sp, #8]
   16bf0:	movw	r1, #0
   16bf4:	str	r0, [sp, #4]
   16bf8:	mov	r0, r1
   16bfc:	ldr	r2, [sp, #4]
   16c00:	bl	1158c <error@plt>
   16c04:	ldr	r0, [fp, #-4]
   16c08:	cmp	r0, #0
   16c0c:	beq	16c14 <__assert_fail@plt+0x543c>
   16c10:	b	16c34 <__assert_fail@plt+0x545c>
   16c14:	movw	r0, #16720	; 0x4150
   16c18:	movt	r0, #2
   16c1c:	movw	r1, #16729	; 0x4159
   16c20:	movt	r1, #2
   16c24:	movw	r2, #396	; 0x18c
   16c28:	movw	r3, #16738	; 0x4162
   16c2c:	movt	r3, #2
   16c30:	bl	117d8 <__assert_fail@plt>
   16c34:	mov	sp, fp
   16c38:	pop	{fp, pc}
   16c3c:	push	{fp, lr}
   16c40:	mov	fp, sp
   16c44:	sub	sp, sp, #40	; 0x28
   16c48:	str	r0, [fp, #-4]
   16c4c:	str	r1, [fp, #-8]
   16c50:	bl	1669c <__assert_fail@plt+0x4ec4>
   16c54:	ldr	r1, [pc, #108]	; 16cc8 <__assert_fail@plt+0x54f0>
   16c58:	str	r0, [sp, #12]
   16c5c:	ldr	r0, [sp, #12]
   16c60:	cmp	r0, r1
   16c64:	bge	16c74 <__assert_fail@plt+0x549c>
   16c68:	ldr	r0, [sp, #12]
   16c6c:	add	r0, r0, #1
   16c70:	str	r0, [sp, #12]
   16c74:	ldr	r0, [fp, #-4]
   16c78:	str	r0, [sp, #16]
   16c7c:	ldr	r0, [fp, #-8]
   16c80:	str	r0, [sp, #20]
   16c84:	movw	r0, #0
   16c88:	str	r0, [sp, #24]
   16c8c:	mvn	r1, #0
   16c90:	str	r1, [sp, #28]
   16c94:	ldr	r1, [sp, #12]
   16c98:	add	r2, sp, #16
   16c9c:	movw	r3, #28276	; 0x6e74
   16ca0:	movt	r3, #1
   16ca4:	str	r2, [sp, #8]
   16ca8:	mov	r2, r3
   16cac:	ldr	r3, [sp, #8]
   16cb0:	bl	16744 <__assert_fail@plt+0x4f6c>
   16cb4:	ldr	r1, [sp, #28]
   16cb8:	str	r0, [sp, #4]
   16cbc:	mov	r0, r1
   16cc0:	mov	sp, fp
   16cc4:	pop	{fp, pc}
   16cc8:	svcvc	0x00ffffff
   16ccc:	push	{fp, lr}
   16cd0:	mov	fp, sp
   16cd4:	sub	sp, sp, #40	; 0x28
   16cd8:	movw	r0, #16774	; 0x4186
   16cdc:	movt	r0, #2
   16ce0:	str	r0, [fp, #-8]
   16ce4:	mvn	r0, #0
   16ce8:	str	r0, [fp, #-12]
   16cec:	ldr	r0, [fp, #-8]
   16cf0:	bl	17870 <__assert_fail@plt+0x6098>
   16cf4:	str	r0, [fp, #-16]
   16cf8:	ldr	r0, [fp, #-16]
   16cfc:	movw	r1, #0
   16d00:	cmp	r0, r1
   16d04:	beq	16e30 <__assert_fail@plt+0x5658>
   16d08:	movw	r0, #0
   16d0c:	str	r0, [sp, #20]
   16d10:	bl	11664 <__errno_location@plt>
   16d14:	movw	r1, #0
   16d18:	str	r1, [r0]
   16d1c:	ldr	r0, [fp, #-16]
   16d20:	bl	1173c <readdir64@plt>
   16d24:	str	r0, [sp, #16]
   16d28:	ldr	r0, [sp, #16]
   16d2c:	movw	r1, #0
   16d30:	cmp	r1, r0
   16d34:	bne	16d94 <__assert_fail@plt+0x55bc>
   16d38:	bl	11664 <__errno_location@plt>
   16d3c:	ldr	r0, [r0]
   16d40:	cmp	r0, #0
   16d44:	beq	16d90 <__assert_fail@plt+0x55b8>
   16d48:	bl	11664 <__errno_location@plt>
   16d4c:	ldr	r1, [r0]
   16d50:	ldr	r2, [fp, #-8]
   16d54:	movw	r0, #0
   16d58:	movw	r3, #8
   16d5c:	str	r1, [sp, #8]
   16d60:	mov	r1, r3
   16d64:	bl	1afbc <__assert_fail@plt+0x97e4>
   16d68:	movw	r1, #0
   16d6c:	str	r0, [sp, #4]
   16d70:	mov	r0, r1
   16d74:	ldr	r1, [sp, #8]
   16d78:	movw	r2, #16907	; 0x420b
   16d7c:	movt	r2, #2
   16d80:	ldr	r3, [sp, #4]
   16d84:	bl	1158c <error@plt>
   16d88:	movw	r0, #0
   16d8c:	str	r0, [sp, #20]
   16d90:	b	16e0c <__assert_fail@plt+0x5634>
   16d94:	ldr	r0, [sp, #16]
   16d98:	ldrb	r0, [r0, #19]
   16d9c:	cmp	r0, #46	; 0x2e
   16da0:	bne	16dd4 <__assert_fail@plt+0x55fc>
   16da4:	ldr	r0, [sp, #16]
   16da8:	ldrb	r0, [r0, #20]
   16dac:	cmp	r0, #0
   16db0:	beq	16e08 <__assert_fail@plt+0x5630>
   16db4:	ldr	r0, [sp, #16]
   16db8:	ldrb	r0, [r0, #20]
   16dbc:	cmp	r0, #46	; 0x2e
   16dc0:	bne	16dd4 <__assert_fail@plt+0x55fc>
   16dc4:	ldr	r0, [sp, #16]
   16dc8:	ldrb	r0, [r0, #21]
   16dcc:	cmp	r0, #0
   16dd0:	beq	16e08 <__assert_fail@plt+0x5630>
   16dd4:	ldr	r0, [sp, #16]
   16dd8:	add	r0, r0, #19
   16ddc:	movw	r1, #0
   16de0:	bl	17018 <__assert_fail@plt+0x5840>
   16de4:	str	r0, [sp, #12]
   16de8:	ldr	r0, [sp, #12]
   16dec:	ldr	r1, [fp, #-12]
   16df0:	cmp	r0, r1
   16df4:	ble	16e00 <__assert_fail@plt+0x5628>
   16df8:	ldr	r0, [sp, #12]
   16dfc:	str	r0, [fp, #-12]
   16e00:	movw	r0, #1
   16e04:	str	r0, [sp, #20]
   16e08:	b	16d10 <__assert_fail@plt+0x5538>
   16e0c:	ldr	r0, [fp, #-16]
   16e10:	bl	117cc <closedir@plt>
   16e14:	ldr	r1, [sp, #20]
   16e18:	cmp	r1, #0
   16e1c:	beq	16e2c <__assert_fail@plt+0x5654>
   16e20:	ldr	r0, [fp, #-12]
   16e24:	str	r0, [fp, #-4]
   16e28:	b	16e38 <__assert_fail@plt+0x5660>
   16e2c:	b	16e30 <__assert_fail@plt+0x5658>
   16e30:	mvn	r0, #0
   16e34:	str	r0, [fp, #-4]
   16e38:	ldr	r0, [fp, #-4]
   16e3c:	mov	sp, fp
   16e40:	pop	{fp, pc}
   16e44:	push	{fp, lr}
   16e48:	mov	fp, sp
   16e4c:	sub	sp, sp, #8
   16e50:	str	r0, [sp, #4]
   16e54:	ldr	r0, [sp, #4]
   16e58:	movw	r1, #1
   16e5c:	bl	1f5ec <__assert_fail@plt+0xde14>
   16e60:	str	r0, [sp]
   16e64:	ldr	r0, [sp]
   16e68:	and	r0, r0, #1
   16e6c:	mov	sp, fp
   16e70:	pop	{fp, pc}
   16e74:	push	{fp, lr}
   16e78:	mov	fp, sp
   16e7c:	sub	sp, sp, #16
   16e80:	str	r0, [sp, #8]
   16e84:	str	r1, [sp, #4]
   16e88:	ldr	r0, [sp, #8]
   16e8c:	bl	16e44 <__assert_fail@plt+0x566c>
   16e90:	cmp	r0, #0
   16e94:	bne	16f38 <__assert_fail@plt+0x5760>
   16e98:	ldr	r0, [sp, #4]
   16e9c:	str	r0, [sp]
   16ea0:	ldr	r0, [sp]
   16ea4:	ldr	r0, [r0, #8]
   16ea8:	ldr	r1, [sp]
   16eac:	ldr	r1, [r1, #4]
   16eb0:	cmp	r0, r1
   16eb4:	bcs	16f20 <__assert_fail@plt+0x5748>
   16eb8:	ldr	r0, [sp]
   16ebc:	ldr	r1, [r0]
   16ec0:	ldr	r0, [r0, #8]
   16ec4:	add	r0, r1, r0, lsl #2
   16ec8:	ldr	r0, [r0]
   16ecc:	ldr	r1, [sp, #8]
   16ed0:	cmp	r0, r1
   16ed4:	bge	16eec <__assert_fail@plt+0x5714>
   16ed8:	ldr	r0, [sp]
   16edc:	ldr	r1, [r0, #8]
   16ee0:	add	r1, r1, #1
   16ee4:	str	r1, [r0, #8]
   16ee8:	b	16f1c <__assert_fail@plt+0x5744>
   16eec:	ldr	r0, [sp]
   16ef0:	ldr	r1, [r0]
   16ef4:	ldr	r0, [r0, #8]
   16ef8:	add	r0, r1, r0, lsl #2
   16efc:	ldr	r0, [r0]
   16f00:	ldr	r1, [sp, #8]
   16f04:	cmp	r0, r1
   16f08:	bne	16f18 <__assert_fail@plt+0x5740>
   16f0c:	movw	r0, #0
   16f10:	str	r0, [fp, #-4]
   16f14:	b	16f40 <__assert_fail@plt+0x5768>
   16f18:	b	16f20 <__assert_fail@plt+0x5748>
   16f1c:	b	16ea0 <__assert_fail@plt+0x56c8>
   16f20:	ldr	r0, [sp, #8]
   16f24:	ldr	r1, [sp]
   16f28:	str	r0, [r1, #12]
   16f2c:	mvn	r0, #0
   16f30:	str	r0, [fp, #-4]
   16f34:	b	16f40 <__assert_fail@plt+0x5768>
   16f38:	movw	r0, #0
   16f3c:	str	r0, [fp, #-4]
   16f40:	ldr	r0, [fp, #-4]
   16f44:	mov	sp, fp
   16f48:	pop	{fp, pc}
   16f4c:	push	{r4, r5, fp, lr}
   16f50:	add	fp, sp, #8
   16f54:	sub	sp, sp, #48	; 0x30
   16f58:	str	r0, [fp, #-12]
   16f5c:	movw	r0, #20944	; 0x51d0
   16f60:	movt	r0, #3
   16f64:	ldr	r0, [r0]
   16f68:	bl	1f9cc <__assert_fail@plt+0xe1f4>
   16f6c:	movw	r1, #20956	; 0x51dc
   16f70:	movt	r1, #3
   16f74:	ldr	r1, [r1]
   16f78:	ldr	r2, [fp, #-12]
   16f7c:	movw	r3, #20844	; 0x516c
   16f80:	movt	r3, #3
   16f84:	ldr	r3, [r3]
   16f88:	movw	ip, #16816	; 0x41b0
   16f8c:	movt	ip, #2
   16f90:	str	r0, [fp, #-16]
   16f94:	mov	r0, ip
   16f98:	str	r1, [fp, #-20]	; 0xffffffec
   16f9c:	str	r2, [fp, #-24]	; 0xffffffe8
   16fa0:	str	r3, [sp, #28]
   16fa4:	bl	1161c <gettext@plt>
   16fa8:	movw	r1, #16831	; 0x41bf
   16fac:	movt	r1, #2
   16fb0:	str	r0, [sp, #24]
   16fb4:	mov	r0, r1
   16fb8:	bl	1161c <gettext@plt>
   16fbc:	movw	r1, #16846	; 0x41ce
   16fc0:	movt	r1, #2
   16fc4:	str	r0, [sp, #20]
   16fc8:	mov	r0, r1
   16fcc:	bl	1161c <gettext@plt>
   16fd0:	ldr	r1, [fp, #-20]	; 0xffffffec
   16fd4:	str	r0, [sp, #16]
   16fd8:	mov	r0, r1
   16fdc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16fe0:	movw	r2, #16802	; 0x41a2
   16fe4:	movt	r2, #2
   16fe8:	ldr	r3, [sp, #28]
   16fec:	ldr	ip, [sp, #24]
   16ff0:	str	ip, [sp]
   16ff4:	ldr	lr, [sp, #20]
   16ff8:	str	lr, [sp, #4]
   16ffc:	ldr	r4, [sp, #16]
   17000:	str	r4, [sp, #8]
   17004:	movw	r5, #0
   17008:	str	r5, [sp, #12]
   1700c:	bl	1bf14 <__assert_fail@plt+0xa73c>
   17010:	sub	sp, fp, #8
   17014:	pop	{r4, r5, fp, pc}
   17018:	push	{fp, lr}
   1701c:	mov	fp, sp
   17020:	sub	sp, sp, #48	; 0x30
   17024:	str	r0, [fp, #-4]
   17028:	str	r1, [fp, #-8]
   1702c:	bl	11664 <__errno_location@plt>
   17030:	movw	r1, #0
   17034:	str	r1, [r0]
   17038:	ldr	r0, [fp, #-4]
   1703c:	sub	r1, fp, #16
   17040:	movw	r2, #10
   17044:	bl	1143c <strtol@plt>
   17048:	ldr	r1, [pc, #404]	; 171e4 <__assert_fail@plt+0x5a0c>
   1704c:	str	r0, [fp, #-12]
   17050:	ldr	r0, [fp, #-12]
   17054:	cmp	r1, r0
   17058:	beq	1706c <__assert_fail@plt+0x5894>
   1705c:	ldr	r0, [pc, #388]	; 171e8 <__assert_fail@plt+0x5a10>
   17060:	ldr	r1, [fp, #-12]
   17064:	cmp	r0, r1
   17068:	bne	170b4 <__assert_fail@plt+0x58dc>
   1706c:	bl	11664 <__errno_location@plt>
   17070:	ldr	r0, [r0]
   17074:	cmp	r0, #34	; 0x22
   17078:	bne	17098 <__assert_fail@plt+0x58c0>
   1707c:	bl	11664 <__errno_location@plt>
   17080:	ldr	r1, [r0]
   17084:	ldr	r3, [fp, #-4]
   17088:	movw	r0, #1
   1708c:	movw	r2, #16907	; 0x420b
   17090:	movt	r2, #2
   17094:	bl	1158c <error@plt>
   17098:	bl	11664 <__errno_location@plt>
   1709c:	ldr	r1, [r0]
   170a0:	ldr	r3, [fp, #-4]
   170a4:	movw	r0, #1
   170a8:	movw	r2, #16907	; 0x420b
   170ac:	movt	r2, #2
   170b0:	bl	1158c <error@plt>
   170b4:	ldr	r0, [pc, #296]	; 171e4 <__assert_fail@plt+0x5a0c>
   170b8:	ldr	r1, [fp, #-12]
   170bc:	cmp	r1, r0
   170c0:	bgt	170d0 <__assert_fail@plt+0x58f8>
   170c4:	ldr	r0, [fp, #-12]
   170c8:	cmp	r0, #-2147483648	; 0x80000000
   170cc:	bge	170f8 <__assert_fail@plt+0x5920>
   170d0:	bl	11664 <__errno_location@plt>
   170d4:	movw	r1, #34	; 0x22
   170d8:	str	r1, [r0]
   170dc:	bl	11664 <__errno_location@plt>
   170e0:	ldr	r1, [r0]
   170e4:	ldr	r3, [fp, #-4]
   170e8:	movw	r0, #1
   170ec:	movw	r2, #16907	; 0x420b
   170f0:	movt	r2, #2
   170f4:	bl	1158c <error@plt>
   170f8:	ldr	r0, [fp, #-16]
   170fc:	ldrsb	r0, [r0]
   17100:	cmp	r0, #0
   17104:	beq	17174 <__assert_fail@plt+0x599c>
   17108:	bl	11664 <__errno_location@plt>
   1710c:	ldr	r1, [r0]
   17110:	movw	r0, #16859	; 0x41db
   17114:	movt	r0, #2
   17118:	str	r1, [fp, #-20]	; 0xffffffec
   1711c:	bl	1161c <gettext@plt>
   17120:	ldr	r1, [fp, #-8]
   17124:	ldr	r2, [fp, #-16]
   17128:	movw	r3, #0
   1712c:	str	r0, [sp, #24]
   17130:	mov	r0, r3
   17134:	bl	1afbc <__assert_fail@plt+0x97e4>
   17138:	ldr	r1, [fp, #-8]
   1713c:	ldr	r2, [fp, #-4]
   17140:	movw	r3, #1
   17144:	str	r0, [sp, #20]
   17148:	mov	r0, r3
   1714c:	bl	1afbc <__assert_fail@plt+0x97e4>
   17150:	movw	r1, #1
   17154:	str	r0, [sp, #16]
   17158:	mov	r0, r1
   1715c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17160:	ldr	r2, [sp, #24]
   17164:	ldr	r3, [sp, #20]
   17168:	ldr	ip, [sp, #16]
   1716c:	str	ip, [sp]
   17170:	bl	1158c <error@plt>
   17174:	ldr	r0, [fp, #-16]
   17178:	ldr	r1, [fp, #-4]
   1717c:	cmp	r0, r1
   17180:	bne	171d0 <__assert_fail@plt+0x59f8>
   17184:	bl	11664 <__errno_location@plt>
   17188:	ldr	r1, [r0]
   1718c:	movw	r0, #16886	; 0x41f6
   17190:	movt	r0, #2
   17194:	str	r1, [sp, #12]
   17198:	bl	1161c <gettext@plt>
   1719c:	ldr	r1, [fp, #-8]
   171a0:	ldr	r2, [fp, #-4]
   171a4:	movw	r3, #0
   171a8:	str	r0, [sp, #8]
   171ac:	mov	r0, r3
   171b0:	bl	1afbc <__assert_fail@plt+0x97e4>
   171b4:	movw	r1, #1
   171b8:	str	r0, [sp, #4]
   171bc:	mov	r0, r1
   171c0:	ldr	r1, [sp, #12]
   171c4:	ldr	r2, [sp, #8]
   171c8:	ldr	r3, [sp, #4]
   171cc:	bl	1158c <error@plt>
   171d0:	b	171d4 <__assert_fail@plt+0x59fc>
   171d4:	b	171d8 <__assert_fail@plt+0x5a00>
   171d8:	ldr	r0, [fp, #-12]
   171dc:	mov	sp, fp
   171e0:	pop	{fp, pc}
   171e4:	svcvc	0x00ffffff
   171e8:	andhi	r0, r0, r0
   171ec:	push	{fp, lr}
   171f0:	mov	fp, sp
   171f4:	sub	sp, sp, #32
   171f8:	str	r0, [fp, #-4]
   171fc:	str	r1, [fp, #-8]
   17200:	ldr	r0, [fp, #-4]
   17204:	movw	r1, #16910	; 0x420e
   17208:	movt	r1, #2
   1720c:	str	r0, [fp, #-12]
   17210:	mov	r0, r1
   17214:	bl	1161c <gettext@plt>
   17218:	ldr	r3, [fp, #-8]
   1721c:	ldr	r1, [fp, #-12]
   17220:	str	r0, [sp, #16]
   17224:	mov	r0, r1
   17228:	ldr	r1, [sp, #16]
   1722c:	movw	r2, #17116	; 0x42dc
   17230:	movt	r2, #2
   17234:	movw	ip, #16802	; 0x41a2
   17238:	movt	ip, #2
   1723c:	str	ip, [sp]
   17240:	movw	ip, #17155	; 0x4303
   17244:	movt	ip, #2
   17248:	str	ip, [sp, #4]
   1724c:	movw	ip, #17202	; 0x4332
   17250:	movt	ip, #2
   17254:	str	ip, [sp, #8]
   17258:	bl	11658 <fprintf@plt>
   1725c:	mov	sp, fp
   17260:	pop	{fp, pc}
   17264:	push	{fp, lr}
   17268:	mov	fp, sp
   1726c:	sub	sp, sp, #32
   17270:	str	r0, [fp, #-4]
   17274:	str	r1, [fp, #-8]
   17278:	str	r2, [fp, #-12]
   1727c:	bl	11664 <__errno_location@plt>
   17280:	ldr	r0, [r0]
   17284:	str	r0, [sp, #16]
   17288:	ldr	r0, [fp, #-8]
   1728c:	cmp	r0, #0
   17290:	bls	17298 <__assert_fail@plt+0x5ac0>
   17294:	b	172b8 <__assert_fail@plt+0x5ae0>
   17298:	movw	r0, #17224	; 0x4348
   1729c:	movt	r0, #2
   172a0:	movw	r1, #17236	; 0x4354
   172a4:	movt	r1, #2
   172a8:	movw	r2, #71	; 0x47
   172ac:	movw	r3, #17248	; 0x4360
   172b0:	movt	r3, #2
   172b4:	bl	117d8 <__assert_fail@plt>
   172b8:	ldr	r0, [fp, #-12]
   172bc:	ldr	r0, [r0]
   172c0:	ldr	r1, [fp, #-8]
   172c4:	bl	173b8 <__assert_fail@plt+0x5be0>
   172c8:	str	r0, [sp, #12]
   172cc:	ldr	r0, [fp, #-12]
   172d0:	ldr	r0, [r0]
   172d4:	cmp	r0, #0
   172d8:	bne	1732c <__assert_fail@plt+0x5b54>
   172dc:	ldr	r0, [fp, #-4]
   172e0:	movw	r1, #0
   172e4:	cmp	r1, r0
   172e8:	bne	172f0 <__assert_fail@plt+0x5b18>
   172ec:	b	17310 <__assert_fail@plt+0x5b38>
   172f0:	movw	r0, #17290	; 0x438a
   172f4:	movt	r0, #2
   172f8:	movw	r1, #17236	; 0x4354
   172fc:	movt	r1, #2
   17300:	movw	r2, #79	; 0x4f
   17304:	movw	r3, #17248	; 0x4360
   17308:	movt	r3, #2
   1730c:	bl	117d8 <__assert_fail@plt>
   17310:	ldr	r0, [sp, #12]
   17314:	ldr	r1, [fp, #-12]
   17318:	str	r0, [r1]
   1731c:	ldr	r0, [sp, #12]
   17320:	bl	1fc5c <__assert_fail@plt+0xe484>
   17324:	str	r0, [sp, #8]
   17328:	b	17388 <__assert_fail@plt+0x5bb0>
   1732c:	ldr	r0, [sp, #12]
   17330:	ldr	r1, [fp, #-12]
   17334:	ldr	r1, [r1]
   17338:	cmp	r0, r1
   1733c:	beq	1737c <__assert_fail@plt+0x5ba4>
   17340:	ldr	r0, [sp, #12]
   17344:	ldr	r1, [fp, #-12]
   17348:	str	r0, [r1]
   1734c:	ldr	r0, [fp, #-4]
   17350:	ldr	r1, [sp, #12]
   17354:	bl	1fd7c <__assert_fail@plt+0xe5a4>
   17358:	str	r0, [sp, #8]
   1735c:	ldr	r0, [sp, #8]
   17360:	movw	r1, #0
   17364:	cmp	r1, r0
   17368:	bne	17378 <__assert_fail@plt+0x5ba0>
   1736c:	bl	11664 <__errno_location@plt>
   17370:	ldr	r0, [r0]
   17374:	str	r0, [sp, #16]
   17378:	b	17384 <__assert_fail@plt+0x5bac>
   1737c:	ldr	r0, [fp, #-4]
   17380:	str	r0, [sp, #8]
   17384:	b	17388 <__assert_fail@plt+0x5bb0>
   17388:	ldr	r0, [sp, #8]
   1738c:	movw	r1, #0
   17390:	cmp	r0, r1
   17394:	beq	173ac <__assert_fail@plt+0x5bd4>
   17398:	ldr	r0, [sp, #16]
   1739c:	str	r0, [sp, #4]
   173a0:	bl	11664 <__errno_location@plt>
   173a4:	ldr	r1, [sp, #4]
   173a8:	str	r1, [r0]
   173ac:	ldr	r0, [sp, #8]
   173b0:	mov	sp, fp
   173b4:	pop	{fp, pc}
   173b8:	sub	sp, sp, #16
   173bc:	str	r0, [sp, #8]
   173c0:	str	r1, [sp, #4]
   173c4:	ldr	r0, [sp, #8]
   173c8:	movw	r1, #0
   173cc:	cmp	r1, r0
   173d0:	bne	173e0 <__assert_fail@plt+0x5c08>
   173d4:	movw	r0, #16
   173d8:	str	r0, [sp]
   173dc:	b	173e8 <__assert_fail@plt+0x5c10>
   173e0:	ldr	r0, [sp, #8]
   173e4:	str	r0, [sp]
   173e8:	b	173ec <__assert_fail@plt+0x5c14>
   173ec:	ldr	r0, [sp]
   173f0:	ldr	r1, [sp, #4]
   173f4:	cmp	r0, r1
   173f8:	bcs	1742c <__assert_fail@plt+0x5c54>
   173fc:	ldr	r0, [sp]
   17400:	lsl	r0, r0, #1
   17404:	ldr	r1, [sp]
   17408:	cmp	r0, r1
   1740c:	bcs	1741c <__assert_fail@plt+0x5c44>
   17410:	ldr	r0, [sp, #4]
   17414:	str	r0, [sp, #12]
   17418:	b	17434 <__assert_fail@plt+0x5c5c>
   1741c:	ldr	r0, [sp]
   17420:	lsl	r0, r0, #1
   17424:	str	r0, [sp]
   17428:	b	173ec <__assert_fail@plt+0x5c14>
   1742c:	ldr	r0, [sp]
   17430:	str	r0, [sp, #12]
   17434:	ldr	r0, [sp, #12]
   17438:	add	sp, sp, #16
   1743c:	bx	lr
   17440:	push	{fp, lr}
   17444:	mov	fp, sp
   17448:	sub	sp, sp, #16
   1744c:	str	r0, [fp, #-4]
   17450:	str	r1, [sp, #8]
   17454:	str	r2, [sp, #4]
   17458:	ldr	r0, [fp, #-4]
   1745c:	ldr	r1, [sp, #8]
   17460:	ldr	r2, [sp, #4]
   17464:	bl	17264 <__assert_fail@plt+0x5a8c>
   17468:	str	r0, [sp]
   1746c:	ldr	r0, [sp]
   17470:	movw	r1, #0
   17474:	cmp	r1, r0
   17478:	bne	17488 <__assert_fail@plt+0x5cb0>
   1747c:	ldr	r0, [fp, #-4]
   17480:	bl	1fb14 <__assert_fail@plt+0xe33c>
   17484:	bl	1edd4 <__assert_fail@plt+0xd5fc>
   17488:	ldr	r0, [sp]
   1748c:	mov	sp, fp
   17490:	pop	{fp, pc}
   17494:	push	{fp, lr}
   17498:	mov	fp, sp
   1749c:	sub	sp, sp, #24
   174a0:	str	r0, [fp, #-8]
   174a4:	and	r0, r1, #1
   174a8:	strb	r0, [fp, #-9]
   174ac:	ldr	r0, [fp, #-8]
   174b0:	movw	r1, #1
   174b4:	movw	r2, #0
   174b8:	bl	1f5ec <__assert_fail@plt+0xde14>
   174bc:	str	r0, [sp, #8]
   174c0:	ldr	r0, [sp, #8]
   174c4:	movw	r1, #0
   174c8:	cmp	r1, r0
   174cc:	bgt	1753c <__assert_fail@plt+0x5d64>
   174d0:	ldrb	r0, [fp, #-9]
   174d4:	tst	r0, #1
   174d8:	beq	174ec <__assert_fail@plt+0x5d14>
   174dc:	ldr	r0, [sp, #8]
   174e0:	orr	r0, r0, #1
   174e4:	str	r0, [sp]
   174e8:	b	174fc <__assert_fail@plt+0x5d24>
   174ec:	ldr	r0, [sp, #8]
   174f0:	mvn	r1, #1
   174f4:	and	r0, r0, r1
   174f8:	str	r0, [sp]
   174fc:	ldr	r0, [sp]
   17500:	str	r0, [sp, #4]
   17504:	ldr	r0, [sp, #8]
   17508:	ldr	r1, [sp, #4]
   1750c:	cmp	r0, r1
   17510:	beq	1752c <__assert_fail@plt+0x5d54>
   17514:	ldr	r0, [fp, #-8]
   17518:	ldr	r2, [sp, #4]
   1751c:	movw	r1, #2
   17520:	bl	1f5ec <__assert_fail@plt+0xde14>
   17524:	cmn	r0, #1
   17528:	beq	17538 <__assert_fail@plt+0x5d60>
   1752c:	movw	r0, #0
   17530:	str	r0, [fp, #-4]
   17534:	b	17544 <__assert_fail@plt+0x5d6c>
   17538:	b	1753c <__assert_fail@plt+0x5d64>
   1753c:	mvn	r0, #0
   17540:	str	r0, [fp, #-4]
   17544:	ldr	r0, [fp, #-4]
   17548:	mov	sp, fp
   1754c:	pop	{fp, pc}
   17550:	push	{fp, lr}
   17554:	mov	fp, sp
   17558:	sub	sp, sp, #8
   1755c:	str	r0, [sp, #4]
   17560:	ldr	r0, [sp, #4]
   17564:	movw	r1, #1030	; 0x406
   17568:	movw	r2, #0
   1756c:	bl	1f5ec <__assert_fail@plt+0xde14>
   17570:	mov	sp, fp
   17574:	pop	{fp, pc}
   17578:	sub	sp, sp, #4
   1757c:	str	r0, [sp]
   17580:	ldr	r0, [sp]
   17584:	movw	r1, #21156	; 0x52a4
   17588:	movt	r1, #3
   1758c:	str	r0, [r1]
   17590:	add	sp, sp, #4
   17594:	bx	lr
   17598:	push	{fp, lr}
   1759c:	mov	fp, sp
   175a0:	sub	sp, sp, #24
   175a4:	movw	r0, #0
   175a8:	strb	r0, [fp, #-1]
   175ac:	movw	r0, #20952	; 0x51d8
   175b0:	movt	r0, #3
   175b4:	ldr	r0, [r0]
   175b8:	bl	1fa78 <__assert_fail@plt+0xe2a0>
   175bc:	cmp	r0, #0
   175c0:	bls	17618 <__assert_fail@plt+0x5e40>
   175c4:	movw	r0, #20952	; 0x51d8
   175c8:	movt	r0, #3
   175cc:	ldr	r0, [r0]
   175d0:	mov	r1, sp
   175d4:	mov	r2, #1
   175d8:	str	r2, [r1]
   175dc:	mov	r1, #0
   175e0:	mov	r2, r1
   175e4:	mov	r3, r1
   175e8:	bl	1fb54 <__assert_fail@plt+0xe37c>
   175ec:	cmp	r0, #0
   175f0:	bne	17614 <__assert_fail@plt+0x5e3c>
   175f4:	movw	r0, #20952	; 0x51d8
   175f8:	movt	r0, #3
   175fc:	ldr	r0, [r0]
   17600:	bl	1f9cc <__assert_fail@plt+0xe1f4>
   17604:	cmp	r0, #0
   17608:	beq	17614 <__assert_fail@plt+0x5e3c>
   1760c:	movw	r0, #1
   17610:	strb	r0, [fp, #-1]
   17614:	b	17618 <__assert_fail@plt+0x5e40>
   17618:	movw	r0, #20952	; 0x51d8
   1761c:	movt	r0, #3
   17620:	ldr	r0, [r0]
   17624:	bl	21218 <__assert_fail@plt+0xfa40>
   17628:	cmp	r0, #0
   1762c:	beq	17638 <__assert_fail@plt+0x5e60>
   17630:	movw	r0, #1
   17634:	strb	r0, [fp, #-1]
   17638:	ldrb	r0, [fp, #-1]
   1763c:	tst	r0, #1
   17640:	beq	176e0 <__assert_fail@plt+0x5f08>
   17644:	movw	r0, #17307	; 0x439b
   17648:	movt	r0, #2
   1764c:	bl	1161c <gettext@plt>
   17650:	str	r0, [fp, #-8]
   17654:	movw	r0, #21156	; 0x52a4
   17658:	movt	r0, #3
   1765c:	ldr	r0, [r0]
   17660:	movw	r1, #0
   17664:	cmp	r0, r1
   17668:	beq	176c0 <__assert_fail@plt+0x5ee8>
   1766c:	bl	11664 <__errno_location@plt>
   17670:	ldr	r1, [r0]
   17674:	movw	r0, #21156	; 0x52a4
   17678:	movt	r0, #3
   1767c:	ldr	r0, [r0]
   17680:	str	r1, [sp, #12]
   17684:	bl	1b18c <__assert_fail@plt+0x99b4>
   17688:	ldr	r1, [fp, #-8]
   1768c:	movw	r2, #0
   17690:	str	r0, [sp, #8]
   17694:	mov	r0, r2
   17698:	ldr	r2, [sp, #12]
   1769c:	str	r1, [sp, #4]
   176a0:	mov	r1, r2
   176a4:	movw	r2, #17326	; 0x43ae
   176a8:	movt	r2, #2
   176ac:	ldr	r3, [sp, #8]
   176b0:	ldr	ip, [sp, #4]
   176b4:	str	ip, [sp]
   176b8:	bl	1158c <error@plt>
   176bc:	b	176dc <__assert_fail@plt+0x5f04>
   176c0:	bl	11664 <__errno_location@plt>
   176c4:	ldr	r1, [r0]
   176c8:	ldr	r3, [fp, #-8]
   176cc:	movw	r0, #0
   176d0:	movw	r2, #16907	; 0x420b
   176d4:	movt	r2, #2
   176d8:	bl	1158c <error@plt>
   176dc:	b	176e0 <__assert_fail@plt+0x5f08>
   176e0:	bl	17750 <__assert_fail@plt+0x5f78>
   176e4:	ldrb	r0, [fp, #-1]
   176e8:	tst	r0, #1
   176ec:	beq	17700 <__assert_fail@plt+0x5f28>
   176f0:	movw	r0, #20848	; 0x5170
   176f4:	movt	r0, #3
   176f8:	ldr	r0, [r0]
   176fc:	bl	11490 <_exit@plt>
   17700:	mov	sp, fp
   17704:	pop	{fp, pc}
   17708:	sub	sp, sp, #4
   1770c:	str	r0, [sp]
   17710:	ldr	r0, [sp]
   17714:	movw	r1, #21160	; 0x52a8
   17718:	movt	r1, #3
   1771c:	str	r0, [r1]
   17720:	add	sp, sp, #4
   17724:	bx	lr
   17728:	sub	sp, sp, #4
   1772c:	and	r0, r0, #1
   17730:	strb	r0, [sp, #3]
   17734:	ldrb	r0, [sp, #3]
   17738:	and	r0, r0, #1
   1773c:	movw	r1, #21164	; 0x52ac
   17740:	movt	r1, #3
   17744:	strb	r0, [r1]
   17748:	add	sp, sp, #4
   1774c:	bx	lr
   17750:	push	{fp, lr}
   17754:	mov	fp, sp
   17758:	sub	sp, sp, #24
   1775c:	movw	r0, #20956	; 0x51dc
   17760:	movt	r0, #3
   17764:	ldr	r0, [r0]
   17768:	bl	21218 <__assert_fail@plt+0xfa40>
   1776c:	cmp	r0, #0
   17770:	beq	17840 <__assert_fail@plt+0x6068>
   17774:	movw	r0, #21164	; 0x52ac
   17778:	movt	r0, #3
   1777c:	ldrb	r0, [r0]
   17780:	tst	r0, #1
   17784:	beq	17798 <__assert_fail@plt+0x5fc0>
   17788:	bl	11664 <__errno_location@plt>
   1778c:	ldr	r0, [r0]
   17790:	cmp	r0, #32
   17794:	beq	17840 <__assert_fail@plt+0x6068>
   17798:	movw	r0, #17333	; 0x43b5
   1779c:	movt	r0, #2
   177a0:	bl	1161c <gettext@plt>
   177a4:	str	r0, [fp, #-4]
   177a8:	movw	r0, #21160	; 0x52a8
   177ac:	movt	r0, #3
   177b0:	ldr	r0, [r0]
   177b4:	movw	r1, #0
   177b8:	cmp	r0, r1
   177bc:	beq	17814 <__assert_fail@plt+0x603c>
   177c0:	bl	11664 <__errno_location@plt>
   177c4:	ldr	r1, [r0]
   177c8:	movw	r0, #21160	; 0x52a8
   177cc:	movt	r0, #3
   177d0:	ldr	r0, [r0]
   177d4:	str	r1, [fp, #-8]
   177d8:	bl	1b18c <__assert_fail@plt+0x99b4>
   177dc:	ldr	r1, [fp, #-4]
   177e0:	movw	r2, #0
   177e4:	str	r0, [sp, #12]
   177e8:	mov	r0, r2
   177ec:	ldr	r2, [fp, #-8]
   177f0:	str	r1, [sp, #8]
   177f4:	mov	r1, r2
   177f8:	movw	r2, #17326	; 0x43ae
   177fc:	movt	r2, #2
   17800:	ldr	r3, [sp, #12]
   17804:	ldr	ip, [sp, #8]
   17808:	str	ip, [sp]
   1780c:	bl	1158c <error@plt>
   17810:	b	17830 <__assert_fail@plt+0x6058>
   17814:	bl	11664 <__errno_location@plt>
   17818:	ldr	r1, [r0]
   1781c:	ldr	r3, [fp, #-4]
   17820:	movw	r0, #0
   17824:	movw	r2, #16907	; 0x420b
   17828:	movt	r2, #2
   1782c:	bl	1158c <error@plt>
   17830:	movw	r0, #20848	; 0x5170
   17834:	movt	r0, #3
   17838:	ldr	r0, [r0]
   1783c:	bl	11490 <_exit@plt>
   17840:	movw	r0, #20944	; 0x51d0
   17844:	movt	r0, #3
   17848:	ldr	r0, [r0]
   1784c:	bl	21218 <__assert_fail@plt+0xfa40>
   17850:	cmp	r0, #0
   17854:	beq	17868 <__assert_fail@plt+0x6090>
   17858:	movw	r0, #20848	; 0x5170
   1785c:	movt	r0, #3
   17860:	ldr	r0, [r0]
   17864:	bl	11490 <_exit@plt>
   17868:	mov	sp, fp
   1786c:	pop	{fp, pc}
   17870:	push	{fp, lr}
   17874:	mov	fp, sp
   17878:	sub	sp, sp, #32
   1787c:	str	r0, [fp, #-4]
   17880:	ldr	r0, [fp, #-4]
   17884:	bl	11598 <opendir@plt>
   17888:	str	r0, [fp, #-8]
   1788c:	ldr	r0, [fp, #-8]
   17890:	movw	r1, #0
   17894:	cmp	r0, r1
   17898:	beq	1795c <__assert_fail@plt+0x6184>
   1789c:	ldr	r0, [fp, #-8]
   178a0:	bl	11760 <dirfd@plt>
   178a4:	str	r0, [fp, #-12]
   178a8:	ldr	r0, [fp, #-12]
   178ac:	movw	r1, #0
   178b0:	cmp	r1, r0
   178b4:	bgt	17958 <__assert_fail@plt+0x6180>
   178b8:	ldr	r0, [fp, #-12]
   178bc:	cmp	r0, #2
   178c0:	bgt	17958 <__assert_fail@plt+0x6180>
   178c4:	ldr	r0, [fp, #-12]
   178c8:	movw	r1, #1030	; 0x406
   178cc:	movw	r2, #3
   178d0:	bl	1f5ec <__assert_fail@plt+0xde14>
   178d4:	str	r0, [sp, #8]
   178d8:	ldr	r0, [sp, #8]
   178dc:	cmp	r0, #0
   178e0:	bge	178fc <__assert_fail@plt+0x6124>
   178e4:	bl	11664 <__errno_location@plt>
   178e8:	ldr	r0, [r0]
   178ec:	str	r0, [sp, #12]
   178f0:	movw	r0, #0
   178f4:	str	r0, [sp, #16]
   178f8:	b	17930 <__assert_fail@plt+0x6158>
   178fc:	ldr	r0, [sp, #8]
   17900:	bl	11748 <fdopendir@plt>
   17904:	str	r0, [sp, #16]
   17908:	bl	11664 <__errno_location@plt>
   1790c:	ldr	r0, [r0]
   17910:	str	r0, [sp, #12]
   17914:	ldr	r0, [sp, #16]
   17918:	movw	r1, #0
   1791c:	cmp	r0, r1
   17920:	bne	1792c <__assert_fail@plt+0x6154>
   17924:	ldr	r0, [sp, #8]
   17928:	bl	117c0 <close@plt>
   1792c:	b	17930 <__assert_fail@plt+0x6158>
   17930:	ldr	r0, [fp, #-8]
   17934:	bl	117cc <closedir@plt>
   17938:	ldr	r1, [sp, #12]
   1793c:	str	r0, [sp, #4]
   17940:	str	r1, [sp]
   17944:	bl	11664 <__errno_location@plt>
   17948:	ldr	r1, [sp]
   1794c:	str	r1, [r0]
   17950:	ldr	r0, [sp, #16]
   17954:	str	r0, [fp, #-8]
   17958:	b	1795c <__assert_fail@plt+0x6184>
   1795c:	ldr	r0, [fp, #-8]
   17960:	mov	sp, fp
   17964:	pop	{fp, pc}
   17968:	sub	sp, sp, #8
   1796c:	push	{fp, lr}
   17970:	mov	fp, sp
   17974:	sub	sp, sp, #16
   17978:	str	r3, [fp, #12]
   1797c:	str	r2, [fp, #8]
   17980:	str	r0, [fp, #-4]
   17984:	str	r1, [sp, #8]
   17988:	movw	r0, #0
   1798c:	str	r0, [sp, #4]
   17990:	ldr	r0, [sp, #8]
   17994:	and	r0, r0, #64	; 0x40
   17998:	cmp	r0, #0
   1799c:	beq	179c4 <__assert_fail@plt+0x61ec>
   179a0:	mov	r0, sp
   179a4:	mov	r1, r0
   179a8:	add	r2, fp, #8
   179ac:	str	r2, [r1]
   179b0:	ldr	r1, [sp]
   179b4:	add	r2, r1, #4
   179b8:	str	r2, [sp]
   179bc:	ldr	r1, [r1]
   179c0:	str	r1, [sp, #4]
   179c4:	ldr	r0, [fp, #-4]
   179c8:	ldr	r1, [sp, #8]
   179cc:	ldr	r2, [sp, #4]
   179d0:	bl	115a4 <open64@plt>
   179d4:	bl	1b674 <__assert_fail@plt+0x9e9c>
   179d8:	mov	sp, fp
   179dc:	pop	{fp, lr}
   179e0:	add	sp, sp, #8
   179e4:	bx	lr
   179e8:	push	{r4, r5, fp, lr}
   179ec:	add	fp, sp, #8
   179f0:	sub	sp, sp, #432	; 0x1b0
   179f4:	str	r0, [fp, #-16]
   179f8:	str	r1, [fp, #-20]	; 0xffffffec
   179fc:	bl	1155c <__ctype_get_mb_cur_max@plt>
   17a00:	cmp	r0, #1
   17a04:	bls	17f4c <__assert_fail@plt+0x6774>
   17a08:	ldr	r0, [fp, #-20]	; 0xffffffec
   17a0c:	str	r0, [fp, #-60]	; 0xffffffc4
   17a10:	movw	r0, #0
   17a14:	strb	r0, [fp, #-76]	; 0xffffffb4
   17a18:	sub	r1, fp, #76	; 0x4c
   17a1c:	add	r2, r1, #4
   17a20:	str	r0, [sp, #68]	; 0x44
   17a24:	mov	r0, r2
   17a28:	ldr	r2, [sp, #68]	; 0x44
   17a2c:	and	r3, r2, #255	; 0xff
   17a30:	str	r1, [sp, #64]	; 0x40
   17a34:	mov	r1, r3
   17a38:	movw	r2, #8
   17a3c:	bl	11688 <memset@plt>
   17a40:	ldr	r0, [sp, #68]	; 0x44
   17a44:	strb	r0, [fp, #-64]	; 0xffffffc0
   17a48:	ldr	r0, [sp, #64]	; 0x40
   17a4c:	bl	18aac <__assert_fail@plt+0x72d4>
   17a50:	ldrb	r0, [fp, #-52]	; 0xffffffcc
   17a54:	tst	r0, #1
   17a58:	movw	r0, #0
   17a5c:	str	r0, [sp, #60]	; 0x3c
   17a60:	beq	17a78 <__assert_fail@plt+0x62a0>
   17a64:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17a68:	cmp	r0, #0
   17a6c:	movw	r0, #0
   17a70:	moveq	r0, #1
   17a74:	str	r0, [sp, #60]	; 0x3c
   17a78:	ldr	r0, [sp, #60]	; 0x3c
   17a7c:	mvn	r1, #0
   17a80:	eor	r0, r0, r1
   17a84:	tst	r0, #1
   17a88:	beq	17f40 <__assert_fail@plt+0x6768>
   17a8c:	movw	r0, #1
   17a90:	strb	r0, [fp, #-77]	; 0xffffffb3
   17a94:	movw	r0, #0
   17a98:	str	r0, [fp, #-84]	; 0xffffffac
   17a9c:	str	r0, [fp, #-88]	; 0xffffffa8
   17aa0:	str	r0, [fp, #-92]	; 0xffffffa4
   17aa4:	ldr	r0, [fp, #-20]	; 0xffffffec
   17aa8:	str	r0, [fp, #-132]	; 0xffffff7c
   17aac:	movw	r0, #0
   17ab0:	strb	r0, [fp, #-148]	; 0xffffff6c
   17ab4:	sub	r1, fp, #148	; 0x94
   17ab8:	add	r1, r1, #4
   17abc:	str	r0, [sp, #56]	; 0x38
   17ac0:	mov	r0, r1
   17ac4:	ldr	r1, [sp, #56]	; 0x38
   17ac8:	and	r1, r1, #255	; 0xff
   17acc:	movw	r2, #8
   17ad0:	str	r2, [sp, #52]	; 0x34
   17ad4:	bl	11688 <memset@plt>
   17ad8:	ldr	r0, [sp, #56]	; 0x38
   17adc:	strb	r0, [fp, #-136]	; 0xffffff78
   17ae0:	ldr	r1, [fp, #-16]
   17ae4:	str	r1, [fp, #-188]	; 0xffffff44
   17ae8:	strb	r0, [fp, #-204]	; 0xffffff34
   17aec:	sub	r1, fp, #204	; 0xcc
   17af0:	add	r1, r1, #4
   17af4:	mov	r0, r1
   17af8:	ldr	r1, [sp, #56]	; 0x38
   17afc:	and	r1, r1, #255	; 0xff
   17b00:	ldr	r2, [sp, #52]	; 0x34
   17b04:	bl	11688 <memset@plt>
   17b08:	ldr	r0, [sp, #56]	; 0x38
   17b0c:	strb	r0, [fp, #-192]	; 0xffffff40
   17b10:	sub	r0, fp, #204	; 0xcc
   17b14:	bl	18aac <__assert_fail@plt+0x72d4>
   17b18:	ldrb	r0, [fp, #-180]	; 0xffffff4c
   17b1c:	tst	r0, #1
   17b20:	movw	r0, #0
   17b24:	str	r0, [sp, #48]	; 0x30
   17b28:	beq	17b40 <__assert_fail@plt+0x6368>
   17b2c:	ldr	r0, [fp, #-176]	; 0xffffff50
   17b30:	cmp	r0, #0
   17b34:	movw	r0, #0
   17b38:	moveq	r0, #1
   17b3c:	str	r0, [sp, #48]	; 0x30
   17b40:	ldr	r0, [sp, #48]	; 0x30
   17b44:	mvn	r1, #0
   17b48:	eor	r0, r0, r1
   17b4c:	tst	r0, #1
   17b50:	bne	17b60 <__assert_fail@plt+0x6388>
   17b54:	movw	r0, #0
   17b58:	str	r0, [fp, #-12]
   17b5c:	b	1818c <__assert_fail@plt+0x69b4>
   17b60:	ldrb	r0, [fp, #-77]	; 0xffffffb3
   17b64:	tst	r0, #1
   17b68:	beq	17cb4 <__assert_fail@plt+0x64dc>
   17b6c:	ldr	r0, [fp, #-84]	; 0xffffffac
   17b70:	cmp	r0, #10
   17b74:	bcc	17cb4 <__assert_fail@plt+0x64dc>
   17b78:	ldr	r0, [fp, #-88]	; 0xffffffa8
   17b7c:	ldr	r1, [fp, #-84]	; 0xffffffac
   17b80:	movw	r2, #5
   17b84:	mul	r1, r1, r2
   17b88:	cmp	r0, r1
   17b8c:	bcc	17cb4 <__assert_fail@plt+0x64dc>
   17b90:	ldr	r0, [fp, #-88]	; 0xffffffa8
   17b94:	ldr	r1, [fp, #-92]	; 0xffffffa4
   17b98:	sub	r0, r0, r1
   17b9c:	str	r0, [fp, #-208]	; 0xffffff30
   17ba0:	ldr	r0, [fp, #-208]	; 0xffffff30
   17ba4:	cmp	r0, #0
   17ba8:	movw	r0, #0
   17bac:	str	r0, [sp, #44]	; 0x2c
   17bb0:	bls	17bf4 <__assert_fail@plt+0x641c>
   17bb4:	sub	r0, fp, #148	; 0x94
   17bb8:	bl	18aac <__assert_fail@plt+0x72d4>
   17bbc:	ldrb	r0, [fp, #-124]	; 0xffffff84
   17bc0:	tst	r0, #1
   17bc4:	movw	r0, #0
   17bc8:	str	r0, [sp, #40]	; 0x28
   17bcc:	beq	17be4 <__assert_fail@plt+0x640c>
   17bd0:	ldr	r0, [fp, #-120]	; 0xffffff88
   17bd4:	cmp	r0, #0
   17bd8:	movw	r0, #0
   17bdc:	moveq	r0, #1
   17be0:	str	r0, [sp, #40]	; 0x28
   17be4:	ldr	r0, [sp, #40]	; 0x28
   17be8:	mvn	r1, #0
   17bec:	eor	r0, r0, r1
   17bf0:	str	r0, [sp, #44]	; 0x2c
   17bf4:	ldr	r0, [sp, #44]	; 0x2c
   17bf8:	tst	r0, #1
   17bfc:	beq	17c2c <__assert_fail@plt+0x6454>
   17c00:	ldr	r0, [fp, #-128]	; 0xffffff80
   17c04:	ldr	r1, [fp, #-132]	; 0xffffff7c
   17c08:	add	r0, r1, r0
   17c0c:	str	r0, [fp, #-132]	; 0xffffff7c
   17c10:	movw	r0, #0
   17c14:	strb	r0, [fp, #-136]	; 0xffffff78
   17c18:	ldr	r0, [fp, #-208]	; 0xffffff30
   17c1c:	mvn	r1, #0
   17c20:	add	r0, r0, r1
   17c24:	str	r0, [fp, #-208]	; 0xffffff30
   17c28:	b	17ba0 <__assert_fail@plt+0x63c8>
   17c2c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   17c30:	str	r0, [fp, #-92]	; 0xffffffa4
   17c34:	sub	r0, fp, #148	; 0x94
   17c38:	bl	18aac <__assert_fail@plt+0x72d4>
   17c3c:	ldrb	r0, [fp, #-124]	; 0xffffff84
   17c40:	tst	r0, #1
   17c44:	movw	r0, #0
   17c48:	str	r0, [sp, #36]	; 0x24
   17c4c:	beq	17c64 <__assert_fail@plt+0x648c>
   17c50:	ldr	r0, [fp, #-120]	; 0xffffff88
   17c54:	cmp	r0, #0
   17c58:	movw	r0, #0
   17c5c:	moveq	r0, #1
   17c60:	str	r0, [sp, #36]	; 0x24
   17c64:	ldr	r0, [sp, #36]	; 0x24
   17c68:	mvn	r1, #0
   17c6c:	eor	r0, r0, r1
   17c70:	tst	r0, #1
   17c74:	bne	17cb0 <__assert_fail@plt+0x64d8>
   17c78:	ldr	r0, [fp, #-16]
   17c7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17c80:	sub	r2, fp, #212	; 0xd4
   17c84:	bl	18198 <__assert_fail@plt+0x69c0>
   17c88:	and	r0, r0, #1
   17c8c:	strb	r0, [fp, #-213]	; 0xffffff2b
   17c90:	ldrb	r0, [fp, #-213]	; 0xffffff2b
   17c94:	tst	r0, #1
   17c98:	beq	17ca8 <__assert_fail@plt+0x64d0>
   17c9c:	ldr	r0, [fp, #-212]	; 0xffffff2c
   17ca0:	str	r0, [fp, #-12]
   17ca4:	b	1818c <__assert_fail@plt+0x69b4>
   17ca8:	movw	r0, #0
   17cac:	strb	r0, [fp, #-77]	; 0xffffffb3
   17cb0:	b	17cb4 <__assert_fail@plt+0x64dc>
   17cb4:	ldr	r0, [fp, #-84]	; 0xffffffac
   17cb8:	add	r0, r0, #1
   17cbc:	str	r0, [fp, #-84]	; 0xffffffac
   17cc0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   17cc4:	add	r0, r0, #1
   17cc8:	str	r0, [fp, #-88]	; 0xffffffa8
   17ccc:	ldrb	r0, [fp, #-180]	; 0xffffff4c
   17cd0:	tst	r0, #1
   17cd4:	beq	17cf8 <__assert_fail@plt+0x6520>
   17cd8:	ldrb	r0, [fp, #-52]	; 0xffffffcc
   17cdc:	tst	r0, #1
   17ce0:	beq	17cf8 <__assert_fail@plt+0x6520>
   17ce4:	ldr	r0, [fp, #-176]	; 0xffffff50
   17ce8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17cec:	cmp	r0, r1
   17cf0:	beq	17d20 <__assert_fail@plt+0x6548>
   17cf4:	b	17f20 <__assert_fail@plt+0x6748>
   17cf8:	ldr	r0, [fp, #-184]	; 0xffffff48
   17cfc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   17d00:	cmp	r0, r1
   17d04:	bne	17f20 <__assert_fail@plt+0x6748>
   17d08:	ldr	r0, [fp, #-188]	; 0xffffff44
   17d0c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   17d10:	ldr	r2, [fp, #-184]	; 0xffffff48
   17d14:	bl	114cc <memcmp@plt>
   17d18:	cmp	r0, #0
   17d1c:	bne	17f20 <__assert_fail@plt+0x6748>
   17d20:	add	r0, sp, #168	; 0xa8
   17d24:	sub	r1, fp, #204	; 0xcc
   17d28:	movw	r2, #56	; 0x38
   17d2c:	bl	1149c <memcpy@plt>
   17d30:	ldr	r0, [sp, #188]	; 0xbc
   17d34:	ldr	r1, [sp, #184]	; 0xb8
   17d38:	add	r0, r1, r0
   17d3c:	str	r0, [sp, #184]	; 0xb8
   17d40:	movw	r0, #0
   17d44:	strb	r0, [sp, #180]	; 0xb4
   17d48:	ldr	r1, [fp, #-20]	; 0xffffffec
   17d4c:	str	r1, [sp, #128]	; 0x80
   17d50:	strb	r0, [sp, #112]	; 0x70
   17d54:	add	r1, sp, #112	; 0x70
   17d58:	add	r2, r1, #4
   17d5c:	str	r0, [sp, #32]
   17d60:	mov	r0, r2
   17d64:	ldr	r2, [sp, #32]
   17d68:	and	r3, r2, #255	; 0xff
   17d6c:	str	r1, [sp, #28]
   17d70:	mov	r1, r3
   17d74:	movw	r2, #8
   17d78:	bl	11688 <memset@plt>
   17d7c:	ldr	r0, [sp, #32]
   17d80:	strb	r0, [sp, #124]	; 0x7c
   17d84:	ldr	r0, [sp, #28]
   17d88:	bl	18aac <__assert_fail@plt+0x72d4>
   17d8c:	ldrb	r0, [sp, #136]	; 0x88
   17d90:	tst	r0, #1
   17d94:	movw	r0, #0
   17d98:	str	r0, [sp, #24]
   17d9c:	beq	17db4 <__assert_fail@plt+0x65dc>
   17da0:	ldr	r0, [sp, #140]	; 0x8c
   17da4:	cmp	r0, #0
   17da8:	movw	r0, #0
   17dac:	moveq	r0, #1
   17db0:	str	r0, [sp, #24]
   17db4:	ldr	r0, [sp, #24]
   17db8:	mvn	r1, #0
   17dbc:	eor	r0, r0, r1
   17dc0:	tst	r0, #1
   17dc4:	bne	17dcc <__assert_fail@plt+0x65f4>
   17dc8:	bl	117a8 <abort@plt>
   17dcc:	ldr	r0, [sp, #132]	; 0x84
   17dd0:	ldr	r1, [sp, #128]	; 0x80
   17dd4:	add	r0, r1, r0
   17dd8:	str	r0, [sp, #128]	; 0x80
   17ddc:	movw	r0, #0
   17de0:	strb	r0, [sp, #124]	; 0x7c
   17de4:	add	r0, sp, #112	; 0x70
   17de8:	bl	18aac <__assert_fail@plt+0x72d4>
   17dec:	ldrb	r0, [sp, #136]	; 0x88
   17df0:	tst	r0, #1
   17df4:	movw	r0, #0
   17df8:	str	r0, [sp, #20]
   17dfc:	beq	17e14 <__assert_fail@plt+0x663c>
   17e00:	ldr	r0, [sp, #140]	; 0x8c
   17e04:	cmp	r0, #0
   17e08:	movw	r0, #0
   17e0c:	moveq	r0, #1
   17e10:	str	r0, [sp, #20]
   17e14:	ldr	r0, [sp, #20]
   17e18:	mvn	r1, #0
   17e1c:	eor	r0, r0, r1
   17e20:	tst	r0, #1
   17e24:	bne	17e34 <__assert_fail@plt+0x665c>
   17e28:	ldr	r0, [fp, #-188]	; 0xffffff44
   17e2c:	str	r0, [fp, #-12]
   17e30:	b	1818c <__assert_fail@plt+0x69b4>
   17e34:	add	r0, sp, #168	; 0xa8
   17e38:	bl	18aac <__assert_fail@plt+0x72d4>
   17e3c:	ldrb	r0, [sp, #192]	; 0xc0
   17e40:	tst	r0, #1
   17e44:	movw	r0, #0
   17e48:	str	r0, [sp, #16]
   17e4c:	beq	17e64 <__assert_fail@plt+0x668c>
   17e50:	ldr	r0, [sp, #196]	; 0xc4
   17e54:	cmp	r0, #0
   17e58:	movw	r0, #0
   17e5c:	moveq	r0, #1
   17e60:	str	r0, [sp, #16]
   17e64:	ldr	r0, [sp, #16]
   17e68:	mvn	r1, #0
   17e6c:	eor	r0, r0, r1
   17e70:	tst	r0, #1
   17e74:	bne	17e84 <__assert_fail@plt+0x66ac>
   17e78:	movw	r0, #0
   17e7c:	str	r0, [fp, #-12]
   17e80:	b	1818c <__assert_fail@plt+0x69b4>
   17e84:	ldr	r0, [fp, #-88]	; 0xffffffa8
   17e88:	add	r0, r0, #1
   17e8c:	str	r0, [fp, #-88]	; 0xffffffa8
   17e90:	ldrb	r0, [sp, #192]	; 0xc0
   17e94:	tst	r0, #1
   17e98:	beq	17ebc <__assert_fail@plt+0x66e4>
   17e9c:	ldrb	r0, [sp, #136]	; 0x88
   17ea0:	tst	r0, #1
   17ea4:	beq	17ebc <__assert_fail@plt+0x66e4>
   17ea8:	ldr	r0, [sp, #196]	; 0xc4
   17eac:	ldr	r1, [sp, #140]	; 0x8c
   17eb0:	cmp	r0, r1
   17eb4:	beq	17ee8 <__assert_fail@plt+0x6710>
   17eb8:	b	17ee4 <__assert_fail@plt+0x670c>
   17ebc:	ldr	r0, [sp, #188]	; 0xbc
   17ec0:	ldr	r1, [sp, #132]	; 0x84
   17ec4:	cmp	r0, r1
   17ec8:	bne	17ee4 <__assert_fail@plt+0x670c>
   17ecc:	ldr	r0, [sp, #184]	; 0xb8
   17ed0:	ldr	r1, [sp, #128]	; 0x80
   17ed4:	ldr	r2, [sp, #188]	; 0xbc
   17ed8:	bl	114cc <memcmp@plt>
   17edc:	cmp	r0, #0
   17ee0:	beq	17ee8 <__assert_fail@plt+0x6710>
   17ee4:	b	17f1c <__assert_fail@plt+0x6744>
   17ee8:	b	17eec <__assert_fail@plt+0x6714>
   17eec:	ldr	r0, [sp, #188]	; 0xbc
   17ef0:	ldr	r1, [sp, #184]	; 0xb8
   17ef4:	add	r0, r1, r0
   17ef8:	str	r0, [sp, #184]	; 0xb8
   17efc:	movw	r0, #0
   17f00:	strb	r0, [sp, #180]	; 0xb4
   17f04:	ldr	r1, [sp, #132]	; 0x84
   17f08:	ldr	r2, [sp, #128]	; 0x80
   17f0c:	add	r1, r2, r1
   17f10:	str	r1, [sp, #128]	; 0x80
   17f14:	strb	r0, [sp, #124]	; 0x7c
   17f18:	b	17de4 <__assert_fail@plt+0x660c>
   17f1c:	b	17f20 <__assert_fail@plt+0x6748>
   17f20:	b	17f24 <__assert_fail@plt+0x674c>
   17f24:	ldr	r0, [fp, #-184]	; 0xffffff48
   17f28:	ldr	r1, [fp, #-188]	; 0xffffff44
   17f2c:	add	r0, r1, r0
   17f30:	str	r0, [fp, #-188]	; 0xffffff44
   17f34:	movw	r0, #0
   17f38:	strb	r0, [fp, #-192]	; 0xffffff40
   17f3c:	b	17b10 <__assert_fail@plt+0x6338>
   17f40:	ldr	r0, [fp, #-16]
   17f44:	str	r0, [fp, #-12]
   17f48:	b	1818c <__assert_fail@plt+0x69b4>
   17f4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   17f50:	ldrb	r0, [r0]
   17f54:	cmp	r0, #0
   17f58:	beq	18184 <__assert_fail@plt+0x69ac>
   17f5c:	movw	r0, #1
   17f60:	strb	r0, [sp, #111]	; 0x6f
   17f64:	movw	r0, #0
   17f68:	str	r0, [sp, #104]	; 0x68
   17f6c:	str	r0, [sp, #100]	; 0x64
   17f70:	str	r0, [sp, #96]	; 0x60
   17f74:	ldr	r0, [fp, #-20]	; 0xffffffec
   17f78:	str	r0, [sp, #92]	; 0x5c
   17f7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   17f80:	add	r1, r0, #1
   17f84:	str	r1, [fp, #-20]	; 0xffffffec
   17f88:	ldrb	r0, [r0]
   17f8c:	strb	r0, [sp, #91]	; 0x5b
   17f90:	ldr	r0, [fp, #-16]
   17f94:	ldrb	r0, [r0]
   17f98:	cmp	r0, #0
   17f9c:	bne	17fac <__assert_fail@plt+0x67d4>
   17fa0:	movw	r0, #0
   17fa4:	str	r0, [fp, #-12]
   17fa8:	b	1818c <__assert_fail@plt+0x69b4>
   17fac:	ldrb	r0, [sp, #111]	; 0x6f
   17fb0:	tst	r0, #1
   17fb4:	beq	180ac <__assert_fail@plt+0x68d4>
   17fb8:	ldr	r0, [sp, #104]	; 0x68
   17fbc:	cmp	r0, #10
   17fc0:	bcc	180ac <__assert_fail@plt+0x68d4>
   17fc4:	ldr	r0, [sp, #100]	; 0x64
   17fc8:	ldr	r1, [sp, #104]	; 0x68
   17fcc:	movw	r2, #5
   17fd0:	mul	r1, r1, r2
   17fd4:	cmp	r0, r1
   17fd8:	bcc	180ac <__assert_fail@plt+0x68d4>
   17fdc:	ldr	r0, [sp, #92]	; 0x5c
   17fe0:	movw	r1, #0
   17fe4:	cmp	r0, r1
   17fe8:	beq	1802c <__assert_fail@plt+0x6854>
   17fec:	ldr	r0, [sp, #92]	; 0x5c
   17ff0:	ldr	r1, [sp, #100]	; 0x64
   17ff4:	ldr	r2, [sp, #96]	; 0x60
   17ff8:	sub	r1, r1, r2
   17ffc:	bl	116d0 <strnlen@plt>
   18000:	ldr	r1, [sp, #92]	; 0x5c
   18004:	add	r0, r1, r0
   18008:	str	r0, [sp, #92]	; 0x5c
   1800c:	ldr	r0, [sp, #92]	; 0x5c
   18010:	ldrb	r0, [r0]
   18014:	cmp	r0, #0
   18018:	bne	18024 <__assert_fail@plt+0x684c>
   1801c:	movw	r0, #0
   18020:	str	r0, [sp, #92]	; 0x5c
   18024:	ldr	r0, [sp, #100]	; 0x64
   18028:	str	r0, [sp, #96]	; 0x60
   1802c:	ldr	r0, [sp, #92]	; 0x5c
   18030:	movw	r1, #0
   18034:	cmp	r0, r1
   18038:	bne	180a8 <__assert_fail@plt+0x68d0>
   1803c:	ldr	r0, [fp, #-16]
   18040:	ldr	r1, [fp, #-20]	; 0xffffffec
   18044:	mvn	r2, #0
   18048:	add	r1, r1, r2
   1804c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18050:	add	r2, r3, r2
   18054:	str	r0, [sp, #12]
   18058:	mov	r0, r2
   1805c:	str	r1, [sp, #8]
   18060:	bl	11634 <strlen@plt>
   18064:	ldr	r1, [sp, #12]
   18068:	str	r0, [sp, #4]
   1806c:	mov	r0, r1
   18070:	ldr	r1, [sp, #8]
   18074:	ldr	r2, [sp, #4]
   18078:	add	r3, sp, #84	; 0x54
   1807c:	bl	187f0 <__assert_fail@plt+0x7018>
   18080:	and	r0, r0, #1
   18084:	strb	r0, [sp, #83]	; 0x53
   18088:	ldrb	r0, [sp, #83]	; 0x53
   1808c:	tst	r0, #1
   18090:	beq	180a0 <__assert_fail@plt+0x68c8>
   18094:	ldr	r0, [sp, #84]	; 0x54
   18098:	str	r0, [fp, #-12]
   1809c:	b	1818c <__assert_fail@plt+0x69b4>
   180a0:	movw	r0, #0
   180a4:	strb	r0, [sp, #111]	; 0x6f
   180a8:	b	180ac <__assert_fail@plt+0x68d4>
   180ac:	ldr	r0, [sp, #104]	; 0x68
   180b0:	add	r0, r0, #1
   180b4:	str	r0, [sp, #104]	; 0x68
   180b8:	ldr	r0, [sp, #100]	; 0x64
   180bc:	add	r0, r0, #1
   180c0:	str	r0, [sp, #100]	; 0x64
   180c4:	ldr	r0, [fp, #-16]
   180c8:	ldrb	r0, [r0]
   180cc:	ldrb	r1, [sp, #91]	; 0x5b
   180d0:	cmp	r0, r1
   180d4:	bne	18170 <__assert_fail@plt+0x6998>
   180d8:	ldr	r0, [fp, #-16]
   180dc:	add	r0, r0, #1
   180e0:	str	r0, [sp, #76]	; 0x4c
   180e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   180e8:	str	r0, [sp, #72]	; 0x48
   180ec:	ldr	r0, [sp, #72]	; 0x48
   180f0:	ldrb	r0, [r0]
   180f4:	cmp	r0, #0
   180f8:	bne	18108 <__assert_fail@plt+0x6930>
   180fc:	ldr	r0, [fp, #-16]
   18100:	str	r0, [fp, #-12]
   18104:	b	1818c <__assert_fail@plt+0x69b4>
   18108:	ldr	r0, [sp, #76]	; 0x4c
   1810c:	ldrb	r0, [r0]
   18110:	cmp	r0, #0
   18114:	bne	18124 <__assert_fail@plt+0x694c>
   18118:	movw	r0, #0
   1811c:	str	r0, [fp, #-12]
   18120:	b	1818c <__assert_fail@plt+0x69b4>
   18124:	ldr	r0, [sp, #100]	; 0x64
   18128:	add	r0, r0, #1
   1812c:	str	r0, [sp, #100]	; 0x64
   18130:	ldr	r0, [sp, #76]	; 0x4c
   18134:	ldrb	r0, [r0]
   18138:	ldr	r1, [sp, #72]	; 0x48
   1813c:	ldrb	r1, [r1]
   18140:	cmp	r0, r1
   18144:	beq	1814c <__assert_fail@plt+0x6974>
   18148:	b	1816c <__assert_fail@plt+0x6994>
   1814c:	b	18150 <__assert_fail@plt+0x6978>
   18150:	ldr	r0, [sp, #76]	; 0x4c
   18154:	add	r0, r0, #1
   18158:	str	r0, [sp, #76]	; 0x4c
   1815c:	ldr	r0, [sp, #72]	; 0x48
   18160:	add	r0, r0, #1
   18164:	str	r0, [sp, #72]	; 0x48
   18168:	b	180ec <__assert_fail@plt+0x6914>
   1816c:	b	18170 <__assert_fail@plt+0x6998>
   18170:	b	18174 <__assert_fail@plt+0x699c>
   18174:	ldr	r0, [fp, #-16]
   18178:	add	r0, r0, #1
   1817c:	str	r0, [fp, #-16]
   18180:	b	17f90 <__assert_fail@plt+0x67b8>
   18184:	ldr	r0, [fp, #-16]
   18188:	str	r0, [fp, #-12]
   1818c:	ldr	r0, [fp, #-12]
   18190:	sub	sp, fp, #8
   18194:	pop	{r4, r5, fp, pc}
   18198:	push	{r4, r5, fp, lr}
   1819c:	add	fp, sp, #8
   181a0:	sub	sp, sp, #264	; 0x108
   181a4:	str	r0, [fp, #-16]
   181a8:	str	r1, [fp, #-20]	; 0xffffffec
   181ac:	str	r2, [fp, #-24]	; 0xffffffe8
   181b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   181b4:	bl	218a4 <__assert_fail@plt+0x100cc>
   181b8:	ldr	r1, [pc, #1580]	; 187ec <__assert_fail@plt+0x7014>
   181bc:	str	r0, [fp, #-28]	; 0xffffffe4
   181c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   181c4:	cmp	r1, r0
   181c8:	bcs	181d8 <__assert_fail@plt+0x6a00>
   181cc:	movw	r0, #0
   181d0:	str	r0, [fp, #-240]	; 0xffffff10
   181d4:	b	18240 <__assert_fail@plt+0x6a68>
   181d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   181dc:	movw	r1, #44	; 0x2c
   181e0:	mul	r0, r0, r1
   181e4:	movw	r1, #4017	; 0xfb1
   181e8:	cmp	r0, r1
   181ec:	bcs	18224 <__assert_fail@plt+0x6a4c>
   181f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   181f4:	mov	r1, #44	; 0x2c
   181f8:	mul	r0, r0, r1
   181fc:	add	r0, r0, #22
   18200:	bic	r0, r0, #6
   18204:	mov	r1, sp
   18208:	sub	r0, r1, r0
   1820c:	mov	sp, r0
   18210:	add	r0, r0, #15
   18214:	mvn	r1, #15
   18218:	and	r0, r0, r1
   1821c:	str	r0, [fp, #-244]	; 0xffffff0c
   18220:	b	18238 <__assert_fail@plt+0x6a60>
   18224:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18228:	movw	r1, #44	; 0x2c
   1822c:	mul	r0, r0, r1
   18230:	bl	215b4 <__assert_fail@plt+0xfddc>
   18234:	str	r0, [fp, #-244]	; 0xffffff0c
   18238:	ldr	r0, [fp, #-244]	; 0xffffff0c
   1823c:	str	r0, [fp, #-240]	; 0xffffff10
   18240:	ldr	r0, [fp, #-240]	; 0xffffff10
   18244:	str	r0, [fp, #-40]	; 0xffffffd8
   18248:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1824c:	movw	r1, #0
   18250:	cmp	r0, r1
   18254:	bne	18268 <__assert_fail@plt+0x6a90>
   18258:	movw	r0, #0
   1825c:	and	r0, r0, #1
   18260:	strb	r0, [fp, #-9]
   18264:	b	187dc <__assert_fail@plt+0x7004>
   18268:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1826c:	str	r0, [fp, #-32]	; 0xffffffe0
   18270:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18274:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18278:	movw	r2, #40	; 0x28
   1827c:	mul	r1, r1, r2
   18280:	add	r0, r0, r1
   18284:	str	r0, [fp, #-44]	; 0xffffffd4
   18288:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1828c:	str	r0, [fp, #-36]	; 0xffffffdc
   18290:	movw	r0, #0
   18294:	str	r0, [fp, #-104]	; 0xffffff98
   18298:	ldr	r0, [fp, #-20]	; 0xffffffec
   1829c:	str	r0, [fp, #-84]	; 0xffffffac
   182a0:	movw	r0, #0
   182a4:	strb	r0, [fp, #-100]	; 0xffffff9c
   182a8:	sub	r1, fp, #100	; 0x64
   182ac:	add	r1, r1, #4
   182b0:	str	r0, [fp, #-248]	; 0xffffff08
   182b4:	mov	r0, r1
   182b8:	ldr	r1, [fp, #-248]	; 0xffffff08
   182bc:	and	r1, r1, #255	; 0xff
   182c0:	movw	r2, #8
   182c4:	bl	11688 <memset@plt>
   182c8:	ldr	r0, [fp, #-248]	; 0xffffff08
   182cc:	strb	r0, [fp, #-88]	; 0xffffffa8
   182d0:	sub	r0, fp, #100	; 0x64
   182d4:	bl	18aac <__assert_fail@plt+0x72d4>
   182d8:	ldrb	r0, [fp, #-76]	; 0xffffffb4
   182dc:	tst	r0, #1
   182e0:	movw	r0, #0
   182e4:	str	r0, [fp, #-252]	; 0xffffff04
   182e8:	beq	18300 <__assert_fail@plt+0x6b28>
   182ec:	ldr	r0, [fp, #-72]	; 0xffffffb8
   182f0:	cmp	r0, #0
   182f4:	movw	r0, #0
   182f8:	moveq	r0, #1
   182fc:	str	r0, [fp, #-252]	; 0xffffff04
   18300:	ldr	r0, [fp, #-252]	; 0xffffff04
   18304:	mvn	r1, #0
   18308:	eor	r0, r0, r1
   1830c:	tst	r0, #1
   18310:	beq	1835c <__assert_fail@plt+0x6b84>
   18314:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18318:	ldr	r1, [fp, #-104]	; 0xffffff98
   1831c:	movw	r2, #40	; 0x28
   18320:	mul	r1, r1, r2
   18324:	add	r0, r0, r1
   18328:	sub	r1, fp, #100	; 0x64
   1832c:	add	r1, r1, #16
   18330:	bl	217a4 <__assert_fail@plt+0xffcc>
   18334:	ldr	r0, [fp, #-80]	; 0xffffffb0
   18338:	ldr	r1, [fp, #-84]	; 0xffffffac
   1833c:	add	r0, r1, r0
   18340:	str	r0, [fp, #-84]	; 0xffffffac
   18344:	movw	r0, #0
   18348:	strb	r0, [fp, #-88]	; 0xffffffa8
   1834c:	ldr	r0, [fp, #-104]	; 0xffffff98
   18350:	add	r0, r0, #1
   18354:	str	r0, [fp, #-104]	; 0xffffff98
   18358:	b	182d0 <__assert_fail@plt+0x6af8>
   1835c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18360:	movw	r1, #1
   18364:	str	r1, [r0, #4]
   18368:	movw	r0, #0
   1836c:	str	r0, [fp, #-112]	; 0xffffff90
   18370:	movw	r0, #2
   18374:	str	r0, [fp, #-108]	; 0xffffff94
   18378:	ldr	r0, [fp, #-108]	; 0xffffff94
   1837c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18380:	cmp	r0, r1
   18384:	bcs	184dc <__assert_fail@plt+0x6d04>
   18388:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1838c:	ldr	r1, [fp, #-108]	; 0xffffff94
   18390:	sub	r1, r1, #1
   18394:	movw	r2, #40	; 0x28
   18398:	mul	r1, r1, r2
   1839c:	add	r0, r0, r1
   183a0:	str	r0, [fp, #-116]	; 0xffffff8c
   183a4:	ldr	r0, [fp, #-116]	; 0xffffff8c
   183a8:	ldrb	r0, [r0, #8]
   183ac:	tst	r0, #1
   183b0:	beq	18400 <__assert_fail@plt+0x6c28>
   183b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   183b8:	ldr	r1, [fp, #-112]	; 0xffffff90
   183bc:	movw	r2, #40	; 0x28
   183c0:	mul	r1, r1, r2
   183c4:	add	r0, r0, r1
   183c8:	ldrb	r0, [r0, #8]
   183cc:	tst	r0, #1
   183d0:	beq	18400 <__assert_fail@plt+0x6c28>
   183d4:	ldr	r0, [fp, #-116]	; 0xffffff8c
   183d8:	ldr	r0, [r0, #12]
   183dc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   183e0:	ldr	r2, [fp, #-112]	; 0xffffff90
   183e4:	movw	r3, #40	; 0x28
   183e8:	mul	r2, r2, r3
   183ec:	add	r1, r1, r2
   183f0:	ldr	r1, [r1, #12]
   183f4:	cmp	r0, r1
   183f8:	beq	1845c <__assert_fail@plt+0x6c84>
   183fc:	b	18484 <__assert_fail@plt+0x6cac>
   18400:	ldr	r0, [fp, #-116]	; 0xffffff8c
   18404:	ldr	r0, [r0, #4]
   18408:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1840c:	ldr	r2, [fp, #-112]	; 0xffffff90
   18410:	movw	r3, #40	; 0x28
   18414:	mul	r2, r2, r3
   18418:	add	r1, r1, r2
   1841c:	ldr	r1, [r1, #4]
   18420:	cmp	r0, r1
   18424:	bne	18484 <__assert_fail@plt+0x6cac>
   18428:	ldr	r0, [fp, #-116]	; 0xffffff8c
   1842c:	ldr	r0, [r0]
   18430:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18434:	ldr	r2, [fp, #-112]	; 0xffffff90
   18438:	movw	r3, #40	; 0x28
   1843c:	mul	r2, r2, r3
   18440:	add	r1, r1, r2
   18444:	ldr	r1, [r1]
   18448:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1844c:	ldr	r2, [r2, #4]
   18450:	bl	114cc <memcmp@plt>
   18454:	cmp	r0, #0
   18458:	bne	18484 <__assert_fail@plt+0x6cac>
   1845c:	ldr	r0, [fp, #-108]	; 0xffffff94
   18460:	ldr	r1, [fp, #-112]	; 0xffffff90
   18464:	add	r1, r1, #1
   18468:	str	r1, [fp, #-112]	; 0xffffff90
   1846c:	sub	r0, r0, r1
   18470:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18474:	ldr	r2, [fp, #-108]	; 0xffffff94
   18478:	add	r1, r1, r2, lsl #2
   1847c:	str	r0, [r1]
   18480:	b	184c8 <__assert_fail@plt+0x6cf0>
   18484:	ldr	r0, [fp, #-112]	; 0xffffff90
   18488:	cmp	r0, #0
   1848c:	bne	184a8 <__assert_fail@plt+0x6cd0>
   18490:	ldr	r0, [fp, #-108]	; 0xffffff94
   18494:	mov	r1, r0
   18498:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1849c:	add	r0, r2, r0, lsl #2
   184a0:	str	r1, [r0]
   184a4:	b	184c8 <__assert_fail@plt+0x6cf0>
   184a8:	ldr	r0, [fp, #-112]	; 0xffffff90
   184ac:	mov	r1, r0
   184b0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   184b4:	add	r0, r2, r0, lsl #2
   184b8:	ldr	r0, [r0]
   184bc:	sub	r0, r1, r0
   184c0:	str	r0, [fp, #-112]	; 0xffffff90
   184c4:	b	183a4 <__assert_fail@plt+0x6bcc>
   184c8:	b	184cc <__assert_fail@plt+0x6cf4>
   184cc:	ldr	r0, [fp, #-108]	; 0xffffff94
   184d0:	add	r0, r0, #1
   184d4:	str	r0, [fp, #-108]	; 0xffffff94
   184d8:	b	18378 <__assert_fail@plt+0x6ba0>
   184dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184e0:	movw	r1, #0
   184e4:	str	r1, [r0]
   184e8:	str	r1, [fp, #-120]	; 0xffffff88
   184ec:	ldr	r0, [fp, #-16]
   184f0:	str	r0, [fp, #-160]	; 0xffffff60
   184f4:	movw	r0, #0
   184f8:	strb	r0, [fp, #-176]	; 0xffffff50
   184fc:	sub	r1, fp, #176	; 0xb0
   18500:	add	r1, r1, #4
   18504:	str	r0, [fp, #-256]	; 0xffffff00
   18508:	mov	r0, r1
   1850c:	ldr	r1, [fp, #-256]	; 0xffffff00
   18510:	and	r1, r1, #255	; 0xff
   18514:	movw	r2, #8
   18518:	str	r2, [fp, #-260]	; 0xfffffefc
   1851c:	bl	11688 <memset@plt>
   18520:	ldr	r0, [fp, #-256]	; 0xffffff00
   18524:	strb	r0, [fp, #-164]	; 0xffffff5c
   18528:	ldr	r1, [fp, #-16]
   1852c:	str	r1, [fp, #-216]	; 0xffffff28
   18530:	strb	r0, [fp, #-232]	; 0xffffff18
   18534:	sub	r1, fp, #232	; 0xe8
   18538:	add	r1, r1, #4
   1853c:	mov	r0, r1
   18540:	ldr	r1, [fp, #-256]	; 0xffffff00
   18544:	and	r1, r1, #255	; 0xff
   18548:	ldr	r2, [fp, #-260]	; 0xfffffefc
   1854c:	bl	11688 <memset@plt>
   18550:	ldr	r0, [fp, #-256]	; 0xffffff00
   18554:	strb	r0, [fp, #-220]	; 0xffffff24
   18558:	sub	r0, fp, #232	; 0xe8
   1855c:	bl	18aac <__assert_fail@plt+0x72d4>
   18560:	ldrb	r0, [fp, #-208]	; 0xffffff30
   18564:	tst	r0, #1
   18568:	movw	r0, #0
   1856c:	str	r0, [fp, #-264]	; 0xfffffef8
   18570:	beq	18588 <__assert_fail@plt+0x6db0>
   18574:	ldr	r0, [fp, #-204]	; 0xffffff34
   18578:	cmp	r0, #0
   1857c:	movw	r0, #0
   18580:	moveq	r0, #1
   18584:	str	r0, [fp, #-264]	; 0xfffffef8
   18588:	ldr	r0, [fp, #-264]	; 0xfffffef8
   1858c:	mvn	r1, #0
   18590:	eor	r0, r0, r1
   18594:	tst	r0, #1
   18598:	beq	187c8 <__assert_fail@plt+0x6ff0>
   1859c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   185a0:	ldr	r1, [fp, #-120]	; 0xffffff88
   185a4:	movw	r2, #40	; 0x28
   185a8:	mul	r1, r1, r2
   185ac:	add	r0, r0, r1
   185b0:	ldrb	r0, [r0, #8]
   185b4:	tst	r0, #1
   185b8:	beq	185f0 <__assert_fail@plt+0x6e18>
   185bc:	ldrb	r0, [fp, #-208]	; 0xffffff30
   185c0:	tst	r0, #1
   185c4:	beq	185f0 <__assert_fail@plt+0x6e18>
   185c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   185cc:	ldr	r1, [fp, #-120]	; 0xffffff88
   185d0:	movw	r2, #40	; 0x28
   185d4:	mul	r1, r1, r2
   185d8:	add	r0, r0, r1
   185dc:	ldr	r0, [r0, #12]
   185e0:	ldr	r1, [fp, #-204]	; 0xffffff34
   185e4:	cmp	r0, r1
   185e8:	beq	18650 <__assert_fail@plt+0x6e78>
   185ec:	b	18698 <__assert_fail@plt+0x6ec0>
   185f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   185f4:	ldr	r1, [fp, #-120]	; 0xffffff88
   185f8:	movw	r2, #40	; 0x28
   185fc:	mul	r1, r1, r2
   18600:	add	r0, r0, r1
   18604:	ldr	r0, [r0, #4]
   18608:	ldr	r1, [fp, #-212]	; 0xffffff2c
   1860c:	cmp	r0, r1
   18610:	bne	18698 <__assert_fail@plt+0x6ec0>
   18614:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18618:	ldr	r1, [fp, #-120]	; 0xffffff88
   1861c:	movw	r2, #40	; 0x28
   18620:	mul	r1, r1, r2
   18624:	add	r0, r0, r1
   18628:	ldr	r0, [r0]
   1862c:	ldr	r1, [fp, #-216]	; 0xffffff28
   18630:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18634:	ldr	ip, [fp, #-120]	; 0xffffff88
   18638:	mul	r2, ip, r2
   1863c:	add	r2, r3, r2
   18640:	ldr	r2, [r2, #4]
   18644:	bl	114cc <memcmp@plt>
   18648:	cmp	r0, #0
   1864c:	bne	18698 <__assert_fail@plt+0x6ec0>
   18650:	ldr	r0, [fp, #-120]	; 0xffffff88
   18654:	add	r0, r0, #1
   18658:	str	r0, [fp, #-120]	; 0xffffff88
   1865c:	ldr	r0, [fp, #-212]	; 0xffffff2c
   18660:	ldr	r1, [fp, #-216]	; 0xffffff28
   18664:	add	r0, r1, r0
   18668:	str	r0, [fp, #-216]	; 0xffffff28
   1866c:	movw	r0, #0
   18670:	strb	r0, [fp, #-220]	; 0xffffff24
   18674:	ldr	r0, [fp, #-120]	; 0xffffff88
   18678:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1867c:	cmp	r0, r1
   18680:	bne	18694 <__assert_fail@plt+0x6ebc>
   18684:	ldr	r0, [fp, #-160]	; 0xffffff60
   18688:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1868c:	str	r0, [r1]
   18690:	b	187c8 <__assert_fail@plt+0x6ff0>
   18694:	b	187c4 <__assert_fail@plt+0x6fec>
   18698:	ldr	r0, [fp, #-120]	; 0xffffff88
   1869c:	cmp	r0, #0
   186a0:	bls	1874c <__assert_fail@plt+0x6f74>
   186a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   186a8:	ldr	r1, [fp, #-120]	; 0xffffff88
   186ac:	add	r0, r0, r1, lsl #2
   186b0:	ldr	r0, [r0]
   186b4:	str	r0, [fp, #-236]	; 0xffffff14
   186b8:	ldr	r0, [fp, #-236]	; 0xffffff14
   186bc:	ldr	r1, [fp, #-120]	; 0xffffff88
   186c0:	sub	r0, r1, r0
   186c4:	str	r0, [fp, #-120]	; 0xffffff88
   186c8:	ldr	r0, [fp, #-236]	; 0xffffff14
   186cc:	cmp	r0, #0
   186d0:	bls	18748 <__assert_fail@plt+0x6f70>
   186d4:	sub	r0, fp, #176	; 0xb0
   186d8:	bl	18aac <__assert_fail@plt+0x72d4>
   186dc:	ldrb	r0, [fp, #-152]	; 0xffffff68
   186e0:	tst	r0, #1
   186e4:	movw	r0, #0
   186e8:	str	r0, [fp, #-268]	; 0xfffffef4
   186ec:	beq	18704 <__assert_fail@plt+0x6f2c>
   186f0:	ldr	r0, [fp, #-148]	; 0xffffff6c
   186f4:	cmp	r0, #0
   186f8:	movw	r0, #0
   186fc:	moveq	r0, #1
   18700:	str	r0, [fp, #-268]	; 0xfffffef4
   18704:	ldr	r0, [fp, #-268]	; 0xfffffef4
   18708:	mvn	r1, #0
   1870c:	eor	r0, r0, r1
   18710:	tst	r0, #1
   18714:	bne	1871c <__assert_fail@plt+0x6f44>
   18718:	bl	117a8 <abort@plt>
   1871c:	ldr	r0, [fp, #-156]	; 0xffffff64
   18720:	ldr	r1, [fp, #-160]	; 0xffffff60
   18724:	add	r0, r1, r0
   18728:	str	r0, [fp, #-160]	; 0xffffff60
   1872c:	movw	r0, #0
   18730:	strb	r0, [fp, #-164]	; 0xffffff5c
   18734:	ldr	r0, [fp, #-236]	; 0xffffff14
   18738:	mvn	r1, #0
   1873c:	add	r0, r0, r1
   18740:	str	r0, [fp, #-236]	; 0xffffff14
   18744:	b	186c8 <__assert_fail@plt+0x6ef0>
   18748:	b	187c0 <__assert_fail@plt+0x6fe8>
   1874c:	sub	r0, fp, #176	; 0xb0
   18750:	bl	18aac <__assert_fail@plt+0x72d4>
   18754:	ldrb	r0, [fp, #-152]	; 0xffffff68
   18758:	tst	r0, #1
   1875c:	movw	r0, #0
   18760:	str	r0, [fp, #-272]	; 0xfffffef0
   18764:	beq	1877c <__assert_fail@plt+0x6fa4>
   18768:	ldr	r0, [fp, #-148]	; 0xffffff6c
   1876c:	cmp	r0, #0
   18770:	movw	r0, #0
   18774:	moveq	r0, #1
   18778:	str	r0, [fp, #-272]	; 0xfffffef0
   1877c:	ldr	r0, [fp, #-272]	; 0xfffffef0
   18780:	mvn	r1, #0
   18784:	eor	r0, r0, r1
   18788:	tst	r0, #1
   1878c:	bne	18794 <__assert_fail@plt+0x6fbc>
   18790:	bl	117a8 <abort@plt>
   18794:	ldr	r0, [fp, #-156]	; 0xffffff64
   18798:	ldr	r1, [fp, #-160]	; 0xffffff60
   1879c:	add	r0, r1, r0
   187a0:	str	r0, [fp, #-160]	; 0xffffff60
   187a4:	movw	r0, #0
   187a8:	strb	r0, [fp, #-164]	; 0xffffff5c
   187ac:	ldr	r1, [fp, #-212]	; 0xffffff2c
   187b0:	ldr	r2, [fp, #-216]	; 0xffffff28
   187b4:	add	r1, r2, r1
   187b8:	str	r1, [fp, #-216]	; 0xffffff28
   187bc:	strb	r0, [fp, #-220]	; 0xffffff24
   187c0:	b	187c4 <__assert_fail@plt+0x6fec>
   187c4:	b	18558 <__assert_fail@plt+0x6d80>
   187c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   187cc:	bl	216d8 <__assert_fail@plt+0xff00>
   187d0:	movw	r0, #1
   187d4:	and	r0, r0, #1
   187d8:	strb	r0, [fp, #-9]
   187dc:	ldrb	r0, [fp, #-9]
   187e0:	and	r0, r0, #1
   187e4:	sub	sp, fp, #8
   187e8:	pop	{r4, r5, fp, pc}
   187ec:	rsceq	fp, r8, #188416	; 0x2e000
   187f0:	push	{r4, r5, fp, lr}
   187f4:	add	fp, sp, #8
   187f8:	sub	sp, sp, #64	; 0x40
   187fc:	ldr	ip, [pc, #676]	; 18aa8 <__assert_fail@plt+0x72d0>
   18800:	str	r0, [fp, #-16]
   18804:	str	r1, [fp, #-20]	; 0xffffffec
   18808:	str	r2, [fp, #-24]	; 0xffffffe8
   1880c:	str	r3, [fp, #-28]	; 0xffffffe4
   18810:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18814:	str	r0, [fp, #-32]	; 0xffffffe0
   18818:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1881c:	cmp	ip, r0
   18820:	bcs	18830 <__assert_fail@plt+0x7058>
   18824:	movw	r0, #0
   18828:	str	r0, [fp, #-64]	; 0xffffffc0
   1882c:	b	1888c <__assert_fail@plt+0x70b4>
   18830:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18834:	lsl	r0, r0, #2
   18838:	movw	r1, #4017	; 0xfb1
   1883c:	cmp	r0, r1
   18840:	bcs	18874 <__assert_fail@plt+0x709c>
   18844:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18848:	mov	r1, #22
   1884c:	add	r0, r1, r0, lsl #2
   18850:	bic	r0, r0, #6
   18854:	mov	r1, sp
   18858:	sub	r0, r1, r0
   1885c:	mov	sp, r0
   18860:	add	r0, r0, #15
   18864:	mvn	r1, #15
   18868:	and	r0, r0, r1
   1886c:	str	r0, [fp, #-68]	; 0xffffffbc
   18870:	b	18884 <__assert_fail@plt+0x70ac>
   18874:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18878:	lsl	r0, r0, #2
   1887c:	bl	215b4 <__assert_fail@plt+0xfddc>
   18880:	str	r0, [fp, #-68]	; 0xffffffbc
   18884:	ldr	r0, [fp, #-68]	; 0xffffffbc
   18888:	str	r0, [fp, #-64]	; 0xffffffc0
   1888c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   18890:	str	r0, [fp, #-36]	; 0xffffffdc
   18894:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18898:	movw	r1, #0
   1889c:	cmp	r0, r1
   188a0:	bne	188b4 <__assert_fail@plt+0x70dc>
   188a4:	movw	r0, #0
   188a8:	and	r0, r0, #1
   188ac:	strb	r0, [fp, #-9]
   188b0:	b	18a98 <__assert_fail@plt+0x72c0>
   188b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   188b8:	movw	r1, #1
   188bc:	str	r1, [r0, #4]
   188c0:	movw	r0, #0
   188c4:	str	r0, [fp, #-44]	; 0xffffffd4
   188c8:	movw	r0, #2
   188cc:	str	r0, [fp, #-40]	; 0xffffffd8
   188d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   188d4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   188d8:	cmp	r0, r1
   188dc:	bcs	18994 <__assert_fail@plt+0x71bc>
   188e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   188e4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   188e8:	sub	r1, r1, #1
   188ec:	add	r0, r0, r1
   188f0:	ldrb	r0, [r0]
   188f4:	strb	r0, [fp, #-45]	; 0xffffffd3
   188f8:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   188fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   18900:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18904:	add	r1, r1, r2
   18908:	ldrb	r1, [r1]
   1890c:	cmp	r0, r1
   18910:	bne	1893c <__assert_fail@plt+0x7164>
   18914:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18918:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1891c:	add	r1, r1, #1
   18920:	str	r1, [fp, #-44]	; 0xffffffd4
   18924:	sub	r0, r0, r1
   18928:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1892c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18930:	add	r1, r1, r2, lsl #2
   18934:	str	r0, [r1]
   18938:	b	18980 <__assert_fail@plt+0x71a8>
   1893c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18940:	cmp	r0, #0
   18944:	bne	18960 <__assert_fail@plt+0x7188>
   18948:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1894c:	mov	r1, r0
   18950:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18954:	add	r0, r2, r0, lsl #2
   18958:	str	r1, [r0]
   1895c:	b	18980 <__assert_fail@plt+0x71a8>
   18960:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18964:	mov	r1, r0
   18968:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1896c:	add	r0, r2, r0, lsl #2
   18970:	ldr	r0, [r0]
   18974:	sub	r0, r1, r0
   18978:	str	r0, [fp, #-44]	; 0xffffffd4
   1897c:	b	188f8 <__assert_fail@plt+0x7120>
   18980:	b	18984 <__assert_fail@plt+0x71ac>
   18984:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18988:	add	r0, r0, #1
   1898c:	str	r0, [fp, #-40]	; 0xffffffd8
   18990:	b	188d0 <__assert_fail@plt+0x70f8>
   18994:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18998:	movw	r1, #0
   1899c:	str	r1, [r0]
   189a0:	str	r1, [fp, #-52]	; 0xffffffcc
   189a4:	ldr	r0, [fp, #-16]
   189a8:	str	r0, [fp, #-56]	; 0xffffffc8
   189ac:	ldr	r0, [fp, #-16]
   189b0:	str	r0, [fp, #-60]	; 0xffffffc4
   189b4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   189b8:	ldrb	r0, [r0]
   189bc:	cmp	r0, #0
   189c0:	beq	18a84 <__assert_fail@plt+0x72ac>
   189c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   189c8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   189cc:	add	r0, r0, r1
   189d0:	ldrb	r0, [r0]
   189d4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   189d8:	ldrb	r1, [r1]
   189dc:	cmp	r0, r1
   189e0:	bne	18a20 <__assert_fail@plt+0x7248>
   189e4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   189e8:	add	r0, r0, #1
   189ec:	str	r0, [fp, #-52]	; 0xffffffcc
   189f0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   189f4:	add	r0, r0, #1
   189f8:	str	r0, [fp, #-60]	; 0xffffffc4
   189fc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18a00:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18a04:	cmp	r0, r1
   18a08:	bne	18a1c <__assert_fail@plt+0x7244>
   18a0c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18a10:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18a14:	str	r0, [r1]
   18a18:	b	18a84 <__assert_fail@plt+0x72ac>
   18a1c:	b	18a80 <__assert_fail@plt+0x72a8>
   18a20:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18a24:	cmp	r0, #0
   18a28:	bls	18a64 <__assert_fail@plt+0x728c>
   18a2c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18a30:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18a34:	ldr	r0, [r0, r1, lsl #2]
   18a38:	ldr	r1, [fp, #-56]	; 0xffffffc8
   18a3c:	add	r0, r1, r0
   18a40:	str	r0, [fp, #-56]	; 0xffffffc8
   18a44:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18a48:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18a4c:	add	r0, r0, r1, lsl #2
   18a50:	ldr	r0, [r0]
   18a54:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18a58:	sub	r0, r1, r0
   18a5c:	str	r0, [fp, #-52]	; 0xffffffcc
   18a60:	b	18a7c <__assert_fail@plt+0x72a4>
   18a64:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18a68:	add	r0, r0, #1
   18a6c:	str	r0, [fp, #-56]	; 0xffffffc8
   18a70:	ldr	r0, [fp, #-60]	; 0xffffffc4
   18a74:	add	r0, r0, #1
   18a78:	str	r0, [fp, #-60]	; 0xffffffc4
   18a7c:	b	18a80 <__assert_fail@plt+0x72a8>
   18a80:	b	189b4 <__assert_fail@plt+0x71dc>
   18a84:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18a88:	bl	216d8 <__assert_fail@plt+0xff00>
   18a8c:	movw	r0, #1
   18a90:	and	r0, r0, #1
   18a94:	strb	r0, [fp, #-9]
   18a98:	ldrb	r0, [fp, #-9]
   18a9c:	and	r0, r0, #1
   18aa0:	sub	sp, fp, #8
   18aa4:	pop	{r4, r5, fp, pc}
   18aa8:	svcne	0x00ffffff
   18aac:	push	{fp, lr}
   18ab0:	mov	fp, sp
   18ab4:	sub	sp, sp, #24
   18ab8:	str	r0, [fp, #-4]
   18abc:	ldr	r0, [fp, #-4]
   18ac0:	ldrb	r0, [r0, #12]
   18ac4:	tst	r0, #1
   18ac8:	beq	18ad0 <__assert_fail@plt+0x72f8>
   18acc:	b	18d08 <__assert_fail@plt+0x7530>
   18ad0:	ldr	r0, [fp, #-4]
   18ad4:	ldrb	r0, [r0]
   18ad8:	tst	r0, #1
   18adc:	beq	18ae4 <__assert_fail@plt+0x730c>
   18ae0:	b	18b70 <__assert_fail@plt+0x7398>
   18ae4:	ldr	r0, [fp, #-4]
   18ae8:	ldr	r0, [r0, #16]
   18aec:	ldrb	r0, [r0]
   18af0:	bl	21854 <__assert_fail@plt+0x1007c>
   18af4:	tst	r0, #1
   18af8:	beq	18b2c <__assert_fail@plt+0x7354>
   18afc:	ldr	r0, [fp, #-4]
   18b00:	movw	r1, #1
   18b04:	str	r1, [r0, #20]
   18b08:	ldr	r0, [fp, #-4]
   18b0c:	ldr	r0, [r0, #16]
   18b10:	ldrb	r0, [r0]
   18b14:	ldr	r1, [fp, #-4]
   18b18:	str	r0, [r1, #28]
   18b1c:	ldr	r0, [fp, #-4]
   18b20:	movw	r1, #1
   18b24:	strb	r1, [r0, #24]
   18b28:	b	18cfc <__assert_fail@plt+0x7524>
   18b2c:	ldr	r0, [fp, #-4]
   18b30:	add	r0, r0, #4
   18b34:	bl	114b4 <mbsinit@plt>
   18b38:	cmp	r0, #0
   18b3c:	beq	18b44 <__assert_fail@plt+0x736c>
   18b40:	b	18b64 <__assert_fail@plt+0x738c>
   18b44:	movw	r0, #17345	; 0x43c1
   18b48:	movt	r0, #2
   18b4c:	movw	r1, #17368	; 0x43d8
   18b50:	movt	r1, #2
   18b54:	movw	r2, #143	; 0x8f
   18b58:	movw	r3, #17380	; 0x43e4
   18b5c:	movt	r3, #2
   18b60:	bl	117d8 <__assert_fail@plt>
   18b64:	ldr	r0, [fp, #-4]
   18b68:	movw	r1, #1
   18b6c:	strb	r1, [r0]
   18b70:	ldr	r0, [fp, #-4]
   18b74:	add	r0, r0, #16
   18b78:	add	r0, r0, #12
   18b7c:	ldr	r1, [fp, #-4]
   18b80:	ldr	r1, [r1, #16]
   18b84:	ldr	r2, [fp, #-4]
   18b88:	ldr	r2, [r2, #16]
   18b8c:	str	r0, [fp, #-8]
   18b90:	str	r1, [sp, #12]
   18b94:	str	r2, [sp, #8]
   18b98:	bl	1155c <__ctype_get_mb_cur_max@plt>
   18b9c:	ldr	r1, [sp, #8]
   18ba0:	str	r0, [sp, #4]
   18ba4:	mov	r0, r1
   18ba8:	ldr	r1, [sp, #4]
   18bac:	bl	1b610 <__assert_fail@plt+0x9e38>
   18bb0:	ldr	r1, [fp, #-4]
   18bb4:	add	r3, r1, #4
   18bb8:	ldr	r1, [fp, #-8]
   18bbc:	str	r0, [sp]
   18bc0:	mov	r0, r1
   18bc4:	ldr	r1, [sp, #12]
   18bc8:	ldr	r2, [sp]
   18bcc:	bl	1fccc <__assert_fail@plt+0xe4f4>
   18bd0:	ldr	r1, [fp, #-4]
   18bd4:	str	r0, [r1, #20]
   18bd8:	ldr	r0, [fp, #-4]
   18bdc:	ldr	r0, [r0, #20]
   18be0:	cmn	r0, #1
   18be4:	bne	18c04 <__assert_fail@plt+0x742c>
   18be8:	ldr	r0, [fp, #-4]
   18bec:	movw	r1, #1
   18bf0:	str	r1, [r0, #20]
   18bf4:	ldr	r0, [fp, #-4]
   18bf8:	movw	r1, #0
   18bfc:	strb	r1, [r0, #24]
   18c00:	b	18cf8 <__assert_fail@plt+0x7520>
   18c04:	ldr	r0, [fp, #-4]
   18c08:	ldr	r0, [r0, #20]
   18c0c:	cmn	r0, #2
   18c10:	bne	18c38 <__assert_fail@plt+0x7460>
   18c14:	ldr	r0, [fp, #-4]
   18c18:	ldr	r0, [r0, #16]
   18c1c:	bl	11634 <strlen@plt>
   18c20:	ldr	r1, [fp, #-4]
   18c24:	str	r0, [r1, #20]
   18c28:	ldr	r0, [fp, #-4]
   18c2c:	movw	r1, #0
   18c30:	strb	r1, [r0, #24]
   18c34:	b	18cf4 <__assert_fail@plt+0x751c>
   18c38:	ldr	r0, [fp, #-4]
   18c3c:	ldr	r0, [r0, #20]
   18c40:	cmp	r0, #0
   18c44:	bne	18cc4 <__assert_fail@plt+0x74ec>
   18c48:	ldr	r0, [fp, #-4]
   18c4c:	movw	r1, #1
   18c50:	str	r1, [r0, #20]
   18c54:	ldr	r0, [fp, #-4]
   18c58:	ldr	r0, [r0, #16]
   18c5c:	ldrb	r0, [r0]
   18c60:	cmp	r0, #0
   18c64:	bne	18c6c <__assert_fail@plt+0x7494>
   18c68:	b	18c8c <__assert_fail@plt+0x74b4>
   18c6c:	movw	r0, #17428	; 0x4414
   18c70:	movt	r0, #2
   18c74:	movw	r1, #17368	; 0x43d8
   18c78:	movt	r1, #2
   18c7c:	movw	r2, #171	; 0xab
   18c80:	movw	r3, #17380	; 0x43e4
   18c84:	movt	r3, #2
   18c88:	bl	117d8 <__assert_fail@plt>
   18c8c:	ldr	r0, [fp, #-4]
   18c90:	ldr	r0, [r0, #28]
   18c94:	cmp	r0, #0
   18c98:	bne	18ca0 <__assert_fail@plt+0x74c8>
   18c9c:	b	18cc0 <__assert_fail@plt+0x74e8>
   18ca0:	movw	r0, #17451	; 0x442b
   18ca4:	movt	r0, #2
   18ca8:	movw	r1, #17368	; 0x43d8
   18cac:	movt	r1, #2
   18cb0:	movw	r2, #172	; 0xac
   18cb4:	movw	r3, #17380	; 0x43e4
   18cb8:	movt	r3, #2
   18cbc:	bl	117d8 <__assert_fail@plt>
   18cc0:	b	18cc4 <__assert_fail@plt+0x74ec>
   18cc4:	ldr	r0, [fp, #-4]
   18cc8:	movw	r1, #1
   18ccc:	strb	r1, [r0, #24]
   18cd0:	ldr	r0, [fp, #-4]
   18cd4:	add	r0, r0, #4
   18cd8:	bl	114b4 <mbsinit@plt>
   18cdc:	cmp	r0, #0
   18ce0:	beq	18cf0 <__assert_fail@plt+0x7518>
   18ce4:	ldr	r0, [fp, #-4]
   18ce8:	movw	r1, #0
   18cec:	strb	r1, [r0]
   18cf0:	b	18cf4 <__assert_fail@plt+0x751c>
   18cf4:	b	18cf8 <__assert_fail@plt+0x7520>
   18cf8:	b	18cfc <__assert_fail@plt+0x7524>
   18cfc:	ldr	r0, [fp, #-4]
   18d00:	movw	r1, #1
   18d04:	strb	r1, [r0, #12]
   18d08:	mov	sp, fp
   18d0c:	pop	{fp, pc}
   18d10:	sub	sp, sp, #8
   18d14:	str	r0, [sp, #4]
   18d18:	str	r1, [sp]
   18d1c:	ldr	r0, [sp]
   18d20:	ldr	r1, [sp, #4]
   18d24:	ldr	r2, [r1, #16]
   18d28:	add	r0, r2, r0
   18d2c:	str	r0, [r1, #16]
   18d30:	add	sp, sp, #8
   18d34:	bx	lr
   18d38:	push	{fp, lr}
   18d3c:	mov	fp, sp
   18d40:	sub	sp, sp, #8
   18d44:	str	r0, [sp, #4]
   18d48:	str	r1, [sp]
   18d4c:	ldr	r0, [sp]
   18d50:	ldrb	r0, [r0]
   18d54:	ldr	r1, [sp, #4]
   18d58:	and	r2, r0, #1
   18d5c:	strb	r2, [r1]
   18d60:	tst	r0, #1
   18d64:	beq	18d84 <__assert_fail@plt+0x75ac>
   18d68:	ldr	r0, [sp, #4]
   18d6c:	ldr	r1, [sp]
   18d70:	ldr	r2, [r1, #4]
   18d74:	str	r2, [r0, #4]
   18d78:	ldr	r1, [r1, #8]
   18d7c:	str	r1, [r0, #8]
   18d80:	b	18d9c <__assert_fail@plt+0x75c4>
   18d84:	ldr	r0, [sp, #4]
   18d88:	add	r0, r0, #4
   18d8c:	movw	r1, #0
   18d90:	and	r1, r1, #255	; 0xff
   18d94:	movw	r2, #8
   18d98:	bl	11688 <memset@plt>
   18d9c:	ldr	r0, [sp]
   18da0:	ldrb	r0, [r0, #12]
   18da4:	ldr	r1, [sp, #4]
   18da8:	and	r0, r0, #1
   18dac:	strb	r0, [r1, #12]
   18db0:	ldr	r0, [sp, #4]
   18db4:	add	r0, r0, #16
   18db8:	ldr	r1, [sp]
   18dbc:	add	r1, r1, #16
   18dc0:	bl	217a4 <__assert_fail@plt+0xffcc>
   18dc4:	mov	sp, fp
   18dc8:	pop	{fp, pc}
   18dcc:	push	{fp, lr}
   18dd0:	mov	fp, sp
   18dd4:	sub	sp, sp, #24
   18dd8:	str	r0, [fp, #-4]
   18ddc:	ldr	r0, [fp, #-4]
   18de0:	movw	r1, #0
   18de4:	cmp	r0, r1
   18de8:	bne	18e0c <__assert_fail@plt+0x7634>
   18dec:	movw	r0, #20944	; 0x51d0
   18df0:	movt	r0, #3
   18df4:	ldr	r1, [r0]
   18df8:	movw	r0, #17469	; 0x443d
   18dfc:	movt	r0, #2
   18e00:	bl	11790 <fputs@plt>
   18e04:	str	r0, [sp, #8]
   18e08:	bl	117a8 <abort@plt>
   18e0c:	ldr	r0, [fp, #-4]
   18e10:	movw	r1, #47	; 0x2f
   18e14:	bl	11724 <strrchr@plt>
   18e18:	str	r0, [fp, #-8]
   18e1c:	ldr	r0, [fp, #-8]
   18e20:	movw	r1, #0
   18e24:	cmp	r0, r1
   18e28:	beq	18e3c <__assert_fail@plt+0x7664>
   18e2c:	ldr	r0, [fp, #-8]
   18e30:	add	r0, r0, #1
   18e34:	str	r0, [sp, #4]
   18e38:	b	18e44 <__assert_fail@plt+0x766c>
   18e3c:	ldr	r0, [fp, #-4]
   18e40:	str	r0, [sp, #4]
   18e44:	ldr	r0, [sp, #4]
   18e48:	str	r0, [sp, #12]
   18e4c:	ldr	r0, [sp, #12]
   18e50:	ldr	r1, [fp, #-4]
   18e54:	sub	r0, r0, r1
   18e58:	cmp	r0, #7
   18e5c:	blt	18ec8 <__assert_fail@plt+0x76f0>
   18e60:	ldr	r0, [sp, #12]
   18e64:	mvn	r1, #6
   18e68:	add	r0, r0, r1
   18e6c:	movw	r1, #17525	; 0x4475
   18e70:	movt	r1, #2
   18e74:	movw	r2, #7
   18e78:	bl	1179c <strncmp@plt>
   18e7c:	cmp	r0, #0
   18e80:	bne	18ec8 <__assert_fail@plt+0x76f0>
   18e84:	ldr	r0, [sp, #12]
   18e88:	str	r0, [fp, #-4]
   18e8c:	ldr	r0, [sp, #12]
   18e90:	movw	r1, #17533	; 0x447d
   18e94:	movt	r1, #2
   18e98:	movw	r2, #3
   18e9c:	bl	1179c <strncmp@plt>
   18ea0:	cmp	r0, #0
   18ea4:	bne	18ec4 <__assert_fail@plt+0x76ec>
   18ea8:	ldr	r0, [sp, #12]
   18eac:	add	r0, r0, #3
   18eb0:	str	r0, [fp, #-4]
   18eb4:	ldr	r0, [fp, #-4]
   18eb8:	movw	r1, #20920	; 0x51b8
   18ebc:	movt	r1, #3
   18ec0:	str	r0, [r1]
   18ec4:	b	18ec8 <__assert_fail@plt+0x76f0>
   18ec8:	ldr	r0, [fp, #-4]
   18ecc:	movw	r1, #21168	; 0x52b0
   18ed0:	movt	r1, #3
   18ed4:	str	r0, [r1]
   18ed8:	ldr	r0, [fp, #-4]
   18edc:	movw	r1, #20928	; 0x51c0
   18ee0:	movt	r1, #3
   18ee4:	str	r0, [r1]
   18ee8:	mov	sp, fp
   18eec:	pop	{fp, pc}
   18ef0:	push	{fp, lr}
   18ef4:	mov	fp, sp
   18ef8:	sub	sp, sp, #24
   18efc:	str	r0, [fp, #-4]
   18f00:	bl	11664 <__errno_location@plt>
   18f04:	ldr	r0, [r0]
   18f08:	str	r0, [fp, #-8]
   18f0c:	ldr	r0, [fp, #-4]
   18f10:	movw	r1, #0
   18f14:	cmp	r0, r1
   18f18:	beq	18f28 <__assert_fail@plt+0x7750>
   18f1c:	ldr	r0, [fp, #-4]
   18f20:	str	r0, [sp, #8]
   18f24:	b	18f38 <__assert_fail@plt+0x7760>
   18f28:	movw	r0, #21172	; 0x52b4
   18f2c:	movt	r0, #3
   18f30:	str	r0, [sp, #8]
   18f34:	b	18f38 <__assert_fail@plt+0x7760>
   18f38:	ldr	r0, [sp, #8]
   18f3c:	movw	r1, #48	; 0x30
   18f40:	bl	1ecd4 <__assert_fail@plt+0xd4fc>
   18f44:	str	r0, [sp, #12]
   18f48:	ldr	r0, [fp, #-8]
   18f4c:	str	r0, [sp, #4]
   18f50:	bl	11664 <__errno_location@plt>
   18f54:	ldr	r1, [sp, #4]
   18f58:	str	r1, [r0]
   18f5c:	ldr	r0, [sp, #12]
   18f60:	mov	sp, fp
   18f64:	pop	{fp, pc}
   18f68:	sub	sp, sp, #8
   18f6c:	str	r0, [sp, #4]
   18f70:	ldr	r0, [sp, #4]
   18f74:	movw	r1, #0
   18f78:	cmp	r0, r1
   18f7c:	beq	18f8c <__assert_fail@plt+0x77b4>
   18f80:	ldr	r0, [sp, #4]
   18f84:	str	r0, [sp]
   18f88:	b	18f9c <__assert_fail@plt+0x77c4>
   18f8c:	movw	r0, #21172	; 0x52b4
   18f90:	movt	r0, #3
   18f94:	str	r0, [sp]
   18f98:	b	18f9c <__assert_fail@plt+0x77c4>
   18f9c:	ldr	r0, [sp]
   18fa0:	ldr	r0, [r0]
   18fa4:	add	sp, sp, #8
   18fa8:	bx	lr
   18fac:	sub	sp, sp, #16
   18fb0:	str	r0, [sp, #12]
   18fb4:	str	r1, [sp, #8]
   18fb8:	ldr	r0, [sp, #8]
   18fbc:	ldr	r1, [sp, #12]
   18fc0:	movw	r2, #0
   18fc4:	cmp	r1, r2
   18fc8:	str	r0, [sp, #4]
   18fcc:	beq	18fdc <__assert_fail@plt+0x7804>
   18fd0:	ldr	r0, [sp, #12]
   18fd4:	str	r0, [sp]
   18fd8:	b	18fec <__assert_fail@plt+0x7814>
   18fdc:	movw	r0, #21172	; 0x52b4
   18fe0:	movt	r0, #3
   18fe4:	str	r0, [sp]
   18fe8:	b	18fec <__assert_fail@plt+0x7814>
   18fec:	ldr	r0, [sp]
   18ff0:	ldr	r1, [sp, #4]
   18ff4:	str	r1, [r0]
   18ff8:	add	sp, sp, #16
   18ffc:	bx	lr
   19000:	sub	sp, sp, #32
   19004:	str	r0, [sp, #28]
   19008:	strb	r1, [sp, #27]
   1900c:	str	r2, [sp, #20]
   19010:	ldrb	r0, [sp, #27]
   19014:	strb	r0, [sp, #19]
   19018:	ldr	r0, [sp, #28]
   1901c:	movw	r1, #0
   19020:	cmp	r0, r1
   19024:	beq	19034 <__assert_fail@plt+0x785c>
   19028:	ldr	r0, [sp, #28]
   1902c:	str	r0, [sp]
   19030:	b	19044 <__assert_fail@plt+0x786c>
   19034:	movw	r0, #21172	; 0x52b4
   19038:	movt	r0, #3
   1903c:	str	r0, [sp]
   19040:	b	19044 <__assert_fail@plt+0x786c>
   19044:	ldr	r0, [sp]
   19048:	add	r0, r0, #8
   1904c:	ldrb	r1, [sp, #19]
   19050:	lsr	r1, r1, #5
   19054:	add	r0, r0, r1, lsl #2
   19058:	str	r0, [sp, #12]
   1905c:	ldrb	r0, [sp, #19]
   19060:	and	r0, r0, #31
   19064:	str	r0, [sp, #8]
   19068:	ldr	r0, [sp, #12]
   1906c:	ldr	r0, [r0]
   19070:	ldr	r1, [sp, #8]
   19074:	lsr	r0, r0, r1
   19078:	and	r0, r0, #1
   1907c:	str	r0, [sp, #4]
   19080:	ldr	r0, [sp, #20]
   19084:	and	r0, r0, #1
   19088:	ldr	r1, [sp, #4]
   1908c:	eor	r0, r0, r1
   19090:	ldr	r1, [sp, #8]
   19094:	lsl	r0, r0, r1
   19098:	ldr	r1, [sp, #12]
   1909c:	ldr	r2, [r1]
   190a0:	eor	r0, r2, r0
   190a4:	str	r0, [r1]
   190a8:	ldr	r0, [sp, #4]
   190ac:	add	sp, sp, #32
   190b0:	bx	lr
   190b4:	sub	sp, sp, #12
   190b8:	str	r0, [sp, #8]
   190bc:	str	r1, [sp, #4]
   190c0:	ldr	r0, [sp, #8]
   190c4:	movw	r1, #0
   190c8:	cmp	r0, r1
   190cc:	bne	190dc <__assert_fail@plt+0x7904>
   190d0:	movw	r0, #21172	; 0x52b4
   190d4:	movt	r0, #3
   190d8:	str	r0, [sp, #8]
   190dc:	ldr	r0, [sp, #8]
   190e0:	ldr	r0, [r0, #4]
   190e4:	str	r0, [sp]
   190e8:	ldr	r0, [sp, #4]
   190ec:	ldr	r1, [sp, #8]
   190f0:	str	r0, [r1, #4]
   190f4:	ldr	r0, [sp]
   190f8:	add	sp, sp, #12
   190fc:	bx	lr
   19100:	push	{fp, lr}
   19104:	mov	fp, sp
   19108:	sub	sp, sp, #16
   1910c:	str	r0, [fp, #-4]
   19110:	str	r1, [sp, #8]
   19114:	str	r2, [sp, #4]
   19118:	ldr	r0, [fp, #-4]
   1911c:	movw	r1, #0
   19120:	cmp	r0, r1
   19124:	bne	19134 <__assert_fail@plt+0x795c>
   19128:	movw	r0, #21172	; 0x52b4
   1912c:	movt	r0, #3
   19130:	str	r0, [fp, #-4]
   19134:	ldr	r0, [fp, #-4]
   19138:	movw	r1, #10
   1913c:	str	r1, [r0]
   19140:	ldr	r0, [sp, #8]
   19144:	movw	r1, #0
   19148:	cmp	r0, r1
   1914c:	beq	19160 <__assert_fail@plt+0x7988>
   19150:	ldr	r0, [sp, #4]
   19154:	movw	r1, #0
   19158:	cmp	r0, r1
   1915c:	bne	19164 <__assert_fail@plt+0x798c>
   19160:	bl	117a8 <abort@plt>
   19164:	ldr	r0, [sp, #8]
   19168:	ldr	r1, [fp, #-4]
   1916c:	str	r0, [r1, #40]	; 0x28
   19170:	ldr	r0, [sp, #4]
   19174:	ldr	r1, [fp, #-4]
   19178:	str	r0, [r1, #44]	; 0x2c
   1917c:	mov	sp, fp
   19180:	pop	{fp, pc}
   19184:	push	{r4, r5, r6, sl, fp, lr}
   19188:	add	fp, sp, #16
   1918c:	sub	sp, sp, #56	; 0x38
   19190:	ldr	ip, [fp, #8]
   19194:	str	r0, [fp, #-20]	; 0xffffffec
   19198:	str	r1, [fp, #-24]	; 0xffffffe8
   1919c:	str	r2, [fp, #-28]	; 0xffffffe4
   191a0:	str	r3, [fp, #-32]	; 0xffffffe0
   191a4:	ldr	r0, [fp, #8]
   191a8:	movw	r1, #0
   191ac:	cmp	r0, r1
   191b0:	beq	191c0 <__assert_fail@plt+0x79e8>
   191b4:	ldr	r0, [fp, #8]
   191b8:	str	r0, [sp, #24]
   191bc:	b	191d0 <__assert_fail@plt+0x79f8>
   191c0:	movw	r0, #21172	; 0x52b4
   191c4:	movt	r0, #3
   191c8:	str	r0, [sp, #24]
   191cc:	b	191d0 <__assert_fail@plt+0x79f8>
   191d0:	ldr	r0, [sp, #24]
   191d4:	str	r0, [sp, #36]	; 0x24
   191d8:	bl	11664 <__errno_location@plt>
   191dc:	ldr	r0, [r0]
   191e0:	str	r0, [sp, #32]
   191e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   191e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   191ec:	ldr	r2, [fp, #-28]	; 0xffffffe4
   191f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   191f4:	ldr	ip, [sp, #36]	; 0x24
   191f8:	ldr	ip, [ip]
   191fc:	ldr	lr, [sp, #36]	; 0x24
   19200:	ldr	lr, [lr, #4]
   19204:	ldr	r4, [sp, #36]	; 0x24
   19208:	add	r4, r4, #8
   1920c:	ldr	r5, [sp, #36]	; 0x24
   19210:	ldr	r5, [r5, #40]	; 0x28
   19214:	ldr	r6, [sp, #36]	; 0x24
   19218:	ldr	r6, [r6, #44]	; 0x2c
   1921c:	str	ip, [sp]
   19220:	str	lr, [sp, #4]
   19224:	str	r4, [sp, #8]
   19228:	str	r5, [sp, #12]
   1922c:	str	r6, [sp, #16]
   19230:	bl	19258 <__assert_fail@plt+0x7a80>
   19234:	str	r0, [sp, #28]
   19238:	ldr	r0, [sp, #32]
   1923c:	str	r0, [sp, #20]
   19240:	bl	11664 <__errno_location@plt>
   19244:	ldr	r1, [sp, #20]
   19248:	str	r1, [r0]
   1924c:	ldr	r0, [sp, #28]
   19250:	sub	sp, fp, #16
   19254:	pop	{r4, r5, r6, sl, fp, pc}
   19258:	push	{r4, r5, r6, sl, fp, lr}
   1925c:	add	fp, sp, #16
   19260:	sub	sp, sp, #160	; 0xa0
   19264:	ldr	ip, [fp, #24]
   19268:	ldr	lr, [fp, #20]
   1926c:	ldr	r4, [fp, #16]
   19270:	ldr	r5, [fp, #12]
   19274:	ldr	r6, [fp, #8]
   19278:	str	r0, [fp, #-24]	; 0xffffffe8
   1927c:	str	r1, [fp, #-28]	; 0xffffffe4
   19280:	str	r2, [fp, #-32]	; 0xffffffe0
   19284:	str	r3, [fp, #-36]	; 0xffffffdc
   19288:	movw	r0, #0
   1928c:	str	r0, [fp, #-44]	; 0xffffffd4
   19290:	str	r0, [fp, #-48]	; 0xffffffd0
   19294:	str	r0, [fp, #-52]	; 0xffffffcc
   19298:	str	r0, [fp, #-56]	; 0xffffffc8
   1929c:	movw	r0, #0
   192a0:	strb	r0, [fp, #-57]	; 0xffffffc7
   192a4:	str	ip, [sp, #72]	; 0x48
   192a8:	str	lr, [sp, #68]	; 0x44
   192ac:	str	r4, [sp, #64]	; 0x40
   192b0:	str	r5, [sp, #60]	; 0x3c
   192b4:	str	r6, [sp, #56]	; 0x38
   192b8:	bl	1155c <__ctype_get_mb_cur_max@plt>
   192bc:	cmp	r0, #1
   192c0:	movw	r0, #0
   192c4:	moveq	r0, #1
   192c8:	and	r0, r0, #1
   192cc:	strb	r0, [fp, #-58]	; 0xffffffc6
   192d0:	ldr	r0, [fp, #12]
   192d4:	and	r0, r0, #2
   192d8:	cmp	r0, #0
   192dc:	movw	r0, #0
   192e0:	movne	r0, #1
   192e4:	and	r0, r0, #1
   192e8:	strb	r0, [fp, #-59]	; 0xffffffc5
   192ec:	movw	r0, #0
   192f0:	strb	r0, [fp, #-60]	; 0xffffffc4
   192f4:	strb	r0, [fp, #-61]	; 0xffffffc3
   192f8:	movw	r0, #1
   192fc:	strb	r0, [fp, #-62]	; 0xffffffc2
   19300:	ldr	r0, [fp, #8]
   19304:	cmp	r0, #10
   19308:	str	r0, [sp, #52]	; 0x34
   1930c:	bhi	19534 <__assert_fail@plt+0x7d5c>
   19310:	add	r0, pc, #8
   19314:	ldr	r1, [sp, #52]	; 0x34
   19318:	ldr	r0, [r0, r1, lsl #2]
   1931c:	mov	pc, r0
   19320:	andeq	r9, r1, r8, lsr #10
   19324:	andeq	r9, r1, r4, lsr #9
   19328:	andeq	r9, r1, r4, asr #9
   1932c:	muleq	r1, ip, r4
   19330:	andeq	r9, r1, ip, lsr #9
   19334:	andeq	r9, r1, ip, asr r3
   19338:	andeq	r9, r1, ip, asr #6
   1933c:	andeq	r9, r1, r0, asr #7
   19340:	ldrdeq	r9, [r1], -r4
   19344:	ldrdeq	r9, [r1], -r4
   19348:	ldrdeq	r9, [r1], -r4
   1934c:	movw	r0, #5
   19350:	str	r0, [fp, #8]
   19354:	movw	r0, #1
   19358:	strb	r0, [fp, #-59]	; 0xffffffc5
   1935c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19360:	tst	r0, #1
   19364:	bne	193a0 <__assert_fail@plt+0x7bc8>
   19368:	b	1936c <__assert_fail@plt+0x7b94>
   1936c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19370:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19374:	cmp	r0, r1
   19378:	bcs	19390 <__assert_fail@plt+0x7bb8>
   1937c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19380:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19384:	add	r0, r0, r1
   19388:	movw	r1, #34	; 0x22
   1938c:	strb	r1, [r0]
   19390:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19394:	add	r0, r0, #1
   19398:	str	r0, [fp, #-44]	; 0xffffffd4
   1939c:	b	193a0 <__assert_fail@plt+0x7bc8>
   193a0:	movw	r0, #1
   193a4:	strb	r0, [fp, #-57]	; 0xffffffc7
   193a8:	movw	r0, #17613	; 0x44cd
   193ac:	movt	r0, #2
   193b0:	str	r0, [fp, #-52]	; 0xffffffcc
   193b4:	movw	r0, #1
   193b8:	str	r0, [fp, #-56]	; 0xffffffc8
   193bc:	b	19538 <__assert_fail@plt+0x7d60>
   193c0:	movw	r0, #1
   193c4:	strb	r0, [fp, #-57]	; 0xffffffc7
   193c8:	movw	r0, #0
   193cc:	strb	r0, [fp, #-59]	; 0xffffffc5
   193d0:	b	19538 <__assert_fail@plt+0x7d60>
   193d4:	ldr	r0, [fp, #8]
   193d8:	cmp	r0, #10
   193dc:	beq	19408 <__assert_fail@plt+0x7c30>
   193e0:	ldr	r1, [fp, #8]
   193e4:	movw	r0, #17615	; 0x44cf
   193e8:	movt	r0, #2
   193ec:	bl	1b44c <__assert_fail@plt+0x9c74>
   193f0:	str	r0, [fp, #20]
   193f4:	ldr	r1, [fp, #8]
   193f8:	movw	r0, #17449	; 0x4429
   193fc:	movt	r0, #2
   19400:	bl	1b44c <__assert_fail@plt+0x9c74>
   19404:	str	r0, [fp, #24]
   19408:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1940c:	tst	r0, #1
   19410:	bne	1947c <__assert_fail@plt+0x7ca4>
   19414:	ldr	r0, [fp, #20]
   19418:	str	r0, [fp, #-52]	; 0xffffffcc
   1941c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19420:	ldrsb	r0, [r0]
   19424:	cmp	r0, #0
   19428:	beq	19478 <__assert_fail@plt+0x7ca0>
   1942c:	b	19430 <__assert_fail@plt+0x7c58>
   19430:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19434:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19438:	cmp	r0, r1
   1943c:	bcs	19458 <__assert_fail@plt+0x7c80>
   19440:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19444:	ldrb	r0, [r0]
   19448:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1944c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   19450:	add	r1, r1, r2
   19454:	strb	r0, [r1]
   19458:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1945c:	add	r0, r0, #1
   19460:	str	r0, [fp, #-44]	; 0xffffffd4
   19464:	b	19468 <__assert_fail@plt+0x7c90>
   19468:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1946c:	add	r0, r0, #1
   19470:	str	r0, [fp, #-52]	; 0xffffffcc
   19474:	b	1941c <__assert_fail@plt+0x7c44>
   19478:	b	1947c <__assert_fail@plt+0x7ca4>
   1947c:	movw	r0, #1
   19480:	strb	r0, [fp, #-57]	; 0xffffffc7
   19484:	ldr	r0, [fp, #24]
   19488:	str	r0, [fp, #-52]	; 0xffffffcc
   1948c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19490:	bl	11634 <strlen@plt>
   19494:	str	r0, [fp, #-56]	; 0xffffffc8
   19498:	b	19538 <__assert_fail@plt+0x7d60>
   1949c:	movw	r0, #1
   194a0:	strb	r0, [fp, #-57]	; 0xffffffc7
   194a4:	movw	r0, #1
   194a8:	strb	r0, [fp, #-59]	; 0xffffffc5
   194ac:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   194b0:	tst	r0, #1
   194b4:	bne	194c0 <__assert_fail@plt+0x7ce8>
   194b8:	movw	r0, #1
   194bc:	strb	r0, [fp, #-57]	; 0xffffffc7
   194c0:	b	194c4 <__assert_fail@plt+0x7cec>
   194c4:	movw	r0, #2
   194c8:	str	r0, [fp, #8]
   194cc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   194d0:	tst	r0, #1
   194d4:	bne	19510 <__assert_fail@plt+0x7d38>
   194d8:	b	194dc <__assert_fail@plt+0x7d04>
   194dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   194e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   194e4:	cmp	r0, r1
   194e8:	bcs	19500 <__assert_fail@plt+0x7d28>
   194ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   194f4:	add	r0, r0, r1
   194f8:	movw	r1, #39	; 0x27
   194fc:	strb	r1, [r0]
   19500:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19504:	add	r0, r0, #1
   19508:	str	r0, [fp, #-44]	; 0xffffffd4
   1950c:	b	19510 <__assert_fail@plt+0x7d38>
   19510:	movw	r0, #17449	; 0x4429
   19514:	movt	r0, #2
   19518:	str	r0, [fp, #-52]	; 0xffffffcc
   1951c:	movw	r0, #1
   19520:	str	r0, [fp, #-56]	; 0xffffffc8
   19524:	b	19538 <__assert_fail@plt+0x7d60>
   19528:	movw	r0, #0
   1952c:	strb	r0, [fp, #-59]	; 0xffffffc5
   19530:	b	19538 <__assert_fail@plt+0x7d60>
   19534:	bl	117a8 <abort@plt>
   19538:	movw	r0, #0
   1953c:	str	r0, [fp, #-40]	; 0xffffffd8
   19540:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19544:	cmn	r0, #1
   19548:	bne	19574 <__assert_fail@plt+0x7d9c>
   1954c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19550:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19554:	add	r0, r0, r1
   19558:	ldrb	r0, [r0]
   1955c:	cmp	r0, #0
   19560:	movw	r0, #0
   19564:	moveq	r0, #1
   19568:	and	r0, r0, #1
   1956c:	str	r0, [sp, #48]	; 0x30
   19570:	b	19590 <__assert_fail@plt+0x7db8>
   19574:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19578:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1957c:	cmp	r0, r1
   19580:	movw	r0, #0
   19584:	moveq	r0, #1
   19588:	and	r0, r0, #1
   1958c:	str	r0, [sp, #48]	; 0x30
   19590:	ldr	r0, [sp, #48]	; 0x30
   19594:	cmp	r0, #0
   19598:	movw	r0, #0
   1959c:	movne	r0, #1
   195a0:	mvn	r1, #0
   195a4:	eor	r0, r0, r1
   195a8:	tst	r0, #1
   195ac:	beq	1a798 <__assert_fail@plt+0x8fc0>
   195b0:	movw	r0, #0
   195b4:	strb	r0, [fp, #-65]	; 0xffffffbf
   195b8:	strb	r0, [fp, #-66]	; 0xffffffbe
   195bc:	strb	r0, [fp, #-67]	; 0xffffffbd
   195c0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   195c4:	tst	r0, #1
   195c8:	beq	19674 <__assert_fail@plt+0x7e9c>
   195cc:	ldr	r0, [fp, #8]
   195d0:	cmp	r0, #2
   195d4:	beq	19674 <__assert_fail@plt+0x7e9c>
   195d8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   195dc:	cmp	r0, #0
   195e0:	beq	19674 <__assert_fail@plt+0x7e9c>
   195e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   195e8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   195ec:	add	r0, r0, r1
   195f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   195f4:	cmn	r1, #1
   195f8:	str	r0, [sp, #44]	; 0x2c
   195fc:	bne	19624 <__assert_fail@plt+0x7e4c>
   19600:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19604:	movw	r1, #1
   19608:	cmp	r1, r0
   1960c:	bcs	19624 <__assert_fail@plt+0x7e4c>
   19610:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19614:	bl	11634 <strlen@plt>
   19618:	str	r0, [fp, #-36]	; 0xffffffdc
   1961c:	str	r0, [sp, #40]	; 0x28
   19620:	b	1962c <__assert_fail@plt+0x7e54>
   19624:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19628:	str	r0, [sp, #40]	; 0x28
   1962c:	ldr	r0, [sp, #40]	; 0x28
   19630:	ldr	r1, [sp, #44]	; 0x2c
   19634:	cmp	r1, r0
   19638:	bhi	19674 <__assert_fail@plt+0x7e9c>
   1963c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19640:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19644:	add	r0, r0, r1
   19648:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1964c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19650:	bl	114cc <memcmp@plt>
   19654:	cmp	r0, #0
   19658:	bne	19674 <__assert_fail@plt+0x7e9c>
   1965c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19660:	tst	r0, #1
   19664:	beq	1966c <__assert_fail@plt+0x7e94>
   19668:	b	1a918 <__assert_fail@plt+0x9140>
   1966c:	movw	r0, #1
   19670:	strb	r0, [fp, #-65]	; 0xffffffbf
   19674:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19678:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1967c:	ldrb	r0, [r0, r1]
   19680:	strb	r0, [fp, #-63]	; 0xffffffc1
   19684:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   19688:	mov	r1, r0
   1968c:	cmp	r0, #126	; 0x7e
   19690:	str	r1, [sp, #36]	; 0x24
   19694:	bhi	19f04 <__assert_fail@plt+0x872c>
   19698:	add	r0, pc, #8
   1969c:	ldr	r1, [sp, #36]	; 0x24
   196a0:	ldr	r0, [r0, r1, lsl #2]
   196a4:	mov	pc, r0
   196a8:	andeq	r9, r1, r4, lsr #17
   196ac:	andeq	r9, r1, r4, lsl #30
   196b0:	andeq	r9, r1, r4, lsl #30
   196b4:	andeq	r9, r1, r4, lsl #30
   196b8:	andeq	r9, r1, r4, lsl #30
   196bc:	andeq	r9, r1, r4, lsl #30
   196c0:	andeq	r9, r1, r4, lsl #30
   196c4:	andeq	r9, r1, ip, lsr #25
   196c8:			; <UNDEFINED> instruction: 0x00019cb8
   196cc:	andeq	r9, r1, r8, ror #25
   196d0:	ldrdeq	r9, [r1], -r0
   196d4:	strdeq	r9, [r1], -r4
   196d8:	andeq	r9, r1, r4, asr #25
   196dc:	ldrdeq	r9, [r1], -ip
   196e0:	andeq	r9, r1, r4, lsl #30
   196e4:	andeq	r9, r1, r4, lsl #30
   196e8:	andeq	r9, r1, r4, lsl #30
   196ec:	andeq	r9, r1, r4, lsl #30
   196f0:	andeq	r9, r1, r4, lsl #30
   196f4:	andeq	r9, r1, r4, lsl #30
   196f8:	andeq	r9, r1, r4, lsl #30
   196fc:	andeq	r9, r1, r4, lsl #30
   19700:	andeq	r9, r1, r4, lsl #30
   19704:	andeq	r9, r1, r4, lsl #30
   19708:	andeq	r9, r1, r4, lsl #30
   1970c:	andeq	r9, r1, r4, lsl #30
   19710:	andeq	r9, r1, r4, lsl #30
   19714:	andeq	r9, r1, r4, lsl #30
   19718:	andeq	r9, r1, r4, lsl #30
   1971c:	andeq	r9, r1, r4, lsl #30
   19720:	andeq	r9, r1, r4, lsl #30
   19724:	andeq	r9, r1, r4, lsl #30
   19728:	ldrdeq	r9, [r1], -r8
   1972c:	andeq	r9, r1, r0, ror #27
   19730:	andeq	r9, r1, r0, ror #27
   19734:	andeq	r9, r1, r4, asr #27
   19738:	andeq	r9, r1, r0, ror #27
   1973c:	strdeq	r9, [r1], -r8
   19740:	andeq	r9, r1, r0, ror #27
   19744:	andeq	r9, r1, r0, lsl #28
   19748:	andeq	r9, r1, r0, ror #27
   1974c:	andeq	r9, r1, r0, ror #27
   19750:	andeq	r9, r1, r0, ror #27
   19754:	strdeq	r9, [r1], -r8
   19758:	strdeq	r9, [r1], -r8
   1975c:	strdeq	r9, [r1], -r8
   19760:	strdeq	r9, [r1], -r8
   19764:	strdeq	r9, [r1], -r8
   19768:	strdeq	r9, [r1], -r8
   1976c:	strdeq	r9, [r1], -r8
   19770:	strdeq	r9, [r1], -r8
   19774:	strdeq	r9, [r1], -r8
   19778:	strdeq	r9, [r1], -r8
   1977c:	strdeq	r9, [r1], -r8
   19780:	strdeq	r9, [r1], -r8
   19784:	strdeq	r9, [r1], -r8
   19788:	strdeq	r9, [r1], -r8
   1978c:	strdeq	r9, [r1], -r8
   19790:	strdeq	r9, [r1], -r8
   19794:	andeq	r9, r1, r0, ror #27
   19798:	andeq	r9, r1, r0, ror #27
   1979c:	andeq	r9, r1, r0, ror #27
   197a0:	andeq	r9, r1, r0, ror #27
   197a4:			; <UNDEFINED> instruction: 0x00019ab0
   197a8:	andeq	r9, r1, r4, lsl #30
   197ac:	strdeq	r9, [r1], -r8
   197b0:	strdeq	r9, [r1], -r8
   197b4:	strdeq	r9, [r1], -r8
   197b8:	strdeq	r9, [r1], -r8
   197bc:	strdeq	r9, [r1], -r8
   197c0:	strdeq	r9, [r1], -r8
   197c4:	strdeq	r9, [r1], -r8
   197c8:	strdeq	r9, [r1], -r8
   197cc:	strdeq	r9, [r1], -r8
   197d0:	strdeq	r9, [r1], -r8
   197d4:	strdeq	r9, [r1], -r8
   197d8:	strdeq	r9, [r1], -r8
   197dc:	strdeq	r9, [r1], -r8
   197e0:	strdeq	r9, [r1], -r8
   197e4:	strdeq	r9, [r1], -r8
   197e8:	strdeq	r9, [r1], -r8
   197ec:	strdeq	r9, [r1], -r8
   197f0:	strdeq	r9, [r1], -r8
   197f4:	strdeq	r9, [r1], -r8
   197f8:	strdeq	r9, [r1], -r8
   197fc:	strdeq	r9, [r1], -r8
   19800:	strdeq	r9, [r1], -r8
   19804:	strdeq	r9, [r1], -r8
   19808:	strdeq	r9, [r1], -r8
   1980c:	strdeq	r9, [r1], -r8
   19810:	strdeq	r9, [r1], -r8
   19814:	andeq	r9, r1, r0, ror #27
   19818:	andeq	r9, r1, r0, lsl #26
   1981c:	strdeq	r9, [r1], -r8
   19820:	andeq	r9, r1, r0, ror #27
   19824:	strdeq	r9, [r1], -r8
   19828:	andeq	r9, r1, r0, ror #27
   1982c:	strdeq	r9, [r1], -r8
   19830:	strdeq	r9, [r1], -r8
   19834:	strdeq	r9, [r1], -r8
   19838:	strdeq	r9, [r1], -r8
   1983c:	strdeq	r9, [r1], -r8
   19840:	strdeq	r9, [r1], -r8
   19844:	strdeq	r9, [r1], -r8
   19848:	strdeq	r9, [r1], -r8
   1984c:	strdeq	r9, [r1], -r8
   19850:	strdeq	r9, [r1], -r8
   19854:	strdeq	r9, [r1], -r8
   19858:	strdeq	r9, [r1], -r8
   1985c:	strdeq	r9, [r1], -r8
   19860:	strdeq	r9, [r1], -r8
   19864:	strdeq	r9, [r1], -r8
   19868:	strdeq	r9, [r1], -r8
   1986c:	strdeq	r9, [r1], -r8
   19870:	strdeq	r9, [r1], -r8
   19874:	strdeq	r9, [r1], -r8
   19878:	strdeq	r9, [r1], -r8
   1987c:	strdeq	r9, [r1], -r8
   19880:	strdeq	r9, [r1], -r8
   19884:	strdeq	r9, [r1], -r8
   19888:	strdeq	r9, [r1], -r8
   1988c:	strdeq	r9, [r1], -r8
   19890:	strdeq	r9, [r1], -r8
   19894:	muleq	r1, r0, sp
   19898:	andeq	r9, r1, r0, ror #27
   1989c:	muleq	r1, r0, sp
   198a0:	andeq	r9, r1, r4, asr #27
   198a4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   198a8:	tst	r0, #1
   198ac:	beq	19a94 <__assert_fail@plt+0x82bc>
   198b0:	b	198b4 <__assert_fail@plt+0x80dc>
   198b4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   198b8:	tst	r0, #1
   198bc:	beq	198c4 <__assert_fail@plt+0x80ec>
   198c0:	b	1a918 <__assert_fail@plt+0x9140>
   198c4:	movw	r0, #1
   198c8:	strb	r0, [fp, #-66]	; 0xffffffbe
   198cc:	ldr	r0, [fp, #8]
   198d0:	cmp	r0, #2
   198d4:	bne	19988 <__assert_fail@plt+0x81b0>
   198d8:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   198dc:	tst	r0, #1
   198e0:	bne	19988 <__assert_fail@plt+0x81b0>
   198e4:	b	198e8 <__assert_fail@plt+0x8110>
   198e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   198ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   198f0:	cmp	r0, r1
   198f4:	bcs	1990c <__assert_fail@plt+0x8134>
   198f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   198fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19900:	add	r0, r0, r1
   19904:	movw	r1, #39	; 0x27
   19908:	strb	r1, [r0]
   1990c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19910:	add	r0, r0, #1
   19914:	str	r0, [fp, #-44]	; 0xffffffd4
   19918:	b	1991c <__assert_fail@plt+0x8144>
   1991c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19920:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19924:	cmp	r0, r1
   19928:	bcs	19940 <__assert_fail@plt+0x8168>
   1992c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19930:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19934:	add	r0, r0, r1
   19938:	movw	r1, #36	; 0x24
   1993c:	strb	r1, [r0]
   19940:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19944:	add	r0, r0, #1
   19948:	str	r0, [fp, #-44]	; 0xffffffd4
   1994c:	b	19950 <__assert_fail@plt+0x8178>
   19950:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19954:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19958:	cmp	r0, r1
   1995c:	bcs	19974 <__assert_fail@plt+0x819c>
   19960:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19964:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19968:	add	r0, r0, r1
   1996c:	movw	r1, #39	; 0x27
   19970:	strb	r1, [r0]
   19974:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19978:	add	r0, r0, #1
   1997c:	str	r0, [fp, #-44]	; 0xffffffd4
   19980:	movw	r0, #1
   19984:	strb	r0, [fp, #-60]	; 0xffffffc4
   19988:	b	1998c <__assert_fail@plt+0x81b4>
   1998c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19990:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19994:	cmp	r0, r1
   19998:	bcs	199b0 <__assert_fail@plt+0x81d8>
   1999c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   199a4:	add	r0, r0, r1
   199a8:	movw	r1, #92	; 0x5c
   199ac:	strb	r1, [r0]
   199b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   199b4:	add	r0, r0, #1
   199b8:	str	r0, [fp, #-44]	; 0xffffffd4
   199bc:	b	199c0 <__assert_fail@plt+0x81e8>
   199c0:	ldr	r0, [fp, #8]
   199c4:	cmp	r0, #2
   199c8:	beq	19a88 <__assert_fail@plt+0x82b0>
   199cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   199d0:	add	r0, r0, #1
   199d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   199d8:	cmp	r0, r1
   199dc:	bcs	19a88 <__assert_fail@plt+0x82b0>
   199e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   199e4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   199e8:	add	r1, r1, #1
   199ec:	add	r0, r0, r1
   199f0:	ldrb	r0, [r0]
   199f4:	movw	r1, #48	; 0x30
   199f8:	cmp	r1, r0
   199fc:	bgt	19a88 <__assert_fail@plt+0x82b0>
   19a00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19a04:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19a08:	add	r1, r1, #1
   19a0c:	add	r0, r0, r1
   19a10:	ldrb	r0, [r0]
   19a14:	cmp	r0, #57	; 0x39
   19a18:	bgt	19a88 <__assert_fail@plt+0x82b0>
   19a1c:	b	19a20 <__assert_fail@plt+0x8248>
   19a20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19a24:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19a28:	cmp	r0, r1
   19a2c:	bcs	19a44 <__assert_fail@plt+0x826c>
   19a30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a34:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19a38:	add	r0, r0, r1
   19a3c:	movw	r1, #48	; 0x30
   19a40:	strb	r1, [r0]
   19a44:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19a48:	add	r0, r0, #1
   19a4c:	str	r0, [fp, #-44]	; 0xffffffd4
   19a50:	b	19a54 <__assert_fail@plt+0x827c>
   19a54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19a58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19a5c:	cmp	r0, r1
   19a60:	bcs	19a78 <__assert_fail@plt+0x82a0>
   19a64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a68:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19a6c:	add	r0, r0, r1
   19a70:	movw	r1, #48	; 0x30
   19a74:	strb	r1, [r0]
   19a78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19a7c:	add	r0, r0, #1
   19a80:	str	r0, [fp, #-44]	; 0xffffffd4
   19a84:	b	19a88 <__assert_fail@plt+0x82b0>
   19a88:	movw	r0, #48	; 0x30
   19a8c:	strb	r0, [fp, #-63]	; 0xffffffc1
   19a90:	b	19aac <__assert_fail@plt+0x82d4>
   19a94:	ldr	r0, [fp, #12]
   19a98:	and	r0, r0, #1
   19a9c:	cmp	r0, #0
   19aa0:	beq	19aa8 <__assert_fail@plt+0x82d0>
   19aa4:	b	1a788 <__assert_fail@plt+0x8fb0>
   19aa8:	b	19aac <__assert_fail@plt+0x82d4>
   19aac:	b	1a524 <__assert_fail@plt+0x8d4c>
   19ab0:	ldr	r0, [fp, #8]
   19ab4:	cmp	r0, #2
   19ab8:	str	r0, [sp, #32]
   19abc:	beq	19ad4 <__assert_fail@plt+0x82fc>
   19ac0:	b	19ac4 <__assert_fail@plt+0x82ec>
   19ac4:	ldr	r0, [sp, #32]
   19ac8:	cmp	r0, #5
   19acc:	beq	19ae8 <__assert_fail@plt+0x8310>
   19ad0:	b	19ca4 <__assert_fail@plt+0x84cc>
   19ad4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19ad8:	tst	r0, #1
   19adc:	beq	19ae4 <__assert_fail@plt+0x830c>
   19ae0:	b	1a918 <__assert_fail@plt+0x9140>
   19ae4:	b	19ca8 <__assert_fail@plt+0x84d0>
   19ae8:	ldr	r0, [fp, #12]
   19aec:	and	r0, r0, #4
   19af0:	cmp	r0, #0
   19af4:	beq	19ca0 <__assert_fail@plt+0x84c8>
   19af8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19afc:	add	r0, r0, #2
   19b00:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19b04:	cmp	r0, r1
   19b08:	bcs	19ca0 <__assert_fail@plt+0x84c8>
   19b0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19b10:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19b14:	add	r1, r1, #1
   19b18:	add	r0, r0, r1
   19b1c:	ldrb	r0, [r0]
   19b20:	cmp	r0, #63	; 0x3f
   19b24:	bne	19ca0 <__assert_fail@plt+0x84c8>
   19b28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19b2c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19b30:	add	r0, r1, r0
   19b34:	ldrb	r0, [r0, #2]
   19b38:	mov	r1, r0
   19b3c:	cmp	r0, #33	; 0x21
   19b40:	str	r1, [sp, #28]
   19b44:	beq	19b94 <__assert_fail@plt+0x83bc>
   19b48:	b	19b4c <__assert_fail@plt+0x8374>
   19b4c:	ldr	r0, [sp, #28]
   19b50:	sub	r1, r0, #39	; 0x27
   19b54:	cmp	r1, #3
   19b58:	bcc	19b94 <__assert_fail@plt+0x83bc>
   19b5c:	b	19b60 <__assert_fail@plt+0x8388>
   19b60:	ldr	r0, [sp, #28]
   19b64:	cmp	r0, #45	; 0x2d
   19b68:	beq	19b94 <__assert_fail@plt+0x83bc>
   19b6c:	b	19b70 <__assert_fail@plt+0x8398>
   19b70:	ldr	r0, [sp, #28]
   19b74:	cmp	r0, #47	; 0x2f
   19b78:	beq	19b94 <__assert_fail@plt+0x83bc>
   19b7c:	b	19b80 <__assert_fail@plt+0x83a8>
   19b80:	ldr	r0, [sp, #28]
   19b84:	sub	r1, r0, #60	; 0x3c
   19b88:	cmp	r1, #2
   19b8c:	bhi	19c98 <__assert_fail@plt+0x84c0>
   19b90:	b	19b94 <__assert_fail@plt+0x83bc>
   19b94:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19b98:	tst	r0, #1
   19b9c:	beq	19ba4 <__assert_fail@plt+0x83cc>
   19ba0:	b	1a918 <__assert_fail@plt+0x9140>
   19ba4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19ba8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19bac:	add	r1, r1, #2
   19bb0:	add	r0, r0, r1
   19bb4:	ldrb	r0, [r0]
   19bb8:	strb	r0, [fp, #-63]	; 0xffffffc1
   19bbc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19bc0:	add	r0, r0, #2
   19bc4:	str	r0, [fp, #-40]	; 0xffffffd8
   19bc8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19bcc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19bd0:	cmp	r0, r1
   19bd4:	bcs	19bec <__assert_fail@plt+0x8414>
   19bd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19bdc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19be0:	add	r0, r0, r1
   19be4:	movw	r1, #63	; 0x3f
   19be8:	strb	r1, [r0]
   19bec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19bf0:	add	r0, r0, #1
   19bf4:	str	r0, [fp, #-44]	; 0xffffffd4
   19bf8:	b	19bfc <__assert_fail@plt+0x8424>
   19bfc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19c00:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19c04:	cmp	r0, r1
   19c08:	bcs	19c20 <__assert_fail@plt+0x8448>
   19c0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c10:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19c14:	add	r0, r0, r1
   19c18:	movw	r1, #34	; 0x22
   19c1c:	strb	r1, [r0]
   19c20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19c24:	add	r0, r0, #1
   19c28:	str	r0, [fp, #-44]	; 0xffffffd4
   19c2c:	b	19c30 <__assert_fail@plt+0x8458>
   19c30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19c34:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19c38:	cmp	r0, r1
   19c3c:	bcs	19c54 <__assert_fail@plt+0x847c>
   19c40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c44:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19c48:	add	r0, r0, r1
   19c4c:	movw	r1, #34	; 0x22
   19c50:	strb	r1, [r0]
   19c54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19c58:	add	r0, r0, #1
   19c5c:	str	r0, [fp, #-44]	; 0xffffffd4
   19c60:	b	19c64 <__assert_fail@plt+0x848c>
   19c64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19c68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19c6c:	cmp	r0, r1
   19c70:	bcs	19c88 <__assert_fail@plt+0x84b0>
   19c74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c78:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19c7c:	add	r0, r0, r1
   19c80:	movw	r1, #63	; 0x3f
   19c84:	strb	r1, [r0]
   19c88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19c8c:	add	r0, r0, #1
   19c90:	str	r0, [fp, #-44]	; 0xffffffd4
   19c94:	b	19c9c <__assert_fail@plt+0x84c4>
   19c98:	b	19c9c <__assert_fail@plt+0x84c4>
   19c9c:	b	19ca0 <__assert_fail@plt+0x84c8>
   19ca0:	b	19ca8 <__assert_fail@plt+0x84d0>
   19ca4:	b	19ca8 <__assert_fail@plt+0x84d0>
   19ca8:	b	1a524 <__assert_fail@plt+0x8d4c>
   19cac:	movw	r0, #97	; 0x61
   19cb0:	strb	r0, [fp, #-64]	; 0xffffffc0
   19cb4:	b	19d74 <__assert_fail@plt+0x859c>
   19cb8:	movw	r0, #98	; 0x62
   19cbc:	strb	r0, [fp, #-64]	; 0xffffffc0
   19cc0:	b	19d74 <__assert_fail@plt+0x859c>
   19cc4:	movw	r0, #102	; 0x66
   19cc8:	strb	r0, [fp, #-64]	; 0xffffffc0
   19ccc:	b	19d74 <__assert_fail@plt+0x859c>
   19cd0:	movw	r0, #110	; 0x6e
   19cd4:	strb	r0, [fp, #-64]	; 0xffffffc0
   19cd8:	b	19d54 <__assert_fail@plt+0x857c>
   19cdc:	movw	r0, #114	; 0x72
   19ce0:	strb	r0, [fp, #-64]	; 0xffffffc0
   19ce4:	b	19d54 <__assert_fail@plt+0x857c>
   19ce8:	movw	r0, #116	; 0x74
   19cec:	strb	r0, [fp, #-64]	; 0xffffffc0
   19cf0:	b	19d54 <__assert_fail@plt+0x857c>
   19cf4:	movw	r0, #118	; 0x76
   19cf8:	strb	r0, [fp, #-64]	; 0xffffffc0
   19cfc:	b	19d74 <__assert_fail@plt+0x859c>
   19d00:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   19d04:	strb	r0, [fp, #-64]	; 0xffffffc0
   19d08:	ldr	r0, [fp, #8]
   19d0c:	cmp	r0, #2
   19d10:	bne	19d28 <__assert_fail@plt+0x8550>
   19d14:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19d18:	tst	r0, #1
   19d1c:	beq	19d24 <__assert_fail@plt+0x854c>
   19d20:	b	1a918 <__assert_fail@plt+0x9140>
   19d24:	b	1a6ac <__assert_fail@plt+0x8ed4>
   19d28:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   19d2c:	tst	r0, #1
   19d30:	beq	19d50 <__assert_fail@plt+0x8578>
   19d34:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19d38:	tst	r0, #1
   19d3c:	beq	19d50 <__assert_fail@plt+0x8578>
   19d40:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19d44:	cmp	r0, #0
   19d48:	beq	19d50 <__assert_fail@plt+0x8578>
   19d4c:	b	1a6ac <__assert_fail@plt+0x8ed4>
   19d50:	b	19d54 <__assert_fail@plt+0x857c>
   19d54:	ldr	r0, [fp, #8]
   19d58:	cmp	r0, #2
   19d5c:	bne	19d70 <__assert_fail@plt+0x8598>
   19d60:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19d64:	tst	r0, #1
   19d68:	beq	19d70 <__assert_fail@plt+0x8598>
   19d6c:	b	1a918 <__assert_fail@plt+0x9140>
   19d70:	b	19d74 <__assert_fail@plt+0x859c>
   19d74:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   19d78:	tst	r0, #1
   19d7c:	beq	19d8c <__assert_fail@plt+0x85b4>
   19d80:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   19d84:	strb	r0, [fp, #-63]	; 0xffffffc1
   19d88:	b	1a598 <__assert_fail@plt+0x8dc0>
   19d8c:	b	1a524 <__assert_fail@plt+0x8d4c>
   19d90:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19d94:	cmn	r0, #1
   19d98:	bne	19db0 <__assert_fail@plt+0x85d8>
   19d9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19da0:	ldrb	r0, [r0, #1]
   19da4:	cmp	r0, #0
   19da8:	beq	19dc0 <__assert_fail@plt+0x85e8>
   19dac:	b	19dbc <__assert_fail@plt+0x85e4>
   19db0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19db4:	cmp	r0, #1
   19db8:	beq	19dc0 <__assert_fail@plt+0x85e8>
   19dbc:	b	1a524 <__assert_fail@plt+0x8d4c>
   19dc0:	b	19dc4 <__assert_fail@plt+0x85ec>
   19dc4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19dc8:	cmp	r0, #0
   19dcc:	beq	19dd4 <__assert_fail@plt+0x85fc>
   19dd0:	b	1a524 <__assert_fail@plt+0x8d4c>
   19dd4:	b	19dd8 <__assert_fail@plt+0x8600>
   19dd8:	movw	r0, #1
   19ddc:	strb	r0, [fp, #-67]	; 0xffffffbd
   19de0:	ldr	r0, [fp, #8]
   19de4:	cmp	r0, #2
   19de8:	bne	19dfc <__assert_fail@plt+0x8624>
   19dec:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19df0:	tst	r0, #1
   19df4:	beq	19dfc <__assert_fail@plt+0x8624>
   19df8:	b	1a918 <__assert_fail@plt+0x9140>
   19dfc:	b	1a524 <__assert_fail@plt+0x8d4c>
   19e00:	movw	r0, #1
   19e04:	strb	r0, [fp, #-61]	; 0xffffffc3
   19e08:	strb	r0, [fp, #-67]	; 0xffffffbd
   19e0c:	ldr	r0, [fp, #8]
   19e10:	cmp	r0, #2
   19e14:	bne	19ef4 <__assert_fail@plt+0x871c>
   19e18:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19e1c:	tst	r0, #1
   19e20:	beq	19e28 <__assert_fail@plt+0x8650>
   19e24:	b	1a918 <__assert_fail@plt+0x9140>
   19e28:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19e2c:	cmp	r0, #0
   19e30:	beq	19e50 <__assert_fail@plt+0x8678>
   19e34:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19e38:	cmp	r0, #0
   19e3c:	bne	19e50 <__assert_fail@plt+0x8678>
   19e40:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19e44:	str	r0, [fp, #-48]	; 0xffffffd0
   19e48:	movw	r0, #0
   19e4c:	str	r0, [fp, #-28]	; 0xffffffe4
   19e50:	b	19e54 <__assert_fail@plt+0x867c>
   19e54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19e58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19e5c:	cmp	r0, r1
   19e60:	bcs	19e78 <__assert_fail@plt+0x86a0>
   19e64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e68:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19e6c:	add	r0, r0, r1
   19e70:	movw	r1, #39	; 0x27
   19e74:	strb	r1, [r0]
   19e78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19e7c:	add	r0, r0, #1
   19e80:	str	r0, [fp, #-44]	; 0xffffffd4
   19e84:	b	19e88 <__assert_fail@plt+0x86b0>
   19e88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19e8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19e90:	cmp	r0, r1
   19e94:	bcs	19eac <__assert_fail@plt+0x86d4>
   19e98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e9c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19ea0:	add	r0, r0, r1
   19ea4:	movw	r1, #92	; 0x5c
   19ea8:	strb	r1, [r0]
   19eac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19eb0:	add	r0, r0, #1
   19eb4:	str	r0, [fp, #-44]	; 0xffffffd4
   19eb8:	b	19ebc <__assert_fail@plt+0x86e4>
   19ebc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19ec0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19ec4:	cmp	r0, r1
   19ec8:	bcs	19ee0 <__assert_fail@plt+0x8708>
   19ecc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ed0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19ed4:	add	r0, r0, r1
   19ed8:	movw	r1, #39	; 0x27
   19edc:	strb	r1, [r0]
   19ee0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19ee4:	add	r0, r0, #1
   19ee8:	str	r0, [fp, #-44]	; 0xffffffd4
   19eec:	movw	r0, #0
   19ef0:	strb	r0, [fp, #-60]	; 0xffffffc4
   19ef4:	b	1a524 <__assert_fail@plt+0x8d4c>
   19ef8:	movw	r0, #1
   19efc:	strb	r0, [fp, #-67]	; 0xffffffbd
   19f00:	b	1a524 <__assert_fail@plt+0x8d4c>
   19f04:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   19f08:	tst	r0, #1
   19f0c:	beq	19f4c <__assert_fail@plt+0x8774>
   19f10:	mov	r0, #1
   19f14:	str	r0, [fp, #-72]	; 0xffffffb8
   19f18:	bl	115f8 <__ctype_b_loc@plt>
   19f1c:	ldr	r0, [r0]
   19f20:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   19f24:	mov	r2, r1
   19f28:	add	r0, r0, r1, lsl #1
   19f2c:	ldrh	r0, [r0]
   19f30:	and	r0, r0, #16384	; 0x4000
   19f34:	cmp	r0, #0
   19f38:	movw	r0, #0
   19f3c:	movne	r0, #1
   19f40:	and	r0, r0, #1
   19f44:	strb	r0, [fp, #-73]	; 0xffffffb7
   19f48:	b	1a1d8 <__assert_fail@plt+0x8a00>
   19f4c:	sub	r0, fp, #84	; 0x54
   19f50:	movw	r1, #0
   19f54:	and	r1, r1, #255	; 0xff
   19f58:	movw	r2, #8
   19f5c:	bl	11688 <memset@plt>
   19f60:	movw	r0, #0
   19f64:	str	r0, [fp, #-72]	; 0xffffffb8
   19f68:	movw	r0, #1
   19f6c:	strb	r0, [fp, #-73]	; 0xffffffb7
   19f70:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19f74:	cmn	r0, #1
   19f78:	bne	19f88 <__assert_fail@plt+0x87b0>
   19f7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19f80:	bl	11634 <strlen@plt>
   19f84:	str	r0, [fp, #-36]	; 0xffffffdc
   19f88:	b	19f8c <__assert_fail@plt+0x87b4>
   19f8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19f90:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19f94:	ldr	r2, [fp, #-72]	; 0xffffffb8
   19f98:	add	r1, r1, r2
   19f9c:	add	r1, r0, r1
   19fa0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19fa4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19fa8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19fac:	add	r2, r2, r3
   19fb0:	sub	r2, r0, r2
   19fb4:	add	r0, sp, #88	; 0x58
   19fb8:	sub	r3, fp, #84	; 0x54
   19fbc:	bl	1fccc <__assert_fail@plt+0xe4f4>
   19fc0:	str	r0, [sp, #84]	; 0x54
   19fc4:	ldr	r0, [sp, #84]	; 0x54
   19fc8:	cmp	r0, #0
   19fcc:	bne	19fd4 <__assert_fail@plt+0x87fc>
   19fd0:	b	1a1d4 <__assert_fail@plt+0x89fc>
   19fd4:	ldr	r0, [sp, #84]	; 0x54
   19fd8:	cmn	r0, #1
   19fdc:	bne	19fec <__assert_fail@plt+0x8814>
   19fe0:	movw	r0, #0
   19fe4:	strb	r0, [fp, #-73]	; 0xffffffb7
   19fe8:	b	1a1d4 <__assert_fail@plt+0x89fc>
   19fec:	ldr	r0, [sp, #84]	; 0x54
   19ff0:	cmn	r0, #2
   19ff4:	bne	1a068 <__assert_fail@plt+0x8890>
   19ff8:	movw	r0, #0
   19ffc:	strb	r0, [fp, #-73]	; 0xffffffb7
   1a000:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a004:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1a008:	add	r0, r0, r1
   1a00c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a010:	cmp	r0, r1
   1a014:	movw	r0, #0
   1a018:	str	r0, [sp, #24]
   1a01c:	bcs	1a048 <__assert_fail@plt+0x8870>
   1a020:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a024:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a028:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1a02c:	add	r1, r1, r2
   1a030:	add	r0, r0, r1
   1a034:	ldrb	r0, [r0]
   1a038:	cmp	r0, #0
   1a03c:	movw	r0, #0
   1a040:	movne	r0, #1
   1a044:	str	r0, [sp, #24]
   1a048:	ldr	r0, [sp, #24]
   1a04c:	tst	r0, #1
   1a050:	beq	1a064 <__assert_fail@plt+0x888c>
   1a054:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a058:	add	r0, r0, #1
   1a05c:	str	r0, [fp, #-72]	; 0xffffffb8
   1a060:	b	1a000 <__assert_fail@plt+0x8828>
   1a064:	b	1a1d4 <__assert_fail@plt+0x89fc>
   1a068:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a06c:	tst	r0, #1
   1a070:	beq	1a17c <__assert_fail@plt+0x89a4>
   1a074:	ldr	r0, [fp, #8]
   1a078:	cmp	r0, #2
   1a07c:	bne	1a17c <__assert_fail@plt+0x89a4>
   1a080:	movw	r0, #1
   1a084:	str	r0, [sp, #80]	; 0x50
   1a088:	ldr	r0, [sp, #80]	; 0x50
   1a08c:	ldr	r1, [sp, #84]	; 0x54
   1a090:	cmp	r0, r1
   1a094:	bcs	1a178 <__assert_fail@plt+0x89a0>
   1a098:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a09c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a0a0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1a0a4:	add	r1, r1, r2
   1a0a8:	ldr	r2, [sp, #80]	; 0x50
   1a0ac:	add	r1, r1, r2
   1a0b0:	ldrb	r0, [r0, r1]
   1a0b4:	sub	r0, r0, #91	; 0x5b
   1a0b8:	cmp	r0, #33	; 0x21
   1a0bc:	str	r0, [sp, #20]
   1a0c0:	bhi	1a160 <__assert_fail@plt+0x8988>
   1a0c4:	add	r0, pc, #8
   1a0c8:	ldr	r1, [sp, #20]
   1a0cc:	ldr	r0, [r0, r1, lsl #2]
   1a0d0:	mov	pc, r0
   1a0d4:	andeq	sl, r1, ip, asr r1
   1a0d8:	andeq	sl, r1, ip, asr r1
   1a0dc:	andeq	sl, r1, r0, ror #2
   1a0e0:	andeq	sl, r1, ip, asr r1
   1a0e4:	andeq	sl, r1, r0, ror #2
   1a0e8:	andeq	sl, r1, ip, asr r1
   1a0ec:	andeq	sl, r1, r0, ror #2
   1a0f0:	andeq	sl, r1, r0, ror #2
   1a0f4:	andeq	sl, r1, r0, ror #2
   1a0f8:	andeq	sl, r1, r0, ror #2
   1a0fc:	andeq	sl, r1, r0, ror #2
   1a100:	andeq	sl, r1, r0, ror #2
   1a104:	andeq	sl, r1, r0, ror #2
   1a108:	andeq	sl, r1, r0, ror #2
   1a10c:	andeq	sl, r1, r0, ror #2
   1a110:	andeq	sl, r1, r0, ror #2
   1a114:	andeq	sl, r1, r0, ror #2
   1a118:	andeq	sl, r1, r0, ror #2
   1a11c:	andeq	sl, r1, r0, ror #2
   1a120:	andeq	sl, r1, r0, ror #2
   1a124:	andeq	sl, r1, r0, ror #2
   1a128:	andeq	sl, r1, r0, ror #2
   1a12c:	andeq	sl, r1, r0, ror #2
   1a130:	andeq	sl, r1, r0, ror #2
   1a134:	andeq	sl, r1, r0, ror #2
   1a138:	andeq	sl, r1, r0, ror #2
   1a13c:	andeq	sl, r1, r0, ror #2
   1a140:	andeq	sl, r1, r0, ror #2
   1a144:	andeq	sl, r1, r0, ror #2
   1a148:	andeq	sl, r1, r0, ror #2
   1a14c:	andeq	sl, r1, r0, ror #2
   1a150:	andeq	sl, r1, r0, ror #2
   1a154:	andeq	sl, r1, r0, ror #2
   1a158:	andeq	sl, r1, ip, asr r1
   1a15c:	b	1a918 <__assert_fail@plt+0x9140>
   1a160:	b	1a164 <__assert_fail@plt+0x898c>
   1a164:	b	1a168 <__assert_fail@plt+0x8990>
   1a168:	ldr	r0, [sp, #80]	; 0x50
   1a16c:	add	r0, r0, #1
   1a170:	str	r0, [sp, #80]	; 0x50
   1a174:	b	1a088 <__assert_fail@plt+0x88b0>
   1a178:	b	1a17c <__assert_fail@plt+0x89a4>
   1a17c:	ldr	r0, [sp, #88]	; 0x58
   1a180:	bl	11520 <iswprint@plt>
   1a184:	cmp	r0, #0
   1a188:	bne	1a194 <__assert_fail@plt+0x89bc>
   1a18c:	movw	r0, #0
   1a190:	strb	r0, [fp, #-73]	; 0xffffffb7
   1a194:	ldr	r0, [sp, #84]	; 0x54
   1a198:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1a19c:	add	r0, r1, r0
   1a1a0:	str	r0, [fp, #-72]	; 0xffffffb8
   1a1a4:	b	1a1a8 <__assert_fail@plt+0x89d0>
   1a1a8:	b	1a1ac <__assert_fail@plt+0x89d4>
   1a1ac:	b	1a1b0 <__assert_fail@plt+0x89d8>
   1a1b0:	sub	r0, fp, #84	; 0x54
   1a1b4:	bl	114b4 <mbsinit@plt>
   1a1b8:	cmp	r0, #0
   1a1bc:	movw	r0, #0
   1a1c0:	movne	r0, #1
   1a1c4:	mvn	r1, #0
   1a1c8:	eor	r0, r0, r1
   1a1cc:	tst	r0, #1
   1a1d0:	bne	19f8c <__assert_fail@plt+0x87b4>
   1a1d4:	b	1a1d8 <__assert_fail@plt+0x8a00>
   1a1d8:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1a1dc:	and	r0, r0, #1
   1a1e0:	strb	r0, [fp, #-67]	; 0xffffffbd
   1a1e4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a1e8:	movw	r1, #1
   1a1ec:	cmp	r1, r0
   1a1f0:	bcc	1a20c <__assert_fail@plt+0x8a34>
   1a1f4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a1f8:	tst	r0, #1
   1a1fc:	beq	1a520 <__assert_fail@plt+0x8d48>
   1a200:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1a204:	tst	r0, #1
   1a208:	bne	1a520 <__assert_fail@plt+0x8d48>
   1a20c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a210:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1a214:	add	r0, r0, r1
   1a218:	str	r0, [sp, #76]	; 0x4c
   1a21c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a220:	tst	r0, #1
   1a224:	beq	1a3d4 <__assert_fail@plt+0x8bfc>
   1a228:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1a22c:	tst	r0, #1
   1a230:	bne	1a3d4 <__assert_fail@plt+0x8bfc>
   1a234:	b	1a238 <__assert_fail@plt+0x8a60>
   1a238:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a23c:	tst	r0, #1
   1a240:	beq	1a248 <__assert_fail@plt+0x8a70>
   1a244:	b	1a918 <__assert_fail@plt+0x9140>
   1a248:	movw	r0, #1
   1a24c:	strb	r0, [fp, #-66]	; 0xffffffbe
   1a250:	ldr	r0, [fp, #8]
   1a254:	cmp	r0, #2
   1a258:	bne	1a30c <__assert_fail@plt+0x8b34>
   1a25c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1a260:	tst	r0, #1
   1a264:	bne	1a30c <__assert_fail@plt+0x8b34>
   1a268:	b	1a26c <__assert_fail@plt+0x8a94>
   1a26c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a270:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a274:	cmp	r0, r1
   1a278:	bcs	1a290 <__assert_fail@plt+0x8ab8>
   1a27c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a280:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a284:	add	r0, r0, r1
   1a288:	movw	r1, #39	; 0x27
   1a28c:	strb	r1, [r0]
   1a290:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a294:	add	r0, r0, #1
   1a298:	str	r0, [fp, #-44]	; 0xffffffd4
   1a29c:	b	1a2a0 <__assert_fail@plt+0x8ac8>
   1a2a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a2a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a2a8:	cmp	r0, r1
   1a2ac:	bcs	1a2c4 <__assert_fail@plt+0x8aec>
   1a2b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a2b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a2b8:	add	r0, r0, r1
   1a2bc:	movw	r1, #36	; 0x24
   1a2c0:	strb	r1, [r0]
   1a2c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a2c8:	add	r0, r0, #1
   1a2cc:	str	r0, [fp, #-44]	; 0xffffffd4
   1a2d0:	b	1a2d4 <__assert_fail@plt+0x8afc>
   1a2d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a2d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a2dc:	cmp	r0, r1
   1a2e0:	bcs	1a2f8 <__assert_fail@plt+0x8b20>
   1a2e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a2e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a2ec:	add	r0, r0, r1
   1a2f0:	movw	r1, #39	; 0x27
   1a2f4:	strb	r1, [r0]
   1a2f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a2fc:	add	r0, r0, #1
   1a300:	str	r0, [fp, #-44]	; 0xffffffd4
   1a304:	movw	r0, #1
   1a308:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a30c:	b	1a310 <__assert_fail@plt+0x8b38>
   1a310:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a314:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a318:	cmp	r0, r1
   1a31c:	bcs	1a334 <__assert_fail@plt+0x8b5c>
   1a320:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a324:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a328:	add	r0, r0, r1
   1a32c:	movw	r1, #92	; 0x5c
   1a330:	strb	r1, [r0]
   1a334:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a338:	add	r0, r0, #1
   1a33c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a340:	b	1a344 <__assert_fail@plt+0x8b6c>
   1a344:	b	1a348 <__assert_fail@plt+0x8b70>
   1a348:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a34c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a350:	cmp	r0, r1
   1a354:	bcs	1a374 <__assert_fail@plt+0x8b9c>
   1a358:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1a35c:	asr	r0, r0, #6
   1a360:	add	r0, r0, #48	; 0x30
   1a364:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a368:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a36c:	add	r1, r1, r2
   1a370:	strb	r0, [r1]
   1a374:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a378:	add	r0, r0, #1
   1a37c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a380:	b	1a384 <__assert_fail@plt+0x8bac>
   1a384:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a388:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a38c:	cmp	r0, r1
   1a390:	bcs	1a3b4 <__assert_fail@plt+0x8bdc>
   1a394:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1a398:	asr	r0, r0, #3
   1a39c:	and	r0, r0, #7
   1a3a0:	add	r0, r0, #48	; 0x30
   1a3a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a3a8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a3ac:	add	r1, r1, r2
   1a3b0:	strb	r0, [r1]
   1a3b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a3b8:	add	r0, r0, #1
   1a3bc:	str	r0, [fp, #-44]	; 0xffffffd4
   1a3c0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1a3c4:	and	r0, r0, #7
   1a3c8:	add	r0, r0, #48	; 0x30
   1a3cc:	strb	r0, [fp, #-63]	; 0xffffffc1
   1a3d0:	b	1a420 <__assert_fail@plt+0x8c48>
   1a3d4:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   1a3d8:	tst	r0, #1
   1a3dc:	beq	1a41c <__assert_fail@plt+0x8c44>
   1a3e0:	b	1a3e4 <__assert_fail@plt+0x8c0c>
   1a3e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a3e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a3ec:	cmp	r0, r1
   1a3f0:	bcs	1a408 <__assert_fail@plt+0x8c30>
   1a3f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a3f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a3fc:	add	r0, r0, r1
   1a400:	movw	r1, #92	; 0x5c
   1a404:	strb	r1, [r0]
   1a408:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a40c:	add	r0, r0, #1
   1a410:	str	r0, [fp, #-44]	; 0xffffffd4
   1a414:	movw	r0, #0
   1a418:	strb	r0, [fp, #-65]	; 0xffffffbf
   1a41c:	b	1a420 <__assert_fail@plt+0x8c48>
   1a420:	ldr	r0, [sp, #76]	; 0x4c
   1a424:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a428:	add	r1, r1, #1
   1a42c:	cmp	r0, r1
   1a430:	bhi	1a438 <__assert_fail@plt+0x8c60>
   1a434:	b	1a51c <__assert_fail@plt+0x8d44>
   1a438:	b	1a43c <__assert_fail@plt+0x8c64>
   1a43c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1a440:	tst	r0, #1
   1a444:	beq	1a4c4 <__assert_fail@plt+0x8cec>
   1a448:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   1a44c:	tst	r0, #1
   1a450:	bne	1a4c4 <__assert_fail@plt+0x8cec>
   1a454:	b	1a458 <__assert_fail@plt+0x8c80>
   1a458:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a45c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a460:	cmp	r0, r1
   1a464:	bcs	1a47c <__assert_fail@plt+0x8ca4>
   1a468:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a46c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a470:	add	r0, r0, r1
   1a474:	movw	r1, #39	; 0x27
   1a478:	strb	r1, [r0]
   1a47c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a480:	add	r0, r0, #1
   1a484:	str	r0, [fp, #-44]	; 0xffffffd4
   1a488:	b	1a48c <__assert_fail@plt+0x8cb4>
   1a48c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a490:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a494:	cmp	r0, r1
   1a498:	bcs	1a4b0 <__assert_fail@plt+0x8cd8>
   1a49c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a4a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a4a4:	add	r0, r0, r1
   1a4a8:	movw	r1, #39	; 0x27
   1a4ac:	strb	r1, [r0]
   1a4b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a4b4:	add	r0, r0, #1
   1a4b8:	str	r0, [fp, #-44]	; 0xffffffd4
   1a4bc:	movw	r0, #0
   1a4c0:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a4c4:	b	1a4c8 <__assert_fail@plt+0x8cf0>
   1a4c8:	b	1a4cc <__assert_fail@plt+0x8cf4>
   1a4cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a4d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a4d4:	cmp	r0, r1
   1a4d8:	bcs	1a4f0 <__assert_fail@plt+0x8d18>
   1a4dc:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1a4e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a4e4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a4e8:	add	r1, r1, r2
   1a4ec:	strb	r0, [r1]
   1a4f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a4f4:	add	r0, r0, #1
   1a4f8:	str	r0, [fp, #-44]	; 0xffffffd4
   1a4fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a500:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a504:	add	r1, r1, #1
   1a508:	str	r1, [fp, #-40]	; 0xffffffd8
   1a50c:	add	r0, r0, r1
   1a510:	ldrb	r0, [r0]
   1a514:	strb	r0, [fp, #-63]	; 0xffffffc1
   1a518:	b	1a21c <__assert_fail@plt+0x8a44>
   1a51c:	b	1a6ac <__assert_fail@plt+0x8ed4>
   1a520:	b	1a524 <__assert_fail@plt+0x8d4c>
   1a524:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a528:	tst	r0, #1
   1a52c:	beq	1a53c <__assert_fail@plt+0x8d64>
   1a530:	ldr	r0, [fp, #8]
   1a534:	cmp	r0, #2
   1a538:	bne	1a548 <__assert_fail@plt+0x8d70>
   1a53c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a540:	tst	r0, #1
   1a544:	beq	1a584 <__assert_fail@plt+0x8dac>
   1a548:	ldr	r0, [fp, #16]
   1a54c:	movw	r1, #0
   1a550:	cmp	r0, r1
   1a554:	beq	1a584 <__assert_fail@plt+0x8dac>
   1a558:	ldr	r0, [fp, #16]
   1a55c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   1a560:	lsr	r1, r1, #5
   1a564:	add	r0, r0, r1, lsl #2
   1a568:	ldr	r0, [r0]
   1a56c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   1a570:	and	r1, r1, #31
   1a574:	lsr	r0, r0, r1
   1a578:	and	r0, r0, #1
   1a57c:	cmp	r0, #0
   1a580:	bne	1a594 <__assert_fail@plt+0x8dbc>
   1a584:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   1a588:	tst	r0, #1
   1a58c:	bne	1a594 <__assert_fail@plt+0x8dbc>
   1a590:	b	1a6ac <__assert_fail@plt+0x8ed4>
   1a594:	b	1a598 <__assert_fail@plt+0x8dc0>
   1a598:	b	1a59c <__assert_fail@plt+0x8dc4>
   1a59c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a5a0:	tst	r0, #1
   1a5a4:	beq	1a5ac <__assert_fail@plt+0x8dd4>
   1a5a8:	b	1a918 <__assert_fail@plt+0x9140>
   1a5ac:	movw	r0, #1
   1a5b0:	strb	r0, [fp, #-66]	; 0xffffffbe
   1a5b4:	ldr	r0, [fp, #8]
   1a5b8:	cmp	r0, #2
   1a5bc:	bne	1a670 <__assert_fail@plt+0x8e98>
   1a5c0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1a5c4:	tst	r0, #1
   1a5c8:	bne	1a670 <__assert_fail@plt+0x8e98>
   1a5cc:	b	1a5d0 <__assert_fail@plt+0x8df8>
   1a5d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a5d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a5d8:	cmp	r0, r1
   1a5dc:	bcs	1a5f4 <__assert_fail@plt+0x8e1c>
   1a5e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a5e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a5e8:	add	r0, r0, r1
   1a5ec:	movw	r1, #39	; 0x27
   1a5f0:	strb	r1, [r0]
   1a5f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a5f8:	add	r0, r0, #1
   1a5fc:	str	r0, [fp, #-44]	; 0xffffffd4
   1a600:	b	1a604 <__assert_fail@plt+0x8e2c>
   1a604:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a608:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a60c:	cmp	r0, r1
   1a610:	bcs	1a628 <__assert_fail@plt+0x8e50>
   1a614:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a618:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a61c:	add	r0, r0, r1
   1a620:	movw	r1, #36	; 0x24
   1a624:	strb	r1, [r0]
   1a628:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a62c:	add	r0, r0, #1
   1a630:	str	r0, [fp, #-44]	; 0xffffffd4
   1a634:	b	1a638 <__assert_fail@plt+0x8e60>
   1a638:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a63c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a640:	cmp	r0, r1
   1a644:	bcs	1a65c <__assert_fail@plt+0x8e84>
   1a648:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a64c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a650:	add	r0, r0, r1
   1a654:	movw	r1, #39	; 0x27
   1a658:	strb	r1, [r0]
   1a65c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a660:	add	r0, r0, #1
   1a664:	str	r0, [fp, #-44]	; 0xffffffd4
   1a668:	movw	r0, #1
   1a66c:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a670:	b	1a674 <__assert_fail@plt+0x8e9c>
   1a674:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a678:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a67c:	cmp	r0, r1
   1a680:	bcs	1a698 <__assert_fail@plt+0x8ec0>
   1a684:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a688:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a68c:	add	r0, r0, r1
   1a690:	movw	r1, #92	; 0x5c
   1a694:	strb	r1, [r0]
   1a698:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a69c:	add	r0, r0, #1
   1a6a0:	str	r0, [fp, #-44]	; 0xffffffd4
   1a6a4:	b	1a6a8 <__assert_fail@plt+0x8ed0>
   1a6a8:	b	1a6ac <__assert_fail@plt+0x8ed4>
   1a6ac:	b	1a6b0 <__assert_fail@plt+0x8ed8>
   1a6b0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1a6b4:	tst	r0, #1
   1a6b8:	beq	1a738 <__assert_fail@plt+0x8f60>
   1a6bc:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   1a6c0:	tst	r0, #1
   1a6c4:	bne	1a738 <__assert_fail@plt+0x8f60>
   1a6c8:	b	1a6cc <__assert_fail@plt+0x8ef4>
   1a6cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a6d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a6d4:	cmp	r0, r1
   1a6d8:	bcs	1a6f0 <__assert_fail@plt+0x8f18>
   1a6dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a6e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a6e4:	add	r0, r0, r1
   1a6e8:	movw	r1, #39	; 0x27
   1a6ec:	strb	r1, [r0]
   1a6f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a6f4:	add	r0, r0, #1
   1a6f8:	str	r0, [fp, #-44]	; 0xffffffd4
   1a6fc:	b	1a700 <__assert_fail@plt+0x8f28>
   1a700:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a704:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a708:	cmp	r0, r1
   1a70c:	bcs	1a724 <__assert_fail@plt+0x8f4c>
   1a710:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a714:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a718:	add	r0, r0, r1
   1a71c:	movw	r1, #39	; 0x27
   1a720:	strb	r1, [r0]
   1a724:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a728:	add	r0, r0, #1
   1a72c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a730:	movw	r0, #0
   1a734:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a738:	b	1a73c <__assert_fail@plt+0x8f64>
   1a73c:	b	1a740 <__assert_fail@plt+0x8f68>
   1a740:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a744:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a748:	cmp	r0, r1
   1a74c:	bcs	1a764 <__assert_fail@plt+0x8f8c>
   1a750:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1a754:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a758:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a75c:	add	r1, r1, r2
   1a760:	strb	r0, [r1]
   1a764:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a768:	add	r0, r0, #1
   1a76c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a770:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   1a774:	tst	r0, #1
   1a778:	bne	1a784 <__assert_fail@plt+0x8fac>
   1a77c:	movw	r0, #0
   1a780:	strb	r0, [fp, #-62]	; 0xffffffc2
   1a784:	b	1a788 <__assert_fail@plt+0x8fb0>
   1a788:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a78c:	add	r0, r0, #1
   1a790:	str	r0, [fp, #-40]	; 0xffffffd8
   1a794:	b	19540 <__assert_fail@plt+0x7d68>
   1a798:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a79c:	cmp	r0, #0
   1a7a0:	bne	1a7c0 <__assert_fail@plt+0x8fe8>
   1a7a4:	ldr	r0, [fp, #8]
   1a7a8:	cmp	r0, #2
   1a7ac:	bne	1a7c0 <__assert_fail@plt+0x8fe8>
   1a7b0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a7b4:	tst	r0, #1
   1a7b8:	beq	1a7c0 <__assert_fail@plt+0x8fe8>
   1a7bc:	b	1a918 <__assert_fail@plt+0x9140>
   1a7c0:	ldr	r0, [fp, #8]
   1a7c4:	cmp	r0, #2
   1a7c8:	bne	1a868 <__assert_fail@plt+0x9090>
   1a7cc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a7d0:	tst	r0, #1
   1a7d4:	bne	1a868 <__assert_fail@plt+0x9090>
   1a7d8:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   1a7dc:	tst	r0, #1
   1a7e0:	beq	1a868 <__assert_fail@plt+0x9090>
   1a7e4:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   1a7e8:	tst	r0, #1
   1a7ec:	beq	1a834 <__assert_fail@plt+0x905c>
   1a7f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a7f4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a7f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a7fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a800:	ldr	ip, [fp, #12]
   1a804:	ldr	lr, [fp, #16]
   1a808:	ldr	r4, [fp, #20]
   1a80c:	ldr	r5, [fp, #24]
   1a810:	movw	r6, #5
   1a814:	str	r6, [sp]
   1a818:	str	ip, [sp, #4]
   1a81c:	str	lr, [sp, #8]
   1a820:	str	r4, [sp, #12]
   1a824:	str	r5, [sp, #16]
   1a828:	bl	19258 <__assert_fail@plt+0x7a80>
   1a82c:	str	r0, [fp, #-20]	; 0xffffffec
   1a830:	b	1a980 <__assert_fail@plt+0x91a8>
   1a834:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a838:	cmp	r0, #0
   1a83c:	bne	1a860 <__assert_fail@plt+0x9088>
   1a840:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a844:	cmp	r0, #0
   1a848:	beq	1a860 <__assert_fail@plt+0x9088>
   1a84c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a850:	str	r0, [fp, #-28]	; 0xffffffe4
   1a854:	movw	r0, #0
   1a858:	str	r0, [fp, #-44]	; 0xffffffd4
   1a85c:	b	19300 <__assert_fail@plt+0x7b28>
   1a860:	b	1a864 <__assert_fail@plt+0x908c>
   1a864:	b	1a868 <__assert_fail@plt+0x9090>
   1a868:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a86c:	movw	r1, #0
   1a870:	cmp	r0, r1
   1a874:	beq	1a8e8 <__assert_fail@plt+0x9110>
   1a878:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a87c:	tst	r0, #1
   1a880:	bne	1a8e8 <__assert_fail@plt+0x9110>
   1a884:	b	1a888 <__assert_fail@plt+0x90b0>
   1a888:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a88c:	ldrsb	r0, [r0]
   1a890:	cmp	r0, #0
   1a894:	beq	1a8e4 <__assert_fail@plt+0x910c>
   1a898:	b	1a89c <__assert_fail@plt+0x90c4>
   1a89c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a8a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a8a4:	cmp	r0, r1
   1a8a8:	bcs	1a8c4 <__assert_fail@plt+0x90ec>
   1a8ac:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a8b0:	ldrb	r0, [r0]
   1a8b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a8b8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a8bc:	add	r1, r1, r2
   1a8c0:	strb	r0, [r1]
   1a8c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a8c8:	add	r0, r0, #1
   1a8cc:	str	r0, [fp, #-44]	; 0xffffffd4
   1a8d0:	b	1a8d4 <__assert_fail@plt+0x90fc>
   1a8d4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a8d8:	add	r0, r0, #1
   1a8dc:	str	r0, [fp, #-52]	; 0xffffffcc
   1a8e0:	b	1a888 <__assert_fail@plt+0x90b0>
   1a8e4:	b	1a8e8 <__assert_fail@plt+0x9110>
   1a8e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a8ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a8f0:	cmp	r0, r1
   1a8f4:	bcs	1a90c <__assert_fail@plt+0x9134>
   1a8f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a8fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a900:	add	r0, r0, r1
   1a904:	movw	r1, #0
   1a908:	strb	r1, [r0]
   1a90c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a910:	str	r0, [fp, #-20]	; 0xffffffec
   1a914:	b	1a980 <__assert_fail@plt+0x91a8>
   1a918:	ldr	r0, [fp, #8]
   1a91c:	cmp	r0, #2
   1a920:	bne	1a938 <__assert_fail@plt+0x9160>
   1a924:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a928:	tst	r0, #1
   1a92c:	beq	1a938 <__assert_fail@plt+0x9160>
   1a930:	movw	r0, #4
   1a934:	str	r0, [fp, #8]
   1a938:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a93c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a940:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a944:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a948:	ldr	ip, [fp, #8]
   1a94c:	ldr	lr, [fp, #12]
   1a950:	mvn	r4, #2
   1a954:	and	lr, lr, r4
   1a958:	ldr	r4, [fp, #20]
   1a95c:	ldr	r5, [fp, #24]
   1a960:	str	ip, [sp]
   1a964:	str	lr, [sp, #4]
   1a968:	movw	ip, #0
   1a96c:	str	ip, [sp, #8]
   1a970:	str	r4, [sp, #12]
   1a974:	str	r5, [sp, #16]
   1a978:	bl	19258 <__assert_fail@plt+0x7a80>
   1a97c:	str	r0, [fp, #-20]	; 0xffffffec
   1a980:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a984:	sub	sp, fp, #16
   1a988:	pop	{r4, r5, r6, sl, fp, pc}
   1a98c:	push	{fp, lr}
   1a990:	mov	fp, sp
   1a994:	sub	sp, sp, #16
   1a998:	str	r0, [fp, #-4]
   1a99c:	str	r1, [sp, #8]
   1a9a0:	str	r2, [sp, #4]
   1a9a4:	ldr	r0, [fp, #-4]
   1a9a8:	ldr	r1, [sp, #8]
   1a9ac:	ldr	r3, [sp, #4]
   1a9b0:	movw	r2, #0
   1a9b4:	bl	1a9c0 <__assert_fail@plt+0x91e8>
   1a9b8:	mov	sp, fp
   1a9bc:	pop	{fp, pc}
   1a9c0:	push	{r4, r5, r6, sl, fp, lr}
   1a9c4:	add	fp, sp, #16
   1a9c8:	sub	sp, sp, #80	; 0x50
   1a9cc:	str	r0, [fp, #-20]	; 0xffffffec
   1a9d0:	str	r1, [fp, #-24]	; 0xffffffe8
   1a9d4:	str	r2, [fp, #-28]	; 0xffffffe4
   1a9d8:	str	r3, [fp, #-32]	; 0xffffffe0
   1a9dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a9e0:	movw	r1, #0
   1a9e4:	cmp	r0, r1
   1a9e8:	beq	1a9f8 <__assert_fail@plt+0x9220>
   1a9ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a9f0:	str	r0, [sp, #40]	; 0x28
   1a9f4:	b	1aa08 <__assert_fail@plt+0x9230>
   1a9f8:	movw	r0, #21172	; 0x52b4
   1a9fc:	movt	r0, #3
   1aa00:	str	r0, [sp, #40]	; 0x28
   1aa04:	b	1aa08 <__assert_fail@plt+0x9230>
   1aa08:	ldr	r0, [sp, #40]	; 0x28
   1aa0c:	str	r0, [fp, #-36]	; 0xffffffdc
   1aa10:	bl	11664 <__errno_location@plt>
   1aa14:	ldr	r0, [r0]
   1aa18:	str	r0, [fp, #-40]	; 0xffffffd8
   1aa1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1aa20:	ldr	r0, [r0, #4]
   1aa24:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1aa28:	movw	r2, #0
   1aa2c:	cmp	r1, r2
   1aa30:	movw	r1, #0
   1aa34:	movne	r1, #1
   1aa38:	tst	r1, #1
   1aa3c:	mov	r1, r2
   1aa40:	moveq	r1, #1
   1aa44:	orr	r0, r0, r1
   1aa48:	str	r0, [fp, #-44]	; 0xffffffd4
   1aa4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1aa50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aa54:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1aa58:	ldr	r1, [r1]
   1aa5c:	ldr	ip, [fp, #-44]	; 0xffffffd4
   1aa60:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1aa64:	add	lr, lr, #8
   1aa68:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1aa6c:	ldr	r4, [r4, #40]	; 0x28
   1aa70:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1aa74:	ldr	r5, [r5, #44]	; 0x2c
   1aa78:	str	r0, [sp, #36]	; 0x24
   1aa7c:	mov	r0, r2
   1aa80:	str	r1, [sp, #32]
   1aa84:	mov	r1, r2
   1aa88:	ldr	r2, [sp, #36]	; 0x24
   1aa8c:	ldr	r6, [sp, #32]
   1aa90:	str	r6, [sp]
   1aa94:	str	ip, [sp, #4]
   1aa98:	str	lr, [sp, #8]
   1aa9c:	str	r4, [sp, #12]
   1aaa0:	str	r5, [sp, #16]
   1aaa4:	bl	19258 <__assert_fail@plt+0x7a80>
   1aaa8:	add	r0, r0, #1
   1aaac:	str	r0, [sp, #48]	; 0x30
   1aab0:	ldr	r0, [sp, #48]	; 0x30
   1aab4:	bl	1c114 <__assert_fail@plt+0xa93c>
   1aab8:	str	r0, [sp, #44]	; 0x2c
   1aabc:	ldr	r0, [sp, #44]	; 0x2c
   1aac0:	ldr	r1, [sp, #48]	; 0x30
   1aac4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1aac8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aacc:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1aad0:	ldr	ip, [ip]
   1aad4:	ldr	lr, [fp, #-44]	; 0xffffffd4
   1aad8:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1aadc:	add	r4, r4, #8
   1aae0:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1aae4:	ldr	r5, [r5, #40]	; 0x28
   1aae8:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1aaec:	ldr	r6, [r6, #44]	; 0x2c
   1aaf0:	str	ip, [sp]
   1aaf4:	str	lr, [sp, #4]
   1aaf8:	str	r4, [sp, #8]
   1aafc:	str	r5, [sp, #12]
   1ab00:	str	r6, [sp, #16]
   1ab04:	bl	19258 <__assert_fail@plt+0x7a80>
   1ab08:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ab0c:	str	r0, [sp, #28]
   1ab10:	str	r1, [sp, #24]
   1ab14:	bl	11664 <__errno_location@plt>
   1ab18:	ldr	r1, [sp, #24]
   1ab1c:	str	r1, [r0]
   1ab20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ab24:	movw	r2, #0
   1ab28:	cmp	r0, r2
   1ab2c:	beq	1ab40 <__assert_fail@plt+0x9368>
   1ab30:	ldr	r0, [sp, #48]	; 0x30
   1ab34:	sub	r0, r0, #1
   1ab38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ab3c:	str	r0, [r1]
   1ab40:	ldr	r0, [sp, #44]	; 0x2c
   1ab44:	sub	sp, fp, #16
   1ab48:	pop	{r4, r5, r6, sl, fp, pc}
   1ab4c:	push	{fp, lr}
   1ab50:	mov	fp, sp
   1ab54:	sub	sp, sp, #8
   1ab58:	movw	r0, #20852	; 0x5174
   1ab5c:	movt	r0, #3
   1ab60:	ldr	r0, [r0]
   1ab64:	str	r0, [sp, #4]
   1ab68:	movw	r0, #1
   1ab6c:	str	r0, [sp]
   1ab70:	ldr	r0, [sp]
   1ab74:	movw	r1, #20856	; 0x5178
   1ab78:	movt	r1, #3
   1ab7c:	ldr	r1, [r1]
   1ab80:	cmp	r0, r1
   1ab84:	bge	1abac <__assert_fail@plt+0x93d4>
   1ab88:	ldr	r0, [sp, #4]
   1ab8c:	ldr	r1, [sp]
   1ab90:	add	r0, r0, r1, lsl #3
   1ab94:	ldr	r0, [r0, #4]
   1ab98:	bl	1fb14 <__assert_fail@plt+0xe33c>
   1ab9c:	ldr	r0, [sp]
   1aba0:	add	r0, r0, #1
   1aba4:	str	r0, [sp]
   1aba8:	b	1ab70 <__assert_fail@plt+0x9398>
   1abac:	ldr	r0, [sp, #4]
   1abb0:	ldr	r0, [r0, #4]
   1abb4:	movw	r1, #21220	; 0x52e4
   1abb8:	movt	r1, #3
   1abbc:	cmp	r0, r1
   1abc0:	beq	1abec <__assert_fail@plt+0x9414>
   1abc4:	ldr	r0, [sp, #4]
   1abc8:	ldr	r0, [r0, #4]
   1abcc:	bl	1fb14 <__assert_fail@plt+0xe33c>
   1abd0:	movw	r0, #256	; 0x100
   1abd4:	movw	r1, #20860	; 0x517c
   1abd8:	movt	r1, #3
   1abdc:	str	r0, [r1]
   1abe0:	movw	r0, #21220	; 0x52e4
   1abe4:	movt	r0, #3
   1abe8:	str	r0, [r1, #4]
   1abec:	ldr	r0, [sp, #4]
   1abf0:	movw	r1, #20860	; 0x517c
   1abf4:	movt	r1, #3
   1abf8:	cmp	r0, r1
   1abfc:	beq	1ac1c <__assert_fail@plt+0x9444>
   1ac00:	ldr	r0, [sp, #4]
   1ac04:	bl	1fb14 <__assert_fail@plt+0xe33c>
   1ac08:	movw	r0, #20852	; 0x5174
   1ac0c:	movt	r0, #3
   1ac10:	movw	r1, #20860	; 0x517c
   1ac14:	movt	r1, #3
   1ac18:	str	r1, [r0]
   1ac1c:	movw	r0, #20856	; 0x5178
   1ac20:	movt	r0, #3
   1ac24:	movw	r1, #1
   1ac28:	str	r1, [r0]
   1ac2c:	mov	sp, fp
   1ac30:	pop	{fp, pc}
   1ac34:	push	{fp, lr}
   1ac38:	mov	fp, sp
   1ac3c:	sub	sp, sp, #8
   1ac40:	str	r0, [sp, #4]
   1ac44:	str	r1, [sp]
   1ac48:	ldr	r0, [sp, #4]
   1ac4c:	ldr	r1, [sp]
   1ac50:	mvn	r2, #0
   1ac54:	movw	r3, #21172	; 0x52b4
   1ac58:	movt	r3, #3
   1ac5c:	bl	1ac68 <__assert_fail@plt+0x9490>
   1ac60:	mov	sp, fp
   1ac64:	pop	{fp, pc}
   1ac68:	push	{r4, r5, r6, sl, fp, lr}
   1ac6c:	add	fp, sp, #16
   1ac70:	sub	sp, sp, #80	; 0x50
   1ac74:	str	r0, [fp, #-20]	; 0xffffffec
   1ac78:	str	r1, [fp, #-24]	; 0xffffffe8
   1ac7c:	str	r2, [fp, #-28]	; 0xffffffe4
   1ac80:	str	r3, [fp, #-32]	; 0xffffffe0
   1ac84:	bl	11664 <__errno_location@plt>
   1ac88:	ldr	r1, [pc, #672]	; 1af30 <__assert_fail@plt+0x9758>
   1ac8c:	ldr	r0, [r0]
   1ac90:	str	r0, [fp, #-36]	; 0xffffffdc
   1ac94:	movw	r0, #20852	; 0x5174
   1ac98:	movt	r0, #3
   1ac9c:	ldr	r0, [r0]
   1aca0:	str	r0, [fp, #-40]	; 0xffffffd8
   1aca4:	str	r1, [fp, #-44]	; 0xffffffd4
   1aca8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1acac:	movw	r1, #0
   1acb0:	cmp	r1, r0
   1acb4:	bgt	1acc8 <__assert_fail@plt+0x94f0>
   1acb8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1acbc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1acc0:	cmp	r0, r1
   1acc4:	blt	1accc <__assert_fail@plt+0x94f4>
   1acc8:	bl	117a8 <abort@plt>
   1accc:	movw	r0, #20856	; 0x5178
   1acd0:	movt	r0, #3
   1acd4:	ldr	r0, [r0]
   1acd8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1acdc:	cmp	r0, r1
   1ace0:	bgt	1add8 <__assert_fail@plt+0x9600>
   1ace4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ace8:	movw	r1, #20860	; 0x517c
   1acec:	movt	r1, #3
   1acf0:	cmp	r0, r1
   1acf4:	movw	r0, #0
   1acf8:	moveq	r0, #1
   1acfc:	and	r0, r0, #1
   1ad00:	strb	r0, [fp, #-45]	; 0xffffffd3
   1ad04:	movw	r0, #20856	; 0x5178
   1ad08:	movt	r0, #3
   1ad0c:	ldr	r0, [r0]
   1ad10:	str	r0, [sp, #44]	; 0x2c
   1ad14:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1ad18:	tst	r0, #1
   1ad1c:	beq	1ad2c <__assert_fail@plt+0x9554>
   1ad20:	movw	r0, #0
   1ad24:	str	r0, [sp, #24]
   1ad28:	b	1ad34 <__assert_fail@plt+0x955c>
   1ad2c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ad30:	str	r0, [sp, #24]
   1ad34:	ldr	r0, [sp, #24]
   1ad38:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ad3c:	movw	r2, #20856	; 0x5178
   1ad40:	movt	r2, #3
   1ad44:	ldr	r2, [r2]
   1ad48:	sub	r1, r1, r2
   1ad4c:	add	r2, r1, #1
   1ad50:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ad54:	add	r1, sp, #44	; 0x2c
   1ad58:	movw	ip, #8
   1ad5c:	str	ip, [sp]
   1ad60:	bl	1c350 <__assert_fail@plt+0xab78>
   1ad64:	str	r0, [fp, #-40]	; 0xffffffd8
   1ad68:	movw	r1, #20852	; 0x5174
   1ad6c:	movt	r1, #3
   1ad70:	str	r0, [r1]
   1ad74:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1ad78:	tst	r0, #1
   1ad7c:	beq	1ad9c <__assert_fail@plt+0x95c4>
   1ad80:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ad84:	movw	r1, #20860	; 0x517c
   1ad88:	movt	r1, #3
   1ad8c:	ldr	r2, [r1]
   1ad90:	str	r2, [r0]
   1ad94:	ldr	r1, [r1, #4]
   1ad98:	str	r1, [r0, #4]
   1ad9c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ada0:	movw	r1, #20856	; 0x5178
   1ada4:	movt	r1, #3
   1ada8:	ldr	r1, [r1]
   1adac:	add	r0, r0, r1, lsl #3
   1adb0:	ldr	r2, [sp, #44]	; 0x2c
   1adb4:	sub	r1, r2, r1
   1adb8:	lsl	r2, r1, #3
   1adbc:	movw	r1, #0
   1adc0:	and	r1, r1, #255	; 0xff
   1adc4:	bl	11688 <memset@plt>
   1adc8:	ldr	r0, [sp, #44]	; 0x2c
   1adcc:	movw	r1, #20856	; 0x5178
   1add0:	movt	r1, #3
   1add4:	str	r0, [r1]
   1add8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1addc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ade0:	ldr	r0, [r0, r1, lsl #3]
   1ade4:	str	r0, [sp, #40]	; 0x28
   1ade8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1adec:	ldr	r1, [fp, #-20]	; 0xffffffec
   1adf0:	add	r0, r0, r1, lsl #3
   1adf4:	ldr	r0, [r0, #4]
   1adf8:	str	r0, [sp, #36]	; 0x24
   1adfc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ae00:	ldr	r0, [r0, #4]
   1ae04:	orr	r0, r0, #1
   1ae08:	str	r0, [sp, #32]
   1ae0c:	ldr	r0, [sp, #36]	; 0x24
   1ae10:	ldr	r1, [sp, #40]	; 0x28
   1ae14:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ae18:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ae1c:	ldr	ip, [fp, #-32]	; 0xffffffe0
   1ae20:	ldr	ip, [ip]
   1ae24:	ldr	lr, [sp, #32]
   1ae28:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1ae2c:	add	r4, r4, #8
   1ae30:	ldr	r5, [fp, #-32]	; 0xffffffe0
   1ae34:	ldr	r5, [r5, #40]	; 0x28
   1ae38:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1ae3c:	ldr	r6, [r6, #44]	; 0x2c
   1ae40:	str	ip, [sp]
   1ae44:	str	lr, [sp, #4]
   1ae48:	str	r4, [sp, #8]
   1ae4c:	str	r5, [sp, #12]
   1ae50:	str	r6, [sp, #16]
   1ae54:	bl	19258 <__assert_fail@plt+0x7a80>
   1ae58:	str	r0, [sp, #28]
   1ae5c:	ldr	r0, [sp, #40]	; 0x28
   1ae60:	ldr	r1, [sp, #28]
   1ae64:	cmp	r0, r1
   1ae68:	bhi	1af10 <__assert_fail@plt+0x9738>
   1ae6c:	ldr	r0, [sp, #28]
   1ae70:	add	r0, r0, #1
   1ae74:	str	r0, [sp, #40]	; 0x28
   1ae78:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ae7c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ae80:	add	r1, r1, r2, lsl #3
   1ae84:	str	r0, [r1]
   1ae88:	ldr	r0, [sp, #36]	; 0x24
   1ae8c:	movw	r1, #21220	; 0x52e4
   1ae90:	movt	r1, #3
   1ae94:	cmp	r0, r1
   1ae98:	beq	1aea4 <__assert_fail@plt+0x96cc>
   1ae9c:	ldr	r0, [sp, #36]	; 0x24
   1aea0:	bl	1fb14 <__assert_fail@plt+0xe33c>
   1aea4:	ldr	r0, [sp, #40]	; 0x28
   1aea8:	bl	1c114 <__assert_fail@plt+0xa93c>
   1aeac:	mov	r1, r0
   1aeb0:	str	r0, [sp, #36]	; 0x24
   1aeb4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1aeb8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1aebc:	add	r0, r0, r2, lsl #3
   1aec0:	str	r1, [r0, #4]
   1aec4:	ldr	r0, [sp, #36]	; 0x24
   1aec8:	ldr	r1, [sp, #40]	; 0x28
   1aecc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1aed0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1aed4:	ldr	ip, [fp, #-32]	; 0xffffffe0
   1aed8:	ldr	ip, [ip]
   1aedc:	ldr	lr, [sp, #32]
   1aee0:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1aee4:	add	r4, r4, #8
   1aee8:	ldr	r5, [fp, #-32]	; 0xffffffe0
   1aeec:	ldr	r5, [r5, #40]	; 0x28
   1aef0:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1aef4:	ldr	r6, [r6, #44]	; 0x2c
   1aef8:	str	ip, [sp]
   1aefc:	str	lr, [sp, #4]
   1af00:	str	r4, [sp, #8]
   1af04:	str	r5, [sp, #12]
   1af08:	str	r6, [sp, #16]
   1af0c:	bl	19258 <__assert_fail@plt+0x7a80>
   1af10:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1af14:	str	r0, [sp, #20]
   1af18:	bl	11664 <__errno_location@plt>
   1af1c:	ldr	r1, [sp, #20]
   1af20:	str	r1, [r0]
   1af24:	ldr	r0, [sp, #36]	; 0x24
   1af28:	sub	sp, fp, #16
   1af2c:	pop	{r4, r5, r6, sl, fp, pc}
   1af30:	svcvc	0x00ffffff
   1af34:	push	{fp, lr}
   1af38:	mov	fp, sp
   1af3c:	sub	sp, sp, #16
   1af40:	str	r0, [fp, #-4]
   1af44:	str	r1, [sp, #8]
   1af48:	str	r2, [sp, #4]
   1af4c:	ldr	r0, [fp, #-4]
   1af50:	ldr	r1, [sp, #8]
   1af54:	ldr	r2, [sp, #4]
   1af58:	movw	r3, #21172	; 0x52b4
   1af5c:	movt	r3, #3
   1af60:	bl	1ac68 <__assert_fail@plt+0x9490>
   1af64:	mov	sp, fp
   1af68:	pop	{fp, pc}
   1af6c:	push	{fp, lr}
   1af70:	mov	fp, sp
   1af74:	sub	sp, sp, #8
   1af78:	str	r0, [sp, #4]
   1af7c:	ldr	r1, [sp, #4]
   1af80:	movw	r0, #0
   1af84:	bl	1ac34 <__assert_fail@plt+0x945c>
   1af88:	mov	sp, fp
   1af8c:	pop	{fp, pc}
   1af90:	push	{fp, lr}
   1af94:	mov	fp, sp
   1af98:	sub	sp, sp, #8
   1af9c:	str	r0, [sp, #4]
   1afa0:	str	r1, [sp]
   1afa4:	ldr	r1, [sp, #4]
   1afa8:	ldr	r2, [sp]
   1afac:	movw	r0, #0
   1afb0:	bl	1af34 <__assert_fail@plt+0x975c>
   1afb4:	mov	sp, fp
   1afb8:	pop	{fp, pc}
   1afbc:	push	{fp, lr}
   1afc0:	mov	fp, sp
   1afc4:	sub	sp, sp, #64	; 0x40
   1afc8:	str	r0, [fp, #-4]
   1afcc:	str	r1, [fp, #-8]
   1afd0:	str	r2, [fp, #-12]
   1afd4:	ldr	r1, [fp, #-8]
   1afd8:	add	r0, sp, #4
   1afdc:	bl	1affc <__assert_fail@plt+0x9824>
   1afe0:	ldr	r0, [fp, #-4]
   1afe4:	ldr	r1, [fp, #-12]
   1afe8:	mvn	r2, #0
   1afec:	add	r3, sp, #4
   1aff0:	bl	1ac68 <__assert_fail@plt+0x9490>
   1aff4:	mov	sp, fp
   1aff8:	pop	{fp, pc}
   1affc:	push	{fp, lr}
   1b000:	mov	fp, sp
   1b004:	sub	sp, sp, #8
   1b008:	str	r1, [sp, #4]
   1b00c:	mov	r1, r0
   1b010:	str	r0, [sp]
   1b014:	mov	r0, r1
   1b018:	movw	r1, #0
   1b01c:	and	r1, r1, #255	; 0xff
   1b020:	movw	r2, #48	; 0x30
   1b024:	bl	11688 <memset@plt>
   1b028:	ldr	r0, [sp, #4]
   1b02c:	cmp	r0, #10
   1b030:	bne	1b038 <__assert_fail@plt+0x9860>
   1b034:	bl	117a8 <abort@plt>
   1b038:	ldr	r0, [sp, #4]
   1b03c:	ldr	r1, [sp]
   1b040:	str	r0, [r1]
   1b044:	mov	sp, fp
   1b048:	pop	{fp, pc}
   1b04c:	push	{fp, lr}
   1b050:	mov	fp, sp
   1b054:	sub	sp, sp, #64	; 0x40
   1b058:	str	r0, [fp, #-4]
   1b05c:	str	r1, [fp, #-8]
   1b060:	str	r2, [fp, #-12]
   1b064:	str	r3, [fp, #-16]
   1b068:	ldr	r1, [fp, #-8]
   1b06c:	mov	r0, sp
   1b070:	bl	1affc <__assert_fail@plt+0x9824>
   1b074:	ldr	r0, [fp, #-4]
   1b078:	ldr	r1, [fp, #-12]
   1b07c:	ldr	r2, [fp, #-16]
   1b080:	mov	r3, sp
   1b084:	bl	1ac68 <__assert_fail@plt+0x9490>
   1b088:	mov	sp, fp
   1b08c:	pop	{fp, pc}
   1b090:	push	{fp, lr}
   1b094:	mov	fp, sp
   1b098:	sub	sp, sp, #8
   1b09c:	str	r0, [sp, #4]
   1b0a0:	str	r1, [sp]
   1b0a4:	ldr	r1, [sp, #4]
   1b0a8:	ldr	r2, [sp]
   1b0ac:	movw	r0, #0
   1b0b0:	bl	1afbc <__assert_fail@plt+0x97e4>
   1b0b4:	mov	sp, fp
   1b0b8:	pop	{fp, pc}
   1b0bc:	push	{fp, lr}
   1b0c0:	mov	fp, sp
   1b0c4:	sub	sp, sp, #16
   1b0c8:	str	r0, [fp, #-4]
   1b0cc:	str	r1, [sp, #8]
   1b0d0:	str	r2, [sp, #4]
   1b0d4:	ldr	r1, [fp, #-4]
   1b0d8:	ldr	r2, [sp, #8]
   1b0dc:	ldr	r3, [sp, #4]
   1b0e0:	movw	r0, #0
   1b0e4:	bl	1b04c <__assert_fail@plt+0x9874>
   1b0e8:	mov	sp, fp
   1b0ec:	pop	{fp, pc}
   1b0f0:	push	{fp, lr}
   1b0f4:	mov	fp, sp
   1b0f8:	sub	sp, sp, #72	; 0x48
   1b0fc:	movw	r3, #21172	; 0x52b4
   1b100:	movt	r3, #3
   1b104:	str	r0, [fp, #-4]
   1b108:	str	r1, [fp, #-8]
   1b10c:	strb	r2, [fp, #-9]
   1b110:	add	r0, sp, #12
   1b114:	mov	r1, r0
   1b118:	str	r0, [sp, #8]
   1b11c:	mov	r0, r1
   1b120:	mov	r1, r3
   1b124:	movw	r2, #48	; 0x30
   1b128:	bl	1149c <memcpy@plt>
   1b12c:	ldr	r0, [sp, #8]
   1b130:	ldrb	r1, [fp, #-9]
   1b134:	movw	r2, #1
   1b138:	bl	19000 <__assert_fail@plt+0x7828>
   1b13c:	ldr	r1, [fp, #-4]
   1b140:	ldr	r2, [fp, #-8]
   1b144:	movw	r3, #0
   1b148:	str	r0, [sp, #4]
   1b14c:	mov	r0, r3
   1b150:	add	r3, sp, #12
   1b154:	bl	1ac68 <__assert_fail@plt+0x9490>
   1b158:	mov	sp, fp
   1b15c:	pop	{fp, pc}
   1b160:	push	{fp, lr}
   1b164:	mov	fp, sp
   1b168:	sub	sp, sp, #8
   1b16c:	str	r0, [sp, #4]
   1b170:	strb	r1, [sp, #3]
   1b174:	ldr	r0, [sp, #4]
   1b178:	mvn	r1, #0
   1b17c:	ldrb	r2, [sp, #3]
   1b180:	bl	1b0f0 <__assert_fail@plt+0x9918>
   1b184:	mov	sp, fp
   1b188:	pop	{fp, pc}
   1b18c:	push	{fp, lr}
   1b190:	mov	fp, sp
   1b194:	sub	sp, sp, #8
   1b198:	str	r0, [sp, #4]
   1b19c:	ldr	r0, [sp, #4]
   1b1a0:	movw	r1, #58	; 0x3a
   1b1a4:	and	r1, r1, #255	; 0xff
   1b1a8:	bl	1b160 <__assert_fail@plt+0x9988>
   1b1ac:	mov	sp, fp
   1b1b0:	pop	{fp, pc}
   1b1b4:	push	{fp, lr}
   1b1b8:	mov	fp, sp
   1b1bc:	sub	sp, sp, #8
   1b1c0:	str	r0, [sp, #4]
   1b1c4:	str	r1, [sp]
   1b1c8:	ldr	r0, [sp, #4]
   1b1cc:	ldr	r1, [sp]
   1b1d0:	movw	r2, #58	; 0x3a
   1b1d4:	and	r2, r2, #255	; 0xff
   1b1d8:	bl	1b0f0 <__assert_fail@plt+0x9918>
   1b1dc:	mov	sp, fp
   1b1e0:	pop	{fp, pc}
   1b1e4:	push	{fp, lr}
   1b1e8:	mov	fp, sp
   1b1ec:	sub	sp, sp, #120	; 0x78
   1b1f0:	str	r0, [fp, #-4]
   1b1f4:	str	r1, [fp, #-8]
   1b1f8:	str	r2, [fp, #-12]
   1b1fc:	ldr	r1, [fp, #-8]
   1b200:	add	r0, sp, #12
   1b204:	bl	1affc <__assert_fail@plt+0x9824>
   1b208:	add	r0, sp, #60	; 0x3c
   1b20c:	mov	r1, r0
   1b210:	add	r2, sp, #12
   1b214:	str	r0, [sp, #8]
   1b218:	mov	r0, r1
   1b21c:	mov	r1, r2
   1b220:	movw	r2, #48	; 0x30
   1b224:	bl	1149c <memcpy@plt>
   1b228:	ldr	r0, [sp, #8]
   1b22c:	movw	r1, #58	; 0x3a
   1b230:	and	r1, r1, #255	; 0xff
   1b234:	movw	r2, #1
   1b238:	bl	19000 <__assert_fail@plt+0x7828>
   1b23c:	ldr	r1, [fp, #-4]
   1b240:	ldr	r2, [fp, #-12]
   1b244:	str	r0, [sp, #4]
   1b248:	mov	r0, r1
   1b24c:	mov	r1, r2
   1b250:	mvn	r2, #0
   1b254:	add	r3, sp, #60	; 0x3c
   1b258:	bl	1ac68 <__assert_fail@plt+0x9490>
   1b25c:	mov	sp, fp
   1b260:	pop	{fp, pc}
   1b264:	push	{fp, lr}
   1b268:	mov	fp, sp
   1b26c:	sub	sp, sp, #24
   1b270:	str	r0, [fp, #-4]
   1b274:	str	r1, [fp, #-8]
   1b278:	str	r2, [sp, #12]
   1b27c:	str	r3, [sp, #8]
   1b280:	ldr	r0, [fp, #-4]
   1b284:	ldr	r1, [fp, #-8]
   1b288:	ldr	r2, [sp, #12]
   1b28c:	ldr	r3, [sp, #8]
   1b290:	mvn	ip, #0
   1b294:	str	ip, [sp]
   1b298:	bl	1b2a4 <__assert_fail@plt+0x9acc>
   1b29c:	mov	sp, fp
   1b2a0:	pop	{fp, pc}
   1b2a4:	push	{fp, lr}
   1b2a8:	mov	fp, sp
   1b2ac:	sub	sp, sp, #72	; 0x48
   1b2b0:	ldr	ip, [fp, #8]
   1b2b4:	movw	lr, #21172	; 0x52b4
   1b2b8:	movt	lr, #3
   1b2bc:	str	r0, [fp, #-4]
   1b2c0:	str	r1, [fp, #-8]
   1b2c4:	str	r2, [fp, #-12]
   1b2c8:	str	r3, [fp, #-16]
   1b2cc:	add	r0, sp, #8
   1b2d0:	mov	r1, r0
   1b2d4:	str	r0, [sp, #4]
   1b2d8:	mov	r0, r1
   1b2dc:	mov	r1, lr
   1b2e0:	movw	r2, #48	; 0x30
   1b2e4:	str	ip, [sp]
   1b2e8:	bl	1149c <memcpy@plt>
   1b2ec:	ldr	r1, [fp, #-8]
   1b2f0:	ldr	r2, [fp, #-12]
   1b2f4:	ldr	r0, [sp, #4]
   1b2f8:	bl	19100 <__assert_fail@plt+0x7928>
   1b2fc:	ldr	r0, [fp, #-4]
   1b300:	ldr	r1, [fp, #-16]
   1b304:	ldr	r2, [fp, #8]
   1b308:	add	r3, sp, #8
   1b30c:	bl	1ac68 <__assert_fail@plt+0x9490>
   1b310:	mov	sp, fp
   1b314:	pop	{fp, pc}
   1b318:	push	{fp, lr}
   1b31c:	mov	fp, sp
   1b320:	sub	sp, sp, #16
   1b324:	str	r0, [fp, #-4]
   1b328:	str	r1, [sp, #8]
   1b32c:	str	r2, [sp, #4]
   1b330:	ldr	r1, [fp, #-4]
   1b334:	ldr	r2, [sp, #8]
   1b338:	ldr	r3, [sp, #4]
   1b33c:	movw	r0, #0
   1b340:	bl	1b264 <__assert_fail@plt+0x9a8c>
   1b344:	mov	sp, fp
   1b348:	pop	{fp, pc}
   1b34c:	push	{fp, lr}
   1b350:	mov	fp, sp
   1b354:	sub	sp, sp, #24
   1b358:	str	r0, [fp, #-4]
   1b35c:	str	r1, [fp, #-8]
   1b360:	str	r2, [sp, #12]
   1b364:	str	r3, [sp, #8]
   1b368:	ldr	r1, [fp, #-4]
   1b36c:	ldr	r2, [fp, #-8]
   1b370:	ldr	r3, [sp, #12]
   1b374:	ldr	r0, [sp, #8]
   1b378:	movw	ip, #0
   1b37c:	str	r0, [sp, #4]
   1b380:	mov	r0, ip
   1b384:	ldr	ip, [sp, #4]
   1b388:	str	ip, [sp]
   1b38c:	bl	1b2a4 <__assert_fail@plt+0x9acc>
   1b390:	mov	sp, fp
   1b394:	pop	{fp, pc}
   1b398:	push	{fp, lr}
   1b39c:	mov	fp, sp
   1b3a0:	sub	sp, sp, #16
   1b3a4:	str	r0, [fp, #-4]
   1b3a8:	str	r1, [sp, #8]
   1b3ac:	str	r2, [sp, #4]
   1b3b0:	ldr	r0, [fp, #-4]
   1b3b4:	ldr	r1, [sp, #8]
   1b3b8:	ldr	r2, [sp, #4]
   1b3bc:	movw	r3, #20868	; 0x5184
   1b3c0:	movt	r3, #3
   1b3c4:	bl	1ac68 <__assert_fail@plt+0x9490>
   1b3c8:	mov	sp, fp
   1b3cc:	pop	{fp, pc}
   1b3d0:	push	{fp, lr}
   1b3d4:	mov	fp, sp
   1b3d8:	sub	sp, sp, #8
   1b3dc:	str	r0, [sp, #4]
   1b3e0:	str	r1, [sp]
   1b3e4:	ldr	r1, [sp, #4]
   1b3e8:	ldr	r2, [sp]
   1b3ec:	movw	r0, #0
   1b3f0:	bl	1b398 <__assert_fail@plt+0x9bc0>
   1b3f4:	mov	sp, fp
   1b3f8:	pop	{fp, pc}
   1b3fc:	push	{fp, lr}
   1b400:	mov	fp, sp
   1b404:	sub	sp, sp, #8
   1b408:	str	r0, [sp, #4]
   1b40c:	str	r1, [sp]
   1b410:	ldr	r0, [sp, #4]
   1b414:	ldr	r1, [sp]
   1b418:	mvn	r2, #0
   1b41c:	bl	1b398 <__assert_fail@plt+0x9bc0>
   1b420:	mov	sp, fp
   1b424:	pop	{fp, pc}
   1b428:	push	{fp, lr}
   1b42c:	mov	fp, sp
   1b430:	sub	sp, sp, #8
   1b434:	str	r0, [sp, #4]
   1b438:	ldr	r1, [sp, #4]
   1b43c:	movw	r0, #0
   1b440:	bl	1b3fc <__assert_fail@plt+0x9c24>
   1b444:	mov	sp, fp
   1b448:	pop	{fp, pc}
   1b44c:	push	{fp, lr}
   1b450:	mov	fp, sp
   1b454:	sub	sp, sp, #24
   1b458:	str	r0, [fp, #-8]
   1b45c:	str	r1, [sp, #12]
   1b460:	ldr	r0, [fp, #-8]
   1b464:	bl	1161c <gettext@plt>
   1b468:	str	r0, [sp, #8]
   1b46c:	ldr	r0, [sp, #8]
   1b470:	ldr	r1, [fp, #-8]
   1b474:	cmp	r0, r1
   1b478:	beq	1b488 <__assert_fail@plt+0x9cb0>
   1b47c:	ldr	r0, [sp, #8]
   1b480:	str	r0, [fp, #-4]
   1b484:	b	1b554 <__assert_fail@plt+0x9d7c>
   1b488:	bl	21558 <__assert_fail@plt+0xfd80>
   1b48c:	str	r0, [sp, #4]
   1b490:	ldr	r0, [sp, #4]
   1b494:	movw	r1, #17617	; 0x44d1
   1b498:	movt	r1, #2
   1b49c:	bl	21160 <__assert_fail@plt+0xf988>
   1b4a0:	cmp	r0, #0
   1b4a4:	bne	1b4dc <__assert_fail@plt+0x9d04>
   1b4a8:	ldr	r0, [fp, #-8]
   1b4ac:	ldrb	r0, [r0]
   1b4b0:	cmp	r0, #96	; 0x60
   1b4b4:	movw	r0, #0
   1b4b8:	moveq	r0, #1
   1b4bc:	tst	r0, #1
   1b4c0:	movw	r0, #17627	; 0x44db
   1b4c4:	movt	r0, #2
   1b4c8:	movw	r1, #17623	; 0x44d7
   1b4cc:	movt	r1, #2
   1b4d0:	movne	r0, r1
   1b4d4:	str	r0, [fp, #-4]
   1b4d8:	b	1b554 <__assert_fail@plt+0x9d7c>
   1b4dc:	ldr	r0, [sp, #4]
   1b4e0:	movw	r1, #17631	; 0x44df
   1b4e4:	movt	r1, #2
   1b4e8:	bl	21160 <__assert_fail@plt+0xf988>
   1b4ec:	cmp	r0, #0
   1b4f0:	bne	1b528 <__assert_fail@plt+0x9d50>
   1b4f4:	ldr	r0, [fp, #-8]
   1b4f8:	ldrb	r0, [r0]
   1b4fc:	cmp	r0, #96	; 0x60
   1b500:	movw	r0, #0
   1b504:	moveq	r0, #1
   1b508:	tst	r0, #1
   1b50c:	movw	r0, #17643	; 0x44eb
   1b510:	movt	r0, #2
   1b514:	movw	r1, #17639	; 0x44e7
   1b518:	movt	r1, #2
   1b51c:	movne	r0, r1
   1b520:	str	r0, [fp, #-4]
   1b524:	b	1b554 <__assert_fail@plt+0x9d7c>
   1b528:	ldr	r0, [sp, #12]
   1b52c:	cmp	r0, #9
   1b530:	movw	r0, #0
   1b534:	moveq	r0, #1
   1b538:	tst	r0, #1
   1b53c:	movw	r0, #17449	; 0x4429
   1b540:	movt	r0, #2
   1b544:	movw	r1, #17613	; 0x44cd
   1b548:	movt	r1, #2
   1b54c:	movne	r0, r1
   1b550:	str	r0, [fp, #-4]
   1b554:	ldr	r0, [fp, #-4]
   1b558:	mov	sp, fp
   1b55c:	pop	{fp, pc}
   1b560:	push	{fp, lr}
   1b564:	mov	fp, sp
   1b568:	sub	sp, sp, #24
   1b56c:	str	r0, [fp, #-8]
   1b570:	str	r1, [sp, #12]
   1b574:	str	r2, [sp, #8]
   1b578:	ldr	r0, [fp, #-8]
   1b57c:	ldr	r1, [sp, #12]
   1b580:	ldr	r2, [sp, #8]
   1b584:	bl	11454 <read@plt>
   1b588:	str	r0, [sp, #4]
   1b58c:	ldr	r0, [sp, #4]
   1b590:	movw	r1, #0
   1b594:	cmp	r1, r0
   1b598:	bgt	1b5a8 <__assert_fail@plt+0x9dd0>
   1b59c:	ldr	r0, [sp, #4]
   1b5a0:	str	r0, [fp, #-4]
   1b5a4:	b	1b600 <__assert_fail@plt+0x9e28>
   1b5a8:	bl	11664 <__errno_location@plt>
   1b5ac:	ldr	r0, [r0]
   1b5b0:	cmp	r0, #4
   1b5b4:	bne	1b5bc <__assert_fail@plt+0x9de4>
   1b5b8:	b	1b578 <__assert_fail@plt+0x9da0>
   1b5bc:	bl	11664 <__errno_location@plt>
   1b5c0:	ldr	r0, [r0]
   1b5c4:	cmp	r0, #22
   1b5c8:	bne	1b5e8 <__assert_fail@plt+0x9e10>
   1b5cc:	ldr	r0, [pc, #56]	; 1b60c <__assert_fail@plt+0x9e34>
   1b5d0:	ldr	r1, [sp, #8]
   1b5d4:	cmp	r0, r1
   1b5d8:	bcs	1b5e8 <__assert_fail@plt+0x9e10>
   1b5dc:	ldr	r0, [pc, #40]	; 1b60c <__assert_fail@plt+0x9e34>
   1b5e0:	str	r0, [sp, #8]
   1b5e4:	b	1b5f4 <__assert_fail@plt+0x9e1c>
   1b5e8:	ldr	r0, [sp, #4]
   1b5ec:	str	r0, [fp, #-4]
   1b5f0:	b	1b600 <__assert_fail@plt+0x9e28>
   1b5f4:	b	1b5f8 <__assert_fail@plt+0x9e20>
   1b5f8:	b	1b5fc <__assert_fail@plt+0x9e24>
   1b5fc:	b	1b578 <__assert_fail@plt+0x9da0>
   1b600:	ldr	r0, [fp, #-4]
   1b604:	mov	sp, fp
   1b608:	pop	{fp, pc}
   1b60c:	svcvc	0x00f00000	; IMB
   1b610:	push	{fp, lr}
   1b614:	mov	fp, sp
   1b618:	sub	sp, sp, #16
   1b61c:	str	r0, [sp, #8]
   1b620:	str	r1, [sp, #4]
   1b624:	ldr	r0, [sp, #8]
   1b628:	ldr	r2, [sp, #4]
   1b62c:	mov	r1, #0
   1b630:	bl	116b8 <memchr@plt>
   1b634:	str	r0, [sp]
   1b638:	ldr	r0, [sp]
   1b63c:	movw	r1, #0
   1b640:	cmp	r0, r1
   1b644:	beq	1b660 <__assert_fail@plt+0x9e88>
   1b648:	ldr	r0, [sp]
   1b64c:	ldr	r1, [sp, #8]
   1b650:	sub	r0, r0, r1
   1b654:	add	r0, r0, #1
   1b658:	str	r0, [fp, #-4]
   1b65c:	b	1b668 <__assert_fail@plt+0x9e90>
   1b660:	ldr	r0, [sp, #4]
   1b664:	str	r0, [fp, #-4]
   1b668:	ldr	r0, [fp, #-4]
   1b66c:	mov	sp, fp
   1b670:	pop	{fp, pc}
   1b674:	push	{fp, lr}
   1b678:	mov	fp, sp
   1b67c:	sub	sp, sp, #24
   1b680:	str	r0, [fp, #-4]
   1b684:	ldr	r0, [fp, #-4]
   1b688:	movw	r1, #0
   1b68c:	cmp	r1, r0
   1b690:	bgt	1b6e0 <__assert_fail@plt+0x9f08>
   1b694:	ldr	r0, [fp, #-4]
   1b698:	cmp	r0, #2
   1b69c:	bgt	1b6e0 <__assert_fail@plt+0x9f08>
   1b6a0:	ldr	r0, [fp, #-4]
   1b6a4:	bl	21aec <__assert_fail@plt+0x10314>
   1b6a8:	str	r0, [fp, #-8]
   1b6ac:	bl	11664 <__errno_location@plt>
   1b6b0:	ldr	r0, [r0]
   1b6b4:	str	r0, [sp, #12]
   1b6b8:	ldr	r0, [fp, #-4]
   1b6bc:	bl	117c0 <close@plt>
   1b6c0:	ldr	r1, [sp, #12]
   1b6c4:	str	r0, [sp, #8]
   1b6c8:	str	r1, [sp, #4]
   1b6cc:	bl	11664 <__errno_location@plt>
   1b6d0:	ldr	r1, [sp, #4]
   1b6d4:	str	r1, [r0]
   1b6d8:	ldr	r0, [fp, #-8]
   1b6dc:	str	r0, [fp, #-4]
   1b6e0:	ldr	r0, [fp, #-4]
   1b6e4:	mov	sp, fp
   1b6e8:	pop	{fp, pc}
   1b6ec:	push	{fp, lr}
   1b6f0:	mov	fp, sp
   1b6f4:	sub	sp, sp, #24
   1b6f8:	str	r0, [fp, #-8]
   1b6fc:	ldr	r0, [fp, #-8]
   1b700:	bl	116dc <pipe@plt>
   1b704:	cmp	r0, #0
   1b708:	bne	1b7bc <__assert_fail@plt+0x9fe4>
   1b70c:	movw	r0, #0
   1b710:	str	r0, [sp, #12]
   1b714:	ldr	r0, [sp, #12]
   1b718:	cmp	r0, #2
   1b71c:	bge	1b7b0 <__assert_fail@plt+0x9fd8>
   1b720:	ldr	r0, [fp, #-8]
   1b724:	ldr	r1, [sp, #12]
   1b728:	ldr	r0, [r0, r1, lsl #2]
   1b72c:	bl	1b674 <__assert_fail@plt+0x9e9c>
   1b730:	ldr	r1, [fp, #-8]
   1b734:	ldr	r2, [sp, #12]
   1b738:	str	r0, [r1, r2, lsl #2]
   1b73c:	ldr	r0, [fp, #-8]
   1b740:	ldr	r1, [sp, #12]
   1b744:	add	r0, r0, r1, lsl #2
   1b748:	ldr	r0, [r0]
   1b74c:	cmp	r0, #0
   1b750:	bge	1b79c <__assert_fail@plt+0x9fc4>
   1b754:	bl	11664 <__errno_location@plt>
   1b758:	ldr	r0, [r0]
   1b75c:	str	r0, [sp, #8]
   1b760:	ldr	r0, [fp, #-8]
   1b764:	ldr	r1, [sp, #12]
   1b768:	rsb	r1, r1, #1
   1b76c:	add	r0, r0, r1, lsl #2
   1b770:	ldr	r0, [r0]
   1b774:	bl	117c0 <close@plt>
   1b778:	ldr	r1, [sp, #8]
   1b77c:	str	r0, [sp, #4]
   1b780:	str	r1, [sp]
   1b784:	bl	11664 <__errno_location@plt>
   1b788:	ldr	r1, [sp]
   1b78c:	str	r1, [r0]
   1b790:	mvn	r0, #0
   1b794:	str	r0, [fp, #-4]
   1b798:	b	1b7c4 <__assert_fail@plt+0x9fec>
   1b79c:	b	1b7a0 <__assert_fail@plt+0x9fc8>
   1b7a0:	ldr	r0, [sp, #12]
   1b7a4:	add	r0, r0, #1
   1b7a8:	str	r0, [sp, #12]
   1b7ac:	b	1b714 <__assert_fail@plt+0x9f3c>
   1b7b0:	movw	r0, #0
   1b7b4:	str	r0, [fp, #-4]
   1b7b8:	b	1b7c4 <__assert_fail@plt+0x9fec>
   1b7bc:	mvn	r0, #0
   1b7c0:	str	r0, [fp, #-4]
   1b7c4:	ldr	r0, [fp, #-4]
   1b7c8:	mov	sp, fp
   1b7cc:	pop	{fp, pc}
   1b7d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b7d4:	add	fp, sp, #28
   1b7d8:	sub	sp, sp, #196	; 0xc4
   1b7dc:	ldr	ip, [fp, #12]
   1b7e0:	ldr	lr, [fp, #8]
   1b7e4:	str	r0, [fp, #-32]	; 0xffffffe0
   1b7e8:	str	r1, [fp, #-36]	; 0xffffffdc
   1b7ec:	str	r2, [fp, #-40]	; 0xffffffd8
   1b7f0:	str	r3, [fp, #-44]	; 0xffffffd4
   1b7f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b7f8:	movw	r1, #0
   1b7fc:	cmp	r0, r1
   1b800:	beq	1b834 <__assert_fail@plt+0xa05c>
   1b804:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b808:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b80c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b810:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b814:	movw	ip, #17732	; 0x4544
   1b818:	movt	ip, #2
   1b81c:	str	r1, [fp, #-48]	; 0xffffffd0
   1b820:	mov	r1, ip
   1b824:	ldr	ip, [fp, #-48]	; 0xffffffd0
   1b828:	str	ip, [sp]
   1b82c:	bl	11658 <fprintf@plt>
   1b830:	b	1b84c <__assert_fail@plt+0xa074>
   1b834:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b838:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b83c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b840:	movw	r1, #17744	; 0x4550
   1b844:	movt	r1, #2
   1b848:	bl	11658 <fprintf@plt>
   1b84c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b850:	movw	r1, #17751	; 0x4557
   1b854:	movt	r1, #2
   1b858:	str	r0, [fp, #-52]	; 0xffffffcc
   1b85c:	mov	r0, r1
   1b860:	bl	1161c <gettext@plt>
   1b864:	movw	r1, #18447	; 0x480f
   1b868:	movt	r1, #2
   1b86c:	movw	r3, #2022	; 0x7e6
   1b870:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1b874:	str	r0, [fp, #-56]	; 0xffffffc8
   1b878:	mov	r0, r2
   1b87c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1b880:	bl	11658 <fprintf@plt>
   1b884:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b888:	movw	r2, #12625	; 0x3151
   1b88c:	movt	r2, #2
   1b890:	str	r0, [fp, #-60]	; 0xffffffc4
   1b894:	mov	r0, r2
   1b898:	str	r2, [fp, #-64]	; 0xffffffc0
   1b89c:	bl	11790 <fputs@plt>
   1b8a0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b8a4:	movw	r2, #17755	; 0x455b
   1b8a8:	movt	r2, #2
   1b8ac:	str	r0, [fp, #-68]	; 0xffffffbc
   1b8b0:	mov	r0, r2
   1b8b4:	str	r1, [fp, #-72]	; 0xffffffb8
   1b8b8:	bl	1161c <gettext@plt>
   1b8bc:	movw	r2, #17926	; 0x4606
   1b8c0:	movt	r2, #2
   1b8c4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1b8c8:	str	r0, [fp, #-76]	; 0xffffffb4
   1b8cc:	mov	r0, r1
   1b8d0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1b8d4:	bl	11658 <fprintf@plt>
   1b8d8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b8dc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b8e0:	str	r0, [fp, #-80]	; 0xffffffb0
   1b8e4:	mov	r0, r2
   1b8e8:	bl	11790 <fputs@plt>
   1b8ec:	ldr	r1, [fp, #12]
   1b8f0:	cmp	r1, #9
   1b8f4:	str	r1, [fp, #-84]	; 0xffffffac
   1b8f8:	bhi	1bd14 <__assert_fail@plt+0xa53c>
   1b8fc:	add	r0, pc, #8
   1b900:	ldr	r1, [fp, #-84]	; 0xffffffac
   1b904:	ldr	r0, [r0, r1, lsl #2]
   1b908:	mov	pc, r0
   1b90c:	andeq	fp, r1, r4, lsr r9
   1b910:	andeq	fp, r1, r8, lsr r9
   1b914:	andeq	fp, r1, r0, ror r9
   1b918:			; <UNDEFINED> instruction: 0x0001b9b0
   1b91c:	andeq	fp, r1, r8, lsl #20
   1b920:	andeq	fp, r1, ip, ror #20
   1b924:	ldrdeq	fp, [r1], -ip
   1b928:	andeq	fp, r1, r8, asr fp
   1b92c:	andeq	fp, r1, r0, ror #23
   1b930:	andeq	fp, r1, r4, ror ip
   1b934:	b	1bdb0 <__assert_fail@plt+0xa5d8>
   1b938:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b93c:	movw	r1, #17960	; 0x4628
   1b940:	movt	r1, #2
   1b944:	str	r0, [fp, #-88]	; 0xffffffa8
   1b948:	mov	r0, r1
   1b94c:	bl	1161c <gettext@plt>
   1b950:	ldr	r1, [fp, #8]
   1b954:	ldr	r2, [r1]
   1b958:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1b95c:	str	r0, [fp, #-92]	; 0xffffffa4
   1b960:	mov	r0, r1
   1b964:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1b968:	bl	11658 <fprintf@plt>
   1b96c:	b	1bdb0 <__assert_fail@plt+0xa5d8>
   1b970:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b974:	movw	r1, #17976	; 0x4638
   1b978:	movt	r1, #2
   1b97c:	str	r0, [fp, #-96]	; 0xffffffa0
   1b980:	mov	r0, r1
   1b984:	bl	1161c <gettext@plt>
   1b988:	ldr	r1, [fp, #8]
   1b98c:	ldr	r2, [r1]
   1b990:	ldr	r1, [fp, #8]
   1b994:	ldr	r3, [r1, #4]
   1b998:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1b99c:	str	r0, [fp, #-100]	; 0xffffff9c
   1b9a0:	mov	r0, r1
   1b9a4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1b9a8:	bl	11658 <fprintf@plt>
   1b9ac:	b	1bdb0 <__assert_fail@plt+0xa5d8>
   1b9b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b9b4:	movw	r1, #17999	; 0x464f
   1b9b8:	movt	r1, #2
   1b9bc:	str	r0, [fp, #-104]	; 0xffffff98
   1b9c0:	mov	r0, r1
   1b9c4:	bl	1161c <gettext@plt>
   1b9c8:	ldr	r1, [fp, #8]
   1b9cc:	ldr	r2, [r1]
   1b9d0:	ldr	r1, [fp, #8]
   1b9d4:	ldr	r3, [r1, #4]
   1b9d8:	ldr	r1, [fp, #8]
   1b9dc:	ldr	r1, [r1, #8]
   1b9e0:	ldr	ip, [fp, #-104]	; 0xffffff98
   1b9e4:	str	r0, [fp, #-108]	; 0xffffff94
   1b9e8:	mov	r0, ip
   1b9ec:	ldr	lr, [fp, #-108]	; 0xffffff94
   1b9f0:	str	r1, [sp, #112]	; 0x70
   1b9f4:	mov	r1, lr
   1b9f8:	ldr	r4, [sp, #112]	; 0x70
   1b9fc:	str	r4, [sp]
   1ba00:	bl	11658 <fprintf@plt>
   1ba04:	b	1bdb0 <__assert_fail@plt+0xa5d8>
   1ba08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ba0c:	movw	r1, #18027	; 0x466b
   1ba10:	movt	r1, #2
   1ba14:	str	r0, [sp, #108]	; 0x6c
   1ba18:	mov	r0, r1
   1ba1c:	bl	1161c <gettext@plt>
   1ba20:	ldr	r1, [fp, #8]
   1ba24:	ldr	r2, [r1]
   1ba28:	ldr	r1, [fp, #8]
   1ba2c:	ldr	r3, [r1, #4]
   1ba30:	ldr	r1, [fp, #8]
   1ba34:	ldr	r1, [r1, #8]
   1ba38:	ldr	ip, [fp, #8]
   1ba3c:	ldr	ip, [ip, #12]
   1ba40:	ldr	lr, [sp, #108]	; 0x6c
   1ba44:	str	r0, [sp, #104]	; 0x68
   1ba48:	mov	r0, lr
   1ba4c:	ldr	r4, [sp, #104]	; 0x68
   1ba50:	str	r1, [sp, #100]	; 0x64
   1ba54:	mov	r1, r4
   1ba58:	ldr	r5, [sp, #100]	; 0x64
   1ba5c:	str	r5, [sp]
   1ba60:	str	ip, [sp, #4]
   1ba64:	bl	11658 <fprintf@plt>
   1ba68:	b	1bdb0 <__assert_fail@plt+0xa5d8>
   1ba6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ba70:	movw	r1, #18059	; 0x468b
   1ba74:	movt	r1, #2
   1ba78:	str	r0, [sp, #96]	; 0x60
   1ba7c:	mov	r0, r1
   1ba80:	bl	1161c <gettext@plt>
   1ba84:	ldr	r1, [fp, #8]
   1ba88:	ldr	r2, [r1]
   1ba8c:	ldr	r1, [fp, #8]
   1ba90:	ldr	r3, [r1, #4]
   1ba94:	ldr	r1, [fp, #8]
   1ba98:	ldr	r1, [r1, #8]
   1ba9c:	ldr	ip, [fp, #8]
   1baa0:	ldr	ip, [ip, #12]
   1baa4:	ldr	lr, [fp, #8]
   1baa8:	ldr	lr, [lr, #16]
   1baac:	ldr	r4, [sp, #96]	; 0x60
   1bab0:	str	r0, [sp, #92]	; 0x5c
   1bab4:	mov	r0, r4
   1bab8:	ldr	r5, [sp, #92]	; 0x5c
   1babc:	str	r1, [sp, #88]	; 0x58
   1bac0:	mov	r1, r5
   1bac4:	ldr	r6, [sp, #88]	; 0x58
   1bac8:	str	r6, [sp]
   1bacc:	str	ip, [sp, #4]
   1bad0:	str	lr, [sp, #8]
   1bad4:	bl	11658 <fprintf@plt>
   1bad8:	b	1bdb0 <__assert_fail@plt+0xa5d8>
   1badc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bae0:	movw	r1, #18095	; 0x46af
   1bae4:	movt	r1, #2
   1bae8:	str	r0, [sp, #84]	; 0x54
   1baec:	mov	r0, r1
   1baf0:	bl	1161c <gettext@plt>
   1baf4:	ldr	r1, [fp, #8]
   1baf8:	ldr	r2, [r1]
   1bafc:	ldr	r1, [fp, #8]
   1bb00:	ldr	r3, [r1, #4]
   1bb04:	ldr	r1, [fp, #8]
   1bb08:	ldr	r1, [r1, #8]
   1bb0c:	ldr	ip, [fp, #8]
   1bb10:	ldr	ip, [ip, #12]
   1bb14:	ldr	lr, [fp, #8]
   1bb18:	ldr	lr, [lr, #16]
   1bb1c:	ldr	r4, [fp, #8]
   1bb20:	ldr	r4, [r4, #20]
   1bb24:	ldr	r5, [sp, #84]	; 0x54
   1bb28:	str	r0, [sp, #80]	; 0x50
   1bb2c:	mov	r0, r5
   1bb30:	ldr	r6, [sp, #80]	; 0x50
   1bb34:	str	r1, [sp, #76]	; 0x4c
   1bb38:	mov	r1, r6
   1bb3c:	ldr	r7, [sp, #76]	; 0x4c
   1bb40:	str	r7, [sp]
   1bb44:	str	ip, [sp, #4]
   1bb48:	str	lr, [sp, #8]
   1bb4c:	str	r4, [sp, #12]
   1bb50:	bl	11658 <fprintf@plt>
   1bb54:	b	1bdb0 <__assert_fail@plt+0xa5d8>
   1bb58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bb5c:	movw	r1, #18135	; 0x46d7
   1bb60:	movt	r1, #2
   1bb64:	str	r0, [sp, #72]	; 0x48
   1bb68:	mov	r0, r1
   1bb6c:	bl	1161c <gettext@plt>
   1bb70:	ldr	r1, [fp, #8]
   1bb74:	ldr	r2, [r1]
   1bb78:	ldr	r1, [fp, #8]
   1bb7c:	ldr	r3, [r1, #4]
   1bb80:	ldr	r1, [fp, #8]
   1bb84:	ldr	r1, [r1, #8]
   1bb88:	ldr	ip, [fp, #8]
   1bb8c:	ldr	ip, [ip, #12]
   1bb90:	ldr	lr, [fp, #8]
   1bb94:	ldr	lr, [lr, #16]
   1bb98:	ldr	r4, [fp, #8]
   1bb9c:	ldr	r4, [r4, #20]
   1bba0:	ldr	r5, [fp, #8]
   1bba4:	ldr	r5, [r5, #24]
   1bba8:	ldr	r6, [sp, #72]	; 0x48
   1bbac:	str	r0, [sp, #68]	; 0x44
   1bbb0:	mov	r0, r6
   1bbb4:	ldr	r7, [sp, #68]	; 0x44
   1bbb8:	str	r1, [sp, #64]	; 0x40
   1bbbc:	mov	r1, r7
   1bbc0:	ldr	r8, [sp, #64]	; 0x40
   1bbc4:	str	r8, [sp]
   1bbc8:	str	ip, [sp, #4]
   1bbcc:	str	lr, [sp, #8]
   1bbd0:	str	r4, [sp, #12]
   1bbd4:	str	r5, [sp, #16]
   1bbd8:	bl	11658 <fprintf@plt>
   1bbdc:	b	1bdb0 <__assert_fail@plt+0xa5d8>
   1bbe0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bbe4:	movw	r1, #18179	; 0x4703
   1bbe8:	movt	r1, #2
   1bbec:	str	r0, [sp, #60]	; 0x3c
   1bbf0:	mov	r0, r1
   1bbf4:	bl	1161c <gettext@plt>
   1bbf8:	ldr	r1, [fp, #8]
   1bbfc:	ldr	r2, [r1]
   1bc00:	ldr	r1, [fp, #8]
   1bc04:	ldr	r3, [r1, #4]
   1bc08:	ldr	r1, [fp, #8]
   1bc0c:	ldr	r1, [r1, #8]
   1bc10:	ldr	ip, [fp, #8]
   1bc14:	ldr	ip, [ip, #12]
   1bc18:	ldr	lr, [fp, #8]
   1bc1c:	ldr	lr, [lr, #16]
   1bc20:	ldr	r4, [fp, #8]
   1bc24:	ldr	r4, [r4, #20]
   1bc28:	ldr	r5, [fp, #8]
   1bc2c:	ldr	r5, [r5, #24]
   1bc30:	ldr	r6, [fp, #8]
   1bc34:	ldr	r6, [r6, #28]
   1bc38:	ldr	r7, [sp, #60]	; 0x3c
   1bc3c:	str	r0, [sp, #56]	; 0x38
   1bc40:	mov	r0, r7
   1bc44:	ldr	r8, [sp, #56]	; 0x38
   1bc48:	str	r1, [sp, #52]	; 0x34
   1bc4c:	mov	r1, r8
   1bc50:	ldr	r9, [sp, #52]	; 0x34
   1bc54:	str	r9, [sp]
   1bc58:	str	ip, [sp, #4]
   1bc5c:	str	lr, [sp, #8]
   1bc60:	str	r4, [sp, #12]
   1bc64:	str	r5, [sp, #16]
   1bc68:	str	r6, [sp, #20]
   1bc6c:	bl	11658 <fprintf@plt>
   1bc70:	b	1bdb0 <__assert_fail@plt+0xa5d8>
   1bc74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bc78:	movw	r1, #18227	; 0x4733
   1bc7c:	movt	r1, #2
   1bc80:	str	r0, [sp, #48]	; 0x30
   1bc84:	mov	r0, r1
   1bc88:	bl	1161c <gettext@plt>
   1bc8c:	ldr	r1, [fp, #8]
   1bc90:	ldr	r2, [r1]
   1bc94:	ldr	r1, [fp, #8]
   1bc98:	ldr	r3, [r1, #4]
   1bc9c:	ldr	r1, [fp, #8]
   1bca0:	ldr	r1, [r1, #8]
   1bca4:	ldr	ip, [fp, #8]
   1bca8:	ldr	ip, [ip, #12]
   1bcac:	ldr	lr, [fp, #8]
   1bcb0:	ldr	lr, [lr, #16]
   1bcb4:	ldr	r4, [fp, #8]
   1bcb8:	ldr	r4, [r4, #20]
   1bcbc:	ldr	r5, [fp, #8]
   1bcc0:	ldr	r5, [r5, #24]
   1bcc4:	ldr	r6, [fp, #8]
   1bcc8:	ldr	r6, [r6, #28]
   1bccc:	ldr	r7, [fp, #8]
   1bcd0:	ldr	r7, [r7, #32]
   1bcd4:	ldr	r8, [sp, #48]	; 0x30
   1bcd8:	str	r0, [sp, #44]	; 0x2c
   1bcdc:	mov	r0, r8
   1bce0:	ldr	r9, [sp, #44]	; 0x2c
   1bce4:	str	r1, [sp, #40]	; 0x28
   1bce8:	mov	r1, r9
   1bcec:	ldr	sl, [sp, #40]	; 0x28
   1bcf0:	str	sl, [sp]
   1bcf4:	str	ip, [sp, #4]
   1bcf8:	str	lr, [sp, #8]
   1bcfc:	str	r4, [sp, #12]
   1bd00:	str	r5, [sp, #16]
   1bd04:	str	r6, [sp, #20]
   1bd08:	str	r7, [sp, #24]
   1bd0c:	bl	11658 <fprintf@plt>
   1bd10:	b	1bdb0 <__assert_fail@plt+0xa5d8>
   1bd14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bd18:	movw	r1, #18279	; 0x4767
   1bd1c:	movt	r1, #2
   1bd20:	str	r0, [sp, #36]	; 0x24
   1bd24:	mov	r0, r1
   1bd28:	bl	1161c <gettext@plt>
   1bd2c:	ldr	r1, [fp, #8]
   1bd30:	ldr	r2, [r1]
   1bd34:	ldr	r1, [fp, #8]
   1bd38:	ldr	r3, [r1, #4]
   1bd3c:	ldr	r1, [fp, #8]
   1bd40:	ldr	r1, [r1, #8]
   1bd44:	ldr	ip, [fp, #8]
   1bd48:	ldr	ip, [ip, #12]
   1bd4c:	ldr	lr, [fp, #8]
   1bd50:	ldr	lr, [lr, #16]
   1bd54:	ldr	r4, [fp, #8]
   1bd58:	ldr	r4, [r4, #20]
   1bd5c:	ldr	r5, [fp, #8]
   1bd60:	ldr	r5, [r5, #24]
   1bd64:	ldr	r6, [fp, #8]
   1bd68:	ldr	r6, [r6, #28]
   1bd6c:	ldr	r7, [fp, #8]
   1bd70:	ldr	r7, [r7, #32]
   1bd74:	ldr	r8, [sp, #36]	; 0x24
   1bd78:	str	r0, [sp, #32]
   1bd7c:	mov	r0, r8
   1bd80:	ldr	r9, [sp, #32]
   1bd84:	str	r1, [sp, #28]
   1bd88:	mov	r1, r9
   1bd8c:	ldr	sl, [sp, #28]
   1bd90:	str	sl, [sp]
   1bd94:	str	ip, [sp, #4]
   1bd98:	str	lr, [sp, #8]
   1bd9c:	str	r4, [sp, #12]
   1bda0:	str	r5, [sp, #16]
   1bda4:	str	r6, [sp, #20]
   1bda8:	str	r7, [sp, #24]
   1bdac:	bl	11658 <fprintf@plt>
   1bdb0:	sub	sp, fp, #28
   1bdb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bdb8:	push	{fp, lr}
   1bdbc:	mov	fp, sp
   1bdc0:	sub	sp, sp, #32
   1bdc4:	ldr	ip, [fp, #8]
   1bdc8:	str	r0, [fp, #-4]
   1bdcc:	str	r1, [fp, #-8]
   1bdd0:	str	r2, [fp, #-12]
   1bdd4:	str	r3, [sp, #16]
   1bdd8:	movw	r0, #0
   1bddc:	str	r0, [sp, #12]
   1bde0:	ldr	r0, [fp, #8]
   1bde4:	ldr	r1, [sp, #12]
   1bde8:	add	r0, r0, r1, lsl #2
   1bdec:	ldr	r0, [r0]
   1bdf0:	movw	r1, #0
   1bdf4:	cmp	r0, r1
   1bdf8:	beq	1be10 <__assert_fail@plt+0xa638>
   1bdfc:	b	1be00 <__assert_fail@plt+0xa628>
   1be00:	ldr	r0, [sp, #12]
   1be04:	add	r0, r0, #1
   1be08:	str	r0, [sp, #12]
   1be0c:	b	1bde0 <__assert_fail@plt+0xa608>
   1be10:	ldr	r0, [fp, #-4]
   1be14:	ldr	r1, [fp, #-8]
   1be18:	ldr	r2, [fp, #-12]
   1be1c:	ldr	r3, [sp, #16]
   1be20:	ldr	ip, [fp, #8]
   1be24:	ldr	lr, [sp, #12]
   1be28:	str	ip, [sp]
   1be2c:	str	lr, [sp, #4]
   1be30:	bl	1b7d0 <__assert_fail@plt+0x9ff8>
   1be34:	mov	sp, fp
   1be38:	pop	{fp, pc}
   1be3c:	push	{fp, lr}
   1be40:	mov	fp, sp
   1be44:	sub	sp, sp, #80	; 0x50
   1be48:	ldr	ip, [fp, #8]
   1be4c:	str	ip, [fp, #-4]
   1be50:	str	r0, [fp, #-8]
   1be54:	str	r1, [fp, #-12]
   1be58:	str	r2, [fp, #-16]
   1be5c:	str	r3, [fp, #-20]	; 0xffffffec
   1be60:	movw	r0, #0
   1be64:	str	r0, [fp, #-24]	; 0xffffffe8
   1be68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1be6c:	cmp	r0, #10
   1be70:	movw	r0, #0
   1be74:	str	r0, [sp, #12]
   1be78:	bcs	1beb0 <__assert_fail@plt+0xa6d8>
   1be7c:	ldr	r0, [fp, #-4]
   1be80:	add	r1, r0, #4
   1be84:	str	r1, [fp, #-4]
   1be88:	ldr	r0, [r0]
   1be8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1be90:	add	r2, sp, #16
   1be94:	add	r1, r2, r1, lsl #2
   1be98:	str	r0, [r1]
   1be9c:	movw	r1, #0
   1bea0:	cmp	r0, r1
   1bea4:	movw	r0, #0
   1bea8:	movne	r0, #1
   1beac:	str	r0, [sp, #12]
   1beb0:	ldr	r0, [sp, #12]
   1beb4:	tst	r0, #1
   1beb8:	beq	1bed0 <__assert_fail@plt+0xa6f8>
   1bebc:	b	1bec0 <__assert_fail@plt+0xa6e8>
   1bec0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bec4:	add	r0, r0, #1
   1bec8:	str	r0, [fp, #-24]	; 0xffffffe8
   1becc:	b	1be68 <__assert_fail@plt+0xa690>
   1bed0:	add	r0, sp, #16
   1bed4:	ldr	r1, [fp, #-8]
   1bed8:	ldr	r2, [fp, #-12]
   1bedc:	ldr	r3, [fp, #-16]
   1bee0:	ldr	ip, [fp, #-20]	; 0xffffffec
   1bee4:	ldr	lr, [fp, #-24]	; 0xffffffe8
   1bee8:	str	r0, [sp, #8]
   1beec:	mov	r0, r1
   1bef0:	mov	r1, r2
   1bef4:	mov	r2, r3
   1bef8:	mov	r3, ip
   1befc:	ldr	ip, [sp, #8]
   1bf00:	str	ip, [sp]
   1bf04:	str	lr, [sp, #4]
   1bf08:	bl	1b7d0 <__assert_fail@plt+0x9ff8>
   1bf0c:	mov	sp, fp
   1bf10:	pop	{fp, pc}
   1bf14:	push	{fp, lr}
   1bf18:	mov	fp, sp
   1bf1c:	sub	sp, sp, #24
   1bf20:	str	r0, [fp, #-4]
   1bf24:	str	r1, [fp, #-8]
   1bf28:	str	r2, [sp, #12]
   1bf2c:	str	r3, [sp, #8]
   1bf30:	add	r0, fp, #8
   1bf34:	str	r0, [sp, #4]
   1bf38:	ldr	r0, [fp, #-4]
   1bf3c:	ldr	r1, [fp, #-8]
   1bf40:	ldr	r2, [sp, #12]
   1bf44:	ldr	r3, [sp, #8]
   1bf48:	ldr	ip, [sp, #4]
   1bf4c:	mov	lr, sp
   1bf50:	str	ip, [lr]
   1bf54:	bl	1be3c <__assert_fail@plt+0xa664>
   1bf58:	add	r0, sp, #4
   1bf5c:	mov	sp, fp
   1bf60:	pop	{fp, pc}
   1bf64:	push	{fp, lr}
   1bf68:	mov	fp, sp
   1bf6c:	sub	sp, sp, #16
   1bf70:	movw	r0, #20956	; 0x51dc
   1bf74:	movt	r0, #3
   1bf78:	ldr	r1, [r0]
   1bf7c:	movw	r0, #12625	; 0x3151
   1bf80:	movt	r0, #2
   1bf84:	bl	11790 <fputs@plt>
   1bf88:	movw	r1, #18339	; 0x47a3
   1bf8c:	movt	r1, #2
   1bf90:	str	r0, [fp, #-4]
   1bf94:	mov	r0, r1
   1bf98:	bl	1161c <gettext@plt>
   1bf9c:	movw	r1, #17202	; 0x4332
   1bfa0:	movt	r1, #2
   1bfa4:	bl	11448 <printf@plt>
   1bfa8:	movw	r1, #18359	; 0x47b7
   1bfac:	movt	r1, #2
   1bfb0:	str	r0, [sp, #8]
   1bfb4:	mov	r0, r1
   1bfb8:	bl	1161c <gettext@plt>
   1bfbc:	movw	r1, #16802	; 0x41a2
   1bfc0:	movt	r1, #2
   1bfc4:	movw	r2, #17116	; 0x42dc
   1bfc8:	movt	r2, #2
   1bfcc:	bl	11448 <printf@plt>
   1bfd0:	movw	r1, #18379	; 0x47cb
   1bfd4:	movt	r1, #2
   1bfd8:	str	r0, [sp, #4]
   1bfdc:	mov	r0, r1
   1bfe0:	bl	1161c <gettext@plt>
   1bfe4:	movw	r1, #18418	; 0x47f2
   1bfe8:	movt	r1, #2
   1bfec:	bl	11448 <printf@plt>
   1bff0:	mov	sp, fp
   1bff4:	pop	{fp, pc}
   1bff8:	push	{fp, lr}
   1bffc:	mov	fp, sp
   1c000:	sub	sp, sp, #16
   1c004:	str	r0, [fp, #-4]
   1c008:	str	r1, [sp, #8]
   1c00c:	str	r2, [sp, #4]
   1c010:	ldr	r0, [fp, #-4]
   1c014:	ldr	r1, [sp, #8]
   1c018:	ldr	r2, [sp, #4]
   1c01c:	bl	1c028 <__assert_fail@plt+0xa850>
   1c020:	mov	sp, fp
   1c024:	pop	{fp, pc}
   1c028:	push	{fp, lr}
   1c02c:	mov	fp, sp
   1c030:	sub	sp, sp, #16
   1c034:	str	r0, [fp, #-4]
   1c038:	str	r1, [sp, #8]
   1c03c:	str	r2, [sp, #4]
   1c040:	ldr	r0, [fp, #-4]
   1c044:	ldr	r1, [sp, #8]
   1c048:	ldr	r2, [sp, #4]
   1c04c:	bl	1fe20 <__assert_fail@plt+0xe648>
   1c050:	str	r0, [sp]
   1c054:	ldr	r0, [sp]
   1c058:	movw	r1, #0
   1c05c:	cmp	r0, r1
   1c060:	bne	1c090 <__assert_fail@plt+0xa8b8>
   1c064:	ldr	r0, [fp, #-4]
   1c068:	movw	r1, #0
   1c06c:	cmp	r0, r1
   1c070:	beq	1c08c <__assert_fail@plt+0xa8b4>
   1c074:	ldr	r0, [sp, #8]
   1c078:	cmp	r0, #0
   1c07c:	beq	1c090 <__assert_fail@plt+0xa8b8>
   1c080:	ldr	r0, [sp, #4]
   1c084:	cmp	r0, #0
   1c088:	beq	1c090 <__assert_fail@plt+0xa8b8>
   1c08c:	bl	1edd4 <__assert_fail@plt+0xd5fc>
   1c090:	ldr	r0, [sp]
   1c094:	mov	sp, fp
   1c098:	pop	{fp, pc}
   1c09c:	push	{fp, lr}
   1c0a0:	mov	fp, sp
   1c0a4:	sub	sp, sp, #8
   1c0a8:	str	r0, [sp, #4]
   1c0ac:	ldr	r0, [sp, #4]
   1c0b0:	bl	1fc5c <__assert_fail@plt+0xe484>
   1c0b4:	bl	1c0c0 <__assert_fail@plt+0xa8e8>
   1c0b8:	mov	sp, fp
   1c0bc:	pop	{fp, pc}
   1c0c0:	push	{fp, lr}
   1c0c4:	mov	fp, sp
   1c0c8:	sub	sp, sp, #8
   1c0cc:	str	r0, [sp, #4]
   1c0d0:	ldr	r0, [sp, #4]
   1c0d4:	movw	r1, #0
   1c0d8:	cmp	r0, r1
   1c0dc:	bne	1c0e4 <__assert_fail@plt+0xa90c>
   1c0e0:	bl	1edd4 <__assert_fail@plt+0xd5fc>
   1c0e4:	ldr	r0, [sp, #4]
   1c0e8:	mov	sp, fp
   1c0ec:	pop	{fp, pc}
   1c0f0:	push	{fp, lr}
   1c0f4:	mov	fp, sp
   1c0f8:	sub	sp, sp, #8
   1c0fc:	str	r0, [sp, #4]
   1c100:	ldr	r0, [sp, #4]
   1c104:	bl	213a0 <__assert_fail@plt+0xfbc8>
   1c108:	bl	1c0c0 <__assert_fail@plt+0xa8e8>
   1c10c:	mov	sp, fp
   1c110:	pop	{fp, pc}
   1c114:	push	{fp, lr}
   1c118:	mov	fp, sp
   1c11c:	sub	sp, sp, #8
   1c120:	str	r0, [sp, #4]
   1c124:	ldr	r0, [sp, #4]
   1c128:	bl	1c09c <__assert_fail@plt+0xa8c4>
   1c12c:	mov	sp, fp
   1c130:	pop	{fp, pc}
   1c134:	push	{fp, lr}
   1c138:	mov	fp, sp
   1c13c:	sub	sp, sp, #16
   1c140:	str	r0, [fp, #-4]
   1c144:	str	r1, [sp, #8]
   1c148:	ldr	r0, [fp, #-4]
   1c14c:	ldr	r1, [sp, #8]
   1c150:	bl	1fd7c <__assert_fail@plt+0xe5a4>
   1c154:	str	r0, [sp, #4]
   1c158:	ldr	r0, [sp, #4]
   1c15c:	movw	r1, #0
   1c160:	cmp	r0, r1
   1c164:	bne	1c188 <__assert_fail@plt+0xa9b0>
   1c168:	ldr	r0, [fp, #-4]
   1c16c:	movw	r1, #0
   1c170:	cmp	r0, r1
   1c174:	beq	1c184 <__assert_fail@plt+0xa9ac>
   1c178:	ldr	r0, [sp, #8]
   1c17c:	cmp	r0, #0
   1c180:	beq	1c188 <__assert_fail@plt+0xa9b0>
   1c184:	bl	1edd4 <__assert_fail@plt+0xd5fc>
   1c188:	ldr	r0, [sp, #4]
   1c18c:	mov	sp, fp
   1c190:	pop	{fp, pc}
   1c194:	push	{fp, lr}
   1c198:	mov	fp, sp
   1c19c:	sub	sp, sp, #8
   1c1a0:	str	r0, [sp, #4]
   1c1a4:	str	r1, [sp]
   1c1a8:	ldr	r0, [sp, #4]
   1c1ac:	ldr	r1, [sp]
   1c1b0:	bl	213e0 <__assert_fail@plt+0xfc08>
   1c1b4:	bl	1c0c0 <__assert_fail@plt+0xa8e8>
   1c1b8:	mov	sp, fp
   1c1bc:	pop	{fp, pc}
   1c1c0:	push	{fp, lr}
   1c1c4:	mov	fp, sp
   1c1c8:	sub	sp, sp, #16
   1c1cc:	str	r0, [fp, #-4]
   1c1d0:	str	r1, [sp, #8]
   1c1d4:	str	r2, [sp, #4]
   1c1d8:	ldr	r0, [fp, #-4]
   1c1dc:	ldr	r1, [sp, #8]
   1c1e0:	ldr	r2, [sp, #4]
   1c1e4:	bl	214d8 <__assert_fail@plt+0xfd00>
   1c1e8:	bl	1c0c0 <__assert_fail@plt+0xa8e8>
   1c1ec:	mov	sp, fp
   1c1f0:	pop	{fp, pc}
   1c1f4:	push	{fp, lr}
   1c1f8:	mov	fp, sp
   1c1fc:	sub	sp, sp, #8
   1c200:	str	r0, [sp, #4]
   1c204:	str	r1, [sp]
   1c208:	ldr	r1, [sp, #4]
   1c20c:	ldr	r2, [sp]
   1c210:	movw	r0, #0
   1c214:	bl	1c028 <__assert_fail@plt+0xa850>
   1c218:	mov	sp, fp
   1c21c:	pop	{fp, pc}
   1c220:	push	{fp, lr}
   1c224:	mov	fp, sp
   1c228:	sub	sp, sp, #8
   1c22c:	str	r0, [sp, #4]
   1c230:	str	r1, [sp]
   1c234:	ldr	r1, [sp, #4]
   1c238:	ldr	r2, [sp]
   1c23c:	movw	r0, #0
   1c240:	bl	1c1c0 <__assert_fail@plt+0xa9e8>
   1c244:	mov	sp, fp
   1c248:	pop	{fp, pc}
   1c24c:	push	{fp, lr}
   1c250:	mov	fp, sp
   1c254:	sub	sp, sp, #8
   1c258:	str	r0, [sp, #4]
   1c25c:	str	r1, [sp]
   1c260:	ldr	r0, [sp, #4]
   1c264:	ldr	r1, [sp]
   1c268:	movw	r2, #1
   1c26c:	bl	1c278 <__assert_fail@plt+0xaaa0>
   1c270:	mov	sp, fp
   1c274:	pop	{fp, pc}
   1c278:	push	{fp, lr}
   1c27c:	mov	fp, sp
   1c280:	sub	sp, sp, #16
   1c284:	str	r0, [fp, #-4]
   1c288:	str	r1, [sp, #8]
   1c28c:	str	r2, [sp, #4]
   1c290:	ldr	r0, [sp, #8]
   1c294:	ldr	r0, [r0]
   1c298:	str	r0, [sp]
   1c29c:	ldr	r0, [fp, #-4]
   1c2a0:	movw	r1, #0
   1c2a4:	cmp	r0, r1
   1c2a8:	bne	1c2f4 <__assert_fail@plt+0xab1c>
   1c2ac:	ldr	r0, [sp]
   1c2b0:	cmp	r0, #0
   1c2b4:	bne	1c2f0 <__assert_fail@plt+0xab18>
   1c2b8:	ldr	r0, [sp, #4]
   1c2bc:	movw	r1, #64	; 0x40
   1c2c0:	udiv	r0, r1, r0
   1c2c4:	str	r0, [sp]
   1c2c8:	ldr	r0, [sp]
   1c2cc:	cmp	r0, #0
   1c2d0:	movw	r0, #0
   1c2d4:	movne	r0, #1
   1c2d8:	mvn	r1, #0
   1c2dc:	eor	r0, r0, r1
   1c2e0:	and	r0, r0, #1
   1c2e4:	ldr	r1, [sp]
   1c2e8:	add	r0, r1, r0
   1c2ec:	str	r0, [sp]
   1c2f0:	b	1c324 <__assert_fail@plt+0xab4c>
   1c2f4:	ldr	r0, [sp]
   1c2f8:	ldr	r1, [sp]
   1c2fc:	lsr	r1, r1, #1
   1c300:	add	r1, r1, #1
   1c304:	adds	r0, r0, r1
   1c308:	mov	r1, #0
   1c30c:	adc	r1, r1, #0
   1c310:	str	r0, [sp]
   1c314:	tst	r1, #1
   1c318:	beq	1c320 <__assert_fail@plt+0xab48>
   1c31c:	bl	1edd4 <__assert_fail@plt+0xd5fc>
   1c320:	b	1c324 <__assert_fail@plt+0xab4c>
   1c324:	ldr	r0, [fp, #-4]
   1c328:	ldr	r1, [sp]
   1c32c:	ldr	r2, [sp, #4]
   1c330:	bl	1c028 <__assert_fail@plt+0xa850>
   1c334:	str	r0, [fp, #-4]
   1c338:	ldr	r0, [sp]
   1c33c:	ldr	r1, [sp, #8]
   1c340:	str	r0, [r1]
   1c344:	ldr	r0, [fp, #-4]
   1c348:	mov	sp, fp
   1c34c:	pop	{fp, pc}
   1c350:	push	{fp, lr}
   1c354:	mov	fp, sp
   1c358:	sub	sp, sp, #216	; 0xd8
   1c35c:	ldr	ip, [fp, #8]
   1c360:	str	r0, [fp, #-4]
   1c364:	str	r1, [fp, #-8]
   1c368:	str	r2, [fp, #-12]
   1c36c:	str	r3, [fp, #-16]
   1c370:	ldr	r0, [fp, #-8]
   1c374:	ldr	r0, [r0]
   1c378:	str	r0, [fp, #-20]	; 0xffffffec
   1c37c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c380:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c384:	asr	r1, r1, #1
   1c388:	add	r1, r0, r1
   1c38c:	mov	r2, #1
   1c390:	cmp	r1, r0
   1c394:	movwvc	r2, #0
   1c398:	str	r1, [fp, #-24]	; 0xffffffe8
   1c39c:	tst	r2, #1
   1c3a0:	beq	1c3ac <__assert_fail@plt+0xabd4>
   1c3a4:	ldr	r0, [pc, #4036]	; 1d370 <__assert_fail@plt+0xbb98>
   1c3a8:	str	r0, [fp, #-24]	; 0xffffffe8
   1c3ac:	ldr	r0, [fp, #-16]
   1c3b0:	movw	r1, #0
   1c3b4:	cmp	r1, r0
   1c3b8:	bgt	1c3d4 <__assert_fail@plt+0xabfc>
   1c3bc:	ldr	r0, [fp, #-16]
   1c3c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c3c4:	cmp	r0, r1
   1c3c8:	bge	1c3d4 <__assert_fail@plt+0xabfc>
   1c3cc:	ldr	r0, [fp, #-16]
   1c3d0:	str	r0, [fp, #-24]	; 0xffffffe8
   1c3d4:	b	1c7ac <__assert_fail@plt+0xafd4>
   1c3d8:	b	1c3dc <__assert_fail@plt+0xac04>
   1c3dc:	ldr	r0, [fp, #8]
   1c3e0:	cmp	r0, #0
   1c3e4:	bge	1c4f8 <__assert_fail@plt+0xad20>
   1c3e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c3ec:	cmp	r0, #0
   1c3f0:	bge	1c47c <__assert_fail@plt+0xaca4>
   1c3f4:	b	1c3f8 <__assert_fail@plt+0xac20>
   1c3f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c3fc:	ldr	r1, [fp, #8]
   1c400:	movw	r2, #127	; 0x7f
   1c404:	sdiv	r1, r2, r1
   1c408:	cmp	r0, r1
   1c40c:	blt	1c598 <__assert_fail@plt+0xadc0>
   1c410:	b	1c5b0 <__assert_fail@plt+0xadd8>
   1c414:	b	1c418 <__assert_fail@plt+0xac40>
   1c418:	ldr	r0, [pc, #4084]	; 1d414 <__assert_fail@plt+0xbc3c>
   1c41c:	ldr	r1, [fp, #8]
   1c420:	cmp	r1, r0
   1c424:	blt	1c43c <__assert_fail@plt+0xac64>
   1c428:	b	1c448 <__assert_fail@plt+0xac70>
   1c42c:	ldr	r0, [fp, #8]
   1c430:	movw	r1, #0
   1c434:	cmp	r1, r0
   1c438:	bge	1c448 <__assert_fail@plt+0xac70>
   1c43c:	movw	r0, #0
   1c440:	str	r0, [fp, #-36]	; 0xffffffdc
   1c444:	b	1c460 <__assert_fail@plt+0xac88>
   1c448:	ldr	r0, [fp, #8]
   1c44c:	movw	r1, #0
   1c450:	sub	r0, r1, r0
   1c454:	movw	r1, #127	; 0x7f
   1c458:	sdiv	r0, r1, r0
   1c45c:	str	r0, [fp, #-36]	; 0xffffffdc
   1c460:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c464:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c468:	mvn	r2, #0
   1c46c:	sub	r1, r2, r1
   1c470:	cmp	r0, r1
   1c474:	ble	1c598 <__assert_fail@plt+0xadc0>
   1c478:	b	1c5b0 <__assert_fail@plt+0xadd8>
   1c47c:	b	1c480 <__assert_fail@plt+0xaca8>
   1c480:	b	1c4dc <__assert_fail@plt+0xad04>
   1c484:	b	1c4dc <__assert_fail@plt+0xad04>
   1c488:	ldr	r0, [fp, #8]
   1c48c:	cmn	r0, #1
   1c490:	bne	1c4dc <__assert_fail@plt+0xad04>
   1c494:	b	1c498 <__assert_fail@plt+0xacc0>
   1c498:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c49c:	mvn	r1, #127	; 0x7f
   1c4a0:	add	r0, r0, r1
   1c4a4:	movw	r1, #0
   1c4a8:	cmp	r1, r0
   1c4ac:	blt	1c598 <__assert_fail@plt+0xadc0>
   1c4b0:	b	1c5b0 <__assert_fail@plt+0xadd8>
   1c4b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c4b8:	movw	r1, #0
   1c4bc:	cmp	r1, r0
   1c4c0:	bge	1c5b0 <__assert_fail@plt+0xadd8>
   1c4c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c4c8:	sub	r0, r0, #1
   1c4cc:	movw	r1, #127	; 0x7f
   1c4d0:	cmp	r1, r0
   1c4d4:	blt	1c598 <__assert_fail@plt+0xadc0>
   1c4d8:	b	1c5b0 <__assert_fail@plt+0xadd8>
   1c4dc:	ldr	r0, [fp, #8]
   1c4e0:	mvn	r1, #127	; 0x7f
   1c4e4:	sdiv	r0, r1, r0
   1c4e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c4ec:	cmp	r0, r1
   1c4f0:	blt	1c598 <__assert_fail@plt+0xadc0>
   1c4f4:	b	1c5b0 <__assert_fail@plt+0xadd8>
   1c4f8:	ldr	r0, [fp, #8]
   1c4fc:	cmp	r0, #0
   1c500:	bne	1c508 <__assert_fail@plt+0xad30>
   1c504:	b	1c5b0 <__assert_fail@plt+0xadd8>
   1c508:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c50c:	cmp	r0, #0
   1c510:	bge	1c580 <__assert_fail@plt+0xada8>
   1c514:	b	1c518 <__assert_fail@plt+0xad40>
   1c518:	b	1c564 <__assert_fail@plt+0xad8c>
   1c51c:	b	1c564 <__assert_fail@plt+0xad8c>
   1c520:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c524:	cmn	r0, #1
   1c528:	bne	1c564 <__assert_fail@plt+0xad8c>
   1c52c:	b	1c530 <__assert_fail@plt+0xad58>
   1c530:	ldr	r0, [fp, #8]
   1c534:	mvn	r1, #127	; 0x7f
   1c538:	add	r0, r0, r1
   1c53c:	movw	r1, #0
   1c540:	cmp	r1, r0
   1c544:	blt	1c598 <__assert_fail@plt+0xadc0>
   1c548:	b	1c5b0 <__assert_fail@plt+0xadd8>
   1c54c:	ldr	r0, [fp, #8]
   1c550:	sub	r0, r0, #1
   1c554:	movw	r1, #127	; 0x7f
   1c558:	cmp	r1, r0
   1c55c:	blt	1c598 <__assert_fail@plt+0xadc0>
   1c560:	b	1c5b0 <__assert_fail@plt+0xadd8>
   1c564:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c568:	mvn	r1, #127	; 0x7f
   1c56c:	sdiv	r0, r1, r0
   1c570:	ldr	r1, [fp, #8]
   1c574:	cmp	r0, r1
   1c578:	blt	1c598 <__assert_fail@plt+0xadc0>
   1c57c:	b	1c5b0 <__assert_fail@plt+0xadd8>
   1c580:	ldr	r0, [fp, #8]
   1c584:	movw	r1, #127	; 0x7f
   1c588:	sdiv	r0, r1, r0
   1c58c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c590:	cmp	r0, r1
   1c594:	bge	1c5b0 <__assert_fail@plt+0xadd8>
   1c598:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c59c:	ldr	r1, [fp, #8]
   1c5a0:	mul	r0, r0, r1
   1c5a4:	sxtb	r0, r0
   1c5a8:	str	r0, [fp, #-28]	; 0xffffffe4
   1c5ac:	b	1d774 <__assert_fail@plt+0xbf9c>
   1c5b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c5b4:	ldr	r1, [fp, #8]
   1c5b8:	mul	r0, r0, r1
   1c5bc:	sxtb	r0, r0
   1c5c0:	str	r0, [fp, #-28]	; 0xffffffe4
   1c5c4:	b	1d780 <__assert_fail@plt+0xbfa8>
   1c5c8:	ldr	r0, [fp, #8]
   1c5cc:	cmp	r0, #0
   1c5d0:	bge	1c6e0 <__assert_fail@plt+0xaf08>
   1c5d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c5d8:	cmp	r0, #0
   1c5dc:	bge	1c668 <__assert_fail@plt+0xae90>
   1c5e0:	b	1c5e4 <__assert_fail@plt+0xae0c>
   1c5e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c5e8:	ldr	r1, [fp, #8]
   1c5ec:	movw	r2, #255	; 0xff
   1c5f0:	sdiv	r1, r2, r1
   1c5f4:	cmp	r0, r1
   1c5f8:	blt	1c77c <__assert_fail@plt+0xafa4>
   1c5fc:	b	1c794 <__assert_fail@plt+0xafbc>
   1c600:	b	1c604 <__assert_fail@plt+0xae2c>
   1c604:	ldr	r0, [pc, #3592]	; 1d414 <__assert_fail@plt+0xbc3c>
   1c608:	ldr	r1, [fp, #8]
   1c60c:	cmp	r1, r0
   1c610:	blt	1c628 <__assert_fail@plt+0xae50>
   1c614:	b	1c634 <__assert_fail@plt+0xae5c>
   1c618:	ldr	r0, [fp, #8]
   1c61c:	movw	r1, #0
   1c620:	cmp	r1, r0
   1c624:	bge	1c634 <__assert_fail@plt+0xae5c>
   1c628:	movw	r0, #0
   1c62c:	str	r0, [fp, #-40]	; 0xffffffd8
   1c630:	b	1c64c <__assert_fail@plt+0xae74>
   1c634:	ldr	r0, [fp, #8]
   1c638:	movw	r1, #0
   1c63c:	sub	r0, r1, r0
   1c640:	movw	r1, #255	; 0xff
   1c644:	sdiv	r0, r1, r0
   1c648:	str	r0, [fp, #-40]	; 0xffffffd8
   1c64c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c650:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c654:	mvn	r2, #0
   1c658:	sub	r1, r2, r1
   1c65c:	cmp	r0, r1
   1c660:	ble	1c77c <__assert_fail@plt+0xafa4>
   1c664:	b	1c794 <__assert_fail@plt+0xafbc>
   1c668:	b	1c66c <__assert_fail@plt+0xae94>
   1c66c:	b	1c6c4 <__assert_fail@plt+0xaeec>
   1c670:	b	1c6c4 <__assert_fail@plt+0xaeec>
   1c674:	ldr	r0, [fp, #8]
   1c678:	cmn	r0, #1
   1c67c:	bne	1c6c4 <__assert_fail@plt+0xaeec>
   1c680:	b	1c684 <__assert_fail@plt+0xaeac>
   1c684:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c688:	add	r0, r0, #0
   1c68c:	movw	r1, #0
   1c690:	cmp	r1, r0
   1c694:	blt	1c77c <__assert_fail@plt+0xafa4>
   1c698:	b	1c794 <__assert_fail@plt+0xafbc>
   1c69c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c6a0:	movw	r1, #0
   1c6a4:	cmp	r1, r0
   1c6a8:	bge	1c794 <__assert_fail@plt+0xafbc>
   1c6ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c6b0:	sub	r0, r0, #1
   1c6b4:	mvn	r1, #0
   1c6b8:	cmp	r1, r0
   1c6bc:	blt	1c77c <__assert_fail@plt+0xafa4>
   1c6c0:	b	1c794 <__assert_fail@plt+0xafbc>
   1c6c4:	ldr	r0, [fp, #8]
   1c6c8:	movw	r1, #0
   1c6cc:	sdiv	r0, r1, r0
   1c6d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c6d4:	cmp	r0, r1
   1c6d8:	blt	1c77c <__assert_fail@plt+0xafa4>
   1c6dc:	b	1c794 <__assert_fail@plt+0xafbc>
   1c6e0:	ldr	r0, [fp, #8]
   1c6e4:	cmp	r0, #0
   1c6e8:	bne	1c6f0 <__assert_fail@plt+0xaf18>
   1c6ec:	b	1c794 <__assert_fail@plt+0xafbc>
   1c6f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c6f4:	cmp	r0, #0
   1c6f8:	bge	1c764 <__assert_fail@plt+0xaf8c>
   1c6fc:	b	1c700 <__assert_fail@plt+0xaf28>
   1c700:	b	1c748 <__assert_fail@plt+0xaf70>
   1c704:	b	1c748 <__assert_fail@plt+0xaf70>
   1c708:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c70c:	cmn	r0, #1
   1c710:	bne	1c748 <__assert_fail@plt+0xaf70>
   1c714:	b	1c718 <__assert_fail@plt+0xaf40>
   1c718:	ldr	r0, [fp, #8]
   1c71c:	add	r0, r0, #0
   1c720:	movw	r1, #0
   1c724:	cmp	r1, r0
   1c728:	blt	1c77c <__assert_fail@plt+0xafa4>
   1c72c:	b	1c794 <__assert_fail@plt+0xafbc>
   1c730:	ldr	r0, [fp, #8]
   1c734:	sub	r0, r0, #1
   1c738:	mvn	r1, #0
   1c73c:	cmp	r1, r0
   1c740:	blt	1c77c <__assert_fail@plt+0xafa4>
   1c744:	b	1c794 <__assert_fail@plt+0xafbc>
   1c748:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c74c:	movw	r1, #0
   1c750:	sdiv	r0, r1, r0
   1c754:	ldr	r1, [fp, #8]
   1c758:	cmp	r0, r1
   1c75c:	blt	1c77c <__assert_fail@plt+0xafa4>
   1c760:	b	1c794 <__assert_fail@plt+0xafbc>
   1c764:	ldr	r0, [fp, #8]
   1c768:	movw	r1, #255	; 0xff
   1c76c:	sdiv	r0, r1, r0
   1c770:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c774:	cmp	r0, r1
   1c778:	bge	1c794 <__assert_fail@plt+0xafbc>
   1c77c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c780:	ldr	r1, [fp, #8]
   1c784:	mul	r0, r0, r1
   1c788:	and	r0, r0, #255	; 0xff
   1c78c:	str	r0, [fp, #-28]	; 0xffffffe4
   1c790:	b	1d774 <__assert_fail@plt+0xbf9c>
   1c794:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c798:	ldr	r1, [fp, #8]
   1c79c:	mul	r0, r0, r1
   1c7a0:	and	r0, r0, #255	; 0xff
   1c7a4:	str	r0, [fp, #-28]	; 0xffffffe4
   1c7a8:	b	1d780 <__assert_fail@plt+0xbfa8>
   1c7ac:	b	1cb84 <__assert_fail@plt+0xb3ac>
   1c7b0:	b	1c7b4 <__assert_fail@plt+0xafdc>
   1c7b4:	ldr	r0, [fp, #8]
   1c7b8:	cmp	r0, #0
   1c7bc:	bge	1c8d0 <__assert_fail@plt+0xb0f8>
   1c7c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c7c4:	cmp	r0, #0
   1c7c8:	bge	1c854 <__assert_fail@plt+0xb07c>
   1c7cc:	b	1c7d0 <__assert_fail@plt+0xaff8>
   1c7d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c7d4:	ldr	r1, [fp, #8]
   1c7d8:	movw	r2, #32767	; 0x7fff
   1c7dc:	sdiv	r1, r2, r1
   1c7e0:	cmp	r0, r1
   1c7e4:	blt	1c970 <__assert_fail@plt+0xb198>
   1c7e8:	b	1c988 <__assert_fail@plt+0xb1b0>
   1c7ec:	b	1c7f0 <__assert_fail@plt+0xb018>
   1c7f0:	ldr	r0, [pc, #3100]	; 1d414 <__assert_fail@plt+0xbc3c>
   1c7f4:	ldr	r1, [fp, #8]
   1c7f8:	cmp	r1, r0
   1c7fc:	blt	1c814 <__assert_fail@plt+0xb03c>
   1c800:	b	1c820 <__assert_fail@plt+0xb048>
   1c804:	ldr	r0, [fp, #8]
   1c808:	movw	r1, #0
   1c80c:	cmp	r1, r0
   1c810:	bge	1c820 <__assert_fail@plt+0xb048>
   1c814:	movw	r0, #0
   1c818:	str	r0, [fp, #-44]	; 0xffffffd4
   1c81c:	b	1c838 <__assert_fail@plt+0xb060>
   1c820:	ldr	r0, [fp, #8]
   1c824:	movw	r1, #0
   1c828:	sub	r0, r1, r0
   1c82c:	movw	r1, #32767	; 0x7fff
   1c830:	sdiv	r0, r1, r0
   1c834:	str	r0, [fp, #-44]	; 0xffffffd4
   1c838:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c83c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c840:	mvn	r2, #0
   1c844:	sub	r1, r2, r1
   1c848:	cmp	r0, r1
   1c84c:	ble	1c970 <__assert_fail@plt+0xb198>
   1c850:	b	1c988 <__assert_fail@plt+0xb1b0>
   1c854:	b	1c858 <__assert_fail@plt+0xb080>
   1c858:	b	1c8b4 <__assert_fail@plt+0xb0dc>
   1c85c:	b	1c8b4 <__assert_fail@plt+0xb0dc>
   1c860:	ldr	r0, [fp, #8]
   1c864:	cmn	r0, #1
   1c868:	bne	1c8b4 <__assert_fail@plt+0xb0dc>
   1c86c:	b	1c870 <__assert_fail@plt+0xb098>
   1c870:	ldr	r0, [pc, #4068]	; 1d85c <__assert_fail@plt+0xc084>
   1c874:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c878:	add	r0, r1, r0
   1c87c:	movw	r1, #0
   1c880:	cmp	r1, r0
   1c884:	blt	1c970 <__assert_fail@plt+0xb198>
   1c888:	b	1c988 <__assert_fail@plt+0xb1b0>
   1c88c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c890:	movw	r1, #0
   1c894:	cmp	r1, r0
   1c898:	bge	1c988 <__assert_fail@plt+0xb1b0>
   1c89c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c8a0:	sub	r0, r0, #1
   1c8a4:	movw	r1, #32767	; 0x7fff
   1c8a8:	cmp	r1, r0
   1c8ac:	blt	1c970 <__assert_fail@plt+0xb198>
   1c8b0:	b	1c988 <__assert_fail@plt+0xb1b0>
   1c8b4:	ldr	r0, [pc, #4000]	; 1d85c <__assert_fail@plt+0xc084>
   1c8b8:	ldr	r1, [fp, #8]
   1c8bc:	sdiv	r0, r0, r1
   1c8c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c8c4:	cmp	r0, r1
   1c8c8:	blt	1c970 <__assert_fail@plt+0xb198>
   1c8cc:	b	1c988 <__assert_fail@plt+0xb1b0>
   1c8d0:	ldr	r0, [fp, #8]
   1c8d4:	cmp	r0, #0
   1c8d8:	bne	1c8e0 <__assert_fail@plt+0xb108>
   1c8dc:	b	1c988 <__assert_fail@plt+0xb1b0>
   1c8e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c8e4:	cmp	r0, #0
   1c8e8:	bge	1c958 <__assert_fail@plt+0xb180>
   1c8ec:	b	1c8f0 <__assert_fail@plt+0xb118>
   1c8f0:	b	1c93c <__assert_fail@plt+0xb164>
   1c8f4:	b	1c93c <__assert_fail@plt+0xb164>
   1c8f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c8fc:	cmn	r0, #1
   1c900:	bne	1c93c <__assert_fail@plt+0xb164>
   1c904:	b	1c908 <__assert_fail@plt+0xb130>
   1c908:	ldr	r0, [pc, #3916]	; 1d85c <__assert_fail@plt+0xc084>
   1c90c:	ldr	r1, [fp, #8]
   1c910:	add	r0, r1, r0
   1c914:	movw	r1, #0
   1c918:	cmp	r1, r0
   1c91c:	blt	1c970 <__assert_fail@plt+0xb198>
   1c920:	b	1c988 <__assert_fail@plt+0xb1b0>
   1c924:	ldr	r0, [fp, #8]
   1c928:	sub	r0, r0, #1
   1c92c:	movw	r1, #32767	; 0x7fff
   1c930:	cmp	r1, r0
   1c934:	blt	1c970 <__assert_fail@plt+0xb198>
   1c938:	b	1c988 <__assert_fail@plt+0xb1b0>
   1c93c:	ldr	r0, [pc, #3864]	; 1d85c <__assert_fail@plt+0xc084>
   1c940:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c944:	sdiv	r0, r0, r1
   1c948:	ldr	r1, [fp, #8]
   1c94c:	cmp	r0, r1
   1c950:	blt	1c970 <__assert_fail@plt+0xb198>
   1c954:	b	1c988 <__assert_fail@plt+0xb1b0>
   1c958:	ldr	r0, [fp, #8]
   1c95c:	movw	r1, #32767	; 0x7fff
   1c960:	sdiv	r0, r1, r0
   1c964:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c968:	cmp	r0, r1
   1c96c:	bge	1c988 <__assert_fail@plt+0xb1b0>
   1c970:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c974:	ldr	r1, [fp, #8]
   1c978:	mul	r0, r0, r1
   1c97c:	sxth	r0, r0
   1c980:	str	r0, [fp, #-28]	; 0xffffffe4
   1c984:	b	1d774 <__assert_fail@plt+0xbf9c>
   1c988:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c98c:	ldr	r1, [fp, #8]
   1c990:	mul	r0, r0, r1
   1c994:	sxth	r0, r0
   1c998:	str	r0, [fp, #-28]	; 0xffffffe4
   1c99c:	b	1d780 <__assert_fail@plt+0xbfa8>
   1c9a0:	ldr	r0, [fp, #8]
   1c9a4:	cmp	r0, #0
   1c9a8:	bge	1cab8 <__assert_fail@plt+0xb2e0>
   1c9ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c9b0:	cmp	r0, #0
   1c9b4:	bge	1ca40 <__assert_fail@plt+0xb268>
   1c9b8:	b	1c9bc <__assert_fail@plt+0xb1e4>
   1c9bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c9c0:	ldr	r1, [fp, #8]
   1c9c4:	movw	r2, #65535	; 0xffff
   1c9c8:	sdiv	r1, r2, r1
   1c9cc:	cmp	r0, r1
   1c9d0:	blt	1cb54 <__assert_fail@plt+0xb37c>
   1c9d4:	b	1cb6c <__assert_fail@plt+0xb394>
   1c9d8:	b	1c9dc <__assert_fail@plt+0xb204>
   1c9dc:	ldr	r0, [pc, #2608]	; 1d414 <__assert_fail@plt+0xbc3c>
   1c9e0:	ldr	r1, [fp, #8]
   1c9e4:	cmp	r1, r0
   1c9e8:	blt	1ca00 <__assert_fail@plt+0xb228>
   1c9ec:	b	1ca0c <__assert_fail@plt+0xb234>
   1c9f0:	ldr	r0, [fp, #8]
   1c9f4:	movw	r1, #0
   1c9f8:	cmp	r1, r0
   1c9fc:	bge	1ca0c <__assert_fail@plt+0xb234>
   1ca00:	movw	r0, #0
   1ca04:	str	r0, [fp, #-48]	; 0xffffffd0
   1ca08:	b	1ca24 <__assert_fail@plt+0xb24c>
   1ca0c:	ldr	r0, [fp, #8]
   1ca10:	movw	r1, #0
   1ca14:	sub	r0, r1, r0
   1ca18:	movw	r1, #65535	; 0xffff
   1ca1c:	sdiv	r0, r1, r0
   1ca20:	str	r0, [fp, #-48]	; 0xffffffd0
   1ca24:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ca28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ca2c:	mvn	r2, #0
   1ca30:	sub	r1, r2, r1
   1ca34:	cmp	r0, r1
   1ca38:	ble	1cb54 <__assert_fail@plt+0xb37c>
   1ca3c:	b	1cb6c <__assert_fail@plt+0xb394>
   1ca40:	b	1ca44 <__assert_fail@plt+0xb26c>
   1ca44:	b	1ca9c <__assert_fail@plt+0xb2c4>
   1ca48:	b	1ca9c <__assert_fail@plt+0xb2c4>
   1ca4c:	ldr	r0, [fp, #8]
   1ca50:	cmn	r0, #1
   1ca54:	bne	1ca9c <__assert_fail@plt+0xb2c4>
   1ca58:	b	1ca5c <__assert_fail@plt+0xb284>
   1ca5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca60:	add	r0, r0, #0
   1ca64:	movw	r1, #0
   1ca68:	cmp	r1, r0
   1ca6c:	blt	1cb54 <__assert_fail@plt+0xb37c>
   1ca70:	b	1cb6c <__assert_fail@plt+0xb394>
   1ca74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca78:	movw	r1, #0
   1ca7c:	cmp	r1, r0
   1ca80:	bge	1cb6c <__assert_fail@plt+0xb394>
   1ca84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca88:	sub	r0, r0, #1
   1ca8c:	mvn	r1, #0
   1ca90:	cmp	r1, r0
   1ca94:	blt	1cb54 <__assert_fail@plt+0xb37c>
   1ca98:	b	1cb6c <__assert_fail@plt+0xb394>
   1ca9c:	ldr	r0, [fp, #8]
   1caa0:	movw	r1, #0
   1caa4:	sdiv	r0, r1, r0
   1caa8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1caac:	cmp	r0, r1
   1cab0:	blt	1cb54 <__assert_fail@plt+0xb37c>
   1cab4:	b	1cb6c <__assert_fail@plt+0xb394>
   1cab8:	ldr	r0, [fp, #8]
   1cabc:	cmp	r0, #0
   1cac0:	bne	1cac8 <__assert_fail@plt+0xb2f0>
   1cac4:	b	1cb6c <__assert_fail@plt+0xb394>
   1cac8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cacc:	cmp	r0, #0
   1cad0:	bge	1cb3c <__assert_fail@plt+0xb364>
   1cad4:	b	1cad8 <__assert_fail@plt+0xb300>
   1cad8:	b	1cb20 <__assert_fail@plt+0xb348>
   1cadc:	b	1cb20 <__assert_fail@plt+0xb348>
   1cae0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cae4:	cmn	r0, #1
   1cae8:	bne	1cb20 <__assert_fail@plt+0xb348>
   1caec:	b	1caf0 <__assert_fail@plt+0xb318>
   1caf0:	ldr	r0, [fp, #8]
   1caf4:	add	r0, r0, #0
   1caf8:	movw	r1, #0
   1cafc:	cmp	r1, r0
   1cb00:	blt	1cb54 <__assert_fail@plt+0xb37c>
   1cb04:	b	1cb6c <__assert_fail@plt+0xb394>
   1cb08:	ldr	r0, [fp, #8]
   1cb0c:	sub	r0, r0, #1
   1cb10:	mvn	r1, #0
   1cb14:	cmp	r1, r0
   1cb18:	blt	1cb54 <__assert_fail@plt+0xb37c>
   1cb1c:	b	1cb6c <__assert_fail@plt+0xb394>
   1cb20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cb24:	movw	r1, #0
   1cb28:	sdiv	r0, r1, r0
   1cb2c:	ldr	r1, [fp, #8]
   1cb30:	cmp	r0, r1
   1cb34:	blt	1cb54 <__assert_fail@plt+0xb37c>
   1cb38:	b	1cb6c <__assert_fail@plt+0xb394>
   1cb3c:	ldr	r0, [fp, #8]
   1cb40:	movw	r1, #65535	; 0xffff
   1cb44:	sdiv	r0, r1, r0
   1cb48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cb4c:	cmp	r0, r1
   1cb50:	bge	1cb6c <__assert_fail@plt+0xb394>
   1cb54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cb58:	ldr	r1, [fp, #8]
   1cb5c:	mul	r0, r0, r1
   1cb60:	uxth	r0, r0
   1cb64:	str	r0, [fp, #-28]	; 0xffffffe4
   1cb68:	b	1d774 <__assert_fail@plt+0xbf9c>
   1cb6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cb70:	ldr	r1, [fp, #8]
   1cb74:	mul	r0, r0, r1
   1cb78:	uxth	r0, r0
   1cb7c:	str	r0, [fp, #-28]	; 0xffffffe4
   1cb80:	b	1d780 <__assert_fail@plt+0xbfa8>
   1cb84:	b	1cb88 <__assert_fail@plt+0xb3b0>
   1cb88:	b	1cb8c <__assert_fail@plt+0xb3b4>
   1cb8c:	ldr	r0, [fp, #8]
   1cb90:	cmp	r0, #0
   1cb94:	bge	1cc98 <__assert_fail@plt+0xb4c0>
   1cb98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cb9c:	cmp	r0, #0
   1cba0:	bge	1cc2c <__assert_fail@plt+0xb454>
   1cba4:	b	1cba8 <__assert_fail@plt+0xb3d0>
   1cba8:	ldr	r0, [pc, #1984]	; 1d370 <__assert_fail@plt+0xbb98>
   1cbac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cbb0:	ldr	r2, [fp, #8]
   1cbb4:	sdiv	r0, r0, r2
   1cbb8:	cmp	r1, r0
   1cbbc:	blt	1cd28 <__assert_fail@plt+0xb550>
   1cbc0:	b	1cd3c <__assert_fail@plt+0xb564>
   1cbc4:	b	1cbc8 <__assert_fail@plt+0xb3f0>
   1cbc8:	ldr	r0, [pc, #2116]	; 1d414 <__assert_fail@plt+0xbc3c>
   1cbcc:	ldr	r1, [fp, #8]
   1cbd0:	cmp	r1, r0
   1cbd4:	blt	1cbec <__assert_fail@plt+0xb414>
   1cbd8:	b	1cbf8 <__assert_fail@plt+0xb420>
   1cbdc:	ldr	r0, [fp, #8]
   1cbe0:	movw	r1, #0
   1cbe4:	cmp	r1, r0
   1cbe8:	bge	1cbf8 <__assert_fail@plt+0xb420>
   1cbec:	movw	r0, #0
   1cbf0:	str	r0, [fp, #-52]	; 0xffffffcc
   1cbf4:	b	1cc10 <__assert_fail@plt+0xb438>
   1cbf8:	ldr	r0, [pc, #1904]	; 1d370 <__assert_fail@plt+0xbb98>
   1cbfc:	ldr	r1, [fp, #8]
   1cc00:	movw	r2, #0
   1cc04:	sub	r1, r2, r1
   1cc08:	sdiv	r0, r0, r1
   1cc0c:	str	r0, [fp, #-52]	; 0xffffffcc
   1cc10:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1cc14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cc18:	mvn	r2, #0
   1cc1c:	sub	r1, r2, r1
   1cc20:	cmp	r0, r1
   1cc24:	ble	1cd28 <__assert_fail@plt+0xb550>
   1cc28:	b	1cd3c <__assert_fail@plt+0xb564>
   1cc2c:	ldr	r0, [fp, #8]
   1cc30:	cmn	r0, #1
   1cc34:	bne	1cc7c <__assert_fail@plt+0xb4a4>
   1cc38:	b	1cc3c <__assert_fail@plt+0xb464>
   1cc3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cc40:	add	r0, r0, #-2147483648	; 0x80000000
   1cc44:	movw	r1, #0
   1cc48:	cmp	r1, r0
   1cc4c:	blt	1cd28 <__assert_fail@plt+0xb550>
   1cc50:	b	1cd3c <__assert_fail@plt+0xb564>
   1cc54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cc58:	movw	r1, #0
   1cc5c:	cmp	r1, r0
   1cc60:	bge	1cd3c <__assert_fail@plt+0xb564>
   1cc64:	ldr	r0, [pc, #1796]	; 1d370 <__assert_fail@plt+0xbb98>
   1cc68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cc6c:	sub	r1, r1, #1
   1cc70:	cmp	r0, r1
   1cc74:	blt	1cd28 <__assert_fail@plt+0xb550>
   1cc78:	b	1cd3c <__assert_fail@plt+0xb564>
   1cc7c:	ldr	r0, [pc, #4080]	; 1dc74 <__assert_fail@plt+0xc49c>
   1cc80:	ldr	r1, [fp, #8]
   1cc84:	sdiv	r0, r0, r1
   1cc88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cc8c:	cmp	r0, r1
   1cc90:	blt	1cd28 <__assert_fail@plt+0xb550>
   1cc94:	b	1cd3c <__assert_fail@plt+0xb564>
   1cc98:	ldr	r0, [fp, #8]
   1cc9c:	cmp	r0, #0
   1cca0:	bne	1cca8 <__assert_fail@plt+0xb4d0>
   1cca4:	b	1cd3c <__assert_fail@plt+0xb564>
   1cca8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ccac:	cmp	r0, #0
   1ccb0:	bge	1cd10 <__assert_fail@plt+0xb538>
   1ccb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ccb8:	cmn	r0, #1
   1ccbc:	bne	1ccf4 <__assert_fail@plt+0xb51c>
   1ccc0:	b	1ccc4 <__assert_fail@plt+0xb4ec>
   1ccc4:	ldr	r0, [fp, #8]
   1ccc8:	add	r0, r0, #-2147483648	; 0x80000000
   1cccc:	movw	r1, #0
   1ccd0:	cmp	r1, r0
   1ccd4:	blt	1cd28 <__assert_fail@plt+0xb550>
   1ccd8:	b	1cd3c <__assert_fail@plt+0xb564>
   1ccdc:	ldr	r0, [pc, #1676]	; 1d370 <__assert_fail@plt+0xbb98>
   1cce0:	ldr	r1, [fp, #8]
   1cce4:	sub	r1, r1, #1
   1cce8:	cmp	r0, r1
   1ccec:	blt	1cd28 <__assert_fail@plt+0xb550>
   1ccf0:	b	1cd3c <__assert_fail@plt+0xb564>
   1ccf4:	ldr	r0, [pc, #3960]	; 1dc74 <__assert_fail@plt+0xc49c>
   1ccf8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ccfc:	sdiv	r0, r0, r1
   1cd00:	ldr	r1, [fp, #8]
   1cd04:	cmp	r0, r1
   1cd08:	blt	1cd28 <__assert_fail@plt+0xb550>
   1cd0c:	b	1cd3c <__assert_fail@plt+0xb564>
   1cd10:	ldr	r0, [pc, #1624]	; 1d370 <__assert_fail@plt+0xbb98>
   1cd14:	ldr	r1, [fp, #8]
   1cd18:	sdiv	r0, r0, r1
   1cd1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cd20:	cmp	r0, r1
   1cd24:	bge	1cd3c <__assert_fail@plt+0xb564>
   1cd28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd2c:	ldr	r1, [fp, #8]
   1cd30:	mul	r0, r0, r1
   1cd34:	str	r0, [fp, #-28]	; 0xffffffe4
   1cd38:	b	1d774 <__assert_fail@plt+0xbf9c>
   1cd3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd40:	ldr	r1, [fp, #8]
   1cd44:	mul	r0, r0, r1
   1cd48:	str	r0, [fp, #-28]	; 0xffffffe4
   1cd4c:	b	1d780 <__assert_fail@plt+0xbfa8>
   1cd50:	ldr	r0, [fp, #8]
   1cd54:	cmp	r0, #0
   1cd58:	bge	1ce68 <__assert_fail@plt+0xb690>
   1cd5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd60:	cmp	r0, #0
   1cd64:	bge	1cdf0 <__assert_fail@plt+0xb618>
   1cd68:	b	1cd88 <__assert_fail@plt+0xb5b0>
   1cd6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd70:	ldr	r1, [fp, #8]
   1cd74:	mvn	r2, #0
   1cd78:	udiv	r1, r2, r1
   1cd7c:	cmp	r0, r1
   1cd80:	bcc	1cf04 <__assert_fail@plt+0xb72c>
   1cd84:	b	1cf18 <__assert_fail@plt+0xb740>
   1cd88:	b	1cd8c <__assert_fail@plt+0xb5b4>
   1cd8c:	ldr	r0, [pc, #1664]	; 1d414 <__assert_fail@plt+0xbc3c>
   1cd90:	ldr	r1, [fp, #8]
   1cd94:	cmp	r1, r0
   1cd98:	blt	1cdb0 <__assert_fail@plt+0xb5d8>
   1cd9c:	b	1cdbc <__assert_fail@plt+0xb5e4>
   1cda0:	ldr	r0, [fp, #8]
   1cda4:	movw	r1, #0
   1cda8:	cmp	r1, r0
   1cdac:	bge	1cdbc <__assert_fail@plt+0xb5e4>
   1cdb0:	movw	r0, #1
   1cdb4:	str	r0, [fp, #-56]	; 0xffffffc8
   1cdb8:	b	1cdd4 <__assert_fail@plt+0xb5fc>
   1cdbc:	ldr	r0, [fp, #8]
   1cdc0:	movw	r1, #0
   1cdc4:	sub	r0, r1, r0
   1cdc8:	mvn	r1, #0
   1cdcc:	udiv	r0, r1, r0
   1cdd0:	str	r0, [fp, #-56]	; 0xffffffc8
   1cdd4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1cdd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cddc:	mvn	r2, #0
   1cde0:	sub	r1, r2, r1
   1cde4:	cmp	r0, r1
   1cde8:	bls	1cf04 <__assert_fail@plt+0xb72c>
   1cdec:	b	1cf18 <__assert_fail@plt+0xb740>
   1cdf0:	b	1cdf4 <__assert_fail@plt+0xb61c>
   1cdf4:	b	1ce4c <__assert_fail@plt+0xb674>
   1cdf8:	b	1ce4c <__assert_fail@plt+0xb674>
   1cdfc:	ldr	r0, [fp, #8]
   1ce00:	cmn	r0, #1
   1ce04:	bne	1ce4c <__assert_fail@plt+0xb674>
   1ce08:	b	1ce0c <__assert_fail@plt+0xb634>
   1ce0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce10:	add	r0, r0, #0
   1ce14:	movw	r1, #0
   1ce18:	cmp	r1, r0
   1ce1c:	blt	1cf04 <__assert_fail@plt+0xb72c>
   1ce20:	b	1cf18 <__assert_fail@plt+0xb740>
   1ce24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce28:	movw	r1, #0
   1ce2c:	cmp	r1, r0
   1ce30:	bge	1cf18 <__assert_fail@plt+0xb740>
   1ce34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce38:	sub	r0, r0, #1
   1ce3c:	mvn	r1, #0
   1ce40:	cmp	r1, r0
   1ce44:	blt	1cf04 <__assert_fail@plt+0xb72c>
   1ce48:	b	1cf18 <__assert_fail@plt+0xb740>
   1ce4c:	ldr	r0, [fp, #8]
   1ce50:	movw	r1, #0
   1ce54:	sdiv	r0, r1, r0
   1ce58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ce5c:	cmp	r0, r1
   1ce60:	blt	1cf04 <__assert_fail@plt+0xb72c>
   1ce64:	b	1cf18 <__assert_fail@plt+0xb740>
   1ce68:	ldr	r0, [fp, #8]
   1ce6c:	cmp	r0, #0
   1ce70:	bne	1ce78 <__assert_fail@plt+0xb6a0>
   1ce74:	b	1cf18 <__assert_fail@plt+0xb740>
   1ce78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce7c:	cmp	r0, #0
   1ce80:	bge	1ceec <__assert_fail@plt+0xb714>
   1ce84:	b	1ce88 <__assert_fail@plt+0xb6b0>
   1ce88:	b	1ced0 <__assert_fail@plt+0xb6f8>
   1ce8c:	b	1ced0 <__assert_fail@plt+0xb6f8>
   1ce90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce94:	cmn	r0, #1
   1ce98:	bne	1ced0 <__assert_fail@plt+0xb6f8>
   1ce9c:	b	1cea0 <__assert_fail@plt+0xb6c8>
   1cea0:	ldr	r0, [fp, #8]
   1cea4:	add	r0, r0, #0
   1cea8:	movw	r1, #0
   1ceac:	cmp	r1, r0
   1ceb0:	blt	1cf04 <__assert_fail@plt+0xb72c>
   1ceb4:	b	1cf18 <__assert_fail@plt+0xb740>
   1ceb8:	ldr	r0, [fp, #8]
   1cebc:	sub	r0, r0, #1
   1cec0:	mvn	r1, #0
   1cec4:	cmp	r1, r0
   1cec8:	blt	1cf04 <__assert_fail@plt+0xb72c>
   1cecc:	b	1cf18 <__assert_fail@plt+0xb740>
   1ced0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ced4:	movw	r1, #0
   1ced8:	sdiv	r0, r1, r0
   1cedc:	ldr	r1, [fp, #8]
   1cee0:	cmp	r0, r1
   1cee4:	blt	1cf04 <__assert_fail@plt+0xb72c>
   1cee8:	b	1cf18 <__assert_fail@plt+0xb740>
   1ceec:	ldr	r0, [fp, #8]
   1cef0:	mvn	r1, #0
   1cef4:	udiv	r0, r1, r0
   1cef8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cefc:	cmp	r0, r1
   1cf00:	bcs	1cf18 <__assert_fail@plt+0xb740>
   1cf04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf08:	ldr	r1, [fp, #8]
   1cf0c:	mul	r0, r0, r1
   1cf10:	str	r0, [fp, #-28]	; 0xffffffe4
   1cf14:	b	1d774 <__assert_fail@plt+0xbf9c>
   1cf18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf1c:	ldr	r1, [fp, #8]
   1cf20:	mul	r0, r0, r1
   1cf24:	str	r0, [fp, #-28]	; 0xffffffe4
   1cf28:	b	1d780 <__assert_fail@plt+0xbfa8>
   1cf2c:	b	1cf30 <__assert_fail@plt+0xb758>
   1cf30:	b	1cf34 <__assert_fail@plt+0xb75c>
   1cf34:	ldr	r0, [fp, #8]
   1cf38:	cmp	r0, #0
   1cf3c:	bge	1d040 <__assert_fail@plt+0xb868>
   1cf40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf44:	cmp	r0, #0
   1cf48:	bge	1cfd4 <__assert_fail@plt+0xb7fc>
   1cf4c:	b	1cf50 <__assert_fail@plt+0xb778>
   1cf50:	ldr	r0, [pc, #1048]	; 1d370 <__assert_fail@plt+0xbb98>
   1cf54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cf58:	ldr	r2, [fp, #8]
   1cf5c:	sdiv	r0, r0, r2
   1cf60:	cmp	r1, r0
   1cf64:	blt	1d0d0 <__assert_fail@plt+0xb8f8>
   1cf68:	b	1d0e4 <__assert_fail@plt+0xb90c>
   1cf6c:	b	1cf70 <__assert_fail@plt+0xb798>
   1cf70:	ldr	r0, [pc, #1180]	; 1d414 <__assert_fail@plt+0xbc3c>
   1cf74:	ldr	r1, [fp, #8]
   1cf78:	cmp	r1, r0
   1cf7c:	blt	1cf94 <__assert_fail@plt+0xb7bc>
   1cf80:	b	1cfa0 <__assert_fail@plt+0xb7c8>
   1cf84:	ldr	r0, [fp, #8]
   1cf88:	movw	r1, #0
   1cf8c:	cmp	r1, r0
   1cf90:	bge	1cfa0 <__assert_fail@plt+0xb7c8>
   1cf94:	movw	r0, #0
   1cf98:	str	r0, [fp, #-60]	; 0xffffffc4
   1cf9c:	b	1cfb8 <__assert_fail@plt+0xb7e0>
   1cfa0:	ldr	r0, [pc, #968]	; 1d370 <__assert_fail@plt+0xbb98>
   1cfa4:	ldr	r1, [fp, #8]
   1cfa8:	movw	r2, #0
   1cfac:	sub	r1, r2, r1
   1cfb0:	sdiv	r0, r0, r1
   1cfb4:	str	r0, [fp, #-60]	; 0xffffffc4
   1cfb8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1cfbc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cfc0:	mvn	r2, #0
   1cfc4:	sub	r1, r2, r1
   1cfc8:	cmp	r0, r1
   1cfcc:	ble	1d0d0 <__assert_fail@plt+0xb8f8>
   1cfd0:	b	1d0e4 <__assert_fail@plt+0xb90c>
   1cfd4:	ldr	r0, [fp, #8]
   1cfd8:	cmn	r0, #1
   1cfdc:	bne	1d024 <__assert_fail@plt+0xb84c>
   1cfe0:	b	1cfe4 <__assert_fail@plt+0xb80c>
   1cfe4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cfe8:	add	r0, r0, #-2147483648	; 0x80000000
   1cfec:	movw	r1, #0
   1cff0:	cmp	r1, r0
   1cff4:	blt	1d0d0 <__assert_fail@plt+0xb8f8>
   1cff8:	b	1d0e4 <__assert_fail@plt+0xb90c>
   1cffc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d000:	movw	r1, #0
   1d004:	cmp	r1, r0
   1d008:	bge	1d0e4 <__assert_fail@plt+0xb90c>
   1d00c:	ldr	r0, [pc, #860]	; 1d370 <__assert_fail@plt+0xbb98>
   1d010:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d014:	sub	r1, r1, #1
   1d018:	cmp	r0, r1
   1d01c:	blt	1d0d0 <__assert_fail@plt+0xb8f8>
   1d020:	b	1d0e4 <__assert_fail@plt+0xb90c>
   1d024:	ldr	r0, [pc, #3144]	; 1dc74 <__assert_fail@plt+0xc49c>
   1d028:	ldr	r1, [fp, #8]
   1d02c:	sdiv	r0, r0, r1
   1d030:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d034:	cmp	r0, r1
   1d038:	blt	1d0d0 <__assert_fail@plt+0xb8f8>
   1d03c:	b	1d0e4 <__assert_fail@plt+0xb90c>
   1d040:	ldr	r0, [fp, #8]
   1d044:	cmp	r0, #0
   1d048:	bne	1d050 <__assert_fail@plt+0xb878>
   1d04c:	b	1d0e4 <__assert_fail@plt+0xb90c>
   1d050:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d054:	cmp	r0, #0
   1d058:	bge	1d0b8 <__assert_fail@plt+0xb8e0>
   1d05c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d060:	cmn	r0, #1
   1d064:	bne	1d09c <__assert_fail@plt+0xb8c4>
   1d068:	b	1d06c <__assert_fail@plt+0xb894>
   1d06c:	ldr	r0, [fp, #8]
   1d070:	add	r0, r0, #-2147483648	; 0x80000000
   1d074:	movw	r1, #0
   1d078:	cmp	r1, r0
   1d07c:	blt	1d0d0 <__assert_fail@plt+0xb8f8>
   1d080:	b	1d0e4 <__assert_fail@plt+0xb90c>
   1d084:	ldr	r0, [pc, #740]	; 1d370 <__assert_fail@plt+0xbb98>
   1d088:	ldr	r1, [fp, #8]
   1d08c:	sub	r1, r1, #1
   1d090:	cmp	r0, r1
   1d094:	blt	1d0d0 <__assert_fail@plt+0xb8f8>
   1d098:	b	1d0e4 <__assert_fail@plt+0xb90c>
   1d09c:	ldr	r0, [pc, #3024]	; 1dc74 <__assert_fail@plt+0xc49c>
   1d0a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d0a4:	sdiv	r0, r0, r1
   1d0a8:	ldr	r1, [fp, #8]
   1d0ac:	cmp	r0, r1
   1d0b0:	blt	1d0d0 <__assert_fail@plt+0xb8f8>
   1d0b4:	b	1d0e4 <__assert_fail@plt+0xb90c>
   1d0b8:	ldr	r0, [pc, #688]	; 1d370 <__assert_fail@plt+0xbb98>
   1d0bc:	ldr	r1, [fp, #8]
   1d0c0:	sdiv	r0, r0, r1
   1d0c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d0c8:	cmp	r0, r1
   1d0cc:	bge	1d0e4 <__assert_fail@plt+0xb90c>
   1d0d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0d4:	ldr	r1, [fp, #8]
   1d0d8:	mul	r0, r0, r1
   1d0dc:	str	r0, [fp, #-28]	; 0xffffffe4
   1d0e0:	b	1d774 <__assert_fail@plt+0xbf9c>
   1d0e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0e8:	ldr	r1, [fp, #8]
   1d0ec:	mul	r0, r0, r1
   1d0f0:	str	r0, [fp, #-28]	; 0xffffffe4
   1d0f4:	b	1d780 <__assert_fail@plt+0xbfa8>
   1d0f8:	ldr	r0, [fp, #8]
   1d0fc:	cmp	r0, #0
   1d100:	bge	1d210 <__assert_fail@plt+0xba38>
   1d104:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d108:	cmp	r0, #0
   1d10c:	bge	1d198 <__assert_fail@plt+0xb9c0>
   1d110:	b	1d130 <__assert_fail@plt+0xb958>
   1d114:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d118:	ldr	r1, [fp, #8]
   1d11c:	mvn	r2, #0
   1d120:	udiv	r1, r2, r1
   1d124:	cmp	r0, r1
   1d128:	bcc	1d2ac <__assert_fail@plt+0xbad4>
   1d12c:	b	1d2c0 <__assert_fail@plt+0xbae8>
   1d130:	b	1d134 <__assert_fail@plt+0xb95c>
   1d134:	ldr	r0, [pc, #728]	; 1d414 <__assert_fail@plt+0xbc3c>
   1d138:	ldr	r1, [fp, #8]
   1d13c:	cmp	r1, r0
   1d140:	blt	1d158 <__assert_fail@plt+0xb980>
   1d144:	b	1d164 <__assert_fail@plt+0xb98c>
   1d148:	ldr	r0, [fp, #8]
   1d14c:	movw	r1, #0
   1d150:	cmp	r1, r0
   1d154:	bge	1d164 <__assert_fail@plt+0xb98c>
   1d158:	movw	r0, #1
   1d15c:	str	r0, [fp, #-64]	; 0xffffffc0
   1d160:	b	1d17c <__assert_fail@plt+0xb9a4>
   1d164:	ldr	r0, [fp, #8]
   1d168:	movw	r1, #0
   1d16c:	sub	r0, r1, r0
   1d170:	mvn	r1, #0
   1d174:	udiv	r0, r1, r0
   1d178:	str	r0, [fp, #-64]	; 0xffffffc0
   1d17c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1d180:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d184:	mvn	r2, #0
   1d188:	sub	r1, r2, r1
   1d18c:	cmp	r0, r1
   1d190:	bls	1d2ac <__assert_fail@plt+0xbad4>
   1d194:	b	1d2c0 <__assert_fail@plt+0xbae8>
   1d198:	b	1d19c <__assert_fail@plt+0xb9c4>
   1d19c:	b	1d1f4 <__assert_fail@plt+0xba1c>
   1d1a0:	b	1d1f4 <__assert_fail@plt+0xba1c>
   1d1a4:	ldr	r0, [fp, #8]
   1d1a8:	cmn	r0, #1
   1d1ac:	bne	1d1f4 <__assert_fail@plt+0xba1c>
   1d1b0:	b	1d1b4 <__assert_fail@plt+0xb9dc>
   1d1b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d1b8:	add	r0, r0, #0
   1d1bc:	movw	r1, #0
   1d1c0:	cmp	r1, r0
   1d1c4:	blt	1d2ac <__assert_fail@plt+0xbad4>
   1d1c8:	b	1d2c0 <__assert_fail@plt+0xbae8>
   1d1cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d1d0:	movw	r1, #0
   1d1d4:	cmp	r1, r0
   1d1d8:	bge	1d2c0 <__assert_fail@plt+0xbae8>
   1d1dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d1e0:	sub	r0, r0, #1
   1d1e4:	mvn	r1, #0
   1d1e8:	cmp	r1, r0
   1d1ec:	blt	1d2ac <__assert_fail@plt+0xbad4>
   1d1f0:	b	1d2c0 <__assert_fail@plt+0xbae8>
   1d1f4:	ldr	r0, [fp, #8]
   1d1f8:	movw	r1, #0
   1d1fc:	sdiv	r0, r1, r0
   1d200:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d204:	cmp	r0, r1
   1d208:	blt	1d2ac <__assert_fail@plt+0xbad4>
   1d20c:	b	1d2c0 <__assert_fail@plt+0xbae8>
   1d210:	ldr	r0, [fp, #8]
   1d214:	cmp	r0, #0
   1d218:	bne	1d220 <__assert_fail@plt+0xba48>
   1d21c:	b	1d2c0 <__assert_fail@plt+0xbae8>
   1d220:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d224:	cmp	r0, #0
   1d228:	bge	1d294 <__assert_fail@plt+0xbabc>
   1d22c:	b	1d230 <__assert_fail@plt+0xba58>
   1d230:	b	1d278 <__assert_fail@plt+0xbaa0>
   1d234:	b	1d278 <__assert_fail@plt+0xbaa0>
   1d238:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d23c:	cmn	r0, #1
   1d240:	bne	1d278 <__assert_fail@plt+0xbaa0>
   1d244:	b	1d248 <__assert_fail@plt+0xba70>
   1d248:	ldr	r0, [fp, #8]
   1d24c:	add	r0, r0, #0
   1d250:	movw	r1, #0
   1d254:	cmp	r1, r0
   1d258:	blt	1d2ac <__assert_fail@plt+0xbad4>
   1d25c:	b	1d2c0 <__assert_fail@plt+0xbae8>
   1d260:	ldr	r0, [fp, #8]
   1d264:	sub	r0, r0, #1
   1d268:	mvn	r1, #0
   1d26c:	cmp	r1, r0
   1d270:	blt	1d2ac <__assert_fail@plt+0xbad4>
   1d274:	b	1d2c0 <__assert_fail@plt+0xbae8>
   1d278:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d27c:	movw	r1, #0
   1d280:	sdiv	r0, r1, r0
   1d284:	ldr	r1, [fp, #8]
   1d288:	cmp	r0, r1
   1d28c:	blt	1d2ac <__assert_fail@plt+0xbad4>
   1d290:	b	1d2c0 <__assert_fail@plt+0xbae8>
   1d294:	ldr	r0, [fp, #8]
   1d298:	mvn	r1, #0
   1d29c:	udiv	r0, r1, r0
   1d2a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d2a4:	cmp	r0, r1
   1d2a8:	bcs	1d2c0 <__assert_fail@plt+0xbae8>
   1d2ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2b0:	ldr	r1, [fp, #8]
   1d2b4:	mul	r0, r0, r1
   1d2b8:	str	r0, [fp, #-28]	; 0xffffffe4
   1d2bc:	b	1d774 <__assert_fail@plt+0xbf9c>
   1d2c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2c4:	ldr	r1, [fp, #8]
   1d2c8:	mul	r0, r0, r1
   1d2cc:	str	r0, [fp, #-28]	; 0xffffffe4
   1d2d0:	b	1d780 <__assert_fail@plt+0xbfa8>
   1d2d4:	b	1d2d8 <__assert_fail@plt+0xbb00>
   1d2d8:	ldr	r0, [fp, #8]
   1d2dc:	cmp	r0, #0
   1d2e0:	bge	1d450 <__assert_fail@plt+0xbc78>
   1d2e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2e8:	cmp	r0, #0
   1d2ec:	bge	1d3c8 <__assert_fail@plt+0xbbf0>
   1d2f0:	b	1d2f4 <__assert_fail@plt+0xbb1c>
   1d2f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2f8:	ldr	r1, [fp, #8]
   1d2fc:	asr	r3, r1, #31
   1d300:	mvn	r2, #0
   1d304:	mvn	ip, #-2147483648	; 0x80000000
   1d308:	str	r0, [fp, #-68]	; 0xffffffbc
   1d30c:	mov	r0, r2
   1d310:	str	r1, [fp, #-72]	; 0xffffffb8
   1d314:	mov	r1, ip
   1d318:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1d31c:	bl	22154 <__assert_fail@plt+0x1097c>
   1d320:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1d324:	subs	r0, r2, r0
   1d328:	rscs	r1, r1, r2, asr #31
   1d32c:	blt	1d518 <__assert_fail@plt+0xbd40>
   1d330:	b	1d52c <__assert_fail@plt+0xbd54>
   1d334:	b	1d338 <__assert_fail@plt+0xbb60>
   1d338:	ldr	r0, [pc, #212]	; 1d414 <__assert_fail@plt+0xbc3c>
   1d33c:	ldr	r1, [fp, #8]
   1d340:	cmp	r1, r0
   1d344:	blt	1d35c <__assert_fail@plt+0xbb84>
   1d348:	b	1d374 <__assert_fail@plt+0xbb9c>
   1d34c:	ldr	r0, [fp, #8]
   1d350:	movw	r1, #0
   1d354:	cmp	r1, r0
   1d358:	bge	1d374 <__assert_fail@plt+0xbb9c>
   1d35c:	mov	r0, #0
   1d360:	mvn	r1, #0
   1d364:	str	r1, [fp, #-76]	; 0xffffffb4
   1d368:	str	r0, [fp, #-80]	; 0xffffffb0
   1d36c:	b	1d3a8 <__assert_fail@plt+0xbbd0>
   1d370:	svcvc	0x00ffffff
   1d374:	ldr	r0, [fp, #8]
   1d378:	rsb	r0, r0, #0
   1d37c:	asr	r3, r0, #31
   1d380:	mvn	r1, #0
   1d384:	mvn	r2, #-2147483648	; 0x80000000
   1d388:	str	r0, [fp, #-84]	; 0xffffffac
   1d38c:	mov	r0, r1
   1d390:	mov	r1, r2
   1d394:	ldr	r2, [fp, #-84]	; 0xffffffac
   1d398:	bl	22154 <__assert_fail@plt+0x1097c>
   1d39c:	str	r0, [fp, #-76]	; 0xffffffb4
   1d3a0:	str	r1, [fp, #-80]	; 0xffffffb0
   1d3a4:	b	1d3a8 <__assert_fail@plt+0xbbd0>
   1d3a8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d3ac:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1d3b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d3b4:	mvn	r2, r2
   1d3b8:	subs	r1, r2, r1
   1d3bc:	rscs	r0, r0, r2, asr #31
   1d3c0:	bge	1d518 <__assert_fail@plt+0xbd40>
   1d3c4:	b	1d52c <__assert_fail@plt+0xbd54>
   1d3c8:	ldr	r0, [fp, #8]
   1d3cc:	cmn	r0, #1
   1d3d0:	bne	1d418 <__assert_fail@plt+0xbc40>
   1d3d4:	b	1d3d8 <__assert_fail@plt+0xbc00>
   1d3d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d3dc:	mov	r1, #-2147483648	; 0x80000000
   1d3e0:	add	r1, r1, r0, asr #31
   1d3e4:	rsbs	r0, r0, #0
   1d3e8:	rscs	r1, r1, #0
   1d3ec:	blt	1d518 <__assert_fail@plt+0xbd40>
   1d3f0:	b	1d52c <__assert_fail@plt+0xbd54>
   1d3f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d3f8:	movw	r1, #0
   1d3fc:	cmp	r1, r0
   1d400:	bge	1d52c <__assert_fail@plt+0xbd54>
   1d404:	mov	r0, #0
   1d408:	cmp	r0, #0
   1d40c:	bne	1d518 <__assert_fail@plt+0xbd40>
   1d410:	b	1d52c <__assert_fail@plt+0xbd54>
   1d414:	andhi	r0, r0, r1
   1d418:	ldr	r0, [fp, #8]
   1d41c:	asr	r3, r0, #31
   1d420:	mov	r1, #0
   1d424:	mov	r2, #-2147483648	; 0x80000000
   1d428:	str	r0, [fp, #-88]	; 0xffffffa8
   1d42c:	mov	r0, r1
   1d430:	mov	r1, r2
   1d434:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d438:	bl	22154 <__assert_fail@plt+0x1097c>
   1d43c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d440:	subs	r0, r0, r2
   1d444:	sbcs	r1, r1, r2, asr #31
   1d448:	blt	1d518 <__assert_fail@plt+0xbd40>
   1d44c:	b	1d52c <__assert_fail@plt+0xbd54>
   1d450:	ldr	r0, [fp, #8]
   1d454:	cmp	r0, #0
   1d458:	bne	1d460 <__assert_fail@plt+0xbc88>
   1d45c:	b	1d52c <__assert_fail@plt+0xbd54>
   1d460:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d464:	cmp	r0, #0
   1d468:	bge	1d4e0 <__assert_fail@plt+0xbd08>
   1d46c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d470:	cmn	r0, #1
   1d474:	bne	1d4a8 <__assert_fail@plt+0xbcd0>
   1d478:	b	1d47c <__assert_fail@plt+0xbca4>
   1d47c:	ldr	r0, [fp, #8]
   1d480:	mov	r1, #-2147483648	; 0x80000000
   1d484:	add	r1, r1, r0, asr #31
   1d488:	rsbs	r0, r0, #0
   1d48c:	rscs	r1, r1, #0
   1d490:	blt	1d518 <__assert_fail@plt+0xbd40>
   1d494:	b	1d52c <__assert_fail@plt+0xbd54>
   1d498:	mov	r0, #0
   1d49c:	cmp	r0, #0
   1d4a0:	bne	1d518 <__assert_fail@plt+0xbd40>
   1d4a4:	b	1d52c <__assert_fail@plt+0xbd54>
   1d4a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d4ac:	asr	r3, r0, #31
   1d4b0:	mov	r1, #0
   1d4b4:	mov	r2, #-2147483648	; 0x80000000
   1d4b8:	str	r0, [fp, #-92]	; 0xffffffa4
   1d4bc:	mov	r0, r1
   1d4c0:	mov	r1, r2
   1d4c4:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1d4c8:	bl	22154 <__assert_fail@plt+0x1097c>
   1d4cc:	ldr	r2, [fp, #8]
   1d4d0:	subs	r0, r0, r2
   1d4d4:	sbcs	r1, r1, r2, asr #31
   1d4d8:	blt	1d518 <__assert_fail@plt+0xbd40>
   1d4dc:	b	1d52c <__assert_fail@plt+0xbd54>
   1d4e0:	ldr	r0, [fp, #8]
   1d4e4:	asr	r3, r0, #31
   1d4e8:	mvn	r1, #0
   1d4ec:	mvn	r2, #-2147483648	; 0x80000000
   1d4f0:	str	r0, [fp, #-96]	; 0xffffffa0
   1d4f4:	mov	r0, r1
   1d4f8:	mov	r1, r2
   1d4fc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1d500:	bl	22154 <__assert_fail@plt+0x1097c>
   1d504:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d508:	subs	r0, r0, r2
   1d50c:	sbcs	r1, r1, r2, asr #31
   1d510:	bge	1d52c <__assert_fail@plt+0xbd54>
   1d514:	b	1d518 <__assert_fail@plt+0xbd40>
   1d518:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d51c:	ldr	r1, [fp, #8]
   1d520:	mul	r0, r0, r1
   1d524:	str	r0, [fp, #-28]	; 0xffffffe4
   1d528:	b	1d774 <__assert_fail@plt+0xbf9c>
   1d52c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d530:	ldr	r1, [fp, #8]
   1d534:	mul	r0, r0, r1
   1d538:	str	r0, [fp, #-28]	; 0xffffffe4
   1d53c:	b	1d780 <__assert_fail@plt+0xbfa8>
   1d540:	ldr	r0, [fp, #8]
   1d544:	cmp	r0, #0
   1d548:	bge	1d698 <__assert_fail@plt+0xbec0>
   1d54c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d550:	cmp	r0, #0
   1d554:	bge	1d620 <__assert_fail@plt+0xbe48>
   1d558:	b	1d598 <__assert_fail@plt+0xbdc0>
   1d55c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d560:	ldr	r1, [fp, #8]
   1d564:	asr	r3, r1, #31
   1d568:	mvn	r2, #0
   1d56c:	str	r0, [fp, #-100]	; 0xffffff9c
   1d570:	mov	r0, r2
   1d574:	str	r1, [fp, #-104]	; 0xffffff98
   1d578:	mov	r1, r2
   1d57c:	ldr	r2, [fp, #-104]	; 0xffffff98
   1d580:	bl	22228 <__assert_fail@plt+0x10a50>
   1d584:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1d588:	subs	r0, r2, r0
   1d58c:	rscs	r1, r1, r2, asr #31
   1d590:	bcc	1d74c <__assert_fail@plt+0xbf74>
   1d594:	b	1d760 <__assert_fail@plt+0xbf88>
   1d598:	b	1d59c <__assert_fail@plt+0xbdc4>
   1d59c:	ldr	r0, [pc, #-400]	; 1d414 <__assert_fail@plt+0xbc3c>
   1d5a0:	ldr	r1, [fp, #8]
   1d5a4:	cmp	r1, r0
   1d5a8:	blt	1d5c0 <__assert_fail@plt+0xbde8>
   1d5ac:	b	1d5d4 <__assert_fail@plt+0xbdfc>
   1d5b0:	ldr	r0, [fp, #8]
   1d5b4:	movw	r1, #0
   1d5b8:	cmp	r1, r0
   1d5bc:	bge	1d5d4 <__assert_fail@plt+0xbdfc>
   1d5c0:	mov	r0, #1
   1d5c4:	mvn	r1, #0
   1d5c8:	str	r1, [sp, #108]	; 0x6c
   1d5cc:	str	r0, [sp, #104]	; 0x68
   1d5d0:	b	1d600 <__assert_fail@plt+0xbe28>
   1d5d4:	ldr	r0, [fp, #8]
   1d5d8:	rsb	r0, r0, #0
   1d5dc:	asr	r3, r0, #31
   1d5e0:	mvn	r1, #0
   1d5e4:	str	r0, [sp, #100]	; 0x64
   1d5e8:	mov	r0, r1
   1d5ec:	ldr	r2, [sp, #100]	; 0x64
   1d5f0:	bl	22228 <__assert_fail@plt+0x10a50>
   1d5f4:	str	r0, [sp, #108]	; 0x6c
   1d5f8:	str	r1, [sp, #104]	; 0x68
   1d5fc:	b	1d600 <__assert_fail@plt+0xbe28>
   1d600:	ldr	r0, [sp, #104]	; 0x68
   1d604:	ldr	r1, [sp, #108]	; 0x6c
   1d608:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d60c:	mvn	r2, r2
   1d610:	subs	r1, r2, r1
   1d614:	rscs	r0, r0, r2, asr #31
   1d618:	bcs	1d74c <__assert_fail@plt+0xbf74>
   1d61c:	b	1d760 <__assert_fail@plt+0xbf88>
   1d620:	b	1d624 <__assert_fail@plt+0xbe4c>
   1d624:	b	1d67c <__assert_fail@plt+0xbea4>
   1d628:	b	1d67c <__assert_fail@plt+0xbea4>
   1d62c:	ldr	r0, [fp, #8]
   1d630:	cmn	r0, #1
   1d634:	bne	1d67c <__assert_fail@plt+0xbea4>
   1d638:	b	1d63c <__assert_fail@plt+0xbe64>
   1d63c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d640:	add	r0, r0, #0
   1d644:	movw	r1, #0
   1d648:	cmp	r1, r0
   1d64c:	blt	1d74c <__assert_fail@plt+0xbf74>
   1d650:	b	1d760 <__assert_fail@plt+0xbf88>
   1d654:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d658:	movw	r1, #0
   1d65c:	cmp	r1, r0
   1d660:	bge	1d760 <__assert_fail@plt+0xbf88>
   1d664:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d668:	sub	r0, r0, #1
   1d66c:	mvn	r1, #0
   1d670:	cmp	r1, r0
   1d674:	blt	1d74c <__assert_fail@plt+0xbf74>
   1d678:	b	1d760 <__assert_fail@plt+0xbf88>
   1d67c:	ldr	r0, [fp, #8]
   1d680:	movw	r1, #0
   1d684:	sdiv	r0, r1, r0
   1d688:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d68c:	cmp	r0, r1
   1d690:	blt	1d74c <__assert_fail@plt+0xbf74>
   1d694:	b	1d760 <__assert_fail@plt+0xbf88>
   1d698:	ldr	r0, [fp, #8]
   1d69c:	cmp	r0, #0
   1d6a0:	bne	1d6a8 <__assert_fail@plt+0xbed0>
   1d6a4:	b	1d760 <__assert_fail@plt+0xbf88>
   1d6a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d6ac:	cmp	r0, #0
   1d6b0:	bge	1d71c <__assert_fail@plt+0xbf44>
   1d6b4:	b	1d6b8 <__assert_fail@plt+0xbee0>
   1d6b8:	b	1d700 <__assert_fail@plt+0xbf28>
   1d6bc:	b	1d700 <__assert_fail@plt+0xbf28>
   1d6c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d6c4:	cmn	r0, #1
   1d6c8:	bne	1d700 <__assert_fail@plt+0xbf28>
   1d6cc:	b	1d6d0 <__assert_fail@plt+0xbef8>
   1d6d0:	ldr	r0, [fp, #8]
   1d6d4:	add	r0, r0, #0
   1d6d8:	movw	r1, #0
   1d6dc:	cmp	r1, r0
   1d6e0:	blt	1d74c <__assert_fail@plt+0xbf74>
   1d6e4:	b	1d760 <__assert_fail@plt+0xbf88>
   1d6e8:	ldr	r0, [fp, #8]
   1d6ec:	sub	r0, r0, #1
   1d6f0:	mvn	r1, #0
   1d6f4:	cmp	r1, r0
   1d6f8:	blt	1d74c <__assert_fail@plt+0xbf74>
   1d6fc:	b	1d760 <__assert_fail@plt+0xbf88>
   1d700:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d704:	movw	r1, #0
   1d708:	sdiv	r0, r1, r0
   1d70c:	ldr	r1, [fp, #8]
   1d710:	cmp	r0, r1
   1d714:	blt	1d74c <__assert_fail@plt+0xbf74>
   1d718:	b	1d760 <__assert_fail@plt+0xbf88>
   1d71c:	ldr	r0, [fp, #8]
   1d720:	asr	r3, r0, #31
   1d724:	mvn	r1, #0
   1d728:	str	r0, [sp, #96]	; 0x60
   1d72c:	mov	r0, r1
   1d730:	ldr	r2, [sp, #96]	; 0x60
   1d734:	bl	22228 <__assert_fail@plt+0x10a50>
   1d738:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d73c:	subs	r0, r0, r2
   1d740:	sbcs	r1, r1, r2, asr #31
   1d744:	bcs	1d760 <__assert_fail@plt+0xbf88>
   1d748:	b	1d74c <__assert_fail@plt+0xbf74>
   1d74c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d750:	ldr	r1, [fp, #8]
   1d754:	mul	r0, r0, r1
   1d758:	str	r0, [fp, #-28]	; 0xffffffe4
   1d75c:	b	1d774 <__assert_fail@plt+0xbf9c>
   1d760:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d764:	ldr	r1, [fp, #8]
   1d768:	mul	r0, r0, r1
   1d76c:	str	r0, [fp, #-28]	; 0xffffffe4
   1d770:	b	1d780 <__assert_fail@plt+0xbfa8>
   1d774:	ldr	r0, [pc, #-1036]	; 1d370 <__assert_fail@plt+0xbb98>
   1d778:	str	r0, [sp, #92]	; 0x5c
   1d77c:	b	1d7a0 <__assert_fail@plt+0xbfc8>
   1d780:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d784:	cmp	r0, #64	; 0x40
   1d788:	movw	r0, #0
   1d78c:	movlt	r0, #1
   1d790:	tst	r0, #1
   1d794:	movw	r0, #64	; 0x40
   1d798:	moveq	r0, #0
   1d79c:	str	r0, [sp, #92]	; 0x5c
   1d7a0:	ldr	r0, [sp, #92]	; 0x5c
   1d7a4:	str	r0, [fp, #-32]	; 0xffffffe0
   1d7a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d7ac:	cmp	r0, #0
   1d7b0:	beq	1d7e0 <__assert_fail@plt+0xc008>
   1d7b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d7b8:	ldr	r1, [fp, #8]
   1d7bc:	sdiv	r0, r0, r1
   1d7c0:	str	r0, [fp, #-24]	; 0xffffffe8
   1d7c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d7c8:	mov	r1, r0
   1d7cc:	ldr	r2, [fp, #8]
   1d7d0:	sdiv	r3, r0, r2
   1d7d4:	mls	r0, r3, r2, r0
   1d7d8:	sub	r0, r1, r0
   1d7dc:	str	r0, [fp, #-28]	; 0xffffffe4
   1d7e0:	ldr	r0, [fp, #-4]
   1d7e4:	movw	r1, #0
   1d7e8:	cmp	r0, r1
   1d7ec:	bne	1d7fc <__assert_fail@plt+0xc024>
   1d7f0:	ldr	r0, [fp, #-8]
   1d7f4:	movw	r1, #0
   1d7f8:	str	r1, [r0]
   1d7fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d800:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d804:	sub	r0, r0, r1
   1d808:	ldr	r1, [fp, #-12]
   1d80c:	cmp	r0, r1
   1d810:	bge	1ebfc <__assert_fail@plt+0xd424>
   1d814:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d818:	ldr	r1, [fp, #-12]
   1d81c:	add	r1, r0, r1
   1d820:	mov	r2, #1
   1d824:	cmp	r1, r0
   1d828:	movwvc	r2, #0
   1d82c:	str	r1, [fp, #-24]	; 0xffffffe8
   1d830:	tst	r2, #1
   1d834:	bne	1ebf8 <__assert_fail@plt+0xd420>
   1d838:	ldr	r0, [fp, #-16]
   1d83c:	movw	r1, #0
   1d840:	cmp	r1, r0
   1d844:	bgt	1d858 <__assert_fail@plt+0xc080>
   1d848:	ldr	r0, [fp, #-16]
   1d84c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d850:	cmp	r0, r1
   1d854:	blt	1ebf8 <__assert_fail@plt+0xd420>
   1d858:	b	1dc34 <__assert_fail@plt+0xc45c>
   1d85c:			; <UNDEFINED> instruction: 0xffff8000
   1d860:	b	1d864 <__assert_fail@plt+0xc08c>
   1d864:	ldr	r0, [fp, #8]
   1d868:	cmp	r0, #0
   1d86c:	bge	1d980 <__assert_fail@plt+0xc1a8>
   1d870:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d874:	cmp	r0, #0
   1d878:	bge	1d904 <__assert_fail@plt+0xc12c>
   1d87c:	b	1d880 <__assert_fail@plt+0xc0a8>
   1d880:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d884:	ldr	r1, [fp, #8]
   1d888:	movw	r2, #127	; 0x7f
   1d88c:	sdiv	r1, r2, r1
   1d890:	cmp	r0, r1
   1d894:	blt	1da20 <__assert_fail@plt+0xc248>
   1d898:	b	1da38 <__assert_fail@plt+0xc260>
   1d89c:	b	1d8a0 <__assert_fail@plt+0xc0c8>
   1d8a0:	ldr	r0, [pc, #-1172]	; 1d414 <__assert_fail@plt+0xbc3c>
   1d8a4:	ldr	r1, [fp, #8]
   1d8a8:	cmp	r1, r0
   1d8ac:	blt	1d8c4 <__assert_fail@plt+0xc0ec>
   1d8b0:	b	1d8d0 <__assert_fail@plt+0xc0f8>
   1d8b4:	ldr	r0, [fp, #8]
   1d8b8:	movw	r1, #0
   1d8bc:	cmp	r1, r0
   1d8c0:	bge	1d8d0 <__assert_fail@plt+0xc0f8>
   1d8c4:	movw	r0, #0
   1d8c8:	str	r0, [sp, #88]	; 0x58
   1d8cc:	b	1d8e8 <__assert_fail@plt+0xc110>
   1d8d0:	ldr	r0, [fp, #8]
   1d8d4:	movw	r1, #0
   1d8d8:	sub	r0, r1, r0
   1d8dc:	movw	r1, #127	; 0x7f
   1d8e0:	sdiv	r0, r1, r0
   1d8e4:	str	r0, [sp, #88]	; 0x58
   1d8e8:	ldr	r0, [sp, #88]	; 0x58
   1d8ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d8f0:	mvn	r2, #0
   1d8f4:	sub	r1, r2, r1
   1d8f8:	cmp	r0, r1
   1d8fc:	ble	1da20 <__assert_fail@plt+0xc248>
   1d900:	b	1da38 <__assert_fail@plt+0xc260>
   1d904:	b	1d908 <__assert_fail@plt+0xc130>
   1d908:	b	1d964 <__assert_fail@plt+0xc18c>
   1d90c:	b	1d964 <__assert_fail@plt+0xc18c>
   1d910:	ldr	r0, [fp, #8]
   1d914:	cmn	r0, #1
   1d918:	bne	1d964 <__assert_fail@plt+0xc18c>
   1d91c:	b	1d920 <__assert_fail@plt+0xc148>
   1d920:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d924:	mvn	r1, #127	; 0x7f
   1d928:	add	r0, r0, r1
   1d92c:	movw	r1, #0
   1d930:	cmp	r1, r0
   1d934:	blt	1da20 <__assert_fail@plt+0xc248>
   1d938:	b	1da38 <__assert_fail@plt+0xc260>
   1d93c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d940:	movw	r1, #0
   1d944:	cmp	r1, r0
   1d948:	bge	1da38 <__assert_fail@plt+0xc260>
   1d94c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d950:	sub	r0, r0, #1
   1d954:	movw	r1, #127	; 0x7f
   1d958:	cmp	r1, r0
   1d95c:	blt	1da20 <__assert_fail@plt+0xc248>
   1d960:	b	1da38 <__assert_fail@plt+0xc260>
   1d964:	ldr	r0, [fp, #8]
   1d968:	mvn	r1, #127	; 0x7f
   1d96c:	sdiv	r0, r1, r0
   1d970:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d974:	cmp	r0, r1
   1d978:	blt	1da20 <__assert_fail@plt+0xc248>
   1d97c:	b	1da38 <__assert_fail@plt+0xc260>
   1d980:	ldr	r0, [fp, #8]
   1d984:	cmp	r0, #0
   1d988:	bne	1d990 <__assert_fail@plt+0xc1b8>
   1d98c:	b	1da38 <__assert_fail@plt+0xc260>
   1d990:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d994:	cmp	r0, #0
   1d998:	bge	1da08 <__assert_fail@plt+0xc230>
   1d99c:	b	1d9a0 <__assert_fail@plt+0xc1c8>
   1d9a0:	b	1d9ec <__assert_fail@plt+0xc214>
   1d9a4:	b	1d9ec <__assert_fail@plt+0xc214>
   1d9a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d9ac:	cmn	r0, #1
   1d9b0:	bne	1d9ec <__assert_fail@plt+0xc214>
   1d9b4:	b	1d9b8 <__assert_fail@plt+0xc1e0>
   1d9b8:	ldr	r0, [fp, #8]
   1d9bc:	mvn	r1, #127	; 0x7f
   1d9c0:	add	r0, r0, r1
   1d9c4:	movw	r1, #0
   1d9c8:	cmp	r1, r0
   1d9cc:	blt	1da20 <__assert_fail@plt+0xc248>
   1d9d0:	b	1da38 <__assert_fail@plt+0xc260>
   1d9d4:	ldr	r0, [fp, #8]
   1d9d8:	sub	r0, r0, #1
   1d9dc:	movw	r1, #127	; 0x7f
   1d9e0:	cmp	r1, r0
   1d9e4:	blt	1da20 <__assert_fail@plt+0xc248>
   1d9e8:	b	1da38 <__assert_fail@plt+0xc260>
   1d9ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d9f0:	mvn	r1, #127	; 0x7f
   1d9f4:	sdiv	r0, r1, r0
   1d9f8:	ldr	r1, [fp, #8]
   1d9fc:	cmp	r0, r1
   1da00:	blt	1da20 <__assert_fail@plt+0xc248>
   1da04:	b	1da38 <__assert_fail@plt+0xc260>
   1da08:	ldr	r0, [fp, #8]
   1da0c:	movw	r1, #127	; 0x7f
   1da10:	sdiv	r0, r1, r0
   1da14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1da18:	cmp	r0, r1
   1da1c:	bge	1da38 <__assert_fail@plt+0xc260>
   1da20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da24:	ldr	r1, [fp, #8]
   1da28:	mul	r0, r0, r1
   1da2c:	sxtb	r0, r0
   1da30:	str	r0, [fp, #-28]	; 0xffffffe4
   1da34:	b	1ebf8 <__assert_fail@plt+0xd420>
   1da38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da3c:	ldr	r1, [fp, #8]
   1da40:	mul	r0, r0, r1
   1da44:	sxtb	r0, r0
   1da48:	str	r0, [fp, #-28]	; 0xffffffe4
   1da4c:	b	1ebfc <__assert_fail@plt+0xd424>
   1da50:	ldr	r0, [fp, #8]
   1da54:	cmp	r0, #0
   1da58:	bge	1db68 <__assert_fail@plt+0xc390>
   1da5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da60:	cmp	r0, #0
   1da64:	bge	1daf0 <__assert_fail@plt+0xc318>
   1da68:	b	1da6c <__assert_fail@plt+0xc294>
   1da6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da70:	ldr	r1, [fp, #8]
   1da74:	movw	r2, #255	; 0xff
   1da78:	sdiv	r1, r2, r1
   1da7c:	cmp	r0, r1
   1da80:	blt	1dc04 <__assert_fail@plt+0xc42c>
   1da84:	b	1dc1c <__assert_fail@plt+0xc444>
   1da88:	b	1da8c <__assert_fail@plt+0xc2b4>
   1da8c:	ldr	r0, [pc, #-1664]	; 1d414 <__assert_fail@plt+0xbc3c>
   1da90:	ldr	r1, [fp, #8]
   1da94:	cmp	r1, r0
   1da98:	blt	1dab0 <__assert_fail@plt+0xc2d8>
   1da9c:	b	1dabc <__assert_fail@plt+0xc2e4>
   1daa0:	ldr	r0, [fp, #8]
   1daa4:	movw	r1, #0
   1daa8:	cmp	r1, r0
   1daac:	bge	1dabc <__assert_fail@plt+0xc2e4>
   1dab0:	movw	r0, #0
   1dab4:	str	r0, [sp, #84]	; 0x54
   1dab8:	b	1dad4 <__assert_fail@plt+0xc2fc>
   1dabc:	ldr	r0, [fp, #8]
   1dac0:	movw	r1, #0
   1dac4:	sub	r0, r1, r0
   1dac8:	movw	r1, #255	; 0xff
   1dacc:	sdiv	r0, r1, r0
   1dad0:	str	r0, [sp, #84]	; 0x54
   1dad4:	ldr	r0, [sp, #84]	; 0x54
   1dad8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dadc:	mvn	r2, #0
   1dae0:	sub	r1, r2, r1
   1dae4:	cmp	r0, r1
   1dae8:	ble	1dc04 <__assert_fail@plt+0xc42c>
   1daec:	b	1dc1c <__assert_fail@plt+0xc444>
   1daf0:	b	1daf4 <__assert_fail@plt+0xc31c>
   1daf4:	b	1db4c <__assert_fail@plt+0xc374>
   1daf8:	b	1db4c <__assert_fail@plt+0xc374>
   1dafc:	ldr	r0, [fp, #8]
   1db00:	cmn	r0, #1
   1db04:	bne	1db4c <__assert_fail@plt+0xc374>
   1db08:	b	1db0c <__assert_fail@plt+0xc334>
   1db0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db10:	add	r0, r0, #0
   1db14:	movw	r1, #0
   1db18:	cmp	r1, r0
   1db1c:	blt	1dc04 <__assert_fail@plt+0xc42c>
   1db20:	b	1dc1c <__assert_fail@plt+0xc444>
   1db24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db28:	movw	r1, #0
   1db2c:	cmp	r1, r0
   1db30:	bge	1dc1c <__assert_fail@plt+0xc444>
   1db34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db38:	sub	r0, r0, #1
   1db3c:	mvn	r1, #0
   1db40:	cmp	r1, r0
   1db44:	blt	1dc04 <__assert_fail@plt+0xc42c>
   1db48:	b	1dc1c <__assert_fail@plt+0xc444>
   1db4c:	ldr	r0, [fp, #8]
   1db50:	movw	r1, #0
   1db54:	sdiv	r0, r1, r0
   1db58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1db5c:	cmp	r0, r1
   1db60:	blt	1dc04 <__assert_fail@plt+0xc42c>
   1db64:	b	1dc1c <__assert_fail@plt+0xc444>
   1db68:	ldr	r0, [fp, #8]
   1db6c:	cmp	r0, #0
   1db70:	bne	1db78 <__assert_fail@plt+0xc3a0>
   1db74:	b	1dc1c <__assert_fail@plt+0xc444>
   1db78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db7c:	cmp	r0, #0
   1db80:	bge	1dbec <__assert_fail@plt+0xc414>
   1db84:	b	1db88 <__assert_fail@plt+0xc3b0>
   1db88:	b	1dbd0 <__assert_fail@plt+0xc3f8>
   1db8c:	b	1dbd0 <__assert_fail@plt+0xc3f8>
   1db90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db94:	cmn	r0, #1
   1db98:	bne	1dbd0 <__assert_fail@plt+0xc3f8>
   1db9c:	b	1dba0 <__assert_fail@plt+0xc3c8>
   1dba0:	ldr	r0, [fp, #8]
   1dba4:	add	r0, r0, #0
   1dba8:	movw	r1, #0
   1dbac:	cmp	r1, r0
   1dbb0:	blt	1dc04 <__assert_fail@plt+0xc42c>
   1dbb4:	b	1dc1c <__assert_fail@plt+0xc444>
   1dbb8:	ldr	r0, [fp, #8]
   1dbbc:	sub	r0, r0, #1
   1dbc0:	mvn	r1, #0
   1dbc4:	cmp	r1, r0
   1dbc8:	blt	1dc04 <__assert_fail@plt+0xc42c>
   1dbcc:	b	1dc1c <__assert_fail@plt+0xc444>
   1dbd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dbd4:	movw	r1, #0
   1dbd8:	sdiv	r0, r1, r0
   1dbdc:	ldr	r1, [fp, #8]
   1dbe0:	cmp	r0, r1
   1dbe4:	blt	1dc04 <__assert_fail@plt+0xc42c>
   1dbe8:	b	1dc1c <__assert_fail@plt+0xc444>
   1dbec:	ldr	r0, [fp, #8]
   1dbf0:	movw	r1, #255	; 0xff
   1dbf4:	sdiv	r0, r1, r0
   1dbf8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dbfc:	cmp	r0, r1
   1dc00:	bge	1dc1c <__assert_fail@plt+0xc444>
   1dc04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc08:	ldr	r1, [fp, #8]
   1dc0c:	mul	r0, r0, r1
   1dc10:	and	r0, r0, #255	; 0xff
   1dc14:	str	r0, [fp, #-28]	; 0xffffffe4
   1dc18:	b	1ebf8 <__assert_fail@plt+0xd420>
   1dc1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc20:	ldr	r1, [fp, #8]
   1dc24:	mul	r0, r0, r1
   1dc28:	and	r0, r0, #255	; 0xff
   1dc2c:	str	r0, [fp, #-28]	; 0xffffffe4
   1dc30:	b	1ebfc <__assert_fail@plt+0xd424>
   1dc34:	b	1e010 <__assert_fail@plt+0xc838>
   1dc38:	b	1dc3c <__assert_fail@plt+0xc464>
   1dc3c:	ldr	r0, [fp, #8]
   1dc40:	cmp	r0, #0
   1dc44:	bge	1dd5c <__assert_fail@plt+0xc584>
   1dc48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc4c:	cmp	r0, #0
   1dc50:	bge	1dce0 <__assert_fail@plt+0xc508>
   1dc54:	b	1dc58 <__assert_fail@plt+0xc480>
   1dc58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc5c:	ldr	r1, [fp, #8]
   1dc60:	movw	r2, #32767	; 0x7fff
   1dc64:	sdiv	r1, r2, r1
   1dc68:	cmp	r0, r1
   1dc6c:	blt	1ddfc <__assert_fail@plt+0xc624>
   1dc70:	b	1de14 <__assert_fail@plt+0xc63c>
   1dc74:	andhi	r0, r0, r0
   1dc78:	b	1dc7c <__assert_fail@plt+0xc4a4>
   1dc7c:	ldr	r0, [pc, #4004]	; 1ec28 <__assert_fail@plt+0xd450>
   1dc80:	ldr	r1, [fp, #8]
   1dc84:	cmp	r1, r0
   1dc88:	blt	1dca0 <__assert_fail@plt+0xc4c8>
   1dc8c:	b	1dcac <__assert_fail@plt+0xc4d4>
   1dc90:	ldr	r0, [fp, #8]
   1dc94:	movw	r1, #0
   1dc98:	cmp	r1, r0
   1dc9c:	bge	1dcac <__assert_fail@plt+0xc4d4>
   1dca0:	movw	r0, #0
   1dca4:	str	r0, [sp, #80]	; 0x50
   1dca8:	b	1dcc4 <__assert_fail@plt+0xc4ec>
   1dcac:	ldr	r0, [fp, #8]
   1dcb0:	movw	r1, #0
   1dcb4:	sub	r0, r1, r0
   1dcb8:	movw	r1, #32767	; 0x7fff
   1dcbc:	sdiv	r0, r1, r0
   1dcc0:	str	r0, [sp, #80]	; 0x50
   1dcc4:	ldr	r0, [sp, #80]	; 0x50
   1dcc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dccc:	mvn	r2, #0
   1dcd0:	sub	r1, r2, r1
   1dcd4:	cmp	r0, r1
   1dcd8:	ble	1ddfc <__assert_fail@plt+0xc624>
   1dcdc:	b	1de14 <__assert_fail@plt+0xc63c>
   1dce0:	b	1dce4 <__assert_fail@plt+0xc50c>
   1dce4:	b	1dd40 <__assert_fail@plt+0xc568>
   1dce8:	b	1dd40 <__assert_fail@plt+0xc568>
   1dcec:	ldr	r0, [fp, #8]
   1dcf0:	cmn	r0, #1
   1dcf4:	bne	1dd40 <__assert_fail@plt+0xc568>
   1dcf8:	b	1dcfc <__assert_fail@plt+0xc524>
   1dcfc:	ldr	r0, [pc, #3884]	; 1ec30 <__assert_fail@plt+0xd458>
   1dd00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dd04:	add	r0, r1, r0
   1dd08:	movw	r1, #0
   1dd0c:	cmp	r1, r0
   1dd10:	blt	1ddfc <__assert_fail@plt+0xc624>
   1dd14:	b	1de14 <__assert_fail@plt+0xc63c>
   1dd18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd1c:	movw	r1, #0
   1dd20:	cmp	r1, r0
   1dd24:	bge	1de14 <__assert_fail@plt+0xc63c>
   1dd28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd2c:	sub	r0, r0, #1
   1dd30:	movw	r1, #32767	; 0x7fff
   1dd34:	cmp	r1, r0
   1dd38:	blt	1ddfc <__assert_fail@plt+0xc624>
   1dd3c:	b	1de14 <__assert_fail@plt+0xc63c>
   1dd40:	ldr	r0, [pc, #3816]	; 1ec30 <__assert_fail@plt+0xd458>
   1dd44:	ldr	r1, [fp, #8]
   1dd48:	sdiv	r0, r0, r1
   1dd4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dd50:	cmp	r0, r1
   1dd54:	blt	1ddfc <__assert_fail@plt+0xc624>
   1dd58:	b	1de14 <__assert_fail@plt+0xc63c>
   1dd5c:	ldr	r0, [fp, #8]
   1dd60:	cmp	r0, #0
   1dd64:	bne	1dd6c <__assert_fail@plt+0xc594>
   1dd68:	b	1de14 <__assert_fail@plt+0xc63c>
   1dd6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd70:	cmp	r0, #0
   1dd74:	bge	1dde4 <__assert_fail@plt+0xc60c>
   1dd78:	b	1dd7c <__assert_fail@plt+0xc5a4>
   1dd7c:	b	1ddc8 <__assert_fail@plt+0xc5f0>
   1dd80:	b	1ddc8 <__assert_fail@plt+0xc5f0>
   1dd84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd88:	cmn	r0, #1
   1dd8c:	bne	1ddc8 <__assert_fail@plt+0xc5f0>
   1dd90:	b	1dd94 <__assert_fail@plt+0xc5bc>
   1dd94:	ldr	r0, [pc, #3732]	; 1ec30 <__assert_fail@plt+0xd458>
   1dd98:	ldr	r1, [fp, #8]
   1dd9c:	add	r0, r1, r0
   1dda0:	movw	r1, #0
   1dda4:	cmp	r1, r0
   1dda8:	blt	1ddfc <__assert_fail@plt+0xc624>
   1ddac:	b	1de14 <__assert_fail@plt+0xc63c>
   1ddb0:	ldr	r0, [fp, #8]
   1ddb4:	sub	r0, r0, #1
   1ddb8:	movw	r1, #32767	; 0x7fff
   1ddbc:	cmp	r1, r0
   1ddc0:	blt	1ddfc <__assert_fail@plt+0xc624>
   1ddc4:	b	1de14 <__assert_fail@plt+0xc63c>
   1ddc8:	ldr	r0, [pc, #3680]	; 1ec30 <__assert_fail@plt+0xd458>
   1ddcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ddd0:	sdiv	r0, r0, r1
   1ddd4:	ldr	r1, [fp, #8]
   1ddd8:	cmp	r0, r1
   1dddc:	blt	1ddfc <__assert_fail@plt+0xc624>
   1dde0:	b	1de14 <__assert_fail@plt+0xc63c>
   1dde4:	ldr	r0, [fp, #8]
   1dde8:	movw	r1, #32767	; 0x7fff
   1ddec:	sdiv	r0, r1, r0
   1ddf0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ddf4:	cmp	r0, r1
   1ddf8:	bge	1de14 <__assert_fail@plt+0xc63c>
   1ddfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de00:	ldr	r1, [fp, #8]
   1de04:	mul	r0, r0, r1
   1de08:	sxth	r0, r0
   1de0c:	str	r0, [fp, #-28]	; 0xffffffe4
   1de10:	b	1ebf8 <__assert_fail@plt+0xd420>
   1de14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de18:	ldr	r1, [fp, #8]
   1de1c:	mul	r0, r0, r1
   1de20:	sxth	r0, r0
   1de24:	str	r0, [fp, #-28]	; 0xffffffe4
   1de28:	b	1ebfc <__assert_fail@plt+0xd424>
   1de2c:	ldr	r0, [fp, #8]
   1de30:	cmp	r0, #0
   1de34:	bge	1df44 <__assert_fail@plt+0xc76c>
   1de38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de3c:	cmp	r0, #0
   1de40:	bge	1decc <__assert_fail@plt+0xc6f4>
   1de44:	b	1de48 <__assert_fail@plt+0xc670>
   1de48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de4c:	ldr	r1, [fp, #8]
   1de50:	movw	r2, #65535	; 0xffff
   1de54:	sdiv	r1, r2, r1
   1de58:	cmp	r0, r1
   1de5c:	blt	1dfe0 <__assert_fail@plt+0xc808>
   1de60:	b	1dff8 <__assert_fail@plt+0xc820>
   1de64:	b	1de68 <__assert_fail@plt+0xc690>
   1de68:	ldr	r0, [pc, #3512]	; 1ec28 <__assert_fail@plt+0xd450>
   1de6c:	ldr	r1, [fp, #8]
   1de70:	cmp	r1, r0
   1de74:	blt	1de8c <__assert_fail@plt+0xc6b4>
   1de78:	b	1de98 <__assert_fail@plt+0xc6c0>
   1de7c:	ldr	r0, [fp, #8]
   1de80:	movw	r1, #0
   1de84:	cmp	r1, r0
   1de88:	bge	1de98 <__assert_fail@plt+0xc6c0>
   1de8c:	movw	r0, #0
   1de90:	str	r0, [sp, #76]	; 0x4c
   1de94:	b	1deb0 <__assert_fail@plt+0xc6d8>
   1de98:	ldr	r0, [fp, #8]
   1de9c:	movw	r1, #0
   1dea0:	sub	r0, r1, r0
   1dea4:	movw	r1, #65535	; 0xffff
   1dea8:	sdiv	r0, r1, r0
   1deac:	str	r0, [sp, #76]	; 0x4c
   1deb0:	ldr	r0, [sp, #76]	; 0x4c
   1deb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1deb8:	mvn	r2, #0
   1debc:	sub	r1, r2, r1
   1dec0:	cmp	r0, r1
   1dec4:	ble	1dfe0 <__assert_fail@plt+0xc808>
   1dec8:	b	1dff8 <__assert_fail@plt+0xc820>
   1decc:	b	1ded0 <__assert_fail@plt+0xc6f8>
   1ded0:	b	1df28 <__assert_fail@plt+0xc750>
   1ded4:	b	1df28 <__assert_fail@plt+0xc750>
   1ded8:	ldr	r0, [fp, #8]
   1dedc:	cmn	r0, #1
   1dee0:	bne	1df28 <__assert_fail@plt+0xc750>
   1dee4:	b	1dee8 <__assert_fail@plt+0xc710>
   1dee8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1deec:	add	r0, r0, #0
   1def0:	movw	r1, #0
   1def4:	cmp	r1, r0
   1def8:	blt	1dfe0 <__assert_fail@plt+0xc808>
   1defc:	b	1dff8 <__assert_fail@plt+0xc820>
   1df00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1df04:	movw	r1, #0
   1df08:	cmp	r1, r0
   1df0c:	bge	1dff8 <__assert_fail@plt+0xc820>
   1df10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1df14:	sub	r0, r0, #1
   1df18:	mvn	r1, #0
   1df1c:	cmp	r1, r0
   1df20:	blt	1dfe0 <__assert_fail@plt+0xc808>
   1df24:	b	1dff8 <__assert_fail@plt+0xc820>
   1df28:	ldr	r0, [fp, #8]
   1df2c:	movw	r1, #0
   1df30:	sdiv	r0, r1, r0
   1df34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1df38:	cmp	r0, r1
   1df3c:	blt	1dfe0 <__assert_fail@plt+0xc808>
   1df40:	b	1dff8 <__assert_fail@plt+0xc820>
   1df44:	ldr	r0, [fp, #8]
   1df48:	cmp	r0, #0
   1df4c:	bne	1df54 <__assert_fail@plt+0xc77c>
   1df50:	b	1dff8 <__assert_fail@plt+0xc820>
   1df54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1df58:	cmp	r0, #0
   1df5c:	bge	1dfc8 <__assert_fail@plt+0xc7f0>
   1df60:	b	1df64 <__assert_fail@plt+0xc78c>
   1df64:	b	1dfac <__assert_fail@plt+0xc7d4>
   1df68:	b	1dfac <__assert_fail@plt+0xc7d4>
   1df6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1df70:	cmn	r0, #1
   1df74:	bne	1dfac <__assert_fail@plt+0xc7d4>
   1df78:	b	1df7c <__assert_fail@plt+0xc7a4>
   1df7c:	ldr	r0, [fp, #8]
   1df80:	add	r0, r0, #0
   1df84:	movw	r1, #0
   1df88:	cmp	r1, r0
   1df8c:	blt	1dfe0 <__assert_fail@plt+0xc808>
   1df90:	b	1dff8 <__assert_fail@plt+0xc820>
   1df94:	ldr	r0, [fp, #8]
   1df98:	sub	r0, r0, #1
   1df9c:	mvn	r1, #0
   1dfa0:	cmp	r1, r0
   1dfa4:	blt	1dfe0 <__assert_fail@plt+0xc808>
   1dfa8:	b	1dff8 <__assert_fail@plt+0xc820>
   1dfac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dfb0:	movw	r1, #0
   1dfb4:	sdiv	r0, r1, r0
   1dfb8:	ldr	r1, [fp, #8]
   1dfbc:	cmp	r0, r1
   1dfc0:	blt	1dfe0 <__assert_fail@plt+0xc808>
   1dfc4:	b	1dff8 <__assert_fail@plt+0xc820>
   1dfc8:	ldr	r0, [fp, #8]
   1dfcc:	movw	r1, #65535	; 0xffff
   1dfd0:	sdiv	r0, r1, r0
   1dfd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dfd8:	cmp	r0, r1
   1dfdc:	bge	1dff8 <__assert_fail@plt+0xc820>
   1dfe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dfe4:	ldr	r1, [fp, #8]
   1dfe8:	mul	r0, r0, r1
   1dfec:	uxth	r0, r0
   1dff0:	str	r0, [fp, #-28]	; 0xffffffe4
   1dff4:	b	1ebf8 <__assert_fail@plt+0xd420>
   1dff8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dffc:	ldr	r1, [fp, #8]
   1e000:	mul	r0, r0, r1
   1e004:	uxth	r0, r0
   1e008:	str	r0, [fp, #-28]	; 0xffffffe4
   1e00c:	b	1ebfc <__assert_fail@plt+0xd424>
   1e010:	b	1e014 <__assert_fail@plt+0xc83c>
   1e014:	b	1e018 <__assert_fail@plt+0xc840>
   1e018:	ldr	r0, [fp, #8]
   1e01c:	cmp	r0, #0
   1e020:	bge	1e124 <__assert_fail@plt+0xc94c>
   1e024:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e028:	cmp	r0, #0
   1e02c:	bge	1e0b8 <__assert_fail@plt+0xc8e0>
   1e030:	b	1e034 <__assert_fail@plt+0xc85c>
   1e034:	ldr	r0, [pc, #3048]	; 1ec24 <__assert_fail@plt+0xd44c>
   1e038:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e03c:	ldr	r2, [fp, #8]
   1e040:	sdiv	r0, r0, r2
   1e044:	cmp	r1, r0
   1e048:	blt	1e1b4 <__assert_fail@plt+0xc9dc>
   1e04c:	b	1e1c8 <__assert_fail@plt+0xc9f0>
   1e050:	b	1e054 <__assert_fail@plt+0xc87c>
   1e054:	ldr	r0, [pc, #3020]	; 1ec28 <__assert_fail@plt+0xd450>
   1e058:	ldr	r1, [fp, #8]
   1e05c:	cmp	r1, r0
   1e060:	blt	1e078 <__assert_fail@plt+0xc8a0>
   1e064:	b	1e084 <__assert_fail@plt+0xc8ac>
   1e068:	ldr	r0, [fp, #8]
   1e06c:	movw	r1, #0
   1e070:	cmp	r1, r0
   1e074:	bge	1e084 <__assert_fail@plt+0xc8ac>
   1e078:	movw	r0, #0
   1e07c:	str	r0, [sp, #72]	; 0x48
   1e080:	b	1e09c <__assert_fail@plt+0xc8c4>
   1e084:	ldr	r0, [pc, #2968]	; 1ec24 <__assert_fail@plt+0xd44c>
   1e088:	ldr	r1, [fp, #8]
   1e08c:	movw	r2, #0
   1e090:	sub	r1, r2, r1
   1e094:	sdiv	r0, r0, r1
   1e098:	str	r0, [sp, #72]	; 0x48
   1e09c:	ldr	r0, [sp, #72]	; 0x48
   1e0a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e0a4:	mvn	r2, #0
   1e0a8:	sub	r1, r2, r1
   1e0ac:	cmp	r0, r1
   1e0b0:	ble	1e1b4 <__assert_fail@plt+0xc9dc>
   1e0b4:	b	1e1c8 <__assert_fail@plt+0xc9f0>
   1e0b8:	ldr	r0, [fp, #8]
   1e0bc:	cmn	r0, #1
   1e0c0:	bne	1e108 <__assert_fail@plt+0xc930>
   1e0c4:	b	1e0c8 <__assert_fail@plt+0xc8f0>
   1e0c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e0cc:	add	r0, r0, #-2147483648	; 0x80000000
   1e0d0:	movw	r1, #0
   1e0d4:	cmp	r1, r0
   1e0d8:	blt	1e1b4 <__assert_fail@plt+0xc9dc>
   1e0dc:	b	1e1c8 <__assert_fail@plt+0xc9f0>
   1e0e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e0e4:	movw	r1, #0
   1e0e8:	cmp	r1, r0
   1e0ec:	bge	1e1c8 <__assert_fail@plt+0xc9f0>
   1e0f0:	ldr	r0, [pc, #2860]	; 1ec24 <__assert_fail@plt+0xd44c>
   1e0f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e0f8:	sub	r1, r1, #1
   1e0fc:	cmp	r0, r1
   1e100:	blt	1e1b4 <__assert_fail@plt+0xc9dc>
   1e104:	b	1e1c8 <__assert_fail@plt+0xc9f0>
   1e108:	ldr	r0, [pc, #2844]	; 1ec2c <__assert_fail@plt+0xd454>
   1e10c:	ldr	r1, [fp, #8]
   1e110:	sdiv	r0, r0, r1
   1e114:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e118:	cmp	r0, r1
   1e11c:	blt	1e1b4 <__assert_fail@plt+0xc9dc>
   1e120:	b	1e1c8 <__assert_fail@plt+0xc9f0>
   1e124:	ldr	r0, [fp, #8]
   1e128:	cmp	r0, #0
   1e12c:	bne	1e134 <__assert_fail@plt+0xc95c>
   1e130:	b	1e1c8 <__assert_fail@plt+0xc9f0>
   1e134:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e138:	cmp	r0, #0
   1e13c:	bge	1e19c <__assert_fail@plt+0xc9c4>
   1e140:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e144:	cmn	r0, #1
   1e148:	bne	1e180 <__assert_fail@plt+0xc9a8>
   1e14c:	b	1e150 <__assert_fail@plt+0xc978>
   1e150:	ldr	r0, [fp, #8]
   1e154:	add	r0, r0, #-2147483648	; 0x80000000
   1e158:	movw	r1, #0
   1e15c:	cmp	r1, r0
   1e160:	blt	1e1b4 <__assert_fail@plt+0xc9dc>
   1e164:	b	1e1c8 <__assert_fail@plt+0xc9f0>
   1e168:	ldr	r0, [pc, #2740]	; 1ec24 <__assert_fail@plt+0xd44c>
   1e16c:	ldr	r1, [fp, #8]
   1e170:	sub	r1, r1, #1
   1e174:	cmp	r0, r1
   1e178:	blt	1e1b4 <__assert_fail@plt+0xc9dc>
   1e17c:	b	1e1c8 <__assert_fail@plt+0xc9f0>
   1e180:	ldr	r0, [pc, #2724]	; 1ec2c <__assert_fail@plt+0xd454>
   1e184:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e188:	sdiv	r0, r0, r1
   1e18c:	ldr	r1, [fp, #8]
   1e190:	cmp	r0, r1
   1e194:	blt	1e1b4 <__assert_fail@plt+0xc9dc>
   1e198:	b	1e1c8 <__assert_fail@plt+0xc9f0>
   1e19c:	ldr	r0, [pc, #2688]	; 1ec24 <__assert_fail@plt+0xd44c>
   1e1a0:	ldr	r1, [fp, #8]
   1e1a4:	sdiv	r0, r0, r1
   1e1a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e1ac:	cmp	r0, r1
   1e1b0:	bge	1e1c8 <__assert_fail@plt+0xc9f0>
   1e1b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e1b8:	ldr	r1, [fp, #8]
   1e1bc:	mul	r0, r0, r1
   1e1c0:	str	r0, [fp, #-28]	; 0xffffffe4
   1e1c4:	b	1ebf8 <__assert_fail@plt+0xd420>
   1e1c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e1cc:	ldr	r1, [fp, #8]
   1e1d0:	mul	r0, r0, r1
   1e1d4:	str	r0, [fp, #-28]	; 0xffffffe4
   1e1d8:	b	1ebfc <__assert_fail@plt+0xd424>
   1e1dc:	ldr	r0, [fp, #8]
   1e1e0:	cmp	r0, #0
   1e1e4:	bge	1e2f4 <__assert_fail@plt+0xcb1c>
   1e1e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e1ec:	cmp	r0, #0
   1e1f0:	bge	1e27c <__assert_fail@plt+0xcaa4>
   1e1f4:	b	1e214 <__assert_fail@plt+0xca3c>
   1e1f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e1fc:	ldr	r1, [fp, #8]
   1e200:	mvn	r2, #0
   1e204:	udiv	r1, r2, r1
   1e208:	cmp	r0, r1
   1e20c:	bcc	1e390 <__assert_fail@plt+0xcbb8>
   1e210:	b	1e3a4 <__assert_fail@plt+0xcbcc>
   1e214:	b	1e218 <__assert_fail@plt+0xca40>
   1e218:	ldr	r0, [pc, #2568]	; 1ec28 <__assert_fail@plt+0xd450>
   1e21c:	ldr	r1, [fp, #8]
   1e220:	cmp	r1, r0
   1e224:	blt	1e23c <__assert_fail@plt+0xca64>
   1e228:	b	1e248 <__assert_fail@plt+0xca70>
   1e22c:	ldr	r0, [fp, #8]
   1e230:	movw	r1, #0
   1e234:	cmp	r1, r0
   1e238:	bge	1e248 <__assert_fail@plt+0xca70>
   1e23c:	movw	r0, #1
   1e240:	str	r0, [sp, #68]	; 0x44
   1e244:	b	1e260 <__assert_fail@plt+0xca88>
   1e248:	ldr	r0, [fp, #8]
   1e24c:	movw	r1, #0
   1e250:	sub	r0, r1, r0
   1e254:	mvn	r1, #0
   1e258:	udiv	r0, r1, r0
   1e25c:	str	r0, [sp, #68]	; 0x44
   1e260:	ldr	r0, [sp, #68]	; 0x44
   1e264:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e268:	mvn	r2, #0
   1e26c:	sub	r1, r2, r1
   1e270:	cmp	r0, r1
   1e274:	bls	1e390 <__assert_fail@plt+0xcbb8>
   1e278:	b	1e3a4 <__assert_fail@plt+0xcbcc>
   1e27c:	b	1e280 <__assert_fail@plt+0xcaa8>
   1e280:	b	1e2d8 <__assert_fail@plt+0xcb00>
   1e284:	b	1e2d8 <__assert_fail@plt+0xcb00>
   1e288:	ldr	r0, [fp, #8]
   1e28c:	cmn	r0, #1
   1e290:	bne	1e2d8 <__assert_fail@plt+0xcb00>
   1e294:	b	1e298 <__assert_fail@plt+0xcac0>
   1e298:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e29c:	add	r0, r0, #0
   1e2a0:	movw	r1, #0
   1e2a4:	cmp	r1, r0
   1e2a8:	blt	1e390 <__assert_fail@plt+0xcbb8>
   1e2ac:	b	1e3a4 <__assert_fail@plt+0xcbcc>
   1e2b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e2b4:	movw	r1, #0
   1e2b8:	cmp	r1, r0
   1e2bc:	bge	1e3a4 <__assert_fail@plt+0xcbcc>
   1e2c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e2c4:	sub	r0, r0, #1
   1e2c8:	mvn	r1, #0
   1e2cc:	cmp	r1, r0
   1e2d0:	blt	1e390 <__assert_fail@plt+0xcbb8>
   1e2d4:	b	1e3a4 <__assert_fail@plt+0xcbcc>
   1e2d8:	ldr	r0, [fp, #8]
   1e2dc:	movw	r1, #0
   1e2e0:	sdiv	r0, r1, r0
   1e2e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e2e8:	cmp	r0, r1
   1e2ec:	blt	1e390 <__assert_fail@plt+0xcbb8>
   1e2f0:	b	1e3a4 <__assert_fail@plt+0xcbcc>
   1e2f4:	ldr	r0, [fp, #8]
   1e2f8:	cmp	r0, #0
   1e2fc:	bne	1e304 <__assert_fail@plt+0xcb2c>
   1e300:	b	1e3a4 <__assert_fail@plt+0xcbcc>
   1e304:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e308:	cmp	r0, #0
   1e30c:	bge	1e378 <__assert_fail@plt+0xcba0>
   1e310:	b	1e314 <__assert_fail@plt+0xcb3c>
   1e314:	b	1e35c <__assert_fail@plt+0xcb84>
   1e318:	b	1e35c <__assert_fail@plt+0xcb84>
   1e31c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e320:	cmn	r0, #1
   1e324:	bne	1e35c <__assert_fail@plt+0xcb84>
   1e328:	b	1e32c <__assert_fail@plt+0xcb54>
   1e32c:	ldr	r0, [fp, #8]
   1e330:	add	r0, r0, #0
   1e334:	movw	r1, #0
   1e338:	cmp	r1, r0
   1e33c:	blt	1e390 <__assert_fail@plt+0xcbb8>
   1e340:	b	1e3a4 <__assert_fail@plt+0xcbcc>
   1e344:	ldr	r0, [fp, #8]
   1e348:	sub	r0, r0, #1
   1e34c:	mvn	r1, #0
   1e350:	cmp	r1, r0
   1e354:	blt	1e390 <__assert_fail@plt+0xcbb8>
   1e358:	b	1e3a4 <__assert_fail@plt+0xcbcc>
   1e35c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e360:	movw	r1, #0
   1e364:	sdiv	r0, r1, r0
   1e368:	ldr	r1, [fp, #8]
   1e36c:	cmp	r0, r1
   1e370:	blt	1e390 <__assert_fail@plt+0xcbb8>
   1e374:	b	1e3a4 <__assert_fail@plt+0xcbcc>
   1e378:	ldr	r0, [fp, #8]
   1e37c:	mvn	r1, #0
   1e380:	udiv	r0, r1, r0
   1e384:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e388:	cmp	r0, r1
   1e38c:	bcs	1e3a4 <__assert_fail@plt+0xcbcc>
   1e390:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e394:	ldr	r1, [fp, #8]
   1e398:	mul	r0, r0, r1
   1e39c:	str	r0, [fp, #-28]	; 0xffffffe4
   1e3a0:	b	1ebf8 <__assert_fail@plt+0xd420>
   1e3a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e3a8:	ldr	r1, [fp, #8]
   1e3ac:	mul	r0, r0, r1
   1e3b0:	str	r0, [fp, #-28]	; 0xffffffe4
   1e3b4:	b	1ebfc <__assert_fail@plt+0xd424>
   1e3b8:	b	1e3bc <__assert_fail@plt+0xcbe4>
   1e3bc:	b	1e3c0 <__assert_fail@plt+0xcbe8>
   1e3c0:	ldr	r0, [fp, #8]
   1e3c4:	cmp	r0, #0
   1e3c8:	bge	1e4cc <__assert_fail@plt+0xccf4>
   1e3cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e3d0:	cmp	r0, #0
   1e3d4:	bge	1e460 <__assert_fail@plt+0xcc88>
   1e3d8:	b	1e3dc <__assert_fail@plt+0xcc04>
   1e3dc:	ldr	r0, [pc, #2112]	; 1ec24 <__assert_fail@plt+0xd44c>
   1e3e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e3e4:	ldr	r2, [fp, #8]
   1e3e8:	sdiv	r0, r0, r2
   1e3ec:	cmp	r1, r0
   1e3f0:	blt	1e55c <__assert_fail@plt+0xcd84>
   1e3f4:	b	1e570 <__assert_fail@plt+0xcd98>
   1e3f8:	b	1e3fc <__assert_fail@plt+0xcc24>
   1e3fc:	ldr	r0, [pc, #2084]	; 1ec28 <__assert_fail@plt+0xd450>
   1e400:	ldr	r1, [fp, #8]
   1e404:	cmp	r1, r0
   1e408:	blt	1e420 <__assert_fail@plt+0xcc48>
   1e40c:	b	1e42c <__assert_fail@plt+0xcc54>
   1e410:	ldr	r0, [fp, #8]
   1e414:	movw	r1, #0
   1e418:	cmp	r1, r0
   1e41c:	bge	1e42c <__assert_fail@plt+0xcc54>
   1e420:	movw	r0, #0
   1e424:	str	r0, [sp, #64]	; 0x40
   1e428:	b	1e444 <__assert_fail@plt+0xcc6c>
   1e42c:	ldr	r0, [pc, #2032]	; 1ec24 <__assert_fail@plt+0xd44c>
   1e430:	ldr	r1, [fp, #8]
   1e434:	movw	r2, #0
   1e438:	sub	r1, r2, r1
   1e43c:	sdiv	r0, r0, r1
   1e440:	str	r0, [sp, #64]	; 0x40
   1e444:	ldr	r0, [sp, #64]	; 0x40
   1e448:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e44c:	mvn	r2, #0
   1e450:	sub	r1, r2, r1
   1e454:	cmp	r0, r1
   1e458:	ble	1e55c <__assert_fail@plt+0xcd84>
   1e45c:	b	1e570 <__assert_fail@plt+0xcd98>
   1e460:	ldr	r0, [fp, #8]
   1e464:	cmn	r0, #1
   1e468:	bne	1e4b0 <__assert_fail@plt+0xccd8>
   1e46c:	b	1e470 <__assert_fail@plt+0xcc98>
   1e470:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e474:	add	r0, r0, #-2147483648	; 0x80000000
   1e478:	movw	r1, #0
   1e47c:	cmp	r1, r0
   1e480:	blt	1e55c <__assert_fail@plt+0xcd84>
   1e484:	b	1e570 <__assert_fail@plt+0xcd98>
   1e488:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e48c:	movw	r1, #0
   1e490:	cmp	r1, r0
   1e494:	bge	1e570 <__assert_fail@plt+0xcd98>
   1e498:	ldr	r0, [pc, #1924]	; 1ec24 <__assert_fail@plt+0xd44c>
   1e49c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e4a0:	sub	r1, r1, #1
   1e4a4:	cmp	r0, r1
   1e4a8:	blt	1e55c <__assert_fail@plt+0xcd84>
   1e4ac:	b	1e570 <__assert_fail@plt+0xcd98>
   1e4b0:	ldr	r0, [pc, #1908]	; 1ec2c <__assert_fail@plt+0xd454>
   1e4b4:	ldr	r1, [fp, #8]
   1e4b8:	sdiv	r0, r0, r1
   1e4bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e4c0:	cmp	r0, r1
   1e4c4:	blt	1e55c <__assert_fail@plt+0xcd84>
   1e4c8:	b	1e570 <__assert_fail@plt+0xcd98>
   1e4cc:	ldr	r0, [fp, #8]
   1e4d0:	cmp	r0, #0
   1e4d4:	bne	1e4dc <__assert_fail@plt+0xcd04>
   1e4d8:	b	1e570 <__assert_fail@plt+0xcd98>
   1e4dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e4e0:	cmp	r0, #0
   1e4e4:	bge	1e544 <__assert_fail@plt+0xcd6c>
   1e4e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e4ec:	cmn	r0, #1
   1e4f0:	bne	1e528 <__assert_fail@plt+0xcd50>
   1e4f4:	b	1e4f8 <__assert_fail@plt+0xcd20>
   1e4f8:	ldr	r0, [fp, #8]
   1e4fc:	add	r0, r0, #-2147483648	; 0x80000000
   1e500:	movw	r1, #0
   1e504:	cmp	r1, r0
   1e508:	blt	1e55c <__assert_fail@plt+0xcd84>
   1e50c:	b	1e570 <__assert_fail@plt+0xcd98>
   1e510:	ldr	r0, [pc, #1804]	; 1ec24 <__assert_fail@plt+0xd44c>
   1e514:	ldr	r1, [fp, #8]
   1e518:	sub	r1, r1, #1
   1e51c:	cmp	r0, r1
   1e520:	blt	1e55c <__assert_fail@plt+0xcd84>
   1e524:	b	1e570 <__assert_fail@plt+0xcd98>
   1e528:	ldr	r0, [pc, #1788]	; 1ec2c <__assert_fail@plt+0xd454>
   1e52c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e530:	sdiv	r0, r0, r1
   1e534:	ldr	r1, [fp, #8]
   1e538:	cmp	r0, r1
   1e53c:	blt	1e55c <__assert_fail@plt+0xcd84>
   1e540:	b	1e570 <__assert_fail@plt+0xcd98>
   1e544:	ldr	r0, [pc, #1752]	; 1ec24 <__assert_fail@plt+0xd44c>
   1e548:	ldr	r1, [fp, #8]
   1e54c:	sdiv	r0, r0, r1
   1e550:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e554:	cmp	r0, r1
   1e558:	bge	1e570 <__assert_fail@plt+0xcd98>
   1e55c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e560:	ldr	r1, [fp, #8]
   1e564:	mul	r0, r0, r1
   1e568:	str	r0, [fp, #-28]	; 0xffffffe4
   1e56c:	b	1ebf8 <__assert_fail@plt+0xd420>
   1e570:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e574:	ldr	r1, [fp, #8]
   1e578:	mul	r0, r0, r1
   1e57c:	str	r0, [fp, #-28]	; 0xffffffe4
   1e580:	b	1ebfc <__assert_fail@plt+0xd424>
   1e584:	ldr	r0, [fp, #8]
   1e588:	cmp	r0, #0
   1e58c:	bge	1e69c <__assert_fail@plt+0xcec4>
   1e590:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e594:	cmp	r0, #0
   1e598:	bge	1e624 <__assert_fail@plt+0xce4c>
   1e59c:	b	1e5bc <__assert_fail@plt+0xcde4>
   1e5a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e5a4:	ldr	r1, [fp, #8]
   1e5a8:	mvn	r2, #0
   1e5ac:	udiv	r1, r2, r1
   1e5b0:	cmp	r0, r1
   1e5b4:	bcc	1e738 <__assert_fail@plt+0xcf60>
   1e5b8:	b	1e74c <__assert_fail@plt+0xcf74>
   1e5bc:	b	1e5c0 <__assert_fail@plt+0xcde8>
   1e5c0:	ldr	r0, [pc, #1632]	; 1ec28 <__assert_fail@plt+0xd450>
   1e5c4:	ldr	r1, [fp, #8]
   1e5c8:	cmp	r1, r0
   1e5cc:	blt	1e5e4 <__assert_fail@plt+0xce0c>
   1e5d0:	b	1e5f0 <__assert_fail@plt+0xce18>
   1e5d4:	ldr	r0, [fp, #8]
   1e5d8:	movw	r1, #0
   1e5dc:	cmp	r1, r0
   1e5e0:	bge	1e5f0 <__assert_fail@plt+0xce18>
   1e5e4:	movw	r0, #1
   1e5e8:	str	r0, [sp, #60]	; 0x3c
   1e5ec:	b	1e608 <__assert_fail@plt+0xce30>
   1e5f0:	ldr	r0, [fp, #8]
   1e5f4:	movw	r1, #0
   1e5f8:	sub	r0, r1, r0
   1e5fc:	mvn	r1, #0
   1e600:	udiv	r0, r1, r0
   1e604:	str	r0, [sp, #60]	; 0x3c
   1e608:	ldr	r0, [sp, #60]	; 0x3c
   1e60c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e610:	mvn	r2, #0
   1e614:	sub	r1, r2, r1
   1e618:	cmp	r0, r1
   1e61c:	bls	1e738 <__assert_fail@plt+0xcf60>
   1e620:	b	1e74c <__assert_fail@plt+0xcf74>
   1e624:	b	1e628 <__assert_fail@plt+0xce50>
   1e628:	b	1e680 <__assert_fail@plt+0xcea8>
   1e62c:	b	1e680 <__assert_fail@plt+0xcea8>
   1e630:	ldr	r0, [fp, #8]
   1e634:	cmn	r0, #1
   1e638:	bne	1e680 <__assert_fail@plt+0xcea8>
   1e63c:	b	1e640 <__assert_fail@plt+0xce68>
   1e640:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e644:	add	r0, r0, #0
   1e648:	movw	r1, #0
   1e64c:	cmp	r1, r0
   1e650:	blt	1e738 <__assert_fail@plt+0xcf60>
   1e654:	b	1e74c <__assert_fail@plt+0xcf74>
   1e658:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e65c:	movw	r1, #0
   1e660:	cmp	r1, r0
   1e664:	bge	1e74c <__assert_fail@plt+0xcf74>
   1e668:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e66c:	sub	r0, r0, #1
   1e670:	mvn	r1, #0
   1e674:	cmp	r1, r0
   1e678:	blt	1e738 <__assert_fail@plt+0xcf60>
   1e67c:	b	1e74c <__assert_fail@plt+0xcf74>
   1e680:	ldr	r0, [fp, #8]
   1e684:	movw	r1, #0
   1e688:	sdiv	r0, r1, r0
   1e68c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e690:	cmp	r0, r1
   1e694:	blt	1e738 <__assert_fail@plt+0xcf60>
   1e698:	b	1e74c <__assert_fail@plt+0xcf74>
   1e69c:	ldr	r0, [fp, #8]
   1e6a0:	cmp	r0, #0
   1e6a4:	bne	1e6ac <__assert_fail@plt+0xced4>
   1e6a8:	b	1e74c <__assert_fail@plt+0xcf74>
   1e6ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e6b0:	cmp	r0, #0
   1e6b4:	bge	1e720 <__assert_fail@plt+0xcf48>
   1e6b8:	b	1e6bc <__assert_fail@plt+0xcee4>
   1e6bc:	b	1e704 <__assert_fail@plt+0xcf2c>
   1e6c0:	b	1e704 <__assert_fail@plt+0xcf2c>
   1e6c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e6c8:	cmn	r0, #1
   1e6cc:	bne	1e704 <__assert_fail@plt+0xcf2c>
   1e6d0:	b	1e6d4 <__assert_fail@plt+0xcefc>
   1e6d4:	ldr	r0, [fp, #8]
   1e6d8:	add	r0, r0, #0
   1e6dc:	movw	r1, #0
   1e6e0:	cmp	r1, r0
   1e6e4:	blt	1e738 <__assert_fail@plt+0xcf60>
   1e6e8:	b	1e74c <__assert_fail@plt+0xcf74>
   1e6ec:	ldr	r0, [fp, #8]
   1e6f0:	sub	r0, r0, #1
   1e6f4:	mvn	r1, #0
   1e6f8:	cmp	r1, r0
   1e6fc:	blt	1e738 <__assert_fail@plt+0xcf60>
   1e700:	b	1e74c <__assert_fail@plt+0xcf74>
   1e704:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e708:	movw	r1, #0
   1e70c:	sdiv	r0, r1, r0
   1e710:	ldr	r1, [fp, #8]
   1e714:	cmp	r0, r1
   1e718:	blt	1e738 <__assert_fail@plt+0xcf60>
   1e71c:	b	1e74c <__assert_fail@plt+0xcf74>
   1e720:	ldr	r0, [fp, #8]
   1e724:	mvn	r1, #0
   1e728:	udiv	r0, r1, r0
   1e72c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e730:	cmp	r0, r1
   1e734:	bcs	1e74c <__assert_fail@plt+0xcf74>
   1e738:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e73c:	ldr	r1, [fp, #8]
   1e740:	mul	r0, r0, r1
   1e744:	str	r0, [fp, #-28]	; 0xffffffe4
   1e748:	b	1ebf8 <__assert_fail@plt+0xd420>
   1e74c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e750:	ldr	r1, [fp, #8]
   1e754:	mul	r0, r0, r1
   1e758:	str	r0, [fp, #-28]	; 0xffffffe4
   1e75c:	b	1ebfc <__assert_fail@plt+0xd424>
   1e760:	b	1e764 <__assert_fail@plt+0xcf8c>
   1e764:	ldr	r0, [fp, #8]
   1e768:	cmp	r0, #0
   1e76c:	bge	1e8d4 <__assert_fail@plt+0xd0fc>
   1e770:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e774:	cmp	r0, #0
   1e778:	bge	1e850 <__assert_fail@plt+0xd078>
   1e77c:	b	1e780 <__assert_fail@plt+0xcfa8>
   1e780:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e784:	ldr	r1, [fp, #8]
   1e788:	asr	r3, r1, #31
   1e78c:	mvn	r2, #0
   1e790:	mvn	ip, #-2147483648	; 0x80000000
   1e794:	str	r0, [sp, #56]	; 0x38
   1e798:	mov	r0, r2
   1e79c:	str	r1, [sp, #52]	; 0x34
   1e7a0:	mov	r1, ip
   1e7a4:	ldr	r2, [sp, #52]	; 0x34
   1e7a8:	bl	22154 <__assert_fail@plt+0x1097c>
   1e7ac:	ldr	r2, [sp, #56]	; 0x38
   1e7b0:	subs	r0, r2, r0
   1e7b4:	rscs	r1, r1, r2, asr #31
   1e7b8:	blt	1e99c <__assert_fail@plt+0xd1c4>
   1e7bc:	b	1e9b0 <__assert_fail@plt+0xd1d8>
   1e7c0:	b	1e7c4 <__assert_fail@plt+0xcfec>
   1e7c4:	ldr	r0, [pc, #1116]	; 1ec28 <__assert_fail@plt+0xd450>
   1e7c8:	ldr	r1, [fp, #8]
   1e7cc:	cmp	r1, r0
   1e7d0:	blt	1e7e8 <__assert_fail@plt+0xd010>
   1e7d4:	b	1e7fc <__assert_fail@plt+0xd024>
   1e7d8:	ldr	r0, [fp, #8]
   1e7dc:	movw	r1, #0
   1e7e0:	cmp	r1, r0
   1e7e4:	bge	1e7fc <__assert_fail@plt+0xd024>
   1e7e8:	mov	r0, #0
   1e7ec:	mvn	r1, #0
   1e7f0:	str	r1, [sp, #48]	; 0x30
   1e7f4:	str	r0, [sp, #44]	; 0x2c
   1e7f8:	b	1e830 <__assert_fail@plt+0xd058>
   1e7fc:	ldr	r0, [fp, #8]
   1e800:	rsb	r0, r0, #0
   1e804:	asr	r3, r0, #31
   1e808:	mvn	r1, #0
   1e80c:	mvn	r2, #-2147483648	; 0x80000000
   1e810:	str	r0, [sp, #40]	; 0x28
   1e814:	mov	r0, r1
   1e818:	mov	r1, r2
   1e81c:	ldr	r2, [sp, #40]	; 0x28
   1e820:	bl	22154 <__assert_fail@plt+0x1097c>
   1e824:	str	r0, [sp, #48]	; 0x30
   1e828:	str	r1, [sp, #44]	; 0x2c
   1e82c:	b	1e830 <__assert_fail@plt+0xd058>
   1e830:	ldr	r0, [sp, #44]	; 0x2c
   1e834:	ldr	r1, [sp, #48]	; 0x30
   1e838:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e83c:	mvn	r2, r2
   1e840:	subs	r1, r2, r1
   1e844:	rscs	r0, r0, r2, asr #31
   1e848:	bge	1e99c <__assert_fail@plt+0xd1c4>
   1e84c:	b	1e9b0 <__assert_fail@plt+0xd1d8>
   1e850:	ldr	r0, [fp, #8]
   1e854:	cmn	r0, #1
   1e858:	bne	1e89c <__assert_fail@plt+0xd0c4>
   1e85c:	b	1e860 <__assert_fail@plt+0xd088>
   1e860:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e864:	mov	r1, #-2147483648	; 0x80000000
   1e868:	add	r1, r1, r0, asr #31
   1e86c:	rsbs	r0, r0, #0
   1e870:	rscs	r1, r1, #0
   1e874:	blt	1e99c <__assert_fail@plt+0xd1c4>
   1e878:	b	1e9b0 <__assert_fail@plt+0xd1d8>
   1e87c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e880:	movw	r1, #0
   1e884:	cmp	r1, r0
   1e888:	bge	1e9b0 <__assert_fail@plt+0xd1d8>
   1e88c:	mov	r0, #0
   1e890:	cmp	r0, #0
   1e894:	bne	1e99c <__assert_fail@plt+0xd1c4>
   1e898:	b	1e9b0 <__assert_fail@plt+0xd1d8>
   1e89c:	ldr	r0, [fp, #8]
   1e8a0:	asr	r3, r0, #31
   1e8a4:	mov	r1, #0
   1e8a8:	mov	r2, #-2147483648	; 0x80000000
   1e8ac:	str	r0, [sp, #36]	; 0x24
   1e8b0:	mov	r0, r1
   1e8b4:	mov	r1, r2
   1e8b8:	ldr	r2, [sp, #36]	; 0x24
   1e8bc:	bl	22154 <__assert_fail@plt+0x1097c>
   1e8c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e8c4:	subs	r0, r0, r2
   1e8c8:	sbcs	r1, r1, r2, asr #31
   1e8cc:	blt	1e99c <__assert_fail@plt+0xd1c4>
   1e8d0:	b	1e9b0 <__assert_fail@plt+0xd1d8>
   1e8d4:	ldr	r0, [fp, #8]
   1e8d8:	cmp	r0, #0
   1e8dc:	bne	1e8e4 <__assert_fail@plt+0xd10c>
   1e8e0:	b	1e9b0 <__assert_fail@plt+0xd1d8>
   1e8e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e8e8:	cmp	r0, #0
   1e8ec:	bge	1e964 <__assert_fail@plt+0xd18c>
   1e8f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e8f4:	cmn	r0, #1
   1e8f8:	bne	1e92c <__assert_fail@plt+0xd154>
   1e8fc:	b	1e900 <__assert_fail@plt+0xd128>
   1e900:	ldr	r0, [fp, #8]
   1e904:	mov	r1, #-2147483648	; 0x80000000
   1e908:	add	r1, r1, r0, asr #31
   1e90c:	rsbs	r0, r0, #0
   1e910:	rscs	r1, r1, #0
   1e914:	blt	1e99c <__assert_fail@plt+0xd1c4>
   1e918:	b	1e9b0 <__assert_fail@plt+0xd1d8>
   1e91c:	mov	r0, #0
   1e920:	cmp	r0, #0
   1e924:	bne	1e99c <__assert_fail@plt+0xd1c4>
   1e928:	b	1e9b0 <__assert_fail@plt+0xd1d8>
   1e92c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e930:	asr	r3, r0, #31
   1e934:	mov	r1, #0
   1e938:	mov	r2, #-2147483648	; 0x80000000
   1e93c:	str	r0, [sp, #32]
   1e940:	mov	r0, r1
   1e944:	mov	r1, r2
   1e948:	ldr	r2, [sp, #32]
   1e94c:	bl	22154 <__assert_fail@plt+0x1097c>
   1e950:	ldr	r2, [fp, #8]
   1e954:	subs	r0, r0, r2
   1e958:	sbcs	r1, r1, r2, asr #31
   1e95c:	blt	1e99c <__assert_fail@plt+0xd1c4>
   1e960:	b	1e9b0 <__assert_fail@plt+0xd1d8>
   1e964:	ldr	r0, [fp, #8]
   1e968:	asr	r3, r0, #31
   1e96c:	mvn	r1, #0
   1e970:	mvn	r2, #-2147483648	; 0x80000000
   1e974:	str	r0, [sp, #28]
   1e978:	mov	r0, r1
   1e97c:	mov	r1, r2
   1e980:	ldr	r2, [sp, #28]
   1e984:	bl	22154 <__assert_fail@plt+0x1097c>
   1e988:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e98c:	subs	r0, r0, r2
   1e990:	sbcs	r1, r1, r2, asr #31
   1e994:	bge	1e9b0 <__assert_fail@plt+0xd1d8>
   1e998:	b	1e99c <__assert_fail@plt+0xd1c4>
   1e99c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e9a0:	ldr	r1, [fp, #8]
   1e9a4:	mul	r0, r0, r1
   1e9a8:	str	r0, [fp, #-28]	; 0xffffffe4
   1e9ac:	b	1ebf8 <__assert_fail@plt+0xd420>
   1e9b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e9b4:	ldr	r1, [fp, #8]
   1e9b8:	mul	r0, r0, r1
   1e9bc:	str	r0, [fp, #-28]	; 0xffffffe4
   1e9c0:	b	1ebfc <__assert_fail@plt+0xd424>
   1e9c4:	ldr	r0, [fp, #8]
   1e9c8:	cmp	r0, #0
   1e9cc:	bge	1eb1c <__assert_fail@plt+0xd344>
   1e9d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e9d4:	cmp	r0, #0
   1e9d8:	bge	1eaa4 <__assert_fail@plt+0xd2cc>
   1e9dc:	b	1ea1c <__assert_fail@plt+0xd244>
   1e9e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e9e4:	ldr	r1, [fp, #8]
   1e9e8:	asr	r3, r1, #31
   1e9ec:	mvn	r2, #0
   1e9f0:	str	r0, [sp, #24]
   1e9f4:	mov	r0, r2
   1e9f8:	str	r1, [sp, #20]
   1e9fc:	mov	r1, r2
   1ea00:	ldr	r2, [sp, #20]
   1ea04:	bl	22228 <__assert_fail@plt+0x10a50>
   1ea08:	ldr	r2, [sp, #24]
   1ea0c:	subs	r0, r2, r0
   1ea10:	rscs	r1, r1, r2, asr #31
   1ea14:	bcc	1ebd0 <__assert_fail@plt+0xd3f8>
   1ea18:	b	1ebe4 <__assert_fail@plt+0xd40c>
   1ea1c:	b	1ea20 <__assert_fail@plt+0xd248>
   1ea20:	ldr	r0, [pc, #512]	; 1ec28 <__assert_fail@plt+0xd450>
   1ea24:	ldr	r1, [fp, #8]
   1ea28:	cmp	r1, r0
   1ea2c:	blt	1ea44 <__assert_fail@plt+0xd26c>
   1ea30:	b	1ea58 <__assert_fail@plt+0xd280>
   1ea34:	ldr	r0, [fp, #8]
   1ea38:	movw	r1, #0
   1ea3c:	cmp	r1, r0
   1ea40:	bge	1ea58 <__assert_fail@plt+0xd280>
   1ea44:	mov	r0, #1
   1ea48:	mvn	r1, #0
   1ea4c:	str	r1, [sp, #16]
   1ea50:	str	r0, [sp, #12]
   1ea54:	b	1ea84 <__assert_fail@plt+0xd2ac>
   1ea58:	ldr	r0, [fp, #8]
   1ea5c:	rsb	r0, r0, #0
   1ea60:	asr	r3, r0, #31
   1ea64:	mvn	r1, #0
   1ea68:	str	r0, [sp, #8]
   1ea6c:	mov	r0, r1
   1ea70:	ldr	r2, [sp, #8]
   1ea74:	bl	22228 <__assert_fail@plt+0x10a50>
   1ea78:	str	r0, [sp, #16]
   1ea7c:	str	r1, [sp, #12]
   1ea80:	b	1ea84 <__assert_fail@plt+0xd2ac>
   1ea84:	ldr	r0, [sp, #12]
   1ea88:	ldr	r1, [sp, #16]
   1ea8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ea90:	mvn	r2, r2
   1ea94:	subs	r1, r2, r1
   1ea98:	rscs	r0, r0, r2, asr #31
   1ea9c:	bcs	1ebd0 <__assert_fail@plt+0xd3f8>
   1eaa0:	b	1ebe4 <__assert_fail@plt+0xd40c>
   1eaa4:	b	1eaa8 <__assert_fail@plt+0xd2d0>
   1eaa8:	b	1eb00 <__assert_fail@plt+0xd328>
   1eaac:	b	1eb00 <__assert_fail@plt+0xd328>
   1eab0:	ldr	r0, [fp, #8]
   1eab4:	cmn	r0, #1
   1eab8:	bne	1eb00 <__assert_fail@plt+0xd328>
   1eabc:	b	1eac0 <__assert_fail@plt+0xd2e8>
   1eac0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eac4:	add	r0, r0, #0
   1eac8:	movw	r1, #0
   1eacc:	cmp	r1, r0
   1ead0:	blt	1ebd0 <__assert_fail@plt+0xd3f8>
   1ead4:	b	1ebe4 <__assert_fail@plt+0xd40c>
   1ead8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eadc:	movw	r1, #0
   1eae0:	cmp	r1, r0
   1eae4:	bge	1ebe4 <__assert_fail@plt+0xd40c>
   1eae8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eaec:	sub	r0, r0, #1
   1eaf0:	mvn	r1, #0
   1eaf4:	cmp	r1, r0
   1eaf8:	blt	1ebd0 <__assert_fail@plt+0xd3f8>
   1eafc:	b	1ebe4 <__assert_fail@plt+0xd40c>
   1eb00:	ldr	r0, [fp, #8]
   1eb04:	movw	r1, #0
   1eb08:	sdiv	r0, r1, r0
   1eb0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eb10:	cmp	r0, r1
   1eb14:	blt	1ebd0 <__assert_fail@plt+0xd3f8>
   1eb18:	b	1ebe4 <__assert_fail@plt+0xd40c>
   1eb1c:	ldr	r0, [fp, #8]
   1eb20:	cmp	r0, #0
   1eb24:	bne	1eb2c <__assert_fail@plt+0xd354>
   1eb28:	b	1ebe4 <__assert_fail@plt+0xd40c>
   1eb2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb30:	cmp	r0, #0
   1eb34:	bge	1eba0 <__assert_fail@plt+0xd3c8>
   1eb38:	b	1eb3c <__assert_fail@plt+0xd364>
   1eb3c:	b	1eb84 <__assert_fail@plt+0xd3ac>
   1eb40:	b	1eb84 <__assert_fail@plt+0xd3ac>
   1eb44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb48:	cmn	r0, #1
   1eb4c:	bne	1eb84 <__assert_fail@plt+0xd3ac>
   1eb50:	b	1eb54 <__assert_fail@plt+0xd37c>
   1eb54:	ldr	r0, [fp, #8]
   1eb58:	add	r0, r0, #0
   1eb5c:	movw	r1, #0
   1eb60:	cmp	r1, r0
   1eb64:	blt	1ebd0 <__assert_fail@plt+0xd3f8>
   1eb68:	b	1ebe4 <__assert_fail@plt+0xd40c>
   1eb6c:	ldr	r0, [fp, #8]
   1eb70:	sub	r0, r0, #1
   1eb74:	mvn	r1, #0
   1eb78:	cmp	r1, r0
   1eb7c:	blt	1ebd0 <__assert_fail@plt+0xd3f8>
   1eb80:	b	1ebe4 <__assert_fail@plt+0xd40c>
   1eb84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb88:	movw	r1, #0
   1eb8c:	sdiv	r0, r1, r0
   1eb90:	ldr	r1, [fp, #8]
   1eb94:	cmp	r0, r1
   1eb98:	blt	1ebd0 <__assert_fail@plt+0xd3f8>
   1eb9c:	b	1ebe4 <__assert_fail@plt+0xd40c>
   1eba0:	ldr	r0, [fp, #8]
   1eba4:	asr	r3, r0, #31
   1eba8:	mvn	r1, #0
   1ebac:	str	r0, [sp, #4]
   1ebb0:	mov	r0, r1
   1ebb4:	ldr	r2, [sp, #4]
   1ebb8:	bl	22228 <__assert_fail@plt+0x10a50>
   1ebbc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ebc0:	subs	r0, r0, r2
   1ebc4:	sbcs	r1, r1, r2, asr #31
   1ebc8:	bcs	1ebe4 <__assert_fail@plt+0xd40c>
   1ebcc:	b	1ebd0 <__assert_fail@plt+0xd3f8>
   1ebd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ebd4:	ldr	r1, [fp, #8]
   1ebd8:	mul	r0, r0, r1
   1ebdc:	str	r0, [fp, #-28]	; 0xffffffe4
   1ebe0:	b	1ebf8 <__assert_fail@plt+0xd420>
   1ebe4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ebe8:	ldr	r1, [fp, #8]
   1ebec:	mul	r0, r0, r1
   1ebf0:	str	r0, [fp, #-28]	; 0xffffffe4
   1ebf4:	b	1ebfc <__assert_fail@plt+0xd424>
   1ebf8:	bl	1edd4 <__assert_fail@plt+0xd5fc>
   1ebfc:	ldr	r0, [fp, #-4]
   1ec00:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ec04:	bl	1c134 <__assert_fail@plt+0xa95c>
   1ec08:	str	r0, [fp, #-4]
   1ec0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec10:	ldr	r1, [fp, #-8]
   1ec14:	str	r0, [r1]
   1ec18:	ldr	r0, [fp, #-4]
   1ec1c:	mov	sp, fp
   1ec20:	pop	{fp, pc}
   1ec24:	svcvc	0x00ffffff
   1ec28:	andhi	r0, r0, r1
   1ec2c:	andhi	r0, r0, r0
   1ec30:			; <UNDEFINED> instruction: 0xffff8000
   1ec34:	push	{fp, lr}
   1ec38:	mov	fp, sp
   1ec3c:	sub	sp, sp, #8
   1ec40:	str	r0, [sp, #4]
   1ec44:	ldr	r0, [sp, #4]
   1ec48:	movw	r1, #1
   1ec4c:	bl	1ec58 <__assert_fail@plt+0xd480>
   1ec50:	mov	sp, fp
   1ec54:	pop	{fp, pc}
   1ec58:	push	{fp, lr}
   1ec5c:	mov	fp, sp
   1ec60:	sub	sp, sp, #8
   1ec64:	str	r0, [sp, #4]
   1ec68:	str	r1, [sp]
   1ec6c:	ldr	r0, [sp, #4]
   1ec70:	ldr	r1, [sp]
   1ec74:	bl	1f550 <__assert_fail@plt+0xdd78>
   1ec78:	bl	1c0c0 <__assert_fail@plt+0xa8e8>
   1ec7c:	mov	sp, fp
   1ec80:	pop	{fp, pc}
   1ec84:	push	{fp, lr}
   1ec88:	mov	fp, sp
   1ec8c:	sub	sp, sp, #8
   1ec90:	str	r0, [sp, #4]
   1ec94:	ldr	r0, [sp, #4]
   1ec98:	movw	r1, #1
   1ec9c:	bl	1eca8 <__assert_fail@plt+0xd4d0>
   1eca0:	mov	sp, fp
   1eca4:	pop	{fp, pc}
   1eca8:	push	{fp, lr}
   1ecac:	mov	fp, sp
   1ecb0:	sub	sp, sp, #8
   1ecb4:	str	r0, [sp, #4]
   1ecb8:	str	r1, [sp]
   1ecbc:	ldr	r0, [sp, #4]
   1ecc0:	ldr	r1, [sp]
   1ecc4:	bl	21448 <__assert_fail@plt+0xfc70>
   1ecc8:	bl	1c0c0 <__assert_fail@plt+0xa8e8>
   1eccc:	mov	sp, fp
   1ecd0:	pop	{fp, pc}
   1ecd4:	push	{fp, lr}
   1ecd8:	mov	fp, sp
   1ecdc:	sub	sp, sp, #16
   1ece0:	str	r0, [fp, #-4]
   1ece4:	str	r1, [sp, #8]
   1ece8:	ldr	r0, [sp, #8]
   1ecec:	bl	1c09c <__assert_fail@plt+0xa8c4>
   1ecf0:	ldr	r1, [fp, #-4]
   1ecf4:	ldr	r2, [sp, #8]
   1ecf8:	str	r0, [sp, #4]
   1ecfc:	bl	1149c <memcpy@plt>
   1ed00:	ldr	r0, [sp, #4]
   1ed04:	mov	sp, fp
   1ed08:	pop	{fp, pc}
   1ed0c:	push	{fp, lr}
   1ed10:	mov	fp, sp
   1ed14:	sub	sp, sp, #16
   1ed18:	str	r0, [fp, #-4]
   1ed1c:	str	r1, [sp, #8]
   1ed20:	ldr	r0, [sp, #8]
   1ed24:	bl	1c0f0 <__assert_fail@plt+0xa918>
   1ed28:	ldr	r1, [fp, #-4]
   1ed2c:	ldr	r2, [sp, #8]
   1ed30:	str	r0, [sp, #4]
   1ed34:	bl	1149c <memcpy@plt>
   1ed38:	ldr	r0, [sp, #4]
   1ed3c:	mov	sp, fp
   1ed40:	pop	{fp, pc}
   1ed44:	push	{fp, lr}
   1ed48:	mov	fp, sp
   1ed4c:	sub	sp, sp, #16
   1ed50:	str	r0, [fp, #-4]
   1ed54:	str	r1, [sp, #8]
   1ed58:	ldr	r0, [sp, #8]
   1ed5c:	add	r0, r0, #1
   1ed60:	bl	1c0f0 <__assert_fail@plt+0xa918>
   1ed64:	str	r0, [sp, #4]
   1ed68:	ldr	r0, [sp, #4]
   1ed6c:	ldr	r1, [sp, #8]
   1ed70:	add	r0, r0, r1
   1ed74:	movw	r1, #0
   1ed78:	strb	r1, [r0]
   1ed7c:	ldr	r0, [sp, #4]
   1ed80:	ldr	r1, [fp, #-4]
   1ed84:	ldr	r2, [sp, #8]
   1ed88:	str	r0, [sp]
   1ed8c:	bl	1149c <memcpy@plt>
   1ed90:	ldr	r0, [sp]
   1ed94:	mov	sp, fp
   1ed98:	pop	{fp, pc}
   1ed9c:	push	{fp, lr}
   1eda0:	mov	fp, sp
   1eda4:	sub	sp, sp, #8
   1eda8:	str	r0, [sp, #4]
   1edac:	ldr	r0, [sp, #4]
   1edb0:	ldr	r1, [sp, #4]
   1edb4:	str	r0, [sp]
   1edb8:	mov	r0, r1
   1edbc:	bl	11634 <strlen@plt>
   1edc0:	add	r1, r0, #1
   1edc4:	ldr	r0, [sp]
   1edc8:	bl	1ecd4 <__assert_fail@plt+0xd4fc>
   1edcc:	mov	sp, fp
   1edd0:	pop	{fp, pc}
   1edd4:	push	{fp, lr}
   1edd8:	mov	fp, sp
   1eddc:	sub	sp, sp, #8
   1ede0:	movw	r0, #20848	; 0x5170
   1ede4:	movt	r0, #3
   1ede8:	ldr	r0, [r0]
   1edec:	movw	r1, #18494	; 0x483e
   1edf0:	movt	r1, #2
   1edf4:	str	r0, [sp, #4]
   1edf8:	mov	r0, r1
   1edfc:	bl	1161c <gettext@plt>
   1ee00:	ldr	r1, [sp, #4]
   1ee04:	str	r0, [sp]
   1ee08:	mov	r0, r1
   1ee0c:	movw	r1, #0
   1ee10:	movw	r2, #16907	; 0x420b
   1ee14:	movt	r2, #2
   1ee18:	ldr	r3, [sp]
   1ee1c:	bl	1158c <error@plt>
   1ee20:	bl	117a8 <abort@plt>
   1ee24:	push	{fp, lr}
   1ee28:	mov	fp, sp
   1ee2c:	sub	sp, sp, #72	; 0x48
   1ee30:	ldr	ip, [fp, #8]
   1ee34:	str	r0, [fp, #-8]
   1ee38:	str	r1, [fp, #-12]
   1ee3c:	str	r2, [fp, #-16]
   1ee40:	str	r3, [fp, #-20]	; 0xffffffec
   1ee44:	movw	r0, #0
   1ee48:	str	r0, [sp, #36]	; 0x24
   1ee4c:	ldr	r1, [fp, #-16]
   1ee50:	cmp	r0, r1
   1ee54:	bgt	1ee68 <__assert_fail@plt+0xd690>
   1ee58:	ldr	r0, [fp, #-16]
   1ee5c:	cmp	r0, #36	; 0x24
   1ee60:	bgt	1ee68 <__assert_fail@plt+0xd690>
   1ee64:	b	1ee88 <__assert_fail@plt+0xd6b0>
   1ee68:	movw	r0, #18511	; 0x484f
   1ee6c:	movt	r0, #2
   1ee70:	movw	r1, #18549	; 0x4875
   1ee74:	movt	r1, #2
   1ee78:	movw	r2, #84	; 0x54
   1ee7c:	movw	r3, #18561	; 0x4881
   1ee80:	movt	r3, #2
   1ee84:	bl	117d8 <__assert_fail@plt>
   1ee88:	ldr	r0, [fp, #-12]
   1ee8c:	movw	r1, #0
   1ee90:	cmp	r0, r1
   1ee94:	beq	1eea4 <__assert_fail@plt+0xd6cc>
   1ee98:	ldr	r0, [fp, #-12]
   1ee9c:	str	r0, [sp, #12]
   1eea0:	b	1eeb0 <__assert_fail@plt+0xd6d8>
   1eea4:	sub	r0, fp, #24
   1eea8:	str	r0, [sp, #12]
   1eeac:	b	1eeb0 <__assert_fail@plt+0xd6d8>
   1eeb0:	ldr	r0, [sp, #12]
   1eeb4:	str	r0, [fp, #-28]	; 0xffffffe4
   1eeb8:	bl	11664 <__errno_location@plt>
   1eebc:	movw	r1, #0
   1eec0:	str	r1, [r0]
   1eec4:	ldr	r0, [fp, #-8]
   1eec8:	str	r0, [sp, #32]
   1eecc:	ldr	r0, [sp, #32]
   1eed0:	ldrb	r0, [r0]
   1eed4:	strb	r0, [sp, #31]
   1eed8:	bl	115f8 <__ctype_b_loc@plt>
   1eedc:	ldr	r0, [r0]
   1eee0:	ldrb	r1, [sp, #31]
   1eee4:	mov	r2, r1
   1eee8:	add	r0, r0, r1, lsl #1
   1eeec:	ldrh	r0, [r0]
   1eef0:	and	r0, r0, #8192	; 0x2000
   1eef4:	cmp	r0, #0
   1eef8:	beq	1ef14 <__assert_fail@plt+0xd73c>
   1eefc:	ldr	r0, [sp, #32]
   1ef00:	add	r1, r0, #1
   1ef04:	str	r1, [sp, #32]
   1ef08:	ldrb	r0, [r0, #1]
   1ef0c:	strb	r0, [sp, #31]
   1ef10:	b	1eed8 <__assert_fail@plt+0xd700>
   1ef14:	ldrb	r0, [sp, #31]
   1ef18:	cmp	r0, #45	; 0x2d
   1ef1c:	bne	1ef2c <__assert_fail@plt+0xd754>
   1ef20:	movw	r0, #4
   1ef24:	str	r0, [fp, #-4]
   1ef28:	b	1f47c <__assert_fail@plt+0xdca4>
   1ef2c:	ldr	r0, [fp, #-8]
   1ef30:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ef34:	ldr	r2, [fp, #-16]
   1ef38:	bl	11628 <strtoul@plt>
   1ef3c:	str	r0, [fp, #-32]	; 0xffffffe0
   1ef40:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ef44:	ldr	r0, [r0]
   1ef48:	ldr	r1, [fp, #-8]
   1ef4c:	cmp	r0, r1
   1ef50:	bne	1efb4 <__assert_fail@plt+0xd7dc>
   1ef54:	ldr	r0, [fp, #8]
   1ef58:	movw	r1, #0
   1ef5c:	cmp	r0, r1
   1ef60:	beq	1efa4 <__assert_fail@plt+0xd7cc>
   1ef64:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ef68:	ldr	r0, [r0]
   1ef6c:	ldrb	r0, [r0]
   1ef70:	cmp	r0, #0
   1ef74:	beq	1efa4 <__assert_fail@plt+0xd7cc>
   1ef78:	ldr	r0, [fp, #8]
   1ef7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ef80:	ldr	r1, [r1]
   1ef84:	ldrb	r1, [r1]
   1ef88:	bl	11640 <strchr@plt>
   1ef8c:	movw	r1, #0
   1ef90:	cmp	r0, r1
   1ef94:	beq	1efa4 <__assert_fail@plt+0xd7cc>
   1ef98:	movw	r0, #1
   1ef9c:	str	r0, [fp, #-32]	; 0xffffffe0
   1efa0:	b	1efb0 <__assert_fail@plt+0xd7d8>
   1efa4:	movw	r0, #4
   1efa8:	str	r0, [fp, #-4]
   1efac:	b	1f47c <__assert_fail@plt+0xdca4>
   1efb0:	b	1efec <__assert_fail@plt+0xd814>
   1efb4:	bl	11664 <__errno_location@plt>
   1efb8:	ldr	r0, [r0]
   1efbc:	cmp	r0, #0
   1efc0:	beq	1efe8 <__assert_fail@plt+0xd810>
   1efc4:	bl	11664 <__errno_location@plt>
   1efc8:	ldr	r0, [r0]
   1efcc:	cmp	r0, #34	; 0x22
   1efd0:	beq	1efe0 <__assert_fail@plt+0xd808>
   1efd4:	movw	r0, #4
   1efd8:	str	r0, [fp, #-4]
   1efdc:	b	1f47c <__assert_fail@plt+0xdca4>
   1efe0:	movw	r0, #1
   1efe4:	str	r0, [sp, #36]	; 0x24
   1efe8:	b	1efec <__assert_fail@plt+0xd814>
   1efec:	ldr	r0, [fp, #8]
   1eff0:	movw	r1, #0
   1eff4:	cmp	r0, r1
   1eff8:	bne	1f014 <__assert_fail@plt+0xd83c>
   1effc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f000:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f004:	str	r0, [r1]
   1f008:	ldr	r0, [sp, #36]	; 0x24
   1f00c:	str	r0, [fp, #-4]
   1f010:	b	1f47c <__assert_fail@plt+0xdca4>
   1f014:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f018:	ldr	r0, [r0]
   1f01c:	ldrb	r0, [r0]
   1f020:	cmp	r0, #0
   1f024:	beq	1f468 <__assert_fail@plt+0xdc90>
   1f028:	movw	r0, #1024	; 0x400
   1f02c:	str	r0, [sp, #24]
   1f030:	movw	r0, #1
   1f034:	str	r0, [sp, #20]
   1f038:	ldr	r0, [fp, #8]
   1f03c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f040:	ldr	r1, [r1]
   1f044:	ldrb	r1, [r1]
   1f048:	bl	11640 <strchr@plt>
   1f04c:	movw	r1, #0
   1f050:	cmp	r0, r1
   1f054:	bne	1f074 <__assert_fail@plt+0xd89c>
   1f058:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f05c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f060:	str	r0, [r1]
   1f064:	ldr	r0, [sp, #36]	; 0x24
   1f068:	orr	r0, r0, #2
   1f06c:	str	r0, [fp, #-4]
   1f070:	b	1f47c <__assert_fail@plt+0xdca4>
   1f074:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f078:	ldr	r0, [r0]
   1f07c:	ldrb	r0, [r0]
   1f080:	sub	r0, r0, #69	; 0x45
   1f084:	cmp	r0, #47	; 0x2f
   1f088:	str	r0, [sp, #8]
   1f08c:	bhi	1f1f8 <__assert_fail@plt+0xda20>
   1f090:	add	r0, pc, #8
   1f094:	ldr	r1, [sp, #8]
   1f098:	ldr	r0, [r0, r1, lsl #2]
   1f09c:	mov	pc, r0
   1f0a0:	andeq	pc, r1, r0, ror #2
   1f0a4:	strdeq	pc, [r1], -r8
   1f0a8:	andeq	pc, r1, r0, ror #2
   1f0ac:	strdeq	pc, [r1], -r8
   1f0b0:	strdeq	pc, [r1], -r8
   1f0b4:	strdeq	pc, [r1], -r8
   1f0b8:	andeq	pc, r1, r0, ror #2
   1f0bc:	strdeq	pc, [r1], -r8
   1f0c0:	andeq	pc, r1, r0, ror #2
   1f0c4:	strdeq	pc, [r1], -r8
   1f0c8:	strdeq	pc, [r1], -r8
   1f0cc:	andeq	pc, r1, r0, ror #2
   1f0d0:	strdeq	pc, [r1], -r8
   1f0d4:	strdeq	pc, [r1], -r8
   1f0d8:	strdeq	pc, [r1], -r8
   1f0dc:	andeq	pc, r1, r0, ror #2
   1f0e0:	strdeq	pc, [r1], -r8
   1f0e4:	strdeq	pc, [r1], -r8
   1f0e8:	strdeq	pc, [r1], -r8
   1f0ec:	strdeq	pc, [r1], -r8
   1f0f0:	andeq	pc, r1, r0, ror #2
   1f0f4:	andeq	pc, r1, r0, ror #2
   1f0f8:	strdeq	pc, [r1], -r8
   1f0fc:	strdeq	pc, [r1], -r8
   1f100:	strdeq	pc, [r1], -r8
   1f104:	strdeq	pc, [r1], -r8
   1f108:	strdeq	pc, [r1], -r8
   1f10c:	strdeq	pc, [r1], -r8
   1f110:	strdeq	pc, [r1], -r8
   1f114:	strdeq	pc, [r1], -r8
   1f118:	strdeq	pc, [r1], -r8
   1f11c:	strdeq	pc, [r1], -r8
   1f120:	strdeq	pc, [r1], -r8
   1f124:	strdeq	pc, [r1], -r8
   1f128:	andeq	pc, r1, r0, ror #2
   1f12c:	strdeq	pc, [r1], -r8
   1f130:	strdeq	pc, [r1], -r8
   1f134:	strdeq	pc, [r1], -r8
   1f138:	andeq	pc, r1, r0, ror #2
   1f13c:	strdeq	pc, [r1], -r8
   1f140:	andeq	pc, r1, r0, ror #2
   1f144:	strdeq	pc, [r1], -r8
   1f148:	strdeq	pc, [r1], -r8
   1f14c:	strdeq	pc, [r1], -r8
   1f150:	strdeq	pc, [r1], -r8
   1f154:	strdeq	pc, [r1], -r8
   1f158:	strdeq	pc, [r1], -r8
   1f15c:	andeq	pc, r1, r0, ror #2
   1f160:	ldr	r0, [fp, #8]
   1f164:	movw	r1, #48	; 0x30
   1f168:	bl	11640 <strchr@plt>
   1f16c:	movw	r1, #0
   1f170:	cmp	r0, r1
   1f174:	beq	1f1f4 <__assert_fail@plt+0xda1c>
   1f178:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f17c:	ldr	r0, [r0]
   1f180:	ldrb	r0, [r0, #1]
   1f184:	mov	r1, r0
   1f188:	cmp	r0, #66	; 0x42
   1f18c:	str	r1, [sp, #4]
   1f190:	beq	1f1dc <__assert_fail@plt+0xda04>
   1f194:	b	1f198 <__assert_fail@plt+0xd9c0>
   1f198:	ldr	r0, [sp, #4]
   1f19c:	cmp	r0, #68	; 0x44
   1f1a0:	beq	1f1dc <__assert_fail@plt+0xda04>
   1f1a4:	b	1f1a8 <__assert_fail@plt+0xd9d0>
   1f1a8:	ldr	r0, [sp, #4]
   1f1ac:	cmp	r0, #105	; 0x69
   1f1b0:	bne	1f1f0 <__assert_fail@plt+0xda18>
   1f1b4:	b	1f1b8 <__assert_fail@plt+0xd9e0>
   1f1b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f1bc:	ldr	r0, [r0]
   1f1c0:	ldrb	r0, [r0, #2]
   1f1c4:	cmp	r0, #66	; 0x42
   1f1c8:	bne	1f1d8 <__assert_fail@plt+0xda00>
   1f1cc:	ldr	r0, [sp, #20]
   1f1d0:	add	r0, r0, #2
   1f1d4:	str	r0, [sp, #20]
   1f1d8:	b	1f1f0 <__assert_fail@plt+0xda18>
   1f1dc:	movw	r0, #1000	; 0x3e8
   1f1e0:	str	r0, [sp, #24]
   1f1e4:	ldr	r0, [sp, #20]
   1f1e8:	add	r0, r0, #1
   1f1ec:	str	r0, [sp, #20]
   1f1f0:	b	1f1f4 <__assert_fail@plt+0xda1c>
   1f1f4:	b	1f1f8 <__assert_fail@plt+0xda20>
   1f1f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f1fc:	ldr	r0, [r0]
   1f200:	ldrb	r0, [r0]
   1f204:	sub	r0, r0, #66	; 0x42
   1f208:	cmp	r0, #53	; 0x35
   1f20c:	str	r0, [sp]
   1f210:	bhi	1f404 <__assert_fail@plt+0xdc2c>
   1f214:	add	r0, pc, #8
   1f218:	ldr	r1, [sp]
   1f21c:	ldr	r0, [r0, r1, lsl #2]
   1f220:	mov	pc, r0
   1f224:	andeq	pc, r1, r0, lsl r3	; <UNPREDICTABLE>
   1f228:	andeq	pc, r1, r4, lsl #8
   1f22c:	andeq	pc, r1, r4, lsl #8
   1f230:	andeq	pc, r1, r0, lsr r3	; <UNPREDICTABLE>
   1f234:	andeq	pc, r1, r4, lsl #8
   1f238:	andeq	pc, r1, r8, asr #6
   1f23c:	andeq	pc, r1, r4, lsl #8
   1f240:	andeq	pc, r1, r4, lsl #8
   1f244:	andeq	pc, r1, r4, lsl #8
   1f248:	andeq	pc, r1, r0, ror #6
   1f24c:	andeq	pc, r1, r4, lsl #8
   1f250:	andeq	pc, r1, r8, ror r3	; <UNPREDICTABLE>
   1f254:	andeq	pc, r1, r4, lsl #8
   1f258:	andeq	pc, r1, r4, lsl #8
   1f25c:	muleq	r1, r0, r3
   1f260:	andeq	pc, r1, r4, lsl #8
   1f264:	andeq	pc, r1, r4, lsl #8
   1f268:	andeq	pc, r1, r4, lsl #8
   1f26c:	andeq	pc, r1, r8, lsr #7
   1f270:	andeq	pc, r1, r4, lsl #8
   1f274:	andeq	pc, r1, r4, lsl #8
   1f278:	andeq	pc, r1, r4, lsl #8
   1f27c:	andeq	pc, r1, r4, lsl #8
   1f280:	ldrdeq	pc, [r1], -r4
   1f284:	andeq	pc, r1, ip, ror #7
   1f288:	andeq	pc, r1, r4, lsl #8
   1f28c:	andeq	pc, r1, r4, lsl #8
   1f290:	andeq	pc, r1, r4, lsl #8
   1f294:	andeq	pc, r1, r4, lsl #8
   1f298:	andeq	pc, r1, r4, lsl #8
   1f29c:	andeq	pc, r1, r4, lsl #8
   1f2a0:	andeq	pc, r1, r4, lsl #8
   1f2a4:	strdeq	pc, [r1], -ip
   1f2a8:	andeq	pc, r1, r4, lsr #6
   1f2ac:	andeq	pc, r1, r4, lsl #8
   1f2b0:	andeq	pc, r1, r4, lsl #8
   1f2b4:	andeq	pc, r1, r4, lsl #8
   1f2b8:	andeq	pc, r1, r8, asr #6
   1f2bc:	andeq	pc, r1, r4, lsl #8
   1f2c0:	andeq	pc, r1, r4, lsl #8
   1f2c4:	andeq	pc, r1, r4, lsl #8
   1f2c8:	andeq	pc, r1, r0, ror #6
   1f2cc:	andeq	pc, r1, r4, lsl #8
   1f2d0:	andeq	pc, r1, r8, ror r3	; <UNPREDICTABLE>
   1f2d4:	andeq	pc, r1, r4, lsl #8
   1f2d8:	andeq	pc, r1, r4, lsl #8
   1f2dc:	andeq	pc, r1, r4, lsl #8
   1f2e0:	andeq	pc, r1, r4, lsl #8
   1f2e4:	andeq	pc, r1, r4, lsl #8
   1f2e8:	andeq	pc, r1, r4, lsl #8
   1f2ec:	andeq	pc, r1, r8, lsr #7
   1f2f0:	andeq	pc, r1, r4, lsl #8
   1f2f4:	andeq	pc, r1, r4, lsl #8
   1f2f8:	andeq	pc, r1, r0, asr #7
   1f2fc:	sub	r0, fp, #32
   1f300:	movw	r1, #512	; 0x200
   1f304:	bl	1f488 <__assert_fail@plt+0xdcb0>
   1f308:	str	r0, [sp, #16]
   1f30c:	b	1f420 <__assert_fail@plt+0xdc48>
   1f310:	sub	r0, fp, #32
   1f314:	movw	r1, #1024	; 0x400
   1f318:	bl	1f488 <__assert_fail@plt+0xdcb0>
   1f31c:	str	r0, [sp, #16]
   1f320:	b	1f420 <__assert_fail@plt+0xdc48>
   1f324:	movw	r0, #0
   1f328:	str	r0, [sp, #16]
   1f32c:	b	1f420 <__assert_fail@plt+0xdc48>
   1f330:	ldr	r1, [sp, #24]
   1f334:	sub	r0, fp, #32
   1f338:	movw	r2, #6
   1f33c:	bl	1f4f0 <__assert_fail@plt+0xdd18>
   1f340:	str	r0, [sp, #16]
   1f344:	b	1f420 <__assert_fail@plt+0xdc48>
   1f348:	ldr	r1, [sp, #24]
   1f34c:	sub	r0, fp, #32
   1f350:	movw	r2, #3
   1f354:	bl	1f4f0 <__assert_fail@plt+0xdd18>
   1f358:	str	r0, [sp, #16]
   1f35c:	b	1f420 <__assert_fail@plt+0xdc48>
   1f360:	ldr	r1, [sp, #24]
   1f364:	sub	r0, fp, #32
   1f368:	movw	r2, #1
   1f36c:	bl	1f4f0 <__assert_fail@plt+0xdd18>
   1f370:	str	r0, [sp, #16]
   1f374:	b	1f420 <__assert_fail@plt+0xdc48>
   1f378:	ldr	r1, [sp, #24]
   1f37c:	sub	r0, fp, #32
   1f380:	movw	r2, #2
   1f384:	bl	1f4f0 <__assert_fail@plt+0xdd18>
   1f388:	str	r0, [sp, #16]
   1f38c:	b	1f420 <__assert_fail@plt+0xdc48>
   1f390:	ldr	r1, [sp, #24]
   1f394:	sub	r0, fp, #32
   1f398:	movw	r2, #5
   1f39c:	bl	1f4f0 <__assert_fail@plt+0xdd18>
   1f3a0:	str	r0, [sp, #16]
   1f3a4:	b	1f420 <__assert_fail@plt+0xdc48>
   1f3a8:	ldr	r1, [sp, #24]
   1f3ac:	sub	r0, fp, #32
   1f3b0:	movw	r2, #4
   1f3b4:	bl	1f4f0 <__assert_fail@plt+0xdd18>
   1f3b8:	str	r0, [sp, #16]
   1f3bc:	b	1f420 <__assert_fail@plt+0xdc48>
   1f3c0:	sub	r0, fp, #32
   1f3c4:	movw	r1, #2
   1f3c8:	bl	1f488 <__assert_fail@plt+0xdcb0>
   1f3cc:	str	r0, [sp, #16]
   1f3d0:	b	1f420 <__assert_fail@plt+0xdc48>
   1f3d4:	ldr	r1, [sp, #24]
   1f3d8:	sub	r0, fp, #32
   1f3dc:	movw	r2, #8
   1f3e0:	bl	1f4f0 <__assert_fail@plt+0xdd18>
   1f3e4:	str	r0, [sp, #16]
   1f3e8:	b	1f420 <__assert_fail@plt+0xdc48>
   1f3ec:	ldr	r1, [sp, #24]
   1f3f0:	sub	r0, fp, #32
   1f3f4:	movw	r2, #7
   1f3f8:	bl	1f4f0 <__assert_fail@plt+0xdd18>
   1f3fc:	str	r0, [sp, #16]
   1f400:	b	1f420 <__assert_fail@plt+0xdc48>
   1f404:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f408:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f40c:	str	r0, [r1]
   1f410:	ldr	r0, [sp, #36]	; 0x24
   1f414:	orr	r0, r0, #2
   1f418:	str	r0, [fp, #-4]
   1f41c:	b	1f47c <__assert_fail@plt+0xdca4>
   1f420:	ldr	r0, [sp, #16]
   1f424:	ldr	r1, [sp, #36]	; 0x24
   1f428:	orr	r0, r1, r0
   1f42c:	str	r0, [sp, #36]	; 0x24
   1f430:	ldr	r0, [sp, #20]
   1f434:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f438:	ldr	r2, [r1]
   1f43c:	add	r0, r2, r0
   1f440:	str	r0, [r1]
   1f444:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f448:	ldr	r0, [r0]
   1f44c:	ldrsb	r0, [r0]
   1f450:	cmp	r0, #0
   1f454:	beq	1f464 <__assert_fail@plt+0xdc8c>
   1f458:	ldr	r0, [sp, #36]	; 0x24
   1f45c:	orr	r0, r0, #2
   1f460:	str	r0, [sp, #36]	; 0x24
   1f464:	b	1f468 <__assert_fail@plt+0xdc90>
   1f468:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f46c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f470:	str	r0, [r1]
   1f474:	ldr	r0, [sp, #36]	; 0x24
   1f478:	str	r0, [fp, #-4]
   1f47c:	ldr	r0, [fp, #-4]
   1f480:	mov	sp, fp
   1f484:	pop	{fp, pc}
   1f488:	sub	sp, sp, #12
   1f48c:	str	r0, [sp, #4]
   1f490:	str	r1, [sp]
   1f494:	ldr	r0, [sp]
   1f498:	mvn	r1, #0
   1f49c:	udiv	r0, r1, r0
   1f4a0:	ldr	r1, [sp, #4]
   1f4a4:	ldr	r1, [r1]
   1f4a8:	cmp	r0, r1
   1f4ac:	bcs	1f4c8 <__assert_fail@plt+0xdcf0>
   1f4b0:	ldr	r0, [sp, #4]
   1f4b4:	mvn	r1, #0
   1f4b8:	str	r1, [r0]
   1f4bc:	movw	r0, #1
   1f4c0:	str	r0, [sp, #8]
   1f4c4:	b	1f4e4 <__assert_fail@plt+0xdd0c>
   1f4c8:	ldr	r0, [sp]
   1f4cc:	ldr	r1, [sp, #4]
   1f4d0:	ldr	r2, [r1]
   1f4d4:	mul	r0, r2, r0
   1f4d8:	str	r0, [r1]
   1f4dc:	movw	r0, #0
   1f4e0:	str	r0, [sp, #8]
   1f4e4:	ldr	r0, [sp, #8]
   1f4e8:	add	sp, sp, #12
   1f4ec:	bx	lr
   1f4f0:	push	{fp, lr}
   1f4f4:	mov	fp, sp
   1f4f8:	sub	sp, sp, #16
   1f4fc:	str	r0, [fp, #-4]
   1f500:	str	r1, [sp, #8]
   1f504:	str	r2, [sp, #4]
   1f508:	movw	r0, #0
   1f50c:	str	r0, [sp]
   1f510:	ldr	r0, [sp, #4]
   1f514:	mvn	r1, #0
   1f518:	add	r1, r0, r1
   1f51c:	str	r1, [sp, #4]
   1f520:	cmp	r0, #0
   1f524:	beq	1f544 <__assert_fail@plt+0xdd6c>
   1f528:	ldr	r0, [fp, #-4]
   1f52c:	ldr	r1, [sp, #8]
   1f530:	bl	1f488 <__assert_fail@plt+0xdcb0>
   1f534:	ldr	r1, [sp]
   1f538:	orr	r0, r1, r0
   1f53c:	str	r0, [sp]
   1f540:	b	1f510 <__assert_fail@plt+0xdd38>
   1f544:	ldr	r0, [sp]
   1f548:	mov	sp, fp
   1f54c:	pop	{fp, pc}
   1f550:	push	{fp, lr}
   1f554:	mov	fp, sp
   1f558:	sub	sp, sp, #16
   1f55c:	str	r0, [sp, #8]
   1f560:	str	r1, [sp, #4]
   1f564:	ldr	r0, [sp, #8]
   1f568:	cmp	r0, #0
   1f56c:	beq	1f57c <__assert_fail@plt+0xdda4>
   1f570:	ldr	r0, [sp, #4]
   1f574:	cmp	r0, #0
   1f578:	bne	1f588 <__assert_fail@plt+0xddb0>
   1f57c:	movw	r0, #1
   1f580:	str	r0, [sp, #4]
   1f584:	str	r0, [sp, #8]
   1f588:	ldr	r0, [sp, #4]
   1f58c:	cmp	r0, #0
   1f590:	beq	1f5c4 <__assert_fail@plt+0xddec>
   1f594:	ldr	r0, [pc, #76]	; 1f5e8 <__assert_fail@plt+0xde10>
   1f598:	ldr	r1, [sp, #4]
   1f59c:	udiv	r0, r0, r1
   1f5a0:	ldr	r1, [sp, #8]
   1f5a4:	cmp	r0, r1
   1f5a8:	bcs	1f5c4 <__assert_fail@plt+0xddec>
   1f5ac:	bl	11664 <__errno_location@plt>
   1f5b0:	movw	r1, #12
   1f5b4:	str	r1, [r0]
   1f5b8:	movw	r0, #0
   1f5bc:	str	r0, [fp, #-4]
   1f5c0:	b	1f5dc <__assert_fail@plt+0xde04>
   1f5c4:	ldr	r0, [sp, #8]
   1f5c8:	ldr	r1, [sp, #4]
   1f5cc:	bl	11418 <calloc@plt>
   1f5d0:	str	r0, [sp]
   1f5d4:	ldr	r0, [sp]
   1f5d8:	str	r0, [fp, #-4]
   1f5dc:	ldr	r0, [fp, #-4]
   1f5e0:	mov	sp, fp
   1f5e4:	pop	{fp, pc}
   1f5e8:	svcvc	0x00ffffff
   1f5ec:	sub	sp, sp, #8
   1f5f0:	push	{fp, lr}
   1f5f4:	mov	fp, sp
   1f5f8:	sub	sp, sp, #48	; 0x30
   1f5fc:	str	r3, [fp, #12]
   1f600:	str	r2, [fp, #8]
   1f604:	str	r0, [fp, #-4]
   1f608:	str	r1, [fp, #-8]
   1f60c:	mvn	r0, #0
   1f610:	str	r0, [fp, #-16]
   1f614:	add	r0, fp, #8
   1f618:	str	r0, [fp, #-12]
   1f61c:	ldr	r0, [fp, #-8]
   1f620:	cmp	r0, #0
   1f624:	str	r0, [sp, #12]
   1f628:	beq	1f644 <__assert_fail@plt+0xde6c>
   1f62c:	b	1f630 <__assert_fail@plt+0xde58>
   1f630:	movw	r0, #1030	; 0x406
   1f634:	ldr	r1, [sp, #12]
   1f638:	cmp	r1, r0
   1f63c:	beq	1f66c <__assert_fail@plt+0xde94>
   1f640:	b	1f694 <__assert_fail@plt+0xdebc>
   1f644:	ldr	r0, [fp, #-12]
   1f648:	add	r1, r0, #4
   1f64c:	str	r1, [fp, #-12]
   1f650:	ldr	r0, [r0]
   1f654:	str	r0, [fp, #-20]	; 0xffffffec
   1f658:	ldr	r0, [fp, #-4]
   1f65c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f660:	bl	1f840 <__assert_fail@plt+0xe068>
   1f664:	str	r0, [fp, #-16]
   1f668:	b	1f820 <__assert_fail@plt+0xe048>
   1f66c:	ldr	r0, [fp, #-12]
   1f670:	add	r1, r0, #4
   1f674:	str	r1, [fp, #-12]
   1f678:	ldr	r0, [r0]
   1f67c:	str	r0, [sp, #24]
   1f680:	ldr	r0, [fp, #-4]
   1f684:	ldr	r1, [sp, #24]
   1f688:	bl	1f874 <__assert_fail@plt+0xe09c>
   1f68c:	str	r0, [fp, #-16]
   1f690:	b	1f820 <__assert_fail@plt+0xe048>
   1f694:	ldr	r0, [fp, #-8]
   1f698:	cmp	r0, #0
   1f69c:	str	r0, [sp, #8]
   1f6a0:	beq	1f7c8 <__assert_fail@plt+0xdff0>
   1f6a4:	b	1f6a8 <__assert_fail@plt+0xded0>
   1f6a8:	ldr	r0, [sp, #8]
   1f6ac:	cmp	r0, #1
   1f6b0:	beq	1f7b4 <__assert_fail@plt+0xdfdc>
   1f6b4:	b	1f6b8 <__assert_fail@plt+0xdee0>
   1f6b8:	ldr	r0, [sp, #8]
   1f6bc:	cmp	r0, #2
   1f6c0:	beq	1f7c8 <__assert_fail@plt+0xdff0>
   1f6c4:	b	1f6c8 <__assert_fail@plt+0xdef0>
   1f6c8:	ldr	r0, [sp, #8]
   1f6cc:	cmp	r0, #3
   1f6d0:	beq	1f7b4 <__assert_fail@plt+0xdfdc>
   1f6d4:	b	1f6d8 <__assert_fail@plt+0xdf00>
   1f6d8:	ldr	r0, [sp, #8]
   1f6dc:	cmp	r0, #4
   1f6e0:	beq	1f7c8 <__assert_fail@plt+0xdff0>
   1f6e4:	b	1f6e8 <__assert_fail@plt+0xdf10>
   1f6e8:	ldr	r0, [sp, #8]
   1f6ec:	cmp	r0, #8
   1f6f0:	beq	1f7c8 <__assert_fail@plt+0xdff0>
   1f6f4:	b	1f6f8 <__assert_fail@plt+0xdf20>
   1f6f8:	ldr	r0, [sp, #8]
   1f6fc:	cmp	r0, #9
   1f700:	beq	1f7b4 <__assert_fail@plt+0xdfdc>
   1f704:	b	1f708 <__assert_fail@plt+0xdf30>
   1f708:	ldr	r0, [sp, #8]
   1f70c:	cmp	r0, #10
   1f710:	beq	1f7c8 <__assert_fail@plt+0xdff0>
   1f714:	b	1f718 <__assert_fail@plt+0xdf40>
   1f718:	ldr	r0, [sp, #8]
   1f71c:	cmp	r0, #11
   1f720:	beq	1f7b4 <__assert_fail@plt+0xdfdc>
   1f724:	b	1f728 <__assert_fail@plt+0xdf50>
   1f728:	ldr	r0, [sp, #8]
   1f72c:	cmp	r0, #1024	; 0x400
   1f730:	beq	1f7c8 <__assert_fail@plt+0xdff0>
   1f734:	b	1f738 <__assert_fail@plt+0xdf60>
   1f738:	movw	r0, #1025	; 0x401
   1f73c:	ldr	r1, [sp, #8]
   1f740:	cmp	r1, r0
   1f744:	beq	1f7b4 <__assert_fail@plt+0xdfdc>
   1f748:	b	1f74c <__assert_fail@plt+0xdf74>
   1f74c:	movw	r0, #1026	; 0x402
   1f750:	ldr	r1, [sp, #8]
   1f754:	cmp	r1, r0
   1f758:	beq	1f7c8 <__assert_fail@plt+0xdff0>
   1f75c:	b	1f760 <__assert_fail@plt+0xdf88>
   1f760:	movw	r0, #1030	; 0x406
   1f764:	ldr	r1, [sp, #8]
   1f768:	sub	r0, r1, r0
   1f76c:	cmp	r0, #2
   1f770:	bcc	1f7c8 <__assert_fail@plt+0xdff0>
   1f774:	b	1f778 <__assert_fail@plt+0xdfa0>
   1f778:	movw	r0, #1032	; 0x408
   1f77c:	ldr	r1, [sp, #8]
   1f780:	cmp	r1, r0
   1f784:	beq	1f7b4 <__assert_fail@plt+0xdfdc>
   1f788:	b	1f78c <__assert_fail@plt+0xdfb4>
   1f78c:	movw	r0, #1033	; 0x409
   1f790:	ldr	r1, [sp, #8]
   1f794:	cmp	r1, r0
   1f798:	beq	1f7c8 <__assert_fail@plt+0xdff0>
   1f79c:	b	1f7a0 <__assert_fail@plt+0xdfc8>
   1f7a0:	movw	r0, #1034	; 0x40a
   1f7a4:	ldr	r1, [sp, #8]
   1f7a8:	cmp	r1, r0
   1f7ac:	bne	1f7f4 <__assert_fail@plt+0xe01c>
   1f7b0:	b	1f7b4 <__assert_fail@plt+0xdfdc>
   1f7b4:	ldr	r0, [fp, #-4]
   1f7b8:	ldr	r1, [fp, #-8]
   1f7bc:	bl	116f4 <fcntl64@plt>
   1f7c0:	str	r0, [fp, #-16]
   1f7c4:	b	1f81c <__assert_fail@plt+0xe044>
   1f7c8:	ldr	r0, [fp, #-12]
   1f7cc:	add	r1, r0, #4
   1f7d0:	str	r1, [fp, #-12]
   1f7d4:	ldr	r0, [r0]
   1f7d8:	str	r0, [sp, #20]
   1f7dc:	ldr	r0, [fp, #-4]
   1f7e0:	ldr	r1, [fp, #-8]
   1f7e4:	ldr	r2, [sp, #20]
   1f7e8:	bl	116f4 <fcntl64@plt>
   1f7ec:	str	r0, [fp, #-16]
   1f7f0:	b	1f81c <__assert_fail@plt+0xe044>
   1f7f4:	ldr	r0, [fp, #-12]
   1f7f8:	add	r1, r0, #4
   1f7fc:	str	r1, [fp, #-12]
   1f800:	ldr	r0, [r0]
   1f804:	str	r0, [sp, #16]
   1f808:	ldr	r0, [fp, #-4]
   1f80c:	ldr	r1, [fp, #-8]
   1f810:	ldr	r2, [sp, #16]
   1f814:	bl	116f4 <fcntl64@plt>
   1f818:	str	r0, [fp, #-16]
   1f81c:	b	1f820 <__assert_fail@plt+0xe048>
   1f820:	sub	r0, fp, #12
   1f824:	ldr	r1, [fp, #-16]
   1f828:	str	r0, [sp, #4]
   1f82c:	mov	r0, r1
   1f830:	mov	sp, fp
   1f834:	pop	{fp, lr}
   1f838:	add	sp, sp, #8
   1f83c:	bx	lr
   1f840:	push	{fp, lr}
   1f844:	mov	fp, sp
   1f848:	sub	sp, sp, #16
   1f84c:	str	r0, [fp, #-4]
   1f850:	str	r1, [sp, #8]
   1f854:	ldr	r0, [fp, #-4]
   1f858:	ldr	r2, [sp, #8]
   1f85c:	movw	r1, #0
   1f860:	bl	116f4 <fcntl64@plt>
   1f864:	str	r0, [sp, #4]
   1f868:	ldr	r0, [sp, #4]
   1f86c:	mov	sp, fp
   1f870:	pop	{fp, pc}
   1f874:	push	{fp, lr}
   1f878:	mov	fp, sp
   1f87c:	sub	sp, sp, #32
   1f880:	str	r0, [fp, #-4]
   1f884:	str	r1, [fp, #-8]
   1f888:	movw	r0, #21476	; 0x53e4
   1f88c:	movt	r0, #3
   1f890:	ldr	r0, [r0]
   1f894:	movw	r1, #0
   1f898:	cmp	r1, r0
   1f89c:	bgt	1f91c <__assert_fail@plt+0xe144>
   1f8a0:	ldr	r0, [fp, #-4]
   1f8a4:	ldr	r2, [fp, #-8]
   1f8a8:	movw	r1, #1030	; 0x406
   1f8ac:	bl	116f4 <fcntl64@plt>
   1f8b0:	str	r0, [fp, #-12]
   1f8b4:	ldr	r0, [fp, #-12]
   1f8b8:	movw	r1, #0
   1f8bc:	cmp	r1, r0
   1f8c0:	ble	1f8d4 <__assert_fail@plt+0xe0fc>
   1f8c4:	bl	11664 <__errno_location@plt>
   1f8c8:	ldr	r0, [r0]
   1f8cc:	cmp	r0, #22
   1f8d0:	beq	1f8e8 <__assert_fail@plt+0xe110>
   1f8d4:	movw	r0, #21476	; 0x53e4
   1f8d8:	movt	r0, #3
   1f8dc:	movw	r1, #1
   1f8e0:	str	r1, [r0]
   1f8e4:	b	1f918 <__assert_fail@plt+0xe140>
   1f8e8:	ldr	r0, [fp, #-4]
   1f8ec:	ldr	r1, [fp, #-8]
   1f8f0:	bl	1f840 <__assert_fail@plt+0xe068>
   1f8f4:	str	r0, [fp, #-12]
   1f8f8:	ldr	r0, [fp, #-12]
   1f8fc:	cmp	r0, #0
   1f900:	blt	1f914 <__assert_fail@plt+0xe13c>
   1f904:	movw	r0, #21476	; 0x53e4
   1f908:	movt	r0, #3
   1f90c:	mvn	r1, #0
   1f910:	str	r1, [r0]
   1f914:	b	1f918 <__assert_fail@plt+0xe140>
   1f918:	b	1f92c <__assert_fail@plt+0xe154>
   1f91c:	ldr	r0, [fp, #-4]
   1f920:	ldr	r1, [fp, #-8]
   1f924:	bl	1f840 <__assert_fail@plt+0xe068>
   1f928:	str	r0, [fp, #-12]
   1f92c:	ldr	r0, [fp, #-12]
   1f930:	movw	r1, #0
   1f934:	cmp	r1, r0
   1f938:	bgt	1f9c0 <__assert_fail@plt+0xe1e8>
   1f93c:	movw	r0, #21476	; 0x53e4
   1f940:	movt	r0, #3
   1f944:	ldr	r0, [r0]
   1f948:	cmn	r0, #1
   1f94c:	bne	1f9c0 <__assert_fail@plt+0xe1e8>
   1f950:	ldr	r0, [fp, #-12]
   1f954:	movw	r1, #1
   1f958:	bl	116f4 <fcntl64@plt>
   1f95c:	str	r0, [sp, #16]
   1f960:	ldr	r0, [sp, #16]
   1f964:	cmp	r0, #0
   1f968:	blt	1f988 <__assert_fail@plt+0xe1b0>
   1f96c:	ldr	r0, [fp, #-12]
   1f970:	ldr	r1, [sp, #16]
   1f974:	orr	r2, r1, #1
   1f978:	movw	r1, #2
   1f97c:	bl	116f4 <fcntl64@plt>
   1f980:	cmn	r0, #1
   1f984:	bne	1f9bc <__assert_fail@plt+0xe1e4>
   1f988:	bl	11664 <__errno_location@plt>
   1f98c:	ldr	r0, [r0]
   1f990:	str	r0, [sp, #12]
   1f994:	ldr	r0, [fp, #-12]
   1f998:	bl	117c0 <close@plt>
   1f99c:	ldr	r1, [sp, #12]
   1f9a0:	str	r0, [sp, #8]
   1f9a4:	str	r1, [sp, #4]
   1f9a8:	bl	11664 <__errno_location@plt>
   1f9ac:	ldr	r1, [sp, #4]
   1f9b0:	str	r1, [r0]
   1f9b4:	mvn	r0, #0
   1f9b8:	str	r0, [fp, #-12]
   1f9bc:	b	1f9c0 <__assert_fail@plt+0xe1e8>
   1f9c0:	ldr	r0, [fp, #-12]
   1f9c4:	mov	sp, fp
   1f9c8:	pop	{fp, pc}
   1f9cc:	push	{fp, lr}
   1f9d0:	mov	fp, sp
   1f9d4:	sub	sp, sp, #8
   1f9d8:	str	r0, [sp]
   1f9dc:	ldr	r0, [sp]
   1f9e0:	movw	r1, #0
   1f9e4:	cmp	r0, r1
   1f9e8:	beq	1f9fc <__assert_fail@plt+0xe224>
   1f9ec:	ldr	r0, [sp]
   1f9f0:	bl	115d4 <__freading@plt>
   1f9f4:	cmp	r0, #0
   1f9f8:	bne	1fa0c <__assert_fail@plt+0xe234>
   1f9fc:	ldr	r0, [sp]
   1fa00:	bl	11460 <fflush@plt>
   1fa04:	str	r0, [sp, #4]
   1fa08:	b	1fa20 <__assert_fail@plt+0xe248>
   1fa0c:	ldr	r0, [sp]
   1fa10:	bl	1fa2c <__assert_fail@plt+0xe254>
   1fa14:	ldr	r0, [sp]
   1fa18:	bl	11460 <fflush@plt>
   1fa1c:	str	r0, [sp, #4]
   1fa20:	ldr	r0, [sp, #4]
   1fa24:	mov	sp, fp
   1fa28:	pop	{fp, pc}
   1fa2c:	push	{fp, lr}
   1fa30:	mov	fp, sp
   1fa34:	sub	sp, sp, #8
   1fa38:	str	r0, [sp, #4]
   1fa3c:	ldr	r0, [sp, #4]
   1fa40:	ldr	r0, [r0]
   1fa44:	and	r0, r0, #256	; 0x100
   1fa48:	cmp	r0, #0
   1fa4c:	beq	1fa70 <__assert_fail@plt+0xe298>
   1fa50:	ldr	r0, [sp, #4]
   1fa54:	mov	r1, sp
   1fa58:	mov	r2, #1
   1fa5c:	str	r2, [r1]
   1fa60:	mov	r1, #0
   1fa64:	mov	r2, r1
   1fa68:	mov	r3, r1
   1fa6c:	bl	1fb54 <__assert_fail@plt+0xe37c>
   1fa70:	mov	sp, fp
   1fa74:	pop	{fp, pc}
   1fa78:	sub	sp, sp, #16
   1fa7c:	str	r0, [sp, #8]
   1fa80:	ldr	r0, [sp, #8]
   1fa84:	ldr	r0, [r0, #20]
   1fa88:	ldr	r1, [sp, #8]
   1fa8c:	ldr	r1, [r1, #16]
   1fa90:	cmp	r0, r1
   1fa94:	bls	1faa4 <__assert_fail@plt+0xe2cc>
   1fa98:	movw	r0, #0
   1fa9c:	str	r0, [sp, #12]
   1faa0:	b	1fb08 <__assert_fail@plt+0xe330>
   1faa4:	ldr	r0, [sp, #8]
   1faa8:	ldr	r0, [r0, #8]
   1faac:	ldr	r1, [sp, #8]
   1fab0:	ldr	r1, [r1, #4]
   1fab4:	sub	r0, r0, r1
   1fab8:	ldr	r1, [sp, #8]
   1fabc:	ldr	r1, [r1]
   1fac0:	and	r1, r1, #256	; 0x100
   1fac4:	cmp	r1, #0
   1fac8:	str	r0, [sp, #4]
   1facc:	beq	1faec <__assert_fail@plt+0xe314>
   1fad0:	ldr	r0, [sp, #8]
   1fad4:	ldr	r0, [r0, #44]	; 0x2c
   1fad8:	ldr	r1, [sp, #8]
   1fadc:	ldr	r1, [r1, #36]	; 0x24
   1fae0:	sub	r0, r0, r1
   1fae4:	str	r0, [sp]
   1fae8:	b	1faf8 <__assert_fail@plt+0xe320>
   1faec:	movw	r0, #0
   1faf0:	str	r0, [sp]
   1faf4:	b	1faf8 <__assert_fail@plt+0xe320>
   1faf8:	ldr	r0, [sp]
   1fafc:	ldr	r1, [sp, #4]
   1fb00:	add	r0, r1, r0
   1fb04:	str	r0, [sp, #12]
   1fb08:	ldr	r0, [sp, #12]
   1fb0c:	add	sp, sp, #16
   1fb10:	bx	lr
   1fb14:	push	{fp, lr}
   1fb18:	mov	fp, sp
   1fb1c:	sub	sp, sp, #16
   1fb20:	str	r0, [fp, #-4]
   1fb24:	bl	11664 <__errno_location@plt>
   1fb28:	ldr	r0, [r0]
   1fb2c:	str	r0, [sp, #8]
   1fb30:	ldr	r0, [fp, #-4]
   1fb34:	bl	11478 <free@plt>
   1fb38:	ldr	r0, [sp, #8]
   1fb3c:	str	r0, [sp, #4]
   1fb40:	bl	11664 <__errno_location@plt>
   1fb44:	ldr	r1, [sp, #4]
   1fb48:	str	r1, [r0]
   1fb4c:	mov	sp, fp
   1fb50:	pop	{fp, pc}
   1fb54:	push	{fp, lr}
   1fb58:	mov	fp, sp
   1fb5c:	sub	sp, sp, #32
   1fb60:	ldr	r1, [fp, #8]
   1fb64:	str	r0, [fp, #-8]
   1fb68:	str	r3, [sp, #20]
   1fb6c:	str	r2, [sp, #16]
   1fb70:	ldr	r0, [fp, #-8]
   1fb74:	ldr	r0, [r0, #8]
   1fb78:	ldr	r2, [fp, #-8]
   1fb7c:	ldr	r2, [r2, #4]
   1fb80:	cmp	r0, r2
   1fb84:	bne	1fc30 <__assert_fail@plt+0xe458>
   1fb88:	ldr	r0, [fp, #-8]
   1fb8c:	ldr	r0, [r0, #20]
   1fb90:	ldr	r1, [fp, #-8]
   1fb94:	ldr	r1, [r1, #16]
   1fb98:	cmp	r0, r1
   1fb9c:	bne	1fc30 <__assert_fail@plt+0xe458>
   1fba0:	ldr	r0, [fp, #-8]
   1fba4:	ldr	r0, [r0, #36]	; 0x24
   1fba8:	movw	r1, #0
   1fbac:	cmp	r0, r1
   1fbb0:	bne	1fc30 <__assert_fail@plt+0xe458>
   1fbb4:	ldr	r0, [fp, #-8]
   1fbb8:	bl	116ac <fileno@plt>
   1fbbc:	ldr	r2, [sp, #16]
   1fbc0:	ldr	r3, [sp, #20]
   1fbc4:	ldr	r1, [fp, #8]
   1fbc8:	mov	ip, sp
   1fbcc:	str	r1, [ip]
   1fbd0:	bl	11544 <lseek64@plt>
   1fbd4:	str	r1, [sp, #12]
   1fbd8:	str	r0, [sp, #8]
   1fbdc:	ldr	r0, [sp, #8]
   1fbe0:	ldr	r1, [sp, #12]
   1fbe4:	and	r0, r0, r1
   1fbe8:	cmn	r0, #1
   1fbec:	bne	1fc00 <__assert_fail@plt+0xe428>
   1fbf0:	b	1fbf4 <__assert_fail@plt+0xe41c>
   1fbf4:	mvn	r0, #0
   1fbf8:	str	r0, [fp, #-4]
   1fbfc:	b	1fc50 <__assert_fail@plt+0xe478>
   1fc00:	ldr	r0, [fp, #-8]
   1fc04:	ldr	r1, [r0]
   1fc08:	bic	r1, r1, #16
   1fc0c:	str	r1, [r0]
   1fc10:	ldr	r0, [sp, #8]
   1fc14:	ldr	r1, [sp, #12]
   1fc18:	ldr	r2, [fp, #-8]
   1fc1c:	str	r1, [r2, #84]	; 0x54
   1fc20:	str	r0, [r2, #80]	; 0x50
   1fc24:	movw	r0, #0
   1fc28:	str	r0, [fp, #-4]
   1fc2c:	b	1fc50 <__assert_fail@plt+0xe478>
   1fc30:	ldr	r0, [fp, #-8]
   1fc34:	ldr	r2, [sp, #16]
   1fc38:	ldr	r3, [sp, #20]
   1fc3c:	ldr	r1, [fp, #8]
   1fc40:	mov	ip, sp
   1fc44:	str	r1, [ip]
   1fc48:	bl	116e8 <fseeko64@plt>
   1fc4c:	str	r0, [fp, #-4]
   1fc50:	ldr	r0, [fp, #-4]
   1fc54:	mov	sp, fp
   1fc58:	pop	{fp, pc}
   1fc5c:	push	{fp, lr}
   1fc60:	mov	fp, sp
   1fc64:	sub	sp, sp, #16
   1fc68:	str	r0, [sp, #8]
   1fc6c:	ldr	r0, [sp, #8]
   1fc70:	cmp	r0, #0
   1fc74:	bne	1fc80 <__assert_fail@plt+0xe4a8>
   1fc78:	movw	r0, #1
   1fc7c:	str	r0, [sp, #8]
   1fc80:	ldr	r0, [pc, #64]	; 1fcc8 <__assert_fail@plt+0xe4f0>
   1fc84:	ldr	r1, [sp, #8]
   1fc88:	cmp	r0, r1
   1fc8c:	bcs	1fca8 <__assert_fail@plt+0xe4d0>
   1fc90:	bl	11664 <__errno_location@plt>
   1fc94:	movw	r1, #12
   1fc98:	str	r1, [r0]
   1fc9c:	movw	r0, #0
   1fca0:	str	r0, [fp, #-4]
   1fca4:	b	1fcbc <__assert_fail@plt+0xe4e4>
   1fca8:	ldr	r0, [sp, #8]
   1fcac:	bl	115bc <malloc@plt>
   1fcb0:	str	r0, [sp, #4]
   1fcb4:	ldr	r0, [sp, #4]
   1fcb8:	str	r0, [fp, #-4]
   1fcbc:	ldr	r0, [fp, #-4]
   1fcc0:	mov	sp, fp
   1fcc4:	pop	{fp, pc}
   1fcc8:	svcvc	0x00ffffff
   1fccc:	push	{fp, lr}
   1fcd0:	mov	fp, sp
   1fcd4:	sub	sp, sp, #32
   1fcd8:	str	r0, [fp, #-8]
   1fcdc:	str	r1, [fp, #-12]
   1fce0:	str	r2, [sp, #16]
   1fce4:	str	r3, [sp, #12]
   1fce8:	ldr	r0, [fp, #-8]
   1fcec:	movw	r1, #0
   1fcf0:	cmp	r0, r1
   1fcf4:	bne	1fd00 <__assert_fail@plt+0xe528>
   1fcf8:	add	r0, sp, #4
   1fcfc:	str	r0, [fp, #-8]
   1fd00:	ldr	r0, [fp, #-8]
   1fd04:	ldr	r1, [fp, #-12]
   1fd08:	ldr	r2, [sp, #16]
   1fd0c:	ldr	r3, [sp, #12]
   1fd10:	bl	11580 <mbrtowc@plt>
   1fd14:	str	r0, [sp, #8]
   1fd18:	ldr	r0, [sp, #8]
   1fd1c:	mvn	r1, #1
   1fd20:	cmp	r1, r0
   1fd24:	bhi	1fd68 <__assert_fail@plt+0xe590>
   1fd28:	ldr	r0, [sp, #16]
   1fd2c:	cmp	r0, #0
   1fd30:	beq	1fd68 <__assert_fail@plt+0xe590>
   1fd34:	movw	r0, #0
   1fd38:	bl	212e8 <__assert_fail@plt+0xfb10>
   1fd3c:	tst	r0, #1
   1fd40:	bne	1fd68 <__assert_fail@plt+0xe590>
   1fd44:	ldr	r0, [fp, #-12]
   1fd48:	ldrb	r0, [r0]
   1fd4c:	strb	r0, [sp, #3]
   1fd50:	ldrb	r0, [sp, #3]
   1fd54:	ldr	r1, [fp, #-8]
   1fd58:	str	r0, [r1]
   1fd5c:	movw	r0, #1
   1fd60:	str	r0, [fp, #-4]
   1fd64:	b	1fd70 <__assert_fail@plt+0xe598>
   1fd68:	ldr	r0, [sp, #8]
   1fd6c:	str	r0, [fp, #-4]
   1fd70:	ldr	r0, [fp, #-4]
   1fd74:	mov	sp, fp
   1fd78:	pop	{fp, pc}
   1fd7c:	push	{fp, lr}
   1fd80:	mov	fp, sp
   1fd84:	sub	sp, sp, #16
   1fd88:	str	r0, [sp, #8]
   1fd8c:	str	r1, [sp, #4]
   1fd90:	ldr	r0, [sp, #8]
   1fd94:	movw	r1, #0
   1fd98:	cmp	r0, r1
   1fd9c:	bne	1fdb0 <__assert_fail@plt+0xe5d8>
   1fda0:	ldr	r0, [sp, #4]
   1fda4:	bl	1fc5c <__assert_fail@plt+0xe484>
   1fda8:	str	r0, [fp, #-4]
   1fdac:	b	1fe10 <__assert_fail@plt+0xe638>
   1fdb0:	ldr	r0, [sp, #4]
   1fdb4:	cmp	r0, #0
   1fdb8:	bne	1fdd0 <__assert_fail@plt+0xe5f8>
   1fdbc:	ldr	r0, [sp, #8]
   1fdc0:	bl	1fb14 <__assert_fail@plt+0xe33c>
   1fdc4:	movw	r0, #0
   1fdc8:	str	r0, [fp, #-4]
   1fdcc:	b	1fe10 <__assert_fail@plt+0xe638>
   1fdd0:	ldr	r0, [pc, #68]	; 1fe1c <__assert_fail@plt+0xe644>
   1fdd4:	ldr	r1, [sp, #4]
   1fdd8:	cmp	r0, r1
   1fddc:	bcs	1fdf8 <__assert_fail@plt+0xe620>
   1fde0:	bl	11664 <__errno_location@plt>
   1fde4:	movw	r1, #12
   1fde8:	str	r1, [r0]
   1fdec:	movw	r0, #0
   1fdf0:	str	r0, [fp, #-4]
   1fdf4:	b	1fe10 <__assert_fail@plt+0xe638>
   1fdf8:	ldr	r0, [sp, #8]
   1fdfc:	ldr	r1, [sp, #4]
   1fe00:	bl	114fc <realloc@plt>
   1fe04:	str	r0, [sp]
   1fe08:	ldr	r0, [sp]
   1fe0c:	str	r0, [fp, #-4]
   1fe10:	ldr	r0, [fp, #-4]
   1fe14:	mov	sp, fp
   1fe18:	pop	{fp, pc}
   1fe1c:	svcvc	0x00ffffff
   1fe20:	push	{fp, lr}
   1fe24:	mov	fp, sp
   1fe28:	sub	sp, sp, #96	; 0x60
   1fe2c:	str	r0, [fp, #-8]
   1fe30:	str	r1, [fp, #-12]
   1fe34:	str	r2, [fp, #-16]
   1fe38:	b	201f0 <__assert_fail@plt+0xea18>
   1fe3c:	b	20010 <__assert_fail@plt+0xe838>
   1fe40:	ldr	r0, [fp, #-16]
   1fe44:	cmp	r0, #0
   1fe48:	bcs	1ff4c <__assert_fail@plt+0xe774>
   1fe4c:	ldr	r0, [fp, #-12]
   1fe50:	cmp	r0, #0
   1fe54:	bcs	1fedc <__assert_fail@plt+0xe704>
   1fe58:	b	1fe78 <__assert_fail@plt+0xe6a0>
   1fe5c:	ldr	r0, [fp, #-12]
   1fe60:	ldr	r1, [fp, #-16]
   1fe64:	movw	r2, #127	; 0x7f
   1fe68:	udiv	r1, r2, r1
   1fe6c:	cmp	r0, r1
   1fe70:	bcc	1ffe0 <__assert_fail@plt+0xe808>
   1fe74:	b	1fff8 <__assert_fail@plt+0xe820>
   1fe78:	b	1fe8c <__assert_fail@plt+0xe6b4>
   1fe7c:	ldr	r0, [fp, #-16]
   1fe80:	cmp	r0, #1
   1fe84:	bcc	1fe9c <__assert_fail@plt+0xe6c4>
   1fe88:	b	1fea8 <__assert_fail@plt+0xe6d0>
   1fe8c:	ldr	r0, [fp, #-16]
   1fe90:	movw	r1, #0
   1fe94:	cmp	r1, r0
   1fe98:	bcs	1fea8 <__assert_fail@plt+0xe6d0>
   1fe9c:	movw	r0, #0
   1fea0:	str	r0, [fp, #-24]	; 0xffffffe8
   1fea4:	b	1fec0 <__assert_fail@plt+0xe6e8>
   1fea8:	ldr	r0, [fp, #-16]
   1feac:	movw	r1, #0
   1feb0:	sub	r0, r1, r0
   1feb4:	movw	r1, #127	; 0x7f
   1feb8:	udiv	r0, r1, r0
   1febc:	str	r0, [fp, #-24]	; 0xffffffe8
   1fec0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fec4:	ldr	r1, [fp, #-12]
   1fec8:	mvn	r2, #0
   1fecc:	sub	r1, r2, r1
   1fed0:	cmp	r0, r1
   1fed4:	bls	1ffe0 <__assert_fail@plt+0xe808>
   1fed8:	b	1fff8 <__assert_fail@plt+0xe820>
   1fedc:	ldr	r0, [fp, #-16]
   1fee0:	cmn	r0, #1
   1fee4:	bne	1ff30 <__assert_fail@plt+0xe758>
   1fee8:	b	1ff08 <__assert_fail@plt+0xe730>
   1feec:	ldr	r0, [fp, #-12]
   1fef0:	mvn	r1, #127	; 0x7f
   1fef4:	add	r0, r0, r1
   1fef8:	movw	r1, #0
   1fefc:	cmp	r1, r0
   1ff00:	bcc	1ffe0 <__assert_fail@plt+0xe808>
   1ff04:	b	1fff8 <__assert_fail@plt+0xe820>
   1ff08:	ldr	r0, [fp, #-12]
   1ff0c:	movw	r1, #0
   1ff10:	cmp	r1, r0
   1ff14:	bcs	1fff8 <__assert_fail@plt+0xe820>
   1ff18:	ldr	r0, [fp, #-12]
   1ff1c:	sub	r0, r0, #1
   1ff20:	movw	r1, #127	; 0x7f
   1ff24:	cmp	r1, r0
   1ff28:	bcc	1ffe0 <__assert_fail@plt+0xe808>
   1ff2c:	b	1fff8 <__assert_fail@plt+0xe820>
   1ff30:	ldr	r0, [fp, #-16]
   1ff34:	mvn	r1, #127	; 0x7f
   1ff38:	udiv	r0, r1, r0
   1ff3c:	ldr	r1, [fp, #-12]
   1ff40:	cmp	r0, r1
   1ff44:	bcc	1ffe0 <__assert_fail@plt+0xe808>
   1ff48:	b	1fff8 <__assert_fail@plt+0xe820>
   1ff4c:	ldr	r0, [fp, #-16]
   1ff50:	cmp	r0, #0
   1ff54:	bne	1ff5c <__assert_fail@plt+0xe784>
   1ff58:	b	1fff8 <__assert_fail@plt+0xe820>
   1ff5c:	ldr	r0, [fp, #-12]
   1ff60:	cmp	r0, #0
   1ff64:	bcs	1ffc8 <__assert_fail@plt+0xe7f0>
   1ff68:	ldr	r0, [fp, #-12]
   1ff6c:	cmn	r0, #1
   1ff70:	bne	1ffac <__assert_fail@plt+0xe7d4>
   1ff74:	b	1ff94 <__assert_fail@plt+0xe7bc>
   1ff78:	ldr	r0, [fp, #-16]
   1ff7c:	mvn	r1, #127	; 0x7f
   1ff80:	add	r0, r0, r1
   1ff84:	movw	r1, #0
   1ff88:	cmp	r1, r0
   1ff8c:	bcc	1ffe0 <__assert_fail@plt+0xe808>
   1ff90:	b	1fff8 <__assert_fail@plt+0xe820>
   1ff94:	ldr	r0, [fp, #-16]
   1ff98:	sub	r0, r0, #1
   1ff9c:	movw	r1, #127	; 0x7f
   1ffa0:	cmp	r1, r0
   1ffa4:	bcc	1ffe0 <__assert_fail@plt+0xe808>
   1ffa8:	b	1fff8 <__assert_fail@plt+0xe820>
   1ffac:	ldr	r0, [fp, #-12]
   1ffb0:	mvn	r1, #127	; 0x7f
   1ffb4:	udiv	r0, r1, r0
   1ffb8:	ldr	r1, [fp, #-16]
   1ffbc:	cmp	r0, r1
   1ffc0:	bcc	1ffe0 <__assert_fail@plt+0xe808>
   1ffc4:	b	1fff8 <__assert_fail@plt+0xe820>
   1ffc8:	ldr	r0, [fp, #-16]
   1ffcc:	movw	r1, #127	; 0x7f
   1ffd0:	udiv	r0, r1, r0
   1ffd4:	ldr	r1, [fp, #-12]
   1ffd8:	cmp	r0, r1
   1ffdc:	bcs	1fff8 <__assert_fail@plt+0xe820>
   1ffe0:	ldr	r0, [fp, #-12]
   1ffe4:	ldr	r1, [fp, #-16]
   1ffe8:	mul	r0, r0, r1
   1ffec:	sxtb	r0, r0
   1fff0:	str	r0, [fp, #-20]	; 0xffffffec
   1fff4:	b	21120 <__assert_fail@plt+0xf948>
   1fff8:	ldr	r0, [fp, #-12]
   1fffc:	ldr	r1, [fp, #-16]
   20000:	mul	r0, r0, r1
   20004:	sxtb	r0, r0
   20008:	str	r0, [fp, #-20]	; 0xffffffec
   2000c:	b	21138 <__assert_fail@plt+0xf960>
   20010:	ldr	r0, [fp, #-16]
   20014:	cmp	r0, #0
   20018:	bcs	20124 <__assert_fail@plt+0xe94c>
   2001c:	ldr	r0, [fp, #-12]
   20020:	cmp	r0, #0
   20024:	bcs	200ac <__assert_fail@plt+0xe8d4>
   20028:	b	20048 <__assert_fail@plt+0xe870>
   2002c:	ldr	r0, [fp, #-12]
   20030:	ldr	r1, [fp, #-16]
   20034:	movw	r2, #255	; 0xff
   20038:	udiv	r1, r2, r1
   2003c:	cmp	r0, r1
   20040:	bcc	201c0 <__assert_fail@plt+0xe9e8>
   20044:	b	201d8 <__assert_fail@plt+0xea00>
   20048:	b	2005c <__assert_fail@plt+0xe884>
   2004c:	ldr	r0, [fp, #-16]
   20050:	cmp	r0, #1
   20054:	bcc	2006c <__assert_fail@plt+0xe894>
   20058:	b	20078 <__assert_fail@plt+0xe8a0>
   2005c:	ldr	r0, [fp, #-16]
   20060:	movw	r1, #0
   20064:	cmp	r1, r0
   20068:	bcs	20078 <__assert_fail@plt+0xe8a0>
   2006c:	movw	r0, #0
   20070:	str	r0, [fp, #-28]	; 0xffffffe4
   20074:	b	20090 <__assert_fail@plt+0xe8b8>
   20078:	ldr	r0, [fp, #-16]
   2007c:	movw	r1, #0
   20080:	sub	r0, r1, r0
   20084:	movw	r1, #255	; 0xff
   20088:	udiv	r0, r1, r0
   2008c:	str	r0, [fp, #-28]	; 0xffffffe4
   20090:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20094:	ldr	r1, [fp, #-12]
   20098:	mvn	r2, #0
   2009c:	sub	r1, r2, r1
   200a0:	cmp	r0, r1
   200a4:	bls	201c0 <__assert_fail@plt+0xe9e8>
   200a8:	b	201d8 <__assert_fail@plt+0xea00>
   200ac:	b	200b4 <__assert_fail@plt+0xe8dc>
   200b0:	b	200b8 <__assert_fail@plt+0xe8e0>
   200b4:	b	20108 <__assert_fail@plt+0xe930>
   200b8:	ldr	r0, [fp, #-16]
   200bc:	cmn	r0, #1
   200c0:	bne	20108 <__assert_fail@plt+0xe930>
   200c4:	b	200e0 <__assert_fail@plt+0xe908>
   200c8:	ldr	r0, [fp, #-12]
   200cc:	add	r0, r0, #0
   200d0:	movw	r1, #0
   200d4:	cmp	r1, r0
   200d8:	bcc	201c0 <__assert_fail@plt+0xe9e8>
   200dc:	b	201d8 <__assert_fail@plt+0xea00>
   200e0:	ldr	r0, [fp, #-12]
   200e4:	movw	r1, #0
   200e8:	cmp	r1, r0
   200ec:	bcs	201d8 <__assert_fail@plt+0xea00>
   200f0:	ldr	r0, [fp, #-12]
   200f4:	sub	r0, r0, #1
   200f8:	mvn	r1, #0
   200fc:	cmp	r1, r0
   20100:	bcc	201c0 <__assert_fail@plt+0xe9e8>
   20104:	b	201d8 <__assert_fail@plt+0xea00>
   20108:	ldr	r0, [fp, #-16]
   2010c:	movw	r1, #0
   20110:	udiv	r0, r1, r0
   20114:	ldr	r1, [fp, #-12]
   20118:	cmp	r0, r1
   2011c:	bcc	201c0 <__assert_fail@plt+0xe9e8>
   20120:	b	201d8 <__assert_fail@plt+0xea00>
   20124:	ldr	r0, [fp, #-16]
   20128:	cmp	r0, #0
   2012c:	bne	20134 <__assert_fail@plt+0xe95c>
   20130:	b	201d8 <__assert_fail@plt+0xea00>
   20134:	ldr	r0, [fp, #-12]
   20138:	cmp	r0, #0
   2013c:	bcs	201a8 <__assert_fail@plt+0xe9d0>
   20140:	b	20148 <__assert_fail@plt+0xe970>
   20144:	b	2014c <__assert_fail@plt+0xe974>
   20148:	b	2018c <__assert_fail@plt+0xe9b4>
   2014c:	ldr	r0, [fp, #-12]
   20150:	cmn	r0, #1
   20154:	bne	2018c <__assert_fail@plt+0xe9b4>
   20158:	b	20174 <__assert_fail@plt+0xe99c>
   2015c:	ldr	r0, [fp, #-16]
   20160:	add	r0, r0, #0
   20164:	movw	r1, #0
   20168:	cmp	r1, r0
   2016c:	bcc	201c0 <__assert_fail@plt+0xe9e8>
   20170:	b	201d8 <__assert_fail@plt+0xea00>
   20174:	ldr	r0, [fp, #-16]
   20178:	sub	r0, r0, #1
   2017c:	mvn	r1, #0
   20180:	cmp	r1, r0
   20184:	bcc	201c0 <__assert_fail@plt+0xe9e8>
   20188:	b	201d8 <__assert_fail@plt+0xea00>
   2018c:	ldr	r0, [fp, #-12]
   20190:	movw	r1, #0
   20194:	udiv	r0, r1, r0
   20198:	ldr	r1, [fp, #-16]
   2019c:	cmp	r0, r1
   201a0:	bcc	201c0 <__assert_fail@plt+0xe9e8>
   201a4:	b	201d8 <__assert_fail@plt+0xea00>
   201a8:	ldr	r0, [fp, #-16]
   201ac:	movw	r1, #255	; 0xff
   201b0:	udiv	r0, r1, r0
   201b4:	ldr	r1, [fp, #-12]
   201b8:	cmp	r0, r1
   201bc:	bcs	201d8 <__assert_fail@plt+0xea00>
   201c0:	ldr	r0, [fp, #-12]
   201c4:	ldr	r1, [fp, #-16]
   201c8:	mul	r0, r0, r1
   201cc:	and	r0, r0, #255	; 0xff
   201d0:	str	r0, [fp, #-20]	; 0xffffffec
   201d4:	b	21120 <__assert_fail@plt+0xf948>
   201d8:	ldr	r0, [fp, #-12]
   201dc:	ldr	r1, [fp, #-16]
   201e0:	mul	r0, r0, r1
   201e4:	and	r0, r0, #255	; 0xff
   201e8:	str	r0, [fp, #-20]	; 0xffffffec
   201ec:	b	21138 <__assert_fail@plt+0xf960>
   201f0:	b	205a8 <__assert_fail@plt+0xedd0>
   201f4:	b	203c8 <__assert_fail@plt+0xebf0>
   201f8:	ldr	r0, [fp, #-16]
   201fc:	cmp	r0, #0
   20200:	bcs	20304 <__assert_fail@plt+0xeb2c>
   20204:	ldr	r0, [fp, #-12]
   20208:	cmp	r0, #0
   2020c:	bcs	20294 <__assert_fail@plt+0xeabc>
   20210:	b	20230 <__assert_fail@plt+0xea58>
   20214:	ldr	r0, [fp, #-12]
   20218:	ldr	r1, [fp, #-16]
   2021c:	movw	r2, #32767	; 0x7fff
   20220:	udiv	r1, r2, r1
   20224:	cmp	r0, r1
   20228:	bcc	20398 <__assert_fail@plt+0xebc0>
   2022c:	b	203b0 <__assert_fail@plt+0xebd8>
   20230:	b	20244 <__assert_fail@plt+0xea6c>
   20234:	ldr	r0, [fp, #-16]
   20238:	cmp	r0, #1
   2023c:	bcc	20254 <__assert_fail@plt+0xea7c>
   20240:	b	20260 <__assert_fail@plt+0xea88>
   20244:	ldr	r0, [fp, #-16]
   20248:	movw	r1, #0
   2024c:	cmp	r1, r0
   20250:	bcs	20260 <__assert_fail@plt+0xea88>
   20254:	movw	r0, #0
   20258:	str	r0, [fp, #-32]	; 0xffffffe0
   2025c:	b	20278 <__assert_fail@plt+0xeaa0>
   20260:	ldr	r0, [fp, #-16]
   20264:	movw	r1, #0
   20268:	sub	r0, r1, r0
   2026c:	movw	r1, #32767	; 0x7fff
   20270:	udiv	r0, r1, r0
   20274:	str	r0, [fp, #-32]	; 0xffffffe0
   20278:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2027c:	ldr	r1, [fp, #-12]
   20280:	mvn	r2, #0
   20284:	sub	r1, r2, r1
   20288:	cmp	r0, r1
   2028c:	bls	20398 <__assert_fail@plt+0xebc0>
   20290:	b	203b0 <__assert_fail@plt+0xebd8>
   20294:	ldr	r0, [fp, #-16]
   20298:	cmn	r0, #1
   2029c:	bne	202e8 <__assert_fail@plt+0xeb10>
   202a0:	b	202c0 <__assert_fail@plt+0xeae8>
   202a4:	ldr	r0, [pc, #3760]	; 2115c <__assert_fail@plt+0xf984>
   202a8:	ldr	r1, [fp, #-12]
   202ac:	add	r0, r1, r0
   202b0:	movw	r1, #0
   202b4:	cmp	r1, r0
   202b8:	bcc	20398 <__assert_fail@plt+0xebc0>
   202bc:	b	203b0 <__assert_fail@plt+0xebd8>
   202c0:	ldr	r0, [fp, #-12]
   202c4:	movw	r1, #0
   202c8:	cmp	r1, r0
   202cc:	bcs	203b0 <__assert_fail@plt+0xebd8>
   202d0:	ldr	r0, [fp, #-12]
   202d4:	sub	r0, r0, #1
   202d8:	movw	r1, #32767	; 0x7fff
   202dc:	cmp	r1, r0
   202e0:	bcc	20398 <__assert_fail@plt+0xebc0>
   202e4:	b	203b0 <__assert_fail@plt+0xebd8>
   202e8:	ldr	r0, [pc, #3692]	; 2115c <__assert_fail@plt+0xf984>
   202ec:	ldr	r1, [fp, #-16]
   202f0:	udiv	r0, r0, r1
   202f4:	ldr	r1, [fp, #-12]
   202f8:	cmp	r0, r1
   202fc:	bcc	20398 <__assert_fail@plt+0xebc0>
   20300:	b	203b0 <__assert_fail@plt+0xebd8>
   20304:	ldr	r0, [fp, #-16]
   20308:	cmp	r0, #0
   2030c:	bne	20314 <__assert_fail@plt+0xeb3c>
   20310:	b	203b0 <__assert_fail@plt+0xebd8>
   20314:	ldr	r0, [fp, #-12]
   20318:	cmp	r0, #0
   2031c:	bcs	20380 <__assert_fail@plt+0xeba8>
   20320:	ldr	r0, [fp, #-12]
   20324:	cmn	r0, #1
   20328:	bne	20364 <__assert_fail@plt+0xeb8c>
   2032c:	b	2034c <__assert_fail@plt+0xeb74>
   20330:	ldr	r0, [pc, #3620]	; 2115c <__assert_fail@plt+0xf984>
   20334:	ldr	r1, [fp, #-16]
   20338:	add	r0, r1, r0
   2033c:	movw	r1, #0
   20340:	cmp	r1, r0
   20344:	bcc	20398 <__assert_fail@plt+0xebc0>
   20348:	b	203b0 <__assert_fail@plt+0xebd8>
   2034c:	ldr	r0, [fp, #-16]
   20350:	sub	r0, r0, #1
   20354:	movw	r1, #32767	; 0x7fff
   20358:	cmp	r1, r0
   2035c:	bcc	20398 <__assert_fail@plt+0xebc0>
   20360:	b	203b0 <__assert_fail@plt+0xebd8>
   20364:	ldr	r0, [pc, #3568]	; 2115c <__assert_fail@plt+0xf984>
   20368:	ldr	r1, [fp, #-12]
   2036c:	udiv	r0, r0, r1
   20370:	ldr	r1, [fp, #-16]
   20374:	cmp	r0, r1
   20378:	bcc	20398 <__assert_fail@plt+0xebc0>
   2037c:	b	203b0 <__assert_fail@plt+0xebd8>
   20380:	ldr	r0, [fp, #-16]
   20384:	movw	r1, #32767	; 0x7fff
   20388:	udiv	r0, r1, r0
   2038c:	ldr	r1, [fp, #-12]
   20390:	cmp	r0, r1
   20394:	bcs	203b0 <__assert_fail@plt+0xebd8>
   20398:	ldr	r0, [fp, #-12]
   2039c:	ldr	r1, [fp, #-16]
   203a0:	mul	r0, r0, r1
   203a4:	sxth	r0, r0
   203a8:	str	r0, [fp, #-20]	; 0xffffffec
   203ac:	b	21120 <__assert_fail@plt+0xf948>
   203b0:	ldr	r0, [fp, #-12]
   203b4:	ldr	r1, [fp, #-16]
   203b8:	mul	r0, r0, r1
   203bc:	sxth	r0, r0
   203c0:	str	r0, [fp, #-20]	; 0xffffffec
   203c4:	b	21138 <__assert_fail@plt+0xf960>
   203c8:	ldr	r0, [fp, #-16]
   203cc:	cmp	r0, #0
   203d0:	bcs	204dc <__assert_fail@plt+0xed04>
   203d4:	ldr	r0, [fp, #-12]
   203d8:	cmp	r0, #0
   203dc:	bcs	20464 <__assert_fail@plt+0xec8c>
   203e0:	b	20400 <__assert_fail@plt+0xec28>
   203e4:	ldr	r0, [fp, #-12]
   203e8:	ldr	r1, [fp, #-16]
   203ec:	movw	r2, #65535	; 0xffff
   203f0:	udiv	r1, r2, r1
   203f4:	cmp	r0, r1
   203f8:	bcc	20578 <__assert_fail@plt+0xeda0>
   203fc:	b	20590 <__assert_fail@plt+0xedb8>
   20400:	b	20414 <__assert_fail@plt+0xec3c>
   20404:	ldr	r0, [fp, #-16]
   20408:	cmp	r0, #1
   2040c:	bcc	20424 <__assert_fail@plt+0xec4c>
   20410:	b	20430 <__assert_fail@plt+0xec58>
   20414:	ldr	r0, [fp, #-16]
   20418:	movw	r1, #0
   2041c:	cmp	r1, r0
   20420:	bcs	20430 <__assert_fail@plt+0xec58>
   20424:	movw	r0, #0
   20428:	str	r0, [fp, #-36]	; 0xffffffdc
   2042c:	b	20448 <__assert_fail@plt+0xec70>
   20430:	ldr	r0, [fp, #-16]
   20434:	movw	r1, #0
   20438:	sub	r0, r1, r0
   2043c:	movw	r1, #65535	; 0xffff
   20440:	udiv	r0, r1, r0
   20444:	str	r0, [fp, #-36]	; 0xffffffdc
   20448:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2044c:	ldr	r1, [fp, #-12]
   20450:	mvn	r2, #0
   20454:	sub	r1, r2, r1
   20458:	cmp	r0, r1
   2045c:	bls	20578 <__assert_fail@plt+0xeda0>
   20460:	b	20590 <__assert_fail@plt+0xedb8>
   20464:	b	2046c <__assert_fail@plt+0xec94>
   20468:	b	20470 <__assert_fail@plt+0xec98>
   2046c:	b	204c0 <__assert_fail@plt+0xece8>
   20470:	ldr	r0, [fp, #-16]
   20474:	cmn	r0, #1
   20478:	bne	204c0 <__assert_fail@plt+0xece8>
   2047c:	b	20498 <__assert_fail@plt+0xecc0>
   20480:	ldr	r0, [fp, #-12]
   20484:	add	r0, r0, #0
   20488:	movw	r1, #0
   2048c:	cmp	r1, r0
   20490:	bcc	20578 <__assert_fail@plt+0xeda0>
   20494:	b	20590 <__assert_fail@plt+0xedb8>
   20498:	ldr	r0, [fp, #-12]
   2049c:	movw	r1, #0
   204a0:	cmp	r1, r0
   204a4:	bcs	20590 <__assert_fail@plt+0xedb8>
   204a8:	ldr	r0, [fp, #-12]
   204ac:	sub	r0, r0, #1
   204b0:	mvn	r1, #0
   204b4:	cmp	r1, r0
   204b8:	bcc	20578 <__assert_fail@plt+0xeda0>
   204bc:	b	20590 <__assert_fail@plt+0xedb8>
   204c0:	ldr	r0, [fp, #-16]
   204c4:	movw	r1, #0
   204c8:	udiv	r0, r1, r0
   204cc:	ldr	r1, [fp, #-12]
   204d0:	cmp	r0, r1
   204d4:	bcc	20578 <__assert_fail@plt+0xeda0>
   204d8:	b	20590 <__assert_fail@plt+0xedb8>
   204dc:	ldr	r0, [fp, #-16]
   204e0:	cmp	r0, #0
   204e4:	bne	204ec <__assert_fail@plt+0xed14>
   204e8:	b	20590 <__assert_fail@plt+0xedb8>
   204ec:	ldr	r0, [fp, #-12]
   204f0:	cmp	r0, #0
   204f4:	bcs	20560 <__assert_fail@plt+0xed88>
   204f8:	b	20500 <__assert_fail@plt+0xed28>
   204fc:	b	20504 <__assert_fail@plt+0xed2c>
   20500:	b	20544 <__assert_fail@plt+0xed6c>
   20504:	ldr	r0, [fp, #-12]
   20508:	cmn	r0, #1
   2050c:	bne	20544 <__assert_fail@plt+0xed6c>
   20510:	b	2052c <__assert_fail@plt+0xed54>
   20514:	ldr	r0, [fp, #-16]
   20518:	add	r0, r0, #0
   2051c:	movw	r1, #0
   20520:	cmp	r1, r0
   20524:	bcc	20578 <__assert_fail@plt+0xeda0>
   20528:	b	20590 <__assert_fail@plt+0xedb8>
   2052c:	ldr	r0, [fp, #-16]
   20530:	sub	r0, r0, #1
   20534:	mvn	r1, #0
   20538:	cmp	r1, r0
   2053c:	bcc	20578 <__assert_fail@plt+0xeda0>
   20540:	b	20590 <__assert_fail@plt+0xedb8>
   20544:	ldr	r0, [fp, #-12]
   20548:	movw	r1, #0
   2054c:	udiv	r0, r1, r0
   20550:	ldr	r1, [fp, #-16]
   20554:	cmp	r0, r1
   20558:	bcc	20578 <__assert_fail@plt+0xeda0>
   2055c:	b	20590 <__assert_fail@plt+0xedb8>
   20560:	ldr	r0, [fp, #-16]
   20564:	movw	r1, #65535	; 0xffff
   20568:	udiv	r0, r1, r0
   2056c:	ldr	r1, [fp, #-12]
   20570:	cmp	r0, r1
   20574:	bcs	20590 <__assert_fail@plt+0xedb8>
   20578:	ldr	r0, [fp, #-12]
   2057c:	ldr	r1, [fp, #-16]
   20580:	mul	r0, r0, r1
   20584:	uxth	r0, r0
   20588:	str	r0, [fp, #-20]	; 0xffffffec
   2058c:	b	21120 <__assert_fail@plt+0xf948>
   20590:	ldr	r0, [fp, #-12]
   20594:	ldr	r1, [fp, #-16]
   20598:	mul	r0, r0, r1
   2059c:	uxth	r0, r0
   205a0:	str	r0, [fp, #-20]	; 0xffffffec
   205a4:	b	21138 <__assert_fail@plt+0xf960>
   205a8:	b	205ac <__assert_fail@plt+0xedd4>
   205ac:	b	20770 <__assert_fail@plt+0xef98>
   205b0:	ldr	r0, [fp, #-16]
   205b4:	cmp	r0, #0
   205b8:	bcs	206b8 <__assert_fail@plt+0xeee0>
   205bc:	ldr	r0, [fp, #-12]
   205c0:	cmp	r0, #0
   205c4:	bcs	2064c <__assert_fail@plt+0xee74>
   205c8:	b	205e8 <__assert_fail@plt+0xee10>
   205cc:	ldr	r0, [pc, #2944]	; 21154 <__assert_fail@plt+0xf97c>
   205d0:	ldr	r1, [fp, #-12]
   205d4:	ldr	r2, [fp, #-16]
   205d8:	udiv	r0, r0, r2
   205dc:	cmp	r1, r0
   205e0:	bcc	20748 <__assert_fail@plt+0xef70>
   205e4:	b	2075c <__assert_fail@plt+0xef84>
   205e8:	b	205fc <__assert_fail@plt+0xee24>
   205ec:	ldr	r0, [fp, #-16]
   205f0:	cmp	r0, #1
   205f4:	bcc	2060c <__assert_fail@plt+0xee34>
   205f8:	b	20618 <__assert_fail@plt+0xee40>
   205fc:	ldr	r0, [fp, #-16]
   20600:	movw	r1, #0
   20604:	cmp	r1, r0
   20608:	bcs	20618 <__assert_fail@plt+0xee40>
   2060c:	movw	r0, #0
   20610:	str	r0, [fp, #-40]	; 0xffffffd8
   20614:	b	20630 <__assert_fail@plt+0xee58>
   20618:	ldr	r0, [pc, #2868]	; 21154 <__assert_fail@plt+0xf97c>
   2061c:	ldr	r1, [fp, #-16]
   20620:	movw	r2, #0
   20624:	sub	r1, r2, r1
   20628:	udiv	r0, r0, r1
   2062c:	str	r0, [fp, #-40]	; 0xffffffd8
   20630:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20634:	ldr	r1, [fp, #-12]
   20638:	mvn	r2, #0
   2063c:	sub	r1, r2, r1
   20640:	cmp	r0, r1
   20644:	bls	20748 <__assert_fail@plt+0xef70>
   20648:	b	2075c <__assert_fail@plt+0xef84>
   2064c:	ldr	r0, [fp, #-16]
   20650:	cmn	r0, #1
   20654:	bne	2069c <__assert_fail@plt+0xeec4>
   20658:	b	20674 <__assert_fail@plt+0xee9c>
   2065c:	ldr	r0, [fp, #-12]
   20660:	add	r0, r0, #-2147483648	; 0x80000000
   20664:	movw	r1, #0
   20668:	cmp	r1, r0
   2066c:	bcc	20748 <__assert_fail@plt+0xef70>
   20670:	b	2075c <__assert_fail@plt+0xef84>
   20674:	ldr	r0, [fp, #-12]
   20678:	movw	r1, #0
   2067c:	cmp	r1, r0
   20680:	bcs	2075c <__assert_fail@plt+0xef84>
   20684:	ldr	r0, [pc, #2760]	; 21154 <__assert_fail@plt+0xf97c>
   20688:	ldr	r1, [fp, #-12]
   2068c:	sub	r1, r1, #1
   20690:	cmp	r0, r1
   20694:	bcc	20748 <__assert_fail@plt+0xef70>
   20698:	b	2075c <__assert_fail@plt+0xef84>
   2069c:	ldr	r0, [pc, #2740]	; 21158 <__assert_fail@plt+0xf980>
   206a0:	ldr	r1, [fp, #-16]
   206a4:	udiv	r0, r0, r1
   206a8:	ldr	r1, [fp, #-12]
   206ac:	cmp	r0, r1
   206b0:	bcc	20748 <__assert_fail@plt+0xef70>
   206b4:	b	2075c <__assert_fail@plt+0xef84>
   206b8:	ldr	r0, [fp, #-16]
   206bc:	cmp	r0, #0
   206c0:	bne	206c8 <__assert_fail@plt+0xeef0>
   206c4:	b	2075c <__assert_fail@plt+0xef84>
   206c8:	ldr	r0, [fp, #-12]
   206cc:	cmp	r0, #0
   206d0:	bcs	20730 <__assert_fail@plt+0xef58>
   206d4:	ldr	r0, [fp, #-12]
   206d8:	cmn	r0, #1
   206dc:	bne	20714 <__assert_fail@plt+0xef3c>
   206e0:	b	206fc <__assert_fail@plt+0xef24>
   206e4:	ldr	r0, [fp, #-16]
   206e8:	add	r0, r0, #-2147483648	; 0x80000000
   206ec:	movw	r1, #0
   206f0:	cmp	r1, r0
   206f4:	bcc	20748 <__assert_fail@plt+0xef70>
   206f8:	b	2075c <__assert_fail@plt+0xef84>
   206fc:	ldr	r0, [pc, #2640]	; 21154 <__assert_fail@plt+0xf97c>
   20700:	ldr	r1, [fp, #-16]
   20704:	sub	r1, r1, #1
   20708:	cmp	r0, r1
   2070c:	bcc	20748 <__assert_fail@plt+0xef70>
   20710:	b	2075c <__assert_fail@plt+0xef84>
   20714:	ldr	r0, [pc, #2620]	; 21158 <__assert_fail@plt+0xf980>
   20718:	ldr	r1, [fp, #-12]
   2071c:	udiv	r0, r0, r1
   20720:	ldr	r1, [fp, #-16]
   20724:	cmp	r0, r1
   20728:	bcc	20748 <__assert_fail@plt+0xef70>
   2072c:	b	2075c <__assert_fail@plt+0xef84>
   20730:	ldr	r0, [pc, #2588]	; 21154 <__assert_fail@plt+0xf97c>
   20734:	ldr	r1, [fp, #-16]
   20738:	udiv	r0, r0, r1
   2073c:	ldr	r1, [fp, #-12]
   20740:	cmp	r0, r1
   20744:	bcs	2075c <__assert_fail@plt+0xef84>
   20748:	ldr	r0, [fp, #-12]
   2074c:	ldr	r1, [fp, #-16]
   20750:	mul	r0, r0, r1
   20754:	str	r0, [fp, #-20]	; 0xffffffec
   20758:	b	21120 <__assert_fail@plt+0xf948>
   2075c:	ldr	r0, [fp, #-12]
   20760:	ldr	r1, [fp, #-16]
   20764:	mul	r0, r0, r1
   20768:	str	r0, [fp, #-20]	; 0xffffffec
   2076c:	b	21138 <__assert_fail@plt+0xf960>
   20770:	ldr	r0, [fp, #-16]
   20774:	cmp	r0, #0
   20778:	bcs	20884 <__assert_fail@plt+0xf0ac>
   2077c:	ldr	r0, [fp, #-12]
   20780:	cmp	r0, #0
   20784:	bcs	2080c <__assert_fail@plt+0xf034>
   20788:	b	207a8 <__assert_fail@plt+0xefd0>
   2078c:	ldr	r0, [fp, #-12]
   20790:	ldr	r1, [fp, #-16]
   20794:	mvn	r2, #0
   20798:	udiv	r1, r2, r1
   2079c:	cmp	r0, r1
   207a0:	bcc	20920 <__assert_fail@plt+0xf148>
   207a4:	b	20934 <__assert_fail@plt+0xf15c>
   207a8:	b	207bc <__assert_fail@plt+0xefe4>
   207ac:	ldr	r0, [fp, #-16]
   207b0:	cmp	r0, #1
   207b4:	bcc	207cc <__assert_fail@plt+0xeff4>
   207b8:	b	207d8 <__assert_fail@plt+0xf000>
   207bc:	ldr	r0, [fp, #-16]
   207c0:	movw	r1, #0
   207c4:	cmp	r1, r0
   207c8:	bcs	207d8 <__assert_fail@plt+0xf000>
   207cc:	movw	r0, #1
   207d0:	str	r0, [fp, #-44]	; 0xffffffd4
   207d4:	b	207f0 <__assert_fail@plt+0xf018>
   207d8:	ldr	r0, [fp, #-16]
   207dc:	movw	r1, #0
   207e0:	sub	r0, r1, r0
   207e4:	mvn	r1, #0
   207e8:	udiv	r0, r1, r0
   207ec:	str	r0, [fp, #-44]	; 0xffffffd4
   207f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   207f4:	ldr	r1, [fp, #-12]
   207f8:	mvn	r2, #0
   207fc:	sub	r1, r2, r1
   20800:	cmp	r0, r1
   20804:	bls	20920 <__assert_fail@plt+0xf148>
   20808:	b	20934 <__assert_fail@plt+0xf15c>
   2080c:	b	20814 <__assert_fail@plt+0xf03c>
   20810:	b	20818 <__assert_fail@plt+0xf040>
   20814:	b	20868 <__assert_fail@plt+0xf090>
   20818:	ldr	r0, [fp, #-16]
   2081c:	cmn	r0, #1
   20820:	bne	20868 <__assert_fail@plt+0xf090>
   20824:	b	20840 <__assert_fail@plt+0xf068>
   20828:	ldr	r0, [fp, #-12]
   2082c:	add	r0, r0, #0
   20830:	movw	r1, #0
   20834:	cmp	r1, r0
   20838:	bcc	20920 <__assert_fail@plt+0xf148>
   2083c:	b	20934 <__assert_fail@plt+0xf15c>
   20840:	ldr	r0, [fp, #-12]
   20844:	movw	r1, #0
   20848:	cmp	r1, r0
   2084c:	bcs	20934 <__assert_fail@plt+0xf15c>
   20850:	ldr	r0, [fp, #-12]
   20854:	sub	r0, r0, #1
   20858:	mvn	r1, #0
   2085c:	cmp	r1, r0
   20860:	bcc	20920 <__assert_fail@plt+0xf148>
   20864:	b	20934 <__assert_fail@plt+0xf15c>
   20868:	ldr	r0, [fp, #-16]
   2086c:	movw	r1, #0
   20870:	udiv	r0, r1, r0
   20874:	ldr	r1, [fp, #-12]
   20878:	cmp	r0, r1
   2087c:	bcc	20920 <__assert_fail@plt+0xf148>
   20880:	b	20934 <__assert_fail@plt+0xf15c>
   20884:	ldr	r0, [fp, #-16]
   20888:	cmp	r0, #0
   2088c:	bne	20894 <__assert_fail@plt+0xf0bc>
   20890:	b	20934 <__assert_fail@plt+0xf15c>
   20894:	ldr	r0, [fp, #-12]
   20898:	cmp	r0, #0
   2089c:	bcs	20908 <__assert_fail@plt+0xf130>
   208a0:	b	208a8 <__assert_fail@plt+0xf0d0>
   208a4:	b	208ac <__assert_fail@plt+0xf0d4>
   208a8:	b	208ec <__assert_fail@plt+0xf114>
   208ac:	ldr	r0, [fp, #-12]
   208b0:	cmn	r0, #1
   208b4:	bne	208ec <__assert_fail@plt+0xf114>
   208b8:	b	208d4 <__assert_fail@plt+0xf0fc>
   208bc:	ldr	r0, [fp, #-16]
   208c0:	add	r0, r0, #0
   208c4:	movw	r1, #0
   208c8:	cmp	r1, r0
   208cc:	bcc	20920 <__assert_fail@plt+0xf148>
   208d0:	b	20934 <__assert_fail@plt+0xf15c>
   208d4:	ldr	r0, [fp, #-16]
   208d8:	sub	r0, r0, #1
   208dc:	mvn	r1, #0
   208e0:	cmp	r1, r0
   208e4:	bcc	20920 <__assert_fail@plt+0xf148>
   208e8:	b	20934 <__assert_fail@plt+0xf15c>
   208ec:	ldr	r0, [fp, #-12]
   208f0:	movw	r1, #0
   208f4:	udiv	r0, r1, r0
   208f8:	ldr	r1, [fp, #-16]
   208fc:	cmp	r0, r1
   20900:	bcc	20920 <__assert_fail@plt+0xf148>
   20904:	b	20934 <__assert_fail@plt+0xf15c>
   20908:	ldr	r0, [fp, #-16]
   2090c:	mvn	r1, #0
   20910:	udiv	r0, r1, r0
   20914:	ldr	r1, [fp, #-12]
   20918:	cmp	r0, r1
   2091c:	bcs	20934 <__assert_fail@plt+0xf15c>
   20920:	ldr	r0, [fp, #-12]
   20924:	ldr	r1, [fp, #-16]
   20928:	mul	r0, r0, r1
   2092c:	str	r0, [fp, #-20]	; 0xffffffec
   20930:	b	21120 <__assert_fail@plt+0xf948>
   20934:	ldr	r0, [fp, #-12]
   20938:	ldr	r1, [fp, #-16]
   2093c:	mul	r0, r0, r1
   20940:	str	r0, [fp, #-20]	; 0xffffffec
   20944:	b	21138 <__assert_fail@plt+0xf960>
   20948:	b	2094c <__assert_fail@plt+0xf174>
   2094c:	b	20b10 <__assert_fail@plt+0xf338>
   20950:	ldr	r0, [fp, #-16]
   20954:	cmp	r0, #0
   20958:	bcs	20a58 <__assert_fail@plt+0xf280>
   2095c:	ldr	r0, [fp, #-12]
   20960:	cmp	r0, #0
   20964:	bcs	209ec <__assert_fail@plt+0xf214>
   20968:	b	20988 <__assert_fail@plt+0xf1b0>
   2096c:	ldr	r0, [pc, #2016]	; 21154 <__assert_fail@plt+0xf97c>
   20970:	ldr	r1, [fp, #-12]
   20974:	ldr	r2, [fp, #-16]
   20978:	udiv	r0, r0, r2
   2097c:	cmp	r1, r0
   20980:	bcc	20ae8 <__assert_fail@plt+0xf310>
   20984:	b	20afc <__assert_fail@plt+0xf324>
   20988:	b	2099c <__assert_fail@plt+0xf1c4>
   2098c:	ldr	r0, [fp, #-16]
   20990:	cmp	r0, #1
   20994:	bcc	209ac <__assert_fail@plt+0xf1d4>
   20998:	b	209b8 <__assert_fail@plt+0xf1e0>
   2099c:	ldr	r0, [fp, #-16]
   209a0:	movw	r1, #0
   209a4:	cmp	r1, r0
   209a8:	bcs	209b8 <__assert_fail@plt+0xf1e0>
   209ac:	movw	r0, #0
   209b0:	str	r0, [sp, #48]	; 0x30
   209b4:	b	209d0 <__assert_fail@plt+0xf1f8>
   209b8:	ldr	r0, [pc, #1940]	; 21154 <__assert_fail@plt+0xf97c>
   209bc:	ldr	r1, [fp, #-16]
   209c0:	movw	r2, #0
   209c4:	sub	r1, r2, r1
   209c8:	udiv	r0, r0, r1
   209cc:	str	r0, [sp, #48]	; 0x30
   209d0:	ldr	r0, [sp, #48]	; 0x30
   209d4:	ldr	r1, [fp, #-12]
   209d8:	mvn	r2, #0
   209dc:	sub	r1, r2, r1
   209e0:	cmp	r0, r1
   209e4:	bls	20ae8 <__assert_fail@plt+0xf310>
   209e8:	b	20afc <__assert_fail@plt+0xf324>
   209ec:	ldr	r0, [fp, #-16]
   209f0:	cmn	r0, #1
   209f4:	bne	20a3c <__assert_fail@plt+0xf264>
   209f8:	b	20a14 <__assert_fail@plt+0xf23c>
   209fc:	ldr	r0, [fp, #-12]
   20a00:	add	r0, r0, #-2147483648	; 0x80000000
   20a04:	movw	r1, #0
   20a08:	cmp	r1, r0
   20a0c:	bcc	20ae8 <__assert_fail@plt+0xf310>
   20a10:	b	20afc <__assert_fail@plt+0xf324>
   20a14:	ldr	r0, [fp, #-12]
   20a18:	movw	r1, #0
   20a1c:	cmp	r1, r0
   20a20:	bcs	20afc <__assert_fail@plt+0xf324>
   20a24:	ldr	r0, [pc, #1832]	; 21154 <__assert_fail@plt+0xf97c>
   20a28:	ldr	r1, [fp, #-12]
   20a2c:	sub	r1, r1, #1
   20a30:	cmp	r0, r1
   20a34:	bcc	20ae8 <__assert_fail@plt+0xf310>
   20a38:	b	20afc <__assert_fail@plt+0xf324>
   20a3c:	ldr	r0, [pc, #1812]	; 21158 <__assert_fail@plt+0xf980>
   20a40:	ldr	r1, [fp, #-16]
   20a44:	udiv	r0, r0, r1
   20a48:	ldr	r1, [fp, #-12]
   20a4c:	cmp	r0, r1
   20a50:	bcc	20ae8 <__assert_fail@plt+0xf310>
   20a54:	b	20afc <__assert_fail@plt+0xf324>
   20a58:	ldr	r0, [fp, #-16]
   20a5c:	cmp	r0, #0
   20a60:	bne	20a68 <__assert_fail@plt+0xf290>
   20a64:	b	20afc <__assert_fail@plt+0xf324>
   20a68:	ldr	r0, [fp, #-12]
   20a6c:	cmp	r0, #0
   20a70:	bcs	20ad0 <__assert_fail@plt+0xf2f8>
   20a74:	ldr	r0, [fp, #-12]
   20a78:	cmn	r0, #1
   20a7c:	bne	20ab4 <__assert_fail@plt+0xf2dc>
   20a80:	b	20a9c <__assert_fail@plt+0xf2c4>
   20a84:	ldr	r0, [fp, #-16]
   20a88:	add	r0, r0, #-2147483648	; 0x80000000
   20a8c:	movw	r1, #0
   20a90:	cmp	r1, r0
   20a94:	bcc	20ae8 <__assert_fail@plt+0xf310>
   20a98:	b	20afc <__assert_fail@plt+0xf324>
   20a9c:	ldr	r0, [pc, #1712]	; 21154 <__assert_fail@plt+0xf97c>
   20aa0:	ldr	r1, [fp, #-16]
   20aa4:	sub	r1, r1, #1
   20aa8:	cmp	r0, r1
   20aac:	bcc	20ae8 <__assert_fail@plt+0xf310>
   20ab0:	b	20afc <__assert_fail@plt+0xf324>
   20ab4:	ldr	r0, [pc, #1692]	; 21158 <__assert_fail@plt+0xf980>
   20ab8:	ldr	r1, [fp, #-12]
   20abc:	udiv	r0, r0, r1
   20ac0:	ldr	r1, [fp, #-16]
   20ac4:	cmp	r0, r1
   20ac8:	bcc	20ae8 <__assert_fail@plt+0xf310>
   20acc:	b	20afc <__assert_fail@plt+0xf324>
   20ad0:	ldr	r0, [pc, #1660]	; 21154 <__assert_fail@plt+0xf97c>
   20ad4:	ldr	r1, [fp, #-16]
   20ad8:	udiv	r0, r0, r1
   20adc:	ldr	r1, [fp, #-12]
   20ae0:	cmp	r0, r1
   20ae4:	bcs	20afc <__assert_fail@plt+0xf324>
   20ae8:	ldr	r0, [fp, #-12]
   20aec:	ldr	r1, [fp, #-16]
   20af0:	mul	r0, r0, r1
   20af4:	str	r0, [fp, #-20]	; 0xffffffec
   20af8:	b	21120 <__assert_fail@plt+0xf948>
   20afc:	ldr	r0, [fp, #-12]
   20b00:	ldr	r1, [fp, #-16]
   20b04:	mul	r0, r0, r1
   20b08:	str	r0, [fp, #-20]	; 0xffffffec
   20b0c:	b	21138 <__assert_fail@plt+0xf960>
   20b10:	ldr	r0, [fp, #-16]
   20b14:	cmp	r0, #0
   20b18:	bcs	20c24 <__assert_fail@plt+0xf44c>
   20b1c:	ldr	r0, [fp, #-12]
   20b20:	cmp	r0, #0
   20b24:	bcs	20bac <__assert_fail@plt+0xf3d4>
   20b28:	b	20b48 <__assert_fail@plt+0xf370>
   20b2c:	ldr	r0, [fp, #-12]
   20b30:	ldr	r1, [fp, #-16]
   20b34:	mvn	r2, #0
   20b38:	udiv	r1, r2, r1
   20b3c:	cmp	r0, r1
   20b40:	bcc	20cc0 <__assert_fail@plt+0xf4e8>
   20b44:	b	20cd4 <__assert_fail@plt+0xf4fc>
   20b48:	b	20b5c <__assert_fail@plt+0xf384>
   20b4c:	ldr	r0, [fp, #-16]
   20b50:	cmp	r0, #1
   20b54:	bcc	20b6c <__assert_fail@plt+0xf394>
   20b58:	b	20b78 <__assert_fail@plt+0xf3a0>
   20b5c:	ldr	r0, [fp, #-16]
   20b60:	movw	r1, #0
   20b64:	cmp	r1, r0
   20b68:	bcs	20b78 <__assert_fail@plt+0xf3a0>
   20b6c:	movw	r0, #1
   20b70:	str	r0, [sp, #44]	; 0x2c
   20b74:	b	20b90 <__assert_fail@plt+0xf3b8>
   20b78:	ldr	r0, [fp, #-16]
   20b7c:	movw	r1, #0
   20b80:	sub	r0, r1, r0
   20b84:	mvn	r1, #0
   20b88:	udiv	r0, r1, r0
   20b8c:	str	r0, [sp, #44]	; 0x2c
   20b90:	ldr	r0, [sp, #44]	; 0x2c
   20b94:	ldr	r1, [fp, #-12]
   20b98:	mvn	r2, #0
   20b9c:	sub	r1, r2, r1
   20ba0:	cmp	r0, r1
   20ba4:	bls	20cc0 <__assert_fail@plt+0xf4e8>
   20ba8:	b	20cd4 <__assert_fail@plt+0xf4fc>
   20bac:	b	20bb4 <__assert_fail@plt+0xf3dc>
   20bb0:	b	20bb8 <__assert_fail@plt+0xf3e0>
   20bb4:	b	20c08 <__assert_fail@plt+0xf430>
   20bb8:	ldr	r0, [fp, #-16]
   20bbc:	cmn	r0, #1
   20bc0:	bne	20c08 <__assert_fail@plt+0xf430>
   20bc4:	b	20be0 <__assert_fail@plt+0xf408>
   20bc8:	ldr	r0, [fp, #-12]
   20bcc:	add	r0, r0, #0
   20bd0:	movw	r1, #0
   20bd4:	cmp	r1, r0
   20bd8:	bcc	20cc0 <__assert_fail@plt+0xf4e8>
   20bdc:	b	20cd4 <__assert_fail@plt+0xf4fc>
   20be0:	ldr	r0, [fp, #-12]
   20be4:	movw	r1, #0
   20be8:	cmp	r1, r0
   20bec:	bcs	20cd4 <__assert_fail@plt+0xf4fc>
   20bf0:	ldr	r0, [fp, #-12]
   20bf4:	sub	r0, r0, #1
   20bf8:	mvn	r1, #0
   20bfc:	cmp	r1, r0
   20c00:	bcc	20cc0 <__assert_fail@plt+0xf4e8>
   20c04:	b	20cd4 <__assert_fail@plt+0xf4fc>
   20c08:	ldr	r0, [fp, #-16]
   20c0c:	movw	r1, #0
   20c10:	udiv	r0, r1, r0
   20c14:	ldr	r1, [fp, #-12]
   20c18:	cmp	r0, r1
   20c1c:	bcc	20cc0 <__assert_fail@plt+0xf4e8>
   20c20:	b	20cd4 <__assert_fail@plt+0xf4fc>
   20c24:	ldr	r0, [fp, #-16]
   20c28:	cmp	r0, #0
   20c2c:	bne	20c34 <__assert_fail@plt+0xf45c>
   20c30:	b	20cd4 <__assert_fail@plt+0xf4fc>
   20c34:	ldr	r0, [fp, #-12]
   20c38:	cmp	r0, #0
   20c3c:	bcs	20ca8 <__assert_fail@plt+0xf4d0>
   20c40:	b	20c48 <__assert_fail@plt+0xf470>
   20c44:	b	20c4c <__assert_fail@plt+0xf474>
   20c48:	b	20c8c <__assert_fail@plt+0xf4b4>
   20c4c:	ldr	r0, [fp, #-12]
   20c50:	cmn	r0, #1
   20c54:	bne	20c8c <__assert_fail@plt+0xf4b4>
   20c58:	b	20c74 <__assert_fail@plt+0xf49c>
   20c5c:	ldr	r0, [fp, #-16]
   20c60:	add	r0, r0, #0
   20c64:	movw	r1, #0
   20c68:	cmp	r1, r0
   20c6c:	bcc	20cc0 <__assert_fail@plt+0xf4e8>
   20c70:	b	20cd4 <__assert_fail@plt+0xf4fc>
   20c74:	ldr	r0, [fp, #-16]
   20c78:	sub	r0, r0, #1
   20c7c:	mvn	r1, #0
   20c80:	cmp	r1, r0
   20c84:	bcc	20cc0 <__assert_fail@plt+0xf4e8>
   20c88:	b	20cd4 <__assert_fail@plt+0xf4fc>
   20c8c:	ldr	r0, [fp, #-12]
   20c90:	movw	r1, #0
   20c94:	udiv	r0, r1, r0
   20c98:	ldr	r1, [fp, #-16]
   20c9c:	cmp	r0, r1
   20ca0:	bcc	20cc0 <__assert_fail@plt+0xf4e8>
   20ca4:	b	20cd4 <__assert_fail@plt+0xf4fc>
   20ca8:	ldr	r0, [fp, #-16]
   20cac:	mvn	r1, #0
   20cb0:	udiv	r0, r1, r0
   20cb4:	ldr	r1, [fp, #-12]
   20cb8:	cmp	r0, r1
   20cbc:	bcs	20cd4 <__assert_fail@plt+0xf4fc>
   20cc0:	ldr	r0, [fp, #-12]
   20cc4:	ldr	r1, [fp, #-16]
   20cc8:	mul	r0, r0, r1
   20ccc:	str	r0, [fp, #-20]	; 0xffffffec
   20cd0:	b	21120 <__assert_fail@plt+0xf948>
   20cd4:	ldr	r0, [fp, #-12]
   20cd8:	ldr	r1, [fp, #-16]
   20cdc:	mul	r0, r0, r1
   20ce0:	str	r0, [fp, #-20]	; 0xffffffec
   20ce4:	b	21138 <__assert_fail@plt+0xf960>
   20ce8:	b	20f04 <__assert_fail@plt+0xf72c>
   20cec:	ldr	r0, [fp, #-16]
   20cf0:	cmp	r0, #0
   20cf4:	bcs	20e34 <__assert_fail@plt+0xf65c>
   20cf8:	ldr	r0, [fp, #-12]
   20cfc:	cmp	r0, #0
   20d00:	bcs	20dc0 <__assert_fail@plt+0xf5e8>
   20d04:	b	20d08 <__assert_fail@plt+0xf530>
   20d08:	ldr	r0, [fp, #-12]
   20d0c:	ldr	r2, [fp, #-16]
   20d10:	mvn	r1, #0
   20d14:	mvn	r3, #-2147483648	; 0x80000000
   20d18:	mov	ip, #0
   20d1c:	str	r0, [sp, #40]	; 0x28
   20d20:	mov	r0, r1
   20d24:	mov	r1, r3
   20d28:	mov	r3, ip
   20d2c:	bl	22228 <__assert_fail@plt+0x10a50>
   20d30:	ldr	r2, [sp, #40]	; 0x28
   20d34:	subs	r0, r2, r0
   20d38:	rscs	r1, r1, #0
   20d3c:	blt	20edc <__assert_fail@plt+0xf704>
   20d40:	b	20ef0 <__assert_fail@plt+0xf718>
   20d44:	b	20d58 <__assert_fail@plt+0xf580>
   20d48:	ldr	r0, [fp, #-16]
   20d4c:	cmp	r0, #1
   20d50:	bcc	20d68 <__assert_fail@plt+0xf590>
   20d54:	b	20d7c <__assert_fail@plt+0xf5a4>
   20d58:	ldr	r0, [fp, #-16]
   20d5c:	movw	r1, #0
   20d60:	cmp	r1, r0
   20d64:	bcs	20d7c <__assert_fail@plt+0xf5a4>
   20d68:	mov	r0, #0
   20d6c:	mvn	r1, #0
   20d70:	str	r1, [sp, #36]	; 0x24
   20d74:	str	r0, [sp, #32]
   20d78:	b	20da0 <__assert_fail@plt+0xf5c8>
   20d7c:	ldr	r0, [fp, #-16]
   20d80:	rsb	r2, r0, #0
   20d84:	mvn	r0, #0
   20d88:	mvn	r1, #-2147483648	; 0x80000000
   20d8c:	mov	r3, #0
   20d90:	bl	22228 <__assert_fail@plt+0x10a50>
   20d94:	str	r0, [sp, #36]	; 0x24
   20d98:	str	r1, [sp, #32]
   20d9c:	b	20da0 <__assert_fail@plt+0xf5c8>
   20da0:	ldr	r0, [sp, #32]
   20da4:	ldr	r1, [sp, #36]	; 0x24
   20da8:	ldr	r2, [fp, #-12]
   20dac:	mvn	r2, r2
   20db0:	subs	r1, r2, r1
   20db4:	rscs	r0, r0, #0
   20db8:	bge	20edc <__assert_fail@plt+0xf704>
   20dbc:	b	20ef0 <__assert_fail@plt+0xf718>
   20dc0:	ldr	r0, [fp, #-16]
   20dc4:	cmn	r0, #1
   20dc8:	bne	20e08 <__assert_fail@plt+0xf630>
   20dcc:	b	20de8 <__assert_fail@plt+0xf610>
   20dd0:	ldr	r0, [fp, #-12]
   20dd4:	rsbs	r0, r0, #0
   20dd8:	mov	r1, #0
   20ddc:	sbcs	r1, r1, #-2147483648	; 0x80000000
   20de0:	blt	20edc <__assert_fail@plt+0xf704>
   20de4:	b	20ef0 <__assert_fail@plt+0xf718>
   20de8:	ldr	r0, [fp, #-12]
   20dec:	movw	r1, #0
   20df0:	cmp	r1, r0
   20df4:	bcs	20ef0 <__assert_fail@plt+0xf718>
   20df8:	mov	r0, #0
   20dfc:	cmp	r0, #0
   20e00:	bne	20edc <__assert_fail@plt+0xf704>
   20e04:	b	20ef0 <__assert_fail@plt+0xf718>
   20e08:	ldr	r2, [fp, #-16]
   20e0c:	mov	r1, #-2147483648	; 0x80000000
   20e10:	mov	r0, #0
   20e14:	str	r0, [sp, #28]
   20e18:	ldr	r3, [sp, #28]
   20e1c:	bl	22154 <__assert_fail@plt+0x1097c>
   20e20:	ldr	r2, [fp, #-12]
   20e24:	subs	r0, r0, r2
   20e28:	sbcs	r1, r1, #0
   20e2c:	blt	20edc <__assert_fail@plt+0xf704>
   20e30:	b	20ef0 <__assert_fail@plt+0xf718>
   20e34:	ldr	r0, [fp, #-16]
   20e38:	cmp	r0, #0
   20e3c:	bne	20e44 <__assert_fail@plt+0xf66c>
   20e40:	b	20ef0 <__assert_fail@plt+0xf718>
   20e44:	ldr	r0, [fp, #-12]
   20e48:	cmp	r0, #0
   20e4c:	bcs	20eb4 <__assert_fail@plt+0xf6dc>
   20e50:	ldr	r0, [fp, #-12]
   20e54:	cmn	r0, #1
   20e58:	bne	20e88 <__assert_fail@plt+0xf6b0>
   20e5c:	b	20e78 <__assert_fail@plt+0xf6a0>
   20e60:	ldr	r0, [fp, #-16]
   20e64:	rsbs	r0, r0, #0
   20e68:	mov	r1, #0
   20e6c:	sbcs	r1, r1, #-2147483648	; 0x80000000
   20e70:	blt	20edc <__assert_fail@plt+0xf704>
   20e74:	b	20ef0 <__assert_fail@plt+0xf718>
   20e78:	mov	r0, #0
   20e7c:	cmp	r0, #0
   20e80:	bne	20edc <__assert_fail@plt+0xf704>
   20e84:	b	20ef0 <__assert_fail@plt+0xf718>
   20e88:	ldr	r2, [fp, #-12]
   20e8c:	mov	r1, #-2147483648	; 0x80000000
   20e90:	mov	r0, #0
   20e94:	str	r0, [sp, #24]
   20e98:	ldr	r3, [sp, #24]
   20e9c:	bl	22154 <__assert_fail@plt+0x1097c>
   20ea0:	ldr	r2, [fp, #-16]
   20ea4:	subs	r0, r0, r2
   20ea8:	sbcs	r1, r1, #0
   20eac:	blt	20edc <__assert_fail@plt+0xf704>
   20eb0:	b	20ef0 <__assert_fail@plt+0xf718>
   20eb4:	ldr	r2, [fp, #-16]
   20eb8:	mvn	r0, #0
   20ebc:	mvn	r1, #-2147483648	; 0x80000000
   20ec0:	mov	r3, #0
   20ec4:	bl	22228 <__assert_fail@plt+0x10a50>
   20ec8:	ldr	r2, [fp, #-12]
   20ecc:	subs	r0, r0, r2
   20ed0:	sbcs	r1, r1, #0
   20ed4:	bge	20ef0 <__assert_fail@plt+0xf718>
   20ed8:	b	20edc <__assert_fail@plt+0xf704>
   20edc:	ldr	r0, [fp, #-12]
   20ee0:	ldr	r1, [fp, #-16]
   20ee4:	mul	r0, r0, r1
   20ee8:	str	r0, [fp, #-20]	; 0xffffffec
   20eec:	b	21120 <__assert_fail@plt+0xf948>
   20ef0:	ldr	r0, [fp, #-12]
   20ef4:	ldr	r1, [fp, #-16]
   20ef8:	mul	r0, r0, r1
   20efc:	str	r0, [fp, #-20]	; 0xffffffec
   20f00:	b	21138 <__assert_fail@plt+0xf960>
   20f04:	ldr	r0, [fp, #-16]
   20f08:	cmp	r0, #0
   20f0c:	bcs	21048 <__assert_fail@plt+0xf870>
   20f10:	ldr	r0, [fp, #-12]
   20f14:	cmp	r0, #0
   20f18:	bcs	20fd0 <__assert_fail@plt+0xf7f8>
   20f1c:	b	20f50 <__assert_fail@plt+0xf778>
   20f20:	ldr	r0, [fp, #-12]
   20f24:	ldr	r2, [fp, #-16]
   20f28:	mvn	r1, #0
   20f2c:	mov	r3, #0
   20f30:	str	r0, [sp, #20]
   20f34:	mov	r0, r1
   20f38:	bl	22228 <__assert_fail@plt+0x10a50>
   20f3c:	ldr	r2, [sp, #20]
   20f40:	subs	r0, r2, r0
   20f44:	rscs	r1, r1, #0
   20f48:	bcc	210f8 <__assert_fail@plt+0xf920>
   20f4c:	b	2110c <__assert_fail@plt+0xf934>
   20f50:	b	20f64 <__assert_fail@plt+0xf78c>
   20f54:	ldr	r0, [fp, #-16]
   20f58:	cmp	r0, #1
   20f5c:	bcc	20f74 <__assert_fail@plt+0xf79c>
   20f60:	b	20f88 <__assert_fail@plt+0xf7b0>
   20f64:	ldr	r0, [fp, #-16]
   20f68:	movw	r1, #0
   20f6c:	cmp	r1, r0
   20f70:	bcs	20f88 <__assert_fail@plt+0xf7b0>
   20f74:	mov	r0, #1
   20f78:	mvn	r1, #0
   20f7c:	str	r1, [sp, #16]
   20f80:	str	r0, [sp, #12]
   20f84:	b	20fb0 <__assert_fail@plt+0xf7d8>
   20f88:	ldr	r0, [fp, #-16]
   20f8c:	rsb	r2, r0, #0
   20f90:	mvn	r0, #0
   20f94:	mov	r3, #0
   20f98:	str	r0, [sp, #8]
   20f9c:	ldr	r1, [sp, #8]
   20fa0:	bl	22228 <__assert_fail@plt+0x10a50>
   20fa4:	str	r0, [sp, #16]
   20fa8:	str	r1, [sp, #12]
   20fac:	b	20fb0 <__assert_fail@plt+0xf7d8>
   20fb0:	ldr	r0, [sp, #12]
   20fb4:	ldr	r1, [sp, #16]
   20fb8:	ldr	r2, [fp, #-12]
   20fbc:	mvn	r2, r2
   20fc0:	subs	r1, r2, r1
   20fc4:	rscs	r0, r0, #0
   20fc8:	bcs	210f8 <__assert_fail@plt+0xf920>
   20fcc:	b	2110c <__assert_fail@plt+0xf934>
   20fd0:	b	20fd8 <__assert_fail@plt+0xf800>
   20fd4:	b	20fdc <__assert_fail@plt+0xf804>
   20fd8:	b	2102c <__assert_fail@plt+0xf854>
   20fdc:	ldr	r0, [fp, #-16]
   20fe0:	cmn	r0, #1
   20fe4:	bne	2102c <__assert_fail@plt+0xf854>
   20fe8:	b	21004 <__assert_fail@plt+0xf82c>
   20fec:	ldr	r0, [fp, #-12]
   20ff0:	add	r0, r0, #0
   20ff4:	movw	r1, #0
   20ff8:	cmp	r1, r0
   20ffc:	bcc	210f8 <__assert_fail@plt+0xf920>
   21000:	b	2110c <__assert_fail@plt+0xf934>
   21004:	ldr	r0, [fp, #-12]
   21008:	movw	r1, #0
   2100c:	cmp	r1, r0
   21010:	bcs	2110c <__assert_fail@plt+0xf934>
   21014:	ldr	r0, [fp, #-12]
   21018:	sub	r0, r0, #1
   2101c:	mvn	r1, #0
   21020:	cmp	r1, r0
   21024:	bcc	210f8 <__assert_fail@plt+0xf920>
   21028:	b	2110c <__assert_fail@plt+0xf934>
   2102c:	ldr	r0, [fp, #-16]
   21030:	movw	r1, #0
   21034:	udiv	r0, r1, r0
   21038:	ldr	r1, [fp, #-12]
   2103c:	cmp	r0, r1
   21040:	bcc	210f8 <__assert_fail@plt+0xf920>
   21044:	b	2110c <__assert_fail@plt+0xf934>
   21048:	ldr	r0, [fp, #-16]
   2104c:	cmp	r0, #0
   21050:	bne	21058 <__assert_fail@plt+0xf880>
   21054:	b	2110c <__assert_fail@plt+0xf934>
   21058:	ldr	r0, [fp, #-12]
   2105c:	cmp	r0, #0
   21060:	bcs	210cc <__assert_fail@plt+0xf8f4>
   21064:	b	2106c <__assert_fail@plt+0xf894>
   21068:	b	21070 <__assert_fail@plt+0xf898>
   2106c:	b	210b0 <__assert_fail@plt+0xf8d8>
   21070:	ldr	r0, [fp, #-12]
   21074:	cmn	r0, #1
   21078:	bne	210b0 <__assert_fail@plt+0xf8d8>
   2107c:	b	21098 <__assert_fail@plt+0xf8c0>
   21080:	ldr	r0, [fp, #-16]
   21084:	add	r0, r0, #0
   21088:	movw	r1, #0
   2108c:	cmp	r1, r0
   21090:	bcc	210f8 <__assert_fail@plt+0xf920>
   21094:	b	2110c <__assert_fail@plt+0xf934>
   21098:	ldr	r0, [fp, #-16]
   2109c:	sub	r0, r0, #1
   210a0:	mvn	r1, #0
   210a4:	cmp	r1, r0
   210a8:	bcc	210f8 <__assert_fail@plt+0xf920>
   210ac:	b	2110c <__assert_fail@plt+0xf934>
   210b0:	ldr	r0, [fp, #-12]
   210b4:	movw	r1, #0
   210b8:	udiv	r0, r1, r0
   210bc:	ldr	r1, [fp, #-16]
   210c0:	cmp	r0, r1
   210c4:	bcc	210f8 <__assert_fail@plt+0xf920>
   210c8:	b	2110c <__assert_fail@plt+0xf934>
   210cc:	ldr	r2, [fp, #-16]
   210d0:	mvn	r0, #0
   210d4:	mov	r3, #0
   210d8:	str	r0, [sp, #4]
   210dc:	ldr	r1, [sp, #4]
   210e0:	bl	22228 <__assert_fail@plt+0x10a50>
   210e4:	ldr	r2, [fp, #-12]
   210e8:	subs	r0, r0, r2
   210ec:	sbcs	r1, r1, #0
   210f0:	bcs	2110c <__assert_fail@plt+0xf934>
   210f4:	b	210f8 <__assert_fail@plt+0xf920>
   210f8:	ldr	r0, [fp, #-12]
   210fc:	ldr	r1, [fp, #-16]
   21100:	mul	r0, r0, r1
   21104:	str	r0, [fp, #-20]	; 0xffffffec
   21108:	b	21120 <__assert_fail@plt+0xf948>
   2110c:	ldr	r0, [fp, #-12]
   21110:	ldr	r1, [fp, #-16]
   21114:	mul	r0, r0, r1
   21118:	str	r0, [fp, #-20]	; 0xffffffec
   2111c:	b	21138 <__assert_fail@plt+0xf960>
   21120:	bl	11664 <__errno_location@plt>
   21124:	movw	r1, #12
   21128:	str	r1, [r0]
   2112c:	movw	r0, #0
   21130:	str	r0, [fp, #-4]
   21134:	b	21148 <__assert_fail@plt+0xf970>
   21138:	ldr	r0, [fp, #-8]
   2113c:	ldr	r1, [fp, #-20]	; 0xffffffec
   21140:	bl	1fd7c <__assert_fail@plt+0xe5a4>
   21144:	str	r0, [fp, #-4]
   21148:	ldr	r0, [fp, #-4]
   2114c:	mov	sp, fp
   21150:	pop	{fp, pc}
   21154:	svcvc	0x00ffffff
   21158:	andhi	r0, r0, r0
   2115c:			; <UNDEFINED> instruction: 0xffff8000
   21160:	push	{fp, lr}
   21164:	mov	fp, sp
   21168:	sub	sp, sp, #24
   2116c:	str	r0, [fp, #-8]
   21170:	str	r1, [sp, #12]
   21174:	ldr	r0, [fp, #-8]
   21178:	str	r0, [sp, #8]
   2117c:	ldr	r0, [sp, #12]
   21180:	str	r0, [sp, #4]
   21184:	ldr	r0, [sp, #8]
   21188:	ldr	r1, [sp, #4]
   2118c:	cmp	r0, r1
   21190:	bne	211a0 <__assert_fail@plt+0xf9c8>
   21194:	movw	r0, #0
   21198:	str	r0, [fp, #-4]
   2119c:	b	2120c <__assert_fail@plt+0xfa34>
   211a0:	b	211a4 <__assert_fail@plt+0xf9cc>
   211a4:	ldr	r0, [sp, #8]
   211a8:	ldrb	r0, [r0]
   211ac:	bl	220cc <__assert_fail@plt+0x108f4>
   211b0:	strb	r0, [sp, #3]
   211b4:	ldr	r0, [sp, #4]
   211b8:	ldrb	r0, [r0]
   211bc:	bl	220cc <__assert_fail@plt+0x108f4>
   211c0:	strb	r0, [sp, #2]
   211c4:	ldrb	r0, [sp, #3]
   211c8:	cmp	r0, #0
   211cc:	bne	211d4 <__assert_fail@plt+0xf9fc>
   211d0:	b	211fc <__assert_fail@plt+0xfa24>
   211d4:	ldr	r0, [sp, #8]
   211d8:	add	r0, r0, #1
   211dc:	str	r0, [sp, #8]
   211e0:	ldr	r0, [sp, #4]
   211e4:	add	r0, r0, #1
   211e8:	str	r0, [sp, #4]
   211ec:	ldrb	r0, [sp, #3]
   211f0:	ldrb	r1, [sp, #2]
   211f4:	cmp	r0, r1
   211f8:	beq	211a4 <__assert_fail@plt+0xf9cc>
   211fc:	ldrb	r0, [sp, #3]
   21200:	ldrb	r1, [sp, #2]
   21204:	sub	r0, r0, r1
   21208:	str	r0, [fp, #-4]
   2120c:	ldr	r0, [fp, #-4]
   21210:	mov	sp, fp
   21214:	pop	{fp, pc}
   21218:	push	{fp, lr}
   2121c:	mov	fp, sp
   21220:	sub	sp, sp, #16
   21224:	str	r0, [sp, #8]
   21228:	ldr	r0, [sp, #8]
   2122c:	bl	11574 <__fpending@plt>
   21230:	cmp	r0, #0
   21234:	movw	r0, #0
   21238:	movne	r0, #1
   2123c:	and	r0, r0, #1
   21240:	strb	r0, [sp, #7]
   21244:	ldr	r0, [sp, #8]
   21248:	bl	11484 <ferror@plt>
   2124c:	cmp	r0, #0
   21250:	movw	r0, #0
   21254:	movne	r0, #1
   21258:	and	r0, r0, #1
   2125c:	strb	r0, [sp, #6]
   21260:	ldr	r0, [sp, #8]
   21264:	bl	116c4 <fclose@plt>
   21268:	cmp	r0, #0
   2126c:	movw	r0, #0
   21270:	movne	r0, #1
   21274:	and	r0, r0, #1
   21278:	strb	r0, [sp, #5]
   2127c:	ldrb	r0, [sp, #6]
   21280:	tst	r0, #1
   21284:	bne	212b0 <__assert_fail@plt+0xfad8>
   21288:	ldrb	r0, [sp, #5]
   2128c:	tst	r0, #1
   21290:	beq	212d4 <__assert_fail@plt+0xfafc>
   21294:	ldrb	r0, [sp, #7]
   21298:	tst	r0, #1
   2129c:	bne	212b0 <__assert_fail@plt+0xfad8>
   212a0:	bl	11664 <__errno_location@plt>
   212a4:	ldr	r0, [r0]
   212a8:	cmp	r0, #9
   212ac:	beq	212d4 <__assert_fail@plt+0xfafc>
   212b0:	ldrb	r0, [sp, #5]
   212b4:	tst	r0, #1
   212b8:	bne	212c8 <__assert_fail@plt+0xfaf0>
   212bc:	bl	11664 <__errno_location@plt>
   212c0:	movw	r1, #0
   212c4:	str	r1, [r0]
   212c8:	mvn	r0, #0
   212cc:	str	r0, [fp, #-4]
   212d0:	b	212dc <__assert_fail@plt+0xfb04>
   212d4:	movw	r0, #0
   212d8:	str	r0, [fp, #-4]
   212dc:	ldr	r0, [fp, #-4]
   212e0:	mov	sp, fp
   212e4:	pop	{fp, pc}
   212e8:	push	{r4, r5, fp, lr}
   212ec:	add	fp, sp, #8
   212f0:	sub	sp, sp, #272	; 0x110
   212f4:	add	r1, sp, #7
   212f8:	str	r0, [fp, #-16]
   212fc:	ldr	r0, [fp, #-16]
   21300:	movw	r2, #257	; 0x101
   21304:	bl	21990 <__assert_fail@plt+0x101b8>
   21308:	cmp	r0, #0
   2130c:	beq	21320 <__assert_fail@plt+0xfb48>
   21310:	movw	r0, #0
   21314:	and	r0, r0, #1
   21318:	strb	r0, [fp, #-9]
   2131c:	b	21374 <__assert_fail@plt+0xfb9c>
   21320:	add	r0, sp, #7
   21324:	movw	r1, #18642	; 0x48d2
   21328:	movt	r1, #2
   2132c:	bl	11430 <strcmp@plt>
   21330:	cmp	r0, #0
   21334:	movw	r0, #1
   21338:	str	r0, [sp]
   2133c:	beq	21360 <__assert_fail@plt+0xfb88>
   21340:	add	r0, sp, #7
   21344:	movw	r1, #18644	; 0x48d4
   21348:	movt	r1, #2
   2134c:	bl	11430 <strcmp@plt>
   21350:	cmp	r0, #0
   21354:	movw	r0, #0
   21358:	moveq	r0, #1
   2135c:	str	r0, [sp]
   21360:	ldr	r0, [sp]
   21364:	mvn	r1, #0
   21368:	eor	r0, r0, r1
   2136c:	and	r0, r0, #1
   21370:	strb	r0, [fp, #-9]
   21374:	ldrb	r0, [fp, #-9]
   21378:	and	r0, r0, #1
   2137c:	sub	sp, fp, #8
   21380:	pop	{r4, r5, fp, pc}
   21384:	push	{fp, lr}
   21388:	mov	fp, sp
   2138c:	bl	11664 <__errno_location@plt>
   21390:	movw	r1, #12
   21394:	str	r1, [r0]
   21398:	movw	r0, #0
   2139c:	pop	{fp, pc}
   213a0:	push	{fp, lr}
   213a4:	mov	fp, sp
   213a8:	sub	sp, sp, #8
   213ac:	str	r0, [sp, #4]
   213b0:	ldr	r0, [sp, #4]
   213b4:	cmn	r0, #1
   213b8:	bhi	213cc <__assert_fail@plt+0xfbf4>
   213bc:	ldr	r0, [sp, #4]
   213c0:	bl	1fc5c <__assert_fail@plt+0xe484>
   213c4:	str	r0, [sp]
   213c8:	b	213d4 <__assert_fail@plt+0xfbfc>
   213cc:	bl	21384 <__assert_fail@plt+0xfbac>
   213d0:	str	r0, [sp]
   213d4:	ldr	r0, [sp]
   213d8:	mov	sp, fp
   213dc:	pop	{fp, pc}
   213e0:	push	{fp, lr}
   213e4:	mov	fp, sp
   213e8:	sub	sp, sp, #16
   213ec:	str	r0, [fp, #-4]
   213f0:	str	r1, [sp, #8]
   213f4:	ldr	r0, [sp, #8]
   213f8:	cmn	r0, #1
   213fc:	bhi	21434 <__assert_fail@plt+0xfc5c>
   21400:	ldr	r0, [fp, #-4]
   21404:	ldr	r1, [sp, #8]
   21408:	ldr	r2, [sp, #8]
   2140c:	cmp	r2, #0
   21410:	movw	r2, #0
   21414:	movne	r2, #1
   21418:	mvn	r3, #0
   2141c:	eor	r2, r2, r3
   21420:	and	r2, r2, #1
   21424:	orr	r1, r1, r2
   21428:	bl	1fd7c <__assert_fail@plt+0xe5a4>
   2142c:	str	r0, [sp, #4]
   21430:	b	2143c <__assert_fail@plt+0xfc64>
   21434:	bl	21384 <__assert_fail@plt+0xfbac>
   21438:	str	r0, [sp, #4]
   2143c:	ldr	r0, [sp, #4]
   21440:	mov	sp, fp
   21444:	pop	{fp, pc}
   21448:	push	{fp, lr}
   2144c:	mov	fp, sp
   21450:	sub	sp, sp, #16
   21454:	str	r0, [sp, #8]
   21458:	str	r1, [sp, #4]
   2145c:	ldr	r0, [sp, #8]
   21460:	mvn	r1, #0
   21464:	cmp	r1, r0
   21468:	bcs	2148c <__assert_fail@plt+0xfcb4>
   2146c:	ldr	r0, [sp, #4]
   21470:	cmp	r0, #0
   21474:	beq	21484 <__assert_fail@plt+0xfcac>
   21478:	bl	21384 <__assert_fail@plt+0xfbac>
   2147c:	str	r0, [fp, #-4]
   21480:	b	214cc <__assert_fail@plt+0xfcf4>
   21484:	movw	r0, #0
   21488:	str	r0, [sp, #8]
   2148c:	ldr	r0, [sp, #4]
   21490:	mvn	r1, #0
   21494:	cmp	r1, r0
   21498:	bcs	214bc <__assert_fail@plt+0xfce4>
   2149c:	ldr	r0, [sp, #8]
   214a0:	cmp	r0, #0
   214a4:	beq	214b4 <__assert_fail@plt+0xfcdc>
   214a8:	bl	21384 <__assert_fail@plt+0xfbac>
   214ac:	str	r0, [fp, #-4]
   214b0:	b	214cc <__assert_fail@plt+0xfcf4>
   214b4:	movw	r0, #0
   214b8:	str	r0, [sp, #4]
   214bc:	ldr	r0, [sp, #8]
   214c0:	ldr	r1, [sp, #4]
   214c4:	bl	1f550 <__assert_fail@plt+0xdd78>
   214c8:	str	r0, [fp, #-4]
   214cc:	ldr	r0, [fp, #-4]
   214d0:	mov	sp, fp
   214d4:	pop	{fp, pc}
   214d8:	push	{fp, lr}
   214dc:	mov	fp, sp
   214e0:	sub	sp, sp, #16
   214e4:	str	r0, [fp, #-4]
   214e8:	str	r1, [sp, #8]
   214ec:	str	r2, [sp, #4]
   214f0:	ldr	r0, [sp, #8]
   214f4:	cmp	r0, #0
   214f8:	beq	21508 <__assert_fail@plt+0xfd30>
   214fc:	ldr	r0, [sp, #4]
   21500:	cmp	r0, #0
   21504:	bne	21514 <__assert_fail@plt+0xfd3c>
   21508:	movw	r0, #1
   2150c:	str	r0, [sp, #4]
   21510:	str	r0, [sp, #8]
   21514:	ldr	r0, [sp, #8]
   21518:	cmn	r0, #1
   2151c:	bhi	21544 <__assert_fail@plt+0xfd6c>
   21520:	ldr	r0, [sp, #4]
   21524:	cmn	r0, #1
   21528:	bhi	21544 <__assert_fail@plt+0xfd6c>
   2152c:	ldr	r0, [fp, #-4]
   21530:	ldr	r1, [sp, #8]
   21534:	ldr	r2, [sp, #4]
   21538:	bl	1fe20 <__assert_fail@plt+0xe648>
   2153c:	str	r0, [sp]
   21540:	b	2154c <__assert_fail@plt+0xfd74>
   21544:	bl	21384 <__assert_fail@plt+0xfbac>
   21548:	str	r0, [sp]
   2154c:	ldr	r0, [sp]
   21550:	mov	sp, fp
   21554:	pop	{fp, pc}
   21558:	push	{fp, lr}
   2155c:	mov	fp, sp
   21560:	sub	sp, sp, #8
   21564:	movw	r0, #14
   21568:	bl	11730 <nl_langinfo@plt>
   2156c:	str	r0, [sp, #4]
   21570:	ldr	r0, [sp, #4]
   21574:	movw	r1, #0
   21578:	cmp	r0, r1
   2157c:	bne	2158c <__assert_fail@plt+0xfdb4>
   21580:	movw	r0, #12626	; 0x3152
   21584:	movt	r0, #2
   21588:	str	r0, [sp, #4]
   2158c:	ldr	r0, [sp, #4]
   21590:	ldrb	r0, [r0]
   21594:	cmp	r0, #0
   21598:	bne	215a8 <__assert_fail@plt+0xfdd0>
   2159c:	movw	r0, #18650	; 0x48da
   215a0:	movt	r0, #2
   215a4:	str	r0, [sp, #4]
   215a8:	ldr	r0, [sp, #4]
   215ac:	mov	sp, fp
   215b0:	pop	{fp, pc}
   215b4:	push	{fp, lr}
   215b8:	mov	fp, sp
   215bc:	sub	sp, sp, #48	; 0x30
   215c0:	str	r0, [fp, #-8]
   215c4:	mov	r0, #15
   215c8:	str	r0, [fp, #-12]
   215cc:	ldr	r0, [fp, #-12]
   215d0:	add	r0, r0, #1
   215d4:	str	r0, [fp, #-16]
   215d8:	ldr	r0, [fp, #-8]
   215dc:	ldr	r1, [fp, #-16]
   215e0:	asr	r2, r1, #31
   215e4:	adds	r0, r0, r1
   215e8:	adc	r1, r2, #0
   215ec:	and	r2, r1, #1
   215f0:	rsb	r3, r2, #0
   215f4:	eor	r1, r3, r1
   215f8:	cmp	r1, #0
   215fc:	movwne	r1, #1
   21600:	eor	r2, r2, r0, lsr #31
   21604:	cmp	r2, #0
   21608:	movwne	r2, #1
   2160c:	orr	r1, r1, r2
   21610:	str	r0, [fp, #-20]	; 0xffffffec
   21614:	tst	r1, #1
   21618:	bne	216c0 <__assert_fail@plt+0xfee8>
   2161c:	ldr	r0, [pc, #176]	; 216d4 <__assert_fail@plt+0xfefc>
   21620:	ldr	r1, [fp, #-20]	; 0xffffffec
   21624:	cmp	r0, r1
   21628:	bcc	216c0 <__assert_fail@plt+0xfee8>
   2162c:	ldr	r0, [fp, #-20]	; 0xffffffec
   21630:	bl	115bc <malloc@plt>
   21634:	str	r0, [sp, #24]
   21638:	ldr	r0, [sp, #24]
   2163c:	movw	r1, #0
   21640:	cmp	r0, r1
   21644:	beq	216bc <__assert_fail@plt+0xfee4>
   21648:	ldr	r0, [sp, #24]
   2164c:	str	r0, [sp, #20]
   21650:	ldr	r0, [sp, #20]
   21654:	adds	r0, r0, #8
   21658:	mov	r1, #0
   2165c:	adc	r1, r1, #0
   21660:	str	r0, [sp, #16]
   21664:	ldr	r0, [sp, #16]
   21668:	ldr	r2, [fp, #-12]
   2166c:	mvn	r3, #0
   21670:	eor	r2, r2, r3
   21674:	and	r0, r0, r2
   21678:	add	r0, r0, #8
   2167c:	ldr	r2, [sp, #20]
   21680:	sub	r0, r0, r2
   21684:	str	r0, [sp, #12]
   21688:	ldr	r0, [sp, #24]
   2168c:	ldr	r2, [sp, #12]
   21690:	add	r0, r0, r2
   21694:	str	r0, [sp, #8]
   21698:	ldr	r0, [sp, #8]
   2169c:	str	r0, [sp, #4]
   216a0:	ldr	r0, [sp, #12]
   216a4:	ldr	r2, [sp, #4]
   216a8:	add	r2, r2, r3
   216ac:	strb	r0, [r2]
   216b0:	ldr	r0, [sp, #4]
   216b4:	str	r0, [fp, #-4]
   216b8:	b	216c8 <__assert_fail@plt+0xfef0>
   216bc:	b	216c0 <__assert_fail@plt+0xfee8>
   216c0:	movw	r0, #0
   216c4:	str	r0, [fp, #-4]
   216c8:	ldr	r0, [fp, #-4]
   216cc:	mov	sp, fp
   216d0:	pop	{fp, pc}
   216d4:	svcvc	0x00ffffff
   216d8:	push	{fp, lr}
   216dc:	mov	fp, sp
   216e0:	sub	sp, sp, #8
   216e4:	str	r0, [sp, #4]
   216e8:	ldr	r0, [sp, #4]
   216ec:	and	r0, r0, #7
   216f0:	cmp	r0, #0
   216f4:	beq	216fc <__assert_fail@plt+0xff24>
   216f8:	bl	117a8 <abort@plt>
   216fc:	ldr	r0, [sp, #4]
   21700:	and	r0, r0, #8
   21704:	cmp	r0, #0
   21708:	beq	21738 <__assert_fail@plt+0xff60>
   2170c:	ldr	r0, [sp, #4]
   21710:	ldr	r1, [sp, #4]
   21714:	mvn	r2, #0
   21718:	add	r1, r1, r2
   2171c:	ldrb	r1, [r1]
   21720:	movw	r2, #0
   21724:	sub	r1, r2, r1
   21728:	add	r0, r0, r1
   2172c:	str	r0, [sp]
   21730:	ldr	r0, [sp]
   21734:	bl	1fb14 <__assert_fail@plt+0xe33c>
   21738:	mov	sp, fp
   2173c:	pop	{fp, pc}
   21740:	push	{fp, lr}
   21744:	mov	fp, sp
   21748:	sub	sp, sp, #16
   2174c:	str	r0, [fp, #-4]
   21750:	ldr	r0, [fp, #-4]
   21754:	bl	1146c <wcwidth@plt>
   21758:	str	r0, [sp, #8]
   2175c:	ldr	r0, [sp, #8]
   21760:	cmp	r0, #0
   21764:	blt	21774 <__assert_fail@plt+0xff9c>
   21768:	ldr	r0, [sp, #8]
   2176c:	str	r0, [sp, #4]
   21770:	b	21798 <__assert_fail@plt+0xffc0>
   21774:	ldr	r0, [fp, #-4]
   21778:	bl	11514 <iswcntrl@plt>
   2177c:	cmp	r0, #0
   21780:	movw	r0, #0
   21784:	movne	r0, #1
   21788:	tst	r0, #1
   2178c:	movw	r0, #0
   21790:	moveq	r0, #1
   21794:	str	r0, [sp, #4]
   21798:	ldr	r0, [sp, #4]
   2179c:	mov	sp, fp
   217a0:	pop	{fp, pc}
   217a4:	push	{fp, lr}
   217a8:	mov	fp, sp
   217ac:	sub	sp, sp, #8
   217b0:	str	r0, [sp, #4]
   217b4:	str	r1, [sp]
   217b8:	ldr	r0, [sp]
   217bc:	ldr	r0, [r0]
   217c0:	ldr	r1, [sp]
   217c4:	add	r1, r1, #16
   217c8:	cmp	r0, r1
   217cc:	bne	21800 <__assert_fail@plt+0x10028>
   217d0:	ldr	r0, [sp, #4]
   217d4:	add	r0, r0, #16
   217d8:	ldr	r1, [sp]
   217dc:	add	r1, r1, #16
   217e0:	ldr	r2, [sp]
   217e4:	ldr	r2, [r2, #4]
   217e8:	bl	1149c <memcpy@plt>
   217ec:	ldr	r0, [sp, #4]
   217f0:	add	r0, r0, #16
   217f4:	ldr	r1, [sp, #4]
   217f8:	str	r0, [r1]
   217fc:	b	21810 <__assert_fail@plt+0x10038>
   21800:	ldr	r0, [sp]
   21804:	ldr	r0, [r0]
   21808:	ldr	r1, [sp, #4]
   2180c:	str	r0, [r1]
   21810:	ldr	r0, [sp]
   21814:	ldr	r0, [r0, #4]
   21818:	ldr	r1, [sp, #4]
   2181c:	str	r0, [r1, #4]
   21820:	ldr	r0, [sp]
   21824:	ldrb	r0, [r0, #8]
   21828:	ldr	r1, [sp, #4]
   2182c:	and	r2, r0, #1
   21830:	strb	r2, [r1, #8]
   21834:	tst	r0, #1
   21838:	beq	2184c <__assert_fail@plt+0x10074>
   2183c:	ldr	r0, [sp]
   21840:	ldr	r0, [r0, #12]
   21844:	ldr	r1, [sp, #4]
   21848:	str	r0, [r1, #12]
   2184c:	mov	sp, fp
   21850:	pop	{fp, pc}
   21854:	sub	sp, sp, #4
   21858:	movw	r1, #18656	; 0x48e0
   2185c:	movt	r1, #2
   21860:	strb	r0, [sp, #3]
   21864:	ldrb	r0, [sp, #3]
   21868:	lsr	r0, r0, #5
   2186c:	movw	r2, #18656	; 0x48e0
   21870:	movt	r2, #2
   21874:	add	r0, r2, r0, lsl #2
   21878:	ldr	r0, [r0]
   2187c:	ldrb	r2, [sp, #3]
   21880:	and	r2, r2, #31
   21884:	lsr	r0, r0, r2
   21888:	and	r0, r0, #1
   2188c:	cmp	r0, #0
   21890:	movw	r0, #0
   21894:	movne	r0, #1
   21898:	and	r0, r0, #1
   2189c:	add	sp, sp, #4
   218a0:	bx	lr
   218a4:	push	{fp, lr}
   218a8:	mov	fp, sp
   218ac:	sub	sp, sp, #80	; 0x50
   218b0:	str	r0, [fp, #-8]
   218b4:	bl	1155c <__ctype_get_mb_cur_max@plt>
   218b8:	cmp	r0, #1
   218bc:	bls	21978 <__assert_fail@plt+0x101a0>
   218c0:	movw	r0, #0
   218c4:	str	r0, [fp, #-12]
   218c8:	ldr	r0, [fp, #-8]
   218cc:	str	r0, [sp, #28]
   218d0:	movw	r0, #0
   218d4:	strb	r0, [sp, #12]
   218d8:	add	r1, sp, #12
   218dc:	add	r1, r1, #4
   218e0:	str	r0, [sp, #8]
   218e4:	mov	r0, r1
   218e8:	ldr	r1, [sp, #8]
   218ec:	and	r1, r1, #255	; 0xff
   218f0:	movw	r2, #8
   218f4:	bl	11688 <memset@plt>
   218f8:	ldr	r0, [sp, #8]
   218fc:	strb	r0, [sp, #24]
   21900:	add	r0, sp, #12
   21904:	bl	18aac <__assert_fail@plt+0x72d4>
   21908:	ldrb	r0, [sp, #36]	; 0x24
   2190c:	tst	r0, #1
   21910:	movw	r0, #0
   21914:	str	r0, [sp, #4]
   21918:	beq	21930 <__assert_fail@plt+0x10158>
   2191c:	ldr	r0, [sp, #40]	; 0x28
   21920:	cmp	r0, #0
   21924:	movw	r0, #0
   21928:	moveq	r0, #1
   2192c:	str	r0, [sp, #4]
   21930:	ldr	r0, [sp, #4]
   21934:	mvn	r1, #0
   21938:	eor	r0, r0, r1
   2193c:	tst	r0, #1
   21940:	beq	2196c <__assert_fail@plt+0x10194>
   21944:	ldr	r0, [fp, #-12]
   21948:	add	r0, r0, #1
   2194c:	str	r0, [fp, #-12]
   21950:	ldr	r0, [sp, #32]
   21954:	ldr	r1, [sp, #28]
   21958:	add	r0, r1, r0
   2195c:	str	r0, [sp, #28]
   21960:	movw	r0, #0
   21964:	strb	r0, [sp, #24]
   21968:	b	21900 <__assert_fail@plt+0x10128>
   2196c:	ldr	r0, [fp, #-12]
   21970:	str	r0, [fp, #-4]
   21974:	b	21984 <__assert_fail@plt+0x101ac>
   21978:	ldr	r0, [fp, #-8]
   2197c:	bl	11634 <strlen@plt>
   21980:	str	r0, [fp, #-4]
   21984:	ldr	r0, [fp, #-4]
   21988:	mov	sp, fp
   2198c:	pop	{fp, pc}
   21990:	push	{fp, lr}
   21994:	mov	fp, sp
   21998:	sub	sp, sp, #16
   2199c:	str	r0, [fp, #-4]
   219a0:	str	r1, [sp, #8]
   219a4:	str	r2, [sp, #4]
   219a8:	ldr	r0, [fp, #-4]
   219ac:	ldr	r1, [sp, #8]
   219b0:	ldr	r2, [sp, #4]
   219b4:	bl	219c0 <__assert_fail@plt+0x101e8>
   219b8:	mov	sp, fp
   219bc:	pop	{fp, pc}
   219c0:	push	{fp, lr}
   219c4:	mov	fp, sp
   219c8:	sub	sp, sp, #24
   219cc:	str	r0, [fp, #-8]
   219d0:	str	r1, [sp, #12]
   219d4:	str	r2, [sp, #8]
   219d8:	ldr	r0, [fp, #-8]
   219dc:	bl	21ac0 <__assert_fail@plt+0x102e8>
   219e0:	str	r0, [sp, #4]
   219e4:	ldr	r0, [sp, #4]
   219e8:	movw	r1, #0
   219ec:	cmp	r0, r1
   219f0:	bne	21a18 <__assert_fail@plt+0x10240>
   219f4:	ldr	r0, [sp, #8]
   219f8:	cmp	r0, #0
   219fc:	bls	21a0c <__assert_fail@plt+0x10234>
   21a00:	ldr	r0, [sp, #12]
   21a04:	movw	r1, #0
   21a08:	strb	r1, [r0]
   21a0c:	movw	r0, #22
   21a10:	str	r0, [fp, #-4]
   21a14:	b	21a94 <__assert_fail@plt+0x102bc>
   21a18:	ldr	r0, [sp, #4]
   21a1c:	bl	11634 <strlen@plt>
   21a20:	str	r0, [sp]
   21a24:	ldr	r0, [sp]
   21a28:	ldr	r1, [sp, #8]
   21a2c:	cmp	r0, r1
   21a30:	bcs	21a54 <__assert_fail@plt+0x1027c>
   21a34:	ldr	r0, [sp, #12]
   21a38:	ldr	r1, [sp, #4]
   21a3c:	ldr	r2, [sp]
   21a40:	add	r2, r2, #1
   21a44:	bl	1149c <memcpy@plt>
   21a48:	movw	r0, #0
   21a4c:	str	r0, [fp, #-4]
   21a50:	b	21a94 <__assert_fail@plt+0x102bc>
   21a54:	ldr	r0, [sp, #8]
   21a58:	cmp	r0, #0
   21a5c:	bls	21a8c <__assert_fail@plt+0x102b4>
   21a60:	ldr	r0, [sp, #12]
   21a64:	ldr	r1, [sp, #4]
   21a68:	ldr	r2, [sp, #8]
   21a6c:	sub	r2, r2, #1
   21a70:	bl	1149c <memcpy@plt>
   21a74:	ldr	r0, [sp, #12]
   21a78:	ldr	r1, [sp, #8]
   21a7c:	sub	r1, r1, #1
   21a80:	add	r0, r0, r1
   21a84:	movw	r1, #0
   21a88:	strb	r1, [r0]
   21a8c:	movw	r0, #34	; 0x22
   21a90:	str	r0, [fp, #-4]
   21a94:	ldr	r0, [fp, #-4]
   21a98:	mov	sp, fp
   21a9c:	pop	{fp, pc}
   21aa0:	push	{fp, lr}
   21aa4:	mov	fp, sp
   21aa8:	sub	sp, sp, #8
   21aac:	str	r0, [sp, #4]
   21ab0:	ldr	r0, [sp, #4]
   21ab4:	bl	21ac0 <__assert_fail@plt+0x102e8>
   21ab8:	mov	sp, fp
   21abc:	pop	{fp, pc}
   21ac0:	push	{fp, lr}
   21ac4:	mov	fp, sp
   21ac8:	sub	sp, sp, #8
   21acc:	str	r0, [sp, #4]
   21ad0:	ldr	r0, [sp, #4]
   21ad4:	movw	r1, #0
   21ad8:	bl	11700 <setlocale@plt>
   21adc:	str	r0, [sp]
   21ae0:	ldr	r0, [sp]
   21ae4:	mov	sp, fp
   21ae8:	pop	{fp, pc}
   21aec:	push	{fp, lr}
   21af0:	mov	fp, sp
   21af4:	sub	sp, sp, #8
   21af8:	str	r0, [sp, #4]
   21afc:	ldr	r0, [sp, #4]
   21b00:	movw	r1, #0
   21b04:	movw	r2, #3
   21b08:	bl	1f5ec <__assert_fail@plt+0xde14>
   21b0c:	mov	sp, fp
   21b10:	pop	{fp, pc}
   21b14:	sub	sp, sp, #12
   21b18:	str	r0, [sp, #4]
   21b1c:	ldr	r0, [sp, #4]
   21b20:	sub	r1, r0, #48	; 0x30
   21b24:	cmp	r1, #10
   21b28:	str	r0, [sp]
   21b2c:	bcc	21b5c <__assert_fail@plt+0x10384>
   21b30:	b	21b34 <__assert_fail@plt+0x1035c>
   21b34:	ldr	r0, [sp]
   21b38:	sub	r1, r0, #65	; 0x41
   21b3c:	cmp	r1, #26
   21b40:	bcc	21b5c <__assert_fail@plt+0x10384>
   21b44:	b	21b48 <__assert_fail@plt+0x10370>
   21b48:	ldr	r0, [sp]
   21b4c:	sub	r1, r0, #97	; 0x61
   21b50:	cmp	r1, #25
   21b54:	bhi	21b6c <__assert_fail@plt+0x10394>
   21b58:	b	21b5c <__assert_fail@plt+0x10384>
   21b5c:	movw	r0, #1
   21b60:	and	r0, r0, #1
   21b64:	strb	r0, [sp, #11]
   21b68:	b	21b78 <__assert_fail@plt+0x103a0>
   21b6c:	movw	r0, #0
   21b70:	and	r0, r0, #1
   21b74:	strb	r0, [sp, #11]
   21b78:	ldrb	r0, [sp, #11]
   21b7c:	and	r0, r0, #1
   21b80:	add	sp, sp, #12
   21b84:	bx	lr
   21b88:	sub	sp, sp, #12
   21b8c:	str	r0, [sp, #4]
   21b90:	ldr	r0, [sp, #4]
   21b94:	sub	r1, r0, #65	; 0x41
   21b98:	cmp	r1, #26
   21b9c:	str	r0, [sp]
   21ba0:	bcc	21bbc <__assert_fail@plt+0x103e4>
   21ba4:	b	21ba8 <__assert_fail@plt+0x103d0>
   21ba8:	ldr	r0, [sp]
   21bac:	sub	r1, r0, #97	; 0x61
   21bb0:	cmp	r1, #25
   21bb4:	bhi	21bcc <__assert_fail@plt+0x103f4>
   21bb8:	b	21bbc <__assert_fail@plt+0x103e4>
   21bbc:	movw	r0, #1
   21bc0:	and	r0, r0, #1
   21bc4:	strb	r0, [sp, #11]
   21bc8:	b	21bd8 <__assert_fail@plt+0x10400>
   21bcc:	movw	r0, #0
   21bd0:	and	r0, r0, #1
   21bd4:	strb	r0, [sp, #11]
   21bd8:	ldrb	r0, [sp, #11]
   21bdc:	and	r0, r0, #1
   21be0:	add	sp, sp, #12
   21be4:	bx	lr
   21be8:	sub	sp, sp, #8
   21bec:	str	r0, [sp]
   21bf0:	ldr	r0, [sp]
   21bf4:	cmp	r0, #127	; 0x7f
   21bf8:	bhi	21c10 <__assert_fail@plt+0x10438>
   21bfc:	b	21c00 <__assert_fail@plt+0x10428>
   21c00:	movw	r0, #1
   21c04:	and	r0, r0, #1
   21c08:	strb	r0, [sp, #7]
   21c0c:	b	21c1c <__assert_fail@plt+0x10444>
   21c10:	movw	r0, #0
   21c14:	and	r0, r0, #1
   21c18:	strb	r0, [sp, #7]
   21c1c:	ldrb	r0, [sp, #7]
   21c20:	and	r0, r0, #1
   21c24:	add	sp, sp, #8
   21c28:	bx	lr
   21c2c:	sub	sp, sp, #8
   21c30:	str	r0, [sp, #4]
   21c34:	ldr	r0, [sp, #4]
   21c38:	cmp	r0, #32
   21c3c:	movw	r0, #1
   21c40:	str	r0, [sp]
   21c44:	beq	21c5c <__assert_fail@plt+0x10484>
   21c48:	ldr	r0, [sp, #4]
   21c4c:	cmp	r0, #9
   21c50:	movw	r0, #0
   21c54:	moveq	r0, #1
   21c58:	str	r0, [sp]
   21c5c:	ldr	r0, [sp]
   21c60:	and	r0, r0, #1
   21c64:	add	sp, sp, #8
   21c68:	bx	lr
   21c6c:	sub	sp, sp, #12
   21c70:	str	r0, [sp, #4]
   21c74:	ldr	r0, [sp, #4]
   21c78:	cmp	r0, #32
   21c7c:	str	r0, [sp]
   21c80:	bcc	21c98 <__assert_fail@plt+0x104c0>
   21c84:	b	21c88 <__assert_fail@plt+0x104b0>
   21c88:	ldr	r0, [sp]
   21c8c:	cmp	r0, #127	; 0x7f
   21c90:	bne	21ca8 <__assert_fail@plt+0x104d0>
   21c94:	b	21c98 <__assert_fail@plt+0x104c0>
   21c98:	movw	r0, #1
   21c9c:	and	r0, r0, #1
   21ca0:	strb	r0, [sp, #11]
   21ca4:	b	21cb4 <__assert_fail@plt+0x104dc>
   21ca8:	movw	r0, #0
   21cac:	and	r0, r0, #1
   21cb0:	strb	r0, [sp, #11]
   21cb4:	ldrb	r0, [sp, #11]
   21cb8:	and	r0, r0, #1
   21cbc:	add	sp, sp, #12
   21cc0:	bx	lr
   21cc4:	sub	sp, sp, #8
   21cc8:	str	r0, [sp]
   21ccc:	ldr	r0, [sp]
   21cd0:	sub	r0, r0, #48	; 0x30
   21cd4:	cmp	r0, #9
   21cd8:	bhi	21cf0 <__assert_fail@plt+0x10518>
   21cdc:	b	21ce0 <__assert_fail@plt+0x10508>
   21ce0:	movw	r0, #1
   21ce4:	and	r0, r0, #1
   21ce8:	strb	r0, [sp, #7]
   21cec:	b	21cfc <__assert_fail@plt+0x10524>
   21cf0:	movw	r0, #0
   21cf4:	and	r0, r0, #1
   21cf8:	strb	r0, [sp, #7]
   21cfc:	ldrb	r0, [sp, #7]
   21d00:	and	r0, r0, #1
   21d04:	add	sp, sp, #8
   21d08:	bx	lr
   21d0c:	sub	sp, sp, #8
   21d10:	str	r0, [sp]
   21d14:	ldr	r0, [sp]
   21d18:	sub	r0, r0, #33	; 0x21
   21d1c:	cmp	r0, #93	; 0x5d
   21d20:	bhi	21d38 <__assert_fail@plt+0x10560>
   21d24:	b	21d28 <__assert_fail@plt+0x10550>
   21d28:	movw	r0, #1
   21d2c:	and	r0, r0, #1
   21d30:	strb	r0, [sp, #7]
   21d34:	b	21d44 <__assert_fail@plt+0x1056c>
   21d38:	movw	r0, #0
   21d3c:	and	r0, r0, #1
   21d40:	strb	r0, [sp, #7]
   21d44:	ldrb	r0, [sp, #7]
   21d48:	and	r0, r0, #1
   21d4c:	add	sp, sp, #8
   21d50:	bx	lr
   21d54:	sub	sp, sp, #8
   21d58:	str	r0, [sp]
   21d5c:	ldr	r0, [sp]
   21d60:	sub	r0, r0, #97	; 0x61
   21d64:	cmp	r0, #25
   21d68:	bhi	21d80 <__assert_fail@plt+0x105a8>
   21d6c:	b	21d70 <__assert_fail@plt+0x10598>
   21d70:	movw	r0, #1
   21d74:	and	r0, r0, #1
   21d78:	strb	r0, [sp, #7]
   21d7c:	b	21d8c <__assert_fail@plt+0x105b4>
   21d80:	movw	r0, #0
   21d84:	and	r0, r0, #1
   21d88:	strb	r0, [sp, #7]
   21d8c:	ldrb	r0, [sp, #7]
   21d90:	and	r0, r0, #1
   21d94:	add	sp, sp, #8
   21d98:	bx	lr
   21d9c:	sub	sp, sp, #8
   21da0:	str	r0, [sp]
   21da4:	ldr	r0, [sp]
   21da8:	sub	r0, r0, #32
   21dac:	cmp	r0, #94	; 0x5e
   21db0:	bhi	21dc8 <__assert_fail@plt+0x105f0>
   21db4:	b	21db8 <__assert_fail@plt+0x105e0>
   21db8:	movw	r0, #1
   21dbc:	and	r0, r0, #1
   21dc0:	strb	r0, [sp, #7]
   21dc4:	b	21dd4 <__assert_fail@plt+0x105fc>
   21dc8:	movw	r0, #0
   21dcc:	and	r0, r0, #1
   21dd0:	strb	r0, [sp, #7]
   21dd4:	ldrb	r0, [sp, #7]
   21dd8:	and	r0, r0, #1
   21ddc:	add	sp, sp, #8
   21de0:	bx	lr
   21de4:	sub	sp, sp, #12
   21de8:	str	r0, [sp, #4]
   21dec:	ldr	r0, [sp, #4]
   21df0:	sub	r0, r0, #33	; 0x21
   21df4:	cmp	r0, #93	; 0x5d
   21df8:	str	r0, [sp]
   21dfc:	bhi	21f98 <__assert_fail@plt+0x107c0>
   21e00:	add	r0, pc, #8
   21e04:	ldr	r1, [sp]
   21e08:	ldr	r0, [r0, r1, lsl #2]
   21e0c:	mov	pc, r0
   21e10:	andeq	r1, r2, r8, lsl #31
   21e14:	andeq	r1, r2, r8, lsl #31
   21e18:	andeq	r1, r2, r8, lsl #31
   21e1c:	andeq	r1, r2, r8, lsl #31
   21e20:	andeq	r1, r2, r8, lsl #31
   21e24:	andeq	r1, r2, r8, lsl #31
   21e28:	andeq	r1, r2, r8, lsl #31
   21e2c:	andeq	r1, r2, r8, lsl #31
   21e30:	andeq	r1, r2, r8, lsl #31
   21e34:	andeq	r1, r2, r8, lsl #31
   21e38:	andeq	r1, r2, r8, lsl #31
   21e3c:	andeq	r1, r2, r8, lsl #31
   21e40:	andeq	r1, r2, r8, lsl #31
   21e44:	andeq	r1, r2, r8, lsl #31
   21e48:	andeq	r1, r2, r8, lsl #31
   21e4c:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21e50:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21e54:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21e58:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21e5c:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21e60:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21e64:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21e68:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21e6c:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21e70:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21e74:	andeq	r1, r2, r8, lsl #31
   21e78:	andeq	r1, r2, r8, lsl #31
   21e7c:	andeq	r1, r2, r8, lsl #31
   21e80:	andeq	r1, r2, r8, lsl #31
   21e84:	andeq	r1, r2, r8, lsl #31
   21e88:	andeq	r1, r2, r8, lsl #31
   21e8c:	andeq	r1, r2, r8, lsl #31
   21e90:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21e94:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21e98:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21e9c:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21ea0:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21ea4:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21ea8:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21eac:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21eb0:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21eb4:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21eb8:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21ebc:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21ec0:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21ec4:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21ec8:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21ecc:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21ed0:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21ed4:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21ed8:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21edc:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21ee0:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21ee4:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21ee8:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21eec:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21ef0:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21ef4:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21ef8:	andeq	r1, r2, r8, lsl #31
   21efc:	andeq	r1, r2, r8, lsl #31
   21f00:	andeq	r1, r2, r8, lsl #31
   21f04:	andeq	r1, r2, r8, lsl #31
   21f08:	andeq	r1, r2, r8, lsl #31
   21f0c:	andeq	r1, r2, r8, lsl #31
   21f10:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21f14:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21f18:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21f1c:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21f20:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21f24:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21f28:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21f2c:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21f30:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21f34:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21f38:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21f3c:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21f40:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21f44:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21f48:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21f4c:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21f50:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21f54:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21f58:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21f5c:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21f60:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21f64:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21f68:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21f6c:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21f70:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21f74:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   21f78:	andeq	r1, r2, r8, lsl #31
   21f7c:	andeq	r1, r2, r8, lsl #31
   21f80:	andeq	r1, r2, r8, lsl #31
   21f84:	andeq	r1, r2, r8, lsl #31
   21f88:	movw	r0, #1
   21f8c:	and	r0, r0, #1
   21f90:	strb	r0, [sp, #11]
   21f94:	b	21fa4 <__assert_fail@plt+0x107cc>
   21f98:	movw	r0, #0
   21f9c:	and	r0, r0, #1
   21fa0:	strb	r0, [sp, #11]
   21fa4:	ldrb	r0, [sp, #11]
   21fa8:	and	r0, r0, #1
   21fac:	add	sp, sp, #12
   21fb0:	bx	lr
   21fb4:	sub	sp, sp, #12
   21fb8:	str	r0, [sp, #4]
   21fbc:	ldr	r0, [sp, #4]
   21fc0:	sub	r1, r0, #9
   21fc4:	cmp	r1, #5
   21fc8:	str	r0, [sp]
   21fcc:	bcc	21fe4 <__assert_fail@plt+0x1080c>
   21fd0:	b	21fd4 <__assert_fail@plt+0x107fc>
   21fd4:	ldr	r0, [sp]
   21fd8:	cmp	r0, #32
   21fdc:	bne	21ff4 <__assert_fail@plt+0x1081c>
   21fe0:	b	21fe4 <__assert_fail@plt+0x1080c>
   21fe4:	movw	r0, #1
   21fe8:	and	r0, r0, #1
   21fec:	strb	r0, [sp, #11]
   21ff0:	b	22000 <__assert_fail@plt+0x10828>
   21ff4:	movw	r0, #0
   21ff8:	and	r0, r0, #1
   21ffc:	strb	r0, [sp, #11]
   22000:	ldrb	r0, [sp, #11]
   22004:	and	r0, r0, #1
   22008:	add	sp, sp, #12
   2200c:	bx	lr
   22010:	sub	sp, sp, #8
   22014:	str	r0, [sp]
   22018:	ldr	r0, [sp]
   2201c:	sub	r0, r0, #65	; 0x41
   22020:	cmp	r0, #25
   22024:	bhi	2203c <__assert_fail@plt+0x10864>
   22028:	b	2202c <__assert_fail@plt+0x10854>
   2202c:	movw	r0, #1
   22030:	and	r0, r0, #1
   22034:	strb	r0, [sp, #7]
   22038:	b	22048 <__assert_fail@plt+0x10870>
   2203c:	movw	r0, #0
   22040:	and	r0, r0, #1
   22044:	strb	r0, [sp, #7]
   22048:	ldrb	r0, [sp, #7]
   2204c:	and	r0, r0, #1
   22050:	add	sp, sp, #8
   22054:	bx	lr
   22058:	sub	sp, sp, #12
   2205c:	str	r0, [sp, #4]
   22060:	ldr	r0, [sp, #4]
   22064:	sub	r1, r0, #48	; 0x30
   22068:	cmp	r1, #10
   2206c:	str	r0, [sp]
   22070:	bcc	220a0 <__assert_fail@plt+0x108c8>
   22074:	b	22078 <__assert_fail@plt+0x108a0>
   22078:	ldr	r0, [sp]
   2207c:	sub	r1, r0, #65	; 0x41
   22080:	cmp	r1, #6
   22084:	bcc	220a0 <__assert_fail@plt+0x108c8>
   22088:	b	2208c <__assert_fail@plt+0x108b4>
   2208c:	ldr	r0, [sp]
   22090:	sub	r1, r0, #97	; 0x61
   22094:	cmp	r1, #5
   22098:	bhi	220b0 <__assert_fail@plt+0x108d8>
   2209c:	b	220a0 <__assert_fail@plt+0x108c8>
   220a0:	movw	r0, #1
   220a4:	and	r0, r0, #1
   220a8:	strb	r0, [sp, #11]
   220ac:	b	220bc <__assert_fail@plt+0x108e4>
   220b0:	movw	r0, #0
   220b4:	and	r0, r0, #1
   220b8:	strb	r0, [sp, #11]
   220bc:	ldrb	r0, [sp, #11]
   220c0:	and	r0, r0, #1
   220c4:	add	sp, sp, #12
   220c8:	bx	lr
   220cc:	sub	sp, sp, #8
   220d0:	str	r0, [sp]
   220d4:	ldr	r0, [sp]
   220d8:	sub	r0, r0, #65	; 0x41
   220dc:	cmp	r0, #25
   220e0:	bhi	220fc <__assert_fail@plt+0x10924>
   220e4:	b	220e8 <__assert_fail@plt+0x10910>
   220e8:	ldr	r0, [sp]
   220ec:	sub	r0, r0, #65	; 0x41
   220f0:	add	r0, r0, #97	; 0x61
   220f4:	str	r0, [sp, #4]
   220f8:	b	22104 <__assert_fail@plt+0x1092c>
   220fc:	ldr	r0, [sp]
   22100:	str	r0, [sp, #4]
   22104:	ldr	r0, [sp, #4]
   22108:	add	sp, sp, #8
   2210c:	bx	lr
   22110:	sub	sp, sp, #8
   22114:	str	r0, [sp]
   22118:	ldr	r0, [sp]
   2211c:	sub	r0, r0, #97	; 0x61
   22120:	cmp	r0, #25
   22124:	bhi	22140 <__assert_fail@plt+0x10968>
   22128:	b	2212c <__assert_fail@plt+0x10954>
   2212c:	ldr	r0, [sp]
   22130:	sub	r0, r0, #97	; 0x61
   22134:	add	r0, r0, #65	; 0x41
   22138:	str	r0, [sp, #4]
   2213c:	b	22148 <__assert_fail@plt+0x10970>
   22140:	ldr	r0, [sp]
   22144:	str	r0, [sp, #4]
   22148:	ldr	r0, [sp, #4]
   2214c:	add	sp, sp, #8
   22150:	bx	lr
   22154:	cmp	r3, #0
   22158:	cmpeq	r2, #0
   2215c:	bne	22180 <__assert_fail@plt+0x109a8>
   22160:	cmp	r1, #0
   22164:	movlt	r1, #-2147483648	; 0x80000000
   22168:	movlt	r0, #0
   2216c:	blt	2217c <__assert_fail@plt+0x109a4>
   22170:	cmpeq	r0, #0
   22174:	mvnne	r1, #-2147483648	; 0x80000000
   22178:	mvnne	r0, #0
   2217c:	b	22264 <__assert_fail@plt+0x10a8c>
   22180:	sub	sp, sp, #8
   22184:	push	{sp, lr}
   22188:	cmp	r1, #0
   2218c:	blt	221ac <__assert_fail@plt+0x109d4>
   22190:	cmp	r3, #0
   22194:	blt	221e0 <__assert_fail@plt+0x10a08>
   22198:	bl	22274 <__assert_fail@plt+0x10a9c>
   2219c:	ldr	lr, [sp, #4]
   221a0:	add	sp, sp, #8
   221a4:	pop	{r2, r3}
   221a8:	bx	lr
   221ac:	rsbs	r0, r0, #0
   221b0:	sbc	r1, r1, r1, lsl #1
   221b4:	cmp	r3, #0
   221b8:	blt	22204 <__assert_fail@plt+0x10a2c>
   221bc:	bl	22274 <__assert_fail@plt+0x10a9c>
   221c0:	ldr	lr, [sp, #4]
   221c4:	add	sp, sp, #8
   221c8:	pop	{r2, r3}
   221cc:	rsbs	r0, r0, #0
   221d0:	sbc	r1, r1, r1, lsl #1
   221d4:	rsbs	r2, r2, #0
   221d8:	sbc	r3, r3, r3, lsl #1
   221dc:	bx	lr
   221e0:	rsbs	r2, r2, #0
   221e4:	sbc	r3, r3, r3, lsl #1
   221e8:	bl	22274 <__assert_fail@plt+0x10a9c>
   221ec:	ldr	lr, [sp, #4]
   221f0:	add	sp, sp, #8
   221f4:	pop	{r2, r3}
   221f8:	rsbs	r0, r0, #0
   221fc:	sbc	r1, r1, r1, lsl #1
   22200:	bx	lr
   22204:	rsbs	r2, r2, #0
   22208:	sbc	r3, r3, r3, lsl #1
   2220c:	bl	22274 <__assert_fail@plt+0x10a9c>
   22210:	ldr	lr, [sp, #4]
   22214:	add	sp, sp, #8
   22218:	pop	{r2, r3}
   2221c:	rsbs	r2, r2, #0
   22220:	sbc	r3, r3, r3, lsl #1
   22224:	bx	lr
   22228:	cmp	r3, #0
   2222c:	cmpeq	r2, #0
   22230:	bne	22248 <__assert_fail@plt+0x10a70>
   22234:	cmp	r1, #0
   22238:	cmpeq	r0, #0
   2223c:	mvnne	r1, #0
   22240:	mvnne	r0, #0
   22244:	b	22264 <__assert_fail@plt+0x10a8c>
   22248:	sub	sp, sp, #8
   2224c:	push	{sp, lr}
   22250:	bl	22274 <__assert_fail@plt+0x10a9c>
   22254:	ldr	lr, [sp, #4]
   22258:	add	sp, sp, #8
   2225c:	pop	{r2, r3}
   22260:	bx	lr
   22264:	push	{r1, lr}
   22268:	mov	r0, #8
   2226c:	bl	11424 <raise@plt>
   22270:	pop	{r1, pc}
   22274:	cmp	r1, r3
   22278:	cmpeq	r0, r2
   2227c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22280:	mov	r4, r0
   22284:	movcc	r0, #0
   22288:	mov	r5, r1
   2228c:	ldr	lr, [sp, #36]	; 0x24
   22290:	movcc	r1, r0
   22294:	bcc	22390 <__assert_fail@plt+0x10bb8>
   22298:	cmp	r3, #0
   2229c:	clzeq	ip, r2
   222a0:	clzne	ip, r3
   222a4:	addeq	ip, ip, #32
   222a8:	cmp	r5, #0
   222ac:	clzeq	r1, r4
   222b0:	addeq	r1, r1, #32
   222b4:	clzne	r1, r5
   222b8:	sub	ip, ip, r1
   222bc:	sub	sl, ip, #32
   222c0:	lsl	r9, r3, ip
   222c4:	rsb	fp, ip, #32
   222c8:	orr	r9, r9, r2, lsl sl
   222cc:	orr	r9, r9, r2, lsr fp
   222d0:	lsl	r8, r2, ip
   222d4:	cmp	r5, r9
   222d8:	cmpeq	r4, r8
   222dc:	movcc	r0, #0
   222e0:	movcc	r1, r0
   222e4:	bcc	22300 <__assert_fail@plt+0x10b28>
   222e8:	mov	r0, #1
   222ec:	subs	r4, r4, r8
   222f0:	lsl	r1, r0, sl
   222f4:	orr	r1, r1, r0, lsr fp
   222f8:	lsl	r0, r0, ip
   222fc:	sbc	r5, r5, r9
   22300:	cmp	ip, #0
   22304:	beq	22390 <__assert_fail@plt+0x10bb8>
   22308:	lsr	r6, r8, #1
   2230c:	orr	r6, r6, r9, lsl #31
   22310:	lsr	r7, r9, #1
   22314:	mov	r2, ip
   22318:	b	2233c <__assert_fail@plt+0x10b64>
   2231c:	subs	r3, r4, r6
   22320:	sbc	r8, r5, r7
   22324:	adds	r3, r3, r3
   22328:	adc	r8, r8, r8
   2232c:	adds	r4, r3, #1
   22330:	adc	r5, r8, #0
   22334:	subs	r2, r2, #1
   22338:	beq	22358 <__assert_fail@plt+0x10b80>
   2233c:	cmp	r5, r7
   22340:	cmpeq	r4, r6
   22344:	bcs	2231c <__assert_fail@plt+0x10b44>
   22348:	adds	r4, r4, r4
   2234c:	adc	r5, r5, r5
   22350:	subs	r2, r2, #1
   22354:	bne	2233c <__assert_fail@plt+0x10b64>
   22358:	lsr	r3, r4, ip
   2235c:	orr	r3, r3, r5, lsl fp
   22360:	lsr	r2, r5, ip
   22364:	orr	r3, r3, r5, lsr sl
   22368:	adds	r0, r0, r4
   2236c:	mov	r4, r3
   22370:	lsl	r3, r2, ip
   22374:	orr	r3, r3, r4, lsl sl
   22378:	lsl	ip, r4, ip
   2237c:	orr	r3, r3, r4, lsr fp
   22380:	adc	r1, r1, r5
   22384:	subs	r0, r0, ip
   22388:	mov	r5, r2
   2238c:	sbc	r1, r1, r3
   22390:	cmp	lr, #0
   22394:	strdne	r4, [lr]
   22398:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2239c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   223a0:	mov	r7, r0
   223a4:	ldr	r6, [pc, #72]	; 223f4 <__assert_fail@plt+0x10c1c>
   223a8:	ldr	r5, [pc, #72]	; 223f8 <__assert_fail@plt+0x10c20>
   223ac:	add	r6, pc, r6
   223b0:	add	r5, pc, r5
   223b4:	sub	r6, r6, r5
   223b8:	mov	r8, r1
   223bc:	mov	r9, r2
   223c0:	bl	113ec <fdopen@plt-0x20>
   223c4:	asrs	r6, r6, #2
   223c8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   223cc:	mov	r4, #0
   223d0:	add	r4, r4, #1
   223d4:	ldr	r3, [r5], #4
   223d8:	mov	r2, r9
   223dc:	mov	r1, r8
   223e0:	mov	r0, r7
   223e4:	blx	r3
   223e8:	cmp	r6, r4
   223ec:	bne	223d0 <__assert_fail@plt+0x10bf8>
   223f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   223f4:	andeq	r2, r1, r8, asr fp
   223f8:	andeq	r2, r1, r0, asr fp
   223fc:	bx	lr
   22400:	ldr	r3, [pc, #12]	; 22414 <__assert_fail@plt+0x10c3c>
   22404:	mov	r1, #0
   22408:	add	r3, pc, r3
   2240c:	ldr	r2, [r3]
   22410:	b	1167c <__cxa_atexit@plt>
   22414:	andeq	r2, r1, ip, asr #26

Disassembly of section .fini:

00022418 <.fini>:
   22418:	push	{r3, lr}
   2241c:	pop	{r3, pc}
