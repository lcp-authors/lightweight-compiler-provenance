
../repos/sgerbino-table-2fdd8d0/bin/table_column_test:     file format elf32-littlearm


Disassembly of section .init:

00011e70 <.init>:
   11e70:	push	{r3, lr}
   11e74:	bl	11f5c <_start@@Base+0x3c>
   11e78:	pop	{r3, pc}

Disassembly of section .plt:

00011e7c <strcmp@plt-0x14>:
   11e7c:	push	{lr}		; (str lr, [sp, #-4]!)
   11e80:	ldr	lr, [pc, #4]	; 11e8c <strcmp@plt-0x4>
   11e84:	add	lr, pc, lr
   11e88:	ldr	pc, [lr, #8]!
   11e8c:	andeq	r4, r1, r4, ror r1

00011e90 <strcmp@plt>:
   11e90:	add	ip, pc, #0, 12
   11e94:	add	ip, ip, #20, 20	; 0x14000
   11e98:	ldr	pc, [ip, #372]!	; 0x174

00011e9c <printf@plt>:
   11e9c:	add	ip, pc, #0, 12
   11ea0:	add	ip, ip, #20, 20	; 0x14000
   11ea4:	ldr	pc, [ip, #364]!	; 0x16c

00011ea8 <free@plt>:
   11ea8:	add	ip, pc, #0, 12
   11eac:	add	ip, ip, #20, 20	; 0x14000
   11eb0:	ldr	pc, [ip, #356]!	; 0x164

00011eb4 <realloc@plt>:
   11eb4:	add	ip, pc, #0, 12
   11eb8:	add	ip, ip, #20, 20	; 0x14000
   11ebc:	ldr	pc, [ip, #348]!	; 0x15c

00011ec0 <strcpy@plt>:
   11ec0:	add	ip, pc, #0, 12
   11ec4:	add	ip, ip, #20, 20	; 0x14000
   11ec8:	ldr	pc, [ip, #340]!	; 0x154

00011ecc <malloc@plt>:
   11ecc:	add	ip, pc, #0, 12
   11ed0:	add	ip, ip, #20, 20	; 0x14000
   11ed4:	ldr	pc, [ip, #332]!	; 0x14c

00011ed8 <__libc_start_main@plt>:
   11ed8:	add	ip, pc, #0, 12
   11edc:	add	ip, ip, #20, 20	; 0x14000
   11ee0:	ldr	pc, [ip, #324]!	; 0x144

00011ee4 <__gmon_start__@plt>:
   11ee4:	add	ip, pc, #0, 12
   11ee8:	add	ip, ip, #20, 20	; 0x14000
   11eec:	ldr	pc, [ip, #316]!	; 0x13c

00011ef0 <strlen@plt>:
   11ef0:	add	ip, pc, #0, 12
   11ef4:	add	ip, ip, #20, 20	; 0x14000
   11ef8:	ldr	pc, [ip, #308]!	; 0x134

00011efc <snprintf@plt>:
   11efc:	add	ip, pc, #0, 12
   11f00:	add	ip, ip, #20, 20	; 0x14000
   11f04:	ldr	pc, [ip, #300]!	; 0x12c

00011f08 <__isoc99_sscanf@plt>:
   11f08:	add	ip, pc, #0, 12
   11f0c:	add	ip, ip, #20, 20	; 0x14000
   11f10:	ldr	pc, [ip, #292]!	; 0x124

00011f14 <abort@plt>:
   11f14:	add	ip, pc, #0, 12
   11f18:	add	ip, ip, #20, 20	; 0x14000
   11f1c:	ldr	pc, [ip, #284]!	; 0x11c

Disassembly of section .text:

00011f20 <_start@@Base>:
   11f20:	mov	fp, #0
   11f24:	mov	lr, #0
   11f28:	pop	{r1}		; (ldr r1, [sp], #4)
   11f2c:	mov	r2, sp
   11f30:	push	{r2}		; (str r2, [sp, #-4]!)
   11f34:	push	{r0}		; (str r0, [sp, #-4]!)
   11f38:	ldr	ip, [pc, #16]	; 11f50 <_start@@Base+0x30>
   11f3c:	push	{ip}		; (str ip, [sp, #-4]!)
   11f40:	ldr	r0, [pc, #12]	; 11f54 <_start@@Base+0x34>
   11f44:	ldr	r3, [pc, #12]	; 11f58 <_start@@Base+0x38>
   11f48:	bl	11ed8 <__libc_start_main@plt>
   11f4c:	bl	11f14 <abort@plt>
   11f50:	andeq	r5, r1, r0, asr #10
   11f54:	andeq	r2, r1, r0, lsl r0
   11f58:	andeq	r5, r1, r0, ror #9
   11f5c:	ldr	r3, [pc, #20]	; 11f78 <_start@@Base+0x58>
   11f60:	ldr	r2, [pc, #20]	; 11f7c <_start@@Base+0x5c>
   11f64:	add	r3, pc, r3
   11f68:	ldr	r2, [r3, r2]
   11f6c:	cmp	r2, #0
   11f70:	bxeq	lr
   11f74:	b	11ee4 <__gmon_start__@plt>
   11f78:	muleq	r1, r4, r0
   11f7c:	andeq	r0, r0, ip, lsr r0
   11f80:	ldr	r0, [pc, #24]	; 11fa0 <_start@@Base+0x80>
   11f84:	ldr	r3, [pc, #24]	; 11fa4 <_start@@Base+0x84>
   11f88:	cmp	r3, r0
   11f8c:	bxeq	lr
   11f90:	ldr	r3, [pc, #16]	; 11fa8 <_start@@Base+0x88>
   11f94:	cmp	r3, #0
   11f98:	bxeq	lr
   11f9c:	bx	r3
   11fa0:	andeq	r6, r2, r8, asr #32
   11fa4:	andeq	r6, r2, r8, asr #32
   11fa8:	andeq	r0, r0, r0
   11fac:	ldr	r0, [pc, #36]	; 11fd8 <_start@@Base+0xb8>
   11fb0:	ldr	r1, [pc, #36]	; 11fdc <_start@@Base+0xbc>
   11fb4:	sub	r1, r1, r0
   11fb8:	asr	r1, r1, #2
   11fbc:	add	r1, r1, r1, lsr #31
   11fc0:	asrs	r1, r1, #1
   11fc4:	bxeq	lr
   11fc8:	ldr	r3, [pc, #16]	; 11fe0 <_start@@Base+0xc0>
   11fcc:	cmp	r3, #0
   11fd0:	bxeq	lr
   11fd4:	bx	r3
   11fd8:	andeq	r6, r2, r8, asr #32
   11fdc:	andeq	r6, r2, r8, asr #32
   11fe0:	andeq	r0, r0, r0
   11fe4:	push	{r4, lr}
   11fe8:	ldr	r4, [pc, #24]	; 12008 <_start@@Base+0xe8>
   11fec:	ldrb	r3, [r4]
   11ff0:	cmp	r3, #0
   11ff4:	popne	{r4, pc}
   11ff8:	bl	11f80 <_start@@Base+0x60>
   11ffc:	mov	r3, #1
   12000:	strb	r3, [r4]
   12004:	pop	{r4, pc}
   12008:	andeq	r6, r2, r8, asr #32
   1200c:	b	11fac <_start@@Base+0x8c>

00012010 <main@@Base>:
   12010:	push	{r4, r5, r6, r7, fp, lr}
   12014:	add	fp, sp, #16
   12018:	sub	sp, sp, #56	; 0x38
   1201c:	mov	r7, sp
   12020:	mov	r0, r7
   12024:	bl	1215c <table_init@@Base>
   12028:	ldr	r1, [pc, #192]	; 120f0 <main@@Base+0xe0>
   1202c:	mov	r0, r7
   12030:	mov	r2, #0
   12034:	mov	r4, #0
   12038:	add	r1, pc, r1
   1203c:	bl	12bd8 <table_add_column@@Base>
   12040:	ldr	r1, [pc, #172]	; 120f4 <main@@Base+0xe4>
   12044:	mov	r6, r0
   12048:	mov	r0, r7
   1204c:	mov	r2, #21
   12050:	add	r1, pc, r1
   12054:	bl	12bd8 <table_add_column@@Base>
   12058:	mov	r5, r0
   1205c:	mov	r0, r7
   12060:	bl	12b4c <table_get_column_length@@Base>
   12064:	cmp	r0, #2
   12068:	beq	1207c <main@@Base+0x6c>
   1206c:	ldr	r0, [pc, #132]	; 120f8 <main@@Base+0xe8>
   12070:	add	r0, pc, r0
   12074:	bl	11e9c <printf@plt>
   12078:	mvn	r4, #0
   1207c:	mov	r0, sp
   12080:	mov	r1, r6
   12084:	bl	12bb4 <table_get_column_name@@Base>
   12088:	ldr	r1, [pc, #108]	; 120fc <main@@Base+0xec>
   1208c:	add	r1, pc, r1
   12090:	bl	11e90 <strcmp@plt>
   12094:	cmp	r0, #0
   12098:	beq	120ac <main@@Base+0x9c>
   1209c:	ldr	r0, [pc, #92]	; 12100 <main@@Base+0xf0>
   120a0:	add	r0, pc, r0
   120a4:	bl	11e9c <printf@plt>
   120a8:	mvn	r4, #0
   120ac:	mov	r0, sp
   120b0:	mov	r1, r5
   120b4:	bl	12bb4 <table_get_column_name@@Base>
   120b8:	ldr	r1, [pc, #68]	; 12104 <main@@Base+0xf4>
   120bc:	add	r1, pc, r1
   120c0:	bl	11e90 <strcmp@plt>
   120c4:	cmp	r0, #0
   120c8:	beq	120dc <main@@Base+0xcc>
   120cc:	ldr	r0, [pc, #52]	; 12108 <main@@Base+0xf8>
   120d0:	add	r0, pc, r0
   120d4:	bl	11e9c <printf@plt>
   120d8:	mvn	r4, #0
   120dc:	mov	r0, sp
   120e0:	bl	121b8 <table_destroy@@Base>
   120e4:	mov	r0, r4
   120e8:	sub	sp, fp, #16
   120ec:	pop	{r4, r5, r6, r7, fp, pc}
   120f0:	andeq	r3, r0, r0, lsl r5
   120f4:	andeq	r3, r0, sl, lsr r5
   120f8:	ldrdeq	r3, [r0], -fp
   120fc:			; <UNDEFINED> instruction: 0x000034bc
   12100:	ldrdeq	r3, [r0], -r0
   12104:	andeq	r3, r0, lr, asr #9
   12108:	andeq	r3, r0, r0, lsr #9

0001210c <table_new@@Base>:
   1210c:	push	{fp, lr}
   12110:	mov	fp, sp
   12114:	mov	r0, #56	; 0x38
   12118:	bl	11ecc <malloc@plt>
   1211c:	vmov.i32	q8, #0	; 0x00000000
   12120:	mov	r1, #0
   12124:	mov	r2, #10
   12128:	mov	r3, #20
   1212c:	str	r1, [r0]
   12130:	stmib	r0, {r1, r2}
   12134:	str	r1, [r0, #12]
   12138:	str	r1, [r0, #16]
   1213c:	str	r1, [r0, #20]
   12140:	str	r3, [r0, #24]
   12144:	str	r1, [r0, #28]
   12148:	str	r2, [r0, #48]	; 0x30
   1214c:	str	r1, [r0, #52]	; 0x34
   12150:	add	r1, r0, #32
   12154:	vst1.32	{d16-d17}, [r1]
   12158:	pop	{fp, pc}

0001215c <table_init@@Base>:
   1215c:	vmov.i32	q8, #0	; 0x00000000
   12160:	mov	r1, #0
   12164:	mov	r2, #10
   12168:	mov	r3, #20
   1216c:	str	r1, [r0]
   12170:	stmib	r0, {r1, r2}
   12174:	str	r1, [r0, #12]
   12178:	str	r1, [r0, #16]
   1217c:	str	r1, [r0, #20]
   12180:	str	r3, [r0, #24]
   12184:	str	r1, [r0, #28]
   12188:	str	r2, [r0, #48]	; 0x30
   1218c:	str	r1, [r0, #52]	; 0x34
   12190:	add	r0, r0, #32
   12194:	vst1.32	{d16-d17}, [r0]
   12198:	bx	lr

0001219c <table_delete@@Base>:
   1219c:	push	{r4, sl, fp, lr}
   121a0:	add	fp, sp, #8
   121a4:	mov	r4, r0
   121a8:	bl	121b8 <table_destroy@@Base>
   121ac:	mov	r0, r4
   121b0:	pop	{r4, sl, fp, lr}
   121b4:	b	11ea8 <free@plt>

000121b8 <table_destroy@@Base>:
   121b8:	cmp	r0, #0
   121bc:	bxeq	lr
   121c0:	push	{r4, r5, r6, sl, fp, lr}
   121c4:	add	fp, sp, #16
   121c8:	mvn	r1, #0
   121cc:	mvn	r2, #0
   121d0:	mov	r3, #64	; 0x40
   121d4:	mov	r4, r0
   121d8:	bl	12a50 <table_notify@@Base>
   121dc:	mov	r0, r4
   121e0:	bl	138ec <table_get_row_length@@Base>
   121e4:	cmp	r0, #1
   121e8:	blt	1220c <table_destroy@@Base+0x54>
   121ec:	mov	r5, r0
   121f0:	mov	r6, #0
   121f4:	mov	r0, r4
   121f8:	mov	r1, r6
   121fc:	bl	13890 <table_row_destroy@@Base>
   12200:	add	r6, r6, #1
   12204:	cmp	r5, r6
   12208:	bne	121f4 <table_destroy@@Base+0x3c>
   1220c:	ldr	r0, [r4, #16]
   12210:	cmp	r0, #0
   12214:	beq	1221c <table_destroy@@Base+0x64>
   12218:	bl	11ea8 <free@plt>
   1221c:	mov	r0, r4
   12220:	bl	12b4c <table_get_column_length@@Base>
   12224:	cmp	r0, #1
   12228:	blt	1224c <table_destroy@@Base+0x94>
   1222c:	mov	r5, r0
   12230:	mov	r6, #0
   12234:	mov	r0, r4
   12238:	mov	r1, r6
   1223c:	bl	12b34 <table_column_destroy@@Base>
   12240:	add	r6, r6, #1
   12244:	cmp	r5, r6
   12248:	bne	12234 <table_destroy@@Base+0x7c>
   1224c:	ldr	r0, [r4]
   12250:	cmp	r0, #0
   12254:	beq	1225c <table_destroy@@Base+0xa4>
   12258:	bl	11ea8 <free@plt>
   1225c:	ldr	r0, [r4, #36]	; 0x24
   12260:	cmp	r0, #0
   12264:	beq	1226c <table_destroy@@Base+0xb4>
   12268:	bl	11ea8 <free@plt>
   1226c:	ldr	r0, [r4, #40]	; 0x28
   12270:	cmp	r0, #0
   12274:	beq	1227c <table_destroy@@Base+0xc4>
   12278:	bl	11ea8 <free@plt>
   1227c:	ldr	r0, [r4, #44]	; 0x2c
   12280:	cmp	r0, #0
   12284:	pop	{r4, r5, r6, sl, fp, lr}
   12288:	beq	12290 <table_destroy@@Base+0xd8>
   1228c:	b	11ea8 <free@plt>
   12290:	bx	lr

00012294 <table_dupe@@Base>:
   12294:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12298:	add	fp, sp, #28
   1229c:	sub	sp, sp, #12
   122a0:	mov	r4, r0
   122a4:	bl	138ec <table_get_row_length@@Base>
   122a8:	mov	r8, r0
   122ac:	mov	r0, r4
   122b0:	bl	12b4c <table_get_column_length@@Base>
   122b4:	mov	r6, r0
   122b8:	mov	r0, #56	; 0x38
   122bc:	bl	11ecc <malloc@plt>
   122c0:	vmov.i32	q8, #0	; 0x00000000
   122c4:	mov	sl, r0
   122c8:	mov	r5, #0
   122cc:	mov	r0, #10
   122d0:	mov	r1, #20
   122d4:	cmp	r6, #1
   122d8:	str	r5, [sl]
   122dc:	str	r5, [sl, #4]
   122e0:	str	r0, [sl, #8]
   122e4:	str	r5, [sl, #12]
   122e8:	str	r5, [sl, #16]
   122ec:	str	r5, [sl, #20]
   122f0:	str	r1, [sl, #24]
   122f4:	str	r5, [sl, #28]
   122f8:	str	r0, [sl, #48]	; 0x30
   122fc:	add	r0, sl, #32
   12300:	str	r5, [sl, #52]	; 0x34
   12304:	vst1.32	{d16-d17}, [r0]
   12308:	blt	12344 <table_dupe@@Base+0xb0>
   1230c:	mov	r0, r4
   12310:	mov	r1, r5
   12314:	bl	12bb4 <table_get_column_name@@Base>
   12318:	mov	r7, r0
   1231c:	mov	r0, r4
   12320:	mov	r1, r5
   12324:	bl	12bc4 <table_get_column_data_type@@Base>
   12328:	mov	r2, r0
   1232c:	mov	r0, sl
   12330:	mov	r1, r7
   12334:	bl	12bd8 <table_add_column@@Base>
   12338:	add	r5, r5, #1
   1233c:	cmp	r6, r5
   12340:	bne	1230c <table_dupe@@Base+0x78>
   12344:	cmp	r8, #1
   12348:	blt	127bc <table_dupe@@Base+0x528>
   1234c:	mov	r5, #0
   12350:	add	r9, sp, #8
   12354:	b	12364 <table_dupe@@Base+0xd0>
   12358:	add	r5, r5, #1
   1235c:	cmp	r5, r8
   12360:	beq	127bc <table_dupe@@Base+0x528>
   12364:	mov	r0, sl
   12368:	bl	138f4 <table_add_row@@Base>
   1236c:	cmp	r6, #1
   12370:	blt	12358 <table_dupe@@Base+0xc4>
   12374:	mov	r7, #0
   12378:	b	123b0 <table_dupe@@Base+0x11c>
   1237c:	mov	r0, r4
   12380:	mov	r1, r5
   12384:	mov	r2, r7
   12388:	bl	1384c <table_get_ptr@@Base>
   1238c:	str	r0, [sp, #8]
   12390:	mov	r0, sl
   12394:	mov	r1, r5
   12398:	mov	r2, r7
   1239c:	mov	r3, r9
   123a0:	bl	14980 <table_set_ptr@@Base>
   123a4:	add	r7, r7, #1
   123a8:	cmp	r6, r7
   123ac:	beq	12358 <table_dupe@@Base+0xc4>
   123b0:	mov	r0, r4
   123b4:	mov	r1, r7
   123b8:	bl	12bc4 <table_get_column_data_type@@Base>
   123bc:	cmp	r0, #23
   123c0:	bhi	123a4 <table_dupe@@Base+0x110>
   123c4:	add	r1, pc, #4
   123c8:	ldr	r0, [r1, r0, lsl #2]
   123cc:	add	pc, r1, r0
   123d0:	andeq	r0, r0, r0, rrx
   123d4:	andeq	r0, r0, r8, lsl #1
   123d8:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   123dc:	ldrdeq	r0, [r0], -r8
   123e0:	andeq	r0, r0, r0, lsl #2
   123e4:	andeq	r0, r0, r8, lsr #2
   123e8:	andeq	r0, r0, r0, asr r1
   123ec:	andeq	r0, r0, r8, ror r1
   123f0:	andeq	r0, r0, r0, lsr #3
   123f4:	andeq	r0, r0, r8, asr #3
   123f8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   123fc:	andeq	r0, r0, r8, lsl r2
   12400:	andeq	r0, r0, r0, asr #4
   12404:	andeq	r0, r0, r8, ror #4
   12408:	muleq	r0, r0, r2
   1240c:			; <UNDEFINED> instruction: 0x000002b8
   12410:	andeq	r0, r0, r0, ror #5
   12414:	andeq	r0, r0, r4, lsl #6
   12418:	andeq	r0, r0, r8, lsr #6
   1241c:	andeq	r0, r0, ip, asr #6
   12420:	andeq	r0, r0, r4, ror r3
   12424:	muleq	r0, ip, r3
   12428:	andeq	r0, r0, r4, asr #7
   1242c:			; <UNDEFINED> instruction: 0xffffffac
   12430:	mov	r0, r4
   12434:	mov	r1, r5
   12438:	mov	r2, r7
   1243c:	bl	13640 <table_get_int@@Base>
   12440:	mov	r3, r0
   12444:	mov	r0, sl
   12448:	mov	r1, r5
   1244c:	mov	r2, r7
   12450:	bl	13ea4 <table_set_int@@Base>
   12454:	b	123a4 <table_dupe@@Base+0x110>
   12458:	mov	r0, r4
   1245c:	mov	r1, r5
   12460:	mov	r2, r7
   12464:	bl	13658 <table_get_uint@@Base>
   12468:	mov	r3, r0
   1246c:	mov	r0, sl
   12470:	mov	r1, r5
   12474:	mov	r2, r7
   12478:	bl	13f24 <table_set_uint@@Base>
   1247c:	b	123a4 <table_dupe@@Base+0x110>
   12480:	mov	r0, r4
   12484:	mov	r1, r5
   12488:	mov	r2, r7
   1248c:	bl	13670 <table_get_int8@@Base>
   12490:	mov	r3, r0
   12494:	mov	r0, sl
   12498:	mov	r1, r5
   1249c:	mov	r2, r7
   124a0:	bl	13fa4 <table_set_int8@@Base>
   124a4:	b	123a4 <table_dupe@@Base+0x110>
   124a8:	mov	r0, r4
   124ac:	mov	r1, r5
   124b0:	mov	r2, r7
   124b4:	bl	13688 <table_get_uint8@@Base>
   124b8:	mov	r3, r0
   124bc:	mov	r0, sl
   124c0:	mov	r1, r5
   124c4:	mov	r2, r7
   124c8:	bl	14024 <table_set_uint8@@Base>
   124cc:	b	123a4 <table_dupe@@Base+0x110>
   124d0:	mov	r0, r4
   124d4:	mov	r1, r5
   124d8:	mov	r2, r7
   124dc:	bl	136a0 <table_get_int16@@Base>
   124e0:	mov	r3, r0
   124e4:	mov	r0, sl
   124e8:	mov	r1, r5
   124ec:	mov	r2, r7
   124f0:	bl	140a4 <table_set_int16@@Base>
   124f4:	b	123a4 <table_dupe@@Base+0x110>
   124f8:	mov	r0, r4
   124fc:	mov	r1, r5
   12500:	mov	r2, r7
   12504:	bl	136b8 <table_get_uint16@@Base>
   12508:	mov	r3, r0
   1250c:	mov	r0, sl
   12510:	mov	r1, r5
   12514:	mov	r2, r7
   12518:	bl	14124 <table_set_uint16@@Base>
   1251c:	b	123a4 <table_dupe@@Base+0x110>
   12520:	mov	r0, r4
   12524:	mov	r1, r5
   12528:	mov	r2, r7
   1252c:	bl	136d0 <table_get_int32@@Base>
   12530:	mov	r3, r0
   12534:	mov	r0, sl
   12538:	mov	r1, r5
   1253c:	mov	r2, r7
   12540:	bl	141a4 <table_set_int32@@Base>
   12544:	b	123a4 <table_dupe@@Base+0x110>
   12548:	mov	r0, r4
   1254c:	mov	r1, r5
   12550:	mov	r2, r7
   12554:	bl	136e8 <table_get_uint32@@Base>
   12558:	mov	r3, r0
   1255c:	mov	r0, sl
   12560:	mov	r1, r5
   12564:	mov	r2, r7
   12568:	bl	14224 <table_set_uint32@@Base>
   1256c:	b	123a4 <table_dupe@@Base+0x110>
   12570:	mov	r0, r4
   12574:	mov	r1, r5
   12578:	mov	r2, r7
   1257c:	bl	13700 <table_get_int64@@Base>
   12580:	stm	sp, {r0, r1}
   12584:	mov	r0, sl
   12588:	mov	r1, r5
   1258c:	mov	r2, r7
   12590:	bl	142a4 <table_set_int64@@Base>
   12594:	b	123a4 <table_dupe@@Base+0x110>
   12598:	mov	r0, r4
   1259c:	mov	r1, r5
   125a0:	mov	r2, r7
   125a4:	bl	13718 <table_get_uint64@@Base>
   125a8:	stm	sp, {r0, r1}
   125ac:	mov	r0, sl
   125b0:	mov	r1, r5
   125b4:	mov	r2, r7
   125b8:	bl	1432c <table_set_uint64@@Base>
   125bc:	b	123a4 <table_dupe@@Base+0x110>
   125c0:	mov	r0, r4
   125c4:	mov	r1, r5
   125c8:	mov	r2, r7
   125cc:	bl	13730 <table_get_short@@Base>
   125d0:	mov	r3, r0
   125d4:	mov	r0, sl
   125d8:	mov	r1, r5
   125dc:	mov	r2, r7
   125e0:	bl	143b4 <table_set_short@@Base>
   125e4:	b	123a4 <table_dupe@@Base+0x110>
   125e8:	mov	r0, r4
   125ec:	mov	r1, r5
   125f0:	mov	r2, r7
   125f4:	bl	13748 <table_get_ushort@@Base>
   125f8:	mov	r3, r0
   125fc:	mov	r0, sl
   12600:	mov	r1, r5
   12604:	mov	r2, r7
   12608:	bl	14434 <table_set_ushort@@Base>
   1260c:	b	123a4 <table_dupe@@Base+0x110>
   12610:	mov	r0, r4
   12614:	mov	r1, r5
   12618:	mov	r2, r7
   1261c:	bl	13760 <table_get_long@@Base>
   12620:	mov	r3, r0
   12624:	mov	r0, sl
   12628:	mov	r1, r5
   1262c:	mov	r2, r7
   12630:	bl	144b4 <table_set_long@@Base>
   12634:	b	123a4 <table_dupe@@Base+0x110>
   12638:	mov	r0, r4
   1263c:	mov	r1, r5
   12640:	mov	r2, r7
   12644:	bl	13778 <table_get_ulong@@Base>
   12648:	mov	r3, r0
   1264c:	mov	r0, sl
   12650:	mov	r1, r5
   12654:	mov	r2, r7
   12658:	bl	14534 <table_set_ulong@@Base>
   1265c:	b	123a4 <table_dupe@@Base+0x110>
   12660:	mov	r0, r4
   12664:	mov	r1, r5
   12668:	mov	r2, r7
   1266c:	bl	13790 <table_get_llong@@Base>
   12670:	stm	sp, {r0, r1}
   12674:	mov	r0, sl
   12678:	mov	r1, r5
   1267c:	mov	r2, r7
   12680:	bl	145b4 <table_set_llong@@Base>
   12684:	b	123a4 <table_dupe@@Base+0x110>
   12688:	mov	r0, r4
   1268c:	mov	r1, r5
   12690:	mov	r2, r7
   12694:	bl	137a8 <table_get_ullong@@Base>
   12698:	stm	sp, {r0, r1}
   1269c:	mov	r0, sl
   126a0:	mov	r1, r5
   126a4:	mov	r2, r7
   126a8:	bl	1463c <table_set_ullong@@Base>
   126ac:	b	123a4 <table_dupe@@Base+0x110>
   126b0:	mov	r0, r4
   126b4:	mov	r1, r5
   126b8:	mov	r2, r7
   126bc:	bl	137c0 <table_get_float@@Base>
   126c0:	mov	r0, sl
   126c4:	mov	r1, r5
   126c8:	mov	r2, r7
   126cc:	bl	146c4 <table_set_float@@Base>
   126d0:	b	123a4 <table_dupe@@Base+0x110>
   126d4:	mov	r0, r4
   126d8:	mov	r1, r5
   126dc:	mov	r2, r7
   126e0:	bl	137d8 <table_get_double@@Base>
   126e4:	mov	r0, sl
   126e8:	mov	r1, r5
   126ec:	mov	r2, r7
   126f0:	bl	14750 <table_set_double@@Base>
   126f4:	b	123a4 <table_dupe@@Base+0x110>
   126f8:	mov	r0, r4
   126fc:	mov	r1, r5
   12700:	mov	r2, r7
   12704:	bl	137f0 <table_get_ldouble@@Base>
   12708:	mov	r0, sl
   1270c:	mov	r1, r5
   12710:	mov	r2, r7
   12714:	bl	147d8 <table_set_ldouble@@Base>
   12718:	b	123a4 <table_dupe@@Base+0x110>
   1271c:	mov	r0, r4
   12720:	mov	r1, r5
   12724:	mov	r2, r7
   12728:	bl	13808 <table_get_char@@Base>
   1272c:	mov	r3, r0
   12730:	mov	r0, sl
   12734:	mov	r1, r5
   12738:	mov	r2, r7
   1273c:	bl	14880 <table_set_char@@Base>
   12740:	b	123a4 <table_dupe@@Base+0x110>
   12744:	mov	r0, r4
   12748:	mov	r1, r5
   1274c:	mov	r2, r7
   12750:	bl	13820 <table_get_uchar@@Base>
   12754:	mov	r3, r0
   12758:	mov	r0, sl
   1275c:	mov	r1, r5
   12760:	mov	r2, r7
   12764:	bl	14900 <table_set_uchar@@Base>
   12768:	b	123a4 <table_dupe@@Base+0x110>
   1276c:	mov	r0, r4
   12770:	mov	r1, r5
   12774:	mov	r2, r7
   12778:	bl	13838 <table_get_string@@Base>
   1277c:	mov	r3, r0
   12780:	mov	r0, sl
   12784:	mov	r1, r5
   12788:	mov	r2, r7
   1278c:	bl	14860 <table_set_string@@Base>
   12790:	b	123a4 <table_dupe@@Base+0x110>
   12794:	mov	r0, r4
   12798:	mov	r1, r5
   1279c:	mov	r2, r7
   127a0:	bl	13628 <table_get_bool@@Base>
   127a4:	mov	r3, r0
   127a8:	mov	r0, sl
   127ac:	mov	r1, r5
   127b0:	mov	r2, r7
   127b4:	bl	13e24 <table_set_bool@@Base>
   127b8:	b	123a4 <table_dupe@@Base+0x110>
   127bc:	mov	r0, sl
   127c0:	sub	sp, fp, #28
   127c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000127c8 <table_get_major_version@@Base>:
   127c8:	mov	r0, #0
   127cc:	bx	lr

000127d0 <table_get_minor_version@@Base>:
   127d0:	mov	r0, #0
   127d4:	bx	lr

000127d8 <table_get_patch_version@@Base>:
   127d8:	mov	r0, #0
   127dc:	bx	lr

000127e0 <table_get_version@@Base>:
   127e0:	ldr	r0, [pc, #4]	; 127ec <table_get_version@@Base+0xc>
   127e4:	add	r0, pc, r0
   127e8:	bx	lr
   127ec:	ldrdeq	r2, [r0], -fp

000127f0 <table_get_callback_length@@Base>:
   127f0:	ldr	r0, [r0, #32]
   127f4:	bx	lr

000127f8 <table_register_callback@@Base>:
   127f8:	push	{r4, r5, r6, r7, fp, lr}
   127fc:	add	fp, sp, #16
   12800:	mov	r5, r0
   12804:	ldr	r0, [r0, #32]
   12808:	mov	r4, r3
   1280c:	mov	r6, r2
   12810:	mov	r7, r1
   12814:	cmp	r0, #1
   12818:	blt	1286c <table_register_callback@@Base+0x74>
   1281c:	ldr	r2, [r5, #36]	; 0x24
   12820:	mov	r1, #0
   12824:	b	12834 <table_register_callback@@Base+0x3c>
   12828:	add	r1, r1, #1
   1282c:	cmp	r0, r1
   12830:	beq	1286c <table_register_callback@@Base+0x74>
   12834:	ldr	r3, [r2, r1, lsl #2]
   12838:	cmp	r3, r7
   1283c:	bne	12828 <table_register_callback@@Base+0x30>
   12840:	ldr	r3, [r5, #40]	; 0x28
   12844:	ldr	r3, [r3, r1, lsl #2]
   12848:	cmp	r3, r6
   1284c:	bne	12828 <table_register_callback@@Base+0x30>
   12850:	cmp	r1, #0
   12854:	beq	1286c <table_register_callback@@Base+0x74>
   12858:	ldr	r0, [r5, #44]	; 0x2c
   1285c:	ldr	r2, [r0, r1, lsl #2]
   12860:	orr	r2, r2, r4
   12864:	str	r2, [r0, r1, lsl #2]
   12868:	pop	{r4, r5, r6, r7, fp, pc}
   1286c:	ldr	r1, [r5, #48]	; 0x30
   12870:	udiv	r2, r0, r1
   12874:	mls	r2, r2, r1, r0
   12878:	cmp	r2, #0
   1287c:	bne	128c8 <table_register_callback@@Base+0xd0>
   12880:	ldr	r2, [r5, #52]	; 0x34
   12884:	ldr	r0, [r5, #36]	; 0x24
   12888:	add	r1, r2, r1
   1288c:	str	r1, [r5, #52]	; 0x34
   12890:	lsl	r1, r1, #2
   12894:	bl	11eb4 <realloc@plt>
   12898:	str	r0, [r5, #36]	; 0x24
   1289c:	ldr	r1, [r5, #52]	; 0x34
   128a0:	ldr	r0, [r5, #40]	; 0x28
   128a4:	lsl	r1, r1, #2
   128a8:	bl	11eb4 <realloc@plt>
   128ac:	str	r0, [r5, #40]	; 0x28
   128b0:	ldr	r1, [r5, #52]	; 0x34
   128b4:	ldr	r0, [r5, #44]	; 0x2c
   128b8:	lsl	r1, r1, #2
   128bc:	bl	11eb4 <realloc@plt>
   128c0:	str	r0, [r5, #44]	; 0x2c
   128c4:	ldr	r0, [r5, #32]
   128c8:	ldr	r1, [r5, #36]	; 0x24
   128cc:	str	r7, [r1, r0, lsl #2]
   128d0:	ldr	r1, [r5, #40]	; 0x28
   128d4:	str	r6, [r1, r0, lsl #2]
   128d8:	ldr	r1, [r5, #44]	; 0x2c
   128dc:	str	r4, [r1, r0, lsl #2]
   128e0:	ldr	r0, [r5, #32]
   128e4:	add	r0, r0, #1
   128e8:	str	r0, [r5, #32]
   128ec:	pop	{r4, r5, r6, r7, fp, pc}

000128f0 <table_unregister_callback@@Base>:
   128f0:	push	{r4, r5, r6, sl, fp, lr}
   128f4:	add	fp, sp, #16
   128f8:	ldr	r4, [r0, #32]
   128fc:	cmp	r4, #1
   12900:	blt	12a4c <table_unregister_callback@@Base+0x15c>
   12904:	ldr	r3, [r0, #36]	; 0x24
   12908:	mov	r6, r0
   1290c:	mov	r0, #0
   12910:	b	12920 <table_unregister_callback@@Base+0x30>
   12914:	add	r0, r0, #1
   12918:	cmp	r0, r4
   1291c:	beq	12a4c <table_unregister_callback@@Base+0x15c>
   12920:	ldr	r5, [r3, r0, lsl #2]
   12924:	cmp	r5, r1
   12928:	bne	12914 <table_unregister_callback@@Base+0x24>
   1292c:	ldr	r5, [r6, #40]	; 0x28
   12930:	ldr	r5, [r5, r0, lsl #2]
   12934:	cmp	r5, r2
   12938:	bne	12914 <table_unregister_callback@@Base+0x24>
   1293c:	sub	r1, r4, #1
   12940:	cmp	r0, r1
   12944:	bge	129c8 <table_unregister_callback@@Base+0xd8>
   12948:	add	r2, r0, #1
   1294c:	ldr	r1, [r3, r2, lsl #2]
   12950:	str	r1, [r3, r0, lsl #2]
   12954:	ldr	r1, [r6, #40]	; 0x28
   12958:	ldr	r3, [r1, r2, lsl #2]
   1295c:	str	r3, [r1, r0, lsl #2]
   12960:	ldr	r1, [r6, #44]	; 0x2c
   12964:	ldr	r3, [r1, r2, lsl #2]
   12968:	str	r3, [r1, r0, lsl #2]
   1296c:	ldr	r1, [r6, #32]
   12970:	sub	r1, r1, #1
   12974:	cmp	r2, r1
   12978:	bge	129c8 <table_unregister_callback@@Base+0xd8>
   1297c:	ldr	r1, [r6, #36]	; 0x24
   12980:	add	r1, r1, r0, lsl #2
   12984:	ldr	r2, [r1, #8]
   12988:	str	r2, [r1, #4]
   1298c:	ldr	r1, [r6, #40]	; 0x28
   12990:	add	r1, r1, r0, lsl #2
   12994:	ldr	r2, [r1, #8]
   12998:	str	r2, [r1, #4]
   1299c:	ldr	r1, [r6, #44]	; 0x2c
   129a0:	add	r1, r1, r0, lsl #2
   129a4:	ldr	r2, [r1, #8]
   129a8:	str	r2, [r1, #4]
   129ac:	add	r2, r0, #1
   129b0:	add	r0, r0, #2
   129b4:	ldr	r1, [r6, #32]
   129b8:	sub	r1, r1, #1
   129bc:	cmp	r0, r1
   129c0:	mov	r0, r2
   129c4:	blt	1297c <table_unregister_callback@@Base+0x8c>
   129c8:	str	r1, [r6, #32]
   129cc:	ldr	r2, [r6, #48]	; 0x30
   129d0:	udiv	r0, r1, r2
   129d4:	mls	r0, r0, r2, r1
   129d8:	cmp	r0, #0
   129dc:	popne	{r4, r5, r6, sl, fp, pc}
   129e0:	ldr	r1, [r6, #52]	; 0x34
   129e4:	ldr	r0, [r6, #36]	; 0x24
   129e8:	subs	r1, r1, r2
   129ec:	str	r1, [r6, #52]	; 0x34
   129f0:	beq	12a28 <table_unregister_callback@@Base+0x138>
   129f4:	lsl	r1, r1, #2
   129f8:	bl	11eb4 <realloc@plt>
   129fc:	str	r0, [r6, #36]	; 0x24
   12a00:	ldr	r1, [r6, #52]	; 0x34
   12a04:	ldr	r0, [r6, #40]	; 0x28
   12a08:	lsl	r1, r1, #2
   12a0c:	bl	11eb4 <realloc@plt>
   12a10:	str	r0, [r6, #40]	; 0x28
   12a14:	ldr	r1, [r6, #52]	; 0x34
   12a18:	ldr	r0, [r6, #44]	; 0x2c
   12a1c:	lsl	r1, r1, #2
   12a20:	bl	11eb4 <realloc@plt>
   12a24:	b	12a48 <table_unregister_callback@@Base+0x158>
   12a28:	bl	11ea8 <free@plt>
   12a2c:	ldr	r0, [r6, #40]	; 0x28
   12a30:	bl	11ea8 <free@plt>
   12a34:	ldr	r0, [r6, #44]	; 0x2c
   12a38:	bl	11ea8 <free@plt>
   12a3c:	mov	r0, #0
   12a40:	str	r0, [r6, #36]	; 0x24
   12a44:	str	r0, [r6, #40]	; 0x28
   12a48:	str	r0, [r6, #44]	; 0x2c
   12a4c:	pop	{r4, r5, r6, sl, fp, pc}

00012a50 <table_notify@@Base>:
   12a50:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12a54:	add	fp, sp, #24
   12a58:	sub	sp, sp, #8
   12a5c:	mov	r7, r0
   12a60:	ldr	r0, [r0, #32]
   12a64:	cmp	r0, #1
   12a68:	blt	12acc <table_notify@@Base+0x7c>
   12a6c:	mov	r4, r3
   12a70:	mov	r8, r2
   12a74:	mov	r9, r1
   12a78:	mov	r5, #0
   12a7c:	b	12a8c <table_notify@@Base+0x3c>
   12a80:	add	r5, r5, #1
   12a84:	cmp	r5, r0
   12a88:	bge	12acc <table_notify@@Base+0x7c>
   12a8c:	ldr	r1, [r7, #44]	; 0x2c
   12a90:	ldr	r1, [r1, r5, lsl #2]
   12a94:	tst	r1, r4
   12a98:	beq	12a80 <table_notify@@Base+0x30>
   12a9c:	ldr	r0, [r7, #36]	; 0x24
   12aa0:	ldr	r1, [r7, #40]	; 0x28
   12aa4:	mov	r2, r8
   12aa8:	mov	r3, r4
   12aac:	ldr	r6, [r0, r5, lsl #2]
   12ab0:	ldr	r0, [r1, r5, lsl #2]
   12ab4:	mov	r1, r9
   12ab8:	str	r0, [sp]
   12abc:	mov	r0, r7
   12ac0:	blx	r6
   12ac4:	ldr	r0, [r7, #32]
   12ac8:	b	12a80 <table_notify@@Base+0x30>
   12acc:	sub	sp, fp, #24
   12ad0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012ad4 <table_column_init@@Base>:
   12ad4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12ad8:	add	fp, sp, #24
   12adc:	ldr	r7, [r0]
   12ae0:	mov	r0, r2
   12ae4:	mov	r4, r3
   12ae8:	mov	r5, r2
   12aec:	mov	r6, r1
   12af0:	bl	11ef0 <strlen@plt>
   12af4:	add	r0, r0, #1
   12af8:	bl	11ecc <malloc@plt>
   12afc:	ldr	r8, [fp, #8]
   12b00:	add	r6, r6, r6, lsl #1
   12b04:	cmp	r0, #0
   12b08:	str	r0, [r7, r6, lsl #2]
   12b0c:	beq	12b18 <table_column_init@@Base+0x44>
   12b10:	mov	r1, r5
   12b14:	bl	11ec0 <strcpy@plt>
   12b18:	add	r0, r7, r6, lsl #2
   12b1c:	stmib	r0, {r4, r8}
   12b20:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012b24 <table_get_col_ptr@@Base>:
   12b24:	ldr	r0, [r0]
   12b28:	add	r1, r1, r1, lsl #1
   12b2c:	add	r0, r0, r1, lsl #2
   12b30:	bx	lr

00012b34 <table_column_destroy@@Base>:
   12b34:	ldr	r0, [r0]
   12b38:	add	r1, r1, r1, lsl #1
   12b3c:	ldr	r0, [r0, r1, lsl #2]
   12b40:	cmp	r0, #0
   12b44:	bxeq	lr
   12b48:	b	11ea8 <free@plt>

00012b4c <table_get_column_length@@Base>:
   12b4c:	ldr	r0, [r0, #4]
   12b50:	bx	lr

00012b54 <table_get_column@@Base>:
   12b54:	push	{r4, r5, r6, r7, fp, lr}
   12b58:	add	fp, sp, #16
   12b5c:	ldr	r6, [r0, #4]
   12b60:	cmp	r6, #1
   12b64:	blt	12ba0 <table_get_column@@Base+0x4c>
   12b68:	ldr	r7, [r0]
   12b6c:	mov	r5, r1
   12b70:	mov	r4, #0
   12b74:	ldr	r0, [r7]
   12b78:	mov	r1, r5
   12b7c:	bl	11e90 <strcmp@plt>
   12b80:	cmp	r0, #0
   12b84:	beq	12ba4 <table_get_column@@Base+0x50>
   12b88:	add	r4, r4, #1
   12b8c:	add	r7, r7, #12
   12b90:	cmp	r6, r4
   12b94:	bne	12b74 <table_get_column@@Base+0x20>
   12b98:	mov	r4, r6
   12b9c:	b	12ba4 <table_get_column@@Base+0x50>
   12ba0:	mov	r4, #0
   12ba4:	cmp	r4, r6
   12ba8:	mvneq	r4, #0
   12bac:	mov	r0, r4
   12bb0:	pop	{r4, r5, r6, r7, fp, pc}

00012bb4 <table_get_column_name@@Base>:
   12bb4:	ldr	r0, [r0]
   12bb8:	add	r1, r1, r1, lsl #1
   12bbc:	ldr	r0, [r0, r1, lsl #2]
   12bc0:	bx	lr

00012bc4 <table_get_column_data_type@@Base>:
   12bc4:	ldr	r0, [r0]
   12bc8:	add	r1, r1, r1, lsl #1
   12bcc:	add	r0, r0, r1, lsl #2
   12bd0:	ldr	r0, [r0, #4]
   12bd4:	bx	lr

00012bd8 <table_add_column@@Base>:
   12bd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12bdc:	add	fp, sp, #28
   12be0:	sub	sp, sp, #4
   12be4:	mov	r4, r0
   12be8:	mov	r8, r1
   12bec:	ldr	r0, [r0, #4]
   12bf0:	mov	r9, r2
   12bf4:	ldr	r1, [r4, #8]
   12bf8:	udiv	r2, r0, r1
   12bfc:	mls	r0, r2, r1, r0
   12c00:	cmp	r0, #0
   12c04:	bne	12c70 <table_add_column@@Base+0x98>
   12c08:	ldr	r2, [r4, #12]
   12c0c:	ldr	r0, [r4]
   12c10:	add	r1, r2, r1
   12c14:	str	r1, [r4, #12]
   12c18:	add	r1, r1, r1, lsl #1
   12c1c:	lsl	r1, r1, #2
   12c20:	bl	11eb4 <realloc@plt>
   12c24:	str	r0, [r4]
   12c28:	mov	r0, r4
   12c2c:	bl	138ec <table_get_row_length@@Base>
   12c30:	cmp	r0, #1
   12c34:	blt	12c70 <table_add_column@@Base+0x98>
   12c38:	mov	r6, r0
   12c3c:	mov	r5, #0
   12c40:	mov	r0, r4
   12c44:	mov	r1, r5
   12c48:	bl	13884 <table_get_row_ptr@@Base>
   12c4c:	ldr	r1, [r4, #12]
   12c50:	mov	r7, r0
   12c54:	ldr	r0, [r0]
   12c58:	lsl	r1, r1, #2
   12c5c:	bl	11eb4 <realloc@plt>
   12c60:	add	r5, r5, #1
   12c64:	str	r0, [r7]
   12c68:	cmp	r6, r5
   12c6c:	bne	12c40 <table_add_column@@Base+0x68>
   12c70:	mov	r0, r4
   12c74:	bl	138ec <table_get_row_length@@Base>
   12c78:	ldr	r6, [r4, #4]
   12c7c:	mov	r7, r0
   12c80:	mov	r0, r9
   12c84:	bl	135f4 <table_get_default_compare_function_for_data_type@@Base>
   12c88:	ldr	r5, [r4]
   12c8c:	mov	sl, r0
   12c90:	mov	r0, r8
   12c94:	bl	11ef0 <strlen@plt>
   12c98:	add	r0, r0, #1
   12c9c:	bl	11ecc <malloc@plt>
   12ca0:	mov	r1, r8
   12ca4:	add	r8, r6, r6, lsl #1
   12ca8:	cmp	r0, #0
   12cac:	str	r0, [r5, r8, lsl #2]
   12cb0:	beq	12cb8 <table_add_column@@Base+0xe0>
   12cb4:	bl	11ec0 <strcpy@plt>
   12cb8:	add	r0, r5, r8, lsl #2
   12cbc:	cmp	r7, #1
   12cc0:	stmib	r0, {r9, sl}
   12cc4:	blt	12ce8 <table_add_column@@Base+0x110>
   12cc8:	mov	r5, #0
   12ccc:	mov	r0, r4
   12cd0:	mov	r1, r5
   12cd4:	mov	r2, r6
   12cd8:	bl	149dc <table_cell_init@@Base>
   12cdc:	add	r5, r5, #1
   12ce0:	cmp	r7, r5
   12ce4:	bne	12ccc <table_add_column@@Base+0xf4>
   12ce8:	ldr	r2, [r4, #4]
   12cec:	mov	r0, r4
   12cf0:	mvn	r1, #0
   12cf4:	mov	r3, #8
   12cf8:	bl	12a50 <table_notify@@Base>
   12cfc:	ldr	r0, [r4, #4]
   12d00:	add	r1, r0, #1
   12d04:	str	r1, [r4, #4]
   12d08:	sub	sp, fp, #28
   12d0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012d10 <table_remove_column@@Base>:
   12d10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d14:	add	fp, sp, #28
   12d18:	sub	sp, sp, #12
   12d1c:	mov	r5, r0
   12d20:	ldr	r0, [r0]
   12d24:	add	r6, r1, r1, lsl #1
   12d28:	mov	r4, r1
   12d2c:	ldr	r0, [r0, r6, lsl #2]
   12d30:	cmp	r0, #0
   12d34:	beq	12d3c <table_remove_column@@Base+0x2c>
   12d38:	bl	11ea8 <free@plt>
   12d3c:	ldr	r7, [r5, #4]
   12d40:	sub	r8, r7, #1
   12d44:	cmp	r8, r4
   12d48:	ble	12d7c <table_remove_column@@Base+0x6c>
   12d4c:	mvn	r0, r4
   12d50:	lsl	r1, r6, #2
   12d54:	add	r0, r0, r7
   12d58:	ldr	r2, [r5]
   12d5c:	subs	r0, r0, #1
   12d60:	add	r2, r2, r1
   12d64:	add	r1, r1, #12
   12d68:	vldr	d16, [r2, #12]
   12d6c:	ldr	r3, [r2, #20]
   12d70:	str	r3, [r2, #8]
   12d74:	vstr	d16, [r2]
   12d78:	bne	12d58 <table_remove_column@@Base+0x48>
   12d7c:	mov	r0, r5
   12d80:	bl	138ec <table_get_row_length@@Base>
   12d84:	cmp	r0, #1
   12d88:	blt	12e48 <table_remove_column@@Base+0x138>
   12d8c:	mov	r9, r0
   12d90:	mvn	r0, r4
   12d94:	sub	sl, r7, #2
   12d98:	add	r0, r7, r0
   12d9c:	mov	r7, #0
   12da0:	and	r0, r0, #1
   12da4:	str	r0, [sp, #8]
   12da8:	add	r0, r4, #1
   12dac:	str	r0, [sp, #4]
   12db0:	b	12dc0 <table_remove_column@@Base+0xb0>
   12db4:	add	r7, r7, #1
   12db8:	cmp	r7, r9
   12dbc:	beq	12e48 <table_remove_column@@Base+0x138>
   12dc0:	mov	r0, r5
   12dc4:	mov	r1, r7
   12dc8:	mov	r2, r4
   12dcc:	bl	14a18 <table_cell_destroy@@Base>
   12dd0:	mov	r0, r5
   12dd4:	mov	r1, r7
   12dd8:	bl	13884 <table_get_row_ptr@@Base>
   12ddc:	cmp	r8, r4
   12de0:	ble	12db4 <table_remove_column@@Base+0xa4>
   12de4:	ldr	r1, [sp, #8]
   12de8:	mov	r2, r4
   12dec:	cmp	r1, #0
   12df0:	beq	12e08 <table_remove_column@@Base+0xf8>
   12df4:	ldr	r1, [r0]
   12df8:	add	r2, r1, r4, lsl #2
   12dfc:	ldr	r2, [r2, #4]
   12e00:	str	r2, [r1, r4, lsl #2]
   12e04:	ldr	r2, [sp, #4]
   12e08:	cmp	sl, r4
   12e0c:	beq	12db4 <table_remove_column@@Base+0xa4>
   12e10:	sub	r1, r8, r2
   12e14:	lsl	r2, r2, #2
   12e18:	ldr	r3, [r0]
   12e1c:	subs	r1, r1, #2
   12e20:	add	r6, r3, r2
   12e24:	ldr	r6, [r6, #4]
   12e28:	str	r6, [r3, r2]
   12e2c:	ldr	r3, [r0]
   12e30:	add	r3, r3, r2
   12e34:	add	r2, r2, #8
   12e38:	ldr	r6, [r3, #8]
   12e3c:	str	r6, [r3, #4]
   12e40:	bne	12e18 <table_remove_column@@Base+0x108>
   12e44:	b	12db4 <table_remove_column@@Base+0xa4>
   12e48:	ldmib	r5, {r0, r1}
   12e4c:	sub	r0, r0, #1
   12e50:	udiv	r2, r0, r1
   12e54:	str	r0, [r5, #4]
   12e58:	mls	r0, r2, r1, r0
   12e5c:	cmp	r0, #0
   12e60:	bne	12ecc <table_remove_column@@Base+0x1bc>
   12e64:	ldr	r2, [r5, #12]
   12e68:	ldr	r0, [r5]
   12e6c:	sub	r1, r2, r1
   12e70:	str	r1, [r5, #12]
   12e74:	add	r1, r1, r1, lsl #1
   12e78:	lsl	r1, r1, #2
   12e7c:	bl	11eb4 <realloc@plt>
   12e80:	str	r0, [r5]
   12e84:	mov	r0, r5
   12e88:	bl	138ec <table_get_row_length@@Base>
   12e8c:	cmp	r0, #1
   12e90:	blt	12ecc <table_remove_column@@Base+0x1bc>
   12e94:	mov	r8, r0
   12e98:	mov	r7, #0
   12e9c:	mov	r0, r5
   12ea0:	mov	r1, r7
   12ea4:	bl	13884 <table_get_row_ptr@@Base>
   12ea8:	ldr	r1, [r5, #12]
   12eac:	mov	r6, r0
   12eb0:	ldr	r0, [r0]
   12eb4:	lsl	r1, r1, #2
   12eb8:	bl	11eb4 <realloc@plt>
   12ebc:	add	r7, r7, #1
   12ec0:	str	r0, [r6]
   12ec4:	cmp	r8, r7
   12ec8:	bne	12e9c <table_remove_column@@Base+0x18c>
   12ecc:	mov	r0, r5
   12ed0:	mvn	r1, #0
   12ed4:	mov	r2, r4
   12ed8:	mov	r3, #16
   12edc:	bl	12a50 <table_notify@@Base>
   12ee0:	mov	r0, #0
   12ee4:	sub	sp, fp, #28
   12ee8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012eec <table_get_column_compare_function@@Base>:
   12eec:	ldr	r0, [r0]
   12ef0:	add	r1, r1, r1, lsl #1
   12ef4:	add	r0, r0, r1, lsl #2
   12ef8:	ldr	r0, [r0, #8]
   12efc:	bx	lr

00012f00 <table_set_column_compare_function@@Base>:
   12f00:	ldr	r0, [r0]
   12f04:	add	r1, r1, r1, lsl #1
   12f08:	add	r0, r0, r1, lsl #2
   12f0c:	str	r2, [r0, #8]
   12f10:	bx	lr

00012f14 <table_compare_bool@@Base>:
   12f14:	cmp	r0, #0
   12f18:	beq	12f4c <table_compare_bool@@Base+0x38>
   12f1c:	cmp	r1, #0
   12f20:	moveq	r1, #1
   12f24:	moveq	r0, r1
   12f28:	bxeq	lr
   12f2c:	ldrb	r2, [r1]
   12f30:	ldrb	r0, [r0]
   12f34:	mov	r1, #0
   12f38:	cmp	r0, r2
   12f3c:	mvncc	r1, #0
   12f40:	movwhi	r1, #1
   12f44:	mov	r0, r1
   12f48:	bx	lr
   12f4c:	cmp	r1, #0
   12f50:	mvnne	r1, #0
   12f54:	mov	r0, r1
   12f58:	bx	lr

00012f5c <table_compare_int@@Base>:
   12f5c:	cmp	r0, #0
   12f60:	beq	12f94 <table_compare_int@@Base+0x38>
   12f64:	cmp	r1, #0
   12f68:	moveq	r1, #1
   12f6c:	moveq	r0, r1
   12f70:	bxeq	lr
   12f74:	ldr	r2, [r1]
   12f78:	ldr	r0, [r0]
   12f7c:	mov	r1, #0
   12f80:	cmp	r0, r2
   12f84:	mvnlt	r1, #0
   12f88:	movwgt	r1, #1
   12f8c:	mov	r0, r1
   12f90:	bx	lr
   12f94:	cmp	r1, #0
   12f98:	mvnne	r1, #0
   12f9c:	mov	r0, r1
   12fa0:	bx	lr

00012fa4 <table_compare_uint@@Base>:
   12fa4:	cmp	r0, #0
   12fa8:	beq	12fdc <table_compare_uint@@Base+0x38>
   12fac:	cmp	r1, #0
   12fb0:	moveq	r1, #1
   12fb4:	moveq	r0, r1
   12fb8:	bxeq	lr
   12fbc:	ldr	r2, [r1]
   12fc0:	ldr	r0, [r0]
   12fc4:	mov	r1, #0
   12fc8:	cmp	r0, r2
   12fcc:	mvncc	r1, #0
   12fd0:	movwhi	r1, #1
   12fd4:	mov	r0, r1
   12fd8:	bx	lr
   12fdc:	cmp	r1, #0
   12fe0:	mvnne	r1, #0
   12fe4:	mov	r0, r1
   12fe8:	bx	lr

00012fec <table_compare_int8@@Base>:
   12fec:	cmp	r0, #0
   12ff0:	beq	13024 <table_compare_int8@@Base+0x38>
   12ff4:	cmp	r1, #0
   12ff8:	moveq	r1, #1
   12ffc:	moveq	r0, r1
   13000:	bxeq	lr
   13004:	ldrsb	r2, [r1]
   13008:	ldrsb	r0, [r0]
   1300c:	mov	r1, #0
   13010:	cmp	r0, r2
   13014:	mvnlt	r1, #0
   13018:	movwgt	r1, #1
   1301c:	mov	r0, r1
   13020:	bx	lr
   13024:	cmp	r1, #0
   13028:	mvnne	r1, #0
   1302c:	mov	r0, r1
   13030:	bx	lr

00013034 <table_compare_uint8@@Base>:
   13034:	cmp	r0, #0
   13038:	beq	1306c <table_compare_uint8@@Base+0x38>
   1303c:	cmp	r1, #0
   13040:	moveq	r1, #1
   13044:	moveq	r0, r1
   13048:	bxeq	lr
   1304c:	ldrb	r2, [r1]
   13050:	ldrb	r0, [r0]
   13054:	mov	r1, #0
   13058:	cmp	r0, r2
   1305c:	mvncc	r1, #0
   13060:	movwhi	r1, #1
   13064:	mov	r0, r1
   13068:	bx	lr
   1306c:	cmp	r1, #0
   13070:	mvnne	r1, #0
   13074:	mov	r0, r1
   13078:	bx	lr

0001307c <table_compare_int16@@Base>:
   1307c:	cmp	r0, #0
   13080:	beq	130b4 <table_compare_int16@@Base+0x38>
   13084:	cmp	r1, #0
   13088:	moveq	r1, #1
   1308c:	moveq	r0, r1
   13090:	bxeq	lr
   13094:	ldrsh	r2, [r1]
   13098:	ldrsh	r0, [r0]
   1309c:	mov	r1, #0
   130a0:	cmp	r0, r2
   130a4:	mvnlt	r1, #0
   130a8:	movwgt	r1, #1
   130ac:	mov	r0, r1
   130b0:	bx	lr
   130b4:	cmp	r1, #0
   130b8:	mvnne	r1, #0
   130bc:	mov	r0, r1
   130c0:	bx	lr

000130c4 <table_compare_uint16@@Base>:
   130c4:	cmp	r0, #0
   130c8:	beq	130fc <table_compare_uint16@@Base+0x38>
   130cc:	cmp	r1, #0
   130d0:	moveq	r1, #1
   130d4:	moveq	r0, r1
   130d8:	bxeq	lr
   130dc:	ldrh	r2, [r1]
   130e0:	ldrh	r0, [r0]
   130e4:	mov	r1, #0
   130e8:	cmp	r0, r2
   130ec:	mvncc	r1, #0
   130f0:	movwhi	r1, #1
   130f4:	mov	r0, r1
   130f8:	bx	lr
   130fc:	cmp	r1, #0
   13100:	mvnne	r1, #0
   13104:	mov	r0, r1
   13108:	bx	lr

0001310c <table_compare_int32@@Base>:
   1310c:	cmp	r0, #0
   13110:	beq	13144 <table_compare_int32@@Base+0x38>
   13114:	cmp	r1, #0
   13118:	moveq	r1, #1
   1311c:	moveq	r0, r1
   13120:	bxeq	lr
   13124:	ldr	r2, [r1]
   13128:	ldr	r0, [r0]
   1312c:	mov	r1, #0
   13130:	cmp	r0, r2
   13134:	mvnlt	r1, #0
   13138:	movwgt	r1, #1
   1313c:	mov	r0, r1
   13140:	bx	lr
   13144:	cmp	r1, #0
   13148:	mvnne	r1, #0
   1314c:	mov	r0, r1
   13150:	bx	lr

00013154 <table_compare_uint32@@Base>:
   13154:	cmp	r0, #0
   13158:	beq	1318c <table_compare_uint32@@Base+0x38>
   1315c:	cmp	r1, #0
   13160:	moveq	r1, #1
   13164:	moveq	r0, r1
   13168:	bxeq	lr
   1316c:	ldr	r2, [r1]
   13170:	ldr	r0, [r0]
   13174:	mov	r1, #0
   13178:	cmp	r0, r2
   1317c:	mvncc	r1, #0
   13180:	movwhi	r1, #1
   13184:	mov	r0, r1
   13188:	bx	lr
   1318c:	cmp	r1, #0
   13190:	mvnne	r1, #0
   13194:	mov	r0, r1
   13198:	bx	lr

0001319c <table_compare_int64@@Base>:
   1319c:	cmp	r0, #0
   131a0:	beq	131f4 <table_compare_int64@@Base+0x58>
   131a4:	cmp	r1, #0
   131a8:	moveq	r1, #1
   131ac:	moveq	r0, r1
   131b0:	bxeq	lr
   131b4:	push	{r5, r7, fp, lr}
   131b8:	add	fp, sp, #8
   131bc:	ldm	r0, {r0, r5}
   131c0:	ldm	r1, {r2, r7}
   131c4:	mov	r1, #0
   131c8:	subs	r3, r0, r2
   131cc:	sbcs	r3, r5, r7
   131d0:	movwlt	r1, #1
   131d4:	cmp	r1, #0
   131d8:	mvnne	r1, #0
   131dc:	subs	r0, r2, r0
   131e0:	sbcs	r0, r7, r5
   131e4:	movwlt	r1, #1
   131e8:	pop	{r5, r7, fp, lr}
   131ec:	mov	r0, r1
   131f0:	bx	lr
   131f4:	cmp	r1, #0
   131f8:	mvnne	r1, #0
   131fc:	mov	r0, r1
   13200:	bx	lr

00013204 <table_compare_uint64@@Base>:
   13204:	cmp	r0, #0
   13208:	beq	1325c <table_compare_uint64@@Base+0x58>
   1320c:	cmp	r1, #0
   13210:	moveq	r1, #1
   13214:	moveq	r0, r1
   13218:	bxeq	lr
   1321c:	push	{r5, r7, fp, lr}
   13220:	add	fp, sp, #8
   13224:	ldm	r0, {r0, r5}
   13228:	ldm	r1, {r2, r7}
   1322c:	mov	r1, #0
   13230:	subs	r3, r0, r2
   13234:	sbcs	r3, r5, r7
   13238:	movwcc	r1, #1
   1323c:	cmp	r1, #0
   13240:	mvnne	r1, #0
   13244:	subs	r0, r2, r0
   13248:	sbcs	r0, r7, r5
   1324c:	movwcc	r1, #1
   13250:	pop	{r5, r7, fp, lr}
   13254:	mov	r0, r1
   13258:	bx	lr
   1325c:	cmp	r1, #0
   13260:	mvnne	r1, #0
   13264:	mov	r0, r1
   13268:	bx	lr

0001326c <table_compare_short@@Base>:
   1326c:	cmp	r0, #0
   13270:	beq	132a4 <table_compare_short@@Base+0x38>
   13274:	cmp	r1, #0
   13278:	moveq	r1, #1
   1327c:	moveq	r0, r1
   13280:	bxeq	lr
   13284:	ldrsh	r2, [r1]
   13288:	ldrsh	r0, [r0]
   1328c:	mov	r1, #0
   13290:	cmp	r0, r2
   13294:	mvnlt	r1, #0
   13298:	movwgt	r1, #1
   1329c:	mov	r0, r1
   132a0:	bx	lr
   132a4:	cmp	r1, #0
   132a8:	mvnne	r1, #0
   132ac:	mov	r0, r1
   132b0:	bx	lr

000132b4 <table_compare_ushort@@Base>:
   132b4:	cmp	r0, #0
   132b8:	beq	132ec <table_compare_ushort@@Base+0x38>
   132bc:	cmp	r1, #0
   132c0:	moveq	r1, #1
   132c4:	moveq	r0, r1
   132c8:	bxeq	lr
   132cc:	ldrh	r2, [r1]
   132d0:	ldrh	r0, [r0]
   132d4:	mov	r1, #0
   132d8:	cmp	r0, r2
   132dc:	mvncc	r1, #0
   132e0:	movwhi	r1, #1
   132e4:	mov	r0, r1
   132e8:	bx	lr
   132ec:	cmp	r1, #0
   132f0:	mvnne	r1, #0
   132f4:	mov	r0, r1
   132f8:	bx	lr

000132fc <table_compare_long@@Base>:
   132fc:	cmp	r0, #0
   13300:	beq	13334 <table_compare_long@@Base+0x38>
   13304:	cmp	r1, #0
   13308:	moveq	r1, #1
   1330c:	moveq	r0, r1
   13310:	bxeq	lr
   13314:	ldr	r2, [r1]
   13318:	ldr	r0, [r0]
   1331c:	mov	r1, #0
   13320:	cmp	r0, r2
   13324:	mvnlt	r1, #0
   13328:	movwgt	r1, #1
   1332c:	mov	r0, r1
   13330:	bx	lr
   13334:	cmp	r1, #0
   13338:	mvnne	r1, #0
   1333c:	mov	r0, r1
   13340:	bx	lr

00013344 <table_compare_ulong@@Base>:
   13344:	cmp	r0, #0
   13348:	beq	1337c <table_compare_ulong@@Base+0x38>
   1334c:	cmp	r1, #0
   13350:	moveq	r1, #1
   13354:	moveq	r0, r1
   13358:	bxeq	lr
   1335c:	ldr	r2, [r1]
   13360:	ldr	r0, [r0]
   13364:	mov	r1, #0
   13368:	cmp	r0, r2
   1336c:	mvncc	r1, #0
   13370:	movwhi	r1, #1
   13374:	mov	r0, r1
   13378:	bx	lr
   1337c:	cmp	r1, #0
   13380:	mvnne	r1, #0
   13384:	mov	r0, r1
   13388:	bx	lr

0001338c <table_compare_llong@@Base>:
   1338c:	cmp	r0, #0
   13390:	beq	133e4 <table_compare_llong@@Base+0x58>
   13394:	cmp	r1, #0
   13398:	moveq	r1, #1
   1339c:	moveq	r0, r1
   133a0:	bxeq	lr
   133a4:	push	{r5, r7, fp, lr}
   133a8:	add	fp, sp, #8
   133ac:	ldm	r0, {r0, r5}
   133b0:	ldm	r1, {r2, r7}
   133b4:	mov	r1, #0
   133b8:	subs	r3, r0, r2
   133bc:	sbcs	r3, r5, r7
   133c0:	movwlt	r1, #1
   133c4:	cmp	r1, #0
   133c8:	mvnne	r1, #0
   133cc:	subs	r0, r2, r0
   133d0:	sbcs	r0, r7, r5
   133d4:	movwlt	r1, #1
   133d8:	pop	{r5, r7, fp, lr}
   133dc:	mov	r0, r1
   133e0:	bx	lr
   133e4:	cmp	r1, #0
   133e8:	mvnne	r1, #0
   133ec:	mov	r0, r1
   133f0:	bx	lr

000133f4 <table_compare_ullong@@Base>:
   133f4:	cmp	r0, #0
   133f8:	beq	1342c <table_compare_ullong@@Base+0x38>
   133fc:	cmp	r1, #0
   13400:	moveq	r1, #1
   13404:	moveq	r0, r1
   13408:	bxeq	lr
   1340c:	ldr	r2, [r1]
   13410:	ldr	r0, [r0]
   13414:	mov	r1, #0
   13418:	cmp	r0, r2
   1341c:	mvncc	r1, #0
   13420:	movwhi	r1, #1
   13424:	mov	r0, r1
   13428:	bx	lr
   1342c:	cmp	r1, #0
   13430:	mvnne	r1, #0
   13434:	mov	r0, r1
   13438:	bx	lr

0001343c <table_compare_float@@Base>:
   1343c:	cmp	r0, #0
   13440:	beq	13478 <table_compare_float@@Base+0x3c>
   13444:	cmp	r1, #0
   13448:	moveq	r1, #1
   1344c:	moveq	r0, r1
   13450:	bxeq	lr
   13454:	vldr	s0, [r1]
   13458:	vldr	s2, [r0]
   1345c:	mov	r1, #0
   13460:	vcmpe.f32	s2, s0
   13464:	vmrs	APSR_nzcv, fpscr
   13468:	mvnmi	r1, #0
   1346c:	movwgt	r1, #1
   13470:	mov	r0, r1
   13474:	bx	lr
   13478:	cmp	r1, #0
   1347c:	mvnne	r1, #0
   13480:	mov	r0, r1
   13484:	bx	lr

00013488 <table_compare_double@@Base>:
   13488:	cmp	r0, #0
   1348c:	beq	134c4 <table_compare_double@@Base+0x3c>
   13490:	cmp	r1, #0
   13494:	moveq	r1, #1
   13498:	moveq	r0, r1
   1349c:	bxeq	lr
   134a0:	vldr	d16, [r1]
   134a4:	vldr	d17, [r0]
   134a8:	mov	r1, #0
   134ac:	vcmpe.f64	d17, d16
   134b0:	vmrs	APSR_nzcv, fpscr
   134b4:	mvnmi	r1, #0
   134b8:	movwgt	r1, #1
   134bc:	mov	r0, r1
   134c0:	bx	lr
   134c4:	cmp	r1, #0
   134c8:	mvnne	r1, #0
   134cc:	mov	r0, r1
   134d0:	bx	lr

000134d4 <table_compare_ldouble@@Base>:
   134d4:	cmp	r0, #0
   134d8:	beq	13510 <table_compare_ldouble@@Base+0x3c>
   134dc:	cmp	r1, #0
   134e0:	moveq	r1, #1
   134e4:	moveq	r0, r1
   134e8:	bxeq	lr
   134ec:	vldr	d16, [r1]
   134f0:	vldr	d17, [r0]
   134f4:	mov	r1, #0
   134f8:	vcmpe.f64	d17, d16
   134fc:	vmrs	APSR_nzcv, fpscr
   13500:	mvnmi	r1, #0
   13504:	movwgt	r1, #1
   13508:	mov	r0, r1
   1350c:	bx	lr
   13510:	cmp	r1, #0
   13514:	mvnne	r1, #0
   13518:	mov	r0, r1
   1351c:	bx	lr

00013520 <table_compare_char@@Base>:
   13520:	cmp	r0, #0
   13524:	beq	13558 <table_compare_char@@Base+0x38>
   13528:	cmp	r1, #0
   1352c:	moveq	r1, #1
   13530:	moveq	r0, r1
   13534:	bxeq	lr
   13538:	ldrb	r2, [r1]
   1353c:	ldrb	r0, [r0]
   13540:	mov	r1, #0
   13544:	cmp	r0, r2
   13548:	mvncc	r1, #0
   1354c:	movwhi	r1, #1
   13550:	mov	r0, r1
   13554:	bx	lr
   13558:	cmp	r1, #0
   1355c:	mvnne	r1, #0
   13560:	mov	r0, r1
   13564:	bx	lr

00013568 <table_compare_uchar@@Base>:
   13568:	cmp	r0, #0
   1356c:	beq	135a0 <table_compare_uchar@@Base+0x38>
   13570:	cmp	r1, #0
   13574:	moveq	r1, #1
   13578:	moveq	r0, r1
   1357c:	bxeq	lr
   13580:	ldrb	r2, [r1]
   13584:	ldrb	r0, [r0]
   13588:	mov	r1, #0
   1358c:	cmp	r0, r2
   13590:	mvncc	r1, #0
   13594:	movwhi	r1, #1
   13598:	mov	r0, r1
   1359c:	bx	lr
   135a0:	cmp	r1, #0
   135a4:	mvnne	r1, #0
   135a8:	mov	r0, r1
   135ac:	bx	lr

000135b0 <table_compare_string@@Base>:
   135b0:	cmp	r0, #0
   135b4:	beq	135cc <table_compare_string@@Base+0x1c>
   135b8:	cmp	r1, #0
   135bc:	moveq	r1, #1
   135c0:	moveq	r0, r1
   135c4:	bxeq	lr
   135c8:	b	11e90 <strcmp@plt>
   135cc:	cmp	r1, #0
   135d0:	mvnne	r1, #0
   135d4:	mov	r0, r1
   135d8:	bx	lr

000135dc <table_compare_ptr@@Base>:
   135dc:	cmp	r0, r1
   135e0:	mov	r2, #0
   135e4:	mvncc	r2, #0
   135e8:	movwhi	r2, #1
   135ec:	mov	r0, r2
   135f0:	bx	lr

000135f4 <table_get_default_compare_function_for_data_type@@Base>:
   135f4:	cmp	r0, #23
   135f8:	movhi	r0, #0
   135fc:	bxhi	lr
   13600:	ldr	r1, [pc, #8]	; 13610 <table_get_default_compare_function_for_data_type@@Base+0x1c>
   13604:	add	r1, pc, r1
   13608:	ldr	r0, [r1, r0, lsl #2]
   1360c:	bx	lr
   13610:	andeq	r2, r1, r4, lsr #17

00013614 <table_get@@Base>:
   13614:	push	{fp, lr}
   13618:	mov	fp, sp
   1361c:	bl	149fc <table_get_cell_ptr@@Base>
   13620:	ldr	r0, [r0]
   13624:	pop	{fp, pc}

00013628 <table_get_bool@@Base>:
   13628:	push	{fp, lr}
   1362c:	mov	fp, sp
   13630:	bl	149fc <table_get_cell_ptr@@Base>
   13634:	ldr	r0, [r0]
   13638:	ldrb	r0, [r0]
   1363c:	pop	{fp, pc}

00013640 <table_get_int@@Base>:
   13640:	push	{fp, lr}
   13644:	mov	fp, sp
   13648:	bl	149fc <table_get_cell_ptr@@Base>
   1364c:	ldr	r0, [r0]
   13650:	ldr	r0, [r0]
   13654:	pop	{fp, pc}

00013658 <table_get_uint@@Base>:
   13658:	push	{fp, lr}
   1365c:	mov	fp, sp
   13660:	bl	149fc <table_get_cell_ptr@@Base>
   13664:	ldr	r0, [r0]
   13668:	ldr	r0, [r0]
   1366c:	pop	{fp, pc}

00013670 <table_get_int8@@Base>:
   13670:	push	{fp, lr}
   13674:	mov	fp, sp
   13678:	bl	149fc <table_get_cell_ptr@@Base>
   1367c:	ldr	r0, [r0]
   13680:	ldrsb	r0, [r0]
   13684:	pop	{fp, pc}

00013688 <table_get_uint8@@Base>:
   13688:	push	{fp, lr}
   1368c:	mov	fp, sp
   13690:	bl	149fc <table_get_cell_ptr@@Base>
   13694:	ldr	r0, [r0]
   13698:	ldrb	r0, [r0]
   1369c:	pop	{fp, pc}

000136a0 <table_get_int16@@Base>:
   136a0:	push	{fp, lr}
   136a4:	mov	fp, sp
   136a8:	bl	149fc <table_get_cell_ptr@@Base>
   136ac:	ldr	r0, [r0]
   136b0:	ldrsh	r0, [r0]
   136b4:	pop	{fp, pc}

000136b8 <table_get_uint16@@Base>:
   136b8:	push	{fp, lr}
   136bc:	mov	fp, sp
   136c0:	bl	149fc <table_get_cell_ptr@@Base>
   136c4:	ldr	r0, [r0]
   136c8:	ldrh	r0, [r0]
   136cc:	pop	{fp, pc}

000136d0 <table_get_int32@@Base>:
   136d0:	push	{fp, lr}
   136d4:	mov	fp, sp
   136d8:	bl	149fc <table_get_cell_ptr@@Base>
   136dc:	ldr	r0, [r0]
   136e0:	ldr	r0, [r0]
   136e4:	pop	{fp, pc}

000136e8 <table_get_uint32@@Base>:
   136e8:	push	{fp, lr}
   136ec:	mov	fp, sp
   136f0:	bl	149fc <table_get_cell_ptr@@Base>
   136f4:	ldr	r0, [r0]
   136f8:	ldr	r0, [r0]
   136fc:	pop	{fp, pc}

00013700 <table_get_int64@@Base>:
   13700:	push	{fp, lr}
   13704:	mov	fp, sp
   13708:	bl	149fc <table_get_cell_ptr@@Base>
   1370c:	ldr	r0, [r0]
   13710:	ldrd	r0, [r0]
   13714:	pop	{fp, pc}

00013718 <table_get_uint64@@Base>:
   13718:	push	{fp, lr}
   1371c:	mov	fp, sp
   13720:	bl	149fc <table_get_cell_ptr@@Base>
   13724:	ldr	r0, [r0]
   13728:	ldrd	r0, [r0]
   1372c:	pop	{fp, pc}

00013730 <table_get_short@@Base>:
   13730:	push	{fp, lr}
   13734:	mov	fp, sp
   13738:	bl	149fc <table_get_cell_ptr@@Base>
   1373c:	ldr	r0, [r0]
   13740:	ldrsh	r0, [r0]
   13744:	pop	{fp, pc}

00013748 <table_get_ushort@@Base>:
   13748:	push	{fp, lr}
   1374c:	mov	fp, sp
   13750:	bl	149fc <table_get_cell_ptr@@Base>
   13754:	ldr	r0, [r0]
   13758:	ldrh	r0, [r0]
   1375c:	pop	{fp, pc}

00013760 <table_get_long@@Base>:
   13760:	push	{fp, lr}
   13764:	mov	fp, sp
   13768:	bl	149fc <table_get_cell_ptr@@Base>
   1376c:	ldr	r0, [r0]
   13770:	ldr	r0, [r0]
   13774:	pop	{fp, pc}

00013778 <table_get_ulong@@Base>:
   13778:	push	{fp, lr}
   1377c:	mov	fp, sp
   13780:	bl	149fc <table_get_cell_ptr@@Base>
   13784:	ldr	r0, [r0]
   13788:	ldr	r0, [r0]
   1378c:	pop	{fp, pc}

00013790 <table_get_llong@@Base>:
   13790:	push	{fp, lr}
   13794:	mov	fp, sp
   13798:	bl	149fc <table_get_cell_ptr@@Base>
   1379c:	ldr	r0, [r0]
   137a0:	ldrd	r0, [r0]
   137a4:	pop	{fp, pc}

000137a8 <table_get_ullong@@Base>:
   137a8:	push	{fp, lr}
   137ac:	mov	fp, sp
   137b0:	bl	149fc <table_get_cell_ptr@@Base>
   137b4:	ldr	r0, [r0]
   137b8:	ldrd	r0, [r0]
   137bc:	pop	{fp, pc}

000137c0 <table_get_float@@Base>:
   137c0:	push	{fp, lr}
   137c4:	mov	fp, sp
   137c8:	bl	149fc <table_get_cell_ptr@@Base>
   137cc:	ldr	r0, [r0]
   137d0:	vldr	s0, [r0]
   137d4:	pop	{fp, pc}

000137d8 <table_get_double@@Base>:
   137d8:	push	{fp, lr}
   137dc:	mov	fp, sp
   137e0:	bl	149fc <table_get_cell_ptr@@Base>
   137e4:	ldr	r0, [r0]
   137e8:	vldr	d0, [r0]
   137ec:	pop	{fp, pc}

000137f0 <table_get_ldouble@@Base>:
   137f0:	push	{fp, lr}
   137f4:	mov	fp, sp
   137f8:	bl	149fc <table_get_cell_ptr@@Base>
   137fc:	ldr	r0, [r0]
   13800:	vldr	d0, [r0]
   13804:	pop	{fp, pc}

00013808 <table_get_char@@Base>:
   13808:	push	{fp, lr}
   1380c:	mov	fp, sp
   13810:	bl	149fc <table_get_cell_ptr@@Base>
   13814:	ldr	r0, [r0]
   13818:	ldrb	r0, [r0]
   1381c:	pop	{fp, pc}

00013820 <table_get_uchar@@Base>:
   13820:	push	{fp, lr}
   13824:	mov	fp, sp
   13828:	bl	149fc <table_get_cell_ptr@@Base>
   1382c:	ldr	r0, [r0]
   13830:	ldrb	r0, [r0]
   13834:	pop	{fp, pc}

00013838 <table_get_string@@Base>:
   13838:	push	{fp, lr}
   1383c:	mov	fp, sp
   13840:	bl	149fc <table_get_cell_ptr@@Base>
   13844:	ldr	r0, [r0]
   13848:	pop	{fp, pc}

0001384c <table_get_ptr@@Base>:
   1384c:	push	{fp, lr}
   13850:	mov	fp, sp
   13854:	bl	149fc <table_get_cell_ptr@@Base>
   13858:	ldr	r0, [r0]
   1385c:	pop	{fp, pc}

00013860 <table_row_init@@Base>:
   13860:	push	{r4, r5, fp, lr}
   13864:	add	fp, sp, #8
   13868:	mov	r4, r1
   1386c:	ldr	r1, [r0, #12]
   13870:	ldr	r5, [r0, #16]
   13874:	lsl	r0, r1, #2
   13878:	bl	11ecc <malloc@plt>
   1387c:	str	r0, [r5, r4, lsl #2]
   13880:	pop	{r4, r5, fp, pc}

00013884 <table_get_row_ptr@@Base>:
   13884:	ldr	r0, [r0, #16]
   13888:	add	r0, r0, r1, lsl #2
   1388c:	bx	lr

00013890 <table_row_destroy@@Base>:
   13890:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13894:	add	fp, sp, #24
   13898:	mov	r4, r1
   1389c:	mov	r5, r0
   138a0:	bl	12b4c <table_get_column_length@@Base>
   138a4:	ldr	r8, [r5, #16]
   138a8:	cmp	r0, #1
   138ac:	blt	138d4 <table_row_destroy@@Base+0x44>
   138b0:	mov	r6, r0
   138b4:	mov	r7, #0
   138b8:	mov	r0, r5
   138bc:	mov	r1, r4
   138c0:	mov	r2, r7
   138c4:	bl	14a18 <table_cell_destroy@@Base>
   138c8:	add	r7, r7, #1
   138cc:	cmp	r6, r7
   138d0:	bne	138b8 <table_row_destroy@@Base+0x28>
   138d4:	ldr	r0, [r8, r4, lsl #2]
   138d8:	cmp	r0, #0
   138dc:	beq	138e8 <table_row_destroy@@Base+0x58>
   138e0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   138e4:	b	11ea8 <free@plt>
   138e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000138ec <table_get_row_length@@Base>:
   138ec:	ldr	r0, [r0, #20]
   138f0:	bx	lr

000138f4 <table_add_row@@Base>:
   138f4:	push	{r4, r5, r6, r7, fp, lr}
   138f8:	add	fp, sp, #16
   138fc:	ldr	r5, [r0, #20]
   13900:	ldr	r1, [r0, #24]
   13904:	mov	r4, r0
   13908:	udiv	r0, r5, r1
   1390c:	mls	r0, r0, r1, r5
   13910:	cmp	r0, #0
   13914:	bne	13938 <table_add_row@@Base+0x44>
   13918:	ldr	r2, [r4, #28]
   1391c:	ldr	r0, [r4, #16]
   13920:	add	r1, r2, r1
   13924:	str	r1, [r4, #28]
   13928:	lsl	r1, r1, #2
   1392c:	bl	11eb4 <realloc@plt>
   13930:	str	r0, [r4, #16]
   13934:	ldr	r5, [r4, #20]
   13938:	mov	r0, r4
   1393c:	bl	12b4c <table_get_column_length@@Base>
   13940:	mov	r6, r0
   13944:	ldr	r0, [r4, #12]
   13948:	ldr	r7, [r4, #16]
   1394c:	lsl	r0, r0, #2
   13950:	bl	11ecc <malloc@plt>
   13954:	cmp	r6, #1
   13958:	str	r0, [r7, r5, lsl #2]
   1395c:	blt	13980 <table_add_row@@Base+0x8c>
   13960:	mov	r7, #0
   13964:	mov	r0, r4
   13968:	mov	r1, r5
   1396c:	mov	r2, r7
   13970:	bl	149dc <table_cell_init@@Base>
   13974:	add	r7, r7, #1
   13978:	cmp	r6, r7
   1397c:	bne	13964 <table_add_row@@Base+0x70>
   13980:	ldr	r1, [r4, #20]
   13984:	mov	r0, r4
   13988:	mvn	r2, #0
   1398c:	mov	r3, #2
   13990:	bl	12a50 <table_notify@@Base>
   13994:	ldr	r0, [r4, #20]
   13998:	add	r1, r0, #1
   1399c:	str	r1, [r4, #20]
   139a0:	pop	{r4, r5, r6, r7, fp, pc}

000139a4 <table_remove_row@@Base>:
   139a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   139a8:	add	fp, sp, #24
   139ac:	ldr	r8, [r0, #20]
   139b0:	mov	r4, r1
   139b4:	mov	r5, r0
   139b8:	bl	12b4c <table_get_column_length@@Base>
   139bc:	cmp	r0, #1
   139c0:	blt	13a14 <table_remove_row@@Base+0x70>
   139c4:	mov	r6, r0
   139c8:	mov	r7, #0
   139cc:	b	139dc <table_remove_row@@Base+0x38>
   139d0:	add	r7, r7, #1
   139d4:	cmp	r6, r7
   139d8:	beq	13a14 <table_remove_row@@Base+0x70>
   139dc:	mov	r0, r5
   139e0:	mov	r1, r7
   139e4:	bl	12bc4 <table_get_column_data_type@@Base>
   139e8:	cmp	r0, #23
   139ec:	beq	139d0 <table_remove_row@@Base+0x2c>
   139f0:	mov	r0, r5
   139f4:	mov	r1, r4
   139f8:	mov	r2, r7
   139fc:	bl	149fc <table_get_cell_ptr@@Base>
   13a00:	ldr	r0, [r0]
   13a04:	cmp	r0, #0
   13a08:	beq	139d0 <table_remove_row@@Base+0x2c>
   13a0c:	bl	11ea8 <free@plt>
   13a10:	b	139d0 <table_remove_row@@Base+0x2c>
   13a14:	ldr	r0, [r5, #16]
   13a18:	ldr	r0, [r0, r4, lsl #2]
   13a1c:	cmp	r0, #0
   13a20:	beq	13a28 <table_remove_row@@Base+0x84>
   13a24:	bl	11ea8 <free@plt>
   13a28:	sub	r0, r8, #1
   13a2c:	cmp	r0, r4
   13a30:	ble	13aa0 <table_remove_row@@Base+0xfc>
   13a34:	mvn	r0, r4
   13a38:	add	r1, r8, r0
   13a3c:	sub	r0, r8, #2
   13a40:	tst	r1, #1
   13a44:	mov	r1, r4
   13a48:	beq	13a60 <table_remove_row@@Base+0xbc>
   13a4c:	ldr	r1, [r5, #16]
   13a50:	add	r2, r1, r4, lsl #2
   13a54:	ldr	r2, [r2, #4]
   13a58:	str	r2, [r1, r4, lsl #2]
   13a5c:	add	r1, r4, #1
   13a60:	cmp	r0, r4
   13a64:	beq	13aa0 <table_remove_row@@Base+0xfc>
   13a68:	mvn	r0, r1
   13a6c:	lsl	r1, r1, #2
   13a70:	add	r0, r0, r8
   13a74:	ldr	r2, [r5, #16]
   13a78:	subs	r0, r0, #2
   13a7c:	add	r3, r2, r1
   13a80:	ldr	r3, [r3, #4]
   13a84:	str	r3, [r2, r1]
   13a88:	ldr	r2, [r5, #16]
   13a8c:	add	r2, r2, r1
   13a90:	add	r1, r1, #8
   13a94:	ldr	r3, [r2, #8]
   13a98:	str	r3, [r2, #4]
   13a9c:	bne	13a74 <table_remove_row@@Base+0xd0>
   13aa0:	ldr	r0, [r5, #20]
   13aa4:	ldr	r1, [r5, #24]
   13aa8:	sub	r0, r0, #1
   13aac:	udiv	r2, r0, r1
   13ab0:	str	r0, [r5, #20]
   13ab4:	mls	r0, r2, r1, r0
   13ab8:	cmp	r0, #0
   13abc:	bne	13adc <table_remove_row@@Base+0x138>
   13ac0:	ldr	r2, [r5, #28]
   13ac4:	ldr	r0, [r5, #16]
   13ac8:	sub	r1, r2, r1
   13acc:	str	r1, [r5, #28]
   13ad0:	lsl	r1, r1, #2
   13ad4:	bl	11eb4 <realloc@plt>
   13ad8:	str	r0, [r5, #16]
   13adc:	mov	r0, r5
   13ae0:	mov	r1, r4
   13ae4:	mvn	r2, #0
   13ae8:	mov	r3, #4
   13aec:	bl	12a50 <table_notify@@Base>
   13af0:	mov	r0, #0
   13af4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013af8 <table_set_row_ptr@@Base>:
   13af8:	ldr	r2, [r2]
   13afc:	ldr	r0, [r0, #16]
   13b00:	str	r2, [r0, r1, lsl #2]
   13b04:	bx	lr

00013b08 <table_set@@Base>:
   13b08:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13b0c:	add	fp, sp, #24
   13b10:	mov	r8, r3
   13b14:	mov	r4, r2
   13b18:	mov	r9, r1
   13b1c:	mov	r6, r0
   13b20:	bl	149fc <table_get_cell_ptr@@Base>
   13b24:	mov	r5, r0
   13b28:	mov	r0, r6
   13b2c:	mov	r1, r4
   13b30:	bl	12b24 <table_get_col_ptr@@Base>
   13b34:	ldr	r1, [fp, #8]
   13b38:	mvn	r7, #0
   13b3c:	cmp	r1, #23
   13b40:	bhi	13e08 <table_set@@Base+0x300>
   13b44:	add	r2, pc, #4
   13b48:	ldr	r1, [r2, r1, lsl #2]
   13b4c:	add	pc, r2, r1
   13b50:	andeq	r0, r0, r0, rrx
   13b54:	andeq	r0, r0, r0, ror r0
   13b58:	andeq	r0, r0, r0, lsl #1
   13b5c:	muleq	r0, r0, r0
   13b60:	andeq	r0, r0, r0, lsr #1
   13b64:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   13b68:	andeq	r0, r0, r0, asr #1
   13b6c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13b70:	andeq	r0, r0, r0, ror #1
   13b74:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13b78:	andeq	r0, r0, r0, lsl #2
   13b7c:	andeq	r0, r0, r0, lsl r1
   13b80:	andeq	r0, r0, r8, asr #2
   13b84:	andeq	r0, r0, r8, asr r1
   13b88:	andeq	r0, r0, r8, ror #2
   13b8c:	andeq	r0, r0, r8, ror r1
   13b90:	andeq	r0, r0, r8, lsl #3
   13b94:	andeq	r0, r0, r0, asr #3
   13b98:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13b9c:	andeq	r0, r0, r0, lsl r2
   13ba0:	andeq	r0, r0, r0, lsr #4
   13ba4:	andeq	r0, r0, r0, lsr r2
   13ba8:	andeq	r0, r0, ip, ror #4
   13bac:	andeq	r0, r0, r0, asr #5
   13bb0:	ldr	r0, [r0, #4]
   13bb4:	cmp	r0, #0
   13bb8:	bne	13e08 <table_set@@Base+0x300>
   13bbc:	b	13ce4 <table_set@@Base+0x1dc>
   13bc0:	ldr	r0, [r0, #4]
   13bc4:	cmp	r0, #1
   13bc8:	beq	13ce4 <table_set@@Base+0x1dc>
   13bcc:	b	13e08 <table_set@@Base+0x300>
   13bd0:	ldr	r0, [r0, #4]
   13bd4:	cmp	r0, #2
   13bd8:	beq	13dc8 <table_set@@Base+0x2c0>
   13bdc:	b	13e08 <table_set@@Base+0x300>
   13be0:	ldr	r0, [r0, #4]
   13be4:	cmp	r0, #3
   13be8:	beq	13dc8 <table_set@@Base+0x2c0>
   13bec:	b	13e08 <table_set@@Base+0x300>
   13bf0:	ldr	r0, [r0, #4]
   13bf4:	cmp	r0, #4
   13bf8:	beq	13c6c <table_set@@Base+0x164>
   13bfc:	b	13e08 <table_set@@Base+0x300>
   13c00:	ldr	r0, [r0, #4]
   13c04:	cmp	r0, #5
   13c08:	beq	13c6c <table_set@@Base+0x164>
   13c0c:	b	13e08 <table_set@@Base+0x300>
   13c10:	ldr	r0, [r0, #4]
   13c14:	cmp	r0, #6
   13c18:	beq	13ce4 <table_set@@Base+0x1dc>
   13c1c:	b	13e08 <table_set@@Base+0x300>
   13c20:	ldr	r0, [r0, #4]
   13c24:	cmp	r0, #7
   13c28:	beq	13ce4 <table_set@@Base+0x1dc>
   13c2c:	b	13e08 <table_set@@Base+0x300>
   13c30:	ldr	r0, [r0, #4]
   13c34:	cmp	r0, #8
   13c38:	beq	13d2c <table_set@@Base+0x224>
   13c3c:	b	13e08 <table_set@@Base+0x300>
   13c40:	ldr	r0, [r0, #4]
   13c44:	cmp	r0, #9
   13c48:	beq	13d2c <table_set@@Base+0x224>
   13c4c:	b	13e08 <table_set@@Base+0x300>
   13c50:	ldr	r0, [r0, #4]
   13c54:	cmp	r0, #10
   13c58:	beq	13c6c <table_set@@Base+0x164>
   13c5c:	b	13e08 <table_set@@Base+0x300>
   13c60:	ldr	r0, [r0, #4]
   13c64:	cmp	r0, #11
   13c68:	bne	13e08 <table_set@@Base+0x300>
   13c6c:	ldr	r0, [r5]
   13c70:	cmp	r0, #0
   13c74:	bne	13c8c <table_set@@Base+0x184>
   13c78:	mov	r0, #2
   13c7c:	bl	11ecc <malloc@plt>
   13c80:	cmp	r0, #0
   13c84:	str	r0, [r5]
   13c88:	beq	13e08 <table_set@@Base+0x300>
   13c8c:	ldrh	r1, [r8]
   13c90:	strh	r1, [r0]
   13c94:	b	13df0 <table_set@@Base+0x2e8>
   13c98:	ldr	r0, [r0, #4]
   13c9c:	cmp	r0, #12
   13ca0:	beq	13ce4 <table_set@@Base+0x1dc>
   13ca4:	b	13e08 <table_set@@Base+0x300>
   13ca8:	ldr	r0, [r0, #4]
   13cac:	cmp	r0, #13
   13cb0:	beq	13ce4 <table_set@@Base+0x1dc>
   13cb4:	b	13e08 <table_set@@Base+0x300>
   13cb8:	ldr	r0, [r0, #4]
   13cbc:	cmp	r0, #14
   13cc0:	beq	13d2c <table_set@@Base+0x224>
   13cc4:	b	13e08 <table_set@@Base+0x300>
   13cc8:	ldr	r0, [r0, #4]
   13ccc:	cmp	r0, #15
   13cd0:	beq	13d2c <table_set@@Base+0x224>
   13cd4:	b	13e08 <table_set@@Base+0x300>
   13cd8:	ldr	r0, [r0, #4]
   13cdc:	cmp	r0, #16
   13ce0:	bne	13e08 <table_set@@Base+0x300>
   13ce4:	ldr	r0, [r5]
   13ce8:	cmp	r0, #0
   13cec:	bne	13d04 <table_set@@Base+0x1fc>
   13cf0:	mov	r0, #4
   13cf4:	bl	11ecc <malloc@plt>
   13cf8:	cmp	r0, #0
   13cfc:	str	r0, [r5]
   13d00:	beq	13e08 <table_set@@Base+0x300>
   13d04:	ldr	r1, [r8]
   13d08:	str	r1, [r0]
   13d0c:	b	13df0 <table_set@@Base+0x2e8>
   13d10:	ldr	r0, [r0, #4]
   13d14:	cmp	r0, #17
   13d18:	beq	13d2c <table_set@@Base+0x224>
   13d1c:	b	13e08 <table_set@@Base+0x300>
   13d20:	ldr	r0, [r0, #4]
   13d24:	cmp	r0, #18
   13d28:	bne	13e08 <table_set@@Base+0x300>
   13d2c:	ldr	r0, [r5]
   13d30:	cmp	r0, #0
   13d34:	bne	13d4c <table_set@@Base+0x244>
   13d38:	mov	r0, #8
   13d3c:	bl	11ecc <malloc@plt>
   13d40:	cmp	r0, #0
   13d44:	str	r0, [r5]
   13d48:	beq	13e08 <table_set@@Base+0x300>
   13d4c:	ldr	r1, [r8]
   13d50:	ldr	r2, [r8, #4]
   13d54:	str	r2, [r0, #4]
   13d58:	str	r1, [r0]
   13d5c:	b	13df0 <table_set@@Base+0x2e8>
   13d60:	ldr	r0, [r0, #4]
   13d64:	cmp	r0, #19
   13d68:	beq	13dc8 <table_set@@Base+0x2c0>
   13d6c:	b	13e08 <table_set@@Base+0x300>
   13d70:	ldr	r0, [r0, #4]
   13d74:	cmp	r0, #20
   13d78:	beq	13dc8 <table_set@@Base+0x2c0>
   13d7c:	b	13e08 <table_set@@Base+0x300>
   13d80:	ldr	r0, [r0, #4]
   13d84:	cmp	r0, #21
   13d88:	bne	13e08 <table_set@@Base+0x300>
   13d8c:	mov	r0, r8
   13d90:	bl	11ef0 <strlen@plt>
   13d94:	ldr	r2, [r5]
   13d98:	add	r1, r0, #1
   13d9c:	mov	r0, r2
   13da0:	bl	11eb4 <realloc@plt>
   13da4:	cmp	r0, #0
   13da8:	str	r0, [r5]
   13dac:	beq	13e08 <table_set@@Base+0x300>
   13db0:	mov	r1, r8
   13db4:	bl	11ec0 <strcpy@plt>
   13db8:	b	13df0 <table_set@@Base+0x2e8>
   13dbc:	ldr	r0, [r0, #4]
   13dc0:	cmp	r0, #22
   13dc4:	bne	13e08 <table_set@@Base+0x300>
   13dc8:	ldr	r0, [r5]
   13dcc:	cmp	r0, #0
   13dd0:	bne	13de8 <table_set@@Base+0x2e0>
   13dd4:	mov	r0, #1
   13dd8:	bl	11ecc <malloc@plt>
   13ddc:	cmp	r0, #0
   13de0:	str	r0, [r5]
   13de4:	beq	13e08 <table_set@@Base+0x300>
   13de8:	ldrb	r1, [r8]
   13dec:	strb	r1, [r0]
   13df0:	mov	r0, r6
   13df4:	mov	r1, r9
   13df8:	mov	r2, r4
   13dfc:	mov	r3, #1
   13e00:	bl	12a50 <table_notify@@Base>
   13e04:	mov	r7, #0
   13e08:	mov	r0, r7
   13e0c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13e10:	ldr	r0, [r0, #4]
   13e14:	cmp	r0, #23
   13e18:	bne	13e08 <table_set@@Base+0x300>
   13e1c:	str	r8, [r5]
   13e20:	b	13df0 <table_set@@Base+0x2e8>

00013e24 <table_set_bool@@Base>:
   13e24:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13e28:	add	fp, sp, #24
   13e2c:	mov	r8, r3
   13e30:	mov	r4, r2
   13e34:	mov	r9, r1
   13e38:	mov	r6, r0
   13e3c:	bl	149fc <table_get_cell_ptr@@Base>
   13e40:	mov	r5, r0
   13e44:	mov	r0, r6
   13e48:	mov	r1, r4
   13e4c:	bl	12b24 <table_get_col_ptr@@Base>
   13e50:	ldr	r0, [r0, #4]
   13e54:	mvn	r7, #0
   13e58:	cmp	r0, #22
   13e5c:	bne	13e9c <table_set_bool@@Base+0x78>
   13e60:	ldr	r0, [r5]
   13e64:	cmp	r0, #0
   13e68:	bne	13e80 <table_set_bool@@Base+0x5c>
   13e6c:	mov	r0, #1
   13e70:	bl	11ecc <malloc@plt>
   13e74:	cmp	r0, #0
   13e78:	str	r0, [r5]
   13e7c:	beq	13e9c <table_set_bool@@Base+0x78>
   13e80:	strb	r8, [r0]
   13e84:	mov	r0, r6
   13e88:	mov	r1, r9
   13e8c:	mov	r2, r4
   13e90:	mov	r3, #1
   13e94:	bl	12a50 <table_notify@@Base>
   13e98:	mov	r7, #0
   13e9c:	mov	r0, r7
   13ea0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013ea4 <table_set_int@@Base>:
   13ea4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13ea8:	add	fp, sp, #24
   13eac:	mov	r8, r3
   13eb0:	mov	r4, r2
   13eb4:	mov	r5, r1
   13eb8:	mov	r6, r0
   13ebc:	bl	149fc <table_get_cell_ptr@@Base>
   13ec0:	mov	r9, r0
   13ec4:	mov	r0, r6
   13ec8:	mov	r1, r4
   13ecc:	bl	12b24 <table_get_col_ptr@@Base>
   13ed0:	ldr	r0, [r0, #4]
   13ed4:	mvn	r7, #0
   13ed8:	cmp	r0, #0
   13edc:	bne	13f1c <table_set_int@@Base+0x78>
   13ee0:	ldr	r0, [r9]
   13ee4:	cmp	r0, #0
   13ee8:	bne	13f00 <table_set_int@@Base+0x5c>
   13eec:	mov	r0, #4
   13ef0:	bl	11ecc <malloc@plt>
   13ef4:	cmp	r0, #0
   13ef8:	str	r0, [r9]
   13efc:	beq	13f1c <table_set_int@@Base+0x78>
   13f00:	str	r8, [r0]
   13f04:	mov	r0, r6
   13f08:	mov	r1, r5
   13f0c:	mov	r2, r4
   13f10:	mov	r3, #1
   13f14:	bl	12a50 <table_notify@@Base>
   13f18:	mov	r7, #0
   13f1c:	mov	r0, r7
   13f20:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013f24 <table_set_uint@@Base>:
   13f24:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13f28:	add	fp, sp, #24
   13f2c:	mov	r8, r3
   13f30:	mov	r4, r2
   13f34:	mov	r5, r1
   13f38:	mov	r6, r0
   13f3c:	bl	149fc <table_get_cell_ptr@@Base>
   13f40:	mov	r9, r0
   13f44:	mov	r0, r6
   13f48:	mov	r1, r4
   13f4c:	bl	12b24 <table_get_col_ptr@@Base>
   13f50:	ldr	r0, [r0, #4]
   13f54:	mvn	r7, #0
   13f58:	cmp	r0, #1
   13f5c:	bne	13f9c <table_set_uint@@Base+0x78>
   13f60:	ldr	r0, [r9]
   13f64:	cmp	r0, #0
   13f68:	bne	13f80 <table_set_uint@@Base+0x5c>
   13f6c:	mov	r0, #4
   13f70:	bl	11ecc <malloc@plt>
   13f74:	cmp	r0, #0
   13f78:	str	r0, [r9]
   13f7c:	beq	13f9c <table_set_uint@@Base+0x78>
   13f80:	str	r8, [r0]
   13f84:	mov	r0, r6
   13f88:	mov	r1, r5
   13f8c:	mov	r2, r4
   13f90:	mov	r3, #1
   13f94:	bl	12a50 <table_notify@@Base>
   13f98:	mov	r7, #0
   13f9c:	mov	r0, r7
   13fa0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013fa4 <table_set_int8@@Base>:
   13fa4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13fa8:	add	fp, sp, #24
   13fac:	mov	r8, r3
   13fb0:	mov	r4, r2
   13fb4:	mov	r9, r1
   13fb8:	mov	r6, r0
   13fbc:	bl	149fc <table_get_cell_ptr@@Base>
   13fc0:	mov	r5, r0
   13fc4:	mov	r0, r6
   13fc8:	mov	r1, r4
   13fcc:	bl	12b24 <table_get_col_ptr@@Base>
   13fd0:	ldr	r0, [r0, #4]
   13fd4:	mvn	r7, #0
   13fd8:	cmp	r0, #2
   13fdc:	bne	1401c <table_set_int8@@Base+0x78>
   13fe0:	ldr	r0, [r5]
   13fe4:	cmp	r0, #0
   13fe8:	bne	14000 <table_set_int8@@Base+0x5c>
   13fec:	mov	r0, #1
   13ff0:	bl	11ecc <malloc@plt>
   13ff4:	cmp	r0, #0
   13ff8:	str	r0, [r5]
   13ffc:	beq	1401c <table_set_int8@@Base+0x78>
   14000:	strb	r8, [r0]
   14004:	mov	r0, r6
   14008:	mov	r1, r9
   1400c:	mov	r2, r4
   14010:	mov	r3, #1
   14014:	bl	12a50 <table_notify@@Base>
   14018:	mov	r7, #0
   1401c:	mov	r0, r7
   14020:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014024 <table_set_uint8@@Base>:
   14024:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14028:	add	fp, sp, #24
   1402c:	mov	r8, r3
   14030:	mov	r4, r2
   14034:	mov	r9, r1
   14038:	mov	r6, r0
   1403c:	bl	149fc <table_get_cell_ptr@@Base>
   14040:	mov	r5, r0
   14044:	mov	r0, r6
   14048:	mov	r1, r4
   1404c:	bl	12b24 <table_get_col_ptr@@Base>
   14050:	ldr	r0, [r0, #4]
   14054:	mvn	r7, #0
   14058:	cmp	r0, #3
   1405c:	bne	1409c <table_set_uint8@@Base+0x78>
   14060:	ldr	r0, [r5]
   14064:	cmp	r0, #0
   14068:	bne	14080 <table_set_uint8@@Base+0x5c>
   1406c:	mov	r0, #1
   14070:	bl	11ecc <malloc@plt>
   14074:	cmp	r0, #0
   14078:	str	r0, [r5]
   1407c:	beq	1409c <table_set_uint8@@Base+0x78>
   14080:	strb	r8, [r0]
   14084:	mov	r0, r6
   14088:	mov	r1, r9
   1408c:	mov	r2, r4
   14090:	mov	r3, #1
   14094:	bl	12a50 <table_notify@@Base>
   14098:	mov	r7, #0
   1409c:	mov	r0, r7
   140a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000140a4 <table_set_int16@@Base>:
   140a4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   140a8:	add	fp, sp, #24
   140ac:	mov	r8, r3
   140b0:	mov	r4, r2
   140b4:	mov	r9, r1
   140b8:	mov	r6, r0
   140bc:	bl	149fc <table_get_cell_ptr@@Base>
   140c0:	mov	r5, r0
   140c4:	mov	r0, r6
   140c8:	mov	r1, r4
   140cc:	bl	12b24 <table_get_col_ptr@@Base>
   140d0:	ldr	r0, [r0, #4]
   140d4:	mvn	r7, #0
   140d8:	cmp	r0, #4
   140dc:	bne	1411c <table_set_int16@@Base+0x78>
   140e0:	ldr	r0, [r5]
   140e4:	cmp	r0, #0
   140e8:	bne	14100 <table_set_int16@@Base+0x5c>
   140ec:	mov	r0, #2
   140f0:	bl	11ecc <malloc@plt>
   140f4:	cmp	r0, #0
   140f8:	str	r0, [r5]
   140fc:	beq	1411c <table_set_int16@@Base+0x78>
   14100:	strh	r8, [r0]
   14104:	mov	r0, r6
   14108:	mov	r1, r9
   1410c:	mov	r2, r4
   14110:	mov	r3, #1
   14114:	bl	12a50 <table_notify@@Base>
   14118:	mov	r7, #0
   1411c:	mov	r0, r7
   14120:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014124 <table_set_uint16@@Base>:
   14124:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14128:	add	fp, sp, #24
   1412c:	mov	r8, r3
   14130:	mov	r4, r2
   14134:	mov	r9, r1
   14138:	mov	r6, r0
   1413c:	bl	149fc <table_get_cell_ptr@@Base>
   14140:	mov	r5, r0
   14144:	mov	r0, r6
   14148:	mov	r1, r4
   1414c:	bl	12b24 <table_get_col_ptr@@Base>
   14150:	ldr	r0, [r0, #4]
   14154:	mvn	r7, #0
   14158:	cmp	r0, #5
   1415c:	bne	1419c <table_set_uint16@@Base+0x78>
   14160:	ldr	r0, [r5]
   14164:	cmp	r0, #0
   14168:	bne	14180 <table_set_uint16@@Base+0x5c>
   1416c:	mov	r0, #2
   14170:	bl	11ecc <malloc@plt>
   14174:	cmp	r0, #0
   14178:	str	r0, [r5]
   1417c:	beq	1419c <table_set_uint16@@Base+0x78>
   14180:	strh	r8, [r0]
   14184:	mov	r0, r6
   14188:	mov	r1, r9
   1418c:	mov	r2, r4
   14190:	mov	r3, #1
   14194:	bl	12a50 <table_notify@@Base>
   14198:	mov	r7, #0
   1419c:	mov	r0, r7
   141a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000141a4 <table_set_int32@@Base>:
   141a4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   141a8:	add	fp, sp, #24
   141ac:	mov	r8, r3
   141b0:	mov	r4, r2
   141b4:	mov	r5, r1
   141b8:	mov	r6, r0
   141bc:	bl	149fc <table_get_cell_ptr@@Base>
   141c0:	mov	r9, r0
   141c4:	mov	r0, r6
   141c8:	mov	r1, r4
   141cc:	bl	12b24 <table_get_col_ptr@@Base>
   141d0:	ldr	r0, [r0, #4]
   141d4:	mvn	r7, #0
   141d8:	cmp	r0, #6
   141dc:	bne	1421c <table_set_int32@@Base+0x78>
   141e0:	ldr	r0, [r9]
   141e4:	cmp	r0, #0
   141e8:	bne	14200 <table_set_int32@@Base+0x5c>
   141ec:	mov	r0, #4
   141f0:	bl	11ecc <malloc@plt>
   141f4:	cmp	r0, #0
   141f8:	str	r0, [r9]
   141fc:	beq	1421c <table_set_int32@@Base+0x78>
   14200:	str	r8, [r0]
   14204:	mov	r0, r6
   14208:	mov	r1, r5
   1420c:	mov	r2, r4
   14210:	mov	r3, #1
   14214:	bl	12a50 <table_notify@@Base>
   14218:	mov	r7, #0
   1421c:	mov	r0, r7
   14220:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014224 <table_set_uint32@@Base>:
   14224:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14228:	add	fp, sp, #24
   1422c:	mov	r8, r3
   14230:	mov	r4, r2
   14234:	mov	r5, r1
   14238:	mov	r6, r0
   1423c:	bl	149fc <table_get_cell_ptr@@Base>
   14240:	mov	r9, r0
   14244:	mov	r0, r6
   14248:	mov	r1, r4
   1424c:	bl	12b24 <table_get_col_ptr@@Base>
   14250:	ldr	r0, [r0, #4]
   14254:	mvn	r7, #0
   14258:	cmp	r0, #7
   1425c:	bne	1429c <table_set_uint32@@Base+0x78>
   14260:	ldr	r0, [r9]
   14264:	cmp	r0, #0
   14268:	bne	14280 <table_set_uint32@@Base+0x5c>
   1426c:	mov	r0, #4
   14270:	bl	11ecc <malloc@plt>
   14274:	cmp	r0, #0
   14278:	str	r0, [r9]
   1427c:	beq	1429c <table_set_uint32@@Base+0x78>
   14280:	str	r8, [r0]
   14284:	mov	r0, r6
   14288:	mov	r1, r5
   1428c:	mov	r2, r4
   14290:	mov	r3, #1
   14294:	bl	12a50 <table_notify@@Base>
   14298:	mov	r7, #0
   1429c:	mov	r0, r7
   142a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000142a4 <table_set_int64@@Base>:
   142a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   142a8:	add	fp, sp, #24
   142ac:	mov	r4, r2
   142b0:	mov	r8, r1
   142b4:	mov	r6, r0
   142b8:	bl	149fc <table_get_cell_ptr@@Base>
   142bc:	mov	r5, r0
   142c0:	mov	r0, r6
   142c4:	mov	r1, r4
   142c8:	bl	12b24 <table_get_col_ptr@@Base>
   142cc:	ldr	r0, [r0, #4]
   142d0:	mvn	r7, #0
   142d4:	cmp	r0, #8
   142d8:	bne	14324 <table_set_int64@@Base+0x80>
   142dc:	ldr	r0, [r5]
   142e0:	cmp	r0, #0
   142e4:	bne	142fc <table_set_int64@@Base+0x58>
   142e8:	mov	r0, #8
   142ec:	bl	11ecc <malloc@plt>
   142f0:	cmp	r0, #0
   142f4:	str	r0, [r5]
   142f8:	beq	14324 <table_set_int64@@Base+0x80>
   142fc:	ldr	r1, [fp, #12]
   14300:	ldr	r2, [fp, #8]
   14304:	mov	r3, #1
   14308:	str	r2, [r0]
   1430c:	str	r1, [r0, #4]
   14310:	mov	r0, r6
   14314:	mov	r1, r8
   14318:	mov	r2, r4
   1431c:	bl	12a50 <table_notify@@Base>
   14320:	mov	r7, #0
   14324:	mov	r0, r7
   14328:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001432c <table_set_uint64@@Base>:
   1432c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14330:	add	fp, sp, #24
   14334:	mov	r4, r2
   14338:	mov	r8, r1
   1433c:	mov	r6, r0
   14340:	bl	149fc <table_get_cell_ptr@@Base>
   14344:	mov	r5, r0
   14348:	mov	r0, r6
   1434c:	mov	r1, r4
   14350:	bl	12b24 <table_get_col_ptr@@Base>
   14354:	ldr	r0, [r0, #4]
   14358:	mvn	r7, #0
   1435c:	cmp	r0, #9
   14360:	bne	143ac <table_set_uint64@@Base+0x80>
   14364:	ldr	r0, [r5]
   14368:	cmp	r0, #0
   1436c:	bne	14384 <table_set_uint64@@Base+0x58>
   14370:	mov	r0, #8
   14374:	bl	11ecc <malloc@plt>
   14378:	cmp	r0, #0
   1437c:	str	r0, [r5]
   14380:	beq	143ac <table_set_uint64@@Base+0x80>
   14384:	ldr	r1, [fp, #12]
   14388:	ldr	r2, [fp, #8]
   1438c:	mov	r3, #1
   14390:	str	r2, [r0]
   14394:	str	r1, [r0, #4]
   14398:	mov	r0, r6
   1439c:	mov	r1, r8
   143a0:	mov	r2, r4
   143a4:	bl	12a50 <table_notify@@Base>
   143a8:	mov	r7, #0
   143ac:	mov	r0, r7
   143b0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000143b4 <table_set_short@@Base>:
   143b4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   143b8:	add	fp, sp, #24
   143bc:	mov	r8, r3
   143c0:	mov	r4, r2
   143c4:	mov	r9, r1
   143c8:	mov	r6, r0
   143cc:	bl	149fc <table_get_cell_ptr@@Base>
   143d0:	mov	r5, r0
   143d4:	mov	r0, r6
   143d8:	mov	r1, r4
   143dc:	bl	12b24 <table_get_col_ptr@@Base>
   143e0:	ldr	r0, [r0, #4]
   143e4:	mvn	r7, #0
   143e8:	cmp	r0, #10
   143ec:	bne	1442c <table_set_short@@Base+0x78>
   143f0:	ldr	r0, [r5]
   143f4:	cmp	r0, #0
   143f8:	bne	14410 <table_set_short@@Base+0x5c>
   143fc:	mov	r0, #2
   14400:	bl	11ecc <malloc@plt>
   14404:	cmp	r0, #0
   14408:	str	r0, [r5]
   1440c:	beq	1442c <table_set_short@@Base+0x78>
   14410:	strh	r8, [r0]
   14414:	mov	r0, r6
   14418:	mov	r1, r9
   1441c:	mov	r2, r4
   14420:	mov	r3, #1
   14424:	bl	12a50 <table_notify@@Base>
   14428:	mov	r7, #0
   1442c:	mov	r0, r7
   14430:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014434 <table_set_ushort@@Base>:
   14434:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14438:	add	fp, sp, #24
   1443c:	mov	r8, r3
   14440:	mov	r4, r2
   14444:	mov	r9, r1
   14448:	mov	r6, r0
   1444c:	bl	149fc <table_get_cell_ptr@@Base>
   14450:	mov	r5, r0
   14454:	mov	r0, r6
   14458:	mov	r1, r4
   1445c:	bl	12b24 <table_get_col_ptr@@Base>
   14460:	ldr	r0, [r0, #4]
   14464:	mvn	r7, #0
   14468:	cmp	r0, #11
   1446c:	bne	144ac <table_set_ushort@@Base+0x78>
   14470:	ldr	r0, [r5]
   14474:	cmp	r0, #0
   14478:	bne	14490 <table_set_ushort@@Base+0x5c>
   1447c:	mov	r0, #2
   14480:	bl	11ecc <malloc@plt>
   14484:	cmp	r0, #0
   14488:	str	r0, [r5]
   1448c:	beq	144ac <table_set_ushort@@Base+0x78>
   14490:	strh	r8, [r0]
   14494:	mov	r0, r6
   14498:	mov	r1, r9
   1449c:	mov	r2, r4
   144a0:	mov	r3, #1
   144a4:	bl	12a50 <table_notify@@Base>
   144a8:	mov	r7, #0
   144ac:	mov	r0, r7
   144b0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000144b4 <table_set_long@@Base>:
   144b4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   144b8:	add	fp, sp, #24
   144bc:	mov	r8, r3
   144c0:	mov	r4, r2
   144c4:	mov	r5, r1
   144c8:	mov	r6, r0
   144cc:	bl	149fc <table_get_cell_ptr@@Base>
   144d0:	mov	r9, r0
   144d4:	mov	r0, r6
   144d8:	mov	r1, r4
   144dc:	bl	12b24 <table_get_col_ptr@@Base>
   144e0:	ldr	r0, [r0, #4]
   144e4:	mvn	r7, #0
   144e8:	cmp	r0, #12
   144ec:	bne	1452c <table_set_long@@Base+0x78>
   144f0:	ldr	r0, [r9]
   144f4:	cmp	r0, #0
   144f8:	bne	14510 <table_set_long@@Base+0x5c>
   144fc:	mov	r0, #4
   14500:	bl	11ecc <malloc@plt>
   14504:	cmp	r0, #0
   14508:	str	r0, [r9]
   1450c:	beq	1452c <table_set_long@@Base+0x78>
   14510:	str	r8, [r0]
   14514:	mov	r0, r6
   14518:	mov	r1, r5
   1451c:	mov	r2, r4
   14520:	mov	r3, #1
   14524:	bl	12a50 <table_notify@@Base>
   14528:	mov	r7, #0
   1452c:	mov	r0, r7
   14530:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014534 <table_set_ulong@@Base>:
   14534:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14538:	add	fp, sp, #24
   1453c:	mov	r8, r3
   14540:	mov	r4, r2
   14544:	mov	r5, r1
   14548:	mov	r6, r0
   1454c:	bl	149fc <table_get_cell_ptr@@Base>
   14550:	mov	r9, r0
   14554:	mov	r0, r6
   14558:	mov	r1, r4
   1455c:	bl	12b24 <table_get_col_ptr@@Base>
   14560:	ldr	r0, [r0, #4]
   14564:	mvn	r7, #0
   14568:	cmp	r0, #13
   1456c:	bne	145ac <table_set_ulong@@Base+0x78>
   14570:	ldr	r0, [r9]
   14574:	cmp	r0, #0
   14578:	bne	14590 <table_set_ulong@@Base+0x5c>
   1457c:	mov	r0, #4
   14580:	bl	11ecc <malloc@plt>
   14584:	cmp	r0, #0
   14588:	str	r0, [r9]
   1458c:	beq	145ac <table_set_ulong@@Base+0x78>
   14590:	str	r8, [r0]
   14594:	mov	r0, r6
   14598:	mov	r1, r5
   1459c:	mov	r2, r4
   145a0:	mov	r3, #1
   145a4:	bl	12a50 <table_notify@@Base>
   145a8:	mov	r7, #0
   145ac:	mov	r0, r7
   145b0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000145b4 <table_set_llong@@Base>:
   145b4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   145b8:	add	fp, sp, #24
   145bc:	mov	r4, r2
   145c0:	mov	r8, r1
   145c4:	mov	r6, r0
   145c8:	bl	149fc <table_get_cell_ptr@@Base>
   145cc:	mov	r5, r0
   145d0:	mov	r0, r6
   145d4:	mov	r1, r4
   145d8:	bl	12b24 <table_get_col_ptr@@Base>
   145dc:	ldr	r0, [r0, #4]
   145e0:	mvn	r7, #0
   145e4:	cmp	r0, #14
   145e8:	bne	14634 <table_set_llong@@Base+0x80>
   145ec:	ldr	r0, [r5]
   145f0:	cmp	r0, #0
   145f4:	bne	1460c <table_set_llong@@Base+0x58>
   145f8:	mov	r0, #8
   145fc:	bl	11ecc <malloc@plt>
   14600:	cmp	r0, #0
   14604:	str	r0, [r5]
   14608:	beq	14634 <table_set_llong@@Base+0x80>
   1460c:	ldr	r1, [fp, #12]
   14610:	ldr	r2, [fp, #8]
   14614:	mov	r3, #1
   14618:	str	r2, [r0]
   1461c:	str	r1, [r0, #4]
   14620:	mov	r0, r6
   14624:	mov	r1, r8
   14628:	mov	r2, r4
   1462c:	bl	12a50 <table_notify@@Base>
   14630:	mov	r7, #0
   14634:	mov	r0, r7
   14638:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001463c <table_set_ullong@@Base>:
   1463c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14640:	add	fp, sp, #24
   14644:	mov	r4, r2
   14648:	mov	r8, r1
   1464c:	mov	r6, r0
   14650:	bl	149fc <table_get_cell_ptr@@Base>
   14654:	mov	r5, r0
   14658:	mov	r0, r6
   1465c:	mov	r1, r4
   14660:	bl	12b24 <table_get_col_ptr@@Base>
   14664:	ldr	r0, [r0, #4]
   14668:	mvn	r7, #0
   1466c:	cmp	r0, #15
   14670:	bne	146bc <table_set_ullong@@Base+0x80>
   14674:	ldr	r0, [r5]
   14678:	cmp	r0, #0
   1467c:	bne	14694 <table_set_ullong@@Base+0x58>
   14680:	mov	r0, #8
   14684:	bl	11ecc <malloc@plt>
   14688:	cmp	r0, #0
   1468c:	str	r0, [r5]
   14690:	beq	146bc <table_set_ullong@@Base+0x80>
   14694:	ldr	r1, [fp, #12]
   14698:	ldr	r2, [fp, #8]
   1469c:	mov	r3, #1
   146a0:	str	r2, [r0]
   146a4:	str	r1, [r0, #4]
   146a8:	mov	r0, r6
   146ac:	mov	r1, r8
   146b0:	mov	r2, r4
   146b4:	bl	12a50 <table_notify@@Base>
   146b8:	mov	r7, #0
   146bc:	mov	r0, r7
   146c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000146c4 <table_set_float@@Base>:
   146c4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   146c8:	add	fp, sp, #24
   146cc:	vpush	{d8}
   146d0:	vmov.f32	s16, s0
   146d4:	mov	r4, r2
   146d8:	mov	r8, r1
   146dc:	mov	r6, r0
   146e0:	bl	149fc <table_get_cell_ptr@@Base>
   146e4:	mov	r5, r0
   146e8:	mov	r0, r6
   146ec:	mov	r1, r4
   146f0:	bl	12b24 <table_get_col_ptr@@Base>
   146f4:	ldr	r0, [r0, #4]
   146f8:	mvn	r7, #0
   146fc:	cmp	r0, #16
   14700:	bne	14744 <table_set_float@@Base+0x80>
   14704:	ldr	r0, [r5]
   14708:	cmp	r0, #0
   1470c:	bne	14724 <table_set_float@@Base+0x60>
   14710:	mov	r0, #4
   14714:	bl	11ecc <malloc@plt>
   14718:	cmp	r0, #0
   1471c:	str	r0, [r5]
   14720:	beq	14744 <table_set_float@@Base+0x80>
   14724:	vmov	r1, s16
   14728:	mov	r2, r4
   1472c:	mov	r3, #1
   14730:	str	r1, [r0]
   14734:	mov	r0, r6
   14738:	mov	r1, r8
   1473c:	bl	12a50 <table_notify@@Base>
   14740:	mov	r7, #0
   14744:	mov	r0, r7
   14748:	vpop	{d8}
   1474c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014750 <table_set_double@@Base>:
   14750:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14754:	add	fp, sp, #24
   14758:	vpush	{d8}
   1475c:	vorr	d8, d0, d0
   14760:	mov	r4, r2
   14764:	mov	r5, r1
   14768:	mov	r6, r0
   1476c:	bl	149fc <table_get_cell_ptr@@Base>
   14770:	mov	r8, r0
   14774:	mov	r0, r6
   14778:	mov	r1, r4
   1477c:	bl	12b24 <table_get_col_ptr@@Base>
   14780:	ldr	r0, [r0, #4]
   14784:	mvn	r7, #0
   14788:	cmp	r0, #17
   1478c:	bne	147cc <table_set_double@@Base+0x7c>
   14790:	ldr	r0, [r8]
   14794:	cmp	r0, #0
   14798:	bne	147b0 <table_set_double@@Base+0x60>
   1479c:	mov	r0, #8
   147a0:	bl	11ecc <malloc@plt>
   147a4:	cmp	r0, #0
   147a8:	str	r0, [r8]
   147ac:	beq	147cc <table_set_double@@Base+0x7c>
   147b0:	vst1.8	{d8}, [r0]
   147b4:	mov	r0, r6
   147b8:	mov	r1, r5
   147bc:	mov	r2, r4
   147c0:	mov	r3, #1
   147c4:	bl	12a50 <table_notify@@Base>
   147c8:	mov	r7, #0
   147cc:	mov	r0, r7
   147d0:	vpop	{d8}
   147d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000147d8 <table_set_ldouble@@Base>:
   147d8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   147dc:	add	fp, sp, #24
   147e0:	vpush	{d8}
   147e4:	vorr	d8, d0, d0
   147e8:	mov	r4, r2
   147ec:	mov	r5, r1
   147f0:	mov	r6, r0
   147f4:	bl	149fc <table_get_cell_ptr@@Base>
   147f8:	mov	r8, r0
   147fc:	mov	r0, r6
   14800:	mov	r1, r4
   14804:	bl	12b24 <table_get_col_ptr@@Base>
   14808:	ldr	r0, [r0, #4]
   1480c:	mvn	r7, #0
   14810:	cmp	r0, #18
   14814:	bne	14854 <table_set_ldouble@@Base+0x7c>
   14818:	ldr	r0, [r8]
   1481c:	cmp	r0, #0
   14820:	bne	14838 <table_set_ldouble@@Base+0x60>
   14824:	mov	r0, #8
   14828:	bl	11ecc <malloc@plt>
   1482c:	cmp	r0, #0
   14830:	str	r0, [r8]
   14834:	beq	14854 <table_set_ldouble@@Base+0x7c>
   14838:	vst1.8	{d8}, [r0]
   1483c:	mov	r0, r6
   14840:	mov	r1, r5
   14844:	mov	r2, r4
   14848:	mov	r3, #1
   1484c:	bl	12a50 <table_notify@@Base>
   14850:	mov	r7, #0
   14854:	mov	r0, r7
   14858:	vpop	{d8}
   1485c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014860 <table_set_string@@Base>:
   14860:	push	{fp, lr}
   14864:	mov	fp, sp
   14868:	sub	sp, sp, #8
   1486c:	mov	ip, #21
   14870:	str	ip, [sp]
   14874:	bl	13b08 <table_set@@Base>
   14878:	mov	sp, fp
   1487c:	pop	{fp, pc}

00014880 <table_set_char@@Base>:
   14880:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14884:	add	fp, sp, #24
   14888:	mov	r8, r3
   1488c:	mov	r4, r2
   14890:	mov	r9, r1
   14894:	mov	r6, r0
   14898:	bl	149fc <table_get_cell_ptr@@Base>
   1489c:	mov	r5, r0
   148a0:	mov	r0, r6
   148a4:	mov	r1, r4
   148a8:	bl	12b24 <table_get_col_ptr@@Base>
   148ac:	ldr	r0, [r0, #4]
   148b0:	mvn	r7, #0
   148b4:	cmp	r0, #19
   148b8:	bne	148f8 <table_set_char@@Base+0x78>
   148bc:	ldr	r0, [r5]
   148c0:	cmp	r0, #0
   148c4:	bne	148dc <table_set_char@@Base+0x5c>
   148c8:	mov	r0, #1
   148cc:	bl	11ecc <malloc@plt>
   148d0:	cmp	r0, #0
   148d4:	str	r0, [r5]
   148d8:	beq	148f8 <table_set_char@@Base+0x78>
   148dc:	strb	r8, [r0]
   148e0:	mov	r0, r6
   148e4:	mov	r1, r9
   148e8:	mov	r2, r4
   148ec:	mov	r3, #1
   148f0:	bl	12a50 <table_notify@@Base>
   148f4:	mov	r7, #0
   148f8:	mov	r0, r7
   148fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014900 <table_set_uchar@@Base>:
   14900:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14904:	add	fp, sp, #24
   14908:	mov	r8, r3
   1490c:	mov	r4, r2
   14910:	mov	r9, r1
   14914:	mov	r6, r0
   14918:	bl	149fc <table_get_cell_ptr@@Base>
   1491c:	mov	r5, r0
   14920:	mov	r0, r6
   14924:	mov	r1, r4
   14928:	bl	12b24 <table_get_col_ptr@@Base>
   1492c:	ldr	r0, [r0, #4]
   14930:	mvn	r7, #0
   14934:	cmp	r0, #20
   14938:	bne	14978 <table_set_uchar@@Base+0x78>
   1493c:	ldr	r0, [r5]
   14940:	cmp	r0, #0
   14944:	bne	1495c <table_set_uchar@@Base+0x5c>
   14948:	mov	r0, #1
   1494c:	bl	11ecc <malloc@plt>
   14950:	cmp	r0, #0
   14954:	str	r0, [r5]
   14958:	beq	14978 <table_set_uchar@@Base+0x78>
   1495c:	strb	r8, [r0]
   14960:	mov	r0, r6
   14964:	mov	r1, r9
   14968:	mov	r2, r4
   1496c:	mov	r3, #1
   14970:	bl	12a50 <table_notify@@Base>
   14974:	mov	r7, #0
   14978:	mov	r0, r7
   1497c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014980 <table_set_ptr@@Base>:
   14980:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14984:	add	fp, sp, #24
   14988:	mov	r8, r3
   1498c:	mov	r4, r2
   14990:	mov	r5, r1
   14994:	mov	r6, r0
   14998:	bl	149fc <table_get_cell_ptr@@Base>
   1499c:	mov	r7, r0
   149a0:	mov	r0, r6
   149a4:	mov	r1, r4
   149a8:	bl	12b24 <table_get_col_ptr@@Base>
   149ac:	ldr	r1, [r0, #4]
   149b0:	mvn	r0, #0
   149b4:	cmp	r1, #23
   149b8:	bne	149d8 <table_set_ptr@@Base+0x58>
   149bc:	mov	r0, r6
   149c0:	mov	r1, r5
   149c4:	mov	r2, r4
   149c8:	mov	r3, #1
   149cc:	str	r8, [r7]
   149d0:	bl	12a50 <table_notify@@Base>
   149d4:	mov	r0, #0
   149d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000149dc <table_cell_init@@Base>:
   149dc:	push	{r4, sl, fp, lr}
   149e0:	add	fp, sp, #8
   149e4:	mov	r4, r2
   149e8:	bl	13884 <table_get_row_ptr@@Base>
   149ec:	ldr	r0, [r0]
   149f0:	mov	r1, #0
   149f4:	str	r1, [r0, r4, lsl #2]
   149f8:	pop	{r4, sl, fp, pc}

000149fc <table_get_cell_ptr@@Base>:
   149fc:	push	{r4, sl, fp, lr}
   14a00:	add	fp, sp, #8
   14a04:	mov	r4, r2
   14a08:	bl	13884 <table_get_row_ptr@@Base>
   14a0c:	ldr	r0, [r0]
   14a10:	add	r0, r0, r4, lsl #2
   14a14:	pop	{r4, sl, fp, pc}

00014a18 <table_cell_destroy@@Base>:
   14a18:	push	{r4, r5, r6, sl, fp, lr}
   14a1c:	add	fp, sp, #16
   14a20:	mov	r5, r1
   14a24:	mov	r1, r2
   14a28:	mov	r4, r2
   14a2c:	mov	r6, r0
   14a30:	bl	12bc4 <table_get_column_data_type@@Base>
   14a34:	cmp	r0, #23
   14a38:	popeq	{r4, r5, r6, sl, fp, pc}
   14a3c:	mov	r0, r6
   14a40:	mov	r1, r5
   14a44:	bl	13884 <table_get_row_ptr@@Base>
   14a48:	ldr	r0, [r0]
   14a4c:	ldr	r0, [r0, r4, lsl #2]
   14a50:	cmp	r0, #0
   14a54:	beq	14a60 <table_cell_destroy@@Base+0x48>
   14a58:	pop	{r4, r5, r6, sl, fp, lr}
   14a5c:	b	11ea8 <free@plt>
   14a60:	pop	{r4, r5, r6, sl, fp, pc}

00014a64 <table_cell_to_buffer@@Base>:
   14a64:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14a68:	add	fp, sp, #24
   14a6c:	sub	sp, sp, #8
   14a70:	mov	r7, r1
   14a74:	mov	r1, r2
   14a78:	mov	r5, r3
   14a7c:	mov	r6, r2
   14a80:	mov	r4, r0
   14a84:	bl	12bc4 <table_get_column_data_type@@Base>
   14a88:	cmp	r0, #23
   14a8c:	bhi	14d80 <table_cell_to_buffer@@Base+0x31c>
   14a90:	add	r1, pc, #8
   14a94:	ldr	r8, [fp, #8]
   14a98:	ldr	r0, [r1, r0, lsl #2]
   14a9c:	add	pc, r1, r0
   14aa0:	andeq	r0, r0, r0, rrx
   14aa4:	andeq	r0, r0, r4, ror r0
   14aa8:	andeq	r0, r0, r8, lsl #1
   14aac:	muleq	r0, ip, r0
   14ab0:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   14ab4:	andeq	r0, r0, r4, asr #1
   14ab8:	ldrdeq	r0, [r0], -r8
   14abc:	andeq	r0, r0, ip, ror #1
   14ac0:	andeq	r0, r0, ip, lsl #2
   14ac4:	andeq	r0, r0, r0, lsr #2
   14ac8:	andeq	r0, r0, r4, lsr r1
   14acc:	andeq	r0, r0, r4, asr r1
   14ad0:	andeq	r0, r0, r4, ror r1
   14ad4:	muleq	r0, r4, r1
   14ad8:			; <UNDEFINED> instruction: 0x000001b4
   14adc:	ldrdeq	r0, [r0], -r4
   14ae0:	strdeq	r0, [r0], -r4
   14ae4:	andeq	r0, r0, r8, lsl r2
   14ae8:	andeq	r0, r0, r8, lsr r2
   14aec:	andeq	r0, r0, r4, ror #4
   14af0:	andeq	r0, r0, r8, ror r2
   14af4:	muleq	r0, r8, r2
   14af8:			; <UNDEFINED> instruction: 0x000002b8
   14afc:	andeq	r0, r0, ip, ror #5
   14b00:	mov	r0, r4
   14b04:	mov	r1, r7
   14b08:	mov	r2, r6
   14b0c:	bl	13640 <table_get_int@@Base>
   14b10:	b	14d68 <table_cell_to_buffer@@Base+0x304>
   14b14:	mov	r0, r4
   14b18:	mov	r1, r7
   14b1c:	mov	r2, r6
   14b20:	bl	13658 <table_get_uint@@Base>
   14b24:	b	14b9c <table_cell_to_buffer@@Base+0x138>
   14b28:	mov	r0, r4
   14b2c:	mov	r1, r7
   14b30:	mov	r2, r6
   14b34:	bl	13670 <table_get_int8@@Base>
   14b38:	b	14d68 <table_cell_to_buffer@@Base+0x304>
   14b3c:	mov	r0, r4
   14b40:	mov	r1, r7
   14b44:	mov	r2, r6
   14b48:	bl	13688 <table_get_uint8@@Base>
   14b4c:	b	14b9c <table_cell_to_buffer@@Base+0x138>
   14b50:	mov	r0, r4
   14b54:	mov	r1, r7
   14b58:	mov	r2, r6
   14b5c:	bl	136a0 <table_get_int16@@Base>
   14b60:	b	14d68 <table_cell_to_buffer@@Base+0x304>
   14b64:	mov	r0, r4
   14b68:	mov	r1, r7
   14b6c:	mov	r2, r6
   14b70:	bl	136b8 <table_get_uint16@@Base>
   14b74:	b	14b9c <table_cell_to_buffer@@Base+0x138>
   14b78:	mov	r0, r4
   14b7c:	mov	r1, r7
   14b80:	mov	r2, r6
   14b84:	bl	136d0 <table_get_int32@@Base>
   14b88:	b	14d68 <table_cell_to_buffer@@Base+0x304>
   14b8c:	mov	r0, r4
   14b90:	mov	r1, r7
   14b94:	mov	r2, r6
   14b98:	bl	136e8 <table_get_uint32@@Base>
   14b9c:	ldr	r2, [pc, #524]	; 14db0 <table_cell_to_buffer@@Base+0x34c>
   14ba0:	mov	r3, r0
   14ba4:	add	r2, pc, r2
   14ba8:	b	14d74 <table_cell_to_buffer@@Base+0x310>
   14bac:	mov	r0, r4
   14bb0:	mov	r1, r7
   14bb4:	mov	r2, r6
   14bb8:	bl	13700 <table_get_int64@@Base>
   14bbc:	b	14c64 <table_cell_to_buffer@@Base+0x200>
   14bc0:	mov	r0, r4
   14bc4:	mov	r1, r7
   14bc8:	mov	r2, r6
   14bcc:	bl	13718 <table_get_uint64@@Base>
   14bd0:	b	14c84 <table_cell_to_buffer@@Base+0x220>
   14bd4:	mov	r0, r4
   14bd8:	mov	r1, r7
   14bdc:	mov	r2, r6
   14be0:	bl	13730 <table_get_short@@Base>
   14be4:	ldr	r2, [pc, #464]	; 14dbc <table_cell_to_buffer@@Base+0x358>
   14be8:	mov	r3, r0
   14bec:	add	r2, pc, r2
   14bf0:	b	14d74 <table_cell_to_buffer@@Base+0x310>
   14bf4:	mov	r0, r4
   14bf8:	mov	r1, r7
   14bfc:	mov	r2, r6
   14c00:	bl	13748 <table_get_ushort@@Base>
   14c04:	ldr	r2, [pc, #436]	; 14dc0 <table_cell_to_buffer@@Base+0x35c>
   14c08:	mov	r3, r0
   14c0c:	add	r2, pc, r2
   14c10:	b	14d74 <table_cell_to_buffer@@Base+0x310>
   14c14:	mov	r0, r4
   14c18:	mov	r1, r7
   14c1c:	mov	r2, r6
   14c20:	bl	13760 <table_get_long@@Base>
   14c24:	ldr	r2, [pc, #408]	; 14dc4 <table_cell_to_buffer@@Base+0x360>
   14c28:	mov	r3, r0
   14c2c:	add	r2, pc, r2
   14c30:	b	14d74 <table_cell_to_buffer@@Base+0x310>
   14c34:	mov	r0, r4
   14c38:	mov	r1, r7
   14c3c:	mov	r2, r6
   14c40:	bl	13778 <table_get_ulong@@Base>
   14c44:	ldr	r2, [pc, #380]	; 14dc8 <table_cell_to_buffer@@Base+0x364>
   14c48:	mov	r3, r0
   14c4c:	add	r2, pc, r2
   14c50:	b	14d74 <table_cell_to_buffer@@Base+0x310>
   14c54:	mov	r0, r4
   14c58:	mov	r1, r7
   14c5c:	mov	r2, r6
   14c60:	bl	13790 <table_get_llong@@Base>
   14c64:	stm	sp, {r0, r1}
   14c68:	ldr	r2, [pc, #324]	; 14db4 <table_cell_to_buffer@@Base+0x350>
   14c6c:	add	r2, pc, r2
   14c70:	b	14cf4 <table_cell_to_buffer@@Base+0x290>
   14c74:	mov	r0, r4
   14c78:	mov	r1, r7
   14c7c:	mov	r2, r6
   14c80:	bl	137a8 <table_get_ullong@@Base>
   14c84:	stm	sp, {r0, r1}
   14c88:	ldr	r2, [pc, #296]	; 14db8 <table_cell_to_buffer@@Base+0x354>
   14c8c:	add	r2, pc, r2
   14c90:	b	14cf4 <table_cell_to_buffer@@Base+0x290>
   14c94:	mov	r0, r4
   14c98:	mov	r1, r7
   14c9c:	mov	r2, r6
   14ca0:	bl	137c0 <table_get_float@@Base>
   14ca4:	vcvt.f64.f32	d16, s0
   14ca8:	vstr	d16, [sp]
   14cac:	ldr	r2, [pc, #284]	; 14dd0 <table_cell_to_buffer@@Base+0x36c>
   14cb0:	add	r2, pc, r2
   14cb4:	b	14cf4 <table_cell_to_buffer@@Base+0x290>
   14cb8:	mov	r0, r4
   14cbc:	mov	r1, r7
   14cc0:	mov	r2, r6
   14cc4:	bl	137d8 <table_get_double@@Base>
   14cc8:	vstr	d0, [sp]
   14ccc:	ldr	r2, [pc, #256]	; 14dd4 <table_cell_to_buffer@@Base+0x370>
   14cd0:	add	r2, pc, r2
   14cd4:	b	14cf4 <table_cell_to_buffer@@Base+0x290>
   14cd8:	mov	r0, r4
   14cdc:	mov	r1, r7
   14ce0:	mov	r2, r6
   14ce4:	bl	137f0 <table_get_ldouble@@Base>
   14ce8:	vstr	d0, [sp]
   14cec:	ldr	r2, [pc, #228]	; 14dd8 <table_cell_to_buffer@@Base+0x374>
   14cf0:	add	r2, pc, r2
   14cf4:	mov	r0, r5
   14cf8:	mov	r1, r8
   14cfc:	bl	11efc <snprintf@plt>
   14d00:	b	14d80 <table_cell_to_buffer@@Base+0x31c>
   14d04:	mov	r0, r4
   14d08:	mov	r1, r7
   14d0c:	mov	r2, r6
   14d10:	bl	13808 <table_get_char@@Base>
   14d14:	b	14d28 <table_cell_to_buffer@@Base+0x2c4>
   14d18:	mov	r0, r4
   14d1c:	mov	r1, r7
   14d20:	mov	r2, r6
   14d24:	bl	13820 <table_get_uchar@@Base>
   14d28:	ldr	r2, [pc, #172]	; 14ddc <table_cell_to_buffer@@Base+0x378>
   14d2c:	mov	r3, r0
   14d30:	add	r2, pc, r2
   14d34:	b	14d74 <table_cell_to_buffer@@Base+0x310>
   14d38:	mov	r0, r4
   14d3c:	mov	r1, r7
   14d40:	mov	r2, r6
   14d44:	bl	13838 <table_get_string@@Base>
   14d48:	ldr	r2, [pc, #124]	; 14dcc <table_cell_to_buffer@@Base+0x368>
   14d4c:	mov	r3, r0
   14d50:	add	r2, pc, r2
   14d54:	b	14d74 <table_cell_to_buffer@@Base+0x310>
   14d58:	mov	r0, r4
   14d5c:	mov	r1, r7
   14d60:	mov	r2, r6
   14d64:	bl	13628 <table_get_bool@@Base>
   14d68:	ldr	r2, [pc, #60]	; 14dac <table_cell_to_buffer@@Base+0x348>
   14d6c:	mov	r3, r0
   14d70:	add	r2, pc, r2
   14d74:	mov	r0, r5
   14d78:	mov	r1, r8
   14d7c:	bl	11efc <snprintf@plt>
   14d80:	mov	r0, #0
   14d84:	sub	sp, fp, #24
   14d88:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14d8c:	mov	r0, r4
   14d90:	mov	r1, r7
   14d94:	mov	r2, r6
   14d98:	bl	1384c <table_get_ptr@@Base>
   14d9c:	ldr	r2, [pc, #60]	; 14de0 <table_cell_to_buffer@@Base+0x37c>
   14da0:	mov	r3, r0
   14da4:	add	r2, pc, r2
   14da8:	b	14d74 <table_cell_to_buffer@@Base+0x310>
   14dac:	andeq	r0, r0, pc, lsl r8
   14db0:	andeq	r0, r0, lr, ror #19
   14db4:	andeq	r0, r0, r9, lsr #18
   14db8:	andeq	r0, r0, lr, lsl #18
   14dbc:			; <UNDEFINED> instruction: 0x000009b3
   14dc0:	muleq	r0, r7, r9
   14dc4:	andeq	r0, r0, fp, ror r9
   14dc8:	andeq	r0, r0, pc, asr r9
   14dcc:	andeq	r0, r0, pc, asr r8
   14dd0:	andeq	r0, r0, r2, lsl #18
   14dd4:	andeq	r0, r0, r5, ror #17
   14dd8:	andeq	r0, r0, r9, asr #17
   14ddc:	andeq	r0, r0, sp, lsl #17
   14de0:	andeq	r0, r0, ip, lsl r8

00014de4 <table_cell_from_buffer@@Base>:
   14de4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14de8:	add	fp, sp, #24
   14dec:	sub	sp, sp, #264	; 0x108
   14df0:	mov	r5, r1
   14df4:	mov	r1, r2
   14df8:	mov	r7, r3
   14dfc:	mov	r4, r2
   14e00:	mov	r6, r0
   14e04:	bl	12bc4 <table_get_column_data_type@@Base>
   14e08:	cmp	r0, #23
   14e0c:	bhi	15440 <table_cell_from_buffer@@Base+0x65c>
   14e10:	add	r1, pc, #4
   14e14:	ldr	r0, [r1, r0, lsl #2]
   14e18:	add	pc, r1, r0
   14e1c:	andeq	r0, r0, r0, rrx
   14e20:	muleq	r0, ip, r0
   14e24:	ldrdeq	r0, [r0], -r8
   14e28:	andeq	r0, r0, r4, lsl r1
   14e2c:	andeq	r0, r0, r0, asr r1
   14e30:	andeq	r0, r0, ip, lsl #3
   14e34:	andeq	r0, r0, r8, asr #3
   14e38:	andeq	r0, r0, r4, lsl #4
   14e3c:	andeq	r0, r0, r0, asr #4
   14e40:	andeq	r0, r0, r4, lsl #5
   14e44:	andeq	r0, r0, r8, asr #5
   14e48:	andeq	r0, r0, r4, lsl #6
   14e4c:	andeq	r0, r0, r0, asr #6
   14e50:	andeq	r0, r0, ip, ror r3
   14e54:			; <UNDEFINED> instruction: 0x000003b8
   14e58:	strdeq	r0, [r0], -ip
   14e5c:	andeq	r0, r0, r0, asr #8
   14e60:	andeq	r0, r0, ip, ror r4
   14e64:			; <UNDEFINED> instruction: 0x000004b8
   14e68:	strdeq	r0, [r0], -r4
   14e6c:	andeq	r0, r0, r0, lsr r5
   14e70:	andeq	r0, r0, ip, ror #10
   14e74:	andeq	r0, r0, r8, lsr #11
   14e78:	andeq	r0, r0, ip, ror #11
   14e7c:	ldr	r1, [pc, #1480]	; 1544c <table_cell_from_buffer@@Base+0x668>
   14e80:	add	r2, sp, #8
   14e84:	mov	r0, r7
   14e88:	add	r1, pc, r1
   14e8c:	bl	11f08 <__isoc99_sscanf@plt>
   14e90:	mov	r1, r0
   14e94:	mvn	r0, #0
   14e98:	cmp	r1, #1
   14e9c:	bne	15444 <table_cell_from_buffer@@Base+0x660>
   14ea0:	ldr	r3, [sp, #8]
   14ea4:	mov	r0, r6
   14ea8:	mov	r1, r5
   14eac:	mov	r2, r4
   14eb0:	bl	13ea4 <table_set_int@@Base>
   14eb4:	b	15440 <table_cell_from_buffer@@Base+0x65c>
   14eb8:	ldr	r1, [pc, #1424]	; 15450 <table_cell_from_buffer@@Base+0x66c>
   14ebc:	add	r2, sp, #8
   14ec0:	mov	r0, r7
   14ec4:	add	r1, pc, r1
   14ec8:	bl	11f08 <__isoc99_sscanf@plt>
   14ecc:	mov	r1, r0
   14ed0:	mvn	r0, #0
   14ed4:	cmp	r1, #1
   14ed8:	bne	15444 <table_cell_from_buffer@@Base+0x660>
   14edc:	ldr	r3, [sp, #8]
   14ee0:	mov	r0, r6
   14ee4:	mov	r1, r5
   14ee8:	mov	r2, r4
   14eec:	bl	13f24 <table_set_uint@@Base>
   14ef0:	b	15440 <table_cell_from_buffer@@Base+0x65c>
   14ef4:	ldr	r1, [pc, #1368]	; 15454 <table_cell_from_buffer@@Base+0x670>
   14ef8:	add	r2, sp, #8
   14efc:	mov	r0, r7
   14f00:	add	r1, pc, r1
   14f04:	bl	11f08 <__isoc99_sscanf@plt>
   14f08:	mov	r1, r0
   14f0c:	mvn	r0, #0
   14f10:	cmp	r1, #1
   14f14:	bne	15444 <table_cell_from_buffer@@Base+0x660>
   14f18:	ldrsb	r3, [sp, #8]
   14f1c:	mov	r0, r6
   14f20:	mov	r1, r5
   14f24:	mov	r2, r4
   14f28:	bl	13fa4 <table_set_int8@@Base>
   14f2c:	b	15440 <table_cell_from_buffer@@Base+0x65c>
   14f30:	ldr	r1, [pc, #1312]	; 15458 <table_cell_from_buffer@@Base+0x674>
   14f34:	add	r2, sp, #8
   14f38:	mov	r0, r7
   14f3c:	add	r1, pc, r1
   14f40:	bl	11f08 <__isoc99_sscanf@plt>
   14f44:	mov	r1, r0
   14f48:	mvn	r0, #0
   14f4c:	cmp	r1, #1
   14f50:	bne	15444 <table_cell_from_buffer@@Base+0x660>
   14f54:	ldrb	r3, [sp, #8]
   14f58:	mov	r0, r6
   14f5c:	mov	r1, r5
   14f60:	mov	r2, r4
   14f64:	bl	14024 <table_set_uint8@@Base>
   14f68:	b	15440 <table_cell_from_buffer@@Base+0x65c>
   14f6c:	ldr	r1, [pc, #1256]	; 1545c <table_cell_from_buffer@@Base+0x678>
   14f70:	add	r2, sp, #8
   14f74:	mov	r0, r7
   14f78:	add	r1, pc, r1
   14f7c:	bl	11f08 <__isoc99_sscanf@plt>
   14f80:	mov	r1, r0
   14f84:	mvn	r0, #0
   14f88:	cmp	r1, #1
   14f8c:	bne	15444 <table_cell_from_buffer@@Base+0x660>
   14f90:	ldrsh	r3, [sp, #8]
   14f94:	mov	r0, r6
   14f98:	mov	r1, r5
   14f9c:	mov	r2, r4
   14fa0:	bl	140a4 <table_set_int16@@Base>
   14fa4:	b	15440 <table_cell_from_buffer@@Base+0x65c>
   14fa8:	ldr	r1, [pc, #1200]	; 15460 <table_cell_from_buffer@@Base+0x67c>
   14fac:	add	r2, sp, #8
   14fb0:	mov	r0, r7
   14fb4:	add	r1, pc, r1
   14fb8:	bl	11f08 <__isoc99_sscanf@plt>
   14fbc:	mov	r1, r0
   14fc0:	mvn	r0, #0
   14fc4:	cmp	r1, #1
   14fc8:	bne	15444 <table_cell_from_buffer@@Base+0x660>
   14fcc:	ldrh	r3, [sp, #8]
   14fd0:	mov	r0, r6
   14fd4:	mov	r1, r5
   14fd8:	mov	r2, r4
   14fdc:	bl	14124 <table_set_uint16@@Base>
   14fe0:	b	15440 <table_cell_from_buffer@@Base+0x65c>
   14fe4:	ldr	r1, [pc, #1144]	; 15464 <table_cell_from_buffer@@Base+0x680>
   14fe8:	add	r2, sp, #8
   14fec:	mov	r0, r7
   14ff0:	add	r1, pc, r1
   14ff4:	bl	11f08 <__isoc99_sscanf@plt>
   14ff8:	mov	r1, r0
   14ffc:	mvn	r0, #0
   15000:	cmp	r1, #1
   15004:	bne	15444 <table_cell_from_buffer@@Base+0x660>
   15008:	ldr	r3, [sp, #8]
   1500c:	mov	r0, r6
   15010:	mov	r1, r5
   15014:	mov	r2, r4
   15018:	bl	141a4 <table_set_int32@@Base>
   1501c:	b	15440 <table_cell_from_buffer@@Base+0x65c>
   15020:	ldr	r1, [pc, #1088]	; 15468 <table_cell_from_buffer@@Base+0x684>
   15024:	add	r2, sp, #8
   15028:	mov	r0, r7
   1502c:	add	r1, pc, r1
   15030:	bl	11f08 <__isoc99_sscanf@plt>
   15034:	mov	r1, r0
   15038:	mvn	r0, #0
   1503c:	cmp	r1, #1
   15040:	bne	15444 <table_cell_from_buffer@@Base+0x660>
   15044:	ldr	r3, [sp, #8]
   15048:	mov	r0, r6
   1504c:	mov	r1, r5
   15050:	mov	r2, r4
   15054:	bl	14224 <table_set_uint32@@Base>
   15058:	b	15440 <table_cell_from_buffer@@Base+0x65c>
   1505c:	ldr	r1, [pc, #1032]	; 1546c <table_cell_from_buffer@@Base+0x688>
   15060:	add	r2, sp, #8
   15064:	mov	r0, r7
   15068:	add	r1, pc, r1
   1506c:	bl	11f08 <__isoc99_sscanf@plt>
   15070:	mov	r1, r0
   15074:	mvn	r0, #0
   15078:	cmp	r1, #1
   1507c:	bne	15444 <table_cell_from_buffer@@Base+0x660>
   15080:	ldr	r0, [sp, #8]
   15084:	ldr	r1, [sp, #12]
   15088:	mov	r2, r4
   1508c:	stm	sp, {r0, r1}
   15090:	mov	r0, r6
   15094:	mov	r1, r5
   15098:	bl	142a4 <table_set_int64@@Base>
   1509c:	b	15440 <table_cell_from_buffer@@Base+0x65c>
   150a0:	ldr	r1, [pc, #968]	; 15470 <table_cell_from_buffer@@Base+0x68c>
   150a4:	add	r2, sp, #8
   150a8:	mov	r0, r7
   150ac:	add	r1, pc, r1
   150b0:	bl	11f08 <__isoc99_sscanf@plt>
   150b4:	mov	r1, r0
   150b8:	mvn	r0, #0
   150bc:	cmp	r1, #1
   150c0:	bne	15444 <table_cell_from_buffer@@Base+0x660>
   150c4:	ldr	r0, [sp, #8]
   150c8:	ldr	r1, [sp, #12]
   150cc:	mov	r2, r4
   150d0:	stm	sp, {r0, r1}
   150d4:	mov	r0, r6
   150d8:	mov	r1, r5
   150dc:	bl	1432c <table_set_uint64@@Base>
   150e0:	b	15440 <table_cell_from_buffer@@Base+0x65c>
   150e4:	ldr	r1, [pc, #904]	; 15474 <table_cell_from_buffer@@Base+0x690>
   150e8:	add	r2, sp, #8
   150ec:	mov	r0, r7
   150f0:	add	r1, pc, r1
   150f4:	bl	11f08 <__isoc99_sscanf@plt>
   150f8:	mov	r1, r0
   150fc:	mvn	r0, #0
   15100:	cmp	r1, #1
   15104:	bne	15444 <table_cell_from_buffer@@Base+0x660>
   15108:	ldrsh	r3, [sp, #8]
   1510c:	mov	r0, r6
   15110:	mov	r1, r5
   15114:	mov	r2, r4
   15118:	bl	143b4 <table_set_short@@Base>
   1511c:	b	15440 <table_cell_from_buffer@@Base+0x65c>
   15120:	ldr	r1, [pc, #848]	; 15478 <table_cell_from_buffer@@Base+0x694>
   15124:	add	r2, sp, #8
   15128:	mov	r0, r7
   1512c:	add	r1, pc, r1
   15130:	bl	11f08 <__isoc99_sscanf@plt>
   15134:	mov	r1, r0
   15138:	mvn	r0, #0
   1513c:	cmp	r1, #1
   15140:	bne	15444 <table_cell_from_buffer@@Base+0x660>
   15144:	ldrh	r3, [sp, #8]
   15148:	mov	r0, r6
   1514c:	mov	r1, r5
   15150:	mov	r2, r4
   15154:	bl	14434 <table_set_ushort@@Base>
   15158:	b	15440 <table_cell_from_buffer@@Base+0x65c>
   1515c:	ldr	r1, [pc, #792]	; 1547c <table_cell_from_buffer@@Base+0x698>
   15160:	add	r2, sp, #8
   15164:	mov	r0, r7
   15168:	add	r1, pc, r1
   1516c:	bl	11f08 <__isoc99_sscanf@plt>
   15170:	mov	r1, r0
   15174:	mvn	r0, #0
   15178:	cmp	r1, #1
   1517c:	bne	15444 <table_cell_from_buffer@@Base+0x660>
   15180:	ldr	r3, [sp, #8]
   15184:	mov	r0, r6
   15188:	mov	r1, r5
   1518c:	mov	r2, r4
   15190:	bl	144b4 <table_set_long@@Base>
   15194:	b	15440 <table_cell_from_buffer@@Base+0x65c>
   15198:	ldr	r1, [pc, #736]	; 15480 <table_cell_from_buffer@@Base+0x69c>
   1519c:	add	r2, sp, #8
   151a0:	mov	r0, r7
   151a4:	add	r1, pc, r1
   151a8:	bl	11f08 <__isoc99_sscanf@plt>
   151ac:	mov	r1, r0
   151b0:	mvn	r0, #0
   151b4:	cmp	r1, #1
   151b8:	bne	15444 <table_cell_from_buffer@@Base+0x660>
   151bc:	ldr	r3, [sp, #8]
   151c0:	mov	r0, r6
   151c4:	mov	r1, r5
   151c8:	mov	r2, r4
   151cc:	bl	14534 <table_set_ulong@@Base>
   151d0:	b	15440 <table_cell_from_buffer@@Base+0x65c>
   151d4:	ldr	r1, [pc, #680]	; 15484 <table_cell_from_buffer@@Base+0x6a0>
   151d8:	add	r2, sp, #8
   151dc:	mov	r0, r7
   151e0:	add	r1, pc, r1
   151e4:	bl	11f08 <__isoc99_sscanf@plt>
   151e8:	mov	r1, r0
   151ec:	mvn	r0, #0
   151f0:	cmp	r1, #1
   151f4:	bne	15444 <table_cell_from_buffer@@Base+0x660>
   151f8:	ldr	r0, [sp, #8]
   151fc:	ldr	r1, [sp, #12]
   15200:	mov	r2, r4
   15204:	stm	sp, {r0, r1}
   15208:	mov	r0, r6
   1520c:	mov	r1, r5
   15210:	bl	145b4 <table_set_llong@@Base>
   15214:	b	15440 <table_cell_from_buffer@@Base+0x65c>
   15218:	ldr	r1, [pc, #616]	; 15488 <table_cell_from_buffer@@Base+0x6a4>
   1521c:	add	r2, sp, #8
   15220:	mov	r0, r7
   15224:	add	r1, pc, r1
   15228:	bl	11f08 <__isoc99_sscanf@plt>
   1522c:	mov	r1, r0
   15230:	mvn	r0, #0
   15234:	cmp	r1, #1
   15238:	bne	15444 <table_cell_from_buffer@@Base+0x660>
   1523c:	ldr	r0, [sp, #8]
   15240:	ldr	r1, [sp, #12]
   15244:	mov	r2, r4
   15248:	stm	sp, {r0, r1}
   1524c:	mov	r0, r6
   15250:	mov	r1, r5
   15254:	bl	1463c <table_set_ullong@@Base>
   15258:	b	15440 <table_cell_from_buffer@@Base+0x65c>
   1525c:	ldr	r1, [pc, #556]	; 15490 <table_cell_from_buffer@@Base+0x6ac>
   15260:	add	r2, sp, #8
   15264:	mov	r0, r7
   15268:	add	r1, pc, r1
   1526c:	bl	11f08 <__isoc99_sscanf@plt>
   15270:	mov	r1, r0
   15274:	mvn	r0, #0
   15278:	cmp	r1, #1
   1527c:	bne	15444 <table_cell_from_buffer@@Base+0x660>
   15280:	vldr	s0, [sp, #8]
   15284:	mov	r0, r6
   15288:	mov	r1, r5
   1528c:	mov	r2, r4
   15290:	bl	146c4 <table_set_float@@Base>
   15294:	b	15440 <table_cell_from_buffer@@Base+0x65c>
   15298:	ldr	r1, [pc, #500]	; 15494 <table_cell_from_buffer@@Base+0x6b0>
   1529c:	add	r2, sp, #8
   152a0:	mov	r0, r7
   152a4:	add	r1, pc, r1
   152a8:	bl	11f08 <__isoc99_sscanf@plt>
   152ac:	mov	r1, r0
   152b0:	mvn	r0, #0
   152b4:	cmp	r1, #1
   152b8:	bne	15444 <table_cell_from_buffer@@Base+0x660>
   152bc:	vldr	d0, [sp, #8]
   152c0:	mov	r0, r6
   152c4:	mov	r1, r5
   152c8:	mov	r2, r4
   152cc:	bl	14750 <table_set_double@@Base>
   152d0:	b	15440 <table_cell_from_buffer@@Base+0x65c>
   152d4:	ldr	r1, [pc, #444]	; 15498 <table_cell_from_buffer@@Base+0x6b4>
   152d8:	add	r2, sp, #8
   152dc:	mov	r0, r7
   152e0:	add	r1, pc, r1
   152e4:	bl	11f08 <__isoc99_sscanf@plt>
   152e8:	mov	r1, r0
   152ec:	mvn	r0, #0
   152f0:	cmp	r1, #1
   152f4:	bne	15444 <table_cell_from_buffer@@Base+0x660>
   152f8:	vldr	d0, [sp, #8]
   152fc:	mov	r0, r6
   15300:	mov	r1, r5
   15304:	mov	r2, r4
   15308:	bl	147d8 <table_set_ldouble@@Base>
   1530c:	b	15440 <table_cell_from_buffer@@Base+0x65c>
   15310:	ldr	r1, [pc, #392]	; 154a0 <table_cell_from_buffer@@Base+0x6bc>
   15314:	add	r2, sp, #8
   15318:	mov	r0, r7
   1531c:	add	r1, pc, r1
   15320:	bl	11f08 <__isoc99_sscanf@plt>
   15324:	mov	r1, r0
   15328:	mvn	r0, #0
   1532c:	cmp	r1, #1
   15330:	bne	15444 <table_cell_from_buffer@@Base+0x660>
   15334:	ldrb	r3, [sp, #8]
   15338:	mov	r0, r6
   1533c:	mov	r1, r5
   15340:	mov	r2, r4
   15344:	bl	14880 <table_set_char@@Base>
   15348:	b	15440 <table_cell_from_buffer@@Base+0x65c>
   1534c:	ldr	r1, [pc, #336]	; 154a4 <table_cell_from_buffer@@Base+0x6c0>
   15350:	add	r2, sp, #8
   15354:	mov	r0, r7
   15358:	add	r1, pc, r1
   1535c:	bl	11f08 <__isoc99_sscanf@plt>
   15360:	mov	r1, r0
   15364:	mvn	r0, #0
   15368:	cmp	r1, #1
   1536c:	bne	15444 <table_cell_from_buffer@@Base+0x660>
   15370:	ldrb	r3, [sp, #8]
   15374:	mov	r0, r6
   15378:	mov	r1, r5
   1537c:	mov	r2, r4
   15380:	bl	14900 <table_set_uchar@@Base>
   15384:	b	15440 <table_cell_from_buffer@@Base+0x65c>
   15388:	ldr	r1, [pc, #252]	; 1548c <table_cell_from_buffer@@Base+0x6a8>
   1538c:	add	r2, sp, #8
   15390:	mov	r0, r7
   15394:	add	r1, pc, r1
   15398:	bl	11f08 <__isoc99_sscanf@plt>
   1539c:	mov	r1, r0
   153a0:	mvn	r0, #0
   153a4:	cmp	r1, #1
   153a8:	bne	15444 <table_cell_from_buffer@@Base+0x660>
   153ac:	add	r3, sp, #8
   153b0:	mov	r0, r6
   153b4:	mov	r1, r5
   153b8:	mov	r2, r4
   153bc:	bl	14860 <table_set_string@@Base>
   153c0:	b	15440 <table_cell_from_buffer@@Base+0x65c>
   153c4:	ldr	r1, [pc, #208]	; 1549c <table_cell_from_buffer@@Base+0x6b8>
   153c8:	add	r2, sp, #8
   153cc:	mov	r0, r7
   153d0:	add	r1, pc, r1
   153d4:	bl	11f08 <__isoc99_sscanf@plt>
   153d8:	mov	r1, r0
   153dc:	mvn	r0, #0
   153e0:	cmp	r1, #1
   153e4:	bne	15444 <table_cell_from_buffer@@Base+0x660>
   153e8:	ldr	r3, [sp, #8]
   153ec:	mov	r0, r6
   153f0:	mov	r1, r5
   153f4:	mov	r2, r4
   153f8:	cmp	r3, #0
   153fc:	movwne	r3, #1
   15400:	bl	13e24 <table_set_bool@@Base>
   15404:	b	15440 <table_cell_from_buffer@@Base+0x65c>
   15408:	ldr	r1, [pc, #152]	; 154a8 <table_cell_from_buffer@@Base+0x6c4>
   1540c:	add	r2, sp, #8
   15410:	mov	r0, r7
   15414:	add	r1, pc, r1
   15418:	bl	11f08 <__isoc99_sscanf@plt>
   1541c:	mov	r1, r0
   15420:	mvn	r0, #0
   15424:	cmp	r1, #1
   15428:	bne	15444 <table_cell_from_buffer@@Base+0x660>
   1542c:	ldr	r3, [sp, #8]
   15430:	mov	r0, r6
   15434:	mov	r1, r5
   15438:	mov	r2, r4
   1543c:	bl	14980 <table_set_ptr@@Base>
   15440:	mov	r0, #0
   15444:	sub	sp, fp, #24
   15448:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1544c:	andeq	r0, r0, r7, lsl #14
   15450:	andeq	r0, r0, lr, asr #13
   15454:	andeq	r0, r0, r3, asr #13
   15458:	andeq	r0, r0, ip, lsl #13
   1545c:	andeq	r0, r0, r7, lsr #12
   15460:	andeq	r0, r0, pc, ror #11
   15464:	muleq	r0, pc, r5	; <UNPREDICTABLE>
   15468:	andeq	r0, r0, r6, ror #10
   1546c:	andeq	r0, r0, sp, lsr #10
   15470:	andeq	r0, r0, lr, ror #9
   15474:	andeq	r0, r0, pc, lsr #9
   15478:	andeq	r0, r0, r7, ror r4
   1547c:	andeq	r0, r0, pc, lsr r4
   15480:	andeq	r0, r0, r7, lsl #8
   15484:			; <UNDEFINED> instruction: 0x000003b5
   15488:	andeq	r0, r0, r6, ror r3
   1548c:	andeq	r0, r0, fp, lsl r2
   15490:	andeq	r0, r0, sl, asr #6
   15494:	andeq	r0, r0, r1, lsl r3
   15498:	ldrdeq	r0, [r0], -r9
   1549c:			; <UNDEFINED> instruction: 0x000001bf
   154a0:	andeq	r0, r0, r1, lsr #5
   154a4:	andeq	r0, r0, r5, ror #4
   154a8:	andeq	r0, r0, ip, lsr #3

000154ac <table_cell_nullify@@Base>:
   154ac:	push	{r4, r5, fp, lr}
   154b0:	add	fp, sp, #8
   154b4:	mov	r4, r2
   154b8:	bl	13884 <table_get_row_ptr@@Base>
   154bc:	ldr	r5, [r0]
   154c0:	ldr	r0, [r5, r4, lsl #2]
   154c4:	cmp	r0, #0
   154c8:	beq	154d8 <table_cell_nullify@@Base+0x2c>
   154cc:	bl	11ea8 <free@plt>
   154d0:	mov	r0, #0
   154d4:	str	r0, [r5, r4, lsl #2]
   154d8:	mov	r0, #0
   154dc:	pop	{r4, r5, fp, pc}

000154e0 <__libc_csu_init@@Base>:
   154e0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   154e4:	mov	r7, r0
   154e8:	ldr	r6, [pc, #72]	; 15538 <__libc_csu_init@@Base+0x58>
   154ec:	ldr	r5, [pc, #72]	; 1553c <__libc_csu_init@@Base+0x5c>
   154f0:	add	r6, pc, r6
   154f4:	add	r5, pc, r5
   154f8:	sub	r6, r6, r5
   154fc:	mov	r8, r1
   15500:	mov	r9, r2
   15504:	bl	11e70 <strcmp@plt-0x20>
   15508:	asrs	r6, r6, #2
   1550c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15510:	mov	r4, #0
   15514:	add	r4, r4, #1
   15518:	ldr	r3, [r5], #4
   1551c:	mov	r2, r9
   15520:	mov	r1, r8
   15524:	mov	r0, r7
   15528:	blx	r3
   1552c:	cmp	r6, r4
   15530:	bne	15514 <__libc_csu_init@@Base+0x34>
   15534:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15538:			; <UNDEFINED> instruction: 0x000109b4
   1553c:	andeq	r0, r1, ip, lsr #19

00015540 <__libc_csu_fini@@Base>:
   15540:	bx	lr

Disassembly of section .fini:

00015544 <.fini>:
   15544:	push	{r3, lr}
   15548:	pop	{r3, pc}
