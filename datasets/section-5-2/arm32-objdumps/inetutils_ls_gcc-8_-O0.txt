
../repos/inetutils/tests/ls:     file format elf32-littlearm


Disassembly of section .init:

00010b3c <.init>:
   10b3c:	push	{r3, lr}
   10b40:	bl	10e24 <__assert_fail@plt+0x4c>
   10b44:	pop	{r3, pc}

Disassembly of section .plt:

00010b48 <fstatfs64@plt-0x14>:
   10b48:	push	{lr}		; (str lr, [sp, #-4]!)
   10b4c:	ldr	lr, [pc, #4]	; 10b58 <fstatfs64@plt-0x4>
   10b50:	add	lr, pc, lr
   10b54:	ldr	pc, [lr, #8]!
   10b58:	andeq	ip, r1, r8, lsr #9

00010b5c <fstatfs64@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #28, 20	; 0x1c000
   10b64:	ldr	pc, [ip, #1192]!	; 0x4a8

00010b68 <calloc@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #28, 20	; 0x1c000
   10b70:	ldr	pc, [ip, #1184]!	; 0x4a0

00010b74 <raise@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #28, 20	; 0x1c000
   10b7c:	ldr	pc, [ip, #1176]!	; 0x498

00010b80 <strcmp@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #28, 20	; 0x1c000
   10b88:	ldr	pc, [ip, #1168]!	; 0x490

00010b8c <getpwuid@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #28, 20	; 0x1c000
   10b94:	ldr	pc, [ip, #1160]!	; 0x488

00010b98 <printf@plt>:
   10b98:	add	ip, pc, #0, 12
   10b9c:	add	ip, ip, #28, 20	; 0x1c000
   10ba0:	ldr	pc, [ip, #1152]!	; 0x480

00010ba4 <getuid@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #28, 20	; 0x1c000
   10bac:	ldr	pc, [ip, #1144]!	; 0x478

00010bb0 <memmove@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #28, 20	; 0x1c000
   10bb8:	ldr	pc, [ip, #1136]!	; 0x470

00010bbc <free@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #28, 20	; 0x1c000
   10bc4:	ldr	pc, [ip, #1128]!	; 0x468

00010bc8 <memcpy@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #28, 20	; 0x1c000
   10bd0:	ldr	pc, [ip, #1120]!	; 0x460

00010bd4 <time@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #28, 20	; 0x1c000
   10bdc:	ldr	pc, [ip, #1112]!	; 0x458

00010be0 <ctime@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #28, 20	; 0x1c000
   10be8:	ldr	pc, [ip, #1104]!	; 0x450

00010bec <realloc@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #28, 20	; 0x1c000
   10bf4:	ldr	pc, [ip, #1096]!	; 0x448

00010bf8 <funlockfile@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #28, 20	; 0x1c000
   10c00:	ldr	pc, [ip, #1088]!	; 0x440

00010c04 <__fxstatat64@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #28, 20	; 0x1c000
   10c0c:	ldr	pc, [ip, #1080]!	; 0x438

00010c10 <__fxstat64@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #28, 20	; 0x1c000
   10c18:	ldr	pc, [ip, #1072]!	; 0x430

00010c1c <readlink@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #28, 20	; 0x1c000
   10c24:	ldr	pc, [ip, #1064]!	; 0x428

00010c28 <fwrite@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #28, 20	; 0x1c000
   10c30:	ldr	pc, [ip, #1056]!	; 0x420

00010c34 <ioctl@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #28, 20	; 0x1c000
   10c3c:	ldr	pc, [ip, #1048]!	; 0x418

00010c40 <strcpy@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #28, 20	; 0x1c000
   10c48:	ldr	pc, [ip, #1040]!	; 0x410

00010c4c <open64@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #28, 20	; 0x1c000
   10c54:	ldr	pc, [ip, #1032]!	; 0x408

00010c58 <getenv@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #28, 20	; 0x1c000
   10c60:	ldr	pc, [ip, #1024]!	; 0x400

00010c64 <malloc@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #28, 20	; 0x1c000
   10c6c:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c70 <__libc_start_main@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #28, 20	; 0x1c000
   10c78:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c7c <strerror@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #28, 20	; 0x1c000
   10c84:	ldr	pc, [ip, #1000]!	; 0x3e8

00010c88 <__gmon_start__@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #28, 20	; 0x1c000
   10c90:	ldr	pc, [ip, #992]!	; 0x3e0

00010c94 <__ctype_b_loc@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #28, 20	; 0x1c000
   10c9c:	ldr	pc, [ip, #984]!	; 0x3d8

00010ca0 <strlen@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #28, 20	; 0x1c000
   10ca8:	ldr	pc, [ip, #976]!	; 0x3d0

00010cac <strchr@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #28, 20	; 0x1c000
   10cb4:	ldr	pc, [ip, #968]!	; 0x3c8

00010cb8 <openat64@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #28, 20	; 0x1c000
   10cc0:	ldr	pc, [ip, #960]!	; 0x3c0

00010cc4 <fprintf@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #28, 20	; 0x1c000
   10ccc:	ldr	pc, [ip, #952]!	; 0x3b8

00010cd0 <__errno_location@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #28, 20	; 0x1c000
   10cd8:	ldr	pc, [ip, #944]!	; 0x3b0

00010cdc <snprintf@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #28, 20	; 0x1c000
   10ce4:	ldr	pc, [ip, #936]!	; 0x3a8

00010ce8 <memset@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #28, 20	; 0x1c000
   10cf0:	ldr	pc, [ip, #928]!	; 0x3a0

00010cf4 <putchar@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #28, 20	; 0x1c000
   10cfc:	ldr	pc, [ip, #920]!	; 0x398

00010d00 <fcntl64@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #28, 20	; 0x1c000
   10d08:	ldr	pc, [ip, #912]!	; 0x390

00010d0c <strrchr@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #28, 20	; 0x1c000
   10d14:	ldr	pc, [ip, #904]!	; 0x388

00010d18 <fputc@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #28, 20	; 0x1c000
   10d20:	ldr	pc, [ip, #896]!	; 0x380

00010d24 <readdir64@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #28, 20	; 0x1c000
   10d2c:	ldr	pc, [ip, #888]!	; 0x378

00010d30 <fdopendir@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #28, 20	; 0x1c000
   10d38:	ldr	pc, [ip, #880]!	; 0x370

00010d3c <dirfd@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #28, 20	; 0x1c000
   10d44:	ldr	pc, [ip, #872]!	; 0x368

00010d48 <flockfile@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #28, 20	; 0x1c000
   10d50:	ldr	pc, [ip, #864]!	; 0x360

00010d54 <atoi@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #28, 20	; 0x1c000
   10d5c:	ldr	pc, [ip, #856]!	; 0x358

00010d60 <fchdir@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #28, 20	; 0x1c000
   10d68:	ldr	pc, [ip, #848]!	; 0x350

00010d6c <qsort@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #28, 20	; 0x1c000
   10d74:	ldr	pc, [ip, #840]!	; 0x348

00010d78 <__xstat64@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #28, 20	; 0x1c000
   10d80:	ldr	pc, [ip, #832]!	; 0x340

00010d84 <isatty@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #28, 20	; 0x1c000
   10d8c:	ldr	pc, [ip, #824]!	; 0x338

00010d90 <strncmp@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #28, 20	; 0x1c000
   10d98:	ldr	pc, [ip, #816]!	; 0x330

00010d9c <abort@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #28, 20	; 0x1c000
   10da4:	ldr	pc, [ip, #808]!	; 0x328

00010da8 <close@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #28, 20	; 0x1c000
   10db0:	ldr	pc, [ip, #800]!	; 0x320

00010db4 <__lxstat64@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #28, 20	; 0x1c000
   10dbc:	ldr	pc, [ip, #792]!	; 0x318

00010dc0 <closedir@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #28, 20	; 0x1c000
   10dc8:	ldr	pc, [ip, #784]!	; 0x310

00010dcc <getgrgid@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #28, 20	; 0x1c000
   10dd4:	ldr	pc, [ip, #776]!	; 0x308

00010dd8 <__assert_fail@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #28, 20	; 0x1c000
   10de0:	ldr	pc, [ip, #768]!	; 0x300

Disassembly of section .text:

00010de8 <.text>:
   10de8:	mov	fp, #0
   10dec:	mov	lr, #0
   10df0:	pop	{r1}		; (ldr r1, [sp], #4)
   10df4:	mov	r2, sp
   10df8:	push	{r2}		; (str r2, [sp, #-4]!)
   10dfc:	push	{r0}		; (str r0, [sp, #-4]!)
   10e00:	ldr	ip, [pc, #16]	; 10e18 <__assert_fail@plt+0x40>
   10e04:	push	{ip}		; (str ip, [sp, #-4]!)
   10e08:	ldr	r0, [pc, #12]	; 10e1c <__assert_fail@plt+0x44>
   10e0c:	ldr	r3, [pc, #12]	; 10e20 <__assert_fail@plt+0x48>
   10e10:	bl	10c70 <__libc_start_main@plt>
   10e14:	bl	10d9c <abort@plt>
   10e18:	andeq	fp, r1, ip, lsr #25
   10e1c:	ldrdeq	r0, [r1], -r8
   10e20:	andeq	fp, r1, ip, asr #24
   10e24:	ldr	r3, [pc, #20]	; 10e40 <__assert_fail@plt+0x68>
   10e28:	ldr	r2, [pc, #20]	; 10e44 <__assert_fail@plt+0x6c>
   10e2c:	add	r3, pc, r3
   10e30:	ldr	r2, [r3, r2]
   10e34:	cmp	r2, #0
   10e38:	bxeq	lr
   10e3c:	b	10c88 <__gmon_start__@plt>
   10e40:	andeq	ip, r1, ip, asr #3
   10e44:	andeq	r0, r0, r4, ror #1
   10e48:	ldr	r0, [pc, #24]	; 10e68 <__assert_fail@plt+0x90>
   10e4c:	ldr	r3, [pc, #24]	; 10e6c <__assert_fail@plt+0x94>
   10e50:	cmp	r3, r0
   10e54:	bxeq	lr
   10e58:	ldr	r3, [pc, #16]	; 10e70 <__assert_fail@plt+0x98>
   10e5c:	cmp	r3, #0
   10e60:	bxeq	lr
   10e64:	bx	r3
   10e68:	andeq	sp, r2, r0, lsl r1
   10e6c:	andeq	sp, r2, r0, lsl r1
   10e70:	andeq	r0, r0, r0
   10e74:	ldr	r0, [pc, #36]	; 10ea0 <__assert_fail@plt+0xc8>
   10e78:	ldr	r1, [pc, #36]	; 10ea4 <__assert_fail@plt+0xcc>
   10e7c:	sub	r1, r1, r0
   10e80:	asr	r1, r1, #2
   10e84:	add	r1, r1, r1, lsr #31
   10e88:	asrs	r1, r1, #1
   10e8c:	bxeq	lr
   10e90:	ldr	r3, [pc, #16]	; 10ea8 <__assert_fail@plt+0xd0>
   10e94:	cmp	r3, #0
   10e98:	bxeq	lr
   10e9c:	bx	r3
   10ea0:	andeq	sp, r2, r0, lsl r1
   10ea4:	andeq	sp, r2, r0, lsl r1
   10ea8:	andeq	r0, r0, r0
   10eac:	push	{r4, lr}
   10eb0:	ldr	r4, [pc, #24]	; 10ed0 <__assert_fail@plt+0xf8>
   10eb4:	ldrb	r3, [r4]
   10eb8:	cmp	r3, #0
   10ebc:	popne	{r4, pc}
   10ec0:	bl	10e48 <__assert_fail@plt+0x70>
   10ec4:	mov	r3, #1
   10ec8:	strb	r3, [r4]
   10ecc:	pop	{r4, pc}
   10ed0:	andeq	sp, r2, r4, lsl r1
   10ed4:	b	10e74 <__assert_fail@plt+0x9c>
   10ed8:	str	fp, [sp, #-8]!
   10edc:	str	lr, [sp, #4]
   10ee0:	add	fp, sp, #4
   10ee4:	sub	sp, sp, #8
   10ee8:	str	r0, [fp, #-8]
   10eec:	str	r1, [fp, #-12]
   10ef0:	ldr	r1, [fp, #-12]
   10ef4:	ldr	r0, [fp, #-8]
   10ef8:	bl	10f14 <__assert_fail@plt+0x13c>
   10efc:	mov	r3, r0
   10f00:	mov	r0, r3
   10f04:	sub	sp, fp, #4
   10f08:	ldr	fp, [sp]
   10f0c:	add	sp, sp, #4
   10f10:	pop	{pc}		; (ldr pc, [sp], #4)
   10f14:	str	fp, [sp, #-8]!
   10f18:	str	lr, [sp, #4]
   10f1c:	add	fp, sp, #4
   10f20:	sub	sp, sp, #32
   10f24:	str	r0, [fp, #-32]	; 0xffffffe0
   10f28:	str	r1, [fp, #-36]	; 0xffffffdc
   10f2c:	movw	r3, #53540	; 0xd124
   10f30:	movt	r3, #2
   10f34:	mov	r2, #0
   10f38:	str	r2, [r3]
   10f3c:	movw	r3, #53612	; 0xd16c
   10f40:	movt	r3, #2
   10f44:	mov	r2, #0
   10f48:	str	r2, [r3]
   10f4c:	movw	r3, #53612	; 0xd16c
   10f50:	movt	r3, #2
   10f54:	ldr	r2, [r3]
   10f58:	movw	r3, #53604	; 0xd164
   10f5c:	movt	r3, #2
   10f60:	str	r2, [r3]
   10f64:	movw	r3, #53604	; 0xd164
   10f68:	movt	r3, #2
   10f6c:	ldr	r2, [r3]
   10f70:	movw	r3, #53656	; 0xd198
   10f74:	movt	r3, #2
   10f78:	str	r2, [r3]
   10f7c:	movw	r3, #53656	; 0xd198
   10f80:	movt	r3, #2
   10f84:	ldr	r2, [r3]
   10f88:	movw	r3, #53600	; 0xd160
   10f8c:	movt	r3, #2
   10f90:	str	r2, [r3]
   10f94:	movw	r3, #53600	; 0xd160
   10f98:	movt	r3, #2
   10f9c:	ldr	r2, [r3]
   10fa0:	movw	r3, #53620	; 0xd174
   10fa4:	movt	r3, #2
   10fa8:	str	r2, [r3]
   10fac:	movw	r3, #53672	; 0xd1a8
   10fb0:	movt	r3, #2
   10fb4:	mov	r2, #0
   10fb8:	str	r2, [r3]
   10fbc:	movw	r3, #53672	; 0xd1a8
   10fc0:	movt	r3, #2
   10fc4:	ldr	r2, [r3]
   10fc8:	movw	r3, #53640	; 0xd188
   10fcc:	movt	r3, #2
   10fd0:	str	r2, [r3]
   10fd4:	movw	r3, #53640	; 0xd188
   10fd8:	movt	r3, #2
   10fdc:	ldr	r2, [r3]
   10fe0:	movw	r3, #53676	; 0xd1ac
   10fe4:	movt	r3, #2
   10fe8:	str	r2, [r3]
   10fec:	movw	r3, #53676	; 0xd1ac
   10ff0:	movt	r3, #2
   10ff4:	ldr	r2, [r3]
   10ff8:	movw	r3, #53660	; 0xd19c
   10ffc:	movt	r3, #2
   11000:	str	r2, [r3]
   11004:	movw	r3, #53652	; 0xd194
   11008:	movt	r3, #2
   1100c:	mov	r2, #0
   11010:	str	r2, [r3]
   11014:	movw	r3, #53652	; 0xd194
   11018:	movt	r3, #2
   1101c:	ldr	r2, [r3]
   11020:	movw	r3, #53624	; 0xd178
   11024:	movt	r3, #2
   11028:	str	r2, [r3]
   1102c:	movw	r3, #53624	; 0xd178
   11030:	movt	r3, #2
   11034:	ldr	r2, [r3]
   11038:	movw	r3, #53680	; 0xd1b0
   1103c:	movt	r3, #2
   11040:	str	r2, [r3]
   11044:	movw	r3, #53596	; 0xd15c
   11048:	movt	r3, #2
   1104c:	mov	r2, #0
   11050:	str	r2, [r3]
   11054:	movw	r3, #53596	; 0xd15c
   11058:	movt	r3, #2
   1105c:	ldr	r2, [r3]
   11060:	movw	r3, #53648	; 0xd190
   11064:	movt	r3, #2
   11068:	str	r2, [r3]
   1106c:	movw	r3, #53648	; 0xd190
   11070:	movt	r3, #2
   11074:	ldr	r2, [r3]
   11078:	movw	r3, #53616	; 0xd170
   1107c:	movt	r3, #2
   11080:	str	r2, [r3]
   11084:	movw	r3, #53616	; 0xd170
   11088:	movt	r3, #2
   1108c:	ldr	r2, [r3]
   11090:	movw	r3, #53608	; 0xd168
   11094:	movt	r3, #2
   11098:	str	r2, [r3]
   1109c:	movw	r3, #53592	; 0xd158
   110a0:	movt	r3, #2
   110a4:	mov	r2, #0
   110a8:	str	r2, [r3]
   110ac:	movw	r3, #53592	; 0xd158
   110b0:	movt	r3, #2
   110b4:	ldr	r2, [r3]
   110b8:	movw	r3, #53684	; 0xd1b4
   110bc:	movt	r3, #2
   110c0:	str	r2, [r3]
   110c4:	movw	r3, #53684	; 0xd1b4
   110c8:	movt	r3, #2
   110cc:	ldr	r2, [r3]
   110d0:	movw	r3, #53664	; 0xd1a0
   110d4:	movt	r3, #2
   110d8:	str	r2, [r3]
   110dc:	movw	r3, #53664	; 0xd1a0
   110e0:	movt	r3, #2
   110e4:	ldr	r2, [r3]
   110e8:	movw	r3, #53588	; 0xd154
   110ec:	movt	r3, #2
   110f0:	str	r2, [r3]
   110f4:	movw	r3, #53632	; 0xd180
   110f8:	movt	r3, #2
   110fc:	mov	r2, #0
   11100:	str	r2, [r3]
   11104:	movw	r3, #53632	; 0xd180
   11108:	movt	r3, #2
   1110c:	ldr	r2, [r3]
   11110:	movw	r3, #53644	; 0xd18c
   11114:	movt	r3, #2
   11118:	str	r2, [r3]
   1111c:	movw	r3, #53644	; 0xd18c
   11120:	movt	r3, #2
   11124:	ldr	r2, [r3]
   11128:	movw	r3, #53628	; 0xd17c
   1112c:	movt	r3, #2
   11130:	str	r2, [r3]
   11134:	mov	r0, #1
   11138:	bl	10d84 <isatty@plt>
   1113c:	mov	r3, r0
   11140:	cmp	r3, #0
   11144:	beq	111ec <__assert_fail@plt+0x414>
   11148:	movw	r0, #48404	; 0xbd14
   1114c:	movt	r0, #1
   11150:	bl	10c58 <getenv@plt>
   11154:	str	r0, [fp, #-12]
   11158:	ldr	r3, [fp, #-12]
   1115c:	cmp	r3, #0
   11160:	beq	11180 <__assert_fail@plt+0x3a8>
   11164:	ldr	r0, [fp, #-12]
   11168:	bl	10d54 <atoi@plt>
   1116c:	mov	r2, r0
   11170:	movw	r3, #53488	; 0xd0f0
   11174:	movt	r3, #2
   11178:	str	r2, [r3]
   1117c:	b	111c0 <__assert_fail@plt+0x3e8>
   11180:	sub	r3, fp, #24
   11184:	mov	r2, r3
   11188:	movw	r1, #21523	; 0x5413
   1118c:	mov	r0, #1
   11190:	bl	1abec <__assert_fail@plt+0x9e14>
   11194:	mov	r3, r0
   11198:	cmp	r3, #0
   1119c:	bne	111c0 <__assert_fail@plt+0x3e8>
   111a0:	ldrh	r3, [fp, #-22]	; 0xffffffea
   111a4:	cmp	r3, #0
   111a8:	beq	111c0 <__assert_fail@plt+0x3e8>
   111ac:	ldrh	r3, [fp, #-22]	; 0xffffffea
   111b0:	mov	r2, r3
   111b4:	movw	r3, #53488	; 0xd0f0
   111b8:	movt	r3, #2
   111bc:	str	r2, [r3]
   111c0:	movw	r3, #53680	; 0xd1b0
   111c4:	movt	r3, #2
   111c8:	mov	r2, #1
   111cc:	str	r2, [r3]
   111d0:	movw	r3, #53680	; 0xd1b0
   111d4:	movt	r3, #2
   111d8:	ldr	r2, [r3]
   111dc:	movw	r3, #53600	; 0xd160
   111e0:	movt	r3, #2
   111e4:	str	r2, [r3]
   111e8:	b	111fc <__assert_fail@plt+0x424>
   111ec:	movw	r3, #53596	; 0xd15c
   111f0:	movt	r3, #2
   111f4:	mov	r2, #1
   111f8:	str	r2, [r3]
   111fc:	bl	10ba4 <getuid@plt>
   11200:	mov	r3, r0
   11204:	cmp	r3, #0
   11208:	bne	1121c <__assert_fail@plt+0x444>
   1120c:	movw	r3, #53676	; 0xd1ac
   11210:	movt	r3, #2
   11214:	mov	r2, #1
   11218:	str	r2, [r3]
   1121c:	movw	r3, #53508	; 0xd104
   11220:	movt	r3, #2
   11224:	mov	r2, #1
   11228:	str	r2, [r3]
   1122c:	mov	r3, #20
   11230:	str	r3, [fp, #-8]
   11234:	b	117e0 <__assert_fail@plt+0xa08>
   11238:	ldr	r3, [fp, #-16]
   1123c:	sub	r3, r3, #49	; 0x31
   11240:	cmp	r3, #71	; 0x47
   11244:	ldrls	pc, [pc, r3, lsl #2]
   11248:	b	117d4 <__assert_fail@plt+0x9fc>
   1124c:	andeq	r1, r1, ip, ror #6
   11250:	ldrdeq	r1, [r1], -r4
   11254:	ldrdeq	r1, [r1], -r4
   11258:	ldrdeq	r1, [r1], -r4
   1125c:	ldrdeq	r1, [r1], -r4
   11260:	ldrdeq	r1, [r1], -r4
   11264:	ldrdeq	r1, [r1], -r4
   11268:	ldrdeq	r1, [r1], -r4
   1126c:	ldrdeq	r1, [r1], -r4
   11270:	ldrdeq	r1, [r1], -r4
   11274:	ldrdeq	r1, [r1], -r4
   11278:	ldrdeq	r1, [r1], -r4
   1127c:	ldrdeq	r1, [r1], -r4
   11280:	ldrdeq	r1, [r1], -r4
   11284:	ldrdeq	r1, [r1], -r4
   11288:	ldrdeq	r1, [r1], -r4
   1128c:	andeq	r1, r1, ip, lsr #13
   11290:	ldrdeq	r1, [r1], -r4
   11294:	ldrdeq	r1, [r1], -r8
   11298:	ldrdeq	r1, [r1], -r4
   1129c:	ldrdeq	r1, [r1], -r4
   112a0:	andeq	r1, r1, ip, asr r6
   112a4:	ldrdeq	r1, [r1], -r4
   112a8:	ldrdeq	r1, [r1], -r4
   112ac:	ldrdeq	r1, [r1], -r4
   112b0:	ldrdeq	r1, [r1], -r4
   112b4:	ldrdeq	r1, [r1], -r4
   112b8:	andeq	r1, r1, r0, ror r6
   112bc:	ldrdeq	r1, [r1], -r4
   112c0:	ldrdeq	r1, [r1], -r4
   112c4:	ldrdeq	r1, [r1], -r4
   112c8:	ldrdeq	r1, [r1], -r4
   112cc:	ldrdeq	r1, [r1], -r4
   112d0:	andeq	r1, r1, ip, lsl #13
   112d4:	andeq	r1, r1, r0, ror r7
   112d8:	muleq	r1, r8, r7
   112dc:	ldrdeq	r1, [r1], -r4
   112e0:	ldrdeq	r1, [r1], -r4
   112e4:	andeq	r1, r1, r0, asr #15
   112e8:	ldrdeq	r1, [r1], -r4
   112ec:	ldrdeq	r1, [r1], -r4
   112f0:	ldrdeq	r1, [r1], -r4
   112f4:	ldrdeq	r1, [r1], -r4
   112f8:	ldrdeq	r1, [r1], -r4
   112fc:	ldrdeq	r1, [r1], -r4
   11300:	ldrdeq	r1, [r1], -r4
   11304:	ldrdeq	r1, [r1], -r4
   11308:	ldrdeq	r1, [r1], -r4
   1130c:	andeq	r1, r1, r0, lsr #13
   11310:	ldrdeq	r1, [r1], -r4
   11314:	andeq	r1, r1, r4, lsl r6
   11318:	andeq	r1, r1, r0, asr #13
   1131c:	ldrdeq	r1, [r1], -r4
   11320:	andeq	r1, r1, r4, ror #13
   11324:	andeq	r1, r1, r0, ror #15
   11328:	ldrdeq	r1, [r1], -r4
   1132c:	strdeq	r1, [r1], -r8
   11330:	ldrdeq	r1, [r1], -r4
   11334:	andeq	r1, r1, ip, lsl #14
   11338:	andeq	r1, r1, r4, asr #8
   1133c:	andeq	r1, r1, r0, asr #9
   11340:	muleq	r1, r8, r5
   11344:	andeq	r1, r1, r0, lsr #14
   11348:	andeq	r1, r1, r4, lsr r7
   1134c:	andeq	r1, r1, r8, asr #14
   11350:	andeq	r1, r1, ip, asr r7
   11354:	andeq	r1, r1, r4, lsl #15
   11358:	andeq	r1, r1, ip, lsr #15
   1135c:	andeq	r1, r1, r8, lsr r6
   11360:	ldrdeq	r1, [r1], -r4
   11364:	ldrdeq	r1, [r1], -r4
   11368:	andeq	r1, r1, ip, lsr #10
   1136c:	movw	r3, #53596	; 0xd15c
   11370:	movt	r3, #2
   11374:	mov	r2, #1
   11378:	str	r2, [r3]
   1137c:	movw	r3, #53684	; 0xd1b4
   11380:	movt	r3, #2
   11384:	mov	r2, #0
   11388:	str	r2, [r3]
   1138c:	movw	r3, #53684	; 0xd1b4
   11390:	movt	r3, #2
   11394:	ldr	r2, [r3]
   11398:	movw	r3, #53640	; 0xd188
   1139c:	movt	r3, #2
   113a0:	str	r2, [r3]
   113a4:	movw	r3, #53640	; 0xd188
   113a8:	movt	r3, #2
   113ac:	ldr	r2, [r3]
   113b0:	movw	r3, #53656	; 0xd198
   113b4:	movt	r3, #2
   113b8:	str	r2, [r3]
   113bc:	movw	r3, #53656	; 0xd198
   113c0:	movt	r3, #2
   113c4:	ldr	r2, [r3]
   113c8:	movw	r3, #53600	; 0xd160
   113cc:	movt	r3, #2
   113d0:	str	r2, [r3]
   113d4:	b	117e0 <__assert_fail@plt+0xa08>
   113d8:	movw	r3, #53600	; 0xd160
   113dc:	movt	r3, #2
   113e0:	mov	r2, #1
   113e4:	str	r2, [r3]
   113e8:	movw	r3, #53684	; 0xd1b4
   113ec:	movt	r3, #2
   113f0:	mov	r2, #0
   113f4:	str	r2, [r3]
   113f8:	movw	r3, #53684	; 0xd1b4
   113fc:	movt	r3, #2
   11400:	ldr	r2, [r3]
   11404:	movw	r3, #53596	; 0xd15c
   11408:	movt	r3, #2
   1140c:	str	r2, [r3]
   11410:	movw	r3, #53596	; 0xd15c
   11414:	movt	r3, #2
   11418:	ldr	r2, [r3]
   1141c:	movw	r3, #53656	; 0xd198
   11420:	movt	r3, #2
   11424:	str	r2, [r3]
   11428:	movw	r3, #53656	; 0xd198
   1142c:	movt	r3, #2
   11430:	ldr	r2, [r3]
   11434:	movw	r3, #53640	; 0xd188
   11438:	movt	r3, #2
   1143c:	str	r2, [r3]
   11440:	b	117e0 <__assert_fail@plt+0xa08>
   11444:	movw	r3, #53640	; 0xd188
   11448:	movt	r3, #2
   1144c:	mov	r2, #1
   11450:	str	r2, [r3]
   11454:	movw	r3, #53652	; 0xd194
   11458:	movt	r3, #2
   1145c:	mov	r2, #0
   11460:	str	r2, [r3]
   11464:	movw	r3, #53684	; 0xd1b4
   11468:	movt	r3, #2
   1146c:	mov	r2, #0
   11470:	str	r2, [r3]
   11474:	movw	r3, #53684	; 0xd1b4
   11478:	movt	r3, #2
   1147c:	ldr	r2, [r3]
   11480:	movw	r3, #53596	; 0xd15c
   11484:	movt	r3, #2
   11488:	str	r2, [r3]
   1148c:	movw	r3, #53596	; 0xd15c
   11490:	movt	r3, #2
   11494:	ldr	r2, [r3]
   11498:	movw	r3, #53656	; 0xd198
   1149c:	movt	r3, #2
   114a0:	str	r2, [r3]
   114a4:	movw	r3, #53656	; 0xd198
   114a8:	movt	r3, #2
   114ac:	ldr	r2, [r3]
   114b0:	movw	r3, #53600	; 0xd160
   114b4:	movt	r3, #2
   114b8:	str	r2, [r3]
   114bc:	b	117e0 <__assert_fail@plt+0xa08>
   114c0:	movw	r3, #53684	; 0xd1b4
   114c4:	movt	r3, #2
   114c8:	mov	r2, #1
   114cc:	str	r2, [r3]
   114d0:	movw	r3, #53596	; 0xd15c
   114d4:	movt	r3, #2
   114d8:	mov	r2, #0
   114dc:	str	r2, [r3]
   114e0:	movw	r3, #53596	; 0xd15c
   114e4:	movt	r3, #2
   114e8:	ldr	r2, [r3]
   114ec:	movw	r3, #53640	; 0xd188
   114f0:	movt	r3, #2
   114f4:	str	r2, [r3]
   114f8:	movw	r3, #53640	; 0xd188
   114fc:	movt	r3, #2
   11500:	ldr	r2, [r3]
   11504:	movw	r3, #53656	; 0xd198
   11508:	movt	r3, #2
   1150c:	str	r2, [r3]
   11510:	movw	r3, #53656	; 0xd198
   11514:	movt	r3, #2
   11518:	ldr	r2, [r3]
   1151c:	movw	r3, #53600	; 0xd160
   11520:	movt	r3, #2
   11524:	str	r2, [r3]
   11528:	b	117e0 <__assert_fail@plt+0xa08>
   1152c:	movw	r3, #53656	; 0xd198
   11530:	movt	r3, #2
   11534:	mov	r2, #1
   11538:	str	r2, [r3]
   1153c:	movw	r3, #53684	; 0xd1b4
   11540:	movt	r3, #2
   11544:	mov	r2, #0
   11548:	str	r2, [r3]
   1154c:	movw	r3, #53684	; 0xd1b4
   11550:	movt	r3, #2
   11554:	ldr	r2, [r3]
   11558:	movw	r3, #53596	; 0xd15c
   1155c:	movt	r3, #2
   11560:	str	r2, [r3]
   11564:	movw	r3, #53596	; 0xd15c
   11568:	movt	r3, #2
   1156c:	ldr	r2, [r3]
   11570:	movw	r3, #53640	; 0xd188
   11574:	movt	r3, #2
   11578:	str	r2, [r3]
   1157c:	movw	r3, #53640	; 0xd188
   11580:	movt	r3, #2
   11584:	ldr	r2, [r3]
   11588:	movw	r3, #53600	; 0xd160
   1158c:	movt	r3, #2
   11590:	str	r2, [r3]
   11594:	b	117e0 <__assert_fail@plt+0xa08>
   11598:	movw	r3, #53640	; 0xd188
   1159c:	movt	r3, #2
   115a0:	mov	r2, #1
   115a4:	str	r2, [r3]
   115a8:	movw	r3, #53652	; 0xd194
   115ac:	movt	r3, #2
   115b0:	mov	r2, #1
   115b4:	str	r2, [r3]
   115b8:	movw	r3, #53684	; 0xd1b4
   115bc:	movt	r3, #2
   115c0:	mov	r2, #0
   115c4:	str	r2, [r3]
   115c8:	movw	r3, #53684	; 0xd1b4
   115cc:	movt	r3, #2
   115d0:	ldr	r2, [r3]
   115d4:	movw	r3, #53596	; 0xd15c
   115d8:	movt	r3, #2
   115dc:	str	r2, [r3]
   115e0:	movw	r3, #53596	; 0xd15c
   115e4:	movt	r3, #2
   115e8:	ldr	r2, [r3]
   115ec:	movw	r3, #53656	; 0xd198
   115f0:	movt	r3, #2
   115f4:	str	r2, [r3]
   115f8:	movw	r3, #53656	; 0xd198
   115fc:	movt	r3, #2
   11600:	ldr	r2, [r3]
   11604:	movw	r3, #53600	; 0xd160
   11608:	movt	r3, #2
   1160c:	str	r2, [r3]
   11610:	b	117e0 <__assert_fail@plt+0xa08>
   11614:	movw	r3, #53664	; 0xd1a0
   11618:	movt	r3, #2
   1161c:	mov	r2, #1
   11620:	str	r2, [r3]
   11624:	movw	r3, #53620	; 0xd174
   11628:	movt	r3, #2
   1162c:	mov	r2, #0
   11630:	str	r2, [r3]
   11634:	b	117e0 <__assert_fail@plt+0xa08>
   11638:	movw	r3, #53620	; 0xd174
   1163c:	movt	r3, #2
   11640:	mov	r2, #1
   11644:	str	r2, [r3]
   11648:	movw	r3, #53664	; 0xd1a0
   1164c:	movt	r3, #2
   11650:	mov	r2, #0
   11654:	str	r2, [r3]
   11658:	b	117e0 <__assert_fail@plt+0xa08>
   1165c:	movw	r3, #53628	; 0xd17c
   11660:	movt	r3, #2
   11664:	mov	r2, #1
   11668:	str	r2, [r3]
   1166c:	b	117e0 <__assert_fail@plt+0xa08>
   11670:	ldr	r3, [fp, #-8]
   11674:	bic	r3, r3, #16
   11678:	str	r3, [fp, #-8]
   1167c:	ldr	r3, [fp, #-8]
   11680:	orr	r3, r3, #2
   11684:	str	r3, [fp, #-8]
   11688:	b	117e0 <__assert_fail@plt+0xa08>
   1168c:	movw	r3, #53608	; 0xd168
   11690:	movt	r3, #2
   11694:	mov	r2, #1
   11698:	str	r2, [r3]
   1169c:	b	117e0 <__assert_fail@plt+0xa08>
   116a0:	ldr	r3, [fp, #-8]
   116a4:	orr	r3, r3, #32
   116a8:	str	r3, [fp, #-8]
   116ac:	movw	r3, #53676	; 0xd1ac
   116b0:	movt	r3, #2
   116b4:	mov	r2, #1
   116b8:	str	r2, [r3]
   116bc:	b	117e0 <__assert_fail@plt+0xa08>
   116c0:	movw	r3, #53660	; 0xd19c
   116c4:	movt	r3, #2
   116c8:	mov	r2, #1
   116cc:	str	r2, [r3]
   116d0:	movw	r3, #53608	; 0xd168
   116d4:	movt	r3, #2
   116d8:	mov	r2, #0
   116dc:	str	r2, [r3]
   116e0:	b	117e0 <__assert_fail@plt+0xa08>
   116e4:	movw	r3, #53624	; 0xd178
   116e8:	movt	r3, #2
   116ec:	mov	r2, #1
   116f0:	str	r2, [r3]
   116f4:	b	117e0 <__assert_fail@plt+0xa08>
   116f8:	movw	r3, #53612	; 0xd16c
   116fc:	movt	r3, #2
   11700:	mov	r2, #1
   11704:	str	r2, [r3]
   11708:	b	117e0 <__assert_fail@plt+0xa08>
   1170c:	movw	r3, #53668	; 0xd1a4
   11710:	movt	r3, #2
   11714:	mov	r2, #1024	; 0x400
   11718:	str	r2, [r3]
   1171c:	b	117e0 <__assert_fail@plt+0xa08>
   11720:	movw	r3, #53604	; 0xd164
   11724:	movt	r3, #2
   11728:	mov	r2, #1
   1172c:	str	r2, [r3]
   11730:	b	117e0 <__assert_fail@plt+0xa08>
   11734:	movw	r3, #53644	; 0xd18c
   11738:	movt	r3, #2
   1173c:	mov	r2, #1
   11740:	str	r2, [r3]
   11744:	b	117e0 <__assert_fail@plt+0xa08>
   11748:	movw	r3, #53680	; 0xd1b0
   1174c:	movt	r3, #2
   11750:	mov	r2, #1
   11754:	str	r2, [r3]
   11758:	b	117e0 <__assert_fail@plt+0xa08>
   1175c:	movw	r3, #53616	; 0xd170
   11760:	movt	r3, #2
   11764:	mov	r2, #1
   11768:	str	r2, [r3]
   1176c:	b	117e0 <__assert_fail@plt+0xa08>
   11770:	movw	r3, #53528	; 0xd118
   11774:	movt	r3, #2
   11778:	mov	r2, #1
   1177c:	str	r2, [r3]
   11780:	b	117e0 <__assert_fail@plt+0xa08>
   11784:	movw	r3, #53588	; 0xd154
   11788:	movt	r3, #2
   1178c:	mov	r2, #1
   11790:	str	r2, [r3]
   11794:	b	117e0 <__assert_fail@plt+0xa08>
   11798:	movw	r3, #53648	; 0xd190
   1179c:	movt	r3, #2
   117a0:	mov	r2, #1
   117a4:	str	r2, [r3]
   117a8:	b	117e0 <__assert_fail@plt+0xa08>
   117ac:	movw	r3, #53528	; 0xd118
   117b0:	movt	r3, #2
   117b4:	mov	r2, #2
   117b8:	str	r2, [r3]
   117bc:	b	117e0 <__assert_fail@plt+0xa08>
   117c0:	movw	r3, #53632	; 0xd180
   117c4:	movt	r3, #2
   117c8:	mov	r2, #1
   117cc:	str	r2, [r3]
   117d0:	b	117e0 <__assert_fail@plt+0xa08>
   117d4:	bl	13ab0 <__assert_fail@plt+0x2cd8>
   117d8:	mov	r3, r0
   117dc:	b	11c34 <__assert_fail@plt+0xe5c>
   117e0:	movw	r2, #48412	; 0xbd1c
   117e4:	movt	r2, #1
   117e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   117ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   117f0:	bl	18c6c <__assert_fail@plt+0x7e94>
   117f4:	str	r0, [fp, #-16]
   117f8:	ldr	r3, [fp, #-16]
   117fc:	cmn	r3, #1
   11800:	bne	11238 <__assert_fail@plt+0x460>
   11804:	movw	r3, #53508	; 0xd104
   11808:	movt	r3, #2
   1180c:	ldr	r3, [r3]
   11810:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11814:	sub	r3, r2, r3
   11818:	str	r3, [fp, #-32]	; 0xffffffe0
   1181c:	movw	r3, #53508	; 0xd104
   11820:	movt	r3, #2
   11824:	ldr	r3, [r3]
   11828:	lsl	r3, r3, #2
   1182c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11830:	add	r3, r2, r3
   11834:	str	r3, [fp, #-36]	; 0xffffffdc
   11838:	movw	r3, #53640	; 0xd188
   1183c:	movt	r3, #2
   11840:	ldr	r3, [r3]
   11844:	cmp	r3, #0
   11848:	bne	118bc <__assert_fail@plt+0xae4>
   1184c:	movw	r3, #53612	; 0xd16c
   11850:	movt	r3, #2
   11854:	ldr	r3, [r3]
   11858:	cmp	r3, #0
   1185c:	bne	118bc <__assert_fail@plt+0xae4>
   11860:	movw	r3, #53588	; 0xd154
   11864:	movt	r3, #2
   11868:	ldr	r3, [r3]
   1186c:	cmp	r3, #0
   11870:	bne	118bc <__assert_fail@plt+0xae4>
   11874:	movw	r3, #53628	; 0xd17c
   11878:	movt	r3, #2
   1187c:	ldr	r3, [r3]
   11880:	cmp	r3, #0
   11884:	bne	118bc <__assert_fail@plt+0xae4>
   11888:	movw	r3, #53644	; 0xd18c
   1188c:	movt	r3, #2
   11890:	ldr	r3, [r3]
   11894:	cmp	r3, #0
   11898:	bne	118bc <__assert_fail@plt+0xae4>
   1189c:	movw	r3, #53528	; 0xd118
   118a0:	movt	r3, #2
   118a4:	ldr	r3, [r3]
   118a8:	cmp	r3, #0
   118ac:	bne	118bc <__assert_fail@plt+0xae4>
   118b0:	ldr	r3, [fp, #-8]
   118b4:	orr	r3, r3, #8
   118b8:	str	r3, [fp, #-8]
   118bc:	movw	r3, #53640	; 0xd188
   118c0:	movt	r3, #2
   118c4:	ldr	r3, [r3]
   118c8:	cmp	r3, #0
   118cc:	bne	11904 <__assert_fail@plt+0xb2c>
   118d0:	movw	r3, #53660	; 0xd19c
   118d4:	movt	r3, #2
   118d8:	ldr	r3, [r3]
   118dc:	cmp	r3, #0
   118e0:	bne	11904 <__assert_fail@plt+0xb2c>
   118e4:	movw	r3, #53628	; 0xd17c
   118e8:	movt	r3, #2
   118ec:	ldr	r3, [r3]
   118f0:	cmp	r3, #0
   118f4:	bne	11904 <__assert_fail@plt+0xb2c>
   118f8:	ldr	r3, [fp, #-8]
   118fc:	orr	r3, r3, #1
   11900:	str	r3, [fp, #-8]
   11904:	movw	r3, #53632	; 0xd180
   11908:	movt	r3, #2
   1190c:	ldr	r3, [r3]
   11910:	cmp	r3, #0
   11914:	beq	11924 <__assert_fail@plt+0xb4c>
   11918:	ldr	r3, [fp, #-8]
   1191c:	orr	r3, r3, #128	; 0x80
   11920:	str	r3, [fp, #-8]
   11924:	movw	r3, #53640	; 0xd188
   11928:	movt	r3, #2
   1192c:	ldr	r3, [r3]
   11930:	cmp	r3, #0
   11934:	bne	1194c <__assert_fail@plt+0xb74>
   11938:	movw	r3, #53588	; 0xd154
   1193c:	movt	r3, #2
   11940:	ldr	r3, [r3]
   11944:	cmp	r3, #0
   11948:	beq	11990 <__assert_fail@plt+0xbb8>
   1194c:	movw	r3, #53668	; 0xd1a4
   11950:	movt	r3, #2
   11954:	mov	r2, #1024	; 0x400
   11958:	str	r2, [r3]
   1195c:	movw	r3, #53668	; 0xd1a4
   11960:	movt	r3, #2
   11964:	ldr	r3, [r3]
   11968:	add	r2, r3, #508	; 0x1fc
   1196c:	add	r2, r2, #3
   11970:	cmp	r3, #0
   11974:	movlt	r3, r2
   11978:	movge	r3, r3
   1197c:	asr	r3, r3, #9
   11980:	mov	r2, r3
   11984:	movw	r3, #53668	; 0xd1a4
   11988:	movt	r3, #2
   1198c:	str	r2, [r3]
   11990:	movw	r3, #53616	; 0xd170
   11994:	movt	r3, #2
   11998:	ldr	r3, [r3]
   1199c:	cmp	r3, #0
   119a0:	beq	11a6c <__assert_fail@plt+0xc94>
   119a4:	movw	r3, #53528	; 0xd118
   119a8:	movt	r3, #2
   119ac:	ldr	r3, [r3]
   119b0:	cmp	r3, #1
   119b4:	beq	119e0 <__assert_fail@plt+0xc08>
   119b8:	cmp	r3, #2
   119bc:	beq	119f8 <__assert_fail@plt+0xc20>
   119c0:	cmp	r3, #0
   119c4:	bne	11b30 <__assert_fail@plt+0xd58>
   119c8:	movw	r3, #53536	; 0xd120
   119cc:	movt	r3, #2
   119d0:	movw	r2, #15168	; 0x3b40
   119d4:	movt	r2, #1
   119d8:	str	r2, [r3]
   119dc:	b	11b30 <__assert_fail@plt+0xd58>
   119e0:	movw	r3, #53536	; 0xd120
   119e4:	movt	r3, #2
   119e8:	movw	r2, #16228	; 0x3f64
   119ec:	movt	r2, #1
   119f0:	str	r2, [r3]
   119f4:	b	11b30 <__assert_fail@plt+0xd58>
   119f8:	movw	r3, #53620	; 0xd174
   119fc:	movt	r3, #2
   11a00:	ldr	r3, [r3]
   11a04:	cmp	r3, #0
   11a08:	beq	11a24 <__assert_fail@plt+0xc4c>
   11a0c:	movw	r3, #53536	; 0xd120
   11a10:	movt	r3, #2
   11a14:	movw	r2, #15748	; 0x3d84
   11a18:	movt	r2, #1
   11a1c:	str	r2, [r3]
   11a20:	b	11b30 <__assert_fail@plt+0xd58>
   11a24:	movw	r3, #53664	; 0xd1a0
   11a28:	movt	r3, #2
   11a2c:	ldr	r3, [r3]
   11a30:	cmp	r3, #0
   11a34:	beq	11a50 <__assert_fail@plt+0xc78>
   11a38:	movw	r3, #53536	; 0xd120
   11a3c:	movt	r3, #2
   11a40:	movw	r2, #16032	; 0x3ea0
   11a44:	movt	r2, #1
   11a48:	str	r2, [r3]
   11a4c:	b	11b30 <__assert_fail@plt+0xd58>
   11a50:	movw	r3, #53536	; 0xd120
   11a54:	movt	r3, #2
   11a58:	movw	r2, #15464	; 0x3c68
   11a5c:	movt	r2, #1
   11a60:	str	r2, [r3]
   11a64:	nop	{0}
   11a68:	b	11b30 <__assert_fail@plt+0xd58>
   11a6c:	movw	r3, #53528	; 0xd118
   11a70:	movt	r3, #2
   11a74:	ldr	r3, [r3]
   11a78:	cmp	r3, #1
   11a7c:	beq	11aa8 <__assert_fail@plt+0xcd0>
   11a80:	cmp	r3, #2
   11a84:	beq	11ac0 <__assert_fail@plt+0xce8>
   11a88:	cmp	r3, #0
   11a8c:	bne	11b30 <__assert_fail@plt+0xd58>
   11a90:	movw	r3, #53536	; 0xd120
   11a94:	movt	r3, #2
   11a98:	movw	r2, #15092	; 0x3af4
   11a9c:	movt	r2, #1
   11aa0:	str	r2, [r3]
   11aa4:	b	11b30 <__assert_fail@plt+0xd58>
   11aa8:	movw	r3, #53536	; 0xd120
   11aac:	movt	r3, #2
   11ab0:	movw	r2, #16096	; 0x3ee0
   11ab4:	movt	r2, #1
   11ab8:	str	r2, [r3]
   11abc:	b	11b30 <__assert_fail@plt+0xd58>
   11ac0:	movw	r3, #53620	; 0xd174
   11ac4:	movt	r3, #2
   11ac8:	ldr	r3, [r3]
   11acc:	cmp	r3, #0
   11ad0:	beq	11aec <__assert_fail@plt+0xd14>
   11ad4:	movw	r3, #53536	; 0xd120
   11ad8:	movt	r3, #2
   11adc:	movw	r2, #15528	; 0x3ca8
   11ae0:	movt	r2, #1
   11ae4:	str	r2, [r3]
   11ae8:	b	11b2c <__assert_fail@plt+0xd54>
   11aec:	movw	r3, #53664	; 0xd1a0
   11af0:	movt	r3, #2
   11af4:	ldr	r3, [r3]
   11af8:	cmp	r3, #0
   11afc:	beq	11b18 <__assert_fail@plt+0xd40>
   11b00:	movw	r3, #53536	; 0xd120
   11b04:	movt	r3, #2
   11b08:	movw	r2, #15812	; 0x3dc4
   11b0c:	movt	r2, #1
   11b10:	str	r2, [r3]
   11b14:	b	11b2c <__assert_fail@plt+0xd54>
   11b18:	movw	r3, #53536	; 0xd120
   11b1c:	movt	r3, #2
   11b20:	movw	r2, #15244	; 0x3b8c
   11b24:	movt	r2, #1
   11b28:	str	r2, [r3]
   11b2c:	nop	{0}
   11b30:	movw	r3, #53596	; 0xd15c
   11b34:	movt	r3, #2
   11b38:	ldr	r3, [r3]
   11b3c:	cmp	r3, #0
   11b40:	beq	11b5c <__assert_fail@plt+0xd84>
   11b44:	movw	r3, #53532	; 0xd11c
   11b48:	movt	r3, #2
   11b4c:	movw	r2, #10360	; 0x2878
   11b50:	movt	r2, #1
   11b54:	str	r2, [r3]
   11b58:	b	11bf4 <__assert_fail@plt+0xe1c>
   11b5c:	movw	r3, #53656	; 0xd198
   11b60:	movt	r3, #2
   11b64:	ldr	r3, [r3]
   11b68:	cmp	r3, #0
   11b6c:	beq	11b88 <__assert_fail@plt+0xdb0>
   11b70:	movw	r3, #53532	; 0xd11c
   11b74:	movt	r3, #2
   11b78:	movw	r2, #13428	; 0x3474
   11b7c:	movt	r2, #1
   11b80:	str	r2, [r3]
   11b84:	b	11bf4 <__assert_fail@plt+0xe1c>
   11b88:	movw	r3, #53640	; 0xd188
   11b8c:	movt	r3, #2
   11b90:	ldr	r3, [r3]
   11b94:	cmp	r3, #0
   11b98:	beq	11bb4 <__assert_fail@plt+0xddc>
   11b9c:	movw	r3, #53532	; 0xd11c
   11ba0:	movt	r3, #2
   11ba4:	movw	r2, #10504	; 0x2908
   11ba8:	movt	r2, #1
   11bac:	str	r2, [r3]
   11bb0:	b	11bf4 <__assert_fail@plt+0xe1c>
   11bb4:	movw	r3, #53684	; 0xd1b4
   11bb8:	movt	r3, #2
   11bbc:	ldr	r3, [r3]
   11bc0:	cmp	r3, #0
   11bc4:	beq	11be0 <__assert_fail@plt+0xe08>
   11bc8:	movw	r3, #53532	; 0xd11c
   11bcc:	movt	r3, #2
   11bd0:	movw	r2, #13840	; 0x3610
   11bd4:	movt	r2, #1
   11bd8:	str	r2, [r3]
   11bdc:	b	11bf4 <__assert_fail@plt+0xe1c>
   11be0:	movw	r3, #53532	; 0xd11c
   11be4:	movt	r3, #2
   11be8:	movw	r2, #11844	; 0x2e44
   11bec:	movt	r2, #1
   11bf0:	str	r2, [r3]
   11bf4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11bf8:	cmp	r3, #0
   11bfc:	beq	11c14 <__assert_fail@plt+0xe3c>
   11c00:	ldr	r2, [fp, #-8]
   11c04:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11c08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11c0c:	bl	11c48 <__assert_fail@plt+0xe70>
   11c10:	b	11c28 <__assert_fail@plt+0xe50>
   11c14:	ldr	r2, [fp, #-8]
   11c18:	movw	r1, #53492	; 0xd0f4
   11c1c:	movt	r1, #2
   11c20:	mov	r0, #1
   11c24:	bl	11c48 <__assert_fail@plt+0xe70>
   11c28:	movw	r3, #53636	; 0xd184
   11c2c:	movt	r3, #2
   11c30:	ldr	r3, [r3]
   11c34:	mov	r0, r3
   11c38:	sub	sp, fp, #4
   11c3c:	ldr	fp, [sp]
   11c40:	add	sp, sp, #4
   11c44:	pop	{pc}		; (ldr pc, [sp], #4)
   11c48:	strd	r4, [sp, #-16]!
   11c4c:	str	fp, [sp, #8]
   11c50:	str	lr, [sp, #12]
   11c54:	add	fp, sp, #12
   11c58:	sub	sp, sp, #32
   11c5c:	str	r0, [fp, #-32]	; 0xffffffe0
   11c60:	str	r1, [fp, #-36]	; 0xffffffdc
   11c64:	str	r2, [fp, #-40]	; 0xffffffd8
   11c68:	movw	r3, #53624	; 0xd178
   11c6c:	movt	r3, #2
   11c70:	ldr	r3, [r3]
   11c74:	cmp	r3, #0
   11c78:	bne	11c88 <__assert_fail@plt+0xeb0>
   11c7c:	movw	r3, #10008	; 0x2718
   11c80:	movt	r3, #1
   11c84:	b	11c8c <__assert_fail@plt+0xeb4>
   11c88:	mov	r3, #0
   11c8c:	mov	r2, r3
   11c90:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11c94:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11c98:	bl	14b74 <__assert_fail@plt+0x3d9c>
   11c9c:	str	r0, [fp, #-16]
   11ca0:	ldr	r3, [fp, #-16]
   11ca4:	cmp	r3, #0
   11ca8:	bne	11d00 <__assert_fail@plt+0xf28>
   11cac:	movw	r3, #53520	; 0xd110
   11cb0:	movt	r3, #2
   11cb4:	ldr	r4, [r3]
   11cb8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11cbc:	ldr	r5, [r3]
   11cc0:	bl	10cd0 <__errno_location@plt>
   11cc4:	mov	r3, r0
   11cc8:	ldr	r3, [r3]
   11ccc:	mov	r0, r3
   11cd0:	bl	10c7c <strerror@plt>
   11cd4:	mov	r3, r0
   11cd8:	mov	r2, r5
   11cdc:	movw	r1, #48440	; 0xbd38
   11ce0:	movt	r1, #1
   11ce4:	mov	r0, r4
   11ce8:	bl	10cc4 <fprintf@plt>
   11cec:	movw	r3, #53636	; 0xd184
   11cf0:	movt	r3, #2
   11cf4:	mov	r2, #1
   11cf8:	str	r2, [r3]
   11cfc:	b	11f80 <__assert_fail@plt+0x11a8>
   11d00:	mov	r1, #0
   11d04:	ldr	r0, [fp, #-16]
   11d08:	bl	15e90 <__assert_fail@plt+0x50b8>
   11d0c:	mov	r3, r0
   11d10:	mov	r1, r3
   11d14:	mov	r0, #0
   11d18:	bl	11f94 <__assert_fail@plt+0x11bc>
   11d1c:	movw	r3, #53660	; 0xd19c
   11d20:	movt	r3, #2
   11d24:	ldr	r3, [r3]
   11d28:	cmp	r3, #0
   11d2c:	bne	11f7c <__assert_fail@plt+0x11a4>
   11d30:	movw	r3, #53608	; 0xd168
   11d34:	movt	r3, #2
   11d38:	ldr	r3, [r3]
   11d3c:	cmp	r3, #0
   11d40:	bne	11d5c <__assert_fail@plt+0xf84>
   11d44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11d48:	and	r3, r3, #8
   11d4c:	cmp	r3, #0
   11d50:	beq	11d5c <__assert_fail@plt+0xf84>
   11d54:	mov	r3, #4096	; 0x1000
   11d58:	b	11d60 <__assert_fail@plt+0xf88>
   11d5c:	mov	r3, #0
   11d60:	str	r3, [fp, #-20]	; 0xffffffec
   11d64:	b	11f00 <__assert_fail@plt+0x1128>
   11d68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11d6c:	ldrh	r3, [r3, #56]	; 0x38
   11d70:	sub	r3, r3, #1
   11d74:	cmp	r3, #6
   11d78:	ldrls	pc, [pc, r3, lsl #2]
   11d7c:	b	11f00 <__assert_fail@plt+0x1128>
   11d80:	muleq	r1, ip, sp
   11d84:	andeq	r1, r1, r8, lsl #29
   11d88:	andeq	r1, r1, r0, lsl #30
   11d8c:			; <UNDEFINED> instruction: 0x00011eb0
   11d90:	andeq	r1, r1, r0, lsl #30
   11d94:	andeq	r1, r1, r0, lsl #30
   11d98:			; <UNDEFINED> instruction: 0x00011eb0
   11d9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11da0:	ldrb	r3, [r3, #168]	; 0xa8
   11da4:	cmp	r3, #46	; 0x2e
   11da8:	bne	11dd4 <__assert_fail@plt+0xffc>
   11dac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11db0:	ldr	r3, [r3, #48]	; 0x30
   11db4:	cmp	r3, #0
   11db8:	beq	11dd4 <__assert_fail@plt+0xffc>
   11dbc:	movw	r3, #53676	; 0xd1ac
   11dc0:	movt	r3, #2
   11dc4:	ldr	r3, [r3]
   11dc8:	cmp	r3, #0
   11dcc:	bne	11dd4 <__assert_fail@plt+0xffc>
   11dd0:	b	11f00 <__assert_fail@plt+0x1128>
   11dd4:	movw	r3, #53540	; 0xd124
   11dd8:	movt	r3, #2
   11ddc:	ldr	r3, [r3]
   11de0:	cmp	r3, #0
   11de4:	beq	11e04 <__assert_fail@plt+0x102c>
   11de8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11dec:	ldr	r3, [r3, #28]
   11df0:	mov	r1, r3
   11df4:	movw	r0, #48460	; 0xbd4c
   11df8:	movt	r0, #1
   11dfc:	bl	10b98 <printf@plt>
   11e00:	b	11e38 <__assert_fail@plt+0x1060>
   11e04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11e08:	cmp	r3, #1
   11e0c:	ble	11e38 <__assert_fail@plt+0x1060>
   11e10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11e14:	ldr	r3, [r3, #28]
   11e18:	mov	r1, r3
   11e1c:	movw	r0, #48468	; 0xbd54
   11e20:	movt	r0, #1
   11e24:	bl	10b98 <printf@plt>
   11e28:	movw	r3, #53540	; 0xd124
   11e2c:	movt	r3, #2
   11e30:	mov	r2, #1
   11e34:	str	r2, [r3]
   11e38:	ldr	r1, [fp, #-20]	; 0xffffffec
   11e3c:	ldr	r0, [fp, #-16]
   11e40:	bl	15e90 <__assert_fail@plt+0x50b8>
   11e44:	str	r0, [fp, #-28]	; 0xffffffe4
   11e48:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11e4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11e50:	bl	11f94 <__assert_fail@plt+0x11bc>
   11e54:	movw	r3, #53608	; 0xd168
   11e58:	movt	r3, #2
   11e5c:	ldr	r3, [r3]
   11e60:	cmp	r3, #0
   11e64:	bne	11f00 <__assert_fail@plt+0x1128>
   11e68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11e6c:	cmp	r3, #0
   11e70:	beq	11f00 <__assert_fail@plt+0x1128>
   11e74:	mov	r2, #4
   11e78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11e7c:	ldr	r0, [fp, #-16]
   11e80:	bl	15df8 <__assert_fail@plt+0x5020>
   11e84:	b	11f00 <__assert_fail@plt+0x1128>
   11e88:	movw	r3, #53520	; 0xd110
   11e8c:	movt	r3, #2
   11e90:	ldr	r0, [r3]
   11e94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11e98:	add	r3, r3, #168	; 0xa8
   11e9c:	mov	r2, r3
   11ea0:	movw	r1, #48476	; 0xbd5c
   11ea4:	movt	r1, #1
   11ea8:	bl	10cc4 <fprintf@plt>
   11eac:	b	11f00 <__assert_fail@plt+0x1128>
   11eb0:	movw	r3, #53520	; 0xd110
   11eb4:	movt	r3, #2
   11eb8:	ldr	r4, [r3]
   11ebc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11ec0:	add	r5, r3, #168	; 0xa8
   11ec4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11ec8:	ldr	r3, [r3, #32]
   11ecc:	mov	r0, r3
   11ed0:	bl	10c7c <strerror@plt>
   11ed4:	mov	r3, r0
   11ed8:	mov	r2, r5
   11edc:	movw	r1, #48508	; 0xbd7c
   11ee0:	movt	r1, #1
   11ee4:	mov	r0, r4
   11ee8:	bl	10cc4 <fprintf@plt>
   11eec:	movw	r3, #53636	; 0xd184
   11ef0:	movt	r3, #2
   11ef4:	mov	r2, #1
   11ef8:	str	r2, [r3]
   11efc:	nop	{0}
   11f00:	ldr	r0, [fp, #-16]
   11f04:	bl	1564c <__assert_fail@plt+0x4874>
   11f08:	str	r0, [fp, #-24]	; 0xffffffe8
   11f0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11f10:	cmp	r3, #0
   11f14:	bne	11d68 <__assert_fail@plt+0xf90>
   11f18:	bl	10cd0 <__errno_location@plt>
   11f1c:	mov	r3, r0
   11f20:	ldr	r3, [r3]
   11f24:	cmp	r3, #0
   11f28:	beq	11f80 <__assert_fail@plt+0x11a8>
   11f2c:	movw	r3, #53520	; 0xd110
   11f30:	movt	r3, #2
   11f34:	ldr	r4, [r3]
   11f38:	bl	10cd0 <__errno_location@plt>
   11f3c:	mov	r3, r0
   11f40:	ldr	r3, [r3]
   11f44:	mov	r0, r3
   11f48:	bl	10c7c <strerror@plt>
   11f4c:	mov	r3, r0
   11f50:	mov	r2, r3
   11f54:	movw	r1, #48516	; 0xbd84
   11f58:	movt	r1, #1
   11f5c:	mov	r0, r4
   11f60:	bl	10cc4 <fprintf@plt>
   11f64:	movw	r3, #53636	; 0xd184
   11f68:	movt	r3, #2
   11f6c:	mov	r2, #1
   11f70:	str	r2, [r3]
   11f74:	nop	{0}
   11f78:	b	11f80 <__assert_fail@plt+0x11a8>
   11f7c:	nop	{0}
   11f80:	sub	sp, fp, #12
   11f84:	ldrd	r4, [sp]
   11f88:	ldr	fp, [sp, #8]
   11f8c:	add	sp, sp, #12
   11f90:	pop	{pc}		; (ldr pc, [sp], #4)
   11f94:	strd	r4, [sp, #-16]!
   11f98:	str	fp, [sp, #8]
   11f9c:	str	lr, [sp, #12]
   11fa0:	add	fp, sp, #12
   11fa4:	sub	sp, sp, #232	; 0xe8
   11fa8:	str	r0, [fp, #-240]	; 0xffffff10
   11fac:	str	r1, [fp, #-244]	; 0xffffff0c
   11fb0:	mov	r3, #0
   11fb4:	str	r3, [fp, #-76]	; 0xffffffb4
   11fb8:	mov	r3, #0
   11fbc:	str	r3, [fp, #-80]	; 0xffffffb0
   11fc0:	mov	r3, #0
   11fc4:	str	r3, [fp, #-84]	; 0xffffffac
   11fc8:	ldr	r3, [fp, #-244]	; 0xffffff0c
   11fcc:	cmp	r3, #0
   11fd0:	beq	126f8 <__assert_fail@plt+0x1920>
   11fd4:	movw	r3, #53612	; 0xd16c
   11fd8:	movt	r3, #2
   11fdc:	ldr	r3, [r3]
   11fe0:	cmp	r3, #0
   11fe4:	bne	12010 <__assert_fail@plt+0x1238>
   11fe8:	movw	r3, #53640	; 0xd188
   11fec:	movt	r3, #2
   11ff0:	ldr	r3, [r3]
   11ff4:	cmp	r3, #0
   11ff8:	bne	12010 <__assert_fail@plt+0x1238>
   11ffc:	movw	r3, #53588	; 0xd154
   12000:	movt	r3, #2
   12004:	ldr	r3, [r3]
   12008:	cmp	r3, #0
   1200c:	beq	12018 <__assert_fail@plt+0x1240>
   12010:	mov	r3, #1
   12014:	b	1201c <__assert_fail@plt+0x1244>
   12018:	mov	r3, #0
   1201c:	str	r3, [fp, #-88]	; 0xffffffa8
   12020:	mov	r3, #0
   12024:	str	r3, [fp, #-56]	; 0xffffffc8
   12028:	mov	r3, #0
   1202c:	str	r3, [fp, #-44]	; 0xffffffd4
   12030:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12034:	str	r3, [fp, #-40]	; 0xffffffd8
   12038:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1203c:	str	r3, [fp, #-36]	; 0xffffffdc
   12040:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12044:	str	r3, [fp, #-48]	; 0xffffffd0
   12048:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1204c:	str	r3, [fp, #-32]	; 0xffffffe0
   12050:	mov	r3, #0
   12054:	str	r3, [fp, #-52]	; 0xffffffcc
   12058:	mov	r3, #0
   1205c:	str	r3, [fp, #-60]	; 0xffffffc4
   12060:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12064:	str	r3, [fp, #-64]	; 0xffffffc0
   12068:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1206c:	str	r3, [fp, #-68]	; 0xffffffbc
   12070:	mov	r2, #0
   12074:	mov	r3, #0
   12078:	strd	r2, [fp, #-28]	; 0xffffffe4
   1207c:	ldr	r3, [fp, #-244]	; 0xffffff0c
   12080:	str	r3, [fp, #-16]
   12084:	mov	r3, #0
   12088:	str	r3, [fp, #-72]	; 0xffffffb8
   1208c:	b	12578 <__assert_fail@plt+0x17a0>
   12090:	ldr	r3, [fp, #-16]
   12094:	ldrh	r3, [r3, #56]	; 0x38
   12098:	cmp	r3, #7
   1209c:	beq	120b0 <__assert_fail@plt+0x12d8>
   120a0:	ldr	r3, [fp, #-16]
   120a4:	ldrh	r3, [r3, #56]	; 0x38
   120a8:	cmp	r3, #10
   120ac:	bne	1210c <__assert_fail@plt+0x1334>
   120b0:	movw	r3, #53520	; 0xd110
   120b4:	movt	r3, #2
   120b8:	ldr	r4, [r3]
   120bc:	ldr	r3, [fp, #-16]
   120c0:	add	r5, r3, #168	; 0xa8
   120c4:	ldr	r3, [fp, #-16]
   120c8:	ldr	r3, [r3, #32]
   120cc:	mov	r0, r3
   120d0:	bl	10c7c <strerror@plt>
   120d4:	mov	r3, r0
   120d8:	mov	r2, r5
   120dc:	movw	r1, #48508	; 0xbd7c
   120e0:	movt	r1, #1
   120e4:	mov	r0, r4
   120e8:	bl	10cc4 <fprintf@plt>
   120ec:	ldr	r3, [fp, #-16]
   120f0:	mov	r2, #1
   120f4:	str	r2, [r3, #16]
   120f8:	movw	r3, #53636	; 0xd184
   120fc:	movt	r3, #2
   12100:	mov	r2, #1
   12104:	str	r2, [r3]
   12108:	b	1256c <__assert_fail@plt+0x1794>
   1210c:	ldr	r3, [fp, #-240]	; 0xffffff10
   12110:	cmp	r3, #0
   12114:	bne	1214c <__assert_fail@plt+0x1374>
   12118:	ldr	r3, [fp, #-16]
   1211c:	ldrh	r3, [r3, #56]	; 0x38
   12120:	cmp	r3, #1
   12124:	bne	12180 <__assert_fail@plt+0x13a8>
   12128:	movw	r3, #53660	; 0xd19c
   1212c:	movt	r3, #2
   12130:	ldr	r3, [r3]
   12134:	cmp	r3, #0
   12138:	bne	12180 <__assert_fail@plt+0x13a8>
   1213c:	ldr	r3, [fp, #-16]
   12140:	mov	r2, #1
   12144:	str	r2, [r3, #16]
   12148:	b	1256c <__assert_fail@plt+0x1794>
   1214c:	ldr	r3, [fp, #-16]
   12150:	ldrb	r3, [r3, #168]	; 0xa8
   12154:	cmp	r3, #46	; 0x2e
   12158:	bne	12180 <__assert_fail@plt+0x13a8>
   1215c:	movw	r3, #53676	; 0xd1ac
   12160:	movt	r3, #2
   12164:	ldr	r3, [r3]
   12168:	cmp	r3, #0
   1216c:	bne	12180 <__assert_fail@plt+0x13a8>
   12170:	ldr	r3, [fp, #-16]
   12174:	mov	r2, #1
   12178:	str	r2, [r3, #16]
   1217c:	b	1256c <__assert_fail@plt+0x1794>
   12180:	ldr	r3, [fp, #-16]
   12184:	ldr	r3, [r3, #52]	; 0x34
   12188:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1218c:	cmp	r2, r3
   12190:	bcs	121a0 <__assert_fail@plt+0x13c8>
   12194:	ldr	r3, [fp, #-16]
   12198:	ldr	r3, [r3, #52]	; 0x34
   1219c:	str	r3, [fp, #-40]	; 0xffffffd8
   121a0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   121a4:	cmp	r3, #0
   121a8:	beq	12560 <__assert_fail@plt+0x1788>
   121ac:	ldr	r3, [fp, #-16]
   121b0:	add	r3, r3, #64	; 0x40
   121b4:	str	r3, [fp, #-92]	; 0xffffffa4
   121b8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   121bc:	ldrd	r2, [r3, #64]	; 0x40
   121c0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   121c4:	mov	r0, r1
   121c8:	asr	r1, r0, #31
   121cc:	cmp	r0, r2
   121d0:	sbcs	r3, r1, r3
   121d4:	bge	121e8 <__assert_fail@plt+0x1410>
   121d8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   121dc:	ldrd	r2, [r3, #64]	; 0x40
   121e0:	mov	r3, r2
   121e4:	str	r3, [fp, #-48]	; 0xffffffd0
   121e8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   121ec:	ldrd	r0, [r3, #96]	; 0x60
   121f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   121f4:	mov	r2, r3
   121f8:	mov	r3, #0
   121fc:	cmp	r1, r3
   12200:	cmpeq	r0, r2
   12204:	bls	12218 <__assert_fail@plt+0x1440>
   12208:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1220c:	ldrd	r2, [r3, #96]	; 0x60
   12210:	mov	r3, r2
   12214:	str	r3, [fp, #-36]	; 0xffffffdc
   12218:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1221c:	ldr	r3, [r3, #20]
   12220:	ldr	r2, [fp, #-44]	; 0xffffffd4
   12224:	cmp	r2, r3
   12228:	bcs	12238 <__assert_fail@plt+0x1460>
   1222c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12230:	ldr	r3, [r3, #20]
   12234:	str	r3, [fp, #-44]	; 0xffffffd4
   12238:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1223c:	ldrd	r2, [r3, #48]	; 0x30
   12240:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   12244:	cmp	r0, r2
   12248:	sbcs	r3, r1, r3
   1224c:	bge	1225c <__assert_fail@plt+0x1484>
   12250:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12254:	ldrd	r2, [r3, #48]	; 0x30
   12258:	strd	r2, [fp, #-28]	; 0xffffffe4
   1225c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12260:	ldrd	r2, [r3, #64]	; 0x40
   12264:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12268:	add	r3, r3, r2
   1226c:	str	r3, [fp, #-32]	; 0xffffffe0
   12270:	movw	r3, #53640	; 0xd188
   12274:	movt	r3, #2
   12278:	ldr	r3, [r3]
   1227c:	cmp	r3, #0
   12280:	beq	12560 <__assert_fail@plt+0x1788>
   12284:	mov	r3, #0
   12288:	str	r3, [fp, #-80]	; 0xffffffb0
   1228c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12290:	str	r3, [fp, #-76]	; 0xffffffb4
   12294:	movw	r3, #53652	; 0xd194
   12298:	movt	r3, #2
   1229c:	ldr	r3, [r3]
   122a0:	cmp	r3, #0
   122a4:	bne	12300 <__assert_fail@plt+0x1528>
   122a8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   122ac:	ldr	r3, [r3, #24]
   122b0:	mov	r0, r3
   122b4:	bl	10b8c <getpwuid@plt>
   122b8:	str	r0, [fp, #-96]	; 0xffffffa0
   122bc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   122c0:	cmp	r3, #0
   122c4:	beq	122d4 <__assert_fail@plt+0x14fc>
   122c8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   122cc:	ldr	r3, [r3]
   122d0:	str	r3, [fp, #-76]	; 0xffffffb4
   122d4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   122d8:	ldr	r3, [r3, #28]
   122dc:	mov	r0, r3
   122e0:	bl	10dcc <getgrgid@plt>
   122e4:	str	r0, [fp, #-100]	; 0xffffff9c
   122e8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   122ec:	cmp	r3, #0
   122f0:	beq	12300 <__assert_fail@plt+0x1528>
   122f4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   122f8:	ldr	r3, [r3]
   122fc:	str	r3, [fp, #-80]	; 0xffffffb0
   12300:	ldr	r3, [fp, #-76]	; 0xffffffb4
   12304:	cmp	r3, #0
   12308:	bne	1232c <__assert_fail@plt+0x1554>
   1230c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12310:	ldr	r3, [r3, #24]
   12314:	mov	r0, r3
   12318:	mov	r1, #0
   1231c:	sub	r3, fp, #208	; 0xd0
   12320:	mov	r2, r3
   12324:	bl	1ab4c <__assert_fail@plt+0x9d74>
   12328:	str	r0, [fp, #-76]	; 0xffffffb4
   1232c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12330:	cmp	r3, #0
   12334:	bne	12358 <__assert_fail@plt+0x1580>
   12338:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1233c:	ldr	r3, [r3, #28]
   12340:	mov	r0, r3
   12344:	mov	r1, #0
   12348:	sub	r3, fp, #232	; 0xe8
   1234c:	mov	r2, r3
   12350:	bl	1ab4c <__assert_fail@plt+0x9d74>
   12354:	str	r0, [fp, #-80]	; 0xffffffb0
   12358:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1235c:	bl	10ca0 <strlen@plt>
   12360:	mov	r3, r0
   12364:	str	r3, [fp, #-104]	; 0xffffff98
   12368:	ldr	r2, [fp, #-104]	; 0xffffff98
   1236c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   12370:	cmp	r2, r3
   12374:	ble	12380 <__assert_fail@plt+0x15a8>
   12378:	ldr	r3, [fp, #-104]	; 0xffffff98
   1237c:	str	r3, [fp, #-68]	; 0xffffffbc
   12380:	ldr	r0, [fp, #-80]	; 0xffffffb0
   12384:	bl	10ca0 <strlen@plt>
   12388:	mov	r3, r0
   1238c:	str	r3, [fp, #-108]	; 0xffffff94
   12390:	ldr	r2, [fp, #-108]	; 0xffffff94
   12394:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12398:	cmp	r2, r3
   1239c:	ble	123a8 <__assert_fail@plt+0x15d0>
   123a0:	ldr	r3, [fp, #-108]	; 0xffffff94
   123a4:	str	r3, [fp, #-64]	; 0xffffffc0
   123a8:	movw	r3, #53604	; 0xd164
   123ac:	movt	r3, #2
   123b0:	ldr	r3, [r3]
   123b4:	cmp	r3, #0
   123b8:	beq	123f4 <__assert_fail@plt+0x161c>
   123bc:	movw	r3, #48532	; 0xbd94
   123c0:	movt	r3, #1
   123c4:	str	r3, [fp, #-84]	; 0xffffffac
   123c8:	ldr	r0, [fp, #-84]	; 0xffffffac
   123cc:	bl	10ca0 <strlen@plt>
   123d0:	mov	r3, r0
   123d4:	str	r3, [fp, #-56]	; 0xffffffc8
   123d8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   123dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   123e0:	cmp	r2, r3
   123e4:	ble	123fc <__assert_fail@plt+0x1624>
   123e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   123ec:	str	r3, [fp, #-60]	; 0xffffffc4
   123f0:	b	123fc <__assert_fail@plt+0x1624>
   123f4:	mov	r3, #0
   123f8:	str	r3, [fp, #-56]	; 0xffffffc8
   123fc:	ldr	r2, [fp, #-104]	; 0xffffff98
   12400:	ldr	r3, [fp, #-108]	; 0xffffff94
   12404:	add	r2, r2, r3
   12408:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1240c:	add	r3, r2, r3
   12410:	add	r3, r3, #19
   12414:	mov	r0, r3
   12418:	bl	1aef4 <__assert_fail@plt+0xa11c>
   1241c:	mov	r3, r0
   12420:	str	r3, [fp, #-112]	; 0xffffff90
   12424:	ldr	r3, [fp, #-112]	; 0xffffff90
   12428:	cmp	r3, #0
   1242c:	bne	1247c <__assert_fail@plt+0x16a4>
   12430:	movw	r3, #53520	; 0xd110
   12434:	movt	r3, #2
   12438:	ldr	r4, [r3]
   1243c:	bl	10cd0 <__errno_location@plt>
   12440:	mov	r3, r0
   12444:	ldr	r3, [r3]
   12448:	mov	r0, r3
   1244c:	bl	10c7c <strerror@plt>
   12450:	mov	r3, r0
   12454:	mov	r2, r3
   12458:	movw	r1, #48536	; 0xbd98
   1245c:	movt	r1, #1
   12460:	mov	r0, r4
   12464:	bl	10cc4 <fprintf@plt>
   12468:	movw	r3, #53636	; 0xd184
   1246c:	movt	r3, #2
   12470:	mov	r2, #1
   12474:	str	r2, [r3]
   12478:	b	12704 <__assert_fail@plt+0x192c>
   1247c:	ldr	r3, [fp, #-112]	; 0xffffff90
   12480:	add	r2, r3, #12
   12484:	ldr	r3, [fp, #-112]	; 0xffffff90
   12488:	str	r2, [r3]
   1248c:	ldr	r3, [fp, #-112]	; 0xffffff90
   12490:	ldr	r3, [r3]
   12494:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12498:	mov	r0, r3
   1249c:	bl	10c40 <strcpy@plt>
   124a0:	ldr	r3, [fp, #-104]	; 0xffffff98
   124a4:	add	r3, r3, #1
   124a8:	add	r3, r3, #8
   124ac:	ldr	r2, [fp, #-112]	; 0xffffff90
   124b0:	add	r3, r2, r3
   124b4:	add	r2, r3, #4
   124b8:	ldr	r3, [fp, #-112]	; 0xffffff90
   124bc:	str	r2, [r3, #4]
   124c0:	ldr	r3, [fp, #-112]	; 0xffffff90
   124c4:	ldr	r3, [r3, #4]
   124c8:	ldr	r1, [fp, #-80]	; 0xffffffb0
   124cc:	mov	r0, r3
   124d0:	bl	10c40 <strcpy@plt>
   124d4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   124d8:	ldr	r3, [r3, #16]
   124dc:	and	r3, r3, #61440	; 0xf000
   124e0:	cmp	r3, #8192	; 0x2000
   124e4:	beq	124fc <__assert_fail@plt+0x1724>
   124e8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   124ec:	ldr	r3, [r3, #16]
   124f0:	and	r3, r3, #61440	; 0xf000
   124f4:	cmp	r3, #24576	; 0x6000
   124f8:	bne	12504 <__assert_fail@plt+0x172c>
   124fc:	mov	r3, #1
   12500:	str	r3, [fp, #-52]	; 0xffffffcc
   12504:	movw	r3, #53604	; 0xd164
   12508:	movt	r3, #2
   1250c:	ldr	r3, [r3]
   12510:	cmp	r3, #0
   12514:	beq	12554 <__assert_fail@plt+0x177c>
   12518:	ldr	r2, [fp, #-104]	; 0xffffff98
   1251c:	ldr	r3, [fp, #-108]	; 0xffffff94
   12520:	add	r3, r2, r3
   12524:	add	r3, r3, #2
   12528:	add	r3, r3, #8
   1252c:	ldr	r2, [fp, #-112]	; 0xffffff90
   12530:	add	r3, r2, r3
   12534:	add	r2, r3, #4
   12538:	ldr	r3, [fp, #-112]	; 0xffffff90
   1253c:	str	r2, [r3, #8]
   12540:	ldr	r3, [fp, #-112]	; 0xffffff90
   12544:	ldr	r3, [r3, #8]
   12548:	ldr	r1, [fp, #-84]	; 0xffffffac
   1254c:	mov	r0, r3
   12550:	bl	10c40 <strcpy@plt>
   12554:	ldr	r3, [fp, #-16]
   12558:	ldr	r2, [fp, #-112]	; 0xffffff90
   1255c:	str	r2, [r3, #20]
   12560:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12564:	add	r3, r3, #1
   12568:	str	r3, [fp, #-72]	; 0xffffffb8
   1256c:	ldr	r3, [fp, #-16]
   12570:	ldr	r3, [r3, #8]
   12574:	str	r3, [fp, #-16]
   12578:	ldr	r3, [fp, #-16]
   1257c:	cmp	r3, #0
   12580:	bne	12090 <__assert_fail@plt+0x12b8>
   12584:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12588:	cmp	r3, #0
   1258c:	beq	12700 <__assert_fail@plt+0x1928>
   12590:	ldr	r3, [fp, #-244]	; 0xffffff0c
   12594:	str	r3, [fp, #-160]	; 0xffffff60
   12598:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1259c:	str	r3, [fp, #-148]	; 0xffffff6c
   125a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   125a4:	str	r3, [fp, #-144]	; 0xffffff70
   125a8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   125ac:	cmp	r3, #0
   125b0:	beq	12684 <__assert_fail@plt+0x18ac>
   125b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   125b8:	str	r3, [fp, #-152]	; 0xffffff68
   125bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   125c0:	str	r3, [fp, #-156]	; 0xffffff64
   125c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   125c8:	mov	r0, r3
   125cc:	asr	r1, r0, #31
   125d0:	sub	r3, fp, #184	; 0xb8
   125d4:	mov	r2, r3
   125d8:	bl	1ab4c <__assert_fail@plt+0x9d74>
   125dc:	mov	r3, r0
   125e0:	mov	r0, r3
   125e4:	bl	10ca0 <strlen@plt>
   125e8:	mov	r3, r0
   125ec:	str	r3, [fp, #-140]	; 0xffffff74
   125f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   125f4:	str	r3, [fp, #-136]	; 0xffffff78
   125f8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   125fc:	str	r3, [fp, #-132]	; 0xffffff7c
   12600:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12604:	mov	r0, r3
   12608:	mov	r1, #0
   1260c:	sub	r3, fp, #184	; 0xb8
   12610:	mov	r2, r3
   12614:	bl	1ab4c <__assert_fail@plt+0x9d74>
   12618:	mov	r3, r0
   1261c:	mov	r0, r3
   12620:	bl	10ca0 <strlen@plt>
   12624:	mov	r3, r0
   12628:	str	r3, [fp, #-128]	; 0xffffff80
   1262c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12630:	mov	r0, r3
   12634:	mov	r1, #0
   12638:	sub	r3, fp, #184	; 0xb8
   1263c:	mov	r2, r3
   12640:	bl	1ab4c <__assert_fail@plt+0x9d74>
   12644:	mov	r3, r0
   12648:	mov	r0, r3
   1264c:	bl	10ca0 <strlen@plt>
   12650:	mov	r3, r0
   12654:	str	r3, [fp, #-124]	; 0xffffff84
   12658:	sub	r3, fp, #184	; 0xb8
   1265c:	mov	r2, r3
   12660:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   12664:	bl	1ab4c <__assert_fail@plt+0x9d74>
   12668:	mov	r3, r0
   1266c:	mov	r0, r3
   12670:	bl	10ca0 <strlen@plt>
   12674:	mov	r3, r0
   12678:	str	r3, [fp, #-120]	; 0xffffff88
   1267c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   12680:	str	r3, [fp, #-116]	; 0xffffff8c
   12684:	movw	r3, #53532	; 0xd11c
   12688:	movt	r3, #2
   1268c:	ldr	r3, [r3]
   12690:	sub	r2, fp, #160	; 0xa0
   12694:	mov	r0, r2
   12698:	blx	r3
   1269c:	movw	r3, #53540	; 0xd124
   126a0:	movt	r3, #2
   126a4:	mov	r2, #1
   126a8:	str	r2, [r3]
   126ac:	movw	r3, #53640	; 0xd188
   126b0:	movt	r3, #2
   126b4:	ldr	r3, [r3]
   126b8:	cmp	r3, #0
   126bc:	beq	12704 <__assert_fail@plt+0x192c>
   126c0:	ldr	r3, [fp, #-244]	; 0xffffff0c
   126c4:	str	r3, [fp, #-16]
   126c8:	b	126e8 <__assert_fail@plt+0x1910>
   126cc:	ldr	r3, [fp, #-16]
   126d0:	ldr	r3, [r3, #20]
   126d4:	mov	r0, r3
   126d8:	bl	1430c <__assert_fail@plt+0x3534>
   126dc:	ldr	r3, [fp, #-16]
   126e0:	ldr	r3, [r3, #8]
   126e4:	str	r3, [fp, #-16]
   126e8:	ldr	r3, [fp, #-16]
   126ec:	cmp	r3, #0
   126f0:	bne	126cc <__assert_fail@plt+0x18f4>
   126f4:	b	12704 <__assert_fail@plt+0x192c>
   126f8:	nop	{0}
   126fc:	b	12704 <__assert_fail@plt+0x192c>
   12700:	nop	{0}
   12704:	sub	sp, fp, #12
   12708:	ldrd	r4, [sp]
   1270c:	ldr	fp, [sp, #8]
   12710:	add	sp, sp, #12
   12714:	pop	{pc}		; (ldr pc, [sp], #4)
   12718:	str	fp, [sp, #-8]!
   1271c:	str	lr, [sp, #4]
   12720:	add	fp, sp, #4
   12724:	sub	sp, sp, #16
   12728:	str	r0, [fp, #-16]
   1272c:	str	r1, [fp, #-20]	; 0xffffffec
   12730:	ldr	r3, [fp, #-16]
   12734:	ldr	r3, [r3]
   12738:	ldrh	r3, [r3, #56]	; 0x38
   1273c:	str	r3, [fp, #-8]
   12740:	ldr	r3, [fp, #-8]
   12744:	cmp	r3, #7
   12748:	bne	12754 <__assert_fail@plt+0x197c>
   1274c:	mov	r3, #0
   12750:	b	12864 <__assert_fail@plt+0x1a8c>
   12754:	ldr	r3, [fp, #-20]	; 0xffffffec
   12758:	ldr	r3, [r3]
   1275c:	ldrh	r3, [r3, #56]	; 0x38
   12760:	str	r3, [fp, #-12]
   12764:	ldr	r3, [fp, #-12]
   12768:	cmp	r3, #7
   1276c:	bne	12778 <__assert_fail@plt+0x19a0>
   12770:	mov	r3, #0
   12774:	b	12864 <__assert_fail@plt+0x1a8c>
   12778:	ldr	r3, [fp, #-8]
   1277c:	cmp	r3, #10
   12780:	beq	12790 <__assert_fail@plt+0x19b8>
   12784:	ldr	r3, [fp, #-12]
   12788:	cmp	r3, #10
   1278c:	bne	127dc <__assert_fail@plt+0x1a04>
   12790:	ldr	r3, [fp, #-12]
   12794:	cmp	r3, #10
   12798:	beq	127a4 <__assert_fail@plt+0x19cc>
   1279c:	mov	r3, #1
   127a0:	b	12864 <__assert_fail@plt+0x1a8c>
   127a4:	ldr	r3, [fp, #-8]
   127a8:	cmp	r3, #10
   127ac:	beq	127b8 <__assert_fail@plt+0x19e0>
   127b0:	mvn	r3, #0
   127b4:	b	12864 <__assert_fail@plt+0x1a8c>
   127b8:	ldr	r3, [fp, #-16]
   127bc:	ldr	r2, [r3]
   127c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   127c4:	ldr	r3, [r3]
   127c8:	mov	r1, r3
   127cc:	mov	r0, r2
   127d0:	bl	13af4 <__assert_fail@plt+0x2d1c>
   127d4:	mov	r3, r0
   127d8:	b	12864 <__assert_fail@plt+0x1a8c>
   127dc:	ldr	r2, [fp, #-8]
   127e0:	ldr	r3, [fp, #-12]
   127e4:	cmp	r2, r3
   127e8:	beq	1283c <__assert_fail@plt+0x1a64>
   127ec:	ldr	r3, [fp, #-16]
   127f0:	ldr	r3, [r3]
   127f4:	ldr	r3, [r3, #48]	; 0x30
   127f8:	cmp	r3, #0
   127fc:	bne	1283c <__assert_fail@plt+0x1a64>
   12800:	movw	r3, #53660	; 0xd19c
   12804:	movt	r3, #2
   12808:	ldr	r3, [r3]
   1280c:	cmp	r3, #0
   12810:	bne	1283c <__assert_fail@plt+0x1a64>
   12814:	ldr	r3, [fp, #-8]
   12818:	cmp	r3, #1
   1281c:	bne	12828 <__assert_fail@plt+0x1a50>
   12820:	mov	r3, #1
   12824:	b	12864 <__assert_fail@plt+0x1a8c>
   12828:	ldr	r3, [fp, #-12]
   1282c:	cmp	r3, #1
   12830:	bne	1283c <__assert_fail@plt+0x1a64>
   12834:	mvn	r3, #0
   12838:	b	12864 <__assert_fail@plt+0x1a8c>
   1283c:	movw	r3, #53536	; 0xd120
   12840:	movt	r3, #2
   12844:	ldr	r3, [r3]
   12848:	ldr	r2, [fp, #-16]
   1284c:	ldr	r0, [r2]
   12850:	ldr	r2, [fp, #-20]	; 0xffffffec
   12854:	ldr	r2, [r2]
   12858:	mov	r1, r2
   1285c:	blx	r3
   12860:	mov	r3, r0
   12864:	mov	r0, r3
   12868:	sub	sp, fp, #4
   1286c:	ldr	fp, [sp]
   12870:	add	sp, sp, #4
   12874:	pop	{pc}		; (ldr pc, [sp], #4)
   12878:	str	fp, [sp, #-8]!
   1287c:	str	lr, [sp, #4]
   12880:	add	fp, sp, #4
   12884:	sub	sp, sp, #16
   12888:	str	r0, [fp, #-16]
   1288c:	ldr	r3, [fp, #-16]
   12890:	ldr	r3, [r3]
   12894:	str	r3, [fp, #-8]
   12898:	b	128e8 <__assert_fail@plt+0x1b10>
   1289c:	ldr	r3, [fp, #-8]
   128a0:	ldr	r3, [r3, #16]
   128a4:	cmp	r3, #1
   128a8:	beq	128d8 <__assert_fail@plt+0x1b00>
   128ac:	ldr	r3, [fp, #-16]
   128b0:	ldr	r3, [r3, #32]
   128b4:	mov	r1, r3
   128b8:	ldr	r3, [fp, #-16]
   128bc:	ldr	r3, [r3, #20]
   128c0:	mov	r2, r3
   128c4:	ldr	r0, [fp, #-8]
   128c8:	bl	13154 <__assert_fail@plt+0x237c>
   128cc:	mov	r0, #10
   128d0:	bl	10cf4 <putchar@plt>
   128d4:	b	128dc <__assert_fail@plt+0x1b04>
   128d8:	nop	{0}
   128dc:	ldr	r3, [fp, #-8]
   128e0:	ldr	r3, [r3, #8]
   128e4:	str	r3, [fp, #-8]
   128e8:	ldr	r3, [fp, #-8]
   128ec:	cmp	r3, #0
   128f0:	bne	1289c <__assert_fail@plt+0x1ac4>
   128f4:	nop	{0}
   128f8:	sub	sp, fp, #4
   128fc:	ldr	fp, [sp]
   12900:	add	sp, sp, #4
   12904:	pop	{pc}		; (ldr pc, [sp], #4)
   12908:	strd	r4, [sp, #-20]!	; 0xffffffec
   1290c:	str	r6, [sp, #8]
   12910:	str	fp, [sp, #12]
   12914:	str	lr, [sp, #16]
   12918:	add	fp, sp, #16
   1291c:	sub	sp, sp, #60	; 0x3c
   12920:	str	r0, [fp, #-56]	; 0xffffffc8
   12924:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12928:	ldr	r3, [r3]
   1292c:	ldr	r3, [r3, #48]	; 0x30
   12930:	cmp	r3, #0
   12934:	beq	1299c <__assert_fail@plt+0x1bc4>
   12938:	movw	r3, #53640	; 0xd188
   1293c:	movt	r3, #2
   12940:	ldr	r3, [r3]
   12944:	cmp	r3, #0
   12948:	bne	12960 <__assert_fail@plt+0x1b88>
   1294c:	movw	r3, #53588	; 0xd154
   12950:	movt	r3, #2
   12954:	ldr	r3, [r3]
   12958:	cmp	r3, #0
   1295c:	beq	1299c <__assert_fail@plt+0x1bc4>
   12960:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12964:	ldr	r2, [r3, #4]
   12968:	movw	r3, #53668	; 0xd1a4
   1296c:	movt	r3, #2
   12970:	ldr	r3, [r3]
   12974:	add	r3, r2, r3
   12978:	sub	r2, r3, #1
   1297c:	movw	r3, #53668	; 0xd1a4
   12980:	movt	r3, #2
   12984:	ldr	r3, [r3]
   12988:	udiv	r3, r2, r3
   1298c:	mov	r1, r3
   12990:	movw	r0, #48548	; 0xbda4
   12994:	movt	r0, #1
   12998:	bl	10b98 <printf@plt>
   1299c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   129a0:	ldr	r3, [r3]
   129a4:	str	r3, [fp, #-24]	; 0xffffffe8
   129a8:	b	12cf0 <__assert_fail@plt+0x1f18>
   129ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   129b0:	ldr	r3, [r3, #16]
   129b4:	cmp	r3, #1
   129b8:	beq	12ce0 <__assert_fail@plt+0x1f08>
   129bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   129c0:	add	r3, r3, #64	; 0x40
   129c4:	str	r3, [fp, #-28]	; 0xffffffe4
   129c8:	movw	r3, #53612	; 0xd16c
   129cc:	movt	r3, #2
   129d0:	ldr	r3, [r3]
   129d4:	cmp	r3, #0
   129d8:	beq	12a00 <__assert_fail@plt+0x1c28>
   129dc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   129e0:	ldr	r1, [r3, #32]
   129e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   129e8:	ldrd	r2, [r3, #96]	; 0x60
   129ec:	mov	r3, r2
   129f0:	mov	r2, r3
   129f4:	movw	r0, #48560	; 0xbdb0
   129f8:	movt	r0, #1
   129fc:	bl	10b98 <printf@plt>
   12a00:	movw	r3, #53588	; 0xd154
   12a04:	movt	r3, #2
   12a08:	ldr	r3, [r3]
   12a0c:	cmp	r3, #0
   12a10:	beq	12a7c <__assert_fail@plt+0x1ca4>
   12a14:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12a18:	ldr	r6, [r3, #20]
   12a1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12a20:	ldrd	r0, [r3, #64]	; 0x40
   12a24:	movw	r3, #53668	; 0xd1a4
   12a28:	movt	r3, #2
   12a2c:	ldr	r3, [r3]
   12a30:	sub	r3, r3, #1
   12a34:	mov	r2, r3
   12a38:	asr	r3, r2, #31
   12a3c:	adds	r4, r0, r2
   12a40:	adc	r5, r1, r3
   12a44:	movw	r3, #53668	; 0xd1a4
   12a48:	movt	r3, #2
   12a4c:	ldr	r3, [r3]
   12a50:	mov	r2, r3
   12a54:	asr	r3, r2, #31
   12a58:	mov	r0, r4
   12a5c:	mov	r1, r5
   12a60:	bl	1ba04 <__assert_fail@plt+0xac2c>
   12a64:	mov	r2, r0
   12a68:	mov	r3, r1
   12a6c:	mov	r1, r6
   12a70:	movw	r0, #48568	; 0xbdb8
   12a74:	movt	r0, #1
   12a78:	bl	10b98 <printf@plt>
   12a7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12a80:	ldr	r3, [r3, #16]
   12a84:	sub	r2, fp, #52	; 0x34
   12a88:	mov	r1, r2
   12a8c:	mov	r0, r3
   12a90:	bl	14070 <__assert_fail@plt+0x3298>
   12a94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12a98:	ldr	r3, [r3, #20]
   12a9c:	str	r3, [fp, #-32]	; 0xffffffe0
   12aa0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12aa4:	ldr	lr, [r3, #36]	; 0x24
   12aa8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12aac:	ldr	r3, [r3, #20]
   12ab0:	mov	r6, r3
   12ab4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12ab8:	ldr	r3, [r3, #44]	; 0x2c
   12abc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12ac0:	ldr	r2, [r2]
   12ac4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   12ac8:	ldr	r1, [r1, #28]
   12acc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12ad0:	ldr	r0, [r0, #4]
   12ad4:	sub	ip, fp, #52	; 0x34
   12ad8:	str	r0, [sp, #12]
   12adc:	str	r1, [sp, #8]
   12ae0:	str	r2, [sp, #4]
   12ae4:	str	r3, [sp]
   12ae8:	mov	r3, r6
   12aec:	mov	r2, lr
   12af0:	mov	r1, ip
   12af4:	movw	r0, #48576	; 0xbdc0
   12af8:	movt	r0, #1
   12afc:	bl	10b98 <printf@plt>
   12b00:	movw	r3, #53604	; 0xd164
   12b04:	movt	r3, #2
   12b08:	ldr	r3, [r3]
   12b0c:	cmp	r3, #0
   12b10:	beq	12b34 <__assert_fail@plt+0x1d5c>
   12b14:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12b18:	ldr	r1, [r3, #24]
   12b1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12b20:	ldr	r3, [r3, #8]
   12b24:	mov	r2, r3
   12b28:	movw	r0, #48596	; 0xbdd4
   12b2c:	movt	r0, #1
   12b30:	bl	10b98 <printf@plt>
   12b34:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12b38:	ldr	r3, [r3, #16]
   12b3c:	and	r3, r3, #61440	; 0xf000
   12b40:	cmp	r3, #8192	; 0x2000
   12b44:	beq	12b5c <__assert_fail@plt+0x1d84>
   12b48:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12b4c:	ldr	r3, [r3, #16]
   12b50:	and	r3, r3, #61440	; 0xf000
   12b54:	cmp	r3, #24576	; 0x6000
   12b58:	bne	12b94 <__assert_fail@plt+0x1dbc>
   12b5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12b60:	ldrd	r2, [r3, #32]
   12b64:	mov	r3, r2
   12b68:	lsr	r3, r3, #8
   12b6c:	uxtb	r1, r3
   12b70:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12b74:	ldrd	r2, [r3, #32]
   12b78:	mov	r3, r2
   12b7c:	uxtb	r3, r3
   12b80:	mov	r2, r3
   12b84:	movw	r0, #48604	; 0xbddc
   12b88:	movt	r0, #1
   12b8c:	bl	10b98 <printf@plt>
   12b90:	b	12bfc <__assert_fail@plt+0x1e24>
   12b94:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12b98:	ldr	r3, [r3, #8]
   12b9c:	cmp	r3, #0
   12ba0:	beq	12be0 <__assert_fail@plt+0x1e08>
   12ba4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12ba8:	ldr	r3, [r3, #40]	; 0x28
   12bac:	rsb	r1, r3, #8
   12bb0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12bb4:	ldr	r0, [r3, #40]	; 0x28
   12bb8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12bbc:	ldrd	r2, [r3, #48]	; 0x30
   12bc0:	strd	r2, [sp]
   12bc4:	mov	r3, r0
   12bc8:	movw	r2, #48616	; 0xbde8
   12bcc:	movt	r2, #1
   12bd0:	movw	r0, #48620	; 0xbdec
   12bd4:	movt	r0, #1
   12bd8:	bl	10b98 <printf@plt>
   12bdc:	b	12bfc <__assert_fail@plt+0x1e24>
   12be0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12be4:	ldr	r1, [r3, #40]	; 0x28
   12be8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12bec:	ldrd	r2, [r3, #48]	; 0x30
   12bf0:	movw	r0, #48568	; 0xbdb8
   12bf4:	movt	r0, #1
   12bf8:	bl	10b98 <printf@plt>
   12bfc:	movw	r3, #53620	; 0xd174
   12c00:	movt	r3, #2
   12c04:	ldr	r3, [r3]
   12c08:	cmp	r3, #0
   12c0c:	beq	12c24 <__assert_fail@plt+0x1e4c>
   12c10:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12c14:	ldr	r3, [r3, #72]	; 0x48
   12c18:	mov	r0, r3
   12c1c:	bl	132f4 <__assert_fail@plt+0x251c>
   12c20:	b	12c5c <__assert_fail@plt+0x1e84>
   12c24:	movw	r3, #53664	; 0xd1a0
   12c28:	movt	r3, #2
   12c2c:	ldr	r3, [r3]
   12c30:	cmp	r3, #0
   12c34:	beq	12c4c <__assert_fail@plt+0x1e74>
   12c38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12c3c:	ldr	r3, [r3, #88]	; 0x58
   12c40:	mov	r0, r3
   12c44:	bl	132f4 <__assert_fail@plt+0x251c>
   12c48:	b	12c5c <__assert_fail@plt+0x1e84>
   12c4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12c50:	ldr	r3, [r3, #80]	; 0x50
   12c54:	mov	r0, r3
   12c58:	bl	132f4 <__assert_fail@plt+0x251c>
   12c5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12c60:	add	r3, r3, #168	; 0xa8
   12c64:	mov	r0, r3
   12c68:	bl	139f8 <__assert_fail@plt+0x2c20>
   12c6c:	movw	r3, #53628	; 0xd17c
   12c70:	movt	r3, #2
   12c74:	ldr	r3, [r3]
   12c78:	cmp	r3, #0
   12c7c:	bne	12ca8 <__assert_fail@plt+0x1ed0>
   12c80:	movw	r3, #53644	; 0xd18c
   12c84:	movt	r3, #2
   12c88:	ldr	r3, [r3]
   12c8c:	cmp	r3, #0
   12c90:	beq	12cb8 <__assert_fail@plt+0x1ee0>
   12c94:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12c98:	ldr	r3, [r3, #16]
   12c9c:	and	r3, r3, #61440	; 0xf000
   12ca0:	cmp	r3, #16384	; 0x4000
   12ca4:	bne	12cb8 <__assert_fail@plt+0x1ee0>
   12ca8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12cac:	ldr	r3, [r3, #16]
   12cb0:	mov	r0, r3
   12cb4:	bl	137b4 <__assert_fail@plt+0x29dc>
   12cb8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12cbc:	ldr	r3, [r3, #16]
   12cc0:	and	r3, r3, #61440	; 0xf000
   12cc4:	cmp	r3, #40960	; 0xa000
   12cc8:	bne	12cd4 <__assert_fail@plt+0x1efc>
   12ccc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12cd0:	bl	13878 <__assert_fail@plt+0x2aa0>
   12cd4:	mov	r0, #10
   12cd8:	bl	10cf4 <putchar@plt>
   12cdc:	b	12ce4 <__assert_fail@plt+0x1f0c>
   12ce0:	nop	{0}
   12ce4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12ce8:	ldr	r3, [r3, #8]
   12cec:	str	r3, [fp, #-24]	; 0xffffffe8
   12cf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12cf4:	cmp	r3, #0
   12cf8:	bne	129ac <__assert_fail@plt+0x1bd4>
   12cfc:	nop	{0}
   12d00:	sub	sp, fp, #16
   12d04:	ldrd	r4, [sp]
   12d08:	ldr	r6, [sp, #8]
   12d0c:	ldr	fp, [sp, #12]
   12d10:	add	sp, sp, #16
   12d14:	pop	{pc}		; (ldr pc, [sp], #4)
   12d18:	str	fp, [sp, #-8]!
   12d1c:	str	lr, [sp, #4]
   12d20:	add	fp, sp, #4
   12d24:	sub	sp, sp, #16
   12d28:	str	r0, [fp, #-16]
   12d2c:	str	r1, [fp, #-20]	; 0xffffffec
   12d30:	ldr	r3, [fp, #-16]
   12d34:	ldr	r3, [r3, #16]
   12d38:	str	r3, [fp, #-8]
   12d3c:	movw	r3, #53612	; 0xd16c
   12d40:	movt	r3, #2
   12d44:	ldr	r3, [r3]
   12d48:	cmp	r3, #0
   12d4c:	beq	12d68 <__assert_fail@plt+0x1f90>
   12d50:	ldr	r3, [fp, #-16]
   12d54:	ldr	r3, [r3, #32]
   12d58:	add	r3, r3, #1
   12d5c:	ldr	r2, [fp, #-8]
   12d60:	add	r3, r2, r3
   12d64:	str	r3, [fp, #-8]
   12d68:	movw	r3, #53588	; 0xd154
   12d6c:	movt	r3, #2
   12d70:	ldr	r3, [r3]
   12d74:	cmp	r3, #0
   12d78:	beq	12d94 <__assert_fail@plt+0x1fbc>
   12d7c:	ldr	r3, [fp, #-16]
   12d80:	ldr	r3, [r3, #20]
   12d84:	add	r3, r3, #1
   12d88:	ldr	r2, [fp, #-8]
   12d8c:	add	r3, r2, r3
   12d90:	str	r3, [fp, #-8]
   12d94:	movw	r3, #53628	; 0xd17c
   12d98:	movt	r3, #2
   12d9c:	ldr	r3, [r3]
   12da0:	cmp	r3, #0
   12da4:	bne	12dbc <__assert_fail@plt+0x1fe4>
   12da8:	movw	r3, #53644	; 0xd18c
   12dac:	movt	r3, #2
   12db0:	ldr	r3, [r3]
   12db4:	cmp	r3, #0
   12db8:	beq	12dc8 <__assert_fail@plt+0x1ff0>
   12dbc:	ldr	r3, [fp, #-8]
   12dc0:	add	r3, r3, #1
   12dc4:	str	r3, [fp, #-8]
   12dc8:	ldr	r3, [fp, #-8]
   12dcc:	add	r3, r3, #1
   12dd0:	str	r3, [fp, #-8]
   12dd4:	movw	r3, #53488	; 0xd0f0
   12dd8:	movt	r3, #2
   12ddc:	ldr	r3, [r3]
   12de0:	add	r3, r3, #1
   12de4:	str	r3, [fp, #-12]
   12de8:	ldr	r3, [fp, #-8]
   12dec:	lsl	r3, r3, #1
   12df0:	ldr	r2, [fp, #-12]
   12df4:	cmp	r2, r3
   12df8:	bge	12e0c <__assert_fail@plt+0x2034>
   12dfc:	ldr	r0, [fp, #-16]
   12e00:	bl	12878 <__assert_fail@plt+0x1aa0>
   12e04:	mov	r3, #0
   12e08:	b	12e30 <__assert_fail@plt+0x2058>
   12e0c:	ldr	r2, [fp, #-12]
   12e10:	ldr	r3, [fp, #-8]
   12e14:	sdiv	r2, r2, r3
   12e18:	ldr	r3, [fp, #-20]	; 0xffffffec
   12e1c:	str	r2, [r3]
   12e20:	ldr	r3, [fp, #-20]	; 0xffffffec
   12e24:	ldr	r3, [r3]
   12e28:	ldr	r2, [fp, #-12]
   12e2c:	sdiv	r3, r2, r3
   12e30:	mov	r0, r3
   12e34:	sub	sp, fp, #4
   12e38:	ldr	fp, [sp]
   12e3c:	add	sp, sp, #4
   12e40:	pop	{pc}		; (ldr pc, [sp], #4)
   12e44:	str	r4, [sp, #-12]!
   12e48:	str	fp, [sp, #4]
   12e4c:	str	lr, [sp, #8]
   12e50:	add	fp, sp, #8
   12e54:	sub	sp, sp, #52	; 0x34
   12e58:	str	r0, [fp, #-56]	; 0xffffffc8
   12e5c:	sub	r3, fp, #52	; 0x34
   12e60:	mov	r1, r3
   12e64:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12e68:	bl	12d18 <__assert_fail@plt+0x1f40>
   12e6c:	str	r0, [fp, #-44]	; 0xffffffd4
   12e70:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12e74:	cmp	r3, #0
   12e78:	beq	1313c <__assert_fail@plt+0x2364>
   12e7c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12e80:	ldr	r2, [r3, #12]
   12e84:	movw	r3, #53504	; 0xd100
   12e88:	movt	r3, #2
   12e8c:	ldr	r3, [r3]
   12e90:	cmp	r2, r3
   12e94:	ble	12f34 <__assert_fail@plt+0x215c>
   12e98:	movw	r3, #53544	; 0xd128
   12e9c:	movt	r3, #2
   12ea0:	ldr	r2, [r3]
   12ea4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12ea8:	ldr	r3, [r3, #12]
   12eac:	lsl	r3, r3, #2
   12eb0:	mov	r1, r3
   12eb4:	mov	r0, r2
   12eb8:	bl	1af84 <__assert_fail@plt+0xa1ac>
   12ebc:	str	r0, [fp, #-48]	; 0xffffffd0
   12ec0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12ec4:	cmp	r3, #0
   12ec8:	bne	12f10 <__assert_fail@plt+0x2138>
   12ecc:	movw	r3, #53520	; 0xd110
   12ed0:	movt	r3, #2
   12ed4:	ldr	r4, [r3]
   12ed8:	bl	10cd0 <__errno_location@plt>
   12edc:	mov	r3, r0
   12ee0:	ldr	r3, [r3]
   12ee4:	mov	r0, r3
   12ee8:	bl	10c7c <strerror@plt>
   12eec:	mov	r3, r0
   12ef0:	mov	r2, r3
   12ef4:	movw	r1, #48632	; 0xbdf8
   12ef8:	movt	r1, #1
   12efc:	mov	r0, r4
   12f00:	bl	10cc4 <fprintf@plt>
   12f04:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12f08:	bl	12878 <__assert_fail@plt+0x1aa0>
   12f0c:	b	13140 <__assert_fail@plt+0x2368>
   12f10:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12f14:	ldr	r2, [r3, #12]
   12f18:	movw	r3, #53504	; 0xd100
   12f1c:	movt	r3, #2
   12f20:	str	r2, [r3]
   12f24:	movw	r3, #53544	; 0xd128
   12f28:	movt	r3, #2
   12f2c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12f30:	str	r2, [r3]
   12f34:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12f38:	ldr	r3, [r3]
   12f3c:	str	r3, [fp, #-16]
   12f40:	mov	r3, #0
   12f44:	str	r3, [fp, #-32]	; 0xffffffe0
   12f48:	b	12f90 <__assert_fail@plt+0x21b8>
   12f4c:	ldr	r3, [fp, #-16]
   12f50:	ldr	r3, [r3, #16]
   12f54:	cmp	r3, #1
   12f58:	beq	12f84 <__assert_fail@plt+0x21ac>
   12f5c:	movw	r3, #53544	; 0xd128
   12f60:	movt	r3, #2
   12f64:	ldr	r2, [r3]
   12f68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12f6c:	add	r1, r3, #1
   12f70:	str	r1, [fp, #-32]	; 0xffffffe0
   12f74:	lsl	r3, r3, #2
   12f78:	add	r3, r2, r3
   12f7c:	ldr	r2, [fp, #-16]
   12f80:	str	r2, [r3]
   12f84:	ldr	r3, [fp, #-16]
   12f88:	ldr	r3, [r3, #8]
   12f8c:	str	r3, [fp, #-16]
   12f90:	ldr	r3, [fp, #-16]
   12f94:	cmp	r3, #0
   12f98:	bne	12f4c <__assert_fail@plt+0x2174>
   12f9c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12fa0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12fa4:	sdiv	r3, r2, r3
   12fa8:	str	r3, [fp, #-36]	; 0xffffffdc
   12fac:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12fb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12fb4:	sdiv	r1, r3, r2
   12fb8:	mul	r2, r2, r1
   12fbc:	sub	r3, r3, r2
   12fc0:	cmp	r3, #0
   12fc4:	beq	12fd4 <__assert_fail@plt+0x21fc>
   12fc8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12fcc:	add	r3, r3, #1
   12fd0:	str	r3, [fp, #-36]	; 0xffffffdc
   12fd4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12fd8:	ldr	r3, [r3]
   12fdc:	ldr	r3, [r3, #48]	; 0x30
   12fe0:	cmp	r3, #0
   12fe4:	beq	1304c <__assert_fail@plt+0x2274>
   12fe8:	movw	r3, #53640	; 0xd188
   12fec:	movt	r3, #2
   12ff0:	ldr	r3, [r3]
   12ff4:	cmp	r3, #0
   12ff8:	bne	13010 <__assert_fail@plt+0x2238>
   12ffc:	movw	r3, #53588	; 0xd154
   13000:	movt	r3, #2
   13004:	ldr	r3, [r3]
   13008:	cmp	r3, #0
   1300c:	beq	1304c <__assert_fail@plt+0x2274>
   13010:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13014:	ldr	r2, [r3, #4]
   13018:	movw	r3, #53668	; 0xd1a4
   1301c:	movt	r3, #2
   13020:	ldr	r3, [r3]
   13024:	add	r3, r2, r3
   13028:	sub	r2, r3, #1
   1302c:	movw	r3, #53668	; 0xd1a4
   13030:	movt	r3, #2
   13034:	ldr	r3, [r3]
   13038:	udiv	r3, r2, r3
   1303c:	mov	r1, r3
   13040:	movw	r0, #48548	; 0xbda4
   13044:	movt	r0, #1
   13048:	bl	10b98 <printf@plt>
   1304c:	mov	r3, #0
   13050:	str	r3, [fp, #-40]	; 0xffffffd8
   13054:	b	13128 <__assert_fail@plt+0x2350>
   13058:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1305c:	str	r3, [fp, #-20]	; 0xffffffec
   13060:	mov	r3, #0
   13064:	str	r3, [fp, #-28]	; 0xffffffe4
   13068:	movw	r3, #53544	; 0xd128
   1306c:	movt	r3, #2
   13070:	ldr	r2, [r3]
   13074:	ldr	r3, [fp, #-20]	; 0xffffffec
   13078:	lsl	r3, r3, #2
   1307c:	add	r3, r2, r3
   13080:	ldr	r0, [r3]
   13084:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13088:	ldr	r3, [r3, #32]
   1308c:	mov	r1, r3
   13090:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13094:	ldr	r3, [r3, #20]
   13098:	mov	r2, r3
   1309c:	bl	13154 <__assert_fail@plt+0x237c>
   130a0:	str	r0, [fp, #-24]	; 0xffffffe8
   130a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   130a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   130ac:	add	r3, r2, r3
   130b0:	str	r3, [fp, #-20]	; 0xffffffec
   130b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   130b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   130bc:	cmp	r2, r3
   130c0:	bge	13108 <__assert_fail@plt+0x2330>
   130c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   130c8:	add	r3, r3, #1
   130cc:	str	r3, [fp, #-28]	; 0xffffffe4
   130d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   130d4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   130d8:	cmp	r2, r3
   130dc:	beq	13110 <__assert_fail@plt+0x2338>
   130e0:	b	130ec <__assert_fail@plt+0x2314>
   130e4:	mov	r0, #32
   130e8:	bl	10cf4 <putchar@plt>
   130ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   130f0:	add	r2, r3, #1
   130f4:	str	r2, [fp, #-24]	; 0xffffffe8
   130f8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   130fc:	cmp	r2, r3
   13100:	bgt	130e4 <__assert_fail@plt+0x230c>
   13104:	b	13068 <__assert_fail@plt+0x2290>
   13108:	nop	{0}
   1310c:	b	13114 <__assert_fail@plt+0x233c>
   13110:	nop	{0}
   13114:	mov	r0, #10
   13118:	bl	10cf4 <putchar@plt>
   1311c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13120:	add	r3, r3, #1
   13124:	str	r3, [fp, #-40]	; 0xffffffd8
   13128:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1312c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13130:	cmp	r2, r3
   13134:	blt	13058 <__assert_fail@plt+0x2280>
   13138:	b	13140 <__assert_fail@plt+0x2368>
   1313c:	nop	{0}
   13140:	sub	sp, fp, #8
   13144:	ldr	r4, [sp]
   13148:	ldr	fp, [sp, #4]
   1314c:	add	sp, sp, #8
   13150:	pop	{pc}		; (ldr pc, [sp], #4)
   13154:	strd	r4, [sp, #-20]!	; 0xffffffec
   13158:	str	r6, [sp, #8]
   1315c:	str	fp, [sp, #12]
   13160:	str	lr, [sp, #16]
   13164:	add	fp, sp, #16
   13168:	sub	sp, sp, #28
   1316c:	str	r0, [fp, #-32]	; 0xffffffe0
   13170:	str	r1, [fp, #-36]	; 0xffffffdc
   13174:	str	r2, [fp, #-40]	; 0xffffffd8
   13178:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1317c:	add	r3, r3, #64	; 0x40
   13180:	str	r3, [fp, #-28]	; 0xffffffe4
   13184:	mov	r3, #0
   13188:	str	r3, [fp, #-24]	; 0xffffffe8
   1318c:	movw	r3, #53612	; 0xd16c
   13190:	movt	r3, #2
   13194:	ldr	r3, [r3]
   13198:	cmp	r3, #0
   1319c:	beq	131d0 <__assert_fail@plt+0x23f8>
   131a0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   131a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   131a8:	ldrd	r2, [r3, #96]	; 0x60
   131ac:	mov	r3, r2
   131b0:	mov	r2, r3
   131b4:	movw	r0, #48560	; 0xbdb0
   131b8:	movt	r0, #1
   131bc:	bl	10b98 <printf@plt>
   131c0:	mov	r2, r0
   131c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   131c8:	add	r3, r3, r2
   131cc:	str	r3, [fp, #-24]	; 0xffffffe8
   131d0:	movw	r3, #53588	; 0xd154
   131d4:	movt	r3, #2
   131d8:	ldr	r3, [r3]
   131dc:	cmp	r3, #0
   131e0:	beq	13258 <__assert_fail@plt+0x2480>
   131e4:	ldr	r6, [fp, #-40]	; 0xffffffd8
   131e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   131ec:	ldrd	r0, [r3, #64]	; 0x40
   131f0:	movw	r3, #53668	; 0xd1a4
   131f4:	movt	r3, #2
   131f8:	ldr	r3, [r3]
   131fc:	sub	r3, r3, #1
   13200:	mov	r2, r3
   13204:	asr	r3, r2, #31
   13208:	adds	r4, r0, r2
   1320c:	adc	r5, r1, r3
   13210:	movw	r3, #53668	; 0xd1a4
   13214:	movt	r3, #2
   13218:	ldr	r3, [r3]
   1321c:	mov	r2, r3
   13220:	asr	r3, r2, #31
   13224:	mov	r0, r4
   13228:	mov	r1, r5
   1322c:	bl	1ba04 <__assert_fail@plt+0xac2c>
   13230:	mov	r2, r0
   13234:	mov	r3, r1
   13238:	mov	r1, r6
   1323c:	movw	r0, #48568	; 0xbdb8
   13240:	movt	r0, #1
   13244:	bl	10b98 <printf@plt>
   13248:	mov	r2, r0
   1324c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13250:	add	r3, r3, r2
   13254:	str	r3, [fp, #-24]	; 0xffffffe8
   13258:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1325c:	add	r3, r3, #168	; 0xa8
   13260:	mov	r0, r3
   13264:	bl	139f8 <__assert_fail@plt+0x2c20>
   13268:	mov	r2, r0
   1326c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13270:	add	r3, r3, r2
   13274:	str	r3, [fp, #-24]	; 0xffffffe8
   13278:	movw	r3, #53628	; 0xd17c
   1327c:	movt	r3, #2
   13280:	ldr	r3, [r3]
   13284:	cmp	r3, #0
   13288:	bne	132b4 <__assert_fail@plt+0x24dc>
   1328c:	movw	r3, #53644	; 0xd18c
   13290:	movt	r3, #2
   13294:	ldr	r3, [r3]
   13298:	cmp	r3, #0
   1329c:	beq	132d4 <__assert_fail@plt+0x24fc>
   132a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   132a4:	ldr	r3, [r3, #16]
   132a8:	and	r3, r3, #61440	; 0xf000
   132ac:	cmp	r3, #16384	; 0x4000
   132b0:	bne	132d4 <__assert_fail@plt+0x24fc>
   132b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   132b8:	ldr	r3, [r3, #16]
   132bc:	mov	r0, r3
   132c0:	bl	137b4 <__assert_fail@plt+0x29dc>
   132c4:	mov	r2, r0
   132c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   132cc:	add	r3, r3, r2
   132d0:	str	r3, [fp, #-24]	; 0xffffffe8
   132d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   132d8:	mov	r0, r3
   132dc:	sub	sp, fp, #16
   132e0:	ldrd	r4, [sp]
   132e4:	ldr	r6, [sp, #8]
   132e8:	ldr	fp, [sp, #12]
   132ec:	add	sp, sp, #16
   132f0:	pop	{pc}		; (ldr pc, [sp], #4)
   132f4:	str	r4, [sp, #-12]!
   132f8:	str	fp, [sp, #4]
   132fc:	str	lr, [sp, #8]
   13300:	add	fp, sp, #8
   13304:	sub	sp, sp, #20
   13308:	str	r0, [fp, #-24]	; 0xffffffe8
   1330c:	sub	r3, fp, #24
   13310:	mov	r0, r3
   13314:	bl	10be0 <ctime@plt>
   13318:	str	r0, [fp, #-20]	; 0xffffffec
   1331c:	mov	r3, #4
   13320:	str	r3, [fp, #-16]
   13324:	b	1334c <__assert_fail@plt+0x2574>
   13328:	ldr	r3, [fp, #-16]
   1332c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13330:	add	r3, r2, r3
   13334:	ldrb	r3, [r3]
   13338:	mov	r0, r3
   1333c:	bl	10cf4 <putchar@plt>
   13340:	ldr	r3, [fp, #-16]
   13344:	add	r3, r3, #1
   13348:	str	r3, [fp, #-16]
   1334c:	ldr	r3, [fp, #-16]
   13350:	cmp	r3, #10
   13354:	ble	13328 <__assert_fail@plt+0x2550>
   13358:	movw	r3, #53648	; 0xd190
   1335c:	movt	r3, #2
   13360:	ldr	r3, [r3]
   13364:	cmp	r3, #0
   13368:	beq	133ac <__assert_fail@plt+0x25d4>
   1336c:	mov	r3, #11
   13370:	str	r3, [fp, #-16]
   13374:	b	1339c <__assert_fail@plt+0x25c4>
   13378:	ldr	r3, [fp, #-16]
   1337c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13380:	add	r3, r2, r3
   13384:	ldrb	r3, [r3]
   13388:	mov	r0, r3
   1338c:	bl	10cf4 <putchar@plt>
   13390:	ldr	r3, [fp, #-16]
   13394:	add	r3, r3, #1
   13398:	str	r3, [fp, #-16]
   1339c:	ldr	r3, [fp, #-16]
   133a0:	cmp	r3, #23
   133a4:	ble	13378 <__assert_fail@plt+0x25a0>
   133a8:	b	13454 <__assert_fail@plt+0x267c>
   133ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   133b0:	movw	r4, #61695	; 0xf0ff
   133b4:	movt	r4, #239	; 0xef
   133b8:	add	r4, r3, r4
   133bc:	mov	r0, #0
   133c0:	bl	10bd4 <time@plt>
   133c4:	mov	r3, r0
   133c8:	cmp	r4, r3
   133cc:	blt	13410 <__assert_fail@plt+0x2638>
   133d0:	mov	r3, #11
   133d4:	str	r3, [fp, #-16]
   133d8:	b	13400 <__assert_fail@plt+0x2628>
   133dc:	ldr	r3, [fp, #-16]
   133e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   133e4:	add	r3, r2, r3
   133e8:	ldrb	r3, [r3]
   133ec:	mov	r0, r3
   133f0:	bl	10cf4 <putchar@plt>
   133f4:	ldr	r3, [fp, #-16]
   133f8:	add	r3, r3, #1
   133fc:	str	r3, [fp, #-16]
   13400:	ldr	r3, [fp, #-16]
   13404:	cmp	r3, #15
   13408:	ble	133dc <__assert_fail@plt+0x2604>
   1340c:	b	13454 <__assert_fail@plt+0x267c>
   13410:	mov	r0, #32
   13414:	bl	10cf4 <putchar@plt>
   13418:	mov	r3, #20
   1341c:	str	r3, [fp, #-16]
   13420:	b	13448 <__assert_fail@plt+0x2670>
   13424:	ldr	r3, [fp, #-16]
   13428:	ldr	r2, [fp, #-20]	; 0xffffffec
   1342c:	add	r3, r2, r3
   13430:	ldrb	r3, [r3]
   13434:	mov	r0, r3
   13438:	bl	10cf4 <putchar@plt>
   1343c:	ldr	r3, [fp, #-16]
   13440:	add	r3, r3, #1
   13444:	str	r3, [fp, #-16]
   13448:	ldr	r3, [fp, #-16]
   1344c:	cmp	r3, #23
   13450:	ble	13424 <__assert_fail@plt+0x264c>
   13454:	mov	r0, #32
   13458:	bl	10cf4 <putchar@plt>
   1345c:	nop	{0}
   13460:	sub	sp, fp, #8
   13464:	ldr	r4, [sp]
   13468:	ldr	fp, [sp, #4]
   1346c:	add	sp, sp, #8
   13470:	pop	{pc}		; (ldr pc, [sp], #4)
   13474:	str	fp, [sp, #-8]!
   13478:	str	lr, [sp, #4]
   1347c:	add	fp, sp, #4
   13480:	sub	sp, sp, #32
   13484:	str	r0, [fp, #-32]	; 0xffffffe0
   13488:	sub	r3, fp, #24
   1348c:	mov	r1, r3
   13490:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13494:	bl	12d18 <__assert_fail@plt+0x1f40>
   13498:	str	r0, [fp, #-20]	; 0xffffffec
   1349c:	ldr	r3, [fp, #-20]	; 0xffffffec
   134a0:	cmp	r3, #0
   134a4:	beq	135fc <__assert_fail@plt+0x2824>
   134a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   134ac:	ldr	r3, [r3]
   134b0:	ldr	r3, [r3, #48]	; 0x30
   134b4:	cmp	r3, #0
   134b8:	beq	13524 <__assert_fail@plt+0x274c>
   134bc:	movw	r3, #53640	; 0xd188
   134c0:	movt	r3, #2
   134c4:	ldr	r3, [r3]
   134c8:	cmp	r3, #0
   134cc:	bne	134e4 <__assert_fail@plt+0x270c>
   134d0:	movw	r3, #53588	; 0xd154
   134d4:	movt	r3, #2
   134d8:	ldr	r3, [r3]
   134dc:	cmp	r3, #0
   134e0:	beq	13524 <__assert_fail@plt+0x274c>
   134e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   134e8:	ldr	r2, [r3, #4]
   134ec:	movw	r3, #53668	; 0xd1a4
   134f0:	movt	r3, #2
   134f4:	ldr	r3, [r3]
   134f8:	add	r3, r2, r3
   134fc:	sub	r2, r3, #1
   13500:	movw	r3, #53668	; 0xd1a4
   13504:	movt	r3, #2
   13508:	ldr	r3, [r3]
   1350c:	udiv	r3, r2, r3
   13510:	mov	r2, r3
   13514:	mov	r3, #0
   13518:	movw	r0, #48648	; 0xbe08
   1351c:	movt	r0, #1
   13520:	bl	10b98 <printf@plt>
   13524:	mov	r3, #0
   13528:	str	r3, [fp, #-16]
   1352c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13530:	ldr	r3, [r3]
   13534:	str	r3, [fp, #-8]
   13538:	b	135e4 <__assert_fail@plt+0x280c>
   1353c:	ldr	r3, [fp, #-8]
   13540:	ldr	r3, [r3, #16]
   13544:	cmp	r3, #1
   13548:	beq	135d4 <__assert_fail@plt+0x27fc>
   1354c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13550:	ldr	r2, [fp, #-16]
   13554:	cmp	r2, r3
   13558:	blt	1356c <__assert_fail@plt+0x2794>
   1355c:	mov	r3, #0
   13560:	str	r3, [fp, #-16]
   13564:	mov	r0, #10
   13568:	bl	10cf4 <putchar@plt>
   1356c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13570:	ldr	r3, [r3, #32]
   13574:	mov	r1, r3
   13578:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1357c:	ldr	r3, [r3, #20]
   13580:	mov	r2, r3
   13584:	ldr	r0, [fp, #-8]
   13588:	bl	13154 <__assert_fail@plt+0x237c>
   1358c:	str	r0, [fp, #-12]
   13590:	ldr	r3, [fp, #-16]
   13594:	add	r3, r3, #1
   13598:	str	r3, [fp, #-16]
   1359c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   135a0:	ldr	r2, [fp, #-16]
   135a4:	cmp	r2, r3
   135a8:	bge	135d8 <__assert_fail@plt+0x2800>
   135ac:	b	135b8 <__assert_fail@plt+0x27e0>
   135b0:	mov	r0, #32
   135b4:	bl	10cf4 <putchar@plt>
   135b8:	ldr	r3, [fp, #-12]
   135bc:	add	r2, r3, #1
   135c0:	str	r2, [fp, #-12]
   135c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   135c8:	cmp	r2, r3
   135cc:	bgt	135b0 <__assert_fail@plt+0x27d8>
   135d0:	b	135d8 <__assert_fail@plt+0x2800>
   135d4:	nop	{0}
   135d8:	ldr	r3, [fp, #-8]
   135dc:	ldr	r3, [r3, #8]
   135e0:	str	r3, [fp, #-8]
   135e4:	ldr	r3, [fp, #-8]
   135e8:	cmp	r3, #0
   135ec:	bne	1353c <__assert_fail@plt+0x2764>
   135f0:	mov	r0, #10
   135f4:	bl	10cf4 <putchar@plt>
   135f8:	b	13600 <__assert_fail@plt+0x2828>
   135fc:	nop	{0}
   13600:	sub	sp, fp, #4
   13604:	ldr	fp, [sp]
   13608:	add	sp, sp, #4
   1360c:	pop	{pc}		; (ldr pc, [sp], #4)
   13610:	str	fp, [sp, #-8]!
   13614:	str	lr, [sp, #4]
   13618:	add	fp, sp, #4
   1361c:	sub	sp, sp, #24
   13620:	str	r0, [fp, #-24]	; 0xffffffe8
   13624:	mov	r3, #0
   13628:	str	r3, [fp, #-16]
   1362c:	movw	r3, #53612	; 0xd16c
   13630:	movt	r3, #2
   13634:	ldr	r3, [r3]
   13638:	cmp	r3, #0
   1363c:	beq	13658 <__assert_fail@plt+0x2880>
   13640:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13644:	ldr	r3, [r3, #32]
   13648:	add	r3, r3, #1
   1364c:	ldr	r2, [fp, #-16]
   13650:	add	r3, r2, r3
   13654:	str	r3, [fp, #-16]
   13658:	movw	r3, #53588	; 0xd154
   1365c:	movt	r3, #2
   13660:	ldr	r3, [r3]
   13664:	cmp	r3, #0
   13668:	beq	13684 <__assert_fail@plt+0x28ac>
   1366c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13670:	ldr	r3, [r3, #20]
   13674:	add	r3, r3, #1
   13678:	ldr	r2, [fp, #-16]
   1367c:	add	r3, r2, r3
   13680:	str	r3, [fp, #-16]
   13684:	movw	r3, #53628	; 0xd17c
   13688:	movt	r3, #2
   1368c:	ldr	r3, [r3]
   13690:	cmp	r3, #0
   13694:	beq	136a4 <__assert_fail@plt+0x28cc>
   13698:	ldr	r3, [fp, #-16]
   1369c:	add	r3, r3, #1
   136a0:	str	r3, [fp, #-16]
   136a4:	mov	r3, #0
   136a8:	str	r3, [fp, #-12]
   136ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   136b0:	ldr	r3, [r3]
   136b4:	str	r3, [fp, #-8]
   136b8:	b	1378c <__assert_fail@plt+0x29b4>
   136bc:	ldr	r3, [fp, #-8]
   136c0:	ldr	r3, [r3, #16]
   136c4:	cmp	r3, #1
   136c8:	beq	1377c <__assert_fail@plt+0x29a4>
   136cc:	ldr	r3, [fp, #-12]
   136d0:	cmp	r3, #0
   136d4:	ble	13748 <__assert_fail@plt+0x2970>
   136d8:	mov	r0, #44	; 0x2c
   136dc:	bl	10cf4 <putchar@plt>
   136e0:	ldr	r3, [fp, #-12]
   136e4:	add	r3, r3, #1
   136e8:	str	r3, [fp, #-12]
   136ec:	ldr	r3, [fp, #-12]
   136f0:	add	r2, r3, #1
   136f4:	ldr	r3, [fp, #-16]
   136f8:	add	r3, r2, r3
   136fc:	mov	r2, r3
   13700:	ldr	r3, [fp, #-8]
   13704:	ldr	r3, [r3, #52]	; 0x34
   13708:	add	r2, r2, r3
   1370c:	movw	r3, #53488	; 0xd0f0
   13710:	movt	r3, #2
   13714:	ldr	r3, [r3]
   13718:	cmp	r2, r3
   1371c:	bcc	13734 <__assert_fail@plt+0x295c>
   13720:	mov	r0, #10
   13724:	bl	10cf4 <putchar@plt>
   13728:	mov	r3, #0
   1372c:	str	r3, [fp, #-12]
   13730:	b	13748 <__assert_fail@plt+0x2970>
   13734:	mov	r0, #32
   13738:	bl	10cf4 <putchar@plt>
   1373c:	ldr	r3, [fp, #-12]
   13740:	add	r3, r3, #1
   13744:	str	r3, [fp, #-12]
   13748:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1374c:	ldr	r3, [r3, #32]
   13750:	mov	r1, r3
   13754:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13758:	ldr	r3, [r3, #20]
   1375c:	mov	r2, r3
   13760:	ldr	r0, [fp, #-8]
   13764:	bl	13154 <__assert_fail@plt+0x237c>
   13768:	mov	r2, r0
   1376c:	ldr	r3, [fp, #-12]
   13770:	add	r3, r3, r2
   13774:	str	r3, [fp, #-12]
   13778:	b	13780 <__assert_fail@plt+0x29a8>
   1377c:	nop	{0}
   13780:	ldr	r3, [fp, #-8]
   13784:	ldr	r3, [r3, #8]
   13788:	str	r3, [fp, #-8]
   1378c:	ldr	r3, [fp, #-8]
   13790:	cmp	r3, #0
   13794:	bne	136bc <__assert_fail@plt+0x28e4>
   13798:	mov	r0, #10
   1379c:	bl	10cf4 <putchar@plt>
   137a0:	nop	{0}
   137a4:	sub	sp, fp, #4
   137a8:	ldr	fp, [sp]
   137ac:	add	sp, sp, #4
   137b0:	pop	{pc}		; (ldr pc, [sp], #4)
   137b4:	str	fp, [sp, #-8]!
   137b8:	str	lr, [sp, #4]
   137bc:	add	fp, sp, #4
   137c0:	sub	sp, sp, #8
   137c4:	str	r0, [fp, #-8]
   137c8:	ldr	r3, [fp, #-8]
   137cc:	and	r3, r3, #61440	; 0xf000
   137d0:	cmp	r3, #16384	; 0x4000
   137d4:	beq	13800 <__assert_fail@plt+0x2a28>
   137d8:	cmp	r3, #16384	; 0x4000
   137dc:	bhi	137ec <__assert_fail@plt+0x2a14>
   137e0:	cmp	r3, #4096	; 0x1000
   137e4:	beq	13810 <__assert_fail@plt+0x2a38>
   137e8:	b	13840 <__assert_fail@plt+0x2a68>
   137ec:	cmp	r3, #40960	; 0xa000
   137f0:	beq	13820 <__assert_fail@plt+0x2a48>
   137f4:	cmp	r3, #49152	; 0xc000
   137f8:	beq	13830 <__assert_fail@plt+0x2a58>
   137fc:	b	13840 <__assert_fail@plt+0x2a68>
   13800:	mov	r0, #47	; 0x2f
   13804:	bl	10cf4 <putchar@plt>
   13808:	mov	r3, #1
   1380c:	b	13864 <__assert_fail@plt+0x2a8c>
   13810:	mov	r0, #124	; 0x7c
   13814:	bl	10cf4 <putchar@plt>
   13818:	mov	r3, #1
   1381c:	b	13864 <__assert_fail@plt+0x2a8c>
   13820:	mov	r0, #64	; 0x40
   13824:	bl	10cf4 <putchar@plt>
   13828:	mov	r3, #1
   1382c:	b	13864 <__assert_fail@plt+0x2a8c>
   13830:	mov	r0, #61	; 0x3d
   13834:	bl	10cf4 <putchar@plt>
   13838:	mov	r3, #1
   1383c:	b	13864 <__assert_fail@plt+0x2a8c>
   13840:	ldr	r3, [fp, #-8]
   13844:	and	r3, r3, #73	; 0x49
   13848:	cmp	r3, #0
   1384c:	beq	13860 <__assert_fail@plt+0x2a88>
   13850:	mov	r0, #42	; 0x2a
   13854:	bl	10cf4 <putchar@plt>
   13858:	mov	r3, #1
   1385c:	b	13864 <__assert_fail@plt+0x2a8c>
   13860:	mov	r3, #0
   13864:	mov	r0, r3
   13868:	sub	sp, fp, #4
   1386c:	ldr	fp, [sp]
   13870:	add	sp, sp, #4
   13874:	pop	{pc}		; (ldr pc, [sp], #4)
   13878:	str	r4, [sp, #-12]!
   1387c:	str	fp, [sp, #4]
   13880:	str	lr, [sp, #8]
   13884:	add	fp, sp, #8
   13888:	sub	sp, sp, #8192	; 0x2000
   1388c:	sub	sp, sp, #28
   13890:	sub	r3, fp, #8192	; 0x2000
   13894:	sub	r3, r3, #12
   13898:	str	r0, [r3, #-12]
   1389c:	sub	r3, fp, #8192	; 0x2000
   138a0:	sub	r3, r3, #12
   138a4:	ldr	r3, [r3, #-12]
   138a8:	ldr	r3, [r3, #48]	; 0x30
   138ac:	cmp	r3, #0
   138b0:	bne	138e4 <__assert_fail@plt+0x2b0c>
   138b4:	sub	r3, fp, #8192	; 0x2000
   138b8:	sub	r3, r3, #12
   138bc:	ldr	r3, [r3, #-12]
   138c0:	add	r3, r3, #168	; 0xa8
   138c4:	sub	r0, fp, #4096	; 0x1000
   138c8:	sub	r0, r0, #12
   138cc:	sub	r0, r0, #4
   138d0:	movw	r2, #48660	; 0xbe14
   138d4:	movt	r2, #1
   138d8:	mov	r1, #4096	; 0x1000
   138dc:	bl	10cdc <snprintf@plt>
   138e0:	b	1392c <__assert_fail@plt+0x2b54>
   138e4:	sub	r3, fp, #8192	; 0x2000
   138e8:	sub	r3, r3, #12
   138ec:	ldr	r3, [r3, #-12]
   138f0:	ldr	r3, [r3, #4]
   138f4:	ldr	r2, [r3, #24]
   138f8:	sub	r3, fp, #8192	; 0x2000
   138fc:	sub	r3, r3, #12
   13900:	ldr	r3, [r3, #-12]
   13904:	add	r3, r3, #168	; 0xa8
   13908:	sub	r0, fp, #4096	; 0x1000
   1390c:	sub	r0, r0, #12
   13910:	sub	r0, r0, #4
   13914:	str	r3, [sp]
   13918:	mov	r3, r2
   1391c:	movw	r2, #48664	; 0xbe18
   13920:	movt	r2, #1
   13924:	mov	r1, #4096	; 0x1000
   13928:	bl	10cdc <snprintf@plt>
   1392c:	sub	r1, fp, #8192	; 0x2000
   13930:	sub	r1, r1, #12
   13934:	sub	r1, r1, #4
   13938:	sub	r3, fp, #4096	; 0x1000
   1393c:	sub	r3, r3, #12
   13940:	sub	r3, r3, #4
   13944:	movw	r2, #4095	; 0xfff
   13948:	mov	r0, r3
   1394c:	bl	10c1c <readlink@plt>
   13950:	str	r0, [fp, #-16]
   13954:	ldr	r3, [fp, #-16]
   13958:	cmn	r3, #1
   1395c:	bne	139a4 <__assert_fail@plt+0x2bcc>
   13960:	movw	r3, #53520	; 0xd110
   13964:	movt	r3, #2
   13968:	ldr	r4, [r3]
   1396c:	bl	10cd0 <__errno_location@plt>
   13970:	mov	r3, r0
   13974:	ldr	r3, [r3]
   13978:	mov	r0, r3
   1397c:	bl	10c7c <strerror@plt>
   13980:	mov	r3, r0
   13984:	sub	r2, fp, #4096	; 0x1000
   13988:	sub	r2, r2, #12
   1398c:	sub	r2, r2, #4
   13990:	movw	r1, #48672	; 0xbe20
   13994:	movt	r1, #1
   13998:	mov	r0, r4
   1399c:	bl	10cc4 <fprintf@plt>
   139a0:	b	139e4 <__assert_fail@plt+0x2c0c>
   139a4:	sub	r3, fp, #8192	; 0x2000
   139a8:	sub	r3, r3, #12
   139ac:	mov	r2, r3
   139b0:	ldr	r3, [fp, #-16]
   139b4:	add	r3, r2, r3
   139b8:	sub	r3, r3, #4
   139bc:	mov	r2, #0
   139c0:	strb	r2, [r3]
   139c4:	movw	r0, #48688	; 0xbe30
   139c8:	movt	r0, #1
   139cc:	bl	10b98 <printf@plt>
   139d0:	sub	r3, fp, #8192	; 0x2000
   139d4:	sub	r3, r3, #12
   139d8:	sub	r3, r3, #4
   139dc:	mov	r0, r3
   139e0:	bl	139f8 <__assert_fail@plt+0x2c20>
   139e4:	sub	sp, fp, #8
   139e8:	ldr	r4, [sp]
   139ec:	ldr	fp, [sp, #4]
   139f0:	add	sp, sp, #8
   139f4:	pop	{pc}		; (ldr pc, [sp], #4)
   139f8:	str	fp, [sp, #-8]!
   139fc:	str	lr, [sp, #4]
   13a00:	add	fp, sp, #4
   13a04:	sub	sp, sp, #16
   13a08:	str	r0, [fp, #-16]
   13a0c:	mov	r3, #0
   13a10:	str	r3, [fp, #-8]
   13a14:	b	13a88 <__assert_fail@plt+0x2cb0>
   13a18:	bl	10c94 <__ctype_b_loc@plt>
   13a1c:	mov	r3, r0
   13a20:	ldr	r2, [r3]
   13a24:	ldr	r3, [fp, #-16]
   13a28:	ldrb	r3, [r3]
   13a2c:	lsl	r3, r3, #1
   13a30:	add	r3, r2, r3
   13a34:	ldrh	r3, [r3]
   13a38:	and	r3, r3, #16384	; 0x4000
   13a3c:	cmp	r3, #0
   13a40:	bne	13a58 <__assert_fail@plt+0x2c80>
   13a44:	movw	r3, #53680	; 0xd1b0
   13a48:	movt	r3, #2
   13a4c:	ldr	r3, [r3]
   13a50:	cmp	r3, #0
   13a54:	bne	13a64 <__assert_fail@plt+0x2c8c>
   13a58:	ldr	r3, [fp, #-16]
   13a5c:	ldrb	r3, [r3]
   13a60:	b	13a68 <__assert_fail@plt+0x2c90>
   13a64:	mov	r3, #63	; 0x3f
   13a68:	mov	r0, r3
   13a6c:	bl	10cf4 <putchar@plt>
   13a70:	ldr	r3, [fp, #-8]
   13a74:	add	r3, r3, #1
   13a78:	str	r3, [fp, #-8]
   13a7c:	ldr	r3, [fp, #-16]
   13a80:	add	r3, r3, #1
   13a84:	str	r3, [fp, #-16]
   13a88:	ldr	r3, [fp, #-16]
   13a8c:	ldrb	r3, [r3]
   13a90:	cmp	r3, #0
   13a94:	bne	13a18 <__assert_fail@plt+0x2c40>
   13a98:	ldr	r3, [fp, #-8]
   13a9c:	mov	r0, r3
   13aa0:	sub	sp, fp, #4
   13aa4:	ldr	fp, [sp]
   13aa8:	add	sp, sp, #4
   13aac:	pop	{pc}		; (ldr pc, [sp], #4)
   13ab0:	str	fp, [sp, #-8]!
   13ab4:	str	lr, [sp, #4]
   13ab8:	add	fp, sp, #4
   13abc:	movw	r3, #53520	; 0xd110
   13ac0:	movt	r3, #2
   13ac4:	ldr	r3, [r3]
   13ac8:	mov	r2, #51	; 0x33
   13acc:	mov	r1, #1
   13ad0:	movw	r0, #48696	; 0xbe38
   13ad4:	movt	r0, #1
   13ad8:	bl	10c28 <fwrite@plt>
   13adc:	mov	r3, #1
   13ae0:	mov	r0, r3
   13ae4:	sub	sp, fp, #4
   13ae8:	ldr	fp, [sp]
   13aec:	add	sp, sp, #4
   13af0:	pop	{pc}		; (ldr pc, [sp], #4)
   13af4:	str	fp, [sp, #-8]!
   13af8:	str	lr, [sp, #4]
   13afc:	add	fp, sp, #4
   13b00:	sub	sp, sp, #8
   13b04:	str	r0, [fp, #-8]
   13b08:	str	r1, [fp, #-12]
   13b0c:	ldr	r3, [fp, #-8]
   13b10:	add	r2, r3, #168	; 0xa8
   13b14:	ldr	r3, [fp, #-12]
   13b18:	add	r3, r3, #168	; 0xa8
   13b1c:	mov	r1, r3
   13b20:	mov	r0, r2
   13b24:	bl	10b80 <strcmp@plt>
   13b28:	mov	r3, r0
   13b2c:	mov	r0, r3
   13b30:	sub	sp, fp, #4
   13b34:	ldr	fp, [sp]
   13b38:	add	sp, sp, #4
   13b3c:	pop	{pc}		; (ldr pc, [sp], #4)
   13b40:	str	fp, [sp, #-8]!
   13b44:	str	lr, [sp, #4]
   13b48:	add	fp, sp, #4
   13b4c:	sub	sp, sp, #8
   13b50:	str	r0, [fp, #-8]
   13b54:	str	r1, [fp, #-12]
   13b58:	ldr	r3, [fp, #-12]
   13b5c:	add	r2, r3, #168	; 0xa8
   13b60:	ldr	r3, [fp, #-8]
   13b64:	add	r3, r3, #168	; 0xa8
   13b68:	mov	r1, r3
   13b6c:	mov	r0, r2
   13b70:	bl	10b80 <strcmp@plt>
   13b74:	mov	r3, r0
   13b78:	mov	r0, r3
   13b7c:	sub	sp, fp, #4
   13b80:	ldr	fp, [sp]
   13b84:	add	sp, sp, #4
   13b88:	pop	{pc}		; (ldr pc, [sp], #4)
   13b8c:	str	fp, [sp, #-8]!
   13b90:	str	lr, [sp, #4]
   13b94:	add	fp, sp, #4
   13b98:	sub	sp, sp, #8
   13b9c:	str	r0, [fp, #-8]
   13ba0:	str	r1, [fp, #-12]
   13ba4:	ldr	r3, [fp, #-12]
   13ba8:	ldr	r2, [r3, #144]	; 0x90
   13bac:	ldr	r3, [fp, #-8]
   13bb0:	ldr	r3, [r3, #144]	; 0x90
   13bb4:	cmp	r2, r3
   13bb8:	bgt	13bec <__assert_fail@plt+0x2e14>
   13bbc:	ldr	r3, [fp, #-12]
   13bc0:	ldr	r2, [r3, #144]	; 0x90
   13bc4:	ldr	r3, [fp, #-8]
   13bc8:	ldr	r3, [r3, #144]	; 0x90
   13bcc:	cmp	r2, r3
   13bd0:	bne	13bf4 <__assert_fail@plt+0x2e1c>
   13bd4:	ldr	r3, [fp, #-12]
   13bd8:	ldr	r2, [r3, #148]	; 0x94
   13bdc:	ldr	r3, [fp, #-8]
   13be0:	ldr	r3, [r3, #148]	; 0x94
   13be4:	cmp	r2, r3
   13be8:	ble	13bf4 <__assert_fail@plt+0x2e1c>
   13bec:	mov	r3, #1
   13bf0:	b	13c54 <__assert_fail@plt+0x2e7c>
   13bf4:	ldr	r3, [fp, #-12]
   13bf8:	ldr	r2, [r3, #144]	; 0x90
   13bfc:	ldr	r3, [fp, #-8]
   13c00:	ldr	r3, [r3, #144]	; 0x90
   13c04:	cmp	r2, r3
   13c08:	blt	13c3c <__assert_fail@plt+0x2e64>
   13c0c:	ldr	r3, [fp, #-12]
   13c10:	ldr	r2, [r3, #144]	; 0x90
   13c14:	ldr	r3, [fp, #-8]
   13c18:	ldr	r3, [r3, #144]	; 0x90
   13c1c:	cmp	r2, r3
   13c20:	bne	13c44 <__assert_fail@plt+0x2e6c>
   13c24:	ldr	r3, [fp, #-12]
   13c28:	ldr	r2, [r3, #148]	; 0x94
   13c2c:	ldr	r3, [fp, #-8]
   13c30:	ldr	r3, [r3, #148]	; 0x94
   13c34:	cmp	r2, r3
   13c38:	bge	13c44 <__assert_fail@plt+0x2e6c>
   13c3c:	mvn	r3, #0
   13c40:	b	13c54 <__assert_fail@plt+0x2e7c>
   13c44:	ldr	r1, [fp, #-12]
   13c48:	ldr	r0, [fp, #-8]
   13c4c:	bl	13af4 <__assert_fail@plt+0x2d1c>
   13c50:	mov	r3, r0
   13c54:	mov	r0, r3
   13c58:	sub	sp, fp, #4
   13c5c:	ldr	fp, [sp]
   13c60:	add	sp, sp, #4
   13c64:	pop	{pc}		; (ldr pc, [sp], #4)
   13c68:	str	fp, [sp, #-8]!
   13c6c:	str	lr, [sp, #4]
   13c70:	add	fp, sp, #4
   13c74:	sub	sp, sp, #8
   13c78:	str	r0, [fp, #-8]
   13c7c:	str	r1, [fp, #-12]
   13c80:	ldr	r1, [fp, #-12]
   13c84:	ldr	r0, [fp, #-8]
   13c88:	bl	13b8c <__assert_fail@plt+0x2db4>
   13c8c:	mov	r3, r0
   13c90:	rsb	r3, r3, #0
   13c94:	mov	r0, r3
   13c98:	sub	sp, fp, #4
   13c9c:	ldr	fp, [sp]
   13ca0:	add	sp, sp, #4
   13ca4:	pop	{pc}		; (ldr pc, [sp], #4)
   13ca8:	str	fp, [sp, #-8]!
   13cac:	str	lr, [sp, #4]
   13cb0:	add	fp, sp, #4
   13cb4:	sub	sp, sp, #8
   13cb8:	str	r0, [fp, #-8]
   13cbc:	str	r1, [fp, #-12]
   13cc0:	ldr	r3, [fp, #-12]
   13cc4:	ldr	r2, [r3, #136]	; 0x88
   13cc8:	ldr	r3, [fp, #-8]
   13ccc:	ldr	r3, [r3, #136]	; 0x88
   13cd0:	cmp	r2, r3
   13cd4:	bgt	13d08 <__assert_fail@plt+0x2f30>
   13cd8:	ldr	r3, [fp, #-12]
   13cdc:	ldr	r2, [r3, #136]	; 0x88
   13ce0:	ldr	r3, [fp, #-8]
   13ce4:	ldr	r3, [r3, #136]	; 0x88
   13ce8:	cmp	r2, r3
   13cec:	bne	13d10 <__assert_fail@plt+0x2f38>
   13cf0:	ldr	r3, [fp, #-12]
   13cf4:	ldr	r2, [r3, #140]	; 0x8c
   13cf8:	ldr	r3, [fp, #-8]
   13cfc:	ldr	r3, [r3, #140]	; 0x8c
   13d00:	cmp	r2, r3
   13d04:	ble	13d10 <__assert_fail@plt+0x2f38>
   13d08:	mov	r3, #1
   13d0c:	b	13d70 <__assert_fail@plt+0x2f98>
   13d10:	ldr	r3, [fp, #-12]
   13d14:	ldr	r2, [r3, #136]	; 0x88
   13d18:	ldr	r3, [fp, #-8]
   13d1c:	ldr	r3, [r3, #136]	; 0x88
   13d20:	cmp	r2, r3
   13d24:	blt	13d58 <__assert_fail@plt+0x2f80>
   13d28:	ldr	r3, [fp, #-12]
   13d2c:	ldr	r2, [r3, #136]	; 0x88
   13d30:	ldr	r3, [fp, #-8]
   13d34:	ldr	r3, [r3, #136]	; 0x88
   13d38:	cmp	r2, r3
   13d3c:	bne	13d60 <__assert_fail@plt+0x2f88>
   13d40:	ldr	r3, [fp, #-12]
   13d44:	ldr	r2, [r3, #140]	; 0x8c
   13d48:	ldr	r3, [fp, #-8]
   13d4c:	ldr	r3, [r3, #140]	; 0x8c
   13d50:	cmp	r2, r3
   13d54:	bge	13d60 <__assert_fail@plt+0x2f88>
   13d58:	mvn	r3, #0
   13d5c:	b	13d70 <__assert_fail@plt+0x2f98>
   13d60:	ldr	r1, [fp, #-12]
   13d64:	ldr	r0, [fp, #-8]
   13d68:	bl	13af4 <__assert_fail@plt+0x2d1c>
   13d6c:	mov	r3, r0
   13d70:	mov	r0, r3
   13d74:	sub	sp, fp, #4
   13d78:	ldr	fp, [sp]
   13d7c:	add	sp, sp, #4
   13d80:	pop	{pc}		; (ldr pc, [sp], #4)
   13d84:	str	fp, [sp, #-8]!
   13d88:	str	lr, [sp, #4]
   13d8c:	add	fp, sp, #4
   13d90:	sub	sp, sp, #8
   13d94:	str	r0, [fp, #-8]
   13d98:	str	r1, [fp, #-12]
   13d9c:	ldr	r1, [fp, #-12]
   13da0:	ldr	r0, [fp, #-8]
   13da4:	bl	13ca8 <__assert_fail@plt+0x2ed0>
   13da8:	mov	r3, r0
   13dac:	rsb	r3, r3, #0
   13db0:	mov	r0, r3
   13db4:	sub	sp, fp, #4
   13db8:	ldr	fp, [sp]
   13dbc:	add	sp, sp, #4
   13dc0:	pop	{pc}		; (ldr pc, [sp], #4)
   13dc4:	str	fp, [sp, #-8]!
   13dc8:	str	lr, [sp, #4]
   13dcc:	add	fp, sp, #4
   13dd0:	sub	sp, sp, #8
   13dd4:	str	r0, [fp, #-8]
   13dd8:	str	r1, [fp, #-12]
   13ddc:	ldr	r3, [fp, #-12]
   13de0:	ldr	r2, [r3, #152]	; 0x98
   13de4:	ldr	r3, [fp, #-8]
   13de8:	ldr	r3, [r3, #152]	; 0x98
   13dec:	cmp	r2, r3
   13df0:	bgt	13e24 <__assert_fail@plt+0x304c>
   13df4:	ldr	r3, [fp, #-12]
   13df8:	ldr	r2, [r3, #152]	; 0x98
   13dfc:	ldr	r3, [fp, #-8]
   13e00:	ldr	r3, [r3, #152]	; 0x98
   13e04:	cmp	r2, r3
   13e08:	bne	13e2c <__assert_fail@plt+0x3054>
   13e0c:	ldr	r3, [fp, #-12]
   13e10:	ldr	r2, [r3, #156]	; 0x9c
   13e14:	ldr	r3, [fp, #-8]
   13e18:	ldr	r3, [r3, #156]	; 0x9c
   13e1c:	cmp	r2, r3
   13e20:	ble	13e2c <__assert_fail@plt+0x3054>
   13e24:	mov	r3, #1
   13e28:	b	13e8c <__assert_fail@plt+0x30b4>
   13e2c:	ldr	r3, [fp, #-12]
   13e30:	ldr	r2, [r3, #152]	; 0x98
   13e34:	ldr	r3, [fp, #-8]
   13e38:	ldr	r3, [r3, #152]	; 0x98
   13e3c:	cmp	r2, r3
   13e40:	blt	13e74 <__assert_fail@plt+0x309c>
   13e44:	ldr	r3, [fp, #-12]
   13e48:	ldr	r2, [r3, #152]	; 0x98
   13e4c:	ldr	r3, [fp, #-8]
   13e50:	ldr	r3, [r3, #152]	; 0x98
   13e54:	cmp	r2, r3
   13e58:	bne	13e7c <__assert_fail@plt+0x30a4>
   13e5c:	ldr	r3, [fp, #-12]
   13e60:	ldr	r2, [r3, #156]	; 0x9c
   13e64:	ldr	r3, [fp, #-8]
   13e68:	ldr	r3, [r3, #156]	; 0x9c
   13e6c:	cmp	r2, r3
   13e70:	bge	13e7c <__assert_fail@plt+0x30a4>
   13e74:	mvn	r3, #0
   13e78:	b	13e8c <__assert_fail@plt+0x30b4>
   13e7c:	ldr	r1, [fp, #-12]
   13e80:	ldr	r0, [fp, #-8]
   13e84:	bl	13af4 <__assert_fail@plt+0x2d1c>
   13e88:	mov	r3, r0
   13e8c:	mov	r0, r3
   13e90:	sub	sp, fp, #4
   13e94:	ldr	fp, [sp]
   13e98:	add	sp, sp, #4
   13e9c:	pop	{pc}		; (ldr pc, [sp], #4)
   13ea0:	str	fp, [sp, #-8]!
   13ea4:	str	lr, [sp, #4]
   13ea8:	add	fp, sp, #4
   13eac:	sub	sp, sp, #8
   13eb0:	str	r0, [fp, #-8]
   13eb4:	str	r1, [fp, #-12]
   13eb8:	ldr	r1, [fp, #-12]
   13ebc:	ldr	r0, [fp, #-8]
   13ec0:	bl	13dc4 <__assert_fail@plt+0x2fec>
   13ec4:	mov	r3, r0
   13ec8:	rsb	r3, r3, #0
   13ecc:	mov	r0, r3
   13ed0:	sub	sp, fp, #4
   13ed4:	ldr	fp, [sp]
   13ed8:	add	sp, sp, #4
   13edc:	pop	{pc}		; (ldr pc, [sp], #4)
   13ee0:	str	fp, [sp, #-8]!
   13ee4:	str	lr, [sp, #4]
   13ee8:	add	fp, sp, #4
   13eec:	sub	sp, sp, #8
   13ef0:	str	r0, [fp, #-8]
   13ef4:	str	r1, [fp, #-12]
   13ef8:	ldr	r3, [fp, #-12]
   13efc:	ldrd	r2, [r3, #112]	; 0x70
   13f00:	ldr	r1, [fp, #-8]
   13f04:	ldrd	r0, [r1, #112]	; 0x70
   13f08:	cmp	r0, r2
   13f0c:	sbcs	r3, r1, r3
   13f10:	bge	13f1c <__assert_fail@plt+0x3144>
   13f14:	mov	r3, #1
   13f18:	b	13f50 <__assert_fail@plt+0x3178>
   13f1c:	ldr	r3, [fp, #-12]
   13f20:	ldrd	r0, [r3, #112]	; 0x70
   13f24:	ldr	r3, [fp, #-8]
   13f28:	ldrd	r2, [r3, #112]	; 0x70
   13f2c:	cmp	r0, r2
   13f30:	sbcs	r3, r1, r3
   13f34:	bge	13f40 <__assert_fail@plt+0x3168>
   13f38:	mvn	r3, #0
   13f3c:	b	13f50 <__assert_fail@plt+0x3178>
   13f40:	ldr	r1, [fp, #-12]
   13f44:	ldr	r0, [fp, #-8]
   13f48:	bl	13af4 <__assert_fail@plt+0x2d1c>
   13f4c:	mov	r3, r0
   13f50:	mov	r0, r3
   13f54:	sub	sp, fp, #4
   13f58:	ldr	fp, [sp]
   13f5c:	add	sp, sp, #4
   13f60:	pop	{pc}		; (ldr pc, [sp], #4)
   13f64:	str	fp, [sp, #-8]!
   13f68:	str	lr, [sp, #4]
   13f6c:	add	fp, sp, #4
   13f70:	sub	sp, sp, #8
   13f74:	str	r0, [fp, #-8]
   13f78:	str	r1, [fp, #-12]
   13f7c:	ldr	r1, [fp, #-12]
   13f80:	ldr	r0, [fp, #-8]
   13f84:	bl	13ee0 <__assert_fail@plt+0x3108>
   13f88:	mov	r3, r0
   13f8c:	rsb	r3, r3, #0
   13f90:	mov	r0, r3
   13f94:	sub	sp, fp, #4
   13f98:	ldr	fp, [sp]
   13f9c:	add	sp, sp, #4
   13fa0:	pop	{pc}		; (ldr pc, [sp], #4)
   13fa4:	push	{fp}		; (str fp, [sp, #-4]!)
   13fa8:	add	fp, sp, #0
   13fac:	sub	sp, sp, #12
   13fb0:	str	r0, [fp, #-8]
   13fb4:	ldr	r3, [fp, #-8]
   13fb8:	and	r3, r3, #61440	; 0xf000
   13fbc:	cmp	r3, #32768	; 0x8000
   13fc0:	bne	13fcc <__assert_fail@plt+0x31f4>
   13fc4:	mov	r3, #45	; 0x2d
   13fc8:	b	14060 <__assert_fail@plt+0x3288>
   13fcc:	ldr	r3, [fp, #-8]
   13fd0:	and	r3, r3, #61440	; 0xf000
   13fd4:	cmp	r3, #16384	; 0x4000
   13fd8:	bne	13fe4 <__assert_fail@plt+0x320c>
   13fdc:	mov	r3, #100	; 0x64
   13fe0:	b	14060 <__assert_fail@plt+0x3288>
   13fe4:	ldr	r3, [fp, #-8]
   13fe8:	and	r3, r3, #61440	; 0xf000
   13fec:	cmp	r3, #24576	; 0x6000
   13ff0:	bne	13ffc <__assert_fail@plt+0x3224>
   13ff4:	mov	r3, #98	; 0x62
   13ff8:	b	14060 <__assert_fail@plt+0x3288>
   13ffc:	ldr	r3, [fp, #-8]
   14000:	and	r3, r3, #61440	; 0xf000
   14004:	cmp	r3, #8192	; 0x2000
   14008:	bne	14014 <__assert_fail@plt+0x323c>
   1400c:	mov	r3, #99	; 0x63
   14010:	b	14060 <__assert_fail@plt+0x3288>
   14014:	ldr	r3, [fp, #-8]
   14018:	and	r3, r3, #61440	; 0xf000
   1401c:	cmp	r3, #40960	; 0xa000
   14020:	bne	1402c <__assert_fail@plt+0x3254>
   14024:	mov	r3, #108	; 0x6c
   14028:	b	14060 <__assert_fail@plt+0x3288>
   1402c:	ldr	r3, [fp, #-8]
   14030:	and	r3, r3, #61440	; 0xf000
   14034:	cmp	r3, #4096	; 0x1000
   14038:	bne	14044 <__assert_fail@plt+0x326c>
   1403c:	mov	r3, #112	; 0x70
   14040:	b	14060 <__assert_fail@plt+0x3288>
   14044:	ldr	r3, [fp, #-8]
   14048:	and	r3, r3, #61440	; 0xf000
   1404c:	cmp	r3, #49152	; 0xc000
   14050:	bne	1405c <__assert_fail@plt+0x3284>
   14054:	mov	r3, #115	; 0x73
   14058:	b	14060 <__assert_fail@plt+0x3288>
   1405c:	mov	r3, #63	; 0x3f
   14060:	mov	r0, r3
   14064:	add	sp, fp, #0
   14068:	pop	{fp}		; (ldr fp, [sp], #4)
   1406c:	bx	lr
   14070:	str	fp, [sp, #-8]!
   14074:	str	lr, [sp, #4]
   14078:	add	fp, sp, #4
   1407c:	sub	sp, sp, #8
   14080:	str	r0, [fp, #-8]
   14084:	str	r1, [fp, #-12]
   14088:	ldr	r0, [fp, #-8]
   1408c:	bl	13fa4 <__assert_fail@plt+0x31cc>
   14090:	mov	r3, r0
   14094:	mov	r2, r3
   14098:	ldr	r3, [fp, #-12]
   1409c:	strb	r2, [r3]
   140a0:	ldr	r3, [fp, #-8]
   140a4:	and	r3, r3, #256	; 0x100
   140a8:	cmp	r3, #0
   140ac:	beq	140b8 <__assert_fail@plt+0x32e0>
   140b0:	mov	r2, #114	; 0x72
   140b4:	b	140bc <__assert_fail@plt+0x32e4>
   140b8:	mov	r2, #45	; 0x2d
   140bc:	ldr	r3, [fp, #-12]
   140c0:	add	r3, r3, #1
   140c4:	strb	r2, [r3]
   140c8:	ldr	r3, [fp, #-8]
   140cc:	and	r3, r3, #128	; 0x80
   140d0:	cmp	r3, #0
   140d4:	beq	140e0 <__assert_fail@plt+0x3308>
   140d8:	mov	r2, #119	; 0x77
   140dc:	b	140e4 <__assert_fail@plt+0x330c>
   140e0:	mov	r2, #45	; 0x2d
   140e4:	ldr	r3, [fp, #-12]
   140e8:	add	r3, r3, #2
   140ec:	strb	r2, [r3]
   140f0:	ldr	r3, [fp, #-8]
   140f4:	and	r3, r3, #2048	; 0x800
   140f8:	cmp	r3, #0
   140fc:	beq	14120 <__assert_fail@plt+0x3348>
   14100:	ldr	r3, [fp, #-8]
   14104:	and	r3, r3, #64	; 0x40
   14108:	cmp	r3, #0
   1410c:	beq	14118 <__assert_fail@plt+0x3340>
   14110:	mov	r3, #115	; 0x73
   14114:	b	1413c <__assert_fail@plt+0x3364>
   14118:	mov	r3, #83	; 0x53
   1411c:	b	1413c <__assert_fail@plt+0x3364>
   14120:	ldr	r3, [fp, #-8]
   14124:	and	r3, r3, #64	; 0x40
   14128:	cmp	r3, #0
   1412c:	beq	14138 <__assert_fail@plt+0x3360>
   14130:	mov	r3, #120	; 0x78
   14134:	b	1413c <__assert_fail@plt+0x3364>
   14138:	mov	r3, #45	; 0x2d
   1413c:	ldr	r2, [fp, #-12]
   14140:	add	r2, r2, #3
   14144:	strb	r3, [r2]
   14148:	ldr	r3, [fp, #-8]
   1414c:	and	r3, r3, #32
   14150:	cmp	r3, #0
   14154:	beq	14160 <__assert_fail@plt+0x3388>
   14158:	mov	r2, #114	; 0x72
   1415c:	b	14164 <__assert_fail@plt+0x338c>
   14160:	mov	r2, #45	; 0x2d
   14164:	ldr	r3, [fp, #-12]
   14168:	add	r3, r3, #4
   1416c:	strb	r2, [r3]
   14170:	ldr	r3, [fp, #-8]
   14174:	and	r3, r3, #16
   14178:	cmp	r3, #0
   1417c:	beq	14188 <__assert_fail@plt+0x33b0>
   14180:	mov	r2, #119	; 0x77
   14184:	b	1418c <__assert_fail@plt+0x33b4>
   14188:	mov	r2, #45	; 0x2d
   1418c:	ldr	r3, [fp, #-12]
   14190:	add	r3, r3, #5
   14194:	strb	r2, [r3]
   14198:	ldr	r3, [fp, #-8]
   1419c:	and	r3, r3, #1024	; 0x400
   141a0:	cmp	r3, #0
   141a4:	beq	141c8 <__assert_fail@plt+0x33f0>
   141a8:	ldr	r3, [fp, #-8]
   141ac:	and	r3, r3, #8
   141b0:	cmp	r3, #0
   141b4:	beq	141c0 <__assert_fail@plt+0x33e8>
   141b8:	mov	r3, #115	; 0x73
   141bc:	b	141e4 <__assert_fail@plt+0x340c>
   141c0:	mov	r3, #83	; 0x53
   141c4:	b	141e4 <__assert_fail@plt+0x340c>
   141c8:	ldr	r3, [fp, #-8]
   141cc:	and	r3, r3, #8
   141d0:	cmp	r3, #0
   141d4:	beq	141e0 <__assert_fail@plt+0x3408>
   141d8:	mov	r3, #120	; 0x78
   141dc:	b	141e4 <__assert_fail@plt+0x340c>
   141e0:	mov	r3, #45	; 0x2d
   141e4:	ldr	r2, [fp, #-12]
   141e8:	add	r2, r2, #6
   141ec:	strb	r3, [r2]
   141f0:	ldr	r3, [fp, #-8]
   141f4:	and	r3, r3, #4
   141f8:	cmp	r3, #0
   141fc:	beq	14208 <__assert_fail@plt+0x3430>
   14200:	mov	r2, #114	; 0x72
   14204:	b	1420c <__assert_fail@plt+0x3434>
   14208:	mov	r2, #45	; 0x2d
   1420c:	ldr	r3, [fp, #-12]
   14210:	add	r3, r3, #7
   14214:	strb	r2, [r3]
   14218:	ldr	r3, [fp, #-8]
   1421c:	and	r3, r3, #2
   14220:	cmp	r3, #0
   14224:	beq	14230 <__assert_fail@plt+0x3458>
   14228:	mov	r2, #119	; 0x77
   1422c:	b	14234 <__assert_fail@plt+0x345c>
   14230:	mov	r2, #45	; 0x2d
   14234:	ldr	r3, [fp, #-12]
   14238:	add	r3, r3, #8
   1423c:	strb	r2, [r3]
   14240:	ldr	r3, [fp, #-8]
   14244:	and	r3, r3, #512	; 0x200
   14248:	cmp	r3, #0
   1424c:	beq	14270 <__assert_fail@plt+0x3498>
   14250:	ldr	r3, [fp, #-8]
   14254:	and	r3, r3, #1
   14258:	cmp	r3, #0
   1425c:	beq	14268 <__assert_fail@plt+0x3490>
   14260:	mov	r3, #116	; 0x74
   14264:	b	1428c <__assert_fail@plt+0x34b4>
   14268:	mov	r3, #84	; 0x54
   1426c:	b	1428c <__assert_fail@plt+0x34b4>
   14270:	ldr	r3, [fp, #-8]
   14274:	and	r3, r3, #1
   14278:	cmp	r3, #0
   1427c:	beq	14288 <__assert_fail@plt+0x34b0>
   14280:	mov	r3, #120	; 0x78
   14284:	b	1428c <__assert_fail@plt+0x34b4>
   14288:	mov	r3, #45	; 0x2d
   1428c:	ldr	r2, [fp, #-12]
   14290:	add	r2, r2, #9
   14294:	strb	r3, [r2]
   14298:	ldr	r3, [fp, #-12]
   1429c:	add	r3, r3, #10
   142a0:	mov	r2, #32
   142a4:	strb	r2, [r3]
   142a8:	ldr	r3, [fp, #-12]
   142ac:	add	r3, r3, #11
   142b0:	mov	r2, #0
   142b4:	strb	r2, [r3]
   142b8:	nop	{0}
   142bc:	sub	sp, fp, #4
   142c0:	ldr	fp, [sp]
   142c4:	add	sp, sp, #4
   142c8:	pop	{pc}		; (ldr pc, [sp], #4)
   142cc:	str	fp, [sp, #-8]!
   142d0:	str	lr, [sp, #4]
   142d4:	add	fp, sp, #4
   142d8:	sub	sp, sp, #8
   142dc:	str	r0, [fp, #-8]
   142e0:	str	r1, [fp, #-12]
   142e4:	ldr	r3, [fp, #-8]
   142e8:	ldr	r3, [r3, #16]
   142ec:	ldr	r1, [fp, #-12]
   142f0:	mov	r0, r3
   142f4:	bl	14070 <__assert_fail@plt+0x3298>
   142f8:	nop	{0}
   142fc:	sub	sp, fp, #4
   14300:	ldr	fp, [sp]
   14304:	add	sp, sp, #4
   14308:	pop	{pc}		; (ldr pc, [sp], #4)
   1430c:	str	r4, [sp, #-12]!
   14310:	str	fp, [sp, #4]
   14314:	str	lr, [sp, #8]
   14318:	add	fp, sp, #8
   1431c:	sub	sp, sp, #20
   14320:	str	r0, [fp, #-24]	; 0xffffffe8
   14324:	bl	10cd0 <__errno_location@plt>
   14328:	mov	r3, r0
   1432c:	ldr	r3, [r3]
   14330:	str	r3, [fp, #-20]	; 0xffffffec
   14334:	bl	10cd0 <__errno_location@plt>
   14338:	mov	r3, r0
   1433c:	ldr	r3, [r3]
   14340:	str	r3, [fp, #-16]
   14344:	bl	10cd0 <__errno_location@plt>
   14348:	mov	r2, r0
   1434c:	mov	r3, #0
   14350:	str	r3, [r2]
   14354:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14358:	bl	10bbc <free@plt>
   1435c:	bl	10cd0 <__errno_location@plt>
   14360:	mov	r3, r0
   14364:	ldr	r3, [r3]
   14368:	cmp	r3, #0
   1436c:	moveq	r3, #1
   14370:	movne	r3, #0
   14374:	uxtb	r3, r3
   14378:	mov	r4, r3
   1437c:	bl	10cd0 <__errno_location@plt>
   14380:	mov	r2, r0
   14384:	lsl	r3, r4, #2
   14388:	sub	r1, fp, #12
   1438c:	add	r3, r1, r3
   14390:	ldr	r3, [r3, #-8]
   14394:	str	r3, [r2]
   14398:	nop	{0}
   1439c:	sub	sp, fp, #8
   143a0:	ldr	r4, [sp]
   143a4:	ldr	fp, [sp, #4]
   143a8:	add	sp, sp, #8
   143ac:	pop	{pc}		; (ldr pc, [sp], #4)
   143b0:	push	{fp}		; (str fp, [sp, #-4]!)
   143b4:	add	fp, sp, #0
   143b8:	sub	sp, sp, #20
   143bc:	str	r0, [fp, #-16]
   143c0:	str	r1, [fp, #-20]	; 0xffffffec
   143c4:	ldr	r3, [fp, #-16]
   143c8:	str	r3, [fp, #-8]
   143cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   143d0:	str	r3, [fp, #-12]
   143d4:	ldr	r3, [fp, #-8]
   143d8:	ldrd	r0, [r3, #8]
   143dc:	ldr	r3, [fp, #-12]
   143e0:	ldrd	r2, [r3, #8]
   143e4:	cmp	r1, r3
   143e8:	cmpeq	r0, r2
   143ec:	bne	14414 <__assert_fail@plt+0x363c>
   143f0:	ldr	r3, [fp, #-8]
   143f4:	ldrd	r0, [r3]
   143f8:	ldr	r3, [fp, #-12]
   143fc:	ldrd	r2, [r3]
   14400:	cmp	r1, r3
   14404:	cmpeq	r0, r2
   14408:	bne	14414 <__assert_fail@plt+0x363c>
   1440c:	mov	r3, #1
   14410:	b	14418 <__assert_fail@plt+0x3640>
   14414:	mov	r3, #0
   14418:	and	r3, r3, #1
   1441c:	uxtb	r3, r3
   14420:	mov	r0, r3
   14424:	add	sp, fp, #0
   14428:	pop	{fp}		; (ldr fp, [sp], #4)
   1442c:	bx	lr
   14430:	str	fp, [sp, #-8]!
   14434:	str	lr, [sp, #4]
   14438:	add	fp, sp, #4
   1443c:	sub	sp, sp, #16
   14440:	str	r0, [fp, #-16]
   14444:	str	r1, [fp, #-20]	; 0xffffffec
   14448:	ldr	r3, [fp, #-16]
   1444c:	str	r3, [fp, #-8]
   14450:	ldr	r3, [fp, #-8]
   14454:	ldrd	r0, [r3, #8]
   14458:	ldr	r3, [fp, #-20]	; 0xffffffec
   1445c:	mov	r2, r3
   14460:	mov	r3, #0
   14464:	bl	1bad8 <__assert_fail@plt+0xad00>
   14468:	mov	r3, r2
   1446c:	mov	r0, r3
   14470:	sub	sp, fp, #4
   14474:	ldr	fp, [sp]
   14478:	add	sp, sp, #4
   1447c:	pop	{pc}		; (ldr pc, [sp], #4)
   14480:	str	fp, [sp, #-8]!
   14484:	str	lr, [sp, #4]
   14488:	add	fp, sp, #4
   1448c:	sub	sp, sp, #16
   14490:	str	r0, [fp, #-8]
   14494:	ldr	r3, [fp, #-8]
   14498:	ldr	r2, [r3, #48]	; 0x30
   1449c:	movw	r3, #258	; 0x102
   144a0:	and	r3, r3, r2
   144a4:	cmp	r3, #0
   144a8:	beq	144fc <__assert_fail@plt+0x3724>
   144ac:	movw	r3, #17164	; 0x430c
   144b0:	movt	r3, #1
   144b4:	str	r3, [sp]
   144b8:	movw	r3, #17328	; 0x43b0
   144bc:	movt	r3, #1
   144c0:	movw	r2, #17456	; 0x4430
   144c4:	movt	r2, #1
   144c8:	mov	r1, #0
   144cc:	mov	r0, #31
   144d0:	bl	198ec <__assert_fail@plt+0x8b14>
   144d4:	mov	r3, r0
   144d8:	mov	r2, r3
   144dc:	ldr	r3, [fp, #-8]
   144e0:	str	r2, [r3, #56]	; 0x38
   144e4:	ldr	r3, [fp, #-8]
   144e8:	ldr	r3, [r3, #56]	; 0x38
   144ec:	cmp	r3, #0
   144f0:	bne	1453c <__assert_fail@plt+0x3764>
   144f4:	mov	r3, #0
   144f8:	b	14540 <__assert_fail@plt+0x3768>
   144fc:	mov	r0, #32
   14500:	bl	1aef4 <__assert_fail@plt+0xa11c>
   14504:	mov	r3, r0
   14508:	mov	r2, r3
   1450c:	ldr	r3, [fp, #-8]
   14510:	str	r2, [r3, #56]	; 0x38
   14514:	ldr	r3, [fp, #-8]
   14518:	ldr	r3, [r3, #56]	; 0x38
   1451c:	cmp	r3, #0
   14520:	bne	1452c <__assert_fail@plt+0x3754>
   14524:	mov	r3, #0
   14528:	b	14540 <__assert_fail@plt+0x3768>
   1452c:	ldr	r3, [fp, #-8]
   14530:	ldr	r3, [r3, #56]	; 0x38
   14534:	mov	r0, r3
   14538:	bl	1b3ec <__assert_fail@plt+0xa614>
   1453c:	mov	r3, #1
   14540:	mov	r0, r3
   14544:	sub	sp, fp, #4
   14548:	ldr	fp, [sp]
   1454c:	add	sp, sp, #4
   14550:	pop	{pc}		; (ldr pc, [sp], #4)
   14554:	str	fp, [sp, #-8]!
   14558:	str	lr, [sp, #4]
   1455c:	add	fp, sp, #4
   14560:	sub	sp, sp, #24
   14564:	str	r0, [fp, #-24]	; 0xffffffe8
   14568:	str	r1, [fp, #-28]	; 0xffffffe4
   1456c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14570:	ldr	r2, [r3, #48]	; 0x30
   14574:	movw	r3, #258	; 0x102
   14578:	and	r3, r3, r2
   1457c:	cmp	r3, #0
   14580:	beq	14644 <__assert_fail@plt+0x386c>
   14584:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14588:	add	r3, r3, #64	; 0x40
   1458c:	str	r3, [fp, #-8]
   14590:	mov	r0, #24
   14594:	bl	1aef4 <__assert_fail@plt+0xa11c>
   14598:	mov	r3, r0
   1459c:	str	r3, [fp, #-12]
   145a0:	ldr	r3, [fp, #-12]
   145a4:	cmp	r3, #0
   145a8:	bne	145b4 <__assert_fail@plt+0x37dc>
   145ac:	mov	r3, #0
   145b0:	b	14688 <__assert_fail@plt+0x38b0>
   145b4:	ldr	r3, [fp, #-8]
   145b8:	ldrd	r2, [r3]
   145bc:	ldr	r1, [fp, #-12]
   145c0:	strd	r2, [r1]
   145c4:	ldr	r3, [fp, #-8]
   145c8:	ldrd	r2, [r3, #96]	; 0x60
   145cc:	ldr	r1, [fp, #-12]
   145d0:	strd	r2, [r1, #8]
   145d4:	ldr	r3, [fp, #-12]
   145d8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   145dc:	str	r2, [r3, #16]
   145e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   145e4:	ldr	r3, [r3, #56]	; 0x38
   145e8:	ldr	r1, [fp, #-12]
   145ec:	mov	r0, r3
   145f0:	bl	1a698 <__assert_fail@plt+0x98c0>
   145f4:	str	r0, [fp, #-16]
   145f8:	ldr	r2, [fp, #-16]
   145fc:	ldr	r3, [fp, #-12]
   14600:	cmp	r2, r3
   14604:	beq	14684 <__assert_fail@plt+0x38ac>
   14608:	ldr	r0, [fp, #-12]
   1460c:	bl	1430c <__assert_fail@plt+0x3534>
   14610:	ldr	r3, [fp, #-16]
   14614:	cmp	r3, #0
   14618:	bne	14624 <__assert_fail@plt+0x384c>
   1461c:	mov	r3, #0
   14620:	b	14688 <__assert_fail@plt+0x38b0>
   14624:	ldr	r3, [fp, #-16]
   14628:	ldr	r2, [r3, #16]
   1462c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14630:	str	r2, [r3]
   14634:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14638:	mov	r2, #2
   1463c:	strh	r2, [r3, #56]	; 0x38
   14640:	b	14684 <__assert_fail@plt+0x38ac>
   14644:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14648:	ldr	r2, [r3, #56]	; 0x38
   1464c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14650:	add	r3, r3, #64	; 0x40
   14654:	mov	r1, r3
   14658:	mov	r0, r2
   1465c:	bl	1b42c <__assert_fail@plt+0xa654>
   14660:	mov	r3, r0
   14664:	cmp	r3, #0
   14668:	beq	14684 <__assert_fail@plt+0x38ac>
   1466c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14670:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14674:	str	r2, [r3]
   14678:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1467c:	mov	r2, #2
   14680:	strh	r2, [r3, #56]	; 0x38
   14684:	mov	r3, #1
   14688:	mov	r0, r3
   1468c:	sub	sp, fp, #4
   14690:	ldr	fp, [sp]
   14694:	add	sp, sp, #4
   14698:	pop	{pc}		; (ldr pc, [sp], #4)
   1469c:	str	fp, [sp, #-8]!
   146a0:	str	lr, [sp, #4]
   146a4:	add	fp, sp, #4
   146a8:	sub	sp, sp, #48	; 0x30
   146ac:	str	r0, [fp, #-48]	; 0xffffffd0
   146b0:	str	r1, [fp, #-52]	; 0xffffffcc
   146b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   146b8:	add	r3, r3, #64	; 0x40
   146bc:	str	r3, [fp, #-8]
   146c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   146c4:	ldr	r2, [r3, #48]	; 0x30
   146c8:	movw	r3, #258	; 0x102
   146cc:	and	r3, r3, r2
   146d0:	cmp	r3, #0
   146d4:	beq	14728 <__assert_fail@plt+0x3950>
   146d8:	ldr	r3, [fp, #-8]
   146dc:	ldrd	r2, [r3]
   146e0:	strd	r2, [fp, #-44]	; 0xffffffd4
   146e4:	ldr	r3, [fp, #-8]
   146e8:	ldrd	r2, [r3, #96]	; 0x60
   146ec:	strd	r2, [fp, #-36]	; 0xffffffdc
   146f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   146f4:	ldr	r3, [r3, #56]	; 0x38
   146f8:	sub	r2, fp, #44	; 0x2c
   146fc:	mov	r1, r2
   14700:	mov	r0, r3
   14704:	bl	1a708 <__assert_fail@plt+0x9930>
   14708:	str	r0, [fp, #-12]
   1470c:	ldr	r3, [fp, #-12]
   14710:	cmp	r3, #0
   14714:	bne	1471c <__assert_fail@plt+0x3944>
   14718:	bl	10d9c <abort@plt>
   1471c:	ldr	r0, [fp, #-12]
   14720:	bl	1430c <__assert_fail@plt+0x3534>
   14724:	b	147d0 <__assert_fail@plt+0x39f8>
   14728:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1472c:	ldr	r3, [r3, #4]
   14730:	str	r3, [fp, #-16]
   14734:	ldr	r3, [fp, #-16]
   14738:	cmp	r3, #0
   1473c:	beq	147d0 <__assert_fail@plt+0x39f8>
   14740:	ldr	r3, [fp, #-16]
   14744:	ldr	r3, [r3, #48]	; 0x30
   14748:	cmp	r3, #0
   1474c:	blt	147d0 <__assert_fail@plt+0x39f8>
   14750:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14754:	ldr	r3, [r3, #56]	; 0x38
   14758:	ldrd	r2, [r3, #16]
   1475c:	orrs	r3, r2, r3
   14760:	bne	14768 <__assert_fail@plt+0x3990>
   14764:	bl	10d9c <abort@plt>
   14768:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1476c:	ldr	r3, [r3, #56]	; 0x38
   14770:	ldrd	r0, [r3]
   14774:	ldr	r3, [fp, #-8]
   14778:	ldrd	r2, [r3, #96]	; 0x60
   1477c:	cmp	r1, r3
   14780:	cmpeq	r0, r2
   14784:	bne	147d0 <__assert_fail@plt+0x39f8>
   14788:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1478c:	ldr	r3, [r3, #56]	; 0x38
   14790:	ldrd	r0, [r3, #8]
   14794:	ldr	r3, [fp, #-8]
   14798:	ldrd	r2, [r3]
   1479c:	cmp	r1, r3
   147a0:	cmpeq	r0, r2
   147a4:	bne	147d0 <__assert_fail@plt+0x39f8>
   147a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   147ac:	ldr	r1, [r3, #56]	; 0x38
   147b0:	ldr	r3, [fp, #-16]
   147b4:	ldrd	r2, [r3, #64]	; 0x40
   147b8:	strd	r2, [r1, #8]
   147bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   147c0:	ldr	r1, [r3, #56]	; 0x38
   147c4:	ldr	r3, [fp, #-16]
   147c8:	ldrd	r2, [r3, #160]	; 0xa0
   147cc:	strd	r2, [r1]
   147d0:	nop	{0}
   147d4:	sub	sp, fp, #4
   147d8:	ldr	fp, [sp]
   147dc:	add	sp, sp, #4
   147e0:	pop	{pc}		; (ldr pc, [sp], #4)
   147e4:	str	fp, [sp, #-8]!
   147e8:	str	lr, [sp, #4]
   147ec:	add	fp, sp, #4
   147f0:	sub	sp, sp, #8
   147f4:	str	r0, [fp, #-8]
   147f8:	ldr	r3, [fp, #-8]
   147fc:	ldr	r2, [r3, #48]	; 0x30
   14800:	movw	r3, #258	; 0x102
   14804:	and	r3, r3, r2
   14808:	cmp	r3, #0
   1480c:	beq	14834 <__assert_fail@plt+0x3a5c>
   14810:	ldr	r3, [fp, #-8]
   14814:	ldr	r3, [r3, #56]	; 0x38
   14818:	cmp	r3, #0
   1481c:	beq	14844 <__assert_fail@plt+0x3a6c>
   14820:	ldr	r3, [fp, #-8]
   14824:	ldr	r3, [r3, #56]	; 0x38
   14828:	mov	r0, r3
   1482c:	bl	19be0 <__assert_fail@plt+0x8e08>
   14830:	b	14844 <__assert_fail@plt+0x3a6c>
   14834:	ldr	r3, [fp, #-8]
   14838:	ldr	r3, [r3, #56]	; 0x38
   1483c:	mov	r0, r3
   14840:	bl	1430c <__assert_fail@plt+0x3534>
   14844:	nop	{0}
   14848:	sub	sp, fp, #4
   1484c:	ldr	fp, [sp]
   14850:	add	sp, sp, #4
   14854:	pop	{pc}		; (ldr pc, [sp], #4)
   14858:	str	fp, [sp, #-8]!
   1485c:	str	lr, [sp, #4]
   14860:	add	fp, sp, #4
   14864:	sub	sp, sp, #16
   14868:	str	r0, [fp, #-16]
   1486c:	b	14890 <__assert_fail@plt+0x3ab8>
   14870:	ldr	r0, [fp, #-16]
   14874:	bl	1aa9c <__assert_fail@plt+0x9cc4>
   14878:	str	r0, [fp, #-8]
   1487c:	ldr	r3, [fp, #-8]
   14880:	cmp	r3, #0
   14884:	blt	14890 <__assert_fail@plt+0x3ab8>
   14888:	ldr	r0, [fp, #-8]
   1488c:	bl	10da8 <close@plt>
   14890:	ldr	r0, [fp, #-16]
   14894:	bl	1a9b4 <__assert_fail@plt+0x9bdc>
   14898:	mov	r3, r0
   1489c:	eor	r3, r3, #1
   148a0:	uxtb	r3, r3
   148a4:	cmp	r3, #0
   148a8:	bne	14870 <__assert_fail@plt+0x3a98>
   148ac:	nop	{0}
   148b0:	sub	sp, fp, #4
   148b4:	ldr	fp, [sp]
   148b8:	add	sp, sp, #4
   148bc:	pop	{pc}		; (ldr pc, [sp], #4)
   148c0:	str	fp, [sp, #-8]!
   148c4:	str	lr, [sp, #4]
   148c8:	add	fp, sp, #4
   148cc:	sub	sp, sp, #8
   148d0:	str	r0, [fp, #-8]
   148d4:	mov	r3, r1
   148d8:	strb	r3, [fp, #-9]
   148dc:	ldr	r3, [fp, #-8]
   148e0:	ldrh	r3, [r3, #56]	; 0x38
   148e4:	cmp	r3, #11
   148e8:	beq	148f0 <__assert_fail@plt+0x3b18>
   148ec:	bl	10d9c <abort@plt>
   148f0:	ldrb	r3, [fp, #-9]
   148f4:	cmp	r3, #0
   148f8:	beq	14908 <__assert_fail@plt+0x3b30>
   148fc:	mov	r2, #2
   14900:	mov	r3, #0
   14904:	b	14910 <__assert_fail@plt+0x3b38>
   14908:	mov	r2, #1
   1490c:	mov	r3, #0
   14910:	ldr	r1, [fp, #-8]
   14914:	strd	r2, [r1, #112]	; 0x70
   14918:	nop	{0}
   1491c:	sub	sp, fp, #4
   14920:	ldr	fp, [sp]
   14924:	add	sp, sp, #4
   14928:	pop	{pc}		; (ldr pc, [sp], #4)
   1492c:	str	fp, [sp, #-8]!
   14930:	str	lr, [sp, #4]
   14934:	add	fp, sp, #4
   14938:	sub	sp, sp, #24
   1493c:	str	r0, [fp, #-16]
   14940:	str	r1, [fp, #-20]	; 0xffffffec
   14944:	mov	r3, r2
   14948:	strb	r3, [fp, #-21]	; 0xffffffeb
   1494c:	ldr	r3, [fp, #-16]
   14950:	ldr	r3, [r3, #32]
   14954:	str	r3, [fp, #-8]
   14958:	ldr	r2, [fp, #-8]
   1495c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14960:	cmp	r2, r3
   14964:	bne	14978 <__assert_fail@plt+0x3ba0>
   14968:	ldr	r3, [fp, #-8]
   1496c:	cmn	r3, #100	; 0x64
   14970:	beq	14978 <__assert_fail@plt+0x3ba0>
   14974:	bl	10d9c <abort@plt>
   14978:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   1497c:	cmp	r3, #0
   14980:	beq	149b4 <__assert_fail@plt+0x3bdc>
   14984:	ldr	r3, [fp, #-16]
   14988:	add	r3, r3, #60	; 0x3c
   1498c:	ldr	r1, [fp, #-8]
   14990:	mov	r0, r3
   14994:	bl	1a9dc <__assert_fail@plt+0x9c04>
   14998:	str	r0, [fp, #-12]
   1499c:	ldr	r3, [fp, #-12]
   149a0:	cmp	r3, #0
   149a4:	blt	149dc <__assert_fail@plt+0x3c04>
   149a8:	ldr	r0, [fp, #-12]
   149ac:	bl	10da8 <close@plt>
   149b0:	b	149dc <__assert_fail@plt+0x3c04>
   149b4:	ldr	r3, [fp, #-16]
   149b8:	ldr	r3, [r3, #48]	; 0x30
   149bc:	and	r3, r3, #4
   149c0:	cmp	r3, #0
   149c4:	bne	149dc <__assert_fail@plt+0x3c04>
   149c8:	ldr	r3, [fp, #-8]
   149cc:	cmp	r3, #0
   149d0:	blt	149dc <__assert_fail@plt+0x3c04>
   149d4:	ldr	r0, [fp, #-8]
   149d8:	bl	10da8 <close@plt>
   149dc:	ldr	r3, [fp, #-16]
   149e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   149e4:	str	r2, [r3, #32]
   149e8:	nop	{0}
   149ec:	sub	sp, fp, #4
   149f0:	ldr	fp, [sp]
   149f4:	add	sp, sp, #4
   149f8:	pop	{pc}		; (ldr pc, [sp], #4)
   149fc:	str	fp, [sp, #-8]!
   14a00:	str	lr, [sp, #4]
   14a04:	add	fp, sp, #4
   14a08:	sub	sp, sp, #16
   14a0c:	str	r0, [fp, #-16]
   14a10:	ldr	r3, [fp, #-16]
   14a14:	ldr	r3, [r3, #48]	; 0x30
   14a18:	and	r3, r3, #4
   14a1c:	cmp	r3, #0
   14a20:	bne	14ab0 <__assert_fail@plt+0x3cd8>
   14a24:	ldr	r3, [fp, #-16]
   14a28:	ldr	r3, [r3, #48]	; 0x30
   14a2c:	and	r3, r3, #512	; 0x200
   14a30:	cmp	r3, #0
   14a34:	beq	14a70 <__assert_fail@plt+0x3c98>
   14a38:	ldr	r3, [fp, #-16]
   14a3c:	ldr	r3, [r3, #48]	; 0x30
   14a40:	and	r3, r3, #512	; 0x200
   14a44:	cmp	r3, #0
   14a48:	bne	14a58 <__assert_fail@plt+0x3c80>
   14a4c:	ldr	r3, [fp, #-16]
   14a50:	ldr	r3, [r3, #28]
   14a54:	b	14a5c <__assert_fail@plt+0x3c84>
   14a58:	mvn	r3, #99	; 0x63
   14a5c:	mov	r2, #1
   14a60:	mov	r1, r3
   14a64:	ldr	r0, [fp, #-16]
   14a68:	bl	1492c <__assert_fail@plt+0x3b54>
   14a6c:	b	14ab0 <__assert_fail@plt+0x3cd8>
   14a70:	ldr	r3, [fp, #-16]
   14a74:	ldr	r3, [r3, #48]	; 0x30
   14a78:	and	r3, r3, #512	; 0x200
   14a7c:	cmp	r3, #0
   14a80:	bne	14a90 <__assert_fail@plt+0x3cb8>
   14a84:	ldr	r3, [fp, #-16]
   14a88:	ldr	r3, [r3, #28]
   14a8c:	b	14a94 <__assert_fail@plt+0x3cbc>
   14a90:	mvn	r3, #99	; 0x63
   14a94:	mov	r0, r3
   14a98:	bl	10d60 <fchdir@plt>
   14a9c:	mov	r3, r0
   14aa0:	cmp	r3, #0
   14aa4:	beq	14ab0 <__assert_fail@plt+0x3cd8>
   14aa8:	mov	r3, #1
   14aac:	b	14ab4 <__assert_fail@plt+0x3cdc>
   14ab0:	mov	r3, #0
   14ab4:	str	r3, [fp, #-8]
   14ab8:	ldr	r3, [fp, #-16]
   14abc:	add	r3, r3, #60	; 0x3c
   14ac0:	mov	r0, r3
   14ac4:	bl	14858 <__assert_fail@plt+0x3a80>
   14ac8:	ldr	r3, [fp, #-8]
   14acc:	mov	r0, r3
   14ad0:	sub	sp, fp, #4
   14ad4:	ldr	fp, [sp]
   14ad8:	add	sp, sp, #4
   14adc:	pop	{pc}		; (ldr pc, [sp], #4)
   14ae0:	str	fp, [sp, #-8]!
   14ae4:	str	lr, [sp, #4]
   14ae8:	add	fp, sp, #4
   14aec:	sub	sp, sp, #16
   14af0:	str	r0, [fp, #-16]
   14af4:	str	r1, [fp, #-20]	; 0xffffffec
   14af8:	ldr	r3, [fp, #-16]
   14afc:	ldr	r3, [r3, #48]	; 0x30
   14b00:	lsl	r3, r3, #11
   14b04:	and	r3, r3, #32768	; 0x8000
   14b08:	orr	r3, r3, #540672	; 0x84000
   14b0c:	orr	r3, r3, #2304	; 0x900
   14b10:	str	r3, [fp, #-8]
   14b14:	ldr	r3, [fp, #-16]
   14b18:	ldr	r3, [r3, #48]	; 0x30
   14b1c:	and	r3, r3, #512	; 0x200
   14b20:	cmp	r3, #0
   14b24:	beq	14b48 <__assert_fail@plt+0x3d70>
   14b28:	ldr	r3, [fp, #-16]
   14b2c:	ldr	r3, [r3, #32]
   14b30:	ldr	r2, [fp, #-8]
   14b34:	ldr	r1, [fp, #-20]	; 0xffffffec
   14b38:	mov	r0, r3
   14b3c:	bl	1ac54 <__assert_fail@plt+0x9e7c>
   14b40:	mov	r3, r0
   14b44:	b	14b58 <__assert_fail@plt+0x3d80>
   14b48:	ldr	r1, [fp, #-8]
   14b4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14b50:	bl	1b940 <__assert_fail@plt+0xab68>
   14b54:	mov	r3, r0
   14b58:	str	r3, [fp, #-12]
   14b5c:	ldr	r3, [fp, #-12]
   14b60:	mov	r0, r3
   14b64:	sub	sp, fp, #4
   14b68:	ldr	fp, [sp]
   14b6c:	add	sp, sp, #4
   14b70:	pop	{pc}		; (ldr pc, [sp], #4)
   14b74:	strd	r4, [sp, #-28]!	; 0xffffffe4
   14b78:	strd	r6, [sp, #8]
   14b7c:	str	r8, [sp, #16]
   14b80:	str	fp, [sp, #20]
   14b84:	str	lr, [sp, #24]
   14b88:	add	fp, sp, #24
   14b8c:	sub	sp, sp, #36	; 0x24
   14b90:	str	r0, [fp, #-56]	; 0xffffffc8
   14b94:	mov	r7, r1
   14b98:	str	r2, [fp, #-60]	; 0xffffffc4
   14b9c:	mov	r3, #0
   14ba0:	str	r3, [fp, #-32]	; 0xffffffe0
   14ba4:	mov	r3, #0
   14ba8:	str	r3, [fp, #-36]	; 0xffffffdc
   14bac:	bic	r3, r7, #4080	; 0xff0
   14bb0:	bic	r3, r3, #15
   14bb4:	cmp	r3, #0
   14bb8:	beq	14bd4 <__assert_fail@plt+0x3dfc>
   14bbc:	bl	10cd0 <__errno_location@plt>
   14bc0:	mov	r2, r0
   14bc4:	mov	r3, #22
   14bc8:	str	r3, [r2]
   14bcc:	mov	r3, #0
   14bd0:	b	14ff4 <__assert_fail@plt+0x421c>
   14bd4:	and	r3, r7, #4
   14bd8:	cmp	r3, #0
   14bdc:	beq	14c04 <__assert_fail@plt+0x3e2c>
   14be0:	and	r3, r7, #512	; 0x200
   14be4:	cmp	r3, #0
   14be8:	beq	14c04 <__assert_fail@plt+0x3e2c>
   14bec:	bl	10cd0 <__errno_location@plt>
   14bf0:	mov	r2, r0
   14bf4:	mov	r3, #22
   14bf8:	str	r3, [r2]
   14bfc:	mov	r3, #0
   14c00:	b	14ff4 <__assert_fail@plt+0x421c>
   14c04:	and	r3, r7, #18
   14c08:	cmp	r3, #0
   14c0c:	bne	14c28 <__assert_fail@plt+0x3e50>
   14c10:	bl	10cd0 <__errno_location@plt>
   14c14:	mov	r2, r0
   14c18:	mov	r3, #22
   14c1c:	str	r3, [r2]
   14c20:	mov	r3, #0
   14c24:	b	14ff4 <__assert_fail@plt+0x421c>
   14c28:	mov	r1, #96	; 0x60
   14c2c:	mov	r0, #1
   14c30:	bl	1ae24 <__assert_fail@plt+0xa04c>
   14c34:	mov	r3, r0
   14c38:	mov	r4, r3
   14c3c:	cmp	r4, #0
   14c40:	bne	14c4c <__assert_fail@plt+0x3e74>
   14c44:	mov	r3, #0
   14c48:	b	14ff4 <__assert_fail@plt+0x421c>
   14c4c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14c50:	str	r3, [r4, #44]	; 0x2c
   14c54:	str	r7, [r4, #48]	; 0x30
   14c58:	ldr	r3, [r4, #48]	; 0x30
   14c5c:	and	r3, r3, #2
   14c60:	cmp	r3, #0
   14c64:	beq	14c80 <__assert_fail@plt+0x3ea8>
   14c68:	ldr	r3, [r4, #48]	; 0x30
   14c6c:	orr	r3, r3, #4
   14c70:	str	r3, [r4, #48]	; 0x30
   14c74:	ldr	r3, [r4, #48]	; 0x30
   14c78:	bic	r3, r3, #512	; 0x200
   14c7c:	str	r3, [r4, #48]	; 0x30
   14c80:	mvn	r3, #99	; 0x63
   14c84:	str	r3, [r4, #32]
   14c88:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14c8c:	bl	17444 <__assert_fail@plt+0x666c>
   14c90:	str	r0, [fp, #-44]	; 0xffffffd4
   14c94:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14c98:	cmp	r3, #4096	; 0x1000
   14c9c:	movcs	r3, r3
   14ca0:	movcc	r3, #4096	; 0x1000
   14ca4:	mov	r1, r3
   14ca8:	mov	r0, r4
   14cac:	bl	17218 <__assert_fail@plt+0x6440>
   14cb0:	mov	r3, r0
   14cb4:	eor	r3, r3, #1
   14cb8:	uxtb	r3, r3
   14cbc:	cmp	r3, #0
   14cc0:	bne	14fe4 <__assert_fail@plt+0x420c>
   14cc4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14cc8:	ldr	r3, [r3]
   14ccc:	cmp	r3, #0
   14cd0:	beq	14d04 <__assert_fail@plt+0x3f2c>
   14cd4:	mov	r2, #0
   14cd8:	movw	r1, #48748	; 0xbe6c
   14cdc:	movt	r1, #1
   14ce0:	mov	r0, r4
   14ce4:	bl	170e8 <__assert_fail@plt+0x6310>
   14ce8:	str	r0, [fp, #-32]	; 0xffffffe0
   14cec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14cf0:	cmp	r3, #0
   14cf4:	beq	14fd0 <__assert_fail@plt+0x41f8>
   14cf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14cfc:	mvn	r2, #0
   14d00:	str	r2, [r3, #48]	; 0x30
   14d04:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14d08:	cmp	r3, #0
   14d0c:	beq	14d20 <__assert_fail@plt+0x3f48>
   14d10:	ldr	r3, [r4, #48]	; 0x30
   14d14:	and	r3, r3, #1024	; 0x400
   14d18:	cmp	r3, #0
   14d1c:	beq	14d28 <__assert_fail@plt+0x3f50>
   14d20:	mov	r3, #1
   14d24:	b	14d2c <__assert_fail@plt+0x3f54>
   14d28:	mov	r3, #0
   14d2c:	strb	r3, [fp, #-45]	; 0xffffffd3
   14d30:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   14d34:	and	r3, r3, #1
   14d38:	strb	r3, [fp, #-45]	; 0xffffffd3
   14d3c:	mov	r6, #0
   14d40:	mov	r8, #0
   14d44:	b	14ea4 <__assert_fail@plt+0x40cc>
   14d48:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14d4c:	ldr	r3, [r3]
   14d50:	mov	r0, r3
   14d54:	bl	10ca0 <strlen@plt>
   14d58:	str	r0, [fp, #-40]	; 0xffffffd8
   14d5c:	and	r3, r7, #2048	; 0x800
   14d60:	cmp	r3, #0
   14d64:	bne	14dd4 <__assert_fail@plt+0x3ffc>
   14d68:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14d6c:	ldr	r3, [r3]
   14d70:	str	r3, [fp, #-52]	; 0xffffffcc
   14d74:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14d78:	cmp	r3, #2
   14d7c:	bls	14dd4 <__assert_fail@plt+0x3ffc>
   14d80:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14d84:	sub	r3, r3, #1
   14d88:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14d8c:	add	r3, r2, r3
   14d90:	ldrb	r3, [r3]
   14d94:	cmp	r3, #47	; 0x2f
   14d98:	bne	14dd4 <__assert_fail@plt+0x3ffc>
   14d9c:	b	14dac <__assert_fail@plt+0x3fd4>
   14da0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14da4:	sub	r3, r3, #1
   14da8:	str	r3, [fp, #-40]	; 0xffffffd8
   14dac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14db0:	cmp	r3, #1
   14db4:	bls	14dd4 <__assert_fail@plt+0x3ffc>
   14db8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14dbc:	sub	r3, r3, #2
   14dc0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14dc4:	add	r3, r2, r3
   14dc8:	ldrb	r3, [r3]
   14dcc:	cmp	r3, #47	; 0x2f
   14dd0:	beq	14da0 <__assert_fail@plt+0x3fc8>
   14dd4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14dd8:	ldr	r3, [r3]
   14ddc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14de0:	mov	r1, r3
   14de4:	mov	r0, r4
   14de8:	bl	170e8 <__assert_fail@plt+0x6310>
   14dec:	mov	r5, r0
   14df0:	cmp	r5, #0
   14df4:	beq	14fa8 <__assert_fail@plt+0x41d0>
   14df8:	mov	r3, #0
   14dfc:	str	r3, [r5, #48]	; 0x30
   14e00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14e04:	str	r3, [r5, #4]
   14e08:	add	r3, r5, #168	; 0xa8
   14e0c:	str	r3, [r5, #24]
   14e10:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   14e14:	cmp	r3, #0
   14e18:	beq	14e3c <__assert_fail@plt+0x4064>
   14e1c:	cmp	r6, #0
   14e20:	beq	14e3c <__assert_fail@plt+0x4064>
   14e24:	mov	r3, #11
   14e28:	strh	r3, [r5, #56]	; 0x38
   14e2c:	mov	r1, #1
   14e30:	mov	r0, r5
   14e34:	bl	148c0 <__assert_fail@plt+0x3ae8>
   14e38:	b	14e54 <__assert_fail@plt+0x407c>
   14e3c:	mov	r2, #0
   14e40:	mov	r1, r5
   14e44:	mov	r0, r4
   14e48:	bl	16d34 <__assert_fail@plt+0x5f5c>
   14e4c:	mov	r3, r0
   14e50:	strh	r3, [r5, #56]	; 0x38
   14e54:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14e58:	cmp	r3, #0
   14e5c:	beq	14e6c <__assert_fail@plt+0x4094>
   14e60:	str	r6, [r5, #8]
   14e64:	mov	r6, r5
   14e68:	b	14e94 <__assert_fail@plt+0x40bc>
   14e6c:	mov	r3, #0
   14e70:	str	r3, [r5, #8]
   14e74:	cmp	r6, #0
   14e78:	bne	14e88 <__assert_fail@plt+0x40b0>
   14e7c:	mov	r6, r5
   14e80:	str	r6, [fp, #-36]	; 0xffffffdc
   14e84:	b	14e94 <__assert_fail@plt+0x40bc>
   14e88:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14e8c:	str	r5, [r3, #8]
   14e90:	str	r5, [fp, #-36]	; 0xffffffdc
   14e94:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14e98:	add	r3, r3, #4
   14e9c:	str	r3, [fp, #-56]	; 0xffffffc8
   14ea0:	add	r8, r8, #1
   14ea4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14ea8:	ldr	r3, [r3]
   14eac:	cmp	r3, #0
   14eb0:	bne	14d48 <__assert_fail@plt+0x3f70>
   14eb4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14eb8:	cmp	r3, #0
   14ebc:	beq	14edc <__assert_fail@plt+0x4104>
   14ec0:	cmp	r8, #1
   14ec4:	bls	14edc <__assert_fail@plt+0x4104>
   14ec8:	mov	r2, r8
   14ecc:	mov	r1, r6
   14ed0:	mov	r0, r4
   14ed4:	bl	16f84 <__assert_fail@plt+0x61ac>
   14ed8:	mov	r6, r0
   14edc:	mov	r2, #0
   14ee0:	movw	r1, #48748	; 0xbe6c
   14ee4:	movt	r1, #1
   14ee8:	mov	r0, r4
   14eec:	bl	170e8 <__assert_fail@plt+0x6310>
   14ef0:	mov	r3, r0
   14ef4:	str	r3, [r4]
   14ef8:	ldr	r3, [r4]
   14efc:	cmp	r3, #0
   14f00:	beq	14fb0 <__assert_fail@plt+0x41d8>
   14f04:	ldr	r3, [r4]
   14f08:	str	r6, [r3, #8]
   14f0c:	ldr	r3, [r4]
   14f10:	mov	r2, #9
   14f14:	strh	r2, [r3, #56]	; 0x38
   14f18:	ldr	r3, [r4]
   14f1c:	mov	r2, #1
   14f20:	str	r2, [r3, #48]	; 0x30
   14f24:	mov	r0, r4
   14f28:	bl	14480 <__assert_fail@plt+0x36a8>
   14f2c:	mov	r3, r0
   14f30:	eor	r3, r3, #1
   14f34:	uxtb	r3, r3
   14f38:	cmp	r3, #0
   14f3c:	bne	14fb8 <__assert_fail@plt+0x41e0>
   14f40:	ldr	r3, [r4, #48]	; 0x30
   14f44:	and	r3, r3, #4
   14f48:	cmp	r3, #0
   14f4c:	bne	14f90 <__assert_fail@plt+0x41b8>
   14f50:	ldr	r3, [r4, #48]	; 0x30
   14f54:	and	r3, r3, #512	; 0x200
   14f58:	cmp	r3, #0
   14f5c:	bne	14f90 <__assert_fail@plt+0x41b8>
   14f60:	movw	r1, #48752	; 0xbe70
   14f64:	movt	r1, #1
   14f68:	mov	r0, r4
   14f6c:	bl	14ae0 <__assert_fail@plt+0x3d08>
   14f70:	mov	r3, r0
   14f74:	str	r3, [r4, #28]
   14f78:	ldr	r3, [r4, #28]
   14f7c:	cmp	r3, #0
   14f80:	bge	14f90 <__assert_fail@plt+0x41b8>
   14f84:	ldr	r3, [r4, #48]	; 0x30
   14f88:	orr	r3, r3, #4
   14f8c:	str	r3, [r4, #48]	; 0x30
   14f90:	add	r3, r4, #60	; 0x3c
   14f94:	mvn	r1, #0
   14f98:	mov	r0, r3
   14f9c:	bl	1a92c <__assert_fail@plt+0x9b54>
   14fa0:	mov	r3, r4
   14fa4:	b	14ff4 <__assert_fail@plt+0x421c>
   14fa8:	nop	{0}
   14fac:	b	14fbc <__assert_fail@plt+0x41e4>
   14fb0:	nop	{0}
   14fb4:	b	14fbc <__assert_fail@plt+0x41e4>
   14fb8:	nop	{0}
   14fbc:	mov	r0, r6
   14fc0:	bl	171b8 <__assert_fail@plt+0x63e0>
   14fc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14fc8:	bl	1430c <__assert_fail@plt+0x3534>
   14fcc:	b	14fd4 <__assert_fail@plt+0x41fc>
   14fd0:	nop	{0}
   14fd4:	ldr	r3, [r4, #24]
   14fd8:	mov	r0, r3
   14fdc:	bl	1430c <__assert_fail@plt+0x3534>
   14fe0:	b	14fe8 <__assert_fail@plt+0x4210>
   14fe4:	nop	{0}
   14fe8:	mov	r0, r4
   14fec:	bl	1430c <__assert_fail@plt+0x3534>
   14ff0:	mov	r3, #0
   14ff4:	mov	r0, r3
   14ff8:	sub	sp, fp, #24
   14ffc:	ldrd	r4, [sp]
   15000:	ldrd	r6, [sp, #8]
   15004:	ldr	r8, [sp, #16]
   15008:	ldr	fp, [sp, #20]
   1500c:	add	sp, sp, #24
   15010:	pop	{pc}		; (ldr pc, [sp], #4)
   15014:	strd	r4, [sp, #-20]!	; 0xffffffec
   15018:	str	r6, [sp, #8]
   1501c:	str	fp, [sp, #12]
   15020:	str	lr, [sp, #16]
   15024:	add	fp, sp, #16
   15028:	sub	sp, sp, #12
   1502c:	str	r0, [fp, #-24]	; 0xffffffe8
   15030:	mov	r4, r1
   15034:	ldr	r3, [r4, #52]	; 0x34
   15038:	str	r3, [r4, #40]	; 0x28
   1503c:	ldr	r6, [r4, #40]	; 0x28
   15040:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15044:	ldr	r3, [r3, #24]
   15048:	add	r1, r4, #168	; 0xa8
   1504c:	add	r2, r6, #1
   15050:	mov	r0, r3
   15054:	bl	10bb0 <memmove@plt>
   15058:	add	r3, r4, #168	; 0xa8
   1505c:	mov	r1, #47	; 0x2f
   15060:	mov	r0, r3
   15064:	bl	10d0c <strrchr@plt>
   15068:	mov	r5, r0
   1506c:	cmp	r5, #0
   15070:	beq	150b8 <__assert_fail@plt+0x42e0>
   15074:	add	r3, r4, #168	; 0xa8
   15078:	cmp	r5, r3
   1507c:	bne	15090 <__assert_fail@plt+0x42b8>
   15080:	add	r3, r5, #1
   15084:	ldrb	r3, [r3]
   15088:	cmp	r3, #0
   1508c:	beq	150b8 <__assert_fail@plt+0x42e0>
   15090:	add	r5, r5, #1
   15094:	mov	r0, r5
   15098:	bl	10ca0 <strlen@plt>
   1509c:	mov	r6, r0
   150a0:	add	r3, r4, #168	; 0xa8
   150a4:	add	r2, r6, #1
   150a8:	mov	r1, r5
   150ac:	mov	r0, r3
   150b0:	bl	10bb0 <memmove@plt>
   150b4:	str	r6, [r4, #52]	; 0x34
   150b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   150bc:	ldr	r3, [r3, #24]
   150c0:	str	r3, [r4, #28]
   150c4:	ldr	r3, [r4, #28]
   150c8:	str	r3, [r4, #24]
   150cc:	nop	{0}
   150d0:	sub	sp, fp, #16
   150d4:	ldrd	r4, [sp]
   150d8:	ldr	r6, [sp, #8]
   150dc:	ldr	fp, [sp, #12]
   150e0:	add	sp, sp, #16
   150e4:	pop	{pc}		; (ldr pc, [sp], #4)
   150e8:	strd	r4, [sp, #-16]!
   150ec:	str	fp, [sp, #8]
   150f0:	str	lr, [sp, #12]
   150f4:	add	fp, sp, #12
   150f8:	sub	sp, sp, #16
   150fc:	str	r0, [fp, #-24]	; 0xffffffe8
   15100:	mov	r3, #0
   15104:	str	r3, [fp, #-16]
   15108:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1510c:	ldr	r3, [r3]
   15110:	cmp	r3, #0
   15114:	beq	15160 <__assert_fail@plt+0x4388>
   15118:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1511c:	ldr	r4, [r3]
   15120:	b	1514c <__assert_fail@plt+0x4374>
   15124:	mov	r5, r4
   15128:	ldr	r3, [r4, #8]
   1512c:	cmp	r3, #0
   15130:	beq	1513c <__assert_fail@plt+0x4364>
   15134:	ldr	r3, [r4, #8]
   15138:	b	15140 <__assert_fail@plt+0x4368>
   1513c:	ldr	r3, [r4, #4]
   15140:	mov	r4, r3
   15144:	mov	r0, r5
   15148:	bl	1430c <__assert_fail@plt+0x3534>
   1514c:	ldr	r3, [r4, #48]	; 0x30
   15150:	cmp	r3, #0
   15154:	bge	15124 <__assert_fail@plt+0x434c>
   15158:	mov	r0, r4
   1515c:	bl	1430c <__assert_fail@plt+0x3534>
   15160:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15164:	ldr	r3, [r3, #4]
   15168:	cmp	r3, #0
   1516c:	beq	15180 <__assert_fail@plt+0x43a8>
   15170:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15174:	ldr	r3, [r3, #4]
   15178:	mov	r0, r3
   1517c:	bl	171b8 <__assert_fail@plt+0x63e0>
   15180:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15184:	ldr	r3, [r3, #8]
   15188:	mov	r0, r3
   1518c:	bl	1430c <__assert_fail@plt+0x3534>
   15190:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15194:	ldr	r3, [r3, #24]
   15198:	mov	r0, r3
   1519c:	bl	1430c <__assert_fail@plt+0x3534>
   151a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   151a4:	ldr	r3, [r3, #48]	; 0x30
   151a8:	and	r3, r3, #512	; 0x200
   151ac:	cmp	r3, #0
   151b0:	beq	151f4 <__assert_fail@plt+0x441c>
   151b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   151b8:	ldr	r3, [r3, #32]
   151bc:	cmp	r3, #0
   151c0:	blt	1526c <__assert_fail@plt+0x4494>
   151c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   151c8:	ldr	r3, [r3, #32]
   151cc:	mov	r0, r3
   151d0:	bl	10da8 <close@plt>
   151d4:	mov	r3, r0
   151d8:	cmp	r3, #0
   151dc:	beq	1526c <__assert_fail@plt+0x4494>
   151e0:	bl	10cd0 <__errno_location@plt>
   151e4:	mov	r3, r0
   151e8:	ldr	r3, [r3]
   151ec:	str	r3, [fp, #-16]
   151f0:	b	1526c <__assert_fail@plt+0x4494>
   151f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   151f8:	ldr	r3, [r3, #48]	; 0x30
   151fc:	and	r3, r3, #4
   15200:	cmp	r3, #0
   15204:	bne	1526c <__assert_fail@plt+0x4494>
   15208:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1520c:	ldr	r3, [r3, #28]
   15210:	mov	r0, r3
   15214:	bl	10d60 <fchdir@plt>
   15218:	mov	r3, r0
   1521c:	cmp	r3, #0
   15220:	beq	15234 <__assert_fail@plt+0x445c>
   15224:	bl	10cd0 <__errno_location@plt>
   15228:	mov	r3, r0
   1522c:	ldr	r3, [r3]
   15230:	str	r3, [fp, #-16]
   15234:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15238:	ldr	r3, [r3, #28]
   1523c:	mov	r0, r3
   15240:	bl	10da8 <close@plt>
   15244:	mov	r3, r0
   15248:	cmp	r3, #0
   1524c:	beq	1526c <__assert_fail@plt+0x4494>
   15250:	ldr	r3, [fp, #-16]
   15254:	cmp	r3, #0
   15258:	bne	1526c <__assert_fail@plt+0x4494>
   1525c:	bl	10cd0 <__errno_location@plt>
   15260:	mov	r3, r0
   15264:	ldr	r3, [r3]
   15268:	str	r3, [fp, #-16]
   1526c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15270:	add	r3, r3, #60	; 0x3c
   15274:	mov	r0, r3
   15278:	bl	14858 <__assert_fail@plt+0x3a80>
   1527c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15280:	ldr	r3, [r3, #52]	; 0x34
   15284:	cmp	r3, #0
   15288:	beq	1529c <__assert_fail@plt+0x44c4>
   1528c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15290:	ldr	r3, [r3, #52]	; 0x34
   15294:	mov	r0, r3
   15298:	bl	19be0 <__assert_fail@plt+0x8e08>
   1529c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   152a0:	bl	147e4 <__assert_fail@plt+0x3a0c>
   152a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   152a8:	bl	1430c <__assert_fail@plt+0x3534>
   152ac:	ldr	r3, [fp, #-16]
   152b0:	cmp	r3, #0
   152b4:	beq	152d0 <__assert_fail@plt+0x44f8>
   152b8:	bl	10cd0 <__errno_location@plt>
   152bc:	mov	r2, r0
   152c0:	ldr	r3, [fp, #-16]
   152c4:	str	r3, [r2]
   152c8:	mvn	r3, #0
   152cc:	b	152d4 <__assert_fail@plt+0x44fc>
   152d0:	mov	r3, #0
   152d4:	mov	r0, r3
   152d8:	sub	sp, fp, #12
   152dc:	ldrd	r4, [sp]
   152e0:	ldr	fp, [sp, #8]
   152e4:	add	sp, sp, #12
   152e8:	pop	{pc}		; (ldr pc, [sp], #4)
   152ec:	str	fp, [sp, #-8]!
   152f0:	str	lr, [sp, #4]
   152f4:	add	fp, sp, #4
   152f8:	sub	sp, sp, #24
   152fc:	str	r0, [fp, #-24]	; 0xffffffe8
   15300:	str	r1, [fp, #-28]	; 0xffffffe4
   15304:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15308:	str	r3, [fp, #-8]
   1530c:	ldr	r3, [fp, #-8]
   15310:	ldrd	r2, [r3]
   15314:	strd	r2, [fp, #-20]	; 0xffffffec
   15318:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1531c:	mov	r2, r3
   15320:	mov	r3, #0
   15324:	ldrd	r0, [fp, #-20]	; 0xffffffec
   15328:	bl	1bad8 <__assert_fail@plt+0xad00>
   1532c:	mov	r3, r2
   15330:	mov	r0, r3
   15334:	sub	sp, fp, #4
   15338:	ldr	fp, [sp]
   1533c:	add	sp, sp, #4
   15340:	pop	{pc}		; (ldr pc, [sp], #4)
   15344:	push	{fp}		; (str fp, [sp, #-4]!)
   15348:	add	fp, sp, #0
   1534c:	sub	sp, sp, #20
   15350:	str	r0, [fp, #-16]
   15354:	str	r1, [fp, #-20]	; 0xffffffec
   15358:	ldr	r3, [fp, #-16]
   1535c:	str	r3, [fp, #-8]
   15360:	ldr	r3, [fp, #-20]	; 0xffffffec
   15364:	str	r3, [fp, #-12]
   15368:	ldr	r3, [fp, #-8]
   1536c:	ldrd	r0, [r3]
   15370:	ldr	r3, [fp, #-12]
   15374:	ldrd	r2, [r3]
   15378:	cmp	r1, r3
   1537c:	cmpeq	r0, r2
   15380:	moveq	r3, #1
   15384:	movne	r3, #0
   15388:	uxtb	r3, r3
   1538c:	mov	r0, r3
   15390:	add	sp, fp, #0
   15394:	pop	{fp}		; (ldr fp, [sp], #4)
   15398:	bx	lr
   1539c:	str	fp, [sp, #-8]!
   153a0:	str	lr, [sp, #4]
   153a4:	add	fp, sp, #4
   153a8:	sub	sp, sp, #136	; 0x88
   153ac:	str	r0, [fp, #-128]	; 0xffffff80
   153b0:	str	r1, [fp, #-132]	; 0xffffff7c
   153b4:	ldr	r3, [fp, #-128]	; 0xffffff80
   153b8:	ldr	r3, [r3, #44]	; 0x2c
   153bc:	str	r3, [fp, #-12]
   153c0:	ldr	r3, [fp, #-12]
   153c4:	ldr	r3, [r3, #52]	; 0x34
   153c8:	str	r3, [fp, #-8]
   153cc:	ldr	r3, [fp, #-12]
   153d0:	ldr	r3, [r3, #48]	; 0x30
   153d4:	and	r3, r3, #512	; 0x200
   153d8:	cmp	r3, #0
   153dc:	bne	153e8 <__assert_fail@plt+0x4610>
   153e0:	mov	r3, #0
   153e4:	b	1552c <__assert_fail@plt+0x4754>
   153e8:	ldr	r3, [fp, #-8]
   153ec:	cmp	r3, #0
   153f0:	bne	15438 <__assert_fail@plt+0x4660>
   153f4:	movw	r3, #17164	; 0x430c
   153f8:	movt	r3, #1
   153fc:	str	r3, [sp]
   15400:	movw	r3, #21316	; 0x5344
   15404:	movt	r3, #1
   15408:	movw	r2, #21228	; 0x52ec
   1540c:	movt	r2, #1
   15410:	mov	r1, #0
   15414:	mov	r0, #13
   15418:	bl	198ec <__assert_fail@plt+0x8b14>
   1541c:	mov	r3, r0
   15420:	mov	r2, r3
   15424:	ldr	r3, [fp, #-12]
   15428:	str	r2, [r3, #52]	; 0x34
   1542c:	ldr	r3, [fp, #-12]
   15430:	ldr	r3, [r3, #52]	; 0x34
   15434:	str	r3, [fp, #-8]
   15438:	ldr	r3, [fp, #-8]
   1543c:	cmp	r3, #0
   15440:	beq	1547c <__assert_fail@plt+0x46a4>
   15444:	ldr	r3, [fp, #-128]	; 0xffffff80
   15448:	ldrd	r2, [r3, #64]	; 0x40
   1544c:	strd	r2, [fp, #-124]	; 0xffffff84
   15450:	sub	r3, fp, #124	; 0x7c
   15454:	mov	r1, r3
   15458:	ldr	r0, [fp, #-8]
   1545c:	bl	19048 <__assert_fail@plt+0x8270>
   15460:	str	r0, [fp, #-16]
   15464:	ldr	r3, [fp, #-16]
   15468:	cmp	r3, #0
   1546c:	beq	1547c <__assert_fail@plt+0x46a4>
   15470:	ldr	r3, [fp, #-16]
   15474:	ldr	r3, [r3, #8]
   15478:	b	1552c <__assert_fail@plt+0x4754>
   1547c:	ldr	r3, [fp, #-132]	; 0xffffff7c
   15480:	cmp	r3, #0
   15484:	blt	154a4 <__assert_fail@plt+0x46cc>
   15488:	sub	r3, fp, #108	; 0x6c
   1548c:	mov	r1, r3
   15490:	ldr	r0, [fp, #-132]	; 0xffffff7c
   15494:	bl	10b5c <fstatfs64@plt>
   15498:	mov	r3, r0
   1549c:	cmp	r3, #0
   154a0:	beq	154ac <__assert_fail@plt+0x46d4>
   154a4:	mov	r3, #0
   154a8:	b	1552c <__assert_fail@plt+0x4754>
   154ac:	ldr	r3, [fp, #-8]
   154b0:	cmp	r3, #0
   154b4:	beq	15528 <__assert_fail@plt+0x4750>
   154b8:	mov	r0, #16
   154bc:	bl	1aef4 <__assert_fail@plt+0xa11c>
   154c0:	mov	r3, r0
   154c4:	str	r3, [fp, #-20]	; 0xffffffec
   154c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   154cc:	cmp	r3, #0
   154d0:	beq	15528 <__assert_fail@plt+0x4750>
   154d4:	ldr	r3, [fp, #-128]	; 0xffffff80
   154d8:	ldrd	r2, [r3, #64]	; 0x40
   154dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   154e0:	strd	r2, [r1]
   154e4:	ldr	r2, [fp, #-108]	; 0xffffff94
   154e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   154ec:	str	r2, [r3, #8]
   154f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   154f4:	ldr	r0, [fp, #-8]
   154f8:	bl	1a698 <__assert_fail@plt+0x98c0>
   154fc:	str	r0, [fp, #-16]
   15500:	ldr	r3, [fp, #-16]
   15504:	cmp	r3, #0
   15508:	beq	15520 <__assert_fail@plt+0x4748>
   1550c:	ldr	r2, [fp, #-16]
   15510:	ldr	r3, [fp, #-20]	; 0xffffffec
   15514:	cmp	r2, r3
   15518:	beq	15528 <__assert_fail@plt+0x4750>
   1551c:	bl	10d9c <abort@plt>
   15520:	ldr	r0, [fp, #-20]	; 0xffffffec
   15524:	bl	1430c <__assert_fail@plt+0x3534>
   15528:	ldr	r3, [fp, #-108]	; 0xffffff94
   1552c:	mov	r0, r3
   15530:	sub	sp, fp, #4
   15534:	ldr	fp, [sp]
   15538:	add	sp, sp, #4
   1553c:	pop	{pc}		; (ldr pc, [sp], #4)
   15540:	str	fp, [sp, #-8]!
   15544:	str	lr, [sp, #4]
   15548:	add	fp, sp, #4
   1554c:	sub	sp, sp, #8
   15550:	str	r0, [fp, #-8]
   15554:	str	r1, [fp, #-12]
   15558:	ldr	r1, [fp, #-12]
   1555c:	ldr	r0, [fp, #-8]
   15560:	bl	1539c <__assert_fail@plt+0x45c4>
   15564:	mov	r2, r0
   15568:	movw	r3, #26985	; 0x6969
   1556c:	cmp	r2, r3
   15570:	beq	15594 <__assert_fail@plt+0x47bc>
   15574:	movw	r3, #6548	; 0x1994
   15578:	movt	r3, #258	; 0x102
   1557c:	cmp	r2, r3
   15580:	beq	15594 <__assert_fail@plt+0x47bc>
   15584:	movw	r3, #19778	; 0x4d42
   15588:	movt	r3, #65363	; 0xff53
   1558c:	cmp	r2, r3
   15590:	bne	1559c <__assert_fail@plt+0x47c4>
   15594:	mov	r3, #0
   15598:	b	155a0 <__assert_fail@plt+0x47c8>
   1559c:	mov	r3, #1
   155a0:	mov	r0, r3
   155a4:	sub	sp, fp, #4
   155a8:	ldr	fp, [sp]
   155ac:	add	sp, sp, #4
   155b0:	pop	{pc}		; (ldr pc, [sp], #4)
   155b4:	str	fp, [sp, #-8]!
   155b8:	str	lr, [sp, #4]
   155bc:	add	fp, sp, #4
   155c0:	sub	sp, sp, #8
   155c4:	str	r0, [fp, #-8]
   155c8:	str	r1, [fp, #-12]
   155cc:	ldr	r1, [fp, #-12]
   155d0:	ldr	r0, [fp, #-8]
   155d4:	bl	1539c <__assert_fail@plt+0x45c4>
   155d8:	mov	r3, r0
   155dc:	movw	r2, #26985	; 0x6969
   155e0:	cmp	r3, r2
   155e4:	beq	1562c <__assert_fail@plt+0x4854>
   155e8:	movw	r2, #26985	; 0x6969
   155ec:	cmp	r3, r2
   155f0:	bgt	15610 <__assert_fail@plt+0x4838>
   155f4:	movw	r2, #19778	; 0x4d42
   155f8:	movt	r2, #65363	; 0xff53
   155fc:	cmp	r3, r2
   15600:	beq	1562c <__assert_fail@plt+0x4854>
   15604:	cmp	r3, #0
   15608:	beq	1562c <__assert_fail@plt+0x4854>
   1560c:	b	15634 <__assert_fail@plt+0x485c>
   15610:	movw	r2, #40864	; 0x9fa0
   15614:	cmp	r3, r2
   15618:	beq	1562c <__assert_fail@plt+0x4854>
   1561c:	movw	r2, #16719	; 0x414f
   15620:	movt	r2, #21318	; 0x5346
   15624:	cmp	r3, r2
   15628:	bne	15634 <__assert_fail@plt+0x485c>
   1562c:	mov	r3, #0
   15630:	b	15638 <__assert_fail@plt+0x4860>
   15634:	mov	r3, #1
   15638:	mov	r0, r3
   1563c:	sub	sp, fp, #4
   15640:	ldr	fp, [sp]
   15644:	add	sp, sp, #4
   15648:	pop	{pc}		; (ldr pc, [sp], #4)
   1564c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15650:	strd	r6, [sp, #8]
   15654:	str	fp, [sp, #16]
   15658:	str	lr, [sp, #20]
   1565c:	add	fp, sp, #20
   15660:	mov	r5, r0
   15664:	ldr	r3, [r5]
   15668:	cmp	r3, #0
   1566c:	beq	15680 <__assert_fail@plt+0x48a8>
   15670:	ldr	r3, [r5, #48]	; 0x30
   15674:	and	r3, r3, #8192	; 0x2000
   15678:	cmp	r3, #0
   1567c:	beq	15688 <__assert_fail@plt+0x48b0>
   15680:	mov	r3, #0
   15684:	b	15ddc <__assert_fail@plt+0x5004>
   15688:	ldr	r4, [r5]
   1568c:	ldrh	r6, [r4, #60]	; 0x3c
   15690:	mov	r3, #3
   15694:	strh	r3, [r4, #60]	; 0x3c
   15698:	cmp	r6, #1
   1569c:	bne	156c0 <__assert_fail@plt+0x48e8>
   156a0:	mov	r2, #0
   156a4:	mov	r1, r4
   156a8:	mov	r0, r5
   156ac:	bl	16d34 <__assert_fail@plt+0x5f5c>
   156b0:	mov	r3, r0
   156b4:	strh	r3, [r4, #56]	; 0x38
   156b8:	mov	r3, r4
   156bc:	b	15ddc <__assert_fail@plt+0x5004>
   156c0:	cmp	r6, #2
   156c4:	bne	15768 <__assert_fail@plt+0x4990>
   156c8:	ldrh	r3, [r4, #56]	; 0x38
   156cc:	cmp	r3, #12
   156d0:	beq	156e0 <__assert_fail@plt+0x4908>
   156d4:	ldrh	r3, [r4, #56]	; 0x38
   156d8:	cmp	r3, #13
   156dc:	bne	15768 <__assert_fail@plt+0x4990>
   156e0:	mov	r2, #1
   156e4:	mov	r1, r4
   156e8:	mov	r0, r5
   156ec:	bl	16d34 <__assert_fail@plt+0x5f5c>
   156f0:	mov	r3, r0
   156f4:	strh	r3, [r4, #56]	; 0x38
   156f8:	ldrh	r3, [r4, #56]	; 0x38
   156fc:	cmp	r3, #1
   15700:	bne	15b28 <__assert_fail@plt+0x4d50>
   15704:	ldr	r3, [r5, #48]	; 0x30
   15708:	and	r3, r3, #4
   1570c:	cmp	r3, #0
   15710:	bne	15b28 <__assert_fail@plt+0x4d50>
   15714:	movw	r1, #48752	; 0xbe70
   15718:	movt	r1, #1
   1571c:	mov	r0, r5
   15720:	bl	14ae0 <__assert_fail@plt+0x3d08>
   15724:	mov	r3, r0
   15728:	str	r3, [r4, #36]	; 0x24
   1572c:	ldr	r3, [r4, #36]	; 0x24
   15730:	cmp	r3, #0
   15734:	bge	15754 <__assert_fail@plt+0x497c>
   15738:	bl	10cd0 <__errno_location@plt>
   1573c:	mov	r3, r0
   15740:	ldr	r3, [r3]
   15744:	str	r3, [r4, #32]
   15748:	mov	r3, #7
   1574c:	strh	r3, [r4, #56]	; 0x38
   15750:	b	15b28 <__assert_fail@plt+0x4d50>
   15754:	ldrh	r3, [r4, #58]	; 0x3a
   15758:	orr	r3, r3, #2
   1575c:	uxth	r3, r3
   15760:	strh	r3, [r4, #58]	; 0x3a
   15764:	b	15b28 <__assert_fail@plt+0x4d50>
   15768:	ldrh	r3, [r4, #56]	; 0x38
   1576c:	cmp	r3, #1
   15770:	bne	15920 <__assert_fail@plt+0x4b48>
   15774:	cmp	r6, #4
   15778:	beq	157a0 <__assert_fail@plt+0x49c8>
   1577c:	ldr	r3, [r5, #48]	; 0x30
   15780:	and	r3, r3, #64	; 0x40
   15784:	cmp	r3, #0
   15788:	beq	157f8 <__assert_fail@plt+0x4a20>
   1578c:	ldrd	r0, [r4, #64]	; 0x40
   15790:	ldrd	r2, [r5, #16]
   15794:	cmp	r1, r3
   15798:	cmpeq	r0, r2
   1579c:	beq	157f8 <__assert_fail@plt+0x4a20>
   157a0:	ldrh	r3, [r4, #58]	; 0x3a
   157a4:	and	r3, r3, #2
   157a8:	cmp	r3, #0
   157ac:	beq	157bc <__assert_fail@plt+0x49e4>
   157b0:	ldr	r3, [r4, #36]	; 0x24
   157b4:	mov	r0, r3
   157b8:	bl	10da8 <close@plt>
   157bc:	ldr	r3, [r5, #4]
   157c0:	cmp	r3, #0
   157c4:	beq	157dc <__assert_fail@plt+0x4a04>
   157c8:	ldr	r3, [r5, #4]
   157cc:	mov	r0, r3
   157d0:	bl	171b8 <__assert_fail@plt+0x63e0>
   157d4:	mov	r3, #0
   157d8:	str	r3, [r5, #4]
   157dc:	mov	r3, #6
   157e0:	strh	r3, [r4, #56]	; 0x38
   157e4:	mov	r1, r4
   157e8:	mov	r0, r5
   157ec:	bl	1469c <__assert_fail@plt+0x38c4>
   157f0:	mov	r3, r4
   157f4:	b	15ddc <__assert_fail@plt+0x5004>
   157f8:	ldr	r3, [r5, #4]
   157fc:	cmp	r3, #0
   15800:	beq	15834 <__assert_fail@plt+0x4a5c>
   15804:	ldr	r3, [r5, #48]	; 0x30
   15808:	and	r3, r3, #4096	; 0x1000
   1580c:	cmp	r3, #0
   15810:	beq	15834 <__assert_fail@plt+0x4a5c>
   15814:	ldr	r3, [r5, #48]	; 0x30
   15818:	bic	r3, r3, #4096	; 0x1000
   1581c:	str	r3, [r5, #48]	; 0x30
   15820:	ldr	r3, [r5, #4]
   15824:	mov	r0, r3
   15828:	bl	171b8 <__assert_fail@plt+0x63e0>
   1582c:	mov	r3, #0
   15830:	str	r3, [r5, #4]
   15834:	ldr	r3, [r5, #4]
   15838:	cmp	r3, #0
   1583c:	beq	158a4 <__assert_fail@plt+0x4acc>
   15840:	ldr	r3, [r4, #24]
   15844:	mvn	r2, #0
   15848:	mov	r1, r4
   1584c:	mov	r0, r5
   15850:	bl	174c8 <__assert_fail@plt+0x66f0>
   15854:	mov	r3, r0
   15858:	cmp	r3, #0
   1585c:	beq	15910 <__assert_fail@plt+0x4b38>
   15860:	bl	10cd0 <__errno_location@plt>
   15864:	mov	r3, r0
   15868:	ldr	r3, [r3]
   1586c:	str	r3, [r4, #32]
   15870:	ldrh	r3, [r4, #58]	; 0x3a
   15874:	orr	r3, r3, #1
   15878:	uxth	r3, r3
   1587c:	strh	r3, [r4, #58]	; 0x3a
   15880:	ldr	r4, [r5, #4]
   15884:	b	15898 <__assert_fail@plt+0x4ac0>
   15888:	ldr	r3, [r4, #4]
   1588c:	ldr	r3, [r3, #24]
   15890:	str	r3, [r4, #24]
   15894:	ldr	r4, [r4, #8]
   15898:	cmp	r4, #0
   1589c:	bne	15888 <__assert_fail@plt+0x4ab0>
   158a0:	b	15910 <__assert_fail@plt+0x4b38>
   158a4:	mov	r1, #3
   158a8:	mov	r0, r5
   158ac:	bl	161e0 <__assert_fail@plt+0x5408>
   158b0:	mov	r3, r0
   158b4:	str	r3, [r5, #4]
   158b8:	ldr	r3, [r5, #4]
   158bc:	cmp	r3, #0
   158c0:	bne	15910 <__assert_fail@plt+0x4b38>
   158c4:	ldr	r3, [r5, #48]	; 0x30
   158c8:	and	r3, r3, #8192	; 0x2000
   158cc:	cmp	r3, #0
   158d0:	beq	158dc <__assert_fail@plt+0x4b04>
   158d4:	mov	r3, #0
   158d8:	b	15ddc <__assert_fail@plt+0x5004>
   158dc:	ldr	r3, [r4, #32]
   158e0:	cmp	r3, #0
   158e4:	beq	158fc <__assert_fail@plt+0x4b24>
   158e8:	ldrh	r3, [r4, #56]	; 0x38
   158ec:	cmp	r3, #4
   158f0:	beq	158fc <__assert_fail@plt+0x4b24>
   158f4:	mov	r3, #7
   158f8:	strh	r3, [r4, #56]	; 0x38
   158fc:	mov	r1, r4
   15900:	mov	r0, r5
   15904:	bl	1469c <__assert_fail@plt+0x38c4>
   15908:	mov	r3, r4
   1590c:	b	15ddc <__assert_fail@plt+0x5004>
   15910:	ldr	r4, [r5, #4]
   15914:	mov	r3, #0
   15918:	str	r3, [r5, #4]
   1591c:	b	15ab8 <__assert_fail@plt+0x4ce0>
   15920:	nop	{0}
   15924:	mov	r6, r4
   15928:	ldr	r3, [r4, #8]
   1592c:	cmp	r3, #0
   15930:	bne	1599c <__assert_fail@plt+0x4bc4>
   15934:	ldr	r3, [r4, #4]
   15938:	ldr	r3, [r3, #12]
   1593c:	cmp	r3, #0
   15940:	beq	1599c <__assert_fail@plt+0x4bc4>
   15944:	ldr	r4, [r6, #4]
   15948:	str	r4, [r5]
   1594c:	ldr	r2, [r5, #24]
   15950:	ldr	r3, [r4, #40]	; 0x28
   15954:	add	r3, r2, r3
   15958:	mov	r2, #0
   1595c:	strb	r2, [r3]
   15960:	mov	r1, #3
   15964:	mov	r0, r5
   15968:	bl	161e0 <__assert_fail@plt+0x5408>
   1596c:	mov	r4, r0
   15970:	cmp	r4, #0
   15974:	bne	15990 <__assert_fail@plt+0x4bb8>
   15978:	ldr	r3, [r5, #48]	; 0x30
   1597c:	and	r3, r3, #8192	; 0x2000
   15980:	cmp	r3, #0
   15984:	beq	15bdc <__assert_fail@plt+0x4e04>
   15988:	mov	r3, #0
   1598c:	b	15ddc <__assert_fail@plt+0x5004>
   15990:	mov	r0, r6
   15994:	bl	1430c <__assert_fail@plt+0x3534>
   15998:	b	15ab8 <__assert_fail@plt+0x4ce0>
   1599c:	ldr	r4, [r4, #8]
   159a0:	cmp	r4, #0
   159a4:	beq	15be4 <__assert_fail@plt+0x4e0c>
   159a8:	str	r4, [r5]
   159ac:	mov	r0, r6
   159b0:	bl	1430c <__assert_fail@plt+0x3534>
   159b4:	ldr	r3, [r4, #48]	; 0x30
   159b8:	cmp	r3, #0
   159bc:	bne	15a08 <__assert_fail@plt+0x4c30>
   159c0:	mov	r0, r5
   159c4:	bl	149fc <__assert_fail@plt+0x3c24>
   159c8:	mov	r3, r0
   159cc:	cmp	r3, #0
   159d0:	beq	159e8 <__assert_fail@plt+0x4c10>
   159d4:	ldr	r3, [r5, #48]	; 0x30
   159d8:	orr	r3, r3, #8192	; 0x2000
   159dc:	str	r3, [r5, #48]	; 0x30
   159e0:	mov	r3, #0
   159e4:	b	15ddc <__assert_fail@plt+0x5004>
   159e8:	mov	r0, r5
   159ec:	bl	147e4 <__assert_fail@plt+0x3a0c>
   159f0:	mov	r1, r4
   159f4:	mov	r0, r5
   159f8:	bl	15014 <__assert_fail@plt+0x423c>
   159fc:	mov	r0, r5
   15a00:	bl	14480 <__assert_fail@plt+0x36a8>
   15a04:	b	15b2c <__assert_fail@plt+0x4d54>
   15a08:	ldrh	r3, [r4, #60]	; 0x3c
   15a0c:	cmp	r3, #4
   15a10:	bne	15a18 <__assert_fail@plt+0x4c40>
   15a14:	b	15924 <__assert_fail@plt+0x4b4c>
   15a18:	ldrh	r3, [r4, #60]	; 0x3c
   15a1c:	cmp	r3, #2
   15a20:	bne	15ab4 <__assert_fail@plt+0x4cdc>
   15a24:	mov	r2, #1
   15a28:	mov	r1, r4
   15a2c:	mov	r0, r5
   15a30:	bl	16d34 <__assert_fail@plt+0x5f5c>
   15a34:	mov	r3, r0
   15a38:	strh	r3, [r4, #56]	; 0x38
   15a3c:	ldrh	r3, [r4, #56]	; 0x38
   15a40:	cmp	r3, #1
   15a44:	bne	15aa8 <__assert_fail@plt+0x4cd0>
   15a48:	ldr	r3, [r5, #48]	; 0x30
   15a4c:	and	r3, r3, #4
   15a50:	cmp	r3, #0
   15a54:	bne	15aa8 <__assert_fail@plt+0x4cd0>
   15a58:	movw	r1, #48752	; 0xbe70
   15a5c:	movt	r1, #1
   15a60:	mov	r0, r5
   15a64:	bl	14ae0 <__assert_fail@plt+0x3d08>
   15a68:	mov	r3, r0
   15a6c:	str	r3, [r4, #36]	; 0x24
   15a70:	ldr	r3, [r4, #36]	; 0x24
   15a74:	cmp	r3, #0
   15a78:	bge	15a98 <__assert_fail@plt+0x4cc0>
   15a7c:	bl	10cd0 <__errno_location@plt>
   15a80:	mov	r3, r0
   15a84:	ldr	r3, [r3]
   15a88:	str	r3, [r4, #32]
   15a8c:	mov	r3, #7
   15a90:	strh	r3, [r4, #56]	; 0x38
   15a94:	b	15aa8 <__assert_fail@plt+0x4cd0>
   15a98:	ldrh	r3, [r4, #58]	; 0x3a
   15a9c:	orr	r3, r3, #2
   15aa0:	uxth	r3, r3
   15aa4:	strh	r3, [r4, #58]	; 0x3a
   15aa8:	mov	r3, #3
   15aac:	strh	r3, [r4, #60]	; 0x3c
   15ab0:	b	15ab8 <__assert_fail@plt+0x4ce0>
   15ab4:	nop	{0}
   15ab8:	ldr	r2, [r5, #24]
   15abc:	ldr	r3, [r4, #4]
   15ac0:	ldr	r1, [r3, #28]
   15ac4:	ldr	r3, [r4, #4]
   15ac8:	ldr	r3, [r3, #40]	; 0x28
   15acc:	sub	r3, r3, #1
   15ad0:	add	r3, r1, r3
   15ad4:	ldrb	r3, [r3]
   15ad8:	cmp	r3, #47	; 0x2f
   15adc:	bne	15af0 <__assert_fail@plt+0x4d18>
   15ae0:	ldr	r3, [r4, #4]
   15ae4:	ldr	r3, [r3, #40]	; 0x28
   15ae8:	sub	r3, r3, #1
   15aec:	b	15af8 <__assert_fail@plt+0x4d20>
   15af0:	ldr	r3, [r4, #4]
   15af4:	ldr	r3, [r3, #40]	; 0x28
   15af8:	add	r6, r2, r3
   15afc:	mov	r3, r6
   15b00:	add	r6, r3, #1
   15b04:	mov	r2, #47	; 0x2f
   15b08:	strb	r2, [r3]
   15b0c:	add	r1, r4, #168	; 0xa8
   15b10:	ldr	r3, [r4, #52]	; 0x34
   15b14:	add	r3, r3, #1
   15b18:	mov	r2, r3
   15b1c:	mov	r0, r6
   15b20:	bl	10bb0 <memmove@plt>
   15b24:	b	15b2c <__assert_fail@plt+0x4d54>
   15b28:	nop	{0}
   15b2c:	str	r4, [r5]
   15b30:	ldrh	r3, [r4, #56]	; 0x38
   15b34:	cmp	r3, #11
   15b38:	bne	15b7c <__assert_fail@plt+0x4da4>
   15b3c:	ldrd	r2, [r4, #112]	; 0x70
   15b40:	cmp	r3, #0
   15b44:	cmpeq	r2, #2
   15b48:	bne	15b68 <__assert_fail@plt+0x4d90>
   15b4c:	mov	r2, #0
   15b50:	mov	r1, r4
   15b54:	mov	r0, r5
   15b58:	bl	16d34 <__assert_fail@plt+0x5f5c>
   15b5c:	mov	r3, r0
   15b60:	strh	r3, [r4, #56]	; 0x38
   15b64:	b	15b7c <__assert_fail@plt+0x4da4>
   15b68:	ldrd	r2, [r4, #112]	; 0x70
   15b6c:	cmp	r3, #0
   15b70:	cmpeq	r2, #1
   15b74:	beq	15b7c <__assert_fail@plt+0x4da4>
   15b78:	bl	10d9c <abort@plt>
   15b7c:	ldrh	r3, [r4, #56]	; 0x38
   15b80:	cmp	r3, #1
   15b84:	bne	15bd4 <__assert_fail@plt+0x4dfc>
   15b88:	ldr	r3, [r4, #48]	; 0x30
   15b8c:	cmp	r3, #0
   15b90:	bne	15b9c <__assert_fail@plt+0x4dc4>
   15b94:	ldrd	r2, [r4, #64]	; 0x40
   15b98:	strd	r2, [r5, #16]
   15b9c:	mov	r1, r4
   15ba0:	mov	r0, r5
   15ba4:	bl	14554 <__assert_fail@plt+0x377c>
   15ba8:	mov	r3, r0
   15bac:	eor	r3, r3, #1
   15bb0:	uxtb	r3, r3
   15bb4:	cmp	r3, #0
   15bb8:	beq	15bd4 <__assert_fail@plt+0x4dfc>
   15bbc:	bl	10cd0 <__errno_location@plt>
   15bc0:	mov	r2, r0
   15bc4:	mov	r3, #12
   15bc8:	str	r3, [r2]
   15bcc:	mov	r3, #0
   15bd0:	b	15ddc <__assert_fail@plt+0x5004>
   15bd4:	mov	r3, r4
   15bd8:	b	15ddc <__assert_fail@plt+0x5004>
   15bdc:	nop	{0}
   15be0:	b	15be8 <__assert_fail@plt+0x4e10>
   15be4:	nop	{0}
   15be8:	ldr	r4, [r6, #4]
   15bec:	str	r4, [r5]
   15bf0:	mov	r0, r6
   15bf4:	bl	1430c <__assert_fail@plt+0x3534>
   15bf8:	ldr	r3, [r4, #48]	; 0x30
   15bfc:	cmn	r3, #1
   15c00:	bne	15c2c <__assert_fail@plt+0x4e54>
   15c04:	mov	r0, r4
   15c08:	bl	1430c <__assert_fail@plt+0x3534>
   15c0c:	bl	10cd0 <__errno_location@plt>
   15c10:	mov	r2, r0
   15c14:	mov	r3, #0
   15c18:	str	r3, [r2]
   15c1c:	mov	r3, #0
   15c20:	str	r3, [r5]
   15c24:	mov	r3, #0
   15c28:	b	15ddc <__assert_fail@plt+0x5004>
   15c2c:	ldrh	r3, [r4, #56]	; 0x38
   15c30:	cmp	r3, #11
   15c34:	bne	15c3c <__assert_fail@plt+0x4e64>
   15c38:	bl	10d9c <abort@plt>
   15c3c:	ldr	r2, [r5, #24]
   15c40:	ldr	r3, [r4, #40]	; 0x28
   15c44:	add	r3, r2, r3
   15c48:	mov	r2, #0
   15c4c:	strb	r2, [r3]
   15c50:	ldr	r3, [r4, #48]	; 0x30
   15c54:	cmp	r3, #0
   15c58:	bne	15c90 <__assert_fail@plt+0x4eb8>
   15c5c:	mov	r0, r5
   15c60:	bl	149fc <__assert_fail@plt+0x3c24>
   15c64:	mov	r3, r0
   15c68:	cmp	r3, #0
   15c6c:	beq	15d80 <__assert_fail@plt+0x4fa8>
   15c70:	bl	10cd0 <__errno_location@plt>
   15c74:	mov	r3, r0
   15c78:	ldr	r3, [r3]
   15c7c:	str	r3, [r4, #32]
   15c80:	ldr	r3, [r5, #48]	; 0x30
   15c84:	orr	r3, r3, #8192	; 0x2000
   15c88:	str	r3, [r5, #48]	; 0x30
   15c8c:	b	15d80 <__assert_fail@plt+0x4fa8>
   15c90:	ldrh	r3, [r4, #58]	; 0x3a
   15c94:	and	r3, r3, #2
   15c98:	cmp	r3, #0
   15c9c:	beq	15d30 <__assert_fail@plt+0x4f58>
   15ca0:	ldr	r3, [r5, #48]	; 0x30
   15ca4:	and	r3, r3, #4
   15ca8:	cmp	r3, #0
   15cac:	bne	15d20 <__assert_fail@plt+0x4f48>
   15cb0:	ldr	r3, [r5, #48]	; 0x30
   15cb4:	and	r3, r3, #512	; 0x200
   15cb8:	cmp	r3, #0
   15cbc:	beq	15cdc <__assert_fail@plt+0x4f04>
   15cc0:	ldr	r3, [r4, #36]	; 0x24
   15cc4:	mov	r2, #1
   15cc8:	mov	r1, r3
   15ccc:	mov	r0, r5
   15cd0:	bl	1492c <__assert_fail@plt+0x3b54>
   15cd4:	mov	r3, #0
   15cd8:	b	15cfc <__assert_fail@plt+0x4f24>
   15cdc:	ldr	r3, [r4, #36]	; 0x24
   15ce0:	mov	r0, r3
   15ce4:	bl	10d60 <fchdir@plt>
   15ce8:	mov	r3, r0
   15cec:	cmp	r3, #0
   15cf0:	movne	r3, #1
   15cf4:	moveq	r3, #0
   15cf8:	uxtb	r3, r3
   15cfc:	cmp	r3, #0
   15d00:	beq	15d20 <__assert_fail@plt+0x4f48>
   15d04:	bl	10cd0 <__errno_location@plt>
   15d08:	mov	r3, r0
   15d0c:	ldr	r3, [r3]
   15d10:	str	r3, [r4, #32]
   15d14:	ldr	r3, [r5, #48]	; 0x30
   15d18:	orr	r3, r3, #8192	; 0x2000
   15d1c:	str	r3, [r5, #48]	; 0x30
   15d20:	ldr	r3, [r4, #36]	; 0x24
   15d24:	mov	r0, r3
   15d28:	bl	10da8 <close@plt>
   15d2c:	b	15d80 <__assert_fail@plt+0x4fa8>
   15d30:	ldrh	r3, [r4, #58]	; 0x3a
   15d34:	and	r3, r3, #1
   15d38:	cmp	r3, #0
   15d3c:	bne	15d80 <__assert_fail@plt+0x4fa8>
   15d40:	ldr	r1, [r4, #4]
   15d44:	movw	r3, #48756	; 0xbe74
   15d48:	movt	r3, #1
   15d4c:	mvn	r2, #0
   15d50:	mov	r0, r5
   15d54:	bl	174c8 <__assert_fail@plt+0x66f0>
   15d58:	mov	r3, r0
   15d5c:	cmp	r3, #0
   15d60:	beq	15d80 <__assert_fail@plt+0x4fa8>
   15d64:	bl	10cd0 <__errno_location@plt>
   15d68:	mov	r3, r0
   15d6c:	ldr	r3, [r3]
   15d70:	str	r3, [r4, #32]
   15d74:	ldr	r3, [r5, #48]	; 0x30
   15d78:	orr	r3, r3, #8192	; 0x2000
   15d7c:	str	r3, [r5, #48]	; 0x30
   15d80:	ldrh	r3, [r4, #56]	; 0x38
   15d84:	cmp	r3, #2
   15d88:	beq	15dc0 <__assert_fail@plt+0x4fe8>
   15d8c:	ldr	r3, [r4, #32]
   15d90:	cmp	r3, #0
   15d94:	beq	15da0 <__assert_fail@plt+0x4fc8>
   15d98:	mov	r3, #7
   15d9c:	b	15da4 <__assert_fail@plt+0x4fcc>
   15da0:	mov	r3, #6
   15da4:	strh	r3, [r4, #56]	; 0x38
   15da8:	ldr	r3, [r4, #32]
   15dac:	cmp	r3, #0
   15db0:	bne	15dc0 <__assert_fail@plt+0x4fe8>
   15db4:	mov	r1, r4
   15db8:	mov	r0, r5
   15dbc:	bl	1469c <__assert_fail@plt+0x38c4>
   15dc0:	ldr	r3, [r5, #48]	; 0x30
   15dc4:	and	r3, r3, #8192	; 0x2000
   15dc8:	cmp	r3, #0
   15dcc:	bne	15dd8 <__assert_fail@plt+0x5000>
   15dd0:	mov	r3, r4
   15dd4:	b	15ddc <__assert_fail@plt+0x5004>
   15dd8:	mov	r3, #0
   15ddc:	mov	r0, r3
   15de0:	sub	sp, fp, #20
   15de4:	ldrd	r4, [sp]
   15de8:	ldrd	r6, [sp, #8]
   15dec:	ldr	fp, [sp, #16]
   15df0:	add	sp, sp, #20
   15df4:	pop	{pc}		; (ldr pc, [sp], #4)
   15df8:	str	fp, [sp, #-8]!
   15dfc:	str	lr, [sp, #4]
   15e00:	add	fp, sp, #4
   15e04:	sub	sp, sp, #16
   15e08:	str	r0, [fp, #-8]
   15e0c:	str	r1, [fp, #-12]
   15e10:	str	r2, [fp, #-16]
   15e14:	ldr	r3, [fp, #-16]
   15e18:	cmp	r3, #0
   15e1c:	beq	15e68 <__assert_fail@plt+0x5090>
   15e20:	ldr	r3, [fp, #-16]
   15e24:	cmp	r3, #1
   15e28:	beq	15e68 <__assert_fail@plt+0x5090>
   15e2c:	ldr	r3, [fp, #-16]
   15e30:	cmp	r3, #2
   15e34:	beq	15e68 <__assert_fail@plt+0x5090>
   15e38:	ldr	r3, [fp, #-16]
   15e3c:	cmp	r3, #3
   15e40:	beq	15e68 <__assert_fail@plt+0x5090>
   15e44:	ldr	r3, [fp, #-16]
   15e48:	cmp	r3, #4
   15e4c:	beq	15e68 <__assert_fail@plt+0x5090>
   15e50:	bl	10cd0 <__errno_location@plt>
   15e54:	mov	r2, r0
   15e58:	mov	r3, #22
   15e5c:	str	r3, [r2]
   15e60:	mov	r3, #1
   15e64:	b	15e7c <__assert_fail@plt+0x50a4>
   15e68:	ldr	r3, [fp, #-16]
   15e6c:	uxth	r2, r3
   15e70:	ldr	r3, [fp, #-12]
   15e74:	strh	r2, [r3, #60]	; 0x3c
   15e78:	mov	r3, #0
   15e7c:	mov	r0, r3
   15e80:	sub	sp, fp, #4
   15e84:	ldr	fp, [sp]
   15e88:	add	sp, sp, #4
   15e8c:	pop	{pc}		; (ldr pc, [sp], #4)
   15e90:	strd	r4, [sp, #-16]!
   15e94:	str	fp, [sp, #8]
   15e98:	str	lr, [sp, #12]
   15e9c:	add	fp, sp, #12
   15ea0:	sub	sp, sp, #16
   15ea4:	mov	r4, r0
   15ea8:	str	r1, [fp, #-24]	; 0xffffffe8
   15eac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15eb0:	cmp	r3, #0
   15eb4:	beq	15edc <__assert_fail@plt+0x5104>
   15eb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15ebc:	cmp	r3, #4096	; 0x1000
   15ec0:	beq	15edc <__assert_fail@plt+0x5104>
   15ec4:	bl	10cd0 <__errno_location@plt>
   15ec8:	mov	r2, r0
   15ecc:	mov	r3, #22
   15ed0:	str	r3, [r2]
   15ed4:	mov	r3, #0
   15ed8:	b	16074 <__assert_fail@plt+0x529c>
   15edc:	ldr	r5, [r4]
   15ee0:	bl	10cd0 <__errno_location@plt>
   15ee4:	mov	r2, r0
   15ee8:	mov	r3, #0
   15eec:	str	r3, [r2]
   15ef0:	ldr	r3, [r4, #48]	; 0x30
   15ef4:	and	r3, r3, #8192	; 0x2000
   15ef8:	cmp	r3, #0
   15efc:	beq	15f08 <__assert_fail@plt+0x5130>
   15f00:	mov	r3, #0
   15f04:	b	16074 <__assert_fail@plt+0x529c>
   15f08:	ldrh	r3, [r5, #56]	; 0x38
   15f0c:	cmp	r3, #9
   15f10:	bne	15f1c <__assert_fail@plt+0x5144>
   15f14:	ldr	r3, [r5, #8]
   15f18:	b	16074 <__assert_fail@plt+0x529c>
   15f1c:	ldrh	r3, [r5, #56]	; 0x38
   15f20:	cmp	r3, #1
   15f24:	beq	15f30 <__assert_fail@plt+0x5158>
   15f28:	mov	r3, #0
   15f2c:	b	16074 <__assert_fail@plt+0x529c>
   15f30:	ldr	r3, [r4, #4]
   15f34:	cmp	r3, #0
   15f38:	beq	15f48 <__assert_fail@plt+0x5170>
   15f3c:	ldr	r3, [r4, #4]
   15f40:	mov	r0, r3
   15f44:	bl	171b8 <__assert_fail@plt+0x63e0>
   15f48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15f4c:	cmp	r3, #4096	; 0x1000
   15f50:	bne	15f6c <__assert_fail@plt+0x5194>
   15f54:	ldr	r3, [r4, #48]	; 0x30
   15f58:	orr	r3, r3, #4096	; 0x1000
   15f5c:	str	r3, [r4, #48]	; 0x30
   15f60:	mov	r3, #2
   15f64:	str	r3, [fp, #-24]	; 0xffffffe8
   15f68:	b	15f74 <__assert_fail@plt+0x519c>
   15f6c:	mov	r3, #1
   15f70:	str	r3, [fp, #-24]	; 0xffffffe8
   15f74:	ldr	r3, [r5, #48]	; 0x30
   15f78:	cmp	r3, #0
   15f7c:	bne	15fa0 <__assert_fail@plt+0x51c8>
   15f80:	ldr	r3, [r5, #24]
   15f84:	ldrb	r3, [r3]
   15f88:	cmp	r3, #47	; 0x2f
   15f8c:	beq	15fa0 <__assert_fail@plt+0x51c8>
   15f90:	ldr	r3, [r4, #48]	; 0x30
   15f94:	and	r3, r3, #4
   15f98:	cmp	r3, #0
   15f9c:	beq	15fbc <__assert_fail@plt+0x51e4>
   15fa0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15fa4:	mov	r0, r4
   15fa8:	bl	161e0 <__assert_fail@plt+0x5408>
   15fac:	mov	r3, r0
   15fb0:	str	r3, [r4, #4]
   15fb4:	ldr	r3, [r4, #4]
   15fb8:	b	16074 <__assert_fail@plt+0x529c>
   15fbc:	movw	r1, #48752	; 0xbe70
   15fc0:	movt	r1, #1
   15fc4:	mov	r0, r4
   15fc8:	bl	14ae0 <__assert_fail@plt+0x3d08>
   15fcc:	str	r0, [fp, #-16]
   15fd0:	ldr	r3, [fp, #-16]
   15fd4:	cmp	r3, #0
   15fd8:	bge	15fec <__assert_fail@plt+0x5214>
   15fdc:	mov	r3, #0
   15fe0:	str	r3, [r4, #4]
   15fe4:	mov	r3, #0
   15fe8:	b	16074 <__assert_fail@plt+0x529c>
   15fec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15ff0:	mov	r0, r4
   15ff4:	bl	161e0 <__assert_fail@plt+0x5408>
   15ff8:	mov	r3, r0
   15ffc:	str	r3, [r4, #4]
   16000:	ldr	r3, [r4, #48]	; 0x30
   16004:	and	r3, r3, #512	; 0x200
   16008:	cmp	r3, #0
   1600c:	beq	16024 <__assert_fail@plt+0x524c>
   16010:	mov	r2, #1
   16014:	ldr	r1, [fp, #-16]
   16018:	mov	r0, r4
   1601c:	bl	1492c <__assert_fail@plt+0x3b54>
   16020:	b	16070 <__assert_fail@plt+0x5298>
   16024:	ldr	r0, [fp, #-16]
   16028:	bl	10d60 <fchdir@plt>
   1602c:	mov	r3, r0
   16030:	cmp	r3, #0
   16034:	beq	16068 <__assert_fail@plt+0x5290>
   16038:	bl	10cd0 <__errno_location@plt>
   1603c:	mov	r3, r0
   16040:	ldr	r3, [r3]
   16044:	str	r3, [fp, #-20]	; 0xffffffec
   16048:	ldr	r0, [fp, #-16]
   1604c:	bl	10da8 <close@plt>
   16050:	bl	10cd0 <__errno_location@plt>
   16054:	mov	r2, r0
   16058:	ldr	r3, [fp, #-20]	; 0xffffffec
   1605c:	str	r3, [r2]
   16060:	mov	r3, #0
   16064:	b	16074 <__assert_fail@plt+0x529c>
   16068:	ldr	r0, [fp, #-16]
   1606c:	bl	10da8 <close@plt>
   16070:	ldr	r3, [r4, #4]
   16074:	mov	r0, r3
   16078:	sub	sp, fp, #12
   1607c:	ldrd	r4, [sp]
   16080:	ldr	fp, [sp, #8]
   16084:	add	sp, sp, #12
   16088:	pop	{pc}		; (ldr pc, [sp], #4)
   1608c:	push	{fp}		; (str fp, [sp, #-4]!)
   16090:	add	fp, sp, #0
   16094:	sub	sp, sp, #12
   16098:	str	r0, [fp, #-8]
   1609c:	str	r1, [fp, #-12]
   160a0:	ldr	r3, [fp, #-8]
   160a4:	ldr	r3, [r3]
   160a8:	ldrd	r0, [r3, #160]	; 0xa0
   160ac:	ldr	r3, [fp, #-12]
   160b0:	ldr	r3, [r3]
   160b4:	ldrd	r2, [r3, #160]	; 0xa0
   160b8:	cmp	r1, r3
   160bc:	cmpeq	r0, r2
   160c0:	movhi	r3, #1
   160c4:	movls	r3, #0
   160c8:	uxtb	r3, r3
   160cc:	mov	ip, r3
   160d0:	ldr	r3, [fp, #-8]
   160d4:	ldr	r3, [r3]
   160d8:	ldrd	r0, [r3, #160]	; 0xa0
   160dc:	ldr	r3, [fp, #-12]
   160e0:	ldr	r3, [r3]
   160e4:	ldrd	r2, [r3, #160]	; 0xa0
   160e8:	cmp	r1, r3
   160ec:	cmpeq	r0, r2
   160f0:	movcc	r3, #1
   160f4:	movcs	r3, #0
   160f8:	uxtb	r3, r3
   160fc:	sub	r3, ip, r3
   16100:	mov	r0, r3
   16104:	add	sp, fp, #0
   16108:	pop	{fp}		; (ldr fp, [sp], #4)
   1610c:	bx	lr
   16110:	push	{fp}		; (str fp, [sp, #-4]!)
   16114:	add	fp, sp, #0
   16118:	sub	sp, sp, #20
   1611c:	str	r0, [fp, #-16]
   16120:	str	r1, [fp, #-20]	; 0xffffffec
   16124:	ldr	r3, [fp, #-20]	; 0xffffffec
   16128:	sub	r3, r3, #1
   1612c:	cmp	r3, #11
   16130:	ldrls	pc, [pc, r3, lsl #2]
   16134:	b	161bc <__assert_fail@plt+0x53e4>
   16138:	andeq	r6, r1, ip, lsl #3
   1613c:	andeq	r6, r1, r4, ror r1
   16140:			; <UNDEFINED> instruction: 0x000161bc
   16144:	andeq	r6, r1, r0, lsl #3
   16148:			; <UNDEFINED> instruction: 0x000161bc
   1614c:	andeq	r6, r1, r8, ror #2
   16150:			; <UNDEFINED> instruction: 0x000161bc
   16154:	andeq	r6, r1, r4, lsr #3
   16158:			; <UNDEFINED> instruction: 0x000161bc
   1615c:	muleq	r1, r8, r1
   16160:			; <UNDEFINED> instruction: 0x000161bc
   16164:			; <UNDEFINED> instruction: 0x000161b0
   16168:	mov	r3, #24576	; 0x6000
   1616c:	str	r3, [fp, #-8]
   16170:	b	161c4 <__assert_fail@plt+0x53ec>
   16174:	mov	r3, #8192	; 0x2000
   16178:	str	r3, [fp, #-8]
   1617c:	b	161c4 <__assert_fail@plt+0x53ec>
   16180:	mov	r3, #16384	; 0x4000
   16184:	str	r3, [fp, #-8]
   16188:	b	161c4 <__assert_fail@plt+0x53ec>
   1618c:	mov	r3, #4096	; 0x1000
   16190:	str	r3, [fp, #-8]
   16194:	b	161c4 <__assert_fail@plt+0x53ec>
   16198:	mov	r3, #40960	; 0xa000
   1619c:	str	r3, [fp, #-8]
   161a0:	b	161c4 <__assert_fail@plt+0x53ec>
   161a4:	mov	r3, #32768	; 0x8000
   161a8:	str	r3, [fp, #-8]
   161ac:	b	161c4 <__assert_fail@plt+0x53ec>
   161b0:	mov	r3, #49152	; 0xc000
   161b4:	str	r3, [fp, #-8]
   161b8:	b	161c4 <__assert_fail@plt+0x53ec>
   161bc:	mov	r3, #0
   161c0:	str	r3, [fp, #-8]
   161c4:	ldr	r3, [fp, #-16]
   161c8:	ldr	r2, [fp, #-8]
   161cc:	str	r2, [r3, #16]
   161d0:	nop	{0}
   161d4:	add	sp, fp, #0
   161d8:	pop	{fp}		; (ldr fp, [sp], #4)
   161dc:	bx	lr
   161e0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   161e4:	strd	r6, [sp, #8]
   161e8:	str	fp, [sp, #16]
   161ec:	str	lr, [sp, #20]
   161f0:	add	fp, sp, #20
   161f4:	sub	sp, sp, #80	; 0x50
   161f8:	mov	r4, r0
   161fc:	str	r1, [fp, #-96]	; 0xffffffa0
   16200:	ldr	r3, [r4]
   16204:	str	r3, [fp, #-44]	; 0xffffffd4
   16208:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1620c:	ldr	r3, [r3, #12]
   16210:	cmp	r3, #0
   16214:	movne	r3, #1
   16218:	moveq	r3, #0
   1621c:	strb	r3, [fp, #-45]	; 0xffffffd3
   16220:	mov	r3, #0
   16224:	strb	r3, [fp, #-37]	; 0xffffffdb
   16228:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   1622c:	cmp	r3, #0
   16230:	beq	162ac <__assert_fail@plt+0x54d4>
   16234:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16238:	ldr	r3, [r3, #12]
   1623c:	str	r3, [fp, #-52]	; 0xffffffcc
   16240:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16244:	bl	10d3c <dirfd@plt>
   16248:	mov	r3, r0
   1624c:	str	r3, [fp, #-92]	; 0xffffffa4
   16250:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16254:	cmp	r3, #0
   16258:	bge	16410 <__assert_fail@plt+0x5638>
   1625c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16260:	ldr	r3, [r3, #12]
   16264:	mov	r0, r3
   16268:	bl	10dc0 <closedir@plt>
   1626c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16270:	mov	r2, #0
   16274:	str	r2, [r3, #12]
   16278:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1627c:	cmp	r3, #3
   16280:	bne	162a4 <__assert_fail@plt+0x54cc>
   16284:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16288:	mov	r2, #4
   1628c:	strh	r2, [r3, #56]	; 0x38
   16290:	bl	10cd0 <__errno_location@plt>
   16294:	mov	r3, r0
   16298:	ldr	r2, [r3]
   1629c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   162a0:	str	r2, [r3, #32]
   162a4:	mov	r3, #0
   162a8:	b	16d18 <__assert_fail@plt+0x5f40>
   162ac:	ldr	r3, [r4, #48]	; 0x30
   162b0:	and	r3, r3, #4
   162b4:	cmp	r3, #0
   162b8:	bne	162d4 <__assert_fail@plt+0x54fc>
   162bc:	ldr	r3, [r4, #48]	; 0x30
   162c0:	and	r3, r3, #512	; 0x200
   162c4:	cmp	r3, #0
   162c8:	beq	162d4 <__assert_fail@plt+0x54fc>
   162cc:	ldr	r0, [r4, #32]
   162d0:	b	162d8 <__assert_fail@plt+0x5500>
   162d4:	mvn	r0, #99	; 0x63
   162d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   162dc:	ldr	r1, [r3, #24]
   162e0:	ldr	r3, [r4, #48]	; 0x30
   162e4:	and	r3, r3, #16
   162e8:	cmp	r3, #0
   162ec:	beq	16318 <__assert_fail@plt+0x5540>
   162f0:	ldr	r3, [r4, #48]	; 0x30
   162f4:	and	r3, r3, #1
   162f8:	cmp	r3, #0
   162fc:	beq	16310 <__assert_fail@plt+0x5538>
   16300:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16304:	ldr	r3, [r3, #48]	; 0x30
   16308:	cmp	r3, #0
   1630c:	beq	16318 <__assert_fail@plt+0x5540>
   16310:	mov	r2, #32768	; 0x8000
   16314:	b	1631c <__assert_fail@plt+0x5544>
   16318:	mov	r2, #0
   1631c:	sub	r3, fp, #92	; 0x5c
   16320:	bl	1ace4 <__assert_fail@plt+0x9f0c>
   16324:	mov	r3, r0
   16328:	mov	r2, r3
   1632c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16330:	str	r2, [r3, #12]
   16334:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16338:	ldr	r3, [r3, #12]
   1633c:	cmp	r3, #0
   16340:	bne	16378 <__assert_fail@plt+0x55a0>
   16344:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16348:	cmp	r3, #3
   1634c:	bne	16370 <__assert_fail@plt+0x5598>
   16350:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16354:	mov	r2, #4
   16358:	strh	r2, [r3, #56]	; 0x38
   1635c:	bl	10cd0 <__errno_location@plt>
   16360:	mov	r3, r0
   16364:	ldr	r2, [r3]
   16368:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1636c:	str	r2, [r3, #32]
   16370:	mov	r3, #0
   16374:	b	16d18 <__assert_fail@plt+0x5f40>
   16378:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1637c:	ldrh	r3, [r3, #56]	; 0x38
   16380:	cmp	r3, #11
   16384:	bne	163ac <__assert_fail@plt+0x55d4>
   16388:	mov	r2, #0
   1638c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16390:	mov	r0, r4
   16394:	bl	16d34 <__assert_fail@plt+0x5f5c>
   16398:	mov	r3, r0
   1639c:	mov	r2, r3
   163a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   163a4:	strh	r2, [r3, #56]	; 0x38
   163a8:	b	16410 <__assert_fail@plt+0x5638>
   163ac:	ldr	r3, [r4, #48]	; 0x30
   163b0:	and	r3, r3, #256	; 0x100
   163b4:	cmp	r3, #0
   163b8:	beq	16410 <__assert_fail@plt+0x5638>
   163bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   163c0:	mov	r0, r4
   163c4:	bl	1469c <__assert_fail@plt+0x38c4>
   163c8:	mov	r2, #0
   163cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   163d0:	mov	r0, r4
   163d4:	bl	16d34 <__assert_fail@plt+0x5f5c>
   163d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   163dc:	mov	r0, r4
   163e0:	bl	14554 <__assert_fail@plt+0x377c>
   163e4:	mov	r3, r0
   163e8:	eor	r3, r3, #1
   163ec:	uxtb	r3, r3
   163f0:	cmp	r3, #0
   163f4:	beq	16410 <__assert_fail@plt+0x5638>
   163f8:	bl	10cd0 <__errno_location@plt>
   163fc:	mov	r2, r0
   16400:	mov	r3, #12
   16404:	str	r3, [r2]
   16408:	mov	r3, #0
   1640c:	b	16d18 <__assert_fail@plt+0x5f40>
   16410:	ldr	r3, [r4, #44]	; 0x2c
   16414:	cmp	r3, #0
   16418:	beq	16424 <__assert_fail@plt+0x564c>
   1641c:	mvn	r3, #0
   16420:	b	1642c <__assert_fail@plt+0x5654>
   16424:	movw	r3, #34464	; 0x86a0
   16428:	movt	r3, #1
   1642c:	str	r3, [fp, #-56]	; 0xffffffc8
   16430:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   16434:	cmp	r3, #0
   16438:	beq	16448 <__assert_fail@plt+0x5670>
   1643c:	mov	r3, #1
   16440:	strb	r3, [fp, #-25]	; 0xffffffe7
   16444:	b	165e4 <__assert_fail@plt+0x580c>
   16448:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1644c:	cmp	r3, #2
   16450:	beq	164b8 <__assert_fail@plt+0x56e0>
   16454:	ldr	r3, [r4, #48]	; 0x30
   16458:	and	r3, r3, #8
   1645c:	cmp	r3, #0
   16460:	beq	164b0 <__assert_fail@plt+0x56d8>
   16464:	ldr	r3, [r4, #48]	; 0x30
   16468:	and	r3, r3, #16
   1646c:	cmp	r3, #0
   16470:	beq	164b0 <__assert_fail@plt+0x56d8>
   16474:	ldr	r3, [r4, #48]	; 0x30
   16478:	and	r3, r3, #32
   1647c:	cmp	r3, #0
   16480:	bne	164b0 <__assert_fail@plt+0x56d8>
   16484:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16488:	ldr	r3, [r3, #84]	; 0x54
   1648c:	cmp	r3, #2
   16490:	bne	164b0 <__assert_fail@plt+0x56d8>
   16494:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16498:	mov	r1, r3
   1649c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   164a0:	bl	155b4 <__assert_fail@plt+0x47dc>
   164a4:	mov	r3, r0
   164a8:	cmp	r3, #0
   164ac:	bne	164b8 <__assert_fail@plt+0x56e0>
   164b0:	mov	r3, #1
   164b4:	b	164bc <__assert_fail@plt+0x56e4>
   164b8:	mov	r3, #0
   164bc:	strb	r3, [fp, #-25]	; 0xffffffe7
   164c0:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   164c4:	and	r3, r3, #1
   164c8:	strb	r3, [fp, #-25]	; 0xffffffe7
   164cc:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   164d0:	cmp	r3, #0
   164d4:	bne	164e4 <__assert_fail@plt+0x570c>
   164d8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   164dc:	cmp	r3, #3
   164e0:	bne	165e4 <__assert_fail@plt+0x580c>
   164e4:	ldr	r3, [r4, #48]	; 0x30
   164e8:	and	r3, r3, #512	; 0x200
   164ec:	cmp	r3, #0
   164f0:	beq	16510 <__assert_fail@plt+0x5738>
   164f4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   164f8:	mov	r2, #3
   164fc:	movw	r1, #1030	; 0x406
   16500:	mov	r0, r3
   16504:	bl	1b55c <__assert_fail@plt+0xa784>
   16508:	mov	r3, r0
   1650c:	str	r3, [fp, #-92]	; 0xffffffa4
   16510:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16514:	cmp	r3, #0
   16518:	blt	1653c <__assert_fail@plt+0x5764>
   1651c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   16520:	mov	r3, #0
   16524:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16528:	mov	r0, r4
   1652c:	bl	174c8 <__assert_fail@plt+0x66f0>
   16530:	mov	r3, r0
   16534:	cmp	r3, #0
   16538:	beq	165dc <__assert_fail@plt+0x5804>
   1653c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   16540:	cmp	r3, #0
   16544:	beq	16568 <__assert_fail@plt+0x5790>
   16548:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1654c:	cmp	r3, #3
   16550:	bne	16568 <__assert_fail@plt+0x5790>
   16554:	bl	10cd0 <__errno_location@plt>
   16558:	mov	r3, r0
   1655c:	ldr	r2, [r3]
   16560:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16564:	str	r2, [r3, #32]
   16568:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1656c:	ldrh	r3, [r3, #58]	; 0x3a
   16570:	orr	r3, r3, #1
   16574:	uxth	r2, r3
   16578:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1657c:	strh	r2, [r3, #58]	; 0x3a
   16580:	mov	r3, #0
   16584:	strb	r3, [fp, #-25]	; 0xffffffe7
   16588:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1658c:	ldr	r3, [r3, #12]
   16590:	mov	r0, r3
   16594:	bl	10dc0 <closedir@plt>
   16598:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1659c:	mov	r2, #0
   165a0:	str	r2, [r3, #12]
   165a4:	ldr	r3, [r4, #48]	; 0x30
   165a8:	and	r3, r3, #512	; 0x200
   165ac:	cmp	r3, #0
   165b0:	beq	165cc <__assert_fail@plt+0x57f4>
   165b4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   165b8:	cmp	r3, #0
   165bc:	blt	165cc <__assert_fail@plt+0x57f4>
   165c0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   165c4:	mov	r0, r3
   165c8:	bl	10da8 <close@plt>
   165cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   165d0:	mov	r2, #0
   165d4:	str	r2, [r3, #12]
   165d8:	b	165e4 <__assert_fail@plt+0x580c>
   165dc:	mov	r3, #1
   165e0:	strb	r3, [fp, #-25]	; 0xffffffe7
   165e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   165e8:	ldr	r2, [r3, #28]
   165ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   165f0:	ldr	r3, [r3, #40]	; 0x28
   165f4:	sub	r3, r3, #1
   165f8:	add	r3, r2, r3
   165fc:	ldrb	r3, [r3]
   16600:	cmp	r3, #47	; 0x2f
   16604:	bne	16618 <__assert_fail@plt+0x5840>
   16608:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1660c:	ldr	r3, [r3, #40]	; 0x28
   16610:	sub	r3, r3, #1
   16614:	b	16620 <__assert_fail@plt+0x5848>
   16618:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1661c:	ldr	r3, [r3, #40]	; 0x28
   16620:	str	r3, [fp, #-60]	; 0xffffffc4
   16624:	ldr	r3, [r4, #48]	; 0x30
   16628:	and	r3, r3, #4
   1662c:	cmp	r3, #0
   16630:	beq	1665c <__assert_fail@plt+0x5884>
   16634:	ldr	r2, [r4, #24]
   16638:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1663c:	add	r3, r2, r3
   16640:	str	r3, [fp, #-36]	; 0xffffffdc
   16644:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16648:	add	r2, r3, #1
   1664c:	str	r2, [fp, #-36]	; 0xffffffdc
   16650:	mov	r2, #47	; 0x2f
   16654:	strb	r2, [r3]
   16658:	b	16664 <__assert_fail@plt+0x588c>
   1665c:	mov	r3, #0
   16660:	str	r3, [fp, #-36]	; 0xffffffdc
   16664:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16668:	add	r3, r3, #1
   1666c:	str	r3, [fp, #-60]	; 0xffffffc4
   16670:	ldr	r2, [r4, #36]	; 0x24
   16674:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16678:	sub	r3, r2, r3
   1667c:	str	r3, [fp, #-32]	; 0xffffffe0
   16680:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16684:	ldr	r3, [r3, #48]	; 0x30
   16688:	add	r3, r3, #1
   1668c:	str	r3, [fp, #-64]	; 0xffffffc0
   16690:	mov	r3, #0
   16694:	strb	r3, [fp, #-26]	; 0xffffffe6
   16698:	mov	r7, #0
   1669c:	mov	r3, #0
   166a0:	str	r3, [fp, #-24]	; 0xffffffe8
   166a4:	mov	r6, #0
   166a8:	b	16af8 <__assert_fail@plt+0x5d20>
   166ac:	bl	10cd0 <__errno_location@plt>
   166b0:	mov	r2, r0
   166b4:	mov	r3, #0
   166b8:	str	r3, [r2]
   166bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   166c0:	ldr	r3, [r3, #12]
   166c4:	mov	r0, r3
   166c8:	bl	10d24 <readdir64@plt>
   166cc:	str	r0, [fp, #-68]	; 0xffffffbc
   166d0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   166d4:	cmp	r3, #0
   166d8:	bne	16730 <__assert_fail@plt+0x5958>
   166dc:	bl	10cd0 <__errno_location@plt>
   166e0:	mov	r3, r0
   166e4:	ldr	r3, [r3]
   166e8:	cmp	r3, #0
   166ec:	beq	16b0c <__assert_fail@plt+0x5d34>
   166f0:	bl	10cd0 <__errno_location@plt>
   166f4:	mov	r3, r0
   166f8:	ldr	r2, [r3]
   166fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16700:	str	r2, [r3, #32]
   16704:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   16708:	cmp	r3, #0
   1670c:	bne	16718 <__assert_fail@plt+0x5940>
   16710:	cmp	r6, #0
   16714:	beq	16720 <__assert_fail@plt+0x5948>
   16718:	mov	r2, #7
   1671c:	b	16724 <__assert_fail@plt+0x594c>
   16720:	mov	r2, #4
   16724:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16728:	strh	r2, [r3, #56]	; 0x38
   1672c:	b	16b0c <__assert_fail@plt+0x5d34>
   16730:	ldr	r3, [r4, #48]	; 0x30
   16734:	and	r3, r3, #32
   16738:	cmp	r3, #0
   1673c:	bne	16784 <__assert_fail@plt+0x59ac>
   16740:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16744:	ldrb	r3, [r3, #19]
   16748:	cmp	r3, #46	; 0x2e
   1674c:	bne	16784 <__assert_fail@plt+0x59ac>
   16750:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16754:	ldrb	r3, [r3, #20]
   16758:	cmp	r3, #0
   1675c:	beq	16af8 <__assert_fail@plt+0x5d20>
   16760:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16764:	ldrb	r3, [r3, #20]
   16768:	cmp	r3, #46	; 0x2e
   1676c:	bne	16784 <__assert_fail@plt+0x59ac>
   16770:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16774:	ldrb	r3, [r3, #21]
   16778:	cmp	r3, #0
   1677c:	bne	16784 <__assert_fail@plt+0x59ac>
   16780:	b	16af8 <__assert_fail@plt+0x5d20>
   16784:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16788:	add	r3, r3, #19
   1678c:	mov	r0, r3
   16790:	bl	10ca0 <strlen@plt>
   16794:	str	r0, [fp, #-72]	; 0xffffffb8
   16798:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1679c:	add	r3, r3, #19
   167a0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   167a4:	mov	r1, r3
   167a8:	mov	r0, r4
   167ac:	bl	170e8 <__assert_fail@plt+0x6310>
   167b0:	mov	r5, r0
   167b4:	cmp	r5, #0
   167b8:	beq	16808 <__assert_fail@plt+0x5a30>
   167bc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   167c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   167c4:	cmp	r2, r3
   167c8:	bcc	168c0 <__assert_fail@plt+0x5ae8>
   167cc:	ldr	r3, [r4, #24]
   167d0:	str	r3, [fp, #-76]	; 0xffffffb4
   167d4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   167d8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   167dc:	add	r3, r2, r3
   167e0:	add	r3, r3, #1
   167e4:	mov	r1, r3
   167e8:	mov	r0, r4
   167ec:	bl	17218 <__assert_fail@plt+0x6440>
   167f0:	mov	r3, r0
   167f4:	eor	r3, r3, #1
   167f8:	uxtb	r3, r3
   167fc:	cmp	r3, #0
   16800:	beq	16878 <__assert_fail@plt+0x5aa0>
   16804:	b	1680c <__assert_fail@plt+0x5a34>
   16808:	nop	{0}
   1680c:	bl	10cd0 <__errno_location@plt>
   16810:	mov	r3, r0
   16814:	ldr	r3, [r3]
   16818:	str	r3, [fp, #-88]	; 0xffffffa8
   1681c:	mov	r0, r5
   16820:	bl	1430c <__assert_fail@plt+0x3534>
   16824:	mov	r0, r7
   16828:	bl	171b8 <__assert_fail@plt+0x63e0>
   1682c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16830:	ldr	r3, [r3, #12]
   16834:	mov	r0, r3
   16838:	bl	10dc0 <closedir@plt>
   1683c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16840:	mov	r2, #0
   16844:	str	r2, [r3, #12]
   16848:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1684c:	mov	r2, #7
   16850:	strh	r2, [r3, #56]	; 0x38
   16854:	ldr	r3, [r4, #48]	; 0x30
   16858:	orr	r3, r3, #8192	; 0x2000
   1685c:	str	r3, [r4, #48]	; 0x30
   16860:	bl	10cd0 <__errno_location@plt>
   16864:	mov	r2, r0
   16868:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1686c:	str	r3, [r2]
   16870:	mov	r3, #0
   16874:	b	16d18 <__assert_fail@plt+0x5f40>
   16878:	ldr	r3, [r4, #24]
   1687c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16880:	cmp	r2, r3
   16884:	beq	168b0 <__assert_fail@plt+0x5ad8>
   16888:	mov	r3, #1
   1688c:	strb	r3, [fp, #-26]	; 0xffffffe6
   16890:	ldr	r3, [r4, #48]	; 0x30
   16894:	and	r3, r3, #4
   16898:	cmp	r3, #0
   1689c:	beq	168b0 <__assert_fail@plt+0x5ad8>
   168a0:	ldr	r2, [r4, #24]
   168a4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   168a8:	add	r3, r2, r3
   168ac:	str	r3, [fp, #-36]	; 0xffffffdc
   168b0:	ldr	r2, [r4, #36]	; 0x24
   168b4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   168b8:	sub	r3, r2, r3
   168bc:	str	r3, [fp, #-32]	; 0xffffffe0
   168c0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   168c4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   168c8:	add	r3, r2, r3
   168cc:	str	r3, [fp, #-80]	; 0xffffffb0
   168d0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   168d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   168d8:	cmp	r2, r3
   168dc:	bcs	1693c <__assert_fail@plt+0x5b64>
   168e0:	mov	r0, r5
   168e4:	bl	1430c <__assert_fail@plt+0x3534>
   168e8:	mov	r0, r7
   168ec:	bl	171b8 <__assert_fail@plt+0x63e0>
   168f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   168f4:	ldr	r3, [r3, #12]
   168f8:	mov	r0, r3
   168fc:	bl	10dc0 <closedir@plt>
   16900:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16904:	mov	r2, #0
   16908:	str	r2, [r3, #12]
   1690c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16910:	mov	r2, #7
   16914:	strh	r2, [r3, #56]	; 0x38
   16918:	ldr	r3, [r4, #48]	; 0x30
   1691c:	orr	r3, r3, #8192	; 0x2000
   16920:	str	r3, [r4, #48]	; 0x30
   16924:	bl	10cd0 <__errno_location@plt>
   16928:	mov	r2, r0
   1692c:	mov	r3, #36	; 0x24
   16930:	str	r3, [r2]
   16934:	mov	r3, #0
   16938:	b	16d18 <__assert_fail@plt+0x5f40>
   1693c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16940:	str	r3, [r5, #48]	; 0x30
   16944:	ldr	r3, [r4]
   16948:	str	r3, [r5, #4]
   1694c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16950:	str	r3, [r5, #40]	; 0x28
   16954:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16958:	ldrd	r2, [r3]
   1695c:	strd	r2, [r5, #160]	; 0xa0
   16960:	ldr	r3, [r4, #48]	; 0x30
   16964:	and	r3, r3, #4
   16968:	cmp	r3, #0
   1696c:	beq	16994 <__assert_fail@plt+0x5bbc>
   16970:	ldr	r3, [r5, #28]
   16974:	str	r3, [r5, #24]
   16978:	add	r1, r5, #168	; 0xa8
   1697c:	ldr	r3, [r5, #52]	; 0x34
   16980:	add	r3, r3, #1
   16984:	mov	r2, r3
   16988:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1698c:	bl	10bb0 <memmove@plt>
   16990:	b	1699c <__assert_fail@plt+0x5bc4>
   16994:	add	r3, r5, #168	; 0xa8
   16998:	str	r3, [r5, #24]
   1699c:	ldr	r3, [r4, #44]	; 0x2c
   169a0:	cmp	r3, #0
   169a4:	beq	169b8 <__assert_fail@plt+0x5be0>
   169a8:	ldr	r3, [r4, #48]	; 0x30
   169ac:	and	r3, r3, #1024	; 0x400
   169b0:	cmp	r3, #0
   169b4:	beq	16a78 <__assert_fail@plt+0x5ca0>
   169b8:	ldr	r3, [r4, #48]	; 0x30
   169bc:	and	r3, r3, #8
   169c0:	cmp	r3, #0
   169c4:	beq	16a10 <__assert_fail@plt+0x5c38>
   169c8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   169cc:	ldrb	r3, [r3, #18]
   169d0:	cmp	r3, #0
   169d4:	beq	16a10 <__assert_fail@plt+0x5c38>
   169d8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   169dc:	ldrb	r3, [r3, #18]
   169e0:	cmp	r3, #4
   169e4:	beq	16a10 <__assert_fail@plt+0x5c38>
   169e8:	ldr	r3, [r4, #48]	; 0x30
   169ec:	and	r3, r3, #16
   169f0:	cmp	r3, #0
   169f4:	bne	16a08 <__assert_fail@plt+0x5c30>
   169f8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   169fc:	ldrb	r3, [r3, #18]
   16a00:	cmp	r3, #10
   16a04:	beq	16a10 <__assert_fail@plt+0x5c38>
   16a08:	mov	r3, #1
   16a0c:	b	16a14 <__assert_fail@plt+0x5c3c>
   16a10:	mov	r3, #0
   16a14:	strb	r3, [fp, #-81]	; 0xffffffaf
   16a18:	ldrb	r3, [fp, #-81]	; 0xffffffaf
   16a1c:	and	r3, r3, #1
   16a20:	strb	r3, [fp, #-81]	; 0xffffffaf
   16a24:	mov	r3, #11
   16a28:	strh	r3, [r5, #56]	; 0x38
   16a2c:	add	r2, r5, #64	; 0x40
   16a30:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16a34:	ldrb	r3, [r3, #18]
   16a38:	mov	r1, r3
   16a3c:	mov	r0, r2
   16a40:	bl	16110 <__assert_fail@plt+0x5338>
   16a44:	ldrb	r3, [fp, #-81]	; 0xffffffaf
   16a48:	cmp	r3, #0
   16a4c:	movne	r3, #1
   16a50:	moveq	r3, #0
   16a54:	uxtb	r3, r3
   16a58:	eor	r3, r3, #1
   16a5c:	uxtb	r3, r3
   16a60:	and	r3, r3, #1
   16a64:	uxtb	r3, r3
   16a68:	mov	r1, r3
   16a6c:	mov	r0, r5
   16a70:	bl	148c0 <__assert_fail@plt+0x3ae8>
   16a74:	b	16a90 <__assert_fail@plt+0x5cb8>
   16a78:	mov	r2, #0
   16a7c:	mov	r1, r5
   16a80:	mov	r0, r4
   16a84:	bl	16d34 <__assert_fail@plt+0x5f5c>
   16a88:	mov	r3, r0
   16a8c:	strh	r3, [r5, #56]	; 0x38
   16a90:	mov	r3, #0
   16a94:	str	r3, [r5, #8]
   16a98:	cmp	r7, #0
   16a9c:	bne	16aac <__assert_fail@plt+0x5cd4>
   16aa0:	str	r5, [fp, #-24]	; 0xffffffe8
   16aa4:	ldr	r7, [fp, #-24]	; 0xffffffe8
   16aa8:	b	16ab8 <__assert_fail@plt+0x5ce0>
   16aac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16ab0:	str	r5, [r3, #8]
   16ab4:	str	r5, [fp, #-24]	; 0xffffffe8
   16ab8:	movw	r3, #10000	; 0x2710
   16abc:	cmp	r6, r3
   16ac0:	bne	16ae8 <__assert_fail@plt+0x5d10>
   16ac4:	ldr	r3, [r4, #44]	; 0x2c
   16ac8:	cmp	r3, #0
   16acc:	bne	16ae8 <__assert_fail@plt+0x5d10>
   16ad0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16ad4:	mov	r1, r3
   16ad8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16adc:	bl	15540 <__assert_fail@plt+0x4768>
   16ae0:	mov	r3, r0
   16ae4:	strb	r3, [fp, #-37]	; 0xffffffdb
   16ae8:	add	r6, r6, #1
   16aec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16af0:	cmp	r3, r6
   16af4:	bls	16b40 <__assert_fail@plt+0x5d68>
   16af8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16afc:	ldr	r3, [r3, #12]
   16b00:	cmp	r3, #0
   16b04:	bne	166ac <__assert_fail@plt+0x58d4>
   16b08:	b	16b10 <__assert_fail@plt+0x5d38>
   16b0c:	nop	{0}
   16b10:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16b14:	ldr	r3, [r3, #12]
   16b18:	cmp	r3, #0
   16b1c:	beq	16b48 <__assert_fail@plt+0x5d70>
   16b20:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16b24:	ldr	r3, [r3, #12]
   16b28:	mov	r0, r3
   16b2c:	bl	10dc0 <closedir@plt>
   16b30:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16b34:	mov	r2, #0
   16b38:	str	r2, [r3, #12]
   16b3c:	b	16b4c <__assert_fail@plt+0x5d74>
   16b40:	nop	{0}
   16b44:	b	16b4c <__assert_fail@plt+0x5d74>
   16b48:	nop	{0}
   16b4c:	ldrb	r3, [fp, #-26]	; 0xffffffe6
   16b50:	cmp	r3, #0
   16b54:	beq	16b64 <__assert_fail@plt+0x5d8c>
   16b58:	mov	r1, r7
   16b5c:	mov	r0, r4
   16b60:	bl	17310 <__assert_fail@plt+0x6538>
   16b64:	ldr	r3, [r4, #48]	; 0x30
   16b68:	and	r3, r3, #4
   16b6c:	cmp	r3, #0
   16b70:	beq	16ba4 <__assert_fail@plt+0x5dcc>
   16b74:	ldr	r3, [r4, #36]	; 0x24
   16b78:	ldr	r2, [fp, #-60]	; 0xffffffc4
   16b7c:	cmp	r2, r3
   16b80:	beq	16b8c <__assert_fail@plt+0x5db4>
   16b84:	cmp	r6, #0
   16b88:	bne	16b98 <__assert_fail@plt+0x5dc0>
   16b8c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16b90:	sub	r3, r3, #1
   16b94:	str	r3, [fp, #-36]	; 0xffffffdc
   16b98:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16b9c:	mov	r2, #0
   16ba0:	strb	r2, [r3]
   16ba4:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   16ba8:	eor	r3, r3, #1
   16bac:	uxtb	r3, r3
   16bb0:	cmp	r3, #0
   16bb4:	beq	16c68 <__assert_fail@plt+0x5e90>
   16bb8:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   16bbc:	cmp	r3, #0
   16bc0:	beq	16c68 <__assert_fail@plt+0x5e90>
   16bc4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16bc8:	cmp	r3, #1
   16bcc:	beq	16bd8 <__assert_fail@plt+0x5e00>
   16bd0:	cmp	r6, #0
   16bd4:	bne	16c68 <__assert_fail@plt+0x5e90>
   16bd8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16bdc:	ldr	r3, [r3, #48]	; 0x30
   16be0:	cmp	r3, #0
   16be4:	bne	16c08 <__assert_fail@plt+0x5e30>
   16be8:	mov	r0, r4
   16bec:	bl	149fc <__assert_fail@plt+0x3c24>
   16bf0:	mov	r3, r0
   16bf4:	cmp	r3, #0
   16bf8:	movne	r3, #1
   16bfc:	moveq	r3, #0
   16c00:	uxtb	r3, r3
   16c04:	b	16c38 <__assert_fail@plt+0x5e60>
   16c08:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16c0c:	ldr	r1, [r3, #4]
   16c10:	movw	r3, #48756	; 0xbe74
   16c14:	movt	r3, #1
   16c18:	mvn	r2, #0
   16c1c:	mov	r0, r4
   16c20:	bl	174c8 <__assert_fail@plt+0x66f0>
   16c24:	mov	r3, r0
   16c28:	cmp	r3, #0
   16c2c:	movne	r3, #1
   16c30:	moveq	r3, #0
   16c34:	uxtb	r3, r3
   16c38:	cmp	r3, #0
   16c3c:	beq	16c68 <__assert_fail@plt+0x5e90>
   16c40:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16c44:	mov	r2, #7
   16c48:	strh	r2, [r3, #56]	; 0x38
   16c4c:	ldr	r3, [r4, #48]	; 0x30
   16c50:	orr	r3, r3, #8192	; 0x2000
   16c54:	str	r3, [r4, #48]	; 0x30
   16c58:	mov	r0, r7
   16c5c:	bl	171b8 <__assert_fail@plt+0x63e0>
   16c60:	mov	r3, #0
   16c64:	b	16d18 <__assert_fail@plt+0x5f40>
   16c68:	cmp	r6, #0
   16c6c:	bne	16cb8 <__assert_fail@plt+0x5ee0>
   16c70:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16c74:	cmp	r3, #3
   16c78:	bne	16ca8 <__assert_fail@plt+0x5ed0>
   16c7c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16c80:	ldrh	r3, [r3, #56]	; 0x38
   16c84:	cmp	r3, #4
   16c88:	beq	16ca8 <__assert_fail@plt+0x5ed0>
   16c8c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16c90:	ldrh	r3, [r3, #56]	; 0x38
   16c94:	cmp	r3, #7
   16c98:	beq	16ca8 <__assert_fail@plt+0x5ed0>
   16c9c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16ca0:	mov	r2, #6
   16ca4:	strh	r2, [r3, #56]	; 0x38
   16ca8:	mov	r0, r7
   16cac:	bl	171b8 <__assert_fail@plt+0x63e0>
   16cb0:	mov	r3, #0
   16cb4:	b	16d18 <__assert_fail@plt+0x5f40>
   16cb8:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   16cbc:	cmp	r3, #0
   16cc0:	beq	16cec <__assert_fail@plt+0x5f14>
   16cc4:	movw	r3, #24716	; 0x608c
   16cc8:	movt	r3, #1
   16ccc:	str	r3, [r4, #44]	; 0x2c
   16cd0:	mov	r2, r6
   16cd4:	mov	r1, r7
   16cd8:	mov	r0, r4
   16cdc:	bl	16f84 <__assert_fail@plt+0x61ac>
   16ce0:	mov	r7, r0
   16ce4:	mov	r3, #0
   16ce8:	str	r3, [r4, #44]	; 0x2c
   16cec:	ldr	r3, [r4, #44]	; 0x2c
   16cf0:	cmp	r3, #0
   16cf4:	beq	16d14 <__assert_fail@plt+0x5f3c>
   16cf8:	cmp	r6, #1
   16cfc:	bls	16d14 <__assert_fail@plt+0x5f3c>
   16d00:	mov	r2, r6
   16d04:	mov	r1, r7
   16d08:	mov	r0, r4
   16d0c:	bl	16f84 <__assert_fail@plt+0x61ac>
   16d10:	mov	r7, r0
   16d14:	mov	r3, r7
   16d18:	mov	r0, r3
   16d1c:	sub	sp, fp, #20
   16d20:	ldrd	r4, [sp]
   16d24:	ldrd	r6, [sp, #8]
   16d28:	ldr	fp, [sp, #16]
   16d2c:	add	sp, sp, #20
   16d30:	pop	{pc}		; (ldr pc, [sp], #4)
   16d34:	str	r4, [sp, #-12]!
   16d38:	str	fp, [sp, #4]
   16d3c:	str	lr, [sp, #8]
   16d40:	add	fp, sp, #8
   16d44:	sub	sp, sp, #20
   16d48:	str	r0, [fp, #-24]	; 0xffffffe8
   16d4c:	mov	r4, r1
   16d50:	mov	r3, r2
   16d54:	strb	r3, [fp, #-25]	; 0xffffffe7
   16d58:	add	r3, r4, #64	; 0x40
   16d5c:	str	r3, [fp, #-16]
   16d60:	ldr	r3, [r4, #48]	; 0x30
   16d64:	cmp	r3, #0
   16d68:	bne	16d88 <__assert_fail@plt+0x5fb0>
   16d6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16d70:	ldr	r3, [r3, #48]	; 0x30
   16d74:	and	r3, r3, #1
   16d78:	cmp	r3, #0
   16d7c:	beq	16d88 <__assert_fail@plt+0x5fb0>
   16d80:	mov	r3, #1
   16d84:	strb	r3, [fp, #-25]	; 0xffffffe7
   16d88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16d8c:	ldr	r3, [r3, #48]	; 0x30
   16d90:	and	r3, r3, #2
   16d94:	cmp	r3, #0
   16d98:	bne	16da8 <__assert_fail@plt+0x5fd0>
   16d9c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   16da0:	cmp	r3, #0
   16da4:	beq	16e20 <__assert_fail@plt+0x6048>
   16da8:	ldr	r3, [r4, #24]
   16dac:	ldr	r1, [fp, #-16]
   16db0:	mov	r0, r3
   16db4:	bl	1bcb0 <__assert_fail@plt+0xaed8>
   16db8:	mov	r3, r0
   16dbc:	cmp	r3, #0
   16dc0:	beq	16e6c <__assert_fail@plt+0x6094>
   16dc4:	bl	10cd0 <__errno_location@plt>
   16dc8:	mov	r3, r0
   16dcc:	ldr	r3, [r3]
   16dd0:	cmp	r3, #2
   16dd4:	bne	16e0c <__assert_fail@plt+0x6034>
   16dd8:	ldr	r3, [r4, #24]
   16ddc:	ldr	r1, [fp, #-16]
   16de0:	mov	r0, r3
   16de4:	bl	1bcd0 <__assert_fail@plt+0xaef8>
   16de8:	mov	r3, r0
   16dec:	cmp	r3, #0
   16df0:	bne	16e0c <__assert_fail@plt+0x6034>
   16df4:	bl	10cd0 <__errno_location@plt>
   16df8:	mov	r2, r0
   16dfc:	mov	r3, #0
   16e00:	str	r3, [r2]
   16e04:	mov	r3, #13
   16e08:	b	16f10 <__assert_fail@plt+0x6138>
   16e0c:	bl	10cd0 <__errno_location@plt>
   16e10:	mov	r3, r0
   16e14:	ldr	r3, [r3]
   16e18:	str	r3, [r4, #32]
   16e1c:	b	16e54 <__assert_fail@plt+0x607c>
   16e20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16e24:	ldr	r0, [r3, #32]
   16e28:	ldr	r1, [r4, #24]
   16e2c:	mov	r3, #256	; 0x100
   16e30:	ldr	r2, [fp, #-16]
   16e34:	bl	1bce0 <__assert_fail@plt+0xaf08>
   16e38:	mov	r3, r0
   16e3c:	cmp	r3, #0
   16e40:	beq	16e6c <__assert_fail@plt+0x6094>
   16e44:	bl	10cd0 <__errno_location@plt>
   16e48:	mov	r3, r0
   16e4c:	ldr	r3, [r3]
   16e50:	str	r3, [r4, #32]
   16e54:	mov	r2, #104	; 0x68
   16e58:	mov	r1, #0
   16e5c:	ldr	r0, [fp, #-16]
   16e60:	bl	10ce8 <memset@plt>
   16e64:	mov	r3, #10
   16e68:	b	16f10 <__assert_fail@plt+0x6138>
   16e6c:	ldr	r3, [fp, #-16]
   16e70:	ldr	r3, [r3, #16]
   16e74:	and	r3, r3, #61440	; 0xf000
   16e78:	cmp	r3, #16384	; 0x4000
   16e7c:	bne	16ed4 <__assert_fail@plt+0x60fc>
   16e80:	ldrb	r3, [r4, #168]	; 0xa8
   16e84:	cmp	r3, #46	; 0x2e
   16e88:	bne	16ecc <__assert_fail@plt+0x60f4>
   16e8c:	ldrb	r3, [r4, #169]	; 0xa9
   16e90:	cmp	r3, #0
   16e94:	beq	16eb0 <__assert_fail@plt+0x60d8>
   16e98:	ldrb	r3, [r4, #169]	; 0xa9
   16e9c:	cmp	r3, #46	; 0x2e
   16ea0:	bne	16ecc <__assert_fail@plt+0x60f4>
   16ea4:	ldrb	r3, [r4, #170]	; 0xaa
   16ea8:	cmp	r3, #0
   16eac:	bne	16ecc <__assert_fail@plt+0x60f4>
   16eb0:	ldr	r3, [r4, #48]	; 0x30
   16eb4:	cmp	r3, #0
   16eb8:	bne	16ec4 <__assert_fail@plt+0x60ec>
   16ebc:	mov	r3, #1
   16ec0:	b	16f10 <__assert_fail@plt+0x6138>
   16ec4:	mov	r3, #5
   16ec8:	b	16f10 <__assert_fail@plt+0x6138>
   16ecc:	mov	r3, #1
   16ed0:	b	16f10 <__assert_fail@plt+0x6138>
   16ed4:	ldr	r3, [fp, #-16]
   16ed8:	ldr	r3, [r3, #16]
   16edc:	and	r3, r3, #61440	; 0xf000
   16ee0:	cmp	r3, #40960	; 0xa000
   16ee4:	bne	16ef0 <__assert_fail@plt+0x6118>
   16ee8:	mov	r3, #12
   16eec:	b	16f10 <__assert_fail@plt+0x6138>
   16ef0:	ldr	r3, [fp, #-16]
   16ef4:	ldr	r3, [r3, #16]
   16ef8:	and	r3, r3, #61440	; 0xf000
   16efc:	cmp	r3, #32768	; 0x8000
   16f00:	bne	16f0c <__assert_fail@plt+0x6134>
   16f04:	mov	r3, #8
   16f08:	b	16f10 <__assert_fail@plt+0x6138>
   16f0c:	mov	r3, #3
   16f10:	mov	r0, r3
   16f14:	sub	sp, fp, #8
   16f18:	ldr	r4, [sp]
   16f1c:	ldr	fp, [sp, #4]
   16f20:	add	sp, sp, #8
   16f24:	pop	{pc}		; (ldr pc, [sp], #4)
   16f28:	str	fp, [sp, #-8]!
   16f2c:	str	lr, [sp, #4]
   16f30:	add	fp, sp, #4
   16f34:	sub	sp, sp, #16
   16f38:	str	r0, [fp, #-16]
   16f3c:	str	r1, [fp, #-20]	; 0xffffffec
   16f40:	ldr	r3, [fp, #-16]
   16f44:	str	r3, [fp, #-8]
   16f48:	ldr	r3, [fp, #-20]	; 0xffffffec
   16f4c:	str	r3, [fp, #-12]
   16f50:	ldr	r3, [fp, #-8]
   16f54:	ldr	r3, [r3]
   16f58:	ldr	r3, [r3, #44]	; 0x2c
   16f5c:	ldr	r3, [r3, #44]	; 0x2c
   16f60:	ldr	r1, [fp, #-12]
   16f64:	ldr	r0, [fp, #-8]
   16f68:	blx	r3
   16f6c:	mov	r3, r0
   16f70:	mov	r0, r3
   16f74:	sub	sp, fp, #4
   16f78:	ldr	fp, [sp]
   16f7c:	add	sp, sp, #4
   16f80:	pop	{pc}		; (ldr pc, [sp], #4)
   16f84:	strd	r4, [sp, #-20]!	; 0xffffffec
   16f88:	str	r6, [sp, #8]
   16f8c:	str	fp, [sp, #12]
   16f90:	str	lr, [sp, #16]
   16f94:	add	fp, sp, #16
   16f98:	sub	sp, sp, #28
   16f9c:	str	r0, [fp, #-40]	; 0xffffffd8
   16fa0:	str	r1, [fp, #-44]	; 0xffffffd4
   16fa4:	mov	r5, r2
   16fa8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16fac:	ldr	r3, [r3, #44]	; 0x2c
   16fb0:	str	r3, [fp, #-24]	; 0xffffffe8
   16fb4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16fb8:	ldr	r3, [r3, #40]	; 0x28
   16fbc:	cmp	r5, r3
   16fc0:	bls	1704c <__assert_fail@plt+0x6274>
   16fc4:	add	r2, r5, #40	; 0x28
   16fc8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16fcc:	str	r2, [r3, #40]	; 0x28
   16fd0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16fd4:	ldr	r3, [r3, #40]	; 0x28
   16fd8:	cmn	r3, #-1073741823	; 0xc0000001
   16fdc:	bhi	17010 <__assert_fail@plt+0x6238>
   16fe0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16fe4:	ldr	r2, [r3, #8]
   16fe8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16fec:	ldr	r3, [r3, #40]	; 0x28
   16ff0:	lsl	r3, r3, #2
   16ff4:	mov	r1, r3
   16ff8:	mov	r0, r2
   16ffc:	bl	1af84 <__assert_fail@plt+0xa1ac>
   17000:	str	r0, [fp, #-28]	; 0xffffffe4
   17004:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17008:	cmp	r3, #0
   1700c:	bne	17040 <__assert_fail@plt+0x6268>
   17010:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17014:	ldr	r3, [r3, #8]
   17018:	mov	r0, r3
   1701c:	bl	1430c <__assert_fail@plt+0x3534>
   17020:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17024:	mov	r2, #0
   17028:	str	r2, [r3, #8]
   1702c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17030:	mov	r2, #0
   17034:	str	r2, [r3, #40]	; 0x28
   17038:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1703c:	b	170cc <__assert_fail@plt+0x62f4>
   17040:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17044:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17048:	str	r2, [r3, #8]
   1704c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17050:	ldr	r4, [r3, #8]
   17054:	ldr	r6, [fp, #-44]	; 0xffffffd4
   17058:	b	1706c <__assert_fail@plt+0x6294>
   1705c:	mov	r3, r4
   17060:	add	r4, r3, #4
   17064:	str	r6, [r3]
   17068:	ldr	r6, [r6, #8]
   1706c:	cmp	r6, #0
   17070:	bne	1705c <__assert_fail@plt+0x6284>
   17074:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17078:	ldr	r0, [r3, #8]
   1707c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17080:	mov	r2, #4
   17084:	mov	r1, r5
   17088:	bl	10d6c <qsort@plt>
   1708c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17090:	ldr	r4, [r3, #8]
   17094:	ldr	r3, [r4]
   17098:	str	r3, [fp, #-44]	; 0xffffffd4
   1709c:	b	170b0 <__assert_fail@plt+0x62d8>
   170a0:	ldr	r3, [r4]
   170a4:	ldr	r2, [r4, #4]
   170a8:	str	r2, [r3, #8]
   170ac:	add	r4, r4, #4
   170b0:	sub	r5, r5, #1
   170b4:	cmp	r5, #0
   170b8:	bne	170a0 <__assert_fail@plt+0x62c8>
   170bc:	ldr	r3, [r4]
   170c0:	mov	r2, #0
   170c4:	str	r2, [r3, #8]
   170c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   170cc:	mov	r0, r3
   170d0:	sub	sp, fp, #16
   170d4:	ldrd	r4, [sp]
   170d8:	ldr	r6, [sp, #8]
   170dc:	ldr	fp, [sp, #12]
   170e0:	add	sp, sp, #16
   170e4:	pop	{pc}		; (ldr pc, [sp], #4)
   170e8:	strd	r4, [sp, #-16]!
   170ec:	str	fp, [sp, #8]
   170f0:	str	lr, [sp, #12]
   170f4:	add	fp, sp, #12
   170f8:	sub	sp, sp, #16
   170fc:	str	r0, [fp, #-24]	; 0xffffffe8
   17100:	str	r1, [fp, #-28]	; 0xffffffe4
   17104:	mov	r5, r2
   17108:	add	r3, r5, #176	; 0xb0
   1710c:	bic	r3, r3, #7
   17110:	str	r3, [fp, #-16]
   17114:	ldr	r0, [fp, #-16]
   17118:	bl	1aef4 <__assert_fail@plt+0xa11c>
   1711c:	mov	r3, r0
   17120:	mov	r4, r3
   17124:	cmp	r4, #0
   17128:	bne	17134 <__assert_fail@plt+0x635c>
   1712c:	mov	r3, #0
   17130:	b	171a0 <__assert_fail@plt+0x63c8>
   17134:	add	r3, r4, #168	; 0xa8
   17138:	mov	r2, r5
   1713c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17140:	mov	r0, r3
   17144:	bl	10bc8 <memcpy@plt>
   17148:	add	r3, r4, r5
   1714c:	mov	r2, #0
   17150:	strb	r2, [r3, #168]	; 0xa8
   17154:	str	r5, [r4, #52]	; 0x34
   17158:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1715c:	str	r3, [r4, #44]	; 0x2c
   17160:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17164:	ldr	r3, [r3, #24]
   17168:	str	r3, [r4, #28]
   1716c:	mov	r3, #0
   17170:	str	r3, [r4, #32]
   17174:	mov	r3, #0
   17178:	str	r3, [r4, #12]
   1717c:	mov	r3, #0
   17180:	strh	r3, [r4, #58]	; 0x3a
   17184:	mov	r3, #3
   17188:	strh	r3, [r4, #60]	; 0x3c
   1718c:	mov	r3, #0
   17190:	str	r3, [r4, #16]
   17194:	mov	r3, #0
   17198:	str	r3, [r4, #20]
   1719c:	mov	r3, r4
   171a0:	mov	r0, r3
   171a4:	sub	sp, fp, #12
   171a8:	ldrd	r4, [sp]
   171ac:	ldr	fp, [sp, #8]
   171b0:	add	sp, sp, #12
   171b4:	pop	{pc}		; (ldr pc, [sp], #4)
   171b8:	strd	r4, [sp, #-16]!
   171bc:	str	fp, [sp, #8]
   171c0:	str	lr, [sp, #12]
   171c4:	add	fp, sp, #12
   171c8:	mov	r5, r0
   171cc:	b	171f4 <__assert_fail@plt+0x641c>
   171d0:	ldr	r5, [r5, #8]
   171d4:	ldr	r3, [r4, #12]
   171d8:	cmp	r3, #0
   171dc:	beq	171ec <__assert_fail@plt+0x6414>
   171e0:	ldr	r3, [r4, #12]
   171e4:	mov	r0, r3
   171e8:	bl	10dc0 <closedir@plt>
   171ec:	mov	r0, r4
   171f0:	bl	1430c <__assert_fail@plt+0x3534>
   171f4:	mov	r4, r5
   171f8:	cmp	r4, #0
   171fc:	bne	171d0 <__assert_fail@plt+0x63f8>
   17200:	nop	{0}
   17204:	sub	sp, fp, #12
   17208:	ldrd	r4, [sp]
   1720c:	ldr	fp, [sp, #8]
   17210:	add	sp, sp, #12
   17214:	pop	{pc}		; (ldr pc, [sp], #4)
   17218:	str	fp, [sp, #-8]!
   1721c:	str	lr, [sp, #4]
   17220:	add	fp, sp, #4
   17224:	sub	sp, sp, #16
   17228:	str	r0, [fp, #-16]
   1722c:	str	r1, [fp, #-20]	; 0xffffffec
   17230:	ldr	r3, [fp, #-16]
   17234:	ldr	r2, [r3, #36]	; 0x24
   17238:	ldr	r3, [fp, #-20]	; 0xffffffec
   1723c:	add	r3, r2, r3
   17240:	add	r3, r3, #256	; 0x100
   17244:	str	r3, [fp, #-8]
   17248:	ldr	r3, [fp, #-16]
   1724c:	ldr	r3, [r3, #36]	; 0x24
   17250:	ldr	r2, [fp, #-8]
   17254:	cmp	r2, r3
   17258:	bcs	17290 <__assert_fail@plt+0x64b8>
   1725c:	ldr	r3, [fp, #-16]
   17260:	ldr	r3, [r3, #24]
   17264:	mov	r0, r3
   17268:	bl	1430c <__assert_fail@plt+0x3534>
   1726c:	ldr	r3, [fp, #-16]
   17270:	mov	r2, #0
   17274:	str	r2, [r3, #24]
   17278:	bl	10cd0 <__errno_location@plt>
   1727c:	mov	r2, r0
   17280:	mov	r3, #36	; 0x24
   17284:	str	r3, [r2]
   17288:	mov	r3, #0
   1728c:	b	172fc <__assert_fail@plt+0x6524>
   17290:	ldr	r3, [fp, #-16]
   17294:	ldr	r2, [fp, #-8]
   17298:	str	r2, [r3, #36]	; 0x24
   1729c:	ldr	r3, [fp, #-16]
   172a0:	ldr	r2, [r3, #24]
   172a4:	ldr	r3, [fp, #-16]
   172a8:	ldr	r3, [r3, #36]	; 0x24
   172ac:	mov	r1, r3
   172b0:	mov	r0, r2
   172b4:	bl	1af84 <__assert_fail@plt+0xa1ac>
   172b8:	str	r0, [fp, #-12]
   172bc:	ldr	r3, [fp, #-12]
   172c0:	cmp	r3, #0
   172c4:	bne	172ec <__assert_fail@plt+0x6514>
   172c8:	ldr	r3, [fp, #-16]
   172cc:	ldr	r3, [r3, #24]
   172d0:	mov	r0, r3
   172d4:	bl	1430c <__assert_fail@plt+0x3534>
   172d8:	ldr	r3, [fp, #-16]
   172dc:	mov	r2, #0
   172e0:	str	r2, [r3, #24]
   172e4:	mov	r3, #0
   172e8:	b	172fc <__assert_fail@plt+0x6524>
   172ec:	ldr	r3, [fp, #-16]
   172f0:	ldr	r2, [fp, #-12]
   172f4:	str	r2, [r3, #24]
   172f8:	mov	r3, #1
   172fc:	mov	r0, r3
   17300:	sub	sp, fp, #4
   17304:	ldr	fp, [sp]
   17308:	add	sp, sp, #4
   1730c:	pop	{pc}		; (ldr pc, [sp], #4)
   17310:	push	{fp}		; (str fp, [sp, #-4]!)
   17314:	add	fp, sp, #0
   17318:	sub	sp, sp, #20
   1731c:	str	r0, [fp, #-16]
   17320:	str	r1, [fp, #-20]	; 0xffffffec
   17324:	ldr	r3, [fp, #-16]
   17328:	ldr	r3, [r3, #24]
   1732c:	str	r3, [fp, #-12]
   17330:	ldr	r3, [fp, #-16]
   17334:	ldr	r3, [r3, #4]
   17338:	str	r3, [fp, #-8]
   1733c:	b	17398 <__assert_fail@plt+0x65c0>
   17340:	ldr	r3, [fp, #-8]
   17344:	ldr	r2, [r3, #24]
   17348:	ldr	r3, [fp, #-8]
   1734c:	add	r3, r3, #168	; 0xa8
   17350:	cmp	r2, r3
   17354:	beq	17380 <__assert_fail@plt+0x65a8>
   17358:	ldr	r3, [fp, #-8]
   1735c:	ldr	r2, [r3, #24]
   17360:	ldr	r3, [fp, #-8]
   17364:	ldr	r3, [r3, #28]
   17368:	sub	r3, r2, r3
   1736c:	mov	r2, r3
   17370:	ldr	r3, [fp, #-12]
   17374:	add	r2, r3, r2
   17378:	ldr	r3, [fp, #-8]
   1737c:	str	r2, [r3, #24]
   17380:	ldr	r3, [fp, #-8]
   17384:	ldr	r2, [fp, #-12]
   17388:	str	r2, [r3, #28]
   1738c:	ldr	r3, [fp, #-8]
   17390:	ldr	r3, [r3, #8]
   17394:	str	r3, [fp, #-8]
   17398:	ldr	r3, [fp, #-8]
   1739c:	cmp	r3, #0
   173a0:	bne	17340 <__assert_fail@plt+0x6568>
   173a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   173a8:	str	r3, [fp, #-8]
   173ac:	b	17424 <__assert_fail@plt+0x664c>
   173b0:	ldr	r3, [fp, #-8]
   173b4:	ldr	r2, [r3, #24]
   173b8:	ldr	r3, [fp, #-8]
   173bc:	add	r3, r3, #168	; 0xa8
   173c0:	cmp	r2, r3
   173c4:	beq	173f0 <__assert_fail@plt+0x6618>
   173c8:	ldr	r3, [fp, #-8]
   173cc:	ldr	r2, [r3, #24]
   173d0:	ldr	r3, [fp, #-8]
   173d4:	ldr	r3, [r3, #28]
   173d8:	sub	r3, r2, r3
   173dc:	mov	r2, r3
   173e0:	ldr	r3, [fp, #-12]
   173e4:	add	r2, r3, r2
   173e8:	ldr	r3, [fp, #-8]
   173ec:	str	r2, [r3, #24]
   173f0:	ldr	r3, [fp, #-8]
   173f4:	ldr	r2, [fp, #-12]
   173f8:	str	r2, [r3, #28]
   173fc:	ldr	r3, [fp, #-8]
   17400:	ldr	r3, [r3, #8]
   17404:	cmp	r3, #0
   17408:	beq	17418 <__assert_fail@plt+0x6640>
   1740c:	ldr	r3, [fp, #-8]
   17410:	ldr	r3, [r3, #8]
   17414:	b	17420 <__assert_fail@plt+0x6648>
   17418:	ldr	r3, [fp, #-8]
   1741c:	ldr	r3, [r3, #4]
   17420:	str	r3, [fp, #-8]
   17424:	ldr	r3, [fp, #-8]
   17428:	ldr	r3, [r3, #48]	; 0x30
   1742c:	cmp	r3, #0
   17430:	bge	173b0 <__assert_fail@plt+0x65d8>
   17434:	nop	{0}
   17438:	add	sp, fp, #0
   1743c:	pop	{fp}		; (ldr fp, [sp], #4)
   17440:	bx	lr
   17444:	str	fp, [sp, #-8]!
   17448:	str	lr, [sp, #4]
   1744c:	add	fp, sp, #4
   17450:	sub	sp, sp, #16
   17454:	str	r0, [fp, #-16]
   17458:	mov	r3, #0
   1745c:	str	r3, [fp, #-8]
   17460:	b	1749c <__assert_fail@plt+0x66c4>
   17464:	ldr	r3, [fp, #-16]
   17468:	ldr	r3, [r3]
   1746c:	mov	r0, r3
   17470:	bl	10ca0 <strlen@plt>
   17474:	str	r0, [fp, #-12]
   17478:	ldr	r2, [fp, #-12]
   1747c:	ldr	r3, [fp, #-8]
   17480:	cmp	r2, r3
   17484:	bls	17490 <__assert_fail@plt+0x66b8>
   17488:	ldr	r3, [fp, #-12]
   1748c:	str	r3, [fp, #-8]
   17490:	ldr	r3, [fp, #-16]
   17494:	add	r3, r3, #4
   17498:	str	r3, [fp, #-16]
   1749c:	ldr	r3, [fp, #-16]
   174a0:	ldr	r3, [r3]
   174a4:	cmp	r3, #0
   174a8:	bne	17464 <__assert_fail@plt+0x668c>
   174ac:	ldr	r3, [fp, #-8]
   174b0:	add	r3, r3, #1
   174b4:	mov	r0, r3
   174b8:	sub	sp, fp, #4
   174bc:	ldr	fp, [sp]
   174c0:	add	sp, sp, #4
   174c4:	pop	{pc}		; (ldr pc, [sp], #4)
   174c8:	str	fp, [sp, #-8]!
   174cc:	str	lr, [sp, #4]
   174d0:	add	fp, sp, #4
   174d4:	sub	sp, sp, #144	; 0x90
   174d8:	str	r0, [fp, #-136]	; 0xffffff78
   174dc:	str	r1, [fp, #-140]	; 0xffffff74
   174e0:	str	r2, [fp, #-144]	; 0xffffff70
   174e4:	str	r3, [fp, #-148]	; 0xffffff6c
   174e8:	ldr	r3, [fp, #-148]	; 0xffffff6c
   174ec:	cmp	r3, #0
   174f0:	beq	17518 <__assert_fail@plt+0x6740>
   174f4:	movw	r1, #48756	; 0xbe74
   174f8:	movt	r1, #1
   174fc:	ldr	r0, [fp, #-148]	; 0xffffff6c
   17500:	bl	10b80 <strcmp@plt>
   17504:	mov	r3, r0
   17508:	cmp	r3, #0
   1750c:	bne	17518 <__assert_fail@plt+0x6740>
   17510:	mov	r3, #1
   17514:	b	1751c <__assert_fail@plt+0x6744>
   17518:	mov	r3, #0
   1751c:	strb	r3, [fp, #-13]
   17520:	ldrb	r3, [fp, #-13]
   17524:	and	r3, r3, #1
   17528:	strb	r3, [fp, #-13]
   1752c:	ldr	r3, [fp, #-136]	; 0xffffff78
   17530:	ldr	r3, [r3, #48]	; 0x30
   17534:	and	r3, r3, #4
   17538:	cmp	r3, #0
   1753c:	beq	17570 <__assert_fail@plt+0x6798>
   17540:	ldr	r3, [fp, #-136]	; 0xffffff78
   17544:	ldr	r3, [r3, #48]	; 0x30
   17548:	and	r3, r3, #512	; 0x200
   1754c:	cmp	r3, #0
   17550:	beq	17568 <__assert_fail@plt+0x6790>
   17554:	ldr	r3, [fp, #-144]	; 0xffffff70
   17558:	cmp	r3, #0
   1755c:	blt	17568 <__assert_fail@plt+0x6790>
   17560:	ldr	r0, [fp, #-144]	; 0xffffff70
   17564:	bl	10da8 <close@plt>
   17568:	mov	r3, #0
   1756c:	b	17770 <__assert_fail@plt+0x6998>
   17570:	ldr	r3, [fp, #-144]	; 0xffffff70
   17574:	cmp	r3, #0
   17578:	bge	175f0 <__assert_fail@plt+0x6818>
   1757c:	ldrb	r3, [fp, #-13]
   17580:	cmp	r3, #0
   17584:	beq	175f0 <__assert_fail@plt+0x6818>
   17588:	ldr	r3, [fp, #-136]	; 0xffffff78
   1758c:	ldr	r3, [r3, #48]	; 0x30
   17590:	and	r3, r3, #512	; 0x200
   17594:	cmp	r3, #0
   17598:	beq	175f0 <__assert_fail@plt+0x6818>
   1759c:	ldr	r3, [fp, #-136]	; 0xffffff78
   175a0:	add	r3, r3, #60	; 0x3c
   175a4:	mov	r0, r3
   175a8:	bl	1a9b4 <__assert_fail@plt+0x9bdc>
   175ac:	mov	r3, r0
   175b0:	eor	r3, r3, #1
   175b4:	uxtb	r3, r3
   175b8:	cmp	r3, #0
   175bc:	beq	175f0 <__assert_fail@plt+0x6818>
   175c0:	ldr	r3, [fp, #-136]	; 0xffffff78
   175c4:	add	r3, r3, #60	; 0x3c
   175c8:	mov	r0, r3
   175cc:	bl	1aa9c <__assert_fail@plt+0x9cc4>
   175d0:	str	r0, [fp, #-20]	; 0xffffffec
   175d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   175d8:	cmp	r3, #0
   175dc:	blt	175f0 <__assert_fail@plt+0x6818>
   175e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   175e4:	str	r3, [fp, #-144]	; 0xffffff70
   175e8:	mov	r3, #0
   175ec:	str	r3, [fp, #-148]	; 0xffffff6c
   175f0:	ldr	r3, [fp, #-144]	; 0xffffff70
   175f4:	str	r3, [fp, #-12]
   175f8:	ldr	r3, [fp, #-144]	; 0xffffff70
   175fc:	cmp	r3, #0
   17600:	bge	17628 <__assert_fail@plt+0x6850>
   17604:	ldr	r1, [fp, #-148]	; 0xffffff6c
   17608:	ldr	r0, [fp, #-136]	; 0xffffff78
   1760c:	bl	14ae0 <__assert_fail@plt+0x3d08>
   17610:	str	r0, [fp, #-12]
   17614:	ldr	r3, [fp, #-12]
   17618:	cmp	r3, #0
   1761c:	bge	17628 <__assert_fail@plt+0x6850>
   17620:	mvn	r3, #0
   17624:	b	17770 <__assert_fail@plt+0x6998>
   17628:	ldr	r3, [fp, #-136]	; 0xffffff78
   1762c:	ldr	r3, [r3, #48]	; 0x30
   17630:	and	r3, r3, #2
   17634:	cmp	r3, #0
   17638:	bne	17664 <__assert_fail@plt+0x688c>
   1763c:	ldr	r3, [fp, #-148]	; 0xffffff6c
   17640:	cmp	r3, #0
   17644:	beq	176dc <__assert_fail@plt+0x6904>
   17648:	movw	r1, #48756	; 0xbe74
   1764c:	movt	r1, #1
   17650:	ldr	r0, [fp, #-148]	; 0xffffff6c
   17654:	bl	10b80 <strcmp@plt>
   17658:	mov	r3, r0
   1765c:	cmp	r3, #0
   17660:	bne	176dc <__assert_fail@plt+0x6904>
   17664:	sub	r3, fp, #132	; 0x84
   17668:	mov	r1, r3
   1766c:	ldr	r0, [fp, #-12]
   17670:	bl	1bcc0 <__assert_fail@plt+0xaee8>
   17674:	mov	r3, r0
   17678:	cmp	r3, #0
   1767c:	beq	1768c <__assert_fail@plt+0x68b4>
   17680:	mvn	r3, #0
   17684:	str	r3, [fp, #-8]
   17688:	b	17738 <__assert_fail@plt+0x6960>
   1768c:	ldr	r3, [fp, #-140]	; 0xffffff74
   17690:	ldrd	r0, [r3, #64]	; 0x40
   17694:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   17698:	cmp	r1, r3
   1769c:	cmpeq	r0, r2
   176a0:	bne	176bc <__assert_fail@plt+0x68e4>
   176a4:	ldr	r3, [fp, #-140]	; 0xffffff74
   176a8:	ldrd	r0, [r3, #160]	; 0xa0
   176ac:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   176b0:	cmp	r1, r3
   176b4:	cmpeq	r0, r2
   176b8:	beq	176dc <__assert_fail@plt+0x6904>
   176bc:	bl	10cd0 <__errno_location@plt>
   176c0:	mov	r2, r0
   176c4:	mov	r3, #2
   176c8:	str	r3, [r2]
   176cc:	mvn	r3, #0
   176d0:	str	r3, [fp, #-8]
   176d4:	nop	{0}
   176d8:	b	17738 <__assert_fail@plt+0x6960>
   176dc:	ldr	r3, [fp, #-136]	; 0xffffff78
   176e0:	ldr	r3, [r3, #48]	; 0x30
   176e4:	and	r3, r3, #512	; 0x200
   176e8:	cmp	r3, #0
   176ec:	beq	1772c <__assert_fail@plt+0x6954>
   176f0:	ldrb	r3, [fp, #-13]
   176f4:	cmp	r3, #0
   176f8:	movne	r3, #1
   176fc:	moveq	r3, #0
   17700:	uxtb	r3, r3
   17704:	eor	r3, r3, #1
   17708:	uxtb	r3, r3
   1770c:	and	r3, r3, #1
   17710:	uxtb	r3, r3
   17714:	mov	r2, r3
   17718:	ldr	r1, [fp, #-12]
   1771c:	ldr	r0, [fp, #-136]	; 0xffffff78
   17720:	bl	1492c <__assert_fail@plt+0x3b54>
   17724:	mov	r3, #0
   17728:	b	17770 <__assert_fail@plt+0x6998>
   1772c:	ldr	r0, [fp, #-12]
   17730:	bl	10d60 <fchdir@plt>
   17734:	str	r0, [fp, #-8]
   17738:	ldr	r3, [fp, #-144]	; 0xffffff70
   1773c:	cmp	r3, #0
   17740:	bge	1776c <__assert_fail@plt+0x6994>
   17744:	bl	10cd0 <__errno_location@plt>
   17748:	mov	r3, r0
   1774c:	ldr	r3, [r3]
   17750:	str	r3, [fp, #-24]	; 0xffffffe8
   17754:	ldr	r0, [fp, #-12]
   17758:	bl	10da8 <close@plt>
   1775c:	bl	10cd0 <__errno_location@plt>
   17760:	mov	r2, r0
   17764:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17768:	str	r3, [r2]
   1776c:	ldr	r3, [fp, #-8]
   17770:	mov	r0, r3
   17774:	sub	sp, fp, #4
   17778:	ldr	fp, [sp]
   1777c:	add	sp, sp, #4
   17780:	pop	{pc}		; (ldr pc, [sp], #4)
   17784:	push	{fp}		; (str fp, [sp, #-4]!)
   17788:	add	fp, sp, #0
   1778c:	sub	sp, sp, #44	; 0x2c
   17790:	str	r0, [fp, #-40]	; 0xffffffd8
   17794:	str	r1, [fp, #-44]	; 0xffffffd4
   17798:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1779c:	ldr	r3, [r3, #28]
   177a0:	str	r3, [fp, #-8]
   177a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   177a8:	ldr	r3, [r3, #32]
   177ac:	str	r3, [fp, #-24]	; 0xffffffe8
   177b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   177b4:	ldr	r3, [r3]
   177b8:	str	r3, [fp, #-12]
   177bc:	b	17984 <__assert_fail@plt+0x6bac>
   177c0:	ldr	r2, [fp, #-12]
   177c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   177c8:	sub	r2, r2, r3
   177cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   177d0:	ldr	r3, [fp, #-8]
   177d4:	sub	r3, r1, r3
   177d8:	cmp	r2, r3
   177dc:	ble	178c4 <__assert_fail@plt+0x6aec>
   177e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   177e4:	ldr	r3, [fp, #-8]
   177e8:	sub	r3, r2, r3
   177ec:	str	r3, [fp, #-28]	; 0xffffffe4
   177f0:	mov	r3, #0
   177f4:	str	r3, [fp, #-16]
   177f8:	b	178a0 <__assert_fail@plt+0x6ac8>
   177fc:	ldr	r2, [fp, #-8]
   17800:	ldr	r3, [fp, #-16]
   17804:	add	r3, r2, r3
   17808:	lsl	r3, r3, #2
   1780c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17810:	add	r3, r2, r3
   17814:	ldr	r3, [r3]
   17818:	str	r3, [fp, #-32]	; 0xffffffe0
   1781c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17820:	ldr	r3, [fp, #-8]
   17824:	sub	r3, r2, r3
   17828:	ldr	r2, [fp, #-12]
   1782c:	sub	r2, r2, r3
   17830:	ldr	r3, [fp, #-16]
   17834:	add	r3, r2, r3
   17838:	lsl	r3, r3, #2
   1783c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17840:	add	r2, r2, r3
   17844:	ldr	r1, [fp, #-8]
   17848:	ldr	r3, [fp, #-16]
   1784c:	add	r3, r1, r3
   17850:	lsl	r3, r3, #2
   17854:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17858:	add	r3, r1, r3
   1785c:	ldr	r2, [r2]
   17860:	str	r2, [r3]
   17864:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17868:	ldr	r3, [fp, #-8]
   1786c:	sub	r3, r2, r3
   17870:	ldr	r2, [fp, #-12]
   17874:	sub	r2, r2, r3
   17878:	ldr	r3, [fp, #-16]
   1787c:	add	r3, r2, r3
   17880:	lsl	r3, r3, #2
   17884:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17888:	add	r3, r2, r3
   1788c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17890:	str	r2, [r3]
   17894:	ldr	r3, [fp, #-16]
   17898:	add	r3, r3, #1
   1789c:	str	r3, [fp, #-16]
   178a0:	ldr	r2, [fp, #-16]
   178a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   178a8:	cmp	r2, r3
   178ac:	blt	177fc <__assert_fail@plt+0x6a24>
   178b0:	ldr	r2, [fp, #-12]
   178b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   178b8:	sub	r3, r2, r3
   178bc:	str	r3, [fp, #-12]
   178c0:	b	17984 <__assert_fail@plt+0x6bac>
   178c4:	ldr	r2, [fp, #-12]
   178c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   178cc:	sub	r3, r2, r3
   178d0:	str	r3, [fp, #-36]	; 0xffffffdc
   178d4:	mov	r3, #0
   178d8:	str	r3, [fp, #-20]	; 0xffffffec
   178dc:	b	17964 <__assert_fail@plt+0x6b8c>
   178e0:	ldr	r2, [fp, #-8]
   178e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   178e8:	add	r3, r2, r3
   178ec:	lsl	r3, r3, #2
   178f0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   178f4:	add	r3, r2, r3
   178f8:	ldr	r3, [r3]
   178fc:	str	r3, [fp, #-32]	; 0xffffffe0
   17900:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17904:	ldr	r3, [fp, #-20]	; 0xffffffec
   17908:	add	r3, r2, r3
   1790c:	lsl	r3, r3, #2
   17910:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17914:	add	r2, r2, r3
   17918:	ldr	r1, [fp, #-8]
   1791c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17920:	add	r3, r1, r3
   17924:	lsl	r3, r3, #2
   17928:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1792c:	add	r3, r1, r3
   17930:	ldr	r2, [r2]
   17934:	str	r2, [r3]
   17938:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1793c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17940:	add	r3, r2, r3
   17944:	lsl	r3, r3, #2
   17948:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1794c:	add	r3, r2, r3
   17950:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17954:	str	r2, [r3]
   17958:	ldr	r3, [fp, #-20]	; 0xffffffec
   1795c:	add	r3, r3, #1
   17960:	str	r3, [fp, #-20]	; 0xffffffec
   17964:	ldr	r2, [fp, #-20]	; 0xffffffec
   17968:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1796c:	cmp	r2, r3
   17970:	blt	178e0 <__assert_fail@plt+0x6b08>
   17974:	ldr	r2, [fp, #-8]
   17978:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1797c:	add	r3, r2, r3
   17980:	str	r3, [fp, #-8]
   17984:	ldr	r2, [fp, #-12]
   17988:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1798c:	cmp	r2, r3
   17990:	ble	179a4 <__assert_fail@plt+0x6bcc>
   17994:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17998:	ldr	r3, [fp, #-8]
   1799c:	cmp	r2, r3
   179a0:	bgt	177c0 <__assert_fail@plt+0x69e8>
   179a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   179a8:	ldr	r2, [r3, #28]
   179ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   179b0:	ldr	r1, [r3]
   179b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   179b8:	ldr	r3, [r3, #32]
   179bc:	sub	r3, r1, r3
   179c0:	add	r2, r2, r3
   179c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   179c8:	str	r2, [r3, #28]
   179cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   179d0:	ldr	r2, [r3]
   179d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   179d8:	str	r2, [r3, #32]
   179dc:	nop	{0}
   179e0:	add	sp, fp, #0
   179e4:	pop	{fp}		; (ldr fp, [sp], #4)
   179e8:	bx	lr
   179ec:	str	r4, [sp, #-12]!
   179f0:	str	fp, [sp, #4]
   179f4:	str	lr, [sp, #8]
   179f8:	add	fp, sp, #8
   179fc:	sub	sp, sp, #68	; 0x44
   17a00:	str	r0, [fp, #-56]	; 0xffffffc8
   17a04:	str	r1, [fp, #-60]	; 0xffffffc4
   17a08:	str	r2, [fp, #-64]	; 0xffffffc0
   17a0c:	str	r3, [fp, #-68]	; 0xffffffbc
   17a10:	mov	r3, #0
   17a14:	str	r3, [fp, #-24]	; 0xffffffe8
   17a18:	ldr	r3, [fp, #12]
   17a1c:	ldr	r3, [r3, #20]
   17a20:	str	r3, [fp, #-16]
   17a24:	b	17a34 <__assert_fail@plt+0x6c5c>
   17a28:	ldr	r3, [fp, #-16]
   17a2c:	add	r3, r3, #1
   17a30:	str	r3, [fp, #-16]
   17a34:	ldr	r3, [fp, #-16]
   17a38:	ldrb	r3, [r3]
   17a3c:	cmp	r3, #0
   17a40:	beq	17a54 <__assert_fail@plt+0x6c7c>
   17a44:	ldr	r3, [fp, #-16]
   17a48:	ldrb	r3, [r3]
   17a4c:	cmp	r3, #61	; 0x3d
   17a50:	bne	17a28 <__assert_fail@plt+0x6c50>
   17a54:	ldr	r3, [fp, #12]
   17a58:	ldr	r3, [r3, #20]
   17a5c:	ldr	r2, [fp, #-16]
   17a60:	sub	r3, r2, r3
   17a64:	str	r3, [fp, #-52]	; 0xffffffcc
   17a68:	ldr	r3, [fp, #-68]	; 0xffffffbc
   17a6c:	str	r3, [fp, #-20]	; 0xffffffec
   17a70:	mov	r3, #0
   17a74:	str	r3, [fp, #-28]	; 0xffffffe4
   17a78:	b	17af0 <__assert_fail@plt+0x6d18>
   17a7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17a80:	ldr	r0, [r3]
   17a84:	ldr	r3, [fp, #12]
   17a88:	ldr	r3, [r3, #20]
   17a8c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17a90:	mov	r1, r3
   17a94:	bl	10d90 <strncmp@plt>
   17a98:	mov	r3, r0
   17a9c:	cmp	r3, #0
   17aa0:	bne	17ad8 <__assert_fail@plt+0x6d00>
   17aa4:	ldr	r3, [fp, #-20]	; 0xffffffec
   17aa8:	ldr	r3, [r3]
   17aac:	mov	r0, r3
   17ab0:	bl	10ca0 <strlen@plt>
   17ab4:	mov	r2, r0
   17ab8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17abc:	cmp	r3, r2
   17ac0:	bne	17ad8 <__assert_fail@plt+0x6d00>
   17ac4:	ldr	r3, [fp, #-20]	; 0xffffffec
   17ac8:	str	r3, [fp, #-24]	; 0xffffffe8
   17acc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17ad0:	str	r3, [fp, #-32]	; 0xffffffe0
   17ad4:	b	17b00 <__assert_fail@plt+0x6d28>
   17ad8:	ldr	r3, [fp, #-20]	; 0xffffffec
   17adc:	add	r3, r3, #16
   17ae0:	str	r3, [fp, #-20]	; 0xffffffec
   17ae4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17ae8:	add	r3, r3, #1
   17aec:	str	r3, [fp, #-28]	; 0xffffffe4
   17af0:	ldr	r3, [fp, #-20]	; 0xffffffec
   17af4:	ldr	r3, [r3]
   17af8:	cmp	r3, #0
   17afc:	bne	17a7c <__assert_fail@plt+0x6ca4>
   17b00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17b04:	cmp	r3, #0
   17b08:	bne	17e6c <__assert_fail@plt+0x7094>
   17b0c:	mov	r3, #0
   17b10:	str	r3, [fp, #-36]	; 0xffffffdc
   17b14:	mov	r3, #0
   17b18:	str	r3, [fp, #-40]	; 0xffffffd8
   17b1c:	mov	r3, #0
   17b20:	str	r3, [fp, #-44]	; 0xffffffd4
   17b24:	mvn	r3, #0
   17b28:	str	r3, [fp, #-48]	; 0xffffffd0
   17b2c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   17b30:	str	r3, [fp, #-20]	; 0xffffffec
   17b34:	mov	r3, #0
   17b38:	str	r3, [fp, #-32]	; 0xffffffe0
   17b3c:	b	17cac <__assert_fail@plt+0x6ed4>
   17b40:	ldr	r3, [fp, #-20]	; 0xffffffec
   17b44:	ldr	r0, [r3]
   17b48:	ldr	r3, [fp, #12]
   17b4c:	ldr	r3, [r3, #20]
   17b50:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17b54:	mov	r1, r3
   17b58:	bl	10d90 <strncmp@plt>
   17b5c:	mov	r3, r0
   17b60:	cmp	r3, #0
   17b64:	bne	17c94 <__assert_fail@plt+0x6ebc>
   17b68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17b6c:	cmp	r3, #0
   17b70:	bne	17b88 <__assert_fail@plt+0x6db0>
   17b74:	ldr	r3, [fp, #-20]	; 0xffffffec
   17b78:	str	r3, [fp, #-24]	; 0xffffffe8
   17b7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17b80:	str	r3, [fp, #-48]	; 0xffffffd0
   17b84:	b	17c94 <__assert_fail@plt+0x6ebc>
   17b88:	ldr	r3, [fp, #8]
   17b8c:	cmp	r3, #0
   17b90:	bne	17bdc <__assert_fail@plt+0x6e04>
   17b94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17b98:	ldr	r2, [r3, #4]
   17b9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17ba0:	ldr	r3, [r3, #4]
   17ba4:	cmp	r2, r3
   17ba8:	bne	17bdc <__assert_fail@plt+0x6e04>
   17bac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17bb0:	ldr	r2, [r3, #8]
   17bb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   17bb8:	ldr	r3, [r3, #8]
   17bbc:	cmp	r2, r3
   17bc0:	bne	17bdc <__assert_fail@plt+0x6e04>
   17bc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17bc8:	ldr	r2, [r3, #12]
   17bcc:	ldr	r3, [fp, #-20]	; 0xffffffec
   17bd0:	ldr	r3, [r3, #12]
   17bd4:	cmp	r2, r3
   17bd8:	beq	17c94 <__assert_fail@plt+0x6ebc>
   17bdc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17be0:	cmp	r3, #0
   17be4:	bne	17c94 <__assert_fail@plt+0x6ebc>
   17be8:	ldr	r3, [fp, #16]
   17bec:	cmp	r3, #0
   17bf0:	bne	17c00 <__assert_fail@plt+0x6e28>
   17bf4:	mov	r3, #1
   17bf8:	str	r3, [fp, #-44]	; 0xffffffd4
   17bfc:	b	17c74 <__assert_fail@plt+0x6e9c>
   17c00:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17c04:	cmp	r3, #0
   17c08:	bne	17c74 <__assert_fail@plt+0x6e9c>
   17c0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17c10:	mov	r0, r3
   17c14:	bl	1aef4 <__assert_fail@plt+0xa11c>
   17c18:	mov	r3, r0
   17c1c:	str	r3, [fp, #-36]	; 0xffffffdc
   17c20:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17c24:	cmp	r3, #0
   17c28:	bne	17c38 <__assert_fail@plt+0x6e60>
   17c2c:	mov	r3, #1
   17c30:	str	r3, [fp, #-44]	; 0xffffffd4
   17c34:	b	17c40 <__assert_fail@plt+0x6e68>
   17c38:	mov	r3, #1
   17c3c:	str	r3, [fp, #-40]	; 0xffffffd8
   17c40:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17c44:	cmp	r3, #0
   17c48:	beq	17c74 <__assert_fail@plt+0x6e9c>
   17c4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17c50:	mov	r2, r3
   17c54:	mov	r1, #0
   17c58:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17c5c:	bl	10ce8 <memset@plt>
   17c60:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17c64:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17c68:	add	r3, r2, r3
   17c6c:	mov	r2, #1
   17c70:	strb	r2, [r3]
   17c74:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17c78:	cmp	r3, #0
   17c7c:	beq	17c94 <__assert_fail@plt+0x6ebc>
   17c80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17c84:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17c88:	add	r3, r2, r3
   17c8c:	mov	r2, #1
   17c90:	strb	r2, [r3]
   17c94:	ldr	r3, [fp, #-20]	; 0xffffffec
   17c98:	add	r3, r3, #16
   17c9c:	str	r3, [fp, #-20]	; 0xffffffec
   17ca0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17ca4:	add	r3, r3, #1
   17ca8:	str	r3, [fp, #-32]	; 0xffffffe0
   17cac:	ldr	r3, [fp, #-20]	; 0xffffffec
   17cb0:	ldr	r3, [r3]
   17cb4:	cmp	r3, #0
   17cb8:	bne	17b40 <__assert_fail@plt+0x6d68>
   17cbc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17cc0:	cmp	r3, #0
   17cc4:	bne	17cd4 <__assert_fail@plt+0x6efc>
   17cc8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17ccc:	cmp	r3, #0
   17cd0:	beq	17e64 <__assert_fail@plt+0x708c>
   17cd4:	ldr	r3, [fp, #16]
   17cd8:	cmp	r3, #0
   17cdc:	beq	17e00 <__assert_fail@plt+0x7028>
   17ce0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17ce4:	cmp	r3, #0
   17ce8:	beq	17d20 <__assert_fail@plt+0x6f48>
   17cec:	movw	r3, #53520	; 0xd110
   17cf0:	movt	r3, #2
   17cf4:	ldr	r0, [r3]
   17cf8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17cfc:	ldr	r2, [r3]
   17d00:	ldr	r3, [fp, #12]
   17d04:	ldr	r3, [r3, #20]
   17d08:	str	r3, [sp]
   17d0c:	ldr	r3, [fp, #20]
   17d10:	movw	r1, #48760	; 0xbe78
   17d14:	movt	r1, #1
   17d18:	bl	10cc4 <fprintf@plt>
   17d1c:	b	17e00 <__assert_fail@plt+0x7028>
   17d20:	movw	r3, #53520	; 0xd110
   17d24:	movt	r3, #2
   17d28:	ldr	r3, [r3]
   17d2c:	mov	r0, r3
   17d30:	bl	10d48 <flockfile@plt>
   17d34:	movw	r3, #53520	; 0xd110
   17d38:	movt	r3, #2
   17d3c:	ldr	r0, [r3]
   17d40:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17d44:	ldr	r2, [r3]
   17d48:	ldr	r3, [fp, #12]
   17d4c:	ldr	r3, [r3, #20]
   17d50:	str	r3, [sp]
   17d54:	ldr	r3, [fp, #20]
   17d58:	movw	r1, #48792	; 0xbe98
   17d5c:	movt	r1, #1
   17d60:	bl	10cc4 <fprintf@plt>
   17d64:	mov	r3, #0
   17d68:	str	r3, [fp, #-32]	; 0xffffffe0
   17d6c:	b	17dc4 <__assert_fail@plt+0x6fec>
   17d70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17d74:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17d78:	add	r3, r2, r3
   17d7c:	ldrb	r3, [r3]
   17d80:	cmp	r3, #0
   17d84:	beq	17db8 <__assert_fail@plt+0x6fe0>
   17d88:	movw	r3, #53520	; 0xd110
   17d8c:	movt	r3, #2
   17d90:	ldr	r0, [r3]
   17d94:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17d98:	lsl	r3, r3, #4
   17d9c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   17da0:	add	r3, r2, r3
   17da4:	ldr	r3, [r3]
   17da8:	ldr	r2, [fp, #20]
   17dac:	movw	r1, #48840	; 0xbec8
   17db0:	movt	r1, #1
   17db4:	bl	10cc4 <fprintf@plt>
   17db8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17dbc:	add	r3, r3, #1
   17dc0:	str	r3, [fp, #-32]	; 0xffffffe0
   17dc4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17dc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17dcc:	cmp	r2, r3
   17dd0:	blt	17d70 <__assert_fail@plt+0x6f98>
   17dd4:	movw	r3, #53520	; 0xd110
   17dd8:	movt	r3, #2
   17ddc:	ldr	r3, [r3]
   17de0:	mov	r1, r3
   17de4:	mov	r0, #10
   17de8:	bl	10d18 <fputc@plt>
   17dec:	movw	r3, #53520	; 0xd110
   17df0:	movt	r3, #2
   17df4:	ldr	r3, [r3]
   17df8:	mov	r0, r3
   17dfc:	bl	10bf8 <funlockfile@plt>
   17e00:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17e04:	cmp	r3, #0
   17e08:	beq	17e14 <__assert_fail@plt+0x703c>
   17e0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17e10:	bl	1430c <__assert_fail@plt+0x3534>
   17e14:	ldr	r3, [fp, #12]
   17e18:	ldr	r4, [r3, #20]
   17e1c:	ldr	r3, [fp, #12]
   17e20:	ldr	r3, [r3, #20]
   17e24:	mov	r0, r3
   17e28:	bl	10ca0 <strlen@plt>
   17e2c:	mov	r3, r0
   17e30:	add	r2, r4, r3
   17e34:	ldr	r3, [fp, #12]
   17e38:	str	r2, [r3, #20]
   17e3c:	ldr	r3, [fp, #12]
   17e40:	ldr	r3, [r3]
   17e44:	add	r2, r3, #1
   17e48:	ldr	r3, [fp, #12]
   17e4c:	str	r2, [r3]
   17e50:	ldr	r3, [fp, #12]
   17e54:	mov	r2, #0
   17e58:	str	r2, [r3, #8]
   17e5c:	mov	r3, #63	; 0x3f
   17e60:	b	180fc <__assert_fail@plt+0x7324>
   17e64:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17e68:	str	r3, [fp, #-32]	; 0xffffffe0
   17e6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17e70:	cmp	r3, #0
   17e74:	bne	17f48 <__assert_fail@plt+0x7170>
   17e78:	ldr	r3, [fp, #8]
   17e7c:	cmp	r3, #0
   17e80:	beq	17ed0 <__assert_fail@plt+0x70f8>
   17e84:	ldr	r3, [fp, #12]
   17e88:	ldr	r3, [r3]
   17e8c:	lsl	r3, r3, #2
   17e90:	ldr	r2, [fp, #-60]	; 0xffffffc4
   17e94:	add	r3, r2, r3
   17e98:	ldr	r3, [r3]
   17e9c:	add	r3, r3, #1
   17ea0:	ldrb	r3, [r3]
   17ea4:	cmp	r3, #45	; 0x2d
   17ea8:	beq	17ed0 <__assert_fail@plt+0x70f8>
   17eac:	ldr	r3, [fp, #12]
   17eb0:	ldr	r3, [r3, #20]
   17eb4:	ldrb	r3, [r3]
   17eb8:	mov	r1, r3
   17ebc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   17ec0:	bl	10cac <strchr@plt>
   17ec4:	mov	r3, r0
   17ec8:	cmp	r3, #0
   17ecc:	bne	17f40 <__assert_fail@plt+0x7168>
   17ed0:	ldr	r3, [fp, #16]
   17ed4:	cmp	r3, #0
   17ed8:	beq	17f0c <__assert_fail@plt+0x7134>
   17edc:	movw	r3, #53520	; 0xd110
   17ee0:	movt	r3, #2
   17ee4:	ldr	r0, [r3]
   17ee8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17eec:	ldr	r2, [r3]
   17ef0:	ldr	r3, [fp, #12]
   17ef4:	ldr	r3, [r3, #20]
   17ef8:	str	r3, [sp]
   17efc:	ldr	r3, [fp, #20]
   17f00:	movw	r1, #48848	; 0xbed0
   17f04:	movt	r1, #1
   17f08:	bl	10cc4 <fprintf@plt>
   17f0c:	ldr	r3, [fp, #12]
   17f10:	mov	r2, #0
   17f14:	str	r2, [r3, #20]
   17f18:	ldr	r3, [fp, #12]
   17f1c:	ldr	r3, [r3]
   17f20:	add	r2, r3, #1
   17f24:	ldr	r3, [fp, #12]
   17f28:	str	r2, [r3]
   17f2c:	ldr	r3, [fp, #12]
   17f30:	mov	r2, #0
   17f34:	str	r2, [r3, #8]
   17f38:	mov	r3, #63	; 0x3f
   17f3c:	b	180fc <__assert_fail@plt+0x7324>
   17f40:	mvn	r3, #0
   17f44:	b	180fc <__assert_fail@plt+0x7324>
   17f48:	ldr	r3, [fp, #12]
   17f4c:	ldr	r3, [r3]
   17f50:	add	r2, r3, #1
   17f54:	ldr	r3, [fp, #12]
   17f58:	str	r2, [r3]
   17f5c:	ldr	r3, [fp, #12]
   17f60:	mov	r2, #0
   17f64:	str	r2, [r3, #20]
   17f68:	ldr	r3, [fp, #-16]
   17f6c:	ldrb	r3, [r3]
   17f70:	cmp	r3, #0
   17f74:	beq	17ff0 <__assert_fail@plt+0x7218>
   17f78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17f7c:	ldr	r3, [r3, #4]
   17f80:	cmp	r3, #0
   17f84:	beq	17f9c <__assert_fail@plt+0x71c4>
   17f88:	ldr	r3, [fp, #-16]
   17f8c:	add	r2, r3, #1
   17f90:	ldr	r3, [fp, #12]
   17f94:	str	r2, [r3, #12]
   17f98:	b	180b0 <__assert_fail@plt+0x72d8>
   17f9c:	ldr	r3, [fp, #16]
   17fa0:	cmp	r3, #0
   17fa4:	beq	17fd8 <__assert_fail@plt+0x7200>
   17fa8:	movw	r3, #53520	; 0xd110
   17fac:	movt	r3, #2
   17fb0:	ldr	r0, [r3]
   17fb4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17fb8:	ldr	r2, [r3]
   17fbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17fc0:	ldr	r3, [r3]
   17fc4:	str	r3, [sp]
   17fc8:	ldr	r3, [fp, #20]
   17fcc:	movw	r1, #48880	; 0xbef0
   17fd0:	movt	r1, #1
   17fd4:	bl	10cc4 <fprintf@plt>
   17fd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17fdc:	ldr	r2, [r3, #12]
   17fe0:	ldr	r3, [fp, #12]
   17fe4:	str	r2, [r3, #8]
   17fe8:	mov	r3, #63	; 0x3f
   17fec:	b	180fc <__assert_fail@plt+0x7324>
   17ff0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17ff4:	ldr	r3, [r3, #4]
   17ff8:	cmp	r3, #1
   17ffc:	bne	180b0 <__assert_fail@plt+0x72d8>
   18000:	ldr	r3, [fp, #12]
   18004:	ldr	r3, [r3]
   18008:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1800c:	cmp	r2, r3
   18010:	ble	18044 <__assert_fail@plt+0x726c>
   18014:	ldr	r3, [fp, #12]
   18018:	ldr	r3, [r3]
   1801c:	add	r1, r3, #1
   18020:	ldr	r2, [fp, #12]
   18024:	str	r1, [r2]
   18028:	lsl	r3, r3, #2
   1802c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   18030:	add	r3, r2, r3
   18034:	ldr	r2, [r3]
   18038:	ldr	r3, [fp, #12]
   1803c:	str	r2, [r3, #12]
   18040:	b	180b0 <__assert_fail@plt+0x72d8>
   18044:	ldr	r3, [fp, #16]
   18048:	cmp	r3, #0
   1804c:	beq	18080 <__assert_fail@plt+0x72a8>
   18050:	movw	r3, #53520	; 0xd110
   18054:	movt	r3, #2
   18058:	ldr	r0, [r3]
   1805c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18060:	ldr	r2, [r3]
   18064:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18068:	ldr	r3, [r3]
   1806c:	str	r3, [sp]
   18070:	ldr	r3, [fp, #20]
   18074:	movw	r1, #48928	; 0xbf20
   18078:	movt	r1, #1
   1807c:	bl	10cc4 <fprintf@plt>
   18080:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18084:	ldr	r2, [r3, #12]
   18088:	ldr	r3, [fp, #12]
   1808c:	str	r2, [r3, #8]
   18090:	ldr	r3, [fp, #-64]	; 0xffffffc0
   18094:	ldrb	r3, [r3]
   18098:	cmp	r3, #58	; 0x3a
   1809c:	bne	180a8 <__assert_fail@plt+0x72d0>
   180a0:	mov	r3, #58	; 0x3a
   180a4:	b	180fc <__assert_fail@plt+0x7324>
   180a8:	mov	r3, #63	; 0x3f
   180ac:	b	180fc <__assert_fail@plt+0x7324>
   180b0:	ldr	r3, [fp, #4]
   180b4:	cmp	r3, #0
   180b8:	beq	180c8 <__assert_fail@plt+0x72f0>
   180bc:	ldr	r3, [fp, #4]
   180c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   180c4:	str	r2, [r3]
   180c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   180cc:	ldr	r3, [r3, #8]
   180d0:	cmp	r3, #0
   180d4:	beq	180f4 <__assert_fail@plt+0x731c>
   180d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   180dc:	ldr	r3, [r3, #8]
   180e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   180e4:	ldr	r2, [r2, #12]
   180e8:	str	r2, [r3]
   180ec:	mov	r3, #0
   180f0:	b	180fc <__assert_fail@plt+0x7324>
   180f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   180f8:	ldr	r3, [r3, #12]
   180fc:	mov	r0, r3
   18100:	sub	sp, fp, #8
   18104:	ldr	r4, [sp]
   18108:	ldr	fp, [sp, #4]
   1810c:	add	sp, sp, #8
   18110:	pop	{pc}		; (ldr pc, [sp], #4)
   18114:	str	fp, [sp, #-8]!
   18118:	str	lr, [sp, #4]
   1811c:	add	fp, sp, #4
   18120:	sub	sp, sp, #16
   18124:	str	r0, [fp, #-8]
   18128:	str	r1, [fp, #-12]
   1812c:	str	r2, [fp, #-16]
   18130:	str	r3, [fp, #-20]	; 0xffffffec
   18134:	ldr	r3, [fp, #-20]	; 0xffffffec
   18138:	ldr	r3, [r3]
   1813c:	cmp	r3, #0
   18140:	bne	18150 <__assert_fail@plt+0x7378>
   18144:	ldr	r3, [fp, #-20]	; 0xffffffec
   18148:	mov	r2, #1
   1814c:	str	r2, [r3]
   18150:	ldr	r3, [fp, #-20]	; 0xffffffec
   18154:	ldr	r2, [r3]
   18158:	ldr	r3, [fp, #-20]	; 0xffffffec
   1815c:	str	r2, [r3, #32]
   18160:	ldr	r3, [fp, #-20]	; 0xffffffec
   18164:	ldr	r2, [r3, #32]
   18168:	ldr	r3, [fp, #-20]	; 0xffffffec
   1816c:	str	r2, [r3, #28]
   18170:	ldr	r3, [fp, #-20]	; 0xffffffec
   18174:	mov	r2, #0
   18178:	str	r2, [r3, #20]
   1817c:	ldr	r3, [fp, #-16]
   18180:	ldrb	r3, [r3]
   18184:	cmp	r3, #45	; 0x2d
   18188:	bne	181a8 <__assert_fail@plt+0x73d0>
   1818c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18190:	mov	r2, #2
   18194:	str	r2, [r3, #24]
   18198:	ldr	r3, [fp, #-16]
   1819c:	add	r3, r3, #1
   181a0:	str	r3, [fp, #-16]
   181a4:	b	18214 <__assert_fail@plt+0x743c>
   181a8:	ldr	r3, [fp, #-16]
   181ac:	ldrb	r3, [r3]
   181b0:	cmp	r3, #43	; 0x2b
   181b4:	bne	181d4 <__assert_fail@plt+0x73fc>
   181b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   181bc:	mov	r2, #0
   181c0:	str	r2, [r3, #24]
   181c4:	ldr	r3, [fp, #-16]
   181c8:	add	r3, r3, #1
   181cc:	str	r3, [fp, #-16]
   181d0:	b	18214 <__assert_fail@plt+0x743c>
   181d4:	ldr	r3, [fp, #4]
   181d8:	cmp	r3, #0
   181dc:	bne	181f8 <__assert_fail@plt+0x7420>
   181e0:	movw	r0, #48968	; 0xbf48
   181e4:	movt	r0, #1
   181e8:	bl	10c58 <getenv@plt>
   181ec:	mov	r3, r0
   181f0:	cmp	r3, #0
   181f4:	beq	18208 <__assert_fail@plt+0x7430>
   181f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   181fc:	mov	r2, #0
   18200:	str	r2, [r3, #24]
   18204:	b	18214 <__assert_fail@plt+0x743c>
   18208:	ldr	r3, [fp, #-20]	; 0xffffffec
   1820c:	mov	r2, #1
   18210:	str	r2, [r3, #24]
   18214:	ldr	r3, [fp, #-20]	; 0xffffffec
   18218:	mov	r2, #1
   1821c:	str	r2, [r3, #16]
   18220:	ldr	r3, [fp, #-16]
   18224:	mov	r0, r3
   18228:	sub	sp, fp, #4
   1822c:	ldr	fp, [sp]
   18230:	add	sp, sp, #4
   18234:	pop	{pc}		; (ldr pc, [sp], #4)
   18238:	str	fp, [sp, #-8]!
   1823c:	str	lr, [sp, #4]
   18240:	add	fp, sp, #4
   18244:	sub	sp, sp, #56	; 0x38
   18248:	str	r0, [fp, #-24]	; 0xffffffe8
   1824c:	str	r1, [fp, #-28]	; 0xffffffe4
   18250:	str	r2, [fp, #-32]	; 0xffffffe0
   18254:	str	r3, [fp, #-36]	; 0xffffffdc
   18258:	ldr	r3, [fp, #12]
   1825c:	ldr	r3, [r3, #4]
   18260:	str	r3, [fp, #-8]
   18264:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18268:	cmp	r3, #0
   1826c:	bgt	18278 <__assert_fail@plt+0x74a0>
   18270:	mvn	r3, #0
   18274:	b	18b6c <__assert_fail@plt+0x7d94>
   18278:	ldr	r3, [fp, #12]
   1827c:	mov	r2, #0
   18280:	str	r2, [r3, #12]
   18284:	ldr	r3, [fp, #12]
   18288:	ldr	r3, [r3]
   1828c:	cmp	r3, #0
   18290:	beq	182a4 <__assert_fail@plt+0x74cc>
   18294:	ldr	r3, [fp, #12]
   18298:	ldr	r3, [r3, #16]
   1829c:	cmp	r3, #0
   182a0:	bne	182c8 <__assert_fail@plt+0x74f0>
   182a4:	ldr	r3, [fp, #16]
   182a8:	str	r3, [sp]
   182ac:	ldr	r3, [fp, #12]
   182b0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   182b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   182b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182bc:	bl	18114 <__assert_fail@plt+0x733c>
   182c0:	str	r0, [fp, #-32]	; 0xffffffe0
   182c4:	b	182f4 <__assert_fail@plt+0x751c>
   182c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   182cc:	ldrb	r3, [r3]
   182d0:	cmp	r3, #45	; 0x2d
   182d4:	beq	182e8 <__assert_fail@plt+0x7510>
   182d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   182dc:	ldrb	r3, [r3]
   182e0:	cmp	r3, #43	; 0x2b
   182e4:	bne	182f4 <__assert_fail@plt+0x751c>
   182e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   182ec:	add	r3, r3, #1
   182f0:	str	r3, [fp, #-32]	; 0xffffffe0
   182f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   182f8:	ldrb	r3, [r3]
   182fc:	cmp	r3, #58	; 0x3a
   18300:	bne	1830c <__assert_fail@plt+0x7534>
   18304:	mov	r3, #0
   18308:	str	r3, [fp, #-8]
   1830c:	ldr	r3, [fp, #12]
   18310:	ldr	r3, [r3, #20]
   18314:	cmp	r3, #0
   18318:	beq	18330 <__assert_fail@plt+0x7558>
   1831c:	ldr	r3, [fp, #12]
   18320:	ldr	r3, [r3, #20]
   18324:	ldrb	r3, [r3]
   18328:	cmp	r3, #0
   1832c:	bne	187e4 <__assert_fail@plt+0x7a0c>
   18330:	ldr	r3, [fp, #12]
   18334:	ldr	r2, [r3, #32]
   18338:	ldr	r3, [fp, #12]
   1833c:	ldr	r3, [r3]
   18340:	cmp	r2, r3
   18344:	ble	18358 <__assert_fail@plt+0x7580>
   18348:	ldr	r3, [fp, #12]
   1834c:	ldr	r2, [r3]
   18350:	ldr	r3, [fp, #12]
   18354:	str	r2, [r3, #32]
   18358:	ldr	r3, [fp, #12]
   1835c:	ldr	r2, [r3, #28]
   18360:	ldr	r3, [fp, #12]
   18364:	ldr	r3, [r3]
   18368:	cmp	r2, r3
   1836c:	ble	18380 <__assert_fail@plt+0x75a8>
   18370:	ldr	r3, [fp, #12]
   18374:	ldr	r2, [r3]
   18378:	ldr	r3, [fp, #12]
   1837c:	str	r2, [r3, #28]
   18380:	ldr	r3, [fp, #12]
   18384:	ldr	r3, [r3, #24]
   18388:	cmp	r3, #1
   1838c:	bne	18480 <__assert_fail@plt+0x76a8>
   18390:	ldr	r3, [fp, #12]
   18394:	ldr	r2, [r3, #28]
   18398:	ldr	r3, [fp, #12]
   1839c:	ldr	r3, [r3, #32]
   183a0:	cmp	r2, r3
   183a4:	beq	183d0 <__assert_fail@plt+0x75f8>
   183a8:	ldr	r3, [fp, #12]
   183ac:	ldr	r2, [r3, #32]
   183b0:	ldr	r3, [fp, #12]
   183b4:	ldr	r3, [r3]
   183b8:	cmp	r2, r3
   183bc:	beq	183d0 <__assert_fail@plt+0x75f8>
   183c0:	ldr	r1, [fp, #12]
   183c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   183c8:	bl	17784 <__assert_fail@plt+0x69ac>
   183cc:	b	183f8 <__assert_fail@plt+0x7620>
   183d0:	ldr	r3, [fp, #12]
   183d4:	ldr	r2, [r3, #32]
   183d8:	ldr	r3, [fp, #12]
   183dc:	ldr	r3, [r3]
   183e0:	cmp	r2, r3
   183e4:	beq	18410 <__assert_fail@plt+0x7638>
   183e8:	ldr	r3, [fp, #12]
   183ec:	ldr	r2, [r3]
   183f0:	ldr	r3, [fp, #12]
   183f4:	str	r2, [r3, #28]
   183f8:	b	18410 <__assert_fail@plt+0x7638>
   183fc:	ldr	r3, [fp, #12]
   18400:	ldr	r3, [r3]
   18404:	add	r2, r3, #1
   18408:	ldr	r3, [fp, #12]
   1840c:	str	r2, [r3]
   18410:	ldr	r3, [fp, #12]
   18414:	ldr	r3, [r3]
   18418:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1841c:	cmp	r2, r3
   18420:	ble	18470 <__assert_fail@plt+0x7698>
   18424:	ldr	r3, [fp, #12]
   18428:	ldr	r3, [r3]
   1842c:	lsl	r3, r3, #2
   18430:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18434:	add	r3, r2, r3
   18438:	ldr	r3, [r3]
   1843c:	ldrb	r3, [r3]
   18440:	cmp	r3, #45	; 0x2d
   18444:	bne	183fc <__assert_fail@plt+0x7624>
   18448:	ldr	r3, [fp, #12]
   1844c:	ldr	r3, [r3]
   18450:	lsl	r3, r3, #2
   18454:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18458:	add	r3, r2, r3
   1845c:	ldr	r3, [r3]
   18460:	add	r3, r3, #1
   18464:	ldrb	r3, [r3]
   18468:	cmp	r3, #0
   1846c:	beq	183fc <__assert_fail@plt+0x7624>
   18470:	ldr	r3, [fp, #12]
   18474:	ldr	r2, [r3]
   18478:	ldr	r3, [fp, #12]
   1847c:	str	r2, [r3, #32]
   18480:	ldr	r3, [fp, #12]
   18484:	ldr	r3, [r3]
   18488:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1848c:	cmp	r2, r3
   18490:	beq	1855c <__assert_fail@plt+0x7784>
   18494:	ldr	r3, [fp, #12]
   18498:	ldr	r3, [r3]
   1849c:	lsl	r3, r3, #2
   184a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   184a4:	add	r3, r2, r3
   184a8:	ldr	r3, [r3]
   184ac:	movw	r1, #48984	; 0xbf58
   184b0:	movt	r1, #1
   184b4:	mov	r0, r3
   184b8:	bl	10b80 <strcmp@plt>
   184bc:	mov	r3, r0
   184c0:	cmp	r3, #0
   184c4:	bne	1855c <__assert_fail@plt+0x7784>
   184c8:	ldr	r3, [fp, #12]
   184cc:	ldr	r3, [r3]
   184d0:	add	r2, r3, #1
   184d4:	ldr	r3, [fp, #12]
   184d8:	str	r2, [r3]
   184dc:	ldr	r3, [fp, #12]
   184e0:	ldr	r2, [r3, #28]
   184e4:	ldr	r3, [fp, #12]
   184e8:	ldr	r3, [r3, #32]
   184ec:	cmp	r2, r3
   184f0:	beq	1851c <__assert_fail@plt+0x7744>
   184f4:	ldr	r3, [fp, #12]
   184f8:	ldr	r2, [r3, #32]
   184fc:	ldr	r3, [fp, #12]
   18500:	ldr	r3, [r3]
   18504:	cmp	r2, r3
   18508:	beq	1851c <__assert_fail@plt+0x7744>
   1850c:	ldr	r1, [fp, #12]
   18510:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18514:	bl	17784 <__assert_fail@plt+0x69ac>
   18518:	b	18544 <__assert_fail@plt+0x776c>
   1851c:	ldr	r3, [fp, #12]
   18520:	ldr	r2, [r3, #28]
   18524:	ldr	r3, [fp, #12]
   18528:	ldr	r3, [r3, #32]
   1852c:	cmp	r2, r3
   18530:	bne	18544 <__assert_fail@plt+0x776c>
   18534:	ldr	r3, [fp, #12]
   18538:	ldr	r2, [r3]
   1853c:	ldr	r3, [fp, #12]
   18540:	str	r2, [r3, #28]
   18544:	ldr	r3, [fp, #12]
   18548:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1854c:	str	r2, [r3, #32]
   18550:	ldr	r3, [fp, #12]
   18554:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18558:	str	r2, [r3]
   1855c:	ldr	r3, [fp, #12]
   18560:	ldr	r3, [r3]
   18564:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18568:	cmp	r2, r3
   1856c:	bne	185a0 <__assert_fail@plt+0x77c8>
   18570:	ldr	r3, [fp, #12]
   18574:	ldr	r2, [r3, #28]
   18578:	ldr	r3, [fp, #12]
   1857c:	ldr	r3, [r3, #32]
   18580:	cmp	r2, r3
   18584:	beq	18598 <__assert_fail@plt+0x77c0>
   18588:	ldr	r3, [fp, #12]
   1858c:	ldr	r2, [r3, #28]
   18590:	ldr	r3, [fp, #12]
   18594:	str	r2, [r3]
   18598:	mvn	r3, #0
   1859c:	b	18b6c <__assert_fail@plt+0x7d94>
   185a0:	ldr	r3, [fp, #12]
   185a4:	ldr	r3, [r3]
   185a8:	lsl	r3, r3, #2
   185ac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   185b0:	add	r3, r2, r3
   185b4:	ldr	r3, [r3]
   185b8:	ldrb	r3, [r3]
   185bc:	cmp	r3, #45	; 0x2d
   185c0:	bne	185ec <__assert_fail@plt+0x7814>
   185c4:	ldr	r3, [fp, #12]
   185c8:	ldr	r3, [r3]
   185cc:	lsl	r3, r3, #2
   185d0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   185d4:	add	r3, r2, r3
   185d8:	ldr	r3, [r3]
   185dc:	add	r3, r3, #1
   185e0:	ldrb	r3, [r3]
   185e4:	cmp	r3, #0
   185e8:	bne	18638 <__assert_fail@plt+0x7860>
   185ec:	ldr	r3, [fp, #12]
   185f0:	ldr	r3, [r3, #24]
   185f4:	cmp	r3, #0
   185f8:	bne	18604 <__assert_fail@plt+0x782c>
   185fc:	mvn	r3, #0
   18600:	b	18b6c <__assert_fail@plt+0x7d94>
   18604:	ldr	r3, [fp, #12]
   18608:	ldr	r3, [r3]
   1860c:	add	r1, r3, #1
   18610:	ldr	r2, [fp, #12]
   18614:	str	r1, [r2]
   18618:	lsl	r3, r3, #2
   1861c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18620:	add	r3, r2, r3
   18624:	ldr	r2, [r3]
   18628:	ldr	r3, [fp, #12]
   1862c:	str	r2, [r3, #12]
   18630:	mov	r3, #1
   18634:	b	18b6c <__assert_fail@plt+0x7d94>
   18638:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1863c:	cmp	r3, #0
   18640:	beq	187c0 <__assert_fail@plt+0x79e8>
   18644:	ldr	r3, [fp, #12]
   18648:	ldr	r3, [r3]
   1864c:	lsl	r3, r3, #2
   18650:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18654:	add	r3, r2, r3
   18658:	ldr	r3, [r3]
   1865c:	add	r3, r3, #1
   18660:	ldrb	r3, [r3]
   18664:	cmp	r3, #45	; 0x2d
   18668:	bne	186d8 <__assert_fail@plt+0x7900>
   1866c:	ldr	r3, [fp, #12]
   18670:	ldr	r3, [r3]
   18674:	lsl	r3, r3, #2
   18678:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1867c:	add	r3, r2, r3
   18680:	ldr	r3, [r3]
   18684:	add	r2, r3, #2
   18688:	ldr	r3, [fp, #12]
   1868c:	str	r2, [r3, #20]
   18690:	movw	r3, #48984	; 0xbf58
   18694:	movt	r3, #1
   18698:	str	r3, [sp, #16]
   1869c:	ldr	r3, [fp, #-8]
   186a0:	str	r3, [sp, #12]
   186a4:	ldr	r3, [fp, #12]
   186a8:	str	r3, [sp, #8]
   186ac:	ldr	r3, [fp, #8]
   186b0:	str	r3, [sp, #4]
   186b4:	ldr	r3, [fp, #4]
   186b8:	str	r3, [sp]
   186bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   186c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   186c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   186c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186cc:	bl	179ec <__assert_fail@plt+0x6c14>
   186d0:	mov	r3, r0
   186d4:	b	18b6c <__assert_fail@plt+0x7d94>
   186d8:	ldr	r3, [fp, #8]
   186dc:	cmp	r3, #0
   186e0:	beq	187c0 <__assert_fail@plt+0x79e8>
   186e4:	ldr	r3, [fp, #12]
   186e8:	ldr	r3, [r3]
   186ec:	lsl	r3, r3, #2
   186f0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   186f4:	add	r3, r2, r3
   186f8:	ldr	r3, [r3]
   186fc:	add	r3, r3, #2
   18700:	ldrb	r3, [r3]
   18704:	cmp	r3, #0
   18708:	bne	18744 <__assert_fail@plt+0x796c>
   1870c:	ldr	r3, [fp, #12]
   18710:	ldr	r3, [r3]
   18714:	lsl	r3, r3, #2
   18718:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1871c:	add	r3, r2, r3
   18720:	ldr	r3, [r3]
   18724:	add	r3, r3, #1
   18728:	ldrb	r3, [r3]
   1872c:	mov	r1, r3
   18730:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18734:	bl	10cac <strchr@plt>
   18738:	mov	r3, r0
   1873c:	cmp	r3, #0
   18740:	bne	187c0 <__assert_fail@plt+0x79e8>
   18744:	ldr	r3, [fp, #12]
   18748:	ldr	r3, [r3]
   1874c:	lsl	r3, r3, #2
   18750:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18754:	add	r3, r2, r3
   18758:	ldr	r3, [r3]
   1875c:	add	r2, r3, #1
   18760:	ldr	r3, [fp, #12]
   18764:	str	r2, [r3, #20]
   18768:	movw	r3, #48988	; 0xbf5c
   1876c:	movt	r3, #1
   18770:	str	r3, [sp, #16]
   18774:	ldr	r3, [fp, #-8]
   18778:	str	r3, [sp, #12]
   1877c:	ldr	r3, [fp, #12]
   18780:	str	r3, [sp, #8]
   18784:	ldr	r3, [fp, #8]
   18788:	str	r3, [sp, #4]
   1878c:	ldr	r3, [fp, #4]
   18790:	str	r3, [sp]
   18794:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18798:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1879c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   187a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187a4:	bl	179ec <__assert_fail@plt+0x6c14>
   187a8:	str	r0, [fp, #-16]
   187ac:	ldr	r3, [fp, #-16]
   187b0:	cmn	r3, #1
   187b4:	beq	187c0 <__assert_fail@plt+0x79e8>
   187b8:	ldr	r3, [fp, #-16]
   187bc:	b	18b6c <__assert_fail@plt+0x7d94>
   187c0:	ldr	r3, [fp, #12]
   187c4:	ldr	r3, [r3]
   187c8:	lsl	r3, r3, #2
   187cc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   187d0:	add	r3, r2, r3
   187d4:	ldr	r3, [r3]
   187d8:	add	r2, r3, #1
   187dc:	ldr	r3, [fp, #12]
   187e0:	str	r2, [r3, #20]
   187e4:	ldr	r3, [fp, #12]
   187e8:	ldr	r3, [r3, #20]
   187ec:	add	r1, r3, #1
   187f0:	ldr	r2, [fp, #12]
   187f4:	str	r1, [r2, #20]
   187f8:	ldrb	r3, [r3]
   187fc:	strb	r3, [fp, #-9]
   18800:	ldrb	r3, [fp, #-9]
   18804:	mov	r1, r3
   18808:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1880c:	bl	10cac <strchr@plt>
   18810:	str	r0, [fp, #-20]	; 0xffffffec
   18814:	ldr	r3, [fp, #12]
   18818:	ldr	r3, [r3, #20]
   1881c:	ldrb	r3, [r3]
   18820:	cmp	r3, #0
   18824:	bne	1883c <__assert_fail@plt+0x7a64>
   18828:	ldr	r3, [fp, #12]
   1882c:	ldr	r3, [r3]
   18830:	add	r2, r3, #1
   18834:	ldr	r3, [fp, #12]
   18838:	str	r2, [r3]
   1883c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18840:	cmp	r3, #0
   18844:	beq	18860 <__assert_fail@plt+0x7a88>
   18848:	ldrb	r3, [fp, #-9]
   1884c:	cmp	r3, #58	; 0x3a
   18850:	beq	18860 <__assert_fail@plt+0x7a88>
   18854:	ldrb	r3, [fp, #-9]
   18858:	cmp	r3, #59	; 0x3b
   1885c:	bne	188a4 <__assert_fail@plt+0x7acc>
   18860:	ldr	r3, [fp, #-8]
   18864:	cmp	r3, #0
   18868:	beq	18890 <__assert_fail@plt+0x7ab8>
   1886c:	movw	r3, #53520	; 0xd110
   18870:	movt	r3, #2
   18874:	ldr	r0, [r3]
   18878:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1887c:	ldr	r2, [r3]
   18880:	ldrb	r3, [fp, #-9]
   18884:	movw	r1, #48992	; 0xbf60
   18888:	movt	r1, #1
   1888c:	bl	10cc4 <fprintf@plt>
   18890:	ldrb	r2, [fp, #-9]
   18894:	ldr	r3, [fp, #12]
   18898:	str	r2, [r3, #8]
   1889c:	mov	r3, #63	; 0x3f
   188a0:	b	18b6c <__assert_fail@plt+0x7d94>
   188a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   188a8:	ldrb	r3, [r3]
   188ac:	cmp	r3, #87	; 0x57
   188b0:	bne	189fc <__assert_fail@plt+0x7c24>
   188b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   188b8:	add	r3, r3, #1
   188bc:	ldrb	r3, [r3]
   188c0:	cmp	r3, #59	; 0x3b
   188c4:	bne	189fc <__assert_fail@plt+0x7c24>
   188c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   188cc:	cmp	r3, #0
   188d0:	beq	189fc <__assert_fail@plt+0x7c24>
   188d4:	ldr	r3, [fp, #12]
   188d8:	ldr	r3, [r3, #20]
   188dc:	ldrb	r3, [r3]
   188e0:	cmp	r3, #0
   188e4:	beq	188fc <__assert_fail@plt+0x7b24>
   188e8:	ldr	r3, [fp, #12]
   188ec:	ldr	r2, [r3, #20]
   188f0:	ldr	r3, [fp, #12]
   188f4:	str	r2, [r3, #12]
   188f8:	b	18998 <__assert_fail@plt+0x7bc0>
   188fc:	ldr	r3, [fp, #12]
   18900:	ldr	r3, [r3]
   18904:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18908:	cmp	r2, r3
   1890c:	bne	18978 <__assert_fail@plt+0x7ba0>
   18910:	ldr	r3, [fp, #-8]
   18914:	cmp	r3, #0
   18918:	beq	18940 <__assert_fail@plt+0x7b68>
   1891c:	movw	r3, #53520	; 0xd110
   18920:	movt	r3, #2
   18924:	ldr	r0, [r3]
   18928:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1892c:	ldr	r2, [r3]
   18930:	ldrb	r3, [fp, #-9]
   18934:	movw	r1, #49020	; 0xbf7c
   18938:	movt	r1, #1
   1893c:	bl	10cc4 <fprintf@plt>
   18940:	ldrb	r2, [fp, #-9]
   18944:	ldr	r3, [fp, #12]
   18948:	str	r2, [r3, #8]
   1894c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18950:	ldrb	r3, [r3]
   18954:	cmp	r3, #58	; 0x3a
   18958:	bne	18968 <__assert_fail@plt+0x7b90>
   1895c:	mov	r3, #58	; 0x3a
   18960:	strb	r3, [fp, #-9]
   18964:	b	18970 <__assert_fail@plt+0x7b98>
   18968:	mov	r3, #63	; 0x3f
   1896c:	strb	r3, [fp, #-9]
   18970:	ldrb	r3, [fp, #-9]
   18974:	b	18b6c <__assert_fail@plt+0x7d94>
   18978:	ldr	r3, [fp, #12]
   1897c:	ldr	r3, [r3]
   18980:	lsl	r3, r3, #2
   18984:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18988:	add	r3, r2, r3
   1898c:	ldr	r2, [r3]
   18990:	ldr	r3, [fp, #12]
   18994:	str	r2, [r3, #12]
   18998:	ldr	r3, [fp, #12]
   1899c:	ldr	r2, [r3, #12]
   189a0:	ldr	r3, [fp, #12]
   189a4:	str	r2, [r3, #20]
   189a8:	ldr	r3, [fp, #12]
   189ac:	mov	r2, #0
   189b0:	str	r2, [r3, #12]
   189b4:	movw	r3, #49064	; 0xbfa8
   189b8:	movt	r3, #1
   189bc:	str	r3, [sp, #16]
   189c0:	ldr	r3, [fp, #-8]
   189c4:	str	r3, [sp, #12]
   189c8:	ldr	r3, [fp, #12]
   189cc:	str	r3, [sp, #8]
   189d0:	mov	r3, #0
   189d4:	str	r3, [sp, #4]
   189d8:	ldr	r3, [fp, #4]
   189dc:	str	r3, [sp]
   189e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   189e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   189e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   189ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189f0:	bl	179ec <__assert_fail@plt+0x6c14>
   189f4:	mov	r3, r0
   189f8:	b	18b6c <__assert_fail@plt+0x7d94>
   189fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   18a00:	add	r3, r3, #1
   18a04:	ldrb	r3, [r3]
   18a08:	cmp	r3, #58	; 0x3a
   18a0c:	bne	18b68 <__assert_fail@plt+0x7d90>
   18a10:	ldr	r3, [fp, #-20]	; 0xffffffec
   18a14:	add	r3, r3, #2
   18a18:	ldrb	r3, [r3]
   18a1c:	cmp	r3, #58	; 0x3a
   18a20:	bne	18a7c <__assert_fail@plt+0x7ca4>
   18a24:	ldr	r3, [fp, #12]
   18a28:	ldr	r3, [r3, #20]
   18a2c:	ldrb	r3, [r3]
   18a30:	cmp	r3, #0
   18a34:	beq	18a60 <__assert_fail@plt+0x7c88>
   18a38:	ldr	r3, [fp, #12]
   18a3c:	ldr	r2, [r3, #20]
   18a40:	ldr	r3, [fp, #12]
   18a44:	str	r2, [r3, #12]
   18a48:	ldr	r3, [fp, #12]
   18a4c:	ldr	r3, [r3]
   18a50:	add	r2, r3, #1
   18a54:	ldr	r3, [fp, #12]
   18a58:	str	r2, [r3]
   18a5c:	b	18a6c <__assert_fail@plt+0x7c94>
   18a60:	ldr	r3, [fp, #12]
   18a64:	mov	r2, #0
   18a68:	str	r2, [r3, #12]
   18a6c:	ldr	r3, [fp, #12]
   18a70:	mov	r2, #0
   18a74:	str	r2, [r3, #20]
   18a78:	b	18b68 <__assert_fail@plt+0x7d90>
   18a7c:	ldr	r3, [fp, #12]
   18a80:	ldr	r3, [r3, #20]
   18a84:	ldrb	r3, [r3]
   18a88:	cmp	r3, #0
   18a8c:	beq	18ab8 <__assert_fail@plt+0x7ce0>
   18a90:	ldr	r3, [fp, #12]
   18a94:	ldr	r2, [r3, #20]
   18a98:	ldr	r3, [fp, #12]
   18a9c:	str	r2, [r3, #12]
   18aa0:	ldr	r3, [fp, #12]
   18aa4:	ldr	r3, [r3]
   18aa8:	add	r2, r3, #1
   18aac:	ldr	r3, [fp, #12]
   18ab0:	str	r2, [r3]
   18ab4:	b	18b5c <__assert_fail@plt+0x7d84>
   18ab8:	ldr	r3, [fp, #12]
   18abc:	ldr	r3, [r3]
   18ac0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18ac4:	cmp	r2, r3
   18ac8:	bne	18b30 <__assert_fail@plt+0x7d58>
   18acc:	ldr	r3, [fp, #-8]
   18ad0:	cmp	r3, #0
   18ad4:	beq	18afc <__assert_fail@plt+0x7d24>
   18ad8:	movw	r3, #53520	; 0xd110
   18adc:	movt	r3, #2
   18ae0:	ldr	r0, [r3]
   18ae4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18ae8:	ldr	r2, [r3]
   18aec:	ldrb	r3, [fp, #-9]
   18af0:	movw	r1, #49020	; 0xbf7c
   18af4:	movt	r1, #1
   18af8:	bl	10cc4 <fprintf@plt>
   18afc:	ldrb	r2, [fp, #-9]
   18b00:	ldr	r3, [fp, #12]
   18b04:	str	r2, [r3, #8]
   18b08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18b0c:	ldrb	r3, [r3]
   18b10:	cmp	r3, #58	; 0x3a
   18b14:	bne	18b24 <__assert_fail@plt+0x7d4c>
   18b18:	mov	r3, #58	; 0x3a
   18b1c:	strb	r3, [fp, #-9]
   18b20:	b	18b5c <__assert_fail@plt+0x7d84>
   18b24:	mov	r3, #63	; 0x3f
   18b28:	strb	r3, [fp, #-9]
   18b2c:	b	18b5c <__assert_fail@plt+0x7d84>
   18b30:	ldr	r3, [fp, #12]
   18b34:	ldr	r3, [r3]
   18b38:	add	r1, r3, #1
   18b3c:	ldr	r2, [fp, #12]
   18b40:	str	r1, [r2]
   18b44:	lsl	r3, r3, #2
   18b48:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18b4c:	add	r3, r2, r3
   18b50:	ldr	r2, [r3]
   18b54:	ldr	r3, [fp, #12]
   18b58:	str	r2, [r3, #12]
   18b5c:	ldr	r3, [fp, #12]
   18b60:	mov	r2, #0
   18b64:	str	r2, [r3, #20]
   18b68:	ldrb	r3, [fp, #-9]
   18b6c:	mov	r0, r3
   18b70:	sub	sp, fp, #4
   18b74:	ldr	fp, [sp]
   18b78:	add	sp, sp, #4
   18b7c:	pop	{pc}		; (ldr pc, [sp], #4)
   18b80:	str	fp, [sp, #-8]!
   18b84:	str	lr, [sp, #4]
   18b88:	add	fp, sp, #4
   18b8c:	sub	sp, sp, #40	; 0x28
   18b90:	str	r0, [fp, #-16]
   18b94:	str	r1, [fp, #-20]	; 0xffffffec
   18b98:	str	r2, [fp, #-24]	; 0xffffffe8
   18b9c:	str	r3, [fp, #-28]	; 0xffffffe4
   18ba0:	movw	r3, #53508	; 0xd104
   18ba4:	movt	r3, #2
   18ba8:	ldr	r2, [r3]
   18bac:	movw	r3, #53548	; 0xd12c
   18bb0:	movt	r3, #2
   18bb4:	str	r2, [r3]
   18bb8:	movw	r3, #53512	; 0xd108
   18bbc:	movt	r3, #2
   18bc0:	ldr	r2, [r3]
   18bc4:	movw	r3, #53548	; 0xd12c
   18bc8:	movt	r3, #2
   18bcc:	str	r2, [r3, #4]
   18bd0:	ldr	r3, [fp, #12]
   18bd4:	str	r3, [sp, #12]
   18bd8:	movw	r3, #53548	; 0xd12c
   18bdc:	movt	r3, #2
   18be0:	str	r3, [sp, #8]
   18be4:	ldr	r3, [fp, #8]
   18be8:	str	r3, [sp, #4]
   18bec:	ldr	r3, [fp, #4]
   18bf0:	str	r3, [sp]
   18bf4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18bf8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18bfc:	ldr	r1, [fp, #-20]	; 0xffffffec
   18c00:	ldr	r0, [fp, #-16]
   18c04:	bl	18238 <__assert_fail@plt+0x7460>
   18c08:	str	r0, [fp, #-8]
   18c0c:	movw	r3, #53548	; 0xd12c
   18c10:	movt	r3, #2
   18c14:	ldr	r2, [r3]
   18c18:	movw	r3, #53508	; 0xd104
   18c1c:	movt	r3, #2
   18c20:	str	r2, [r3]
   18c24:	movw	r3, #53548	; 0xd12c
   18c28:	movt	r3, #2
   18c2c:	ldr	r2, [r3, #12]
   18c30:	movw	r3, #53688	; 0xd1b8
   18c34:	movt	r3, #2
   18c38:	str	r2, [r3]
   18c3c:	movw	r3, #53548	; 0xd12c
   18c40:	movt	r3, #2
   18c44:	ldr	r2, [r3, #8]
   18c48:	movw	r3, #53516	; 0xd10c
   18c4c:	movt	r3, #2
   18c50:	str	r2, [r3]
   18c54:	ldr	r3, [fp, #-8]
   18c58:	mov	r0, r3
   18c5c:	sub	sp, fp, #4
   18c60:	ldr	fp, [sp]
   18c64:	add	sp, sp, #4
   18c68:	pop	{pc}		; (ldr pc, [sp], #4)
   18c6c:	str	fp, [sp, #-8]!
   18c70:	str	lr, [sp, #4]
   18c74:	add	fp, sp, #4
   18c78:	sub	sp, sp, #32
   18c7c:	str	r0, [fp, #-8]
   18c80:	str	r1, [fp, #-12]
   18c84:	str	r2, [fp, #-16]
   18c88:	mov	r3, #1
   18c8c:	str	r3, [sp, #8]
   18c90:	mov	r3, #0
   18c94:	str	r3, [sp, #4]
   18c98:	mov	r3, #0
   18c9c:	str	r3, [sp]
   18ca0:	mov	r3, #0
   18ca4:	ldr	r2, [fp, #-16]
   18ca8:	ldr	r1, [fp, #-12]
   18cac:	ldr	r0, [fp, #-8]
   18cb0:	bl	18b80 <__assert_fail@plt+0x7da8>
   18cb4:	mov	r3, r0
   18cb8:	mov	r0, r3
   18cbc:	sub	sp, fp, #4
   18cc0:	ldr	fp, [sp]
   18cc4:	add	sp, sp, #4
   18cc8:	pop	{pc}		; (ldr pc, [sp], #4)
   18ccc:	andeq	r0, r0, r0
   18cd0:	push	{fp}		; (str fp, [sp, #-4]!)
   18cd4:	add	fp, sp, #0
   18cd8:	sub	sp, sp, #12
   18cdc:	str	r0, [fp, #-8]
   18ce0:	ldr	r3, [fp, #-8]
   18ce4:	ldr	r3, [r3, #8]
   18ce8:	mov	r0, r3
   18cec:	add	sp, fp, #0
   18cf0:	pop	{fp}		; (ldr fp, [sp], #4)
   18cf4:	bx	lr
   18cf8:	push	{fp}		; (str fp, [sp, #-4]!)
   18cfc:	add	fp, sp, #0
   18d00:	sub	sp, sp, #12
   18d04:	str	r0, [fp, #-8]
   18d08:	ldr	r3, [fp, #-8]
   18d0c:	ldr	r3, [r3, #12]
   18d10:	mov	r0, r3
   18d14:	add	sp, fp, #0
   18d18:	pop	{fp}		; (ldr fp, [sp], #4)
   18d1c:	bx	lr
   18d20:	push	{fp}		; (str fp, [sp, #-4]!)
   18d24:	add	fp, sp, #0
   18d28:	sub	sp, sp, #12
   18d2c:	str	r0, [fp, #-8]
   18d30:	ldr	r3, [fp, #-8]
   18d34:	ldr	r3, [r3, #16]
   18d38:	mov	r0, r3
   18d3c:	add	sp, fp, #0
   18d40:	pop	{fp}		; (ldr fp, [sp], #4)
   18d44:	bx	lr
   18d48:	push	{fp}		; (str fp, [sp, #-4]!)
   18d4c:	add	fp, sp, #0
   18d50:	sub	sp, sp, #28
   18d54:	str	r0, [fp, #-24]	; 0xffffffe8
   18d58:	mov	r3, #0
   18d5c:	str	r3, [fp, #-12]
   18d60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18d64:	ldr	r3, [r3]
   18d68:	str	r3, [fp, #-8]
   18d6c:	b	18ddc <__assert_fail@plt+0x8004>
   18d70:	ldr	r3, [fp, #-8]
   18d74:	ldr	r3, [r3]
   18d78:	cmp	r3, #0
   18d7c:	beq	18dd0 <__assert_fail@plt+0x7ff8>
   18d80:	ldr	r3, [fp, #-8]
   18d84:	str	r3, [fp, #-16]
   18d88:	mov	r3, #1
   18d8c:	str	r3, [fp, #-20]	; 0xffffffec
   18d90:	b	18da0 <__assert_fail@plt+0x7fc8>
   18d94:	ldr	r3, [fp, #-20]	; 0xffffffec
   18d98:	add	r3, r3, #1
   18d9c:	str	r3, [fp, #-20]	; 0xffffffec
   18da0:	ldr	r3, [fp, #-16]
   18da4:	ldr	r3, [r3, #4]
   18da8:	str	r3, [fp, #-16]
   18dac:	ldr	r3, [fp, #-16]
   18db0:	cmp	r3, #0
   18db4:	bne	18d94 <__assert_fail@plt+0x7fbc>
   18db8:	ldr	r2, [fp, #-20]	; 0xffffffec
   18dbc:	ldr	r3, [fp, #-12]
   18dc0:	cmp	r2, r3
   18dc4:	bls	18dd0 <__assert_fail@plt+0x7ff8>
   18dc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   18dcc:	str	r3, [fp, #-12]
   18dd0:	ldr	r3, [fp, #-8]
   18dd4:	add	r3, r3, #8
   18dd8:	str	r3, [fp, #-8]
   18ddc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18de0:	ldr	r3, [r3, #4]
   18de4:	ldr	r2, [fp, #-8]
   18de8:	cmp	r2, r3
   18dec:	bcc	18d70 <__assert_fail@plt+0x7f98>
   18df0:	ldr	r3, [fp, #-12]
   18df4:	mov	r0, r3
   18df8:	add	sp, fp, #0
   18dfc:	pop	{fp}		; (ldr fp, [sp], #4)
   18e00:	bx	lr
   18e04:	push	{fp}		; (str fp, [sp, #-4]!)
   18e08:	add	fp, sp, #0
   18e0c:	sub	sp, sp, #28
   18e10:	str	r0, [fp, #-24]	; 0xffffffe8
   18e14:	mov	r3, #0
   18e18:	str	r3, [fp, #-12]
   18e1c:	mov	r3, #0
   18e20:	str	r3, [fp, #-16]
   18e24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18e28:	ldr	r3, [r3]
   18e2c:	str	r3, [fp, #-8]
   18e30:	b	18e98 <__assert_fail@plt+0x80c0>
   18e34:	ldr	r3, [fp, #-8]
   18e38:	ldr	r3, [r3]
   18e3c:	cmp	r3, #0
   18e40:	beq	18e8c <__assert_fail@plt+0x80b4>
   18e44:	ldr	r3, [fp, #-8]
   18e48:	str	r3, [fp, #-20]	; 0xffffffec
   18e4c:	ldr	r3, [fp, #-12]
   18e50:	add	r3, r3, #1
   18e54:	str	r3, [fp, #-12]
   18e58:	ldr	r3, [fp, #-16]
   18e5c:	add	r3, r3, #1
   18e60:	str	r3, [fp, #-16]
   18e64:	b	18e74 <__assert_fail@plt+0x809c>
   18e68:	ldr	r3, [fp, #-16]
   18e6c:	add	r3, r3, #1
   18e70:	str	r3, [fp, #-16]
   18e74:	ldr	r3, [fp, #-20]	; 0xffffffec
   18e78:	ldr	r3, [r3, #4]
   18e7c:	str	r3, [fp, #-20]	; 0xffffffec
   18e80:	ldr	r3, [fp, #-20]	; 0xffffffec
   18e84:	cmp	r3, #0
   18e88:	bne	18e68 <__assert_fail@plt+0x8090>
   18e8c:	ldr	r3, [fp, #-8]
   18e90:	add	r3, r3, #8
   18e94:	str	r3, [fp, #-8]
   18e98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18e9c:	ldr	r3, [r3, #4]
   18ea0:	ldr	r2, [fp, #-8]
   18ea4:	cmp	r2, r3
   18ea8:	bcc	18e34 <__assert_fail@plt+0x805c>
   18eac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18eb0:	ldr	r3, [r3, #12]
   18eb4:	ldr	r2, [fp, #-12]
   18eb8:	cmp	r2, r3
   18ebc:	bne	18edc <__assert_fail@plt+0x8104>
   18ec0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18ec4:	ldr	r3, [r3, #16]
   18ec8:	ldr	r2, [fp, #-16]
   18ecc:	cmp	r2, r3
   18ed0:	bne	18edc <__assert_fail@plt+0x8104>
   18ed4:	mov	r3, #1
   18ed8:	b	18ee0 <__assert_fail@plt+0x8108>
   18edc:	mov	r3, #0
   18ee0:	mov	r0, r3
   18ee4:	add	sp, fp, #0
   18ee8:	pop	{fp}		; (ldr fp, [sp], #4)
   18eec:	bx	lr
   18ef0:	str	fp, [sp, #-8]!
   18ef4:	str	lr, [sp, #4]
   18ef8:	add	fp, sp, #4
   18efc:	sub	sp, sp, #32
   18f00:	str	r0, [fp, #-24]	; 0xffffffe8
   18f04:	str	r1, [fp, #-28]	; 0xffffffe4
   18f08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f0c:	bl	18d20 <__assert_fail@plt+0x7f48>
   18f10:	str	r0, [fp, #-8]
   18f14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f18:	bl	18cd0 <__assert_fail@plt+0x7ef8>
   18f1c:	str	r0, [fp, #-12]
   18f20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f24:	bl	18cf8 <__assert_fail@plt+0x7f20>
   18f28:	str	r0, [fp, #-16]
   18f2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f30:	bl	18d48 <__assert_fail@plt+0x7f70>
   18f34:	str	r0, [fp, #-20]	; 0xffffffec
   18f38:	ldr	r2, [fp, #-8]
   18f3c:	movw	r1, #49088	; 0xbfc0
   18f40:	movt	r1, #1
   18f44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18f48:	bl	10cc4 <fprintf@plt>
   18f4c:	ldr	r2, [fp, #-12]
   18f50:	movw	r1, #49112	; 0xbfd8
   18f54:	movt	r1, #1
   18f58:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18f5c:	bl	10cc4 <fprintf@plt>
   18f60:	ldr	r3, [fp, #-16]
   18f64:	vmov	s15, r3
   18f68:	vcvt.f64.u32	d7, s15
   18f6c:	vldr	d6, [pc, #84]	; 18fc8 <__assert_fail@plt+0x81f0>
   18f70:	vmul.f64	d5, d7, d6
   18f74:	ldr	r3, [fp, #-12]
   18f78:	vmov	s15, r3
   18f7c:	vcvt.f64.u32	d6, s15
   18f80:	vdiv.f64	d7, d5, d6
   18f84:	vstr	d7, [sp]
   18f88:	ldr	r2, [fp, #-16]
   18f8c:	movw	r1, #49136	; 0xbff0
   18f90:	movt	r1, #1
   18f94:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18f98:	bl	10cc4 <fprintf@plt>
   18f9c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18fa0:	movw	r1, #49172	; 0xc014
   18fa4:	movt	r1, #1
   18fa8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18fac:	bl	10cc4 <fprintf@plt>
   18fb0:	nop	{0}
   18fb4:	sub	sp, fp, #4
   18fb8:	ldr	fp, [sp]
   18fbc:	add	sp, sp, #4
   18fc0:	pop	{pc}		; (ldr pc, [sp], #4)
   18fc4:	nop	{0}
   18fc8:	andeq	r0, r0, r0
   18fcc:	subsmi	r0, r9, r0
   18fd0:	str	fp, [sp, #-8]!
   18fd4:	str	lr, [sp, #4]
   18fd8:	add	fp, sp, #4
   18fdc:	sub	sp, sp, #16
   18fe0:	str	r0, [fp, #-16]
   18fe4:	str	r1, [fp, #-20]	; 0xffffffec
   18fe8:	ldr	r3, [fp, #-16]
   18fec:	ldr	r3, [r3, #24]
   18ff0:	ldr	r2, [fp, #-16]
   18ff4:	ldr	r2, [r2, #8]
   18ff8:	mov	r1, r2
   18ffc:	ldr	r0, [fp, #-20]	; 0xffffffec
   19000:	blx	r3
   19004:	str	r0, [fp, #-8]
   19008:	ldr	r3, [fp, #-16]
   1900c:	ldr	r3, [r3, #8]
   19010:	ldr	r2, [fp, #-8]
   19014:	cmp	r2, r3
   19018:	bcc	19020 <__assert_fail@plt+0x8248>
   1901c:	bl	10d9c <abort@plt>
   19020:	ldr	r3, [fp, #-16]
   19024:	ldr	r2, [r3]
   19028:	ldr	r3, [fp, #-8]
   1902c:	lsl	r3, r3, #3
   19030:	add	r3, r2, r3
   19034:	mov	r0, r3
   19038:	sub	sp, fp, #4
   1903c:	ldr	fp, [sp]
   19040:	add	sp, sp, #4
   19044:	pop	{pc}		; (ldr pc, [sp], #4)
   19048:	str	fp, [sp, #-8]!
   1904c:	str	lr, [sp, #4]
   19050:	add	fp, sp, #4
   19054:	sub	sp, sp, #16
   19058:	str	r0, [fp, #-16]
   1905c:	str	r1, [fp, #-20]	; 0xffffffec
   19060:	ldr	r1, [fp, #-20]	; 0xffffffec
   19064:	ldr	r0, [fp, #-16]
   19068:	bl	18fd0 <__assert_fail@plt+0x81f8>
   1906c:	str	r0, [fp, #-12]
   19070:	ldr	r3, [fp, #-12]
   19074:	ldr	r3, [r3]
   19078:	cmp	r3, #0
   1907c:	bne	19088 <__assert_fail@plt+0x82b0>
   19080:	mov	r3, #0
   19084:	b	190f8 <__assert_fail@plt+0x8320>
   19088:	ldr	r3, [fp, #-12]
   1908c:	str	r3, [fp, #-8]
   19090:	b	190e8 <__assert_fail@plt+0x8310>
   19094:	ldr	r3, [fp, #-8]
   19098:	ldr	r3, [r3]
   1909c:	ldr	r2, [fp, #-20]	; 0xffffffec
   190a0:	cmp	r2, r3
   190a4:	beq	190d0 <__assert_fail@plt+0x82f8>
   190a8:	ldr	r3, [fp, #-16]
   190ac:	ldr	r3, [r3, #28]
   190b0:	ldr	r2, [fp, #-8]
   190b4:	ldr	r2, [r2]
   190b8:	mov	r1, r2
   190bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   190c0:	blx	r3
   190c4:	mov	r3, r0
   190c8:	cmp	r3, #0
   190cc:	beq	190dc <__assert_fail@plt+0x8304>
   190d0:	ldr	r3, [fp, #-8]
   190d4:	ldr	r3, [r3]
   190d8:	b	190f8 <__assert_fail@plt+0x8320>
   190dc:	ldr	r3, [fp, #-8]
   190e0:	ldr	r3, [r3, #4]
   190e4:	str	r3, [fp, #-8]
   190e8:	ldr	r3, [fp, #-8]
   190ec:	cmp	r3, #0
   190f0:	bne	19094 <__assert_fail@plt+0x82bc>
   190f4:	mov	r3, #0
   190f8:	mov	r0, r3
   190fc:	sub	sp, fp, #4
   19100:	ldr	fp, [sp]
   19104:	add	sp, sp, #4
   19108:	pop	{pc}		; (ldr pc, [sp], #4)
   1910c:	str	fp, [sp, #-8]!
   19110:	str	lr, [sp, #4]
   19114:	add	fp, sp, #4
   19118:	sub	sp, sp, #16
   1911c:	str	r0, [fp, #-16]
   19120:	ldr	r3, [fp, #-16]
   19124:	ldr	r3, [r3, #16]
   19128:	cmp	r3, #0
   1912c:	bne	19138 <__assert_fail@plt+0x8360>
   19130:	mov	r3, #0
   19134:	b	19188 <__assert_fail@plt+0x83b0>
   19138:	ldr	r3, [fp, #-16]
   1913c:	ldr	r3, [r3]
   19140:	str	r3, [fp, #-8]
   19144:	ldr	r3, [fp, #-16]
   19148:	ldr	r3, [r3, #4]
   1914c:	ldr	r2, [fp, #-8]
   19150:	cmp	r2, r3
   19154:	bcc	1915c <__assert_fail@plt+0x8384>
   19158:	bl	10d9c <abort@plt>
   1915c:	ldr	r3, [fp, #-8]
   19160:	ldr	r3, [r3]
   19164:	cmp	r3, #0
   19168:	beq	19178 <__assert_fail@plt+0x83a0>
   1916c:	ldr	r3, [fp, #-8]
   19170:	ldr	r3, [r3]
   19174:	b	19188 <__assert_fail@plt+0x83b0>
   19178:	ldr	r3, [fp, #-8]
   1917c:	add	r3, r3, #8
   19180:	str	r3, [fp, #-8]
   19184:	b	19144 <__assert_fail@plt+0x836c>
   19188:	mov	r0, r3
   1918c:	sub	sp, fp, #4
   19190:	ldr	fp, [sp]
   19194:	add	sp, sp, #4
   19198:	pop	{pc}		; (ldr pc, [sp], #4)
   1919c:	str	fp, [sp, #-8]!
   191a0:	str	lr, [sp, #4]
   191a4:	add	fp, sp, #4
   191a8:	sub	sp, sp, #16
   191ac:	str	r0, [fp, #-16]
   191b0:	str	r1, [fp, #-20]	; 0xffffffec
   191b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   191b8:	ldr	r0, [fp, #-16]
   191bc:	bl	18fd0 <__assert_fail@plt+0x81f8>
   191c0:	str	r0, [fp, #-8]
   191c4:	ldr	r3, [fp, #-8]
   191c8:	str	r3, [fp, #-12]
   191cc:	ldr	r3, [fp, #-12]
   191d0:	ldr	r3, [r3]
   191d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   191d8:	cmp	r2, r3
   191dc:	bne	19200 <__assert_fail@plt+0x8428>
   191e0:	ldr	r3, [fp, #-12]
   191e4:	ldr	r3, [r3, #4]
   191e8:	cmp	r3, #0
   191ec:	beq	19200 <__assert_fail@plt+0x8428>
   191f0:	ldr	r3, [fp, #-12]
   191f4:	ldr	r3, [r3, #4]
   191f8:	ldr	r3, [r3]
   191fc:	b	1925c <__assert_fail@plt+0x8484>
   19200:	ldr	r3, [fp, #-12]
   19204:	ldr	r3, [r3, #4]
   19208:	str	r3, [fp, #-12]
   1920c:	ldr	r3, [fp, #-12]
   19210:	cmp	r3, #0
   19214:	bne	191cc <__assert_fail@plt+0x83f4>
   19218:	b	19238 <__assert_fail@plt+0x8460>
   1921c:	ldr	r3, [fp, #-8]
   19220:	ldr	r3, [r3]
   19224:	cmp	r3, #0
   19228:	beq	19238 <__assert_fail@plt+0x8460>
   1922c:	ldr	r3, [fp, #-8]
   19230:	ldr	r3, [r3]
   19234:	b	1925c <__assert_fail@plt+0x8484>
   19238:	ldr	r3, [fp, #-8]
   1923c:	add	r3, r3, #8
   19240:	str	r3, [fp, #-8]
   19244:	ldr	r3, [fp, #-16]
   19248:	ldr	r3, [r3, #4]
   1924c:	ldr	r2, [fp, #-8]
   19250:	cmp	r2, r3
   19254:	bcc	1921c <__assert_fail@plt+0x8444>
   19258:	mov	r3, #0
   1925c:	mov	r0, r3
   19260:	sub	sp, fp, #4
   19264:	ldr	fp, [sp]
   19268:	add	sp, sp, #4
   1926c:	pop	{pc}		; (ldr pc, [sp], #4)
   19270:	push	{fp}		; (str fp, [sp, #-4]!)
   19274:	add	fp, sp, #0
   19278:	sub	sp, sp, #36	; 0x24
   1927c:	str	r0, [fp, #-24]	; 0xffffffe8
   19280:	str	r1, [fp, #-28]	; 0xffffffe4
   19284:	str	r2, [fp, #-32]	; 0xffffffe0
   19288:	mov	r3, #0
   1928c:	str	r3, [fp, #-8]
   19290:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19294:	ldr	r3, [r3]
   19298:	str	r3, [fp, #-12]
   1929c:	b	1931c <__assert_fail@plt+0x8544>
   192a0:	ldr	r3, [fp, #-12]
   192a4:	ldr	r3, [r3]
   192a8:	cmp	r3, #0
   192ac:	beq	19310 <__assert_fail@plt+0x8538>
   192b0:	ldr	r3, [fp, #-12]
   192b4:	str	r3, [fp, #-16]
   192b8:	b	19304 <__assert_fail@plt+0x852c>
   192bc:	ldr	r2, [fp, #-8]
   192c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   192c4:	cmp	r2, r3
   192c8:	bcc	192d4 <__assert_fail@plt+0x84fc>
   192cc:	ldr	r3, [fp, #-8]
   192d0:	b	19334 <__assert_fail@plt+0x855c>
   192d4:	ldr	r3, [fp, #-8]
   192d8:	add	r2, r3, #1
   192dc:	str	r2, [fp, #-8]
   192e0:	lsl	r3, r3, #2
   192e4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   192e8:	add	r3, r2, r3
   192ec:	ldr	r2, [fp, #-16]
   192f0:	ldr	r2, [r2]
   192f4:	str	r2, [r3]
   192f8:	ldr	r3, [fp, #-16]
   192fc:	ldr	r3, [r3, #4]
   19300:	str	r3, [fp, #-16]
   19304:	ldr	r3, [fp, #-16]
   19308:	cmp	r3, #0
   1930c:	bne	192bc <__assert_fail@plt+0x84e4>
   19310:	ldr	r3, [fp, #-12]
   19314:	add	r3, r3, #8
   19318:	str	r3, [fp, #-12]
   1931c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19320:	ldr	r3, [r3, #4]
   19324:	ldr	r2, [fp, #-12]
   19328:	cmp	r2, r3
   1932c:	bcc	192a0 <__assert_fail@plt+0x84c8>
   19330:	ldr	r3, [fp, #-8]
   19334:	mov	r0, r3
   19338:	add	sp, fp, #0
   1933c:	pop	{fp}		; (ldr fp, [sp], #4)
   19340:	bx	lr
   19344:	str	fp, [sp, #-8]!
   19348:	str	lr, [sp, #4]
   1934c:	add	fp, sp, #4
   19350:	sub	sp, sp, #32
   19354:	str	r0, [fp, #-24]	; 0xffffffe8
   19358:	str	r1, [fp, #-28]	; 0xffffffe4
   1935c:	str	r2, [fp, #-32]	; 0xffffffe0
   19360:	mov	r3, #0
   19364:	str	r3, [fp, #-8]
   19368:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1936c:	ldr	r3, [r3]
   19370:	str	r3, [fp, #-12]
   19374:	b	193f8 <__assert_fail@plt+0x8620>
   19378:	ldr	r3, [fp, #-12]
   1937c:	ldr	r3, [r3]
   19380:	cmp	r3, #0
   19384:	beq	193ec <__assert_fail@plt+0x8614>
   19388:	ldr	r3, [fp, #-12]
   1938c:	str	r3, [fp, #-16]
   19390:	b	193e0 <__assert_fail@plt+0x8608>
   19394:	ldr	r3, [fp, #-16]
   19398:	ldr	r2, [r3]
   1939c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   193a0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   193a4:	mov	r0, r2
   193a8:	blx	r3
   193ac:	mov	r3, r0
   193b0:	eor	r3, r3, #1
   193b4:	uxtb	r3, r3
   193b8:	cmp	r3, #0
   193bc:	beq	193c8 <__assert_fail@plt+0x85f0>
   193c0:	ldr	r3, [fp, #-8]
   193c4:	b	19410 <__assert_fail@plt+0x8638>
   193c8:	ldr	r3, [fp, #-8]
   193cc:	add	r3, r3, #1
   193d0:	str	r3, [fp, #-8]
   193d4:	ldr	r3, [fp, #-16]
   193d8:	ldr	r3, [r3, #4]
   193dc:	str	r3, [fp, #-16]
   193e0:	ldr	r3, [fp, #-16]
   193e4:	cmp	r3, #0
   193e8:	bne	19394 <__assert_fail@plt+0x85bc>
   193ec:	ldr	r3, [fp, #-12]
   193f0:	add	r3, r3, #8
   193f4:	str	r3, [fp, #-12]
   193f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   193fc:	ldr	r3, [r3, #4]
   19400:	ldr	r2, [fp, #-12]
   19404:	cmp	r2, r3
   19408:	bcc	19378 <__assert_fail@plt+0x85a0>
   1940c:	ldr	r3, [fp, #-8]
   19410:	mov	r0, r3
   19414:	sub	sp, fp, #4
   19418:	ldr	fp, [sp]
   1941c:	add	sp, sp, #4
   19420:	pop	{pc}		; (ldr pc, [sp], #4)
   19424:	push	{fp}		; (str fp, [sp, #-4]!)
   19428:	add	fp, sp, #0
   1942c:	sub	sp, sp, #20
   19430:	str	r0, [fp, #-16]
   19434:	str	r1, [fp, #-20]	; 0xffffffec
   19438:	mov	r3, #0
   1943c:	str	r3, [fp, #-8]
   19440:	b	19480 <__assert_fail@plt+0x86a8>
   19444:	ldr	r2, [fp, #-8]
   19448:	mov	r3, r2
   1944c:	lsl	r3, r3, #5
   19450:	sub	r2, r3, r2
   19454:	ldrb	r3, [fp, #-9]
   19458:	add	r3, r2, r3
   1945c:	ldr	r2, [fp, #-20]	; 0xffffffec
   19460:	udiv	r2, r3, r2
   19464:	ldr	r1, [fp, #-20]	; 0xffffffec
   19468:	mul	r2, r1, r2
   1946c:	sub	r3, r3, r2
   19470:	str	r3, [fp, #-8]
   19474:	ldr	r3, [fp, #-16]
   19478:	add	r3, r3, #1
   1947c:	str	r3, [fp, #-16]
   19480:	ldr	r3, [fp, #-16]
   19484:	ldrb	r3, [r3]
   19488:	strb	r3, [fp, #-9]
   1948c:	ldrb	r3, [fp, #-9]
   19490:	cmp	r3, #0
   19494:	bne	19444 <__assert_fail@plt+0x866c>
   19498:	ldr	r3, [fp, #-8]
   1949c:	mov	r0, r3
   194a0:	add	sp, fp, #0
   194a4:	pop	{fp}		; (ldr fp, [sp], #4)
   194a8:	bx	lr
   194ac:	push	{fp}		; (str fp, [sp, #-4]!)
   194b0:	add	fp, sp, #0
   194b4:	sub	sp, sp, #20
   194b8:	str	r0, [fp, #-16]
   194bc:	mov	r3, #3
   194c0:	str	r3, [fp, #-8]
   194c4:	ldr	r3, [fp, #-8]
   194c8:	ldr	r2, [fp, #-8]
   194cc:	mul	r3, r2, r3
   194d0:	str	r3, [fp, #-12]
   194d4:	b	19504 <__assert_fail@plt+0x872c>
   194d8:	ldr	r3, [fp, #-8]
   194dc:	add	r3, r3, #1
   194e0:	str	r3, [fp, #-8]
   194e4:	ldr	r3, [fp, #-8]
   194e8:	lsl	r3, r3, #2
   194ec:	ldr	r2, [fp, #-12]
   194f0:	add	r3, r2, r3
   194f4:	str	r3, [fp, #-12]
   194f8:	ldr	r3, [fp, #-8]
   194fc:	add	r3, r3, #1
   19500:	str	r3, [fp, #-8]
   19504:	ldr	r2, [fp, #-12]
   19508:	ldr	r3, [fp, #-16]
   1950c:	cmp	r2, r3
   19510:	bcs	19534 <__assert_fail@plt+0x875c>
   19514:	ldr	r3, [fp, #-16]
   19518:	ldr	r2, [fp, #-8]
   1951c:	udiv	r2, r3, r2
   19520:	ldr	r1, [fp, #-8]
   19524:	mul	r2, r1, r2
   19528:	sub	r3, r3, r2
   1952c:	cmp	r3, #0
   19530:	bne	194d8 <__assert_fail@plt+0x8700>
   19534:	ldr	r3, [fp, #-16]
   19538:	ldr	r2, [fp, #-8]
   1953c:	udiv	r2, r3, r2
   19540:	ldr	r1, [fp, #-8]
   19544:	mul	r2, r1, r2
   19548:	sub	r3, r3, r2
   1954c:	cmp	r3, #0
   19550:	movne	r3, #1
   19554:	moveq	r3, #0
   19558:	uxtb	r3, r3
   1955c:	mov	r0, r3
   19560:	add	sp, fp, #0
   19564:	pop	{fp}		; (ldr fp, [sp], #4)
   19568:	bx	lr
   1956c:	str	fp, [sp, #-8]!
   19570:	str	lr, [sp, #4]
   19574:	add	fp, sp, #4
   19578:	sub	sp, sp, #8
   1957c:	str	r0, [fp, #-8]
   19580:	ldr	r3, [fp, #-8]
   19584:	cmp	r3, #9
   19588:	bhi	19594 <__assert_fail@plt+0x87bc>
   1958c:	mov	r3, #10
   19590:	str	r3, [fp, #-8]
   19594:	ldr	r3, [fp, #-8]
   19598:	orr	r3, r3, #1
   1959c:	str	r3, [fp, #-8]
   195a0:	b	195b0 <__assert_fail@plt+0x87d8>
   195a4:	ldr	r3, [fp, #-8]
   195a8:	add	r3, r3, #2
   195ac:	str	r3, [fp, #-8]
   195b0:	ldr	r3, [fp, #-8]
   195b4:	cmn	r3, #1
   195b8:	beq	195d8 <__assert_fail@plt+0x8800>
   195bc:	ldr	r0, [fp, #-8]
   195c0:	bl	194ac <__assert_fail@plt+0x86d4>
   195c4:	mov	r3, r0
   195c8:	eor	r3, r3, #1
   195cc:	uxtb	r3, r3
   195d0:	cmp	r3, #0
   195d4:	bne	195a4 <__assert_fail@plt+0x87cc>
   195d8:	ldr	r3, [fp, #-8]
   195dc:	mov	r0, r3
   195e0:	sub	sp, fp, #4
   195e4:	ldr	fp, [sp]
   195e8:	add	sp, sp, #4
   195ec:	pop	{pc}		; (ldr pc, [sp], #4)
   195f0:	push	{fp}		; (str fp, [sp, #-4]!)
   195f4:	add	fp, sp, #0
   195f8:	sub	sp, sp, #12
   195fc:	str	r0, [fp, #-8]
   19600:	ldr	r3, [fp, #-8]
   19604:	movw	r2, #49068	; 0xbfac
   19608:	movt	r2, #1
   1960c:	ldrd	r0, [r2]
   19610:	strd	r0, [r3]
   19614:	ldrd	r0, [r2, #8]
   19618:	strd	r0, [r3, #8]
   1961c:	ldr	r2, [r2, #16]
   19620:	str	r2, [r3, #16]
   19624:	nop	{0}
   19628:	add	sp, fp, #0
   1962c:	pop	{fp}		; (ldr fp, [sp], #4)
   19630:	bx	lr
   19634:	str	fp, [sp, #-8]!
   19638:	str	lr, [sp, #4]
   1963c:	add	fp, sp, #4
   19640:	sub	sp, sp, #16
   19644:	str	r0, [fp, #-16]
   19648:	str	r1, [fp, #-20]	; 0xffffffec
   1964c:	ldr	r3, [fp, #-16]
   19650:	mov	r1, #3
   19654:	mov	r0, r3
   19658:	bl	1b214 <__assert_fail@plt+0xa43c>
   1965c:	str	r0, [fp, #-8]
   19660:	ldr	r3, [fp, #-8]
   19664:	ldr	r2, [fp, #-20]	; 0xffffffec
   19668:	udiv	r2, r3, r2
   1966c:	ldr	r1, [fp, #-20]	; 0xffffffec
   19670:	mul	r2, r1, r2
   19674:	sub	r3, r3, r2
   19678:	mov	r0, r3
   1967c:	sub	sp, fp, #4
   19680:	ldr	fp, [sp]
   19684:	add	sp, sp, #4
   19688:	pop	{pc}		; (ldr pc, [sp], #4)
   1968c:	push	{fp}		; (str fp, [sp, #-4]!)
   19690:	add	fp, sp, #0
   19694:	sub	sp, sp, #12
   19698:	str	r0, [fp, #-8]
   1969c:	str	r1, [fp, #-12]
   196a0:	ldr	r2, [fp, #-8]
   196a4:	ldr	r3, [fp, #-12]
   196a8:	cmp	r2, r3
   196ac:	moveq	r3, #1
   196b0:	movne	r3, #0
   196b4:	uxtb	r3, r3
   196b8:	mov	r0, r3
   196bc:	add	sp, fp, #0
   196c0:	pop	{fp}		; (ldr fp, [sp], #4)
   196c4:	bx	lr
   196c8:	push	{fp}		; (str fp, [sp, #-4]!)
   196cc:	add	fp, sp, #0
   196d0:	sub	sp, sp, #20
   196d4:	str	r0, [fp, #-16]
   196d8:	ldr	r3, [fp, #-16]
   196dc:	ldr	r3, [r3, #20]
   196e0:	str	r3, [fp, #-8]
   196e4:	ldr	r2, [fp, #-8]
   196e8:	movw	r3, #49068	; 0xbfac
   196ec:	movt	r3, #1
   196f0:	cmp	r2, r3
   196f4:	bne	19700 <__assert_fail@plt+0x8928>
   196f8:	mov	r3, #1
   196fc:	b	197f4 <__assert_fail@plt+0x8a1c>
   19700:	movw	r3, #52429	; 0xcccd
   19704:	movt	r3, #15820	; 0x3dcc
   19708:	str	r3, [fp, #-12]
   1970c:	ldr	r3, [fp, #-8]
   19710:	vldr	s15, [r3, #8]
   19714:	vldr	s14, [fp, #-12]
   19718:	vcmpe.f32	s14, s15
   1971c:	vmrs	APSR_nzcv, fpscr
   19720:	bpl	197e0 <__assert_fail@plt+0x8a08>
   19724:	ldr	r3, [fp, #-8]
   19728:	vldr	s14, [r3, #8]
   1972c:	vldr	s13, [pc, #208]	; 19804 <__assert_fail@plt+0x8a2c>
   19730:	vldr	s15, [fp, #-12]
   19734:	vsub.f32	s15, s13, s15
   19738:	vcmpe.f32	s14, s15
   1973c:	vmrs	APSR_nzcv, fpscr
   19740:	bpl	197e0 <__assert_fail@plt+0x8a08>
   19744:	vldr	s15, [fp, #-12]
   19748:	vldr	s14, [pc, #180]	; 19804 <__assert_fail@plt+0x8a2c>
   1974c:	vadd.f32	s14, s15, s14
   19750:	ldr	r3, [fp, #-8]
   19754:	vldr	s15, [r3, #12]
   19758:	vcmpe.f32	s14, s15
   1975c:	vmrs	APSR_nzcv, fpscr
   19760:	bpl	197e0 <__assert_fail@plt+0x8a08>
   19764:	ldr	r3, [fp, #-8]
   19768:	vldr	s15, [r3]
   1976c:	vcmpe.f32	s15, #0.0
   19770:	vmrs	APSR_nzcv, fpscr
   19774:	blt	197e0 <__assert_fail@plt+0x8a08>
   19778:	ldr	r3, [fp, #-8]
   1977c:	vldr	s14, [r3]
   19780:	vldr	s15, [fp, #-12]
   19784:	vadd.f32	s14, s14, s15
   19788:	ldr	r3, [fp, #-8]
   1978c:	vldr	s15, [r3, #4]
   19790:	vcmpe.f32	s14, s15
   19794:	vmrs	APSR_nzcv, fpscr
   19798:	bpl	197e0 <__assert_fail@plt+0x8a08>
   1979c:	ldr	r3, [fp, #-8]
   197a0:	vldr	s15, [r3, #4]
   197a4:	vldr	s14, [pc, #88]	; 19804 <__assert_fail@plt+0x8a2c>
   197a8:	vcmpe.f32	s15, s14
   197ac:	vmrs	APSR_nzcv, fpscr
   197b0:	bhi	197e0 <__assert_fail@plt+0x8a08>
   197b4:	ldr	r3, [fp, #-8]
   197b8:	vldr	s14, [r3]
   197bc:	vldr	s15, [fp, #-12]
   197c0:	vadd.f32	s14, s14, s15
   197c4:	ldr	r3, [fp, #-8]
   197c8:	vldr	s15, [r3, #8]
   197cc:	vcmpe.f32	s14, s15
   197d0:	vmrs	APSR_nzcv, fpscr
   197d4:	bpl	197e0 <__assert_fail@plt+0x8a08>
   197d8:	mov	r3, #1
   197dc:	b	197f4 <__assert_fail@plt+0x8a1c>
   197e0:	ldr	r2, [fp, #-16]
   197e4:	movw	r3, #49068	; 0xbfac
   197e8:	movt	r3, #1
   197ec:	str	r3, [r2, #20]
   197f0:	mov	r3, #0
   197f4:	mov	r0, r3
   197f8:	add	sp, fp, #0
   197fc:	pop	{fp}		; (ldr fp, [sp], #4)
   19800:	bx	lr
   19804:	svccc	0x00800000
   19808:	str	fp, [sp, #-8]!
   1980c:	str	lr, [sp, #4]
   19810:	add	fp, sp, #4
   19814:	sub	sp, sp, #16
   19818:	str	r0, [fp, #-16]
   1981c:	str	r1, [fp, #-20]	; 0xffffffec
   19820:	ldr	r3, [fp, #-20]	; 0xffffffec
   19824:	ldrb	r3, [r3, #16]
   19828:	eor	r3, r3, #1
   1982c:	uxtb	r3, r3
   19830:	cmp	r3, #0
   19834:	beq	19880 <__assert_fail@plt+0x8aa8>
   19838:	ldr	r3, [fp, #-16]
   1983c:	vmov	s15, r3
   19840:	vcvt.f32.u32	s13, s15
   19844:	ldr	r3, [fp, #-20]	; 0xffffffec
   19848:	vldr	s14, [r3, #8]
   1984c:	vdiv.f32	s15, s13, s14
   19850:	vstr	s15, [fp, #-8]
   19854:	vldr	s15, [fp, #-8]
   19858:	vldr	s14, [pc, #136]	; 198e8 <__assert_fail@plt+0x8b10>
   1985c:	vcmpe.f32	s15, s14
   19860:	vmrs	APSR_nzcv, fpscr
   19864:	blt	19870 <__assert_fail@plt+0x8a98>
   19868:	mov	r3, #0
   1986c:	b	198d4 <__assert_fail@plt+0x8afc>
   19870:	vldr	s15, [fp, #-8]
   19874:	vcvt.u32.f32	s15, s15
   19878:	vmov	r3, s15
   1987c:	str	r3, [fp, #-16]
   19880:	ldr	r0, [fp, #-16]
   19884:	bl	1956c <__assert_fail@plt+0x8794>
   19888:	str	r0, [fp, #-16]
   1988c:	mov	r3, #0
   19890:	ldr	r2, [fp, #-16]
   19894:	lsl	r2, r2, #2
   19898:	ldr	r1, [fp, #-16]
   1989c:	lsr	r1, r1, #30
   198a0:	cmp	r1, #0
   198a4:	beq	198ac <__assert_fail@plt+0x8ad4>
   198a8:	mov	r3, #1
   198ac:	cmp	r2, #0
   198b0:	bge	198b8 <__assert_fail@plt+0x8ae0>
   198b4:	mov	r3, #1
   198b8:	and	r3, r3, #1
   198bc:	uxtb	r3, r3
   198c0:	cmp	r3, #0
   198c4:	beq	198d0 <__assert_fail@plt+0x8af8>
   198c8:	mov	r3, #0
   198cc:	b	198d4 <__assert_fail@plt+0x8afc>
   198d0:	ldr	r3, [fp, #-16]
   198d4:	mov	r0, r3
   198d8:	sub	sp, fp, #4
   198dc:	ldr	fp, [sp]
   198e0:	add	sp, sp, #4
   198e4:	pop	{pc}		; (ldr pc, [sp], #4)
   198e8:	svcmi	0x00800000
   198ec:	str	fp, [sp, #-8]!
   198f0:	str	lr, [sp, #4]
   198f4:	add	fp, sp, #4
   198f8:	sub	sp, sp, #24
   198fc:	str	r0, [fp, #-16]
   19900:	str	r1, [fp, #-20]	; 0xffffffec
   19904:	str	r2, [fp, #-24]	; 0xffffffe8
   19908:	str	r3, [fp, #-28]	; 0xffffffe4
   1990c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19910:	cmp	r3, #0
   19914:	bne	19924 <__assert_fail@plt+0x8b4c>
   19918:	movw	r3, #38452	; 0x9634
   1991c:	movt	r3, #1
   19920:	str	r3, [fp, #-24]	; 0xffffffe8
   19924:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19928:	cmp	r3, #0
   1992c:	bne	1993c <__assert_fail@plt+0x8b64>
   19930:	movw	r3, #38540	; 0x968c
   19934:	movt	r3, #1
   19938:	str	r3, [fp, #-28]	; 0xffffffe4
   1993c:	mov	r0, #40	; 0x28
   19940:	bl	1aef4 <__assert_fail@plt+0xa11c>
   19944:	mov	r3, r0
   19948:	str	r3, [fp, #-8]
   1994c:	ldr	r3, [fp, #-8]
   19950:	cmp	r3, #0
   19954:	bne	19960 <__assert_fail@plt+0x8b88>
   19958:	mov	r3, #0
   1995c:	b	19a8c <__assert_fail@plt+0x8cb4>
   19960:	ldr	r3, [fp, #-20]	; 0xffffffec
   19964:	cmp	r3, #0
   19968:	bne	19978 <__assert_fail@plt+0x8ba0>
   1996c:	movw	r3, #49068	; 0xbfac
   19970:	movt	r3, #1
   19974:	str	r3, [fp, #-20]	; 0xffffffec
   19978:	ldr	r3, [fp, #-8]
   1997c:	ldr	r2, [fp, #-20]	; 0xffffffec
   19980:	str	r2, [r3, #20]
   19984:	ldr	r0, [fp, #-8]
   19988:	bl	196c8 <__assert_fail@plt+0x88f0>
   1998c:	mov	r3, r0
   19990:	eor	r3, r3, #1
   19994:	uxtb	r3, r3
   19998:	cmp	r3, #0
   1999c:	bne	19a6c <__assert_fail@plt+0x8c94>
   199a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   199a4:	ldr	r0, [fp, #-16]
   199a8:	bl	19808 <__assert_fail@plt+0x8a30>
   199ac:	mov	r2, r0
   199b0:	ldr	r3, [fp, #-8]
   199b4:	str	r2, [r3, #8]
   199b8:	ldr	r3, [fp, #-8]
   199bc:	ldr	r3, [r3, #8]
   199c0:	cmp	r3, #0
   199c4:	beq	19a74 <__assert_fail@plt+0x8c9c>
   199c8:	ldr	r3, [fp, #-8]
   199cc:	ldr	r3, [r3, #8]
   199d0:	mov	r1, #8
   199d4:	mov	r0, r3
   199d8:	bl	1ae24 <__assert_fail@plt+0xa04c>
   199dc:	mov	r3, r0
   199e0:	mov	r2, r3
   199e4:	ldr	r3, [fp, #-8]
   199e8:	str	r2, [r3]
   199ec:	ldr	r3, [fp, #-8]
   199f0:	ldr	r3, [r3]
   199f4:	cmp	r3, #0
   199f8:	beq	19a7c <__assert_fail@plt+0x8ca4>
   199fc:	ldr	r3, [fp, #-8]
   19a00:	ldr	r2, [r3]
   19a04:	ldr	r3, [fp, #-8]
   19a08:	ldr	r3, [r3, #8]
   19a0c:	lsl	r3, r3, #3
   19a10:	add	r2, r2, r3
   19a14:	ldr	r3, [fp, #-8]
   19a18:	str	r2, [r3, #4]
   19a1c:	ldr	r3, [fp, #-8]
   19a20:	mov	r2, #0
   19a24:	str	r2, [r3, #12]
   19a28:	ldr	r3, [fp, #-8]
   19a2c:	mov	r2, #0
   19a30:	str	r2, [r3, #16]
   19a34:	ldr	r3, [fp, #-8]
   19a38:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19a3c:	str	r2, [r3, #24]
   19a40:	ldr	r3, [fp, #-8]
   19a44:	ldr	r2, [fp, #-28]	; 0xffffffe4
   19a48:	str	r2, [r3, #28]
   19a4c:	ldr	r3, [fp, #-8]
   19a50:	ldr	r2, [fp, #4]
   19a54:	str	r2, [r3, #32]
   19a58:	ldr	r3, [fp, #-8]
   19a5c:	mov	r2, #0
   19a60:	str	r2, [r3, #36]	; 0x24
   19a64:	ldr	r3, [fp, #-8]
   19a68:	b	19a8c <__assert_fail@plt+0x8cb4>
   19a6c:	nop	{0}
   19a70:	b	19a80 <__assert_fail@plt+0x8ca8>
   19a74:	nop	{0}
   19a78:	b	19a80 <__assert_fail@plt+0x8ca8>
   19a7c:	nop	{0}
   19a80:	ldr	r0, [fp, #-8]
   19a84:	bl	1430c <__assert_fail@plt+0x3534>
   19a88:	mov	r3, #0
   19a8c:	mov	r0, r3
   19a90:	sub	sp, fp, #4
   19a94:	ldr	fp, [sp]
   19a98:	add	sp, sp, #4
   19a9c:	pop	{pc}		; (ldr pc, [sp], #4)
   19aa0:	str	fp, [sp, #-8]!
   19aa4:	str	lr, [sp, #4]
   19aa8:	add	fp, sp, #4
   19aac:	sub	sp, sp, #24
   19ab0:	str	r0, [fp, #-24]	; 0xffffffe8
   19ab4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19ab8:	ldr	r3, [r3]
   19abc:	str	r3, [fp, #-8]
   19ac0:	b	19ba0 <__assert_fail@plt+0x8dc8>
   19ac4:	ldr	r3, [fp, #-8]
   19ac8:	ldr	r3, [r3]
   19acc:	cmp	r3, #0
   19ad0:	beq	19b94 <__assert_fail@plt+0x8dbc>
   19ad4:	ldr	r3, [fp, #-8]
   19ad8:	ldr	r3, [r3, #4]
   19adc:	str	r3, [fp, #-12]
   19ae0:	b	19b48 <__assert_fail@plt+0x8d70>
   19ae4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19ae8:	ldr	r3, [r3, #32]
   19aec:	cmp	r3, #0
   19af0:	beq	19b0c <__assert_fail@plt+0x8d34>
   19af4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19af8:	ldr	r3, [r3, #32]
   19afc:	ldr	r2, [fp, #-12]
   19b00:	ldr	r2, [r2]
   19b04:	mov	r0, r2
   19b08:	blx	r3
   19b0c:	ldr	r3, [fp, #-12]
   19b10:	mov	r2, #0
   19b14:	str	r2, [r3]
   19b18:	ldr	r3, [fp, #-12]
   19b1c:	ldr	r3, [r3, #4]
   19b20:	str	r3, [fp, #-16]
   19b24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19b28:	ldr	r2, [r3, #36]	; 0x24
   19b2c:	ldr	r3, [fp, #-12]
   19b30:	str	r2, [r3, #4]
   19b34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19b38:	ldr	r2, [fp, #-12]
   19b3c:	str	r2, [r3, #36]	; 0x24
   19b40:	ldr	r3, [fp, #-16]
   19b44:	str	r3, [fp, #-12]
   19b48:	ldr	r3, [fp, #-12]
   19b4c:	cmp	r3, #0
   19b50:	bne	19ae4 <__assert_fail@plt+0x8d0c>
   19b54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19b58:	ldr	r3, [r3, #32]
   19b5c:	cmp	r3, #0
   19b60:	beq	19b7c <__assert_fail@plt+0x8da4>
   19b64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19b68:	ldr	r3, [r3, #32]
   19b6c:	ldr	r2, [fp, #-8]
   19b70:	ldr	r2, [r2]
   19b74:	mov	r0, r2
   19b78:	blx	r3
   19b7c:	ldr	r3, [fp, #-8]
   19b80:	mov	r2, #0
   19b84:	str	r2, [r3]
   19b88:	ldr	r3, [fp, #-8]
   19b8c:	mov	r2, #0
   19b90:	str	r2, [r3, #4]
   19b94:	ldr	r3, [fp, #-8]
   19b98:	add	r3, r3, #8
   19b9c:	str	r3, [fp, #-8]
   19ba0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19ba4:	ldr	r3, [r3, #4]
   19ba8:	ldr	r2, [fp, #-8]
   19bac:	cmp	r2, r3
   19bb0:	bcc	19ac4 <__assert_fail@plt+0x8cec>
   19bb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19bb8:	mov	r2, #0
   19bbc:	str	r2, [r3, #12]
   19bc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19bc4:	mov	r2, #0
   19bc8:	str	r2, [r3, #16]
   19bcc:	nop	{0}
   19bd0:	sub	sp, fp, #4
   19bd4:	ldr	fp, [sp]
   19bd8:	add	sp, sp, #4
   19bdc:	pop	{pc}		; (ldr pc, [sp], #4)
   19be0:	str	fp, [sp, #-8]!
   19be4:	str	lr, [sp, #4]
   19be8:	add	fp, sp, #4
   19bec:	sub	sp, sp, #24
   19bf0:	str	r0, [fp, #-24]	; 0xffffffe8
   19bf4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19bf8:	ldr	r3, [r3, #32]
   19bfc:	cmp	r3, #0
   19c00:	beq	19c90 <__assert_fail@plt+0x8eb8>
   19c04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19c08:	ldr	r3, [r3, #16]
   19c0c:	cmp	r3, #0
   19c10:	beq	19c90 <__assert_fail@plt+0x8eb8>
   19c14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19c18:	ldr	r3, [r3]
   19c1c:	str	r3, [fp, #-8]
   19c20:	b	19c7c <__assert_fail@plt+0x8ea4>
   19c24:	ldr	r3, [fp, #-8]
   19c28:	ldr	r3, [r3]
   19c2c:	cmp	r3, #0
   19c30:	beq	19c70 <__assert_fail@plt+0x8e98>
   19c34:	ldr	r3, [fp, #-8]
   19c38:	str	r3, [fp, #-12]
   19c3c:	b	19c64 <__assert_fail@plt+0x8e8c>
   19c40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19c44:	ldr	r3, [r3, #32]
   19c48:	ldr	r2, [fp, #-12]
   19c4c:	ldr	r2, [r2]
   19c50:	mov	r0, r2
   19c54:	blx	r3
   19c58:	ldr	r3, [fp, #-12]
   19c5c:	ldr	r3, [r3, #4]
   19c60:	str	r3, [fp, #-12]
   19c64:	ldr	r3, [fp, #-12]
   19c68:	cmp	r3, #0
   19c6c:	bne	19c40 <__assert_fail@plt+0x8e68>
   19c70:	ldr	r3, [fp, #-8]
   19c74:	add	r3, r3, #8
   19c78:	str	r3, [fp, #-8]
   19c7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19c80:	ldr	r3, [r3, #4]
   19c84:	ldr	r2, [fp, #-8]
   19c88:	cmp	r2, r3
   19c8c:	bcc	19c24 <__assert_fail@plt+0x8e4c>
   19c90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19c94:	ldr	r3, [r3]
   19c98:	str	r3, [fp, #-8]
   19c9c:	b	19ce4 <__assert_fail@plt+0x8f0c>
   19ca0:	ldr	r3, [fp, #-8]
   19ca4:	ldr	r3, [r3, #4]
   19ca8:	str	r3, [fp, #-12]
   19cac:	b	19ccc <__assert_fail@plt+0x8ef4>
   19cb0:	ldr	r3, [fp, #-12]
   19cb4:	ldr	r3, [r3, #4]
   19cb8:	str	r3, [fp, #-16]
   19cbc:	ldr	r0, [fp, #-12]
   19cc0:	bl	1430c <__assert_fail@plt+0x3534>
   19cc4:	ldr	r3, [fp, #-16]
   19cc8:	str	r3, [fp, #-12]
   19ccc:	ldr	r3, [fp, #-12]
   19cd0:	cmp	r3, #0
   19cd4:	bne	19cb0 <__assert_fail@plt+0x8ed8>
   19cd8:	ldr	r3, [fp, #-8]
   19cdc:	add	r3, r3, #8
   19ce0:	str	r3, [fp, #-8]
   19ce4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19ce8:	ldr	r3, [r3, #4]
   19cec:	ldr	r2, [fp, #-8]
   19cf0:	cmp	r2, r3
   19cf4:	bcc	19ca0 <__assert_fail@plt+0x8ec8>
   19cf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19cfc:	ldr	r3, [r3, #36]	; 0x24
   19d00:	str	r3, [fp, #-12]
   19d04:	b	19d24 <__assert_fail@plt+0x8f4c>
   19d08:	ldr	r3, [fp, #-12]
   19d0c:	ldr	r3, [r3, #4]
   19d10:	str	r3, [fp, #-16]
   19d14:	ldr	r0, [fp, #-12]
   19d18:	bl	1430c <__assert_fail@plt+0x3534>
   19d1c:	ldr	r3, [fp, #-16]
   19d20:	str	r3, [fp, #-12]
   19d24:	ldr	r3, [fp, #-12]
   19d28:	cmp	r3, #0
   19d2c:	bne	19d08 <__assert_fail@plt+0x8f30>
   19d30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19d34:	ldr	r3, [r3]
   19d38:	mov	r0, r3
   19d3c:	bl	1430c <__assert_fail@plt+0x3534>
   19d40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d44:	bl	1430c <__assert_fail@plt+0x3534>
   19d48:	nop	{0}
   19d4c:	sub	sp, fp, #4
   19d50:	ldr	fp, [sp]
   19d54:	add	sp, sp, #4
   19d58:	pop	{pc}		; (ldr pc, [sp], #4)
   19d5c:	str	fp, [sp, #-8]!
   19d60:	str	lr, [sp, #4]
   19d64:	add	fp, sp, #4
   19d68:	sub	sp, sp, #16
   19d6c:	str	r0, [fp, #-16]
   19d70:	ldr	r3, [fp, #-16]
   19d74:	ldr	r3, [r3, #36]	; 0x24
   19d78:	cmp	r3, #0
   19d7c:	beq	19da0 <__assert_fail@plt+0x8fc8>
   19d80:	ldr	r3, [fp, #-16]
   19d84:	ldr	r3, [r3, #36]	; 0x24
   19d88:	str	r3, [fp, #-8]
   19d8c:	ldr	r3, [fp, #-8]
   19d90:	ldr	r2, [r3, #4]
   19d94:	ldr	r3, [fp, #-16]
   19d98:	str	r2, [r3, #36]	; 0x24
   19d9c:	b	19db0 <__assert_fail@plt+0x8fd8>
   19da0:	mov	r0, #8
   19da4:	bl	1aef4 <__assert_fail@plt+0xa11c>
   19da8:	mov	r3, r0
   19dac:	str	r3, [fp, #-8]
   19db0:	ldr	r3, [fp, #-8]
   19db4:	mov	r0, r3
   19db8:	sub	sp, fp, #4
   19dbc:	ldr	fp, [sp]
   19dc0:	add	sp, sp, #4
   19dc4:	pop	{pc}		; (ldr pc, [sp], #4)
   19dc8:	push	{fp}		; (str fp, [sp, #-4]!)
   19dcc:	add	fp, sp, #0
   19dd0:	sub	sp, sp, #12
   19dd4:	str	r0, [fp, #-8]
   19dd8:	str	r1, [fp, #-12]
   19ddc:	ldr	r3, [fp, #-12]
   19de0:	mov	r2, #0
   19de4:	str	r2, [r3]
   19de8:	ldr	r3, [fp, #-8]
   19dec:	ldr	r2, [r3, #36]	; 0x24
   19df0:	ldr	r3, [fp, #-12]
   19df4:	str	r2, [r3, #4]
   19df8:	ldr	r3, [fp, #-8]
   19dfc:	ldr	r2, [fp, #-12]
   19e00:	str	r2, [r3, #36]	; 0x24
   19e04:	nop	{0}
   19e08:	add	sp, fp, #0
   19e0c:	pop	{fp}		; (ldr fp, [sp], #4)
   19e10:	bx	lr
   19e14:	str	fp, [sp, #-8]!
   19e18:	str	lr, [sp, #4]
   19e1c:	add	fp, sp, #4
   19e20:	sub	sp, sp, #40	; 0x28
   19e24:	str	r0, [fp, #-32]	; 0xffffffe0
   19e28:	str	r1, [fp, #-36]	; 0xffffffdc
   19e2c:	str	r2, [fp, #-40]	; 0xffffffd8
   19e30:	strb	r3, [fp, #-41]	; 0xffffffd7
   19e34:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19e38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19e3c:	bl	18fd0 <__assert_fail@plt+0x81f8>
   19e40:	str	r0, [fp, #-12]
   19e44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19e48:	ldr	r2, [fp, #-12]
   19e4c:	str	r2, [r3]
   19e50:	ldr	r3, [fp, #-12]
   19e54:	ldr	r3, [r3]
   19e58:	cmp	r3, #0
   19e5c:	bne	19e68 <__assert_fail@plt+0x9090>
   19e60:	mov	r3, #0
   19e64:	b	19fcc <__assert_fail@plt+0x91f4>
   19e68:	ldr	r3, [fp, #-12]
   19e6c:	ldr	r3, [r3]
   19e70:	ldr	r2, [fp, #-36]	; 0xffffffdc
   19e74:	cmp	r2, r3
   19e78:	beq	19ea4 <__assert_fail@plt+0x90cc>
   19e7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19e80:	ldr	r3, [r3, #28]
   19e84:	ldr	r2, [fp, #-12]
   19e88:	ldr	r2, [r2]
   19e8c:	mov	r1, r2
   19e90:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19e94:	blx	r3
   19e98:	mov	r3, r0
   19e9c:	cmp	r3, #0
   19ea0:	beq	19f10 <__assert_fail@plt+0x9138>
   19ea4:	ldr	r3, [fp, #-12]
   19ea8:	ldr	r3, [r3]
   19eac:	str	r3, [fp, #-24]	; 0xffffffe8
   19eb0:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   19eb4:	cmp	r3, #0
   19eb8:	beq	19f08 <__assert_fail@plt+0x9130>
   19ebc:	ldr	r3, [fp, #-12]
   19ec0:	ldr	r3, [r3, #4]
   19ec4:	cmp	r3, #0
   19ec8:	beq	19efc <__assert_fail@plt+0x9124>
   19ecc:	ldr	r3, [fp, #-12]
   19ed0:	ldr	r3, [r3, #4]
   19ed4:	str	r3, [fp, #-28]	; 0xffffffe4
   19ed8:	ldr	r2, [fp, #-12]
   19edc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19ee0:	mov	r1, r2
   19ee4:	ldrd	r2, [r3]
   19ee8:	strd	r2, [r1]
   19eec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19ef0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19ef4:	bl	19dc8 <__assert_fail@plt+0x8ff0>
   19ef8:	b	19f08 <__assert_fail@plt+0x9130>
   19efc:	ldr	r3, [fp, #-12]
   19f00:	mov	r2, #0
   19f04:	str	r2, [r3]
   19f08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19f0c:	b	19fcc <__assert_fail@plt+0x91f4>
   19f10:	ldr	r3, [fp, #-12]
   19f14:	str	r3, [fp, #-8]
   19f18:	b	19fb8 <__assert_fail@plt+0x91e0>
   19f1c:	ldr	r3, [fp, #-8]
   19f20:	ldr	r3, [r3, #4]
   19f24:	ldr	r3, [r3]
   19f28:	ldr	r2, [fp, #-36]	; 0xffffffdc
   19f2c:	cmp	r2, r3
   19f30:	beq	19f60 <__assert_fail@plt+0x9188>
   19f34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19f38:	ldr	r3, [r3, #28]
   19f3c:	ldr	r2, [fp, #-8]
   19f40:	ldr	r2, [r2, #4]
   19f44:	ldr	r2, [r2]
   19f48:	mov	r1, r2
   19f4c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19f50:	blx	r3
   19f54:	mov	r3, r0
   19f58:	cmp	r3, #0
   19f5c:	beq	19fac <__assert_fail@plt+0x91d4>
   19f60:	ldr	r3, [fp, #-8]
   19f64:	ldr	r3, [r3, #4]
   19f68:	ldr	r3, [r3]
   19f6c:	str	r3, [fp, #-16]
   19f70:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   19f74:	cmp	r3, #0
   19f78:	beq	19fa4 <__assert_fail@plt+0x91cc>
   19f7c:	ldr	r3, [fp, #-8]
   19f80:	ldr	r3, [r3, #4]
   19f84:	str	r3, [fp, #-20]	; 0xffffffec
   19f88:	ldr	r3, [fp, #-20]	; 0xffffffec
   19f8c:	ldr	r2, [r3, #4]
   19f90:	ldr	r3, [fp, #-8]
   19f94:	str	r2, [r3, #4]
   19f98:	ldr	r1, [fp, #-20]	; 0xffffffec
   19f9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19fa0:	bl	19dc8 <__assert_fail@plt+0x8ff0>
   19fa4:	ldr	r3, [fp, #-16]
   19fa8:	b	19fcc <__assert_fail@plt+0x91f4>
   19fac:	ldr	r3, [fp, #-8]
   19fb0:	ldr	r3, [r3, #4]
   19fb4:	str	r3, [fp, #-8]
   19fb8:	ldr	r3, [fp, #-8]
   19fbc:	ldr	r3, [r3, #4]
   19fc0:	cmp	r3, #0
   19fc4:	bne	19f1c <__assert_fail@plt+0x9144>
   19fc8:	mov	r3, #0
   19fcc:	mov	r0, r3
   19fd0:	sub	sp, fp, #4
   19fd4:	ldr	fp, [sp]
   19fd8:	add	sp, sp, #4
   19fdc:	pop	{pc}		; (ldr pc, [sp], #4)
   19fe0:	str	fp, [sp, #-8]!
   19fe4:	str	lr, [sp, #4]
   19fe8:	add	fp, sp, #4
   19fec:	sub	sp, sp, #40	; 0x28
   19ff0:	str	r0, [fp, #-32]	; 0xffffffe0
   19ff4:	str	r1, [fp, #-36]	; 0xffffffdc
   19ff8:	mov	r3, r2
   19ffc:	strb	r3, [fp, #-37]	; 0xffffffdb
   1a000:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a004:	ldr	r3, [r3]
   1a008:	str	r3, [fp, #-8]
   1a00c:	b	1a1ac <__assert_fail@plt+0x93d4>
   1a010:	ldr	r3, [fp, #-8]
   1a014:	ldr	r3, [r3]
   1a018:	cmp	r3, #0
   1a01c:	beq	1a1a0 <__assert_fail@plt+0x93c8>
   1a020:	ldr	r3, [fp, #-8]
   1a024:	ldr	r3, [r3, #4]
   1a028:	str	r3, [fp, #-12]
   1a02c:	b	1a0bc <__assert_fail@plt+0x92e4>
   1a030:	ldr	r3, [fp, #-12]
   1a034:	ldr	r3, [r3]
   1a038:	str	r3, [fp, #-16]
   1a03c:	ldr	r1, [fp, #-16]
   1a040:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a044:	bl	18fd0 <__assert_fail@plt+0x81f8>
   1a048:	str	r0, [fp, #-20]	; 0xffffffec
   1a04c:	ldr	r3, [fp, #-12]
   1a050:	ldr	r3, [r3, #4]
   1a054:	str	r3, [fp, #-24]	; 0xffffffe8
   1a058:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a05c:	ldr	r3, [r3]
   1a060:	cmp	r3, #0
   1a064:	beq	1a088 <__assert_fail@plt+0x92b0>
   1a068:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a06c:	ldr	r2, [r3, #4]
   1a070:	ldr	r3, [fp, #-12]
   1a074:	str	r2, [r3, #4]
   1a078:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a07c:	ldr	r2, [fp, #-12]
   1a080:	str	r2, [r3, #4]
   1a084:	b	1a0b4 <__assert_fail@plt+0x92dc>
   1a088:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a08c:	ldr	r2, [fp, #-16]
   1a090:	str	r2, [r3]
   1a094:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a098:	ldr	r3, [r3, #12]
   1a09c:	add	r2, r3, #1
   1a0a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a0a4:	str	r2, [r3, #12]
   1a0a8:	ldr	r1, [fp, #-12]
   1a0ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a0b0:	bl	19dc8 <__assert_fail@plt+0x8ff0>
   1a0b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a0b8:	str	r3, [fp, #-12]
   1a0bc:	ldr	r3, [fp, #-12]
   1a0c0:	cmp	r3, #0
   1a0c4:	bne	1a030 <__assert_fail@plt+0x9258>
   1a0c8:	ldr	r3, [fp, #-8]
   1a0cc:	ldr	r3, [r3]
   1a0d0:	str	r3, [fp, #-16]
   1a0d4:	ldr	r3, [fp, #-8]
   1a0d8:	mov	r2, #0
   1a0dc:	str	r2, [r3, #4]
   1a0e0:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   1a0e4:	cmp	r3, #0
   1a0e8:	bne	1a19c <__assert_fail@plt+0x93c4>
   1a0ec:	ldr	r1, [fp, #-16]
   1a0f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a0f4:	bl	18fd0 <__assert_fail@plt+0x81f8>
   1a0f8:	str	r0, [fp, #-20]	; 0xffffffec
   1a0fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a100:	ldr	r3, [r3]
   1a104:	cmp	r3, #0
   1a108:	beq	1a158 <__assert_fail@plt+0x9380>
   1a10c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a110:	bl	19d5c <__assert_fail@plt+0x8f84>
   1a114:	str	r0, [fp, #-28]	; 0xffffffe4
   1a118:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a11c:	cmp	r3, #0
   1a120:	bne	1a12c <__assert_fail@plt+0x9354>
   1a124:	mov	r3, #0
   1a128:	b	1a1c4 <__assert_fail@plt+0x93ec>
   1a12c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a130:	ldr	r2, [fp, #-16]
   1a134:	str	r2, [r3]
   1a138:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a13c:	ldr	r2, [r3, #4]
   1a140:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a144:	str	r2, [r3, #4]
   1a148:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a14c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1a150:	str	r2, [r3, #4]
   1a154:	b	1a178 <__assert_fail@plt+0x93a0>
   1a158:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a15c:	ldr	r2, [fp, #-16]
   1a160:	str	r2, [r3]
   1a164:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a168:	ldr	r3, [r3, #12]
   1a16c:	add	r2, r3, #1
   1a170:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a174:	str	r2, [r3, #12]
   1a178:	ldr	r3, [fp, #-8]
   1a17c:	mov	r2, #0
   1a180:	str	r2, [r3]
   1a184:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a188:	ldr	r3, [r3, #12]
   1a18c:	sub	r2, r3, #1
   1a190:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a194:	str	r2, [r3, #12]
   1a198:	b	1a1a0 <__assert_fail@plt+0x93c8>
   1a19c:	nop	{0}
   1a1a0:	ldr	r3, [fp, #-8]
   1a1a4:	add	r3, r3, #8
   1a1a8:	str	r3, [fp, #-8]
   1a1ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a1b0:	ldr	r3, [r3, #4]
   1a1b4:	ldr	r2, [fp, #-8]
   1a1b8:	cmp	r2, r3
   1a1bc:	bcc	1a010 <__assert_fail@plt+0x9238>
   1a1c0:	mov	r3, #1
   1a1c4:	mov	r0, r3
   1a1c8:	sub	sp, fp, #4
   1a1cc:	ldr	fp, [sp]
   1a1d0:	add	sp, sp, #4
   1a1d4:	pop	{pc}		; (ldr pc, [sp], #4)
   1a1d8:	str	fp, [sp, #-8]!
   1a1dc:	str	lr, [sp, #4]
   1a1e0:	add	fp, sp, #4
   1a1e4:	sub	sp, sp, #56	; 0x38
   1a1e8:	str	r0, [fp, #-56]	; 0xffffffc8
   1a1ec:	str	r1, [fp, #-60]	; 0xffffffc4
   1a1f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a1f4:	ldr	r3, [r3, #20]
   1a1f8:	mov	r1, r3
   1a1fc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1a200:	bl	19808 <__assert_fail@plt+0x8a30>
   1a204:	str	r0, [fp, #-8]
   1a208:	ldr	r3, [fp, #-8]
   1a20c:	cmp	r3, #0
   1a210:	bne	1a21c <__assert_fail@plt+0x9444>
   1a214:	mov	r3, #0
   1a218:	b	1a3f8 <__assert_fail@plt+0x9620>
   1a21c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a220:	ldr	r3, [r3, #8]
   1a224:	ldr	r2, [fp, #-8]
   1a228:	cmp	r2, r3
   1a22c:	bne	1a238 <__assert_fail@plt+0x9460>
   1a230:	mov	r3, #1
   1a234:	b	1a3f8 <__assert_fail@plt+0x9620>
   1a238:	sub	r3, fp, #52	; 0x34
   1a23c:	str	r3, [fp, #-12]
   1a240:	mov	r1, #8
   1a244:	ldr	r0, [fp, #-8]
   1a248:	bl	1ae24 <__assert_fail@plt+0xa04c>
   1a24c:	mov	r3, r0
   1a250:	mov	r2, r3
   1a254:	ldr	r3, [fp, #-12]
   1a258:	str	r2, [r3]
   1a25c:	ldr	r3, [fp, #-12]
   1a260:	ldr	r3, [r3]
   1a264:	cmp	r3, #0
   1a268:	bne	1a274 <__assert_fail@plt+0x949c>
   1a26c:	mov	r3, #0
   1a270:	b	1a3f8 <__assert_fail@plt+0x9620>
   1a274:	ldr	r3, [fp, #-12]
   1a278:	ldr	r2, [fp, #-8]
   1a27c:	str	r2, [r3, #8]
   1a280:	ldr	r3, [fp, #-12]
   1a284:	ldr	r2, [r3]
   1a288:	ldr	r3, [fp, #-8]
   1a28c:	lsl	r3, r3, #3
   1a290:	add	r2, r2, r3
   1a294:	ldr	r3, [fp, #-12]
   1a298:	str	r2, [r3, #4]
   1a29c:	ldr	r3, [fp, #-12]
   1a2a0:	mov	r2, #0
   1a2a4:	str	r2, [r3, #12]
   1a2a8:	ldr	r3, [fp, #-12]
   1a2ac:	mov	r2, #0
   1a2b0:	str	r2, [r3, #16]
   1a2b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a2b8:	ldr	r2, [r3, #20]
   1a2bc:	ldr	r3, [fp, #-12]
   1a2c0:	str	r2, [r3, #20]
   1a2c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a2c8:	ldr	r2, [r3, #24]
   1a2cc:	ldr	r3, [fp, #-12]
   1a2d0:	str	r2, [r3, #24]
   1a2d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a2d8:	ldr	r2, [r3, #28]
   1a2dc:	ldr	r3, [fp, #-12]
   1a2e0:	str	r2, [r3, #28]
   1a2e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a2e8:	ldr	r2, [r3, #32]
   1a2ec:	ldr	r3, [fp, #-12]
   1a2f0:	str	r2, [r3, #32]
   1a2f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a2f8:	ldr	r2, [r3, #36]	; 0x24
   1a2fc:	ldr	r3, [fp, #-12]
   1a300:	str	r2, [r3, #36]	; 0x24
   1a304:	mov	r2, #0
   1a308:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1a30c:	ldr	r0, [fp, #-12]
   1a310:	bl	19fe0 <__assert_fail@plt+0x9208>
   1a314:	mov	r3, r0
   1a318:	cmp	r3, #0
   1a31c:	beq	1a388 <__assert_fail@plt+0x95b0>
   1a320:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a324:	ldr	r3, [r3]
   1a328:	mov	r0, r3
   1a32c:	bl	1430c <__assert_fail@plt+0x3534>
   1a330:	ldr	r3, [fp, #-12]
   1a334:	ldr	r2, [r3]
   1a338:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a33c:	str	r2, [r3]
   1a340:	ldr	r3, [fp, #-12]
   1a344:	ldr	r2, [r3, #4]
   1a348:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a34c:	str	r2, [r3, #4]
   1a350:	ldr	r3, [fp, #-12]
   1a354:	ldr	r2, [r3, #8]
   1a358:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a35c:	str	r2, [r3, #8]
   1a360:	ldr	r3, [fp, #-12]
   1a364:	ldr	r2, [r3, #12]
   1a368:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a36c:	str	r2, [r3, #12]
   1a370:	ldr	r3, [fp, #-12]
   1a374:	ldr	r2, [r3, #36]	; 0x24
   1a378:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a37c:	str	r2, [r3, #36]	; 0x24
   1a380:	mov	r3, #1
   1a384:	b	1a3f8 <__assert_fail@plt+0x9620>
   1a388:	ldr	r3, [fp, #-12]
   1a38c:	ldr	r2, [r3, #36]	; 0x24
   1a390:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a394:	str	r2, [r3, #36]	; 0x24
   1a398:	mov	r2, #1
   1a39c:	ldr	r1, [fp, #-12]
   1a3a0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a3a4:	bl	19fe0 <__assert_fail@plt+0x9208>
   1a3a8:	mov	r3, r0
   1a3ac:	eor	r3, r3, #1
   1a3b0:	uxtb	r3, r3
   1a3b4:	cmp	r3, #0
   1a3b8:	bne	1a3e0 <__assert_fail@plt+0x9608>
   1a3bc:	mov	r2, #0
   1a3c0:	ldr	r1, [fp, #-12]
   1a3c4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a3c8:	bl	19fe0 <__assert_fail@plt+0x9208>
   1a3cc:	mov	r3, r0
   1a3d0:	eor	r3, r3, #1
   1a3d4:	uxtb	r3, r3
   1a3d8:	cmp	r3, #0
   1a3dc:	beq	1a3e4 <__assert_fail@plt+0x960c>
   1a3e0:	bl	10d9c <abort@plt>
   1a3e4:	ldr	r3, [fp, #-12]
   1a3e8:	ldr	r3, [r3]
   1a3ec:	mov	r0, r3
   1a3f0:	bl	1430c <__assert_fail@plt+0x3534>
   1a3f4:	mov	r3, #0
   1a3f8:	mov	r0, r3
   1a3fc:	sub	sp, fp, #4
   1a400:	ldr	fp, [sp]
   1a404:	add	sp, sp, #4
   1a408:	pop	{pc}		; (ldr pc, [sp], #4)
   1a40c:	str	fp, [sp, #-8]!
   1a410:	str	lr, [sp, #4]
   1a414:	add	fp, sp, #4
   1a418:	sub	sp, sp, #40	; 0x28
   1a41c:	str	r0, [fp, #-32]	; 0xffffffe0
   1a420:	str	r1, [fp, #-36]	; 0xffffffdc
   1a424:	str	r2, [fp, #-40]	; 0xffffffd8
   1a428:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a42c:	cmp	r3, #0
   1a430:	bne	1a438 <__assert_fail@plt+0x9660>
   1a434:	bl	10d9c <abort@plt>
   1a438:	sub	r2, fp, #24
   1a43c:	mov	r3, #0
   1a440:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a444:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a448:	bl	19e14 <__assert_fail@plt+0x903c>
   1a44c:	str	r0, [fp, #-8]
   1a450:	ldr	r3, [fp, #-8]
   1a454:	cmp	r3, #0
   1a458:	beq	1a47c <__assert_fail@plt+0x96a4>
   1a45c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a460:	cmp	r3, #0
   1a464:	beq	1a474 <__assert_fail@plt+0x969c>
   1a468:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a46c:	ldr	r2, [fp, #-8]
   1a470:	str	r2, [r3]
   1a474:	mov	r3, #0
   1a478:	b	1a680 <__assert_fail@plt+0x98a8>
   1a47c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a480:	ldr	r3, [r3, #12]
   1a484:	vmov	s15, r3
   1a488:	vcvt.f32.u32	s14, s15
   1a48c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a490:	ldr	r3, [r3, #20]
   1a494:	vldr	s13, [r3, #8]
   1a498:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a49c:	ldr	r3, [r3, #8]
   1a4a0:	vmov	s15, r3
   1a4a4:	vcvt.f32.u32	s15, s15
   1a4a8:	vmul.f32	s15, s13, s15
   1a4ac:	vcmpe.f32	s14, s15
   1a4b0:	vmrs	APSR_nzcv, fpscr
   1a4b4:	ble	1a5d4 <__assert_fail@plt+0x97fc>
   1a4b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a4bc:	bl	196c8 <__assert_fail@plt+0x88f0>
   1a4c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a4c4:	ldr	r3, [r3, #12]
   1a4c8:	vmov	s15, r3
   1a4cc:	vcvt.f32.u32	s14, s15
   1a4d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a4d4:	ldr	r3, [r3, #20]
   1a4d8:	vldr	s13, [r3, #8]
   1a4dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a4e0:	ldr	r3, [r3, #8]
   1a4e4:	vmov	s15, r3
   1a4e8:	vcvt.f32.u32	s15, s15
   1a4ec:	vmul.f32	s15, s13, s15
   1a4f0:	vcmpe.f32	s14, s15
   1a4f4:	vmrs	APSR_nzcv, fpscr
   1a4f8:	ble	1a5d4 <__assert_fail@plt+0x97fc>
   1a4fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a500:	ldr	r3, [r3, #20]
   1a504:	str	r3, [fp, #-12]
   1a508:	ldr	r3, [fp, #-12]
   1a50c:	ldrb	r3, [r3, #16]
   1a510:	cmp	r3, #0
   1a514:	beq	1a538 <__assert_fail@plt+0x9760>
   1a518:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a51c:	ldr	r3, [r3, #8]
   1a520:	vmov	s15, r3
   1a524:	vcvt.f32.u32	s14, s15
   1a528:	ldr	r3, [fp, #-12]
   1a52c:	vldr	s15, [r3, #12]
   1a530:	vmul.f32	s15, s14, s15
   1a534:	b	1a560 <__assert_fail@plt+0x9788>
   1a538:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a53c:	ldr	r3, [r3, #8]
   1a540:	vmov	s15, r3
   1a544:	vcvt.f32.u32	s14, s15
   1a548:	ldr	r3, [fp, #-12]
   1a54c:	vldr	s15, [r3, #12]
   1a550:	vmul.f32	s14, s14, s15
   1a554:	ldr	r3, [fp, #-12]
   1a558:	vldr	s15, [r3, #8]
   1a55c:	vmul.f32	s15, s14, s15
   1a560:	vstr	s15, [fp, #-16]
   1a564:	vldr	s15, [fp, #-16]
   1a568:	vldr	s14, [pc, #292]	; 1a694 <__assert_fail@plt+0x98bc>
   1a56c:	vcmpe.f32	s15, s14
   1a570:	vmrs	APSR_nzcv, fpscr
   1a574:	blt	1a580 <__assert_fail@plt+0x97a8>
   1a578:	mvn	r3, #0
   1a57c:	b	1a680 <__assert_fail@plt+0x98a8>
   1a580:	vldr	s15, [fp, #-16]
   1a584:	vcvt.u32.f32	s15, s15
   1a588:	vmov	r1, s15
   1a58c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a590:	bl	1a1d8 <__assert_fail@plt+0x9400>
   1a594:	mov	r3, r0
   1a598:	eor	r3, r3, #1
   1a59c:	uxtb	r3, r3
   1a5a0:	cmp	r3, #0
   1a5a4:	beq	1a5b0 <__assert_fail@plt+0x97d8>
   1a5a8:	mvn	r3, #0
   1a5ac:	b	1a680 <__assert_fail@plt+0x98a8>
   1a5b0:	sub	r2, fp, #24
   1a5b4:	mov	r3, #0
   1a5b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a5bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a5c0:	bl	19e14 <__assert_fail@plt+0x903c>
   1a5c4:	mov	r3, r0
   1a5c8:	cmp	r3, #0
   1a5cc:	beq	1a5d4 <__assert_fail@plt+0x97fc>
   1a5d0:	bl	10d9c <abort@plt>
   1a5d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a5d8:	ldr	r3, [r3]
   1a5dc:	cmp	r3, #0
   1a5e0:	beq	1a648 <__assert_fail@plt+0x9870>
   1a5e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a5e8:	bl	19d5c <__assert_fail@plt+0x8f84>
   1a5ec:	str	r0, [fp, #-20]	; 0xffffffec
   1a5f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a5f4:	cmp	r3, #0
   1a5f8:	bne	1a604 <__assert_fail@plt+0x982c>
   1a5fc:	mvn	r3, #0
   1a600:	b	1a680 <__assert_fail@plt+0x98a8>
   1a604:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a608:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a60c:	str	r2, [r3]
   1a610:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a614:	ldr	r2, [r3, #4]
   1a618:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a61c:	str	r2, [r3, #4]
   1a620:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a624:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a628:	str	r2, [r3, #4]
   1a62c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a630:	ldr	r3, [r3, #16]
   1a634:	add	r2, r3, #1
   1a638:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a63c:	str	r2, [r3, #16]
   1a640:	mov	r3, #1
   1a644:	b	1a680 <__assert_fail@plt+0x98a8>
   1a648:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a64c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a650:	str	r2, [r3]
   1a654:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a658:	ldr	r3, [r3, #16]
   1a65c:	add	r2, r3, #1
   1a660:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a664:	str	r2, [r3, #16]
   1a668:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a66c:	ldr	r3, [r3, #12]
   1a670:	add	r2, r3, #1
   1a674:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a678:	str	r2, [r3, #12]
   1a67c:	mov	r3, #1
   1a680:	mov	r0, r3
   1a684:	sub	sp, fp, #4
   1a688:	ldr	fp, [sp]
   1a68c:	add	sp, sp, #4
   1a690:	pop	{pc}		; (ldr pc, [sp], #4)
   1a694:	svcmi	0x00800000
   1a698:	str	fp, [sp, #-8]!
   1a69c:	str	lr, [sp, #4]
   1a6a0:	add	fp, sp, #4
   1a6a4:	sub	sp, sp, #16
   1a6a8:	str	r0, [fp, #-16]
   1a6ac:	str	r1, [fp, #-20]	; 0xffffffec
   1a6b0:	sub	r3, fp, #12
   1a6b4:	mov	r2, r3
   1a6b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a6bc:	ldr	r0, [fp, #-16]
   1a6c0:	bl	1a40c <__assert_fail@plt+0x9634>
   1a6c4:	str	r0, [fp, #-8]
   1a6c8:	ldr	r3, [fp, #-8]
   1a6cc:	cmn	r3, #1
   1a6d0:	beq	1a6f0 <__assert_fail@plt+0x9918>
   1a6d4:	ldr	r3, [fp, #-8]
   1a6d8:	cmp	r3, #0
   1a6dc:	bne	1a6e8 <__assert_fail@plt+0x9910>
   1a6e0:	ldr	r3, [fp, #-12]
   1a6e4:	b	1a6f4 <__assert_fail@plt+0x991c>
   1a6e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a6ec:	b	1a6f4 <__assert_fail@plt+0x991c>
   1a6f0:	mov	r3, #0
   1a6f4:	mov	r0, r3
   1a6f8:	sub	sp, fp, #4
   1a6fc:	ldr	fp, [sp]
   1a700:	add	sp, sp, #4
   1a704:	pop	{pc}		; (ldr pc, [sp], #4)
   1a708:	str	fp, [sp, #-8]!
   1a70c:	str	lr, [sp, #4]
   1a710:	add	fp, sp, #4
   1a714:	sub	sp, sp, #32
   1a718:	str	r0, [fp, #-32]	; 0xffffffe0
   1a71c:	str	r1, [fp, #-36]	; 0xffffffdc
   1a720:	sub	r2, fp, #28
   1a724:	mov	r3, #1
   1a728:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a72c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a730:	bl	19e14 <__assert_fail@plt+0x903c>
   1a734:	str	r0, [fp, #-12]
   1a738:	ldr	r3, [fp, #-12]
   1a73c:	cmp	r3, #0
   1a740:	bne	1a74c <__assert_fail@plt+0x9974>
   1a744:	mov	r3, #0
   1a748:	b	1a8dc <__assert_fail@plt+0x9b04>
   1a74c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a750:	ldr	r3, [r3, #16]
   1a754:	sub	r2, r3, #1
   1a758:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a75c:	str	r2, [r3, #16]
   1a760:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a764:	ldr	r3, [r3]
   1a768:	cmp	r3, #0
   1a76c:	bne	1a8d8 <__assert_fail@plt+0x9b00>
   1a770:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a774:	ldr	r3, [r3, #12]
   1a778:	sub	r2, r3, #1
   1a77c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a780:	str	r2, [r3, #12]
   1a784:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a788:	ldr	r3, [r3, #12]
   1a78c:	vmov	s15, r3
   1a790:	vcvt.f32.u32	s14, s15
   1a794:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a798:	ldr	r3, [r3, #20]
   1a79c:	vldr	s13, [r3]
   1a7a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a7a4:	ldr	r3, [r3, #8]
   1a7a8:	vmov	s15, r3
   1a7ac:	vcvt.f32.u32	s15, s15
   1a7b0:	vmul.f32	s15, s13, s15
   1a7b4:	vcmpe.f32	s14, s15
   1a7b8:	vmrs	APSR_nzcv, fpscr
   1a7bc:	bpl	1a8d8 <__assert_fail@plt+0x9b00>
   1a7c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a7c4:	bl	196c8 <__assert_fail@plt+0x88f0>
   1a7c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a7cc:	ldr	r3, [r3, #12]
   1a7d0:	vmov	s15, r3
   1a7d4:	vcvt.f32.u32	s14, s15
   1a7d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a7dc:	ldr	r3, [r3, #20]
   1a7e0:	vldr	s13, [r3]
   1a7e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a7e8:	ldr	r3, [r3, #8]
   1a7ec:	vmov	s15, r3
   1a7f0:	vcvt.f32.u32	s15, s15
   1a7f4:	vmul.f32	s15, s13, s15
   1a7f8:	vcmpe.f32	s14, s15
   1a7fc:	vmrs	APSR_nzcv, fpscr
   1a800:	bpl	1a8d8 <__assert_fail@plt+0x9b00>
   1a804:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a808:	ldr	r3, [r3, #20]
   1a80c:	str	r3, [fp, #-16]
   1a810:	ldr	r3, [fp, #-16]
   1a814:	ldrb	r3, [r3, #16]
   1a818:	cmp	r3, #0
   1a81c:	beq	1a844 <__assert_fail@plt+0x9a6c>
   1a820:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a824:	ldr	r3, [r3, #8]
   1a828:	vmov	s15, r3
   1a82c:	vcvt.f32.u32	s14, s15
   1a830:	ldr	r3, [fp, #-16]
   1a834:	vldr	s15, [r3, #4]
   1a838:	vmul.f32	s15, s14, s15
   1a83c:	vcvt.u32.f32	s15, s15
   1a840:	b	1a870 <__assert_fail@plt+0x9a98>
   1a844:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a848:	ldr	r3, [r3, #8]
   1a84c:	vmov	s15, r3
   1a850:	vcvt.f32.u32	s14, s15
   1a854:	ldr	r3, [fp, #-16]
   1a858:	vldr	s15, [r3, #4]
   1a85c:	vmul.f32	s14, s14, s15
   1a860:	ldr	r3, [fp, #-16]
   1a864:	vldr	s15, [r3, #8]
   1a868:	vmul.f32	s15, s14, s15
   1a86c:	vcvt.u32.f32	s15, s15
   1a870:	vstr	s15, [fp, #-20]	; 0xffffffec
   1a874:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a878:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a87c:	bl	1a1d8 <__assert_fail@plt+0x9400>
   1a880:	mov	r3, r0
   1a884:	eor	r3, r3, #1
   1a888:	uxtb	r3, r3
   1a88c:	cmp	r3, #0
   1a890:	beq	1a8d8 <__assert_fail@plt+0x9b00>
   1a894:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a898:	ldr	r3, [r3, #36]	; 0x24
   1a89c:	str	r3, [fp, #-8]
   1a8a0:	b	1a8c0 <__assert_fail@plt+0x9ae8>
   1a8a4:	ldr	r3, [fp, #-8]
   1a8a8:	ldr	r3, [r3, #4]
   1a8ac:	str	r3, [fp, #-24]	; 0xffffffe8
   1a8b0:	ldr	r0, [fp, #-8]
   1a8b4:	bl	1430c <__assert_fail@plt+0x3534>
   1a8b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a8bc:	str	r3, [fp, #-8]
   1a8c0:	ldr	r3, [fp, #-8]
   1a8c4:	cmp	r3, #0
   1a8c8:	bne	1a8a4 <__assert_fail@plt+0x9acc>
   1a8cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a8d0:	mov	r2, #0
   1a8d4:	str	r2, [r3, #36]	; 0x24
   1a8d8:	ldr	r3, [fp, #-12]
   1a8dc:	mov	r0, r3
   1a8e0:	sub	sp, fp, #4
   1a8e4:	ldr	fp, [sp]
   1a8e8:	add	sp, sp, #4
   1a8ec:	pop	{pc}		; (ldr pc, [sp], #4)
   1a8f0:	str	fp, [sp, #-8]!
   1a8f4:	str	lr, [sp, #4]
   1a8f8:	add	fp, sp, #4
   1a8fc:	sub	sp, sp, #8
   1a900:	str	r0, [fp, #-8]
   1a904:	str	r1, [fp, #-12]
   1a908:	ldr	r1, [fp, #-12]
   1a90c:	ldr	r0, [fp, #-8]
   1a910:	bl	1a708 <__assert_fail@plt+0x9930>
   1a914:	mov	r3, r0
   1a918:	mov	r0, r3
   1a91c:	sub	sp, fp, #4
   1a920:	ldr	fp, [sp]
   1a924:	add	sp, sp, #4
   1a928:	pop	{pc}		; (ldr pc, [sp], #4)
   1a92c:	push	{fp}		; (str fp, [sp, #-4]!)
   1a930:	add	fp, sp, #0
   1a934:	sub	sp, sp, #20
   1a938:	str	r0, [fp, #-16]
   1a93c:	str	r1, [fp, #-20]	; 0xffffffec
   1a940:	ldr	r3, [fp, #-16]
   1a944:	mov	r2, #1
   1a948:	strb	r2, [r3, #28]
   1a94c:	ldr	r3, [fp, #-16]
   1a950:	mov	r2, #0
   1a954:	str	r2, [r3, #20]
   1a958:	ldr	r3, [fp, #-16]
   1a95c:	mov	r2, #0
   1a960:	str	r2, [r3, #24]
   1a964:	mov	r3, #0
   1a968:	str	r3, [fp, #-8]
   1a96c:	b	1a98c <__assert_fail@plt+0x9bb4>
   1a970:	ldr	r3, [fp, #-16]
   1a974:	ldr	r2, [fp, #-8]
   1a978:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a97c:	str	r1, [r3, r2, lsl #2]
   1a980:	ldr	r3, [fp, #-8]
   1a984:	add	r3, r3, #1
   1a988:	str	r3, [fp, #-8]
   1a98c:	ldr	r3, [fp, #-8]
   1a990:	cmp	r3, #3
   1a994:	ble	1a970 <__assert_fail@plt+0x9b98>
   1a998:	ldr	r3, [fp, #-16]
   1a99c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a9a0:	str	r2, [r3, #16]
   1a9a4:	nop	{0}
   1a9a8:	add	sp, fp, #0
   1a9ac:	pop	{fp}		; (ldr fp, [sp], #4)
   1a9b0:	bx	lr
   1a9b4:	push	{fp}		; (str fp, [sp, #-4]!)
   1a9b8:	add	fp, sp, #0
   1a9bc:	sub	sp, sp, #12
   1a9c0:	str	r0, [fp, #-8]
   1a9c4:	ldr	r3, [fp, #-8]
   1a9c8:	ldrb	r3, [r3, #28]
   1a9cc:	mov	r0, r3
   1a9d0:	add	sp, fp, #0
   1a9d4:	pop	{fp}		; (ldr fp, [sp], #4)
   1a9d8:	bx	lr
   1a9dc:	push	{fp}		; (str fp, [sp, #-4]!)
   1a9e0:	add	fp, sp, #0
   1a9e4:	sub	sp, sp, #20
   1a9e8:	str	r0, [fp, #-16]
   1a9ec:	str	r1, [fp, #-20]	; 0xffffffec
   1a9f0:	ldr	r3, [fp, #-16]
   1a9f4:	ldr	r3, [r3, #20]
   1a9f8:	ldr	r2, [fp, #-16]
   1a9fc:	ldrb	r2, [r2, #28]
   1aa00:	eor	r2, r2, #1
   1aa04:	uxtb	r2, r2
   1aa08:	add	r3, r3, r2
   1aa0c:	and	r3, r3, #3
   1aa10:	str	r3, [fp, #-8]
   1aa14:	ldr	r3, [fp, #-16]
   1aa18:	ldr	r2, [fp, #-8]
   1aa1c:	ldr	r3, [r3, r2, lsl #2]
   1aa20:	str	r3, [fp, #-12]
   1aa24:	ldr	r3, [fp, #-16]
   1aa28:	ldr	r2, [fp, #-8]
   1aa2c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1aa30:	str	r1, [r3, r2, lsl #2]
   1aa34:	ldr	r3, [fp, #-16]
   1aa38:	ldr	r2, [fp, #-8]
   1aa3c:	str	r2, [r3, #20]
   1aa40:	ldr	r3, [fp, #-16]
   1aa44:	ldr	r3, [r3, #24]
   1aa48:	ldr	r2, [fp, #-8]
   1aa4c:	cmp	r2, r3
   1aa50:	bne	1aa7c <__assert_fail@plt+0x9ca4>
   1aa54:	ldr	r3, [fp, #-16]
   1aa58:	ldr	r3, [r3, #24]
   1aa5c:	ldr	r2, [fp, #-16]
   1aa60:	ldrb	r2, [r2, #28]
   1aa64:	eor	r2, r2, #1
   1aa68:	uxtb	r2, r2
   1aa6c:	add	r3, r3, r2
   1aa70:	and	r2, r3, #3
   1aa74:	ldr	r3, [fp, #-16]
   1aa78:	str	r2, [r3, #24]
   1aa7c:	ldr	r3, [fp, #-16]
   1aa80:	mov	r2, #0
   1aa84:	strb	r2, [r3, #28]
   1aa88:	ldr	r3, [fp, #-12]
   1aa8c:	mov	r0, r3
   1aa90:	add	sp, fp, #0
   1aa94:	pop	{fp}		; (ldr fp, [sp], #4)
   1aa98:	bx	lr
   1aa9c:	str	fp, [sp, #-8]!
   1aaa0:	str	lr, [sp, #4]
   1aaa4:	add	fp, sp, #4
   1aaa8:	sub	sp, sp, #16
   1aaac:	str	r0, [fp, #-16]
   1aab0:	ldr	r0, [fp, #-16]
   1aab4:	bl	1a9b4 <__assert_fail@plt+0x9bdc>
   1aab8:	mov	r3, r0
   1aabc:	cmp	r3, #0
   1aac0:	beq	1aac8 <__assert_fail@plt+0x9cf0>
   1aac4:	bl	10d9c <abort@plt>
   1aac8:	ldr	r3, [fp, #-16]
   1aacc:	ldr	r2, [r3, #20]
   1aad0:	ldr	r3, [fp, #-16]
   1aad4:	ldr	r3, [r3, r2, lsl #2]
   1aad8:	str	r3, [fp, #-8]
   1aadc:	ldr	r3, [fp, #-16]
   1aae0:	ldr	r2, [r3, #20]
   1aae4:	ldr	r3, [fp, #-16]
   1aae8:	ldr	r1, [r3, #16]
   1aaec:	ldr	r3, [fp, #-16]
   1aaf0:	str	r1, [r3, r2, lsl #2]
   1aaf4:	ldr	r3, [fp, #-16]
   1aaf8:	ldr	r2, [r3, #20]
   1aafc:	ldr	r3, [fp, #-16]
   1ab00:	ldr	r3, [r3, #24]
   1ab04:	cmp	r2, r3
   1ab08:	bne	1ab1c <__assert_fail@plt+0x9d44>
   1ab0c:	ldr	r3, [fp, #-16]
   1ab10:	mov	r2, #1
   1ab14:	strb	r2, [r3, #28]
   1ab18:	b	1ab34 <__assert_fail@plt+0x9d5c>
   1ab1c:	ldr	r3, [fp, #-16]
   1ab20:	ldr	r3, [r3, #20]
   1ab24:	add	r3, r3, #3
   1ab28:	and	r2, r3, #3
   1ab2c:	ldr	r3, [fp, #-16]
   1ab30:	str	r2, [r3, #20]
   1ab34:	ldr	r3, [fp, #-8]
   1ab38:	mov	r0, r3
   1ab3c:	sub	sp, fp, #4
   1ab40:	ldr	fp, [sp]
   1ab44:	add	sp, sp, #4
   1ab48:	pop	{pc}		; (ldr pc, [sp], #4)
   1ab4c:	str	fp, [sp, #-8]!
   1ab50:	str	lr, [sp, #4]
   1ab54:	add	fp, sp, #4
   1ab58:	sub	sp, sp, #24
   1ab5c:	strd	r0, [fp, #-20]	; 0xffffffec
   1ab60:	str	r2, [fp, #-24]	; 0xffffffe8
   1ab64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ab68:	add	r3, r3, #20
   1ab6c:	str	r3, [fp, #-8]
   1ab70:	ldr	r3, [fp, #-8]
   1ab74:	mov	r2, #0
   1ab78:	strb	r2, [r3]
   1ab7c:	ldrd	r0, [fp, #-20]	; 0xffffffec
   1ab80:	mov	r2, #10
   1ab84:	mov	r3, #0
   1ab88:	bl	1bad8 <__assert_fail@plt+0xad00>
   1ab8c:	uxtb	r3, r2
   1ab90:	ldr	r2, [fp, #-8]
   1ab94:	sub	r2, r2, #1
   1ab98:	str	r2, [fp, #-8]
   1ab9c:	add	r3, r3, #48	; 0x30
   1aba0:	uxtb	r2, r3
   1aba4:	ldr	r3, [fp, #-8]
   1aba8:	strb	r2, [r3]
   1abac:	ldrd	r0, [fp, #-20]	; 0xffffffec
   1abb0:	mov	r2, #10
   1abb4:	mov	r3, #0
   1abb8:	bl	1bad8 <__assert_fail@plt+0xad00>
   1abbc:	mov	r2, r0
   1abc0:	mov	r3, r1
   1abc4:	strd	r2, [fp, #-20]	; 0xffffffec
   1abc8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1abcc:	orrs	r3, r2, r3
   1abd0:	bne	1ab7c <__assert_fail@plt+0x9da4>
   1abd4:	ldr	r3, [fp, #-8]
   1abd8:	mov	r0, r3
   1abdc:	sub	sp, fp, #4
   1abe0:	ldr	fp, [sp]
   1abe4:	add	sp, sp, #4
   1abe8:	pop	{pc}		; (ldr pc, [sp], #4)
   1abec:	push	{r1, r2, r3}
   1abf0:	str	fp, [sp, #-8]!
   1abf4:	str	lr, [sp, #4]
   1abf8:	add	fp, sp, #4
   1abfc:	sub	sp, sp, #20
   1ac00:	str	r0, [fp, #-20]	; 0xffffffec
   1ac04:	add	r3, fp, #8
   1ac08:	str	r3, [fp, #-16]
   1ac0c:	ldr	r3, [fp, #-16]
   1ac10:	add	r2, r3, #4
   1ac14:	str	r2, [fp, #-16]
   1ac18:	ldr	r3, [r3]
   1ac1c:	str	r3, [fp, #-12]
   1ac20:	ldr	r3, [fp, #4]
   1ac24:	ldr	r2, [fp, #-12]
   1ac28:	mov	r1, r3
   1ac2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ac30:	bl	10c34 <ioctl@plt>
   1ac34:	mov	r3, r0
   1ac38:	mov	r0, r3
   1ac3c:	sub	sp, fp, #4
   1ac40:	ldr	fp, [sp]
   1ac44:	ldr	lr, [sp, #4]
   1ac48:	add	sp, sp, #8
   1ac4c:	add	sp, sp, #12
   1ac50:	bx	lr
   1ac54:	push	{r2, r3}
   1ac58:	str	fp, [sp, #-8]!
   1ac5c:	str	lr, [sp, #4]
   1ac60:	add	fp, sp, #4
   1ac64:	sub	sp, sp, #16
   1ac68:	str	r0, [fp, #-16]
   1ac6c:	str	r1, [fp, #-20]	; 0xffffffec
   1ac70:	mov	r3, #0
   1ac74:	str	r3, [fp, #-8]
   1ac78:	ldr	r3, [fp, #4]
   1ac7c:	and	r3, r3, #64	; 0x40
   1ac80:	cmp	r3, #0
   1ac84:	beq	1aca4 <__assert_fail@plt+0x9ecc>
   1ac88:	add	r3, fp, #8
   1ac8c:	str	r3, [fp, #-12]
   1ac90:	ldr	r3, [fp, #-12]
   1ac94:	add	r2, r3, #4
   1ac98:	str	r2, [fp, #-12]
   1ac9c:	ldr	r3, [r3]
   1aca0:	str	r3, [fp, #-8]
   1aca4:	ldr	r3, [fp, #-8]
   1aca8:	ldr	r2, [fp, #4]
   1acac:	ldr	r1, [fp, #-20]	; 0xffffffec
   1acb0:	ldr	r0, [fp, #-16]
   1acb4:	bl	10cb8 <openat64@plt>
   1acb8:	mov	r3, r0
   1acbc:	mov	r0, r3
   1acc0:	bl	1ada4 <__assert_fail@plt+0x9fcc>
   1acc4:	mov	r3, r0
   1acc8:	mov	r0, r3
   1accc:	sub	sp, fp, #4
   1acd0:	ldr	fp, [sp]
   1acd4:	ldr	lr, [sp, #4]
   1acd8:	add	sp, sp, #8
   1acdc:	add	sp, sp, #8
   1ace0:	bx	lr
   1ace4:	str	fp, [sp, #-8]!
   1ace8:	str	lr, [sp, #4]
   1acec:	add	fp, sp, #4
   1acf0:	sub	sp, sp, #32
   1acf4:	str	r0, [fp, #-24]	; 0xffffffe8
   1acf8:	str	r1, [fp, #-28]	; 0xffffffe4
   1acfc:	str	r2, [fp, #-32]	; 0xffffffe0
   1ad00:	str	r3, [fp, #-36]	; 0xffffffdc
   1ad04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ad08:	orr	r3, r3, #540672	; 0x84000
   1ad0c:	orr	r3, r3, #2304	; 0x900
   1ad10:	str	r3, [fp, #-8]
   1ad14:	ldr	r2, [fp, #-8]
   1ad18:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ad1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ad20:	bl	1ac54 <__assert_fail@plt+0x9e7c>
   1ad24:	str	r0, [fp, #-12]
   1ad28:	ldr	r3, [fp, #-12]
   1ad2c:	cmp	r3, #0
   1ad30:	bge	1ad3c <__assert_fail@plt+0x9f64>
   1ad34:	mov	r3, #0
   1ad38:	b	1ad90 <__assert_fail@plt+0x9fb8>
   1ad3c:	ldr	r0, [fp, #-12]
   1ad40:	bl	10d30 <fdopendir@plt>
   1ad44:	str	r0, [fp, #-16]
   1ad48:	ldr	r3, [fp, #-16]
   1ad4c:	cmp	r3, #0
   1ad50:	beq	1ad64 <__assert_fail@plt+0x9f8c>
   1ad54:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ad58:	ldr	r2, [fp, #-12]
   1ad5c:	str	r2, [r3]
   1ad60:	b	1ad8c <__assert_fail@plt+0x9fb4>
   1ad64:	bl	10cd0 <__errno_location@plt>
   1ad68:	mov	r3, r0
   1ad6c:	ldr	r3, [r3]
   1ad70:	str	r3, [fp, #-20]	; 0xffffffec
   1ad74:	ldr	r0, [fp, #-12]
   1ad78:	bl	10da8 <close@plt>
   1ad7c:	bl	10cd0 <__errno_location@plt>
   1ad80:	mov	r2, r0
   1ad84:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ad88:	str	r3, [r2]
   1ad8c:	ldr	r3, [fp, #-16]
   1ad90:	mov	r0, r3
   1ad94:	sub	sp, fp, #4
   1ad98:	ldr	fp, [sp]
   1ad9c:	add	sp, sp, #4
   1ada0:	pop	{pc}		; (ldr pc, [sp], #4)
   1ada4:	str	fp, [sp, #-8]!
   1ada8:	str	lr, [sp, #4]
   1adac:	add	fp, sp, #4
   1adb0:	sub	sp, sp, #16
   1adb4:	str	r0, [fp, #-16]
   1adb8:	ldr	r3, [fp, #-16]
   1adbc:	cmp	r3, #0
   1adc0:	blt	1ae0c <__assert_fail@plt+0xa034>
   1adc4:	ldr	r3, [fp, #-16]
   1adc8:	cmp	r3, #2
   1adcc:	bgt	1ae0c <__assert_fail@plt+0xa034>
   1add0:	ldr	r0, [fp, #-16]
   1add4:	bl	1b9c8 <__assert_fail@plt+0xabf0>
   1add8:	str	r0, [fp, #-8]
   1addc:	bl	10cd0 <__errno_location@plt>
   1ade0:	mov	r3, r0
   1ade4:	ldr	r3, [r3]
   1ade8:	str	r3, [fp, #-12]
   1adec:	ldr	r0, [fp, #-16]
   1adf0:	bl	10da8 <close@plt>
   1adf4:	bl	10cd0 <__errno_location@plt>
   1adf8:	mov	r2, r0
   1adfc:	ldr	r3, [fp, #-12]
   1ae00:	str	r3, [r2]
   1ae04:	ldr	r3, [fp, #-8]
   1ae08:	str	r3, [fp, #-16]
   1ae0c:	ldr	r3, [fp, #-16]
   1ae10:	mov	r0, r3
   1ae14:	sub	sp, fp, #4
   1ae18:	ldr	fp, [sp]
   1ae1c:	add	sp, sp, #4
   1ae20:	pop	{pc}		; (ldr pc, [sp], #4)
   1ae24:	str	fp, [sp, #-8]!
   1ae28:	str	lr, [sp, #4]
   1ae2c:	add	fp, sp, #4
   1ae30:	sub	sp, sp, #16
   1ae34:	str	r0, [fp, #-16]
   1ae38:	str	r1, [fp, #-20]	; 0xffffffec
   1ae3c:	ldr	r3, [fp, #-16]
   1ae40:	cmp	r3, #0
   1ae44:	beq	1ae54 <__assert_fail@plt+0xa07c>
   1ae48:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ae4c:	cmp	r3, #0
   1ae50:	bne	1ae64 <__assert_fail@plt+0xa08c>
   1ae54:	mov	r3, #1
   1ae58:	str	r3, [fp, #-20]	; 0xffffffec
   1ae5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ae60:	str	r3, [fp, #-16]
   1ae64:	mov	ip, #0
   1ae68:	ldr	r2, [fp, #-16]
   1ae6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ae70:	umull	r0, r1, r2, r3
   1ae74:	mov	r2, #0
   1ae78:	mov	r3, #0
   1ae7c:	mov	r2, r1
   1ae80:	mov	r3, #0
   1ae84:	cmp	r2, #0
   1ae88:	beq	1ae90 <__assert_fail@plt+0xa0b8>
   1ae8c:	mov	ip, #1
   1ae90:	cmp	r0, #0
   1ae94:	bge	1ae9c <__assert_fail@plt+0xa0c4>
   1ae98:	mov	ip, #1
   1ae9c:	mov	r3, ip
   1aea0:	and	r3, r3, #1
   1aea4:	uxtb	r3, r3
   1aea8:	cmp	r3, #0
   1aeac:	beq	1aec8 <__assert_fail@plt+0xa0f0>
   1aeb0:	bl	10cd0 <__errno_location@plt>
   1aeb4:	mov	r2, r0
   1aeb8:	mov	r3, #12
   1aebc:	str	r3, [r2]
   1aec0:	mov	r3, #0
   1aec4:	b	1aee0 <__assert_fail@plt+0xa108>
   1aec8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1aecc:	ldr	r0, [fp, #-16]
   1aed0:	bl	10b68 <calloc@plt>
   1aed4:	mov	r3, r0
   1aed8:	str	r3, [fp, #-8]
   1aedc:	ldr	r3, [fp, #-8]
   1aee0:	mov	r0, r3
   1aee4:	sub	sp, fp, #4
   1aee8:	ldr	fp, [sp]
   1aeec:	add	sp, sp, #4
   1aef0:	pop	{pc}		; (ldr pc, [sp], #4)
   1aef4:	str	fp, [sp, #-8]!
   1aef8:	str	lr, [sp, #4]
   1aefc:	add	fp, sp, #4
   1af00:	sub	sp, sp, #16
   1af04:	str	r0, [fp, #-16]
   1af08:	ldr	r3, [fp, #-16]
   1af0c:	cmp	r3, #0
   1af10:	bne	1af1c <__assert_fail@plt+0xa144>
   1af14:	mov	r3, #1
   1af18:	str	r3, [fp, #-16]
   1af1c:	mov	r2, #0
   1af20:	ldr	r3, [fp, #-16]
   1af24:	cmp	r3, #0
   1af28:	bge	1af30 <__assert_fail@plt+0xa158>
   1af2c:	mov	r2, #1
   1af30:	mov	r3, r2
   1af34:	and	r3, r3, #1
   1af38:	uxtb	r3, r3
   1af3c:	cmp	r3, #0
   1af40:	beq	1af5c <__assert_fail@plt+0xa184>
   1af44:	bl	10cd0 <__errno_location@plt>
   1af48:	mov	r2, r0
   1af4c:	mov	r3, #12
   1af50:	str	r3, [r2]
   1af54:	mov	r3, #0
   1af58:	b	1af70 <__assert_fail@plt+0xa198>
   1af5c:	ldr	r0, [fp, #-16]
   1af60:	bl	10c64 <malloc@plt>
   1af64:	mov	r3, r0
   1af68:	str	r3, [fp, #-8]
   1af6c:	ldr	r3, [fp, #-8]
   1af70:	mov	r0, r3
   1af74:	sub	sp, fp, #4
   1af78:	ldr	fp, [sp]
   1af7c:	add	sp, sp, #4
   1af80:	pop	{pc}		; (ldr pc, [sp], #4)
   1af84:	str	fp, [sp, #-8]!
   1af88:	str	lr, [sp, #4]
   1af8c:	add	fp, sp, #4
   1af90:	sub	sp, sp, #16
   1af94:	str	r0, [fp, #-16]
   1af98:	str	r1, [fp, #-20]	; 0xffffffec
   1af9c:	ldr	r3, [fp, #-16]
   1afa0:	cmp	r3, #0
   1afa4:	bne	1afb8 <__assert_fail@plt+0xa1e0>
   1afa8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1afac:	bl	1aef4 <__assert_fail@plt+0xa11c>
   1afb0:	mov	r3, r0
   1afb4:	b	1b028 <__assert_fail@plt+0xa250>
   1afb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1afbc:	cmp	r3, #0
   1afc0:	bne	1afd4 <__assert_fail@plt+0xa1fc>
   1afc4:	ldr	r0, [fp, #-16]
   1afc8:	bl	1430c <__assert_fail@plt+0x3534>
   1afcc:	mov	r3, #0
   1afd0:	b	1b028 <__assert_fail@plt+0xa250>
   1afd4:	mov	r2, #0
   1afd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1afdc:	cmp	r3, #0
   1afe0:	bge	1afe8 <__assert_fail@plt+0xa210>
   1afe4:	mov	r2, #1
   1afe8:	mov	r3, r2
   1afec:	and	r3, r3, #1
   1aff0:	uxtb	r3, r3
   1aff4:	cmp	r3, #0
   1aff8:	beq	1b014 <__assert_fail@plt+0xa23c>
   1affc:	bl	10cd0 <__errno_location@plt>
   1b000:	mov	r2, r0
   1b004:	mov	r3, #12
   1b008:	str	r3, [r2]
   1b00c:	mov	r3, #0
   1b010:	b	1b028 <__assert_fail@plt+0xa250>
   1b014:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b018:	ldr	r0, [fp, #-16]
   1b01c:	bl	10bec <realloc@plt>
   1b020:	str	r0, [fp, #-8]
   1b024:	ldr	r3, [fp, #-8]
   1b028:	mov	r0, r3
   1b02c:	sub	sp, fp, #4
   1b030:	ldr	fp, [sp]
   1b034:	add	sp, sp, #4
   1b038:	pop	{pc}		; (ldr pc, [sp], #4)
   1b03c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1b040:	strd	r6, [sp, #8]
   1b044:	strd	r8, [sp, #16]
   1b048:	str	fp, [sp, #24]
   1b04c:	add	fp, sp, #24
   1b050:	sub	sp, sp, #20
   1b054:	strd	r0, [fp, #-36]	; 0xffffffdc
   1b058:	str	r2, [fp, #-40]	; 0xffffffd8
   1b05c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1b060:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b064:	sub	ip, r1, #32
   1b068:	rsb	r0, r1, #32
   1b06c:	lsl	r7, r3, r1
   1b070:	orr	r7, r7, r2, lsl ip
   1b074:	orr	r7, r7, r2, lsr r0
   1b078:	lsl	r6, r2, r1
   1b07c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b080:	rsb	r1, r1, #0
   1b084:	and	r1, r1, #63	; 0x3f
   1b088:	rsb	ip, r1, #32
   1b08c:	sub	r0, r1, #32
   1b090:	lsr	r4, r2, r1
   1b094:	orr	r4, r4, r3, lsl ip
   1b098:	orr	r4, r4, r3, lsr r0
   1b09c:	lsr	r5, r3, r1
   1b0a0:	orr	r8, r6, r4
   1b0a4:	orr	r9, r7, r5
   1b0a8:	mov	r4, r8
   1b0ac:	mov	r5, r9
   1b0b0:	mov	r2, r4
   1b0b4:	mov	r3, r5
   1b0b8:	mov	r0, r2
   1b0bc:	mov	r1, r3
   1b0c0:	sub	sp, fp, #24
   1b0c4:	ldrd	r4, [sp]
   1b0c8:	ldrd	r6, [sp, #8]
   1b0cc:	ldrd	r8, [sp, #16]
   1b0d0:	ldr	fp, [sp, #24]
   1b0d4:	add	sp, sp, #28
   1b0d8:	bx	lr
   1b0dc:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1b0e0:	strd	r6, [sp, #8]
   1b0e4:	strd	r8, [sp, #16]
   1b0e8:	str	fp, [sp, #24]
   1b0ec:	add	fp, sp, #24
   1b0f0:	sub	sp, sp, #20
   1b0f4:	strd	r0, [fp, #-36]	; 0xffffffdc
   1b0f8:	str	r2, [fp, #-40]	; 0xffffffd8
   1b0fc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1b100:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b104:	rsb	ip, r1, #32
   1b108:	sub	r0, r1, #32
   1b10c:	lsr	r6, r2, r1
   1b110:	orr	r6, r6, r3, lsl ip
   1b114:	orr	r6, r6, r3, lsr r0
   1b118:	lsr	r7, r3, r1
   1b11c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b120:	rsb	r1, r1, #0
   1b124:	and	r1, r1, #63	; 0x3f
   1b128:	sub	ip, r1, #32
   1b12c:	rsb	r0, r1, #32
   1b130:	lsl	r5, r3, r1
   1b134:	orr	r5, r5, r2, lsl ip
   1b138:	orr	r5, r5, r2, lsr r0
   1b13c:	lsl	r4, r2, r1
   1b140:	orr	r8, r6, r4
   1b144:	orr	r9, r7, r5
   1b148:	mov	r4, r8
   1b14c:	mov	r5, r9
   1b150:	mov	r2, r4
   1b154:	mov	r3, r5
   1b158:	mov	r0, r2
   1b15c:	mov	r1, r3
   1b160:	sub	sp, fp, #24
   1b164:	ldrd	r4, [sp]
   1b168:	ldrd	r6, [sp, #8]
   1b16c:	ldrd	r8, [sp, #16]
   1b170:	ldr	fp, [sp, #24]
   1b174:	add	sp, sp, #28
   1b178:	bx	lr
   1b17c:	push	{fp}		; (str fp, [sp, #-4]!)
   1b180:	add	fp, sp, #0
   1b184:	sub	sp, sp, #12
   1b188:	str	r0, [fp, #-8]
   1b18c:	str	r1, [fp, #-12]
   1b190:	ldr	r2, [fp, #-8]
   1b194:	ldr	r3, [fp, #-12]
   1b198:	rsb	r3, r3, #32
   1b19c:	ror	r3, r2, r3
   1b1a0:	mov	r0, r3
   1b1a4:	add	sp, fp, #0
   1b1a8:	pop	{fp}		; (ldr fp, [sp], #4)
   1b1ac:	bx	lr
   1b1b0:	push	{fp}		; (str fp, [sp, #-4]!)
   1b1b4:	add	fp, sp, #0
   1b1b8:	sub	sp, sp, #12
   1b1bc:	str	r0, [fp, #-8]
   1b1c0:	str	r1, [fp, #-12]
   1b1c4:	ldr	r2, [fp, #-8]
   1b1c8:	ldr	r3, [fp, #-12]
   1b1cc:	ror	r3, r2, r3
   1b1d0:	mov	r0, r3
   1b1d4:	add	sp, fp, #0
   1b1d8:	pop	{fp}		; (ldr fp, [sp], #4)
   1b1dc:	bx	lr
   1b1e0:	push	{fp}		; (str fp, [sp, #-4]!)
   1b1e4:	add	fp, sp, #0
   1b1e8:	sub	sp, sp, #12
   1b1ec:	str	r0, [fp, #-8]
   1b1f0:	str	r1, [fp, #-12]
   1b1f4:	ldr	r2, [fp, #-8]
   1b1f8:	ldr	r3, [fp, #-12]
   1b1fc:	rsb	r3, r3, #32
   1b200:	ror	r3, r2, r3
   1b204:	mov	r0, r3
   1b208:	add	sp, fp, #0
   1b20c:	pop	{fp}		; (ldr fp, [sp], #4)
   1b210:	bx	lr
   1b214:	push	{fp}		; (str fp, [sp, #-4]!)
   1b218:	add	fp, sp, #0
   1b21c:	sub	sp, sp, #12
   1b220:	str	r0, [fp, #-8]
   1b224:	str	r1, [fp, #-12]
   1b228:	ldr	r2, [fp, #-8]
   1b22c:	ldr	r3, [fp, #-12]
   1b230:	ror	r3, r2, r3
   1b234:	mov	r0, r3
   1b238:	add	sp, fp, #0
   1b23c:	pop	{fp}		; (ldr fp, [sp], #4)
   1b240:	bx	lr
   1b244:	push	{fp}		; (str fp, [sp, #-4]!)
   1b248:	add	fp, sp, #0
   1b24c:	sub	sp, sp, #12
   1b250:	mov	r3, r0
   1b254:	str	r1, [fp, #-12]
   1b258:	strh	r3, [fp, #-6]
   1b25c:	ldrh	r2, [fp, #-6]
   1b260:	ldr	r3, [fp, #-12]
   1b264:	lsl	r3, r2, r3
   1b268:	uxth	r2, r3
   1b26c:	ldrh	r1, [fp, #-6]
   1b270:	ldr	r3, [fp, #-12]
   1b274:	rsb	r3, r3, #16
   1b278:	lsr	r3, r1, r3
   1b27c:	uxth	r3, r3
   1b280:	orr	r3, r2, r3
   1b284:	uxth	r3, r3
   1b288:	mov	r0, r3
   1b28c:	add	sp, fp, #0
   1b290:	pop	{fp}		; (ldr fp, [sp], #4)
   1b294:	bx	lr
   1b298:	push	{fp}		; (str fp, [sp, #-4]!)
   1b29c:	add	fp, sp, #0
   1b2a0:	sub	sp, sp, #12
   1b2a4:	mov	r3, r0
   1b2a8:	str	r1, [fp, #-12]
   1b2ac:	strh	r3, [fp, #-6]
   1b2b0:	ldrh	r2, [fp, #-6]
   1b2b4:	ldr	r3, [fp, #-12]
   1b2b8:	lsr	r3, r2, r3
   1b2bc:	uxth	r2, r3
   1b2c0:	ldrh	r1, [fp, #-6]
   1b2c4:	ldr	r3, [fp, #-12]
   1b2c8:	rsb	r3, r3, #16
   1b2cc:	lsl	r3, r1, r3
   1b2d0:	uxth	r3, r3
   1b2d4:	orr	r3, r2, r3
   1b2d8:	uxth	r3, r3
   1b2dc:	mov	r0, r3
   1b2e0:	add	sp, fp, #0
   1b2e4:	pop	{fp}		; (ldr fp, [sp], #4)
   1b2e8:	bx	lr
   1b2ec:	push	{fp}		; (str fp, [sp, #-4]!)
   1b2f0:	add	fp, sp, #0
   1b2f4:	sub	sp, sp, #12
   1b2f8:	mov	r3, r0
   1b2fc:	str	r1, [fp, #-12]
   1b300:	strb	r3, [fp, #-5]
   1b304:	ldrb	r2, [fp, #-5]
   1b308:	ldr	r3, [fp, #-12]
   1b30c:	lsl	r3, r2, r3
   1b310:	uxtb	r2, r3
   1b314:	ldrb	r1, [fp, #-5]
   1b318:	ldr	r3, [fp, #-12]
   1b31c:	rsb	r3, r3, #8
   1b320:	lsr	r3, r1, r3
   1b324:	uxtb	r3, r3
   1b328:	orr	r3, r2, r3
   1b32c:	uxtb	r3, r3
   1b330:	mov	r0, r3
   1b334:	add	sp, fp, #0
   1b338:	pop	{fp}		; (ldr fp, [sp], #4)
   1b33c:	bx	lr
   1b340:	push	{fp}		; (str fp, [sp, #-4]!)
   1b344:	add	fp, sp, #0
   1b348:	sub	sp, sp, #12
   1b34c:	mov	r3, r0
   1b350:	str	r1, [fp, #-12]
   1b354:	strb	r3, [fp, #-5]
   1b358:	ldrb	r2, [fp, #-5]
   1b35c:	ldr	r3, [fp, #-12]
   1b360:	lsr	r3, r2, r3
   1b364:	uxtb	r2, r3
   1b368:	ldrb	r1, [fp, #-5]
   1b36c:	ldr	r3, [fp, #-12]
   1b370:	rsb	r3, r3, #8
   1b374:	lsl	r3, r1, r3
   1b378:	uxtb	r3, r3
   1b37c:	orr	r3, r2, r3
   1b380:	uxtb	r3, r3
   1b384:	mov	r0, r3
   1b388:	add	sp, fp, #0
   1b38c:	pop	{fp}		; (ldr fp, [sp], #4)
   1b390:	bx	lr
   1b394:	strd	r4, [sp, #-12]!
   1b398:	str	fp, [sp, #8]
   1b39c:	add	fp, sp, #8
   1b3a0:	sub	sp, sp, #12
   1b3a4:	strd	r0, [fp, #-20]	; 0xffffffec
   1b3a8:	ldrd	r0, [fp, #-20]	; 0xffffffec
   1b3ac:	subs	r4, r0, #1
   1b3b0:	sbc	r5, r1, #0
   1b3b4:	ldrd	r0, [fp, #-20]	; 0xffffffec
   1b3b8:	and	r2, r4, r0
   1b3bc:	and	r3, r5, r1
   1b3c0:	orr	r3, r2, r3
   1b3c4:	cmp	r3, #0
   1b3c8:	moveq	r3, #1
   1b3cc:	movne	r3, #0
   1b3d0:	uxtb	r3, r3
   1b3d4:	mov	r0, r3
   1b3d8:	sub	sp, fp, #8
   1b3dc:	ldrd	r4, [sp]
   1b3e0:	ldr	fp, [sp, #8]
   1b3e4:	add	sp, sp, #12
   1b3e8:	bx	lr
   1b3ec:	push	{fp}		; (str fp, [sp, #-4]!)
   1b3f0:	add	fp, sp, #0
   1b3f4:	sub	sp, sp, #12
   1b3f8:	str	r0, [fp, #-8]
   1b3fc:	ldr	r1, [fp, #-8]
   1b400:	mov	r2, #0
   1b404:	mov	r3, #0
   1b408:	strd	r2, [r1, #16]
   1b40c:	ldr	r2, [fp, #-8]
   1b410:	movw	r3, #62998	; 0xf616
   1b414:	movt	r3, #149	; 0x95
   1b418:	str	r3, [r2, #24]
   1b41c:	nop	{0}
   1b420:	add	sp, fp, #0
   1b424:	pop	{fp}		; (ldr fp, [sp], #4)
   1b428:	bx	lr
   1b42c:	strd	r4, [sp, #-16]!
   1b430:	str	fp, [sp, #8]
   1b434:	str	lr, [sp, #12]
   1b438:	add	fp, sp, #12
   1b43c:	sub	sp, sp, #8
   1b440:	str	r0, [fp, #-16]
   1b444:	str	r1, [fp, #-20]	; 0xffffffec
   1b448:	ldr	r3, [fp, #-16]
   1b44c:	ldr	r2, [r3, #24]
   1b450:	movw	r3, #62998	; 0xf616
   1b454:	movt	r3, #149	; 0x95
   1b458:	cmp	r2, r3
   1b45c:	beq	1b480 <__assert_fail@plt+0xa6a8>
   1b460:	movw	r3, #49236	; 0xc054
   1b464:	movt	r3, #1
   1b468:	mov	r2, #60	; 0x3c
   1b46c:	movw	r1, #49196	; 0xc02c
   1b470:	movt	r1, #1
   1b474:	movw	r0, #49212	; 0xc03c
   1b478:	movt	r0, #1
   1b47c:	bl	10dd8 <__assert_fail@plt>
   1b480:	ldr	r3, [fp, #-16]
   1b484:	ldrd	r2, [r3, #16]
   1b488:	orrs	r3, r2, r3
   1b48c:	beq	1b4d0 <__assert_fail@plt+0xa6f8>
   1b490:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b494:	ldrd	r0, [r3, #96]	; 0x60
   1b498:	ldr	r3, [fp, #-16]
   1b49c:	ldrd	r2, [r3]
   1b4a0:	cmp	r1, r3
   1b4a4:	cmpeq	r0, r2
   1b4a8:	bne	1b4d0 <__assert_fail@plt+0xa6f8>
   1b4ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b4b0:	ldrd	r0, [r3]
   1b4b4:	ldr	r3, [fp, #-16]
   1b4b8:	ldrd	r2, [r3, #8]
   1b4bc:	cmp	r1, r3
   1b4c0:	cmpeq	r0, r2
   1b4c4:	bne	1b4d0 <__assert_fail@plt+0xa6f8>
   1b4c8:	mov	r3, #1
   1b4cc:	b	1b544 <__assert_fail@plt+0xa76c>
   1b4d0:	ldr	r3, [fp, #-16]
   1b4d4:	ldrd	r2, [r3, #16]
   1b4d8:	adds	r4, r2, #1
   1b4dc:	adc	r5, r3, #0
   1b4e0:	ldr	r3, [fp, #-16]
   1b4e4:	strd	r4, [r3, #16]
   1b4e8:	ldr	r3, [fp, #-16]
   1b4ec:	ldrd	r2, [r3, #16]
   1b4f0:	mov	r0, r2
   1b4f4:	mov	r1, r3
   1b4f8:	bl	1b394 <__assert_fail@plt+0xa5bc>
   1b4fc:	mov	r3, r0
   1b500:	cmp	r3, #0
   1b504:	beq	1b540 <__assert_fail@plt+0xa768>
   1b508:	ldr	r3, [fp, #-16]
   1b50c:	ldrd	r2, [r3, #16]
   1b510:	orrs	r3, r2, r3
   1b514:	bne	1b520 <__assert_fail@plt+0xa748>
   1b518:	mov	r3, #1
   1b51c:	b	1b544 <__assert_fail@plt+0xa76c>
   1b520:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b524:	ldrd	r2, [r3]
   1b528:	ldr	r1, [fp, #-16]
   1b52c:	strd	r2, [r1, #8]
   1b530:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b534:	ldrd	r2, [r3, #96]	; 0x60
   1b538:	ldr	r1, [fp, #-16]
   1b53c:	strd	r2, [r1]
   1b540:	mov	r3, #0
   1b544:	mov	r0, r3
   1b548:	sub	sp, fp, #12
   1b54c:	ldrd	r4, [sp]
   1b550:	ldr	fp, [sp, #8]
   1b554:	add	sp, sp, #12
   1b558:	pop	{pc}		; (ldr pc, [sp], #4)
   1b55c:	push	{r1, r2, r3}
   1b560:	str	fp, [sp, #-8]!
   1b564:	str	lr, [sp, #4]
   1b568:	add	fp, sp, #4
   1b56c:	sub	sp, sp, #36	; 0x24
   1b570:	str	r0, [fp, #-36]	; 0xffffffdc
   1b574:	mvn	r3, #0
   1b578:	str	r3, [fp, #-12]
   1b57c:	add	r3, fp, #8
   1b580:	str	r3, [fp, #-32]	; 0xffffffe0
   1b584:	ldr	r3, [fp, #4]
   1b588:	cmp	r3, #0
   1b58c:	beq	1b5a4 <__assert_fail@plt+0xa7cc>
   1b590:	ldr	r3, [fp, #4]
   1b594:	movw	r2, #1030	; 0x406
   1b598:	cmp	r3, r2
   1b59c:	beq	1b5cc <__assert_fail@plt+0xa7f4>
   1b5a0:	b	1b5f4 <__assert_fail@plt+0xa81c>
   1b5a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b5a8:	add	r2, r3, #4
   1b5ac:	str	r2, [fp, #-32]	; 0xffffffe0
   1b5b0:	ldr	r3, [r3]
   1b5b4:	str	r3, [fp, #-16]
   1b5b8:	ldr	r1, [fp, #-16]
   1b5bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b5c0:	bl	1b7a0 <__assert_fail@plt+0xa9c8>
   1b5c4:	str	r0, [fp, #-12]
   1b5c8:	b	1b780 <__assert_fail@plt+0xa9a8>
   1b5cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b5d0:	add	r2, r3, #4
   1b5d4:	str	r2, [fp, #-32]	; 0xffffffe0
   1b5d8:	ldr	r3, [r3]
   1b5dc:	str	r3, [fp, #-20]	; 0xffffffec
   1b5e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b5e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b5e8:	bl	1b7e4 <__assert_fail@plt+0xaa0c>
   1b5ec:	str	r0, [fp, #-12]
   1b5f0:	b	1b780 <__assert_fail@plt+0xa9a8>
   1b5f4:	ldr	r3, [fp, #4]
   1b5f8:	cmp	r3, #11
   1b5fc:	beq	1b710 <__assert_fail@plt+0xa938>
   1b600:	ldr	r3, [fp, #4]
   1b604:	cmp	r3, #11
   1b608:	bgt	1b690 <__assert_fail@plt+0xa8b8>
   1b60c:	ldr	r3, [fp, #4]
   1b610:	cmp	r3, #3
   1b614:	beq	1b710 <__assert_fail@plt+0xa938>
   1b618:	ldr	r3, [fp, #4]
   1b61c:	cmp	r3, #3
   1b620:	bgt	1b64c <__assert_fail@plt+0xa874>
   1b624:	ldr	r3, [fp, #4]
   1b628:	cmp	r3, #1
   1b62c:	beq	1b710 <__assert_fail@plt+0xa938>
   1b630:	ldr	r3, [fp, #4]
   1b634:	cmp	r3, #1
   1b638:	bgt	1b724 <__assert_fail@plt+0xa94c>
   1b63c:	ldr	r3, [fp, #4]
   1b640:	cmp	r3, #0
   1b644:	beq	1b724 <__assert_fail@plt+0xa94c>
   1b648:	b	1b750 <__assert_fail@plt+0xa978>
   1b64c:	ldr	r3, [fp, #4]
   1b650:	cmp	r3, #8
   1b654:	beq	1b724 <__assert_fail@plt+0xa94c>
   1b658:	ldr	r3, [fp, #4]
   1b65c:	cmp	r3, #8
   1b660:	bgt	1b674 <__assert_fail@plt+0xa89c>
   1b664:	ldr	r3, [fp, #4]
   1b668:	cmp	r3, #4
   1b66c:	beq	1b724 <__assert_fail@plt+0xa94c>
   1b670:	b	1b750 <__assert_fail@plt+0xa978>
   1b674:	ldr	r3, [fp, #4]
   1b678:	cmp	r3, #9
   1b67c:	beq	1b710 <__assert_fail@plt+0xa938>
   1b680:	ldr	r3, [fp, #4]
   1b684:	cmp	r3, #10
   1b688:	beq	1b724 <__assert_fail@plt+0xa94c>
   1b68c:	b	1b750 <__assert_fail@plt+0xa978>
   1b690:	ldr	r3, [fp, #4]
   1b694:	movw	r2, #1031	; 0x407
   1b698:	cmp	r3, r2
   1b69c:	bgt	1b6e0 <__assert_fail@plt+0xa908>
   1b6a0:	ldr	r3, [fp, #4]
   1b6a4:	movw	r2, #1030	; 0x406
   1b6a8:	cmp	r3, r2
   1b6ac:	bge	1b724 <__assert_fail@plt+0xa94c>
   1b6b0:	ldr	r3, [fp, #4]
   1b6b4:	movw	r2, #1025	; 0x401
   1b6b8:	cmp	r3, r2
   1b6bc:	beq	1b710 <__assert_fail@plt+0xa938>
   1b6c0:	ldr	r3, [fp, #4]
   1b6c4:	movw	r2, #1026	; 0x402
   1b6c8:	cmp	r3, r2
   1b6cc:	beq	1b724 <__assert_fail@plt+0xa94c>
   1b6d0:	ldr	r3, [fp, #4]
   1b6d4:	cmp	r3, #1024	; 0x400
   1b6d8:	beq	1b724 <__assert_fail@plt+0xa94c>
   1b6dc:	b	1b750 <__assert_fail@plt+0xa978>
   1b6e0:	ldr	r3, [fp, #4]
   1b6e4:	movw	r2, #1033	; 0x409
   1b6e8:	cmp	r3, r2
   1b6ec:	beq	1b724 <__assert_fail@plt+0xa94c>
   1b6f0:	ldr	r3, [fp, #4]
   1b6f4:	movw	r2, #1033	; 0x409
   1b6f8:	cmp	r3, r2
   1b6fc:	blt	1b710 <__assert_fail@plt+0xa938>
   1b700:	ldr	r3, [fp, #4]
   1b704:	movw	r2, #1034	; 0x40a
   1b708:	cmp	r3, r2
   1b70c:	bne	1b750 <__assert_fail@plt+0xa978>
   1b710:	ldr	r1, [fp, #4]
   1b714:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b718:	bl	10d00 <fcntl64@plt>
   1b71c:	str	r0, [fp, #-12]
   1b720:	b	1b77c <__assert_fail@plt+0xa9a4>
   1b724:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b728:	add	r2, r3, #4
   1b72c:	str	r2, [fp, #-32]	; 0xffffffe0
   1b730:	ldr	r3, [r3]
   1b734:	str	r3, [fp, #-24]	; 0xffffffe8
   1b738:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b73c:	ldr	r1, [fp, #4]
   1b740:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b744:	bl	10d00 <fcntl64@plt>
   1b748:	str	r0, [fp, #-12]
   1b74c:	b	1b77c <__assert_fail@plt+0xa9a4>
   1b750:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b754:	add	r2, r3, #4
   1b758:	str	r2, [fp, #-32]	; 0xffffffe0
   1b75c:	ldr	r3, [r3]
   1b760:	str	r3, [fp, #-28]	; 0xffffffe4
   1b764:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1b768:	ldr	r1, [fp, #4]
   1b76c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b770:	bl	10d00 <fcntl64@plt>
   1b774:	str	r0, [fp, #-12]
   1b778:	nop	{0}
   1b77c:	nop	{0}
   1b780:	ldr	r3, [fp, #-12]
   1b784:	mov	r0, r3
   1b788:	sub	sp, fp, #4
   1b78c:	ldr	fp, [sp]
   1b790:	ldr	lr, [sp, #4]
   1b794:	add	sp, sp, #8
   1b798:	add	sp, sp, #12
   1b79c:	bx	lr
   1b7a0:	str	fp, [sp, #-8]!
   1b7a4:	str	lr, [sp, #4]
   1b7a8:	add	fp, sp, #4
   1b7ac:	sub	sp, sp, #16
   1b7b0:	str	r0, [fp, #-16]
   1b7b4:	str	r1, [fp, #-20]	; 0xffffffec
   1b7b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b7bc:	mov	r1, #0
   1b7c0:	ldr	r0, [fp, #-16]
   1b7c4:	bl	10d00 <fcntl64@plt>
   1b7c8:	str	r0, [fp, #-8]
   1b7cc:	ldr	r3, [fp, #-8]
   1b7d0:	mov	r0, r3
   1b7d4:	sub	sp, fp, #4
   1b7d8:	ldr	fp, [sp]
   1b7dc:	add	sp, sp, #4
   1b7e0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b7e4:	str	fp, [sp, #-8]!
   1b7e8:	str	lr, [sp, #4]
   1b7ec:	add	fp, sp, #4
   1b7f0:	sub	sp, sp, #24
   1b7f4:	str	r0, [fp, #-24]	; 0xffffffe8
   1b7f8:	str	r1, [fp, #-28]	; 0xffffffe4
   1b7fc:	movw	r3, #53584	; 0xd150
   1b800:	movt	r3, #2
   1b804:	ldr	r3, [r3]
   1b808:	cmp	r3, #0
   1b80c:	blt	1b888 <__assert_fail@plt+0xaab0>
   1b810:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1b814:	movw	r1, #1030	; 0x406
   1b818:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b81c:	bl	10d00 <fcntl64@plt>
   1b820:	str	r0, [fp, #-8]
   1b824:	ldr	r3, [fp, #-8]
   1b828:	cmp	r3, #0
   1b82c:	bge	1b844 <__assert_fail@plt+0xaa6c>
   1b830:	bl	10cd0 <__errno_location@plt>
   1b834:	mov	r3, r0
   1b838:	ldr	r3, [r3]
   1b83c:	cmp	r3, #22
   1b840:	beq	1b858 <__assert_fail@plt+0xaa80>
   1b844:	movw	r3, #53584	; 0xd150
   1b848:	movt	r3, #2
   1b84c:	mov	r2, #1
   1b850:	str	r2, [r3]
   1b854:	b	1b898 <__assert_fail@plt+0xaac0>
   1b858:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b85c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b860:	bl	1b7a0 <__assert_fail@plt+0xa9c8>
   1b864:	str	r0, [fp, #-8]
   1b868:	ldr	r3, [fp, #-8]
   1b86c:	cmp	r3, #0
   1b870:	blt	1b898 <__assert_fail@plt+0xaac0>
   1b874:	movw	r3, #53584	; 0xd150
   1b878:	movt	r3, #2
   1b87c:	mvn	r2, #0
   1b880:	str	r2, [r3]
   1b884:	b	1b898 <__assert_fail@plt+0xaac0>
   1b888:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b88c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b890:	bl	1b7a0 <__assert_fail@plt+0xa9c8>
   1b894:	str	r0, [fp, #-8]
   1b898:	ldr	r3, [fp, #-8]
   1b89c:	cmp	r3, #0
   1b8a0:	blt	1b928 <__assert_fail@plt+0xab50>
   1b8a4:	movw	r3, #53584	; 0xd150
   1b8a8:	movt	r3, #2
   1b8ac:	ldr	r3, [r3]
   1b8b0:	cmn	r3, #1
   1b8b4:	bne	1b928 <__assert_fail@plt+0xab50>
   1b8b8:	mov	r1, #1
   1b8bc:	ldr	r0, [fp, #-8]
   1b8c0:	bl	10d00 <fcntl64@plt>
   1b8c4:	str	r0, [fp, #-12]
   1b8c8:	ldr	r3, [fp, #-12]
   1b8cc:	cmp	r3, #0
   1b8d0:	blt	1b8f8 <__assert_fail@plt+0xab20>
   1b8d4:	ldr	r3, [fp, #-12]
   1b8d8:	orr	r3, r3, #1
   1b8dc:	mov	r2, r3
   1b8e0:	mov	r1, #2
   1b8e4:	ldr	r0, [fp, #-8]
   1b8e8:	bl	10d00 <fcntl64@plt>
   1b8ec:	mov	r3, r0
   1b8f0:	cmn	r3, #1
   1b8f4:	bne	1b928 <__assert_fail@plt+0xab50>
   1b8f8:	bl	10cd0 <__errno_location@plt>
   1b8fc:	mov	r3, r0
   1b900:	ldr	r3, [r3]
   1b904:	str	r3, [fp, #-16]
   1b908:	ldr	r0, [fp, #-8]
   1b90c:	bl	10da8 <close@plt>
   1b910:	bl	10cd0 <__errno_location@plt>
   1b914:	mov	r2, r0
   1b918:	ldr	r3, [fp, #-16]
   1b91c:	str	r3, [r2]
   1b920:	mvn	r3, #0
   1b924:	str	r3, [fp, #-8]
   1b928:	ldr	r3, [fp, #-8]
   1b92c:	mov	r0, r3
   1b930:	sub	sp, fp, #4
   1b934:	ldr	fp, [sp]
   1b938:	add	sp, sp, #4
   1b93c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b940:	push	{r1, r2, r3}
   1b944:	str	fp, [sp, #-8]!
   1b948:	str	lr, [sp, #4]
   1b94c:	add	fp, sp, #4
   1b950:	sub	sp, sp, #20
   1b954:	str	r0, [fp, #-20]	; 0xffffffec
   1b958:	mov	r3, #0
   1b95c:	str	r3, [fp, #-12]
   1b960:	ldr	r3, [fp, #4]
   1b964:	and	r3, r3, #64	; 0x40
   1b968:	cmp	r3, #0
   1b96c:	beq	1b98c <__assert_fail@plt+0xabb4>
   1b970:	add	r3, fp, #8
   1b974:	str	r3, [fp, #-16]
   1b978:	ldr	r3, [fp, #-16]
   1b97c:	add	r2, r3, #4
   1b980:	str	r2, [fp, #-16]
   1b984:	ldr	r3, [r3]
   1b988:	str	r3, [fp, #-12]
   1b98c:	ldr	r2, [fp, #-12]
   1b990:	ldr	r1, [fp, #4]
   1b994:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b998:	bl	10c4c <open64@plt>
   1b99c:	mov	r3, r0
   1b9a0:	mov	r0, r3
   1b9a4:	bl	1ada4 <__assert_fail@plt+0x9fcc>
   1b9a8:	mov	r3, r0
   1b9ac:	mov	r0, r3
   1b9b0:	sub	sp, fp, #4
   1b9b4:	ldr	fp, [sp]
   1b9b8:	ldr	lr, [sp, #4]
   1b9bc:	add	sp, sp, #8
   1b9c0:	add	sp, sp, #12
   1b9c4:	bx	lr
   1b9c8:	str	fp, [sp, #-8]!
   1b9cc:	str	lr, [sp, #4]
   1b9d0:	add	fp, sp, #4
   1b9d4:	sub	sp, sp, #8
   1b9d8:	str	r0, [fp, #-8]
   1b9dc:	mov	r2, #3
   1b9e0:	mov	r1, #0
   1b9e4:	ldr	r0, [fp, #-8]
   1b9e8:	bl	1b55c <__assert_fail@plt+0xa784>
   1b9ec:	mov	r3, r0
   1b9f0:	mov	r0, r3
   1b9f4:	sub	sp, fp, #4
   1b9f8:	ldr	fp, [sp]
   1b9fc:	add	sp, sp, #4
   1ba00:	pop	{pc}		; (ldr pc, [sp], #4)
   1ba04:	cmp	r3, #0
   1ba08:	cmpeq	r2, #0
   1ba0c:	bne	1ba30 <__assert_fail@plt+0xac58>
   1ba10:	cmp	r1, #0
   1ba14:	movlt	r1, #-2147483648	; 0x80000000
   1ba18:	movlt	r0, #0
   1ba1c:	blt	1ba2c <__assert_fail@plt+0xac54>
   1ba20:	cmpeq	r0, #0
   1ba24:	mvnne	r1, #-2147483648	; 0x80000000
   1ba28:	mvnne	r0, #0
   1ba2c:	b	1bb14 <__assert_fail@plt+0xad3c>
   1ba30:	sub	sp, sp, #8
   1ba34:	push	{sp, lr}
   1ba38:	cmp	r1, #0
   1ba3c:	blt	1ba5c <__assert_fail@plt+0xac84>
   1ba40:	cmp	r3, #0
   1ba44:	blt	1ba90 <__assert_fail@plt+0xacb8>
   1ba48:	bl	1bb24 <__assert_fail@plt+0xad4c>
   1ba4c:	ldr	lr, [sp, #4]
   1ba50:	add	sp, sp, #8
   1ba54:	pop	{r2, r3}
   1ba58:	bx	lr
   1ba5c:	rsbs	r0, r0, #0
   1ba60:	sbc	r1, r1, r1, lsl #1
   1ba64:	cmp	r3, #0
   1ba68:	blt	1bab4 <__assert_fail@plt+0xacdc>
   1ba6c:	bl	1bb24 <__assert_fail@plt+0xad4c>
   1ba70:	ldr	lr, [sp, #4]
   1ba74:	add	sp, sp, #8
   1ba78:	pop	{r2, r3}
   1ba7c:	rsbs	r0, r0, #0
   1ba80:	sbc	r1, r1, r1, lsl #1
   1ba84:	rsbs	r2, r2, #0
   1ba88:	sbc	r3, r3, r3, lsl #1
   1ba8c:	bx	lr
   1ba90:	rsbs	r2, r2, #0
   1ba94:	sbc	r3, r3, r3, lsl #1
   1ba98:	bl	1bb24 <__assert_fail@plt+0xad4c>
   1ba9c:	ldr	lr, [sp, #4]
   1baa0:	add	sp, sp, #8
   1baa4:	pop	{r2, r3}
   1baa8:	rsbs	r0, r0, #0
   1baac:	sbc	r1, r1, r1, lsl #1
   1bab0:	bx	lr
   1bab4:	rsbs	r2, r2, #0
   1bab8:	sbc	r3, r3, r3, lsl #1
   1babc:	bl	1bb24 <__assert_fail@plt+0xad4c>
   1bac0:	ldr	lr, [sp, #4]
   1bac4:	add	sp, sp, #8
   1bac8:	pop	{r2, r3}
   1bacc:	rsbs	r2, r2, #0
   1bad0:	sbc	r3, r3, r3, lsl #1
   1bad4:	bx	lr
   1bad8:	cmp	r3, #0
   1badc:	cmpeq	r2, #0
   1bae0:	bne	1baf8 <__assert_fail@plt+0xad20>
   1bae4:	cmp	r1, #0
   1bae8:	cmpeq	r0, #0
   1baec:	mvnne	r1, #0
   1baf0:	mvnne	r0, #0
   1baf4:	b	1bb14 <__assert_fail@plt+0xad3c>
   1baf8:	sub	sp, sp, #8
   1bafc:	push	{sp, lr}
   1bb00:	bl	1bb24 <__assert_fail@plt+0xad4c>
   1bb04:	ldr	lr, [sp, #4]
   1bb08:	add	sp, sp, #8
   1bb0c:	pop	{r2, r3}
   1bb10:	bx	lr
   1bb14:	push	{r1, lr}
   1bb18:	mov	r0, #8
   1bb1c:	bl	10b74 <raise@plt>
   1bb20:	pop	{r1, pc}
   1bb24:	cmp	r1, r3
   1bb28:	cmpeq	r0, r2
   1bb2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bb30:	mov	r4, r0
   1bb34:	movcc	r0, #0
   1bb38:	mov	r5, r1
   1bb3c:	ldr	lr, [sp, #36]	; 0x24
   1bb40:	movcc	r1, r0
   1bb44:	bcc	1bc40 <__assert_fail@plt+0xae68>
   1bb48:	cmp	r3, #0
   1bb4c:	clzeq	ip, r2
   1bb50:	clzne	ip, r3
   1bb54:	addeq	ip, ip, #32
   1bb58:	cmp	r5, #0
   1bb5c:	clzeq	r1, r4
   1bb60:	addeq	r1, r1, #32
   1bb64:	clzne	r1, r5
   1bb68:	sub	ip, ip, r1
   1bb6c:	sub	sl, ip, #32
   1bb70:	lsl	r9, r3, ip
   1bb74:	rsb	fp, ip, #32
   1bb78:	orr	r9, r9, r2, lsl sl
   1bb7c:	orr	r9, r9, r2, lsr fp
   1bb80:	lsl	r8, r2, ip
   1bb84:	cmp	r5, r9
   1bb88:	cmpeq	r4, r8
   1bb8c:	movcc	r0, #0
   1bb90:	movcc	r1, r0
   1bb94:	bcc	1bbb0 <__assert_fail@plt+0xadd8>
   1bb98:	mov	r0, #1
   1bb9c:	subs	r4, r4, r8
   1bba0:	lsl	r1, r0, sl
   1bba4:	orr	r1, r1, r0, lsr fp
   1bba8:	lsl	r0, r0, ip
   1bbac:	sbc	r5, r5, r9
   1bbb0:	cmp	ip, #0
   1bbb4:	beq	1bc40 <__assert_fail@plt+0xae68>
   1bbb8:	lsr	r6, r8, #1
   1bbbc:	orr	r6, r6, r9, lsl #31
   1bbc0:	lsr	r7, r9, #1
   1bbc4:	mov	r2, ip
   1bbc8:	b	1bbec <__assert_fail@plt+0xae14>
   1bbcc:	subs	r3, r4, r6
   1bbd0:	sbc	r8, r5, r7
   1bbd4:	adds	r3, r3, r3
   1bbd8:	adc	r8, r8, r8
   1bbdc:	adds	r4, r3, #1
   1bbe0:	adc	r5, r8, #0
   1bbe4:	subs	r2, r2, #1
   1bbe8:	beq	1bc08 <__assert_fail@plt+0xae30>
   1bbec:	cmp	r5, r7
   1bbf0:	cmpeq	r4, r6
   1bbf4:	bcs	1bbcc <__assert_fail@plt+0xadf4>
   1bbf8:	adds	r4, r4, r4
   1bbfc:	adc	r5, r5, r5
   1bc00:	subs	r2, r2, #1
   1bc04:	bne	1bbec <__assert_fail@plt+0xae14>
   1bc08:	lsr	r3, r4, ip
   1bc0c:	orr	r3, r3, r5, lsl fp
   1bc10:	lsr	r2, r5, ip
   1bc14:	orr	r3, r3, r5, lsr sl
   1bc18:	adds	r0, r0, r4
   1bc1c:	mov	r4, r3
   1bc20:	lsl	r3, r2, ip
   1bc24:	orr	r3, r3, r4, lsl sl
   1bc28:	lsl	ip, r4, ip
   1bc2c:	orr	r3, r3, r4, lsr fp
   1bc30:	adc	r1, r1, r5
   1bc34:	subs	r0, r0, ip
   1bc38:	mov	r5, r2
   1bc3c:	sbc	r1, r1, r3
   1bc40:	cmp	lr, #0
   1bc44:	strdne	r4, [lr]
   1bc48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bc4c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1bc50:	mov	r7, r0
   1bc54:	ldr	r6, [pc, #72]	; 1bca4 <__assert_fail@plt+0xaecc>
   1bc58:	ldr	r5, [pc, #72]	; 1bca8 <__assert_fail@plt+0xaed0>
   1bc5c:	add	r6, pc, r6
   1bc60:	add	r5, pc, r5
   1bc64:	sub	r6, r6, r5
   1bc68:	mov	r8, r1
   1bc6c:	mov	r9, r2
   1bc70:	bl	10b3c <fstatfs64@plt-0x20>
   1bc74:	asrs	r6, r6, #2
   1bc78:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1bc7c:	mov	r4, #0
   1bc80:	add	r4, r4, #1
   1bc84:	ldr	r3, [r5], #4
   1bc88:	mov	r2, r9
   1bc8c:	mov	r1, r8
   1bc90:	mov	r0, r7
   1bc94:	blx	r3
   1bc98:	cmp	r6, r4
   1bc9c:	bne	1bc80 <__assert_fail@plt+0xaea8>
   1bca0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1bca4:			; <UNDEFINED> instruction: 0x000112b0
   1bca8:	andeq	r1, r1, r8, lsr #5
   1bcac:	bx	lr
   1bcb0:	mov	r2, r1
   1bcb4:	mov	r1, r0
   1bcb8:	mov	r0, #3
   1bcbc:	b	10d78 <__xstat64@plt>
   1bcc0:	mov	r2, r1
   1bcc4:	mov	r1, r0
   1bcc8:	mov	r0, #3
   1bccc:	b	10c10 <__fxstat64@plt>
   1bcd0:	mov	r2, r1
   1bcd4:	mov	r1, r0
   1bcd8:	mov	r0, #3
   1bcdc:	b	10db4 <__lxstat64@plt>
   1bce0:	push	{lr}		; (str lr, [sp, #-4]!)
   1bce4:	sub	sp, sp, #12
   1bce8:	str	r3, [sp]
   1bcec:	mov	r3, r2
   1bcf0:	mov	r2, r1
   1bcf4:	mov	r1, r0
   1bcf8:	mov	r0, #3
   1bcfc:	bl	10c04 <__fxstatat64@plt>
   1bd00:	add	sp, sp, #12
   1bd04:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .fini:

0001bd08 <.fini>:
   1bd08:	push	{r3, lr}
   1bd0c:	pop	{r3, pc}
