
../repos/tbeu-matio-3dd266d/tools/.libs/matdump:     file format elf32-littlearm


Disassembly of section .init:

00010e8c <.init>:
   10e8c:	push	{r3, lr}
   10e90:	bl	1114c <Mat_VarReadNextInfo@plt+0x48>
   10e94:	pop	{r3, pc}

Disassembly of section .plt:

00010e98 <Mat_VarGetNumberOfFields@plt-0x14>:
   10e98:	push	{lr}		; (str lr, [sp, #-4]!)
   10e9c:	ldr	lr, [pc, #4]	; 10ea8 <Mat_VarGetNumberOfFields@plt-0x4>
   10ea0:	add	lr, pc, lr
   10ea4:	ldr	pc, [lr, #8]!
   10ea8:	andeq	r4, r1, r8, asr r1

00010eac <Mat_VarGetNumberOfFields@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #20, 20	; 0x14000
   10eb4:	ldr	pc, [ip, #344]!	; 0x158

00010eb8 <Mat_SetVerbose@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #20, 20	; 0x14000
   10ec0:	ldr	pc, [ip, #336]!	; 0x150

00010ec4 <Mat_LogClose@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #20, 20	; 0x14000
   10ecc:	ldr	pc, [ip, #328]!	; 0x148

00010ed0 <Mat_VarReadNext@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #20, 20	; 0x14000
   10ed8:	ldr	pc, [ip, #320]!	; 0x140

00010edc <strcmp@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #20, 20	; 0x14000
   10ee4:	ldr	pc, [ip, #312]!	; 0x138

00010ee8 <Mat_Open@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #20, 20	; 0x14000
   10ef0:	ldr	pc, [ip, #304]!	; 0x130

00010ef4 <strtol@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #20, 20	; 0x14000
   10efc:	ldr	pc, [ip, #296]!	; 0x128

00010f00 <printf@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #20, 20	; 0x14000
   10f08:	ldr	pc, [ip, #288]!	; 0x120

00010f0c <Mat_VarGetCells@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #20, 20	; 0x14000
   10f14:	ldr	pc, [ip, #280]!	; 0x118

00010f18 <Mat_VarGetCell@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #20, 20	; 0x14000
   10f20:	ldr	pc, [ip, #272]!	; 0x110

00010f24 <Mat_VarCreate@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #20, 20	; 0x14000
   10f2c:	ldr	pc, [ip, #264]!	; 0x108

00010f30 <free@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #20, 20	; 0x14000
   10f38:	ldr	pc, [ip, #256]!	; 0x100

00010f3c <Mat_Warning@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #20, 20	; 0x14000
   10f44:	ldr	pc, [ip, #248]!	; 0xf8

00010f48 <Mat_VarReadDataLinear@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #20, 20	; 0x14000
   10f50:	ldr	pc, [ip, #240]!	; 0xf0

00010f54 <Mat_Message@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #20, 20	; 0x14000
   10f5c:	ldr	pc, [ip, #232]!	; 0xe8

00010f60 <Mat_VarReadData@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #20, 20	; 0x14000
   10f68:	ldr	pc, [ip, #224]!	; 0xe0

00010f6c <Mat_VarReadDataAll@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #20, 20	; 0x14000
   10f74:	ldr	pc, [ip, #216]!	; 0xd8

00010f78 <Mat_VarReadInfo@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #20, 20	; 0x14000
   10f80:	ldr	pc, [ip, #208]!	; 0xd0

00010f84 <fwrite@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #20, 20	; 0x14000
   10f8c:	ldr	pc, [ip, #200]!	; 0xc8

00010f90 <Mat_VarGetStructFieldnames@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #20, 20	; 0x14000
   10f98:	ldr	pc, [ip, #192]!	; 0xc0

00010f9c <getenv@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #20, 20	; 0x14000
   10fa4:	ldr	pc, [ip, #184]!	; 0xb8

00010fa8 <puts@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #20, 20	; 0x14000
   10fb0:	ldr	pc, [ip, #176]!	; 0xb0

00010fb4 <malloc@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #20, 20	; 0x14000
   10fbc:	ldr	pc, [ip, #168]!	; 0xa8

00010fc0 <log10@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #20, 20	; 0x14000
   10fc8:	ldr	pc, [ip, #160]!	; 0xa0

00010fcc <__libc_start_main@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #20, 20	; 0x14000
   10fd4:	ldr	pc, [ip, #152]!	; 0x98

00010fd8 <__gmon_start__@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #20, 20	; 0x14000
   10fe0:	ldr	pc, [ip, #144]!	; 0x90

00010fe4 <exit@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #20, 20	; 0x14000
   10fec:	ldr	pc, [ip, #136]!	; 0x88

00010ff0 <Mat_VarFree@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #20, 20	; 0x14000
   10ff8:	ldr	pc, [ip, #128]!	; 0x80

00010ffc <Mat_SizeOf@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #20, 20	; 0x14000
   11004:	ldr	pc, [ip, #120]!	; 0x78

00011008 <strlen@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #20, 20	; 0x14000
   11010:	ldr	pc, [ip, #112]!	; 0x70

00011014 <strchr@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #20, 20	; 0x14000
   1101c:	ldr	pc, [ip, #104]!	; 0x68

00011020 <warnx@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #20, 20	; 0x14000
   11028:	ldr	pc, [ip, #96]!	; 0x60

0001102c <fprintf@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #20, 20	; 0x14000
   11034:	ldr	pc, [ip, #88]!	; 0x58

00011038 <Mat_GetLibraryVersion@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #20, 20	; 0x14000
   11040:	ldr	pc, [ip, #80]!	; 0x50

00011044 <Mat_VarPrint@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #20, 20	; 0x14000
   1104c:	ldr	pc, [ip, #72]!	; 0x48

00011050 <memset@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #20, 20	; 0x14000
   11058:	ldr	pc, [ip, #64]!	; 0x40

0001105c <putchar@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #20, 20	; 0x14000
   11064:	ldr	pc, [ip, #56]!	; 0x38

00011068 <Mat_Close@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #20, 20	; 0x14000
   11070:	ldr	pc, [ip, #48]!	; 0x30

00011074 <Mat_Critical@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #20, 20	; 0x14000
   1107c:	ldr	pc, [ip, #40]!	; 0x28

00011080 <Mat_LogInitFunc@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #20, 20	; 0x14000
   11088:	ldr	pc, [ip, #32]!

0001108c <Mat_VerbMessage@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #20, 20	; 0x14000
   11094:	ldr	pc, [ip, #24]!

00011098 <Mat_VarGetCellsLinear@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #20, 20	; 0x14000
   110a0:	ldr	pc, [ip, #16]!

000110a4 <sprintf@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #20, 20	; 0x14000
   110ac:	ldr	pc, [ip, #8]!

000110b0 <Mat_Help@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #20, 20	; 0x14000
   110b8:	ldr	pc, [ip, #0]!

000110bc <Mat_VarGetStructFieldByName@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #77824	; 0x13000
   110c4:	ldr	pc, [ip, #4088]!	; 0xff8

000110c8 <Mat_SizeOfClass@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #77824	; 0x13000
   110d0:	ldr	pc, [ip, #4080]!	; 0xff0

000110d4 <Mat_VarGetSize@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #77824	; 0x13000
   110dc:	ldr	pc, [ip, #4072]!	; 0xfe8

000110e0 <strncmp@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #77824	; 0x13000
   110e8:	ldr	pc, [ip, #4064]!	; 0xfe0

000110ec <abort@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #77824	; 0x13000
   110f4:	ldr	pc, [ip, #4056]!	; 0xfd8

000110f8 <Mat_VarDuplicate@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #77824	; 0x13000
   11100:	ldr	pc, [ip, #4048]!	; 0xfd0

00011104 <Mat_VarReadNextInfo@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #77824	; 0x13000
   1110c:	ldr	pc, [ip, #4040]!	; 0xfc8

Disassembly of section .text:

00011110 <getopt@@Base-0x236c>:
   11110:	mov	fp, #0
   11114:	mov	lr, #0
   11118:	pop	{r1}		; (ldr r1, [sp], #4)
   1111c:	mov	r2, sp
   11120:	push	{r2}		; (str r2, [sp, #-4]!)
   11124:	push	{r0}		; (str r0, [sp, #-4]!)
   11128:	ldr	ip, [pc, #16]	; 11140 <Mat_VarReadNextInfo@plt+0x3c>
   1112c:	push	{ip}		; (str ip, [sp, #-4]!)
   11130:	ldr	r0, [pc, #12]	; 11144 <Mat_VarReadNextInfo@plt+0x40>
   11134:	ldr	r3, [pc, #12]	; 11148 <Mat_VarReadNextInfo@plt+0x44>
   11138:	bl	10fcc <__libc_start_main@plt>
   1113c:	bl	110ec <abort@plt>
   11140:	ldrdeq	r4, [r1], -ip
   11144:	andeq	r1, r1, r0, lsl #4
   11148:	andeq	r4, r1, ip, ror r2
   1114c:	ldr	r3, [pc, #20]	; 11168 <Mat_VarReadNextInfo@plt+0x64>
   11150:	ldr	r2, [pc, #20]	; 1116c <Mat_VarReadNextInfo@plt+0x68>
   11154:	add	r3, pc, r3
   11158:	ldr	r2, [r3, r2]
   1115c:	cmp	r2, #0
   11160:	bxeq	lr
   11164:	b	10fd8 <__gmon_start__@plt>
   11168:	andeq	r3, r1, r4, lsr #29
   1116c:	andeq	r0, r0, r4, ror #1
   11170:	ldr	r0, [pc, #24]	; 11190 <Mat_VarReadNextInfo@plt+0x8c>
   11174:	ldr	r3, [pc, #24]	; 11194 <Mat_VarReadNextInfo@plt+0x90>
   11178:	cmp	r3, r0
   1117c:	bxeq	lr
   11180:	ldr	r3, [pc, #16]	; 11198 <Mat_VarReadNextInfo@plt+0x94>
   11184:	cmp	r3, #0
   11188:	bxeq	lr
   1118c:	bx	r3
   11190:	ldrdeq	r5, [r2], -r0
   11194:	ldrdeq	r5, [r2], -r0
   11198:	andeq	r0, r0, r0
   1119c:	ldr	r0, [pc, #36]	; 111c8 <Mat_VarReadNextInfo@plt+0xc4>
   111a0:	ldr	r1, [pc, #36]	; 111cc <Mat_VarReadNextInfo@plt+0xc8>
   111a4:	sub	r1, r1, r0
   111a8:	asr	r1, r1, #2
   111ac:	add	r1, r1, r1, lsr #31
   111b0:	asrs	r1, r1, #1
   111b4:	bxeq	lr
   111b8:	ldr	r3, [pc, #16]	; 111d0 <Mat_VarReadNextInfo@plt+0xcc>
   111bc:	cmp	r3, #0
   111c0:	bxeq	lr
   111c4:	bx	r3
   111c8:	ldrdeq	r5, [r2], -r0
   111cc:	ldrdeq	r5, [r2], -r0
   111d0:	andeq	r0, r0, r0
   111d4:	push	{r4, lr}
   111d8:	ldr	r4, [pc, #24]	; 111f8 <Mat_VarReadNextInfo@plt+0xf4>
   111dc:	ldrb	r3, [r4]
   111e0:	cmp	r3, #0
   111e4:	popne	{r4, pc}
   111e8:	bl	11170 <Mat_VarReadNextInfo@plt+0x6c>
   111ec:	mov	r3, #1
   111f0:	strb	r3, [r4]
   111f4:	pop	{r4, pc}
   111f8:	ldrdeq	r5, [r2], -r0
   111fc:	b	1119c <Mat_VarReadNextInfo@plt+0x98>
   11200:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11204:	add	fp, sp, #28
   11208:	sub	sp, sp, #4
   1120c:	vpush	{d8-d10}
   11210:	sub	sp, sp, #72	; 0x48
   11214:	str	r0, [sp, #44]	; 0x2c
   11218:	add	r0, sp, #60	; 0x3c
   1121c:	mov	r8, r1
   11220:	add	r1, r0, #4
   11224:	add	r2, r0, #8
   11228:	bl	11038 <Mat_GetLibraryVersion@plt>
   1122c:	ldr	r0, [sp, #60]	; 0x3c
   11230:	cmp	r0, #1
   11234:	ldreq	r0, [sp, #64]	; 0x40
   11238:	cmpeq	r0, #5
   1123c:	beq	11268 <Mat_VarReadNextInfo@plt+0x164>
   11240:	ldr	r0, [pc, #3656]	; 12090 <Mat_VarReadNextInfo@plt+0xf8c>
   11244:	mov	r1, #55	; 0x37
   11248:	mov	r2, #1
   1124c:	mov	r4, #1
   11250:	ldr	r0, [pc, r0]
   11254:	ldr	r3, [r0]
   11258:	ldr	r0, [pc, #3636]	; 12094 <Mat_VarReadNextInfo@plt+0xf90>
   1125c:	add	r0, pc, r0
   11260:	bl	10f84 <fwrite@plt>
   11264:	b	12030 <Mat_VarReadNextInfo@plt+0xf2c>
   11268:	ldr	r0, [sp, #68]	; 0x44
   1126c:	cmp	r0, #15
   11270:	bne	11240 <Mat_VarReadNextInfo@plt+0x13c>
   11274:	ldr	r0, [pc, #3612]	; 12098 <Mat_VarReadNextInfo@plt+0xf94>
   11278:	ldr	r1, [pc, #3612]	; 1209c <Mat_VarReadNextInfo@plt+0xf98>
   1127c:	add	r0, pc, r0
   11280:	add	r1, pc, r1
   11284:	bl	11080 <Mat_LogInitFunc@plt>
   11288:	ldr	r1, [pc, #3600]	; 120a0 <Mat_VarReadNextInfo@plt+0xf9c>
   1128c:	ldr	r0, [pc, #3600]	; 120a4 <Mat_VarReadNextInfo@plt+0xfa0>
   11290:	mov	r9, #0
   11294:	mov	sl, #1
   11298:	add	r1, pc, r1
   1129c:	add	r0, pc, r0
   112a0:	str	r0, [r1]
   112a4:	ldr	r4, [pc, #3580]	; 120a8 <Mat_VarReadNextInfo@plt+0xfa4>
   112a8:	ldr	r5, [pc, #3580]	; 120ac <Mat_VarReadNextInfo@plt+0xfa8>
   112ac:	ldr	r6, [pc, #3580]	; 120b0 <Mat_VarReadNextInfo@plt+0xfac>
   112b0:	ldr	r7, [pc, #3580]	; 120b4 <Mat_VarReadNextInfo@plt+0xfb0>
   112b4:	str	r8, [sp, #20]
   112b8:	add	r4, pc, r4
   112bc:	add	r5, pc, r5
   112c0:	add	r6, pc, r6
   112c4:	add	r7, pc, r7
   112c8:	b	112d4 <Mat_VarReadNextInfo@plt+0x1d0>
   112cc:	mov	r0, r6
   112d0:	bl	10f00 <printf@plt>
   112d4:	ldr	r0, [sp, #44]	; 0x2c
   112d8:	mov	r1, r8
   112dc:	mov	r2, r4
   112e0:	mov	r3, r5
   112e4:	str	r9, [sp]
   112e8:	bl	13dd0 <getopt_long@@Base>
   112ec:	mov	r1, r0
   112f0:	sub	r0, r0, #72	; 0x48
   112f4:	cmp	r0, #46	; 0x2e
   112f8:	bhi	113e4 <Mat_VarReadNextInfo@plt+0x2e0>
   112fc:	add	r2, pc, #4
   11300:	ldr	r0, [r2, r0, lsl #2]
   11304:	add	pc, r2, r0
   11308:	andeq	r0, r0, ip, lsr sp
   1130c:			; <UNDEFINED> instruction: 0xffffffc4
   11310:			; <UNDEFINED> instruction: 0xffffffc4
   11314:			; <UNDEFINED> instruction: 0xffffffc4
   11318:			; <UNDEFINED> instruction: 0xffffffc4
   1131c:			; <UNDEFINED> instruction: 0xffffffc4
   11320:			; <UNDEFINED> instruction: 0xffffffc4
   11324:			; <UNDEFINED> instruction: 0xffffffc4
   11328:			; <UNDEFINED> instruction: 0xffffffc4
   1132c:			; <UNDEFINED> instruction: 0xffffffc4
   11330:			; <UNDEFINED> instruction: 0xffffffc4
   11334:			; <UNDEFINED> instruction: 0xffffffc4
   11338:			; <UNDEFINED> instruction: 0xffffffc4
   1133c:			; <UNDEFINED> instruction: 0xffffffc4
   11340:	andeq	r0, r0, r0, asr sp
   11344:			; <UNDEFINED> instruction: 0xffffffc4
   11348:			; <UNDEFINED> instruction: 0xffffffc4
   1134c:			; <UNDEFINED> instruction: 0xffffffc4
   11350:			; <UNDEFINED> instruction: 0xffffffc4
   11354:			; <UNDEFINED> instruction: 0xffffffc4
   11358:			; <UNDEFINED> instruction: 0xffffffc4
   1135c:			; <UNDEFINED> instruction: 0xffffffc4
   11360:			; <UNDEFINED> instruction: 0xffffffc4
   11364:			; <UNDEFINED> instruction: 0xffffffc4
   11368:			; <UNDEFINED> instruction: 0xffffffc4
   1136c:			; <UNDEFINED> instruction: 0xffffffc4
   11370:			; <UNDEFINED> instruction: 0xffffffc4
   11374:			; <UNDEFINED> instruction: 0xffffffc4
   11378:	strheq	r0, [r0], -ip
   1137c:			; <UNDEFINED> instruction: 0xffffffc4
   11380:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11384:			; <UNDEFINED> instruction: 0xffffffc4
   11388:	andeq	r0, r0, r8, ror #1
   1138c:			; <UNDEFINED> instruction: 0xffffffc4
   11390:			; <UNDEFINED> instruction: 0xffffffc4
   11394:			; <UNDEFINED> instruction: 0xffffffc4
   11398:			; <UNDEFINED> instruction: 0xffffffc4
   1139c:			; <UNDEFINED> instruction: 0xffffffc4
   113a0:			; <UNDEFINED> instruction: 0xffffffc4
   113a4:			; <UNDEFINED> instruction: 0xffffffc4
   113a8:			; <UNDEFINED> instruction: 0xffffffc4
   113ac:			; <UNDEFINED> instruction: 0xffffffc4
   113b0:			; <UNDEFINED> instruction: 0xffffffc4
   113b4:			; <UNDEFINED> instruction: 0xffffffc4
   113b8:			; <UNDEFINED> instruction: 0xffffffc4
   113bc:			; <UNDEFINED> instruction: 0xffffffc4
   113c0:	andeq	r0, r0, r4, lsr r1
   113c4:	ldr	r0, [pc, #3308]	; 120b8 <Mat_VarReadNextInfo@plt+0xfb4>
   113c8:	add	r0, pc, r0
   113cc:	strb	sl, [r0]
   113d0:	mov	r0, #1
   113d4:	ldr	r1, [pc, #3296]	; 120bc <Mat_VarReadNextInfo@plt+0xfb8>
   113d8:	add	r1, pc, r1
   113dc:	bl	1108c <Mat_VerbMessage@plt>
   113e0:	b	112d4 <Mat_VarReadNextInfo@plt+0x1d0>
   113e4:	cmn	r1, #1
   113e8:	beq	1147c <Mat_VarReadNextInfo@plt+0x378>
   113ec:	b	112cc <Mat_VarReadNextInfo@plt+0x1c8>
   113f0:	strb	sl, [r7]
   113f4:	b	112d4 <Mat_VarReadNextInfo@plt+0x1d0>
   113f8:	ldr	r0, [pc, #3264]	; 120c0 <Mat_VarReadNextInfo@plt+0xfbc>
   113fc:	ldr	r0, [pc, r0]
   11400:	ldr	r8, [r0]
   11404:	cmp	r8, #0
   11408:	beq	1144c <Mat_VarReadNextInfo@plt+0x348>
   1140c:	ldr	r1, [pc, #3248]	; 120c4 <Mat_VarReadNextInfo@plt+0xfc0>
   11410:	mov	r0, r8
   11414:	add	r1, pc, r1
   11418:	bl	10edc <strcmp@plt>
   1141c:	cmp	r0, #0
   11420:	beq	11460 <Mat_VarReadNextInfo@plt+0x35c>
   11424:	ldr	r0, [pc, #3236]	; 120d0 <Mat_VarReadNextInfo@plt+0xfcc>
   11428:	mov	r1, r8
   1142c:	add	r0, pc, r0
   11430:	bl	10f3c <Mat_Warning@plt>
   11434:	ldr	r8, [sp, #20]
   11438:	b	112d4 <Mat_VarReadNextInfo@plt+0x1d0>
   1143c:	mov	r0, #1
   11440:	mov	r1, #0
   11444:	bl	10eb8 <Mat_SetVerbose@plt>
   11448:	b	112d4 <Mat_VarReadNextInfo@plt+0x1d0>
   1144c:	ldr	r0, [pc, #3200]	; 120d4 <Mat_VarReadNextInfo@plt+0xfd0>
   11450:	add	r0, pc, r0
   11454:	bl	10f3c <Mat_Warning@plt>
   11458:	ldr	r8, [sp, #20]
   1145c:	b	112d4 <Mat_VarReadNextInfo@plt+0x1d0>
   11460:	ldr	r0, [pc, #3168]	; 120c8 <Mat_VarReadNextInfo@plt+0xfc4>
   11464:	ldr	r1, [pc, #3168]	; 120cc <Mat_VarReadNextInfo@plt+0xfc8>
   11468:	ldr	r8, [sp, #20]
   1146c:	add	r0, pc, r0
   11470:	add	r1, pc, r1
   11474:	str	r1, [r0]
   11478:	b	112d4 <Mat_VarReadNextInfo@plt+0x1d0>
   1147c:	ldr	r4, [pc, #3172]	; 120e8 <Mat_VarReadNextInfo@plt+0xfe4>
   11480:	ldr	r4, [pc, r4]
   11484:	ldr	r1, [sp, #44]	; 0x2c
   11488:	ldr	r0, [r4]
   1148c:	cmp	r0, r1
   11490:	bge	114d4 <Mat_VarReadNextInfo@plt+0x3d0>
   11494:	ldr	r0, [r8, r0, lsl #2]
   11498:	mov	r1, #0
   1149c:	bl	10ee8 <Mat_Open@plt>
   114a0:	mov	r9, r0
   114a4:	ldr	r0, [r4]
   114a8:	cmp	r9, #0
   114ac:	beq	114e8 <Mat_VarReadNextInfo@plt+0x3e4>
   114b0:	add	r7, r0, #1
   114b4:	ldr	r0, [sp, #44]	; 0x2c
   114b8:	str	r7, [r4]
   114bc:	cmp	r7, r0
   114c0:	bge	11500 <Mat_VarReadNextInfo@plt+0x3fc>
   114c4:	vmov.i32	q4, #1	; 0x00000001
   114c8:	vmov.i16	d10, #44	; 0x002c
   114cc:	str	r9, [sp, #16]
   114d0:	b	115e4 <Mat_VarReadNextInfo@plt+0x4e0>
   114d4:	ldr	r0, [pc, #3088]	; 120ec <Mat_VarReadNextInfo@plt+0xfe8>
   114d8:	add	r0, pc, r0
   114dc:	bl	11074 <Mat_Critical@plt>
   114e0:	mov	r4, #1
   114e4:	b	12030 <Mat_VarReadNextInfo@plt+0xf2c>
   114e8:	ldr	r1, [r8, r0, lsl #2]
   114ec:	ldr	r0, [pc, #3068]	; 120f0 <Mat_VarReadNextInfo@plt+0xfec>
   114f0:	add	r0, pc, r0
   114f4:	bl	11074 <Mat_Critical@plt>
   114f8:	mov	r4, #1
   114fc:	b	12030 <Mat_VarReadNextInfo@plt+0xf2c>
   11500:	ldr	r0, [pc, #3128]	; 12140 <Mat_VarReadNextInfo@plt+0x103c>
   11504:	add	r0, pc, r0
   11508:	ldrb	r0, [r0]
   1150c:	cmp	r0, #0
   11510:	beq	11558 <Mat_VarReadNextInfo@plt+0x454>
   11514:	mov	r0, r9
   11518:	bl	10ed0 <Mat_VarReadNext@plt>
   1151c:	cmp	r0, #0
   11520:	beq	12020 <Mat_VarReadNextInfo@plt+0xf1c>
   11524:	mov	r4, r0
   11528:	ldr	r1, [pc, #3096]	; 12148 <Mat_VarReadNextInfo@plt+0x1044>
   1152c:	mov	r0, r4
   11530:	ldr	r1, [pc, r1]
   11534:	blx	r1
   11538:	mov	r0, r4
   1153c:	bl	10ff0 <Mat_VarFree@plt>
   11540:	mov	r0, r9
   11544:	bl	10ed0 <Mat_VarReadNext@plt>
   11548:	mov	r4, r0
   1154c:	cmp	r0, #0
   11550:	bne	11528 <Mat_VarReadNextInfo@plt+0x424>
   11554:	b	12020 <Mat_VarReadNextInfo@plt+0xf1c>
   11558:	mov	r0, r9
   1155c:	bl	11104 <Mat_VarReadNextInfo@plt>
   11560:	cmp	r0, #0
   11564:	beq	12020 <Mat_VarReadNextInfo@plt+0xf1c>
   11568:	mov	r4, r0
   1156c:	ldr	r1, [pc, #3024]	; 12144 <Mat_VarReadNextInfo@plt+0x1040>
   11570:	mov	r0, r4
   11574:	ldr	r1, [pc, r1]
   11578:	blx	r1
   1157c:	mov	r0, r4
   11580:	bl	10ff0 <Mat_VarFree@plt>
   11584:	mov	r0, r9
   11588:	bl	11104 <Mat_VarReadNextInfo@plt>
   1158c:	mov	r4, r0
   11590:	cmp	r0, #0
   11594:	bne	1156c <Mat_VarReadNextInfo@plt+0x468>
   11598:	b	12020 <Mat_VarReadNextInfo@plt+0xf1c>
   1159c:	mov	r1, #0
   115a0:	strb	r1, [r0]
   115a4:	mov	r1, #56	; 0x38
   115a8:	ldr	r0, [pc, #2888]	; 120f8 <Mat_VarReadNextInfo@plt+0xff4>
   115ac:	ldr	r0, [pc, r0]
   115b0:	ldr	r3, [r0]
   115b4:	ldr	r0, [pc, #2880]	; 120fc <Mat_VarReadNextInfo@plt+0xff8>
   115b8:	add	r0, pc, r0
   115bc:	b	11c94 <Mat_VarReadNextInfo@plt+0xb90>
   115c0:	ldr	r0, [pc, #2872]	; 12100 <Mat_VarReadNextInfo@plt+0xffc>
   115c4:	mov	r1, #37	; 0x25
   115c8:	mov	r2, #1
   115cc:	ldr	r0, [pc, r0]
   115d0:	ldr	r3, [r0]
   115d4:	ldr	r0, [pc, #2856]	; 12104 <Mat_VarReadNextInfo@plt+0x1000>
   115d8:	add	r0, pc, r0
   115dc:	bl	10f84 <fwrite@plt>
   115e0:	b	11fd8 <Mat_VarReadNextInfo@plt+0xed4>
   115e4:	ldr	r5, [r8, r7, lsl #2]
   115e8:	mov	r0, r5
   115ec:	bl	12c84 <Mat_VarReadNextInfo@plt+0x1b80>
   115f0:	cmp	r0, r5
   115f4:	mov	r4, r0
   115f8:	mov	r6, #0
   115fc:	movne	r0, #0
   11600:	ldrbne	r6, [r4]
   11604:	strbne	r0, [r4]
   11608:	mov	r0, r9
   1160c:	ldrne	r5, [r8, r7, lsl #2]
   11610:	mov	r1, r5
   11614:	bl	10f78 <Mat_VarReadInfo@plt>
   11618:	cmp	r0, #0
   1161c:	beq	11658 <Mat_VarReadNextInfo@plt+0x554>
   11620:	mov	sl, r0
   11624:	ldr	r0, [pc, #2760]	; 120f4 <Mat_VarReadNextInfo@plt+0xff0>
   11628:	str	r7, [sp, #24]
   1162c:	add	r0, pc, r0
   11630:	ldrb	r0, [r0]
   11634:	cmp	r0, #1
   11638:	bne	11ff0 <Mat_VarReadNextInfo@plt+0xeec>
   1163c:	cmp	r6, #0
   11640:	beq	1166c <Mat_VarReadNextInfo@plt+0x568>
   11644:	mov	r0, r4
   11648:	strb	r6, [r4]
   1164c:	bl	12c84 <Mat_VarReadNextInfo@plt+0x1b80>
   11650:	ldrb	r1, [r0]
   11654:	b	116fc <Mat_VarReadNextInfo@plt+0x5f8>
   11658:	ldr	r1, [r8, r7, lsl #2]
   1165c:	ldr	r0, [pc, #2776]	; 1213c <Mat_VarReadNextInfo@plt+0x1038>
   11660:	add	r0, pc, r0
   11664:	bl	10f3c <Mat_Warning@plt>
   11668:	b	12010 <Mat_VarReadNextInfo@plt+0xf0c>
   1166c:	mov	r0, r9
   11670:	mov	r1, sl
   11674:	bl	10f6c <Mat_VarReadDataAll@plt>
   11678:	b	11ff0 <Mat_VarReadNextInfo@plt+0xeec>
   1167c:	ldr	r3, [sl, #36]	; 0x24
   11680:	ldr	r0, [pc, #2704]	; 12118 <Mat_VarReadNextInfo@plt+0x1014>
   11684:	mov	r2, r4
   11688:	ldr	r0, [pc, r0]
   1168c:	ldr	r0, [r0]
   11690:	ldr	r1, [pc, #2692]	; 1211c <Mat_VarReadNextInfo@plt+0x1018>
   11694:	add	r1, pc, r1
   11698:	bl	1102c <fprintf@plt>
   1169c:	ldr	r8, [sp, #20]
   116a0:	ldr	r1, [sp, #40]	; 0x28
   116a4:	ldr	r0, [sp, #36]	; 0x24
   116a8:	ldr	r2, [sp, #32]
   116ac:	cmp	r5, r9
   116b0:	beq	11c14 <Mat_VarReadNextInfo@plt+0xb10>
   116b4:	b	11ff0 <Mat_VarReadNextInfo@plt+0xeec>
   116b8:	ldr	r0, [pc, #2672]	; 12130 <Mat_VarReadNextInfo@plt+0x102c>
   116bc:	mov	r1, #24
   116c0:	ldr	r0, [pc, r0]
   116c4:	ldr	r3, [r0]
   116c8:	ldr	r0, [pc, #2660]	; 12134 <Mat_VarReadNextInfo@plt+0x1030>
   116cc:	add	r0, pc, r0
   116d0:	b	116ec <Mat_VarReadNextInfo@plt+0x5e8>
   116d4:	ldr	r0, [pc, #2672]	; 1214c <Mat_VarReadNextInfo@plt+0x1048>
   116d8:	mov	r1, #31
   116dc:	ldr	r0, [pc, r0]
   116e0:	ldr	r3, [r0]
   116e4:	ldr	r0, [pc, #2660]	; 12150 <Mat_VarReadNextInfo@plt+0x104c>
   116e8:	add	r0, pc, r0
   116ec:	mov	r2, #1
   116f0:	bl	10f84 <fwrite@plt>
   116f4:	mov	r7, #0
   116f8:	b	11be4 <Mat_VarReadNextInfo@plt+0xae0>
   116fc:	str	sl, [sp, #48]	; 0x30
   11700:	mov	sl, r0
   11704:	uxtb	r0, r1
   11708:	mov	r2, #0
   1170c:	cmp	r0, #46	; 0x2e
   11710:	beq	11790 <Mat_VarReadNextInfo@plt+0x68c>
   11714:	cmp	r0, #123	; 0x7b
   11718:	beq	11738 <Mat_VarReadNextInfo@plt+0x634>
   1171c:	cmp	r0, #40	; 0x28
   11720:	beq	11c30 <Mat_VarReadNextInfo@plt+0xb2c>
   11724:	mov	r0, sl
   11728:	ldr	sl, [sp, #48]	; 0x30
   1172c:	cmp	r2, #0
   11730:	beq	116fc <Mat_VarReadNextInfo@plt+0x5f8>
   11734:	b	11ff0 <Mat_VarReadNextInfo@plt+0xeec>
   11738:	ldr	r0, [sp, #48]	; 0x30
   1173c:	ldr	r0, [r0, #16]
   11740:	cmp	r0, #1
   11744:	bne	11c7c <Mat_VarReadNextInfo@plt+0xb78>
   11748:	add	r5, sl, #1
   1174c:	mov	r1, #125	; 0x7d
   11750:	mov	r0, r5
   11754:	bl	11014 <strchr@plt>
   11758:	mov	r7, r0
   1175c:	add	r0, r0, #1
   11760:	bl	12c84 <Mat_VarReadNextInfo@plt+0x1b80>
   11764:	ldrb	r1, [r0]
   11768:	mov	r4, #1
   1176c:	str	r0, [sp, #36]	; 0x24
   11770:	cmp	r1, #0
   11774:	beq	11800 <Mat_VarReadNextInfo@plt+0x6fc>
   11778:	str	r1, [sp, #40]	; 0x28
   1177c:	mov	r2, #0
   11780:	mov	r1, #0
   11784:	str	r1, [sp, #32]
   11788:	strb	r2, [r0]
   1178c:	b	11810 <Mat_VarReadNextInfo@plt+0x70c>
   11790:	add	r4, sl, #1
   11794:	ldr	sl, [sp, #48]	; 0x30
   11798:	ldr	r0, [sl, #16]
   1179c:	cmp	r0, #1
   117a0:	beq	117d0 <Mat_VarReadNextInfo@plt+0x6cc>
   117a4:	cmp	r0, #2
   117a8:	bne	11ca4 <Mat_VarReadNextInfo@plt+0xba0>
   117ac:	mov	r0, r4
   117b0:	bl	12c84 <Mat_VarReadNextInfo@plt+0x1b80>
   117b4:	cmp	r0, r4
   117b8:	beq	11a70 <Mat_VarReadNextInfo@plt+0x96c>
   117bc:	ldrb	r9, [r0]
   117c0:	mov	r5, #0
   117c4:	mov	r7, r0
   117c8:	strb	r5, [r0]
   117cc:	b	11a7c <Mat_VarReadNextInfo@plt+0x978>
   117d0:	ldr	r0, [sl]
   117d4:	ldr	r1, [sl, #12]
   117d8:	ldr	r8, [sl, #40]	; 0x28
   117dc:	udiv	r9, r0, r1
   117e0:	mov	r0, r4
   117e4:	bl	12c84 <Mat_VarReadNextInfo@plt+0x1b80>
   117e8:	cmp	r0, r4
   117ec:	beq	11ad0 <Mat_VarReadNextInfo@plt+0x9cc>
   117f0:	ldrb	r1, [r0]
   117f4:	mov	r2, #0
   117f8:	strb	r2, [r0]
   117fc:	b	11ad8 <Mat_VarReadNextInfo@plt+0x9d4>
   11800:	mov	r0, #123	; 0x7b
   11804:	str	r0, [sp, #40]	; 0x28
   11808:	mov	r0, #1
   1180c:	str	r0, [sp, #32]
   11810:	add	r2, sp, #56	; 0x38
   11814:	cmp	r5, r7
   11818:	beq	118a4 <Mat_VarReadNextInfo@plt+0x7a0>
   1181c:	sub	r0, r7, sl
   11820:	mov	r4, #1
   11824:	sub	r1, r0, #1
   11828:	cmp	r1, #4
   1182c:	bcs	11838 <Mat_VarReadNextInfo@plt+0x734>
   11830:	mov	r0, r5
   11834:	b	11890 <Mat_VarReadNextInfo@plt+0x78c>
   11838:	add	r0, pc, #992	; 0x3e0
   1183c:	bic	ip, r1, #3
   11840:	vld1.64	{d16-d17}, [r0 :128]
   11844:	add	r0, r5, ip
   11848:	mov	r3, ip
   1184c:	ldr	r6, [r5], #4
   11850:	subs	r3, r3, #4
   11854:	str	r6, [sp, #56]	; 0x38
   11858:	vld1.32	{d18[0]}, [r2 :32]
   1185c:	vmovl.u8	q9, d18
   11860:	vceq.i16	d18, d18, d10
   11864:	vmovl.u16	q9, d18
   11868:	vand	q9, q9, q4
   1186c:	vadd.i32	q8, q8, q9
   11870:	bne	1184c <Mat_VarReadNextInfo@plt+0x748>
   11874:	vext.8	q9, q8, q8, #8
   11878:	cmp	ip, r1
   1187c:	vadd.i32	q8, q8, q9
   11880:	vdup.32	q9, d16[1]
   11884:	vadd.i32	q8, q8, q9
   11888:	vmov.32	r4, d16[0]
   1188c:	beq	118a4 <Mat_VarReadNextInfo@plt+0x7a0>
   11890:	ldrb	r1, [r0], #1
   11894:	cmp	r1, #44	; 0x2c
   11898:	addeq	r4, r4, #1
   1189c:	cmp	r7, r0
   118a0:	bne	11890 <Mat_VarReadNextInfo@plt+0x78c>
   118a4:	lsl	r6, r4, #2
   118a8:	mov	r0, r6
   118ac:	bl	10fb4 <malloc@plt>
   118b0:	mov	r9, r0
   118b4:	mov	r0, r6
   118b8:	bl	10fb4 <malloc@plt>
   118bc:	str	r0, [sp, #28]
   118c0:	mov	r0, r6
   118c4:	bl	10fb4 <malloc@plt>
   118c8:	mov	r8, r0
   118cc:	cmp	r4, #1
   118d0:	blt	1193c <Mat_VarReadNextInfo@plt+0x838>
   118d4:	mov	r0, r9
   118d8:	mov	r1, #0
   118dc:	mov	r2, r6
   118e0:	mov	r5, #0
   118e4:	bl	11050 <memset@plt>
   118e8:	mov	r3, #1
   118ec:	cmp	r4, #4
   118f0:	bcc	1191c <Mat_VarReadNextInfo@plt+0x818>
   118f4:	ldr	r2, [sp, #28]
   118f8:	bic	r5, r4, #3
   118fc:	mov	r1, r8
   11900:	mov	r0, r5
   11904:	vst1.32	{d8-d9}, [r2]!
   11908:	vst1.32	{d8-d9}, [r1]!
   1190c:	subs	r0, r0, #4
   11910:	bne	11904 <Mat_VarReadNextInfo@plt+0x800>
   11914:	cmp	r4, r5
   11918:	beq	1193c <Mat_VarReadNextInfo@plt+0x838>
   1191c:	ldr	r0, [sp, #28]
   11920:	add	r1, r8, r5, lsl #2
   11924:	sub	r2, r4, r5
   11928:	add	r0, r0, r5, lsl #2
   1192c:	str	r3, [r0], #4
   11930:	str	r3, [r1], #4
   11934:	subs	r2, r2, #1
   11938:	bne	1192c <Mat_VarReadNextInfo@plt+0x828>
   1193c:	ldr	r5, [sp, #28]
   11940:	mov	r0, sl
   11944:	mov	r1, r7
   11948:	mov	r2, r9
   1194c:	str	r8, [sp]
   11950:	mov	r3, r5
   11954:	bl	12e78 <Mat_VarReadNextInfo@plt+0x1d74>
   11958:	ldr	sl, [sp, #48]	; 0x30
   1195c:	mov	r0, r4
   11960:	mov	r1, r9
   11964:	mov	r2, r5
   11968:	mov	r3, r8
   1196c:	str	sl, [sp]
   11970:	bl	130dc <Mat_VarReadNextInfo@plt+0x1fd8>
   11974:	cmp	r0, #0
   11978:	beq	116b8 <Mat_VarReadNextInfo@plt+0x5b4>
   1197c:	mov	r7, r0
   11980:	cmp	r4, #1
   11984:	bne	119d4 <Mat_VarReadNextInfo@plt+0x8d0>
   11988:	ldr	r3, [r8]
   1198c:	ldr	r2, [r5]
   11990:	ldr	r1, [r9]
   11994:	mov	r0, sl
   11998:	bl	11098 <Mat_VarGetCellsLinear@plt>
   1199c:	ldr	r1, [sl, #4]
   119a0:	mov	r6, r0
   119a4:	ldr	r0, [sl, #32]
   119a8:	mov	r2, #1
   119ac:	cmp	r1, #2
   119b0:	bne	11a68 <Mat_VarReadNextInfo@plt+0x964>
   119b4:	ldr	r1, [r0]
   119b8:	cmp	r1, #1
   119bc:	bne	11b74 <Mat_VarReadNextInfo@plt+0xa70>
   119c0:	ldr	r1, [r8]
   119c4:	str	r1, [r0, #4]
   119c8:	cmp	r6, #0
   119cc:	bne	11b90 <Mat_VarReadNextInfo@plt+0xa8c>
   119d0:	b	116d4 <Mat_VarReadNextInfo@plt+0x5d0>
   119d4:	mov	r0, sl
   119d8:	mov	r1, r9
   119dc:	mov	r2, r5
   119e0:	mov	r3, r8
   119e4:	bl	10f0c <Mat_VarGetCells@plt>
   119e8:	mov	r6, r0
   119ec:	cmp	r4, #1
   119f0:	blt	11b88 <Mat_VarReadNextInfo@plt+0xa84>
   119f4:	ldr	r0, [sl, #32]
   119f8:	mov	r1, #0
   119fc:	cmp	r4, #4
   11a00:	bcc	11a48 <Mat_VarReadNextInfo@plt+0x944>
   11a04:	add	r2, r8, r4, lsl #2
   11a08:	cmp	r2, r0
   11a0c:	bls	11a1c <Mat_VarReadNextInfo@plt+0x918>
   11a10:	add	r2, r0, r4, lsl #2
   11a14:	cmp	r8, r2
   11a18:	bcc	11a48 <Mat_VarReadNextInfo@plt+0x944>
   11a1c:	bic	r1, r4, #3
   11a20:	mov	r3, r0
   11a24:	mov	r5, r8
   11a28:	mov	r2, r1
   11a2c:	vld1.32	{d16-d17}, [r5]!
   11a30:	subs	r2, r2, #4
   11a34:	vst1.32	{d16-d17}, [r3]!
   11a38:	bne	11a2c <Mat_VarReadNextInfo@plt+0x928>
   11a3c:	ldr	r5, [sp, #28]
   11a40:	cmp	r4, r1
   11a44:	beq	11b88 <Mat_VarReadNextInfo@plt+0xa84>
   11a48:	add	r2, r8, r1, lsl #2
   11a4c:	add	r0, r0, r1, lsl #2
   11a50:	sub	r1, r4, r1
   11a54:	ldr	r3, [r2], #4
   11a58:	subs	r1, r1, #1
   11a5c:	str	r3, [r0], #4
   11a60:	bne	11a54 <Mat_VarReadNextInfo@plt+0x950>
   11a64:	b	11b88 <Mat_VarReadNextInfo@plt+0xa84>
   11a68:	str	r2, [sl, #4]
   11a6c:	b	11b80 <Mat_VarReadNextInfo@plt+0xa7c>
   11a70:	mov	r7, r0
   11a74:	mov	r9, #46	; 0x2e
   11a78:	mov	r5, #1
   11a7c:	mov	r0, sl
   11a80:	mov	r1, r4
   11a84:	mov	r2, #0
   11a88:	bl	110bc <Mat_VarGetStructFieldByName@plt>
   11a8c:	ldr	r6, [sp, #16]
   11a90:	cmp	r0, #0
   11a94:	beq	11e6c <Mat_VarReadNextInfo@plt+0xd68>
   11a98:	mov	r1, #1
   11a9c:	bl	110f8 <Mat_VarDuplicate@plt>
   11aa0:	mov	r4, r0
   11aa4:	mov	r0, sl
   11aa8:	bl	10ff0 <Mat_VarFree@plt>
   11aac:	cmp	r5, #0
   11ab0:	bne	11f94 <Mat_VarReadNextInfo@plt+0xe90>
   11ab4:	mov	sl, r4
   11ab8:	mov	r1, r9
   11abc:	mov	r0, r7
   11ac0:	mov	r2, #0
   11ac4:	cmp	r2, #0
   11ac8:	beq	116fc <Mat_VarReadNextInfo@plt+0x5f8>
   11acc:	b	11ff0 <Mat_VarReadNextInfo@plt+0xeec>
   11ad0:	mov	r1, #46	; 0x2e
   11ad4:	mov	r2, #1
   11ad8:	mov	r5, #0
   11adc:	cmp	r9, #1
   11ae0:	str	r2, [sp, #32]
   11ae4:	str	r0, [sp, #36]	; 0x24
   11ae8:	str	r1, [sp, #40]	; 0x28
   11aec:	blt	1169c <Mat_VarReadNextInfo@plt+0x598>
   11af0:	mov	r0, sl
   11af4:	mov	r1, r5
   11af8:	bl	10f18 <Mat_VarGetCell@plt>
   11afc:	cmp	r0, #0
   11b00:	beq	11b54 <Mat_VarReadNextInfo@plt+0xa50>
   11b04:	mov	r6, r0
   11b08:	ldr	r0, [r0, #16]
   11b0c:	cmp	r0, #2
   11b10:	bne	11b54 <Mat_VarReadNextInfo@plt+0xa50>
   11b14:	mov	r0, r6
   11b18:	mov	r1, r4
   11b1c:	mov	r2, #0
   11b20:	bl	110bc <Mat_VarGetStructFieldByName@plt>
   11b24:	cmp	r0, #0
   11b28:	beq	1167c <Mat_VarReadNextInfo@plt+0x578>
   11b2c:	mov	r1, #1
   11b30:	bl	110f8 <Mat_VarDuplicate@plt>
   11b34:	mov	r7, r0
   11b38:	mov	r0, r6
   11b3c:	bl	10ff0 <Mat_VarFree@plt>
   11b40:	str	r7, [r8, r5, lsl #2]
   11b44:	add	r5, r5, #1
   11b48:	cmp	r5, r9
   11b4c:	blt	11af0 <Mat_VarReadNextInfo@plt+0x9ec>
   11b50:	b	1169c <Mat_VarReadNextInfo@plt+0x598>
   11b54:	ldr	r0, [pc, #1460]	; 12110 <Mat_VarReadNextInfo@plt+0x100c>
   11b58:	mov	r2, r5
   11b5c:	ldr	r0, [pc, r0]
   11b60:	ldr	r0, [r0]
   11b64:	ldr	r1, [pc, #1448]	; 12114 <Mat_VarReadNextInfo@plt+0x1010>
   11b68:	add	r1, pc, r1
   11b6c:	bl	1102c <fprintf@plt>
   11b70:	b	1169c <Mat_VarReadNextInfo@plt+0x598>
   11b74:	ldr	r1, [r0, #4]
   11b78:	cmp	r1, #1
   11b7c:	strne	r2, [sl, #4]
   11b80:	ldr	r1, [r8]
   11b84:	str	r1, [r0]
   11b88:	cmp	r6, #0
   11b8c:	beq	116d4 <Mat_VarReadNextInfo@plt+0x5d0>
   11b90:	cmp	r7, #1
   11b94:	mov	r4, r6
   11b98:	blt	11bb4 <Mat_VarReadNextInfo@plt+0xab0>
   11b9c:	ldr	r0, [r4]
   11ba0:	mov	r1, #1
   11ba4:	bl	110f8 <Mat_VarDuplicate@plt>
   11ba8:	str	r0, [r4], #4
   11bac:	subs	r7, r7, #1
   11bb0:	bne	11b9c <Mat_VarReadNextInfo@plt+0xa98>
   11bb4:	ldr	r1, [sl, #32]
   11bb8:	ldr	r3, [sl, #4]
   11bbc:	ldr	r0, [sl, #36]	; 0x24
   11bc0:	mov	r7, #1
   11bc4:	mov	r2, #21
   11bc8:	stm	sp, {r1, r6, r7}
   11bcc:	mov	r1, #1
   11bd0:	bl	10f24 <Mat_VarCreate@plt>
   11bd4:	mov	r4, r0
   11bd8:	mov	r0, sl
   11bdc:	bl	10ff0 <Mat_VarFree@plt>
   11be0:	mov	sl, r4
   11be4:	mov	r0, r9
   11be8:	bl	10f30 <free@plt>
   11bec:	mov	r0, r5
   11bf0:	bl	10f30 <free@plt>
   11bf4:	mov	r0, r8
   11bf8:	bl	10f30 <free@plt>
   11bfc:	ldr	r8, [sp, #20]
   11c00:	ldr	r1, [sp, #40]	; 0x28
   11c04:	ldr	r0, [sp, #36]	; 0x24
   11c08:	ldr	r2, [sp, #32]
   11c0c:	cmp	r7, #0
   11c10:	beq	11ff0 <Mat_VarReadNextInfo@plt+0xeec>
   11c14:	cmp	r2, #0
   11c18:	beq	116fc <Mat_VarReadNextInfo@plt+0x5f8>
   11c1c:	b	11ff0 <Mat_VarReadNextInfo@plt+0xeec>
   11c20:	andeq	r0, r0, r1
	...
   11c30:	add	r6, sl, #1
   11c34:	mov	r1, #41	; 0x29
   11c38:	mov	r0, r6
   11c3c:	bl	11014 <strchr@plt>
   11c40:	add	r5, r0, #1
   11c44:	mov	r4, r0
   11c48:	mov	r0, r5
   11c4c:	bl	12c84 <Mat_VarReadNextInfo@plt+0x1b80>
   11c50:	cmp	r0, r5
   11c54:	bne	1159c <Mat_VarReadNextInfo@plt+0x498>
   11c58:	cmp	r6, r4
   11c5c:	beq	11cc4 <Mat_VarReadNextInfo@plt+0xbc0>
   11c60:	sub	r0, r4, sl
   11c64:	mov	r5, #1
   11c68:	sub	r1, r0, #1
   11c6c:	cmp	r1, #4
   11c70:	bcs	11ccc <Mat_VarReadNextInfo@plt+0xbc8>
   11c74:	mov	r0, r6
   11c78:	b	11d28 <Mat_VarReadNextInfo@plt+0xc24>
   11c7c:	ldr	r0, [pc, #1188]	; 12128 <Mat_VarReadNextInfo@plt+0x1024>
   11c80:	mov	r1, #34	; 0x22
   11c84:	ldr	r0, [pc, r0]
   11c88:	ldr	r3, [r0]
   11c8c:	ldr	r0, [pc, #1176]	; 1212c <Mat_VarReadNextInfo@plt+0x1028>
   11c90:	add	r0, pc, r0
   11c94:	mov	r2, #1
   11c98:	bl	10f84 <fwrite@plt>
   11c9c:	ldr	sl, [sp, #48]	; 0x30
   11ca0:	b	11ff0 <Mat_VarReadNextInfo@plt+0xeec>
   11ca4:	ldr	r0, [pc, #1140]	; 12120 <Mat_VarReadNextInfo@plt+0x101c>
   11ca8:	mov	r2, r4
   11cac:	ldr	r0, [pc, r0]
   11cb0:	ldr	r0, [r0]
   11cb4:	ldr	r1, [pc, #1128]	; 12124 <Mat_VarReadNextInfo@plt+0x1020>
   11cb8:	add	r1, pc, r1
   11cbc:	bl	1102c <fprintf@plt>
   11cc0:	b	11ff0 <Mat_VarReadNextInfo@plt+0xeec>
   11cc4:	mov	r5, #1
   11cc8:	b	11d3c <Mat_VarReadNextInfo@plt+0xc38>
   11ccc:	add	r0, pc, #940	; 0x3ac
   11cd0:	bic	r2, r1, #3
   11cd4:	add	r5, sp, #52	; 0x34
   11cd8:	vld1.64	{d16-d17}, [r0 :128]
   11cdc:	add	r0, r6, r2
   11ce0:	mov	r3, r2
   11ce4:	ldr	r7, [r6], #4
   11ce8:	subs	r3, r3, #4
   11cec:	str	r7, [sp, #52]	; 0x34
   11cf0:	vld1.32	{d18[0]}, [r5 :32]
   11cf4:	vmovl.u8	q9, d18
   11cf8:	vceq.i16	d18, d18, d10
   11cfc:	vmovl.u16	q9, d18
   11d00:	vand	q9, q9, q4
   11d04:	vadd.i32	q8, q8, q9
   11d08:	bne	11ce4 <Mat_VarReadNextInfo@plt+0xbe0>
   11d0c:	vext.8	q9, q8, q8, #8
   11d10:	cmp	r2, r1
   11d14:	vadd.i32	q8, q8, q9
   11d18:	vdup.32	q9, d16[1]
   11d1c:	vadd.i32	q8, q8, q9
   11d20:	vmov.32	r5, d16[0]
   11d24:	beq	11d3c <Mat_VarReadNextInfo@plt+0xc38>
   11d28:	ldrb	r1, [r0], #1
   11d2c:	cmp	r1, #44	; 0x2c
   11d30:	addeq	r5, r5, #1
   11d34:	cmp	r4, r0
   11d38:	bne	11d28 <Mat_VarReadNextInfo@plt+0xc24>
   11d3c:	lsl	r8, r5, #2
   11d40:	mov	r0, r8
   11d44:	bl	10fb4 <malloc@plt>
   11d48:	mov	r9, r0
   11d4c:	mov	r0, r8
   11d50:	bl	10fb4 <malloc@plt>
   11d54:	mov	r7, r0
   11d58:	mov	r0, r8
   11d5c:	bl	10fb4 <malloc@plt>
   11d60:	cmp	r5, #1
   11d64:	str	r0, [sp, #40]	; 0x28
   11d68:	blt	11dd4 <Mat_VarReadNextInfo@plt+0xcd0>
   11d6c:	mov	r0, r9
   11d70:	mov	r1, #0
   11d74:	mov	r2, r8
   11d78:	mov	r6, #0
   11d7c:	bl	11050 <memset@plt>
   11d80:	mov	r3, #1
   11d84:	cmp	r5, #4
   11d88:	bcc	11db4 <Mat_VarReadNextInfo@plt+0xcb0>
   11d8c:	ldr	r1, [sp, #40]	; 0x28
   11d90:	bic	r6, r5, #3
   11d94:	mov	r2, r7
   11d98:	mov	r0, r6
   11d9c:	vst1.32	{d8-d9}, [r2]!
   11da0:	vst1.32	{d8-d9}, [r1]!
   11da4:	subs	r0, r0, #4
   11da8:	bne	11d9c <Mat_VarReadNextInfo@plt+0xc98>
   11dac:	cmp	r5, r6
   11db0:	beq	11dd4 <Mat_VarReadNextInfo@plt+0xcd0>
   11db4:	ldr	r1, [sp, #40]	; 0x28
   11db8:	add	r0, r7, r6, lsl #2
   11dbc:	sub	r2, r5, r6
   11dc0:	add	r1, r1, r6, lsl #2
   11dc4:	str	r3, [r0], #4
   11dc8:	str	r3, [r1], #4
   11dcc:	subs	r2, r2, #1
   11dd0:	bne	11dc4 <Mat_VarReadNextInfo@plt+0xcc0>
   11dd4:	ldr	r6, [sp, #40]	; 0x28
   11dd8:	mov	r0, sl
   11ddc:	mov	r1, r4
   11de0:	mov	r2, r9
   11de4:	mov	r3, r7
   11de8:	str	r6, [sp]
   11dec:	bl	12e78 <Mat_VarReadNextInfo@plt+0x1d74>
   11df0:	ldr	sl, [sp, #48]	; 0x30
   11df4:	mov	r0, r5
   11df8:	mov	r1, r9
   11dfc:	mov	r2, r7
   11e00:	mov	r3, r6
   11e04:	str	sl, [sp]
   11e08:	bl	130dc <Mat_VarReadNextInfo@plt+0x1fd8>
   11e0c:	ldr	r8, [sp, #20]
   11e10:	cmp	r0, #0
   11e14:	beq	11fd8 <Mat_VarReadNextInfo@plt+0xed4>
   11e18:	mov	r4, r0
   11e1c:	ldr	r0, [sl, #16]
   11e20:	bl	110c8 <Mat_SizeOfClass@plt>
   11e24:	str	r0, [sl, #12]
   11e28:	mul	r0, r0, r4
   11e2c:	str	r0, [sl]
   11e30:	ldr	r1, [sl, #20]
   11e34:	cmp	r1, #0
   11e38:	beq	11e90 <Mat_VarReadNextInfo@plt+0xd8c>
   11e3c:	mov	r0, #8
   11e40:	bl	10fb4 <malloc@plt>
   11e44:	str	r0, [sl, #40]	; 0x28
   11e48:	mov	r4, r0
   11e4c:	ldr	r0, [sl]
   11e50:	bl	10fb4 <malloc@plt>
   11e54:	str	r0, [r4]
   11e58:	ldr	r0, [sl]
   11e5c:	bl	10fb4 <malloc@plt>
   11e60:	str	r0, [r4, #4]
   11e64:	ldr	r2, [sl, #40]	; 0x28
   11e68:	b	11e9c <Mat_VarReadNextInfo@plt+0xd98>
   11e6c:	ldr	r3, [sl, #36]	; 0x24
   11e70:	ldr	r0, [pc, #656]	; 12108 <Mat_VarReadNextInfo@plt+0x1004>
   11e74:	mov	r2, r4
   11e78:	ldr	r0, [pc, r0]
   11e7c:	ldr	r0, [r0]
   11e80:	ldr	r1, [pc, #644]	; 1210c <Mat_VarReadNextInfo@plt+0x1008>
   11e84:	add	r1, pc, r1
   11e88:	bl	1102c <fprintf@plt>
   11e8c:	b	11ff0 <Mat_VarReadNextInfo@plt+0xeec>
   11e90:	bl	10fb4 <malloc@plt>
   11e94:	mov	r2, r0
   11e98:	str	r0, [sl, #40]	; 0x28
   11e9c:	ldr	r0, [sp, #16]
   11ea0:	cmp	r2, #0
   11ea4:	beq	115c0 <Mat_VarReadNextInfo@plt+0x4bc>
   11ea8:	cmp	r5, #1
   11eac:	bne	11f00 <Mat_VarReadNextInfo@plt+0xdfc>
   11eb0:	ldr	r1, [r6]
   11eb4:	mov	r4, r7
   11eb8:	ldr	r7, [r7]
   11ebc:	ldr	r3, [r9]
   11ec0:	str	r1, [sp, #4]
   11ec4:	mov	r1, sl
   11ec8:	str	r7, [sp]
   11ecc:	bl	10f48 <Mat_VarReadDataLinear@plt>
   11ed0:	ldr	r1, [sl, #4]
   11ed4:	ldr	r0, [sl, #32]
   11ed8:	mov	r2, #1
   11edc:	cmp	r1, #2
   11ee0:	bne	11fc4 <Mat_VarReadNextInfo@plt+0xec0>
   11ee4:	ldr	r1, [r0]
   11ee8:	cmp	r1, #1
   11eec:	bne	11fa8 <Mat_VarReadNextInfo@plt+0xea4>
   11ef0:	ldr	r1, [r6]
   11ef4:	mov	r7, r4
   11ef8:	str	r1, [r0, #4]
   11efc:	b	11fd8 <Mat_VarReadNextInfo@plt+0xed4>
   11f00:	mov	r1, sl
   11f04:	mov	r3, r9
   11f08:	str	r7, [sp]
   11f0c:	str	r6, [sp, #4]
   11f10:	bl	10f60 <Mat_VarReadData@plt>
   11f14:	cmp	r5, #1
   11f18:	blt	11fd8 <Mat_VarReadNextInfo@plt+0xed4>
   11f1c:	ldr	r0, [sl, #32]
   11f20:	mov	r1, #0
   11f24:	cmp	r5, #4
   11f28:	bcc	11f74 <Mat_VarReadNextInfo@plt+0xe70>
   11f2c:	add	r2, r6, r5, lsl #2
   11f30:	cmp	r2, r0
   11f34:	bls	11f44 <Mat_VarReadNextInfo@plt+0xe40>
   11f38:	add	r2, r0, r5, lsl #2
   11f3c:	cmp	r6, r2
   11f40:	bcc	11f74 <Mat_VarReadNextInfo@plt+0xe70>
   11f44:	bic	r1, r5, #3
   11f48:	mov	r4, r7
   11f4c:	mov	r3, r0
   11f50:	mov	r2, r1
   11f54:	vld1.32	{d16-d17}, [r6]!
   11f58:	subs	r2, r2, #4
   11f5c:	vst1.32	{d16-d17}, [r3]!
   11f60:	bne	11f54 <Mat_VarReadNextInfo@plt+0xe50>
   11f64:	ldr	r6, [sp, #40]	; 0x28
   11f68:	cmp	r5, r1
   11f6c:	mov	r7, r4
   11f70:	beq	11fd8 <Mat_VarReadNextInfo@plt+0xed4>
   11f74:	add	r2, r6, r1, lsl #2
   11f78:	add	r0, r0, r1, lsl #2
   11f7c:	sub	r1, r5, r1
   11f80:	ldr	r3, [r2], #4
   11f84:	subs	r1, r1, #1
   11f88:	str	r3, [r0], #4
   11f8c:	bne	11f80 <Mat_VarReadNextInfo@plt+0xe7c>
   11f90:	b	11fd8 <Mat_VarReadNextInfo@plt+0xed4>
   11f94:	mov	r0, r6
   11f98:	mov	r1, r4
   11f9c:	bl	10f6c <Mat_VarReadDataAll@plt>
   11fa0:	mov	sl, r4
   11fa4:	b	11ff0 <Mat_VarReadNextInfo@plt+0xeec>
   11fa8:	ldr	r1, [r0, #4]
   11fac:	cmp	r1, #1
   11fb0:	bne	11fc4 <Mat_VarReadNextInfo@plt+0xec0>
   11fb4:	ldr	r1, [r6]
   11fb8:	mov	r7, r4
   11fbc:	str	r1, [r0]
   11fc0:	b	11fd8 <Mat_VarReadNextInfo@plt+0xed4>
   11fc4:	mov	r1, #2
   11fc8:	mov	r7, r4
   11fcc:	str	r1, [sl, #4]
   11fd0:	ldr	r1, [r6]
   11fd4:	stm	r0, {r1, r2}
   11fd8:	mov	r0, r9
   11fdc:	bl	10f30 <free@plt>
   11fe0:	mov	r0, r7
   11fe4:	bl	10f30 <free@plt>
   11fe8:	mov	r0, r6
   11fec:	bl	10f30 <free@plt>
   11ff0:	ldr	r1, [pc, #320]	; 12138 <Mat_VarReadNextInfo@plt+0x1034>
   11ff4:	mov	r0, sl
   11ff8:	ldr	r1, [pc, r1]
   11ffc:	blx	r1
   12000:	mov	r0, sl
   12004:	bl	10ff0 <Mat_VarFree@plt>
   12008:	ldr	r9, [sp, #16]
   1200c:	ldr	r7, [sp, #24]
   12010:	ldr	r0, [sp, #44]	; 0x2c
   12014:	add	r7, r7, #1
   12018:	cmp	r7, r0
   1201c:	bne	115e4 <Mat_VarReadNextInfo@plt+0x4e0>
   12020:	mov	r0, r9
   12024:	bl	11068 <Mat_Close@plt>
   12028:	bl	10ec4 <Mat_LogClose@plt>
   1202c:	mov	r4, #0
   12030:	mov	r0, r4
   12034:	sub	sp, fp, #56	; 0x38
   12038:	vpop	{d8-d10}
   1203c:	add	sp, sp, #4
   12040:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12044:	ldr	r0, [pc, #140]	; 120d8 <Mat_VarReadNextInfo@plt+0xfd4>
   12048:	add	r0, pc, r0
   1204c:	bl	110b0 <Mat_Help@plt>
   12050:	mov	r0, #0
   12054:	bl	10fe4 <exit@plt>
   12058:	ldr	r0, [pc, #124]	; 120dc <Mat_VarReadNextInfo@plt+0xfd8>
   1205c:	ldr	r1, [pc, #124]	; 120e0 <Mat_VarReadNextInfo@plt+0xfdc>
   12060:	ldr	r2, [pc, #124]	; 120e4 <Mat_VarReadNextInfo@plt+0xfe0>
   12064:	add	r0, pc, r0
   12068:	add	r1, pc, r1
   1206c:	add	r2, pc, r2
   12070:	bl	10f00 <printf@plt>
   12074:	mov	r0, #0
   12078:	bl	10fe4 <exit@plt>
   1207c:	nop	{0}
   12080:	andeq	r0, r0, r1
	...
   12090:	andeq	r3, r1, r8, lsl #29
   12094:	muleq	r0, r0, r0
   12098:	andeq	r3, r0, r8, rrx
   1209c:	andeq	r0, r0, ip, asr #29
   120a0:	andeq	r3, r1, r4, lsr pc
   120a4:	andeq	r0, r0, ip, lsl #30
   120a8:	andeq	r3, r0, r4, asr #4
   120ac:	andeq	r3, r1, r8, lsr lr
   120b0:	andeq	r3, r0, r0, lsr r1
   120b4:	andeq	r3, r1, r0, lsl pc
   120b8:	andeq	r3, r1, r8, lsl #28
   120bc:	andeq	r2, r0, ip, asr #30
   120c0:	andeq	r3, r1, ip, ror #25
   120c4:	andeq	r2, r0, pc, lsl pc
   120c8:	andeq	r3, r1, r0, ror #26
   120cc:	andeq	r1, r0, r0, lsl #11
   120d0:	andeq	r2, r0, ip, lsl #30
   120d4:	andeq	r2, r0, sp, lsl pc
   120d8:	andeq	r3, r1, ip, lsl r1
   120dc:	andeq	r2, r0, pc, lsr #6
   120e0:	andeq	r2, r0, ip, ror r2
   120e4:	andeq	r2, r0, sp, ror r3
   120e8:	andeq	r3, r1, r0, ror #24
   120ec:	andeq	r2, r0, pc, lsr #30
   120f0:	andeq	r2, r0, sl, lsr pc
   120f4:	andeq	r3, r1, r4, lsr #23
   120f8:	andeq	r3, r1, ip, lsr #22
   120fc:	andeq	r3, r0, sl, lsr #6
   12100:	andeq	r3, r1, ip, lsl #22
   12104:	andeq	r3, r0, r3, asr #6
   12108:	andeq	r3, r1, r0, ror #4
   1210c:			; <UNDEFINED> instruction: 0x00002abd
   12110:	andeq	r3, r1, ip, ror r5
   12114:	andeq	r2, r0, r0, lsl #28
   12118:	andeq	r3, r1, r0, asr sl
   1211c:	andeq	r3, r0, sp, lsr #5
   12120:	andeq	r3, r1, ip, lsr #8
   12124:	ldrdeq	r2, [r0], -r1
   12128:	andeq	r3, r1, r4, asr r4
   1212c:	andeq	r2, r0, pc, lsl #26
   12130:	andeq	r3, r1, r8, lsl sl
   12134:	andeq	r3, r0, r6, lsl r3
   12138:	ldrdeq	r3, [r1], -r4
   1213c:	ldrdeq	r2, [r0], -ip
   12140:	andeq	r3, r1, ip, asr #25
   12144:	andeq	r3, r1, r8, asr ip
   12148:	muleq	r1, ip, ip
   1214c:	strdeq	r3, [r1], -ip
   12150:	ldrdeq	r3, [r0], -sl
   12154:	push	{r4, r5, r6, sl, fp, lr}
   12158:	add	fp, sp, #16
   1215c:	ldr	r0, [pc, #64]	; 121a4 <Mat_VarReadNextInfo@plt+0x10a0>
   12160:	mov	r4, r1
   12164:	ldr	r0, [pc, r0]
   12168:	cmp	r0, #1
   1216c:	blt	12198 <Mat_VarReadNextInfo@plt+0x1094>
   12170:	ldr	r5, [pc, #48]	; 121a8 <Mat_VarReadNextInfo@plt+0x10a4>
   12174:	mov	r6, #0
   12178:	add	r5, pc, r5
   1217c:	mov	r0, r5
   12180:	bl	10f00 <printf@plt>
   12184:	ldr	r0, [pc, #32]	; 121ac <Mat_VarReadNextInfo@plt+0x10a8>
   12188:	add	r6, r6, #1
   1218c:	ldr	r0, [pc, r0]
   12190:	cmp	r6, r0
   12194:	blt	1217c <Mat_VarReadNextInfo@plt+0x1078>
   12198:	mov	r0, r4
   1219c:	pop	{r4, r5, r6, sl, fp, lr}
   121a0:	b	10fa8 <puts@plt>
   121a4:	andeq	r3, r1, r4, ror r0
   121a8:	andeq	r2, r0, r2, lsl r4
   121ac:	andeq	r3, r1, ip, asr #32
   121b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   121b4:	add	fp, sp, #28
   121b8:	sub	sp, sp, #28
   121bc:	cmp	r0, #0
   121c0:	beq	128d0 <Mat_VarReadNextInfo@plt+0x17cc>
   121c4:	mov	r4, r0
   121c8:	ldr	r0, [r0, #16]
   121cc:	str	r4, [sp, #16]
   121d0:	sub	r1, r0, #6
   121d4:	cmp	r1, #10
   121d8:	bcs	122bc <Mat_VarReadNextInfo@plt+0x11b8>
   121dc:	ldr	r0, [r4, #4]
   121e0:	cmp	r0, #3
   121e4:	beq	12414 <Mat_VarReadNextInfo@plt+0x1310>
   121e8:	cmp	r0, #2
   121ec:	bne	128d0 <Mat_VarReadNextInfo@plt+0x17cc>
   121f0:	ldr	r0, [r4, #40]	; 0x28
   121f4:	cmp	r0, #0
   121f8:	beq	128d0 <Mat_VarReadNextInfo@plt+0x17cc>
   121fc:	ldr	r0, [r4, #8]
   12200:	bl	10ffc <Mat_SizeOf@plt>
   12204:	mov	r5, r0
   12208:	ldr	r0, [r4, #20]
   1220c:	cmp	r0, #0
   12210:	beq	1270c <Mat_VarReadNextInfo@plt+0x1608>
   12214:	ldr	r1, [r4, #32]
   12218:	ldr	r0, [r1]
   1221c:	cmp	r0, #0
   12220:	beq	128d0 <Mat_VarReadNextInfo@plt+0x17cc>
   12224:	ldr	r2, [r4, #40]	; 0x28
   12228:	ldr	r4, [sp, #16]
   1222c:	mov	r6, #0
   12230:	ldr	sl, [r2]
   12234:	ldr	r7, [r2, #4]
   12238:	ldr	r1, [r1, #4]
   1223c:	cmp	r1, #0
   12240:	beq	12298 <Mat_VarReadNextInfo@plt+0x1194>
   12244:	mov	r8, #0
   12248:	b	12250 <Mat_VarReadNextInfo@plt+0x114c>
   1224c:	ldr	r0, [r0]
   12250:	mla	r9, r8, r0, r6
   12254:	ldr	r0, [r4, #8]
   12258:	mla	r1, r9, r5, sl
   1225c:	bl	12d64 <Mat_VarReadNextInfo@plt+0x1c60>
   12260:	ldr	r0, [pc, #1816]	; 12980 <Mat_VarReadNextInfo@plt+0x187c>
   12264:	add	r0, pc, r0
   12268:	bl	10f00 <printf@plt>
   1226c:	ldr	r0, [r4, #8]
   12270:	mla	r1, r9, r5, r7
   12274:	bl	12d64 <Mat_VarReadNextInfo@plt+0x1c60>
   12278:	ldr	r0, [pc, #1796]	; 12984 <Mat_VarReadNextInfo@plt+0x1880>
   1227c:	add	r0, pc, r0
   12280:	bl	10f00 <printf@plt>
   12284:	ldr	r0, [r4, #32]
   12288:	add	r8, r8, #1
   1228c:	ldr	r1, [r0, #4]
   12290:	cmp	r8, r1
   12294:	bcc	1224c <Mat_VarReadNextInfo@plt+0x1148>
   12298:	mov	r0, #10
   1229c:	bl	1105c <putchar@plt>
   122a0:	ldr	r0, [sp, #16]
   122a4:	add	r6, r6, #1
   122a8:	ldr	r1, [r0, #32]
   122ac:	ldr	r0, [r1]
   122b0:	cmp	r6, r0
   122b4:	bcc	12238 <Mat_VarReadNextInfo@plt+0x1134>
   122b8:	b	128d0 <Mat_VarReadNextInfo@plt+0x17cc>
   122bc:	sub	r1, r0, #4
   122c0:	cmp	r1, #2
   122c4:	bcc	125cc <Mat_VarReadNextInfo@plt+0x14c8>
   122c8:	cmp	r0, #1
   122cc:	beq	125e8 <Mat_VarReadNextInfo@plt+0x14e4>
   122d0:	cmp	r0, #2
   122d4:	bne	12700 <Mat_VarReadNextInfo@plt+0x15fc>
   122d8:	ldr	r1, [r4, #36]	; 0x24
   122dc:	cmp	r1, #0
   122e0:	beq	122f0 <Mat_VarReadNextInfo@plt+0x11ec>
   122e4:	ldr	r0, [pc, #1648]	; 1295c <Mat_VarReadNextInfo@plt+0x1858>
   122e8:	add	r0, pc, r0
   122ec:	bl	10f54 <Mat_Message@plt>
   122f0:	ldr	r1, [r4, #4]
   122f4:	ldr	r0, [pc, #1636]	; 12960 <Mat_VarReadNextInfo@plt+0x185c>
   122f8:	add	r0, pc, r0
   122fc:	bl	10f54 <Mat_Message@plt>
   12300:	ldr	r0, [r4, #4]
   12304:	cmp	r0, #0
   12308:	beq	128d0 <Mat_VarReadNextInfo@plt+0x17cc>
   1230c:	ldr	r0, [pc, #1616]	; 12964 <Mat_VarReadNextInfo@plt+0x1860>
   12310:	mov	r7, r4
   12314:	add	r0, pc, r0
   12318:	bl	10f54 <Mat_Message@plt>
   1231c:	mov	r0, r4
   12320:	bl	10eac <Mat_VarGetNumberOfFields@plt>
   12324:	ldr	r1, [r7, #32]
   12328:	ldr	r4, [r4, #4]
   1232c:	mov	r5, r0
   12330:	ldr	r6, [r1]
   12334:	cmp	r4, #2
   12338:	blt	123a8 <Mat_VarReadNextInfo@plt+0x12a4>
   1233c:	sub	r3, r4, #1
   12340:	mov	r2, #1
   12344:	cmp	r3, #4
   12348:	bcc	12394 <Mat_VarReadNextInfo@plt+0x1290>
   1234c:	mov	r2, #1
   12350:	bic	ip, r3, #3
   12354:	vdup.32	q8, r2
   12358:	orr	r2, ip, #1
   1235c:	mov	r7, ip
   12360:	vmov.32	d16[0], r6
   12364:	add	r6, r1, #4
   12368:	vld1.32	{d18-d19}, [r6]!
   1236c:	subs	r7, r7, #4
   12370:	vmul.i32	q8, q9, q8
   12374:	bne	12368 <Mat_VarReadNextInfo@plt+0x1264>
   12378:	vext.8	q9, q8, q8, #8
   1237c:	ldr	r7, [sp, #16]
   12380:	cmp	r3, ip
   12384:	vmul.i32	q0, q8, q9
   12388:	vmul.i32	q8, q0, d0[1]
   1238c:	vmov.32	r6, d16[0]
   12390:	beq	123a8 <Mat_VarReadNextInfo@plt+0x12a4>
   12394:	ldr	r3, [r1, r2, lsl #2]
   12398:	add	r2, r2, #1
   1239c:	cmp	r2, r4
   123a0:	mul	r6, r3, r6
   123a4:	blt	12394 <Mat_VarReadNextInfo@plt+0x1290>
   123a8:	cmp	r5, #1
   123ac:	blt	128d8 <Mat_VarReadNextInfo@plt+0x17d4>
   123b0:	cmp	r6, #0
   123b4:	bne	128d8 <Mat_VarReadNextInfo@plt+0x17d4>
   123b8:	mov	r0, r7
   123bc:	bl	10f90 <Mat_VarGetStructFieldnames@plt>
   123c0:	mov	r4, r0
   123c4:	ldr	r0, [pc, #1436]	; 12968 <Mat_VarReadNextInfo@plt+0x1864>
   123c8:	mov	r1, r5
   123cc:	add	r0, pc, r0
   123d0:	bl	10f54 <Mat_Message@plt>
   123d4:	ldr	r0, [pc, #1424]	; 1296c <Mat_VarReadNextInfo@plt+0x1868>
   123d8:	cmp	r4, #0
   123dc:	ldr	r0, [pc, r0]
   123e0:	ldr	r7, [pc, #1416]	; 12970 <Mat_VarReadNextInfo@plt+0x186c>
   123e4:	add	r0, r0, #1
   123e8:	add	r7, pc, r7
   123ec:	str	r0, [r7]
   123f0:	beq	12940 <Mat_VarReadNextInfo@plt+0x183c>
   123f4:	ldr	r6, [pc, #1400]	; 12974 <Mat_VarReadNextInfo@plt+0x1870>
   123f8:	add	r6, pc, r6
   123fc:	ldr	r1, [r4], #4
   12400:	mov	r0, r6
   12404:	bl	10f54 <Mat_Message@plt>
   12408:	subs	r5, r5, #1
   1240c:	bne	123fc <Mat_VarReadNextInfo@plt+0x12f8>
   12410:	b	12938 <Mat_VarReadNextInfo@plt+0x1834>
   12414:	ldr	r0, [r4, #40]	; 0x28
   12418:	cmp	r0, #0
   1241c:	beq	128d0 <Mat_VarReadNextInfo@plt+0x17cc>
   12420:	ldr	r0, [r4, #8]
   12424:	bl	10ffc <Mat_SizeOf@plt>
   12428:	mov	r5, r0
   1242c:	ldr	r0, [r4, #20]
   12430:	str	r5, [sp, #12]
   12434:	cmp	r0, #0
   12438:	beq	127a8 <Mat_VarReadNextInfo@plt+0x16a4>
   1243c:	ldr	r0, [r4, #32]
   12440:	ldr	r0, [r0, #8]
   12444:	cmp	r0, #0
   12448:	beq	128d0 <Mat_VarReadNextInfo@plt+0x17cc>
   1244c:	ldr	r0, [r4, #40]	; 0x28
   12450:	mov	r8, r4
   12454:	mov	r2, #0
   12458:	ldr	r1, [r0]
   1245c:	ldr	r9, [r0, #4]
   12460:	str	r1, [sp, #4]
   12464:	ldr	r5, [pc, #1308]	; 12988 <Mat_VarReadNextInfo@plt+0x1884>
   12468:	ldr	r4, [pc, #1308]	; 1298c <Mat_VarReadNextInfo@plt+0x1888>
   1246c:	str	r9, [sp, #20]
   12470:	ldr	r6, [sp, #12]
   12474:	add	r5, pc, r5
   12478:	add	r4, pc, r4
   1247c:	ldr	r1, [r8, #36]	; 0x24
   12480:	ldr	r0, [pc, #1288]	; 12990 <Mat_VarReadNextInfo@plt+0x188c>
   12484:	str	r2, [sp, #8]
   12488:	add	r0, pc, r0
   1248c:	bl	10f54 <Mat_Message@plt>
   12490:	ldr	r0, [pc, #1276]	; 12994 <Mat_VarReadNextInfo@plt+0x1890>
   12494:	ldr	r0, [pc, r0]
   12498:	add	r1, r0, #1
   1249c:	str	r1, [r5]
   124a0:	ldr	r0, [r8, #32]
   124a4:	ldr	r2, [r0]
   124a8:	cmp	r2, #0
   124ac:	beq	12598 <Mat_VarReadNextInfo@plt+0x1494>
   124b0:	mov	r2, #0
   124b4:	cmp	r1, #0
   124b8:	str	r2, [sp, #24]
   124bc:	beq	124f0 <Mat_VarReadNextInfo@plt+0x13ec>
   124c0:	ldr	r5, [pc, #1232]	; 12998 <Mat_VarReadNextInfo@plt+0x1894>
   124c4:	mov	r7, #0
   124c8:	add	r5, pc, r5
   124cc:	mov	r0, r5
   124d0:	bl	10f00 <printf@plt>
   124d4:	ldr	r0, [pc, #1216]	; 1299c <Mat_VarReadNextInfo@plt+0x1898>
   124d8:	add	r7, r7, #1
   124dc:	ldr	r0, [pc, r0]
   124e0:	cmp	r7, r0
   124e4:	bcc	124cc <Mat_VarReadNextInfo@plt+0x13c8>
   124e8:	ldr	r0, [sp, #16]
   124ec:	ldr	r0, [r0, #32]
   124f0:	ldr	r1, [r0, #4]
   124f4:	ldr	r8, [sp, #16]
   124f8:	ldmib	sp, {r2, sl}
   124fc:	ldr	r5, [sp, #24]
   12500:	cmp	r1, #0
   12504:	beq	12570 <Mat_VarReadNextInfo@plt+0x146c>
   12508:	mov	r7, #0
   1250c:	ldr	r0, [r0]
   12510:	mla	r1, sl, r1, r7
   12514:	mov	r9, r4
   12518:	mla	r4, r1, r0, r5
   1251c:	ldr	r0, [r8, #8]
   12520:	mov	r5, r2
   12524:	mla	r1, r4, r6, r2
   12528:	bl	12d64 <Mat_VarReadNextInfo@plt+0x1c60>
   1252c:	ldr	r0, [pc, #1132]	; 129a0 <Mat_VarReadNextInfo@plt+0x189c>
   12530:	add	r0, pc, r0
   12534:	bl	10f00 <printf@plt>
   12538:	ldr	r0, [sp, #20]
   1253c:	mla	r1, r4, r6, r0
   12540:	ldr	r0, [r8, #8]
   12544:	mov	r4, r9
   12548:	bl	12d64 <Mat_VarReadNextInfo@plt+0x1c60>
   1254c:	mov	r0, r9
   12550:	bl	10f00 <printf@plt>
   12554:	ldr	r0, [r8, #32]
   12558:	mov	r2, r5
   1255c:	ldr	r5, [sp, #24]
   12560:	add	r7, r7, #1
   12564:	ldr	r1, [r0, #4]
   12568:	cmp	r7, r1
   1256c:	bcc	1250c <Mat_VarReadNextInfo@plt+0x1408>
   12570:	mov	r0, #10
   12574:	bl	1105c <putchar@plt>
   12578:	ldr	r0, [r8, #32]
   1257c:	add	r5, r5, #1
   12580:	ldr	r2, [r0]
   12584:	ldr	r1, [pc, #1048]	; 129a4 <Mat_VarReadNextInfo@plt+0x18a0>
   12588:	ldr	r1, [pc, r1]
   1258c:	cmp	r5, r2
   12590:	mov	r2, r5
   12594:	bcc	124b4 <Mat_VarReadNextInfo@plt+0x13b0>
   12598:	ldr	r5, [pc, #1032]	; 129a8 <Mat_VarReadNextInfo@plt+0x18a4>
   1259c:	sub	r0, r1, #1
   125a0:	add	r5, pc, r5
   125a4:	str	r0, [r5]
   125a8:	mov	r0, #10
   125ac:	bl	1105c <putchar@plt>
   125b0:	ldr	r0, [r8, #32]
   125b4:	ldr	r2, [sp, #8]
   125b8:	ldr	r0, [r0, #8]
   125bc:	add	r2, r2, #1
   125c0:	cmp	r2, r0
   125c4:	bcc	1247c <Mat_VarReadNextInfo@plt+0x1378>
   125c8:	b	128d0 <Mat_VarReadNextInfo@plt+0x17cc>
   125cc:	ldr	r0, [pc, #1012]	; 129c8 <Mat_VarReadNextInfo@plt+0x18c4>
   125d0:	add	r0, pc, r0
   125d4:	ldrb	r1, [r0]
   125d8:	mov	r0, r4
   125dc:	sub	sp, fp, #28
   125e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   125e4:	b	11044 <Mat_VarPrint@plt>
   125e8:	ldr	r1, [r4, #36]	; 0x24
   125ec:	cmp	r1, #0
   125f0:	beq	12600 <Mat_VarReadNextInfo@plt+0x14fc>
   125f4:	ldr	r0, [pc, #988]	; 129d8 <Mat_VarReadNextInfo@plt+0x18d4>
   125f8:	add	r0, pc, r0
   125fc:	bl	10f54 <Mat_Message@plt>
   12600:	ldr	r1, [r4, #4]
   12604:	ldr	r0, [pc, #976]	; 129dc <Mat_VarReadNextInfo@plt+0x18d8>
   12608:	add	r0, pc, r0
   1260c:	bl	10f54 <Mat_Message@plt>
   12610:	ldr	r0, [r4, #4]
   12614:	cmp	r0, #0
   12618:	beq	128d0 <Mat_VarReadNextInfo@plt+0x17cc>
   1261c:	ldr	r1, [r4, #32]
   12620:	cmp	r0, #2
   12624:	ldr	r5, [r1]
   12628:	blt	1269c <Mat_VarReadNextInfo@plt+0x1598>
   1262c:	sub	r3, r0, #1
   12630:	mov	r2, #1
   12634:	cmp	r3, #4
   12638:	bcc	12684 <Mat_VarReadNextInfo@plt+0x1580>
   1263c:	mov	r2, #1
   12640:	bic	ip, r3, #3
   12644:	add	r6, r1, #4
   12648:	vdup.32	q8, r2
   1264c:	orr	r2, ip, #1
   12650:	mov	r7, ip
   12654:	vmov.32	d16[0], r5
   12658:	vld1.32	{d18-d19}, [r6]!
   1265c:	subs	r7, r7, #4
   12660:	vmul.i32	q8, q9, q8
   12664:	bne	12658 <Mat_VarReadNextInfo@plt+0x1554>
   12668:	vext.8	q9, q8, q8, #8
   1266c:	ldr	r4, [sp, #16]
   12670:	cmp	r3, ip
   12674:	vmul.i32	q0, q8, q9
   12678:	vmul.i32	q8, q0, d0[1]
   1267c:	vmov.32	r5, d16[0]
   12680:	beq	1269c <Mat_VarReadNextInfo@plt+0x1598>
   12684:	sub	r0, r0, r2
   12688:	add	r1, r1, r2, lsl #2
   1268c:	ldr	r2, [r1], #4
   12690:	subs	r0, r0, #1
   12694:	mul	r5, r2, r5
   12698:	bne	1268c <Mat_VarReadNextInfo@plt+0x1588>
   1269c:	ldr	r0, [pc, #828]	; 129e0 <Mat_VarReadNextInfo@plt+0x18dc>
   126a0:	add	r0, pc, r0
   126a4:	bl	10f54 <Mat_Message@plt>
   126a8:	ldr	r0, [pc, #820]	; 129e4 <Mat_VarReadNextInfo@plt+0x18e0>
   126ac:	add	r0, pc, r0
   126b0:	bl	10f54 <Mat_Message@plt>
   126b4:	ldr	r0, [pc, #812]	; 129e8 <Mat_VarReadNextInfo@plt+0x18e4>
   126b8:	ldr	r0, [pc, r0]
   126bc:	ldr	r6, [pc, #808]	; 129ec <Mat_VarReadNextInfo@plt+0x18e8>
   126c0:	add	r0, r0, #1
   126c4:	add	r6, pc, r6
   126c8:	str	r0, [r6]
   126cc:	ldr	r4, [r4, #40]	; 0x28
   126d0:	cmp	r4, #0
   126d4:	cmpne	r5, #0
   126d8:	beq	126f4 <Mat_VarReadNextInfo@plt+0x15f0>
   126dc:	ldr	r0, [r4], #4
   126e0:	bl	121b0 <Mat_VarReadNextInfo@plt+0x10ac>
   126e4:	subs	r5, r5, #1
   126e8:	bne	126dc <Mat_VarReadNextInfo@plt+0x15d8>
   126ec:	ldr	r0, [pc, #764]	; 129f0 <Mat_VarReadNextInfo@plt+0x18ec>
   126f0:	ldr	r0, [pc, r0]
   126f4:	sub	r0, r0, #1
   126f8:	str	r0, [r6]
   126fc:	b	12948 <Mat_VarReadNextInfo@plt+0x1844>
   12700:	ldr	r0, [pc, #748]	; 129f4 <Mat_VarReadNextInfo@plt+0x18f0>
   12704:	add	r0, pc, r0
   12708:	b	12950 <Mat_VarReadNextInfo@plt+0x184c>
   1270c:	ldr	r0, [r4, #32]
   12710:	ldr	r1, [r0]
   12714:	cmp	r1, #0
   12718:	beq	128d0 <Mat_VarReadNextInfo@plt+0x17cc>
   1271c:	ldr	r8, [r4, #40]	; 0x28
   12720:	mov	r7, #0
   12724:	ldr	r0, [r0, #4]
   12728:	cmp	r0, #0
   1272c:	beq	12788 <Mat_VarReadNextInfo@plt+0x1684>
   12730:	ldr	r0, [r4, #8]
   12734:	mla	r1, r7, r5, r8
   12738:	bl	12d64 <Mat_VarReadNextInfo@plt+0x1c60>
   1273c:	mov	r0, #32
   12740:	bl	1105c <putchar@plt>
   12744:	ldr	r0, [r4, #32]
   12748:	ldr	r1, [r0, #4]
   1274c:	cmp	r1, #2
   12750:	bcc	12788 <Mat_VarReadNextInfo@plt+0x1684>
   12754:	mov	r6, #1
   12758:	ldr	r0, [r0]
   1275c:	mla	r0, r6, r0, r7
   12760:	mla	r1, r0, r5, r8
   12764:	ldr	r0, [r4, #8]
   12768:	bl	12d64 <Mat_VarReadNextInfo@plt+0x1c60>
   1276c:	mov	r0, #32
   12770:	bl	1105c <putchar@plt>
   12774:	ldr	r0, [r4, #32]
   12778:	add	r6, r6, #1
   1277c:	ldr	r1, [r0, #4]
   12780:	cmp	r6, r1
   12784:	bcc	12758 <Mat_VarReadNextInfo@plt+0x1654>
   12788:	mov	r0, #10
   1278c:	bl	1105c <putchar@plt>
   12790:	ldr	r0, [r4, #32]
   12794:	add	r7, r7, #1
   12798:	ldr	r1, [r0]
   1279c:	cmp	r7, r1
   127a0:	bcc	12724 <Mat_VarReadNextInfo@plt+0x1620>
   127a4:	b	128d0 <Mat_VarReadNextInfo@plt+0x17cc>
   127a8:	ldr	r0, [r4, #32]
   127ac:	ldr	r0, [r0, #8]
   127b0:	cmp	r0, #0
   127b4:	beq	128d0 <Mat_VarReadNextInfo@plt+0x17cc>
   127b8:	ldr	r9, [r4, #40]	; 0x28
   127bc:	ldr	r7, [pc, #488]	; 129ac <Mat_VarReadNextInfo@plt+0x18a8>
   127c0:	mov	r6, #0
   127c4:	add	r7, pc, r7
   127c8:	ldr	r1, [r4, #36]	; 0x24
   127cc:	ldr	r0, [pc, #476]	; 129b0 <Mat_VarReadNextInfo@plt+0x18ac>
   127d0:	mov	r2, r6
   127d4:	add	r0, pc, r0
   127d8:	bl	10f54 <Mat_Message@plt>
   127dc:	ldr	r0, [pc, #464]	; 129b4 <Mat_VarReadNextInfo@plt+0x18b0>
   127e0:	ldr	r0, [pc, r0]
   127e4:	add	r1, r0, #1
   127e8:	str	r1, [r7]
   127ec:	ldr	r0, [r4, #32]
   127f0:	ldr	r2, [r0]
   127f4:	cmp	r2, #0
   127f8:	beq	128a4 <Mat_VarReadNextInfo@plt+0x17a0>
   127fc:	mov	r8, #0
   12800:	cmp	r1, #0
   12804:	beq	1283c <Mat_VarReadNextInfo@plt+0x1738>
   12808:	ldr	r4, [pc, #424]	; 129b8 <Mat_VarReadNextInfo@plt+0x18b4>
   1280c:	mov	r7, #0
   12810:	add	r4, pc, r4
   12814:	mov	r0, r4
   12818:	bl	10f00 <printf@plt>
   1281c:	ldr	r0, [pc, #408]	; 129bc <Mat_VarReadNextInfo@plt+0x18b8>
   12820:	add	r7, r7, #1
   12824:	ldr	r0, [pc, r0]
   12828:	cmp	r7, r0
   1282c:	bcc	12814 <Mat_VarReadNextInfo@plt+0x1710>
   12830:	ldr	r4, [sp, #16]
   12834:	ldr	r5, [sp, #12]
   12838:	ldr	r0, [r4, #32]
   1283c:	ldr	r1, [r0, #4]
   12840:	cmp	r1, #0
   12844:	beq	12880 <Mat_VarReadNextInfo@plt+0x177c>
   12848:	mov	sl, #0
   1284c:	ldr	r0, [r0]
   12850:	mla	r1, r6, r1, sl
   12854:	mla	r0, r1, r0, r8
   12858:	mla	r1, r0, r5, r9
   1285c:	ldr	r0, [r4, #8]
   12860:	bl	12d64 <Mat_VarReadNextInfo@plt+0x1c60>
   12864:	mov	r0, #32
   12868:	bl	1105c <putchar@plt>
   1286c:	ldr	r0, [r4, #32]
   12870:	add	sl, sl, #1
   12874:	ldr	r1, [r0, #4]
   12878:	cmp	sl, r1
   1287c:	bcc	1284c <Mat_VarReadNextInfo@plt+0x1748>
   12880:	mov	r0, #10
   12884:	bl	1105c <putchar@plt>
   12888:	ldr	r0, [r4, #32]
   1288c:	add	r8, r8, #1
   12890:	ldr	r2, [r0]
   12894:	ldr	r1, [pc, #292]	; 129c0 <Mat_VarReadNextInfo@plt+0x18bc>
   12898:	ldr	r1, [pc, r1]
   1289c:	cmp	r8, r2
   128a0:	bcc	12800 <Mat_VarReadNextInfo@plt+0x16fc>
   128a4:	ldr	r7, [pc, #280]	; 129c4 <Mat_VarReadNextInfo@plt+0x18c0>
   128a8:	sub	r0, r1, #1
   128ac:	add	r7, pc, r7
   128b0:	str	r0, [r7]
   128b4:	mov	r0, #10
   128b8:	bl	1105c <putchar@plt>
   128bc:	ldr	r0, [r4, #32]
   128c0:	add	r6, r6, #1
   128c4:	ldr	r0, [r0, #8]
   128c8:	cmp	r6, r0
   128cc:	bcc	127c8 <Mat_VarReadNextInfo@plt+0x16c4>
   128d0:	sub	sp, fp, #28
   128d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   128d8:	cmp	r5, #1
   128dc:	blt	128d0 <Mat_VarReadNextInfo@plt+0x17cc>
   128e0:	cmp	r6, #0
   128e4:	beq	128d0 <Mat_VarReadNextInfo@plt+0x17cc>
   128e8:	ldr	r0, [pc, #220]	; 129cc <Mat_VarReadNextInfo@plt+0x18c8>
   128ec:	mov	r1, r5
   128f0:	mov	r4, r7
   128f4:	add	r0, pc, r0
   128f8:	bl	10f54 <Mat_Message@plt>
   128fc:	ldr	r0, [pc, #204]	; 129d0 <Mat_VarReadNextInfo@plt+0x18cc>
   12900:	ldr	r0, [pc, r0]
   12904:	ldr	r7, [pc, #200]	; 129d4 <Mat_VarReadNextInfo@plt+0x18d0>
   12908:	add	r0, r0, #1
   1290c:	add	r7, pc, r7
   12910:	str	r0, [r7]
   12914:	ldr	r4, [r4, #40]	; 0x28
   12918:	cmp	r4, #0
   1291c:	mulne	r5, r6, r5
   12920:	cmpne	r5, #0
   12924:	beq	12940 <Mat_VarReadNextInfo@plt+0x183c>
   12928:	ldr	r0, [r4], #4
   1292c:	bl	121b0 <Mat_VarReadNextInfo@plt+0x10ac>
   12930:	subs	r5, r5, #1
   12934:	bne	12928 <Mat_VarReadNextInfo@plt+0x1824>
   12938:	ldr	r0, [pc, #56]	; 12978 <Mat_VarReadNextInfo@plt+0x1874>
   1293c:	ldr	r0, [pc, r0]
   12940:	sub	r0, r0, #1
   12944:	str	r0, [r7]
   12948:	ldr	r0, [pc, #44]	; 1297c <Mat_VarReadNextInfo@plt+0x1878>
   1294c:	add	r0, pc, r0
   12950:	sub	sp, fp, #28
   12954:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12958:	b	10f54 <Mat_Message@plt>
   1295c:	andeq	r2, r0, lr, ror r1
   12960:	andeq	r2, r0, sp, ror r1
   12964:	andeq	r2, r0, r0, ror r1
   12968:	andeq	r2, r0, lr, asr #1
   1296c:	strdeq	r2, [r1], -ip
   12970:	strdeq	r2, [r1], -r0
   12974:	andeq	r2, r0, r0, ror r0
   12978:	muleq	r1, ip, r8
   1297c:	andeq	r2, r0, r4, ror r0
   12980:	andeq	r2, r0, r0, ror #4
   12984:	andeq	r2, r0, ip, asr #4
   12988:	andeq	r2, r1, r4, ror #26
   1298c:	andeq	r2, r0, r0, asr r0
   12990:	andeq	r2, r0, r5, rrx
   12994:	andeq	r2, r1, r4, asr #26
   12998:	andeq	r2, r0, r2, asr #1
   1299c:	strdeq	r2, [r1], -ip
   129a0:	muleq	r0, r4, pc	; <UNPREDICTABLE>
   129a4:	andeq	r2, r1, r0, asr ip
   129a8:	andeq	r2, r1, r8, lsr ip
   129ac:	andeq	r2, r1, r4, lsl sl
   129b0:	andeq	r1, r0, r9, lsl sp
   129b4:	strdeq	r2, [r1], -r8
   129b8:	andeq	r1, r0, sl, ror sp
   129bc:			; <UNDEFINED> instruction: 0x000129b4
   129c0:	andeq	r2, r1, r0, asr #18
   129c4:	andeq	r2, r1, ip, lsr #18
   129c8:	andeq	r2, r1, r0, lsl #24
   129cc:	andeq	r1, r0, r6, lsr #23
   129d0:	ldrdeq	r2, [r1], -r8
   129d4:	andeq	r2, r1, ip, asr #17
   129d8:	andeq	r1, r0, lr, ror #28
   129dc:	andeq	r1, r0, sp, ror #28
   129e0:	andeq	r1, r0, r7, lsl #28
   129e4:	strdeq	r1, [r0], -r9
   129e8:	andeq	r2, r1, r0, lsr #22
   129ec:	andeq	r2, r1, r4, lsl fp
   129f0:	andeq	r2, r1, r8, ror #21
   129f4:			; <UNDEFINED> instruction: 0x00001dba
   129f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   129fc:	add	fp, sp, #24
   12a00:	vpush	{d8-d9}
   12a04:	sub	sp, sp, #40	; 0x28
   12a08:	add	r8, sp, #8
   12a0c:	mov	r4, r0
   12a10:	vmov.i32	q8, #0	; 0x00000000
   12a14:	mov	r0, r8
   12a18:	vst1.64	{d16-d17}, [r0]!
   12a1c:	vst1.64	{d16-d17}, [r0]
   12a20:	ldr	r5, [pc, #528]	; 12c38 <Mat_VarReadNextInfo@plt+0x1b34>
   12a24:	add	r5, pc, r5
   12a28:	ldrb	r0, [r5]
   12a2c:	cmp	r0, #0
   12a30:	bne	12a6c <Mat_VarReadNextInfo@plt+0x1968>
   12a34:	ldr	r0, [pc, #512]	; 12c3c <Mat_VarReadNextInfo@plt+0x1b38>
   12a38:	add	r0, pc, r0
   12a3c:	str	r0, [sp]
   12a40:	ldr	r0, [pc, #504]	; 12c40 <Mat_VarReadNextInfo@plt+0x1b3c>
   12a44:	ldr	r1, [pc, #504]	; 12c44 <Mat_VarReadNextInfo@plt+0x1b40>
   12a48:	ldr	r2, [pc, #504]	; 12c48 <Mat_VarReadNextInfo@plt+0x1b44>
   12a4c:	ldr	r3, [pc, #504]	; 12c4c <Mat_VarReadNextInfo@plt+0x1b48>
   12a50:	add	r0, pc, r0
   12a54:	add	r1, pc, r1
   12a58:	add	r2, pc, r2
   12a5c:	add	r3, pc, r3
   12a60:	bl	10f00 <printf@plt>
   12a64:	mov	r0, #1
   12a68:	strb	r0, [r5]
   12a6c:	ldr	r1, [r4, #36]	; 0x24
   12a70:	ldr	r0, [pc, #472]	; 12c50 <Mat_VarReadNextInfo@plt+0x1b4c>
   12a74:	add	r0, pc, r0
   12a78:	bl	10f00 <printf@plt>
   12a7c:	ldr	r0, [r4, #4]
   12a80:	cmp	r0, #1
   12a84:	blt	12b24 <Mat_VarReadNextInfo@plt+0x1a20>
   12a88:	ldr	r0, [r4, #32]
   12a8c:	ldr	r1, [r0]
   12a90:	ldr	r0, [pc, #444]	; 12c54 <Mat_VarReadNextInfo@plt+0x1b50>
   12a94:	add	r0, pc, r0
   12a98:	bl	10f00 <printf@plt>
   12a9c:	ldr	r0, [r4, #4]
   12aa0:	cmp	r0, #2
   12aa4:	blt	12b10 <Mat_VarReadNextInfo@plt+0x1a0c>
   12aa8:	ldr	r5, [pc, #424]	; 12c58 <Mat_VarReadNextInfo@plt+0x1b54>
   12aac:	vldr	d8, [pc, #356]	; 12c18 <Mat_VarReadNextInfo@plt+0x1b14>
   12ab0:	mov	r7, #1
   12ab4:	mov	r6, #0
   12ab8:	vmov.f64	d9, #112	; 0x3f800000  1.0
   12abc:	add	r5, pc, r5
   12ac0:	ldr	r0, [r4, #32]
   12ac4:	add	r0, r0, r7, lsl #2
   12ac8:	vldr	s0, [r0]
   12acc:	vcvt.f64.u32	d0, s0
   12ad0:	bl	10fc0 <log10@plt>
   12ad4:	vrintp.f64	d16, d0
   12ad8:	vadd.f64	d16, d16, d9
   12adc:	vcmpe.f64	d16, d8
   12ae0:	vmrs	APSR_nzcv, fpscr
   12ae4:	bpl	12b00 <Mat_VarReadNextInfo@plt+0x19fc>
   12ae8:	ldr	r0, [r4, #32]
   12aec:	mov	r1, r5
   12af0:	ldr	r2, [r0, r7, lsl #2]
   12af4:	add	r0, r8, r6
   12af8:	bl	110a4 <sprintf@plt>
   12afc:	add	r6, r0, r6
   12b00:	ldr	r0, [r4, #4]
   12b04:	add	r7, r7, #1
   12b08:	cmp	r7, r0
   12b0c:	blt	12ac0 <Mat_VarReadNextInfo@plt+0x19bc>
   12b10:	ldr	r0, [pc, #324]	; 12c5c <Mat_VarReadNextInfo@plt+0x1b58>
   12b14:	add	r1, sp, #8
   12b18:	add	r0, pc, r0
   12b1c:	bl	10f00 <printf@plt>
   12b20:	b	12b30 <Mat_VarReadNextInfo@plt+0x1a2c>
   12b24:	ldr	r0, [pc, #308]	; 12c60 <Mat_VarReadNextInfo@plt+0x1b5c>
   12b28:	add	r0, pc, r0
   12b2c:	bl	10f00 <printf@plt>
   12b30:	mov	r0, r4
   12b34:	bl	110d4 <Mat_VarGetSize@plt>
   12b38:	mov	r1, r0
   12b3c:	ldr	r0, [pc, #288]	; 12c64 <Mat_VarReadNextInfo@plt+0x1b60>
   12b40:	add	r0, pc, r0
   12b44:	ldrb	r0, [r0]
   12b48:	cmp	r0, #1
   12b4c:	bne	12b7c <Mat_VarReadNextInfo@plt+0x1a78>
   12b50:	cmp	r1, #1073741825	; 0x40000001
   12b54:	bcc	12bb0 <Mat_VarReadNextInfo@plt+0x1aac>
   12b58:	vmov	s0, r1
   12b5c:	vldr	d16, [pc, #204]	; 12c30 <Mat_VarReadNextInfo@plt+0x1b2c>
   12b60:	vcvt.f64.u32	d17, s0
   12b64:	ldr	r0, [pc, #252]	; 12c68 <Mat_VarReadNextInfo@plt+0x1b64>
   12b68:	vmul.f64	d16, d17, d16
   12b6c:	vmov	r2, r3, d16
   12b70:	add	r0, pc, r0
   12b74:	bl	10f00 <printf@plt>
   12b78:	b	12b88 <Mat_VarReadNextInfo@plt+0x1a84>
   12b7c:	ldr	r0, [pc, #244]	; 12c78 <Mat_VarReadNextInfo@plt+0x1b74>
   12b80:	add	r0, pc, r0
   12b84:	bl	10f00 <printf@plt>
   12b88:	ldr	r0, [r4, #16]
   12b8c:	ldr	r1, [pc, #232]	; 12c7c <Mat_VarReadNextInfo@plt+0x1b78>
   12b90:	add	r1, pc, r1
   12b94:	ldr	r1, [r1, r0, lsl #2]
   12b98:	ldr	r0, [pc, #224]	; 12c80 <Mat_VarReadNextInfo@plt+0x1b7c>
   12b9c:	add	r0, pc, r0
   12ba0:	bl	10f00 <printf@plt>
   12ba4:	sub	sp, fp, #40	; 0x28
   12ba8:	vpop	{d8-d9}
   12bac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12bb0:	cmp	r1, #1048576	; 0x100000
   12bb4:	bls	12bdc <Mat_VarReadNextInfo@plt+0x1ad8>
   12bb8:	vmov	s0, r1
   12bbc:	vldr	d16, [pc, #100]	; 12c28 <Mat_VarReadNextInfo@plt+0x1b24>
   12bc0:	vcvt.f64.u32	d17, s0
   12bc4:	ldr	r0, [pc, #160]	; 12c6c <Mat_VarReadNextInfo@plt+0x1b68>
   12bc8:	vmul.f64	d16, d17, d16
   12bcc:	vmov	r2, r3, d16
   12bd0:	add	r0, pc, r0
   12bd4:	bl	10f00 <printf@plt>
   12bd8:	b	12b88 <Mat_VarReadNextInfo@plt+0x1a84>
   12bdc:	cmp	r1, #1024	; 0x400
   12be0:	bls	12c08 <Mat_VarReadNextInfo@plt+0x1b04>
   12be4:	vmov	s0, r1
   12be8:	vldr	d16, [pc, #48]	; 12c20 <Mat_VarReadNextInfo@plt+0x1b1c>
   12bec:	vcvt.f64.u32	d17, s0
   12bf0:	ldr	r0, [pc, #120]	; 12c70 <Mat_VarReadNextInfo@plt+0x1b6c>
   12bf4:	vmul.f64	d16, d17, d16
   12bf8:	vmov	r2, r3, d16
   12bfc:	add	r0, pc, r0
   12c00:	bl	10f00 <printf@plt>
   12c04:	b	12b88 <Mat_VarReadNextInfo@plt+0x1a84>
   12c08:	ldr	r0, [pc, #100]	; 12c74 <Mat_VarReadNextInfo@plt+0x1b70>
   12c0c:	add	r0, pc, r0
   12c10:	b	12b84 <Mat_VarReadNextInfo@plt+0x1a80>
   12c14:	nop	{0}
   12c18:	andeq	r0, r0, r0
   12c1c:	submi	r0, r0, r0
   12c20:	andeq	r0, r0, r0
   12c24:	svccc	0x00500000
   12c28:	andeq	r0, r0, r0
   12c2c:	cdpcc	0, 11, cr0, cr0, cr0, {0}
   12c30:	andeq	r0, r0, r0
   12c34:	cdpcc	0, 1, cr0, cr0, cr0, {0}
   12c38:			; <UNDEFINED> instruction: 0x000127b8
   12c3c:	andeq	r1, r0, r6, lsr #22
   12c40:	ldrdeq	r1, [r0], -r6
   12c44:	strdeq	r1, [r0], -sl
   12c48:	strdeq	r1, [r0], -fp
   12c4c:	strdeq	r1, [r0], -ip
   12c50:	strdeq	r1, [r0], -r0
   12c54:	ldrdeq	r1, [r0], -r6
   12c58:			; <UNDEFINED> instruction: 0x00001ab3
   12c5c:	andeq	r1, r0, ip, asr sl
   12c60:	andeq	r1, r0, r2, asr sl
   12c64:	muleq	r1, r4, r6
   12c68:	andeq	r1, r0, pc, lsl sl
   12c6c:	andeq	r1, r0, r8, asr #19
   12c70:	andeq	r1, r0, r5, lsr #19
   12c74:	muleq	r0, lr, r9
   12c78:	andeq	r1, r0, r2, lsr sl
   12c7c:	andeq	r2, r1, ip, lsl #6
   12c80:	andeq	r1, r0, lr, lsl sl
   12c84:	push	{r4, r5, r6, sl, fp, lr}
   12c88:	add	fp, sp, #16
   12c8c:	mov	r1, #40	; 0x28
   12c90:	mov	r4, r0
   12c94:	bl	11014 <strchr@plt>
   12c98:	mov	r5, r0
   12c9c:	mov	r0, r4
   12ca0:	mov	r1, #41	; 0x29
   12ca4:	bl	11014 <strchr@plt>
   12ca8:	cmp	r0, #0
   12cac:	beq	12cc8 <Mat_VarReadNextInfo@plt+0x1bc4>
   12cb0:	cmp	r5, #0
   12cb4:	beq	12cc4 <Mat_VarReadNextInfo@plt+0x1bc0>
   12cb8:	cmp	r0, r5
   12cbc:	movcc	r5, r0
   12cc0:	b	12cc8 <Mat_VarReadNextInfo@plt+0x1bc4>
   12cc4:	mov	r5, r0
   12cc8:	mov	r0, r4
   12ccc:	mov	r1, #123	; 0x7b
   12cd0:	bl	11014 <strchr@plt>
   12cd4:	cmp	r0, #0
   12cd8:	beq	12cf4 <Mat_VarReadNextInfo@plt+0x1bf0>
   12cdc:	mov	r6, r0
   12ce0:	cmp	r5, #0
   12ce4:	beq	12cf8 <Mat_VarReadNextInfo@plt+0x1bf4>
   12ce8:	cmp	r6, r5
   12cec:	movcs	r6, r5
   12cf0:	b	12cf8 <Mat_VarReadNextInfo@plt+0x1bf4>
   12cf4:	mov	r6, r5
   12cf8:	mov	r0, r4
   12cfc:	mov	r1, #125	; 0x7d
   12d00:	bl	11014 <strchr@plt>
   12d04:	cmp	r0, #0
   12d08:	beq	12d24 <Mat_VarReadNextInfo@plt+0x1c20>
   12d0c:	mov	r5, r0
   12d10:	cmp	r6, #0
   12d14:	beq	12d28 <Mat_VarReadNextInfo@plt+0x1c24>
   12d18:	cmp	r5, r6
   12d1c:	movcs	r5, r6
   12d20:	b	12d28 <Mat_VarReadNextInfo@plt+0x1c24>
   12d24:	mov	r5, r6
   12d28:	mov	r0, r4
   12d2c:	mov	r1, #46	; 0x2e
   12d30:	bl	11014 <strchr@plt>
   12d34:	cmp	r0, #0
   12d38:	beq	12d50 <Mat_VarReadNextInfo@plt+0x1c4c>
   12d3c:	cmp	r5, #0
   12d40:	beq	12d54 <Mat_VarReadNextInfo@plt+0x1c50>
   12d44:	cmp	r0, r5
   12d48:	movcs	r0, r5
   12d4c:	b	12d54 <Mat_VarReadNextInfo@plt+0x1c50>
   12d50:	mov	r0, r5
   12d54:	cmp	r0, #0
   12d58:	movne	r4, r0
   12d5c:	mov	r0, r4
   12d60:	pop	{r4, r5, r6, sl, fp, pc}
   12d64:	sub	r0, r0, #1
   12d68:	cmp	r0, #12
   12d6c:	bxhi	lr
   12d70:	add	r2, pc, #4
   12d74:	ldr	r0, [r2, r0, lsl #2]
   12d78:	add	pc, r2, r0
   12d7c:	andeq	r0, r0, r4, lsr r0
   12d80:	andeq	r0, r0, r4, asr #32
   12d84:	andeq	r0, r0, r4, asr r0
   12d88:	andeq	r0, r0, r4, rrx
   12d8c:	andeq	r0, r0, r4, ror r0
   12d90:	andeq	r0, r0, r4, lsl #1
   12d94:	muleq	r0, r4, r0
   12d98:	ldrdeq	r0, [r0], -r4
   12d9c:	andeq	r0, r0, r0, lsr #1
   12da0:	ldrdeq	r0, [r0], -r4
   12da4:	ldrdeq	r0, [r0], -r4
   12da8:	strheq	r0, [r0], -r4
   12dac:	andeq	r0, r0, r4, asr #1
   12db0:	ldrsb	r1, [r1]
   12db4:	ldr	r0, [pc, #180]	; 12e70 <Mat_VarReadNextInfo@plt+0x1d6c>
   12db8:	add	r0, pc, r0
   12dbc:	b	10f00 <printf@plt>
   12dc0:	ldrb	r1, [r1]
   12dc4:	ldr	r0, [pc, #168]	; 12e74 <Mat_VarReadNextInfo@plt+0x1d70>
   12dc8:	add	r0, pc, r0
   12dcc:	b	10f00 <printf@plt>
   12dd0:	ldrsh	r1, [r1]
   12dd4:	ldr	r0, [pc, #140]	; 12e68 <Mat_VarReadNextInfo@plt+0x1d64>
   12dd8:	add	r0, pc, r0
   12ddc:	b	10f00 <printf@plt>
   12de0:	ldrh	r1, [r1]
   12de4:	ldr	r0, [pc, #128]	; 12e6c <Mat_VarReadNextInfo@plt+0x1d68>
   12de8:	add	r0, pc, r0
   12dec:	b	10f00 <printf@plt>
   12df0:	ldr	r1, [r1]
   12df4:	ldr	r0, [pc, #100]	; 12e60 <Mat_VarReadNextInfo@plt+0x1d5c>
   12df8:	add	r0, pc, r0
   12dfc:	b	10f00 <printf@plt>
   12e00:	ldr	r1, [r1]
   12e04:	ldr	r0, [pc, #88]	; 12e64 <Mat_VarReadNextInfo@plt+0x1d60>
   12e08:	add	r0, pc, r0
   12e0c:	b	10f00 <printf@plt>
   12e10:	vldr	s0, [r1]
   12e14:	vcvt.f64.f32	d16, s0
   12e18:	b	12e20 <Mat_VarReadNextInfo@plt+0x1d1c>
   12e1c:	vldr	d16, [r1]
   12e20:	ldr	r0, [pc, #44]	; 12e54 <Mat_VarReadNextInfo@plt+0x1d50>
   12e24:	vmov	r2, r3, d16
   12e28:	add	r0, pc, r0
   12e2c:	b	10f00 <printf@plt>
   12e30:	ldrd	r2, [r1]
   12e34:	ldr	r0, [pc, #28]	; 12e58 <Mat_VarReadNextInfo@plt+0x1d54>
   12e38:	add	r0, pc, r0
   12e3c:	b	10f00 <printf@plt>
   12e40:	ldrd	r2, [r1]
   12e44:	ldr	r0, [pc, #16]	; 12e5c <Mat_VarReadNextInfo@plt+0x1d58>
   12e48:	add	r0, pc, r0
   12e4c:	b	10f00 <printf@plt>
   12e50:	bx	lr
   12e54:	andeq	r1, r0, r3, lsr #13
   12e58:	muleq	r0, r6, r6
   12e5c:	andeq	r1, r0, fp, lsl #13
   12e60:	andeq	r1, r0, r9, lsl #13
   12e64:	ldrdeq	r1, [r0], -r0
   12e68:	andeq	r1, r0, r3, lsl #14
   12e6c:	strdeq	r1, [r0], -r7
   12e70:	andeq	r1, r0, fp, lsr #14
   12e74:	andeq	r1, r0, r0, lsr #14
   12e78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e7c:	add	fp, sp, #28
   12e80:	sub	sp, sp, #12
   12e84:	str	r3, [sp, #4]
   12e88:	str	r2, [sp, #8]
   12e8c:	mov	r6, r1
   12e90:	mov	r7, r0
   12e94:	add	r5, r0, #1
   12e98:	mov	r9, #0
   12e9c:	mov	sl, #0
   12ea0:	ldr	r4, [pc, #552]	; 130d0 <Mat_VarReadNextInfo@plt+0x1fcc>
   12ea4:	add	r4, pc, r4
   12ea8:	b	12eb8 <Mat_VarReadNextInfo@plt+0x1db4>
   12eac:	cmp	r6, r7
   12eb0:	subeq	sp, fp, #28
   12eb4:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12eb8:	mov	r8, r7
   12ebc:	ldrb	r0, [r7, #1]!
   12ec0:	cmp	r0, #57	; 0x39
   12ec4:	bgt	12f20 <Mat_VarReadNextInfo@plt+0x1e1c>
   12ec8:	cmp	r0, #41	; 0x29
   12ecc:	beq	12f30 <Mat_VarReadNextInfo@plt+0x1e2c>
   12ed0:	cmp	r0, #44	; 0x2c
   12ed4:	bne	12eac <Mat_VarReadNextInfo@plt+0x1da8>
   12ed8:	cmp	r9, #0
   12edc:	beq	1302c <Mat_VarReadNextInfo@plt+0x1f28>
   12ee0:	cmp	r9, #1
   12ee4:	beq	12ef0 <Mat_VarReadNextInfo@plt+0x1dec>
   12ee8:	cmp	r9, #2
   12eec:	bne	130c0 <Mat_VarReadNextInfo@plt+0x1fbc>
   12ef0:	mov	r0, #0
   12ef4:	mov	r1, r4
   12ef8:	strb	r0, [r8, #1]
   12efc:	mov	r0, r5
   12f00:	bl	10edc <strcmp@plt>
   12f04:	cmp	r0, #0
   12f08:	beq	13074 <Mat_VarReadNextInfo@plt+0x1f70>
   12f0c:	mov	r0, r5
   12f10:	mov	r1, #0
   12f14:	mov	r2, #10
   12f18:	bl	10ef4 <strtol@plt>
   12f1c:	b	130b8 <Mat_VarReadNextInfo@plt+0x1fb4>
   12f20:	cmp	r0, #58	; 0x3a
   12f24:	beq	12f74 <Mat_VarReadNextInfo@plt+0x1e70>
   12f28:	cmp	r0, #125	; 0x7d
   12f2c:	bne	12eac <Mat_VarReadNextInfo@plt+0x1da8>
   12f30:	mov	r0, #0
   12f34:	mov	r1, r4
   12f38:	strb	r0, [r8, #1]
   12f3c:	mov	r0, r5
   12f40:	bl	10edc <strcmp@plt>
   12f44:	cmp	r0, #0
   12f48:	beq	12fc8 <Mat_VarReadNextInfo@plt+0x1ec4>
   12f4c:	mov	r0, r5
   12f50:	mov	r1, #0
   12f54:	mov	r2, #10
   12f58:	bl	10ef4 <strtol@plt>
   12f5c:	cmp	r9, #2
   12f60:	cmpne	r9, #1
   12f64:	bne	13014 <Mat_VarReadNextInfo@plt+0x1f10>
   12f68:	ldr	r1, [fp, #8]
   12f6c:	str	r0, [r1, sl, lsl #2]
   12f70:	b	13008 <Mat_VarReadNextInfo@plt+0x1f04>
   12f74:	mov	r0, #0
   12f78:	mov	r1, r4
   12f7c:	strb	r0, [r8, #1]
   12f80:	mov	r0, r5
   12f84:	bl	10edc <strcmp@plt>
   12f88:	cmp	r0, #0
   12f8c:	beq	12ff0 <Mat_VarReadNextInfo@plt+0x1eec>
   12f90:	mov	r0, r5
   12f94:	mov	r1, #0
   12f98:	mov	r2, #10
   12f9c:	bl	10ef4 <strtol@plt>
   12fa0:	cmp	r9, #2
   12fa4:	beq	12f68 <Mat_VarReadNextInfo@plt+0x1e64>
   12fa8:	cmp	r9, #1
   12fac:	beq	13068 <Mat_VarReadNextInfo@plt+0x1f64>
   12fb0:	cmp	r9, #0
   12fb4:	bne	1308c <Mat_VarReadNextInfo@plt+0x1f88>
   12fb8:	ldr	r1, [sp, #8]
   12fbc:	sub	r0, r0, #1
   12fc0:	str	r0, [r1, sl, lsl #2]
   12fc4:	b	13008 <Mat_VarReadNextInfo@plt+0x1f04>
   12fc8:	cmp	r9, #2
   12fcc:	cmpne	r9, #1
   12fd0:	beq	12ffc <Mat_VarReadNextInfo@plt+0x1ef8>
   12fd4:	cmp	r9, #0
   12fd8:	bne	1308c <Mat_VarReadNextInfo@plt+0x1f88>
   12fdc:	ldr	r0, [sp, #8]
   12fe0:	mvn	r1, #0
   12fe4:	str	r1, [r0, sl, lsl #2]
   12fe8:	ldr	r0, [fp, #8]
   12fec:	b	13004 <Mat_VarReadNextInfo@plt+0x1f00>
   12ff0:	cmp	r9, #2
   12ff4:	cmpne	r9, #1
   12ff8:	bne	1307c <Mat_VarReadNextInfo@plt+0x1f78>
   12ffc:	ldr	r0, [fp, #8]
   13000:	mvn	r1, #0
   13004:	str	r1, [r0, sl, lsl #2]
   13008:	add	r5, r8, #2
   1300c:	add	r9, r9, #1
   13010:	b	12eac <Mat_VarReadNextInfo@plt+0x1da8>
   13014:	cmp	r9, #0
   13018:	bne	1308c <Mat_VarReadNextInfo@plt+0x1f88>
   1301c:	ldr	r2, [sp, #8]
   13020:	sub	r1, r0, #1
   13024:	str	r1, [r2, sl, lsl #2]
   13028:	b	12f68 <Mat_VarReadNextInfo@plt+0x1e64>
   1302c:	mov	r0, #0
   13030:	mov	r1, r4
   13034:	strb	r0, [r8, #1]
   13038:	mov	r0, r5
   1303c:	bl	10edc <strcmp@plt>
   13040:	cmp	r0, #0
   13044:	beq	130ac <Mat_VarReadNextInfo@plt+0x1fa8>
   13048:	mov	r0, r5
   1304c:	mov	r1, #0
   13050:	mov	r2, #10
   13054:	bl	10ef4 <strtol@plt>
   13058:	ldr	r2, [sp, #8]
   1305c:	sub	r1, r0, #1
   13060:	str	r1, [r2, sl, lsl #2]
   13064:	b	130b8 <Mat_VarReadNextInfo@plt+0x1fb4>
   13068:	ldr	r1, [sp, #4]
   1306c:	str	r0, [r1, sl, lsl #2]
   13070:	b	13008 <Mat_VarReadNextInfo@plt+0x1f04>
   13074:	mvn	r0, #0
   13078:	b	130b8 <Mat_VarReadNextInfo@plt+0x1fb4>
   1307c:	cmp	r9, #0
   13080:	bne	1308c <Mat_VarReadNextInfo@plt+0x1f88>
   13084:	ldr	r0, [sp, #8]
   13088:	b	13000 <Mat_VarReadNextInfo@plt+0x1efc>
   1308c:	ldr	r0, [pc, #64]	; 130d4 <Mat_VarReadNextInfo@plt+0x1fd0>
   13090:	add	r2, sl, #1
   13094:	ldr	r0, [pc, r0]
   13098:	ldr	r0, [r0]
   1309c:	ldr	r1, [pc, #52]	; 130d8 <Mat_VarReadNextInfo@plt+0x1fd4>
   130a0:	add	r1, pc, r1
   130a4:	bl	1102c <fprintf@plt>
   130a8:	b	13008 <Mat_VarReadNextInfo@plt+0x1f04>
   130ac:	ldr	r1, [sp, #8]
   130b0:	mvn	r0, #0
   130b4:	str	r0, [r1, sl, lsl #2]
   130b8:	ldr	r1, [fp, #8]
   130bc:	str	r0, [r1, sl, lsl #2]
   130c0:	add	r5, r8, #2
   130c4:	add	sl, sl, #1
   130c8:	mov	r9, #0
   130cc:	b	12eac <Mat_VarReadNextInfo@plt+0x1da8>
   130d0:	andeq	r1, r0, r7, asr fp
   130d4:	andeq	r2, r1, r4, asr #32
   130d8:	andeq	r1, r0, pc, asr r9
   130dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130e0:	add	fp, sp, #28
   130e4:	sub	sp, sp, #4
   130e8:	ldr	ip, [fp, #8]
   130ec:	cmp	r0, #1
   130f0:	mov	r9, #0
   130f4:	ldr	r6, [ip, #4]
   130f8:	cmpne	r6, r0
   130fc:	bne	13440 <Mat_VarReadNextInfo@plt+0x233c>
   13100:	cmp	r0, #1
   13104:	bne	13128 <Mat_VarReadNextInfo@plt+0x2024>
   13108:	cmp	r6, #1
   1310c:	blt	1324c <Mat_VarReadNextInfo@plt+0x2148>
   13110:	ldr	r5, [ip, #32]
   13114:	cmp	r6, #4
   13118:	bcs	1325c <Mat_VarReadNextInfo@plt+0x2158>
   1311c:	mov	r4, #0
   13120:	mov	r0, #1
   13124:	b	13294 <Mat_VarReadNextInfo@plt+0x2190>
   13128:	blt	13254 <Mat_VarReadNextInfo@plt+0x2150>
   1312c:	mov	lr, #0
   13130:	mov	r8, #1
   13134:	mov	r9, #1
   13138:	mov	r4, #0
   1313c:	ldr	r7, [r2, r4, lsl #2]
   13140:	cmp	r7, #0
   13144:	ble	13334 <Mat_VarReadNextInfo@plt+0x2230>
   13148:	ldr	r6, [r3, r4, lsl #2]
   1314c:	cmn	r6, #1
   13150:	beq	13198 <Mat_VarReadNextInfo@plt+0x2094>
   13154:	cmp	r6, #0
   13158:	blt	131a4 <Mat_VarReadNextInfo@plt+0x20a0>
   1315c:	ldr	r5, [ip, #32]
   13160:	ldr	r5, [r5, r4, lsl #2]
   13164:	cmp	r6, r5
   13168:	bhi	133ac <Mat_VarReadNextInfo@plt+0x22a8>
   1316c:	ldr	sl, [r1, r4, lsl #2]
   13170:	cmp	sl, r5
   13174:	bcs	1335c <Mat_VarReadNextInfo@plt+0x2258>
   13178:	cmp	r6, #1
   1317c:	cmpge	sl, r6
   13180:	bgt	1335c <Mat_VarReadNextInfo@plt+0x2258>
   13184:	add	r5, sl, #1
   13188:	cmp	r6, r5
   1318c:	bne	131e8 <Mat_VarReadNextInfo@plt+0x20e4>
   13190:	str	r8, [r3, r4, lsl #2]
   13194:	b	13234 <Mat_VarReadNextInfo@plt+0x2130>
   13198:	ldr	r5, [r1, r4, lsl #2]
   1319c:	cmn	r5, #1
   131a0:	beq	13220 <Mat_VarReadNextInfo@plt+0x211c>
   131a4:	ldr	r5, [ip, #32]
   131a8:	cmp	r7, #1
   131ac:	ldr	r5, [r5, r4, lsl #2]
   131b0:	bne	131c8 <Mat_VarReadNextInfo@plt+0x20c4>
   131b4:	str	r5, [r3, r4, lsl #2]
   131b8:	ldr	r5, [r1, r4, lsl #2]
   131bc:	cmn	r5, #1
   131c0:	strle	lr, [r1, r4, lsl #2]
   131c4:	b	13234 <Mat_VarReadNextInfo@plt+0x2130>
   131c8:	ldr	r6, [r1, r4, lsl #2]
   131cc:	vmov	s0, r7
   131d0:	vcvt.f64.s32	d16, s0
   131d4:	mvn	r6, r6
   131d8:	add	r5, r5, r6
   131dc:	vmov	s0, r5
   131e0:	vcvt.f64.u32	d17, s0
   131e4:	b	13208 <Mat_VarReadNextInfo@plt+0x2104>
   131e8:	cmp	r6, #1
   131ec:	blt	13234 <Mat_VarReadNextInfo@plt+0x2130>
   131f0:	mvn	r5, sl
   131f4:	vmov	s0, r7
   131f8:	add	r5, r6, r5
   131fc:	vcvt.f64.s32	d16, s0
   13200:	vmov	s0, r5
   13204:	vcvt.f64.s32	d17, s0
   13208:	vdiv.f64	d16, d17, d16
   1320c:	vcvtm.s32.f64	s0, d16
   13210:	vmov	r5, s0
   13214:	add	r5, r5, #1
   13218:	str	r5, [r3, r4, lsl #2]
   1321c:	b	13234 <Mat_VarReadNextInfo@plt+0x2130>
   13220:	str	r8, [r3, r4, lsl #2]
   13224:	ldr	r5, [ip, #32]
   13228:	ldr	r5, [r5, r4, lsl #2]
   1322c:	sub	r5, r5, #1
   13230:	str	r5, [r1, r4, lsl #2]
   13234:	ldr	r5, [r3, r4, lsl #2]
   13238:	add	r4, r4, #1
   1323c:	cmp	r4, r0
   13240:	mul	r9, r5, r9
   13244:	blt	1313c <Mat_VarReadNextInfo@plt+0x2038>
   13248:	b	13440 <Mat_VarReadNextInfo@plt+0x233c>
   1324c:	mov	r0, #1
   13250:	b	132ac <Mat_VarReadNextInfo@plt+0x21a8>
   13254:	mov	r9, #1
   13258:	b	13440 <Mat_VarReadNextInfo@plt+0x233c>
   1325c:	bic	r4, r6, #3
   13260:	vmov.i32	q8, #1	; 0x00000001
   13264:	mov	r7, r5
   13268:	mov	r0, r4
   1326c:	vld1.32	{d18-d19}, [r7]!
   13270:	subs	r0, r0, #4
   13274:	vmul.i32	q8, q9, q8
   13278:	bne	1326c <Mat_VarReadNextInfo@plt+0x2168>
   1327c:	vext.8	q9, q8, q8, #8
   13280:	cmp	r6, r4
   13284:	vmul.i32	q0, q8, q9
   13288:	vmul.i32	q8, q0, d0[1]
   1328c:	vmov.32	r0, d16[0]
   13290:	beq	132ac <Mat_VarReadNextInfo@plt+0x21a8>
   13294:	sub	r6, r6, r4
   13298:	add	r7, r5, r4, lsl #2
   1329c:	ldr	r5, [r7], #4
   132a0:	subs	r6, r6, #1
   132a4:	mul	r0, r5, r0
   132a8:	bne	1329c <Mat_VarReadNextInfo@plt+0x2198>
   132ac:	ldr	r7, [r2]
   132b0:	cmp	r7, #0
   132b4:	ble	13404 <Mat_VarReadNextInfo@plt+0x2300>
   132b8:	ldr	r6, [r3]
   132bc:	cmp	r6, r0
   132c0:	bgt	13420 <Mat_VarReadNextInfo@plt+0x231c>
   132c4:	ldr	r4, [r1]
   132c8:	cmp	r4, r0
   132cc:	bge	13390 <Mat_VarReadNextInfo@plt+0x228c>
   132d0:	cmp	r6, #1
   132d4:	cmpge	r4, r6
   132d8:	bgt	13390 <Mat_VarReadNextInfo@plt+0x228c>
   132dc:	cmn	r6, #1
   132e0:	beq	1330c <Mat_VarReadNextInfo@plt+0x2208>
   132e4:	cmp	r6, #1
   132e8:	blt	13388 <Mat_VarReadNextInfo@plt+0x2284>
   132ec:	mvn	r0, r4
   132f0:	vmov	s0, r7
   132f4:	add	r0, r6, r0
   132f8:	vcvt.f64.s32	d16, s0
   132fc:	vmov	s0, r0
   13300:	vcvt.f64.s32	d17, s0
   13304:	vdiv.f64	d16, d17, d16
   13308:	b	133ec <Mat_VarReadNextInfo@plt+0x22e8>
   1330c:	cmn	r4, #1
   13310:	beq	13378 <Mat_VarReadNextInfo@plt+0x2274>
   13314:	str	r0, [r3]
   13318:	cmp	r7, #1
   1331c:	ldr	r6, [r1]
   13320:	bne	133d0 <Mat_VarReadNextInfo@plt+0x22cc>
   13324:	cmn	r6, #1
   13328:	bgt	13388 <Mat_VarReadNextInfo@plt+0x2284>
   1332c:	mov	r0, #0
   13330:	b	13384 <Mat_VarReadNextInfo@plt+0x2280>
   13334:	ldr	r0, [pc, #296]	; 13464 <Mat_VarReadNextInfo@plt+0x2360>
   13338:	mov	r1, #23
   1333c:	mov	r2, #1
   13340:	ldr	r0, [pc, r0]
   13344:	ldr	r3, [r0]
   13348:	ldr	r0, [pc, #280]	; 13468 <Mat_VarReadNextInfo@plt+0x2364>
   1334c:	add	r0, pc, r0
   13350:	bl	10f84 <fwrite@plt>
   13354:	mov	r9, #0
   13358:	b	13440 <Mat_VarReadNextInfo@plt+0x233c>
   1335c:	ldr	r0, [pc, #272]	; 13474 <Mat_VarReadNextInfo@plt+0x2370>
   13360:	add	r2, r4, #1
   13364:	ldr	r0, [pc, r0]
   13368:	ldr	r0, [r0]
   1336c:	ldr	r1, [pc, #260]	; 13478 <Mat_VarReadNextInfo@plt+0x2374>
   13370:	add	r1, pc, r1
   13374:	b	133c4 <Mat_VarReadNextInfo@plt+0x22c0>
   13378:	mov	r2, #1
   1337c:	sub	r0, r0, #1
   13380:	str	r2, [r3]
   13384:	str	r0, [r1]
   13388:	ldr	r9, [r3]
   1338c:	b	13440 <Mat_VarReadNextInfo@plt+0x233c>
   13390:	ldr	r0, [pc, #196]	; 1345c <Mat_VarReadNextInfo@plt+0x2358>
   13394:	mov	r1, #18
   13398:	ldr	r0, [pc, r0]
   1339c:	ldr	r3, [r0]
   133a0:	ldr	r0, [pc, #184]	; 13460 <Mat_VarReadNextInfo@plt+0x235c>
   133a4:	add	r0, pc, r0
   133a8:	b	13438 <Mat_VarReadNextInfo@plt+0x2334>
   133ac:	ldr	r0, [pc, #184]	; 1346c <Mat_VarReadNextInfo@plt+0x2368>
   133b0:	add	r2, r4, #1
   133b4:	ldr	r0, [pc, r0]
   133b8:	ldr	r0, [r0]
   133bc:	ldr	r1, [pc, #172]	; 13470 <Mat_VarReadNextInfo@plt+0x236c>
   133c0:	add	r1, pc, r1
   133c4:	bl	1102c <fprintf@plt>
   133c8:	mov	r9, #0
   133cc:	b	13440 <Mat_VarReadNextInfo@plt+0x233c>
   133d0:	vldr	s0, [r2]
   133d4:	mvn	r1, r6
   133d8:	add	r0, r0, r1
   133dc:	vmov	s2, r0
   133e0:	vcvt.f64.s32	d16, s2
   133e4:	vcvt.f64.s32	d17, s0
   133e8:	vdiv.f64	d16, d16, d17
   133ec:	vcvtm.s32.f64	s0, d16
   133f0:	vmov	r0, s0
   133f4:	add	r0, r0, #1
   133f8:	str	r0, [r3]
   133fc:	ldr	r9, [r3]
   13400:	b	13440 <Mat_VarReadNextInfo@plt+0x233c>
   13404:	ldr	r0, [pc, #64]	; 1344c <Mat_VarReadNextInfo@plt+0x2348>
   13408:	mov	r1, #23
   1340c:	ldr	r0, [pc, r0]
   13410:	ldr	r3, [r0]
   13414:	ldr	r0, [pc, #52]	; 13450 <Mat_VarReadNextInfo@plt+0x234c>
   13418:	add	r0, pc, r0
   1341c:	b	13438 <Mat_VarReadNextInfo@plt+0x2334>
   13420:	ldr	r0, [pc, #44]	; 13454 <Mat_VarReadNextInfo@plt+0x2350>
   13424:	mov	r1, #17
   13428:	ldr	r0, [pc, r0]
   1342c:	ldr	r3, [r0]
   13430:	ldr	r0, [pc, #32]	; 13458 <Mat_VarReadNextInfo@plt+0x2354>
   13434:	add	r0, pc, r0
   13438:	mov	r2, #1
   1343c:	bl	10f84 <fwrite@plt>
   13440:	mov	r0, r9
   13444:	sub	sp, fp, #28
   13448:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1344c:	andeq	r1, r1, ip, asr #25
   13450:	andeq	r1, r0, r1, lsl #12
   13454:			; <UNDEFINED> instruction: 0x00011cb0
   13458:	strdeq	r1, [r0], -sp
   1345c:	andeq	r1, r1, r0, asr #26
   13460:	muleq	r0, pc, r6	; <UNPREDICTABLE>
   13464:	muleq	r1, r8, sp
   13468:	andeq	r1, r0, sp, asr #13
   1346c:	andeq	r1, r1, r4, lsr #26
   13470:	muleq	r0, r6, r6
   13474:	andeq	r1, r1, r4, ror sp
   13478:	andeq	r1, r0, r8, lsl #14

0001347c <getopt@@Base>:
   1347c:	push	{fp, lr}
   13480:	mov	fp, sp
   13484:	sub	sp, sp, #8
   13488:	mov	r3, #0
   1348c:	str	r3, [sp]
   13490:	str	r3, [sp, #4]
   13494:	mov	r3, #0
   13498:	bl	134a4 <getopt@@Base+0x28>
   1349c:	mov	sp, fp
   134a0:	pop	{fp, pc}
   134a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134a8:	add	fp, sp, #28
   134ac:	sub	sp, sp, #44	; 0x2c
   134b0:	cmp	r2, #0
   134b4:	beq	13aac <getopt@@Base+0x630>
   134b8:	mov	sl, r0
   134bc:	ldr	r0, [pc, #2100]	; 13cf8 <getopt@@Base+0x87c>
   134c0:	ldr	r5, [fp, #12]
   134c4:	mov	r8, r3
   134c8:	mov	r7, r2
   134cc:	mov	r4, r1
   134d0:	add	r0, pc, r0
   134d4:	bl	10f9c <getenv@plt>
   134d8:	ldrb	r1, [r7]
   134dc:	cmp	r1, #45	; 0x2d
   134e0:	bne	134ec <getopt@@Base+0x70>
   134e4:	orr	r2, r5, #2
   134e8:	b	13508 <getopt@@Base+0x8c>
   134ec:	bic	r2, r5, #1
   134f0:	cmp	r1, #43	; 0x2b
   134f4:	moveq	r5, r2
   134f8:	cmp	r0, #0
   134fc:	movne	r5, r2
   13500:	cmp	r1, #43	; 0x2b
   13504:	bne	13514 <getopt@@Base+0x98>
   13508:	str	r2, [sp, #24]
   1350c:	add	r7, r7, #1
   13510:	b	13518 <getopt@@Base+0x9c>
   13514:	str	r5, [sp, #24]
   13518:	str	r0, [sp, #12]
   1351c:	ldr	r9, [pc, #2008]	; 13cfc <getopt@@Base+0x880>
   13520:	ldr	r9, [pc, r9]
   13524:	str	r8, [sp, #16]
   13528:	ldr	lr, [r9]
   1352c:	cmp	lr, #0
   13530:	beq	1355c <getopt@@Base+0xe0>
   13534:	ldr	r1, [pc, #1996]	; 13d08 <getopt@@Base+0x88c>
   13538:	mov	r0, #0
   1353c:	ldr	r1, [pc, r1]
   13540:	str	r0, [r1]
   13544:	ldr	r1, [pc, #1984]	; 13d0c <getopt@@Base+0x890>
   13548:	ldr	r1, [pc, r1]
   1354c:	ldr	r1, [r1]
   13550:	cmp	r1, #0
   13554:	bne	13584 <getopt@@Base+0x108>
   13558:	b	135a4 <getopt@@Base+0x128>
   1355c:	mov	lr, #1
   13560:	mov	r1, #0
   13564:	str	lr, [r9]
   13568:	ldr	r0, [pc, #1936]	; 13d00 <getopt@@Base+0x884>
   1356c:	ldr	r0, [pc, r0]
   13570:	str	lr, [r0]
   13574:	ldr	r0, [pc, #1928]	; 13d04 <getopt@@Base+0x888>
   13578:	ldr	r0, [pc, r0]
   1357c:	str	r1, [r0]
   13580:	mov	r1, #1
   13584:	ldr	r0, [pc, #1924]	; 13d10 <getopt@@Base+0x894>
   13588:	mvn	r2, #0
   1358c:	add	r0, pc, r0
   13590:	str	r2, [r0]
   13594:	ldr	r0, [pc, #1912]	; 13d14 <getopt@@Base+0x898>
   13598:	add	r0, pc, r0
   1359c:	str	r2, [r0]
   135a0:	mov	r0, r1
   135a4:	ldr	r1, [sp, #24]
   135a8:	str	r7, [sp, #20]
   135ac:	and	r2, r1, #1
   135b0:	and	r1, r1, #2
   135b4:	str	r1, [fp, #-32]	; 0xffffffe0
   135b8:	ldr	r6, [pc, #1880]	; 13d18 <getopt@@Base+0x89c>
   135bc:	ldr	ip, [pc, #1880]	; 13d1c <getopt@@Base+0x8a0>
   135c0:	ldr	r1, [pc, #1880]	; 13d20 <getopt@@Base+0x8a4>
   135c4:	str	sl, [sp, #32]
   135c8:	str	r2, [sp, #28]
   135cc:	add	r6, pc, r6
   135d0:	add	ip, pc, ip
   135d4:	add	r1, pc, r1
   135d8:	cmp	r0, #0
   135dc:	bne	13610 <getopt@@Base+0x194>
   135e0:	ldr	r8, [pc, #1852]	; 13d24 <getopt@@Base+0x8a8>
   135e4:	ldr	r8, [pc, r8]
   135e8:	ldrb	r7, [r8]
   135ec:	cmp	r7, #0
   135f0:	beq	13610 <getopt@@Base+0x194>
   135f4:	b	13988 <getopt@@Base+0x50c>
   135f8:	str	lr, [r1]
   135fc:	add	lr, lr, #1
   13600:	mov	r0, #0
   13604:	str	lr, [r9]
   13608:	cmp	r0, #0
   1360c:	beq	135e0 <getopt@@Base+0x164>
   13610:	ldr	r0, [pc, #1812]	; 13d2c <getopt@@Base+0x8b0>
   13614:	cmp	lr, sl
   13618:	mov	r3, #0
   1361c:	ldr	r0, [pc, r0]
   13620:	str	r3, [r0]
   13624:	bge	13770 <getopt@@Base+0x2f4>
   13628:	ldr	r3, [r4, lr, lsl #2]
   1362c:	str	r3, [r6]
   13630:	ldrb	r0, [r3]
   13634:	cmp	r0, #45	; 0x2d
   13638:	bne	13648 <getopt@@Base+0x1cc>
   1363c:	ldrb	r7, [r3, #1]
   13640:	cmp	r7, #0
   13644:	bne	1385c <getopt@@Base+0x3e0>
   13648:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1364c:	str	ip, [r6]
   13650:	cmp	r0, #0
   13654:	bne	13840 <getopt@@Base+0x3c4>
   13658:	cmp	r2, #0
   1365c:	beq	13aac <getopt@@Base+0x630>
   13660:	ldr	r8, [pc, #1760]	; 13d48 <getopt@@Base+0x8cc>
   13664:	ldr	r8, [pc, r8]
   13668:	cmn	r8, #1
   1366c:	beq	135f8 <getopt@@Base+0x17c>
   13670:	ldr	r5, [pc, #1748]	; 13d4c <getopt@@Base+0x8d0>
   13674:	ldr	r5, [pc, r5]
   13678:	cmn	r5, #1
   1367c:	beq	135fc <getopt@@Base+0x180>
   13680:	sub	r3, lr, r5
   13684:	sub	r1, r5, r8
   13688:	str	lr, [sp, #36]	; 0x24
   1368c:	sdiv	r0, r1, r3
   13690:	mov	lr, r3
   13694:	mls	r0, r0, r3, r1
   13698:	cmp	r0, #0
   1369c:	beq	136bc <getopt@@Base+0x240>
   136a0:	mov	r2, r3
   136a4:	mov	lr, r0
   136a8:	sdiv	r0, r2, r0
   136ac:	mls	r0, r0, lr, r2
   136b0:	mov	r2, lr
   136b4:	cmp	r0, #0
   136b8:	bne	136a4 <getopt@@Base+0x228>
   136bc:	cmp	lr, #1
   136c0:	blt	13720 <getopt@@Base+0x2a4>
   136c4:	ldr	r0, [sp, #36]	; 0x24
   136c8:	mov	r2, #0
   136cc:	sub	r0, r0, r8
   136d0:	sdiv	ip, r0, lr
   136d4:	cmp	ip, #1
   136d8:	blt	13714 <getopt@@Base+0x298>
   136dc:	add	sl, r2, r5
   136e0:	mov	r0, ip
   136e4:	ldr	r9, [r4, sl, lsl #2]
   136e8:	mov	r7, sl
   136ec:	cmp	r7, r5
   136f0:	mov	r6, r3
   136f4:	rsbge	r6, r1, #0
   136f8:	subs	r0, r0, #1
   136fc:	add	r7, r6, r7
   13700:	ldr	r6, [r4, r7, lsl #2]
   13704:	str	r9, [r4, r7, lsl #2]
   13708:	mov	r9, r6
   1370c:	str	r6, [r4, sl, lsl #2]
   13710:	bne	136ec <getopt@@Base+0x270>
   13714:	add	r2, r2, #1
   13718:	cmp	r2, lr
   1371c:	bne	136d4 <getopt@@Base+0x258>
   13720:	ldr	r0, [pc, #1576]	; 13d50 <getopt@@Base+0x8d4>
   13724:	mvn	r1, #0
   13728:	ldr	lr, [sp, #36]	; 0x24
   1372c:	add	r0, pc, r0
   13730:	str	r1, [r0]
   13734:	add	r0, r8, lr
   13738:	ldr	r1, [pc, #1556]	; 13d54 <getopt@@Base+0x8d8>
   1373c:	sub	r0, r0, r5
   13740:	add	r1, pc, r1
   13744:	str	r0, [r1]
   13748:	ldr	r9, [pc, #1544]	; 13d58 <getopt@@Base+0x8dc>
   1374c:	ldr	r9, [pc, r9]
   13750:	ldr	sl, [sp, #32]
   13754:	ldr	r6, [pc, #1536]	; 13d5c <getopt@@Base+0x8e0>
   13758:	ldr	r2, [pc, #1536]	; 13d60 <getopt@@Base+0x8e4>
   1375c:	add	r2, pc, r2
   13760:	add	r6, pc, r6
   13764:	mov	ip, r2
   13768:	ldr	r2, [sp, #28]
   1376c:	b	135fc <getopt@@Base+0x180>
   13770:	str	ip, [r6]
   13774:	ldr	ip, [pc, #1460]	; 13d30 <getopt@@Base+0x8b4>
   13778:	ldr	ip, [pc, ip]
   1377c:	ldr	sl, [pc, #1456]	; 13d34 <getopt@@Base+0x8b8>
   13780:	ldr	sl, [pc, sl]
   13784:	cmn	sl, #1
   13788:	beq	13a2c <getopt@@Base+0x5b0>
   1378c:	sub	r1, lr, sl
   13790:	sub	r7, sl, ip
   13794:	sdiv	r0, r7, r1
   13798:	mov	r8, r1
   1379c:	mls	r0, r0, r1, r7
   137a0:	cmp	r0, #0
   137a4:	beq	137c4 <getopt@@Base+0x348>
   137a8:	mov	r2, r1
   137ac:	mov	r8, r0
   137b0:	sdiv	r0, r2, r0
   137b4:	mls	r0, r0, r8, r2
   137b8:	mov	r2, r8
   137bc:	cmp	r0, #0
   137c0:	bne	137ac <getopt@@Base+0x330>
   137c4:	cmp	r8, #1
   137c8:	blt	13824 <getopt@@Base+0x3a8>
   137cc:	sub	r0, lr, ip
   137d0:	mov	r9, #0
   137d4:	sdiv	lr, r0, r8
   137d8:	cmp	lr, #1
   137dc:	blt	13818 <getopt@@Base+0x39c>
   137e0:	add	r6, r9, sl
   137e4:	mov	r2, lr
   137e8:	ldr	r5, [r4, r6, lsl #2]
   137ec:	mov	r0, r6
   137f0:	cmp	r0, sl
   137f4:	mov	r3, r1
   137f8:	rsbge	r3, r7, #0
   137fc:	subs	r2, r2, #1
   13800:	add	r0, r3, r0
   13804:	ldr	r3, [r4, r0, lsl #2]
   13808:	str	r5, [r4, r0, lsl #2]
   1380c:	mov	r5, r3
   13810:	str	r3, [r4, r6, lsl #2]
   13814:	bne	137f0 <getopt@@Base+0x374>
   13818:	add	r9, r9, #1
   1381c:	cmp	r9, r8
   13820:	bne	137d8 <getopt@@Base+0x35c>
   13824:	ldr	r9, [pc, #1292]	; 13d38 <getopt@@Base+0x8bc>
   13828:	add	ip, r1, ip
   1382c:	ldr	r9, [pc, r9]
   13830:	ldr	r1, [pc, #1284]	; 13d3c <getopt@@Base+0x8c0>
   13834:	add	r1, pc, r1
   13838:	str	ip, [r9]
   1383c:	b	13a34 <getopt@@Base+0x5b8>
   13840:	ldr	r0, [pc, #1276]	; 13d44 <getopt@@Base+0x8c8>
   13844:	mov	r7, #1
   13848:	ldr	r0, [pc, r0]
   1384c:	str	r3, [r0]
   13850:	add	r0, lr, #1
   13854:	str	r0, [r9]
   13858:	b	13ab0 <getopt@@Base+0x634>
   1385c:	mov	r5, lr
   13860:	ldr	lr, [pc, #1276]	; 13d64 <getopt@@Base+0x8e8>
   13864:	add	r8, r3, #1
   13868:	ldr	lr, [pc, lr]
   1386c:	ldr	r2, [pc, #1268]	; 13d68 <getopt@@Base+0x8ec>
   13870:	ldr	r2, [pc, r2]
   13874:	cmn	r2, #1
   13878:	beq	13890 <getopt@@Base+0x414>
   1387c:	cmn	lr, #1
   13880:	ldreq	r0, [pc, #1252]	; 13d6c <getopt@@Base+0x8f0>
   13884:	moveq	lr, r5
   13888:	addeq	r0, pc, r0
   1388c:	streq	r5, [r0]
   13890:	cmp	r7, #45	; 0x2d
   13894:	str	r8, [r6]
   13898:	bne	1398c <getopt@@Base+0x510>
   1389c:	ldrb	r0, [r3, #2]
   138a0:	mov	r7, #45	; 0x2d
   138a4:	cmp	r0, #0
   138a8:	bne	1398c <getopt@@Base+0x510>
   138ac:	add	r0, r5, #1
   138b0:	cmn	lr, #1
   138b4:	str	ip, [r6]
   138b8:	str	r0, [r9]
   138bc:	beq	13a34 <getopt@@Base+0x5b8>
   138c0:	sub	r8, r0, lr
   138c4:	sub	r7, lr, r2
   138c8:	str	r0, [fp, #-32]	; 0xffffffe0
   138cc:	mov	r9, r2
   138d0:	sdiv	r0, r7, r8
   138d4:	mov	ip, r8
   138d8:	mls	r0, r0, r8, r7
   138dc:	cmp	r0, #0
   138e0:	beq	13900 <getopt@@Base+0x484>
   138e4:	mov	r2, r8
   138e8:	mov	ip, r0
   138ec:	sdiv	r0, r2, r0
   138f0:	mls	r0, r0, ip, r2
   138f4:	mov	r2, ip
   138f8:	cmp	r0, #0
   138fc:	bne	138e8 <getopt@@Base+0x46c>
   13900:	cmp	ip, #1
   13904:	blt	13964 <getopt@@Base+0x4e8>
   13908:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1390c:	mov	sl, #0
   13910:	sub	r0, r0, r9
   13914:	sdiv	r1, r0, ip
   13918:	cmp	r1, #1
   1391c:	blt	13958 <getopt@@Base+0x4dc>
   13920:	add	r6, sl, lr
   13924:	mov	r5, r1
   13928:	ldr	r2, [r4, r6, lsl #2]
   1392c:	mov	r0, r6
   13930:	cmp	r0, lr
   13934:	mov	r3, r8
   13938:	rsbge	r3, r7, #0
   1393c:	subs	r5, r5, #1
   13940:	add	r0, r3, r0
   13944:	ldr	r3, [r4, r0, lsl #2]
   13948:	str	r2, [r4, r0, lsl #2]
   1394c:	mov	r2, r3
   13950:	str	r3, [r4, r6, lsl #2]
   13954:	bne	13930 <getopt@@Base+0x4b4>
   13958:	add	sl, sl, #1
   1395c:	cmp	sl, ip
   13960:	bne	13918 <getopt@@Base+0x49c>
   13964:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13968:	ldr	r1, [pc, #1024]	; 13d70 <getopt@@Base+0x8f4>
   1396c:	ldr	r1, [pc, r1]
   13970:	add	r0, r9, r0
   13974:	sub	r0, r0, lr
   13978:	str	r0, [r1]
   1397c:	ldr	r1, [pc, #1008]	; 13d74 <getopt@@Base+0x8f8>
   13980:	add	r1, pc, r1
   13984:	b	13a34 <getopt@@Base+0x5b8>
   13988:	mov	r5, lr
   1398c:	ldr	r2, [sp, #16]
   13990:	cmp	r2, #0
   13994:	ldrne	r0, [r4, r5, lsl #2]
   13998:	cmpne	r8, r0
   1399c:	bne	13a4c <getopt@@Base+0x5d0>
   139a0:	add	r5, r8, #1
   139a4:	ldr	r8, [sp, #20]
   139a8:	cmp	r7, #58	; 0x3a
   139ac:	str	r5, [r6]
   139b0:	beq	13abc <getopt@@Base+0x640>
   139b4:	cmp	r7, #45	; 0x2d
   139b8:	bne	139c8 <getopt@@Base+0x54c>
   139bc:	ldrb	r0, [r5]
   139c0:	cmp	r0, #0
   139c4:	bne	13ad0 <getopt@@Base+0x654>
   139c8:	mov	r0, r8
   139cc:	mov	r1, r7
   139d0:	mov	r6, r2
   139d4:	bl	11014 <strchr@plt>
   139d8:	cmp	r0, #0
   139dc:	beq	13a98 <getopt@@Base+0x61c>
   139e0:	ldrb	r1, [r0, #1]
   139e4:	cmp	r6, #0
   139e8:	beq	139f8 <getopt@@Base+0x57c>
   139ec:	cmp	r7, #87	; 0x57
   139f0:	cmpeq	r1, #59	; 0x3b
   139f4:	beq	13b38 <getopt@@Base+0x6bc>
   139f8:	cmp	r1, #58	; 0x3a
   139fc:	bne	13b28 <getopt@@Base+0x6ac>
   13a00:	ldr	r1, [pc, #940]	; 13db4 <getopt@@Base+0x938>
   13a04:	mov	r2, #0
   13a08:	ldr	r1, [pc, r1]
   13a0c:	str	r2, [r1]
   13a10:	ldrb	r2, [r5]
   13a14:	cmp	r2, #0
   13a18:	beq	13c40 <getopt@@Base+0x7c4>
   13a1c:	str	r5, [r1]
   13a20:	ldr	r2, [pc, #912]	; 13db8 <getopt@@Base+0x93c>
   13a24:	add	r2, pc, r2
   13a28:	b	13c70 <getopt@@Base+0x7f4>
   13a2c:	cmn	ip, #1
   13a30:	strne	ip, [r9]
   13a34:	mvn	r7, #0
   13a38:	str	r7, [r1]
   13a3c:	ldr	r0, [pc, #764]	; 13d40 <getopt@@Base+0x8c4>
   13a40:	add	r0, pc, r0
   13a44:	str	r7, [r0]
   13a48:	b	13ab0 <getopt@@Base+0x634>
   13a4c:	ldr	r0, [sp, #24]
   13a50:	tst	r0, #4
   13a54:	bne	13a60 <getopt@@Base+0x5e4>
   13a58:	cmp	r7, #45	; 0x2d
   13a5c:	bne	139a0 <getopt@@Base+0x524>
   13a60:	ldr	r1, [pc, #704]	; 13d28 <getopt@@Base+0x8ac>
   13a64:	mov	r0, #0
   13a68:	cmp	r7, #58	; 0x3a
   13a6c:	add	r1, pc, r1
   13a70:	str	r0, [r1]
   13a74:	beq	13bb8 <getopt@@Base+0x73c>
   13a78:	cmp	r7, #45	; 0x2d
   13a7c:	bne	13bc0 <getopt@@Base+0x744>
   13a80:	ldr	r5, [sp, #20]
   13a84:	mov	r3, #1
   13a88:	str	r3, [r1]
   13a8c:	add	r1, r8, #1
   13a90:	str	r1, [r6]
   13a94:	b	13be0 <getopt@@Base+0x764>
   13a98:	cmp	r7, #45	; 0x2d
   13a9c:	bne	13abc <getopt@@Base+0x640>
   13aa0:	ldrb	r0, [r5]
   13aa4:	cmp	r0, #0
   13aa8:	bne	13ad0 <getopt@@Base+0x654>
   13aac:	mvn	r7, #0
   13ab0:	mov	r0, r7
   13ab4:	sub	sp, fp, #28
   13ab8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13abc:	ldrb	r0, [r5]
   13ac0:	cmp	r0, #0
   13ac4:	ldreq	r0, [r9]
   13ac8:	addeq	r0, r0, #1
   13acc:	streq	r0, [r9]
   13ad0:	ldr	r0, [pc, #680]	; 13d80 <getopt@@Base+0x904>
   13ad4:	ldr	r0, [pc, r0]
   13ad8:	ldr	r0, [r0]
   13adc:	cmp	r0, #0
   13ae0:	ldrbne	r0, [r8]
   13ae4:	cmpne	r0, #58	; 0x3a
   13ae8:	bne	13b00 <getopt@@Base+0x684>
   13aec:	ldr	r0, [pc, #664]	; 13d8c <getopt@@Base+0x910>
   13af0:	ldr	r0, [pc, r0]
   13af4:	str	r7, [r0]
   13af8:	mov	r7, #63	; 0x3f
   13afc:	b	13ab0 <getopt@@Base+0x634>
   13b00:	ldr	r1, [pc, #636]	; 13d84 <getopt@@Base+0x908>
   13b04:	ldr	r0, [pc, #636]	; 13d88 <getopt@@Base+0x90c>
   13b08:	ldr	r2, [sp, #12]
   13b0c:	add	r1, pc, r1
   13b10:	add	r0, pc, r0
   13b14:	cmp	r2, #0
   13b18:	movne	r0, r1
   13b1c:	mov	r1, r7
   13b20:	bl	11020 <warnx@plt>
   13b24:	b	13aec <getopt@@Base+0x670>
   13b28:	ldrb	r0, [r5]
   13b2c:	cmp	r0, #0
   13b30:	bne	13ab0 <getopt@@Base+0x634>
   13b34:	b	13c7c <getopt@@Base+0x800>
   13b38:	ldrb	r0, [r5]
   13b3c:	cmp	r0, #0
   13b40:	bne	13b68 <getopt@@Base+0x6ec>
   13b44:	ldr	r0, [r9]
   13b48:	add	r0, r0, #1
   13b4c:	cmp	r0, sl
   13b50:	str	r0, [r9]
   13b54:	bge	13c8c <getopt@@Base+0x810>
   13b58:	ldr	r0, [r4, r0, lsl #2]
   13b5c:	ldr	r1, [pc, #576]	; 13da4 <getopt@@Base+0x928>
   13b60:	add	r1, pc, r1
   13b64:	str	r0, [r1]
   13b68:	ldr	r0, [pc, #568]	; 13da8 <getopt@@Base+0x92c>
   13b6c:	mov	r1, #2
   13b70:	ldr	r3, [fp, #8]
   13b74:	mov	r2, r6
   13b78:	add	r0, pc, r0
   13b7c:	str	r1, [r0]
   13b80:	mov	r0, #0
   13b84:	mov	r1, r8
   13b88:	str	r0, [sp]
   13b8c:	ldr	r0, [sp, #24]
   13b90:	str	r0, [sp, #4]
   13b94:	mov	r0, r4
   13b98:	bl	13e20 <getopt_long_only@@Base+0x28>
   13b9c:	ldr	r1, [pc, #520]	; 13dac <getopt@@Base+0x930>
   13ba0:	ldr	r2, [pc, #520]	; 13db0 <getopt@@Base+0x934>
   13ba4:	add	r1, pc, r1
   13ba8:	add	r2, pc, r2
   13bac:	str	r2, [r1]
   13bb0:	sub	sp, fp, #28
   13bb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13bb8:	ldr	r5, [sp, #20]
   13bbc:	b	13be0 <getopt@@Base+0x764>
   13bc0:	ldr	r5, [sp, #20]
   13bc4:	mov	r1, r7
   13bc8:	mov	r6, r2
   13bcc:	mov	r0, r5
   13bd0:	bl	11014 <strchr@plt>
   13bd4:	cmp	r0, #0
   13bd8:	mov	r2, r6
   13bdc:	movwne	r0, #1
   13be0:	str	r0, [sp]
   13be4:	ldr	r0, [sp, #24]
   13be8:	ldr	r3, [fp, #8]
   13bec:	mov	r1, r5
   13bf0:	mov	r5, r2
   13bf4:	str	r0, [sp, #4]
   13bf8:	mov	r0, r4
   13bfc:	bl	13e20 <getopt_long_only@@Base+0x28>
   13c00:	cmn	r0, #1
   13c04:	beq	13c24 <getopt@@Base+0x7a8>
   13c08:	mov	r7, r0
   13c0c:	ldr	r0, [pc, #436]	; 13dc8 <getopt@@Base+0x94c>
   13c10:	ldr	r1, [pc, #436]	; 13dcc <getopt@@Base+0x950>
   13c14:	add	r0, pc, r0
   13c18:	add	r1, pc, r1
   13c1c:	str	r1, [r0]
   13c20:	b	13ab0 <getopt@@Base+0x634>
   13c24:	ldr	r8, [pc, #332]	; 13d78 <getopt@@Base+0x8fc>
   13c28:	mov	r2, r5
   13c2c:	ldr	r8, [pc, r8]
   13c30:	ldrb	r7, [r8]
   13c34:	ldr	r6, [pc, #320]	; 13d7c <getopt@@Base+0x900>
   13c38:	add	r6, pc, r6
   13c3c:	b	139a0 <getopt@@Base+0x524>
   13c40:	ldrb	r0, [r0, #2]
   13c44:	ldr	r2, [pc, #368]	; 13dbc <getopt@@Base+0x940>
   13c48:	cmp	r0, #58	; 0x3a
   13c4c:	add	r2, pc, r2
   13c50:	beq	13c70 <getopt@@Base+0x7f4>
   13c54:	ldr	r0, [r9]
   13c58:	add	r0, r0, #1
   13c5c:	cmp	r0, sl
   13c60:	str	r0, [r9]
   13c64:	bge	13ca4 <getopt@@Base+0x828>
   13c68:	ldr	r0, [r4, r0, lsl #2]
   13c6c:	str	r0, [r1]
   13c70:	ldr	r0, [pc, #332]	; 13dc4 <getopt@@Base+0x948>
   13c74:	add	r0, pc, r0
   13c78:	str	r0, [r2]
   13c7c:	ldr	r0, [r9]
   13c80:	add	r0, r0, #1
   13c84:	str	r0, [r9]
   13c88:	b	13ab0 <getopt@@Base+0x634>
   13c8c:	ldr	r0, [pc, #252]	; 13d90 <getopt@@Base+0x914>
   13c90:	ldr	r1, [pc, #252]	; 13d94 <getopt@@Base+0x918>
   13c94:	add	r0, pc, r0
   13c98:	add	r1, pc, r1
   13c9c:	str	r1, [r0]
   13ca0:	b	13cb0 <getopt@@Base+0x834>
   13ca4:	ldr	r0, [pc, #276]	; 13dc0 <getopt@@Base+0x944>
   13ca8:	add	r0, pc, r0
   13cac:	str	r0, [r2]
   13cb0:	ldr	r0, [pc, #224]	; 13d98 <getopt@@Base+0x91c>
   13cb4:	ldr	r0, [pc, r0]
   13cb8:	ldr	r0, [r0]
   13cbc:	cmp	r0, #0
   13cc0:	ldrbne	r0, [r8]
   13cc4:	cmpne	r0, #58	; 0x3a
   13cc8:	beq	13cdc <getopt@@Base+0x860>
   13ccc:	ldr	r0, [pc, #200]	; 13d9c <getopt@@Base+0x920>
   13cd0:	mov	r1, r7
   13cd4:	add	r0, pc, r0
   13cd8:	bl	11020 <warnx@plt>
   13cdc:	ldr	r0, [pc, #188]	; 13da0 <getopt@@Base+0x924>
   13ce0:	ldr	r0, [pc, r0]
   13ce4:	str	r7, [r0]
   13ce8:	ldrb	r7, [r8]
   13cec:	cmp	r7, #58	; 0x3a
   13cf0:	movwne	r7, #63	; 0x3f
   13cf4:	b	13ab0 <getopt@@Base+0x634>
   13cf8:	andeq	r1, r0, fp, asr #11
   13cfc:	andeq	r1, r1, r0, asr #23
   13d00:	andeq	r1, r1, r4, ror #22
   13d04:	andeq	r1, r1, r0, ror fp
   13d08:	andeq	r1, r1, ip, lsr #23
   13d0c:	andeq	r1, r1, r8, lsl #23
   13d10:	andeq	r1, r1, r0, lsr ip
   13d14:	andeq	r1, r1, r0, lsr #24
   13d18:	strdeq	r1, [r1], -r4
   13d1c:	andeq	r0, r0, sp, ror pc
   13d20:	andeq	r1, r1, r8, ror #23
   13d24:	ldrdeq	r1, [r1], -ip
   13d28:	andeq	r1, r1, r8, asr r7
   13d2c:			; <UNDEFINED> instruction: 0x00011ab4
   13d30:	andeq	r1, r1, r4, asr #20
   13d34:	andeq	r1, r1, r8, lsr sl
   13d38:			; <UNDEFINED> instruction: 0x000118b4
   13d3c:	andeq	r1, r1, r8, lsl #19
   13d40:	andeq	r1, r1, r8, ror r7
   13d44:	andeq	r1, r1, r0, lsr #17
   13d48:	andeq	r1, r1, r8, asr fp
   13d4c:	andeq	r1, r1, r4, asr #22
   13d50:	andeq	r1, r1, ip, lsl #21
   13d54:	andeq	r1, r1, ip, ror sl
   13d58:	muleq	r1, r4, r9
   13d5c:	andeq	r1, r1, r0, ror #20
   13d60:	strdeq	r0, [r0], -r1
   13d64:	andeq	r1, r1, r0, asr r9
   13d68:	andeq	r1, r1, ip, asr #18
   13d6c:	andeq	r1, r1, r0, lsr r9
   13d70:	andeq	r1, r1, r4, ror r7
   13d74:	andeq	r1, r1, ip, lsr r8
   13d78:	muleq	r1, r4, r5
   13d7c:	andeq	r1, r1, r8, lsl #11
   13d80:	andeq	r1, r1, r0, lsl #12
   13d84:	andeq	r0, r0, r6, lsr #31
   13d88:			; <UNDEFINED> instruction: 0x00000fb7
   13d8c:	strdeq	r1, [r1], -r4
   13d90:	andeq	r1, r1, ip, lsr #10
   13d94:			; <UNDEFINED> instruction: 0x000008b5
   13d98:	andeq	r1, r1, r0, lsr #8
   13d9c:	andeq	r0, r0, r8, lsl #28
   13da0:	andeq	r1, r1, r4, lsl #8
   13da4:	andeq	r1, r1, r0, ror #12
   13da8:	andeq	r1, r1, ip, asr #12
   13dac:	andeq	r1, r1, ip, lsl r6
   13db0:	andeq	r0, r0, r5, lsr #19
   13db4:	andeq	r1, r1, r0, ror #13
   13db8:	muleq	r1, ip, r7
   13dbc:	andeq	r1, r1, r4, ror r5
   13dc0:	andeq	r0, r0, r5, lsr #17
   13dc4:	ldrdeq	r0, [r0], -r9
   13dc8:	andeq	r1, r1, ip, lsr #11
   13dcc:	andeq	r0, r0, r5, lsr r9

00013dd0 <getopt_long@@Base>:
   13dd0:	push	{fp, lr}
   13dd4:	mov	fp, sp
   13dd8:	sub	sp, sp, #8
   13ddc:	mov	ip, #1
   13de0:	str	ip, [sp, #4]
   13de4:	ldr	ip, [fp, #8]
   13de8:	str	ip, [sp]
   13dec:	bl	134a4 <getopt@@Base+0x28>
   13df0:	mov	sp, fp
   13df4:	pop	{fp, pc}

00013df8 <getopt_long_only@@Base>:
   13df8:	push	{fp, lr}
   13dfc:	mov	fp, sp
   13e00:	sub	sp, sp, #8
   13e04:	mov	ip, #5
   13e08:	str	ip, [sp, #4]
   13e0c:	ldr	ip, [fp, #8]
   13e10:	str	ip, [sp]
   13e14:	bl	134a4 <getopt@@Base+0x28>
   13e18:	mov	sp, fp
   13e1c:	pop	{fp, pc}
   13e20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e24:	add	fp, sp, #28
   13e28:	sub	sp, sp, #36	; 0x24
   13e2c:	str	r3, [sp, #16]
   13e30:	mov	r8, r0
   13e34:	mov	r5, r2
   13e38:	mov	sl, r1
   13e3c:	ldr	r0, [pc, #992]	; 14224 <getopt_long_only@@Base+0x42c>
   13e40:	ldr	r0, [pc, r0]
   13e44:	ldr	r4, [pc, #988]	; 14228 <getopt_long_only@@Base+0x430>
   13e48:	ldr	r4, [pc, r4]
   13e4c:	cmp	r0, #2
   13e50:	bhi	13e64 <getopt_long_only@@Base+0x6c>
   13e54:	ldr	r1, [pc, #980]	; 14230 <getopt_long_only@@Base+0x438>
   13e58:	add	r1, pc, r1
   13e5c:	ldr	r9, [r1, r0, lsl #2]
   13e60:	b	13e6c <getopt_long_only@@Base+0x74>
   13e64:	ldr	r9, [pc, #960]	; 1422c <getopt_long_only@@Base+0x434>
   13e68:	add	r9, pc, r9
   13e6c:	ldr	r0, [pc, #960]	; 14234 <getopt_long_only@@Base+0x43c>
   13e70:	mov	r1, #61	; 0x3d
   13e74:	ldr	r0, [pc, r0]
   13e78:	ldr	r7, [r0]
   13e7c:	add	r6, r7, #1
   13e80:	str	r6, [r0]
   13e84:	mov	r0, r4
   13e88:	bl	11014 <strchr@plt>
   13e8c:	cmp	r0, #0
   13e90:	str	r7, [sp, #24]
   13e94:	stm	sp, {r6, r8}
   13e98:	beq	13ea8 <getopt_long_only@@Base+0xb0>
   13e9c:	sub	r6, r0, r4
   13ea0:	add	r0, r0, #1
   13ea4:	b	13eb8 <getopt_long_only@@Base+0xc0>
   13ea8:	mov	r0, r4
   13eac:	bl	11008 <strlen@plt>
   13eb0:	mov	r6, r0
   13eb4:	mov	r0, #0
   13eb8:	ldr	r8, [r5]
   13ebc:	ldr	r1, [fp, #8]
   13ec0:	mov	r7, sl
   13ec4:	cmp	r8, #0
   13ec8:	beq	1407c <getopt_long_only@@Base+0x284>
   13ecc:	str	r0, [sp, #8]
   13ed0:	ldr	r0, [fp, #12]
   13ed4:	sub	r2, r6, #1
   13ed8:	cmp	r1, #0
   13edc:	str	r9, [sp, #12]
   13ee0:	str	r7, [sp, #20]
   13ee4:	mvn	sl, #0
   13ee8:	mov	r9, #0
   13eec:	clz	r2, r2
   13ef0:	movwne	r1, #1
   13ef4:	lsr	r2, r2, #5
   13ef8:	and	r7, r1, r2
   13efc:	and	r0, r0, #4
   13f00:	str	r0, [sp, #28]
   13f04:	mov	r0, #0
   13f08:	str	r0, [sp, #32]
   13f0c:	mov	r0, r4
   13f10:	mov	r1, r8
   13f14:	mov	r2, r6
   13f18:	bl	110e0 <strncmp@plt>
   13f1c:	cmp	r0, #0
   13f20:	bne	13f98 <getopt_long_only@@Base+0x1a0>
   13f24:	mov	r0, r8
   13f28:	bl	11008 <strlen@plt>
   13f2c:	cmp	r0, r6
   13f30:	beq	13ff8 <getopt_long_only@@Base+0x200>
   13f34:	cmp	r7, #0
   13f38:	bne	13f98 <getopt_long_only@@Base+0x1a0>
   13f3c:	cmn	sl, #1
   13f40:	beq	13f94 <getopt_long_only@@Base+0x19c>
   13f44:	ldr	r0, [sp, #28]
   13f48:	cmp	r0, #0
   13f4c:	bne	13f88 <getopt_long_only@@Base+0x190>
   13f50:	add	r0, r5, sl, lsl #4
   13f54:	add	r1, r5, r9, lsl #4
   13f58:	ldr	r2, [r0, #4]
   13f5c:	ldr	r3, [r1, #4]
   13f60:	cmp	r3, r2
   13f64:	bne	13f88 <getopt_long_only@@Base+0x190>
   13f68:	ldr	r2, [r0, #8]
   13f6c:	ldr	r3, [r1, #8]
   13f70:	cmp	r3, r2
   13f74:	bne	13f88 <getopt_long_only@@Base+0x190>
   13f78:	ldr	r0, [r0, #12]
   13f7c:	ldr	r1, [r1, #12]
   13f80:	cmp	r1, r0
   13f84:	beq	13f98 <getopt_long_only@@Base+0x1a0>
   13f88:	mov	r0, #1
   13f8c:	str	r0, [sp, #32]
   13f90:	b	13f98 <getopt_long_only@@Base+0x1a0>
   13f94:	mov	sl, r9
   13f98:	add	r0, r5, r9, lsl #4
   13f9c:	add	r9, r9, #1
   13fa0:	ldr	r8, [r0, #16]
   13fa4:	cmp	r8, #0
   13fa8:	bne	13f0c <getopt_long_only@@Base+0x114>
   13fac:	ldr	r0, [sp, #32]
   13fb0:	cmp	r0, #0
   13fb4:	beq	1400c <getopt_long_only@@Base+0x214>
   13fb8:	ldr	r0, [pc, #632]	; 14238 <getopt_long_only@@Base+0x440>
   13fbc:	ldr	r0, [pc, r0]
   13fc0:	ldr	r0, [r0]
   13fc4:	cmp	r0, #0
   13fc8:	beq	140bc <getopt_long_only@@Base+0x2c4>
   13fcc:	ldr	r0, [sp, #20]
   13fd0:	ldrb	r0, [r0]
   13fd4:	cmp	r0, #58	; 0x3a
   13fd8:	beq	140bc <getopt_long_only@@Base+0x2c4>
   13fdc:	ldr	r0, [pc, #600]	; 1423c <getopt_long_only@@Base+0x444>
   13fe0:	ldr	r1, [sp, #12]
   13fe4:	mov	r2, r6
   13fe8:	mov	r3, r4
   13fec:	add	r0, pc, r0
   13ff0:	bl	11020 <warnx@plt>
   13ff4:	b	140bc <getopt_long_only@@Base+0x2c4>
   13ff8:	mov	sl, r9
   13ffc:	ldr	r7, [sp, #20]
   14000:	ldr	r9, [sp, #12]
   14004:	ldr	r2, [sp, #8]
   14008:	b	14024 <getopt_long_only@@Base+0x22c>
   1400c:	ldr	r7, [sp, #20]
   14010:	ldr	r9, [sp, #12]
   14014:	ldr	r2, [sp, #8]
   14018:	ldr	r1, [fp, #8]
   1401c:	cmn	sl, #1
   14020:	beq	1407c <getopt_long_only@@Base+0x284>
   14024:	add	r5, r5, sl, lsl #4
   14028:	cmp	r2, #0
   1402c:	mov	r0, r5
   14030:	ldr	r1, [r0, #4]!
   14034:	beq	140d8 <getopt_long_only@@Base+0x2e0>
   14038:	cmp	r1, #0
   1403c:	bne	140d8 <getopt_long_only@@Base+0x2e0>
   14040:	ldr	r0, [pc, #508]	; 14244 <getopt_long_only@@Base+0x44c>
   14044:	ldr	r0, [pc, r0]
   14048:	ldr	r0, [r0]
   1404c:	cmp	r0, #0
   14050:	ldrbne	r0, [r7]
   14054:	cmpne	r0, #58	; 0x3a
   14058:	bne	14118 <getopt_long_only@@Base+0x320>
   1405c:	ldr	r1, [r5, #8]
   14060:	mov	r0, #0
   14064:	cmp	r1, #0
   14068:	ldreq	r0, [r5, #12]
   1406c:	ldr	r1, [pc, #472]	; 1424c <getopt_long_only@@Base+0x454>
   14070:	ldr	r1, [pc, r1]
   14074:	str	r0, [r1]
   14078:	b	140cc <getopt_long_only@@Base+0x2d4>
   1407c:	cmp	r1, #0
   14080:	beq	140a0 <getopt_long_only@@Base+0x2a8>
   14084:	ldr	r0, [pc, #484]	; 14270 <getopt_long_only@@Base+0x478>
   14088:	ldr	r0, [pc, r0]
   1408c:	ldr	r1, [sp, #24]
   14090:	str	r1, [r0]
   14094:	mvn	r0, #0
   14098:	sub	sp, fp, #28
   1409c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   140a0:	ldr	r0, [pc, #460]	; 14274 <getopt_long_only@@Base+0x47c>
   140a4:	ldr	r0, [pc, r0]
   140a8:	ldr	r0, [r0]
   140ac:	cmp	r0, #0
   140b0:	ldrbne	r0, [r7]
   140b4:	cmpne	r0, #58	; 0x3a
   140b8:	bne	14100 <getopt_long_only@@Base+0x308>
   140bc:	ldr	r0, [pc, #380]	; 14240 <getopt_long_only@@Base+0x448>
   140c0:	mov	r1, #0
   140c4:	ldr	r0, [pc, r0]
   140c8:	str	r1, [r0]
   140cc:	mov	r0, #63	; 0x3f
   140d0:	sub	sp, fp, #28
   140d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   140d8:	sub	r2, r1, #1
   140dc:	cmp	r2, #1
   140e0:	bhi	14184 <getopt_long_only@@Base+0x38c>
   140e4:	ldr	r2, [sp, #8]
   140e8:	cmp	r2, #0
   140ec:	beq	14134 <getopt_long_only@@Base+0x33c>
   140f0:	ldr	r0, [pc, #344]	; 14250 <getopt_long_only@@Base+0x458>
   140f4:	ldr	r0, [pc, r0]
   140f8:	str	r2, [r0]
   140fc:	b	1416c <getopt_long_only@@Base+0x374>
   14100:	ldr	r0, [pc, #368]	; 14278 <getopt_long_only@@Base+0x480>
   14104:	mov	r1, r9
   14108:	mov	r2, r4
   1410c:	add	r0, pc, r0
   14110:	bl	11020 <warnx@plt>
   14114:	b	140bc <getopt_long_only@@Base+0x2c4>
   14118:	ldr	r0, [pc, #296]	; 14248 <getopt_long_only@@Base+0x450>
   1411c:	mov	r1, r9
   14120:	mov	r2, r6
   14124:	mov	r3, r4
   14128:	add	r0, pc, r0
   1412c:	bl	11020 <warnx@plt>
   14130:	b	1405c <getopt_long_only@@Base+0x264>
   14134:	cmp	r1, #1
   14138:	bne	14184 <getopt_long_only@@Base+0x38c>
   1413c:	ldr	r1, [sp, #24]
   14140:	ldr	r2, [pc, #268]	; 14254 <getopt_long_only@@Base+0x45c>
   14144:	ldr	r2, [pc, r2]
   14148:	add	r1, r1, #2
   1414c:	str	r1, [r2]
   14150:	ldr	r1, [sp, #4]
   14154:	ldr	r2, [sp]
   14158:	ldr	r1, [r1, r2, lsl #2]
   1415c:	ldr	r2, [pc, #244]	; 14258 <getopt_long_only@@Base+0x460>
   14160:	ldr	r2, [pc, r2]
   14164:	str	r1, [r2]
   14168:	ldr	r1, [r0]
   1416c:	cmp	r1, #1
   14170:	ldreq	r0, [pc, #228]	; 1425c <getopt_long_only@@Base+0x464>
   14174:	ldreq	r0, [pc, r0]
   14178:	ldreq	r0, [r0]
   1417c:	cmpeq	r0, #0
   14180:	beq	141ac <getopt_long_only@@Base+0x3b4>
   14184:	ldr	r0, [sp, #16]
   14188:	cmp	r0, #0
   1418c:	strne	sl, [r0]
   14190:	ldr	r1, [r5, #8]
   14194:	ldr	r0, [r5, #12]
   14198:	cmp	r1, #0
   1419c:	strne	r0, [r1]
   141a0:	movne	r0, #0
   141a4:	sub	sp, fp, #28
   141a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   141ac:	ldr	r0, [pc, #172]	; 14260 <getopt_long_only@@Base+0x468>
   141b0:	ldr	r0, [pc, r0]
   141b4:	ldr	r0, [r0]
   141b8:	cmp	r0, #0
   141bc:	ldrbne	r0, [r7]
   141c0:	cmpne	r0, #58	; 0x3a
   141c4:	beq	141dc <getopt_long_only@@Base+0x3e4>
   141c8:	ldr	r0, [pc, #148]	; 14264 <getopt_long_only@@Base+0x46c>
   141cc:	mov	r1, r9
   141d0:	mov	r2, r4
   141d4:	add	r0, pc, r0
   141d8:	bl	11020 <warnx@plt>
   141dc:	ldr	r1, [r5, #8]
   141e0:	mov	r0, #0
   141e4:	cmp	r1, #0
   141e8:	ldreq	r0, [r5, #12]
   141ec:	ldr	r1, [pc, #116]	; 14268 <getopt_long_only@@Base+0x470>
   141f0:	ldr	r1, [pc, r1]
   141f4:	str	r0, [r1]
   141f8:	ldr	r0, [pc, #108]	; 1426c <getopt_long_only@@Base+0x474>
   141fc:	ldr	r0, [pc, r0]
   14200:	mov	r1, r0
   14204:	ldr	r0, [r0]
   14208:	sub	r0, r0, #1
   1420c:	str	r0, [r1]
   14210:	ldrb	r0, [r7]
   14214:	cmp	r0, #58	; 0x3a
   14218:	movwne	r0, #63	; 0x3f
   1421c:	sub	sp, fp, #28
   14220:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14224:	andeq	r1, r1, r4, lsl #7
   14228:	andeq	r1, r1, r8, ror r3
   1422c:	andeq	r0, r0, r5, ror #13
   14230:	andeq	r1, r1, ip, lsl #1
   14234:	andeq	r1, r1, ip, ror #4
   14238:	andeq	r1, r1, r8, lsl r1
   1423c:	andeq	r0, r0, r2, lsl fp
   14240:	andeq	r1, r1, r0, lsr #32
   14244:	muleq	r1, r0, r0
   14248:	strdeq	r0, [r0], -r3
   1424c:	andeq	r1, r1, r4, ror r0
   14250:	strdeq	r0, [r1], -r4
   14254:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   14258:	andeq	r0, r1, r8, lsl #31
   1425c:	andeq	r0, r1, r4, ror pc
   14260:	andeq	r0, r1, r4, lsr #30
   14264:	andeq	r0, r0, r1, ror r9
   14268:	strdeq	r0, [r1], -r4
   1426c:	andeq	r0, r1, r4, ror #29
   14270:	andeq	r1, r1, r8, asr r0
   14274:	andeq	r1, r1, r0, lsr r0
   14278:	andeq	r0, r0, ip, asr sl
   1427c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14280:	mov	r7, r0
   14284:	ldr	r6, [pc, #72]	; 142d4 <getopt_long_only@@Base+0x4dc>
   14288:	ldr	r5, [pc, #72]	; 142d8 <getopt_long_only@@Base+0x4e0>
   1428c:	add	r6, pc, r6
   14290:	add	r5, pc, r5
   14294:	sub	r6, r6, r5
   14298:	mov	r8, r1
   1429c:	mov	r9, r2
   142a0:	bl	10e8c <Mat_VarGetNumberOfFields@plt-0x20>
   142a4:	asrs	r6, r6, #2
   142a8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   142ac:	mov	r4, #0
   142b0:	add	r4, r4, #1
   142b4:	ldr	r3, [r5], #4
   142b8:	mov	r2, r9
   142bc:	mov	r1, r8
   142c0:	mov	r0, r7
   142c4:	blx	r3
   142c8:	cmp	r6, r4
   142cc:	bne	142b0 <getopt_long_only@@Base+0x4b8>
   142d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   142d4:	andeq	r0, r1, ip, lsl #24
   142d8:	andeq	r0, r1, r4, lsl #24
   142dc:	bx	lr

Disassembly of section .fini:

000142e0 <.fini>:
   142e0:	push	{r3, lr}
   142e4:	pop	{r3, pc}
