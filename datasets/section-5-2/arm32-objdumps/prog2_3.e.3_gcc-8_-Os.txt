
../repos/prog2/3.e.3:     file format elf32-littlearm


Disassembly of section .init:

0001066c <.init>:
   1066c:	push	{r3, lr}
   10670:	bl	10778 <_start@@Base+0x3c>
   10674:	pop	{r3, pc}

Disassembly of section .plt:

00010678 <__isoc99_fscanf@plt-0x14>:
   10678:	push	{lr}		; (str lr, [sp, #-4]!)
   1067c:	ldr	lr, [pc, #4]	; 10688 <__isoc99_fscanf@plt-0x4>
   10680:	add	lr, pc, lr
   10684:	ldr	pc, [lr, #8]!
   10688:	andeq	r0, r1, r8, ror r9

0001068c <__isoc99_fscanf@plt>:
   1068c:	add	ip, pc, #0, 12
   10690:	add	ip, ip, #16, 20	; 0x10000
   10694:	ldr	pc, [ip, #2424]!	; 0x978

00010698 <fopen@plt>:
   10698:	add	ip, pc, #0, 12
   1069c:	add	ip, ip, #16, 20	; 0x10000
   106a0:	ldr	pc, [ip, #2416]!	; 0x970

000106a4 <realloc@plt>:
   106a4:	add	ip, pc, #0, 12
   106a8:	add	ip, ip, #16, 20	; 0x10000
   106ac:	ldr	pc, [ip, #2408]!	; 0x968

000106b0 <malloc@plt>:
   106b0:	add	ip, pc, #0, 12
   106b4:	add	ip, ip, #16, 20	; 0x10000
   106b8:	ldr	pc, [ip, #2400]!	; 0x960

000106bc <__libc_start_main@plt>:
   106bc:	add	ip, pc, #0, 12
   106c0:	add	ip, ip, #16, 20	; 0x10000
   106c4:	ldr	pc, [ip, #2392]!	; 0x958

000106c8 <__gmon_start__@plt>:
   106c8:	add	ip, pc, #0, 12
   106cc:	add	ip, ip, #16, 20	; 0x10000
   106d0:	ldr	pc, [ip, #2384]!	; 0x950

000106d4 <fprintf@plt>:
   106d4:	add	ip, pc, #0, 12
   106d8:	add	ip, ip, #16, 20	; 0x10000
   106dc:	ldr	pc, [ip, #2376]!	; 0x948

000106e0 <fclose@plt>:
   106e0:	add	ip, pc, #0, 12
   106e4:	add	ip, ip, #16, 20	; 0x10000
   106e8:	ldr	pc, [ip, #2368]!	; 0x940

000106ec <fputs@plt>:
   106ec:	add	ip, pc, #0, 12
   106f0:	add	ip, ip, #16, 20	; 0x10000
   106f4:	ldr	pc, [ip, #2360]!	; 0x938

000106f8 <abort@plt>:
   106f8:	add	ip, pc, #0, 12
   106fc:	add	ip, ip, #16, 20	; 0x10000
   10700:	ldr	pc, [ip, #2352]!	; 0x930

Disassembly of section .text:

00010704 <main@@Base>:
   10704:	push	{r0, r1, r4, lr}
   10708:	mov	r4, #0
   1070c:	add	r1, sp, #4
   10710:	mov	r0, r4
   10714:	str	r4, [sp, #4]
   10718:	bl	1082c <analisarFicheiro@@Base>
   1071c:	ldr	r2, [sp, #4]
   10720:	mov	r1, r0
   10724:	ldr	r0, [pc, #12]	; 10738 <main@@Base+0x34>
   10728:	bl	108c0 <gerarRelatorio@@Base>
   1072c:	mov	r0, r4
   10730:	add	sp, sp, #8
   10734:	pop	{r4, pc}
   10738:	andeq	r0, r1, fp, lsl #20

0001073c <_start@@Base>:
   1073c:	mov	fp, #0
   10740:	mov	lr, #0
   10744:	pop	{r1}		; (ldr r1, [sp], #4)
   10748:	mov	r2, sp
   1074c:	push	{r2}		; (str r2, [sp, #-4]!)
   10750:	push	{r0}		; (str r0, [sp, #-4]!)
   10754:	ldr	ip, [pc, #16]	; 1076c <_start@@Base+0x30>
   10758:	push	{ip}		; (str ip, [sp, #-4]!)
   1075c:	ldr	r0, [pc, #12]	; 10770 <_start@@Base+0x34>
   10760:	ldr	r3, [pc, #12]	; 10774 <_start@@Base+0x38>
   10764:	bl	106bc <__libc_start_main@plt>
   10768:	bl	106f8 <abort@plt>
   1076c:	andeq	r0, r1, r4, asr #19
   10770:	andeq	r0, r1, r4, lsl #14
   10774:	andeq	r0, r1, r4, ror #18
   10778:	ldr	r3, [pc, #20]	; 10794 <_start@@Base+0x58>
   1077c:	ldr	r2, [pc, #20]	; 10798 <_start@@Base+0x5c>
   10780:	add	r3, pc, r3
   10784:	ldr	r2, [r3, r2]
   10788:	cmp	r2, #0
   1078c:	bxeq	lr
   10790:	b	106c8 <__gmon_start__@plt>
   10794:	andeq	r0, r1, r8, ror r8
   10798:	andeq	r0, r0, r4, lsr r0
   1079c:	ldr	r0, [pc, #24]	; 107bc <_start@@Base+0x80>
   107a0:	ldr	r3, [pc, #24]	; 107c0 <_start@@Base+0x84>
   107a4:	cmp	r3, r0
   107a8:	bxeq	lr
   107ac:	ldr	r3, [pc, #16]	; 107c4 <_start@@Base+0x88>
   107b0:	cmp	r3, #0
   107b4:	bxeq	lr
   107b8:	bx	r3
   107bc:	andeq	r1, r2, r0, asr #32
   107c0:	andeq	r1, r2, r0, asr #32
   107c4:	andeq	r0, r0, r0
   107c8:	ldr	r0, [pc, #36]	; 107f4 <_start@@Base+0xb8>
   107cc:	ldr	r1, [pc, #36]	; 107f8 <_start@@Base+0xbc>
   107d0:	sub	r1, r1, r0
   107d4:	asr	r1, r1, #2
   107d8:	add	r1, r1, r1, lsr #31
   107dc:	asrs	r1, r1, #1
   107e0:	bxeq	lr
   107e4:	ldr	r3, [pc, #16]	; 107fc <_start@@Base+0xc0>
   107e8:	cmp	r3, #0
   107ec:	bxeq	lr
   107f0:	bx	r3
   107f4:	andeq	r1, r2, r0, asr #32
   107f8:	andeq	r1, r2, r0, asr #32
   107fc:	andeq	r0, r0, r0
   10800:	push	{r4, lr}
   10804:	ldr	r4, [pc, #24]	; 10824 <_start@@Base+0xe8>
   10808:	ldrb	r3, [r4]
   1080c:	cmp	r3, #0
   10810:	popne	{r4, pc}
   10814:	bl	1079c <_start@@Base+0x60>
   10818:	mov	r3, #1
   1081c:	strb	r3, [r4]
   10820:	pop	{r4, pc}
   10824:	andeq	r1, r2, r0, asr #32
   10828:	b	107c8 <_start@@Base+0x8c>

0001082c <analisarFicheiro@@Base>:
   1082c:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   10830:	mov	r8, r1
   10834:	mov	r5, #0
   10838:	mov	sl, #104	; 0x68
   1083c:	ldr	r1, [pc, #112]	; 108b4 <analisarFicheiro@@Base+0x88>
   10840:	ldr	r0, [pc, #112]	; 108b8 <analisarFicheiro@@Base+0x8c>
   10844:	bl	10698 <fopen@plt>
   10848:	ldr	r9, [pc, #108]	; 108bc <analisarFicheiro@@Base+0x90>
   1084c:	mov	r6, r0
   10850:	mov	r0, #104	; 0x68
   10854:	bl	106b0 <malloc@plt>
   10858:	mov	r4, r0
   1085c:	mul	r7, sl, r5
   10860:	mov	r1, r9
   10864:	mov	r0, r6
   10868:	add	r2, r4, r7
   1086c:	add	r3, r2, #100	; 0x64
   10870:	str	r3, [sp]
   10874:	add	r3, r2, #50	; 0x32
   10878:	bl	1068c <__isoc99_fscanf@plt>
   1087c:	cmp	r0, #3
   10880:	beq	1089c <analisarFicheiro@@Base+0x70>
   10884:	mov	r0, r6
   10888:	str	r5, [r8]
   1088c:	bl	106e0 <fclose@plt>
   10890:	mov	r0, r4
   10894:	add	sp, sp, #8
   10898:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1089c:	mov	r0, r4
   108a0:	add	r1, r7, #104	; 0x68
   108a4:	bl	106a4 <realloc@plt>
   108a8:	add	r5, r5, #1
   108ac:	mov	r4, r0
   108b0:	b	1085c <analisarFicheiro@@Base+0x30>
   108b4:	ldrdeq	r0, [r1], -r4
   108b8:	ldrdeq	r0, [r1], -r6
   108bc:	andeq	r0, r1, r3, ror #19

000108c0 <gerarRelatorio@@Base>:
   108c0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   108c4:	mov	r8, r2
   108c8:	mov	fp, #0
   108cc:	mov	r9, #104	; 0x68
   108d0:	ldr	r1, [pc, #128]	; 10958 <gerarRelatorio@@Base+0x98>
   108d4:	bl	10698 <fopen@plt>
   108d8:	mov	r1, r0
   108dc:	mov	r5, r0
   108e0:	ldr	sl, [pc, #116]	; 1095c <gerarRelatorio@@Base+0x9c>
   108e4:	ldr	r0, [pc, #116]	; 10960 <gerarRelatorio@@Base+0xa0>
   108e8:	bl	106ec <fputs@plt>
   108ec:	mov	r0, #104	; 0x68
   108f0:	bl	106b0 <malloc@plt>
   108f4:	mov	r6, r0
   108f8:	cmp	fp, r8
   108fc:	blt	10910 <gerarRelatorio@@Base+0x50>
   10900:	mov	r0, r5
   10904:	add	sp, sp, #12
   10908:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1090c:	b	106e0 <fclose@plt>
   10910:	add	r7, fp, #1
   10914:	mov	r0, r6
   10918:	mul	r4, r9, r7
   1091c:	mov	r1, r4
   10920:	bl	106a4 <realloc@plt>
   10924:	sub	r3, r4, #104	; 0x68
   10928:	mov	r6, r0
   1092c:	add	r3, r0, r3
   10930:	mov	r1, sl
   10934:	ldr	r2, [r3, #100]	; 0x64
   10938:	mov	r0, r5
   1093c:	str	r3, [sp]
   10940:	add	r3, r3, #50	; 0x32
   10944:	str	r2, [sp, #4]
   10948:	mov	r2, fp
   1094c:	mov	fp, r7
   10950:	bl	106d4 <fprintf@plt>
   10954:	b	108f8 <gerarRelatorio@@Base+0x38>
   10958:	andeq	r0, r1, ip, ror #19
   1095c:	strdeq	r0, [r1], -r9
   10960:	andeq	r0, r1, lr, ror #19

00010964 <__libc_csu_init@@Base>:
   10964:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10968:	mov	r7, r0
   1096c:	ldr	r6, [pc, #72]	; 109bc <__libc_csu_init@@Base+0x58>
   10970:	ldr	r5, [pc, #72]	; 109c0 <__libc_csu_init@@Base+0x5c>
   10974:	add	r6, pc, r6
   10978:	add	r5, pc, r5
   1097c:	sub	r6, r6, r5
   10980:	mov	r8, r1
   10984:	mov	r9, r2
   10988:	bl	1066c <__isoc99_fscanf@plt-0x20>
   1098c:	asrs	r6, r6, #2
   10990:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10994:	mov	r4, #0
   10998:	add	r4, r4, #1
   1099c:	ldr	r3, [r5], #4
   109a0:	mov	r2, r9
   109a4:	mov	r1, r8
   109a8:	mov	r0, r7
   109ac:	blx	r3
   109b0:	cmp	r6, r4
   109b4:	bne	10998 <__libc_csu_init@@Base+0x34>
   109b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   109bc:	muleq	r1, r8, r5
   109c0:	muleq	r1, r0, r5

000109c4 <__libc_csu_fini@@Base>:
   109c4:	bx	lr

Disassembly of section .fini:

000109c8 <.fini>:
   109c8:	push	{r3, lr}
   109cc:	pop	{r3, pc}
