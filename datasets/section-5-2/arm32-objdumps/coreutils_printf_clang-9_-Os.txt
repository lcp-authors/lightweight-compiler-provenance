
../repos/coreutils/src/printf:     file format elf32-littlearm


Disassembly of section .init:

00010e28 <.init>:
   10e28:	push	{r3, lr}
   10e2c:	bl	11124 <__mempcpy_chk@plt+0x48>
   10e30:	pop	{r3, pc}

Disassembly of section .plt:

00010e34 <calloc@plt-0x14>:
   10e34:	push	{lr}		; (str lr, [sp, #-4]!)
   10e38:	ldr	lr, [pc, #4]	; 10e44 <calloc@plt-0x4>
   10e3c:	add	lr, pc, lr
   10e40:	ldr	pc, [lr, #8]!
   10e44:			; <UNDEFINED> instruction: 0x000161bc

00010e48 <calloc@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #90112	; 0x16000
   10e50:	ldr	pc, [ip, #444]!	; 0x1bc

00010e54 <fputs_unlocked@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #90112	; 0x16000
   10e5c:	ldr	pc, [ip, #436]!	; 0x1b4

00010e60 <uselocale@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #90112	; 0x16000
   10e68:	ldr	pc, [ip, #428]!	; 0x1ac

00010e6c <iconv@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #90112	; 0x16000
   10e74:	ldr	pc, [ip, #420]!	; 0x1a4

00010e78 <strcmp@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #90112	; 0x16000
   10e80:	ldr	pc, [ip, #412]!	; 0x19c

00010e84 <fflush@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #90112	; 0x16000
   10e8c:	ldr	pc, [ip, #404]!	; 0x194

00010e90 <free@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #90112	; 0x16000
   10e98:	ldr	pc, [ip, #396]!	; 0x18c

00010e9c <ferror@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #90112	; 0x16000
   10ea4:	ldr	pc, [ip, #388]!	; 0x184

00010ea8 <_exit@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #90112	; 0x16000
   10eb0:	ldr	pc, [ip, #380]!	; 0x17c

00010eb4 <memcpy@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #90112	; 0x16000
   10ebc:	ldr	pc, [ip, #372]!	; 0x174

00010ec0 <mbsinit@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #90112	; 0x16000
   10ec8:	ldr	pc, [ip, #364]!	; 0x16c

00010ecc <strtold@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #90112	; 0x16000
   10ed4:	ldr	pc, [ip, #356]!	; 0x164

00010ed8 <__vprintf_chk@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #90112	; 0x16000
   10ee0:	ldr	pc, [ip, #348]!	; 0x15c

00010ee4 <dcgettext@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #90112	; 0x16000
   10eec:	ldr	pc, [ip, #340]!	; 0x154

00010ef0 <realloc@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #90112	; 0x16000
   10ef8:	ldr	pc, [ip, #332]!	; 0x14c

00010efc <textdomain@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #90112	; 0x16000
   10f04:	ldr	pc, [ip, #324]!	; 0x144

00010f08 <iswprint@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #90112	; 0x16000
   10f10:	ldr	pc, [ip, #316]!	; 0x13c

00010f14 <fwrite@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #90112	; 0x16000
   10f1c:	ldr	pc, [ip, #308]!	; 0x134

00010f20 <lseek64@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #90112	; 0x16000
   10f28:	ldr	pc, [ip, #300]!	; 0x12c

00010f2c <__ctype_get_mb_cur_max@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #90112	; 0x16000
   10f34:	ldr	pc, [ip, #292]!	; 0x124

00010f38 <__fpending@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #90112	; 0x16000
   10f40:	ldr	pc, [ip, #284]!	; 0x11c

00010f44 <ferror_unlocked@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #90112	; 0x16000
   10f4c:	ldr	pc, [ip, #276]!	; 0x114

00010f50 <mbrtowc@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #90112	; 0x16000
   10f58:	ldr	pc, [ip, #268]!	; 0x10c

00010f5c <error@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #90112	; 0x16000
   10f64:	ldr	pc, [ip, #260]!	; 0x104

00010f68 <getenv@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #90112	; 0x16000
   10f70:	ldr	pc, [ip, #252]!	; 0xfc

00010f74 <malloc@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #90112	; 0x16000
   10f7c:	ldr	pc, [ip, #244]!	; 0xf4

00010f80 <iconv_open@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #90112	; 0x16000
   10f88:	ldr	pc, [ip, #236]!	; 0xec

00010f8c <__libc_start_main@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #90112	; 0x16000
   10f94:	ldr	pc, [ip, #228]!	; 0xe4

00010f98 <__vfprintf_chk@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #90112	; 0x16000
   10fa0:	ldr	pc, [ip, #220]!	; 0xdc

00010fa4 <__freading@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #90112	; 0x16000
   10fac:	ldr	pc, [ip, #212]!	; 0xd4

00010fb0 <__gmon_start__@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #90112	; 0x16000
   10fb8:	ldr	pc, [ip, #204]!	; 0xcc

00010fbc <__ctype_b_loc@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #90112	; 0x16000
   10fc4:	ldr	pc, [ip, #196]!	; 0xc4

00010fc8 <exit@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #90112	; 0x16000
   10fd0:	ldr	pc, [ip, #188]!	; 0xbc

00010fd4 <bcmp@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #90112	; 0x16000
   10fdc:	ldr	pc, [ip, #180]!	; 0xb4

00010fe0 <strlen@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #90112	; 0x16000
   10fe8:	ldr	pc, [ip, #172]!	; 0xac

00010fec <__errno_location@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #90112	; 0x16000
   10ff4:	ldr	pc, [ip, #164]!	; 0xa4

00010ff8 <__cxa_atexit@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #90112	; 0x16000
   11000:	ldr	pc, [ip, #156]!	; 0x9c

00011004 <memset@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #90112	; 0x16000
   1100c:	ldr	pc, [ip, #148]!	; 0x94

00011010 <__printf_chk@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #90112	; 0x16000
   11018:	ldr	pc, [ip, #140]!	; 0x8c

0001101c <fileno@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #90112	; 0x16000
   11024:	ldr	pc, [ip, #132]!	; 0x84

00011028 <strtoumax@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #90112	; 0x16000
   11030:	ldr	pc, [ip, #124]!	; 0x7c

00011034 <__fprintf_chk@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #90112	; 0x16000
   1103c:	ldr	pc, [ip, #116]!	; 0x74

00011040 <memchr@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #90112	; 0x16000
   11048:	ldr	pc, [ip, #108]!	; 0x6c

0001104c <strtoimax@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #90112	; 0x16000
   11054:	ldr	pc, [ip, #100]!	; 0x64

00011058 <fclose@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #90112	; 0x16000
   11060:	ldr	pc, [ip, #92]!	; 0x5c

00011064 <fseeko64@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #90112	; 0x16000
   1106c:	ldr	pc, [ip, #84]!	; 0x54

00011070 <setlocale@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #90112	; 0x16000
   11078:	ldr	pc, [ip, #76]!	; 0x4c

0001107c <strrchr@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #90112	; 0x16000
   11084:	ldr	pc, [ip, #68]!	; 0x44

00011088 <nl_langinfo@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #90112	; 0x16000
   11090:	ldr	pc, [ip, #60]!	; 0x3c

00011094 <newlocale@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #90112	; 0x16000
   1109c:	ldr	pc, [ip, #52]!	; 0x34

000110a0 <bindtextdomain@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #90112	; 0x16000
   110a8:	ldr	pc, [ip, #44]!	; 0x2c

000110ac <fputs@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #90112	; 0x16000
   110b4:	ldr	pc, [ip, #36]!	; 0x24

000110b8 <strncmp@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #90112	; 0x16000
   110c0:	ldr	pc, [ip, #28]!

000110c4 <abort@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #90112	; 0x16000
   110cc:	ldr	pc, [ip, #20]!

000110d0 <putchar_unlocked@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #90112	; 0x16000
   110d8:	ldr	pc, [ip, #12]!

000110dc <__mempcpy_chk@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #90112	; 0x16000
   110e4:	ldr	pc, [ip, #4]!

Disassembly of section .text:

000110e8 <.text>:
   110e8:	mov	fp, #0
   110ec:	mov	lr, #0
   110f0:	pop	{r1}		; (ldr r1, [sp], #4)
   110f4:	mov	r2, sp
   110f8:	push	{r2}		; (str r2, [sp, #-4]!)
   110fc:	push	{r0}		; (str r0, [sp, #-4]!)
   11100:	ldr	ip, [pc, #16]	; 11118 <__mempcpy_chk@plt+0x3c>
   11104:	push	{ip}		; (str ip, [sp, #-4]!)
   11108:	ldr	r0, [pc, #12]	; 1111c <__mempcpy_chk@plt+0x40>
   1110c:	ldr	r3, [pc, #12]	; 11120 <__mempcpy_chk@plt+0x44>
   11110:	bl	10f8c <__libc_start_main@plt>
   11114:	bl	110c4 <abort@plt>
   11118:	andeq	r5, r1, r0, ror #10
   1111c:	muleq	r1, r4, r4
   11120:	andeq	r5, r1, r0, lsl #10
   11124:	ldr	r3, [pc, #20]	; 11140 <__mempcpy_chk@plt+0x64>
   11128:	ldr	r2, [pc, #20]	; 11144 <__mempcpy_chk@plt+0x68>
   1112c:	add	r3, pc, r3
   11130:	ldr	r2, [r3, r2]
   11134:	cmp	r2, #0
   11138:	bxeq	lr
   1113c:	b	10fb0 <__gmon_start__@plt>
   11140:	andeq	r5, r1, ip, asr #29
   11144:	andeq	r0, r0, ip, ror #1
   11148:	ldr	r0, [pc, #24]	; 11168 <__mempcpy_chk@plt+0x8c>
   1114c:	ldr	r3, [pc, #24]	; 1116c <__mempcpy_chk@plt+0x90>
   11150:	cmp	r3, r0
   11154:	bxeq	lr
   11158:	ldr	r3, [pc, #16]	; 11170 <__mempcpy_chk@plt+0x94>
   1115c:	cmp	r3, #0
   11160:	bxeq	lr
   11164:	bx	r3
   11168:	andeq	r7, r2, r0, asr #2
   1116c:	andeq	r7, r2, r0, asr #2
   11170:	andeq	r0, r0, r0
   11174:	ldr	r0, [pc, #36]	; 111a0 <__mempcpy_chk@plt+0xc4>
   11178:	ldr	r1, [pc, #36]	; 111a4 <__mempcpy_chk@plt+0xc8>
   1117c:	sub	r1, r1, r0
   11180:	asr	r1, r1, #2
   11184:	add	r1, r1, r1, lsr #31
   11188:	asrs	r1, r1, #1
   1118c:	bxeq	lr
   11190:	ldr	r3, [pc, #16]	; 111a8 <__mempcpy_chk@plt+0xcc>
   11194:	cmp	r3, #0
   11198:	bxeq	lr
   1119c:	bx	r3
   111a0:	andeq	r7, r2, r0, asr #2
   111a4:	andeq	r7, r2, r0, asr #2
   111a8:	andeq	r0, r0, r0
   111ac:	push	{r4, lr}
   111b0:	ldr	r4, [pc, #24]	; 111d0 <__mempcpy_chk@plt+0xf4>
   111b4:	ldrb	r3, [r4]
   111b8:	cmp	r3, #0
   111bc:	popne	{r4, pc}
   111c0:	bl	11148 <__mempcpy_chk@plt+0x6c>
   111c4:	mov	r3, #1
   111c8:	strb	r3, [r4]
   111cc:	pop	{r4, pc}
   111d0:	andeq	r7, r2, r0, asr r1
   111d4:	b	11174 <__mempcpy_chk@plt+0x98>
   111d8:	push	{fp, lr}
   111dc:	mov	fp, sp
   111e0:	sub	sp, sp, #56	; 0x38
   111e4:	mov	r8, r0
   111e8:	cmp	r0, #0
   111ec:	bne	11454 <__mempcpy_chk@plt+0x378>
   111f0:	movw	r1, #21939	; 0x55b3
   111f4:	mov	r0, #0
   111f8:	mov	r2, #5
   111fc:	movt	r1, #1
   11200:	bl	10ee4 <dcgettext@plt>
   11204:	mov	r1, r0
   11208:	movw	r0, #29024	; 0x7160
   1120c:	movt	r0, #2
   11210:	ldr	r2, [r0]
   11214:	mov	r0, #1
   11218:	mov	r3, r2
   1121c:	bl	11010 <__printf_chk@plt>
   11220:	movw	r1, #21988	; 0x55e4
   11224:	mov	r0, #0
   11228:	mov	r2, #5
   1122c:	movt	r1, #1
   11230:	bl	10ee4 <dcgettext@plt>
   11234:	movw	r9, #29004	; 0x714c
   11238:	movt	r9, #2
   1123c:	ldr	r1, [r9]
   11240:	bl	10e54 <fputs_unlocked@plt>
   11244:	movw	r1, #22061	; 0x562d
   11248:	mov	r0, #0
   1124c:	mov	r2, #5
   11250:	movt	r1, #1
   11254:	bl	10ee4 <dcgettext@plt>
   11258:	ldr	r1, [r9]
   1125c:	bl	10e54 <fputs_unlocked@plt>
   11260:	movw	r1, #22106	; 0x565a
   11264:	mov	r0, #0
   11268:	mov	r2, #5
   1126c:	movt	r1, #1
   11270:	bl	10ee4 <dcgettext@plt>
   11274:	ldr	r1, [r9]
   11278:	bl	10e54 <fputs_unlocked@plt>
   1127c:	movw	r1, #22160	; 0x5690
   11280:	mov	r0, #0
   11284:	mov	r2, #5
   11288:	movt	r1, #1
   1128c:	bl	10ee4 <dcgettext@plt>
   11290:	ldr	r1, [r9]
   11294:	bl	10e54 <fputs_unlocked@plt>
   11298:	movw	r1, #22257	; 0x56f1
   1129c:	mov	r0, #0
   112a0:	mov	r2, #5
   112a4:	movt	r1, #1
   112a8:	bl	10ee4 <dcgettext@plt>
   112ac:	ldr	r1, [r9]
   112b0:	bl	10e54 <fputs_unlocked@plt>
   112b4:	movw	r1, #22486	; 0x57d6
   112b8:	mov	r0, #0
   112bc:	mov	r2, #5
   112c0:	movt	r1, #1
   112c4:	bl	10ee4 <dcgettext@plt>
   112c8:	ldr	r1, [r9]
   112cc:	bl	10e54 <fputs_unlocked@plt>
   112d0:	movw	r1, #22738	; 0x58d2
   112d4:	mov	r0, #0
   112d8:	mov	r2, #5
   112dc:	movt	r1, #1
   112e0:	bl	10ee4 <dcgettext@plt>
   112e4:	ldr	r1, [r9]
   112e8:	bl	10e54 <fputs_unlocked@plt>
   112ec:	movw	r1, #23186	; 0x5a92
   112f0:	mov	r0, #0
   112f4:	mov	r2, #5
   112f8:	movt	r1, #1
   112fc:	bl	10ee4 <dcgettext@plt>
   11300:	movw	r5, #23377	; 0x5b51
   11304:	mov	r1, r0
   11308:	mov	r0, #1
   1130c:	movt	r5, #1
   11310:	mov	r2, r5
   11314:	bl	11010 <__printf_chk@plt>
   11318:	movw	ip, #24176	; 0x5e70
   1131c:	mov	r6, sp
   11320:	movt	ip, #1
   11324:	mov	r1, r6
   11328:	ldm	ip!, {r2, r3, r4, r7}
   1132c:	stmia	r1!, {r2, r3, r4, r7}
   11330:	ldm	ip!, {r0, r2, r3, r4, r7}
   11334:	stmia	r1!, {r0, r2, r3, r4, r7}
   11338:	ldm	ip, {r0, r2, r3, r4, r7}
   1133c:	stm	r1, {r0, r2, r3, r4, r7}
   11340:	movw	r1, #23543	; 0x5bf7
   11344:	movt	r1, #1
   11348:	mov	r0, r5
   1134c:	bl	10e78 <strcmp@plt>
   11350:	cmp	r0, #0
   11354:	ldrne	r1, [r6, #8]!
   11358:	cmpne	r1, #0
   1135c:	bne	11348 <__mempcpy_chk@plt+0x26c>
   11360:	movw	r1, #23638	; 0x5c56
   11364:	ldr	r6, [r6, #4]
   11368:	mov	r0, #0
   1136c:	mov	r2, #5
   11370:	movt	r1, #1
   11374:	bl	10ee4 <dcgettext@plt>
   11378:	movw	r2, #23441	; 0x5b91
   1137c:	movw	r3, #23661	; 0x5c6d
   11380:	mov	r1, r0
   11384:	mov	r0, #1
   11388:	movt	r2, #1
   1138c:	movt	r3, #1
   11390:	bl	11010 <__printf_chk@plt>
   11394:	cmp	r6, #0
   11398:	mov	r0, #5
   1139c:	mov	r1, #0
   113a0:	moveq	r6, r5
   113a4:	bl	11070 <setlocale@plt>
   113a8:	cmp	r0, #0
   113ac:	beq	113e4 <__mempcpy_chk@plt+0x308>
   113b0:	movw	r1, #23701	; 0x5c95
   113b4:	mov	r2, #3
   113b8:	movt	r1, #1
   113bc:	bl	110b8 <strncmp@plt>
   113c0:	cmp	r0, #0
   113c4:	beq	113e4 <__mempcpy_chk@plt+0x308>
   113c8:	movw	r1, #23705	; 0x5c99
   113cc:	mov	r0, #0
   113d0:	mov	r2, #5
   113d4:	movt	r1, #1
   113d8:	bl	10ee4 <dcgettext@plt>
   113dc:	ldr	r1, [r9]
   113e0:	bl	10e54 <fputs_unlocked@plt>
   113e4:	movw	r1, #23776	; 0x5ce0
   113e8:	mov	r0, #0
   113ec:	mov	r2, #5
   113f0:	movt	r1, #1
   113f4:	bl	10ee4 <dcgettext@plt>
   113f8:	movw	r2, #23661	; 0x5c6d
   113fc:	mov	r1, r0
   11400:	mov	r0, #1
   11404:	mov	r3, r5
   11408:	movt	r2, #1
   1140c:	bl	11010 <__printf_chk@plt>
   11410:	movw	r1, #23803	; 0x5cfb
   11414:	mov	r0, #0
   11418:	mov	r2, #5
   1141c:	movt	r1, #1
   11420:	bl	10ee4 <dcgettext@plt>
   11424:	mov	r1, r0
   11428:	movw	r0, #23571	; 0x5c13
   1142c:	movw	r3, #22060	; 0x562c
   11430:	cmp	r6, r5
   11434:	mov	r2, r6
   11438:	movt	r0, #1
   1143c:	movt	r3, #1
   11440:	moveq	r3, r0
   11444:	mov	r0, #1
   11448:	bl	11010 <__printf_chk@plt>
   1144c:	mov	r0, r8
   11450:	bl	10fc8 <exit@plt>
   11454:	movw	r0, #29000	; 0x7148
   11458:	movw	r1, #21900	; 0x558c
   1145c:	mov	r2, #5
   11460:	movt	r0, #2
   11464:	movt	r1, #1
   11468:	ldr	r5, [r0]
   1146c:	mov	r0, #0
   11470:	bl	10ee4 <dcgettext@plt>
   11474:	mov	r2, r0
   11478:	movw	r0, #29024	; 0x7160
   1147c:	mov	r1, #1
   11480:	movt	r0, #2
   11484:	ldr	r3, [r0]
   11488:	mov	r0, r5
   1148c:	bl	11034 <__fprintf_chk@plt>
   11490:	b	1144c <__mempcpy_chk@plt+0x370>
   11494:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11498:	add	fp, sp, #28
   1149c:	sub	sp, sp, #4
   114a0:	vpush	{d8}
   114a4:	sub	sp, sp, #320	; 0x140
   114a8:	mov	r7, r0
   114ac:	ldr	r0, [r1]
   114b0:	mov	r5, r1
   114b4:	bl	125c8 <__mempcpy_chk@plt+0x14ec>
   114b8:	movw	r1, #22060	; 0x562c
   114bc:	mov	r0, #6
   114c0:	movt	r1, #1
   114c4:	bl	11070 <setlocale@plt>
   114c8:	movw	r6, #23445	; 0x5b95
   114cc:	movw	r1, #23384	; 0x5b58
   114d0:	movt	r6, #1
   114d4:	movt	r1, #1
   114d8:	mov	r0, r6
   114dc:	bl	110a0 <bindtextdomain@plt>
   114e0:	mov	r0, r6
   114e4:	bl	10efc <textdomain@plt>
   114e8:	movw	r0, #9400	; 0x24b8
   114ec:	movt	r0, #1
   114f0:	bl	15564 <__mempcpy_chk@plt+0x4488>
   114f4:	movw	r1, #29012	; 0x7154
   114f8:	mov	r0, #0
   114fc:	movt	r1, #2
   11500:	strb	r0, [r1]
   11504:	movw	r0, #23408	; 0x5b70
   11508:	movt	r0, #1
   1150c:	bl	10f68 <getenv@plt>
   11510:	movw	r1, #29013	; 0x7155
   11514:	cmp	r0, #0
   11518:	movt	r1, #2
   1151c:	movwne	r0, #1
   11520:	cmp	r7, #2
   11524:	strb	r0, [r1]
   11528:	bne	115a0 <__mempcpy_chk@plt+0x4c4>
   1152c:	ldr	r4, [r5, #4]
   11530:	movw	r1, #23424	; 0x5b80
   11534:	movt	r1, #1
   11538:	mov	r0, r4
   1153c:	bl	10e78 <strcmp@plt>
   11540:	cmp	r0, #0
   11544:	beq	11f80 <__mempcpy_chk@plt+0xea4>
   11548:	movw	r1, #23431	; 0x5b87
   1154c:	mov	r0, r4
   11550:	movt	r1, #1
   11554:	bl	10e78 <strcmp@plt>
   11558:	cmp	r0, #0
   1155c:	bne	115a8 <__mempcpy_chk@plt+0x4cc>
   11560:	movw	r0, #28920	; 0x70f8
   11564:	movw	r1, #23455	; 0x5b9f
   11568:	movw	r2, #23441	; 0x5b91
   1156c:	mov	r4, #0
   11570:	movt	r0, #2
   11574:	movt	r1, #1
   11578:	movt	r2, #1
   1157c:	ldr	r3, [r0]
   11580:	movw	r0, #29004	; 0x714c
   11584:	stm	sp, {r1, r4}
   11588:	movw	r1, #23377	; 0x5b51
   1158c:	movt	r0, #2
   11590:	movt	r1, #1
   11594:	ldr	r0, [r0]
   11598:	bl	148b8 <__mempcpy_chk@plt+0x37dc>
   1159c:	b	11ed0 <__mempcpy_chk@plt+0xdf4>
   115a0:	blt	11f54 <__mempcpy_chk@plt+0xe78>
   115a4:	ldr	r4, [r5, #4]
   115a8:	movw	r1, #23471	; 0x5baf
   115ac:	mov	r0, r4
   115b0:	movt	r1, #1
   115b4:	bl	10e78 <strcmp@plt>
   115b8:	cmp	r0, #0
   115bc:	beq	115cc <__mempcpy_chk@plt+0x4f0>
   115c0:	str	r4, [sp, #8]
   115c4:	mov	r0, r5
   115c8:	b	115e4 <__mempcpy_chk@plt+0x508>
   115cc:	cmp	r7, #3
   115d0:	blt	11f54 <__mempcpy_chk@plt+0xe78>
   115d4:	ldr	r1, [r5, #8]
   115d8:	add	r0, r5, #4
   115dc:	sub	r7, r7, #1
   115e0:	str	r1, [sp, #8]
   115e4:	add	r0, r0, #8
   115e8:	add	r1, sp, #56	; 0x38
   115ec:	mov	r9, #0
   115f0:	str	r0, [sp, #24]
   115f4:	sub	r0, r7, #2
   115f8:	add	r1, r1, #99	; 0x63
   115fc:	mov	r7, #1
   11600:	mov	sl, r0
   11604:	str	r1, [sp, #16]
   11608:	ldr	r5, [sp, #8]
   1160c:	ldr	r8, [sp, #24]
   11610:	str	r0, [sp, #12]
   11614:	mov	r0, #0
   11618:	str	r0, [sp, #28]
   1161c:	mov	r0, #0
   11620:	str	r0, [sp, #20]
   11624:	ldrb	r0, [r5]
   11628:	cmp	r0, #37	; 0x25
   1162c:	beq	11664 <__mempcpy_chk@plt+0x588>
   11630:	cmp	r0, #92	; 0x5c
   11634:	beq	1164c <__mempcpy_chk@plt+0x570>
   11638:	cmp	r0, #0
   1163c:	beq	11e5c <__mempcpy_chk@plt+0xd80>
   11640:	bl	110d0 <putchar_unlocked@plt>
   11644:	mov	r4, r5
   11648:	b	1165c <__mempcpy_chk@plt+0x580>
   1164c:	mov	r0, r5
   11650:	mov	r1, #0
   11654:	bl	12048 <__mempcpy_chk@plt+0xf6c>
   11658:	add	r4, r5, r0
   1165c:	add	r5, r4, #1
   11660:	b	11624 <__mempcpy_chk@plt+0x548>
   11664:	mov	r4, r5
   11668:	ldrb	r0, [r4, #1]!
   1166c:	cmp	r0, #113	; 0x71
   11670:	beq	116d0 <__mempcpy_chk@plt+0x5f4>
   11674:	cmp	r0, #98	; 0x62
   11678:	beq	11690 <__mempcpy_chk@plt+0x5b4>
   1167c:	cmp	r0, #37	; 0x25
   11680:	bne	116fc <__mempcpy_chk@plt+0x620>
   11684:	mov	r0, #37	; 0x25
   11688:	bl	110d0 <putchar_unlocked@plt>
   1168c:	b	1165c <__mempcpy_chk@plt+0x580>
   11690:	cmp	sl, #1
   11694:	blt	1165c <__mempcpy_chk@plt+0x580>
   11698:	ldr	r5, [r8]
   1169c:	ldrb	r0, [r5]
   116a0:	cmp	r0, #92	; 0x5c
   116a4:	beq	116b8 <__mempcpy_chk@plt+0x5dc>
   116a8:	cmp	r0, #0
   116ac:	beq	1180c <__mempcpy_chk@plt+0x730>
   116b0:	bl	110d0 <putchar_unlocked@plt>
   116b4:	b	116c8 <__mempcpy_chk@plt+0x5ec>
   116b8:	mov	r0, r5
   116bc:	mov	r1, #1
   116c0:	bl	12048 <__mempcpy_chk@plt+0xf6c>
   116c4:	add	r5, r5, r0
   116c8:	add	r5, r5, #1
   116cc:	b	1169c <__mempcpy_chk@plt+0x5c0>
   116d0:	cmp	sl, #1
   116d4:	blt	1165c <__mempcpy_chk@plt+0x580>
   116d8:	ldr	r1, [r8], #4
   116dc:	mov	r0, #3
   116e0:	bl	13c7c <__mempcpy_chk@plt+0x2ba0>
   116e4:	movw	r1, #29004	; 0x714c
   116e8:	movt	r1, #2
   116ec:	ldr	r1, [r1]
   116f0:	bl	10e54 <fputs_unlocked@plt>
   116f4:	sub	sl, sl, #1
   116f8:	b	1165c <__mempcpy_chk@plt+0x580>
   116fc:	add	r0, sp, #56	; 0x38
   11700:	mov	r1, #0
   11704:	mov	r2, #256	; 0x100
   11708:	str	sl, [sp, #52]	; 0x34
   1170c:	mov	r6, #0
   11710:	bl	11004 <memset@plt>
   11714:	mov	sl, #1
   11718:	movw	r0, #257	; 0x101
   1171c:	movw	r1, #257	; 0x101
   11720:	strb	sl, [sp, #176]	; 0xb0
   11724:	strb	sl, [sp, #144]	; 0x90
   11728:	strb	sl, [sp, #173]	; 0xad
   1172c:	strb	sl, [sp, #171]	; 0xab
   11730:	strb	sl, [sp, #167]	; 0xa7
   11734:	strb	sl, [sp, #161]	; 0xa1
   11738:	strb	sl, [sp, #127]	; 0x7f
   1173c:	strh	r0, [sp, #125]	; 0x7d
   11740:	ldr	r0, [sp, #16]
   11744:	movt	r1, #257	; 0x101
   11748:	strb	sl, [sp, #153]	; 0x99
   1174c:	strb	sl, [sp, #121]	; 0x79
   11750:	str	r1, [r0]
   11754:	strb	sl, [r0, #4]
   11758:	ldrb	r0, [r5, sl]
   1175c:	sub	r1, r0, #32
   11760:	cmp	r1, #16
   11764:	bhi	117c8 <__mempcpy_chk@plt+0x6ec>
   11768:	add	r2, pc, #0
   1176c:	ldr	pc, [r2, r1, lsl #2]
   11770:	andeq	r1, r1, r0, lsl #16
   11774:	andeq	r1, r1, r8, lsl r8
   11778:	andeq	r1, r1, r8, lsl r8
   1177c:			; <UNDEFINED> instruction: 0x000117b4
   11780:	andeq	r1, r1, r8, lsl r8
   11784:	andeq	r1, r1, r8, lsl r8
   11788:	andeq	r1, r1, r8, lsl r8
   1178c:	ldrdeq	r1, [r1], -r0
   11790:	andeq	r1, r1, r8, lsl r8
   11794:	andeq	r1, r1, r8, lsl r8
   11798:	andeq	r1, r1, r4, asr r8
   1179c:	andeq	r1, r1, r0, lsl #16
   117a0:	andeq	r1, r1, r8, lsl r8
   117a4:	andeq	r1, r1, r0, lsl #16
   117a8:	andeq	r1, r1, r8, lsl r8
   117ac:	andeq	r1, r1, r8, lsl r8
   117b0:	strdeq	r1, [r1], -r8
   117b4:	strb	r9, [sp, #171]	; 0xab
   117b8:	strb	r9, [sp, #173]	; 0xad
   117bc:	strb	r9, [sp, #161]	; 0xa1
   117c0:	strh	r9, [sp, #155]	; 0x9b
   117c4:	b	11800 <__mempcpy_chk@plt+0x724>
   117c8:	cmp	r0, #73	; 0x49
   117cc:	bne	11818 <__mempcpy_chk@plt+0x73c>
   117d0:	strb	r9, [sp, #176]	; 0xb0
   117d4:	strb	r9, [sp, #144]	; 0x90
   117d8:	strb	r9, [sp, #171]	; 0xab
   117dc:	strb	r9, [sp, #167]	; 0xa7
   117e0:	strb	r9, [sp, #157]	; 0x9d
   117e4:	strb	r9, [sp, #125]	; 0x7d
   117e8:	strb	r9, [sp, #155]	; 0x9b
   117ec:	strb	r9, [sp, #153]	; 0x99
   117f0:	strb	r9, [sp, #121]	; 0x79
   117f4:	b	11800 <__mempcpy_chk@plt+0x724>
   117f8:	strb	r9, [sp, #155]	; 0x9b
   117fc:	strb	r9, [sp, #171]	; 0xab
   11800:	add	r6, r6, #1
   11804:	add	sl, sl, #1
   11808:	b	11758 <__mempcpy_chk@plt+0x67c>
   1180c:	sub	sl, sl, #1
   11810:	add	r8, r8, #4
   11814:	b	1165c <__mempcpy_chk@plt+0x580>
   11818:	sub	r1, r0, #48	; 0x30
   1181c:	mov	r2, #0
   11820:	cmp	r1, #9
   11824:	str	r2, [sp, #36]	; 0x24
   11828:	bhi	11894 <__mempcpy_chk@plt+0x7b8>
   1182c:	add	r0, r5, r6
   11830:	add	r6, r6, #1
   11834:	ldrb	r0, [r0, #2]
   11838:	sub	r1, r0, #48	; 0x30
   1183c:	cmp	r1, #10
   11840:	bcc	1182c <__mempcpy_chk@plt+0x750>
   11844:	add	r1, r5, r6
   11848:	add	sl, r6, #1
   1184c:	add	r4, r1, #1
   11850:	b	11898 <__mempcpy_chk@plt+0x7bc>
   11854:	ldr	r0, [sp, #52]	; 0x34
   11858:	cmp	r0, #1
   1185c:	blt	118a4 <__mempcpy_chk@plt+0x7c8>
   11860:	ldr	r0, [r8]
   11864:	bl	11f88 <__mempcpy_chk@plt+0xeac>
   11868:	movw	r6, #4117	; 0x1015
   1186c:	str	r0, [sp, #28]
   11870:	adds	r0, r0, #-2147483648	; 0x80000000
   11874:	movt	r6, #4
   11878:	adcs	r0, r1, #0
   1187c:	bne	11ee4 <__mempcpy_chk@plt+0xe08>
   11880:	ldr	r0, [sp, #52]	; 0x34
   11884:	add	r8, r8, #4
   11888:	sub	r0, r0, #1
   1188c:	str	r0, [sp, #52]	; 0x34
   11890:	b	118b4 <__mempcpy_chk@plt+0x7d8>
   11894:	add	r4, r5, sl
   11898:	movw	r6, #4117	; 0x1015
   1189c:	movt	r6, #4
   118a0:	b	118cc <__mempcpy_chk@plt+0x7f0>
   118a4:	movw	r6, #4117	; 0x1015
   118a8:	mov	r0, #0
   118ac:	str	r0, [sp, #28]
   118b0:	movt	r6, #4
   118b4:	add	r0, r5, sl
   118b8:	mov	r1, #1
   118bc:	add	sl, sl, #1
   118c0:	add	r4, r0, #1
   118c4:	ldrb	r0, [r0, #1]
   118c8:	str	r1, [sp, #36]	; 0x24
   118cc:	mov	r1, #0
   118d0:	cmp	r0, #46	; 0x2e
   118d4:	str	r1, [sp, #40]	; 0x28
   118d8:	bne	11994 <__mempcpy_chk@plt+0x8b8>
   118dc:	strb	r9, [sp, #155]	; 0x9b
   118e0:	mov	r0, r4
   118e4:	ldrb	r1, [r0, #1]!
   118e8:	cmp	r1, #42	; 0x2a
   118ec:	bne	11930 <__mempcpy_chk@plt+0x854>
   118f0:	mov	r0, #1
   118f4:	add	sl, sl, #2
   118f8:	add	r4, r4, #2
   118fc:	str	r0, [sp, #40]	; 0x28
   11900:	ldr	r0, [sp, #52]	; 0x34
   11904:	cmp	r0, #1
   11908:	blt	1196c <__mempcpy_chk@plt+0x890>
   1190c:	ldr	r0, [r8]
   11910:	bl	11f88 <__mempcpy_chk@plt+0xeac>
   11914:	cmp	r1, #0
   11918:	bmi	1197c <__mempcpy_chk@plt+0x8a0>
   1191c:	str	r0, [sp, #20]
   11920:	subs	r0, r0, #-2147483648	; 0x80000000
   11924:	sbcs	r0, r1, #0
   11928:	blt	11984 <__mempcpy_chk@plt+0x8a8>
   1192c:	b	11ef0 <__mempcpy_chk@plt+0xe14>
   11930:	sub	r1, r1, #48	; 0x30
   11934:	add	sl, sl, #1
   11938:	str	r8, [sp, #48]	; 0x30
   1193c:	cmp	r1, #9
   11940:	bhi	11964 <__mempcpy_chk@plt+0x888>
   11944:	add	r0, r4, #2
   11948:	ldrb	r1, [r0], #1
   1194c:	add	sl, sl, #1
   11950:	sub	r1, r1, #48	; 0x30
   11954:	cmp	r1, #10
   11958:	bcc	11948 <__mempcpy_chk@plt+0x86c>
   1195c:	sub	r4, r0, #1
   11960:	b	11998 <__mempcpy_chk@plt+0x8bc>
   11964:	mov	r4, r0
   11968:	b	11998 <__mempcpy_chk@plt+0x8bc>
   1196c:	mov	r0, #0
   11970:	str	r8, [sp, #48]	; 0x30
   11974:	str	r0, [sp, #20]
   11978:	b	11998 <__mempcpy_chk@plt+0x8bc>
   1197c:	mvn	r0, #0
   11980:	str	r0, [sp, #20]
   11984:	ldr	r0, [sp, #52]	; 0x34
   11988:	add	r8, r8, #4
   1198c:	sub	r0, r0, #1
   11990:	str	r0, [sp, #52]	; 0x34
   11994:	str	r8, [sp, #48]	; 0x30
   11998:	ldrb	r8, [r4]
   1199c:	sub	r0, r8, #104	; 0x68
   119a0:	cmp	r0, #18
   119a4:	bhi	119b8 <__mempcpy_chk@plt+0x8dc>
   119a8:	tst	r6, r7, lsl r0
   119ac:	beq	119b8 <__mempcpy_chk@plt+0x8dc>
   119b0:	add	r4, r4, #1
   119b4:	b	11998 <__mempcpy_chk@plt+0x8bc>
   119b8:	cmp	r8, #76	; 0x4c
   119bc:	beq	119b0 <__mempcpy_chk@plt+0x8d4>
   119c0:	add	r0, sp, #56	; 0x38
   119c4:	ldrb	r0, [r0, r8]
   119c8:	cmp	r0, #0
   119cc:	beq	11f24 <__mempcpy_chk@plt+0xe48>
   119d0:	ldr	r0, [sp, #52]	; 0x34
   119d4:	cmp	r0, #1
   119d8:	blt	119f8 <__mempcpy_chk@plt+0x91c>
   119dc:	sub	r0, r0, #1
   119e0:	str	r0, [sp, #52]	; 0x34
   119e4:	ldr	r0, [sp, #48]	; 0x30
   119e8:	ldr	r1, [r0], #4
   119ec:	str	r0, [sp, #48]	; 0x30
   119f0:	str	r1, [sp, #32]
   119f4:	b	11a04 <__mempcpy_chk@plt+0x928>
   119f8:	movw	r0, #22060	; 0x562c
   119fc:	movt	r0, #1
   11a00:	str	r0, [sp, #32]
   11a04:	mov	r1, #1
   11a08:	mov	r6, #2
   11a0c:	cmp	r8, #96	; 0x60
   11a10:	ble	11a48 <__mempcpy_chk@plt+0x96c>
   11a14:	sub	r0, r8, #97	; 0x61
   11a18:	cmp	r0, #23
   11a1c:	bhi	11a6c <__mempcpy_chk@plt+0x990>
   11a20:	movw	r2, #16648	; 0x4108
   11a24:	movw	r7, #24076	; 0x5e0c
   11a28:	movt	r2, #144	; 0x90
   11a2c:	movt	r7, #1
   11a30:	tst	r2, r1, lsl r0
   11a34:	bne	11a84 <__mempcpy_chk@plt+0x9a8>
   11a38:	mov	r2, #113	; 0x71
   11a3c:	tst	r2, r1, lsl r0
   11a40:	bne	11a78 <__mempcpy_chk@plt+0x99c>
   11a44:	b	11a6c <__mempcpy_chk@plt+0x990>
   11a48:	sub	r0, r8, #69	; 0x45
   11a4c:	cmp	r0, #3
   11a50:	bcc	11a78 <__mempcpy_chk@plt+0x99c>
   11a54:	cmp	r8, #65	; 0x41
   11a58:	beq	11a78 <__mempcpy_chk@plt+0x99c>
   11a5c:	movw	r7, #24076	; 0x5e0c
   11a60:	cmp	r8, #88	; 0x58
   11a64:	movt	r7, #1
   11a68:	beq	11a84 <__mempcpy_chk@plt+0x9a8>
   11a6c:	mov	r6, #0
   11a70:	mov	r7, r5
   11a74:	b	11a84 <__mempcpy_chk@plt+0x9a8>
   11a78:	movw	r7, #24080	; 0x5e10
   11a7c:	mov	r6, #1
   11a80:	movt	r7, #1
   11a84:	add	r0, sl, r6
   11a88:	add	r0, r0, #2
   11a8c:	bl	149c0 <__mempcpy_chk@plt+0x38e4>
   11a90:	mov	r1, r5
   11a94:	mov	r2, sl
   11a98:	mvn	r3, #0
   11a9c:	str	r0, [sp, #44]	; 0x2c
   11aa0:	bl	110dc <__mempcpy_chk@plt>
   11aa4:	mov	r1, r7
   11aa8:	mov	r2, r6
   11aac:	mvn	r3, #0
   11ab0:	bl	110dc <__mempcpy_chk@plt>
   11ab4:	cmp	r8, #96	; 0x60
   11ab8:	strb	r9, [r0, #1]
   11abc:	strb	r8, [r0]
   11ac0:	ble	11b70 <__mempcpy_chk@plt+0xa94>
   11ac4:	ldr	sl, [sp, #52]	; 0x34
   11ac8:	sub	r0, r8, #97	; 0x61
   11acc:	mov	r7, #1
   11ad0:	cmp	r0, #23
   11ad4:	bhi	11e10 <__mempcpy_chk@plt+0xd34>
   11ad8:	add	r1, pc, #0
   11adc:	ldr	pc, [r1, r0, lsl #2]
   11ae0:	andeq	r1, r1, r0, lsl ip
   11ae4:	andeq	r1, r1, r0, lsl lr
   11ae8:	andeq	r1, r1, ip, lsr #27
   11aec:	andeq	r1, r1, r0, asr #22
   11af0:	andeq	r1, r1, r0, lsl ip
   11af4:	andeq	r1, r1, r0, lsl ip
   11af8:	andeq	r1, r1, r0, lsl ip
   11afc:	andeq	r1, r1, r0, lsl lr
   11b00:	andeq	r1, r1, r0, asr #22
   11b04:	andeq	r1, r1, r0, lsl lr
   11b08:	andeq	r1, r1, r0, lsl lr
   11b0c:	andeq	r1, r1, r0, lsl lr
   11b10:	andeq	r1, r1, r0, lsl lr
   11b14:	andeq	r1, r1, r0, lsl lr
   11b18:	muleq	r1, r4, fp
   11b1c:	andeq	r1, r1, r0, lsl lr
   11b20:	andeq	r1, r1, r0, lsl lr
   11b24:	andeq	r1, r1, r0, lsl lr
   11b28:	andeq	r1, r1, r0, lsl #27
   11b2c:	andeq	r1, r1, r0, lsl lr
   11b30:	muleq	r1, r4, fp
   11b34:	andeq	r1, r1, r0, lsl lr
   11b38:	andeq	r1, r1, r0, lsl lr
   11b3c:	muleq	r1, r4, fp
   11b40:	ldr	r0, [sp, #32]
   11b44:	bl	11f88 <__mempcpy_chk@plt+0xeac>
   11b48:	mov	r2, r0
   11b4c:	ldr	r0, [sp, #36]	; 0x24
   11b50:	mov	r3, r1
   11b54:	cmp	r0, #0
   11b58:	beq	11dcc <__mempcpy_chk@plt+0xcf0>
   11b5c:	ldr	r0, [sp, #40]	; 0x28
   11b60:	cmp	r0, #0
   11b64:	beq	11d70 <__mempcpy_chk@plt+0xc94>
   11b68:	stm	sp, {r2, r3}
   11b6c:	b	11ccc <__mempcpy_chk@plt+0xbf0>
   11b70:	ldr	sl, [sp, #52]	; 0x34
   11b74:	sub	r0, r8, #69	; 0x45
   11b78:	mov	r7, #1
   11b7c:	cmp	r0, #3
   11b80:	bcc	11c10 <__mempcpy_chk@plt+0xb34>
   11b84:	cmp	r8, #65	; 0x41
   11b88:	beq	11c10 <__mempcpy_chk@plt+0xb34>
   11b8c:	cmp	r8, #88	; 0x58
   11b90:	bne	11e10 <__mempcpy_chk@plt+0xd34>
   11b94:	ldr	r6, [sp, #32]
   11b98:	ldrb	r0, [r6]
   11b9c:	cmp	r0, #39	; 0x27
   11ba0:	cmpne	r0, #34	; 0x22
   11ba4:	bne	11cf8 <__mempcpy_chk@plt+0xc1c>
   11ba8:	ldrb	r5, [r6, #1]
   11bac:	cmp	r5, #0
   11bb0:	beq	11cf8 <__mempcpy_chk@plt+0xc1c>
   11bb4:	ldrb	r0, [r6, #2]!
   11bb8:	mov	r8, #0
   11bbc:	cmp	r0, #0
   11bc0:	beq	11d24 <__mempcpy_chk@plt+0xc48>
   11bc4:	movw	r0, #29013	; 0x7155
   11bc8:	mov	sl, r6
   11bcc:	ldr	r6, [sp, #36]	; 0x24
   11bd0:	movt	r0, #2
   11bd4:	ldrb	r0, [r0]
   11bd8:	cmp	r0, #0
   11bdc:	bne	11d28 <__mempcpy_chk@plt+0xc4c>
   11be0:	movw	r1, #23939	; 0x5d83
   11be4:	mov	r0, #0
   11be8:	mov	r2, #5
   11bec:	mov	r8, #0
   11bf0:	movt	r1, #1
   11bf4:	bl	10ee4 <dcgettext@plt>
   11bf8:	mov	r2, r0
   11bfc:	mov	r0, #0
   11c00:	mov	r1, #0
   11c04:	mov	r3, sl
   11c08:	bl	10f5c <error@plt>
   11c0c:	b	11d28 <__mempcpy_chk@plt+0xc4c>
   11c10:	ldr	r6, [sp, #32]
   11c14:	ldrb	r0, [r6]
   11c18:	cmp	r0, #39	; 0x27
   11c1c:	cmpne	r0, #34	; 0x22
   11c20:	bne	11c8c <__mempcpy_chk@plt+0xbb0>
   11c24:	ldrb	r0, [r6, #1]
   11c28:	cmp	r0, #0
   11c2c:	beq	11c8c <__mempcpy_chk@plt+0xbb0>
   11c30:	vmov	s0, r0
   11c34:	vcvt.f64.u32	d8, s0
   11c38:	ldrb	r0, [r6, #2]!
   11c3c:	cmp	r0, #0
   11c40:	beq	11cb0 <__mempcpy_chk@plt+0xbd4>
   11c44:	movw	r0, #29013	; 0x7155
   11c48:	ldr	r5, [sp, #36]	; 0x24
   11c4c:	ldr	r8, [sp, #40]	; 0x28
   11c50:	movt	r0, #2
   11c54:	ldrb	r0, [r0]
   11c58:	cmp	r0, #0
   11c5c:	bne	11cb8 <__mempcpy_chk@plt+0xbdc>
   11c60:	movw	r1, #23939	; 0x5d83
   11c64:	mov	r0, #0
   11c68:	mov	r2, #5
   11c6c:	movt	r1, #1
   11c70:	bl	10ee4 <dcgettext@plt>
   11c74:	mov	r2, r0
   11c78:	mov	r0, #0
   11c7c:	mov	r1, #0
   11c80:	mov	r3, r6
   11c84:	bl	10f5c <error@plt>
   11c88:	b	11cb8 <__mempcpy_chk@plt+0xbdc>
   11c8c:	bl	10fec <__errno_location@plt>
   11c90:	str	r9, [r0]
   11c94:	mov	r0, r6
   11c98:	sub	r1, fp, #48	; 0x30
   11c9c:	bl	12414 <__mempcpy_chk@plt+0x1338>
   11ca0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11ca4:	mov	r0, r6
   11ca8:	vmov.f64	d8, d0
   11cac:	bl	12370 <__mempcpy_chk@plt+0x1294>
   11cb0:	ldr	r5, [sp, #36]	; 0x24
   11cb4:	ldr	r8, [sp, #40]	; 0x28
   11cb8:	cmp	r5, #0
   11cbc:	beq	11ce0 <__mempcpy_chk@plt+0xc04>
   11cc0:	cmp	r8, #0
   11cc4:	beq	11d6c <__mempcpy_chk@plt+0xc90>
   11cc8:	vstr	d8, [sp]
   11ccc:	ldr	r0, [sp, #44]	; 0x2c
   11cd0:	ldr	r1, [sp, #28]
   11cd4:	ldr	r2, [sp, #20]
   11cd8:	bl	14e30 <__mempcpy_chk@plt+0x3d54>
   11cdc:	b	11e10 <__mempcpy_chk@plt+0xd34>
   11ce0:	vmov	r2, r3, d8
   11ce4:	cmp	r8, #0
   11ce8:	beq	11dd8 <__mempcpy_chk@plt+0xcfc>
   11cec:	ldr	r0, [sp, #44]	; 0x2c
   11cf0:	ldr	r1, [sp, #20]
   11cf4:	b	11d78 <__mempcpy_chk@plt+0xc9c>
   11cf8:	bl	10fec <__errno_location@plt>
   11cfc:	str	r9, [r0]
   11d00:	mov	r0, r6
   11d04:	sub	r1, fp, #48	; 0x30
   11d08:	mov	r2, #0
   11d0c:	bl	11028 <strtoumax@plt>
   11d10:	mov	r8, r1
   11d14:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11d18:	mov	r5, r0
   11d1c:	mov	r0, r6
   11d20:	bl	12370 <__mempcpy_chk@plt+0x1294>
   11d24:	ldr	r6, [sp, #36]	; 0x24
   11d28:	cmp	r6, #0
   11d2c:	beq	11d54 <__mempcpy_chk@plt+0xc78>
   11d30:	ldr	r0, [sp, #40]	; 0x28
   11d34:	cmp	r0, #0
   11d38:	beq	11de4 <__mempcpy_chk@plt+0xd08>
   11d3c:	ldr	r0, [sp, #44]	; 0x2c
   11d40:	ldr	r1, [sp, #28]
   11d44:	ldr	r2, [sp, #20]
   11d48:	stm	sp, {r5, r8}
   11d4c:	bl	14e30 <__mempcpy_chk@plt+0x3d54>
   11d50:	b	11e0c <__mempcpy_chk@plt+0xd30>
   11d54:	ldr	r0, [sp, #40]	; 0x28
   11d58:	cmp	r0, #0
   11d5c:	beq	11dfc <__mempcpy_chk@plt+0xd20>
   11d60:	ldr	r0, [sp, #44]	; 0x2c
   11d64:	ldr	r1, [sp, #20]
   11d68:	b	11dec <__mempcpy_chk@plt+0xd10>
   11d6c:	vmov	r2, r3, d8
   11d70:	ldr	r0, [sp, #44]	; 0x2c
   11d74:	ldr	r1, [sp, #28]
   11d78:	bl	14e30 <__mempcpy_chk@plt+0x3d54>
   11d7c:	b	11e10 <__mempcpy_chk@plt+0xd34>
   11d80:	ldr	r0, [sp, #36]	; 0x24
   11d84:	cmp	r0, #0
   11d88:	beq	11e20 <__mempcpy_chk@plt+0xd44>
   11d8c:	ldr	r0, [sp, #40]	; 0x28
   11d90:	ldr	r3, [sp, #32]
   11d94:	cmp	r0, #0
   11d98:	beq	11e4c <__mempcpy_chk@plt+0xd70>
   11d9c:	ldr	r0, [sp, #44]	; 0x2c
   11da0:	ldr	r1, [sp, #28]
   11da4:	ldr	r2, [sp, #20]
   11da8:	b	11d78 <__mempcpy_chk@plt+0xc9c>
   11dac:	ldr	r0, [sp, #32]
   11db0:	ldrb	r2, [r0]
   11db4:	ldr	r0, [sp, #36]	; 0x24
   11db8:	cmp	r0, #0
   11dbc:	beq	11e3c <__mempcpy_chk@plt+0xd60>
   11dc0:	ldr	r0, [sp, #44]	; 0x2c
   11dc4:	ldr	r1, [sp, #28]
   11dc8:	b	11cd8 <__mempcpy_chk@plt+0xbfc>
   11dcc:	ldr	r0, [sp, #40]	; 0x28
   11dd0:	cmp	r0, #0
   11dd4:	bne	11cec <__mempcpy_chk@plt+0xc10>
   11dd8:	ldr	r0, [sp, #44]	; 0x2c
   11ddc:	bl	14e30 <__mempcpy_chk@plt+0x3d54>
   11de0:	b	11e10 <__mempcpy_chk@plt+0xd34>
   11de4:	ldr	r0, [sp, #44]	; 0x2c
   11de8:	ldr	r1, [sp, #28]
   11dec:	mov	r2, r5
   11df0:	mov	r3, r8
   11df4:	bl	14e30 <__mempcpy_chk@plt+0x3d54>
   11df8:	b	11e0c <__mempcpy_chk@plt+0xd30>
   11dfc:	ldr	r0, [sp, #44]	; 0x2c
   11e00:	mov	r2, r5
   11e04:	mov	r3, r8
   11e08:	bl	14e30 <__mempcpy_chk@plt+0x3d54>
   11e0c:	ldr	sl, [sp, #52]	; 0x34
   11e10:	ldr	r0, [sp, #44]	; 0x2c
   11e14:	bl	125a0 <__mempcpy_chk@plt+0x14c4>
   11e18:	ldr	r8, [sp, #48]	; 0x30
   11e1c:	b	1165c <__mempcpy_chk@plt+0x580>
   11e20:	ldr	r0, [sp, #40]	; 0x28
   11e24:	ldr	r2, [sp, #32]
   11e28:	cmp	r0, #0
   11e2c:	beq	11e3c <__mempcpy_chk@plt+0xd60>
   11e30:	ldr	r0, [sp, #44]	; 0x2c
   11e34:	ldr	r1, [sp, #20]
   11e38:	b	11cd8 <__mempcpy_chk@plt+0xbfc>
   11e3c:	ldr	r0, [sp, #44]	; 0x2c
   11e40:	mov	r1, r2
   11e44:	bl	14e30 <__mempcpy_chk@plt+0x3d54>
   11e48:	b	11e10 <__mempcpy_chk@plt+0xd34>
   11e4c:	ldr	r0, [sp, #44]	; 0x2c
   11e50:	ldr	r1, [sp, #28]
   11e54:	mov	r2, r3
   11e58:	b	11cd8 <__mempcpy_chk@plt+0xbfc>
   11e5c:	ldr	r0, [sp, #12]
   11e60:	ldr	r1, [sp, #24]
   11e64:	cmp	sl, #1
   11e68:	sub	r0, r0, sl
   11e6c:	add	r1, r1, r0, lsl #2
   11e70:	str	r1, [sp, #24]
   11e74:	blt	11e84 <__mempcpy_chk@plt+0xda8>
   11e78:	cmp	r0, #0
   11e7c:	mov	r0, sl
   11e80:	bgt	11608 <__mempcpy_chk@plt+0x52c>
   11e84:	cmp	sl, #1
   11e88:	blt	11ec4 <__mempcpy_chk@plt+0xde8>
   11e8c:	movw	r1, #23490	; 0x5bc2
   11e90:	mov	r0, #0
   11e94:	mov	r2, #5
   11e98:	movt	r1, #1
   11e9c:	bl	10ee4 <dcgettext@plt>
   11ea0:	mov	r5, r0
   11ea4:	ldr	r0, [sp, #24]
   11ea8:	ldr	r0, [r0]
   11eac:	bl	13fb4 <__mempcpy_chk@plt+0x2ed8>
   11eb0:	mov	r3, r0
   11eb4:	mov	r0, #0
   11eb8:	mov	r1, #0
   11ebc:	mov	r2, r5
   11ec0:	bl	10f5c <error@plt>
   11ec4:	movw	r0, #29012	; 0x7154
   11ec8:	movt	r0, #2
   11ecc:	ldrb	r4, [r0]
   11ed0:	mov	r0, r4
   11ed4:	sub	sp, fp, #40	; 0x28
   11ed8:	vpop	{d8}
   11edc:	add	sp, sp, #4
   11ee0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ee4:	movw	r1, #23854	; 0x5d2e
   11ee8:	movt	r1, #1
   11eec:	b	11ef8 <__mempcpy_chk@plt+0xe1c>
   11ef0:	movw	r1, #23878	; 0x5d46
   11ef4:	movt	r1, #1
   11ef8:	mov	r0, #0
   11efc:	mov	r2, #5
   11f00:	bl	10ee4 <dcgettext@plt>
   11f04:	mov	r4, r0
   11f08:	ldr	r0, [r8]
   11f0c:	bl	13fb4 <__mempcpy_chk@plt+0x2ed8>
   11f10:	mov	r3, r0
   11f14:	mov	r0, #1
   11f18:	mov	r1, #0
   11f1c:	mov	r2, r4
   11f20:	bl	10f5c <error@plt>
   11f24:	movw	r1, #23900	; 0x5d5c
   11f28:	mov	r0, #0
   11f2c:	mov	r2, #5
   11f30:	movt	r1, #1
   11f34:	bl	10ee4 <dcgettext@plt>
   11f38:	mov	r2, r0
   11f3c:	sub	r0, r4, r5
   11f40:	mov	r1, #0
   11f44:	str	r5, [sp]
   11f48:	add	r3, r0, #1
   11f4c:	mov	r0, #1
   11f50:	bl	10f5c <error@plt>
   11f54:	movw	r1, #23474	; 0x5bb2
   11f58:	mov	r0, #0
   11f5c:	mov	r2, #5
   11f60:	movt	r1, #1
   11f64:	bl	10ee4 <dcgettext@plt>
   11f68:	mov	r2, r0
   11f6c:	mov	r0, #0
   11f70:	mov	r1, #0
   11f74:	bl	10f5c <error@plt>
   11f78:	mov	r0, #1
   11f7c:	bl	111d8 <__mempcpy_chk@plt+0xfc>
   11f80:	mov	r0, #0
   11f84:	bl	111d8 <__mempcpy_chk@plt+0xfc>
   11f88:	push	{r4, r5, r6, sl, fp, lr}
   11f8c:	add	fp, sp, #16
   11f90:	sub	sp, sp, #8
   11f94:	mov	r4, r0
   11f98:	ldrb	r0, [r0]
   11f9c:	cmp	r0, #39	; 0x27
   11fa0:	cmpne	r0, #34	; 0x22
   11fa4:	bne	12008 <__mempcpy_chk@plt+0xf2c>
   11fa8:	ldrb	r5, [r4, #1]
   11fac:	cmp	r5, #0
   11fb0:	beq	12008 <__mempcpy_chk@plt+0xf2c>
   11fb4:	ldrb	r0, [r4, #2]!
   11fb8:	mov	r6, #0
   11fbc:	cmp	r0, #0
   11fc0:	beq	12038 <__mempcpy_chk@plt+0xf5c>
   11fc4:	movw	r0, #29013	; 0x7155
   11fc8:	movt	r0, #2
   11fcc:	ldrb	r0, [r0]
   11fd0:	cmp	r0, #0
   11fd4:	bne	12038 <__mempcpy_chk@plt+0xf5c>
   11fd8:	movw	r1, #23939	; 0x5d83
   11fdc:	mov	r0, #0
   11fe0:	mov	r2, #5
   11fe4:	mov	r6, #0
   11fe8:	movt	r1, #1
   11fec:	bl	10ee4 <dcgettext@plt>
   11ff0:	mov	r2, r0
   11ff4:	mov	r0, #0
   11ff8:	mov	r1, #0
   11ffc:	mov	r3, r4
   12000:	bl	10f5c <error@plt>
   12004:	b	12038 <__mempcpy_chk@plt+0xf5c>
   12008:	bl	10fec <__errno_location@plt>
   1200c:	mov	r1, #0
   12010:	mov	r2, #0
   12014:	str	r1, [r0]
   12018:	add	r1, sp, #4
   1201c:	mov	r0, r4
   12020:	bl	1104c <strtoimax@plt>
   12024:	mov	r6, r1
   12028:	ldr	r1, [sp, #4]
   1202c:	mov	r5, r0
   12030:	mov	r0, r4
   12034:	bl	12370 <__mempcpy_chk@plt+0x1294>
   12038:	mov	r0, r5
   1203c:	mov	r1, r6
   12040:	sub	sp, fp, #16
   12044:	pop	{r4, r5, r6, sl, fp, pc}
   12048:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1204c:	add	fp, sp, #24
   12050:	sub	sp, sp, #8
   12054:	mov	r7, r0
   12058:	mov	r8, r0
   1205c:	ldrb	r5, [r7, #1]!
   12060:	cmp	r5, #120	; 0x78
   12064:	bne	120d4 <__mempcpy_chk@plt+0xff8>
   12068:	add	r4, r8, #2
   1206c:	bl	10fbc <__ctype_b_loc@plt>
   12070:	ldr	r2, [r0]
   12074:	mov	r1, #0
   12078:	mov	r0, #0
   1207c:	ldrb	r3, [r4, -r1]
   12080:	add	r7, r2, r3, lsl #1
   12084:	ldrb	r7, [r7, #1]
   12088:	tst	r7, #16
   1208c:	beq	12128 <__mempcpy_chk@plt+0x104c>
   12090:	sub	r7, r3, #97	; 0x61
   12094:	lsl	r0, r0, #4
   12098:	uxtb	r6, r7
   1209c:	mvn	r7, #86	; 0x56
   120a0:	cmp	r6, #6
   120a4:	bcc	120bc <__mempcpy_chk@plt+0xfe0>
   120a8:	sub	r7, r3, #65	; 0x41
   120ac:	uxtb	r7, r7
   120b0:	cmp	r7, #6
   120b4:	mvn	r7, #47	; 0x2f
   120b8:	mvncc	r7, #54	; 0x36
   120bc:	add	r3, r7, r3
   120c0:	sub	r1, r1, #1
   120c4:	add	r0, r3, r0
   120c8:	cmn	r1, #2
   120cc:	bne	1207c <__mempcpy_chk@plt+0xfa0>
   120d0:	b	12130 <__mempcpy_chk@plt+0x1054>
   120d4:	and	r0, r5, #248	; 0xf8
   120d8:	cmp	r0, #48	; 0x30
   120dc:	bne	12148 <__mempcpy_chk@plt+0x106c>
   120e0:	sub	r0, r5, #48	; 0x30
   120e4:	mov	r2, #1
   120e8:	clz	r0, r0
   120ec:	lsr	r0, r0, #5
   120f0:	and	r0, r0, r1
   120f4:	add	r1, r8, r0
   120f8:	mov	r0, #0
   120fc:	ldrb	r3, [r1, r2]
   12100:	and	r7, r3, #248	; 0xf8
   12104:	cmp	r7, #48	; 0x30
   12108:	bne	12120 <__mempcpy_chk@plt+0x1044>
   1210c:	add	r0, r3, r0, lsl #3
   12110:	add	r2, r2, #1
   12114:	cmp	r2, #4
   12118:	sub	r0, r0, #48	; 0x30
   1211c:	bne	120fc <__mempcpy_chk@plt+0x1020>
   12120:	add	r7, r1, r2
   12124:	b	12134 <__mempcpy_chk@plt+0x1058>
   12128:	cmp	r1, #0
   1212c:	beq	12344 <__mempcpy_chk@plt+0x1268>
   12130:	sub	r7, r4, r1
   12134:	bl	110d0 <putchar_unlocked@plt>
   12138:	mvn	r0, r8
   1213c:	add	r0, r7, r0
   12140:	sub	sp, fp, #24
   12144:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12148:	cmp	r5, #0
   1214c:	beq	122ac <__mempcpy_chk@plt+0x11d0>
   12150:	movw	r0, #24119	; 0x5e37
   12154:	mov	r1, r5
   12158:	mov	r2, #12
   1215c:	movt	r0, #1
   12160:	bl	11040 <memchr@plt>
   12164:	cmp	r0, #0
   12168:	beq	121e4 <__mempcpy_chk@plt+0x1108>
   1216c:	sub	r0, r5, #97	; 0x61
   12170:	add	r7, r8, #2
   12174:	cmp	r0, #21
   12178:	bhi	12304 <__mempcpy_chk@plt+0x1228>
   1217c:	add	r1, pc, #0
   12180:	ldr	pc, [r1, r0, lsl #2]
   12184:	ldrdeq	r2, [r1], -ip
   12188:	ldrdeq	r2, [r1], -r4
   1218c:	andeq	r2, r1, r8, ror #6
   12190:	andeq	r2, r1, r4, lsl #6
   12194:	andeq	r2, r1, ip, ror #5
   12198:	strdeq	r2, [r1], -r4
   1219c:	andeq	r2, r1, r4, lsl #6
   121a0:	andeq	r2, r1, r4, lsl #6
   121a4:	andeq	r2, r1, r4, lsl #6
   121a8:	andeq	r2, r1, r4, lsl #6
   121ac:	andeq	r2, r1, r4, lsl #6
   121b0:	andeq	r2, r1, r4, lsl #6
   121b4:	andeq	r2, r1, r4, lsl #6
   121b8:	strdeq	r2, [r1], -ip
   121bc:	andeq	r2, r1, r4, lsl #6
   121c0:	andeq	r2, r1, r4, lsl #6
   121c4:	andeq	r2, r1, r4, lsl #6
   121c8:	andeq	r2, r1, ip, asr #5
   121cc:	andeq	r2, r1, r4, lsl #6
   121d0:	ldrdeq	r2, [r1], -ip
   121d4:	andeq	r2, r1, r4, lsl #6
   121d8:	andeq	r2, r1, r4, ror #5
   121dc:	mov	r0, #7
   121e0:	b	12134 <__mempcpy_chk@plt+0x1058>
   121e4:	orr	r0, r5, #32
   121e8:	cmp	r0, #117	; 0x75
   121ec:	bne	122ac <__mempcpy_chk@plt+0x11d0>
   121f0:	cmp	r5, #117	; 0x75
   121f4:	mov	r9, #8
   121f8:	add	r4, r8, #2
   121fc:	movweq	r9, #4
   12200:	bl	10fbc <__ctype_b_loc@plt>
   12204:	ldr	r1, [r0]
   12208:	mov	r0, #0
   1220c:	mov	r6, #0
   12210:	ldrb	r2, [r4, -r0]
   12214:	add	r3, r1, r2, lsl #1
   12218:	ldrb	r3, [r3, #1]
   1221c:	tst	r3, #16
   12220:	beq	12344 <__mempcpy_chk@plt+0x1268>
   12224:	lsl	r3, r6, #4
   12228:	sub	r6, r2, #97	; 0x61
   1222c:	uxtb	r7, r6
   12230:	mvn	r6, #86	; 0x56
   12234:	cmp	r7, #6
   12238:	bcc	12250 <__mempcpy_chk@plt+0x1174>
   1223c:	sub	r7, r2, #65	; 0x41
   12240:	mvn	r6, #47	; 0x2f
   12244:	uxtb	r7, r7
   12248:	cmp	r7, #6
   1224c:	mvncc	r6, #54	; 0x36
   12250:	add	r2, r6, r2
   12254:	sub	r0, r0, #1
   12258:	add	r6, r2, r3
   1225c:	add	r2, r9, r0
   12260:	cmp	r2, #0
   12264:	bgt	12210 <__mempcpy_chk@plt+0x1134>
   12268:	cmp	r6, #159	; 0x9f
   1226c:	bhi	1227c <__mempcpy_chk@plt+0x11a0>
   12270:	cmp	r6, #36	; 0x24
   12274:	cmpne	r6, #96	; 0x60
   12278:	bne	1230c <__mempcpy_chk@plt+0x1230>
   1227c:	mov	r1, r6
   12280:	bfc	r1, #0, #11
   12284:	cmp	r1, #55296	; 0xd800
   12288:	beq	12314 <__mempcpy_chk@plt+0x1238>
   1228c:	sub	r7, r4, r0
   12290:	movw	r0, #29004	; 0x714c
   12294:	mov	r1, r6
   12298:	mov	r2, #0
   1229c:	movt	r0, #2
   122a0:	ldr	r0, [r0]
   122a4:	bl	1431c <__mempcpy_chk@plt+0x3240>
   122a8:	b	12138 <__mempcpy_chk@plt+0x105c>
   122ac:	mov	r0, #92	; 0x5c
   122b0:	bl	110d0 <putchar_unlocked@plt>
   122b4:	ldrb	r0, [r7]
   122b8:	cmp	r0, #0
   122bc:	beq	12138 <__mempcpy_chk@plt+0x105c>
   122c0:	bl	110d0 <putchar_unlocked@plt>
   122c4:	add	r7, r8, #2
   122c8:	b	12138 <__mempcpy_chk@plt+0x105c>
   122cc:	mov	r0, #13
   122d0:	b	12134 <__mempcpy_chk@plt+0x1058>
   122d4:	mov	r0, #8
   122d8:	b	12134 <__mempcpy_chk@plt+0x1058>
   122dc:	mov	r0, #9
   122e0:	b	12134 <__mempcpy_chk@plt+0x1058>
   122e4:	mov	r0, #11
   122e8:	b	12134 <__mempcpy_chk@plt+0x1058>
   122ec:	mov	r0, #27
   122f0:	b	12134 <__mempcpy_chk@plt+0x1058>
   122f4:	mov	r0, #12
   122f8:	b	12134 <__mempcpy_chk@plt+0x1058>
   122fc:	mov	r0, #10
   12300:	b	12134 <__mempcpy_chk@plt+0x1058>
   12304:	mov	r0, r5
   12308:	b	12134 <__mempcpy_chk@plt+0x1058>
   1230c:	cmp	r6, #64	; 0x40
   12310:	beq	1227c <__mempcpy_chk@plt+0x11a0>
   12314:	movw	r1, #24131	; 0x5e43
   12318:	mov	r0, #0
   1231c:	mov	r2, #5
   12320:	movt	r1, #1
   12324:	bl	10ee4 <dcgettext@plt>
   12328:	mov	r2, r0
   1232c:	mov	r0, #1
   12330:	mov	r1, #0
   12334:	mov	r3, r5
   12338:	str	r9, [sp]
   1233c:	str	r6, [sp, #4]
   12340:	bl	10f5c <error@plt>
   12344:	movw	r1, #24082	; 0x5e12
   12348:	mov	r0, #0
   1234c:	mov	r2, #5
   12350:	movt	r1, #1
   12354:	bl	10ee4 <dcgettext@plt>
   12358:	mov	r2, r0
   1235c:	mov	r0, #1
   12360:	mov	r1, #0
   12364:	bl	10f5c <error@plt>
   12368:	mov	r0, #0
   1236c:	bl	10fc8 <exit@plt>
   12370:	push	{r4, r5, r6, sl, fp, lr}
   12374:	add	fp, sp, #16
   12378:	mov	r5, r1
   1237c:	mov	r4, r0
   12380:	bl	10fec <__errno_location@plt>
   12384:	ldr	r6, [r0]
   12388:	cmp	r6, #0
   1238c:	beq	123b0 <__mempcpy_chk@plt+0x12d4>
   12390:	mov	r0, r4
   12394:	bl	13fb4 <__mempcpy_chk@plt+0x2ed8>
   12398:	movw	r2, #23875	; 0x5d43
   1239c:	mov	r3, r0
   123a0:	mov	r0, #0
   123a4:	mov	r1, r6
   123a8:	movt	r2, #1
   123ac:	b	123fc <__mempcpy_chk@plt+0x1320>
   123b0:	ldrb	r0, [r5]
   123b4:	cmp	r0, #0
   123b8:	beq	12410 <__mempcpy_chk@plt+0x1334>
   123bc:	movw	r0, #24012	; 0x5dcc
   123c0:	movw	r1, #24041	; 0x5de9
   123c4:	cmp	r4, r5
   123c8:	mov	r2, #5
   123cc:	movt	r0, #1
   123d0:	movt	r1, #1
   123d4:	moveq	r1, r0
   123d8:	mov	r0, #0
   123dc:	bl	10ee4 <dcgettext@plt>
   123e0:	mov	r5, r0
   123e4:	mov	r0, r4
   123e8:	bl	13fb4 <__mempcpy_chk@plt+0x2ed8>
   123ec:	mov	r3, r0
   123f0:	mov	r0, #0
   123f4:	mov	r1, #0
   123f8:	mov	r2, r5
   123fc:	bl	10f5c <error@plt>
   12400:	movw	r0, #29012	; 0x7154
   12404:	mov	r1, #1
   12408:	movt	r0, #2
   1240c:	strb	r1, [r0]
   12410:	pop	{r4, r5, r6, sl, fp, pc}
   12414:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12418:	add	fp, sp, #24
   1241c:	vpush	{d8}
   12420:	sub	sp, sp, #8
   12424:	mov	r4, r1
   12428:	add	r1, sp, #4
   1242c:	mov	r5, r0
   12430:	bl	10ecc <strtold@plt>
   12434:	ldr	r7, [sp, #4]
   12438:	vmov.f64	d8, d0
   1243c:	ldrb	r0, [r7]
   12440:	cmp	r0, #0
   12444:	beq	12480 <__mempcpy_chk@plt+0x13a4>
   12448:	bl	10fec <__errno_location@plt>
   1244c:	ldr	r8, [r0]
   12450:	mov	r6, r0
   12454:	mov	r1, sp
   12458:	mov	r0, r5
   1245c:	bl	15060 <__mempcpy_chk@plt+0x3f84>
   12460:	ldr	r0, [sp]
   12464:	cmp	r7, r0
   12468:	bcs	1247c <__mempcpy_chk@plt+0x13a0>
   1246c:	str	r0, [sp, #4]
   12470:	mov	r7, r0
   12474:	vmov.f64	d8, d0
   12478:	b	12480 <__mempcpy_chk@plt+0x13a4>
   1247c:	str	r8, [r6]
   12480:	cmp	r4, #0
   12484:	vmov.f64	d0, d8
   12488:	strne	r7, [r4]
   1248c:	sub	sp, fp, #32
   12490:	vpop	{d8}
   12494:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12498:	movw	r1, #29016	; 0x7158
   1249c:	movt	r1, #2
   124a0:	str	r0, [r1]
   124a4:	bx	lr
   124a8:	movw	r1, #29020	; 0x715c
   124ac:	movt	r1, #2
   124b0:	strb	r0, [r1]
   124b4:	bx	lr
   124b8:	push	{r4, r5, r6, sl, fp, lr}
   124bc:	add	fp, sp, #16
   124c0:	sub	sp, sp, #8
   124c4:	movw	r0, #29004	; 0x714c
   124c8:	movt	r0, #2
   124cc:	ldr	r0, [r0]
   124d0:	bl	1510c <__mempcpy_chk@plt+0x4030>
   124d4:	cmp	r0, #0
   124d8:	beq	12500 <__mempcpy_chk@plt+0x1424>
   124dc:	movw	r0, #29020	; 0x715c
   124e0:	movt	r0, #2
   124e4:	ldrb	r0, [r0]
   124e8:	cmp	r0, #0
   124ec:	beq	12520 <__mempcpy_chk@plt+0x1444>
   124f0:	bl	10fec <__errno_location@plt>
   124f4:	ldr	r0, [r0]
   124f8:	cmp	r0, #32
   124fc:	bne	12520 <__mempcpy_chk@plt+0x1444>
   12500:	movw	r0, #29000	; 0x7148
   12504:	movt	r0, #2
   12508:	ldr	r0, [r0]
   1250c:	bl	1510c <__mempcpy_chk@plt+0x4030>
   12510:	cmp	r0, #0
   12514:	subeq	sp, fp, #16
   12518:	popeq	{r4, r5, r6, sl, fp, pc}
   1251c:	b	12590 <__mempcpy_chk@plt+0x14b4>
   12520:	movw	r1, #24247	; 0x5eb7
   12524:	mov	r0, #0
   12528:	mov	r2, #5
   1252c:	movt	r1, #1
   12530:	bl	10ee4 <dcgettext@plt>
   12534:	mov	r4, r0
   12538:	movw	r0, #29016	; 0x7158
   1253c:	movt	r0, #2
   12540:	ldr	r6, [r0]
   12544:	bl	10fec <__errno_location@plt>
   12548:	ldr	r5, [r0]
   1254c:	cmp	r6, #0
   12550:	bne	1256c <__mempcpy_chk@plt+0x1490>
   12554:	movw	r2, #23875	; 0x5d43
   12558:	mov	r0, #0
   1255c:	mov	r1, r5
   12560:	mov	r3, r4
   12564:	movt	r2, #1
   12568:	b	1258c <__mempcpy_chk@plt+0x14b0>
   1256c:	mov	r0, r6
   12570:	bl	13d74 <__mempcpy_chk@plt+0x2c98>
   12574:	movw	r2, #24259	; 0x5ec3
   12578:	mov	r3, r0
   1257c:	str	r4, [sp]
   12580:	mov	r0, #0
   12584:	mov	r1, r5
   12588:	movt	r2, #1
   1258c:	bl	10f5c <error@plt>
   12590:	movw	r0, #28924	; 0x70fc
   12594:	movt	r0, #2
   12598:	ldr	r0, [r0]
   1259c:	bl	10ea8 <_exit@plt>
   125a0:	push	{r4, r5, r6, sl, fp, lr}
   125a4:	add	fp, sp, #16
   125a8:	mov	r4, r0
   125ac:	bl	10fec <__errno_location@plt>
   125b0:	ldr	r6, [r0]
   125b4:	mov	r5, r0
   125b8:	mov	r0, r4
   125bc:	bl	10e90 <free@plt>
   125c0:	str	r6, [r5]
   125c4:	pop	{r4, r5, r6, sl, fp, pc}
   125c8:	push	{r4, r5, fp, lr}
   125cc:	add	fp, sp, #8
   125d0:	cmp	r0, #0
   125d4:	beq	12668 <__mempcpy_chk@plt+0x158c>
   125d8:	mov	r1, #47	; 0x2f
   125dc:	mov	r4, r0
   125e0:	bl	1107c <strrchr@plt>
   125e4:	cmp	r0, #0
   125e8:	mov	r5, r4
   125ec:	addne	r5, r0, #1
   125f0:	sub	r0, r5, r4
   125f4:	cmp	r0, #7
   125f8:	blt	1264c <__mempcpy_chk@plt+0x1570>
   125fc:	movw	r1, #24322	; 0x5f02
   12600:	sub	r0, r5, #7
   12604:	mov	r2, #7
   12608:	movt	r1, #1
   1260c:	bl	110b8 <strncmp@plt>
   12610:	cmp	r0, #0
   12614:	bne	1264c <__mempcpy_chk@plt+0x1570>
   12618:	movw	r1, #24330	; 0x5f0a
   1261c:	mov	r0, r5
   12620:	mov	r2, #3
   12624:	movt	r1, #1
   12628:	bl	110b8 <strncmp@plt>
   1262c:	cmp	r0, #0
   12630:	beq	1263c <__mempcpy_chk@plt+0x1560>
   12634:	mov	r4, r5
   12638:	b	1264c <__mempcpy_chk@plt+0x1570>
   1263c:	movw	r0, #28992	; 0x7140
   12640:	add	r4, r5, #3
   12644:	movt	r0, #2
   12648:	str	r4, [r0]
   1264c:	movw	r0, #28996	; 0x7144
   12650:	movt	r0, #2
   12654:	str	r4, [r0]
   12658:	movw	r0, #29024	; 0x7160
   1265c:	movt	r0, #2
   12660:	str	r4, [r0]
   12664:	pop	{r4, r5, fp, pc}
   12668:	movw	r0, #29000	; 0x7148
   1266c:	movt	r0, #2
   12670:	ldr	r1, [r0]
   12674:	movw	r0, #24266	; 0x5eca
   12678:	movt	r0, #1
   1267c:	bl	110ac <fputs@plt>
   12680:	bl	110c4 <abort@plt>
   12684:	push	{r4, r5, r6, sl, fp, lr}
   12688:	add	fp, sp, #16
   1268c:	mov	r4, r0
   12690:	movw	r0, #29032	; 0x7168
   12694:	movt	r0, #2
   12698:	cmp	r4, #0
   1269c:	moveq	r4, r0
   126a0:	bl	10fec <__errno_location@plt>
   126a4:	ldr	r6, [r0]
   126a8:	mov	r5, r0
   126ac:	mov	r0, r4
   126b0:	mov	r1, #48	; 0x30
   126b4:	bl	14d10 <__mempcpy_chk@plt+0x3c34>
   126b8:	str	r6, [r5]
   126bc:	pop	{r4, r5, r6, sl, fp, pc}
   126c0:	movw	r1, #29032	; 0x7168
   126c4:	cmp	r0, #0
   126c8:	movt	r1, #2
   126cc:	movne	r1, r0
   126d0:	ldr	r0, [r1]
   126d4:	bx	lr
   126d8:	movw	r2, #29032	; 0x7168
   126dc:	cmp	r0, #0
   126e0:	movt	r2, #2
   126e4:	movne	r2, r0
   126e8:	str	r1, [r2]
   126ec:	bx	lr
   126f0:	movw	r3, #29032	; 0x7168
   126f4:	cmp	r0, #0
   126f8:	and	r2, r2, #1
   126fc:	movt	r3, #2
   12700:	movne	r3, r0
   12704:	ubfx	r0, r1, #5, #3
   12708:	and	r1, r1, #31
   1270c:	add	ip, r3, r0, lsl #2
   12710:	mov	r0, #1
   12714:	ldr	r3, [ip, #8]
   12718:	and	r0, r0, r3, lsr r1
   1271c:	eor	r2, r0, r2
   12720:	eor	r1, r3, r2, lsl r1
   12724:	str	r1, [ip, #8]
   12728:	bx	lr
   1272c:	movw	r2, #29032	; 0x7168
   12730:	cmp	r0, #0
   12734:	movt	r2, #2
   12738:	movne	r2, r0
   1273c:	ldr	r0, [r2, #4]
   12740:	str	r1, [r2, #4]
   12744:	bx	lr
   12748:	push	{fp, lr}
   1274c:	mov	fp, sp
   12750:	movw	r3, #29032	; 0x7168
   12754:	cmp	r0, #0
   12758:	movt	r3, #2
   1275c:	movne	r3, r0
   12760:	cmp	r1, #0
   12764:	mov	r0, #10
   12768:	cmpne	r2, #0
   1276c:	str	r0, [r3]
   12770:	bne	12778 <__mempcpy_chk@plt+0x169c>
   12774:	bl	110c4 <abort@plt>
   12778:	str	r1, [r3, #40]	; 0x28
   1277c:	str	r2, [r3, #44]	; 0x2c
   12780:	pop	{fp, pc}
   12784:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12788:	add	fp, sp, #28
   1278c:	sub	sp, sp, #20
   12790:	mov	r7, r0
   12794:	ldr	r0, [fp, #8]
   12798:	movw	r5, #29032	; 0x7168
   1279c:	mov	r8, r3
   127a0:	mov	r9, r2
   127a4:	mov	sl, r1
   127a8:	movt	r5, #2
   127ac:	cmp	r0, #0
   127b0:	movne	r5, r0
   127b4:	bl	10fec <__errno_location@plt>
   127b8:	ldr	r2, [r5, #40]	; 0x28
   127bc:	ldr	r3, [r5, #44]	; 0x2c
   127c0:	mov	r4, r0
   127c4:	ldm	r5, {r0, r1}
   127c8:	add	r5, r5, #8
   127cc:	ldr	r6, [r4]
   127d0:	stm	sp, {r0, r1, r5}
   127d4:	mov	r0, r7
   127d8:	mov	r1, sl
   127dc:	str	r2, [sp, #12]
   127e0:	str	r3, [sp, #16]
   127e4:	mov	r2, r9
   127e8:	mov	r3, r8
   127ec:	bl	127fc <__mempcpy_chk@plt+0x1720>
   127f0:	str	r6, [r4]
   127f4:	sub	sp, fp, #28
   127f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   127fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12800:	add	fp, sp, #28
   12804:	sub	sp, sp, #156	; 0x9c
   12808:	mov	r5, r0
   1280c:	add	r0, r2, #1
   12810:	mov	r6, r1
   12814:	mov	sl, r3
   12818:	str	r2, [fp, #-80]	; 0xffffffb0
   1281c:	str	r0, [sp, #72]	; 0x48
   12820:	ldr	r0, [fp, #12]
   12824:	and	r1, r0, #1
   12828:	str	r1, [sp, #32]
   1282c:	and	r1, r0, #4
   12830:	str	r1, [sp, #28]
   12834:	ubfx	r9, r0, #1, #1
   12838:	bl	10f2c <__ctype_get_mb_cur_max@plt>
   1283c:	str	r0, [sp, #40]	; 0x28
   12840:	ldr	r0, [fp, #24]
   12844:	ldr	r7, [fp, #8]
   12848:	mov	r1, #0
   1284c:	mov	lr, #0
   12850:	str	r5, [fp, #-84]	; 0xffffffac
   12854:	str	r1, [sp, #60]	; 0x3c
   12858:	mov	r1, #1
   1285c:	str	r1, [fp, #-48]	; 0xffffffd0
   12860:	str	r0, [sp, #80]	; 0x50
   12864:	ldr	r0, [fp, #20]
   12868:	str	r0, [sp, #76]	; 0x4c
   1286c:	mov	r0, #0
   12870:	str	r0, [sp, #56]	; 0x38
   12874:	mov	r0, #0
   12878:	str	r0, [fp, #-88]	; 0xffffffa8
   1287c:	mov	r0, #0
   12880:	str	r0, [fp, #-72]	; 0xffffffb8
   12884:	mov	r0, #0
   12888:	cmp	r7, #10
   1288c:	bhi	13868 <__mempcpy_chk@plt+0x278c>
   12890:	add	r1, pc, #24
   12894:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12898:	mov	ip, r6
   1289c:	mov	r8, #0
   128a0:	mov	r2, #1
   128a4:	mov	r6, #0
   128a8:	mov	r3, sl
   128ac:	ldr	pc, [r1, r7, lsl #2]
   128b0:	muleq	r1, ip, r9
   128b4:	strdeq	r2, [r1], -r0
   128b8:			; <UNDEFINED> instruction: 0x000129b0
   128bc:	muleq	r1, r4, r9
   128c0:	andeq	r2, r1, r4, ror #19
   128c4:	andeq	r2, r1, r8, lsl sl
   128c8:	andeq	r2, r1, r0, asr #19
   128cc:	muleq	r1, ip, sl
   128d0:	ldrdeq	r2, [r1], -ip
   128d4:	ldrdeq	r2, [r1], -ip
   128d8:	andeq	r2, r1, ip, lsl r9
   128dc:	movw	r0, #24414	; 0x5f5e
   128e0:	mov	r1, r7
   128e4:	mov	r6, r5
   128e8:	mov	r4, ip
   128ec:	mov	r5, lr
   128f0:	movt	r0, #1
   128f4:	bl	13fcc <__mempcpy_chk@plt+0x2ef0>
   128f8:	str	r0, [sp, #76]	; 0x4c
   128fc:	movw	r0, #24416	; 0x5f60
   12900:	mov	r1, r7
   12904:	movt	r0, #1
   12908:	bl	13fcc <__mempcpy_chk@plt+0x2ef0>
   1290c:	mov	lr, r5
   12910:	mov	r5, r6
   12914:	mov	ip, r4
   12918:	str	r0, [sp, #80]	; 0x50
   1291c:	mov	r8, #0
   12920:	tst	r9, #1
   12924:	str	lr, [sp, #44]	; 0x2c
   12928:	bne	12960 <__mempcpy_chk@plt+0x1884>
   1292c:	ldr	r0, [sp, #76]	; 0x4c
   12930:	ldrb	r0, [r0]
   12934:	cmp	r0, #0
   12938:	beq	12960 <__mempcpy_chk@plt+0x1884>
   1293c:	ldr	r1, [sp, #76]	; 0x4c
   12940:	mov	r8, #0
   12944:	add	r1, r1, #1
   12948:	cmp	r8, ip
   1294c:	strbcc	r0, [r5, r8]
   12950:	ldrb	r0, [r1, r8]
   12954:	add	r8, r8, #1
   12958:	cmp	r0, #0
   1295c:	bne	12948 <__mempcpy_chk@plt+0x186c>
   12960:	ldr	r6, [sp, #80]	; 0x50
   12964:	mov	r4, ip
   12968:	mov	r0, r6
   1296c:	bl	10fe0 <strlen@plt>
   12970:	mov	ip, r4
   12974:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12978:	ldr	lr, [sp, #44]	; 0x2c
   1297c:	str	r6, [fp, #-88]	; 0xffffffa8
   12980:	str	r0, [fp, #-72]	; 0xffffffb8
   12984:	mov	r2, #1
   12988:	mov	r6, r9
   1298c:	mov	r3, sl
   12990:	b	12a9c <__mempcpy_chk@plt+0x19c0>
   12994:	mov	r0, #1
   12998:	b	129f0 <__mempcpy_chk@plt+0x1914>
   1299c:	mov	r7, #0
   129a0:	mov	r8, #0
   129a4:	mov	r2, r0
   129a8:	mov	r6, #0
   129ac:	b	12a9c <__mempcpy_chk@plt+0x19c0>
   129b0:	tst	r9, #1
   129b4:	bne	129f0 <__mempcpy_chk@plt+0x1914>
   129b8:	mov	r2, r0
   129bc:	b	12a48 <__mempcpy_chk@plt+0x196c>
   129c0:	mov	r0, #1
   129c4:	mov	r8, #0
   129c8:	mov	r7, #5
   129cc:	mov	r2, #1
   129d0:	str	r0, [fp, #-72]	; 0xffffffb8
   129d4:	movw	r0, #24412	; 0x5f5c
   129d8:	movt	r0, #1
   129dc:	str	r0, [fp, #-88]	; 0xffffffa8
   129e0:	b	12a10 <__mempcpy_chk@plt+0x1934>
   129e4:	mov	r2, #1
   129e8:	tst	r9, #1
   129ec:	beq	12a48 <__mempcpy_chk@plt+0x196c>
   129f0:	mov	r1, #1
   129f4:	mov	r8, #0
   129f8:	mov	r7, #2
   129fc:	mov	r2, r0
   12a00:	str	r1, [fp, #-72]	; 0xffffffb8
   12a04:	movw	r1, #24416	; 0x5f60
   12a08:	movt	r1, #1
   12a0c:	str	r1, [fp, #-88]	; 0xffffffa8
   12a10:	mov	r6, #1
   12a14:	b	12a9c <__mempcpy_chk@plt+0x19c0>
   12a18:	tst	r9, #1
   12a1c:	beq	12a6c <__mempcpy_chk@plt+0x1990>
   12a20:	mov	r0, #1
   12a24:	mov	r8, #0
   12a28:	mov	r2, #1
   12a2c:	mov	r6, #1
   12a30:	mov	r7, #5
   12a34:	str	r0, [fp, #-72]	; 0xffffffb8
   12a38:	movw	r0, #24412	; 0x5f5c
   12a3c:	movt	r0, #1
   12a40:	str	r0, [fp, #-88]	; 0xffffffa8
   12a44:	b	12a9c <__mempcpy_chk@plt+0x19c0>
   12a48:	cmp	ip, #0
   12a4c:	mov	r8, #1
   12a50:	mov	r6, #0
   12a54:	mov	r7, #2
   12a58:	movne	r0, #39	; 0x27
   12a5c:	strbne	r0, [r5]
   12a60:	movw	r0, #24416	; 0x5f60
   12a64:	movt	r0, #1
   12a68:	b	12a90 <__mempcpy_chk@plt+0x19b4>
   12a6c:	cmp	ip, #0
   12a70:	mov	r8, #1
   12a74:	mov	r2, #1
   12a78:	mov	r7, #5
   12a7c:	mov	r6, #0
   12a80:	movne	r0, #34	; 0x22
   12a84:	strbne	r0, [r5]
   12a88:	movw	r0, #24412	; 0x5f5c
   12a8c:	movt	r0, #1
   12a90:	str	r0, [fp, #-88]	; 0xffffffa8
   12a94:	mov	r0, #1
   12a98:	str	r0, [fp, #-72]	; 0xffffffb8
   12a9c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12aa0:	str	r7, [fp, #-68]	; 0xffffffbc
   12aa4:	str	r6, [fp, #-76]	; 0xffffffb4
   12aa8:	str	r2, [sp, #84]	; 0x54
   12aac:	cmp	r0, #0
   12ab0:	movwne	r0, #1
   12ab4:	and	r1, r0, r6
   12ab8:	and	r1, r2, r1
   12abc:	str	r1, [sp, #48]	; 0x30
   12ac0:	sub	r1, r7, #2
   12ac4:	clz	r1, r1
   12ac8:	lsr	r1, r1, #5
   12acc:	and	r1, r1, r6
   12ad0:	str	r1, [sp, #64]	; 0x40
   12ad4:	subs	r1, r7, #2
   12ad8:	eor	r7, r6, #1
   12adc:	movwne	r1, #1
   12ae0:	str	r7, [sp, #92]	; 0x5c
   12ae4:	orr	r7, r1, r7
   12ae8:	and	r1, r1, r2
   12aec:	and	r0, r0, r1
   12af0:	str	r7, [sp, #68]	; 0x44
   12af4:	mov	r7, #0
   12af8:	str	r0, [fp, #-60]	; 0xffffffc4
   12afc:	orr	r0, r1, r6
   12b00:	ldr	r1, [fp, #16]
   12b04:	eor	r0, r0, #1
   12b08:	clz	r1, r1
   12b0c:	lsr	r1, r1, #5
   12b10:	orr	r0, r1, r0
   12b14:	str	r0, [fp, #-64]	; 0xffffffc0
   12b18:	eor	r0, r2, #1
   12b1c:	str	r0, [sp, #52]	; 0x34
   12b20:	cmn	r3, #1
   12b24:	beq	12b34 <__mempcpy_chk@plt+0x1a58>
   12b28:	cmp	r7, r3
   12b2c:	bne	12b40 <__mempcpy_chk@plt+0x1a64>
   12b30:	b	1369c <__mempcpy_chk@plt+0x25c0>
   12b34:	ldrb	r0, [r4, r7]
   12b38:	cmp	r0, #0
   12b3c:	beq	136a4 <__mempcpy_chk@plt+0x25c8>
   12b40:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12b44:	cmp	r0, #0
   12b48:	beq	12b90 <__mempcpy_chk@plt+0x1ab4>
   12b4c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12b50:	add	r5, r7, r0
   12b54:	cmp	r0, #2
   12b58:	bcc	12ba4 <__mempcpy_chk@plt+0x1ac8>
   12b5c:	mov	r0, #0
   12b60:	cmn	r3, #1
   12b64:	str	r0, [fp, #-56]	; 0xffffffc8
   12b68:	bne	12bac <__mempcpy_chk@plt+0x1ad0>
   12b6c:	mov	r0, r4
   12b70:	mov	r4, ip
   12b74:	mov	r6, lr
   12b78:	bl	10fe0 <strlen@plt>
   12b7c:	mov	ip, r4
   12b80:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12b84:	mov	lr, r6
   12b88:	mov	r3, r0
   12b8c:	b	12bac <__mempcpy_chk@plt+0x1ad0>
   12b90:	mov	r0, #0
   12b94:	mov	sl, r3
   12b98:	str	r0, [fp, #-56]	; 0xffffffc8
   12b9c:	mov	r0, #0
   12ba0:	b	12c18 <__mempcpy_chk@plt+0x1b3c>
   12ba4:	mov	r0, #0
   12ba8:	str	r0, [fp, #-56]	; 0xffffffc8
   12bac:	cmp	r5, r3
   12bb0:	bls	12bc4 <__mempcpy_chk@plt+0x1ae8>
   12bb4:	ldr	r5, [fp, #-84]	; 0xffffffac
   12bb8:	mov	r0, #0
   12bbc:	mov	sl, r3
   12bc0:	b	12c18 <__mempcpy_chk@plt+0x1b3c>
   12bc4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   12bc8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12bcc:	add	r0, r4, r7
   12bd0:	mov	r5, lr
   12bd4:	mov	r6, ip
   12bd8:	mov	sl, r3
   12bdc:	bl	10fd4 <bcmp@plt>
   12be0:	ldr	r2, [sp, #92]	; 0x5c
   12be4:	cmp	r0, #0
   12be8:	ldr	r3, [fp, #-84]	; 0xffffffac
   12bec:	mov	r1, r0
   12bf0:	movwne	r1, #1
   12bf4:	orr	r1, r1, r2
   12bf8:	tst	r1, #1
   12bfc:	beq	13728 <__mempcpy_chk@plt+0x264c>
   12c00:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12c04:	clz	r0, r0
   12c08:	mov	lr, r5
   12c0c:	mov	ip, r6
   12c10:	mov	r5, r3
   12c14:	lsr	r0, r0, #5
   12c18:	str	r0, [fp, #-52]	; 0xffffffcc
   12c1c:	ldrb	r6, [r4, r7]
   12c20:	cmp	r6, #126	; 0x7e
   12c24:	bhi	1314c <__mempcpy_chk@plt+0x2070>
   12c28:	add	r3, pc, #16
   12c2c:	mov	r9, #1
   12c30:	mov	r2, #110	; 0x6e
   12c34:	mov	r0, #97	; 0x61
   12c38:	mov	r1, #0
   12c3c:	ldr	pc, [r3, r6, lsl #2]
   12c40:			; <UNDEFINED> instruction: 0x00012fb0
   12c44:	andeq	r3, r1, ip, asr #2
   12c48:	andeq	r3, r1, ip, asr #2
   12c4c:	andeq	r3, r1, ip, asr #2
   12c50:	andeq	r3, r1, ip, asr #2
   12c54:	andeq	r3, r1, ip, asr #2
   12c58:	andeq	r3, r1, ip, asr #2
   12c5c:	andeq	r3, r1, ip, asr #3
   12c60:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   12c64:	andeq	r2, r1, r8, lsl #31
   12c68:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   12c6c:	strheq	r3, [r1], -r4
   12c70:	andeq	r2, r1, r0, lsl #31
   12c74:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   12c78:	andeq	r3, r1, ip, asr #2
   12c7c:	andeq	r3, r1, ip, asr #2
   12c80:	andeq	r3, r1, ip, asr #2
   12c84:	andeq	r3, r1, ip, asr #2
   12c88:	andeq	r3, r1, ip, asr #2
   12c8c:	andeq	r3, r1, ip, asr #2
   12c90:	andeq	r3, r1, ip, asr #2
   12c94:	andeq	r3, r1, ip, asr #2
   12c98:	andeq	r3, r1, ip, asr #2
   12c9c:	andeq	r3, r1, ip, asr #2
   12ca0:	andeq	r3, r1, ip, asr #2
   12ca4:	andeq	r3, r1, ip, asr #2
   12ca8:	andeq	r3, r1, ip, asr #2
   12cac:	andeq	r3, r1, ip, asr #2
   12cb0:	andeq	r3, r1, ip, asr #2
   12cb4:	andeq	r3, r1, ip, asr #2
   12cb8:	andeq	r3, r1, ip, asr #2
   12cbc:	andeq	r3, r1, ip, asr #2
   12cc0:	andeq	r2, r1, r0, lsr pc
   12cc4:	andeq	r2, r1, r4, lsr pc
   12cc8:	andeq	r2, r1, r4, lsr pc
   12ccc:	andeq	r2, r1, r8, lsl pc
   12cd0:	andeq	r2, r1, r4, lsr pc
   12cd4:	andeq	r2, r1, ip, lsr lr
   12cd8:	andeq	r2, r1, r4, lsr pc
   12cdc:	strheq	r3, [r1], -ip
   12ce0:	andeq	r2, r1, r4, lsr pc
   12ce4:	andeq	r2, r1, r4, lsr pc
   12ce8:	andeq	r2, r1, r4, lsr pc
   12cec:	andeq	r2, r1, ip, lsr lr
   12cf0:	andeq	r2, r1, ip, lsr lr
   12cf4:	andeq	r2, r1, ip, lsr lr
   12cf8:	andeq	r2, r1, ip, lsr lr
   12cfc:	andeq	r2, r1, ip, lsr lr
   12d00:	andeq	r2, r1, ip, lsr lr
   12d04:	andeq	r2, r1, ip, lsr lr
   12d08:	andeq	r2, r1, ip, lsr lr
   12d0c:	andeq	r2, r1, ip, lsr lr
   12d10:	andeq	r2, r1, ip, lsr lr
   12d14:	andeq	r2, r1, ip, lsr lr
   12d18:	andeq	r2, r1, ip, lsr lr
   12d1c:	andeq	r2, r1, ip, lsr lr
   12d20:	andeq	r2, r1, ip, lsr lr
   12d24:	andeq	r2, r1, ip, lsr lr
   12d28:	andeq	r2, r1, ip, lsr lr
   12d2c:	andeq	r2, r1, r4, lsr pc
   12d30:	andeq	r2, r1, r4, lsr pc
   12d34:	andeq	r2, r1, r4, lsr pc
   12d38:	andeq	r2, r1, r4, lsr pc
   12d3c:	andeq	r3, r1, r8, lsl #1
   12d40:	andeq	r3, r1, ip, asr #2
   12d44:	andeq	r2, r1, ip, lsr lr
   12d48:	andeq	r2, r1, ip, lsr lr
   12d4c:	andeq	r2, r1, ip, lsr lr
   12d50:	andeq	r2, r1, ip, lsr lr
   12d54:	andeq	r2, r1, ip, lsr lr
   12d58:	andeq	r2, r1, ip, lsr lr
   12d5c:	andeq	r2, r1, ip, lsr lr
   12d60:	andeq	r2, r1, ip, lsr lr
   12d64:	andeq	r2, r1, ip, lsr lr
   12d68:	andeq	r2, r1, ip, lsr lr
   12d6c:	andeq	r2, r1, ip, lsr lr
   12d70:	andeq	r2, r1, ip, lsr lr
   12d74:	andeq	r2, r1, ip, lsr lr
   12d78:	andeq	r2, r1, ip, lsr lr
   12d7c:	andeq	r2, r1, ip, lsr lr
   12d80:	andeq	r2, r1, ip, lsr lr
   12d84:	andeq	r2, r1, ip, lsr lr
   12d88:	andeq	r2, r1, ip, lsr lr
   12d8c:	andeq	r2, r1, ip, lsr lr
   12d90:	andeq	r2, r1, ip, lsr lr
   12d94:	andeq	r2, r1, ip, lsr lr
   12d98:	andeq	r2, r1, ip, lsr lr
   12d9c:	andeq	r2, r1, ip, lsr lr
   12da0:	andeq	r2, r1, ip, lsr lr
   12da4:	andeq	r2, r1, ip, lsr lr
   12da8:	andeq	r2, r1, ip, lsr lr
   12dac:	andeq	r2, r1, r4, lsr pc
   12db0:	andeq	r2, r1, ip, asr pc
   12db4:	andeq	r2, r1, ip, lsr lr
   12db8:	andeq	r2, r1, r4, lsr pc
   12dbc:	andeq	r2, r1, ip, lsr lr
   12dc0:	andeq	r2, r1, r4, lsr pc
   12dc4:	andeq	r2, r1, ip, lsr lr
   12dc8:	andeq	r2, r1, ip, lsr lr
   12dcc:	andeq	r2, r1, ip, lsr lr
   12dd0:	andeq	r2, r1, ip, lsr lr
   12dd4:	andeq	r2, r1, ip, lsr lr
   12dd8:	andeq	r2, r1, ip, lsr lr
   12ddc:	andeq	r2, r1, ip, lsr lr
   12de0:	andeq	r2, r1, ip, lsr lr
   12de4:	andeq	r2, r1, ip, lsr lr
   12de8:	andeq	r2, r1, ip, lsr lr
   12dec:	andeq	r2, r1, ip, lsr lr
   12df0:	andeq	r2, r1, ip, lsr lr
   12df4:	andeq	r2, r1, ip, lsr lr
   12df8:	andeq	r2, r1, ip, lsr lr
   12dfc:	andeq	r2, r1, ip, lsr lr
   12e00:	andeq	r2, r1, ip, lsr lr
   12e04:	andeq	r2, r1, ip, lsr lr
   12e08:	andeq	r2, r1, ip, lsr lr
   12e0c:	andeq	r2, r1, ip, lsr lr
   12e10:	andeq	r2, r1, ip, lsr lr
   12e14:	andeq	r2, r1, ip, lsr lr
   12e18:	andeq	r2, r1, ip, lsr lr
   12e1c:	andeq	r2, r1, ip, lsr lr
   12e20:	andeq	r2, r1, ip, lsr lr
   12e24:	andeq	r2, r1, ip, lsr lr
   12e28:	andeq	r2, r1, ip, lsr lr
   12e2c:	strdeq	r2, [r1], -r0
   12e30:	andeq	r2, r1, r4, lsr pc
   12e34:	strdeq	r2, [r1], -r0
   12e38:	andeq	r2, r1, r8, lsl pc
   12e3c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12e40:	tst	r0, #1
   12e44:	bne	12e70 <__mempcpy_chk@plt+0x1d94>
   12e48:	ldr	r1, [fp, #16]
   12e4c:	ubfx	r0, r6, #5, #3
   12e50:	mov	r2, #1
   12e54:	ldr	r0, [r1, r0, lsl #2]
   12e58:	and	r1, r6, #31
   12e5c:	tst	r0, r2, lsl r1
   12e60:	beq	12e70 <__mempcpy_chk@plt+0x1d94>
   12e64:	mov	r0, r6
   12e68:	mov	r1, r9
   12e6c:	b	12e84 <__mempcpy_chk@plt+0x1da8>
   12e70:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12e74:	mov	r1, r9
   12e78:	cmp	r0, #0
   12e7c:	mov	r0, r6
   12e80:	beq	135d0 <__mempcpy_chk@plt+0x24f4>
   12e84:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12e88:	tst	r2, #1
   12e8c:	bne	1376c <__mempcpy_chk@plt+0x2690>
   12e90:	ldr	r2, [fp, #-68]	; 0xffffffbc
   12e94:	subs	r2, r2, #2
   12e98:	movwne	r2, #1
   12e9c:	orr	r2, r2, lr
   12ea0:	tst	r2, #1
   12ea4:	bne	12edc <__mempcpy_chk@plt+0x1e00>
   12ea8:	cmp	r8, ip
   12eac:	mov	lr, #1
   12eb0:	movcc	r2, #39	; 0x27
   12eb4:	strbcc	r2, [r5, r8]
   12eb8:	add	r2, r8, #1
   12ebc:	cmp	r2, ip
   12ec0:	movcc	r3, #36	; 0x24
   12ec4:	strbcc	r3, [r5, r2]
   12ec8:	add	r2, r8, #2
   12ecc:	add	r8, r8, #3
   12ed0:	cmp	r2, ip
   12ed4:	movcc	r3, #39	; 0x27
   12ed8:	strbcc	r3, [r5, r2]
   12edc:	cmp	r8, ip
   12ee0:	movcc	r2, #92	; 0x5c
   12ee4:	strbcc	r2, [r5, r8]
   12ee8:	add	r8, r8, #1
   12eec:	b	13610 <__mempcpy_chk@plt+0x2534>
   12ef0:	cmp	sl, #1
   12ef4:	beq	12f18 <__mempcpy_chk@plt+0x1e3c>
   12ef8:	mov	r9, #0
   12efc:	cmn	sl, #1
   12f00:	bne	12f24 <__mempcpy_chk@plt+0x1e48>
   12f04:	ldrb	r0, [r4, #1]
   12f08:	cmp	r0, #0
   12f0c:	beq	12f18 <__mempcpy_chk@plt+0x1e3c>
   12f10:	mvn	sl, #0
   12f14:	b	12f24 <__mempcpy_chk@plt+0x1e48>
   12f18:	mov	r9, #0
   12f1c:	cmp	r7, #0
   12f20:	beq	12f30 <__mempcpy_chk@plt+0x1e54>
   12f24:	mov	r0, #0
   12f28:	str	r0, [fp, #-56]	; 0xffffffc8
   12f2c:	b	12e3c <__mempcpy_chk@plt+0x1d60>
   12f30:	mov	r1, #1
   12f34:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12f38:	cmp	r0, #2
   12f3c:	bne	12f54 <__mempcpy_chk@plt+0x1e78>
   12f40:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12f44:	mov	r9, r1
   12f48:	tst	r0, #1
   12f4c:	beq	12e3c <__mempcpy_chk@plt+0x1d60>
   12f50:	b	1376c <__mempcpy_chk@plt+0x2690>
   12f54:	mov	r9, r1
   12f58:	b	12e3c <__mempcpy_chk@plt+0x1d60>
   12f5c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12f60:	cmp	r0, #2
   12f64:	bne	131a8 <__mempcpy_chk@plt+0x20cc>
   12f68:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12f6c:	tst	r0, #1
   12f70:	bne	1376c <__mempcpy_chk@plt+0x2690>
   12f74:	mov	r0, #0
   12f78:	str	r0, [fp, #-56]	; 0xffffffc8
   12f7c:	b	131c0 <__mempcpy_chk@plt+0x20e4>
   12f80:	mov	r0, #102	; 0x66
   12f84:	b	131cc <__mempcpy_chk@plt+0x20f0>
   12f88:	mov	r2, #116	; 0x74
   12f8c:	b	12f9c <__mempcpy_chk@plt+0x1ec0>
   12f90:	mov	r0, #98	; 0x62
   12f94:	b	131cc <__mempcpy_chk@plt+0x20f0>
   12f98:	mov	r2, #114	; 0x72
   12f9c:	ldr	r0, [sp, #68]	; 0x44
   12fa0:	tst	r0, #1
   12fa4:	mov	r0, r2
   12fa8:	bne	131cc <__mempcpy_chk@plt+0x20f0>
   12fac:	b	1376c <__mempcpy_chk@plt+0x2690>
   12fb0:	ldr	r0, [sp, #84]	; 0x54
   12fb4:	tst	r0, #1
   12fb8:	beq	131ec <__mempcpy_chk@plt+0x2110>
   12fbc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12fc0:	tst	r0, #1
   12fc4:	bne	13858 <__mempcpy_chk@plt+0x277c>
   12fc8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12fcc:	mov	r2, sl
   12fd0:	subs	r0, r0, #2
   12fd4:	movwne	r0, #1
   12fd8:	orr	r0, r0, lr
   12fdc:	tst	r0, #1
   12fe0:	bne	13018 <__mempcpy_chk@plt+0x1f3c>
   12fe4:	cmp	r8, ip
   12fe8:	mov	lr, #1
   12fec:	movcc	r0, #39	; 0x27
   12ff0:	strbcc	r0, [r5, r8]
   12ff4:	add	r0, r8, #1
   12ff8:	cmp	r0, ip
   12ffc:	movcc	r1, #36	; 0x24
   13000:	strbcc	r1, [r5, r0]
   13004:	add	r0, r8, #2
   13008:	add	r8, r8, #3
   1300c:	cmp	r0, ip
   13010:	movcc	r1, #39	; 0x27
   13014:	strbcc	r1, [r5, r0]
   13018:	mov	r1, #1
   1301c:	cmp	r8, ip
   13020:	mov	r9, #0
   13024:	mov	r6, #48	; 0x30
   13028:	str	r1, [fp, #-56]	; 0xffffffc8
   1302c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   13030:	movcc	r0, #92	; 0x5c
   13034:	strbcc	r0, [r5, r8]
   13038:	add	r0, r8, #1
   1303c:	cmp	r1, #2
   13040:	beq	13348 <__mempcpy_chk@plt+0x226c>
   13044:	add	r1, r7, #1
   13048:	cmp	r1, r2
   1304c:	bcs	13348 <__mempcpy_chk@plt+0x226c>
   13050:	ldrb	r1, [r4, r1]
   13054:	sub	r1, r1, #48	; 0x30
   13058:	uxtb	r1, r1
   1305c:	cmp	r1, #9
   13060:	bhi	13348 <__mempcpy_chk@plt+0x226c>
   13064:	cmp	r0, ip
   13068:	movcc	r1, #48	; 0x30
   1306c:	strbcc	r1, [r5, r0]
   13070:	add	r0, r8, #2
   13074:	add	r8, r8, #3
   13078:	cmp	r0, ip
   1307c:	movcc	r1, #48	; 0x30
   13080:	strbcc	r1, [r5, r0]
   13084:	b	12e3c <__mempcpy_chk@plt+0x1d60>
   13088:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1308c:	mov	r6, #63	; 0x3f
   13090:	cmp	r0, #5
   13094:	beq	13350 <__mempcpy_chk@plt+0x2274>
   13098:	mov	r1, #0
   1309c:	cmp	r0, #2
   130a0:	str	r1, [fp, #-56]	; 0xffffffc8
   130a4:	bne	13404 <__mempcpy_chk@plt+0x2328>
   130a8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   130ac:	mov	r9, #0
   130b0:	b	12f48 <__mempcpy_chk@plt+0x1e6c>
   130b4:	mov	r0, #118	; 0x76
   130b8:	b	131cc <__mempcpy_chk@plt+0x20f0>
   130bc:	mov	r0, #1
   130c0:	mov	r6, #39	; 0x27
   130c4:	str	r0, [sp, #60]	; 0x3c
   130c8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   130cc:	cmp	r0, #2
   130d0:	bne	13144 <__mempcpy_chk@plt+0x2068>
   130d4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   130d8:	tst	r0, #1
   130dc:	bne	1376c <__mempcpy_chk@plt+0x2690>
   130e0:	ldr	r2, [sp, #56]	; 0x38
   130e4:	clz	r1, ip
   130e8:	mov	lr, #0
   130ec:	lsr	r1, r1, #5
   130f0:	cmp	r2, #0
   130f4:	mov	r0, r2
   130f8:	movwne	r0, #1
   130fc:	orrs	r0, r0, r1
   13100:	moveq	r2, ip
   13104:	moveq	ip, r0
   13108:	cmp	r8, ip
   1310c:	str	r2, [sp, #56]	; 0x38
   13110:	movcc	r0, #39	; 0x27
   13114:	strbcc	r0, [r5, r8]
   13118:	add	r0, r8, #1
   1311c:	cmp	r0, ip
   13120:	movcc	r1, #92	; 0x5c
   13124:	strbcc	r1, [r5, r0]
   13128:	add	r0, r8, #2
   1312c:	add	r8, r8, #3
   13130:	cmp	r0, ip
   13134:	movcc	r1, #39	; 0x27
   13138:	strbcc	r1, [r5, r0]
   1313c:	mov	r0, #0
   13140:	str	r0, [fp, #-56]	; 0xffffffc8
   13144:	mov	r9, #1
   13148:	b	12e3c <__mempcpy_chk@plt+0x1d60>
   1314c:	ldr	r0, [sp, #40]	; 0x28
   13150:	str	lr, [sp, #44]	; 0x2c
   13154:	str	ip, [sp, #88]	; 0x58
   13158:	cmp	r0, #1
   1315c:	bne	1320c <__mempcpy_chk@plt+0x2130>
   13160:	str	sl, [sp, #36]	; 0x24
   13164:	bl	10fbc <__ctype_b_loc@plt>
   13168:	ldr	r0, [r0]
   1316c:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13170:	mov	r1, #1
   13174:	add	r0, r0, r6, lsl #1
   13178:	ldrb	r0, [r0, #1]
   1317c:	ubfx	r9, r0, #6, #1
   13180:	ldr	r0, [sp, #52]	; 0x34
   13184:	ldr	lr, [sp, #44]	; 0x2c
   13188:	cmp	r1, #1
   1318c:	orr	r3, r9, r0
   13190:	bhi	1340c <__mempcpy_chk@plt+0x2330>
   13194:	tst	r3, #1
   13198:	beq	1340c <__mempcpy_chk@plt+0x2330>
   1319c:	ldr	sl, [sp, #36]	; 0x24
   131a0:	ldr	ip, [sp, #88]	; 0x58
   131a4:	b	12e3c <__mempcpy_chk@plt+0x1d60>
   131a8:	ldr	r1, [sp, #48]	; 0x30
   131ac:	mov	r0, #0
   131b0:	str	r0, [fp, #-56]	; 0xffffffc8
   131b4:	mov	r0, #92	; 0x5c
   131b8:	cmp	r1, #0
   131bc:	beq	131cc <__mempcpy_chk@plt+0x20f0>
   131c0:	mov	r6, #92	; 0x5c
   131c4:	mov	r9, #0
   131c8:	b	135d0 <__mempcpy_chk@plt+0x24f4>
   131cc:	mov	r1, #0
   131d0:	mov	r9, #0
   131d4:	str	r1, [fp, #-56]	; 0xffffffc8
   131d8:	ldr	r1, [sp, #84]	; 0x54
   131dc:	tst	r1, #1
   131e0:	mov	r1, #0
   131e4:	beq	12e3c <__mempcpy_chk@plt+0x1d60>
   131e8:	b	12e84 <__mempcpy_chk@plt+0x1da8>
   131ec:	ldr	r0, [sp, #32]
   131f0:	mov	r6, #0
   131f4:	mov	r9, #0
   131f8:	cmp	r0, #0
   131fc:	mov	r0, #0
   13200:	str	r0, [fp, #-56]	; 0xffffffc8
   13204:	beq	12e3c <__mempcpy_chk@plt+0x1d60>
   13208:	b	13628 <__mempcpy_chk@plt+0x254c>
   1320c:	mov	r0, #0
   13210:	cmn	sl, #1
   13214:	sub	r3, fp, #40	; 0x28
   13218:	str	r0, [fp, #-36]	; 0xffffffdc
   1321c:	str	r0, [fp, #-40]	; 0xffffffd8
   13220:	bne	13238 <__mempcpy_chk@plt+0x215c>
   13224:	mov	r0, r4
   13228:	bl	10fe0 <strlen@plt>
   1322c:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13230:	sub	r3, fp, #40	; 0x28
   13234:	mov	sl, r0
   13238:	ldr	r0, [sp, #72]	; 0x48
   1323c:	mov	r9, #1
   13240:	mov	r1, #0
   13244:	str	sl, [sp, #36]	; 0x24
   13248:	add	r0, r0, r7
   1324c:	str	r0, [sp, #20]
   13250:	add	r0, r1, r7
   13254:	str	r1, [sp, #24]
   13258:	add	r1, r4, r0
   1325c:	mov	r4, r0
   13260:	sub	r2, sl, r0
   13264:	sub	r0, fp, #44	; 0x2c
   13268:	bl	15360 <__mempcpy_chk@plt+0x4284>
   1326c:	cmp	r0, #0
   13270:	beq	1367c <__mempcpy_chk@plt+0x25a0>
   13274:	cmn	r0, #1
   13278:	beq	13634 <__mempcpy_chk@plt+0x2558>
   1327c:	ldr	r2, [sp, #36]	; 0x24
   13280:	cmn	r0, #2
   13284:	beq	1363c <__mempcpy_chk@plt+0x2560>
   13288:	ldr	r2, [sp, #64]	; 0x40
   1328c:	ldr	ip, [sp, #88]	; 0x58
   13290:	ldr	r4, [sp, #84]	; 0x54
   13294:	ldr	lr, [fp, #-48]	; 0xffffffd0
   13298:	cmp	r0, #2
   1329c:	mov	r1, #0
   132a0:	movwcc	r1, #1
   132a4:	eor	r2, r2, #1
   132a8:	orrs	r1, r2, r1
   132ac:	bne	132fc <__mempcpy_chk@plt+0x2220>
   132b0:	ldr	r1, [sp, #24]
   132b4:	ldr	r2, [sp, #20]
   132b8:	add	r1, r2, r1
   132bc:	sub	r2, r0, #1
   132c0:	ldrb	r3, [r1]
   132c4:	sub	r5, r3, #94	; 0x5e
   132c8:	cmp	r5, #30
   132cc:	bhi	132e4 <__mempcpy_chk@plt+0x2208>
   132d0:	mov	r4, #1
   132d4:	mov	sl, #1073741829	; 0x40000005
   132d8:	tst	sl, r4, lsl r5
   132dc:	ldr	r4, [sp, #84]	; 0x54
   132e0:	bne	13744 <__mempcpy_chk@plt+0x2668>
   132e4:	sub	r3, r3, #91	; 0x5b
   132e8:	cmp	r3, #2
   132ec:	bcc	13744 <__mempcpy_chk@plt+0x2668>
   132f0:	add	r1, r1, #1
   132f4:	subs	r2, r2, #1
   132f8:	bne	132c0 <__mempcpy_chk@plt+0x21e4>
   132fc:	ldr	r5, [sp, #24]
   13300:	str	lr, [fp, #-48]	; 0xffffffd0
   13304:	add	r5, r0, r5
   13308:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1330c:	bl	10f08 <iswprint@plt>
   13310:	cmp	r0, #0
   13314:	sub	r4, fp, #40	; 0x28
   13318:	movwne	r0, #1
   1331c:	and	r9, r9, r0
   13320:	mov	r0, r4
   13324:	bl	10ec0 <mbsinit@plt>
   13328:	mov	r1, r5
   1332c:	mov	r3, r4
   13330:	ldr	sl, [sp, #36]	; 0x24
   13334:	ldr	r5, [fp, #-84]	; 0xffffffac
   13338:	ldr	r4, [fp, #-80]	; 0xffffffb0
   1333c:	cmp	r0, #0
   13340:	beq	13250 <__mempcpy_chk@plt+0x2174>
   13344:	b	13180 <__mempcpy_chk@plt+0x20a4>
   13348:	mov	r8, r0
   1334c:	b	12e3c <__mempcpy_chk@plt+0x1d60>
   13350:	mov	r0, #0
   13354:	str	r0, [fp, #-56]	; 0xffffffc8
   13358:	ldr	r0, [sp, #28]
   1335c:	cmp	r0, #0
   13360:	beq	13404 <__mempcpy_chk@plt+0x2328>
   13364:	add	r0, r7, #2
   13368:	mov	r1, sl
   1336c:	cmp	r0, sl
   13370:	bcs	13404 <__mempcpy_chk@plt+0x2328>
   13374:	add	r1, r7, r4
   13378:	ldrb	r1, [r1, #1]
   1337c:	cmp	r1, #63	; 0x3f
   13380:	bne	13404 <__mempcpy_chk@plt+0x2328>
   13384:	ldrb	r9, [r4, r0]
   13388:	sub	r2, r9, #33	; 0x21
   1338c:	cmp	r2, #29
   13390:	bhi	13404 <__mempcpy_chk@plt+0x2328>
   13394:	mov	r1, r4
   13398:	movw	r4, #20929	; 0x51c1
   1339c:	mov	r3, #1
   133a0:	movt	r4, #14336	; 0x3800
   133a4:	tst	r4, r3, lsl r2
   133a8:	beq	13690 <__mempcpy_chk@plt+0x25b4>
   133ac:	ldr	r2, [fp, #-76]	; 0xffffffb4
   133b0:	tst	r2, #1
   133b4:	bne	13860 <__mempcpy_chk@plt+0x2784>
   133b8:	cmp	r8, ip
   133bc:	mov	r4, r1
   133c0:	mov	r7, r0
   133c4:	mov	r6, r9
   133c8:	movcc	r2, #63	; 0x3f
   133cc:	strbcc	r2, [r5, r8]
   133d0:	add	r2, r8, #1
   133d4:	cmp	r2, ip
   133d8:	movcc	r3, #34	; 0x22
   133dc:	strbcc	r3, [r5, r2]
   133e0:	add	r2, r8, #2
   133e4:	cmp	r2, ip
   133e8:	movcc	r3, #34	; 0x22
   133ec:	strbcc	r3, [r5, r2]
   133f0:	add	r2, r8, #3
   133f4:	add	r8, r8, #4
   133f8:	cmp	r2, ip
   133fc:	movcc	r3, #63	; 0x3f
   13400:	strbcc	r3, [r5, r2]
   13404:	mov	r9, #0
   13408:	b	12e3c <__mempcpy_chk@plt+0x1d60>
   1340c:	ldr	sl, [sp, #36]	; 0x24
   13410:	add	r0, r1, r7
   13414:	mov	r2, #0
   13418:	str	r3, [sp, #24]
   1341c:	str	r0, [fp, #-56]	; 0xffffffc8
   13420:	tst	r3, #1
   13424:	beq	13450 <__mempcpy_chk@plt+0x2374>
   13428:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1342c:	tst	r0, #1
   13430:	beq	13518 <__mempcpy_chk@plt+0x243c>
   13434:	ldr	r1, [sp, #88]	; 0x58
   13438:	mov	r0, r3
   1343c:	cmp	r8, r1
   13440:	movcc	r1, #92	; 0x5c
   13444:	strbcc	r1, [r5, r8]
   13448:	add	r8, r8, #1
   1344c:	b	1351c <__mempcpy_chk@plt+0x2440>
   13450:	ldr	r1, [fp, #-76]	; 0xffffffb4
   13454:	tst	r1, #1
   13458:	bne	13768 <__mempcpy_chk@plt+0x268c>
   1345c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   13460:	subs	r2, r1, #2
   13464:	movwne	r2, #1
   13468:	orr	r2, r2, lr
   1346c:	tst	r2, #1
   13470:	bne	134b4 <__mempcpy_chk@plt+0x23d8>
   13474:	ldr	r1, [sp, #88]	; 0x58
   13478:	add	r2, r8, #1
   1347c:	mov	lr, #1
   13480:	cmp	r8, r1
   13484:	movcc	r1, #39	; 0x27
   13488:	strbcc	r1, [r5, r8]
   1348c:	ldr	r1, [sp, #88]	; 0x58
   13490:	cmp	r2, r1
   13494:	movcc	r1, #36	; 0x24
   13498:	strbcc	r1, [r5, r2]
   1349c:	ldr	r1, [sp, #88]	; 0x58
   134a0:	add	r2, r8, #2
   134a4:	add	r8, r8, #3
   134a8:	cmp	r2, r1
   134ac:	movcc	r1, #39	; 0x27
   134b0:	strbcc	r1, [r5, r2]
   134b4:	ldr	r1, [sp, #88]	; 0x58
   134b8:	add	r2, r8, #1
   134bc:	mov	r0, r3
   134c0:	cmp	r8, r1
   134c4:	movcc	r1, #92	; 0x5c
   134c8:	strbcc	r1, [r5, r8]
   134cc:	ldr	r1, [sp, #88]	; 0x58
   134d0:	cmp	r2, r1
   134d4:	bcs	134e8 <__mempcpy_chk@plt+0x240c>
   134d8:	uxtb	r3, r6
   134dc:	mov	r1, #48	; 0x30
   134e0:	orr	r3, r1, r3, lsr #6
   134e4:	strb	r3, [r5, r2]
   134e8:	ldr	r1, [sp, #88]	; 0x58
   134ec:	add	r2, r8, #2
   134f0:	add	r8, r8, #3
   134f4:	cmp	r2, r1
   134f8:	lsrcc	r3, r6, #3
   134fc:	movcc	r1, #6
   13500:	bficc	r3, r1, #3, #29
   13504:	mov	r1, #6
   13508:	bfi	r6, r1, #3, #29
   1350c:	strbcc	r3, [r5, r2]
   13510:	mov	r2, #1
   13514:	b	13524 <__mempcpy_chk@plt+0x2448>
   13518:	mov	r0, r3
   1351c:	mov	r1, #0
   13520:	str	r1, [fp, #-52]	; 0xffffffcc
   13524:	mov	ip, r2
   13528:	and	r1, r2, #1
   1352c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13530:	add	r3, r7, #1
   13534:	cmp	r2, r3
   13538:	bls	135c0 <__mempcpy_chk@plt+0x24e4>
   1353c:	cmp	r1, #0
   13540:	mvn	r5, lr
   13544:	movwne	r1, #1
   13548:	orr	r5, r5, r1
   1354c:	tst	r5, #1
   13550:	bne	13594 <__mempcpy_chk@plt+0x24b8>
   13554:	ldr	r1, [sp, #88]	; 0x58
   13558:	ldr	r5, [fp, #-84]	; 0xffffffac
   1355c:	mov	r2, r4
   13560:	ldr	r4, [sp, #88]	; 0x58
   13564:	ldr	r0, [sp, #24]
   13568:	mov	lr, #0
   1356c:	cmp	r8, r1
   13570:	movcc	r1, #39	; 0x27
   13574:	strbcc	r1, [r5, r8]
   13578:	add	r1, r8, #1
   1357c:	add	r8, r8, #2
   13580:	cmp	r1, r4
   13584:	movcc	r4, #39	; 0x27
   13588:	strbcc	r4, [r5, r1]
   1358c:	mov	r4, r2
   13590:	b	13598 <__mempcpy_chk@plt+0x24bc>
   13594:	ldr	r5, [fp, #-84]	; 0xffffffac
   13598:	ldr	r1, [sp, #88]	; 0x58
   1359c:	mov	r2, ip
   135a0:	cmp	r8, r1
   135a4:	ldr	r1, [sp, #72]	; 0x48
   135a8:	strbcc	r6, [r5, r8]
   135ac:	add	r8, r8, #1
   135b0:	ldrb	r6, [r1, r7]
   135b4:	mov	r7, r3
   135b8:	mov	r3, r0
   135bc:	b	13420 <__mempcpy_chk@plt+0x2344>
   135c0:	ldr	ip, [sp, #88]	; 0x58
   135c4:	cmp	r1, #0
   135c8:	movwne	r1, #1
   135cc:	str	r1, [fp, #-56]	; 0xffffffc8
   135d0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   135d4:	cmp	r0, #0
   135d8:	bne	13608 <__mempcpy_chk@plt+0x252c>
   135dc:	tst	lr, #1
   135e0:	beq	13608 <__mempcpy_chk@plt+0x252c>
   135e4:	cmp	r8, ip
   135e8:	mov	lr, #0
   135ec:	movcc	r0, #39	; 0x27
   135f0:	strbcc	r0, [r5, r8]
   135f4:	add	r0, r8, #1
   135f8:	add	r8, r8, #2
   135fc:	cmp	r0, ip
   13600:	movcc	r1, #39	; 0x27
   13604:	strbcc	r1, [r5, r0]
   13608:	mov	r1, r9
   1360c:	mov	r0, r6
   13610:	cmp	r8, ip
   13614:	strbcc	r0, [r5, r8]
   13618:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1361c:	add	r8, r8, #1
   13620:	and	r0, r0, r1
   13624:	str	r0, [fp, #-48]	; 0xffffffd0
   13628:	mov	r3, sl
   1362c:	add	r7, r7, #1
   13630:	b	12b20 <__mempcpy_chk@plt+0x1a44>
   13634:	mov	r9, #0
   13638:	b	1367c <__mempcpy_chk@plt+0x25a0>
   1363c:	mov	r9, #0
   13640:	cmp	r2, r4
   13644:	bls	1367c <__mempcpy_chk@plt+0x25a0>
   13648:	ldr	r4, [fp, #-80]	; 0xffffffb0
   1364c:	ldr	r1, [sp, #24]
   13650:	add	r0, r4, r7
   13654:	mov	r3, r1
   13658:	ldrb	r1, [r0, r1]
   1365c:	cmp	r1, #0
   13660:	beq	13688 <__mempcpy_chk@plt+0x25ac>
   13664:	add	r3, r3, #1
   13668:	add	r1, r7, r3
   1366c:	cmp	r1, r2
   13670:	mov	r1, r3
   13674:	bcc	13654 <__mempcpy_chk@plt+0x2578>
   13678:	b	13180 <__mempcpy_chk@plt+0x20a4>
   1367c:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13680:	ldr	r1, [sp, #24]
   13684:	b	13180 <__mempcpy_chk@plt+0x20a4>
   13688:	mov	r1, r3
   1368c:	b	13180 <__mempcpy_chk@plt+0x20a4>
   13690:	mov	r9, #0
   13694:	mov	r4, r1
   13698:	b	12e3c <__mempcpy_chk@plt+0x1d60>
   1369c:	mov	sl, r7
   136a0:	b	136a8 <__mempcpy_chk@plt+0x25cc>
   136a4:	mvn	sl, #0
   136a8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   136ac:	ldr	r2, [fp, #-76]	; 0xffffffb4
   136b0:	eor	r0, r1, #2
   136b4:	orr	r0, r0, r8
   136b8:	clz	r0, r0
   136bc:	lsr	r0, r0, #5
   136c0:	tst	r2, r0
   136c4:	bne	1376c <__mempcpy_chk@plt+0x2690>
   136c8:	subs	r0, r1, #2
   136cc:	movwne	r0, #1
   136d0:	orr	r0, r2, r0
   136d4:	tst	r0, #1
   136d8:	ldreq	r0, [sp, #60]	; 0x3c
   136dc:	ldreq	r1, [fp, #-48]	; 0xffffffd0
   136e0:	eoreq	r0, r0, #1
   136e4:	tsteq	r0, #1
   136e8:	bne	13800 <__mempcpy_chk@plt+0x2724>
   136ec:	tst	r1, #1
   136f0:	bne	137cc <__mempcpy_chk@plt+0x26f0>
   136f4:	ldr	r6, [sp, #56]	; 0x38
   136f8:	mov	r9, #0
   136fc:	cmp	r6, #0
   13700:	beq	137f8 <__mempcpy_chk@plt+0x271c>
   13704:	ldr	r0, [sp, #84]	; 0x54
   13708:	mov	r1, #0
   1370c:	mov	r7, #2
   13710:	cmp	ip, #0
   13714:	str	r1, [fp, #-48]	; 0xffffffd0
   13718:	mov	r1, #0
   1371c:	str	r1, [fp, #-76]	; 0xffffffb4
   13720:	beq	12888 <__mempcpy_chk@plt+0x17ac>
   13724:	b	13800 <__mempcpy_chk@plt+0x2724>
   13728:	ldr	r4, [fp, #-80]	; 0xffffffb0
   1372c:	ldr	r1, [fp, #12]
   13730:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13734:	mov	r5, r3
   13738:	mov	ip, r6
   1373c:	mov	r3, sl
   13740:	b	13790 <__mempcpy_chk@plt+0x26b4>
   13744:	tst	r4, #1
   13748:	ldr	r5, [fp, #-84]	; 0xffffffac
   1374c:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13750:	ldr	r1, [fp, #12]
   13754:	ldr	r3, [sp, #36]	; 0x24
   13758:	mov	r0, #2
   1375c:	movwne	r0, #4
   13760:	mov	r2, r0
   13764:	b	13790 <__mempcpy_chk@plt+0x26b4>
   13768:	ldr	ip, [sp, #88]	; 0x58
   1376c:	ldr	r1, [sp, #84]	; 0x54
   13770:	mov	r0, #2
   13774:	tst	r1, #1
   13778:	movwne	r0, #4
   1377c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13780:	ldr	r1, [fp, #12]
   13784:	mov	r3, sl
   13788:	cmp	r2, #2
   1378c:	moveq	r2, r0
   13790:	mov	r0, #0
   13794:	bic	r1, r1, #2
   13798:	str	r2, [sp]
   1379c:	mov	r2, r4
   137a0:	str	r0, [sp, #8]
   137a4:	ldr	r0, [sp, #76]	; 0x4c
   137a8:	str	r1, [sp, #4]
   137ac:	mov	r1, ip
   137b0:	str	r0, [sp, #12]
   137b4:	ldr	r0, [sp, #80]	; 0x50
   137b8:	str	r0, [sp, #16]
   137bc:	mov	r0, r5
   137c0:	bl	127fc <__mempcpy_chk@plt+0x1720>
   137c4:	mov	r8, r0
   137c8:	b	1384c <__mempcpy_chk@plt+0x2770>
   137cc:	mov	r0, #5
   137d0:	ldr	r1, [sp, #56]	; 0x38
   137d4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   137d8:	mov	r3, sl
   137dc:	str	r0, [sp]
   137e0:	ldr	r0, [fp, #12]
   137e4:	str	r0, [sp, #4]
   137e8:	ldr	r0, [fp, #16]
   137ec:	str	r0, [sp, #8]
   137f0:	ldr	r0, [sp, #76]	; 0x4c
   137f4:	b	137b0 <__mempcpy_chk@plt+0x26d4>
   137f8:	mov	r0, #0
   137fc:	str	r0, [fp, #-76]	; 0xffffffb4
   13800:	ldr	r1, [fp, #-88]	; 0xffffffa8
   13804:	cmp	r1, #0
   13808:	beq	13840 <__mempcpy_chk@plt+0x2764>
   1380c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13810:	tst	r0, #1
   13814:	bne	13840 <__mempcpy_chk@plt+0x2764>
   13818:	ldrb	r0, [r1]
   1381c:	cmp	r0, #0
   13820:	beq	13840 <__mempcpy_chk@plt+0x2764>
   13824:	add	r1, r1, #1
   13828:	cmp	r8, ip
   1382c:	strbcc	r0, [r5, r8]
   13830:	add	r8, r8, #1
   13834:	ldrb	r0, [r1], #1
   13838:	cmp	r0, #0
   1383c:	bne	13828 <__mempcpy_chk@plt+0x274c>
   13840:	cmp	r8, ip
   13844:	movcc	r0, #0
   13848:	strbcc	r0, [r5, r8]
   1384c:	mov	r0, r8
   13850:	sub	sp, fp, #28
   13854:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13858:	mov	r0, #4
   1385c:	b	1377c <__mempcpy_chk@plt+0x26a0>
   13860:	mov	r4, r1
   13864:	b	1376c <__mempcpy_chk@plt+0x2690>
   13868:	bl	110c4 <abort@plt>
   1386c:	mov	r3, r2
   13870:	mov	r2, #0
   13874:	b	13878 <__mempcpy_chk@plt+0x279c>
   13878:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1387c:	add	fp, sp, #28
   13880:	sub	sp, sp, #36	; 0x24
   13884:	movw	r8, #29032	; 0x7168
   13888:	cmp	r3, #0
   1388c:	mov	r4, r2
   13890:	str	r2, [sp, #24]
   13894:	mov	r5, r1
   13898:	mov	r6, r0
   1389c:	str	r0, [sp, #20]
   138a0:	movt	r8, #2
   138a4:	movne	r8, r3
   138a8:	bl	10fec <__errno_location@plt>
   138ac:	str	r0, [sp, #28]
   138b0:	ldr	r1, [r8, #40]	; 0x28
   138b4:	ldr	r2, [r8, #44]	; 0x2c
   138b8:	ldr	r7, [r0]
   138bc:	cmp	r4, #0
   138c0:	add	sl, r8, #8
   138c4:	mov	r0, #0
   138c8:	ldm	r8, {r3, r9}
   138cc:	orreq	r9, r9, #1
   138d0:	stm	sp, {r3, r9, sl}
   138d4:	str	r1, [sp, #12]
   138d8:	str	r2, [sp, #16]
   138dc:	mov	r1, #0
   138e0:	mov	r2, r6
   138e4:	mov	r3, r5
   138e8:	str	r7, [sp, #32]
   138ec:	mov	r7, r5
   138f0:	bl	127fc <__mempcpy_chk@plt+0x1720>
   138f4:	add	r4, r0, #1
   138f8:	mov	r5, r0
   138fc:	mov	r0, r4
   13900:	bl	149f0 <__mempcpy_chk@plt+0x3914>
   13904:	mov	r6, r0
   13908:	ldr	r0, [r8]
   1390c:	ldr	r2, [r8, #44]	; 0x2c
   13910:	ldr	r1, [r8, #40]	; 0x28
   13914:	mov	r3, r7
   13918:	stm	sp, {r0, r9, sl}
   1391c:	str	r2, [sp, #16]
   13920:	ldr	r2, [sp, #20]
   13924:	str	r1, [sp, #12]
   13928:	mov	r0, r6
   1392c:	mov	r1, r4
   13930:	bl	127fc <__mempcpy_chk@plt+0x1720>
   13934:	ldr	r0, [sp, #24]
   13938:	ldr	r1, [sp, #32]
   1393c:	ldr	r2, [sp, #28]
   13940:	cmp	r0, #0
   13944:	str	r1, [r2]
   13948:	strne	r5, [r0]
   1394c:	mov	r0, r6
   13950:	sub	sp, fp, #28
   13954:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13958:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1395c:	add	fp, sp, #24
   13960:	movw	r5, #28932	; 0x7104
   13964:	movw	r8, #28928	; 0x7100
   13968:	movt	r5, #2
   1396c:	movt	r8, #2
   13970:	ldr	r0, [r5]
   13974:	ldr	r4, [r8]
   13978:	cmp	r0, #2
   1397c:	blt	139a8 <__mempcpy_chk@plt+0x28cc>
   13980:	add	r7, r4, #12
   13984:	mov	r6, #0
   13988:	ldr	r0, [r7, r6, lsl #3]
   1398c:	bl	125a0 <__mempcpy_chk@plt+0x14c4>
   13990:	ldr	r1, [r5]
   13994:	add	r2, r6, #2
   13998:	add	r0, r6, #1
   1399c:	mov	r6, r0
   139a0:	cmp	r2, r1
   139a4:	blt	13988 <__mempcpy_chk@plt+0x28ac>
   139a8:	ldr	r0, [r4, #4]
   139ac:	movw	r9, #29080	; 0x7198
   139b0:	movw	r7, #28936	; 0x7108
   139b4:	movt	r9, #2
   139b8:	movt	r7, #2
   139bc:	cmp	r0, r9
   139c0:	beq	139d0 <__mempcpy_chk@plt+0x28f4>
   139c4:	bl	125a0 <__mempcpy_chk@plt+0x14c4>
   139c8:	mov	r0, #256	; 0x100
   139cc:	stm	r7, {r0, r9}
   139d0:	cmp	r4, r7
   139d4:	beq	139e4 <__mempcpy_chk@plt+0x2908>
   139d8:	mov	r0, r4
   139dc:	bl	125a0 <__mempcpy_chk@plt+0x14c4>
   139e0:	str	r7, [r8]
   139e4:	mov	r0, #1
   139e8:	str	r0, [r5]
   139ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   139f0:	movw	r3, #29032	; 0x7168
   139f4:	mvn	r2, #0
   139f8:	movt	r3, #2
   139fc:	b	13a00 <__mempcpy_chk@plt+0x2924>
   13a00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13a04:	add	fp, sp, #28
   13a08:	sub	sp, sp, #44	; 0x2c
   13a0c:	mov	r7, r3
   13a10:	str	r2, [sp, #36]	; 0x24
   13a14:	str	r1, [sp, #32]
   13a18:	mov	r5, r0
   13a1c:	bl	10fec <__errno_location@plt>
   13a20:	cmp	r5, #0
   13a24:	bmi	13b94 <__mempcpy_chk@plt+0x2ab8>
   13a28:	cmn	r5, #-2147483647	; 0x80000001
   13a2c:	beq	13b94 <__mempcpy_chk@plt+0x2ab8>
   13a30:	movw	r8, #28932	; 0x7104
   13a34:	movw	r4, #28928	; 0x7100
   13a38:	str	r0, [sp, #28]
   13a3c:	ldr	r0, [r0]
   13a40:	movt	r8, #2
   13a44:	movt	r4, #2
   13a48:	ldr	r1, [r8]
   13a4c:	ldr	r6, [r4]
   13a50:	str	r0, [sp, #24]
   13a54:	cmp	r1, r5
   13a58:	ble	13a64 <__mempcpy_chk@plt+0x2988>
   13a5c:	mov	sl, r6
   13a60:	b	13ad0 <__mempcpy_chk@plt+0x29f4>
   13a64:	movw	r9, #28936	; 0x7108
   13a68:	mov	r0, #8
   13a6c:	str	r1, [fp, #-32]	; 0xffffffe0
   13a70:	sub	r1, r5, r1
   13a74:	mvn	r3, #-2147483648	; 0x80000000
   13a78:	movt	r9, #2
   13a7c:	str	r0, [sp]
   13a80:	add	r2, r1, #1
   13a84:	sub	r1, fp, #32
   13a88:	subs	r0, r6, r9
   13a8c:	movne	r0, r6
   13a90:	bl	14b20 <__mempcpy_chk@plt+0x3a44>
   13a94:	mov	sl, r0
   13a98:	cmp	r6, r9
   13a9c:	str	r0, [r4]
   13aa0:	bne	13aac <__mempcpy_chk@plt+0x29d0>
   13aa4:	ldrd	r0, [r9]
   13aa8:	stm	sl, {r0, r1}
   13aac:	ldr	r1, [r8]
   13ab0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13ab4:	add	r0, sl, r1, lsl #3
   13ab8:	sub	r1, r2, r1
   13abc:	lsl	r2, r1, #3
   13ac0:	mov	r1, #0
   13ac4:	bl	11004 <memset@plt>
   13ac8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13acc:	str	r0, [r8]
   13ad0:	mov	r9, sl
   13ad4:	ldm	r7, {r0, r1}
   13ad8:	orr	r8, r1, #1
   13adc:	add	r1, r7, #8
   13ae0:	ldr	r2, [r7, #40]	; 0x28
   13ae4:	ldr	r3, [r7, #44]	; 0x2c
   13ae8:	ldr	r6, [r9, r5, lsl #3]!
   13aec:	str	r1, [sp, #20]
   13af0:	ldr	r4, [r9, #4]!
   13af4:	stm	sp, {r0, r8}
   13af8:	add	r0, sp, #8
   13afc:	stm	r0, {r1, r2, r3}
   13b00:	ldr	r2, [sp, #32]
   13b04:	ldr	r3, [sp, #36]	; 0x24
   13b08:	mov	r1, r6
   13b0c:	mov	r0, r4
   13b10:	bl	127fc <__mempcpy_chk@plt+0x1720>
   13b14:	cmp	r6, r0
   13b18:	bhi	13b7c <__mempcpy_chk@plt+0x2aa0>
   13b1c:	add	r6, r0, #1
   13b20:	movw	r0, #29080	; 0x7198
   13b24:	movt	r0, #2
   13b28:	str	r6, [sl, r5, lsl #3]
   13b2c:	cmp	r4, r0
   13b30:	beq	13b3c <__mempcpy_chk@plt+0x2a60>
   13b34:	mov	r0, r4
   13b38:	bl	125a0 <__mempcpy_chk@plt+0x14c4>
   13b3c:	mov	r0, r6
   13b40:	bl	149f0 <__mempcpy_chk@plt+0x3914>
   13b44:	str	r0, [r9]
   13b48:	mov	r4, r0
   13b4c:	add	r3, sp, #8
   13b50:	ldr	r0, [r7]
   13b54:	ldr	r1, [r7, #40]	; 0x28
   13b58:	ldr	r2, [r7, #44]	; 0x2c
   13b5c:	stm	sp, {r0, r8}
   13b60:	ldr	r0, [sp, #20]
   13b64:	stm	r3, {r0, r1, r2}
   13b68:	ldr	r2, [sp, #32]
   13b6c:	ldr	r3, [sp, #36]	; 0x24
   13b70:	mov	r0, r4
   13b74:	mov	r1, r6
   13b78:	bl	127fc <__mempcpy_chk@plt+0x1720>
   13b7c:	ldr	r0, [sp, #28]
   13b80:	ldr	r1, [sp, #24]
   13b84:	str	r1, [r0]
   13b88:	mov	r0, r4
   13b8c:	sub	sp, fp, #28
   13b90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b94:	bl	110c4 <abort@plt>
   13b98:	movw	r3, #29032	; 0x7168
   13b9c:	movt	r3, #2
   13ba0:	b	13a00 <__mempcpy_chk@plt+0x2924>
   13ba4:	movw	r3, #29032	; 0x7168
   13ba8:	mov	r1, r0
   13bac:	mov	r0, #0
   13bb0:	mvn	r2, #0
   13bb4:	movt	r3, #2
   13bb8:	b	13a00 <__mempcpy_chk@plt+0x2924>
   13bbc:	movw	r3, #29032	; 0x7168
   13bc0:	mov	r2, r1
   13bc4:	mov	r1, r0
   13bc8:	mov	r0, #0
   13bcc:	movt	r3, #2
   13bd0:	b	13a00 <__mempcpy_chk@plt+0x2924>
   13bd4:	push	{fp, lr}
   13bd8:	mov	fp, sp
   13bdc:	sub	sp, sp, #48	; 0x30
   13be0:	vmov.i32	q8, #0	; 0x00000000
   13be4:	mov	ip, #32
   13be8:	mov	r3, sp
   13bec:	mov	lr, r2
   13bf0:	cmp	r1, #10
   13bf4:	add	r2, r3, #16
   13bf8:	vst1.64	{d16-d17}, [r3], ip
   13bfc:	vst1.64	{d16-d17}, [r2]
   13c00:	vst1.64	{d16-d17}, [r3]
   13c04:	beq	13c24 <__mempcpy_chk@plt+0x2b48>
   13c08:	str	r1, [sp]
   13c0c:	mov	r3, sp
   13c10:	mov	r1, lr
   13c14:	mvn	r2, #0
   13c18:	bl	13a00 <__mempcpy_chk@plt+0x2924>
   13c1c:	mov	sp, fp
   13c20:	pop	{fp, pc}
   13c24:	bl	110c4 <abort@plt>
   13c28:	push	{r4, sl, fp, lr}
   13c2c:	add	fp, sp, #8
   13c30:	sub	sp, sp, #48	; 0x30
   13c34:	vmov.i32	q8, #0	; 0x00000000
   13c38:	mov	ip, r3
   13c3c:	mov	r3, sp
   13c40:	mov	lr, #32
   13c44:	cmp	r1, #10
   13c48:	add	r4, r3, #16
   13c4c:	vst1.64	{d16-d17}, [r3], lr
   13c50:	vst1.64	{d16-d17}, [r4]
   13c54:	vst1.64	{d16-d17}, [r3]
   13c58:	beq	13c78 <__mempcpy_chk@plt+0x2b9c>
   13c5c:	str	r1, [sp]
   13c60:	mov	r1, r2
   13c64:	mov	r3, sp
   13c68:	mov	r2, ip
   13c6c:	bl	13a00 <__mempcpy_chk@plt+0x2924>
   13c70:	sub	sp, fp, #8
   13c74:	pop	{r4, sl, fp, pc}
   13c78:	bl	110c4 <abort@plt>
   13c7c:	mov	r2, r1
   13c80:	mov	r1, r0
   13c84:	mov	r0, #0
   13c88:	b	13bd4 <__mempcpy_chk@plt+0x2af8>
   13c8c:	mov	r3, r2
   13c90:	mov	r2, r1
   13c94:	mov	r1, r0
   13c98:	mov	r0, #0
   13c9c:	b	13c28 <__mempcpy_chk@plt+0x2b4c>
   13ca0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13ca4:	add	fp, sp, #24
   13ca8:	sub	sp, sp, #48	; 0x30
   13cac:	movw	r8, #29032	; 0x7168
   13cb0:	mov	lr, r0
   13cb4:	mov	r3, sp
   13cb8:	mov	ip, r1
   13cbc:	movt	r8, #2
   13cc0:	mov	r1, r3
   13cc4:	ldm	r8!, {r0, r4, r5, r6, r7, r9}
   13cc8:	stmia	r1!, {r0, r4, r5, r6, r7, r9}
   13ccc:	ldm	r8, {r0, r4, r5, r6, r7, r9}
   13cd0:	stm	r1, {r0, r4, r5, r6, r7, r9}
   13cd4:	ubfx	r0, r2, #5, #3
   13cd8:	and	r2, r2, #31
   13cdc:	mov	r4, #1
   13ce0:	add	r0, r3, r0, lsl #2
   13ce4:	ldr	r1, [r0, #8]
   13ce8:	bic	r4, r4, r1, lsr r2
   13cec:	eor	r1, r1, r4, lsl r2
   13cf0:	mov	r2, ip
   13cf4:	str	r1, [r0, #8]
   13cf8:	mov	r0, #0
   13cfc:	mov	r1, lr
   13d00:	bl	13a00 <__mempcpy_chk@plt+0x2924>
   13d04:	sub	sp, fp, #24
   13d08:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13d0c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13d10:	add	fp, sp, #24
   13d14:	sub	sp, sp, #48	; 0x30
   13d18:	movw	lr, #29032	; 0x7168
   13d1c:	mov	ip, r0
   13d20:	mov	r3, sp
   13d24:	movt	lr, #2
   13d28:	mov	r2, r3
   13d2c:	ldm	lr!, {r0, r4, r5, r6, r7, r8}
   13d30:	stmia	r2!, {r0, r4, r5, r6, r7, r8}
   13d34:	ldm	lr, {r0, r4, r5, r6, r7, r8}
   13d38:	stm	r2, {r0, r4, r5, r6, r7, r8}
   13d3c:	ubfx	r0, r1, #5, #3
   13d40:	and	r1, r1, #31
   13d44:	mov	r7, #1
   13d48:	add	r0, r3, r0, lsl #2
   13d4c:	ldr	r2, [r0, #8]
   13d50:	bic	r7, r7, r2, lsr r1
   13d54:	eor	r1, r2, r7, lsl r1
   13d58:	mvn	r2, #0
   13d5c:	str	r1, [r0, #8]
   13d60:	mov	r0, #0
   13d64:	mov	r1, ip
   13d68:	bl	13a00 <__mempcpy_chk@plt+0x2924>
   13d6c:	sub	sp, fp, #24
   13d70:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13d74:	push	{r4, r5, r6, r7, fp, lr}
   13d78:	add	fp, sp, #16
   13d7c:	sub	sp, sp, #48	; 0x30
   13d80:	movw	lr, #29032	; 0x7168
   13d84:	mov	ip, r0
   13d88:	mov	r3, sp
   13d8c:	movt	lr, #2
   13d90:	mov	r2, r3
   13d94:	ldm	lr!, {r0, r1, r4, r5, r6, r7}
   13d98:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   13d9c:	ldm	lr, {r0, r1, r4, r5, r6, r7}
   13da0:	stm	r2, {r0, r1, r4, r5, r6, r7}
   13da4:	mov	r1, ip
   13da8:	mvn	r2, #0
   13dac:	ldr	r0, [sp, #12]
   13db0:	orr	r0, r0, #67108864	; 0x4000000
   13db4:	str	r0, [sp, #12]
   13db8:	mov	r0, #0
   13dbc:	bl	13a00 <__mempcpy_chk@plt+0x2924>
   13dc0:	sub	sp, fp, #16
   13dc4:	pop	{r4, r5, r6, r7, fp, pc}
   13dc8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13dcc:	add	fp, sp, #24
   13dd0:	sub	sp, sp, #48	; 0x30
   13dd4:	movw	r8, #29032	; 0x7168
   13dd8:	mov	ip, r1
   13ddc:	mov	lr, r0
   13de0:	mov	r3, sp
   13de4:	movt	r8, #2
   13de8:	mov	r2, r3
   13dec:	ldm	r8!, {r0, r1, r4, r5, r6, r7}
   13df0:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   13df4:	ldm	r8, {r0, r1, r4, r5, r6, r7}
   13df8:	stm	r2, {r0, r1, r4, r5, r6, r7}
   13dfc:	mov	r1, lr
   13e00:	mov	r2, ip
   13e04:	ldr	r0, [sp, #12]
   13e08:	orr	r0, r0, #67108864	; 0x4000000
   13e0c:	str	r0, [sp, #12]
   13e10:	mov	r0, #0
   13e14:	bl	13a00 <__mempcpy_chk@plt+0x2924>
   13e18:	sub	sp, fp, #24
   13e1c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13e20:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13e24:	add	fp, sp, #24
   13e28:	sub	sp, sp, #96	; 0x60
   13e2c:	vmov.i32	q8, #0	; 0x00000000
   13e30:	mov	lr, sp
   13e34:	mov	ip, r2
   13e38:	cmp	r1, #10
   13e3c:	add	r3, lr, #16
   13e40:	mov	r2, lr
   13e44:	vst1.64	{d16-d17}, [r3]
   13e48:	mov	r3, #28
   13e4c:	vst1.64	{d16-d17}, [r2], r3
   13e50:	vst1.32	{d16-d17}, [r2]
   13e54:	beq	13e94 <__mempcpy_chk@plt+0x2db8>
   13e58:	str	r1, [sp, #48]	; 0x30
   13e5c:	add	r3, sp, #48	; 0x30
   13e60:	ldm	lr!, {r2, r4, r5, r6, r7}
   13e64:	add	r1, r3, #4
   13e68:	stmia	r1!, {r2, r4, r5, r6, r7}
   13e6c:	ldm	lr, {r2, r4, r5, r6, r7, r8}
   13e70:	stm	r1, {r2, r4, r5, r6, r7, r8}
   13e74:	mvn	r2, #0
   13e78:	ldr	r1, [sp, #60]	; 0x3c
   13e7c:	orr	r1, r1, #67108864	; 0x4000000
   13e80:	str	r1, [sp, #60]	; 0x3c
   13e84:	mov	r1, ip
   13e88:	bl	13a00 <__mempcpy_chk@plt+0x2924>
   13e8c:	sub	sp, fp, #24
   13e90:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13e94:	bl	110c4 <abort@plt>
   13e98:	push	{fp, lr}
   13e9c:	mov	fp, sp
   13ea0:	sub	sp, sp, #8
   13ea4:	mvn	ip, #0
   13ea8:	str	ip, [sp]
   13eac:	bl	13eb8 <__mempcpy_chk@plt+0x2ddc>
   13eb0:	mov	sp, fp
   13eb4:	pop	{fp, pc}
   13eb8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13ebc:	add	fp, sp, #24
   13ec0:	sub	sp, sp, #48	; 0x30
   13ec4:	movw	ip, #29032	; 0x7168
   13ec8:	mov	lr, r3
   13ecc:	mov	r3, sp
   13ed0:	cmp	r1, #0
   13ed4:	movt	ip, #2
   13ed8:	cmpne	r2, #0
   13edc:	ldm	ip!, {r4, r5, r6, r7, r8, r9}
   13ee0:	stmia	r3!, {r4, r5, r6, r7, r8, r9}
   13ee4:	ldm	ip, {r4, r5, r6, r7, r8, r9}
   13ee8:	stm	r3, {r4, r5, r6, r7, r8, r9}
   13eec:	mov	r3, #10
   13ef0:	str	r3, [sp]
   13ef4:	bne	13efc <__mempcpy_chk@plt+0x2e20>
   13ef8:	bl	110c4 <abort@plt>
   13efc:	ldr	ip, [fp, #8]
   13f00:	str	r2, [sp, #44]	; 0x2c
   13f04:	str	r1, [sp, #40]	; 0x28
   13f08:	mov	r3, sp
   13f0c:	mov	r1, lr
   13f10:	mov	r2, ip
   13f14:	bl	13a00 <__mempcpy_chk@plt+0x2924>
   13f18:	sub	sp, fp, #24
   13f1c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13f20:	push	{fp, lr}
   13f24:	mov	fp, sp
   13f28:	sub	sp, sp, #8
   13f2c:	mov	r3, r2
   13f30:	mov	r2, r1
   13f34:	mov	r1, r0
   13f38:	mvn	r0, #0
   13f3c:	str	r0, [sp]
   13f40:	mov	r0, #0
   13f44:	bl	13eb8 <__mempcpy_chk@plt+0x2ddc>
   13f48:	mov	sp, fp
   13f4c:	pop	{fp, pc}
   13f50:	push	{fp, lr}
   13f54:	mov	fp, sp
   13f58:	sub	sp, sp, #8
   13f5c:	mov	ip, r2
   13f60:	mov	r2, r1
   13f64:	mov	r1, r0
   13f68:	str	r3, [sp]
   13f6c:	mov	r0, #0
   13f70:	mov	r3, ip
   13f74:	bl	13eb8 <__mempcpy_chk@plt+0x2ddc>
   13f78:	mov	sp, fp
   13f7c:	pop	{fp, pc}
   13f80:	movw	r3, #28944	; 0x7110
   13f84:	movt	r3, #2
   13f88:	b	13a00 <__mempcpy_chk@plt+0x2924>
   13f8c:	movw	r3, #28944	; 0x7110
   13f90:	mov	r2, r1
   13f94:	mov	r1, r0
   13f98:	mov	r0, #0
   13f9c:	movt	r3, #2
   13fa0:	b	13a00 <__mempcpy_chk@plt+0x2924>
   13fa4:	movw	r3, #28944	; 0x7110
   13fa8:	mvn	r2, #0
   13fac:	movt	r3, #2
   13fb0:	b	13a00 <__mempcpy_chk@plt+0x2924>
   13fb4:	movw	r3, #28944	; 0x7110
   13fb8:	mov	r1, r0
   13fbc:	mov	r0, #0
   13fc0:	mvn	r2, #0
   13fc4:	movt	r3, #2
   13fc8:	b	13a00 <__mempcpy_chk@plt+0x2924>
   13fcc:	push	{r4, r5, fp, lr}
   13fd0:	add	fp, sp, #8
   13fd4:	mov	r5, r0
   13fd8:	mov	r4, r1
   13fdc:	mov	r0, #0
   13fe0:	mov	r2, #5
   13fe4:	mov	r1, r5
   13fe8:	bl	10ee4 <dcgettext@plt>
   13fec:	cmp	r0, r5
   13ff0:	popne	{r4, r5, fp, pc}
   13ff4:	bl	15328 <__mempcpy_chk@plt+0x424c>
   13ff8:	ldrb	r1, [r0]
   13ffc:	and	r1, r1, #223	; 0xdf
   14000:	cmp	r1, #71	; 0x47
   14004:	beq	1406c <__mempcpy_chk@plt+0x2f90>
   14008:	cmp	r1, #85	; 0x55
   1400c:	bne	140c4 <__mempcpy_chk@plt+0x2fe8>
   14010:	ldrb	r1, [r0, #1]
   14014:	and	r1, r1, #223	; 0xdf
   14018:	cmp	r1, #84	; 0x54
   1401c:	bne	140c4 <__mempcpy_chk@plt+0x2fe8>
   14020:	ldrb	r1, [r0, #2]
   14024:	and	r1, r1, #223	; 0xdf
   14028:	cmp	r1, #70	; 0x46
   1402c:	bne	140c4 <__mempcpy_chk@plt+0x2fe8>
   14030:	ldrb	r1, [r0, #3]
   14034:	cmp	r1, #45	; 0x2d
   14038:	bne	140c4 <__mempcpy_chk@plt+0x2fe8>
   1403c:	ldrb	r1, [r0, #4]
   14040:	cmp	r1, #56	; 0x38
   14044:	bne	140c4 <__mempcpy_chk@plt+0x2fe8>
   14048:	ldrb	r0, [r0, #5]
   1404c:	cmp	r0, #0
   14050:	bne	140c4 <__mempcpy_chk@plt+0x2fe8>
   14054:	ldrb	r1, [r5]
   14058:	movw	r2, #24418	; 0x5f62
   1405c:	movw	r0, #24422	; 0x5f66
   14060:	movt	r2, #1
   14064:	movt	r0, #1
   14068:	b	140f4 <__mempcpy_chk@plt+0x3018>
   1406c:	ldrb	r1, [r0, #1]
   14070:	and	r1, r1, #223	; 0xdf
   14074:	cmp	r1, #66	; 0x42
   14078:	bne	140c4 <__mempcpy_chk@plt+0x2fe8>
   1407c:	ldrb	r1, [r0, #2]
   14080:	cmp	r1, #49	; 0x31
   14084:	bne	140c4 <__mempcpy_chk@plt+0x2fe8>
   14088:	ldrb	r1, [r0, #3]
   1408c:	cmp	r1, #56	; 0x38
   14090:	bne	140c4 <__mempcpy_chk@plt+0x2fe8>
   14094:	ldrb	r1, [r0, #4]
   14098:	cmp	r1, #48	; 0x30
   1409c:	bne	140c4 <__mempcpy_chk@plt+0x2fe8>
   140a0:	ldrb	r1, [r0, #5]
   140a4:	cmp	r1, #51	; 0x33
   140a8:	bne	140c4 <__mempcpy_chk@plt+0x2fe8>
   140ac:	ldrb	r1, [r0, #6]
   140b0:	cmp	r1, #48	; 0x30
   140b4:	bne	140c4 <__mempcpy_chk@plt+0x2fe8>
   140b8:	ldrb	r0, [r0, #7]
   140bc:	cmp	r0, #0
   140c0:	beq	140e0 <__mempcpy_chk@plt+0x3004>
   140c4:	movw	r1, #24412	; 0x5f5c
   140c8:	movw	r0, #24416	; 0x5f60
   140cc:	cmp	r4, #9
   140d0:	movt	r1, #1
   140d4:	movt	r0, #1
   140d8:	moveq	r0, r1
   140dc:	pop	{r4, r5, fp, pc}
   140e0:	ldrb	r1, [r5]
   140e4:	movw	r2, #24426	; 0x5f6a
   140e8:	movw	r0, #24430	; 0x5f6e
   140ec:	movt	r2, #1
   140f0:	movt	r0, #1
   140f4:	cmp	r1, #96	; 0x60
   140f8:	moveq	r0, r2
   140fc:	pop	{r4, r5, fp, pc}
   14100:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14104:	add	fp, sp, #28
   14108:	sub	sp, sp, #60	; 0x3c
   1410c:	movw	r9, #29336	; 0x7298
   14110:	mov	r5, r0
   14114:	movw	r4, #29344	; 0x72a0
   14118:	movw	r6, #29340	; 0x729c
   1411c:	mov	r7, r3
   14120:	mov	r8, r2
   14124:	mov	sl, r1
   14128:	movt	r9, #2
   1412c:	movt	r4, #2
   14130:	movt	r6, #2
   14134:	ldrb	r0, [r9]
   14138:	cmp	r0, #0
   1413c:	bne	141c0 <__mempcpy_chk@plt+0x30e4>
   14140:	str	r5, [sp, #8]
   14144:	mov	r5, r8
   14148:	mov	r8, r6
   1414c:	bl	15328 <__mempcpy_chk@plt+0x424c>
   14150:	movw	r1, #24520	; 0x5fc8
   14154:	mov	r6, r0
   14158:	movt	r1, #1
   1415c:	bl	10e78 <strcmp@plt>
   14160:	clz	r1, r0
   14164:	cmp	r0, #0
   14168:	lsr	r1, r1, #5
   1416c:	str	r1, [r8]
   14170:	beq	141a8 <__mempcpy_chk@plt+0x30cc>
   14174:	movw	r1, #24520	; 0x5fc8
   14178:	mov	r0, r6
   1417c:	movt	r1, #1
   14180:	bl	10f80 <iconv_open@plt>
   14184:	cmn	r0, #1
   14188:	str	r0, [r4]
   1418c:	bne	141a8 <__mempcpy_chk@plt+0x30cc>
   14190:	movw	r0, #24526	; 0x5fce
   14194:	movw	r1, #24520	; 0x5fc8
   14198:	movt	r0, #1
   1419c:	movt	r1, #1
   141a0:	bl	10f80 <iconv_open@plt>
   141a4:	str	r0, [r4]
   141a8:	mov	r8, r5
   141ac:	ldr	r5, [sp, #8]
   141b0:	movw	r6, #29340	; 0x729c
   141b4:	mov	r0, #1
   141b8:	movt	r6, #2
   141bc:	strb	r0, [r9]
   141c0:	ldr	r0, [r6]
   141c4:	cmp	r0, #0
   141c8:	ldreq	r1, [r4]
   141cc:	cmneq	r1, #1
   141d0:	beq	141e8 <__mempcpy_chk@plt+0x310c>
   141d4:	cmp	r5, #127	; 0x7f
   141d8:	bhi	141f4 <__mempcpy_chk@plt+0x3118>
   141dc:	strb	r5, [fp, #-34]	; 0xffffffde
   141e0:	mov	r1, #1
   141e4:	b	14214 <__mempcpy_chk@plt+0x3138>
   141e8:	movw	r1, #24532	; 0x5fd4
   141ec:	movt	r1, #1
   141f0:	b	142e8 <__mempcpy_chk@plt+0x320c>
   141f4:	sub	r0, fp, #34	; 0x22
   141f8:	mov	r1, r5
   141fc:	mov	r2, #6
   14200:	bl	14428 <__mempcpy_chk@plt+0x334c>
   14204:	cmp	r0, #0
   14208:	bmi	142e0 <__mempcpy_chk@plt+0x3204>
   1420c:	mov	r1, r0
   14210:	ldr	r0, [r6]
   14214:	cmp	r0, #0
   14218:	beq	1422c <__mempcpy_chk@plt+0x3150>
   1421c:	sub	r0, fp, #34	; 0x22
   14220:	mov	r2, r7
   14224:	blx	sl
   14228:	b	142f4 <__mempcpy_chk@plt+0x3218>
   1422c:	sub	r0, fp, #34	; 0x22
   14230:	mov	r9, sl
   14234:	str	r1, [sp, #20]
   14238:	add	sl, sp, #29
   1423c:	add	r6, sp, #12
   14240:	add	r1, sp, #24
   14244:	add	r2, sp, #20
   14248:	add	r3, sp, #16
   1424c:	str	r0, [sp, #24]
   14250:	mov	r0, #25
   14254:	str	sl, [sp, #16]
   14258:	str	r6, [sp]
   1425c:	str	r0, [sp, #12]
   14260:	ldr	r0, [r4]
   14264:	bl	10e6c <iconv@plt>
   14268:	cmn	r0, #1
   1426c:	beq	142d4 <__mempcpy_chk@plt+0x31f8>
   14270:	ldr	r1, [sp, #20]
   14274:	cmp	r1, #0
   14278:	bne	142d4 <__mempcpy_chk@plt+0x31f8>
   1427c:	cmp	r0, #0
   14280:	beq	1429c <__mempcpy_chk@plt+0x31c0>
   14284:	ldr	r0, [sp, #16]
   14288:	sub	r0, r0, sl
   1428c:	cmp	r0, #1
   14290:	ldrbeq	r0, [sp, #29]
   14294:	cmpeq	r0, #63	; 0x3f
   14298:	beq	142d4 <__mempcpy_chk@plt+0x31f8>
   1429c:	ldr	r0, [r4]
   142a0:	add	r3, sp, #16
   142a4:	mov	r1, #0
   142a8:	mov	r2, #0
   142ac:	str	r6, [sp]
   142b0:	bl	10e6c <iconv@plt>
   142b4:	cmn	r0, #1
   142b8:	beq	142d4 <__mempcpy_chk@plt+0x31f8>
   142bc:	ldr	r0, [sp, #16]
   142c0:	mov	r2, r7
   142c4:	sub	r1, r0, sl
   142c8:	mov	r0, sl
   142cc:	blx	r9
   142d0:	b	142f4 <__mempcpy_chk@plt+0x3218>
   142d4:	mov	r0, r5
   142d8:	mov	r1, #0
   142dc:	b	142ec <__mempcpy_chk@plt+0x3210>
   142e0:	movw	r1, #24558	; 0x5fee
   142e4:	movt	r1, #1
   142e8:	mov	r0, r5
   142ec:	mov	r2, r7
   142f0:	blx	r8
   142f4:	sub	sp, fp, #28
   142f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   142fc:	push	{fp, lr}
   14300:	mov	fp, sp
   14304:	mov	r3, r2
   14308:	mov	r2, r1
   1430c:	mov	r1, #1
   14310:	bl	10f14 <fwrite@plt>
   14314:	mov	r0, #0
   14318:	pop	{fp, pc}
   1431c:	push	{fp, lr}
   14320:	mov	fp, sp
   14324:	mov	ip, r0
   14328:	movw	r0, #17388	; 0x43ec
   1432c:	movw	r3, #17248	; 0x4360
   14330:	cmp	r2, #0
   14334:	mov	lr, r1
   14338:	movw	r1, #17148	; 0x42fc
   1433c:	movt	r0, #1
   14340:	movt	r3, #1
   14344:	movt	r1, #1
   14348:	moveq	r3, r0
   1434c:	mov	r0, lr
   14350:	mov	r2, r3
   14354:	mov	r3, ip
   14358:	pop	{fp, lr}
   1435c:	b	14100 <__mempcpy_chk@plt+0x3024>
   14360:	push	{r4, r5, r6, sl, fp, lr}
   14364:	add	fp, sp, #16
   14368:	sub	sp, sp, #8
   1436c:	mov	r4, r0
   14370:	cmp	r1, #0
   14374:	beq	143b8 <__mempcpy_chk@plt+0x32dc>
   14378:	mov	r5, r1
   1437c:	movw	r1, #24626	; 0x6032
   14380:	mov	r0, #0
   14384:	mov	r2, #5
   14388:	movt	r1, #1
   1438c:	bl	10ee4 <dcgettext@plt>
   14390:	mov	r6, r0
   14394:	mov	r0, #0
   14398:	mov	r1, r5
   1439c:	mov	r2, #5
   143a0:	bl	10ee4 <dcgettext@plt>
   143a4:	str	r0, [sp]
   143a8:	mov	r0, #1
   143ac:	mov	r1, #0
   143b0:	mov	r2, r6
   143b4:	b	143d8 <__mempcpy_chk@plt+0x32fc>
   143b8:	movw	r1, #24581	; 0x6005
   143bc:	mov	r0, #0
   143c0:	mov	r2, #5
   143c4:	movt	r1, #1
   143c8:	bl	10ee4 <dcgettext@plt>
   143cc:	mov	r2, r0
   143d0:	mov	r0, #1
   143d4:	mov	r1, #0
   143d8:	mov	r3, r4
   143dc:	bl	10f5c <error@plt>
   143e0:	mvn	r0, #0
   143e4:	sub	sp, fp, #16
   143e8:	pop	{r4, r5, r6, sl, fp, pc}
   143ec:	push	{fp, lr}
   143f0:	mov	fp, sp
   143f4:	mov	r3, r0
   143f8:	movw	r0, #24675	; 0x6063
   143fc:	mov	r1, r2
   14400:	movw	r2, #24682	; 0x606a
   14404:	movt	r0, #1
   14408:	cmp	r3, #65536	; 0x10000
   1440c:	movt	r2, #1
   14410:	movcc	r2, r0
   14414:	mov	r0, r1
   14418:	mov	r1, #1
   1441c:	bl	11034 <__fprintf_chk@plt>
   14420:	mvn	r0, #0
   14424:	pop	{fp, pc}
   14428:	push	{fp, lr}
   1442c:	mov	fp, sp
   14430:	mvn	r3, #1
   14434:	cmp	r1, #128	; 0x80
   14438:	bcc	144f8 <__mempcpy_chk@plt+0x341c>
   1443c:	mov	ip, #2
   14440:	cmp	r1, #2048	; 0x800
   14444:	bcs	144bc <__mempcpy_chk@plt+0x33e0>
   14448:	cmp	ip, r2
   1444c:	mvn	r3, #1
   14450:	bgt	144f8 <__mempcpy_chk@plt+0x341c>
   14454:	cmp	ip, #2
   14458:	beq	1449c <__mempcpy_chk@plt+0x33c0>
   1445c:	cmp	ip, #3
   14460:	beq	14484 <__mempcpy_chk@plt+0x33a8>
   14464:	cmp	ip, #4
   14468:	bne	144b4 <__mempcpy_chk@plt+0x33d8>
   1446c:	mov	r2, #2
   14470:	mov	r3, r1
   14474:	bfi	r3, r2, #6, #26
   14478:	mov	r2, #65536	; 0x10000
   1447c:	orr	r1, r2, r1, lsr #6
   14480:	strb	r3, [r0, #3]
   14484:	mov	r2, #2
   14488:	mov	r3, r1
   1448c:	bfi	r3, r2, #6, #26
   14490:	mov	r2, #2048	; 0x800
   14494:	orr	r1, r2, r1, lsr #6
   14498:	strb	r3, [r0, #2]
   1449c:	mov	r2, #192	; 0xc0
   144a0:	orr	r2, r2, r1, lsr #6
   144a4:	strb	r2, [r0]
   144a8:	mov	r2, #2
   144ac:	bfi	r1, r2, #6, #26
   144b0:	strb	r1, [r0, #1]
   144b4:	mov	r3, ip
   144b8:	b	144f8 <__mempcpy_chk@plt+0x341c>
   144bc:	mov	r3, #0
   144c0:	cmp	r3, r1, lsr #16
   144c4:	bne	144e4 <__mempcpy_chk@plt+0x3408>
   144c8:	mov	lr, r1
   144cc:	mov	ip, #3
   144d0:	mvn	r3, #0
   144d4:	bfc	lr, #0, #11
   144d8:	cmp	lr, #55296	; 0xd800
   144dc:	bne	14448 <__mempcpy_chk@plt+0x336c>
   144e0:	b	144f8 <__mempcpy_chk@plt+0x341c>
   144e4:	lsr	lr, r1, #16
   144e8:	mvn	r3, #0
   144ec:	mov	ip, #4
   144f0:	cmp	lr, #16
   144f4:	bls	14448 <__mempcpy_chk@plt+0x336c>
   144f8:	mov	r0, r3
   144fc:	pop	{fp, pc}
   14500:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14504:	add	fp, sp, #24
   14508:	sub	sp, sp, #32
   1450c:	ldr	r6, [fp, #12]
   14510:	ldr	r7, [fp, #8]
   14514:	mov	r4, r2
   14518:	mov	r8, r0
   1451c:	cmp	r1, #0
   14520:	beq	14548 <__mempcpy_chk@plt+0x346c>
   14524:	movw	r2, #24689	; 0x6071
   14528:	mov	r5, r1
   1452c:	str	r3, [sp, #4]
   14530:	str	r4, [sp]
   14534:	mov	r0, r8
   14538:	mov	r1, #1
   1453c:	movt	r2, #1
   14540:	mov	r3, r5
   14544:	b	14560 <__mempcpy_chk@plt+0x3484>
   14548:	movw	r2, #24701	; 0x607d
   1454c:	str	r3, [sp]
   14550:	mov	r0, r8
   14554:	mov	r1, #1
   14558:	mov	r3, r4
   1455c:	movt	r2, #1
   14560:	bl	11034 <__fprintf_chk@plt>
   14564:	movw	r1, #24708	; 0x6084
   14568:	mov	r0, #0
   1456c:	mov	r2, #5
   14570:	movt	r1, #1
   14574:	bl	10ee4 <dcgettext@plt>
   14578:	movw	r2, #25426	; 0x6352
   1457c:	mov	r3, r0
   14580:	movw	r0, #2022	; 0x7e6
   14584:	mov	r1, #1
   14588:	movt	r2, #1
   1458c:	str	r0, [sp]
   14590:	mov	r0, r8
   14594:	bl	11034 <__fprintf_chk@plt>
   14598:	movw	r4, #22059	; 0x562b
   1459c:	mov	r1, r8
   145a0:	movt	r4, #1
   145a4:	mov	r0, r4
   145a8:	bl	10e54 <fputs_unlocked@plt>
   145ac:	movw	r1, #24712	; 0x6088
   145b0:	mov	r0, #0
   145b4:	mov	r2, #5
   145b8:	movt	r1, #1
   145bc:	bl	10ee4 <dcgettext@plt>
   145c0:	movw	r3, #24883	; 0x6133
   145c4:	mov	r2, r0
   145c8:	mov	r0, r8
   145cc:	mov	r1, #1
   145d0:	movt	r3, #1
   145d4:	bl	11034 <__fprintf_chk@plt>
   145d8:	mov	r0, r4
   145dc:	mov	r1, r8
   145e0:	bl	10e54 <fputs_unlocked@plt>
   145e4:	cmp	r6, #9
   145e8:	bhi	1464c <__mempcpy_chk@plt+0x3570>
   145ec:	add	r0, pc, #0
   145f0:	ldr	pc, [r0, r6, lsl #2]
   145f4:	andeq	r4, r1, r4, lsr #16
   145f8:	andeq	r4, r1, ip, lsl r6
   145fc:	andeq	r4, r1, r8, asr r6
   14600:	andeq	r4, r1, r0, lsl #13
   14604:	andeq	r4, r1, r8, lsr #13
   14608:	ldrdeq	r4, [r1], -r0
   1460c:	strdeq	r4, [r1], -r8
   14610:	andeq	r4, r1, r0, lsr r7
   14614:	ldrdeq	r4, [r1], -r0
   14618:	andeq	r4, r1, r8, ror r7
   1461c:	movw	r1, #24917	; 0x6155
   14620:	mov	r0, #0
   14624:	mov	r2, #5
   14628:	movt	r1, #1
   1462c:	bl	10ee4 <dcgettext@plt>
   14630:	ldr	r3, [r7]
   14634:	mov	r2, r0
   14638:	mov	r0, r8
   1463c:	mov	r1, #1
   14640:	sub	sp, fp, #24
   14644:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   14648:	b	11034 <__fprintf_chk@plt>
   1464c:	movw	r1, #25236	; 0x6294
   14650:	movt	r1, #1
   14654:	b	14780 <__mempcpy_chk@plt+0x36a4>
   14658:	movw	r1, #24933	; 0x6165
   1465c:	mov	r0, #0
   14660:	mov	r2, #5
   14664:	movt	r1, #1
   14668:	bl	10ee4 <dcgettext@plt>
   1466c:	mov	r2, r0
   14670:	ldr	r3, [r7]
   14674:	ldr	r0, [r7, #4]
   14678:	str	r0, [sp]
   1467c:	b	1476c <__mempcpy_chk@plt+0x3690>
   14680:	movw	r1, #24956	; 0x617c
   14684:	mov	r0, #0
   14688:	mov	r2, #5
   1468c:	movt	r1, #1
   14690:	bl	10ee4 <dcgettext@plt>
   14694:	mov	r2, r0
   14698:	ldr	r3, [r7]
   1469c:	ldmib	r7, {r0, r1}
   146a0:	stm	sp, {r0, r1}
   146a4:	b	1476c <__mempcpy_chk@plt+0x3690>
   146a8:	movw	r1, #24984	; 0x6198
   146ac:	mov	r0, #0
   146b0:	mov	r2, #5
   146b4:	movt	r1, #1
   146b8:	bl	10ee4 <dcgettext@plt>
   146bc:	ldr	r3, [r7]
   146c0:	mov	r2, r0
   146c4:	ldmib	r7, {r0, r1, r7}
   146c8:	stm	sp, {r0, r1, r7}
   146cc:	b	1476c <__mempcpy_chk@plt+0x3690>
   146d0:	movw	r1, #25016	; 0x61b8
   146d4:	mov	r0, #0
   146d8:	mov	r2, #5
   146dc:	movt	r1, #1
   146e0:	bl	10ee4 <dcgettext@plt>
   146e4:	ldr	r3, [r7]
   146e8:	mov	r2, r0
   146ec:	ldmib	r7, {r0, r1, r6, r7}
   146f0:	stm	sp, {r0, r1, r6, r7}
   146f4:	b	1476c <__mempcpy_chk@plt+0x3690>
   146f8:	movw	r1, #25052	; 0x61dc
   146fc:	mov	r0, #0
   14700:	mov	r2, #5
   14704:	movt	r1, #1
   14708:	bl	10ee4 <dcgettext@plt>
   1470c:	mov	r2, r0
   14710:	ldr	r3, [r7]
   14714:	ldmib	r7, {r0, r1, r6}
   14718:	ldr	r5, [r7, #16]
   1471c:	ldr	r7, [r7, #20]
   14720:	stm	sp, {r0, r1, r6}
   14724:	str	r5, [sp, #12]
   14728:	str	r7, [sp, #16]
   1472c:	b	1476c <__mempcpy_chk@plt+0x3690>
   14730:	movw	r1, #25092	; 0x6204
   14734:	mov	r0, #0
   14738:	mov	r2, #5
   1473c:	movt	r1, #1
   14740:	bl	10ee4 <dcgettext@plt>
   14744:	mov	r2, r0
   14748:	ldr	r3, [r7]
   1474c:	ldmib	r7, {r0, r1, r6}
   14750:	ldr	r5, [r7, #16]
   14754:	ldr	r4, [r7, #20]
   14758:	ldr	r7, [r7, #24]
   1475c:	stm	sp, {r0, r1, r6}
   14760:	str	r5, [sp, #12]
   14764:	str	r4, [sp, #16]
   14768:	str	r7, [sp, #20]
   1476c:	mov	r0, r8
   14770:	mov	r1, #1
   14774:	b	14820 <__mempcpy_chk@plt+0x3744>
   14778:	movw	r1, #25184	; 0x6260
   1477c:	movt	r1, #1
   14780:	mov	r0, #0
   14784:	mov	r2, #5
   14788:	bl	10ee4 <dcgettext@plt>
   1478c:	mov	ip, r0
   14790:	ldr	r3, [r7]
   14794:	ldr	r0, [r7, #4]
   14798:	ldr	r1, [r7, #8]
   1479c:	ldr	r6, [r7, #12]
   147a0:	ldr	r5, [r7, #16]
   147a4:	ldr	r4, [r7, #20]
   147a8:	ldr	r2, [r7, #24]
   147ac:	ldr	lr, [r7, #28]
   147b0:	ldr	r7, [r7, #32]
   147b4:	stm	sp, {r0, r1, r6}
   147b8:	str	r5, [sp, #12]
   147bc:	str	r4, [sp, #16]
   147c0:	str	r2, [sp, #20]
   147c4:	str	lr, [sp, #24]
   147c8:	str	r7, [sp, #28]
   147cc:	b	14814 <__mempcpy_chk@plt+0x3738>
   147d0:	movw	r1, #25136	; 0x6230
   147d4:	mov	r0, #0
   147d8:	mov	r2, #5
   147dc:	movt	r1, #1
   147e0:	bl	10ee4 <dcgettext@plt>
   147e4:	mov	ip, r0
   147e8:	ldr	r3, [r7]
   147ec:	ldmib	r7, {r0, r1, r6}
   147f0:	ldr	r5, [r7, #16]
   147f4:	ldr	r4, [r7, #20]
   147f8:	ldr	r2, [r7, #24]
   147fc:	ldr	r7, [r7, #28]
   14800:	stm	sp, {r0, r1, r6}
   14804:	str	r5, [sp, #12]
   14808:	str	r4, [sp, #16]
   1480c:	str	r2, [sp, #20]
   14810:	str	r7, [sp, #24]
   14814:	mov	r0, r8
   14818:	mov	r1, #1
   1481c:	mov	r2, ip
   14820:	bl	11034 <__fprintf_chk@plt>
   14824:	sub	sp, fp, #24
   14828:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1482c:	push	{r4, sl, fp, lr}
   14830:	add	fp, sp, #8
   14834:	sub	sp, sp, #8
   14838:	ldr	ip, [fp, #8]
   1483c:	mov	lr, #0
   14840:	ldr	r4, [ip, lr, lsl #2]
   14844:	add	lr, lr, #1
   14848:	cmp	r4, #0
   1484c:	bne	14840 <__mempcpy_chk@plt+0x3764>
   14850:	sub	r4, lr, #1
   14854:	str	ip, [sp]
   14858:	str	r4, [sp, #4]
   1485c:	bl	14500 <__mempcpy_chk@plt+0x3424>
   14860:	sub	sp, fp, #8
   14864:	pop	{r4, sl, fp, pc}
   14868:	push	{r4, r5, fp, lr}
   1486c:	add	fp, sp, #8
   14870:	sub	sp, sp, #48	; 0x30
   14874:	ldr	r4, [fp, #8]
   14878:	mov	ip, #0
   1487c:	add	lr, sp, #8
   14880:	ldr	r5, [r4]
   14884:	cmp	r5, #0
   14888:	str	r5, [lr, ip, lsl #2]
   1488c:	beq	148a4 <__mempcpy_chk@plt+0x37c8>
   14890:	add	ip, ip, #1
   14894:	add	r4, r4, #4
   14898:	cmp	ip, #10
   1489c:	bne	14880 <__mempcpy_chk@plt+0x37a4>
   148a0:	mov	ip, #10
   148a4:	str	lr, [sp]
   148a8:	str	ip, [sp, #4]
   148ac:	bl	14500 <__mempcpy_chk@plt+0x3424>
   148b0:	sub	sp, fp, #8
   148b4:	pop	{r4, r5, fp, pc}
   148b8:	push	{fp, lr}
   148bc:	mov	fp, sp
   148c0:	sub	sp, sp, #8
   148c4:	add	ip, fp, #8
   148c8:	str	ip, [sp, #4]
   148cc:	str	ip, [sp]
   148d0:	bl	14868 <__mempcpy_chk@plt+0x378c>
   148d4:	mov	sp, fp
   148d8:	pop	{fp, pc}
   148dc:	push	{fp, lr}
   148e0:	mov	fp, sp
   148e4:	movw	r0, #29004	; 0x714c
   148e8:	movt	r0, #2
   148ec:	ldr	r1, [r0]
   148f0:	movw	r0, #22059	; 0x562b
   148f4:	movt	r0, #1
   148f8:	bl	10e54 <fputs_unlocked@plt>
   148fc:	movw	r1, #25296	; 0x62d0
   14900:	mov	r0, #0
   14904:	mov	r2, #5
   14908:	movt	r1, #1
   1490c:	bl	10ee4 <dcgettext@plt>
   14910:	movw	r2, #25316	; 0x62e4
   14914:	mov	r1, r0
   14918:	mov	r0, #1
   1491c:	movt	r2, #1
   14920:	bl	11010 <__printf_chk@plt>
   14924:	movw	r1, #25338	; 0x62fa
   14928:	mov	r0, #0
   1492c:	mov	r2, #5
   14930:	movt	r1, #1
   14934:	bl	10ee4 <dcgettext@plt>
   14938:	movw	r2, #23441	; 0x5b91
   1493c:	movw	r3, #23661	; 0x5c6d
   14940:	mov	r1, r0
   14944:	mov	r0, #1
   14948:	movt	r2, #1
   1494c:	movt	r3, #1
   14950:	bl	11010 <__printf_chk@plt>
   14954:	movw	r1, #25358	; 0x630e
   14958:	mov	r0, #0
   1495c:	mov	r2, #5
   14960:	movt	r1, #1
   14964:	bl	10ee4 <dcgettext@plt>
   14968:	movw	r2, #25397	; 0x6335
   1496c:	mov	r1, r0
   14970:	mov	r0, #1
   14974:	movt	r2, #1
   14978:	pop	{fp, lr}
   1497c:	b	11010 <__printf_chk@plt>
   14980:	b	14984 <__mempcpy_chk@plt+0x38a8>
   14984:	push	{r4, r5, r6, sl, fp, lr}
   14988:	add	fp, sp, #16
   1498c:	mov	r4, r2
   14990:	mov	r5, r1
   14994:	mov	r6, r0
   14998:	bl	153c4 <__mempcpy_chk@plt+0x42e8>
   1499c:	cmp	r0, #0
   149a0:	popne	{r4, r5, r6, sl, fp, pc}
   149a4:	cmp	r6, #0
   149a8:	beq	149bc <__mempcpy_chk@plt+0x38e0>
   149ac:	cmp	r5, #0
   149b0:	cmpne	r4, #0
   149b4:	bne	149bc <__mempcpy_chk@plt+0x38e0>
   149b8:	pop	{r4, r5, r6, sl, fp, pc}
   149bc:	bl	14dec <__mempcpy_chk@plt+0x3d10>
   149c0:	push	{fp, lr}
   149c4:	mov	fp, sp
   149c8:	bl	14fe0 <__mempcpy_chk@plt+0x3f04>
   149cc:	cmp	r0, #0
   149d0:	popne	{fp, pc}
   149d4:	bl	14dec <__mempcpy_chk@plt+0x3d10>
   149d8:	push	{fp, lr}
   149dc:	mov	fp, sp
   149e0:	bl	14fe0 <__mempcpy_chk@plt+0x3f04>
   149e4:	cmp	r0, #0
   149e8:	popne	{fp, pc}
   149ec:	bl	14dec <__mempcpy_chk@plt+0x3d10>
   149f0:	push	{fp, lr}
   149f4:	mov	fp, sp
   149f8:	bl	14fe0 <__mempcpy_chk@plt+0x3f04>
   149fc:	cmp	r0, #0
   14a00:	popne	{fp, pc}
   14a04:	bl	14dec <__mempcpy_chk@plt+0x3d10>
   14a08:	push	{r4, r5, fp, lr}
   14a0c:	add	fp, sp, #8
   14a10:	mov	r4, r1
   14a14:	mov	r5, r0
   14a18:	bl	15010 <__mempcpy_chk@plt+0x3f34>
   14a1c:	cmp	r0, #0
   14a20:	popne	{r4, r5, fp, pc}
   14a24:	cmp	r5, #0
   14a28:	beq	14a38 <__mempcpy_chk@plt+0x395c>
   14a2c:	cmp	r4, #0
   14a30:	bne	14a38 <__mempcpy_chk@plt+0x395c>
   14a34:	pop	{r4, r5, fp, pc}
   14a38:	bl	14dec <__mempcpy_chk@plt+0x3d10>
   14a3c:	push	{fp, lr}
   14a40:	mov	fp, sp
   14a44:	cmp	r1, #0
   14a48:	orreq	r1, r1, #1
   14a4c:	bl	15010 <__mempcpy_chk@plt+0x3f34>
   14a50:	cmp	r0, #0
   14a54:	popne	{fp, pc}
   14a58:	bl	14dec <__mempcpy_chk@plt+0x3d10>
   14a5c:	push	{fp, lr}
   14a60:	mov	fp, sp
   14a64:	clz	r3, r2
   14a68:	lsr	ip, r3, #5
   14a6c:	clz	r3, r1
   14a70:	lsr	r3, r3, #5
   14a74:	orrs	r3, r3, ip
   14a78:	movwne	r1, #1
   14a7c:	movwne	r2, #1
   14a80:	bl	153c4 <__mempcpy_chk@plt+0x42e8>
   14a84:	cmp	r0, #0
   14a88:	popne	{fp, pc}
   14a8c:	bl	14dec <__mempcpy_chk@plt+0x3d10>
   14a90:	push	{fp, lr}
   14a94:	mov	fp, sp
   14a98:	mov	r2, r1
   14a9c:	mov	r1, r0
   14aa0:	mov	r0, #0
   14aa4:	bl	153c4 <__mempcpy_chk@plt+0x42e8>
   14aa8:	cmp	r0, #0
   14aac:	popne	{fp, pc}
   14ab0:	bl	14dec <__mempcpy_chk@plt+0x3d10>
   14ab4:	mov	r2, r1
   14ab8:	mov	r1, r0
   14abc:	mov	r0, #0
   14ac0:	b	14a5c <__mempcpy_chk@plt+0x3980>
   14ac4:	mov	r2, #1
   14ac8:	b	14acc <__mempcpy_chk@plt+0x39f0>
   14acc:	push	{r4, r5, fp, lr}
   14ad0:	add	fp, sp, #8
   14ad4:	ldr	r5, [r1]
   14ad8:	mov	r4, r1
   14adc:	cmp	r0, #0
   14ae0:	beq	14af8 <__mempcpy_chk@plt+0x3a1c>
   14ae4:	mov	r1, #1
   14ae8:	add	r1, r1, r5, lsr #1
   14aec:	adds	r5, r5, r1
   14af0:	bcc	14b10 <__mempcpy_chk@plt+0x3a34>
   14af4:	bl	14dec <__mempcpy_chk@plt+0x3d10>
   14af8:	cmp	r5, #0
   14afc:	bne	14b10 <__mempcpy_chk@plt+0x3a34>
   14b00:	mov	r1, #64	; 0x40
   14b04:	cmp	r2, #64	; 0x40
   14b08:	udiv	r5, r1, r2
   14b0c:	addhi	r5, r5, #1
   14b10:	mov	r1, r5
   14b14:	bl	14984 <__mempcpy_chk@plt+0x38a8>
   14b18:	str	r5, [r4]
   14b1c:	pop	{r4, r5, fp, pc}
   14b20:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14b24:	add	fp, sp, #24
   14b28:	ldr	r6, [r1]
   14b2c:	mov	r8, r1
   14b30:	ldr	r4, [fp, #8]
   14b34:	add	r1, r6, r6, asr #1
   14b38:	cmp	r1, r6
   14b3c:	mvnvs	r1, #-2147483648	; 0x80000000
   14b40:	cmp	r1, r3
   14b44:	mov	r5, r1
   14b48:	movgt	r5, r3
   14b4c:	cmn	r3, #1
   14b50:	movle	r5, r1
   14b54:	cmn	r4, #1
   14b58:	ble	14b78 <__mempcpy_chk@plt+0x3a9c>
   14b5c:	cmp	r4, #0
   14b60:	beq	14bcc <__mempcpy_chk@plt+0x3af0>
   14b64:	cmn	r5, #1
   14b68:	ble	14ba0 <__mempcpy_chk@plt+0x3ac4>
   14b6c:	mvn	r7, #-2147483648	; 0x80000000
   14b70:	udiv	r1, r7, r4
   14b74:	b	14b94 <__mempcpy_chk@plt+0x3ab8>
   14b78:	cmn	r5, #1
   14b7c:	ble	14bbc <__mempcpy_chk@plt+0x3ae0>
   14b80:	cmn	r4, #1
   14b84:	beq	14bcc <__mempcpy_chk@plt+0x3af0>
   14b88:	mov	r1, #-2147483648	; 0x80000000
   14b8c:	mvn	r7, #-2147483648	; 0x80000000
   14b90:	sdiv	r1, r1, r4
   14b94:	cmp	r1, r5
   14b98:	bge	14bcc <__mempcpy_chk@plt+0x3af0>
   14b9c:	b	14bdc <__mempcpy_chk@plt+0x3b00>
   14ba0:	beq	14bcc <__mempcpy_chk@plt+0x3af0>
   14ba4:	mov	r1, #-2147483648	; 0x80000000
   14ba8:	mvn	r7, #-2147483648	; 0x80000000
   14bac:	sdiv	r1, r1, r5
   14bb0:	cmp	r1, r4
   14bb4:	bge	14bcc <__mempcpy_chk@plt+0x3af0>
   14bb8:	b	14bdc <__mempcpy_chk@plt+0x3b00>
   14bbc:	mvn	r7, #-2147483648	; 0x80000000
   14bc0:	sdiv	r1, r7, r4
   14bc4:	cmp	r5, r1
   14bc8:	blt	14bdc <__mempcpy_chk@plt+0x3b00>
   14bcc:	mul	r1, r5, r4
   14bd0:	mov	r7, #64	; 0x40
   14bd4:	cmp	r1, #63	; 0x3f
   14bd8:	bgt	14be4 <__mempcpy_chk@plt+0x3b08>
   14bdc:	sdiv	r5, r7, r4
   14be0:	mul	r1, r5, r4
   14be4:	cmp	r0, #0
   14be8:	moveq	r7, #0
   14bec:	streq	r7, [r8]
   14bf0:	sub	r7, r5, r6
   14bf4:	cmp	r7, r2
   14bf8:	bge	14c9c <__mempcpy_chk@plt+0x3bc0>
   14bfc:	add	r5, r6, r2
   14c00:	mov	r2, #0
   14c04:	mov	r1, #0
   14c08:	cmp	r5, r3
   14c0c:	movwgt	r2, #1
   14c10:	cmn	r3, #1
   14c14:	movwgt	r1, #1
   14c18:	cmp	r5, r6
   14c1c:	bvs	14c84 <__mempcpy_chk@plt+0x3ba8>
   14c20:	ands	r1, r1, r2
   14c24:	bne	14c84 <__mempcpy_chk@plt+0x3ba8>
   14c28:	cmn	r4, #1
   14c2c:	ble	14c4c <__mempcpy_chk@plt+0x3b70>
   14c30:	cmp	r4, #0
   14c34:	beq	14c98 <__mempcpy_chk@plt+0x3bbc>
   14c38:	cmn	r5, #1
   14c3c:	ble	14c70 <__mempcpy_chk@plt+0x3b94>
   14c40:	mvn	r1, #-2147483648	; 0x80000000
   14c44:	udiv	r1, r1, r4
   14c48:	b	14c64 <__mempcpy_chk@plt+0x3b88>
   14c4c:	cmn	r5, #1
   14c50:	ble	14c88 <__mempcpy_chk@plt+0x3bac>
   14c54:	cmn	r4, #1
   14c58:	beq	14c98 <__mempcpy_chk@plt+0x3bbc>
   14c5c:	mov	r1, #-2147483648	; 0x80000000
   14c60:	sdiv	r1, r1, r4
   14c64:	cmp	r1, r5
   14c68:	bge	14c98 <__mempcpy_chk@plt+0x3bbc>
   14c6c:	b	14c84 <__mempcpy_chk@plt+0x3ba8>
   14c70:	beq	14c98 <__mempcpy_chk@plt+0x3bbc>
   14c74:	mov	r1, #-2147483648	; 0x80000000
   14c78:	sdiv	r1, r1, r5
   14c7c:	cmp	r1, r4
   14c80:	bge	14c98 <__mempcpy_chk@plt+0x3bbc>
   14c84:	bl	14dec <__mempcpy_chk@plt+0x3d10>
   14c88:	mvn	r1, #-2147483648	; 0x80000000
   14c8c:	sdiv	r1, r1, r4
   14c90:	cmp	r5, r1
   14c94:	blt	14c84 <__mempcpy_chk@plt+0x3ba8>
   14c98:	mul	r1, r5, r4
   14c9c:	bl	14a08 <__mempcpy_chk@plt+0x392c>
   14ca0:	str	r5, [r8]
   14ca4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14ca8:	push	{fp, lr}
   14cac:	mov	fp, sp
   14cb0:	mov	r1, #1
   14cb4:	bl	14f8c <__mempcpy_chk@plt+0x3eb0>
   14cb8:	cmp	r0, #0
   14cbc:	popne	{fp, pc}
   14cc0:	bl	14dec <__mempcpy_chk@plt+0x3d10>
   14cc4:	push	{fp, lr}
   14cc8:	mov	fp, sp
   14ccc:	bl	14f8c <__mempcpy_chk@plt+0x3eb0>
   14cd0:	cmp	r0, #0
   14cd4:	popne	{fp, pc}
   14cd8:	bl	14dec <__mempcpy_chk@plt+0x3d10>
   14cdc:	push	{fp, lr}
   14ce0:	mov	fp, sp
   14ce4:	mov	r1, #1
   14ce8:	bl	14f8c <__mempcpy_chk@plt+0x3eb0>
   14cec:	cmp	r0, #0
   14cf0:	popne	{fp, pc}
   14cf4:	bl	14dec <__mempcpy_chk@plt+0x3d10>
   14cf8:	push	{fp, lr}
   14cfc:	mov	fp, sp
   14d00:	bl	14f8c <__mempcpy_chk@plt+0x3eb0>
   14d04:	cmp	r0, #0
   14d08:	popne	{fp, pc}
   14d0c:	bl	14dec <__mempcpy_chk@plt+0x3d10>
   14d10:	push	{r4, r5, fp, lr}
   14d14:	add	fp, sp, #8
   14d18:	mov	r5, r0
   14d1c:	mov	r0, r1
   14d20:	mov	r4, r1
   14d24:	bl	14fe0 <__mempcpy_chk@plt+0x3f04>
   14d28:	cmp	r0, #0
   14d2c:	beq	14d40 <__mempcpy_chk@plt+0x3c64>
   14d30:	mov	r1, r5
   14d34:	mov	r2, r4
   14d38:	pop	{r4, r5, fp, lr}
   14d3c:	b	10eb4 <memcpy@plt>
   14d40:	bl	14dec <__mempcpy_chk@plt+0x3d10>
   14d44:	push	{r4, r5, fp, lr}
   14d48:	add	fp, sp, #8
   14d4c:	mov	r5, r0
   14d50:	mov	r0, r1
   14d54:	mov	r4, r1
   14d58:	bl	14fe0 <__mempcpy_chk@plt+0x3f04>
   14d5c:	cmp	r0, #0
   14d60:	beq	14d74 <__mempcpy_chk@plt+0x3c98>
   14d64:	mov	r1, r5
   14d68:	mov	r2, r4
   14d6c:	pop	{r4, r5, fp, lr}
   14d70:	b	10eb4 <memcpy@plt>
   14d74:	bl	14dec <__mempcpy_chk@plt+0x3d10>
   14d78:	push	{r4, r5, fp, lr}
   14d7c:	add	fp, sp, #8
   14d80:	mov	r5, r0
   14d84:	add	r0, r1, #1
   14d88:	mov	r4, r1
   14d8c:	bl	14fe0 <__mempcpy_chk@plt+0x3f04>
   14d90:	cmp	r0, #0
   14d94:	beq	14db0 <__mempcpy_chk@plt+0x3cd4>
   14d98:	mov	r1, #0
   14d9c:	mov	r2, r4
   14da0:	strb	r1, [r0, r4]
   14da4:	mov	r1, r5
   14da8:	pop	{r4, r5, fp, lr}
   14dac:	b	10eb4 <memcpy@plt>
   14db0:	bl	14dec <__mempcpy_chk@plt+0x3d10>
   14db4:	push	{r4, r5, fp, lr}
   14db8:	add	fp, sp, #8
   14dbc:	mov	r4, r0
   14dc0:	bl	10fe0 <strlen@plt>
   14dc4:	add	r5, r0, #1
   14dc8:	mov	r0, r5
   14dcc:	bl	14fe0 <__mempcpy_chk@plt+0x3f04>
   14dd0:	cmp	r0, #0
   14dd4:	beq	14de8 <__mempcpy_chk@plt+0x3d0c>
   14dd8:	mov	r1, r4
   14ddc:	mov	r2, r5
   14de0:	pop	{r4, r5, fp, lr}
   14de4:	b	10eb4 <memcpy@plt>
   14de8:	bl	14dec <__mempcpy_chk@plt+0x3d10>
   14dec:	push	{fp, lr}
   14df0:	mov	fp, sp
   14df4:	movw	r0, #28924	; 0x70fc
   14df8:	movw	r1, #25473	; 0x6381
   14dfc:	mov	r2, #5
   14e00:	movt	r0, #2
   14e04:	movt	r1, #1
   14e08:	ldr	r4, [r0]
   14e0c:	mov	r0, #0
   14e10:	bl	10ee4 <dcgettext@plt>
   14e14:	movw	r2, #23875	; 0x5d43
   14e18:	mov	r3, r0
   14e1c:	mov	r0, r4
   14e20:	mov	r1, #0
   14e24:	movt	r2, #1
   14e28:	bl	10f5c <error@plt>
   14e2c:	bl	110c4 <abort@plt>
   14e30:	sub	sp, sp, #12
   14e34:	push	{fp, lr}
   14e38:	mov	fp, sp
   14e3c:	sub	sp, sp, #4
   14e40:	add	ip, fp, #8
   14e44:	stm	ip, {r1, r2, r3}
   14e48:	add	r1, fp, #8
   14e4c:	str	r1, [sp]
   14e50:	bl	14e64 <__mempcpy_chk@plt+0x3d88>
   14e54:	mov	sp, fp
   14e58:	pop	{fp, lr}
   14e5c:	add	sp, sp, #12
   14e60:	bx	lr
   14e64:	push	{r4, r5, r6, sl, fp, lr}
   14e68:	add	fp, sp, #16
   14e6c:	mov	r2, r1
   14e70:	mov	r1, r0
   14e74:	mov	r0, #1
   14e78:	bl	10ed8 <__vprintf_chk@plt>
   14e7c:	mov	r4, r0
   14e80:	cmn	r0, #1
   14e84:	bgt	14ed8 <__mempcpy_chk@plt+0x3dfc>
   14e88:	movw	r0, #29004	; 0x714c
   14e8c:	movt	r0, #2
   14e90:	ldr	r0, [r0]
   14e94:	bl	10e9c <ferror@plt>
   14e98:	cmp	r0, #0
   14e9c:	bne	14ed8 <__mempcpy_chk@plt+0x3dfc>
   14ea0:	movw	r0, #28924	; 0x70fc
   14ea4:	movt	r0, #2
   14ea8:	ldr	r5, [r0]
   14eac:	bl	10fec <__errno_location@plt>
   14eb0:	movw	r1, #25490	; 0x6392
   14eb4:	ldr	r6, [r0]
   14eb8:	mov	r0, #0
   14ebc:	mov	r2, #5
   14ec0:	movt	r1, #1
   14ec4:	bl	10ee4 <dcgettext@plt>
   14ec8:	mov	r2, r0
   14ecc:	mov	r0, r5
   14ed0:	mov	r1, r6
   14ed4:	bl	10f5c <error@plt>
   14ed8:	mov	r0, r4
   14edc:	pop	{r4, r5, r6, sl, fp, pc}
   14ee0:	sub	sp, sp, #8
   14ee4:	push	{fp, lr}
   14ee8:	mov	fp, sp
   14eec:	sub	sp, sp, #8
   14ef0:	str	r2, [fp, #8]
   14ef4:	add	r2, fp, #8
   14ef8:	str	r3, [fp, #12]
   14efc:	str	r2, [sp, #4]
   14f00:	bl	14f14 <__mempcpy_chk@plt+0x3e38>
   14f04:	mov	sp, fp
   14f08:	pop	{fp, lr}
   14f0c:	add	sp, sp, #8
   14f10:	bx	lr
   14f14:	push	{r4, r5, r6, sl, fp, lr}
   14f18:	add	fp, sp, #16
   14f1c:	mov	r3, r2
   14f20:	mov	r2, r1
   14f24:	mov	r1, #1
   14f28:	mov	r5, r0
   14f2c:	bl	10f98 <__vfprintf_chk@plt>
   14f30:	mov	r4, r0
   14f34:	cmn	r0, #1
   14f38:	bgt	14f84 <__mempcpy_chk@plt+0x3ea8>
   14f3c:	mov	r0, r5
   14f40:	bl	10e9c <ferror@plt>
   14f44:	cmp	r0, #0
   14f48:	bne	14f84 <__mempcpy_chk@plt+0x3ea8>
   14f4c:	movw	r0, #28924	; 0x70fc
   14f50:	movt	r0, #2
   14f54:	ldr	r5, [r0]
   14f58:	bl	10fec <__errno_location@plt>
   14f5c:	movw	r1, #25490	; 0x6392
   14f60:	ldr	r6, [r0]
   14f64:	mov	r0, #0
   14f68:	mov	r2, #5
   14f6c:	movt	r1, #1
   14f70:	bl	10ee4 <dcgettext@plt>
   14f74:	mov	r2, r0
   14f78:	mov	r0, r5
   14f7c:	mov	r1, r6
   14f80:	bl	10f5c <error@plt>
   14f84:	mov	r0, r4
   14f88:	pop	{r4, r5, r6, sl, fp, pc}
   14f8c:	clz	r2, r1
   14f90:	clz	r3, r0
   14f94:	lsr	r2, r2, #5
   14f98:	lsr	r3, r3, #5
   14f9c:	orrs	r2, r3, r2
   14fa0:	movwne	r1, #1
   14fa4:	movwne	r0, #1
   14fa8:	cmp	r1, #0
   14fac:	beq	14fdc <__mempcpy_chk@plt+0x3f00>
   14fb0:	mvn	r2, #-2147483648	; 0x80000000
   14fb4:	udiv	r2, r2, r1
   14fb8:	cmp	r2, r0
   14fbc:	bcs	14fdc <__mempcpy_chk@plt+0x3f00>
   14fc0:	push	{fp, lr}
   14fc4:	mov	fp, sp
   14fc8:	bl	10fec <__errno_location@plt>
   14fcc:	mov	r1, #12
   14fd0:	str	r1, [r0]
   14fd4:	mov	r0, #0
   14fd8:	pop	{fp, pc}
   14fdc:	b	10e48 <calloc@plt>
   14fe0:	cmp	r0, #0
   14fe4:	movweq	r0, #1
   14fe8:	cmn	r0, #1
   14fec:	ble	14ff4 <__mempcpy_chk@plt+0x3f18>
   14ff0:	b	10f74 <malloc@plt>
   14ff4:	push	{fp, lr}
   14ff8:	mov	fp, sp
   14ffc:	bl	10fec <__errno_location@plt>
   15000:	mov	r1, #12
   15004:	str	r1, [r0]
   15008:	mov	r0, #0
   1500c:	pop	{fp, pc}
   15010:	push	{fp, lr}
   15014:	mov	fp, sp
   15018:	cmp	r0, #0
   1501c:	beq	15038 <__mempcpy_chk@plt+0x3f5c>
   15020:	cmp	r1, #0
   15024:	beq	15044 <__mempcpy_chk@plt+0x3f68>
   15028:	cmn	r1, #1
   1502c:	ble	1504c <__mempcpy_chk@plt+0x3f70>
   15030:	pop	{fp, lr}
   15034:	b	10ef0 <realloc@plt>
   15038:	mov	r0, r1
   1503c:	pop	{fp, lr}
   15040:	b	14fe0 <__mempcpy_chk@plt+0x3f04>
   15044:	bl	125a0 <__mempcpy_chk@plt+0x14c4>
   15048:	b	15058 <__mempcpy_chk@plt+0x3f7c>
   1504c:	bl	10fec <__errno_location@plt>
   15050:	mov	r1, #12
   15054:	str	r1, [r0]
   15058:	mov	r0, #0
   1505c:	pop	{fp, pc}
   15060:	push	{r4, r5, r6, sl, fp, lr}
   15064:	add	fp, sp, #16
   15068:	vpush	{d8}
   1506c:	movw	r6, #29348	; 0x72a4
   15070:	mov	r5, r0
   15074:	mov	r4, r1
   15078:	movt	r6, #2
   1507c:	ldr	r0, [r6]
   15080:	cmp	r0, #0
   15084:	bne	150a0 <__mempcpy_chk@plt+0x3fc4>
   15088:	movw	r1, #25522	; 0x63b2
   1508c:	movw	r0, #8127	; 0x1fbf
   15090:	mov	r2, #0
   15094:	movt	r1, #1
   15098:	bl	11094 <newlocale@plt>
   1509c:	str	r0, [r6]
   150a0:	ldr	r0, [r6]
   150a4:	cmp	r0, #0
   150a8:	beq	150f0 <__mempcpy_chk@plt+0x4014>
   150ac:	bl	10e60 <uselocale@plt>
   150b0:	cmp	r0, #0
   150b4:	beq	150f0 <__mempcpy_chk@plt+0x4014>
   150b8:	mov	r6, r0
   150bc:	mov	r0, r5
   150c0:	mov	r1, r4
   150c4:	bl	10ecc <strtold@plt>
   150c8:	vorr	d8, d0, d0
   150cc:	bl	10fec <__errno_location@plt>
   150d0:	ldr	r5, [r0]
   150d4:	mov	r4, r0
   150d8:	mov	r0, r6
   150dc:	bl	10e60 <uselocale@plt>
   150e0:	cmp	r0, #0
   150e4:	beq	15108 <__mempcpy_chk@plt+0x402c>
   150e8:	str	r5, [r4]
   150ec:	b	150fc <__mempcpy_chk@plt+0x4020>
   150f0:	cmp	r4, #0
   150f4:	vmov.i32	d8, #0	; 0x00000000
   150f8:	strne	r5, [r4]
   150fc:	vorr	d0, d8, d8
   15100:	vpop	{d8}
   15104:	pop	{r4, r5, r6, sl, fp, pc}
   15108:	bl	110c4 <abort@plt>
   1510c:	push	{r4, r5, r6, sl, fp, lr}
   15110:	add	fp, sp, #16
   15114:	mov	r4, r0
   15118:	bl	10f38 <__fpending@plt>
   1511c:	mov	r5, r0
   15120:	mov	r0, r4
   15124:	bl	10f44 <ferror_unlocked@plt>
   15128:	mov	r6, r0
   1512c:	mov	r0, r4
   15130:	bl	1518c <__mempcpy_chk@plt+0x40b0>
   15134:	cmp	r6, #0
   15138:	beq	15158 <__mempcpy_chk@plt+0x407c>
   1513c:	mvn	r4, #0
   15140:	cmp	r0, #0
   15144:	bne	15184 <__mempcpy_chk@plt+0x40a8>
   15148:	bl	10fec <__errno_location@plt>
   1514c:	mov	r1, #0
   15150:	str	r1, [r0]
   15154:	b	15184 <__mempcpy_chk@plt+0x40a8>
   15158:	cmp	r0, #0
   1515c:	mov	r4, r0
   15160:	mvnne	r4, #0
   15164:	cmp	r5, #0
   15168:	bne	15184 <__mempcpy_chk@plt+0x40a8>
   1516c:	cmp	r0, #0
   15170:	beq	15184 <__mempcpy_chk@plt+0x40a8>
   15174:	bl	10fec <__errno_location@plt>
   15178:	ldr	r0, [r0]
   1517c:	subs	r4, r0, #9
   15180:	mvnne	r4, #0
   15184:	mov	r0, r4
   15188:	pop	{r4, r5, r6, sl, fp, pc}
   1518c:	push	{r4, r5, r6, sl, fp, lr}
   15190:	add	fp, sp, #16
   15194:	sub	sp, sp, #8
   15198:	mov	r4, r0
   1519c:	bl	1101c <fileno@plt>
   151a0:	cmn	r0, #1
   151a4:	ble	15218 <__mempcpy_chk@plt+0x413c>
   151a8:	mov	r0, r4
   151ac:	bl	10fa4 <__freading@plt>
   151b0:	cmp	r0, #0
   151b4:	beq	151e0 <__mempcpy_chk@plt+0x4104>
   151b8:	mov	r0, r4
   151bc:	bl	1101c <fileno@plt>
   151c0:	mov	r1, #1
   151c4:	mov	r2, #0
   151c8:	mov	r3, #0
   151cc:	str	r1, [sp]
   151d0:	bl	10f20 <lseek64@plt>
   151d4:	and	r0, r0, r1
   151d8:	cmn	r0, #1
   151dc:	beq	15218 <__mempcpy_chk@plt+0x413c>
   151e0:	mov	r0, r4
   151e4:	bl	15228 <__mempcpy_chk@plt+0x414c>
   151e8:	cmp	r0, #0
   151ec:	beq	15218 <__mempcpy_chk@plt+0x413c>
   151f0:	bl	10fec <__errno_location@plt>
   151f4:	ldr	r6, [r0]
   151f8:	mov	r5, r0
   151fc:	mov	r0, r4
   15200:	bl	11058 <fclose@plt>
   15204:	cmp	r6, #0
   15208:	strne	r6, [r5]
   1520c:	mvnne	r0, #0
   15210:	sub	sp, fp, #16
   15214:	pop	{r4, r5, r6, sl, fp, pc}
   15218:	mov	r0, r4
   1521c:	sub	sp, fp, #16
   15220:	pop	{r4, r5, r6, sl, fp, lr}
   15224:	b	11058 <fclose@plt>
   15228:	push	{r4, sl, fp, lr}
   1522c:	add	fp, sp, #8
   15230:	sub	sp, sp, #8
   15234:	mov	r4, r0
   15238:	cmp	r0, #0
   1523c:	beq	15274 <__mempcpy_chk@plt+0x4198>
   15240:	mov	r0, r4
   15244:	bl	10fa4 <__freading@plt>
   15248:	cmp	r0, #0
   1524c:	beq	15274 <__mempcpy_chk@plt+0x4198>
   15250:	ldrb	r0, [r4, #1]
   15254:	tst	r0, #1
   15258:	beq	15274 <__mempcpy_chk@plt+0x4198>
   1525c:	mov	r0, #1
   15260:	mov	r2, #0
   15264:	mov	r3, #0
   15268:	str	r0, [sp]
   1526c:	mov	r0, r4
   15270:	bl	15284 <__mempcpy_chk@plt+0x41a8>
   15274:	mov	r0, r4
   15278:	sub	sp, fp, #8
   1527c:	pop	{r4, sl, fp, lr}
   15280:	b	10e84 <fflush@plt>
   15284:	push	{r4, r5, r6, r7, fp, lr}
   15288:	add	fp, sp, #16
   1528c:	sub	sp, sp, #8
   15290:	mov	r4, r0
   15294:	ldr	r0, [r0, #4]
   15298:	mov	r5, r3
   1529c:	mov	r6, r2
   152a0:	ldr	r1, [r4, #8]
   152a4:	cmp	r1, r0
   152a8:	bne	152c4 <__mempcpy_chk@plt+0x41e8>
   152ac:	ldrd	r0, [r4, #16]
   152b0:	cmp	r1, r0
   152b4:	bne	152c4 <__mempcpy_chk@plt+0x41e8>
   152b8:	ldr	r0, [r4, #36]	; 0x24
   152bc:	cmp	r0, #0
   152c0:	beq	152dc <__mempcpy_chk@plt+0x4200>
   152c4:	mov	r0, r4
   152c8:	mov	r2, r6
   152cc:	mov	r3, r5
   152d0:	sub	sp, fp, #16
   152d4:	pop	{r4, r5, r6, r7, fp, lr}
   152d8:	b	11064 <fseeko64@plt>
   152dc:	ldr	r7, [fp, #8]
   152e0:	mov	r0, r4
   152e4:	bl	1101c <fileno@plt>
   152e8:	mov	r2, r6
   152ec:	mov	r3, r5
   152f0:	str	r7, [sp]
   152f4:	bl	10f20 <lseek64@plt>
   152f8:	and	r2, r0, r1
   152fc:	cmn	r2, #1
   15300:	beq	1531c <__mempcpy_chk@plt+0x4240>
   15304:	strd	r0, [r4, #80]	; 0x50
   15308:	ldr	r0, [r4]
   1530c:	bic	r0, r0, #16
   15310:	str	r0, [r4]
   15314:	mov	r0, #0
   15318:	b	15320 <__mempcpy_chk@plt+0x4244>
   1531c:	mvn	r0, #0
   15320:	sub	sp, fp, #16
   15324:	pop	{r4, r5, r6, r7, fp, pc}
   15328:	push	{fp, lr}
   1532c:	mov	fp, sp
   15330:	mov	r0, #14
   15334:	bl	11088 <nl_langinfo@plt>
   15338:	movw	r1, #22060	; 0x562c
   1533c:	cmp	r0, #0
   15340:	movt	r1, #1
   15344:	movne	r1, r0
   15348:	movw	r0, #24526	; 0x5fce
   1534c:	ldrb	r2, [r1]
   15350:	movt	r0, #1
   15354:	cmp	r2, #0
   15358:	movne	r0, r1
   1535c:	pop	{fp, pc}
   15360:	push	{r4, r5, r6, r7, fp, lr}
   15364:	add	fp, sp, #16
   15368:	sub	sp, sp, #8
   1536c:	cmp	r0, #0
   15370:	add	r5, sp, #4
   15374:	mov	r7, r2
   15378:	mov	r4, r1
   1537c:	movne	r5, r0
   15380:	mov	r0, r5
   15384:	bl	10f50 <mbrtowc@plt>
   15388:	mov	r6, r0
   1538c:	cmp	r7, #0
   15390:	beq	153b8 <__mempcpy_chk@plt+0x42dc>
   15394:	cmn	r6, #2
   15398:	bcc	153b8 <__mempcpy_chk@plt+0x42dc>
   1539c:	mov	r0, #0
   153a0:	bl	15400 <__mempcpy_chk@plt+0x4324>
   153a4:	cmp	r0, #0
   153a8:	bne	153b8 <__mempcpy_chk@plt+0x42dc>
   153ac:	ldrb	r0, [r4]
   153b0:	mov	r6, #1
   153b4:	str	r0, [r5]
   153b8:	mov	r0, r6
   153bc:	sub	sp, fp, #16
   153c0:	pop	{r4, r5, r6, r7, fp, pc}
   153c4:	cmp	r2, #0
   153c8:	beq	153f8 <__mempcpy_chk@plt+0x431c>
   153cc:	mvn	r3, #0
   153d0:	udiv	r3, r3, r2
   153d4:	cmp	r3, r1
   153d8:	bcs	153f8 <__mempcpy_chk@plt+0x431c>
   153dc:	push	{fp, lr}
   153e0:	mov	fp, sp
   153e4:	bl	10fec <__errno_location@plt>
   153e8:	mov	r1, #12
   153ec:	str	r1, [r0]
   153f0:	mov	r0, #0
   153f4:	pop	{fp, pc}
   153f8:	mul	r1, r2, r1
   153fc:	b	15010 <__mempcpy_chk@plt+0x3f34>
   15400:	push	{r4, sl, fp, lr}
   15404:	add	fp, sp, #8
   15408:	sub	sp, sp, #264	; 0x108
   1540c:	add	r1, sp, #7
   15410:	movw	r2, #257	; 0x101
   15414:	bl	1546c <__mempcpy_chk@plt+0x4390>
   15418:	mov	r4, #0
   1541c:	cmp	r0, #0
   15420:	bne	15460 <__mempcpy_chk@plt+0x4384>
   15424:	movw	r1, #25522	; 0x63b2
   15428:	add	r0, sp, #7
   1542c:	mov	r2, #2
   15430:	movt	r1, #1
   15434:	bl	10fd4 <bcmp@plt>
   15438:	cmp	r0, #0
   1543c:	beq	15460 <__mempcpy_chk@plt+0x4384>
   15440:	movw	r1, #25524	; 0x63b4
   15444:	add	r0, sp, #7
   15448:	mov	r2, #6
   1544c:	movt	r1, #1
   15450:	bl	10fd4 <bcmp@plt>
   15454:	cmp	r0, #0
   15458:	mov	r4, r0
   1545c:	movwne	r4, #1
   15460:	mov	r0, r4
   15464:	sub	sp, fp, #8
   15468:	pop	{r4, sl, fp, pc}
   1546c:	push	{r4, r5, r6, r7, fp, lr}
   15470:	add	fp, sp, #16
   15474:	mov	r4, r1
   15478:	mov	r1, #0
   1547c:	mov	r6, r2
   15480:	bl	11070 <setlocale@plt>
   15484:	cmp	r0, #0
   15488:	beq	154b4 <__mempcpy_chk@plt+0x43d8>
   1548c:	mov	r7, r0
   15490:	bl	10fe0 <strlen@plt>
   15494:	cmp	r0, r6
   15498:	bcs	154c8 <__mempcpy_chk@plt+0x43ec>
   1549c:	add	r2, r0, #1
   154a0:	mov	r0, r4
   154a4:	mov	r1, r7
   154a8:	bl	10eb4 <memcpy@plt>
   154ac:	mov	r5, #0
   154b0:	b	154f0 <__mempcpy_chk@plt+0x4414>
   154b4:	cmp	r6, #0
   154b8:	mov	r5, #22
   154bc:	movne	r0, #0
   154c0:	strbne	r0, [r4]
   154c4:	b	154f0 <__mempcpy_chk@plt+0x4414>
   154c8:	mov	r5, #34	; 0x22
   154cc:	cmp	r6, #0
   154d0:	beq	154f0 <__mempcpy_chk@plt+0x4414>
   154d4:	sub	r6, r6, #1
   154d8:	mov	r0, r4
   154dc:	mov	r1, r7
   154e0:	mov	r2, r6
   154e4:	bl	10eb4 <memcpy@plt>
   154e8:	mov	r0, #0
   154ec:	strb	r0, [r4, r6]
   154f0:	mov	r0, r5
   154f4:	pop	{r4, r5, r6, r7, fp, pc}
   154f8:	mov	r1, #0
   154fc:	b	11070 <setlocale@plt>
   15500:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15504:	mov	r7, r0
   15508:	ldr	r6, [pc, #72]	; 15558 <__mempcpy_chk@plt+0x447c>
   1550c:	ldr	r5, [pc, #72]	; 1555c <__mempcpy_chk@plt+0x4480>
   15510:	add	r6, pc, r6
   15514:	add	r5, pc, r5
   15518:	sub	r6, r6, r5
   1551c:	mov	r8, r1
   15520:	mov	r9, r2
   15524:	bl	10e28 <calloc@plt-0x20>
   15528:	asrs	r6, r6, #2
   1552c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15530:	mov	r4, #0
   15534:	add	r4, r4, #1
   15538:	ldr	r3, [r5], #4
   1553c:	mov	r2, r9
   15540:	mov	r1, r8
   15544:	mov	r0, r7
   15548:	blx	r3
   1554c:	cmp	r6, r4
   15550:	bne	15534 <__mempcpy_chk@plt+0x4458>
   15554:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15558:	strdeq	r1, [r1], -r4
   1555c:	andeq	r1, r1, ip, ror #19
   15560:	bx	lr
   15564:	ldr	r3, [pc, #12]	; 15578 <__mempcpy_chk@plt+0x449c>
   15568:	mov	r1, #0
   1556c:	add	r3, pc, r3
   15570:	ldr	r2, [r3]
   15574:	b	10ff8 <__cxa_atexit@plt>
   15578:	andeq	r1, r1, r0, lsl #23

Disassembly of section .fini:

0001557c <.fini>:
   1557c:	push	{r3, lr}
   15580:	pop	{r3, pc}
