
../repos/coreutils/src/nproc:     file format elf32-littlearm


Disassembly of section .init:

00010db0 <.init>:
   10db0:	push	{r3, lr}
   10db4:	bl	11070 <__assert_fail@plt+0x48>
   10db8:	pop	{r3, pc}

Disassembly of section .plt:

00010dbc <calloc@plt-0x14>:
   10dbc:	push	{lr}		; (str lr, [sp, #-4]!)
   10dc0:	ldr	lr, [pc, #4]	; 10dcc <calloc@plt-0x4>
   10dc4:	add	lr, pc, lr
   10dc8:	ldr	pc, [lr, #8]!
   10dcc:	andeq	ip, r1, r4, lsr r2

00010dd0 <calloc@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #28, 20	; 0x1c000
   10dd8:	ldr	pc, [ip, #564]!	; 0x234

00010ddc <fputs_unlocked@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #28, 20	; 0x1c000
   10de4:	ldr	pc, [ip, #556]!	; 0x22c

00010de8 <raise@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #28, 20	; 0x1c000
   10df0:	ldr	pc, [ip, #548]!	; 0x224

00010df4 <strcmp@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #28, 20	; 0x1c000
   10dfc:	ldr	pc, [ip, #540]!	; 0x21c

00010e00 <printf@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #28, 20	; 0x1c000
   10e08:	ldr	pc, [ip, #532]!	; 0x214

00010e0c <fflush@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #28, 20	; 0x1c000
   10e14:	ldr	pc, [ip, #524]!	; 0x20c

00010e18 <free@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #28, 20	; 0x1c000
   10e20:	ldr	pc, [ip, #516]!	; 0x204

00010e24 <_exit@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #28, 20	; 0x1c000
   10e2c:	ldr	pc, [ip, #508]!	; 0x1fc

00010e30 <memcpy@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #28, 20	; 0x1c000
   10e38:	ldr	pc, [ip, #500]!	; 0x1f4

00010e3c <mbsinit@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #28, 20	; 0x1c000
   10e44:	ldr	pc, [ip, #492]!	; 0x1ec

00010e48 <__sched_cpucount@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #28, 20	; 0x1c000
   10e50:	ldr	pc, [ip, #484]!	; 0x1e4

00010e54 <memcmp@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #28, 20	; 0x1c000
   10e5c:	ldr	pc, [ip, #476]!	; 0x1dc

00010e60 <sysconf@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #28, 20	; 0x1c000
   10e68:	ldr	pc, [ip, #468]!	; 0x1d4

00010e6c <realloc@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #28, 20	; 0x1c000
   10e74:	ldr	pc, [ip, #460]!	; 0x1cc

00010e78 <textdomain@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #28, 20	; 0x1c000
   10e80:	ldr	pc, [ip, #452]!	; 0x1c4

00010e84 <iswprint@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #28, 20	; 0x1c000
   10e8c:	ldr	pc, [ip, #444]!	; 0x1bc

00010e90 <lseek64@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #28, 20	; 0x1c000
   10e98:	ldr	pc, [ip, #436]!	; 0x1b4

00010e9c <__ctype_get_mb_cur_max@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #28, 20	; 0x1c000
   10ea4:	ldr	pc, [ip, #428]!	; 0x1ac

00010ea8 <__fpending@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #28, 20	; 0x1c000
   10eb0:	ldr	pc, [ip, #420]!	; 0x1a4

00010eb4 <ferror_unlocked@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #28, 20	; 0x1c000
   10ebc:	ldr	pc, [ip, #412]!	; 0x19c

00010ec0 <mbrtowc@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #28, 20	; 0x1c000
   10ec8:	ldr	pc, [ip, #404]!	; 0x194

00010ecc <error@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #28, 20	; 0x1c000
   10ed4:	ldr	pc, [ip, #396]!	; 0x18c

00010ed8 <getenv@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #28, 20	; 0x1c000
   10ee0:	ldr	pc, [ip, #388]!	; 0x184

00010ee4 <malloc@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #28, 20	; 0x1c000
   10eec:	ldr	pc, [ip, #380]!	; 0x17c

00010ef0 <__libc_start_main@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #28, 20	; 0x1c000
   10ef8:	ldr	pc, [ip, #372]!	; 0x174

00010efc <__freading@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #28, 20	; 0x1c000
   10f04:	ldr	pc, [ip, #364]!	; 0x16c

00010f08 <__gmon_start__@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #28, 20	; 0x1c000
   10f10:	ldr	pc, [ip, #356]!	; 0x164

00010f14 <getopt_long@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #28, 20	; 0x1c000
   10f1c:	ldr	pc, [ip, #348]!	; 0x15c

00010f20 <__ctype_b_loc@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #28, 20	; 0x1c000
   10f28:	ldr	pc, [ip, #340]!	; 0x154

00010f2c <exit@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #28, 20	; 0x1c000
   10f34:	ldr	pc, [ip, #332]!	; 0x14c

00010f38 <gettext@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #28, 20	; 0x1c000
   10f40:	ldr	pc, [ip, #324]!	; 0x144

00010f44 <strtoul@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #28, 20	; 0x1c000
   10f4c:	ldr	pc, [ip, #316]!	; 0x13c

00010f50 <strlen@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #28, 20	; 0x1c000
   10f58:	ldr	pc, [ip, #308]!	; 0x134

00010f5c <strchr@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #28, 20	; 0x1c000
   10f64:	ldr	pc, [ip, #300]!	; 0x12c

00010f68 <fprintf@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #28, 20	; 0x1c000
   10f70:	ldr	pc, [ip, #292]!	; 0x124

00010f74 <__errno_location@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #28, 20	; 0x1c000
   10f7c:	ldr	pc, [ip, #284]!	; 0x11c

00010f80 <__cxa_atexit@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #28, 20	; 0x1c000
   10f88:	ldr	pc, [ip, #276]!	; 0x114

00010f8c <memset@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #28, 20	; 0x1c000
   10f94:	ldr	pc, [ip, #268]!	; 0x10c

00010f98 <fileno@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #28, 20	; 0x1c000
   10fa0:	ldr	pc, [ip, #260]!	; 0x104

00010fa4 <strtoumax@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #28, 20	; 0x1c000
   10fac:	ldr	pc, [ip, #252]!	; 0xfc

00010fb0 <fclose@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #28, 20	; 0x1c000
   10fb8:	ldr	pc, [ip, #244]!	; 0xf4

00010fbc <fseeko64@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #28, 20	; 0x1c000
   10fc4:	ldr	pc, [ip, #236]!	; 0xec

00010fc8 <setlocale@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #28, 20	; 0x1c000
   10fd0:	ldr	pc, [ip, #228]!	; 0xe4

00010fd4 <strrchr@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #28, 20	; 0x1c000
   10fdc:	ldr	pc, [ip, #220]!	; 0xdc

00010fe0 <nl_langinfo@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #28, 20	; 0x1c000
   10fe8:	ldr	pc, [ip, #212]!	; 0xd4

00010fec <sched_getaffinity@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #28, 20	; 0x1c000
   10ff4:	ldr	pc, [ip, #204]!	; 0xcc

00010ff8 <bindtextdomain@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #28, 20	; 0x1c000
   11000:	ldr	pc, [ip, #196]!	; 0xc4

00011004 <fputs@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #28, 20	; 0x1c000
   1100c:	ldr	pc, [ip, #188]!	; 0xbc

00011010 <strncmp@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #28, 20	; 0x1c000
   11018:	ldr	pc, [ip, #180]!	; 0xb4

0001101c <abort@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #28, 20	; 0x1c000
   11024:	ldr	pc, [ip, #172]!	; 0xac

00011028 <__assert_fail@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #28, 20	; 0x1c000
   11030:	ldr	pc, [ip, #164]!	; 0xa4

Disassembly of section .text:

00011034 <.text>:
   11034:	mov	fp, #0
   11038:	mov	lr, #0
   1103c:	pop	{r1}		; (ldr r1, [sp], #4)
   11040:	mov	r2, sp
   11044:	push	{r2}		; (str r2, [sp, #-4]!)
   11048:	push	{r0}		; (str r0, [sp, #-4]!)
   1104c:	ldr	ip, [pc, #16]	; 11064 <__assert_fail@plt+0x3c>
   11050:	push	{ip}		; (str ip, [sp, #-4]!)
   11054:	ldr	r0, [pc, #12]	; 11068 <__assert_fail@plt+0x40>
   11058:	ldr	r3, [pc, #12]	; 1106c <__assert_fail@plt+0x44>
   1105c:	bl	10ef0 <__libc_start_main@plt>
   11060:	bl	1101c <abort@plt>
   11064:	andeq	ip, r1, r8, asr r2
   11068:	strdeq	r1, [r1], -ip
   1106c:	strdeq	ip, [r1], -r8
   11070:	ldr	r3, [pc, #20]	; 1108c <__assert_fail@plt+0x64>
   11074:	ldr	r2, [pc, #20]	; 11090 <__assert_fail@plt+0x68>
   11078:	add	r3, pc, r3
   1107c:	ldr	r2, [r3, r2]
   11080:	cmp	r2, #0
   11084:	bxeq	lr
   11088:	b	10f08 <__gmon_start__@plt>
   1108c:	andeq	fp, r1, r0, lsl #31
   11090:	ldrdeq	r0, [r0], -r8
   11094:	ldr	r0, [pc, #24]	; 110b4 <__assert_fail@plt+0x8c>
   11098:	ldr	r3, [pc, #24]	; 110b8 <__assert_fail@plt+0x90>
   1109c:	cmp	r3, r0
   110a0:	bxeq	lr
   110a4:	ldr	r3, [pc, #16]	; 110bc <__assert_fail@plt+0x94>
   110a8:	cmp	r3, #0
   110ac:	bxeq	lr
   110b0:	bx	r3
   110b4:	andeq	sp, r2, ip, lsr #2
   110b8:	andeq	sp, r2, ip, lsr #2
   110bc:	andeq	r0, r0, r0
   110c0:	ldr	r0, [pc, #36]	; 110ec <__assert_fail@plt+0xc4>
   110c4:	ldr	r1, [pc, #36]	; 110f0 <__assert_fail@plt+0xc8>
   110c8:	sub	r1, r1, r0
   110cc:	asr	r1, r1, #2
   110d0:	add	r1, r1, r1, lsr #31
   110d4:	asrs	r1, r1, #1
   110d8:	bxeq	lr
   110dc:	ldr	r3, [pc, #16]	; 110f4 <__assert_fail@plt+0xcc>
   110e0:	cmp	r3, #0
   110e4:	bxeq	lr
   110e8:	bx	r3
   110ec:	andeq	sp, r2, ip, lsr #2
   110f0:	andeq	sp, r2, ip, lsr #2
   110f4:	andeq	r0, r0, r0
   110f8:	push	{r4, lr}
   110fc:	ldr	r4, [pc, #24]	; 1111c <__assert_fail@plt+0xf4>
   11100:	ldrb	r3, [r4]
   11104:	cmp	r3, #0
   11108:	popne	{r4, pc}
   1110c:	bl	11094 <__assert_fail@plt+0x6c>
   11110:	mov	r3, #1
   11114:	strb	r3, [r4]
   11118:	pop	{r4, pc}
   1111c:	andeq	sp, r2, ip, asr #2
   11120:	b	110c0 <__assert_fail@plt+0x98>
   11124:	push	{fp, lr}
   11128:	mov	fp, sp
   1112c:	sub	sp, sp, #32
   11130:	str	r0, [fp, #-4]
   11134:	ldr	r0, [fp, #-4]
   11138:	cmp	r0, #0
   1113c:	beq	11188 <__assert_fail@plt+0x160>
   11140:	b	11144 <__assert_fail@plt+0x11c>
   11144:	movw	r0, #53568	; 0xd140
   11148:	movt	r0, #2
   1114c:	ldr	r0, [r0]
   11150:	movw	r1, #49792	; 0xc280
   11154:	movt	r1, #1
   11158:	str	r0, [fp, #-8]
   1115c:	mov	r0, r1
   11160:	bl	10f38 <gettext@plt>
   11164:	movw	r1, #53592	; 0xd158
   11168:	movt	r1, #2
   1116c:	ldr	r2, [r1]
   11170:	ldr	r1, [fp, #-8]
   11174:	str	r0, [fp, #-12]
   11178:	mov	r0, r1
   1117c:	ldr	r1, [fp, #-12]
   11180:	bl	10f68 <fprintf@plt>
   11184:	b	11248 <__assert_fail@plt+0x220>
   11188:	movw	r0, #49831	; 0xc2a7
   1118c:	movt	r0, #1
   11190:	bl	10f38 <gettext@plt>
   11194:	movw	r1, #53592	; 0xd158
   11198:	movt	r1, #2
   1119c:	ldr	r1, [r1]
   111a0:	bl	10e00 <printf@plt>
   111a4:	movw	r1, #49854	; 0xc2be
   111a8:	movt	r1, #1
   111ac:	str	r0, [sp, #16]
   111b0:	mov	r0, r1
   111b4:	bl	10f38 <gettext@plt>
   111b8:	movw	r1, #53572	; 0xd144
   111bc:	movt	r1, #2
   111c0:	ldr	r1, [r1]
   111c4:	bl	10ddc <fputs_unlocked@plt>
   111c8:	movw	r1, #49982	; 0xc33e
   111cc:	movt	r1, #1
   111d0:	str	r0, [sp, #12]
   111d4:	mov	r0, r1
   111d8:	bl	10f38 <gettext@plt>
   111dc:	movw	r1, #53572	; 0xd144
   111e0:	movt	r1, #2
   111e4:	ldr	r1, [r1]
   111e8:	bl	10ddc <fputs_unlocked@plt>
   111ec:	movw	r1, #50099	; 0xc3b3
   111f0:	movt	r1, #1
   111f4:	str	r0, [sp, #8]
   111f8:	mov	r0, r1
   111fc:	bl	10f38 <gettext@plt>
   11200:	movw	r1, #53572	; 0xd144
   11204:	movt	r1, #2
   11208:	ldr	r1, [r1]
   1120c:	bl	10ddc <fputs_unlocked@plt>
   11210:	movw	r1, #50144	; 0xc3e0
   11214:	movt	r1, #1
   11218:	str	r0, [sp, #4]
   1121c:	mov	r0, r1
   11220:	bl	10f38 <gettext@plt>
   11224:	movw	r1, #53572	; 0xd144
   11228:	movt	r1, #2
   1122c:	ldr	r1, [r1]
   11230:	bl	10ddc <fputs_unlocked@plt>
   11234:	movw	r1, #50198	; 0xc416
   11238:	movt	r1, #1
   1123c:	str	r0, [sp]
   11240:	mov	r0, r1
   11244:	bl	11250 <__assert_fail@plt+0x228>
   11248:	ldr	r0, [fp, #-4]
   1124c:	bl	10f2c <exit@plt>
   11250:	push	{fp, lr}
   11254:	mov	fp, sp
   11258:	sub	sp, sp, #88	; 0x58
   1125c:	add	r1, sp, #28
   11260:	movw	r2, #50712	; 0xc618
   11264:	movt	r2, #1
   11268:	str	r0, [fp, #-4]
   1126c:	mov	r0, r1
   11270:	str	r1, [sp, #12]
   11274:	mov	r1, r2
   11278:	movw	r2, #56	; 0x38
   1127c:	bl	10e30 <memcpy@plt>
   11280:	ldr	r0, [fp, #-4]
   11284:	str	r0, [sp, #24]
   11288:	ldr	r0, [sp, #12]
   1128c:	str	r0, [sp, #20]
   11290:	ldr	r0, [sp, #20]
   11294:	ldr	r0, [r0]
   11298:	movw	r1, #0
   1129c:	cmp	r0, r1
   112a0:	movw	r0, #0
   112a4:	str	r0, [sp, #8]
   112a8:	beq	112d4 <__assert_fail@plt+0x2ac>
   112ac:	ldr	r0, [fp, #-4]
   112b0:	ldr	r1, [sp, #20]
   112b4:	ldr	r1, [r1]
   112b8:	bl	10df4 <strcmp@plt>
   112bc:	cmp	r0, #0
   112c0:	movw	r0, #0
   112c4:	moveq	r0, #1
   112c8:	mvn	r1, #0
   112cc:	eor	r0, r0, r1
   112d0:	str	r0, [sp, #8]
   112d4:	ldr	r0, [sp, #8]
   112d8:	tst	r0, #1
   112dc:	beq	112f0 <__assert_fail@plt+0x2c8>
   112e0:	ldr	r0, [sp, #20]
   112e4:	add	r0, r0, #8
   112e8:	str	r0, [sp, #20]
   112ec:	b	11290 <__assert_fail@plt+0x268>
   112f0:	ldr	r0, [sp, #20]
   112f4:	ldr	r0, [r0, #4]
   112f8:	movw	r1, #0
   112fc:	cmp	r0, r1
   11300:	beq	11310 <__assert_fail@plt+0x2e8>
   11304:	ldr	r0, [sp, #20]
   11308:	ldr	r0, [r0, #4]
   1130c:	str	r0, [sp, #24]
   11310:	movw	r0, #50392	; 0xc4d8
   11314:	movt	r0, #1
   11318:	bl	10f38 <gettext@plt>
   1131c:	movw	r1, #50228	; 0xc434
   11320:	movt	r1, #1
   11324:	movw	r2, #50415	; 0xc4ef
   11328:	movt	r2, #1
   1132c:	bl	10e00 <printf@plt>
   11330:	movw	r1, #5
   11334:	str	r0, [sp, #4]
   11338:	mov	r0, r1
   1133c:	movw	r1, #0
   11340:	bl	10fc8 <setlocale@plt>
   11344:	str	r0, [sp, #16]
   11348:	ldr	r0, [sp, #16]
   1134c:	movw	r1, #0
   11350:	cmp	r0, r1
   11354:	beq	11390 <__assert_fail@plt+0x368>
   11358:	ldr	r0, [sp, #16]
   1135c:	movw	r1, #50455	; 0xc517
   11360:	movt	r1, #1
   11364:	movw	r2, #3
   11368:	bl	11010 <strncmp@plt>
   1136c:	cmp	r0, #0
   11370:	beq	11390 <__assert_fail@plt+0x368>
   11374:	movw	r0, #50459	; 0xc51b
   11378:	movt	r0, #1
   1137c:	bl	10f38 <gettext@plt>
   11380:	movw	r1, #53572	; 0xd144
   11384:	movt	r1, #2
   11388:	ldr	r1, [r1]
   1138c:	bl	10ddc <fputs_unlocked@plt>
   11390:	movw	r0, #50530	; 0xc562
   11394:	movt	r0, #1
   11398:	bl	10f38 <gettext@plt>
   1139c:	ldr	r2, [fp, #-4]
   113a0:	movw	r1, #50415	; 0xc4ef
   113a4:	movt	r1, #1
   113a8:	bl	10e00 <printf@plt>
   113ac:	movw	r1, #50557	; 0xc57d
   113b0:	movt	r1, #1
   113b4:	str	r0, [sp]
   113b8:	mov	r0, r1
   113bc:	bl	10f38 <gettext@plt>
   113c0:	ldr	r1, [sp, #24]
   113c4:	ldr	r2, [sp, #24]
   113c8:	ldr	r3, [fp, #-4]
   113cc:	cmp	r2, r3
   113d0:	movw	r2, #0
   113d4:	moveq	r2, #1
   113d8:	tst	r2, #1
   113dc:	movw	r2, #49981	; 0xc33d
   113e0:	movt	r2, #1
   113e4:	movw	r3, #50325	; 0xc495
   113e8:	movt	r3, #1
   113ec:	movne	r2, r3
   113f0:	bl	10e00 <printf@plt>
   113f4:	mov	sp, fp
   113f8:	pop	{fp, pc}
   113fc:	push	{fp, lr}
   11400:	mov	fp, sp
   11404:	sub	sp, sp, #88	; 0x58
   11408:	movw	r2, #0
   1140c:	str	r2, [fp, #-4]
   11410:	str	r0, [fp, #-8]
   11414:	str	r1, [fp, #-12]
   11418:	str	r2, [fp, #-20]	; 0xffffffec
   1141c:	ldr	r0, [fp, #-12]
   11420:	ldr	r0, [r0]
   11424:	bl	11b78 <__assert_fail@plt+0xb50>
   11428:	movw	r0, #6
   1142c:	movw	r1, #49981	; 0xc33d
   11430:	movt	r1, #1
   11434:	bl	10fc8 <setlocale@plt>
   11438:	movw	r1, #50232	; 0xc438
   1143c:	movt	r1, #1
   11440:	str	r0, [fp, #-32]	; 0xffffffe0
   11444:	mov	r0, r1
   11448:	movw	r1, #50204	; 0xc41c
   1144c:	movt	r1, #1
   11450:	bl	10ff8 <bindtextdomain@plt>
   11454:	movw	r1, #50232	; 0xc438
   11458:	movt	r1, #1
   1145c:	str	r0, [fp, #-36]	; 0xffffffdc
   11460:	mov	r0, r1
   11464:	bl	10e78 <textdomain@plt>
   11468:	movw	r1, #5848	; 0x16d8
   1146c:	movt	r1, #1
   11470:	str	r0, [fp, #-40]	; 0xffffffd8
   11474:	mov	r0, r1
   11478:	bl	1c25c <__assert_fail@plt+0xb234>
   1147c:	movw	r1, #2
   11480:	str	r1, [fp, #-24]	; 0xffffffe8
   11484:	ldr	r0, [fp, #-8]
   11488:	ldr	r1, [fp, #-12]
   1148c:	movw	r2, #49981	; 0xc33d
   11490:	movt	r2, #1
   11494:	movw	r3, #50632	; 0xc5c8
   11498:	movt	r3, #1
   1149c:	movw	ip, #0
   114a0:	str	ip, [sp]
   114a4:	bl	10f14 <getopt_long@plt>
   114a8:	str	r0, [fp, #-28]	; 0xffffffe4
   114ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   114b0:	cmn	r0, #1
   114b4:	bne	114bc <__assert_fail@plt+0x494>
   114b8:	b	115cc <__assert_fail@plt+0x5a4>
   114bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   114c0:	cmn	r0, #3
   114c4:	str	r0, [sp, #44]	; 0x2c
   114c8:	beq	1150c <__assert_fail@plt+0x4e4>
   114cc:	b	114d0 <__assert_fail@plt+0x4a8>
   114d0:	ldr	r0, [sp, #44]	; 0x2c
   114d4:	cmn	r0, #2
   114d8:	beq	11504 <__assert_fail@plt+0x4dc>
   114dc:	b	114e0 <__assert_fail@plt+0x4b8>
   114e0:	ldr	r0, [sp, #44]	; 0x2c
   114e4:	cmp	r0, #256	; 0x100
   114e8:	beq	11554 <__assert_fail@plt+0x52c>
   114ec:	b	114f0 <__assert_fail@plt+0x4c8>
   114f0:	movw	r0, #257	; 0x101
   114f4:	ldr	r1, [sp, #44]	; 0x2c
   114f8:	cmp	r1, r0
   114fc:	beq	11560 <__assert_fail@plt+0x538>
   11500:	b	115c0 <__assert_fail@plt+0x598>
   11504:	movw	r0, #0
   11508:	bl	11124 <__assert_fail@plt+0xfc>
   1150c:	movw	r0, #53572	; 0xd144
   11510:	movt	r0, #2
   11514:	ldr	r0, [r0]
   11518:	movw	r1, #53476	; 0xd0e4
   1151c:	movt	r1, #2
   11520:	ldr	r3, [r1]
   11524:	movw	r1, #50198	; 0xc416
   11528:	movt	r1, #1
   1152c:	movw	r2, #50228	; 0xc434
   11530:	movt	r2, #1
   11534:	movw	ip, #50242	; 0xc442
   11538:	movt	ip, #1
   1153c:	str	ip, [sp]
   11540:	movw	ip, #0
   11544:	str	ip, [sp, #4]
   11548:	bl	14a50 <__assert_fail@plt+0x3a28>
   1154c:	movw	r0, #0
   11550:	bl	10f2c <exit@plt>
   11554:	movw	r0, #0
   11558:	str	r0, [fp, #-24]	; 0xffffffe8
   1155c:	b	115c8 <__assert_fail@plt+0x5a0>
   11560:	movw	r0, #53576	; 0xd148
   11564:	movt	r0, #2
   11568:	ldr	r0, [r0]
   1156c:	movw	r1, #50260	; 0xc454
   11570:	movt	r1, #1
   11574:	str	r0, [sp, #40]	; 0x28
   11578:	mov	r0, r1
   1157c:	bl	10f38 <gettext@plt>
   11580:	mov	r1, sp
   11584:	mov	r2, #0
   11588:	str	r2, [r1, #16]
   1158c:	str	r0, [r1, #12]
   11590:	movw	r0, #49981	; 0xc33d
   11594:	movt	r0, #1
   11598:	str	r0, [r1, #8]
   1159c:	str	r2, [r1, #4]
   115a0:	mvn	r0, #0
   115a4:	str	r0, [r1]
   115a8:	ldr	r0, [sp, #40]	; 0x28
   115ac:	str	r2, [sp, #36]	; 0x24
   115b0:	ldr	r3, [sp, #36]	; 0x24
   115b4:	bl	17b50 <__assert_fail@plt+0x6b28>
   115b8:	str	r0, [fp, #-20]	; 0xffffffec
   115bc:	b	115c8 <__assert_fail@plt+0x5a0>
   115c0:	movw	r0, #1
   115c4:	bl	11124 <__assert_fail@plt+0xfc>
   115c8:	b	11484 <__assert_fail@plt+0x45c>
   115cc:	ldr	r0, [fp, #-8]
   115d0:	movw	r1, #53560	; 0xd138
   115d4:	movt	r1, #2
   115d8:	ldr	r1, [r1]
   115dc:	cmp	r0, r1
   115e0:	beq	11634 <__assert_fail@plt+0x60c>
   115e4:	movw	r0, #50275	; 0xc463
   115e8:	movt	r0, #1
   115ec:	bl	10f38 <gettext@plt>
   115f0:	ldr	r1, [fp, #-12]
   115f4:	movw	r2, #53560	; 0xd138
   115f8:	movt	r2, #2
   115fc:	ldr	r2, [r2]
   11600:	add	r1, r1, r2, lsl #2
   11604:	ldr	r1, [r1]
   11608:	str	r0, [sp, #32]
   1160c:	mov	r0, r1
   11610:	bl	141d4 <__assert_fail@plt+0x31ac>
   11614:	movw	r1, #0
   11618:	str	r0, [sp, #28]
   1161c:	mov	r0, r1
   11620:	ldr	r2, [sp, #32]
   11624:	ldr	r3, [sp, #28]
   11628:	bl	10ecc <error@plt>
   1162c:	movw	r0, #1
   11630:	bl	11124 <__assert_fail@plt+0xfc>
   11634:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11638:	bl	117f8 <__assert_fail@plt+0x7d0>
   1163c:	str	r0, [fp, #-16]
   11640:	ldr	r0, [fp, #-20]	; 0xffffffec
   11644:	ldr	r1, [fp, #-16]
   11648:	cmp	r0, r1
   1164c:	bcs	11664 <__assert_fail@plt+0x63c>
   11650:	ldr	r0, [fp, #-20]	; 0xffffffec
   11654:	ldr	r1, [fp, #-16]
   11658:	sub	r0, r1, r0
   1165c:	str	r0, [fp, #-16]
   11660:	b	1166c <__assert_fail@plt+0x644>
   11664:	movw	r0, #1
   11668:	str	r0, [fp, #-16]
   1166c:	ldr	r1, [fp, #-16]
   11670:	movw	r0, #50292	; 0xc474
   11674:	movt	r0, #1
   11678:	bl	10e00 <printf@plt>
   1167c:	movw	r1, #0
   11680:	str	r0, [sp, #24]
   11684:	mov	r0, r1
   11688:	mov	sp, fp
   1168c:	pop	{fp, pc}
   11690:	sub	sp, sp, #4
   11694:	str	r0, [sp]
   11698:	ldr	r0, [sp]
   1169c:	movw	r1, #53584	; 0xd150
   116a0:	movt	r1, #2
   116a4:	str	r0, [r1]
   116a8:	add	sp, sp, #4
   116ac:	bx	lr
   116b0:	sub	sp, sp, #4
   116b4:	and	r0, r0, #1
   116b8:	strb	r0, [sp, #3]
   116bc:	ldrb	r0, [sp, #3]
   116c0:	and	r0, r0, #1
   116c4:	movw	r1, #53588	; 0xd154
   116c8:	movt	r1, #2
   116cc:	strb	r0, [r1]
   116d0:	add	sp, sp, #4
   116d4:	bx	lr
   116d8:	push	{fp, lr}
   116dc:	mov	fp, sp
   116e0:	sub	sp, sp, #24
   116e4:	movw	r0, #53572	; 0xd144
   116e8:	movt	r0, #2
   116ec:	ldr	r0, [r0]
   116f0:	bl	1a3e8 <__assert_fail@plt+0x93c0>
   116f4:	cmp	r0, #0
   116f8:	beq	117c8 <__assert_fail@plt+0x7a0>
   116fc:	movw	r0, #53588	; 0xd154
   11700:	movt	r0, #2
   11704:	ldrb	r0, [r0]
   11708:	tst	r0, #1
   1170c:	beq	11720 <__assert_fail@plt+0x6f8>
   11710:	bl	10f74 <__errno_location@plt>
   11714:	ldr	r0, [r0]
   11718:	cmp	r0, #32
   1171c:	beq	117c8 <__assert_fail@plt+0x7a0>
   11720:	movw	r0, #50783	; 0xc65f
   11724:	movt	r0, #1
   11728:	bl	10f38 <gettext@plt>
   1172c:	str	r0, [fp, #-4]
   11730:	movw	r0, #53584	; 0xd150
   11734:	movt	r0, #2
   11738:	ldr	r0, [r0]
   1173c:	movw	r1, #0
   11740:	cmp	r0, r1
   11744:	beq	1179c <__assert_fail@plt+0x774>
   11748:	bl	10f74 <__errno_location@plt>
   1174c:	ldr	r1, [r0]
   11750:	movw	r0, #53584	; 0xd150
   11754:	movt	r0, #2
   11758:	ldr	r0, [r0]
   1175c:	str	r1, [fp, #-8]
   11760:	bl	13f38 <__assert_fail@plt+0x2f10>
   11764:	ldr	r1, [fp, #-4]
   11768:	movw	r2, #0
   1176c:	str	r0, [sp, #12]
   11770:	mov	r0, r2
   11774:	ldr	r2, [fp, #-8]
   11778:	str	r1, [sp, #8]
   1177c:	mov	r1, r2
   11780:	movw	r2, #50795	; 0xc66b
   11784:	movt	r2, #1
   11788:	ldr	r3, [sp, #12]
   1178c:	ldr	ip, [sp, #8]
   11790:	str	ip, [sp]
   11794:	bl	10ecc <error@plt>
   11798:	b	117b8 <__assert_fail@plt+0x790>
   1179c:	bl	10f74 <__errno_location@plt>
   117a0:	ldr	r1, [r0]
   117a4:	ldr	r3, [fp, #-4]
   117a8:	movw	r0, #0
   117ac:	movw	r2, #50799	; 0xc66f
   117b0:	movt	r2, #1
   117b4:	bl	10ecc <error@plt>
   117b8:	movw	r0, #53480	; 0xd0e8
   117bc:	movt	r0, #2
   117c0:	ldr	r0, [r0]
   117c4:	bl	10e24 <_exit@plt>
   117c8:	movw	r0, #53568	; 0xd140
   117cc:	movt	r0, #2
   117d0:	ldr	r0, [r0]
   117d4:	bl	1a3e8 <__assert_fail@plt+0x93c0>
   117d8:	cmp	r0, #0
   117dc:	beq	117f0 <__assert_fail@plt+0x7c8>
   117e0:	movw	r0, #53480	; 0xd0e8
   117e4:	movt	r0, #2
   117e8:	ldr	r0, [r0]
   117ec:	bl	10e24 <_exit@plt>
   117f0:	mov	sp, fp
   117f4:	pop	{fp, pc}
   117f8:	push	{fp, lr}
   117fc:	mov	fp, sp
   11800:	sub	sp, sp, #32
   11804:	str	r0, [fp, #-8]
   11808:	mvn	r0, #0
   1180c:	str	r0, [fp, #-12]
   11810:	ldr	r0, [fp, #-8]
   11814:	cmp	r0, #2
   11818:	bne	1189c <__assert_fail@plt+0x874>
   1181c:	movw	r0, #50802	; 0xc672
   11820:	movt	r0, #1
   11824:	bl	10ed8 <getenv@plt>
   11828:	bl	118e0 <__assert_fail@plt+0x8b8>
   1182c:	str	r0, [sp, #16]
   11830:	movw	r0, #50818	; 0xc682
   11834:	movt	r0, #1
   11838:	bl	10ed8 <getenv@plt>
   1183c:	bl	118e0 <__assert_fail@plt+0x8b8>
   11840:	str	r0, [fp, #-12]
   11844:	ldr	r0, [fp, #-12]
   11848:	cmp	r0, #0
   1184c:	bne	11858 <__assert_fail@plt+0x830>
   11850:	mvn	r0, #0
   11854:	str	r0, [fp, #-12]
   11858:	ldr	r0, [sp, #16]
   1185c:	cmp	r0, #0
   11860:	beq	11894 <__assert_fail@plt+0x86c>
   11864:	ldr	r0, [sp, #16]
   11868:	ldr	r1, [fp, #-12]
   1186c:	cmp	r0, r1
   11870:	bcs	11880 <__assert_fail@plt+0x858>
   11874:	ldr	r0, [sp, #16]
   11878:	str	r0, [sp, #8]
   1187c:	b	11888 <__assert_fail@plt+0x860>
   11880:	ldr	r0, [fp, #-12]
   11884:	str	r0, [sp, #8]
   11888:	ldr	r0, [sp, #8]
   1188c:	str	r0, [fp, #-4]
   11890:	b	118d4 <__assert_fail@plt+0x8ac>
   11894:	movw	r0, #1
   11898:	str	r0, [fp, #-8]
   1189c:	ldr	r0, [fp, #-8]
   118a0:	bl	11a38 <__assert_fail@plt+0xa10>
   118a4:	str	r0, [sp, #12]
   118a8:	ldr	r0, [sp, #12]
   118ac:	ldr	r1, [fp, #-12]
   118b0:	cmp	r0, r1
   118b4:	bcs	118c4 <__assert_fail@plt+0x89c>
   118b8:	ldr	r0, [sp, #12]
   118bc:	str	r0, [sp, #4]
   118c0:	b	118cc <__assert_fail@plt+0x8a4>
   118c4:	ldr	r0, [fp, #-12]
   118c8:	str	r0, [sp, #4]
   118cc:	ldr	r0, [sp, #4]
   118d0:	str	r0, [fp, #-4]
   118d4:	ldr	r0, [fp, #-4]
   118d8:	mov	sp, fp
   118dc:	pop	{fp, pc}
   118e0:	push	{fp, lr}
   118e4:	mov	fp, sp
   118e8:	sub	sp, sp, #32
   118ec:	str	r0, [fp, #-8]
   118f0:	movw	r0, #0
   118f4:	str	r0, [fp, #-12]
   118f8:	ldr	r1, [fp, #-8]
   118fc:	cmp	r1, r0
   11900:	bne	11910 <__assert_fail@plt+0x8e8>
   11904:	ldr	r0, [fp, #-12]
   11908:	str	r0, [fp, #-4]
   1190c:	b	11a2c <__assert_fail@plt+0xa04>
   11910:	b	11914 <__assert_fail@plt+0x8ec>
   11914:	ldr	r0, [fp, #-8]
   11918:	ldrb	r0, [r0]
   1191c:	cmp	r0, #0
   11920:	movw	r0, #0
   11924:	str	r0, [sp, #8]
   11928:	beq	1193c <__assert_fail@plt+0x914>
   1192c:	ldr	r0, [fp, #-8]
   11930:	ldrb	r0, [r0]
   11934:	bl	1a190 <__assert_fail@plt+0x9168>
   11938:	str	r0, [sp, #8]
   1193c:	ldr	r0, [sp, #8]
   11940:	tst	r0, #1
   11944:	beq	11958 <__assert_fail@plt+0x930>
   11948:	ldr	r0, [fp, #-8]
   1194c:	add	r0, r0, #1
   11950:	str	r0, [fp, #-8]
   11954:	b	11914 <__assert_fail@plt+0x8ec>
   11958:	ldr	r0, [fp, #-8]
   1195c:	ldrb	r0, [r0]
   11960:	bl	19ea0 <__assert_fail@plt+0x8e78>
   11964:	tst	r0, #1
   11968:	beq	11a24 <__assert_fail@plt+0x9fc>
   1196c:	movw	r0, #0
   11970:	str	r0, [sp, #16]
   11974:	ldr	r0, [fp, #-8]
   11978:	add	r1, sp, #16
   1197c:	movw	r2, #10
   11980:	bl	10f44 <strtoul@plt>
   11984:	str	r0, [sp, #12]
   11988:	ldr	r0, [sp, #16]
   1198c:	movw	r1, #0
   11990:	cmp	r0, r1
   11994:	beq	11a20 <__assert_fail@plt+0x9f8>
   11998:	b	1199c <__assert_fail@plt+0x974>
   1199c:	ldr	r0, [sp, #16]
   119a0:	ldrb	r0, [r0]
   119a4:	cmp	r0, #0
   119a8:	movw	r0, #0
   119ac:	str	r0, [sp, #4]
   119b0:	beq	119c4 <__assert_fail@plt+0x99c>
   119b4:	ldr	r0, [sp, #16]
   119b8:	ldrb	r0, [r0]
   119bc:	bl	1a190 <__assert_fail@plt+0x9168>
   119c0:	str	r0, [sp, #4]
   119c4:	ldr	r0, [sp, #4]
   119c8:	tst	r0, #1
   119cc:	beq	119e0 <__assert_fail@plt+0x9b8>
   119d0:	ldr	r0, [sp, #16]
   119d4:	add	r0, r0, #1
   119d8:	str	r0, [sp, #16]
   119dc:	b	1199c <__assert_fail@plt+0x974>
   119e0:	ldr	r0, [sp, #16]
   119e4:	ldrb	r0, [r0]
   119e8:	cmp	r0, #0
   119ec:	bne	119fc <__assert_fail@plt+0x9d4>
   119f0:	ldr	r0, [sp, #12]
   119f4:	str	r0, [fp, #-4]
   119f8:	b	11a2c <__assert_fail@plt+0xa04>
   119fc:	ldr	r0, [sp, #16]
   11a00:	ldrb	r0, [r0]
   11a04:	cmp	r0, #44	; 0x2c
   11a08:	bne	11a18 <__assert_fail@plt+0x9f0>
   11a0c:	ldr	r0, [sp, #12]
   11a10:	str	r0, [fp, #-4]
   11a14:	b	11a2c <__assert_fail@plt+0xa04>
   11a18:	b	11a1c <__assert_fail@plt+0x9f4>
   11a1c:	b	11a20 <__assert_fail@plt+0x9f8>
   11a20:	b	11a24 <__assert_fail@plt+0x9fc>
   11a24:	ldr	r0, [fp, #-12]
   11a28:	str	r0, [fp, #-4]
   11a2c:	ldr	r0, [fp, #-4]
   11a30:	mov	sp, fp
   11a34:	pop	{fp, pc}
   11a38:	push	{fp, lr}
   11a3c:	mov	fp, sp
   11a40:	sub	sp, sp, #24
   11a44:	str	r0, [fp, #-8]
   11a48:	ldr	r0, [fp, #-8]
   11a4c:	cmp	r0, #1
   11a50:	bne	11a9c <__assert_fail@plt+0xa74>
   11a54:	bl	11b14 <__assert_fail@plt+0xaec>
   11a58:	str	r0, [sp, #12]
   11a5c:	ldr	r0, [sp, #12]
   11a60:	cmp	r0, #0
   11a64:	bls	11a74 <__assert_fail@plt+0xa4c>
   11a68:	ldr	r0, [sp, #12]
   11a6c:	str	r0, [fp, #-4]
   11a70:	b	11b08 <__assert_fail@plt+0xae0>
   11a74:	movw	r0, #84	; 0x54
   11a78:	bl	10e60 <sysconf@plt>
   11a7c:	str	r0, [sp, #8]
   11a80:	ldr	r0, [sp, #8]
   11a84:	cmp	r0, #0
   11a88:	ble	11a98 <__assert_fail@plt+0xa70>
   11a8c:	ldr	r0, [sp, #8]
   11a90:	str	r0, [fp, #-4]
   11a94:	b	11b08 <__assert_fail@plt+0xae0>
   11a98:	b	11b00 <__assert_fail@plt+0xad8>
   11a9c:	movw	r0, #83	; 0x53
   11aa0:	bl	10e60 <sysconf@plt>
   11aa4:	str	r0, [sp, #4]
   11aa8:	ldr	r0, [sp, #4]
   11aac:	cmp	r0, #1
   11ab0:	beq	11ac0 <__assert_fail@plt+0xa98>
   11ab4:	ldr	r0, [sp, #4]
   11ab8:	cmp	r0, #2
   11abc:	bne	11ae4 <__assert_fail@plt+0xabc>
   11ac0:	bl	11b14 <__assert_fail@plt+0xaec>
   11ac4:	str	r0, [sp]
   11ac8:	ldr	r0, [sp]
   11acc:	ldr	r1, [sp, #4]
   11ad0:	cmp	r0, r1
   11ad4:	bls	11ae0 <__assert_fail@plt+0xab8>
   11ad8:	ldr	r0, [sp]
   11adc:	str	r0, [sp, #4]
   11ae0:	b	11ae4 <__assert_fail@plt+0xabc>
   11ae4:	ldr	r0, [sp, #4]
   11ae8:	cmp	r0, #0
   11aec:	ble	11afc <__assert_fail@plt+0xad4>
   11af0:	ldr	r0, [sp, #4]
   11af4:	str	r0, [fp, #-4]
   11af8:	b	11b08 <__assert_fail@plt+0xae0>
   11afc:	b	11b00 <__assert_fail@plt+0xad8>
   11b00:	movw	r0, #1
   11b04:	str	r0, [fp, #-4]
   11b08:	ldr	r0, [fp, #-4]
   11b0c:	mov	sp, fp
   11b10:	pop	{fp, pc}
   11b14:	push	{fp, lr}
   11b18:	mov	fp, sp
   11b1c:	sub	sp, sp, #136	; 0x88
   11b20:	movw	r0, #0
   11b24:	movw	r1, #128	; 0x80
   11b28:	add	r2, sp, #4
   11b2c:	bl	10fec <sched_getaffinity@plt>
   11b30:	cmp	r0, #0
   11b34:	bne	11b64 <__assert_fail@plt+0xb3c>
   11b38:	movw	r0, #128	; 0x80
   11b3c:	add	r1, sp, #4
   11b40:	bl	10e48 <__sched_cpucount@plt>
   11b44:	str	r0, [sp]
   11b48:	ldr	r0, [sp]
   11b4c:	cmp	r0, #0
   11b50:	bls	11b60 <__assert_fail@plt+0xb38>
   11b54:	ldr	r0, [sp]
   11b58:	str	r0, [fp, #-4]
   11b5c:	b	11b6c <__assert_fail@plt+0xb44>
   11b60:	b	11b64 <__assert_fail@plt+0xb3c>
   11b64:	movw	r0, #0
   11b68:	str	r0, [fp, #-4]
   11b6c:	ldr	r0, [fp, #-4]
   11b70:	mov	sp, fp
   11b74:	pop	{fp, pc}
   11b78:	push	{fp, lr}
   11b7c:	mov	fp, sp
   11b80:	sub	sp, sp, #24
   11b84:	str	r0, [fp, #-4]
   11b88:	ldr	r0, [fp, #-4]
   11b8c:	movw	r1, #0
   11b90:	cmp	r0, r1
   11b94:	bne	11bb8 <__assert_fail@plt+0xb90>
   11b98:	movw	r0, #53568	; 0xd140
   11b9c:	movt	r0, #2
   11ba0:	ldr	r1, [r0]
   11ba4:	movw	r0, #50835	; 0xc693
   11ba8:	movt	r0, #1
   11bac:	bl	11004 <fputs@plt>
   11bb0:	str	r0, [sp, #8]
   11bb4:	bl	1101c <abort@plt>
   11bb8:	ldr	r0, [fp, #-4]
   11bbc:	movw	r1, #47	; 0x2f
   11bc0:	bl	10fd4 <strrchr@plt>
   11bc4:	str	r0, [fp, #-8]
   11bc8:	ldr	r0, [fp, #-8]
   11bcc:	movw	r1, #0
   11bd0:	cmp	r0, r1
   11bd4:	beq	11be8 <__assert_fail@plt+0xbc0>
   11bd8:	ldr	r0, [fp, #-8]
   11bdc:	add	r0, r0, #1
   11be0:	str	r0, [sp, #4]
   11be4:	b	11bf0 <__assert_fail@plt+0xbc8>
   11be8:	ldr	r0, [fp, #-4]
   11bec:	str	r0, [sp, #4]
   11bf0:	ldr	r0, [sp, #4]
   11bf4:	str	r0, [sp, #12]
   11bf8:	ldr	r0, [sp, #12]
   11bfc:	ldr	r1, [fp, #-4]
   11c00:	sub	r0, r0, r1
   11c04:	cmp	r0, #7
   11c08:	blt	11c74 <__assert_fail@plt+0xc4c>
   11c0c:	ldr	r0, [sp, #12]
   11c10:	mvn	r1, #6
   11c14:	add	r0, r0, r1
   11c18:	movw	r1, #50891	; 0xc6cb
   11c1c:	movt	r1, #1
   11c20:	movw	r2, #7
   11c24:	bl	11010 <strncmp@plt>
   11c28:	cmp	r0, #0
   11c2c:	bne	11c74 <__assert_fail@plt+0xc4c>
   11c30:	ldr	r0, [sp, #12]
   11c34:	str	r0, [fp, #-4]
   11c38:	ldr	r0, [sp, #12]
   11c3c:	movw	r1, #50899	; 0xc6d3
   11c40:	movt	r1, #1
   11c44:	movw	r2, #3
   11c48:	bl	11010 <strncmp@plt>
   11c4c:	cmp	r0, #0
   11c50:	bne	11c70 <__assert_fail@plt+0xc48>
   11c54:	ldr	r0, [sp, #12]
   11c58:	add	r0, r0, #3
   11c5c:	str	r0, [fp, #-4]
   11c60:	ldr	r0, [fp, #-4]
   11c64:	movw	r1, #53552	; 0xd130
   11c68:	movt	r1, #2
   11c6c:	str	r0, [r1]
   11c70:	b	11c74 <__assert_fail@plt+0xc4c>
   11c74:	ldr	r0, [fp, #-4]
   11c78:	movw	r1, #53592	; 0xd158
   11c7c:	movt	r1, #2
   11c80:	str	r0, [r1]
   11c84:	ldr	r0, [fp, #-4]
   11c88:	movw	r1, #53556	; 0xd134
   11c8c:	movt	r1, #2
   11c90:	str	r0, [r1]
   11c94:	mov	sp, fp
   11c98:	pop	{fp, pc}
   11c9c:	push	{fp, lr}
   11ca0:	mov	fp, sp
   11ca4:	sub	sp, sp, #24
   11ca8:	str	r0, [fp, #-4]
   11cac:	bl	10f74 <__errno_location@plt>
   11cb0:	ldr	r0, [r0]
   11cb4:	str	r0, [fp, #-8]
   11cb8:	ldr	r0, [fp, #-4]
   11cbc:	movw	r1, #0
   11cc0:	cmp	r0, r1
   11cc4:	beq	11cd4 <__assert_fail@plt+0xcac>
   11cc8:	ldr	r0, [fp, #-4]
   11ccc:	str	r0, [sp, #8]
   11cd0:	b	11ce4 <__assert_fail@plt+0xcbc>
   11cd4:	movw	r0, #53596	; 0xd15c
   11cd8:	movt	r0, #2
   11cdc:	str	r0, [sp, #8]
   11ce0:	b	11ce4 <__assert_fail@plt+0xcbc>
   11ce4:	ldr	r0, [sp, #8]
   11ce8:	movw	r1, #48	; 0x30
   11cec:	bl	17810 <__assert_fail@plt+0x67e8>
   11cf0:	str	r0, [sp, #12]
   11cf4:	ldr	r0, [fp, #-8]
   11cf8:	str	r0, [sp, #4]
   11cfc:	bl	10f74 <__errno_location@plt>
   11d00:	ldr	r1, [sp, #4]
   11d04:	str	r1, [r0]
   11d08:	ldr	r0, [sp, #12]
   11d0c:	mov	sp, fp
   11d10:	pop	{fp, pc}
   11d14:	sub	sp, sp, #8
   11d18:	str	r0, [sp, #4]
   11d1c:	ldr	r0, [sp, #4]
   11d20:	movw	r1, #0
   11d24:	cmp	r0, r1
   11d28:	beq	11d38 <__assert_fail@plt+0xd10>
   11d2c:	ldr	r0, [sp, #4]
   11d30:	str	r0, [sp]
   11d34:	b	11d48 <__assert_fail@plt+0xd20>
   11d38:	movw	r0, #53596	; 0xd15c
   11d3c:	movt	r0, #2
   11d40:	str	r0, [sp]
   11d44:	b	11d48 <__assert_fail@plt+0xd20>
   11d48:	ldr	r0, [sp]
   11d4c:	ldr	r0, [r0]
   11d50:	add	sp, sp, #8
   11d54:	bx	lr
   11d58:	sub	sp, sp, #16
   11d5c:	str	r0, [sp, #12]
   11d60:	str	r1, [sp, #8]
   11d64:	ldr	r0, [sp, #8]
   11d68:	ldr	r1, [sp, #12]
   11d6c:	movw	r2, #0
   11d70:	cmp	r1, r2
   11d74:	str	r0, [sp, #4]
   11d78:	beq	11d88 <__assert_fail@plt+0xd60>
   11d7c:	ldr	r0, [sp, #12]
   11d80:	str	r0, [sp]
   11d84:	b	11d98 <__assert_fail@plt+0xd70>
   11d88:	movw	r0, #53596	; 0xd15c
   11d8c:	movt	r0, #2
   11d90:	str	r0, [sp]
   11d94:	b	11d98 <__assert_fail@plt+0xd70>
   11d98:	ldr	r0, [sp]
   11d9c:	ldr	r1, [sp, #4]
   11da0:	str	r1, [r0]
   11da4:	add	sp, sp, #16
   11da8:	bx	lr
   11dac:	sub	sp, sp, #32
   11db0:	str	r0, [sp, #28]
   11db4:	strb	r1, [sp, #27]
   11db8:	str	r2, [sp, #20]
   11dbc:	ldrb	r0, [sp, #27]
   11dc0:	strb	r0, [sp, #19]
   11dc4:	ldr	r0, [sp, #28]
   11dc8:	movw	r1, #0
   11dcc:	cmp	r0, r1
   11dd0:	beq	11de0 <__assert_fail@plt+0xdb8>
   11dd4:	ldr	r0, [sp, #28]
   11dd8:	str	r0, [sp]
   11ddc:	b	11df0 <__assert_fail@plt+0xdc8>
   11de0:	movw	r0, #53596	; 0xd15c
   11de4:	movt	r0, #2
   11de8:	str	r0, [sp]
   11dec:	b	11df0 <__assert_fail@plt+0xdc8>
   11df0:	ldr	r0, [sp]
   11df4:	add	r0, r0, #8
   11df8:	ldrb	r1, [sp, #19]
   11dfc:	lsr	r1, r1, #5
   11e00:	add	r0, r0, r1, lsl #2
   11e04:	str	r0, [sp, #12]
   11e08:	ldrb	r0, [sp, #19]
   11e0c:	and	r0, r0, #31
   11e10:	str	r0, [sp, #8]
   11e14:	ldr	r0, [sp, #12]
   11e18:	ldr	r0, [r0]
   11e1c:	ldr	r1, [sp, #8]
   11e20:	lsr	r0, r0, r1
   11e24:	and	r0, r0, #1
   11e28:	str	r0, [sp, #4]
   11e2c:	ldr	r0, [sp, #20]
   11e30:	and	r0, r0, #1
   11e34:	ldr	r1, [sp, #4]
   11e38:	eor	r0, r0, r1
   11e3c:	ldr	r1, [sp, #8]
   11e40:	lsl	r0, r0, r1
   11e44:	ldr	r1, [sp, #12]
   11e48:	ldr	r2, [r1]
   11e4c:	eor	r0, r2, r0
   11e50:	str	r0, [r1]
   11e54:	ldr	r0, [sp, #4]
   11e58:	add	sp, sp, #32
   11e5c:	bx	lr
   11e60:	sub	sp, sp, #12
   11e64:	str	r0, [sp, #8]
   11e68:	str	r1, [sp, #4]
   11e6c:	ldr	r0, [sp, #8]
   11e70:	movw	r1, #0
   11e74:	cmp	r0, r1
   11e78:	bne	11e88 <__assert_fail@plt+0xe60>
   11e7c:	movw	r0, #53596	; 0xd15c
   11e80:	movt	r0, #2
   11e84:	str	r0, [sp, #8]
   11e88:	ldr	r0, [sp, #8]
   11e8c:	ldr	r0, [r0, #4]
   11e90:	str	r0, [sp]
   11e94:	ldr	r0, [sp, #4]
   11e98:	ldr	r1, [sp, #8]
   11e9c:	str	r0, [r1, #4]
   11ea0:	ldr	r0, [sp]
   11ea4:	add	sp, sp, #12
   11ea8:	bx	lr
   11eac:	push	{fp, lr}
   11eb0:	mov	fp, sp
   11eb4:	sub	sp, sp, #16
   11eb8:	str	r0, [fp, #-4]
   11ebc:	str	r1, [sp, #8]
   11ec0:	str	r2, [sp, #4]
   11ec4:	ldr	r0, [fp, #-4]
   11ec8:	movw	r1, #0
   11ecc:	cmp	r0, r1
   11ed0:	bne	11ee0 <__assert_fail@plt+0xeb8>
   11ed4:	movw	r0, #53596	; 0xd15c
   11ed8:	movt	r0, #2
   11edc:	str	r0, [fp, #-4]
   11ee0:	ldr	r0, [fp, #-4]
   11ee4:	movw	r1, #10
   11ee8:	str	r1, [r0]
   11eec:	ldr	r0, [sp, #8]
   11ef0:	movw	r1, #0
   11ef4:	cmp	r0, r1
   11ef8:	beq	11f0c <__assert_fail@plt+0xee4>
   11efc:	ldr	r0, [sp, #4]
   11f00:	movw	r1, #0
   11f04:	cmp	r0, r1
   11f08:	bne	11f10 <__assert_fail@plt+0xee8>
   11f0c:	bl	1101c <abort@plt>
   11f10:	ldr	r0, [sp, #8]
   11f14:	ldr	r1, [fp, #-4]
   11f18:	str	r0, [r1, #40]	; 0x28
   11f1c:	ldr	r0, [sp, #4]
   11f20:	ldr	r1, [fp, #-4]
   11f24:	str	r0, [r1, #44]	; 0x2c
   11f28:	mov	sp, fp
   11f2c:	pop	{fp, pc}
   11f30:	push	{r4, r5, r6, sl, fp, lr}
   11f34:	add	fp, sp, #16
   11f38:	sub	sp, sp, #56	; 0x38
   11f3c:	ldr	ip, [fp, #8]
   11f40:	str	r0, [fp, #-20]	; 0xffffffec
   11f44:	str	r1, [fp, #-24]	; 0xffffffe8
   11f48:	str	r2, [fp, #-28]	; 0xffffffe4
   11f4c:	str	r3, [fp, #-32]	; 0xffffffe0
   11f50:	ldr	r0, [fp, #8]
   11f54:	movw	r1, #0
   11f58:	cmp	r0, r1
   11f5c:	beq	11f6c <__assert_fail@plt+0xf44>
   11f60:	ldr	r0, [fp, #8]
   11f64:	str	r0, [sp, #24]
   11f68:	b	11f7c <__assert_fail@plt+0xf54>
   11f6c:	movw	r0, #53596	; 0xd15c
   11f70:	movt	r0, #2
   11f74:	str	r0, [sp, #24]
   11f78:	b	11f7c <__assert_fail@plt+0xf54>
   11f7c:	ldr	r0, [sp, #24]
   11f80:	str	r0, [sp, #36]	; 0x24
   11f84:	bl	10f74 <__errno_location@plt>
   11f88:	ldr	r0, [r0]
   11f8c:	str	r0, [sp, #32]
   11f90:	ldr	r0, [fp, #-20]	; 0xffffffec
   11f94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11f98:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11f9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11fa0:	ldr	ip, [sp, #36]	; 0x24
   11fa4:	ldr	ip, [ip]
   11fa8:	ldr	lr, [sp, #36]	; 0x24
   11fac:	ldr	lr, [lr, #4]
   11fb0:	ldr	r4, [sp, #36]	; 0x24
   11fb4:	add	r4, r4, #8
   11fb8:	ldr	r5, [sp, #36]	; 0x24
   11fbc:	ldr	r5, [r5, #40]	; 0x28
   11fc0:	ldr	r6, [sp, #36]	; 0x24
   11fc4:	ldr	r6, [r6, #44]	; 0x2c
   11fc8:	str	ip, [sp]
   11fcc:	str	lr, [sp, #4]
   11fd0:	str	r4, [sp, #8]
   11fd4:	str	r5, [sp, #12]
   11fd8:	str	r6, [sp, #16]
   11fdc:	bl	12004 <__assert_fail@plt+0xfdc>
   11fe0:	str	r0, [sp, #28]
   11fe4:	ldr	r0, [sp, #32]
   11fe8:	str	r0, [sp, #20]
   11fec:	bl	10f74 <__errno_location@plt>
   11ff0:	ldr	r1, [sp, #20]
   11ff4:	str	r1, [r0]
   11ff8:	ldr	r0, [sp, #28]
   11ffc:	sub	sp, fp, #16
   12000:	pop	{r4, r5, r6, sl, fp, pc}
   12004:	push	{r4, r5, r6, sl, fp, lr}
   12008:	add	fp, sp, #16
   1200c:	sub	sp, sp, #160	; 0xa0
   12010:	ldr	ip, [fp, #24]
   12014:	ldr	lr, [fp, #20]
   12018:	ldr	r4, [fp, #16]
   1201c:	ldr	r5, [fp, #12]
   12020:	ldr	r6, [fp, #8]
   12024:	str	r0, [fp, #-24]	; 0xffffffe8
   12028:	str	r1, [fp, #-28]	; 0xffffffe4
   1202c:	str	r2, [fp, #-32]	; 0xffffffe0
   12030:	str	r3, [fp, #-36]	; 0xffffffdc
   12034:	movw	r0, #0
   12038:	str	r0, [fp, #-44]	; 0xffffffd4
   1203c:	str	r0, [fp, #-48]	; 0xffffffd0
   12040:	str	r0, [fp, #-52]	; 0xffffffcc
   12044:	str	r0, [fp, #-56]	; 0xffffffc8
   12048:	movw	r0, #0
   1204c:	strb	r0, [fp, #-57]	; 0xffffffc7
   12050:	str	ip, [sp, #72]	; 0x48
   12054:	str	lr, [sp, #68]	; 0x44
   12058:	str	r4, [sp, #64]	; 0x40
   1205c:	str	r5, [sp, #60]	; 0x3c
   12060:	str	r6, [sp, #56]	; 0x38
   12064:	bl	10e9c <__ctype_get_mb_cur_max@plt>
   12068:	cmp	r0, #1
   1206c:	movw	r0, #0
   12070:	moveq	r0, #1
   12074:	and	r0, r0, #1
   12078:	strb	r0, [fp, #-58]	; 0xffffffc6
   1207c:	ldr	r0, [fp, #12]
   12080:	and	r0, r0, #2
   12084:	cmp	r0, #0
   12088:	movw	r0, #0
   1208c:	movne	r0, #1
   12090:	and	r0, r0, #1
   12094:	strb	r0, [fp, #-59]	; 0xffffffc5
   12098:	movw	r0, #0
   1209c:	strb	r0, [fp, #-60]	; 0xffffffc4
   120a0:	strb	r0, [fp, #-61]	; 0xffffffc3
   120a4:	movw	r0, #1
   120a8:	strb	r0, [fp, #-62]	; 0xffffffc2
   120ac:	ldr	r0, [fp, #8]
   120b0:	cmp	r0, #10
   120b4:	str	r0, [sp, #52]	; 0x34
   120b8:	bhi	122e0 <__assert_fail@plt+0x12b8>
   120bc:	add	r0, pc, #8
   120c0:	ldr	r1, [sp, #52]	; 0x34
   120c4:	ldr	r0, [r0, r1, lsl #2]
   120c8:	mov	pc, r0
   120cc:	ldrdeq	r2, [r1], -r4
   120d0:	andeq	r2, r1, r0, asr r2
   120d4:	andeq	r2, r1, r0, ror r2
   120d8:	andeq	r2, r1, r8, asr #4
   120dc:	andeq	r2, r1, r8, asr r2
   120e0:	andeq	r2, r1, r8, lsl #2
   120e4:	strdeq	r2, [r1], -r8
   120e8:	andeq	r2, r1, ip, ror #2
   120ec:	andeq	r2, r1, r0, lsl #3
   120f0:	andeq	r2, r1, r0, lsl #3
   120f4:	andeq	r2, r1, r0, lsl #3
   120f8:	movw	r0, #5
   120fc:	str	r0, [fp, #8]
   12100:	movw	r0, #1
   12104:	strb	r0, [fp, #-59]	; 0xffffffc5
   12108:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1210c:	tst	r0, #1
   12110:	bne	1214c <__assert_fail@plt+0x1124>
   12114:	b	12118 <__assert_fail@plt+0x10f0>
   12118:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1211c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12120:	cmp	r0, r1
   12124:	bcs	1213c <__assert_fail@plt+0x1114>
   12128:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1212c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12130:	add	r0, r0, r1
   12134:	movw	r1, #34	; 0x22
   12138:	strb	r1, [r0]
   1213c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12140:	add	r0, r0, #1
   12144:	str	r0, [fp, #-44]	; 0xffffffd4
   12148:	b	1214c <__assert_fail@plt+0x1124>
   1214c:	movw	r0, #1
   12150:	strb	r0, [fp, #-57]	; 0xffffffc7
   12154:	movw	r0, #50979	; 0xc723
   12158:	movt	r0, #1
   1215c:	str	r0, [fp, #-52]	; 0xffffffcc
   12160:	movw	r0, #1
   12164:	str	r0, [fp, #-56]	; 0xffffffc8
   12168:	b	122e4 <__assert_fail@plt+0x12bc>
   1216c:	movw	r0, #1
   12170:	strb	r0, [fp, #-57]	; 0xffffffc7
   12174:	movw	r0, #0
   12178:	strb	r0, [fp, #-59]	; 0xffffffc5
   1217c:	b	122e4 <__assert_fail@plt+0x12bc>
   12180:	ldr	r0, [fp, #8]
   12184:	cmp	r0, #10
   12188:	beq	121b4 <__assert_fail@plt+0x118c>
   1218c:	ldr	r1, [fp, #8]
   12190:	movw	r0, #50981	; 0xc725
   12194:	movt	r0, #1
   12198:	bl	141f8 <__assert_fail@plt+0x31d0>
   1219c:	str	r0, [fp, #20]
   121a0:	ldr	r1, [fp, #8]
   121a4:	movw	r0, #50983	; 0xc727
   121a8:	movt	r0, #1
   121ac:	bl	141f8 <__assert_fail@plt+0x31d0>
   121b0:	str	r0, [fp, #24]
   121b4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   121b8:	tst	r0, #1
   121bc:	bne	12228 <__assert_fail@plt+0x1200>
   121c0:	ldr	r0, [fp, #20]
   121c4:	str	r0, [fp, #-52]	; 0xffffffcc
   121c8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   121cc:	ldrsb	r0, [r0]
   121d0:	cmp	r0, #0
   121d4:	beq	12224 <__assert_fail@plt+0x11fc>
   121d8:	b	121dc <__assert_fail@plt+0x11b4>
   121dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   121e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   121e4:	cmp	r0, r1
   121e8:	bcs	12204 <__assert_fail@plt+0x11dc>
   121ec:	ldr	r0, [fp, #-52]	; 0xffffffcc
   121f0:	ldrb	r0, [r0]
   121f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   121f8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   121fc:	add	r1, r1, r2
   12200:	strb	r0, [r1]
   12204:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12208:	add	r0, r0, #1
   1220c:	str	r0, [fp, #-44]	; 0xffffffd4
   12210:	b	12214 <__assert_fail@plt+0x11ec>
   12214:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12218:	add	r0, r0, #1
   1221c:	str	r0, [fp, #-52]	; 0xffffffcc
   12220:	b	121c8 <__assert_fail@plt+0x11a0>
   12224:	b	12228 <__assert_fail@plt+0x1200>
   12228:	movw	r0, #1
   1222c:	strb	r0, [fp, #-57]	; 0xffffffc7
   12230:	ldr	r0, [fp, #24]
   12234:	str	r0, [fp, #-52]	; 0xffffffcc
   12238:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1223c:	bl	10f50 <strlen@plt>
   12240:	str	r0, [fp, #-56]	; 0xffffffc8
   12244:	b	122e4 <__assert_fail@plt+0x12bc>
   12248:	movw	r0, #1
   1224c:	strb	r0, [fp, #-57]	; 0xffffffc7
   12250:	movw	r0, #1
   12254:	strb	r0, [fp, #-59]	; 0xffffffc5
   12258:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1225c:	tst	r0, #1
   12260:	bne	1226c <__assert_fail@plt+0x1244>
   12264:	movw	r0, #1
   12268:	strb	r0, [fp, #-57]	; 0xffffffc7
   1226c:	b	12270 <__assert_fail@plt+0x1248>
   12270:	movw	r0, #2
   12274:	str	r0, [fp, #8]
   12278:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1227c:	tst	r0, #1
   12280:	bne	122bc <__assert_fail@plt+0x1294>
   12284:	b	12288 <__assert_fail@plt+0x1260>
   12288:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1228c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12290:	cmp	r0, r1
   12294:	bcs	122ac <__assert_fail@plt+0x1284>
   12298:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1229c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   122a0:	add	r0, r0, r1
   122a4:	movw	r1, #39	; 0x27
   122a8:	strb	r1, [r0]
   122ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   122b0:	add	r0, r0, #1
   122b4:	str	r0, [fp, #-44]	; 0xffffffd4
   122b8:	b	122bc <__assert_fail@plt+0x1294>
   122bc:	movw	r0, #50983	; 0xc727
   122c0:	movt	r0, #1
   122c4:	str	r0, [fp, #-52]	; 0xffffffcc
   122c8:	movw	r0, #1
   122cc:	str	r0, [fp, #-56]	; 0xffffffc8
   122d0:	b	122e4 <__assert_fail@plt+0x12bc>
   122d4:	movw	r0, #0
   122d8:	strb	r0, [fp, #-59]	; 0xffffffc5
   122dc:	b	122e4 <__assert_fail@plt+0x12bc>
   122e0:	bl	1101c <abort@plt>
   122e4:	movw	r0, #0
   122e8:	str	r0, [fp, #-40]	; 0xffffffd8
   122ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   122f0:	cmn	r0, #1
   122f4:	bne	12320 <__assert_fail@plt+0x12f8>
   122f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   122fc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12300:	add	r0, r0, r1
   12304:	ldrb	r0, [r0]
   12308:	cmp	r0, #0
   1230c:	movw	r0, #0
   12310:	moveq	r0, #1
   12314:	and	r0, r0, #1
   12318:	str	r0, [sp, #48]	; 0x30
   1231c:	b	1233c <__assert_fail@plt+0x1314>
   12320:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12324:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12328:	cmp	r0, r1
   1232c:	movw	r0, #0
   12330:	moveq	r0, #1
   12334:	and	r0, r0, #1
   12338:	str	r0, [sp, #48]	; 0x30
   1233c:	ldr	r0, [sp, #48]	; 0x30
   12340:	cmp	r0, #0
   12344:	movw	r0, #0
   12348:	movne	r0, #1
   1234c:	mvn	r1, #0
   12350:	eor	r0, r0, r1
   12354:	tst	r0, #1
   12358:	beq	13544 <__assert_fail@plt+0x251c>
   1235c:	movw	r0, #0
   12360:	strb	r0, [fp, #-65]	; 0xffffffbf
   12364:	strb	r0, [fp, #-66]	; 0xffffffbe
   12368:	strb	r0, [fp, #-67]	; 0xffffffbd
   1236c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12370:	tst	r0, #1
   12374:	beq	12420 <__assert_fail@plt+0x13f8>
   12378:	ldr	r0, [fp, #8]
   1237c:	cmp	r0, #2
   12380:	beq	12420 <__assert_fail@plt+0x13f8>
   12384:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12388:	cmp	r0, #0
   1238c:	beq	12420 <__assert_fail@plt+0x13f8>
   12390:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12394:	ldr	r1, [fp, #-56]	; 0xffffffc8
   12398:	add	r0, r0, r1
   1239c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   123a0:	cmn	r1, #1
   123a4:	str	r0, [sp, #44]	; 0x2c
   123a8:	bne	123d0 <__assert_fail@plt+0x13a8>
   123ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   123b0:	movw	r1, #1
   123b4:	cmp	r1, r0
   123b8:	bcs	123d0 <__assert_fail@plt+0x13a8>
   123bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   123c0:	bl	10f50 <strlen@plt>
   123c4:	str	r0, [fp, #-36]	; 0xffffffdc
   123c8:	str	r0, [sp, #40]	; 0x28
   123cc:	b	123d8 <__assert_fail@plt+0x13b0>
   123d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   123d4:	str	r0, [sp, #40]	; 0x28
   123d8:	ldr	r0, [sp, #40]	; 0x28
   123dc:	ldr	r1, [sp, #44]	; 0x2c
   123e0:	cmp	r1, r0
   123e4:	bhi	12420 <__assert_fail@plt+0x13f8>
   123e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   123ec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   123f0:	add	r0, r0, r1
   123f4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   123f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   123fc:	bl	10e54 <memcmp@plt>
   12400:	cmp	r0, #0
   12404:	bne	12420 <__assert_fail@plt+0x13f8>
   12408:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1240c:	tst	r0, #1
   12410:	beq	12418 <__assert_fail@plt+0x13f0>
   12414:	b	136c4 <__assert_fail@plt+0x269c>
   12418:	movw	r0, #1
   1241c:	strb	r0, [fp, #-65]	; 0xffffffbf
   12420:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12424:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12428:	ldrb	r0, [r0, r1]
   1242c:	strb	r0, [fp, #-63]	; 0xffffffc1
   12430:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   12434:	mov	r1, r0
   12438:	cmp	r0, #126	; 0x7e
   1243c:	str	r1, [sp, #36]	; 0x24
   12440:	bhi	12cb0 <__assert_fail@plt+0x1c88>
   12444:	add	r0, pc, #8
   12448:	ldr	r1, [sp, #36]	; 0x24
   1244c:	ldr	r0, [r0, r1, lsl #2]
   12450:	mov	pc, r0
   12454:	andeq	r2, r1, r0, asr r6
   12458:			; <UNDEFINED> instruction: 0x00012cb0
   1245c:			; <UNDEFINED> instruction: 0x00012cb0
   12460:			; <UNDEFINED> instruction: 0x00012cb0
   12464:			; <UNDEFINED> instruction: 0x00012cb0
   12468:			; <UNDEFINED> instruction: 0x00012cb0
   1246c:			; <UNDEFINED> instruction: 0x00012cb0
   12470:	andeq	r2, r1, r8, asr sl
   12474:	andeq	r2, r1, r4, ror #20
   12478:	muleq	r1, r4, sl
   1247c:	andeq	r2, r1, ip, ror sl
   12480:	andeq	r2, r1, r0, lsr #21
   12484:	andeq	r2, r1, r0, ror sl
   12488:	andeq	r2, r1, r8, lsl #21
   1248c:			; <UNDEFINED> instruction: 0x00012cb0
   12490:			; <UNDEFINED> instruction: 0x00012cb0
   12494:			; <UNDEFINED> instruction: 0x00012cb0
   12498:			; <UNDEFINED> instruction: 0x00012cb0
   1249c:			; <UNDEFINED> instruction: 0x00012cb0
   124a0:			; <UNDEFINED> instruction: 0x00012cb0
   124a4:			; <UNDEFINED> instruction: 0x00012cb0
   124a8:			; <UNDEFINED> instruction: 0x00012cb0
   124ac:			; <UNDEFINED> instruction: 0x00012cb0
   124b0:			; <UNDEFINED> instruction: 0x00012cb0
   124b4:			; <UNDEFINED> instruction: 0x00012cb0
   124b8:			; <UNDEFINED> instruction: 0x00012cb0
   124bc:			; <UNDEFINED> instruction: 0x00012cb0
   124c0:			; <UNDEFINED> instruction: 0x00012cb0
   124c4:			; <UNDEFINED> instruction: 0x00012cb0
   124c8:			; <UNDEFINED> instruction: 0x00012cb0
   124cc:			; <UNDEFINED> instruction: 0x00012cb0
   124d0:			; <UNDEFINED> instruction: 0x00012cb0
   124d4:	andeq	r2, r1, r4, lsl #23
   124d8:	andeq	r2, r1, ip, lsl #23
   124dc:	andeq	r2, r1, ip, lsl #23
   124e0:	andeq	r2, r1, r0, ror fp
   124e4:	andeq	r2, r1, ip, lsl #23
   124e8:	andeq	r2, r1, r4, lsr #25
   124ec:	andeq	r2, r1, ip, lsl #23
   124f0:	andeq	r2, r1, ip, lsr #23
   124f4:	andeq	r2, r1, ip, lsl #23
   124f8:	andeq	r2, r1, ip, lsl #23
   124fc:	andeq	r2, r1, ip, lsl #23
   12500:	andeq	r2, r1, r4, lsr #25
   12504:	andeq	r2, r1, r4, lsr #25
   12508:	andeq	r2, r1, r4, lsr #25
   1250c:	andeq	r2, r1, r4, lsr #25
   12510:	andeq	r2, r1, r4, lsr #25
   12514:	andeq	r2, r1, r4, lsr #25
   12518:	andeq	r2, r1, r4, lsr #25
   1251c:	andeq	r2, r1, r4, lsr #25
   12520:	andeq	r2, r1, r4, lsr #25
   12524:	andeq	r2, r1, r4, lsr #25
   12528:	andeq	r2, r1, r4, lsr #25
   1252c:	andeq	r2, r1, r4, lsr #25
   12530:	andeq	r2, r1, r4, lsr #25
   12534:	andeq	r2, r1, r4, lsr #25
   12538:	andeq	r2, r1, r4, lsr #25
   1253c:	andeq	r2, r1, r4, lsr #25
   12540:	andeq	r2, r1, ip, lsl #23
   12544:	andeq	r2, r1, ip, lsl #23
   12548:	andeq	r2, r1, ip, lsl #23
   1254c:	andeq	r2, r1, ip, lsl #23
   12550:	andeq	r2, r1, ip, asr r8
   12554:			; <UNDEFINED> instruction: 0x00012cb0
   12558:	andeq	r2, r1, r4, lsr #25
   1255c:	andeq	r2, r1, r4, lsr #25
   12560:	andeq	r2, r1, r4, lsr #25
   12564:	andeq	r2, r1, r4, lsr #25
   12568:	andeq	r2, r1, r4, lsr #25
   1256c:	andeq	r2, r1, r4, lsr #25
   12570:	andeq	r2, r1, r4, lsr #25
   12574:	andeq	r2, r1, r4, lsr #25
   12578:	andeq	r2, r1, r4, lsr #25
   1257c:	andeq	r2, r1, r4, lsr #25
   12580:	andeq	r2, r1, r4, lsr #25
   12584:	andeq	r2, r1, r4, lsr #25
   12588:	andeq	r2, r1, r4, lsr #25
   1258c:	andeq	r2, r1, r4, lsr #25
   12590:	andeq	r2, r1, r4, lsr #25
   12594:	andeq	r2, r1, r4, lsr #25
   12598:	andeq	r2, r1, r4, lsr #25
   1259c:	andeq	r2, r1, r4, lsr #25
   125a0:	andeq	r2, r1, r4, lsr #25
   125a4:	andeq	r2, r1, r4, lsr #25
   125a8:	andeq	r2, r1, r4, lsr #25
   125ac:	andeq	r2, r1, r4, lsr #25
   125b0:	andeq	r2, r1, r4, lsr #25
   125b4:	andeq	r2, r1, r4, lsr #25
   125b8:	andeq	r2, r1, r4, lsr #25
   125bc:	andeq	r2, r1, r4, lsr #25
   125c0:	andeq	r2, r1, ip, lsl #23
   125c4:	andeq	r2, r1, ip, lsr #21
   125c8:	andeq	r2, r1, r4, lsr #25
   125cc:	andeq	r2, r1, ip, lsl #23
   125d0:	andeq	r2, r1, r4, lsr #25
   125d4:	andeq	r2, r1, ip, lsl #23
   125d8:	andeq	r2, r1, r4, lsr #25
   125dc:	andeq	r2, r1, r4, lsr #25
   125e0:	andeq	r2, r1, r4, lsr #25
   125e4:	andeq	r2, r1, r4, lsr #25
   125e8:	andeq	r2, r1, r4, lsr #25
   125ec:	andeq	r2, r1, r4, lsr #25
   125f0:	andeq	r2, r1, r4, lsr #25
   125f4:	andeq	r2, r1, r4, lsr #25
   125f8:	andeq	r2, r1, r4, lsr #25
   125fc:	andeq	r2, r1, r4, lsr #25
   12600:	andeq	r2, r1, r4, lsr #25
   12604:	andeq	r2, r1, r4, lsr #25
   12608:	andeq	r2, r1, r4, lsr #25
   1260c:	andeq	r2, r1, r4, lsr #25
   12610:	andeq	r2, r1, r4, lsr #25
   12614:	andeq	r2, r1, r4, lsr #25
   12618:	andeq	r2, r1, r4, lsr #25
   1261c:	andeq	r2, r1, r4, lsr #25
   12620:	andeq	r2, r1, r4, lsr #25
   12624:	andeq	r2, r1, r4, lsr #25
   12628:	andeq	r2, r1, r4, lsr #25
   1262c:	andeq	r2, r1, r4, lsr #25
   12630:	andeq	r2, r1, r4, lsr #25
   12634:	andeq	r2, r1, r4, lsr #25
   12638:	andeq	r2, r1, r4, lsr #25
   1263c:	andeq	r2, r1, r4, lsr #25
   12640:	andeq	r2, r1, ip, lsr fp
   12644:	andeq	r2, r1, ip, lsl #23
   12648:	andeq	r2, r1, ip, lsr fp
   1264c:	andeq	r2, r1, r0, ror fp
   12650:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12654:	tst	r0, #1
   12658:	beq	12840 <__assert_fail@plt+0x1818>
   1265c:	b	12660 <__assert_fail@plt+0x1638>
   12660:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12664:	tst	r0, #1
   12668:	beq	12670 <__assert_fail@plt+0x1648>
   1266c:	b	136c4 <__assert_fail@plt+0x269c>
   12670:	movw	r0, #1
   12674:	strb	r0, [fp, #-66]	; 0xffffffbe
   12678:	ldr	r0, [fp, #8]
   1267c:	cmp	r0, #2
   12680:	bne	12734 <__assert_fail@plt+0x170c>
   12684:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   12688:	tst	r0, #1
   1268c:	bne	12734 <__assert_fail@plt+0x170c>
   12690:	b	12694 <__assert_fail@plt+0x166c>
   12694:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12698:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1269c:	cmp	r0, r1
   126a0:	bcs	126b8 <__assert_fail@plt+0x1690>
   126a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   126a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   126ac:	add	r0, r0, r1
   126b0:	movw	r1, #39	; 0x27
   126b4:	strb	r1, [r0]
   126b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   126bc:	add	r0, r0, #1
   126c0:	str	r0, [fp, #-44]	; 0xffffffd4
   126c4:	b	126c8 <__assert_fail@plt+0x16a0>
   126c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   126cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   126d0:	cmp	r0, r1
   126d4:	bcs	126ec <__assert_fail@plt+0x16c4>
   126d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   126dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   126e0:	add	r0, r0, r1
   126e4:	movw	r1, #36	; 0x24
   126e8:	strb	r1, [r0]
   126ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   126f0:	add	r0, r0, #1
   126f4:	str	r0, [fp, #-44]	; 0xffffffd4
   126f8:	b	126fc <__assert_fail@plt+0x16d4>
   126fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12700:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12704:	cmp	r0, r1
   12708:	bcs	12720 <__assert_fail@plt+0x16f8>
   1270c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12710:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12714:	add	r0, r0, r1
   12718:	movw	r1, #39	; 0x27
   1271c:	strb	r1, [r0]
   12720:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12724:	add	r0, r0, #1
   12728:	str	r0, [fp, #-44]	; 0xffffffd4
   1272c:	movw	r0, #1
   12730:	strb	r0, [fp, #-60]	; 0xffffffc4
   12734:	b	12738 <__assert_fail@plt+0x1710>
   12738:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1273c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12740:	cmp	r0, r1
   12744:	bcs	1275c <__assert_fail@plt+0x1734>
   12748:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1274c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12750:	add	r0, r0, r1
   12754:	movw	r1, #92	; 0x5c
   12758:	strb	r1, [r0]
   1275c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12760:	add	r0, r0, #1
   12764:	str	r0, [fp, #-44]	; 0xffffffd4
   12768:	b	1276c <__assert_fail@plt+0x1744>
   1276c:	ldr	r0, [fp, #8]
   12770:	cmp	r0, #2
   12774:	beq	12834 <__assert_fail@plt+0x180c>
   12778:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1277c:	add	r0, r0, #1
   12780:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12784:	cmp	r0, r1
   12788:	bcs	12834 <__assert_fail@plt+0x180c>
   1278c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12790:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12794:	add	r1, r1, #1
   12798:	add	r0, r0, r1
   1279c:	ldrb	r0, [r0]
   127a0:	movw	r1, #48	; 0x30
   127a4:	cmp	r1, r0
   127a8:	bgt	12834 <__assert_fail@plt+0x180c>
   127ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   127b0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   127b4:	add	r1, r1, #1
   127b8:	add	r0, r0, r1
   127bc:	ldrb	r0, [r0]
   127c0:	cmp	r0, #57	; 0x39
   127c4:	bgt	12834 <__assert_fail@plt+0x180c>
   127c8:	b	127cc <__assert_fail@plt+0x17a4>
   127cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   127d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   127d4:	cmp	r0, r1
   127d8:	bcs	127f0 <__assert_fail@plt+0x17c8>
   127dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   127e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   127e4:	add	r0, r0, r1
   127e8:	movw	r1, #48	; 0x30
   127ec:	strb	r1, [r0]
   127f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   127f4:	add	r0, r0, #1
   127f8:	str	r0, [fp, #-44]	; 0xffffffd4
   127fc:	b	12800 <__assert_fail@plt+0x17d8>
   12800:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12804:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12808:	cmp	r0, r1
   1280c:	bcs	12824 <__assert_fail@plt+0x17fc>
   12810:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12814:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12818:	add	r0, r0, r1
   1281c:	movw	r1, #48	; 0x30
   12820:	strb	r1, [r0]
   12824:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12828:	add	r0, r0, #1
   1282c:	str	r0, [fp, #-44]	; 0xffffffd4
   12830:	b	12834 <__assert_fail@plt+0x180c>
   12834:	movw	r0, #48	; 0x30
   12838:	strb	r0, [fp, #-63]	; 0xffffffc1
   1283c:	b	12858 <__assert_fail@plt+0x1830>
   12840:	ldr	r0, [fp, #12]
   12844:	and	r0, r0, #1
   12848:	cmp	r0, #0
   1284c:	beq	12854 <__assert_fail@plt+0x182c>
   12850:	b	13534 <__assert_fail@plt+0x250c>
   12854:	b	12858 <__assert_fail@plt+0x1830>
   12858:	b	132d0 <__assert_fail@plt+0x22a8>
   1285c:	ldr	r0, [fp, #8]
   12860:	cmp	r0, #2
   12864:	str	r0, [sp, #32]
   12868:	beq	12880 <__assert_fail@plt+0x1858>
   1286c:	b	12870 <__assert_fail@plt+0x1848>
   12870:	ldr	r0, [sp, #32]
   12874:	cmp	r0, #5
   12878:	beq	12894 <__assert_fail@plt+0x186c>
   1287c:	b	12a50 <__assert_fail@plt+0x1a28>
   12880:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12884:	tst	r0, #1
   12888:	beq	12890 <__assert_fail@plt+0x1868>
   1288c:	b	136c4 <__assert_fail@plt+0x269c>
   12890:	b	12a54 <__assert_fail@plt+0x1a2c>
   12894:	ldr	r0, [fp, #12]
   12898:	and	r0, r0, #4
   1289c:	cmp	r0, #0
   128a0:	beq	12a4c <__assert_fail@plt+0x1a24>
   128a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   128a8:	add	r0, r0, #2
   128ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   128b0:	cmp	r0, r1
   128b4:	bcs	12a4c <__assert_fail@plt+0x1a24>
   128b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   128bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   128c0:	add	r1, r1, #1
   128c4:	add	r0, r0, r1
   128c8:	ldrb	r0, [r0]
   128cc:	cmp	r0, #63	; 0x3f
   128d0:	bne	12a4c <__assert_fail@plt+0x1a24>
   128d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   128d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   128dc:	add	r0, r1, r0
   128e0:	ldrb	r0, [r0, #2]
   128e4:	mov	r1, r0
   128e8:	cmp	r0, #33	; 0x21
   128ec:	str	r1, [sp, #28]
   128f0:	beq	12940 <__assert_fail@plt+0x1918>
   128f4:	b	128f8 <__assert_fail@plt+0x18d0>
   128f8:	ldr	r0, [sp, #28]
   128fc:	sub	r1, r0, #39	; 0x27
   12900:	cmp	r1, #3
   12904:	bcc	12940 <__assert_fail@plt+0x1918>
   12908:	b	1290c <__assert_fail@plt+0x18e4>
   1290c:	ldr	r0, [sp, #28]
   12910:	cmp	r0, #45	; 0x2d
   12914:	beq	12940 <__assert_fail@plt+0x1918>
   12918:	b	1291c <__assert_fail@plt+0x18f4>
   1291c:	ldr	r0, [sp, #28]
   12920:	cmp	r0, #47	; 0x2f
   12924:	beq	12940 <__assert_fail@plt+0x1918>
   12928:	b	1292c <__assert_fail@plt+0x1904>
   1292c:	ldr	r0, [sp, #28]
   12930:	sub	r1, r0, #60	; 0x3c
   12934:	cmp	r1, #2
   12938:	bhi	12a44 <__assert_fail@plt+0x1a1c>
   1293c:	b	12940 <__assert_fail@plt+0x1918>
   12940:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12944:	tst	r0, #1
   12948:	beq	12950 <__assert_fail@plt+0x1928>
   1294c:	b	136c4 <__assert_fail@plt+0x269c>
   12950:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12954:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12958:	add	r1, r1, #2
   1295c:	add	r0, r0, r1
   12960:	ldrb	r0, [r0]
   12964:	strb	r0, [fp, #-63]	; 0xffffffc1
   12968:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1296c:	add	r0, r0, #2
   12970:	str	r0, [fp, #-40]	; 0xffffffd8
   12974:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12978:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1297c:	cmp	r0, r1
   12980:	bcs	12998 <__assert_fail@plt+0x1970>
   12984:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12988:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1298c:	add	r0, r0, r1
   12990:	movw	r1, #63	; 0x3f
   12994:	strb	r1, [r0]
   12998:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1299c:	add	r0, r0, #1
   129a0:	str	r0, [fp, #-44]	; 0xffffffd4
   129a4:	b	129a8 <__assert_fail@plt+0x1980>
   129a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   129ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   129b0:	cmp	r0, r1
   129b4:	bcs	129cc <__assert_fail@plt+0x19a4>
   129b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   129bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   129c0:	add	r0, r0, r1
   129c4:	movw	r1, #34	; 0x22
   129c8:	strb	r1, [r0]
   129cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   129d0:	add	r0, r0, #1
   129d4:	str	r0, [fp, #-44]	; 0xffffffd4
   129d8:	b	129dc <__assert_fail@plt+0x19b4>
   129dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   129e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   129e4:	cmp	r0, r1
   129e8:	bcs	12a00 <__assert_fail@plt+0x19d8>
   129ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   129f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   129f4:	add	r0, r0, r1
   129f8:	movw	r1, #34	; 0x22
   129fc:	strb	r1, [r0]
   12a00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12a04:	add	r0, r0, #1
   12a08:	str	r0, [fp, #-44]	; 0xffffffd4
   12a0c:	b	12a10 <__assert_fail@plt+0x19e8>
   12a10:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12a14:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12a18:	cmp	r0, r1
   12a1c:	bcs	12a34 <__assert_fail@plt+0x1a0c>
   12a20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12a24:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12a28:	add	r0, r0, r1
   12a2c:	movw	r1, #63	; 0x3f
   12a30:	strb	r1, [r0]
   12a34:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12a38:	add	r0, r0, #1
   12a3c:	str	r0, [fp, #-44]	; 0xffffffd4
   12a40:	b	12a48 <__assert_fail@plt+0x1a20>
   12a44:	b	12a48 <__assert_fail@plt+0x1a20>
   12a48:	b	12a4c <__assert_fail@plt+0x1a24>
   12a4c:	b	12a54 <__assert_fail@plt+0x1a2c>
   12a50:	b	12a54 <__assert_fail@plt+0x1a2c>
   12a54:	b	132d0 <__assert_fail@plt+0x22a8>
   12a58:	movw	r0, #97	; 0x61
   12a5c:	strb	r0, [fp, #-64]	; 0xffffffc0
   12a60:	b	12b20 <__assert_fail@plt+0x1af8>
   12a64:	movw	r0, #98	; 0x62
   12a68:	strb	r0, [fp, #-64]	; 0xffffffc0
   12a6c:	b	12b20 <__assert_fail@plt+0x1af8>
   12a70:	movw	r0, #102	; 0x66
   12a74:	strb	r0, [fp, #-64]	; 0xffffffc0
   12a78:	b	12b20 <__assert_fail@plt+0x1af8>
   12a7c:	movw	r0, #110	; 0x6e
   12a80:	strb	r0, [fp, #-64]	; 0xffffffc0
   12a84:	b	12b00 <__assert_fail@plt+0x1ad8>
   12a88:	movw	r0, #114	; 0x72
   12a8c:	strb	r0, [fp, #-64]	; 0xffffffc0
   12a90:	b	12b00 <__assert_fail@plt+0x1ad8>
   12a94:	movw	r0, #116	; 0x74
   12a98:	strb	r0, [fp, #-64]	; 0xffffffc0
   12a9c:	b	12b00 <__assert_fail@plt+0x1ad8>
   12aa0:	movw	r0, #118	; 0x76
   12aa4:	strb	r0, [fp, #-64]	; 0xffffffc0
   12aa8:	b	12b20 <__assert_fail@plt+0x1af8>
   12aac:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   12ab0:	strb	r0, [fp, #-64]	; 0xffffffc0
   12ab4:	ldr	r0, [fp, #8]
   12ab8:	cmp	r0, #2
   12abc:	bne	12ad4 <__assert_fail@plt+0x1aac>
   12ac0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12ac4:	tst	r0, #1
   12ac8:	beq	12ad0 <__assert_fail@plt+0x1aa8>
   12acc:	b	136c4 <__assert_fail@plt+0x269c>
   12ad0:	b	13458 <__assert_fail@plt+0x2430>
   12ad4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12ad8:	tst	r0, #1
   12adc:	beq	12afc <__assert_fail@plt+0x1ad4>
   12ae0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12ae4:	tst	r0, #1
   12ae8:	beq	12afc <__assert_fail@plt+0x1ad4>
   12aec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12af0:	cmp	r0, #0
   12af4:	beq	12afc <__assert_fail@plt+0x1ad4>
   12af8:	b	13458 <__assert_fail@plt+0x2430>
   12afc:	b	12b00 <__assert_fail@plt+0x1ad8>
   12b00:	ldr	r0, [fp, #8]
   12b04:	cmp	r0, #2
   12b08:	bne	12b1c <__assert_fail@plt+0x1af4>
   12b0c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12b10:	tst	r0, #1
   12b14:	beq	12b1c <__assert_fail@plt+0x1af4>
   12b18:	b	136c4 <__assert_fail@plt+0x269c>
   12b1c:	b	12b20 <__assert_fail@plt+0x1af8>
   12b20:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12b24:	tst	r0, #1
   12b28:	beq	12b38 <__assert_fail@plt+0x1b10>
   12b2c:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   12b30:	strb	r0, [fp, #-63]	; 0xffffffc1
   12b34:	b	13344 <__assert_fail@plt+0x231c>
   12b38:	b	132d0 <__assert_fail@plt+0x22a8>
   12b3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12b40:	cmn	r0, #1
   12b44:	bne	12b5c <__assert_fail@plt+0x1b34>
   12b48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12b4c:	ldrb	r0, [r0, #1]
   12b50:	cmp	r0, #0
   12b54:	beq	12b6c <__assert_fail@plt+0x1b44>
   12b58:	b	12b68 <__assert_fail@plt+0x1b40>
   12b5c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12b60:	cmp	r0, #1
   12b64:	beq	12b6c <__assert_fail@plt+0x1b44>
   12b68:	b	132d0 <__assert_fail@plt+0x22a8>
   12b6c:	b	12b70 <__assert_fail@plt+0x1b48>
   12b70:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12b74:	cmp	r0, #0
   12b78:	beq	12b80 <__assert_fail@plt+0x1b58>
   12b7c:	b	132d0 <__assert_fail@plt+0x22a8>
   12b80:	b	12b84 <__assert_fail@plt+0x1b5c>
   12b84:	movw	r0, #1
   12b88:	strb	r0, [fp, #-67]	; 0xffffffbd
   12b8c:	ldr	r0, [fp, #8]
   12b90:	cmp	r0, #2
   12b94:	bne	12ba8 <__assert_fail@plt+0x1b80>
   12b98:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12b9c:	tst	r0, #1
   12ba0:	beq	12ba8 <__assert_fail@plt+0x1b80>
   12ba4:	b	136c4 <__assert_fail@plt+0x269c>
   12ba8:	b	132d0 <__assert_fail@plt+0x22a8>
   12bac:	movw	r0, #1
   12bb0:	strb	r0, [fp, #-61]	; 0xffffffc3
   12bb4:	strb	r0, [fp, #-67]	; 0xffffffbd
   12bb8:	ldr	r0, [fp, #8]
   12bbc:	cmp	r0, #2
   12bc0:	bne	12ca0 <__assert_fail@plt+0x1c78>
   12bc4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12bc8:	tst	r0, #1
   12bcc:	beq	12bd4 <__assert_fail@plt+0x1bac>
   12bd0:	b	136c4 <__assert_fail@plt+0x269c>
   12bd4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12bd8:	cmp	r0, #0
   12bdc:	beq	12bfc <__assert_fail@plt+0x1bd4>
   12be0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12be4:	cmp	r0, #0
   12be8:	bne	12bfc <__assert_fail@plt+0x1bd4>
   12bec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12bf0:	str	r0, [fp, #-48]	; 0xffffffd0
   12bf4:	movw	r0, #0
   12bf8:	str	r0, [fp, #-28]	; 0xffffffe4
   12bfc:	b	12c00 <__assert_fail@plt+0x1bd8>
   12c00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12c08:	cmp	r0, r1
   12c0c:	bcs	12c24 <__assert_fail@plt+0x1bfc>
   12c10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c14:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12c18:	add	r0, r0, r1
   12c1c:	movw	r1, #39	; 0x27
   12c20:	strb	r1, [r0]
   12c24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c28:	add	r0, r0, #1
   12c2c:	str	r0, [fp, #-44]	; 0xffffffd4
   12c30:	b	12c34 <__assert_fail@plt+0x1c0c>
   12c34:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12c3c:	cmp	r0, r1
   12c40:	bcs	12c58 <__assert_fail@plt+0x1c30>
   12c44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c48:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12c4c:	add	r0, r0, r1
   12c50:	movw	r1, #92	; 0x5c
   12c54:	strb	r1, [r0]
   12c58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c5c:	add	r0, r0, #1
   12c60:	str	r0, [fp, #-44]	; 0xffffffd4
   12c64:	b	12c68 <__assert_fail@plt+0x1c40>
   12c68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12c70:	cmp	r0, r1
   12c74:	bcs	12c8c <__assert_fail@plt+0x1c64>
   12c78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c7c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12c80:	add	r0, r0, r1
   12c84:	movw	r1, #39	; 0x27
   12c88:	strb	r1, [r0]
   12c8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c90:	add	r0, r0, #1
   12c94:	str	r0, [fp, #-44]	; 0xffffffd4
   12c98:	movw	r0, #0
   12c9c:	strb	r0, [fp, #-60]	; 0xffffffc4
   12ca0:	b	132d0 <__assert_fail@plt+0x22a8>
   12ca4:	movw	r0, #1
   12ca8:	strb	r0, [fp, #-67]	; 0xffffffbd
   12cac:	b	132d0 <__assert_fail@plt+0x22a8>
   12cb0:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   12cb4:	tst	r0, #1
   12cb8:	beq	12cf8 <__assert_fail@plt+0x1cd0>
   12cbc:	mov	r0, #1
   12cc0:	str	r0, [fp, #-72]	; 0xffffffb8
   12cc4:	bl	10f20 <__ctype_b_loc@plt>
   12cc8:	ldr	r0, [r0]
   12ccc:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   12cd0:	mov	r2, r1
   12cd4:	add	r0, r0, r1, lsl #1
   12cd8:	ldrh	r0, [r0]
   12cdc:	and	r0, r0, #16384	; 0x4000
   12ce0:	cmp	r0, #0
   12ce4:	movw	r0, #0
   12ce8:	movne	r0, #1
   12cec:	and	r0, r0, #1
   12cf0:	strb	r0, [fp, #-73]	; 0xffffffb7
   12cf4:	b	12f84 <__assert_fail@plt+0x1f5c>
   12cf8:	sub	r0, fp, #84	; 0x54
   12cfc:	movw	r1, #0
   12d00:	and	r1, r1, #255	; 0xff
   12d04:	movw	r2, #8
   12d08:	bl	10f8c <memset@plt>
   12d0c:	movw	r0, #0
   12d10:	str	r0, [fp, #-72]	; 0xffffffb8
   12d14:	movw	r0, #1
   12d18:	strb	r0, [fp, #-73]	; 0xffffffb7
   12d1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12d20:	cmn	r0, #1
   12d24:	bne	12d34 <__assert_fail@plt+0x1d0c>
   12d28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d2c:	bl	10f50 <strlen@plt>
   12d30:	str	r0, [fp, #-36]	; 0xffffffdc
   12d34:	b	12d38 <__assert_fail@plt+0x1d10>
   12d38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d3c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12d40:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12d44:	add	r1, r1, r2
   12d48:	add	r1, r0, r1
   12d4c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12d50:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12d54:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12d58:	add	r2, r2, r3
   12d5c:	sub	r2, r0, r2
   12d60:	add	r0, sp, #88	; 0x58
   12d64:	sub	r3, fp, #84	; 0x54
   12d68:	bl	1a9c8 <__assert_fail@plt+0x99a0>
   12d6c:	str	r0, [sp, #84]	; 0x54
   12d70:	ldr	r0, [sp, #84]	; 0x54
   12d74:	cmp	r0, #0
   12d78:	bne	12d80 <__assert_fail@plt+0x1d58>
   12d7c:	b	12f80 <__assert_fail@plt+0x1f58>
   12d80:	ldr	r0, [sp, #84]	; 0x54
   12d84:	cmn	r0, #1
   12d88:	bne	12d98 <__assert_fail@plt+0x1d70>
   12d8c:	movw	r0, #0
   12d90:	strb	r0, [fp, #-73]	; 0xffffffb7
   12d94:	b	12f80 <__assert_fail@plt+0x1f58>
   12d98:	ldr	r0, [sp, #84]	; 0x54
   12d9c:	cmn	r0, #2
   12da0:	bne	12e14 <__assert_fail@plt+0x1dec>
   12da4:	movw	r0, #0
   12da8:	strb	r0, [fp, #-73]	; 0xffffffb7
   12dac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12db0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12db4:	add	r0, r0, r1
   12db8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12dbc:	cmp	r0, r1
   12dc0:	movw	r0, #0
   12dc4:	str	r0, [sp, #24]
   12dc8:	bcs	12df4 <__assert_fail@plt+0x1dcc>
   12dcc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12dd0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12dd4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12dd8:	add	r1, r1, r2
   12ddc:	add	r0, r0, r1
   12de0:	ldrb	r0, [r0]
   12de4:	cmp	r0, #0
   12de8:	movw	r0, #0
   12dec:	movne	r0, #1
   12df0:	str	r0, [sp, #24]
   12df4:	ldr	r0, [sp, #24]
   12df8:	tst	r0, #1
   12dfc:	beq	12e10 <__assert_fail@plt+0x1de8>
   12e00:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12e04:	add	r0, r0, #1
   12e08:	str	r0, [fp, #-72]	; 0xffffffb8
   12e0c:	b	12dac <__assert_fail@plt+0x1d84>
   12e10:	b	12f80 <__assert_fail@plt+0x1f58>
   12e14:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12e18:	tst	r0, #1
   12e1c:	beq	12f28 <__assert_fail@plt+0x1f00>
   12e20:	ldr	r0, [fp, #8]
   12e24:	cmp	r0, #2
   12e28:	bne	12f28 <__assert_fail@plt+0x1f00>
   12e2c:	movw	r0, #1
   12e30:	str	r0, [sp, #80]	; 0x50
   12e34:	ldr	r0, [sp, #80]	; 0x50
   12e38:	ldr	r1, [sp, #84]	; 0x54
   12e3c:	cmp	r0, r1
   12e40:	bcs	12f24 <__assert_fail@plt+0x1efc>
   12e44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12e48:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12e4c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12e50:	add	r1, r1, r2
   12e54:	ldr	r2, [sp, #80]	; 0x50
   12e58:	add	r1, r1, r2
   12e5c:	ldrb	r0, [r0, r1]
   12e60:	sub	r0, r0, #91	; 0x5b
   12e64:	cmp	r0, #33	; 0x21
   12e68:	str	r0, [sp, #20]
   12e6c:	bhi	12f0c <__assert_fail@plt+0x1ee4>
   12e70:	add	r0, pc, #8
   12e74:	ldr	r1, [sp, #20]
   12e78:	ldr	r0, [r0, r1, lsl #2]
   12e7c:	mov	pc, r0
   12e80:	andeq	r2, r1, r8, lsl #30
   12e84:	andeq	r2, r1, r8, lsl #30
   12e88:	andeq	r2, r1, ip, lsl #30
   12e8c:	andeq	r2, r1, r8, lsl #30
   12e90:	andeq	r2, r1, ip, lsl #30
   12e94:	andeq	r2, r1, r8, lsl #30
   12e98:	andeq	r2, r1, ip, lsl #30
   12e9c:	andeq	r2, r1, ip, lsl #30
   12ea0:	andeq	r2, r1, ip, lsl #30
   12ea4:	andeq	r2, r1, ip, lsl #30
   12ea8:	andeq	r2, r1, ip, lsl #30
   12eac:	andeq	r2, r1, ip, lsl #30
   12eb0:	andeq	r2, r1, ip, lsl #30
   12eb4:	andeq	r2, r1, ip, lsl #30
   12eb8:	andeq	r2, r1, ip, lsl #30
   12ebc:	andeq	r2, r1, ip, lsl #30
   12ec0:	andeq	r2, r1, ip, lsl #30
   12ec4:	andeq	r2, r1, ip, lsl #30
   12ec8:	andeq	r2, r1, ip, lsl #30
   12ecc:	andeq	r2, r1, ip, lsl #30
   12ed0:	andeq	r2, r1, ip, lsl #30
   12ed4:	andeq	r2, r1, ip, lsl #30
   12ed8:	andeq	r2, r1, ip, lsl #30
   12edc:	andeq	r2, r1, ip, lsl #30
   12ee0:	andeq	r2, r1, ip, lsl #30
   12ee4:	andeq	r2, r1, ip, lsl #30
   12ee8:	andeq	r2, r1, ip, lsl #30
   12eec:	andeq	r2, r1, ip, lsl #30
   12ef0:	andeq	r2, r1, ip, lsl #30
   12ef4:	andeq	r2, r1, ip, lsl #30
   12ef8:	andeq	r2, r1, ip, lsl #30
   12efc:	andeq	r2, r1, ip, lsl #30
   12f00:	andeq	r2, r1, ip, lsl #30
   12f04:	andeq	r2, r1, r8, lsl #30
   12f08:	b	136c4 <__assert_fail@plt+0x269c>
   12f0c:	b	12f10 <__assert_fail@plt+0x1ee8>
   12f10:	b	12f14 <__assert_fail@plt+0x1eec>
   12f14:	ldr	r0, [sp, #80]	; 0x50
   12f18:	add	r0, r0, #1
   12f1c:	str	r0, [sp, #80]	; 0x50
   12f20:	b	12e34 <__assert_fail@plt+0x1e0c>
   12f24:	b	12f28 <__assert_fail@plt+0x1f00>
   12f28:	ldr	r0, [sp, #88]	; 0x58
   12f2c:	bl	10e84 <iswprint@plt>
   12f30:	cmp	r0, #0
   12f34:	bne	12f40 <__assert_fail@plt+0x1f18>
   12f38:	movw	r0, #0
   12f3c:	strb	r0, [fp, #-73]	; 0xffffffb7
   12f40:	ldr	r0, [sp, #84]	; 0x54
   12f44:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12f48:	add	r0, r1, r0
   12f4c:	str	r0, [fp, #-72]	; 0xffffffb8
   12f50:	b	12f54 <__assert_fail@plt+0x1f2c>
   12f54:	b	12f58 <__assert_fail@plt+0x1f30>
   12f58:	b	12f5c <__assert_fail@plt+0x1f34>
   12f5c:	sub	r0, fp, #84	; 0x54
   12f60:	bl	10e3c <mbsinit@plt>
   12f64:	cmp	r0, #0
   12f68:	movw	r0, #0
   12f6c:	movne	r0, #1
   12f70:	mvn	r1, #0
   12f74:	eor	r0, r0, r1
   12f78:	tst	r0, #1
   12f7c:	bne	12d38 <__assert_fail@plt+0x1d10>
   12f80:	b	12f84 <__assert_fail@plt+0x1f5c>
   12f84:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   12f88:	and	r0, r0, #1
   12f8c:	strb	r0, [fp, #-67]	; 0xffffffbd
   12f90:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12f94:	movw	r1, #1
   12f98:	cmp	r1, r0
   12f9c:	bcc	12fb8 <__assert_fail@plt+0x1f90>
   12fa0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12fa4:	tst	r0, #1
   12fa8:	beq	132cc <__assert_fail@plt+0x22a4>
   12fac:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   12fb0:	tst	r0, #1
   12fb4:	bne	132cc <__assert_fail@plt+0x22a4>
   12fb8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12fbc:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12fc0:	add	r0, r0, r1
   12fc4:	str	r0, [sp, #76]	; 0x4c
   12fc8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12fcc:	tst	r0, #1
   12fd0:	beq	13180 <__assert_fail@plt+0x2158>
   12fd4:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   12fd8:	tst	r0, #1
   12fdc:	bne	13180 <__assert_fail@plt+0x2158>
   12fe0:	b	12fe4 <__assert_fail@plt+0x1fbc>
   12fe4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12fe8:	tst	r0, #1
   12fec:	beq	12ff4 <__assert_fail@plt+0x1fcc>
   12ff0:	b	136c4 <__assert_fail@plt+0x269c>
   12ff4:	movw	r0, #1
   12ff8:	strb	r0, [fp, #-66]	; 0xffffffbe
   12ffc:	ldr	r0, [fp, #8]
   13000:	cmp	r0, #2
   13004:	bne	130b8 <__assert_fail@plt+0x2090>
   13008:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1300c:	tst	r0, #1
   13010:	bne	130b8 <__assert_fail@plt+0x2090>
   13014:	b	13018 <__assert_fail@plt+0x1ff0>
   13018:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1301c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13020:	cmp	r0, r1
   13024:	bcs	1303c <__assert_fail@plt+0x2014>
   13028:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1302c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13030:	add	r0, r0, r1
   13034:	movw	r1, #39	; 0x27
   13038:	strb	r1, [r0]
   1303c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13040:	add	r0, r0, #1
   13044:	str	r0, [fp, #-44]	; 0xffffffd4
   13048:	b	1304c <__assert_fail@plt+0x2024>
   1304c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13050:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13054:	cmp	r0, r1
   13058:	bcs	13070 <__assert_fail@plt+0x2048>
   1305c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13060:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13064:	add	r0, r0, r1
   13068:	movw	r1, #36	; 0x24
   1306c:	strb	r1, [r0]
   13070:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13074:	add	r0, r0, #1
   13078:	str	r0, [fp, #-44]	; 0xffffffd4
   1307c:	b	13080 <__assert_fail@plt+0x2058>
   13080:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13084:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13088:	cmp	r0, r1
   1308c:	bcs	130a4 <__assert_fail@plt+0x207c>
   13090:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13094:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13098:	add	r0, r0, r1
   1309c:	movw	r1, #39	; 0x27
   130a0:	strb	r1, [r0]
   130a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   130a8:	add	r0, r0, #1
   130ac:	str	r0, [fp, #-44]	; 0xffffffd4
   130b0:	movw	r0, #1
   130b4:	strb	r0, [fp, #-60]	; 0xffffffc4
   130b8:	b	130bc <__assert_fail@plt+0x2094>
   130bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   130c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   130c4:	cmp	r0, r1
   130c8:	bcs	130e0 <__assert_fail@plt+0x20b8>
   130cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   130d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   130d4:	add	r0, r0, r1
   130d8:	movw	r1, #92	; 0x5c
   130dc:	strb	r1, [r0]
   130e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   130e4:	add	r0, r0, #1
   130e8:	str	r0, [fp, #-44]	; 0xffffffd4
   130ec:	b	130f0 <__assert_fail@plt+0x20c8>
   130f0:	b	130f4 <__assert_fail@plt+0x20cc>
   130f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   130f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   130fc:	cmp	r0, r1
   13100:	bcs	13120 <__assert_fail@plt+0x20f8>
   13104:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13108:	asr	r0, r0, #6
   1310c:	add	r0, r0, #48	; 0x30
   13110:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13114:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13118:	add	r1, r1, r2
   1311c:	strb	r0, [r1]
   13120:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13124:	add	r0, r0, #1
   13128:	str	r0, [fp, #-44]	; 0xffffffd4
   1312c:	b	13130 <__assert_fail@plt+0x2108>
   13130:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13134:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13138:	cmp	r0, r1
   1313c:	bcs	13160 <__assert_fail@plt+0x2138>
   13140:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13144:	asr	r0, r0, #3
   13148:	and	r0, r0, #7
   1314c:	add	r0, r0, #48	; 0x30
   13150:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13154:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13158:	add	r1, r1, r2
   1315c:	strb	r0, [r1]
   13160:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13164:	add	r0, r0, #1
   13168:	str	r0, [fp, #-44]	; 0xffffffd4
   1316c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13170:	and	r0, r0, #7
   13174:	add	r0, r0, #48	; 0x30
   13178:	strb	r0, [fp, #-63]	; 0xffffffc1
   1317c:	b	131cc <__assert_fail@plt+0x21a4>
   13180:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   13184:	tst	r0, #1
   13188:	beq	131c8 <__assert_fail@plt+0x21a0>
   1318c:	b	13190 <__assert_fail@plt+0x2168>
   13190:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13194:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13198:	cmp	r0, r1
   1319c:	bcs	131b4 <__assert_fail@plt+0x218c>
   131a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   131a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   131a8:	add	r0, r0, r1
   131ac:	movw	r1, #92	; 0x5c
   131b0:	strb	r1, [r0]
   131b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   131b8:	add	r0, r0, #1
   131bc:	str	r0, [fp, #-44]	; 0xffffffd4
   131c0:	movw	r0, #0
   131c4:	strb	r0, [fp, #-65]	; 0xffffffbf
   131c8:	b	131cc <__assert_fail@plt+0x21a4>
   131cc:	ldr	r0, [sp, #76]	; 0x4c
   131d0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   131d4:	add	r1, r1, #1
   131d8:	cmp	r0, r1
   131dc:	bhi	131e4 <__assert_fail@plt+0x21bc>
   131e0:	b	132c8 <__assert_fail@plt+0x22a0>
   131e4:	b	131e8 <__assert_fail@plt+0x21c0>
   131e8:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   131ec:	tst	r0, #1
   131f0:	beq	13270 <__assert_fail@plt+0x2248>
   131f4:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   131f8:	tst	r0, #1
   131fc:	bne	13270 <__assert_fail@plt+0x2248>
   13200:	b	13204 <__assert_fail@plt+0x21dc>
   13204:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13208:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1320c:	cmp	r0, r1
   13210:	bcs	13228 <__assert_fail@plt+0x2200>
   13214:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13218:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1321c:	add	r0, r0, r1
   13220:	movw	r1, #39	; 0x27
   13224:	strb	r1, [r0]
   13228:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1322c:	add	r0, r0, #1
   13230:	str	r0, [fp, #-44]	; 0xffffffd4
   13234:	b	13238 <__assert_fail@plt+0x2210>
   13238:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1323c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13240:	cmp	r0, r1
   13244:	bcs	1325c <__assert_fail@plt+0x2234>
   13248:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1324c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13250:	add	r0, r0, r1
   13254:	movw	r1, #39	; 0x27
   13258:	strb	r1, [r0]
   1325c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13260:	add	r0, r0, #1
   13264:	str	r0, [fp, #-44]	; 0xffffffd4
   13268:	movw	r0, #0
   1326c:	strb	r0, [fp, #-60]	; 0xffffffc4
   13270:	b	13274 <__assert_fail@plt+0x224c>
   13274:	b	13278 <__assert_fail@plt+0x2250>
   13278:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1327c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13280:	cmp	r0, r1
   13284:	bcs	1329c <__assert_fail@plt+0x2274>
   13288:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1328c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13290:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13294:	add	r1, r1, r2
   13298:	strb	r0, [r1]
   1329c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   132a0:	add	r0, r0, #1
   132a4:	str	r0, [fp, #-44]	; 0xffffffd4
   132a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   132ac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   132b0:	add	r1, r1, #1
   132b4:	str	r1, [fp, #-40]	; 0xffffffd8
   132b8:	add	r0, r0, r1
   132bc:	ldrb	r0, [r0]
   132c0:	strb	r0, [fp, #-63]	; 0xffffffc1
   132c4:	b	12fc8 <__assert_fail@plt+0x1fa0>
   132c8:	b	13458 <__assert_fail@plt+0x2430>
   132cc:	b	132d0 <__assert_fail@plt+0x22a8>
   132d0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   132d4:	tst	r0, #1
   132d8:	beq	132e8 <__assert_fail@plt+0x22c0>
   132dc:	ldr	r0, [fp, #8]
   132e0:	cmp	r0, #2
   132e4:	bne	132f4 <__assert_fail@plt+0x22cc>
   132e8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   132ec:	tst	r0, #1
   132f0:	beq	13330 <__assert_fail@plt+0x2308>
   132f4:	ldr	r0, [fp, #16]
   132f8:	movw	r1, #0
   132fc:	cmp	r0, r1
   13300:	beq	13330 <__assert_fail@plt+0x2308>
   13304:	ldr	r0, [fp, #16]
   13308:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   1330c:	lsr	r1, r1, #5
   13310:	add	r0, r0, r1, lsl #2
   13314:	ldr	r0, [r0]
   13318:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   1331c:	and	r1, r1, #31
   13320:	lsr	r0, r0, r1
   13324:	and	r0, r0, #1
   13328:	cmp	r0, #0
   1332c:	bne	13340 <__assert_fail@plt+0x2318>
   13330:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   13334:	tst	r0, #1
   13338:	bne	13340 <__assert_fail@plt+0x2318>
   1333c:	b	13458 <__assert_fail@plt+0x2430>
   13340:	b	13344 <__assert_fail@plt+0x231c>
   13344:	b	13348 <__assert_fail@plt+0x2320>
   13348:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1334c:	tst	r0, #1
   13350:	beq	13358 <__assert_fail@plt+0x2330>
   13354:	b	136c4 <__assert_fail@plt+0x269c>
   13358:	movw	r0, #1
   1335c:	strb	r0, [fp, #-66]	; 0xffffffbe
   13360:	ldr	r0, [fp, #8]
   13364:	cmp	r0, #2
   13368:	bne	1341c <__assert_fail@plt+0x23f4>
   1336c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   13370:	tst	r0, #1
   13374:	bne	1341c <__assert_fail@plt+0x23f4>
   13378:	b	1337c <__assert_fail@plt+0x2354>
   1337c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13380:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13384:	cmp	r0, r1
   13388:	bcs	133a0 <__assert_fail@plt+0x2378>
   1338c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13390:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13394:	add	r0, r0, r1
   13398:	movw	r1, #39	; 0x27
   1339c:	strb	r1, [r0]
   133a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   133a4:	add	r0, r0, #1
   133a8:	str	r0, [fp, #-44]	; 0xffffffd4
   133ac:	b	133b0 <__assert_fail@plt+0x2388>
   133b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   133b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   133b8:	cmp	r0, r1
   133bc:	bcs	133d4 <__assert_fail@plt+0x23ac>
   133c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   133c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   133c8:	add	r0, r0, r1
   133cc:	movw	r1, #36	; 0x24
   133d0:	strb	r1, [r0]
   133d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   133d8:	add	r0, r0, #1
   133dc:	str	r0, [fp, #-44]	; 0xffffffd4
   133e0:	b	133e4 <__assert_fail@plt+0x23bc>
   133e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   133e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   133ec:	cmp	r0, r1
   133f0:	bcs	13408 <__assert_fail@plt+0x23e0>
   133f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   133f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   133fc:	add	r0, r0, r1
   13400:	movw	r1, #39	; 0x27
   13404:	strb	r1, [r0]
   13408:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1340c:	add	r0, r0, #1
   13410:	str	r0, [fp, #-44]	; 0xffffffd4
   13414:	movw	r0, #1
   13418:	strb	r0, [fp, #-60]	; 0xffffffc4
   1341c:	b	13420 <__assert_fail@plt+0x23f8>
   13420:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13424:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13428:	cmp	r0, r1
   1342c:	bcs	13444 <__assert_fail@plt+0x241c>
   13430:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13434:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13438:	add	r0, r0, r1
   1343c:	movw	r1, #92	; 0x5c
   13440:	strb	r1, [r0]
   13444:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13448:	add	r0, r0, #1
   1344c:	str	r0, [fp, #-44]	; 0xffffffd4
   13450:	b	13454 <__assert_fail@plt+0x242c>
   13454:	b	13458 <__assert_fail@plt+0x2430>
   13458:	b	1345c <__assert_fail@plt+0x2434>
   1345c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   13460:	tst	r0, #1
   13464:	beq	134e4 <__assert_fail@plt+0x24bc>
   13468:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   1346c:	tst	r0, #1
   13470:	bne	134e4 <__assert_fail@plt+0x24bc>
   13474:	b	13478 <__assert_fail@plt+0x2450>
   13478:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1347c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13480:	cmp	r0, r1
   13484:	bcs	1349c <__assert_fail@plt+0x2474>
   13488:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1348c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13490:	add	r0, r0, r1
   13494:	movw	r1, #39	; 0x27
   13498:	strb	r1, [r0]
   1349c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   134a0:	add	r0, r0, #1
   134a4:	str	r0, [fp, #-44]	; 0xffffffd4
   134a8:	b	134ac <__assert_fail@plt+0x2484>
   134ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   134b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   134b4:	cmp	r0, r1
   134b8:	bcs	134d0 <__assert_fail@plt+0x24a8>
   134bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   134c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   134c4:	add	r0, r0, r1
   134c8:	movw	r1, #39	; 0x27
   134cc:	strb	r1, [r0]
   134d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   134d4:	add	r0, r0, #1
   134d8:	str	r0, [fp, #-44]	; 0xffffffd4
   134dc:	movw	r0, #0
   134e0:	strb	r0, [fp, #-60]	; 0xffffffc4
   134e4:	b	134e8 <__assert_fail@plt+0x24c0>
   134e8:	b	134ec <__assert_fail@plt+0x24c4>
   134ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   134f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   134f4:	cmp	r0, r1
   134f8:	bcs	13510 <__assert_fail@plt+0x24e8>
   134fc:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13500:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13504:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13508:	add	r1, r1, r2
   1350c:	strb	r0, [r1]
   13510:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13514:	add	r0, r0, #1
   13518:	str	r0, [fp, #-44]	; 0xffffffd4
   1351c:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   13520:	tst	r0, #1
   13524:	bne	13530 <__assert_fail@plt+0x2508>
   13528:	movw	r0, #0
   1352c:	strb	r0, [fp, #-62]	; 0xffffffc2
   13530:	b	13534 <__assert_fail@plt+0x250c>
   13534:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13538:	add	r0, r0, #1
   1353c:	str	r0, [fp, #-40]	; 0xffffffd8
   13540:	b	122ec <__assert_fail@plt+0x12c4>
   13544:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13548:	cmp	r0, #0
   1354c:	bne	1356c <__assert_fail@plt+0x2544>
   13550:	ldr	r0, [fp, #8]
   13554:	cmp	r0, #2
   13558:	bne	1356c <__assert_fail@plt+0x2544>
   1355c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13560:	tst	r0, #1
   13564:	beq	1356c <__assert_fail@plt+0x2544>
   13568:	b	136c4 <__assert_fail@plt+0x269c>
   1356c:	ldr	r0, [fp, #8]
   13570:	cmp	r0, #2
   13574:	bne	13614 <__assert_fail@plt+0x25ec>
   13578:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1357c:	tst	r0, #1
   13580:	bne	13614 <__assert_fail@plt+0x25ec>
   13584:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   13588:	tst	r0, #1
   1358c:	beq	13614 <__assert_fail@plt+0x25ec>
   13590:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   13594:	tst	r0, #1
   13598:	beq	135e0 <__assert_fail@plt+0x25b8>
   1359c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   135a0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   135a4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   135a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   135ac:	ldr	ip, [fp, #12]
   135b0:	ldr	lr, [fp, #16]
   135b4:	ldr	r4, [fp, #20]
   135b8:	ldr	r5, [fp, #24]
   135bc:	movw	r6, #5
   135c0:	str	r6, [sp]
   135c4:	str	ip, [sp, #4]
   135c8:	str	lr, [sp, #8]
   135cc:	str	r4, [sp, #12]
   135d0:	str	r5, [sp, #16]
   135d4:	bl	12004 <__assert_fail@plt+0xfdc>
   135d8:	str	r0, [fp, #-20]	; 0xffffffec
   135dc:	b	1372c <__assert_fail@plt+0x2704>
   135e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   135e4:	cmp	r0, #0
   135e8:	bne	1360c <__assert_fail@plt+0x25e4>
   135ec:	ldr	r0, [fp, #-48]	; 0xffffffd0
   135f0:	cmp	r0, #0
   135f4:	beq	1360c <__assert_fail@plt+0x25e4>
   135f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   135fc:	str	r0, [fp, #-28]	; 0xffffffe4
   13600:	movw	r0, #0
   13604:	str	r0, [fp, #-44]	; 0xffffffd4
   13608:	b	120ac <__assert_fail@plt+0x1084>
   1360c:	b	13610 <__assert_fail@plt+0x25e8>
   13610:	b	13614 <__assert_fail@plt+0x25ec>
   13614:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13618:	movw	r1, #0
   1361c:	cmp	r0, r1
   13620:	beq	13694 <__assert_fail@plt+0x266c>
   13624:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13628:	tst	r0, #1
   1362c:	bne	13694 <__assert_fail@plt+0x266c>
   13630:	b	13634 <__assert_fail@plt+0x260c>
   13634:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13638:	ldrsb	r0, [r0]
   1363c:	cmp	r0, #0
   13640:	beq	13690 <__assert_fail@plt+0x2668>
   13644:	b	13648 <__assert_fail@plt+0x2620>
   13648:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1364c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13650:	cmp	r0, r1
   13654:	bcs	13670 <__assert_fail@plt+0x2648>
   13658:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1365c:	ldrb	r0, [r0]
   13660:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13664:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13668:	add	r1, r1, r2
   1366c:	strb	r0, [r1]
   13670:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13674:	add	r0, r0, #1
   13678:	str	r0, [fp, #-44]	; 0xffffffd4
   1367c:	b	13680 <__assert_fail@plt+0x2658>
   13680:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13684:	add	r0, r0, #1
   13688:	str	r0, [fp, #-52]	; 0xffffffcc
   1368c:	b	13634 <__assert_fail@plt+0x260c>
   13690:	b	13694 <__assert_fail@plt+0x266c>
   13694:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13698:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1369c:	cmp	r0, r1
   136a0:	bcs	136b8 <__assert_fail@plt+0x2690>
   136a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   136a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   136ac:	add	r0, r0, r1
   136b0:	movw	r1, #0
   136b4:	strb	r1, [r0]
   136b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   136bc:	str	r0, [fp, #-20]	; 0xffffffec
   136c0:	b	1372c <__assert_fail@plt+0x2704>
   136c4:	ldr	r0, [fp, #8]
   136c8:	cmp	r0, #2
   136cc:	bne	136e4 <__assert_fail@plt+0x26bc>
   136d0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   136d4:	tst	r0, #1
   136d8:	beq	136e4 <__assert_fail@plt+0x26bc>
   136dc:	movw	r0, #4
   136e0:	str	r0, [fp, #8]
   136e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   136e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   136ec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   136f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   136f4:	ldr	ip, [fp, #8]
   136f8:	ldr	lr, [fp, #12]
   136fc:	mvn	r4, #2
   13700:	and	lr, lr, r4
   13704:	ldr	r4, [fp, #20]
   13708:	ldr	r5, [fp, #24]
   1370c:	str	ip, [sp]
   13710:	str	lr, [sp, #4]
   13714:	movw	ip, #0
   13718:	str	ip, [sp, #8]
   1371c:	str	r4, [sp, #12]
   13720:	str	r5, [sp, #16]
   13724:	bl	12004 <__assert_fail@plt+0xfdc>
   13728:	str	r0, [fp, #-20]	; 0xffffffec
   1372c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13730:	sub	sp, fp, #16
   13734:	pop	{r4, r5, r6, sl, fp, pc}
   13738:	push	{fp, lr}
   1373c:	mov	fp, sp
   13740:	sub	sp, sp, #16
   13744:	str	r0, [fp, #-4]
   13748:	str	r1, [sp, #8]
   1374c:	str	r2, [sp, #4]
   13750:	ldr	r0, [fp, #-4]
   13754:	ldr	r1, [sp, #8]
   13758:	ldr	r3, [sp, #4]
   1375c:	movw	r2, #0
   13760:	bl	1376c <__assert_fail@plt+0x2744>
   13764:	mov	sp, fp
   13768:	pop	{fp, pc}
   1376c:	push	{r4, r5, r6, sl, fp, lr}
   13770:	add	fp, sp, #16
   13774:	sub	sp, sp, #80	; 0x50
   13778:	str	r0, [fp, #-20]	; 0xffffffec
   1377c:	str	r1, [fp, #-24]	; 0xffffffe8
   13780:	str	r2, [fp, #-28]	; 0xffffffe4
   13784:	str	r3, [fp, #-32]	; 0xffffffe0
   13788:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1378c:	movw	r1, #0
   13790:	cmp	r0, r1
   13794:	beq	137a4 <__assert_fail@plt+0x277c>
   13798:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1379c:	str	r0, [sp, #40]	; 0x28
   137a0:	b	137b4 <__assert_fail@plt+0x278c>
   137a4:	movw	r0, #53596	; 0xd15c
   137a8:	movt	r0, #2
   137ac:	str	r0, [sp, #40]	; 0x28
   137b0:	b	137b4 <__assert_fail@plt+0x278c>
   137b4:	ldr	r0, [sp, #40]	; 0x28
   137b8:	str	r0, [fp, #-36]	; 0xffffffdc
   137bc:	bl	10f74 <__errno_location@plt>
   137c0:	ldr	r0, [r0]
   137c4:	str	r0, [fp, #-40]	; 0xffffffd8
   137c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   137cc:	ldr	r0, [r0, #4]
   137d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   137d4:	movw	r2, #0
   137d8:	cmp	r1, r2
   137dc:	movw	r1, #0
   137e0:	movne	r1, #1
   137e4:	tst	r1, #1
   137e8:	mov	r1, r2
   137ec:	moveq	r1, #1
   137f0:	orr	r0, r0, r1
   137f4:	str	r0, [fp, #-44]	; 0xffffffd4
   137f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   137fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13800:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13804:	ldr	r1, [r1]
   13808:	ldr	ip, [fp, #-44]	; 0xffffffd4
   1380c:	ldr	lr, [fp, #-36]	; 0xffffffdc
   13810:	add	lr, lr, #8
   13814:	ldr	r4, [fp, #-36]	; 0xffffffdc
   13818:	ldr	r4, [r4, #40]	; 0x28
   1381c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   13820:	ldr	r5, [r5, #44]	; 0x2c
   13824:	str	r0, [sp, #36]	; 0x24
   13828:	mov	r0, r2
   1382c:	str	r1, [sp, #32]
   13830:	mov	r1, r2
   13834:	ldr	r2, [sp, #36]	; 0x24
   13838:	ldr	r6, [sp, #32]
   1383c:	str	r6, [sp]
   13840:	str	ip, [sp, #4]
   13844:	str	lr, [sp, #8]
   13848:	str	r4, [sp, #12]
   1384c:	str	r5, [sp, #16]
   13850:	bl	12004 <__assert_fail@plt+0xfdc>
   13854:	add	r0, r0, #1
   13858:	str	r0, [sp, #48]	; 0x30
   1385c:	ldr	r0, [sp, #48]	; 0x30
   13860:	bl	14c50 <__assert_fail@plt+0x3c28>
   13864:	str	r0, [sp, #44]	; 0x2c
   13868:	ldr	r0, [sp, #44]	; 0x2c
   1386c:	ldr	r1, [sp, #48]	; 0x30
   13870:	ldr	r2, [fp, #-20]	; 0xffffffec
   13874:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13878:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1387c:	ldr	ip, [ip]
   13880:	ldr	lr, [fp, #-44]	; 0xffffffd4
   13884:	ldr	r4, [fp, #-36]	; 0xffffffdc
   13888:	add	r4, r4, #8
   1388c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   13890:	ldr	r5, [r5, #40]	; 0x28
   13894:	ldr	r6, [fp, #-36]	; 0xffffffdc
   13898:	ldr	r6, [r6, #44]	; 0x2c
   1389c:	str	ip, [sp]
   138a0:	str	lr, [sp, #4]
   138a4:	str	r4, [sp, #8]
   138a8:	str	r5, [sp, #12]
   138ac:	str	r6, [sp, #16]
   138b0:	bl	12004 <__assert_fail@plt+0xfdc>
   138b4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   138b8:	str	r0, [sp, #28]
   138bc:	str	r1, [sp, #24]
   138c0:	bl	10f74 <__errno_location@plt>
   138c4:	ldr	r1, [sp, #24]
   138c8:	str	r1, [r0]
   138cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   138d0:	movw	r2, #0
   138d4:	cmp	r0, r2
   138d8:	beq	138ec <__assert_fail@plt+0x28c4>
   138dc:	ldr	r0, [sp, #48]	; 0x30
   138e0:	sub	r0, r0, #1
   138e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   138e8:	str	r0, [r1]
   138ec:	ldr	r0, [sp, #44]	; 0x2c
   138f0:	sub	sp, fp, #16
   138f4:	pop	{r4, r5, r6, sl, fp, pc}
   138f8:	push	{fp, lr}
   138fc:	mov	fp, sp
   13900:	sub	sp, sp, #8
   13904:	movw	r0, #53484	; 0xd0ec
   13908:	movt	r0, #2
   1390c:	ldr	r0, [r0]
   13910:	str	r0, [sp, #4]
   13914:	movw	r0, #1
   13918:	str	r0, [sp]
   1391c:	ldr	r0, [sp]
   13920:	movw	r1, #53488	; 0xd0f0
   13924:	movt	r1, #2
   13928:	ldr	r1, [r1]
   1392c:	cmp	r0, r1
   13930:	bge	13958 <__assert_fail@plt+0x2930>
   13934:	ldr	r0, [sp, #4]
   13938:	ldr	r1, [sp]
   1393c:	add	r0, r0, r1, lsl #3
   13940:	ldr	r0, [r0, #4]
   13944:	bl	1a650 <__assert_fail@plt+0x9628>
   13948:	ldr	r0, [sp]
   1394c:	add	r0, r0, #1
   13950:	str	r0, [sp]
   13954:	b	1391c <__assert_fail@plt+0x28f4>
   13958:	ldr	r0, [sp, #4]
   1395c:	ldr	r0, [r0, #4]
   13960:	movw	r1, #53644	; 0xd18c
   13964:	movt	r1, #2
   13968:	cmp	r0, r1
   1396c:	beq	13998 <__assert_fail@plt+0x2970>
   13970:	ldr	r0, [sp, #4]
   13974:	ldr	r0, [r0, #4]
   13978:	bl	1a650 <__assert_fail@plt+0x9628>
   1397c:	movw	r0, #256	; 0x100
   13980:	movw	r1, #53492	; 0xd0f4
   13984:	movt	r1, #2
   13988:	str	r0, [r1]
   1398c:	movw	r0, #53644	; 0xd18c
   13990:	movt	r0, #2
   13994:	str	r0, [r1, #4]
   13998:	ldr	r0, [sp, #4]
   1399c:	movw	r1, #53492	; 0xd0f4
   139a0:	movt	r1, #2
   139a4:	cmp	r0, r1
   139a8:	beq	139c8 <__assert_fail@plt+0x29a0>
   139ac:	ldr	r0, [sp, #4]
   139b0:	bl	1a650 <__assert_fail@plt+0x9628>
   139b4:	movw	r0, #53484	; 0xd0ec
   139b8:	movt	r0, #2
   139bc:	movw	r1, #53492	; 0xd0f4
   139c0:	movt	r1, #2
   139c4:	str	r1, [r0]
   139c8:	movw	r0, #53488	; 0xd0f0
   139cc:	movt	r0, #2
   139d0:	movw	r1, #1
   139d4:	str	r1, [r0]
   139d8:	mov	sp, fp
   139dc:	pop	{fp, pc}
   139e0:	push	{fp, lr}
   139e4:	mov	fp, sp
   139e8:	sub	sp, sp, #8
   139ec:	str	r0, [sp, #4]
   139f0:	str	r1, [sp]
   139f4:	ldr	r0, [sp, #4]
   139f8:	ldr	r1, [sp]
   139fc:	mvn	r2, #0
   13a00:	movw	r3, #53596	; 0xd15c
   13a04:	movt	r3, #2
   13a08:	bl	13a14 <__assert_fail@plt+0x29ec>
   13a0c:	mov	sp, fp
   13a10:	pop	{fp, pc}
   13a14:	push	{r4, r5, r6, sl, fp, lr}
   13a18:	add	fp, sp, #16
   13a1c:	sub	sp, sp, #80	; 0x50
   13a20:	str	r0, [fp, #-20]	; 0xffffffec
   13a24:	str	r1, [fp, #-24]	; 0xffffffe8
   13a28:	str	r2, [fp, #-28]	; 0xffffffe4
   13a2c:	str	r3, [fp, #-32]	; 0xffffffe0
   13a30:	bl	10f74 <__errno_location@plt>
   13a34:	ldr	r1, [pc, #672]	; 13cdc <__assert_fail@plt+0x2cb4>
   13a38:	ldr	r0, [r0]
   13a3c:	str	r0, [fp, #-36]	; 0xffffffdc
   13a40:	movw	r0, #53484	; 0xd0ec
   13a44:	movt	r0, #2
   13a48:	ldr	r0, [r0]
   13a4c:	str	r0, [fp, #-40]	; 0xffffffd8
   13a50:	str	r1, [fp, #-44]	; 0xffffffd4
   13a54:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a58:	movw	r1, #0
   13a5c:	cmp	r1, r0
   13a60:	bgt	13a74 <__assert_fail@plt+0x2a4c>
   13a64:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a68:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13a6c:	cmp	r0, r1
   13a70:	blt	13a78 <__assert_fail@plt+0x2a50>
   13a74:	bl	1101c <abort@plt>
   13a78:	movw	r0, #53488	; 0xd0f0
   13a7c:	movt	r0, #2
   13a80:	ldr	r0, [r0]
   13a84:	ldr	r1, [fp, #-20]	; 0xffffffec
   13a88:	cmp	r0, r1
   13a8c:	bgt	13b84 <__assert_fail@plt+0x2b5c>
   13a90:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13a94:	movw	r1, #53492	; 0xd0f4
   13a98:	movt	r1, #2
   13a9c:	cmp	r0, r1
   13aa0:	movw	r0, #0
   13aa4:	moveq	r0, #1
   13aa8:	and	r0, r0, #1
   13aac:	strb	r0, [fp, #-45]	; 0xffffffd3
   13ab0:	movw	r0, #53488	; 0xd0f0
   13ab4:	movt	r0, #2
   13ab8:	ldr	r0, [r0]
   13abc:	str	r0, [sp, #44]	; 0x2c
   13ac0:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   13ac4:	tst	r0, #1
   13ac8:	beq	13ad8 <__assert_fail@plt+0x2ab0>
   13acc:	movw	r0, #0
   13ad0:	str	r0, [sp, #24]
   13ad4:	b	13ae0 <__assert_fail@plt+0x2ab8>
   13ad8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13adc:	str	r0, [sp, #24]
   13ae0:	ldr	r0, [sp, #24]
   13ae4:	ldr	r1, [fp, #-20]	; 0xffffffec
   13ae8:	movw	r2, #53488	; 0xd0f0
   13aec:	movt	r2, #2
   13af0:	ldr	r2, [r2]
   13af4:	sub	r1, r1, r2
   13af8:	add	r2, r1, #1
   13afc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13b00:	add	r1, sp, #44	; 0x2c
   13b04:	movw	ip, #8
   13b08:	str	ip, [sp]
   13b0c:	bl	14e8c <__assert_fail@plt+0x3e64>
   13b10:	str	r0, [fp, #-40]	; 0xffffffd8
   13b14:	movw	r1, #53484	; 0xd0ec
   13b18:	movt	r1, #2
   13b1c:	str	r0, [r1]
   13b20:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   13b24:	tst	r0, #1
   13b28:	beq	13b48 <__assert_fail@plt+0x2b20>
   13b2c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13b30:	movw	r1, #53492	; 0xd0f4
   13b34:	movt	r1, #2
   13b38:	ldr	r2, [r1]
   13b3c:	str	r2, [r0]
   13b40:	ldr	r1, [r1, #4]
   13b44:	str	r1, [r0, #4]
   13b48:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13b4c:	movw	r1, #53488	; 0xd0f0
   13b50:	movt	r1, #2
   13b54:	ldr	r1, [r1]
   13b58:	add	r0, r0, r1, lsl #3
   13b5c:	ldr	r2, [sp, #44]	; 0x2c
   13b60:	sub	r1, r2, r1
   13b64:	lsl	r2, r1, #3
   13b68:	movw	r1, #0
   13b6c:	and	r1, r1, #255	; 0xff
   13b70:	bl	10f8c <memset@plt>
   13b74:	ldr	r0, [sp, #44]	; 0x2c
   13b78:	movw	r1, #53488	; 0xd0f0
   13b7c:	movt	r1, #2
   13b80:	str	r0, [r1]
   13b84:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13b88:	ldr	r1, [fp, #-20]	; 0xffffffec
   13b8c:	ldr	r0, [r0, r1, lsl #3]
   13b90:	str	r0, [sp, #40]	; 0x28
   13b94:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13b98:	ldr	r1, [fp, #-20]	; 0xffffffec
   13b9c:	add	r0, r0, r1, lsl #3
   13ba0:	ldr	r0, [r0, #4]
   13ba4:	str	r0, [sp, #36]	; 0x24
   13ba8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13bac:	ldr	r0, [r0, #4]
   13bb0:	orr	r0, r0, #1
   13bb4:	str	r0, [sp, #32]
   13bb8:	ldr	r0, [sp, #36]	; 0x24
   13bbc:	ldr	r1, [sp, #40]	; 0x28
   13bc0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13bc4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13bc8:	ldr	ip, [fp, #-32]	; 0xffffffe0
   13bcc:	ldr	ip, [ip]
   13bd0:	ldr	lr, [sp, #32]
   13bd4:	ldr	r4, [fp, #-32]	; 0xffffffe0
   13bd8:	add	r4, r4, #8
   13bdc:	ldr	r5, [fp, #-32]	; 0xffffffe0
   13be0:	ldr	r5, [r5, #40]	; 0x28
   13be4:	ldr	r6, [fp, #-32]	; 0xffffffe0
   13be8:	ldr	r6, [r6, #44]	; 0x2c
   13bec:	str	ip, [sp]
   13bf0:	str	lr, [sp, #4]
   13bf4:	str	r4, [sp, #8]
   13bf8:	str	r5, [sp, #12]
   13bfc:	str	r6, [sp, #16]
   13c00:	bl	12004 <__assert_fail@plt+0xfdc>
   13c04:	str	r0, [sp, #28]
   13c08:	ldr	r0, [sp, #40]	; 0x28
   13c0c:	ldr	r1, [sp, #28]
   13c10:	cmp	r0, r1
   13c14:	bhi	13cbc <__assert_fail@plt+0x2c94>
   13c18:	ldr	r0, [sp, #28]
   13c1c:	add	r0, r0, #1
   13c20:	str	r0, [sp, #40]	; 0x28
   13c24:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13c28:	ldr	r2, [fp, #-20]	; 0xffffffec
   13c2c:	add	r1, r1, r2, lsl #3
   13c30:	str	r0, [r1]
   13c34:	ldr	r0, [sp, #36]	; 0x24
   13c38:	movw	r1, #53644	; 0xd18c
   13c3c:	movt	r1, #2
   13c40:	cmp	r0, r1
   13c44:	beq	13c50 <__assert_fail@plt+0x2c28>
   13c48:	ldr	r0, [sp, #36]	; 0x24
   13c4c:	bl	1a650 <__assert_fail@plt+0x9628>
   13c50:	ldr	r0, [sp, #40]	; 0x28
   13c54:	bl	14c50 <__assert_fail@plt+0x3c28>
   13c58:	mov	r1, r0
   13c5c:	str	r0, [sp, #36]	; 0x24
   13c60:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13c64:	ldr	r2, [fp, #-20]	; 0xffffffec
   13c68:	add	r0, r0, r2, lsl #3
   13c6c:	str	r1, [r0, #4]
   13c70:	ldr	r0, [sp, #36]	; 0x24
   13c74:	ldr	r1, [sp, #40]	; 0x28
   13c78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13c7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13c80:	ldr	ip, [fp, #-32]	; 0xffffffe0
   13c84:	ldr	ip, [ip]
   13c88:	ldr	lr, [sp, #32]
   13c8c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   13c90:	add	r4, r4, #8
   13c94:	ldr	r5, [fp, #-32]	; 0xffffffe0
   13c98:	ldr	r5, [r5, #40]	; 0x28
   13c9c:	ldr	r6, [fp, #-32]	; 0xffffffe0
   13ca0:	ldr	r6, [r6, #44]	; 0x2c
   13ca4:	str	ip, [sp]
   13ca8:	str	lr, [sp, #4]
   13cac:	str	r4, [sp, #8]
   13cb0:	str	r5, [sp, #12]
   13cb4:	str	r6, [sp, #16]
   13cb8:	bl	12004 <__assert_fail@plt+0xfdc>
   13cbc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13cc0:	str	r0, [sp, #20]
   13cc4:	bl	10f74 <__errno_location@plt>
   13cc8:	ldr	r1, [sp, #20]
   13ccc:	str	r1, [r0]
   13cd0:	ldr	r0, [sp, #36]	; 0x24
   13cd4:	sub	sp, fp, #16
   13cd8:	pop	{r4, r5, r6, sl, fp, pc}
   13cdc:	svcvc	0x00ffffff
   13ce0:	push	{fp, lr}
   13ce4:	mov	fp, sp
   13ce8:	sub	sp, sp, #16
   13cec:	str	r0, [fp, #-4]
   13cf0:	str	r1, [sp, #8]
   13cf4:	str	r2, [sp, #4]
   13cf8:	ldr	r0, [fp, #-4]
   13cfc:	ldr	r1, [sp, #8]
   13d00:	ldr	r2, [sp, #4]
   13d04:	movw	r3, #53596	; 0xd15c
   13d08:	movt	r3, #2
   13d0c:	bl	13a14 <__assert_fail@plt+0x29ec>
   13d10:	mov	sp, fp
   13d14:	pop	{fp, pc}
   13d18:	push	{fp, lr}
   13d1c:	mov	fp, sp
   13d20:	sub	sp, sp, #8
   13d24:	str	r0, [sp, #4]
   13d28:	ldr	r1, [sp, #4]
   13d2c:	movw	r0, #0
   13d30:	bl	139e0 <__assert_fail@plt+0x29b8>
   13d34:	mov	sp, fp
   13d38:	pop	{fp, pc}
   13d3c:	push	{fp, lr}
   13d40:	mov	fp, sp
   13d44:	sub	sp, sp, #8
   13d48:	str	r0, [sp, #4]
   13d4c:	str	r1, [sp]
   13d50:	ldr	r1, [sp, #4]
   13d54:	ldr	r2, [sp]
   13d58:	movw	r0, #0
   13d5c:	bl	13ce0 <__assert_fail@plt+0x2cb8>
   13d60:	mov	sp, fp
   13d64:	pop	{fp, pc}
   13d68:	push	{fp, lr}
   13d6c:	mov	fp, sp
   13d70:	sub	sp, sp, #64	; 0x40
   13d74:	str	r0, [fp, #-4]
   13d78:	str	r1, [fp, #-8]
   13d7c:	str	r2, [fp, #-12]
   13d80:	ldr	r1, [fp, #-8]
   13d84:	add	r0, sp, #4
   13d88:	bl	13da8 <__assert_fail@plt+0x2d80>
   13d8c:	ldr	r0, [fp, #-4]
   13d90:	ldr	r1, [fp, #-12]
   13d94:	mvn	r2, #0
   13d98:	add	r3, sp, #4
   13d9c:	bl	13a14 <__assert_fail@plt+0x29ec>
   13da0:	mov	sp, fp
   13da4:	pop	{fp, pc}
   13da8:	push	{fp, lr}
   13dac:	mov	fp, sp
   13db0:	sub	sp, sp, #8
   13db4:	str	r1, [sp, #4]
   13db8:	mov	r1, r0
   13dbc:	str	r0, [sp]
   13dc0:	mov	r0, r1
   13dc4:	movw	r1, #0
   13dc8:	and	r1, r1, #255	; 0xff
   13dcc:	movw	r2, #48	; 0x30
   13dd0:	bl	10f8c <memset@plt>
   13dd4:	ldr	r0, [sp, #4]
   13dd8:	cmp	r0, #10
   13ddc:	bne	13de4 <__assert_fail@plt+0x2dbc>
   13de0:	bl	1101c <abort@plt>
   13de4:	ldr	r0, [sp, #4]
   13de8:	ldr	r1, [sp]
   13dec:	str	r0, [r1]
   13df0:	mov	sp, fp
   13df4:	pop	{fp, pc}
   13df8:	push	{fp, lr}
   13dfc:	mov	fp, sp
   13e00:	sub	sp, sp, #64	; 0x40
   13e04:	str	r0, [fp, #-4]
   13e08:	str	r1, [fp, #-8]
   13e0c:	str	r2, [fp, #-12]
   13e10:	str	r3, [fp, #-16]
   13e14:	ldr	r1, [fp, #-8]
   13e18:	mov	r0, sp
   13e1c:	bl	13da8 <__assert_fail@plt+0x2d80>
   13e20:	ldr	r0, [fp, #-4]
   13e24:	ldr	r1, [fp, #-12]
   13e28:	ldr	r2, [fp, #-16]
   13e2c:	mov	r3, sp
   13e30:	bl	13a14 <__assert_fail@plt+0x29ec>
   13e34:	mov	sp, fp
   13e38:	pop	{fp, pc}
   13e3c:	push	{fp, lr}
   13e40:	mov	fp, sp
   13e44:	sub	sp, sp, #8
   13e48:	str	r0, [sp, #4]
   13e4c:	str	r1, [sp]
   13e50:	ldr	r1, [sp, #4]
   13e54:	ldr	r2, [sp]
   13e58:	movw	r0, #0
   13e5c:	bl	13d68 <__assert_fail@plt+0x2d40>
   13e60:	mov	sp, fp
   13e64:	pop	{fp, pc}
   13e68:	push	{fp, lr}
   13e6c:	mov	fp, sp
   13e70:	sub	sp, sp, #16
   13e74:	str	r0, [fp, #-4]
   13e78:	str	r1, [sp, #8]
   13e7c:	str	r2, [sp, #4]
   13e80:	ldr	r1, [fp, #-4]
   13e84:	ldr	r2, [sp, #8]
   13e88:	ldr	r3, [sp, #4]
   13e8c:	movw	r0, #0
   13e90:	bl	13df8 <__assert_fail@plt+0x2dd0>
   13e94:	mov	sp, fp
   13e98:	pop	{fp, pc}
   13e9c:	push	{fp, lr}
   13ea0:	mov	fp, sp
   13ea4:	sub	sp, sp, #72	; 0x48
   13ea8:	movw	r3, #53596	; 0xd15c
   13eac:	movt	r3, #2
   13eb0:	str	r0, [fp, #-4]
   13eb4:	str	r1, [fp, #-8]
   13eb8:	strb	r2, [fp, #-9]
   13ebc:	add	r0, sp, #12
   13ec0:	mov	r1, r0
   13ec4:	str	r0, [sp, #8]
   13ec8:	mov	r0, r1
   13ecc:	mov	r1, r3
   13ed0:	movw	r2, #48	; 0x30
   13ed4:	bl	10e30 <memcpy@plt>
   13ed8:	ldr	r0, [sp, #8]
   13edc:	ldrb	r1, [fp, #-9]
   13ee0:	movw	r2, #1
   13ee4:	bl	11dac <__assert_fail@plt+0xd84>
   13ee8:	ldr	r1, [fp, #-4]
   13eec:	ldr	r2, [fp, #-8]
   13ef0:	movw	r3, #0
   13ef4:	str	r0, [sp, #4]
   13ef8:	mov	r0, r3
   13efc:	add	r3, sp, #12
   13f00:	bl	13a14 <__assert_fail@plt+0x29ec>
   13f04:	mov	sp, fp
   13f08:	pop	{fp, pc}
   13f0c:	push	{fp, lr}
   13f10:	mov	fp, sp
   13f14:	sub	sp, sp, #8
   13f18:	str	r0, [sp, #4]
   13f1c:	strb	r1, [sp, #3]
   13f20:	ldr	r0, [sp, #4]
   13f24:	mvn	r1, #0
   13f28:	ldrb	r2, [sp, #3]
   13f2c:	bl	13e9c <__assert_fail@plt+0x2e74>
   13f30:	mov	sp, fp
   13f34:	pop	{fp, pc}
   13f38:	push	{fp, lr}
   13f3c:	mov	fp, sp
   13f40:	sub	sp, sp, #8
   13f44:	str	r0, [sp, #4]
   13f48:	ldr	r0, [sp, #4]
   13f4c:	movw	r1, #58	; 0x3a
   13f50:	and	r1, r1, #255	; 0xff
   13f54:	bl	13f0c <__assert_fail@plt+0x2ee4>
   13f58:	mov	sp, fp
   13f5c:	pop	{fp, pc}
   13f60:	push	{fp, lr}
   13f64:	mov	fp, sp
   13f68:	sub	sp, sp, #8
   13f6c:	str	r0, [sp, #4]
   13f70:	str	r1, [sp]
   13f74:	ldr	r0, [sp, #4]
   13f78:	ldr	r1, [sp]
   13f7c:	movw	r2, #58	; 0x3a
   13f80:	and	r2, r2, #255	; 0xff
   13f84:	bl	13e9c <__assert_fail@plt+0x2e74>
   13f88:	mov	sp, fp
   13f8c:	pop	{fp, pc}
   13f90:	push	{fp, lr}
   13f94:	mov	fp, sp
   13f98:	sub	sp, sp, #120	; 0x78
   13f9c:	str	r0, [fp, #-4]
   13fa0:	str	r1, [fp, #-8]
   13fa4:	str	r2, [fp, #-12]
   13fa8:	ldr	r1, [fp, #-8]
   13fac:	add	r0, sp, #12
   13fb0:	bl	13da8 <__assert_fail@plt+0x2d80>
   13fb4:	add	r0, sp, #60	; 0x3c
   13fb8:	mov	r1, r0
   13fbc:	add	r2, sp, #12
   13fc0:	str	r0, [sp, #8]
   13fc4:	mov	r0, r1
   13fc8:	mov	r1, r2
   13fcc:	movw	r2, #48	; 0x30
   13fd0:	bl	10e30 <memcpy@plt>
   13fd4:	ldr	r0, [sp, #8]
   13fd8:	movw	r1, #58	; 0x3a
   13fdc:	and	r1, r1, #255	; 0xff
   13fe0:	movw	r2, #1
   13fe4:	bl	11dac <__assert_fail@plt+0xd84>
   13fe8:	ldr	r1, [fp, #-4]
   13fec:	ldr	r2, [fp, #-12]
   13ff0:	str	r0, [sp, #4]
   13ff4:	mov	r0, r1
   13ff8:	mov	r1, r2
   13ffc:	mvn	r2, #0
   14000:	add	r3, sp, #60	; 0x3c
   14004:	bl	13a14 <__assert_fail@plt+0x29ec>
   14008:	mov	sp, fp
   1400c:	pop	{fp, pc}
   14010:	push	{fp, lr}
   14014:	mov	fp, sp
   14018:	sub	sp, sp, #24
   1401c:	str	r0, [fp, #-4]
   14020:	str	r1, [fp, #-8]
   14024:	str	r2, [sp, #12]
   14028:	str	r3, [sp, #8]
   1402c:	ldr	r0, [fp, #-4]
   14030:	ldr	r1, [fp, #-8]
   14034:	ldr	r2, [sp, #12]
   14038:	ldr	r3, [sp, #8]
   1403c:	mvn	ip, #0
   14040:	str	ip, [sp]
   14044:	bl	14050 <__assert_fail@plt+0x3028>
   14048:	mov	sp, fp
   1404c:	pop	{fp, pc}
   14050:	push	{fp, lr}
   14054:	mov	fp, sp
   14058:	sub	sp, sp, #72	; 0x48
   1405c:	ldr	ip, [fp, #8]
   14060:	movw	lr, #53596	; 0xd15c
   14064:	movt	lr, #2
   14068:	str	r0, [fp, #-4]
   1406c:	str	r1, [fp, #-8]
   14070:	str	r2, [fp, #-12]
   14074:	str	r3, [fp, #-16]
   14078:	add	r0, sp, #8
   1407c:	mov	r1, r0
   14080:	str	r0, [sp, #4]
   14084:	mov	r0, r1
   14088:	mov	r1, lr
   1408c:	movw	r2, #48	; 0x30
   14090:	str	ip, [sp]
   14094:	bl	10e30 <memcpy@plt>
   14098:	ldr	r1, [fp, #-8]
   1409c:	ldr	r2, [fp, #-12]
   140a0:	ldr	r0, [sp, #4]
   140a4:	bl	11eac <__assert_fail@plt+0xe84>
   140a8:	ldr	r0, [fp, #-4]
   140ac:	ldr	r1, [fp, #-16]
   140b0:	ldr	r2, [fp, #8]
   140b4:	add	r3, sp, #8
   140b8:	bl	13a14 <__assert_fail@plt+0x29ec>
   140bc:	mov	sp, fp
   140c0:	pop	{fp, pc}
   140c4:	push	{fp, lr}
   140c8:	mov	fp, sp
   140cc:	sub	sp, sp, #16
   140d0:	str	r0, [fp, #-4]
   140d4:	str	r1, [sp, #8]
   140d8:	str	r2, [sp, #4]
   140dc:	ldr	r1, [fp, #-4]
   140e0:	ldr	r2, [sp, #8]
   140e4:	ldr	r3, [sp, #4]
   140e8:	movw	r0, #0
   140ec:	bl	14010 <__assert_fail@plt+0x2fe8>
   140f0:	mov	sp, fp
   140f4:	pop	{fp, pc}
   140f8:	push	{fp, lr}
   140fc:	mov	fp, sp
   14100:	sub	sp, sp, #24
   14104:	str	r0, [fp, #-4]
   14108:	str	r1, [fp, #-8]
   1410c:	str	r2, [sp, #12]
   14110:	str	r3, [sp, #8]
   14114:	ldr	r1, [fp, #-4]
   14118:	ldr	r2, [fp, #-8]
   1411c:	ldr	r3, [sp, #12]
   14120:	ldr	r0, [sp, #8]
   14124:	movw	ip, #0
   14128:	str	r0, [sp, #4]
   1412c:	mov	r0, ip
   14130:	ldr	ip, [sp, #4]
   14134:	str	ip, [sp]
   14138:	bl	14050 <__assert_fail@plt+0x3028>
   1413c:	mov	sp, fp
   14140:	pop	{fp, pc}
   14144:	push	{fp, lr}
   14148:	mov	fp, sp
   1414c:	sub	sp, sp, #16
   14150:	str	r0, [fp, #-4]
   14154:	str	r1, [sp, #8]
   14158:	str	r2, [sp, #4]
   1415c:	ldr	r0, [fp, #-4]
   14160:	ldr	r1, [sp, #8]
   14164:	ldr	r2, [sp, #4]
   14168:	movw	r3, #53500	; 0xd0fc
   1416c:	movt	r3, #2
   14170:	bl	13a14 <__assert_fail@plt+0x29ec>
   14174:	mov	sp, fp
   14178:	pop	{fp, pc}
   1417c:	push	{fp, lr}
   14180:	mov	fp, sp
   14184:	sub	sp, sp, #8
   14188:	str	r0, [sp, #4]
   1418c:	str	r1, [sp]
   14190:	ldr	r1, [sp, #4]
   14194:	ldr	r2, [sp]
   14198:	movw	r0, #0
   1419c:	bl	14144 <__assert_fail@plt+0x311c>
   141a0:	mov	sp, fp
   141a4:	pop	{fp, pc}
   141a8:	push	{fp, lr}
   141ac:	mov	fp, sp
   141b0:	sub	sp, sp, #8
   141b4:	str	r0, [sp, #4]
   141b8:	str	r1, [sp]
   141bc:	ldr	r0, [sp, #4]
   141c0:	ldr	r1, [sp]
   141c4:	mvn	r2, #0
   141c8:	bl	14144 <__assert_fail@plt+0x311c>
   141cc:	mov	sp, fp
   141d0:	pop	{fp, pc}
   141d4:	push	{fp, lr}
   141d8:	mov	fp, sp
   141dc:	sub	sp, sp, #8
   141e0:	str	r0, [sp, #4]
   141e4:	ldr	r1, [sp, #4]
   141e8:	movw	r0, #0
   141ec:	bl	141a8 <__assert_fail@plt+0x3180>
   141f0:	mov	sp, fp
   141f4:	pop	{fp, pc}
   141f8:	push	{fp, lr}
   141fc:	mov	fp, sp
   14200:	sub	sp, sp, #24
   14204:	str	r0, [fp, #-8]
   14208:	str	r1, [sp, #12]
   1420c:	ldr	r0, [fp, #-8]
   14210:	bl	10f38 <gettext@plt>
   14214:	str	r0, [sp, #8]
   14218:	ldr	r0, [sp, #8]
   1421c:	ldr	r1, [fp, #-8]
   14220:	cmp	r0, r1
   14224:	beq	14234 <__assert_fail@plt+0x320c>
   14228:	ldr	r0, [sp, #8]
   1422c:	str	r0, [fp, #-4]
   14230:	b	14300 <__assert_fail@plt+0x32d8>
   14234:	bl	1a96c <__assert_fail@plt+0x9944>
   14238:	str	r0, [sp, #4]
   1423c:	ldr	r0, [sp, #4]
   14240:	movw	r1, #50985	; 0xc729
   14244:	movt	r1, #1
   14248:	bl	1a330 <__assert_fail@plt+0x9308>
   1424c:	cmp	r0, #0
   14250:	bne	14288 <__assert_fail@plt+0x3260>
   14254:	ldr	r0, [fp, #-8]
   14258:	ldrb	r0, [r0]
   1425c:	cmp	r0, #96	; 0x60
   14260:	movw	r0, #0
   14264:	moveq	r0, #1
   14268:	tst	r0, #1
   1426c:	movw	r0, #50995	; 0xc733
   14270:	movt	r0, #1
   14274:	movw	r1, #50991	; 0xc72f
   14278:	movt	r1, #1
   1427c:	movne	r0, r1
   14280:	str	r0, [fp, #-4]
   14284:	b	14300 <__assert_fail@plt+0x32d8>
   14288:	ldr	r0, [sp, #4]
   1428c:	movw	r1, #50999	; 0xc737
   14290:	movt	r1, #1
   14294:	bl	1a330 <__assert_fail@plt+0x9308>
   14298:	cmp	r0, #0
   1429c:	bne	142d4 <__assert_fail@plt+0x32ac>
   142a0:	ldr	r0, [fp, #-8]
   142a4:	ldrb	r0, [r0]
   142a8:	cmp	r0, #96	; 0x60
   142ac:	movw	r0, #0
   142b0:	moveq	r0, #1
   142b4:	tst	r0, #1
   142b8:	movw	r0, #51011	; 0xc743
   142bc:	movt	r0, #1
   142c0:	movw	r1, #51007	; 0xc73f
   142c4:	movt	r1, #1
   142c8:	movne	r0, r1
   142cc:	str	r0, [fp, #-4]
   142d0:	b	14300 <__assert_fail@plt+0x32d8>
   142d4:	ldr	r0, [sp, #12]
   142d8:	cmp	r0, #9
   142dc:	movw	r0, #0
   142e0:	moveq	r0, #1
   142e4:	tst	r0, #1
   142e8:	movw	r0, #50983	; 0xc727
   142ec:	movt	r0, #1
   142f0:	movw	r1, #50979	; 0xc723
   142f4:	movt	r1, #1
   142f8:	movne	r0, r1
   142fc:	str	r0, [fp, #-4]
   14300:	ldr	r0, [fp, #-4]
   14304:	mov	sp, fp
   14308:	pop	{fp, pc}
   1430c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14310:	add	fp, sp, #28
   14314:	sub	sp, sp, #196	; 0xc4
   14318:	ldr	ip, [fp, #12]
   1431c:	ldr	lr, [fp, #8]
   14320:	str	r0, [fp, #-32]	; 0xffffffe0
   14324:	str	r1, [fp, #-36]	; 0xffffffdc
   14328:	str	r2, [fp, #-40]	; 0xffffffd8
   1432c:	str	r3, [fp, #-44]	; 0xffffffd4
   14330:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14334:	movw	r1, #0
   14338:	cmp	r0, r1
   1433c:	beq	14370 <__assert_fail@plt+0x3348>
   14340:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14344:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14348:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1434c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14350:	movw	ip, #51100	; 0xc79c
   14354:	movt	ip, #1
   14358:	str	r1, [fp, #-48]	; 0xffffffd0
   1435c:	mov	r1, ip
   14360:	ldr	ip, [fp, #-48]	; 0xffffffd0
   14364:	str	ip, [sp]
   14368:	bl	10f68 <fprintf@plt>
   1436c:	b	14388 <__assert_fail@plt+0x3360>
   14370:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14374:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14378:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1437c:	movw	r1, #51112	; 0xc7a8
   14380:	movt	r1, #1
   14384:	bl	10f68 <fprintf@plt>
   14388:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1438c:	movw	r1, #51119	; 0xc7af
   14390:	movt	r1, #1
   14394:	str	r0, [fp, #-52]	; 0xffffffcc
   14398:	mov	r0, r1
   1439c:	bl	10f38 <gettext@plt>
   143a0:	movw	r1, #51837	; 0xca7d
   143a4:	movt	r1, #1
   143a8:	movw	r3, #2022	; 0x7e6
   143ac:	ldr	r2, [fp, #-52]	; 0xffffffcc
   143b0:	str	r0, [fp, #-56]	; 0xffffffc8
   143b4:	mov	r0, r2
   143b8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   143bc:	bl	10f68 <fprintf@plt>
   143c0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   143c4:	movw	r2, #49980	; 0xc33c
   143c8:	movt	r2, #1
   143cc:	str	r0, [fp, #-60]	; 0xffffffc4
   143d0:	mov	r0, r2
   143d4:	str	r2, [fp, #-64]	; 0xffffffc0
   143d8:	bl	10ddc <fputs_unlocked@plt>
   143dc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   143e0:	movw	r2, #51123	; 0xc7b3
   143e4:	movt	r2, #1
   143e8:	str	r0, [fp, #-68]	; 0xffffffbc
   143ec:	mov	r0, r2
   143f0:	str	r1, [fp, #-72]	; 0xffffffb8
   143f4:	bl	10f38 <gettext@plt>
   143f8:	movw	r2, #51294	; 0xc85e
   143fc:	movt	r2, #1
   14400:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14404:	str	r0, [fp, #-76]	; 0xffffffb4
   14408:	mov	r0, r1
   1440c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   14410:	bl	10f68 <fprintf@plt>
   14414:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14418:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1441c:	str	r0, [fp, #-80]	; 0xffffffb0
   14420:	mov	r0, r2
   14424:	bl	10ddc <fputs_unlocked@plt>
   14428:	ldr	r1, [fp, #12]
   1442c:	cmp	r1, #9
   14430:	str	r1, [fp, #-84]	; 0xffffffac
   14434:	bhi	14850 <__assert_fail@plt+0x3828>
   14438:	add	r0, pc, #8
   1443c:	ldr	r1, [fp, #-84]	; 0xffffffac
   14440:	ldr	r0, [r0, r1, lsl #2]
   14444:	mov	pc, r0
   14448:	andeq	r4, r1, r0, ror r4
   1444c:	andeq	r4, r1, r4, ror r4
   14450:	andeq	r4, r1, ip, lsr #9
   14454:	andeq	r4, r1, ip, ror #9
   14458:	andeq	r4, r1, r4, asr #10
   1445c:	andeq	r4, r1, r8, lsr #11
   14460:	andeq	r4, r1, r8, lsl r6
   14464:	muleq	r1, r4, r6
   14468:	andeq	r4, r1, ip, lsl r7
   1446c:			; <UNDEFINED> instruction: 0x000147b0
   14470:	b	148ec <__assert_fail@plt+0x38c4>
   14474:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14478:	movw	r1, #51328	; 0xc880
   1447c:	movt	r1, #1
   14480:	str	r0, [fp, #-88]	; 0xffffffa8
   14484:	mov	r0, r1
   14488:	bl	10f38 <gettext@plt>
   1448c:	ldr	r1, [fp, #8]
   14490:	ldr	r2, [r1]
   14494:	ldr	r1, [fp, #-88]	; 0xffffffa8
   14498:	str	r0, [fp, #-92]	; 0xffffffa4
   1449c:	mov	r0, r1
   144a0:	ldr	r1, [fp, #-92]	; 0xffffffa4
   144a4:	bl	10f68 <fprintf@plt>
   144a8:	b	148ec <__assert_fail@plt+0x38c4>
   144ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   144b0:	movw	r1, #51344	; 0xc890
   144b4:	movt	r1, #1
   144b8:	str	r0, [fp, #-96]	; 0xffffffa0
   144bc:	mov	r0, r1
   144c0:	bl	10f38 <gettext@plt>
   144c4:	ldr	r1, [fp, #8]
   144c8:	ldr	r2, [r1]
   144cc:	ldr	r1, [fp, #8]
   144d0:	ldr	r3, [r1, #4]
   144d4:	ldr	r1, [fp, #-96]	; 0xffffffa0
   144d8:	str	r0, [fp, #-100]	; 0xffffff9c
   144dc:	mov	r0, r1
   144e0:	ldr	r1, [fp, #-100]	; 0xffffff9c
   144e4:	bl	10f68 <fprintf@plt>
   144e8:	b	148ec <__assert_fail@plt+0x38c4>
   144ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   144f0:	movw	r1, #51367	; 0xc8a7
   144f4:	movt	r1, #1
   144f8:	str	r0, [fp, #-104]	; 0xffffff98
   144fc:	mov	r0, r1
   14500:	bl	10f38 <gettext@plt>
   14504:	ldr	r1, [fp, #8]
   14508:	ldr	r2, [r1]
   1450c:	ldr	r1, [fp, #8]
   14510:	ldr	r3, [r1, #4]
   14514:	ldr	r1, [fp, #8]
   14518:	ldr	r1, [r1, #8]
   1451c:	ldr	ip, [fp, #-104]	; 0xffffff98
   14520:	str	r0, [fp, #-108]	; 0xffffff94
   14524:	mov	r0, ip
   14528:	ldr	lr, [fp, #-108]	; 0xffffff94
   1452c:	str	r1, [sp, #112]	; 0x70
   14530:	mov	r1, lr
   14534:	ldr	r4, [sp, #112]	; 0x70
   14538:	str	r4, [sp]
   1453c:	bl	10f68 <fprintf@plt>
   14540:	b	148ec <__assert_fail@plt+0x38c4>
   14544:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14548:	movw	r1, #51395	; 0xc8c3
   1454c:	movt	r1, #1
   14550:	str	r0, [sp, #108]	; 0x6c
   14554:	mov	r0, r1
   14558:	bl	10f38 <gettext@plt>
   1455c:	ldr	r1, [fp, #8]
   14560:	ldr	r2, [r1]
   14564:	ldr	r1, [fp, #8]
   14568:	ldr	r3, [r1, #4]
   1456c:	ldr	r1, [fp, #8]
   14570:	ldr	r1, [r1, #8]
   14574:	ldr	ip, [fp, #8]
   14578:	ldr	ip, [ip, #12]
   1457c:	ldr	lr, [sp, #108]	; 0x6c
   14580:	str	r0, [sp, #104]	; 0x68
   14584:	mov	r0, lr
   14588:	ldr	r4, [sp, #104]	; 0x68
   1458c:	str	r1, [sp, #100]	; 0x64
   14590:	mov	r1, r4
   14594:	ldr	r5, [sp, #100]	; 0x64
   14598:	str	r5, [sp]
   1459c:	str	ip, [sp, #4]
   145a0:	bl	10f68 <fprintf@plt>
   145a4:	b	148ec <__assert_fail@plt+0x38c4>
   145a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   145ac:	movw	r1, #51427	; 0xc8e3
   145b0:	movt	r1, #1
   145b4:	str	r0, [sp, #96]	; 0x60
   145b8:	mov	r0, r1
   145bc:	bl	10f38 <gettext@plt>
   145c0:	ldr	r1, [fp, #8]
   145c4:	ldr	r2, [r1]
   145c8:	ldr	r1, [fp, #8]
   145cc:	ldr	r3, [r1, #4]
   145d0:	ldr	r1, [fp, #8]
   145d4:	ldr	r1, [r1, #8]
   145d8:	ldr	ip, [fp, #8]
   145dc:	ldr	ip, [ip, #12]
   145e0:	ldr	lr, [fp, #8]
   145e4:	ldr	lr, [lr, #16]
   145e8:	ldr	r4, [sp, #96]	; 0x60
   145ec:	str	r0, [sp, #92]	; 0x5c
   145f0:	mov	r0, r4
   145f4:	ldr	r5, [sp, #92]	; 0x5c
   145f8:	str	r1, [sp, #88]	; 0x58
   145fc:	mov	r1, r5
   14600:	ldr	r6, [sp, #88]	; 0x58
   14604:	str	r6, [sp]
   14608:	str	ip, [sp, #4]
   1460c:	str	lr, [sp, #8]
   14610:	bl	10f68 <fprintf@plt>
   14614:	b	148ec <__assert_fail@plt+0x38c4>
   14618:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1461c:	movw	r1, #51463	; 0xc907
   14620:	movt	r1, #1
   14624:	str	r0, [sp, #84]	; 0x54
   14628:	mov	r0, r1
   1462c:	bl	10f38 <gettext@plt>
   14630:	ldr	r1, [fp, #8]
   14634:	ldr	r2, [r1]
   14638:	ldr	r1, [fp, #8]
   1463c:	ldr	r3, [r1, #4]
   14640:	ldr	r1, [fp, #8]
   14644:	ldr	r1, [r1, #8]
   14648:	ldr	ip, [fp, #8]
   1464c:	ldr	ip, [ip, #12]
   14650:	ldr	lr, [fp, #8]
   14654:	ldr	lr, [lr, #16]
   14658:	ldr	r4, [fp, #8]
   1465c:	ldr	r4, [r4, #20]
   14660:	ldr	r5, [sp, #84]	; 0x54
   14664:	str	r0, [sp, #80]	; 0x50
   14668:	mov	r0, r5
   1466c:	ldr	r6, [sp, #80]	; 0x50
   14670:	str	r1, [sp, #76]	; 0x4c
   14674:	mov	r1, r6
   14678:	ldr	r7, [sp, #76]	; 0x4c
   1467c:	str	r7, [sp]
   14680:	str	ip, [sp, #4]
   14684:	str	lr, [sp, #8]
   14688:	str	r4, [sp, #12]
   1468c:	bl	10f68 <fprintf@plt>
   14690:	b	148ec <__assert_fail@plt+0x38c4>
   14694:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14698:	movw	r1, #51503	; 0xc92f
   1469c:	movt	r1, #1
   146a0:	str	r0, [sp, #72]	; 0x48
   146a4:	mov	r0, r1
   146a8:	bl	10f38 <gettext@plt>
   146ac:	ldr	r1, [fp, #8]
   146b0:	ldr	r2, [r1]
   146b4:	ldr	r1, [fp, #8]
   146b8:	ldr	r3, [r1, #4]
   146bc:	ldr	r1, [fp, #8]
   146c0:	ldr	r1, [r1, #8]
   146c4:	ldr	ip, [fp, #8]
   146c8:	ldr	ip, [ip, #12]
   146cc:	ldr	lr, [fp, #8]
   146d0:	ldr	lr, [lr, #16]
   146d4:	ldr	r4, [fp, #8]
   146d8:	ldr	r4, [r4, #20]
   146dc:	ldr	r5, [fp, #8]
   146e0:	ldr	r5, [r5, #24]
   146e4:	ldr	r6, [sp, #72]	; 0x48
   146e8:	str	r0, [sp, #68]	; 0x44
   146ec:	mov	r0, r6
   146f0:	ldr	r7, [sp, #68]	; 0x44
   146f4:	str	r1, [sp, #64]	; 0x40
   146f8:	mov	r1, r7
   146fc:	ldr	r8, [sp, #64]	; 0x40
   14700:	str	r8, [sp]
   14704:	str	ip, [sp, #4]
   14708:	str	lr, [sp, #8]
   1470c:	str	r4, [sp, #12]
   14710:	str	r5, [sp, #16]
   14714:	bl	10f68 <fprintf@plt>
   14718:	b	148ec <__assert_fail@plt+0x38c4>
   1471c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14720:	movw	r1, #51547	; 0xc95b
   14724:	movt	r1, #1
   14728:	str	r0, [sp, #60]	; 0x3c
   1472c:	mov	r0, r1
   14730:	bl	10f38 <gettext@plt>
   14734:	ldr	r1, [fp, #8]
   14738:	ldr	r2, [r1]
   1473c:	ldr	r1, [fp, #8]
   14740:	ldr	r3, [r1, #4]
   14744:	ldr	r1, [fp, #8]
   14748:	ldr	r1, [r1, #8]
   1474c:	ldr	ip, [fp, #8]
   14750:	ldr	ip, [ip, #12]
   14754:	ldr	lr, [fp, #8]
   14758:	ldr	lr, [lr, #16]
   1475c:	ldr	r4, [fp, #8]
   14760:	ldr	r4, [r4, #20]
   14764:	ldr	r5, [fp, #8]
   14768:	ldr	r5, [r5, #24]
   1476c:	ldr	r6, [fp, #8]
   14770:	ldr	r6, [r6, #28]
   14774:	ldr	r7, [sp, #60]	; 0x3c
   14778:	str	r0, [sp, #56]	; 0x38
   1477c:	mov	r0, r7
   14780:	ldr	r8, [sp, #56]	; 0x38
   14784:	str	r1, [sp, #52]	; 0x34
   14788:	mov	r1, r8
   1478c:	ldr	r9, [sp, #52]	; 0x34
   14790:	str	r9, [sp]
   14794:	str	ip, [sp, #4]
   14798:	str	lr, [sp, #8]
   1479c:	str	r4, [sp, #12]
   147a0:	str	r5, [sp, #16]
   147a4:	str	r6, [sp, #20]
   147a8:	bl	10f68 <fprintf@plt>
   147ac:	b	148ec <__assert_fail@plt+0x38c4>
   147b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   147b4:	movw	r1, #51595	; 0xc98b
   147b8:	movt	r1, #1
   147bc:	str	r0, [sp, #48]	; 0x30
   147c0:	mov	r0, r1
   147c4:	bl	10f38 <gettext@plt>
   147c8:	ldr	r1, [fp, #8]
   147cc:	ldr	r2, [r1]
   147d0:	ldr	r1, [fp, #8]
   147d4:	ldr	r3, [r1, #4]
   147d8:	ldr	r1, [fp, #8]
   147dc:	ldr	r1, [r1, #8]
   147e0:	ldr	ip, [fp, #8]
   147e4:	ldr	ip, [ip, #12]
   147e8:	ldr	lr, [fp, #8]
   147ec:	ldr	lr, [lr, #16]
   147f0:	ldr	r4, [fp, #8]
   147f4:	ldr	r4, [r4, #20]
   147f8:	ldr	r5, [fp, #8]
   147fc:	ldr	r5, [r5, #24]
   14800:	ldr	r6, [fp, #8]
   14804:	ldr	r6, [r6, #28]
   14808:	ldr	r7, [fp, #8]
   1480c:	ldr	r7, [r7, #32]
   14810:	ldr	r8, [sp, #48]	; 0x30
   14814:	str	r0, [sp, #44]	; 0x2c
   14818:	mov	r0, r8
   1481c:	ldr	r9, [sp, #44]	; 0x2c
   14820:	str	r1, [sp, #40]	; 0x28
   14824:	mov	r1, r9
   14828:	ldr	sl, [sp, #40]	; 0x28
   1482c:	str	sl, [sp]
   14830:	str	ip, [sp, #4]
   14834:	str	lr, [sp, #8]
   14838:	str	r4, [sp, #12]
   1483c:	str	r5, [sp, #16]
   14840:	str	r6, [sp, #20]
   14844:	str	r7, [sp, #24]
   14848:	bl	10f68 <fprintf@plt>
   1484c:	b	148ec <__assert_fail@plt+0x38c4>
   14850:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14854:	movw	r1, #51647	; 0xc9bf
   14858:	movt	r1, #1
   1485c:	str	r0, [sp, #36]	; 0x24
   14860:	mov	r0, r1
   14864:	bl	10f38 <gettext@plt>
   14868:	ldr	r1, [fp, #8]
   1486c:	ldr	r2, [r1]
   14870:	ldr	r1, [fp, #8]
   14874:	ldr	r3, [r1, #4]
   14878:	ldr	r1, [fp, #8]
   1487c:	ldr	r1, [r1, #8]
   14880:	ldr	ip, [fp, #8]
   14884:	ldr	ip, [ip, #12]
   14888:	ldr	lr, [fp, #8]
   1488c:	ldr	lr, [lr, #16]
   14890:	ldr	r4, [fp, #8]
   14894:	ldr	r4, [r4, #20]
   14898:	ldr	r5, [fp, #8]
   1489c:	ldr	r5, [r5, #24]
   148a0:	ldr	r6, [fp, #8]
   148a4:	ldr	r6, [r6, #28]
   148a8:	ldr	r7, [fp, #8]
   148ac:	ldr	r7, [r7, #32]
   148b0:	ldr	r8, [sp, #36]	; 0x24
   148b4:	str	r0, [sp, #32]
   148b8:	mov	r0, r8
   148bc:	ldr	r9, [sp, #32]
   148c0:	str	r1, [sp, #28]
   148c4:	mov	r1, r9
   148c8:	ldr	sl, [sp, #28]
   148cc:	str	sl, [sp]
   148d0:	str	ip, [sp, #4]
   148d4:	str	lr, [sp, #8]
   148d8:	str	r4, [sp, #12]
   148dc:	str	r5, [sp, #16]
   148e0:	str	r6, [sp, #20]
   148e4:	str	r7, [sp, #24]
   148e8:	bl	10f68 <fprintf@plt>
   148ec:	sub	sp, fp, #28
   148f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148f4:	push	{fp, lr}
   148f8:	mov	fp, sp
   148fc:	sub	sp, sp, #32
   14900:	ldr	ip, [fp, #8]
   14904:	str	r0, [fp, #-4]
   14908:	str	r1, [fp, #-8]
   1490c:	str	r2, [fp, #-12]
   14910:	str	r3, [sp, #16]
   14914:	movw	r0, #0
   14918:	str	r0, [sp, #12]
   1491c:	ldr	r0, [fp, #8]
   14920:	ldr	r1, [sp, #12]
   14924:	add	r0, r0, r1, lsl #2
   14928:	ldr	r0, [r0]
   1492c:	movw	r1, #0
   14930:	cmp	r0, r1
   14934:	beq	1494c <__assert_fail@plt+0x3924>
   14938:	b	1493c <__assert_fail@plt+0x3914>
   1493c:	ldr	r0, [sp, #12]
   14940:	add	r0, r0, #1
   14944:	str	r0, [sp, #12]
   14948:	b	1491c <__assert_fail@plt+0x38f4>
   1494c:	ldr	r0, [fp, #-4]
   14950:	ldr	r1, [fp, #-8]
   14954:	ldr	r2, [fp, #-12]
   14958:	ldr	r3, [sp, #16]
   1495c:	ldr	ip, [fp, #8]
   14960:	ldr	lr, [sp, #12]
   14964:	str	ip, [sp]
   14968:	str	lr, [sp, #4]
   1496c:	bl	1430c <__assert_fail@plt+0x32e4>
   14970:	mov	sp, fp
   14974:	pop	{fp, pc}
   14978:	push	{fp, lr}
   1497c:	mov	fp, sp
   14980:	sub	sp, sp, #80	; 0x50
   14984:	ldr	ip, [fp, #8]
   14988:	str	ip, [fp, #-4]
   1498c:	str	r0, [fp, #-8]
   14990:	str	r1, [fp, #-12]
   14994:	str	r2, [fp, #-16]
   14998:	str	r3, [fp, #-20]	; 0xffffffec
   1499c:	movw	r0, #0
   149a0:	str	r0, [fp, #-24]	; 0xffffffe8
   149a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   149a8:	cmp	r0, #10
   149ac:	movw	r0, #0
   149b0:	str	r0, [sp, #12]
   149b4:	bcs	149ec <__assert_fail@plt+0x39c4>
   149b8:	ldr	r0, [fp, #-4]
   149bc:	add	r1, r0, #4
   149c0:	str	r1, [fp, #-4]
   149c4:	ldr	r0, [r0]
   149c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   149cc:	add	r2, sp, #16
   149d0:	add	r1, r2, r1, lsl #2
   149d4:	str	r0, [r1]
   149d8:	movw	r1, #0
   149dc:	cmp	r0, r1
   149e0:	movw	r0, #0
   149e4:	movne	r0, #1
   149e8:	str	r0, [sp, #12]
   149ec:	ldr	r0, [sp, #12]
   149f0:	tst	r0, #1
   149f4:	beq	14a0c <__assert_fail@plt+0x39e4>
   149f8:	b	149fc <__assert_fail@plt+0x39d4>
   149fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14a00:	add	r0, r0, #1
   14a04:	str	r0, [fp, #-24]	; 0xffffffe8
   14a08:	b	149a4 <__assert_fail@plt+0x397c>
   14a0c:	add	r0, sp, #16
   14a10:	ldr	r1, [fp, #-8]
   14a14:	ldr	r2, [fp, #-12]
   14a18:	ldr	r3, [fp, #-16]
   14a1c:	ldr	ip, [fp, #-20]	; 0xffffffec
   14a20:	ldr	lr, [fp, #-24]	; 0xffffffe8
   14a24:	str	r0, [sp, #8]
   14a28:	mov	r0, r1
   14a2c:	mov	r1, r2
   14a30:	mov	r2, r3
   14a34:	mov	r3, ip
   14a38:	ldr	ip, [sp, #8]
   14a3c:	str	ip, [sp]
   14a40:	str	lr, [sp, #4]
   14a44:	bl	1430c <__assert_fail@plt+0x32e4>
   14a48:	mov	sp, fp
   14a4c:	pop	{fp, pc}
   14a50:	push	{fp, lr}
   14a54:	mov	fp, sp
   14a58:	sub	sp, sp, #24
   14a5c:	str	r0, [fp, #-4]
   14a60:	str	r1, [fp, #-8]
   14a64:	str	r2, [sp, #12]
   14a68:	str	r3, [sp, #8]
   14a6c:	add	r0, fp, #8
   14a70:	str	r0, [sp, #4]
   14a74:	ldr	r0, [fp, #-4]
   14a78:	ldr	r1, [fp, #-8]
   14a7c:	ldr	r2, [sp, #12]
   14a80:	ldr	r3, [sp, #8]
   14a84:	ldr	ip, [sp, #4]
   14a88:	mov	lr, sp
   14a8c:	str	ip, [lr]
   14a90:	bl	14978 <__assert_fail@plt+0x3950>
   14a94:	add	r0, sp, #4
   14a98:	mov	sp, fp
   14a9c:	pop	{fp, pc}
   14aa0:	push	{fp, lr}
   14aa4:	mov	fp, sp
   14aa8:	sub	sp, sp, #16
   14aac:	movw	r0, #53572	; 0xd144
   14ab0:	movt	r0, #2
   14ab4:	ldr	r1, [r0]
   14ab8:	movw	r0, #49980	; 0xc33c
   14abc:	movt	r0, #1
   14ac0:	bl	10ddc <fputs_unlocked@plt>
   14ac4:	movw	r1, #51707	; 0xc9fb
   14ac8:	movt	r1, #1
   14acc:	str	r0, [fp, #-4]
   14ad0:	mov	r0, r1
   14ad4:	bl	10f38 <gettext@plt>
   14ad8:	movw	r1, #51727	; 0xca0f
   14adc:	movt	r1, #1
   14ae0:	bl	10e00 <printf@plt>
   14ae4:	movw	r1, #51749	; 0xca25
   14ae8:	movt	r1, #1
   14aec:	str	r0, [sp, #8]
   14af0:	mov	r0, r1
   14af4:	bl	10f38 <gettext@plt>
   14af8:	movw	r1, #50228	; 0xc434
   14afc:	movt	r1, #1
   14b00:	movw	r2, #50415	; 0xc4ef
   14b04:	movt	r2, #1
   14b08:	bl	10e00 <printf@plt>
   14b0c:	movw	r1, #51769	; 0xca39
   14b10:	movt	r1, #1
   14b14:	str	r0, [sp, #4]
   14b18:	mov	r0, r1
   14b1c:	bl	10f38 <gettext@plt>
   14b20:	movw	r1, #51808	; 0xca60
   14b24:	movt	r1, #1
   14b28:	bl	10e00 <printf@plt>
   14b2c:	mov	sp, fp
   14b30:	pop	{fp, pc}
   14b34:	push	{fp, lr}
   14b38:	mov	fp, sp
   14b3c:	sub	sp, sp, #16
   14b40:	str	r0, [fp, #-4]
   14b44:	str	r1, [sp, #8]
   14b48:	str	r2, [sp, #4]
   14b4c:	ldr	r0, [fp, #-4]
   14b50:	ldr	r1, [sp, #8]
   14b54:	ldr	r2, [sp, #4]
   14b58:	bl	14b64 <__assert_fail@plt+0x3b3c>
   14b5c:	mov	sp, fp
   14b60:	pop	{fp, pc}
   14b64:	push	{fp, lr}
   14b68:	mov	fp, sp
   14b6c:	sub	sp, sp, #16
   14b70:	str	r0, [fp, #-4]
   14b74:	str	r1, [sp, #8]
   14b78:	str	r2, [sp, #4]
   14b7c:	ldr	r0, [fp, #-4]
   14b80:	ldr	r1, [sp, #8]
   14b84:	ldr	r2, [sp, #4]
   14b88:	bl	1aa78 <__assert_fail@plt+0x9a50>
   14b8c:	str	r0, [sp]
   14b90:	ldr	r0, [sp]
   14b94:	movw	r1, #0
   14b98:	cmp	r0, r1
   14b9c:	bne	14bcc <__assert_fail@plt+0x3ba4>
   14ba0:	ldr	r0, [fp, #-4]
   14ba4:	movw	r1, #0
   14ba8:	cmp	r0, r1
   14bac:	beq	14bc8 <__assert_fail@plt+0x3ba0>
   14bb0:	ldr	r0, [sp, #8]
   14bb4:	cmp	r0, #0
   14bb8:	beq	14bcc <__assert_fail@plt+0x3ba4>
   14bbc:	ldr	r0, [sp, #4]
   14bc0:	cmp	r0, #0
   14bc4:	beq	14bcc <__assert_fail@plt+0x3ba4>
   14bc8:	bl	17910 <__assert_fail@plt+0x68e8>
   14bcc:	ldr	r0, [sp]
   14bd0:	mov	sp, fp
   14bd4:	pop	{fp, pc}
   14bd8:	push	{fp, lr}
   14bdc:	mov	fp, sp
   14be0:	sub	sp, sp, #8
   14be4:	str	r0, [sp, #4]
   14be8:	ldr	r0, [sp, #4]
   14bec:	bl	19bdc <__assert_fail@plt+0x8bb4>
   14bf0:	bl	14bfc <__assert_fail@plt+0x3bd4>
   14bf4:	mov	sp, fp
   14bf8:	pop	{fp, pc}
   14bfc:	push	{fp, lr}
   14c00:	mov	fp, sp
   14c04:	sub	sp, sp, #8
   14c08:	str	r0, [sp, #4]
   14c0c:	ldr	r0, [sp, #4]
   14c10:	movw	r1, #0
   14c14:	cmp	r0, r1
   14c18:	bne	14c20 <__assert_fail@plt+0x3bf8>
   14c1c:	bl	17910 <__assert_fail@plt+0x68e8>
   14c20:	ldr	r0, [sp, #4]
   14c24:	mov	sp, fp
   14c28:	pop	{fp, pc}
   14c2c:	push	{fp, lr}
   14c30:	mov	fp, sp
   14c34:	sub	sp, sp, #8
   14c38:	str	r0, [sp, #4]
   14c3c:	ldr	r0, [sp, #4]
   14c40:	bl	1a7b4 <__assert_fail@plt+0x978c>
   14c44:	bl	14bfc <__assert_fail@plt+0x3bd4>
   14c48:	mov	sp, fp
   14c4c:	pop	{fp, pc}
   14c50:	push	{fp, lr}
   14c54:	mov	fp, sp
   14c58:	sub	sp, sp, #8
   14c5c:	str	r0, [sp, #4]
   14c60:	ldr	r0, [sp, #4]
   14c64:	bl	14bd8 <__assert_fail@plt+0x3bb0>
   14c68:	mov	sp, fp
   14c6c:	pop	{fp, pc}
   14c70:	push	{fp, lr}
   14c74:	mov	fp, sp
   14c78:	sub	sp, sp, #16
   14c7c:	str	r0, [fp, #-4]
   14c80:	str	r1, [sp, #8]
   14c84:	ldr	r0, [fp, #-4]
   14c88:	ldr	r1, [sp, #8]
   14c8c:	bl	19c4c <__assert_fail@plt+0x8c24>
   14c90:	str	r0, [sp, #4]
   14c94:	ldr	r0, [sp, #4]
   14c98:	movw	r1, #0
   14c9c:	cmp	r0, r1
   14ca0:	bne	14cc4 <__assert_fail@plt+0x3c9c>
   14ca4:	ldr	r0, [fp, #-4]
   14ca8:	movw	r1, #0
   14cac:	cmp	r0, r1
   14cb0:	beq	14cc0 <__assert_fail@plt+0x3c98>
   14cb4:	ldr	r0, [sp, #8]
   14cb8:	cmp	r0, #0
   14cbc:	beq	14cc4 <__assert_fail@plt+0x3c9c>
   14cc0:	bl	17910 <__assert_fail@plt+0x68e8>
   14cc4:	ldr	r0, [sp, #4]
   14cc8:	mov	sp, fp
   14ccc:	pop	{fp, pc}
   14cd0:	push	{fp, lr}
   14cd4:	mov	fp, sp
   14cd8:	sub	sp, sp, #8
   14cdc:	str	r0, [sp, #4]
   14ce0:	str	r1, [sp]
   14ce4:	ldr	r0, [sp, #4]
   14ce8:	ldr	r1, [sp]
   14cec:	bl	1a7f4 <__assert_fail@plt+0x97cc>
   14cf0:	bl	14bfc <__assert_fail@plt+0x3bd4>
   14cf4:	mov	sp, fp
   14cf8:	pop	{fp, pc}
   14cfc:	push	{fp, lr}
   14d00:	mov	fp, sp
   14d04:	sub	sp, sp, #16
   14d08:	str	r0, [fp, #-4]
   14d0c:	str	r1, [sp, #8]
   14d10:	str	r2, [sp, #4]
   14d14:	ldr	r0, [fp, #-4]
   14d18:	ldr	r1, [sp, #8]
   14d1c:	ldr	r2, [sp, #4]
   14d20:	bl	1a8ec <__assert_fail@plt+0x98c4>
   14d24:	bl	14bfc <__assert_fail@plt+0x3bd4>
   14d28:	mov	sp, fp
   14d2c:	pop	{fp, pc}
   14d30:	push	{fp, lr}
   14d34:	mov	fp, sp
   14d38:	sub	sp, sp, #8
   14d3c:	str	r0, [sp, #4]
   14d40:	str	r1, [sp]
   14d44:	ldr	r1, [sp, #4]
   14d48:	ldr	r2, [sp]
   14d4c:	movw	r0, #0
   14d50:	bl	14b64 <__assert_fail@plt+0x3b3c>
   14d54:	mov	sp, fp
   14d58:	pop	{fp, pc}
   14d5c:	push	{fp, lr}
   14d60:	mov	fp, sp
   14d64:	sub	sp, sp, #8
   14d68:	str	r0, [sp, #4]
   14d6c:	str	r1, [sp]
   14d70:	ldr	r1, [sp, #4]
   14d74:	ldr	r2, [sp]
   14d78:	movw	r0, #0
   14d7c:	bl	14cfc <__assert_fail@plt+0x3cd4>
   14d80:	mov	sp, fp
   14d84:	pop	{fp, pc}
   14d88:	push	{fp, lr}
   14d8c:	mov	fp, sp
   14d90:	sub	sp, sp, #8
   14d94:	str	r0, [sp, #4]
   14d98:	str	r1, [sp]
   14d9c:	ldr	r0, [sp, #4]
   14da0:	ldr	r1, [sp]
   14da4:	movw	r2, #1
   14da8:	bl	14db4 <__assert_fail@plt+0x3d8c>
   14dac:	mov	sp, fp
   14db0:	pop	{fp, pc}
   14db4:	push	{fp, lr}
   14db8:	mov	fp, sp
   14dbc:	sub	sp, sp, #16
   14dc0:	str	r0, [fp, #-4]
   14dc4:	str	r1, [sp, #8]
   14dc8:	str	r2, [sp, #4]
   14dcc:	ldr	r0, [sp, #8]
   14dd0:	ldr	r0, [r0]
   14dd4:	str	r0, [sp]
   14dd8:	ldr	r0, [fp, #-4]
   14ddc:	movw	r1, #0
   14de0:	cmp	r0, r1
   14de4:	bne	14e30 <__assert_fail@plt+0x3e08>
   14de8:	ldr	r0, [sp]
   14dec:	cmp	r0, #0
   14df0:	bne	14e2c <__assert_fail@plt+0x3e04>
   14df4:	ldr	r0, [sp, #4]
   14df8:	movw	r1, #64	; 0x40
   14dfc:	udiv	r0, r1, r0
   14e00:	str	r0, [sp]
   14e04:	ldr	r0, [sp]
   14e08:	cmp	r0, #0
   14e0c:	movw	r0, #0
   14e10:	movne	r0, #1
   14e14:	mvn	r1, #0
   14e18:	eor	r0, r0, r1
   14e1c:	and	r0, r0, #1
   14e20:	ldr	r1, [sp]
   14e24:	add	r0, r1, r0
   14e28:	str	r0, [sp]
   14e2c:	b	14e60 <__assert_fail@plt+0x3e38>
   14e30:	ldr	r0, [sp]
   14e34:	ldr	r1, [sp]
   14e38:	lsr	r1, r1, #1
   14e3c:	add	r1, r1, #1
   14e40:	adds	r0, r0, r1
   14e44:	mov	r1, #0
   14e48:	adc	r1, r1, #0
   14e4c:	str	r0, [sp]
   14e50:	tst	r1, #1
   14e54:	beq	14e5c <__assert_fail@plt+0x3e34>
   14e58:	bl	17910 <__assert_fail@plt+0x68e8>
   14e5c:	b	14e60 <__assert_fail@plt+0x3e38>
   14e60:	ldr	r0, [fp, #-4]
   14e64:	ldr	r1, [sp]
   14e68:	ldr	r2, [sp, #4]
   14e6c:	bl	14b64 <__assert_fail@plt+0x3b3c>
   14e70:	str	r0, [fp, #-4]
   14e74:	ldr	r0, [sp]
   14e78:	ldr	r1, [sp, #8]
   14e7c:	str	r0, [r1]
   14e80:	ldr	r0, [fp, #-4]
   14e84:	mov	sp, fp
   14e88:	pop	{fp, pc}
   14e8c:	push	{fp, lr}
   14e90:	mov	fp, sp
   14e94:	sub	sp, sp, #216	; 0xd8
   14e98:	ldr	ip, [fp, #8]
   14e9c:	str	r0, [fp, #-4]
   14ea0:	str	r1, [fp, #-8]
   14ea4:	str	r2, [fp, #-12]
   14ea8:	str	r3, [fp, #-16]
   14eac:	ldr	r0, [fp, #-8]
   14eb0:	ldr	r0, [r0]
   14eb4:	str	r0, [fp, #-20]	; 0xffffffec
   14eb8:	ldr	r0, [fp, #-20]	; 0xffffffec
   14ebc:	ldr	r1, [fp, #-20]	; 0xffffffec
   14ec0:	asr	r1, r1, #1
   14ec4:	add	r1, r0, r1
   14ec8:	mov	r2, #1
   14ecc:	cmp	r1, r0
   14ed0:	movwvc	r2, #0
   14ed4:	str	r1, [fp, #-24]	; 0xffffffe8
   14ed8:	tst	r2, #1
   14edc:	beq	14ee8 <__assert_fail@plt+0x3ec0>
   14ee0:	ldr	r0, [pc, #4036]	; 15eac <__assert_fail@plt+0x4e84>
   14ee4:	str	r0, [fp, #-24]	; 0xffffffe8
   14ee8:	ldr	r0, [fp, #-16]
   14eec:	movw	r1, #0
   14ef0:	cmp	r1, r0
   14ef4:	bgt	14f10 <__assert_fail@plt+0x3ee8>
   14ef8:	ldr	r0, [fp, #-16]
   14efc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14f00:	cmp	r0, r1
   14f04:	bge	14f10 <__assert_fail@plt+0x3ee8>
   14f08:	ldr	r0, [fp, #-16]
   14f0c:	str	r0, [fp, #-24]	; 0xffffffe8
   14f10:	b	152e8 <__assert_fail@plt+0x42c0>
   14f14:	b	14f18 <__assert_fail@plt+0x3ef0>
   14f18:	ldr	r0, [fp, #8]
   14f1c:	cmp	r0, #0
   14f20:	bge	15034 <__assert_fail@plt+0x400c>
   14f24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14f28:	cmp	r0, #0
   14f2c:	bge	14fb8 <__assert_fail@plt+0x3f90>
   14f30:	b	14f34 <__assert_fail@plt+0x3f0c>
   14f34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14f38:	ldr	r1, [fp, #8]
   14f3c:	movw	r2, #127	; 0x7f
   14f40:	sdiv	r1, r2, r1
   14f44:	cmp	r0, r1
   14f48:	blt	150d4 <__assert_fail@plt+0x40ac>
   14f4c:	b	150ec <__assert_fail@plt+0x40c4>
   14f50:	b	14f54 <__assert_fail@plt+0x3f2c>
   14f54:	ldr	r0, [pc, #4084]	; 15f50 <__assert_fail@plt+0x4f28>
   14f58:	ldr	r1, [fp, #8]
   14f5c:	cmp	r1, r0
   14f60:	blt	14f78 <__assert_fail@plt+0x3f50>
   14f64:	b	14f84 <__assert_fail@plt+0x3f5c>
   14f68:	ldr	r0, [fp, #8]
   14f6c:	movw	r1, #0
   14f70:	cmp	r1, r0
   14f74:	bge	14f84 <__assert_fail@plt+0x3f5c>
   14f78:	movw	r0, #0
   14f7c:	str	r0, [fp, #-36]	; 0xffffffdc
   14f80:	b	14f9c <__assert_fail@plt+0x3f74>
   14f84:	ldr	r0, [fp, #8]
   14f88:	movw	r1, #0
   14f8c:	sub	r0, r1, r0
   14f90:	movw	r1, #127	; 0x7f
   14f94:	sdiv	r0, r1, r0
   14f98:	str	r0, [fp, #-36]	; 0xffffffdc
   14f9c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14fa0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14fa4:	mvn	r2, #0
   14fa8:	sub	r1, r2, r1
   14fac:	cmp	r0, r1
   14fb0:	ble	150d4 <__assert_fail@plt+0x40ac>
   14fb4:	b	150ec <__assert_fail@plt+0x40c4>
   14fb8:	b	14fbc <__assert_fail@plt+0x3f94>
   14fbc:	b	15018 <__assert_fail@plt+0x3ff0>
   14fc0:	b	15018 <__assert_fail@plt+0x3ff0>
   14fc4:	ldr	r0, [fp, #8]
   14fc8:	cmn	r0, #1
   14fcc:	bne	15018 <__assert_fail@plt+0x3ff0>
   14fd0:	b	14fd4 <__assert_fail@plt+0x3fac>
   14fd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14fd8:	mvn	r1, #127	; 0x7f
   14fdc:	add	r0, r0, r1
   14fe0:	movw	r1, #0
   14fe4:	cmp	r1, r0
   14fe8:	blt	150d4 <__assert_fail@plt+0x40ac>
   14fec:	b	150ec <__assert_fail@plt+0x40c4>
   14ff0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14ff4:	movw	r1, #0
   14ff8:	cmp	r1, r0
   14ffc:	bge	150ec <__assert_fail@plt+0x40c4>
   15000:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15004:	sub	r0, r0, #1
   15008:	movw	r1, #127	; 0x7f
   1500c:	cmp	r1, r0
   15010:	blt	150d4 <__assert_fail@plt+0x40ac>
   15014:	b	150ec <__assert_fail@plt+0x40c4>
   15018:	ldr	r0, [fp, #8]
   1501c:	mvn	r1, #127	; 0x7f
   15020:	sdiv	r0, r1, r0
   15024:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15028:	cmp	r0, r1
   1502c:	blt	150d4 <__assert_fail@plt+0x40ac>
   15030:	b	150ec <__assert_fail@plt+0x40c4>
   15034:	ldr	r0, [fp, #8]
   15038:	cmp	r0, #0
   1503c:	bne	15044 <__assert_fail@plt+0x401c>
   15040:	b	150ec <__assert_fail@plt+0x40c4>
   15044:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15048:	cmp	r0, #0
   1504c:	bge	150bc <__assert_fail@plt+0x4094>
   15050:	b	15054 <__assert_fail@plt+0x402c>
   15054:	b	150a0 <__assert_fail@plt+0x4078>
   15058:	b	150a0 <__assert_fail@plt+0x4078>
   1505c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15060:	cmn	r0, #1
   15064:	bne	150a0 <__assert_fail@plt+0x4078>
   15068:	b	1506c <__assert_fail@plt+0x4044>
   1506c:	ldr	r0, [fp, #8]
   15070:	mvn	r1, #127	; 0x7f
   15074:	add	r0, r0, r1
   15078:	movw	r1, #0
   1507c:	cmp	r1, r0
   15080:	blt	150d4 <__assert_fail@plt+0x40ac>
   15084:	b	150ec <__assert_fail@plt+0x40c4>
   15088:	ldr	r0, [fp, #8]
   1508c:	sub	r0, r0, #1
   15090:	movw	r1, #127	; 0x7f
   15094:	cmp	r1, r0
   15098:	blt	150d4 <__assert_fail@plt+0x40ac>
   1509c:	b	150ec <__assert_fail@plt+0x40c4>
   150a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   150a4:	mvn	r1, #127	; 0x7f
   150a8:	sdiv	r0, r1, r0
   150ac:	ldr	r1, [fp, #8]
   150b0:	cmp	r0, r1
   150b4:	blt	150d4 <__assert_fail@plt+0x40ac>
   150b8:	b	150ec <__assert_fail@plt+0x40c4>
   150bc:	ldr	r0, [fp, #8]
   150c0:	movw	r1, #127	; 0x7f
   150c4:	sdiv	r0, r1, r0
   150c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   150cc:	cmp	r0, r1
   150d0:	bge	150ec <__assert_fail@plt+0x40c4>
   150d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   150d8:	ldr	r1, [fp, #8]
   150dc:	mul	r0, r0, r1
   150e0:	sxtb	r0, r0
   150e4:	str	r0, [fp, #-28]	; 0xffffffe4
   150e8:	b	162b0 <__assert_fail@plt+0x5288>
   150ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   150f0:	ldr	r1, [fp, #8]
   150f4:	mul	r0, r0, r1
   150f8:	sxtb	r0, r0
   150fc:	str	r0, [fp, #-28]	; 0xffffffe4
   15100:	b	162bc <__assert_fail@plt+0x5294>
   15104:	ldr	r0, [fp, #8]
   15108:	cmp	r0, #0
   1510c:	bge	1521c <__assert_fail@plt+0x41f4>
   15110:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15114:	cmp	r0, #0
   15118:	bge	151a4 <__assert_fail@plt+0x417c>
   1511c:	b	15120 <__assert_fail@plt+0x40f8>
   15120:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15124:	ldr	r1, [fp, #8]
   15128:	movw	r2, #255	; 0xff
   1512c:	sdiv	r1, r2, r1
   15130:	cmp	r0, r1
   15134:	blt	152b8 <__assert_fail@plt+0x4290>
   15138:	b	152d0 <__assert_fail@plt+0x42a8>
   1513c:	b	15140 <__assert_fail@plt+0x4118>
   15140:	ldr	r0, [pc, #3592]	; 15f50 <__assert_fail@plt+0x4f28>
   15144:	ldr	r1, [fp, #8]
   15148:	cmp	r1, r0
   1514c:	blt	15164 <__assert_fail@plt+0x413c>
   15150:	b	15170 <__assert_fail@plt+0x4148>
   15154:	ldr	r0, [fp, #8]
   15158:	movw	r1, #0
   1515c:	cmp	r1, r0
   15160:	bge	15170 <__assert_fail@plt+0x4148>
   15164:	movw	r0, #0
   15168:	str	r0, [fp, #-40]	; 0xffffffd8
   1516c:	b	15188 <__assert_fail@plt+0x4160>
   15170:	ldr	r0, [fp, #8]
   15174:	movw	r1, #0
   15178:	sub	r0, r1, r0
   1517c:	movw	r1, #255	; 0xff
   15180:	sdiv	r0, r1, r0
   15184:	str	r0, [fp, #-40]	; 0xffffffd8
   15188:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1518c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15190:	mvn	r2, #0
   15194:	sub	r1, r2, r1
   15198:	cmp	r0, r1
   1519c:	ble	152b8 <__assert_fail@plt+0x4290>
   151a0:	b	152d0 <__assert_fail@plt+0x42a8>
   151a4:	b	151a8 <__assert_fail@plt+0x4180>
   151a8:	b	15200 <__assert_fail@plt+0x41d8>
   151ac:	b	15200 <__assert_fail@plt+0x41d8>
   151b0:	ldr	r0, [fp, #8]
   151b4:	cmn	r0, #1
   151b8:	bne	15200 <__assert_fail@plt+0x41d8>
   151bc:	b	151c0 <__assert_fail@plt+0x4198>
   151c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   151c4:	add	r0, r0, #0
   151c8:	movw	r1, #0
   151cc:	cmp	r1, r0
   151d0:	blt	152b8 <__assert_fail@plt+0x4290>
   151d4:	b	152d0 <__assert_fail@plt+0x42a8>
   151d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   151dc:	movw	r1, #0
   151e0:	cmp	r1, r0
   151e4:	bge	152d0 <__assert_fail@plt+0x42a8>
   151e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   151ec:	sub	r0, r0, #1
   151f0:	mvn	r1, #0
   151f4:	cmp	r1, r0
   151f8:	blt	152b8 <__assert_fail@plt+0x4290>
   151fc:	b	152d0 <__assert_fail@plt+0x42a8>
   15200:	ldr	r0, [fp, #8]
   15204:	movw	r1, #0
   15208:	sdiv	r0, r1, r0
   1520c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15210:	cmp	r0, r1
   15214:	blt	152b8 <__assert_fail@plt+0x4290>
   15218:	b	152d0 <__assert_fail@plt+0x42a8>
   1521c:	ldr	r0, [fp, #8]
   15220:	cmp	r0, #0
   15224:	bne	1522c <__assert_fail@plt+0x4204>
   15228:	b	152d0 <__assert_fail@plt+0x42a8>
   1522c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15230:	cmp	r0, #0
   15234:	bge	152a0 <__assert_fail@plt+0x4278>
   15238:	b	1523c <__assert_fail@plt+0x4214>
   1523c:	b	15284 <__assert_fail@plt+0x425c>
   15240:	b	15284 <__assert_fail@plt+0x425c>
   15244:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15248:	cmn	r0, #1
   1524c:	bne	15284 <__assert_fail@plt+0x425c>
   15250:	b	15254 <__assert_fail@plt+0x422c>
   15254:	ldr	r0, [fp, #8]
   15258:	add	r0, r0, #0
   1525c:	movw	r1, #0
   15260:	cmp	r1, r0
   15264:	blt	152b8 <__assert_fail@plt+0x4290>
   15268:	b	152d0 <__assert_fail@plt+0x42a8>
   1526c:	ldr	r0, [fp, #8]
   15270:	sub	r0, r0, #1
   15274:	mvn	r1, #0
   15278:	cmp	r1, r0
   1527c:	blt	152b8 <__assert_fail@plt+0x4290>
   15280:	b	152d0 <__assert_fail@plt+0x42a8>
   15284:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15288:	movw	r1, #0
   1528c:	sdiv	r0, r1, r0
   15290:	ldr	r1, [fp, #8]
   15294:	cmp	r0, r1
   15298:	blt	152b8 <__assert_fail@plt+0x4290>
   1529c:	b	152d0 <__assert_fail@plt+0x42a8>
   152a0:	ldr	r0, [fp, #8]
   152a4:	movw	r1, #255	; 0xff
   152a8:	sdiv	r0, r1, r0
   152ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   152b0:	cmp	r0, r1
   152b4:	bge	152d0 <__assert_fail@plt+0x42a8>
   152b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   152bc:	ldr	r1, [fp, #8]
   152c0:	mul	r0, r0, r1
   152c4:	and	r0, r0, #255	; 0xff
   152c8:	str	r0, [fp, #-28]	; 0xffffffe4
   152cc:	b	162b0 <__assert_fail@plt+0x5288>
   152d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   152d4:	ldr	r1, [fp, #8]
   152d8:	mul	r0, r0, r1
   152dc:	and	r0, r0, #255	; 0xff
   152e0:	str	r0, [fp, #-28]	; 0xffffffe4
   152e4:	b	162bc <__assert_fail@plt+0x5294>
   152e8:	b	156c0 <__assert_fail@plt+0x4698>
   152ec:	b	152f0 <__assert_fail@plt+0x42c8>
   152f0:	ldr	r0, [fp, #8]
   152f4:	cmp	r0, #0
   152f8:	bge	1540c <__assert_fail@plt+0x43e4>
   152fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15300:	cmp	r0, #0
   15304:	bge	15390 <__assert_fail@plt+0x4368>
   15308:	b	1530c <__assert_fail@plt+0x42e4>
   1530c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15310:	ldr	r1, [fp, #8]
   15314:	movw	r2, #32767	; 0x7fff
   15318:	sdiv	r1, r2, r1
   1531c:	cmp	r0, r1
   15320:	blt	154ac <__assert_fail@plt+0x4484>
   15324:	b	154c4 <__assert_fail@plt+0x449c>
   15328:	b	1532c <__assert_fail@plt+0x4304>
   1532c:	ldr	r0, [pc, #3100]	; 15f50 <__assert_fail@plt+0x4f28>
   15330:	ldr	r1, [fp, #8]
   15334:	cmp	r1, r0
   15338:	blt	15350 <__assert_fail@plt+0x4328>
   1533c:	b	1535c <__assert_fail@plt+0x4334>
   15340:	ldr	r0, [fp, #8]
   15344:	movw	r1, #0
   15348:	cmp	r1, r0
   1534c:	bge	1535c <__assert_fail@plt+0x4334>
   15350:	movw	r0, #0
   15354:	str	r0, [fp, #-44]	; 0xffffffd4
   15358:	b	15374 <__assert_fail@plt+0x434c>
   1535c:	ldr	r0, [fp, #8]
   15360:	movw	r1, #0
   15364:	sub	r0, r1, r0
   15368:	movw	r1, #32767	; 0x7fff
   1536c:	sdiv	r0, r1, r0
   15370:	str	r0, [fp, #-44]	; 0xffffffd4
   15374:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15378:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1537c:	mvn	r2, #0
   15380:	sub	r1, r2, r1
   15384:	cmp	r0, r1
   15388:	ble	154ac <__assert_fail@plt+0x4484>
   1538c:	b	154c4 <__assert_fail@plt+0x449c>
   15390:	b	15394 <__assert_fail@plt+0x436c>
   15394:	b	153f0 <__assert_fail@plt+0x43c8>
   15398:	b	153f0 <__assert_fail@plt+0x43c8>
   1539c:	ldr	r0, [fp, #8]
   153a0:	cmn	r0, #1
   153a4:	bne	153f0 <__assert_fail@plt+0x43c8>
   153a8:	b	153ac <__assert_fail@plt+0x4384>
   153ac:	ldr	r0, [pc, #4068]	; 16398 <__assert_fail@plt+0x5370>
   153b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   153b4:	add	r0, r1, r0
   153b8:	movw	r1, #0
   153bc:	cmp	r1, r0
   153c0:	blt	154ac <__assert_fail@plt+0x4484>
   153c4:	b	154c4 <__assert_fail@plt+0x449c>
   153c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   153cc:	movw	r1, #0
   153d0:	cmp	r1, r0
   153d4:	bge	154c4 <__assert_fail@plt+0x449c>
   153d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   153dc:	sub	r0, r0, #1
   153e0:	movw	r1, #32767	; 0x7fff
   153e4:	cmp	r1, r0
   153e8:	blt	154ac <__assert_fail@plt+0x4484>
   153ec:	b	154c4 <__assert_fail@plt+0x449c>
   153f0:	ldr	r0, [pc, #4000]	; 16398 <__assert_fail@plt+0x5370>
   153f4:	ldr	r1, [fp, #8]
   153f8:	sdiv	r0, r0, r1
   153fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15400:	cmp	r0, r1
   15404:	blt	154ac <__assert_fail@plt+0x4484>
   15408:	b	154c4 <__assert_fail@plt+0x449c>
   1540c:	ldr	r0, [fp, #8]
   15410:	cmp	r0, #0
   15414:	bne	1541c <__assert_fail@plt+0x43f4>
   15418:	b	154c4 <__assert_fail@plt+0x449c>
   1541c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15420:	cmp	r0, #0
   15424:	bge	15494 <__assert_fail@plt+0x446c>
   15428:	b	1542c <__assert_fail@plt+0x4404>
   1542c:	b	15478 <__assert_fail@plt+0x4450>
   15430:	b	15478 <__assert_fail@plt+0x4450>
   15434:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15438:	cmn	r0, #1
   1543c:	bne	15478 <__assert_fail@plt+0x4450>
   15440:	b	15444 <__assert_fail@plt+0x441c>
   15444:	ldr	r0, [pc, #3916]	; 16398 <__assert_fail@plt+0x5370>
   15448:	ldr	r1, [fp, #8]
   1544c:	add	r0, r1, r0
   15450:	movw	r1, #0
   15454:	cmp	r1, r0
   15458:	blt	154ac <__assert_fail@plt+0x4484>
   1545c:	b	154c4 <__assert_fail@plt+0x449c>
   15460:	ldr	r0, [fp, #8]
   15464:	sub	r0, r0, #1
   15468:	movw	r1, #32767	; 0x7fff
   1546c:	cmp	r1, r0
   15470:	blt	154ac <__assert_fail@plt+0x4484>
   15474:	b	154c4 <__assert_fail@plt+0x449c>
   15478:	ldr	r0, [pc, #3864]	; 16398 <__assert_fail@plt+0x5370>
   1547c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15480:	sdiv	r0, r0, r1
   15484:	ldr	r1, [fp, #8]
   15488:	cmp	r0, r1
   1548c:	blt	154ac <__assert_fail@plt+0x4484>
   15490:	b	154c4 <__assert_fail@plt+0x449c>
   15494:	ldr	r0, [fp, #8]
   15498:	movw	r1, #32767	; 0x7fff
   1549c:	sdiv	r0, r1, r0
   154a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   154a4:	cmp	r0, r1
   154a8:	bge	154c4 <__assert_fail@plt+0x449c>
   154ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154b0:	ldr	r1, [fp, #8]
   154b4:	mul	r0, r0, r1
   154b8:	sxth	r0, r0
   154bc:	str	r0, [fp, #-28]	; 0xffffffe4
   154c0:	b	162b0 <__assert_fail@plt+0x5288>
   154c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154c8:	ldr	r1, [fp, #8]
   154cc:	mul	r0, r0, r1
   154d0:	sxth	r0, r0
   154d4:	str	r0, [fp, #-28]	; 0xffffffe4
   154d8:	b	162bc <__assert_fail@plt+0x5294>
   154dc:	ldr	r0, [fp, #8]
   154e0:	cmp	r0, #0
   154e4:	bge	155f4 <__assert_fail@plt+0x45cc>
   154e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154ec:	cmp	r0, #0
   154f0:	bge	1557c <__assert_fail@plt+0x4554>
   154f4:	b	154f8 <__assert_fail@plt+0x44d0>
   154f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154fc:	ldr	r1, [fp, #8]
   15500:	movw	r2, #65535	; 0xffff
   15504:	sdiv	r1, r2, r1
   15508:	cmp	r0, r1
   1550c:	blt	15690 <__assert_fail@plt+0x4668>
   15510:	b	156a8 <__assert_fail@plt+0x4680>
   15514:	b	15518 <__assert_fail@plt+0x44f0>
   15518:	ldr	r0, [pc, #2608]	; 15f50 <__assert_fail@plt+0x4f28>
   1551c:	ldr	r1, [fp, #8]
   15520:	cmp	r1, r0
   15524:	blt	1553c <__assert_fail@plt+0x4514>
   15528:	b	15548 <__assert_fail@plt+0x4520>
   1552c:	ldr	r0, [fp, #8]
   15530:	movw	r1, #0
   15534:	cmp	r1, r0
   15538:	bge	15548 <__assert_fail@plt+0x4520>
   1553c:	movw	r0, #0
   15540:	str	r0, [fp, #-48]	; 0xffffffd0
   15544:	b	15560 <__assert_fail@plt+0x4538>
   15548:	ldr	r0, [fp, #8]
   1554c:	movw	r1, #0
   15550:	sub	r0, r1, r0
   15554:	movw	r1, #65535	; 0xffff
   15558:	sdiv	r0, r1, r0
   1555c:	str	r0, [fp, #-48]	; 0xffffffd0
   15560:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15564:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15568:	mvn	r2, #0
   1556c:	sub	r1, r2, r1
   15570:	cmp	r0, r1
   15574:	ble	15690 <__assert_fail@plt+0x4668>
   15578:	b	156a8 <__assert_fail@plt+0x4680>
   1557c:	b	15580 <__assert_fail@plt+0x4558>
   15580:	b	155d8 <__assert_fail@plt+0x45b0>
   15584:	b	155d8 <__assert_fail@plt+0x45b0>
   15588:	ldr	r0, [fp, #8]
   1558c:	cmn	r0, #1
   15590:	bne	155d8 <__assert_fail@plt+0x45b0>
   15594:	b	15598 <__assert_fail@plt+0x4570>
   15598:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1559c:	add	r0, r0, #0
   155a0:	movw	r1, #0
   155a4:	cmp	r1, r0
   155a8:	blt	15690 <__assert_fail@plt+0x4668>
   155ac:	b	156a8 <__assert_fail@plt+0x4680>
   155b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   155b4:	movw	r1, #0
   155b8:	cmp	r1, r0
   155bc:	bge	156a8 <__assert_fail@plt+0x4680>
   155c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   155c4:	sub	r0, r0, #1
   155c8:	mvn	r1, #0
   155cc:	cmp	r1, r0
   155d0:	blt	15690 <__assert_fail@plt+0x4668>
   155d4:	b	156a8 <__assert_fail@plt+0x4680>
   155d8:	ldr	r0, [fp, #8]
   155dc:	movw	r1, #0
   155e0:	sdiv	r0, r1, r0
   155e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   155e8:	cmp	r0, r1
   155ec:	blt	15690 <__assert_fail@plt+0x4668>
   155f0:	b	156a8 <__assert_fail@plt+0x4680>
   155f4:	ldr	r0, [fp, #8]
   155f8:	cmp	r0, #0
   155fc:	bne	15604 <__assert_fail@plt+0x45dc>
   15600:	b	156a8 <__assert_fail@plt+0x4680>
   15604:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15608:	cmp	r0, #0
   1560c:	bge	15678 <__assert_fail@plt+0x4650>
   15610:	b	15614 <__assert_fail@plt+0x45ec>
   15614:	b	1565c <__assert_fail@plt+0x4634>
   15618:	b	1565c <__assert_fail@plt+0x4634>
   1561c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15620:	cmn	r0, #1
   15624:	bne	1565c <__assert_fail@plt+0x4634>
   15628:	b	1562c <__assert_fail@plt+0x4604>
   1562c:	ldr	r0, [fp, #8]
   15630:	add	r0, r0, #0
   15634:	movw	r1, #0
   15638:	cmp	r1, r0
   1563c:	blt	15690 <__assert_fail@plt+0x4668>
   15640:	b	156a8 <__assert_fail@plt+0x4680>
   15644:	ldr	r0, [fp, #8]
   15648:	sub	r0, r0, #1
   1564c:	mvn	r1, #0
   15650:	cmp	r1, r0
   15654:	blt	15690 <__assert_fail@plt+0x4668>
   15658:	b	156a8 <__assert_fail@plt+0x4680>
   1565c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15660:	movw	r1, #0
   15664:	sdiv	r0, r1, r0
   15668:	ldr	r1, [fp, #8]
   1566c:	cmp	r0, r1
   15670:	blt	15690 <__assert_fail@plt+0x4668>
   15674:	b	156a8 <__assert_fail@plt+0x4680>
   15678:	ldr	r0, [fp, #8]
   1567c:	movw	r1, #65535	; 0xffff
   15680:	sdiv	r0, r1, r0
   15684:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15688:	cmp	r0, r1
   1568c:	bge	156a8 <__assert_fail@plt+0x4680>
   15690:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15694:	ldr	r1, [fp, #8]
   15698:	mul	r0, r0, r1
   1569c:	uxth	r0, r0
   156a0:	str	r0, [fp, #-28]	; 0xffffffe4
   156a4:	b	162b0 <__assert_fail@plt+0x5288>
   156a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   156ac:	ldr	r1, [fp, #8]
   156b0:	mul	r0, r0, r1
   156b4:	uxth	r0, r0
   156b8:	str	r0, [fp, #-28]	; 0xffffffe4
   156bc:	b	162bc <__assert_fail@plt+0x5294>
   156c0:	b	156c4 <__assert_fail@plt+0x469c>
   156c4:	b	156c8 <__assert_fail@plt+0x46a0>
   156c8:	ldr	r0, [fp, #8]
   156cc:	cmp	r0, #0
   156d0:	bge	157d4 <__assert_fail@plt+0x47ac>
   156d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   156d8:	cmp	r0, #0
   156dc:	bge	15768 <__assert_fail@plt+0x4740>
   156e0:	b	156e4 <__assert_fail@plt+0x46bc>
   156e4:	ldr	r0, [pc, #1984]	; 15eac <__assert_fail@plt+0x4e84>
   156e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   156ec:	ldr	r2, [fp, #8]
   156f0:	sdiv	r0, r0, r2
   156f4:	cmp	r1, r0
   156f8:	blt	15864 <__assert_fail@plt+0x483c>
   156fc:	b	15878 <__assert_fail@plt+0x4850>
   15700:	b	15704 <__assert_fail@plt+0x46dc>
   15704:	ldr	r0, [pc, #2116]	; 15f50 <__assert_fail@plt+0x4f28>
   15708:	ldr	r1, [fp, #8]
   1570c:	cmp	r1, r0
   15710:	blt	15728 <__assert_fail@plt+0x4700>
   15714:	b	15734 <__assert_fail@plt+0x470c>
   15718:	ldr	r0, [fp, #8]
   1571c:	movw	r1, #0
   15720:	cmp	r1, r0
   15724:	bge	15734 <__assert_fail@plt+0x470c>
   15728:	movw	r0, #0
   1572c:	str	r0, [fp, #-52]	; 0xffffffcc
   15730:	b	1574c <__assert_fail@plt+0x4724>
   15734:	ldr	r0, [pc, #1904]	; 15eac <__assert_fail@plt+0x4e84>
   15738:	ldr	r1, [fp, #8]
   1573c:	movw	r2, #0
   15740:	sub	r1, r2, r1
   15744:	sdiv	r0, r0, r1
   15748:	str	r0, [fp, #-52]	; 0xffffffcc
   1574c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15750:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15754:	mvn	r2, #0
   15758:	sub	r1, r2, r1
   1575c:	cmp	r0, r1
   15760:	ble	15864 <__assert_fail@plt+0x483c>
   15764:	b	15878 <__assert_fail@plt+0x4850>
   15768:	ldr	r0, [fp, #8]
   1576c:	cmn	r0, #1
   15770:	bne	157b8 <__assert_fail@plt+0x4790>
   15774:	b	15778 <__assert_fail@plt+0x4750>
   15778:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1577c:	add	r0, r0, #-2147483648	; 0x80000000
   15780:	movw	r1, #0
   15784:	cmp	r1, r0
   15788:	blt	15864 <__assert_fail@plt+0x483c>
   1578c:	b	15878 <__assert_fail@plt+0x4850>
   15790:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15794:	movw	r1, #0
   15798:	cmp	r1, r0
   1579c:	bge	15878 <__assert_fail@plt+0x4850>
   157a0:	ldr	r0, [pc, #1796]	; 15eac <__assert_fail@plt+0x4e84>
   157a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   157a8:	sub	r1, r1, #1
   157ac:	cmp	r0, r1
   157b0:	blt	15864 <__assert_fail@plt+0x483c>
   157b4:	b	15878 <__assert_fail@plt+0x4850>
   157b8:	ldr	r0, [pc, #4080]	; 167b0 <__assert_fail@plt+0x5788>
   157bc:	ldr	r1, [fp, #8]
   157c0:	sdiv	r0, r0, r1
   157c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   157c8:	cmp	r0, r1
   157cc:	blt	15864 <__assert_fail@plt+0x483c>
   157d0:	b	15878 <__assert_fail@plt+0x4850>
   157d4:	ldr	r0, [fp, #8]
   157d8:	cmp	r0, #0
   157dc:	bne	157e4 <__assert_fail@plt+0x47bc>
   157e0:	b	15878 <__assert_fail@plt+0x4850>
   157e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157e8:	cmp	r0, #0
   157ec:	bge	1584c <__assert_fail@plt+0x4824>
   157f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157f4:	cmn	r0, #1
   157f8:	bne	15830 <__assert_fail@plt+0x4808>
   157fc:	b	15800 <__assert_fail@plt+0x47d8>
   15800:	ldr	r0, [fp, #8]
   15804:	add	r0, r0, #-2147483648	; 0x80000000
   15808:	movw	r1, #0
   1580c:	cmp	r1, r0
   15810:	blt	15864 <__assert_fail@plt+0x483c>
   15814:	b	15878 <__assert_fail@plt+0x4850>
   15818:	ldr	r0, [pc, #1676]	; 15eac <__assert_fail@plt+0x4e84>
   1581c:	ldr	r1, [fp, #8]
   15820:	sub	r1, r1, #1
   15824:	cmp	r0, r1
   15828:	blt	15864 <__assert_fail@plt+0x483c>
   1582c:	b	15878 <__assert_fail@plt+0x4850>
   15830:	ldr	r0, [pc, #3960]	; 167b0 <__assert_fail@plt+0x5788>
   15834:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15838:	sdiv	r0, r0, r1
   1583c:	ldr	r1, [fp, #8]
   15840:	cmp	r0, r1
   15844:	blt	15864 <__assert_fail@plt+0x483c>
   15848:	b	15878 <__assert_fail@plt+0x4850>
   1584c:	ldr	r0, [pc, #1624]	; 15eac <__assert_fail@plt+0x4e84>
   15850:	ldr	r1, [fp, #8]
   15854:	sdiv	r0, r0, r1
   15858:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1585c:	cmp	r0, r1
   15860:	bge	15878 <__assert_fail@plt+0x4850>
   15864:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15868:	ldr	r1, [fp, #8]
   1586c:	mul	r0, r0, r1
   15870:	str	r0, [fp, #-28]	; 0xffffffe4
   15874:	b	162b0 <__assert_fail@plt+0x5288>
   15878:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1587c:	ldr	r1, [fp, #8]
   15880:	mul	r0, r0, r1
   15884:	str	r0, [fp, #-28]	; 0xffffffe4
   15888:	b	162bc <__assert_fail@plt+0x5294>
   1588c:	ldr	r0, [fp, #8]
   15890:	cmp	r0, #0
   15894:	bge	159a4 <__assert_fail@plt+0x497c>
   15898:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1589c:	cmp	r0, #0
   158a0:	bge	1592c <__assert_fail@plt+0x4904>
   158a4:	b	158c4 <__assert_fail@plt+0x489c>
   158a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158ac:	ldr	r1, [fp, #8]
   158b0:	mvn	r2, #0
   158b4:	udiv	r1, r2, r1
   158b8:	cmp	r0, r1
   158bc:	bcc	15a40 <__assert_fail@plt+0x4a18>
   158c0:	b	15a54 <__assert_fail@plt+0x4a2c>
   158c4:	b	158c8 <__assert_fail@plt+0x48a0>
   158c8:	ldr	r0, [pc, #1664]	; 15f50 <__assert_fail@plt+0x4f28>
   158cc:	ldr	r1, [fp, #8]
   158d0:	cmp	r1, r0
   158d4:	blt	158ec <__assert_fail@plt+0x48c4>
   158d8:	b	158f8 <__assert_fail@plt+0x48d0>
   158dc:	ldr	r0, [fp, #8]
   158e0:	movw	r1, #0
   158e4:	cmp	r1, r0
   158e8:	bge	158f8 <__assert_fail@plt+0x48d0>
   158ec:	movw	r0, #1
   158f0:	str	r0, [fp, #-56]	; 0xffffffc8
   158f4:	b	15910 <__assert_fail@plt+0x48e8>
   158f8:	ldr	r0, [fp, #8]
   158fc:	movw	r1, #0
   15900:	sub	r0, r1, r0
   15904:	mvn	r1, #0
   15908:	udiv	r0, r1, r0
   1590c:	str	r0, [fp, #-56]	; 0xffffffc8
   15910:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15914:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15918:	mvn	r2, #0
   1591c:	sub	r1, r2, r1
   15920:	cmp	r0, r1
   15924:	bls	15a40 <__assert_fail@plt+0x4a18>
   15928:	b	15a54 <__assert_fail@plt+0x4a2c>
   1592c:	b	15930 <__assert_fail@plt+0x4908>
   15930:	b	15988 <__assert_fail@plt+0x4960>
   15934:	b	15988 <__assert_fail@plt+0x4960>
   15938:	ldr	r0, [fp, #8]
   1593c:	cmn	r0, #1
   15940:	bne	15988 <__assert_fail@plt+0x4960>
   15944:	b	15948 <__assert_fail@plt+0x4920>
   15948:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1594c:	add	r0, r0, #0
   15950:	movw	r1, #0
   15954:	cmp	r1, r0
   15958:	blt	15a40 <__assert_fail@plt+0x4a18>
   1595c:	b	15a54 <__assert_fail@plt+0x4a2c>
   15960:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15964:	movw	r1, #0
   15968:	cmp	r1, r0
   1596c:	bge	15a54 <__assert_fail@plt+0x4a2c>
   15970:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15974:	sub	r0, r0, #1
   15978:	mvn	r1, #0
   1597c:	cmp	r1, r0
   15980:	blt	15a40 <__assert_fail@plt+0x4a18>
   15984:	b	15a54 <__assert_fail@plt+0x4a2c>
   15988:	ldr	r0, [fp, #8]
   1598c:	movw	r1, #0
   15990:	sdiv	r0, r1, r0
   15994:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15998:	cmp	r0, r1
   1599c:	blt	15a40 <__assert_fail@plt+0x4a18>
   159a0:	b	15a54 <__assert_fail@plt+0x4a2c>
   159a4:	ldr	r0, [fp, #8]
   159a8:	cmp	r0, #0
   159ac:	bne	159b4 <__assert_fail@plt+0x498c>
   159b0:	b	15a54 <__assert_fail@plt+0x4a2c>
   159b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159b8:	cmp	r0, #0
   159bc:	bge	15a28 <__assert_fail@plt+0x4a00>
   159c0:	b	159c4 <__assert_fail@plt+0x499c>
   159c4:	b	15a0c <__assert_fail@plt+0x49e4>
   159c8:	b	15a0c <__assert_fail@plt+0x49e4>
   159cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159d0:	cmn	r0, #1
   159d4:	bne	15a0c <__assert_fail@plt+0x49e4>
   159d8:	b	159dc <__assert_fail@plt+0x49b4>
   159dc:	ldr	r0, [fp, #8]
   159e0:	add	r0, r0, #0
   159e4:	movw	r1, #0
   159e8:	cmp	r1, r0
   159ec:	blt	15a40 <__assert_fail@plt+0x4a18>
   159f0:	b	15a54 <__assert_fail@plt+0x4a2c>
   159f4:	ldr	r0, [fp, #8]
   159f8:	sub	r0, r0, #1
   159fc:	mvn	r1, #0
   15a00:	cmp	r1, r0
   15a04:	blt	15a40 <__assert_fail@plt+0x4a18>
   15a08:	b	15a54 <__assert_fail@plt+0x4a2c>
   15a0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a10:	movw	r1, #0
   15a14:	sdiv	r0, r1, r0
   15a18:	ldr	r1, [fp, #8]
   15a1c:	cmp	r0, r1
   15a20:	blt	15a40 <__assert_fail@plt+0x4a18>
   15a24:	b	15a54 <__assert_fail@plt+0x4a2c>
   15a28:	ldr	r0, [fp, #8]
   15a2c:	mvn	r1, #0
   15a30:	udiv	r0, r1, r0
   15a34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15a38:	cmp	r0, r1
   15a3c:	bcs	15a54 <__assert_fail@plt+0x4a2c>
   15a40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a44:	ldr	r1, [fp, #8]
   15a48:	mul	r0, r0, r1
   15a4c:	str	r0, [fp, #-28]	; 0xffffffe4
   15a50:	b	162b0 <__assert_fail@plt+0x5288>
   15a54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a58:	ldr	r1, [fp, #8]
   15a5c:	mul	r0, r0, r1
   15a60:	str	r0, [fp, #-28]	; 0xffffffe4
   15a64:	b	162bc <__assert_fail@plt+0x5294>
   15a68:	b	15a6c <__assert_fail@plt+0x4a44>
   15a6c:	b	15a70 <__assert_fail@plt+0x4a48>
   15a70:	ldr	r0, [fp, #8]
   15a74:	cmp	r0, #0
   15a78:	bge	15b7c <__assert_fail@plt+0x4b54>
   15a7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a80:	cmp	r0, #0
   15a84:	bge	15b10 <__assert_fail@plt+0x4ae8>
   15a88:	b	15a8c <__assert_fail@plt+0x4a64>
   15a8c:	ldr	r0, [pc, #1048]	; 15eac <__assert_fail@plt+0x4e84>
   15a90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15a94:	ldr	r2, [fp, #8]
   15a98:	sdiv	r0, r0, r2
   15a9c:	cmp	r1, r0
   15aa0:	blt	15c0c <__assert_fail@plt+0x4be4>
   15aa4:	b	15c20 <__assert_fail@plt+0x4bf8>
   15aa8:	b	15aac <__assert_fail@plt+0x4a84>
   15aac:	ldr	r0, [pc, #1180]	; 15f50 <__assert_fail@plt+0x4f28>
   15ab0:	ldr	r1, [fp, #8]
   15ab4:	cmp	r1, r0
   15ab8:	blt	15ad0 <__assert_fail@plt+0x4aa8>
   15abc:	b	15adc <__assert_fail@plt+0x4ab4>
   15ac0:	ldr	r0, [fp, #8]
   15ac4:	movw	r1, #0
   15ac8:	cmp	r1, r0
   15acc:	bge	15adc <__assert_fail@plt+0x4ab4>
   15ad0:	movw	r0, #0
   15ad4:	str	r0, [fp, #-60]	; 0xffffffc4
   15ad8:	b	15af4 <__assert_fail@plt+0x4acc>
   15adc:	ldr	r0, [pc, #968]	; 15eac <__assert_fail@plt+0x4e84>
   15ae0:	ldr	r1, [fp, #8]
   15ae4:	movw	r2, #0
   15ae8:	sub	r1, r2, r1
   15aec:	sdiv	r0, r0, r1
   15af0:	str	r0, [fp, #-60]	; 0xffffffc4
   15af4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15af8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15afc:	mvn	r2, #0
   15b00:	sub	r1, r2, r1
   15b04:	cmp	r0, r1
   15b08:	ble	15c0c <__assert_fail@plt+0x4be4>
   15b0c:	b	15c20 <__assert_fail@plt+0x4bf8>
   15b10:	ldr	r0, [fp, #8]
   15b14:	cmn	r0, #1
   15b18:	bne	15b60 <__assert_fail@plt+0x4b38>
   15b1c:	b	15b20 <__assert_fail@plt+0x4af8>
   15b20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b24:	add	r0, r0, #-2147483648	; 0x80000000
   15b28:	movw	r1, #0
   15b2c:	cmp	r1, r0
   15b30:	blt	15c0c <__assert_fail@plt+0x4be4>
   15b34:	b	15c20 <__assert_fail@plt+0x4bf8>
   15b38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b3c:	movw	r1, #0
   15b40:	cmp	r1, r0
   15b44:	bge	15c20 <__assert_fail@plt+0x4bf8>
   15b48:	ldr	r0, [pc, #860]	; 15eac <__assert_fail@plt+0x4e84>
   15b4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15b50:	sub	r1, r1, #1
   15b54:	cmp	r0, r1
   15b58:	blt	15c0c <__assert_fail@plt+0x4be4>
   15b5c:	b	15c20 <__assert_fail@plt+0x4bf8>
   15b60:	ldr	r0, [pc, #3144]	; 167b0 <__assert_fail@plt+0x5788>
   15b64:	ldr	r1, [fp, #8]
   15b68:	sdiv	r0, r0, r1
   15b6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15b70:	cmp	r0, r1
   15b74:	blt	15c0c <__assert_fail@plt+0x4be4>
   15b78:	b	15c20 <__assert_fail@plt+0x4bf8>
   15b7c:	ldr	r0, [fp, #8]
   15b80:	cmp	r0, #0
   15b84:	bne	15b8c <__assert_fail@plt+0x4b64>
   15b88:	b	15c20 <__assert_fail@plt+0x4bf8>
   15b8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b90:	cmp	r0, #0
   15b94:	bge	15bf4 <__assert_fail@plt+0x4bcc>
   15b98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b9c:	cmn	r0, #1
   15ba0:	bne	15bd8 <__assert_fail@plt+0x4bb0>
   15ba4:	b	15ba8 <__assert_fail@plt+0x4b80>
   15ba8:	ldr	r0, [fp, #8]
   15bac:	add	r0, r0, #-2147483648	; 0x80000000
   15bb0:	movw	r1, #0
   15bb4:	cmp	r1, r0
   15bb8:	blt	15c0c <__assert_fail@plt+0x4be4>
   15bbc:	b	15c20 <__assert_fail@plt+0x4bf8>
   15bc0:	ldr	r0, [pc, #740]	; 15eac <__assert_fail@plt+0x4e84>
   15bc4:	ldr	r1, [fp, #8]
   15bc8:	sub	r1, r1, #1
   15bcc:	cmp	r0, r1
   15bd0:	blt	15c0c <__assert_fail@plt+0x4be4>
   15bd4:	b	15c20 <__assert_fail@plt+0x4bf8>
   15bd8:	ldr	r0, [pc, #3024]	; 167b0 <__assert_fail@plt+0x5788>
   15bdc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15be0:	sdiv	r0, r0, r1
   15be4:	ldr	r1, [fp, #8]
   15be8:	cmp	r0, r1
   15bec:	blt	15c0c <__assert_fail@plt+0x4be4>
   15bf0:	b	15c20 <__assert_fail@plt+0x4bf8>
   15bf4:	ldr	r0, [pc, #688]	; 15eac <__assert_fail@plt+0x4e84>
   15bf8:	ldr	r1, [fp, #8]
   15bfc:	sdiv	r0, r0, r1
   15c00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15c04:	cmp	r0, r1
   15c08:	bge	15c20 <__assert_fail@plt+0x4bf8>
   15c0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c10:	ldr	r1, [fp, #8]
   15c14:	mul	r0, r0, r1
   15c18:	str	r0, [fp, #-28]	; 0xffffffe4
   15c1c:	b	162b0 <__assert_fail@plt+0x5288>
   15c20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c24:	ldr	r1, [fp, #8]
   15c28:	mul	r0, r0, r1
   15c2c:	str	r0, [fp, #-28]	; 0xffffffe4
   15c30:	b	162bc <__assert_fail@plt+0x5294>
   15c34:	ldr	r0, [fp, #8]
   15c38:	cmp	r0, #0
   15c3c:	bge	15d4c <__assert_fail@plt+0x4d24>
   15c40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c44:	cmp	r0, #0
   15c48:	bge	15cd4 <__assert_fail@plt+0x4cac>
   15c4c:	b	15c6c <__assert_fail@plt+0x4c44>
   15c50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c54:	ldr	r1, [fp, #8]
   15c58:	mvn	r2, #0
   15c5c:	udiv	r1, r2, r1
   15c60:	cmp	r0, r1
   15c64:	bcc	15de8 <__assert_fail@plt+0x4dc0>
   15c68:	b	15dfc <__assert_fail@plt+0x4dd4>
   15c6c:	b	15c70 <__assert_fail@plt+0x4c48>
   15c70:	ldr	r0, [pc, #728]	; 15f50 <__assert_fail@plt+0x4f28>
   15c74:	ldr	r1, [fp, #8]
   15c78:	cmp	r1, r0
   15c7c:	blt	15c94 <__assert_fail@plt+0x4c6c>
   15c80:	b	15ca0 <__assert_fail@plt+0x4c78>
   15c84:	ldr	r0, [fp, #8]
   15c88:	movw	r1, #0
   15c8c:	cmp	r1, r0
   15c90:	bge	15ca0 <__assert_fail@plt+0x4c78>
   15c94:	movw	r0, #1
   15c98:	str	r0, [fp, #-64]	; 0xffffffc0
   15c9c:	b	15cb8 <__assert_fail@plt+0x4c90>
   15ca0:	ldr	r0, [fp, #8]
   15ca4:	movw	r1, #0
   15ca8:	sub	r0, r1, r0
   15cac:	mvn	r1, #0
   15cb0:	udiv	r0, r1, r0
   15cb4:	str	r0, [fp, #-64]	; 0xffffffc0
   15cb8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15cbc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15cc0:	mvn	r2, #0
   15cc4:	sub	r1, r2, r1
   15cc8:	cmp	r0, r1
   15ccc:	bls	15de8 <__assert_fail@plt+0x4dc0>
   15cd0:	b	15dfc <__assert_fail@plt+0x4dd4>
   15cd4:	b	15cd8 <__assert_fail@plt+0x4cb0>
   15cd8:	b	15d30 <__assert_fail@plt+0x4d08>
   15cdc:	b	15d30 <__assert_fail@plt+0x4d08>
   15ce0:	ldr	r0, [fp, #8]
   15ce4:	cmn	r0, #1
   15ce8:	bne	15d30 <__assert_fail@plt+0x4d08>
   15cec:	b	15cf0 <__assert_fail@plt+0x4cc8>
   15cf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15cf4:	add	r0, r0, #0
   15cf8:	movw	r1, #0
   15cfc:	cmp	r1, r0
   15d00:	blt	15de8 <__assert_fail@plt+0x4dc0>
   15d04:	b	15dfc <__assert_fail@plt+0x4dd4>
   15d08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d0c:	movw	r1, #0
   15d10:	cmp	r1, r0
   15d14:	bge	15dfc <__assert_fail@plt+0x4dd4>
   15d18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d1c:	sub	r0, r0, #1
   15d20:	mvn	r1, #0
   15d24:	cmp	r1, r0
   15d28:	blt	15de8 <__assert_fail@plt+0x4dc0>
   15d2c:	b	15dfc <__assert_fail@plt+0x4dd4>
   15d30:	ldr	r0, [fp, #8]
   15d34:	movw	r1, #0
   15d38:	sdiv	r0, r1, r0
   15d3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15d40:	cmp	r0, r1
   15d44:	blt	15de8 <__assert_fail@plt+0x4dc0>
   15d48:	b	15dfc <__assert_fail@plt+0x4dd4>
   15d4c:	ldr	r0, [fp, #8]
   15d50:	cmp	r0, #0
   15d54:	bne	15d5c <__assert_fail@plt+0x4d34>
   15d58:	b	15dfc <__assert_fail@plt+0x4dd4>
   15d5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d60:	cmp	r0, #0
   15d64:	bge	15dd0 <__assert_fail@plt+0x4da8>
   15d68:	b	15d6c <__assert_fail@plt+0x4d44>
   15d6c:	b	15db4 <__assert_fail@plt+0x4d8c>
   15d70:	b	15db4 <__assert_fail@plt+0x4d8c>
   15d74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d78:	cmn	r0, #1
   15d7c:	bne	15db4 <__assert_fail@plt+0x4d8c>
   15d80:	b	15d84 <__assert_fail@plt+0x4d5c>
   15d84:	ldr	r0, [fp, #8]
   15d88:	add	r0, r0, #0
   15d8c:	movw	r1, #0
   15d90:	cmp	r1, r0
   15d94:	blt	15de8 <__assert_fail@plt+0x4dc0>
   15d98:	b	15dfc <__assert_fail@plt+0x4dd4>
   15d9c:	ldr	r0, [fp, #8]
   15da0:	sub	r0, r0, #1
   15da4:	mvn	r1, #0
   15da8:	cmp	r1, r0
   15dac:	blt	15de8 <__assert_fail@plt+0x4dc0>
   15db0:	b	15dfc <__assert_fail@plt+0x4dd4>
   15db4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15db8:	movw	r1, #0
   15dbc:	sdiv	r0, r1, r0
   15dc0:	ldr	r1, [fp, #8]
   15dc4:	cmp	r0, r1
   15dc8:	blt	15de8 <__assert_fail@plt+0x4dc0>
   15dcc:	b	15dfc <__assert_fail@plt+0x4dd4>
   15dd0:	ldr	r0, [fp, #8]
   15dd4:	mvn	r1, #0
   15dd8:	udiv	r0, r1, r0
   15ddc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15de0:	cmp	r0, r1
   15de4:	bcs	15dfc <__assert_fail@plt+0x4dd4>
   15de8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15dec:	ldr	r1, [fp, #8]
   15df0:	mul	r0, r0, r1
   15df4:	str	r0, [fp, #-28]	; 0xffffffe4
   15df8:	b	162b0 <__assert_fail@plt+0x5288>
   15dfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e00:	ldr	r1, [fp, #8]
   15e04:	mul	r0, r0, r1
   15e08:	str	r0, [fp, #-28]	; 0xffffffe4
   15e0c:	b	162bc <__assert_fail@plt+0x5294>
   15e10:	b	15e14 <__assert_fail@plt+0x4dec>
   15e14:	ldr	r0, [fp, #8]
   15e18:	cmp	r0, #0
   15e1c:	bge	15f8c <__assert_fail@plt+0x4f64>
   15e20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e24:	cmp	r0, #0
   15e28:	bge	15f04 <__assert_fail@plt+0x4edc>
   15e2c:	b	15e30 <__assert_fail@plt+0x4e08>
   15e30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e34:	ldr	r1, [fp, #8]
   15e38:	asr	r3, r1, #31
   15e3c:	mvn	r2, #0
   15e40:	mvn	ip, #-2147483648	; 0x80000000
   15e44:	str	r0, [fp, #-68]	; 0xffffffbc
   15e48:	mov	r0, r2
   15e4c:	str	r1, [fp, #-72]	; 0xffffffb8
   15e50:	mov	r1, ip
   15e54:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15e58:	bl	1bfb0 <__assert_fail@plt+0xaf88>
   15e5c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15e60:	subs	r0, r2, r0
   15e64:	rscs	r1, r1, r2, asr #31
   15e68:	blt	16054 <__assert_fail@plt+0x502c>
   15e6c:	b	16068 <__assert_fail@plt+0x5040>
   15e70:	b	15e74 <__assert_fail@plt+0x4e4c>
   15e74:	ldr	r0, [pc, #212]	; 15f50 <__assert_fail@plt+0x4f28>
   15e78:	ldr	r1, [fp, #8]
   15e7c:	cmp	r1, r0
   15e80:	blt	15e98 <__assert_fail@plt+0x4e70>
   15e84:	b	15eb0 <__assert_fail@plt+0x4e88>
   15e88:	ldr	r0, [fp, #8]
   15e8c:	movw	r1, #0
   15e90:	cmp	r1, r0
   15e94:	bge	15eb0 <__assert_fail@plt+0x4e88>
   15e98:	mov	r0, #0
   15e9c:	mvn	r1, #0
   15ea0:	str	r1, [fp, #-76]	; 0xffffffb4
   15ea4:	str	r0, [fp, #-80]	; 0xffffffb0
   15ea8:	b	15ee4 <__assert_fail@plt+0x4ebc>
   15eac:	svcvc	0x00ffffff
   15eb0:	ldr	r0, [fp, #8]
   15eb4:	rsb	r0, r0, #0
   15eb8:	asr	r3, r0, #31
   15ebc:	mvn	r1, #0
   15ec0:	mvn	r2, #-2147483648	; 0x80000000
   15ec4:	str	r0, [fp, #-84]	; 0xffffffac
   15ec8:	mov	r0, r1
   15ecc:	mov	r1, r2
   15ed0:	ldr	r2, [fp, #-84]	; 0xffffffac
   15ed4:	bl	1bfb0 <__assert_fail@plt+0xaf88>
   15ed8:	str	r0, [fp, #-76]	; 0xffffffb4
   15edc:	str	r1, [fp, #-80]	; 0xffffffb0
   15ee0:	b	15ee4 <__assert_fail@plt+0x4ebc>
   15ee4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   15ee8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   15eec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15ef0:	mvn	r2, r2
   15ef4:	subs	r1, r2, r1
   15ef8:	rscs	r0, r0, r2, asr #31
   15efc:	bge	16054 <__assert_fail@plt+0x502c>
   15f00:	b	16068 <__assert_fail@plt+0x5040>
   15f04:	ldr	r0, [fp, #8]
   15f08:	cmn	r0, #1
   15f0c:	bne	15f54 <__assert_fail@plt+0x4f2c>
   15f10:	b	15f14 <__assert_fail@plt+0x4eec>
   15f14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f18:	mov	r1, #-2147483648	; 0x80000000
   15f1c:	add	r1, r1, r0, asr #31
   15f20:	rsbs	r0, r0, #0
   15f24:	rscs	r1, r1, #0
   15f28:	blt	16054 <__assert_fail@plt+0x502c>
   15f2c:	b	16068 <__assert_fail@plt+0x5040>
   15f30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f34:	movw	r1, #0
   15f38:	cmp	r1, r0
   15f3c:	bge	16068 <__assert_fail@plt+0x5040>
   15f40:	mov	r0, #0
   15f44:	cmp	r0, #0
   15f48:	bne	16054 <__assert_fail@plt+0x502c>
   15f4c:	b	16068 <__assert_fail@plt+0x5040>
   15f50:	andhi	r0, r0, r1
   15f54:	ldr	r0, [fp, #8]
   15f58:	asr	r3, r0, #31
   15f5c:	mov	r1, #0
   15f60:	mov	r2, #-2147483648	; 0x80000000
   15f64:	str	r0, [fp, #-88]	; 0xffffffa8
   15f68:	mov	r0, r1
   15f6c:	mov	r1, r2
   15f70:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15f74:	bl	1bfb0 <__assert_fail@plt+0xaf88>
   15f78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15f7c:	subs	r0, r0, r2
   15f80:	sbcs	r1, r1, r2, asr #31
   15f84:	blt	16054 <__assert_fail@plt+0x502c>
   15f88:	b	16068 <__assert_fail@plt+0x5040>
   15f8c:	ldr	r0, [fp, #8]
   15f90:	cmp	r0, #0
   15f94:	bne	15f9c <__assert_fail@plt+0x4f74>
   15f98:	b	16068 <__assert_fail@plt+0x5040>
   15f9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15fa0:	cmp	r0, #0
   15fa4:	bge	1601c <__assert_fail@plt+0x4ff4>
   15fa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15fac:	cmn	r0, #1
   15fb0:	bne	15fe4 <__assert_fail@plt+0x4fbc>
   15fb4:	b	15fb8 <__assert_fail@plt+0x4f90>
   15fb8:	ldr	r0, [fp, #8]
   15fbc:	mov	r1, #-2147483648	; 0x80000000
   15fc0:	add	r1, r1, r0, asr #31
   15fc4:	rsbs	r0, r0, #0
   15fc8:	rscs	r1, r1, #0
   15fcc:	blt	16054 <__assert_fail@plt+0x502c>
   15fd0:	b	16068 <__assert_fail@plt+0x5040>
   15fd4:	mov	r0, #0
   15fd8:	cmp	r0, #0
   15fdc:	bne	16054 <__assert_fail@plt+0x502c>
   15fe0:	b	16068 <__assert_fail@plt+0x5040>
   15fe4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15fe8:	asr	r3, r0, #31
   15fec:	mov	r1, #0
   15ff0:	mov	r2, #-2147483648	; 0x80000000
   15ff4:	str	r0, [fp, #-92]	; 0xffffffa4
   15ff8:	mov	r0, r1
   15ffc:	mov	r1, r2
   16000:	ldr	r2, [fp, #-92]	; 0xffffffa4
   16004:	bl	1bfb0 <__assert_fail@plt+0xaf88>
   16008:	ldr	r2, [fp, #8]
   1600c:	subs	r0, r0, r2
   16010:	sbcs	r1, r1, r2, asr #31
   16014:	blt	16054 <__assert_fail@plt+0x502c>
   16018:	b	16068 <__assert_fail@plt+0x5040>
   1601c:	ldr	r0, [fp, #8]
   16020:	asr	r3, r0, #31
   16024:	mvn	r1, #0
   16028:	mvn	r2, #-2147483648	; 0x80000000
   1602c:	str	r0, [fp, #-96]	; 0xffffffa0
   16030:	mov	r0, r1
   16034:	mov	r1, r2
   16038:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1603c:	bl	1bfb0 <__assert_fail@plt+0xaf88>
   16040:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16044:	subs	r0, r0, r2
   16048:	sbcs	r1, r1, r2, asr #31
   1604c:	bge	16068 <__assert_fail@plt+0x5040>
   16050:	b	16054 <__assert_fail@plt+0x502c>
   16054:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16058:	ldr	r1, [fp, #8]
   1605c:	mul	r0, r0, r1
   16060:	str	r0, [fp, #-28]	; 0xffffffe4
   16064:	b	162b0 <__assert_fail@plt+0x5288>
   16068:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1606c:	ldr	r1, [fp, #8]
   16070:	mul	r0, r0, r1
   16074:	str	r0, [fp, #-28]	; 0xffffffe4
   16078:	b	162bc <__assert_fail@plt+0x5294>
   1607c:	ldr	r0, [fp, #8]
   16080:	cmp	r0, #0
   16084:	bge	161d4 <__assert_fail@plt+0x51ac>
   16088:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1608c:	cmp	r0, #0
   16090:	bge	1615c <__assert_fail@plt+0x5134>
   16094:	b	160d4 <__assert_fail@plt+0x50ac>
   16098:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1609c:	ldr	r1, [fp, #8]
   160a0:	asr	r3, r1, #31
   160a4:	mvn	r2, #0
   160a8:	str	r0, [fp, #-100]	; 0xffffff9c
   160ac:	mov	r0, r2
   160b0:	str	r1, [fp, #-104]	; 0xffffff98
   160b4:	mov	r1, r2
   160b8:	ldr	r2, [fp, #-104]	; 0xffffff98
   160bc:	bl	1c084 <__assert_fail@plt+0xb05c>
   160c0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   160c4:	subs	r0, r2, r0
   160c8:	rscs	r1, r1, r2, asr #31
   160cc:	bcc	16288 <__assert_fail@plt+0x5260>
   160d0:	b	1629c <__assert_fail@plt+0x5274>
   160d4:	b	160d8 <__assert_fail@plt+0x50b0>
   160d8:	ldr	r0, [pc, #-400]	; 15f50 <__assert_fail@plt+0x4f28>
   160dc:	ldr	r1, [fp, #8]
   160e0:	cmp	r1, r0
   160e4:	blt	160fc <__assert_fail@plt+0x50d4>
   160e8:	b	16110 <__assert_fail@plt+0x50e8>
   160ec:	ldr	r0, [fp, #8]
   160f0:	movw	r1, #0
   160f4:	cmp	r1, r0
   160f8:	bge	16110 <__assert_fail@plt+0x50e8>
   160fc:	mov	r0, #1
   16100:	mvn	r1, #0
   16104:	str	r1, [sp, #108]	; 0x6c
   16108:	str	r0, [sp, #104]	; 0x68
   1610c:	b	1613c <__assert_fail@plt+0x5114>
   16110:	ldr	r0, [fp, #8]
   16114:	rsb	r0, r0, #0
   16118:	asr	r3, r0, #31
   1611c:	mvn	r1, #0
   16120:	str	r0, [sp, #100]	; 0x64
   16124:	mov	r0, r1
   16128:	ldr	r2, [sp, #100]	; 0x64
   1612c:	bl	1c084 <__assert_fail@plt+0xb05c>
   16130:	str	r0, [sp, #108]	; 0x6c
   16134:	str	r1, [sp, #104]	; 0x68
   16138:	b	1613c <__assert_fail@plt+0x5114>
   1613c:	ldr	r0, [sp, #104]	; 0x68
   16140:	ldr	r1, [sp, #108]	; 0x6c
   16144:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16148:	mvn	r2, r2
   1614c:	subs	r1, r2, r1
   16150:	rscs	r0, r0, r2, asr #31
   16154:	bcs	16288 <__assert_fail@plt+0x5260>
   16158:	b	1629c <__assert_fail@plt+0x5274>
   1615c:	b	16160 <__assert_fail@plt+0x5138>
   16160:	b	161b8 <__assert_fail@plt+0x5190>
   16164:	b	161b8 <__assert_fail@plt+0x5190>
   16168:	ldr	r0, [fp, #8]
   1616c:	cmn	r0, #1
   16170:	bne	161b8 <__assert_fail@plt+0x5190>
   16174:	b	16178 <__assert_fail@plt+0x5150>
   16178:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1617c:	add	r0, r0, #0
   16180:	movw	r1, #0
   16184:	cmp	r1, r0
   16188:	blt	16288 <__assert_fail@plt+0x5260>
   1618c:	b	1629c <__assert_fail@plt+0x5274>
   16190:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16194:	movw	r1, #0
   16198:	cmp	r1, r0
   1619c:	bge	1629c <__assert_fail@plt+0x5274>
   161a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161a4:	sub	r0, r0, #1
   161a8:	mvn	r1, #0
   161ac:	cmp	r1, r0
   161b0:	blt	16288 <__assert_fail@plt+0x5260>
   161b4:	b	1629c <__assert_fail@plt+0x5274>
   161b8:	ldr	r0, [fp, #8]
   161bc:	movw	r1, #0
   161c0:	sdiv	r0, r1, r0
   161c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   161c8:	cmp	r0, r1
   161cc:	blt	16288 <__assert_fail@plt+0x5260>
   161d0:	b	1629c <__assert_fail@plt+0x5274>
   161d4:	ldr	r0, [fp, #8]
   161d8:	cmp	r0, #0
   161dc:	bne	161e4 <__assert_fail@plt+0x51bc>
   161e0:	b	1629c <__assert_fail@plt+0x5274>
   161e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161e8:	cmp	r0, #0
   161ec:	bge	16258 <__assert_fail@plt+0x5230>
   161f0:	b	161f4 <__assert_fail@plt+0x51cc>
   161f4:	b	1623c <__assert_fail@plt+0x5214>
   161f8:	b	1623c <__assert_fail@plt+0x5214>
   161fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16200:	cmn	r0, #1
   16204:	bne	1623c <__assert_fail@plt+0x5214>
   16208:	b	1620c <__assert_fail@plt+0x51e4>
   1620c:	ldr	r0, [fp, #8]
   16210:	add	r0, r0, #0
   16214:	movw	r1, #0
   16218:	cmp	r1, r0
   1621c:	blt	16288 <__assert_fail@plt+0x5260>
   16220:	b	1629c <__assert_fail@plt+0x5274>
   16224:	ldr	r0, [fp, #8]
   16228:	sub	r0, r0, #1
   1622c:	mvn	r1, #0
   16230:	cmp	r1, r0
   16234:	blt	16288 <__assert_fail@plt+0x5260>
   16238:	b	1629c <__assert_fail@plt+0x5274>
   1623c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16240:	movw	r1, #0
   16244:	sdiv	r0, r1, r0
   16248:	ldr	r1, [fp, #8]
   1624c:	cmp	r0, r1
   16250:	blt	16288 <__assert_fail@plt+0x5260>
   16254:	b	1629c <__assert_fail@plt+0x5274>
   16258:	ldr	r0, [fp, #8]
   1625c:	asr	r3, r0, #31
   16260:	mvn	r1, #0
   16264:	str	r0, [sp, #96]	; 0x60
   16268:	mov	r0, r1
   1626c:	ldr	r2, [sp, #96]	; 0x60
   16270:	bl	1c084 <__assert_fail@plt+0xb05c>
   16274:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16278:	subs	r0, r0, r2
   1627c:	sbcs	r1, r1, r2, asr #31
   16280:	bcs	1629c <__assert_fail@plt+0x5274>
   16284:	b	16288 <__assert_fail@plt+0x5260>
   16288:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1628c:	ldr	r1, [fp, #8]
   16290:	mul	r0, r0, r1
   16294:	str	r0, [fp, #-28]	; 0xffffffe4
   16298:	b	162b0 <__assert_fail@plt+0x5288>
   1629c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   162a0:	ldr	r1, [fp, #8]
   162a4:	mul	r0, r0, r1
   162a8:	str	r0, [fp, #-28]	; 0xffffffe4
   162ac:	b	162bc <__assert_fail@plt+0x5294>
   162b0:	ldr	r0, [pc, #-1036]	; 15eac <__assert_fail@plt+0x4e84>
   162b4:	str	r0, [sp, #92]	; 0x5c
   162b8:	b	162dc <__assert_fail@plt+0x52b4>
   162bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   162c0:	cmp	r0, #64	; 0x40
   162c4:	movw	r0, #0
   162c8:	movlt	r0, #1
   162cc:	tst	r0, #1
   162d0:	movw	r0, #64	; 0x40
   162d4:	moveq	r0, #0
   162d8:	str	r0, [sp, #92]	; 0x5c
   162dc:	ldr	r0, [sp, #92]	; 0x5c
   162e0:	str	r0, [fp, #-32]	; 0xffffffe0
   162e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   162e8:	cmp	r0, #0
   162ec:	beq	1631c <__assert_fail@plt+0x52f4>
   162f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   162f4:	ldr	r1, [fp, #8]
   162f8:	sdiv	r0, r0, r1
   162fc:	str	r0, [fp, #-24]	; 0xffffffe8
   16300:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16304:	mov	r1, r0
   16308:	ldr	r2, [fp, #8]
   1630c:	sdiv	r3, r0, r2
   16310:	mls	r0, r3, r2, r0
   16314:	sub	r0, r1, r0
   16318:	str	r0, [fp, #-28]	; 0xffffffe4
   1631c:	ldr	r0, [fp, #-4]
   16320:	movw	r1, #0
   16324:	cmp	r0, r1
   16328:	bne	16338 <__assert_fail@plt+0x5310>
   1632c:	ldr	r0, [fp, #-8]
   16330:	movw	r1, #0
   16334:	str	r1, [r0]
   16338:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1633c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16340:	sub	r0, r0, r1
   16344:	ldr	r1, [fp, #-12]
   16348:	cmp	r0, r1
   1634c:	bge	17738 <__assert_fail@plt+0x6710>
   16350:	ldr	r0, [fp, #-20]	; 0xffffffec
   16354:	ldr	r1, [fp, #-12]
   16358:	add	r1, r0, r1
   1635c:	mov	r2, #1
   16360:	cmp	r1, r0
   16364:	movwvc	r2, #0
   16368:	str	r1, [fp, #-24]	; 0xffffffe8
   1636c:	tst	r2, #1
   16370:	bne	17734 <__assert_fail@plt+0x670c>
   16374:	ldr	r0, [fp, #-16]
   16378:	movw	r1, #0
   1637c:	cmp	r1, r0
   16380:	bgt	16394 <__assert_fail@plt+0x536c>
   16384:	ldr	r0, [fp, #-16]
   16388:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1638c:	cmp	r0, r1
   16390:	blt	17734 <__assert_fail@plt+0x670c>
   16394:	b	16770 <__assert_fail@plt+0x5748>
   16398:			; <UNDEFINED> instruction: 0xffff8000
   1639c:	b	163a0 <__assert_fail@plt+0x5378>
   163a0:	ldr	r0, [fp, #8]
   163a4:	cmp	r0, #0
   163a8:	bge	164bc <__assert_fail@plt+0x5494>
   163ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   163b0:	cmp	r0, #0
   163b4:	bge	16440 <__assert_fail@plt+0x5418>
   163b8:	b	163bc <__assert_fail@plt+0x5394>
   163bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   163c0:	ldr	r1, [fp, #8]
   163c4:	movw	r2, #127	; 0x7f
   163c8:	sdiv	r1, r2, r1
   163cc:	cmp	r0, r1
   163d0:	blt	1655c <__assert_fail@plt+0x5534>
   163d4:	b	16574 <__assert_fail@plt+0x554c>
   163d8:	b	163dc <__assert_fail@plt+0x53b4>
   163dc:	ldr	r0, [pc, #-1172]	; 15f50 <__assert_fail@plt+0x4f28>
   163e0:	ldr	r1, [fp, #8]
   163e4:	cmp	r1, r0
   163e8:	blt	16400 <__assert_fail@plt+0x53d8>
   163ec:	b	1640c <__assert_fail@plt+0x53e4>
   163f0:	ldr	r0, [fp, #8]
   163f4:	movw	r1, #0
   163f8:	cmp	r1, r0
   163fc:	bge	1640c <__assert_fail@plt+0x53e4>
   16400:	movw	r0, #0
   16404:	str	r0, [sp, #88]	; 0x58
   16408:	b	16424 <__assert_fail@plt+0x53fc>
   1640c:	ldr	r0, [fp, #8]
   16410:	movw	r1, #0
   16414:	sub	r0, r1, r0
   16418:	movw	r1, #127	; 0x7f
   1641c:	sdiv	r0, r1, r0
   16420:	str	r0, [sp, #88]	; 0x58
   16424:	ldr	r0, [sp, #88]	; 0x58
   16428:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1642c:	mvn	r2, #0
   16430:	sub	r1, r2, r1
   16434:	cmp	r0, r1
   16438:	ble	1655c <__assert_fail@plt+0x5534>
   1643c:	b	16574 <__assert_fail@plt+0x554c>
   16440:	b	16444 <__assert_fail@plt+0x541c>
   16444:	b	164a0 <__assert_fail@plt+0x5478>
   16448:	b	164a0 <__assert_fail@plt+0x5478>
   1644c:	ldr	r0, [fp, #8]
   16450:	cmn	r0, #1
   16454:	bne	164a0 <__assert_fail@plt+0x5478>
   16458:	b	1645c <__assert_fail@plt+0x5434>
   1645c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16460:	mvn	r1, #127	; 0x7f
   16464:	add	r0, r0, r1
   16468:	movw	r1, #0
   1646c:	cmp	r1, r0
   16470:	blt	1655c <__assert_fail@plt+0x5534>
   16474:	b	16574 <__assert_fail@plt+0x554c>
   16478:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1647c:	movw	r1, #0
   16480:	cmp	r1, r0
   16484:	bge	16574 <__assert_fail@plt+0x554c>
   16488:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1648c:	sub	r0, r0, #1
   16490:	movw	r1, #127	; 0x7f
   16494:	cmp	r1, r0
   16498:	blt	1655c <__assert_fail@plt+0x5534>
   1649c:	b	16574 <__assert_fail@plt+0x554c>
   164a0:	ldr	r0, [fp, #8]
   164a4:	mvn	r1, #127	; 0x7f
   164a8:	sdiv	r0, r1, r0
   164ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   164b0:	cmp	r0, r1
   164b4:	blt	1655c <__assert_fail@plt+0x5534>
   164b8:	b	16574 <__assert_fail@plt+0x554c>
   164bc:	ldr	r0, [fp, #8]
   164c0:	cmp	r0, #0
   164c4:	bne	164cc <__assert_fail@plt+0x54a4>
   164c8:	b	16574 <__assert_fail@plt+0x554c>
   164cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164d0:	cmp	r0, #0
   164d4:	bge	16544 <__assert_fail@plt+0x551c>
   164d8:	b	164dc <__assert_fail@plt+0x54b4>
   164dc:	b	16528 <__assert_fail@plt+0x5500>
   164e0:	b	16528 <__assert_fail@plt+0x5500>
   164e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164e8:	cmn	r0, #1
   164ec:	bne	16528 <__assert_fail@plt+0x5500>
   164f0:	b	164f4 <__assert_fail@plt+0x54cc>
   164f4:	ldr	r0, [fp, #8]
   164f8:	mvn	r1, #127	; 0x7f
   164fc:	add	r0, r0, r1
   16500:	movw	r1, #0
   16504:	cmp	r1, r0
   16508:	blt	1655c <__assert_fail@plt+0x5534>
   1650c:	b	16574 <__assert_fail@plt+0x554c>
   16510:	ldr	r0, [fp, #8]
   16514:	sub	r0, r0, #1
   16518:	movw	r1, #127	; 0x7f
   1651c:	cmp	r1, r0
   16520:	blt	1655c <__assert_fail@plt+0x5534>
   16524:	b	16574 <__assert_fail@plt+0x554c>
   16528:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1652c:	mvn	r1, #127	; 0x7f
   16530:	sdiv	r0, r1, r0
   16534:	ldr	r1, [fp, #8]
   16538:	cmp	r0, r1
   1653c:	blt	1655c <__assert_fail@plt+0x5534>
   16540:	b	16574 <__assert_fail@plt+0x554c>
   16544:	ldr	r0, [fp, #8]
   16548:	movw	r1, #127	; 0x7f
   1654c:	sdiv	r0, r1, r0
   16550:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16554:	cmp	r0, r1
   16558:	bge	16574 <__assert_fail@plt+0x554c>
   1655c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16560:	ldr	r1, [fp, #8]
   16564:	mul	r0, r0, r1
   16568:	sxtb	r0, r0
   1656c:	str	r0, [fp, #-28]	; 0xffffffe4
   16570:	b	17734 <__assert_fail@plt+0x670c>
   16574:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16578:	ldr	r1, [fp, #8]
   1657c:	mul	r0, r0, r1
   16580:	sxtb	r0, r0
   16584:	str	r0, [fp, #-28]	; 0xffffffe4
   16588:	b	17738 <__assert_fail@plt+0x6710>
   1658c:	ldr	r0, [fp, #8]
   16590:	cmp	r0, #0
   16594:	bge	166a4 <__assert_fail@plt+0x567c>
   16598:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1659c:	cmp	r0, #0
   165a0:	bge	1662c <__assert_fail@plt+0x5604>
   165a4:	b	165a8 <__assert_fail@plt+0x5580>
   165a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165ac:	ldr	r1, [fp, #8]
   165b0:	movw	r2, #255	; 0xff
   165b4:	sdiv	r1, r2, r1
   165b8:	cmp	r0, r1
   165bc:	blt	16740 <__assert_fail@plt+0x5718>
   165c0:	b	16758 <__assert_fail@plt+0x5730>
   165c4:	b	165c8 <__assert_fail@plt+0x55a0>
   165c8:	ldr	r0, [pc, #-1664]	; 15f50 <__assert_fail@plt+0x4f28>
   165cc:	ldr	r1, [fp, #8]
   165d0:	cmp	r1, r0
   165d4:	blt	165ec <__assert_fail@plt+0x55c4>
   165d8:	b	165f8 <__assert_fail@plt+0x55d0>
   165dc:	ldr	r0, [fp, #8]
   165e0:	movw	r1, #0
   165e4:	cmp	r1, r0
   165e8:	bge	165f8 <__assert_fail@plt+0x55d0>
   165ec:	movw	r0, #0
   165f0:	str	r0, [sp, #84]	; 0x54
   165f4:	b	16610 <__assert_fail@plt+0x55e8>
   165f8:	ldr	r0, [fp, #8]
   165fc:	movw	r1, #0
   16600:	sub	r0, r1, r0
   16604:	movw	r1, #255	; 0xff
   16608:	sdiv	r0, r1, r0
   1660c:	str	r0, [sp, #84]	; 0x54
   16610:	ldr	r0, [sp, #84]	; 0x54
   16614:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16618:	mvn	r2, #0
   1661c:	sub	r1, r2, r1
   16620:	cmp	r0, r1
   16624:	ble	16740 <__assert_fail@plt+0x5718>
   16628:	b	16758 <__assert_fail@plt+0x5730>
   1662c:	b	16630 <__assert_fail@plt+0x5608>
   16630:	b	16688 <__assert_fail@plt+0x5660>
   16634:	b	16688 <__assert_fail@plt+0x5660>
   16638:	ldr	r0, [fp, #8]
   1663c:	cmn	r0, #1
   16640:	bne	16688 <__assert_fail@plt+0x5660>
   16644:	b	16648 <__assert_fail@plt+0x5620>
   16648:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1664c:	add	r0, r0, #0
   16650:	movw	r1, #0
   16654:	cmp	r1, r0
   16658:	blt	16740 <__assert_fail@plt+0x5718>
   1665c:	b	16758 <__assert_fail@plt+0x5730>
   16660:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16664:	movw	r1, #0
   16668:	cmp	r1, r0
   1666c:	bge	16758 <__assert_fail@plt+0x5730>
   16670:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16674:	sub	r0, r0, #1
   16678:	mvn	r1, #0
   1667c:	cmp	r1, r0
   16680:	blt	16740 <__assert_fail@plt+0x5718>
   16684:	b	16758 <__assert_fail@plt+0x5730>
   16688:	ldr	r0, [fp, #8]
   1668c:	movw	r1, #0
   16690:	sdiv	r0, r1, r0
   16694:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16698:	cmp	r0, r1
   1669c:	blt	16740 <__assert_fail@plt+0x5718>
   166a0:	b	16758 <__assert_fail@plt+0x5730>
   166a4:	ldr	r0, [fp, #8]
   166a8:	cmp	r0, #0
   166ac:	bne	166b4 <__assert_fail@plt+0x568c>
   166b0:	b	16758 <__assert_fail@plt+0x5730>
   166b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166b8:	cmp	r0, #0
   166bc:	bge	16728 <__assert_fail@plt+0x5700>
   166c0:	b	166c4 <__assert_fail@plt+0x569c>
   166c4:	b	1670c <__assert_fail@plt+0x56e4>
   166c8:	b	1670c <__assert_fail@plt+0x56e4>
   166cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166d0:	cmn	r0, #1
   166d4:	bne	1670c <__assert_fail@plt+0x56e4>
   166d8:	b	166dc <__assert_fail@plt+0x56b4>
   166dc:	ldr	r0, [fp, #8]
   166e0:	add	r0, r0, #0
   166e4:	movw	r1, #0
   166e8:	cmp	r1, r0
   166ec:	blt	16740 <__assert_fail@plt+0x5718>
   166f0:	b	16758 <__assert_fail@plt+0x5730>
   166f4:	ldr	r0, [fp, #8]
   166f8:	sub	r0, r0, #1
   166fc:	mvn	r1, #0
   16700:	cmp	r1, r0
   16704:	blt	16740 <__assert_fail@plt+0x5718>
   16708:	b	16758 <__assert_fail@plt+0x5730>
   1670c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16710:	movw	r1, #0
   16714:	sdiv	r0, r1, r0
   16718:	ldr	r1, [fp, #8]
   1671c:	cmp	r0, r1
   16720:	blt	16740 <__assert_fail@plt+0x5718>
   16724:	b	16758 <__assert_fail@plt+0x5730>
   16728:	ldr	r0, [fp, #8]
   1672c:	movw	r1, #255	; 0xff
   16730:	sdiv	r0, r1, r0
   16734:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16738:	cmp	r0, r1
   1673c:	bge	16758 <__assert_fail@plt+0x5730>
   16740:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16744:	ldr	r1, [fp, #8]
   16748:	mul	r0, r0, r1
   1674c:	and	r0, r0, #255	; 0xff
   16750:	str	r0, [fp, #-28]	; 0xffffffe4
   16754:	b	17734 <__assert_fail@plt+0x670c>
   16758:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1675c:	ldr	r1, [fp, #8]
   16760:	mul	r0, r0, r1
   16764:	and	r0, r0, #255	; 0xff
   16768:	str	r0, [fp, #-28]	; 0xffffffe4
   1676c:	b	17738 <__assert_fail@plt+0x6710>
   16770:	b	16b4c <__assert_fail@plt+0x5b24>
   16774:	b	16778 <__assert_fail@plt+0x5750>
   16778:	ldr	r0, [fp, #8]
   1677c:	cmp	r0, #0
   16780:	bge	16898 <__assert_fail@plt+0x5870>
   16784:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16788:	cmp	r0, #0
   1678c:	bge	1681c <__assert_fail@plt+0x57f4>
   16790:	b	16794 <__assert_fail@plt+0x576c>
   16794:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16798:	ldr	r1, [fp, #8]
   1679c:	movw	r2, #32767	; 0x7fff
   167a0:	sdiv	r1, r2, r1
   167a4:	cmp	r0, r1
   167a8:	blt	16938 <__assert_fail@plt+0x5910>
   167ac:	b	16950 <__assert_fail@plt+0x5928>
   167b0:	andhi	r0, r0, r0
   167b4:	b	167b8 <__assert_fail@plt+0x5790>
   167b8:	ldr	r0, [pc, #4004]	; 17764 <__assert_fail@plt+0x673c>
   167bc:	ldr	r1, [fp, #8]
   167c0:	cmp	r1, r0
   167c4:	blt	167dc <__assert_fail@plt+0x57b4>
   167c8:	b	167e8 <__assert_fail@plt+0x57c0>
   167cc:	ldr	r0, [fp, #8]
   167d0:	movw	r1, #0
   167d4:	cmp	r1, r0
   167d8:	bge	167e8 <__assert_fail@plt+0x57c0>
   167dc:	movw	r0, #0
   167e0:	str	r0, [sp, #80]	; 0x50
   167e4:	b	16800 <__assert_fail@plt+0x57d8>
   167e8:	ldr	r0, [fp, #8]
   167ec:	movw	r1, #0
   167f0:	sub	r0, r1, r0
   167f4:	movw	r1, #32767	; 0x7fff
   167f8:	sdiv	r0, r1, r0
   167fc:	str	r0, [sp, #80]	; 0x50
   16800:	ldr	r0, [sp, #80]	; 0x50
   16804:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16808:	mvn	r2, #0
   1680c:	sub	r1, r2, r1
   16810:	cmp	r0, r1
   16814:	ble	16938 <__assert_fail@plt+0x5910>
   16818:	b	16950 <__assert_fail@plt+0x5928>
   1681c:	b	16820 <__assert_fail@plt+0x57f8>
   16820:	b	1687c <__assert_fail@plt+0x5854>
   16824:	b	1687c <__assert_fail@plt+0x5854>
   16828:	ldr	r0, [fp, #8]
   1682c:	cmn	r0, #1
   16830:	bne	1687c <__assert_fail@plt+0x5854>
   16834:	b	16838 <__assert_fail@plt+0x5810>
   16838:	ldr	r0, [pc, #3884]	; 1776c <__assert_fail@plt+0x6744>
   1683c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16840:	add	r0, r1, r0
   16844:	movw	r1, #0
   16848:	cmp	r1, r0
   1684c:	blt	16938 <__assert_fail@plt+0x5910>
   16850:	b	16950 <__assert_fail@plt+0x5928>
   16854:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16858:	movw	r1, #0
   1685c:	cmp	r1, r0
   16860:	bge	16950 <__assert_fail@plt+0x5928>
   16864:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16868:	sub	r0, r0, #1
   1686c:	movw	r1, #32767	; 0x7fff
   16870:	cmp	r1, r0
   16874:	blt	16938 <__assert_fail@plt+0x5910>
   16878:	b	16950 <__assert_fail@plt+0x5928>
   1687c:	ldr	r0, [pc, #3816]	; 1776c <__assert_fail@plt+0x6744>
   16880:	ldr	r1, [fp, #8]
   16884:	sdiv	r0, r0, r1
   16888:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1688c:	cmp	r0, r1
   16890:	blt	16938 <__assert_fail@plt+0x5910>
   16894:	b	16950 <__assert_fail@plt+0x5928>
   16898:	ldr	r0, [fp, #8]
   1689c:	cmp	r0, #0
   168a0:	bne	168a8 <__assert_fail@plt+0x5880>
   168a4:	b	16950 <__assert_fail@plt+0x5928>
   168a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168ac:	cmp	r0, #0
   168b0:	bge	16920 <__assert_fail@plt+0x58f8>
   168b4:	b	168b8 <__assert_fail@plt+0x5890>
   168b8:	b	16904 <__assert_fail@plt+0x58dc>
   168bc:	b	16904 <__assert_fail@plt+0x58dc>
   168c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168c4:	cmn	r0, #1
   168c8:	bne	16904 <__assert_fail@plt+0x58dc>
   168cc:	b	168d0 <__assert_fail@plt+0x58a8>
   168d0:	ldr	r0, [pc, #3732]	; 1776c <__assert_fail@plt+0x6744>
   168d4:	ldr	r1, [fp, #8]
   168d8:	add	r0, r1, r0
   168dc:	movw	r1, #0
   168e0:	cmp	r1, r0
   168e4:	blt	16938 <__assert_fail@plt+0x5910>
   168e8:	b	16950 <__assert_fail@plt+0x5928>
   168ec:	ldr	r0, [fp, #8]
   168f0:	sub	r0, r0, #1
   168f4:	movw	r1, #32767	; 0x7fff
   168f8:	cmp	r1, r0
   168fc:	blt	16938 <__assert_fail@plt+0x5910>
   16900:	b	16950 <__assert_fail@plt+0x5928>
   16904:	ldr	r0, [pc, #3680]	; 1776c <__assert_fail@plt+0x6744>
   16908:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1690c:	sdiv	r0, r0, r1
   16910:	ldr	r1, [fp, #8]
   16914:	cmp	r0, r1
   16918:	blt	16938 <__assert_fail@plt+0x5910>
   1691c:	b	16950 <__assert_fail@plt+0x5928>
   16920:	ldr	r0, [fp, #8]
   16924:	movw	r1, #32767	; 0x7fff
   16928:	sdiv	r0, r1, r0
   1692c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16930:	cmp	r0, r1
   16934:	bge	16950 <__assert_fail@plt+0x5928>
   16938:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1693c:	ldr	r1, [fp, #8]
   16940:	mul	r0, r0, r1
   16944:	sxth	r0, r0
   16948:	str	r0, [fp, #-28]	; 0xffffffe4
   1694c:	b	17734 <__assert_fail@plt+0x670c>
   16950:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16954:	ldr	r1, [fp, #8]
   16958:	mul	r0, r0, r1
   1695c:	sxth	r0, r0
   16960:	str	r0, [fp, #-28]	; 0xffffffe4
   16964:	b	17738 <__assert_fail@plt+0x6710>
   16968:	ldr	r0, [fp, #8]
   1696c:	cmp	r0, #0
   16970:	bge	16a80 <__assert_fail@plt+0x5a58>
   16974:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16978:	cmp	r0, #0
   1697c:	bge	16a08 <__assert_fail@plt+0x59e0>
   16980:	b	16984 <__assert_fail@plt+0x595c>
   16984:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16988:	ldr	r1, [fp, #8]
   1698c:	movw	r2, #65535	; 0xffff
   16990:	sdiv	r1, r2, r1
   16994:	cmp	r0, r1
   16998:	blt	16b1c <__assert_fail@plt+0x5af4>
   1699c:	b	16b34 <__assert_fail@plt+0x5b0c>
   169a0:	b	169a4 <__assert_fail@plt+0x597c>
   169a4:	ldr	r0, [pc, #3512]	; 17764 <__assert_fail@plt+0x673c>
   169a8:	ldr	r1, [fp, #8]
   169ac:	cmp	r1, r0
   169b0:	blt	169c8 <__assert_fail@plt+0x59a0>
   169b4:	b	169d4 <__assert_fail@plt+0x59ac>
   169b8:	ldr	r0, [fp, #8]
   169bc:	movw	r1, #0
   169c0:	cmp	r1, r0
   169c4:	bge	169d4 <__assert_fail@plt+0x59ac>
   169c8:	movw	r0, #0
   169cc:	str	r0, [sp, #76]	; 0x4c
   169d0:	b	169ec <__assert_fail@plt+0x59c4>
   169d4:	ldr	r0, [fp, #8]
   169d8:	movw	r1, #0
   169dc:	sub	r0, r1, r0
   169e0:	movw	r1, #65535	; 0xffff
   169e4:	sdiv	r0, r1, r0
   169e8:	str	r0, [sp, #76]	; 0x4c
   169ec:	ldr	r0, [sp, #76]	; 0x4c
   169f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   169f4:	mvn	r2, #0
   169f8:	sub	r1, r2, r1
   169fc:	cmp	r0, r1
   16a00:	ble	16b1c <__assert_fail@plt+0x5af4>
   16a04:	b	16b34 <__assert_fail@plt+0x5b0c>
   16a08:	b	16a0c <__assert_fail@plt+0x59e4>
   16a0c:	b	16a64 <__assert_fail@plt+0x5a3c>
   16a10:	b	16a64 <__assert_fail@plt+0x5a3c>
   16a14:	ldr	r0, [fp, #8]
   16a18:	cmn	r0, #1
   16a1c:	bne	16a64 <__assert_fail@plt+0x5a3c>
   16a20:	b	16a24 <__assert_fail@plt+0x59fc>
   16a24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a28:	add	r0, r0, #0
   16a2c:	movw	r1, #0
   16a30:	cmp	r1, r0
   16a34:	blt	16b1c <__assert_fail@plt+0x5af4>
   16a38:	b	16b34 <__assert_fail@plt+0x5b0c>
   16a3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a40:	movw	r1, #0
   16a44:	cmp	r1, r0
   16a48:	bge	16b34 <__assert_fail@plt+0x5b0c>
   16a4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a50:	sub	r0, r0, #1
   16a54:	mvn	r1, #0
   16a58:	cmp	r1, r0
   16a5c:	blt	16b1c <__assert_fail@plt+0x5af4>
   16a60:	b	16b34 <__assert_fail@plt+0x5b0c>
   16a64:	ldr	r0, [fp, #8]
   16a68:	movw	r1, #0
   16a6c:	sdiv	r0, r1, r0
   16a70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a74:	cmp	r0, r1
   16a78:	blt	16b1c <__assert_fail@plt+0x5af4>
   16a7c:	b	16b34 <__assert_fail@plt+0x5b0c>
   16a80:	ldr	r0, [fp, #8]
   16a84:	cmp	r0, #0
   16a88:	bne	16a90 <__assert_fail@plt+0x5a68>
   16a8c:	b	16b34 <__assert_fail@plt+0x5b0c>
   16a90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a94:	cmp	r0, #0
   16a98:	bge	16b04 <__assert_fail@plt+0x5adc>
   16a9c:	b	16aa0 <__assert_fail@plt+0x5a78>
   16aa0:	b	16ae8 <__assert_fail@plt+0x5ac0>
   16aa4:	b	16ae8 <__assert_fail@plt+0x5ac0>
   16aa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16aac:	cmn	r0, #1
   16ab0:	bne	16ae8 <__assert_fail@plt+0x5ac0>
   16ab4:	b	16ab8 <__assert_fail@plt+0x5a90>
   16ab8:	ldr	r0, [fp, #8]
   16abc:	add	r0, r0, #0
   16ac0:	movw	r1, #0
   16ac4:	cmp	r1, r0
   16ac8:	blt	16b1c <__assert_fail@plt+0x5af4>
   16acc:	b	16b34 <__assert_fail@plt+0x5b0c>
   16ad0:	ldr	r0, [fp, #8]
   16ad4:	sub	r0, r0, #1
   16ad8:	mvn	r1, #0
   16adc:	cmp	r1, r0
   16ae0:	blt	16b1c <__assert_fail@plt+0x5af4>
   16ae4:	b	16b34 <__assert_fail@plt+0x5b0c>
   16ae8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16aec:	movw	r1, #0
   16af0:	sdiv	r0, r1, r0
   16af4:	ldr	r1, [fp, #8]
   16af8:	cmp	r0, r1
   16afc:	blt	16b1c <__assert_fail@plt+0x5af4>
   16b00:	b	16b34 <__assert_fail@plt+0x5b0c>
   16b04:	ldr	r0, [fp, #8]
   16b08:	movw	r1, #65535	; 0xffff
   16b0c:	sdiv	r0, r1, r0
   16b10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b14:	cmp	r0, r1
   16b18:	bge	16b34 <__assert_fail@plt+0x5b0c>
   16b1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b20:	ldr	r1, [fp, #8]
   16b24:	mul	r0, r0, r1
   16b28:	uxth	r0, r0
   16b2c:	str	r0, [fp, #-28]	; 0xffffffe4
   16b30:	b	17734 <__assert_fail@plt+0x670c>
   16b34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b38:	ldr	r1, [fp, #8]
   16b3c:	mul	r0, r0, r1
   16b40:	uxth	r0, r0
   16b44:	str	r0, [fp, #-28]	; 0xffffffe4
   16b48:	b	17738 <__assert_fail@plt+0x6710>
   16b4c:	b	16b50 <__assert_fail@plt+0x5b28>
   16b50:	b	16b54 <__assert_fail@plt+0x5b2c>
   16b54:	ldr	r0, [fp, #8]
   16b58:	cmp	r0, #0
   16b5c:	bge	16c60 <__assert_fail@plt+0x5c38>
   16b60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b64:	cmp	r0, #0
   16b68:	bge	16bf4 <__assert_fail@plt+0x5bcc>
   16b6c:	b	16b70 <__assert_fail@plt+0x5b48>
   16b70:	ldr	r0, [pc, #3048]	; 17760 <__assert_fail@plt+0x6738>
   16b74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b78:	ldr	r2, [fp, #8]
   16b7c:	sdiv	r0, r0, r2
   16b80:	cmp	r1, r0
   16b84:	blt	16cf0 <__assert_fail@plt+0x5cc8>
   16b88:	b	16d04 <__assert_fail@plt+0x5cdc>
   16b8c:	b	16b90 <__assert_fail@plt+0x5b68>
   16b90:	ldr	r0, [pc, #3020]	; 17764 <__assert_fail@plt+0x673c>
   16b94:	ldr	r1, [fp, #8]
   16b98:	cmp	r1, r0
   16b9c:	blt	16bb4 <__assert_fail@plt+0x5b8c>
   16ba0:	b	16bc0 <__assert_fail@plt+0x5b98>
   16ba4:	ldr	r0, [fp, #8]
   16ba8:	movw	r1, #0
   16bac:	cmp	r1, r0
   16bb0:	bge	16bc0 <__assert_fail@plt+0x5b98>
   16bb4:	movw	r0, #0
   16bb8:	str	r0, [sp, #72]	; 0x48
   16bbc:	b	16bd8 <__assert_fail@plt+0x5bb0>
   16bc0:	ldr	r0, [pc, #2968]	; 17760 <__assert_fail@plt+0x6738>
   16bc4:	ldr	r1, [fp, #8]
   16bc8:	movw	r2, #0
   16bcc:	sub	r1, r2, r1
   16bd0:	sdiv	r0, r0, r1
   16bd4:	str	r0, [sp, #72]	; 0x48
   16bd8:	ldr	r0, [sp, #72]	; 0x48
   16bdc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16be0:	mvn	r2, #0
   16be4:	sub	r1, r2, r1
   16be8:	cmp	r0, r1
   16bec:	ble	16cf0 <__assert_fail@plt+0x5cc8>
   16bf0:	b	16d04 <__assert_fail@plt+0x5cdc>
   16bf4:	ldr	r0, [fp, #8]
   16bf8:	cmn	r0, #1
   16bfc:	bne	16c44 <__assert_fail@plt+0x5c1c>
   16c00:	b	16c04 <__assert_fail@plt+0x5bdc>
   16c04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c08:	add	r0, r0, #-2147483648	; 0x80000000
   16c0c:	movw	r1, #0
   16c10:	cmp	r1, r0
   16c14:	blt	16cf0 <__assert_fail@plt+0x5cc8>
   16c18:	b	16d04 <__assert_fail@plt+0x5cdc>
   16c1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c20:	movw	r1, #0
   16c24:	cmp	r1, r0
   16c28:	bge	16d04 <__assert_fail@plt+0x5cdc>
   16c2c:	ldr	r0, [pc, #2860]	; 17760 <__assert_fail@plt+0x6738>
   16c30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16c34:	sub	r1, r1, #1
   16c38:	cmp	r0, r1
   16c3c:	blt	16cf0 <__assert_fail@plt+0x5cc8>
   16c40:	b	16d04 <__assert_fail@plt+0x5cdc>
   16c44:	ldr	r0, [pc, #2844]	; 17768 <__assert_fail@plt+0x6740>
   16c48:	ldr	r1, [fp, #8]
   16c4c:	sdiv	r0, r0, r1
   16c50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16c54:	cmp	r0, r1
   16c58:	blt	16cf0 <__assert_fail@plt+0x5cc8>
   16c5c:	b	16d04 <__assert_fail@plt+0x5cdc>
   16c60:	ldr	r0, [fp, #8]
   16c64:	cmp	r0, #0
   16c68:	bne	16c70 <__assert_fail@plt+0x5c48>
   16c6c:	b	16d04 <__assert_fail@plt+0x5cdc>
   16c70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c74:	cmp	r0, #0
   16c78:	bge	16cd8 <__assert_fail@plt+0x5cb0>
   16c7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c80:	cmn	r0, #1
   16c84:	bne	16cbc <__assert_fail@plt+0x5c94>
   16c88:	b	16c8c <__assert_fail@plt+0x5c64>
   16c8c:	ldr	r0, [fp, #8]
   16c90:	add	r0, r0, #-2147483648	; 0x80000000
   16c94:	movw	r1, #0
   16c98:	cmp	r1, r0
   16c9c:	blt	16cf0 <__assert_fail@plt+0x5cc8>
   16ca0:	b	16d04 <__assert_fail@plt+0x5cdc>
   16ca4:	ldr	r0, [pc, #2740]	; 17760 <__assert_fail@plt+0x6738>
   16ca8:	ldr	r1, [fp, #8]
   16cac:	sub	r1, r1, #1
   16cb0:	cmp	r0, r1
   16cb4:	blt	16cf0 <__assert_fail@plt+0x5cc8>
   16cb8:	b	16d04 <__assert_fail@plt+0x5cdc>
   16cbc:	ldr	r0, [pc, #2724]	; 17768 <__assert_fail@plt+0x6740>
   16cc0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16cc4:	sdiv	r0, r0, r1
   16cc8:	ldr	r1, [fp, #8]
   16ccc:	cmp	r0, r1
   16cd0:	blt	16cf0 <__assert_fail@plt+0x5cc8>
   16cd4:	b	16d04 <__assert_fail@plt+0x5cdc>
   16cd8:	ldr	r0, [pc, #2688]	; 17760 <__assert_fail@plt+0x6738>
   16cdc:	ldr	r1, [fp, #8]
   16ce0:	sdiv	r0, r0, r1
   16ce4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ce8:	cmp	r0, r1
   16cec:	bge	16d04 <__assert_fail@plt+0x5cdc>
   16cf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16cf4:	ldr	r1, [fp, #8]
   16cf8:	mul	r0, r0, r1
   16cfc:	str	r0, [fp, #-28]	; 0xffffffe4
   16d00:	b	17734 <__assert_fail@plt+0x670c>
   16d04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d08:	ldr	r1, [fp, #8]
   16d0c:	mul	r0, r0, r1
   16d10:	str	r0, [fp, #-28]	; 0xffffffe4
   16d14:	b	17738 <__assert_fail@plt+0x6710>
   16d18:	ldr	r0, [fp, #8]
   16d1c:	cmp	r0, #0
   16d20:	bge	16e30 <__assert_fail@plt+0x5e08>
   16d24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d28:	cmp	r0, #0
   16d2c:	bge	16db8 <__assert_fail@plt+0x5d90>
   16d30:	b	16d50 <__assert_fail@plt+0x5d28>
   16d34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d38:	ldr	r1, [fp, #8]
   16d3c:	mvn	r2, #0
   16d40:	udiv	r1, r2, r1
   16d44:	cmp	r0, r1
   16d48:	bcc	16ecc <__assert_fail@plt+0x5ea4>
   16d4c:	b	16ee0 <__assert_fail@plt+0x5eb8>
   16d50:	b	16d54 <__assert_fail@plt+0x5d2c>
   16d54:	ldr	r0, [pc, #2568]	; 17764 <__assert_fail@plt+0x673c>
   16d58:	ldr	r1, [fp, #8]
   16d5c:	cmp	r1, r0
   16d60:	blt	16d78 <__assert_fail@plt+0x5d50>
   16d64:	b	16d84 <__assert_fail@plt+0x5d5c>
   16d68:	ldr	r0, [fp, #8]
   16d6c:	movw	r1, #0
   16d70:	cmp	r1, r0
   16d74:	bge	16d84 <__assert_fail@plt+0x5d5c>
   16d78:	movw	r0, #1
   16d7c:	str	r0, [sp, #68]	; 0x44
   16d80:	b	16d9c <__assert_fail@plt+0x5d74>
   16d84:	ldr	r0, [fp, #8]
   16d88:	movw	r1, #0
   16d8c:	sub	r0, r1, r0
   16d90:	mvn	r1, #0
   16d94:	udiv	r0, r1, r0
   16d98:	str	r0, [sp, #68]	; 0x44
   16d9c:	ldr	r0, [sp, #68]	; 0x44
   16da0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16da4:	mvn	r2, #0
   16da8:	sub	r1, r2, r1
   16dac:	cmp	r0, r1
   16db0:	bls	16ecc <__assert_fail@plt+0x5ea4>
   16db4:	b	16ee0 <__assert_fail@plt+0x5eb8>
   16db8:	b	16dbc <__assert_fail@plt+0x5d94>
   16dbc:	b	16e14 <__assert_fail@plt+0x5dec>
   16dc0:	b	16e14 <__assert_fail@plt+0x5dec>
   16dc4:	ldr	r0, [fp, #8]
   16dc8:	cmn	r0, #1
   16dcc:	bne	16e14 <__assert_fail@plt+0x5dec>
   16dd0:	b	16dd4 <__assert_fail@plt+0x5dac>
   16dd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16dd8:	add	r0, r0, #0
   16ddc:	movw	r1, #0
   16de0:	cmp	r1, r0
   16de4:	blt	16ecc <__assert_fail@plt+0x5ea4>
   16de8:	b	16ee0 <__assert_fail@plt+0x5eb8>
   16dec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16df0:	movw	r1, #0
   16df4:	cmp	r1, r0
   16df8:	bge	16ee0 <__assert_fail@plt+0x5eb8>
   16dfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e00:	sub	r0, r0, #1
   16e04:	mvn	r1, #0
   16e08:	cmp	r1, r0
   16e0c:	blt	16ecc <__assert_fail@plt+0x5ea4>
   16e10:	b	16ee0 <__assert_fail@plt+0x5eb8>
   16e14:	ldr	r0, [fp, #8]
   16e18:	movw	r1, #0
   16e1c:	sdiv	r0, r1, r0
   16e20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e24:	cmp	r0, r1
   16e28:	blt	16ecc <__assert_fail@plt+0x5ea4>
   16e2c:	b	16ee0 <__assert_fail@plt+0x5eb8>
   16e30:	ldr	r0, [fp, #8]
   16e34:	cmp	r0, #0
   16e38:	bne	16e40 <__assert_fail@plt+0x5e18>
   16e3c:	b	16ee0 <__assert_fail@plt+0x5eb8>
   16e40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e44:	cmp	r0, #0
   16e48:	bge	16eb4 <__assert_fail@plt+0x5e8c>
   16e4c:	b	16e50 <__assert_fail@plt+0x5e28>
   16e50:	b	16e98 <__assert_fail@plt+0x5e70>
   16e54:	b	16e98 <__assert_fail@plt+0x5e70>
   16e58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e5c:	cmn	r0, #1
   16e60:	bne	16e98 <__assert_fail@plt+0x5e70>
   16e64:	b	16e68 <__assert_fail@plt+0x5e40>
   16e68:	ldr	r0, [fp, #8]
   16e6c:	add	r0, r0, #0
   16e70:	movw	r1, #0
   16e74:	cmp	r1, r0
   16e78:	blt	16ecc <__assert_fail@plt+0x5ea4>
   16e7c:	b	16ee0 <__assert_fail@plt+0x5eb8>
   16e80:	ldr	r0, [fp, #8]
   16e84:	sub	r0, r0, #1
   16e88:	mvn	r1, #0
   16e8c:	cmp	r1, r0
   16e90:	blt	16ecc <__assert_fail@plt+0x5ea4>
   16e94:	b	16ee0 <__assert_fail@plt+0x5eb8>
   16e98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e9c:	movw	r1, #0
   16ea0:	sdiv	r0, r1, r0
   16ea4:	ldr	r1, [fp, #8]
   16ea8:	cmp	r0, r1
   16eac:	blt	16ecc <__assert_fail@plt+0x5ea4>
   16eb0:	b	16ee0 <__assert_fail@plt+0x5eb8>
   16eb4:	ldr	r0, [fp, #8]
   16eb8:	mvn	r1, #0
   16ebc:	udiv	r0, r1, r0
   16ec0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ec4:	cmp	r0, r1
   16ec8:	bcs	16ee0 <__assert_fail@plt+0x5eb8>
   16ecc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ed0:	ldr	r1, [fp, #8]
   16ed4:	mul	r0, r0, r1
   16ed8:	str	r0, [fp, #-28]	; 0xffffffe4
   16edc:	b	17734 <__assert_fail@plt+0x670c>
   16ee0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ee4:	ldr	r1, [fp, #8]
   16ee8:	mul	r0, r0, r1
   16eec:	str	r0, [fp, #-28]	; 0xffffffe4
   16ef0:	b	17738 <__assert_fail@plt+0x6710>
   16ef4:	b	16ef8 <__assert_fail@plt+0x5ed0>
   16ef8:	b	16efc <__assert_fail@plt+0x5ed4>
   16efc:	ldr	r0, [fp, #8]
   16f00:	cmp	r0, #0
   16f04:	bge	17008 <__assert_fail@plt+0x5fe0>
   16f08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f0c:	cmp	r0, #0
   16f10:	bge	16f9c <__assert_fail@plt+0x5f74>
   16f14:	b	16f18 <__assert_fail@plt+0x5ef0>
   16f18:	ldr	r0, [pc, #2112]	; 17760 <__assert_fail@plt+0x6738>
   16f1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f20:	ldr	r2, [fp, #8]
   16f24:	sdiv	r0, r0, r2
   16f28:	cmp	r1, r0
   16f2c:	blt	17098 <__assert_fail@plt+0x6070>
   16f30:	b	170ac <__assert_fail@plt+0x6084>
   16f34:	b	16f38 <__assert_fail@plt+0x5f10>
   16f38:	ldr	r0, [pc, #2084]	; 17764 <__assert_fail@plt+0x673c>
   16f3c:	ldr	r1, [fp, #8]
   16f40:	cmp	r1, r0
   16f44:	blt	16f5c <__assert_fail@plt+0x5f34>
   16f48:	b	16f68 <__assert_fail@plt+0x5f40>
   16f4c:	ldr	r0, [fp, #8]
   16f50:	movw	r1, #0
   16f54:	cmp	r1, r0
   16f58:	bge	16f68 <__assert_fail@plt+0x5f40>
   16f5c:	movw	r0, #0
   16f60:	str	r0, [sp, #64]	; 0x40
   16f64:	b	16f80 <__assert_fail@plt+0x5f58>
   16f68:	ldr	r0, [pc, #2032]	; 17760 <__assert_fail@plt+0x6738>
   16f6c:	ldr	r1, [fp, #8]
   16f70:	movw	r2, #0
   16f74:	sub	r1, r2, r1
   16f78:	sdiv	r0, r0, r1
   16f7c:	str	r0, [sp, #64]	; 0x40
   16f80:	ldr	r0, [sp, #64]	; 0x40
   16f84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f88:	mvn	r2, #0
   16f8c:	sub	r1, r2, r1
   16f90:	cmp	r0, r1
   16f94:	ble	17098 <__assert_fail@plt+0x6070>
   16f98:	b	170ac <__assert_fail@plt+0x6084>
   16f9c:	ldr	r0, [fp, #8]
   16fa0:	cmn	r0, #1
   16fa4:	bne	16fec <__assert_fail@plt+0x5fc4>
   16fa8:	b	16fac <__assert_fail@plt+0x5f84>
   16fac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fb0:	add	r0, r0, #-2147483648	; 0x80000000
   16fb4:	movw	r1, #0
   16fb8:	cmp	r1, r0
   16fbc:	blt	17098 <__assert_fail@plt+0x6070>
   16fc0:	b	170ac <__assert_fail@plt+0x6084>
   16fc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fc8:	movw	r1, #0
   16fcc:	cmp	r1, r0
   16fd0:	bge	170ac <__assert_fail@plt+0x6084>
   16fd4:	ldr	r0, [pc, #1924]	; 17760 <__assert_fail@plt+0x6738>
   16fd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16fdc:	sub	r1, r1, #1
   16fe0:	cmp	r0, r1
   16fe4:	blt	17098 <__assert_fail@plt+0x6070>
   16fe8:	b	170ac <__assert_fail@plt+0x6084>
   16fec:	ldr	r0, [pc, #1908]	; 17768 <__assert_fail@plt+0x6740>
   16ff0:	ldr	r1, [fp, #8]
   16ff4:	sdiv	r0, r0, r1
   16ff8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ffc:	cmp	r0, r1
   17000:	blt	17098 <__assert_fail@plt+0x6070>
   17004:	b	170ac <__assert_fail@plt+0x6084>
   17008:	ldr	r0, [fp, #8]
   1700c:	cmp	r0, #0
   17010:	bne	17018 <__assert_fail@plt+0x5ff0>
   17014:	b	170ac <__assert_fail@plt+0x6084>
   17018:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1701c:	cmp	r0, #0
   17020:	bge	17080 <__assert_fail@plt+0x6058>
   17024:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17028:	cmn	r0, #1
   1702c:	bne	17064 <__assert_fail@plt+0x603c>
   17030:	b	17034 <__assert_fail@plt+0x600c>
   17034:	ldr	r0, [fp, #8]
   17038:	add	r0, r0, #-2147483648	; 0x80000000
   1703c:	movw	r1, #0
   17040:	cmp	r1, r0
   17044:	blt	17098 <__assert_fail@plt+0x6070>
   17048:	b	170ac <__assert_fail@plt+0x6084>
   1704c:	ldr	r0, [pc, #1804]	; 17760 <__assert_fail@plt+0x6738>
   17050:	ldr	r1, [fp, #8]
   17054:	sub	r1, r1, #1
   17058:	cmp	r0, r1
   1705c:	blt	17098 <__assert_fail@plt+0x6070>
   17060:	b	170ac <__assert_fail@plt+0x6084>
   17064:	ldr	r0, [pc, #1788]	; 17768 <__assert_fail@plt+0x6740>
   17068:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1706c:	sdiv	r0, r0, r1
   17070:	ldr	r1, [fp, #8]
   17074:	cmp	r0, r1
   17078:	blt	17098 <__assert_fail@plt+0x6070>
   1707c:	b	170ac <__assert_fail@plt+0x6084>
   17080:	ldr	r0, [pc, #1752]	; 17760 <__assert_fail@plt+0x6738>
   17084:	ldr	r1, [fp, #8]
   17088:	sdiv	r0, r0, r1
   1708c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17090:	cmp	r0, r1
   17094:	bge	170ac <__assert_fail@plt+0x6084>
   17098:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1709c:	ldr	r1, [fp, #8]
   170a0:	mul	r0, r0, r1
   170a4:	str	r0, [fp, #-28]	; 0xffffffe4
   170a8:	b	17734 <__assert_fail@plt+0x670c>
   170ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170b0:	ldr	r1, [fp, #8]
   170b4:	mul	r0, r0, r1
   170b8:	str	r0, [fp, #-28]	; 0xffffffe4
   170bc:	b	17738 <__assert_fail@plt+0x6710>
   170c0:	ldr	r0, [fp, #8]
   170c4:	cmp	r0, #0
   170c8:	bge	171d8 <__assert_fail@plt+0x61b0>
   170cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170d0:	cmp	r0, #0
   170d4:	bge	17160 <__assert_fail@plt+0x6138>
   170d8:	b	170f8 <__assert_fail@plt+0x60d0>
   170dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170e0:	ldr	r1, [fp, #8]
   170e4:	mvn	r2, #0
   170e8:	udiv	r1, r2, r1
   170ec:	cmp	r0, r1
   170f0:	bcc	17274 <__assert_fail@plt+0x624c>
   170f4:	b	17288 <__assert_fail@plt+0x6260>
   170f8:	b	170fc <__assert_fail@plt+0x60d4>
   170fc:	ldr	r0, [pc, #1632]	; 17764 <__assert_fail@plt+0x673c>
   17100:	ldr	r1, [fp, #8]
   17104:	cmp	r1, r0
   17108:	blt	17120 <__assert_fail@plt+0x60f8>
   1710c:	b	1712c <__assert_fail@plt+0x6104>
   17110:	ldr	r0, [fp, #8]
   17114:	movw	r1, #0
   17118:	cmp	r1, r0
   1711c:	bge	1712c <__assert_fail@plt+0x6104>
   17120:	movw	r0, #1
   17124:	str	r0, [sp, #60]	; 0x3c
   17128:	b	17144 <__assert_fail@plt+0x611c>
   1712c:	ldr	r0, [fp, #8]
   17130:	movw	r1, #0
   17134:	sub	r0, r1, r0
   17138:	mvn	r1, #0
   1713c:	udiv	r0, r1, r0
   17140:	str	r0, [sp, #60]	; 0x3c
   17144:	ldr	r0, [sp, #60]	; 0x3c
   17148:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1714c:	mvn	r2, #0
   17150:	sub	r1, r2, r1
   17154:	cmp	r0, r1
   17158:	bls	17274 <__assert_fail@plt+0x624c>
   1715c:	b	17288 <__assert_fail@plt+0x6260>
   17160:	b	17164 <__assert_fail@plt+0x613c>
   17164:	b	171bc <__assert_fail@plt+0x6194>
   17168:	b	171bc <__assert_fail@plt+0x6194>
   1716c:	ldr	r0, [fp, #8]
   17170:	cmn	r0, #1
   17174:	bne	171bc <__assert_fail@plt+0x6194>
   17178:	b	1717c <__assert_fail@plt+0x6154>
   1717c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17180:	add	r0, r0, #0
   17184:	movw	r1, #0
   17188:	cmp	r1, r0
   1718c:	blt	17274 <__assert_fail@plt+0x624c>
   17190:	b	17288 <__assert_fail@plt+0x6260>
   17194:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17198:	movw	r1, #0
   1719c:	cmp	r1, r0
   171a0:	bge	17288 <__assert_fail@plt+0x6260>
   171a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171a8:	sub	r0, r0, #1
   171ac:	mvn	r1, #0
   171b0:	cmp	r1, r0
   171b4:	blt	17274 <__assert_fail@plt+0x624c>
   171b8:	b	17288 <__assert_fail@plt+0x6260>
   171bc:	ldr	r0, [fp, #8]
   171c0:	movw	r1, #0
   171c4:	sdiv	r0, r1, r0
   171c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   171cc:	cmp	r0, r1
   171d0:	blt	17274 <__assert_fail@plt+0x624c>
   171d4:	b	17288 <__assert_fail@plt+0x6260>
   171d8:	ldr	r0, [fp, #8]
   171dc:	cmp	r0, #0
   171e0:	bne	171e8 <__assert_fail@plt+0x61c0>
   171e4:	b	17288 <__assert_fail@plt+0x6260>
   171e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171ec:	cmp	r0, #0
   171f0:	bge	1725c <__assert_fail@plt+0x6234>
   171f4:	b	171f8 <__assert_fail@plt+0x61d0>
   171f8:	b	17240 <__assert_fail@plt+0x6218>
   171fc:	b	17240 <__assert_fail@plt+0x6218>
   17200:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17204:	cmn	r0, #1
   17208:	bne	17240 <__assert_fail@plt+0x6218>
   1720c:	b	17210 <__assert_fail@plt+0x61e8>
   17210:	ldr	r0, [fp, #8]
   17214:	add	r0, r0, #0
   17218:	movw	r1, #0
   1721c:	cmp	r1, r0
   17220:	blt	17274 <__assert_fail@plt+0x624c>
   17224:	b	17288 <__assert_fail@plt+0x6260>
   17228:	ldr	r0, [fp, #8]
   1722c:	sub	r0, r0, #1
   17230:	mvn	r1, #0
   17234:	cmp	r1, r0
   17238:	blt	17274 <__assert_fail@plt+0x624c>
   1723c:	b	17288 <__assert_fail@plt+0x6260>
   17240:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17244:	movw	r1, #0
   17248:	sdiv	r0, r1, r0
   1724c:	ldr	r1, [fp, #8]
   17250:	cmp	r0, r1
   17254:	blt	17274 <__assert_fail@plt+0x624c>
   17258:	b	17288 <__assert_fail@plt+0x6260>
   1725c:	ldr	r0, [fp, #8]
   17260:	mvn	r1, #0
   17264:	udiv	r0, r1, r0
   17268:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1726c:	cmp	r0, r1
   17270:	bcs	17288 <__assert_fail@plt+0x6260>
   17274:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17278:	ldr	r1, [fp, #8]
   1727c:	mul	r0, r0, r1
   17280:	str	r0, [fp, #-28]	; 0xffffffe4
   17284:	b	17734 <__assert_fail@plt+0x670c>
   17288:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1728c:	ldr	r1, [fp, #8]
   17290:	mul	r0, r0, r1
   17294:	str	r0, [fp, #-28]	; 0xffffffe4
   17298:	b	17738 <__assert_fail@plt+0x6710>
   1729c:	b	172a0 <__assert_fail@plt+0x6278>
   172a0:	ldr	r0, [fp, #8]
   172a4:	cmp	r0, #0
   172a8:	bge	17410 <__assert_fail@plt+0x63e8>
   172ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172b0:	cmp	r0, #0
   172b4:	bge	1738c <__assert_fail@plt+0x6364>
   172b8:	b	172bc <__assert_fail@plt+0x6294>
   172bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172c0:	ldr	r1, [fp, #8]
   172c4:	asr	r3, r1, #31
   172c8:	mvn	r2, #0
   172cc:	mvn	ip, #-2147483648	; 0x80000000
   172d0:	str	r0, [sp, #56]	; 0x38
   172d4:	mov	r0, r2
   172d8:	str	r1, [sp, #52]	; 0x34
   172dc:	mov	r1, ip
   172e0:	ldr	r2, [sp, #52]	; 0x34
   172e4:	bl	1bfb0 <__assert_fail@plt+0xaf88>
   172e8:	ldr	r2, [sp, #56]	; 0x38
   172ec:	subs	r0, r2, r0
   172f0:	rscs	r1, r1, r2, asr #31
   172f4:	blt	174d8 <__assert_fail@plt+0x64b0>
   172f8:	b	174ec <__assert_fail@plt+0x64c4>
   172fc:	b	17300 <__assert_fail@plt+0x62d8>
   17300:	ldr	r0, [pc, #1116]	; 17764 <__assert_fail@plt+0x673c>
   17304:	ldr	r1, [fp, #8]
   17308:	cmp	r1, r0
   1730c:	blt	17324 <__assert_fail@plt+0x62fc>
   17310:	b	17338 <__assert_fail@plt+0x6310>
   17314:	ldr	r0, [fp, #8]
   17318:	movw	r1, #0
   1731c:	cmp	r1, r0
   17320:	bge	17338 <__assert_fail@plt+0x6310>
   17324:	mov	r0, #0
   17328:	mvn	r1, #0
   1732c:	str	r1, [sp, #48]	; 0x30
   17330:	str	r0, [sp, #44]	; 0x2c
   17334:	b	1736c <__assert_fail@plt+0x6344>
   17338:	ldr	r0, [fp, #8]
   1733c:	rsb	r0, r0, #0
   17340:	asr	r3, r0, #31
   17344:	mvn	r1, #0
   17348:	mvn	r2, #-2147483648	; 0x80000000
   1734c:	str	r0, [sp, #40]	; 0x28
   17350:	mov	r0, r1
   17354:	mov	r1, r2
   17358:	ldr	r2, [sp, #40]	; 0x28
   1735c:	bl	1bfb0 <__assert_fail@plt+0xaf88>
   17360:	str	r0, [sp, #48]	; 0x30
   17364:	str	r1, [sp, #44]	; 0x2c
   17368:	b	1736c <__assert_fail@plt+0x6344>
   1736c:	ldr	r0, [sp, #44]	; 0x2c
   17370:	ldr	r1, [sp, #48]	; 0x30
   17374:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17378:	mvn	r2, r2
   1737c:	subs	r1, r2, r1
   17380:	rscs	r0, r0, r2, asr #31
   17384:	bge	174d8 <__assert_fail@plt+0x64b0>
   17388:	b	174ec <__assert_fail@plt+0x64c4>
   1738c:	ldr	r0, [fp, #8]
   17390:	cmn	r0, #1
   17394:	bne	173d8 <__assert_fail@plt+0x63b0>
   17398:	b	1739c <__assert_fail@plt+0x6374>
   1739c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173a0:	mov	r1, #-2147483648	; 0x80000000
   173a4:	add	r1, r1, r0, asr #31
   173a8:	rsbs	r0, r0, #0
   173ac:	rscs	r1, r1, #0
   173b0:	blt	174d8 <__assert_fail@plt+0x64b0>
   173b4:	b	174ec <__assert_fail@plt+0x64c4>
   173b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173bc:	movw	r1, #0
   173c0:	cmp	r1, r0
   173c4:	bge	174ec <__assert_fail@plt+0x64c4>
   173c8:	mov	r0, #0
   173cc:	cmp	r0, #0
   173d0:	bne	174d8 <__assert_fail@plt+0x64b0>
   173d4:	b	174ec <__assert_fail@plt+0x64c4>
   173d8:	ldr	r0, [fp, #8]
   173dc:	asr	r3, r0, #31
   173e0:	mov	r1, #0
   173e4:	mov	r2, #-2147483648	; 0x80000000
   173e8:	str	r0, [sp, #36]	; 0x24
   173ec:	mov	r0, r1
   173f0:	mov	r1, r2
   173f4:	ldr	r2, [sp, #36]	; 0x24
   173f8:	bl	1bfb0 <__assert_fail@plt+0xaf88>
   173fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17400:	subs	r0, r0, r2
   17404:	sbcs	r1, r1, r2, asr #31
   17408:	blt	174d8 <__assert_fail@plt+0x64b0>
   1740c:	b	174ec <__assert_fail@plt+0x64c4>
   17410:	ldr	r0, [fp, #8]
   17414:	cmp	r0, #0
   17418:	bne	17420 <__assert_fail@plt+0x63f8>
   1741c:	b	174ec <__assert_fail@plt+0x64c4>
   17420:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17424:	cmp	r0, #0
   17428:	bge	174a0 <__assert_fail@plt+0x6478>
   1742c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17430:	cmn	r0, #1
   17434:	bne	17468 <__assert_fail@plt+0x6440>
   17438:	b	1743c <__assert_fail@plt+0x6414>
   1743c:	ldr	r0, [fp, #8]
   17440:	mov	r1, #-2147483648	; 0x80000000
   17444:	add	r1, r1, r0, asr #31
   17448:	rsbs	r0, r0, #0
   1744c:	rscs	r1, r1, #0
   17450:	blt	174d8 <__assert_fail@plt+0x64b0>
   17454:	b	174ec <__assert_fail@plt+0x64c4>
   17458:	mov	r0, #0
   1745c:	cmp	r0, #0
   17460:	bne	174d8 <__assert_fail@plt+0x64b0>
   17464:	b	174ec <__assert_fail@plt+0x64c4>
   17468:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1746c:	asr	r3, r0, #31
   17470:	mov	r1, #0
   17474:	mov	r2, #-2147483648	; 0x80000000
   17478:	str	r0, [sp, #32]
   1747c:	mov	r0, r1
   17480:	mov	r1, r2
   17484:	ldr	r2, [sp, #32]
   17488:	bl	1bfb0 <__assert_fail@plt+0xaf88>
   1748c:	ldr	r2, [fp, #8]
   17490:	subs	r0, r0, r2
   17494:	sbcs	r1, r1, r2, asr #31
   17498:	blt	174d8 <__assert_fail@plt+0x64b0>
   1749c:	b	174ec <__assert_fail@plt+0x64c4>
   174a0:	ldr	r0, [fp, #8]
   174a4:	asr	r3, r0, #31
   174a8:	mvn	r1, #0
   174ac:	mvn	r2, #-2147483648	; 0x80000000
   174b0:	str	r0, [sp, #28]
   174b4:	mov	r0, r1
   174b8:	mov	r1, r2
   174bc:	ldr	r2, [sp, #28]
   174c0:	bl	1bfb0 <__assert_fail@plt+0xaf88>
   174c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   174c8:	subs	r0, r0, r2
   174cc:	sbcs	r1, r1, r2, asr #31
   174d0:	bge	174ec <__assert_fail@plt+0x64c4>
   174d4:	b	174d8 <__assert_fail@plt+0x64b0>
   174d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174dc:	ldr	r1, [fp, #8]
   174e0:	mul	r0, r0, r1
   174e4:	str	r0, [fp, #-28]	; 0xffffffe4
   174e8:	b	17734 <__assert_fail@plt+0x670c>
   174ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174f0:	ldr	r1, [fp, #8]
   174f4:	mul	r0, r0, r1
   174f8:	str	r0, [fp, #-28]	; 0xffffffe4
   174fc:	b	17738 <__assert_fail@plt+0x6710>
   17500:	ldr	r0, [fp, #8]
   17504:	cmp	r0, #0
   17508:	bge	17658 <__assert_fail@plt+0x6630>
   1750c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17510:	cmp	r0, #0
   17514:	bge	175e0 <__assert_fail@plt+0x65b8>
   17518:	b	17558 <__assert_fail@plt+0x6530>
   1751c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17520:	ldr	r1, [fp, #8]
   17524:	asr	r3, r1, #31
   17528:	mvn	r2, #0
   1752c:	str	r0, [sp, #24]
   17530:	mov	r0, r2
   17534:	str	r1, [sp, #20]
   17538:	mov	r1, r2
   1753c:	ldr	r2, [sp, #20]
   17540:	bl	1c084 <__assert_fail@plt+0xb05c>
   17544:	ldr	r2, [sp, #24]
   17548:	subs	r0, r2, r0
   1754c:	rscs	r1, r1, r2, asr #31
   17550:	bcc	1770c <__assert_fail@plt+0x66e4>
   17554:	b	17720 <__assert_fail@plt+0x66f8>
   17558:	b	1755c <__assert_fail@plt+0x6534>
   1755c:	ldr	r0, [pc, #512]	; 17764 <__assert_fail@plt+0x673c>
   17560:	ldr	r1, [fp, #8]
   17564:	cmp	r1, r0
   17568:	blt	17580 <__assert_fail@plt+0x6558>
   1756c:	b	17594 <__assert_fail@plt+0x656c>
   17570:	ldr	r0, [fp, #8]
   17574:	movw	r1, #0
   17578:	cmp	r1, r0
   1757c:	bge	17594 <__assert_fail@plt+0x656c>
   17580:	mov	r0, #1
   17584:	mvn	r1, #0
   17588:	str	r1, [sp, #16]
   1758c:	str	r0, [sp, #12]
   17590:	b	175c0 <__assert_fail@plt+0x6598>
   17594:	ldr	r0, [fp, #8]
   17598:	rsb	r0, r0, #0
   1759c:	asr	r3, r0, #31
   175a0:	mvn	r1, #0
   175a4:	str	r0, [sp, #8]
   175a8:	mov	r0, r1
   175ac:	ldr	r2, [sp, #8]
   175b0:	bl	1c084 <__assert_fail@plt+0xb05c>
   175b4:	str	r0, [sp, #16]
   175b8:	str	r1, [sp, #12]
   175bc:	b	175c0 <__assert_fail@plt+0x6598>
   175c0:	ldr	r0, [sp, #12]
   175c4:	ldr	r1, [sp, #16]
   175c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   175cc:	mvn	r2, r2
   175d0:	subs	r1, r2, r1
   175d4:	rscs	r0, r0, r2, asr #31
   175d8:	bcs	1770c <__assert_fail@plt+0x66e4>
   175dc:	b	17720 <__assert_fail@plt+0x66f8>
   175e0:	b	175e4 <__assert_fail@plt+0x65bc>
   175e4:	b	1763c <__assert_fail@plt+0x6614>
   175e8:	b	1763c <__assert_fail@plt+0x6614>
   175ec:	ldr	r0, [fp, #8]
   175f0:	cmn	r0, #1
   175f4:	bne	1763c <__assert_fail@plt+0x6614>
   175f8:	b	175fc <__assert_fail@plt+0x65d4>
   175fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17600:	add	r0, r0, #0
   17604:	movw	r1, #0
   17608:	cmp	r1, r0
   1760c:	blt	1770c <__assert_fail@plt+0x66e4>
   17610:	b	17720 <__assert_fail@plt+0x66f8>
   17614:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17618:	movw	r1, #0
   1761c:	cmp	r1, r0
   17620:	bge	17720 <__assert_fail@plt+0x66f8>
   17624:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17628:	sub	r0, r0, #1
   1762c:	mvn	r1, #0
   17630:	cmp	r1, r0
   17634:	blt	1770c <__assert_fail@plt+0x66e4>
   17638:	b	17720 <__assert_fail@plt+0x66f8>
   1763c:	ldr	r0, [fp, #8]
   17640:	movw	r1, #0
   17644:	sdiv	r0, r1, r0
   17648:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1764c:	cmp	r0, r1
   17650:	blt	1770c <__assert_fail@plt+0x66e4>
   17654:	b	17720 <__assert_fail@plt+0x66f8>
   17658:	ldr	r0, [fp, #8]
   1765c:	cmp	r0, #0
   17660:	bne	17668 <__assert_fail@plt+0x6640>
   17664:	b	17720 <__assert_fail@plt+0x66f8>
   17668:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1766c:	cmp	r0, #0
   17670:	bge	176dc <__assert_fail@plt+0x66b4>
   17674:	b	17678 <__assert_fail@plt+0x6650>
   17678:	b	176c0 <__assert_fail@plt+0x6698>
   1767c:	b	176c0 <__assert_fail@plt+0x6698>
   17680:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17684:	cmn	r0, #1
   17688:	bne	176c0 <__assert_fail@plt+0x6698>
   1768c:	b	17690 <__assert_fail@plt+0x6668>
   17690:	ldr	r0, [fp, #8]
   17694:	add	r0, r0, #0
   17698:	movw	r1, #0
   1769c:	cmp	r1, r0
   176a0:	blt	1770c <__assert_fail@plt+0x66e4>
   176a4:	b	17720 <__assert_fail@plt+0x66f8>
   176a8:	ldr	r0, [fp, #8]
   176ac:	sub	r0, r0, #1
   176b0:	mvn	r1, #0
   176b4:	cmp	r1, r0
   176b8:	blt	1770c <__assert_fail@plt+0x66e4>
   176bc:	b	17720 <__assert_fail@plt+0x66f8>
   176c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176c4:	movw	r1, #0
   176c8:	sdiv	r0, r1, r0
   176cc:	ldr	r1, [fp, #8]
   176d0:	cmp	r0, r1
   176d4:	blt	1770c <__assert_fail@plt+0x66e4>
   176d8:	b	17720 <__assert_fail@plt+0x66f8>
   176dc:	ldr	r0, [fp, #8]
   176e0:	asr	r3, r0, #31
   176e4:	mvn	r1, #0
   176e8:	str	r0, [sp, #4]
   176ec:	mov	r0, r1
   176f0:	ldr	r2, [sp, #4]
   176f4:	bl	1c084 <__assert_fail@plt+0xb05c>
   176f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   176fc:	subs	r0, r0, r2
   17700:	sbcs	r1, r1, r2, asr #31
   17704:	bcs	17720 <__assert_fail@plt+0x66f8>
   17708:	b	1770c <__assert_fail@plt+0x66e4>
   1770c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17710:	ldr	r1, [fp, #8]
   17714:	mul	r0, r0, r1
   17718:	str	r0, [fp, #-28]	; 0xffffffe4
   1771c:	b	17734 <__assert_fail@plt+0x670c>
   17720:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17724:	ldr	r1, [fp, #8]
   17728:	mul	r0, r0, r1
   1772c:	str	r0, [fp, #-28]	; 0xffffffe4
   17730:	b	17738 <__assert_fail@plt+0x6710>
   17734:	bl	17910 <__assert_fail@plt+0x68e8>
   17738:	ldr	r0, [fp, #-4]
   1773c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17740:	bl	14c70 <__assert_fail@plt+0x3c48>
   17744:	str	r0, [fp, #-4]
   17748:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1774c:	ldr	r1, [fp, #-8]
   17750:	str	r0, [r1]
   17754:	ldr	r0, [fp, #-4]
   17758:	mov	sp, fp
   1775c:	pop	{fp, pc}
   17760:	svcvc	0x00ffffff
   17764:	andhi	r0, r0, r1
   17768:	andhi	r0, r0, r0
   1776c:			; <UNDEFINED> instruction: 0xffff8000
   17770:	push	{fp, lr}
   17774:	mov	fp, sp
   17778:	sub	sp, sp, #8
   1777c:	str	r0, [sp, #4]
   17780:	ldr	r0, [sp, #4]
   17784:	movw	r1, #1
   17788:	bl	17794 <__assert_fail@plt+0x676c>
   1778c:	mov	sp, fp
   17790:	pop	{fp, pc}
   17794:	push	{fp, lr}
   17798:	mov	fp, sp
   1779c:	sub	sp, sp, #8
   177a0:	str	r0, [sp, #4]
   177a4:	str	r1, [sp]
   177a8:	ldr	r0, [sp, #4]
   177ac:	ldr	r1, [sp]
   177b0:	bl	19b40 <__assert_fail@plt+0x8b18>
   177b4:	bl	14bfc <__assert_fail@plt+0x3bd4>
   177b8:	mov	sp, fp
   177bc:	pop	{fp, pc}
   177c0:	push	{fp, lr}
   177c4:	mov	fp, sp
   177c8:	sub	sp, sp, #8
   177cc:	str	r0, [sp, #4]
   177d0:	ldr	r0, [sp, #4]
   177d4:	movw	r1, #1
   177d8:	bl	177e4 <__assert_fail@plt+0x67bc>
   177dc:	mov	sp, fp
   177e0:	pop	{fp, pc}
   177e4:	push	{fp, lr}
   177e8:	mov	fp, sp
   177ec:	sub	sp, sp, #8
   177f0:	str	r0, [sp, #4]
   177f4:	str	r1, [sp]
   177f8:	ldr	r0, [sp, #4]
   177fc:	ldr	r1, [sp]
   17800:	bl	1a85c <__assert_fail@plt+0x9834>
   17804:	bl	14bfc <__assert_fail@plt+0x3bd4>
   17808:	mov	sp, fp
   1780c:	pop	{fp, pc}
   17810:	push	{fp, lr}
   17814:	mov	fp, sp
   17818:	sub	sp, sp, #16
   1781c:	str	r0, [fp, #-4]
   17820:	str	r1, [sp, #8]
   17824:	ldr	r0, [sp, #8]
   17828:	bl	14bd8 <__assert_fail@plt+0x3bb0>
   1782c:	ldr	r1, [fp, #-4]
   17830:	ldr	r2, [sp, #8]
   17834:	str	r0, [sp, #4]
   17838:	bl	10e30 <memcpy@plt>
   1783c:	ldr	r0, [sp, #4]
   17840:	mov	sp, fp
   17844:	pop	{fp, pc}
   17848:	push	{fp, lr}
   1784c:	mov	fp, sp
   17850:	sub	sp, sp, #16
   17854:	str	r0, [fp, #-4]
   17858:	str	r1, [sp, #8]
   1785c:	ldr	r0, [sp, #8]
   17860:	bl	14c2c <__assert_fail@plt+0x3c04>
   17864:	ldr	r1, [fp, #-4]
   17868:	ldr	r2, [sp, #8]
   1786c:	str	r0, [sp, #4]
   17870:	bl	10e30 <memcpy@plt>
   17874:	ldr	r0, [sp, #4]
   17878:	mov	sp, fp
   1787c:	pop	{fp, pc}
   17880:	push	{fp, lr}
   17884:	mov	fp, sp
   17888:	sub	sp, sp, #16
   1788c:	str	r0, [fp, #-4]
   17890:	str	r1, [sp, #8]
   17894:	ldr	r0, [sp, #8]
   17898:	add	r0, r0, #1
   1789c:	bl	14c2c <__assert_fail@plt+0x3c04>
   178a0:	str	r0, [sp, #4]
   178a4:	ldr	r0, [sp, #4]
   178a8:	ldr	r1, [sp, #8]
   178ac:	add	r0, r0, r1
   178b0:	movw	r1, #0
   178b4:	strb	r1, [r0]
   178b8:	ldr	r0, [sp, #4]
   178bc:	ldr	r1, [fp, #-4]
   178c0:	ldr	r2, [sp, #8]
   178c4:	str	r0, [sp]
   178c8:	bl	10e30 <memcpy@plt>
   178cc:	ldr	r0, [sp]
   178d0:	mov	sp, fp
   178d4:	pop	{fp, pc}
   178d8:	push	{fp, lr}
   178dc:	mov	fp, sp
   178e0:	sub	sp, sp, #8
   178e4:	str	r0, [sp, #4]
   178e8:	ldr	r0, [sp, #4]
   178ec:	ldr	r1, [sp, #4]
   178f0:	str	r0, [sp]
   178f4:	mov	r0, r1
   178f8:	bl	10f50 <strlen@plt>
   178fc:	add	r1, r0, #1
   17900:	ldr	r0, [sp]
   17904:	bl	17810 <__assert_fail@plt+0x67e8>
   17908:	mov	sp, fp
   1790c:	pop	{fp, pc}
   17910:	push	{fp, lr}
   17914:	mov	fp, sp
   17918:	sub	sp, sp, #8
   1791c:	movw	r0, #53480	; 0xd0e8
   17920:	movt	r0, #2
   17924:	ldr	r0, [r0]
   17928:	movw	r1, #51884	; 0xcaac
   1792c:	movt	r1, #1
   17930:	str	r0, [sp, #4]
   17934:	mov	r0, r1
   17938:	bl	10f38 <gettext@plt>
   1793c:	ldr	r1, [sp, #4]
   17940:	str	r0, [sp]
   17944:	mov	r0, r1
   17948:	movw	r1, #0
   1794c:	movw	r2, #50799	; 0xc66f
   17950:	movt	r2, #1
   17954:	ldr	r3, [sp]
   17958:	bl	10ecc <error@plt>
   1795c:	bl	1101c <abort@plt>
   17960:	push	{r4, r5, r6, sl, fp, lr}
   17964:	add	fp, sp, #16
   17968:	sub	sp, sp, #88	; 0x58
   1796c:	ldr	ip, [fp, #12]
   17970:	ldr	lr, [fp, #8]
   17974:	ldr	r4, [fp, #24]
   17978:	ldr	r5, [fp, #20]
   1797c:	ldr	r6, [fp, #16]
   17980:	str	r0, [fp, #-20]	; 0xffffffec
   17984:	str	r1, [fp, #-24]	; 0xffffffe8
   17988:	str	r3, [fp, #-28]	; 0xffffffe4
   1798c:	str	r2, [fp, #-32]	; 0xffffffe0
   17990:	str	ip, [fp, #-36]	; 0xffffffdc
   17994:	str	lr, [fp, #-40]	; 0xffffffd8
   17998:	ldr	r0, [fp, #-20]	; 0xffffffec
   1799c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   179a0:	ldr	r1, [fp, #16]
   179a4:	movw	r3, #0
   179a8:	str	r1, [sp, #44]	; 0x2c
   179ac:	mov	r1, r3
   179b0:	add	r3, sp, #48	; 0x30
   179b4:	ldr	ip, [sp, #44]	; 0x2c
   179b8:	str	ip, [sp]
   179bc:	str	r4, [sp, #40]	; 0x28
   179c0:	str	r5, [sp, #36]	; 0x24
   179c4:	str	r6, [sp, #32]
   179c8:	bl	17bd8 <__assert_fail@plt+0x6bb0>
   179cc:	str	r0, [fp, #-44]	; 0xffffffd4
   179d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   179d4:	cmp	r0, #0
   179d8:	bne	17a60 <__assert_fail@plt+0x6a38>
   179dc:	ldr	r0, [sp, #48]	; 0x30
   179e0:	ldr	r1, [sp, #52]	; 0x34
   179e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   179e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   179ec:	subs	r0, r0, r2
   179f0:	sbcs	r1, r1, r3
   179f4:	bcc	17a1c <__assert_fail@plt+0x69f4>
   179f8:	b	179fc <__assert_fail@plt+0x69d4>
   179fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17a00:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17a04:	ldr	r2, [sp, #48]	; 0x30
   17a08:	ldr	r3, [sp, #52]	; 0x34
   17a0c:	subs	r0, r0, r2
   17a10:	sbcs	r1, r1, r3
   17a14:	bcs	17a5c <__assert_fail@plt+0x6a34>
   17a18:	b	17a1c <__assert_fail@plt+0x69f4>
   17a1c:	mov	r0, #1
   17a20:	str	r0, [fp, #-44]	; 0xffffffd4
   17a24:	ldr	r0, [sp, #48]	; 0x30
   17a28:	ldr	r1, [sp, #52]	; 0x34
   17a2c:	subs	r0, r0, #1073741824	; 0x40000000
   17a30:	sbcs	r1, r1, #0
   17a34:	bcc	17a4c <__assert_fail@plt+0x6a24>
   17a38:	b	17a3c <__assert_fail@plt+0x6a14>
   17a3c:	bl	10f74 <__errno_location@plt>
   17a40:	movw	r1, #75	; 0x4b
   17a44:	str	r1, [r0]
   17a48:	b	17a58 <__assert_fail@plt+0x6a30>
   17a4c:	bl	10f74 <__errno_location@plt>
   17a50:	movw	r1, #34	; 0x22
   17a54:	str	r1, [r0]
   17a58:	b	17a5c <__assert_fail@plt+0x6a34>
   17a5c:	b	17a9c <__assert_fail@plt+0x6a74>
   17a60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17a64:	cmp	r0, #1
   17a68:	bne	17a7c <__assert_fail@plt+0x6a54>
   17a6c:	bl	10f74 <__errno_location@plt>
   17a70:	movw	r1, #75	; 0x4b
   17a74:	str	r1, [r0]
   17a78:	b	17a98 <__assert_fail@plt+0x6a70>
   17a7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17a80:	cmp	r0, #3
   17a84:	bne	17a94 <__assert_fail@plt+0x6a6c>
   17a88:	bl	10f74 <__errno_location@plt>
   17a8c:	movw	r1, #0
   17a90:	str	r1, [r0]
   17a94:	b	17a98 <__assert_fail@plt+0x6a70>
   17a98:	b	17a9c <__assert_fail@plt+0x6a74>
   17a9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17aa0:	cmp	r0, #0
   17aa4:	beq	17b40 <__assert_fail@plt+0x6b18>
   17aa8:	ldr	r0, [fp, #24]
   17aac:	cmp	r0, #0
   17ab0:	beq	17ac0 <__assert_fail@plt+0x6a98>
   17ab4:	ldr	r0, [fp, #24]
   17ab8:	str	r0, [sp, #28]
   17abc:	b	17acc <__assert_fail@plt+0x6aa4>
   17ac0:	movw	r0, #1
   17ac4:	str	r0, [sp, #28]
   17ac8:	b	17acc <__assert_fail@plt+0x6aa4>
   17acc:	ldr	r0, [sp, #28]
   17ad0:	str	r0, [sp, #24]
   17ad4:	bl	10f74 <__errno_location@plt>
   17ad8:	ldr	r0, [r0]
   17adc:	cmp	r0, #22
   17ae0:	bne	17af0 <__assert_fail@plt+0x6ac8>
   17ae4:	movw	r0, #0
   17ae8:	str	r0, [sp, #20]
   17aec:	b	17afc <__assert_fail@plt+0x6ad4>
   17af0:	bl	10f74 <__errno_location@plt>
   17af4:	ldr	r0, [r0]
   17af8:	str	r0, [sp, #20]
   17afc:	ldr	r0, [sp, #20]
   17b00:	ldr	r3, [fp, #20]
   17b04:	ldr	r1, [fp, #-20]	; 0xffffffec
   17b08:	str	r0, [sp, #16]
   17b0c:	mov	r0, r1
   17b10:	str	r3, [sp, #12]
   17b14:	bl	141d4 <__assert_fail@plt+0x31ac>
   17b18:	ldr	r1, [sp, #24]
   17b1c:	str	r0, [sp, #8]
   17b20:	mov	r0, r1
   17b24:	ldr	r1, [sp, #16]
   17b28:	movw	r2, #50795	; 0xc66b
   17b2c:	movt	r2, #1
   17b30:	ldr	r3, [sp, #12]
   17b34:	ldr	ip, [sp, #8]
   17b38:	str	ip, [sp]
   17b3c:	bl	10ecc <error@plt>
   17b40:	ldr	r0, [sp, #48]	; 0x30
   17b44:	ldr	r1, [sp, #52]	; 0x34
   17b48:	sub	sp, fp, #16
   17b4c:	pop	{r4, r5, r6, sl, fp, pc}
   17b50:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17b54:	add	fp, sp, #24
   17b58:	sub	sp, sp, #56	; 0x38
   17b5c:	ldr	r1, [fp, #12]
   17b60:	ldr	ip, [fp, #8]
   17b64:	ldr	lr, [fp, #24]
   17b68:	ldr	r4, [fp, #20]
   17b6c:	ldr	r5, [fp, #16]
   17b70:	str	r0, [fp, #-28]	; 0xffffffe4
   17b74:	str	r3, [sp, #44]	; 0x2c
   17b78:	str	r2, [sp, #40]	; 0x28
   17b7c:	str	r1, [sp, #36]	; 0x24
   17b80:	str	ip, [sp, #32]
   17b84:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17b88:	ldr	r2, [sp, #40]	; 0x28
   17b8c:	ldr	r3, [sp, #44]	; 0x2c
   17b90:	ldr	r1, [sp, #32]
   17b94:	ldr	ip, [sp, #36]	; 0x24
   17b98:	ldr	r6, [fp, #16]
   17b9c:	ldr	r7, [fp, #20]
   17ba0:	ldr	r8, [fp, #24]
   17ba4:	mov	r9, sp
   17ba8:	str	r8, [r9, #16]
   17bac:	str	r7, [r9, #12]
   17bb0:	str	r6, [r9, #8]
   17bb4:	str	ip, [r9, #4]
   17bb8:	str	r1, [r9]
   17bbc:	mov	r1, #10
   17bc0:	str	lr, [sp, #28]
   17bc4:	str	r4, [sp, #24]
   17bc8:	str	r5, [sp, #20]
   17bcc:	bl	17960 <__assert_fail@plt+0x6938>
   17bd0:	sub	sp, fp, #24
   17bd4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17bd8:	push	{fp, lr}
   17bdc:	mov	fp, sp
   17be0:	sub	sp, sp, #80	; 0x50
   17be4:	ldr	ip, [fp, #8]
   17be8:	str	r0, [fp, #-8]
   17bec:	str	r1, [fp, #-12]
   17bf0:	str	r2, [fp, #-16]
   17bf4:	str	r3, [fp, #-20]	; 0xffffffec
   17bf8:	movw	r0, #0
   17bfc:	str	r0, [sp, #36]	; 0x24
   17c00:	ldr	r1, [fp, #-16]
   17c04:	cmp	r0, r1
   17c08:	bgt	17c1c <__assert_fail@plt+0x6bf4>
   17c0c:	ldr	r0, [fp, #-16]
   17c10:	cmp	r0, #36	; 0x24
   17c14:	bgt	17c1c <__assert_fail@plt+0x6bf4>
   17c18:	b	17c3c <__assert_fail@plt+0x6c14>
   17c1c:	movw	r0, #51901	; 0xcabd
   17c20:	movt	r0, #1
   17c24:	movw	r1, #51939	; 0xcae3
   17c28:	movt	r1, #1
   17c2c:	movw	r2, #85	; 0x55
   17c30:	movw	r3, #51955	; 0xcaf3
   17c34:	movt	r3, #1
   17c38:	bl	11028 <__assert_fail@plt>
   17c3c:	ldr	r0, [fp, #-12]
   17c40:	movw	r1, #0
   17c44:	cmp	r0, r1
   17c48:	beq	17c58 <__assert_fail@plt+0x6c30>
   17c4c:	ldr	r0, [fp, #-12]
   17c50:	str	r0, [sp, #12]
   17c54:	b	17c64 <__assert_fail@plt+0x6c3c>
   17c58:	sub	r0, fp, #24
   17c5c:	str	r0, [sp, #12]
   17c60:	b	17c64 <__assert_fail@plt+0x6c3c>
   17c64:	ldr	r0, [sp, #12]
   17c68:	str	r0, [fp, #-28]	; 0xffffffe4
   17c6c:	bl	10f74 <__errno_location@plt>
   17c70:	movw	r1, #0
   17c74:	str	r1, [r0]
   17c78:	ldr	r0, [fp, #-8]
   17c7c:	str	r0, [sp, #32]
   17c80:	ldr	r0, [sp, #32]
   17c84:	ldrb	r0, [r0]
   17c88:	strb	r0, [sp, #31]
   17c8c:	bl	10f20 <__ctype_b_loc@plt>
   17c90:	ldr	r0, [r0]
   17c94:	ldrb	r1, [sp, #31]
   17c98:	mov	r2, r1
   17c9c:	add	r0, r0, r1, lsl #1
   17ca0:	ldrh	r0, [r0]
   17ca4:	and	r0, r0, #8192	; 0x2000
   17ca8:	cmp	r0, #0
   17cac:	beq	17cc8 <__assert_fail@plt+0x6ca0>
   17cb0:	ldr	r0, [sp, #32]
   17cb4:	add	r1, r0, #1
   17cb8:	str	r1, [sp, #32]
   17cbc:	ldrb	r0, [r0, #1]
   17cc0:	strb	r0, [sp, #31]
   17cc4:	b	17c8c <__assert_fail@plt+0x6c64>
   17cc8:	ldrb	r0, [sp, #31]
   17ccc:	cmp	r0, #45	; 0x2d
   17cd0:	bne	17ce0 <__assert_fail@plt+0x6cb8>
   17cd4:	movw	r0, #4
   17cd8:	str	r0, [fp, #-4]
   17cdc:	b	1825c <__assert_fail@plt+0x7234>
   17ce0:	ldr	r0, [fp, #-8]
   17ce4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17ce8:	ldr	r2, [fp, #-16]
   17cec:	bl	10fa4 <strtoumax@plt>
   17cf0:	str	r1, [sp, #44]	; 0x2c
   17cf4:	str	r0, [sp, #40]	; 0x28
   17cf8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17cfc:	ldr	r0, [r0]
   17d00:	ldr	r1, [fp, #-8]
   17d04:	cmp	r0, r1
   17d08:	bne	17d74 <__assert_fail@plt+0x6d4c>
   17d0c:	ldr	r0, [fp, #8]
   17d10:	movw	r1, #0
   17d14:	cmp	r0, r1
   17d18:	beq	17d64 <__assert_fail@plt+0x6d3c>
   17d1c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17d20:	ldr	r0, [r0]
   17d24:	ldrb	r0, [r0]
   17d28:	cmp	r0, #0
   17d2c:	beq	17d64 <__assert_fail@plt+0x6d3c>
   17d30:	ldr	r0, [fp, #8]
   17d34:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17d38:	ldr	r1, [r1]
   17d3c:	ldrb	r1, [r1]
   17d40:	bl	10f5c <strchr@plt>
   17d44:	movw	r1, #0
   17d48:	cmp	r0, r1
   17d4c:	beq	17d64 <__assert_fail@plt+0x6d3c>
   17d50:	mov	r0, #0
   17d54:	str	r0, [sp, #44]	; 0x2c
   17d58:	mov	r0, #1
   17d5c:	str	r0, [sp, #40]	; 0x28
   17d60:	b	17d70 <__assert_fail@plt+0x6d48>
   17d64:	movw	r0, #4
   17d68:	str	r0, [fp, #-4]
   17d6c:	b	1825c <__assert_fail@plt+0x7234>
   17d70:	b	17dac <__assert_fail@plt+0x6d84>
   17d74:	bl	10f74 <__errno_location@plt>
   17d78:	ldr	r0, [r0]
   17d7c:	cmp	r0, #0
   17d80:	beq	17da8 <__assert_fail@plt+0x6d80>
   17d84:	bl	10f74 <__errno_location@plt>
   17d88:	ldr	r0, [r0]
   17d8c:	cmp	r0, #34	; 0x22
   17d90:	beq	17da0 <__assert_fail@plt+0x6d78>
   17d94:	movw	r0, #4
   17d98:	str	r0, [fp, #-4]
   17d9c:	b	1825c <__assert_fail@plt+0x7234>
   17da0:	movw	r0, #1
   17da4:	str	r0, [sp, #36]	; 0x24
   17da8:	b	17dac <__assert_fail@plt+0x6d84>
   17dac:	ldr	r0, [fp, #8]
   17db0:	movw	r1, #0
   17db4:	cmp	r0, r1
   17db8:	bne	17ddc <__assert_fail@plt+0x6db4>
   17dbc:	ldr	r0, [sp, #40]	; 0x28
   17dc0:	ldr	r1, [sp, #44]	; 0x2c
   17dc4:	ldr	r2, [fp, #-20]	; 0xffffffec
   17dc8:	str	r1, [r2, #4]
   17dcc:	str	r0, [r2]
   17dd0:	ldr	r0, [sp, #36]	; 0x24
   17dd4:	str	r0, [fp, #-4]
   17dd8:	b	1825c <__assert_fail@plt+0x7234>
   17ddc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17de0:	ldr	r0, [r0]
   17de4:	ldrb	r0, [r0]
   17de8:	cmp	r0, #0
   17dec:	beq	18240 <__assert_fail@plt+0x7218>
   17df0:	movw	r0, #1024	; 0x400
   17df4:	str	r0, [sp, #24]
   17df8:	movw	r0, #1
   17dfc:	str	r0, [sp, #20]
   17e00:	ldr	r0, [fp, #8]
   17e04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17e08:	ldr	r1, [r1]
   17e0c:	ldrb	r1, [r1]
   17e10:	bl	10f5c <strchr@plt>
   17e14:	movw	r1, #0
   17e18:	cmp	r0, r1
   17e1c:	bne	17e44 <__assert_fail@plt+0x6e1c>
   17e20:	ldr	r0, [sp, #40]	; 0x28
   17e24:	ldr	r1, [sp, #44]	; 0x2c
   17e28:	ldr	r2, [fp, #-20]	; 0xffffffec
   17e2c:	str	r1, [r2, #4]
   17e30:	str	r0, [r2]
   17e34:	ldr	r0, [sp, #36]	; 0x24
   17e38:	orr	r0, r0, #2
   17e3c:	str	r0, [fp, #-4]
   17e40:	b	1825c <__assert_fail@plt+0x7234>
   17e44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17e48:	ldr	r0, [r0]
   17e4c:	ldrb	r0, [r0]
   17e50:	sub	r0, r0, #69	; 0x45
   17e54:	cmp	r0, #47	; 0x2f
   17e58:	str	r0, [sp, #8]
   17e5c:	bhi	17fc8 <__assert_fail@plt+0x6fa0>
   17e60:	add	r0, pc, #8
   17e64:	ldr	r1, [sp, #8]
   17e68:	ldr	r0, [r0, r1, lsl #2]
   17e6c:	mov	pc, r0
   17e70:	andeq	r7, r1, r0, lsr pc
   17e74:	andeq	r7, r1, r8, asr #31
   17e78:	andeq	r7, r1, r0, lsr pc
   17e7c:	andeq	r7, r1, r8, asr #31
   17e80:	andeq	r7, r1, r8, asr #31
   17e84:	andeq	r7, r1, r8, asr #31
   17e88:	andeq	r7, r1, r0, lsr pc
   17e8c:	andeq	r7, r1, r8, asr #31
   17e90:	andeq	r7, r1, r0, lsr pc
   17e94:	andeq	r7, r1, r8, asr #31
   17e98:	andeq	r7, r1, r8, asr #31
   17e9c:	andeq	r7, r1, r0, lsr pc
   17ea0:	andeq	r7, r1, r8, asr #31
   17ea4:	andeq	r7, r1, r8, asr #31
   17ea8:	andeq	r7, r1, r8, asr #31
   17eac:	andeq	r7, r1, r0, lsr pc
   17eb0:	andeq	r7, r1, r8, asr #31
   17eb4:	andeq	r7, r1, r8, asr #31
   17eb8:	andeq	r7, r1, r8, asr #31
   17ebc:	andeq	r7, r1, r8, asr #31
   17ec0:	andeq	r7, r1, r0, lsr pc
   17ec4:	andeq	r7, r1, r0, lsr pc
   17ec8:	andeq	r7, r1, r8, asr #31
   17ecc:	andeq	r7, r1, r8, asr #31
   17ed0:	andeq	r7, r1, r8, asr #31
   17ed4:	andeq	r7, r1, r8, asr #31
   17ed8:	andeq	r7, r1, r8, asr #31
   17edc:	andeq	r7, r1, r8, asr #31
   17ee0:	andeq	r7, r1, r8, asr #31
   17ee4:	andeq	r7, r1, r8, asr #31
   17ee8:	andeq	r7, r1, r8, asr #31
   17eec:	andeq	r7, r1, r8, asr #31
   17ef0:	andeq	r7, r1, r8, asr #31
   17ef4:	andeq	r7, r1, r8, asr #31
   17ef8:	andeq	r7, r1, r0, lsr pc
   17efc:	andeq	r7, r1, r8, asr #31
   17f00:	andeq	r7, r1, r8, asr #31
   17f04:	andeq	r7, r1, r8, asr #31
   17f08:	andeq	r7, r1, r0, lsr pc
   17f0c:	andeq	r7, r1, r8, asr #31
   17f10:	andeq	r7, r1, r0, lsr pc
   17f14:	andeq	r7, r1, r8, asr #31
   17f18:	andeq	r7, r1, r8, asr #31
   17f1c:	andeq	r7, r1, r8, asr #31
   17f20:	andeq	r7, r1, r8, asr #31
   17f24:	andeq	r7, r1, r8, asr #31
   17f28:	andeq	r7, r1, r8, asr #31
   17f2c:	andeq	r7, r1, r0, lsr pc
   17f30:	ldr	r0, [fp, #8]
   17f34:	movw	r1, #48	; 0x30
   17f38:	bl	10f5c <strchr@plt>
   17f3c:	movw	r1, #0
   17f40:	cmp	r0, r1
   17f44:	beq	17fc4 <__assert_fail@plt+0x6f9c>
   17f48:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17f4c:	ldr	r0, [r0]
   17f50:	ldrb	r0, [r0, #1]
   17f54:	mov	r1, r0
   17f58:	cmp	r0, #66	; 0x42
   17f5c:	str	r1, [sp, #4]
   17f60:	beq	17fac <__assert_fail@plt+0x6f84>
   17f64:	b	17f68 <__assert_fail@plt+0x6f40>
   17f68:	ldr	r0, [sp, #4]
   17f6c:	cmp	r0, #68	; 0x44
   17f70:	beq	17fac <__assert_fail@plt+0x6f84>
   17f74:	b	17f78 <__assert_fail@plt+0x6f50>
   17f78:	ldr	r0, [sp, #4]
   17f7c:	cmp	r0, #105	; 0x69
   17f80:	bne	17fc0 <__assert_fail@plt+0x6f98>
   17f84:	b	17f88 <__assert_fail@plt+0x6f60>
   17f88:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17f8c:	ldr	r0, [r0]
   17f90:	ldrb	r0, [r0, #2]
   17f94:	cmp	r0, #66	; 0x42
   17f98:	bne	17fa8 <__assert_fail@plt+0x6f80>
   17f9c:	ldr	r0, [sp, #20]
   17fa0:	add	r0, r0, #2
   17fa4:	str	r0, [sp, #20]
   17fa8:	b	17fc0 <__assert_fail@plt+0x6f98>
   17fac:	movw	r0, #1000	; 0x3e8
   17fb0:	str	r0, [sp, #24]
   17fb4:	ldr	r0, [sp, #20]
   17fb8:	add	r0, r0, #1
   17fbc:	str	r0, [sp, #20]
   17fc0:	b	17fc4 <__assert_fail@plt+0x6f9c>
   17fc4:	b	17fc8 <__assert_fail@plt+0x6fa0>
   17fc8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17fcc:	ldr	r0, [r0]
   17fd0:	ldrb	r0, [r0]
   17fd4:	sub	r0, r0, #66	; 0x42
   17fd8:	cmp	r0, #53	; 0x35
   17fdc:	str	r0, [sp]
   17fe0:	bhi	181d4 <__assert_fail@plt+0x71ac>
   17fe4:	add	r0, pc, #8
   17fe8:	ldr	r1, [sp]
   17fec:	ldr	r0, [r0, r1, lsl #2]
   17ff0:	mov	pc, r0
   17ff4:	andeq	r8, r1, r0, ror #1
   17ff8:	ldrdeq	r8, [r1], -r4
   17ffc:	ldrdeq	r8, [r1], -r4
   18000:	andeq	r8, r1, r0, lsl #2
   18004:	ldrdeq	r8, [r1], -r4
   18008:	andeq	r8, r1, r8, lsl r1
   1800c:	ldrdeq	r8, [r1], -r4
   18010:	ldrdeq	r8, [r1], -r4
   18014:	ldrdeq	r8, [r1], -r4
   18018:	andeq	r8, r1, r0, lsr r1
   1801c:	ldrdeq	r8, [r1], -r4
   18020:	andeq	r8, r1, r8, asr #2
   18024:	ldrdeq	r8, [r1], -r4
   18028:	ldrdeq	r8, [r1], -r4
   1802c:	andeq	r8, r1, r0, ror #2
   18030:	ldrdeq	r8, [r1], -r4
   18034:	ldrdeq	r8, [r1], -r4
   18038:	ldrdeq	r8, [r1], -r4
   1803c:	andeq	r8, r1, r8, ror r1
   18040:	ldrdeq	r8, [r1], -r4
   18044:	ldrdeq	r8, [r1], -r4
   18048:	ldrdeq	r8, [r1], -r4
   1804c:	ldrdeq	r8, [r1], -r4
   18050:	andeq	r8, r1, r4, lsr #3
   18054:			; <UNDEFINED> instruction: 0x000181bc
   18058:	ldrdeq	r8, [r1], -r4
   1805c:	ldrdeq	r8, [r1], -r4
   18060:	ldrdeq	r8, [r1], -r4
   18064:	ldrdeq	r8, [r1], -r4
   18068:	ldrdeq	r8, [r1], -r4
   1806c:	ldrdeq	r8, [r1], -r4
   18070:	ldrdeq	r8, [r1], -r4
   18074:	andeq	r8, r1, ip, asr #1
   18078:	strdeq	r8, [r1], -r4
   1807c:	ldrdeq	r8, [r1], -r4
   18080:	ldrdeq	r8, [r1], -r4
   18084:	ldrdeq	r8, [r1], -r4
   18088:	andeq	r8, r1, r8, lsl r1
   1808c:	ldrdeq	r8, [r1], -r4
   18090:	ldrdeq	r8, [r1], -r4
   18094:	ldrdeq	r8, [r1], -r4
   18098:	andeq	r8, r1, r0, lsr r1
   1809c:	ldrdeq	r8, [r1], -r4
   180a0:	andeq	r8, r1, r8, asr #2
   180a4:	ldrdeq	r8, [r1], -r4
   180a8:	ldrdeq	r8, [r1], -r4
   180ac:	ldrdeq	r8, [r1], -r4
   180b0:	ldrdeq	r8, [r1], -r4
   180b4:	ldrdeq	r8, [r1], -r4
   180b8:	ldrdeq	r8, [r1], -r4
   180bc:	andeq	r8, r1, r8, ror r1
   180c0:	ldrdeq	r8, [r1], -r4
   180c4:	ldrdeq	r8, [r1], -r4
   180c8:	muleq	r1, r0, r1
   180cc:	add	r0, sp, #40	; 0x28
   180d0:	movw	r1, #512	; 0x200
   180d4:	bl	18268 <__assert_fail@plt+0x7240>
   180d8:	str	r0, [sp, #16]
   180dc:	b	181f8 <__assert_fail@plt+0x71d0>
   180e0:	add	r0, sp, #40	; 0x28
   180e4:	movw	r1, #1024	; 0x400
   180e8:	bl	18268 <__assert_fail@plt+0x7240>
   180ec:	str	r0, [sp, #16]
   180f0:	b	181f8 <__assert_fail@plt+0x71d0>
   180f4:	movw	r0, #0
   180f8:	str	r0, [sp, #16]
   180fc:	b	181f8 <__assert_fail@plt+0x71d0>
   18100:	ldr	r1, [sp, #24]
   18104:	add	r0, sp, #40	; 0x28
   18108:	movw	r2, #6
   1810c:	bl	19ae0 <__assert_fail@plt+0x8ab8>
   18110:	str	r0, [sp, #16]
   18114:	b	181f8 <__assert_fail@plt+0x71d0>
   18118:	ldr	r1, [sp, #24]
   1811c:	add	r0, sp, #40	; 0x28
   18120:	movw	r2, #3
   18124:	bl	19ae0 <__assert_fail@plt+0x8ab8>
   18128:	str	r0, [sp, #16]
   1812c:	b	181f8 <__assert_fail@plt+0x71d0>
   18130:	ldr	r1, [sp, #24]
   18134:	add	r0, sp, #40	; 0x28
   18138:	movw	r2, #1
   1813c:	bl	19ae0 <__assert_fail@plt+0x8ab8>
   18140:	str	r0, [sp, #16]
   18144:	b	181f8 <__assert_fail@plt+0x71d0>
   18148:	ldr	r1, [sp, #24]
   1814c:	add	r0, sp, #40	; 0x28
   18150:	movw	r2, #2
   18154:	bl	19ae0 <__assert_fail@plt+0x8ab8>
   18158:	str	r0, [sp, #16]
   1815c:	b	181f8 <__assert_fail@plt+0x71d0>
   18160:	ldr	r1, [sp, #24]
   18164:	add	r0, sp, #40	; 0x28
   18168:	movw	r2, #5
   1816c:	bl	19ae0 <__assert_fail@plt+0x8ab8>
   18170:	str	r0, [sp, #16]
   18174:	b	181f8 <__assert_fail@plt+0x71d0>
   18178:	ldr	r1, [sp, #24]
   1817c:	add	r0, sp, #40	; 0x28
   18180:	movw	r2, #4
   18184:	bl	19ae0 <__assert_fail@plt+0x8ab8>
   18188:	str	r0, [sp, #16]
   1818c:	b	181f8 <__assert_fail@plt+0x71d0>
   18190:	add	r0, sp, #40	; 0x28
   18194:	movw	r1, #2
   18198:	bl	18268 <__assert_fail@plt+0x7240>
   1819c:	str	r0, [sp, #16]
   181a0:	b	181f8 <__assert_fail@plt+0x71d0>
   181a4:	ldr	r1, [sp, #24]
   181a8:	add	r0, sp, #40	; 0x28
   181ac:	movw	r2, #8
   181b0:	bl	19ae0 <__assert_fail@plt+0x8ab8>
   181b4:	str	r0, [sp, #16]
   181b8:	b	181f8 <__assert_fail@plt+0x71d0>
   181bc:	ldr	r1, [sp, #24]
   181c0:	add	r0, sp, #40	; 0x28
   181c4:	movw	r2, #7
   181c8:	bl	19ae0 <__assert_fail@plt+0x8ab8>
   181cc:	str	r0, [sp, #16]
   181d0:	b	181f8 <__assert_fail@plt+0x71d0>
   181d4:	ldr	r0, [sp, #40]	; 0x28
   181d8:	ldr	r1, [sp, #44]	; 0x2c
   181dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   181e0:	str	r1, [r2, #4]
   181e4:	str	r0, [r2]
   181e8:	ldr	r0, [sp, #36]	; 0x24
   181ec:	orr	r0, r0, #2
   181f0:	str	r0, [fp, #-4]
   181f4:	b	1825c <__assert_fail@plt+0x7234>
   181f8:	ldr	r0, [sp, #16]
   181fc:	ldr	r1, [sp, #36]	; 0x24
   18200:	orr	r0, r1, r0
   18204:	str	r0, [sp, #36]	; 0x24
   18208:	ldr	r0, [sp, #20]
   1820c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18210:	ldr	r2, [r1]
   18214:	add	r0, r2, r0
   18218:	str	r0, [r1]
   1821c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18220:	ldr	r0, [r0]
   18224:	ldrsb	r0, [r0]
   18228:	cmp	r0, #0
   1822c:	beq	1823c <__assert_fail@plt+0x7214>
   18230:	ldr	r0, [sp, #36]	; 0x24
   18234:	orr	r0, r0, #2
   18238:	str	r0, [sp, #36]	; 0x24
   1823c:	b	18240 <__assert_fail@plt+0x7218>
   18240:	ldr	r0, [sp, #40]	; 0x28
   18244:	ldr	r1, [sp, #44]	; 0x2c
   18248:	ldr	r2, [fp, #-20]	; 0xffffffec
   1824c:	str	r1, [r2, #4]
   18250:	str	r0, [r2]
   18254:	ldr	r0, [sp, #36]	; 0x24
   18258:	str	r0, [fp, #-4]
   1825c:	ldr	r0, [fp, #-4]
   18260:	mov	sp, fp
   18264:	pop	{fp, pc}
   18268:	push	{fp, lr}
   1826c:	mov	fp, sp
   18270:	sub	sp, sp, #112	; 0x70
   18274:	str	r0, [fp, #-8]
   18278:	str	r1, [fp, #-12]
   1827c:	b	1872c <__assert_fail@plt+0x7704>
   18280:	b	184f4 <__assert_fail@plt+0x74cc>
   18284:	ldr	r0, [fp, #-12]
   18288:	cmp	r0, #0
   1828c:	bge	183e4 <__assert_fail@plt+0x73bc>
   18290:	mov	r0, #1
   18294:	cmp	r0, #0
   18298:	bne	18340 <__assert_fail@plt+0x7318>
   1829c:	b	182a0 <__assert_fail@plt+0x7278>
   182a0:	b	182a4 <__assert_fail@plt+0x727c>
   182a4:	ldr	r0, [fp, #-8]
   182a8:	ldr	r1, [r0]
   182ac:	ldr	r0, [r0, #4]
   182b0:	ldr	r2, [fp, #-12]
   182b4:	mov	r3, #127	; 0x7f
   182b8:	sdiv	r2, r3, r2
   182bc:	subs	r1, r1, r2
   182c0:	sbcs	r0, r0, r2, asr #31
   182c4:	bcc	184ac <__assert_fail@plt+0x7484>
   182c8:	b	184d0 <__assert_fail@plt+0x74a8>
   182cc:	b	182d0 <__assert_fail@plt+0x72a8>
   182d0:	ldr	r0, [pc, #4076]	; 192c4 <__assert_fail@plt+0x829c>
   182d4:	ldr	r1, [fp, #-12]
   182d8:	cmp	r1, r0
   182dc:	blt	182f4 <__assert_fail@plt+0x72cc>
   182e0:	b	18300 <__assert_fail@plt+0x72d8>
   182e4:	ldr	r0, [fp, #-12]
   182e8:	movw	r1, #0
   182ec:	cmp	r1, r0
   182f0:	bge	18300 <__assert_fail@plt+0x72d8>
   182f4:	movw	r0, #0
   182f8:	str	r0, [fp, #-28]	; 0xffffffe4
   182fc:	b	18318 <__assert_fail@plt+0x72f0>
   18300:	ldr	r0, [fp, #-12]
   18304:	movw	r1, #0
   18308:	sub	r0, r1, r0
   1830c:	movw	r1, #127	; 0x7f
   18310:	sdiv	r0, r1, r0
   18314:	str	r0, [fp, #-28]	; 0xffffffe4
   18318:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1831c:	ldr	r1, [fp, #-8]
   18320:	ldr	r2, [r1]
   18324:	ldr	r1, [r1, #4]
   18328:	mvn	r1, r1
   1832c:	mvn	r2, r2
   18330:	subs	r2, r2, r0
   18334:	sbcs	r0, r1, r0, asr #31
   18338:	bcs	184ac <__assert_fail@plt+0x7484>
   1833c:	b	184d0 <__assert_fail@plt+0x74a8>
   18340:	b	18344 <__assert_fail@plt+0x731c>
   18344:	b	183bc <__assert_fail@plt+0x7394>
   18348:	b	183bc <__assert_fail@plt+0x7394>
   1834c:	ldr	r0, [fp, #-12]
   18350:	cmn	r0, #1
   18354:	bne	183bc <__assert_fail@plt+0x7394>
   18358:	b	1837c <__assert_fail@plt+0x7354>
   1835c:	ldr	r0, [fp, #-8]
   18360:	ldr	r1, [r0]
   18364:	ldr	r0, [r0, #4]
   18368:	eor	r1, r1, #128	; 0x80
   1836c:	orr	r0, r1, r0
   18370:	cmp	r0, #0
   18374:	bne	184ac <__assert_fail@plt+0x7484>
   18378:	b	184d0 <__assert_fail@plt+0x74a8>
   1837c:	ldr	r0, [fp, #-8]
   18380:	ldr	r1, [r0]
   18384:	ldr	r0, [r0, #4]
   18388:	orr	r0, r1, r0
   1838c:	cmp	r0, #0
   18390:	beq	184d0 <__assert_fail@plt+0x74a8>
   18394:	b	18398 <__assert_fail@plt+0x7370>
   18398:	ldr	r0, [fp, #-8]
   1839c:	ldr	r1, [r0]
   183a0:	ldr	r0, [r0, #4]
   183a4:	subs	r1, r1, #1
   183a8:	sbc	r0, r0, #0
   183ac:	rsbs	r1, r1, #127	; 0x7f
   183b0:	rscs	r0, r0, #0
   183b4:	bcc	184ac <__assert_fail@plt+0x7484>
   183b8:	b	184d0 <__assert_fail@plt+0x74a8>
   183bc:	ldr	r0, [fp, #-12]
   183c0:	mvn	r1, #127	; 0x7f
   183c4:	sdiv	r0, r1, r0
   183c8:	ldr	r1, [fp, #-8]
   183cc:	ldr	r2, [r1]
   183d0:	ldr	r1, [r1, #4]
   183d4:	subs	r2, r0, r2
   183d8:	rscs	r0, r1, r0, asr #31
   183dc:	bcc	184ac <__assert_fail@plt+0x7484>
   183e0:	b	184d0 <__assert_fail@plt+0x74a8>
   183e4:	ldr	r0, [fp, #-12]
   183e8:	cmp	r0, #0
   183ec:	bne	183f4 <__assert_fail@plt+0x73cc>
   183f0:	b	184d0 <__assert_fail@plt+0x74a8>
   183f4:	mov	r0, #1
   183f8:	cmp	r0, #0
   183fc:	bne	18484 <__assert_fail@plt+0x745c>
   18400:	b	18404 <__assert_fail@plt+0x73dc>
   18404:	ldr	r0, [fp, #-8]
   18408:	ldr	r1, [r0]
   1840c:	ldr	r0, [r0, #4]
   18410:	and	r0, r1, r0
   18414:	cmn	r0, #1
   18418:	bne	18458 <__assert_fail@plt+0x7430>
   1841c:	b	18420 <__assert_fail@plt+0x73f8>
   18420:	b	18424 <__assert_fail@plt+0x73fc>
   18424:	ldr	r0, [fp, #-12]
   18428:	mvn	r1, #127	; 0x7f
   1842c:	add	r0, r0, r1
   18430:	movw	r1, #0
   18434:	cmp	r1, r0
   18438:	blt	184ac <__assert_fail@plt+0x7484>
   1843c:	b	184d0 <__assert_fail@plt+0x74a8>
   18440:	ldr	r0, [fp, #-12]
   18444:	sub	r0, r0, #1
   18448:	movw	r1, #127	; 0x7f
   1844c:	cmp	r1, r0
   18450:	blt	184ac <__assert_fail@plt+0x7484>
   18454:	b	184d0 <__assert_fail@plt+0x74a8>
   18458:	ldr	r0, [fp, #-8]
   1845c:	ldr	r2, [r0]
   18460:	ldr	r3, [r0, #4]
   18464:	mvn	r0, #127	; 0x7f
   18468:	mvn	r1, #0
   1846c:	bl	1c084 <__assert_fail@plt+0xb05c>
   18470:	ldr	r2, [fp, #-12]
   18474:	subs	r0, r0, r2
   18478:	sbcs	r1, r1, r2, asr #31
   1847c:	bcc	184ac <__assert_fail@plt+0x7484>
   18480:	b	184d0 <__assert_fail@plt+0x74a8>
   18484:	ldr	r0, [fp, #-12]
   18488:	mov	r1, #127	; 0x7f
   1848c:	sdiv	r0, r1, r0
   18490:	ldr	r1, [fp, #-8]
   18494:	ldr	r2, [r1]
   18498:	ldr	r1, [r1, #4]
   1849c:	subs	r2, r0, r2
   184a0:	rscs	r0, r1, r0, asr #31
   184a4:	bcs	184d0 <__assert_fail@plt+0x74a8>
   184a8:	b	184ac <__assert_fail@plt+0x7484>
   184ac:	ldr	r0, [fp, #-8]
   184b0:	ldr	r0, [r0]
   184b4:	ldr	r1, [fp, #-12]
   184b8:	mul	r0, r0, r1
   184bc:	sxtb	r0, r0
   184c0:	asr	r1, r0, #31
   184c4:	str	r0, [fp, #-24]	; 0xffffffe8
   184c8:	str	r1, [fp, #-20]	; 0xffffffec
   184cc:	b	19a94 <__assert_fail@plt+0x8a6c>
   184d0:	ldr	r0, [fp, #-8]
   184d4:	ldr	r0, [r0]
   184d8:	ldr	r1, [fp, #-12]
   184dc:	mul	r0, r0, r1
   184e0:	sxtb	r0, r0
   184e4:	asr	r1, r0, #31
   184e8:	str	r0, [fp, #-24]	; 0xffffffe8
   184ec:	str	r1, [fp, #-20]	; 0xffffffec
   184f0:	b	19ab0 <__assert_fail@plt+0x8a88>
   184f4:	ldr	r0, [fp, #-12]
   184f8:	cmp	r0, #0
   184fc:	bge	18630 <__assert_fail@plt+0x7608>
   18500:	mov	r0, #1
   18504:	cmp	r0, #0
   18508:	bne	185b0 <__assert_fail@plt+0x7588>
   1850c:	b	18510 <__assert_fail@plt+0x74e8>
   18510:	b	18514 <__assert_fail@plt+0x74ec>
   18514:	ldr	r0, [fp, #-8]
   18518:	ldr	r1, [r0]
   1851c:	ldr	r0, [r0, #4]
   18520:	ldr	r2, [fp, #-12]
   18524:	mov	r3, #255	; 0xff
   18528:	sdiv	r2, r3, r2
   1852c:	subs	r1, r1, r2
   18530:	sbcs	r0, r0, r2, asr #31
   18534:	bcc	186e4 <__assert_fail@plt+0x76bc>
   18538:	b	18708 <__assert_fail@plt+0x76e0>
   1853c:	b	18540 <__assert_fail@plt+0x7518>
   18540:	ldr	r0, [pc, #3452]	; 192c4 <__assert_fail@plt+0x829c>
   18544:	ldr	r1, [fp, #-12]
   18548:	cmp	r1, r0
   1854c:	blt	18564 <__assert_fail@plt+0x753c>
   18550:	b	18570 <__assert_fail@plt+0x7548>
   18554:	ldr	r0, [fp, #-12]
   18558:	movw	r1, #0
   1855c:	cmp	r1, r0
   18560:	bge	18570 <__assert_fail@plt+0x7548>
   18564:	movw	r0, #0
   18568:	str	r0, [fp, #-32]	; 0xffffffe0
   1856c:	b	18588 <__assert_fail@plt+0x7560>
   18570:	ldr	r0, [fp, #-12]
   18574:	movw	r1, #0
   18578:	sub	r0, r1, r0
   1857c:	movw	r1, #255	; 0xff
   18580:	sdiv	r0, r1, r0
   18584:	str	r0, [fp, #-32]	; 0xffffffe0
   18588:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1858c:	ldr	r1, [fp, #-8]
   18590:	ldr	r2, [r1]
   18594:	ldr	r1, [r1, #4]
   18598:	mvn	r1, r1
   1859c:	mvn	r2, r2
   185a0:	subs	r2, r2, r0
   185a4:	sbcs	r0, r1, r0, asr #31
   185a8:	bcs	186e4 <__assert_fail@plt+0x76bc>
   185ac:	b	18708 <__assert_fail@plt+0x76e0>
   185b0:	b	185b4 <__assert_fail@plt+0x758c>
   185b4:	b	18614 <__assert_fail@plt+0x75ec>
   185b8:	b	18614 <__assert_fail@plt+0x75ec>
   185bc:	ldr	r0, [fp, #-12]
   185c0:	cmn	r0, #1
   185c4:	bne	18614 <__assert_fail@plt+0x75ec>
   185c8:	b	185e8 <__assert_fail@plt+0x75c0>
   185cc:	ldr	r0, [fp, #-8]
   185d0:	ldr	r1, [r0]
   185d4:	ldr	r0, [r0, #4]
   185d8:	orr	r0, r1, r0
   185dc:	cmp	r0, #0
   185e0:	bne	186e4 <__assert_fail@plt+0x76bc>
   185e4:	b	18708 <__assert_fail@plt+0x76e0>
   185e8:	ldr	r0, [fp, #-8]
   185ec:	ldr	r1, [r0]
   185f0:	ldr	r0, [r0, #4]
   185f4:	orr	r0, r1, r0
   185f8:	cmp	r0, #0
   185fc:	beq	18708 <__assert_fail@plt+0x76e0>
   18600:	b	18604 <__assert_fail@plt+0x75dc>
   18604:	mov	r0, #0
   18608:	cmp	r0, #0
   1860c:	bne	186e4 <__assert_fail@plt+0x76bc>
   18610:	b	18708 <__assert_fail@plt+0x76e0>
   18614:	ldr	r0, [fp, #-8]
   18618:	ldr	r1, [r0]
   1861c:	ldr	r0, [r0, #4]
   18620:	orr	r0, r1, r0
   18624:	cmp	r0, #0
   18628:	bne	186e4 <__assert_fail@plt+0x76bc>
   1862c:	b	18708 <__assert_fail@plt+0x76e0>
   18630:	ldr	r0, [fp, #-12]
   18634:	cmp	r0, #0
   18638:	bne	18640 <__assert_fail@plt+0x7618>
   1863c:	b	18708 <__assert_fail@plt+0x76e0>
   18640:	mov	r0, #1
   18644:	cmp	r0, #0
   18648:	bne	186bc <__assert_fail@plt+0x7694>
   1864c:	b	18650 <__assert_fail@plt+0x7628>
   18650:	b	18658 <__assert_fail@plt+0x7630>
   18654:	b	1865c <__assert_fail@plt+0x7634>
   18658:	b	186ac <__assert_fail@plt+0x7684>
   1865c:	ldr	r0, [fp, #-8]
   18660:	ldr	r1, [r0]
   18664:	ldr	r0, [r0, #4]
   18668:	and	r0, r1, r0
   1866c:	cmn	r0, #1
   18670:	bne	186ac <__assert_fail@plt+0x7684>
   18674:	b	18678 <__assert_fail@plt+0x7650>
   18678:	b	1867c <__assert_fail@plt+0x7654>
   1867c:	ldr	r0, [fp, #-12]
   18680:	add	r0, r0, #0
   18684:	movw	r1, #0
   18688:	cmp	r1, r0
   1868c:	blt	186e4 <__assert_fail@plt+0x76bc>
   18690:	b	18708 <__assert_fail@plt+0x76e0>
   18694:	ldr	r0, [fp, #-12]
   18698:	sub	r0, r0, #1
   1869c:	mvn	r1, #0
   186a0:	cmp	r1, r0
   186a4:	blt	186e4 <__assert_fail@plt+0x76bc>
   186a8:	b	18708 <__assert_fail@plt+0x76e0>
   186ac:	ldr	r0, [fp, #-12]
   186b0:	cmp	r0, #0
   186b4:	bne	186e4 <__assert_fail@plt+0x76bc>
   186b8:	b	18708 <__assert_fail@plt+0x76e0>
   186bc:	ldr	r0, [fp, #-12]
   186c0:	mov	r1, #255	; 0xff
   186c4:	sdiv	r0, r1, r0
   186c8:	ldr	r1, [fp, #-8]
   186cc:	ldr	r2, [r1]
   186d0:	ldr	r1, [r1, #4]
   186d4:	subs	r2, r0, r2
   186d8:	rscs	r0, r1, r0, asr #31
   186dc:	bcs	18708 <__assert_fail@plt+0x76e0>
   186e0:	b	186e4 <__assert_fail@plt+0x76bc>
   186e4:	ldr	r0, [fp, #-8]
   186e8:	ldr	r0, [r0]
   186ec:	ldr	r1, [fp, #-12]
   186f0:	mul	r0, r0, r1
   186f4:	uxtb	r0, r0
   186f8:	mov	r1, #0
   186fc:	str	r1, [fp, #-20]	; 0xffffffec
   18700:	str	r0, [fp, #-24]	; 0xffffffe8
   18704:	b	19a94 <__assert_fail@plt+0x8a6c>
   18708:	ldr	r0, [fp, #-8]
   1870c:	ldr	r0, [r0]
   18710:	ldr	r1, [fp, #-12]
   18714:	mul	r0, r0, r1
   18718:	uxtb	r0, r0
   1871c:	mov	r1, #0
   18720:	str	r1, [fp, #-20]	; 0xffffffec
   18724:	str	r0, [fp, #-24]	; 0xffffffe8
   18728:	b	19ab0 <__assert_fail@plt+0x8a88>
   1872c:	b	18bec <__assert_fail@plt+0x7bc4>
   18730:	b	189b4 <__assert_fail@plt+0x798c>
   18734:	ldr	r0, [fp, #-12]
   18738:	cmp	r0, #0
   1873c:	bge	188a0 <__assert_fail@plt+0x7878>
   18740:	mov	r0, #1
   18744:	cmp	r0, #0
   18748:	bne	187f0 <__assert_fail@plt+0x77c8>
   1874c:	b	18750 <__assert_fail@plt+0x7728>
   18750:	b	18754 <__assert_fail@plt+0x772c>
   18754:	ldr	r0, [fp, #-8]
   18758:	ldr	r1, [r0]
   1875c:	ldr	r0, [r0, #4]
   18760:	ldr	r2, [fp, #-12]
   18764:	movw	r3, #32767	; 0x7fff
   18768:	sdiv	r2, r3, r2
   1876c:	subs	r1, r1, r2
   18770:	sbcs	r0, r0, r2, asr #31
   18774:	bcc	1896c <__assert_fail@plt+0x7944>
   18778:	b	18990 <__assert_fail@plt+0x7968>
   1877c:	b	18780 <__assert_fail@plt+0x7758>
   18780:	ldr	r0, [pc, #2876]	; 192c4 <__assert_fail@plt+0x829c>
   18784:	ldr	r1, [fp, #-12]
   18788:	cmp	r1, r0
   1878c:	blt	187a4 <__assert_fail@plt+0x777c>
   18790:	b	187b0 <__assert_fail@plt+0x7788>
   18794:	ldr	r0, [fp, #-12]
   18798:	movw	r1, #0
   1879c:	cmp	r1, r0
   187a0:	bge	187b0 <__assert_fail@plt+0x7788>
   187a4:	movw	r0, #0
   187a8:	str	r0, [fp, #-36]	; 0xffffffdc
   187ac:	b	187c8 <__assert_fail@plt+0x77a0>
   187b0:	ldr	r0, [fp, #-12]
   187b4:	movw	r1, #0
   187b8:	sub	r0, r1, r0
   187bc:	movw	r1, #32767	; 0x7fff
   187c0:	sdiv	r0, r1, r0
   187c4:	str	r0, [fp, #-36]	; 0xffffffdc
   187c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   187cc:	ldr	r1, [fp, #-8]
   187d0:	ldr	r2, [r1]
   187d4:	ldr	r1, [r1, #4]
   187d8:	mvn	r1, r1
   187dc:	mvn	r2, r2
   187e0:	subs	r2, r2, r0
   187e4:	sbcs	r0, r1, r0, asr #31
   187e8:	bcs	1896c <__assert_fail@plt+0x7944>
   187ec:	b	18990 <__assert_fail@plt+0x7968>
   187f0:	b	187f4 <__assert_fail@plt+0x77cc>
   187f4:	b	18874 <__assert_fail@plt+0x784c>
   187f8:	b	18874 <__assert_fail@plt+0x784c>
   187fc:	ldr	r0, [fp, #-12]
   18800:	cmn	r0, #1
   18804:	bne	18874 <__assert_fail@plt+0x784c>
   18808:	b	1882c <__assert_fail@plt+0x7804>
   1880c:	ldr	r0, [fp, #-8]
   18810:	ldr	r1, [r0]
   18814:	ldr	r0, [r0, #4]
   18818:	eor	r1, r1, #32768	; 0x8000
   1881c:	orr	r0, r1, r0
   18820:	cmp	r0, #0
   18824:	bne	1896c <__assert_fail@plt+0x7944>
   18828:	b	18990 <__assert_fail@plt+0x7968>
   1882c:	ldr	r0, [fp, #-8]
   18830:	ldr	r1, [r0]
   18834:	ldr	r0, [r0, #4]
   18838:	orr	r0, r1, r0
   1883c:	cmp	r0, #0
   18840:	beq	18990 <__assert_fail@plt+0x7968>
   18844:	b	18848 <__assert_fail@plt+0x7820>
   18848:	ldr	r0, [fp, #-8]
   1884c:	ldr	r1, [r0]
   18850:	ldr	r0, [r0, #4]
   18854:	subs	r1, r1, #1
   18858:	sbc	r0, r0, #0
   1885c:	lsr	r1, r1, #15
   18860:	orr	r1, r1, r0, lsl #17
   18864:	orr	r0, r1, r0, lsr #15
   18868:	cmp	r0, #0
   1886c:	bne	1896c <__assert_fail@plt+0x7944>
   18870:	b	18990 <__assert_fail@plt+0x7968>
   18874:	ldr	r0, [fp, #-12]
   18878:	movw	r1, #32768	; 0x8000
   1887c:	movt	r1, #65535	; 0xffff
   18880:	sdiv	r0, r1, r0
   18884:	ldr	r1, [fp, #-8]
   18888:	ldr	r2, [r1]
   1888c:	ldr	r1, [r1, #4]
   18890:	subs	r2, r0, r2
   18894:	rscs	r0, r1, r0, asr #31
   18898:	bcc	1896c <__assert_fail@plt+0x7944>
   1889c:	b	18990 <__assert_fail@plt+0x7968>
   188a0:	ldr	r0, [fp, #-12]
   188a4:	cmp	r0, #0
   188a8:	bne	188b0 <__assert_fail@plt+0x7888>
   188ac:	b	18990 <__assert_fail@plt+0x7968>
   188b0:	mov	r0, #1
   188b4:	cmp	r0, #0
   188b8:	bne	18944 <__assert_fail@plt+0x791c>
   188bc:	b	188c0 <__assert_fail@plt+0x7898>
   188c0:	ldr	r0, [fp, #-8]
   188c4:	ldr	r1, [r0]
   188c8:	ldr	r0, [r0, #4]
   188cc:	and	r0, r1, r0
   188d0:	cmn	r0, #1
   188d4:	bne	18914 <__assert_fail@plt+0x78ec>
   188d8:	b	188dc <__assert_fail@plt+0x78b4>
   188dc:	b	188e0 <__assert_fail@plt+0x78b8>
   188e0:	ldr	r0, [pc, #4020]	; 1989c <__assert_fail@plt+0x8874>
   188e4:	ldr	r1, [fp, #-12]
   188e8:	add	r0, r1, r0
   188ec:	movw	r1, #0
   188f0:	cmp	r1, r0
   188f4:	blt	1896c <__assert_fail@plt+0x7944>
   188f8:	b	18990 <__assert_fail@plt+0x7968>
   188fc:	ldr	r0, [fp, #-12]
   18900:	sub	r0, r0, #1
   18904:	movw	r1, #32767	; 0x7fff
   18908:	cmp	r1, r0
   1890c:	blt	1896c <__assert_fail@plt+0x7944>
   18910:	b	18990 <__assert_fail@plt+0x7968>
   18914:	ldr	r0, [fp, #-8]
   18918:	ldr	r2, [r0]
   1891c:	ldr	r3, [r0, #4]
   18920:	movw	r0, #32768	; 0x8000
   18924:	movt	r0, #65535	; 0xffff
   18928:	mvn	r1, #0
   1892c:	bl	1c084 <__assert_fail@plt+0xb05c>
   18930:	ldr	r2, [fp, #-12]
   18934:	subs	r0, r0, r2
   18938:	sbcs	r1, r1, r2, asr #31
   1893c:	bcc	1896c <__assert_fail@plt+0x7944>
   18940:	b	18990 <__assert_fail@plt+0x7968>
   18944:	ldr	r0, [fp, #-12]
   18948:	movw	r1, #32767	; 0x7fff
   1894c:	sdiv	r0, r1, r0
   18950:	ldr	r1, [fp, #-8]
   18954:	ldr	r2, [r1]
   18958:	ldr	r1, [r1, #4]
   1895c:	subs	r2, r0, r2
   18960:	rscs	r0, r1, r0, asr #31
   18964:	bcs	18990 <__assert_fail@plt+0x7968>
   18968:	b	1896c <__assert_fail@plt+0x7944>
   1896c:	ldr	r0, [fp, #-8]
   18970:	ldr	r0, [r0]
   18974:	ldr	r1, [fp, #-12]
   18978:	mul	r0, r0, r1
   1897c:	sxth	r0, r0
   18980:	asr	r1, r0, #31
   18984:	str	r0, [fp, #-24]	; 0xffffffe8
   18988:	str	r1, [fp, #-20]	; 0xffffffec
   1898c:	b	19a94 <__assert_fail@plt+0x8a6c>
   18990:	ldr	r0, [fp, #-8]
   18994:	ldr	r0, [r0]
   18998:	ldr	r1, [fp, #-12]
   1899c:	mul	r0, r0, r1
   189a0:	sxth	r0, r0
   189a4:	asr	r1, r0, #31
   189a8:	str	r0, [fp, #-24]	; 0xffffffe8
   189ac:	str	r1, [fp, #-20]	; 0xffffffec
   189b0:	b	19ab0 <__assert_fail@plt+0x8a88>
   189b4:	ldr	r0, [fp, #-12]
   189b8:	cmp	r0, #0
   189bc:	bge	18af0 <__assert_fail@plt+0x7ac8>
   189c0:	mov	r0, #1
   189c4:	cmp	r0, #0
   189c8:	bne	18a70 <__assert_fail@plt+0x7a48>
   189cc:	b	189d0 <__assert_fail@plt+0x79a8>
   189d0:	b	189d4 <__assert_fail@plt+0x79ac>
   189d4:	ldr	r0, [fp, #-8]
   189d8:	ldr	r1, [r0]
   189dc:	ldr	r0, [r0, #4]
   189e0:	ldr	r2, [fp, #-12]
   189e4:	movw	r3, #65535	; 0xffff
   189e8:	sdiv	r2, r3, r2
   189ec:	subs	r1, r1, r2
   189f0:	sbcs	r0, r0, r2, asr #31
   189f4:	bcc	18ba4 <__assert_fail@plt+0x7b7c>
   189f8:	b	18bc8 <__assert_fail@plt+0x7ba0>
   189fc:	b	18a00 <__assert_fail@plt+0x79d8>
   18a00:	ldr	r0, [pc, #2236]	; 192c4 <__assert_fail@plt+0x829c>
   18a04:	ldr	r1, [fp, #-12]
   18a08:	cmp	r1, r0
   18a0c:	blt	18a24 <__assert_fail@plt+0x79fc>
   18a10:	b	18a30 <__assert_fail@plt+0x7a08>
   18a14:	ldr	r0, [fp, #-12]
   18a18:	movw	r1, #0
   18a1c:	cmp	r1, r0
   18a20:	bge	18a30 <__assert_fail@plt+0x7a08>
   18a24:	movw	r0, #0
   18a28:	str	r0, [fp, #-40]	; 0xffffffd8
   18a2c:	b	18a48 <__assert_fail@plt+0x7a20>
   18a30:	ldr	r0, [fp, #-12]
   18a34:	movw	r1, #0
   18a38:	sub	r0, r1, r0
   18a3c:	movw	r1, #65535	; 0xffff
   18a40:	sdiv	r0, r1, r0
   18a44:	str	r0, [fp, #-40]	; 0xffffffd8
   18a48:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18a4c:	ldr	r1, [fp, #-8]
   18a50:	ldr	r2, [r1]
   18a54:	ldr	r1, [r1, #4]
   18a58:	mvn	r1, r1
   18a5c:	mvn	r2, r2
   18a60:	subs	r2, r2, r0
   18a64:	sbcs	r0, r1, r0, asr #31
   18a68:	bcs	18ba4 <__assert_fail@plt+0x7b7c>
   18a6c:	b	18bc8 <__assert_fail@plt+0x7ba0>
   18a70:	b	18a74 <__assert_fail@plt+0x7a4c>
   18a74:	b	18ad4 <__assert_fail@plt+0x7aac>
   18a78:	b	18ad4 <__assert_fail@plt+0x7aac>
   18a7c:	ldr	r0, [fp, #-12]
   18a80:	cmn	r0, #1
   18a84:	bne	18ad4 <__assert_fail@plt+0x7aac>
   18a88:	b	18aa8 <__assert_fail@plt+0x7a80>
   18a8c:	ldr	r0, [fp, #-8]
   18a90:	ldr	r1, [r0]
   18a94:	ldr	r0, [r0, #4]
   18a98:	orr	r0, r1, r0
   18a9c:	cmp	r0, #0
   18aa0:	bne	18ba4 <__assert_fail@plt+0x7b7c>
   18aa4:	b	18bc8 <__assert_fail@plt+0x7ba0>
   18aa8:	ldr	r0, [fp, #-8]
   18aac:	ldr	r1, [r0]
   18ab0:	ldr	r0, [r0, #4]
   18ab4:	orr	r0, r1, r0
   18ab8:	cmp	r0, #0
   18abc:	beq	18bc8 <__assert_fail@plt+0x7ba0>
   18ac0:	b	18ac4 <__assert_fail@plt+0x7a9c>
   18ac4:	mov	r0, #0
   18ac8:	cmp	r0, #0
   18acc:	bne	18ba4 <__assert_fail@plt+0x7b7c>
   18ad0:	b	18bc8 <__assert_fail@plt+0x7ba0>
   18ad4:	ldr	r0, [fp, #-8]
   18ad8:	ldr	r1, [r0]
   18adc:	ldr	r0, [r0, #4]
   18ae0:	orr	r0, r1, r0
   18ae4:	cmp	r0, #0
   18ae8:	bne	18ba4 <__assert_fail@plt+0x7b7c>
   18aec:	b	18bc8 <__assert_fail@plt+0x7ba0>
   18af0:	ldr	r0, [fp, #-12]
   18af4:	cmp	r0, #0
   18af8:	bne	18b00 <__assert_fail@plt+0x7ad8>
   18afc:	b	18bc8 <__assert_fail@plt+0x7ba0>
   18b00:	mov	r0, #1
   18b04:	cmp	r0, #0
   18b08:	bne	18b7c <__assert_fail@plt+0x7b54>
   18b0c:	b	18b10 <__assert_fail@plt+0x7ae8>
   18b10:	b	18b18 <__assert_fail@plt+0x7af0>
   18b14:	b	18b1c <__assert_fail@plt+0x7af4>
   18b18:	b	18b6c <__assert_fail@plt+0x7b44>
   18b1c:	ldr	r0, [fp, #-8]
   18b20:	ldr	r1, [r0]
   18b24:	ldr	r0, [r0, #4]
   18b28:	and	r0, r1, r0
   18b2c:	cmn	r0, #1
   18b30:	bne	18b6c <__assert_fail@plt+0x7b44>
   18b34:	b	18b38 <__assert_fail@plt+0x7b10>
   18b38:	b	18b3c <__assert_fail@plt+0x7b14>
   18b3c:	ldr	r0, [fp, #-12]
   18b40:	add	r0, r0, #0
   18b44:	movw	r1, #0
   18b48:	cmp	r1, r0
   18b4c:	blt	18ba4 <__assert_fail@plt+0x7b7c>
   18b50:	b	18bc8 <__assert_fail@plt+0x7ba0>
   18b54:	ldr	r0, [fp, #-12]
   18b58:	sub	r0, r0, #1
   18b5c:	mvn	r1, #0
   18b60:	cmp	r1, r0
   18b64:	blt	18ba4 <__assert_fail@plt+0x7b7c>
   18b68:	b	18bc8 <__assert_fail@plt+0x7ba0>
   18b6c:	ldr	r0, [fp, #-12]
   18b70:	cmp	r0, #0
   18b74:	bne	18ba4 <__assert_fail@plt+0x7b7c>
   18b78:	b	18bc8 <__assert_fail@plt+0x7ba0>
   18b7c:	ldr	r0, [fp, #-12]
   18b80:	movw	r1, #65535	; 0xffff
   18b84:	sdiv	r0, r1, r0
   18b88:	ldr	r1, [fp, #-8]
   18b8c:	ldr	r2, [r1]
   18b90:	ldr	r1, [r1, #4]
   18b94:	subs	r2, r0, r2
   18b98:	rscs	r0, r1, r0, asr #31
   18b9c:	bcs	18bc8 <__assert_fail@plt+0x7ba0>
   18ba0:	b	18ba4 <__assert_fail@plt+0x7b7c>
   18ba4:	ldr	r0, [fp, #-8]
   18ba8:	ldr	r0, [r0]
   18bac:	ldr	r1, [fp, #-12]
   18bb0:	mul	r0, r0, r1
   18bb4:	uxth	r0, r0
   18bb8:	mov	r1, #0
   18bbc:	str	r1, [fp, #-20]	; 0xffffffec
   18bc0:	str	r0, [fp, #-24]	; 0xffffffe8
   18bc4:	b	19a94 <__assert_fail@plt+0x8a6c>
   18bc8:	ldr	r0, [fp, #-8]
   18bcc:	ldr	r0, [r0]
   18bd0:	ldr	r1, [fp, #-12]
   18bd4:	mul	r0, r0, r1
   18bd8:	uxth	r0, r0
   18bdc:	mov	r1, #0
   18be0:	str	r1, [fp, #-20]	; 0xffffffec
   18be4:	str	r0, [fp, #-24]	; 0xffffffe8
   18be8:	b	19ab0 <__assert_fail@plt+0x8a88>
   18bec:	b	19080 <__assert_fail@plt+0x8058>
   18bf0:	b	18e50 <__assert_fail@plt+0x7e28>
   18bf4:	ldr	r0, [fp, #-12]
   18bf8:	cmp	r0, #0
   18bfc:	bge	18d4c <__assert_fail@plt+0x7d24>
   18c00:	mov	r0, #1
   18c04:	cmp	r0, #0
   18c08:	bne	18cb0 <__assert_fail@plt+0x7c88>
   18c0c:	b	18c10 <__assert_fail@plt+0x7be8>
   18c10:	b	18c14 <__assert_fail@plt+0x7bec>
   18c14:	ldr	r0, [fp, #-8]
   18c18:	ldr	r1, [r0]
   18c1c:	ldr	r0, [r0, #4]
   18c20:	ldr	r2, [fp, #-12]
   18c24:	mvn	r3, #-2147483648	; 0x80000000
   18c28:	sdiv	r2, r3, r2
   18c2c:	subs	r1, r1, r2
   18c30:	sbcs	r0, r0, r2, asr #31
   18c34:	bcc	18e10 <__assert_fail@plt+0x7de8>
   18c38:	b	18e30 <__assert_fail@plt+0x7e08>
   18c3c:	b	18c40 <__assert_fail@plt+0x7c18>
   18c40:	ldr	r0, [pc, #3728]	; 19ad8 <__assert_fail@plt+0x8ab0>
   18c44:	ldr	r1, [fp, #-12]
   18c48:	cmp	r1, r0
   18c4c:	blt	18c64 <__assert_fail@plt+0x7c3c>
   18c50:	b	18c70 <__assert_fail@plt+0x7c48>
   18c54:	ldr	r0, [fp, #-12]
   18c58:	movw	r1, #0
   18c5c:	cmp	r1, r0
   18c60:	bge	18c70 <__assert_fail@plt+0x7c48>
   18c64:	movw	r0, #0
   18c68:	str	r0, [fp, #-44]	; 0xffffffd4
   18c6c:	b	18c88 <__assert_fail@plt+0x7c60>
   18c70:	ldr	r0, [pc, #3684]	; 19adc <__assert_fail@plt+0x8ab4>
   18c74:	ldr	r1, [fp, #-12]
   18c78:	movw	r2, #0
   18c7c:	sub	r1, r2, r1
   18c80:	sdiv	r0, r0, r1
   18c84:	str	r0, [fp, #-44]	; 0xffffffd4
   18c88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18c8c:	ldr	r1, [fp, #-8]
   18c90:	ldr	r2, [r1]
   18c94:	ldr	r1, [r1, #4]
   18c98:	mvn	r1, r1
   18c9c:	mvn	r2, r2
   18ca0:	subs	r2, r2, r0
   18ca4:	sbcs	r0, r1, r0, asr #31
   18ca8:	bcs	18e10 <__assert_fail@plt+0x7de8>
   18cac:	b	18e30 <__assert_fail@plt+0x7e08>
   18cb0:	ldr	r0, [fp, #-12]
   18cb4:	cmn	r0, #1
   18cb8:	bne	18d24 <__assert_fail@plt+0x7cfc>
   18cbc:	b	18ce0 <__assert_fail@plt+0x7cb8>
   18cc0:	ldr	r0, [fp, #-8]
   18cc4:	ldr	r1, [r0]
   18cc8:	ldr	r0, [r0, #4]
   18ccc:	eor	r1, r1, #-2147483648	; 0x80000000
   18cd0:	orr	r0, r1, r0
   18cd4:	cmp	r0, #0
   18cd8:	bne	18e10 <__assert_fail@plt+0x7de8>
   18cdc:	b	18e30 <__assert_fail@plt+0x7e08>
   18ce0:	ldr	r0, [fp, #-8]
   18ce4:	ldr	r1, [r0]
   18ce8:	ldr	r0, [r0, #4]
   18cec:	orr	r0, r1, r0
   18cf0:	cmp	r0, #0
   18cf4:	beq	18e30 <__assert_fail@plt+0x7e08>
   18cf8:	b	18cfc <__assert_fail@plt+0x7cd4>
   18cfc:	ldr	r0, [fp, #-8]
   18d00:	ldr	r1, [r0]
   18d04:	ldr	r0, [r0, #4]
   18d08:	subs	r1, r1, #1
   18d0c:	sbc	r0, r0, #0
   18d10:	mvn	r2, #-2147483648	; 0x80000000
   18d14:	subs	r1, r2, r1
   18d18:	rscs	r0, r0, #0
   18d1c:	bcc	18e10 <__assert_fail@plt+0x7de8>
   18d20:	b	18e30 <__assert_fail@plt+0x7e08>
   18d24:	ldr	r0, [fp, #-12]
   18d28:	mov	r1, #-2147483648	; 0x80000000
   18d2c:	sdiv	r0, r1, r0
   18d30:	ldr	r1, [fp, #-8]
   18d34:	ldr	r2, [r1]
   18d38:	ldr	r1, [r1, #4]
   18d3c:	subs	r2, r0, r2
   18d40:	rscs	r0, r1, r0, asr #31
   18d44:	bcc	18e10 <__assert_fail@plt+0x7de8>
   18d48:	b	18e30 <__assert_fail@plt+0x7e08>
   18d4c:	ldr	r0, [fp, #-12]
   18d50:	cmp	r0, #0
   18d54:	bne	18d5c <__assert_fail@plt+0x7d34>
   18d58:	b	18e30 <__assert_fail@plt+0x7e08>
   18d5c:	mov	r0, #1
   18d60:	cmp	r0, #0
   18d64:	bne	18de8 <__assert_fail@plt+0x7dc0>
   18d68:	b	18d6c <__assert_fail@plt+0x7d44>
   18d6c:	ldr	r0, [fp, #-8]
   18d70:	ldr	r1, [r0]
   18d74:	ldr	r0, [r0, #4]
   18d78:	and	r0, r1, r0
   18d7c:	cmn	r0, #1
   18d80:	bne	18dbc <__assert_fail@plt+0x7d94>
   18d84:	b	18d88 <__assert_fail@plt+0x7d60>
   18d88:	b	18d8c <__assert_fail@plt+0x7d64>
   18d8c:	ldr	r0, [fp, #-12]
   18d90:	add	r0, r0, #-2147483648	; 0x80000000
   18d94:	movw	r1, #0
   18d98:	cmp	r1, r0
   18d9c:	blt	18e10 <__assert_fail@plt+0x7de8>
   18da0:	b	18e30 <__assert_fail@plt+0x7e08>
   18da4:	ldr	r0, [pc, #3376]	; 19adc <__assert_fail@plt+0x8ab4>
   18da8:	ldr	r1, [fp, #-12]
   18dac:	sub	r1, r1, #1
   18db0:	cmp	r0, r1
   18db4:	blt	18e10 <__assert_fail@plt+0x7de8>
   18db8:	b	18e30 <__assert_fail@plt+0x7e08>
   18dbc:	ldr	r0, [fp, #-8]
   18dc0:	ldr	r2, [r0]
   18dc4:	ldr	r3, [r0, #4]
   18dc8:	mov	r0, #-2147483648	; 0x80000000
   18dcc:	mvn	r1, #0
   18dd0:	bl	1c084 <__assert_fail@plt+0xb05c>
   18dd4:	ldr	r2, [fp, #-12]
   18dd8:	subs	r0, r0, r2
   18ddc:	sbcs	r1, r1, r2, asr #31
   18de0:	bcc	18e10 <__assert_fail@plt+0x7de8>
   18de4:	b	18e30 <__assert_fail@plt+0x7e08>
   18de8:	ldr	r0, [fp, #-12]
   18dec:	mvn	r1, #-2147483648	; 0x80000000
   18df0:	sdiv	r0, r1, r0
   18df4:	ldr	r1, [fp, #-8]
   18df8:	ldr	r2, [r1]
   18dfc:	ldr	r1, [r1, #4]
   18e00:	subs	r2, r0, r2
   18e04:	rscs	r0, r1, r0, asr #31
   18e08:	bcs	18e30 <__assert_fail@plt+0x7e08>
   18e0c:	b	18e10 <__assert_fail@plt+0x7de8>
   18e10:	ldr	r0, [fp, #-8]
   18e14:	ldr	r0, [r0]
   18e18:	ldr	r1, [fp, #-12]
   18e1c:	mul	r0, r0, r1
   18e20:	asr	r1, r0, #31
   18e24:	str	r0, [fp, #-24]	; 0xffffffe8
   18e28:	str	r1, [fp, #-20]	; 0xffffffec
   18e2c:	b	19a94 <__assert_fail@plt+0x8a6c>
   18e30:	ldr	r0, [fp, #-8]
   18e34:	ldr	r0, [r0]
   18e38:	ldr	r1, [fp, #-12]
   18e3c:	mul	r0, r0, r1
   18e40:	asr	r1, r0, #31
   18e44:	str	r0, [fp, #-24]	; 0xffffffe8
   18e48:	str	r1, [fp, #-20]	; 0xffffffec
   18e4c:	b	19ab0 <__assert_fail@plt+0x8a88>
   18e50:	ldr	r0, [fp, #-12]
   18e54:	cmp	r0, #0
   18e58:	bge	18f8c <__assert_fail@plt+0x7f64>
   18e5c:	mov	r0, #1
   18e60:	cmp	r0, #0
   18e64:	bne	18f0c <__assert_fail@plt+0x7ee4>
   18e68:	b	18e6c <__assert_fail@plt+0x7e44>
   18e6c:	b	18e98 <__assert_fail@plt+0x7e70>
   18e70:	ldr	r0, [fp, #-8]
   18e74:	ldr	r1, [r0]
   18e78:	ldr	r0, [r0, #4]
   18e7c:	ldr	r2, [fp, #-12]
   18e80:	mvn	r3, #0
   18e84:	udiv	r2, r3, r2
   18e88:	subs	r1, r1, r2
   18e8c:	sbcs	r0, r0, #0
   18e90:	bcc	19040 <__assert_fail@plt+0x8018>
   18e94:	b	19060 <__assert_fail@plt+0x8038>
   18e98:	b	18e9c <__assert_fail@plt+0x7e74>
   18e9c:	ldr	r0, [pc, #3124]	; 19ad8 <__assert_fail@plt+0x8ab0>
   18ea0:	ldr	r1, [fp, #-12]
   18ea4:	cmp	r1, r0
   18ea8:	blt	18ec0 <__assert_fail@plt+0x7e98>
   18eac:	b	18ecc <__assert_fail@plt+0x7ea4>
   18eb0:	ldr	r0, [fp, #-12]
   18eb4:	movw	r1, #0
   18eb8:	cmp	r1, r0
   18ebc:	bge	18ecc <__assert_fail@plt+0x7ea4>
   18ec0:	movw	r0, #1
   18ec4:	str	r0, [fp, #-48]	; 0xffffffd0
   18ec8:	b	18ee4 <__assert_fail@plt+0x7ebc>
   18ecc:	ldr	r0, [fp, #-12]
   18ed0:	movw	r1, #0
   18ed4:	sub	r0, r1, r0
   18ed8:	mvn	r1, #0
   18edc:	udiv	r0, r1, r0
   18ee0:	str	r0, [fp, #-48]	; 0xffffffd0
   18ee4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18ee8:	ldr	r1, [fp, #-8]
   18eec:	ldr	r2, [r1]
   18ef0:	ldr	r1, [r1, #4]
   18ef4:	mvn	r1, r1
   18ef8:	mvn	r2, r2
   18efc:	subs	r0, r2, r0
   18f00:	sbcs	r1, r1, #0
   18f04:	bcs	19040 <__assert_fail@plt+0x8018>
   18f08:	b	19060 <__assert_fail@plt+0x8038>
   18f0c:	b	18f10 <__assert_fail@plt+0x7ee8>
   18f10:	b	18f70 <__assert_fail@plt+0x7f48>
   18f14:	b	18f70 <__assert_fail@plt+0x7f48>
   18f18:	ldr	r0, [fp, #-12]
   18f1c:	cmn	r0, #1
   18f20:	bne	18f70 <__assert_fail@plt+0x7f48>
   18f24:	b	18f44 <__assert_fail@plt+0x7f1c>
   18f28:	ldr	r0, [fp, #-8]
   18f2c:	ldr	r1, [r0]
   18f30:	ldr	r0, [r0, #4]
   18f34:	orr	r0, r1, r0
   18f38:	cmp	r0, #0
   18f3c:	bne	19040 <__assert_fail@plt+0x8018>
   18f40:	b	19060 <__assert_fail@plt+0x8038>
   18f44:	ldr	r0, [fp, #-8]
   18f48:	ldr	r1, [r0]
   18f4c:	ldr	r0, [r0, #4]
   18f50:	orr	r0, r1, r0
   18f54:	cmp	r0, #0
   18f58:	beq	19060 <__assert_fail@plt+0x8038>
   18f5c:	b	18f60 <__assert_fail@plt+0x7f38>
   18f60:	mov	r0, #0
   18f64:	cmp	r0, #0
   18f68:	bne	19040 <__assert_fail@plt+0x8018>
   18f6c:	b	19060 <__assert_fail@plt+0x8038>
   18f70:	ldr	r0, [fp, #-8]
   18f74:	ldr	r1, [r0]
   18f78:	ldr	r0, [r0, #4]
   18f7c:	orr	r0, r1, r0
   18f80:	cmp	r0, #0
   18f84:	bne	19040 <__assert_fail@plt+0x8018>
   18f88:	b	19060 <__assert_fail@plt+0x8038>
   18f8c:	ldr	r0, [fp, #-12]
   18f90:	cmp	r0, #0
   18f94:	bne	18f9c <__assert_fail@plt+0x7f74>
   18f98:	b	19060 <__assert_fail@plt+0x8038>
   18f9c:	mov	r0, #1
   18fa0:	cmp	r0, #0
   18fa4:	bne	19018 <__assert_fail@plt+0x7ff0>
   18fa8:	b	18fac <__assert_fail@plt+0x7f84>
   18fac:	b	18fb4 <__assert_fail@plt+0x7f8c>
   18fb0:	b	18fb8 <__assert_fail@plt+0x7f90>
   18fb4:	b	19008 <__assert_fail@plt+0x7fe0>
   18fb8:	ldr	r0, [fp, #-8]
   18fbc:	ldr	r1, [r0]
   18fc0:	ldr	r0, [r0, #4]
   18fc4:	and	r0, r1, r0
   18fc8:	cmn	r0, #1
   18fcc:	bne	19008 <__assert_fail@plt+0x7fe0>
   18fd0:	b	18fd4 <__assert_fail@plt+0x7fac>
   18fd4:	b	18fd8 <__assert_fail@plt+0x7fb0>
   18fd8:	ldr	r0, [fp, #-12]
   18fdc:	add	r0, r0, #0
   18fe0:	movw	r1, #0
   18fe4:	cmp	r1, r0
   18fe8:	blt	19040 <__assert_fail@plt+0x8018>
   18fec:	b	19060 <__assert_fail@plt+0x8038>
   18ff0:	ldr	r0, [fp, #-12]
   18ff4:	sub	r0, r0, #1
   18ff8:	mvn	r1, #0
   18ffc:	cmp	r1, r0
   19000:	blt	19040 <__assert_fail@plt+0x8018>
   19004:	b	19060 <__assert_fail@plt+0x8038>
   19008:	ldr	r0, [fp, #-12]
   1900c:	cmp	r0, #0
   19010:	bne	19040 <__assert_fail@plt+0x8018>
   19014:	b	19060 <__assert_fail@plt+0x8038>
   19018:	ldr	r0, [fp, #-12]
   1901c:	mvn	r1, #0
   19020:	udiv	r0, r1, r0
   19024:	ldr	r1, [fp, #-8]
   19028:	ldr	r2, [r1]
   1902c:	ldr	r1, [r1, #4]
   19030:	subs	r0, r0, r2
   19034:	rscs	r1, r1, #0
   19038:	bcs	19060 <__assert_fail@plt+0x8038>
   1903c:	b	19040 <__assert_fail@plt+0x8018>
   19040:	ldr	r0, [fp, #-8]
   19044:	ldr	r0, [r0]
   19048:	ldr	r1, [fp, #-12]
   1904c:	mul	r0, r0, r1
   19050:	mov	r1, #0
   19054:	str	r1, [fp, #-20]	; 0xffffffec
   19058:	str	r0, [fp, #-24]	; 0xffffffe8
   1905c:	b	19a94 <__assert_fail@plt+0x8a6c>
   19060:	ldr	r0, [fp, #-8]
   19064:	ldr	r0, [r0]
   19068:	ldr	r1, [fp, #-12]
   1906c:	mul	r0, r0, r1
   19070:	mov	r1, #0
   19074:	str	r1, [fp, #-20]	; 0xffffffec
   19078:	str	r0, [fp, #-24]	; 0xffffffe8
   1907c:	b	19ab0 <__assert_fail@plt+0x8a88>
   19080:	b	19518 <__assert_fail@plt+0x84f0>
   19084:	b	192e8 <__assert_fail@plt+0x82c0>
   19088:	ldr	r0, [fp, #-12]
   1908c:	cmp	r0, #0
   19090:	bge	191e0 <__assert_fail@plt+0x81b8>
   19094:	mov	r0, #1
   19098:	cmp	r0, #0
   1909c:	bne	19144 <__assert_fail@plt+0x811c>
   190a0:	b	190a4 <__assert_fail@plt+0x807c>
   190a4:	b	190a8 <__assert_fail@plt+0x8080>
   190a8:	ldr	r0, [fp, #-8]
   190ac:	ldr	r1, [r0]
   190b0:	ldr	r0, [r0, #4]
   190b4:	ldr	r2, [fp, #-12]
   190b8:	mvn	r3, #-2147483648	; 0x80000000
   190bc:	sdiv	r2, r3, r2
   190c0:	subs	r1, r1, r2
   190c4:	sbcs	r0, r0, r2, asr #31
   190c8:	bcc	192a4 <__assert_fail@plt+0x827c>
   190cc:	b	192c8 <__assert_fail@plt+0x82a0>
   190d0:	b	190d4 <__assert_fail@plt+0x80ac>
   190d4:	ldr	r0, [pc, #2556]	; 19ad8 <__assert_fail@plt+0x8ab0>
   190d8:	ldr	r1, [fp, #-12]
   190dc:	cmp	r1, r0
   190e0:	blt	190f8 <__assert_fail@plt+0x80d0>
   190e4:	b	19104 <__assert_fail@plt+0x80dc>
   190e8:	ldr	r0, [fp, #-12]
   190ec:	movw	r1, #0
   190f0:	cmp	r1, r0
   190f4:	bge	19104 <__assert_fail@plt+0x80dc>
   190f8:	movw	r0, #0
   190fc:	str	r0, [fp, #-52]	; 0xffffffcc
   19100:	b	1911c <__assert_fail@plt+0x80f4>
   19104:	ldr	r0, [pc, #2512]	; 19adc <__assert_fail@plt+0x8ab4>
   19108:	ldr	r1, [fp, #-12]
   1910c:	movw	r2, #0
   19110:	sub	r1, r2, r1
   19114:	sdiv	r0, r0, r1
   19118:	str	r0, [fp, #-52]	; 0xffffffcc
   1911c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19120:	ldr	r1, [fp, #-8]
   19124:	ldr	r2, [r1]
   19128:	ldr	r1, [r1, #4]
   1912c:	mvn	r1, r1
   19130:	mvn	r2, r2
   19134:	subs	r2, r2, r0
   19138:	sbcs	r0, r1, r0, asr #31
   1913c:	bcs	192a4 <__assert_fail@plt+0x827c>
   19140:	b	192c8 <__assert_fail@plt+0x82a0>
   19144:	ldr	r0, [fp, #-12]
   19148:	cmn	r0, #1
   1914c:	bne	191b8 <__assert_fail@plt+0x8190>
   19150:	b	19174 <__assert_fail@plt+0x814c>
   19154:	ldr	r0, [fp, #-8]
   19158:	ldr	r1, [r0]
   1915c:	ldr	r0, [r0, #4]
   19160:	eor	r1, r1, #-2147483648	; 0x80000000
   19164:	orr	r0, r1, r0
   19168:	cmp	r0, #0
   1916c:	bne	192a4 <__assert_fail@plt+0x827c>
   19170:	b	192c8 <__assert_fail@plt+0x82a0>
   19174:	ldr	r0, [fp, #-8]
   19178:	ldr	r1, [r0]
   1917c:	ldr	r0, [r0, #4]
   19180:	orr	r0, r1, r0
   19184:	cmp	r0, #0
   19188:	beq	192c8 <__assert_fail@plt+0x82a0>
   1918c:	b	19190 <__assert_fail@plt+0x8168>
   19190:	ldr	r0, [fp, #-8]
   19194:	ldr	r1, [r0]
   19198:	ldr	r0, [r0, #4]
   1919c:	subs	r1, r1, #1
   191a0:	sbc	r0, r0, #0
   191a4:	mvn	r2, #-2147483648	; 0x80000000
   191a8:	subs	r1, r2, r1
   191ac:	rscs	r0, r0, #0
   191b0:	bcc	192a4 <__assert_fail@plt+0x827c>
   191b4:	b	192c8 <__assert_fail@plt+0x82a0>
   191b8:	ldr	r0, [fp, #-12]
   191bc:	mov	r1, #-2147483648	; 0x80000000
   191c0:	sdiv	r0, r1, r0
   191c4:	ldr	r1, [fp, #-8]
   191c8:	ldr	r2, [r1]
   191cc:	ldr	r1, [r1, #4]
   191d0:	subs	r2, r0, r2
   191d4:	rscs	r0, r1, r0, asr #31
   191d8:	bcc	192a4 <__assert_fail@plt+0x827c>
   191dc:	b	192c8 <__assert_fail@plt+0x82a0>
   191e0:	ldr	r0, [fp, #-12]
   191e4:	cmp	r0, #0
   191e8:	bne	191f0 <__assert_fail@plt+0x81c8>
   191ec:	b	192c8 <__assert_fail@plt+0x82a0>
   191f0:	mov	r0, #1
   191f4:	cmp	r0, #0
   191f8:	bne	1927c <__assert_fail@plt+0x8254>
   191fc:	b	19200 <__assert_fail@plt+0x81d8>
   19200:	ldr	r0, [fp, #-8]
   19204:	ldr	r1, [r0]
   19208:	ldr	r0, [r0, #4]
   1920c:	and	r0, r1, r0
   19210:	cmn	r0, #1
   19214:	bne	19250 <__assert_fail@plt+0x8228>
   19218:	b	1921c <__assert_fail@plt+0x81f4>
   1921c:	b	19220 <__assert_fail@plt+0x81f8>
   19220:	ldr	r0, [fp, #-12]
   19224:	add	r0, r0, #-2147483648	; 0x80000000
   19228:	movw	r1, #0
   1922c:	cmp	r1, r0
   19230:	blt	192a4 <__assert_fail@plt+0x827c>
   19234:	b	192c8 <__assert_fail@plt+0x82a0>
   19238:	ldr	r0, [pc, #2204]	; 19adc <__assert_fail@plt+0x8ab4>
   1923c:	ldr	r1, [fp, #-12]
   19240:	sub	r1, r1, #1
   19244:	cmp	r0, r1
   19248:	blt	192a4 <__assert_fail@plt+0x827c>
   1924c:	b	192c8 <__assert_fail@plt+0x82a0>
   19250:	ldr	r0, [fp, #-8]
   19254:	ldr	r2, [r0]
   19258:	ldr	r3, [r0, #4]
   1925c:	mov	r0, #-2147483648	; 0x80000000
   19260:	mvn	r1, #0
   19264:	bl	1c084 <__assert_fail@plt+0xb05c>
   19268:	ldr	r2, [fp, #-12]
   1926c:	subs	r0, r0, r2
   19270:	sbcs	r1, r1, r2, asr #31
   19274:	bcc	192a4 <__assert_fail@plt+0x827c>
   19278:	b	192c8 <__assert_fail@plt+0x82a0>
   1927c:	ldr	r0, [fp, #-12]
   19280:	mvn	r1, #-2147483648	; 0x80000000
   19284:	sdiv	r0, r1, r0
   19288:	ldr	r1, [fp, #-8]
   1928c:	ldr	r2, [r1]
   19290:	ldr	r1, [r1, #4]
   19294:	subs	r2, r0, r2
   19298:	rscs	r0, r1, r0, asr #31
   1929c:	bcs	192c8 <__assert_fail@plt+0x82a0>
   192a0:	b	192a4 <__assert_fail@plt+0x827c>
   192a4:	ldr	r0, [fp, #-8]
   192a8:	ldr	r0, [r0]
   192ac:	ldr	r1, [fp, #-12]
   192b0:	mul	r0, r0, r1
   192b4:	asr	r1, r0, #31
   192b8:	str	r0, [fp, #-24]	; 0xffffffe8
   192bc:	str	r1, [fp, #-20]	; 0xffffffec
   192c0:	b	19a94 <__assert_fail@plt+0x8a6c>
   192c4:	andhi	r0, r0, r1
   192c8:	ldr	r0, [fp, #-8]
   192cc:	ldr	r0, [r0]
   192d0:	ldr	r1, [fp, #-12]
   192d4:	mul	r0, r0, r1
   192d8:	asr	r1, r0, #31
   192dc:	str	r0, [fp, #-24]	; 0xffffffe8
   192e0:	str	r1, [fp, #-20]	; 0xffffffec
   192e4:	b	19ab0 <__assert_fail@plt+0x8a88>
   192e8:	ldr	r0, [fp, #-12]
   192ec:	cmp	r0, #0
   192f0:	bge	19424 <__assert_fail@plt+0x83fc>
   192f4:	mov	r0, #1
   192f8:	cmp	r0, #0
   192fc:	bne	193a4 <__assert_fail@plt+0x837c>
   19300:	b	19304 <__assert_fail@plt+0x82dc>
   19304:	b	19330 <__assert_fail@plt+0x8308>
   19308:	ldr	r0, [fp, #-8]
   1930c:	ldr	r1, [r0]
   19310:	ldr	r0, [r0, #4]
   19314:	ldr	r2, [fp, #-12]
   19318:	mvn	r3, #0
   1931c:	udiv	r2, r3, r2
   19320:	subs	r1, r1, r2
   19324:	sbcs	r0, r0, #0
   19328:	bcc	194d8 <__assert_fail@plt+0x84b0>
   1932c:	b	194f8 <__assert_fail@plt+0x84d0>
   19330:	b	19334 <__assert_fail@plt+0x830c>
   19334:	ldr	r0, [pc, #1948]	; 19ad8 <__assert_fail@plt+0x8ab0>
   19338:	ldr	r1, [fp, #-12]
   1933c:	cmp	r1, r0
   19340:	blt	19358 <__assert_fail@plt+0x8330>
   19344:	b	19364 <__assert_fail@plt+0x833c>
   19348:	ldr	r0, [fp, #-12]
   1934c:	movw	r1, #0
   19350:	cmp	r1, r0
   19354:	bge	19364 <__assert_fail@plt+0x833c>
   19358:	movw	r0, #1
   1935c:	str	r0, [sp, #56]	; 0x38
   19360:	b	1937c <__assert_fail@plt+0x8354>
   19364:	ldr	r0, [fp, #-12]
   19368:	movw	r1, #0
   1936c:	sub	r0, r1, r0
   19370:	mvn	r1, #0
   19374:	udiv	r0, r1, r0
   19378:	str	r0, [sp, #56]	; 0x38
   1937c:	ldr	r0, [sp, #56]	; 0x38
   19380:	ldr	r1, [fp, #-8]
   19384:	ldr	r2, [r1]
   19388:	ldr	r1, [r1, #4]
   1938c:	mvn	r1, r1
   19390:	mvn	r2, r2
   19394:	subs	r0, r2, r0
   19398:	sbcs	r1, r1, #0
   1939c:	bcs	194d8 <__assert_fail@plt+0x84b0>
   193a0:	b	194f8 <__assert_fail@plt+0x84d0>
   193a4:	b	193a8 <__assert_fail@plt+0x8380>
   193a8:	b	19408 <__assert_fail@plt+0x83e0>
   193ac:	b	19408 <__assert_fail@plt+0x83e0>
   193b0:	ldr	r0, [fp, #-12]
   193b4:	cmn	r0, #1
   193b8:	bne	19408 <__assert_fail@plt+0x83e0>
   193bc:	b	193dc <__assert_fail@plt+0x83b4>
   193c0:	ldr	r0, [fp, #-8]
   193c4:	ldr	r1, [r0]
   193c8:	ldr	r0, [r0, #4]
   193cc:	orr	r0, r1, r0
   193d0:	cmp	r0, #0
   193d4:	bne	194d8 <__assert_fail@plt+0x84b0>
   193d8:	b	194f8 <__assert_fail@plt+0x84d0>
   193dc:	ldr	r0, [fp, #-8]
   193e0:	ldr	r1, [r0]
   193e4:	ldr	r0, [r0, #4]
   193e8:	orr	r0, r1, r0
   193ec:	cmp	r0, #0
   193f0:	beq	194f8 <__assert_fail@plt+0x84d0>
   193f4:	b	193f8 <__assert_fail@plt+0x83d0>
   193f8:	mov	r0, #0
   193fc:	cmp	r0, #0
   19400:	bne	194d8 <__assert_fail@plt+0x84b0>
   19404:	b	194f8 <__assert_fail@plt+0x84d0>
   19408:	ldr	r0, [fp, #-8]
   1940c:	ldr	r1, [r0]
   19410:	ldr	r0, [r0, #4]
   19414:	orr	r0, r1, r0
   19418:	cmp	r0, #0
   1941c:	bne	194d8 <__assert_fail@plt+0x84b0>
   19420:	b	194f8 <__assert_fail@plt+0x84d0>
   19424:	ldr	r0, [fp, #-12]
   19428:	cmp	r0, #0
   1942c:	bne	19434 <__assert_fail@plt+0x840c>
   19430:	b	194f8 <__assert_fail@plt+0x84d0>
   19434:	mov	r0, #1
   19438:	cmp	r0, #0
   1943c:	bne	194b0 <__assert_fail@plt+0x8488>
   19440:	b	19444 <__assert_fail@plt+0x841c>
   19444:	b	1944c <__assert_fail@plt+0x8424>
   19448:	b	19450 <__assert_fail@plt+0x8428>
   1944c:	b	194a0 <__assert_fail@plt+0x8478>
   19450:	ldr	r0, [fp, #-8]
   19454:	ldr	r1, [r0]
   19458:	ldr	r0, [r0, #4]
   1945c:	and	r0, r1, r0
   19460:	cmn	r0, #1
   19464:	bne	194a0 <__assert_fail@plt+0x8478>
   19468:	b	1946c <__assert_fail@plt+0x8444>
   1946c:	b	19470 <__assert_fail@plt+0x8448>
   19470:	ldr	r0, [fp, #-12]
   19474:	add	r0, r0, #0
   19478:	movw	r1, #0
   1947c:	cmp	r1, r0
   19480:	blt	194d8 <__assert_fail@plt+0x84b0>
   19484:	b	194f8 <__assert_fail@plt+0x84d0>
   19488:	ldr	r0, [fp, #-12]
   1948c:	sub	r0, r0, #1
   19490:	mvn	r1, #0
   19494:	cmp	r1, r0
   19498:	blt	194d8 <__assert_fail@plt+0x84b0>
   1949c:	b	194f8 <__assert_fail@plt+0x84d0>
   194a0:	ldr	r0, [fp, #-12]
   194a4:	cmp	r0, #0
   194a8:	bne	194d8 <__assert_fail@plt+0x84b0>
   194ac:	b	194f8 <__assert_fail@plt+0x84d0>
   194b0:	ldr	r0, [fp, #-12]
   194b4:	mvn	r1, #0
   194b8:	udiv	r0, r1, r0
   194bc:	ldr	r1, [fp, #-8]
   194c0:	ldr	r2, [r1]
   194c4:	ldr	r1, [r1, #4]
   194c8:	subs	r0, r0, r2
   194cc:	rscs	r1, r1, #0
   194d0:	bcs	194f8 <__assert_fail@plt+0x84d0>
   194d4:	b	194d8 <__assert_fail@plt+0x84b0>
   194d8:	ldr	r0, [fp, #-8]
   194dc:	ldr	r0, [r0]
   194e0:	ldr	r1, [fp, #-12]
   194e4:	mul	r0, r0, r1
   194e8:	mov	r1, #0
   194ec:	str	r1, [fp, #-20]	; 0xffffffec
   194f0:	str	r0, [fp, #-24]	; 0xffffffe8
   194f4:	b	19a94 <__assert_fail@plt+0x8a6c>
   194f8:	ldr	r0, [fp, #-8]
   194fc:	ldr	r0, [r0]
   19500:	ldr	r1, [fp, #-12]
   19504:	mul	r0, r0, r1
   19508:	mov	r1, #0
   1950c:	str	r1, [fp, #-20]	; 0xffffffec
   19510:	str	r0, [fp, #-24]	; 0xffffffe8
   19514:	b	19ab0 <__assert_fail@plt+0x8a88>
   19518:	b	197fc <__assert_fail@plt+0x87d4>
   1951c:	ldr	r0, [fp, #-12]
   19520:	cmp	r0, #0
   19524:	bge	196cc <__assert_fail@plt+0x86a4>
   19528:	mov	r0, #1
   1952c:	cmp	r0, #0
   19530:	bne	19620 <__assert_fail@plt+0x85f8>
   19534:	b	19538 <__assert_fail@plt+0x8510>
   19538:	b	1953c <__assert_fail@plt+0x8514>
   1953c:	ldr	r0, [fp, #-8]
   19540:	ldr	r1, [r0]
   19544:	ldr	r0, [r0, #4]
   19548:	ldr	r2, [fp, #-12]
   1954c:	asr	r3, r2, #31
   19550:	mvn	ip, #0
   19554:	mvn	lr, #-2147483648	; 0x80000000
   19558:	str	r0, [sp, #52]	; 0x34
   1955c:	mov	r0, ip
   19560:	str	r1, [sp, #48]	; 0x30
   19564:	mov	r1, lr
   19568:	bl	1bfb0 <__assert_fail@plt+0xaf88>
   1956c:	ldr	r2, [sp, #48]	; 0x30
   19570:	subs	r0, r2, r0
   19574:	ldr	r2, [sp, #52]	; 0x34
   19578:	sbcs	r1, r2, r1
   1957c:	bcc	197a4 <__assert_fail@plt+0x877c>
   19580:	b	197d0 <__assert_fail@plt+0x87a8>
   19584:	b	19588 <__assert_fail@plt+0x8560>
   19588:	ldr	r0, [pc, #1352]	; 19ad8 <__assert_fail@plt+0x8ab0>
   1958c:	ldr	r1, [fp, #-12]
   19590:	cmp	r1, r0
   19594:	blt	195ac <__assert_fail@plt+0x8584>
   19598:	b	195c0 <__assert_fail@plt+0x8598>
   1959c:	ldr	r0, [fp, #-12]
   195a0:	movw	r1, #0
   195a4:	cmp	r1, r0
   195a8:	bge	195c0 <__assert_fail@plt+0x8598>
   195ac:	mov	r0, #0
   195b0:	mvn	r1, #0
   195b4:	str	r1, [sp, #44]	; 0x2c
   195b8:	str	r0, [sp, #40]	; 0x28
   195bc:	b	195f4 <__assert_fail@plt+0x85cc>
   195c0:	ldr	r0, [fp, #-12]
   195c4:	rsb	r0, r0, #0
   195c8:	asr	r3, r0, #31
   195cc:	mvn	r1, #0
   195d0:	mvn	r2, #-2147483648	; 0x80000000
   195d4:	str	r0, [sp, #36]	; 0x24
   195d8:	mov	r0, r1
   195dc:	mov	r1, r2
   195e0:	ldr	r2, [sp, #36]	; 0x24
   195e4:	bl	1bfb0 <__assert_fail@plt+0xaf88>
   195e8:	str	r0, [sp, #44]	; 0x2c
   195ec:	str	r1, [sp, #40]	; 0x28
   195f0:	b	195f4 <__assert_fail@plt+0x85cc>
   195f4:	ldr	r0, [sp, #40]	; 0x28
   195f8:	ldr	r1, [sp, #44]	; 0x2c
   195fc:	ldr	r2, [fp, #-8]
   19600:	ldr	r3, [r2]
   19604:	ldr	r2, [r2, #4]
   19608:	mvn	r2, r2
   1960c:	mvn	r3, r3
   19610:	subs	r1, r3, r1
   19614:	sbcs	r0, r2, r0
   19618:	bcs	197a4 <__assert_fail@plt+0x877c>
   1961c:	b	197d0 <__assert_fail@plt+0x87a8>
   19620:	ldr	r0, [fp, #-12]
   19624:	cmn	r0, #1
   19628:	bne	1968c <__assert_fail@plt+0x8664>
   1962c:	b	19650 <__assert_fail@plt+0x8628>
   19630:	ldr	r0, [fp, #-8]
   19634:	ldr	r1, [r0]
   19638:	ldr	r0, [r0, #4]
   1963c:	eor	r0, r0, #-2147483648	; 0x80000000
   19640:	orr	r0, r1, r0
   19644:	cmp	r0, #0
   19648:	bne	197a4 <__assert_fail@plt+0x877c>
   1964c:	b	197d0 <__assert_fail@plt+0x87a8>
   19650:	ldr	r0, [fp, #-8]
   19654:	ldr	r1, [r0]
   19658:	ldr	r0, [r0, #4]
   1965c:	orr	r0, r1, r0
   19660:	cmp	r0, #0
   19664:	beq	197d0 <__assert_fail@plt+0x87a8>
   19668:	b	1966c <__assert_fail@plt+0x8644>
   1966c:	ldr	r0, [fp, #-8]
   19670:	ldr	r1, [r0]
   19674:	ldr	r0, [r0, #4]
   19678:	subs	r1, r1, #1
   1967c:	sbc	r0, r0, #0
   19680:	cmp	r0, #0
   19684:	bmi	197a4 <__assert_fail@plt+0x877c>
   19688:	b	197d0 <__assert_fail@plt+0x87a8>
   1968c:	ldr	r0, [fp, #-12]
   19690:	asr	r3, r0, #31
   19694:	mov	r1, #0
   19698:	mov	r2, #-2147483648	; 0x80000000
   1969c:	str	r0, [sp, #32]
   196a0:	mov	r0, r1
   196a4:	mov	r1, r2
   196a8:	ldr	r2, [sp, #32]
   196ac:	bl	1bfb0 <__assert_fail@plt+0xaf88>
   196b0:	ldr	r2, [fp, #-8]
   196b4:	ldr	r3, [r2]
   196b8:	ldr	r2, [r2, #4]
   196bc:	subs	r0, r0, r3
   196c0:	sbcs	r1, r1, r2
   196c4:	bcc	197a4 <__assert_fail@plt+0x877c>
   196c8:	b	197d0 <__assert_fail@plt+0x87a8>
   196cc:	ldr	r0, [fp, #-12]
   196d0:	cmp	r0, #0
   196d4:	bne	196dc <__assert_fail@plt+0x86b4>
   196d8:	b	197d0 <__assert_fail@plt+0x87a8>
   196dc:	mov	r0, #1
   196e0:	cmp	r0, #0
   196e4:	bne	19764 <__assert_fail@plt+0x873c>
   196e8:	b	196ec <__assert_fail@plt+0x86c4>
   196ec:	ldr	r0, [fp, #-8]
   196f0:	ldr	r1, [r0]
   196f4:	ldr	r0, [r0, #4]
   196f8:	and	r0, r1, r0
   196fc:	cmn	r0, #1
   19700:	bne	19738 <__assert_fail@plt+0x8710>
   19704:	b	19708 <__assert_fail@plt+0x86e0>
   19708:	b	1970c <__assert_fail@plt+0x86e4>
   1970c:	ldr	r0, [fp, #-12]
   19710:	mov	r1, #-2147483648	; 0x80000000
   19714:	add	r1, r1, r0, asr #31
   19718:	rsbs	r0, r0, #0
   1971c:	rscs	r1, r1, #0
   19720:	blt	197a4 <__assert_fail@plt+0x877c>
   19724:	b	197d0 <__assert_fail@plt+0x87a8>
   19728:	mov	r0, #0
   1972c:	cmp	r0, #0
   19730:	bne	197a4 <__assert_fail@plt+0x877c>
   19734:	b	197d0 <__assert_fail@plt+0x87a8>
   19738:	ldr	r0, [fp, #-8]
   1973c:	ldr	r2, [r0]
   19740:	ldr	r3, [r0, #4]
   19744:	mov	r0, #0
   19748:	mov	r1, #-2147483648	; 0x80000000
   1974c:	bl	1c084 <__assert_fail@plt+0xb05c>
   19750:	ldr	r2, [fp, #-12]
   19754:	subs	r0, r0, r2
   19758:	sbcs	r1, r1, r2, asr #31
   1975c:	bcc	197a4 <__assert_fail@plt+0x877c>
   19760:	b	197d0 <__assert_fail@plt+0x87a8>
   19764:	ldr	r0, [fp, #-12]
   19768:	asr	r3, r0, #31
   1976c:	mvn	r1, #0
   19770:	mvn	r2, #-2147483648	; 0x80000000
   19774:	str	r0, [sp, #28]
   19778:	mov	r0, r1
   1977c:	mov	r1, r2
   19780:	ldr	r2, [sp, #28]
   19784:	bl	1bfb0 <__assert_fail@plt+0xaf88>
   19788:	ldr	r2, [fp, #-8]
   1978c:	ldr	r3, [r2]
   19790:	ldr	r2, [r2, #4]
   19794:	subs	r0, r0, r3
   19798:	sbcs	r1, r1, r2
   1979c:	bcs	197d0 <__assert_fail@plt+0x87a8>
   197a0:	b	197a4 <__assert_fail@plt+0x877c>
   197a4:	ldr	r0, [fp, #-8]
   197a8:	ldr	r1, [r0]
   197ac:	ldr	r0, [r0, #4]
   197b0:	ldr	r2, [fp, #-12]
   197b4:	asr	r3, r2, #31
   197b8:	umull	ip, lr, r1, r2
   197bc:	mla	r1, r1, r3, lr
   197c0:	mla	r0, r0, r2, r1
   197c4:	str	ip, [fp, #-24]	; 0xffffffe8
   197c8:	str	r0, [fp, #-20]	; 0xffffffec
   197cc:	b	19a94 <__assert_fail@plt+0x8a6c>
   197d0:	ldr	r0, [fp, #-8]
   197d4:	ldr	r1, [r0]
   197d8:	ldr	r0, [r0, #4]
   197dc:	ldr	r2, [fp, #-12]
   197e0:	asr	r3, r2, #31
   197e4:	umull	ip, lr, r1, r2
   197e8:	mla	r1, r1, r3, lr
   197ec:	mla	r0, r0, r2, r1
   197f0:	str	ip, [fp, #-24]	; 0xffffffe8
   197f4:	str	r0, [fp, #-20]	; 0xffffffec
   197f8:	b	19ab0 <__assert_fail@plt+0x8a88>
   197fc:	ldr	r0, [fp, #-12]
   19800:	cmp	r0, #0
   19804:	bge	19978 <__assert_fail@plt+0x8950>
   19808:	mov	r0, #1
   1980c:	cmp	r0, #0
   19810:	bne	198f8 <__assert_fail@plt+0x88d0>
   19814:	b	19818 <__assert_fail@plt+0x87f0>
   19818:	b	19860 <__assert_fail@plt+0x8838>
   1981c:	ldr	r0, [fp, #-8]
   19820:	ldr	r1, [r0]
   19824:	ldr	r0, [r0, #4]
   19828:	ldr	r2, [fp, #-12]
   1982c:	asr	r3, r2, #31
   19830:	mvn	ip, #0
   19834:	str	r0, [sp, #24]
   19838:	mov	r0, ip
   1983c:	str	r1, [sp, #20]
   19840:	mov	r1, ip
   19844:	bl	1c084 <__assert_fail@plt+0xb05c>
   19848:	ldr	r2, [sp, #20]
   1984c:	subs	r0, r2, r0
   19850:	ldr	r2, [sp, #24]
   19854:	sbcs	r1, r2, r1
   19858:	bcc	19a3c <__assert_fail@plt+0x8a14>
   1985c:	b	19a68 <__assert_fail@plt+0x8a40>
   19860:	b	19864 <__assert_fail@plt+0x883c>
   19864:	ldr	r0, [pc, #620]	; 19ad8 <__assert_fail@plt+0x8ab0>
   19868:	ldr	r1, [fp, #-12]
   1986c:	cmp	r1, r0
   19870:	blt	19888 <__assert_fail@plt+0x8860>
   19874:	b	198a0 <__assert_fail@plt+0x8878>
   19878:	ldr	r0, [fp, #-12]
   1987c:	movw	r1, #0
   19880:	cmp	r1, r0
   19884:	bge	198a0 <__assert_fail@plt+0x8878>
   19888:	mov	r0, #1
   1988c:	mvn	r1, #0
   19890:	str	r1, [sp, #16]
   19894:	str	r0, [sp, #12]
   19898:	b	198cc <__assert_fail@plt+0x88a4>
   1989c:			; <UNDEFINED> instruction: 0xffff8000
   198a0:	ldr	r0, [fp, #-12]
   198a4:	rsb	r0, r0, #0
   198a8:	asr	r3, r0, #31
   198ac:	mvn	r1, #0
   198b0:	str	r0, [sp, #8]
   198b4:	mov	r0, r1
   198b8:	ldr	r2, [sp, #8]
   198bc:	bl	1c084 <__assert_fail@plt+0xb05c>
   198c0:	str	r0, [sp, #16]
   198c4:	str	r1, [sp, #12]
   198c8:	b	198cc <__assert_fail@plt+0x88a4>
   198cc:	ldr	r0, [sp, #12]
   198d0:	ldr	r1, [sp, #16]
   198d4:	ldr	r2, [fp, #-8]
   198d8:	ldr	r3, [r2]
   198dc:	ldr	r2, [r2, #4]
   198e0:	mvn	r2, r2
   198e4:	mvn	r3, r3
   198e8:	subs	r1, r3, r1
   198ec:	sbcs	r0, r2, r0
   198f0:	bcs	19a3c <__assert_fail@plt+0x8a14>
   198f4:	b	19a68 <__assert_fail@plt+0x8a40>
   198f8:	b	198fc <__assert_fail@plt+0x88d4>
   198fc:	b	1995c <__assert_fail@plt+0x8934>
   19900:	b	1995c <__assert_fail@plt+0x8934>
   19904:	ldr	r0, [fp, #-12]
   19908:	cmn	r0, #1
   1990c:	bne	1995c <__assert_fail@plt+0x8934>
   19910:	b	19930 <__assert_fail@plt+0x8908>
   19914:	ldr	r0, [fp, #-8]
   19918:	ldr	r1, [r0]
   1991c:	ldr	r0, [r0, #4]
   19920:	orr	r0, r1, r0
   19924:	cmp	r0, #0
   19928:	bne	19a3c <__assert_fail@plt+0x8a14>
   1992c:	b	19a68 <__assert_fail@plt+0x8a40>
   19930:	ldr	r0, [fp, #-8]
   19934:	ldr	r1, [r0]
   19938:	ldr	r0, [r0, #4]
   1993c:	orr	r0, r1, r0
   19940:	cmp	r0, #0
   19944:	beq	19a68 <__assert_fail@plt+0x8a40>
   19948:	b	1994c <__assert_fail@plt+0x8924>
   1994c:	mov	r0, #0
   19950:	cmp	r0, #0
   19954:	bne	19a3c <__assert_fail@plt+0x8a14>
   19958:	b	19a68 <__assert_fail@plt+0x8a40>
   1995c:	ldr	r0, [fp, #-8]
   19960:	ldr	r1, [r0]
   19964:	ldr	r0, [r0, #4]
   19968:	orr	r0, r1, r0
   1996c:	cmp	r0, #0
   19970:	bne	19a3c <__assert_fail@plt+0x8a14>
   19974:	b	19a68 <__assert_fail@plt+0x8a40>
   19978:	ldr	r0, [fp, #-12]
   1997c:	cmp	r0, #0
   19980:	bne	19988 <__assert_fail@plt+0x8960>
   19984:	b	19a68 <__assert_fail@plt+0x8a40>
   19988:	mov	r0, #1
   1998c:	cmp	r0, #0
   19990:	bne	19a04 <__assert_fail@plt+0x89dc>
   19994:	b	19998 <__assert_fail@plt+0x8970>
   19998:	b	199a0 <__assert_fail@plt+0x8978>
   1999c:	b	199a4 <__assert_fail@plt+0x897c>
   199a0:	b	199f4 <__assert_fail@plt+0x89cc>
   199a4:	ldr	r0, [fp, #-8]
   199a8:	ldr	r1, [r0]
   199ac:	ldr	r0, [r0, #4]
   199b0:	and	r0, r1, r0
   199b4:	cmn	r0, #1
   199b8:	bne	199f4 <__assert_fail@plt+0x89cc>
   199bc:	b	199c0 <__assert_fail@plt+0x8998>
   199c0:	b	199c4 <__assert_fail@plt+0x899c>
   199c4:	ldr	r0, [fp, #-12]
   199c8:	add	r0, r0, #0
   199cc:	movw	r1, #0
   199d0:	cmp	r1, r0
   199d4:	blt	19a3c <__assert_fail@plt+0x8a14>
   199d8:	b	19a68 <__assert_fail@plt+0x8a40>
   199dc:	ldr	r0, [fp, #-12]
   199e0:	sub	r0, r0, #1
   199e4:	mvn	r1, #0
   199e8:	cmp	r1, r0
   199ec:	blt	19a3c <__assert_fail@plt+0x8a14>
   199f0:	b	19a68 <__assert_fail@plt+0x8a40>
   199f4:	ldr	r0, [fp, #-12]
   199f8:	cmp	r0, #0
   199fc:	bne	19a3c <__assert_fail@plt+0x8a14>
   19a00:	b	19a68 <__assert_fail@plt+0x8a40>
   19a04:	ldr	r0, [fp, #-12]
   19a08:	asr	r3, r0, #31
   19a0c:	mvn	r1, #0
   19a10:	str	r0, [sp, #4]
   19a14:	mov	r0, r1
   19a18:	ldr	r2, [sp, #4]
   19a1c:	bl	1c084 <__assert_fail@plt+0xb05c>
   19a20:	ldr	r2, [fp, #-8]
   19a24:	ldr	r3, [r2]
   19a28:	ldr	r2, [r2, #4]
   19a2c:	subs	r0, r0, r3
   19a30:	sbcs	r1, r1, r2
   19a34:	bcs	19a68 <__assert_fail@plt+0x8a40>
   19a38:	b	19a3c <__assert_fail@plt+0x8a14>
   19a3c:	ldr	r0, [fp, #-8]
   19a40:	ldr	r1, [r0]
   19a44:	ldr	r0, [r0, #4]
   19a48:	ldr	r2, [fp, #-12]
   19a4c:	asr	r3, r2, #31
   19a50:	umull	ip, lr, r1, r2
   19a54:	mla	r1, r1, r3, lr
   19a58:	mla	r0, r0, r2, r1
   19a5c:	str	ip, [fp, #-24]	; 0xffffffe8
   19a60:	str	r0, [fp, #-20]	; 0xffffffec
   19a64:	b	19a94 <__assert_fail@plt+0x8a6c>
   19a68:	ldr	r0, [fp, #-8]
   19a6c:	ldr	r1, [r0]
   19a70:	ldr	r0, [r0, #4]
   19a74:	ldr	r2, [fp, #-12]
   19a78:	asr	r3, r2, #31
   19a7c:	umull	ip, lr, r1, r2
   19a80:	mla	r1, r1, r3, lr
   19a84:	mla	r0, r0, r2, r1
   19a88:	str	ip, [fp, #-24]	; 0xffffffe8
   19a8c:	str	r0, [fp, #-20]	; 0xffffffec
   19a90:	b	19ab0 <__assert_fail@plt+0x8a88>
   19a94:	ldr	r0, [fp, #-8]
   19a98:	mvn	r1, #0
   19a9c:	str	r1, [r0, #4]
   19aa0:	str	r1, [r0]
   19aa4:	movw	r0, #1
   19aa8:	str	r0, [fp, #-4]
   19aac:	b	19acc <__assert_fail@plt+0x8aa4>
   19ab0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ab4:	ldr	r1, [fp, #-20]	; 0xffffffec
   19ab8:	ldr	r2, [fp, #-8]
   19abc:	str	r1, [r2, #4]
   19ac0:	str	r0, [r2]
   19ac4:	movw	r0, #0
   19ac8:	str	r0, [fp, #-4]
   19acc:	ldr	r0, [fp, #-4]
   19ad0:	mov	sp, fp
   19ad4:	pop	{fp, pc}
   19ad8:	andhi	r0, r0, r1
   19adc:	svcvc	0x00ffffff
   19ae0:	push	{fp, lr}
   19ae4:	mov	fp, sp
   19ae8:	sub	sp, sp, #16
   19aec:	str	r0, [fp, #-4]
   19af0:	str	r1, [sp, #8]
   19af4:	str	r2, [sp, #4]
   19af8:	movw	r0, #0
   19afc:	str	r0, [sp]
   19b00:	ldr	r0, [sp, #4]
   19b04:	mvn	r1, #0
   19b08:	add	r1, r0, r1
   19b0c:	str	r1, [sp, #4]
   19b10:	cmp	r0, #0
   19b14:	beq	19b34 <__assert_fail@plt+0x8b0c>
   19b18:	ldr	r0, [fp, #-4]
   19b1c:	ldr	r1, [sp, #8]
   19b20:	bl	18268 <__assert_fail@plt+0x7240>
   19b24:	ldr	r1, [sp]
   19b28:	orr	r0, r1, r0
   19b2c:	str	r0, [sp]
   19b30:	b	19b00 <__assert_fail@plt+0x8ad8>
   19b34:	ldr	r0, [sp]
   19b38:	mov	sp, fp
   19b3c:	pop	{fp, pc}
   19b40:	push	{fp, lr}
   19b44:	mov	fp, sp
   19b48:	sub	sp, sp, #16
   19b4c:	str	r0, [sp, #8]
   19b50:	str	r1, [sp, #4]
   19b54:	ldr	r0, [sp, #8]
   19b58:	cmp	r0, #0
   19b5c:	beq	19b6c <__assert_fail@plt+0x8b44>
   19b60:	ldr	r0, [sp, #4]
   19b64:	cmp	r0, #0
   19b68:	bne	19b78 <__assert_fail@plt+0x8b50>
   19b6c:	movw	r0, #1
   19b70:	str	r0, [sp, #4]
   19b74:	str	r0, [sp, #8]
   19b78:	ldr	r0, [sp, #4]
   19b7c:	cmp	r0, #0
   19b80:	beq	19bb4 <__assert_fail@plt+0x8b8c>
   19b84:	ldr	r0, [pc, #76]	; 19bd8 <__assert_fail@plt+0x8bb0>
   19b88:	ldr	r1, [sp, #4]
   19b8c:	udiv	r0, r0, r1
   19b90:	ldr	r1, [sp, #8]
   19b94:	cmp	r0, r1
   19b98:	bcs	19bb4 <__assert_fail@plt+0x8b8c>
   19b9c:	bl	10f74 <__errno_location@plt>
   19ba0:	movw	r1, #12
   19ba4:	str	r1, [r0]
   19ba8:	movw	r0, #0
   19bac:	str	r0, [fp, #-4]
   19bb0:	b	19bcc <__assert_fail@plt+0x8ba4>
   19bb4:	ldr	r0, [sp, #8]
   19bb8:	ldr	r1, [sp, #4]
   19bbc:	bl	10dd0 <calloc@plt>
   19bc0:	str	r0, [sp]
   19bc4:	ldr	r0, [sp]
   19bc8:	str	r0, [fp, #-4]
   19bcc:	ldr	r0, [fp, #-4]
   19bd0:	mov	sp, fp
   19bd4:	pop	{fp, pc}
   19bd8:	svcvc	0x00ffffff
   19bdc:	push	{fp, lr}
   19be0:	mov	fp, sp
   19be4:	sub	sp, sp, #16
   19be8:	str	r0, [sp, #8]
   19bec:	ldr	r0, [sp, #8]
   19bf0:	cmp	r0, #0
   19bf4:	bne	19c00 <__assert_fail@plt+0x8bd8>
   19bf8:	movw	r0, #1
   19bfc:	str	r0, [sp, #8]
   19c00:	ldr	r0, [pc, #64]	; 19c48 <__assert_fail@plt+0x8c20>
   19c04:	ldr	r1, [sp, #8]
   19c08:	cmp	r0, r1
   19c0c:	bcs	19c28 <__assert_fail@plt+0x8c00>
   19c10:	bl	10f74 <__errno_location@plt>
   19c14:	movw	r1, #12
   19c18:	str	r1, [r0]
   19c1c:	movw	r0, #0
   19c20:	str	r0, [fp, #-4]
   19c24:	b	19c3c <__assert_fail@plt+0x8c14>
   19c28:	ldr	r0, [sp, #8]
   19c2c:	bl	10ee4 <malloc@plt>
   19c30:	str	r0, [sp, #4]
   19c34:	ldr	r0, [sp, #4]
   19c38:	str	r0, [fp, #-4]
   19c3c:	ldr	r0, [fp, #-4]
   19c40:	mov	sp, fp
   19c44:	pop	{fp, pc}
   19c48:	svcvc	0x00ffffff
   19c4c:	push	{fp, lr}
   19c50:	mov	fp, sp
   19c54:	sub	sp, sp, #16
   19c58:	str	r0, [sp, #8]
   19c5c:	str	r1, [sp, #4]
   19c60:	ldr	r0, [sp, #8]
   19c64:	movw	r1, #0
   19c68:	cmp	r0, r1
   19c6c:	bne	19c80 <__assert_fail@plt+0x8c58>
   19c70:	ldr	r0, [sp, #4]
   19c74:	bl	19bdc <__assert_fail@plt+0x8bb4>
   19c78:	str	r0, [fp, #-4]
   19c7c:	b	19ce0 <__assert_fail@plt+0x8cb8>
   19c80:	ldr	r0, [sp, #4]
   19c84:	cmp	r0, #0
   19c88:	bne	19ca0 <__assert_fail@plt+0x8c78>
   19c8c:	ldr	r0, [sp, #8]
   19c90:	bl	1a650 <__assert_fail@plt+0x9628>
   19c94:	movw	r0, #0
   19c98:	str	r0, [fp, #-4]
   19c9c:	b	19ce0 <__assert_fail@plt+0x8cb8>
   19ca0:	ldr	r0, [pc, #68]	; 19cec <__assert_fail@plt+0x8cc4>
   19ca4:	ldr	r1, [sp, #4]
   19ca8:	cmp	r0, r1
   19cac:	bcs	19cc8 <__assert_fail@plt+0x8ca0>
   19cb0:	bl	10f74 <__errno_location@plt>
   19cb4:	movw	r1, #12
   19cb8:	str	r1, [r0]
   19cbc:	movw	r0, #0
   19cc0:	str	r0, [fp, #-4]
   19cc4:	b	19ce0 <__assert_fail@plt+0x8cb8>
   19cc8:	ldr	r0, [sp, #8]
   19ccc:	ldr	r1, [sp, #4]
   19cd0:	bl	10e6c <realloc@plt>
   19cd4:	str	r0, [sp]
   19cd8:	ldr	r0, [sp]
   19cdc:	str	r0, [fp, #-4]
   19ce0:	ldr	r0, [fp, #-4]
   19ce4:	mov	sp, fp
   19ce8:	pop	{fp, pc}
   19cec:	svcvc	0x00ffffff
   19cf0:	sub	sp, sp, #12
   19cf4:	str	r0, [sp, #4]
   19cf8:	ldr	r0, [sp, #4]
   19cfc:	sub	r1, r0, #48	; 0x30
   19d00:	cmp	r1, #10
   19d04:	str	r0, [sp]
   19d08:	bcc	19d38 <__assert_fail@plt+0x8d10>
   19d0c:	b	19d10 <__assert_fail@plt+0x8ce8>
   19d10:	ldr	r0, [sp]
   19d14:	sub	r1, r0, #65	; 0x41
   19d18:	cmp	r1, #26
   19d1c:	bcc	19d38 <__assert_fail@plt+0x8d10>
   19d20:	b	19d24 <__assert_fail@plt+0x8cfc>
   19d24:	ldr	r0, [sp]
   19d28:	sub	r1, r0, #97	; 0x61
   19d2c:	cmp	r1, #25
   19d30:	bhi	19d48 <__assert_fail@plt+0x8d20>
   19d34:	b	19d38 <__assert_fail@plt+0x8d10>
   19d38:	movw	r0, #1
   19d3c:	and	r0, r0, #1
   19d40:	strb	r0, [sp, #11]
   19d44:	b	19d54 <__assert_fail@plt+0x8d2c>
   19d48:	movw	r0, #0
   19d4c:	and	r0, r0, #1
   19d50:	strb	r0, [sp, #11]
   19d54:	ldrb	r0, [sp, #11]
   19d58:	and	r0, r0, #1
   19d5c:	add	sp, sp, #12
   19d60:	bx	lr
   19d64:	sub	sp, sp, #12
   19d68:	str	r0, [sp, #4]
   19d6c:	ldr	r0, [sp, #4]
   19d70:	sub	r1, r0, #65	; 0x41
   19d74:	cmp	r1, #26
   19d78:	str	r0, [sp]
   19d7c:	bcc	19d98 <__assert_fail@plt+0x8d70>
   19d80:	b	19d84 <__assert_fail@plt+0x8d5c>
   19d84:	ldr	r0, [sp]
   19d88:	sub	r1, r0, #97	; 0x61
   19d8c:	cmp	r1, #25
   19d90:	bhi	19da8 <__assert_fail@plt+0x8d80>
   19d94:	b	19d98 <__assert_fail@plt+0x8d70>
   19d98:	movw	r0, #1
   19d9c:	and	r0, r0, #1
   19da0:	strb	r0, [sp, #11]
   19da4:	b	19db4 <__assert_fail@plt+0x8d8c>
   19da8:	movw	r0, #0
   19dac:	and	r0, r0, #1
   19db0:	strb	r0, [sp, #11]
   19db4:	ldrb	r0, [sp, #11]
   19db8:	and	r0, r0, #1
   19dbc:	add	sp, sp, #12
   19dc0:	bx	lr
   19dc4:	sub	sp, sp, #8
   19dc8:	str	r0, [sp]
   19dcc:	ldr	r0, [sp]
   19dd0:	cmp	r0, #127	; 0x7f
   19dd4:	bhi	19dec <__assert_fail@plt+0x8dc4>
   19dd8:	b	19ddc <__assert_fail@plt+0x8db4>
   19ddc:	movw	r0, #1
   19de0:	and	r0, r0, #1
   19de4:	strb	r0, [sp, #7]
   19de8:	b	19df8 <__assert_fail@plt+0x8dd0>
   19dec:	movw	r0, #0
   19df0:	and	r0, r0, #1
   19df4:	strb	r0, [sp, #7]
   19df8:	ldrb	r0, [sp, #7]
   19dfc:	and	r0, r0, #1
   19e00:	add	sp, sp, #8
   19e04:	bx	lr
   19e08:	sub	sp, sp, #8
   19e0c:	str	r0, [sp, #4]
   19e10:	ldr	r0, [sp, #4]
   19e14:	cmp	r0, #32
   19e18:	movw	r0, #1
   19e1c:	str	r0, [sp]
   19e20:	beq	19e38 <__assert_fail@plt+0x8e10>
   19e24:	ldr	r0, [sp, #4]
   19e28:	cmp	r0, #9
   19e2c:	movw	r0, #0
   19e30:	moveq	r0, #1
   19e34:	str	r0, [sp]
   19e38:	ldr	r0, [sp]
   19e3c:	and	r0, r0, #1
   19e40:	add	sp, sp, #8
   19e44:	bx	lr
   19e48:	sub	sp, sp, #12
   19e4c:	str	r0, [sp, #4]
   19e50:	ldr	r0, [sp, #4]
   19e54:	cmp	r0, #32
   19e58:	str	r0, [sp]
   19e5c:	bcc	19e74 <__assert_fail@plt+0x8e4c>
   19e60:	b	19e64 <__assert_fail@plt+0x8e3c>
   19e64:	ldr	r0, [sp]
   19e68:	cmp	r0, #127	; 0x7f
   19e6c:	bne	19e84 <__assert_fail@plt+0x8e5c>
   19e70:	b	19e74 <__assert_fail@plt+0x8e4c>
   19e74:	movw	r0, #1
   19e78:	and	r0, r0, #1
   19e7c:	strb	r0, [sp, #11]
   19e80:	b	19e90 <__assert_fail@plt+0x8e68>
   19e84:	movw	r0, #0
   19e88:	and	r0, r0, #1
   19e8c:	strb	r0, [sp, #11]
   19e90:	ldrb	r0, [sp, #11]
   19e94:	and	r0, r0, #1
   19e98:	add	sp, sp, #12
   19e9c:	bx	lr
   19ea0:	sub	sp, sp, #8
   19ea4:	str	r0, [sp]
   19ea8:	ldr	r0, [sp]
   19eac:	sub	r0, r0, #48	; 0x30
   19eb0:	cmp	r0, #9
   19eb4:	bhi	19ecc <__assert_fail@plt+0x8ea4>
   19eb8:	b	19ebc <__assert_fail@plt+0x8e94>
   19ebc:	movw	r0, #1
   19ec0:	and	r0, r0, #1
   19ec4:	strb	r0, [sp, #7]
   19ec8:	b	19ed8 <__assert_fail@plt+0x8eb0>
   19ecc:	movw	r0, #0
   19ed0:	and	r0, r0, #1
   19ed4:	strb	r0, [sp, #7]
   19ed8:	ldrb	r0, [sp, #7]
   19edc:	and	r0, r0, #1
   19ee0:	add	sp, sp, #8
   19ee4:	bx	lr
   19ee8:	sub	sp, sp, #8
   19eec:	str	r0, [sp]
   19ef0:	ldr	r0, [sp]
   19ef4:	sub	r0, r0, #33	; 0x21
   19ef8:	cmp	r0, #93	; 0x5d
   19efc:	bhi	19f14 <__assert_fail@plt+0x8eec>
   19f00:	b	19f04 <__assert_fail@plt+0x8edc>
   19f04:	movw	r0, #1
   19f08:	and	r0, r0, #1
   19f0c:	strb	r0, [sp, #7]
   19f10:	b	19f20 <__assert_fail@plt+0x8ef8>
   19f14:	movw	r0, #0
   19f18:	and	r0, r0, #1
   19f1c:	strb	r0, [sp, #7]
   19f20:	ldrb	r0, [sp, #7]
   19f24:	and	r0, r0, #1
   19f28:	add	sp, sp, #8
   19f2c:	bx	lr
   19f30:	sub	sp, sp, #8
   19f34:	str	r0, [sp]
   19f38:	ldr	r0, [sp]
   19f3c:	sub	r0, r0, #97	; 0x61
   19f40:	cmp	r0, #25
   19f44:	bhi	19f5c <__assert_fail@plt+0x8f34>
   19f48:	b	19f4c <__assert_fail@plt+0x8f24>
   19f4c:	movw	r0, #1
   19f50:	and	r0, r0, #1
   19f54:	strb	r0, [sp, #7]
   19f58:	b	19f68 <__assert_fail@plt+0x8f40>
   19f5c:	movw	r0, #0
   19f60:	and	r0, r0, #1
   19f64:	strb	r0, [sp, #7]
   19f68:	ldrb	r0, [sp, #7]
   19f6c:	and	r0, r0, #1
   19f70:	add	sp, sp, #8
   19f74:	bx	lr
   19f78:	sub	sp, sp, #8
   19f7c:	str	r0, [sp]
   19f80:	ldr	r0, [sp]
   19f84:	sub	r0, r0, #32
   19f88:	cmp	r0, #94	; 0x5e
   19f8c:	bhi	19fa4 <__assert_fail@plt+0x8f7c>
   19f90:	b	19f94 <__assert_fail@plt+0x8f6c>
   19f94:	movw	r0, #1
   19f98:	and	r0, r0, #1
   19f9c:	strb	r0, [sp, #7]
   19fa0:	b	19fb0 <__assert_fail@plt+0x8f88>
   19fa4:	movw	r0, #0
   19fa8:	and	r0, r0, #1
   19fac:	strb	r0, [sp, #7]
   19fb0:	ldrb	r0, [sp, #7]
   19fb4:	and	r0, r0, #1
   19fb8:	add	sp, sp, #8
   19fbc:	bx	lr
   19fc0:	sub	sp, sp, #12
   19fc4:	str	r0, [sp, #4]
   19fc8:	ldr	r0, [sp, #4]
   19fcc:	sub	r0, r0, #33	; 0x21
   19fd0:	cmp	r0, #93	; 0x5d
   19fd4:	str	r0, [sp]
   19fd8:	bhi	1a174 <__assert_fail@plt+0x914c>
   19fdc:	add	r0, pc, #8
   19fe0:	ldr	r1, [sp]
   19fe4:	ldr	r0, [r0, r1, lsl #2]
   19fe8:	mov	pc, r0
   19fec:	andeq	sl, r1, r4, ror #2
   19ff0:	andeq	sl, r1, r4, ror #2
   19ff4:	andeq	sl, r1, r4, ror #2
   19ff8:	andeq	sl, r1, r4, ror #2
   19ffc:	andeq	sl, r1, r4, ror #2
   1a000:	andeq	sl, r1, r4, ror #2
   1a004:	andeq	sl, r1, r4, ror #2
   1a008:	andeq	sl, r1, r4, ror #2
   1a00c:	andeq	sl, r1, r4, ror #2
   1a010:	andeq	sl, r1, r4, ror #2
   1a014:	andeq	sl, r1, r4, ror #2
   1a018:	andeq	sl, r1, r4, ror #2
   1a01c:	andeq	sl, r1, r4, ror #2
   1a020:	andeq	sl, r1, r4, ror #2
   1a024:	andeq	sl, r1, r4, ror #2
   1a028:	andeq	sl, r1, r4, ror r1
   1a02c:	andeq	sl, r1, r4, ror r1
   1a030:	andeq	sl, r1, r4, ror r1
   1a034:	andeq	sl, r1, r4, ror r1
   1a038:	andeq	sl, r1, r4, ror r1
   1a03c:	andeq	sl, r1, r4, ror r1
   1a040:	andeq	sl, r1, r4, ror r1
   1a044:	andeq	sl, r1, r4, ror r1
   1a048:	andeq	sl, r1, r4, ror r1
   1a04c:	andeq	sl, r1, r4, ror r1
   1a050:	andeq	sl, r1, r4, ror #2
   1a054:	andeq	sl, r1, r4, ror #2
   1a058:	andeq	sl, r1, r4, ror #2
   1a05c:	andeq	sl, r1, r4, ror #2
   1a060:	andeq	sl, r1, r4, ror #2
   1a064:	andeq	sl, r1, r4, ror #2
   1a068:	andeq	sl, r1, r4, ror #2
   1a06c:	andeq	sl, r1, r4, ror r1
   1a070:	andeq	sl, r1, r4, ror r1
   1a074:	andeq	sl, r1, r4, ror r1
   1a078:	andeq	sl, r1, r4, ror r1
   1a07c:	andeq	sl, r1, r4, ror r1
   1a080:	andeq	sl, r1, r4, ror r1
   1a084:	andeq	sl, r1, r4, ror r1
   1a088:	andeq	sl, r1, r4, ror r1
   1a08c:	andeq	sl, r1, r4, ror r1
   1a090:	andeq	sl, r1, r4, ror r1
   1a094:	andeq	sl, r1, r4, ror r1
   1a098:	andeq	sl, r1, r4, ror r1
   1a09c:	andeq	sl, r1, r4, ror r1
   1a0a0:	andeq	sl, r1, r4, ror r1
   1a0a4:	andeq	sl, r1, r4, ror r1
   1a0a8:	andeq	sl, r1, r4, ror r1
   1a0ac:	andeq	sl, r1, r4, ror r1
   1a0b0:	andeq	sl, r1, r4, ror r1
   1a0b4:	andeq	sl, r1, r4, ror r1
   1a0b8:	andeq	sl, r1, r4, ror r1
   1a0bc:	andeq	sl, r1, r4, ror r1
   1a0c0:	andeq	sl, r1, r4, ror r1
   1a0c4:	andeq	sl, r1, r4, ror r1
   1a0c8:	andeq	sl, r1, r4, ror r1
   1a0cc:	andeq	sl, r1, r4, ror r1
   1a0d0:	andeq	sl, r1, r4, ror r1
   1a0d4:	andeq	sl, r1, r4, ror #2
   1a0d8:	andeq	sl, r1, r4, ror #2
   1a0dc:	andeq	sl, r1, r4, ror #2
   1a0e0:	andeq	sl, r1, r4, ror #2
   1a0e4:	andeq	sl, r1, r4, ror #2
   1a0e8:	andeq	sl, r1, r4, ror #2
   1a0ec:	andeq	sl, r1, r4, ror r1
   1a0f0:	andeq	sl, r1, r4, ror r1
   1a0f4:	andeq	sl, r1, r4, ror r1
   1a0f8:	andeq	sl, r1, r4, ror r1
   1a0fc:	andeq	sl, r1, r4, ror r1
   1a100:	andeq	sl, r1, r4, ror r1
   1a104:	andeq	sl, r1, r4, ror r1
   1a108:	andeq	sl, r1, r4, ror r1
   1a10c:	andeq	sl, r1, r4, ror r1
   1a110:	andeq	sl, r1, r4, ror r1
   1a114:	andeq	sl, r1, r4, ror r1
   1a118:	andeq	sl, r1, r4, ror r1
   1a11c:	andeq	sl, r1, r4, ror r1
   1a120:	andeq	sl, r1, r4, ror r1
   1a124:	andeq	sl, r1, r4, ror r1
   1a128:	andeq	sl, r1, r4, ror r1
   1a12c:	andeq	sl, r1, r4, ror r1
   1a130:	andeq	sl, r1, r4, ror r1
   1a134:	andeq	sl, r1, r4, ror r1
   1a138:	andeq	sl, r1, r4, ror r1
   1a13c:	andeq	sl, r1, r4, ror r1
   1a140:	andeq	sl, r1, r4, ror r1
   1a144:	andeq	sl, r1, r4, ror r1
   1a148:	andeq	sl, r1, r4, ror r1
   1a14c:	andeq	sl, r1, r4, ror r1
   1a150:	andeq	sl, r1, r4, ror r1
   1a154:	andeq	sl, r1, r4, ror #2
   1a158:	andeq	sl, r1, r4, ror #2
   1a15c:	andeq	sl, r1, r4, ror #2
   1a160:	andeq	sl, r1, r4, ror #2
   1a164:	movw	r0, #1
   1a168:	and	r0, r0, #1
   1a16c:	strb	r0, [sp, #11]
   1a170:	b	1a180 <__assert_fail@plt+0x9158>
   1a174:	movw	r0, #0
   1a178:	and	r0, r0, #1
   1a17c:	strb	r0, [sp, #11]
   1a180:	ldrb	r0, [sp, #11]
   1a184:	and	r0, r0, #1
   1a188:	add	sp, sp, #12
   1a18c:	bx	lr
   1a190:	sub	sp, sp, #12
   1a194:	str	r0, [sp, #4]
   1a198:	ldr	r0, [sp, #4]
   1a19c:	sub	r1, r0, #9
   1a1a0:	cmp	r1, #5
   1a1a4:	str	r0, [sp]
   1a1a8:	bcc	1a1c0 <__assert_fail@plt+0x9198>
   1a1ac:	b	1a1b0 <__assert_fail@plt+0x9188>
   1a1b0:	ldr	r0, [sp]
   1a1b4:	cmp	r0, #32
   1a1b8:	bne	1a1d0 <__assert_fail@plt+0x91a8>
   1a1bc:	b	1a1c0 <__assert_fail@plt+0x9198>
   1a1c0:	movw	r0, #1
   1a1c4:	and	r0, r0, #1
   1a1c8:	strb	r0, [sp, #11]
   1a1cc:	b	1a1dc <__assert_fail@plt+0x91b4>
   1a1d0:	movw	r0, #0
   1a1d4:	and	r0, r0, #1
   1a1d8:	strb	r0, [sp, #11]
   1a1dc:	ldrb	r0, [sp, #11]
   1a1e0:	and	r0, r0, #1
   1a1e4:	add	sp, sp, #12
   1a1e8:	bx	lr
   1a1ec:	sub	sp, sp, #8
   1a1f0:	str	r0, [sp]
   1a1f4:	ldr	r0, [sp]
   1a1f8:	sub	r0, r0, #65	; 0x41
   1a1fc:	cmp	r0, #25
   1a200:	bhi	1a218 <__assert_fail@plt+0x91f0>
   1a204:	b	1a208 <__assert_fail@plt+0x91e0>
   1a208:	movw	r0, #1
   1a20c:	and	r0, r0, #1
   1a210:	strb	r0, [sp, #7]
   1a214:	b	1a224 <__assert_fail@plt+0x91fc>
   1a218:	movw	r0, #0
   1a21c:	and	r0, r0, #1
   1a220:	strb	r0, [sp, #7]
   1a224:	ldrb	r0, [sp, #7]
   1a228:	and	r0, r0, #1
   1a22c:	add	sp, sp, #8
   1a230:	bx	lr
   1a234:	sub	sp, sp, #12
   1a238:	str	r0, [sp, #4]
   1a23c:	ldr	r0, [sp, #4]
   1a240:	sub	r1, r0, #48	; 0x30
   1a244:	cmp	r1, #10
   1a248:	str	r0, [sp]
   1a24c:	bcc	1a27c <__assert_fail@plt+0x9254>
   1a250:	b	1a254 <__assert_fail@plt+0x922c>
   1a254:	ldr	r0, [sp]
   1a258:	sub	r1, r0, #65	; 0x41
   1a25c:	cmp	r1, #6
   1a260:	bcc	1a27c <__assert_fail@plt+0x9254>
   1a264:	b	1a268 <__assert_fail@plt+0x9240>
   1a268:	ldr	r0, [sp]
   1a26c:	sub	r1, r0, #97	; 0x61
   1a270:	cmp	r1, #5
   1a274:	bhi	1a28c <__assert_fail@plt+0x9264>
   1a278:	b	1a27c <__assert_fail@plt+0x9254>
   1a27c:	movw	r0, #1
   1a280:	and	r0, r0, #1
   1a284:	strb	r0, [sp, #11]
   1a288:	b	1a298 <__assert_fail@plt+0x9270>
   1a28c:	movw	r0, #0
   1a290:	and	r0, r0, #1
   1a294:	strb	r0, [sp, #11]
   1a298:	ldrb	r0, [sp, #11]
   1a29c:	and	r0, r0, #1
   1a2a0:	add	sp, sp, #12
   1a2a4:	bx	lr
   1a2a8:	sub	sp, sp, #8
   1a2ac:	str	r0, [sp]
   1a2b0:	ldr	r0, [sp]
   1a2b4:	sub	r0, r0, #65	; 0x41
   1a2b8:	cmp	r0, #25
   1a2bc:	bhi	1a2d8 <__assert_fail@plt+0x92b0>
   1a2c0:	b	1a2c4 <__assert_fail@plt+0x929c>
   1a2c4:	ldr	r0, [sp]
   1a2c8:	sub	r0, r0, #65	; 0x41
   1a2cc:	add	r0, r0, #97	; 0x61
   1a2d0:	str	r0, [sp, #4]
   1a2d4:	b	1a2e0 <__assert_fail@plt+0x92b8>
   1a2d8:	ldr	r0, [sp]
   1a2dc:	str	r0, [sp, #4]
   1a2e0:	ldr	r0, [sp, #4]
   1a2e4:	add	sp, sp, #8
   1a2e8:	bx	lr
   1a2ec:	sub	sp, sp, #8
   1a2f0:	str	r0, [sp]
   1a2f4:	ldr	r0, [sp]
   1a2f8:	sub	r0, r0, #97	; 0x61
   1a2fc:	cmp	r0, #25
   1a300:	bhi	1a31c <__assert_fail@plt+0x92f4>
   1a304:	b	1a308 <__assert_fail@plt+0x92e0>
   1a308:	ldr	r0, [sp]
   1a30c:	sub	r0, r0, #97	; 0x61
   1a310:	add	r0, r0, #65	; 0x41
   1a314:	str	r0, [sp, #4]
   1a318:	b	1a324 <__assert_fail@plt+0x92fc>
   1a31c:	ldr	r0, [sp]
   1a320:	str	r0, [sp, #4]
   1a324:	ldr	r0, [sp, #4]
   1a328:	add	sp, sp, #8
   1a32c:	bx	lr
   1a330:	push	{fp, lr}
   1a334:	mov	fp, sp
   1a338:	sub	sp, sp, #24
   1a33c:	str	r0, [fp, #-8]
   1a340:	str	r1, [sp, #12]
   1a344:	ldr	r0, [fp, #-8]
   1a348:	str	r0, [sp, #8]
   1a34c:	ldr	r0, [sp, #12]
   1a350:	str	r0, [sp, #4]
   1a354:	ldr	r0, [sp, #8]
   1a358:	ldr	r1, [sp, #4]
   1a35c:	cmp	r0, r1
   1a360:	bne	1a370 <__assert_fail@plt+0x9348>
   1a364:	movw	r0, #0
   1a368:	str	r0, [fp, #-4]
   1a36c:	b	1a3dc <__assert_fail@plt+0x93b4>
   1a370:	b	1a374 <__assert_fail@plt+0x934c>
   1a374:	ldr	r0, [sp, #8]
   1a378:	ldrb	r0, [r0]
   1a37c:	bl	1a2a8 <__assert_fail@plt+0x9280>
   1a380:	strb	r0, [sp, #3]
   1a384:	ldr	r0, [sp, #4]
   1a388:	ldrb	r0, [r0]
   1a38c:	bl	1a2a8 <__assert_fail@plt+0x9280>
   1a390:	strb	r0, [sp, #2]
   1a394:	ldrb	r0, [sp, #3]
   1a398:	cmp	r0, #0
   1a39c:	bne	1a3a4 <__assert_fail@plt+0x937c>
   1a3a0:	b	1a3cc <__assert_fail@plt+0x93a4>
   1a3a4:	ldr	r0, [sp, #8]
   1a3a8:	add	r0, r0, #1
   1a3ac:	str	r0, [sp, #8]
   1a3b0:	ldr	r0, [sp, #4]
   1a3b4:	add	r0, r0, #1
   1a3b8:	str	r0, [sp, #4]
   1a3bc:	ldrb	r0, [sp, #3]
   1a3c0:	ldrb	r1, [sp, #2]
   1a3c4:	cmp	r0, r1
   1a3c8:	beq	1a374 <__assert_fail@plt+0x934c>
   1a3cc:	ldrb	r0, [sp, #3]
   1a3d0:	ldrb	r1, [sp, #2]
   1a3d4:	sub	r0, r0, r1
   1a3d8:	str	r0, [fp, #-4]
   1a3dc:	ldr	r0, [fp, #-4]
   1a3e0:	mov	sp, fp
   1a3e4:	pop	{fp, pc}
   1a3e8:	push	{fp, lr}
   1a3ec:	mov	fp, sp
   1a3f0:	sub	sp, sp, #16
   1a3f4:	str	r0, [sp, #8]
   1a3f8:	ldr	r0, [sp, #8]
   1a3fc:	bl	10ea8 <__fpending@plt>
   1a400:	cmp	r0, #0
   1a404:	movw	r0, #0
   1a408:	movne	r0, #1
   1a40c:	and	r0, r0, #1
   1a410:	strb	r0, [sp, #7]
   1a414:	ldr	r0, [sp, #8]
   1a418:	bl	10eb4 <ferror_unlocked@plt>
   1a41c:	cmp	r0, #0
   1a420:	movw	r0, #0
   1a424:	movne	r0, #1
   1a428:	and	r0, r0, #1
   1a42c:	strb	r0, [sp, #6]
   1a430:	ldr	r0, [sp, #8]
   1a434:	bl	1a4b8 <__assert_fail@plt+0x9490>
   1a438:	cmp	r0, #0
   1a43c:	movw	r0, #0
   1a440:	movne	r0, #1
   1a444:	and	r0, r0, #1
   1a448:	strb	r0, [sp, #5]
   1a44c:	ldrb	r0, [sp, #6]
   1a450:	tst	r0, #1
   1a454:	bne	1a480 <__assert_fail@plt+0x9458>
   1a458:	ldrb	r0, [sp, #5]
   1a45c:	tst	r0, #1
   1a460:	beq	1a4a4 <__assert_fail@plt+0x947c>
   1a464:	ldrb	r0, [sp, #7]
   1a468:	tst	r0, #1
   1a46c:	bne	1a480 <__assert_fail@plt+0x9458>
   1a470:	bl	10f74 <__errno_location@plt>
   1a474:	ldr	r0, [r0]
   1a478:	cmp	r0, #9
   1a47c:	beq	1a4a4 <__assert_fail@plt+0x947c>
   1a480:	ldrb	r0, [sp, #5]
   1a484:	tst	r0, #1
   1a488:	bne	1a498 <__assert_fail@plt+0x9470>
   1a48c:	bl	10f74 <__errno_location@plt>
   1a490:	movw	r1, #0
   1a494:	str	r1, [r0]
   1a498:	mvn	r0, #0
   1a49c:	str	r0, [fp, #-4]
   1a4a0:	b	1a4ac <__assert_fail@plt+0x9484>
   1a4a4:	movw	r0, #0
   1a4a8:	str	r0, [fp, #-4]
   1a4ac:	ldr	r0, [fp, #-4]
   1a4b0:	mov	sp, fp
   1a4b4:	pop	{fp, pc}
   1a4b8:	push	{fp, lr}
   1a4bc:	mov	fp, sp
   1a4c0:	sub	sp, sp, #32
   1a4c4:	str	r0, [fp, #-8]
   1a4c8:	movw	r0, #0
   1a4cc:	str	r0, [fp, #-12]
   1a4d0:	str	r0, [sp, #12]
   1a4d4:	ldr	r0, [fp, #-8]
   1a4d8:	bl	10f98 <fileno@plt>
   1a4dc:	str	r0, [sp, #16]
   1a4e0:	ldr	r0, [sp, #16]
   1a4e4:	cmp	r0, #0
   1a4e8:	bge	1a4fc <__assert_fail@plt+0x94d4>
   1a4ec:	ldr	r0, [fp, #-8]
   1a4f0:	bl	10fb0 <fclose@plt>
   1a4f4:	str	r0, [fp, #-4]
   1a4f8:	b	1a598 <__assert_fail@plt+0x9570>
   1a4fc:	ldr	r0, [fp, #-8]
   1a500:	bl	10efc <__freading@plt>
   1a504:	cmp	r0, #0
   1a508:	beq	1a540 <__assert_fail@plt+0x9518>
   1a50c:	ldr	r0, [fp, #-8]
   1a510:	bl	10f98 <fileno@plt>
   1a514:	mov	r1, sp
   1a518:	mov	r2, #1
   1a51c:	str	r2, [r1]
   1a520:	mov	r1, #0
   1a524:	mov	r2, r1
   1a528:	mov	r3, r1
   1a52c:	bl	10e90 <lseek64@plt>
   1a530:	and	r0, r0, r1
   1a534:	cmn	r0, #1
   1a538:	beq	1a55c <__assert_fail@plt+0x9534>
   1a53c:	b	1a540 <__assert_fail@plt+0x9518>
   1a540:	ldr	r0, [fp, #-8]
   1a544:	bl	1a5a4 <__assert_fail@plt+0x957c>
   1a548:	cmp	r0, #0
   1a54c:	beq	1a55c <__assert_fail@plt+0x9534>
   1a550:	bl	10f74 <__errno_location@plt>
   1a554:	ldr	r0, [r0]
   1a558:	str	r0, [fp, #-12]
   1a55c:	ldr	r0, [fp, #-8]
   1a560:	bl	10fb0 <fclose@plt>
   1a564:	str	r0, [sp, #12]
   1a568:	ldr	r0, [fp, #-12]
   1a56c:	cmp	r0, #0
   1a570:	beq	1a590 <__assert_fail@plt+0x9568>
   1a574:	ldr	r0, [fp, #-12]
   1a578:	str	r0, [sp, #8]
   1a57c:	bl	10f74 <__errno_location@plt>
   1a580:	ldr	r1, [sp, #8]
   1a584:	str	r1, [r0]
   1a588:	mvn	r0, #0
   1a58c:	str	r0, [sp, #12]
   1a590:	ldr	r0, [sp, #12]
   1a594:	str	r0, [fp, #-4]
   1a598:	ldr	r0, [fp, #-4]
   1a59c:	mov	sp, fp
   1a5a0:	pop	{fp, pc}
   1a5a4:	push	{fp, lr}
   1a5a8:	mov	fp, sp
   1a5ac:	sub	sp, sp, #8
   1a5b0:	str	r0, [sp]
   1a5b4:	ldr	r0, [sp]
   1a5b8:	movw	r1, #0
   1a5bc:	cmp	r0, r1
   1a5c0:	beq	1a5d4 <__assert_fail@plt+0x95ac>
   1a5c4:	ldr	r0, [sp]
   1a5c8:	bl	10efc <__freading@plt>
   1a5cc:	cmp	r0, #0
   1a5d0:	bne	1a5e4 <__assert_fail@plt+0x95bc>
   1a5d4:	ldr	r0, [sp]
   1a5d8:	bl	10e0c <fflush@plt>
   1a5dc:	str	r0, [sp, #4]
   1a5e0:	b	1a5f8 <__assert_fail@plt+0x95d0>
   1a5e4:	ldr	r0, [sp]
   1a5e8:	bl	1a604 <__assert_fail@plt+0x95dc>
   1a5ec:	ldr	r0, [sp]
   1a5f0:	bl	10e0c <fflush@plt>
   1a5f4:	str	r0, [sp, #4]
   1a5f8:	ldr	r0, [sp, #4]
   1a5fc:	mov	sp, fp
   1a600:	pop	{fp, pc}
   1a604:	push	{fp, lr}
   1a608:	mov	fp, sp
   1a60c:	sub	sp, sp, #8
   1a610:	str	r0, [sp, #4]
   1a614:	ldr	r0, [sp, #4]
   1a618:	ldr	r0, [r0]
   1a61c:	and	r0, r0, #256	; 0x100
   1a620:	cmp	r0, #0
   1a624:	beq	1a648 <__assert_fail@plt+0x9620>
   1a628:	ldr	r0, [sp, #4]
   1a62c:	mov	r1, sp
   1a630:	mov	r2, #1
   1a634:	str	r2, [r1]
   1a638:	mov	r1, #0
   1a63c:	mov	r2, r1
   1a640:	mov	r3, r1
   1a644:	bl	1a690 <__assert_fail@plt+0x9668>
   1a648:	mov	sp, fp
   1a64c:	pop	{fp, pc}
   1a650:	push	{fp, lr}
   1a654:	mov	fp, sp
   1a658:	sub	sp, sp, #16
   1a65c:	str	r0, [fp, #-4]
   1a660:	bl	10f74 <__errno_location@plt>
   1a664:	ldr	r0, [r0]
   1a668:	str	r0, [sp, #8]
   1a66c:	ldr	r0, [fp, #-4]
   1a670:	bl	10e18 <free@plt>
   1a674:	ldr	r0, [sp, #8]
   1a678:	str	r0, [sp, #4]
   1a67c:	bl	10f74 <__errno_location@plt>
   1a680:	ldr	r1, [sp, #4]
   1a684:	str	r1, [r0]
   1a688:	mov	sp, fp
   1a68c:	pop	{fp, pc}
   1a690:	push	{fp, lr}
   1a694:	mov	fp, sp
   1a698:	sub	sp, sp, #32
   1a69c:	ldr	r1, [fp, #8]
   1a6a0:	str	r0, [fp, #-8]
   1a6a4:	str	r3, [sp, #20]
   1a6a8:	str	r2, [sp, #16]
   1a6ac:	ldr	r0, [fp, #-8]
   1a6b0:	ldr	r0, [r0, #8]
   1a6b4:	ldr	r2, [fp, #-8]
   1a6b8:	ldr	r2, [r2, #4]
   1a6bc:	cmp	r0, r2
   1a6c0:	bne	1a76c <__assert_fail@plt+0x9744>
   1a6c4:	ldr	r0, [fp, #-8]
   1a6c8:	ldr	r0, [r0, #20]
   1a6cc:	ldr	r1, [fp, #-8]
   1a6d0:	ldr	r1, [r1, #16]
   1a6d4:	cmp	r0, r1
   1a6d8:	bne	1a76c <__assert_fail@plt+0x9744>
   1a6dc:	ldr	r0, [fp, #-8]
   1a6e0:	ldr	r0, [r0, #36]	; 0x24
   1a6e4:	movw	r1, #0
   1a6e8:	cmp	r0, r1
   1a6ec:	bne	1a76c <__assert_fail@plt+0x9744>
   1a6f0:	ldr	r0, [fp, #-8]
   1a6f4:	bl	10f98 <fileno@plt>
   1a6f8:	ldr	r2, [sp, #16]
   1a6fc:	ldr	r3, [sp, #20]
   1a700:	ldr	r1, [fp, #8]
   1a704:	mov	ip, sp
   1a708:	str	r1, [ip]
   1a70c:	bl	10e90 <lseek64@plt>
   1a710:	str	r1, [sp, #12]
   1a714:	str	r0, [sp, #8]
   1a718:	ldr	r0, [sp, #8]
   1a71c:	ldr	r1, [sp, #12]
   1a720:	and	r0, r0, r1
   1a724:	cmn	r0, #1
   1a728:	bne	1a73c <__assert_fail@plt+0x9714>
   1a72c:	b	1a730 <__assert_fail@plt+0x9708>
   1a730:	mvn	r0, #0
   1a734:	str	r0, [fp, #-4]
   1a738:	b	1a78c <__assert_fail@plt+0x9764>
   1a73c:	ldr	r0, [fp, #-8]
   1a740:	ldr	r1, [r0]
   1a744:	bic	r1, r1, #16
   1a748:	str	r1, [r0]
   1a74c:	ldr	r0, [sp, #8]
   1a750:	ldr	r1, [sp, #12]
   1a754:	ldr	r2, [fp, #-8]
   1a758:	str	r1, [r2, #84]	; 0x54
   1a75c:	str	r0, [r2, #80]	; 0x50
   1a760:	movw	r0, #0
   1a764:	str	r0, [fp, #-4]
   1a768:	b	1a78c <__assert_fail@plt+0x9764>
   1a76c:	ldr	r0, [fp, #-8]
   1a770:	ldr	r2, [sp, #16]
   1a774:	ldr	r3, [sp, #20]
   1a778:	ldr	r1, [fp, #8]
   1a77c:	mov	ip, sp
   1a780:	str	r1, [ip]
   1a784:	bl	10fbc <fseeko64@plt>
   1a788:	str	r0, [fp, #-4]
   1a78c:	ldr	r0, [fp, #-4]
   1a790:	mov	sp, fp
   1a794:	pop	{fp, pc}
   1a798:	push	{fp, lr}
   1a79c:	mov	fp, sp
   1a7a0:	bl	10f74 <__errno_location@plt>
   1a7a4:	movw	r1, #12
   1a7a8:	str	r1, [r0]
   1a7ac:	movw	r0, #0
   1a7b0:	pop	{fp, pc}
   1a7b4:	push	{fp, lr}
   1a7b8:	mov	fp, sp
   1a7bc:	sub	sp, sp, #8
   1a7c0:	str	r0, [sp, #4]
   1a7c4:	ldr	r0, [sp, #4]
   1a7c8:	cmn	r0, #1
   1a7cc:	bhi	1a7e0 <__assert_fail@plt+0x97b8>
   1a7d0:	ldr	r0, [sp, #4]
   1a7d4:	bl	19bdc <__assert_fail@plt+0x8bb4>
   1a7d8:	str	r0, [sp]
   1a7dc:	b	1a7e8 <__assert_fail@plt+0x97c0>
   1a7e0:	bl	1a798 <__assert_fail@plt+0x9770>
   1a7e4:	str	r0, [sp]
   1a7e8:	ldr	r0, [sp]
   1a7ec:	mov	sp, fp
   1a7f0:	pop	{fp, pc}
   1a7f4:	push	{fp, lr}
   1a7f8:	mov	fp, sp
   1a7fc:	sub	sp, sp, #16
   1a800:	str	r0, [fp, #-4]
   1a804:	str	r1, [sp, #8]
   1a808:	ldr	r0, [sp, #8]
   1a80c:	cmn	r0, #1
   1a810:	bhi	1a848 <__assert_fail@plt+0x9820>
   1a814:	ldr	r0, [fp, #-4]
   1a818:	ldr	r1, [sp, #8]
   1a81c:	ldr	r2, [sp, #8]
   1a820:	cmp	r2, #0
   1a824:	movw	r2, #0
   1a828:	movne	r2, #1
   1a82c:	mvn	r3, #0
   1a830:	eor	r2, r2, r3
   1a834:	and	r2, r2, #1
   1a838:	orr	r1, r1, r2
   1a83c:	bl	19c4c <__assert_fail@plt+0x8c24>
   1a840:	str	r0, [sp, #4]
   1a844:	b	1a850 <__assert_fail@plt+0x9828>
   1a848:	bl	1a798 <__assert_fail@plt+0x9770>
   1a84c:	str	r0, [sp, #4]
   1a850:	ldr	r0, [sp, #4]
   1a854:	mov	sp, fp
   1a858:	pop	{fp, pc}
   1a85c:	push	{fp, lr}
   1a860:	mov	fp, sp
   1a864:	sub	sp, sp, #16
   1a868:	str	r0, [sp, #8]
   1a86c:	str	r1, [sp, #4]
   1a870:	ldr	r0, [sp, #8]
   1a874:	mvn	r1, #0
   1a878:	cmp	r1, r0
   1a87c:	bcs	1a8a0 <__assert_fail@plt+0x9878>
   1a880:	ldr	r0, [sp, #4]
   1a884:	cmp	r0, #0
   1a888:	beq	1a898 <__assert_fail@plt+0x9870>
   1a88c:	bl	1a798 <__assert_fail@plt+0x9770>
   1a890:	str	r0, [fp, #-4]
   1a894:	b	1a8e0 <__assert_fail@plt+0x98b8>
   1a898:	movw	r0, #0
   1a89c:	str	r0, [sp, #8]
   1a8a0:	ldr	r0, [sp, #4]
   1a8a4:	mvn	r1, #0
   1a8a8:	cmp	r1, r0
   1a8ac:	bcs	1a8d0 <__assert_fail@plt+0x98a8>
   1a8b0:	ldr	r0, [sp, #8]
   1a8b4:	cmp	r0, #0
   1a8b8:	beq	1a8c8 <__assert_fail@plt+0x98a0>
   1a8bc:	bl	1a798 <__assert_fail@plt+0x9770>
   1a8c0:	str	r0, [fp, #-4]
   1a8c4:	b	1a8e0 <__assert_fail@plt+0x98b8>
   1a8c8:	movw	r0, #0
   1a8cc:	str	r0, [sp, #4]
   1a8d0:	ldr	r0, [sp, #8]
   1a8d4:	ldr	r1, [sp, #4]
   1a8d8:	bl	19b40 <__assert_fail@plt+0x8b18>
   1a8dc:	str	r0, [fp, #-4]
   1a8e0:	ldr	r0, [fp, #-4]
   1a8e4:	mov	sp, fp
   1a8e8:	pop	{fp, pc}
   1a8ec:	push	{fp, lr}
   1a8f0:	mov	fp, sp
   1a8f4:	sub	sp, sp, #16
   1a8f8:	str	r0, [fp, #-4]
   1a8fc:	str	r1, [sp, #8]
   1a900:	str	r2, [sp, #4]
   1a904:	ldr	r0, [sp, #8]
   1a908:	cmp	r0, #0
   1a90c:	beq	1a91c <__assert_fail@plt+0x98f4>
   1a910:	ldr	r0, [sp, #4]
   1a914:	cmp	r0, #0
   1a918:	bne	1a928 <__assert_fail@plt+0x9900>
   1a91c:	movw	r0, #1
   1a920:	str	r0, [sp, #4]
   1a924:	str	r0, [sp, #8]
   1a928:	ldr	r0, [sp, #8]
   1a92c:	cmn	r0, #1
   1a930:	bhi	1a958 <__assert_fail@plt+0x9930>
   1a934:	ldr	r0, [sp, #4]
   1a938:	cmn	r0, #1
   1a93c:	bhi	1a958 <__assert_fail@plt+0x9930>
   1a940:	ldr	r0, [fp, #-4]
   1a944:	ldr	r1, [sp, #8]
   1a948:	ldr	r2, [sp, #4]
   1a94c:	bl	1aa78 <__assert_fail@plt+0x9a50>
   1a950:	str	r0, [sp]
   1a954:	b	1a960 <__assert_fail@plt+0x9938>
   1a958:	bl	1a798 <__assert_fail@plt+0x9770>
   1a95c:	str	r0, [sp]
   1a960:	ldr	r0, [sp]
   1a964:	mov	sp, fp
   1a968:	pop	{fp, pc}
   1a96c:	push	{fp, lr}
   1a970:	mov	fp, sp
   1a974:	sub	sp, sp, #8
   1a978:	movw	r0, #14
   1a97c:	bl	10fe0 <nl_langinfo@plt>
   1a980:	str	r0, [sp, #4]
   1a984:	ldr	r0, [sp, #4]
   1a988:	movw	r1, #0
   1a98c:	cmp	r0, r1
   1a990:	bne	1a9a0 <__assert_fail@plt+0x9978>
   1a994:	movw	r0, #49981	; 0xc33d
   1a998:	movt	r0, #1
   1a99c:	str	r0, [sp, #4]
   1a9a0:	ldr	r0, [sp, #4]
   1a9a4:	ldrb	r0, [r0]
   1a9a8:	cmp	r0, #0
   1a9ac:	bne	1a9bc <__assert_fail@plt+0x9994>
   1a9b0:	movw	r0, #52034	; 0xcb42
   1a9b4:	movt	r0, #1
   1a9b8:	str	r0, [sp, #4]
   1a9bc:	ldr	r0, [sp, #4]
   1a9c0:	mov	sp, fp
   1a9c4:	pop	{fp, pc}
   1a9c8:	push	{fp, lr}
   1a9cc:	mov	fp, sp
   1a9d0:	sub	sp, sp, #32
   1a9d4:	str	r0, [fp, #-8]
   1a9d8:	str	r1, [fp, #-12]
   1a9dc:	str	r2, [sp, #16]
   1a9e0:	str	r3, [sp, #12]
   1a9e4:	ldr	r0, [fp, #-8]
   1a9e8:	movw	r1, #0
   1a9ec:	cmp	r0, r1
   1a9f0:	bne	1a9fc <__assert_fail@plt+0x99d4>
   1a9f4:	add	r0, sp, #4
   1a9f8:	str	r0, [fp, #-8]
   1a9fc:	ldr	r0, [fp, #-8]
   1aa00:	ldr	r1, [fp, #-12]
   1aa04:	ldr	r2, [sp, #16]
   1aa08:	ldr	r3, [sp, #12]
   1aa0c:	bl	10ec0 <mbrtowc@plt>
   1aa10:	str	r0, [sp, #8]
   1aa14:	ldr	r0, [sp, #8]
   1aa18:	mvn	r1, #1
   1aa1c:	cmp	r1, r0
   1aa20:	bhi	1aa64 <__assert_fail@plt+0x9a3c>
   1aa24:	ldr	r0, [sp, #16]
   1aa28:	cmp	r0, #0
   1aa2c:	beq	1aa64 <__assert_fail@plt+0x9a3c>
   1aa30:	movw	r0, #0
   1aa34:	bl	1bdb8 <__assert_fail@plt+0xad90>
   1aa38:	tst	r0, #1
   1aa3c:	bne	1aa64 <__assert_fail@plt+0x9a3c>
   1aa40:	ldr	r0, [fp, #-12]
   1aa44:	ldrb	r0, [r0]
   1aa48:	strb	r0, [sp, #3]
   1aa4c:	ldrb	r0, [sp, #3]
   1aa50:	ldr	r1, [fp, #-8]
   1aa54:	str	r0, [r1]
   1aa58:	movw	r0, #1
   1aa5c:	str	r0, [fp, #-4]
   1aa60:	b	1aa6c <__assert_fail@plt+0x9a44>
   1aa64:	ldr	r0, [sp, #8]
   1aa68:	str	r0, [fp, #-4]
   1aa6c:	ldr	r0, [fp, #-4]
   1aa70:	mov	sp, fp
   1aa74:	pop	{fp, pc}
   1aa78:	push	{fp, lr}
   1aa7c:	mov	fp, sp
   1aa80:	sub	sp, sp, #96	; 0x60
   1aa84:	str	r0, [fp, #-8]
   1aa88:	str	r1, [fp, #-12]
   1aa8c:	str	r2, [fp, #-16]
   1aa90:	b	1ae48 <__assert_fail@plt+0x9e20>
   1aa94:	b	1ac68 <__assert_fail@plt+0x9c40>
   1aa98:	ldr	r0, [fp, #-16]
   1aa9c:	cmp	r0, #0
   1aaa0:	bcs	1aba4 <__assert_fail@plt+0x9b7c>
   1aaa4:	ldr	r0, [fp, #-12]
   1aaa8:	cmp	r0, #0
   1aaac:	bcs	1ab34 <__assert_fail@plt+0x9b0c>
   1aab0:	b	1aad0 <__assert_fail@plt+0x9aa8>
   1aab4:	ldr	r0, [fp, #-12]
   1aab8:	ldr	r1, [fp, #-16]
   1aabc:	movw	r2, #127	; 0x7f
   1aac0:	udiv	r1, r2, r1
   1aac4:	cmp	r0, r1
   1aac8:	bcc	1ac38 <__assert_fail@plt+0x9c10>
   1aacc:	b	1ac50 <__assert_fail@plt+0x9c28>
   1aad0:	b	1aae4 <__assert_fail@plt+0x9abc>
   1aad4:	ldr	r0, [fp, #-16]
   1aad8:	cmp	r0, #1
   1aadc:	bcc	1aaf4 <__assert_fail@plt+0x9acc>
   1aae0:	b	1ab00 <__assert_fail@plt+0x9ad8>
   1aae4:	ldr	r0, [fp, #-16]
   1aae8:	movw	r1, #0
   1aaec:	cmp	r1, r0
   1aaf0:	bcs	1ab00 <__assert_fail@plt+0x9ad8>
   1aaf4:	movw	r0, #0
   1aaf8:	str	r0, [fp, #-24]	; 0xffffffe8
   1aafc:	b	1ab18 <__assert_fail@plt+0x9af0>
   1ab00:	ldr	r0, [fp, #-16]
   1ab04:	movw	r1, #0
   1ab08:	sub	r0, r1, r0
   1ab0c:	movw	r1, #127	; 0x7f
   1ab10:	udiv	r0, r1, r0
   1ab14:	str	r0, [fp, #-24]	; 0xffffffe8
   1ab18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab1c:	ldr	r1, [fp, #-12]
   1ab20:	mvn	r2, #0
   1ab24:	sub	r1, r2, r1
   1ab28:	cmp	r0, r1
   1ab2c:	bls	1ac38 <__assert_fail@plt+0x9c10>
   1ab30:	b	1ac50 <__assert_fail@plt+0x9c28>
   1ab34:	ldr	r0, [fp, #-16]
   1ab38:	cmn	r0, #1
   1ab3c:	bne	1ab88 <__assert_fail@plt+0x9b60>
   1ab40:	b	1ab60 <__assert_fail@plt+0x9b38>
   1ab44:	ldr	r0, [fp, #-12]
   1ab48:	mvn	r1, #127	; 0x7f
   1ab4c:	add	r0, r0, r1
   1ab50:	movw	r1, #0
   1ab54:	cmp	r1, r0
   1ab58:	bcc	1ac38 <__assert_fail@plt+0x9c10>
   1ab5c:	b	1ac50 <__assert_fail@plt+0x9c28>
   1ab60:	ldr	r0, [fp, #-12]
   1ab64:	movw	r1, #0
   1ab68:	cmp	r1, r0
   1ab6c:	bcs	1ac50 <__assert_fail@plt+0x9c28>
   1ab70:	ldr	r0, [fp, #-12]
   1ab74:	sub	r0, r0, #1
   1ab78:	movw	r1, #127	; 0x7f
   1ab7c:	cmp	r1, r0
   1ab80:	bcc	1ac38 <__assert_fail@plt+0x9c10>
   1ab84:	b	1ac50 <__assert_fail@plt+0x9c28>
   1ab88:	ldr	r0, [fp, #-16]
   1ab8c:	mvn	r1, #127	; 0x7f
   1ab90:	udiv	r0, r1, r0
   1ab94:	ldr	r1, [fp, #-12]
   1ab98:	cmp	r0, r1
   1ab9c:	bcc	1ac38 <__assert_fail@plt+0x9c10>
   1aba0:	b	1ac50 <__assert_fail@plt+0x9c28>
   1aba4:	ldr	r0, [fp, #-16]
   1aba8:	cmp	r0, #0
   1abac:	bne	1abb4 <__assert_fail@plt+0x9b8c>
   1abb0:	b	1ac50 <__assert_fail@plt+0x9c28>
   1abb4:	ldr	r0, [fp, #-12]
   1abb8:	cmp	r0, #0
   1abbc:	bcs	1ac20 <__assert_fail@plt+0x9bf8>
   1abc0:	ldr	r0, [fp, #-12]
   1abc4:	cmn	r0, #1
   1abc8:	bne	1ac04 <__assert_fail@plt+0x9bdc>
   1abcc:	b	1abec <__assert_fail@plt+0x9bc4>
   1abd0:	ldr	r0, [fp, #-16]
   1abd4:	mvn	r1, #127	; 0x7f
   1abd8:	add	r0, r0, r1
   1abdc:	movw	r1, #0
   1abe0:	cmp	r1, r0
   1abe4:	bcc	1ac38 <__assert_fail@plt+0x9c10>
   1abe8:	b	1ac50 <__assert_fail@plt+0x9c28>
   1abec:	ldr	r0, [fp, #-16]
   1abf0:	sub	r0, r0, #1
   1abf4:	movw	r1, #127	; 0x7f
   1abf8:	cmp	r1, r0
   1abfc:	bcc	1ac38 <__assert_fail@plt+0x9c10>
   1ac00:	b	1ac50 <__assert_fail@plt+0x9c28>
   1ac04:	ldr	r0, [fp, #-12]
   1ac08:	mvn	r1, #127	; 0x7f
   1ac0c:	udiv	r0, r1, r0
   1ac10:	ldr	r1, [fp, #-16]
   1ac14:	cmp	r0, r1
   1ac18:	bcc	1ac38 <__assert_fail@plt+0x9c10>
   1ac1c:	b	1ac50 <__assert_fail@plt+0x9c28>
   1ac20:	ldr	r0, [fp, #-16]
   1ac24:	movw	r1, #127	; 0x7f
   1ac28:	udiv	r0, r1, r0
   1ac2c:	ldr	r1, [fp, #-12]
   1ac30:	cmp	r0, r1
   1ac34:	bcs	1ac50 <__assert_fail@plt+0x9c28>
   1ac38:	ldr	r0, [fp, #-12]
   1ac3c:	ldr	r1, [fp, #-16]
   1ac40:	mul	r0, r0, r1
   1ac44:	sxtb	r0, r0
   1ac48:	str	r0, [fp, #-20]	; 0xffffffec
   1ac4c:	b	1bd78 <__assert_fail@plt+0xad50>
   1ac50:	ldr	r0, [fp, #-12]
   1ac54:	ldr	r1, [fp, #-16]
   1ac58:	mul	r0, r0, r1
   1ac5c:	sxtb	r0, r0
   1ac60:	str	r0, [fp, #-20]	; 0xffffffec
   1ac64:	b	1bd90 <__assert_fail@plt+0xad68>
   1ac68:	ldr	r0, [fp, #-16]
   1ac6c:	cmp	r0, #0
   1ac70:	bcs	1ad7c <__assert_fail@plt+0x9d54>
   1ac74:	ldr	r0, [fp, #-12]
   1ac78:	cmp	r0, #0
   1ac7c:	bcs	1ad04 <__assert_fail@plt+0x9cdc>
   1ac80:	b	1aca0 <__assert_fail@plt+0x9c78>
   1ac84:	ldr	r0, [fp, #-12]
   1ac88:	ldr	r1, [fp, #-16]
   1ac8c:	movw	r2, #255	; 0xff
   1ac90:	udiv	r1, r2, r1
   1ac94:	cmp	r0, r1
   1ac98:	bcc	1ae18 <__assert_fail@plt+0x9df0>
   1ac9c:	b	1ae30 <__assert_fail@plt+0x9e08>
   1aca0:	b	1acb4 <__assert_fail@plt+0x9c8c>
   1aca4:	ldr	r0, [fp, #-16]
   1aca8:	cmp	r0, #1
   1acac:	bcc	1acc4 <__assert_fail@plt+0x9c9c>
   1acb0:	b	1acd0 <__assert_fail@plt+0x9ca8>
   1acb4:	ldr	r0, [fp, #-16]
   1acb8:	movw	r1, #0
   1acbc:	cmp	r1, r0
   1acc0:	bcs	1acd0 <__assert_fail@plt+0x9ca8>
   1acc4:	movw	r0, #0
   1acc8:	str	r0, [fp, #-28]	; 0xffffffe4
   1accc:	b	1ace8 <__assert_fail@plt+0x9cc0>
   1acd0:	ldr	r0, [fp, #-16]
   1acd4:	movw	r1, #0
   1acd8:	sub	r0, r1, r0
   1acdc:	movw	r1, #255	; 0xff
   1ace0:	udiv	r0, r1, r0
   1ace4:	str	r0, [fp, #-28]	; 0xffffffe4
   1ace8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1acec:	ldr	r1, [fp, #-12]
   1acf0:	mvn	r2, #0
   1acf4:	sub	r1, r2, r1
   1acf8:	cmp	r0, r1
   1acfc:	bls	1ae18 <__assert_fail@plt+0x9df0>
   1ad00:	b	1ae30 <__assert_fail@plt+0x9e08>
   1ad04:	b	1ad0c <__assert_fail@plt+0x9ce4>
   1ad08:	b	1ad10 <__assert_fail@plt+0x9ce8>
   1ad0c:	b	1ad60 <__assert_fail@plt+0x9d38>
   1ad10:	ldr	r0, [fp, #-16]
   1ad14:	cmn	r0, #1
   1ad18:	bne	1ad60 <__assert_fail@plt+0x9d38>
   1ad1c:	b	1ad38 <__assert_fail@plt+0x9d10>
   1ad20:	ldr	r0, [fp, #-12]
   1ad24:	add	r0, r0, #0
   1ad28:	movw	r1, #0
   1ad2c:	cmp	r1, r0
   1ad30:	bcc	1ae18 <__assert_fail@plt+0x9df0>
   1ad34:	b	1ae30 <__assert_fail@plt+0x9e08>
   1ad38:	ldr	r0, [fp, #-12]
   1ad3c:	movw	r1, #0
   1ad40:	cmp	r1, r0
   1ad44:	bcs	1ae30 <__assert_fail@plt+0x9e08>
   1ad48:	ldr	r0, [fp, #-12]
   1ad4c:	sub	r0, r0, #1
   1ad50:	mvn	r1, #0
   1ad54:	cmp	r1, r0
   1ad58:	bcc	1ae18 <__assert_fail@plt+0x9df0>
   1ad5c:	b	1ae30 <__assert_fail@plt+0x9e08>
   1ad60:	ldr	r0, [fp, #-16]
   1ad64:	movw	r1, #0
   1ad68:	udiv	r0, r1, r0
   1ad6c:	ldr	r1, [fp, #-12]
   1ad70:	cmp	r0, r1
   1ad74:	bcc	1ae18 <__assert_fail@plt+0x9df0>
   1ad78:	b	1ae30 <__assert_fail@plt+0x9e08>
   1ad7c:	ldr	r0, [fp, #-16]
   1ad80:	cmp	r0, #0
   1ad84:	bne	1ad8c <__assert_fail@plt+0x9d64>
   1ad88:	b	1ae30 <__assert_fail@plt+0x9e08>
   1ad8c:	ldr	r0, [fp, #-12]
   1ad90:	cmp	r0, #0
   1ad94:	bcs	1ae00 <__assert_fail@plt+0x9dd8>
   1ad98:	b	1ada0 <__assert_fail@plt+0x9d78>
   1ad9c:	b	1ada4 <__assert_fail@plt+0x9d7c>
   1ada0:	b	1ade4 <__assert_fail@plt+0x9dbc>
   1ada4:	ldr	r0, [fp, #-12]
   1ada8:	cmn	r0, #1
   1adac:	bne	1ade4 <__assert_fail@plt+0x9dbc>
   1adb0:	b	1adcc <__assert_fail@plt+0x9da4>
   1adb4:	ldr	r0, [fp, #-16]
   1adb8:	add	r0, r0, #0
   1adbc:	movw	r1, #0
   1adc0:	cmp	r1, r0
   1adc4:	bcc	1ae18 <__assert_fail@plt+0x9df0>
   1adc8:	b	1ae30 <__assert_fail@plt+0x9e08>
   1adcc:	ldr	r0, [fp, #-16]
   1add0:	sub	r0, r0, #1
   1add4:	mvn	r1, #0
   1add8:	cmp	r1, r0
   1addc:	bcc	1ae18 <__assert_fail@plt+0x9df0>
   1ade0:	b	1ae30 <__assert_fail@plt+0x9e08>
   1ade4:	ldr	r0, [fp, #-12]
   1ade8:	movw	r1, #0
   1adec:	udiv	r0, r1, r0
   1adf0:	ldr	r1, [fp, #-16]
   1adf4:	cmp	r0, r1
   1adf8:	bcc	1ae18 <__assert_fail@plt+0x9df0>
   1adfc:	b	1ae30 <__assert_fail@plt+0x9e08>
   1ae00:	ldr	r0, [fp, #-16]
   1ae04:	movw	r1, #255	; 0xff
   1ae08:	udiv	r0, r1, r0
   1ae0c:	ldr	r1, [fp, #-12]
   1ae10:	cmp	r0, r1
   1ae14:	bcs	1ae30 <__assert_fail@plt+0x9e08>
   1ae18:	ldr	r0, [fp, #-12]
   1ae1c:	ldr	r1, [fp, #-16]
   1ae20:	mul	r0, r0, r1
   1ae24:	and	r0, r0, #255	; 0xff
   1ae28:	str	r0, [fp, #-20]	; 0xffffffec
   1ae2c:	b	1bd78 <__assert_fail@plt+0xad50>
   1ae30:	ldr	r0, [fp, #-12]
   1ae34:	ldr	r1, [fp, #-16]
   1ae38:	mul	r0, r0, r1
   1ae3c:	and	r0, r0, #255	; 0xff
   1ae40:	str	r0, [fp, #-20]	; 0xffffffec
   1ae44:	b	1bd90 <__assert_fail@plt+0xad68>
   1ae48:	b	1b200 <__assert_fail@plt+0xa1d8>
   1ae4c:	b	1b020 <__assert_fail@plt+0x9ff8>
   1ae50:	ldr	r0, [fp, #-16]
   1ae54:	cmp	r0, #0
   1ae58:	bcs	1af5c <__assert_fail@plt+0x9f34>
   1ae5c:	ldr	r0, [fp, #-12]
   1ae60:	cmp	r0, #0
   1ae64:	bcs	1aeec <__assert_fail@plt+0x9ec4>
   1ae68:	b	1ae88 <__assert_fail@plt+0x9e60>
   1ae6c:	ldr	r0, [fp, #-12]
   1ae70:	ldr	r1, [fp, #-16]
   1ae74:	movw	r2, #32767	; 0x7fff
   1ae78:	udiv	r1, r2, r1
   1ae7c:	cmp	r0, r1
   1ae80:	bcc	1aff0 <__assert_fail@plt+0x9fc8>
   1ae84:	b	1b008 <__assert_fail@plt+0x9fe0>
   1ae88:	b	1ae9c <__assert_fail@plt+0x9e74>
   1ae8c:	ldr	r0, [fp, #-16]
   1ae90:	cmp	r0, #1
   1ae94:	bcc	1aeac <__assert_fail@plt+0x9e84>
   1ae98:	b	1aeb8 <__assert_fail@plt+0x9e90>
   1ae9c:	ldr	r0, [fp, #-16]
   1aea0:	movw	r1, #0
   1aea4:	cmp	r1, r0
   1aea8:	bcs	1aeb8 <__assert_fail@plt+0x9e90>
   1aeac:	movw	r0, #0
   1aeb0:	str	r0, [fp, #-32]	; 0xffffffe0
   1aeb4:	b	1aed0 <__assert_fail@plt+0x9ea8>
   1aeb8:	ldr	r0, [fp, #-16]
   1aebc:	movw	r1, #0
   1aec0:	sub	r0, r1, r0
   1aec4:	movw	r1, #32767	; 0x7fff
   1aec8:	udiv	r0, r1, r0
   1aecc:	str	r0, [fp, #-32]	; 0xffffffe0
   1aed0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1aed4:	ldr	r1, [fp, #-12]
   1aed8:	mvn	r2, #0
   1aedc:	sub	r1, r2, r1
   1aee0:	cmp	r0, r1
   1aee4:	bls	1aff0 <__assert_fail@plt+0x9fc8>
   1aee8:	b	1b008 <__assert_fail@plt+0x9fe0>
   1aeec:	ldr	r0, [fp, #-16]
   1aef0:	cmn	r0, #1
   1aef4:	bne	1af40 <__assert_fail@plt+0x9f18>
   1aef8:	b	1af18 <__assert_fail@plt+0x9ef0>
   1aefc:	ldr	r0, [pc, #3760]	; 1bdb4 <__assert_fail@plt+0xad8c>
   1af00:	ldr	r1, [fp, #-12]
   1af04:	add	r0, r1, r0
   1af08:	movw	r1, #0
   1af0c:	cmp	r1, r0
   1af10:	bcc	1aff0 <__assert_fail@plt+0x9fc8>
   1af14:	b	1b008 <__assert_fail@plt+0x9fe0>
   1af18:	ldr	r0, [fp, #-12]
   1af1c:	movw	r1, #0
   1af20:	cmp	r1, r0
   1af24:	bcs	1b008 <__assert_fail@plt+0x9fe0>
   1af28:	ldr	r0, [fp, #-12]
   1af2c:	sub	r0, r0, #1
   1af30:	movw	r1, #32767	; 0x7fff
   1af34:	cmp	r1, r0
   1af38:	bcc	1aff0 <__assert_fail@plt+0x9fc8>
   1af3c:	b	1b008 <__assert_fail@plt+0x9fe0>
   1af40:	ldr	r0, [pc, #3692]	; 1bdb4 <__assert_fail@plt+0xad8c>
   1af44:	ldr	r1, [fp, #-16]
   1af48:	udiv	r0, r0, r1
   1af4c:	ldr	r1, [fp, #-12]
   1af50:	cmp	r0, r1
   1af54:	bcc	1aff0 <__assert_fail@plt+0x9fc8>
   1af58:	b	1b008 <__assert_fail@plt+0x9fe0>
   1af5c:	ldr	r0, [fp, #-16]
   1af60:	cmp	r0, #0
   1af64:	bne	1af6c <__assert_fail@plt+0x9f44>
   1af68:	b	1b008 <__assert_fail@plt+0x9fe0>
   1af6c:	ldr	r0, [fp, #-12]
   1af70:	cmp	r0, #0
   1af74:	bcs	1afd8 <__assert_fail@plt+0x9fb0>
   1af78:	ldr	r0, [fp, #-12]
   1af7c:	cmn	r0, #1
   1af80:	bne	1afbc <__assert_fail@plt+0x9f94>
   1af84:	b	1afa4 <__assert_fail@plt+0x9f7c>
   1af88:	ldr	r0, [pc, #3620]	; 1bdb4 <__assert_fail@plt+0xad8c>
   1af8c:	ldr	r1, [fp, #-16]
   1af90:	add	r0, r1, r0
   1af94:	movw	r1, #0
   1af98:	cmp	r1, r0
   1af9c:	bcc	1aff0 <__assert_fail@plt+0x9fc8>
   1afa0:	b	1b008 <__assert_fail@plt+0x9fe0>
   1afa4:	ldr	r0, [fp, #-16]
   1afa8:	sub	r0, r0, #1
   1afac:	movw	r1, #32767	; 0x7fff
   1afb0:	cmp	r1, r0
   1afb4:	bcc	1aff0 <__assert_fail@plt+0x9fc8>
   1afb8:	b	1b008 <__assert_fail@plt+0x9fe0>
   1afbc:	ldr	r0, [pc, #3568]	; 1bdb4 <__assert_fail@plt+0xad8c>
   1afc0:	ldr	r1, [fp, #-12]
   1afc4:	udiv	r0, r0, r1
   1afc8:	ldr	r1, [fp, #-16]
   1afcc:	cmp	r0, r1
   1afd0:	bcc	1aff0 <__assert_fail@plt+0x9fc8>
   1afd4:	b	1b008 <__assert_fail@plt+0x9fe0>
   1afd8:	ldr	r0, [fp, #-16]
   1afdc:	movw	r1, #32767	; 0x7fff
   1afe0:	udiv	r0, r1, r0
   1afe4:	ldr	r1, [fp, #-12]
   1afe8:	cmp	r0, r1
   1afec:	bcs	1b008 <__assert_fail@plt+0x9fe0>
   1aff0:	ldr	r0, [fp, #-12]
   1aff4:	ldr	r1, [fp, #-16]
   1aff8:	mul	r0, r0, r1
   1affc:	sxth	r0, r0
   1b000:	str	r0, [fp, #-20]	; 0xffffffec
   1b004:	b	1bd78 <__assert_fail@plt+0xad50>
   1b008:	ldr	r0, [fp, #-12]
   1b00c:	ldr	r1, [fp, #-16]
   1b010:	mul	r0, r0, r1
   1b014:	sxth	r0, r0
   1b018:	str	r0, [fp, #-20]	; 0xffffffec
   1b01c:	b	1bd90 <__assert_fail@plt+0xad68>
   1b020:	ldr	r0, [fp, #-16]
   1b024:	cmp	r0, #0
   1b028:	bcs	1b134 <__assert_fail@plt+0xa10c>
   1b02c:	ldr	r0, [fp, #-12]
   1b030:	cmp	r0, #0
   1b034:	bcs	1b0bc <__assert_fail@plt+0xa094>
   1b038:	b	1b058 <__assert_fail@plt+0xa030>
   1b03c:	ldr	r0, [fp, #-12]
   1b040:	ldr	r1, [fp, #-16]
   1b044:	movw	r2, #65535	; 0xffff
   1b048:	udiv	r1, r2, r1
   1b04c:	cmp	r0, r1
   1b050:	bcc	1b1d0 <__assert_fail@plt+0xa1a8>
   1b054:	b	1b1e8 <__assert_fail@plt+0xa1c0>
   1b058:	b	1b06c <__assert_fail@plt+0xa044>
   1b05c:	ldr	r0, [fp, #-16]
   1b060:	cmp	r0, #1
   1b064:	bcc	1b07c <__assert_fail@plt+0xa054>
   1b068:	b	1b088 <__assert_fail@plt+0xa060>
   1b06c:	ldr	r0, [fp, #-16]
   1b070:	movw	r1, #0
   1b074:	cmp	r1, r0
   1b078:	bcs	1b088 <__assert_fail@plt+0xa060>
   1b07c:	movw	r0, #0
   1b080:	str	r0, [fp, #-36]	; 0xffffffdc
   1b084:	b	1b0a0 <__assert_fail@plt+0xa078>
   1b088:	ldr	r0, [fp, #-16]
   1b08c:	movw	r1, #0
   1b090:	sub	r0, r1, r0
   1b094:	movw	r1, #65535	; 0xffff
   1b098:	udiv	r0, r1, r0
   1b09c:	str	r0, [fp, #-36]	; 0xffffffdc
   1b0a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b0a4:	ldr	r1, [fp, #-12]
   1b0a8:	mvn	r2, #0
   1b0ac:	sub	r1, r2, r1
   1b0b0:	cmp	r0, r1
   1b0b4:	bls	1b1d0 <__assert_fail@plt+0xa1a8>
   1b0b8:	b	1b1e8 <__assert_fail@plt+0xa1c0>
   1b0bc:	b	1b0c4 <__assert_fail@plt+0xa09c>
   1b0c0:	b	1b0c8 <__assert_fail@plt+0xa0a0>
   1b0c4:	b	1b118 <__assert_fail@plt+0xa0f0>
   1b0c8:	ldr	r0, [fp, #-16]
   1b0cc:	cmn	r0, #1
   1b0d0:	bne	1b118 <__assert_fail@plt+0xa0f0>
   1b0d4:	b	1b0f0 <__assert_fail@plt+0xa0c8>
   1b0d8:	ldr	r0, [fp, #-12]
   1b0dc:	add	r0, r0, #0
   1b0e0:	movw	r1, #0
   1b0e4:	cmp	r1, r0
   1b0e8:	bcc	1b1d0 <__assert_fail@plt+0xa1a8>
   1b0ec:	b	1b1e8 <__assert_fail@plt+0xa1c0>
   1b0f0:	ldr	r0, [fp, #-12]
   1b0f4:	movw	r1, #0
   1b0f8:	cmp	r1, r0
   1b0fc:	bcs	1b1e8 <__assert_fail@plt+0xa1c0>
   1b100:	ldr	r0, [fp, #-12]
   1b104:	sub	r0, r0, #1
   1b108:	mvn	r1, #0
   1b10c:	cmp	r1, r0
   1b110:	bcc	1b1d0 <__assert_fail@plt+0xa1a8>
   1b114:	b	1b1e8 <__assert_fail@plt+0xa1c0>
   1b118:	ldr	r0, [fp, #-16]
   1b11c:	movw	r1, #0
   1b120:	udiv	r0, r1, r0
   1b124:	ldr	r1, [fp, #-12]
   1b128:	cmp	r0, r1
   1b12c:	bcc	1b1d0 <__assert_fail@plt+0xa1a8>
   1b130:	b	1b1e8 <__assert_fail@plt+0xa1c0>
   1b134:	ldr	r0, [fp, #-16]
   1b138:	cmp	r0, #0
   1b13c:	bne	1b144 <__assert_fail@plt+0xa11c>
   1b140:	b	1b1e8 <__assert_fail@plt+0xa1c0>
   1b144:	ldr	r0, [fp, #-12]
   1b148:	cmp	r0, #0
   1b14c:	bcs	1b1b8 <__assert_fail@plt+0xa190>
   1b150:	b	1b158 <__assert_fail@plt+0xa130>
   1b154:	b	1b15c <__assert_fail@plt+0xa134>
   1b158:	b	1b19c <__assert_fail@plt+0xa174>
   1b15c:	ldr	r0, [fp, #-12]
   1b160:	cmn	r0, #1
   1b164:	bne	1b19c <__assert_fail@plt+0xa174>
   1b168:	b	1b184 <__assert_fail@plt+0xa15c>
   1b16c:	ldr	r0, [fp, #-16]
   1b170:	add	r0, r0, #0
   1b174:	movw	r1, #0
   1b178:	cmp	r1, r0
   1b17c:	bcc	1b1d0 <__assert_fail@plt+0xa1a8>
   1b180:	b	1b1e8 <__assert_fail@plt+0xa1c0>
   1b184:	ldr	r0, [fp, #-16]
   1b188:	sub	r0, r0, #1
   1b18c:	mvn	r1, #0
   1b190:	cmp	r1, r0
   1b194:	bcc	1b1d0 <__assert_fail@plt+0xa1a8>
   1b198:	b	1b1e8 <__assert_fail@plt+0xa1c0>
   1b19c:	ldr	r0, [fp, #-12]
   1b1a0:	movw	r1, #0
   1b1a4:	udiv	r0, r1, r0
   1b1a8:	ldr	r1, [fp, #-16]
   1b1ac:	cmp	r0, r1
   1b1b0:	bcc	1b1d0 <__assert_fail@plt+0xa1a8>
   1b1b4:	b	1b1e8 <__assert_fail@plt+0xa1c0>
   1b1b8:	ldr	r0, [fp, #-16]
   1b1bc:	movw	r1, #65535	; 0xffff
   1b1c0:	udiv	r0, r1, r0
   1b1c4:	ldr	r1, [fp, #-12]
   1b1c8:	cmp	r0, r1
   1b1cc:	bcs	1b1e8 <__assert_fail@plt+0xa1c0>
   1b1d0:	ldr	r0, [fp, #-12]
   1b1d4:	ldr	r1, [fp, #-16]
   1b1d8:	mul	r0, r0, r1
   1b1dc:	uxth	r0, r0
   1b1e0:	str	r0, [fp, #-20]	; 0xffffffec
   1b1e4:	b	1bd78 <__assert_fail@plt+0xad50>
   1b1e8:	ldr	r0, [fp, #-12]
   1b1ec:	ldr	r1, [fp, #-16]
   1b1f0:	mul	r0, r0, r1
   1b1f4:	uxth	r0, r0
   1b1f8:	str	r0, [fp, #-20]	; 0xffffffec
   1b1fc:	b	1bd90 <__assert_fail@plt+0xad68>
   1b200:	b	1b204 <__assert_fail@plt+0xa1dc>
   1b204:	b	1b3c8 <__assert_fail@plt+0xa3a0>
   1b208:	ldr	r0, [fp, #-16]
   1b20c:	cmp	r0, #0
   1b210:	bcs	1b310 <__assert_fail@plt+0xa2e8>
   1b214:	ldr	r0, [fp, #-12]
   1b218:	cmp	r0, #0
   1b21c:	bcs	1b2a4 <__assert_fail@plt+0xa27c>
   1b220:	b	1b240 <__assert_fail@plt+0xa218>
   1b224:	ldr	r0, [pc, #2944]	; 1bdac <__assert_fail@plt+0xad84>
   1b228:	ldr	r1, [fp, #-12]
   1b22c:	ldr	r2, [fp, #-16]
   1b230:	udiv	r0, r0, r2
   1b234:	cmp	r1, r0
   1b238:	bcc	1b3a0 <__assert_fail@plt+0xa378>
   1b23c:	b	1b3b4 <__assert_fail@plt+0xa38c>
   1b240:	b	1b254 <__assert_fail@plt+0xa22c>
   1b244:	ldr	r0, [fp, #-16]
   1b248:	cmp	r0, #1
   1b24c:	bcc	1b264 <__assert_fail@plt+0xa23c>
   1b250:	b	1b270 <__assert_fail@plt+0xa248>
   1b254:	ldr	r0, [fp, #-16]
   1b258:	movw	r1, #0
   1b25c:	cmp	r1, r0
   1b260:	bcs	1b270 <__assert_fail@plt+0xa248>
   1b264:	movw	r0, #0
   1b268:	str	r0, [fp, #-40]	; 0xffffffd8
   1b26c:	b	1b288 <__assert_fail@plt+0xa260>
   1b270:	ldr	r0, [pc, #2868]	; 1bdac <__assert_fail@plt+0xad84>
   1b274:	ldr	r1, [fp, #-16]
   1b278:	movw	r2, #0
   1b27c:	sub	r1, r2, r1
   1b280:	udiv	r0, r0, r1
   1b284:	str	r0, [fp, #-40]	; 0xffffffd8
   1b288:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b28c:	ldr	r1, [fp, #-12]
   1b290:	mvn	r2, #0
   1b294:	sub	r1, r2, r1
   1b298:	cmp	r0, r1
   1b29c:	bls	1b3a0 <__assert_fail@plt+0xa378>
   1b2a0:	b	1b3b4 <__assert_fail@plt+0xa38c>
   1b2a4:	ldr	r0, [fp, #-16]
   1b2a8:	cmn	r0, #1
   1b2ac:	bne	1b2f4 <__assert_fail@plt+0xa2cc>
   1b2b0:	b	1b2cc <__assert_fail@plt+0xa2a4>
   1b2b4:	ldr	r0, [fp, #-12]
   1b2b8:	add	r0, r0, #-2147483648	; 0x80000000
   1b2bc:	movw	r1, #0
   1b2c0:	cmp	r1, r0
   1b2c4:	bcc	1b3a0 <__assert_fail@plt+0xa378>
   1b2c8:	b	1b3b4 <__assert_fail@plt+0xa38c>
   1b2cc:	ldr	r0, [fp, #-12]
   1b2d0:	movw	r1, #0
   1b2d4:	cmp	r1, r0
   1b2d8:	bcs	1b3b4 <__assert_fail@plt+0xa38c>
   1b2dc:	ldr	r0, [pc, #2760]	; 1bdac <__assert_fail@plt+0xad84>
   1b2e0:	ldr	r1, [fp, #-12]
   1b2e4:	sub	r1, r1, #1
   1b2e8:	cmp	r0, r1
   1b2ec:	bcc	1b3a0 <__assert_fail@plt+0xa378>
   1b2f0:	b	1b3b4 <__assert_fail@plt+0xa38c>
   1b2f4:	ldr	r0, [pc, #2740]	; 1bdb0 <__assert_fail@plt+0xad88>
   1b2f8:	ldr	r1, [fp, #-16]
   1b2fc:	udiv	r0, r0, r1
   1b300:	ldr	r1, [fp, #-12]
   1b304:	cmp	r0, r1
   1b308:	bcc	1b3a0 <__assert_fail@plt+0xa378>
   1b30c:	b	1b3b4 <__assert_fail@plt+0xa38c>
   1b310:	ldr	r0, [fp, #-16]
   1b314:	cmp	r0, #0
   1b318:	bne	1b320 <__assert_fail@plt+0xa2f8>
   1b31c:	b	1b3b4 <__assert_fail@plt+0xa38c>
   1b320:	ldr	r0, [fp, #-12]
   1b324:	cmp	r0, #0
   1b328:	bcs	1b388 <__assert_fail@plt+0xa360>
   1b32c:	ldr	r0, [fp, #-12]
   1b330:	cmn	r0, #1
   1b334:	bne	1b36c <__assert_fail@plt+0xa344>
   1b338:	b	1b354 <__assert_fail@plt+0xa32c>
   1b33c:	ldr	r0, [fp, #-16]
   1b340:	add	r0, r0, #-2147483648	; 0x80000000
   1b344:	movw	r1, #0
   1b348:	cmp	r1, r0
   1b34c:	bcc	1b3a0 <__assert_fail@plt+0xa378>
   1b350:	b	1b3b4 <__assert_fail@plt+0xa38c>
   1b354:	ldr	r0, [pc, #2640]	; 1bdac <__assert_fail@plt+0xad84>
   1b358:	ldr	r1, [fp, #-16]
   1b35c:	sub	r1, r1, #1
   1b360:	cmp	r0, r1
   1b364:	bcc	1b3a0 <__assert_fail@plt+0xa378>
   1b368:	b	1b3b4 <__assert_fail@plt+0xa38c>
   1b36c:	ldr	r0, [pc, #2620]	; 1bdb0 <__assert_fail@plt+0xad88>
   1b370:	ldr	r1, [fp, #-12]
   1b374:	udiv	r0, r0, r1
   1b378:	ldr	r1, [fp, #-16]
   1b37c:	cmp	r0, r1
   1b380:	bcc	1b3a0 <__assert_fail@plt+0xa378>
   1b384:	b	1b3b4 <__assert_fail@plt+0xa38c>
   1b388:	ldr	r0, [pc, #2588]	; 1bdac <__assert_fail@plt+0xad84>
   1b38c:	ldr	r1, [fp, #-16]
   1b390:	udiv	r0, r0, r1
   1b394:	ldr	r1, [fp, #-12]
   1b398:	cmp	r0, r1
   1b39c:	bcs	1b3b4 <__assert_fail@plt+0xa38c>
   1b3a0:	ldr	r0, [fp, #-12]
   1b3a4:	ldr	r1, [fp, #-16]
   1b3a8:	mul	r0, r0, r1
   1b3ac:	str	r0, [fp, #-20]	; 0xffffffec
   1b3b0:	b	1bd78 <__assert_fail@plt+0xad50>
   1b3b4:	ldr	r0, [fp, #-12]
   1b3b8:	ldr	r1, [fp, #-16]
   1b3bc:	mul	r0, r0, r1
   1b3c0:	str	r0, [fp, #-20]	; 0xffffffec
   1b3c4:	b	1bd90 <__assert_fail@plt+0xad68>
   1b3c8:	ldr	r0, [fp, #-16]
   1b3cc:	cmp	r0, #0
   1b3d0:	bcs	1b4dc <__assert_fail@plt+0xa4b4>
   1b3d4:	ldr	r0, [fp, #-12]
   1b3d8:	cmp	r0, #0
   1b3dc:	bcs	1b464 <__assert_fail@plt+0xa43c>
   1b3e0:	b	1b400 <__assert_fail@plt+0xa3d8>
   1b3e4:	ldr	r0, [fp, #-12]
   1b3e8:	ldr	r1, [fp, #-16]
   1b3ec:	mvn	r2, #0
   1b3f0:	udiv	r1, r2, r1
   1b3f4:	cmp	r0, r1
   1b3f8:	bcc	1b578 <__assert_fail@plt+0xa550>
   1b3fc:	b	1b58c <__assert_fail@plt+0xa564>
   1b400:	b	1b414 <__assert_fail@plt+0xa3ec>
   1b404:	ldr	r0, [fp, #-16]
   1b408:	cmp	r0, #1
   1b40c:	bcc	1b424 <__assert_fail@plt+0xa3fc>
   1b410:	b	1b430 <__assert_fail@plt+0xa408>
   1b414:	ldr	r0, [fp, #-16]
   1b418:	movw	r1, #0
   1b41c:	cmp	r1, r0
   1b420:	bcs	1b430 <__assert_fail@plt+0xa408>
   1b424:	movw	r0, #1
   1b428:	str	r0, [fp, #-44]	; 0xffffffd4
   1b42c:	b	1b448 <__assert_fail@plt+0xa420>
   1b430:	ldr	r0, [fp, #-16]
   1b434:	movw	r1, #0
   1b438:	sub	r0, r1, r0
   1b43c:	mvn	r1, #0
   1b440:	udiv	r0, r1, r0
   1b444:	str	r0, [fp, #-44]	; 0xffffffd4
   1b448:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b44c:	ldr	r1, [fp, #-12]
   1b450:	mvn	r2, #0
   1b454:	sub	r1, r2, r1
   1b458:	cmp	r0, r1
   1b45c:	bls	1b578 <__assert_fail@plt+0xa550>
   1b460:	b	1b58c <__assert_fail@plt+0xa564>
   1b464:	b	1b46c <__assert_fail@plt+0xa444>
   1b468:	b	1b470 <__assert_fail@plt+0xa448>
   1b46c:	b	1b4c0 <__assert_fail@plt+0xa498>
   1b470:	ldr	r0, [fp, #-16]
   1b474:	cmn	r0, #1
   1b478:	bne	1b4c0 <__assert_fail@plt+0xa498>
   1b47c:	b	1b498 <__assert_fail@plt+0xa470>
   1b480:	ldr	r0, [fp, #-12]
   1b484:	add	r0, r0, #0
   1b488:	movw	r1, #0
   1b48c:	cmp	r1, r0
   1b490:	bcc	1b578 <__assert_fail@plt+0xa550>
   1b494:	b	1b58c <__assert_fail@plt+0xa564>
   1b498:	ldr	r0, [fp, #-12]
   1b49c:	movw	r1, #0
   1b4a0:	cmp	r1, r0
   1b4a4:	bcs	1b58c <__assert_fail@plt+0xa564>
   1b4a8:	ldr	r0, [fp, #-12]
   1b4ac:	sub	r0, r0, #1
   1b4b0:	mvn	r1, #0
   1b4b4:	cmp	r1, r0
   1b4b8:	bcc	1b578 <__assert_fail@plt+0xa550>
   1b4bc:	b	1b58c <__assert_fail@plt+0xa564>
   1b4c0:	ldr	r0, [fp, #-16]
   1b4c4:	movw	r1, #0
   1b4c8:	udiv	r0, r1, r0
   1b4cc:	ldr	r1, [fp, #-12]
   1b4d0:	cmp	r0, r1
   1b4d4:	bcc	1b578 <__assert_fail@plt+0xa550>
   1b4d8:	b	1b58c <__assert_fail@plt+0xa564>
   1b4dc:	ldr	r0, [fp, #-16]
   1b4e0:	cmp	r0, #0
   1b4e4:	bne	1b4ec <__assert_fail@plt+0xa4c4>
   1b4e8:	b	1b58c <__assert_fail@plt+0xa564>
   1b4ec:	ldr	r0, [fp, #-12]
   1b4f0:	cmp	r0, #0
   1b4f4:	bcs	1b560 <__assert_fail@plt+0xa538>
   1b4f8:	b	1b500 <__assert_fail@plt+0xa4d8>
   1b4fc:	b	1b504 <__assert_fail@plt+0xa4dc>
   1b500:	b	1b544 <__assert_fail@plt+0xa51c>
   1b504:	ldr	r0, [fp, #-12]
   1b508:	cmn	r0, #1
   1b50c:	bne	1b544 <__assert_fail@plt+0xa51c>
   1b510:	b	1b52c <__assert_fail@plt+0xa504>
   1b514:	ldr	r0, [fp, #-16]
   1b518:	add	r0, r0, #0
   1b51c:	movw	r1, #0
   1b520:	cmp	r1, r0
   1b524:	bcc	1b578 <__assert_fail@plt+0xa550>
   1b528:	b	1b58c <__assert_fail@plt+0xa564>
   1b52c:	ldr	r0, [fp, #-16]
   1b530:	sub	r0, r0, #1
   1b534:	mvn	r1, #0
   1b538:	cmp	r1, r0
   1b53c:	bcc	1b578 <__assert_fail@plt+0xa550>
   1b540:	b	1b58c <__assert_fail@plt+0xa564>
   1b544:	ldr	r0, [fp, #-12]
   1b548:	movw	r1, #0
   1b54c:	udiv	r0, r1, r0
   1b550:	ldr	r1, [fp, #-16]
   1b554:	cmp	r0, r1
   1b558:	bcc	1b578 <__assert_fail@plt+0xa550>
   1b55c:	b	1b58c <__assert_fail@plt+0xa564>
   1b560:	ldr	r0, [fp, #-16]
   1b564:	mvn	r1, #0
   1b568:	udiv	r0, r1, r0
   1b56c:	ldr	r1, [fp, #-12]
   1b570:	cmp	r0, r1
   1b574:	bcs	1b58c <__assert_fail@plt+0xa564>
   1b578:	ldr	r0, [fp, #-12]
   1b57c:	ldr	r1, [fp, #-16]
   1b580:	mul	r0, r0, r1
   1b584:	str	r0, [fp, #-20]	; 0xffffffec
   1b588:	b	1bd78 <__assert_fail@plt+0xad50>
   1b58c:	ldr	r0, [fp, #-12]
   1b590:	ldr	r1, [fp, #-16]
   1b594:	mul	r0, r0, r1
   1b598:	str	r0, [fp, #-20]	; 0xffffffec
   1b59c:	b	1bd90 <__assert_fail@plt+0xad68>
   1b5a0:	b	1b5a4 <__assert_fail@plt+0xa57c>
   1b5a4:	b	1b768 <__assert_fail@plt+0xa740>
   1b5a8:	ldr	r0, [fp, #-16]
   1b5ac:	cmp	r0, #0
   1b5b0:	bcs	1b6b0 <__assert_fail@plt+0xa688>
   1b5b4:	ldr	r0, [fp, #-12]
   1b5b8:	cmp	r0, #0
   1b5bc:	bcs	1b644 <__assert_fail@plt+0xa61c>
   1b5c0:	b	1b5e0 <__assert_fail@plt+0xa5b8>
   1b5c4:	ldr	r0, [pc, #2016]	; 1bdac <__assert_fail@plt+0xad84>
   1b5c8:	ldr	r1, [fp, #-12]
   1b5cc:	ldr	r2, [fp, #-16]
   1b5d0:	udiv	r0, r0, r2
   1b5d4:	cmp	r1, r0
   1b5d8:	bcc	1b740 <__assert_fail@plt+0xa718>
   1b5dc:	b	1b754 <__assert_fail@plt+0xa72c>
   1b5e0:	b	1b5f4 <__assert_fail@plt+0xa5cc>
   1b5e4:	ldr	r0, [fp, #-16]
   1b5e8:	cmp	r0, #1
   1b5ec:	bcc	1b604 <__assert_fail@plt+0xa5dc>
   1b5f0:	b	1b610 <__assert_fail@plt+0xa5e8>
   1b5f4:	ldr	r0, [fp, #-16]
   1b5f8:	movw	r1, #0
   1b5fc:	cmp	r1, r0
   1b600:	bcs	1b610 <__assert_fail@plt+0xa5e8>
   1b604:	movw	r0, #0
   1b608:	str	r0, [sp, #48]	; 0x30
   1b60c:	b	1b628 <__assert_fail@plt+0xa600>
   1b610:	ldr	r0, [pc, #1940]	; 1bdac <__assert_fail@plt+0xad84>
   1b614:	ldr	r1, [fp, #-16]
   1b618:	movw	r2, #0
   1b61c:	sub	r1, r2, r1
   1b620:	udiv	r0, r0, r1
   1b624:	str	r0, [sp, #48]	; 0x30
   1b628:	ldr	r0, [sp, #48]	; 0x30
   1b62c:	ldr	r1, [fp, #-12]
   1b630:	mvn	r2, #0
   1b634:	sub	r1, r2, r1
   1b638:	cmp	r0, r1
   1b63c:	bls	1b740 <__assert_fail@plt+0xa718>
   1b640:	b	1b754 <__assert_fail@plt+0xa72c>
   1b644:	ldr	r0, [fp, #-16]
   1b648:	cmn	r0, #1
   1b64c:	bne	1b694 <__assert_fail@plt+0xa66c>
   1b650:	b	1b66c <__assert_fail@plt+0xa644>
   1b654:	ldr	r0, [fp, #-12]
   1b658:	add	r0, r0, #-2147483648	; 0x80000000
   1b65c:	movw	r1, #0
   1b660:	cmp	r1, r0
   1b664:	bcc	1b740 <__assert_fail@plt+0xa718>
   1b668:	b	1b754 <__assert_fail@plt+0xa72c>
   1b66c:	ldr	r0, [fp, #-12]
   1b670:	movw	r1, #0
   1b674:	cmp	r1, r0
   1b678:	bcs	1b754 <__assert_fail@plt+0xa72c>
   1b67c:	ldr	r0, [pc, #1832]	; 1bdac <__assert_fail@plt+0xad84>
   1b680:	ldr	r1, [fp, #-12]
   1b684:	sub	r1, r1, #1
   1b688:	cmp	r0, r1
   1b68c:	bcc	1b740 <__assert_fail@plt+0xa718>
   1b690:	b	1b754 <__assert_fail@plt+0xa72c>
   1b694:	ldr	r0, [pc, #1812]	; 1bdb0 <__assert_fail@plt+0xad88>
   1b698:	ldr	r1, [fp, #-16]
   1b69c:	udiv	r0, r0, r1
   1b6a0:	ldr	r1, [fp, #-12]
   1b6a4:	cmp	r0, r1
   1b6a8:	bcc	1b740 <__assert_fail@plt+0xa718>
   1b6ac:	b	1b754 <__assert_fail@plt+0xa72c>
   1b6b0:	ldr	r0, [fp, #-16]
   1b6b4:	cmp	r0, #0
   1b6b8:	bne	1b6c0 <__assert_fail@plt+0xa698>
   1b6bc:	b	1b754 <__assert_fail@plt+0xa72c>
   1b6c0:	ldr	r0, [fp, #-12]
   1b6c4:	cmp	r0, #0
   1b6c8:	bcs	1b728 <__assert_fail@plt+0xa700>
   1b6cc:	ldr	r0, [fp, #-12]
   1b6d0:	cmn	r0, #1
   1b6d4:	bne	1b70c <__assert_fail@plt+0xa6e4>
   1b6d8:	b	1b6f4 <__assert_fail@plt+0xa6cc>
   1b6dc:	ldr	r0, [fp, #-16]
   1b6e0:	add	r0, r0, #-2147483648	; 0x80000000
   1b6e4:	movw	r1, #0
   1b6e8:	cmp	r1, r0
   1b6ec:	bcc	1b740 <__assert_fail@plt+0xa718>
   1b6f0:	b	1b754 <__assert_fail@plt+0xa72c>
   1b6f4:	ldr	r0, [pc, #1712]	; 1bdac <__assert_fail@plt+0xad84>
   1b6f8:	ldr	r1, [fp, #-16]
   1b6fc:	sub	r1, r1, #1
   1b700:	cmp	r0, r1
   1b704:	bcc	1b740 <__assert_fail@plt+0xa718>
   1b708:	b	1b754 <__assert_fail@plt+0xa72c>
   1b70c:	ldr	r0, [pc, #1692]	; 1bdb0 <__assert_fail@plt+0xad88>
   1b710:	ldr	r1, [fp, #-12]
   1b714:	udiv	r0, r0, r1
   1b718:	ldr	r1, [fp, #-16]
   1b71c:	cmp	r0, r1
   1b720:	bcc	1b740 <__assert_fail@plt+0xa718>
   1b724:	b	1b754 <__assert_fail@plt+0xa72c>
   1b728:	ldr	r0, [pc, #1660]	; 1bdac <__assert_fail@plt+0xad84>
   1b72c:	ldr	r1, [fp, #-16]
   1b730:	udiv	r0, r0, r1
   1b734:	ldr	r1, [fp, #-12]
   1b738:	cmp	r0, r1
   1b73c:	bcs	1b754 <__assert_fail@plt+0xa72c>
   1b740:	ldr	r0, [fp, #-12]
   1b744:	ldr	r1, [fp, #-16]
   1b748:	mul	r0, r0, r1
   1b74c:	str	r0, [fp, #-20]	; 0xffffffec
   1b750:	b	1bd78 <__assert_fail@plt+0xad50>
   1b754:	ldr	r0, [fp, #-12]
   1b758:	ldr	r1, [fp, #-16]
   1b75c:	mul	r0, r0, r1
   1b760:	str	r0, [fp, #-20]	; 0xffffffec
   1b764:	b	1bd90 <__assert_fail@plt+0xad68>
   1b768:	ldr	r0, [fp, #-16]
   1b76c:	cmp	r0, #0
   1b770:	bcs	1b87c <__assert_fail@plt+0xa854>
   1b774:	ldr	r0, [fp, #-12]
   1b778:	cmp	r0, #0
   1b77c:	bcs	1b804 <__assert_fail@plt+0xa7dc>
   1b780:	b	1b7a0 <__assert_fail@plt+0xa778>
   1b784:	ldr	r0, [fp, #-12]
   1b788:	ldr	r1, [fp, #-16]
   1b78c:	mvn	r2, #0
   1b790:	udiv	r1, r2, r1
   1b794:	cmp	r0, r1
   1b798:	bcc	1b918 <__assert_fail@plt+0xa8f0>
   1b79c:	b	1b92c <__assert_fail@plt+0xa904>
   1b7a0:	b	1b7b4 <__assert_fail@plt+0xa78c>
   1b7a4:	ldr	r0, [fp, #-16]
   1b7a8:	cmp	r0, #1
   1b7ac:	bcc	1b7c4 <__assert_fail@plt+0xa79c>
   1b7b0:	b	1b7d0 <__assert_fail@plt+0xa7a8>
   1b7b4:	ldr	r0, [fp, #-16]
   1b7b8:	movw	r1, #0
   1b7bc:	cmp	r1, r0
   1b7c0:	bcs	1b7d0 <__assert_fail@plt+0xa7a8>
   1b7c4:	movw	r0, #1
   1b7c8:	str	r0, [sp, #44]	; 0x2c
   1b7cc:	b	1b7e8 <__assert_fail@plt+0xa7c0>
   1b7d0:	ldr	r0, [fp, #-16]
   1b7d4:	movw	r1, #0
   1b7d8:	sub	r0, r1, r0
   1b7dc:	mvn	r1, #0
   1b7e0:	udiv	r0, r1, r0
   1b7e4:	str	r0, [sp, #44]	; 0x2c
   1b7e8:	ldr	r0, [sp, #44]	; 0x2c
   1b7ec:	ldr	r1, [fp, #-12]
   1b7f0:	mvn	r2, #0
   1b7f4:	sub	r1, r2, r1
   1b7f8:	cmp	r0, r1
   1b7fc:	bls	1b918 <__assert_fail@plt+0xa8f0>
   1b800:	b	1b92c <__assert_fail@plt+0xa904>
   1b804:	b	1b80c <__assert_fail@plt+0xa7e4>
   1b808:	b	1b810 <__assert_fail@plt+0xa7e8>
   1b80c:	b	1b860 <__assert_fail@plt+0xa838>
   1b810:	ldr	r0, [fp, #-16]
   1b814:	cmn	r0, #1
   1b818:	bne	1b860 <__assert_fail@plt+0xa838>
   1b81c:	b	1b838 <__assert_fail@plt+0xa810>
   1b820:	ldr	r0, [fp, #-12]
   1b824:	add	r0, r0, #0
   1b828:	movw	r1, #0
   1b82c:	cmp	r1, r0
   1b830:	bcc	1b918 <__assert_fail@plt+0xa8f0>
   1b834:	b	1b92c <__assert_fail@plt+0xa904>
   1b838:	ldr	r0, [fp, #-12]
   1b83c:	movw	r1, #0
   1b840:	cmp	r1, r0
   1b844:	bcs	1b92c <__assert_fail@plt+0xa904>
   1b848:	ldr	r0, [fp, #-12]
   1b84c:	sub	r0, r0, #1
   1b850:	mvn	r1, #0
   1b854:	cmp	r1, r0
   1b858:	bcc	1b918 <__assert_fail@plt+0xa8f0>
   1b85c:	b	1b92c <__assert_fail@plt+0xa904>
   1b860:	ldr	r0, [fp, #-16]
   1b864:	movw	r1, #0
   1b868:	udiv	r0, r1, r0
   1b86c:	ldr	r1, [fp, #-12]
   1b870:	cmp	r0, r1
   1b874:	bcc	1b918 <__assert_fail@plt+0xa8f0>
   1b878:	b	1b92c <__assert_fail@plt+0xa904>
   1b87c:	ldr	r0, [fp, #-16]
   1b880:	cmp	r0, #0
   1b884:	bne	1b88c <__assert_fail@plt+0xa864>
   1b888:	b	1b92c <__assert_fail@plt+0xa904>
   1b88c:	ldr	r0, [fp, #-12]
   1b890:	cmp	r0, #0
   1b894:	bcs	1b900 <__assert_fail@plt+0xa8d8>
   1b898:	b	1b8a0 <__assert_fail@plt+0xa878>
   1b89c:	b	1b8a4 <__assert_fail@plt+0xa87c>
   1b8a0:	b	1b8e4 <__assert_fail@plt+0xa8bc>
   1b8a4:	ldr	r0, [fp, #-12]
   1b8a8:	cmn	r0, #1
   1b8ac:	bne	1b8e4 <__assert_fail@plt+0xa8bc>
   1b8b0:	b	1b8cc <__assert_fail@plt+0xa8a4>
   1b8b4:	ldr	r0, [fp, #-16]
   1b8b8:	add	r0, r0, #0
   1b8bc:	movw	r1, #0
   1b8c0:	cmp	r1, r0
   1b8c4:	bcc	1b918 <__assert_fail@plt+0xa8f0>
   1b8c8:	b	1b92c <__assert_fail@plt+0xa904>
   1b8cc:	ldr	r0, [fp, #-16]
   1b8d0:	sub	r0, r0, #1
   1b8d4:	mvn	r1, #0
   1b8d8:	cmp	r1, r0
   1b8dc:	bcc	1b918 <__assert_fail@plt+0xa8f0>
   1b8e0:	b	1b92c <__assert_fail@plt+0xa904>
   1b8e4:	ldr	r0, [fp, #-12]
   1b8e8:	movw	r1, #0
   1b8ec:	udiv	r0, r1, r0
   1b8f0:	ldr	r1, [fp, #-16]
   1b8f4:	cmp	r0, r1
   1b8f8:	bcc	1b918 <__assert_fail@plt+0xa8f0>
   1b8fc:	b	1b92c <__assert_fail@plt+0xa904>
   1b900:	ldr	r0, [fp, #-16]
   1b904:	mvn	r1, #0
   1b908:	udiv	r0, r1, r0
   1b90c:	ldr	r1, [fp, #-12]
   1b910:	cmp	r0, r1
   1b914:	bcs	1b92c <__assert_fail@plt+0xa904>
   1b918:	ldr	r0, [fp, #-12]
   1b91c:	ldr	r1, [fp, #-16]
   1b920:	mul	r0, r0, r1
   1b924:	str	r0, [fp, #-20]	; 0xffffffec
   1b928:	b	1bd78 <__assert_fail@plt+0xad50>
   1b92c:	ldr	r0, [fp, #-12]
   1b930:	ldr	r1, [fp, #-16]
   1b934:	mul	r0, r0, r1
   1b938:	str	r0, [fp, #-20]	; 0xffffffec
   1b93c:	b	1bd90 <__assert_fail@plt+0xad68>
   1b940:	b	1bb5c <__assert_fail@plt+0xab34>
   1b944:	ldr	r0, [fp, #-16]
   1b948:	cmp	r0, #0
   1b94c:	bcs	1ba8c <__assert_fail@plt+0xaa64>
   1b950:	ldr	r0, [fp, #-12]
   1b954:	cmp	r0, #0
   1b958:	bcs	1ba18 <__assert_fail@plt+0xa9f0>
   1b95c:	b	1b960 <__assert_fail@plt+0xa938>
   1b960:	ldr	r0, [fp, #-12]
   1b964:	ldr	r2, [fp, #-16]
   1b968:	mvn	r1, #0
   1b96c:	mvn	r3, #-2147483648	; 0x80000000
   1b970:	mov	ip, #0
   1b974:	str	r0, [sp, #40]	; 0x28
   1b978:	mov	r0, r1
   1b97c:	mov	r1, r3
   1b980:	mov	r3, ip
   1b984:	bl	1c084 <__assert_fail@plt+0xb05c>
   1b988:	ldr	r2, [sp, #40]	; 0x28
   1b98c:	subs	r0, r2, r0
   1b990:	rscs	r1, r1, #0
   1b994:	blt	1bb34 <__assert_fail@plt+0xab0c>
   1b998:	b	1bb48 <__assert_fail@plt+0xab20>
   1b99c:	b	1b9b0 <__assert_fail@plt+0xa988>
   1b9a0:	ldr	r0, [fp, #-16]
   1b9a4:	cmp	r0, #1
   1b9a8:	bcc	1b9c0 <__assert_fail@plt+0xa998>
   1b9ac:	b	1b9d4 <__assert_fail@plt+0xa9ac>
   1b9b0:	ldr	r0, [fp, #-16]
   1b9b4:	movw	r1, #0
   1b9b8:	cmp	r1, r0
   1b9bc:	bcs	1b9d4 <__assert_fail@plt+0xa9ac>
   1b9c0:	mov	r0, #0
   1b9c4:	mvn	r1, #0
   1b9c8:	str	r1, [sp, #36]	; 0x24
   1b9cc:	str	r0, [sp, #32]
   1b9d0:	b	1b9f8 <__assert_fail@plt+0xa9d0>
   1b9d4:	ldr	r0, [fp, #-16]
   1b9d8:	rsb	r2, r0, #0
   1b9dc:	mvn	r0, #0
   1b9e0:	mvn	r1, #-2147483648	; 0x80000000
   1b9e4:	mov	r3, #0
   1b9e8:	bl	1c084 <__assert_fail@plt+0xb05c>
   1b9ec:	str	r0, [sp, #36]	; 0x24
   1b9f0:	str	r1, [sp, #32]
   1b9f4:	b	1b9f8 <__assert_fail@plt+0xa9d0>
   1b9f8:	ldr	r0, [sp, #32]
   1b9fc:	ldr	r1, [sp, #36]	; 0x24
   1ba00:	ldr	r2, [fp, #-12]
   1ba04:	mvn	r2, r2
   1ba08:	subs	r1, r2, r1
   1ba0c:	rscs	r0, r0, #0
   1ba10:	bge	1bb34 <__assert_fail@plt+0xab0c>
   1ba14:	b	1bb48 <__assert_fail@plt+0xab20>
   1ba18:	ldr	r0, [fp, #-16]
   1ba1c:	cmn	r0, #1
   1ba20:	bne	1ba60 <__assert_fail@plt+0xaa38>
   1ba24:	b	1ba40 <__assert_fail@plt+0xaa18>
   1ba28:	ldr	r0, [fp, #-12]
   1ba2c:	rsbs	r0, r0, #0
   1ba30:	mov	r1, #0
   1ba34:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1ba38:	blt	1bb34 <__assert_fail@plt+0xab0c>
   1ba3c:	b	1bb48 <__assert_fail@plt+0xab20>
   1ba40:	ldr	r0, [fp, #-12]
   1ba44:	movw	r1, #0
   1ba48:	cmp	r1, r0
   1ba4c:	bcs	1bb48 <__assert_fail@plt+0xab20>
   1ba50:	mov	r0, #0
   1ba54:	cmp	r0, #0
   1ba58:	bne	1bb34 <__assert_fail@plt+0xab0c>
   1ba5c:	b	1bb48 <__assert_fail@plt+0xab20>
   1ba60:	ldr	r2, [fp, #-16]
   1ba64:	mov	r1, #-2147483648	; 0x80000000
   1ba68:	mov	r0, #0
   1ba6c:	str	r0, [sp, #28]
   1ba70:	ldr	r3, [sp, #28]
   1ba74:	bl	1bfb0 <__assert_fail@plt+0xaf88>
   1ba78:	ldr	r2, [fp, #-12]
   1ba7c:	subs	r0, r0, r2
   1ba80:	sbcs	r1, r1, #0
   1ba84:	blt	1bb34 <__assert_fail@plt+0xab0c>
   1ba88:	b	1bb48 <__assert_fail@plt+0xab20>
   1ba8c:	ldr	r0, [fp, #-16]
   1ba90:	cmp	r0, #0
   1ba94:	bne	1ba9c <__assert_fail@plt+0xaa74>
   1ba98:	b	1bb48 <__assert_fail@plt+0xab20>
   1ba9c:	ldr	r0, [fp, #-12]
   1baa0:	cmp	r0, #0
   1baa4:	bcs	1bb0c <__assert_fail@plt+0xaae4>
   1baa8:	ldr	r0, [fp, #-12]
   1baac:	cmn	r0, #1
   1bab0:	bne	1bae0 <__assert_fail@plt+0xaab8>
   1bab4:	b	1bad0 <__assert_fail@plt+0xaaa8>
   1bab8:	ldr	r0, [fp, #-16]
   1babc:	rsbs	r0, r0, #0
   1bac0:	mov	r1, #0
   1bac4:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1bac8:	blt	1bb34 <__assert_fail@plt+0xab0c>
   1bacc:	b	1bb48 <__assert_fail@plt+0xab20>
   1bad0:	mov	r0, #0
   1bad4:	cmp	r0, #0
   1bad8:	bne	1bb34 <__assert_fail@plt+0xab0c>
   1badc:	b	1bb48 <__assert_fail@plt+0xab20>
   1bae0:	ldr	r2, [fp, #-12]
   1bae4:	mov	r1, #-2147483648	; 0x80000000
   1bae8:	mov	r0, #0
   1baec:	str	r0, [sp, #24]
   1baf0:	ldr	r3, [sp, #24]
   1baf4:	bl	1bfb0 <__assert_fail@plt+0xaf88>
   1baf8:	ldr	r2, [fp, #-16]
   1bafc:	subs	r0, r0, r2
   1bb00:	sbcs	r1, r1, #0
   1bb04:	blt	1bb34 <__assert_fail@plt+0xab0c>
   1bb08:	b	1bb48 <__assert_fail@plt+0xab20>
   1bb0c:	ldr	r2, [fp, #-16]
   1bb10:	mvn	r0, #0
   1bb14:	mvn	r1, #-2147483648	; 0x80000000
   1bb18:	mov	r3, #0
   1bb1c:	bl	1c084 <__assert_fail@plt+0xb05c>
   1bb20:	ldr	r2, [fp, #-12]
   1bb24:	subs	r0, r0, r2
   1bb28:	sbcs	r1, r1, #0
   1bb2c:	bge	1bb48 <__assert_fail@plt+0xab20>
   1bb30:	b	1bb34 <__assert_fail@plt+0xab0c>
   1bb34:	ldr	r0, [fp, #-12]
   1bb38:	ldr	r1, [fp, #-16]
   1bb3c:	mul	r0, r0, r1
   1bb40:	str	r0, [fp, #-20]	; 0xffffffec
   1bb44:	b	1bd78 <__assert_fail@plt+0xad50>
   1bb48:	ldr	r0, [fp, #-12]
   1bb4c:	ldr	r1, [fp, #-16]
   1bb50:	mul	r0, r0, r1
   1bb54:	str	r0, [fp, #-20]	; 0xffffffec
   1bb58:	b	1bd90 <__assert_fail@plt+0xad68>
   1bb5c:	ldr	r0, [fp, #-16]
   1bb60:	cmp	r0, #0
   1bb64:	bcs	1bca0 <__assert_fail@plt+0xac78>
   1bb68:	ldr	r0, [fp, #-12]
   1bb6c:	cmp	r0, #0
   1bb70:	bcs	1bc28 <__assert_fail@plt+0xac00>
   1bb74:	b	1bba8 <__assert_fail@plt+0xab80>
   1bb78:	ldr	r0, [fp, #-12]
   1bb7c:	ldr	r2, [fp, #-16]
   1bb80:	mvn	r1, #0
   1bb84:	mov	r3, #0
   1bb88:	str	r0, [sp, #20]
   1bb8c:	mov	r0, r1
   1bb90:	bl	1c084 <__assert_fail@plt+0xb05c>
   1bb94:	ldr	r2, [sp, #20]
   1bb98:	subs	r0, r2, r0
   1bb9c:	rscs	r1, r1, #0
   1bba0:	bcc	1bd50 <__assert_fail@plt+0xad28>
   1bba4:	b	1bd64 <__assert_fail@plt+0xad3c>
   1bba8:	b	1bbbc <__assert_fail@plt+0xab94>
   1bbac:	ldr	r0, [fp, #-16]
   1bbb0:	cmp	r0, #1
   1bbb4:	bcc	1bbcc <__assert_fail@plt+0xaba4>
   1bbb8:	b	1bbe0 <__assert_fail@plt+0xabb8>
   1bbbc:	ldr	r0, [fp, #-16]
   1bbc0:	movw	r1, #0
   1bbc4:	cmp	r1, r0
   1bbc8:	bcs	1bbe0 <__assert_fail@plt+0xabb8>
   1bbcc:	mov	r0, #1
   1bbd0:	mvn	r1, #0
   1bbd4:	str	r1, [sp, #16]
   1bbd8:	str	r0, [sp, #12]
   1bbdc:	b	1bc08 <__assert_fail@plt+0xabe0>
   1bbe0:	ldr	r0, [fp, #-16]
   1bbe4:	rsb	r2, r0, #0
   1bbe8:	mvn	r0, #0
   1bbec:	mov	r3, #0
   1bbf0:	str	r0, [sp, #8]
   1bbf4:	ldr	r1, [sp, #8]
   1bbf8:	bl	1c084 <__assert_fail@plt+0xb05c>
   1bbfc:	str	r0, [sp, #16]
   1bc00:	str	r1, [sp, #12]
   1bc04:	b	1bc08 <__assert_fail@plt+0xabe0>
   1bc08:	ldr	r0, [sp, #12]
   1bc0c:	ldr	r1, [sp, #16]
   1bc10:	ldr	r2, [fp, #-12]
   1bc14:	mvn	r2, r2
   1bc18:	subs	r1, r2, r1
   1bc1c:	rscs	r0, r0, #0
   1bc20:	bcs	1bd50 <__assert_fail@plt+0xad28>
   1bc24:	b	1bd64 <__assert_fail@plt+0xad3c>
   1bc28:	b	1bc30 <__assert_fail@plt+0xac08>
   1bc2c:	b	1bc34 <__assert_fail@plt+0xac0c>
   1bc30:	b	1bc84 <__assert_fail@plt+0xac5c>
   1bc34:	ldr	r0, [fp, #-16]
   1bc38:	cmn	r0, #1
   1bc3c:	bne	1bc84 <__assert_fail@plt+0xac5c>
   1bc40:	b	1bc5c <__assert_fail@plt+0xac34>
   1bc44:	ldr	r0, [fp, #-12]
   1bc48:	add	r0, r0, #0
   1bc4c:	movw	r1, #0
   1bc50:	cmp	r1, r0
   1bc54:	bcc	1bd50 <__assert_fail@plt+0xad28>
   1bc58:	b	1bd64 <__assert_fail@plt+0xad3c>
   1bc5c:	ldr	r0, [fp, #-12]
   1bc60:	movw	r1, #0
   1bc64:	cmp	r1, r0
   1bc68:	bcs	1bd64 <__assert_fail@plt+0xad3c>
   1bc6c:	ldr	r0, [fp, #-12]
   1bc70:	sub	r0, r0, #1
   1bc74:	mvn	r1, #0
   1bc78:	cmp	r1, r0
   1bc7c:	bcc	1bd50 <__assert_fail@plt+0xad28>
   1bc80:	b	1bd64 <__assert_fail@plt+0xad3c>
   1bc84:	ldr	r0, [fp, #-16]
   1bc88:	movw	r1, #0
   1bc8c:	udiv	r0, r1, r0
   1bc90:	ldr	r1, [fp, #-12]
   1bc94:	cmp	r0, r1
   1bc98:	bcc	1bd50 <__assert_fail@plt+0xad28>
   1bc9c:	b	1bd64 <__assert_fail@plt+0xad3c>
   1bca0:	ldr	r0, [fp, #-16]
   1bca4:	cmp	r0, #0
   1bca8:	bne	1bcb0 <__assert_fail@plt+0xac88>
   1bcac:	b	1bd64 <__assert_fail@plt+0xad3c>
   1bcb0:	ldr	r0, [fp, #-12]
   1bcb4:	cmp	r0, #0
   1bcb8:	bcs	1bd24 <__assert_fail@plt+0xacfc>
   1bcbc:	b	1bcc4 <__assert_fail@plt+0xac9c>
   1bcc0:	b	1bcc8 <__assert_fail@plt+0xaca0>
   1bcc4:	b	1bd08 <__assert_fail@plt+0xace0>
   1bcc8:	ldr	r0, [fp, #-12]
   1bccc:	cmn	r0, #1
   1bcd0:	bne	1bd08 <__assert_fail@plt+0xace0>
   1bcd4:	b	1bcf0 <__assert_fail@plt+0xacc8>
   1bcd8:	ldr	r0, [fp, #-16]
   1bcdc:	add	r0, r0, #0
   1bce0:	movw	r1, #0
   1bce4:	cmp	r1, r0
   1bce8:	bcc	1bd50 <__assert_fail@plt+0xad28>
   1bcec:	b	1bd64 <__assert_fail@plt+0xad3c>
   1bcf0:	ldr	r0, [fp, #-16]
   1bcf4:	sub	r0, r0, #1
   1bcf8:	mvn	r1, #0
   1bcfc:	cmp	r1, r0
   1bd00:	bcc	1bd50 <__assert_fail@plt+0xad28>
   1bd04:	b	1bd64 <__assert_fail@plt+0xad3c>
   1bd08:	ldr	r0, [fp, #-12]
   1bd0c:	movw	r1, #0
   1bd10:	udiv	r0, r1, r0
   1bd14:	ldr	r1, [fp, #-16]
   1bd18:	cmp	r0, r1
   1bd1c:	bcc	1bd50 <__assert_fail@plt+0xad28>
   1bd20:	b	1bd64 <__assert_fail@plt+0xad3c>
   1bd24:	ldr	r2, [fp, #-16]
   1bd28:	mvn	r0, #0
   1bd2c:	mov	r3, #0
   1bd30:	str	r0, [sp, #4]
   1bd34:	ldr	r1, [sp, #4]
   1bd38:	bl	1c084 <__assert_fail@plt+0xb05c>
   1bd3c:	ldr	r2, [fp, #-12]
   1bd40:	subs	r0, r0, r2
   1bd44:	sbcs	r1, r1, #0
   1bd48:	bcs	1bd64 <__assert_fail@plt+0xad3c>
   1bd4c:	b	1bd50 <__assert_fail@plt+0xad28>
   1bd50:	ldr	r0, [fp, #-12]
   1bd54:	ldr	r1, [fp, #-16]
   1bd58:	mul	r0, r0, r1
   1bd5c:	str	r0, [fp, #-20]	; 0xffffffec
   1bd60:	b	1bd78 <__assert_fail@plt+0xad50>
   1bd64:	ldr	r0, [fp, #-12]
   1bd68:	ldr	r1, [fp, #-16]
   1bd6c:	mul	r0, r0, r1
   1bd70:	str	r0, [fp, #-20]	; 0xffffffec
   1bd74:	b	1bd90 <__assert_fail@plt+0xad68>
   1bd78:	bl	10f74 <__errno_location@plt>
   1bd7c:	movw	r1, #12
   1bd80:	str	r1, [r0]
   1bd84:	movw	r0, #0
   1bd88:	str	r0, [fp, #-4]
   1bd8c:	b	1bda0 <__assert_fail@plt+0xad78>
   1bd90:	ldr	r0, [fp, #-8]
   1bd94:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bd98:	bl	19c4c <__assert_fail@plt+0x8c24>
   1bd9c:	str	r0, [fp, #-4]
   1bda0:	ldr	r0, [fp, #-4]
   1bda4:	mov	sp, fp
   1bda8:	pop	{fp, pc}
   1bdac:	svcvc	0x00ffffff
   1bdb0:	andhi	r0, r0, r0
   1bdb4:			; <UNDEFINED> instruction: 0xffff8000
   1bdb8:	push	{r4, r5, fp, lr}
   1bdbc:	add	fp, sp, #8
   1bdc0:	sub	sp, sp, #272	; 0x110
   1bdc4:	add	r1, sp, #7
   1bdc8:	str	r0, [fp, #-16]
   1bdcc:	ldr	r0, [fp, #-16]
   1bdd0:	movw	r2, #257	; 0x101
   1bdd4:	bl	1be54 <__assert_fail@plt+0xae2c>
   1bdd8:	cmp	r0, #0
   1bddc:	beq	1bdf0 <__assert_fail@plt+0xadc8>
   1bde0:	movw	r0, #0
   1bde4:	and	r0, r0, #1
   1bde8:	strb	r0, [fp, #-9]
   1bdec:	b	1be44 <__assert_fail@plt+0xae1c>
   1bdf0:	add	r0, sp, #7
   1bdf4:	movw	r1, #52040	; 0xcb48
   1bdf8:	movt	r1, #1
   1bdfc:	bl	10df4 <strcmp@plt>
   1be00:	cmp	r0, #0
   1be04:	movw	r0, #1
   1be08:	str	r0, [sp]
   1be0c:	beq	1be30 <__assert_fail@plt+0xae08>
   1be10:	add	r0, sp, #7
   1be14:	movw	r1, #52042	; 0xcb4a
   1be18:	movt	r1, #1
   1be1c:	bl	10df4 <strcmp@plt>
   1be20:	cmp	r0, #0
   1be24:	movw	r0, #0
   1be28:	moveq	r0, #1
   1be2c:	str	r0, [sp]
   1be30:	ldr	r0, [sp]
   1be34:	mvn	r1, #0
   1be38:	eor	r0, r0, r1
   1be3c:	and	r0, r0, #1
   1be40:	strb	r0, [fp, #-9]
   1be44:	ldrb	r0, [fp, #-9]
   1be48:	and	r0, r0, #1
   1be4c:	sub	sp, fp, #8
   1be50:	pop	{r4, r5, fp, pc}
   1be54:	push	{fp, lr}
   1be58:	mov	fp, sp
   1be5c:	sub	sp, sp, #16
   1be60:	str	r0, [fp, #-4]
   1be64:	str	r1, [sp, #8]
   1be68:	str	r2, [sp, #4]
   1be6c:	ldr	r0, [fp, #-4]
   1be70:	ldr	r1, [sp, #8]
   1be74:	ldr	r2, [sp, #4]
   1be78:	bl	1be84 <__assert_fail@plt+0xae5c>
   1be7c:	mov	sp, fp
   1be80:	pop	{fp, pc}
   1be84:	push	{fp, lr}
   1be88:	mov	fp, sp
   1be8c:	sub	sp, sp, #24
   1be90:	str	r0, [fp, #-8]
   1be94:	str	r1, [sp, #12]
   1be98:	str	r2, [sp, #8]
   1be9c:	ldr	r0, [fp, #-8]
   1bea0:	bl	1bf84 <__assert_fail@plt+0xaf5c>
   1bea4:	str	r0, [sp, #4]
   1bea8:	ldr	r0, [sp, #4]
   1beac:	movw	r1, #0
   1beb0:	cmp	r0, r1
   1beb4:	bne	1bedc <__assert_fail@plt+0xaeb4>
   1beb8:	ldr	r0, [sp, #8]
   1bebc:	cmp	r0, #0
   1bec0:	bls	1bed0 <__assert_fail@plt+0xaea8>
   1bec4:	ldr	r0, [sp, #12]
   1bec8:	movw	r1, #0
   1becc:	strb	r1, [r0]
   1bed0:	movw	r0, #22
   1bed4:	str	r0, [fp, #-4]
   1bed8:	b	1bf58 <__assert_fail@plt+0xaf30>
   1bedc:	ldr	r0, [sp, #4]
   1bee0:	bl	10f50 <strlen@plt>
   1bee4:	str	r0, [sp]
   1bee8:	ldr	r0, [sp]
   1beec:	ldr	r1, [sp, #8]
   1bef0:	cmp	r0, r1
   1bef4:	bcs	1bf18 <__assert_fail@plt+0xaef0>
   1bef8:	ldr	r0, [sp, #12]
   1befc:	ldr	r1, [sp, #4]
   1bf00:	ldr	r2, [sp]
   1bf04:	add	r2, r2, #1
   1bf08:	bl	10e30 <memcpy@plt>
   1bf0c:	movw	r0, #0
   1bf10:	str	r0, [fp, #-4]
   1bf14:	b	1bf58 <__assert_fail@plt+0xaf30>
   1bf18:	ldr	r0, [sp, #8]
   1bf1c:	cmp	r0, #0
   1bf20:	bls	1bf50 <__assert_fail@plt+0xaf28>
   1bf24:	ldr	r0, [sp, #12]
   1bf28:	ldr	r1, [sp, #4]
   1bf2c:	ldr	r2, [sp, #8]
   1bf30:	sub	r2, r2, #1
   1bf34:	bl	10e30 <memcpy@plt>
   1bf38:	ldr	r0, [sp, #12]
   1bf3c:	ldr	r1, [sp, #8]
   1bf40:	sub	r1, r1, #1
   1bf44:	add	r0, r0, r1
   1bf48:	movw	r1, #0
   1bf4c:	strb	r1, [r0]
   1bf50:	movw	r0, #34	; 0x22
   1bf54:	str	r0, [fp, #-4]
   1bf58:	ldr	r0, [fp, #-4]
   1bf5c:	mov	sp, fp
   1bf60:	pop	{fp, pc}
   1bf64:	push	{fp, lr}
   1bf68:	mov	fp, sp
   1bf6c:	sub	sp, sp, #8
   1bf70:	str	r0, [sp, #4]
   1bf74:	ldr	r0, [sp, #4]
   1bf78:	bl	1bf84 <__assert_fail@plt+0xaf5c>
   1bf7c:	mov	sp, fp
   1bf80:	pop	{fp, pc}
   1bf84:	push	{fp, lr}
   1bf88:	mov	fp, sp
   1bf8c:	sub	sp, sp, #8
   1bf90:	str	r0, [sp, #4]
   1bf94:	ldr	r0, [sp, #4]
   1bf98:	movw	r1, #0
   1bf9c:	bl	10fc8 <setlocale@plt>
   1bfa0:	str	r0, [sp]
   1bfa4:	ldr	r0, [sp]
   1bfa8:	mov	sp, fp
   1bfac:	pop	{fp, pc}
   1bfb0:	cmp	r3, #0
   1bfb4:	cmpeq	r2, #0
   1bfb8:	bne	1bfdc <__assert_fail@plt+0xafb4>
   1bfbc:	cmp	r1, #0
   1bfc0:	movlt	r1, #-2147483648	; 0x80000000
   1bfc4:	movlt	r0, #0
   1bfc8:	blt	1bfd8 <__assert_fail@plt+0xafb0>
   1bfcc:	cmpeq	r0, #0
   1bfd0:	mvnne	r1, #-2147483648	; 0x80000000
   1bfd4:	mvnne	r0, #0
   1bfd8:	b	1c0c0 <__assert_fail@plt+0xb098>
   1bfdc:	sub	sp, sp, #8
   1bfe0:	push	{sp, lr}
   1bfe4:	cmp	r1, #0
   1bfe8:	blt	1c008 <__assert_fail@plt+0xafe0>
   1bfec:	cmp	r3, #0
   1bff0:	blt	1c03c <__assert_fail@plt+0xb014>
   1bff4:	bl	1c0d0 <__assert_fail@plt+0xb0a8>
   1bff8:	ldr	lr, [sp, #4]
   1bffc:	add	sp, sp, #8
   1c000:	pop	{r2, r3}
   1c004:	bx	lr
   1c008:	rsbs	r0, r0, #0
   1c00c:	sbc	r1, r1, r1, lsl #1
   1c010:	cmp	r3, #0
   1c014:	blt	1c060 <__assert_fail@plt+0xb038>
   1c018:	bl	1c0d0 <__assert_fail@plt+0xb0a8>
   1c01c:	ldr	lr, [sp, #4]
   1c020:	add	sp, sp, #8
   1c024:	pop	{r2, r3}
   1c028:	rsbs	r0, r0, #0
   1c02c:	sbc	r1, r1, r1, lsl #1
   1c030:	rsbs	r2, r2, #0
   1c034:	sbc	r3, r3, r3, lsl #1
   1c038:	bx	lr
   1c03c:	rsbs	r2, r2, #0
   1c040:	sbc	r3, r3, r3, lsl #1
   1c044:	bl	1c0d0 <__assert_fail@plt+0xb0a8>
   1c048:	ldr	lr, [sp, #4]
   1c04c:	add	sp, sp, #8
   1c050:	pop	{r2, r3}
   1c054:	rsbs	r0, r0, #0
   1c058:	sbc	r1, r1, r1, lsl #1
   1c05c:	bx	lr
   1c060:	rsbs	r2, r2, #0
   1c064:	sbc	r3, r3, r3, lsl #1
   1c068:	bl	1c0d0 <__assert_fail@plt+0xb0a8>
   1c06c:	ldr	lr, [sp, #4]
   1c070:	add	sp, sp, #8
   1c074:	pop	{r2, r3}
   1c078:	rsbs	r2, r2, #0
   1c07c:	sbc	r3, r3, r3, lsl #1
   1c080:	bx	lr
   1c084:	cmp	r3, #0
   1c088:	cmpeq	r2, #0
   1c08c:	bne	1c0a4 <__assert_fail@plt+0xb07c>
   1c090:	cmp	r1, #0
   1c094:	cmpeq	r0, #0
   1c098:	mvnne	r1, #0
   1c09c:	mvnne	r0, #0
   1c0a0:	b	1c0c0 <__assert_fail@plt+0xb098>
   1c0a4:	sub	sp, sp, #8
   1c0a8:	push	{sp, lr}
   1c0ac:	bl	1c0d0 <__assert_fail@plt+0xb0a8>
   1c0b0:	ldr	lr, [sp, #4]
   1c0b4:	add	sp, sp, #8
   1c0b8:	pop	{r2, r3}
   1c0bc:	bx	lr
   1c0c0:	push	{r1, lr}
   1c0c4:	mov	r0, #8
   1c0c8:	bl	10de8 <raise@plt>
   1c0cc:	pop	{r1, pc}
   1c0d0:	cmp	r1, r3
   1c0d4:	cmpeq	r0, r2
   1c0d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c0dc:	mov	r4, r0
   1c0e0:	movcc	r0, #0
   1c0e4:	mov	r5, r1
   1c0e8:	ldr	lr, [sp, #36]	; 0x24
   1c0ec:	movcc	r1, r0
   1c0f0:	bcc	1c1ec <__assert_fail@plt+0xb1c4>
   1c0f4:	cmp	r3, #0
   1c0f8:	clzeq	ip, r2
   1c0fc:	clzne	ip, r3
   1c100:	addeq	ip, ip, #32
   1c104:	cmp	r5, #0
   1c108:	clzeq	r1, r4
   1c10c:	addeq	r1, r1, #32
   1c110:	clzne	r1, r5
   1c114:	sub	ip, ip, r1
   1c118:	sub	sl, ip, #32
   1c11c:	lsl	r9, r3, ip
   1c120:	rsb	fp, ip, #32
   1c124:	orr	r9, r9, r2, lsl sl
   1c128:	orr	r9, r9, r2, lsr fp
   1c12c:	lsl	r8, r2, ip
   1c130:	cmp	r5, r9
   1c134:	cmpeq	r4, r8
   1c138:	movcc	r0, #0
   1c13c:	movcc	r1, r0
   1c140:	bcc	1c15c <__assert_fail@plt+0xb134>
   1c144:	mov	r0, #1
   1c148:	subs	r4, r4, r8
   1c14c:	lsl	r1, r0, sl
   1c150:	orr	r1, r1, r0, lsr fp
   1c154:	lsl	r0, r0, ip
   1c158:	sbc	r5, r5, r9
   1c15c:	cmp	ip, #0
   1c160:	beq	1c1ec <__assert_fail@plt+0xb1c4>
   1c164:	lsr	r6, r8, #1
   1c168:	orr	r6, r6, r9, lsl #31
   1c16c:	lsr	r7, r9, #1
   1c170:	mov	r2, ip
   1c174:	b	1c198 <__assert_fail@plt+0xb170>
   1c178:	subs	r3, r4, r6
   1c17c:	sbc	r8, r5, r7
   1c180:	adds	r3, r3, r3
   1c184:	adc	r8, r8, r8
   1c188:	adds	r4, r3, #1
   1c18c:	adc	r5, r8, #0
   1c190:	subs	r2, r2, #1
   1c194:	beq	1c1b4 <__assert_fail@plt+0xb18c>
   1c198:	cmp	r5, r7
   1c19c:	cmpeq	r4, r6
   1c1a0:	bcs	1c178 <__assert_fail@plt+0xb150>
   1c1a4:	adds	r4, r4, r4
   1c1a8:	adc	r5, r5, r5
   1c1ac:	subs	r2, r2, #1
   1c1b0:	bne	1c198 <__assert_fail@plt+0xb170>
   1c1b4:	lsr	r3, r4, ip
   1c1b8:	orr	r3, r3, r5, lsl fp
   1c1bc:	lsr	r2, r5, ip
   1c1c0:	orr	r3, r3, r5, lsr sl
   1c1c4:	adds	r0, r0, r4
   1c1c8:	mov	r4, r3
   1c1cc:	lsl	r3, r2, ip
   1c1d0:	orr	r3, r3, r4, lsl sl
   1c1d4:	lsl	ip, r4, ip
   1c1d8:	orr	r3, r3, r4, lsr fp
   1c1dc:	adc	r1, r1, r5
   1c1e0:	subs	r0, r0, ip
   1c1e4:	mov	r5, r2
   1c1e8:	sbc	r1, r1, r3
   1c1ec:	cmp	lr, #0
   1c1f0:	strdne	r4, [lr]
   1c1f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c1f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c1fc:	mov	r7, r0
   1c200:	ldr	r6, [pc, #72]	; 1c250 <__assert_fail@plt+0xb228>
   1c204:	ldr	r5, [pc, #72]	; 1c254 <__assert_fail@plt+0xb22c>
   1c208:	add	r6, pc, r6
   1c20c:	add	r5, pc, r5
   1c210:	sub	r6, r6, r5
   1c214:	mov	r8, r1
   1c218:	mov	r9, r2
   1c21c:	bl	10db0 <calloc@plt-0x20>
   1c220:	asrs	r6, r6, #2
   1c224:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c228:	mov	r4, #0
   1c22c:	add	r4, r4, #1
   1c230:	ldr	r3, [r5], #4
   1c234:	mov	r2, r9
   1c238:	mov	r1, r8
   1c23c:	mov	r0, r7
   1c240:	blx	r3
   1c244:	cmp	r6, r4
   1c248:	bne	1c22c <__assert_fail@plt+0xb204>
   1c24c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c250:	strdeq	r0, [r1], -ip
   1c254:	strdeq	r0, [r1], -r4
   1c258:	bx	lr
   1c25c:	ldr	r3, [pc, #12]	; 1c270 <__assert_fail@plt+0xb248>
   1c260:	mov	r1, #0
   1c264:	add	r3, pc, r3
   1c268:	ldr	r2, [r3]
   1c26c:	b	10f80 <__cxa_atexit@plt>
   1c270:	andeq	r0, r1, r4, ror lr

Disassembly of section .fini:

0001c274 <.fini>:
   1c274:	push	{r3, lr}
   1c278:	pop	{r3, pc}
