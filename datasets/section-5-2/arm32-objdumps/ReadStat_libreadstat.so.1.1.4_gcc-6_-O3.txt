
../repos/ReadStat/.libs/libreadstat.so.1.1.4:     file format elf32-littlearm


Disassembly of section .init:

00003d2c <_init>:
    3d2c:	push	{r3, lr}
    3d30:	bl	6078 <call_weak_fn>
    3d34:	pop	{r3, pc}

Disassembly of section .plt:

00003d38 <.plt>:
    3d38:	push	{lr}		; (str lr, [sp, #-4]!)
    3d3c:	ldr	lr, [pc, #4]	; 3d48 <.plt+0x10>
    3d40:	add	lr, pc, lr
    3d44:	ldr	pc, [lr, #8]!
    3d48:	.word	0x000412b8

00003d4c <sas_validate_name@plt>:
    3d4c:	add	ip, pc, #0, 12
    3d50:	add	ip, ip, #266240	; 0x41000
    3d54:	ldr	pc, [ip, #696]!	; 0x2b8

00003d58 <calloc@plt>:
    3d58:	add	ip, pc, #0, 12
    3d5c:	add	ip, ip, #266240	; 0x41000
    3d60:	ldr	pc, [ip, #688]!	; 0x2b0

00003d64 <readstat_set_seek_handler@plt>:
    3d64:	add	ip, pc, #0, 12
    3d68:	add	ip, ip, #266240	; 0x41000
    3d6c:	ldr	pc, [ip, #680]!	; 0x2a8

00003d70 <readstat_set_open_handler@plt>:
    3d70:	add	ip, pc, #0, 12
    3d74:	add	ip, ip, #266240	; 0x41000
    3d78:	ldr	pc, [ip, #672]!	; 0x2a0

00003d7c <byteswap8@plt>:
    3d7c:	add	ip, pc, #0, 12
    3d80:	add	ip, ip, #266240	; 0x41000
    3d84:	ldr	pc, [ip, #664]!	; 0x298

00003d88 <raise@plt>:
    3d88:	add	ip, pc, #0, 12
    3d8c:	add	ip, ip, #266240	; 0x41000
    3d90:	ldr	pc, [ip, #656]!	; 0x290

00003d94 <byteswap4@plt>:
    3d94:	add	ip, pc, #0, 12
    3d98:	add	ip, ip, #266240	; 0x41000
    3d9c:	ldr	pc, [ip, #648]!	; 0x288

00003da0 <readstat_validate_metadata@plt>:
    3da0:	add	ip, pc, #0, 12
    3da4:	add	ip, ip, #266240	; 0x41000
    3da8:	ldr	pc, [ip, #640]!	; 0x280

00003dac <readstat_sort_label_set@plt>:
    3dac:	add	ip, pc, #0, 12
    3db0:	add	ip, ip, #266240	; 0x41000
    3db4:	ldr	pc, [ip, #632]!	; 0x278

00003db8 <por_ctx_free@plt>:
    3db8:	add	ip, pc, #0, 12
    3dbc:	add	ip, ip, #266240	; 0x41000
    3dc0:	ldr	pc, [ip, #624]!	; 0x270

00003dc4 <memreverse@plt>:
    3dc4:	add	ip, pc, #0, 12
    3dc8:	add	ip, ip, #266240	; 0x41000
    3dcc:	ldr	pc, [ip, #616]!	; 0x268

00003dd0 <iconv_close@plt>:
    3dd0:	add	ip, pc, #0, 12
    3dd4:	add	ip, ip, #266240	; 0x41000
    3dd8:	ldr	pc, [ip, #608]!	; 0x260

00003ddc <readstat_write_spaces@plt>:
    3ddc:	add	ip, pc, #0, 12
    3de0:	add	ip, ip, #266240	; 0x41000
    3de4:	ldr	pc, [ip, #600]!	; 0x258

00003de8 <iconv@plt>:
    3de8:	add	ip, pc, #0, 12
    3dec:	add	ip, ip, #266240	; 0x41000
    3df0:	ldr	pc, [ip, #592]!	; 0x250

00003df4 <sav_parse_timestamp@plt>:
    3df4:	add	ip, pc, #0, 12
    3df8:	add	ip, ip, #266240	; 0x41000
    3dfc:	ldr	pc, [ip, #584]!	; 0x248

00003e00 <strcmp@plt>:
    3e00:	add	ip, pc, #0, 12
    3e04:	add	ip, ip, #266240	; 0x41000
    3e08:	ldr	pc, [ip, #576]!	; 0x240

00003e0c <__cxa_finalize@plt>:
    3e0c:	add	ip, pc, #0, 12
    3e10:	add	ip, ip, #266240	; 0x41000
    3e14:	ldr	pc, [ip, #568]!	; 0x238

00003e18 <ck_hash_table_wipe@plt>:
    3e18:	add	ip, pc, #0, 12
    3e1c:	add	ip, ip, #266240	; 0x41000
    3e20:	ldr	pc, [ip, #560]!	; 0x230

00003e24 <readstat_type_class@plt>:
    3e24:	add	ip, pc, #0, 12
    3e28:	add	ip, ip, #266240	; 0x41000
    3e2c:	ldr	pc, [ip, #552]!	; 0x228

00003e30 <strtol@plt>:
    3e30:	add	ip, pc, #0, 12
    3e34:	add	ip, ip, #266240	; 0x41000
    3e38:	ldr	pc, [ip, #544]!	; 0x220

00003e3c <read@plt>:
    3e3c:	add	ip, pc, #0, 12
    3e40:	add	ip, ip, #266240	; 0x41000
    3e44:	ldr	pc, [ip, #536]!	; 0x218

00003e48 <readstat_error_message@plt>:
    3e48:	add	ip, pc, #0, 12
    3e4c:	add	ip, ip, #266240	; 0x41000
    3e50:	ldr	pc, [ip, #528]!	; 0x210

00003e54 <mktime@plt>:
    3e54:	add	ip, pc, #0, 12
    3e58:	add	ip, ip, #266240	; 0x41000
    3e5c:	ldr	pc, [ip, #520]!	; 0x208

00003e60 <spss_alignment_from_readstat_alignment@plt>:
    3e60:	add	ip, pc, #0, 12
    3e64:	add	ip, ip, #266240	; 0x41000
    3e68:	ldr	pc, [ip, #512]!	; 0x200

00003e6c <readstat_copy@plt>:
    3e6c:	add	ip, pc, #0, 12
    3e70:	add	ip, ip, #266240	; 0x41000
    3e74:	ldr	pc, [ip, #504]!	; 0x1f8

00003e78 <dta_ctx_free@plt>:
    3e78:	add	ip, pc, #0, 12
    3e7c:	add	ip, ip, #266240	; 0x41000
    3e80:	ldr	pc, [ip, #496]!	; 0x1f0

00003e84 <deflateBound@plt>:
    3e84:	add	ip, pc, #0, 12
    3e88:	add	ip, ip, #266240	; 0x41000
    3e8c:	ldr	pc, [ip, #488]!	; 0x1e8

00003e90 <readstat_set_update_handler@plt>:
    3e90:	add	ip, pc, #0, 12
    3e94:	add	ip, ip, #266240	; 0x41000
    3e98:	ldr	pc, [ip, #480]!	; 0x1e0

00003e9c <memmove@plt>:
    3e9c:	add	ip, pc, #0, 12
    3ea0:	add	ip, ip, #266240	; 0x41000
    3ea4:	ldr	pc, [ip, #472]!	; 0x1d8

00003ea8 <byteswap2@plt>:
    3ea8:	add	ip, pc, #0, 12
    3eac:	add	ip, ip, #266240	; 0x41000
    3eb0:	ldr	pc, [ip, #464]!	; 0x1d0

00003eb4 <machine_is_little_endian@plt>:
    3eb4:	add	ip, pc, #0, 12
    3eb8:	add	ip, ip, #266240	; 0x41000
    3ebc:	ldr	pc, [ip, #456]!	; 0x1c8

00003ec0 <free@plt>:
    3ec0:	add	ip, pc, #0, 12
    3ec4:	add	ip, ip, #266240	; 0x41000
    3ec8:	ldr	pc, [ip, #448]!	; 0x1c0

00003ecc <readstat_value_is_system_missing@plt>:
    3ecc:	add	ip, pc, #0, 12
    3ed0:	add	ip, ip, #266240	; 0x41000
    3ed4:	ldr	pc, [ip, #440]!	; 0x1b8

00003ed8 <sav_parse_time@plt>:
    3ed8:	add	ip, pc, #0, 12
    3edc:	add	ip, ip, #266240	; 0x41000
    3ee0:	ldr	pc, [ip, #432]!	; 0x1b0

00003ee4 <readstat_variable_get_format@plt>:
    3ee4:	add	ip, pc, #0, 12
    3ee8:	add	ip, ip, #266240	; 0x41000
    3eec:	ldr	pc, [ip, #424]!	; 0x1a8

00003ef0 <readstat_value_is_defined_missing@plt>:
    3ef0:	add	ip, pc, #0, 12
    3ef4:	add	ip, ip, #266240	; 0x41000
    3ef8:	ldr	pc, [ip, #416]!	; 0x1a0

00003efc <ones_to_twos_complement4@plt>:
    3efc:	add	ip, pc, #0, 12
    3f00:	add	ip, ip, #266240	; 0x41000
    3f04:	ldr	pc, [ip, #408]!	; 0x198

00003f08 <ones_to_twos_complement2@plt>:
    3f08:	add	ip, pc, #0, 12
    3f0c:	add	ip, ip, #266240	; 0x41000
    3f10:	ldr	pc, [ip, #400]!	; 0x190

00003f14 <sav_ctx_free@plt>:
    3f14:	add	ip, pc, #0, 12
    3f18:	add	ip, ip, #266240	; 0x41000
    3f1c:	ldr	pc, [ip, #392]!	; 0x188

00003f20 <memcpy@plt>:
    3f20:	add	ip, pc, #0, 12
    3f24:	add	ip, ip, #266240	; 0x41000
    3f28:	ldr	pc, [ip, #384]!	; 0x180

00003f2c <spss_parse_format@plt>:
    3f2c:	add	ip, pc, #0, 12
    3f30:	add	ip, ip, #266240	; 0x41000
    3f34:	ldr	pc, [ip, #376]!	; 0x178

00003f38 <submit_columns@plt>:
    3f38:	add	ip, pc, #0, 12
    3f3c:	add	ip, ip, #266240	; 0x41000
    3f40:	ldr	pc, [ip, #368]!	; 0x170

00003f44 <readstat_variable_get_missing_range_lo@plt>:
    3f44:	add	ip, pc, #0, 12
    3f48:	add	ip, ip, #266240	; 0x41000
    3f4c:	ldr	pc, [ip, #360]!	; 0x168

00003f50 <readstat_insert_string_ref@plt>:
    3f50:	add	ip, pc, #0, 12
    3f54:	add	ip, ip, #266240	; 0x41000
    3f58:	ldr	pc, [ip, #352]!	; 0x160

00003f5c <time@plt>:
    3f5c:	add	ip, pc, #0, 12
    3f60:	add	ip, ip, #266240	; 0x41000
    3f64:	ldr	pc, [ip, #344]!	; 0x158

00003f68 <readstat_begin_writing_file@plt>:
    3f68:	add	ip, pc, #0, 12
    3f6c:	add	ip, ip, #266240	; 0x41000
    3f70:	ldr	pc, [ip, #336]!	; 0x150

00003f74 <lseek@plt>:
    3f74:	add	ip, pc, #0, 12
    3f78:	add	ip, ip, #266240	; 0x41000
    3f7c:	ldr	pc, [ip, #328]!	; 0x148

00003f80 <unistd_io_init@plt>:
    3f80:	add	ip, pc, #0, 12
    3f84:	add	ip, ip, #266240	; 0x41000
    3f88:	ldr	pc, [ip, #320]!	; 0x140

00003f8c <pow@plt>:
    3f8c:	add	ip, pc, #0, 12
    3f90:	add	ip, ip, #266240	; 0x41000
    3f94:	ldr	pc, [ip, #312]!	; 0x138

00003f98 <uncompress@plt>:
    3f98:	add	ip, pc, #0, 12
    3f9c:	add	ip, ip, #266240	; 0x41000
    3fa0:	ldr	pc, [ip, #304]!	; 0x130

00003fa4 <memcmp@plt>:
    3fa4:	add	ip, pc, #0, 12
    3fa8:	add	ip, ip, #266240	; 0x41000
    3fac:	ldr	pc, [ip, #296]!	; 0x128

00003fb0 <readstat_string_value@plt>:
    3fb0:	add	ip, pc, #0, 12
    3fb4:	add	ip, ip, #266240	; 0x41000
    3fb8:	ldr	pc, [ip, #288]!	; 0x120

00003fbc <readstat_schema_free@plt>:
    3fbc:	add	ip, pc, #0, 12
    3fc0:	add	ip, ip, #266240	; 0x41000
    3fc4:	ldr	pc, [ip, #280]!	; 0x118

00003fc8 <readstat_calloc@plt>:
    3fc8:	add	ip, pc, #0, 12
    3fcc:	add	ip, ip, #266240	; 0x41000
    3fd0:	ldr	pc, [ip, #272]!	; 0x110

00003fd4 <ck_str_hash_lookup@plt>:
    3fd4:	add	ip, pc, #0, 12
    3fd8:	add	ip, ip, #266240	; 0x41000
    3fdc:	ldr	pc, [ip, #264]!	; 0x108

00003fe0 <sav_compressed_row_bound@plt>:
    3fe0:	add	ip, pc, #0, 12
    3fe4:	add	ip, ip, #266240	; 0x41000
    3fe8:	ldr	pc, [ip, #256]!	; 0x100

00003fec <ck_hash_table_grow@plt>:
    3fec:	add	ip, pc, #0, 12
    3ff0:	add	ip, ip, #266240	; 0x41000
    3ff4:	ldr	pc, [ip, #248]!	; 0xf8

00003ff8 <realloc@plt>:
    3ff8:	add	ip, pc, #0, 12
    3ffc:	add	ip, ip, #266240	; 0x41000
    4000:	ldr	pc, [ip, #240]!	; 0xf0

00004004 <cnxptiee@plt>:
    4004:	add	ip, pc, #0, 12
    4008:	add	ip, ip, #266240	; 0x41000
    400c:	ldr	pc, [ip, #232]!	; 0xe8

00004010 <read_version_and_timestamp@plt>:
    4010:	add	ip, pc, #0, 12
    4014:	add	ip, ip, #266240	; 0x41000
    4018:	ldr	pc, [ip, #224]!	; 0xe0

0000401c <readstat_write_zeros@plt>:
    401c:	add	ip, pc, #0, 12
    4020:	add	ip, ip, #266240	; 0x41000
    4024:	ldr	pc, [ip, #216]!	; 0xd8

00004028 <strcasecmp@plt>:
    4028:	add	ip, pc, #0, 12
    402c:	add	ip, ip, #266240	; 0x41000
    4030:	ldr	pc, [ip, #208]!	; 0xd0

00004034 <readstat_copy_quoted@plt>:
    4034:	add	ip, pc, #0, 12
    4038:	add	ip, ip, #266240	; 0x41000
    403c:	ldr	pc, [ip, #200]!	; 0xc8

00004040 <deflate@plt>:
    4040:	add	ip, pc, #0, 12
    4044:	add	ip, ip, #266240	; 0x41000
    4048:	ldr	pc, [ip, #192]!	; 0xc0

0000404c <submit_value_label@plt>:
    404c:	add	ip, pc, #0, 12
    4050:	add	ip, ip, #266240	; 0x41000
    4054:	ldr	pc, [ip, #184]!	; 0xb8

00004058 <sav_ctx_init@plt>:
    4058:	add	ip, pc, #0, 12
    405c:	add	ip, ip, #266240	; 0x41000
    4060:	ldr	pc, [ip, #176]!	; 0xb0

00004064 <ck_str_n_hash_lookup@plt>:
    4064:	add	ip, pc, #0, 12
    4068:	add	ip, ip, #266240	; 0x41000
    406c:	ldr	pc, [ip, #168]!	; 0xa8

00004070 <spss_measure_from_readstat_measure@plt>:
    4070:	add	ip, pc, #0, 12
    4074:	add	ip, ip, #266240	; 0x41000
    4078:	ldr	pc, [ip, #160]!	; 0xa0

0000407c <sas_rle_decompress@plt>:
    407c:	add	ip, pc, #0, 12
    4080:	add	ip, ip, #266240	; 0x41000
    4084:	ldr	pc, [ip, #152]!	; 0x98

00004088 <sav_parse_date@plt>:
    4088:	add	ip, pc, #0, 12
    408c:	add	ip, ip, #266240	; 0x41000
    4090:	ldr	pc, [ip, #144]!	; 0x90

00004094 <xport_namestr_bswap@plt>:
    4094:	add	ip, pc, #0, 12
    4098:	add	ip, ip, #266240	; 0x41000
    409c:	ldr	pc, [ip, #136]!	; 0x88

000040a0 <zsav_current_block@plt>:
    40a0:	add	ip, pc, #0, 12
    40a4:	add	ip, ip, #266240	; 0x41000
    40a8:	ldr	pc, [ip, #128]!	; 0x80

000040ac <zsav_ctx_init@plt>:
    40ac:	add	ip, pc, #0, 12
    40b0:	add	ip, ip, #266240	; 0x41000
    40b4:	ldr	pc, [ip, #120]!	; 0x78

000040b8 <sas_write_header@plt>:
    40b8:	add	ip, pc, #0, 12
    40bc:	add	ip, ip, #266240	; 0x41000
    40c0:	ldr	pc, [ip, #112]!	; 0x70

000040c4 <strtof@plt>:
    40c4:	add	ip, pc, #0, 12
    40c8:	add	ip, ip, #266240	; 0x41000
    40cc:	ldr	pc, [ip, #104]!	; 0x68

000040d0 <readstat_schema_find_or_create_entry@plt>:
    40d0:	add	ip, pc, #0, 12
    40d4:	add	ip, ip, #266240	; 0x41000
    40d8:	ldr	pc, [ip, #96]!	; 0x60

000040dc <readstat_value_type_class@plt>:
    40dc:	add	ip, pc, #0, 12
    40e0:	add	ip, ip, #266240	; 0x41000
    40e4:	ldr	pc, [ip, #88]!	; 0x58

000040e8 <readstat_set_io_ctx@plt>:
    40e8:	add	ip, pc, #0, 12
    40ec:	add	ip, ip, #266240	; 0x41000
    40f0:	ldr	pc, [ip, #80]!	; 0x50

000040f4 <spss_format_for_variable@plt>:
    40f4:	add	ip, pc, #0, 12
    40f8:	add	ip, ip, #266240	; 0x41000
    40fc:	ldr	pc, [ip, #72]!	; 0x48

00004100 <readstat_parser_free@plt>:
    4100:	add	ip, pc, #0, 12
    4104:	add	ip, ip, #266240	; 0x41000
    4108:	ldr	pc, [ip, #64]!	; 0x40

0000410c <malloc@plt>:
    410c:	add	ip, pc, #0, 12
    4110:	add	ip, ip, #266240	; 0x41000
    4114:	ldr	pc, [ip, #56]!	; 0x38

00004118 <zsav_add_block@plt>:
    4118:	add	ip, pc, #0, 12
    411c:	add	ip, ip, #266240	; 0x41000
    4120:	ldr	pc, [ip, #48]!	; 0x30

00004124 <deflateInit_@plt>:
    4124:	add	ip, pc, #0, 12
    4128:	add	ip, ip, #266240	; 0x41000
    412c:	ldr	pc, [ip, #40]!	; 0x28

00004130 <iconv_open@plt>:
    4130:	add	ip, pc, #0, 12
    4134:	add	ip, ip, #266240	; 0x41000
    4138:	ldr	pc, [ip, #32]!

0000413c <strerror@plt>:
    413c:	add	ip, pc, #0, 12
    4140:	add	ip, ip, #266240	; 0x41000
    4144:	ldr	pc, [ip, #24]!

00004148 <sas_validate_tag@plt>:
    4148:	add	ip, pc, #0, 12
    414c:	add	ip, ip, #266240	; 0x41000
    4150:	ldr	pc, [ip, #16]!

00004154 <readstat_write_string@plt>:
    4154:	add	ip, pc, #0, 12
    4158:	add	ip, ip, #266240	; 0x41000
    415c:	ldr	pc, [ip, #8]!

00004160 <localtime@plt>:
    4160:	add	ip, pc, #0, 12
    4164:	add	ip, ip, #266240	; 0x41000
    4168:	ldr	pc, [ip, #0]!

0000416c <__ctype_tolower_loc@plt>:
    416c:	add	ip, pc, #0, 12
    4170:	add	ip, ip, #64, 20	; 0x40000
    4174:	ldr	pc, [ip, #4088]!	; 0xff8

00004178 <modf@plt>:
    4178:	add	ip, pc, #0, 12
    417c:	add	ip, ip, #64, 20	; 0x40000
    4180:	ldr	pc, [ip, #4080]!	; 0xff0

00004184 <__ctype_toupper_loc@plt>:
    4184:	add	ip, pc, #0, 12
    4188:	add	ip, ip, #64, 20	; 0x40000
    418c:	ldr	pc, [ip, #4072]!	; 0xfe8

00004190 <ck_hash_table_init@plt>:
    4190:	add	ip, pc, #0, 12
    4194:	add	ip, ip, #64, 20	; 0x40000
    4198:	ldr	pc, [ip, #4064]!	; 0xfe0

0000419c <__gmon_start__@plt>:
    419c:	add	ip, pc, #0, 12
    41a0:	add	ip, ip, #64, 20	; 0x40000
    41a4:	ldr	pc, [ip, #4056]!	; 0xfd8

000041a8 <open@plt>:
    41a8:	add	ip, pc, #0, 12
    41ac:	add	ip, ip, #64, 20	; 0x40000
    41b0:	ldr	pc, [ip, #4048]!	; 0xfd0

000041b4 <readstat_double_value@plt>:
    41b4:	add	ip, pc, #0, 12
    41b8:	add	ip, ip, #64, 20	; 0x40000
    41bc:	ldr	pc, [ip, #4040]!	; 0xfc8

000041c0 <get_native@plt>:
    41c0:	add	ip, pc, #0, 12
    41c4:	add	ip, ip, #64, 20	; 0x40000
    41c8:	ldr	pc, [ip, #4032]!	; 0xfc0

000041cc <dta_ctx_init@plt>:
    41cc:	add	ip, pc, #0, 12
    41d0:	add	ip, ip, #64, 20	; 0x40000
    41d4:	ldr	pc, [ip, #4024]!	; 0xfb8

000041d8 <readstat_variable_get_type@plt>:
    41d8:	add	ip, pc, #0, 12
    41dc:	add	ip, ip, #64, 20	; 0x40000
    41e0:	ldr	pc, [ip, #4016]!	; 0xfb0

000041e4 <dta_type_info@plt>:
    41e4:	add	ip, pc, #0, 12
    41e8:	add	ip, ip, #64, 20	; 0x40000
    41ec:	ldr	pc, [ip, #4008]!	; 0xfa8

000041f0 <sav_parse_long_variable_names_record@plt>:
    41f0:	add	ip, pc, #0, 12
    41f4:	add	ip, ip, #64, 20	; 0x40000
    41f8:	ldr	pc, [ip, #4000]!	; 0xfa0

000041fc <strlen@plt>:
    41fc:	add	ip, pc, #0, 12
    4200:	add	ip, ip, #64, 20	; 0x40000
    4204:	ldr	pc, [ip, #3992]!	; 0xf98

00004208 <spss_varinfo_compare@plt>:
    4208:	add	ip, pc, #0, 12
    420c:	add	ip, ip, #64, 20	; 0x40000
    4210:	ldr	pc, [ip, #3984]!	; 0xf90

00004214 <sav_decompress_row@plt>:
    4214:	add	ip, pc, #0, 12
    4218:	add	ip, ip, #64, 20	; 0x40000
    421c:	ldr	pc, [ip, #3976]!	; 0xf88

00004220 <readstat_variable_get_display_width@plt>:
    4220:	add	ip, pc, #0, 12
    4224:	add	ip, ip, #64, 20	; 0x40000
    4228:	ldr	pc, [ip, #3968]!	; 0xf80

0000422c <readstat_malloc@plt>:
    422c:	add	ip, pc, #0, 12
    4230:	add	ip, ip, #64, 20	; 0x40000
    4234:	ldr	pc, [ip, #3960]!	; 0xf78

00004238 <readstat_convert@plt>:
    4238:	add	ip, pc, #0, 12
    423c:	add	ip, ip, #64, 20	; 0x40000
    4240:	ldr	pc, [ip, #3952]!	; 0xf70

00004244 <ck_hash_table_free@plt>:
    4244:	add	ip, pc, #0, 12
    4248:	add	ip, ip, #64, 20	; 0x40000
    424c:	ldr	pc, [ip, #3944]!	; 0xf68

00004250 <readstat_por_parse_double@plt>:
    4250:	add	ip, pc, #0, 12
    4254:	add	ip, ip, #64, 20	; 0x40000
    4258:	ldr	pc, [ip, #3936]!	; 0xf60

0000425c <por_utf8_encode@plt>:
    425c:	add	ip, pc, #0, 12
    4260:	add	ip, ip, #64, 20	; 0x40000
    4264:	ldr	pc, [ip, #3928]!	; 0xf58

00004268 <__errno_location@plt>:
    4268:	add	ip, pc, #0, 12
    426c:	add	ip, ip, #64, 20	; 0x40000
    4270:	ldr	pc, [ip, #3920]!	; 0xf50

00004274 <spss_init_variable_for_info@plt>:
    4274:	add	ip, pc, #0, 12
    4278:	add	ip, ip, #64, 20	; 0x40000
    427c:	ldr	pc, [ip, #3912]!	; 0xf48

00004280 <snprintf@plt>:
    4280:	add	ip, pc, #0, 12
    4284:	add	ip, ip, #64, 20	; 0x40000
    4288:	ldr	pc, [ip, #3904]!	; 0xf40

0000428c <__isoc99_sscanf@plt>:
    428c:	add	ip, pc, #0, 12
    4290:	add	ip, ip, #64, 20	; 0x40000
    4294:	ldr	pc, [ip, #3896]!	; 0xf38

00004298 <ck_str_n_hash_insert@plt>:
    4298:	add	ip, pc, #0, 12
    429c:	add	ip, ip, #64, 20	; 0x40000
    42a0:	ldr	pc, [ip, #3888]!	; 0xf30

000042a4 <memset@plt>:
    42a4:	add	ip, pc, #0, 12
    42a8:	add	ip, ip, #64, 20	; 0x40000
    42ac:	ldr	pc, [ip, #3880]!	; 0xf28

000042b0 <spss_64bit_value@plt>:
    42b0:	add	ip, pc, #0, 12
    42b4:	add	ip, ip, #64, 20	; 0x40000
    42b8:	ldr	pc, [ip, #3872]!	; 0xf20

000042bc <strncpy@plt>:
    42bc:	add	ip, pc, #0, 12
    42c0:	add	ip, ip, #64, 20	; 0x40000
    42c4:	ldr	pc, [ip, #3864]!	; 0xf18

000042c8 <readstat_variable_get_storage_width@plt>:
    42c8:	add	ip, pc, #0, 12
    42cc:	add	ip, ip, #64, 20	; 0x40000
    42d0:	ldr	pc, [ip, #3856]!	; 0xf10

000042d4 <sav_parse_very_long_string_record@plt>:
    42d4:	add	ip, pc, #0, 12
    42d8:	add	ip, ip, #64, 20	; 0x40000
    42dc:	ldr	pc, [ip, #3848]!	; 0xf08

000042e0 <readstat_realloc@plt>:
    42e0:	add	ip, pc, #0, 12
    42e4:	add	ip, ip, #64, 20	; 0x40000
    42e8:	ldr	pc, [ip, #3840]!	; 0xf00

000042ec <dta_parse_timestamp@plt>:
    42ec:	add	ip, pc, #0, 12
    42f0:	add	ip, ip, #64, 20	; 0x40000
    42f4:	ldr	pc, [ip, #3832]!	; 0xef8

000042f8 <strtod@plt>:
    42f8:	add	ip, pc, #0, 12
    42fc:	add	ip, ip, #64, 20	; 0x40000
    4300:	ldr	pc, [ip, #3824]!	; 0xef0

00004304 <readstat_variable_get_missing_ranges_count@plt>:
    4304:	add	ip, pc, #0, 12
    4308:	add	ip, ip, #64, 20	; 0x40000
    430c:	ldr	pc, [ip, #3816]!	; 0xee8

00004310 <deflateEnd@plt>:
    4310:	add	ip, pc, #0, 12
    4314:	add	ip, ip, #64, 20	; 0x40000
    4318:	ldr	pc, [ip, #3808]!	; 0xee0

0000431c <readstat_variable_get_measure@plt>:
    431c:	add	ip, pc, #0, 12
    4320:	add	ip, ip, #64, 20	; 0x40000
    4324:	ldr	pc, [ip, #3800]!	; 0xed8

00004328 <readstat_variable_get_missing_range_hi@plt>:
    4328:	add	ip, pc, #0, 12
    432c:	add	ip, ip, #64, 20	; 0x40000
    4330:	ldr	pc, [ip, #3792]!	; 0xed0

00004334 <readstat_set_read_handler@plt>:
    4334:	add	ip, pc, #0, 12
    4338:	add	ip, ip, #64, 20	; 0x40000
    433c:	ldr	pc, [ip, #3784]!	; 0xec8

00004340 <readstat_value_type@plt>:
    4340:	add	ip, pc, #0, 12
    4344:	add	ip, ip, #64, 20	; 0x40000
    4348:	ldr	pc, [ip, #3776]!	; 0xec0

0000434c <sas_header_info_init@plt>:
    434c:	add	ip, pc, #0, 12
    4350:	add	ip, ip, #64, 20	; 0x40000
    4354:	ldr	pc, [ip, #3768]!	; 0xeb8

00004358 <readstat_string_ref_init@plt>:
    4358:	add	ip, pc, #0, 12
    435c:	add	ip, ip, #64, 20	; 0x40000
    4360:	ldr	pc, [ip, #3760]!	; 0xeb0

00004364 <readstat_variable_get_name@plt>:
    4364:	add	ip, pc, #0, 12
    4368:	add	ip, ip, #64, 20	; 0x40000
    436c:	ldr	pc, [ip, #3752]!	; 0xea8

00004370 <ones_to_twos_complement1@plt>:
    4370:	add	ip, pc, #0, 12
    4374:	add	ip, ip, #64, 20	; 0x40000
    4378:	ldr	pc, [ip, #3744]!	; 0xea0

0000437c <readstat_get_variable@plt>:
    437c:	add	ip, pc, #0, 12
    4380:	add	ip, ip, #64, 20	; 0x40000
    4384:	ldr	pc, [ip, #3736]!	; 0xe98

00004388 <spss_alignment_to_readstat_alignment@plt>:
    4388:	add	ip, pc, #0, 12
    438c:	add	ip, ip, #64, 20	; 0x40000
    4390:	ldr	pc, [ip, #3728]!	; 0xe90

00004394 <por_utf8_decode@plt>:
    4394:	add	ip, pc, #0, 12
    4398:	add	ip, ip, #64, 20	; 0x40000
    439c:	ldr	pc, [ip, #3720]!	; 0xe88

000043a0 <sas_read_header@plt>:
    43a0:	add	ip, pc, #0, 12
    43a4:	add	ip, ip, #64, 20	; 0x40000
    43a8:	ldr	pc, [ip, #3712]!	; 0xe80

000043ac <spss_measure_to_readstat_measure@plt>:
    43ac:	add	ip, pc, #0, 12
    43b0:	add	ip, ip, #64, 20	; 0x40000
    43b4:	ldr	pc, [ip, #3704]!	; 0xe78

000043b8 <sas_subheader_remainder@plt>:
    43b8:	add	ip, pc, #0, 12
    43bc:	add	ip, ip, #64, 20	; 0x40000
    43c0:	ldr	pc, [ip, #3696]!	; 0xe70

000043c4 <sas_read8@plt>:
    43c4:	add	ip, pc, #0, 12
    43c8:	add	ip, ip, #64, 20	; 0x40000
    43cc:	ldr	pc, [ip, #3688]!	; 0xe68

000043d0 <sas_read2@plt>:
    43d0:	add	ip, pc, #0, 12
    43d4:	add	ip, ip, #64, 20	; 0x40000
    43d8:	ldr	pc, [ip, #3680]!	; 0xe60

000043dc <readstat_copy_lower@plt>:
    43dc:	add	ip, pc, #0, 12
    43e0:	add	ip, ip, #64, 20	; 0x40000
    43e4:	ldr	pc, [ip, #3672]!	; 0xe58

000043e8 <sprintf@plt>:
    43e8:	add	ip, pc, #0, 12
    43ec:	add	ip, ip, #64, 20	; 0x40000
    43f0:	ldr	pc, [ip, #3664]!	; 0xe50

000043f4 <sas_read4@plt>:
    43f4:	add	ip, pc, #0, 12
    43f8:	add	ip, ip, #64, 20	; 0x40000
    43fc:	ldr	pc, [ip, #3656]!	; 0xe48

00004400 <readstat_variable_get_label@plt>:
    4400:	add	ip, pc, #0, 12
    4404:	add	ip, ip, #64, 20	; 0x40000
    4408:	ldr	pc, [ip, #3648]!	; 0xe40

0000440c <spss_format@plt>:
    440c:	add	ip, pc, #0, 12
    4410:	add	ip, ip, #64, 20	; 0x40000
    4414:	ldr	pc, [ip, #3640]!	; 0xe38

00004418 <spss_varinfo_free@plt>:
    4418:	add	ip, pc, #0, 12
    441c:	add	ip, ip, #64, 20	; 0x40000
    4420:	ldr	pc, [ip, #3632]!	; 0xe30

00004424 <readstat_get_label_set@plt>:
    4424:	add	ip, pc, #0, 12
    4428:	add	ip, ip, #64, 20	; 0x40000
    442c:	ldr	pc, [ip, #3624]!	; 0xe28

00004430 <readstat_variable_get_alignment@plt>:
    4430:	add	ip, pc, #0, 12
    4434:	add	ip, ip, #64, 20	; 0x40000
    4438:	ldr	pc, [ip, #3616]!	; 0xe20

0000443c <qsort@plt>:
    443c:	add	ip, pc, #0, 12
    4440:	add	ip, ip, #64, 20	; 0x40000
    4444:	ldr	pc, [ip, #3608]!	; 0xe18

00004448 <readstat_get_label_set_variable@plt>:
    4448:	add	ip, pc, #0, 12
    444c:	add	ip, ip, #64, 20	; 0x40000
    4450:	ldr	pc, [ip, #3600]!	; 0xe10

00004454 <readstat_write_bytes@plt>:
    4454:	add	ip, pc, #0, 12
    4458:	add	ip, ip, #64, 20	; 0x40000
    445c:	ldr	pc, [ip, #3592]!	; 0xe08

00004460 <sav_compress_row@plt>:
    4460:	add	ip, pc, #0, 12
    4464:	add	ip, ip, #64, 20	; 0x40000
    4468:	ldr	pc, [ip, #3584]!	; 0xe00

0000446c <readstat_set_close_handler@plt>:
    446c:	add	ip, pc, #0, 12
    4470:	add	ip, ip, #64, 20	; 0x40000
    4474:	ldr	pc, [ip, #3576]!	; 0xdf8

00004478 <sas_fill_page@plt>:
    4478:	add	ip, pc, #0, 12
    447c:	add	ip, ip, #64, 20	; 0x40000
    4480:	ldr	pc, [ip, #3568]!	; 0xdf0

00004484 <sas_rle_compressed_len@plt>:
    4484:	add	ip, pc, #0, 12
    4488:	add	ip, ip, #64, 20	; 0x40000
    448c:	ldr	pc, [ip, #3560]!	; 0xde8

00004490 <por_ctx_init@plt>:
    4490:	add	ip, pc, #0, 12
    4494:	add	ip, ip, #64, 20	; 0x40000
    4498:	ldr	pc, [ip, #3552]!	; 0xde0

0000449c <readstat_validate_variable@plt>:
    449c:	add	ip, pc, #0, 12
    44a0:	add	ip, ip, #64, 20	; 0x40000
    44a4:	ldr	pc, [ip, #3544]!	; 0xdd8

000044a8 <sas_assign_tag@plt>:
    44a8:	add	ip, pc, #0, 12
    44ac:	add	ip, ip, #64, 20	; 0x40000
    44b0:	ldr	pc, [ip, #3536]!	; 0xdd0

000044b4 <zsav_compress_row@plt>:
    44b4:	add	ip, pc, #0, 12
    44b8:	add	ip, ip, #64, 20	; 0x40000
    44bc:	ldr	pc, [ip, #3528]!	; 0xdc8

000044c0 <zsav_read_compressed_data@plt>:
    44c0:	add	ip, pc, #0, 12
    44c4:	add	ip, ip, #64, 20	; 0x40000
    44c8:	ldr	pc, [ip, #3520]!	; 0xdc0

000044cc <readstat_get_value_label@plt>:
    44cc:	add	ip, pc, #0, 12
    44d0:	add	ip, ip, #64, 20	; 0x40000
    44d4:	ldr	pc, [ip, #3512]!	; 0xdb8

000044d8 <sas_rle_compress@plt>:
    44d8:	add	ip, pc, #0, 12
    44dc:	add	ip, ip, #64, 20	; 0x40000
    44e0:	ldr	pc, [ip, #3504]!	; 0xdb0

000044e4 <readstat_write_line_padding@plt>:
    44e4:	add	ip, pc, #0, 12
    44e8:	add	ip, ip, #64, 20	; 0x40000
    44ec:	ldr	pc, [ip, #3496]!	; 0xda8

000044f0 <ck_str_hash_insert@plt>:
    44f0:	add	ip, pc, #0, 12
    44f4:	add	ip, ip, #64, 20	; 0x40000
    44f8:	ldr	pc, [ip, #3488]!	; 0xda0

000044fc <strncmp@plt>:
    44fc:	add	ip, pc, #0, 12
    4500:	add	ip, ip, #64, 20	; 0x40000
    4504:	ldr	pc, [ip, #3480]!	; 0xd98

00004508 <byteswap_double@plt>:
    4508:	add	ip, pc, #0, 12
    450c:	add	ip, ip, #64, 20	; 0x40000
    4510:	ldr	pc, [ip, #3472]!	; 0xd90

00004514 <close@plt>:
    4514:	add	ip, pc, #0, 12
    4518:	add	ip, ip, #64, 20	; 0x40000
    451c:	ldr	pc, [ip, #3464]!	; 0xd88

00004520 <readstat_write_bytes_as_lines@plt>:
    4520:	add	ip, pc, #0, 12
    4524:	add	ip, ip, #64, 20	; 0x40000
    4528:	ldr	pc, [ip, #3456]!	; 0xd80

0000452c <spss_missingness_for_info@plt>:
    452c:	add	ip, pc, #0, 12
    4530:	add	ip, ip, #64, 20	; 0x40000
    4534:	ldr	pc, [ip, #3448]!	; 0xd78

00004538 <handle_variables@plt>:
    4538:	add	ip, pc, #0, 12
    453c:	add	ip, ip, #64, 20	; 0x40000
    4540:	ldr	pc, [ip, #3440]!	; 0xd70

00004544 <readstat_variable_get_type_class@plt>:
    4544:	add	ip, pc, #0, 12
    4548:	add	ip, ip, #64, 20	; 0x40000
    454c:	ldr	pc, [ip, #3432]!	; 0xd68

00004550 <readstat_write_space_padded_string@plt>:
    4550:	add	ip, pc, #0, 12
    4554:	add	ip, ip, #64, 20	; 0x40000
    4558:	ldr	pc, [ip, #3424]!	; 0xd60

0000455c <dta_ctx_alloc@plt>:
    455c:	add	ip, pc, #0, 12
    4560:	add	ip, ip, #64, 20	; 0x40000
    4564:	ldr	pc, [ip, #3416]!	; 0xd58

Disassembly of section .text:

00004568 <sas7bdat_copy_text_ref>:
    4568:	push	{r4, r5, lr}
    456c:	sub	sp, sp, #12
    4570:	add	lr, sp, #8
    4574:	ldr	ip, [sp, #24]
    4578:	stmdb	lr, {r2, r3}
    457c:	ldrh	lr, [sp]
    4580:	ldr	r3, [ip, #152]	; 0x98
    4584:	cmp	lr, r3
    4588:	bge	45dc <sas7bdat_copy_text_ref+0x74>
    458c:	ldrh	r3, [sp, #4]
    4590:	cmp	r3, #0
    4594:	moveq	r2, r0
    4598:	moveq	r0, r3
    459c:	strbeq	r3, [r2]
    45a0:	beq	45e0 <sas7bdat_copy_text_ref+0x78>
    45a4:	ldr	r4, [ip, #156]	; 0x9c
    45a8:	ldrh	r2, [sp, #2]
    45ac:	ldr	r4, [r4, lr, lsl #2]
    45b0:	add	r5, r2, r3
    45b4:	cmp	r5, r4
    45b8:	bhi	45dc <sas7bdat_copy_text_ref+0x74>
    45bc:	ldr	r5, [ip, #160]	; 0xa0
    45c0:	ldr	r4, [ip, #208]	; 0xd0
    45c4:	ldr	ip, [r5, lr, lsl #2]
    45c8:	str	r4, [sp, #24]
    45cc:	add	r2, ip, r2
    45d0:	add	sp, sp, #12
    45d4:	pop	{r4, r5, lr}
    45d8:	b	4238 <readstat_convert@plt>
    45dc:	mov	r0, #5
    45e0:	add	sp, sp, #12
    45e4:	pop	{r4, r5, pc}

000045e8 <sas7bdat_parse_single_row.part.6>:
    45e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    45ec:	vpush	{d8}
    45f0:	ldr	r3, [r1, #16]
    45f4:	mov	r4, r1
    45f8:	cmp	r3, #0
    45fc:	sub	sp, sp, #76	; 0x4c
    4600:	str	r0, [sp, #40]	; 0x28
    4604:	bne	461c <sas7bdat_parse_single_row.part.6+0x34>
    4608:	ldr	r3, [r4, #76]	; 0x4c
    460c:	mov	r7, #0
    4610:	add	r3, r3, #1
    4614:	str	r3, [r4, #76]	; 0x4c
    4618:	b	4880 <sas7bdat_parse_single_row.part.6+0x298>
    461c:	ldr	r1, [r1, #176]	; 0xb0
    4620:	ldr	r0, [r4, #180]	; 0xb4
    4624:	lsl	r1, r1, #2
    4628:	add	r1, r1, #1
    462c:	str	r1, [r4, #184]	; 0xb8
    4630:	bl	42e0 <readstat_realloc@plt>
    4634:	cmp	r0, #0
    4638:	str	r0, [r4, #180]	; 0xb4
    463c:	moveq	r7, #3
    4640:	beq	4880 <sas7bdat_parse_single_row.part.6+0x298>
    4644:	vldr	d8, [pc, #580]	; 4890 <sas7bdat_parse_single_row.part.6+0x2a8>
    4648:	mov	r8, #0
    464c:	add	r5, sp, #56	; 0x38
    4650:	mov	r9, r8
    4654:	mov	sl, r5
    4658:	add	r3, sp, #64	; 0x40
    465c:	str	r3, [sp, #44]	; 0x2c
    4660:	ldr	r3, [r4, #80]	; 0x50
    4664:	cmp	r8, r3
    4668:	bcs	4608 <sas7bdat_parse_single_row.part.6+0x20>
    466c:	ldr	r3, [r4, #196]	; 0xc4
    4670:	ldr	r3, [r3, r8, lsl #2]
    4674:	str	r3, [sp, #20]
    4678:	ldr	ip, [r3, #2144]	; 0x860
    467c:	cmp	ip, #0
    4680:	bne	486c <sas7bdat_parse_single_row.part.6+0x284>
    4684:	mov	r3, #40	; 0x28
    4688:	ldr	fp, [r4, #192]	; 0xc0
    468c:	ldr	r2, [r4, #68]	; 0x44
    4690:	mla	fp, r3, r8, fp
    4694:	mov	r3, #0
    4698:	ldrd	r6, [fp, #24]
    469c:	cmp	r7, r3
    46a0:	cmpeq	r6, r2
    46a4:	bhi	4874 <sas7bdat_parse_single_row.part.6+0x28c>
    46a8:	ldr	r5, [fp, #32]
    46ac:	adds	r0, r6, r5
    46b0:	adc	r1, r7, #0
    46b4:	cmp	r3, r1
    46b8:	cmpeq	r2, r0
    46bc:	bcc	4874 <sas7bdat_parse_single_row.part.6+0x28c>
    46c0:	ldr	r3, [sp, #40]	; 0x28
    46c4:	mov	r1, ip
    46c8:	mov	r2, #16
    46cc:	mov	r0, sl
    46d0:	add	r6, r3, r6
    46d4:	bl	42a4 <memset@plt>
    46d8:	ldr	r3, [fp, #36]	; 0x24
    46dc:	cmp	r3, #0
    46e0:	str	r3, [sp, #64]	; 0x40
    46e4:	bne	4778 <sas7bdat_parse_single_row.part.6+0x190>
    46e8:	ldr	r2, [r4, #208]	; 0xd0
    46ec:	mov	r3, r5
    46f0:	str	r2, [sp]
    46f4:	mov	r2, r6
    46f8:	ldr	r1, [r4, #184]	; 0xb8
    46fc:	ldr	r0, [r4, #180]	; 0xb4
    4700:	bl	4238 <readstat_convert@plt>
    4704:	cmp	r0, #0
    4708:	beq	476c <sas7bdat_parse_single_row.part.6+0x184>
    470c:	ldr	r3, [r4, #24]
    4710:	mov	r7, r0
    4714:	cmp	r3, #0
    4718:	beq	4880 <sas7bdat_parse_single_row.part.6+0x298>
    471c:	str	r6, [sp, #8]
    4720:	ldr	r3, [fp, #32]
    4724:	add	r5, r4, #480	; 0x1e0
    4728:	str	r3, [sp, #4]
    472c:	ldr	r2, [fp, #20]
    4730:	ldr	r3, [r4, #76]	; 0x4c
    4734:	add	r2, r2, #1
    4738:	str	r2, [sp]
    473c:	ldr	r2, [pc, #340]	; 4898 <sas7bdat_parse_single_row.part.6+0x2b0>
    4740:	add	r5, r5, #1
    4744:	mov	r0, r5
    4748:	add	r3, r3, #1
    474c:	add	r2, pc, r2
    4750:	mov	r1, #2048	; 0x800
    4754:	bl	4280 <snprintf@plt>
    4758:	mov	r0, r5
    475c:	ldr	r3, [r4, #24]
    4760:	ldr	r1, [r4, #52]	; 0x34
    4764:	blx	r3
    4768:	b	4880 <sas7bdat_parse_single_row.part.6+0x298>
    476c:	ldr	r3, [r4, #180]	; 0xb4
    4770:	str	r3, [sp, #56]	; 0x38
    4774:	b	483c <sas7bdat_parse_single_row.part.6+0x254>
    4778:	cmp	r3, #5
    477c:	bne	483c <sas7bdat_parse_single_row.part.6+0x254>
    4780:	ldr	r2, [r4, #40]	; 0x28
    4784:	add	r3, r6, r5
    4788:	cmp	r2, #0
    478c:	mov	r0, r9
    4790:	mov	r1, #0
    4794:	mov	ip, r3
    4798:	ldrdeq	r2, [sp, #32]
    479c:	beq	47d4 <sas7bdat_parse_single_row.part.6+0x1ec>
    47a0:	ldrd	r2, [sp, #24]
    47a4:	cmp	ip, r6
    47a8:	beq	47cc <sas7bdat_parse_single_row.part.6+0x1e4>
    47ac:	lsl	r3, r1, #8
    47b0:	orr	r3, r3, r0, lsr #24
    47b4:	lsl	r2, r0, #8
    47b8:	ldrb	r0, [ip, #-1]!
    47bc:	mov	r1, #0
    47c0:	orr	r1, r1, r3
    47c4:	orr	r0, r0, r2
    47c8:	b	47a4 <sas7bdat_parse_single_row.part.6+0x1bc>
    47cc:	strd	r2, [sp, #24]
    47d0:	b	4800 <sas7bdat_parse_single_row.part.6+0x218>
    47d4:	cmp	r6, ip
    47d8:	beq	47fc <sas7bdat_parse_single_row.part.6+0x214>
    47dc:	lsl	r3, r1, #8
    47e0:	orr	r3, r3, r0, lsr #24
    47e4:	lsl	r2, r0, #8
    47e8:	ldrb	r0, [r6], #1
    47ec:	mov	r1, #0
    47f0:	orr	r1, r1, r3
    47f4:	orr	r0, r0, r2
    47f8:	b	47d4 <sas7bdat_parse_single_row.part.6+0x1ec>
    47fc:	strd	r2, [sp, #32]
    4800:	mvn	r3, #7
    4804:	mul	r2, r3, r5
    4808:	add	r2, r2, #64	; 0x40
    480c:	bl	251e0 <__aeabi_llsl>
    4810:	vmov	d7, r0, r1
    4814:	strd	r0, [sp, #48]	; 0x30
    4818:	vcmp.f64	d7, d7
    481c:	vmrs	APSR_nzcv, fpscr
    4820:	vstrvc	d7, [sp, #56]	; 0x38
    4824:	bvc	483c <sas7bdat_parse_single_row.part.6+0x254>
    4828:	mvn	r1, r1, lsr #8
    482c:	mov	r0, sl
    4830:	uxtb	r1, r1
    4834:	vstr	d8, [sp, #56]	; 0x38
    4838:	bl	44a8 <sas_assign_tag@plt>
    483c:	ldr	r3, [sp, #44]	; 0x2c
    4840:	ldr	r5, [r4, #16]
    4844:	ldm	r3, {r0, r1}
    4848:	ldr	r3, [r4, #52]	; 0x34
    484c:	stm	sp, {r0, r1}
    4850:	str	r3, [sp, #8]
    4854:	ldr	r1, [sp, #20]
    4858:	ldm	sl, {r2, r3}
    485c:	ldr	r0, [r4, #76]	; 0x4c
    4860:	blx	r5
    4864:	cmp	r0, #0
    4868:	bne	487c <sas7bdat_parse_single_row.part.6+0x294>
    486c:	add	r8, r8, #1
    4870:	b	4660 <sas7bdat_parse_single_row.part.6+0x78>
    4874:	mov	r7, #5
    4878:	b	4880 <sas7bdat_parse_single_row.part.6+0x298>
    487c:	mov	r7, #4
    4880:	mov	r0, r7
    4884:	add	sp, sp, #76	; 0x4c
    4888:	vpop	{d8}
    488c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4890:	.word	0x00000000
    4894:	.word	0x7ff80000
    4898:	.word	0x00021a84

0000489c <sas7bdat_submit_columns_if_needed.part.7>:
    489c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    48a0:	mov	r4, r0
    48a4:	ldr	r5, [r0]
    48a8:	sub	sp, sp, #84	; 0x54
    48ac:	cmp	r5, #0
    48b0:	beq	4960 <sas7bdat_submit_columns_if_needed.part.7+0xc4>
    48b4:	add	r8, sp, #24
    48b8:	mov	r9, r1
    48bc:	mov	r2, #56	; 0x38
    48c0:	mov	r1, #0
    48c4:	mov	r0, r8
    48c8:	bl	42a4 <memset@plt>
    48cc:	ldr	r0, [r4, #220]	; 0xdc
    48d0:	ldr	r2, [r4, #40]	; 0x28
    48d4:	ldr	sl, [r4, #84]	; 0x54
    48d8:	asr	r1, r0, #31
    48dc:	cmp	r2, #0
    48e0:	ldr	r6, [r4, #80]	; 0x50
    48e4:	ldr	r3, [r4, #44]	; 0x2c
    48e8:	movne	r2, #1
    48ec:	moveq	r2, #2
    48f0:	strd	r0, [sp, #48]	; 0x30
    48f4:	mov	fp, #0
    48f8:	mov	r7, #0
    48fc:	ldr	ip, [r4, #212]	; 0xd4
    4900:	ldr	r0, [r4, #216]	; 0xd8
    4904:	ldr	r1, [r4, #200]	; 0xc8
    4908:	and	r3, r3, #1
    490c:	str	r2, [sp, #60]	; 0x3c
    4910:	cmp	r9, #0
    4914:	add	r2, r4, #224	; 0xe0
    4918:	strd	sl, [sp, #24]
    491c:	strd	r6, [sp, #32]
    4920:	strb	r3, [sp, #76]	; 0x4c
    4924:	str	ip, [sp, #40]	; 0x28
    4928:	str	r0, [sp, #44]	; 0x2c
    492c:	str	r1, [sp, #72]	; 0x48
    4930:	str	r2, [sp, #68]	; 0x44
    4934:	beq	494c <sas7bdat_submit_columns_if_needed.part.7+0xb0>
    4938:	ldrb	r3, [r4, #2529]	; 0x9e1
    493c:	tst	r3, #1
    4940:	movne	r3, #2
    4944:	moveq	r3, #1
    4948:	str	r3, [sp, #56]	; 0x38
    494c:	mov	r0, r8
    4950:	ldr	r1, [r4, #52]	; 0x34
    4954:	blx	r5
    4958:	cmp	r0, #0
    495c:	bne	4b94 <sas7bdat_submit_columns_if_needed.part.7+0x2f8>
    4960:	ldr	r0, [r4, #80]	; 0x50
    4964:	cmp	r0, #0
    4968:	bne	497c <sas7bdat_submit_columns_if_needed.part.7+0xe0>
    496c:	mov	r3, #1
    4970:	str	r3, [r4, #64]	; 0x40
    4974:	mov	r6, #0
    4978:	b	4b98 <sas7bdat_submit_columns_if_needed.part.7+0x2fc>
    497c:	mov	r1, #4
    4980:	bl	3fc8 <readstat_calloc@plt>
    4984:	cmp	r0, #0
    4988:	str	r0, [r4, #196]	; 0xc4
    498c:	moveq	r6, #3
    4990:	beq	4b98 <sas7bdat_submit_columns_if_needed.part.7+0x2fc>
    4994:	add	r3, r4, #480	; 0x1e0
    4998:	mov	r6, #0
    499c:	add	fp, r3, #1
    49a0:	ldr	r3, [pc, #508]	; 4ba4 <sas7bdat_submit_columns_if_needed.part.7+0x308>
    49a4:	mov	r9, r6
    49a8:	mov	r8, r6
    49ac:	add	r3, pc, r3
    49b0:	str	r3, [sp, #20]
    49b4:	ldr	r3, [r4, #80]	; 0x50
    49b8:	cmp	r8, r3
    49bc:	bcs	4b88 <sas7bdat_submit_columns_if_needed.part.7+0x2ec>
    49c0:	mov	r3, #40	; 0x28
    49c4:	ldr	r1, [pc, #476]	; 4ba8 <sas7bdat_submit_columns_if_needed.part.7+0x30c>
    49c8:	mul	sl, r3, r8
    49cc:	ldr	r3, [r4, #196]	; 0xc4
    49d0:	mov	r0, #1
    49d4:	str	r3, [sp, #16]
    49d8:	bl	3fc8 <readstat_calloc@plt>
    49dc:	ldr	r3, [r4, #192]	; 0xc0
    49e0:	lsl	r7, r8, #2
    49e4:	add	r3, r3, sl
    49e8:	ldr	r1, [r3, #32]
    49ec:	ldr	r2, [r3, #36]	; 0x24
    49f0:	str	r8, [r0, #4]
    49f4:	str	r9, [r0, #2148]	; 0x864
    49f8:	str	r1, [r0, #1596]	; 0x63c
    49fc:	ldr	r1, [r3, #36]	; 0x24
    4a00:	mov	r5, r0
    4a04:	cmp	r1, #5
    4a08:	str	r2, [r0]
    4a0c:	ldr	r2, [r3, #32]
    4a10:	bne	4a24 <sas7bdat_submit_columns_if_needed.part.7+0x188>
    4a14:	sub	r2, r2, #3
    4a18:	cmp	r2, #5
    4a1c:	bhi	4ab4 <sas7bdat_submit_columns_if_needed.part.7+0x218>
    4a20:	b	4a3c <sas7bdat_submit_columns_if_needed.part.7+0x1a0>
    4a24:	cmp	r1, #0
    4a28:	bne	4a3c <sas7bdat_submit_columns_if_needed.part.7+0x1a0>
    4a2c:	ldr	r1, [pc, #376]	; 4bac <sas7bdat_submit_columns_if_needed.part.7+0x310>
    4a30:	sub	r2, r2, #1
    4a34:	cmp	r2, r1
    4a38:	bhi	4ab4 <sas7bdat_submit_columns_if_needed.part.7+0x218>
    4a3c:	str	r4, [sp]
    4a40:	mov	r1, #300	; 0x12c
    4a44:	ldm	r3, {r2, r3}
    4a48:	add	r0, r5, #8
    4a4c:	bl	4568 <sas7bdat_copy_text_ref>
    4a50:	cmp	r0, #0
    4a54:	bne	4abc <sas7bdat_submit_columns_if_needed.part.7+0x220>
    4a58:	ldr	r3, [r4, #192]	; 0xc0
    4a5c:	str	r4, [sp]
    4a60:	add	r3, r3, sl
    4a64:	mov	r1, #256	; 0x100
    4a68:	ldrh	ip, [r3, #8]
    4a6c:	ldrh	r2, [r3, #6]
    4a70:	add	r0, r5, #308	; 0x134
    4a74:	ldrh	r3, [r3, #10]
    4a78:	orr	r2, r2, ip, lsl #16
    4a7c:	bl	4568 <sas7bdat_copy_text_ref>
    4a80:	cmp	r0, #0
    4a84:	bne	4abc <sas7bdat_submit_columns_if_needed.part.7+0x220>
    4a88:	ldr	r3, [r4, #192]	; 0xc0
    4a8c:	mov	r1, #1024	; 0x400
    4a90:	add	sl, r3, sl
    4a94:	add	sl, sl, #12
    4a98:	str	r4, [sp]
    4a9c:	add	r0, r5, #564	; 0x234
    4aa0:	ldm	sl, {r2, r3}
    4aa4:	bl	4568 <sas7bdat_copy_text_ref>
    4aa8:	cmp	r0, #0
    4aac:	beq	4b24 <sas7bdat_submit_columns_if_needed.part.7+0x288>
    4ab0:	b	4abc <sas7bdat_submit_columns_if_needed.part.7+0x220>
    4ab4:	mov	r6, #5
    4ab8:	b	4ac0 <sas7bdat_submit_columns_if_needed.part.7+0x224>
    4abc:	mov	r6, r0
    4ac0:	mov	r0, r5
    4ac4:	bl	3ec0 <free@plt>
    4ac8:	cmp	r6, #17
    4acc:	movne	r5, #0
    4ad0:	bne	4b24 <sas7bdat_submit_columns_if_needed.part.7+0x288>
    4ad4:	ldr	r3, [r4, #24]
    4ad8:	cmp	r3, #0
    4adc:	moveq	r5, r3
    4ae0:	beq	4b24 <sas7bdat_submit_columns_if_needed.part.7+0x288>
    4ae4:	add	r2, r5, #564	; 0x234
    4ae8:	add	r3, r5, #308	; 0x134
    4aec:	add	r5, r5, #8
    4af0:	str	r2, [sp, #8]
    4af4:	str	r3, [sp, #4]
    4af8:	str	r5, [sp]
    4afc:	mov	r3, r8
    4b00:	ldr	r2, [sp, #20]
    4b04:	mov	r1, #2048	; 0x800
    4b08:	mov	r0, fp
    4b0c:	bl	4280 <snprintf@plt>
    4b10:	ldr	r3, [r4, #24]
    4b14:	ldr	r1, [r4, #52]	; 0x34
    4b18:	mov	r0, fp
    4b1c:	blx	r3
    4b20:	mov	r5, #0
    4b24:	ldr	r3, [r4, #196]	; 0xc4
    4b28:	ldr	r2, [sp, #16]
    4b2c:	str	r5, [r2, r7]
    4b30:	ldr	r1, [r3, r7]
    4b34:	cmp	r1, #0
    4b38:	beq	4b88 <sas7bdat_submit_columns_if_needed.part.7+0x2ec>
    4b3c:	ldr	r5, [r4, #8]
    4b40:	cmp	r5, #0
    4b44:	beq	4b7c <sas7bdat_submit_columns_if_needed.part.7+0x2e0>
    4b48:	ldr	r3, [r4, #52]	; 0x34
    4b4c:	add	r2, r1, #308	; 0x134
    4b50:	mov	r0, r8
    4b54:	blx	r5
    4b58:	cmp	r0, #1
    4b5c:	beq	4b94 <sas7bdat_submit_columns_if_needed.part.7+0x2f8>
    4b60:	cmp	r0, #2
    4b64:	bne	4b7c <sas7bdat_submit_columns_if_needed.part.7+0x2e0>
    4b68:	ldr	r3, [r4, #196]	; 0xc4
    4b6c:	mov	r2, #1
    4b70:	ldr	r3, [r3, r7]
    4b74:	str	r2, [r3, #2144]	; 0x860
    4b78:	b	4b80 <sas7bdat_submit_columns_if_needed.part.7+0x2e4>
    4b7c:	add	r9, r9, #1
    4b80:	add	r8, r8, #1
    4b84:	b	49b4 <sas7bdat_submit_columns_if_needed.part.7+0x118>
    4b88:	cmp	r6, #0
    4b8c:	beq	496c <sas7bdat_submit_columns_if_needed.part.7+0xd0>
    4b90:	b	4b98 <sas7bdat_submit_columns_if_needed.part.7+0x2fc>
    4b94:	mov	r6, #4
    4b98:	mov	r0, r6
    4b9c:	add	sp, sp, #84	; 0x54
    4ba0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4ba4:	.word	0x00021874
    4ba8:	.word	0x00000868
    4bac:	.word	0x00007ffe

00004bb0 <xport_skip_rest_of_record.isra.2>:
    4bb0:	push	{r4, lr}
    4bb4:	mov	r1, #1
    4bb8:	ldr	r3, [r0, #8]
    4bbc:	ldr	r2, [r0, #20]
    4bc0:	mov	r4, r0
    4bc4:	mov	r0, #0
    4bc8:	blx	r3
    4bcc:	cmn	r0, #1
    4bd0:	bne	4bdc <xport_skip_rest_of_record.isra.2+0x2c>
    4bd4:	mov	r0, #15
    4bd8:	pop	{r4, pc}
    4bdc:	mov	r1, #80	; 0x50
    4be0:	bl	251c0 <__aeabi_idivmod>
    4be4:	cmp	r1, #0
    4be8:	beq	4c08 <xport_skip_rest_of_record.isra.2+0x58>
    4bec:	rsb	r0, r1, #80	; 0x50
    4bf0:	ldr	r3, [r4, #8]
    4bf4:	ldr	r2, [r4, #20]
    4bf8:	mov	r1, #1
    4bfc:	blx	r3
    4c00:	cmn	r0, #1
    4c04:	beq	4bd4 <xport_skip_rest_of_record.isra.2+0x24>
    4c08:	mov	r0, #0
    4c0c:	pop	{r4, pc}

00004c10 <xport_process_row.isra.3>:
    4c10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4c14:	vpush	{d8}
    4c18:	vldr	d8, [pc, #576]	; 4e60 <xport_process_row.isra.3+0x250>
    4c1c:	mov	r5, #0
    4c20:	mov	r4, r0
    4c24:	sub	sp, sp, #76	; 0x4c
    4c28:	add	r8, sp, #48	; 0x30
    4c2c:	add	r3, r8, #1
    4c30:	str	r3, [sp, #24]
    4c34:	add	r3, sp, #56	; 0x38
    4c38:	str	r3, [sp, #20]
    4c3c:	mov	fp, r1
    4c40:	add	r3, sp, #40	; 0x28
    4c44:	mov	r6, r5
    4c48:	mov	r9, r5
    4c4c:	str	r3, [sp, #28]
    4c50:	add	r3, sp, #64	; 0x40
    4c54:	str	r3, [sp, #32]
    4c58:	ldr	r3, [r4, #64]	; 0x40
    4c5c:	cmp	r9, r3
    4c60:	bge	4e20 <xport_process_row.isra.3+0x210>
    4c64:	ldr	r3, [r4, #376]	; 0x178
    4c68:	mov	r2, #16
    4c6c:	mov	r1, #0
    4c70:	ldr	r7, [r3, r9, lsl #2]
    4c74:	ldr	r0, [sp, #20]
    4c78:	bl	42a4 <memset@plt>
    4c7c:	ldr	r3, [r7]
    4c80:	ldr	r2, [r7, #1596]	; 0x63c
    4c84:	cmp	r3, #0
    4c88:	str	r3, [sp, #64]	; 0x40
    4c8c:	lsl	r3, r9, #2
    4c90:	str	r3, [sp, #36]	; 0x24
    4c94:	bne	4ce0 <xport_process_row.isra.3+0xd0>
    4c98:	lsl	r2, r2, #2
    4c9c:	mov	r0, r5
    4ca0:	add	r1, r2, #1
    4ca4:	bl	42e0 <readstat_realloc@plt>
    4ca8:	subs	r5, r0, #0
    4cac:	beq	4e18 <xport_process_row.isra.3+0x208>
    4cb0:	ldr	r1, [r7, #1596]	; 0x63c
    4cb4:	ldr	r2, [r4, #48]	; 0x30
    4cb8:	mov	r3, r1
    4cbc:	lsl	r1, r1, #2
    4cc0:	str	r2, [sp]
    4cc4:	add	r1, r1, #1
    4cc8:	add	r2, fp, r6
    4ccc:	bl	4238 <readstat_convert@plt>
    4cd0:	cmp	r0, #0
    4cd4:	bne	4e44 <xport_process_row.isra.3+0x234>
    4cd8:	str	r5, [sp, #56]	; 0x38
    4cdc:	b	4da0 <xport_process_row.isra.3+0x190>
    4ce0:	sub	r3, r2, #3
    4ce4:	cmp	r3, #5
    4ce8:	vstr	d8, [sp, #40]	; 0x28
    4cec:	bhi	4d98 <xport_process_row.isra.3+0x188>
    4cf0:	add	r1, r6, #1
    4cf4:	mov	r3, #0
    4cf8:	sub	r2, r2, #1
    4cfc:	add	r1, fp, r1
    4d00:	ldr	r0, [sp, #24]
    4d04:	str	r3, [r8]
    4d08:	str	r3, [r8, #4]
    4d0c:	bl	3fa4 <memcmp@plt>
    4d10:	add	sl, fp, r6
    4d14:	cmp	r0, #0
    4d18:	bne	4d68 <xport_process_row.isra.3+0x158>
    4d1c:	ldrb	r0, [fp, r6]
    4d20:	cmp	r0, #46	; 0x2e
    4d24:	bne	4d44 <xport_process_row.isra.3+0x134>
    4d28:	ldrb	r2, [sl]
    4d2c:	cmp	r2, #46	; 0x2e
    4d30:	bne	4d54 <xport_process_row.isra.3+0x144>
    4d34:	ldrb	r3, [sp, #69]	; 0x45
    4d38:	orr	r3, r3, #1
    4d3c:	strb	r3, [sp, #69]	; 0x45
    4d40:	b	4d98 <xport_process_row.isra.3+0x188>
    4d44:	bl	4148 <sas_validate_tag@plt>
    4d48:	cmp	r0, #0
    4d4c:	beq	4d28 <xport_process_row.isra.3+0x118>
    4d50:	b	4d68 <xport_process_row.isra.3+0x158>
    4d54:	ldrb	r3, [sp, #69]	; 0x45
    4d58:	strb	r2, [sp, #68]	; 0x44
    4d5c:	orr	r3, r3, #2
    4d60:	strb	r3, [sp, #69]	; 0x45
    4d64:	b	4d98 <xport_process_row.isra.3+0x188>
    4d68:	mov	r1, sl
    4d6c:	ldr	r2, [r7, #1596]	; 0x63c
    4d70:	mov	r0, r8
    4d74:	bl	3f20 <memcpy@plt>
    4d78:	mov	r3, #0
    4d7c:	ldr	r2, [sp, #28]
    4d80:	mov	r1, #1
    4d84:	mov	r0, r8
    4d88:	bl	4004 <cnxptiee@plt>
    4d8c:	cmp	r0, #0
    4d90:	movne	sl, #16
    4d94:	bne	4e48 <xport_process_row.isra.3+0x238>
    4d98:	ldrd	r2, [sp, #40]	; 0x28
    4d9c:	strd	r2, [sp, #56]	; 0x38
    4da0:	ldr	sl, [r4, #16]
    4da4:	ldr	r3, [r7, #1596]	; 0x63c
    4da8:	cmp	sl, #0
    4dac:	add	r6, r6, r3
    4db0:	bne	4dbc <xport_process_row.isra.3+0x1ac>
    4db4:	add	r9, r9, #1
    4db8:	b	4c58 <xport_process_row.isra.3+0x48>
    4dbc:	ldr	r3, [r4, #376]	; 0x178
    4dc0:	lsl	r2, r9, #2
    4dc4:	ldr	r3, [r3, r2]
    4dc8:	ldr	r3, [r3, #2144]	; 0x860
    4dcc:	cmp	r3, #0
    4dd0:	bne	4db4 <xport_process_row.isra.3+0x1a4>
    4dd4:	ldr	r3, [r4, #72]	; 0x48
    4dd8:	cmp	r3, #0
    4ddc:	bne	4db4 <xport_process_row.isra.3+0x1a4>
    4de0:	ldr	r3, [sp, #32]
    4de4:	ldr	ip, [r4, #36]	; 0x24
    4de8:	ldm	r3, {r0, r1}
    4dec:	ldr	r3, [sp, #20]
    4df0:	ldm	r3, {r2, r3}
    4df4:	stm	sp, {r0, r1}
    4df8:	str	ip, [sp, #8]
    4dfc:	mov	r1, r7
    4e00:	ldr	r0, [r4, #80]	; 0x50
    4e04:	blx	sl
    4e08:	cmp	r0, #0
    4e0c:	beq	4db4 <xport_process_row.isra.3+0x1a4>
    4e10:	mov	sl, #4
    4e14:	b	4e48 <xport_process_row.isra.3+0x238>
    4e18:	mov	sl, #3
    4e1c:	b	4e48 <xport_process_row.isra.3+0x238>
    4e20:	ldr	sl, [r4, #72]	; 0x48
    4e24:	cmp	sl, #0
    4e28:	subne	sl, sl, #1
    4e2c:	ldreq	r3, [r4, #80]	; 0x50
    4e30:	strne	sl, [r4, #72]	; 0x48
    4e34:	addeq	r3, r3, #1
    4e38:	movne	sl, #0
    4e3c:	streq	r3, [r4, #80]	; 0x50
    4e40:	b	4e48 <xport_process_row.isra.3+0x238>
    4e44:	mov	sl, r0
    4e48:	mov	r0, r5
    4e4c:	bl	3ec0 <free@plt>
    4e50:	mov	r0, sl
    4e54:	add	sp, sp, #76	; 0x4c
    4e58:	vpop	{d8}
    4e5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4e60:	.word	0x00000000
    4e64:	.word	0x7ff80000

00004e68 <xport_construct_format.constprop.4>:
    4e68:	lsl	ip, r2, #2
    4e6c:	push	{r4, r5, r6, r7, r8, fp, lr}
    4e70:	mov	lr, r2
    4e74:	add	r2, ip, #8
    4e78:	add	fp, sp, #24
    4e7c:	bic	r2, r2, #7
    4e80:	sub	sp, sp, #12
    4e84:	sub	sp, sp, r2
    4e88:	mov	r7, #0
    4e8c:	add	r5, sp, #8
    4e90:	mov	r2, r1
    4e94:	str	r7, [sp]
    4e98:	mov	r4, r0
    4e9c:	mov	r6, r3
    4ea0:	add	r1, ip, #1
    4ea4:	mov	r3, lr
    4ea8:	mov	r0, r5
    4eac:	ldr	r8, [fp, #4]
    4eb0:	bl	4238 <readstat_convert@plt>
    4eb4:	subs	r7, r0, #0
    4eb8:	bne	4f34 <xport_construct_format.constprop.4+0xcc>
    4ebc:	ldrb	r3, [sp, #8]
    4ec0:	cmp	r3, #0
    4ec4:	strbeq	r7, [r4]
    4ec8:	beq	4f34 <xport_construct_format.constprop.4+0xcc>
    4ecc:	cmp	r8, #0
    4ed0:	beq	4ef4 <xport_construct_format.constprop.4+0x8c>
    4ed4:	ldr	r2, [pc, #100]	; 4f40 <xport_construct_format.constprop.4+0xd8>
    4ed8:	stm	sp, {r6, r8}
    4edc:	mov	r3, r5
    4ee0:	mov	r0, r4
    4ee4:	add	r2, pc, r2
    4ee8:	mov	r1, #256	; 0x100
    4eec:	bl	4280 <snprintf@plt>
    4ef0:	b	4f34 <xport_construct_format.constprop.4+0xcc>
    4ef4:	cmp	r6, #0
    4ef8:	beq	4f1c <xport_construct_format.constprop.4+0xb4>
    4efc:	ldr	r2, [pc, #64]	; 4f44 <xport_construct_format.constprop.4+0xdc>
    4f00:	str	r6, [sp]
    4f04:	mov	r3, r5
    4f08:	mov	r0, r4
    4f0c:	add	r2, pc, r2
    4f10:	mov	r1, #256	; 0x100
    4f14:	bl	4280 <snprintf@plt>
    4f18:	b	4f34 <xport_construct_format.constprop.4+0xcc>
    4f1c:	ldr	r2, [pc, #36]	; 4f48 <xport_construct_format.constprop.4+0xe0>
    4f20:	mov	r3, r5
    4f24:	mov	r0, r4
    4f28:	add	r2, pc, r2
    4f2c:	mov	r1, #256	; 0x100
    4f30:	bl	4280 <snprintf@plt>
    4f34:	mov	r0, r7
    4f38:	sub	sp, fp, #24
    4f3c:	pop	{r4, r5, r6, r7, r8, fp, pc}
    4f40:	.word	0x000215a0
    4f44:	.word	0x00021580
    4f48:	.word	0x000211ac

00004f4c <xport_write_variables>:
    4f4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4f50:	sub	sp, sp, #236	; 0xec
    4f54:	add	r5, sp, #92	; 0x5c
    4f58:	add	r3, r5, #16
    4f5c:	str	r3, [sp, #28]
    4f60:	mov	r3, #1
    4f64:	str	r3, [sp, #8]
    4f68:	ldr	r3, [pc, #1556]	; 5584 <xport_write_variables+0x638>
    4f6c:	mov	sl, r0
    4f70:	add	r3, pc, r3
    4f74:	str	r3, [sp, #20]
    4f78:	ldr	r3, [pc, #1544]	; 5588 <xport_write_variables+0x63c>
    4f7c:	mov	fp, #0
    4f80:	add	r3, pc, r3
    4f84:	str	r3, [sp, #32]
    4f88:	ldr	r3, [pc, #1532]	; 558c <xport_write_variables+0x640>
    4f8c:	str	fp, [sp, #12]
    4f90:	add	r3, pc, r3
    4f94:	str	r3, [sp, #36]	; 0x24
    4f98:	str	fp, [sp, #16]
    4f9c:	ldr	r2, [sp, #8]
    4fa0:	ldr	r3, [sl, #28]
    4fa4:	sub	r1, r2, #1
    4fa8:	cmp	r3, r1
    4fac:	ble	5294 <xport_write_variables+0x348>
    4fb0:	mov	r0, sl
    4fb4:	bl	437c <readstat_get_variable@plt>
    4fb8:	ldr	r3, [r0]
    4fbc:	mov	r4, r0
    4fc0:	cmp	r3, #0
    4fc4:	ldr	r7, [r0, #1600]	; 0x640
    4fc8:	beq	4fe4 <xport_write_variables+0x98>
    4fcc:	sub	r3, r7, #1
    4fd0:	cmp	r3, #6
    4fd4:	movhi	r7, #8
    4fd8:	bhi	4fe4 <xport_write_variables+0x98>
    4fdc:	cmp	r7, #3
    4fe0:	movcc	r7, #3
    4fe4:	mov	r2, #140	; 0x8c
    4fe8:	mov	r1, #0
    4fec:	mov	r0, r5
    4ff0:	bl	42a4 <memset@plt>
    4ff4:	ldr	r3, [sp, #20]
    4ff8:	strh	r7, [sp, #96]	; 0x60
    4ffc:	add	r8, r4, #7
    5000:	ldm	r3, {r0, r1}
    5004:	add	r3, sp, #148	; 0x94
    5008:	stm	r3, {r0, r1}
    500c:	ldrh	r3, [sp, #8]
    5010:	strh	r3, [sp, #98]	; 0x62
    5014:	add	r3, sp, #164	; 0xa4
    5018:	stm	r3, {r0, r1}
    501c:	ldr	r3, [sp, #12]
    5020:	mov	r0, r4
    5024:	str	r3, [sp, #176]	; 0xb0
    5028:	bl	4544 <readstat_variable_get_type_class@plt>
    502c:	mov	r2, r8
    5030:	add	ip, r4, #15
    5034:	add	r3, r5, #8
    5038:	cmp	r0, #0
    503c:	moveq	r0, #2
    5040:	movne	r0, #1
    5044:	strh	r0, [sp, #92]	; 0x5c
    5048:	ldrb	r1, [r2, #1]!
    504c:	cmp	r1, #0
    5050:	beq	5080 <xport_write_variables+0x134>
    5054:	cmp	ip, r2
    5058:	strb	r1, [r3], #1
    505c:	bne	5048 <xport_write_variables+0xfc>
    5060:	add	r2, r4, #564	; 0x234
    5064:	add	r3, r4, #560	; 0x230
    5068:	add	r1, r4, #600	; 0x258
    506c:	str	r2, [sp, #24]
    5070:	add	r3, r3, #3
    5074:	add	r1, r1, #3
    5078:	add	r2, r5, #16
    507c:	b	50a4 <xport_write_variables+0x158>
    5080:	mov	r2, #32
    5084:	ldr	r1, [sp, #28]
    5088:	cmp	r3, r1
    508c:	bcs	5060 <xport_write_variables+0x114>
    5090:	strb	r2, [r3], #1
    5094:	b	5084 <xport_write_variables+0x138>
    5098:	cmp	r1, r3
    509c:	strb	r0, [r2], #1
    50a0:	beq	50b4 <xport_write_variables+0x168>
    50a4:	ldrb	r0, [r3, #1]!
    50a8:	cmp	r0, #0
    50ac:	bne	5098 <xport_write_variables+0x14c>
    50b0:	b	50f4 <xport_write_variables+0x1a8>
    50b4:	ldrb	r3, [r4, #308]	; 0x134
    50b8:	cmp	r3, #0
    50bc:	beq	51bc <xport_write_variables+0x270>
    50c0:	add	r3, sp, #232	; 0xe8
    50c4:	mov	r6, #0
    50c8:	add	r1, sp, #40	; 0x28
    50cc:	add	r9, sp, #56	; 0x38
    50d0:	str	r6, [r3, #-188]!	; 0xffffff44
    50d4:	mov	r2, r9
    50d8:	str	r1, [sp]
    50dc:	add	r0, r4, #308	; 0x134
    50e0:	ldr	r1, [sp, #32]
    50e4:	str	r6, [sp, #40]	; 0x28
    50e8:	bl	428c <__isoc99_sscanf@plt>
    50ec:	add	r3, r5, #56	; 0x38
    50f0:	b	5118 <xport_write_variables+0x1cc>
    50f4:	add	r1, r5, #56	; 0x38
    50f8:	mov	r3, #32
    50fc:	cmp	r2, r1
    5100:	bcs	50b4 <xport_write_variables+0x168>
    5104:	strb	r3, [r2], #1
    5108:	b	50fc <xport_write_variables+0x1b0>
    510c:	cmp	r6, #8
    5110:	strb	r2, [r3], #1
    5114:	beq	512c <xport_write_variables+0x1e0>
    5118:	ldrb	r2, [r9, r6]
    511c:	add	r6, r6, #1
    5120:	cmp	r2, #0
    5124:	bne	510c <xport_write_variables+0x1c0>
    5128:	b	5148 <xport_write_variables+0x1fc>
    512c:	ldrh	r1, [sp, #44]	; 0x2c
    5130:	ldrh	ip, [sp, #40]	; 0x28
    5134:	mov	r2, #0
    5138:	strh	r1, [sp, #156]	; 0x9c
    513c:	strh	ip, [sp, #158]	; 0x9e
    5140:	add	r3, r5, #72	; 0x48
    5144:	b	516c <xport_write_variables+0x220>
    5148:	add	r1, r5, #64	; 0x40
    514c:	mov	r2, #32
    5150:	cmp	r3, r1
    5154:	bcs	512c <xport_write_variables+0x1e0>
    5158:	strb	r2, [r3], #1
    515c:	b	5150 <xport_write_variables+0x204>
    5160:	cmp	r2, #8
    5164:	strb	r0, [r3], #1
    5168:	beq	5180 <xport_write_variables+0x234>
    516c:	ldrb	r0, [r9, r2]
    5170:	add	r2, r2, #1
    5174:	cmp	r0, #0
    5178:	bne	5160 <xport_write_variables+0x214>
    517c:	b	51a4 <xport_write_variables+0x258>
    5180:	mov	r0, r9
    5184:	strh	r1, [sp, #172]	; 0xac
    5188:	strh	ip, [sp, #174]	; 0xae
    518c:	bl	41fc <strlen@plt>
    5190:	cmp	r0, #8
    5194:	movhi	fp, #1
    5198:	movhi	r6, fp
    519c:	movls	r6, #0
    51a0:	b	51cc <xport_write_variables+0x280>
    51a4:	add	r0, r5, #80	; 0x50
    51a8:	mov	r2, #32
    51ac:	cmp	r3, r0
    51b0:	bcs	5180 <xport_write_variables+0x234>
    51b4:	strb	r2, [r3], #1
    51b8:	b	51ac <xport_write_variables+0x260>
    51bc:	ldr	r6, [r4, #2136]	; 0x858
    51c0:	cmp	r6, #0
    51c4:	strhne	r6, [sp, #156]	; 0x9c
    51c8:	movne	r6, r3
    51cc:	ldr	r3, [r4, #2132]	; 0x854
    51d0:	ldr	r2, [sl, #8]
    51d4:	sub	r3, r3, #3
    51d8:	cmp	r2, #8
    51dc:	clz	r3, r3
    51e0:	lsr	r3, r3, #5
    51e4:	strh	r3, [sp, #160]	; 0xa0
    51e8:	addeq	r4, r4, #39	; 0x27
    51ec:	addeq	r3, r5, #88	; 0x58
    51f0:	bne	523c <xport_write_variables+0x2f0>
    51f4:	ldrb	r2, [r8, #1]!
    51f8:	cmp	r2, #0
    51fc:	beq	5224 <xport_write_variables+0x2d8>
    5200:	cmp	r4, r8
    5204:	strb	r2, [r3], #1
    5208:	bne	51f4 <xport_write_variables+0x2a8>
    520c:	ldr	r0, [sp, #24]
    5210:	bl	41fc <strlen@plt>
    5214:	cmp	r0, #40	; 0x28
    5218:	movhi	r6, #1
    521c:	strh	r0, [sp, #212]	; 0xd4
    5220:	b	523c <xport_write_variables+0x2f0>
    5224:	add	r1, r5, #120	; 0x78
    5228:	mov	r2, #32
    522c:	cmp	r3, r1
    5230:	bcs	520c <xport_write_variables+0x2c0>
    5234:	strb	r2, [r3], #1
    5238:	b	522c <xport_write_variables+0x2e0>
    523c:	cmp	r6, #0
    5240:	mov	r0, r5
    5244:	ldrne	r3, [sp, #16]
    5248:	addne	r3, r3, #1
    524c:	strne	r3, [sp, #16]
    5250:	bl	4094 <xport_namestr_bswap@plt>
    5254:	ldr	r3, [sp, #36]	; 0x24
    5258:	mov	r2, #140	; 0x8c
    525c:	str	r3, [sp]
    5260:	mov	r1, r5
    5264:	mov	r3, #80	; 0x50
    5268:	mov	r0, sl
    526c:	bl	4520 <readstat_write_bytes_as_lines@plt>
    5270:	ldr	r3, [sp, #12]
    5274:	add	r3, r3, r7
    5278:	str	r3, [sp, #12]
    527c:	ldr	r3, [sp, #8]
    5280:	add	r3, r3, #1
    5284:	str	r3, [sp, #8]
    5288:	cmp	r0, #0
    528c:	beq	4f9c <xport_write_variables+0x50>
    5290:	b	5574 <xport_write_variables+0x628>
    5294:	ldr	r3, [pc, #756]	; 5590 <xport_write_variables+0x644>
    5298:	mov	r2, #80	; 0x50
    529c:	add	r3, pc, r3
    52a0:	mov	r1, #32
    52a4:	mov	r0, sl
    52a8:	ldr	r8, [sp, #16]
    52ac:	bl	44e4 <readstat_write_line_padding@plt>
    52b0:	subs	r9, r0, #0
    52b4:	bne	5578 <xport_write_variables+0x62c>
    52b8:	ldr	r3, [sl, #8]
    52bc:	cmp	r8, #0
    52c0:	sub	r3, r3, #8
    52c4:	clz	r3, r3
    52c8:	lsr	r3, r3, #5
    52cc:	moveq	r3, #0
    52d0:	cmp	r3, #0
    52d4:	beq	5578 <xport_write_variables+0x62c>
    52d8:	add	r5, sp, #56	; 0x38
    52dc:	mov	r1, r9
    52e0:	mov	r0, r5
    52e4:	mov	r2, #36	; 0x24
    52e8:	bl	42a4 <memset@plt>
    52ec:	ldr	r3, [pc, #672]	; 5594 <xport_write_variables+0x648>
    52f0:	cmp	fp, #0
    52f4:	add	r3, pc, r3
    52f8:	add	r3, r3, #12
    52fc:	strb	r9, [sp, #64]	; 0x40
    5300:	ldm	r3, {r0, r1}
    5304:	str	r8, [sp, #68]	; 0x44
    5308:	stm	r5, {r0, r1}
    530c:	ldrne	r3, [pc, #644]	; 5598 <xport_write_variables+0x64c>
    5310:	addne	r3, pc, r3
    5314:	ldmne	r3, {r0, r1}
    5318:	stmne	r5, {r0, r1}
    531c:	ldr	r2, [pc, #632]	; 559c <xport_write_variables+0x650>
    5320:	add	r4, sp, #92	; 0x5c
    5324:	mov	r3, r5
    5328:	add	r2, pc, r2
    532c:	mov	r1, #81	; 0x51
    5330:	str	r8, [sp]
    5334:	mov	r0, r4
    5338:	bl	4280 <snprintf@plt>
    533c:	mov	r1, r4
    5340:	mov	r0, sl
    5344:	bl	10944 <xport_write_record>
    5348:	subs	r9, r0, #0
    534c:	bne	5578 <xport_write_variables+0x62c>
    5350:	ldr	r3, [pc, #584]	; 55a0 <xport_write_variables+0x654>
    5354:	mov	r5, #1
    5358:	add	r3, pc, r3
    535c:	add	r6, sp, #44	; 0x2c
    5360:	str	r3, [sp, #8]
    5364:	add	r3, sp, #40	; 0x28
    5368:	str	r3, [sp, #12]
    536c:	ldr	r3, [sl, #28]
    5370:	sub	r1, r5, #1
    5374:	cmp	r3, r1
    5378:	mov	r0, sl
    537c:	ble	5558 <xport_write_variables+0x60c>
    5380:	bl	437c <readstat_get_variable@plt>
    5384:	add	r7, r0, #564	; 0x234
    5388:	mov	r3, r0
    538c:	mov	r0, r7
    5390:	add	r8, r3, #8
    5394:	str	r3, [sp, #16]
    5398:	bl	41fc <strlen@plt>
    539c:	mov	r9, r0
    53a0:	mov	r0, r8
    53a4:	bl	41fc <strlen@plt>
    53a8:	mov	r2, #24
    53ac:	mov	r1, #0
    53b0:	mov	fp, r0
    53b4:	mov	r0, r4
    53b8:	bl	42a4 <memset@plt>
    53bc:	ldr	r3, [sp, #16]
    53c0:	ldrb	r2, [r3, #308]	; 0x134
    53c4:	cmp	r2, #0
    53c8:	beq	54cc <xport_write_variables+0x580>
    53cc:	ldr	r2, [sp, #12]
    53d0:	mov	r1, #2
    53d4:	str	r2, [sp]
    53d8:	add	r0, r3, #308	; 0x134
    53dc:	mov	ip, #8
    53e0:	str	r1, [sp, #40]	; 0x28
    53e4:	mov	r3, r6
    53e8:	mov	r2, r4
    53ec:	ldr	r1, [sp, #8]
    53f0:	str	ip, [sp, #44]	; 0x2c
    53f4:	bl	428c <__isoc99_sscanf@plt>
    53f8:	cmp	r0, #0
    53fc:	movle	r9, #11
    5400:	ble	5578 <xport_write_variables+0x62c>
    5404:	mov	r0, r4
    5408:	bl	41fc <strlen@plt>
    540c:	cmp	r0, #8
    5410:	ble	54cc <xport_write_variables+0x580>
    5414:	uxth	r0, r0
    5418:	strh	r0, [sp, #48]	; 0x30
    541c:	strh	r0, [sp, #50]	; 0x32
    5420:	strh	r5, [sp, #44]	; 0x2c
    5424:	strh	fp, [sp, #46]	; 0x2e
    5428:	strh	r9, [sp, #52]	; 0x34
    542c:	bl	3eb4 <machine_is_little_endian@plt>
    5430:	cmp	r0, #0
    5434:	beq	5474 <xport_write_variables+0x528>
    5438:	ldrh	r0, [sp, #44]	; 0x2c
    543c:	bl	3ea8 <byteswap2@plt>
    5440:	strh	r0, [sp, #44]	; 0x2c
    5444:	ldrh	r0, [sp, #46]	; 0x2e
    5448:	bl	3ea8 <byteswap2@plt>
    544c:	strh	r0, [sp, #46]	; 0x2e
    5450:	ldrh	r0, [sp, #48]	; 0x30
    5454:	bl	3ea8 <byteswap2@plt>
    5458:	strh	r0, [sp, #48]	; 0x30
    545c:	ldrh	r0, [sp, #50]	; 0x32
    5460:	bl	3ea8 <byteswap2@plt>
    5464:	strh	r0, [sp, #50]	; 0x32
    5468:	ldrh	r0, [sp, #52]	; 0x34
    546c:	bl	3ea8 <byteswap2@plt>
    5470:	strh	r0, [sp, #52]	; 0x34
    5474:	mov	r2, #10
    5478:	mov	r1, r6
    547c:	mov	r0, sl
    5480:	bl	4454 <readstat_write_bytes@plt>
    5484:	cmp	r0, #0
    5488:	bne	5574 <xport_write_variables+0x628>
    548c:	mov	r1, r8
    5490:	mov	r0, sl
    5494:	bl	4154 <readstat_write_string@plt>
    5498:	cmp	r0, #0
    549c:	bne	5574 <xport_write_variables+0x628>
    54a0:	mov	r1, r4
    54a4:	mov	r0, sl
    54a8:	bl	4154 <readstat_write_string@plt>
    54ac:	cmp	r0, #0
    54b0:	bne	5574 <xport_write_variables+0x628>
    54b4:	mov	r1, r4
    54b8:	mov	r0, sl
    54bc:	bl	4154 <readstat_write_string@plt>
    54c0:	cmp	r0, #0
    54c4:	beq	553c <xport_write_variables+0x5f0>
    54c8:	b	5574 <xport_write_variables+0x628>
    54cc:	cmp	r9, #40	; 0x28
    54d0:	bls	5550 <xport_write_variables+0x604>
    54d4:	strh	r5, [sp, #44]	; 0x2c
    54d8:	strh	fp, [sp, #46]	; 0x2e
    54dc:	strh	r9, [sp, #48]	; 0x30
    54e0:	bl	3eb4 <machine_is_little_endian@plt>
    54e4:	cmp	r0, #0
    54e8:	beq	5510 <xport_write_variables+0x5c4>
    54ec:	ldrh	r0, [sp, #44]	; 0x2c
    54f0:	bl	3ea8 <byteswap2@plt>
    54f4:	strh	r0, [sp, #44]	; 0x2c
    54f8:	ldrh	r0, [sp, #46]	; 0x2e
    54fc:	bl	3ea8 <byteswap2@plt>
    5500:	strh	r0, [sp, #46]	; 0x2e
    5504:	ldrh	r0, [sp, #48]	; 0x30
    5508:	bl	3ea8 <byteswap2@plt>
    550c:	strh	r0, [sp, #48]	; 0x30
    5510:	mov	r2, #6
    5514:	mov	r1, r6
    5518:	mov	r0, sl
    551c:	bl	4454 <readstat_write_bytes@plt>
    5520:	cmp	r0, #0
    5524:	bne	5574 <xport_write_variables+0x628>
    5528:	mov	r1, r8
    552c:	mov	r0, sl
    5530:	bl	4154 <readstat_write_string@plt>
    5534:	cmp	r0, #0
    5538:	bne	5574 <xport_write_variables+0x628>
    553c:	mov	r1, r7
    5540:	mov	r0, sl
    5544:	bl	4154 <readstat_write_string@plt>
    5548:	cmp	r0, #0
    554c:	bne	5574 <xport_write_variables+0x628>
    5550:	add	r5, r5, #1
    5554:	b	536c <xport_write_variables+0x420>
    5558:	ldr	r3, [pc, #68]	; 55a4 <xport_write_variables+0x658>
    555c:	mov	r2, #80	; 0x50
    5560:	add	r3, pc, r3
    5564:	mov	r1, #32
    5568:	bl	44e4 <readstat_write_line_padding@plt>
    556c:	mov	r9, r0
    5570:	b	5578 <xport_write_variables+0x62c>
    5574:	mov	r9, r0
    5578:	mov	r0, r9
    557c:	add	sp, sp, #236	; 0xec
    5580:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5584:	.word	0x0002159c
    5588:	.word	0x00021504
    558c:	.word	0x000219f0
    5590:	.word	0x000216e4
    5594:	.word	0x00021218
    5598:	.word	0x000211ec
    559c:	.word	0x0002122c
    55a0:	.word	0x0002112c
    55a4:	.word	0x00021420

000055a8 <read_double>:
    55a8:	push	{r4, r5, lr}
    55ac:	sub	sp, sp, #12
    55b0:	mov	r5, r1
    55b4:	mov	r2, #1
    55b8:	add	r1, sp, #7
    55bc:	mov	r4, r0
    55c0:	bl	11c20 <read_bytes>
    55c4:	cmp	r0, #1
    55c8:	movne	r0, #5
    55cc:	bne	55e0 <read_double+0x38>
    55d0:	mov	r1, r5
    55d4:	mov	r0, r4
    55d8:	ldrb	r2, [sp, #7]
    55dc:	bl	11d34 <read_double_with_peek>
    55e0:	add	sp, sp, #12
    55e4:	pop	{r4, r5, pc}

000055e8 <read_integer_in_range.constprop.1>:
    55e8:	push	{r4, r6, r7, lr}
    55ec:	vpush	{d8}
    55f0:	ldr	r7, [pc, #112]	; 5668 <read_integer_in_range.constprop.1+0x80>
    55f4:	mov	r6, #0
    55f8:	vmov	s16, r1
    55fc:	sub	sp, sp, #8
    5600:	add	r3, sp, #8
    5604:	mov	r4, r2
    5608:	strd	r6, [r3, #-8]!
    560c:	mov	r1, r3
    5610:	bl	55a8 <read_double>
    5614:	cmp	r0, #0
    5618:	bne	565c <read_integer_in_range.constprop.1+0x74>
    561c:	vldr	d7, [sp]
    5620:	vcmp.f64	d7, d7
    5624:	vmrs	APSR_nzcv, fpscr
    5628:	bvs	5658 <read_integer_in_range.constprop.1+0x70>
    562c:	vcmpe.f64	d7, #0.0
    5630:	vmrs	APSR_nzcv, fpscr
    5634:	bmi	5658 <read_integer_in_range.constprop.1+0x70>
    5638:	vcvt.f64.s32	d8, s16
    563c:	vcmpe.f64	d7, d8
    5640:	vmrs	APSR_nzcv, fpscr
    5644:	bgt	5658 <read_integer_in_range.constprop.1+0x70>
    5648:	cmp	r4, #0
    564c:	vcvtne.s32.f64	s14, d7
    5650:	vstrne	s14, [r4]
    5654:	b	565c <read_integer_in_range.constprop.1+0x74>
    5658:	mov	r0, #5
    565c:	add	sp, sp, #8
    5660:	vpop	{d8}
    5664:	pop	{r4, r6, r7, pc}
    5668:	.word	0x7ff80000

0000566c <por_emit_format>:
    566c:	vldr	s15, [r2]
    5670:	push	{r4, r5, r6, lr}
    5674:	mov	r4, r2
    5678:	mov	r5, r0
    567c:	vcvt.f64.s32	d0, s15
    5680:	mov	r6, r1
    5684:	bl	13f14 <por_write_double>
    5688:	cmp	r0, #0
    568c:	popne	{r4, r5, r6, pc}
    5690:	vldr	s15, [r4, #4]
    5694:	mov	r1, r6
    5698:	mov	r0, r5
    569c:	vcvt.f64.s32	d0, s15
    56a0:	bl	13f14 <por_write_double>
    56a4:	cmp	r0, #0
    56a8:	popne	{r4, r5, r6, pc}
    56ac:	vldr	s0, [r4, #8]
    56b0:	mov	r1, r6
    56b4:	mov	r0, r5
    56b8:	pop	{r4, r5, r6, lr}
    56bc:	vcvt.f64.s32	d0, s0
    56c0:	b	13f14 <por_write_double>

000056c4 <sav_read_pascal_string.constprop.5>:
    56c4:	push	{r4, r5, r6, r7, r8, lr}
    56c8:	mov	r5, r1
    56cc:	ldr	r1, [r1]
    56d0:	sub	sp, sp, #8
    56d4:	add	r4, r1, #4
    56d8:	add	r7, r1, r2
    56dc:	cmp	r7, r4
    56e0:	movcc	r4, r1
    56e4:	movcc	r0, #5
    56e8:	bcc	5738 <sav_read_pascal_string.constprop.5+0x74>
    56ec:	ldrb	r3, [r3, #436]	; 0x1b4
    56f0:	mov	r8, r0
    56f4:	ldr	r0, [r1]
    56f8:	tst	r3, #1
    56fc:	beq	5704 <sav_read_pascal_string.constprop.5+0x40>
    5700:	bl	3d94 <byteswap4@plt>
    5704:	add	r6, r4, r0
    5708:	cmp	r7, r6
    570c:	movcc	r0, #5
    5710:	bcc	5738 <sav_read_pascal_string.constprop.5+0x74>
    5714:	mov	r2, #0
    5718:	mov	r3, r0
    571c:	str	r2, [sp]
    5720:	mov	r0, r8
    5724:	mov	r2, r4
    5728:	ldr	r1, [pc, #20]	; 5744 <sav_read_pascal_string.constprop.5+0x80>
    572c:	bl	4238 <readstat_convert@plt>
    5730:	cmp	r0, #0
    5734:	moveq	r4, r6
    5738:	str	r4, [r5]
    573c:	add	sp, sp, #8
    5740:	pop	{r4, r5, r6, r7, r8, pc}
    5744:	.word	0x00000101

00005748 <sav_read_compressed_data.constprop.6>:
    5748:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    574c:	sub	sp, sp, #65536	; 0x10000
    5750:	sub	sp, sp, #68	; 0x44
    5754:	mov	r5, r0
    5758:	add	r4, sp, #64	; 0x40
    575c:	ldr	r7, [r0, #344]	; 0x158
    5760:	mov	r2, #56	; 0x38
    5764:	mov	r1, #0
    5768:	sub	r0, r4, #56	; 0x38
    576c:	ldr	fp, [r5, #36]	; 0x24
    5770:	bl	42a4 <memset@plt>
    5774:	add	r3, r5, #400	; 0x190
    5778:	ldrb	r1, [r5, #436]	; 0x1b4
    577c:	add	r9, r5, #416	; 0x1a0
    5780:	ldrd	r8, [r9]
    5784:	ldrd	r2, [r3, #-8]
    5788:	lsl	r7, r7, #3
    578c:	cmp	r7, #0
    5790:	and	r1, r1, #1
    5794:	strd	r8, [r4, #-32]	; 0xffffffe0
    5798:	strd	r2, [r4, #-40]	; 0xffffffd8
    579c:	str	r1, [r4, #-12]
    57a0:	moveq	r9, r7
    57a4:	beq	57b8 <sav_read_compressed_data.constprop.6+0x70>
    57a8:	mov	r0, r7
    57ac:	bl	422c <readstat_malloc@plt>
    57b0:	subs	r9, r0, #0
    57b4:	beq	58d8 <sav_read_compressed_data.constprop.6+0x190>
    57b8:	mov	r6, #0
    57bc:	sub	r3, r4, #56	; 0x38
    57c0:	str	r3, [sp, #4]
    57c4:	ldr	r3, [r5, #36]	; 0x24
    57c8:	ldr	r2, [r5, #40]	; 0x28
    57cc:	ldr	r1, [r5, #28]
    57d0:	ldr	r8, [r3, #16]
    57d4:	ldr	r0, [r5, #32]
    57d8:	ldr	r3, [r3, #20]
    57dc:	blx	r8
    57e0:	subs	r3, r0, #0
    57e4:	str	r3, [sp]
    57e8:	bne	58c0 <sav_read_compressed_data.constprop.6+0x178>
    57ec:	ldr	r2, [fp, #20]
    57f0:	ldr	r3, [fp, #12]
    57f4:	mov	r1, #65536	; 0x10000
    57f8:	mov	r0, r4
    57fc:	blx	r3
    5800:	add	r2, r0, #1
    5804:	cmp	r2, #1
    5808:	mov	sl, r0
    580c:	bls	58c0 <sav_read_compressed_data.constprop.6+0x178>
    5810:	tst	r0, #7
    5814:	bne	58c0 <sav_read_compressed_data.constprop.6+0x178>
    5818:	mov	r8, #0
    581c:	mov	r3, #1
    5820:	str	r3, [r4, #-8]
    5824:	ldr	r3, [r4, #-8]
    5828:	add	ip, r4, r8
    582c:	cmp	r3, #0
    5830:	sub	r8, sl, r8
    5834:	add	r1, r9, r6
    5838:	sub	r2, r7, r6
    583c:	ldr	r0, [sp, #4]
    5840:	beq	57c4 <sav_read_compressed_data.constprop.6+0x7c>
    5844:	str	r8, [r4, #-52]	; 0xffffffcc
    5848:	str	ip, [r4, #-56]	; 0xffffffc8
    584c:	str	r1, [r4, #-48]	; 0xffffffd0
    5850:	str	r2, [r4, #-44]	; 0xffffffd4
    5854:	bl	4214 <sav_decompress_row@plt>
    5858:	ldr	r3, [r4, #-8]
    585c:	ldr	r6, [r4, #-44]	; 0xffffffd4
    5860:	ldr	r8, [r4, #-52]	; 0xffffffcc
    5864:	cmp	r3, #2
    5868:	sub	r6, r7, r6
    586c:	sub	r8, sl, r8
    5870:	bne	5890 <sav_read_compressed_data.constprop.6+0x148>
    5874:	mov	r2, r5
    5878:	mov	r1, r7
    587c:	mov	r0, r9
    5880:	bl	16c10 <sav_process_row>
    5884:	mov	r6, #0
    5888:	cmp	r0, #0
    588c:	bne	58b8 <sav_read_compressed_data.constprop.6+0x170>
    5890:	ldr	r3, [r4, #-8]
    5894:	cmp	r3, #3
    5898:	beq	58c0 <sav_read_compressed_data.constprop.6+0x178>
    589c:	ldr	r3, [r5, #356]	; 0x164
    58a0:	cmp	r3, #0
    58a4:	ble	5824 <sav_read_compressed_data.constprop.6+0xdc>
    58a8:	ldr	r2, [r5, #364]	; 0x16c
    58ac:	cmp	r3, r2
    58b0:	bne	5824 <sav_read_compressed_data.constprop.6+0xdc>
    58b4:	b	58c0 <sav_read_compressed_data.constprop.6+0x178>
    58b8:	mov	sl, r0
    58bc:	b	58c4 <sav_read_compressed_data.constprop.6+0x17c>
    58c0:	ldr	sl, [sp]
    58c4:	cmp	r9, #0
    58c8:	beq	58dc <sav_read_compressed_data.constprop.6+0x194>
    58cc:	mov	r0, r9
    58d0:	bl	3ec0 <free@plt>
    58d4:	b	58dc <sav_read_compressed_data.constprop.6+0x194>
    58d8:	mov	sl, #3
    58dc:	mov	r0, sl
    58e0:	add	sp, sp, #65536	; 0x10000
    58e4:	add	sp, sp, #68	; 0x44
    58e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    58ec:	andeq	r0, r0, r0

000058f0 <dta_interpret_int32_bytes>:
    58f0:	push	{r4, r5, r6, lr}
    58f4:	mov	r5, r1
    58f8:	mov	r6, r2
    58fc:	mov	r1, #0
    5900:	mov	r2, #16
    5904:	mov	r4, r0
    5908:	bl	42a4 <memset@plt>
    590c:	ldrb	r3, [r5, #192]	; 0xc0
    5910:	ldr	r0, [r6]
    5914:	tst	r3, #1
    5918:	beq	5920 <dta_interpret_int32_bytes+0x30>
    591c:	bl	3d94 <byteswap4@plt>
    5920:	ldrb	r3, [r5, #192]	; 0xc0
    5924:	tst	r3, #2
    5928:	beq	5930 <dta_interpret_int32_bytes+0x40>
    592c:	bl	3efc <ones_to_twos_complement4@plt>
    5930:	ldr	r3, [r5, #196]	; 0xc4
    5934:	cmp	r3, r0
    5938:	movge	r3, #0
    593c:	movge	ip, r3
    5940:	movge	r1, r3
    5944:	bge	5974 <dta_interpret_int32_bytes+0x84>
    5948:	ldrb	r2, [r5, #192]	; 0xc0
    594c:	cmn	r0, #-2147483621	; 0x8000001b
    5950:	movle	r3, #0
    5954:	movgt	r3, #1
    5958:	ands	r3, r3, r2, lsr #3
    595c:	addne	r1, r0, #123	; 0x7b
    5960:	movne	r3, #1
    5964:	uxtbne	r1, r1
    5968:	movne	ip, #0
    596c:	moveq	r1, r3
    5970:	moveq	ip, #1
    5974:	ldrb	r2, [r4, #13]
    5978:	mov	lr, #3
    597c:	str	r0, [r4]
    5980:	and	r2, r2, #252	; 0xfc
    5984:	orr	r2, r2, ip
    5988:	orr	r3, r2, r3, lsl #1
    598c:	strb	r1, [r4, #12]
    5990:	strb	r3, [r4, #13]
    5994:	str	lr, [r4, #8]
    5998:	mov	r0, r4
    599c:	pop	{r4, r5, r6, pc}

000059a0 <dta_handle_row>:
    59a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    59a4:	vpush	{d8-d9}
    59a8:	vldr	d9, [pc, #872]	; 5d18 <dta_handle_row+0x378>
    59ac:	vldr	s16, [pc, #876]	; 5d20 <dta_handle_row+0x380>
    59b0:	mov	sl, #0
    59b4:	sub	sp, sp, #2272	; 0x8e0
    59b8:	sub	sp, sp, #4
    59bc:	add	r3, sp, #112	; 0x70
    59c0:	str	r3, [sp, #20]
    59c4:	add	r3, sp, #144	; 0x90
    59c8:	str	r3, [sp, #72]	; 0x48
    59cc:	ldr	r3, [sp, #20]
    59d0:	mov	fp, r0
    59d4:	sub	r3, r3, #4
    59d8:	str	r3, [sp, #80]	; 0x50
    59dc:	ldr	r3, [sp, #72]	; 0x48
    59e0:	mov	r4, r1
    59e4:	mov	r9, sl
    59e8:	sub	r3, r3, #8
    59ec:	str	r3, [sp, #84]	; 0x54
    59f0:	ldr	r3, [r4, #148]	; 0x94
    59f4:	cmp	r9, r3
    59f8:	bge	6058 <dta_handle_row+0x6b8>
    59fc:	add	r5, sp, #128	; 0x80
    5a00:	mov	r2, #16
    5a04:	mov	r1, #0
    5a08:	mov	r0, r5
    5a0c:	bl	42a4 <memset@plt>
    5a10:	ldr	r1, [r4, #28]
    5a14:	lsl	r2, r9, #1
    5a18:	add	r3, r5, #8
    5a1c:	ldrh	r0, [r1, r2]
    5a20:	ldr	r2, [sp, #80]	; 0x50
    5a24:	mov	r1, r4
    5a28:	bl	41e4 <dta_type_info@plt>
    5a2c:	cmp	r0, #0
    5a30:	bne	605c <dta_handle_row+0x6bc>
    5a34:	ldr	r3, [r4, #228]	; 0xe4
    5a38:	lsl	r2, r9, #2
    5a3c:	str	r2, [sp, #76]	; 0x4c
    5a40:	ldr	r3, [r3, r9, lsl #2]
    5a44:	ldr	r2, [sp, #108]	; 0x6c
    5a48:	ldr	r1, [r3, #2144]	; 0x860
    5a4c:	cmp	r1, #0
    5a50:	addne	sl, sl, r2
    5a54:	bne	6050 <dta_handle_row+0x6b0>
    5a58:	ldr	r3, [r4, #160]	; 0xa0
    5a5c:	add	r0, sl, r2
    5a60:	cmp	r0, r3
    5a64:	bhi	6040 <dta_handle_row+0x6a0>
    5a68:	ldr	r3, [sp, #136]	; 0x88
    5a6c:	cmp	r3, #0
    5a70:	addeq	r1, fp, sl
    5a74:	bne	5abc <dta_handle_row+0x11c>
    5a78:	cmp	r3, r2
    5a7c:	beq	5a90 <dta_handle_row+0xf0>
    5a80:	ldrb	r0, [r1, r3]
    5a84:	cmp	r0, #0
    5a88:	addne	r3, r3, #1
    5a8c:	bne	5a78 <dta_handle_row+0xd8>
    5a90:	ldr	r2, [r4, #236]	; 0xec
    5a94:	add	r5, sp, #224	; 0xe0
    5a98:	str	r2, [sp]
    5a9c:	mov	r0, r5
    5aa0:	add	r2, fp, sl
    5aa4:	mov	r1, #2048	; 0x800
    5aa8:	bl	4238 <readstat_convert@plt>
    5aac:	cmp	r0, #0
    5ab0:	bne	605c <dta_handle_row+0x6bc>
    5ab4:	str	r5, [sp, #128]	; 0x80
    5ab8:	b	5ff8 <dta_handle_row+0x658>
    5abc:	cmp	r3, #6
    5ac0:	bne	5c64 <dta_handle_row+0x2c4>
    5ac4:	ldr	r3, [r4, #112]	; 0x70
    5ac8:	add	r5, fp, sl
    5acc:	cmp	r3, #2
    5ad0:	bne	5bbc <dta_handle_row+0x21c>
    5ad4:	ldr	r3, [r4, #232]	; 0xe8
    5ad8:	ldrb	ip, [fp, sl]
    5adc:	cmp	r3, #2
    5ae0:	ldrb	lr, [r5, #1]
    5ae4:	ldrb	r6, [r5, #7]
    5ae8:	bne	5b58 <dta_handle_row+0x1b8>
    5aec:	ldrb	r2, [r5, #2]
    5af0:	ldrb	r3, [r5, #3]
    5af4:	str	r1, [sp, #48]	; 0x30
    5af8:	str	r1, [sp, #40]	; 0x28
    5afc:	str	r3, [sp, #52]	; 0x34
    5b00:	lsl	r3, r2, #8
    5b04:	ldrb	r2, [r5, #4]
    5b08:	str	r3, [sp, #44]	; 0x2c
    5b0c:	mov	r1, #0
    5b10:	str	r1, [sp, #28]
    5b14:	lsl	r3, r2, #24
    5b18:	str	r3, [sp, #24]
    5b1c:	ldrd	r0, [sp, #48]	; 0x30
    5b20:	ldrd	r2, [sp, #40]	; 0x28
    5b24:	ldrb	r8, [r5, #5]
    5b28:	ldrb	r5, [r5, #6]
    5b2c:	adds	r2, r2, r0
    5b30:	ldrd	r0, [sp, #24]
    5b34:	adds	r2, r2, r6
    5b38:	lsl	r8, r8, #16
    5b3c:	add	ip, lr, ip, lsl #8
    5b40:	adds	r0, r0, r2
    5b44:	adds	r2, r0, r8
    5b48:	lsl	r5, r5, #8
    5b4c:	uxth	r8, ip
    5b50:	adds	r2, r2, r5
    5b54:	b	5c08 <dta_handle_row+0x268>
    5b58:	ldrb	r3, [r5, #6]
    5b5c:	ldrb	r2, [r5, #5]
    5b60:	str	r1, [sp, #56]	; 0x38
    5b64:	str	r3, [sp, #60]	; 0x3c
    5b68:	mov	r3, #0
    5b6c:	str	r3, [sp, #36]	; 0x24
    5b70:	lsl	r3, r6, #8
    5b74:	str	r3, [sp, #68]	; 0x44
    5b78:	lsl	r3, r2, #24
    5b7c:	str	r3, [sp, #32]
    5b80:	str	r1, [sp, #64]	; 0x40
    5b84:	ldrd	r2, [sp, #32]
    5b88:	ldrd	r0, [sp, #56]	; 0x38
    5b8c:	ldrb	r7, [r5, #3]
    5b90:	ldrb	r6, [r5, #2]
    5b94:	ldrb	r5, [r5, #4]
    5b98:	adds	r2, r2, r0
    5b9c:	ldrd	r0, [sp, #64]	; 0x40
    5ba0:	add	ip, ip, lr, lsl #8
    5ba4:	add	r7, r6, r7, lsl #8
    5ba8:	adds	r0, r0, r2
    5bac:	add	r5, r7, r5, lsl #16
    5bb0:	uxth	r8, ip
    5bb4:	adds	r2, r0, r5
    5bb8:	b	5c08 <dta_handle_row+0x268>
    5bbc:	cmp	r3, #4
    5bc0:	movne	r8, r1
    5bc4:	movne	r2, #0
    5bc8:	bne	5c08 <dta_handle_row+0x268>
    5bcc:	ldrb	r3, [r4, #192]	; 0xc0
    5bd0:	ldr	r0, [r5]
    5bd4:	ldr	r5, [r5, #4]
    5bd8:	tst	r3, #1
    5bdc:	uxtheq	r8, r0
    5be0:	beq	5bec <dta_handle_row+0x24c>
    5be4:	bl	3d94 <byteswap4@plt>
    5be8:	uxth	r8, r0
    5bec:	ldrb	r3, [r4, #192]	; 0xc0
    5bf0:	tst	r3, #1
    5bf4:	beq	5c04 <dta_handle_row+0x264>
    5bf8:	mov	r0, r5
    5bfc:	bl	3d94 <byteswap4@plt>
    5c00:	mov	r5, r0
    5c04:	mov	r2, r5
    5c08:	ldr	r7, [r4, #216]	; 0xd8
    5c0c:	ldr	r5, [r4, #220]	; 0xdc
    5c10:	mov	lr, #0
    5c14:	add	r1, r5, lr
    5c18:	cmp	r5, lr
    5c1c:	lsr	r1, r1, #1
    5c20:	bls	5c58 <dta_handle_row+0x2b8>
    5c24:	ldr	r0, [r7, r1, lsl #2]
    5c28:	ldrh	r6, [r0]
    5c2c:	cmp	r6, r8
    5c30:	sub	ip, r8, r6
    5c34:	ldreq	ip, [r0, #8]
    5c38:	subeq	ip, r2, ip
    5c3c:	cmp	ip, #0
    5c40:	movlt	r5, r1
    5c44:	blt	5c14 <dta_handle_row+0x274>
    5c48:	addne	lr, r1, #1
    5c4c:	bne	5c14 <dta_handle_row+0x274>
    5c50:	add	r0, r0, #24
    5c54:	str	r0, [sp, #128]	; 0x80
    5c58:	mov	r3, #0
    5c5c:	str	r3, [sp, #136]	; 0x88
    5c60:	b	5ff8 <dta_handle_row+0x658>
    5c64:	cmp	r3, #1
    5c68:	bne	5d2c <dta_handle_row+0x38c>
    5c6c:	mov	r2, #16
    5c70:	add	r0, sp, #192	; 0xc0
    5c74:	bl	42a4 <memset@plt>
    5c78:	ldrb	r3, [r4, #192]	; 0xc0
    5c7c:	ldrb	r0, [fp, sl]
    5c80:	tst	r3, #2
    5c84:	beq	5c8c <dta_handle_row+0x2ec>
    5c88:	bl	4370 <ones_to_twos_complement1@plt>
    5c8c:	ldrsb	r3, [r4, #193]	; 0xc1
    5c90:	sxtb	r0, r0
    5c94:	cmp	r3, r0
    5c98:	movge	r3, #0
    5c9c:	movge	ip, r3
    5ca0:	movge	r1, r3
    5ca4:	bge	5cd4 <dta_handle_row+0x334>
    5ca8:	ldrb	r2, [r4, #192]	; 0xc0
    5cac:	cmp	r0, #101	; 0x65
    5cb0:	movle	r3, #0
    5cb4:	movgt	r3, #1
    5cb8:	ands	r3, r3, r2, lsr #3
    5cbc:	subne	r1, r0, #5
    5cc0:	movne	r3, #1
    5cc4:	uxtbne	r1, r1
    5cc8:	movne	ip, #0
    5ccc:	moveq	r1, r3
    5cd0:	moveq	ip, #1
    5cd4:	ldrb	r2, [sp, #205]	; 0xcd
    5cd8:	strb	r0, [sp, #192]	; 0xc0
    5cdc:	strb	r1, [sp, #204]	; 0xcc
    5ce0:	and	r2, r2, #252	; 0xfc
    5ce4:	orr	r2, r2, ip
    5ce8:	orr	r3, r2, r3, lsl #1
    5cec:	strb	r3, [sp, #205]	; 0xcd
    5cf0:	add	r3, sp, #192	; 0xc0
    5cf4:	mov	r2, #1
    5cf8:	str	r2, [sp, #200]	; 0xc8
    5cfc:	ldm	r3, {r0, r1, r2, r3}
    5d00:	ldr	ip, [sp, #72]	; 0x48
    5d04:	stm	ip, {r0, r1, r2, r3}
    5d08:	ldm	ip, {r0, r1, r2, r3}
    5d0c:	add	ip, sp, #128	; 0x80
    5d10:	stm	ip, {r0, r1, r2, r3}
    5d14:	b	5ff8 <dta_handle_row+0x658>
    5d18:	.word	0x00000000
    5d1c:	.word	0x7ff80000
    5d20:	.word	0x7fc00000
    5d24:	.word	0x00007fe5
    5d28:	.word	0x7fe00000
    5d2c:	cmp	r3, #2
    5d30:	bne	5df0 <dta_handle_row+0x450>
    5d34:	mov	r2, #16
    5d38:	add	r0, sp, #192	; 0xc0
    5d3c:	bl	42a4 <memset@plt>
    5d40:	ldrb	r3, [r4, #192]	; 0xc0
    5d44:	ldrh	r0, [fp, sl]
    5d48:	tst	r3, #1
    5d4c:	beq	5d54 <dta_handle_row+0x3b4>
    5d50:	bl	3ea8 <byteswap2@plt>
    5d54:	ldrb	r3, [r4, #192]	; 0xc0
    5d58:	sxth	r0, r0
    5d5c:	tst	r3, #2
    5d60:	beq	5d68 <dta_handle_row+0x3c8>
    5d64:	bl	3f08 <ones_to_twos_complement2@plt>
    5d68:	ldrsh	r3, [r4, #194]	; 0xc2
    5d6c:	cmp	r3, r0
    5d70:	movge	r3, #0
    5d74:	movge	ip, r3
    5d78:	movge	r1, r3
    5d7c:	bge	5db0 <dta_handle_row+0x410>
    5d80:	ldr	r3, [pc, #-100]	; 5d24 <dta_handle_row+0x384>
    5d84:	ldrb	r2, [r4, #192]	; 0xc0
    5d88:	cmp	r0, r3
    5d8c:	movle	r3, #0
    5d90:	movgt	r3, #1
    5d94:	ands	r3, r3, r2, lsr #3
    5d98:	addne	r1, r0, #123	; 0x7b
    5d9c:	movne	r3, #1
    5da0:	uxtbne	r1, r1
    5da4:	movne	ip, #0
    5da8:	moveq	r1, r3
    5dac:	moveq	ip, #1
    5db0:	ldrb	r2, [sp, #205]	; 0xcd
    5db4:	strb	r1, [sp, #204]	; 0xcc
    5db8:	strh	r0, [sp, #192]	; 0xc0
    5dbc:	and	r2, r2, #252	; 0xfc
    5dc0:	orr	r2, r2, ip
    5dc4:	orr	r3, r2, r3, lsl #1
    5dc8:	strb	r3, [sp, #205]	; 0xcd
    5dcc:	add	r3, sp, #192	; 0xc0
    5dd0:	mov	r2, #2
    5dd4:	str	r2, [sp, #200]	; 0xc8
    5dd8:	ldm	r3, {r0, r1, r2, r3}
    5ddc:	add	ip, sp, #160	; 0xa0
    5de0:	stm	ip, {r0, r1, r2, r3}
    5de4:	add	ip, sp, #128	; 0x80
    5de8:	stm	ip, {r0, r1, r2, r3}
    5dec:	b	5ff8 <dta_handle_row+0x658>
    5df0:	cmp	r3, #3
    5df4:	bne	5e18 <dta_handle_row+0x478>
    5df8:	add	r6, sp, #88	; 0x58
    5dfc:	mov	r0, r6
    5e00:	add	r2, fp, sl
    5e04:	mov	r1, r4
    5e08:	bl	58f0 <dta_interpret_int32_bytes>
    5e0c:	ldm	r6, {r0, r1, r2, r3}
    5e10:	stm	r5, {r0, r1, r2, r3}
    5e14:	b	5ff8 <dta_handle_row+0x658>
    5e18:	cmp	r3, #4
    5e1c:	bne	5ee8 <dta_handle_row+0x548>
    5e20:	mov	r2, #16
    5e24:	mov	r1, #0
    5e28:	add	r0, sp, #192	; 0xc0
    5e2c:	bl	42a4 <memset@plt>
    5e30:	ldrb	r3, [r4, #192]	; 0xc0
    5e34:	ldr	r0, [fp, sl]
    5e38:	vstr	s16, [sp, #120]	; 0x78
    5e3c:	tst	r3, #1
    5e40:	beq	5e48 <dta_handle_row+0x4a8>
    5e44:	bl	3d94 <byteswap4@plt>
    5e48:	ldr	r3, [r4, #200]	; 0xc8
    5e4c:	cmp	r3, r0
    5e50:	bge	5e94 <dta_handle_row+0x4f4>
    5e54:	ldrb	r3, [r4, #192]	; 0xc0
    5e58:	cmp	r0, #2130706432	; 0x7f000000
    5e5c:	movle	r2, #0
    5e60:	movgt	r2, #1
    5e64:	ands	r2, r2, r3, lsr #3
    5e68:	moveq	r3, r2
    5e6c:	moveq	r1, #1
    5e70:	beq	5ea4 <dta_handle_row+0x504>
    5e74:	add	r3, r0, #-2130706432	; 0x81000000
    5e78:	sub	r3, r3, #2048	; 0x800
    5e7c:	mov	r2, #1
    5e80:	asr	r3, r3, #11
    5e84:	add	r3, r3, #97	; 0x61
    5e88:	mov	r1, #0
    5e8c:	uxtb	r3, r3
    5e90:	b	5ea4 <dta_handle_row+0x504>
    5e94:	mov	r2, #0
    5e98:	mov	r1, r2
    5e9c:	mov	r3, r2
    5ea0:	str	r0, [sp, #120]	; 0x78
    5ea4:	ldrb	r0, [sp, #205]	; 0xcd
    5ea8:	ldr	lr, [sp, #120]	; 0x78
    5eac:	strb	r3, [sp, #204]	; 0xcc
    5eb0:	and	r0, r0, #252	; 0xfc
    5eb4:	orr	r0, r0, r1
    5eb8:	add	r1, sp, #192	; 0xc0
    5ebc:	orr	r2, r0, r2, lsl #1
    5ec0:	mov	r0, #4
    5ec4:	str	lr, [sp, #192]	; 0xc0
    5ec8:	strb	r2, [sp, #205]	; 0xcd
    5ecc:	str	r0, [sp, #200]	; 0xc8
    5ed0:	ldm	r1, {r0, r1, r2, r3}
    5ed4:	add	ip, sp, #128	; 0x80
    5ed8:	add	lr, sp, #176	; 0xb0
    5edc:	stm	ip, {r0, r1, r2, r3}
    5ee0:	stm	lr, {r0, r1, r2, r3}
    5ee4:	b	5ff8 <dta_handle_row+0x658>
    5ee8:	cmp	r3, #5
    5eec:	bne	5ff8 <dta_handle_row+0x658>
    5ef0:	mov	r2, #16
    5ef4:	mov	r1, #0
    5ef8:	add	r0, sp, #192	; 0xc0
    5efc:	bl	42a4 <memset@plt>
    5f00:	ldrb	r2, [r4, #192]	; 0xc0
    5f04:	add	r3, fp, sl
    5f08:	add	r5, sp, #128	; 0x80
    5f0c:	ldr	r0, [r3]
    5f10:	ldr	r1, [r3, #4]
    5f14:	tst	r2, #1
    5f18:	ldr	r2, [sp, #20]
    5f1c:	add	r3, sp, #120	; 0x78
    5f20:	vstr	d9, [r2]
    5f24:	stmia	r3!, {r0, r1}
    5f28:	beq	5f38 <dta_handle_row+0x598>
    5f2c:	ldrd	r0, [sp, #120]	; 0x78
    5f30:	bl	3d7c <byteswap8@plt>
    5f34:	strd	r0, [r5, #-8]
    5f38:	ldrd	r2, [r4, #208]	; 0xd0
    5f3c:	ldrd	r0, [sp, #120]	; 0x78
    5f40:	cmp	r2, r0
    5f44:	sbcs	r3, r3, r1
    5f48:	bge	5fa0 <dta_handle_row+0x600>
    5f4c:	ldrb	lr, [r4, #192]	; 0xc0
    5f50:	mov	r2, #0
    5f54:	ldr	r3, [pc, #-564]	; 5d28 <dta_handle_row+0x388>
    5f58:	cmp	r2, r0
    5f5c:	sbcs	r3, r3, r1
    5f60:	movlt	ip, #1
    5f64:	movge	ip, #0
    5f68:	ands	ip, ip, lr, lsr #3
    5f6c:	moveq	r3, ip
    5f70:	moveq	r1, #1
    5f74:	beq	5fb4 <dta_handle_row+0x614>
    5f78:	add	r3, pc, #240	; 0xf0
    5f7c:	ldrd	r2, [r3]
    5f80:	mov	ip, #1
    5f84:	adds	r2, r2, r0
    5f88:	adc	r3, r3, r1
    5f8c:	mov	r1, #0
    5f90:	asr	r3, r3, #8
    5f94:	add	r3, r3, #97	; 0x61
    5f98:	uxtb	r3, r3
    5f9c:	b	5fb4 <dta_handle_row+0x614>
    5fa0:	ldr	r3, [sp, #20]
    5fa4:	mov	ip, #0
    5fa8:	strd	r0, [r3]
    5fac:	mov	r1, ip
    5fb0:	mov	r3, ip
    5fb4:	ldr	r2, [sp, #20]
    5fb8:	strb	r3, [sp, #204]	; 0xcc
    5fbc:	add	r3, sp, #192	; 0xc0
    5fc0:	ldrd	r6, [r2]
    5fc4:	ldrb	r2, [sp, #205]	; 0xcd
    5fc8:	strd	r6, [sp, #192]	; 0xc0
    5fcc:	and	r2, r2, #252	; 0xfc
    5fd0:	orr	r2, r2, r1
    5fd4:	orr	ip, r2, ip, lsl #1
    5fd8:	mov	r2, #5
    5fdc:	strb	ip, [sp, #205]	; 0xcd
    5fe0:	str	r2, [sp, #200]	; 0xc8
    5fe4:	ldm	r3, {r0, r1, r2, r3}
    5fe8:	add	ip, sp, #208	; 0xd0
    5fec:	stm	ip, {r0, r1, r2, r3}
    5ff0:	add	ip, sp, #128	; 0x80
    5ff4:	stm	ip, {r0, r1, r2, r3}
    5ff8:	ldr	r3, [sp, #84]	; 0x54
    5ffc:	ldr	ip, [r4, #228]	; 0xe4
    6000:	ldm	r3, {r0, r1}
    6004:	ldr	r3, [r4, #276]	; 0x114
    6008:	stm	sp, {r0, r1}
    600c:	ldr	r1, [sp, #76]	; 0x4c
    6010:	str	r3, [sp, #8]
    6014:	add	r3, sp, #128	; 0x80
    6018:	ldr	r1, [ip, r1]
    601c:	ldm	r3, {r2, r3}
    6020:	ldr	r5, [r4, #256]	; 0x100
    6024:	ldr	r0, [r4, #184]	; 0xb8
    6028:	blx	r5
    602c:	cmp	r0, #0
    6030:	bne	6048 <dta_handle_row+0x6a8>
    6034:	ldr	r3, [sp, #108]	; 0x6c
    6038:	add	sl, sl, r3
    603c:	b	6050 <dta_handle_row+0x6b0>
    6040:	mov	r0, #5
    6044:	b	605c <dta_handle_row+0x6bc>
    6048:	mov	r0, #4
    604c:	b	605c <dta_handle_row+0x6bc>
    6050:	add	r9, r9, #1
    6054:	b	59f0 <dta_handle_row+0x50>
    6058:	mov	r0, #0
    605c:	add	sp, sp, #2272	; 0x8e0
    6060:	add	sp, sp, #4
    6064:	vpop	{d8-d9}
    6068:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    606c:	nop			; (mov r0, r0)
    6070:	.word	0x00000000
    6074:	.word	0x801fff00

00006078 <call_weak_fn>:
    6078:	ldr	r3, [pc, #20]	; 6094 <call_weak_fn+0x1c>
    607c:	ldr	r2, [pc, #20]	; 6098 <call_weak_fn+0x20>
    6080:	add	r3, pc, r3
    6084:	ldr	r2, [r3, r2]
    6088:	cmp	r2, #0
    608c:	bxeq	lr
    6090:	b	419c <__gmon_start__@plt>
    6094:	.word	0x0003ef78
    6098:	.word	0x000002e4

0000609c <deregister_tm_clones>:
    609c:	ldr	r3, [pc, #52]	; 60d8 <deregister_tm_clones+0x3c>
    60a0:	ldr	r0, [pc, #52]	; 60dc <deregister_tm_clones+0x40>
    60a4:	add	r3, pc, r3
    60a8:	add	r0, pc, r0
    60ac:	add	r3, r3, #3
    60b0:	sub	r3, r3, r0
    60b4:	cmp	r3, #6
    60b8:	ldr	r3, [pc, #32]	; 60e0 <deregister_tm_clones+0x44>
    60bc:	add	r3, pc, r3
    60c0:	bxls	lr
    60c4:	ldr	r2, [pc, #24]	; 60e4 <deregister_tm_clones+0x48>
    60c8:	ldr	r3, [r3, r2]
    60cc:	cmp	r3, #0
    60d0:	bxeq	lr
    60d4:	bx	r3
    60d8:	.word	0x00040c78
    60dc:	.word	0x00040c74
    60e0:	.word	0x0003ef3c
    60e4:	.word	0x000002cc

000060e8 <register_tm_clones>:
    60e8:	ldr	r1, [pc, #56]	; 6128 <register_tm_clones+0x40>
    60ec:	ldr	r0, [pc, #56]	; 612c <register_tm_clones+0x44>
    60f0:	add	r1, pc, r1
    60f4:	add	r0, pc, r0
    60f8:	sub	r1, r1, r0
    60fc:	ldr	r3, [pc, #44]	; 6130 <register_tm_clones+0x48>
    6100:	asr	r1, r1, #2
    6104:	add	r3, pc, r3
    6108:	add	r1, r1, r1, lsr #31
    610c:	asrs	r1, r1, #1
    6110:	bxeq	lr
    6114:	ldr	r2, [pc, #24]	; 6134 <register_tm_clones+0x4c>
    6118:	ldr	r3, [r3, r2]
    611c:	cmp	r3, #0
    6120:	bxeq	lr
    6124:	bx	r3
    6128:	.word	0x00040c2c
    612c:	.word	0x00040c28
    6130:	.word	0x0003eef4
    6134:	.word	0x00000310

00006138 <__do_global_dtors_aux>:
    6138:	ldr	r3, [pc, #76]	; 618c <__do_global_dtors_aux+0x54>
    613c:	ldr	r2, [pc, #76]	; 6190 <__do_global_dtors_aux+0x58>
    6140:	add	r3, pc, r3
    6144:	add	r2, pc, r2
    6148:	ldrb	r3, [r3]
    614c:	cmp	r3, #0
    6150:	bxne	lr
    6154:	ldr	r3, [pc, #56]	; 6194 <__do_global_dtors_aux+0x5c>
    6158:	push	{r4, lr}
    615c:	ldr	r3, [r2, r3]
    6160:	cmp	r3, #0
    6164:	beq	6174 <__do_global_dtors_aux+0x3c>
    6168:	ldr	r3, [pc, #40]	; 6198 <__do_global_dtors_aux+0x60>
    616c:	ldr	r0, [pc, r3]
    6170:	bl	3e0c <__cxa_finalize@plt>
    6174:	bl	609c <deregister_tm_clones>
    6178:	ldr	r3, [pc, #28]	; 619c <__do_global_dtors_aux+0x64>
    617c:	mov	r2, #1
    6180:	add	r3, pc, r3
    6184:	strb	r2, [r3]
    6188:	pop	{r4, pc}
    618c:	.word	0x00040bdc
    6190:	.word	0x0003eeb4
    6194:	.word	0x000002c8
    6198:	.word	0x0003f1a4
    619c:	.word	0x00040b9c

000061a0 <frame_dummy>:
    61a0:	ldr	r0, [pc, #56]	; 61e0 <frame_dummy+0x40>
    61a4:	ldr	r3, [pc, #56]	; 61e4 <frame_dummy+0x44>
    61a8:	add	r0, pc, r0
    61ac:	ldr	r2, [r0]
    61b0:	add	r3, pc, r3
    61b4:	cmp	r2, #0
    61b8:	bne	61c0 <frame_dummy+0x20>
    61bc:	b	60e8 <register_tm_clones>
    61c0:	ldr	r2, [pc, #32]	; 61e8 <frame_dummy+0x48>
    61c4:	ldr	r3, [r3, r2]
    61c8:	cmp	r3, #0
    61cc:	beq	61bc <frame_dummy+0x1c>
    61d0:	push	{r4, lr}
    61d4:	blx	r3
    61d8:	pop	{r4, lr}
    61dc:	b	60e8 <register_tm_clones>
    61e0:	.word	0x0003ed54
    61e4:	.word	0x0003ee48
    61e8:	.word	0x00000304
    61ec:	.word	0x00000000

000061f0 <ck_hash_str>:
    61f0:	ldrb	ip, [r0]
    61f4:	cmp	ip, #0
    61f8:	beq	6238 <ck_hash_str+0x48>
    61fc:	push	{r4, r5, lr}
    6200:	add	lr, r0, #1
    6204:	ldr	r0, [pc, #56]	; 6244 <ck_hash_str+0x54>
    6208:	mov	r1, #0
    620c:	lsl	r2, r0, #5
    6210:	adds	r4, r2, ip
    6214:	lsl	r3, r1, #5
    6218:	ldrb	ip, [lr], #1
    621c:	orr	r3, r3, r0, lsr #27
    6220:	adc	r5, r3, #0
    6224:	adds	r0, r0, r4
    6228:	adc	r1, r1, r5
    622c:	cmp	ip, #0
    6230:	bne	620c <ck_hash_str+0x1c>
    6234:	pop	{r4, r5, pc}
    6238:	ldr	r0, [pc, #4]	; 6244 <ck_hash_str+0x54>
    623c:	mov	r1, #0
    6240:	bx	lr
    6244:	.word	0x00001505

00006248 <ck_str_n_hash_lookup>:
    6248:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    624c:	sub	sp, sp, #12
    6250:	ldrd	r4, [r2, #8]
    6254:	orrs	r3, r4, r5
    6258:	beq	638c <ck_str_n_hash_lookup+0x144>
    625c:	sub	r3, r1, #1
    6260:	cmp	r3, #126	; 0x7e
    6264:	bhi	638c <ck_str_n_hash_lookup+0x144>
    6268:	ldrb	r3, [r0]
    626c:	add	ip, r0, #1
    6270:	ldr	r4, [pc, #288]	; 6398 <ck_str_n_hash_lookup+0x150>
    6274:	cmp	r3, #0
    6278:	mov	r5, #0
    627c:	beq	62a8 <ck_str_n_hash_lookup+0x60>
    6280:	lsl	r8, r4, #5
    6284:	adds	r6, r8, r3
    6288:	lsl	r9, r5, #5
    628c:	ldrb	r3, [ip], #1
    6290:	orr	r9, r9, r4, lsr #27
    6294:	adc	r7, r9, #0
    6298:	adds	r4, r4, r6
    629c:	adc	r5, r5, r7
    62a0:	cmp	r3, #0
    62a4:	bne	6280 <ck_str_n_hash_lookup+0x38>
    62a8:	ldrd	r8, [r2]
    62ac:	mov	fp, r1
    62b0:	mov	sl, r0
    62b4:	mov	r1, r5
    62b8:	mov	r0, r4
    62bc:	mov	r6, r2
    62c0:	mov	r3, r9
    62c4:	mov	r2, r8
    62c8:	bl	25688 <__aeabi_uldivmod>
    62cc:	mov	r4, r2
    62d0:	mov	r5, r3
    62d4:	subs	r0, r4, #1
    62d8:	sbc	r1, r5, #0
    62dc:	mov	r2, r8
    62e0:	mov	r3, r9
    62e4:	bl	25688 <__aeabi_uldivmod>
    62e8:	cmp	r5, r3
    62ec:	cmpeq	r4, r2
    62f0:	strd	r2, [sp]
    62f4:	beq	638c <ck_str_n_hash_lookup+0x144>
    62f8:	add	r3, r4, r4, lsl #5
    62fc:	ldr	r7, [r6, #16]
    6300:	lsl	r3, r3, #2
    6304:	add	r6, r7, r3
    6308:	ldrb	r0, [r7, r3]
    630c:	cmp	r0, #0
    6310:	beq	6384 <ck_str_n_hash_lookup+0x13c>
    6314:	add	fp, fp, #1
    6318:	mov	r3, sl
    631c:	mov	sl, fp
    6320:	mov	fp, r3
    6324:	b	6360 <ck_str_n_hash_lookup+0x118>
    6328:	adds	r0, r4, #1
    632c:	adc	r1, r5, #0
    6330:	bl	25688 <__aeabi_uldivmod>
    6334:	mov	r4, r2
    6338:	mov	r5, r3
    633c:	ldrd	r2, [sp]
    6340:	add	r6, r4, r4, lsl #5
    6344:	cmp	r3, r5
    6348:	cmpeq	r2, r4
    634c:	beq	638c <ck_str_n_hash_lookup+0x144>
    6350:	ldrb	r0, [r7, r6, lsl #2]
    6354:	add	r6, r7, r6, lsl #2
    6358:	cmp	r0, #0
    635c:	beq	6384 <ck_str_n_hash_lookup+0x13c>
    6360:	mov	r2, sl
    6364:	mov	r1, fp
    6368:	mov	r0, r6
    636c:	bl	44fc <strncmp@plt>
    6370:	mov	r2, r8
    6374:	mov	r3, r9
    6378:	cmp	r0, #0
    637c:	bne	6328 <ck_str_n_hash_lookup+0xe0>
    6380:	ldr	r0, [r6, #128]	; 0x80
    6384:	add	sp, sp, #12
    6388:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    638c:	mov	r0, #0
    6390:	add	sp, sp, #12
    6394:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6398:	.word	0x00001505

0000639c <ck_float_hash_lookup>:
    639c:	push	{r4, r5, r6, lr}
    63a0:	vmov	lr, s0
    63a4:	mov	r2, r0
    63a8:	sub	sp, sp, #8
    63ac:	mov	r4, #0
    63b0:	lsr	ip, lr, #8
    63b4:	uxtb	r5, lr
    63b8:	uxtb	ip, ip
    63bc:	and	r0, ip, #2
    63c0:	and	r3, r5, #1
    63c4:	orr	r3, r3, r0
    63c8:	lsr	r0, lr, #16
    63cc:	mvn	r3, r3, lsl #28
    63d0:	uxtb	r0, r0
    63d4:	and	r6, r0, #4
    63d8:	lsr	lr, lr, #24
    63dc:	mvn	r3, r3, lsr #28
    63e0:	orr	r3, r3, r6
    63e4:	orr	r6, ip, #2
    63e8:	orr	ip, r0, #4
    63ec:	and	r0, lr, #8
    63f0:	orr	r3, r3, r0
    63f4:	orr	lr, lr, #8
    63f8:	mov	r1, #5
    63fc:	orr	r5, r5, #1
    6400:	mov	r0, sp
    6404:	strb	r6, [sp, #1]
    6408:	strb	r5, [sp]
    640c:	strb	ip, [sp, #2]
    6410:	strb	r3, [sp, #4]
    6414:	strb	lr, [sp, #3]
    6418:	strb	r4, [sp, #5]
    641c:	bl	4064 <ck_str_n_hash_lookup@plt>
    6420:	add	sp, sp, #8
    6424:	pop	{r4, r5, r6, pc}

00006428 <ck_double_hash_lookup>:
    6428:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    642c:	sub	sp, sp, #24
    6430:	mov	r2, r0
    6434:	vstr	d0, [sp]
    6438:	add	r3, sp, #12
    643c:	mvn	r9, #15
    6440:	ldm	sp, {r0, r1}
    6444:	stm	r3, {r0, r1}
    6448:	ldrb	r5, [sp, #12]
    644c:	ldrb	ip, [sp, #13]
    6450:	ldrb	r8, [sp, #14]
    6454:	ldrb	sl, [sp, #16]
    6458:	ldrb	r6, [sp, #17]
    645c:	and	r7, ip, #2
    6460:	and	r4, r5, #1
    6464:	ldrb	r1, [sp, #15]
    6468:	orr	r4, r4, r7
    646c:	orr	r4, r4, r9
    6470:	orr	ip, ip, #2
    6474:	and	r7, r8, #4
    6478:	ldrb	lr, [sp, #18]
    647c:	strb	ip, [sp, #13]
    6480:	orr	r7, r4, r7
    6484:	and	ip, r6, #2
    6488:	orr	r4, r8, #4
    648c:	mov	r0, r3
    6490:	and	r3, sl, #1
    6494:	strb	r4, [sp, #14]
    6498:	orr	r3, r3, ip
    649c:	and	r4, r1, #8
    64a0:	ldrb	ip, [sp, #19]
    64a4:	orr	r4, r7, r4
    64a8:	strb	r4, [sp, #20]
    64ac:	orr	r3, r3, r9
    64b0:	and	r4, lr, #4
    64b4:	orr	r1, r1, #8
    64b8:	strb	r1, [sp, #15]
    64bc:	orr	r5, r5, #1
    64c0:	and	r1, ip, #8
    64c4:	orr	r3, r3, r4
    64c8:	orr	r3, r3, r1
    64cc:	strb	r5, [sp, #12]
    64d0:	orr	lr, lr, #4
    64d4:	orr	ip, ip, #8
    64d8:	orr	r5, sl, #1
    64dc:	orr	r6, r6, #2
    64e0:	mov	r4, #0
    64e4:	mov	r1, #10
    64e8:	strb	r5, [sp, #16]
    64ec:	strb	r6, [sp, #17]
    64f0:	strb	lr, [sp, #18]
    64f4:	strb	r3, [sp, #21]
    64f8:	strb	ip, [sp, #19]
    64fc:	strb	r4, [sp, #22]
    6500:	bl	4064 <ck_str_n_hash_lookup@plt>
    6504:	add	sp, sp, #24
    6508:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

0000650c <ck_str_hash_lookup>:
    650c:	push	{r4, r5, r6, lr}
    6510:	mov	r5, r1
    6514:	mov	r4, r0
    6518:	bl	41fc <strlen@plt>
    651c:	mov	r2, r5
    6520:	cmp	r0, #127	; 0x7f
    6524:	movcc	r1, r0
    6528:	movcs	r1, #127	; 0x7f
    652c:	mov	r0, r4
    6530:	pop	{r4, r5, r6, lr}
    6534:	b	4064 <ck_str_n_hash_lookup@plt>

00006538 <ck_hash_table_free>:
    6538:	push	{r4, lr}
    653c:	mov	r4, r0
    6540:	ldr	r0, [r0, #16]
    6544:	bl	3ec0 <free@plt>
    6548:	mov	r0, r4
    654c:	pop	{r4, lr}
    6550:	b	3ec0 <free@plt>

00006554 <ck_hash_table_wipe>:
    6554:	ldr	r2, [r0]
    6558:	mov	r1, #0
    655c:	ldr	r0, [r0, #16]
    6560:	add	r2, r2, r2, lsl #5
    6564:	lsl	r2, r2, #2
    6568:	b	42a4 <memset@plt>

0000656c <ck_hash_table_init>:
    656c:	push	{r4, r5, r6, lr}
    6570:	mov	r5, r0
    6574:	mov	r0, #24
    6578:	bl	410c <malloc@plt>
    657c:	subs	r4, r0, #0
    6580:	beq	65c4 <ck_hash_table_init+0x58>
    6584:	lsl	r6, r5, #1
    6588:	add	r0, r6, r5, lsl #6
    658c:	lsl	r0, r0, #2
    6590:	bl	410c <malloc@plt>
    6594:	cmp	r0, #0
    6598:	mov	r5, r0
    659c:	str	r0, [r4, #16]
    65a0:	beq	65cc <ck_hash_table_init+0x60>
    65a4:	mov	r0, #0
    65a8:	mov	r1, #0
    65ac:	mov	r3, #0
    65b0:	strd	r0, [r4, #8]
    65b4:	str	r6, [r4]
    65b8:	str	r3, [r4, #4]
    65bc:	mov	r0, r4
    65c0:	bl	3e18 <ck_hash_table_wipe@plt>
    65c4:	mov	r0, r4
    65c8:	pop	{r4, r5, r6, pc}
    65cc:	mov	r0, r4
    65d0:	bl	3ec0 <free@plt>
    65d4:	mov	r4, r5
    65d8:	b	65c4 <ck_hash_table_init+0x58>

000065dc <ck_hash_table_grow>:
    65dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    65e0:	mov	r1, #132	; 0x84
    65e4:	ldrd	r8, [r0]
    65e8:	mov	r5, r0
    65ec:	ldr	sl, [r0, #16]
    65f0:	adds	r6, r8, r8
    65f4:	mov	r0, r6
    65f8:	adc	r7, r9, r9
    65fc:	bl	3d58 <calloc@plt>
    6600:	cmp	r0, #0
    6604:	str	r0, [r5, #16]
    6608:	beq	6670 <ck_hash_table_grow+0x94>
    660c:	mov	r2, #0
    6610:	orrs	r3, r8, r9
    6614:	stm	r5, {r6, r7}
    6618:	str	r2, [r5, #8]
    661c:	str	r2, [r5, #12]
    6620:	movne	r6, r2
    6624:	movne	r7, r2
    6628:	movne	r4, sl
    662c:	bne	664c <ck_hash_table_grow+0x70>
    6630:	b	6678 <ck_hash_table_grow+0x9c>
    6634:	adds	r6, r6, #1
    6638:	adc	r7, r7, #0
    663c:	cmp	r9, r7
    6640:	cmpeq	r8, r6
    6644:	add	r4, r4, #132	; 0x84
    6648:	beq	6678 <ck_hash_table_grow+0x9c>
    664c:	ldrb	r3, [r4]
    6650:	cmp	r3, #0
    6654:	beq	6634 <ck_hash_table_grow+0x58>
    6658:	mov	r2, r5
    665c:	ldr	r1, [r4, #128]	; 0x80
    6660:	mov	r0, r4
    6664:	bl	44f0 <ck_str_hash_insert@plt>
    6668:	cmp	r0, #0
    666c:	bne	6634 <ck_hash_table_grow+0x58>
    6670:	mvn	r0, #0
    6674:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    6678:	mov	r0, sl
    667c:	bl	3ec0 <free@plt>
    6680:	mov	r0, #0
    6684:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00006688 <ck_str_n_hash_insert>:
    6688:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    668c:	vpush	{d8}
    6690:	ldrd	r6, [r3]
    6694:	sub	sp, sp, #28
    6698:	orrs	ip, r6, r7
    669c:	strd	r6, [sp]
    66a0:	beq	683c <ck_str_n_hash_insert+0x1b4>
    66a4:	sub	ip, r1, #1
    66a8:	cmp	ip, #126	; 0x7e
    66ac:	bhi	683c <ck_str_n_hash_insert+0x1b4>
    66b0:	str	r1, [sp, #16]
    66b4:	mov	r9, r0
    66b8:	ldrd	r0, [r3, #8]
    66bc:	str	r2, [sp, #20]
    66c0:	mov	r8, r3
    66c4:	bl	25540 <__aeabi_ul2d>
    66c8:	vmov	d8, r0, r1
    66cc:	ldrd	r0, [sp]
    66d0:	bl	25540 <__aeabi_ul2d>
    66d4:	vldr	d7, [pc, #420]	; 6880 <ck_str_n_hash_insert+0x1f8>
    66d8:	vmov	d6, r0, r1
    66dc:	vmul.f64	d7, d6, d7
    66e0:	vcmpe.f64	d8, d7
    66e4:	vmrs	APSR_nzcv, fpscr
    66e8:	bge	6860 <ck_str_n_hash_insert+0x1d8>
    66ec:	ldrb	ip, [r9]
    66f0:	add	lr, r9, #1
    66f4:	ldr	r0, [pc, #396]	; 6888 <ck_str_n_hash_insert+0x200>
    66f8:	cmp	ip, #0
    66fc:	mov	r1, #0
    6700:	beq	672c <ck_str_n_hash_insert+0xa4>
    6704:	lsl	r4, r0, #5
    6708:	adds	r2, r4, ip
    670c:	lsl	r5, r1, #5
    6710:	ldrb	ip, [lr], #1
    6714:	orr	r5, r5, r0, lsr #27
    6718:	adc	r3, r5, #0
    671c:	adds	r0, r0, r2
    6720:	adc	r1, r1, r3
    6724:	cmp	ip, #0
    6728:	bne	6704 <ck_str_n_hash_insert+0x7c>
    672c:	ldrd	r4, [sp]
    6730:	mov	r2, r4
    6734:	mov	r3, r5
    6738:	bl	25688 <__aeabi_uldivmod>
    673c:	mov	r6, r2
    6740:	mov	r7, r3
    6744:	orrs	r3, r6, r7
    6748:	mov	r2, r4
    674c:	mov	r3, r5
    6750:	bne	684c <ck_str_n_hash_insert+0x1c4>
    6754:	subs	r2, r4, #1
    6758:	sbc	r3, r5, #0
    675c:	strd	r2, [sp, #8]
    6760:	cmp	r7, r3
    6764:	cmpeq	r6, r2
    6768:	beq	683c <ck_str_n_hash_insert+0x1b4>
    676c:	add	r4, r6, r6, lsl #5
    6770:	ldr	r5, [r8, #16]
    6774:	lsl	r4, r4, #2
    6778:	add	sl, r5, r4
    677c:	ldrb	r3, [r5, r4]
    6780:	cmp	r3, #0
    6784:	beq	67e8 <ck_str_n_hash_insert+0x160>
    6788:	ldr	r3, [sp, #16]
    678c:	add	fp, r3, #1
    6790:	mov	r2, fp
    6794:	mov	r1, r9
    6798:	mov	r0, sl
    679c:	bl	44fc <strncmp@plt>
    67a0:	ldrd	r2, [sp]
    67a4:	cmp	r0, #0
    67a8:	beq	67f8 <ck_str_n_hash_insert+0x170>
    67ac:	adds	r0, r6, #1
    67b0:	adc	r1, r7, #0
    67b4:	bl	25688 <__aeabi_uldivmod>
    67b8:	mov	r6, r2
    67bc:	mov	r7, r3
    67c0:	ldrd	r2, [sp, #8]
    67c4:	add	r4, r6, r6, lsl #5
    67c8:	cmp	r7, r3
    67cc:	cmpeq	r6, r2
    67d0:	beq	683c <ck_str_n_hash_insert+0x1b4>
    67d4:	ldrb	r3, [r5, r4, lsl #2]
    67d8:	lsl	r4, r4, #2
    67dc:	add	sl, r5, r4
    67e0:	cmp	r3, #0
    67e4:	bne	6790 <ck_str_n_hash_insert+0x108>
    67e8:	ldrd	r2, [r8, #8]
    67ec:	adds	r2, r2, #1
    67f0:	adc	r3, r3, #0
    67f4:	strd	r2, [r8, #8]
    67f8:	ldr	r5, [sp, #16]
    67fc:	mov	r1, r9
    6800:	mov	r2, r5
    6804:	mov	r0, sl
    6808:	bl	3f20 <memcpy@plt>
    680c:	ldr	r3, [r8, #16]
    6810:	mov	r2, #0
    6814:	add	r3, r3, r4
    6818:	mov	r0, #1
    681c:	strb	r2, [r3, r5]
    6820:	ldr	r3, [r8, #16]
    6824:	add	r4, r3, r4
    6828:	ldr	r3, [sp, #20]
    682c:	str	r3, [r4, #128]	; 0x80
    6830:	add	sp, sp, #28
    6834:	vpop	{d8}
    6838:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    683c:	mov	r0, #0
    6840:	add	sp, sp, #28
    6844:	vpop	{d8}
    6848:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    684c:	subs	r0, r6, #1
    6850:	sbc	r1, r7, #0
    6854:	bl	25688 <__aeabi_uldivmod>
    6858:	strd	r2, [sp, #8]
    685c:	b	6760 <ck_str_n_hash_insert+0xd8>
    6860:	mov	r0, r8
    6864:	bl	3fec <ck_hash_table_grow@plt>
    6868:	cmn	r0, #1
    686c:	beq	683c <ck_str_n_hash_insert+0x1b4>
    6870:	ldrd	r2, [r8]
    6874:	strd	r2, [sp]
    6878:	b	66ec <ck_str_n_hash_insert+0x64>
    687c:	nop			; (mov r0, r0)
    6880:	.word	0x00000000
    6884:	.word	0x3fe80000
    6888:	.word	0x00001505

0000688c <ck_float_hash_insert>:
    688c:	push	{r4, r5, r6, lr}
    6890:	vmov	r5, s0
    6894:	mov	r3, r1
    6898:	mov	r2, r0
    689c:	sub	sp, sp, #8
    68a0:	lsr	lr, r5, #8
    68a4:	uxtb	r6, r5
    68a8:	uxtb	lr, lr
    68ac:	and	r0, lr, #2
    68b0:	and	r1, r6, #1
    68b4:	orr	r1, r1, r0
    68b8:	lsr	r0, r5, #16
    68bc:	mvn	r1, r1, lsl #28
    68c0:	uxtb	r0, r0
    68c4:	and	ip, r0, #4
    68c8:	mvn	r1, r1, lsr #28
    68cc:	orr	r1, r1, ip
    68d0:	lsr	r5, r5, #24
    68d4:	orr	ip, lr, #2
    68d8:	strb	ip, [sp, #1]
    68dc:	and	ip, r5, #8
    68e0:	orr	lr, r0, #4
    68e4:	orr	ip, r1, ip
    68e8:	mov	r4, #0
    68ec:	orr	r6, r6, #1
    68f0:	orr	r5, r5, #8
    68f4:	mov	r1, #5
    68f8:	mov	r0, sp
    68fc:	strb	r6, [sp]
    6900:	strb	lr, [sp, #2]
    6904:	strb	ip, [sp, #4]
    6908:	strb	r5, [sp, #3]
    690c:	strb	r4, [sp, #5]
    6910:	bl	4298 <ck_str_n_hash_insert@plt>
    6914:	add	sp, sp, #8
    6918:	pop	{r4, r5, r6, pc}

0000691c <ck_double_hash_insert>:
    691c:	push	{r4, r5, r6, r7, r8, r9, lr}
    6920:	sub	sp, sp, #28
    6924:	mov	r2, r0
    6928:	vstr	d0, [sp]
    692c:	mov	r3, r1
    6930:	add	ip, sp, #12
    6934:	mvn	r5, #15
    6938:	ldm	sp, {r0, r1}
    693c:	stm	ip, {r0, r1}
    6940:	ldrb	r7, [sp, #12]
    6944:	ldrb	r9, [sp, #13]
    6948:	ldrb	r8, [sp, #14]
    694c:	and	r1, r7, #1
    6950:	orr	r7, r7, #1
    6954:	strb	r7, [sp, #12]
    6958:	mov	r0, ip
    695c:	ldrb	r7, [sp, #15]
    6960:	and	ip, r9, #2
    6964:	ldrb	r6, [sp, #16]
    6968:	ldrb	r4, [sp, #17]
    696c:	orr	r1, r1, ip
    6970:	orr	r1, r1, r5
    6974:	and	ip, r8, #4
    6978:	orr	r8, r8, #4
    697c:	strb	r8, [sp, #14]
    6980:	orr	r1, r1, ip
    6984:	and	r8, r7, #8
    6988:	orr	r1, r1, r8
    698c:	and	ip, r6, #1
    6990:	and	r8, r4, #2
    6994:	ldrb	lr, [sp, #18]
    6998:	orr	ip, ip, r8
    699c:	orr	ip, ip, r5
    69a0:	ldrb	r5, [sp, #19]
    69a4:	strb	r1, [sp, #20]
    69a8:	and	r1, lr, #4
    69ac:	orr	r6, r6, #1
    69b0:	orr	ip, ip, r1
    69b4:	and	r1, r5, #8
    69b8:	orr	ip, ip, r1
    69bc:	orr	lr, lr, #4
    69c0:	strb	r6, [sp, #16]
    69c4:	orr	r9, r9, #2
    69c8:	orr	r7, r7, #8
    69cc:	orr	r4, r4, #2
    69d0:	orr	r5, r5, #8
    69d4:	mov	r6, #0
    69d8:	mov	r1, #10
    69dc:	strb	r9, [sp, #13]
    69e0:	strb	r7, [sp, #15]
    69e4:	strb	r4, [sp, #17]
    69e8:	strb	lr, [sp, #18]
    69ec:	strb	ip, [sp, #21]
    69f0:	strb	r5, [sp, #19]
    69f4:	strb	r6, [sp, #22]
    69f8:	bl	4298 <ck_str_n_hash_insert@plt>
    69fc:	add	sp, sp, #28
    6a00:	pop	{r4, r5, r6, r7, r8, r9, pc}

00006a04 <ck_str_hash_insert>:
    6a04:	push	{r4, r5, r6, lr}
    6a08:	mov	r5, r1
    6a0c:	mov	r6, r2
    6a10:	mov	r4, r0
    6a14:	bl	41fc <strlen@plt>
    6a18:	mov	r3, r6
    6a1c:	mov	r2, r5
    6a20:	cmp	r0, #127	; 0x7f
    6a24:	movcc	r1, r0
    6a28:	movcs	r1, #127	; 0x7f
    6a2c:	mov	r0, r4
    6a30:	pop	{r4, r5, r6, lr}
    6a34:	b	4298 <ck_str_n_hash_insert@plt>

00006a38 <machine_is_little_endian>:
    6a38:	mov	r0, #1
    6a3c:	bx	lr

00006a40 <ones_to_twos_complement1>:
    6a40:	bx	lr

00006a44 <ones_to_twos_complement2>:
    6a44:	cmp	r0, #0
    6a48:	addlt	r0, r0, #1
    6a4c:	sxthlt	r0, r0
    6a50:	bx	lr

00006a54 <ones_to_twos_complement4>:
    6a54:	cmp	r0, #0
    6a58:	addlt	r0, r0, #1
    6a5c:	bx	lr

00006a60 <twos_to_ones_complement1>:
    6a60:	bx	lr

00006a64 <twos_to_ones_complement2>:
    6a64:	cmp	r0, #0
    6a68:	sublt	r0, r0, #1
    6a6c:	sxthlt	r0, r0
    6a70:	bx	lr

00006a74 <twos_to_ones_complement4>:
    6a74:	cmp	r0, #0
    6a78:	sublt	r0, r0, #1
    6a7c:	bx	lr

00006a80 <byteswap2>:
    6a80:	rev16	r0, r0
    6a84:	uxth	r0, r0
    6a88:	bx	lr

00006a8c <byteswap4>:
    6a8c:	rev	r0, r0
    6a90:	bx	lr

00006a94 <byteswap8>:
    6a94:	rev	r3, r0
    6a98:	rev	r0, r1
    6a9c:	mov	r1, r3
    6aa0:	bx	lr

00006aa4 <byteswap_float>:
    6aa4:	push	{r4, lr}
    6aa8:	vmov	r0, s0
    6aac:	bl	3d94 <byteswap4@plt>
    6ab0:	vmov	s0, r0
    6ab4:	pop	{r4, pc}

00006ab8 <byteswap_double>:
    6ab8:	push	{r4, lr}
    6abc:	vmov	r0, r1, d0
    6ac0:	bl	3d7c <byteswap8@plt>
    6ac4:	vmov	d0, r0, r1
    6ac8:	pop	{r4, pc}

00006acc <readstat_convert>:
    6acc:	push	{r4, r5, r6, lr}
    6ad0:	sub	sp, sp, #24
    6ad4:	subs	r4, r3, #0
    6ad8:	mov	r6, r0
    6adc:	mov	r5, r1
    6ae0:	str	r2, [sp, #12]
    6ae4:	str	r3, [sp, #8]
    6ae8:	beq	6b28 <readstat_convert+0x5c>
    6aec:	sub	r3, r4, #1
    6af0:	add	r1, r2, r3
    6af4:	ldrb	r2, [r2, r3]
    6af8:	cmp	r2, #32
    6afc:	bne	6b2c <readstat_convert+0x60>
    6b00:	mov	r2, r1
    6b04:	b	6b1c <readstat_convert+0x50>
    6b08:	ldrb	r1, [r2, #-1]!
    6b0c:	sub	r0, r3, #1
    6b10:	cmp	r1, #32
    6b14:	bne	6b40 <readstat_convert+0x74>
    6b18:	mov	r3, r0
    6b1c:	cmp	r3, #0
    6b20:	str	r3, [sp, #8]
    6b24:	bne	6b08 <readstat_convert+0x3c>
    6b28:	mov	r4, #0
    6b2c:	cmp	r5, #0
    6b30:	bne	6b4c <readstat_convert+0x80>
    6b34:	mov	r0, #19
    6b38:	add	sp, sp, #24
    6b3c:	pop	{r4, r5, r6, pc}
    6b40:	cmp	r5, #0
    6b44:	mov	r4, r3
    6b48:	beq	6b34 <readstat_convert+0x68>
    6b4c:	ldr	r3, [sp, #40]	; 0x28
    6b50:	cmp	r3, #0
    6b54:	beq	6bd0 <readstat_convert+0x104>
    6b58:	mov	r0, r3
    6b5c:	add	r3, sp, #24
    6b60:	add	r2, sp, #16
    6b64:	str	r6, [r3, #-4]!
    6b68:	sub	ip, r5, #1
    6b6c:	str	r2, [sp]
    6b70:	add	r1, sp, #12
    6b74:	add	r2, sp, #8
    6b78:	str	ip, [sp, #16]
    6b7c:	bl	3de8 <iconv@plt>
    6b80:	cmn	r0, #1
    6b84:	beq	6ba4 <readstat_convert+0xd8>
    6b88:	ldr	r3, [sp, #16]
    6b8c:	add	r5, r6, r5
    6b90:	mvn	r3, r3
    6b94:	mov	r0, #0
    6b98:	strb	r0, [r5, r3]
    6b9c:	add	sp, sp, #24
    6ba0:	pop	{r4, r5, r6, pc}
    6ba4:	bl	4268 <__errno_location@plt>
    6ba8:	ldr	r3, [r0]
    6bac:	cmp	r3, #7
    6bb0:	beq	6b34 <readstat_convert+0x68>
    6bb4:	cmp	r3, #84	; 0x54
    6bb8:	moveq	r0, #17
    6bbc:	beq	6b38 <readstat_convert+0x6c>
    6bc0:	cmp	r3, #22
    6bc4:	movne	r0, #16
    6bc8:	bne	6b38 <readstat_convert+0x6c>
    6bcc:	b	6b88 <readstat_convert+0xbc>
    6bd0:	add	r3, r4, #1
    6bd4:	cmp	r5, r3
    6bd8:	bcc	6b34 <readstat_convert+0x68>
    6bdc:	mov	r2, r4
    6be0:	ldr	r1, [sp, #12]
    6be4:	mov	r0, r6
    6be8:	bl	3f20 <memcpy@plt>
    6bec:	ldrb	r3, [sp, #40]	; 0x28
    6bf0:	ldr	r0, [sp, #40]	; 0x28
    6bf4:	strb	r3, [r6, r4]
    6bf8:	b	6b38 <readstat_convert+0x6c>

00006bfc <readstat_error_message>:
    6bfc:	cmp	r0, #0
    6c00:	bxeq	lr
    6c04:	cmp	r0, #1
    6c08:	beq	6d54 <readstat_error_message+0x158>
    6c0c:	cmp	r0, #2
    6c10:	beq	6d60 <readstat_error_message+0x164>
    6c14:	cmp	r0, #3
    6c18:	beq	6d48 <readstat_error_message+0x14c>
    6c1c:	cmp	r0, #4
    6c20:	beq	6d6c <readstat_error_message+0x170>
    6c24:	cmp	r0, #5
    6c28:	beq	6d78 <readstat_error_message+0x17c>
    6c2c:	cmp	r0, #6
    6c30:	beq	6d84 <readstat_error_message+0x188>
    6c34:	cmp	r0, #7
    6c38:	beq	6d90 <readstat_error_message+0x194>
    6c3c:	cmp	r0, #8
    6c40:	beq	6da8 <readstat_error_message+0x1ac>
    6c44:	cmp	r0, #9
    6c48:	beq	6db4 <readstat_error_message+0x1b8>
    6c4c:	cmp	r0, #10
    6c50:	beq	6dc0 <readstat_error_message+0x1c4>
    6c54:	cmp	r0, #11
    6c58:	beq	6dcc <readstat_error_message+0x1d0>
    6c5c:	cmp	r0, #12
    6c60:	beq	6dd8 <readstat_error_message+0x1dc>
    6c64:	cmp	r0, #13
    6c68:	beq	6de4 <readstat_error_message+0x1e8>
    6c6c:	cmp	r0, #14
    6c70:	beq	6d9c <readstat_error_message+0x1a0>
    6c74:	cmp	r0, #15
    6c78:	beq	6df0 <readstat_error_message+0x1f4>
    6c7c:	cmp	r0, #16
    6c80:	beq	6dfc <readstat_error_message+0x200>
    6c84:	cmp	r0, #17
    6c88:	beq	6e08 <readstat_error_message+0x20c>
    6c8c:	cmp	r0, #18
    6c90:	beq	6e14 <readstat_error_message+0x218>
    6c94:	cmp	r0, #19
    6c98:	beq	6e20 <readstat_error_message+0x224>
    6c9c:	cmp	r0, #20
    6ca0:	beq	6e2c <readstat_error_message+0x230>
    6ca4:	cmp	r0, #21
    6ca8:	beq	6e38 <readstat_error_message+0x23c>
    6cac:	cmp	r0, #22
    6cb0:	beq	6e44 <readstat_error_message+0x248>
    6cb4:	cmp	r0, #23
    6cb8:	beq	6e50 <readstat_error_message+0x254>
    6cbc:	cmp	r0, #24
    6cc0:	beq	6e5c <readstat_error_message+0x260>
    6cc4:	cmp	r0, #25
    6cc8:	beq	6e68 <readstat_error_message+0x26c>
    6ccc:	cmp	r0, #26
    6cd0:	beq	6e74 <readstat_error_message+0x278>
    6cd4:	cmp	r0, #27
    6cd8:	beq	6e80 <readstat_error_message+0x284>
    6cdc:	cmp	r0, #28
    6ce0:	beq	6e8c <readstat_error_message+0x290>
    6ce4:	cmp	r0, #38	; 0x26
    6ce8:	beq	6e98 <readstat_error_message+0x29c>
    6cec:	cmp	r0, #29
    6cf0:	beq	6ea4 <readstat_error_message+0x2a8>
    6cf4:	cmp	r0, #30
    6cf8:	beq	6ebc <readstat_error_message+0x2c0>
    6cfc:	cmp	r0, #31
    6d00:	beq	6eb0 <readstat_error_message+0x2b4>
    6d04:	cmp	r0, #32
    6d08:	beq	6ef8 <readstat_error_message+0x2fc>
    6d0c:	cmp	r0, #33	; 0x21
    6d10:	beq	6eec <readstat_error_message+0x2f0>
    6d14:	cmp	r0, #34	; 0x22
    6d18:	beq	6ee0 <readstat_error_message+0x2e4>
    6d1c:	cmp	r0, #35	; 0x23
    6d20:	beq	6ed4 <readstat_error_message+0x2d8>
    6d24:	cmp	r0, #36	; 0x24
    6d28:	beq	6ec8 <readstat_error_message+0x2cc>
    6d2c:	cmp	r0, #37	; 0x25
    6d30:	beq	6f10 <readstat_error_message+0x314>
    6d34:	cmp	r0, #39	; 0x27
    6d38:	beq	6f04 <readstat_error_message+0x308>
    6d3c:	ldr	r0, [pc, #472]	; 6f1c <readstat_error_message+0x320>
    6d40:	add	r0, pc, r0
    6d44:	bx	lr
    6d48:	ldr	r0, [pc, #464]	; 6f20 <readstat_error_message+0x324>
    6d4c:	add	r0, pc, r0
    6d50:	bx	lr
    6d54:	ldr	r0, [pc, #456]	; 6f24 <readstat_error_message+0x328>
    6d58:	add	r0, pc, r0
    6d5c:	bx	lr
    6d60:	ldr	r0, [pc, #448]	; 6f28 <readstat_error_message+0x32c>
    6d64:	add	r0, pc, r0
    6d68:	bx	lr
    6d6c:	ldr	r0, [pc, #440]	; 6f2c <readstat_error_message+0x330>
    6d70:	add	r0, pc, r0
    6d74:	bx	lr
    6d78:	ldr	r0, [pc, #432]	; 6f30 <readstat_error_message+0x334>
    6d7c:	add	r0, pc, r0
    6d80:	bx	lr
    6d84:	ldr	r0, [pc, #424]	; 6f34 <readstat_error_message+0x338>
    6d88:	add	r0, pc, r0
    6d8c:	bx	lr
    6d90:	ldr	r0, [pc, #416]	; 6f38 <readstat_error_message+0x33c>
    6d94:	add	r0, pc, r0
    6d98:	bx	lr
    6d9c:	ldr	r0, [pc, #408]	; 6f3c <readstat_error_message+0x340>
    6da0:	add	r0, pc, r0
    6da4:	bx	lr
    6da8:	ldr	r0, [pc, #400]	; 6f40 <readstat_error_message+0x344>
    6dac:	add	r0, pc, r0
    6db0:	bx	lr
    6db4:	ldr	r0, [pc, #392]	; 6f44 <readstat_error_message+0x348>
    6db8:	add	r0, pc, r0
    6dbc:	bx	lr
    6dc0:	ldr	r0, [pc, #384]	; 6f48 <readstat_error_message+0x34c>
    6dc4:	add	r0, pc, r0
    6dc8:	bx	lr
    6dcc:	ldr	r0, [pc, #376]	; 6f4c <readstat_error_message+0x350>
    6dd0:	add	r0, pc, r0
    6dd4:	bx	lr
    6dd8:	ldr	r0, [pc, #368]	; 6f50 <readstat_error_message+0x354>
    6ddc:	add	r0, pc, r0
    6de0:	bx	lr
    6de4:	ldr	r0, [pc, #360]	; 6f54 <readstat_error_message+0x358>
    6de8:	add	r0, pc, r0
    6dec:	bx	lr
    6df0:	ldr	r0, [pc, #352]	; 6f58 <readstat_error_message+0x35c>
    6df4:	add	r0, pc, r0
    6df8:	bx	lr
    6dfc:	ldr	r0, [pc, #344]	; 6f5c <readstat_error_message+0x360>
    6e00:	add	r0, pc, r0
    6e04:	bx	lr
    6e08:	ldr	r0, [pc, #336]	; 6f60 <readstat_error_message+0x364>
    6e0c:	add	r0, pc, r0
    6e10:	bx	lr
    6e14:	ldr	r0, [pc, #328]	; 6f64 <readstat_error_message+0x368>
    6e18:	add	r0, pc, r0
    6e1c:	bx	lr
    6e20:	ldr	r0, [pc, #320]	; 6f68 <readstat_error_message+0x36c>
    6e24:	add	r0, pc, r0
    6e28:	bx	lr
    6e2c:	ldr	r0, [pc, #312]	; 6f6c <readstat_error_message+0x370>
    6e30:	add	r0, pc, r0
    6e34:	bx	lr
    6e38:	ldr	r0, [pc, #304]	; 6f70 <readstat_error_message+0x374>
    6e3c:	add	r0, pc, r0
    6e40:	bx	lr
    6e44:	ldr	r0, [pc, #296]	; 6f74 <readstat_error_message+0x378>
    6e48:	add	r0, pc, r0
    6e4c:	bx	lr
    6e50:	ldr	r0, [pc, #288]	; 6f78 <readstat_error_message+0x37c>
    6e54:	add	r0, pc, r0
    6e58:	bx	lr
    6e5c:	ldr	r0, [pc, #280]	; 6f7c <readstat_error_message+0x380>
    6e60:	add	r0, pc, r0
    6e64:	bx	lr
    6e68:	ldr	r0, [pc, #272]	; 6f80 <readstat_error_message+0x384>
    6e6c:	add	r0, pc, r0
    6e70:	bx	lr
    6e74:	ldr	r0, [pc, #264]	; 6f84 <readstat_error_message+0x388>
    6e78:	add	r0, pc, r0
    6e7c:	bx	lr
    6e80:	ldr	r0, [pc, #256]	; 6f88 <readstat_error_message+0x38c>
    6e84:	add	r0, pc, r0
    6e88:	bx	lr
    6e8c:	ldr	r0, [pc, #248]	; 6f8c <readstat_error_message+0x390>
    6e90:	add	r0, pc, r0
    6e94:	bx	lr
    6e98:	ldr	r0, [pc, #240]	; 6f90 <readstat_error_message+0x394>
    6e9c:	add	r0, pc, r0
    6ea0:	bx	lr
    6ea4:	ldr	r0, [pc, #232]	; 6f94 <readstat_error_message+0x398>
    6ea8:	add	r0, pc, r0
    6eac:	bx	lr
    6eb0:	ldr	r0, [pc, #224]	; 6f98 <readstat_error_message+0x39c>
    6eb4:	add	r0, pc, r0
    6eb8:	bx	lr
    6ebc:	ldr	r0, [pc, #216]	; 6f9c <readstat_error_message+0x3a0>
    6ec0:	add	r0, pc, r0
    6ec4:	bx	lr
    6ec8:	ldr	r0, [pc, #208]	; 6fa0 <readstat_error_message+0x3a4>
    6ecc:	add	r0, pc, r0
    6ed0:	bx	lr
    6ed4:	ldr	r0, [pc, #200]	; 6fa4 <readstat_error_message+0x3a8>
    6ed8:	add	r0, pc, r0
    6edc:	bx	lr
    6ee0:	ldr	r0, [pc, #192]	; 6fa8 <readstat_error_message+0x3ac>
    6ee4:	add	r0, pc, r0
    6ee8:	bx	lr
    6eec:	ldr	r0, [pc, #184]	; 6fac <readstat_error_message+0x3b0>
    6ef0:	add	r0, pc, r0
    6ef4:	bx	lr
    6ef8:	ldr	r0, [pc, #176]	; 6fb0 <readstat_error_message+0x3b4>
    6efc:	add	r0, pc, r0
    6f00:	bx	lr
    6f04:	ldr	r0, [pc, #168]	; 6fb4 <readstat_error_message+0x3b8>
    6f08:	add	r0, pc, r0
    6f0c:	bx	lr
    6f10:	ldr	r0, [pc, #160]	; 6fb8 <readstat_error_message+0x3bc>
    6f14:	add	r0, pc, r0
    6f18:	bx	lr
    6f1c:	.word	0x0001f37c
    6f20:	.word	0x0001eb54
    6f24:	.word	0x0001eb18
    6f28:	.word	0x0001eb20
    6f2c:	.word	0x0001eb4c
    6f30:	.word	0x0001eb7c
    6f34:	.word	0x0001eba0
    6f38:	.word	0x0001ebbc
    6f3c:	.word	0x0001ed00
    6f40:	.word	0x0001ebcc
    6f44:	.word	0x0001ebf4
    6f48:	.word	0x0001ec1c
    6f4c:	.word	0x0001ec40
    6f50:	.word	0x0001ec68
    6f54:	.word	0x0001eca0
    6f58:	.word	0x0001ed18
    6f5c:	.word	0x0001ed28
    6f60:	.word	0x0001ed50
    6f64:	.word	0x0001ed90
    6f68:	.word	0x0001edd4
    6f6c:	.word	0x0001ee18
    6f70:	.word	0x0001ee70
    6f74:	.word	0x0001eec0
    6f78:	.word	0x0001ef10
    6f7c:	.word	0x0001ef4c
    6f80:	.word	0x0001ef74
    6f84:	.word	0x0001ef9c
    6f88:	.word	0x0001efc0
    6f8c:	.word	0x0001efd8
    6f90:	.word	0x0001effc
    6f94:	.word	0x0001f014
    6f98:	.word	0x0001f06c
    6f9c:	.word	0x0001f024
    6fa0:	.word	0x0001f170
    6fa4:	.word	0x0001f134
    6fa8:	.word	0x0001f0f4
    6fac:	.word	0x0001f0a4
    6fb0:	.word	0x0001f064
    6fb4:	.word	0x0001f18c
    6fb8:	.word	0x0001f150

00006fbc <unistd_open_handler>:
    6fbc:	push	{r4, lr}
    6fc0:	mov	r4, r1
    6fc4:	mov	r1, #0
    6fc8:	bl	41a8 <open@plt>
    6fcc:	str	r0, [r4]
    6fd0:	pop	{r4, pc}

00006fd4 <unistd_close_handler>:
    6fd4:	ldr	r0, [r0]
    6fd8:	cmn	r0, #1
    6fdc:	beq	6fe4 <unistd_close_handler+0x10>
    6fe0:	b	4514 <close@plt>
    6fe4:	mov	r0, #0
    6fe8:	bx	lr

00006fec <unistd_seek_handler>:
    6fec:	cmp	r1, #1
    6ff0:	mov	r3, r2
    6ff4:	beq	7004 <unistd_seek_handler+0x18>
    6ff8:	bcc	701c <unistd_seek_handler+0x30>
    6ffc:	cmp	r1, #2
    7000:	bne	7014 <unistd_seek_handler+0x28>
    7004:	mov	r2, r1
    7008:	mov	r1, r0
    700c:	ldr	r0, [r3]
    7010:	b	3f74 <lseek@plt>
    7014:	mvn	r0, #0
    7018:	bx	lr
    701c:	mov	r1, r0
    7020:	mov	r2, #0
    7024:	ldr	r0, [r3]
    7028:	b	3f74 <lseek@plt>

0000702c <unistd_update_handler>:
    702c:	push	{r4, r5, r6, lr}
    7030:	sub	sp, sp, #8
    7034:	subs	r5, r1, #0
    7038:	str	r0, [sp, #4]
    703c:	beq	7094 <unistd_update_handler+0x68>
    7040:	mov	r6, r2
    7044:	mov	r4, r0
    7048:	mov	r2, #1
    704c:	ldr	r0, [r3]
    7050:	mov	r1, #0
    7054:	bl	3f74 <lseek@plt>
    7058:	cmn	r0, #1
    705c:	moveq	r0, #15
    7060:	bne	706c <unistd_update_handler+0x40>
    7064:	add	sp, sp, #8
    7068:	pop	{r4, r5, r6, pc}
    706c:	vmov	s15, r0
    7070:	mov	r0, r6
    7074:	vcvt.f64.s32	d0, s15
    7078:	vmov	s15, r4
    707c:	vcvt.f64.s32	d7, s15
    7080:	vdiv.f64	d0, d0, d7
    7084:	blx	r5
    7088:	cmp	r0, #0
    708c:	movne	r0, #4
    7090:	bne	7064 <unistd_update_handler+0x38>
    7094:	mov	r0, #0
    7098:	add	sp, sp, #8
    709c:	pop	{r4, r5, r6, pc}

000070a0 <unistd_read_handler>:
    70a0:	ldr	r3, [r2]
    70a4:	mov	r2, r1
    70a8:	mov	r1, r0
    70ac:	mov	r0, r3
    70b0:	b	3e3c <read@plt>

000070b4 <unistd_io_init>:
    70b4:	push	{r4, r5, r6, lr}
    70b8:	mov	r6, r0
    70bc:	ldr	r4, [pc, #180]	; 7178 <unistd_io_init+0xc4>
    70c0:	ldr	r3, [pc, #180]	; 717c <unistd_io_init+0xc8>
    70c4:	add	r4, pc, r4
    70c8:	ldr	r1, [r4, r3]
    70cc:	bl	3d70 <readstat_set_open_handler@plt>
    70d0:	subs	r5, r0, #0
    70d4:	beq	70e0 <unistd_io_init+0x2c>
    70d8:	mov	r0, r5
    70dc:	pop	{r4, r5, r6, pc}
    70e0:	ldr	r3, [pc, #152]	; 7180 <unistd_io_init+0xcc>
    70e4:	mov	r0, r6
    70e8:	ldr	r1, [r4, r3]
    70ec:	bl	446c <readstat_set_close_handler@plt>
    70f0:	subs	r5, r0, #0
    70f4:	bne	70d8 <unistd_io_init+0x24>
    70f8:	ldr	r3, [pc, #132]	; 7184 <unistd_io_init+0xd0>
    70fc:	mov	r0, r6
    7100:	ldr	r1, [r4, r3]
    7104:	bl	3d64 <readstat_set_seek_handler@plt>
    7108:	subs	r5, r0, #0
    710c:	bne	70d8 <unistd_io_init+0x24>
    7110:	ldr	r3, [pc, #112]	; 7188 <unistd_io_init+0xd4>
    7114:	mov	r0, r6
    7118:	ldr	r1, [r4, r3]
    711c:	bl	4334 <readstat_set_read_handler@plt>
    7120:	subs	r5, r0, #0
    7124:	bne	70d8 <unistd_io_init+0x24>
    7128:	ldr	r3, [pc, #92]	; 718c <unistd_io_init+0xd8>
    712c:	mov	r0, r6
    7130:	ldr	r1, [r4, r3]
    7134:	bl	3e90 <readstat_set_update_handler@plt>
    7138:	cmp	r0, #0
    713c:	bne	70d8 <unistd_io_init+0x24>
    7140:	mov	r1, #4
    7144:	mov	r0, #1
    7148:	bl	3d58 <calloc@plt>
    714c:	mvn	r2, #0
    7150:	mov	r3, r0
    7154:	mov	r1, r0
    7158:	str	r2, [r3]
    715c:	mov	r0, r6
    7160:	bl	40e8 <readstat_set_io_ctx@plt>
    7164:	ldr	r3, [r6, #32]
    7168:	mov	r2, #1
    716c:	str	r2, [r3, #24]
    7170:	mov	r5, r0
    7174:	b	70d8 <unistd_io_init+0x24>
    7178:	.word	0x0003df34
    717c:	.word	0x000002dc
    7180:	.word	0x0000030c
    7184:	.word	0x00000308
    7188:	.word	0x000002c0
    718c:	.word	0x000002f8

00007190 <readstat_malloc>:
    7190:	ldr	r3, [pc, #20]	; 71ac <readstat_malloc+0x1c>
    7194:	sub	r2, r0, #1
    7198:	cmp	r2, r3
    719c:	bhi	71a4 <readstat_malloc+0x14>
    71a0:	b	410c <malloc@plt>
    71a4:	mov	r0, #0
    71a8:	bx	lr
    71ac:	.word	0x00ffefff

000071b0 <readstat_calloc>:
    71b0:	push	{lr}		; (str lr, [sp, #-4]!)
    71b4:	mul	lr, r1, r0
    71b8:	ldr	ip, [pc, #44]	; 71ec <readstat_calloc+0x3c>
    71bc:	cmp	lr, ip
    71c0:	bhi	71e4 <readstat_calloc+0x34>
    71c4:	sub	ip, ip, #1
    71c8:	sub	r2, r0, #1
    71cc:	sub	r3, r1, #1
    71d0:	cmp	r3, ip
    71d4:	cmpls	r2, ip
    71d8:	bhi	71e4 <readstat_calloc+0x34>
    71dc:	pop	{lr}		; (ldr lr, [sp], #4)
    71e0:	b	3d58 <calloc@plt>
    71e4:	mov	r0, #0
    71e8:	pop	{pc}		; (ldr pc, [sp], #4)
    71ec:	.word	0x00fff000

000071f0 <readstat_realloc>:
    71f0:	ldr	r3, [pc, #40]	; 7220 <readstat_realloc+0x30>
    71f4:	sub	r2, r1, #1
    71f8:	cmp	r2, r3
    71fc:	bls	721c <readstat_realloc+0x2c>
    7200:	cmp	r0, #0
    7204:	beq	7218 <readstat_realloc+0x28>
    7208:	push	{r4, lr}
    720c:	bl	3ec0 <free@plt>
    7210:	mov	r0, #0
    7214:	pop	{r4, pc}
    7218:	bx	lr
    721c:	b	3ff8 <realloc@plt>
    7220:	.word	0x00ffefff

00007224 <readstat_get_row_count>:
    7224:	ldr	r0, [r0]
    7228:	bx	lr

0000722c <readstat_get_var_count>:
    722c:	ldr	r0, [r0, #8]
    7230:	bx	lr

00007234 <readstat_get_creation_time>:
    7234:	ldr	r0, [r0, #16]
    7238:	bx	lr

0000723c <readstat_get_modified_time>:
    723c:	ldr	r0, [r0, #20]
    7240:	bx	lr

00007244 <readstat_get_file_format_version>:
    7244:	ldr	r0, [r0, #24]
    7248:	bx	lr

0000724c <readstat_get_file_format_is_64bit>:
    724c:	ldrb	r0, [r0, #52]	; 0x34
    7250:	and	r0, r0, #1
    7254:	bx	lr

00007258 <readstat_get_compression>:
    7258:	ldr	r0, [r0, #32]
    725c:	bx	lr

00007260 <readstat_get_endianness>:
    7260:	ldr	r0, [r0, #36]	; 0x24
    7264:	bx	lr

00007268 <readstat_get_file_label>:
    7268:	ldr	r0, [r0, #44]	; 0x2c
    726c:	bx	lr

00007270 <readstat_get_file_encoding>:
    7270:	ldr	r0, [r0, #48]	; 0x30
    7274:	bx	lr

00007278 <readstat_get_table_name>:
    7278:	ldr	r0, [r0, #40]	; 0x28
    727c:	bx	lr

00007280 <readstat_set_metadata_handler>:
    7280:	str	r1, [r0]
    7284:	mov	r0, #0
    7288:	bx	lr

0000728c <readstat_set_note_handler>:
    728c:	str	r1, [r0, #4]
    7290:	mov	r0, #0
    7294:	bx	lr

00007298 <readstat_set_variable_handler>:
    7298:	str	r1, [r0, #8]
    729c:	mov	r0, #0
    72a0:	bx	lr

000072a4 <readstat_set_value_handler>:
    72a4:	str	r1, [r0, #16]
    72a8:	mov	r0, #0
    72ac:	bx	lr

000072b0 <readstat_set_value_label_handler>:
    72b0:	str	r1, [r0, #20]
    72b4:	mov	r0, #0
    72b8:	bx	lr

000072bc <readstat_set_error_handler>:
    72bc:	str	r1, [r0, #24]
    72c0:	mov	r0, #0
    72c4:	bx	lr

000072c8 <readstat_set_progress_handler>:
    72c8:	str	r1, [r0, #28]
    72cc:	mov	r0, #0
    72d0:	bx	lr

000072d4 <readstat_set_fweight_handler>:
    72d4:	str	r1, [r0, #12]
    72d8:	mov	r0, #0
    72dc:	bx	lr

000072e0 <readstat_set_open_handler>:
    72e0:	ldr	r3, [r0, #32]
    72e4:	mov	r0, #0
    72e8:	str	r1, [r3]
    72ec:	bx	lr

000072f0 <readstat_set_close_handler>:
    72f0:	ldr	r3, [r0, #32]
    72f4:	mov	r0, #0
    72f8:	str	r1, [r3, #4]
    72fc:	bx	lr

00007300 <readstat_set_seek_handler>:
    7300:	ldr	r3, [r0, #32]
    7304:	mov	r0, #0
    7308:	str	r1, [r3, #8]
    730c:	bx	lr

00007310 <readstat_set_read_handler>:
    7310:	ldr	r3, [r0, #32]
    7314:	mov	r0, #0
    7318:	str	r1, [r3, #12]
    731c:	bx	lr

00007320 <readstat_set_update_handler>:
    7320:	ldr	r3, [r0, #32]
    7324:	mov	r0, #0
    7328:	str	r1, [r3, #16]
    732c:	bx	lr

00007330 <readstat_set_io_ctx>:
    7330:	ldr	r3, [r0, #32]
    7334:	push	{r4, r5, r6, lr}
    7338:	mov	r5, r1
    733c:	ldr	r2, [r3, #24]
    7340:	cmp	r2, #0
    7344:	beq	7358 <readstat_set_io_ctx+0x28>
    7348:	mov	r4, r0
    734c:	ldr	r0, [r3, #20]
    7350:	bl	3ec0 <free@plt>
    7354:	ldr	r3, [r4, #32]
    7358:	mov	r0, #0
    735c:	str	r5, [r3, #20]
    7360:	str	r0, [r3, #24]
    7364:	pop	{r4, r5, r6, pc}

00007368 <readstat_parser_free>:
    7368:	push	{r4, lr}
    736c:	subs	r4, r0, #0
    7370:	popeq	{r4, pc}
    7374:	ldr	r3, [r4, #32]
    7378:	cmp	r3, #0
    737c:	beq	7390 <readstat_parser_free+0x28>
    7380:	mov	r1, #0
    7384:	bl	40e8 <readstat_set_io_ctx@plt>
    7388:	ldr	r0, [r4, #32]
    738c:	bl	3ec0 <free@plt>
    7390:	mov	r0, r4
    7394:	pop	{r4, lr}
    7398:	b	3ec0 <free@plt>

0000739c <readstat_parser_init>:
    739c:	push	{r4, lr}
    73a0:	mov	r1, #52	; 0x34
    73a4:	mov	r0, #1
    73a8:	bl	3d58 <calloc@plt>
    73ac:	mov	r1, #28
    73b0:	mov	r4, r0
    73b4:	mov	r0, #1
    73b8:	bl	3d58 <calloc@plt>
    73bc:	str	r0, [r4, #32]
    73c0:	mov	r0, r4
    73c4:	bl	3f80 <unistd_io_init@plt>
    73c8:	cmp	r0, #0
    73cc:	bne	73e4 <readstat_parser_init+0x48>
    73d0:	ldr	r3, [pc, #28]	; 73f4 <readstat_parser_init+0x58>
    73d4:	add	r3, pc, r3
    73d8:	str	r3, [r4, #40]	; 0x28
    73dc:	mov	r0, r4
    73e0:	pop	{r4, pc}
    73e4:	mov	r0, r4
    73e8:	bl	4100 <readstat_parser_free@plt>
    73ec:	mov	r4, #0
    73f0:	b	73dc <readstat_parser_init+0x40>
    73f4:	.word	0x0001ecf8

000073f8 <readstat_set_file_character_encoding>:
    73f8:	str	r1, [r0, #36]	; 0x24
    73fc:	mov	r0, #0
    7400:	bx	lr

00007404 <readstat_set_handler_character_encoding>:
    7404:	str	r1, [r0, #40]	; 0x28
    7408:	mov	r0, #0
    740c:	bx	lr

00007410 <readstat_set_row_limit>:
    7410:	str	r1, [r0, #44]	; 0x2c
    7414:	mov	r0, #0
    7418:	bx	lr

0000741c <readstat_set_row_offset>:
    741c:	str	r1, [r0, #48]	; 0x30
    7420:	mov	r0, #0
    7424:	bx	lr

00007428 <readstat_type_class>:
    7428:	cmp	r0, #6
    742c:	cmpne	r0, #0
    7430:	moveq	r0, #1
    7434:	movne	r0, #0
    7438:	eor	r0, r0, #1
    743c:	bx	lr

00007440 <readstat_value_type>:
    7440:	sub	sp, sp, #16
    7444:	add	ip, sp, #16
    7448:	stmdb	ip, {r0, r1, r2, r3}
    744c:	ldr	r0, [sp, #8]
    7450:	add	sp, sp, #16
    7454:	bx	lr

00007458 <readstat_value_type_class>:
    7458:	sub	sp, sp, #16
    745c:	add	ip, sp, #16
    7460:	stmdb	ip, {r0, r1, r2, r3}
    7464:	ldr	r0, [sp, #8]
    7468:	add	sp, sp, #16
    746c:	b	3e24 <readstat_type_class@plt>

00007470 <readstat_value_tag>:
    7470:	sub	sp, sp, #16
    7474:	add	ip, sp, #16
    7478:	stmdb	ip, {r0, r1, r2, r3}
    747c:	ldrb	r0, [sp, #12]
    7480:	add	sp, sp, #16
    7484:	bx	lr

00007488 <readstat_value_is_system_missing>:
    7488:	sub	sp, sp, #16
    748c:	add	ip, sp, #16
    7490:	stmdb	ip, {r0, r1, r2, r3}
    7494:	ldrb	r0, [sp, #13]
    7498:	and	r0, r0, #1
    749c:	add	sp, sp, #16
    74a0:	bx	lr

000074a4 <readstat_value_is_tagged_missing>:
    74a4:	sub	sp, sp, #16
    74a8:	add	ip, sp, #16
    74ac:	stmdb	ip, {r0, r1, r2, r3}
    74b0:	ldrb	r0, [sp, #13]
    74b4:	lsr	r0, r0, #1
    74b8:	and	r0, r0, #1
    74bc:	add	sp, sp, #16
    74c0:	bx	lr

000074c4 <readstat_int8_value>:
    74c4:	push	{r4, lr}
    74c8:	sub	sp, sp, #24
    74cc:	add	ip, sp, #8
    74d0:	stm	ip, {r0, r1, r2, r3}
    74d4:	ldm	ip, {r0, r1, r2, r3}
    74d8:	ldr	r4, [sp, #16]
    74dc:	bl	3ecc <readstat_value_is_system_missing@plt>
    74e0:	cmp	r0, #0
    74e4:	movne	r0, #0
    74e8:	bne	7514 <readstat_int8_value+0x50>
    74ec:	cmp	r4, #5
    74f0:	beq	7528 <readstat_int8_value+0x64>
    74f4:	cmp	r4, #4
    74f8:	beq	7540 <readstat_int8_value+0x7c>
    74fc:	cmp	r4, #3
    7500:	beq	751c <readstat_int8_value+0x58>
    7504:	cmp	r4, #2
    7508:	beq	751c <readstat_int8_value+0x58>
    750c:	cmp	r4, #1
    7510:	beq	751c <readstat_int8_value+0x58>
    7514:	add	sp, sp, #24
    7518:	pop	{r4, pc}
    751c:	ldrb	r0, [sp, #8]
    7520:	add	sp, sp, #24
    7524:	pop	{r4, pc}
    7528:	vldr	d7, [sp, #8]
    752c:	vcvt.u32.f64	s15, d7
    7530:	vstr	s15, [sp, #4]
    7534:	ldrb	r0, [sp, #4]
    7538:	add	sp, sp, #24
    753c:	pop	{r4, pc}
    7540:	vldr	s15, [sp, #8]
    7544:	vcvt.u32.f32	s15, s15
    7548:	vstr	s15, [sp, #4]
    754c:	ldrb	r0, [sp, #4]
    7550:	b	7514 <readstat_int8_value+0x50>

00007554 <readstat_int16_value>:
    7554:	push	{r4, lr}
    7558:	sub	sp, sp, #24
    755c:	add	ip, sp, #8
    7560:	stm	ip, {r0, r1, r2, r3}
    7564:	ldm	ip, {r0, r1, r2, r3}
    7568:	ldr	r4, [sp, #16]
    756c:	bl	3ecc <readstat_value_is_system_missing@plt>
    7570:	cmp	r0, #0
    7574:	movne	r0, #0
    7578:	bne	75a4 <readstat_int16_value+0x50>
    757c:	cmp	r4, #5
    7580:	beq	75ac <readstat_int16_value+0x58>
    7584:	cmp	r4, #4
    7588:	beq	75d0 <readstat_int16_value+0x7c>
    758c:	cmp	r4, #3
    7590:	beq	75c4 <readstat_int16_value+0x70>
    7594:	cmp	r4, #2
    7598:	beq	75c4 <readstat_int16_value+0x70>
    759c:	cmp	r4, #1
    75a0:	ldrsbeq	r0, [sp, #8]
    75a4:	add	sp, sp, #24
    75a8:	pop	{r4, pc}
    75ac:	vldr	d7, [sp, #8]
    75b0:	vcvt.s32.f64	s15, d7
    75b4:	vstr	s15, [sp, #4]
    75b8:	ldrsh	r0, [sp, #4]
    75bc:	add	sp, sp, #24
    75c0:	pop	{r4, pc}
    75c4:	ldrsh	r0, [sp, #8]
    75c8:	add	sp, sp, #24
    75cc:	pop	{r4, pc}
    75d0:	vldr	s15, [sp, #8]
    75d4:	vcvt.s32.f32	s15, s15
    75d8:	vstr	s15, [sp, #4]
    75dc:	ldrsh	r0, [sp, #4]
    75e0:	b	75a4 <readstat_int16_value+0x50>

000075e4 <readstat_int32_value>:
    75e4:	push	{r4, lr}
    75e8:	sub	sp, sp, #16
    75ec:	stm	sp, {r0, r1, r2, r3}
    75f0:	ldm	sp, {r0, r1, r2, r3}
    75f4:	mov	r4, r2
    75f8:	bl	3ecc <readstat_value_is_system_missing@plt>
    75fc:	cmp	r0, #0
    7600:	movne	r0, #0
    7604:	bne	7638 <readstat_int32_value+0x54>
    7608:	cmp	r4, #5
    760c:	beq	7640 <readstat_int32_value+0x5c>
    7610:	cmp	r4, #4
    7614:	beq	7654 <readstat_int32_value+0x70>
    7618:	cmp	r4, #3
    761c:	ldreq	r0, [sp]
    7620:	beq	7638 <readstat_int32_value+0x54>
    7624:	cmp	r4, #2
    7628:	ldrsheq	r0, [sp]
    762c:	beq	7638 <readstat_int32_value+0x54>
    7630:	cmp	r4, #1
    7634:	ldrsbeq	r0, [sp]
    7638:	add	sp, sp, #16
    763c:	pop	{r4, pc}
    7640:	vldr	d7, [sp]
    7644:	vcvt.s32.f64	s15, d7
    7648:	vmov	r0, s15
    764c:	add	sp, sp, #16
    7650:	pop	{r4, pc}
    7654:	vldr	s15, [sp]
    7658:	vcvt.s32.f32	s15, s15
    765c:	vmov	r0, s15
    7660:	b	7638 <readstat_int32_value+0x54>

00007664 <readstat_float_value>:
    7664:	push	{r4, lr}
    7668:	sub	sp, sp, #16
    766c:	stm	sp, {r0, r1, r2, r3}
    7670:	ldm	sp, {r0, r1, r2, r3}
    7674:	mov	r4, r2
    7678:	bl	3ecc <readstat_value_is_system_missing@plt>
    767c:	cmp	r0, #0
    7680:	bne	76b8 <readstat_float_value+0x54>
    7684:	cmp	r4, #5
    7688:	beq	76c4 <readstat_float_value+0x60>
    768c:	cmp	r4, #4
    7690:	beq	76ac <readstat_float_value+0x48>
    7694:	cmp	r4, #3
    7698:	beq	76d4 <readstat_float_value+0x70>
    769c:	cmp	r4, #2
    76a0:	beq	76e0 <readstat_float_value+0x7c>
    76a4:	cmp	r4, #1
    76a8:	beq	76f0 <readstat_float_value+0x8c>
    76ac:	vldr	s0, [sp]
    76b0:	add	sp, sp, #16
    76b4:	pop	{r4, pc}
    76b8:	vldr	s0, [pc, #64]	; 7700 <readstat_float_value+0x9c>
    76bc:	add	sp, sp, #16
    76c0:	pop	{r4, pc}
    76c4:	vldr	d0, [sp]
    76c8:	vcvt.f32.f64	s0, d0
    76cc:	add	sp, sp, #16
    76d0:	pop	{r4, pc}
    76d4:	vldr	s15, [sp]
    76d8:	vcvt.f32.s32	s0, s15
    76dc:	b	76b0 <readstat_float_value+0x4c>
    76e0:	ldrsh	r3, [sp]
    76e4:	vmov	s0, r3
    76e8:	vcvt.f32.s32	s0, s0
    76ec:	b	76b0 <readstat_float_value+0x4c>
    76f0:	ldrsb	r3, [sp]
    76f4:	vmov	s0, r3
    76f8:	vcvt.f32.s32	s0, s0
    76fc:	b	76b0 <readstat_float_value+0x4c>
    7700:	.word	0x7fc00000

00007704 <readstat_double_value>:
    7704:	push	{r4, lr}
    7708:	sub	sp, sp, #16
    770c:	stm	sp, {r0, r1, r2, r3}
    7710:	ldm	sp, {r0, r1, r2, r3}
    7714:	mov	r4, r2
    7718:	bl	3ecc <readstat_value_is_system_missing@plt>
    771c:	cmp	r0, #0
    7720:	bne	774c <readstat_double_value+0x48>
    7724:	cmp	r4, #5
    7728:	beq	7758 <readstat_double_value+0x54>
    772c:	cmp	r4, #4
    7730:	beq	7774 <readstat_double_value+0x70>
    7734:	cmp	r4, #3
    7738:	beq	7780 <readstat_double_value+0x7c>
    773c:	cmp	r4, #2
    7740:	beq	778c <readstat_double_value+0x88>
    7744:	cmp	r4, #1
    7748:	beq	7764 <readstat_double_value+0x60>
    774c:	vldr	d0, [pc, #76]	; 77a0 <readstat_double_value+0x9c>
    7750:	add	sp, sp, #16
    7754:	pop	{r4, pc}
    7758:	vldr	d0, [sp]
    775c:	add	sp, sp, #16
    7760:	pop	{r4, pc}
    7764:	ldrsb	r3, [sp]
    7768:	vmov	s0, r3
    776c:	vcvt.f64.s32	d0, s0
    7770:	b	7750 <readstat_double_value+0x4c>
    7774:	vldr	s0, [sp]
    7778:	vcvt.f64.f32	d0, s0
    777c:	b	7750 <readstat_double_value+0x4c>
    7780:	vldr	s15, [sp]
    7784:	vcvt.f64.s32	d0, s15
    7788:	b	7750 <readstat_double_value+0x4c>
    778c:	ldrsh	r3, [sp]
    7790:	vmov	s0, r3
    7794:	vcvt.f64.s32	d0, s0
    7798:	b	7750 <readstat_double_value+0x4c>
    779c:	nop			; (mov r0, r0)
    77a0:	.word	0x00000000
    77a4:	.word	0x7ff80000

000077a8 <readstat_string_value>:
    77a8:	push	{lr}		; (str lr, [sp, #-4]!)
    77ac:	sub	sp, sp, #20
    77b0:	stm	sp, {r0, r1, r2, r3}
    77b4:	ldm	sp, {r0, r1, r2, r3}
    77b8:	bl	4340 <readstat_value_type@plt>
    77bc:	cmp	r0, #0
    77c0:	movne	r0, #0
    77c4:	ldreq	r0, [sp]
    77c8:	add	sp, sp, #20
    77cc:	pop	{pc}		; (ldr pc, [sp], #4)

000077d0 <readstat_value_is_defined_missing>:
    77d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    77d4:	vpush	{d8-d9}
    77d8:	sub	sp, sp, #80	; 0x50
    77dc:	stm	sp, {r0, r1, r2, r3}
    77e0:	ldm	sp, {r0, r1, r2, r3}
    77e4:	bl	40dc <readstat_value_type_class@plt>
    77e8:	mov	r5, r0
    77ec:	ldr	r0, [sp, #128]	; 0x80
    77f0:	bl	4544 <readstat_variable_get_type_class@plt>
    77f4:	cmp	r5, r0
    77f8:	beq	780c <readstat_value_is_defined_missing+0x3c>
    77fc:	mov	r0, #0
    7800:	add	sp, sp, #80	; 0x50
    7804:	vpop	{d8-d9}
    7808:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    780c:	ldm	sp, {r0, r1, r2, r3}
    7810:	bl	40dc <readstat_value_type_class@plt>
    7814:	subs	r5, r0, #0
    7818:	ldm	sp, {r0, r1, r2, r3}
    781c:	beq	78b8 <readstat_value_is_defined_missing+0xe8>
    7820:	bl	40dc <readstat_value_type_class@plt>
    7824:	cmp	r0, #1
    7828:	bne	77fc <readstat_value_is_defined_missing+0x2c>
    782c:	ldm	sp, {r0, r1, r2, r3}
    7830:	bl	41b4 <readstat_double_value@plt>
    7834:	ldr	r0, [sp, #128]	; 0x80
    7838:	vmov.f64	d9, d0
    783c:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
    7840:	subs	r7, r0, #0
    7844:	ble	77fc <readstat_value_is_defined_missing+0x2c>
    7848:	mov	r6, #0
    784c:	add	r5, sp, #64	; 0x40
    7850:	add	r4, sp, #48	; 0x30
    7854:	b	7860 <readstat_value_is_defined_missing+0x90>
    7858:	cmp	r7, r6
    785c:	beq	77fc <readstat_value_is_defined_missing+0x2c>
    7860:	mov	r2, r6
    7864:	ldr	r1, [sp, #128]	; 0x80
    7868:	mov	r0, r5
    786c:	bl	3f44 <readstat_variable_get_missing_range_lo@plt>
    7870:	ldm	r5, {r0, r1, r2, r3}
    7874:	bl	41b4 <readstat_double_value@plt>
    7878:	mov	r2, r6
    787c:	ldr	r1, [sp, #128]	; 0x80
    7880:	mov	r0, r4
    7884:	add	r6, r6, #1
    7888:	vmov.f64	d8, d0
    788c:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
    7890:	ldm	r4, {r0, r1, r2, r3}
    7894:	bl	41b4 <readstat_double_value@plt>
    7898:	vcmpe.f64	d9, d8
    789c:	vmrs	APSR_nzcv, fpscr
    78a0:	blt	7858 <readstat_value_is_defined_missing+0x88>
    78a4:	vcmpe.f64	d9, d0
    78a8:	vmrs	APSR_nzcv, fpscr
    78ac:	bhi	7858 <readstat_value_is_defined_missing+0x88>
    78b0:	mov	r0, #1
    78b4:	b	7800 <readstat_value_is_defined_missing+0x30>
    78b8:	bl	3fb0 <readstat_string_value@plt>
    78bc:	subs	r9, r0, #0
    78c0:	beq	77fc <readstat_value_is_defined_missing+0x2c>
    78c4:	ldr	r0, [sp, #128]	; 0x80
    78c8:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
    78cc:	subs	sl, r0, #0
    78d0:	ble	77fc <readstat_value_is_defined_missing+0x2c>
    78d4:	mov	r4, r5
    78d8:	add	r6, sp, #32
    78dc:	add	r5, sp, #16
    78e0:	b	78ec <readstat_value_is_defined_missing+0x11c>
    78e4:	cmp	sl, r4
    78e8:	beq	77fc <readstat_value_is_defined_missing+0x2c>
    78ec:	mov	r2, r4
    78f0:	ldr	r1, [sp, #128]	; 0x80
    78f4:	mov	r0, r6
    78f8:	bl	3f44 <readstat_variable_get_missing_range_lo@plt>
    78fc:	ldm	r6, {r0, r1, r2, r3}
    7900:	bl	3fb0 <readstat_string_value@plt>
    7904:	mov	r2, r4
    7908:	ldr	r1, [sp, #128]	; 0x80
    790c:	add	r4, r4, #1
    7910:	mov	r7, r0
    7914:	mov	r0, r5
    7918:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
    791c:	ldm	r5, {r0, r1, r2, r3}
    7920:	bl	3fb0 <readstat_string_value@plt>
    7924:	mov	r1, r7
    7928:	cmp	r7, #0
    792c:	cmpne	r0, #0
    7930:	mov	r8, r0
    7934:	mov	r0, r9
    7938:	beq	78e4 <readstat_value_is_defined_missing+0x114>
    793c:	bl	3e00 <strcmp@plt>
    7940:	mov	r1, r8
    7944:	cmp	r0, #0
    7948:	mov	r0, r9
    794c:	blt	78e4 <readstat_value_is_defined_missing+0x114>
    7950:	bl	3e00 <strcmp@plt>
    7954:	cmp	r0, #0
    7958:	bgt	78e4 <readstat_value_is_defined_missing+0x114>
    795c:	b	78b0 <readstat_value_is_defined_missing+0xe0>

00007960 <readstat_value_is_missing>:
    7960:	push	{lr}		; (str lr, [sp, #-4]!)
    7964:	sub	sp, sp, #20
    7968:	stm	sp, {r0, r1, r2, r3}
    796c:	ldrb	r3, [sp, #13]
    7970:	ldr	lr, [sp, #24]
    7974:	tst	r3, #3
    7978:	bne	7994 <readstat_value_is_missing+0x34>
    797c:	cmp	lr, #0
    7980:	beq	79a0 <readstat_value_is_missing+0x40>
    7984:	ldm	sp, {r0, r1, r2, r3}
    7988:	add	sp, sp, #20
    798c:	pop	{lr}		; (ldr lr, [sp], #4)
    7990:	b	3ef0 <readstat_value_is_defined_missing@plt>
    7994:	mov	r0, #1
    7998:	add	sp, sp, #20
    799c:	pop	{pc}		; (ldr pc, [sp], #4)
    79a0:	mov	r0, lr
    79a4:	add	sp, sp, #20
    79a8:	pop	{pc}		; (ldr pc, [sp], #4)

000079ac <readstat_variable_get_name>:
    79ac:	ldrb	r3, [r0, #8]
    79b0:	cmp	r3, #0
    79b4:	addne	r0, r0, #8
    79b8:	moveq	r0, r3
    79bc:	bx	lr

000079c0 <readstat_variable_get_label>:
    79c0:	ldrb	r3, [r0, #564]	; 0x234
    79c4:	cmp	r3, #0
    79c8:	addne	r0, r0, #564	; 0x234
    79cc:	moveq	r0, r3
    79d0:	bx	lr

000079d4 <readstat_variable_get_format>:
    79d4:	ldrb	r3, [r0, #308]	; 0x134
    79d8:	cmp	r3, #0
    79dc:	addne	r0, r0, #308	; 0x134
    79e0:	moveq	r0, r3
    79e4:	bx	lr

000079e8 <readstat_variable_get_type>:
    79e8:	ldr	r0, [r0]
    79ec:	bx	lr

000079f0 <readstat_variable_get_type_class>:
    79f0:	ldr	r0, [r0]
    79f4:	b	3e24 <readstat_type_class@plt>

000079f8 <readstat_variable_get_index>:
    79f8:	ldr	r0, [r0, #4]
    79fc:	bx	lr

00007a00 <readstat_variable_get_index_after_skipping>:
    7a00:	ldr	r0, [r0, #2148]	; 0x864
    7a04:	bx	lr

00007a08 <readstat_variable_get_storage_width>:
    7a08:	ldr	r0, [r0, #1596]	; 0x63c
    7a0c:	bx	lr

00007a10 <readstat_variable_get_measure>:
    7a10:	ldr	r0, [r0, #2128]	; 0x850
    7a14:	bx	lr

00007a18 <readstat_variable_get_alignment>:
    7a18:	ldr	r0, [r0, #2132]	; 0x854
    7a1c:	bx	lr

00007a20 <readstat_variable_get_display_width>:
    7a20:	ldr	r0, [r0, #2136]	; 0x858
    7a24:	bx	lr

00007a28 <readstat_variable_get_missing_ranges_count>:
    7a28:	ldr	r0, [r0, #2120]	; 0x848
    7a2c:	bx	lr

00007a30 <readstat_variable_get_missing_range_lo>:
    7a30:	ldr	r3, [r1, #2120]	; 0x848
    7a34:	mov	ip, r0
    7a38:	cmp	r3, r2
    7a3c:	ble	7a50 <readstat_variable_get_missing_range_lo+0x20>
    7a40:	lsl	r3, r2, #1
    7a44:	add	r3, r3, #1
    7a48:	cmp	r3, #31
    7a4c:	bls	7a94 <readstat_variable_get_missing_range_lo+0x64>
    7a50:	push	{r4, r5}
    7a54:	mov	r4, #0
    7a58:	ldr	r5, [pc, #80]	; 7ab0 <readstat_variable_get_missing_range_lo+0x80>
    7a5c:	sub	sp, sp, #16
    7a60:	mov	r0, #0
    7a64:	mov	r1, #5
    7a68:	mov	r2, #1
    7a6c:	str	r0, [sp, #12]
    7a70:	strd	r4, [sp]
    7a74:	str	r1, [sp, #8]
    7a78:	strb	r2, [sp, #13]
    7a7c:	ldm	sp, {r0, r1, r2, r3}
    7a80:	stm	ip, {r0, r1, r2, r3}
    7a84:	mov	r0, ip
    7a88:	add	sp, sp, #16
    7a8c:	pop	{r4, r5}
    7a90:	bx	lr
    7a94:	add	r1, r1, r2, lsl #5
    7a98:	add	r1, r1, #1600	; 0x640
    7a9c:	add	r1, r1, #8
    7aa0:	ldm	r1, {r0, r1, r2, r3}
    7aa4:	stm	ip, {r0, r1, r2, r3}
    7aa8:	mov	r0, ip
    7aac:	bx	lr
    7ab0:	.word	0x7ff80000

00007ab4 <readstat_variable_get_missing_range_hi>:
    7ab4:	ldr	r3, [r1, #2120]	; 0x848
    7ab8:	mov	ip, r0
    7abc:	cmp	r3, r2
    7ac0:	ble	7ad4 <readstat_variable_get_missing_range_hi+0x20>
    7ac4:	lsl	r2, r2, #1
    7ac8:	add	r2, r2, #1
    7acc:	cmp	r2, #31
    7ad0:	bls	7b18 <readstat_variable_get_missing_range_hi+0x64>
    7ad4:	push	{r4, r5}
    7ad8:	mov	r4, #0
    7adc:	ldr	r5, [pc, #80]	; 7b34 <readstat_variable_get_missing_range_hi+0x80>
    7ae0:	sub	sp, sp, #16
    7ae4:	mov	r0, #0
    7ae8:	mov	r1, #5
    7aec:	mov	r2, #1
    7af0:	str	r0, [sp, #12]
    7af4:	strd	r4, [sp]
    7af8:	str	r1, [sp, #8]
    7afc:	strb	r2, [sp, #13]
    7b00:	ldm	sp, {r0, r1, r2, r3}
    7b04:	stm	ip, {r0, r1, r2, r3}
    7b08:	mov	r0, ip
    7b0c:	add	sp, sp, #16
    7b10:	pop	{r4, r5}
    7b14:	bx	lr
    7b18:	add	r2, r1, r2, lsl #4
    7b1c:	add	r2, r2, #1600	; 0x640
    7b20:	add	r2, r2, #8
    7b24:	ldm	r2, {r0, r1, r2, r3}
    7b28:	stm	ip, {r0, r1, r2, r3}
    7b2c:	mov	r0, ip
    7b30:	bx	lr
    7b34:	.word	0x7ff80000

00007b38 <readstat_variable_add_missing_double_range>:
    7b38:	push	{r4, r5, r6, r7, lr}
    7b3c:	sub	sp, sp, #68	; 0x44
    7b40:	add	r4, sp, #48	; 0x30
    7b44:	vstr	d0, [sp, #48]	; 0x30
    7b48:	mov	r6, #0
    7b4c:	mov	ip, #5
    7b50:	str	r6, [sp, #60]	; 0x3c
    7b54:	str	ip, [sp, #56]	; 0x38
    7b58:	mov	r7, r0
    7b5c:	ldm	r4, {r0, r1, r2, r3}
    7b60:	vstr	d1, [sp, #48]	; 0x30
    7b64:	add	ip, sp, #16
    7b68:	add	r5, sp, #32
    7b6c:	stm	sp, {r0, r1, r2, r3}
    7b70:	ldm	r4, {r0, r1, r2, r3}
    7b74:	stm	ip, {r0, r1, r2, r3}
    7b78:	ldm	sp, {r0, r1, r2, r3}
    7b7c:	stm	r5, {r0, r1, r2, r3}
    7b80:	mov	r0, r7
    7b84:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
    7b88:	lsl	ip, r0, #1
    7b8c:	cmp	ip, #31
    7b90:	movhi	r6, #31
    7b94:	bls	7ba4 <readstat_variable_add_missing_double_range+0x6c>
    7b98:	mov	r0, r6
    7b9c:	add	sp, sp, #68	; 0x44
    7ba0:	pop	{r4, r5, r6, r7, pc}
    7ba4:	add	lr, r7, r0, lsl #5
    7ba8:	ldm	r5, {r0, r1, r2, r3}
    7bac:	add	lr, lr, #1600	; 0x640
    7bb0:	add	lr, lr, #8
    7bb4:	add	ip, r7, ip, lsl #4
    7bb8:	stm	lr, {r0, r1, r2, r3}
    7bbc:	add	ip, ip, #1616	; 0x650
    7bc0:	ldm	r4, {r0, r1, r2, r3}
    7bc4:	add	ip, ip, #8
    7bc8:	ldr	lr, [r7, #2120]	; 0x848
    7bcc:	add	lr, lr, #1
    7bd0:	stm	ip, {r0, r1, r2, r3}
    7bd4:	mov	r0, r6
    7bd8:	str	lr, [r7, #2120]	; 0x848
    7bdc:	add	sp, sp, #68	; 0x44
    7be0:	pop	{r4, r5, r6, r7, pc}

00007be4 <readstat_variable_add_missing_double_value>:
    7be4:	push	{r4, r5, r6, r7, lr}
    7be8:	sub	sp, sp, #68	; 0x44
    7bec:	add	r4, sp, #48	; 0x30
    7bf0:	vstr	d0, [sp, #48]	; 0x30
    7bf4:	mov	r6, #0
    7bf8:	mov	ip, #5
    7bfc:	str	r6, [sp, #60]	; 0x3c
    7c00:	str	ip, [sp, #56]	; 0x38
    7c04:	mov	r7, r0
    7c08:	ldm	r4, {r0, r1, r2, r3}
    7c0c:	add	ip, sp, #16
    7c10:	add	r5, sp, #32
    7c14:	stm	sp, {r0, r1, r2, r3}
    7c18:	ldm	r4, {r0, r1, r2, r3}
    7c1c:	stm	ip, {r0, r1, r2, r3}
    7c20:	ldm	sp, {r0, r1, r2, r3}
    7c24:	stm	r5, {r0, r1, r2, r3}
    7c28:	mov	r0, r7
    7c2c:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
    7c30:	lsl	ip, r0, #1
    7c34:	cmp	ip, #31
    7c38:	movhi	r6, #31
    7c3c:	bls	7c4c <readstat_variable_add_missing_double_value+0x68>
    7c40:	mov	r0, r6
    7c44:	add	sp, sp, #68	; 0x44
    7c48:	pop	{r4, r5, r6, r7, pc}
    7c4c:	add	lr, r7, r0, lsl #5
    7c50:	ldm	r5, {r0, r1, r2, r3}
    7c54:	add	lr, lr, #1600	; 0x640
    7c58:	add	lr, lr, #8
    7c5c:	add	ip, r7, ip, lsl #4
    7c60:	stm	lr, {r0, r1, r2, r3}
    7c64:	add	ip, ip, #1616	; 0x650
    7c68:	ldm	r4, {r0, r1, r2, r3}
    7c6c:	add	ip, ip, #8
    7c70:	ldr	lr, [r7, #2120]	; 0x848
    7c74:	add	lr, lr, #1
    7c78:	stm	ip, {r0, r1, r2, r3}
    7c7c:	mov	r0, r6
    7c80:	str	lr, [r7, #2120]	; 0x848
    7c84:	add	sp, sp, #68	; 0x44
    7c88:	pop	{r4, r5, r6, r7, pc}

00007c8c <readstat_variable_add_missing_string_range>:
    7c8c:	push	{r4, r5, r6, r7, lr}
    7c90:	sub	sp, sp, #68	; 0x44
    7c94:	add	r4, sp, #48	; 0x30
    7c98:	mov	r5, #0
    7c9c:	str	r1, [sp, #48]	; 0x30
    7ca0:	str	r5, [sp, #52]	; 0x34
    7ca4:	str	r5, [sp, #56]	; 0x38
    7ca8:	str	r5, [sp, #60]	; 0x3c
    7cac:	mov	ip, r2
    7cb0:	mov	r7, r0
    7cb4:	ldm	r4, {r0, r1, r2, r3}
    7cb8:	add	r6, sp, #32
    7cbc:	str	ip, [sp, #48]	; 0x30
    7cc0:	add	ip, sp, #16
    7cc4:	stm	sp, {r0, r1, r2, r3}
    7cc8:	ldm	r4, {r0, r1, r2, r3}
    7ccc:	stm	ip, {r0, r1, r2, r3}
    7cd0:	ldm	sp, {r0, r1, r2, r3}
    7cd4:	stm	r6, {r0, r1, r2, r3}
    7cd8:	mov	r0, r7
    7cdc:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
    7ce0:	lsl	ip, r0, #1
    7ce4:	cmp	ip, #31
    7ce8:	movhi	r5, #31
    7cec:	bls	7cfc <readstat_variable_add_missing_string_range+0x70>
    7cf0:	mov	r0, r5
    7cf4:	add	sp, sp, #68	; 0x44
    7cf8:	pop	{r4, r5, r6, r7, pc}
    7cfc:	add	lr, r7, r0, lsl #5
    7d00:	ldm	r6, {r0, r1, r2, r3}
    7d04:	add	lr, lr, #1600	; 0x640
    7d08:	add	lr, lr, #8
    7d0c:	add	ip, r7, ip, lsl #4
    7d10:	stm	lr, {r0, r1, r2, r3}
    7d14:	add	ip, ip, #1616	; 0x650
    7d18:	ldm	r4, {r0, r1, r2, r3}
    7d1c:	add	ip, ip, #8
    7d20:	ldr	lr, [r7, #2120]	; 0x848
    7d24:	add	lr, lr, #1
    7d28:	stm	ip, {r0, r1, r2, r3}
    7d2c:	mov	r0, r5
    7d30:	str	lr, [r7, #2120]	; 0x848
    7d34:	add	sp, sp, #68	; 0x44
    7d38:	pop	{r4, r5, r6, r7, pc}

00007d3c <readstat_variable_add_missing_string_value>:
    7d3c:	push	{r4, r5, r6, r7, lr}
    7d40:	sub	sp, sp, #68	; 0x44
    7d44:	add	r4, sp, #48	; 0x30
    7d48:	mov	r5, #0
    7d4c:	str	r5, [sp, #52]	; 0x34
    7d50:	str	r5, [sp, #56]	; 0x38
    7d54:	str	r5, [sp, #60]	; 0x3c
    7d58:	str	r1, [sp, #48]	; 0x30
    7d5c:	mov	r7, r0
    7d60:	ldm	r4, {r0, r1, r2, r3}
    7d64:	add	ip, sp, #16
    7d68:	add	r6, sp, #32
    7d6c:	stm	ip, {r0, r1, r2, r3}
    7d70:	stm	sp, {r0, r1, r2, r3}
    7d74:	stm	r6, {r0, r1, r2, r3}
    7d78:	mov	r0, r7
    7d7c:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
    7d80:	lsl	ip, r0, #1
    7d84:	cmp	ip, #31
    7d88:	movhi	r5, #31
    7d8c:	bls	7d9c <readstat_variable_add_missing_string_value+0x60>
    7d90:	mov	r0, r5
    7d94:	add	sp, sp, #68	; 0x44
    7d98:	pop	{r4, r5, r6, r7, pc}
    7d9c:	add	lr, r7, r0, lsl #5
    7da0:	ldm	r6, {r0, r1, r2, r3}
    7da4:	add	lr, lr, #1600	; 0x640
    7da8:	add	lr, lr, #8
    7dac:	add	ip, r7, ip, lsl #4
    7db0:	stm	lr, {r0, r1, r2, r3}
    7db4:	add	ip, ip, #1616	; 0x650
    7db8:	ldm	r4, {r0, r1, r2, r3}
    7dbc:	add	ip, ip, #8
    7dc0:	ldr	lr, [r7, #2120]	; 0x848
    7dc4:	add	lr, lr, #1
    7dc8:	stm	ip, {r0, r1, r2, r3}
    7dcc:	mov	r0, r5
    7dd0:	str	lr, [r7, #2120]	; 0x848
    7dd4:	add	sp, sp, #68	; 0x44
    7dd8:	pop	{r4, r5, r6, r7, pc}

00007ddc <readstat_compare_string_refs>:
    7ddc:	ldr	ip, [r1]
    7de0:	push	{lr}		; (str lr, [sp, #-4]!)
    7de4:	ldr	lr, [r0]
    7de8:	ldrd	r2, [ip]
    7dec:	ldrd	r0, [lr]
    7df0:	cmp	r1, r3
    7df4:	cmpeq	r0, r2
    7df8:	ldreq	r0, [lr, #8]
    7dfc:	ldreq	r3, [ip, #8]
    7e00:	subeq	r0, r0, r3
    7e04:	subne	r0, r0, r2
    7e08:	pop	{pc}		; (ldr pc, [sp], #4)

00007e0c <readstat_string_ref_init>:
    7e0c:	push	{r4, r5, r6, r7, r8, lr}
    7e10:	mov	r8, r0
    7e14:	bl	41fc <strlen@plt>
    7e18:	mvn	r6, #0
    7e1c:	mvn	r7, #0
    7e20:	add	r1, r0, #25
    7e24:	mov	r5, r0
    7e28:	mov	r0, #1
    7e2c:	add	r5, r5, r0
    7e30:	bl	3d58 <calloc@plt>
    7e34:	mov	r1, r8
    7e38:	mov	r2, r5
    7e3c:	mov	r4, r0
    7e40:	add	r0, r0, #20
    7e44:	str	r5, [r4, #16]
    7e48:	strd	r6, [r4, #8]
    7e4c:	strd	r6, [r4]
    7e50:	bl	3f20 <memcpy@plt>
    7e54:	mov	r0, r4
    7e58:	pop	{r4, r5, r6, r7, r8, pc}

00007e5c <readstat_writer_init>:
    7e5c:	push	{r4, r5, r6, lr}
    7e60:	mov	r1, #312	; 0x138
    7e64:	mov	r0, #1
    7e68:	bl	3d58 <calloc@plt>
    7e6c:	mov	r1, #4
    7e70:	mov	r5, #50	; 0x32
    7e74:	mov	r4, r0
    7e78:	mov	r0, #50	; 0x32
    7e7c:	bl	3d58 <calloc@plt>
    7e80:	mov	r1, #4
    7e84:	str	r5, [r4, #32]
    7e88:	str	r0, [r4, #24]
    7e8c:	mov	r0, r5
    7e90:	bl	3d58 <calloc@plt>
    7e94:	mov	r1, #4
    7e98:	str	r5, [r4, #44]	; 0x2c
    7e9c:	str	r0, [r4, #36]	; 0x24
    7ea0:	mov	r0, r5
    7ea4:	bl	3d58 <calloc@plt>
    7ea8:	mov	r1, #4
    7eac:	str	r5, [r4, #56]	; 0x38
    7eb0:	str	r0, [r4, #48]	; 0x30
    7eb4:	mov	r0, #100	; 0x64
    7eb8:	bl	3d58 <calloc@plt>
    7ebc:	mov	r3, #100	; 0x64
    7ec0:	str	r3, [r4, #68]	; 0x44
    7ec4:	str	r0, [r4, #60]	; 0x3c
    7ec8:	mov	r0, #0
    7ecc:	bl	3f5c <time@plt>
    7ed0:	ldr	r3, [pc, #24]	; 7ef0 <readstat_writer_init+0x94>
    7ed4:	mov	r2, #1
    7ed8:	add	r3, pc, r3
    7edc:	str	r2, [r4, #12]
    7ee0:	str	r3, [r4, #280]	; 0x118
    7ee4:	str	r0, [r4, #20]
    7ee8:	mov	r0, r4
    7eec:	pop	{r4, r5, r6, pc}
    7ef0:	.word	0x000000bc

00007ef4 <readstat_validate_variable>:
    7ef4:	ldr	r3, [r0, #308]	; 0x134
    7ef8:	cmp	r3, #0
    7efc:	bne	7f08 <readstat_validate_variable+0x14>
    7f00:	mov	r0, #14
    7f04:	bx	lr
    7f08:	ldr	r3, [r0, #232]	; 0xe8
    7f0c:	cmp	r3, #0
    7f10:	beq	7f1c <readstat_validate_variable+0x28>
    7f14:	mov	r0, r1
    7f18:	bx	r3
    7f1c:	mov	r0, r3
    7f20:	bx	lr

00007f24 <readstat_validate_metadata>:
    7f24:	ldr	r2, [r0, #308]	; 0x134
    7f28:	cmp	r2, #0
    7f2c:	bne	7f38 <readstat_validate_metadata+0x14>
    7f30:	mov	r0, #14
    7f34:	bx	lr
    7f38:	ldr	r3, [r0, #292]	; 0x124
    7f3c:	cmp	r3, #0
    7f40:	beq	7f48 <readstat_validate_metadata+0x24>
    7f44:	bx	r3
    7f48:	mov	r0, r3
    7f4c:	bx	lr

00007f50 <readstat_set_data_writer>:
    7f50:	str	r1, [r0]
    7f54:	mov	r0, #0
    7f58:	bx	lr

00007f5c <readstat_write_bytes>:
    7f5c:	push	{r4, r5, r6, lr}
    7f60:	mov	r4, r0
    7f64:	mov	r5, r2
    7f68:	ldr	r3, [r4]
    7f6c:	ldr	r2, [r4, #304]	; 0x130
    7f70:	mov	r0, r1
    7f74:	mov	r1, r5
    7f78:	blx	r3
    7f7c:	cmp	r5, r0
    7f80:	movls	r3, r0
    7f84:	ldrls	r2, [r4, #4]
    7f88:	movls	r0, #0
    7f8c:	addls	r3, r2, r3
    7f90:	strls	r3, [r4, #4]
    7f94:	movhi	r0, #13
    7f98:	pop	{r4, r5, r6, pc}

00007f9c <readstat_write_row_default_callback>:
    7f9c:	b	4454 <readstat_write_bytes@plt>

00007fa0 <readstat_write_bytes_as_lines>:
    7fa0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    7fa4:	mov	r5, r0
    7fa8:	ldr	r0, [sp, #32]
    7fac:	mov	r6, r2
    7fb0:	mov	r7, r3
    7fb4:	mov	r9, r1
    7fb8:	bl	41fc <strlen@plt>
    7fbc:	cmp	r6, #0
    7fc0:	movne	r4, #0
    7fc4:	movne	sl, r0
    7fc8:	addne	r8, sl, r7
    7fcc:	bne	8000 <readstat_write_bytes_as_lines+0x60>
    7fd0:	b	8054 <readstat_write_bytes_as_lines+0xb4>
    7fd4:	bl	4454 <readstat_write_bytes@plt>
    7fd8:	mov	r4, r6
    7fdc:	cmp	r0, #0
    7fe0:	mov	r1, r8
    7fe4:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
    7fe8:	ldr	r0, [r5, #4]
    7fec:	bl	24f80 <__aeabi_uidivmod>
    7ff0:	cmp	r7, r1
    7ff4:	beq	8038 <readstat_write_bytes_as_lines+0x98>
    7ff8:	cmp	r4, r6
    7ffc:	bcs	8054 <readstat_write_bytes_as_lines+0xb4>
    8000:	mov	r1, r8
    8004:	ldr	r0, [r5, #4]
    8008:	bl	24f80 <__aeabi_uidivmod>
    800c:	sub	r3, r6, r4
    8010:	mov	r0, r5
    8014:	mov	r2, r3
    8018:	sub	ip, r7, r1
    801c:	cmp	ip, r3
    8020:	add	r1, r9, r4
    8024:	bhi	7fd4 <readstat_write_bytes_as_lines+0x34>
    8028:	mov	r2, ip
    802c:	add	r4, r4, ip
    8030:	bl	4454 <readstat_write_bytes@plt>
    8034:	b	7fdc <readstat_write_bytes_as_lines+0x3c>
    8038:	mov	r2, sl
    803c:	ldr	r1, [sp, #32]
    8040:	mov	r0, r5
    8044:	bl	4454 <readstat_write_bytes@plt>
    8048:	cmp	r0, #0
    804c:	beq	7ff8 <readstat_write_bytes_as_lines+0x58>
    8050:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    8054:	mov	r0, #0
    8058:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

0000805c <readstat_write_line_padding>:
    805c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    8060:	mov	r5, r0
    8064:	mov	r0, r3
    8068:	mov	r4, r2
    806c:	mov	r6, r3
    8070:	mov	r8, r1
    8074:	bl	41fc <strlen@plt>
    8078:	add	r1, r0, r4
    807c:	mov	r7, r0
    8080:	ldr	r0, [r5, #4]
    8084:	bl	24f80 <__aeabi_uidivmod>
    8088:	cmp	r1, #0
    808c:	bne	8098 <readstat_write_line_padding+0x3c>
    8090:	mov	r0, #0
    8094:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    8098:	sub	r4, r4, r1
    809c:	mov	r0, r4
    80a0:	bl	410c <malloc@plt>
    80a4:	mov	r2, r4
    80a8:	mov	r1, r8
    80ac:	mov	r9, r0
    80b0:	bl	42a4 <memset@plt>
    80b4:	mov	r2, r4
    80b8:	mov	r1, r9
    80bc:	mov	r0, r5
    80c0:	bl	4454 <readstat_write_bytes@plt>
    80c4:	cmp	r0, #0
    80c8:	beq	80dc <readstat_write_line_padding+0x80>
    80cc:	mov	r0, r9
    80d0:	bl	3ec0 <free@plt>
    80d4:	mov	r0, #0
    80d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    80dc:	mov	r2, r7
    80e0:	mov	r1, r6
    80e4:	mov	r0, r5
    80e8:	bl	4454 <readstat_write_bytes@plt>
    80ec:	b	80cc <readstat_write_line_padding+0x70>

000080f0 <readstat_write_string>:
    80f0:	push	{r4, r5, r6, lr}
    80f4:	mov	r5, r0
    80f8:	mov	r0, r1
    80fc:	mov	r4, r1
    8100:	bl	41fc <strlen@plt>
    8104:	mov	r1, r4
    8108:	mov	r2, r0
    810c:	mov	r0, r5
    8110:	pop	{r4, r5, r6, lr}
    8114:	b	4454 <readstat_write_bytes@plt>

00008118 <readstat_write_zeros>:
    8118:	push	{r4, r5, fp, lr}
    811c:	subs	r4, r1, #0
    8120:	add	fp, sp, #12
    8124:	moveq	r0, r4
    8128:	beq	815c <readstat_write_zeros+0x44>
    812c:	add	r3, r4, #7
    8130:	bic	r3, r3, #7
    8134:	sub	sp, sp, r3
    8138:	mov	r5, r0
    813c:	mov	r2, r4
    8140:	mov	r1, #0
    8144:	mov	r0, sp
    8148:	bl	42a4 <memset@plt>
    814c:	mov	r2, r4
    8150:	mov	r1, sp
    8154:	mov	r0, r5
    8158:	bl	4454 <readstat_write_bytes@plt>
    815c:	sub	sp, fp, #12
    8160:	pop	{r4, r5, fp, pc}

00008164 <readstat_write_spaces>:
    8164:	push	{r4, r5, fp, lr}
    8168:	subs	r4, r1, #0
    816c:	add	fp, sp, #12
    8170:	moveq	r0, r4
    8174:	beq	81a8 <readstat_write_spaces+0x44>
    8178:	add	r3, r4, #7
    817c:	bic	r3, r3, #7
    8180:	sub	sp, sp, r3
    8184:	mov	r5, r0
    8188:	mov	r2, r4
    818c:	mov	r1, #32
    8190:	mov	r0, sp
    8194:	bl	42a4 <memset@plt>
    8198:	mov	r2, r4
    819c:	mov	r1, sp
    81a0:	mov	r0, r5
    81a4:	bl	4454 <readstat_write_bytes@plt>
    81a8:	sub	sp, fp, #12
    81ac:	pop	{r4, r5, fp, pc}

000081b0 <readstat_write_space_padded_string>:
    81b0:	push	{r4, r5, r6, lr}
    81b4:	subs	r4, r1, #0
    81b8:	beq	820c <readstat_write_space_padded_string+0x5c>
    81bc:	ldrb	r1, [r4]
    81c0:	cmp	r1, #0
    81c4:	beq	820c <readstat_write_space_padded_string+0x5c>
    81c8:	mov	r6, r0
    81cc:	mov	r0, r4
    81d0:	mov	r5, r2
    81d4:	bl	41fc <strlen@plt>
    81d8:	mov	r1, r4
    81dc:	cmp	r0, r5
    81e0:	movcc	r4, r0
    81e4:	movcs	r4, r5
    81e8:	mov	r2, r4
    81ec:	mov	r0, r6
    81f0:	bl	4454 <readstat_write_bytes@plt>
    81f4:	cmp	r0, #0
    81f8:	popne	{r4, r5, r6, pc}
    81fc:	sub	r1, r5, r4
    8200:	mov	r0, r6
    8204:	pop	{r4, r5, r6, lr}
    8208:	b	3ddc <readstat_write_spaces@plt>
    820c:	mov	r1, r2
    8210:	pop	{r4, r5, r6, lr}
    8214:	b	3ddc <readstat_write_spaces@plt>

00008218 <readstat_add_label_set>:
    8218:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    821c:	mov	r5, r0
    8220:	ldr	r6, [r0, #40]	; 0x28
    8224:	ldr	r3, [r0, #44]	; 0x2c
    8228:	mov	r7, r1
    822c:	cmp	r6, r3
    8230:	mov	r9, r2
    8234:	beq	82a8 <readstat_add_label_set+0x90>
    8238:	ldr	r8, [r0, #36]	; 0x24
    823c:	mov	r1, #284	; 0x11c
    8240:	mov	r0, #1
    8244:	bl	3d58 <calloc@plt>
    8248:	ldr	r2, [pc, #124]	; 82cc <readstat_add_label_set+0xb4>
    824c:	add	r1, r6, #1
    8250:	mov	r3, r9
    8254:	str	r1, [r5, #40]	; 0x28
    8258:	add	r2, pc, r2
    825c:	mov	r1, #256	; 0x100
    8260:	mov	r4, r0
    8264:	str	r0, [r8, r6, lsl #2]
    8268:	str	r7, [r0], #4
    826c:	bl	4280 <snprintf@plt>
    8270:	mov	r1, #32
    8274:	mov	r0, #10
    8278:	bl	3d58 <calloc@plt>
    827c:	mov	r3, #10
    8280:	mov	r1, #4
    8284:	str	r3, [r4, #268]	; 0x10c
    8288:	str	r0, [r4, #260]	; 0x104
    828c:	mov	r0, #2
    8290:	bl	3d58 <calloc@plt>
    8294:	mov	r3, #2
    8298:	str	r3, [r4, #280]	; 0x118
    829c:	str	r0, [r4, #272]	; 0x110
    82a0:	mov	r0, r4
    82a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    82a8:	lsl	r3, r6, #1
    82ac:	str	r3, [r0, #44]	; 0x2c
    82b0:	lsl	r1, r6, #3
    82b4:	ldr	r0, [r0, #36]	; 0x24
    82b8:	bl	3ff8 <realloc@plt>
    82bc:	ldr	r6, [r5, #40]	; 0x28
    82c0:	mov	r8, r0
    82c4:	str	r0, [r5, #36]	; 0x24
    82c8:	b	823c <readstat_add_label_set+0x24>
    82cc:	.word	0x0001de7c

000082d0 <readstat_get_label_set>:
    82d0:	ldr	r3, [r0, #40]	; 0x28
    82d4:	cmp	r3, r1
    82d8:	ldrgt	r3, [r0, #36]	; 0x24
    82dc:	ldrgt	r0, [r3, r1, lsl #2]
    82e0:	movle	r0, #0
    82e4:	bx	lr

000082e8 <readstat_sort_label_set>:
    82e8:	mov	r2, r0
    82ec:	mov	r3, r1
    82f0:	ldr	r0, [r0, #260]	; 0x104
    82f4:	ldr	r1, [r2, #264]	; 0x108
    82f8:	mov	r2, #32
    82fc:	b	443c <qsort@plt>

00008300 <readstat_get_value_label>:
    8300:	ldr	r3, [r0, #264]	; 0x108
    8304:	cmp	r3, r1
    8308:	ldrgt	r0, [r0, #260]	; 0x104
    830c:	addgt	r0, r0, r1, lsl #5
    8310:	movle	r0, #0
    8314:	bx	lr

00008318 <readstat_writer_free>:
    8318:	push	{r4, r5, r6, r7, r8, lr}
    831c:	subs	r7, r0, #0
    8320:	popeq	{r4, r5, r6, r7, r8, pc}
    8324:	ldr	r3, [r7, #288]	; 0x120
    8328:	cmp	r3, #0
    832c:	beq	8340 <readstat_writer_free+0x28>
    8330:	ldr	r0, [r7, #300]	; 0x12c
    8334:	cmp	r0, #0
    8338:	beq	8340 <readstat_writer_free+0x28>
    833c:	blx	r3
    8340:	ldr	r0, [r7, #24]
    8344:	cmp	r0, #0
    8348:	beq	837c <readstat_writer_free+0x64>
    834c:	ldr	r3, [r7, #28]
    8350:	cmp	r3, #0
    8354:	ble	8378 <readstat_writer_free+0x60>
    8358:	mov	r4, #0
    835c:	ldr	r0, [r0, r4, lsl #2]
    8360:	bl	3ec0 <free@plt>
    8364:	ldr	r3, [r7, #28]
    8368:	add	r4, r4, #1
    836c:	cmp	r3, r4
    8370:	ldr	r0, [r7, #24]
    8374:	bgt	835c <readstat_writer_free+0x44>
    8378:	bl	3ec0 <free@plt>
    837c:	ldr	r0, [r7, #36]	; 0x24
    8380:	cmp	r0, #0
    8384:	beq	8420 <readstat_writer_free+0x108>
    8388:	ldr	r3, [r7, #40]	; 0x28
    838c:	cmp	r3, #0
    8390:	ble	841c <readstat_writer_free+0x104>
    8394:	mov	r8, #0
    8398:	ldr	r6, [r0, r8, lsl #2]
    839c:	ldr	r3, [r6, #264]	; 0x108
    83a0:	cmp	r3, #0
    83a4:	movgt	r4, #0
    83a8:	ble	83ec <readstat_writer_free+0xd4>
    83ac:	mov	r1, r4
    83b0:	mov	r0, r6
    83b4:	bl	44cc <readstat_get_value_label@plt>
    83b8:	add	r4, r4, #1
    83bc:	ldr	r3, [r0, #24]
    83c0:	mov	r5, r0
    83c4:	subs	r0, r3, #0
    83c8:	beq	83d0 <readstat_writer_free+0xb8>
    83cc:	bl	3ec0 <free@plt>
    83d0:	ldr	r3, [r5, #16]
    83d4:	subs	r0, r3, #0
    83d8:	beq	83e0 <readstat_writer_free+0xc8>
    83dc:	bl	3ec0 <free@plt>
    83e0:	ldr	r3, [r6, #264]	; 0x108
    83e4:	cmp	r4, r3
    83e8:	blt	83ac <readstat_writer_free+0x94>
    83ec:	ldr	r0, [r6, #260]	; 0x104
    83f0:	bl	3ec0 <free@plt>
    83f4:	ldr	r0, [r6, #272]	; 0x110
    83f8:	bl	3ec0 <free@plt>
    83fc:	mov	r0, r6
    8400:	bl	3ec0 <free@plt>
    8404:	ldr	r3, [r7, #40]	; 0x28
    8408:	add	r8, r8, #1
    840c:	cmp	r3, r8
    8410:	ldrgt	r0, [r7, #36]	; 0x24
    8414:	bgt	8398 <readstat_writer_free+0x80>
    8418:	ldr	r0, [r7, #36]	; 0x24
    841c:	bl	3ec0 <free@plt>
    8420:	ldr	r0, [r7, #48]	; 0x30
    8424:	cmp	r0, #0
    8428:	beq	845c <readstat_writer_free+0x144>
    842c:	ldr	r3, [r7, #52]	; 0x34
    8430:	cmp	r3, #0
    8434:	ble	8458 <readstat_writer_free+0x140>
    8438:	mov	r4, #0
    843c:	ldr	r0, [r0, r4, lsl #2]
    8440:	bl	3ec0 <free@plt>
    8444:	ldr	r3, [r7, #52]	; 0x34
    8448:	add	r4, r4, #1
    844c:	cmp	r3, r4
    8450:	ldr	r0, [r7, #48]	; 0x30
    8454:	bgt	843c <readstat_writer_free+0x124>
    8458:	bl	3ec0 <free@plt>
    845c:	ldr	r0, [r7, #60]	; 0x3c
    8460:	cmp	r0, #0
    8464:	beq	8498 <readstat_writer_free+0x180>
    8468:	ldr	r3, [r7, #64]	; 0x40
    846c:	cmp	r3, #0
    8470:	ble	8494 <readstat_writer_free+0x17c>
    8474:	mov	r4, #0
    8478:	ldr	r0, [r0, r4, lsl #2]
    847c:	bl	3ec0 <free@plt>
    8480:	ldr	r3, [r7, #64]	; 0x40
    8484:	add	r4, r4, #1
    8488:	cmp	r3, r4
    848c:	ldr	r0, [r7, #60]	; 0x3c
    8490:	bgt	8478 <readstat_writer_free+0x160>
    8494:	bl	3ec0 <free@plt>
    8498:	ldr	r0, [r7, #72]	; 0x48
    849c:	cmp	r0, #0
    84a0:	beq	84a8 <readstat_writer_free+0x190>
    84a4:	bl	3ec0 <free@plt>
    84a8:	mov	r0, r7
    84ac:	pop	{r4, r5, r6, r7, r8, lr}
    84b0:	b	3ec0 <free@plt>

000084b4 <readstat_get_label_set_variable>:
    84b4:	ldr	r3, [r0, #276]	; 0x114
    84b8:	cmp	r3, r1
    84bc:	ldrgt	r3, [r0, #272]	; 0x110
    84c0:	ldrgt	r0, [r3, r1, lsl #2]
    84c4:	movle	r0, #0
    84c8:	bx	lr

000084cc <readstat_label_double_value>:
    84cc:	ldr	r3, [r0, #264]	; 0x108
    84d0:	ldr	r2, [r0, #268]	; 0x10c
    84d4:	push	{r4, r5, r6, lr}
    84d8:	cmp	r3, r2
    84dc:	vpush	{d8}
    84e0:	mov	r5, r0
    84e4:	vmov.f64	d8, d0
    84e8:	mov	r6, r1
    84ec:	beq	855c <readstat_label_double_value+0x90>
    84f0:	ldr	r4, [r0, #260]	; 0x104
    84f4:	add	r4, r4, r3, lsl #5
    84f8:	add	r3, r3, #1
    84fc:	str	r3, [r5, #264]	; 0x108
    8500:	mov	r0, r4
    8504:	mov	r2, #32
    8508:	mov	r1, #0
    850c:	bl	42a4 <memset@plt>
    8510:	cmp	r6, #0
    8514:	beq	8548 <readstat_label_double_value+0x7c>
    8518:	ldrb	r3, [r6]
    851c:	cmp	r3, #0
    8520:	beq	8548 <readstat_label_double_value+0x7c>
    8524:	mov	r0, r6
    8528:	bl	41fc <strlen@plt>
    852c:	str	r0, [r4, #28]
    8530:	mov	r5, r0
    8534:	bl	410c <malloc@plt>
    8538:	mov	r2, r5
    853c:	mov	r1, r6
    8540:	str	r0, [r4, #24]
    8544:	bl	3f20 <memcpy@plt>
    8548:	vcvt.s32.f64	s15, d8
    854c:	vstr	d8, [r4]
    8550:	vpop	{d8}
    8554:	vstr	s15, [r4, #8]
    8558:	pop	{r4, r5, r6, pc}
    855c:	lsl	r2, r3, #1
    8560:	str	r2, [r0, #268]	; 0x10c
    8564:	lsl	r1, r3, #6
    8568:	ldr	r0, [r0, #260]	; 0x104
    856c:	bl	3ff8 <realloc@plt>
    8570:	ldr	r3, [r5, #264]	; 0x108
    8574:	mov	r4, r0
    8578:	str	r0, [r5, #260]	; 0x104
    857c:	b	84f4 <readstat_label_double_value+0x28>

00008580 <readstat_label_int32_value>:
    8580:	push	{r4, r5, r6, r7, r8, lr}
    8584:	mov	r7, r1
    8588:	ldr	r3, [r0, #268]	; 0x10c
    858c:	ldr	r1, [r0, #264]	; 0x108
    8590:	mov	r5, r0
    8594:	cmp	r1, r3
    8598:	mov	r6, r2
    859c:	beq	860c <readstat_label_int32_value+0x8c>
    85a0:	ldr	r4, [r0, #260]	; 0x104
    85a4:	add	r4, r4, r1, lsl #5
    85a8:	add	r1, r1, #1
    85ac:	str	r1, [r5, #264]	; 0x108
    85b0:	mov	r0, r4
    85b4:	mov	r2, #32
    85b8:	mov	r1, #0
    85bc:	bl	42a4 <memset@plt>
    85c0:	cmp	r6, #0
    85c4:	beq	85f8 <readstat_label_int32_value+0x78>
    85c8:	ldrb	r3, [r6]
    85cc:	cmp	r3, #0
    85d0:	beq	85f8 <readstat_label_int32_value+0x78>
    85d4:	mov	r0, r6
    85d8:	bl	41fc <strlen@plt>
    85dc:	str	r0, [r4, #28]
    85e0:	mov	r5, r0
    85e4:	bl	410c <malloc@plt>
    85e8:	mov	r2, r5
    85ec:	mov	r1, r6
    85f0:	str	r0, [r4, #24]
    85f4:	bl	3f20 <memcpy@plt>
    85f8:	vmov	s15, r7
    85fc:	str	r7, [r4, #8]
    8600:	vcvt.f64.s32	d7, s15
    8604:	vstr	d7, [r4]
    8608:	pop	{r4, r5, r6, r7, r8, pc}
    860c:	lsl	r3, r1, #1
    8610:	str	r3, [r0, #268]	; 0x10c
    8614:	lsl	r1, r1, #6
    8618:	ldr	r0, [r0, #260]	; 0x104
    861c:	bl	3ff8 <realloc@plt>
    8620:	ldr	r1, [r5, #264]	; 0x108
    8624:	mov	r4, r0
    8628:	str	r0, [r5, #260]	; 0x104
    862c:	b	85a4 <readstat_label_int32_value+0x24>

00008630 <readstat_label_string_value>:
    8630:	push	{r4, r5, r6, r7, r8, lr}
    8634:	mov	r7, r1
    8638:	ldr	r3, [r0, #268]	; 0x10c
    863c:	ldr	r1, [r0, #264]	; 0x108
    8640:	mov	r4, r0
    8644:	cmp	r1, r3
    8648:	mov	r6, r2
    864c:	beq	86e4 <readstat_label_string_value+0xb4>
    8650:	ldr	r5, [r0, #260]	; 0x104
    8654:	add	r5, r5, r1, lsl #5
    8658:	add	r1, r1, #1
    865c:	str	r1, [r4, #264]	; 0x108
    8660:	mov	r0, r5
    8664:	mov	r2, #32
    8668:	mov	r1, #0
    866c:	bl	42a4 <memset@plt>
    8670:	cmp	r6, #0
    8674:	beq	86a8 <readstat_label_string_value+0x78>
    8678:	ldrb	r3, [r6]
    867c:	cmp	r3, #0
    8680:	beq	86a8 <readstat_label_string_value+0x78>
    8684:	mov	r0, r6
    8688:	bl	41fc <strlen@plt>
    868c:	str	r0, [r5, #28]
    8690:	mov	r4, r0
    8694:	bl	410c <malloc@plt>
    8698:	mov	r2, r4
    869c:	mov	r1, r6
    86a0:	str	r0, [r5, #24]
    86a4:	bl	3f20 <memcpy@plt>
    86a8:	cmp	r7, #0
    86ac:	popeq	{r4, r5, r6, r7, r8, pc}
    86b0:	ldrb	r3, [r7]
    86b4:	cmp	r3, #0
    86b8:	popeq	{r4, r5, r6, r7, r8, pc}
    86bc:	mov	r0, r7
    86c0:	bl	41fc <strlen@plt>
    86c4:	str	r0, [r5, #20]
    86c8:	mov	r4, r0
    86cc:	bl	410c <malloc@plt>
    86d0:	mov	r2, r4
    86d4:	mov	r1, r7
    86d8:	str	r0, [r5, #16]
    86dc:	pop	{r4, r5, r6, r7, r8, lr}
    86e0:	b	3f20 <memcpy@plt>
    86e4:	lsl	r3, r1, #1
    86e8:	str	r3, [r0, #268]	; 0x10c
    86ec:	lsl	r1, r1, #6
    86f0:	ldr	r0, [r0, #260]	; 0x104
    86f4:	bl	3ff8 <realloc@plt>
    86f8:	ldr	r1, [r4, #264]	; 0x108
    86fc:	mov	r5, r0
    8700:	str	r0, [r4, #260]	; 0x104
    8704:	b	8654 <readstat_label_string_value+0x24>

00008708 <readstat_label_tagged_value>:
    8708:	push	{r4, r5, r6, r7, r8, lr}
    870c:	mov	r7, r1
    8710:	ldr	r3, [r0, #268]	; 0x10c
    8714:	ldr	r1, [r0, #264]	; 0x108
    8718:	mov	r5, r0
    871c:	cmp	r1, r3
    8720:	mov	r6, r2
    8724:	beq	8788 <readstat_label_tagged_value+0x80>
    8728:	ldr	r4, [r0, #260]	; 0x104
    872c:	add	r4, r4, r1, lsl #5
    8730:	add	r1, r1, #1
    8734:	str	r1, [r5, #264]	; 0x108
    8738:	mov	r0, r4
    873c:	mov	r2, #32
    8740:	mov	r1, #0
    8744:	bl	42a4 <memset@plt>
    8748:	cmp	r6, #0
    874c:	beq	8780 <readstat_label_tagged_value+0x78>
    8750:	ldrb	r3, [r6]
    8754:	cmp	r3, #0
    8758:	beq	8780 <readstat_label_tagged_value+0x78>
    875c:	mov	r0, r6
    8760:	bl	41fc <strlen@plt>
    8764:	str	r0, [r4, #28]
    8768:	mov	r5, r0
    876c:	bl	410c <malloc@plt>
    8770:	mov	r2, r5
    8774:	mov	r1, r6
    8778:	str	r0, [r4, #24]
    877c:	bl	3f20 <memcpy@plt>
    8780:	strb	r7, [r4, #12]
    8784:	pop	{r4, r5, r6, r7, r8, pc}
    8788:	lsl	r3, r1, #1
    878c:	str	r3, [r0, #268]	; 0x10c
    8790:	lsl	r1, r1, #6
    8794:	ldr	r0, [r0, #260]	; 0x104
    8798:	bl	3ff8 <realloc@plt>
    879c:	ldr	r1, [r5, #264]	; 0x108
    87a0:	mov	r4, r0
    87a4:	str	r0, [r5, #260]	; 0x104
    87a8:	b	872c <readstat_label_tagged_value+0x24>

000087ac <readstat_add_variable>:
    87ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    87b0:	mov	r7, r1
    87b4:	ldr	r5, [r0, #28]
    87b8:	ldr	r1, [r0, #32]
    87bc:	mov	r6, r0
    87c0:	cmp	r5, r1
    87c4:	mov	r8, r2
    87c8:	mov	r9, r3
    87cc:	beq	8840 <readstat_add_variable+0x94>
    87d0:	ldr	sl, [r0, #24]
    87d4:	ldr	r1, [pc, #136]	; 8864 <readstat_add_variable+0xb8>
    87d8:	mov	r0, #1
    87dc:	bl	3d58 <calloc@plt>
    87e0:	add	r3, r5, #1
    87e4:	str	r3, [r6, #28]
    87e8:	str	r5, [r0, #4]
    87ec:	str	r0, [sl, r5, lsl #2]
    87f0:	str	r9, [r0, #1600]	; 0x640
    87f4:	str	r8, [r0]
    87f8:	mov	r4, r0
    87fc:	bl	4544 <readstat_variable_get_type_class@plt>
    8800:	mov	r3, #0
    8804:	str	r3, [r4, #2128]	; 0x850
    8808:	cmp	r0, r3
    880c:	movne	r0, #3
    8810:	moveq	r0, #1
    8814:	cmp	r7, r3
    8818:	str	r0, [r4, #2132]	; 0x854
    881c:	beq	8838 <readstat_add_variable+0x8c>
    8820:	ldr	r2, [pc, #64]	; 8868 <readstat_add_variable+0xbc>
    8824:	mov	r3, r7
    8828:	add	r2, pc, r2
    882c:	mov	r1, #300	; 0x12c
    8830:	add	r0, r4, #8
    8834:	bl	4280 <snprintf@plt>
    8838:	mov	r0, r4
    883c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    8840:	lsl	r3, r5, #1
    8844:	str	r3, [r0, #32]
    8848:	lsl	r1, r5, #3
    884c:	ldr	r0, [r0, #24]
    8850:	bl	3ff8 <realloc@plt>
    8854:	ldr	r5, [r6, #28]
    8858:	mov	sl, r0
    885c:	str	r0, [r6, #24]
    8860:	b	87d4 <readstat_add_variable+0x28>
    8864:	.word	0x00000868
    8868:	.word	0x0001d8ac

0000886c <readstat_add_string_ref>:
    886c:	push	{r4, r5, r6, lr}
    8870:	mov	r4, r0
    8874:	mov	r0, r1
    8878:	bl	4358 <readstat_string_ref_init@plt>
    887c:	ldr	r1, [r4, #64]	; 0x40
    8880:	ldr	r3, [r4, #68]	; 0x44
    8884:	cmp	r1, r3
    8888:	mov	r5, r0
    888c:	beq	88a8 <readstat_add_string_ref+0x3c>
    8890:	ldr	r3, [r4, #60]	; 0x3c
    8894:	add	r2, r1, #1
    8898:	str	r2, [r4, #64]	; 0x40
    889c:	mov	r0, r5
    88a0:	str	r5, [r3, r1, lsl #2]
    88a4:	pop	{r4, r5, r6, pc}
    88a8:	lsl	r3, r1, #1
    88ac:	str	r3, [r4, #68]	; 0x44
    88b0:	lsl	r1, r1, #3
    88b4:	ldr	r0, [r4, #60]	; 0x3c
    88b8:	bl	3ff8 <realloc@plt>
    88bc:	ldr	r1, [r4, #64]	; 0x40
    88c0:	mov	r3, r0
    88c4:	str	r0, [r4, #60]	; 0x3c
    88c8:	b	8894 <readstat_add_string_ref+0x28>

000088cc <readstat_add_note>:
    88cc:	push	{r4, r5, r6, r7, r8, lr}
    88d0:	mov	r4, r0
    88d4:	ldr	r5, [r0, #52]	; 0x34
    88d8:	ldr	r3, [r0, #56]	; 0x38
    88dc:	mov	r6, r1
    88e0:	cmp	r5, r3
    88e4:	beq	891c <readstat_add_note+0x50>
    88e8:	ldr	r8, [r0, #48]	; 0x30
    88ec:	mov	r0, r6
    88f0:	bl	41fc <strlen@plt>
    88f4:	add	r7, r0, #1
    88f8:	mov	r0, r7
    88fc:	bl	410c <malloc@plt>
    8900:	mov	r2, r7
    8904:	mov	r1, r6
    8908:	bl	3f20 <memcpy@plt>
    890c:	add	r2, r5, #1
    8910:	str	r2, [r4, #52]	; 0x34
    8914:	str	r0, [r8, r5, lsl #2]
    8918:	pop	{r4, r5, r6, r7, r8, pc}
    891c:	lsl	r3, r5, #1
    8920:	str	r3, [r0, #56]	; 0x38
    8924:	lsl	r1, r5, #3
    8928:	ldr	r0, [r0, #48]	; 0x30
    892c:	bl	3ff8 <realloc@plt>
    8930:	ldr	r5, [r4, #52]	; 0x34
    8934:	mov	r8, r0
    8938:	str	r0, [r4, #48]	; 0x30
    893c:	b	88ec <readstat_add_note+0x20>

00008940 <readstat_variable_set_label>:
    8940:	subs	r3, r1, #0
    8944:	add	r0, r0, #564	; 0x234
    8948:	beq	895c <readstat_variable_set_label+0x1c>
    894c:	ldr	r2, [pc, #16]	; 8964 <readstat_variable_set_label+0x24>
    8950:	mov	r1, #1024	; 0x400
    8954:	add	r2, pc, r2
    8958:	b	4280 <snprintf@plt>
    895c:	mov	r2, #1024	; 0x400
    8960:	b	42a4 <memset@plt>
    8964:	.word	0x0001d780

00008968 <readstat_variable_set_format>:
    8968:	subs	r3, r1, #0
    896c:	add	r0, r0, #308	; 0x134
    8970:	beq	8984 <readstat_variable_set_format+0x1c>
    8974:	ldr	r2, [pc, #16]	; 898c <readstat_variable_set_format+0x24>
    8978:	mov	r1, #256	; 0x100
    897c:	add	r2, pc, r2
    8980:	b	4280 <snprintf@plt>
    8984:	mov	r2, #256	; 0x100
    8988:	b	42a4 <memset@plt>
    898c:	.word	0x0001d758

00008990 <readstat_variable_set_measure>:
    8990:	str	r1, [r0, #2128]	; 0x850
    8994:	bx	lr

00008998 <readstat_variable_set_alignment>:
    8998:	str	r1, [r0, #2132]	; 0x854
    899c:	bx	lr

000089a0 <readstat_variable_set_display_width>:
    89a0:	str	r1, [r0, #2136]	; 0x858
    89a4:	bx	lr

000089a8 <readstat_variable_set_label_set>:
    89a8:	cmp	r1, #0
    89ac:	str	r1, [r0, #1588]	; 0x634
    89b0:	bxeq	lr
    89b4:	push	{r4, r5, r6, lr}
    89b8:	mov	r4, r1
    89bc:	ldr	r1, [r1, #276]	; 0x114
    89c0:	ldr	r3, [r4, #280]	; 0x118
    89c4:	mov	r5, r0
    89c8:	cmp	r1, r3
    89cc:	beq	89e4 <readstat_variable_set_label_set+0x3c>
    89d0:	ldr	r0, [r4, #272]	; 0x110
    89d4:	add	r3, r1, #1
    89d8:	str	r3, [r4, #276]	; 0x114
    89dc:	str	r5, [r0, r1, lsl #2]
    89e0:	pop	{r4, r5, r6, pc}
    89e4:	lsl	r3, r1, #1
    89e8:	str	r3, [r4, #280]	; 0x118
    89ec:	lsl	r1, r1, #3
    89f0:	ldr	r0, [r4, #272]	; 0x110
    89f4:	bl	3ff8 <realloc@plt>
    89f8:	ldr	r1, [r4, #276]	; 0x114
    89fc:	str	r0, [r4, #272]	; 0x110
    8a00:	b	89d4 <readstat_variable_set_label_set+0x2c>

00008a04 <readstat_get_variable>:
    8a04:	ldr	r3, [r0, #28]
    8a08:	cmp	r3, r1
    8a0c:	ldrgt	r3, [r0, #24]
    8a10:	ldrgt	r0, [r3, r1, lsl #2]
    8a14:	movle	r0, #0
    8a18:	bx	lr

00008a1c <readstat_begin_writing_data>:
    8a1c:	push	{r4, r5, r6, r7, r8, lr}
    8a20:	mov	r4, r0
    8a24:	bl	3da0 <readstat_validate_metadata@plt>
    8a28:	subs	r8, r0, #0
    8a2c:	bne	8ad0 <readstat_begin_writing_data+0xb4>
    8a30:	ldr	r3, [r4, #28]
    8a34:	cmp	r3, #0
    8a38:	ble	8ad8 <readstat_begin_writing_data+0xbc>
    8a3c:	mov	r6, r8
    8a40:	mov	r7, r8
    8a44:	mov	r1, r6
    8a48:	mov	r0, r4
    8a4c:	bl	437c <readstat_get_variable@plt>
    8a50:	ldr	r3, [r4, #228]	; 0xe4
    8a54:	add	r6, r6, #1
    8a58:	mov	r5, r0
    8a5c:	ldr	r1, [r0, #1600]	; 0x640
    8a60:	ldr	r0, [r0]
    8a64:	blx	r3
    8a68:	ldr	r3, [r4, #28]
    8a6c:	str	r7, [r5, #1592]	; 0x638
    8a70:	cmp	r3, r6
    8a74:	str	r0, [r5, #1596]	; 0x63c
    8a78:	add	r7, r7, r0
    8a7c:	bgt	8a44 <readstat_begin_writing_data+0x28>
    8a80:	ldr	r2, [r4, #232]	; 0xe8
    8a84:	cmp	r2, #0
    8a88:	beq	8adc <readstat_begin_writing_data+0xc0>
    8a8c:	cmp	r3, #0
    8a90:	ble	8adc <readstat_begin_writing_data+0xc0>
    8a94:	mov	r5, #0
    8a98:	b	8aa8 <readstat_begin_writing_data+0x8c>
    8a9c:	ldr	r3, [r4, #28]
    8aa0:	cmp	r3, r5
    8aa4:	ble	8adc <readstat_begin_writing_data+0xc0>
    8aa8:	mov	r1, r5
    8aac:	mov	r0, r4
    8ab0:	bl	437c <readstat_get_variable@plt>
    8ab4:	add	r5, r5, #1
    8ab8:	mov	r1, r0
    8abc:	mov	r0, r4
    8ac0:	bl	449c <readstat_validate_variable@plt>
    8ac4:	cmp	r0, #0
    8ac8:	beq	8a9c <readstat_begin_writing_data+0x80>
    8acc:	mov	r8, r0
    8ad0:	mov	r0, r8
    8ad4:	pop	{r4, r5, r6, r7, r8, pc}
    8ad8:	mov	r7, r8
    8adc:	str	r7, [r4, #76]	; 0x4c
    8ae0:	mov	r0, r7
    8ae4:	bl	410c <malloc@plt>
    8ae8:	ldr	r3, [r4, #276]	; 0x114
    8aec:	cmp	r3, #0
    8af0:	str	r0, [r4, #72]	; 0x48
    8af4:	beq	8ad0 <readstat_begin_writing_data+0xb4>
    8af8:	mov	r0, r4
    8afc:	pop	{r4, r5, r6, r7, r8, lr}
    8b00:	bx	r3

00008b04 <readstat_get_string_ref>:
    8b04:	ldr	r3, [r0, #64]	; 0x40
    8b08:	cmp	r3, r1
    8b0c:	ldrgt	r3, [r0, #60]	; 0x3c
    8b10:	ldrgt	r0, [r3, r1, lsl #2]
    8b14:	movle	r0, #0
    8b18:	bx	lr

00008b1c <readstat_writer_set_file_label>:
    8b1c:	ldr	r2, [pc, #28]	; 8b40 <readstat_writer_set_file_label+0x24>
    8b20:	mov	r3, r1
    8b24:	push	{r4, lr}
    8b28:	add	r2, pc, r2
    8b2c:	mov	r1, #100	; 0x64
    8b30:	add	r0, r0, #88	; 0x58
    8b34:	bl	4280 <snprintf@plt>
    8b38:	mov	r0, #0
    8b3c:	pop	{r4, pc}
    8b40:	.word	0x0001d5ac

00008b44 <readstat_writer_set_file_timestamp>:
    8b44:	str	r1, [r0, #20]
    8b48:	mov	r0, #0
    8b4c:	bx	lr

00008b50 <readstat_writer_set_table_name>:
    8b50:	ldr	r2, [pc, #28]	; 8b74 <readstat_writer_set_table_name+0x24>
    8b54:	mov	r3, r1
    8b58:	push	{r4, lr}
    8b5c:	add	r2, pc, r2
    8b60:	mov	r1, #33	; 0x21
    8b64:	add	r0, r0, #188	; 0xbc
    8b68:	bl	4280 <snprintf@plt>
    8b6c:	mov	r0, #0
    8b70:	pop	{r4, pc}
    8b74:	.word	0x0001d578

00008b78 <readstat_writer_set_fweight_variable>:
    8b78:	push	{r4, r5, r6, lr}
    8b7c:	mov	r5, r0
    8b80:	mov	r0, r1
    8b84:	mov	r4, r1
    8b88:	bl	4544 <readstat_variable_get_type_class@plt>
    8b8c:	cmp	r0, #0
    8b90:	movne	r0, #0
    8b94:	strne	r4, [r5, #224]	; 0xe0
    8b98:	moveq	r0, #30
    8b9c:	pop	{r4, r5, r6, pc}

00008ba0 <readstat_writer_set_file_format_version>:
    8ba0:	str	r1, [r0, #8]
    8ba4:	mov	r0, #0
    8ba8:	bx	lr

00008bac <readstat_writer_set_file_format_is_64bit>:
    8bac:	str	r1, [r0, #12]
    8bb0:	mov	r0, #0
    8bb4:	bx	lr

00008bb8 <readstat_writer_set_compression>:
    8bb8:	str	r1, [r0, #16]
    8bbc:	mov	r0, #0
    8bc0:	bx	lr

00008bc4 <readstat_writer_set_error_handler>:
    8bc4:	str	r1, [r0, #296]	; 0x128
    8bc8:	mov	r0, #0
    8bcc:	bx	lr

00008bd0 <readstat_begin_writing_file>:
    8bd0:	mov	ip, #1
    8bd4:	str	r2, [r0, #80]	; 0x50
    8bd8:	str	r1, [r0, #304]	; 0x130
    8bdc:	str	ip, [r0, #308]	; 0x134
    8be0:	b	3da0 <readstat_validate_metadata@plt>

00008be4 <readstat_begin_row>:
    8be4:	ldr	r2, [r0, #308]	; 0x134
    8be8:	push	{r4, r5, r6, lr}
    8bec:	cmp	r2, #0
    8bf0:	moveq	r5, #14
    8bf4:	bne	8c00 <readstat_begin_row+0x1c>
    8bf8:	mov	r0, r5
    8bfc:	pop	{r4, r5, r6, pc}
    8c00:	ldr	r3, [r0, #84]	; 0x54
    8c04:	mov	r4, r0
    8c08:	cmp	r3, #0
    8c0c:	movne	r5, #0
    8c10:	beq	8c2c <readstat_begin_row+0x48>
    8c14:	ldr	r2, [r4, #76]	; 0x4c
    8c18:	ldr	r0, [r4, #72]	; 0x48
    8c1c:	mov	r1, #0
    8c20:	bl	42a4 <memset@plt>
    8c24:	mov	r0, r5
    8c28:	pop	{r4, r5, r6, pc}
    8c2c:	bl	8a1c <readstat_begin_writing_data>
    8c30:	mov	r5, r0
    8c34:	b	8c14 <readstat_begin_row+0x30>

00008c38 <readstat_insert_int8_value>:
    8c38:	ldr	r3, [r0, #308]	; 0x134
    8c3c:	cmp	r3, #0
    8c40:	bne	8c4c <readstat_insert_int8_value+0x14>
    8c44:	mov	r0, #14
    8c48:	bx	lr
    8c4c:	ldr	r3, [r1]
    8c50:	cmp	r3, #1
    8c54:	beq	8c60 <readstat_insert_int8_value+0x28>
    8c58:	mov	r0, #12
    8c5c:	bx	lr
    8c60:	push	{lr}		; (str lr, [sp, #-4]!)
    8c64:	ldr	ip, [r1, #1592]	; 0x638
    8c68:	ldr	lr, [r0, #72]	; 0x48
    8c6c:	ldr	r3, [r0, #236]	; 0xec
    8c70:	add	r0, lr, ip
    8c74:	pop	{lr}		; (ldr lr, [sp], #4)
    8c78:	bx	r3

00008c7c <readstat_insert_int16_value>:
    8c7c:	ldr	r3, [r0, #308]	; 0x134
    8c80:	cmp	r3, #0
    8c84:	bne	8c90 <readstat_insert_int16_value+0x14>
    8c88:	mov	r0, #14
    8c8c:	bx	lr
    8c90:	ldr	r3, [r1]
    8c94:	cmp	r3, #2
    8c98:	beq	8ca4 <readstat_insert_int16_value+0x28>
    8c9c:	mov	r0, #12
    8ca0:	bx	lr
    8ca4:	push	{lr}		; (str lr, [sp, #-4]!)
    8ca8:	ldr	ip, [r1, #1592]	; 0x638
    8cac:	ldr	lr, [r0, #72]	; 0x48
    8cb0:	ldr	r3, [r0, #240]	; 0xf0
    8cb4:	add	r0, lr, ip
    8cb8:	pop	{lr}		; (ldr lr, [sp], #4)
    8cbc:	bx	r3

00008cc0 <readstat_insert_int32_value>:
    8cc0:	ldr	r3, [r0, #308]	; 0x134
    8cc4:	cmp	r3, #0
    8cc8:	bne	8cd4 <readstat_insert_int32_value+0x14>
    8ccc:	mov	r0, #14
    8cd0:	bx	lr
    8cd4:	ldr	r3, [r1]
    8cd8:	cmp	r3, #3
    8cdc:	beq	8ce8 <readstat_insert_int32_value+0x28>
    8ce0:	mov	r0, #12
    8ce4:	bx	lr
    8ce8:	push	{lr}		; (str lr, [sp, #-4]!)
    8cec:	ldr	ip, [r1, #1592]	; 0x638
    8cf0:	ldr	lr, [r0, #72]	; 0x48
    8cf4:	ldr	r3, [r0, #244]	; 0xf4
    8cf8:	add	r0, lr, ip
    8cfc:	pop	{lr}		; (ldr lr, [sp], #4)
    8d00:	bx	r3

00008d04 <readstat_insert_float_value>:
    8d04:	ldr	r3, [r0, #308]	; 0x134
    8d08:	cmp	r3, #0
    8d0c:	bne	8d18 <readstat_insert_float_value+0x14>
    8d10:	mov	r0, #14
    8d14:	bx	lr
    8d18:	ldr	r3, [r1]
    8d1c:	cmp	r3, #4
    8d20:	beq	8d2c <readstat_insert_float_value+0x28>
    8d24:	mov	r0, #12
    8d28:	bx	lr
    8d2c:	ldr	r2, [r1, #1592]	; 0x638
    8d30:	ldr	ip, [r0, #72]	; 0x48
    8d34:	ldr	r3, [r0, #248]	; 0xf8
    8d38:	add	r0, ip, r2
    8d3c:	bx	r3

00008d40 <readstat_insert_double_value>:
    8d40:	ldr	r3, [r0, #308]	; 0x134
    8d44:	cmp	r3, #0
    8d48:	bne	8d54 <readstat_insert_double_value+0x14>
    8d4c:	mov	r0, #14
    8d50:	bx	lr
    8d54:	ldr	r3, [r1]
    8d58:	cmp	r3, #5
    8d5c:	beq	8d68 <readstat_insert_double_value+0x28>
    8d60:	mov	r0, #12
    8d64:	bx	lr
    8d68:	ldr	r2, [r1, #1592]	; 0x638
    8d6c:	ldr	ip, [r0, #72]	; 0x48
    8d70:	ldr	r3, [r0, #252]	; 0xfc
    8d74:	add	r0, ip, r2
    8d78:	bx	r3

00008d7c <readstat_insert_string_value>:
    8d7c:	ldr	r3, [r0, #308]	; 0x134
    8d80:	cmp	r3, #0
    8d84:	bne	8d90 <readstat_insert_string_value+0x14>
    8d88:	mov	r0, #14
    8d8c:	bx	lr
    8d90:	ldr	r3, [r1]
    8d94:	cmp	r3, #0
    8d98:	beq	8da4 <readstat_insert_string_value+0x28>
    8d9c:	mov	r0, #12
    8da0:	bx	lr
    8da4:	push	{lr}		; (str lr, [sp, #-4]!)
    8da8:	ldr	ip, [r1, #1592]	; 0x638
    8dac:	ldr	lr, [r0, #72]	; 0x48
    8db0:	ldr	r3, [r0, #256]	; 0x100
    8db4:	add	r0, lr, ip
    8db8:	pop	{lr}		; (ldr lr, [sp], #4)
    8dbc:	bx	r3

00008dc0 <readstat_insert_string_ref>:
    8dc0:	ldr	r3, [r0, #308]	; 0x134
    8dc4:	cmp	r3, #0
    8dc8:	bne	8dd4 <readstat_insert_string_ref+0x14>
    8dcc:	mov	r0, #14
    8dd0:	bx	lr
    8dd4:	ldr	r3, [r1]
    8dd8:	cmp	r3, #6
    8ddc:	beq	8de8 <readstat_insert_string_ref+0x28>
    8de0:	mov	r0, #12
    8de4:	bx	lr
    8de8:	ldr	r3, [r0, #260]	; 0x104
    8dec:	cmp	r3, #0
    8df0:	beq	8e2c <readstat_insert_string_ref+0x6c>
    8df4:	cmp	r2, #0
    8df8:	beq	8e60 <readstat_insert_string_ref+0xa0>
    8dfc:	push	{r4, r5, r6, r7}
    8e00:	mvn	r5, #0
    8e04:	ldrd	r6, [r2, #8]
    8e08:	mvn	r4, #0
    8e0c:	cmp	r7, r5
    8e10:	cmpeq	r6, r4
    8e14:	beq	8e34 <readstat_insert_string_ref+0x74>
    8e18:	ldr	ip, [r0, #72]	; 0x48
    8e1c:	ldr	r0, [r1, #1592]	; 0x638
    8e20:	pop	{r4, r5, r6, r7}
    8e24:	add	r0, ip, r0
    8e28:	bx	r3
    8e2c:	mov	r0, #33	; 0x21
    8e30:	bx	lr
    8e34:	ldrd	r4, [r2]
    8e38:	cmp	r5, r7
    8e3c:	cmpeq	r4, r6
    8e40:	bne	8e18 <readstat_insert_string_ref+0x58>
    8e44:	ldr	r6, [r0, #84]	; 0x54
    8e48:	ldr	r4, [r1, #4]
    8e4c:	asr	r7, r6, #31
    8e50:	asr	r5, r4, #31
    8e54:	strd	r6, [r2, #8]
    8e58:	strd	r4, [r2]
    8e5c:	b	8e18 <readstat_insert_string_ref+0x58>
    8e60:	ldr	ip, [r0, #72]	; 0x48
    8e64:	ldr	r0, [r1, #1592]	; 0x638
    8e68:	add	r0, ip, r0
    8e6c:	bx	r3

00008e70 <readstat_insert_missing_value>:
    8e70:	ldr	r2, [r0, #308]	; 0x134
    8e74:	mov	r3, r0
    8e78:	cmp	r2, #0
    8e7c:	bne	8e88 <readstat_insert_missing_value+0x18>
    8e80:	mov	r0, #14
    8e84:	bx	lr
    8e88:	ldr	r2, [r1]
    8e8c:	cmp	r2, #0
    8e90:	beq	8eb0 <readstat_insert_missing_value+0x40>
    8e94:	cmp	r2, #6
    8e98:	beq	8ec4 <readstat_insert_missing_value+0x54>
    8e9c:	ldr	r2, [r1, #1592]	; 0x638
    8ea0:	ldr	r0, [r0, #72]	; 0x48
    8ea4:	ldr	r3, [r3, #268]	; 0x10c
    8ea8:	add	r0, r0, r2
    8eac:	bx	r3
    8eb0:	ldr	r2, [r1, #1592]	; 0x638
    8eb4:	ldr	r0, [r0, #72]	; 0x48
    8eb8:	ldr	r3, [r3, #264]	; 0x108
    8ebc:	add	r0, r0, r2
    8ec0:	bx	r3
    8ec4:	mov	r2, #0
    8ec8:	b	3f50 <readstat_insert_string_ref@plt>

00008ecc <readstat_insert_tagged_missing_value>:
    8ecc:	ldr	r3, [r0, #308]	; 0x134
    8ed0:	cmp	r3, #0
    8ed4:	bne	8ee0 <readstat_insert_tagged_missing_value+0x14>
    8ed8:	mov	r0, #14
    8edc:	bx	lr
    8ee0:	ldr	r3, [r0, #272]	; 0x110
    8ee4:	push	{r4, lr}
    8ee8:	cmp	r3, #0
    8eec:	beq	8f04 <readstat_insert_tagged_missing_value+0x38>
    8ef0:	ldr	lr, [r0, #72]	; 0x48
    8ef4:	ldr	r0, [r1, #1592]	; 0x638
    8ef8:	add	r0, lr, r0
    8efc:	pop	{r4, lr}
    8f00:	bx	r3
    8f04:	ldr	r2, [r1, #1592]	; 0x638
    8f08:	ldr	ip, [r0, #72]	; 0x48
    8f0c:	ldr	r3, [r0, #268]	; 0x10c
    8f10:	add	r0, ip, r2
    8f14:	blx	r3
    8f18:	mov	r0, #23
    8f1c:	pop	{r4, pc}

00008f20 <readstat_end_row>:
    8f20:	ldr	r2, [r0, #308]	; 0x134
    8f24:	cmp	r2, #0
    8f28:	bne	8f34 <readstat_end_row+0x14>
    8f2c:	mov	r0, #14
    8f30:	bx	lr
    8f34:	ldr	r3, [r0, #280]	; 0x118
    8f38:	push	{r4, lr}
    8f3c:	mov	r4, r0
    8f40:	ldr	r2, [r0, #76]	; 0x4c
    8f44:	ldr	r1, [r0, #72]	; 0x48
    8f48:	blx	r3
    8f4c:	cmp	r0, #0
    8f50:	ldreq	r3, [r4, #84]	; 0x54
    8f54:	addeq	r3, r3, #1
    8f58:	streq	r3, [r4, #84]	; 0x54
    8f5c:	pop	{r4, pc}

00008f60 <readstat_end_writing>:
    8f60:	ldr	r2, [r0, #308]	; 0x134
    8f64:	cmp	r2, #0
    8f68:	bne	8f74 <readstat_end_writing+0x14>
    8f6c:	mov	r0, #14
    8f70:	bx	lr
    8f74:	ldr	r2, [r0, #84]	; 0x54
    8f78:	ldr	r1, [r0, #80]	; 0x50
    8f7c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    8f80:	cmp	r2, r1
    8f84:	mov	r4, r0
    8f88:	beq	8f94 <readstat_end_writing+0x34>
    8f8c:	mov	r0, #9
    8f90:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    8f94:	cmp	r2, #0
    8f98:	beq	9020 <readstat_end_writing+0xc0>
    8f9c:	ldr	r1, [r4, #64]	; 0x40
    8fa0:	cmp	r1, #1
    8fa4:	ble	9008 <readstat_end_writing+0xa8>
    8fa8:	ldr	r0, [r4, #60]	; 0x3c
    8fac:	mov	r2, #1
    8fb0:	mov	r5, r0
    8fb4:	ldr	lr, [r0]
    8fb8:	b	8fc8 <readstat_end_writing+0x68>
    8fbc:	cmp	r2, r1
    8fc0:	mov	lr, r3
    8fc4:	beq	9008 <readstat_end_writing+0xa8>
    8fc8:	ldr	r3, [r5, #4]!
    8fcc:	ldrd	r8, [lr]
    8fd0:	add	r2, r2, #1
    8fd4:	ldrd	r6, [r3]
    8fd8:	cmp	r9, r7
    8fdc:	cmpeq	r8, r6
    8fe0:	sub	ip, r8, r6
    8fe4:	ldreq	ip, [lr, #8]
    8fe8:	ldreq	lr, [r3, #8]
    8fec:	subeq	ip, ip, lr
    8ff0:	cmp	ip, #0
    8ff4:	ble	8fbc <readstat_end_writing+0x5c>
    8ff8:	ldr	r3, [pc, #56]	; 9038 <readstat_end_writing+0xd8>
    8ffc:	mov	r2, #4
    9000:	add	r3, pc, r3
    9004:	bl	443c <qsort@plt>
    9008:	ldr	r3, [r4, #284]	; 0x11c
    900c:	cmp	r3, #0
    9010:	beq	9030 <readstat_end_writing+0xd0>
    9014:	mov	r0, r4
    9018:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    901c:	bx	r3
    9020:	bl	8a1c <readstat_begin_writing_data>
    9024:	cmp	r0, #0
    9028:	beq	8f9c <readstat_end_writing+0x3c>
    902c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    9030:	mov	r0, r3
    9034:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    9038:	.word	0xffffedd4

0000903c <memreverse>:
    903c:	push	{r4, r5, r6, lr}
    9040:	mov	r4, r0
    9044:	mov	r5, r1
    9048:	bl	3eb4 <machine_is_little_endian@plt>
    904c:	cmp	r0, #0
    9050:	popeq	{r4, r5, r6, pc}
    9054:	add	ip, r5, r5, lsr #31
    9058:	asr	ip, ip, #1
    905c:	cmp	ip, #0
    9060:	pople	{r4, r5, r6, pc}
    9064:	mov	r0, r4
    9068:	add	r1, r4, r5
    906c:	add	ip, r4, ip
    9070:	ldrb	r2, [r1, #-1]
    9074:	ldrb	r3, [r0]
    9078:	strb	r2, [r0], #1
    907c:	cmp	ip, r0
    9080:	strb	r3, [r1, #-1]!
    9084:	bne	9070 <memreverse+0x34>
    9088:	pop	{r4, r5, r6, pc}

0000908c <get_native>:
    908c:	push	{r4, r5, r6, lr}
    9090:	mov	r2, #8
    9094:	ldr	r4, [pc, #96]	; 90fc <get_native+0x70>
    9098:	add	r4, pc, r4
    909c:	add	r5, r4, #24
    90a0:	mov	r0, r5
    90a4:	mov	r1, r4
    90a8:	bl	3fa4 <memcmp@plt>
    90ac:	cmp	r0, #0
    90b0:	beq	90f4 <get_native+0x68>
    90b4:	mov	r2, #8
    90b8:	add	r1, r4, r2
    90bc:	mov	r0, r5
    90c0:	bl	3fa4 <memcmp@plt>
    90c4:	cmp	r0, #0
    90c8:	beq	90f0 <get_native+0x64>
    90cc:	add	r1, r4, #16
    90d0:	mov	r0, r5
    90d4:	mov	r2, #8
    90d8:	bl	3fa4 <memcmp@plt>
    90dc:	cmp	r0, #0
    90e0:	moveq	r0, #2
    90e4:	beq	90f4 <get_native+0x68>
    90e8:	mvn	r0, #0
    90ec:	pop	{r4, r5, r6, pc}
    90f0:	mov	r0, #1
    90f4:	add	r0, r0, #1
    90f8:	pop	{r4, r5, r6, pc}
    90fc:	.word	0x0003c280

00009100 <cnxptiee>:
    9100:	push	{r4, r5, r6, r7, lr}
    9104:	subs	r4, r1, #0
    9108:	sub	sp, sp, #36	; 0x24
    910c:	mov	r5, r0
    9110:	mov	r6, r2
    9114:	mov	r7, r3
    9118:	beq	9220 <cnxptiee+0x120>
    911c:	cmp	r4, #1
    9120:	blt	9214 <cnxptiee+0x114>
    9124:	cmp	r4, #2
    9128:	ble	9184 <cnxptiee+0x84>
    912c:	cmp	r4, #3
    9130:	bne	9214 <cnxptiee+0x114>
    9134:	cmp	r7, #3
    9138:	beq	930c <cnxptiee+0x20c>
    913c:	ldrb	r3, [r5, #7]
    9140:	ldrb	r4, [r5, #6]
    9144:	ldrb	lr, [r5, #5]
    9148:	ldrb	ip, [r5, #4]
    914c:	ldrb	r0, [r5, #3]
    9150:	ldrb	r1, [r5, #2]
    9154:	ldrb	r2, [r5, #1]
    9158:	strb	r3, [sp, #16]
    915c:	ldrb	r3, [r5]
    9160:	strb	r4, [sp, #17]
    9164:	add	r5, sp, #16
    9168:	mov	r4, #2
    916c:	strb	lr, [sp, #18]
    9170:	strb	ip, [sp, #19]
    9174:	strb	r0, [sp, #20]
    9178:	strb	r1, [sp, #21]
    917c:	strb	r2, [sp, #22]
    9180:	strb	r3, [sp, #23]
    9184:	cmp	r7, #0
    9188:	beq	9300 <cnxptiee+0x200>
    918c:	sub	r3, r7, #1
    9190:	cmp	r3, #2
    9194:	bhi	9524 <cnxptiee+0x424>
    9198:	cmp	r4, r7
    919c:	beq	930c <cnxptiee+0x20c>
    91a0:	cmp	r4, #1
    91a4:	beq	9248 <cnxptiee+0x148>
    91a8:	cmp	r4, #2
    91ac:	beq	922c <cnxptiee+0x12c>
    91b0:	cmp	r7, #3
    91b4:	bne	9208 <cnxptiee+0x108>
    91b8:	ldr	r0, [r6]
    91bc:	ldr	r1, [r6, #4]
    91c0:	add	r3, sp, #16
    91c4:	stmia	r3!, {r0, r1}
    91c8:	ldrb	r5, [sp, #23]
    91cc:	ldrb	r4, [sp, #22]
    91d0:	ldrb	lr, [sp, #21]
    91d4:	ldrb	ip, [sp, #20]
    91d8:	ldrb	r0, [sp, #19]
    91dc:	ldrb	r1, [sp, #18]
    91e0:	ldrb	r2, [sp, #17]
    91e4:	ldrb	r3, [sp, #16]
    91e8:	strb	r5, [r6]
    91ec:	strb	r4, [r6, #1]
    91f0:	strb	lr, [r6, #2]
    91f4:	strb	ip, [r6, #3]
    91f8:	strb	r0, [r6, #4]
    91fc:	strb	r1, [r6, #5]
    9200:	strb	r2, [r6, #6]
    9204:	strb	r3, [r6, #7]
    9208:	mov	r0, #0
    920c:	add	sp, sp, #36	; 0x24
    9210:	pop	{r4, r5, r6, r7, pc}
    9214:	mvn	r0, #0
    9218:	add	sp, sp, #36	; 0x24
    921c:	pop	{r4, r5, r6, r7, pc}
    9220:	bl	41c0 <get_native@plt>
    9224:	mov	r4, r0
    9228:	b	911c <cnxptiee+0x1c>
    922c:	cmp	r7, #1
    9230:	beq	9324 <cnxptiee+0x224>
    9234:	ldr	r2, [r5]
    9238:	ldr	r3, [r5, #4]
    923c:	str	r2, [r6]
    9240:	str	r3, [r6, #4]
    9244:	b	91b0 <cnxptiee+0xb0>
    9248:	ldr	r0, [r5]
    924c:	ldr	r1, [r5, #4]
    9250:	add	r2, sp, #24
    9254:	mov	r3, #0
    9258:	stmia	r2!, {r0, r1}
    925c:	ldrb	r5, [sp, #24]
    9260:	str	r3, [sp, #8]
    9264:	str	r3, [sp, #12]
    9268:	cmp	r5, r3
    926c:	str	r3, [r6]
    9270:	str	r3, [r6, #4]
    9274:	beq	9290 <cnxptiee+0x190>
    9278:	mov	r2, #7
    927c:	mov	r1, r6
    9280:	add	r0, sp, #25
    9284:	bl	3fa4 <memcmp@plt>
    9288:	cmp	r0, #0
    928c:	beq	941c <cnxptiee+0x31c>
    9290:	ldr	r3, [sp, #24]
    9294:	add	r0, sp, #32
    9298:	mov	r1, #4
    929c:	str	r3, [r0, #-24]!	; 0xffffffe8
    92a0:	bl	3dc4 <memreverse@plt>
    92a4:	ldr	r3, [sp, #28]
    92a8:	add	r0, sp, #32
    92ac:	mov	r1, #4
    92b0:	str	r3, [r0, #-20]!	; 0xffffffec
    92b4:	bl	3dc4 <memreverse@plt>
    92b8:	ldr	r3, [sp, #8]
    92bc:	ldr	r1, [sp, #12]
    92c0:	bic	r2, r3, #-2147483648	; 0x80000000
    92c4:	cmn	r2, #-2147483647	; 0x80000001
    92c8:	beq	9500 <cnxptiee+0x400>
    92cc:	orrs	r2, r3, r1
    92d0:	str	r1, [sp, #4]
    92d4:	bic	r2, r3, #-16777216	; 0xff000000
    92d8:	beq	91b0 <cnxptiee+0xb0>
    92dc:	tst	r3, #8388608	; 0x800000
    92e0:	bne	9434 <cnxptiee+0x334>
    92e4:	tst	r3, #4194304	; 0x400000
    92e8:	bne	94a0 <cnxptiee+0x3a0>
    92ec:	ands	ip, r3, #2097152	; 0x200000
    92f0:	beq	9450 <cnxptiee+0x350>
    92f4:	mov	ip, r4
    92f8:	mov	lr, #31
    92fc:	b	943c <cnxptiee+0x33c>
    9300:	bl	41c0 <get_native@plt>
    9304:	mov	r7, r0
    9308:	b	918c <cnxptiee+0x8c>
    930c:	ldr	r2, [r5]
    9310:	ldr	r3, [r5, #4]
    9314:	mov	r0, #0
    9318:	str	r2, [r6]
    931c:	str	r3, [r6, #4]
    9320:	b	920c <cnxptiee+0x10c>
    9324:	ldr	r0, [r5]
    9328:	ldr	r1, [r5, #4]
    932c:	add	r2, sp, #32
    9330:	add	r3, sp, #24
    9334:	mov	r4, #0
    9338:	stmia	r3!, {r0, r1}
    933c:	str	r0, [r2, #-24]!	; 0xffffffe8
    9340:	mov	r1, #4
    9344:	mov	r0, r2
    9348:	ldr	r5, [r5, #4]
    934c:	str	r4, [sp, #12]
    9350:	bl	3dc4 <memreverse@plt>
    9354:	add	r0, sp, #32
    9358:	mov	r1, #4
    935c:	str	r5, [r0, #-20]!	; 0xffffffec
    9360:	bl	3dc4 <memreverse@plt>
    9364:	ldrb	r3, [sp, #24]
    9368:	str	r4, [r6]
    936c:	str	r4, [r6, #4]
    9370:	cmp	r3, #255	; 0xff
    9374:	beq	94d8 <cnxptiee+0x3d8>
    9378:	ldr	r2, [sp, #8]
    937c:	ldr	ip, [sp, #12]
    9380:	bic	r3, r2, #-16777216	; 0xff000000
    9384:	bic	r3, r3, #15728640	; 0xf00000
    9388:	orrs	r1, r2, ip
    938c:	stm	sp, {r3, ip}
    9390:	beq	94ac <cnxptiee+0x3ac>
    9394:	ldr	r1, [pc, #400]	; 952c <cnxptiee+0x42c>
    9398:	orr	r0, r3, #1048576	; 0x100000
    939c:	and	r3, r1, r2, lsr #20
    93a0:	sub	r3, r3, #1020	; 0x3fc
    93a4:	sub	r3, r3, #3
    93a8:	ands	lr, r3, #3
    93ac:	beq	93cc <cnxptiee+0x2cc>
    93b0:	lsr	r4, ip, #24
    93b4:	lsl	r0, r0, lr
    93b8:	and	r4, r4, #224	; 0xe0
    93bc:	rsb	r1, lr, #8
    93c0:	lsl	ip, ip, lr
    93c4:	orr	r0, r0, r4, lsr r1
    93c8:	str	ip, [sp, #4]
    93cc:	asr	r1, r3, #2
    93d0:	lsr	r2, r2, #24
    93d4:	and	ip, r2, #128	; 0x80
    93d8:	add	r1, r1, #65	; 0x41
    93dc:	orr	r1, r1, ip
    93e0:	cmn	r3, #260	; 0x104
    93e4:	movlt	r3, #0
    93e8:	orr	r1, r0, r1, lsl #24
    93ec:	str	r1, [sp]
    93f0:	strlt	r3, [r6]
    93f4:	strlt	r3, [r6, #4]
    93f8:	blt	9208 <cnxptiee+0x108>
    93fc:	cmp	r3, #248	; 0xf8
    9400:	ble	94ac <cnxptiee+0x3ac>
    9404:	mvn	r3, #0
    9408:	orr	r2, r2, #127	; 0x7f
    940c:	str	r3, [r6, #1]
    9410:	strb	r2, [r6]
    9414:	str	r3, [r6, #4]
    9418:	b	9208 <cnxptiee+0x108>
    941c:	mvn	r3, #0
    9420:	mvn	r5, r5
    9424:	strb	r5, [r6, #2]
    9428:	strb	r3, [r6, #1]
    942c:	strb	r3, [r6]
    9430:	b	91b0 <cnxptiee+0xb0>
    9434:	mov	lr, #29
    9438:	mov	ip, #3
    943c:	lsr	r0, r1, ip
    9440:	and	r1, r3, #7
    9444:	lsr	r2, r2, ip
    9448:	orr	r1, r0, r1, lsl lr
    944c:	str	r1, [sp, #4]
    9450:	and	r1, r5, #127	; 0x7f
    9454:	bic	r2, r2, #1048576	; 0x100000
    9458:	add	r1, ip, r1, lsl #2
    945c:	add	r1, r1, #760	; 0x2f8
    9460:	add	r1, r1, #3
    9464:	and	r3, r3, #-2147483648	; 0x80000000
    9468:	orr	r3, r2, r3
    946c:	orr	r3, r3, r1, lsl #20
    9470:	str	r3, [sp]
    9474:	mov	r1, #4
    9478:	mov	r0, sp
    947c:	bl	3dc4 <memreverse@plt>
    9480:	ldr	r3, [sp]
    9484:	mov	r1, #4
    9488:	str	r3, [r6]
    948c:	add	r0, sp, r1
    9490:	bl	3dc4 <memreverse@plt>
    9494:	ldr	r3, [sp, #4]
    9498:	str	r3, [r6, #4]
    949c:	b	91b0 <cnxptiee+0xb0>
    94a0:	mov	lr, #30
    94a4:	mov	ip, #2
    94a8:	b	943c <cnxptiee+0x33c>
    94ac:	mov	r1, #4
    94b0:	mov	r0, sp
    94b4:	bl	3dc4 <memreverse@plt>
    94b8:	ldr	r3, [sp]
    94bc:	mov	r1, #4
    94c0:	str	r3, [r6]
    94c4:	add	r0, sp, r1
    94c8:	bl	3dc4 <memreverse@plt>
    94cc:	ldr	r3, [sp, #4]
    94d0:	str	r3, [r6, #4]
    94d4:	b	9208 <cnxptiee+0x108>
    94d8:	ldrb	r3, [sp, #25]
    94dc:	cmp	r3, #255	; 0xff
    94e0:	bne	9378 <cnxptiee+0x278>
    94e4:	ldrb	r3, [sp, #26]
    94e8:	mvn	r3, r3
    94ec:	uxtb	r3, r3
    94f0:	cmp	r3, #210	; 0xd2
    94f4:	moveq	r3, #109	; 0x6d
    94f8:	strb	r3, [r6]
    94fc:	b	9208 <cnxptiee+0x108>
    9500:	cmn	r1, #1
    9504:	bne	92cc <cnxptiee+0x1cc>
    9508:	and	r3, r3, #-2147483648	; 0x80000000
    950c:	orr	r3, r3, #2130706432	; 0x7f000000
    9510:	orr	r3, r3, #15728640	; 0xf00000
    9514:	mov	r2, #0
    9518:	str	r3, [sp]
    951c:	str	r2, [sp, #4]
    9520:	b	9474 <cnxptiee+0x374>
    9524:	mvn	r0, #1
    9528:	b	920c <cnxptiee+0x10c>
    952c:	.word	0x000007ff

00009530 <sas_read8>:
    9530:	mov	r3, r0
    9534:	sub	sp, sp, #8
    9538:	mov	r2, r1
    953c:	ldr	r0, [r0]
    9540:	ldr	r1, [r3, #4]
    9544:	mov	r3, sp
    9548:	cmp	r2, #0
    954c:	stmia	r3!, {r0, r1}
    9550:	ldrd	r0, [sp]
    9554:	bne	9560 <sas_read8+0x30>
    9558:	add	sp, sp, #8
    955c:	bx	lr
    9560:	add	sp, sp, #8
    9564:	b	3d7c <byteswap8@plt>

00009568 <sas_read4>:
    9568:	cmp	r1, #0
    956c:	ldr	r0, [r0]
    9570:	bne	9578 <sas_read4+0x10>
    9574:	bx	lr
    9578:	b	3d94 <byteswap4@plt>

0000957c <sas_read2>:
    957c:	cmp	r1, #0
    9580:	ldrh	r0, [r0]
    9584:	bxeq	lr
    9588:	b	3ea8 <byteswap2@plt>

0000958c <sas_subheader_remainder>:
    958c:	add	r1, r1, #2
    9590:	sub	r0, r0, r1, lsl #1
    9594:	bx	lr

00009598 <sas_read_header>:
    9598:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    959c:	sub	sp, sp, #1392	; 0x570
    95a0:	sub	sp, sp, #12
    95a4:	add	r6, sp, #48	; 0x30
    95a8:	mov	r4, r0
    95ac:	mov	r5, r1
    95b0:	mov	r0, r6
    95b4:	mov	r1, #0
    95b8:	mov	r7, r2
    95bc:	mov	r2, #44	; 0x2c
    95c0:	mov	r8, r3
    95c4:	bl	42a4 <memset@plt>
    95c8:	mov	r2, #1
    95cc:	mov	r3, #60	; 0x3c
    95d0:	mov	r0, r6
    95d4:	str	r2, [sp, #60]	; 0x3c
    95d8:	str	r3, [sp, #68]	; 0x44
    95dc:	bl	3e54 <mktime@plt>
    95e0:	add	r9, sp, #212	; 0xd4
    95e4:	ldr	r3, [r4, #12]
    95e8:	ldr	r2, [r4, #20]
    95ec:	mov	r1, #164	; 0xa4
    95f0:	ldr	sl, [pc, #1376]	; 9b58 <sas_read_header+0x5c0>
    95f4:	add	sl, pc, sl
    95f8:	mov	r6, r0
    95fc:	mov	r0, r9
    9600:	blx	r3
    9604:	cmp	r0, #163	; 0xa3
    9608:	bls	968c <sas_read_header+0xf4>
    960c:	ldr	r3, [pc, #1352]	; 9b5c <sas_read_header+0x5c4>
    9610:	mov	r2, #32
    9614:	mov	r0, r9
    9618:	ldr	r1, [sl, r3]
    961c:	bl	3fa4 <memcmp@plt>
    9620:	cmp	r0, #0
    9624:	bne	966c <sas_read_header+0xd4>
    9628:	ldrb	r3, [sp, #247]	; 0xf7
    962c:	ldrb	sl, [sp, #249]	; 0xf9
    9630:	cmp	r3, #51	; 0x33
    9634:	moveq	r3, #4
    9638:	streq	r3, [r5, #24]
    963c:	ldrb	r3, [sp, #244]	; 0xf4
    9640:	cmp	r3, #51	; 0x33
    9644:	moveq	r3, #1
    9648:	streq	r3, [r5, #4]
    964c:	cmp	sl, #0
    9650:	beq	969c <sas_read_header+0x104>
    9654:	cmp	sl, #1
    9658:	beq	999c <sas_read_header+0x404>
    965c:	mov	r0, #5
    9660:	add	sp, sp, #1392	; 0x570
    9664:	add	sp, sp, #12
    9668:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    966c:	ldr	r3, [pc, #1260]	; 9b60 <sas_read_header+0x5c8>
    9670:	mov	r0, r9
    9674:	mov	r2, #32
    9678:	ldr	r1, [sl, r3]
    967c:	bl	3fa4 <memcmp@plt>
    9680:	cmp	r0, #0
    9684:	beq	9628 <sas_read_header+0x90>
    9688:	b	965c <sas_read_header+0xc4>
    968c:	mov	r0, #2
    9690:	add	sp, sp, #1392	; 0x570
    9694:	add	sp, sp, #12
    9698:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    969c:	bl	3eb4 <machine_is_little_endian@plt>
    96a0:	str	sl, [r5]
    96a4:	mov	r9, r0
    96a8:	ldr	r1, [pc, #1204]	; 9b64 <sas_read_header+0x5cc>
    96ac:	ldrb	r3, [sp, #282]	; 0x11a
    96b0:	add	r1, pc, r1
    96b4:	ldr	r2, [r1]
    96b8:	cmp	r2, r3
    96bc:	beq	9b04 <sas_read_header+0x56c>
    96c0:	mov	r2, #1
    96c4:	b	96d4 <sas_read_header+0x13c>
    96c8:	add	r2, r2, #1
    96cc:	cmp	r2, #62	; 0x3e
    96d0:	beq	99e8 <sas_read_header+0x450>
    96d4:	ldr	r0, [r1, #36]	; 0x24
    96d8:	add	r1, r1, #36	; 0x24
    96dc:	cmp	r0, r3
    96e0:	bne	96c8 <sas_read_header+0x130>
    96e4:	add	r2, r2, r2, lsl #3
    96e8:	lsl	r2, r2, #2
    96ec:	add	r2, r2, #4
    96f0:	ldr	r1, [pc, #1136]	; 9b68 <sas_read_header+0x5d0>
    96f4:	add	r1, pc, r1
    96f8:	add	r2, r1, r2
    96fc:	str	r2, [r5, #144]	; 0x90
    9700:	cmp	r2, #0
    9704:	addne	sl, sp, #304	; 0x130
    9708:	addne	fp, sp, #368	; 0x170
    970c:	addne	lr, r5, #80	; 0x50
    9710:	beq	99b0 <sas_read_header+0x418>
    9714:	mov	ip, sl
    9718:	add	lr, lr, #16
    971c:	ldm	ip!, {r0, r1, r2, r3}
    9720:	add	sl, sl, #16
    9724:	cmp	ip, fp
    9728:	str	r0, [lr, #-16]
    972c:	str	r1, [lr, #-12]
    9730:	str	r2, [lr, #-8]
    9734:	str	r3, [lr, #-4]
    9738:	bne	9714 <sas_read_header+0x17c>
    973c:	ldr	r3, [r4, #8]
    9740:	ldr	r2, [r4, #20]
    9744:	mov	r1, #1
    9748:	ldr	r0, [r5, #24]
    974c:	blx	r3
    9750:	cmn	r0, #1
    9754:	beq	9ac4 <sas_read_header+0x52c>
    9758:	add	sl, sp, #40	; 0x28
    975c:	sub	r0, sl, #8
    9760:	ldr	r3, [r4, #12]
    9764:	ldr	r2, [r4, #20]
    9768:	mov	r1, #8
    976c:	blx	r3
    9770:	cmp	r0, #7
    9774:	bls	968c <sas_read_header+0xf4>
    9778:	cmp	r9, #0
    977c:	bne	9acc <sas_read_header+0x534>
    9780:	ldr	r3, [r4, #12]
    9784:	ldr	r2, [r4, #20]
    9788:	mov	r1, #8
    978c:	mov	r0, sl
    9790:	blx	r3
    9794:	cmp	r0, #7
    9798:	bls	968c <sas_read_header+0xf4>
    979c:	vldr	d0, [sl]
    97a0:	vmov	s15, r6
    97a4:	vcvt.f64.s32	d6, s15
    97a8:	vldr	d7, [sl, #-8]
    97ac:	vadd.f64	d7, d6, d7
    97b0:	vcmp.f64	d7, d7
    97b4:	vmrs	APSR_nzcv, fpscr
    97b8:	bvs	9b0c <sas_read_header+0x574>
    97bc:	vldr	d5, [pc, #900]	; 9b48 <sas_read_header+0x5b0>
    97c0:	vcmpe.f64	d7, d5
    97c4:	vmrs	APSR_nzcv, fpscr
    97c8:	mvngt	r3, #-2147483648	; 0x80000000
    97cc:	bgt	97e8 <sas_read_header+0x250>
    97d0:	vldr	d5, [pc, #888]	; 9b50 <sas_read_header+0x5b8>
    97d4:	vcmpe.f64	d7, d5
    97d8:	vmrs	APSR_nzcv, fpscr
    97dc:	movmi	r3, #-2147483648	; 0x80000000
    97e0:	vcvtpl.s32.f64	s15, d7
    97e4:	vmovpl	r3, s15
    97e8:	vadd.f64	d0, d0, d6
    97ec:	str	r3, [r5, #72]	; 0x48
    97f0:	vcmp.f64	d0, d0
    97f4:	vmrs	APSR_nzcv, fpscr
    97f8:	bvs	9b14 <sas_read_header+0x57c>
    97fc:	vldr	d6, [pc, #836]	; 9b48 <sas_read_header+0x5b0>
    9800:	vcmpe.f64	d0, d6
    9804:	vmrs	APSR_nzcv, fpscr
    9808:	mvngt	r3, #-2147483648	; 0x80000000
    980c:	bgt	9828 <sas_read_header+0x290>
    9810:	vldr	d6, [pc, #824]	; 9b50 <sas_read_header+0x5b8>
    9814:	vcmpe.f64	d0, d6
    9818:	vmrs	APSR_nzcv, fpscr
    981c:	movmi	r3, #-2147483648	; 0x80000000
    9820:	vcvtpl.s32.f64	s15, d0
    9824:	vmovpl	r3, s15
    9828:	str	r3, [r5, #76]	; 0x4c
    982c:	ldr	r2, [r4, #20]
    9830:	ldr	r3, [r4, #8]
    9834:	mov	r1, #1
    9838:	mov	r0, #16
    983c:	blx	r3
    9840:	cmn	r0, #1
    9844:	beq	9ac4 <sas_read_header+0x52c>
    9848:	add	r6, sp, #24
    984c:	sub	r0, r6, #12
    9850:	ldr	r3, [r4, #12]
    9854:	ldr	r2, [r4, #20]
    9858:	mov	r1, #4
    985c:	blx	r3
    9860:	cmp	r0, #3
    9864:	bls	968c <sas_read_header+0xf4>
    9868:	ldr	r3, [r4, #12]
    986c:	ldr	r2, [r4, #20]
    9870:	mov	r1, #4
    9874:	sub	r0, r6, #8
    9878:	blx	r3
    987c:	cmp	r0, #3
    9880:	bls	968c <sas_read_header+0xf4>
    9884:	cmp	r9, #0
    9888:	bne	9b1c <sas_read_header+0x584>
    988c:	ldr	r2, [sp, #12]
    9890:	ldr	ip, [sp, #16]
    9894:	mov	r3, #0
    9898:	strd	r2, [r5, #64]	; 0x40
    989c:	subs	r2, r2, #1024	; 0x400
    98a0:	sbc	r3, r3, #0
    98a4:	mov	r1, #0
    98a8:	ldr	r0, [pc, #700]	; 9b6c <sas_read_header+0x5d4>
    98ac:	cmp	r3, r1
    98b0:	cmpeq	r2, r0
    98b4:	ldr	r2, [pc, #692]	; 9b70 <sas_read_header+0x5d8>
    98b8:	movhi	r3, #1
    98bc:	movls	r3, #0
    98c0:	sub	r1, ip, #1024	; 0x400
    98c4:	cmp	r1, r2
    98c8:	orrhi	r3, r3, #1
    98cc:	cmp	r3, #0
    98d0:	mov	r3, #0
    98d4:	str	ip, [r5, #32]
    98d8:	str	r3, [r5, #36]	; 0x24
    98dc:	bne	965c <sas_read_header+0xc4>
    98e0:	ldr	r3, [r5, #4]
    98e4:	cmp	r3, #0
    98e8:	beq	9b84 <sas_read_header+0x5ec>
    98ec:	mov	r0, #24
    98f0:	mov	r1, #0
    98f4:	mov	r2, #40	; 0x28
    98f8:	mov	r3, #0
    98fc:	add	fp, sp, #376	; 0x178
    9900:	strd	r0, [r5, #48]	; 0x30
    9904:	strd	r2, [r5, #40]	; 0x28
    9908:	mov	r0, fp
    990c:	ldr	r3, [r4, #12]
    9910:	ldr	r2, [r4, #20]
    9914:	mov	r1, #8
    9918:	blx	r3
    991c:	cmp	r0, #7
    9920:	bls	968c <sas_read_header+0xf4>
    9924:	cmp	r9, #0
    9928:	ldrd	r0, [fp]
    992c:	bne	9bd8 <sas_read_header+0x640>
    9930:	strd	r0, [r5, #56]	; 0x38
    9934:	ldrd	r2, [r5, #56]	; 0x38
    9938:	mov	r0, #16777216	; 0x1000000
    993c:	mov	r1, #0
    9940:	cmp	r0, r2
    9944:	sbcs	r3, r1, r3
    9948:	blt	965c <sas_read_header+0xc4>
    994c:	ldr	r3, [r4, #8]
    9950:	ldr	r2, [r4, #20]
    9954:	mov	r1, #1
    9958:	mov	r0, #8
    995c:	blx	r3
    9960:	cmn	r0, #1
    9964:	bne	99f0 <sas_read_header+0x458>
    9968:	cmp	r7, #0
    996c:	beq	9ac4 <sas_read_header+0x52c>
    9970:	ldr	r2, [pc, #508]	; 9b74 <sas_read_header+0x5dc>
    9974:	mov	r3, #8
    9978:	add	r2, pc, r2
    997c:	mov	r1, #1024	; 0x400
    9980:	mov	r0, fp
    9984:	bl	4280 <snprintf@plt>
    9988:	mov	r0, fp
    998c:	mov	r1, r8
    9990:	blx	r7
    9994:	mov	r0, #15
    9998:	b	9660 <sas_read_header+0xc8>
    999c:	bl	3eb4 <machine_is_little_endian@plt>
    99a0:	str	sl, [r5]
    99a4:	clz	r9, r0
    99a8:	lsr	r9, r9, #5
    99ac:	b	96a8 <sas_read_header+0x110>
    99b0:	cmp	r7, #0
    99b4:	moveq	r0, #7
    99b8:	beq	9660 <sas_read_header+0xc8>
    99bc:	ldr	r2, [pc, #436]	; 9b78 <sas_read_header+0x5e0>
    99c0:	add	r4, sp, #376	; 0x178
    99c4:	add	r2, pc, r2
    99c8:	mov	r1, #1024	; 0x400
    99cc:	mov	r0, r4
    99d0:	bl	4280 <snprintf@plt>
    99d4:	mov	r0, r4
    99d8:	mov	r1, r8
    99dc:	blx	r7
    99e0:	mov	r0, #7
    99e4:	b	9660 <sas_read_header+0xc8>
    99e8:	ldr	r2, [r5, #144]	; 0x90
    99ec:	b	9700 <sas_read_header+0x168>
    99f0:	add	r9, sp, #92	; 0x5c
    99f4:	mov	r0, r9
    99f8:	ldr	r3, [r4, #12]
    99fc:	ldr	r2, [r4, #20]
    9a00:	mov	r1, #120	; 0x78
    9a04:	blx	r3
    9a08:	cmp	r0, #119	; 0x77
    9a0c:	bls	968c <sas_read_header+0xf4>
    9a10:	ldr	r1, [pc, #356]	; 9b7c <sas_read_header+0x5e4>
    9a14:	sub	sl, sl, #12
    9a18:	str	sl, [sp]
    9a1c:	mov	r0, r9
    9a20:	mov	r3, r6
    9a24:	sub	r2, r6, #4
    9a28:	add	r1, pc, r1
    9a2c:	bl	428c <__isoc99_sscanf@plt>
    9a30:	cmp	r0, #3
    9a34:	bne	965c <sas_read_header+0xc4>
    9a38:	add	r0, sp, #20
    9a3c:	ldm	r0, {r0, r1, r2}
    9a40:	cmp	r1, #0
    9a44:	cmpeq	r2, #0
    9a48:	sub	ip, r0, #8
    9a4c:	moveq	r3, #1
    9a50:	movne	r3, #0
    9a54:	cmp	ip, #1
    9a58:	movhi	r3, #0
    9a5c:	andls	r3, r3, #1
    9a60:	eor	r3, r3, #1
    9a64:	str	r0, [r5, #12]
    9a68:	str	r1, [r5, #16]
    9a6c:	str	r3, [r5, #8]
    9a70:	str	r2, [r5, #20]
    9a74:	ldr	r3, [r4, #8]
    9a78:	ldr	r2, [r4, #20]
    9a7c:	mov	r1, #0
    9a80:	ldr	r0, [r5, #64]	; 0x40
    9a84:	blx	r3
    9a88:	cmn	r0, #1
    9a8c:	movne	r0, #0
    9a90:	bne	9660 <sas_read_header+0xc8>
    9a94:	cmp	r7, #0
    9a98:	beq	9ac4 <sas_read_header+0x52c>
    9a9c:	ldrd	r4, [r5, #64]	; 0x40
    9aa0:	ldr	r2, [pc, #216]	; 9b80 <sas_read_header+0x5e8>
    9aa4:	mov	r1, #1024	; 0x400
    9aa8:	add	r2, pc, r2
    9aac:	strd	r4, [sp]
    9ab0:	mov	r0, fp
    9ab4:	bl	4280 <snprintf@plt>
    9ab8:	mov	r1, r8
    9abc:	mov	r0, fp
    9ac0:	blx	r7
    9ac4:	mov	r0, #15
    9ac8:	b	9660 <sas_read_header+0xc8>
    9acc:	vldr	d0, [sl, #-8]
    9ad0:	bl	4508 <byteswap_double@plt>
    9ad4:	ldr	r3, [r4, #12]
    9ad8:	ldr	r2, [r4, #20]
    9adc:	mov	r1, #8
    9ae0:	mov	r0, sl
    9ae4:	vstr	d0, [sl, #-8]
    9ae8:	blx	r3
    9aec:	cmp	r0, #7
    9af0:	bls	968c <sas_read_header+0xf4>
    9af4:	vldr	d0, [sl]
    9af8:	bl	4508 <byteswap_double@plt>
    9afc:	vstr	d0, [sl]
    9b00:	b	97a0 <sas_read_header+0x208>
    9b04:	mov	r2, #4
    9b08:	b	96f0 <sas_read_header+0x158>
    9b0c:	mov	r3, #0
    9b10:	b	97e8 <sas_read_header+0x250>
    9b14:	mov	r3, #0
    9b18:	b	9828 <sas_read_header+0x290>
    9b1c:	ldr	r0, [sp, #12]
    9b20:	bl	3d94 <byteswap4@plt>
    9b24:	mov	r3, #0
    9b28:	str	r3, [r5, #68]	; 0x44
    9b2c:	str	r0, [r5, #64]	; 0x40
    9b30:	ldr	r0, [sp, #16]
    9b34:	bl	3d94 <byteswap4@plt>
    9b38:	ldrd	r2, [r5, #64]	; 0x40
    9b3c:	mov	ip, r0
    9b40:	b	989c <sas_read_header+0x304>
    9b44:	nop			; (mov r0, r0)
    9b48:	.word	0xffc00000
    9b4c:	.word	0x41dfffff
    9b50:	.word	0x00000000
    9b54:	.word	0xc1e00000
    9b58:	.word	0x0003ba04
    9b5c:	.word	0x000002f0
    9b60:	.word	0x000002c4
    9b64:	.word	0x0003bc88
    9b68:	.word	0x0003bc44
    9b6c:	.word	0x000ffc00
    9b70:	.word	0x00fffc00
    9b74:	.word	0x0001c794
    9b78:	.word	0x0001c724
    9b7c:	.word	0x0001c70c
    9b80:	.word	0x0001c69c
    9b84:	mov	r0, #12
    9b88:	mov	r1, #0
    9b8c:	mov	r2, #24
    9b90:	mov	r3, #0
    9b94:	add	fp, sp, #376	; 0x178
    9b98:	strd	r0, [r5, #48]	; 0x30
    9b9c:	strd	r2, [r5, #40]	; 0x28
    9ba0:	mov	r0, fp
    9ba4:	ldr	r3, [r4, #12]
    9ba8:	ldr	r2, [r4, #20]
    9bac:	mov	r1, #4
    9bb0:	blx	r3
    9bb4:	cmp	r0, #3
    9bb8:	bls	968c <sas_read_header+0xf4>
    9bbc:	cmp	r9, #0
    9bc0:	ldr	r0, [sp, #376]	; 0x178
    9bc4:	bne	9be0 <sas_read_header+0x648>
    9bc8:	mov	r3, #0
    9bcc:	str	r0, [r5, #56]	; 0x38
    9bd0:	str	r3, [r5, #60]	; 0x3c
    9bd4:	b	9934 <sas_read_header+0x39c>
    9bd8:	bl	3d7c <byteswap8@plt>
    9bdc:	b	9930 <sas_read_header+0x398>
    9be0:	bl	3d94 <byteswap4@plt>
    9be4:	b	9bc8 <sas_read_header+0x630>

00009be8 <sas_write_header>:
    9be8:	sub	sp, sp, #8
    9bec:	push	{r4, r5, r6, r7, r8, r9, lr}
    9bf0:	sub	sp, sp, #212	; 0xd4
    9bf4:	add	r5, sp, #240	; 0xf0
    9bf8:	add	r4, sp, #44	; 0x2c
    9bfc:	stm	r5, {r2, r3}
    9c00:	mov	r7, r0
    9c04:	mov	r2, #44	; 0x2c
    9c08:	mov	r0, r4
    9c0c:	mov	r8, r1
    9c10:	mov	r1, #0
    9c14:	bl	42a4 <memset@plt>
    9c18:	mov	r3, #60	; 0x3c
    9c1c:	mov	r2, #1
    9c20:	mov	r0, r4
    9c24:	str	r3, [sp, #64]	; 0x40
    9c28:	str	r2, [sp, #56]	; 0x38
    9c2c:	bl	3e54 <mktime@plt>
    9c30:	add	r6, sp, #332	; 0x14c
    9c34:	mov	r2, #64	; 0x40
    9c38:	mov	r1, #32
    9c3c:	add	r4, r7, #88	; 0x58
    9c40:	mov	r9, r0
    9c44:	mov	r0, r6
    9c48:	bl	42a4 <memset@plt>
    9c4c:	mov	r0, r4
    9c50:	bl	41fc <strlen@plt>
    9c54:	cmp	r0, #64	; 0x40
    9c58:	bhi	9cb0 <sas_write_header+0xc8>
    9c5c:	cmp	r0, #0
    9c60:	bne	9cb4 <sas_write_header+0xcc>
    9c64:	ldr	r3, [pc, #568]	; 9ea4 <sas_write_header+0x2bc>
    9c68:	add	r3, pc, r3
    9c6c:	ldrh	r1, [r3, #4]
    9c70:	ldrb	r2, [r3, #6]
    9c74:	ldr	r0, [r3]
    9c78:	strh	r1, [r6, #4]
    9c7c:	strb	r2, [r6, #6]
    9c80:	str	r0, [r6]
    9c84:	mov	r1, r5
    9c88:	mov	r2, #164	; 0xa4
    9c8c:	mov	r0, r7
    9c90:	bl	4454 <readstat_write_bytes@plt>
    9c94:	subs	r4, r0, #0
    9c98:	beq	9cc8 <sas_write_header+0xe0>
    9c9c:	mov	r0, r4
    9ca0:	add	sp, sp, #212	; 0xd4
    9ca4:	pop	{r4, r5, r6, r7, r8, r9, lr}
    9ca8:	add	sp, sp, #8
    9cac:	bx	lr
    9cb0:	mov	r0, #64	; 0x40
    9cb4:	mov	r2, r0
    9cb8:	mov	r1, r4
    9cbc:	mov	r0, r6
    9cc0:	bl	3f20 <memcpy@plt>
    9cc4:	b	9c84 <sas_write_header+0x9c>
    9cc8:	ldr	r1, [r8, #24]
    9ccc:	mov	r0, r7
    9cd0:	bl	401c <readstat_write_zeros@plt>
    9cd4:	subs	r4, r0, #0
    9cd8:	bne	9c9c <sas_write_header+0xb4>
    9cdc:	ldr	r3, [r8, #72]	; 0x48
    9ce0:	add	r1, sp, #208	; 0xd0
    9ce4:	sub	r3, r3, r9
    9ce8:	mov	r2, #8
    9cec:	vmov	s15, r3
    9cf0:	mov	r0, r7
    9cf4:	vcvt.f64.s32	d7, s15
    9cf8:	vmov	r4, r5, d7
    9cfc:	strd	r4, [r1, #-192]!	; 0xffffff40
    9d00:	bl	4454 <readstat_write_bytes@plt>
    9d04:	subs	r4, r0, #0
    9d08:	bne	9c9c <sas_write_header+0xb4>
    9d0c:	ldr	r3, [r8, #76]	; 0x4c
    9d10:	add	r1, sp, #208	; 0xd0
    9d14:	sub	r9, r3, r9
    9d18:	mov	r2, #8
    9d1c:	vmov	s15, r9
    9d20:	mov	r0, r7
    9d24:	vcvt.f64.s32	d7, s15
    9d28:	vmov	r4, r5, d7
    9d2c:	strd	r4, [r1, #-184]!	; 0xffffff48
    9d30:	bl	4454 <readstat_write_bytes@plt>
    9d34:	subs	r4, r0, #0
    9d38:	bne	9c9c <sas_write_header+0xb4>
    9d3c:	mov	r1, #16
    9d40:	mov	r0, r7
    9d44:	bl	401c <readstat_write_zeros@plt>
    9d48:	subs	r4, r0, #0
    9d4c:	bne	9c9c <sas_write_header+0xb4>
    9d50:	ldr	ip, [r8, #64]	; 0x40
    9d54:	ldr	r3, [r8, #32]
    9d58:	mov	r2, #4
    9d5c:	add	r1, sp, #8
    9d60:	mov	r0, r7
    9d64:	str	ip, [sp, #8]
    9d68:	str	r3, [sp, #12]
    9d6c:	bl	4454 <readstat_write_bytes@plt>
    9d70:	subs	r4, r0, #0
    9d74:	bne	9c9c <sas_write_header+0xb4>
    9d78:	mov	r2, #4
    9d7c:	add	r1, sp, #12
    9d80:	mov	r0, r7
    9d84:	bl	4454 <readstat_write_bytes@plt>
    9d88:	subs	r4, r0, #0
    9d8c:	bne	9c9c <sas_write_header+0xb4>
    9d90:	ldr	r3, [r8, #4]
    9d94:	cmp	r3, #0
    9d98:	beq	9e80 <sas_write_header+0x298>
    9d9c:	ldrd	r0, [r8, #56]	; 0x38
    9da0:	add	r5, sp, #208	; 0xd0
    9da4:	mov	r2, #8
    9da8:	strd	r0, [r5, #-120]!	; 0xffffff88
    9dac:	mov	r0, r7
    9db0:	mov	r1, r5
    9db4:	bl	4454 <readstat_write_bytes@plt>
    9db8:	mov	r4, r0
    9dbc:	cmp	r4, #0
    9dc0:	bne	9c9c <sas_write_header+0xb4>
    9dc4:	mov	r1, #8
    9dc8:	mov	r0, r7
    9dcc:	bl	401c <readstat_write_zeros@plt>
    9dd0:	subs	r4, r0, #0
    9dd4:	bne	9c9c <sas_write_header+0xb4>
    9dd8:	mov	r1, r4
    9ddc:	mov	r2, #120	; 0x78
    9de0:	mov	r0, r5
    9de4:	bl	42a4 <memset@plt>
    9de8:	ldr	r2, [pc, #184]	; 9ea8 <sas_write_header+0x2c0>
    9dec:	add	r3, sp, #96	; 0x60
    9df0:	add	r2, pc, r2
    9df4:	str	r4, [sp, #106]	; 0x6a
    9df8:	ldm	r2, {r0, r1, r2}
    9dfc:	strh	r4, [sp, #110]	; 0x6e
    9e00:	str	r4, [sp, #32]
    9e04:	stmia	r3!, {r0, r1}
    9e08:	ldr	r0, [r7, #8]
    9e0c:	strh	r2, [r3]
    9e10:	mov	r1, #10
    9e14:	str	r4, [sp, #36]	; 0x24
    9e18:	strb	r4, [sp, #40]	; 0x28
    9e1c:	bl	24f80 <__aeabi_uidivmod>
    9e20:	ldr	r2, [pc, #132]	; 9eac <sas_write_header+0x2c4>
    9e24:	add	r4, sp, #32
    9e28:	mov	r3, #101	; 0x65
    9e2c:	mov	r0, r4
    9e30:	str	r3, [sp]
    9e34:	add	r2, pc, r2
    9e38:	mov	r3, r1
    9e3c:	mov	r1, #9
    9e40:	bl	4280 <snprintf@plt>
    9e44:	ldm	r4, {r0, r1}
    9e48:	mov	r2, #120	; 0x78
    9e4c:	stm	r5, {r0, r1}
    9e50:	mov	r1, r5
    9e54:	mov	r0, r7
    9e58:	bl	4454 <readstat_write_bytes@plt>
    9e5c:	subs	r4, r0, #0
    9e60:	bne	9c9c <sas_write_header+0xb4>
    9e64:	ldr	r1, [r8, #64]	; 0x40
    9e68:	ldr	r3, [r7, #4]
    9e6c:	mov	r0, r7
    9e70:	sub	r1, r1, r3
    9e74:	bl	401c <readstat_write_zeros@plt>
    9e78:	mov	r4, r0
    9e7c:	b	9c9c <sas_write_header+0xb4>
    9e80:	ldr	r3, [r8, #56]	; 0x38
    9e84:	add	r5, sp, #208	; 0xd0
    9e88:	mov	r2, #4
    9e8c:	str	r3, [r5, #-120]!	; 0xffffff88
    9e90:	mov	r0, r7
    9e94:	mov	r1, r5
    9e98:	bl	4454 <readstat_write_bytes@plt>
    9e9c:	mov	r4, r0
    9ea0:	b	9dbc <sas_write_header+0x1d4>
    9ea4:	.word	0x0001c508
    9ea8:	.word	0x0001c2e8
    9eac:	.word	0x0001c344

00009eb0 <sas_header_info_init>:
    9eb0:	push	{r4, r5, r6, r7, r8, lr}
    9eb4:	mov	r4, r0
    9eb8:	mov	r5, r1
    9ebc:	mov	r0, #1
    9ec0:	mov	r1, #152	; 0x98
    9ec4:	bl	3d58 <calloc@plt>
    9ec8:	cmp	r5, #0
    9ecc:	ldr	r3, [r4, #20]
    9ed0:	mov	r5, #0
    9ed4:	mov	r4, #4096	; 0x1000
    9ed8:	movne	r2, #1
    9edc:	moveq	r2, #0
    9ee0:	movne	r6, #8192	; 0x2000
    9ee4:	movne	r7, #0
    9ee8:	moveq	r6, #1024	; 0x400
    9eec:	moveq	r7, #0
    9ef0:	strd	r4, [r0, #32]
    9ef4:	str	r2, [r0, #4]
    9ef8:	str	r3, [r0, #72]	; 0x48
    9efc:	str	r3, [r0, #76]	; 0x4c
    9f00:	movne	r4, #40	; 0x28
    9f04:	movne	r5, #0
    9f08:	movne	r2, #24
    9f0c:	moveq	r4, #24
    9f10:	moveq	r5, #0
    9f14:	moveq	r2, #12
    9f18:	mov	r3, #0
    9f1c:	strd	r6, [r0, #64]	; 0x40
    9f20:	strd	r4, [r0, #40]	; 0x28
    9f24:	strd	r2, [r0, #48]	; 0x30
    9f28:	pop	{r4, r5, r6, r7, r8, pc}

00009f2c <sas_fill_page>:
    9f2c:	push	{r4, r5, r6, lr}
    9f30:	mov	r4, r0
    9f34:	mov	r3, r1
    9f38:	ldrd	r0, [r1, #64]	; 0x40
    9f3c:	ldr	r2, [r4, #4]
    9f40:	ldr	r5, [r3, #32]
    9f44:	subs	r0, r2, r0
    9f48:	rsc	r1, r1, #0
    9f4c:	ldr	r3, [r3, #36]	; 0x24
    9f50:	mov	r2, r5
    9f54:	bl	255b4 <__aeabi_ldivmod>
    9f58:	orrs	r1, r2, r3
    9f5c:	bne	9f68 <sas_fill_page+0x3c>
    9f60:	mov	r0, #0
    9f64:	pop	{r4, r5, r6, pc}
    9f68:	sub	r1, r5, r2
    9f6c:	mov	r0, r4
    9f70:	pop	{r4, r5, r6, lr}
    9f74:	b	401c <readstat_write_zeros@plt>

00009f78 <sas_validate_name>:
    9f78:	push	{r4, r5, r6, lr}
    9f7c:	ldrb	lr, [r0]
    9f80:	cmp	lr, #0
    9f84:	beq	a084 <sas_validate_name+0x10c>
    9f88:	mov	ip, r0
    9f8c:	mov	r3, lr
    9f90:	bic	r2, r3, #32
    9f94:	cmp	r3, #95	; 0x5f
    9f98:	sub	r2, r2, #65	; 0x41
    9f9c:	beq	9fb4 <sas_validate_name+0x3c>
    9fa0:	cmp	r2, #25
    9fa4:	sub	r3, r3, #48	; 0x30
    9fa8:	bls	9fb4 <sas_validate_name+0x3c>
    9fac:	cmp	r3, #9
    9fb0:	bhi	a004 <sas_validate_name+0x8c>
    9fb4:	ldrb	r3, [ip, #1]!
    9fb8:	cmp	r3, #0
    9fbc:	bne	9f90 <sas_validate_name+0x18>
    9fc0:	cmp	lr, #95	; 0x5f
    9fc4:	beq	9fe0 <sas_validate_name+0x68>
    9fc8:	bic	r3, lr, #32
    9fcc:	sub	r3, r3, #65	; 0x41
    9fd0:	cmp	r3, #25
    9fd4:	bls	9fe0 <sas_validate_name+0x68>
    9fd8:	mov	r0, #25
    9fdc:	pop	{r4, r5, r6, pc}
    9fe0:	mov	r5, r1
    9fe4:	ldr	r1, [pc, #160]	; a08c <sas_validate_name+0x114>
    9fe8:	mov	r4, r0
    9fec:	add	r1, pc, r1
    9ff0:	bl	3e00 <strcmp@plt>
    9ff4:	cmp	r0, #0
    9ff8:	bne	a00c <sas_validate_name+0x94>
    9ffc:	mov	r0, #27
    a000:	pop	{r4, r5, r6, pc}
    a004:	mov	r0, #26
    a008:	pop	{r4, r5, r6, pc}
    a00c:	ldr	r1, [pc, #124]	; a090 <sas_validate_name+0x118>
    a010:	mov	r0, r4
    a014:	add	r1, pc, r1
    a018:	bl	3e00 <strcmp@plt>
    a01c:	cmp	r0, #0
    a020:	beq	9ffc <sas_validate_name+0x84>
    a024:	ldr	r1, [pc, #104]	; a094 <sas_validate_name+0x11c>
    a028:	mov	r0, r4
    a02c:	add	r1, pc, r1
    a030:	bl	3e00 <strcmp@plt>
    a034:	cmp	r0, #0
    a038:	beq	9ffc <sas_validate_name+0x84>
    a03c:	ldr	r1, [pc, #84]	; a098 <sas_validate_name+0x120>
    a040:	mov	r0, r4
    a044:	add	r1, pc, r1
    a048:	bl	3e00 <strcmp@plt>
    a04c:	cmp	r0, #0
    a050:	beq	9ffc <sas_validate_name+0x84>
    a054:	ldr	r1, [pc, #64]	; a09c <sas_validate_name+0x124>
    a058:	mov	r0, r4
    a05c:	add	r1, pc, r1
    a060:	bl	3e00 <strcmp@plt>
    a064:	cmp	r0, #0
    a068:	beq	9ffc <sas_validate_name+0x84>
    a06c:	mov	r0, r4
    a070:	bl	41fc <strlen@plt>
    a074:	cmp	r5, r0
    a078:	movcc	r0, #28
    a07c:	movcs	r0, #0
    a080:	pop	{r4, r5, r6, pc}
    a084:	mov	r0, #38	; 0x26
    a088:	pop	{r4, r5, r6, pc}
    a08c:	.word	0x0001c198
    a090:	.word	0x0001c174
    a094:	.word	0x0001c164
    a098:	.word	0x0001c158
    a09c:	.word	0x0001c14c

0000a0a0 <sas_validate_variable>:
    a0a0:	push	{r4, lr}
    a0a4:	bl	4364 <readstat_variable_get_name@plt>
    a0a8:	mov	r1, #32
    a0ac:	pop	{r4, lr}
    a0b0:	b	3d4c <sas_validate_name@plt>

0000a0b4 <sas_validate_tag>:
    a0b4:	sub	r3, r0, #65	; 0x41
    a0b8:	cmp	r0, #95	; 0x5f
    a0bc:	cmpne	r3, #25
    a0c0:	movhi	r0, #21
    a0c4:	movls	r0, #0
    a0c8:	bx	lr

0000a0cc <sas_assign_tag>:
    a0cc:	push	{r4, r5, r6, lr}
    a0d0:	subs	r4, r1, #0
    a0d4:	mov	r5, r0
    a0d8:	moveq	r4, #95	; 0x5f
    a0dc:	beq	a0f0 <sas_assign_tag+0x24>
    a0e0:	sub	r3, r4, #2
    a0e4:	cmp	r3, #25
    a0e8:	addls	r4, r4, #63	; 0x3f
    a0ec:	uxtbls	r4, r4
    a0f0:	mov	r0, r4
    a0f4:	bl	4148 <sas_validate_tag@plt>
    a0f8:	ldrb	r3, [r5, #13]
    a0fc:	cmp	r0, #0
    a100:	orreq	r3, r3, #2
    a104:	movne	r4, #0
    a108:	orrne	r3, r3, #1
    a10c:	strb	r3, [r5, #13]
    a110:	strb	r4, [r5, #12]
    a114:	pop	{r4, r5, r6, pc}

0000a118 <compare_block_pointers>:
    a118:	ldr	r0, [r0]
    a11c:	ldr	r3, [r1]
    a120:	sub	r0, r0, r3
    a124:	bx	lr

0000a128 <sas7bcat_augment_index>:
    a128:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a12c:	add	sl, r0, r1
    a130:	ldr	r3, [r2, #32]
    a134:	add	r3, r0, r3
    a138:	cmp	sl, r3
    a13c:	bcc	a260 <sas7bcat_augment_index+0x138>
    a140:	ldr	r9, [pc, #288]	; a268 <sas7bcat_augment_index+0x140>
    a144:	mov	r5, r2
    a148:	mov	r4, r0
    a14c:	add	r9, pc, r9
    a150:	mov	r8, #4
    a154:	b	a17c <sas7bcat_augment_index+0x54>
    a158:	ldr	r1, [r5, #84]	; 0x54
    a15c:	ldr	r3, [r5, #88]	; 0x58
    a160:	cmp	r3, r1
    a164:	beq	a21c <sas7bcat_augment_index+0xf4>
    a168:	ldr	r3, [r5, #32]
    a16c:	add	r4, r4, r3
    a170:	add	r3, r4, r3
    a174:	cmp	sl, r3
    a178:	bcc	a260 <sas7bcat_augment_index+0x138>
    a17c:	mov	r2, r8
    a180:	mov	r1, r9
    a184:	mov	r0, r4
    a188:	bl	3fa4 <memcmp@plt>
    a18c:	cmp	r0, #0
    a190:	beq	a1b0 <sas7bcat_augment_index+0x88>
    a194:	add	r4, r4, #8
    a198:	mov	r0, r4
    a19c:	mov	r2, r8
    a1a0:	mov	r1, r9
    a1a4:	bl	3fa4 <memcmp@plt>
    a1a8:	cmp	r0, #0
    a1ac:	bne	a260 <sas7bcat_augment_index+0x138>
    a1b0:	ldr	r3, [r5, #48]	; 0x30
    a1b4:	ldrb	r3, [r4, r3]
    a1b8:	cmp	r3, #79	; 0x4f
    a1bc:	bne	a158 <sas7bcat_augment_index+0x30>
    a1c0:	ldr	r3, [r5, #16]
    a1c4:	ldr	r1, [r5, #24]
    a1c8:	cmp	r3, #0
    a1cc:	beq	a244 <sas7bcat_augment_index+0x11c>
    a1d0:	add	r0, r4, #8
    a1d4:	bl	43f4 <sas_read4@plt>
    a1d8:	ldr	r1, [r5, #24]
    a1dc:	mov	fp, r0
    a1e0:	add	r0, r4, #16
    a1e4:	bl	43f4 <sas_read4@plt>
    a1e8:	ldr	r1, [r5, #84]	; 0x54
    a1ec:	mov	r6, #0
    a1f0:	adds	r2, r6, r0
    a1f4:	ldr	ip, [r5, #80]	; 0x50
    a1f8:	adc	r3, fp, #0
    a1fc:	lsl	r0, r1, #3
    a200:	add	r1, r1, #1
    a204:	str	r1, [r5, #84]	; 0x54
    a208:	strd	r2, [ip, r0]
    a20c:	ldr	r3, [r5, #88]	; 0x58
    a210:	mov	r7, fp
    a214:	cmp	r3, r1
    a218:	bne	a168 <sas7bcat_augment_index+0x40>
    a21c:	lsl	r3, r1, #1
    a220:	ldr	r0, [r5, #80]	; 0x50
    a224:	str	r3, [r5, #88]	; 0x58
    a228:	lsl	r1, r1, #4
    a22c:	bl	42e0 <readstat_realloc@plt>
    a230:	cmp	r0, #0
    a234:	str	r0, [r5, #80]	; 0x50
    a238:	bne	a168 <sas7bcat_augment_index+0x40>
    a23c:	mov	r0, #3
    a240:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a244:	add	r0, r4, #4
    a248:	bl	43d0 <sas_read2@plt>
    a24c:	ldr	r1, [r5, #24]
    a250:	mov	fp, r0
    a254:	add	r0, r4, #8
    a258:	bl	43d0 <sas_read2@plt>
    a25c:	b	a1e8 <sas7bcat_augment_index+0xc0>
    a260:	mov	r0, #0
    a264:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a268:	.word	0x0001c064

0000a26c <readstat_parse_sas7bcat>:
    a26c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a270:	vpush	{d8}
    a274:	mov	r4, r0
    a278:	mov	r6, r1
    a27c:	mov	r0, #1
    a280:	add	fp, sp, #40	; 0x28
    a284:	mov	r1, #104	; 0x68
    a288:	sub	sp, sp, #452	; 0x1c4
    a28c:	mov	r5, r2
    a290:	ldr	r9, [r4, #32]
    a294:	bl	3d58 <calloc@plt>
    a298:	mov	r1, #152	; 0x98
    a29c:	mov	r7, r0
    a2a0:	mov	r0, #1
    a2a4:	bl	3d58 <calloc@plt>
    a2a8:	mov	r3, #200	; 0xc8
    a2ac:	str	r3, [r7, #88]	; 0x58
    a2b0:	mov	r8, r0
    a2b4:	mov	r0, #1600	; 0x640
    a2b8:	bl	410c <malloc@plt>
    a2bc:	ldr	r2, [r4, #20]
    a2c0:	ldr	r3, [r4]
    a2c4:	ldr	r1, [r9, #20]
    a2c8:	stmib	r7, {r2, r5, r9}
    a2cc:	str	r3, [r7]
    a2d0:	ldr	r2, [r4, #36]	; 0x24
    a2d4:	ldr	r3, [r4, #40]	; 0x28
    a2d8:	str	r2, [r7, #92]	; 0x5c
    a2dc:	str	r3, [r7, #96]	; 0x60
    a2e0:	ldr	r3, [r9]
    a2e4:	str	r0, [r7, #80]	; 0x50
    a2e8:	mov	r0, r6
    a2ec:	blx	r3
    a2f0:	cmn	r0, #1
    a2f4:	beq	a368 <readstat_parse_sas7bcat+0xfc>
    a2f8:	mov	r3, r5
    a2fc:	ldr	r2, [r4, #24]
    a300:	mov	r1, r8
    a304:	mov	r0, r9
    a308:	bl	43a0 <sas_read_header@plt>
    a30c:	subs	sl, r0, #0
    a310:	beq	a370 <readstat_parse_sas7bcat+0x104>
    a314:	ldr	r3, [r9, #4]
    a318:	ldr	r0, [r9, #20]
    a31c:	blx	r3
    a320:	ldr	r0, [r7, #100]	; 0x64
    a324:	cmp	r0, #0
    a328:	beq	a330 <readstat_parse_sas7bcat+0xc4>
    a32c:	bl	3dd0 <iconv_close@plt>
    a330:	ldr	r0, [r7, #80]	; 0x50
    a334:	cmp	r0, #0
    a338:	beq	a340 <readstat_parse_sas7bcat+0xd4>
    a33c:	bl	3ec0 <free@plt>
    a340:	mov	r0, r7
    a344:	bl	3ec0 <free@plt>
    a348:	cmp	r8, #0
    a34c:	beq	a358 <readstat_parse_sas7bcat+0xec>
    a350:	mov	r0, r8
    a354:	bl	3ec0 <free@plt>
    a358:	mov	r0, sl
    a35c:	sub	sp, fp, #40	; 0x28
    a360:	vpop	{d8}
    a364:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a368:	mov	sl, #1
    a36c:	b	a314 <readstat_parse_sas7bcat+0xa8>
    a370:	ldr	r2, [r8, #4]
    a374:	ldr	r3, [r8, #24]
    a378:	str	r2, [r7, #16]
    a37c:	str	r3, [r7, #20]
    a380:	bl	3eb4 <machine_is_little_endian@plt>
    a384:	ldrd	r2, [r8, #64]	; 0x40
    a388:	ldr	r1, [r8]
    a38c:	ldr	r6, [r7, #92]	; 0x5c
    a390:	strd	r2, [r7, #72]	; 0x48
    a394:	ldrd	r2, [r8, #32]
    a398:	ldrd	r4, [r8, #56]	; 0x38
    a39c:	cmp	r6, #0
    a3a0:	strd	r2, [r7, #64]	; 0x40
    a3a4:	ldr	r2, [r7, #20]
    a3a8:	ldreq	r3, [r8, #144]	; 0x90
    a3ac:	strd	r4, [r7, #56]	; 0x38
    a3b0:	add	r4, r2, #212	; 0xd4
    a3b4:	ldr	ip, [r7, #16]
    a3b8:	moveq	r6, r3
    a3bc:	streq	r3, [r7, #92]	; 0x5c
    a3c0:	asr	r5, r4, #31
    a3c4:	cmp	ip, #0
    a3c8:	strd	r4, [r7, #32]
    a3cc:	eor	r0, r0, r1
    a3d0:	str	r0, [r7, #24]
    a3d4:	add	r0, r2, #428	; 0x1ac
    a3d8:	add	r2, r2, #50	; 0x32
    a3dc:	lsl	r0, r0, #1
    a3e0:	asr	r3, r2, #31
    a3e4:	asr	r1, r0, #31
    a3e8:	strd	r2, [r7, #48]	; 0x30
    a3ec:	strd	r0, [r7, #40]	; 0x28
    a3f0:	beq	a418 <readstat_parse_sas7bcat+0x1ac>
    a3f4:	adds	r0, r0, #144	; 0x90
    a3f8:	adc	r1, r1, #0
    a3fc:	adds	r4, r4, #72	; 0x48
    a400:	adc	r5, r5, #0
    a404:	adds	r2, r2, #24
    a408:	adc	r3, r3, #0
    a40c:	strd	r0, [r7, #40]	; 0x28
    a410:	strd	r4, [r7, #32]
    a414:	strd	r2, [r7, #48]	; 0x30
    a418:	cmp	r6, #0
    a41c:	beq	a440 <readstat_parse_sas7bcat+0x1d4>
    a420:	ldr	r4, [r7, #96]	; 0x60
    a424:	cmp	r4, #0
    a428:	beq	a440 <readstat_parse_sas7bcat+0x1d4>
    a42c:	mov	r1, r4
    a430:	mov	r0, r6
    a434:	bl	3e00 <strcmp@plt>
    a438:	cmp	r0, #0
    a43c:	bne	a554 <readstat_parse_sas7bcat+0x2e8>
    a440:	ldr	r3, [r7]
    a444:	cmp	r3, #0
    a448:	beq	a4f0 <readstat_parse_sas7bcat+0x284>
    a44c:	sub	r4, fp, #372	; 0x174
    a450:	mov	r2, #56	; 0x38
    a454:	mov	r1, #0
    a458:	mov	r0, r4
    a45c:	bl	42a4 <memset@plt>
    a460:	mov	r2, r8
    a464:	ldr	r0, [r8, #12]
    a468:	ldr	ip, [r2], #80	; 0x50
    a46c:	ldr	r3, [r7, #16]
    a470:	cmp	ip, #0
    a474:	moveq	ip, #2
    a478:	movne	ip, #1
    a47c:	asr	r1, r0, #31
    a480:	str	ip, [fp, #-336]	; 0xfffffeb0
    a484:	sub	ip, fp, #364	; 0x16c
    a488:	ldr	lr, [r8, #72]	; 0x48
    a48c:	strd	r0, [ip, #16]
    a490:	ldr	r0, [r7, #92]	; 0x5c
    a494:	ldr	ip, [r8, #76]	; 0x4c
    a498:	ldr	r1, [r7, #100]	; 0x64
    a49c:	and	r3, r3, #1
    a4a0:	sub	r5, fp, #304	; 0x130
    a4a4:	strb	r3, [fp, #-320]	; 0xfffffec0
    a4a8:	str	r0, [fp, #-324]	; 0xfffffebc
    a4ac:	str	lr, [fp, #-356]	; 0xfffffe9c
    a4b0:	str	ip, [fp, #-352]	; 0xfffffea0
    a4b4:	mov	r0, r5
    a4b8:	str	r1, [sp]
    a4bc:	mov	r3, #64	; 0x40
    a4c0:	ldr	r1, [pc, #1536]	; aac8 <readstat_parse_sas7bcat+0x85c>
    a4c4:	bl	4238 <readstat_convert@plt>
    a4c8:	subs	sl, r0, #0
    a4cc:	bne	a314 <readstat_parse_sas7bcat+0xa8>
    a4d0:	str	r5, [fp, #-328]	; 0xfffffeb8
    a4d4:	mov	r0, r4
    a4d8:	ldr	r3, [r7]
    a4dc:	ldr	r1, [r7, #8]
    a4e0:	blx	r3
    a4e4:	cmp	r0, #0
    a4e8:	movne	sl, #4
    a4ec:	bne	a314 <readstat_parse_sas7bcat+0xa8>
    a4f0:	ldr	r0, [r7, #64]	; 0x40
    a4f4:	bl	422c <readstat_malloc@plt>
    a4f8:	subs	r4, r0, #0
    a4fc:	beq	a5ac <readstat_parse_sas7bcat+0x340>
    a500:	ldr	r2, [r7, #64]	; 0x40
    a504:	ldr	r0, [r7, #72]	; 0x48
    a508:	ldr	r3, [r9, #8]
    a50c:	add	r0, r0, r2
    a510:	mov	r1, #0
    a514:	ldr	r2, [r9, #20]
    a518:	blx	r3
    a51c:	cmn	r0, #1
    a520:	bne	a570 <readstat_parse_sas7bcat+0x304>
    a524:	mov	sl, #15
    a528:	mov	r6, #0
    a52c:	ldr	r3, [r9, #4]
    a530:	ldr	r0, [r9, #20]
    a534:	blx	r3
    a538:	mov	r0, r4
    a53c:	bl	3ec0 <free@plt>
    a540:	cmp	r6, #0
    a544:	beq	a320 <readstat_parse_sas7bcat+0xb4>
    a548:	mov	r0, r6
    a54c:	bl	3ec0 <free@plt>
    a550:	b	a320 <readstat_parse_sas7bcat+0xb4>
    a554:	mov	r1, r6
    a558:	mov	r0, r4
    a55c:	bl	4130 <iconv_open@plt>
    a560:	cmn	r0, #1
    a564:	beq	a5b4 <readstat_parse_sas7bcat+0x348>
    a568:	str	r0, [r7, #100]	; 0x64
    a56c:	b	a440 <readstat_parse_sas7bcat+0x1d4>
    a570:	ldr	r3, [r9, #12]
    a574:	ldr	r2, [r9, #20]
    a578:	ldr	r1, [r7, #64]	; 0x40
    a57c:	mov	r0, r4
    a580:	blx	r3
    a584:	ldrd	r2, [r7, #64]	; 0x40
    a588:	sub	r1, fp, #396	; 0x18c
    a58c:	strd	r2, [r1]
    a590:	cmp	r0, r2
    a594:	asr	r1, r0, #31
    a598:	sbcs	r3, r1, r3
    a59c:	bge	a5bc <readstat_parse_sas7bcat+0x350>
    a5a0:	mov	sl, #2
    a5a4:	mov	r6, #0
    a5a8:	b	a52c <readstat_parse_sas7bcat+0x2c0>
    a5ac:	mov	sl, #3
    a5b0:	b	a314 <readstat_parse_sas7bcat+0xa8>
    a5b4:	mov	sl, #7
    a5b8:	b	a314 <readstat_parse_sas7bcat+0xa8>
    a5bc:	ldr	r0, [r7, #40]	; 0x28
    a5c0:	ldr	r3, [fp, #-396]	; 0xfffffe74
    a5c4:	mov	r2, r7
    a5c8:	sub	r1, r3, r0
    a5cc:	add	r0, r4, r0
    a5d0:	bl	a128 <sas7bcat_augment_index>
    a5d4:	subs	sl, r0, #0
    a5d8:	bne	a70c <readstat_parse_sas7bcat+0x4a0>
    a5dc:	ldrd	r2, [r7, #56]	; 0x38
    a5e0:	cmp	r2, #4
    a5e4:	sbcs	r3, r3, #0
    a5e8:	blt	a744 <readstat_parse_sas7bcat+0x4d8>
    a5ec:	ldr	r3, [pc, #1240]	; aacc <readstat_parse_sas7bcat+0x860>
    a5f0:	mov	r2, #3
    a5f4:	add	r3, pc, r3
    a5f8:	mov	r1, r3
    a5fc:	str	sl, [fp, #-432]	; 0xfffffe50
    a600:	mov	r3, #0
    a604:	mov	sl, r1
    a608:	sub	r1, fp, #396	; 0x18c
    a60c:	mov	r5, #4
    a610:	add	r6, r4, #16
    a614:	str	r9, [fp, #-412]	; 0xfffffe64
    a618:	str	r8, [fp, #-420]	; 0xfffffe5c
    a61c:	str	r4, [fp, #-416]	; 0xfffffe60
    a620:	str	r5, [fp, #-428]	; 0xfffffe54
    a624:	strd	r2, [r1]
    a628:	b	a654 <readstat_parse_sas7bcat+0x3e8>
    a62c:	sub	r1, fp, #396	; 0x18c
    a630:	ldrd	r2, [r7, #56]	; 0x38
    a634:	ldrd	r0, [r1]
    a638:	sub	ip, fp, #396	; 0x18c
    a63c:	adds	r0, r0, #1
    a640:	adc	r1, r1, #0
    a644:	cmp	r0, r2
    a648:	sbcs	r3, r1, r3
    a64c:	strd	r0, [ip]
    a650:	bge	a734 <readstat_parse_sas7bcat+0x4c8>
    a654:	ldr	r4, [fp, #-412]	; 0xfffffe64
    a658:	ldr	r0, [r7, #64]	; 0x40
    a65c:	ldr	ip, [fp, #-396]	; 0xfffffe74
    a660:	ldr	r2, [r7, #72]	; 0x48
    a664:	ldr	r3, [r4, #8]
    a668:	mla	r0, r0, ip, r2
    a66c:	mov	r1, #0
    a670:	ldr	r2, [r4, #20]
    a674:	blx	r3
    a678:	cmn	r0, #1
    a67c:	ldr	r0, [fp, #-416]	; 0xfffffe60
    a680:	beq	a724 <readstat_parse_sas7bcat+0x4b8>
    a684:	ldr	r3, [r4, #12]
    a688:	ldr	r2, [r4, #20]
    a68c:	ldr	r1, [r7, #64]	; 0x40
    a690:	blx	r3
    a694:	ldrd	r4, [r7, #64]	; 0x40
    a698:	sub	r3, fp, #404	; 0x194
    a69c:	ldr	r2, [fp, #-428]	; 0xfffffe54
    a6a0:	mov	r8, r4
    a6a4:	mov	r9, r5
    a6a8:	mov	r1, sl
    a6ac:	strd	r8, [r3]
    a6b0:	mov	r4, r0
    a6b4:	asr	r5, r0, #31
    a6b8:	cmp	r4, r8
    a6bc:	sbcs	r3, r5, r9
    a6c0:	mov	r0, r6
    a6c4:	blt	a714 <readstat_parse_sas7bcat+0x4a8>
    a6c8:	bl	3fa4 <memcmp@plt>
    a6cc:	subs	r8, r0, #0
    a6d0:	bne	a62c <readstat_parse_sas7bcat+0x3c0>
    a6d4:	ldr	r3, [fp, #-404]	; 0xfffffe6c
    a6d8:	mov	r2, r7
    a6dc:	sub	r1, r3, #16
    a6e0:	mov	r0, r6
    a6e4:	bl	a128 <sas7bcat_augment_index>
    a6e8:	cmp	r0, #0
    a6ec:	beq	a62c <readstat_parse_sas7bcat+0x3c0>
    a6f0:	mov	r3, r8
    a6f4:	ldr	r9, [fp, #-412]	; 0xfffffe64
    a6f8:	ldr	r4, [fp, #-416]	; 0xfffffe60
    a6fc:	ldr	r8, [fp, #-420]	; 0xfffffe5c
    a700:	mov	sl, r0
    a704:	mov	r6, r3
    a708:	b	a52c <readstat_parse_sas7bcat+0x2c0>
    a70c:	mov	r6, #0
    a710:	b	a52c <readstat_parse_sas7bcat+0x2c0>
    a714:	ldr	r9, [fp, #-412]	; 0xfffffe64
    a718:	ldr	r8, [fp, #-420]	; 0xfffffe5c
    a71c:	ldr	r4, [fp, #-416]	; 0xfffffe60
    a720:	b	a5a0 <readstat_parse_sas7bcat+0x334>
    a724:	ldr	r9, [fp, #-412]	; 0xfffffe64
    a728:	ldr	r8, [fp, #-420]	; 0xfffffe5c
    a72c:	ldr	r4, [fp, #-416]	; 0xfffffe60
    a730:	b	a524 <readstat_parse_sas7bcat+0x2b8>
    a734:	ldr	r9, [fp, #-412]	; 0xfffffe64
    a738:	ldr	r8, [fp, #-420]	; 0xfffffe5c
    a73c:	ldr	r4, [fp, #-416]	; 0xfffffe60
    a740:	ldr	sl, [fp, #-432]	; 0xfffffe50
    a744:	ldr	ip, [r7, #84]	; 0x54
    a748:	cmp	ip, #0
    a74c:	beq	a7f8 <readstat_parse_sas7bcat+0x58c>
    a750:	cmp	ip, #1
    a754:	ldr	lr, [r7, #80]	; 0x50
    a758:	ble	b080 <readstat_parse_sas7bcat+0xe14>
    a75c:	ldrd	r0, [lr]
    a760:	ldrd	r2, [lr, #8]
    a764:	cmp	r1, r3
    a768:	cmpeq	r0, r2
    a76c:	addls	r5, lr, #8
    a770:	movls	r6, #1
    a774:	bls	a794 <readstat_parse_sas7bcat+0x528>
    a778:	b	b050 <readstat_parse_sas7bcat+0xde4>
    a77c:	ldrd	r0, [r3, #8]
    a780:	ldrd	r2, [r3]
    a784:	add	r5, r5, #8
    a788:	cmp	r1, r3
    a78c:	cmpeq	r0, r2
    a790:	bcc	b050 <readstat_parse_sas7bcat+0xde4>
    a794:	add	r6, r6, #1
    a798:	cmp	ip, r6
    a79c:	mov	r3, r5
    a7a0:	bne	a77c <readstat_parse_sas7bcat+0x510>
    a7a4:	mov	r6, #1
    a7a8:	mov	r5, r6
    a7ac:	mov	r0, lr
    a7b0:	str	r9, [fp, #-396]	; 0xfffffe74
    a7b4:	str	r8, [fp, #-404]	; 0xfffffe6c
    a7b8:	mov	r3, r0
    a7bc:	ldrd	r8, [r0, #8]!
    a7c0:	ldrd	r2, [r3]
    a7c4:	lsl	r1, r6, #3
    a7c8:	cmp	r9, r3
    a7cc:	cmpeq	r8, r2
    a7d0:	beq	a7e0 <readstat_parse_sas7bcat+0x574>
    a7d4:	cmp	r6, r5
    a7d8:	add	r6, r6, #1
    a7dc:	strdne	r8, [lr, r1]
    a7e0:	add	r5, r5, #1
    a7e4:	cmp	r5, ip
    a7e8:	bne	a7b8 <readstat_parse_sas7bcat+0x54c>
    a7ec:	ldr	r9, [fp, #-396]	; 0xfffffe74
    a7f0:	ldr	r8, [fp, #-404]	; 0xfffffe6c
    a7f4:	str	r6, [r7, #84]	; 0x54
    a7f8:	ldr	r1, [r7, #84]	; 0x54
    a7fc:	cmp	r1, #0
    a800:	ble	a70c <readstat_parse_sas7bcat+0x4a0>
    a804:	vldr	d8, [pc, #692]	; aac0 <readstat_parse_sas7bcat+0x854>
    a808:	mov	r2, #0
    a80c:	mov	r3, #0
    a810:	sub	r0, fp, #452	; 0x1c4
    a814:	str	r9, [fp, #-456]	; 0xfffffe38
    a818:	mov	r9, r7
    a81c:	mov	r6, #0
    a820:	strd	r2, [r0]
    a824:	str	r6, [fp, #-444]	; 0xfffffe44
    a828:	str	r8, [fp, #-460]	; 0xfffffe34
    a82c:	str	r4, [fp, #-464]	; 0xfffffe30
    a830:	str	sl, [fp, #-476]	; 0xfffffe24
    a834:	ldr	r3, [fp, #-452]	; 0xfffffe3c
    a838:	ldr	r2, [r9, #80]	; 0x50
    a83c:	ldr	r0, [r9, #16]
    a840:	lsl	r3, r3, #3
    a844:	add	ip, r2, r3
    a848:	ldrh	r3, [r2, r3]
    a84c:	ldr	sl, [ip, #4]
    a850:	cmp	r0, #0
    a854:	str	r3, [fp, #-428]	; 0xfffffe54
    a858:	ldr	r4, [fp, #-428]	; 0xfffffe54
    a85c:	moveq	r3, #16
    a860:	movne	r3, #32
    a864:	cmp	r4, #0
    a868:	cmpgt	sl, #0
    a86c:	str	sl, [fp, #-468]	; 0xfffffe2c
    a870:	ldr	r5, [r9, #12]
    a874:	str	r3, [fp, #-412]	; 0xfffffe64
    a878:	str	r3, [fp, #-416]	; 0xfffffe60
    a87c:	ble	a9f8 <readstat_parse_sas7bcat+0x78c>
    a880:	ldrd	r2, [r9, #56]	; 0x38
    a884:	asr	r7, sl, #31
    a888:	cmp	r2, sl
    a88c:	sbcs	r3, r3, r7
    a890:	blt	a9f8 <readstat_parse_sas7bcat+0x78c>
    a894:	mov	r3, #0
    a898:	str	r3, [fp, #-396]	; 0xfffffe74
    a89c:	sub	r3, fp, #300	; 0x12c
    a8a0:	str	r3, [fp, #-420]	; 0xfffffe5c
    a8a4:	sub	r3, fp, #296	; 0x128
    a8a8:	sub	r3, r3, #2
    a8ac:	str	r3, [fp, #-432]	; 0xfffffe50
    a8b0:	sub	r3, fp, #296	; 0x128
    a8b4:	str	r3, [fp, #-436]	; 0xfffffe4c
    a8b8:	sub	r3, fp, #292	; 0x124
    a8bc:	sub	r8, fp, #304	; 0x130
    a8c0:	sub	r3, r3, #2
    a8c4:	str	r3, [fp, #-440]	; 0xfffffe48
    a8c8:	mov	r3, r8
    a8cc:	mov	r6, #1
    a8d0:	mov	r8, r5
    a8d4:	mov	r7, #0
    a8d8:	mov	r5, r3
    a8dc:	b	a958 <readstat_parse_sas7bcat+0x6ec>
    a8e0:	bl	43f4 <sas_read4@plt>
    a8e4:	ldr	r1, [r9, #24]
    a8e8:	mov	sl, r0
    a8ec:	ldr	r0, [fp, #-436]	; 0xfffffe4c
    a8f0:	bl	43d0 <sas_read2@plt>
    a8f4:	ldr	r1, [r9, #24]
    a8f8:	mov	r4, r0
    a8fc:	ldr	r0, [fp, #-440]	; 0xfffffe48
    a900:	bl	43d0 <sas_read2@plt>
    a904:	mov	r3, r0
    a908:	sub	r2, fp, #404	; 0x194
    a90c:	cmp	sl, #0
    a910:	cmpgt	r4, #0
    a914:	strd	r6, [r2]
    a918:	ldr	r2, [fp, #-396]	; 0xfffffe74
    a91c:	asr	r1, sl, #31
    a920:	add	r3, r2, r3
    a924:	str	r3, [fp, #-396]	; 0xfffffe74
    a928:	ble	af90 <readstat_parse_sas7bcat+0xd24>
    a92c:	ldrd	r2, [r9, #56]	; 0x38
    a930:	cmp	r2, sl
    a934:	sbcs	r1, r3, r1
    a938:	blt	a9e4 <readstat_parse_sas7bcat+0x778>
    a93c:	sub	r1, fp, #404	; 0x194
    a940:	adds	r6, r6, #1
    a944:	ldrd	r0, [r1]
    a948:	adc	r7, r7, #0
    a94c:	cmp	r0, r2
    a950:	sbcs	r3, r1, r3
    a954:	bge	a9e4 <readstat_parse_sas7bcat+0x778>
    a958:	ldr	r3, [r9, #72]	; 0x48
    a95c:	ldr	r0, [r9, #64]	; 0x40
    a960:	sub	sl, sl, #1
    a964:	add	r3, r4, r3
    a968:	mla	r0, r0, sl, r3
    a96c:	mov	r1, #0
    a970:	ldr	r3, [r8, #8]
    a974:	ldr	r2, [r8, #20]
    a978:	blx	r3
    a97c:	ldr	r1, [fp, #-412]	; 0xfffffe64
    a980:	cmn	r0, #1
    a984:	mov	r0, r5
    a988:	beq	af78 <readstat_parse_sas7bcat+0xd0c>
    a98c:	ldr	r3, [r8, #12]
    a990:	ldr	r2, [r8, #20]
    a994:	blx	r3
    a998:	ldr	r3, [fp, #-416]	; 0xfffffe60
    a99c:	cmp	r0, r3
    a9a0:	mov	r0, r5
    a9a4:	blt	af60 <readstat_parse_sas7bcat+0xcf4>
    a9a8:	ldr	r3, [r9, #16]
    a9ac:	ldr	r1, [r9, #24]
    a9b0:	cmp	r3, #0
    a9b4:	bne	a8e0 <readstat_parse_sas7bcat+0x674>
    a9b8:	bl	43f4 <sas_read4@plt>
    a9bc:	ldr	r1, [r9, #24]
    a9c0:	mov	sl, r0
    a9c4:	ldr	r0, [fp, #-420]	; 0xfffffe5c
    a9c8:	bl	43d0 <sas_read2@plt>
    a9cc:	ldr	r1, [r9, #24]
    a9d0:	mov	r4, r0
    a9d4:	ldr	r0, [fp, #-432]	; 0xfffffe50
    a9d8:	bl	43d0 <sas_read2@plt>
    a9dc:	mov	r3, r0
    a9e0:	b	a908 <readstat_parse_sas7bcat+0x69c>
    a9e4:	ldr	r3, [fp, #-396]	; 0xfffffe74
    a9e8:	mov	r8, r5
    a9ec:	cmp	r3, #0
    a9f0:	bne	aa40 <readstat_parse_sas7bcat+0x7d4>
    a9f4:	ldr	r1, [r9, #84]	; 0x54
    a9f8:	sub	r3, fp, #452	; 0x1c4
    a9fc:	ldrd	r2, [r3]
    aa00:	adds	r2, r2, #1
    aa04:	adc	r3, r3, #0
    aa08:	mov	r5, r3
    aa0c:	mov	r4, r2
    aa10:	sub	r3, fp, #452	; 0x1c4
    aa14:	cmp	r4, r1
    aa18:	strd	r4, [r3]
    aa1c:	asr	r3, r1, #31
    aa20:	sbcs	r3, r5, r3
    aa24:	blt	a834 <readstat_parse_sas7bcat+0x5c8>
    aa28:	sub	r4, fp, #464	; 0x1d0
    aa2c:	mov	r7, r9
    aa30:	ldr	r6, [fp, #-444]	; 0xfffffe44
    aa34:	ldm	r4, {r4, r8, r9}
    aa38:	ldr	sl, [fp, #-476]	; 0xfffffe24
    aa3c:	b	a52c <readstat_parse_sas7bcat+0x2c0>
    aa40:	mov	r1, r3
    aa44:	ldr	r0, [fp, #-444]	; 0xfffffe44
    aa48:	bl	42e0 <readstat_realloc@plt>
    aa4c:	subs	r3, r0, #0
    aa50:	str	r3, [fp, #-444]	; 0xfffffe44
    aa54:	beq	b130 <readstat_parse_sas7bcat+0xec4>
    aa58:	ldr	r3, [r9, #16]
    aa5c:	ldr	r6, [r9, #12]
    aa60:	cmp	r3, #0
    aa64:	movne	sl, #32
    aa68:	strne	sl, [fp, #-416]	; 0xfffffe60
    aa6c:	moveq	sl, #16
    aa70:	streq	sl, [fp, #-416]	; 0xfffffe60
    aa74:	mov	r3, #0
    aa78:	mov	r2, #0
    aa7c:	sub	r1, fp, #404	; 0x194
    aa80:	mov	r7, #0
    aa84:	strd	r2, [r1]
    aa88:	sub	r3, fp, #300	; 0x12c
    aa8c:	str	r3, [fp, #-432]	; 0xfffffe50
    aa90:	sub	r3, fp, #296	; 0x128
    aa94:	sub	r3, r3, #2
    aa98:	str	r3, [fp, #-436]	; 0xfffffe4c
    aa9c:	sub	r3, fp, #296	; 0x128
    aaa0:	str	r3, [fp, #-440]	; 0xfffffe48
    aaa4:	sub	r3, fp, #292	; 0x124
    aaa8:	sub	r3, r3, #2
    aaac:	str	r3, [fp, #-472]	; 0xfffffe28
    aab0:	ldr	r5, [fp, #-468]	; 0xfffffe2c
    aab4:	str	sl, [fp, #-420]	; 0xfffffe5c
    aab8:	b	ab4c <readstat_parse_sas7bcat+0x8e0>
    aabc:	nop			; (mov r0, r0)
    aac0:	.word	0x00000000
    aac4:	.word	0x7ff80000
    aac8:	.word	0x00000101
    aacc:	.word	0x0001bbbc
    aad0:	.word	0x0000ffff
    aad4:	.word	0xfffff0b4
    aad8:	mov	r0, r8
    aadc:	bl	43f4 <sas_read4@plt>
    aae0:	ldr	r1, [r9, #24]
    aae4:	mov	r5, r0
    aae8:	ldr	r0, [fp, #-440]	; 0xfffffe48
    aaec:	bl	43d0 <sas_read2@plt>
    aaf0:	ldr	r1, [r9, #24]
    aaf4:	str	r0, [fp, #-428]	; 0xfffffe54
    aaf8:	ldr	r0, [fp, #-472]	; 0xfffffe28
    aafc:	bl	43d0 <sas_read2@plt>
    ab00:	mov	sl, r0
    ab04:	ldr	r3, [fp, #-444]	; 0xfffffe44
    ab08:	mov	r1, sl
    ab0c:	add	r0, r3, r7
    ab10:	ldr	r3, [fp, #-396]	; 0xfffffe74
    ab14:	add	r7, sl, r7
    ab18:	cmp	r3, r7
    ab1c:	bcc	afe8 <readstat_parse_sas7bcat+0xd7c>
    ab20:	ldr	r3, [r6, #12]
    ab24:	ldr	r2, [r6, #20]
    ab28:	blx	r3
    ab2c:	sub	r3, fp, #404	; 0x194
    ab30:	sub	r1, fp, #404	; 0x194
    ab34:	ldrd	r2, [r3]
    ab38:	adds	r2, r2, #1
    ab3c:	adc	r3, r3, #0
    ab40:	strd	r2, [r1]
    ab44:	cmp	sl, r0
    ab48:	bgt	af60 <readstat_parse_sas7bcat+0xcf4>
    ab4c:	asr	r3, r5, #31
    ab50:	mov	r2, r5
    ab54:	sub	r0, fp, #412	; 0x19c
    ab58:	mov	r1, #0
    ab5c:	strd	r2, [r0]
    ab60:	ldr	r3, [fp, #-428]	; 0xfffffe54
    ab64:	sub	ip, r5, #1
    ab68:	cmp	r5, r1
    ab6c:	cmpgt	r3, r1
    ab70:	ble	ac24 <readstat_parse_sas7bcat+0x9b8>
    ab74:	ldrd	r2, [r9, #56]	; 0x38
    ab78:	ldrd	r4, [r0]
    ab7c:	cmp	r2, r4
    ab80:	sbcs	r0, r3, r5
    ab84:	blt	ac24 <readstat_parse_sas7bcat+0x9b8>
    ab88:	sub	r0, fp, #404	; 0x194
    ab8c:	ldrd	r4, [r0]
    ab90:	cmp	r4, r2
    ab94:	sbcs	r3, r5, r3
    ab98:	bge	ac24 <readstat_parse_sas7bcat+0x9b8>
    ab9c:	ldr	r3, [r9, #72]	; 0x48
    aba0:	ldr	r2, [fp, #-428]	; 0xfffffe54
    aba4:	ldr	r0, [r9, #64]	; 0x40
    aba8:	add	r4, r2, r3
    abac:	ldr	r3, [r6, #8]
    abb0:	mla	r0, r0, ip, r4
    abb4:	ldr	r2, [r6, #20]
    abb8:	blx	r3
    abbc:	ldr	r1, [fp, #-420]	; 0xfffffe5c
    abc0:	cmn	r0, #1
    abc4:	mov	r0, r8
    abc8:	beq	af78 <readstat_parse_sas7bcat+0xd0c>
    abcc:	ldr	r3, [r6, #12]
    abd0:	ldr	r2, [r6, #20]
    abd4:	blx	r3
    abd8:	ldr	r3, [fp, #-416]	; 0xfffffe60
    abdc:	cmp	r0, r3
    abe0:	mov	r0, r8
    abe4:	blt	af60 <readstat_parse_sas7bcat+0xcf4>
    abe8:	ldr	r3, [r9, #16]
    abec:	ldr	r1, [r9, #24]
    abf0:	cmp	r3, #0
    abf4:	bne	aad8 <readstat_parse_sas7bcat+0x86c>
    abf8:	bl	43f4 <sas_read4@plt>
    abfc:	ldr	r1, [r9, #24]
    ac00:	mov	r5, r0
    ac04:	ldr	r0, [fp, #-432]	; 0xfffffe50
    ac08:	bl	43d0 <sas_read2@plt>
    ac0c:	ldr	r1, [r9, #24]
    ac10:	str	r0, [fp, #-428]	; 0xfffffe54
    ac14:	ldr	r0, [fp, #-436]	; 0xfffffe4c
    ac18:	bl	43d0 <sas_read2@plt>
    ac1c:	mov	sl, r0
    ac20:	b	ab04 <readstat_parse_sas7bcat+0x898>
    ac24:	ldr	r3, [fp, #-396]	; 0xfffffe74
    ac28:	cmp	r3, #105	; 0x69
    ac2c:	ble	a9f4 <readstat_parse_sas7bcat+0x788>
    ac30:	ldr	r5, [fp, #-444]	; 0xfffffe44
    ac34:	ldr	r3, [r9, #16]
    ac38:	ldrb	r2, [r5, #2]
    ac3c:	tst	r2, #8
    ac40:	moveq	r4, #0
    ac44:	movne	r4, #4
    ac48:	cmp	r3, #0
    ac4c:	beq	af98 <readstat_parse_sas7bcat+0xd2c>
    ac50:	add	r0, r4, #42	; 0x2a
    ac54:	add	r0, r5, r0
    ac58:	ldr	r1, [r9, #24]
    ac5c:	bl	43f4 <sas_read4@plt>
    ac60:	ldr	r1, [r9, #24]
    ac64:	str	r0, [fp, #-416]	; 0xfffffe60
    ac68:	add	r0, r4, #50	; 0x32
    ac6c:	add	r0, r5, r0
    ac70:	bl	43f4 <sas_read4@plt>
    ac74:	mov	r5, #138	; 0x8a
    ac78:	mov	sl, r0
    ac7c:	ldr	r2, [r9, #100]	; 0x64
    ac80:	mov	r3, #8
    ac84:	str	r2, [sp]
    ac88:	ldr	r2, [fp, #-444]	; 0xfffffe44
    ac8c:	mov	r1, #129	; 0x81
    ac90:	add	r2, r2, r3
    ac94:	mov	r0, r8
    ac98:	bl	4238 <readstat_convert@plt>
    ac9c:	subs	r3, r0, #0
    aca0:	str	r3, [fp, #-404]	; 0xfffffe6c
    aca4:	bne	afcc <readstat_parse_sas7bcat+0xd60>
    aca8:	ldr	r3, [fp, #-444]	; 0xfffffe44
    acac:	cmp	r4, #0
    acb0:	addne	r4, r4, #16
    acb4:	ldrsb	r3, [r3, #2]
    acb8:	cmp	r3, #0
    acbc:	blt	b000 <readstat_parse_sas7bcat+0xd94>
    acc0:	ldr	r3, [fp, #-396]	; 0xfffffe74
    acc4:	add	r6, r4, r5
    acc8:	cmp	r3, r6
    accc:	bcc	a9f4 <readstat_parse_sas7bcat+0x788>
    acd0:	mov	r1, #4
    acd4:	mov	r0, sl
    acd8:	bl	3fc8 <readstat_calloc@plt>
    acdc:	mov	r7, r0
    ace0:	str	r0, [fp, #-412]	; 0xfffffe64
    ace4:	bl	3eb4 <machine_is_little_endian@plt>
    ace8:	cmp	r7, #0
    acec:	str	r0, [fp, #-432]	; 0xfffffe50
    acf0:	beq	b150 <readstat_parse_sas7bcat+0xee4>
    acf4:	ldr	r3, [fp, #-396]	; 0xfffffe74
    acf8:	ldr	r2, [fp, #-444]	; 0xfffffe44
    acfc:	sub	r5, r3, r5
    ad00:	add	r7, r2, r6
    ad04:	ldr	r3, [fp, #-416]	; 0xfffffe60
    ad08:	ldrb	r2, [fp, #-304]	; 0xfffffed0
    ad0c:	cmp	r3, #0
    ad10:	sub	r3, r5, r4
    ad14:	str	r3, [fp, #-420]	; 0xfffffe5c
    ad18:	str	r2, [fp, #-436]	; 0xfffffe4c
    ad1c:	ble	b148 <readstat_parse_sas7bcat+0xedc>
    ad20:	cmp	r3, #2
    ad24:	bls	b0fc <readstat_parse_sas7bcat+0xe90>
    ad28:	mov	r6, r7
    ad2c:	mov	r4, #0
    ad30:	mov	r5, r3
    ad34:	b	ad40 <readstat_parse_sas7bcat+0xad4>
    ad38:	cmp	r5, r3
    ad3c:	bcc	b088 <readstat_parse_sas7bcat+0xe1c>
    ad40:	cmp	sl, r4
    ad44:	add	r4, r4, #1
    ad48:	ble	ad88 <readstat_parse_sas7bcat+0xb1c>
    ad4c:	ldr	r1, [r9, #20]
    ad50:	add	r3, r1, #14
    ad54:	add	r3, r6, r3
    ad58:	sub	r3, r3, r7
    ad5c:	add	r1, r1, #10
    ad60:	cmp	r5, r3
    ad64:	add	r0, r6, r1
    ad68:	bcc	b088 <readstat_parse_sas7bcat+0xe1c>
    ad6c:	ldr	r1, [r9, #24]
    ad70:	bl	43f4 <sas_read4@plt>
    ad74:	sub	r3, r6, r7
    ad78:	cmp	sl, r0
    ad7c:	bls	b088 <readstat_parse_sas7bcat+0xe1c>
    ad80:	ldr	r2, [fp, #-412]	; 0xfffffe64
    ad84:	str	r3, [r2, r0, lsl #2]
    ad88:	ldrb	r3, [r6, #2]
    ad8c:	ldr	r2, [fp, #-416]	; 0xfffffe60
    ad90:	add	r3, r3, #6
    ad94:	add	r6, r6, r3
    ad98:	add	r3, r6, #3
    ad9c:	cmp	r2, r4
    ada0:	sub	r3, r3, r7
    ada4:	bne	ad38 <readstat_parse_sas7bcat+0xacc>
    ada8:	mov	r3, #0
    adac:	str	r3, [fp, #-396]	; 0xfffffe74
    adb0:	str	r8, [fp, #-468]	; 0xfffffe2c
    adb4:	b	aeb8 <readstat_parse_sas7bcat+0xc4c>
    adb8:	mov	r3, #5
    adbc:	add	r0, r0, #22
    adc0:	ldr	r1, [fp, #-432]	; 0xfffffe50
    adc4:	str	r3, [fp, #-380]	; 0xfffffe84
    adc8:	bl	43c4 <sas_read8@plt>
    adcc:	mov	r2, r0
    add0:	mov	r3, r1
    add4:	sub	r1, fp, #428	; 0x1ac
    add8:	mvn	r0, #0
    addc:	strd	r2, [r1]
    ade0:	ldr	r1, [pc, #-792]	; aad0 <readstat_parse_sas7bcat+0x864>
    ade4:	orr	r3, r3, #65280	; 0xff00
    ade8:	cmp	r3, r1
    adec:	cmpeq	r2, r0
    adf0:	vldrne	d7, [fp, #-428]	; 0xfffffe54
    adf4:	vnegne.f64	d7, d7
    adf8:	beq	b0e0 <readstat_parse_sas7bcat+0xe74>
    adfc:	vstr	d7, [fp, #-388]	; 0xfffffe7c
    ae00:	ldr	r1, [r9, #24]
    ae04:	add	r0, r6, #8
    ae08:	bl	43d0 <sas_read2@plt>
    ae0c:	ldr	r2, [fp, #-420]	; 0xfffffe5c
    ae10:	add	r3, r0, #10
    ae14:	add	r3, r6, r3
    ae18:	sub	r3, r3, r7
    ae1c:	cmp	r2, r3
    ae20:	mov	r5, r0
    ae24:	bcc	b088 <readstat_parse_sas7bcat+0xe1c>
    ae28:	ldr	r3, [r9, #4]
    ae2c:	cmp	r3, #0
    ae30:	beq	aea4 <readstat_parse_sas7bcat+0xc38>
    ae34:	lsl	r1, r0, #2
    ae38:	add	r3, r1, #8
    ae3c:	bic	r3, r3, #7
    ae40:	str	sp, [fp, #-428]	; 0xfffffe54
    ae44:	ldr	r0, [r9, #100]	; 0x64
    ae48:	sub	sp, sp, r3
    ae4c:	add	r8, sp, #16
    ae50:	ldr	r2, [fp, #-440]	; 0xfffffe48
    ae54:	add	r1, r1, #1
    ae58:	str	r0, [sp]
    ae5c:	mov	r3, r5
    ae60:	mov	r0, r8
    ae64:	bl	4238 <readstat_convert@plt>
    ae68:	cmp	r0, #0
    ae6c:	bne	b0b0 <readstat_parse_sas7bcat+0xe44>
    ae70:	ldr	r3, [r9, #8]
    ae74:	str	r8, [sp, #8]
    ae78:	str	r3, [sp, #12]
    ae7c:	sub	r3, fp, #380	; 0x17c
    ae80:	ldm	r3, {r0, r1}
    ae84:	stm	sp, {r0, r1}
    ae88:	ldr	r0, [fp, #-468]	; 0xfffffe2c
    ae8c:	ldm	r4, {r2, r3}
    ae90:	ldr	r1, [r9, #4]
    ae94:	blx	r1
    ae98:	cmp	r0, #0
    ae9c:	bne	b16c <readstat_parse_sas7bcat+0xf00>
    aea0:	ldr	sp, [fp, #-428]	; 0xfffffe54
    aea4:	ldr	r3, [fp, #-396]	; 0xfffffe74
    aea8:	add	r5, r5, #11
    aeac:	add	r6, r6, r5
    aeb0:	add	r3, r3, #1
    aeb4:	str	r3, [fp, #-396]	; 0xfffffe74
    aeb8:	ldr	r3, [fp, #-416]	; 0xfffffe60
    aebc:	ldr	r2, [fp, #-396]	; 0xfffffe74
    aec0:	cmp	sl, r3
    aec4:	movlt	r3, sl
    aec8:	cmp	r2, r3
    aecc:	bge	b0b8 <readstat_parse_sas7bcat+0xe4c>
    aed0:	ldr	r3, [fp, #-412]	; 0xfffffe64
    aed4:	ldr	r2, [fp, #-396]	; 0xfffffe74
    aed8:	ldr	r0, [r3, r2, lsl #2]
    aedc:	ldr	r2, [fp, #-420]	; 0xfffffe5c
    aee0:	add	r3, r0, #30
    aee4:	cmp	r2, r3
    aee8:	add	r0, r7, r0
    aeec:	bcc	b088 <readstat_parse_sas7bcat+0xe1c>
    aef0:	add	r3, r6, #10
    aef4:	str	r3, [fp, #-440]	; 0xfffffe48
    aef8:	sub	r3, r3, r7
    aefc:	cmp	r2, r3
    af00:	bcc	b088 <readstat_parse_sas7bcat+0xe1c>
    af04:	ldr	r3, [fp, #-436]	; 0xfffffe4c
    af08:	sub	r4, fp, #388	; 0x184
    af0c:	cmp	r3, #36	; 0x24
    af10:	mov	r3, #0
    af14:	str	r3, [r4, #4]
    af18:	str	r3, [fp, #-388]	; 0xfffffe7c
    af1c:	str	r3, [r4, #8]
    af20:	str	r3, [r4, #12]
    af24:	bne	adb8 <readstat_parse_sas7bcat+0xb4c>
    af28:	ldrb	r2, [r0, #2]
    af2c:	ldr	r3, [r9, #100]	; 0x64
    af30:	sub	r5, fp, #372	; 0x174
    af34:	sub	r2, r2, #10
    af38:	add	r2, r0, r2
    af3c:	str	r3, [sp]
    af40:	mov	r0, r5
    af44:	mov	r3, #16
    af48:	mov	r1, #65	; 0x41
    af4c:	bl	4238 <readstat_convert@plt>
    af50:	cmp	r0, #0
    af54:	bne	b0b4 <readstat_parse_sas7bcat+0xe48>
    af58:	str	r5, [fp, #-388]	; 0xfffffe7c
    af5c:	b	ae00 <readstat_parse_sas7bcat+0xb94>
    af60:	sub	r4, fp, #464	; 0x1d0
    af64:	mov	r7, r9
    af68:	ldr	r6, [fp, #-444]	; 0xfffffe44
    af6c:	ldm	r4, {r4, r8, r9}
    af70:	mov	sl, #2
    af74:	b	a52c <readstat_parse_sas7bcat+0x2c0>
    af78:	sub	r4, fp, #464	; 0x1d0
    af7c:	mov	r7, r9
    af80:	ldr	r6, [fp, #-444]	; 0xfffffe44
    af84:	ldm	r4, {r4, r8, r9}
    af88:	mov	sl, #15
    af8c:	b	a52c <readstat_parse_sas7bcat+0x2c0>
    af90:	mov	r8, r5
    af94:	b	a9ec <readstat_parse_sas7bcat+0x780>
    af98:	ldr	r5, [fp, #-444]	; 0xfffffe44
    af9c:	add	r0, r4, #38	; 0x26
    afa0:	add	r0, r5, r0
    afa4:	ldr	r1, [r9, #24]
    afa8:	bl	43f4 <sas_read4@plt>
    afac:	ldr	r1, [r9, #24]
    afb0:	str	r0, [fp, #-416]	; 0xfffffe60
    afb4:	add	r0, r4, #42	; 0x2a
    afb8:	add	r0, r5, r0
    afbc:	bl	43f4 <sas_read4@plt>
    afc0:	mov	r5, #106	; 0x6a
    afc4:	mov	sl, r0
    afc8:	b	ac7c <readstat_parse_sas7bcat+0xa10>
    afcc:	sub	r4, fp, #464	; 0x1d0
    afd0:	mov	r7, r9
    afd4:	ldm	r4, {r4, r8, r9}
    afd8:	ldr	r6, [fp, #-444]	; 0xfffffe44
    afdc:	ldr	r0, [fp, #-404]	; 0xfffffe6c
    afe0:	mov	sl, r0
    afe4:	b	a52c <readstat_parse_sas7bcat+0x2c0>
    afe8:	sub	r4, fp, #464	; 0x1d0
    afec:	mov	r7, r9
    aff0:	ldr	r6, [fp, #-444]	; 0xfffffe44
    aff4:	ldm	r4, {r4, r8, r9}
    aff8:	mov	sl, #5
    affc:	b	a52c <readstat_parse_sas7bcat+0x2c0>
    b000:	ldr	r3, [r9, #16]
    b004:	cmp	r3, #0
    b008:	bne	acc0 <readstat_parse_sas7bcat+0xa54>
    b00c:	add	r2, r5, r4
    b010:	ldr	r1, [fp, #-396]	; 0xfffffe74
    b014:	add	r3, r2, #32
    b018:	cmp	r1, r3
    b01c:	bcc	a9f4 <readstat_parse_sas7bcat+0x788>
    b020:	ldr	r1, [fp, #-444]	; 0xfffffe44
    b024:	ldr	r3, [r9, #100]	; 0x64
    b028:	add	r2, r1, r2
    b02c:	str	r3, [sp]
    b030:	mov	r1, #129	; 0x81
    b034:	mov	r3, #32
    b038:	mov	r0, r8
    b03c:	bl	4238 <readstat_convert@plt>
    b040:	cmp	r0, #0
    b044:	bne	b11c <readstat_parse_sas7bcat+0xeb0>
    b048:	add	r4, r4, #32
    b04c:	b	acc0 <readstat_parse_sas7bcat+0xa54>
    b050:	ldr	r3, [pc, #-1412]	; aad4 <readstat_parse_sas7bcat+0x868>
    b054:	mov	r1, ip
    b058:	mov	r0, lr
    b05c:	add	r3, pc, r3
    b060:	mov	r2, #8
    b064:	bl	443c <qsort@plt>
    b068:	ldr	ip, [r7, #84]	; 0x54
    b06c:	ldr	lr, [r7, #80]	; 0x50
    b070:	cmp	ip, #0
    b074:	beq	a7f8 <readstat_parse_sas7bcat+0x58c>
    b078:	cmp	ip, #1
    b07c:	bgt	a7a4 <readstat_parse_sas7bcat+0x538>
    b080:	mov	r6, #1
    b084:	b	a7f4 <readstat_parse_sas7bcat+0x588>
    b088:	sub	r4, fp, #464	; 0x1d0
    b08c:	ldr	r0, [fp, #-412]	; 0xfffffe64
    b090:	ldr	r6, [fp, #-444]	; 0xfffffe44
    b094:	mov	r7, r9
    b098:	ldm	r4, {r4, r8, r9}
    b09c:	bl	3ec0 <free@plt>
    b0a0:	mov	r3, #5
    b0a4:	str	r3, [fp, #-404]	; 0xfffffe6c
    b0a8:	ldr	sl, [fp, #-404]	; 0xfffffe6c
    b0ac:	b	a52c <readstat_parse_sas7bcat+0x2c0>
    b0b0:	ldr	sp, [fp, #-428]	; 0xfffffe54
    b0b4:	str	r0, [fp, #-404]	; 0xfffffe6c
    b0b8:	ldr	r0, [fp, #-412]	; 0xfffffe64
    b0bc:	bl	3ec0 <free@plt>
    b0c0:	ldr	r3, [fp, #-404]	; 0xfffffe6c
    b0c4:	cmp	r3, #0
    b0c8:	beq	a9f4 <readstat_parse_sas7bcat+0x788>
    b0cc:	sub	r4, fp, #464	; 0x1d0
    b0d0:	mov	r7, r9
    b0d4:	ldr	r6, [fp, #-444]	; 0xfffffe44
    b0d8:	ldm	r4, {r4, r8, r9}
    b0dc:	b	b0a8 <readstat_parse_sas7bcat+0xe3c>
    b0e0:	ldr	r3, [fp, #-424]	; 0xfffffe58
    b0e4:	mov	r0, r4
    b0e8:	lsr	r1, r3, #8
    b0ec:	uxtb	r1, r1
    b0f0:	bl	44a8 <sas_assign_tag@plt>
    b0f4:	vmov.f64	d7, d8
    b0f8:	b	adfc <readstat_parse_sas7bcat+0xb90>
    b0fc:	sub	r4, fp, #464	; 0x1d0
    b100:	ldr	r0, [fp, #-412]	; 0xfffffe64
    b104:	ldr	r6, [fp, #-444]	; 0xfffffe44
    b108:	mov	r7, r9
    b10c:	mov	sl, #5
    b110:	ldm	r4, {r4, r8, r9}
    b114:	bl	3ec0 <free@plt>
    b118:	b	a52c <readstat_parse_sas7bcat+0x2c0>
    b11c:	sub	r4, fp, #464	; 0x1d0
    b120:	mov	r7, r9
    b124:	ldr	r6, [fp, #-444]	; 0xfffffe44
    b128:	ldm	r4, {r4, r8, r9}
    b12c:	b	afe0 <readstat_parse_sas7bcat+0xd74>
    b130:	sub	r4, fp, #464	; 0x1d0
    b134:	mov	r7, r9
    b138:	ldr	r6, [fp, #-444]	; 0xfffffe44
    b13c:	ldm	r4, {r4, r8, r9}
    b140:	mov	sl, #3
    b144:	b	a52c <readstat_parse_sas7bcat+0x2c0>
    b148:	mov	r6, r7
    b14c:	b	ada8 <readstat_parse_sas7bcat+0xb3c>
    b150:	sub	r4, fp, #464	; 0x1d0
    b154:	mov	r3, #3
    b158:	mov	r7, r9
    b15c:	ldr	r6, [fp, #-444]	; 0xfffffe44
    b160:	ldm	r4, {r4, r8, r9}
    b164:	str	r3, [fp, #-404]	; 0xfffffe6c
    b168:	b	b0a8 <readstat_parse_sas7bcat+0xe3c>
    b16c:	sub	r4, fp, #464	; 0x1d0
    b170:	ldr	r6, [fp, #-444]	; 0xfffffe44
    b174:	mov	r7, r9
    b178:	ldm	r4, {r4, r8, r9}
    b17c:	ldr	r0, [fp, #-412]	; 0xfffffe64
    b180:	ldr	sp, [fp, #-428]	; 0xfffffe54
    b184:	bl	3ec0 <free@plt>
    b188:	mov	r3, #4
    b18c:	str	r3, [fp, #-404]	; 0xfffffe6c
    b190:	b	b0a8 <readstat_parse_sas7bcat+0xe3c>

0000b194 <sas7bcat_begin_data>:
    b194:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b198:	sub	sp, sp, #380	; 0x17c
    b19c:	mov	r1, #0
    b1a0:	mov	r4, r0
    b1a4:	str	r0, [sp, #168]	; 0xa8
    b1a8:	bl	434c <sas_header_info_init@plt>
    b1ac:	ldr	r4, [r4, #40]	; 0x28
    b1b0:	ldr	r3, [pc, #1556]	; b7cc <sas7bcat_begin_data+0x638>
    b1b4:	add	r3, pc, r3
    b1b8:	str	r3, [sp, #196]	; 0xc4
    b1bc:	mov	r5, r0
    b1c0:	str	r0, [sp, #184]	; 0xb8
    b1c4:	lsl	r0, r4, #3
    b1c8:	bl	410c <malloc@plt>
    b1cc:	str	r0, [sp, #188]	; 0xbc
    b1d0:	ldr	r0, [r5, #32]
    b1d4:	bl	410c <malloc@plt>
    b1d8:	cmp	r4, #0
    b1dc:	str	r0, [sp, #192]	; 0xc0
    b1e0:	ble	b7b4 <sas7bcat_begin_data+0x620>
    b1e4:	ldr	r3, [sp, #188]	; 0xbc
    b1e8:	ldr	r8, [pc, #1504]	; b7d0 <sas7bcat_begin_data+0x63c>
    b1ec:	sub	r3, r3, #4
    b1f0:	str	r3, [sp, #176]	; 0xb0
    b1f4:	mov	r3, #0
    b1f8:	str	r3, [sp, #164]	; 0xa4
    b1fc:	ldr	r2, [sp, #164]	; 0xa4
    b200:	add	r3, sp, #212	; 0xd4
    b204:	str	r3, [sp, #172]	; 0xac
    b208:	ldr	r3, [sp, #168]	; 0xa8
    b20c:	ldr	r3, [r3, #36]	; 0x24
    b210:	ldr	r5, [r3, r2, lsl #2]
    b214:	add	r9, r5, #4
    b218:	mov	r0, r9
    b21c:	bl	41fc <strlen@plt>
    b220:	cmp	r0, #8
    b224:	mov	r6, r0
    b228:	movls	r7, #114	; 0x72
    b22c:	movls	r4, #106	; 0x6a
    b230:	bls	b244 <sas7bcat_begin_data+0xb0>
    b234:	cmp	r0, #32
    b238:	movcs	r6, #32
    b23c:	mov	r7, #146	; 0x92
    b240:	mov	r4, #138	; 0x8a
    b244:	mov	r1, r9
    b248:	mov	r2, r6
    b24c:	ldr	r0, [sp, #172]	; 0xac
    b250:	bl	3f20 <memcpy@plt>
    b254:	ldr	r9, [r5, #264]	; 0x108
    b258:	cmp	r9, #0
    b25c:	ble	b290 <sas7bcat_begin_data+0xfc>
    b260:	mov	r7, #0
    b264:	mov	r1, r7
    b268:	mov	r0, r5
    b26c:	bl	44cc <readstat_get_value_label@plt>
    b270:	ldr	r9, [r5, #264]	; 0x108
    b274:	add	r7, r7, #1
    b278:	cmp	r7, r9
    b27c:	ldr	r3, [r0, #28]
    b280:	add	r3, r3, #41	; 0x29
    b284:	add	r4, r4, r3
    b288:	blt	b264 <sas7bcat_begin_data+0xd0>
    b28c:	add	r7, r4, #8
    b290:	mov	r1, r7
    b294:	mov	r0, #1
    b298:	bl	3d58 <calloc@plt>
    b29c:	cmp	r6, #8
    b2a0:	mov	sl, r0
    b2a4:	str	r4, [r0]
    b2a8:	str	r9, [r0, #42]	; 0x2a
    b2ac:	str	r9, [r0, #46]	; 0x2e
    b2b0:	bls	b560 <sas7bcat_begin_data+0x3cc>
    b2b4:	ldr	r4, [sp, #172]	; 0xac
    b2b8:	add	ip, sl, #12
    b2bc:	mvn	r2, #127	; 0x7f
    b2c0:	ldm	r4, {r0, r1}
    b2c4:	add	r3, sl, #110	; 0x6e
    b2c8:	strb	r2, [sl, #6]
    b2cc:	mov	r2, #32
    b2d0:	stm	ip, {r0, r1}
    b2d4:	mov	r1, r2
    b2d8:	mov	r0, r3
    b2dc:	bl	42a4 <memset@plt>
    b2e0:	mov	r1, r4
    b2e4:	mov	r2, r6
    b2e8:	bl	3f20 <memcpy@plt>
    b2ec:	mov	r4, #142	; 0x8e
    b2f0:	mov	r7, #138	; 0x8a
    b2f4:	ldr	r3, [r5, #264]	; 0x108
    b2f8:	add	r4, sl, r4
    b2fc:	cmp	r3, #0
    b300:	rsb	r3, r3, r3, lsl #4
    b304:	add	r7, r7, r3, lsl #1
    b308:	add	r7, r7, #4
    b30c:	add	r7, sl, r7
    b310:	ble	b3e8 <sas7bcat_begin_data+0x254>
    b314:	add	r3, sp, #200	; 0xc8
    b318:	mov	r6, #0
    b31c:	mov	r9, #24
    b320:	str	sl, [sp, #180]	; 0xb4
    b324:	mov	fp, r3
    b328:	b	b388 <sas7bcat_begin_data+0x1f4>
    b32c:	ldr	r2, [sl, #20]
    b330:	str	r8, [r4, #14]
    b334:	cmp	r2, #16
    b338:	str	r8, [r4, #18]
    b33c:	str	r8, [r4, #22]
    b340:	str	r8, [r4, #26]
    b344:	movcs	r2, #16
    b348:	ldr	r1, [sl, #16]
    b34c:	bl	3f20 <memcpy@plt>
    b350:	ldr	r2, [sl, #28]
    b354:	add	r0, r7, #10
    b358:	strh	r2, [r7, #8]
    b35c:	sxth	r2, r2
    b360:	ldr	r1, [sl, #24]
    b364:	bl	3f20 <memcpy@plt>
    b368:	ldr	r3, [sl, #28]
    b36c:	ldr	r2, [r5, #264]	; 0x108
    b370:	add	r6, r6, #1
    b374:	add	r3, r3, #11
    b378:	cmp	r6, r2
    b37c:	add	r4, r4, #30
    b380:	add	r7, r7, r3
    b384:	bge	b3e4 <sas7bcat_begin_data+0x250>
    b388:	mov	r1, r6
    b38c:	mov	r0, r5
    b390:	bl	44cc <readstat_get_value_label@plt>
    b394:	strb	r9, [r4, #2]
    b398:	str	r6, [r4, #10]
    b39c:	ldr	r2, [r5]
    b3a0:	add	r1, r4, #14
    b3a4:	cmp	r2, #0
    b3a8:	mov	sl, r0
    b3ac:	mov	r0, r1
    b3b0:	beq	b32c <sas7bcat_begin_data+0x198>
    b3b4:	vldr	d7, [sl]
    b3b8:	vneg.f64	d7, d7
    b3bc:	vmov	r0, r1, d7
    b3c0:	strd	r0, [sp, #200]	; 0xc8
    b3c4:	bl	3eb4 <machine_is_little_endian@plt>
    b3c8:	cmp	r0, #0
    b3cc:	bne	b550 <sas7bcat_begin_data+0x3bc>
    b3d0:	mov	r2, fp
    b3d4:	ldm	r2!, {r0, r1}
    b3d8:	str	r0, [r4, #22]
    b3dc:	str	r1, [r4, #26]
    b3e0:	b	b350 <sas7bcat_begin_data+0x1bc>
    b3e4:	ldr	sl, [sp, #180]	; 0xb4
    b3e8:	ldr	r3, [sp, #168]	; 0xa8
    b3ec:	ldr	r2, [sp, #164]	; 0xa4
    b3f0:	ldr	r3, [r3, #40]	; 0x28
    b3f4:	add	r2, r2, #1
    b3f8:	cmp	r3, r2
    b3fc:	ldr	r3, [sp, #176]	; 0xb0
    b400:	str	r2, [sp, #164]	; 0xa4
    b404:	str	sl, [r3, #4]!
    b408:	str	r3, [sp, #176]	; 0xb0
    b40c:	bgt	b208 <sas7bcat_begin_data+0x74>
    b410:	ldr	r6, [sp, #172]	; 0xac
    b414:	ldr	r5, [sp, #184]	; 0xb8
    b418:	mov	r0, #4
    b41c:	mov	r1, #0
    b420:	mov	r2, #164	; 0xa4
    b424:	strd	r0, [r5, #56]	; 0x38
    b428:	mov	r1, #0
    b42c:	mov	r0, r6
    b430:	bl	42a4 <memset@plt>
    b434:	ldr	r3, [r5, #4]
    b438:	mov	r2, #34	; 0x22
    b43c:	cmp	r3, #0
    b440:	moveq	r3, r2
    b444:	movne	r3, #51	; 0x33
    b448:	strb	r3, [sp, #244]	; 0xf4
    b44c:	strb	r2, [sp, #247]	; 0xf7
    b450:	bl	3eb4 <machine_is_little_endian@plt>
    b454:	ldr	r3, [pc, #888]	; b7d4 <sas7bcat_begin_data+0x640>
    b458:	mov	r1, #49	; 0x31
    b45c:	add	r3, pc, r3
    b460:	strb	r1, [sp, #251]	; 0xfb
    b464:	mov	r1, #20
    b468:	strb	r1, [sp, #282]	; 0x11a
    b46c:	add	lr, r3, #12
    b470:	ldr	r2, [pc, #864]	; b7d8 <sas7bcat_begin_data+0x644>
    b474:	mov	ip, r6
    b478:	adds	r4, r0, #0
    b47c:	ldm	r3, {r0, r1}
    b480:	add	r3, sp, #296	; 0x128
    b484:	movne	r4, #1
    b488:	stm	r3, {r0, r1}
    b48c:	ldm	lr, {r0, r1}
    b490:	add	r3, sp, #376	; 0x178
    b494:	strb	r4, [sp, #249]	; 0xf9
    b498:	stmdb	r3, {r0, r1}
    b49c:	ldr	r3, [sp, #196]	; 0xc4
    b4a0:	ldr	lr, [r3, r2]
    b4a4:	ldr	r0, [lr]
    b4a8:	ldr	r1, [lr, #4]
    b4ac:	ldr	r2, [lr, #8]
    b4b0:	ldr	r3, [lr, #12]
    b4b4:	stmia	ip!, {r0, r1, r2, r3}
    b4b8:	ldr	r0, [lr, #16]
    b4bc:	ldr	r1, [lr, #20]
    b4c0:	ldr	r2, [lr, #24]
    b4c4:	ldr	r3, [lr, #28]
    b4c8:	stmia	ip!, {r0, r1, r2, r3}
    b4cc:	mov	r2, #156	; 0x9c
    b4d0:	add	r1, sp, #220	; 0xdc
    b4d4:	mov	r0, sp
    b4d8:	bl	3f20 <memcpy@plt>
    b4dc:	ldm	r6, {r2, r3}
    b4e0:	mov	r1, r5
    b4e4:	ldr	r0, [sp, #168]	; 0xa8
    b4e8:	bl	40b8 <sas_write_header@plt>
    b4ec:	subs	r4, r0, #0
    b4f0:	beq	b588 <sas7bcat_begin_data+0x3f4>
    b4f4:	ldr	r3, [sp, #168]	; 0xa8
    b4f8:	ldr	r3, [r3, #40]	; 0x28
    b4fc:	cmp	r3, #0
    b500:	ble	b52c <sas7bcat_begin_data+0x398>
    b504:	ldr	r3, [sp, #188]	; 0xbc
    b508:	ldr	r7, [sp, #168]	; 0xa8
    b50c:	sub	r6, r3, #4
    b510:	mov	r5, #0
    b514:	ldr	r0, [r6, #4]!
    b518:	bl	3ec0 <free@plt>
    b51c:	ldr	r3, [r7, #40]	; 0x28
    b520:	add	r5, r5, #1
    b524:	cmp	r3, r5
    b528:	bgt	b514 <sas7bcat_begin_data+0x380>
    b52c:	ldr	r0, [sp, #188]	; 0xbc
    b530:	bl	3ec0 <free@plt>
    b534:	ldr	r0, [sp, #184]	; 0xb8
    b538:	bl	3ec0 <free@plt>
    b53c:	ldr	r0, [sp, #192]	; 0xc0
    b540:	bl	3ec0 <free@plt>
    b544:	mov	r0, r4
    b548:	add	sp, sp, #380	; 0x17c
    b54c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b550:	ldrd	r0, [sp, #200]	; 0xc8
    b554:	bl	3d7c <byteswap8@plt>
    b558:	strd	r0, [sp, #200]	; 0xc8
    b55c:	b	b3d0 <sas7bcat_begin_data+0x23c>
    b560:	add	r3, r0, #12
    b564:	mov	r2, r6
    b568:	mov	r0, r3
    b56c:	ldr	r1, [sp, #172]	; 0xac
    b570:	str	r8, [sl, #12]
    b574:	str	r8, [sl, #16]
    b578:	bl	3f20 <memcpy@plt>
    b57c:	mov	r4, #110	; 0x6e
    b580:	mov	r7, #106	; 0x6a
    b584:	b	b2f4 <sas7bcat_begin_data+0x160>
    b588:	ldr	r3, [sp, #184]	; 0xb8
    b58c:	ldr	r0, [sp, #168]	; 0xa8
    b590:	ldr	r1, [r3, #32]
    b594:	bl	401c <readstat_write_zeros@plt>
    b598:	subs	r4, r0, #0
    b59c:	bne	b4f4 <sas7bcat_begin_data+0x360>
    b5a0:	ldr	r3, [sp, #184]	; 0xb8
    b5a4:	ldr	r5, [sp, #192]	; 0xc0
    b5a8:	mov	r1, r4
    b5ac:	ldr	r2, [r3, #32]
    b5b0:	mov	r0, r5
    b5b4:	bl	42a4 <memset@plt>
    b5b8:	ldr	r3, [sp, #168]	; 0xa8
    b5bc:	add	r1, r5, #856	; 0x358
    b5c0:	ldr	r6, [r3, #40]	; 0x28
    b5c4:	ldr	r3, [sp, #184]	; 0xb8
    b5c8:	cmp	r6, #0
    b5cc:	ldr	r2, [r3, #32]
    b5d0:	ble	b66c <sas7bcat_begin_data+0x4d8>
    b5d4:	ldr	r0, [sp, #192]	; 0xc0
    b5d8:	add	r3, r0, #1056	; 0x420
    b5dc:	add	r3, r3, #12
    b5e0:	add	r0, r0, r2
    b5e4:	cmp	r3, r0
    b5e8:	bhi	b66c <sas7bcat_begin_data+0x4d8>
    b5ec:	ldr	r3, [sp, #188]	; 0xbc
    b5f0:	ldr	r5, [sp, #192]	; 0xc0
    b5f4:	mov	r2, r4
    b5f8:	sub	lr, r3, #4
    b5fc:	ldr	r8, [pc, #472]	; b7dc <sas7bcat_begin_data+0x648>
    b600:	add	ip, r5, #1280	; 0x500
    b604:	mov	r3, #16
    b608:	mov	r7, #4
    b60c:	mov	r9, #79	; 0x4f
    b610:	ldr	r4, [sp, #184]	; 0xb8
    b614:	b	b630 <sas7bcat_begin_data+0x49c>
    b618:	ldr	r0, [r4, #32]
    b61c:	add	ip, ip, #212	; 0xd4
    b620:	add	fp, r5, r0
    b624:	cmp	sl, fp
    b628:	add	r1, r1, #212	; 0xd4
    b62c:	bhi	b7c4 <sas7bcat_begin_data+0x630>
    b630:	ldr	r0, [lr, #4]!
    b634:	uxth	r3, r3
    b638:	strh	r3, [r1, #8]
    b63c:	str	r8, [r1]
    b640:	strh	r7, [r1, #4]
    b644:	strb	r9, [r1, #50]	; 0x32
    b648:	ldr	r0, [r0]
    b64c:	add	r2, r2, #1
    b650:	add	r3, r3, r0
    b654:	cmp	r6, r2
    b658:	mov	sl, ip
    b65c:	sxth	r3, r3
    b660:	bgt	b618 <sas7bcat_begin_data+0x484>
    b664:	ldr	r3, [sp, #184]	; 0xb8
    b668:	ldr	r2, [r3, #32]
    b66c:	ldr	r1, [sp, #192]	; 0xc0
    b670:	ldr	r0, [sp, #168]	; 0xa8
    b674:	bl	4454 <readstat_write_bytes@plt>
    b678:	subs	r4, r0, #0
    b67c:	bne	b4f4 <sas7bcat_begin_data+0x360>
    b680:	ldr	r3, [sp, #184]	; 0xb8
    b684:	ldr	r0, [sp, #168]	; 0xa8
    b688:	ldr	r1, [r3, #32]
    b68c:	bl	401c <readstat_write_zeros@plt>
    b690:	subs	r4, r0, #0
    b694:	bne	b4f4 <sas7bcat_begin_data+0x360>
    b698:	ldr	r3, [sp, #184]	; 0xb8
    b69c:	mov	r1, r4
    b6a0:	ldr	r0, [sp, #192]	; 0xc0
    b6a4:	ldr	r2, [r3, #32]
    b6a8:	bl	42a4 <memset@plt>
    b6ac:	ldr	r3, [sp, #168]	; 0xa8
    b6b0:	ldr	r3, [r3, #40]	; 0x28
    b6b4:	cmp	r3, #0
    b6b8:	ble	b798 <sas7bcat_begin_data+0x604>
    b6bc:	ldr	r3, [sp, #188]	; 0xbc
    b6c0:	mov	r1, #0
    b6c4:	ldr	r5, [r3]
    b6c8:	ldr	r3, [sp, #184]	; 0xb8
    b6cc:	ldr	ip, [r5]
    b6d0:	ldrd	r2, [r3, #32]
    b6d4:	add	r0, ip, #32
    b6d8:	cmp	r2, r0
    b6dc:	sbcs	r1, r3, r1
    b6e0:	blt	b7a0 <sas7bcat_begin_data+0x60c>
    b6e4:	mov	r7, #16
    b6e8:	mov	r6, r4
    b6ec:	mov	lr, r7
    b6f0:	ldr	r9, [sp, #188]	; 0xbc
    b6f4:	ldr	sl, [sp, #192]	; 0xc0
    b6f8:	mov	fp, ip
    b6fc:	ldr	r8, [sp, #172]	; 0xac
    b700:	b	b730 <sas7bcat_begin_data+0x59c>
    b704:	ldr	r5, [r9, #4]!
    b708:	ldr	r3, [sp, #184]	; 0xb8
    b70c:	mov	r1, #0
    b710:	ldr	fp, [r5]
    b714:	ldrd	r2, [r3, #32]
    b718:	add	r0, fp, #16
    b71c:	add	r0, r0, r7
    b720:	cmp	r2, r0
    b724:	sbcs	r1, r3, r1
    b728:	mov	lr, r7
    b72c:	blt	b7a0 <sas7bcat_begin_data+0x60c>
    b730:	mov	ip, r8
    b734:	str	r6, [r8]
    b738:	str	r6, [r8, #4]
    b73c:	str	r6, [r8, #8]
    b740:	str	r6, [r8, #12]
    b744:	add	r7, r7, #16
    b748:	strh	fp, [sp, #218]	; 0xda
    b74c:	ldm	ip!, {r0, r1, r2, r3}
    b750:	uxth	r7, r7
    b754:	add	ip, sl, lr
    b758:	add	r4, r4, #1
    b75c:	str	r0, [sl, lr]
    b760:	str	r1, [ip, #4]
    b764:	str	r3, [ip, #12]
    b768:	str	r2, [ip, #8]
    b76c:	sxtah	r0, sl, r7
    b770:	ldr	r2, [r5]
    b774:	add	r1, r5, #4
    b778:	bl	3f20 <memcpy@plt>
    b77c:	ldr	r3, [sp, #168]	; 0xa8
    b780:	ldr	r2, [r5]
    b784:	ldr	r3, [r3, #40]	; 0x28
    b788:	add	r7, r7, r2
    b78c:	cmp	r3, r4
    b790:	sxth	r7, r7
    b794:	bgt	b704 <sas7bcat_begin_data+0x570>
    b798:	ldr	r3, [sp, #184]	; 0xb8
    b79c:	ldrd	r2, [r3, #32]
    b7a0:	ldr	r1, [sp, #192]	; 0xc0
    b7a4:	ldr	r0, [sp, #168]	; 0xa8
    b7a8:	bl	4454 <readstat_write_bytes@plt>
    b7ac:	mov	r4, r0
    b7b0:	b	b4f4 <sas7bcat_begin_data+0x360>
    b7b4:	add	r3, sp, #212	; 0xd4
    b7b8:	str	r3, [sp, #172]	; 0xac
    b7bc:	mov	r6, r3
    b7c0:	b	b414 <sas7bcat_begin_data+0x280>
    b7c4:	mov	r2, r0
    b7c8:	b	b66c <sas7bcat_begin_data+0x4d8>
    b7cc:	.word	0x00039e44
    b7d0:	.word	0x20202020
    b7d4:	.word	0x0001ad5c
    b7d8:	.word	0x000002c4
    b7dc:	.word	0x52534c58

0000b7e0 <readstat_begin_writing_sas7bcat>:
    b7e0:	ldr	r3, [r0, #8]
    b7e4:	mov	r2, #0
    b7e8:	cmp	r3, #0
    b7ec:	moveq	r3, #9
    b7f0:	streq	r3, [r0, #8]
    b7f4:	ldr	r3, [pc, #8]	; b804 <readstat_begin_writing_sas7bcat+0x24>
    b7f8:	add	r3, pc, r3
    b7fc:	str	r3, [r0, #276]	; 0x114
    b800:	b	3f68 <readstat_begin_writing_file@plt>
    b804:	.word	0xfffff994

0000b808 <sas7bdat_parse_text_ref.isra.1>:
    b808:	push	{r4, r5, r6, r7, r8, lr}
    b80c:	mov	r5, r1
    b810:	mov	r4, r0
    b814:	ldr	r1, [r2]
    b818:	mov	r0, r5
    b81c:	mov	r6, r2
    b820:	bl	43d0 <sas_read2@plt>
    b824:	ldr	r1, [r6]
    b828:	mov	r8, r0
    b82c:	add	r0, r5, #2
    b830:	bl	43d0 <sas_read2@plt>
    b834:	ldr	r1, [r6]
    b838:	mov	r7, r0
    b83c:	add	r0, r5, #4
    b840:	bl	43d0 <sas_read2@plt>
    b844:	strh	r8, [r4]
    b848:	strh	r7, [r4, #2]
    b84c:	strh	r0, [r4, #4]
    b850:	mov	r0, r4
    b854:	pop	{r4, r5, r6, r7, r8, pc}

0000b858 <sas7bdat_realloc_col_info.isra.4>:
    b858:	push	{r4, r5, r6, lr}
    b85c:	ldr	r5, [r0]
    b860:	cmp	r5, r2
    b864:	bcc	b870 <sas7bdat_realloc_col_info.isra.4+0x18>
    b868:	mov	r0, #0
    b86c:	pop	{r4, r5, r6, pc}
    b870:	mov	r6, r1
    b874:	add	r1, r2, r2, lsl #2
    b878:	str	r2, [r0]
    b87c:	lsl	r1, r1, #3
    b880:	ldr	r0, [r6]
    b884:	mov	r4, r2
    b888:	bl	42e0 <readstat_realloc@plt>
    b88c:	cmp	r0, #0
    b890:	str	r0, [r6]
    b894:	beq	b8bc <sas7bdat_realloc_col_info.isra.4+0x64>
    b898:	sub	r2, r4, r5
    b89c:	add	r5, r5, r5, lsl #2
    b8a0:	add	r2, r2, r2, lsl #2
    b8a4:	add	r0, r0, r5, lsl #3
    b8a8:	lsl	r2, r2, #3
    b8ac:	mov	r1, #0
    b8b0:	bl	42a4 <memset@plt>
    b8b4:	mov	r0, #0
    b8b8:	pop	{r4, r5, r6, pc}
    b8bc:	mov	r0, #3
    b8c0:	pop	{r4, r5, r6, pc}

0000b8c4 <sas7bdat_parse_subheader>:
    b8c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b8c8:	mov	r7, #0
    b8cc:	ldrd	r4, [r3, #136]	; 0x88
    b8d0:	sub	sp, sp, #12
    b8d4:	adds	r8, r4, #2
    b8d8:	adc	r9, r5, #0
    b8dc:	cmp	r7, r9
    b8e0:	cmpeq	r2, r8
    b8e4:	bcs	b8f8 <sas7bdat_parse_subheader+0x34>
    b8e8:	mov	r1, #5
    b8ec:	mov	r0, r1
    b8f0:	add	sp, sp, #12
    b8f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b8f8:	mov	r8, r3
    b8fc:	ldr	r3, [pc, #1488]	; bed4 <sas7bdat_parse_subheader+0x610>
    b900:	mov	r7, r1
    b904:	cmp	r0, r3
    b908:	mov	r6, r2
    b90c:	beq	ba4c <sas7bdat_parse_subheader+0x188>
    b910:	ldr	r3, [pc, #1472]	; bed8 <sas7bdat_parse_subheader+0x614>
    b914:	cmp	r0, r3
    b918:	beq	baf4 <sas7bdat_parse_subheader+0x230>
    b91c:	cmn	r0, #1024	; 0x400
    b920:	beq	b95c <sas7bdat_parse_subheader+0x98>
    b924:	cmn	r0, #3
    b928:	beq	b96c <sas7bdat_parse_subheader+0xa8>
    b92c:	cmn	r0, #1
    b930:	beq	bb48 <sas7bdat_parse_subheader+0x284>
    b934:	cmn	r0, #4
    b938:	beq	bc1c <sas7bdat_parse_subheader+0x358>
    b93c:	ldr	r3, [pc, #1432]	; bedc <sas7bdat_parse_subheader+0x618>
    b940:	cmp	r0, r3
    b944:	beq	bda4 <sas7bdat_parse_subheader+0x4e0>
    b948:	cmn	r0, #2
    b94c:	beq	b95c <sas7bdat_parse_subheader+0x98>
    b950:	bic	r0, r0, #7
    b954:	cmn	r0, #8
    b958:	bne	b8e8 <sas7bdat_parse_subheader+0x24>
    b95c:	mov	r1, #0
    b960:	mov	r0, r1
    b964:	add	sp, sp, #12
    b968:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b96c:	add	r7, r1, r4
    b970:	mov	r0, r7
    b974:	ldr	r1, [r8, #60]	; 0x3c
    b978:	bl	43d0 <sas_read2@plt>
    b97c:	mov	r1, r4
    b980:	mov	r9, r0
    b984:	mov	r0, r6
    b988:	bl	43b8 <sas_subheader_remainder@plt>
    b98c:	cmp	r9, r0
    b990:	bne	b8e8 <sas7bdat_parse_subheader+0x24>
    b994:	ldr	r1, [r8, #152]	; 0x98
    b998:	ldr	r0, [r8, #160]	; 0xa0
    b99c:	add	r1, r1, #1
    b9a0:	str	r1, [r8, #152]	; 0x98
    b9a4:	lsl	r1, r1, #2
    b9a8:	bl	42e0 <readstat_realloc@plt>
    b9ac:	ldr	r1, [r8, #152]	; 0x98
    b9b0:	lsl	r1, r1, #2
    b9b4:	str	r0, [r8, #160]	; 0xa0
    b9b8:	ldr	r0, [r8, #156]	; 0x9c
    b9bc:	bl	42e0 <readstat_realloc@plt>
    b9c0:	ldr	r3, [r8, #160]	; 0xa0
    b9c4:	cmp	r0, #0
    b9c8:	cmpne	r3, #0
    b9cc:	str	r0, [r8, #156]	; 0x9c
    b9d0:	beq	be64 <sas7bdat_parse_subheader+0x5a0>
    b9d4:	sub	r4, r6, r4
    b9d8:	mov	r0, r4
    b9dc:	bl	422c <readstat_malloc@plt>
    b9e0:	subs	r5, r0, #0
    b9e4:	beq	be64 <sas7bdat_parse_subheader+0x5a0>
    b9e8:	mov	r1, r7
    b9ec:	mov	r2, r4
    b9f0:	bl	3f20 <memcpy@plt>
    b9f4:	ldr	r3, [r8, #152]	; 0x98
    b9f8:	ldr	r1, [r8, #156]	; 0x9c
    b9fc:	sub	r3, r3, #-1073741823	; 0xc0000001
    ba00:	ldr	r2, [r8, #160]	; 0xa0
    ba04:	str	r4, [r1, r3, lsl #2]
    ba08:	ldr	r3, [r8, #152]	; 0x98
    ba0c:	cmp	r4, #20
    ba10:	sub	r3, r3, #-1073741823	; 0xc0000001
    ba14:	str	r5, [r2, r3, lsl #2]
    ba18:	bls	b95c <sas7bdat_parse_subheader+0x98>
    ba1c:	ldr	r1, [pc, #1212]	; bee0 <sas7bdat_parse_subheader+0x61c>
    ba20:	add	r0, r5, #12
    ba24:	mov	r2, #8
    ba28:	add	r1, pc, r1
    ba2c:	bl	44fc <strncmp@plt>
    ba30:	cmp	r0, #0
    ba34:	bne	b95c <sas7bdat_parse_subheader+0x98>
    ba38:	ldrb	r3, [r8, #2529]	; 0x9e1
    ba3c:	mov	r1, #0
    ba40:	orr	r3, r3, #1
    ba44:	strb	r3, [r8, #2529]	; 0x9e1
    ba48:	b	b8ec <sas7bdat_parse_subheader+0x28>
    ba4c:	ldr	r3, [r8, #44]	; 0x2c
    ba50:	cmp	r3, #0
    ba54:	beq	bd64 <sas7bdat_parse_subheader+0x4a0>
    ba58:	cmp	r2, #127	; 0x7f
    ba5c:	bls	b8e8 <sas7bdat_parse_subheader+0x24>
    ba60:	add	r0, r7, #40	; 0x28
    ba64:	ldr	r1, [r8, #60]	; 0x3c
    ba68:	bl	43c4 <sas_read8@plt>
    ba6c:	ldr	r1, [r8, #60]	; 0x3c
    ba70:	mov	r6, r0
    ba74:	add	r0, r7, #48	; 0x30
    ba78:	bl	43c4 <sas_read8@plt>
    ba7c:	mov	r4, r0
    ba80:	mov	r5, r1
    ba84:	add	r0, r7, #120	; 0x78
    ba88:	ldr	r1, [r8, #60]	; 0x3c
    ba8c:	bl	43c4 <sas_read8@plt>
    ba90:	mov	r7, r0
    ba94:	str	r6, [r8, #68]	; 0x44
    ba98:	mov	r1, r6
    ba9c:	ldr	r0, [r8, #124]	; 0x7c
    baa0:	bl	42e0 <readstat_realloc@plt>
    baa4:	cmp	r0, #0
    baa8:	str	r0, [r8, #124]	; 0x7c
    baac:	beq	be64 <sas7bdat_parse_subheader+0x5a0>
    bab0:	ldr	r2, [r8, #88]	; 0x58
    bab4:	mov	r3, #0
    bab8:	cmp	r3, r5
    babc:	cmpeq	r2, r4
    bac0:	str	r7, [r8, #72]	; 0x48
    bac4:	bcs	be6c <sas7bdat_parse_subheader+0x5a8>
    bac8:	ldr	r0, [r8, #84]	; 0x54
    bacc:	subs	r2, r4, r2
    bad0:	sbc	r3, r5, r3
    bad4:	cmp	r0, #0
    bad8:	beq	baec <sas7bdat_parse_subheader+0x228>
    badc:	mov	r1, #0
    bae0:	cmp	r3, r1
    bae4:	cmpeq	r2, r0
    bae8:	bcs	b95c <sas7bdat_parse_subheader+0x98>
    baec:	str	r2, [r8, #84]	; 0x54
    baf0:	b	b95c <sas7bdat_parse_subheader+0x98>
    baf4:	ldr	r3, [r8, #80]	; 0x50
    baf8:	cmp	r3, #0
    bafc:	bne	b8e8 <sas7bdat_parse_subheader+0x24>
    bb00:	ldr	r3, [r8, #64]	; 0x40
    bb04:	cmp	r3, #0
    bb08:	bne	b8e8 <sas7bdat_parse_subheader+0x24>
    bb0c:	ldr	r3, [r8, #44]	; 0x2c
    bb10:	cmp	r3, #0
    bb14:	beq	be78 <sas7bdat_parse_subheader+0x5b4>
    bb18:	cmp	r2, #15
    bb1c:	bls	b8e8 <sas7bdat_parse_subheader+0x24>
    bb20:	add	r0, r7, #8
    bb24:	ldr	r1, [r8, #60]	; 0x3c
    bb28:	bl	43c4 <sas_read8@plt>
    bb2c:	str	r0, [r8, #80]	; 0x50
    bb30:	mov	r2, r0
    bb34:	add	r1, r8, #192	; 0xc0
    bb38:	add	r0, r8, #188	; 0xbc
    bb3c:	add	sp, sp, #12
    bb40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bb44:	b	b858 <sas7bdat_realloc_col_info.isra.4>
    bb48:	ldr	r3, [r8, #44]	; 0x2c
    bb4c:	ldr	r1, [r8, #60]	; 0x3c
    bb50:	cmp	r3, #0
    bb54:	add	r0, r7, r4
    bb58:	subne	r9, r2, #28
    bb5c:	subeq	r9, r2, #20
    bb60:	bl	43d0 <sas_read2@plt>
    bb64:	mov	r1, r4
    bb68:	lsr	r9, r9, #3
    bb6c:	mov	sl, r0
    bb70:	mov	r0, r6
    bb74:	bl	43b8 <sas_subheader_remainder@plt>
    bb78:	cmp	sl, r0
    bb7c:	bne	b8e8 <sas7bdat_parse_subheader+0x24>
    bb80:	ldr	r2, [r8, #164]	; 0xa4
    bb84:	add	r1, r8, #192	; 0xc0
    bb88:	add	r2, r9, r2
    bb8c:	str	r2, [r8, #164]	; 0xa4
    bb90:	add	r0, r8, #188	; 0xbc
    bb94:	bl	b858 <sas7bdat_realloc_col_info.isra.4>
    bb98:	subs	r1, r0, #0
    bb9c:	bne	b8ec <sas7bdat_parse_subheader+0x28>
    bba0:	ldr	r3, [r8, #164]	; 0xa4
    bba4:	sub	r6, r3, r9
    bba8:	cmp	r3, r6
    bbac:	ble	b95c <sas7bdat_parse_subheader+0x98>
    bbb0:	mov	r5, #40	; 0x28
    bbb4:	add	r4, r4, #8
    bbb8:	mul	r5, r5, r6
    bbbc:	add	r7, r7, r4
    bbc0:	ldr	r1, [r8, #60]	; 0x3c
    bbc4:	mov	r0, r7
    bbc8:	ldr	r4, [r8, #192]	; 0xc0
    bbcc:	bl	43d0 <sas_read2@plt>
    bbd0:	ldr	r1, [r8, #60]	; 0x3c
    bbd4:	add	r6, r6, #1
    bbd8:	mov	sl, r0
    bbdc:	add	r0, r7, #2
    bbe0:	bl	43d0 <sas_read2@plt>
    bbe4:	ldr	r1, [r8, #60]	; 0x3c
    bbe8:	mov	r9, r0
    bbec:	add	r0, r7, #4
    bbf0:	bl	43d0 <sas_read2@plt>
    bbf4:	ldr	r2, [r8, #164]	; 0xa4
    bbf8:	add	r3, r4, r5
    bbfc:	cmp	r6, r2
    bc00:	strh	sl, [r4, r5]
    bc04:	add	r7, r7, #8
    bc08:	strh	r9, [r3, #2]
    bc0c:	add	r5, r5, #40	; 0x28
    bc10:	strh	r0, [r3, #4]
    bc14:	blt	bbc0 <sas7bdat_parse_subheader+0x2fc>
    bc18:	b	b95c <sas7bdat_parse_subheader+0x98>
    bc1c:	ldr	r3, [r8, #44]	; 0x2c
    bc20:	ldr	r1, [r8, #60]	; 0x3c
    bc24:	cmp	r3, #0
    bc28:	subeq	r9, r2, #20
    bc2c:	ldreq	r3, [pc, #688]	; bee4 <sas7bdat_parse_subheader+0x620>
    bc30:	subne	r9, r2, #28
    bc34:	add	r0, r7, r4
    bc38:	umulleq	r3, r9, r3, r9
    bc3c:	lsrne	r9, r9, #4
    bc40:	lsreq	r9, r9, #3
    bc44:	bl	43d0 <sas_read2@plt>
    bc48:	mov	r1, r4
    bc4c:	mov	sl, r0
    bc50:	mov	r0, r6
    bc54:	bl	43b8 <sas_subheader_remainder@plt>
    bc58:	cmp	sl, r0
    bc5c:	bne	b8e8 <sas7bdat_parse_subheader+0x24>
    bc60:	ldr	r2, [r8, #168]	; 0xa8
    bc64:	add	r1, r8, #192	; 0xc0
    bc68:	add	r2, r9, r2
    bc6c:	str	r2, [r8, #168]	; 0xa8
    bc70:	add	r0, r8, #188	; 0xbc
    bc74:	bl	b858 <sas7bdat_realloc_col_info.isra.4>
    bc78:	subs	r1, r0, #0
    bc7c:	bne	b8ec <sas7bdat_parse_subheader+0x28>
    bc80:	ldr	r3, [r8, #168]	; 0xa8
    bc84:	sub	r6, r3, r9
    bc88:	cmp	r3, r6
    bc8c:	ble	b95c <sas7bdat_parse_subheader+0x98>
    bc90:	mov	r9, #40	; 0x28
    bc94:	add	r2, r4, #8
    bc98:	mul	r9, r9, r6
    bc9c:	ldr	ip, [r8, #192]	; 0xc0
    bca0:	add	r4, r7, r2
    bca4:	mov	r5, r1
    bca8:	b	bd3c <sas7bdat_parse_subheader+0x478>
    bcac:	bl	43c4 <sas_read8@plt>
    bcb0:	strd	r0, [fp, #24]
    bcb4:	ldr	r2, [r8, #44]	; 0x2c
    bcb8:	ldr	r3, [r8, #192]	; 0xc0
    bcbc:	cmp	r2, #0
    bcc0:	movne	sl, #8
    bcc4:	moveq	sl, #4
    bcc8:	ldr	r1, [r8, #60]	; 0x3c
    bccc:	add	r0, r4, sl
    bcd0:	movne	fp, #14
    bcd4:	moveq	fp, #10
    bcd8:	add	r7, r3, r9
    bcdc:	bl	43f4 <sas_read4@plt>
    bce0:	ldr	ip, [r8, #192]	; 0xc0
    bce4:	ldr	lr, [r8, #176]	; 0xb0
    bce8:	add	r1, ip, r9
    bcec:	str	r0, [r7, #32]
    bcf0:	ldr	r2, [r1, #32]
    bcf4:	cmp	r2, lr
    bcf8:	strhi	r2, [r8, #176]	; 0xb0
    bcfc:	ldrb	r2, [r4, fp]
    bd00:	cmp	r2, #1
    bd04:	moveq	r3, #5
    bd08:	streq	r3, [r1, #36]	; 0x24
    bd0c:	beq	bd1c <sas7bdat_parse_subheader+0x458>
    bd10:	cmp	r2, #2
    bd14:	bne	b8e8 <sas7bdat_parse_subheader+0x24>
    bd18:	str	r5, [r1, #36]	; 0x24
    bd1c:	ldr	r2, [r8, #168]	; 0xa8
    bd20:	str	r6, [r1, #20]
    bd24:	add	r6, r6, #1
    bd28:	add	r3, sl, #8
    bd2c:	cmp	r6, r2
    bd30:	add	r4, r4, r3
    bd34:	add	r9, r9, #40	; 0x28
    bd38:	bge	b95c <sas7bdat_parse_subheader+0x98>
    bd3c:	ldr	sl, [r8, #44]	; 0x2c
    bd40:	mov	r0, r4
    bd44:	cmp	sl, #0
    bd48:	add	fp, ip, r9
    bd4c:	ldr	r1, [r8, #60]	; 0x3c
    bd50:	bne	bcac <sas7bdat_parse_subheader+0x3e8>
    bd54:	bl	43f4 <sas_read4@plt>
    bd58:	str	sl, [fp, #28]
    bd5c:	str	r0, [fp, #24]
    bd60:	b	bcb4 <sas7bdat_parse_subheader+0x3f0>
    bd64:	cmp	r2, #63	; 0x3f
    bd68:	bls	b8e8 <sas7bdat_parse_subheader+0x24>
    bd6c:	ldr	r1, [r8, #60]	; 0x3c
    bd70:	add	r0, r7, #20
    bd74:	bl	43f4 <sas_read4@plt>
    bd78:	ldr	r1, [r8, #60]	; 0x3c
    bd7c:	mov	r5, #0
    bd80:	mov	r6, r0
    bd84:	add	r0, r7, #24
    bd88:	bl	43f4 <sas_read4@plt>
    bd8c:	ldr	r1, [r8, #60]	; 0x3c
    bd90:	mov	r4, r0
    bd94:	add	r0, r7, #60	; 0x3c
    bd98:	bl	43f4 <sas_read4@plt>
    bd9c:	mov	r7, r0
    bda0:	b	ba94 <sas7bdat_parse_subheader+0x1d0>
    bda4:	ldr	r3, [r8, #44]	; 0x2c
    bda8:	cmp	r3, #0
    bdac:	movne	r2, #58	; 0x3a
    bdb0:	moveq	r2, #46	; 0x2e
    bdb4:	cmp	r6, r2
    bdb8:	bcc	b8e8 <sas7bdat_parse_subheader+0x24>
    bdbc:	ldr	r4, [r8, #172]	; 0xac
    bdc0:	ldr	r5, [r8, #188]	; 0xbc
    bdc4:	add	r4, r4, #1
    bdc8:	cmp	r4, r5
    bdcc:	str	r4, [r8, #172]	; 0xac
    bdd0:	mov	r2, r4
    bdd4:	bhi	be90 <sas7bdat_parse_subheader+0x5cc>
    bdd8:	add	r2, r2, r2, lsl #2
    bddc:	ldr	r4, [r8, #192]	; 0xc0
    bde0:	lsl	r2, r2, #3
    bde4:	sub	r2, r2, #40	; 0x28
    bde8:	cmp	r3, #0
    bdec:	add	r4, r4, r2
    bdf0:	addne	r1, r7, #46	; 0x2e
    bdf4:	addeq	r1, r7, #34	; 0x22
    bdf8:	add	r6, r8, #60	; 0x3c
    bdfc:	mov	r2, r6
    be00:	mov	r0, sp
    be04:	bl	b808 <sas7bdat_parse_text_ref.isra.1>
    be08:	ldr	r3, [r8, #172]	; 0xac
    be0c:	ldr	r2, [sp]
    be10:	ldr	r1, [r8, #44]	; 0x2c
    be14:	add	r3, r3, r3, lsl #2
    be18:	str	r2, [r4, #6]
    be1c:	ldrh	r2, [sp, #4]
    be20:	cmp	r1, #0
    be24:	ldr	r8, [r8, #192]	; 0xc0
    be28:	lsl	r3, r3, #3
    be2c:	sub	r3, r3, #40	; 0x28
    be30:	strh	r2, [r4, #10]
    be34:	addne	r1, r7, #52	; 0x34
    be38:	addeq	r1, r7, #40	; 0x28
    be3c:	mov	r0, sp
    be40:	mov	r2, r6
    be44:	add	r8, r8, r3
    be48:	bl	b808 <sas7bdat_parse_text_ref.isra.1>
    be4c:	ldr	r0, [sp]
    be50:	mov	r1, #0
    be54:	str	r0, [r8, #12]
    be58:	ldrh	r3, [sp, #4]
    be5c:	strh	r3, [r8, #16]
    be60:	b	b8ec <sas7bdat_parse_subheader+0x28>
    be64:	mov	r1, #3
    be68:	b	b8ec <sas7bdat_parse_subheader+0x28>
    be6c:	str	r4, [r8, #88]	; 0x58
    be70:	mov	r2, #0
    be74:	b	baec <sas7bdat_parse_subheader+0x228>
    be78:	cmp	r2, #7
    be7c:	bls	b8e8 <sas7bdat_parse_subheader+0x24>
    be80:	add	r0, r7, #4
    be84:	ldr	r1, [r8, #60]	; 0x3c
    be88:	bl	43f4 <sas_read4@plt>
    be8c:	b	bb2c <sas7bdat_parse_subheader+0x268>
    be90:	add	r1, r4, r4, lsl #2
    be94:	str	r4, [r8, #188]	; 0xbc
    be98:	lsl	r1, r1, #3
    be9c:	ldr	r0, [r8, #192]	; 0xc0
    bea0:	bl	42e0 <readstat_realloc@plt>
    bea4:	cmp	r0, #0
    bea8:	str	r0, [r8, #192]	; 0xc0
    beac:	beq	be64 <sas7bdat_parse_subheader+0x5a0>
    beb0:	mov	r3, #40	; 0x28
    beb4:	sub	r2, r4, r5
    beb8:	mla	r0, r3, r5, r0
    bebc:	mul	r2, r3, r2
    bec0:	mov	r1, #0
    bec4:	bl	42a4 <memset@plt>
    bec8:	ldr	r2, [r8, #172]	; 0xac
    becc:	ldr	r3, [r8, #44]	; 0x2c
    bed0:	b	bdd8 <sas7bdat_parse_subheader+0x514>
    bed4:	.word	0xf7f7f7f7
    bed8:	.word	0xf6f6f6f6
    bedc:	.word	0xfffffbfe
    bee0:	.word	0x0001a848
    bee4:	.word	0xaaaaaaab

0000bee8 <sas7bdat_parse_page_pass1>:
    bee8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    beec:	sub	sp, sp, #44	; 0x2c
    bef0:	mov	r3, r0
    bef4:	str	r0, [sp, #24]
    bef8:	ldr	r0, [r2, #128]	; 0x80
    befc:	mov	r9, r1
    bf00:	sub	r0, r0, #4
    bf04:	ldr	r1, [r2, #60]	; 0x3c
    bf08:	add	r0, r3, r0
    bf0c:	mov	r4, r2
    bf10:	bl	43d0 <sas_read2@plt>
    bf14:	ldr	r5, [r4, #144]	; 0x90
    bf18:	ldrd	sl, [r4, #128]	; 0x80
    bf1c:	mov	r3, #0
    bf20:	mov	r7, r3
    bf24:	mov	r6, r9
    bf28:	strd	r6, [sp, #16]
    bf2c:	mul	r1, r5, r0
    bf30:	mov	r8, r0
    bf34:	adds	r2, sl, r1
    bf38:	adc	r3, fp, r1, asr #31
    bf3c:	cmp	r3, r7
    bf40:	cmpeq	r2, r9
    bf44:	bls	bf54 <sas7bdat_parse_page_pass1+0x6c>
    bf48:	mov	r0, #5
    bf4c:	add	sp, sp, #44	; 0x2c
    bf50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bf54:	cmp	r0, #0
    bf58:	beq	c10c <sas7bdat_parse_page_pass1+0x224>
    bf5c:	ldr	r3, [sp, #24]
    bf60:	uxth	r2, r0
    bf64:	add	sl, r3, sl
    bf68:	add	r9, r3, r9
    bf6c:	mov	fp, #0
    bf70:	mov	r3, #0
    bf74:	strd	r2, [sp, #32]
    bf78:	ldr	r3, [r4, #44]	; 0x2c
    bf7c:	ldr	r2, [r4, #136]	; 0x88
    bf80:	cmp	r3, #0
    bf84:	sub	r3, r9, sl
    bf88:	beq	c118 <sas7bdat_parse_page_pass1+0x230>
    bf8c:	cmp	r3, #17
    bf90:	bls	bf48 <sas7bdat_parse_page_pass1+0x60>
    bf94:	ldr	r1, [r4, #60]	; 0x3c
    bf98:	mov	r0, sl
    bf9c:	str	r2, [sp, #28]
    bfa0:	bl	43c4 <sas_read8@plt>
    bfa4:	strd	r0, [sp, #8]
    bfa8:	ldr	r1, [r4, #60]	; 0x3c
    bfac:	add	r0, sl, #8
    bfb0:	bl	43c4 <sas_read8@plt>
    bfb4:	ldrb	ip, [sl, #16]
    bfb8:	ldr	r2, [sp, #28]
    bfbc:	strd	r0, [sp]
    bfc0:	orrs	r3, r0, r1
    bfc4:	beq	c0fc <sas7bdat_parse_page_pass1+0x214>
    bfc8:	cmp	ip, #1
    bfcc:	beq	c0fc <sas7bdat_parse_page_pass1+0x214>
    bfd0:	mov	r6, r0
    bfd4:	mov	r7, r1
    bfd8:	ldrd	r0, [sp, #16]
    bfdc:	cmp	r7, r1
    bfe0:	cmpeq	r6, r0
    bfe4:	ldrd	r6, [sp, #8]
    bfe8:	movhi	r3, #1
    bfec:	movls	r3, #0
    bff0:	cmp	r1, r7
    bff4:	cmpeq	r0, r6
    bff8:	orrcc	r3, r3, #1
    bffc:	cmp	r3, #0
    c000:	bne	bf48 <sas7bdat_parse_page_pass1+0x60>
    c004:	mov	r0, r6
    c008:	mov	r1, r7
    c00c:	ldrd	r6, [sp]
    c010:	adds	r6, r6, r0
    c014:	adc	r7, r7, r1
    c018:	mov	r0, r6
    c01c:	mov	r1, r7
    c020:	ldrd	r6, [sp, #16]
    c024:	cmp	r7, r1
    c028:	cmpeq	r6, r0
    c02c:	bcc	bf48 <sas7bdat_parse_page_pass1+0x60>
    c030:	ldr	r1, [sp, #32]
    c034:	ldr	r3, [r4, #144]	; 0x90
    c038:	ldr	r0, [r4, #148]	; 0x94
    c03c:	umull	r6, r7, r3, r1
    c040:	mov	r3, r1
    c044:	mla	r3, r0, r3, r7
    c048:	ldrd	r0, [r4, #128]	; 0x80
    c04c:	adds	r0, r0, r6
    c050:	ldrd	r6, [sp, #8]
    c054:	adc	r1, r1, r3
    c058:	cmp	r7, r1
    c05c:	cmpeq	r6, r0
    c060:	bcc	bf48 <sas7bdat_parse_page_pass1+0x60>
    c064:	cmp	ip, #0
    c068:	bne	c164 <sas7bdat_parse_page_pass1+0x27c>
    c06c:	ldrd	r0, [r4, #136]	; 0x88
    c070:	ldrd	r6, [sp]
    c074:	cmp	r7, r1
    c078:	cmpeq	r6, r0
    c07c:	bcc	bf48 <sas7bdat_parse_page_pass1+0x60>
    c080:	ldrd	r6, [sp, #8]
    c084:	adds	r6, r6, r0
    c088:	adc	r7, r7, r1
    c08c:	mov	r0, r6
    c090:	mov	r1, r7
    c094:	ldrd	r6, [sp, #16]
    c098:	cmp	r7, r1
    c09c:	cmpeq	r6, r0
    c0a0:	bcc	bf48 <sas7bdat_parse_page_pass1+0x60>
    c0a4:	ldrd	r6, [sp, #8]
    c0a8:	ldr	r3, [sp, #24]
    c0ac:	ldr	r1, [r4, #60]	; 0x3c
    c0b0:	add	r0, r3, r6
    c0b4:	str	r2, [sp, #28]
    c0b8:	str	r0, [sp, #8]
    c0bc:	bl	43f4 <sas_read4@plt>
    c0c0:	ldr	r1, [r4, #40]	; 0x28
    c0c4:	cmp	r1, #0
    c0c8:	bne	c0dc <sas7bdat_parse_page_pass1+0x1f4>
    c0cc:	ldr	r2, [sp, #28]
    c0d0:	cmp	r2, #8
    c0d4:	cmneq	r0, #1
    c0d8:	beq	c174 <sas7bdat_parse_page_pass1+0x28c>
    c0dc:	cmn	r0, #3
    c0e0:	bne	c0fc <sas7bdat_parse_page_pass1+0x214>
    c0e4:	ldr	r2, [sp]
    c0e8:	ldr	r1, [sp, #8]
    c0ec:	mov	r3, r4
    c0f0:	bl	b8c4 <sas7bdat_parse_subheader>
    c0f4:	cmp	r0, #0
    c0f8:	bne	bf4c <sas7bdat_parse_page_pass1+0x64>
    c0fc:	add	fp, fp, #1
    c100:	cmp	r8, fp
    c104:	add	sl, sl, r5
    c108:	bgt	bf78 <sas7bdat_parse_page_pass1+0x90>
    c10c:	mov	r0, #0
    c110:	add	sp, sp, #44	; 0x2c
    c114:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c118:	cmp	r3, #9
    c11c:	bls	bf48 <sas7bdat_parse_page_pass1+0x60>
    c120:	ldr	r1, [r4, #60]	; 0x3c
    c124:	mov	r0, sl
    c128:	str	r2, [sp, #28]
    c12c:	bl	43f4 <sas_read4@plt>
    c130:	mov	r3, #0
    c134:	ldr	r1, [r4, #60]	; 0x3c
    c138:	mov	r2, r0
    c13c:	add	r0, sl, #4
    c140:	strd	r2, [sp, #8]
    c144:	bl	43f4 <sas_read4@plt>
    c148:	mov	r3, #0
    c14c:	ldrb	ip, [sl, #8]
    c150:	mov	r2, r0
    c154:	strd	r2, [sp]
    c158:	ldrd	r0, [sp]
    c15c:	ldr	r2, [sp, #28]
    c160:	b	bfc0 <sas7bdat_parse_page_pass1+0xd8>
    c164:	cmp	ip, #4
    c168:	beq	c0fc <sas7bdat_parse_page_pass1+0x214>
    c16c:	mov	r0, #6
    c170:	b	bf4c <sas7bdat_parse_page_pass1+0x64>
    c174:	ldr	r3, [sp, #24]
    c178:	add	r0, r6, #4
    c17c:	add	r0, r3, r0
    c180:	ldr	r1, [r4, #60]	; 0x3c
    c184:	bl	43f4 <sas_read4@plt>
    c188:	b	c0dc <sas7bdat_parse_page_pass1+0x1f4>

0000c18c <readstat_parse_sas7bdat>:
    c18c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c190:	mov	r5, r0
    c194:	sub	sp, sp, #132	; 0x84
    c198:	mov	r6, r1
    c19c:	mov	r0, #1
    c1a0:	ldr	r1, [pc, #3824]	; d098 <readstat_parse_sas7bdat+0xf0c>
    c1a4:	ldr	fp, [r5, #32]
    c1a8:	mov	r9, r2
    c1ac:	str	r2, [sp, #36]	; 0x24
    c1b0:	bl	3d58 <calloc@plt>
    c1b4:	mov	r1, #152	; 0x98
    c1b8:	mov	r4, r0
    c1bc:	mov	r0, #1
    c1c0:	bl	3d58 <calloc@plt>
    c1c4:	mov	lr, r5
    c1c8:	mov	ip, r4
    c1cc:	ldr	r7, [r5, #48]	; 0x30
    c1d0:	ldr	r8, [r5, #36]	; 0x24
    c1d4:	cmp	r7, #0
    c1d8:	mov	sl, r0
    c1dc:	ldm	lr!, {r0, r1, r2, r3}
    c1e0:	stmia	ip!, {r0, r1, r2, r3}
    c1e4:	ldm	lr, {r0, r1, r2, r3}
    c1e8:	ldr	lr, [r5, #40]	; 0x28
    c1ec:	ldr	r5, [r5, #44]	; 0x2c
    c1f0:	stm	ip, {r0, r1, r2, r3}
    c1f4:	mov	r0, r6
    c1f8:	strgt	r7, [r4, #88]	; 0x58
    c1fc:	str	fp, [r4, #56]	; 0x38
    c200:	str	r9, [r4, #52]	; 0x34
    c204:	str	r8, [r4, #200]	; 0xc8
    c208:	str	lr, [r4, #204]	; 0xcc
    c20c:	str	r5, [r4, #84]	; 0x54
    c210:	ldr	r3, [fp]
    c214:	ldr	r1, [fp, #20]
    c218:	blx	r3
    c21c:	cmn	r0, #1
    c220:	beq	c330 <readstat_parse_sas7bdat+0x1a4>
    c224:	ldr	r3, [fp, #8]
    c228:	ldr	r2, [fp, #20]
    c22c:	mov	r1, #2
    c230:	mov	r0, #0
    c234:	blx	r3
    c238:	mvn	r3, #0
    c23c:	mvn	r2, #0
    c240:	asr	r1, r0, #31
    c244:	cmp	r1, r3
    c248:	cmpeq	r0, r2
    c24c:	strd	r0, [r4, #32]
    c250:	beq	c2b8 <readstat_parse_sas7bdat+0x12c>
    c254:	mov	r1, #0
    c258:	mov	r0, r1
    c25c:	ldr	r3, [fp, #8]
    c260:	ldr	r2, [fp, #20]
    c264:	blx	r3
    c268:	cmn	r0, #1
    c26c:	beq	c4a8 <readstat_parse_sas7bdat+0x31c>
    c270:	ldr	r3, [sp, #36]	; 0x24
    c274:	ldr	r2, [r4, #24]
    c278:	mov	r1, sl
    c27c:	mov	r0, fp
    c280:	bl	43a0 <sas_read_header@plt>
    c284:	subs	r5, r0, #0
    c288:	beq	c684 <readstat_parse_sas7bdat+0x4f8>
    c28c:	sub	r6, r5, #1
    c290:	cmp	r5, #15
    c294:	cmpne	r6, #1
    c298:	movls	r6, #1
    c29c:	movhi	r6, #0
    c2a0:	ldr	r3, [fp, #4]
    c2a4:	ldr	r0, [fp, #20]
    c2a8:	blx	r3
    c2ac:	cmp	r6, #0
    c2b0:	beq	c3a8 <readstat_parse_sas7bdat+0x21c>
    c2b4:	b	c340 <readstat_parse_sas7bdat+0x1b4>
    c2b8:	ldr	r6, [r4, #24]
    c2bc:	cmp	r6, #0
    c2c0:	beq	c67c <readstat_parse_sas7bdat+0x4f0>
    c2c4:	ldr	r5, [pc, #3536]	; d09c <readstat_parse_sas7bdat+0xf10>
    c2c8:	add	r7, r4, #480	; 0x1e0
    c2cc:	add	r5, pc, r5
    c2d0:	add	r7, r7, #1
    c2d4:	ldr	r9, [sp, #36]	; 0x24
    c2d8:	mov	lr, r7
    c2dc:	add	r8, r5, #32
    c2e0:	mov	ip, r5
    c2e4:	add	lr, lr, #16
    c2e8:	ldm	ip!, {r0, r1, r2, r3}
    c2ec:	add	r5, r5, #16
    c2f0:	cmp	ip, r8
    c2f4:	str	r0, [lr, #-16]
    c2f8:	str	r1, [lr, #-12]
    c2fc:	str	r2, [lr, #-8]
    c300:	str	r3, [lr, #-4]
    c304:	bne	c2e0 <readstat_parse_sas7bdat+0x154>
    c308:	mov	r3, r5
    c30c:	str	r9, [sp, #36]	; 0x24
    c310:	ldm	r3!, {r0, r1}
    c314:	mov	r5, #15
    c318:	str	r0, [lr]
    c31c:	str	r1, [lr, #4]
    c320:	mov	r0, r7
    c324:	ldr	r1, [r4, #52]	; 0x34
    c328:	blx	r6
    c32c:	b	c334 <readstat_parse_sas7bdat+0x1a8>
    c330:	mov	r5, #1
    c334:	ldr	r3, [fp, #4]
    c338:	ldr	r0, [fp, #20]
    c33c:	blx	r3
    c340:	ldr	r3, [r4, #24]
    c344:	cmp	r3, #0
    c348:	beq	c3a8 <readstat_parse_sas7bdat+0x21c>
    c34c:	mov	r0, r5
    c350:	bl	3e48 <readstat_error_message@plt>
    c354:	add	r6, r4, #480	; 0x1e0
    c358:	add	r6, r6, #1
    c35c:	mov	r8, r0
    c360:	bl	4268 <__errno_location@plt>
    c364:	mov	r7, r0
    c368:	ldr	r0, [r0]
    c36c:	bl	413c <strerror@plt>
    c370:	ldr	r2, [r7]
    c374:	mov	r3, r8
    c378:	str	r2, [sp, #8]
    c37c:	ldr	r2, [pc, #3356]	; d0a0 <readstat_parse_sas7bdat+0xf14>
    c380:	mov	r1, #2048	; 0x800
    c384:	str	r5, [sp]
    c388:	add	r2, pc, r2
    c38c:	str	r0, [sp, #4]
    c390:	mov	r0, r6
    c394:	bl	4280 <snprintf@plt>
    c398:	mov	r0, r6
    c39c:	ldr	r1, [sp, #36]	; 0x24
    c3a0:	ldr	r3, [r4, #24]
    c3a4:	blx	r3
    c3a8:	ldr	r0, [r4, #160]	; 0xa0
    c3ac:	cmp	r0, #0
    c3b0:	beq	c3ec <readstat_parse_sas7bdat+0x260>
    c3b4:	ldr	r3, [r4, #152]	; 0x98
    c3b8:	cmp	r3, #0
    c3bc:	ble	c3e0 <readstat_parse_sas7bdat+0x254>
    c3c0:	mov	r6, #0
    c3c4:	ldr	r0, [r0, r6, lsl #2]
    c3c8:	bl	3ec0 <free@plt>
    c3cc:	ldr	r3, [r4, #152]	; 0x98
    c3d0:	add	r6, r6, #1
    c3d4:	cmp	r6, r3
    c3d8:	ldr	r0, [r4, #160]	; 0xa0
    c3dc:	blt	c3c4 <readstat_parse_sas7bdat+0x238>
    c3e0:	bl	3ec0 <free@plt>
    c3e4:	ldr	r0, [r4, #156]	; 0x9c
    c3e8:	bl	3ec0 <free@plt>
    c3ec:	ldr	r2, [r4, #196]	; 0xc4
    c3f0:	cmp	r2, #0
    c3f4:	beq	c434 <readstat_parse_sas7bdat+0x2a8>
    c3f8:	ldr	r1, [r4, #80]	; 0x50
    c3fc:	cmp	r1, #0
    c400:	beq	c42c <readstat_parse_sas7bdat+0x2a0>
    c404:	mov	r6, #0
    c408:	ldr	r3, [r2, r6, lsl #2]
    c40c:	add	r6, r6, #1
    c410:	subs	r0, r3, #0
    c414:	beq	c424 <readstat_parse_sas7bdat+0x298>
    c418:	bl	3ec0 <free@plt>
    c41c:	ldr	r1, [r4, #80]	; 0x50
    c420:	ldr	r2, [r4, #196]	; 0xc4
    c424:	cmp	r6, r1
    c428:	bcc	c408 <readstat_parse_sas7bdat+0x27c>
    c42c:	mov	r0, r2
    c430:	bl	3ec0 <free@plt>
    c434:	ldr	r0, [r4, #192]	; 0xc0
    c438:	cmp	r0, #0
    c43c:	beq	c444 <readstat_parse_sas7bdat+0x2b8>
    c440:	bl	3ec0 <free@plt>
    c444:	ldr	r0, [r4, #180]	; 0xb4
    c448:	cmp	r0, #0
    c44c:	beq	c454 <readstat_parse_sas7bdat+0x2c8>
    c450:	bl	3ec0 <free@plt>
    c454:	ldr	r0, [r4, #120]	; 0x78
    c458:	cmp	r0, #0
    c45c:	beq	c464 <readstat_parse_sas7bdat+0x2d8>
    c460:	bl	3ec0 <free@plt>
    c464:	ldr	r0, [r4, #124]	; 0x7c
    c468:	cmp	r0, #0
    c46c:	beq	c474 <readstat_parse_sas7bdat+0x2e8>
    c470:	bl	3ec0 <free@plt>
    c474:	ldr	r0, [r4, #208]	; 0xd0
    c478:	cmp	r0, #0
    c47c:	beq	c484 <readstat_parse_sas7bdat+0x2f8>
    c480:	bl	3dd0 <iconv_close@plt>
    c484:	mov	r0, r4
    c488:	bl	3ec0 <free@plt>
    c48c:	cmp	sl, #0
    c490:	beq	c49c <readstat_parse_sas7bdat+0x310>
    c494:	mov	r0, sl
    c498:	bl	3ec0 <free@plt>
    c49c:	mov	r0, r5
    c4a0:	add	sp, sp, #132	; 0x84
    c4a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c4a8:	ldr	r6, [r4, #24]
    c4ac:	cmp	r6, #0
    c4b0:	beq	c67c <readstat_parse_sas7bdat+0x4f0>
    c4b4:	ldr	r5, [pc, #3048]	; d0a4 <readstat_parse_sas7bdat+0xf18>
    c4b8:	add	r7, r4, #480	; 0x1e0
    c4bc:	add	r5, pc, r5
    c4c0:	add	r7, r7, #1
    c4c4:	ldr	r9, [sp, #36]	; 0x24
    c4c8:	mov	lr, r7
    c4cc:	add	r8, r5, #32
    c4d0:	mov	ip, r5
    c4d4:	add	lr, lr, #16
    c4d8:	ldm	ip!, {r0, r1, r2, r3}
    c4dc:	add	r5, r5, #16
    c4e0:	cmp	ip, r8
    c4e4:	str	r0, [lr, #-16]
    c4e8:	str	r1, [lr, #-12]
    c4ec:	str	r2, [lr, #-8]
    c4f0:	str	r3, [lr, #-4]
    c4f4:	bne	c4d0 <readstat_parse_sas7bdat+0x344>
    c4f8:	mov	r3, r5
    c4fc:	str	r9, [sp, #36]	; 0x24
    c500:	ldm	r3!, {r0, r1, r2}
    c504:	mov	r5, #15
    c508:	ldrh	r3, [r3]
    c50c:	str	r0, [lr]
    c510:	str	r1, [lr, #4]
    c514:	strh	r3, [lr, #12]
    c518:	str	r2, [lr, #8]
    c51c:	mov	r0, r7
    c520:	ldr	r1, [r4, #52]	; 0x34
    c524:	blx	r6
    c528:	b	c334 <readstat_parse_sas7bdat+0x1a8>
    c52c:	strd	sl, [sp, #72]	; 0x48
    c530:	ldrd	r2, [r4, #104]	; 0x68
    c534:	ldr	sl, [sp, #64]	; 0x40
    c538:	ldr	fp, [sp, #56]	; 0x38
    c53c:	subs	r0, r2, #1
    c540:	sbc	r1, r3, #0
    c544:	cmp	r1, r7
    c548:	cmpeq	r0, r6
    c54c:	strd	r0, [sp, #40]	; 0x28
    c550:	ldr	r8, [r4, #56]	; 0x38
    c554:	bls	c620 <readstat_parse_sas7bdat+0x494>
    c558:	mov	r2, #0
    c55c:	mov	r3, #0
    c560:	ldr	r9, [sp, #36]	; 0x24
    c564:	strd	r2, [sp, #48]	; 0x30
    c568:	b	c594 <readstat_parse_sas7bdat+0x408>
    c56c:	ands	r7, r0, #36864	; 0x9000
    c570:	beq	ca0c <readstat_parse_sas7bdat+0x880>
    c574:	ldrd	r2, [sp, #40]	; 0x28
    c578:	ldrd	r0, [sp, #72]	; 0x48
    c57c:	subs	r2, r2, #1
    c580:	sbc	r3, r3, #0
    c584:	cmp	r3, r1
    c588:	cmpeq	r2, r0
    c58c:	strd	r2, [sp, #40]	; 0x28
    c590:	bls	c61c <readstat_parse_sas7bdat+0x490>
    c594:	ldr	r1, [sp, #40]	; 0x28
    c598:	ldr	r0, [r4, #112]	; 0x70
    c59c:	ldr	r2, [r4, #96]	; 0x60
    c5a0:	ldr	r3, [r8, #8]
    c5a4:	mla	r0, r0, r1, r2
    c5a8:	ldr	r2, [r8, #20]
    c5ac:	mov	r1, #0
    c5b0:	blx	r3
    c5b4:	cmn	r0, #1
    c5b8:	beq	d41c <readstat_parse_sas7bdat+0x1290>
    c5bc:	ldr	r2, [r4, #44]	; 0x2c
    c5c0:	ldr	r3, [r8, #12]
    c5c4:	cmp	r2, #0
    c5c8:	movne	r6, #34	; 0x22
    c5cc:	moveq	r6, #18
    c5d0:	mov	r1, r6
    c5d4:	ldr	r2, [r8, #20]
    c5d8:	ldr	r0, [r4, #120]	; 0x78
    c5dc:	movne	r7, #32
    c5e0:	moveq	r7, #16
    c5e4:	ldr	r5, [r4, #112]	; 0x70
    c5e8:	blx	r3
    c5ec:	cmp	r0, r6
    c5f0:	bcc	d414 <readstat_parse_sas7bdat+0x1288>
    c5f4:	ldr	r0, [r4, #120]	; 0x78
    c5f8:	ldr	r1, [r4, #60]	; 0x3c
    c5fc:	add	r0, r0, r7
    c600:	bl	43d0 <sas_read2@plt>
    c604:	and	r3, r0, #3840	; 0xf00
    c608:	cmp	r3, #256	; 0x100
    c60c:	bne	c56c <readstat_parse_sas7bdat+0x3e0>
    c610:	ldrd	r2, [sp, #48]	; 0x30
    c614:	orrs	r3, r2, r3
    c618:	beq	c574 <readstat_parse_sas7bdat+0x3e8>
    c61c:	str	r9, [sp, #36]	; 0x24
    c620:	ldr	r3, [fp, #8]
    c624:	ldr	r2, [fp, #20]
    c628:	mov	r1, #0
    c62c:	ldr	r0, [r4, #96]	; 0x60
    c630:	blx	r3
    c634:	cmn	r0, #1
    c638:	bne	ca6c <readstat_parse_sas7bdat+0x8e0>
    c63c:	ldr	r3, [r4, #24]
    c640:	cmp	r3, #0
    c644:	beq	c67c <readstat_parse_sas7bdat+0x4f0>
    c648:	ldrd	r2, [r4, #96]	; 0x60
    c64c:	add	r5, r4, #480	; 0x1e0
    c650:	add	r5, r5, #1
    c654:	strd	r2, [sp]
    c658:	ldr	r2, [pc, #2632]	; d0a8 <readstat_parse_sas7bdat+0xf1c>
    c65c:	mov	r1, #2048	; 0x800
    c660:	mov	r0, r5
    c664:	add	r2, pc, r2
    c668:	bl	4280 <snprintf@plt>
    c66c:	mov	r0, r5
    c670:	ldr	r3, [r4, #24]
    c674:	ldr	r1, [r4, #52]	; 0x34
    c678:	blx	r3
    c67c:	mov	r5, #15
    c680:	b	c334 <readstat_parse_sas7bdat+0x1a8>
    c684:	ldr	r1, [sl, #4]
    c688:	ldr	r2, [sl]
    c68c:	ldr	r3, [sl, #8]
    c690:	str	r1, [r4, #44]	; 0x2c
    c694:	str	r2, [r4, #40]	; 0x28
    c698:	str	r3, [r4, #48]	; 0x30
    c69c:	bl	3eb4 <machine_is_little_endian@plt>
    c6a0:	ldrd	r2, [sl, #64]	; 0x40
    c6a4:	ldr	r1, [sl]
    c6a8:	ldr	ip, [r4, #44]	; 0x2c
    c6ac:	strd	r2, [r4, #96]	; 0x60
    c6b0:	ldrd	r2, [sl, #40]	; 0x28
    c6b4:	cmp	ip, #0
    c6b8:	ldrd	r6, [sl, #56]	; 0x38
    c6bc:	strd	r2, [r4, #128]	; 0x80
    c6c0:	ldr	r2, [sl, #36]	; 0x24
    c6c4:	ldr	r3, [sl, #32]
    c6c8:	str	r2, [r4, #116]	; 0x74
    c6cc:	ldr	r2, [r4, #200]	; 0xc8
    c6d0:	strd	r6, [r4, #104]	; 0x68
    c6d4:	ldrd	r6, [sl, #48]	; 0x30
    c6d8:	str	r3, [r4, #112]	; 0x70
    c6dc:	strd	r6, [r4, #144]	; 0x90
    c6e0:	eor	r0, r0, r1
    c6e4:	str	r0, [r4, #60]	; 0x3c
    c6e8:	mov	r1, #0
    c6ec:	movne	r0, #8
    c6f0:	moveq	r0, #4
    c6f4:	cmp	r2, #0
    c6f8:	ldr	r2, [sl, #12]
    c6fc:	strd	r0, [r4, #136]	; 0x88
    c700:	ldr	r0, [sl, #72]	; 0x48
    c704:	ldr	r1, [sl, #76]	; 0x4c
    c708:	str	r2, [r4, #220]	; 0xdc
    c70c:	ldreq	r2, [sl, #144]	; 0x90
    c710:	str	r0, [r4, #212]	; 0xd4
    c714:	mov	r0, r3
    c718:	streq	r2, [r4, #200]	; 0xc8
    c71c:	str	r1, [r4, #216]	; 0xd8
    c720:	bl	422c <readstat_malloc@plt>
    c724:	cmp	r0, #0
    c728:	str	r0, [r4, #120]	; 0x78
    c72c:	beq	c944 <readstat_parse_sas7bdat+0x7b8>
    c730:	ldr	r6, [r4, #200]	; 0xc8
    c734:	cmp	r6, #0
    c738:	beq	c75c <readstat_parse_sas7bdat+0x5d0>
    c73c:	ldr	r5, [r4, #204]	; 0xcc
    c740:	cmp	r5, #0
    c744:	beq	c75c <readstat_parse_sas7bdat+0x5d0>
    c748:	mov	r1, r5
    c74c:	mov	r0, r6
    c750:	bl	3e00 <strcmp@plt>
    c754:	cmp	r0, #0
    c758:	bne	c958 <readstat_parse_sas7bdat+0x7cc>
    c75c:	ldr	r0, [r4, #208]	; 0xd0
    c760:	str	r0, [sp]
    c764:	mov	r3, #64	; 0x40
    c768:	add	r2, sl, #80	; 0x50
    c76c:	ldr	r1, [pc, #2360]	; d0ac <readstat_parse_sas7bdat+0xf20>
    c770:	add	r0, r4, #224	; 0xe0
    c774:	bl	4238 <readstat_convert@plt>
    c778:	subs	r5, r0, #0
    c77c:	bne	c28c <readstat_parse_sas7bdat+0x100>
    c780:	ldrd	r2, [r4, #104]	; 0x68
    c784:	ldr	r8, [r4, #56]	; 0x38
    c788:	strd	r2, [sp, #72]	; 0x48
    c78c:	orrs	r3, r2, r3
    c790:	beq	d480 <readstat_parse_sas7bdat+0x12f4>
    c794:	str	r5, [sp, #48]	; 0x30
    c798:	mov	r6, #0
    c79c:	mov	r7, #0
    c7a0:	str	fp, [sp, #56]	; 0x38
    c7a4:	str	sl, [sp, #64]	; 0x40
    c7a8:	b	c7cc <readstat_parse_sas7bdat+0x640>
    c7ac:	ldrd	r2, [r4, #104]	; 0x68
    c7b0:	adds	r6, r6, #1
    c7b4:	adc	r7, r7, #0
    c7b8:	cmp	r7, r3
    c7bc:	cmpeq	r6, r2
    c7c0:	mov	sl, r6
    c7c4:	mov	fp, r7
    c7c8:	bcs	ca5c <readstat_parse_sas7bdat+0x8d0>
    c7cc:	ldr	r0, [r4, #112]	; 0x70
    c7d0:	ldr	r2, [r4, #96]	; 0x60
    c7d4:	ldr	r3, [r8, #8]
    c7d8:	mla	r0, r0, r6, r2
    c7dc:	ldr	r1, [sp, #48]	; 0x30
    c7e0:	ldr	r2, [r8, #20]
    c7e4:	blx	r3
    c7e8:	mov	sl, r6
    c7ec:	mov	fp, r7
    c7f0:	cmn	r0, #1
    c7f4:	beq	c984 <readstat_parse_sas7bdat+0x7f8>
    c7f8:	ldr	r3, [r4, #44]	; 0x2c
    c7fc:	ldr	r2, [r8, #20]
    c800:	cmp	r3, #0
    c804:	ldr	r3, [r4, #112]	; 0x70
    c808:	movne	r5, #34	; 0x22
    c80c:	moveq	r5, #18
    c810:	str	r3, [sp, #40]	; 0x28
    c814:	mov	r1, r5
    c818:	ldr	r0, [r4, #120]	; 0x78
    c81c:	ldr	r3, [r8, #12]
    c820:	movne	r9, #32
    c824:	moveq	r9, #16
    c828:	blx	r3
    c82c:	cmp	r0, r5
    c830:	bcc	c974 <readstat_parse_sas7bdat+0x7e8>
    c834:	ldr	r0, [r4, #120]	; 0x78
    c838:	ldr	r1, [r4, #60]	; 0x3c
    c83c:	add	r0, r0, r9
    c840:	bl	43d0 <sas_read2@plt>
    c844:	and	r3, r0, #3840	; 0xf00
    c848:	cmp	r3, #256	; 0x100
    c84c:	beq	c52c <readstat_parse_sas7bdat+0x3a0>
    c850:	ands	sl, r0, #36864	; 0x9000
    c854:	bne	c7ac <readstat_parse_sas7bdat+0x620>
    c858:	ldr	r3, [sp, #40]	; 0x28
    c85c:	ldr	r0, [r4, #120]	; 0x78
    c860:	sub	r9, r3, r5
    c864:	ldr	r2, [r8, #20]
    c868:	mov	r1, r9
    c86c:	add	r0, r0, r5
    c870:	ldr	r3, [r8, #12]
    c874:	blx	r3
    c878:	mov	r2, r4
    c87c:	cmp	r9, r0
    c880:	bhi	c974 <readstat_parse_sas7bdat+0x7e8>
    c884:	ldr	r1, [r4, #112]	; 0x70
    c888:	ldr	r0, [r4, #120]	; 0x78
    c88c:	bl	bee8 <sas7bdat_parse_page_pass1>
    c890:	cmp	r0, #0
    c894:	beq	c7ac <readstat_parse_sas7bdat+0x620>
    c898:	ldr	r3, [r4, #24]
    c89c:	mov	r2, sl
    c8a0:	cmp	r3, #0
    c8a4:	ldr	fp, [sp, #56]	; 0x38
    c8a8:	mov	r5, r0
    c8ac:	ldr	sl, [sp, #64]	; 0x40
    c8b0:	beq	c28c <readstat_parse_sas7bdat+0x100>
    c8b4:	cmp	r0, #4
    c8b8:	beq	d3c8 <readstat_parse_sas7bdat+0x123c>
    c8bc:	ldr	r3, [r8, #8]
    c8c0:	mov	r0, r2
    c8c4:	mov	r1, #1
    c8c8:	ldr	r2, [r8, #20]
    c8cc:	blx	r3
    c8d0:	add	r8, r4, #480	; 0x1e0
    c8d4:	add	r3, r8, #1
    c8d8:	strd	r6, [sp]
    c8dc:	ldr	r2, [pc, #1996]	; d0b0 <readstat_parse_sas7bdat+0xf24>
    c8e0:	mov	r1, #2048	; 0x800
    c8e4:	add	r2, pc, r2
    c8e8:	subs	r8, r0, #1
    c8ec:	asr	r7, r0, #31
    c8f0:	sbc	r9, r7, #0
    c8f4:	strd	r8, [sp, #16]
    c8f8:	ldrd	r8, [r4, #112]	; 0x70
    c8fc:	subs	r8, r0, r8
    c900:	sbc	r9, r7, r9
    c904:	mov	r6, r8
    c908:	mov	r7, r9
    c90c:	strd	r6, [sp, #8]
    c910:	mov	r6, r3
    c914:	mov	r0, r6
    c918:	bl	4280 <snprintf@plt>
    c91c:	mov	r0, r6
    c920:	ldr	r3, [r4, #24]
    c924:	sub	r6, r5, #1
    c928:	ldr	r1, [r4, #52]	; 0x34
    c92c:	blx	r3
    c930:	cmp	r5, #15
    c934:	cmpne	r6, #1
    c938:	movls	r6, #1
    c93c:	movhi	r6, #0
    c940:	b	c2a0 <readstat_parse_sas7bdat+0x114>
    c944:	mov	r5, #3
    c948:	ldr	r3, [fp, #4]
    c94c:	ldr	r0, [fp, #20]
    c950:	blx	r3
    c954:	b	c3a8 <readstat_parse_sas7bdat+0x21c>
    c958:	mov	r1, r6
    c95c:	mov	r0, r5
    c960:	bl	4130 <iconv_open@plt>
    c964:	cmn	r0, #1
    c968:	beq	ca04 <readstat_parse_sas7bdat+0x878>
    c96c:	str	r0, [r4, #208]	; 0xd0
    c970:	b	c760 <readstat_parse_sas7bdat+0x5d4>
    c974:	ldr	fp, [sp, #56]	; 0x38
    c978:	ldr	sl, [sp, #64]	; 0x40
    c97c:	mov	r5, #2
    c980:	b	c334 <readstat_parse_sas7bdat+0x1a8>
    c984:	ldr	r3, [r4, #24]
    c988:	ldr	fp, [sp, #56]	; 0x38
    c98c:	cmp	r3, #0
    c990:	ldr	sl, [sp, #64]	; 0x40
    c994:	beq	c67c <readstat_parse_sas7bdat+0x4f0>
    c998:	ldr	lr, [r4, #112]	; 0x70
    c99c:	ldr	ip, [r4, #116]	; 0x74
    c9a0:	strd	r6, [sp, #16]
    c9a4:	mul	r1, lr, r7
    c9a8:	umull	r8, r9, lr, r6
    c9ac:	mla	r6, ip, r6, r1
    c9b0:	ldrd	r0, [r4, #96]	; 0x60
    c9b4:	add	r9, r6, r9
    c9b8:	add	r5, r4, #480	; 0x1e0
    c9bc:	adds	r2, r8, r0
    c9c0:	adc	r3, r9, r1
    c9c4:	add	r5, r5, #1
    c9c8:	strd	r2, [sp]
    c9cc:	ldr	r2, [pc, #1760]	; d0b4 <readstat_parse_sas7bdat+0xf28>
    c9d0:	strd	r0, [sp, #8]
    c9d4:	add	r2, pc, r2
    c9d8:	mov	r0, r5
    c9dc:	str	lr, [sp, #24]
    c9e0:	str	ip, [sp, #28]
    c9e4:	mov	r1, #2048	; 0x800
    c9e8:	bl	4280 <snprintf@plt>
    c9ec:	mov	r0, r5
    c9f0:	ldr	r3, [r4, #24]
    c9f4:	ldr	r1, [r4, #52]	; 0x34
    c9f8:	blx	r3
    c9fc:	mov	r5, #15
    ca00:	b	c334 <readstat_parse_sas7bdat+0x1a8>
    ca04:	mov	r5, #7
    ca08:	b	c948 <readstat_parse_sas7bdat+0x7bc>
    ca0c:	ldr	r0, [r4, #120]	; 0x78
    ca10:	sub	r5, r5, r6
    ca14:	ldr	r2, [r8, #20]
    ca18:	mov	r1, r5
    ca1c:	add	r0, r0, r6
    ca20:	ldr	r3, [r8, #12]
    ca24:	blx	r3
    ca28:	mov	r2, r4
    ca2c:	cmp	r5, r0
    ca30:	bhi	d414 <readstat_parse_sas7bdat+0x1288>
    ca34:	ldr	r1, [r4, #112]	; 0x70
    ca38:	ldr	r0, [r4, #120]	; 0x78
    ca3c:	bl	bee8 <sas7bdat_parse_page_pass1>
    ca40:	cmp	r0, #0
    ca44:	bne	d490 <readstat_parse_sas7bdat+0x1304>
    ca48:	ldrd	r2, [sp, #48]	; 0x30
    ca4c:	adds	r2, r2, #1
    ca50:	adc	r3, r3, #0
    ca54:	strd	r2, [sp, #48]	; 0x30
    ca58:	b	c574 <readstat_parse_sas7bdat+0x3e8>
    ca5c:	strd	sl, [sp, #72]	; 0x48
    ca60:	ldr	sl, [sp, #64]	; 0x40
    ca64:	ldr	fp, [sp, #56]	; 0x38
    ca68:	b	c53c <readstat_parse_sas7bdat+0x3b0>
    ca6c:	ldrd	r2, [r4, #104]	; 0x68
    ca70:	ldr	r1, [r4, #56]	; 0x38
    ca74:	orrs	r3, r2, r3
    ca78:	str	r1, [sp, #88]	; 0x58
    ca7c:	beq	d350 <readstat_parse_sas7bdat+0x11c4>
    ca80:	mov	r3, r1
    ca84:	mov	r0, #0
    ca88:	mov	r1, #0
    ca8c:	str	fp, [sp, #40]	; 0x28
    ca90:	strd	r0, [sp, #72]	; 0x48
    ca94:	str	sl, [sp, #48]	; 0x30
    ca98:	b	cad8 <readstat_parse_sas7bdat+0x94c>
    ca9c:	ands	r5, r0, #36864	; 0x9000
    caa0:	beq	ccc8 <readstat_parse_sas7bdat+0xb3c>
    caa4:	ldr	r2, [r4, #76]	; 0x4c
    caa8:	ldr	r3, [r4, #84]	; 0x54
    caac:	cmp	r2, r3
    cab0:	beq	d348 <readstat_parse_sas7bdat+0x11bc>
    cab4:	ldrd	r0, [sp, #72]	; 0x48
    cab8:	ldrd	r2, [r4, #104]	; 0x68
    cabc:	adds	r0, r0, #1
    cac0:	adc	r1, r1, #0
    cac4:	cmp	r3, r1
    cac8:	cmpeq	r2, r0
    cacc:	strd	r0, [sp, #72]	; 0x48
    cad0:	bls	d348 <readstat_parse_sas7bdat+0x11bc>
    cad4:	ldr	r3, [r4, #56]	; 0x38
    cad8:	ldr	r5, [r3, #16]
    cadc:	ldr	r2, [r4, #52]	; 0x34
    cae0:	ldr	r3, [r3, #20]
    cae4:	ldr	r1, [r4, #28]
    cae8:	ldr	r0, [r4, #32]
    caec:	blx	r5
    caf0:	subs	r5, r0, #0
    caf4:	bne	cd5c <readstat_parse_sas7bdat+0xbd0>
    caf8:	ldr	r2, [sp, #88]	; 0x58
    cafc:	ldr	r1, [r4, #112]	; 0x70
    cb00:	ldr	r0, [r4, #120]	; 0x78
    cb04:	ldr	r3, [r2, #12]
    cb08:	ldr	r2, [r2, #20]
    cb0c:	blx	r3
    cb10:	ldrd	r2, [r4, #112]	; 0x70
    cb14:	strd	r2, [sp, #64]	; 0x40
    cb18:	asr	r1, r0, #31
    cb1c:	cmp	r1, r3
    cb20:	cmpeq	r0, r2
    cb24:	bcc	cd2c <readstat_parse_sas7bdat+0xba0>
    cb28:	ldr	r0, [r4, #128]	; 0x80
    cb2c:	ldr	fp, [r4, #120]	; 0x78
    cb30:	sub	r0, r0, #8
    cb34:	add	r0, fp, r0
    cb38:	ldr	r1, [r4, #60]	; 0x3c
    cb3c:	bl	43d0 <sas_read2@plt>
    cb40:	and	r3, r0, #3840	; 0xf00
    cb44:	cmp	r3, #256	; 0x100
    cb48:	str	r3, [sp, #108]	; 0x6c
    cb4c:	bne	ca9c <readstat_parse_sas7bdat+0x910>
    cb50:	ldr	r0, [r4, #128]	; 0x80
    cb54:	ldr	r1, [r4, #60]	; 0x3c
    cb58:	sub	r0, r0, #6
    cb5c:	add	r0, fp, r0
    cb60:	bl	43d0 <sas_read2@plt>
    cb64:	ldr	sl, [r4, #128]	; 0x80
    cb68:	add	sl, fp, sl
    cb6c:	str	r0, [r4, #72]	; 0x48
    cb70:	cmp	sl, #0
    cb74:	beq	caa4 <readstat_parse_sas7bdat+0x918>
    cb78:	ldr	r1, [r4, #64]	; 0x40
    cb7c:	cmp	r1, #0
    cb80:	beq	cc30 <readstat_parse_sas7bdat+0xaa4>
    cb84:	ldr	r3, [r4, #16]
    cb88:	cmp	r3, #0
    cb8c:	beq	caa4 <readstat_parse_sas7bdat+0x918>
    cb90:	ldr	r3, [sp, #64]	; 0x40
    cb94:	ldr	r0, [r4, #72]	; 0x48
    cb98:	add	r6, fp, r3
    cb9c:	cmp	r0, #0
    cba0:	ldr	r2, [r4, #76]	; 0x4c
    cba4:	ldr	r3, [r4, #84]	; 0x54
    cba8:	sub	r6, r6, sl
    cbac:	beq	caac <readstat_parse_sas7bdat+0x920>
    cbb0:	cmp	r2, r3
    cbb4:	bcs	caac <readstat_parse_sas7bdat+0x920>
    cbb8:	ldr	r1, [r4, #68]	; 0x44
    cbbc:	cmp	r1, r6
    cbc0:	bhi	d320 <readstat_parse_sas7bdat+0x1194>
    cbc4:	mov	r8, #0
    cbc8:	mov	r7, r8
    cbcc:	b	cbf4 <readstat_parse_sas7bdat+0xa68>
    cbd0:	add	r8, r8, #1
    cbd4:	add	r7, r7, r1
    cbd8:	cmp	r0, r8
    cbdc:	add	ip, r1, r7
    cbe0:	bls	caac <readstat_parse_sas7bdat+0x920>
    cbe4:	cmp	r2, r3
    cbe8:	bcs	caac <readstat_parse_sas7bdat+0x920>
    cbec:	cmp	r6, ip
    cbf0:	bcc	cd38 <readstat_parse_sas7bdat+0xbac>
    cbf4:	ldr	ip, [r4, #88]	; 0x58
    cbf8:	cmp	ip, #0
    cbfc:	sub	ip, ip, #1
    cc00:	strne	ip, [r4, #88]	; 0x58
    cc04:	bne	cbd0 <readstat_parse_sas7bdat+0xa44>
    cc08:	mov	r1, r4
    cc0c:	add	r0, sl, r7
    cc10:	bl	45e8 <sas7bdat_parse_single_row.part.6>
    cc14:	cmp	r0, #0
    cc18:	bne	cd48 <readstat_parse_sas7bdat+0xbbc>
    cc1c:	ldr	r2, [r4, #76]	; 0x4c
    cc20:	ldr	r3, [r4, #84]	; 0x54
    cc24:	ldr	r1, [r4, #68]	; 0x44
    cc28:	ldr	r0, [r4, #72]	; 0x48
    cc2c:	b	cbd0 <readstat_parse_sas7bdat+0xa44>
    cc30:	mov	r0, r4
    cc34:	bl	489c <sas7bdat_submit_columns_if_needed.part.7>
    cc38:	subs	r5, r0, #0
    cc3c:	beq	cb84 <readstat_parse_sas7bdat+0x9f8>
    cc40:	ldr	fp, [sp, #40]	; 0x28
    cc44:	ldr	sl, [sp, #48]	; 0x30
    cc48:	ldr	r3, [r4, #24]
    cc4c:	cmp	r3, #0
    cc50:	beq	c28c <readstat_parse_sas7bdat+0x100>
    cc54:	cmp	r5, #4
    cc58:	beq	d3c8 <readstat_parse_sas7bdat+0x123c>
    cc5c:	ldr	r2, [sp, #88]	; 0x58
    cc60:	mov	r1, #1
    cc64:	mov	r0, #0
    cc68:	ldr	r3, [r2, #8]
    cc6c:	add	r6, r4, #480	; 0x1e0
    cc70:	ldr	r2, [r2, #20]
    cc74:	blx	r3
    cc78:	add	r3, r6, #1
    cc7c:	mov	ip, r3
    cc80:	ldrd	r2, [sp, #72]	; 0x48
    cc84:	strd	r2, [sp]
    cc88:	ldr	r2, [pc, #1064]	; d0b8 <readstat_parse_sas7bdat+0xf2c>
    cc8c:	add	r2, pc, r2
    cc90:	mov	r6, r0
    cc94:	asr	r7, r0, #31
    cc98:	ldrd	r8, [r4, #112]	; 0x70
    cc9c:	strd	r6, [sp, #40]	; 0x28
    cca0:	subs	r6, r0, #1
    cca4:	sbc	r7, r7, #0
    cca8:	mov	r1, #2048	; 0x800
    ccac:	strd	r6, [sp, #16]
    ccb0:	ldrd	r6, [sp, #40]	; 0x28
    ccb4:	subs	r8, r6, r8
    ccb8:	sbc	r9, r7, r9
    ccbc:	mov	r6, ip
    ccc0:	strd	r8, [sp, #8]
    ccc4:	b	c914 <readstat_parse_sas7bdat+0x788>
    ccc8:	ldr	r0, [r4, #128]	; 0x80
    cccc:	ldr	r1, [r4, #60]	; 0x3c
    ccd0:	sub	r0, r0, #4
    ccd4:	add	r0, fp, r0
    ccd8:	bl	43d0 <sas_read2@plt>
    ccdc:	ldr	r1, [r4, #144]	; 0x90
    cce0:	ldrd	r2, [r4, #128]	; 0x80
    cce4:	ldrd	r6, [sp, #64]	; 0x40
    cce8:	str	r1, [sp, #116]	; 0x74
    ccec:	mov	r7, #0
    ccf0:	strd	r6, [sp, #80]	; 0x50
    ccf4:	mul	ip, r1, r0
    ccf8:	str	r0, [sp, #92]	; 0x5c
    ccfc:	adds	r0, r2, ip
    cd00:	adc	r1, r3, ip, asr #31
    cd04:	cmp	r1, r7
    cd08:	cmpeq	r0, r6
    cd0c:	bls	cd7c <readstat_parse_sas7bdat+0xbf0>
    cd10:	ldr	fp, [sp, #40]	; 0x28
    cd14:	ldr	sl, [sp, #48]	; 0x30
    cd18:	mov	r5, #5
    cd1c:	ldr	r3, [r4, #24]
    cd20:	cmp	r3, #0
    cd24:	beq	c948 <readstat_parse_sas7bdat+0x7bc>
    cd28:	b	cc5c <readstat_parse_sas7bdat+0xad0>
    cd2c:	ldr	fp, [sp, #40]	; 0x28
    cd30:	ldr	sl, [sp, #48]	; 0x30
    cd34:	b	c97c <readstat_parse_sas7bdat+0x7f0>
    cd38:	ldr	fp, [sp, #40]	; 0x28
    cd3c:	ldr	sl, [sp, #48]	; 0x30
    cd40:	mov	r5, #10
    cd44:	b	cd1c <readstat_parse_sas7bdat+0xb90>
    cd48:	ldr	fp, [sp, #40]	; 0x28
    cd4c:	ldr	sl, [sp, #48]	; 0x30
    cd50:	mov	r5, r0
    cd54:	ldr	r3, [r4, #24]
    cd58:	b	cc4c <readstat_parse_sas7bdat+0xac0>
    cd5c:	sub	r6, r5, #1
    cd60:	cmp	r5, #15
    cd64:	cmpne	r6, #1
    cd68:	ldr	fp, [sp, #40]	; 0x28
    cd6c:	ldr	sl, [sp, #48]	; 0x30
    cd70:	movls	r6, #1
    cd74:	movhi	r6, #0
    cd78:	b	c2a0 <readstat_parse_sas7bdat+0x114>
    cd7c:	ldr	r1, [sp, #92]	; 0x5c
    cd80:	add	sl, fp, r2
    cd84:	cmp	r1, #0
    cd88:	beq	cf9c <readstat_parse_sas7bdat+0xe10>
    cd8c:	ldr	r3, [sp, #64]	; 0x40
    cd90:	uxth	r2, r1
    cd94:	add	r3, fp, r3
    cd98:	str	r3, [sp, #112]	; 0x70
    cd9c:	mov	r3, #0
    cda0:	str	r5, [sp, #104]	; 0x68
    cda4:	strd	r2, [sp, #120]	; 0x78
    cda8:	ldr	r2, [r4, #44]	; 0x2c
    cdac:	ldr	r3, [sp, #112]	; 0x70
    cdb0:	cmp	r2, #0
    cdb4:	sub	r3, r3, sl
    cdb8:	beq	cdd8 <readstat_parse_sas7bdat+0xc4c>
    cdbc:	cmp	r3, #17
    cdc0:	bhi	d0d8 <readstat_parse_sas7bdat+0xf4c>
    cdc4:	ldr	fp, [sp, #40]	; 0x28
    cdc8:	ldr	sl, [sp, #48]	; 0x30
    cdcc:	mov	r5, #5
    cdd0:	ldr	r3, [r4, #24]
    cdd4:	b	cc4c <readstat_parse_sas7bdat+0xac0>
    cdd8:	cmp	r3, #9
    cddc:	bls	cdc4 <readstat_parse_sas7bdat+0xc38>
    cde0:	ldr	r1, [r4, #60]	; 0x3c
    cde4:	mov	r0, sl
    cde8:	bl	43f4 <sas_read4@plt>
    cdec:	mov	r3, #0
    cdf0:	ldr	r1, [r4, #60]	; 0x3c
    cdf4:	mov	r9, #0
    cdf8:	mov	r2, r0
    cdfc:	add	r0, sl, #4
    ce00:	strd	r2, [sp, #56]	; 0x38
    ce04:	bl	43f4 <sas_read4@plt>
    ce08:	ldrb	r5, [sl, #9]
    ce0c:	ldrb	r1, [sl, #8]
    ce10:	mov	r8, r0
    ce14:	orrs	r3, r8, r9
    ce18:	beq	cf7c <readstat_parse_sas7bdat+0xdf0>
    ce1c:	cmp	r1, #1
    ce20:	beq	cf7c <readstat_parse_sas7bdat+0xdf0>
    ce24:	ldrd	r2, [sp, #80]	; 0x50
    ce28:	ldrd	r6, [sp, #56]	; 0x38
    ce2c:	strd	r2, [sp, #96]	; 0x60
    ce30:	cmp	r3, r7
    ce34:	cmpeq	r2, r6
    ce38:	ldrd	r6, [sp, #96]	; 0x60
    ce3c:	movcc	r3, #1
    ce40:	movcs	r3, #0
    ce44:	cmp	r7, r9
    ce48:	cmpeq	r6, r8
    ce4c:	orrcc	r3, r3, #1
    ce50:	cmp	r3, #0
    ce54:	bne	cdc4 <readstat_parse_sas7bdat+0xc38>
    ce58:	ldrd	r2, [sp, #56]	; 0x38
    ce5c:	adds	r2, r2, r8
    ce60:	adc	r3, r3, r9
    ce64:	cmp	r3, r7
    ce68:	cmpeq	r2, r6
    ce6c:	bhi	cdc4 <readstat_parse_sas7bdat+0xc38>
    ce70:	ldrd	r6, [sp, #120]	; 0x78
    ce74:	ldr	r2, [r4, #144]	; 0x90
    ce78:	ldr	r0, [r4, #148]	; 0x94
    ce7c:	umull	r2, r3, r2, r6
    ce80:	mla	r3, r0, r6, r3
    ce84:	ldrd	r6, [r4, #128]	; 0x80
    ce88:	adds	r6, r6, r2
    ce8c:	adc	r7, r7, r3
    ce90:	mov	r2, r6
    ce94:	mov	r3, r7
    ce98:	ldrd	r6, [sp, #56]	; 0x38
    ce9c:	cmp	r3, r7
    cea0:	cmpeq	r2, r6
    cea4:	bhi	cdc4 <readstat_parse_sas7bdat+0xc38>
    cea8:	cmp	r1, #0
    ceac:	bne	cfec <readstat_parse_sas7bdat+0xe60>
    ceb0:	ldrd	r0, [r4, #136]	; 0x88
    ceb4:	cmp	r1, r9
    ceb8:	cmpeq	r0, r8
    cebc:	bhi	cdc4 <readstat_parse_sas7bdat+0xc38>
    cec0:	adds	r2, r6, r0
    cec4:	adc	r3, r7, r1
    cec8:	ldrd	r0, [sp, #80]	; 0x50
    cecc:	cmp	r3, r1
    ced0:	cmpeq	r2, r0
    ced4:	bhi	cdc4 <readstat_parse_sas7bdat+0xc38>
    ced8:	ldr	r3, [sp, #56]	; 0x38
    cedc:	ldr	r1, [r4, #60]	; 0x3c
    cee0:	add	r7, fp, r3
    cee4:	mov	r0, r7
    cee8:	bl	43f4 <sas_read4@plt>
    ceec:	ldr	r3, [r4, #40]	; 0x28
    cef0:	ldr	r6, [sp, #56]	; 0x38
    cef4:	cmp	r3, #0
    cef8:	cmneq	r0, #1
    cefc:	beq	d518 <readstat_parse_sas7bdat+0x138c>
    cf00:	cmp	r5, #0
    cf04:	beq	d4f4 <readstat_parse_sas7bdat+0x1368>
    cf08:	ldr	r3, [pc, #428]	; d0bc <readstat_parse_sas7bdat+0xf30>
    cf0c:	ldr	r2, [pc, #428]	; d0c0 <readstat_parse_sas7bdat+0xf34>
    cf10:	cmp	r0, r2
    cf14:	cmpne	r0, r3
    cf18:	beq	d4f4 <readstat_parse_sas7bdat+0x1368>
    cf1c:	add	r3, r0, #1024	; 0x400
    cf20:	add	r3, r3, #2
    cf24:	bics	r3, r3, #2
    cf28:	beq	d4f4 <readstat_parse_sas7bdat+0x1368>
    cf2c:	bic	r3, r0, #7
    cf30:	cmn	r3, #8
    cf34:	beq	d4f4 <readstat_parse_sas7bdat+0x1368>
    cf38:	ldr	r2, [r4, #68]	; 0x44
    cf3c:	mov	r3, #0
    cf40:	cmp	r3, r9
    cf44:	cmpeq	r2, r8
    cf48:	bne	d4e0 <readstat_parse_sas7bdat+0x1354>
    cf4c:	ldr	r3, [r4, #64]	; 0x40
    cf50:	cmp	r3, #0
    cf54:	beq	d554 <readstat_parse_sas7bdat+0x13c8>
    cf58:	ldr	r2, [r4, #76]	; 0x4c
    cf5c:	ldr	r3, [r4, #84]	; 0x54
    cf60:	cmp	r2, r3
    cf64:	beq	cf7c <readstat_parse_sas7bdat+0xdf0>
    cf68:	ldr	r3, [r4, #88]	; 0x58
    cf6c:	cmp	r3, #0
    cf70:	beq	d53c <readstat_parse_sas7bdat+0x13b0>
    cf74:	sub	r3, r3, #1
    cf78:	str	r3, [r4, #88]	; 0x58
    cf7c:	ldr	r3, [sp, #104]	; 0x68
    cf80:	ldr	r2, [sp, #92]	; 0x5c
    cf84:	add	r3, r3, #1
    cf88:	str	r3, [sp, #104]	; 0x68
    cf8c:	cmp	r2, r3
    cf90:	ldr	r3, [sp, #116]	; 0x74
    cf94:	add	sl, sl, r3
    cf98:	bgt	cda8 <readstat_parse_sas7bdat+0xc1c>
    cf9c:	ldr	r3, [sp, #108]	; 0x6c
    cfa0:	cmp	r3, #512	; 0x200
    cfa4:	bne	caa4 <readstat_parse_sas7bdat+0x918>
    cfa8:	sub	r3, sl, fp
    cfac:	rsbs	r2, r3, #0
    cfb0:	and	r2, r2, #7
    cfb4:	and	r3, r3, #7
    cfb8:	rsbpl	r3, r2, #0
    cfbc:	cmp	r3, #4
    cfc0:	bne	cb70 <readstat_parse_sas7bdat+0x9e4>
    cfc4:	ldr	r3, [sl]
    cfc8:	ldr	r2, [pc, #244]	; d0c4 <readstat_parse_sas7bdat+0xf38>
    cfcc:	cmp	r3, r2
    cfd0:	cmpne	r3, #0
    cfd4:	beq	cfe4 <readstat_parse_sas7bdat+0xe58>
    cfd8:	ldr	r3, [r4, #48]	; 0x30
    cfdc:	cmp	r3, #0
    cfe0:	beq	cb78 <readstat_parse_sas7bdat+0x9ec>
    cfe4:	add	sl, sl, #4
    cfe8:	b	cb70 <readstat_parse_sas7bdat+0x9e4>
    cfec:	cmp	r1, #4
    cff0:	bne	d56c <readstat_parse_sas7bdat+0x13e0>
    cff4:	ldr	r3, [r4, #64]	; 0x40
    cff8:	cmp	r3, #0
    cffc:	beq	d17c <readstat_parse_sas7bdat+0xff0>
    d000:	ldrb	r3, [r4, #2529]	; 0x9e1
    d004:	ldr	r2, [sp, #56]	; 0x38
    d008:	tst	r3, #1
    d00c:	add	r5, fp, r2
    d010:	bne	d108 <readstat_parse_sas7bdat+0xf7c>
    d014:	ldr	r3, [r4, #84]	; 0x54
    d018:	ldr	r2, [r4, #76]	; 0x4c
    d01c:	cmp	r3, r2
    d020:	beq	cf7c <readstat_parse_sas7bdat+0xdf0>
    d024:	mov	r2, r5
    d028:	mov	r3, r8
    d02c:	ldr	r1, [r4, #68]	; 0x44
    d030:	ldr	r0, [r4, #124]	; 0x7c
    d034:	bl	407c <sas_rle_decompress@plt>
    d038:	ldr	r2, [r4, #68]	; 0x44
    d03c:	cmp	r2, r0
    d040:	beq	d2f0 <readstat_parse_sas7bdat+0x1164>
    d044:	ldr	r3, [r4, #24]
    d048:	ldr	fp, [sp, #40]	; 0x28
    d04c:	cmp	r3, #0
    d050:	ldr	sl, [sp, #48]	; 0x30
    d054:	beq	d4ec <readstat_parse_sas7bdat+0x1360>
    d058:	stm	sp, {r0, r2}
    d05c:	add	r5, r4, #480	; 0x1e0
    d060:	ldr	r2, [pc, #96]	; d0c8 <readstat_parse_sas7bdat+0xf3c>
    d064:	add	r5, r5, #1
    d068:	mov	r0, r5
    d06c:	ldr	r3, [r4, #76]	; 0x4c
    d070:	add	r2, pc, r2
    d074:	mov	r1, #2048	; 0x800
    d078:	bl	4280 <snprintf@plt>
    d07c:	mov	r0, r5
    d080:	ldr	r3, [r4, #24]
    d084:	ldr	r1, [r4, #52]	; 0x34
    d088:	blx	r3
    d08c:	mov	r5, #10
    d090:	ldr	r3, [r4, #24]
    d094:	b	cc4c <readstat_parse_sas7bdat+0xac0>
    d098:	.word	0x000009e8
    d09c:	.word	0x00019fb0
    d0a0:	.word	0x0001a030
    d0a4:	.word	0x00019de8
    d0a8:	.word	0x00019ae0
    d0ac:	.word	0x00000101
    d0b0:	.word	0x00019a30
    d0b4:	.word	0x00019900
    d0b8:	.word	0x00019688
    d0bc:	.word	0xf7f7f7f7
    d0c0:	.word	0xf6f6f6f6
    d0c4:	.word	0x20202020
    d0c8:	.word	0x000192d8
    d0cc:	.word	0x00018fec
    d0d0:	.word	0x00018e5c
    d0d4:	.word	0x00018e3c
    d0d8:	ldr	r1, [r4, #60]	; 0x3c
    d0dc:	mov	r0, sl
    d0e0:	bl	43c4 <sas_read8@plt>
    d0e4:	strd	r0, [sp, #56]	; 0x38
    d0e8:	ldr	r1, [r4, #60]	; 0x3c
    d0ec:	add	r0, sl, #8
    d0f0:	bl	43c4 <sas_read8@plt>
    d0f4:	ldrb	r5, [sl, #17]
    d0f8:	mov	r9, r1
    d0fc:	mov	r8, r0
    d100:	ldrb	r1, [sl, #16]
    d104:	b	ce14 <readstat_parse_sas7bdat+0xc88>
    d108:	ldr	r0, [r4, #68]	; 0x44
    d10c:	bl	410c <malloc@plt>
    d110:	add	r6, r5, r8
    d114:	mov	r9, r0
    d118:	add	ip, r5, #2
    d11c:	cmp	r6, ip
    d120:	bcc	d2c4 <readstat_parse_sas7bdat+0x1138>
    d124:	ldrb	r3, [r5]
    d128:	ldrb	r7, [r5, #1]
    d12c:	mov	r8, #15
    d130:	add	r7, r7, r3, lsl #8
    d134:	uxth	r7, r7
    d138:	asr	r3, r7, r8
    d13c:	tst	r3, #1
    d140:	bne	d194 <readstat_parse_sas7bdat+0x1008>
    d144:	add	r1, ip, #1
    d148:	cmp	r1, r6
    d14c:	bhi	d22c <readstat_parse_sas7bdat+0x10a0>
    d150:	ldr	r3, [r4, #68]	; 0x44
    d154:	add	r2, r0, #1
    d158:	add	r3, r9, r3
    d15c:	cmp	r2, r3
    d160:	bls	d2b0 <readstat_parse_sas7bdat+0x1124>
    d164:	mov	r5, #10
    d168:	mov	r0, r9
    d16c:	bl	3ec0 <free@plt>
    d170:	cmp	r5, #0
    d174:	beq	cf7c <readstat_parse_sas7bdat+0xdf0>
    d178:	b	cc40 <readstat_parse_sas7bdat+0xab4>
    d17c:	mov	r1, #1
    d180:	mov	r0, r4
    d184:	bl	489c <sas7bdat_submit_columns_if_needed.part.7>
    d188:	subs	r5, r0, #0
    d18c:	beq	d000 <readstat_parse_sas7bdat+0xe74>
    d190:	b	cc40 <readstat_parse_sas7bdat+0xab4>
    d194:	add	r5, ip, #2
    d198:	cmp	r6, r5
    d19c:	bcc	d2a8 <readstat_parse_sas7bdat+0x111c>
    d1a0:	ldrb	r3, [ip]
    d1a4:	ldrb	r1, [ip, #1]
    d1a8:	cmp	r3, #15
    d1ac:	addls	r2, r3, #3
    d1b0:	bls	d27c <readstat_parse_sas7bdat+0x10f0>
    d1b4:	lsr	r2, r3, #4
    d1b8:	cmp	r2, #1
    d1bc:	beq	d25c <readstat_parse_sas7bdat+0x10d0>
    d1c0:	cmp	r2, #2
    d1c4:	beq	d234 <readstat_parse_sas7bdat+0x10a8>
    d1c8:	and	r3, r3, #15
    d1cc:	mov	ip, #16
    d1d0:	add	r3, r3, #3
    d1d4:	smlabb	r1, ip, r1, r3
    d1d8:	cmp	r2, r1
    d1dc:	movls	r3, #0
    d1e0:	movhi	r3, #1
    d1e4:	sub	ip, r0, r9
    d1e8:	cmp	ip, r1
    d1ec:	orrcc	r3, r3, #1
    d1f0:	cmp	r3, #0
    d1f4:	bne	d2a8 <readstat_parse_sas7bdat+0x111c>
    d1f8:	ldr	ip, [r4, #68]	; 0x44
    d1fc:	add	r3, r0, r2
    d200:	add	ip, r9, ip
    d204:	cmp	r3, ip
    d208:	str	r3, [sp, #56]	; 0x38
    d20c:	bhi	d164 <readstat_parse_sas7bdat+0xfd8>
    d210:	sub	r1, r0, r1
    d214:	bl	3f20 <memcpy@plt>
    d218:	ldr	r3, [sp, #56]	; 0x38
    d21c:	mov	ip, r5
    d220:	mov	r0, r3
    d224:	subs	r8, r8, #1
    d228:	bcs	d138 <readstat_parse_sas7bdat+0xfac>
    d22c:	mov	r5, ip
    d230:	b	d118 <readstat_parse_sas7bdat+0xf8c>
    d234:	add	r5, ip, #3
    d238:	cmp	r6, r5
    d23c:	bcc	d2a8 <readstat_parse_sas7bdat+0x111c>
    d240:	ldrb	r2, [ip, #2]
    d244:	and	r3, r3, #15
    d248:	mov	ip, #16
    d24c:	add	r3, r3, #3
    d250:	smlabb	r1, ip, r1, r3
    d254:	add	r2, r2, #16
    d258:	b	d1d8 <readstat_parse_sas7bdat+0x104c>
    d25c:	add	r5, ip, #3
    d260:	cmp	r6, r5
    d264:	bcc	d2a8 <readstat_parse_sas7bdat+0x111c>
    d268:	and	r3, r3, #15
    d26c:	mov	r2, #16
    d270:	add	r3, r3, #19
    d274:	smlabb	r2, r2, r1, r3
    d278:	ldrb	r1, [ip, #2]
    d27c:	ldr	ip, [r4, #68]	; 0x44
    d280:	add	r3, r0, r2
    d284:	add	ip, r9, ip
    d288:	cmp	r3, ip
    d28c:	bhi	d164 <readstat_parse_sas7bdat+0xfd8>
    d290:	str	r3, [sp, #56]	; 0x38
    d294:	bl	42a4 <memset@plt>
    d298:	ldr	r3, [sp, #56]	; 0x38
    d29c:	mov	ip, r5
    d2a0:	mov	r0, r3
    d2a4:	b	d224 <readstat_parse_sas7bdat+0x1098>
    d2a8:	mov	r5, #5
    d2ac:	b	d168 <readstat_parse_sas7bdat+0xfdc>
    d2b0:	ldrb	r3, [ip]
    d2b4:	mov	ip, r1
    d2b8:	strb	r3, [r0]
    d2bc:	mov	r0, r2
    d2c0:	b	d224 <readstat_parse_sas7bdat+0x1098>
    d2c4:	ldr	r3, [r4, #68]	; 0x44
    d2c8:	sub	r0, r0, r9
    d2cc:	cmp	r0, r3
    d2d0:	beq	d580 <readstat_parse_sas7bdat+0x13f4>
    d2d4:	mov	r0, r9
    d2d8:	ldr	fp, [sp, #40]	; 0x28
    d2dc:	ldr	sl, [sp, #48]	; 0x30
    d2e0:	mov	r5, #10
    d2e4:	bl	3ec0 <free@plt>
    d2e8:	ldr	r3, [r4, #24]
    d2ec:	b	cc4c <readstat_parse_sas7bdat+0xac0>
    d2f0:	ldr	r2, [r4, #76]	; 0x4c
    d2f4:	ldr	r3, [r4, #84]	; 0x54
    d2f8:	ldr	r0, [r4, #124]	; 0x7c
    d2fc:	cmp	r2, r3
    d300:	beq	cf7c <readstat_parse_sas7bdat+0xdf0>
    d304:	ldr	r3, [r4, #88]	; 0x58
    d308:	cmp	r3, #0
    d30c:	bne	cf74 <readstat_parse_sas7bdat+0xde8>
    d310:	mov	r1, r4
    d314:	bl	45e8 <sas7bdat_parse_single_row.part.6>
    d318:	mov	r5, r0
    d31c:	b	d170 <readstat_parse_sas7bdat+0xfe4>
    d320:	ldr	r3, [r4, #24]
    d324:	ldr	fp, [sp, #40]	; 0x28
    d328:	cmp	r3, #0
    d32c:	ldr	sl, [sp, #48]	; 0x30
    d330:	bne	d3c0 <readstat_parse_sas7bdat+0x1234>
    d334:	ldr	r3, [fp, #4]
    d338:	ldr	r0, [fp, #20]
    d33c:	blx	r3
    d340:	mov	r5, #10
    d344:	b	c3a8 <readstat_parse_sas7bdat+0x21c>
    d348:	ldr	fp, [sp, #40]	; 0x28
    d34c:	ldr	sl, [sp, #48]	; 0x30
    d350:	ldr	r1, [r4, #64]	; 0x40
    d354:	cmp	r1, #0
    d358:	beq	d400 <readstat_parse_sas7bdat+0x1274>
    d35c:	ldr	r3, [r4, #16]
    d360:	cmp	r3, #0
    d364:	beq	d3dc <readstat_parse_sas7bdat+0x1250>
    d368:	ldr	r2, [r4, #76]	; 0x4c
    d36c:	ldr	r3, [r4, #84]	; 0x54
    d370:	cmp	r2, r3
    d374:	beq	d3dc <readstat_parse_sas7bdat+0x1250>
    d378:	ldr	r1, [r4, #24]
    d37c:	cmp	r1, #0
    d380:	moveq	r5, #9
    d384:	beq	c948 <readstat_parse_sas7bdat+0x7bc>
    d388:	str	r2, [sp]
    d38c:	add	r5, r4, #480	; 0x1e0
    d390:	ldr	r2, [pc, #-716]	; d0cc <readstat_parse_sas7bdat+0xf40>
    d394:	add	r5, r5, #1
    d398:	mov	r0, r5
    d39c:	add	r2, pc, r2
    d3a0:	mov	r1, #2048	; 0x800
    d3a4:	bl	4280 <snprintf@plt>
    d3a8:	mov	r0, r5
    d3ac:	ldr	r3, [r4, #24]
    d3b0:	ldr	r1, [r4, #52]	; 0x34
    d3b4:	blx	r3
    d3b8:	mov	r5, #9
    d3bc:	b	c948 <readstat_parse_sas7bdat+0x7bc>
    d3c0:	mov	r5, #10
    d3c4:	b	cc5c <readstat_parse_sas7bdat+0xad0>
    d3c8:	ldr	r3, [fp, #4]
    d3cc:	ldr	r0, [fp, #20]
    d3d0:	blx	r3
    d3d4:	mov	r5, #4
    d3d8:	b	c3a8 <readstat_parse_sas7bdat+0x21c>
    d3dc:	ldr	r3, [r4, #56]	; 0x38
    d3e0:	ldr	r2, [r4, #52]	; 0x34
    d3e4:	ldr	r1, [r4, #28]
    d3e8:	ldr	r5, [r3, #16]
    d3ec:	ldr	r0, [r4, #32]
    d3f0:	ldr	r3, [r3, #20]
    d3f4:	blx	r5
    d3f8:	mov	r5, r0
    d3fc:	b	c28c <readstat_parse_sas7bdat+0x100>
    d400:	mov	r0, r4
    d404:	bl	489c <sas7bdat_submit_columns_if_needed.part.7>
    d408:	subs	r5, r0, #0
    d40c:	bne	c28c <readstat_parse_sas7bdat+0x100>
    d410:	b	d35c <readstat_parse_sas7bdat+0x11d0>
    d414:	str	r9, [sp, #36]	; 0x24
    d418:	b	c97c <readstat_parse_sas7bdat+0x7f0>
    d41c:	ldr	r3, [r4, #24]
    d420:	str	r9, [sp, #36]	; 0x24
    d424:	cmp	r3, #0
    d428:	beq	c67c <readstat_parse_sas7bdat+0x4f0>
    d42c:	ldrd	r2, [sp, #40]	; 0x28
    d430:	ldr	lr, [r4, #112]	; 0x70
    d434:	ldr	ip, [r4, #116]	; 0x74
    d438:	strd	r2, [sp, #16]
    d43c:	mul	r1, lr, r3
    d440:	umull	r6, r7, lr, r2
    d444:	mla	r5, ip, r2, r1
    d448:	ldrd	r0, [r4, #96]	; 0x60
    d44c:	add	r7, r5, r7
    d450:	add	r5, r4, #480	; 0x1e0
    d454:	adds	r2, r6, r0
    d458:	adc	r3, r7, r1
    d45c:	add	r5, r5, #1
    d460:	strd	r2, [sp]
    d464:	ldr	r2, [pc, #-924]	; d0d0 <readstat_parse_sas7bdat+0xf44>
    d468:	strd	r0, [sp, #8]
    d46c:	str	lr, [sp, #24]
    d470:	str	ip, [sp, #28]
    d474:	mov	r0, r5
    d478:	add	r2, pc, r2
    d47c:	b	c9e4 <readstat_parse_sas7bdat+0x858>
    d480:	mvn	r2, #0
    d484:	mvn	r3, #0
    d488:	strd	r2, [sp, #40]	; 0x28
    d48c:	b	c558 <readstat_parse_sas7bdat+0x3cc>
    d490:	ldr	r3, [r4, #24]
    d494:	mov	r5, r0
    d498:	cmp	r3, #0
    d49c:	str	r9, [sp, #36]	; 0x24
    d4a0:	beq	c28c <readstat_parse_sas7bdat+0x100>
    d4a4:	cmp	r0, #4
    d4a8:	beq	d3c8 <readstat_parse_sas7bdat+0x123c>
    d4ac:	ldr	r3, [r8, #8]
    d4b0:	ldr	r2, [r8, #20]
    d4b4:	mov	r0, r7
    d4b8:	mov	r1, #1
    d4bc:	add	r6, r4, #480	; 0x1e0
    d4c0:	blx	r3
    d4c4:	add	r3, r6, #1
    d4c8:	mov	ip, r3
    d4cc:	ldrd	r2, [sp, #40]	; 0x28
    d4d0:	strd	r2, [sp]
    d4d4:	ldr	r2, [pc, #-1032]	; d0d4 <readstat_parse_sas7bdat+0xf48>
    d4d8:	add	r2, pc, r2
    d4dc:	b	cc90 <readstat_parse_sas7bdat+0xb04>
    d4e0:	ldr	fp, [sp, #40]	; 0x28
    d4e4:	ldr	sl, [sp, #48]	; 0x30
    d4e8:	ldr	r3, [r4, #24]
    d4ec:	mov	r5, #10
    d4f0:	b	cc4c <readstat_parse_sas7bdat+0xac0>
    d4f4:	cmn	r0, #3
    d4f8:	beq	cf7c <readstat_parse_sas7bdat+0xdf0>
    d4fc:	mov	r2, r8
    d500:	mov	r1, r7
    d504:	mov	r3, r4
    d508:	bl	b8c4 <sas7bdat_parse_subheader>
    d50c:	subs	r5, r0, #0
    d510:	beq	cf7c <readstat_parse_sas7bdat+0xdf0>
    d514:	b	cc40 <readstat_parse_sas7bdat+0xab4>
    d518:	ldr	r3, [r4, #44]	; 0x2c
    d51c:	cmp	r3, #0
    d520:	mvneq	r0, #0
    d524:	beq	d4fc <readstat_parse_sas7bdat+0x1370>
    d528:	add	r0, r6, #4
    d52c:	add	r0, fp, r0
    d530:	ldr	r1, [r4, #60]	; 0x3c
    d534:	bl	43f4 <sas_read4@plt>
    d538:	b	cf00 <readstat_parse_sas7bdat+0xd74>
    d53c:	mov	r0, r7
    d540:	mov	r1, r4
    d544:	bl	45e8 <sas7bdat_parse_single_row.part.6>
    d548:	subs	r5, r0, #0
    d54c:	beq	cf7c <readstat_parse_sas7bdat+0xdf0>
    d550:	b	cc40 <readstat_parse_sas7bdat+0xab4>
    d554:	mov	r1, #1
    d558:	mov	r0, r4
    d55c:	bl	489c <sas7bdat_submit_columns_if_needed.part.7>
    d560:	subs	r5, r0, #0
    d564:	beq	cf58 <readstat_parse_sas7bdat+0xdcc>
    d568:	b	cc40 <readstat_parse_sas7bdat+0xab4>
    d56c:	ldr	fp, [sp, #40]	; 0x28
    d570:	ldr	sl, [sp, #48]	; 0x30
    d574:	mov	r5, #6
    d578:	ldr	r3, [r4, #24]
    d57c:	b	cc4c <readstat_parse_sas7bdat+0xac0>
    d580:	ldr	r2, [r4, #76]	; 0x4c
    d584:	ldr	r3, [r4, #84]	; 0x54
    d588:	cmp	r2, r3
    d58c:	beq	d5b0 <readstat_parse_sas7bdat+0x1424>
    d590:	ldr	r3, [r4, #88]	; 0x58
    d594:	cmp	r3, #0
    d598:	beq	d5bc <readstat_parse_sas7bdat+0x1430>
    d59c:	sub	r3, r3, #1
    d5a0:	mov	r0, r9
    d5a4:	str	r3, [r4, #88]	; 0x58
    d5a8:	bl	3ec0 <free@plt>
    d5ac:	b	cf7c <readstat_parse_sas7bdat+0xdf0>
    d5b0:	mov	r0, r9
    d5b4:	bl	3ec0 <free@plt>
    d5b8:	b	cf7c <readstat_parse_sas7bdat+0xdf0>
    d5bc:	mov	r1, r4
    d5c0:	mov	r0, r9
    d5c4:	bl	45e8 <sas7bdat_parse_single_row.part.6>
    d5c8:	mov	r5, r0
    d5cc:	b	d168 <readstat_parse_sas7bdat+0xfdc>

0000d5d0 <sas7bdat_variable_width>:
    d5d0:	cmp	r0, #0
    d5d4:	moveq	r0, r1
    d5d8:	movne	r0, #8
    d5dc:	bx	lr

0000d5e0 <sas7bdat_metadata_ok>:
    d5e0:	ldr	r0, [r0, #16]
    d5e4:	cmp	r0, #1
    d5e8:	movhi	r0, #6
    d5ec:	movls	r0, #0
    d5f0:	bx	lr

0000d5f4 <sas7bdat_write_missing_string>:
    d5f4:	push	{r4, lr}
    d5f8:	mov	r4, r0
    d5fc:	mov	r0, r1
    d600:	bl	42c8 <readstat_variable_get_storage_width@plt>
    d604:	mov	r1, #0
    d608:	mov	r2, r0
    d60c:	mov	r0, r4
    d610:	bl	42a4 <memset@plt>
    d614:	mov	r0, #0
    d618:	pop	{r4, pc}

0000d61c <sas7bdat_write_double>:
    d61c:	sub	sp, sp, #8
    d620:	add	r3, sp, #8
    d624:	mov	r2, r0
    d628:	vstmdb	r3!, {d0}
    d62c:	ldm	r3!, {r0, r1}
    d630:	str	r0, [r2]
    d634:	str	r1, [r2, #4]
    d638:	mov	r0, #0
    d63c:	add	sp, sp, #8
    d640:	bx	lr

0000d644 <sas7bdat_write_missing_numeric>:
    d644:	push	{r4, r5}
    d648:	sub	sp, sp, #8
    d64c:	ldr	r5, [pc, #48]	; d684 <sas7bdat_write_missing_numeric+0x40>
    d650:	mov	r4, #0
    d654:	bic	r3, r5, #11776	; 0x2e00
    d658:	orr	r5, r3, #53504	; 0xd100
    d65c:	add	r3, sp, #8
    d660:	mov	r2, r0
    d664:	strd	r4, [r3, #-8]!
    d668:	ldm	r3!, {r0, r1}
    d66c:	str	r0, [r2]
    d670:	str	r1, [r2, #4]
    d674:	mov	r0, #0
    d678:	add	sp, sp, #8
    d67c:	pop	{r4, r5}
    d680:	bx	lr
    d684:	.word	0x7ff80000

0000d688 <sas7bdat_write_float>:
    d688:	vcvt.f64.f32	d0, s0
    d68c:	sub	sp, sp, #8
    d690:	add	r3, sp, #8
    d694:	mov	r2, r0
    d698:	vstmdb	r3!, {d0}
    d69c:	ldm	r3!, {r0, r1}
    d6a0:	str	r0, [r2]
    d6a4:	str	r1, [r2, #4]
    d6a8:	mov	r0, #0
    d6ac:	add	sp, sp, #8
    d6b0:	bx	lr

0000d6b4 <sas7bdat_write_int32>:
    d6b4:	vmov	s15, r2
    d6b8:	sub	sp, sp, #8
    d6bc:	add	r3, sp, #8
    d6c0:	mov	r2, r0
    d6c4:	vcvt.f64.s32	d7, s15
    d6c8:	vstmdb	r3!, {d7}
    d6cc:	ldm	r3!, {r0, r1}
    d6d0:	str	r0, [r2]
    d6d4:	str	r1, [r2, #4]
    d6d8:	mov	r0, #0
    d6dc:	add	sp, sp, #8
    d6e0:	bx	lr

0000d6e4 <sas7bdat_write_int16>:
    d6e4:	vmov	s15, r2
    d6e8:	sub	sp, sp, #8
    d6ec:	add	r3, sp, #8
    d6f0:	mov	r2, r0
    d6f4:	vcvt.f64.s32	d7, s15
    d6f8:	vstmdb	r3!, {d7}
    d6fc:	ldm	r3!, {r0, r1}
    d700:	str	r0, [r2]
    d704:	str	r1, [r2, #4]
    d708:	mov	r0, #0
    d70c:	add	sp, sp, #8
    d710:	bx	lr

0000d714 <sas7bdat_write_int8>:
    d714:	vmov	s15, r2
    d718:	sub	sp, sp, #8
    d71c:	add	r3, sp, #8
    d720:	mov	r2, r0
    d724:	vcvt.f64.s32	d7, s15
    d728:	vstmdb	r3!, {d7}
    d72c:	ldm	r3!, {r0, r1}
    d730:	str	r0, [r2]
    d734:	str	r1, [r2, #4]
    d738:	mov	r0, #0
    d73c:	add	sp, sp, #8
    d740:	bx	lr

0000d744 <sas7bdat_write_string>:
    d744:	push	{r4, r5, r6, lr}
    d748:	mov	r6, r0
    d74c:	mov	r0, r1
    d750:	mov	r4, r2
    d754:	bl	42c8 <readstat_variable_get_storage_width@plt>
    d758:	cmp	r4, #0
    d75c:	mov	r5, r0
    d760:	beq	d788 <sas7bdat_write_string+0x44>
    d764:	ldrb	r3, [r4]
    d768:	cmp	r3, #0
    d76c:	beq	d788 <sas7bdat_write_string+0x44>
    d770:	mov	r0, r4
    d774:	bl	41fc <strlen@plt>
    d778:	cmp	r5, r0
    d77c:	bcs	d7a0 <sas7bdat_write_string+0x5c>
    d780:	mov	r0, #22
    d784:	pop	{r4, r5, r6, pc}
    d788:	mov	r2, r5
    d78c:	mov	r0, r6
    d790:	mov	r1, #0
    d794:	bl	42a4 <memset@plt>
    d798:	mov	r0, #0
    d79c:	pop	{r4, r5, r6, pc}
    d7a0:	mov	r2, r5
    d7a4:	mov	r1, r4
    d7a8:	mov	r0, r6
    d7ac:	bl	42bc <strncpy@plt>
    d7b0:	mov	r0, #0
    d7b4:	pop	{r4, r5, r6, pc}

0000d7b8 <sas7bdat_write_missing_tagged>:
    d7b8:	push	{r4, r5, lr}
    d7bc:	mov	r5, r0
    d7c0:	sub	sp, sp, #12
    d7c4:	mov	r0, r2
    d7c8:	mov	r4, r2
    d7cc:	bl	4148 <sas_validate_tag@plt>
    d7d0:	subs	r2, r0, #0
    d7d4:	bne	d800 <sas7bdat_write_missing_tagged+0x48>
    d7d8:	lsl	r4, r4, #8
    d7dc:	eor	r4, r4, #65280	; 0xff00
    d7e0:	orr	r1, r4, #2130706432	; 0x7f000000
    d7e4:	mov	r0, #0
    d7e8:	orr	r1, r1, #16252928	; 0xf80000
    d7ec:	add	r3, sp, #8
    d7f0:	strd	r0, [r3, #-8]!
    d7f4:	ldm	r3!, {r0, r1}
    d7f8:	str	r0, [r5]
    d7fc:	str	r1, [r5, #4]
    d800:	mov	r0, r2
    d804:	add	sp, sp, #12
    d808:	pop	{r4, r5, pc}

0000d80c <sas7bdat_make_text_ref.isra.12>:
    d80c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d810:	mov	r7, r0
    d814:	sub	sp, sp, #12
    d818:	mov	r0, r3
    d81c:	mov	r9, r1
    d820:	mov	r8, r2
    d824:	mov	fp, r3
    d828:	bl	41fc <strlen@plt>
    d82c:	ldrd	r2, [r9]
    d830:	sub	r1, r2, #-1073741823	; 0xc0000001
    d834:	mov	sl, r0
    d838:	ldr	r0, [r8]
    d83c:	add	r6, sl, #3
    d840:	bic	r6, r6, #3
    d844:	ldr	r4, [r0, r1, lsl #2]
    d848:	ldmib	r4, {r1, r5}
    d84c:	add	ip, r6, r5
    d850:	cmp	ip, r1
    d854:	bhi	d898 <sas7bdat_make_text_ref.isra.12+0x8c>
    d858:	ldrd	r8, [r4, #16]
    d85c:	ldr	r2, [r4]
    d860:	add	r0, r2, r5
    d864:	mov	r1, fp
    d868:	mov	r2, r6
    d86c:	bl	42bc <strncpy@plt>
    d870:	ldr	r3, [r4, #8]
    d874:	add	r5, r5, #28
    d878:	add	r6, r3, r6
    d87c:	mov	r0, r7
    d880:	strh	r5, [r7, #2]
    d884:	strh	r8, [r7]
    d888:	strh	sl, [r7, #4]
    d88c:	str	r6, [r4, #8]
    d890:	add	sp, sp, #12
    d894:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d898:	adds	r2, r2, #1
    d89c:	adc	r3, r3, #0
    d8a0:	lsl	r1, r2, #2
    d8a4:	strd	r2, [r9]
    d8a8:	bl	3ff8 <realloc@plt>
    d8ac:	ldr	r3, [r4, #4]
    d8b0:	mov	r1, #24
    d8b4:	mov	r5, r3
    d8b8:	str	r0, [r8]
    d8bc:	str	r0, [sp, #4]
    d8c0:	mov	r0, #1
    d8c4:	ldrd	r8, [r9]
    d8c8:	bl	3d58 <calloc@plt>
    d8cc:	str	r5, [sp]
    d8d0:	mov	r4, r0
    d8d4:	mov	r0, r5
    d8d8:	bl	410c <malloc@plt>
    d8dc:	ldr	r3, [sp]
    d8e0:	sub	r1, r8, #-1073741823	; 0xc0000001
    d8e4:	str	r3, [r4, #4]
    d8e8:	subs	r8, r8, #1
    d8ec:	ldr	r3, [sp, #4]
    d8f0:	sbc	r9, r9, #0
    d8f4:	ldr	r5, [r4, #8]
    d8f8:	strd	r8, [r4, #16]
    d8fc:	str	r0, [r4]
    d900:	mov	r2, r0
    d904:	str	r4, [r3, r1, lsl #2]
    d908:	b	d860 <sas7bdat_make_text_ref.isra.12+0x54>

0000d90c <sas7bdat_module_ctx_free>:
    d90c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d910:	mov	r8, r0
    d914:	ldr	r0, [r0]
    d918:	bl	3ec0 <free@plt>
    d91c:	ldr	r5, [r8, #4]
    d920:	ldrd	r2, [r5]
    d924:	ldr	r0, [r5, #16]
    d928:	cmp	r2, #1
    d92c:	sbcs	r1, r3, #0
    d930:	blt	d98c <sas7bdat_module_ctx_free+0x80>
    d934:	mov	r6, #1
    d938:	mov	r7, #0
    d93c:	mov	r9, #0
    d940:	ldr	r4, [r0, r9]
    d944:	add	r9, r9, #4
    d948:	cmp	r4, #0
    d94c:	beq	d970 <sas7bdat_module_ctx_free+0x64>
    d950:	ldr	r3, [r4, #4]
    d954:	subs	r0, r3, #0
    d958:	beq	d960 <sas7bdat_module_ctx_free+0x54>
    d95c:	bl	3ec0 <free@plt>
    d960:	mov	r0, r4
    d964:	bl	3ec0 <free@plt>
    d968:	ldrd	r2, [r5]
    d96c:	ldr	r0, [r5, #16]
    d970:	mov	sl, r6
    d974:	adds	r6, r6, #1
    d978:	mov	fp, r7
    d97c:	adc	r7, r7, #0
    d980:	cmp	sl, r2
    d984:	sbcs	r1, fp, r3
    d988:	blt	d940 <sas7bdat_module_ctx_free+0x34>
    d98c:	bl	3ec0 <free@plt>
    d990:	mov	r0, r5
    d994:	bl	3ec0 <free@plt>
    d998:	mov	r0, r8
    d99c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d9a0:	b	3ec0 <free@plt>

0000d9a4 <sas7bdat_write_row>:
    d9a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d9a8:	add	fp, sp, #32
    d9ac:	sub	sp, sp, #12
    d9b0:	ldr	r4, [r0, #16]
    d9b4:	ldr	r3, [r0, #300]	; 0x12c
    d9b8:	cmp	r4, #0
    d9bc:	str	r1, [fp, #-44]	; 0xffffffd4
    d9c0:	mov	r7, r2
    d9c4:	str	r3, [fp, #-40]	; 0xffffffd8
    d9c8:	beq	d9e0 <sas7bdat_write_row+0x3c>
    d9cc:	cmp	r4, #1
    d9d0:	movne	r0, #0
    d9d4:	beq	daf4 <sas7bdat_write_row+0x150>
    d9d8:	sub	sp, fp, #32
    d9dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d9e0:	mov	r2, r3
    d9e4:	ldr	r3, [r0, #28]
    d9e8:	mov	r6, r0
    d9ec:	cmp	r3, #0
    d9f0:	ldr	r9, [r2]
    d9f4:	ble	dbf4 <sas7bdat_write_row+0x250>
    d9f8:	mov	sl, r4
    d9fc:	mov	r1, sl
    da00:	mov	r0, r6
    da04:	bl	437c <readstat_get_variable@plt>
    da08:	add	sl, sl, #1
    da0c:	mov	r8, r0
    da10:	bl	41d8 <readstat_variable_get_type@plt>
    da14:	mov	r5, r0
    da18:	mov	r0, r8
    da1c:	bl	42c8 <readstat_variable_get_storage_width@plt>
    da20:	ldr	r2, [r6, #28]
    da24:	cmp	r5, #0
    da28:	movne	r0, #8
    da2c:	cmp	sl, r2
    da30:	add	r4, r4, r0
    da34:	blt	d9fc <sas7bdat_write_row+0x58>
    da38:	mov	r2, r4
    da3c:	mov	r3, #0
    da40:	ldrd	r4, [r9, #32]
    da44:	ldrd	r0, [r9, #40]	; 0x28
    da48:	subs	r0, r4, r0
    da4c:	sbc	r1, r5, r1
    da50:	bl	255b4 <__aeabi_ldivmod>
    da54:	mov	r1, r0
    da58:	mov	r4, r0
    da5c:	ldr	r0, [r6, #84]	; 0x54
    da60:	bl	251c0 <__aeabi_idivmod>
    da64:	cmp	r1, #0
    da68:	bne	db80 <sas7bdat_write_row+0x1dc>
    da6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    da70:	mov	r0, r6
    da74:	mov	r5, sp
    da78:	ldr	r1, [r3]
    da7c:	bl	4478 <sas_fill_page@plt>
    da80:	cmp	r0, #0
    da84:	bne	daec <sas7bdat_write_row+0x148>
    da88:	ldr	r2, [r9, #40]	; 0x28
    da8c:	ldr	ip, [r6, #84]	; 0x54
    da90:	add	r1, r2, #7
    da94:	ldr	r3, [r6, #80]	; 0x50
    da98:	bic	r1, r1, #7
    da9c:	sub	sp, sp, r1
    daa0:	sub	r3, r3, ip
    daa4:	cmp	r3, r4
    daa8:	mov	r1, r0
    daac:	mov	r0, sp
    dab0:	movlt	r4, r3
    dab4:	bl	42a4 <memset@plt>
    dab8:	ldr	r3, [r9, #40]	; 0x28
    dabc:	mov	r2, #256	; 0x100
    dac0:	add	r3, sp, r3
    dac4:	mov	r1, sp
    dac8:	strh	r4, [r3, #-6]
    dacc:	ldr	r3, [r9, #40]	; 0x28
    dad0:	mov	r0, r6
    dad4:	add	r3, sp, r3
    dad8:	strh	r2, [r3, #-8]
    dadc:	ldr	r2, [r9, #40]	; 0x28
    dae0:	bl	4454 <readstat_write_bytes@plt>
    dae4:	cmp	r0, #0
    dae8:	beq	db7c <sas7bdat_write_row+0x1d8>
    daec:	mov	sp, r5
    daf0:	b	d9d8 <sas7bdat_write_row+0x34>
    daf4:	mov	r8, r1
    daf8:	mov	r0, r8
    dafc:	mov	r1, r2
    db00:	bl	4484 <sas_rle_compressed_len@plt>
    db04:	mov	r1, #20
    db08:	mov	r6, r0
    db0c:	cmp	r7, r6
    db10:	mov	r0, r4
    db14:	bls	db98 <sas7bdat_write_row+0x1f4>
    db18:	bl	3d58 <calloc@plt>
    db1c:	mov	r3, #0
    db20:	mov	r1, r6
    db24:	mov	r5, r0
    db28:	str	r3, [r0]
    db2c:	str	r6, [r0, #8]
    db30:	mov	r0, r4
    db34:	bl	3d58 <calloc@plt>
    db38:	str	r4, [r5, #12]
    db3c:	str	r4, [r5, #16]
    db40:	mov	r3, r7
    db44:	mov	r2, r8
    db48:	mov	r1, r6
    db4c:	str	r0, [r5, #4]
    db50:	bl	44d8 <sas_rle_compress@plt>
    db54:	cmp	r6, r0
    db58:	beq	dbcc <sas7bdat_write_row+0x228>
    db5c:	ldr	r0, [r5, #4]
    db60:	cmp	r0, #0
    db64:	beq	db6c <sas7bdat_write_row+0x1c8>
    db68:	bl	3ec0 <free@plt>
    db6c:	mov	r0, r5
    db70:	bl	3ec0 <free@plt>
    db74:	mov	r0, #10
    db78:	b	d9d8 <sas7bdat_write_row+0x34>
    db7c:	mov	sp, r5
    db80:	mov	r2, r7
    db84:	ldr	r1, [fp, #-44]	; 0xffffffd4
    db88:	mov	r0, r6
    db8c:	bl	4454 <readstat_write_bytes@plt>
    db90:	sub	sp, fp, #32
    db94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    db98:	bl	3d58 <calloc@plt>
    db9c:	mov	r3, #0
    dba0:	mov	r1, r7
    dba4:	mov	r5, r0
    dba8:	str	r7, [r0, #8]
    dbac:	str	r3, [r0]
    dbb0:	mov	r0, r4
    dbb4:	bl	3d58 <calloc@plt>
    dbb8:	str	r4, [r5, #12]
    dbbc:	mov	r2, r7
    dbc0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    dbc4:	str	r0, [r5, #4]
    dbc8:	bl	3f20 <memcpy@plt>
    dbcc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    dbd0:	mov	r0, #0
    dbd4:	ldr	r1, [r3, #4]
    dbd8:	ldrd	r2, [r1]
    dbdc:	ldr	ip, [r1, #16]
    dbe0:	adds	r6, r2, #1
    dbe4:	adc	r7, r3, #0
    dbe8:	strd	r6, [r1]
    dbec:	str	r5, [ip, r2, lsl #2]
    dbf0:	b	d9d8 <sas7bdat_write_row+0x34>
    dbf4:	mov	r2, r4
    dbf8:	mov	r3, r4
    dbfc:	b	da40 <sas7bdat_write_row+0x9c>

0000dc00 <sas7bdat_emit_header_and_meta_pages>:
    dc00:	ldr	r3, [r0, #28]
    dc04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    dc08:	cmp	r3, #0
    dc0c:	ldr	r7, [pc, #1428]	; e1a8 <sas7bdat_emit_header_and_meta_pages+0x5a8>
    dc10:	movgt	r9, #0
    dc14:	add	r7, pc, r7
    dc18:	sub	sp, sp, #388	; 0x184
    dc1c:	ldr	r5, [r0, #300]	; 0x12c
    dc20:	movgt	sl, r0
    dc24:	movgt	r6, r9
    dc28:	ble	dc70 <sas7bdat_emit_header_and_meta_pages+0x70>
    dc2c:	mov	r1, r6
    dc30:	mov	r0, sl
    dc34:	bl	437c <readstat_get_variable@plt>
    dc38:	add	r6, r6, #1
    dc3c:	mov	r4, r0
    dc40:	bl	41d8 <readstat_variable_get_type@plt>
    dc44:	mov	r8, r0
    dc48:	mov	r0, r4
    dc4c:	bl	42c8 <readstat_variable_get_storage_width@plt>
    dc50:	ldr	r4, [sl, #28]
    dc54:	cmp	r8, #0
    dc58:	movne	r0, #8
    dc5c:	cmp	r6, r4
    dc60:	add	r9, r9, r0
    dc64:	blt	dc2c <sas7bdat_emit_header_and_meta_pages+0x2c>
    dc68:	cmp	r9, #0
    dc6c:	bne	dc84 <sas7bdat_emit_header_and_meta_pages+0x84>
    dc70:	mov	r3, #36	; 0x24
    dc74:	str	r3, [sp, #184]	; 0xb8
    dc78:	ldr	r0, [sp, #184]	; 0xb8
    dc7c:	add	sp, sp, #388	; 0x184
    dc80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dc84:	ldr	r0, [sl, #16]
    dc88:	cmp	r0, #0
    dc8c:	bne	dd10 <sas7bdat_emit_header_and_meta_pages+0x110>
    dc90:	cmp	r4, #0
    dc94:	ldr	fp, [r5]
    dc98:	ble	e188 <sas7bdat_emit_header_and_meta_pages+0x588>
    dc9c:	mov	r9, r0
    dca0:	mov	r6, r0
    dca4:	mov	r1, r6
    dca8:	mov	r0, sl
    dcac:	bl	437c <readstat_get_variable@plt>
    dcb0:	add	r6, r6, #1
    dcb4:	mov	r4, r0
    dcb8:	bl	41d8 <readstat_variable_get_type@plt>
    dcbc:	mov	r8, r0
    dcc0:	mov	r0, r4
    dcc4:	bl	42c8 <readstat_variable_get_storage_width@plt>
    dcc8:	ldr	r4, [sl, #28]
    dccc:	cmp	r8, #0
    dcd0:	movne	r0, #8
    dcd4:	cmp	r6, r4
    dcd8:	add	r9, r9, r0
    dcdc:	blt	dca4 <sas7bdat_emit_header_and_meta_pages+0xa4>
    dce0:	mov	r2, r9
    dce4:	mov	r3, #0
    dce8:	ldrd	r8, [fp, #32]
    dcec:	ldrd	r0, [fp, #40]	; 0x28
    dcf0:	subs	r0, r8, r0
    dcf4:	sbc	r1, r9, r1
    dcf8:	bl	255b4 <__aeabi_ldivmod>
    dcfc:	cmp	r0, #0
    dd00:	moveq	r3, #35	; 0x23
    dd04:	streq	r3, [sp, #184]	; 0xb8
    dd08:	beq	dc78 <sas7bdat_emit_header_and_meta_pages+0x78>
    dd0c:	ldr	r0, [sl, #16]
    dd10:	ldr	r3, [sl, #300]	; 0x12c
    dd14:	ldr	r2, [r5]
    dd18:	ldm	r3, {r3, ip}
    dd1c:	str	r2, [sp, #160]	; 0xa0
    dd20:	ldr	r2, [ip]
    dd24:	ldr	r9, [r3, #32]
    dd28:	ldr	lr, [r3, #40]	; 0x28
    dd2c:	subs	r1, r2, #1
    dd30:	sub	r9, r9, lr
    dd34:	ldr	fp, [r3, #48]	; 0x30
    dd38:	bmi	e180 <sas7bdat_emit_header_and_meta_pages+0x580>
    dd3c:	ldr	ip, [ip, #16]
    dd40:	mov	r3, r9
    dd44:	add	ip, ip, r2, lsl #2
    dd48:	mov	r6, #1
    dd4c:	ldr	r2, [ip, #-4]!
    dd50:	sub	r1, r1, #1
    dd54:	ldr	r2, [r2, #8]
    dd58:	add	r2, fp, r2
    dd5c:	cmp	r2, r3
    dd60:	movhi	r3, r9
    dd64:	movhi	lr, #1
    dd68:	movls	lr, #0
    dd6c:	cmn	r1, #1
    dd70:	sub	r3, r3, r2
    dd74:	add	r6, r6, lr
    dd78:	bne	dd4c <sas7bdat_emit_header_and_meta_pages+0x14c>
    dd7c:	cmp	r0, #1
    dd80:	beq	e070 <sas7bdat_emit_header_and_meta_pages+0x470>
    dd84:	cmp	r4, #0
    dd88:	ble	e194 <sas7bdat_emit_header_and_meta_pages+0x594>
    dd8c:	mov	fp, #0
    dd90:	mov	r4, fp
    dd94:	mov	r1, r4
    dd98:	mov	r0, sl
    dd9c:	bl	437c <readstat_get_variable@plt>
    dda0:	add	r4, r4, #1
    dda4:	mov	r9, r0
    dda8:	bl	41d8 <readstat_variable_get_type@plt>
    ddac:	mov	r8, r0
    ddb0:	mov	r0, r9
    ddb4:	bl	42c8 <readstat_variable_get_storage_width@plt>
    ddb8:	ldr	r3, [sl, #28]
    ddbc:	cmp	r8, #0
    ddc0:	movne	r0, #8
    ddc4:	cmp	r4, r3
    ddc8:	add	fp, fp, r0
    ddcc:	blt	dd94 <sas7bdat_emit_header_and_meta_pages+0x194>
    ddd0:	ldr	r9, [r5]
    ddd4:	ldr	r1, [sp, #160]	; 0xa0
    ddd8:	mov	r2, fp
    dddc:	mov	r3, #0
    dde0:	ldrd	r4, [r1, #32]
    dde4:	ldrd	r0, [r1, #40]	; 0x28
    dde8:	subs	r0, r4, r0
    ddec:	sbc	r1, r5, r1
    ddf0:	bl	255b4 <__aeabi_ldivmod>
    ddf4:	ldr	r3, [sl, #80]	; 0x50
    ddf8:	mov	r1, r0
    ddfc:	sub	r0, r0, #1
    de00:	add	r0, r0, r3
    de04:	bl	24fa0 <__divsi3>
    de08:	add	r6, r6, r0
    de0c:	add	r1, sp, #216	; 0xd8
    de10:	mov	r5, r1
    de14:	str	r1, [sp, #192]	; 0xc0
    de18:	ldr	r1, [sp, #160]	; 0xa0
    de1c:	asr	r3, r6, #31
    de20:	mov	r2, r6
    de24:	mov	r0, r5
    de28:	strd	r2, [r1, #56]	; 0x38
    de2c:	mov	r1, #0
    de30:	mov	r2, #164	; 0xa4
    de34:	bl	42a4 <memset@plt>
    de38:	ldr	r3, [r9, #4]
    de3c:	mov	r2, #34	; 0x22
    de40:	cmp	r3, #0
    de44:	moveq	r3, r2
    de48:	movne	r3, #51	; 0x33
    de4c:	strb	r3, [sp, #248]	; 0xf8
    de50:	strb	r2, [sp, #251]	; 0xfb
    de54:	bl	3eb4 <machine_is_little_endian@plt>
    de58:	ldr	r3, [pc, #844]	; e1ac <sas7bdat_emit_header_and_meta_pages+0x5ac>
    de5c:	mov	r1, #49	; 0x31
    de60:	add	r3, pc, r3
    de64:	strb	r1, [sp, #255]	; 0xff
    de68:	mov	r1, #20
    de6c:	strb	r1, [sp, #286]	; 0x11e
    de70:	add	lr, r3, #12
    de74:	ldr	r2, [pc, #820]	; e1b0 <sas7bdat_emit_header_and_meta_pages+0x5b0>
    de78:	mov	ip, r5
    de7c:	adds	r4, r0, #0
    de80:	ldm	r3, {r0, r1}
    de84:	add	r3, sp, #300	; 0x12c
    de88:	movne	r4, #1
    de8c:	stm	r3, {r0, r1}
    de90:	ldm	lr, {r0, r1}
    de94:	add	r3, sp, #372	; 0x174
    de98:	strb	r4, [sp, #253]	; 0xfd
    de9c:	stm	r3, {r0, r1}
    dea0:	ldr	lr, [r7, r2]
    dea4:	ldr	r0, [lr]
    dea8:	ldr	r1, [lr, #4]
    deac:	ldr	r2, [lr, #8]
    deb0:	ldr	r3, [lr, #12]
    deb4:	stmia	ip!, {r0, r1, r2, r3}
    deb8:	ldr	r0, [lr, #16]
    debc:	ldr	r1, [lr, #20]
    dec0:	ldr	r2, [lr, #24]
    dec4:	ldr	r3, [lr, #28]
    dec8:	stmia	ip!, {r0, r1, r2, r3}
    decc:	mov	r2, #156	; 0x9c
    ded0:	add	r1, sp, #224	; 0xe0
    ded4:	mov	r0, sp
    ded8:	bl	3f20 <memcpy@plt>
    dedc:	ldm	r5, {r2, r3}
    dee0:	mov	r1, r9
    dee4:	mov	r0, sl
    dee8:	bl	40b8 <sas_write_header@plt>
    deec:	subs	r3, r0, #0
    def0:	str	r3, [sp, #184]	; 0xb8
    def4:	bne	dc78 <sas7bdat_emit_header_and_meta_pages+0x78>
    def8:	ldr	r3, [sl, #300]	; 0x12c
    defc:	mov	r0, #0
    df00:	mov	r1, #0
    df04:	ldr	r9, [r3]
    df08:	strd	r0, [sp, #160]	; 0xa0
    df0c:	ldr	r5, [r3, #4]
    df10:	ldr	r0, [r9, #32]
    df14:	bl	410c <malloc@plt>
    df18:	add	r3, sp, #200	; 0xc8
    df1c:	str	sl, [sp, #188]	; 0xbc
    df20:	str	r3, [sp, #176]	; 0xb0
    df24:	add	r3, sp, #208	; 0xd0
    df28:	str	r3, [sp, #180]	; 0xb4
    df2c:	mov	sl, r0
    df30:	str	r0, [sp, #196]	; 0xc4
    df34:	ldrd	r2, [r5]
    df38:	ldrd	r0, [sp, #160]	; 0xa0
    df3c:	cmp	r0, r2
    df40:	sbcs	r3, r1, r3
    df44:	bge	e160 <sas7bdat_emit_header_and_meta_pages+0x560>
    df48:	ldr	r2, [r9, #32]
    df4c:	mov	r1, #0
    df50:	mov	r0, sl
    df54:	bl	42a4 <memset@plt>
    df58:	ldr	r1, [r9, #40]	; 0x28
    df5c:	mov	r3, #0
    df60:	add	fp, sl, r1
    df64:	ldr	r4, [r9, #32]
    df68:	ldr	r8, [r9, #48]	; 0x30
    df6c:	ldrd	r6, [sp, #160]	; 0xa0
    df70:	strh	r3, [fp, #-8]
    df74:	ldr	r2, [r5, #16]
    df78:	sub	r1, r4, r1
    df7c:	ldr	r3, [r2, r6, lsl #2]
    df80:	ldr	r2, [r3, #8]
    df84:	add	r0, r8, r2
    df88:	cmp	r0, r1
    df8c:	bhi	e174 <sas7bdat_emit_header_and_meta_pages+0x574>
    df90:	ldrd	r0, [r5]
    df94:	cmp	r6, r0
    df98:	sbcs	r1, r7, r1
    df9c:	bge	e16c <sas7bdat_emit_header_and_meta_pages+0x56c>
    dfa0:	sub	r1, r8, sl
    dfa4:	str	r1, [sp, #172]	; 0xac
    dfa8:	b	e020 <sas7bdat_emit_header_and_meta_pages+0x420>
    dfac:	ldr	r2, [r3, #16]
    dfb0:	mov	r1, #1
    dfb4:	cmp	r2, #0
    dfb8:	movne	r2, #4
    dfbc:	strb	r1, [fp, #9]
    dfc0:	strb	r2, [fp, #8]
    dfc4:	ldmib	r3, {r1, r2}
    dfc8:	sub	r4, r4, r2
    dfcc:	add	r0, sl, r4
    dfd0:	bl	3f20 <memcpy@plt>
    dfd4:	ldrd	r2, [r5]
    dfd8:	adds	r6, r6, #1
    dfdc:	ldr	r1, [sp, #160]	; 0xa0
    dfe0:	adc	r7, r7, #0
    dfe4:	cmp	r6, r2
    dfe8:	sub	r0, r6, r1
    dfec:	sbcs	r3, r7, r3
    dff0:	ldr	r3, [sp, #172]	; 0xac
    dff4:	uxth	r0, r0
    dff8:	add	r1, r3, fp
    dffc:	bge	e128 <sas7bdat_emit_header_and_meta_pages+0x528>
    e000:	ldr	r2, [r5, #16]
    e004:	sub	r1, r4, r1
    e008:	add	fp, fp, r8
    e00c:	ldr	r3, [r2, r6, lsl #2]
    e010:	ldr	r2, [r3, #8]
    e014:	add	ip, r8, r2
    e018:	cmp	ip, r1
    e01c:	bhi	e128 <sas7bdat_emit_header_and_meta_pages+0x528>
    e020:	ldr	r1, [r9, #4]
    e024:	ldr	ip, [r3]
    e028:	cmp	r1, #0
    e02c:	bne	e07c <sas7bdat_emit_header_and_meta_pages+0x47c>
    e030:	sub	r1, r4, r2
    e034:	str	r2, [fp, #4]
    e038:	str	r1, [fp]
    e03c:	ldr	r2, [r3, #12]
    e040:	cmp	r2, #0
    e044:	bne	dfac <sas7bdat_emit_header_and_meta_pages+0x3ac>
    e048:	ldr	r2, [r3]
    e04c:	bic	r2, r2, #2
    e050:	add	r2, r2, #4
    e054:	cmp	r2, #1
    e058:	movhi	r2, #0
    e05c:	movls	r2, #1
    e060:	strb	r2, [fp, #9]
    e064:	ldr	r2, [r3, #4]
    e068:	str	ip, [r2]
    e06c:	b	dfc4 <sas7bdat_emit_header_and_meta_pages+0x3c4>
    e070:	ldr	r9, [sp, #160]	; 0xa0
    e074:	mov	r0, #0
    e078:	b	de08 <sas7bdat_emit_header_and_meta_pages+0x208>
    e07c:	ldr	lr, [sp, #176]	; 0xb0
    e080:	sub	r1, r4, r2
    e084:	mov	r0, #0
    e088:	str	r2, [sp, #208]	; 0xd0
    e08c:	str	r0, [sp, #204]	; 0xcc
    e090:	str	r1, [sp, #200]	; 0xc8
    e094:	ldr	r2, [sp, #180]	; 0xb4
    e098:	ldm	lr!, {r0, r1}
    e09c:	mov	lr, #0
    e0a0:	str	lr, [sp, #212]	; 0xd4
    e0a4:	str	r0, [fp]
    e0a8:	str	r1, [fp, #4]
    e0ac:	ldm	r2!, {r0, r1}
    e0b0:	str	r0, [fp, #8]
    e0b4:	str	r1, [fp, #12]
    e0b8:	ldr	r2, [r3, #12]
    e0bc:	cmp	r2, lr
    e0c0:	beq	e0e0 <sas7bdat_emit_header_and_meta_pages+0x4e0>
    e0c4:	ldr	r2, [r3, #16]
    e0c8:	mov	r1, #1
    e0cc:	cmp	r2, lr
    e0d0:	movne	r2, #4
    e0d4:	strb	r1, [fp, #17]
    e0d8:	strb	r2, [fp, #16]
    e0dc:	b	dfc4 <sas7bdat_emit_header_and_meta_pages+0x3c4>
    e0e0:	ldr	r2, [r3]
    e0e4:	bic	r2, r2, #2
    e0e8:	add	r2, r2, #4
    e0ec:	cmp	r2, #1
    e0f0:	movhi	r2, #0
    e0f4:	movls	r2, #1
    e0f8:	cmp	ip, #-16777216	; 0xff000000
    e0fc:	strb	r2, [fp, #17]
    e100:	bcc	e064 <sas7bdat_emit_header_and_meta_pages+0x464>
    e104:	ldr	r2, [sp, #192]	; 0xc0
    e108:	mov	r0, ip
    e10c:	asr	r1, ip, #31
    e110:	ldr	ip, [r3, #4]
    e114:	strd	r0, [sp, #216]	; 0xd8
    e118:	ldm	r2!, {r0, r1}
    e11c:	str	r0, [ip]
    e120:	str	r1, [ip, #4]
    e124:	b	dfc4 <sas7bdat_emit_header_and_meta_pages+0x3c4>
    e128:	strd	r6, [sp, #160]	; 0xa0
    e12c:	ldr	r3, [r9, #4]
    e130:	mov	r1, sl
    e134:	cmp	r3, #0
    e138:	strhne	r0, [sl, #34]	; 0x22
    e13c:	strhne	r0, [sl, #36]	; 0x24
    e140:	strheq	r0, [sl, #18]
    e144:	strheq	r0, [sl, #20]
    e148:	ldr	r0, [sp, #188]	; 0xbc
    e14c:	ldr	r2, [r9, #32]
    e150:	bl	4454 <readstat_write_bytes@plt>
    e154:	cmp	r0, #0
    e158:	beq	df34 <sas7bdat_emit_header_and_meta_pages+0x334>
    e15c:	str	r0, [sp, #184]	; 0xb8
    e160:	ldr	r0, [sp, #196]	; 0xc4
    e164:	bl	3ec0 <free@plt>
    e168:	b	dc78 <sas7bdat_emit_header_and_meta_pages+0x78>
    e16c:	mov	r0, #0
    e170:	b	e12c <sas7bdat_emit_header_and_meta_pages+0x52c>
    e174:	mov	r3, #35	; 0x23
    e178:	str	r3, [sp, #184]	; 0xb8
    e17c:	b	e160 <sas7bdat_emit_header_and_meta_pages+0x560>
    e180:	mov	r6, #1
    e184:	b	dd7c <sas7bdat_emit_header_and_meta_pages+0x17c>
    e188:	mov	r2, r0
    e18c:	mov	r3, r0
    e190:	b	dce8 <sas7bdat_emit_header_and_meta_pages+0xe8>
    e194:	ldr	r9, [sp, #160]	; 0xa0
    e198:	mov	r2, #0
    e19c:	mov	r3, r2
    e1a0:	mov	r1, r9
    e1a4:	b	dde0 <sas7bdat_emit_header_and_meta_pages+0x1e0>
    e1a8:	.word	0x000373e4
    e1ac:	.word	0x00018584
    e1b0:	.word	0x000002f0

0000e1b4 <sas7bdat_end_data>:
    e1b4:	ldr	r2, [r0, #16]
    e1b8:	cmp	r2, #1
    e1bc:	beq	e1cc <sas7bdat_end_data+0x18>
    e1c0:	ldr	r3, [r0, #300]	; 0x12c
    e1c4:	ldr	r1, [r3]
    e1c8:	b	4478 <sas_fill_page@plt>
    e1cc:	b	dc00 <sas7bdat_emit_header_and_meta_pages>

0000e1d0 <sas7bdat_begin_data>:
    e1d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e1d4:	mov	r1, #8
    e1d8:	mov	sl, r0
    e1dc:	sub	sp, sp, #100	; 0x64
    e1e0:	mov	r0, #1
    e1e4:	bl	3d58 <calloc@plt>
    e1e8:	ldr	r1, [sl, #12]
    e1ec:	mov	r5, #0
    e1f0:	str	r0, [sp, #48]	; 0x30
    e1f4:	mov	r0, sl
    e1f8:	bl	434c <sas_header_info_init@plt>
    e1fc:	ldr	r6, [sl, #28]
    e200:	cmp	r6, #0
    e204:	mov	fp, r0
    e208:	ble	e24c <sas7bdat_begin_data+0x7c>
    e20c:	mov	r4, r5
    e210:	mov	r1, r4
    e214:	mov	r0, sl
    e218:	bl	437c <readstat_get_variable@plt>
    e21c:	add	r4, r4, #1
    e220:	mov	r6, r0
    e224:	bl	41d8 <readstat_variable_get_type@plt>
    e228:	mov	r7, r0
    e22c:	mov	r0, r6
    e230:	bl	42c8 <readstat_variable_get_storage_width@plt>
    e234:	ldr	r6, [sl, #28]
    e238:	cmp	r7, #0
    e23c:	movne	r0, #8
    e240:	cmp	r4, r6
    e244:	add	r5, r5, r0
    e248:	blt	e210 <sas7bdat_begin_data+0x40>
    e24c:	ldrd	r0, [fp, #48]	; 0x30
    e250:	add	r3, r6, r6, lsl #1
    e254:	ldr	r2, [fp, #4]
    e258:	mov	r8, r0
    e25c:	mov	r9, r1
    e260:	cmp	r2, #0
    e264:	lsl	r0, r3, #2
    e268:	lsl	r3, r6, #4
    e26c:	addne	r3, r3, #28
    e270:	addeq	r3, r0, #20
    e274:	strd	r8, [sp]
    e278:	ldr	r1, [sl, #16]
    e27c:	adds	r8, r8, r3
    e280:	adc	r9, r9, #0
    e284:	cmp	r1, #0
    e288:	strd	r8, [sp, #8]
    e28c:	ldr	ip, [fp, #40]	; 0x28
    e290:	ldrd	r8, [fp, #32]
    e294:	lsl	r3, r6, #3
    e298:	beq	e2f8 <sas7bdat_begin_data+0x128>
    e29c:	cmp	r1, #1
    e2a0:	beq	ebc4 <sas7bdat_begin_data+0x9f4>
    e2a4:	cmp	r2, #0
    e2a8:	bne	ee60 <sas7bdat_begin_data+0xc90>
    e2ac:	ldrd	r0, [sp]
    e2b0:	add	r3, r3, #20
    e2b4:	mov	lr, r6
    e2b8:	adds	r0, r0, r3
    e2bc:	adc	r1, r1, #0
    e2c0:	ldrd	r6, [sp, #8]
    e2c4:	b	e2d4 <sas7bdat_begin_data+0x104>
    e2c8:	adds	r8, r8, r8
    e2cc:	adc	r9, r9, r9
    e2d0:	strd	r8, [fp, #32]
    e2d4:	sub	r4, r8, ip
    e2d8:	mov	r3, #0
    e2dc:	cmp	r4, r0
    e2e0:	sbcs	r5, r3, r1
    e2e4:	blt	e2c8 <sas7bdat_begin_data+0xf8>
    e2e8:	cmp	r4, r6
    e2ec:	sbcs	r3, r3, r7
    e2f0:	bge	ee98 <sas7bdat_begin_data+0xcc8>
    e2f4:	b	e2c8 <sas7bdat_begin_data+0xf8>
    e2f8:	cmp	r2, #0
    e2fc:	beq	eb6c <sas7bdat_begin_data+0x99c>
    e300:	ldrd	r0, [sp]
    e304:	add	r3, r3, #28
    e308:	str	r6, [sp, #20]
    e30c:	adds	r0, r0, r3
    e310:	ldrd	r6, [sp, #8]
    e314:	adc	r1, r1, #0
    e318:	sub	r4, r8, ip
    e31c:	cmp	r4, r5
    e320:	mov	r3, #0
    e324:	bcc	ec88 <sas7bdat_begin_data+0xab8>
    e328:	cmp	r4, r0
    e32c:	sbcs	lr, r3, r1
    e330:	blt	ec88 <sas7bdat_begin_data+0xab8>
    e334:	cmp	r4, r6
    e338:	sbcs	r3, r3, r7
    e33c:	blt	ec88 <sas7bdat_begin_data+0xab8>
    e340:	ldr	r6, [sp, #20]
    e344:	ldr	r3, [sp, #48]	; 0x30
    e348:	mov	r1, #16
    e34c:	mov	r0, #1
    e350:	str	fp, [r3]
    e354:	bl	3d58 <calloc@plt>
    e358:	mov	r2, #1
    e35c:	mov	r3, #0
    e360:	mov	r9, r0
    e364:	mov	r0, #4
    e368:	strd	r2, [r9]
    e36c:	bl	410c <malloc@plt>
    e370:	ldr	r3, [sp]
    e374:	ldr	r2, [fp, #4]
    e378:	rsb	r3, r3, #-16777216	; 0xff000000
    e37c:	add	r3, r3, #16711680	; 0xff0000
    e380:	add	r3, r3, #65280	; 0xff00
    e384:	cmp	r2, #0
    e388:	add	r3, r3, #228	; 0xe4
    e38c:	add	r3, r3, r4
    e390:	mov	r1, #24
    e394:	moveq	r4, #4
    e398:	movne	r4, #8
    e39c:	sub	r4, r3, r4
    e3a0:	mov	r5, r0
    e3a4:	str	r5, [r9, #8]
    e3a8:	mov	r0, #1
    e3ac:	bl	3d58 <calloc@plt>
    e3b0:	mov	r7, r0
    e3b4:	mov	r0, r4
    e3b8:	bl	410c <malloc@plt>
    e3bc:	mov	r2, #0
    e3c0:	mov	r3, #0
    e3c4:	str	r4, [r7, #4]
    e3c8:	strd	r2, [r7, #16]
    e3cc:	mov	r1, #24
    e3d0:	str	r7, [r5]
    e3d4:	str	r0, [r7]
    e3d8:	mov	r0, #1
    e3dc:	bl	3d58 <calloc@plt>
    e3e0:	mov	r1, #4
    e3e4:	mov	r4, r0
    e3e8:	str	r0, [sp, #20]
    e3ec:	add	r0, r6, #4
    e3f0:	mov	r2, r0
    e3f4:	asr	r3, r0, #31
    e3f8:	strd	r2, [r4]
    e3fc:	bl	3d58 <calloc@plt>
    e400:	ldr	r3, [fp, #4]
    e404:	ldr	r7, [sl, #28]
    e408:	cmp	r3, #0
    e40c:	str	r0, [r4, #16]
    e410:	beq	ec98 <sas7bdat_begin_data+0xac8>
    e414:	lsl	r7, r7, #3
    e418:	add	r7, r7, #28
    e41c:	mov	r4, #16
    e420:	mov	r5, #8
    e424:	mov	r1, r5
    e428:	mov	r0, r7
    e42c:	bl	43b8 <sas_subheader_remainder@plt>
    e430:	mov	r1, #20
    e434:	mov	r6, r0
    e438:	mov	r0, #1
    e43c:	bl	3d58 <calloc@plt>
    e440:	mvn	r3, #0
    e444:	mov	r1, r7
    e448:	mov	r2, r0
    e44c:	str	r7, [r0, #8]
    e450:	str	r0, [sp, #56]	; 0x38
    e454:	str	r3, [r2]
    e458:	mov	r0, #1
    e45c:	mov	r7, r2
    e460:	bl	3d58 <calloc@plt>
    e464:	ldr	r3, [sl, #28]
    e468:	cmp	r3, #0
    e46c:	strh	r6, [r0, r5]
    e470:	add	r4, r0, r4
    e474:	str	r0, [r7, #4]
    e478:	ble	e4d8 <sas7bdat_begin_data+0x308>
    e47c:	add	r7, r9, #8
    e480:	mov	r5, #0
    e484:	add	r6, sp, #88	; 0x58
    e488:	mov	r1, r5
    e48c:	mov	r0, sl
    e490:	bl	437c <readstat_get_variable@plt>
    e494:	bl	4364 <readstat_variable_get_name@plt>
    e498:	mov	r2, r7
    e49c:	mov	r1, r9
    e4a0:	add	r5, r5, #1
    e4a4:	add	r4, r4, #8
    e4a8:	mov	r3, r0
    e4ac:	mov	r0, r6
    e4b0:	bl	d80c <sas7bdat_make_text_ref.isra.12>
    e4b4:	ldr	r3, [sl, #28]
    e4b8:	ldrh	r0, [sp, #88]	; 0x58
    e4bc:	ldrh	r1, [sp, #90]	; 0x5a
    e4c0:	ldrh	r2, [sp, #92]	; 0x5c
    e4c4:	cmp	r5, r3
    e4c8:	strh	r0, [r4, #-8]
    e4cc:	strh	r1, [r4, #-6]
    e4d0:	strh	r2, [r4, #-4]
    e4d4:	blt	e488 <sas7bdat_begin_data+0x2b8>
    e4d8:	ldr	r2, [fp, #4]
    e4dc:	cmp	r2, #0
    e4e0:	addeq	r6, r3, r3, lsl #1
    e4e4:	lslne	r6, r3, #4
    e4e8:	lsleq	r6, r6, #2
    e4ec:	addne	r6, r6, #28
    e4f0:	addeq	r6, r6, #20
    e4f4:	movne	r4, #8
    e4f8:	moveq	r4, #4
    e4fc:	mov	r1, r4
    e500:	mov	r0, r6
    e504:	movne	r5, #16
    e508:	moveq	r5, #12
    e50c:	bl	43b8 <sas_subheader_remainder@plt>
    e510:	mov	r1, #20
    e514:	mov	r8, r0
    e518:	mov	r0, #1
    e51c:	bl	3d58 <calloc@plt>
    e520:	mvn	r3, #3
    e524:	mov	r1, r6
    e528:	mov	r2, r0
    e52c:	str	r6, [r0, #8]
    e530:	str	r0, [sp, #60]	; 0x3c
    e534:	str	r3, [r2]
    e538:	mov	r0, #1
    e53c:	mov	r6, r2
    e540:	bl	3d58 <calloc@plt>
    e544:	ldr	r7, [sl, #28]
    e548:	mov	r2, #0
    e54c:	mov	r3, #0
    e550:	cmp	r7, #0
    e554:	strh	r8, [r0, r4]
    e558:	str	r0, [r6, #4]
    e55c:	strd	r2, [sp, #88]	; 0x58
    e560:	add	r6, r0, r5
    e564:	ble	e61c <sas7bdat_begin_data+0x44c>
    e568:	mov	r5, #0
    e56c:	add	r3, sp, #88	; 0x58
    e570:	str	r3, [sp, #8]
    e574:	str	r9, [sp, #24]
    e578:	mov	r1, r5
    e57c:	mov	r0, sl
    e580:	bl	437c <readstat_get_variable@plt>
    e584:	mov	r7, r0
    e588:	bl	4364 <readstat_variable_get_name@plt>
    e58c:	mov	r4, r0
    e590:	mov	r0, r7
    e594:	bl	41d8 <readstat_variable_get_type@plt>
    e598:	mov	r8, r0
    e59c:	mov	r0, r4
    e5a0:	bl	41fc <strlen@plt>
    e5a4:	ldr	r3, [fp, #4]
    e5a8:	mov	r4, r6
    e5ac:	cmp	r0, #8
    e5b0:	movhi	r2, #2048	; 0x800
    e5b4:	movls	r2, #4
    e5b8:	cmp	r3, #0
    e5bc:	addne	r4, r6, #8
    e5c0:	ldrne	r3, [sp, #8]
    e5c4:	ldreq	r3, [sp, #88]	; 0x58
    e5c8:	ldmne	r3!, {r0, r1}
    e5cc:	streq	r3, [r4], #4
    e5d0:	strne	r0, [r6]
    e5d4:	strne	r1, [r6, #4]
    e5d8:	cmp	r8, #0
    e5dc:	beq	ec40 <sas7bdat_begin_data+0xa70>
    e5e0:	mov	r3, #1
    e5e4:	strb	r3, [r4, #6]
    e5e8:	mov	r3, #8
    e5ec:	str	r3, [r4]
    e5f0:	strh	r2, [r4, #4]
    e5f4:	ldrd	r2, [sp, #88]	; 0x58
    e5f8:	ldr	r7, [sl, #28]
    e5fc:	add	r5, r5, #1
    e600:	adds	r0, r2, #8
    e604:	adc	r1, r3, #0
    e608:	cmp	r5, r7
    e60c:	add	r6, r4, #8
    e610:	strd	r0, [sp, #88]	; 0x58
    e614:	blt	e578 <sas7bdat_begin_data+0x3a8>
    e618:	ldr	r9, [sp, #24]
    e61c:	ldr	r3, [sp, #20]
    e620:	ldr	r6, [fp, #4]
    e624:	mov	r1, #20
    e628:	ldr	r3, [r3, #16]
    e62c:	cmp	r6, #0
    e630:	mov	r0, #1
    e634:	moveq	r6, #480	; 0x1e0
    e638:	movne	r6, #808	; 0x328
    e63c:	str	r3, [sp]
    e640:	bl	3d58 <calloc@plt>
    e644:	ldr	r3, [pc, #2352]	; ef7c <sas7bdat_begin_data+0xdac>
    e648:	mov	r1, r6
    e64c:	mov	r4, r0
    e650:	str	r6, [r0, #8]
    e654:	mov	r0, #1
    e658:	str	r3, [r4]
    e65c:	bl	3d58 <calloc@plt>
    e660:	ldr	r6, [fp, #4]
    e664:	cmp	r6, #0
    e668:	str	r0, [r4, #4]
    e66c:	bne	ecac <sas7bdat_begin_data+0xadc>
    e670:	cmp	r7, #0
    e674:	mov	r8, r6
    e678:	ble	e6bc <sas7bdat_begin_data+0x4ec>
    e67c:	mov	r1, r6
    e680:	mov	r0, sl
    e684:	bl	437c <readstat_get_variable@plt>
    e688:	add	r6, r6, #1
    e68c:	mov	r7, r0
    e690:	bl	41d8 <readstat_variable_get_type@plt>
    e694:	mov	r5, r0
    e698:	mov	r0, r7
    e69c:	bl	42c8 <readstat_variable_get_storage_width@plt>
    e6a0:	ldr	r7, [sl, #28]
    e6a4:	cmp	r5, #0
    e6a8:	movne	r0, #8
    e6ac:	cmp	r6, r7
    e6b0:	add	r8, r8, r0
    e6b4:	blt	e67c <sas7bdat_begin_data+0x4ac>
    e6b8:	ldr	r0, [r4, #4]
    e6bc:	ldr	r3, [sl, #80]	; 0x50
    e6c0:	ldr	r1, [fp, #32]
    e6c4:	str	r8, [r0, #20]
    e6c8:	ldr	r0, [r4, #4]
    e6cc:	mvn	r2, #0
    e6d0:	str	r3, [r0, #24]
    e6d4:	ldr	r3, [r4, #4]
    e6d8:	str	r7, [r3, #36]	; 0x24
    e6dc:	ldr	r3, [r4, #4]
    e6e0:	str	r1, [r3, #52]	; 0x34
    e6e4:	ldr	r3, [r4, #4]
    e6e8:	str	r2, [r3, #64]	; 0x40
    e6ec:	str	r2, [r3, #68]	; 0x44
    e6f0:	ldr	r3, [fp, #4]
    e6f4:	ldr	r2, [sp]
    e6f8:	cmp	r3, #0
    e6fc:	ldr	r3, [sp, #20]
    e700:	str	r4, [r2]
    e704:	mov	r1, #20
    e708:	mov	r0, #1
    e70c:	moveq	r5, #12
    e710:	movne	r5, #24
    e714:	ldr	r6, [r3, #16]
    e718:	bl	3d58 <calloc@plt>
    e71c:	ldr	r3, [pc, #2140]	; ef80 <sas7bdat_begin_data+0xdb0>
    e720:	mov	r1, r5
    e724:	mov	r4, r0
    e728:	str	r5, [r0, #8]
    e72c:	str	r3, [r4]
    e730:	mov	r0, #1
    e734:	bl	3d58 <calloc@plt>
    e738:	ldr	r3, [fp, #4]
    e73c:	ldr	r5, [sl, #28]
    e740:	cmp	r3, #0
    e744:	str	r0, [r4, #4]
    e748:	streq	r5, [r0, #4]
    e74c:	bne	ee4c <sas7bdat_begin_data+0xc7c>
    e750:	str	r4, [r6, #4]
    e754:	mov	r1, #4
    e758:	mov	r0, r5
    e75c:	bl	3d58 <calloc@plt>
    e760:	cmp	r5, #0
    e764:	str	r0, [sp, #52]	; 0x34
    e768:	ble	e910 <sas7bdat_begin_data+0x740>
    e76c:	sub	r3, r0, #4
    e770:	add	r8, sp, #88	; 0x58
    e774:	str	r3, [sp]
    e778:	add	r3, r9, #8
    e77c:	mov	r7, #0
    e780:	str	r3, [sp, #8]
    e784:	mov	r3, r8
    e788:	mov	r8, r9
    e78c:	mov	r9, r7
    e790:	mov	r7, sl
    e794:	mov	sl, r3
    e798:	mov	r1, r9
    e79c:	mov	r0, r7
    e7a0:	bl	437c <readstat_get_variable@plt>
    e7a4:	ldr	r6, [fp, #4]
    e7a8:	mov	r1, #20
    e7ac:	cmp	r6, #0
    e7b0:	moveq	r6, #52	; 0x34
    e7b4:	movne	r6, #64	; 0x40
    e7b8:	add	r9, r9, #1
    e7bc:	mov	r5, r0
    e7c0:	mov	r0, #1
    e7c4:	bl	3d58 <calloc@plt>
    e7c8:	ldr	r3, [pc, #1972]	; ef84 <sas7bdat_begin_data+0xdb4>
    e7cc:	mov	r1, r6
    e7d0:	mov	r4, r0
    e7d4:	mov	r0, #1
    e7d8:	str	r3, [r4]
    e7dc:	str	r6, [r4, #8]
    e7e0:	bl	3d58 <calloc@plt>
    e7e4:	str	r0, [r4, #4]
    e7e8:	mov	r0, r5
    e7ec:	bl	3ee4 <readstat_variable_get_format@plt>
    e7f0:	mov	r6, r0
    e7f4:	mov	r0, r5
    e7f8:	bl	4400 <readstat_variable_get_label@plt>
    e7fc:	ldr	ip, [fp, #4]
    e800:	mov	r3, r6
    e804:	cmp	ip, #0
    e808:	movne	ip, #56	; 0x38
    e80c:	moveq	ip, #44	; 0x2c
    e810:	str	ip, [sp, #32]
    e814:	movne	ip, #54	; 0x36
    e818:	moveq	ip, #42	; 0x2a
    e81c:	str	ip, [sp, #28]
    e820:	movne	ip, #52	; 0x34
    e824:	moveq	ip, #40	; 0x28
    e828:	str	ip, [sp, #24]
    e82c:	movne	ip, #50	; 0x32
    e830:	moveq	ip, #38	; 0x26
    e834:	str	ip, [sp, #44]	; 0x2c
    e838:	movne	lr, #48	; 0x30
    e83c:	moveq	lr, #36	; 0x24
    e840:	movne	ip, #46	; 0x2e
    e844:	moveq	ip, #34	; 0x22
    e848:	cmp	r6, #0
    e84c:	ldr	r2, [sp, #8]
    e850:	mov	r1, r8
    e854:	str	ip, [sp, #36]	; 0x24
    e858:	mov	r5, r0
    e85c:	str	lr, [sp, #40]	; 0x28
    e860:	mov	r0, sl
    e864:	beq	e8a0 <sas7bdat_begin_data+0x6d0>
    e868:	bl	d80c <sas7bdat_make_text_ref.isra.12>
    e86c:	ldr	r3, [r4, #4]
    e870:	ldrh	r2, [sp, #88]	; 0x58
    e874:	ldr	r1, [sp, #36]	; 0x24
    e878:	ldr	lr, [sp, #40]	; 0x28
    e87c:	ldr	ip, [sp, #44]	; 0x2c
    e880:	strh	r2, [r3, r1]
    e884:	ldr	r3, [r4, #4]
    e888:	ldrh	r2, [sp, #90]	; 0x5a
    e88c:	strh	r2, [r3, lr]
    e890:	ldrh	r2, [sp, #92]	; 0x5c
    e894:	ldr	r3, [r4, #4]
    e898:	strh	r2, [r3, ip]
    e89c:	ldr	r2, [sp, #8]
    e8a0:	cmp	r5, #0
    e8a4:	mov	r3, r5
    e8a8:	mov	r1, r8
    e8ac:	mov	r0, sl
    e8b0:	beq	e8e8 <sas7bdat_begin_data+0x718>
    e8b4:	bl	d80c <sas7bdat_make_text_ref.isra.12>
    e8b8:	ldr	r3, [r4, #4]
    e8bc:	ldrh	r2, [sp, #88]	; 0x58
    e8c0:	ldr	r1, [sp, #24]
    e8c4:	strh	r2, [r3, r1]
    e8c8:	ldr	r1, [sp, #28]
    e8cc:	ldr	r3, [r4, #4]
    e8d0:	ldrh	r2, [sp, #90]	; 0x5a
    e8d4:	strh	r2, [r3, r1]
    e8d8:	ldr	r1, [sp, #32]
    e8dc:	ldr	r3, [r4, #4]
    e8e0:	ldrh	r2, [sp, #92]	; 0x5c
    e8e4:	strh	r2, [r3, r1]
    e8e8:	ldr	r3, [r7, #28]
    e8ec:	ldr	r2, [sp]
    e8f0:	cmp	r9, r3
    e8f4:	str	r4, [r2, #4]!
    e8f8:	str	r2, [sp]
    e8fc:	blt	e798 <sas7bdat_begin_data+0x5c8>
    e900:	ldr	r3, [sp, #20]
    e904:	mov	r9, r8
    e908:	mov	sl, r7
    e90c:	ldr	r6, [r3, #16]
    e910:	ldr	ip, [sp, #20]
    e914:	ldrd	r4, [r9]
    e918:	mov	r0, r6
    e91c:	ldrd	r2, [ip]
    e920:	adds	r6, r2, r4
    e924:	adc	r7, r3, r5
    e928:	lsl	r1, r6, #2
    e92c:	strd	r6, [ip]
    e930:	mov	r4, ip
    e934:	bl	3ff8 <realloc@plt>
    e938:	ldrd	r2, [r9]
    e93c:	cmp	r2, #1
    e940:	sbcs	r3, r3, #0
    e944:	str	r0, [r4, #16]
    e948:	blt	ef60 <sas7bdat_begin_data+0xd90>
    e94c:	mov	r2, #1
    e950:	mov	r3, #0
    e954:	mov	r5, r0
    e958:	strd	r2, [sp]
    e95c:	mov	r6, #8
    e960:	str	fp, [sp, #28]
    e964:	str	sl, [sp, #32]
    e968:	mov	r2, fp
    e96c:	b	e97c <sas7bdat_begin_data+0x7ac>
    e970:	ldr	r3, [sp, #20]
    e974:	ldr	r2, [sp, #28]
    e978:	ldr	r5, [r3, #16]
    e97c:	ldr	r3, [r9, #8]
    e980:	ldr	r2, [r2, #4]
    e984:	add	r3, r3, r6
    e988:	cmp	r2, #0
    e98c:	ldr	r8, [r3, #-8]
    e990:	moveq	fp, #32
    e994:	movne	fp, #36	; 0x24
    e998:	moveq	r3, #16
    e99c:	movne	r3, #20
    e9a0:	moveq	sl, #4
    e9a4:	movne	sl, #8
    e9a8:	cmp	r8, #0
    e9ac:	ldr	r2, [sp]
    e9b0:	ldrne	r7, [r8, #8]
    e9b4:	add	r2, r2, #2
    e9b8:	mov	r1, #20
    e9bc:	mov	r0, #1
    e9c0:	addne	r7, fp, r7
    e9c4:	moveq	r7, fp
    e9c8:	str	r2, [sp, #24]
    e9cc:	str	r3, [sp, #8]
    e9d0:	bl	3d58 <calloc@plt>
    e9d4:	mvn	r3, #2
    e9d8:	mov	r1, r7
    e9dc:	add	r5, r5, r6
    e9e0:	add	r6, r6, #4
    e9e4:	mov	r4, r0
    e9e8:	mov	r0, #1
    e9ec:	str	r3, [r4]
    e9f0:	str	r7, [r4, #8]
    e9f4:	bl	3d58 <calloc@plt>
    e9f8:	mov	r1, sl
    e9fc:	str	r0, [r4, #4]
    ea00:	mov	r0, r7
    ea04:	bl	43b8 <sas_subheader_remainder@plt>
    ea08:	ldr	r2, [r4, #4]
    ea0c:	ldr	r3, [sp, #8]
    ea10:	strh	r0, [r2, sl]
    ea14:	ldr	r2, [r4, #4]
    ea18:	ldr	r0, [pc, #1384]	; ef88 <sas7bdat_begin_data+0xdb8>
    ea1c:	add	r1, r2, r3
    ea20:	str	r0, [r2, r3]
    ea24:	str	r0, [r1, #4]
    ea28:	ldr	r0, [r4, #4]
    ea2c:	ldr	r2, [r8, #8]
    ea30:	add	r0, r0, fp
    ea34:	ldr	r1, [r8]
    ea38:	bl	3f20 <memcpy@plt>
    ea3c:	ldrd	sl, [sp]
    ea40:	ldrd	r2, [r9]
    ea44:	str	r4, [r5]
    ea48:	mov	r0, sl
    ea4c:	adds	sl, sl, #1
    ea50:	mov	r1, fp
    ea54:	adc	fp, fp, #0
    ea58:	cmp	r0, r2
    ea5c:	sbcs	r1, r1, r3
    ea60:	strd	sl, [sp]
    ea64:	blt	e970 <sas7bdat_begin_data+0x7a0>
    ea68:	cmp	r2, #1
    ea6c:	sbcs	r3, r3, #0
    ea70:	ldr	sl, [sp, #32]
    ea74:	blt	eac0 <sas7bdat_begin_data+0x8f0>
    ea78:	mov	r4, #1
    ea7c:	mov	r5, #0
    ea80:	mov	r6, #0
    ea84:	ldr	r3, [r9, #8]
    ea88:	ldr	r7, [r3, r6]
    ea8c:	add	r6, r6, #4
    ea90:	ldr	r0, [r7]
    ea94:	bl	3ec0 <free@plt>
    ea98:	mov	r0, r7
    ea9c:	bl	3ec0 <free@plt>
    eaa0:	ldrd	r2, [r9]
    eaa4:	mov	r0, r4
    eaa8:	adds	r4, r4, #1
    eaac:	mov	r1, r5
    eab0:	adc	r5, r5, #0
    eab4:	cmp	r0, r2
    eab8:	sbcs	r3, r1, r3
    eabc:	blt	ea84 <sas7bdat_begin_data+0x8b4>
    eac0:	ldr	r3, [sp, #24]
    eac4:	add	r4, r3, #2
    eac8:	lsl	r6, r3, #2
    eacc:	add	r7, r6, #4
    ead0:	ldr	r0, [r9, #8]
    ead4:	bl	3ec0 <free@plt>
    ead8:	mov	r0, r9
    eadc:	bl	3ec0 <free@plt>
    eae0:	ldr	r3, [sp, #20]
    eae4:	ldr	r0, [sl, #28]
    eae8:	ldr	r5, [r3, #16]
    eaec:	ldr	r3, [sp, #56]	; 0x38
    eaf0:	cmp	r0, #0
    eaf4:	str	r3, [r5, r6]
    eaf8:	ldr	r3, [sp, #60]	; 0x3c
    eafc:	str	r3, [r5, r7]
    eb00:	ble	eb20 <sas7bdat_begin_data+0x950>
    eb04:	ldr	r3, [sp, #52]	; 0x34
    eb08:	add	r2, r5, r4, lsl #2
    eb0c:	add	r0, r3, r0, lsl #2
    eb10:	ldr	r1, [r3], #4
    eb14:	cmp	r0, r3
    eb18:	str	r1, [r2], #4
    eb1c:	bne	eb10 <sas7bdat_begin_data+0x940>
    eb20:	ldr	r0, [sp, #52]	; 0x34
    eb24:	bl	3ec0 <free@plt>
    eb28:	ldr	r3, [sp, #20]
    eb2c:	ldr	fp, [sl, #16]
    eb30:	ldrd	r6, [r3]
    eb34:	cmp	fp, #1
    eb38:	strd	r6, [r3, #8]
    eb3c:	beq	ef34 <sas7bdat_begin_data+0xd64>
    eb40:	ldr	r3, [sp, #48]	; 0x30
    eb44:	ldr	r2, [sp, #20]
    eb48:	cmp	fp, #0
    eb4c:	str	r2, [r3, #4]
    eb50:	str	r3, [sl, #300]	; 0x12c
    eb54:	beq	ed90 <sas7bdat_begin_data+0xbc0>
    eb58:	mov	r3, #0
    eb5c:	str	r3, [sp]
    eb60:	ldr	r0, [sp]
    eb64:	add	sp, sp, #100	; 0x64
    eb68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    eb6c:	ldrd	r0, [sp]
    eb70:	add	r3, r3, #20
    eb74:	str	r6, [sp, #20]
    eb78:	adds	r0, r0, r3
    eb7c:	adc	r1, r1, #0
    eb80:	ldrd	r6, [sp, #8]
    eb84:	b	eb94 <sas7bdat_begin_data+0x9c4>
    eb88:	adds	r8, r8, r8
    eb8c:	adc	r9, r9, r9
    eb90:	strd	r8, [fp, #32]
    eb94:	sub	r4, r8, ip
    eb98:	cmp	r4, r5
    eb9c:	mov	r2, r4
    eba0:	mov	r3, #0
    eba4:	bcc	eb88 <sas7bdat_begin_data+0x9b8>
    eba8:	cmp	r4, r0
    ebac:	sbcs	lr, r3, r1
    ebb0:	blt	eb88 <sas7bdat_begin_data+0x9b8>
    ebb4:	cmp	r2, r6
    ebb8:	sbcs	r3, r3, r7
    ebbc:	bge	e340 <sas7bdat_begin_data+0x170>
    ebc0:	b	eb88 <sas7bdat_begin_data+0x9b8>
    ebc4:	cmp	r2, #0
    ebc8:	bne	eea0 <sas7bdat_begin_data+0xcd0>
    ebcc:	ldrd	r0, [sp]
    ebd0:	add	r3, r3, #20
    ebd4:	mov	lr, sl
    ebd8:	adds	r0, r0, r3
    ebdc:	ldrd	r2, [sp]
    ebe0:	adc	r1, r1, #0
    ebe4:	mov	sl, r6
    ebe8:	adds	r2, r2, r5
    ebec:	adc	r3, r3, #0
    ebf0:	mov	r4, r0
    ebf4:	mov	r5, r1
    ebf8:	str	lr, [sp, #20]
    ebfc:	b	ec0c <sas7bdat_begin_data+0xa3c>
    ec00:	adds	r8, r8, r8
    ec04:	adc	r9, r9, r9
    ec08:	strd	r8, [fp, #32]
    ec0c:	sub	lr, r8, ip
    ec10:	mov	r1, #0
    ec14:	cmp	lr, r2
    ec18:	sbcs	r6, r1, r3
    ec1c:	blt	ec00 <sas7bdat_begin_data+0xa30>
    ec20:	cmp	lr, r4
    ec24:	sbcs	r6, r1, r5
    ec28:	blt	ec00 <sas7bdat_begin_data+0xa30>
    ec2c:	ldrd	r6, [sp, #8]
    ec30:	cmp	lr, r6
    ec34:	sbcs	r1, r1, r7
    ec38:	bge	ef00 <sas7bdat_begin_data+0xd30>
    ec3c:	b	ec00 <sas7bdat_begin_data+0xa30>
    ec40:	mov	r3, #2
    ec44:	strb	r3, [r4, #6]
    ec48:	mov	r0, r7
    ec4c:	str	r2, [sp]
    ec50:	bl	42c8 <readstat_variable_get_storage_width@plt>
    ec54:	ldr	r2, [sp]
    ec58:	add	r5, r5, #1
    ec5c:	strh	r2, [r4, #4]
    ec60:	add	r6, r4, #8
    ec64:	str	r0, [r4]
    ec68:	ldrd	r2, [sp, #88]	; 0x58
    ec6c:	ldr	r7, [sl, #28]
    ec70:	adds	r8, r2, r0
    ec74:	adc	r9, r3, #0
    ec78:	cmp	r7, r5
    ec7c:	strd	r8, [sp, #88]	; 0x58
    ec80:	bgt	e578 <sas7bdat_begin_data+0x3a8>
    ec84:	b	e618 <sas7bdat_begin_data+0x448>
    ec88:	adds	r8, r8, r8
    ec8c:	adc	r9, r9, r9
    ec90:	strd	r8, [fp, #32]
    ec94:	b	e318 <sas7bdat_begin_data+0x148>
    ec98:	lsl	r7, r7, #3
    ec9c:	add	r7, r7, #20
    eca0:	mov	r4, #12
    eca4:	mov	r5, #4
    eca8:	b	e424 <sas7bdat_begin_data+0x254>
    ecac:	cmp	r7, #0
    ecb0:	mov	r8, #0
    ecb4:	ble	ef70 <sas7bdat_begin_data+0xda0>
    ecb8:	mov	r6, r8
    ecbc:	mov	r1, r6
    ecc0:	mov	r0, sl
    ecc4:	bl	437c <readstat_get_variable@plt>
    ecc8:	add	r6, r6, #1
    eccc:	mov	r7, r0
    ecd0:	bl	41d8 <readstat_variable_get_type@plt>
    ecd4:	mov	r5, r0
    ecd8:	mov	r0, r7
    ecdc:	bl	42c8 <readstat_variable_get_storage_width@plt>
    ece0:	ldr	r7, [sl, #28]
    ece4:	cmp	r5, #0
    ece8:	movne	r0, #8
    ecec:	cmp	r6, r7
    ecf0:	add	r8, r8, r0
    ecf4:	blt	ecbc <sas7bdat_begin_data+0xaec>
    ecf8:	ldr	ip, [r4, #4]
    ecfc:	mov	r3, #0
    ed00:	ldr	r2, [sl, #80]	; 0x50
    ed04:	str	r3, [sp, #68]	; 0x44
    ed08:	add	lr, sp, #64	; 0x40
    ed0c:	asr	r3, r2, #31
    ed10:	str	r8, [sp, #64]	; 0x40
    ed14:	strd	r2, [sp, #72]	; 0x48
    ed18:	ldm	lr!, {r0, r1}
    ed1c:	mov	r2, r7
    ed20:	asr	r3, r7, #31
    ed24:	ldrd	r6, [fp, #32]
    ed28:	add	lr, sp, #72	; 0x48
    ed2c:	strd	r2, [sp, #80]	; 0x50
    ed30:	strd	r6, [sp, #88]	; 0x58
    ed34:	str	r0, [ip, #40]	; 0x28
    ed38:	str	r1, [ip, #44]	; 0x2c
    ed3c:	ldr	ip, [r4, #4]
    ed40:	ldm	lr!, {r0, r1}
    ed44:	add	r3, sp, #80	; 0x50
    ed48:	add	r2, sp, #88	; 0x58
    ed4c:	str	r0, [ip, #48]	; 0x30
    ed50:	str	r1, [ip, #52]	; 0x34
    ed54:	ldr	ip, [r4, #4]
    ed58:	ldm	r3!, {r0, r1}
    ed5c:	mvn	r3, #0
    ed60:	str	r0, [ip, #72]	; 0x48
    ed64:	str	r1, [ip, #76]	; 0x4c
    ed68:	ldm	r2!, {r0, r1}
    ed6c:	ldr	ip, [r4, #4]
    ed70:	str	r0, [ip, #104]	; 0x68
    ed74:	str	r1, [ip, #108]	; 0x6c
    ed78:	ldr	r1, [r4, #4]
    ed7c:	str	r3, [r1, #128]	; 0x80
    ed80:	str	r3, [r1, #132]	; 0x84
    ed84:	str	r3, [r1, #136]	; 0x88
    ed88:	str	r3, [r1, #140]	; 0x8c
    ed8c:	b	e6f0 <sas7bdat_begin_data+0x520>
    ed90:	mov	r0, sl
    ed94:	bl	dc00 <sas7bdat_emit_header_and_meta_pages>
    ed98:	subs	r3, r0, #0
    ed9c:	str	r3, [sp]
    eda0:	beq	eb58 <sas7bdat_begin_data+0x988>
    eda4:	ldr	r7, [sl, #300]	; 0x12c
    eda8:	cmp	r7, #0
    edac:	beq	eb60 <sas7bdat_begin_data+0x990>
    edb0:	ldr	r0, [r7]
    edb4:	bl	3ec0 <free@plt>
    edb8:	ldr	r6, [r7, #4]
    edbc:	ldrd	r2, [r6]
    edc0:	ldr	r0, [r6, #16]
    edc4:	cmp	r2, #1
    edc8:	sbcs	r1, r3, #0
    edcc:	blt	ee24 <sas7bdat_begin_data+0xc54>
    edd0:	mov	r4, #1
    edd4:	mov	r5, #0
    edd8:	ldr	r8, [r0, fp]
    eddc:	add	fp, fp, #4
    ede0:	cmp	r8, #0
    ede4:	beq	ee08 <sas7bdat_begin_data+0xc38>
    ede8:	ldr	r3, [r8, #4]
    edec:	subs	r0, r3, #0
    edf0:	beq	edf8 <sas7bdat_begin_data+0xc28>
    edf4:	bl	3ec0 <free@plt>
    edf8:	mov	r0, r8
    edfc:	bl	3ec0 <free@plt>
    ee00:	ldrd	r2, [r6]
    ee04:	ldr	r0, [r6, #16]
    ee08:	mov	r8, r4
    ee0c:	adds	r4, r4, #1
    ee10:	mov	r9, r5
    ee14:	adc	r5, r5, #0
    ee18:	cmp	r8, r2
    ee1c:	sbcs	r1, r9, r3
    ee20:	blt	edd8 <sas7bdat_begin_data+0xc08>
    ee24:	bl	3ec0 <free@plt>
    ee28:	mov	r0, r6
    ee2c:	bl	3ec0 <free@plt>
    ee30:	mov	r0, r7
    ee34:	bl	3ec0 <free@plt>
    ee38:	mov	r3, #0
    ee3c:	ldr	r0, [sp]
    ee40:	str	r3, [sl, #300]	; 0x12c
    ee44:	add	sp, sp, #100	; 0x64
    ee48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ee4c:	mov	r2, r5
    ee50:	asr	r3, r5, #31
    ee54:	strd	r2, [sp, #88]	; 0x58
    ee58:	strd	r2, [r0, #8]
    ee5c:	b	e750 <sas7bdat_begin_data+0x580>
    ee60:	ldrd	r0, [sp]
    ee64:	add	r3, r3, #28
    ee68:	mov	lr, r6
    ee6c:	adds	r0, r0, r3
    ee70:	ldrd	r6, [sp, #8]
    ee74:	adc	r1, r1, #0
    ee78:	sub	r4, r8, ip
    ee7c:	mov	r3, #0
    ee80:	cmp	r4, r0
    ee84:	sbcs	r5, r3, r1
    ee88:	blt	ef14 <sas7bdat_begin_data+0xd44>
    ee8c:	cmp	r4, r6
    ee90:	sbcs	r3, r3, r7
    ee94:	blt	ef14 <sas7bdat_begin_data+0xd44>
    ee98:	mov	r6, lr
    ee9c:	b	e344 <sas7bdat_begin_data+0x174>
    eea0:	ldrd	r0, [sp]
    eea4:	add	r3, r3, #28
    eea8:	mov	lr, sl
    eeac:	adds	r0, r0, r3
    eeb0:	ldrd	r2, [sp]
    eeb4:	adc	r1, r1, #0
    eeb8:	mov	sl, r6
    eebc:	adds	r2, r2, r5
    eec0:	adc	r3, r3, #0
    eec4:	mov	r4, r0
    eec8:	mov	r5, r1
    eecc:	str	lr, [sp, #20]
    eed0:	sub	lr, r8, ip
    eed4:	mov	r1, #0
    eed8:	cmp	lr, r2
    eedc:	sbcs	r6, r1, r3
    eee0:	blt	ef24 <sas7bdat_begin_data+0xd54>
    eee4:	cmp	lr, r4
    eee8:	sbcs	r6, r1, r5
    eeec:	blt	ef24 <sas7bdat_begin_data+0xd54>
    eef0:	ldrd	r6, [sp, #8]
    eef4:	cmp	lr, r6
    eef8:	sbcs	r1, r1, r7
    eefc:	blt	ef24 <sas7bdat_begin_data+0xd54>
    ef00:	ldr	r3, [sp, #20]
    ef04:	mov	r6, sl
    ef08:	mov	r4, lr
    ef0c:	mov	sl, r3
    ef10:	b	e344 <sas7bdat_begin_data+0x174>
    ef14:	adds	r8, r8, r8
    ef18:	adc	r9, r9, r9
    ef1c:	strd	r8, [fp, #32]
    ef20:	b	ee78 <sas7bdat_begin_data+0xca8>
    ef24:	adds	r8, r8, r8
    ef28:	adc	r9, r9, r9
    ef2c:	strd	r8, [fp, #32]
    ef30:	b	eed0 <sas7bdat_begin_data+0xd00>
    ef34:	ldr	r1, [sl, #80]	; 0x50
    ef38:	mov	r4, r3
    ef3c:	adds	r2, r6, r1
    ef40:	adc	r3, r7, r1, asr #31
    ef44:	mov	r0, r5
    ef48:	lsl	r1, r2, #2
    ef4c:	strd	r2, [r4, #8]
    ef50:	bl	3ff8 <realloc@plt>
    ef54:	ldr	fp, [sl, #16]
    ef58:	str	r0, [r4, #16]
    ef5c:	b	eb40 <sas7bdat_begin_data+0x970>
    ef60:	mov	r7, #12
    ef64:	mov	r4, #4
    ef68:	mov	r6, #8
    ef6c:	b	ead0 <sas7bdat_begin_data+0x900>
    ef70:	mov	ip, r0
    ef74:	mov	r3, r8
    ef78:	b	ed00 <sas7bdat_begin_data+0xb30>
    ef7c:	.word	0xf7f7f7f7
    ef80:	.word	0xf6f6f6f6
    ef84:	.word	0xfffffbfe
    ef88:	.word	0x20202020

0000ef8c <readstat_begin_writing_sas7bdat>:
    ef8c:	push	{r4, r5, lr}
    ef90:	ldr	ip, [pc, #216]	; f070 <readstat_begin_writing_sas7bdat+0xe4>
    ef94:	ldr	lr, [pc, #216]	; f074 <readstat_begin_writing_sas7bdat+0xe8>
    ef98:	add	ip, pc, ip
    ef9c:	add	lr, pc, lr
    efa0:	str	lr, [r0, #292]	; 0x124
    efa4:	str	ip, [r0, #236]	; 0xec
    efa8:	ldr	r4, [pc, #200]	; f078 <readstat_begin_writing_sas7bdat+0xec>
    efac:	ldr	lr, [pc, #200]	; f07c <readstat_begin_writing_sas7bdat+0xf0>
    efb0:	ldr	ip, [pc, #200]	; f080 <readstat_begin_writing_sas7bdat+0xf4>
    efb4:	ldr	r3, [r0, #8]
    efb8:	add	r4, pc, r4
    efbc:	add	lr, pc, lr
    efc0:	add	ip, pc, ip
    efc4:	str	r4, [r0, #240]	; 0xf0
    efc8:	str	lr, [r0, #244]	; 0xf4
    efcc:	str	ip, [r0, #248]	; 0xf8
    efd0:	ldr	r4, [pc, #172]	; f084 <readstat_begin_writing_sas7bdat+0xf8>
    efd4:	ldr	lr, [pc, #172]	; f088 <readstat_begin_writing_sas7bdat+0xfc>
    efd8:	ldr	ip, [pc, #172]	; f08c <readstat_begin_writing_sas7bdat+0x100>
    efdc:	cmp	r3, #0
    efe0:	moveq	r3, #9
    efe4:	add	r4, pc, r4
    efe8:	add	lr, pc, lr
    efec:	add	ip, pc, ip
    eff0:	ldr	r5, [pc, #152]	; f090 <readstat_begin_writing_sas7bdat+0x104>
    eff4:	streq	r3, [r0, #8]
    eff8:	str	r4, [r0, #252]	; 0xfc
    effc:	ldr	r3, [pc, #144]	; f094 <readstat_begin_writing_sas7bdat+0x108>
    f000:	str	lr, [r0, #256]	; 0x100
    f004:	str	ip, [r0, #264]	; 0x108
    f008:	ldr	r4, [pc, #136]	; f098 <readstat_begin_writing_sas7bdat+0x10c>
    f00c:	ldr	lr, [pc, #136]	; f09c <readstat_begin_writing_sas7bdat+0x110>
    f010:	ldr	ip, [pc, #136]	; f0a0 <readstat_begin_writing_sas7bdat+0x114>
    f014:	add	r5, pc, r5
    f018:	add	r4, pc, r4
    f01c:	add	lr, pc, lr
    f020:	add	ip, pc, ip
    f024:	str	r4, [r0, #268]	; 0x10c
    f028:	str	lr, [r0, #272]	; 0x110
    f02c:	str	ip, [r0, #228]	; 0xe4
    f030:	ldr	r4, [pc, #108]	; f0a4 <readstat_begin_writing_sas7bdat+0x118>
    f034:	ldr	r5, [r5, r3]
    f038:	ldr	lr, [pc, #104]	; f0a8 <readstat_begin_writing_sas7bdat+0x11c>
    f03c:	ldr	ip, [pc, #104]	; f0ac <readstat_begin_writing_sas7bdat+0x120>
    f040:	ldr	r3, [pc, #104]	; f0b0 <readstat_begin_writing_sas7bdat+0x124>
    f044:	add	r4, pc, r4
    f048:	add	lr, pc, lr
    f04c:	add	ip, pc, ip
    f050:	add	r3, pc, r3
    f054:	str	r5, [r0, #232]	; 0xe8
    f058:	str	r4, [r0, #276]	; 0x114
    f05c:	str	lr, [r0, #284]	; 0x11c
    f060:	str	ip, [r0, #288]	; 0x120
    f064:	str	r3, [r0, #280]	; 0x118
    f068:	pop	{r4, r5, lr}
    f06c:	b	3f68 <readstat_begin_writing_file@plt>
    f070:	.word	0xffffe774
    f074:	.word	0xffffe63c
    f078:	.word	0xffffe724
    f07c:	.word	0xffffe6f0
    f080:	.word	0xffffe6c0
    f084:	.word	0xffffe630
    f088:	.word	0xffffe754
    f08c:	.word	0xffffe600
    f090:	.word	0x00035fe4
    f094:	.word	0x000002ec
    f098:	.word	0xffffe624
    f09c:	.word	0xffffe794
    f0a0:	.word	0xffffe5a8
    f0a4:	.word	0xfffff184
    f0a8:	.word	0xfffff164
    f0ac:	.word	0xffffe8b8
    f0b0:	.word	0xffffe94c

0000f0b4 <sas_rle_insert_run>:
    f0b4:	cmp	r0, #0
    f0b8:	push	{r4, lr}
    f0bc:	add	lr, r0, r1
    f0c0:	beq	f1d0 <sas_rle_insert_run+0x11c>
    f0c4:	sub	ip, r2, #32
    f0c8:	ands	r4, ip, #223	; 0xdf
    f0cc:	moveq	ip, #1
    f0d0:	movne	ip, #0
    f0d4:	cmp	r2, #0
    f0d8:	orreq	ip, ip, #1
    f0dc:	cmp	ip, #0
    f0e0:	bne	f114 <sas_rle_insert_run+0x60>
    f0e4:	cmp	r3, #18
    f0e8:	bls	f1a4 <sas_rle_insert_run+0xf0>
    f0ec:	sub	ip, r3, #18
    f0f0:	mov	r3, #3
    f0f4:	lsr	r4, ip, #8
    f0f8:	and	r4, r4, #15
    f0fc:	add	r4, r4, #64	; 0x40
    f100:	strb	r4, [r0, r1]
    f104:	strb	ip, [lr, #1]
    f108:	strb	r2, [lr, #2]
    f10c:	mov	r0, r3
    f110:	pop	{r4, pc}
    f114:	cmp	r3, #17
    f118:	bls	f16c <sas_rle_insert_run+0xb8>
    f11c:	sub	r3, r3, #17
    f120:	cmp	r2, #64	; 0x40
    f124:	lsr	ip, r3, #8
    f128:	and	ip, ip, #15
    f12c:	addeq	ip, ip, #80	; 0x50
    f130:	uxtb	r2, r3
    f134:	strbeq	ip, [r0, r1]
    f138:	addeq	r3, lr, #1
    f13c:	beq	f15c <sas_rle_insert_run+0xa8>
    f140:	cmp	r4, #0
    f144:	addeq	r3, lr, #1
    f148:	addne	r3, lr, #1
    f14c:	addeq	ip, ip, #96	; 0x60
    f150:	addne	ip, ip, #112	; 0x70
    f154:	strbeq	ip, [r0, r1]
    f158:	strbne	ip, [r0, r1]
    f15c:	strb	r2, [r3], #1
    f160:	sub	r3, r3, lr
    f164:	mov	r0, r3
    f168:	pop	{r4, pc}
    f16c:	cmp	r3, #1
    f170:	bls	f1c4 <sas_rle_insert_run+0x110>
    f174:	cmp	r2, #64	; 0x40
    f178:	subeq	r3, r3, #50	; 0x32
    f17c:	strbeq	r3, [r0, r1]
    f180:	moveq	r3, #1
    f184:	beq	f10c <sas_rle_insert_run+0x58>
    f188:	cmp	r4, #0
    f18c:	subeq	r3, r3, #34	; 0x22
    f190:	subne	r3, r3, #18
    f194:	strb	r3, [r0, r1]
    f198:	mov	r3, #1
    f19c:	mov	r0, r3
    f1a0:	pop	{r4, pc}
    f1a4:	cmp	r3, #2
    f1a8:	bls	f1c4 <sas_rle_insert_run+0x110>
    f1ac:	sub	r3, r3, #67	; 0x43
    f1b0:	strb	r3, [r0, r1]
    f1b4:	mov	r3, #2
    f1b8:	strb	r2, [lr, #1]
    f1bc:	mov	r0, r3
    f1c0:	pop	{r4, pc}
    f1c4:	mov	r3, #0
    f1c8:	mov	r0, r3
    f1cc:	pop	{r4, pc}
    f1d0:	and	r1, r2, #223	; 0xdf
    f1d4:	cmp	r1, #0
    f1d8:	cmpne	r2, #64	; 0x40
    f1dc:	beq	f1f0 <sas_rle_insert_run+0x13c>
    f1e0:	cmp	r3, #18
    f1e4:	movls	r3, #2
    f1e8:	movhi	r3, #3
    f1ec:	b	f10c <sas_rle_insert_run+0x58>
    f1f0:	cmp	r3, #17
    f1f4:	movls	r3, #1
    f1f8:	movhi	r3, #2
    f1fc:	mov	r0, r3
    f200:	pop	{r4, pc}

0000f204 <sas_rle_copy_run>:
    f204:	cmp	r0, #0
    f208:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f20c:	add	sl, r0, r1
    f210:	mov	fp, r3
    f214:	beq	f2e8 <sas_rle_copy_run+0xe4>
    f218:	ldr	r6, [pc, #260]	; f324 <sas_rle_copy_run+0x120>
    f21c:	mov	r5, r2
    f220:	cmp	r3, r6
    f224:	movls	r3, sl
    f228:	bls	f27c <sas_rle_copy_run+0x78>
    f22c:	ldr	r9, [pc, #244]	; f328 <sas_rle_copy_run+0x124>
    f230:	add	r4, sl, #2
    f234:	mov	r8, #15
    f238:	mvn	r7, #0
    f23c:	sub	fp, fp, #4096	; 0x1000
    f240:	strb	r8, [r4, #-2]
    f244:	strb	r7, [r4, #-1]
    f248:	mov	r1, r5
    f24c:	mov	r0, r4
    f250:	mov	r2, r9
    f254:	sub	fp, fp, #63	; 0x3f
    f258:	bl	3f20 <memcpy@plt>
    f25c:	add	r5, r5, #4096	; 0x1000
    f260:	add	r3, r4, #4096	; 0x1000
    f264:	cmp	fp, r6
    f268:	add	r4, r4, #4160	; 0x1040
    f26c:	add	r5, r5, #63	; 0x3f
    f270:	add	r3, r3, #63	; 0x3f
    f274:	add	r4, r4, #1
    f278:	bhi	f23c <sas_rle_copy_run+0x38>
    f27c:	cmp	fp, #64	; 0x40
    f280:	bls	f2b4 <sas_rle_copy_run+0xb0>
    f284:	sub	r2, fp, #64	; 0x40
    f288:	mov	r4, r3
    f28c:	lsr	r1, r2, #8
    f290:	strb	r1, [r4], #2
    f294:	strb	r2, [r3, #1]
    f298:	mov	r2, fp
    f29c:	mov	r1, r5
    f2a0:	mov	r0, r4
    f2a4:	add	fp, r4, fp
    f2a8:	bl	3f20 <memcpy@plt>
    f2ac:	sub	r0, fp, sl
    f2b0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f2b4:	cmp	fp, #48	; 0x30
    f2b8:	bhi	f2d8 <sas_rle_copy_run+0xd4>
    f2bc:	cmp	fp, #32
    f2c0:	bhi	f2d8 <sas_rle_copy_run+0xd4>
    f2c4:	cmp	fp, #16
    f2c8:	bhi	f2d8 <sas_rle_copy_run+0xd4>
    f2cc:	cmp	fp, #0
    f2d0:	moveq	r4, r3
    f2d4:	beq	f298 <sas_rle_copy_run+0x94>
    f2d8:	add	r2, fp, #127	; 0x7f
    f2dc:	strb	r2, [r3]
    f2e0:	add	r4, r3, #1
    f2e4:	b	f298 <sas_rle_copy_run+0x94>
    f2e8:	ldr	r3, [pc, #52]	; f324 <sas_rle_copy_run+0x120>
    f2ec:	cmp	fp, r3
    f2f0:	bls	f30c <sas_rle_copy_run+0x108>
    f2f4:	sub	fp, fp, #4096	; 0x1000
    f2f8:	sub	fp, fp, #63	; 0x3f
    f2fc:	add	r0, r0, #4160	; 0x1040
    f300:	cmp	fp, r3
    f304:	add	r0, r0, #1
    f308:	bhi	f2f4 <sas_rle_copy_run+0xf0>
    f30c:	add	r0, r0, fp
    f310:	cmp	fp, #64	; 0x40
    f314:	addhi	r0, r0, #1
    f318:	cmp	fp, #0
    f31c:	addne	r0, r0, #1
    f320:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f324:	.word	0x0000103e
    f328:	.word	0x0000103f

0000f32c <sas_rle_decompress>:
    f32c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f330:	mov	lr, #0
    f334:	ldr	fp, [pc, #472]	; f514 <sas_rle_decompress+0x1e8>
    f338:	add	r5, r2, r3
    f33c:	mov	r4, r2
    f340:	mov	r6, r0
    f344:	mov	r7, r1
    f348:	mov	sl, lr
    f34c:	add	fp, pc, fp
    f350:	mov	r9, #32
    f354:	cmp	r4, r5
    f358:	bcs	f3fc <sas_rle_decompress+0xd0>
    f35c:	ldrb	ip, [r4]
    f360:	add	r1, r4, #1
    f364:	and	r2, ip, #15
    f368:	lsr	ip, ip, #4
    f36c:	ldr	r3, [fp, ip, lsl #2]
    f370:	add	r3, r1, r3
    f374:	cmp	r5, r3
    f378:	bcc	f41c <sas_rle_decompress+0xf0>
    f37c:	cmp	ip, #15
    f380:	addls	pc, pc, ip, lsl #2
    f384:	b	f504 <sas_rle_decompress+0x1d8>
    f388:	b	f4f0 <sas_rle_decompress+0x1c4>
    f38c:	b	f504 <sas_rle_decompress+0x1d8>
    f390:	b	f504 <sas_rle_decompress+0x1d8>
    f394:	b	f504 <sas_rle_decompress+0x1d8>
    f398:	b	f4d8 <sas_rle_decompress+0x1ac>
    f39c:	b	f4c0 <sas_rle_decompress+0x194>
    f3a0:	b	f4a8 <sas_rle_decompress+0x17c>
    f3a4:	b	f490 <sas_rle_decompress+0x164>
    f3a8:	b	f488 <sas_rle_decompress+0x15c>
    f3ac:	b	f480 <sas_rle_decompress+0x154>
    f3b0:	b	f478 <sas_rle_decompress+0x14c>
    f3b4:	b	f444 <sas_rle_decompress+0x118>
    f3b8:	b	f434 <sas_rle_decompress+0x108>
    f3bc:	b	f424 <sas_rle_decompress+0xf8>
    f3c0:	b	f404 <sas_rle_decompress+0xd8>
    f3c4:	b	f3c8 <sas_rle_decompress+0x9c>
    f3c8:	mov	r4, r1
    f3cc:	add	r2, r2, #2
    f3d0:	mov	r1, sl
    f3d4:	add	r8, lr, r2
    f3d8:	cmp	r7, r8
    f3dc:	bcc	f41c <sas_rle_decompress+0xf0>
    f3e0:	cmp	r6, #0
    f3e4:	beq	f50c <sas_rle_decompress+0x1e0>
    f3e8:	add	r0, r6, lr
    f3ec:	bl	42a4 <memset@plt>
    f3f0:	cmp	r4, r5
    f3f4:	mov	lr, r8
    f3f8:	bcc	f35c <sas_rle_decompress+0x30>
    f3fc:	mov	r0, lr
    f400:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f404:	add	r2, r2, #2
    f408:	add	r8, lr, r2
    f40c:	cmp	r7, r8
    f410:	mov	r4, r1
    f414:	mov	r1, r9
    f418:	bcs	f3e0 <sas_rle_decompress+0xb4>
    f41c:	mvn	r0, #0
    f420:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f424:	mov	r4, r1
    f428:	add	r2, r2, #2
    f42c:	mov	r1, #64	; 0x40
    f430:	b	f3d4 <sas_rle_decompress+0xa8>
    f434:	ldrb	r1, [r4, #1]
    f438:	add	r2, r2, #3
    f43c:	add	r4, r4, #2
    f440:	b	f3d4 <sas_rle_decompress+0xa8>
    f444:	add	r2, r2, #49	; 0x31
    f448:	add	r8, lr, r2
    f44c:	cmp	r8, r7
    f450:	bhi	f41c <sas_rle_decompress+0xf0>
    f454:	add	r4, r1, r2
    f458:	cmp	r4, r5
    f45c:	bhi	f41c <sas_rle_decompress+0xf0>
    f460:	cmp	r6, #0
    f464:	beq	f50c <sas_rle_decompress+0x1e0>
    f468:	add	r0, r6, lr
    f46c:	bl	3f20 <memcpy@plt>
    f470:	mov	lr, r8
    f474:	b	f354 <sas_rle_decompress+0x28>
    f478:	add	r2, r2, #33	; 0x21
    f47c:	b	f448 <sas_rle_decompress+0x11c>
    f480:	add	r2, r2, #17
    f484:	b	f448 <sas_rle_decompress+0x11c>
    f488:	add	r2, r2, #1
    f48c:	b	f448 <sas_rle_decompress+0x11c>
    f490:	ldrb	r3, [r4, #1]
    f494:	mov	r1, sl
    f498:	add	r4, r4, #2
    f49c:	add	r3, r3, #17
    f4a0:	add	r2, r3, r2, lsl #8
    f4a4:	b	f3d4 <sas_rle_decompress+0xa8>
    f4a8:	ldrb	r3, [r4, #1]
    f4ac:	mov	r1, r9
    f4b0:	add	r4, r4, #2
    f4b4:	add	r3, r3, #17
    f4b8:	add	r2, r3, r2, lsl #8
    f4bc:	b	f3d4 <sas_rle_decompress+0xa8>
    f4c0:	ldrb	r3, [r4, #1]
    f4c4:	mov	r1, #64	; 0x40
    f4c8:	add	r4, r4, #2
    f4cc:	add	r3, r3, #17
    f4d0:	add	r2, r3, r2, lsl #8
    f4d4:	b	f3d4 <sas_rle_decompress+0xa8>
    f4d8:	ldrb	r3, [r4, #1]
    f4dc:	ldrb	r1, [r4, #2]
    f4e0:	add	r4, r4, #3
    f4e4:	add	r3, r3, #18
    f4e8:	add	r2, r3, r2, lsl #8
    f4ec:	b	f3d4 <sas_rle_decompress+0xa8>
    f4f0:	ldrb	r3, [r4, #1]
    f4f4:	add	r1, r4, #2
    f4f8:	add	r3, r3, #64	; 0x40
    f4fc:	add	r2, r3, r2, lsl #8
    f500:	b	f448 <sas_rle_decompress+0x11c>
    f504:	mov	r4, r1
    f508:	b	f354 <sas_rle_decompress+0x28>
    f50c:	mov	lr, r8
    f510:	b	f354 <sas_rle_decompress+0x28>
    f514:	.word	0x000170b0

0000f518 <sas_rle_decompressed_len>:
    f518:	mov	r3, r1
    f51c:	mov	r1, #0
    f520:	mov	r2, r0
    f524:	mov	r0, r1
    f528:	b	407c <sas_rle_decompress@plt>

0000f52c <sas_rle_compress>:
    f52c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f530:	add	r8, r2, r3
    f534:	cmp	r2, r8
    f538:	sub	sp, sp, #12
    f53c:	movcs	r9, #0
    f540:	str	r0, [sp, #4]
    f544:	movcs	r3, r9
    f548:	movcs	r7, r9
    f54c:	bcs	f634 <sas_rle_compress+0x108>
    f550:	mov	r4, r2
    f554:	mov	r9, #0
    f558:	ldrb	r6, [r4], #1
    f55c:	mov	r3, r9
    f560:	mov	r7, #1
    f564:	ldr	fp, [pc, #296]	; f694 <sas_rle_compress+0x168>
    f568:	b	f58c <sas_rle_compress+0x60>
    f56c:	cmp	r7, #2
    f570:	movls	r1, #0
    f574:	movhi	r1, #1
    f578:	cmp	r1, #0
    f57c:	addeq	r3, r3, r7
    f580:	moveq	r7, #1
    f584:	bne	f5d8 <sas_rle_compress+0xac>
    f588:	mov	r6, r5
    f58c:	cmp	r4, r8
    f590:	mov	sl, r4
    f594:	beq	f610 <sas_rle_compress+0xe4>
    f598:	ldrb	r5, [r4], #1
    f59c:	cmp	r7, fp
    f5a0:	cmpls	r5, r6
    f5a4:	addeq	r7, r7, #1
    f5a8:	beq	f588 <sas_rle_compress+0x5c>
    f5ac:	and	r1, r6, #223	; 0xdf
    f5b0:	cmp	r1, #0
    f5b4:	cmpne	r6, #64	; 0x40
    f5b8:	bne	f56c <sas_rle_compress+0x40>
    f5bc:	cmp	r7, #1
    f5c0:	movls	r1, #0
    f5c4:	movhi	r1, #1
    f5c8:	cmp	r1, #0
    f5cc:	addeq	r3, r3, r7
    f5d0:	moveq	r7, #1
    f5d4:	beq	f588 <sas_rle_compress+0x5c>
    f5d8:	mov	r1, r9
    f5dc:	ldr	r0, [sp, #4]
    f5e0:	bl	f204 <sas_rle_copy_run>
    f5e4:	mov	r3, r7
    f5e8:	mov	r2, r6
    f5ec:	mov	r7, #1
    f5f0:	add	r9, r9, r0
    f5f4:	mov	r1, r9
    f5f8:	ldr	r0, [sp, #4]
    f5fc:	bl	f0b4 <sas_rle_insert_run>
    f600:	mov	r2, sl
    f604:	mov	r3, #0
    f608:	add	r9, r9, r0
    f60c:	b	f588 <sas_rle_compress+0x5c>
    f610:	and	r1, r6, #223	; 0xdf
    f614:	cmp	r1, #0
    f618:	cmpne	r6, #64	; 0x40
    f61c:	beq	f650 <sas_rle_compress+0x124>
    f620:	cmp	r7, #2
    f624:	movls	r1, #0
    f628:	movhi	r1, #1
    f62c:	cmp	r1, #0
    f630:	bne	f664 <sas_rle_compress+0x138>
    f634:	add	r3, r3, r7
    f638:	ldr	r0, [sp, #4]
    f63c:	mov	r1, r9
    f640:	bl	f204 <sas_rle_copy_run>
    f644:	add	r0, r9, r0
    f648:	add	sp, sp, #12
    f64c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f650:	cmp	r7, #1
    f654:	movls	r1, #0
    f658:	movhi	r1, #1
    f65c:	cmp	r1, #0
    f660:	beq	f634 <sas_rle_compress+0x108>
    f664:	mov	r1, r9
    f668:	ldr	r0, [sp, #4]
    f66c:	bl	f204 <sas_rle_copy_run>
    f670:	mov	r3, r7
    f674:	mov	r2, r6
    f678:	add	r9, r9, r0
    f67c:	mov	r1, r9
    f680:	ldr	r0, [sp, #4]
    f684:	bl	f0b4 <sas_rle_insert_run>
    f688:	add	r0, r9, r0
    f68c:	add	sp, sp, #12
    f690:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f694:	.word	0x0000100f

0000f698 <sas_rle_compressed_len>:
    f698:	mov	r3, r1
    f69c:	mov	r1, #0
    f6a0:	mov	r2, r0
    f6a4:	mov	r0, r1
    f6a8:	b	44d8 <sas_rle_compress@plt>

0000f6ac <xport_namestr_bswap>:
    f6ac:	push	{r4, lr}
    f6b0:	mov	r4, r0
    f6b4:	bl	3eb4 <machine_is_little_endian@plt>
    f6b8:	cmp	r0, #0
    f6bc:	popeq	{r4, pc}
    f6c0:	ldrb	r0, [r4, #1]
    f6c4:	ldrb	r3, [r4]
    f6c8:	orr	r0, r3, r0, lsl #8
    f6cc:	bl	3ea8 <byteswap2@plt>
    f6d0:	ldrb	r2, [r4, #3]
    f6d4:	ldrb	r3, [r4, #2]
    f6d8:	lsr	r1, r0, #8
    f6dc:	strb	r0, [r4]
    f6e0:	strb	r1, [r4, #1]
    f6e4:	orr	r0, r3, r2, lsl #8
    f6e8:	bl	3ea8 <byteswap2@plt>
    f6ec:	ldrb	r2, [r4, #5]
    f6f0:	ldrb	r3, [r4, #4]
    f6f4:	lsr	r1, r0, #8
    f6f8:	strb	r0, [r4, #2]
    f6fc:	strb	r1, [r4, #3]
    f700:	orr	r0, r3, r2, lsl #8
    f704:	bl	3ea8 <byteswap2@plt>
    f708:	ldrb	r2, [r4, #7]
    f70c:	ldrb	r3, [r4, #6]
    f710:	lsr	r1, r0, #8
    f714:	strb	r0, [r4, #4]
    f718:	strb	r1, [r4, #5]
    f71c:	orr	r0, r3, r2, lsl #8
    f720:	bl	3ea8 <byteswap2@plt>
    f724:	ldrb	r2, [r4, #65]	; 0x41
    f728:	ldrb	r3, [r4, #64]	; 0x40
    f72c:	lsr	r1, r0, #8
    f730:	strb	r0, [r4, #6]
    f734:	strb	r1, [r4, #7]
    f738:	orr	r0, r3, r2, lsl #8
    f73c:	bl	3ea8 <byteswap2@plt>
    f740:	ldrb	r2, [r4, #67]	; 0x43
    f744:	ldrb	r3, [r4, #66]	; 0x42
    f748:	lsr	r1, r0, #8
    f74c:	strb	r0, [r4, #64]	; 0x40
    f750:	strb	r1, [r4, #65]	; 0x41
    f754:	orr	r0, r3, r2, lsl #8
    f758:	bl	3ea8 <byteswap2@plt>
    f75c:	ldrb	r2, [r4, #69]	; 0x45
    f760:	ldrb	r3, [r4, #68]	; 0x44
    f764:	lsr	r1, r0, #8
    f768:	strb	r0, [r4, #66]	; 0x42
    f76c:	strb	r1, [r4, #67]	; 0x43
    f770:	orr	r0, r3, r2, lsl #8
    f774:	bl	3ea8 <byteswap2@plt>
    f778:	ldrb	r2, [r4, #81]	; 0x51
    f77c:	ldrb	r3, [r4, #80]	; 0x50
    f780:	lsr	r1, r0, #8
    f784:	strb	r0, [r4, #68]	; 0x44
    f788:	strb	r1, [r4, #69]	; 0x45
    f78c:	orr	r0, r3, r2, lsl #8
    f790:	bl	3ea8 <byteswap2@plt>
    f794:	ldrb	r2, [r4, #83]	; 0x53
    f798:	ldrb	r3, [r4, #82]	; 0x52
    f79c:	lsr	r1, r0, #8
    f7a0:	strb	r0, [r4, #80]	; 0x50
    f7a4:	strb	r1, [r4, #81]	; 0x51
    f7a8:	orr	r0, r3, r2, lsl #8
    f7ac:	bl	3ea8 <byteswap2@plt>
    f7b0:	ldrb	r1, [r4, #85]	; 0x55
    f7b4:	ldrb	ip, [r4, #86]	; 0x56
    f7b8:	ldrb	r3, [r4, #84]	; 0x54
    f7bc:	ldrb	r2, [r4, #87]	; 0x57
    f7c0:	orr	r3, r3, r1, lsl #8
    f7c4:	orr	r3, r3, ip, lsl #16
    f7c8:	lsr	r1, r0, #8
    f7cc:	strb	r0, [r4, #82]	; 0x52
    f7d0:	strb	r1, [r4, #83]	; 0x53
    f7d4:	orr	r0, r3, r2, lsl #24
    f7d8:	bl	3d94 <byteswap4@plt>
    f7dc:	ldrb	r2, [r4, #121]	; 0x79
    f7e0:	ldrb	r3, [r4, #120]	; 0x78
    f7e4:	lsr	lr, r0, #8
    f7e8:	lsr	ip, r0, #16
    f7ec:	lsr	r1, r0, #24
    f7f0:	strb	r0, [r4, #84]	; 0x54
    f7f4:	strb	lr, [r4, #85]	; 0x55
    f7f8:	strb	ip, [r4, #86]	; 0x56
    f7fc:	strb	r1, [r4, #87]	; 0x57
    f800:	orr	r0, r3, r2, lsl #8
    f804:	bl	3ea8 <byteswap2@plt>
    f808:	strb	r0, [r4, #120]	; 0x78
    f80c:	lsr	r0, r0, #8
    f810:	strb	r0, [r4, #121]	; 0x79
    f814:	pop	{r4, pc}

0000f818 <xport_read_header_record>:
    f818:	ldr	r3, [r0, #52]	; 0x34
    f81c:	push	{r4, r5, r6, lr}
    f820:	sub	sp, sp, #112	; 0x70
    f824:	add	r5, sp, #28
    f828:	mov	r4, r1
    f82c:	ldr	r6, [r3, #12]
    f830:	ldr	r2, [r3, #20]
    f834:	mov	r0, r5
    f838:	mov	r1, #80	; 0x50
    f83c:	blx	r6
    f840:	cmp	r0, #79	; 0x4f
    f844:	movle	r0, #2
    f848:	ble	f8b0 <xport_read_header_record+0x98>
    f84c:	mov	r3, #0
    f850:	mov	r1, r3
    f854:	mov	r2, #36	; 0x24
    f858:	mov	r0, r4
    f85c:	strb	r3, [sp, #108]	; 0x6c
    f860:	bl	42a4 <memset@plt>
    f864:	add	r1, r4, #24
    f868:	str	r1, [sp, #8]
    f86c:	ldr	r1, [pc, #68]	; f8b8 <xport_read_header_record+0xa0>
    f870:	add	lr, r4, #32
    f874:	add	ip, r4, #28
    f878:	add	r2, r4, #20
    f87c:	add	r3, r4, #16
    f880:	str	r2, [sp, #4]
    f884:	str	r3, [sp]
    f888:	mov	r0, r5
    f88c:	str	lr, [sp, #16]
    f890:	str	ip, [sp, #12]
    f894:	add	r3, r4, #12
    f898:	mov	r2, r4
    f89c:	add	r1, pc, r1
    f8a0:	bl	428c <__isoc99_sscanf@plt>
    f8a4:	cmp	r0, #1
    f8a8:	movle	r0, #5
    f8ac:	movgt	r0, #0
    f8b0:	add	sp, sp, #112	; 0x70
    f8b4:	pop	{r4, r5, r6, pc}
    f8b8:	.word	0x00016ba0

0000f8bc <xport_expect_header_record>:
    f8bc:	ldr	r3, [r0, #52]	; 0x34
    f8c0:	push	{r4, r5, r6, r7, r8, r9, lr}
    f8c4:	sub	sp, sp, #148	; 0x94
    f8c8:	add	r6, sp, #60	; 0x3c
    f8cc:	mov	r5, r0
    f8d0:	mov	r8, r1
    f8d4:	mov	r7, r2
    f8d8:	ldr	r4, [r3, #12]
    f8dc:	ldr	r2, [r3, #20]
    f8e0:	mov	r0, r6
    f8e4:	mov	r1, #80	; 0x50
    f8e8:	blx	r4
    f8ec:	cmp	r0, #79	; 0x4f
    f8f0:	movle	r0, #2
    f8f4:	ble	f974 <xport_expect_header_record+0xb8>
    f8f8:	mov	r4, #0
    f8fc:	add	r9, sp, #24
    f900:	mov	r1, r4
    f904:	mov	r2, #36	; 0x24
    f908:	mov	r0, r9
    f90c:	strb	r4, [sp, #140]	; 0x8c
    f910:	bl	42a4 <memset@plt>
    f914:	add	r3, sp, #56	; 0x38
    f918:	str	r3, [sp, #16]
    f91c:	add	r3, sp, #52	; 0x34
    f920:	str	r3, [sp, #12]
    f924:	add	r3, sp, #48	; 0x30
    f928:	str	r3, [sp, #8]
    f92c:	ldr	r1, [pc, #124]	; f9b0 <xport_expect_header_record+0xf4>
    f930:	add	r3, sp, #44	; 0x2c
    f934:	str	r3, [sp, #4]
    f938:	add	r3, sp, #40	; 0x28
    f93c:	str	r3, [sp]
    f940:	mov	r0, r6
    f944:	mov	r2, r9
    f948:	add	r3, sp, #36	; 0x24
    f94c:	add	r1, pc, r1
    f950:	bl	428c <__isoc99_sscanf@plt>
    f954:	cmp	r0, #1
    f958:	ble	f97c <xport_expect_header_record+0xc0>
    f95c:	ldr	r3, [r5, #380]	; 0x17c
    f960:	cmp	r3, #5
    f964:	beq	f9a8 <xport_expect_header_record+0xec>
    f968:	cmp	r3, #8
    f96c:	movne	r0, r4
    f970:	beq	f988 <xport_expect_header_record+0xcc>
    f974:	add	sp, sp, #148	; 0x94
    f978:	pop	{r4, r5, r6, r7, r8, r9, pc}
    f97c:	mov	r0, #5
    f980:	add	sp, sp, #148	; 0x94
    f984:	pop	{r4, r5, r6, r7, r8, r9, pc}
    f988:	mov	r1, r7
    f98c:	mov	r0, r9
    f990:	bl	3e00 <strcmp@plt>
    f994:	cmp	r0, #0
    f998:	movne	r0, #5
    f99c:	moveq	r0, #0
    f9a0:	add	sp, sp, #148	; 0x94
    f9a4:	pop	{r4, r5, r6, r7, r8, r9, pc}
    f9a8:	mov	r1, r8
    f9ac:	b	f98c <xport_expect_header_record+0xd0>
    f9b0:	.word	0x00016af0

0000f9b4 <readstat_parse_xport>:
    f9b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f9b8:	mov	r5, r0
    f9bc:	add	fp, sp, #32
    f9c0:	mov	r6, r1
    f9c4:	sub	sp, sp, #260	; 0x104
    f9c8:	mov	r1, #384	; 0x180
    f9cc:	mov	r0, #1
    f9d0:	ldr	sl, [r5, #32]
    f9d4:	mov	r7, r2
    f9d8:	bl	3d58 <calloc@plt>
    f9dc:	mov	r8, r5
    f9e0:	ldr	lr, [r5, #48]	; 0x30
    f9e4:	ldr	r9, [r5, #36]	; 0x24
    f9e8:	cmp	lr, #0
    f9ec:	mov	r4, r0
    f9f0:	mov	ip, r0
    f9f4:	ldm	r8!, {r0, r1, r2, r3}
    f9f8:	stmia	ip!, {r0, r1, r2, r3}
    f9fc:	ldm	r8, {r0, r1, r2, r3}
    fa00:	ldr	r8, [r5, #40]	; 0x28
    fa04:	ldr	r5, [r5, #44]	; 0x2c
    fa08:	stm	ip, {r0, r1, r2, r3}
    fa0c:	mov	r0, r6
    fa10:	ldr	r3, [pc, #3568]	; 10808 <readstat_parse_xport+0xe54>
    fa14:	str	r9, [r4, #40]	; 0x28
    fa18:	add	r3, pc, r3
    fa1c:	str	r3, [fp, #-232]	; 0xffffff18
    fa20:	strgt	lr, [r4, #72]	; 0x48
    fa24:	str	r7, [r4, #36]	; 0x24
    fa28:	str	sl, [r4, #52]	; 0x34
    fa2c:	str	r8, [r4, #44]	; 0x2c
    fa30:	str	r5, [r4, #68]	; 0x44
    fa34:	ldr	r1, [sl, #20]
    fa38:	ldr	r3, [sl]
    fa3c:	blx	r3
    fa40:	cmn	r0, #1
    fa44:	moveq	r9, #1
    fa48:	beq	fa70 <readstat_parse_xport+0xbc>
    fa4c:	ldr	r3, [sl, #8]
    fa50:	ldr	r2, [sl, #20]
    fa54:	mov	r1, #2
    fa58:	mov	r0, #0
    fa5c:	blx	r3
    fa60:	cmn	r0, #1
    fa64:	str	r0, [r4, #32]
    fa68:	bne	fae8 <readstat_parse_xport+0x134>
    fa6c:	mov	r9, #15
    fa70:	ldr	r3, [sl, #4]
    fa74:	ldr	r0, [sl, #20]
    fa78:	blx	r3
    fa7c:	ldr	r2, [r4, #376]	; 0x178
    fa80:	cmp	r2, #0
    fa84:	beq	fac4 <readstat_parse_xport+0x110>
    fa88:	ldr	r1, [r4, #64]	; 0x40
    fa8c:	cmp	r1, #0
    fa90:	ble	fabc <readstat_parse_xport+0x108>
    fa94:	mov	r5, #0
    fa98:	ldr	r3, [r2, r5, lsl #2]
    fa9c:	add	r5, r5, #1
    faa0:	subs	r0, r3, #0
    faa4:	beq	fab4 <readstat_parse_xport+0x100>
    faa8:	bl	3ec0 <free@plt>
    faac:	ldr	r1, [r4, #64]	; 0x40
    fab0:	ldr	r2, [r4, #376]	; 0x178
    fab4:	cmp	r5, r1
    fab8:	blt	fa98 <readstat_parse_xport+0xe4>
    fabc:	mov	r0, r2
    fac0:	bl	3ec0 <free@plt>
    fac4:	ldr	r0, [r4, #48]	; 0x30
    fac8:	cmp	r0, #0
    facc:	beq	fad4 <readstat_parse_xport+0x120>
    fad0:	bl	3dd0 <iconv_close@plt>
    fad4:	mov	r0, r4
    fad8:	bl	3ec0 <free@plt>
    fadc:	mov	r0, r9
    fae0:	sub	sp, fp, #32
    fae4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fae8:	mov	r1, #0
    faec:	mov	r0, r1
    faf0:	ldr	r3, [sl, #8]
    faf4:	ldr	r2, [sl, #20]
    faf8:	blx	r3
    fafc:	cmn	r0, #1
    fb00:	beq	fa6c <readstat_parse_xport+0xb8>
    fb04:	ldr	r6, [r4, #40]	; 0x28
    fb08:	cmp	r6, #0
    fb0c:	beq	fb30 <readstat_parse_xport+0x17c>
    fb10:	ldr	r7, [r4, #44]	; 0x2c
    fb14:	cmp	r7, #0
    fb18:	beq	fb30 <readstat_parse_xport+0x17c>
    fb1c:	mov	r1, r7
    fb20:	mov	r0, r6
    fb24:	bl	3e00 <strcmp@plt>
    fb28:	cmp	r0, #0
    fb2c:	bne	10028 <readstat_parse_xport+0x674>
    fb30:	ldr	r3, [r4, #52]	; 0x34
    fb34:	sub	r7, fp, #180	; 0xb4
    fb38:	mov	r0, r7
    fb3c:	ldr	r6, [r3, #12]
    fb40:	ldr	r2, [r3, #20]
    fb44:	mov	r1, #80	; 0x50
    fb48:	blx	r6
    fb4c:	cmp	r0, #79	; 0x4f
    fb50:	ble	fd3c <readstat_parse_xport+0x388>
    fb54:	mov	r3, #0
    fb58:	sub	r8, fp, #224	; 0xe0
    fb5c:	mov	r1, r3
    fb60:	mov	r2, #36	; 0x24
    fb64:	mov	r0, r8
    fb68:	strb	r3, [fp, #-100]	; 0xffffff9c
    fb6c:	bl	42a4 <memset@plt>
    fb70:	sub	r1, fp, #192	; 0xc0
    fb74:	str	r1, [sp, #16]
    fb78:	sub	r1, fp, #196	; 0xc4
    fb7c:	str	r1, [sp, #12]
    fb80:	sub	r1, fp, #200	; 0xc8
    fb84:	str	r1, [sp, #8]
    fb88:	sub	r1, fp, #208	; 0xd0
    fb8c:	str	r1, [sp]
    fb90:	ldr	r1, [pc, #3188]	; 1080c <readstat_parse_xport+0xe58>
    fb94:	sub	r9, fp, #212	; 0xd4
    fb98:	sub	r5, fp, #204	; 0xcc
    fb9c:	mov	r2, r8
    fba0:	mov	r3, r9
    fba4:	str	r5, [sp, #4]
    fba8:	add	r1, pc, r1
    fbac:	mov	r0, r7
    fbb0:	bl	428c <__isoc99_sscanf@plt>
    fbb4:	cmp	r0, #1
    fbb8:	ble	10020 <readstat_parse_xport+0x66c>
    fbbc:	ldr	r1, [pc, #3148]	; 10810 <readstat_parse_xport+0xe5c>
    fbc0:	mov	r0, r8
    fbc4:	add	r1, pc, r1
    fbc8:	bl	3e00 <strcmp@plt>
    fbcc:	cmp	r0, #0
    fbd0:	beq	fd44 <readstat_parse_xport+0x390>
    fbd4:	ldr	r1, [pc, #3128]	; 10814 <readstat_parse_xport+0xe60>
    fbd8:	mov	r0, r8
    fbdc:	add	r1, pc, r1
    fbe0:	bl	3e00 <strcmp@plt>
    fbe4:	cmp	r0, #0
    fbe8:	moveq	r3, #8
    fbec:	streq	r3, [r4, #380]	; 0x17c
    fbf0:	beq	fd4c <readstat_parse_xport+0x398>
    fbf4:	mov	r9, #24
    fbf8:	b	fa70 <readstat_parse_xport+0xbc>
    fbfc:	ldr	r3, [r4, #64]	; 0x40
    fc00:	cmp	r3, #0
    fc04:	ble	1014c <readstat_parse_xport+0x798>
    fc08:	add	r3, r7, #88	; 0x58
    fc0c:	str	r3, [fp, #-232]	; 0xffffff18
    fc10:	add	r3, r7, #8
    fc14:	mov	r6, #0
    fc18:	str	r3, [fp, #-236]	; 0xffffff14
    fc1c:	b	fd18 <readstat_parse_xport+0x364>
    fc20:	bl	4094 <xport_namestr_bswap@plt>
    fc24:	ldr	r1, [pc, #3052]	; 10818 <readstat_parse_xport+0xe64>
    fc28:	mov	r0, #1
    fc2c:	bl	3d58 <calloc@plt>
    fc30:	ldrh	lr, [fp, #-180]	; 0xffffff4c
    fc34:	ldrh	r9, [fp, #-176]	; 0xffffff50
    fc38:	ldrh	ip, [fp, #-112]	; 0xffffff90
    fc3c:	cmp	lr, #2
    fc40:	movne	lr, #5
    fc44:	moveq	lr, #0
    fc48:	cmp	ip, #0
    fc4c:	moveq	ip, #1
    fc50:	movne	ip, #3
    fc54:	ldr	r2, [fp, #-232]	; 0xffffff18
    fc58:	mov	r3, #32
    fc5c:	mov	r1, #300	; 0x12c
    fc60:	mov	r5, r0
    fc64:	add	r0, r0, #8
    fc68:	str	r9, [r5, #1596]	; 0x63c
    fc6c:	str	r6, [r5, #4]
    fc70:	str	lr, [r5]
    fc74:	ldrh	lr, [fp, #-116]	; 0xffffff8c
    fc78:	str	ip, [r5, #2132]	; 0x854
    fc7c:	str	lr, [r5, #2136]	; 0x858
    fc80:	ldr	lr, [r4, #380]	; 0x17c
    fc84:	ldrh	ip, [fp, #-114]	; 0xffffff8e
    fc88:	cmp	lr, #5
    fc8c:	moveq	r3, #8
    fc90:	ldreq	r2, [r4, #48]	; 0x30
    fc94:	str	ip, [r5, #2140]	; 0x85c
    fc98:	ldrne	ip, [r4, #48]	; 0x30
    fc9c:	streq	r2, [sp]
    fca0:	strne	ip, [sp]
    fca4:	ldreq	r2, [fp, #-236]	; 0xffffff14
    fca8:	bl	4238 <readstat_convert@plt>
    fcac:	mov	r3, #40	; 0x28
    fcb0:	sub	r2, fp, #164	; 0xa4
    fcb4:	mov	r1, #1024	; 0x400
    fcb8:	mov	r9, r0
    fcbc:	cmp	r9, #0
    fcc0:	add	r0, r5, #564	; 0x234
    fcc4:	bne	fa70 <readstat_parse_xport+0xbc>
    fcc8:	ldr	ip, [r4, #48]	; 0x30
    fccc:	str	ip, [sp]
    fcd0:	bl	4238 <readstat_convert@plt>
    fcd4:	mov	r2, #8
    fcd8:	sub	r1, fp, #124	; 0x7c
    fcdc:	subs	r9, r0, #0
    fce0:	add	r0, r5, #308	; 0x134
    fce4:	bne	fa70 <readstat_parse_xport+0xbc>
    fce8:	ldr	ip, [r5, #2140]	; 0x85c
    fcec:	ldr	r3, [r5, #2136]	; 0x858
    fcf0:	str	ip, [sp]
    fcf4:	bl	4e68 <xport_construct_format.constprop.4>
    fcf8:	subs	r9, r0, #0
    fcfc:	bne	fa70 <readstat_parse_xport+0xbc>
    fd00:	ldr	r2, [r4, #376]	; 0x178
    fd04:	ldr	r3, [r4, #64]	; 0x40
    fd08:	str	r5, [r2, r6, lsl #2]
    fd0c:	add	r6, r6, #1
    fd10:	cmp	r6, r3
    fd14:	bge	1014c <readstat_parse_xport+0x798>
    fd18:	ldr	r3, [r4, #52]	; 0x34
    fd1c:	mov	r1, #140	; 0x8c
    fd20:	mov	r0, r7
    fd24:	ldr	r5, [r3, #12]
    fd28:	ldr	r2, [r3, #20]
    fd2c:	blx	r5
    fd30:	cmp	r0, #139	; 0x8b
    fd34:	mov	r0, r7
    fd38:	bhi	fc20 <readstat_parse_xport+0x26c>
    fd3c:	mov	r9, #2
    fd40:	b	fa70 <readstat_parse_xport+0xbc>
    fd44:	mov	r3, #5
    fd48:	str	r3, [r4, #380]	; 0x17c
    fd4c:	ldr	r2, [r4, #52]	; 0x34
    fd50:	mov	r1, #1
    fd54:	mov	r0, #80	; 0x50
    fd58:	ldr	r3, [r2, #8]
    fd5c:	ldr	r2, [r2, #20]
    fd60:	blx	r3
    fd64:	cmn	r0, #1
    fd68:	beq	fa6c <readstat_parse_xport+0xb8>
    fd6c:	mov	r2, #44	; 0x2c
    fd70:	mov	r1, #0
    fd74:	mov	r0, r8
    fd78:	bl	42a4 <memset@plt>
    fd7c:	ldr	r2, [r4, #52]	; 0x34
    fd80:	mvn	r3, #0
    fd84:	str	r3, [fp, #-192]	; 0xffffff40
    fd88:	mov	r1, #80	; 0x50
    fd8c:	ldr	r3, [r2, #12]
    fd90:	mov	r0, r7
    fd94:	ldr	r2, [r2, #20]
    fd98:	blx	r3
    fd9c:	cmp	r0, #79	; 0x4f
    fda0:	ble	fd3c <readstat_parse_xport+0x388>
    fda4:	mov	r3, #0
    fda8:	sub	r1, fp, #220	; 0xdc
    fdac:	strb	r3, [fp, #-100]	; 0xffffff9c
    fdb0:	str	r1, [sp, #8]
    fdb4:	sub	r1, fp, #216	; 0xd8
    fdb8:	str	r1, [sp, #4]
    fdbc:	ldr	r1, [pc, #2648]	; 1081c <readstat_parse_xport+0xe68>
    fdc0:	sub	r6, fp, #228	; 0xe4
    fdc4:	mov	r2, r9
    fdc8:	str	r5, [sp]
    fdcc:	mov	r3, r6
    fdd0:	add	r1, pc, r1
    fdd4:	str	r8, [sp, #12]
    fdd8:	mov	r0, r7
    fddc:	bl	428c <__isoc99_sscanf@plt>
    fde0:	ldr	r3, [pc, #2616]	; 10820 <readstat_parse_xport+0xe6c>
    fde4:	ldr	r2, [fp, #-232]	; 0xffffff18
    fde8:	mov	r0, r6
    fdec:	ldr	r5, [r2, r3]
    fdf0:	mov	r1, r5
    fdf4:	bl	3e00 <strcmp@plt>
    fdf8:	cmp	r0, #0
    fdfc:	beq	1004c <readstat_parse_xport+0x698>
    fe00:	add	r1, r5, #4
    fe04:	mov	r0, r6
    fe08:	bl	3e00 <strcmp@plt>
    fe0c:	cmp	r0, #0
    fe10:	beq	10144 <readstat_parse_xport+0x790>
    fe14:	add	r1, r5, #8
    fe18:	mov	r0, r6
    fe1c:	bl	3e00 <strcmp@plt>
    fe20:	cmp	r0, #0
    fe24:	beq	1013c <readstat_parse_xport+0x788>
    fe28:	add	r1, r5, #12
    fe2c:	mov	r0, r6
    fe30:	bl	3e00 <strcmp@plt>
    fe34:	cmp	r0, #0
    fe38:	beq	10134 <readstat_parse_xport+0x780>
    fe3c:	add	r1, r5, #16
    fe40:	mov	r0, r6
    fe44:	bl	3e00 <strcmp@plt>
    fe48:	cmp	r0, #0
    fe4c:	beq	1012c <readstat_parse_xport+0x778>
    fe50:	add	r1, r5, #20
    fe54:	mov	r0, r6
    fe58:	bl	3e00 <strcmp@plt>
    fe5c:	cmp	r0, #0
    fe60:	beq	10124 <readstat_parse_xport+0x770>
    fe64:	add	r1, r5, #24
    fe68:	mov	r0, r6
    fe6c:	bl	3e00 <strcmp@plt>
    fe70:	cmp	r0, #0
    fe74:	beq	1011c <readstat_parse_xport+0x768>
    fe78:	add	r1, r5, #28
    fe7c:	mov	r0, r6
    fe80:	bl	3e00 <strcmp@plt>
    fe84:	cmp	r0, #0
    fe88:	beq	10114 <readstat_parse_xport+0x760>
    fe8c:	add	r1, r5, #32
    fe90:	mov	r0, r6
    fe94:	bl	3e00 <strcmp@plt>
    fe98:	cmp	r0, #0
    fe9c:	beq	1010c <readstat_parse_xport+0x758>
    fea0:	add	r1, r5, #36	; 0x24
    fea4:	mov	r0, r6
    fea8:	bl	3e00 <strcmp@plt>
    feac:	cmp	r0, #0
    feb0:	beq	10104 <readstat_parse_xport+0x750>
    feb4:	add	r1, r5, #40	; 0x28
    feb8:	mov	r0, r6
    febc:	bl	3e00 <strcmp@plt>
    fec0:	cmp	r0, #0
    fec4:	beq	10048 <readstat_parse_xport+0x694>
    fec8:	add	r1, r5, #44	; 0x2c
    fecc:	mov	r0, r6
    fed0:	bl	3e00 <strcmp@plt>
    fed4:	cmp	r0, #0
    fed8:	moveq	r0, #11
    fedc:	beq	1004c <readstat_parse_xport+0x698>
    fee0:	ldr	r3, [fp, #-204]	; 0xffffff34
    fee4:	mov	r0, r8
    fee8:	cmp	r3, #59	; 0x3b
    feec:	addle	r3, r3, #100	; 0x64
    fef0:	strle	r3, [fp, #-204]	; 0xffffff34
    fef4:	bl	3e54 <mktime@plt>
    fef8:	ldr	r2, [pc, #2340]	; 10824 <readstat_parse_xport+0xe70>
    fefc:	ldr	r1, [pc, #2340]	; 10828 <readstat_parse_xport+0xe74>
    ff00:	add	r2, pc, r2
    ff04:	add	r1, pc, r1
    ff08:	str	r0, [r4, #56]	; 0x38
    ff0c:	mov	r0, r4
    ff10:	bl	f8bc <xport_expect_header_record>
    ff14:	subs	r9, r0, #0
    ff18:	bne	fa70 <readstat_parse_xport+0xbc>
    ff1c:	ldr	r2, [pc, #2312]	; 1082c <readstat_parse_xport+0xe78>
    ff20:	ldr	r1, [pc, #2312]	; 10830 <readstat_parse_xport+0xe7c>
    ff24:	add	r2, pc, r2
    ff28:	add	r1, pc, r1
    ff2c:	mov	r0, r4
    ff30:	bl	f8bc <xport_expect_header_record>
    ff34:	subs	r9, r0, #0
    ff38:	bne	fa70 <readstat_parse_xport+0xbc>
    ff3c:	ldr	r3, [r4, #52]	; 0x34
    ff40:	mov	r1, #80	; 0x50
    ff44:	mov	r0, r7
    ff48:	ldr	r5, [r3, #12]
    ff4c:	ldr	r2, [r3, #20]
    ff50:	blx	r5
    ff54:	cmp	r0, #79	; 0x4f
    ff58:	ble	fd3c <readstat_parse_xport+0x388>
    ff5c:	ldr	r3, [r4, #380]	; 0x17c
    ff60:	ldr	r2, [r4, #48]	; 0x30
    ff64:	cmp	r3, #5
    ff68:	add	r0, r4, #245	; 0xf5
    ff6c:	strb	r9, [fp, #-100]	; 0xffffff9c
    ff70:	str	r0, [fp, #-232]	; 0xffffff18
    ff74:	movne	r3, #32
    ff78:	moveq	r3, #8
    ff7c:	str	r2, [sp]
    ff80:	mov	r1, #129	; 0x81
    ff84:	sub	r2, fp, #172	; 0xac
    ff88:	bl	4238 <readstat_convert@plt>
    ff8c:	subs	r9, r0, #0
    ff90:	bne	fa70 <readstat_parse_xport+0xbc>
    ff94:	ldr	r3, [r4, #52]	; 0x34
    ff98:	mov	r1, #80	; 0x50
    ff9c:	mov	r0, r7
    ffa0:	ldr	r5, [r3, #12]
    ffa4:	ldr	r2, [r3, #20]
    ffa8:	blx	r5
    ffac:	cmp	r0, #79	; 0x4f
    ffb0:	ble	fd3c <readstat_parse_xport+0x388>
    ffb4:	ldr	r3, [r4, #48]	; 0x30
    ffb8:	add	r6, r4, #84	; 0x54
    ffbc:	strb	r9, [fp, #-100]	; 0xffffff9c
    ffc0:	mov	r0, r6
    ffc4:	str	r3, [sp]
    ffc8:	add	r2, r7, #32
    ffcc:	mov	r3, #40	; 0x28
    ffd0:	mov	r1, #161	; 0xa1
    ffd4:	bl	4238 <readstat_convert@plt>
    ffd8:	subs	r9, r0, #0
    ffdc:	bne	fa70 <readstat_parse_xport+0xbc>
    ffe0:	mov	r1, r8
    ffe4:	mov	r0, r4
    ffe8:	bl	f818 <xport_read_header_record>
    ffec:	subs	r9, r0, #0
    fff0:	bne	fa70 <readstat_parse_xport+0xbc>
    fff4:	ldr	r9, [r4, #380]	; 0x17c
    fff8:	cmp	r9, #5
    fffc:	beq	10054 <readstat_parse_xport+0x6a0>
   10000:	cmp	r9, #8
   10004:	bne	1006c <readstat_parse_xport+0x6b8>
   10008:	ldr	r1, [pc, #2084]	; 10834 <readstat_parse_xport+0xe80>
   1000c:	mov	r0, r8
   10010:	add	r1, pc, r1
   10014:	bl	3e00 <strcmp@plt>
   10018:	cmp	r0, #0
   1001c:	beq	1006c <readstat_parse_xport+0x6b8>
   10020:	mov	r9, #5
   10024:	b	fa70 <readstat_parse_xport+0xbc>
   10028:	mov	r1, r6
   1002c:	mov	r0, r7
   10030:	bl	4130 <iconv_open@plt>
   10034:	cmn	r0, #1
   10038:	moveq	r9, #7
   1003c:	beq	fa70 <readstat_parse_xport+0xbc>
   10040:	str	r0, [r4, #48]	; 0x30
   10044:	b	fb30 <readstat_parse_xport+0x17c>
   10048:	mov	r0, #10
   1004c:	str	r0, [fp, #-208]	; 0xffffff30
   10050:	b	fee0 <readstat_parse_xport+0x52c>
   10054:	ldr	r1, [pc, #2012]	; 10838 <readstat_parse_xport+0xe84>
   10058:	mov	r0, r8
   1005c:	add	r1, pc, r1
   10060:	bl	3e00 <strcmp@plt>
   10064:	cmp	r0, #0
   10068:	bne	fa70 <readstat_parse_xport+0xbc>
   1006c:	ldr	r3, [fp, #-208]	; 0xffffff30
   10070:	mov	r1, #4
   10074:	mov	r0, r3
   10078:	str	r3, [r4, #64]	; 0x40
   1007c:	bl	3fc8 <readstat_calloc@plt>
   10080:	cmp	r0, #0
   10084:	str	r0, [r4, #376]	; 0x178
   10088:	moveq	r9, #3
   1008c:	beq	fa70 <readstat_parse_xport+0xbc>
   10090:	ldr	r5, [r4]
   10094:	cmp	r5, #0
   10098:	beq	fbfc <readstat_parse_xport+0x248>
   1009c:	mov	r2, #56	; 0x38
   100a0:	mov	r1, #0
   100a4:	mov	r0, r7
   100a8:	bl	42a4 <memset@plt>
   100ac:	ldr	r0, [r4, #380]	; 0x17c
   100b0:	ldr	r2, [r4, #64]	; 0x40
   100b4:	ldr	ip, [fp, #-232]	; 0xffffff18
   100b8:	asr	r1, r0, #31
   100bc:	asr	r3, r2, #31
   100c0:	strd	r0, [fp, #-156]	; 0xffffff64
   100c4:	strd	r2, [fp, #-172]	; 0xffffff54
   100c8:	mvn	r0, #0
   100cc:	ldr	r3, [r4, #56]	; 0x38
   100d0:	mvn	r1, #0
   100d4:	str	ip, [fp, #-140]	; 0xffffff74
   100d8:	strd	r0, [fp, #-180]	; 0xffffff4c
   100dc:	str	r6, [fp, #-136]	; 0xffffff78
   100e0:	str	r3, [fp, #-164]	; 0xffffff5c
   100e4:	str	r3, [fp, #-160]	; 0xffffff60
   100e8:	ldr	r1, [r4, #36]	; 0x24
   100ec:	mov	r0, r7
   100f0:	blx	r5
   100f4:	cmp	r0, #0
   100f8:	beq	fbfc <readstat_parse_xport+0x248>
   100fc:	mov	r9, #4
   10100:	b	fa70 <readstat_parse_xport+0xbc>
   10104:	mov	r0, #9
   10108:	b	1004c <readstat_parse_xport+0x698>
   1010c:	mov	r0, #8
   10110:	b	1004c <readstat_parse_xport+0x698>
   10114:	mov	r0, #7
   10118:	b	1004c <readstat_parse_xport+0x698>
   1011c:	mov	r0, #6
   10120:	b	1004c <readstat_parse_xport+0x698>
   10124:	mov	r0, #5
   10128:	b	1004c <readstat_parse_xport+0x698>
   1012c:	mov	r0, #4
   10130:	b	1004c <readstat_parse_xport+0x698>
   10134:	mov	r0, #3
   10138:	b	1004c <readstat_parse_xport+0x698>
   1013c:	mov	r0, #2
   10140:	b	1004c <readstat_parse_xport+0x698>
   10144:	mov	r0, #1
   10148:	b	1004c <readstat_parse_xport+0x698>
   1014c:	ldr	r0, [r4, #52]	; 0x34
   10150:	bl	4bb0 <xport_skip_rest_of_record.isra.2>
   10154:	subs	r9, r0, #0
   10158:	bne	fa70 <readstat_parse_xport+0xbc>
   1015c:	ldr	r3, [r4, #380]	; 0x17c
   10160:	cmp	r3, #5
   10164:	beq	102fc <readstat_parse_xport+0x948>
   10168:	mov	r1, r7
   1016c:	mov	r0, r4
   10170:	bl	f818 <xport_read_header_record>
   10174:	cmp	r0, #0
   10178:	bne	102f4 <readstat_parse_xport+0x940>
   1017c:	ldr	r1, [pc, #1720]	; 1083c <readstat_parse_xport+0xe88>
   10180:	mov	r0, r7
   10184:	add	r1, pc, r1
   10188:	bl	3e00 <strcmp@plt>
   1018c:	cmp	r0, #0
   10190:	beq	101cc <readstat_parse_xport+0x818>
   10194:	ldr	r1, [pc, #1700]	; 10840 <readstat_parse_xport+0xe8c>
   10198:	mov	r0, r7
   1019c:	add	r1, pc, r1
   101a0:	bl	3e00 <strcmp@plt>
   101a4:	subs	r3, r0, #0
   101a8:	str	r3, [fp, #-240]	; 0xffffff10
   101ac:	beq	104fc <readstat_parse_xport+0xb48>
   101b0:	ldr	r1, [pc, #1676]	; 10844 <readstat_parse_xport+0xe90>
   101b4:	mov	r0, r7
   101b8:	add	r1, pc, r1
   101bc:	bl	3e00 <strcmp@plt>
   101c0:	subs	r3, r0, #0
   101c4:	str	r3, [fp, #-240]	; 0xffffff10
   101c8:	beq	10320 <readstat_parse_xport+0x96c>
   101cc:	mov	r3, #0
   101d0:	ldr	ip, [r4, #64]	; 0x40
   101d4:	mov	r7, r3
   101d8:	mov	r5, r3
   101dc:	str	r3, [r4, #76]	; 0x4c
   101e0:	cmp	r5, ip
   101e4:	mov	r0, r5
   101e8:	bge	10250 <readstat_parse_xport+0x89c>
   101ec:	ldr	r3, [r4, #376]	; 0x178
   101f0:	ldr	r8, [r4, #8]
   101f4:	ldr	r6, [r3, r5, lsl #2]
   101f8:	cmp	r8, #0
   101fc:	add	r2, r6, #308	; 0x134
   10200:	mov	r1, r6
   10204:	str	r7, [r6, #2148]	; 0x864
   10208:	beq	10234 <readstat_parse_xport+0x880>
   1020c:	ldr	r3, [r4, #36]	; 0x24
   10210:	blx	r8
   10214:	cmp	r0, #1
   10218:	beq	100fc <readstat_parse_xport+0x748>
   1021c:	cmp	r0, #2
   10220:	moveq	r3, #1
   10224:	ldrne	ip, [r4, #64]	; 0x40
   10228:	streq	r3, [r6, #2144]	; 0x860
   1022c:	ldreq	ip, [r4, #64]	; 0x40
   10230:	beq	10238 <readstat_parse_xport+0x884>
   10234:	add	r7, r7, #1
   10238:	ldr	r2, [r6, #1596]	; 0x63c
   1023c:	ldr	r3, [r4, #76]	; 0x4c
   10240:	add	r5, r5, #1
   10244:	add	r3, r3, r2
   10248:	str	r3, [r4, #76]	; 0x4c
   1024c:	b	101e0 <readstat_parse_xport+0x82c>
   10250:	ldr	r0, [r4, #76]	; 0x4c
   10254:	cmp	r0, #0
   10258:	beq	fa70 <readstat_parse_xport+0xbc>
   1025c:	ldr	r3, [r4, #16]
   10260:	cmp	r3, #0
   10264:	beq	fa70 <readstat_parse_xport+0xbc>
   10268:	bl	422c <readstat_malloc@plt>
   1026c:	mov	r5, r0
   10270:	ldr	r0, [r4, #76]	; 0x4c
   10274:	bl	422c <readstat_malloc@plt>
   10278:	cmp	r0, #0
   1027c:	cmpne	r5, #0
   10280:	mov	r8, r0
   10284:	moveq	r6, #1
   10288:	movne	r6, #0
   1028c:	bne	1070c <readstat_parse_xport+0xd58>
   10290:	cmp	r5, #0
   10294:	movne	r7, #3
   10298:	beq	10704 <readstat_parse_xport+0xd50>
   1029c:	mov	r0, r5
   102a0:	bl	3ec0 <free@plt>
   102a4:	mov	r9, r7
   102a8:	cmp	r8, #0
   102ac:	beq	fa70 <readstat_parse_xport+0xbc>
   102b0:	mov	r0, r8
   102b4:	bl	3ec0 <free@plt>
   102b8:	b	fa70 <readstat_parse_xport+0xbc>
   102bc:	ldr	r0, [r4, #52]	; 0x34
   102c0:	ldr	sl, [fp, #-232]	; 0xffffff18
   102c4:	ldr	r9, [fp, #-236]	; 0xffffff14
   102c8:	bl	4bb0 <xport_skip_rest_of_record.isra.2>
   102cc:	cmp	r0, #0
   102d0:	bne	102f4 <readstat_parse_xport+0x940>
   102d4:	ldr	r2, [pc, #1388]	; 10848 <readstat_parse_xport+0xe94>
   102d8:	ldr	r1, [pc, #1388]	; 1084c <readstat_parse_xport+0xe98>
   102dc:	add	r2, pc, r2
   102e0:	add	r1, pc, r1
   102e4:	mov	r0, r4
   102e8:	bl	f8bc <xport_expect_header_record>
   102ec:	cmp	r0, #0
   102f0:	beq	101cc <readstat_parse_xport+0x818>
   102f4:	mov	r9, r0
   102f8:	b	fa70 <readstat_parse_xport+0xbc>
   102fc:	ldr	r2, [pc, #1356]	; 10850 <readstat_parse_xport+0xe9c>
   10300:	ldr	r1, [pc, #1356]	; 10854 <readstat_parse_xport+0xea0>
   10304:	add	r2, pc, r2
   10308:	add	r1, pc, r1
   1030c:	mov	r0, r4
   10310:	bl	f8bc <xport_expect_header_record>
   10314:	cmp	r0, #0
   10318:	beq	101cc <readstat_parse_xport+0x818>
   1031c:	b	102f4 <readstat_parse_xport+0x940>
   10320:	ldr	r3, [fp, #-168]	; 0xffffff58
   10324:	str	sl, [fp, #-232]	; 0xffffff18
   10328:	str	r3, [fp, #-252]	; 0xffffff04
   1032c:	str	r9, [fp, #-236]	; 0xffffff14
   10330:	ldr	r3, [fp, #-252]	; 0xffffff04
   10334:	ldr	r2, [fp, #-240]	; 0xffffff10
   10338:	cmp	r3, r2
   1033c:	ble	106d0 <readstat_parse_xport+0xd1c>
   10340:	ldr	r3, [r4, #52]	; 0x34
   10344:	mov	r1, #10
   10348:	mov	r0, r8
   1034c:	ldr	r5, [r3, #12]
   10350:	ldr	r2, [r3, #20]
   10354:	blx	r5
   10358:	str	sp, [fp, #-244]	; 0xffffff0c
   1035c:	cmp	r0, #10
   10360:	bne	106c0 <readstat_parse_xport+0xd0c>
   10364:	bl	3eb4 <machine_is_little_endian@plt>
   10368:	cmp	r0, #0
   1036c:	bne	10680 <readstat_parse_xport+0xccc>
   10370:	ldrh	r5, [fp, #-224]	; 0xffffff20
   10374:	ldrh	r9, [fp, #-222]	; 0xffffff22
   10378:	ldrh	r6, [fp, #-220]	; 0xffffff24
   1037c:	ldrh	sl, [fp, #-218]	; 0xffffff26
   10380:	ldrh	r7, [fp, #-216]	; 0xffffff28
   10384:	ldr	r2, [r4, #64]	; 0x40
   10388:	clz	r3, r5
   1038c:	lsr	r3, r3, #5
   10390:	cmp	r2, r5
   10394:	orrlt	r3, r3, #1
   10398:	cmp	r3, #0
   1039c:	bne	10670 <readstat_parse_xport+0xcbc>
   103a0:	add	r2, r9, #8
   103a4:	bic	r2, r2, #7
   103a8:	add	r3, r6, #8
   103ac:	sub	sp, sp, r2
   103b0:	bic	r3, r3, #7
   103b4:	add	r1, sl, #8
   103b8:	ldr	r2, [r4, #52]	; 0x34
   103bc:	add	r0, sp, #24
   103c0:	bic	r1, r1, #7
   103c4:	sub	sp, sp, r3
   103c8:	sub	ip, r5, #-1073741823	; 0xc0000001
   103cc:	ldr	lr, [r4, #376]	; 0x178
   103d0:	add	r5, sp, #24
   103d4:	add	r3, r7, #8
   103d8:	sub	sp, sp, r1
   103dc:	add	r1, sp, #24
   103e0:	bic	r3, r3, #7
   103e4:	sub	sp, sp, r3
   103e8:	str	r1, [fp, #-260]	; 0xfffffefc
   103ec:	ldr	r3, [r2, #12]
   103f0:	mov	r1, r9
   103f4:	ldr	r2, [r2, #20]
   103f8:	str	r5, [fp, #-248]	; 0xffffff08
   103fc:	str	r0, [fp, #-256]	; 0xffffff00
   10400:	ldr	r5, [lr, ip, lsl #2]
   10404:	blx	r3
   10408:	add	r3, sp, #24
   1040c:	str	r3, [fp, #-264]	; 0xfffffef8
   10410:	cmp	r9, r0
   10414:	bne	106c0 <readstat_parse_xport+0xd0c>
   10418:	ldr	r2, [r4, #52]	; 0x34
   1041c:	mov	r1, r6
   10420:	ldr	r0, [fp, #-248]	; 0xffffff08
   10424:	ldr	r3, [r2, #12]
   10428:	ldr	r2, [r2, #20]
   1042c:	blx	r3
   10430:	cmp	r6, r0
   10434:	bne	106c0 <readstat_parse_xport+0xd0c>
   10438:	ldr	r2, [r4, #52]	; 0x34
   1043c:	ldr	r0, [fp, #-260]	; 0xfffffefc
   10440:	mov	r1, sl
   10444:	ldr	r3, [r2, #12]
   10448:	ldr	r2, [r2, #20]
   1044c:	blx	r3
   10450:	cmp	sl, r0
   10454:	bne	106c0 <readstat_parse_xport+0xd0c>
   10458:	ldr	r2, [r4, #52]	; 0x34
   1045c:	ldr	sl, [fp, #-264]	; 0xfffffef8
   10460:	mov	r1, r7
   10464:	ldr	r3, [r2, #12]
   10468:	mov	r0, sl
   1046c:	ldr	r2, [r2, #20]
   10470:	blx	r3
   10474:	cmp	r7, r0
   10478:	bne	106c0 <readstat_parse_xport+0xd0c>
   1047c:	ldr	r1, [r4, #48]	; 0x30
   10480:	ldr	r2, [fp, #-256]	; 0xffffff00
   10484:	mov	r3, r9
   10488:	str	r1, [sp]
   1048c:	add	r0, r5, #8
   10490:	mov	r1, #300	; 0x12c
   10494:	bl	4238 <readstat_convert@plt>
   10498:	cmp	r0, #0
   1049c:	bne	10660 <readstat_parse_xport+0xcac>
   104a0:	ldr	r1, [r4, #48]	; 0x30
   104a4:	mov	r3, r7
   104a8:	str	r1, [sp]
   104ac:	mov	r2, sl
   104b0:	mov	r1, #1024	; 0x400
   104b4:	add	r0, r5, #564	; 0x234
   104b8:	bl	4238 <readstat_convert@plt>
   104bc:	cmp	r0, #0
   104c0:	bne	10660 <readstat_parse_xport+0xcac>
   104c4:	ldr	r3, [r5, #2140]	; 0x85c
   104c8:	ldr	r1, [fp, #-248]	; 0xffffff08
   104cc:	mov	r2, r6
   104d0:	str	r3, [sp]
   104d4:	add	r0, r5, #308	; 0x134
   104d8:	ldr	r3, [r5, #2136]	; 0x858
   104dc:	bl	4e68 <xport_construct_format.constprop.4>
   104e0:	cmp	r0, #0
   104e4:	bne	10660 <readstat_parse_xport+0xcac>
   104e8:	ldr	r3, [fp, #-240]	; 0xffffff10
   104ec:	add	r3, r3, #1
   104f0:	str	r3, [fp, #-240]	; 0xffffff10
   104f4:	ldr	sp, [fp, #-244]	; 0xffffff0c
   104f8:	b	10330 <readstat_parse_xport+0x97c>
   104fc:	ldr	r3, [fp, #-168]	; 0xffffff58
   10500:	str	sl, [fp, #-232]	; 0xffffff18
   10504:	str	r3, [fp, #-248]	; 0xffffff08
   10508:	str	r9, [fp, #-236]	; 0xffffff14
   1050c:	ldr	r3, [fp, #-248]	; 0xffffff08
   10510:	ldr	r2, [fp, #-240]	; 0xffffff10
   10514:	cmp	r3, r2
   10518:	ble	102bc <readstat_parse_xport+0x908>
   1051c:	ldr	r3, [r4, #52]	; 0x34
   10520:	mov	r1, #6
   10524:	mov	r0, r8
   10528:	ldr	r5, [r3, #12]
   1052c:	ldr	r2, [r3, #20]
   10530:	blx	r5
   10534:	str	sp, [fp, #-244]	; 0xffffff0c
   10538:	cmp	r0, #6
   1053c:	bne	106c0 <readstat_parse_xport+0xd0c>
   10540:	bl	3eb4 <machine_is_little_endian@plt>
   10544:	cmp	r0, #0
   10548:	ldrheq	r7, [fp, #-224]	; 0xffffff20
   1054c:	ldrheq	r6, [fp, #-222]	; 0xffffff22
   10550:	ldrheq	r5, [fp, #-220]	; 0xffffff24
   10554:	beq	1057c <readstat_parse_xport+0xbc8>
   10558:	ldrh	r0, [fp, #-224]	; 0xffffff20
   1055c:	bl	3ea8 <byteswap2@plt>
   10560:	mov	r7, r0
   10564:	ldrh	r0, [fp, #-222]	; 0xffffff22
   10568:	bl	3ea8 <byteswap2@plt>
   1056c:	mov	r6, r0
   10570:	ldrh	r0, [fp, #-220]	; 0xffffff24
   10574:	bl	3ea8 <byteswap2@plt>
   10578:	mov	r5, r0
   1057c:	ldr	r2, [r4, #64]	; 0x40
   10580:	clz	r3, r7
   10584:	lsr	r3, r3, #5
   10588:	cmp	r2, r7
   1058c:	orrlt	r3, r3, #1
   10590:	cmp	r3, #0
   10594:	bne	10670 <readstat_parse_xport+0xcbc>
   10598:	add	r3, r6, #8
   1059c:	ldr	r2, [r4, #52]	; 0x34
   105a0:	bic	r3, r3, #7
   105a4:	sub	sp, sp, r3
   105a8:	ldr	ip, [r4, #376]	; 0x178
   105ac:	add	r3, r5, #8
   105b0:	sub	lr, r7, #-1073741823	; 0xc0000001
   105b4:	bic	r3, r3, #7
   105b8:	add	r7, sp, #24
   105bc:	mov	r0, r7
   105c0:	sub	sp, sp, r3
   105c4:	mov	r1, r6
   105c8:	ldr	r3, [r2, #12]
   105cc:	ldr	r2, [r2, #20]
   105d0:	ldr	r9, [ip, lr, lsl #2]
   105d4:	blx	r3
   105d8:	add	sl, sp, #24
   105dc:	cmp	r6, r0
   105e0:	bne	106c0 <readstat_parse_xport+0xd0c>
   105e4:	ldr	r2, [r4, #52]	; 0x34
   105e8:	mov	r1, r5
   105ec:	mov	r0, sl
   105f0:	ldr	r3, [r2, #12]
   105f4:	ldr	r2, [r2, #20]
   105f8:	blx	r3
   105fc:	cmp	r5, r0
   10600:	bne	106c0 <readstat_parse_xport+0xd0c>
   10604:	ldr	r1, [r4, #48]	; 0x30
   10608:	mov	r3, r6
   1060c:	str	r1, [sp]
   10610:	mov	r2, r7
   10614:	mov	r1, #300	; 0x12c
   10618:	add	r0, r9, #8
   1061c:	bl	4238 <readstat_convert@plt>
   10620:	cmp	r0, #0
   10624:	bne	10660 <readstat_parse_xport+0xcac>
   10628:	ldr	r1, [r4, #48]	; 0x30
   1062c:	mov	r3, r5
   10630:	str	r1, [sp]
   10634:	mov	r2, sl
   10638:	add	r0, r9, #564	; 0x234
   1063c:	mov	r1, #1024	; 0x400
   10640:	bl	4238 <readstat_convert@plt>
   10644:	cmp	r0, #0
   10648:	bne	10660 <readstat_parse_xport+0xcac>
   1064c:	ldr	r3, [fp, #-240]	; 0xffffff10
   10650:	add	r3, r3, #1
   10654:	str	r3, [fp, #-240]	; 0xffffff10
   10658:	ldr	sp, [fp, #-244]	; 0xffffff0c
   1065c:	b	1050c <readstat_parse_xport+0xb58>
   10660:	ldr	sl, [fp, #-232]	; 0xffffff18
   10664:	ldr	r9, [fp, #-236]	; 0xffffff14
   10668:	ldr	sp, [fp, #-244]	; 0xffffff0c
   1066c:	b	102ec <readstat_parse_xport+0x938>
   10670:	ldr	sl, [fp, #-232]	; 0xffffff18
   10674:	ldr	r9, [fp, #-236]	; 0xffffff14
   10678:	mov	r0, #5
   1067c:	b	10668 <readstat_parse_xport+0xcb4>
   10680:	ldrh	r0, [fp, #-224]	; 0xffffff20
   10684:	bl	3ea8 <byteswap2@plt>
   10688:	mov	r5, r0
   1068c:	ldrh	r0, [fp, #-222]	; 0xffffff22
   10690:	bl	3ea8 <byteswap2@plt>
   10694:	mov	r9, r0
   10698:	ldrh	r0, [fp, #-220]	; 0xffffff24
   1069c:	bl	3ea8 <byteswap2@plt>
   106a0:	mov	r6, r0
   106a4:	ldrh	r0, [fp, #-218]	; 0xffffff26
   106a8:	bl	3ea8 <byteswap2@plt>
   106ac:	mov	sl, r0
   106b0:	ldrh	r0, [fp, #-216]	; 0xffffff28
   106b4:	bl	3ea8 <byteswap2@plt>
   106b8:	mov	r7, r0
   106bc:	b	10384 <readstat_parse_xport+0x9d0>
   106c0:	ldr	sl, [fp, #-232]	; 0xffffff18
   106c4:	ldr	r9, [fp, #-236]	; 0xffffff14
   106c8:	mov	r0, #2
   106cc:	b	10668 <readstat_parse_xport+0xcb4>
   106d0:	ldr	r0, [r4, #52]	; 0x34
   106d4:	ldr	sl, [fp, #-232]	; 0xffffff18
   106d8:	ldr	r9, [fp, #-236]	; 0xffffff14
   106dc:	bl	4bb0 <xport_skip_rest_of_record.isra.2>
   106e0:	cmp	r0, #0
   106e4:	bne	102f4 <readstat_parse_xport+0x940>
   106e8:	ldr	r2, [pc, #360]	; 10858 <readstat_parse_xport+0xea4>
   106ec:	ldr	r1, [pc, #360]	; 1085c <readstat_parse_xport+0xea8>
   106f0:	add	r2, pc, r2
   106f4:	add	r1, pc, r1
   106f8:	mov	r0, r4
   106fc:	bl	f8bc <xport_expect_header_record>
   10700:	b	102ec <readstat_parse_xport+0x938>
   10704:	mov	r9, #3
   10708:	b	102a8 <readstat_parse_xport+0x8f4>
   1070c:	ldr	r2, [r4, #76]	; 0x4c
   10710:	mov	r1, #32
   10714:	bl	42a4 <memset@plt>
   10718:	ldr	r3, [r4, #52]	; 0x34
   1071c:	ldr	r1, [r4, #76]	; 0x4c
   10720:	mov	r0, r5
   10724:	ldr	r7, [r3, #12]
   10728:	ldr	r2, [r3, #20]
   1072c:	blx	r7
   10730:	cmn	r0, #1
   10734:	beq	107a0 <readstat_parse_xport+0xdec>
   10738:	ldr	r3, [r4, #76]	; 0x4c
   1073c:	cmp	r3, r0
   10740:	bhi	10798 <readstat_parse_xport+0xde4>
   10744:	add	r3, r5, r3
   10748:	mov	r2, r5
   1074c:	cmp	r3, r2
   10750:	beq	107a8 <readstat_parse_xport+0xdf4>
   10754:	ldrb	r1, [r2], #1
   10758:	cmp	r1, #32
   1075c:	beq	1074c <readstat_parse_xport+0xd98>
   10760:	cmp	r6, #0
   10764:	mov	r1, r8
   10768:	mov	r0, r4
   1076c:	beq	107b8 <readstat_parse_xport+0xe04>
   10770:	bl	4c10 <xport_process_row.isra.3>
   10774:	sub	r6, r6, #1
   10778:	cmp	r0, #0
   1077c:	bne	107b0 <readstat_parse_xport+0xdfc>
   10780:	ldr	r3, [r4, #68]	; 0x44
   10784:	cmp	r3, #0
   10788:	ble	10760 <readstat_parse_xport+0xdac>
   1078c:	ldr	r2, [r4, #80]	; 0x50
   10790:	cmp	r3, r2
   10794:	bne	10760 <readstat_parse_xport+0xdac>
   10798:	mov	r7, r9
   1079c:	b	1029c <readstat_parse_xport+0x8e8>
   107a0:	mov	r7, #2
   107a4:	b	1029c <readstat_parse_xport+0x8e8>
   107a8:	add	r6, r6, #1
   107ac:	b	10718 <readstat_parse_xport+0xd64>
   107b0:	mov	r7, r0
   107b4:	b	1029c <readstat_parse_xport+0x8e8>
   107b8:	mov	r1, r5
   107bc:	bl	4c10 <xport_process_row.isra.3>
   107c0:	cmp	r0, #0
   107c4:	bne	107b0 <readstat_parse_xport+0xdfc>
   107c8:	ldr	r3, [r4, #52]	; 0x34
   107cc:	ldr	r2, [r4, #36]	; 0x24
   107d0:	ldr	r1, [r4, #28]
   107d4:	ldr	r7, [r3, #16]
   107d8:	ldr	r0, [r4, #32]
   107dc:	ldr	r3, [r3, #20]
   107e0:	blx	r7
   107e4:	cmp	r0, #0
   107e8:	bne	107b0 <readstat_parse_xport+0xdfc>
   107ec:	ldr	r3, [r4, #68]	; 0x44
   107f0:	cmp	r3, #0
   107f4:	ble	10718 <readstat_parse_xport+0xd64>
   107f8:	ldr	r2, [r4, #80]	; 0x50
   107fc:	cmp	r3, r2
   10800:	bne	10718 <readstat_parse_xport+0xd64>
   10804:	b	10798 <readstat_parse_xport+0xde4>
   10808:	.word	0x000355e0
   1080c:	.word	0x00016894
   10810:	.word	0x00016940
   10814:	.word	0x000168b8
   10818:	.word	0x00000868
   1081c:	.word	0x000166cc
   10820:	.word	0x000002d8
   10824:	.word	0x000165b8
   10828:	.word	0x000165bc
   1082c:	.word	0x000165a4
   10830:	.word	0x000165a8
   10834:	.word	0x000164d0
   10838:	.word	0x0001647c
   1083c:	.word	0x00016364
   10840:	.word	0x00016358
   10844:	.word	0x00016344
   10848:	.word	0x0001620c
   1084c:	.word	0x00016210
   10850:	.word	0x000161e4
   10854:	.word	0x000161e8
   10858:	.word	0x00015df8
   1085c:	.word	0x00015dfc

00010860 <xport_write_missing_numeric>:
   10860:	mov	r3, #46	; 0x2e
   10864:	strb	r3, [r0]
   10868:	mov	r0, #0
   1086c:	bx	lr

00010870 <xport_write_row>:
   10870:	ldr	ip, [pc, #28]	; 10894 <xport_write_row+0x24>
   10874:	push	{lr}		; (str lr, [sp, #-4]!)
   10878:	sub	sp, sp, #12
   1087c:	add	ip, pc, ip
   10880:	mov	r3, #80	; 0x50
   10884:	str	ip, [sp]
   10888:	bl	4520 <readstat_write_bytes_as_lines@plt>
   1088c:	add	sp, sp, #12
   10890:	pop	{pc}		; (ldr pc, [sp], #4)
   10894:	.word	0x00016104

00010898 <xport_end_data>:
   10898:	ldr	r3, [pc, #12]	; 108ac <xport_end_data+0x14>
   1089c:	mov	r2, #80	; 0x50
   108a0:	add	r3, pc, r3
   108a4:	mov	r1, #32
   108a8:	b	44e4 <readstat_write_line_padding@plt>
   108ac:	.word	0x000160e0

000108b0 <xport_write_missing_string>:
   108b0:	ldr	r2, [r1, #1596]	; 0x63c
   108b4:	push	{r4, lr}
   108b8:	mov	r1, #32
   108bc:	bl	42a4 <memset@plt>
   108c0:	mov	r0, #0
   108c4:	pop	{r4, pc}

000108c8 <xport_write_missing_tagged>:
   108c8:	push	{r4, r5, r6, lr}
   108cc:	mov	r5, r0
   108d0:	mov	r0, r2
   108d4:	mov	r4, r2
   108d8:	bl	4148 <sas_validate_tag@plt>
   108dc:	cmp	r0, #0
   108e0:	strbeq	r4, [r5]
   108e4:	pop	{r4, r5, r6, pc}

000108e8 <xport_write_double>:
   108e8:	push	{r4, r5, r6, r7, lr}
   108ec:	sub	sp, sp, #20
   108f0:	add	r5, sp, #8
   108f4:	mov	r6, r0
   108f8:	mov	r7, r1
   108fc:	mov	r2, r5
   10900:	mov	r3, #1
   10904:	mov	r1, #0
   10908:	mov	r0, sp
   1090c:	vstr	d0, [sp]
   10910:	bl	4004 <cnxptiee@plt>
   10914:	subs	r4, r0, #0
   10918:	movne	r0, #16
   1091c:	beq	10928 <xport_write_double+0x40>
   10920:	add	sp, sp, #20
   10924:	pop	{r4, r5, r6, r7, pc}
   10928:	ldr	r2, [r7, #1596]	; 0x63c
   1092c:	mov	r1, r5
   10930:	mov	r0, r6
   10934:	bl	3f20 <memcpy@plt>
   10938:	mov	r0, r4
   1093c:	add	sp, sp, #20
   10940:	pop	{r4, r5, r6, r7, pc}

00010944 <xport_write_record>:
   10944:	push	{r4, r5, r6, lr}
   10948:	mov	r5, r0
   1094c:	sub	sp, sp, #8
   10950:	mov	r0, r1
   10954:	mov	r4, r1
   10958:	bl	41fc <strlen@plt>
   1095c:	ldr	r6, [pc, #68]	; 109a8 <xport_write_record+0x64>
   10960:	mov	r1, r4
   10964:	add	r6, pc, r6
   10968:	str	r6, [sp]
   1096c:	mov	r3, #80	; 0x50
   10970:	mov	r2, r0
   10974:	mov	r0, r5
   10978:	bl	4520 <readstat_write_bytes_as_lines@plt>
   1097c:	cmp	r0, #0
   10980:	beq	1098c <xport_write_record+0x48>
   10984:	add	sp, sp, #8
   10988:	pop	{r4, r5, r6, pc}
   1098c:	mov	r3, r6
   10990:	mov	r0, r5
   10994:	mov	r2, #80	; 0x50
   10998:	mov	r1, #32
   1099c:	add	sp, sp, #8
   109a0:	pop	{r4, r5, r6, lr}
   109a4:	b	44e4 <readstat_write_line_padding@plt>
   109a8:	.word	0x0001601c

000109ac <xport_write_string>:
   109ac:	push	{r4, r5, r6, lr}
   109b0:	mov	r5, r1
   109b4:	mov	r4, r2
   109b8:	mov	r1, #32
   109bc:	ldr	r2, [r5, #1596]	; 0x63c
   109c0:	mov	r6, r0
   109c4:	bl	42a4 <memset@plt>
   109c8:	cmp	r4, #0
   109cc:	beq	10a08 <xport_write_string+0x5c>
   109d0:	ldrb	r0, [r4]
   109d4:	cmp	r0, #0
   109d8:	popeq	{r4, r5, r6, pc}
   109dc:	mov	r0, r4
   109e0:	bl	41fc <strlen@plt>
   109e4:	ldr	r3, [r5, #1596]	; 0x63c
   109e8:	cmp	r0, r3
   109ec:	bls	109f8 <xport_write_string+0x4c>
   109f0:	mov	r0, #22
   109f4:	pop	{r4, r5, r6, pc}
   109f8:	mov	r2, r0
   109fc:	mov	r1, r4
   10a00:	mov	r0, r6
   10a04:	bl	3f20 <memcpy@plt>
   10a08:	mov	r0, #0
   10a0c:	pop	{r4, r5, r6, pc}

00010a10 <xport_metadata_ok>:
   10a10:	ldr	r3, [r0, #8]
   10a14:	cmp	r3, #5
   10a18:	cmpne	r3, #8
   10a1c:	movne	r2, #1
   10a20:	moveq	r2, #0
   10a24:	beq	10a30 <xport_metadata_ok+0x20>
   10a28:	mov	r0, #24
   10a2c:	bx	lr
   10a30:	ldrb	r1, [r0, #188]	; 0xbc
   10a34:	cmp	r1, #0
   10a38:	beq	10a54 <xport_metadata_ok+0x44>
   10a3c:	cmp	r3, #8
   10a40:	beq	10a5c <xport_metadata_ok+0x4c>
   10a44:	cmp	r3, #5
   10a48:	beq	10a68 <xport_metadata_ok+0x58>
   10a4c:	mov	r0, r2
   10a50:	bx	lr
   10a54:	mov	r0, r1
   10a58:	bx	lr
   10a5c:	add	r0, r0, #188	; 0xbc
   10a60:	mov	r1, #32
   10a64:	b	3d4c <sas_validate_name@plt>
   10a68:	add	r0, r0, #188	; 0xbc
   10a6c:	mov	r1, #8
   10a70:	b	3d4c <sas_validate_name@plt>

00010a74 <xport_variable_width>:
   10a74:	cmp	r0, #0
   10a78:	beq	10aa0 <xport_variable_width+0x2c>
   10a7c:	sub	r3, r1, #1
   10a80:	cmp	r3, #6
   10a84:	bls	10a90 <xport_variable_width+0x1c>
   10a88:	mov	r0, #8
   10a8c:	bx	lr
   10a90:	cmp	r1, #3
   10a94:	movcs	r0, r1
   10a98:	movcc	r0, #3
   10a9c:	bx	lr
   10aa0:	mov	r0, r1
   10aa4:	bx	lr

00010aa8 <xport_write_float>:
   10aa8:	vcvt.f64.f32	d0, s0
   10aac:	push	{r4, r5, r6, r7, lr}
   10ab0:	sub	sp, sp, #20
   10ab4:	add	r5, sp, #8
   10ab8:	mov	r6, r0
   10abc:	mov	r7, r1
   10ac0:	mov	r2, r5
   10ac4:	mov	r3, #1
   10ac8:	mov	r1, #0
   10acc:	mov	r0, sp
   10ad0:	vstr	d0, [sp]
   10ad4:	bl	4004 <cnxptiee@plt>
   10ad8:	subs	r4, r0, #0
   10adc:	movne	r0, #16
   10ae0:	beq	10aec <xport_write_float+0x44>
   10ae4:	add	sp, sp, #20
   10ae8:	pop	{r4, r5, r6, r7, pc}
   10aec:	ldr	r2, [r7, #1596]	; 0x63c
   10af0:	mov	r1, r5
   10af4:	mov	r0, r6
   10af8:	bl	3f20 <memcpy@plt>
   10afc:	mov	r0, r4
   10b00:	add	sp, sp, #20
   10b04:	pop	{r4, r5, r6, r7, pc}

00010b08 <xport_write_int32>:
   10b08:	vmov	s15, r2
   10b0c:	push	{r4, r5, r6, r7, lr}
   10b10:	sub	sp, sp, #20
   10b14:	add	r5, sp, #8
   10b18:	vcvt.f64.s32	d7, s15
   10b1c:	mov	r6, r0
   10b20:	mov	r7, r1
   10b24:	mov	r2, r5
   10b28:	mov	r3, #1
   10b2c:	mov	r1, #0
   10b30:	mov	r0, sp
   10b34:	vstr	d7, [sp]
   10b38:	bl	4004 <cnxptiee@plt>
   10b3c:	subs	r4, r0, #0
   10b40:	movne	r0, #16
   10b44:	beq	10b50 <xport_write_int32+0x48>
   10b48:	add	sp, sp, #20
   10b4c:	pop	{r4, r5, r6, r7, pc}
   10b50:	ldr	r2, [r7, #1596]	; 0x63c
   10b54:	mov	r1, r5
   10b58:	mov	r0, r6
   10b5c:	bl	3f20 <memcpy@plt>
   10b60:	mov	r0, r4
   10b64:	add	sp, sp, #20
   10b68:	pop	{r4, r5, r6, r7, pc}

00010b6c <xport_write_int16>:
   10b6c:	vmov	s15, r2
   10b70:	push	{r4, r5, r6, r7, lr}
   10b74:	sub	sp, sp, #20
   10b78:	add	r5, sp, #8
   10b7c:	vcvt.f64.s32	d7, s15
   10b80:	mov	r6, r0
   10b84:	mov	r7, r1
   10b88:	mov	r2, r5
   10b8c:	mov	r3, #1
   10b90:	mov	r1, #0
   10b94:	mov	r0, sp
   10b98:	vstr	d7, [sp]
   10b9c:	bl	4004 <cnxptiee@plt>
   10ba0:	subs	r4, r0, #0
   10ba4:	movne	r0, #16
   10ba8:	beq	10bb4 <xport_write_int16+0x48>
   10bac:	add	sp, sp, #20
   10bb0:	pop	{r4, r5, r6, r7, pc}
   10bb4:	ldr	r2, [r7, #1596]	; 0x63c
   10bb8:	mov	r1, r5
   10bbc:	mov	r0, r6
   10bc0:	bl	3f20 <memcpy@plt>
   10bc4:	mov	r0, r4
   10bc8:	add	sp, sp, #20
   10bcc:	pop	{r4, r5, r6, r7, pc}

00010bd0 <xport_write_int8>:
   10bd0:	vmov	s15, r2
   10bd4:	push	{r4, r5, r6, r7, lr}
   10bd8:	sub	sp, sp, #20
   10bdc:	add	r5, sp, #8
   10be0:	vcvt.f64.s32	d7, s15
   10be4:	mov	r6, r0
   10be8:	mov	r7, r1
   10bec:	mov	r2, r5
   10bf0:	mov	r3, #1
   10bf4:	mov	r1, #0
   10bf8:	mov	r0, sp
   10bfc:	vstr	d7, [sp]
   10c00:	bl	4004 <cnxptiee@plt>
   10c04:	subs	r4, r0, #0
   10c08:	movne	r0, #16
   10c0c:	beq	10c18 <xport_write_int8+0x48>
   10c10:	add	sp, sp, #20
   10c14:	pop	{r4, r5, r6, r7, pc}
   10c18:	ldr	r2, [r7, #1596]	; 0x63c
   10c1c:	mov	r1, r5
   10c20:	mov	r0, r6
   10c24:	bl	3f20 <memcpy@plt>
   10c28:	mov	r0, r4
   10c2c:	add	sp, sp, #20
   10c30:	pop	{r4, r5, r6, r7, pc}

00010c34 <xport_write_header_record>:
   10c34:	push	{r4, r5, r6, lr}
   10c38:	mov	r3, r1
   10c3c:	sub	sp, sp, #112	; 0x70
   10c40:	ldr	r2, [r1, #32]
   10c44:	ldr	r4, [r1, #28]
   10c48:	add	r1, r1, #16
   10c4c:	mov	r5, r0
   10c50:	ldm	r1, {r1, ip, lr}
   10c54:	str	r2, [sp, #20]
   10c58:	ldr	r2, [r3, #12]
   10c5c:	str	r4, [sp, #16]
   10c60:	str	r2, [sp]
   10c64:	ldr	r2, [pc, #96]	; 10ccc <xport_write_header_record+0x98>
   10c68:	add	r4, sp, #28
   10c6c:	stmib	sp, {r1, ip, lr}
   10c70:	add	r2, pc, r2
   10c74:	mov	r1, #81	; 0x51
   10c78:	mov	r0, r4
   10c7c:	bl	4280 <snprintf@plt>
   10c80:	mov	r0, r4
   10c84:	bl	41fc <strlen@plt>
   10c88:	ldr	r6, [pc, #64]	; 10cd0 <xport_write_header_record+0x9c>
   10c8c:	mov	r1, r4
   10c90:	add	r6, pc, r6
   10c94:	str	r6, [sp]
   10c98:	mov	r3, #80	; 0x50
   10c9c:	mov	r2, r0
   10ca0:	mov	r0, r5
   10ca4:	bl	4520 <readstat_write_bytes_as_lines@plt>
   10ca8:	cmp	r0, #0
   10cac:	bne	10cc4 <xport_write_header_record+0x90>
   10cb0:	mov	r3, r6
   10cb4:	mov	r0, r5
   10cb8:	mov	r2, #80	; 0x50
   10cbc:	mov	r1, #32
   10cc0:	bl	44e4 <readstat_write_line_padding@plt>
   10cc4:	add	sp, sp, #112	; 0x70
   10cc8:	pop	{r4, r5, r6, pc}
   10ccc:	.word	0x00015918
   10cd0:	.word	0x00015cf0

00010cd4 <xport_begin_data>:
   10cd4:	push	{r4, r5, r6, r7, r8, r9, lr}
   10cd8:	mov	r4, r0
   10cdc:	sub	sp, sp, #172	; 0xac
   10ce0:	add	r0, sp, #168	; 0xa8
   10ce4:	ldr	r3, [r4, #20]
   10ce8:	ldr	r6, [pc, #1644]	; 1135c <xport_begin_data+0x688>
   10cec:	str	r3, [r0, #-144]!	; 0xffffff70
   10cf0:	bl	4160 <localtime@plt>
   10cf4:	add	r6, pc, r6
   10cf8:	cmp	r0, #0
   10cfc:	moveq	r7, #39	; 0x27
   10d00:	beq	10e50 <xport_begin_data+0x17c>
   10d04:	ldr	lr, [r0]
   10d08:	ldr	r1, [pc, #1616]	; 11360 <xport_begin_data+0x68c>
   10d0c:	mov	ip, #100	; 0x64
   10d10:	ldr	r7, [r0, #12]
   10d14:	umull	r3, r2, r1, lr
   10d18:	umull	r5, r3, r1, r7
   10d1c:	lsr	r2, r2, #5
   10d20:	lsr	r3, r3, #5
   10d24:	mul	r2, ip, r2
   10d28:	mul	r3, ip, r3
   10d2c:	sub	r2, lr, r2
   10d30:	str	r2, [sp, #16]
   10d34:	ldr	r5, [r0, #4]
   10d38:	sub	r3, r7, r3
   10d3c:	ldr	r7, [pc, #1568]	; 11364 <xport_begin_data+0x690>
   10d40:	umull	r2, lr, r1, r5
   10d44:	ldr	r2, [pc, #1564]	; 11368 <xport_begin_data+0x694>
   10d48:	lsr	lr, lr, #5
   10d4c:	add	r2, pc, r2
   10d50:	mul	lr, ip, lr
   10d54:	sub	lr, r5, lr
   10d58:	str	lr, [sp, #12]
   10d5c:	ldr	r5, [r0, #8]
   10d60:	umull	r8, lr, r1, r5
   10d64:	lsr	lr, lr, #5
   10d68:	mul	lr, ip, lr
   10d6c:	sub	lr, r5, lr
   10d70:	str	lr, [sp, #8]
   10d74:	ldr	lr, [r0, #20]
   10d78:	add	r5, sp, #28
   10d7c:	umull	r8, r1, r1, lr
   10d80:	lsr	r1, r1, #5
   10d84:	mul	r1, ip, r1
   10d88:	sub	r1, lr, r1
   10d8c:	str	r1, [sp, #4]
   10d90:	ldr	ip, [r0, #16]
   10d94:	ldr	r1, [r6, r7]
   10d98:	mov	r0, r5
   10d9c:	add	r1, r1, ip, lsl #2
   10da0:	str	r1, [sp]
   10da4:	add	r6, sp, #48	; 0x30
   10da8:	mov	r1, #17
   10dac:	bl	4280 <snprintf@plt>
   10db0:	mov	r2, #36	; 0x24
   10db4:	mov	r1, #0
   10db8:	mov	r0, r6
   10dbc:	bl	42a4 <memset@plt>
   10dc0:	ldr	r3, [pc, #1444]	; 1136c <xport_begin_data+0x698>
   10dc4:	ldr	r2, [r4, #8]
   10dc8:	add	r3, pc, r3
   10dcc:	add	r3, r3, #24
   10dd0:	cmp	r2, #8
   10dd4:	ldm	r3, {r0, r1}
   10dd8:	mov	r3, #0
   10ddc:	strb	r3, [sp, #56]	; 0x38
   10de0:	stm	r6, {r0, r1}
   10de4:	beq	11278 <xport_begin_data+0x5a4>
   10de8:	ldr	r2, [pc, #1408]	; 11370 <xport_begin_data+0x69c>
   10dec:	mov	r3, #0
   10df0:	add	r8, sp, #84	; 0x54
   10df4:	add	r2, pc, r2
   10df8:	mov	r1, #81	; 0x51
   10dfc:	str	r3, [sp, #20]
   10e00:	str	r3, [sp, #16]
   10e04:	str	r3, [sp, #12]
   10e08:	str	r3, [sp, #8]
   10e0c:	str	r3, [sp, #4]
   10e10:	str	r3, [sp]
   10e14:	mov	r0, r8
   10e18:	mov	r3, r6
   10e1c:	bl	4280 <snprintf@plt>
   10e20:	mov	r0, r8
   10e24:	bl	41fc <strlen@plt>
   10e28:	ldr	r9, [pc, #1348]	; 11374 <xport_begin_data+0x6a0>
   10e2c:	mov	r1, r8
   10e30:	add	r9, pc, r9
   10e34:	str	r9, [sp]
   10e38:	mov	r3, #80	; 0x50
   10e3c:	mov	r2, r0
   10e40:	mov	r0, r4
   10e44:	bl	4520 <readstat_write_bytes_as_lines@plt>
   10e48:	subs	r7, r0, #0
   10e4c:	beq	10e5c <xport_begin_data+0x188>
   10e50:	mov	r0, r7
   10e54:	add	sp, sp, #172	; 0xac
   10e58:	pop	{r4, r5, r6, r7, r8, r9, pc}
   10e5c:	mov	r3, r9
   10e60:	mov	r2, #80	; 0x50
   10e64:	mov	r1, #32
   10e68:	mov	r0, r4
   10e6c:	bl	44e4 <readstat_write_line_padding@plt>
   10e70:	subs	r7, r0, #0
   10e74:	bne	10e50 <xport_begin_data+0x17c>
   10e78:	ldr	r2, [pc, #1272]	; 11378 <xport_begin_data+0x6a4>
   10e7c:	ldr	r3, [pc, #1272]	; 1137c <xport_begin_data+0x6a8>
   10e80:	add	r2, pc, r2
   10e84:	ldr	r0, [pc, #1268]	; 11380 <xport_begin_data+0x6ac>
   10e88:	ldr	r1, [pc, #1268]	; 11384 <xport_begin_data+0x6b0>
   10e8c:	str	r2, [sp, #4]
   10e90:	ldr	r2, [pc, #1264]	; 11388 <xport_begin_data+0x6b4>
   10e94:	add	r3, pc, r3
   10e98:	add	r0, pc, r0
   10e9c:	add	r1, pc, r1
   10ea0:	str	r3, [sp]
   10ea4:	add	r2, pc, r2
   10ea8:	str	r0, [sp, #12]
   10eac:	str	r1, [sp, #8]
   10eb0:	str	r5, [sp, #20]
   10eb4:	mov	r1, #81	; 0x51
   10eb8:	str	r9, [sp, #16]
   10ebc:	mov	r0, r8
   10ec0:	bl	4280 <snprintf@plt>
   10ec4:	mov	r0, r8
   10ec8:	bl	41fc <strlen@plt>
   10ecc:	str	r9, [sp]
   10ed0:	mov	r3, #80	; 0x50
   10ed4:	mov	r1, r8
   10ed8:	mov	r2, r0
   10edc:	mov	r0, r4
   10ee0:	bl	4520 <readstat_write_bytes_as_lines@plt>
   10ee4:	subs	r7, r0, #0
   10ee8:	bne	10e50 <xport_begin_data+0x17c>
   10eec:	mov	r3, r9
   10ef0:	mov	r2, #80	; 0x50
   10ef4:	mov	r1, #32
   10ef8:	mov	r0, r4
   10efc:	bl	44e4 <readstat_write_line_padding@plt>
   10f00:	subs	r7, r0, #0
   10f04:	bne	10e50 <xport_begin_data+0x17c>
   10f08:	mov	r0, r5
   10f0c:	bl	41fc <strlen@plt>
   10f10:	str	r9, [sp]
   10f14:	mov	r3, #80	; 0x50
   10f18:	mov	r1, r5
   10f1c:	mov	r2, r0
   10f20:	mov	r0, r4
   10f24:	bl	4520 <readstat_write_bytes_as_lines@plt>
   10f28:	subs	r7, r0, #0
   10f2c:	bne	10e50 <xport_begin_data+0x17c>
   10f30:	mov	r3, r9
   10f34:	mov	r2, #80	; 0x50
   10f38:	mov	r1, #32
   10f3c:	mov	r0, r4
   10f40:	bl	44e4 <readstat_write_line_padding@plt>
   10f44:	subs	r7, r0, #0
   10f48:	bne	10e50 <xport_begin_data+0x17c>
   10f4c:	mov	r2, #36	; 0x24
   10f50:	mov	r1, r7
   10f54:	mov	r0, r6
   10f58:	bl	42a4 <memset@plt>
   10f5c:	ldr	r3, [pc, #1064]	; 1138c <xport_begin_data+0x6b8>
   10f60:	ldr	r2, [r4, #8]
   10f64:	add	r3, pc, r3
   10f68:	add	r3, r3, #36	; 0x24
   10f6c:	cmp	r2, #8
   10f70:	ldm	r3, {r0, r1}
   10f74:	mov	r2, #160	; 0xa0
   10f78:	mov	r3, #140	; 0x8c
   10f7c:	lsr	ip, r1, #16
   10f80:	strh	r7, [sp, #55]	; 0x37
   10f84:	str	r0, [r6]
   10f88:	strh	r1, [sp, #52]	; 0x34
   10f8c:	strb	ip, [sp, #54]	; 0x36
   10f90:	str	r2, [sp, #72]	; 0x48
   10f94:	str	r3, [sp, #80]	; 0x50
   10f98:	beq	11290 <xport_begin_data+0x5bc>
   10f9c:	mov	r2, #160	; 0xa0
   10fa0:	str	r2, [sp, #12]
   10fa4:	ldr	r2, [pc, #996]	; 11390 <xport_begin_data+0x6bc>
   10fa8:	mov	r3, #0
   10fac:	mov	r1, #140	; 0x8c
   10fb0:	add	r2, pc, r2
   10fb4:	str	r1, [sp, #20]
   10fb8:	str	r3, [sp, #16]
   10fbc:	mov	r1, #81	; 0x51
   10fc0:	str	r3, [sp, #8]
   10fc4:	str	r3, [sp, #4]
   10fc8:	str	r3, [sp]
   10fcc:	mov	r0, r8
   10fd0:	mov	r3, r6
   10fd4:	bl	4280 <snprintf@plt>
   10fd8:	mov	r0, r8
   10fdc:	bl	41fc <strlen@plt>
   10fe0:	ldr	r9, [pc, #940]	; 11394 <xport_begin_data+0x6c0>
   10fe4:	mov	r3, #80	; 0x50
   10fe8:	add	r9, pc, r9
   10fec:	str	r9, [sp]
   10ff0:	mov	r1, r8
   10ff4:	mov	r2, r0
   10ff8:	mov	r0, r4
   10ffc:	bl	4520 <readstat_write_bytes_as_lines@plt>
   11000:	subs	r7, r0, #0
   11004:	bne	10e50 <xport_begin_data+0x17c>
   11008:	mov	r3, r9
   1100c:	mov	r2, #80	; 0x50
   11010:	mov	r1, #32
   11014:	mov	r0, r4
   11018:	bl	44e4 <readstat_write_line_padding@plt>
   1101c:	subs	r7, r0, #0
   11020:	bne	10e50 <xport_begin_data+0x17c>
   11024:	mov	r2, #36	; 0x24
   11028:	mov	r1, r7
   1102c:	mov	r0, r6
   11030:	bl	42a4 <memset@plt>
   11034:	ldr	r3, [pc, #860]	; 11398 <xport_begin_data+0x6c4>
   11038:	ldr	r2, [r4, #8]
   1103c:	add	r3, pc, r3
   11040:	add	r3, r3, #48	; 0x30
   11044:	cmp	r2, #8
   11048:	ldm	r3, {r0, r1}
   1104c:	strb	r7, [sp, #56]	; 0x38
   11050:	stm	r6, {r0, r1}
   11054:	beq	112b0 <xport_begin_data+0x5dc>
   11058:	mov	r2, #0
   1105c:	str	r2, [sp, #20]
   11060:	str	r2, [sp, #16]
   11064:	str	r2, [sp, #12]
   11068:	str	r2, [sp, #8]
   1106c:	str	r2, [sp, #4]
   11070:	str	r2, [sp]
   11074:	ldr	r2, [pc, #800]	; 1139c <xport_begin_data+0x6c8>
   11078:	mov	r3, r6
   1107c:	add	r2, pc, r2
   11080:	mov	r1, #81	; 0x51
   11084:	mov	r0, r8
   11088:	bl	4280 <snprintf@plt>
   1108c:	mov	r0, r8
   11090:	bl	41fc <strlen@plt>
   11094:	ldr	r6, [pc, #772]	; 113a0 <xport_begin_data+0x6cc>
   11098:	mov	r3, #80	; 0x50
   1109c:	add	r6, pc, r6
   110a0:	str	r6, [sp]
   110a4:	mov	r1, r8
   110a8:	mov	r2, r0
   110ac:	mov	r0, r4
   110b0:	bl	4520 <readstat_write_bytes_as_lines@plt>
   110b4:	subs	r7, r0, #0
   110b8:	bne	10e50 <xport_begin_data+0x17c>
   110bc:	mov	r3, r6
   110c0:	mov	r2, #80	; 0x50
   110c4:	mov	r1, #32
   110c8:	mov	r0, r4
   110cc:	bl	44e4 <readstat_write_line_padding@plt>
   110d0:	subs	r7, r0, #0
   110d4:	bne	10e50 <xport_begin_data+0x17c>
   110d8:	ldr	r3, [r4, #8]
   110dc:	cmp	r3, #8
   110e0:	ldrb	r3, [r4, #188]	; 0xbc
   110e4:	beq	112c4 <xport_begin_data+0x5f0>
   110e8:	cmp	r3, #0
   110ec:	addne	r0, r4, #188	; 0xbc
   110f0:	ldreq	r0, [pc, #684]	; 113a4 <xport_begin_data+0x6d0>
   110f4:	addeq	r0, pc, r0
   110f8:	ldr	r2, [pc, #680]	; 113a8 <xport_begin_data+0x6d4>
   110fc:	ldr	r3, [pc, #680]	; 113ac <xport_begin_data+0x6d8>
   11100:	add	r2, pc, r2
   11104:	add	r3, pc, r3
   11108:	ldr	r6, [pc, #672]	; 113b0 <xport_begin_data+0x6dc>
   1110c:	ldr	r1, [pc, #672]	; 113b4 <xport_begin_data+0x6e0>
   11110:	str	r2, [sp, #8]
   11114:	str	r3, [sp, #4]
   11118:	ldr	r2, [pc, #664]	; 113b8 <xport_begin_data+0x6e4>
   1111c:	ldr	r3, [pc, #664]	; 113bc <xport_begin_data+0x6e8>
   11120:	add	r6, pc, r6
   11124:	add	r1, pc, r1
   11128:	add	r3, pc, r3
   1112c:	add	r2, pc, r2
   11130:	str	r0, [sp]
   11134:	str	r1, [sp, #12]
   11138:	str	r5, [sp, #20]
   1113c:	mov	r1, #81	; 0x51
   11140:	str	r6, [sp, #16]
   11144:	mov	r0, r8
   11148:	bl	4280 <snprintf@plt>
   1114c:	mov	r0, r8
   11150:	bl	41fc <strlen@plt>
   11154:	str	r6, [sp]
   11158:	mov	r3, #80	; 0x50
   1115c:	mov	r1, r8
   11160:	mov	r2, r0
   11164:	mov	r0, r4
   11168:	bl	4520 <readstat_write_bytes_as_lines@plt>
   1116c:	subs	r7, r0, #0
   11170:	bne	10e50 <xport_begin_data+0x17c>
   11174:	mov	r3, r6
   11178:	mov	r2, #80	; 0x50
   1117c:	mov	r1, #32
   11180:	mov	r0, r4
   11184:	bl	44e4 <readstat_write_line_padding@plt>
   11188:	mov	r7, r0
   1118c:	cmp	r7, #0
   11190:	bne	10e50 <xport_begin_data+0x17c>
   11194:	ldr	r2, [pc, #548]	; 113c0 <xport_begin_data+0x6ec>
   11198:	add	r1, r4, #88	; 0x58
   1119c:	add	r2, pc, r2
   111a0:	str	r2, [sp, #8]
   111a4:	str	r2, [sp]
   111a8:	ldr	r2, [pc, #532]	; 113c4 <xport_begin_data+0x6f0>
   111ac:	mov	r3, r5
   111b0:	str	r1, [sp, #4]
   111b4:	add	r2, pc, r2
   111b8:	mov	r1, #81	; 0x51
   111bc:	mov	r0, r8
   111c0:	bl	4280 <snprintf@plt>
   111c4:	mov	r1, r8
   111c8:	mov	r0, r4
   111cc:	bl	10944 <xport_write_record>
   111d0:	subs	r7, r0, #0
   111d4:	bne	10e50 <xport_begin_data+0x17c>
   111d8:	mov	r2, #36	; 0x24
   111dc:	mov	r1, r7
   111e0:	mov	r0, r8
   111e4:	bl	42a4 <memset@plt>
   111e8:	ldr	r3, [pc, #472]	; 113c8 <xport_begin_data+0x6f4>
   111ec:	ldr	ip, [r4, #8]
   111f0:	add	r3, pc, r3
   111f4:	add	r3, r3, #60	; 0x3c
   111f8:	ldr	r2, [r4, #28]
   111fc:	ldm	r3, {r0, r1}
   11200:	cmp	ip, #8
   11204:	strb	r7, [sp, #92]	; 0x5c
   11208:	stm	r8, {r0, r1}
   1120c:	str	r2, [sp, #100]	; 0x64
   11210:	beq	11330 <xport_begin_data+0x65c>
   11214:	mov	r1, r8
   11218:	mov	r0, r4
   1121c:	bl	10c34 <xport_write_header_record>
   11220:	subs	r7, r0, #0
   11224:	bne	10e50 <xport_begin_data+0x17c>
   11228:	mov	r0, r4
   1122c:	bl	4f4c <xport_write_variables>
   11230:	subs	r7, r0, #0
   11234:	bne	10e50 <xport_begin_data+0x17c>
   11238:	mov	r2, #36	; 0x24
   1123c:	mov	r1, r7
   11240:	mov	r0, r8
   11244:	bl	42a4 <memset@plt>
   11248:	ldr	r2, [r4, #8]
   1124c:	ldr	r3, [pc, #376]	; 113cc <xport_begin_data+0x6f8>
   11250:	cmp	r2, #8
   11254:	str	r7, [sp, #88]	; 0x58
   11258:	strb	r7, [sp, #92]	; 0x5c
   1125c:	str	r3, [sp, #84]	; 0x54
   11260:	beq	11344 <xport_begin_data+0x670>
   11264:	mov	r1, r8
   11268:	mov	r0, r4
   1126c:	bl	10c34 <xport_write_header_record>
   11270:	mov	r7, r0
   11274:	b	10e50 <xport_begin_data+0x17c>
   11278:	ldr	r3, [pc, #336]	; 113d0 <xport_begin_data+0x6fc>
   1127c:	add	r3, pc, r3
   11280:	ldm	r3, {r0, r1}
   11284:	str	r0, [sp, #48]	; 0x30
   11288:	strh	r1, [sp, #52]	; 0x34
   1128c:	b	10de8 <xport_begin_data+0x114>
   11290:	ldr	r3, [pc, #316]	; 113d4 <xport_begin_data+0x700>
   11294:	add	r3, pc, r3
   11298:	ldm	r3, {r0, r1}
   1129c:	lsr	r3, r1, #16
   112a0:	str	r0, [r6]
   112a4:	strh	r1, [sp, #52]	; 0x34
   112a8:	strb	r3, [sp, #54]	; 0x36
   112ac:	b	10f9c <xport_begin_data+0x2c8>
   112b0:	ldr	r3, [pc, #288]	; 113d8 <xport_begin_data+0x704>
   112b4:	add	r3, pc, r3
   112b8:	ldm	r3, {r0, r1}
   112bc:	stm	r6, {r0, r1}
   112c0:	b	11058 <xport_begin_data+0x384>
   112c4:	cmp	r3, #0
   112c8:	addne	r0, r4, #188	; 0xbc
   112cc:	ldreq	r0, [pc, #264]	; 113dc <xport_begin_data+0x708>
   112d0:	addeq	r0, pc, r0
   112d4:	ldr	r2, [pc, #260]	; 113e0 <xport_begin_data+0x70c>
   112d8:	ldr	r3, [pc, #260]	; 113e4 <xport_begin_data+0x710>
   112dc:	add	r2, pc, r2
   112e0:	add	r3, pc, r3
   112e4:	ldr	r1, [pc, #252]	; 113e8 <xport_begin_data+0x714>
   112e8:	str	r2, [sp, #8]
   112ec:	str	r3, [sp, #4]
   112f0:	ldr	r2, [pc, #244]	; 113ec <xport_begin_data+0x718>
   112f4:	ldr	r3, [pc, #244]	; 113f0 <xport_begin_data+0x71c>
   112f8:	add	r1, pc, r1
   112fc:	str	r0, [sp]
   11300:	str	r1, [sp, #12]
   11304:	add	r3, pc, r3
   11308:	add	r2, pc, r2
   1130c:	mov	r1, #81	; 0x51
   11310:	str	r5, [sp, #16]
   11314:	mov	r0, r8
   11318:	bl	4280 <snprintf@plt>
   1131c:	mov	r1, r8
   11320:	mov	r0, r4
   11324:	bl	10944 <xport_write_record>
   11328:	mov	r7, r0
   1132c:	b	1118c <xport_begin_data+0x4b8>
   11330:	ldr	r3, [pc, #188]	; 113f4 <xport_begin_data+0x720>
   11334:	add	r3, pc, r3
   11338:	ldm	r3, {r0, r1}
   1133c:	stm	r8, {r0, r1}
   11340:	b	11214 <xport_begin_data+0x540>
   11344:	ldr	r3, [pc, #172]	; 113f8 <xport_begin_data+0x724>
   11348:	add	r3, pc, r3
   1134c:	ldm	r3, {r0, r1}
   11350:	str	r0, [r8]
   11354:	strh	r1, [r8, #4]
   11358:	b	11264 <xport_begin_data+0x590>
   1135c:	.word	0x00034304
   11360:	.word	0x51eb851f
   11364:	.word	0x000002d8
   11368:	.word	0x00015884
   1136c:	.word	0x00015744
   11370:	.word	0x00015794
   11374:	.word	0x00015b50
   11378:	.word	0x000157b4
   1137c:	.word	0x0001575c
   11380:	.word	0x0001578c
   11384:	.word	0x00015790
   11388:	.word	0x00015750
   1138c:	.word	0x000155a8
   11390:	.word	0x000155d8
   11394:	.word	0x00015998
   11398:	.word	0x000154d0
   1139c:	.word	0x0001550c
   113a0:	.word	0x000158e4
   113a4:	.word	0x0001507c
   113a8:	.word	0x0001552c
   113ac:	.word	0x00015560
   113b0:	.word	0x00015860
   113b4:	.word	0x00015500
   113b8:	.word	0x000154c8
   113bc:	.word	0x000154c8
   113c0:	.word	0x000157e4
   113c4:	.word	0x000154b8
   113c8:	.word	0x0001531c
   113cc:	.word	0x0053424f
   113d0:	.word	0x00015218
   113d4:	.word	0x00015224
   113d8:	.word	0x00015214
   113dc:	.word	0x00014ea0
   113e0:	.word	0x00015350
   113e4:	.word	0x00015384
   113e8:	.word	0x0001532c
   113ec:	.word	0x00015334
   113f0:	.word	0x000152ec
   113f4:	.word	0x000151ac
   113f8:	.word	0x000151a0

000113fc <readstat_begin_writing_xport>:
   113fc:	push	{r4, r5, lr}
   11400:	ldr	ip, [pc, #204]	; 114d4 <readstat_begin_writing_xport+0xd8>
   11404:	ldr	lr, [pc, #204]	; 114d8 <readstat_begin_writing_xport+0xdc>
   11408:	add	ip, pc, ip
   1140c:	add	lr, pc, lr
   11410:	str	lr, [r0, #292]	; 0x124
   11414:	str	ip, [r0, #236]	; 0xec
   11418:	ldr	r4, [pc, #188]	; 114dc <readstat_begin_writing_xport+0xe0>
   1141c:	ldr	lr, [pc, #188]	; 114e0 <readstat_begin_writing_xport+0xe4>
   11420:	ldr	ip, [pc, #188]	; 114e4 <readstat_begin_writing_xport+0xe8>
   11424:	ldr	r3, [r0, #8]
   11428:	add	r4, pc, r4
   1142c:	add	lr, pc, lr
   11430:	add	ip, pc, ip
   11434:	str	r4, [r0, #240]	; 0xf0
   11438:	str	lr, [r0, #244]	; 0xf4
   1143c:	str	ip, [r0, #248]	; 0xf8
   11440:	ldr	r4, [pc, #160]	; 114e8 <readstat_begin_writing_xport+0xec>
   11444:	ldr	lr, [pc, #160]	; 114ec <readstat_begin_writing_xport+0xf0>
   11448:	ldr	ip, [pc, #160]	; 114f0 <readstat_begin_writing_xport+0xf4>
   1144c:	cmp	r3, #0
   11450:	moveq	r3, #8
   11454:	add	r4, pc, r4
   11458:	add	lr, pc, lr
   1145c:	add	ip, pc, ip
   11460:	ldr	r5, [pc, #140]	; 114f4 <readstat_begin_writing_xport+0xf8>
   11464:	streq	r3, [r0, #8]
   11468:	str	r4, [r0, #252]	; 0xfc
   1146c:	ldr	r3, [pc, #132]	; 114f8 <readstat_begin_writing_xport+0xfc>
   11470:	str	lr, [r0, #256]	; 0x100
   11474:	str	ip, [r0, #264]	; 0x108
   11478:	ldr	r4, [pc, #124]	; 114fc <readstat_begin_writing_xport+0x100>
   1147c:	ldr	lr, [pc, #124]	; 11500 <readstat_begin_writing_xport+0x104>
   11480:	ldr	ip, [pc, #124]	; 11504 <readstat_begin_writing_xport+0x108>
   11484:	add	r5, pc, r5
   11488:	add	r4, pc, r4
   1148c:	add	lr, pc, lr
   11490:	add	ip, pc, ip
   11494:	str	lr, [r0, #272]	; 0x110
   11498:	str	ip, [r0, #228]	; 0xe4
   1149c:	str	r4, [r0, #268]	; 0x10c
   114a0:	ldr	lr, [pc, #96]	; 11508 <readstat_begin_writing_xport+0x10c>
   114a4:	ldr	r4, [r5, r3]
   114a8:	ldr	ip, [pc, #92]	; 1150c <readstat_begin_writing_xport+0x110>
   114ac:	ldr	r3, [pc, #92]	; 11510 <readstat_begin_writing_xport+0x114>
   114b0:	add	lr, pc, lr
   114b4:	add	ip, pc, ip
   114b8:	add	r3, pc, r3
   114bc:	str	r4, [r0, #232]	; 0xe8
   114c0:	str	lr, [r0, #276]	; 0x114
   114c4:	str	ip, [r0, #284]	; 0x11c
   114c8:	str	r3, [r0, #280]	; 0x118
   114cc:	pop	{r4, r5, lr}
   114d0:	b	3f68 <readstat_begin_writing_file@plt>
   114d4:	.word	0xfffff7c0
   114d8:	.word	0xfffff5fc
   114dc:	.word	0xfffff73c
   114e0:	.word	0xfffff6d4
   114e4:	.word	0xfffff670
   114e8:	.word	0xfffff48c
   114ec:	.word	0xfffff54c
   114f0:	.word	0xfffff44c
   114f4:	.word	0x00033b74
   114f8:	.word	0x000002ec
   114fc:	.word	0xfffff3d0
   11500:	.word	0xfffff434
   11504:	.word	0xfffff5dc
   11508:	.word	0xfffff81c
   1150c:	.word	0xfffff3dc
   11510:	.word	0xfffff3b0

00011514 <por_ctx_init>:
   11514:	push	{r4, lr}
   11518:	mov	r1, #660	; 0x294
   1151c:	mov	r0, #1
   11520:	bl	3d58 <calloc@plt>
   11524:	mov	r2, #32
   11528:	mov	r3, #20
   1152c:	mov	r4, r0
   11530:	mov	r0, #1024	; 0x400
   11534:	strb	r2, [r4, #48]	; 0x30
   11538:	str	r3, [r4, #608]	; 0x260
   1153c:	bl	4190 <ck_hash_table_init@plt>
   11540:	str	r0, [r4, #656]	; 0x290
   11544:	mov	r0, r4
   11548:	pop	{r4, pc}

0001154c <por_ctx_free>:
   1154c:	push	{r4, r5, r6, lr}
   11550:	mov	r5, r0
   11554:	ldr	r0, [r0, #616]	; 0x268
   11558:	cmp	r0, #0
   1155c:	beq	11564 <por_ctx_free+0x18>
   11560:	bl	3ec0 <free@plt>
   11564:	ldr	r2, [r5, #652]	; 0x28c
   11568:	cmp	r2, #0
   1156c:	beq	115b8 <por_ctx_free+0x6c>
   11570:	ldr	r1, [r5, #632]	; 0x278
   11574:	cmp	r1, #0
   11578:	ble	115b0 <por_ctx_free+0x64>
   1157c:	mov	r4, #0
   11580:	mov	r6, r4
   11584:	add	r3, r2, r4
   11588:	add	r6, r6, #1
   1158c:	ldr	r3, [r3, #264]	; 0x108
   11590:	add	r4, r4, #280	; 0x118
   11594:	subs	r0, r3, #0
   11598:	beq	115a8 <por_ctx_free+0x5c>
   1159c:	bl	3ec0 <free@plt>
   115a0:	ldr	r1, [r5, #632]	; 0x278
   115a4:	ldr	r2, [r5, #652]	; 0x28c
   115a8:	cmp	r6, r1
   115ac:	blt	11584 <por_ctx_free+0x38>
   115b0:	mov	r0, r2
   115b4:	bl	3ec0 <free@plt>
   115b8:	ldr	r2, [r5, #648]	; 0x288
   115bc:	cmp	r2, #0
   115c0:	beq	11600 <por_ctx_free+0xb4>
   115c4:	ldr	r1, [r5, #632]	; 0x278
   115c8:	cmp	r1, #0
   115cc:	ble	115f8 <por_ctx_free+0xac>
   115d0:	mov	r4, #0
   115d4:	ldr	r3, [r2, r4, lsl #2]
   115d8:	add	r4, r4, #1
   115dc:	subs	r0, r3, #0
   115e0:	beq	115f0 <por_ctx_free+0xa4>
   115e4:	bl	3ec0 <free@plt>
   115e8:	ldr	r1, [r5, #632]	; 0x278
   115ec:	ldr	r2, [r5, #648]	; 0x288
   115f0:	cmp	r4, r1
   115f4:	blt	115d4 <por_ctx_free+0x88>
   115f8:	mov	r0, r2
   115fc:	bl	3ec0 <free@plt>
   11600:	ldr	r0, [r5, #656]	; 0x290
   11604:	cmp	r0, #0
   11608:	beq	11610 <por_ctx_free+0xc4>
   1160c:	bl	4244 <ck_hash_table_free@plt>
   11610:	ldr	r0, [r5, #612]	; 0x264
   11614:	cmp	r0, #0
   11618:	beq	11620 <por_ctx_free+0xd4>
   1161c:	bl	3dd0 <iconv_close@plt>
   11620:	mov	r0, r5
   11624:	pop	{r4, r5, r6, lr}
   11628:	b	3ec0 <free@plt>

0001162c <por_utf8_encode>:
   1162c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11630:	sub	sp, sp, #12
   11634:	cmp	r1, #0
   11638:	ldr	r9, [sp, #48]	; 0x30
   1163c:	beq	1171c <por_utf8_encode+0xf0>
   11640:	mov	r6, r3
   11644:	ldr	sl, [pc, #216]	; 11724 <por_utf8_encode+0xf8>
   11648:	ldr	r3, [pc, #216]	; 11728 <por_utf8_encode+0xfc>
   1164c:	mov	r7, r2
   11650:	mov	r5, r0
   11654:	add	fp, r0, r1
   11658:	mov	r4, #0
   1165c:	add	r3, pc, r3
   11660:	str	r3, [sp, #4]
   11664:	ldrb	r2, [r5], #1
   11668:	lsl	r2, r2, #1
   1166c:	ldrh	r2, [r9, r2]
   11670:	cmp	r2, #0
   11674:	beq	116ac <por_utf8_encode+0x80>
   11678:	cmp	r2, #31
   1167c:	bls	1170c <por_utf8_encode+0xe0>
   11680:	cmp	r2, #127	; 0x7f
   11684:	bls	116f4 <por_utf8_encode+0xc8>
   11688:	ldr	r3, [pc, #156]	; 1172c <por_utf8_encode+0x100>
   1168c:	cmp	r2, r3
   11690:	bhi	116b0 <por_utf8_encode+0x84>
   11694:	add	r1, r4, #2
   11698:	cmp	r6, r1
   1169c:	bcs	116bc <por_utf8_encode+0x90>
   116a0:	mov	r0, r4
   116a4:	add	sp, sp, #12
   116a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   116ac:	mov	r2, sl
   116b0:	add	r1, r4, #3
   116b4:	cmp	r6, r1
   116b8:	bcc	116a0 <por_utf8_encode+0x74>
   116bc:	add	r8, r7, r4
   116c0:	mov	r0, r8
   116c4:	ldr	r1, [sp, #4]
   116c8:	bl	43e8 <sprintf@plt>
   116cc:	cmp	r0, #0
   116d0:	addgt	r4, r4, r0
   116d4:	addle	r4, r4, #1
   116d8:	movle	r3, #32
   116dc:	strble	r3, [r8]
   116e0:	cmp	fp, r5
   116e4:	bne	11664 <por_utf8_encode+0x38>
   116e8:	mov	r0, r4
   116ec:	add	sp, sp, #12
   116f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   116f4:	add	r1, r4, #1
   116f8:	cmp	r1, r6
   116fc:	bhi	116a0 <por_utf8_encode+0x74>
   11700:	strb	r2, [r7, r4]
   11704:	mov	r4, r1
   11708:	b	116e0 <por_utf8_encode+0xb4>
   1170c:	mvn	r4, #0
   11710:	mov	r0, r4
   11714:	add	sp, sp, #12
   11718:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1171c:	mov	r4, r1
   11720:	b	116a0 <por_utf8_encode+0x74>
   11724:	.word	0x0000fffd
   11728:	.word	0x00015030
   1172c:	.word	0x000007ff

00011730 <por_utf8_decode>:
   11730:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11734:	sub	sp, sp, #20
   11738:	mov	r7, #0
   1173c:	subs	sl, r3, #0
   11740:	str	r7, [sp, #8]
   11744:	str	r7, [sp, #12]
   11748:	ldr	r9, [sp, #56]	; 0x38
   1174c:	beq	117fc <por_utf8_decode+0xcc>
   11750:	ldr	r3, [pc, #196]	; 1181c <por_utf8_decode+0xec>
   11754:	mov	r5, r0
   11758:	add	r3, pc, r3
   1175c:	str	r3, [sp, #4]
   11760:	add	r3, sp, #8
   11764:	mov	r6, r2
   11768:	mov	r4, #1
   1176c:	add	fp, sp, #12
   11770:	str	r3, [sp]
   11774:	b	117a0 <por_utf8_decode+0x70>
   11778:	ldrb	r3, [r9, r3]
   1177c:	add	r5, r5, #1
   11780:	cmp	r3, #0
   11784:	beq	1180c <por_utf8_decode+0xdc>
   11788:	strb	r3, [r6]
   1178c:	add	r4, r4, #1
   11790:	cmp	sl, r4
   11794:	str	r7, [sp, #12]
   11798:	add	r6, r6, #1
   1179c:	bcc	11800 <por_utf8_decode+0xd0>
   117a0:	ldrb	r3, [r5]
   117a4:	mov	r8, r4
   117a8:	sub	r2, r3, #32
   117ac:	cmp	r2, #94	; 0x5e
   117b0:	bls	11778 <por_utf8_decode+0x48>
   117b4:	mov	r3, fp
   117b8:	ldr	r2, [sp]
   117bc:	ldr	r1, [sp, #4]
   117c0:	mov	r0, r5
   117c4:	bl	428c <__isoc99_sscanf@plt>
   117c8:	cmp	r0, #0
   117cc:	beq	1180c <por_utf8_decode+0xdc>
   117d0:	ldr	r3, [sp, #8]
   117d4:	ldr	r2, [sp, #60]	; 0x3c
   117d8:	cmp	r3, r2
   117dc:	bcs	1180c <por_utf8_decode+0xdc>
   117e0:	ldrb	r3, [r9, r3]
   117e4:	cmp	r3, #0
   117e8:	beq	1180c <por_utf8_decode+0xdc>
   117ec:	ldr	r2, [sp, #12]
   117f0:	strb	r3, [r6]
   117f4:	add	r5, r5, r2
   117f8:	b	1178c <por_utf8_decode+0x5c>
   117fc:	mov	r8, sl
   11800:	mov	r0, r8
   11804:	add	sp, sp, #20
   11808:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1180c:	mvn	r8, #0
   11810:	mov	r0, r8
   11814:	add	sp, sp, #20
   11818:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1181c:	.word	0x00014f38

00011820 <readstat_por_parse_double>:
   11820:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11824:	vpush	{d8-d9}
   11828:	add	r8, r0, r1
   1182c:	cmp	r0, r8
   11830:	mov	r7, r0
   11834:	sub	sp, sp, #1072	; 0x430
   11838:	sub	sp, sp, #4
   1183c:	str	r1, [sp, #44]	; 0x2c
   11840:	str	r2, [sp, #32]
   11844:	str	r3, [sp, #40]	; 0x28
   11848:	beq	11b14 <readstat_por_parse_double+0x2f4>
   1184c:	vldr	d7, [pc, #932]	; 11bf8 <readstat_por_parse_double+0x3d8>
   11850:	vldr	d6, [pc, #936]	; 11c00 <readstat_por_parse_double+0x3e0>
   11854:	ldr	r3, [pc, #948]	; 11c10 <readstat_por_parse_double+0x3f0>
   11858:	ldr	fp, [pc, #948]	; 11c14 <readstat_por_parse_double+0x3f4>
   1185c:	add	r3, pc, r3
   11860:	str	r3, [sp, #20]
   11864:	vmov.f64	d1, d7
   11868:	ldr	r3, [pc, #936]	; 11c18 <readstat_por_parse_double+0x3f8>
   1186c:	vmov.f64	d3, d7
   11870:	vmov.f64	d5, d7
   11874:	vmov.f64	d8, d7
   11878:	vmov.f64	d0, d7
   1187c:	vmov.f64	d2, d6
   11880:	mov	r0, #0
   11884:	add	fp, pc, fp
   11888:	add	r3, pc, r3
   1188c:	mov	r5, #1
   11890:	mov	r2, r0
   11894:	mov	r9, r0
   11898:	mov	r6, r7
   1189c:	mov	sl, #4
   118a0:	str	r3, [sp, #24]
   118a4:	add	r3, fp, #168	; 0xa8
   118a8:	str	fp, [sp, #16]
   118ac:	str	r3, [sp, #36]	; 0x24
   118b0:	str	r0, [sp, #28]
   118b4:	cmp	sl, #0
   118b8:	add	r2, fp, r2
   118bc:	mov	r3, r0
   118c0:	beq	11908 <readstat_por_parse_double+0xe8>
   118c4:	sub	ip, sl, #1
   118c8:	adds	ip, r2, ip
   118cc:	bcs	11900 <readstat_por_parse_double+0xe0>
   118d0:	ldrb	r4, [r6]
   118d4:	mov	r1, r2
   118d8:	sub	r3, ip, r1
   118dc:	ldrb	lr, [r1, r3, asr #1]
   118e0:	add	r3, r1, r3, asr #1
   118e4:	cmp	lr, r4
   118e8:	subhi	ip, r3, #1
   118ec:	bhi	118f8 <readstat_por_parse_double+0xd8>
   118f0:	bcs	11b08 <readstat_por_parse_double+0x2e8>
   118f4:	add	r1, r3, #1
   118f8:	cmp	ip, r1
   118fc:	bcs	118d8 <readstat_por_parse_double+0xb8>
   11900:	add	r2, r2, sl
   11904:	add	r3, r0, sl
   11908:	ldr	r1, [sp, #20]
   1190c:	add	r5, r1, r5
   11910:	ldrb	r5, [r5, #56]	; 0x38
   11914:	cmp	r5, #0
   11918:	beq	11970 <readstat_por_parse_double+0x150>
   1191c:	add	ip, r2, r5, lsl #1
   11920:	sub	ip, ip, #2
   11924:	cmp	r2, ip
   11928:	bhi	1196c <readstat_por_parse_double+0x14c>
   1192c:	ldrb	r4, [r6]
   11930:	mov	r0, r2
   11934:	sub	r1, ip, r0
   11938:	asr	r1, r1, #1
   1193c:	bic	r1, r1, #1
   11940:	add	lr, r0, r1
   11944:	ldrb	r1, [r0, r1]
   11948:	cmp	r1, r4
   1194c:	subhi	ip, lr, #2
   11950:	bhi	11964 <readstat_por_parse_double+0x144>
   11954:	ldrb	r1, [lr, #1]
   11958:	add	r0, lr, #2
   1195c:	cmp	r1, r4
   11960:	bcs	11bcc <readstat_por_parse_double+0x3ac>
   11964:	cmp	ip, r0
   11968:	bcs	11934 <readstat_por_parse_double+0x114>
   1196c:	add	r3, r3, r5
   11970:	ldr	r2, [sp, #16]
   11974:	add	r3, r2, r3
   11978:	ldrb	r1, [r3, #120]	; 0x78
   1197c:	ldrb	r5, [r3, #72]	; 0x48
   11980:	cmp	r1, #0
   11984:	beq	119e8 <readstat_por_parse_double+0x1c8>
   11988:	ldr	r3, [sp, #36]	; 0x24
   1198c:	ldrb	r2, [r3, r1]
   11990:	add	r3, r3, r1
   11994:	add	r2, r3, r2
   11998:	cmp	r3, r2
   1199c:	beq	119e8 <readstat_por_parse_double+0x1c8>
   119a0:	ldrb	r1, [r3, #1]!
   119a4:	cmp	r1, #10
   119a8:	addls	pc, pc, r1, lsl #2
   119ac:	b	11998 <readstat_por_parse_double+0x178>
   119b0:	b	11ad8 <readstat_por_parse_double+0x2b8>
   119b4:	b	11a38 <readstat_por_parse_double+0x218>
   119b8:	b	11a14 <readstat_por_parse_double+0x1f4>
   119bc:	b	11ad0 <readstat_por_parse_double+0x2b0>
   119c0:	b	119dc <readstat_por_parse_double+0x1bc>
   119c4:	b	11a28 <readstat_por_parse_double+0x208>
   119c8:	b	11a1c <readstat_por_parse_double+0x1fc>
   119cc:	b	11a30 <readstat_por_parse_double+0x210>
   119d0:	b	119dc <readstat_por_parse_double+0x1bc>
   119d4:	b	11b00 <readstat_por_parse_double+0x2e0>
   119d8:	b	11a70 <readstat_por_parse_double+0x250>
   119dc:	cmp	r3, r2
   119e0:	mov	r9, #1
   119e4:	bne	119a0 <readstat_por_parse_double+0x180>
   119e8:	cmp	r5, #0
   119ec:	beq	11bd8 <readstat_por_parse_double+0x3b8>
   119f0:	add	r6, r6, #1
   119f4:	cmp	r8, r6
   119f8:	beq	11bdc <readstat_por_parse_double+0x3bc>
   119fc:	ldr	r3, [sp, #24]
   11a00:	add	r3, r3, r5
   11a04:	ldrb	r2, [r3, #204]	; 0xcc
   11a08:	ldrb	r0, [r3, #220]	; 0xdc
   11a0c:	ldrb	sl, [r3, #236]	; 0xec
   11a10:	b	118b4 <readstat_por_parse_double+0x94>
   11a14:	vmov.f64	d7, d0
   11a18:	b	11998 <readstat_por_parse_double+0x178>
   11a1c:	mov	r1, #1
   11a20:	str	r1, [sp, #28]
   11a24:	b	11998 <readstat_por_parse_double+0x178>
   11a28:	vmov.f64	d3, d7
   11a2c:	b	11998 <readstat_por_parse_double+0x178>
   11a30:	vmov.f64	d1, d7
   11a34:	b	11998 <readstat_por_parse_double+0x178>
   11a38:	ldrb	r1, [r6]
   11a3c:	sub	r0, r1, #48	; 0x30
   11a40:	uxtb	ip, r0
   11a44:	cmp	ip, #9
   11a48:	bls	11b98 <readstat_por_parse_double+0x378>
   11a4c:	sub	r0, r1, #65	; 0x41
   11a50:	cmp	r0, #19
   11a54:	subls	r1, r1, #55	; 0x37
   11a58:	vmovls	s9, r1
   11a5c:	vcvtls.f64.s32	d4, s9
   11a60:	vdivls.f64	d9, d4, d6
   11a64:	vaddls.f64	d5, d5, d9
   11a68:	vmul.f64	d6, d6, d2
   11a6c:	b	11998 <readstat_por_parse_double+0x178>
   11a70:	vcmp.f64	d8, d8
   11a74:	add	r8, r6, #1
   11a78:	vmrs	APSR_nzcv, fpscr
   11a7c:	bvs	11ab0 <readstat_por_parse_double+0x290>
   11a80:	vadd.f64	d8, d5, d3
   11a84:	mov	r4, #1
   11a88:	ldr	r3, [sp, #28]
   11a8c:	cmp	r3, #0
   11a90:	vnegne.f64	d1, d1
   11a94:	vcmp.f64	d1, #0.0
   11a98:	vmrs	APSR_nzcv, fpscr
   11a9c:	bne	11bac <readstat_por_parse_double+0x38c>
   11aa0:	cmp	r9, #0
   11aa4:	vnegne.f64	d8, d8
   11aa8:	cmp	r4, #0
   11aac:	beq	11b18 <readstat_por_parse_double+0x2f8>
   11ab0:	ldr	r3, [sp, #32]
   11ab4:	sub	r0, r8, r7
   11ab8:	cmp	r3, #0
   11abc:	vstrne	d8, [r3]
   11ac0:	add	sp, sp, #1072	; 0x430
   11ac4:	add	sp, sp, #4
   11ac8:	vpop	{d8-d9}
   11acc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ad0:	vldr	d5, [pc, #288]	; 11bf8 <readstat_por_parse_double+0x3d8>
   11ad4:	b	11998 <readstat_por_parse_double+0x178>
   11ad8:	ldrb	r1, [r6]
   11adc:	sub	r0, r1, #48	; 0x30
   11ae0:	uxtb	ip, r0
   11ae4:	cmp	ip, #9
   11ae8:	bhi	11b74 <readstat_por_parse_double+0x354>
   11aec:	vmov	s9, r0
   11af0:	vcvt.f64.s32	d4, s9
   11af4:	vmla.f64	d4, d7, d2
   11af8:	vmov.f64	d7, d4
   11afc:	b	11998 <readstat_por_parse_double+0x178>
   11b00:	vldr	d8, [pc, #256]	; 11c08 <readstat_por_parse_double+0x3e8>
   11b04:	b	11998 <readstat_por_parse_double+0x178>
   11b08:	sub	r3, r3, r2
   11b0c:	add	r3, r0, r3
   11b10:	b	11970 <readstat_por_parse_double+0x150>
   11b14:	mov	r5, #1
   11b18:	ldr	r6, [sp, #40]	; 0x28
   11b1c:	cmp	r6, #0
   11b20:	mvneq	r0, #0
   11b24:	beq	11ac0 <readstat_por_parse_double+0x2a0>
   11b28:	ldr	r3, [sp, #44]	; 0x2c
   11b2c:	ldr	r2, [pc, #232]	; 11c1c <readstat_por_parse_double+0x3fc>
   11b30:	add	r4, sp, #48	; 0x30
   11b34:	str	r3, [sp]
   11b38:	add	r2, pc, r2
   11b3c:	sub	r3, r8, r7
   11b40:	str	r5, [sp, #8]
   11b44:	str	r7, [sp, #4]
   11b48:	mov	r0, r4
   11b4c:	mov	r1, #1024	; 0x400
   11b50:	bl	4280 <snprintf@plt>
   11b54:	mov	r0, r4
   11b58:	ldr	r1, [sp, #1128]	; 0x468
   11b5c:	blx	r6
   11b60:	mvn	r0, #0
   11b64:	add	sp, sp, #1072	; 0x430
   11b68:	add	sp, sp, #4
   11b6c:	vpop	{d8-d9}
   11b70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11b74:	sub	r0, r1, #65	; 0x41
   11b78:	cmp	r0, #19
   11b7c:	bhi	11998 <readstat_por_parse_double+0x178>
   11b80:	sub	r1, r1, #55	; 0x37
   11b84:	vmov	s9, r1
   11b88:	vcvt.f64.s32	d4, s9
   11b8c:	vmla.f64	d4, d7, d2
   11b90:	vmov.f64	d7, d4
   11b94:	b	11998 <readstat_por_parse_double+0x178>
   11b98:	vmov	s9, r0
   11b9c:	vcvt.f64.s32	d4, s9
   11ba0:	vdiv.f64	d9, d4, d6
   11ba4:	vadd.f64	d5, d5, d9
   11ba8:	b	11a68 <readstat_por_parse_double+0x248>
   11bac:	vldr	d0, [pc, #76]	; 11c00 <readstat_por_parse_double+0x3e0>
   11bb0:	bl	3f8c <pow@plt>
   11bb4:	cmp	r9, #0
   11bb8:	vmul.f64	d8, d8, d0
   11bbc:	vnegne.f64	d8, d8
   11bc0:	cmp	r4, #0
   11bc4:	bne	11ab0 <readstat_por_parse_double+0x290>
   11bc8:	b	11b18 <readstat_por_parse_double+0x2f8>
   11bcc:	sub	r2, lr, r2
   11bd0:	add	r3, r3, r2, asr #1
   11bd4:	b	11970 <readstat_por_parse_double+0x150>
   11bd8:	mov	r8, r6
   11bdc:	vcmp.f64	d8, d8
   11be0:	vmrs	APSR_nzcv, fpscr
   11be4:	vaddvc.f64	d8, d5, d3
   11be8:	movvc	r4, #0
   11bec:	bvs	11b18 <readstat_por_parse_double+0x2f8>
   11bf0:	b	11a88 <readstat_por_parse_double+0x268>
   11bf4:	nop			; (mov r0, r0)
	...
   11c04:	.word	0x403e0000
   11c08:	.word	0x00000000
   11c0c:	.word	0x7ff80000
   11c10:	.word	0x00014e3c
   11c14:	.word	0x00014e14
   11c18:	.word	0x00014e10
   11c1c:	.word	0x00014c5c

00011c20 <read_bytes>:
   11c20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c24:	sub	sp, sp, #12
   11c28:	ldr	fp, [r0, #44]	; 0x2c
   11c2c:	mov	r4, r0
   11c30:	mov	sl, r1
   11c34:	add	r6, r1, r2
   11c38:	mov	r5, r1
   11c3c:	add	r8, sp, #7
   11c40:	mov	r7, #1
   11c44:	mov	r9, #0
   11c48:	cmp	r5, r6
   11c4c:	bcs	11c7c <read_bytes+0x5c>
   11c50:	ldr	r3, [r4, #52]	; 0x34
   11c54:	cmp	r3, #0
   11c58:	beq	11c88 <read_bytes+0x68>
   11c5c:	ldrb	r3, [r4, #48]	; 0x30
   11c60:	add	r5, r5, #1
   11c64:	strb	r3, [r5, #-1]
   11c68:	ldr	r3, [r4, #52]	; 0x34
   11c6c:	cmp	r5, r6
   11c70:	sub	r3, r3, #1
   11c74:	str	r3, [r4, #52]	; 0x34
   11c78:	bcc	11c50 <read_bytes+0x30>
   11c7c:	sub	r0, r5, sl
   11c80:	add	sp, sp, #12
   11c84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c88:	ldr	r3, [fp, #12]
   11c8c:	ldr	r2, [fp, #20]
   11c90:	mov	r1, r7
   11c94:	mov	r0, r8
   11c98:	blx	r3
   11c9c:	cmp	r0, #0
   11ca0:	beq	11c7c <read_bytes+0x5c>
   11ca4:	cmn	r0, #1
   11ca8:	beq	11d28 <read_bytes+0x108>
   11cac:	ldrb	r3, [sp, #7]
   11cb0:	cmp	r3, #10
   11cb4:	cmpne	r3, #13
   11cb8:	bne	11cd8 <read_bytes+0xb8>
   11cbc:	cmp	r3, #13
   11cc0:	beq	11cfc <read_bytes+0xdc>
   11cc4:	ldr	r3, [r4, #40]	; 0x28
   11cc8:	str	r9, [r4, #40]	; 0x28
   11ccc:	rsb	r3, r3, #80	; 0x50
   11cd0:	str	r3, [r4, #52]	; 0x34
   11cd4:	b	11c48 <read_bytes+0x28>
   11cd8:	ldr	r2, [r4, #40]	; 0x28
   11cdc:	cmp	r2, #80	; 0x50
   11ce0:	beq	11d28 <read_bytes+0x108>
   11ce4:	strb	r3, [r5]
   11ce8:	ldr	r3, [r4, #40]	; 0x28
   11cec:	add	r5, r5, #1
   11cf0:	add	r3, r3, #1
   11cf4:	str	r3, [r4, #40]	; 0x28
   11cf8:	b	11c48 <read_bytes+0x28>
   11cfc:	ldr	r3, [fp, #12]
   11d00:	ldr	r2, [fp, #20]
   11d04:	mov	r1, r7
   11d08:	mov	r0, r8
   11d0c:	blx	r3
   11d10:	add	r0, r0, #1
   11d14:	cmp	r0, #1
   11d18:	bls	11d28 <read_bytes+0x108>
   11d1c:	ldrb	r3, [sp, #7]
   11d20:	cmp	r3, #10
   11d24:	beq	11cc4 <read_bytes+0xa4>
   11d28:	mvn	r0, #0
   11d2c:	add	sp, sp, #12
   11d30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011d34 <read_double_with_peek>:
   11d34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d38:	sub	sp, sp, #1472	; 0x5c0
   11d3c:	sub	sp, sp, #12
   11d40:	ldr	r7, [pc, #740]	; 1202c <read_double_with_peek+0x2f8>
   11d44:	mov	r6, #0
   11d48:	add	r3, sp, #56	; 0x38
   11d4c:	str	r1, [sp, #44]	; 0x2c
   11d50:	strb	r2, [sp, #56]	; 0x38
   11d54:	add	r1, sp, #57	; 0x39
   11d58:	mov	r2, #1
   11d5c:	str	r3, [sp, #40]	; 0x28
   11d60:	strd	r6, [sp, #48]	; 0x30
   11d64:	mov	r5, r0
   11d68:	bl	11c20 <read_bytes>
   11d6c:	cmp	r0, #1
   11d70:	beq	11d84 <read_double_with_peek+0x50>
   11d74:	mov	r0, #5
   11d78:	add	sp, sp, #1472	; 0x5c0
   11d7c:	add	sp, sp, #12
   11d80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d84:	ldrb	r3, [sp, #56]	; 0x38
   11d88:	add	r3, r5, r3, lsl #1
   11d8c:	ldrh	r3, [r3, #94]	; 0x5e
   11d90:	cmp	r3, #42	; 0x2a
   11d94:	ldrb	r3, [sp, #57]	; 0x39
   11d98:	add	r3, r5, r3, lsl #1
   11d9c:	ldrh	r3, [r3, #94]	; 0x5e
   11da0:	beq	11f64 <read_double_with_peek+0x230>
   11da4:	ldr	r2, [sp, #40]	; 0x28
   11da8:	mov	r0, #2
   11dac:	mov	r1, #0
   11db0:	add	r9, sp, #456	; 0x1c8
   11db4:	mov	r8, #1
   11db8:	mov	fp, #0
   11dbc:	add	sl, r2, #2
   11dc0:	add	r2, r2, #99	; 0x63
   11dc4:	str	r2, [sp, #36]	; 0x24
   11dc8:	strd	r0, [sp, #24]
   11dcc:	cmp	r3, #47	; 0x2f
   11dd0:	beq	11eec <read_double_with_peek+0x1b8>
   11dd4:	ldr	r7, [r5, #44]	; 0x2c
   11dd8:	add	r6, sl, #1
   11ddc:	mov	r4, sl
   11de0:	cmp	r4, r6
   11de4:	bcs	11e10 <read_double_with_peek+0xdc>
   11de8:	ldr	r3, [r5, #52]	; 0x34
   11dec:	cmp	r3, #0
   11df0:	beq	11e4c <read_double_with_peek+0x118>
   11df4:	ldrb	r2, [r5, #48]	; 0x30
   11df8:	add	r4, r4, #1
   11dfc:	sub	r3, r3, #1
   11e00:	strb	r2, [r4, #-1]
   11e04:	cmp	r4, r6
   11e08:	str	r3, [r5, #52]	; 0x34
   11e0c:	bcc	11de8 <read_double_with_peek+0xb4>
   11e10:	sub	r4, r4, sl
   11e14:	cmp	r4, #1
   11e18:	bne	11d74 <read_double_with_peek+0x40>
   11e1c:	ldrd	r2, [sp, #24]
   11e20:	adds	r2, r2, #1
   11e24:	adc	r3, r3, #0
   11e28:	strd	r2, [sp, #24]
   11e2c:	ldr	r3, [sp, #36]	; 0x24
   11e30:	cmp	sl, r3
   11e34:	beq	11d74 <read_double_with_peek+0x40>
   11e38:	ldrb	r3, [sl]
   11e3c:	mov	sl, r6
   11e40:	add	r3, r5, r3, lsl #1
   11e44:	ldrh	r3, [r3, #94]	; 0x5e
   11e48:	b	11dcc <read_double_with_peek+0x98>
   11e4c:	ldr	r3, [r7, #12]
   11e50:	ldr	r2, [r7, #20]
   11e54:	mov	r1, r8
   11e58:	mov	r0, r9
   11e5c:	blx	r3
   11e60:	cmp	r0, #0
   11e64:	beq	11e10 <read_double_with_peek+0xdc>
   11e68:	cmn	r0, #1
   11e6c:	beq	11d74 <read_double_with_peek+0x40>
   11e70:	ldrb	r3, [sp, #456]	; 0x1c8
   11e74:	cmp	r3, #10
   11e78:	cmpne	r3, #13
   11e7c:	bne	11e9c <read_double_with_peek+0x168>
   11e80:	cmp	r3, #13
   11e84:	beq	11ebc <read_double_with_peek+0x188>
   11e88:	ldr	r3, [r5, #40]	; 0x28
   11e8c:	str	fp, [r5, #40]	; 0x28
   11e90:	rsb	r3, r3, #80	; 0x50
   11e94:	str	r3, [r5, #52]	; 0x34
   11e98:	b	11de0 <read_double_with_peek+0xac>
   11e9c:	ldr	r2, [r5, #40]	; 0x28
   11ea0:	cmp	r2, #80	; 0x50
   11ea4:	beq	11d74 <read_double_with_peek+0x40>
   11ea8:	add	r2, r2, #1
   11eac:	strb	r3, [r4]
   11eb0:	str	r2, [r5, #40]	; 0x28
   11eb4:	add	r4, r4, #1
   11eb8:	b	11de0 <read_double_with_peek+0xac>
   11ebc:	ldr	r3, [r7, #12]
   11ec0:	ldr	r2, [r7, #20]
   11ec4:	mov	r1, r8
   11ec8:	mov	r0, r9
   11ecc:	blx	r3
   11ed0:	add	r0, r0, #1
   11ed4:	cmp	r0, #1
   11ed8:	bls	11d74 <read_double_with_peek+0x40>
   11edc:	ldrb	r3, [sp, #456]	; 0x1c8
   11ee0:	cmp	r3, #10
   11ee4:	beq	11e88 <read_double_with_peek+0x154>
   11ee8:	b	11d74 <read_double_with_peek+0x40>
   11eec:	add	r3, r5, #94	; 0x5e
   11ef0:	add	r4, sp, #156	; 0x9c
   11ef4:	str	r3, [sp]
   11ef8:	mov	r2, r4
   11efc:	mov	r3, #300	; 0x12c
   11f00:	ldr	r1, [sp, #24]
   11f04:	ldr	r0, [sp, #40]	; 0x28
   11f08:	bl	425c <por_utf8_encode@plt>
   11f0c:	cmn	r0, #1
   11f10:	mov	r8, r0
   11f14:	mov	r6, r0
   11f18:	asr	r7, r0, #31
   11f1c:	beq	11f84 <read_double_with_peek+0x250>
   11f20:	ldr	r2, [r5, #36]	; 0x24
   11f24:	ldr	r3, [r5, #24]
   11f28:	str	r2, [sp]
   11f2c:	ldr	r2, [sp, #40]	; 0x28
   11f30:	mov	r1, r8
   11f34:	sub	r2, r2, #8
   11f38:	mov	r0, r4
   11f3c:	bl	4250 <readstat_por_parse_double@plt>
   11f40:	cmn	r0, #1
   11f44:	movne	r0, #0
   11f48:	beq	11fd8 <read_double_with_peek+0x2a4>
   11f4c:	ldr	r1, [sp, #44]	; 0x2c
   11f50:	cmp	r1, #0
   11f54:	ldrne	r3, [sp, #40]	; 0x28
   11f58:	ldrdne	r2, [r3, #-8]
   11f5c:	strdne	r2, [r1]
   11f60:	b	11d78 <read_double_with_peek+0x44>
   11f64:	cmp	r3, #46	; 0x2e
   11f68:	bne	11da4 <read_double_with_peek+0x70>
   11f6c:	ldr	r3, [sp, #44]	; 0x2c
   11f70:	cmp	r3, #0
   11f74:	moveq	r0, r3
   11f78:	strdne	r6, [r3]
   11f7c:	movne	r0, #0
   11f80:	b	11d78 <read_double_with_peek+0x44>
   11f84:	ldr	r3, [r5, #24]
   11f88:	cmp	r3, #0
   11f8c:	moveq	r0, #16
   11f90:	beq	11f4c <read_double_with_peek+0x218>
   11f94:	ldr	r3, [sp, #40]	; 0x28
   11f98:	add	r4, sp, #456	; 0x1c8
   11f9c:	str	r3, [sp, #12]
   11fa0:	ldrd	r2, [sp, #24]
   11fa4:	mov	r1, #1024	; 0x400
   11fa8:	mov	r0, r4
   11fac:	strd	r2, [sp]
   11fb0:	str	r2, [sp, #8]
   11fb4:	ldr	r2, [pc, #116]	; 12030 <read_double_with_peek+0x2fc>
   11fb8:	add	r2, pc, r2
   11fbc:	bl	4280 <snprintf@plt>
   11fc0:	mov	r0, r4
   11fc4:	ldr	r3, [r5, #24]
   11fc8:	ldr	r1, [r5, #36]	; 0x24
   11fcc:	blx	r3
   11fd0:	mov	r0, #16
   11fd4:	b	11f4c <read_double_with_peek+0x218>
   11fd8:	ldr	r3, [r5, #24]
   11fdc:	cmp	r3, #0
   11fe0:	moveq	r0, #5
   11fe4:	beq	11f4c <read_double_with_peek+0x218>
   11fe8:	ldr	r3, [sp, #40]	; 0x28
   11fec:	ldr	r2, [pc, #64]	; 12034 <read_double_with_peek+0x300>
   11ff0:	str	r4, [sp, #12]
   11ff4:	add	r4, sp, #456	; 0x1c8
   11ff8:	str	r3, [sp, #16]
   11ffc:	add	r2, pc, r2
   12000:	mov	r1, #1024	; 0x400
   12004:	str	r8, [sp, #8]
   12008:	strd	r6, [sp]
   1200c:	mov	r0, r4
   12010:	bl	4280 <snprintf@plt>
   12014:	mov	r0, r4
   12018:	ldr	r3, [r5, #24]
   1201c:	ldr	r1, [r5, #36]	; 0x24
   12020:	blx	r3
   12024:	mov	r0, #5
   12028:	b	11f4c <read_double_with_peek+0x218>
   1202c:	.word	0x7ff80000
   12030:	.word	0x00014810
   12034:	.word	0x00014800

00012038 <maybe_read_string>:
   12038:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1203c:	sub	sp, sp, #1056	; 0x420
   12040:	sub	sp, sp, #12
   12044:	add	r8, sp, #40	; 0x28
   12048:	sub	fp, r8, #9
   1204c:	mov	r5, r0
   12050:	ldr	r7, [r0, #44]	; 0x2c
   12054:	str	r1, [sp, #16]
   12058:	str	r2, [sp, #20]
   1205c:	str	r3, [sp, #12]
   12060:	mov	r4, fp
   12064:	sub	r6, r8, #8
   12068:	mov	r9, #1
   1206c:	mov	sl, #0
   12070:	b	12090 <maybe_read_string+0x58>
   12074:	ldrb	r2, [r5, #48]	; 0x30
   12078:	add	r4, r4, #1
   1207c:	sub	r3, r3, #1
   12080:	strb	r2, [r4, #-1]
   12084:	str	r3, [r5, #52]	; 0x34
   12088:	cmp	r4, r6
   1208c:	bcs	120f0 <maybe_read_string+0xb8>
   12090:	ldr	r3, [r5, #52]	; 0x34
   12094:	cmp	r3, #0
   12098:	bne	12074 <maybe_read_string+0x3c>
   1209c:	ldr	r3, [r7, #12]
   120a0:	ldr	r2, [r7, #20]
   120a4:	mov	r1, r9
   120a8:	mov	r0, r8
   120ac:	blx	r3
   120b0:	cmp	r0, #0
   120b4:	beq	120f0 <maybe_read_string+0xb8>
   120b8:	cmn	r0, #1
   120bc:	beq	120fc <maybe_read_string+0xc4>
   120c0:	ldrb	r3, [sp, #40]	; 0x28
   120c4:	cmp	r3, #10
   120c8:	cmpne	r3, #13
   120cc:	bne	12120 <maybe_read_string+0xe8>
   120d0:	cmp	r3, #13
   120d4:	beq	12140 <maybe_read_string+0x108>
   120d8:	ldr	r3, [r5, #40]	; 0x28
   120dc:	cmp	r4, r6
   120e0:	rsb	r3, r3, #80	; 0x50
   120e4:	str	sl, [r5, #40]	; 0x28
   120e8:	str	r3, [r5, #52]	; 0x34
   120ec:	bcc	12090 <maybe_read_string+0x58>
   120f0:	sub	r4, r4, fp
   120f4:	cmp	r4, #1
   120f8:	beq	12170 <maybe_read_string+0x138>
   120fc:	mov	r4, #0
   12100:	mov	r6, #5
   12104:	ldr	r3, [sp, #12]
   12108:	cmp	r3, #0
   1210c:	strne	r4, [r3]
   12110:	mov	r0, r6
   12114:	add	sp, sp, #1056	; 0x420
   12118:	add	sp, sp, #12
   1211c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12120:	ldr	r2, [r5, #40]	; 0x28
   12124:	cmp	r2, #80	; 0x50
   12128:	beq	120fc <maybe_read_string+0xc4>
   1212c:	add	r2, r2, #1
   12130:	strb	r3, [r4]
   12134:	str	r2, [r5, #40]	; 0x28
   12138:	add	r4, r4, #1
   1213c:	b	12088 <maybe_read_string+0x50>
   12140:	ldr	r3, [r7, #12]
   12144:	ldr	r2, [r7, #20]
   12148:	mov	r1, r9
   1214c:	mov	r0, r8
   12150:	blx	r3
   12154:	add	r0, r0, #1
   12158:	cmp	r0, #1
   1215c:	bls	120fc <maybe_read_string+0xc4>
   12160:	ldrb	r3, [sp, #40]	; 0x28
   12164:	cmp	r3, #10
   12168:	beq	120d8 <maybe_read_string+0xa0>
   1216c:	b	120fc <maybe_read_string+0xc4>
   12170:	ldrb	r2, [sp, #31]
   12174:	add	r3, r5, r2, lsl #1
   12178:	ldrh	r3, [r3, #94]	; 0x5e
   1217c:	cmp	r3, #90	; 0x5a
   12180:	moveq	r6, #0
   12184:	beq	12104 <maybe_read_string+0xcc>
   12188:	sub	r1, r8, #8
   1218c:	mov	r0, r5
   12190:	bl	11d34 <read_double_with_peek>
   12194:	subs	r6, r0, #0
   12198:	bne	122bc <maybe_read_string+0x284>
   1219c:	vldr	d7, [r8, #-8]
   121a0:	vcmpe.f64	d7, #0.0
   121a4:	vmrs	APSR_nzcv, fpscr
   121a8:	bmi	121bc <maybe_read_string+0x184>
   121ac:	vldr	d6, [pc, #276]	; 122c8 <maybe_read_string+0x290>
   121b0:	vcmpe.f64	d7, d6
   121b4:	vmrs	APSR_nzcv, fpscr
   121b8:	ble	121d0 <maybe_read_string+0x198>
   121bc:	mov	r6, #5
   121c0:	mov	r0, r6
   121c4:	add	sp, sp, #1056	; 0x420
   121c8:	add	sp, sp, #12
   121cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   121d0:	vcmp.f64	d7, d7
   121d4:	vmrs	APSR_nzcv, fpscr
   121d8:	bvs	121bc <maybe_read_string+0x184>
   121dc:	vcvt.u32.f64	s15, d7
   121e0:	ldr	r3, [r5, #620]	; 0x26c
   121e4:	vmov	r4, s15
   121e8:	cmp	r4, r3
   121ec:	bhi	12250 <maybe_read_string+0x218>
   121f0:	mov	r2, r4
   121f4:	ldr	r1, [r5, #616]	; 0x268
   121f8:	mov	r0, r5
   121fc:	bl	11c20 <read_bytes>
   12200:	cmn	r0, #1
   12204:	moveq	r6, #2
   12208:	beq	12110 <maybe_read_string+0xd8>
   1220c:	ldr	r3, [sp, #20]
   12210:	add	r2, r5, #94	; 0x5e
   12214:	ldr	r0, [r5, #616]	; 0x268
   12218:	sub	r3, r3, #1
   1221c:	str	r2, [sp]
   12220:	mov	r1, r4
   12224:	ldr	r2, [sp, #16]
   12228:	bl	425c <por_utf8_encode@plt>
   1222c:	cmn	r0, #1
   12230:	beq	12274 <maybe_read_string+0x23c>
   12234:	ldr	r2, [sp, #12]
   12238:	ldr	r1, [sp, #16]
   1223c:	mov	r3, #0
   12240:	cmp	r2, #0
   12244:	strb	r3, [r1, r0]
   12248:	strne	r3, [r2]
   1224c:	b	12110 <maybe_read_string+0xd8>
   12250:	vmov	r1, s15
   12254:	vstr	s15, [r5, #620]	; 0x26c
   12258:	ldr	r0, [r5, #616]	; 0x268
   1225c:	bl	3ff8 <realloc@plt>
   12260:	ldr	r2, [r5, #620]	; 0x26c
   12264:	mov	r1, r6
   12268:	str	r0, [r5, #616]	; 0x268
   1226c:	bl	42a4 <memset@plt>
   12270:	b	121f0 <maybe_read_string+0x1b8>
   12274:	ldr	r3, [r5, #24]
   12278:	cmp	r3, #0
   1227c:	moveq	r6, #16
   12280:	beq	12110 <maybe_read_string+0xd8>
   12284:	ldr	r2, [r5, #616]	; 0x268
   12288:	mov	r3, r4
   1228c:	str	r2, [sp]
   12290:	ldr	r2, [pc, #56]	; 122d0 <maybe_read_string+0x298>
   12294:	mov	r1, #1024	; 0x400
   12298:	add	r2, pc, r2
   1229c:	mov	r0, r8
   122a0:	bl	4280 <snprintf@plt>
   122a4:	mov	r0, r8
   122a8:	ldr	r3, [r5, #24]
   122ac:	ldr	r1, [r5, #36]	; 0x24
   122b0:	blx	r3
   122b4:	mov	r6, #16
   122b8:	b	12110 <maybe_read_string+0xd8>
   122bc:	mov	r4, #0
   122c0:	b	12104 <maybe_read_string+0xcc>
   122c4:	nop			; (mov r0, r0)
   122c8:	.word	0x00000000
   122cc:	.word	0x40d38800
   122d0:	.word	0x0001459c

000122d4 <read_version_and_timestamp>:
   122d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   122d8:	sub	sp, sp, #332	; 0x14c
   122dc:	add	r3, sp, #28
   122e0:	mov	r5, r0
   122e4:	mov	r2, #44	; 0x2c
   122e8:	mov	r0, r3
   122ec:	mov	r1, #0
   122f0:	add	r6, sp, #24
   122f4:	str	r3, [sp, #12]
   122f8:	sub	fp, r6, #1
   122fc:	bl	42a4 <memset@plt>
   12300:	mvn	r3, #0
   12304:	ldr	r7, [r5, #44]	; 0x2c
   12308:	mov	r4, fp
   1230c:	add	r9, sp, #72	; 0x48
   12310:	mov	r8, #1
   12314:	mov	sl, #0
   12318:	str	r3, [sp, #60]	; 0x3c
   1231c:	b	1233c <read_version_and_timestamp+0x68>
   12320:	ldrb	r2, [r5, #48]	; 0x30
   12324:	add	r4, r4, #1
   12328:	sub	r3, r3, #1
   1232c:	strb	r2, [r4, #-1]
   12330:	str	r3, [r5, #52]	; 0x34
   12334:	cmp	r4, r6
   12338:	bcs	1239c <read_version_and_timestamp+0xc8>
   1233c:	ldr	r3, [r5, #52]	; 0x34
   12340:	cmp	r3, #0
   12344:	bne	12320 <read_version_and_timestamp+0x4c>
   12348:	ldr	r3, [r7, #12]
   1234c:	ldr	r2, [r7, #20]
   12350:	mov	r1, r8
   12354:	mov	r0, r9
   12358:	blx	r3
   1235c:	cmp	r0, #0
   12360:	beq	1239c <read_version_and_timestamp+0xc8>
   12364:	cmn	r0, #1
   12368:	beq	123a8 <read_version_and_timestamp+0xd4>
   1236c:	ldrb	r3, [sp, #72]	; 0x48
   12370:	cmp	r3, #10
   12374:	cmpne	r3, #13
   12378:	bne	123b8 <read_version_and_timestamp+0xe4>
   1237c:	cmp	r3, #13
   12380:	beq	123d8 <read_version_and_timestamp+0x104>
   12384:	ldr	r3, [r5, #40]	; 0x28
   12388:	cmp	r4, r6
   1238c:	rsb	r3, r3, #80	; 0x50
   12390:	str	sl, [r5, #40]	; 0x28
   12394:	str	r3, [r5, #52]	; 0x34
   12398:	bcc	1233c <read_version_and_timestamp+0x68>
   1239c:	sub	r4, r4, fp
   123a0:	cmp	r4, #1
   123a4:	beq	12408 <read_version_and_timestamp+0x134>
   123a8:	mov	r4, #2
   123ac:	mov	r0, r4
   123b0:	add	sp, sp, #332	; 0x14c
   123b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   123b8:	ldr	r2, [r5, #40]	; 0x28
   123bc:	cmp	r2, #80	; 0x50
   123c0:	beq	123a8 <read_version_and_timestamp+0xd4>
   123c4:	add	r2, r2, #1
   123c8:	strb	r3, [r4]
   123cc:	str	r2, [r5, #40]	; 0x28
   123d0:	add	r4, r4, #1
   123d4:	b	12334 <read_version_and_timestamp+0x60>
   123d8:	ldr	r3, [r7, #12]
   123dc:	ldr	r2, [r7, #20]
   123e0:	mov	r1, r8
   123e4:	mov	r0, r9
   123e8:	blx	r3
   123ec:	add	r0, r0, #1
   123f0:	cmp	r0, #1
   123f4:	bls	123a8 <read_version_and_timestamp+0xd4>
   123f8:	ldrb	r3, [sp, #72]	; 0x48
   123fc:	cmp	r3, #10
   12400:	beq	12384 <read_version_and_timestamp+0xb0>
   12404:	b	123a8 <read_version_and_timestamp+0xd4>
   12408:	add	r7, sp, #72	; 0x48
   1240c:	mov	ip, #0
   12410:	mov	r1, r7
   12414:	mov	r3, r6
   12418:	mov	r2, #256	; 0x100
   1241c:	mov	r0, r5
   12420:	str	ip, [sp, #24]
   12424:	bl	12038 <maybe_read_string>
   12428:	subs	r4, r0, #0
   1242c:	bne	123ac <read_version_and_timestamp+0xd8>
   12430:	ldr	r3, [sp, #24]
   12434:	cmp	r3, #0
   12438:	beq	12444 <read_version_and_timestamp+0x170>
   1243c:	mov	r4, #5
   12440:	b	123ac <read_version_and_timestamp+0xd8>
   12444:	ldr	r1, [pc, #188]	; 12508 <read_version_and_timestamp+0x234>
   12448:	add	r3, sp, #40	; 0x28
   1244c:	str	r3, [sp]
   12450:	add	r2, sp, #48	; 0x30
   12454:	add	r3, sp, #44	; 0x2c
   12458:	add	r1, pc, r1
   1245c:	mov	r0, r7
   12460:	bl	428c <__isoc99_sscanf@plt>
   12464:	cmp	r0, #3
   12468:	beq	12474 <read_version_and_timestamp+0x1a0>
   1246c:	mov	r4, #29
   12470:	b	123ac <read_version_and_timestamp+0xd8>
   12474:	mov	r3, r6
   12478:	mov	r2, #256	; 0x100
   1247c:	mov	r1, r7
   12480:	mov	r0, r5
   12484:	str	r4, [sp, #24]
   12488:	bl	12038 <maybe_read_string>
   1248c:	subs	r4, r0, #0
   12490:	bne	123ac <read_version_and_timestamp+0xd8>
   12494:	ldr	r3, [sp, #24]
   12498:	cmp	r3, #0
   1249c:	bne	1243c <read_version_and_timestamp+0x168>
   124a0:	ldr	r3, [sp, #12]
   124a4:	ldr	r1, [pc, #96]	; 1250c <read_version_and_timestamp+0x238>
   124a8:	str	r3, [sp]
   124ac:	mov	r0, r7
   124b0:	add	r3, sp, #32
   124b4:	add	r2, sp, #36	; 0x24
   124b8:	add	r1, pc, r1
   124bc:	bl	428c <__isoc99_sscanf@plt>
   124c0:	cmp	r0, #3
   124c4:	bne	1246c <read_version_and_timestamp+0x198>
   124c8:	ldr	r3, [sp, #48]	; 0x30
   124cc:	ldr	r2, [sp, #44]	; 0x2c
   124d0:	sub	r3, r3, #1888	; 0x760
   124d4:	sub	r3, r3, #12
   124d8:	sub	r2, r2, #1
   124dc:	ldr	r0, [sp, #12]
   124e0:	str	r3, [sp, #48]	; 0x30
   124e4:	str	r2, [sp, #44]	; 0x2c
   124e8:	bl	3e54 <mktime@plt>
   124ec:	ldrb	r3, [sp, #23]
   124f0:	add	r3, r5, r3, lsl #1
   124f4:	ldrh	r3, [r3, #94]	; 0x5e
   124f8:	sub	r3, r3, #65	; 0x41
   124fc:	str	r3, [r5, #60]	; 0x3c
   12500:	str	r0, [r5, #56]	; 0x38
   12504:	b	123ac <read_version_and_timestamp+0xd8>
   12508:	.word	0x000143fc
   1250c:	.word	0x000143ac

00012510 <handle_variables>:
   12510:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12514:	mov	r5, r0
   12518:	ldr	r6, [r0, #632]	; 0x278
   1251c:	sub	sp, sp, #268	; 0x10c
   12520:	cmp	r6, #0
   12524:	ble	125f0 <handle_variables+0xe0>
   12528:	ldr	r3, [pc, #328]	; 12678 <handle_variables+0x168>
   1252c:	mov	r7, #0
   12530:	add	r3, pc, r3
   12534:	str	r3, [sp, #4]
   12538:	mov	r9, r7
   1253c:	mov	r4, r7
   12540:	add	sl, sp, #8
   12544:	b	12560 <handle_variables+0x50>
   12548:	add	r9, r9, #1
   1254c:	ldr	r6, [r5, #632]	; 0x278
   12550:	add	r4, r4, #1
   12554:	cmp	r6, r4
   12558:	add	r7, r7, #280	; 0x118
   1255c:	ble	125f0 <handle_variables+0xe0>
   12560:	ldr	r6, [r5, #652]	; 0x28c
   12564:	ldr	r2, [r5, #612]	; 0x264
   12568:	add	r6, r6, r7
   1256c:	mov	r1, r9
   12570:	mov	r0, r6
   12574:	str	r4, [r6, #8]
   12578:	ldr	r8, [r5, #648]	; 0x288
   1257c:	bl	4274 <spss_init_variable_for_info@plt>
   12580:	ldr	r3, [r6, #4]
   12584:	ldr	r2, [sp, #4]
   12588:	mov	r1, #256	; 0x100
   1258c:	lsl	fp, r4, #2
   12590:	str	r0, [r8, r4, lsl #2]
   12594:	mov	r0, sl
   12598:	bl	4280 <snprintf@plt>
   1259c:	ldr	r8, [r5, #8]
   125a0:	mov	r0, r4
   125a4:	cmp	r8, #0
   125a8:	beq	12548 <handle_variables+0x38>
   125ac:	ldr	r2, [r6, #4]
   125b0:	ldr	r1, [r5, #648]	; 0x288
   125b4:	cmn	r2, #1
   125b8:	movne	r2, sl
   125bc:	moveq	r2, #0
   125c0:	ldr	r3, [r5, #36]	; 0x24
   125c4:	ldr	r1, [r1, r4, lsl #2]
   125c8:	blx	r8
   125cc:	cmp	r0, #1
   125d0:	beq	12660 <handle_variables+0x150>
   125d4:	cmp	r0, #2
   125d8:	bne	12548 <handle_variables+0x38>
   125dc:	ldr	r3, [r5, #648]	; 0x288
   125e0:	mov	r2, #1
   125e4:	ldr	r3, [r3, fp]
   125e8:	str	r2, [r3, #2144]	; 0x860
   125ec:	b	1254c <handle_variables+0x3c>
   125f0:	ldr	r9, [r5, #12]
   125f4:	cmp	r9, #0
   125f8:	beq	1266c <handle_variables+0x15c>
   125fc:	ldrb	r3, [r5, #64]	; 0x40
   12600:	cmp	r3, #0
   12604:	beq	1266c <handle_variables+0x15c>
   12608:	cmp	r6, #0
   1260c:	ble	1266c <handle_variables+0x15c>
   12610:	ldr	r4, [r5, #652]	; 0x28c
   12614:	add	r8, r5, #64	; 0x40
   12618:	add	r4, r4, #187	; 0xbb
   1261c:	mov	r7, #0
   12620:	b	12630 <handle_variables+0x120>
   12624:	add	r7, r7, #1
   12628:	cmp	r7, r6
   1262c:	beq	1266c <handle_variables+0x15c>
   12630:	mov	r0, r4
   12634:	mov	r1, r8
   12638:	bl	3e00 <strcmp@plt>
   1263c:	add	r4, r4, #280	; 0x118
   12640:	cmp	r0, #0
   12644:	bne	12624 <handle_variables+0x114>
   12648:	ldr	r3, [r5, #648]	; 0x288
   1264c:	ldr	r1, [r5, #36]	; 0x24
   12650:	ldr	r0, [r3, r7, lsl #2]
   12654:	blx	r9
   12658:	cmp	r0, #0
   1265c:	beq	1266c <handle_variables+0x15c>
   12660:	mov	r0, #4
   12664:	add	sp, sp, #268	; 0x10c
   12668:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1266c:	mov	r0, #0
   12670:	add	sp, sp, #268	; 0x10c
   12674:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12678:	.word	0x00014344

0001267c <readstat_parse_por>:
   1267c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12680:	vpush	{d8-d9}
   12684:	mov	r6, r0
   12688:	mov	r9, r2
   1268c:	mov	r8, r1
   12690:	sub	sp, sp, #3136	; 0xc40
   12694:	sub	sp, sp, #12
   12698:	ldr	r5, [r0, #32]
   1269c:	bl	4490 <por_ctx_init@plt>
   126a0:	mov	lr, r6
   126a4:	ldr	sl, [r6, #48]	; 0x30
   126a8:	ldr	r7, [pc, #1664]	; 12d30 <readstat_parse_por+0x6b4>
   126ac:	cmp	sl, #0
   126b0:	add	r7, pc, r7
   126b4:	mov	r4, r0
   126b8:	mov	ip, r0
   126bc:	ldm	lr!, {r0, r1, r2, r3}
   126c0:	stmia	ip!, {r0, r1, r2, r3}
   126c4:	ldm	lr, {r0, r1, r2, r3}
   126c8:	ldr	lr, [r6, #44]	; 0x2c
   126cc:	ldr	r6, [r6, #40]	; 0x28
   126d0:	stm	ip, {r0, r1, r2, r3}
   126d4:	strgt	sl, [r4, #644]	; 0x284
   126d8:	cmp	r6, #0
   126dc:	str	r9, [r4, #36]	; 0x24
   126e0:	str	r5, [r4, #44]	; 0x2c
   126e4:	str	lr, [r4, #640]	; 0x280
   126e8:	beq	12720 <readstat_parse_por+0xa4>
   126ec:	ldr	r9, [pc, #1600]	; 12d34 <readstat_parse_por+0x6b8>
   126f0:	mov	r0, r6
   126f4:	add	r9, pc, r9
   126f8:	mov	r1, r9
   126fc:	bl	3e00 <strcmp@plt>
   12700:	cmp	r0, #0
   12704:	bne	12788 <readstat_parse_por+0x10c>
   12708:	ldr	r0, [r4, #612]	; 0x264
   1270c:	cmn	r0, #1
   12710:	moveq	r3, #0
   12714:	streq	r3, [r4, #612]	; 0x264
   12718:	moveq	r6, #7
   1271c:	beq	12760 <readstat_parse_por+0xe4>
   12720:	mov	r0, r8
   12724:	ldr	r3, [r5]
   12728:	ldr	r1, [r5, #20]
   1272c:	blx	r3
   12730:	cmn	r0, #1
   12734:	moveq	r6, #1
   12738:	beq	12760 <readstat_parse_por+0xe4>
   1273c:	ldr	r3, [r5, #8]
   12740:	ldr	r2, [r5, #20]
   12744:	mov	r1, #2
   12748:	mov	r0, #0
   1274c:	blx	r3
   12750:	cmn	r0, #1
   12754:	str	r0, [r4, #32]
   12758:	bne	1279c <readstat_parse_por+0x120>
   1275c:	mov	r6, #15
   12760:	ldr	r3, [r5, #4]
   12764:	ldr	r0, [r5, #20]
   12768:	blx	r3
   1276c:	mov	r0, r4
   12770:	bl	3db8 <por_ctx_free@plt>
   12774:	mov	r0, r6
   12778:	add	sp, sp, #3136	; 0xc40
   1277c:	add	sp, sp, #12
   12780:	vpop	{d8-d9}
   12784:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12788:	mov	r1, r9
   1278c:	mov	r0, r6
   12790:	bl	4130 <iconv_open@plt>
   12794:	str	r0, [r4, #612]	; 0x264
   12798:	b	1270c <readstat_parse_por+0x90>
   1279c:	mov	r1, #0
   127a0:	mov	r0, r1
   127a4:	ldr	r3, [r5, #8]
   127a8:	ldr	r2, [r5, #20]
   127ac:	blx	r3
   127b0:	cmn	r0, #1
   127b4:	beq	1275c <readstat_parse_por+0xe0>
   127b8:	add	sl, sp, #120	; 0x78
   127bc:	mov	r1, sl
   127c0:	mov	r2, #200	; 0xc8
   127c4:	mov	r0, r4
   127c8:	bl	11c20 <read_bytes>
   127cc:	cmp	r0, #200	; 0xc8
   127d0:	beq	127dc <readstat_parse_por+0x160>
   127d4:	mov	r6, #2
   127d8:	b	12760 <readstat_parse_por+0xe4>
   127dc:	add	r3, r4, #73	; 0x49
   127e0:	mov	r0, r3
   127e4:	str	r3, [sp, #28]
   127e8:	mov	r3, #0
   127ec:	str	r3, [sp]
   127f0:	add	r2, sl, #60	; 0x3c
   127f4:	mov	r3, #20
   127f8:	mov	r1, #21
   127fc:	bl	4238 <readstat_convert@plt>
   12800:	subs	r6, r0, #0
   12804:	bne	12760 <readstat_parse_por+0xe4>
   12808:	add	r8, sp, #320	; 0x140
   1280c:	mov	r1, r8
   12810:	mov	r2, #256	; 0x100
   12814:	mov	r0, r4
   12818:	bl	11c20 <read_bytes>
   1281c:	cmp	r0, #256	; 0x100
   12820:	bne	127d4 <readstat_parse_por+0x158>
   12824:	ldrb	r1, [sp, #446]	; 0x1be
   12828:	ldr	r2, [pc, #1288]	; 12d38 <readstat_parse_por+0x6bc>
   1282c:	ldr	r3, [pc, #1288]	; 12d3c <readstat_parse_por+0x6c0>
   12830:	strb	r1, [r4, #48]	; 0x30
   12834:	ldr	lr, [r7, r2]
   12838:	ldr	r6, [r7, r3]
   1283c:	mov	r2, r8
   12840:	sub	r3, lr, #1
   12844:	mov	r1, r6
   12848:	add	lr, lr, #255	; 0xff
   1284c:	ldrsb	r0, [r3, #1]!
   12850:	cmp	r0, #0
   12854:	bne	12864 <readstat_parse_por+0x1e8>
   12858:	ldrh	r0, [r1]
   1285c:	cmp	r0, #0
   12860:	beq	12870 <readstat_parse_por+0x1f4>
   12864:	ldrb	ip, [r2]
   12868:	add	ip, r4, ip, lsl #1
   1286c:	strh	r0, [ip, #94]	; 0x5e
   12870:	cmp	lr, r3
   12874:	add	r2, r2, #1
   12878:	add	r1, r1, #2
   1287c:	bne	1284c <readstat_parse_por+0x1d0>
   12880:	ldrb	r3, [sp, #384]	; 0x180
   12884:	ldrh	r0, [r6, #128]	; 0x80
   12888:	add	r2, sp, #88	; 0x58
   1288c:	str	r2, [sp, #24]
   12890:	add	r3, r4, r3, lsl #1
   12894:	mov	r1, r2
   12898:	strh	r0, [r3, #94]	; 0x5e
   1289c:	mov	r2, #8
   128a0:	mov	r0, r4
   128a4:	bl	11c20 <read_bytes>
   128a8:	cmp	r0, #8
   128ac:	mov	r6, r0
   128b0:	bne	127d4 <readstat_parse_por+0x158>
   128b4:	add	r3, sp, #104	; 0x68
   128b8:	str	r3, [sp, #36]	; 0x24
   128bc:	add	r7, sp, #96	; 0x60
   128c0:	add	r3, r4, #94	; 0x5e
   128c4:	mov	r2, r7
   128c8:	str	r3, [sp]
   128cc:	mov	r1, r0
   128d0:	mov	r3, r0
   128d4:	ldr	r0, [sp, #24]
   128d8:	bl	425c <por_utf8_encode@plt>
   128dc:	cmn	r0, #1
   128e0:	mov	r2, r0
   128e4:	beq	1290c <readstat_parse_por+0x290>
   128e8:	ldr	r0, [pc, #1104]	; 12d40 <readstat_parse_por+0x6c4>
   128ec:	mov	r1, r7
   128f0:	add	r0, pc, r0
   128f4:	bl	44fc <strncmp@plt>
   128f8:	subs	r3, r0, #0
   128fc:	str	r3, [sp, #32]
   12900:	beq	12958 <readstat_parse_por+0x2dc>
   12904:	mov	r6, #5
   12908:	b	12760 <readstat_parse_por+0xe4>
   1290c:	ldr	r3, [r4, #24]
   12910:	cmp	r3, #0
   12914:	moveq	r6, #16
   12918:	beq	12760 <readstat_parse_por+0xe4>
   1291c:	ldr	r3, [sp, #24]
   12920:	ldr	r2, [pc, #1052]	; 12d44 <readstat_parse_por+0x6c8>
   12924:	str	r3, [sp]
   12928:	mov	r3, r6
   1292c:	add	r6, sp, #2112	; 0x840
   12930:	mov	r0, r6
   12934:	add	r2, pc, r2
   12938:	mov	r1, #1024	; 0x400
   1293c:	bl	4280 <snprintf@plt>
   12940:	mov	r0, r6
   12944:	ldr	r3, [r4, #24]
   12948:	ldr	r1, [r4, #36]	; 0x24
   1294c:	blx	r3
   12950:	mov	r6, #16
   12954:	b	12760 <readstat_parse_por+0xe4>
   12958:	mvn	r3, #0
   1295c:	str	r3, [r4, #636]	; 0x27c
   12960:	mov	r0, r4
   12964:	bl	4010 <read_version_and_timestamp@plt>
   12968:	subs	r6, r0, #0
   1296c:	bne	12760 <readstat_parse_por+0xe4>
   12970:	ldr	r3, [pc, #976]	; 12d48 <readstat_parse_por+0x6cc>
   12974:	vldr	d9, [pc, #932]	; 12d20 <readstat_parse_por+0x6a4>
   12978:	add	r3, pc, r3
   1297c:	str	r3, [sp, #60]	; 0x3c
   12980:	add	r3, sp, #2112	; 0x840
   12984:	add	r3, r3, #8
   12988:	vldr	d8, [pc, #920]	; 12d28 <readstat_parse_por+0x6ac>
   1298c:	str	r3, [sp, #48]	; 0x30
   12990:	add	r3, sp, #1088	; 0x440
   12994:	str	sl, [sp, #44]	; 0x2c
   12998:	add	r8, sp, #2112	; 0x840
   1299c:	mov	sl, r3
   129a0:	str	r5, [sp, #20]
   129a4:	mov	r2, #1
   129a8:	mov	r1, r8
   129ac:	mov	r0, r4
   129b0:	bl	11c20 <read_bytes>
   129b4:	cmp	r0, #1
   129b8:	beq	129c4 <readstat_parse_por+0x348>
   129bc:	ldr	r5, [sp, #20]
   129c0:	b	12904 <readstat_parse_por+0x288>
   129c4:	ldrb	r3, [sp, #2112]	; 0x840
   129c8:	add	r3, r4, r3, lsl #1
   129cc:	ldrh	r3, [r3, #94]	; 0x5e
   129d0:	sub	r3, r3, #49	; 0x31
   129d4:	cmp	r3, #21
   129d8:	addls	pc, pc, r3, lsl #2
   129dc:	b	129bc <readstat_parse_por+0x340>
   129e0:	b	12a38 <readstat_parse_por+0x3bc>
   129e4:	b	12a38 <readstat_parse_por+0x3bc>
   129e8:	b	12a38 <readstat_parse_por+0x3bc>
   129ec:	b	13160 <readstat_parse_por+0xae4>
   129f0:	b	135f0 <readstat_parse_por+0xf74>
   129f4:	b	135dc <readstat_parse_por+0xf60>
   129f8:	b	134a8 <readstat_parse_por+0xe2c>
   129fc:	b	133e8 <readstat_parse_por+0xd6c>
   12a00:	b	1338c <readstat_parse_por+0xd10>
   12a04:	b	129bc <readstat_parse_por+0x340>
   12a08:	b	129bc <readstat_parse_por+0x340>
   12a0c:	b	129bc <readstat_parse_por+0x340>
   12a10:	b	129bc <readstat_parse_por+0x340>
   12a14:	b	129bc <readstat_parse_por+0x340>
   12a18:	b	129bc <readstat_parse_por+0x340>
   12a1c:	b	129bc <readstat_parse_por+0x340>
   12a20:	b	132cc <readstat_parse_por+0xc50>
   12a24:	b	13234 <readstat_parse_por+0xbb8>
   12a28:	b	12ea4 <readstat_parse_por+0x828>
   12a2c:	b	12dfc <readstat_parse_por+0x780>
   12a30:	b	12f60 <readstat_parse_por+0x8e4>
   12a34:	b	12a6c <readstat_parse_por+0x3f0>
   12a38:	mov	ip, #0
   12a3c:	mov	r3, r8
   12a40:	mov	r2, #256	; 0x100
   12a44:	add	r1, sp, #576	; 0x240
   12a48:	mov	r0, r4
   12a4c:	str	ip, [sp, #2112]	; 0x840
   12a50:	bl	12038 <maybe_read_string>
   12a54:	subs	r6, r0, #0
   12a58:	bne	12f4c <readstat_parse_por+0x8d0>
   12a5c:	ldr	r3, [sp, #2112]	; 0x840
   12a60:	cmp	r3, #0
   12a64:	bne	129bc <readstat_parse_por+0x340>
   12a68:	b	129a4 <readstat_parse_por+0x328>
   12a6c:	ldr	r3, [r4, #632]	; 0x278
   12a70:	ldr	r2, [r4, #636]	; 0x27c
   12a74:	sub	r3, r3, #1
   12a78:	cmp	r2, r3
   12a7c:	ldr	r5, [sp, #20]
   12a80:	ldr	sl, [sp, #44]	; 0x2c
   12a84:	movne	r6, #8
   12a88:	bne	12760 <readstat_parse_por+0xe4>
   12a8c:	mov	r0, r4
   12a90:	bl	4538 <handle_variables@plt>
   12a94:	subs	r6, r0, #0
   12a98:	bne	12760 <readstat_parse_por+0xe4>
   12a9c:	ldr	r3, [r4, #16]
   12aa0:	cmp	r3, #0
   12aa4:	beq	12760 <readstat_parse_por+0xe4>
   12aa8:	ldr	r3, [r4, #632]	; 0x278
   12aac:	cmp	r3, #0
   12ab0:	beq	12760 <readstat_parse_por+0xe4>
   12ab4:	ldr	r9, [sp, #36]	; 0x24
   12ab8:	add	r3, sp, #1088	; 0x440
   12abc:	mov	r7, r6
   12ac0:	mov	r6, r5
   12ac4:	str	r3, [sp, #28]
   12ac8:	add	r3, sp, #832	; 0x340
   12acc:	str	r3, [sp, #40]	; 0x28
   12ad0:	mov	r3, #0
   12ad4:	str	r3, [sp, #80]	; 0x50
   12ad8:	ldr	r3, [sp, #24]
   12adc:	ldr	fp, [sp, #32]
   12ae0:	sub	r3, r3, #8
   12ae4:	str	r3, [sp, #36]	; 0x24
   12ae8:	sub	r3, sl, #8
   12aec:	str	r3, [sp, #44]	; 0x2c
   12af0:	ldr	r3, [r4, #632]	; 0x278
   12af4:	cmp	fp, r3
   12af8:	bge	12d60 <readstat_parse_por+0x6e4>
   12afc:	mov	r2, #280	; 0x118
   12b00:	ldr	r1, [r4, #652]	; 0x28c
   12b04:	mul	r2, r2, fp
   12b08:	mov	r5, #0
   12b0c:	str	r5, [r9]
   12b10:	ldr	r3, [r1, r2]
   12b14:	add	r2, r1, r2
   12b18:	cmp	r3, r5
   12b1c:	str	r2, [sp, #20]
   12b20:	str	r3, [sp, #112]	; 0x70
   12b24:	str	r5, [r9, #4]
   12b28:	str	r5, [r9, #12]
   12b2c:	beq	12c3c <readstat_parse_por+0x5c0>
   12b30:	cmp	r3, #5
   12b34:	beq	12b6c <readstat_parse_por+0x4f0>
   12b38:	ldr	r5, [r4, #16]
   12b3c:	cmp	r5, #0
   12b40:	beq	12b64 <readstat_parse_por+0x4e8>
   12b44:	ldr	r3, [r4, #648]	; 0x288
   12b48:	ldr	ip, [r3, fp, lsl #2]
   12b4c:	ldr	r3, [ip, #2144]	; 0x860
   12b50:	cmp	r3, #0
   12b54:	bne	12b64 <readstat_parse_por+0x4e8>
   12b58:	ldr	r3, [r4, #644]	; 0x284
   12b5c:	cmp	r3, #0
   12b60:	beq	12dc4 <readstat_parse_por+0x748>
   12b64:	add	fp, fp, #1
   12b68:	b	12af0 <readstat_parse_por+0x474>
   12b6c:	mov	r2, #1
   12b70:	ldr	r1, [sp, #28]
   12b74:	mov	r0, r4
   12b78:	str	r3, [sp, #48]	; 0x30
   12b7c:	bl	11c20 <read_bytes>
   12b80:	cmp	r0, #1
   12b84:	beq	12be4 <readstat_parse_por+0x568>
   12b88:	ldr	r3, [sp, #48]	; 0x30
   12b8c:	mov	r5, r6
   12b90:	mov	r7, r3
   12b94:	ldr	r3, [r4, #24]
   12b98:	cmp	r3, #0
   12b9c:	beq	12bdc <readstat_parse_por+0x560>
   12ba0:	ldr	r2, [r4, #628]	; 0x274
   12ba4:	ldr	r3, [sp, #20]
   12ba8:	add	r2, r2, #1
   12bac:	str	r2, [sp]
   12bb0:	ldr	r6, [sp, #28]
   12bb4:	ldr	r2, [pc, #400]	; 12d4c <readstat_parse_por+0x6d0>
   12bb8:	add	r3, r3, #187	; 0xbb
   12bbc:	add	r2, pc, r2
   12bc0:	mov	r1, #1024	; 0x400
   12bc4:	mov	r0, r6
   12bc8:	bl	4280 <snprintf@plt>
   12bcc:	mov	r0, r6
   12bd0:	ldr	r3, [r4, #24]
   12bd4:	ldr	r1, [r4, #36]	; 0x24
   12bd8:	blx	r3
   12bdc:	mov	r6, r7
   12be0:	b	12760 <readstat_parse_por+0xe4>
   12be4:	ldrb	r2, [sp, #1088]	; 0x440
   12be8:	add	r3, r4, r2, lsl #1
   12bec:	ldrh	r3, [r3, #94]	; 0x5e
   12bf0:	cmp	r3, #90	; 0x5a
   12bf4:	beq	12d0c <readstat_parse_por+0x690>
   12bf8:	mov	r1, r9
   12bfc:	mov	r0, r4
   12c00:	str	r5, [sp, #80]	; 0x50
   12c04:	bl	11d34 <read_double_with_peek>
   12c08:	cmp	r0, #0
   12c0c:	bne	12d00 <readstat_parse_por+0x684>
   12c10:	ldr	r3, [sp, #80]	; 0x50
   12c14:	cmp	r3, #0
   12c18:	bne	12c9c <readstat_parse_por+0x620>
   12c1c:	vldr	d7, [r9]
   12c20:	ldrb	r3, [sp, #117]	; 0x75
   12c24:	vcmp.f64	d7, d7
   12c28:	bic	r3, r3, #1
   12c2c:	vmrs	APSR_nzcv, fpscr
   12c30:	orrvs	r3, r3, #1
   12c34:	strb	r3, [sp, #117]	; 0x75
   12c38:	b	12b38 <readstat_parse_por+0x4bc>
   12c3c:	ldr	r3, [sp, #36]	; 0x24
   12c40:	mov	r2, #256	; 0x100
   12c44:	ldr	r1, [sp, #40]	; 0x28
   12c48:	mov	r0, r4
   12c4c:	bl	12038 <maybe_read_string>
   12c50:	cmp	r0, #0
   12c54:	bne	12cc0 <readstat_parse_por+0x644>
   12c58:	ldr	r3, [sp, #80]	; 0x50
   12c5c:	cmp	r3, #0
   12c60:	bne	12c9c <readstat_parse_por+0x620>
   12c64:	ldr	r5, [sp, #40]	; 0x28
   12c68:	mov	r0, r5
   12c6c:	bl	41fc <strlen@plt>
   12c70:	ldr	r3, [r4, #612]	; 0x264
   12c74:	mov	r2, r5
   12c78:	str	r3, [sp]
   12c7c:	ldr	r1, [pc, #204]	; 12d50 <readstat_parse_por+0x6d4>
   12c80:	mov	r3, r0
   12c84:	mov	r0, r8
   12c88:	bl	4238 <readstat_convert@plt>
   12c8c:	cmp	r0, #0
   12c90:	bne	12cb4 <readstat_parse_por+0x638>
   12c94:	str	r8, [sp, #104]	; 0x68
   12c98:	b	12b38 <readstat_parse_por+0x4bc>
   12c9c:	mov	r5, r6
   12ca0:	mov	r6, r7
   12ca4:	cmp	fp, #0
   12ca8:	moveq	r7, r6
   12cac:	movne	r7, #5
   12cb0:	b	12bdc <readstat_parse_por+0x560>
   12cb4:	mov	r5, r6
   12cb8:	mov	r7, r0
   12cbc:	b	12bdc <readstat_parse_por+0x560>
   12cc0:	ldr	r3, [r4, #24]
   12cc4:	mov	r5, r6
   12cc8:	cmp	r3, #0
   12ccc:	mov	r7, r0
   12cd0:	beq	12bdc <readstat_parse_por+0x560>
   12cd4:	ldr	r2, [r4, #628]	; 0x274
   12cd8:	ldr	r3, [sp, #20]
   12cdc:	add	r2, r2, #1
   12ce0:	str	r2, [sp]
   12ce4:	ldr	r2, [pc, #104]	; 12d54 <readstat_parse_por+0x6d8>
   12ce8:	add	r6, sp, #1088	; 0x440
   12cec:	add	r3, r3, #187	; 0xbb
   12cf0:	mov	r0, r6
   12cf4:	add	r2, pc, r2
   12cf8:	mov	r1, #1024	; 0x400
   12cfc:	b	12bc8 <readstat_parse_por+0x54c>
   12d00:	mov	r5, r6
   12d04:	mov	r7, r0
   12d08:	b	12b94 <readstat_parse_por+0x518>
   12d0c:	mov	r5, r6
   12d10:	str	r0, [sp, #80]	; 0x50
   12d14:	mov	r6, r7
   12d18:	b	12ca4 <readstat_parse_por+0x628>
   12d1c:	nop			; (mov r0, r0)
   12d20:	.word	0x00000000
   12d24:	.word	0x7ff00000
   12d28:	.word	0x00000000
   12d2c:	.word	0xfff00000
   12d30:	.word	0x00032948
   12d34:	.word	0x000139d8
   12d38:	.word	0x00000300
   12d3c:	.word	0x000002f4
   12d40:	.word	0x00013fb4
   12d44:	.word	0x00013f4c
   12d48:	.word	0x00013efc
   12d4c:	.word	0x00013cf4
   12d50:	.word	0x00000401
   12d54:	.word	0x00013bbc
   12d58:	.word	0x000f4240
   12d5c:	.word	0x00004e20
   12d60:	ldr	r3, [r4, #644]	; 0x284
   12d64:	ldr	r2, [r4, #36]	; 0x24
   12d68:	cmp	r3, #0
   12d6c:	subne	r3, r3, #1
   12d70:	ldreq	r3, [r4, #628]	; 0x274
   12d74:	strne	r3, [r4, #644]	; 0x284
   12d78:	addeq	r3, r3, #1
   12d7c:	streq	r3, [r4, #628]	; 0x274
   12d80:	ldr	r3, [r4, #44]	; 0x2c
   12d84:	ldr	r1, [r4, #28]
   12d88:	ldr	r0, [r4, #32]
   12d8c:	ldr	r5, [r3, #16]
   12d90:	ldr	r3, [r3, #20]
   12d94:	blx	r5
   12d98:	cmp	r0, #0
   12d9c:	bne	12db8 <readstat_parse_por+0x73c>
   12da0:	ldr	r3, [r4, #640]	; 0x280
   12da4:	cmp	r3, #0
   12da8:	ble	12ad0 <readstat_parse_por+0x454>
   12dac:	ldr	r2, [r4, #628]	; 0x274
   12db0:	cmp	r3, r2
   12db4:	bne	12ad0 <readstat_parse_por+0x454>
   12db8:	mov	r5, r6
   12dbc:	mov	r6, r0
   12dc0:	b	12760 <readstat_parse_por+0xe4>
   12dc4:	ldr	r3, [sp, #44]	; 0x2c
   12dc8:	ldr	lr, [r4, #36]	; 0x24
   12dcc:	ldm	r3, {r0, r1}
   12dd0:	ldm	r9, {r2, r3}
   12dd4:	str	lr, [sp, #8]
   12dd8:	stm	sp, {r0, r1}
   12ddc:	mov	r1, ip
   12de0:	ldr	r0, [r4, #628]	; 0x274
   12de4:	blx	r5
   12de8:	cmp	r0, #0
   12dec:	beq	12b64 <readstat_parse_por+0x4e8>
   12df0:	mov	r5, r6
   12df4:	mov	r7, #4
   12df8:	b	12bdc <readstat_parse_por+0x560>
   12dfc:	add	r7, sp, #3136	; 0xc40
   12e00:	add	r7, r7, #8
   12e04:	mov	ip, #0
   12e08:	ldr	r3, [r4, #624]	; 0x270
   12e0c:	ldr	r2, [sp, #60]	; 0x3c
   12e10:	mov	r1, #256	; 0x100
   12e14:	mov	r0, sl
   12e18:	str	ip, [r7, #-3072]!	; 0xfffff400
   12e1c:	str	ip, [sp, #68]	; 0x44
   12e20:	bl	4280 <snprintf@plt>
   12e24:	sub	r2, r7, #4
   12e28:	ldr	r1, [pc, #-216]	; 12d58 <readstat_parse_por+0x6dc>
   12e2c:	mov	r0, r4
   12e30:	bl	55e8 <read_integer_in_range.constprop.1>
   12e34:	subs	r6, r0, #0
   12e38:	bne	12f4c <readstat_parse_por+0x8d0>
   12e3c:	ldr	r9, [sp, #32]
   12e40:	mov	r5, #5
   12e44:	add	fp, sp, #832	; 0x340
   12e48:	ldr	ip, [sp, #68]	; 0x44
   12e4c:	mov	r3, r8
   12e50:	cmp	r9, ip
   12e54:	mov	r2, #256	; 0x100
   12e58:	mov	r1, fp
   12e5c:	mov	r0, r4
   12e60:	bge	12ff0 <readstat_parse_por+0x974>
   12e64:	str	r6, [sp, #2112]	; 0x840
   12e68:	bl	12038 <maybe_read_string>
   12e6c:	cmp	r0, #0
   12e70:	bne	12f54 <readstat_parse_por+0x8d8>
   12e74:	ldr	r3, [sp, #2112]	; 0x840
   12e78:	mov	r0, fp
   12e7c:	cmp	r3, #0
   12e80:	bne	129bc <readstat_parse_por+0x340>
   12e84:	ldr	r1, [r4, #656]	; 0x290
   12e88:	bl	3fd4 <ck_str_hash_lookup@plt>
   12e8c:	add	r9, r9, #1
   12e90:	cmp	r0, #0
   12e94:	ldrne	r3, [r4, #624]	; 0x270
   12e98:	ldrne	r5, [r0]
   12e9c:	strne	r3, [r0, #4]
   12ea0:	b	12e48 <readstat_parse_por+0x7cc>
   12ea4:	ldr	r5, [r4, #636]	; 0x27c
   12ea8:	cmp	r5, #0
   12eac:	blt	129bc <readstat_parse_por+0x340>
   12eb0:	ldr	r3, [r4, #632]	; 0x278
   12eb4:	cmp	r5, r3
   12eb8:	beq	129bc <readstat_parse_por+0x340>
   12ebc:	ldr	r1, [r4, #652]	; 0x28c
   12ec0:	mov	r0, #280	; 0x118
   12ec4:	mov	ip, #0
   12ec8:	mla	r5, r0, r5, r1
   12ecc:	mov	r3, sl
   12ed0:	mov	r2, #256	; 0x100
   12ed4:	mov	r1, r8
   12ed8:	mov	r0, r4
   12edc:	str	ip, [sp, #1088]	; 0x440
   12ee0:	bl	12038 <maybe_read_string>
   12ee4:	subs	r6, r0, #0
   12ee8:	bne	12f4c <readstat_parse_por+0x8d0>
   12eec:	ldr	r3, [sp, #1088]	; 0x440
   12ef0:	cmp	r3, #0
   12ef4:	bne	129bc <readstat_parse_por+0x340>
   12ef8:	mov	r0, r8
   12efc:	bl	41fc <strlen@plt>
   12f00:	lsl	r1, r0, #2
   12f04:	add	r1, r1, #1
   12f08:	ldr	r0, [r5, #264]	; 0x108
   12f0c:	bl	3ff8 <realloc@plt>
   12f10:	mov	r6, r0
   12f14:	str	r0, [r5, #264]	; 0x108
   12f18:	mov	r0, r8
   12f1c:	bl	41fc <strlen@plt>
   12f20:	ldr	r2, [r4, #612]	; 0x264
   12f24:	str	r2, [sp]
   12f28:	mov	r2, r8
   12f2c:	lsl	r1, r0, #2
   12f30:	mov	r3, r0
   12f34:	add	r1, r1, #1
   12f38:	mov	r0, r6
   12f3c:	bl	4238 <readstat_convert@plt>
   12f40:	mov	r6, r0
   12f44:	cmp	r6, #0
   12f48:	beq	129a4 <readstat_parse_por+0x328>
   12f4c:	ldr	r5, [sp, #20]
   12f50:	b	12760 <readstat_parse_por+0xe4>
   12f54:	ldr	r5, [sp, #20]
   12f58:	mov	r6, r0
   12f5c:	b	12760 <readstat_parse_por+0xe4>
   12f60:	mov	r3, #0
   12f64:	add	r2, sp, #832	; 0x340
   12f68:	ldr	r1, [pc, #-536]	; 12d58 <readstat_parse_por+0x6dc>
   12f6c:	mov	r0, r4
   12f70:	str	r3, [sp, #832]	; 0x340
   12f74:	bl	55e8 <read_integer_in_range.constprop.1>
   12f78:	subs	r6, r0, #0
   12f7c:	bne	12f4c <readstat_parse_por+0x8d0>
   12f80:	ldr	r5, [sp, #32]
   12f84:	ldr	ip, [sp, #832]	; 0x340
   12f88:	mov	r3, sl
   12f8c:	cmp	r5, ip
   12f90:	mov	r2, #256	; 0x100
   12f94:	mov	r1, r8
   12f98:	mov	r0, r4
   12f9c:	bge	129a4 <readstat_parse_por+0x328>
   12fa0:	str	r6, [sp, #1088]	; 0x440
   12fa4:	bl	12038 <maybe_read_string>
   12fa8:	cmp	r0, #0
   12fac:	bne	12fe8 <readstat_parse_por+0x96c>
   12fb0:	ldr	r3, [sp, #1088]	; 0x440
   12fb4:	cmp	r3, #0
   12fb8:	bne	129bc <readstat_parse_por+0x340>
   12fbc:	ldr	r3, [r4, #4]
   12fc0:	mov	r0, r5
   12fc4:	cmp	r3, #0
   12fc8:	mov	r1, r8
   12fcc:	beq	12fe0 <readstat_parse_por+0x964>
   12fd0:	ldr	r2, [r4, #36]	; 0x24
   12fd4:	blx	r3
   12fd8:	cmp	r0, #0
   12fdc:	bne	13228 <readstat_parse_por+0xbac>
   12fe0:	add	r5, r5, #1
   12fe4:	b	12f84 <readstat_parse_por+0x908>
   12fe8:	mov	r6, r0
   12fec:	b	12f44 <readstat_parse_por+0x8c8>
   12ff0:	mov	r2, r7
   12ff4:	ldr	r1, [pc, #-676]	; 12d58 <readstat_parse_por+0x6dc>
   12ff8:	bl	55e8 <read_integer_in_range.constprop.1>
   12ffc:	subs	r6, r0, #0
   13000:	bne	12f4c <readstat_parse_por+0x8d0>
   13004:	ldr	r3, [sp, #24]
   13008:	ldr	r9, [sp, #32]
   1300c:	sub	r2, r3, #8
   13010:	sub	r7, r3, #12
   13014:	add	r3, sp, #832	; 0x340
   13018:	str	r3, [sp, #40]	; 0x28
   1301c:	ldr	r3, [sp, #44]	; 0x2c
   13020:	mov	fp, r6
   13024:	sub	r3, r3, #8
   13028:	str	r2, [sp, #52]	; 0x34
   1302c:	str	r3, [sp, #56]	; 0x38
   13030:	ldr	r3, [sp, #72]	; 0x48
   13034:	cmp	r9, r3
   13038:	bge	13150 <readstat_parse_por+0xad4>
   1303c:	ldr	r3, [sp, #36]	; 0x24
   13040:	cmp	r5, #0
   13044:	str	r5, [sp, #112]	; 0x70
   13048:	str	fp, [r3]
   1304c:	str	fp, [r3, #4]
   13050:	str	fp, [r3, #12]
   13054:	bne	130fc <readstat_parse_por+0xa80>
   13058:	mov	r3, r7
   1305c:	mov	r2, #256	; 0x100
   13060:	ldr	r1, [sp, #40]	; 0x28
   13064:	mov	r0, r4
   13068:	str	r5, [sp, #76]	; 0x4c
   1306c:	bl	12038 <maybe_read_string>
   13070:	subs	r6, r0, #0
   13074:	bne	12f4c <readstat_parse_por+0x8d0>
   13078:	ldr	r3, [sp, #76]	; 0x4c
   1307c:	cmp	r3, #0
   13080:	bne	129bc <readstat_parse_por+0x340>
   13084:	mov	r3, r7
   13088:	mov	r2, #256	; 0x100
   1308c:	mov	r1, r8
   13090:	mov	r0, r4
   13094:	str	r5, [sp, #76]	; 0x4c
   13098:	bl	12038 <maybe_read_string>
   1309c:	subs	r6, r0, #0
   130a0:	bne	12f4c <readstat_parse_por+0x8d0>
   130a4:	ldr	r3, [sp, #76]	; 0x4c
   130a8:	cmp	r3, #0
   130ac:	bne	129bc <readstat_parse_por+0x340>
   130b0:	ldr	r3, [sp, #40]	; 0x28
   130b4:	str	r3, [sp, #104]	; 0x68
   130b8:	ldr	r6, [r4, #20]
   130bc:	cmp	r6, #0
   130c0:	beq	130f4 <readstat_parse_por+0xa78>
   130c4:	ldr	r3, [sp, #56]	; 0x38
   130c8:	ldm	r3, {r0, r1}
   130cc:	ldr	r3, [r4, #36]	; 0x24
   130d0:	str	r8, [sp, #8]
   130d4:	str	r3, [sp, #12]
   130d8:	ldr	r3, [sp, #36]	; 0x24
   130dc:	stm	sp, {r0, r1}
   130e0:	mov	r0, sl
   130e4:	ldm	r3, {r2, r3}
   130e8:	blx	r6
   130ec:	cmp	r0, #0
   130f0:	bne	13228 <readstat_parse_por+0xbac>
   130f4:	add	r9, r9, #1
   130f8:	b	13030 <readstat_parse_por+0x9b4>
   130fc:	ldr	r1, [sp, #52]	; 0x34
   13100:	mov	r0, r4
   13104:	bl	55a8 <read_double>
   13108:	subs	r6, r0, #0
   1310c:	bne	12f4c <readstat_parse_por+0x8d0>
   13110:	mov	r3, r7
   13114:	mov	r2, #256	; 0x100
   13118:	mov	r1, r8
   1311c:	mov	r0, r4
   13120:	str	r6, [sp, #76]	; 0x4c
   13124:	bl	12038 <maybe_read_string>
   13128:	subs	r6, r0, #0
   1312c:	bne	12f4c <readstat_parse_por+0x8d0>
   13130:	ldr	r3, [sp, #76]	; 0x4c
   13134:	cmp	r3, #0
   13138:	bne	129bc <readstat_parse_por+0x340>
   1313c:	ldr	r3, [sp, #24]
   13140:	ldr	r1, [sp, #36]	; 0x24
   13144:	ldrd	r2, [r3, #-8]
   13148:	strd	r2, [r1]
   1314c:	b	130b8 <readstat_parse_por+0xa3c>
   13150:	ldr	r3, [r4, #624]	; 0x270
   13154:	add	r3, r3, #1
   13158:	str	r3, [r4, #624]	; 0x270
   1315c:	b	129a4 <readstat_parse_por+0x328>
   13160:	ldr	r3, [r4, #632]	; 0x278
   13164:	cmp	r3, #0
   13168:	bne	129bc <readstat_parse_por+0x340>
   1316c:	mov	r2, sl
   13170:	ldr	r1, [pc, #-1056]	; 12d58 <readstat_parse_por+0x6dc>
   13174:	mov	r0, r4
   13178:	bl	55e8 <read_integer_in_range.constprop.1>
   1317c:	subs	r6, r0, #0
   13180:	bne	12f4c <readstat_parse_por+0x8d0>
   13184:	ldr	r0, [sp, #1088]	; 0x440
   13188:	mov	r1, #4
   1318c:	str	r0, [r4, #632]	; 0x278
   13190:	bl	3fc8 <readstat_calloc@plt>
   13194:	mov	r1, #280	; 0x118
   13198:	str	r0, [r4, #648]	; 0x288
   1319c:	ldr	r0, [r4, #632]	; 0x278
   131a0:	bl	3fc8 <readstat_calloc@plt>
   131a4:	ldr	r3, [r4, #648]	; 0x288
   131a8:	cmp	r3, #0
   131ac:	str	r0, [r4, #652]	; 0x28c
   131b0:	beq	1361c <readstat_parse_por+0xfa0>
   131b4:	cmp	r0, #0
   131b8:	beq	1361c <readstat_parse_por+0xfa0>
   131bc:	ldr	r5, [r4]
   131c0:	cmp	r5, #0
   131c4:	beq	129a4 <readstat_parse_por+0x328>
   131c8:	mov	r1, r6
   131cc:	mov	r2, #56	; 0x38
   131d0:	mov	r0, r8
   131d4:	bl	42a4 <memset@plt>
   131d8:	ldr	r2, [r4, #632]	; 0x278
   131dc:	ldr	r0, [r4, #60]	; 0x3c
   131e0:	ldr	lr, [sp, #48]	; 0x30
   131e4:	asr	r3, r2, #31
   131e8:	asr	r1, r0, #31
   131ec:	ldr	ip, [r4, #56]	; 0x38
   131f0:	strd	r2, [lr]
   131f4:	strd	r0, [lr, #16]
   131f8:	mvn	r2, #0
   131fc:	ldr	r1, [sp, #28]
   13200:	mvn	r3, #0
   13204:	str	r1, [sp, #2156]	; 0x86c
   13208:	str	ip, [sp, #2128]	; 0x850
   1320c:	str	ip, [sp, #2132]	; 0x854
   13210:	strd	r2, [lr, #-8]
   13214:	ldr	r1, [r4, #36]	; 0x24
   13218:	mov	r0, r8
   1321c:	blx	r5
   13220:	cmp	r0, #0
   13224:	beq	129a4 <readstat_parse_por+0x328>
   13228:	ldr	r5, [sp, #20]
   1322c:	mov	r6, #4
   13230:	b	12760 <readstat_parse_por+0xe4>
   13234:	ldr	r2, [r4, #636]	; 0x27c
   13238:	cmp	r2, #0
   1323c:	blt	129bc <readstat_parse_por+0x340>
   13240:	ldr	r3, [r4, #632]	; 0x278
   13244:	cmp	r2, r3
   13248:	beq	129bc <readstat_parse_por+0x340>
   1324c:	mov	r3, #280	; 0x118
   13250:	ldr	r5, [r4, #652]	; 0x28c
   13254:	mul	r3, r3, r2
   13258:	mov	r2, #1
   1325c:	ldr	r1, [r5, r3]
   13260:	add	r5, r5, r3
   13264:	cmp	r1, #5
   13268:	mov	r3, #2
   1326c:	str	r2, [r5, #56]	; 0x38
   13270:	str	r3, [r5, #52]	; 0x34
   13274:	beq	13348 <readstat_parse_por+0xccc>
   13278:	mov	ip, #0
   1327c:	mov	r3, r8
   13280:	mov	r2, #33	; 0x21
   13284:	add	r1, r5, #88	; 0x58
   13288:	mov	r0, r4
   1328c:	str	ip, [sp, #2112]	; 0x840
   13290:	bl	12038 <maybe_read_string>
   13294:	subs	r6, r0, #0
   13298:	bne	12f4c <readstat_parse_por+0x8d0>
   1329c:	ldr	r3, [sp, #2112]	; 0x840
   132a0:	cmp	r3, #0
   132a4:	bne	129bc <readstat_parse_por+0x340>
   132a8:	add	r1, r5, #121	; 0x79
   132ac:	mov	r3, r8
   132b0:	mov	r2, #33	; 0x21
   132b4:	mov	r0, r4
   132b8:	str	r6, [sp, #2112]	; 0x840
   132bc:	bl	12038 <maybe_read_string>
   132c0:	subs	r6, r0, #0
   132c4:	beq	12a5c <readstat_parse_por+0x3e0>
   132c8:	b	12f4c <readstat_parse_por+0x8d0>
   132cc:	ldr	r2, [r4, #636]	; 0x27c
   132d0:	cmp	r2, #0
   132d4:	blt	129bc <readstat_parse_por+0x340>
   132d8:	ldr	r3, [r4, #632]	; 0x278
   132dc:	cmp	r2, r3
   132e0:	beq	129bc <readstat_parse_por+0x340>
   132e4:	mov	r3, #280	; 0x118
   132e8:	ldr	r5, [r4, #652]	; 0x28c
   132ec:	mul	r3, r3, r2
   132f0:	mov	r2, #1
   132f4:	ldr	r1, [r5, r3]
   132f8:	add	r5, r5, r3
   132fc:	cmp	r1, #5
   13300:	mov	r3, #2
   13304:	str	r2, [r5, #56]	; 0x38
   13308:	str	r3, [r5, #52]	; 0x34
   1330c:	beq	13370 <readstat_parse_por+0xcf4>
   13310:	mov	ip, #0
   13314:	mov	r3, r8
   13318:	mov	r2, #33	; 0x21
   1331c:	add	r1, r5, #88	; 0x58
   13320:	mov	r0, r4
   13324:	str	ip, [sp, #2112]	; 0x840
   13328:	bl	12038 <maybe_read_string>
   1332c:	subs	r6, r0, #0
   13330:	bne	12f4c <readstat_parse_por+0x8d0>
   13334:	ldr	r3, [sp, #2112]	; 0x840
   13338:	cmp	r3, #0
   1333c:	bne	129bc <readstat_parse_por+0x340>
   13340:	strb	r3, [r5, #121]	; 0x79
   13344:	b	129a4 <readstat_parse_por+0x328>
   13348:	add	r1, r5, #64	; 0x40
   1334c:	mov	r0, r4
   13350:	bl	55a8 <read_double>
   13354:	subs	r6, r0, #0
   13358:	bne	12f4c <readstat_parse_por+0x8d0>
   1335c:	add	r1, r5, #72	; 0x48
   13360:	mov	r0, r4
   13364:	bl	55a8 <read_double>
   13368:	mov	r6, r0
   1336c:	b	12f44 <readstat_parse_por+0x8c8>
   13370:	add	r1, r5, #64	; 0x40
   13374:	mov	r0, r4
   13378:	bl	55a8 <read_double>
   1337c:	subs	r6, r0, #0
   13380:	bne	12f4c <readstat_parse_por+0x8d0>
   13384:	vstr	d9, [r5, #72]	; 0x48
   13388:	b	129a4 <readstat_parse_por+0x328>
   1338c:	ldr	r2, [r4, #636]	; 0x27c
   13390:	cmp	r2, #0
   13394:	blt	129bc <readstat_parse_por+0x340>
   13398:	ldr	r3, [r4, #632]	; 0x278
   1339c:	cmp	r2, r3
   133a0:	beq	129bc <readstat_parse_por+0x340>
   133a4:	mov	r3, #280	; 0x118
   133a8:	ldr	r1, [r4, #652]	; 0x28c
   133ac:	mul	r3, r3, r2
   133b0:	mov	r2, #1
   133b4:	ldr	r0, [r1, r3]
   133b8:	add	r1, r1, r3
   133bc:	cmp	r0, #5
   133c0:	mov	r3, #2
   133c4:	str	r2, [r1, #56]	; 0x38
   133c8:	str	r3, [r1, #52]	; 0x34
   133cc:	beq	13470 <readstat_parse_por+0xdf4>
   133d0:	mov	ip, #0
   133d4:	strb	ip, [r1, #88]	; 0x58
   133d8:	mov	r3, r8
   133dc:	add	r1, r1, #121	; 0x79
   133e0:	mov	r2, #33	; 0x21
   133e4:	b	12a48 <readstat_parse_por+0x3cc>
   133e8:	ldr	r2, [r4, #636]	; 0x27c
   133ec:	cmp	r2, #0
   133f0:	blt	129bc <readstat_parse_por+0x340>
   133f4:	ldr	r3, [r4, #632]	; 0x278
   133f8:	cmp	r2, r3
   133fc:	bge	129bc <readstat_parse_por+0x340>
   13400:	mov	r3, #280	; 0x118
   13404:	ldr	r1, [r4, #652]	; 0x28c
   13408:	mul	r3, r3, r2
   1340c:	add	r5, r1, r3
   13410:	ldr	r3, [r1, r3]
   13414:	cmp	r3, #5
   13418:	beq	13488 <readstat_parse_por+0xe0c>
   1341c:	ldr	r2, [r5, #52]	; 0x34
   13420:	mov	ip, #0
   13424:	mov	r3, r8
   13428:	add	r2, r2, r2, lsl #5
   1342c:	add	r1, r2, #88	; 0x58
   13430:	add	r1, r5, r1
   13434:	mov	r2, #33	; 0x21
   13438:	mov	r0, r4
   1343c:	str	ip, [sp, #2112]	; 0x840
   13440:	bl	12038 <maybe_read_string>
   13444:	subs	r6, r0, #0
   13448:	bne	12f4c <readstat_parse_por+0x8d0>
   1344c:	ldr	r3, [sp, #2112]	; 0x840
   13450:	cmp	r3, #0
   13454:	bne	129bc <readstat_parse_por+0x340>
   13458:	ldr	r3, [r5, #52]	; 0x34
   1345c:	cmp	r3, #2
   13460:	bgt	129bc <readstat_parse_por+0x340>
   13464:	add	r3, r3, #1
   13468:	str	r3, [r5, #52]	; 0x34
   1346c:	b	129a4 <readstat_parse_por+0x328>
   13470:	vstr	d8, [r1, #64]	; 0x40
   13474:	mov	r0, r4
   13478:	add	r1, r1, #72	; 0x48
   1347c:	bl	55a8 <read_double>
   13480:	mov	r6, r0
   13484:	b	12f44 <readstat_parse_por+0x8c8>
   13488:	ldr	r1, [r5, #52]	; 0x34
   1348c:	mov	r0, r4
   13490:	add	r1, r1, #8
   13494:	add	r1, r5, r1, lsl #3
   13498:	bl	55a8 <read_double>
   1349c:	subs	r6, r0, #0
   134a0:	beq	13458 <readstat_parse_por+0xddc>
   134a4:	b	12f4c <readstat_parse_por+0x8d0>
   134a8:	ldr	r3, [r4, #636]	; 0x27c
   134ac:	ldr	r2, [r4, #632]	; 0x278
   134b0:	add	r3, r3, #1
   134b4:	cmp	r3, r2
   134b8:	str	r3, [r4, #636]	; 0x27c
   134bc:	beq	129bc <readstat_parse_por+0x340>
   134c0:	mov	r2, #280	; 0x118
   134c4:	ldr	r7, [r4, #652]	; 0x28c
   134c8:	mul	r3, r2, r3
   134cc:	mvn	r1, #0
   134d0:	add	r5, r7, r3
   134d4:	add	r0, r5, #24
   134d8:	add	r2, r5, #36	; 0x24
   134dc:	add	r9, sp, #832	; 0x340
   134e0:	str	r0, [sp, #2112]	; 0x840
   134e4:	str	r2, [sp, #2116]	; 0x844
   134e8:	mov	r0, r4
   134ec:	str	r1, [r5, #4]
   134f0:	mov	r2, r9
   134f4:	ldr	r1, [pc, #-1956]	; 12d58 <readstat_parse_por+0x6dc>
   134f8:	str	r3, [sp, #40]	; 0x28
   134fc:	bl	55e8 <read_integer_in_range.constprop.1>
   13500:	subs	r6, r0, #0
   13504:	bne	12f4c <readstat_parse_por+0x8d0>
   13508:	ldr	r2, [sp, #832]	; 0x340
   1350c:	ldr	r3, [sp, #40]	; 0x28
   13510:	cmp	r2, #0
   13514:	moveq	r1, #5
   13518:	movne	r1, #0
   1351c:	add	fp, r5, #187	; 0xbb
   13520:	str	r2, [r5, #16]
   13524:	mov	r0, r4
   13528:	str	r1, [r7, r3]
   1352c:	mov	r2, #9
   13530:	mov	r1, fp
   13534:	mov	r3, sl
   13538:	str	r6, [sp, #1088]	; 0x440
   1353c:	bl	12038 <maybe_read_string>
   13540:	subs	r6, r0, #0
   13544:	bne	12f4c <readstat_parse_por+0x8d0>
   13548:	ldr	r7, [sp, #1088]	; 0x440
   1354c:	cmp	r7, #0
   13550:	bne	129bc <readstat_parse_por+0x340>
   13554:	mov	r0, fp
   13558:	mov	r1, r5
   1355c:	ldr	r2, [r4, #656]	; 0x290
   13560:	bl	44f0 <ck_str_hash_insert@plt>
   13564:	mov	fp, #120	; 0x78
   13568:	mov	r2, r9
   1356c:	mov	r1, fp
   13570:	mov	r0, r4
   13574:	ldr	r5, [r8, r7, lsl #2]
   13578:	bl	55e8 <read_integer_in_range.constprop.1>
   1357c:	add	r7, r7, #1
   13580:	mov	r2, r9
   13584:	ldr	r1, [pc, #-2096]	; 12d5c <readstat_parse_por+0x6e0>
   13588:	subs	r6, r0, #0
   1358c:	mov	r0, r4
   13590:	bne	12f4c <readstat_parse_por+0x8d0>
   13594:	ldr	r3, [sp, #832]	; 0x340
   13598:	str	r3, [r5]
   1359c:	bl	55e8 <read_integer_in_range.constprop.1>
   135a0:	mov	r2, r9
   135a4:	mov	r1, #100	; 0x64
   135a8:	subs	r6, r0, #0
   135ac:	mov	r0, r4
   135b0:	bne	12f4c <readstat_parse_por+0x8d0>
   135b4:	ldr	r3, [sp, #832]	; 0x340
   135b8:	str	r3, [r5, #4]
   135bc:	bl	55e8 <read_integer_in_range.constprop.1>
   135c0:	subs	r6, r0, #0
   135c4:	bne	12f4c <readstat_parse_por+0x8d0>
   135c8:	ldr	r3, [sp, #832]	; 0x340
   135cc:	cmp	r7, #2
   135d0:	str	r3, [r5, #8]
   135d4:	bne	13568 <readstat_parse_por+0xeec>
   135d8:	b	129a4 <readstat_parse_por+0x328>
   135dc:	mov	ip, #0
   135e0:	mov	r3, r8
   135e4:	mov	r2, #9
   135e8:	add	r1, r4, #64	; 0x40
   135ec:	b	12a48 <readstat_parse_por+0x3cc>
   135f0:	mov	r3, #0
   135f4:	mov	r2, r8
   135f8:	mov	r1, #100	; 0x64
   135fc:	mov	r0, r4
   13600:	str	r3, [sp, #2112]	; 0x840
   13604:	bl	55e8 <read_integer_in_range.constprop.1>
   13608:	subs	r6, r0, #0
   1360c:	bne	12f4c <readstat_parse_por+0x8d0>
   13610:	ldr	r3, [sp, #2112]	; 0x840
   13614:	str	r3, [r4, #608]	; 0x260
   13618:	b	129a4 <readstat_parse_por+0x328>
   1361c:	ldr	r5, [sp, #20]
   13620:	mov	r6, #3
   13624:	b	12760 <readstat_parse_por+0xe4>

00013628 <por_variable_width>:
   13628:	cmp	r0, #0
   1362c:	addeq	r0, r1, #54	; 0x36
   13630:	movne	r0, #54	; 0x36
   13634:	bx	lr

00013638 <por_metadata_ok>:
   13638:	ldr	r0, [r0, #16]
   1363c:	cmp	r0, #0
   13640:	movne	r0, #6
   13644:	moveq	r0, #0
   13648:	bx	lr

0001364c <por_write_string_n>:
   1364c:	push	{r4, r5, r6, r7, r8, lr}
   13650:	mov	r7, r0
   13654:	sub	sp, sp, #1040	; 0x410
   13658:	mov	r0, r3
   1365c:	mov	r4, r3
   13660:	mov	r6, r1
   13664:	mov	r8, r2
   13668:	bl	410c <malloc@plt>
   1366c:	ldr	r2, [r6, #4]
   13670:	ldr	r3, [r6]
   13674:	mov	r1, r4
   13678:	str	r2, [sp, #4]
   1367c:	str	r3, [sp]
   13680:	mov	r3, r4
   13684:	mov	r2, r0
   13688:	mov	r5, r0
   1368c:	mov	r0, r8
   13690:	bl	4394 <por_utf8_decode@plt>
   13694:	cmn	r0, #1
   13698:	beq	136dc <por_write_string_n+0x90>
   1369c:	ldr	r3, [pc, #140]	; 13730 <por_write_string_n+0xe4>
   136a0:	mov	r2, r0
   136a4:	add	r3, pc, r3
   136a8:	str	r3, [sp]
   136ac:	mov	r0, r7
   136b0:	mov	r3, #80	; 0x50
   136b4:	mov	r1, r5
   136b8:	bl	4520 <readstat_write_bytes_as_lines@plt>
   136bc:	mov	r4, r0
   136c0:	cmp	r5, #0
   136c4:	beq	136d0 <por_write_string_n+0x84>
   136c8:	mov	r0, r5
   136cc:	bl	3ec0 <free@plt>
   136d0:	mov	r0, r4
   136d4:	add	sp, sp, #1040	; 0x410
   136d8:	pop	{r4, r5, r6, r7, r8, pc}
   136dc:	ldr	r3, [r7, #296]	; 0x128
   136e0:	cmp	r3, #0
   136e4:	moveq	r4, #16
   136e8:	beq	136c0 <por_write_string_n+0x74>
   136ec:	ldr	r2, [pc, #64]	; 13734 <por_write_string_n+0xe8>
   136f0:	mov	r3, #0
   136f4:	str	r4, [sp, #8]
   136f8:	str	r4, [sp]
   136fc:	add	r4, sp, #16
   13700:	mov	r0, r4
   13704:	str	r3, [sp, #4]
   13708:	add	r2, pc, r2
   1370c:	mov	r1, #1024	; 0x400
   13710:	str	r8, [sp, #12]
   13714:	bl	4280 <snprintf@plt>
   13718:	mov	r0, r4
   1371c:	ldr	r3, [r7, #296]	; 0x128
   13720:	ldr	r1, [r7, #304]	; 0x130
   13724:	blx	r3
   13728:	mov	r4, #16
   1372c:	b	136c0 <por_write_string_n+0x74>
   13730:	.word	0x00013250
   13734:	.word	0x000131c0

00013738 <por_write_row>:
   13738:	subs	r3, r2, #0
   1373c:	mov	r2, r1
   13740:	beq	13788 <por_write_row+0x50>
   13744:	push	{r4, r5, lr}
   13748:	mov	r4, #0
   1374c:	mov	ip, r4
   13750:	sub	r5, r1, #1
   13754:	ldrb	lr, [r5, #1]!
   13758:	cmp	lr, #0
   1375c:	beq	1376c <por_write_row+0x34>
   13760:	cmp	r4, ip
   13764:	strbne	lr, [r2, r4]
   13768:	add	r4, r4, #1
   1376c:	add	ip, ip, #1
   13770:	cmp	ip, r3
   13774:	bne	13754 <por_write_row+0x1c>
   13778:	mov	r3, r4
   1377c:	ldr	r1, [r0, #300]	; 0x12c
   13780:	pop	{r4, r5, lr}
   13784:	b	1364c <por_write_string_n>
   13788:	ldr	r1, [r0, #300]	; 0x12c
   1378c:	b	1364c <por_write_string_n>

00013790 <por_variable_ok>:
   13790:	push	{r4, r5, r6, lr}
   13794:	bl	4364 <readstat_variable_get_name@plt>
   13798:	mov	r4, r0
   1379c:	bl	41fc <strlen@plt>
   137a0:	sub	r0, r0, #1
   137a4:	cmp	r0, #7
   137a8:	bls	137b4 <por_variable_ok+0x24>
   137ac:	mov	r0, #28
   137b0:	pop	{r4, r5, r6, pc}
   137b4:	ldrb	r5, [r4]
   137b8:	cmp	r5, #0
   137bc:	beq	13834 <por_variable_ok+0xa4>
   137c0:	ldr	lr, [pc, #116]	; 1383c <por_variable_ok+0xac>
   137c4:	mov	r0, r4
   137c8:	mov	r2, r5
   137cc:	mov	ip, #0
   137d0:	sub	r3, r2, #35	; 0x23
   137d4:	mov	r1, ip
   137d8:	uxtb	r3, r3
   137dc:	cmp	r3, #22
   137e0:	mvn	r3, lr, lsr r3
   137e4:	andls	r3, r3, #1
   137e8:	eorls	r1, r3, #1
   137ec:	sub	r3, r2, #64	; 0x40
   137f0:	cmp	r3, #26
   137f4:	movhi	r3, r1
   137f8:	orrls	r3, r1, #1
   137fc:	cmp	r3, #0
   13800:	bne	13814 <por_variable_ok+0x84>
   13804:	cmp	r2, #95	; 0x5f
   13808:	beq	13814 <por_variable_ok+0x84>
   1380c:	mov	r0, #26
   13810:	pop	{r4, r5, r6, pc}
   13814:	ldrb	r2, [r0, #1]!
   13818:	cmp	r2, #0
   1381c:	bne	137d0 <por_variable_ok+0x40>
   13820:	sub	r0, r5, #64	; 0x40
   13824:	cmp	r0, #26
   13828:	movhi	r0, #25
   1382c:	movls	r0, #0
   13830:	pop	{r4, r5, r6, pc}
   13834:	mov	r0, #25
   13838:	pop	{r4, r5, r6, pc}
   1383c:	.word	0x007fe803

00013840 <por_write_string_n.constprop.4>:
   13840:	push	{r4, r5, r6, r7, lr}
   13844:	sub	sp, sp, #1040	; 0x410
   13848:	sub	sp, sp, #4
   1384c:	mov	r6, r0
   13850:	mov	r0, #1
   13854:	mov	r5, r1
   13858:	mov	r7, r2
   1385c:	bl	410c <malloc@plt>
   13860:	ldr	r1, [r5, #4]
   13864:	ldr	r2, [r5]
   13868:	mov	r3, #1
   1386c:	str	r1, [sp, #4]
   13870:	str	r2, [sp]
   13874:	mov	r1, r3
   13878:	mov	r2, r0
   1387c:	mov	r4, r0
   13880:	mov	r0, r7
   13884:	bl	4394 <por_utf8_decode@plt>
   13888:	cmn	r0, #1
   1388c:	beq	138d4 <por_write_string_n.constprop.4+0x94>
   13890:	ldr	r3, [pc, #148]	; 1392c <por_write_string_n.constprop.4+0xec>
   13894:	mov	r2, r0
   13898:	add	r3, pc, r3
   1389c:	str	r3, [sp]
   138a0:	mov	r0, r6
   138a4:	mov	r3, #80	; 0x50
   138a8:	mov	r1, r4
   138ac:	bl	4520 <readstat_write_bytes_as_lines@plt>
   138b0:	mov	r5, r0
   138b4:	cmp	r4, #0
   138b8:	beq	138c4 <por_write_string_n.constprop.4+0x84>
   138bc:	mov	r0, r4
   138c0:	bl	3ec0 <free@plt>
   138c4:	mov	r0, r5
   138c8:	add	sp, sp, #1040	; 0x410
   138cc:	add	sp, sp, #4
   138d0:	pop	{r4, r5, r6, r7, pc}
   138d4:	ldr	r3, [r6, #296]	; 0x128
   138d8:	cmp	r3, #0
   138dc:	moveq	r5, #16
   138e0:	beq	138b4 <por_write_string_n.constprop.4+0x74>
   138e4:	mov	r0, #1
   138e8:	mov	r1, #0
   138ec:	ldr	r2, [pc, #60]	; 13930 <por_write_string_n.constprop.4+0xf0>
   138f0:	mov	r3, #1
   138f4:	add	r5, sp, #16
   138f8:	strd	r0, [sp]
   138fc:	str	r3, [sp, #8]
   13900:	mov	r0, r5
   13904:	add	r2, pc, r2
   13908:	mov	r1, #1024	; 0x400
   1390c:	str	r7, [sp, #12]
   13910:	bl	4280 <snprintf@plt>
   13914:	mov	r0, r5
   13918:	ldr	r3, [r6, #296]	; 0x128
   1391c:	ldr	r1, [r6, #304]	; 0x130
   13920:	blx	r3
   13924:	mov	r5, #16
   13928:	b	138b4 <por_write_string_n.constprop.4+0x74>
   1392c:	.word	0x0001305c
   13930:	.word	0x00012fc4

00013934 <por_end_data>:
   13934:	push	{r4, r5, r6, lr}
   13938:	sub	sp, sp, #8
   1393c:	mov	r3, #0
   13940:	mov	r6, #90	; 0x5a
   13944:	ldr	r1, [r0, #300]	; 0x12c
   13948:	add	r2, sp, #4
   1394c:	mov	r4, r0
   13950:	strb	r6, [sp, #4]
   13954:	strb	r3, [sp, #5]
   13958:	bl	13840 <por_write_string_n.constprop.4>
   1395c:	subs	r5, r0, #0
   13960:	bne	13980 <por_end_data+0x4c>
   13964:	ldr	r3, [pc, #60]	; 139a8 <por_end_data+0x74>
   13968:	mov	r1, r6
   1396c:	add	r3, pc, r3
   13970:	mov	r2, #80	; 0x50
   13974:	mov	r0, r4
   13978:	bl	44e4 <readstat_write_line_padding@plt>
   1397c:	mov	r5, r0
   13980:	ldr	r4, [r4, #300]	; 0x12c
   13984:	ldr	r0, [r4]
   13988:	cmp	r0, #0
   1398c:	beq	13994 <por_end_data+0x60>
   13990:	bl	3ec0 <free@plt>
   13994:	mov	r0, r4
   13998:	bl	3ec0 <free@plt>
   1399c:	mov	r0, r5
   139a0:	add	sp, sp, #8
   139a4:	pop	{r4, r5, r6, pc}
   139a8:	.word	0x00012f88

000139ac <por_write_double_to_buffer.isra.1.constprop.5>:
   139ac:	vcmp.f64	d0, d0
   139b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   139b4:	vpush	{d8-d9}
   139b8:	mov	r5, r0
   139bc:	vmrs	APSR_nzcv, fpscr
   139c0:	sub	sp, sp, #28
   139c4:	bvs	13d10 <por_write_double_to_buffer.isra.1.constprop.5+0x364>
   139c8:	vmov.f64	d9, d0
   139cc:	vldr	d7, [pc, #908]	; 13d60 <por_write_double_to_buffer.isra.1.constprop.5+0x3b4>
   139d0:	vabs.f64	d0, d0
   139d4:	vcmp.f64	d0, d7
   139d8:	vmrs	APSR_nzcv, fpscr
   139dc:	ble	13a44 <por_write_double_to_buffer.isra.1.constprop.5+0x98>
   139e0:	vcmpe.f64	d9, #0.0
   139e4:	vmrs	APSR_nzcv, fpscr
   139e8:	bmi	13b4c <por_write_double_to_buffer.isra.1.constprop.5+0x1a0>
   139ec:	mov	r7, #5
   139f0:	mov	r4, r7
   139f4:	mov	r3, #0
   139f8:	mov	r2, #4
   139fc:	mov	r0, #3
   13a00:	mov	ip, #2
   13a04:	mov	lr, #1
   13a08:	mov	r1, #49	; 0x31
   13a0c:	strb	r1, [r5, r3]
   13a10:	mov	r6, #43	; 0x2b
   13a14:	mov	r3, #84	; 0x54
   13a18:	mov	r1, #47	; 0x2f
   13a1c:	strb	r6, [r5, lr]
   13a20:	strb	r3, [r5, ip]
   13a24:	strb	r3, [r5, r0]
   13a28:	strb	r1, [r5, r2]
   13a2c:	mov	r3, #0
   13a30:	mov	r0, r4
   13a34:	strb	r3, [r5, r7]
   13a38:	add	sp, sp, #28
   13a3c:	vpop	{d8-d9}
   13a40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a44:	add	sl, sp, #16
   13a48:	mov	r0, sl
   13a4c:	bl	4178 <modf@plt>
   13a50:	ldrd	r0, [sp, #16]
   13a54:	vmov.f64	d8, d0
   13a58:	bl	256d4 <__aeabi_d2lz>
   13a5c:	vcmpe.f64	d9, #0.0
   13a60:	vmrs	APSR_nzcv, fpscr
   13a64:	vcmp.f64	d8, #0.0
   13a68:	movmi	r3, #45	; 0x2d
   13a6c:	movmi	fp, #1
   13a70:	movpl	fp, #0
   13a74:	strmi	fp, [sp, #8]
   13a78:	movmi	r4, #3
   13a7c:	strpl	fp, [sp, #8]
   13a80:	movpl	r4, #2
   13a84:	movpl	r3, #1
   13a88:	mov	r6, r0
   13a8c:	mov	r7, r1
   13a90:	strbmi	r3, [r5]
   13a94:	movmi	r3, #2
   13a98:	orrs	r2, r6, r7
   13a9c:	bne	13b74 <por_write_double_to_buffer.isra.1.constprop.5+0x1c8>
   13aa0:	vmrs	APSR_nzcv, fpscr
   13aa4:	mov	r2, #48	; 0x30
   13aa8:	strb	r2, [r5, fp]
   13aac:	beq	13d00 <por_write_double_to_buffer.isra.1.constprop.5+0x354>
   13ab0:	strd	r6, [sp]
   13ab4:	mov	r7, #0
   13ab8:	mov	r2, #46	; 0x2e
   13abc:	strb	r2, [r5, r3]
   13ac0:	add	r6, r5, r4
   13ac4:	vldr	d9, [pc, #668]	; 13d68 <por_write_double_to_buffer.isra.1.constprop.5+0x3bc>
   13ac8:	b	13b0c <por_write_double_to_buffer.isra.1.constprop.5+0x160>
   13acc:	vcmp.f64	d8, #0.0
   13ad0:	cmp	r0, #10
   13ad4:	sbcs	r3, r1, #0
   13ad8:	strbge	r2, [r6], #1
   13adc:	strblt	ip, [r6], #1
   13ae0:	vmrs	APSR_nzcv, fpscr
   13ae4:	add	r7, r7, #1
   13ae8:	add	r3, r4, #1
   13aec:	movne	r2, #1
   13af0:	moveq	r2, #0
   13af4:	cmp	r7, #49	; 0x31
   13af8:	movgt	r2, #0
   13afc:	andle	r2, r2, #1
   13b00:	cmp	r2, #0
   13b04:	beq	13c3c <por_write_double_to_buffer.isra.1.constprop.5+0x290>
   13b08:	mov	r4, r3
   13b0c:	vmul.f64	d0, d8, d9
   13b10:	mov	r0, sl
   13b14:	bl	4178 <modf@plt>
   13b18:	ldrd	r0, [sp, #16]
   13b1c:	vmov.f64	d8, d0
   13b20:	bl	256d4 <__aeabi_d2lz>
   13b24:	cmp	r0, #0
   13b28:	sbcs	r3, r1, #0
   13b2c:	add	ip, r0, #48	; 0x30
   13b30:	add	r2, r0, #55	; 0x37
   13b34:	bge	13acc <por_write_double_to_buffer.isra.1.constprop.5+0x120>
   13b38:	mvn	r4, #0
   13b3c:	mov	r0, r4
   13b40:	add	sp, sp, #28
   13b44:	vpop	{d8-d9}
   13b48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b4c:	mov	r3, #45	; 0x2d
   13b50:	mov	r7, #6
   13b54:	strb	r3, [r0]
   13b58:	mov	r4, r7
   13b5c:	mov	r3, #1
   13b60:	mov	r2, #5
   13b64:	mov	r0, #4
   13b68:	mov	ip, #3
   13b6c:	mov	lr, #2
   13b70:	b	13a08 <por_write_double_to_buffer.isra.1.constprop.5+0x5c>
   13b74:	vmrs	APSR_nzcv, fpscr
   13b78:	bne	13dfc <por_write_double_to_buffer.isra.1.constprop.5+0x450>
   13b7c:	mov	r2, #30
   13b80:	mov	r3, #0
   13b84:	bl	255b4 <__aeabi_ldivmod>
   13b88:	strd	r2, [sp]
   13b8c:	orrs	r3, r2, r3
   13b90:	bne	13dfc <por_write_double_to_buffer.isra.1.constprop.5+0x450>
   13b94:	str	fp, [sp, #12]
   13b98:	mov	r8, #30
   13b9c:	mov	fp, sl
   13ba0:	mov	r9, #0
   13ba4:	mov	sl, r5
   13ba8:	ldrd	r4, [sp]
   13bac:	b	13bbc <por_write_double_to_buffer.isra.1.constprop.5+0x210>
   13bb0:	bl	255b4 <__aeabi_ldivmod>
   13bb4:	orrs	r3, r2, r3
   13bb8:	bne	13d2c <por_write_double_to_buffer.isra.1.constprop.5+0x380>
   13bbc:	mov	r0, r6
   13bc0:	mov	r1, r7
   13bc4:	mov	r2, r8
   13bc8:	mov	r3, r9
   13bcc:	bl	255b4 <__aeabi_ldivmod>
   13bd0:	adds	r4, r4, #1
   13bd4:	adc	r5, r5, #0
   13bd8:	mov	r2, r8
   13bdc:	mov	r3, r9
   13be0:	mov	r6, r0
   13be4:	mov	r7, r1
   13be8:	orrs	ip, r6, r7
   13bec:	bne	13bb0 <por_write_double_to_buffer.isra.1.constprop.5+0x204>
   13bf0:	strd	r4, [sp]
   13bf4:	mov	r2, #0
   13bf8:	mov	r5, sl
   13bfc:	mov	sl, fp
   13c00:	vcmp.f64	d8, #0.0
   13c04:	ldr	r3, [sp, #8]
   13c08:	add	r3, r3, r2
   13c0c:	vmrs	APSR_nzcv, fpscr
   13c10:	add	r4, r3, #1
   13c14:	beq	13c40 <por_write_double_to_buffer.isra.1.constprop.5+0x294>
   13c18:	cmp	r2, #49	; 0x31
   13c1c:	mov	r1, #46	; 0x2e
   13c20:	strb	r1, [r5, r3]
   13c24:	movle	r7, r2
   13c28:	ble	13ac0 <por_write_double_to_buffer.isra.1.constprop.5+0x114>
   13c2c:	add	r2, r3, #2
   13c30:	mov	r3, r4
   13c34:	mov	r4, r2
   13c38:	b	13c40 <por_write_double_to_buffer.isra.1.constprop.5+0x294>
   13c3c:	add	r4, r4, #2
   13c40:	ldrd	r0, [sp]
   13c44:	orrs	r2, r0, r1
   13c48:	beq	13d00 <por_write_double_to_buffer.isra.1.constprop.5+0x354>
   13c4c:	add	fp, r5, r4
   13c50:	sub	r7, fp, #1
   13c54:	mov	r2, #43	; 0x2b
   13c58:	mov	r8, r0
   13c5c:	mov	r9, r1
   13c60:	mov	sl, r7
   13c64:	strb	r2, [r5, r3]
   13c68:	mov	r6, #0
   13c6c:	b	13c74 <por_write_double_to_buffer.isra.1.constprop.5+0x2c8>
   13c70:	mov	r6, r2
   13c74:	mov	r0, r8
   13c78:	mov	r1, r9
   13c7c:	mov	r2, #30
   13c80:	mov	r3, #0
   13c84:	bl	25688 <__aeabi_uldivmod>
   13c88:	mov	r0, r8
   13c8c:	mov	r1, r9
   13c90:	cmp	r3, #0
   13c94:	cmpeq	r2, #9
   13c98:	uxtb	r2, r2
   13c9c:	addls	r2, r2, #48	; 0x30
   13ca0:	addhi	r2, r2, #55	; 0x37
   13ca4:	strb	r2, [sl, #1]!
   13ca8:	mov	r3, #0
   13cac:	mov	r2, #30
   13cb0:	bl	25688 <__aeabi_uldivmod>
   13cb4:	add	r2, r6, #1
   13cb8:	mov	r8, r0
   13cbc:	mov	r9, r1
   13cc0:	orrs	r3, r8, r9
   13cc4:	bne	13c70 <por_write_double_to_buffer.isra.1.constprop.5+0x2c4>
   13cc8:	cmp	r6, #0
   13ccc:	beq	13cf8 <por_write_double_to_buffer.isra.1.constprop.5+0x34c>
   13cd0:	add	r6, fp, r6
   13cd4:	mov	r3, #0
   13cd8:	ldrb	r1, [r7, #1]
   13cdc:	ldrb	r0, [r6]
   13ce0:	add	r3, r3, #1
   13ce4:	strb	r0, [r7, #1]!
   13ce8:	strb	r1, [r6], #-1
   13cec:	sub	r1, r6, fp
   13cf0:	cmp	r3, r1
   13cf4:	blt	13cd8 <por_write_double_to_buffer.isra.1.constprop.5+0x32c>
   13cf8:	add	r3, r2, r4
   13cfc:	add	r4, r3, #1
   13d00:	mov	r2, #47	; 0x2f
   13d04:	mov	r7, r4
   13d08:	strb	r2, [r5, r3]
   13d0c:	b	13a2c <por_write_double_to_buffer.isra.1.constprop.5+0x80>
   13d10:	mov	r2, #42	; 0x2a
   13d14:	mov	r3, #46	; 0x2e
   13d18:	mov	r7, #2
   13d1c:	strb	r2, [r0]
   13d20:	strb	r3, [r0, #1]
   13d24:	mov	r4, r7
   13d28:	b	13a2c <por_write_double_to_buffer.isra.1.constprop.5+0x80>
   13d2c:	strd	r4, [sp]
   13d30:	mov	r5, sl
   13d34:	mov	sl, fp
   13d38:	ldr	fp, [sp, #12]
   13d3c:	orrs	r3, r6, r7
   13d40:	add	fp, r5, fp
   13d44:	moveq	r2, #0
   13d48:	beq	13c00 <por_write_double_to_buffer.isra.1.constprop.5+0x254>
   13d4c:	sub	r8, fp, #1
   13d50:	mov	r9, r8
   13d54:	mov	r4, #0
   13d58:	b	13d74 <por_write_double_to_buffer.isra.1.constprop.5+0x3c8>
   13d5c:	nop			; (mov r0, r0)
   13d60:	.word	0xffffffff
   13d64:	.word	0x7fefffff
   13d68:	.word	0x00000000
   13d6c:	.word	0x403e0000
   13d70:	mov	r4, r2
   13d74:	mov	r0, r6
   13d78:	mov	r1, r7
   13d7c:	mov	r2, #30
   13d80:	mov	r3, #0
   13d84:	bl	25688 <__aeabi_uldivmod>
   13d88:	mov	r0, r6
   13d8c:	mov	r1, r7
   13d90:	cmp	r3, #0
   13d94:	cmpeq	r2, #9
   13d98:	uxtb	r2, r2
   13d9c:	addls	r2, r2, #48	; 0x30
   13da0:	addhi	r2, r2, #55	; 0x37
   13da4:	strb	r2, [r9, #1]!
   13da8:	mov	r3, #0
   13dac:	mov	r2, #30
   13db0:	bl	25688 <__aeabi_uldivmod>
   13db4:	add	r2, r4, #1
   13db8:	mov	r6, r0
   13dbc:	mov	r7, r1
   13dc0:	orrs	r3, r6, r7
   13dc4:	bne	13d70 <por_write_double_to_buffer.isra.1.constprop.5+0x3c4>
   13dc8:	cmp	r4, #0
   13dcc:	beq	13c00 <por_write_double_to_buffer.isra.1.constprop.5+0x254>
   13dd0:	add	r4, fp, r4
   13dd4:	mov	r3, #0
   13dd8:	ldrb	r1, [r8, #1]
   13ddc:	ldrb	r0, [r4]
   13de0:	add	r3, r3, #1
   13de4:	strb	r0, [r8, #1]!
   13de8:	strb	r1, [r4], #-1
   13dec:	sub	r1, r4, fp
   13df0:	cmp	r3, r1
   13df4:	blt	13dd8 <por_write_double_to_buffer.isra.1.constprop.5+0x42c>
   13df8:	b	13c00 <por_write_double_to_buffer.isra.1.constprop.5+0x254>
   13dfc:	mov	r2, #0
   13e00:	mov	r3, #0
   13e04:	strd	r2, [sp]
   13e08:	b	13d3c <por_write_double_to_buffer.isra.1.constprop.5+0x390>

00013e0c <por_write_string_value>:
   13e0c:	push	{r4, r5, r6, r7, r8, lr}
   13e10:	mov	r6, r0
   13e14:	mov	r0, r2
   13e18:	mov	r5, r2
   13e1c:	mov	r7, r1
   13e20:	bl	41fc <strlen@plt>
   13e24:	subs	r4, r0, #0
   13e28:	ldreq	r5, [pc, #76]	; 13e7c <por_write_string_value+0x70>
   13e2c:	moveq	r4, #1
   13e30:	addeq	r5, pc, r5
   13e34:	mov	r0, r7
   13e38:	bl	42c8 <readstat_variable_get_storage_width@plt>
   13e3c:	cmp	r4, r0
   13e40:	movcs	r4, r0
   13e44:	mov	r0, r6
   13e48:	vmov	s15, r4
   13e4c:	vcvt.f64.u32	d0, s15
   13e50:	bl	139ac <por_write_double_to_buffer.isra.1.constprop.5>
   13e54:	cmn	r0, #1
   13e58:	bne	13e64 <por_write_string_value+0x58>
   13e5c:	mov	r0, #13
   13e60:	pop	{r4, r5, r6, r7, r8, pc}
   13e64:	mov	r2, r4
   13e68:	mov	r1, r5
   13e6c:	add	r0, r6, r0
   13e70:	bl	42bc <strncpy@plt>
   13e74:	mov	r0, #0
   13e78:	pop	{r4, r5, r6, r7, r8, pc}
   13e7c:	.word	0x00012ac8

00013e80 <por_write_int8_value>:
   13e80:	vmov	s15, r2
   13e84:	push	{r4, lr}
   13e88:	vcvt.f64.s32	d0, s15
   13e8c:	bl	139ac <por_write_double_to_buffer.isra.1.constprop.5>
   13e90:	cmn	r0, #1
   13e94:	moveq	r0, #13
   13e98:	movne	r0, #0
   13e9c:	pop	{r4, pc}

00013ea0 <por_write_int16_value>:
   13ea0:	vmov	s15, r2
   13ea4:	push	{r4, lr}
   13ea8:	vcvt.f64.s32	d0, s15
   13eac:	bl	139ac <por_write_double_to_buffer.isra.1.constprop.5>
   13eb0:	cmn	r0, #1
   13eb4:	moveq	r0, #13
   13eb8:	movne	r0, #0
   13ebc:	pop	{r4, pc}

00013ec0 <por_write_int32_value>:
   13ec0:	vmov	s15, r2
   13ec4:	push	{r4, lr}
   13ec8:	vcvt.f64.s32	d0, s15
   13ecc:	bl	139ac <por_write_double_to_buffer.isra.1.constprop.5>
   13ed0:	cmn	r0, #1
   13ed4:	moveq	r0, #13
   13ed8:	movne	r0, #0
   13edc:	pop	{r4, pc}

00013ee0 <por_write_float_value>:
   13ee0:	push	{r4, lr}
   13ee4:	vcvt.f64.f32	d0, s0
   13ee8:	bl	139ac <por_write_double_to_buffer.isra.1.constprop.5>
   13eec:	cmn	r0, #1
   13ef0:	moveq	r0, #13
   13ef4:	movne	r0, #0
   13ef8:	pop	{r4, pc}

00013efc <por_write_double_value>:
   13efc:	push	{r4, lr}
   13f00:	bl	139ac <por_write_double_to_buffer.isra.1.constprop.5>
   13f04:	cmn	r0, #1
   13f08:	moveq	r0, #13
   13f0c:	movne	r0, #0
   13f10:	pop	{r4, pc}

00013f14 <por_write_double>:
   13f14:	push	{r4, r5, r6, r7, r8, lr}
   13f18:	vpush	{d8}
   13f1c:	mov	r5, r0
   13f20:	mov	r8, r1
   13f24:	vmov.f64	d8, d0
   13f28:	sub	sp, sp, #1296	; 0x510
   13f2c:	add	r6, sp, #16
   13f30:	mov	r0, r6
   13f34:	bl	139ac <por_write_double_to_buffer.isra.1.constprop.5>
   13f38:	cmn	r0, #1
   13f3c:	beq	14010 <por_write_double+0xfc>
   13f40:	mov	r4, r0
   13f44:	bl	410c <malloc@plt>
   13f48:	ldr	r1, [r8, #4]
   13f4c:	ldr	r3, [r8]
   13f50:	str	r1, [sp, #4]
   13f54:	str	r3, [sp]
   13f58:	mov	r1, r4
   13f5c:	mov	r3, r4
   13f60:	mov	r2, r0
   13f64:	mov	r7, r0
   13f68:	mov	r0, r6
   13f6c:	bl	4394 <por_utf8_decode@plt>
   13f70:	cmn	r0, #1
   13f74:	beq	13fbc <por_write_double+0xa8>
   13f78:	ldr	r3, [pc, #224]	; 14060 <por_write_double+0x14c>
   13f7c:	mov	r2, r0
   13f80:	add	r3, pc, r3
   13f84:	str	r3, [sp]
   13f88:	mov	r0, r5
   13f8c:	mov	r3, #80	; 0x50
   13f90:	mov	r1, r7
   13f94:	bl	4520 <readstat_write_bytes_as_lines@plt>
   13f98:	mov	r4, r0
   13f9c:	cmp	r7, #0
   13fa0:	beq	13fac <por_write_double+0x98>
   13fa4:	mov	r0, r7
   13fa8:	bl	3ec0 <free@plt>
   13fac:	mov	r0, r4
   13fb0:	add	sp, sp, #1296	; 0x510
   13fb4:	vpop	{d8}
   13fb8:	pop	{r4, r5, r6, r7, r8, pc}
   13fbc:	ldr	r3, [r5, #296]	; 0x128
   13fc0:	cmp	r3, #0
   13fc4:	moveq	r4, #16
   13fc8:	beq	13f9c <por_write_double+0x88>
   13fcc:	ldr	r2, [pc, #144]	; 14064 <por_write_double+0x150>
   13fd0:	mov	r3, #0
   13fd4:	str	r4, [sp, #8]
   13fd8:	str	r4, [sp]
   13fdc:	add	r4, sp, #272	; 0x110
   13fe0:	mov	r0, r4
   13fe4:	str	r3, [sp, #4]
   13fe8:	add	r2, pc, r2
   13fec:	mov	r1, #1024	; 0x400
   13ff0:	str	r6, [sp, #12]
   13ff4:	bl	4280 <snprintf@plt>
   13ff8:	mov	r0, r4
   13ffc:	ldr	r3, [r5, #296]	; 0x128
   14000:	ldr	r1, [r5, #304]	; 0x130
   14004:	blx	r3
   14008:	mov	r4, #16
   1400c:	b	13f9c <por_write_double+0x88>
   14010:	ldr	r3, [r5, #296]	; 0x128
   14014:	cmp	r3, #0
   14018:	moveq	r4, #13
   1401c:	beq	13fac <por_write_double+0x98>
   14020:	ldr	r2, [pc, #64]	; 14068 <por_write_double+0x154>
   14024:	add	r4, sp, #272	; 0x110
   14028:	add	r2, pc, r2
   1402c:	vstr	d8, [sp]
   14030:	mov	r0, r4
   14034:	mov	r1, #1024	; 0x400
   14038:	bl	4280 <snprintf@plt>
   1403c:	mov	r0, r4
   14040:	ldr	r3, [r5, #296]	; 0x128
   14044:	ldr	r1, [r5, #304]	; 0x130
   14048:	blx	r3
   1404c:	mov	r4, #13
   14050:	mov	r0, r4
   14054:	add	sp, sp, #1296	; 0x510
   14058:	vpop	{d8}
   1405c:	pop	{r4, r5, r6, r7, r8, pc}
   14060:	.word	0x00012974
   14064:	.word	0x000128e0
   14068:	.word	0x000128d4

0001406c <por_write_string_field_n>:
   1406c:	vmov	s15, r3
   14070:	push	{r4, r5, r6, lr}
   14074:	sub	sp, sp, #8
   14078:	mov	r6, r2
   1407c:	vcvt.f64.u32	d0, s15
   14080:	str	r3, [sp, #4]
   14084:	mov	r4, r0
   14088:	mov	r5, r1
   1408c:	bl	13f14 <por_write_double>
   14090:	cmp	r0, #0
   14094:	beq	140a0 <por_write_string_field_n+0x34>
   14098:	add	sp, sp, #8
   1409c:	pop	{r4, r5, r6, pc}
   140a0:	mov	r2, r6
   140a4:	mov	r1, r5
   140a8:	mov	r0, r4
   140ac:	ldr	r3, [sp, #4]
   140b0:	add	sp, sp, #8
   140b4:	pop	{r4, r5, r6, lr}
   140b8:	b	1364c <por_write_string_n>

000140bc <por_emit_header>:
   140bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   140c0:	add	r9, r0, #88	; 0x58
   140c4:	sub	sp, sp, #1488	; 0x5d0
   140c8:	sub	sp, sp, #12
   140cc:	mov	r5, r0
   140d0:	mov	r0, r9
   140d4:	mov	r6, r1
   140d8:	bl	41fc <strlen@plt>
   140dc:	add	r8, sp, #16
   140e0:	mov	r2, #200	; 0xc8
   140e4:	mov	r1, #48	; 0x30
   140e8:	add	fp, sp, #56	; 0x38
   140ec:	add	r4, sp, #24
   140f0:	ldr	r7, [pc, #444]	; 142b4 <por_emit_header+0x1f8>
   140f4:	add	r7, pc, r7
   140f8:	mov	sl, r0
   140fc:	mov	r0, r8
   14100:	bl	42a4 <memset@plt>
   14104:	ldr	lr, [pc, #428]	; 142b8 <por_emit_header+0x1fc>
   14108:	mov	ip, fp
   1410c:	add	lr, pc, lr
   14110:	ldm	lr!, {r0, r1, r2, r3}
   14114:	ldr	lr, [lr]
   14118:	stmia	ip!, {r0, r1, r2, r3}
   1411c:	mov	r1, r9
   14120:	add	r0, r4, #52	; 0x34
   14124:	mov	r2, #20
   14128:	str	lr, [ip]
   1412c:	bl	42bc <strncpy@plt>
   14130:	cmp	sl, #19
   14134:	bls	14244 <por_emit_header+0x188>
   14138:	ldr	r3, [pc, #380]	; 142bc <por_emit_header+0x200>
   1413c:	mov	r1, r8
   14140:	add	r3, pc, r3
   14144:	str	r3, [sp]
   14148:	mov	r2, #200	; 0xc8
   1414c:	mov	r3, #80	; 0x50
   14150:	add	r4, sp, #216	; 0xd8
   14154:	mov	r0, r5
   14158:	bl	4520 <readstat_write_bytes_as_lines@plt>
   1415c:	mov	r2, #256	; 0x100
   14160:	mov	r0, r4
   14164:	mov	r1, #48	; 0x30
   14168:	bl	42a4 <memset@plt>
   1416c:	ldr	r3, [pc, #332]	; 142c0 <por_emit_header+0x204>
   14170:	mov	r2, r4
   14174:	ldr	r0, [r7, r3]
   14178:	sub	r3, r0, #1
   1417c:	add	r0, r0, #255	; 0xff
   14180:	ldrsb	r1, [r3, #1]!
   14184:	add	r2, r2, #1
   14188:	cmp	r1, #0
   1418c:	strbne	r1, [r2, #-1]
   14190:	cmp	r3, r0
   14194:	bne	14180 <por_emit_header+0xc4>
   14198:	ldr	r7, [pc, #292]	; 142c4 <por_emit_header+0x208>
   1419c:	mov	r1, r4
   141a0:	add	r7, pc, r7
   141a4:	str	r7, [sp]
   141a8:	mov	r3, #80	; 0x50
   141ac:	mov	r2, #256	; 0x100
   141b0:	mov	r0, r5
   141b4:	bl	4520 <readstat_write_bytes_as_lines@plt>
   141b8:	subs	r4, r0, #0
   141bc:	beq	141d0 <por_emit_header+0x114>
   141c0:	mov	r0, r4
   141c4:	add	sp, sp, #1488	; 0x5d0
   141c8:	add	sp, sp, #12
   141cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   141d0:	mov	r0, #8
   141d4:	bl	410c <malloc@plt>
   141d8:	ldr	r4, [pc, #232]	; 142c8 <por_emit_header+0x20c>
   141dc:	ldm	r6, {r1, ip}
   141e0:	mov	r3, #8
   141e4:	add	r4, pc, r4
   141e8:	stm	sp, {r1, ip}
   141ec:	mov	r1, r3
   141f0:	mov	r2, r0
   141f4:	mov	r8, r0
   141f8:	mov	r0, r4
   141fc:	bl	4394 <por_utf8_decode@plt>
   14200:	cmn	r0, #1
   14204:	beq	1425c <por_emit_header+0x1a0>
   14208:	mov	r2, r0
   1420c:	str	r7, [sp]
   14210:	mov	r0, r5
   14214:	mov	r3, #80	; 0x50
   14218:	mov	r1, r8
   1421c:	bl	4520 <readstat_write_bytes_as_lines@plt>
   14220:	mov	r4, r0
   14224:	cmp	r8, #0
   14228:	beq	141c0 <por_emit_header+0x104>
   1422c:	mov	r0, r8
   14230:	bl	3ec0 <free@plt>
   14234:	mov	r0, r4
   14238:	add	sp, sp, #1488	; 0x5d0
   1423c:	add	sp, sp, #12
   14240:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14244:	add	r0, sl, #20
   14248:	add	r0, fp, r0
   1424c:	rsb	r2, sl, #20
   14250:	mov	r1, #32
   14254:	bl	42a4 <memset@plt>
   14258:	b	14138 <por_emit_header+0x7c>
   1425c:	ldr	r3, [r5, #296]	; 0x128
   14260:	cmp	r3, #0
   14264:	moveq	r4, #16
   14268:	beq	14224 <por_emit_header+0x168>
   1426c:	mov	r0, #8
   14270:	mov	r1, #0
   14274:	ldr	r2, [pc, #80]	; 142cc <por_emit_header+0x210>
   14278:	mov	r3, #8
   1427c:	str	r4, [sp, #12]
   14280:	add	r4, sp, #472	; 0x1d8
   14284:	strd	r0, [sp]
   14288:	str	r3, [sp, #8]
   1428c:	mov	r0, r4
   14290:	add	r2, pc, r2
   14294:	mov	r1, #1024	; 0x400
   14298:	bl	4280 <snprintf@plt>
   1429c:	mov	r0, r4
   142a0:	ldr	r3, [r5, #296]	; 0x128
   142a4:	ldr	r1, [r5, #304]	; 0x130
   142a8:	blx	r3
   142ac:	mov	r4, #16
   142b0:	b	14224 <por_emit_header+0x168>
   142b4:	.word	0x00030f04
   142b8:	.word	0x00012810
   142bc:	.word	0x000127b4
   142c0:	.word	0x00000300
   142c4:	.word	0x00012754
   142c8:	.word	0x000126c0
   142cc:	.word	0x00012638

000142d0 <por_write_missing_string>:
   142d0:	mov	r3, r0
   142d4:	mov	r1, #48	; 0x30
   142d8:	mov	r2, #47	; 0x2f
   142dc:	mov	r0, #0
   142e0:	strb	r1, [r3]
   142e4:	strb	r2, [r3, #1]
   142e8:	strb	r0, [r3, #2]
   142ec:	bx	lr

000142f0 <por_write_missing_number>:
   142f0:	mov	r3, r0
   142f4:	mov	r1, #42	; 0x2a
   142f8:	mov	r2, #46	; 0x2e
   142fc:	mov	r0, #0
   14300:	strb	r1, [r3]
   14304:	strb	r2, [r3, #1]
   14308:	strb	r0, [r3, #2]
   1430c:	bx	lr

00014310 <por_begin_data>:
   14310:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14314:	vpush	{d8-d11}
   14318:	mov	r1, #8
   1431c:	mov	r9, r0
   14320:	mov	r0, #1
   14324:	sub	sp, sp, #84	; 0x54
   14328:	bl	3d58 <calloc@plt>
   1432c:	ldr	r8, [pc, #1588]	; 14968 <por_begin_data+0x658>
   14330:	ldr	r2, [pc, #1588]	; 1496c <por_begin_data+0x65c>
   14334:	add	r8, pc, r8
   14338:	mov	r3, #0
   1433c:	ldr	r1, [r8, r2]
   14340:	sub	r7, r1, #2
   14344:	add	r1, r1, #508	; 0x1fc
   14348:	add	r1, r1, #2
   1434c:	mov	r5, r7
   14350:	mov	r4, r0
   14354:	ldrh	r2, [r5, #2]!
   14358:	cmp	r2, r3
   1435c:	movcs	r3, r2
   14360:	cmp	r5, r1
   14364:	bne	14354 <por_begin_data+0x44>
   14368:	add	r6, r3, #1
   1436c:	mov	r0, r6
   14370:	bl	410c <malloc@plt>
   14374:	ldr	r3, [pc, #1524]	; 14970 <por_begin_data+0x660>
   14378:	stm	r4, {r0, r6}
   1437c:	ldr	r3, [r8, r3]
   14380:	ldrh	r2, [r7, #2]!
   14384:	add	r3, r3, #1
   14388:	cmp	r2, #0
   1438c:	ldrne	r1, [r4]
   14390:	ldrbne	r0, [r3, #-1]
   14394:	strbne	r0, [r1, r2]
   14398:	ldrsb	r2, [r3, #-1]
   1439c:	cmp	r2, #0
   143a0:	ldrne	r1, [r4]
   143a4:	strbne	r2, [r1, r2]
   143a8:	cmp	r7, r5
   143ac:	bne	14380 <por_begin_data+0x70>
   143b0:	mov	r1, r4
   143b4:	mov	r0, r9
   143b8:	bl	140bc <por_emit_header>
   143bc:	subs	fp, r0, #0
   143c0:	beq	143ec <por_begin_data+0xdc>
   143c4:	ldr	r0, [r4]
   143c8:	cmp	r0, #0
   143cc:	beq	143d4 <por_begin_data+0xc4>
   143d0:	bl	3ec0 <free@plt>
   143d4:	mov	r0, r4
   143d8:	bl	3ec0 <free@plt>
   143dc:	mov	r0, fp
   143e0:	add	sp, sp, #84	; 0x54
   143e4:	vpop	{d8-d11}
   143e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143ec:	add	r0, r9, #20
   143f0:	bl	4160 <localtime@plt>
   143f4:	subs	r7, r0, #0
   143f8:	beq	14934 <por_begin_data+0x624>
   143fc:	add	r3, sp, #64	; 0x40
   14400:	mov	ip, #65	; 0x41
   14404:	mov	r2, r3
   14408:	mov	r1, r4
   1440c:	mov	r0, r9
   14410:	strb	fp, [sp, #65]	; 0x41
   14414:	str	r3, [sp, #12]
   14418:	strb	ip, [sp, #64]	; 0x40
   1441c:	bl	13840 <por_write_string_n.constprop.4>
   14420:	subs	fp, r0, #0
   14424:	bne	143c4 <por_begin_data+0xb4>
   14428:	ldr	r0, [r7, #12]
   1442c:	ldr	r5, [pc, #1344]	; 14974 <por_begin_data+0x664>
   14430:	ldr	r3, [r7, #20]
   14434:	mov	r6, #100	; 0x64
   14438:	umull	r2, r1, r5, r0
   1443c:	ldr	r2, [pc, #1332]	; 14978 <por_begin_data+0x668>
   14440:	add	r3, r3, #1888	; 0x760
   14444:	lsr	r1, r1, #5
   14448:	add	r3, r3, #12
   1444c:	mul	r1, r6, r1
   14450:	umull	ip, r2, r2, r3
   14454:	ldr	ip, [pc, #1312]	; 1497c <por_begin_data+0x66c>
   14458:	sub	r1, r0, r1
   1445c:	str	r1, [sp, #4]
   14460:	ldr	r0, [r7, #16]
   14464:	lsr	r2, r2, #13
   14468:	add	r0, r0, #1
   1446c:	mul	r1, ip, r2
   14470:	umull	r2, ip, r5, r0
   14474:	ldr	r8, [sp, #12]
   14478:	ldr	r2, [pc, #1280]	; 14980 <por_begin_data+0x670>
   1447c:	lsr	ip, ip, #5
   14480:	sub	r3, r3, r1
   14484:	mul	ip, r6, ip
   14488:	add	r2, pc, r2
   1448c:	sub	r0, r0, ip
   14490:	mov	r1, #9
   14494:	str	r0, [sp]
   14498:	mov	r0, r8
   1449c:	bl	4280 <snprintf@plt>
   144a0:	mov	r0, r8
   144a4:	bl	41fc <strlen@plt>
   144a8:	mov	r1, r4
   144ac:	vmov	s15, r0
   144b0:	str	r0, [sp, #16]
   144b4:	mov	r0, r9
   144b8:	vcvt.f64.u32	d0, s15
   144bc:	bl	13f14 <por_write_double>
   144c0:	subs	fp, r0, #0
   144c4:	bne	143c4 <por_begin_data+0xb4>
   144c8:	ldr	r3, [sp, #16]
   144cc:	ldr	r2, [sp, #12]
   144d0:	mov	r1, r4
   144d4:	mov	r0, r9
   144d8:	bl	1364c <por_write_string_n>
   144dc:	subs	fp, r0, #0
   144e0:	bne	143c4 <por_begin_data+0xb4>
   144e4:	ldr	r0, [r7]
   144e8:	ldr	r1, [r7, #8]
   144ec:	add	sl, sp, #48	; 0x30
   144f0:	umull	r3, r2, r5, r0
   144f4:	umull	ip, r3, r5, r1
   144f8:	lsr	r2, r2, #5
   144fc:	lsr	r3, r3, #5
   14500:	mul	r2, r6, r2
   14504:	mul	r3, r6, r3
   14508:	sub	r2, r0, r2
   1450c:	str	r2, [sp, #4]
   14510:	ldr	ip, [r7, #4]
   14514:	sub	r3, r1, r3
   14518:	mov	r0, sl
   1451c:	umull	r2, r1, r5, ip
   14520:	ldr	r2, [pc, #1116]	; 14984 <por_begin_data+0x674>
   14524:	lsr	r1, r1, #5
   14528:	add	r2, pc, r2
   1452c:	mul	r1, r6, r1
   14530:	sub	r1, ip, r1
   14534:	str	r1, [sp]
   14538:	mov	r1, #7
   1453c:	bl	4280 <snprintf@plt>
   14540:	mov	r0, sl
   14544:	bl	41fc <strlen@plt>
   14548:	mov	r1, r4
   1454c:	vmov	s15, r0
   14550:	str	r0, [sp, #16]
   14554:	mov	r0, r9
   14558:	vcvt.f64.u32	d0, s15
   1455c:	bl	13f14 <por_write_double>
   14560:	subs	fp, r0, #0
   14564:	bne	143c4 <por_begin_data+0xb4>
   14568:	ldr	r3, [sp, #16]
   1456c:	mov	r2, sl
   14570:	mov	r1, r4
   14574:	mov	r0, r9
   14578:	bl	1364c <por_write_string_n>
   1457c:	subs	fp, r0, #0
   14580:	bne	143c4 <por_begin_data+0xb4>
   14584:	mov	ip, #49	; 0x31
   14588:	ldr	r2, [sp, #12]
   1458c:	mov	r1, r4
   14590:	mov	r0, r9
   14594:	strb	fp, [sp, #65]	; 0x41
   14598:	strb	ip, [sp, #64]	; 0x40
   1459c:	bl	13840 <por_write_string_n.constprop.4>
   145a0:	subs	fp, r0, #0
   145a4:	bne	143c4 <por_begin_data+0xb4>
   145a8:	vldr	d0, [pc, #912]	; 14940 <por_begin_data+0x630>
   145ac:	mov	r1, r4
   145b0:	mov	r0, r9
   145b4:	bl	13f14 <por_write_double>
   145b8:	subs	fp, r0, #0
   145bc:	bne	143c4 <por_begin_data+0xb4>
   145c0:	ldr	r2, [pc, #960]	; 14988 <por_begin_data+0x678>
   145c4:	mov	r3, #8
   145c8:	add	r2, pc, r2
   145cc:	mov	r1, r4
   145d0:	mov	r0, r9
   145d4:	bl	1364c <por_write_string_n>
   145d8:	subs	fp, r0, #0
   145dc:	bne	143c4 <por_begin_data+0xb4>
   145e0:	mov	ip, #51	; 0x33
   145e4:	ldr	r2, [sp, #12]
   145e8:	mov	r1, r4
   145ec:	mov	r0, r9
   145f0:	strb	fp, [sp, #65]	; 0x41
   145f4:	strb	ip, [sp, #64]	; 0x40
   145f8:	bl	13840 <por_write_string_n.constprop.4>
   145fc:	subs	fp, r0, #0
   14600:	bne	143c4 <por_begin_data+0xb4>
   14604:	vldr	d0, [pc, #828]	; 14948 <por_begin_data+0x638>
   14608:	mov	r1, r4
   1460c:	mov	r0, r9
   14610:	bl	13f14 <por_write_double>
   14614:	subs	fp, r0, #0
   14618:	bne	143c4 <por_begin_data+0xb4>
   1461c:	ldr	r2, [pc, #872]	; 1498c <por_begin_data+0x67c>
   14620:	mov	r3, #37	; 0x25
   14624:	add	r2, pc, r2
   14628:	mov	r1, r4
   1462c:	mov	r0, r9
   14630:	bl	1364c <por_write_string_n>
   14634:	subs	fp, r0, #0
   14638:	bne	143c4 <por_begin_data+0xb4>
   1463c:	mov	ip, #52	; 0x34
   14640:	ldr	r2, [sp, #12]
   14644:	mov	r1, r4
   14648:	mov	r0, r9
   1464c:	strb	fp, [sp, #65]	; 0x41
   14650:	strb	ip, [sp, #64]	; 0x40
   14654:	bl	13840 <por_write_string_n.constprop.4>
   14658:	subs	fp, r0, #0
   1465c:	bne	143c4 <por_begin_data+0xb4>
   14660:	vldr	s15, [r9, #28]
   14664:	mov	r1, r4
   14668:	mov	r0, r9
   1466c:	vcvt.f64.s32	d0, s15
   14670:	bl	13f14 <por_write_double>
   14674:	subs	fp, r0, #0
   14678:	bne	143c4 <por_begin_data+0xb4>
   1467c:	mov	ip, #53	; 0x35
   14680:	ldr	r2, [sp, #12]
   14684:	mov	r1, r4
   14688:	mov	r0, r9
   1468c:	strb	fp, [sp, #65]	; 0x41
   14690:	strb	ip, [sp, #64]	; 0x40
   14694:	bl	13840 <por_write_string_n.constprop.4>
   14698:	subs	fp, r0, #0
   1469c:	bne	143c4 <por_begin_data+0xb4>
   146a0:	vldr	d0, [pc, #680]	; 14950 <por_begin_data+0x640>
   146a4:	mov	r1, r4
   146a8:	mov	r0, r9
   146ac:	bl	13f14 <por_write_double>
   146b0:	subs	fp, r0, #0
   146b4:	bne	143c4 <por_begin_data+0xb4>
   146b8:	ldr	r2, [r9, #224]	; 0xe0
   146bc:	cmp	r2, #0
   146c0:	beq	14714 <por_begin_data+0x404>
   146c4:	mov	ip, #54	; 0x36
   146c8:	ldr	r2, [sp, #12]
   146cc:	mov	r1, r4
   146d0:	mov	r0, r9
   146d4:	strb	fp, [sp, #65]	; 0x41
   146d8:	strb	ip, [sp, #64]	; 0x40
   146dc:	bl	13840 <por_write_string_n.constprop.4>
   146e0:	subs	fp, r0, #0
   146e4:	bne	143c4 <por_begin_data+0xb4>
   146e8:	ldr	r0, [r9, #224]	; 0xe0
   146ec:	bl	4364 <readstat_variable_get_name@plt>
   146f0:	mov	r5, r0
   146f4:	bl	41fc <strlen@plt>
   146f8:	mov	r2, r5
   146fc:	mov	r1, r4
   14700:	mov	r3, r0
   14704:	mov	r0, r9
   14708:	bl	1406c <por_write_string_field_n>
   1470c:	subs	fp, r0, #0
   14710:	bne	143c4 <por_begin_data+0xb4>
   14714:	ldr	r3, [r9, #28]
   14718:	cmp	r3, #0
   1471c:	ble	14a04 <por_begin_data+0x6f4>
   14720:	vldr	d9, [pc, #560]	; 14958 <por_begin_data+0x648>
   14724:	vldr	d8, [pc, #564]	; 14960 <por_begin_data+0x650>
   14728:	mov	r3, #0
   1472c:	str	r3, [sp, #16]
   14730:	add	r3, sp, #36	; 0x24
   14734:	str	r3, [sp, #28]
   14738:	ldr	r1, [sp, #16]
   1473c:	mov	r0, r9
   14740:	bl	437c <readstat_get_variable@plt>
   14744:	mov	r5, r0
   14748:	bl	4364 <readstat_variable_get_name@plt>
   1474c:	mov	r3, #55	; 0x37
   14750:	strb	r3, [sp, #64]	; 0x40
   14754:	ldr	r2, [sp, #12]
   14758:	mov	r3, #0
   1475c:	mov	r1, r4
   14760:	strb	r3, [sp, #65]	; 0x41
   14764:	mov	r6, r0
   14768:	mov	r0, r9
   1476c:	bl	13840 <por_write_string_n.constprop.4>
   14770:	subs	r3, r0, #0
   14774:	bne	1492c <por_begin_data+0x61c>
   14778:	ldr	r3, [r5]
   1477c:	mov	r1, r4
   14780:	cmp	r3, #0
   14784:	mov	r0, r9
   14788:	ldreq	r3, [r5, #1600]	; 0x640
   1478c:	vmovne.f64	d0, d9
   14790:	vmoveq	s15, r3
   14794:	vcvteq.f64.u32	d0, s15
   14798:	bl	13f14 <por_write_double>
   1479c:	subs	r3, r0, #0
   147a0:	bne	1492c <por_begin_data+0x61c>
   147a4:	mov	r0, r6
   147a8:	bl	41fc <strlen@plt>
   147ac:	mov	r2, r6
   147b0:	mov	r1, r4
   147b4:	mov	r3, r0
   147b8:	mov	r0, r9
   147bc:	bl	1406c <por_write_string_field_n>
   147c0:	subs	r3, r0, #0
   147c4:	bne	1492c <por_begin_data+0x61c>
   147c8:	ldr	r6, [sp, #28]
   147cc:	mov	r0, r5
   147d0:	mov	r1, r6
   147d4:	bl	40f4 <spss_format_for_variable@plt>
   147d8:	subs	r3, r0, #0
   147dc:	bne	1492c <por_begin_data+0x61c>
   147e0:	mov	r2, r6
   147e4:	mov	r1, r4
   147e8:	mov	r0, r9
   147ec:	bl	566c <por_emit_format>
   147f0:	subs	r3, r0, #0
   147f4:	bne	1492c <por_begin_data+0x61c>
   147f8:	mov	r2, r6
   147fc:	mov	r1, r4
   14800:	mov	r0, r9
   14804:	bl	566c <por_emit_format>
   14808:	subs	r3, r0, #0
   1480c:	bne	1492c <por_begin_data+0x61c>
   14810:	ldr	r2, [r5]
   14814:	cmp	r2, #5
   14818:	beq	14b14 <por_begin_data+0x804>
   1481c:	mov	r0, r5
   14820:	str	r3, [sp, #24]
   14824:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
   14828:	subs	r3, r0, #0
   1482c:	str	r3, [sp, #20]
   14830:	ble	14990 <por_begin_data+0x680>
   14834:	ldr	r3, [sp, #24]
   14838:	mov	r6, r3
   1483c:	mov	r7, r3
   14840:	add	r3, sp, #32
   14844:	str	r3, [sp, #24]
   14848:	b	14858 <por_begin_data+0x548>
   1484c:	ldr	r3, [sp, #20]
   14850:	cmp	r3, r7
   14854:	beq	14be0 <por_begin_data+0x8d0>
   14858:	mov	r2, r7
   1485c:	mov	r1, r5
   14860:	mov	r0, sl
   14864:	bl	3f44 <readstat_variable_get_missing_range_lo@plt>
   14868:	ldr	r8, [sp, #12]
   1486c:	mov	r2, r7
   14870:	mov	r0, r8
   14874:	mov	r1, r5
   14878:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   1487c:	ldm	sl, {r0, r1, r2, r3}
   14880:	bl	3fb0 <readstat_string_value@plt>
   14884:	add	r7, r7, #1
   14888:	mov	fp, r0
   1488c:	ldm	r8, {r0, r1, r2, r3}
   14890:	bl	3fb0 <readstat_string_value@plt>
   14894:	cmp	fp, #0
   14898:	cmpne	r0, #0
   1489c:	mov	r8, r0
   148a0:	mov	r1, r0
   148a4:	mov	r0, fp
   148a8:	beq	1484c <por_begin_data+0x53c>
   148ac:	bl	3e00 <strcmp@plt>
   148b0:	cmp	r0, #0
   148b4:	beq	1484c <por_begin_data+0x53c>
   148b8:	mov	r3, #66	; 0x42
   148bc:	strb	r3, [sp, #32]
   148c0:	ldr	r2, [sp, #24]
   148c4:	mov	r3, #0
   148c8:	mov	r1, r4
   148cc:	mov	r0, r9
   148d0:	strb	r3, [sp, #33]	; 0x21
   148d4:	bl	13840 <por_write_string_n.constprop.4>
   148d8:	add	r6, r6, #2
   148dc:	subs	r3, r0, #0
   148e0:	mov	r0, fp
   148e4:	bne	1492c <por_begin_data+0x61c>
   148e8:	bl	41fc <strlen@plt>
   148ec:	mov	r2, fp
   148f0:	mov	r1, r4
   148f4:	mov	r3, r0
   148f8:	mov	r0, r9
   148fc:	bl	1406c <por_write_string_field_n>
   14900:	subs	r3, r0, #0
   14904:	mov	r0, r8
   14908:	bne	1492c <por_begin_data+0x61c>
   1490c:	bl	41fc <strlen@plt>
   14910:	mov	r2, r8
   14914:	mov	r1, r4
   14918:	mov	r3, r0
   1491c:	mov	r0, r9
   14920:	bl	1406c <por_write_string_field_n>
   14924:	subs	r3, r0, #0
   14928:	beq	1484c <por_begin_data+0x53c>
   1492c:	mov	fp, r3
   14930:	b	143c4 <por_begin_data+0xb4>
   14934:	mov	fp, #39	; 0x27
   14938:	b	143c4 <por_begin_data+0xb4>
   1493c:	nop			; (mov r0, r0)
   14940:	.word	0x00000000
   14944:	.word	0x40200000
   14948:	.word	0x00000000
   1494c:	.word	0x40428000
   14950:	.word	0x00000000
   14954:	.word	0x40490000
	...
   14960:	.word	0xffffffff
   14964:	.word	0x7fefffff
   14968:	.word	0x00030cc4
   1496c:	.word	0x000002f4
   14970:	.word	0x00000300
   14974:	.word	0x51eb851f
   14978:	.word	0xd1b71759
   1497c:	.word	0x00002710
   14980:	.word	0x000123cc
   14984:	.word	0x0001233c
   14988:	.word	0x0001236c
   1498c:	.word	0x0001231c
   14990:	mov	r0, r5
   14994:	bl	4400 <readstat_variable_get_label@plt>
   14998:	subs	r5, r0, #0
   1499c:	beq	149ec <por_begin_data+0x6dc>
   149a0:	mov	r3, #67	; 0x43
   149a4:	mov	ip, #0
   149a8:	ldr	r2, [sp, #12]
   149ac:	mov	r1, r4
   149b0:	mov	r0, r9
   149b4:	strb	r3, [sp, #64]	; 0x40
   149b8:	strb	ip, [sp, #65]	; 0x41
   149bc:	bl	13840 <por_write_string_n.constprop.4>
   149c0:	subs	r3, r0, #0
   149c4:	bne	1492c <por_begin_data+0x61c>
   149c8:	mov	r0, r5
   149cc:	bl	41fc <strlen@plt>
   149d0:	mov	r2, r5
   149d4:	mov	r1, r4
   149d8:	mov	r3, r0
   149dc:	mov	r0, r9
   149e0:	bl	1406c <por_write_string_field_n>
   149e4:	subs	r3, r0, #0
   149e8:	bne	1492c <por_begin_data+0x61c>
   149ec:	ldr	r2, [sp, #16]
   149f0:	ldr	r3, [r9, #28]
   149f4:	add	r2, r2, #1
   149f8:	cmp	r2, r3
   149fc:	str	r2, [sp, #16]
   14a00:	blt	14738 <por_begin_data+0x428>
   14a04:	ldr	r3, [r9, #40]	; 0x28
   14a08:	cmp	r3, #0
   14a0c:	ble	14a48 <por_begin_data+0x738>
   14a10:	mov	r7, #0
   14a14:	mov	r8, #68	; 0x44
   14a18:	mov	r1, r7
   14a1c:	mov	r0, r9
   14a20:	bl	4424 <readstat_get_label_set@plt>
   14a24:	ldr	r3, [r0, #264]	; 0x108
   14a28:	mov	r5, r0
   14a2c:	cmp	r3, #0
   14a30:	ldr	r6, [r0]
   14a34:	bne	14e08 <por_begin_data+0xaf8>
   14a38:	ldr	r3, [r9, #40]	; 0x28
   14a3c:	add	r7, r7, #1
   14a40:	cmp	r7, r3
   14a44:	blt	14a18 <por_begin_data+0x708>
   14a48:	mov	ip, #69	; 0x45
   14a4c:	mov	r3, #0
   14a50:	ldr	r2, [sp, #12]
   14a54:	mov	r1, r4
   14a58:	mov	r0, r9
   14a5c:	strb	ip, [sp, #64]	; 0x40
   14a60:	strb	r3, [sp, #65]	; 0x41
   14a64:	bl	13840 <por_write_string_n.constprop.4>
   14a68:	subs	fp, r0, #0
   14a6c:	bne	143c4 <por_begin_data+0xb4>
   14a70:	vldr	s15, [r9, #52]	; 0x34
   14a74:	mov	r1, r4
   14a78:	mov	r0, r9
   14a7c:	vcvt.f64.s32	d0, s15
   14a80:	bl	13f14 <por_write_double>
   14a84:	subs	fp, r0, #0
   14a88:	bne	143c4 <por_begin_data+0xb4>
   14a8c:	ldr	r2, [r9, #52]	; 0x34
   14a90:	cmp	r2, #0
   14a94:	ble	14ae4 <por_begin_data+0x7d4>
   14a98:	mov	r5, fp
   14a9c:	ldr	r3, [r9, #48]	; 0x30
   14aa0:	ldr	r6, [r3, r5, lsl #2]
   14aa4:	add	r5, r5, #1
   14aa8:	mov	r0, r6
   14aac:	bl	41fc <strlen@plt>
   14ab0:	mov	r2, r6
   14ab4:	mov	r1, r4
   14ab8:	mov	ip, r0
   14abc:	cmp	ip, #80	; 0x50
   14ac0:	mov	r3, r0
   14ac4:	mov	r0, r9
   14ac8:	bhi	14f28 <por_begin_data+0xc18>
   14acc:	bl	1406c <por_write_string_field_n>
   14ad0:	cmp	r0, #0
   14ad4:	bne	14bd8 <por_begin_data+0x8c8>
   14ad8:	ldr	r3, [r9, #52]	; 0x34
   14adc:	cmp	r5, r3
   14ae0:	blt	14a9c <por_begin_data+0x78c>
   14ae4:	mov	ip, #70	; 0x46
   14ae8:	mov	r3, #0
   14aec:	ldr	r2, [sp, #12]
   14af0:	mov	r1, r4
   14af4:	mov	r0, r9
   14af8:	strb	ip, [sp, #64]	; 0x40
   14afc:	strb	r3, [sp, #65]	; 0x41
   14b00:	bl	13840 <por_write_string_n.constprop.4>
   14b04:	subs	fp, r0, #0
   14b08:	streq	r4, [r9, #300]	; 0x12c
   14b0c:	beq	143dc <por_begin_data+0xcc>
   14b10:	b	143c4 <por_begin_data+0xb4>
   14b14:	mov	r0, r5
   14b18:	str	r3, [sp, #20]
   14b1c:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
   14b20:	subs	fp, r0, #0
   14b24:	ble	14990 <por_begin_data+0x680>
   14b28:	ldr	r3, [sp, #20]
   14b2c:	add	r8, sp, #32
   14b30:	mov	r6, r3
   14b34:	mov	r7, r3
   14b38:	b	14b64 <por_begin_data+0x854>
   14b3c:	vabs.f64	d7, d0
   14b40:	vcmp.f64	d7, d8
   14b44:	vmrs	APSR_nzcv, fpscr
   14b48:	bgt	14dd8 <por_begin_data+0xac8>
   14b4c:	vcmp.f64	d11, d0
   14b50:	vmrs	APSR_nzcv, fpscr
   14b54:	bne	14d78 <por_begin_data+0xa68>
   14b58:	add	r7, r7, #1
   14b5c:	cmp	fp, r7
   14b60:	beq	14cb4 <por_begin_data+0x9a4>
   14b64:	mov	r2, r7
   14b68:	mov	r1, r5
   14b6c:	mov	r0, sl
   14b70:	bl	3f44 <readstat_variable_get_missing_range_lo@plt>
   14b74:	mov	r2, r7
   14b78:	mov	r1, r5
   14b7c:	ldr	r0, [sp, #12]
   14b80:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   14b84:	ldm	sl, {r0, r1, r2, r3}
   14b88:	bl	41b4 <readstat_double_value@plt>
   14b8c:	ldr	r3, [sp, #12]
   14b90:	ldm	r3, {r0, r1, r2, r3}
   14b94:	vmov.f64	d11, d0
   14b98:	bl	41b4 <readstat_double_value@plt>
   14b9c:	vabs.f64	d7, d11
   14ba0:	vcmp.f64	d7, d8
   14ba4:	vmrs	APSR_nzcv, fpscr
   14ba8:	vmov.f64	d10, d0
   14bac:	ble	14b3c <por_begin_data+0x82c>
   14bb0:	mov	r3, #57	; 0x39
   14bb4:	strb	r3, [sp, #32]
   14bb8:	mov	r2, r8
   14bbc:	mov	r3, #0
   14bc0:	mov	r1, r4
   14bc4:	mov	r0, r9
   14bc8:	strb	r3, [sp, #33]	; 0x21
   14bcc:	bl	13840 <por_write_string_n.constprop.4>
   14bd0:	cmp	r0, #0
   14bd4:	beq	14db8 <por_begin_data+0xaa8>
   14bd8:	mov	fp, r0
   14bdc:	b	143c4 <por_begin_data+0xb4>
   14be0:	add	r3, sp, #32
   14be4:	mov	r8, #0
   14be8:	str	r3, [sp, #20]
   14bec:	b	14bf8 <por_begin_data+0x8e8>
   14bf0:	cmp	r7, r8
   14bf4:	beq	14ca4 <por_begin_data+0x994>
   14bf8:	mov	r2, r8
   14bfc:	mov	r1, r5
   14c00:	mov	r0, sl
   14c04:	bl	3f44 <readstat_variable_get_missing_range_lo@plt>
   14c08:	mov	r2, r8
   14c0c:	mov	r1, r5
   14c10:	ldr	r0, [sp, #12]
   14c14:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   14c18:	ldm	sl, {r0, r1, r2, r3}
   14c1c:	bl	3fb0 <readstat_string_value@plt>
   14c20:	ldr	r3, [sp, #12]
   14c24:	add	r8, r8, #1
   14c28:	mov	fp, r0
   14c2c:	ldm	r3, {r0, r1, r2, r3}
   14c30:	bl	3fb0 <readstat_string_value@plt>
   14c34:	cmp	fp, #0
   14c38:	cmpne	r0, #0
   14c3c:	mov	r1, r0
   14c40:	mov	r0, fp
   14c44:	beq	14bf0 <por_begin_data+0x8e0>
   14c48:	bl	3e00 <strcmp@plt>
   14c4c:	subs	r3, r0, #0
   14c50:	bne	14bf0 <por_begin_data+0x8e0>
   14c54:	mov	ip, #56	; 0x38
   14c58:	ldr	r2, [sp, #20]
   14c5c:	mov	r1, r4
   14c60:	mov	r0, r9
   14c64:	strb	r3, [sp, #33]	; 0x21
   14c68:	strb	ip, [sp, #32]
   14c6c:	bl	13840 <por_write_string_n.constprop.4>
   14c70:	add	r6, r6, #1
   14c74:	subs	r3, r0, #0
   14c78:	mov	r0, fp
   14c7c:	bne	1492c <por_begin_data+0x61c>
   14c80:	bl	41fc <strlen@plt>
   14c84:	mov	r2, fp
   14c88:	mov	r1, r4
   14c8c:	mov	r3, r0
   14c90:	mov	r0, r9
   14c94:	bl	1406c <por_write_string_field_n>
   14c98:	subs	r3, r0, #0
   14c9c:	beq	14bf0 <por_begin_data+0x8e0>
   14ca0:	b	1492c <por_begin_data+0x61c>
   14ca4:	cmp	r6, #3
   14ca8:	ble	14990 <por_begin_data+0x680>
   14cac:	mov	fp, #31
   14cb0:	b	143c4 <por_begin_data+0xb4>
   14cb4:	mov	r8, #0
   14cb8:	add	fp, sp, #32
   14cbc:	b	14cc8 <por_begin_data+0x9b8>
   14cc0:	cmp	r7, r8
   14cc4:	beq	14ca4 <por_begin_data+0x994>
   14cc8:	mov	r2, r8
   14ccc:	mov	r1, r5
   14cd0:	mov	r0, sl
   14cd4:	bl	3f44 <readstat_variable_get_missing_range_lo@plt>
   14cd8:	mov	r2, r8
   14cdc:	mov	r1, r5
   14ce0:	ldr	r0, [sp, #12]
   14ce4:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   14ce8:	ldm	sl, {r0, r1, r2, r3}
   14cec:	bl	41b4 <readstat_double_value@plt>
   14cf0:	ldr	r3, [sp, #12]
   14cf4:	add	r8, r8, #1
   14cf8:	ldm	r3, {r0, r1, r2, r3}
   14cfc:	vmov.f64	d10, d0
   14d00:	bl	41b4 <readstat_double_value@plt>
   14d04:	vabs.f64	d7, d10
   14d08:	vcmp.f64	d10, d0
   14d0c:	vmrs	APSR_nzcv, fpscr
   14d10:	bne	14cc0 <por_begin_data+0x9b0>
   14d14:	vcmp.f64	d7, d8
   14d18:	vabs.f64	d0, d0
   14d1c:	vmrs	APSR_nzcv, fpscr
   14d20:	bgt	14cc0 <por_begin_data+0x9b0>
   14d24:	vcmp.f64	d0, d8
   14d28:	vmrs	APSR_nzcv, fpscr
   14d2c:	bgt	14cc0 <por_begin_data+0x9b0>
   14d30:	mov	r3, #56	; 0x38
   14d34:	mov	r1, r4
   14d38:	strb	r3, [sp, #32]
   14d3c:	mov	r2, fp
   14d40:	mov	r3, #0
   14d44:	mov	r0, r9
   14d48:	strb	r3, [sp, #33]	; 0x21
   14d4c:	bl	13840 <por_write_string_n.constprop.4>
   14d50:	add	r6, r6, #1
   14d54:	vmov.f64	d0, d10
   14d58:	mov	r1, r4
   14d5c:	subs	r3, r0, #0
   14d60:	mov	r0, r9
   14d64:	bne	1492c <por_begin_data+0x61c>
   14d68:	bl	13f14 <por_write_double>
   14d6c:	subs	r3, r0, #0
   14d70:	beq	14cc0 <por_begin_data+0x9b0>
   14d74:	b	1492c <por_begin_data+0x61c>
   14d78:	mov	r3, #66	; 0x42
   14d7c:	strb	r3, [sp, #32]
   14d80:	mov	r2, r8
   14d84:	mov	r3, #0
   14d88:	mov	r1, r4
   14d8c:	mov	r0, r9
   14d90:	strb	r3, [sp, #33]	; 0x21
   14d94:	bl	13840 <por_write_string_n.constprop.4>
   14d98:	cmp	r0, #0
   14d9c:	bne	14bd8 <por_begin_data+0x8c8>
   14da0:	vmov.f64	d0, d11
   14da4:	mov	r1, r4
   14da8:	mov	r0, r9
   14dac:	bl	13f14 <por_write_double>
   14db0:	cmp	r0, #0
   14db4:	bne	14bd8 <por_begin_data+0x8c8>
   14db8:	vmov.f64	d0, d10
   14dbc:	mov	r1, r4
   14dc0:	mov	r0, r9
   14dc4:	bl	13f14 <por_write_double>
   14dc8:	cmp	r0, #0
   14dcc:	bne	14bd8 <por_begin_data+0x8c8>
   14dd0:	add	r6, r6, #2
   14dd4:	b	14b58 <por_begin_data+0x848>
   14dd8:	mov	r3, #65	; 0x41
   14ddc:	strb	r3, [sp, #32]
   14de0:	mov	r2, r8
   14de4:	mov	r3, #0
   14de8:	mov	r1, r4
   14dec:	mov	r0, r9
   14df0:	strb	r3, [sp, #33]	; 0x21
   14df4:	bl	13840 <por_write_string_n.constprop.4>
   14df8:	cmp	r0, #0
   14dfc:	bne	14bd8 <por_begin_data+0x8c8>
   14e00:	vmov.f64	d0, d11
   14e04:	b	14dbc <por_begin_data+0xaac>
   14e08:	ldr	r3, [r0, #276]	; 0x114
   14e0c:	cmp	r3, #0
   14e10:	beq	14a38 <por_begin_data+0x728>
   14e14:	mov	r3, #0
   14e18:	ldr	r2, [sp, #12]
   14e1c:	mov	r1, r4
   14e20:	mov	r0, r9
   14e24:	strb	r8, [sp, #64]	; 0x40
   14e28:	strb	r3, [sp, #65]	; 0x41
   14e2c:	bl	13840 <por_write_string_n.constprop.4>
   14e30:	subs	fp, r0, #0
   14e34:	bne	143c4 <por_begin_data+0xb4>
   14e38:	vldr	s15, [r5, #276]	; 0x114
   14e3c:	mov	r1, r4
   14e40:	mov	r0, r9
   14e44:	vcvt.f64.s32	d0, s15
   14e48:	bl	13f14 <por_write_double>
   14e4c:	subs	fp, r0, #0
   14e50:	bne	143c4 <por_begin_data+0xb4>
   14e54:	ldr	r3, [r5, #276]	; 0x114
   14e58:	cmp	r3, #0
   14e5c:	movgt	sl, fp
   14e60:	ble	14ea8 <por_begin_data+0xb98>
   14e64:	mov	r1, sl
   14e68:	mov	r0, r5
   14e6c:	bl	4448 <readstat_get_label_set_variable@plt>
   14e70:	bl	4364 <readstat_variable_get_name@plt>
   14e74:	add	sl, sl, #1
   14e78:	mov	fp, r0
   14e7c:	bl	41fc <strlen@plt>
   14e80:	mov	r2, fp
   14e84:	mov	r1, r4
   14e88:	mov	r3, r0
   14e8c:	mov	r0, r9
   14e90:	bl	1406c <por_write_string_field_n>
   14e94:	cmp	r0, #0
   14e98:	bne	14bd8 <por_begin_data+0x8c8>
   14e9c:	ldr	r3, [r5, #276]	; 0x114
   14ea0:	cmp	sl, r3
   14ea4:	blt	14e64 <por_begin_data+0xb54>
   14ea8:	vldr	s15, [r5, #264]	; 0x108
   14eac:	mov	r1, r4
   14eb0:	mov	r0, r9
   14eb4:	vcvt.f64.s32	d0, s15
   14eb8:	bl	13f14 <por_write_double>
   14ebc:	subs	fp, r0, #0
   14ec0:	bne	143c4 <por_begin_data+0xb4>
   14ec4:	ldr	r3, [r5, #264]	; 0x108
   14ec8:	cmp	r3, #0
   14ecc:	ble	14a38 <por_begin_data+0x728>
   14ed0:	cmp	r6, #0
   14ed4:	beq	14fe8 <por_begin_data+0xcd8>
   14ed8:	cmp	r6, #3
   14edc:	beq	14f88 <por_begin_data+0xc78>
   14ee0:	cmp	r6, #5
   14ee4:	mov	r6, fp
   14ee8:	beq	14f30 <por_begin_data+0xc20>
   14eec:	mov	r1, r6
   14ef0:	mov	r0, r5
   14ef4:	bl	44cc <readstat_get_value_label@plt>
   14ef8:	mov	r1, r4
   14efc:	add	r6, r6, #1
   14f00:	ldr	r3, [r0, #28]
   14f04:	ldr	r2, [r0, #24]
   14f08:	mov	r0, r9
   14f0c:	bl	1406c <por_write_string_field_n>
   14f10:	cmp	r0, #0
   14f14:	bne	14bd8 <por_begin_data+0x8c8>
   14f18:	ldr	r3, [r5, #264]	; 0x108
   14f1c:	cmp	r3, r6
   14f20:	bgt	14eec <por_begin_data+0xbdc>
   14f24:	b	14a38 <por_begin_data+0x728>
   14f28:	mov	fp, #32
   14f2c:	b	143c4 <por_begin_data+0xb4>
   14f30:	mov	r1, r6
   14f34:	mov	r0, r5
   14f38:	bl	44cc <readstat_get_value_label@plt>
   14f3c:	mov	r1, r4
   14f40:	add	r6, r6, #1
   14f44:	vldr	d0, [r0]
   14f48:	mov	sl, r0
   14f4c:	mov	r0, r9
   14f50:	bl	13f14 <por_write_double>
   14f54:	mov	r1, r4
   14f58:	subs	fp, r0, #0
   14f5c:	mov	r0, r9
   14f60:	bne	143c4 <por_begin_data+0xb4>
   14f64:	ldr	r3, [sl, #28]
   14f68:	ldr	r2, [sl, #24]
   14f6c:	bl	1406c <por_write_string_field_n>
   14f70:	subs	fp, r0, #0
   14f74:	bne	143c4 <por_begin_data+0xb4>
   14f78:	ldr	r3, [r5, #264]	; 0x108
   14f7c:	cmp	r3, r6
   14f80:	bgt	14f30 <por_begin_data+0xc20>
   14f84:	b	14a38 <por_begin_data+0x728>
   14f88:	mov	r6, fp
   14f8c:	mov	r1, r6
   14f90:	mov	r0, r5
   14f94:	bl	44cc <readstat_get_value_label@plt>
   14f98:	mov	r1, r4
   14f9c:	add	r6, r6, #1
   14fa0:	mov	sl, r0
   14fa4:	mov	r0, r9
   14fa8:	vldr	s15, [sl, #8]
   14fac:	vcvt.f64.s32	d0, s15
   14fb0:	bl	13f14 <por_write_double>
   14fb4:	mov	r1, r4
   14fb8:	subs	fp, r0, #0
   14fbc:	mov	r0, r9
   14fc0:	bne	143c4 <por_begin_data+0xb4>
   14fc4:	ldr	r3, [sl, #28]
   14fc8:	ldr	r2, [sl, #24]
   14fcc:	bl	1406c <por_write_string_field_n>
   14fd0:	subs	fp, r0, #0
   14fd4:	bne	143c4 <por_begin_data+0xb4>
   14fd8:	ldr	r3, [r5, #264]	; 0x108
   14fdc:	cmp	r3, r6
   14fe0:	bgt	14f8c <por_begin_data+0xc7c>
   14fe4:	b	14a38 <por_begin_data+0x728>
   14fe8:	mov	r1, r6
   14fec:	mov	r0, r5
   14ff0:	bl	44cc <readstat_get_value_label@plt>
   14ff4:	mov	r1, r4
   14ff8:	add	r6, r6, #1
   14ffc:	ldr	r3, [r0, #20]
   15000:	ldr	r2, [r0, #16]
   15004:	mov	sl, r0
   15008:	mov	r0, r9
   1500c:	bl	1406c <por_write_string_field_n>
   15010:	mov	r1, r4
   15014:	subs	fp, r0, #0
   15018:	mov	r0, r9
   1501c:	bne	143c4 <por_begin_data+0xb4>
   15020:	ldr	r3, [sl, #28]
   15024:	ldr	r2, [sl, #24]
   15028:	bl	1406c <por_write_string_field_n>
   1502c:	subs	fp, r0, #0
   15030:	bne	143c4 <por_begin_data+0xb4>
   15034:	ldr	r3, [r5, #264]	; 0x108
   15038:	cmp	r6, r3
   1503c:	blt	14fe8 <por_begin_data+0xcd8>
   15040:	b	14a38 <por_begin_data+0x728>

00015044 <readstat_begin_writing_por>:
   15044:	push	{r4, r5, lr}
   15048:	ldr	ip, [pc, #168]	; 150f8 <readstat_begin_writing_por+0xb4>
   1504c:	ldr	lr, [pc, #168]	; 150fc <readstat_begin_writing_por+0xb8>
   15050:	add	ip, pc, ip
   15054:	add	lr, pc, lr
   15058:	ldr	r5, [pc, #160]	; 15100 <readstat_begin_writing_por+0xbc>
   1505c:	ldr	r4, [pc, #160]	; 15104 <readstat_begin_writing_por+0xc0>
   15060:	str	lr, [r0, #292]	; 0x124
   15064:	str	ip, [r0, #228]	; 0xe4
   15068:	ldr	lr, [pc, #152]	; 15108 <readstat_begin_writing_por+0xc4>
   1506c:	ldr	ip, [pc, #152]	; 1510c <readstat_begin_writing_por+0xc8>
   15070:	add	r5, pc, r5
   15074:	add	r4, pc, r4
   15078:	add	lr, pc, lr
   1507c:	add	ip, pc, ip
   15080:	str	r5, [r0, #232]	; 0xe8
   15084:	str	r4, [r0, #236]	; 0xec
   15088:	ldr	r5, [pc, #128]	; 15110 <readstat_begin_writing_por+0xcc>
   1508c:	ldr	r4, [pc, #128]	; 15114 <readstat_begin_writing_por+0xd0>
   15090:	str	lr, [r0, #240]	; 0xf0
   15094:	str	ip, [r0, #244]	; 0xf4
   15098:	ldr	lr, [pc, #120]	; 15118 <readstat_begin_writing_por+0xd4>
   1509c:	ldr	ip, [pc, #120]	; 1511c <readstat_begin_writing_por+0xd8>
   150a0:	add	r5, pc, r5
   150a4:	add	r4, pc, r4
   150a8:	add	lr, pc, lr
   150ac:	add	ip, pc, ip
   150b0:	str	r5, [r0, #248]	; 0xf8
   150b4:	str	r4, [r0, #252]	; 0xfc
   150b8:	ldr	r5, [pc, #96]	; 15120 <readstat_begin_writing_por+0xdc>
   150bc:	ldr	r4, [pc, #96]	; 15124 <readstat_begin_writing_por+0xe0>
   150c0:	str	lr, [r0, #256]	; 0x100
   150c4:	str	ip, [r0, #264]	; 0x108
   150c8:	ldr	lr, [pc, #88]	; 15128 <readstat_begin_writing_por+0xe4>
   150cc:	ldr	ip, [pc, #88]	; 1512c <readstat_begin_writing_por+0xe8>
   150d0:	add	r5, pc, r5
   150d4:	add	r4, pc, r4
   150d8:	add	lr, pc, lr
   150dc:	add	ip, pc, ip
   150e0:	str	r5, [r0, #268]	; 0x10c
   150e4:	str	r4, [r0, #276]	; 0x114
   150e8:	str	lr, [r0, #280]	; 0x118
   150ec:	str	ip, [r0, #284]	; 0x11c
   150f0:	pop	{r4, r5, lr}
   150f4:	b	3f68 <readstat_begin_writing_file@plt>
   150f8:	.word	0xffffe5d0
   150fc:	.word	0xffffe5dc
   15100:	.word	0xffffe718
   15104:	.word	0xffffee04
   15108:	.word	0xffffee20
   1510c:	.word	0xffffee3c
   15110:	.word	0xffffee38
   15114:	.word	0xffffee50
   15118:	.word	0xffffed5c
   1511c:	.word	0xfffff21c
   15120:	.word	0xfffff218
   15124:	.word	0xfffff234
   15128:	.word	0xffffe658
   1512c:	.word	0xffffe850

00015130 <sav_ctx_free>:
   15130:	push	{r4, r5, r6, lr}
   15134:	mov	r4, r0
   15138:	ldr	r0, [r0, #44]	; 0x2c
   1513c:	cmp	r0, #0
   15140:	beq	15174 <sav_ctx_free+0x44>
   15144:	ldr	r3, [r4, #340]	; 0x154
   15148:	cmp	r3, #0
   1514c:	ble	15170 <sav_ctx_free+0x40>
   15150:	mov	r5, #0
   15154:	ldr	r0, [r0, r5, lsl #2]
   15158:	bl	4418 <spss_varinfo_free@plt>
   1515c:	ldr	r3, [r4, #340]	; 0x154
   15160:	add	r5, r5, #1
   15164:	cmp	r3, r5
   15168:	ldr	r0, [r4, #44]	; 0x2c
   1516c:	bgt	15154 <sav_ctx_free+0x24>
   15170:	bl	3ec0 <free@plt>
   15174:	ldr	r2, [r4, #52]	; 0x34
   15178:	cmp	r2, #0
   1517c:	beq	151bc <sav_ctx_free+0x8c>
   15180:	ldr	r1, [r4, #348]	; 0x15c
   15184:	cmp	r1, #0
   15188:	ble	151b4 <sav_ctx_free+0x84>
   1518c:	mov	r5, #0
   15190:	ldr	r3, [r2, r5, lsl #2]
   15194:	add	r5, r5, #1
   15198:	subs	r0, r3, #0
   1519c:	beq	151ac <sav_ctx_free+0x7c>
   151a0:	bl	3ec0 <free@plt>
   151a4:	ldr	r1, [r4, #348]	; 0x15c
   151a8:	ldr	r2, [r4, #52]	; 0x34
   151ac:	cmp	r5, r1
   151b0:	blt	15190 <sav_ctx_free+0x60>
   151b4:	mov	r0, r2
   151b8:	bl	3ec0 <free@plt>
   151bc:	ldr	r0, [r4, #376]	; 0x178
   151c0:	cmp	r0, #0
   151c4:	beq	151cc <sav_ctx_free+0x9c>
   151c8:	bl	3ec0 <free@plt>
   151cc:	ldr	r0, [r4, #384]	; 0x180
   151d0:	cmp	r0, #0
   151d4:	beq	151dc <sav_ctx_free+0xac>
   151d8:	bl	3ec0 <free@plt>
   151dc:	ldr	r0, [r4, #336]	; 0x150
   151e0:	cmp	r0, #0
   151e4:	beq	151ec <sav_ctx_free+0xbc>
   151e8:	bl	3dd0 <iconv_close@plt>
   151ec:	ldr	r0, [r4, #328]	; 0x148
   151f0:	cmp	r0, #0
   151f4:	beq	151fc <sav_ctx_free+0xcc>
   151f8:	bl	3ec0 <free@plt>
   151fc:	mov	r0, r4
   15200:	pop	{r4, r5, r6, lr}
   15204:	b	3ec0 <free@plt>

00015208 <sav_ctx_init>:
   15208:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1520c:	mov	r4, r0
   15210:	mov	r5, r1
   15214:	mov	r0, #1
   15218:	mov	r1, #440	; 0x1b8
   1521c:	bl	3fc8 <readstat_calloc@plt>
   15220:	subs	sl, r0, #0
   15224:	beq	154f4 <sav_ctx_init+0x2ec>
   15228:	ldr	r1, [pc, #748]	; 1551c <sav_ctx_init+0x314>
   1522c:	mov	r2, #4
   15230:	add	r1, pc, r1
   15234:	mov	r0, r4
   15238:	bl	3fa4 <memcmp@plt>
   1523c:	cmp	r0, #0
   15240:	moveq	r3, #2
   15244:	streq	r3, [sl, #424]	; 0x1a8
   15248:	beq	15270 <sav_ctx_init+0x68>
   1524c:	ldr	r1, [pc, #716]	; 15520 <sav_ctx_init+0x318>
   15250:	mov	r2, #4
   15254:	add	r1, pc, r1
   15258:	mov	r0, r4
   1525c:	bl	3fa4 <memcmp@plt>
   15260:	cmp	r0, #0
   15264:	bne	1550c <sav_ctx_init+0x304>
   15268:	mov	r3, #3
   1526c:	str	r3, [sl, #424]	; 0x1a8
   15270:	ldrb	r2, [r4, #65]	; 0x41
   15274:	ldrb	r3, [r4, #64]	; 0x40
   15278:	ldrb	r0, [r4, #66]	; 0x42
   1527c:	ldrb	r1, [r4, #67]	; 0x43
   15280:	orr	r3, r3, r2, lsl #8
   15284:	ldrb	r2, [sl, #436]	; 0x1b4
   15288:	orr	r3, r3, r0, lsl #16
   1528c:	orr	r3, r3, r1, lsl #24
   15290:	bic	r2, r2, #1
   15294:	sub	r3, r3, #2
   15298:	cmp	r3, #1
   1529c:	movls	r3, r2
   152a0:	orrhi	r3, r2, #1
   152a4:	strb	r3, [sl, #436]	; 0x1b4
   152a8:	bl	3eb4 <machine_is_little_endian@plt>
   152ac:	ldrb	r2, [sl, #436]	; 0x1b4
   152b0:	and	r3, r2, #1
   152b4:	cmp	r0, r3
   152b8:	moveq	r0, #2
   152bc:	movne	r0, #1
   152c0:	str	r0, [sl, #432]	; 0x1b0
   152c4:	ldrb	ip, [r4, #73]	; 0x49
   152c8:	ldrb	r0, [r4, #72]	; 0x48
   152cc:	ldrb	r1, [r4, #74]	; 0x4a
   152d0:	ldrb	r3, [r4, #75]	; 0x4b
   152d4:	orr	r0, r0, ip, lsl #8
   152d8:	orr	r0, r0, r1, lsl #16
   152dc:	orr	r0, r0, r3, lsl #24
   152e0:	cmp	r0, #1
   152e4:	beq	1540c <sav_ctx_init+0x204>
   152e8:	bl	3d94 <byteswap4@plt>
   152ec:	cmp	r0, #1
   152f0:	ldrbeq	r2, [sl, #436]	; 0x1b4
   152f4:	beq	1540c <sav_ctx_init+0x204>
   152f8:	ldrb	r1, [r4, #73]	; 0x49
   152fc:	ldrb	r0, [r4, #72]	; 0x48
   15300:	ldrb	r2, [r4, #74]	; 0x4a
   15304:	ldrb	r3, [r4, #75]	; 0x4b
   15308:	orr	r0, r0, r1, lsl #8
   1530c:	orr	r0, r0, r2, lsl #16
   15310:	orr	r0, r0, r3, lsl #24
   15314:	cmp	r0, #2
   15318:	beq	154fc <sav_ctx_init+0x2f4>
   1531c:	bl	3d94 <byteswap4@plt>
   15320:	cmp	r0, #2
   15324:	beq	154fc <sav_ctx_init+0x2f4>
   15328:	ldrb	r2, [sl, #436]	; 0x1b4
   1532c:	tst	r2, #1
   15330:	beq	1541c <sav_ctx_init+0x214>
   15334:	ldrb	r1, [r4, #81]	; 0x51
   15338:	ldrb	r3, [r4, #80]	; 0x50
   1533c:	ldrb	r2, [r4, #82]	; 0x52
   15340:	ldrb	r0, [r4, #83]	; 0x53
   15344:	orr	r3, r3, r1, lsl #8
   15348:	orr	r3, r3, r2, lsl #16
   1534c:	orr	r0, r3, r0, lsl #24
   15350:	bl	3d94 <byteswap4@plt>
   15354:	ldrb	r3, [sl, #436]	; 0x1b4
   15358:	tst	r3, #1
   1535c:	str	r0, [sl, #352]	; 0x160
   15360:	beq	1543c <sav_ctx_init+0x234>
   15364:	ldrb	r1, [r4, #77]	; 0x4d
   15368:	ldrb	r2, [r4, #78]	; 0x4e
   1536c:	ldrb	r3, [r4, #76]	; 0x4c
   15370:	ldrb	r0, [r4, #79]	; 0x4f
   15374:	mvn	r8, #0
   15378:	orr	r3, r3, r1, lsl #8
   1537c:	orr	r3, r3, r2, lsl #16
   15380:	orr	r0, r3, r0, lsl #24
   15384:	bl	3d94 <byteswap4@plt>
   15388:	ldrb	r3, [sl, #436]	; 0x1b4
   1538c:	add	r1, sl, #400	; 0x190
   15390:	add	ip, sl, #416	; 0x1a0
   15394:	tst	r3, #1
   15398:	ldr	r3, [pc, #388]	; 15524 <sav_ctx_init+0x31c>
   1539c:	mvn	r9, #1048576	; 0x100000
   153a0:	mvn	r6, #1
   153a4:	mvn	r7, #1048576	; 0x100000
   153a8:	mvn	r2, #0
   153ac:	str	r0, [sl, #372]	; 0x174
   153b0:	strd	r8, [r1, #-8]
   153b4:	strd	r6, [r1]
   153b8:	strd	r2, [ip, #-8]
   153bc:	beq	15488 <sav_ctx_init+0x280>
   153c0:	ldrb	lr, [r4, #85]	; 0x55
   153c4:	ldrb	ip, [r4, #89]	; 0x59
   153c8:	ldrb	r2, [r4, #84]	; 0x54
   153cc:	ldrb	r3, [r4, #88]	; 0x58
   153d0:	ldrb	r0, [r4, #86]	; 0x56
   153d4:	ldrb	r1, [r4, #90]	; 0x5a
   153d8:	orr	r2, r2, lr, lsl #8
   153dc:	orr	r3, r3, ip, lsl #8
   153e0:	ldrb	lr, [r4, #87]	; 0x57
   153e4:	ldrb	ip, [r4, #91]	; 0x5b
   153e8:	orr	r2, r2, r0, lsl #16
   153ec:	orr	r3, r3, r1, lsl #16
   153f0:	orr	r0, r2, lr, lsl #24
   153f4:	orr	r1, r3, ip, lsl #24
   153f8:	vmov	d0, r0, r1
   153fc:	bl	4508 <byteswap_double@plt>
   15400:	vmov	r2, s0
   15404:	vmov	r3, s1
   15408:	b	154c0 <sav_ctx_init+0x2b8>
   1540c:	mov	r3, #1
   15410:	str	r3, [sl, #428]	; 0x1ac
   15414:	tst	r2, #1
   15418:	bne	15334 <sav_ctx_init+0x12c>
   1541c:	ldrb	r0, [r4, #81]	; 0x51
   15420:	ldrb	r3, [r4, #80]	; 0x50
   15424:	ldrb	r1, [r4, #82]	; 0x52
   15428:	ldrb	r2, [r4, #83]	; 0x53
   1542c:	orr	r3, r3, r0, lsl #8
   15430:	orr	r3, r3, r1, lsl #16
   15434:	orr	r3, r3, r2, lsl #24
   15438:	str	r3, [sl, #352]	; 0x160
   1543c:	ldrb	r2, [r4, #77]	; 0x4d
   15440:	ldrb	r0, [r4, #78]	; 0x4e
   15444:	ldrb	r3, [r4, #76]	; 0x4c
   15448:	ldrb	r1, [r4, #79]	; 0x4f
   1544c:	add	ip, sl, #416	; 0x1a0
   15450:	orr	r3, r3, r2, lsl #8
   15454:	orr	r3, r3, r0, lsl #16
   15458:	add	r2, sl, #400	; 0x190
   1545c:	orr	r3, r3, r1, lsl #24
   15460:	mvn	r0, #0
   15464:	mvn	r1, #1048576	; 0x100000
   15468:	str	r3, [sl, #372]	; 0x174
   1546c:	strd	r0, [r2, #-8]
   15470:	ldr	r1, [pc, #172]	; 15524 <sav_ctx_init+0x31c>
   15474:	mvn	r6, #1
   15478:	mvn	r7, #1048576	; 0x100000
   1547c:	mvn	r0, #0
   15480:	strd	r6, [r2]
   15484:	strd	r0, [ip, #-8]
   15488:	ldrb	r0, [r4, #85]	; 0x55
   1548c:	ldrb	r1, [r4, #89]	; 0x59
   15490:	ldrb	r2, [r4, #84]	; 0x54
   15494:	ldrb	r3, [r4, #88]	; 0x58
   15498:	ldrb	lr, [r4, #86]	; 0x56
   1549c:	ldrb	ip, [r4, #90]	; 0x5a
   154a0:	orr	r2, r2, r0, lsl #8
   154a4:	orr	r3, r3, r1, lsl #8
   154a8:	ldrb	r0, [r4, #87]	; 0x57
   154ac:	ldrb	r1, [r4, #91]	; 0x5b
   154b0:	orr	r2, r2, lr, lsl #16
   154b4:	orr	r3, r3, ip, lsl #16
   154b8:	orr	r2, r2, r0, lsl #24
   154bc:	orr	r3, r3, r1, lsl #24
   154c0:	mov	r6, r2
   154c4:	mov	r7, r3
   154c8:	mov	r0, #512	; 0x200
   154cc:	str	r0, [sl, #48]	; 0x30
   154d0:	mov	r1, #4
   154d4:	str	r6, [sl, #416]	; 0x1a0
   154d8:	str	r7, [sl, #420]	; 0x1a4
   154dc:	bl	3fc8 <readstat_calloc@plt>
   154e0:	cmp	r0, #0
   154e4:	mov	r4, r0
   154e8:	str	r0, [sl, #44]	; 0x2c
   154ec:	beq	1550c <sav_ctx_init+0x304>
   154f0:	str	r5, [sl, #36]	; 0x24
   154f4:	mov	r0, sl
   154f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   154fc:	mov	r3, #2
   15500:	str	r3, [sl, #428]	; 0x1ac
   15504:	ldrb	r2, [sl, #436]	; 0x1b4
   15508:	b	15414 <sav_ctx_init+0x20c>
   1550c:	mov	r0, sl
   15510:	bl	3f14 <sav_ctx_free@plt>
   15514:	mov	sl, #0
   15518:	b	154f4 <sav_ctx_init+0x2ec>
   1551c:	.word	0x00011738
   15520:	.word	0x0001171c
   15524:	.word	0x7fefffff

00015528 <sav_compressed_row_bound>:
   15528:	lsr	r3, r0, #3
   1552c:	add	r3, r3, #8
   15530:	bic	r3, r3, #7
   15534:	add	r0, r3, r0
   15538:	bx	lr

0001553c <sav_compress_row>:
   1553c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15540:	vpush	{d8-d9}
   15544:	mov	r4, #0
   15548:	str	r4, [r0]
   1554c:	str	r4, [r0, #4]
   15550:	sub	sp, sp, #44	; 0x2c
   15554:	mov	r8, r0
   15558:	str	r3, [sp, #8]
   1555c:	ldr	r3, [r3, #28]
   15560:	cmp	r3, r4
   15564:	ble	1575c <sav_compress_row+0x220>
   15568:	ldr	r3, [pc, #520]	; 15778 <sav_compress_row+0x23c>
   1556c:	vldr	d8, [pc, #500]	; 15768 <sav_compress_row+0x22c>
   15570:	vldr	d9, [pc, #504]	; 15770 <sav_compress_row+0x234>
   15574:	add	r3, pc, r3
   15578:	str	r3, [sp]
   1557c:	mov	r6, r4
   15580:	add	r3, sp, #24
   15584:	mov	r7, #8
   15588:	str	r3, [sp, #16]
   1558c:	add	r3, sp, #32
   15590:	str	r4, [sp, #4]
   15594:	str	r3, [sp, #20]
   15598:	str	r1, [sp, #12]
   1559c:	ldr	r1, [sp, #4]
   155a0:	ldr	r0, [sp, #8]
   155a4:	bl	437c <readstat_get_variable@plt>
   155a8:	ldr	r3, [r0]
   155ac:	cmp	r3, #0
   155b0:	bne	15640 <sav_compress_row+0x104>
   155b4:	ldr	r5, [r0, #1596]	; 0x63c
   155b8:	cmp	r5, #0
   155bc:	beq	15698 <sav_compress_row+0x15c>
   155c0:	mov	r9, #8
   155c4:	ldr	sl, [sp, #12]
   155c8:	b	155fc <sav_compress_row+0xc0>
   155cc:	mvn	r3, #1
   155d0:	strb	r3, [r8, r4]
   155d4:	add	r4, r4, #1
   155d8:	ands	r2, r4, #7
   155dc:	addeq	r1, r8, r7
   155e0:	streq	r2, [r8, r7]
   155e4:	moveq	r4, r7
   155e8:	streq	r2, [r1, #4]
   155ec:	addeq	r7, r7, #8
   155f0:	subs	r5, r5, #8
   155f4:	add	r6, r6, #8
   155f8:	beq	156e0 <sav_compress_row+0x1a4>
   155fc:	add	fp, sl, r6
   15600:	mov	r0, fp
   15604:	mov	r2, r9
   15608:	ldr	r1, [sp]
   1560c:	bl	3fa4 <memcmp@plt>
   15610:	cmp	r0, #0
   15614:	beq	155cc <sav_compress_row+0x90>
   15618:	mvn	r3, #2
   1561c:	strb	r3, [r8, r4]
   15620:	ldr	r2, [fp]
   15624:	ldr	r1, [fp, #4]
   15628:	str	r2, [r8, r7]
   1562c:	add	r2, r8, r7
   15630:	add	r4, r4, #1
   15634:	str	r1, [r2, #4]
   15638:	add	r7, r7, #8
   1563c:	b	155d8 <sav_compress_row+0x9c>
   15640:	ldr	r3, [sp, #12]
   15644:	mvn	fp, #1048576	; 0x100000
   15648:	add	ip, r3, r6
   1564c:	ldr	r3, [sp, #16]
   15650:	ldr	r0, [ip]
   15654:	ldr	r1, [ip, #4]
   15658:	mvn	sl, #0
   1565c:	stmia	r3!, {r0, r1}
   15660:	ldrd	r2, [sp, #24]
   15664:	cmp	r3, fp
   15668:	cmpeq	r2, sl
   1566c:	bne	156e8 <sav_compress_row+0x1ac>
   15670:	mvn	r3, #0
   15674:	strb	r3, [r8, r4]
   15678:	add	r4, r4, #1
   1567c:	ands	r3, r4, #7
   15680:	streq	r3, [r8, r7]
   15684:	addeq	r2, r8, r7
   15688:	moveq	r4, r7
   1568c:	add	r6, r6, #8
   15690:	addeq	r7, r7, #8
   15694:	streq	r3, [r2, #4]
   15698:	ldr	r3, [sp, #8]
   1569c:	ldr	r2, [sp, #4]
   156a0:	ldr	r3, [r3, #28]
   156a4:	add	r2, r2, #1
   156a8:	cmp	r3, r2
   156ac:	str	r2, [sp, #4]
   156b0:	bgt	1559c <sav_compress_row+0x60>
   156b4:	mov	r0, r7
   156b8:	ldr	r2, [sp, #8]
   156bc:	ldr	r3, [r2, #84]	; 0x54
   156c0:	ldr	r2, [r2, #80]	; 0x50
   156c4:	add	r3, r3, #1
   156c8:	cmp	r3, r2
   156cc:	mvneq	r3, #3
   156d0:	strbeq	r3, [r8, r4]
   156d4:	add	sp, sp, #44	; 0x2c
   156d8:	vpop	{d8-d9}
   156dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   156e0:	str	sl, [sp, #12]
   156e4:	b	15698 <sav_compress_row+0x15c>
   156e8:	ldr	r3, [sp, #20]
   156ec:	stmia	r3!, {r0, r1}
   156f0:	vldr	d7, [sp, #32]
   156f4:	vcmpe.f64	d7, d8
   156f8:	vmrs	APSR_nzcv, fpscr
   156fc:	ble	15734 <sav_compress_row+0x1f8>
   15700:	vcmpe.f64	d7, d9
   15704:	vmrs	APSR_nzcv, fpscr
   15708:	bpl	15734 <sav_compress_row+0x1f8>
   1570c:	vcvt.s32.f64	s13, d7
   15710:	vcvt.f64.s32	d5, s13
   15714:	vcmp.f64	d7, d5
   15718:	vmrs	APSR_nzcv, fpscr
   1571c:	bne	15734 <sav_compress_row+0x1f8>
   15720:	vmov	r3, s13
   15724:	add	r3, r3, #100	; 0x64
   15728:	strb	r3, [r8, r4]
   1572c:	add	r4, r4, #1
   15730:	b	1567c <sav_compress_row+0x140>
   15734:	mvn	r3, #2
   15738:	strb	r3, [r8, r4]
   1573c:	ldr	r3, [ip]
   15740:	ldr	r2, [ip, #4]
   15744:	str	r3, [r8, r7]
   15748:	add	r3, r8, r7
   1574c:	add	r4, r4, #1
   15750:	str	r2, [r3, #4]
   15754:	add	r7, r7, #8
   15758:	b	1567c <sav_compress_row+0x140>
   1575c:	mov	r0, #8
   15760:	b	156b8 <sav_compress_row+0x17c>
   15764:	nop			; (mov r0, r0)
   15768:	.word	0x00000000
   1576c:	.word	0xc0590000
   15770:	.word	0x00000000
   15774:	.word	0x40630000
   15778:	.word	0x00011404

0001577c <sav_decompress_row>:
   1577c:	ldr	r3, [r0, #44]	; 0x2c
   15780:	push	{r4, r5, r6, r7, r8, r9, lr}
   15784:	cmp	r3, #0
   15788:	mov	r4, r0
   1578c:	sub	sp, sp, #20
   15790:	ldrd	r0, [r0, #16]
   15794:	bne	15924 <sav_decompress_row+0x1a8>
   15798:	ldr	r5, [r4, #40]	; 0x28
   1579c:	strd	r0, [sp, #8]
   157a0:	rsb	r5, r5, #8
   157a4:	cmp	r5, #8
   157a8:	beq	15850 <sav_decompress_row+0xd4>
   157ac:	cmp	r5, #7
   157b0:	bgt	157a4 <sav_decompress_row+0x28>
   157b4:	add	r6, r5, #31
   157b8:	ldr	r7, [pc, #404]	; 15954 <sav_decompress_row+0x1d8>
   157bc:	add	r6, r4, r6
   157c0:	mov	r9, sp
   157c4:	add	r8, sp, #8
   157c8:	ldrb	r3, [r6, #1]!
   157cc:	cmp	r3, #253	; 0xfd
   157d0:	beq	15890 <sav_decompress_row+0x114>
   157d4:	bhi	15800 <sav_decompress_row+0x84>
   157d8:	cmp	r3, #0
   157dc:	beq	1591c <sav_decompress_row+0x1a0>
   157e0:	cmp	r3, #252	; 0xfc
   157e4:	bne	158f0 <sav_decompress_row+0x174>
   157e8:	rsb	r5, r5, #8
   157ec:	mov	r3, #3
   157f0:	str	r3, [r4, #48]	; 0x30
   157f4:	str	r5, [r4, #40]	; 0x28
   157f8:	add	sp, sp, #20
   157fc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15800:	cmp	r3, #254	; 0xfe
   15804:	beq	158e0 <sav_decompress_row+0x164>
   15808:	cmp	r3, #255	; 0xff
   1580c:	moveq	r3, r8
   15810:	bne	158f0 <sav_decompress_row+0x174>
   15814:	ldr	r2, [r4, #8]
   15818:	ldm	r3!, {r0, r1}
   1581c:	str	r0, [r2]
   15820:	str	r1, [r2, #4]
   15824:	ldr	r2, [r4, #8]
   15828:	ldr	r3, [r4, #12]
   1582c:	add	r2, r2, #8
   15830:	sub	r3, r3, #8
   15834:	str	r2, [r4, #8]
   15838:	str	r3, [r4, #12]
   1583c:	cmp	r3, #7
   15840:	add	r5, r5, #1
   15844:	bls	15934 <sav_decompress_row+0x1b8>
   15848:	cmp	r5, #8
   1584c:	bne	157c8 <sav_decompress_row+0x4c>
   15850:	ldr	r3, [r4, #4]
   15854:	cmp	r3, #7
   15858:	movls	r5, #0
   1585c:	strls	r5, [r4, #48]	; 0x30
   15860:	bls	157f4 <sav_decompress_row+0x78>
   15864:	mov	r2, r4
   15868:	sub	r3, r3, #8
   1586c:	ldr	r1, [r2], #32
   15870:	mov	r5, #0
   15874:	add	r0, r1, #8
   15878:	ldr	ip, [r1]
   1587c:	ldr	r1, [r1, #4]
   15880:	str	ip, [r4, #32]
   15884:	str	r1, [r2, #4]
   15888:	stm	r4, {r0, r3}
   1588c:	b	157b4 <sav_decompress_row+0x38>
   15890:	ldr	r3, [r4, #4]
   15894:	cmp	r3, #7
   15898:	bls	15944 <sav_decompress_row+0x1c8>
   1589c:	ldr	r2, [r4]
   158a0:	ldr	r3, [r4, #8]
   158a4:	ldr	r1, [r2]
   158a8:	ldr	r2, [r2, #4]
   158ac:	str	r1, [r3]
   158b0:	str	r2, [r3, #4]
   158b4:	ldm	r4, {r1, r2}
   158b8:	ldr	r0, [r4, #8]
   158bc:	ldr	r3, [r4, #12]
   158c0:	add	r1, r1, #8
   158c4:	sub	r2, r2, #8
   158c8:	add	r0, r0, #8
   158cc:	sub	r3, r3, #8
   158d0:	str	r0, [r4, #8]
   158d4:	str	r3, [r4, #12]
   158d8:	stm	r4, {r1, r2}
   158dc:	b	1583c <sav_decompress_row+0xc0>
   158e0:	ldr	r3, [r4, #8]
   158e4:	str	r7, [r3]
   158e8:	str	r7, [r3, #4]
   158ec:	b	15824 <sav_decompress_row+0xa8>
   158f0:	vmov	s15, r3
   158f4:	ldr	r3, [r4, #44]	; 0x2c
   158f8:	cmp	r3, #0
   158fc:	vcvt.f64.s32	d0, s15
   15900:	vldr	d7, [r4, #24]
   15904:	vsub.f64	d0, d0, d7
   15908:	vstr	d0, [sp]
   1590c:	bne	1592c <sav_decompress_row+0x1b0>
   15910:	mov	r3, r9
   15914:	vstr	d0, [sp]
   15918:	b	15814 <sav_decompress_row+0x98>
   1591c:	ldr	r3, [r4, #12]
   15920:	b	1583c <sav_decompress_row+0xc0>
   15924:	bl	3d7c <byteswap8@plt>
   15928:	b	15798 <sav_decompress_row+0x1c>
   1592c:	bl	4508 <byteswap_double@plt>
   15930:	b	15910 <sav_decompress_row+0x194>
   15934:	mov	r3, #2
   15938:	rsb	r5, r5, #8
   1593c:	str	r3, [r4, #48]	; 0x30
   15940:	b	157f4 <sav_decompress_row+0x78>
   15944:	mov	r3, #0
   15948:	rsb	r5, r5, #8
   1594c:	str	r3, [r4, #48]	; 0x30
   15950:	b	157f4 <sav_decompress_row+0x78>
   15954:	.word	0x20202020

00015958 <compare_varlookups>:
   15958:	b	3e00 <strcmp@plt>

0001595c <sav_parse_long_variable_names_record>:
   1595c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15960:	sub	sp, sp, #8320	; 0x2080
   15964:	ldr	r7, [r2, #340]	; 0x154
   15968:	sub	sp, sp, #52	; 0x34
   1596c:	cmp	r7, #0
   15970:	str	r2, [sp, #72]	; 0x48
   15974:	str	r0, [sp, #88]	; 0x58
   15978:	str	r1, [sp, #92]	; 0x5c
   1597c:	ldr	r5, [r2, #44]	; 0x2c
   15980:	ble	15fdc <sav_parse_long_variable_names_record+0x680>
   15984:	mov	r6, #0
   15988:	add	r7, r5, r7, lsl #2
   1598c:	mov	r3, r6
   15990:	cmp	r3, #0
   15994:	add	r1, r3, #187	; 0xbb
   15998:	ldr	r4, [r5], #4
   1599c:	beq	159b0 <sav_parse_long_variable_names_record+0x54>
   159a0:	add	r0, r4, #187	; 0xbb
   159a4:	bl	3e00 <strcmp@plt>
   159a8:	cmp	r0, #0
   159ac:	beq	159b4 <sav_parse_long_variable_names_record+0x58>
   159b0:	add	r6, r6, #1
   159b4:	cmp	r7, r5
   159b8:	mov	r3, r4
   159bc:	bne	15990 <sav_parse_long_variable_names_record+0x34>
   159c0:	add	r0, r6, r6, lsl #2
   159c4:	str	r6, [sp, #76]	; 0x4c
   159c8:	lsl	r0, r0, #3
   159cc:	bl	422c <readstat_malloc@plt>
   159d0:	ldr	r3, [sp, #72]	; 0x48
   159d4:	ldr	r2, [sp, #92]	; 0x5c
   159d8:	ldr	r6, [r3, #340]	; 0x154
   159dc:	ldr	r3, [sp, #88]	; 0x58
   159e0:	cmp	r6, #0
   159e4:	add	r3, r3, r2
   159e8:	str	r3, [sp, #48]	; 0x30
   159ec:	mov	fp, r0
   159f0:	ble	15a68 <sav_parse_long_variable_names_record+0x10c>
   159f4:	mov	r8, #0
   159f8:	ldr	r9, [sp, #72]	; 0x48
   159fc:	mov	r4, r8
   15a00:	mov	r5, r8
   15a04:	ldr	r3, [r9, #44]	; 0x2c
   15a08:	add	r1, r4, #187	; 0xbb
   15a0c:	cmp	r4, #0
   15a10:	ldr	r4, [r3, r5, lsl #2]
   15a14:	add	r7, r4, #187	; 0xbb
   15a18:	beq	15a2c <sav_parse_long_variable_names_record+0xd0>
   15a1c:	mov	r0, r7
   15a20:	bl	3e00 <strcmp@plt>
   15a24:	cmp	r0, #0
   15a28:	beq	15a5c <sav_parse_long_variable_names_record+0x100>
   15a2c:	add	r2, r8, r8, lsl #2
   15a30:	ldr	r0, [r7]
   15a34:	ldr	r1, [r7, #4]
   15a38:	add	r3, fp, r2, lsl #3
   15a3c:	str	r0, [fp, r2, lsl #3]
   15a40:	str	r1, [r3, #4]
   15a44:	ldrb	r2, [r7, #8]
   15a48:	add	r8, r8, #1
   15a4c:	strb	r2, [r3, #8]
   15a50:	ldr	r2, [r4, #8]
   15a54:	str	r2, [r3, #36]	; 0x24
   15a58:	ldr	r6, [r9, #340]	; 0x154
   15a5c:	add	r5, r5, #1
   15a60:	cmp	r5, r6
   15a64:	blt	15a04 <sav_parse_long_variable_names_record+0xa8>
   15a68:	ldr	r3, [pc, #1488]	; 16040 <sav_parse_long_variable_names_record+0x6e4>
   15a6c:	mov	r2, #40	; 0x28
   15a70:	add	r3, pc, r3
   15a74:	ldr	r1, [sp, #76]	; 0x4c
   15a78:	mov	r0, fp
   15a7c:	bl	443c <qsort@plt>
   15a80:	ldr	sl, [sp, #88]	; 0x58
   15a84:	ldr	r2, [sp, #48]	; 0x30
   15a88:	cmp	sl, r2
   15a8c:	beq	15fbc <sav_parse_long_variable_names_record+0x660>
   15a90:	ldr	r3, [pc, #1452]	; 16044 <sav_parse_long_variable_names_record+0x6e8>
   15a94:	mov	r4, #0
   15a98:	add	r3, pc, r3
   15a9c:	mov	r2, r3
   15aa0:	str	r3, [sp, #64]	; 0x40
   15aa4:	ldr	r3, [pc, #1436]	; 16048 <sav_parse_long_variable_names_record+0x6ec>
   15aa8:	add	r2, r2, #1200	; 0x4b0
   15aac:	add	r3, pc, r3
   15ab0:	add	r2, r2, #8
   15ab4:	str	r2, [sp, #68]	; 0x44
   15ab8:	str	r3, [sp, #60]	; 0x3c
   15abc:	add	r2, r3, #12
   15ac0:	mov	r3, #1
   15ac4:	str	r3, [sp, #28]
   15ac8:	ldr	r3, [pc, #1404]	; 1604c <sav_parse_long_variable_names_record+0x6f0>
   15acc:	mov	r5, r4
   15ad0:	mov	lr, r4
   15ad4:	add	r3, pc, r3
   15ad8:	str	r2, [sp, #56]	; 0x38
   15adc:	str	r4, [sp, #36]	; 0x24
   15ae0:	str	r4, [sp, #24]
   15ae4:	str	r3, [sp, #80]	; 0x50
   15ae8:	ldr	r3, [sp, #56]	; 0x38
   15aec:	cmp	r4, #0
   15af0:	add	lr, r3, lr
   15af4:	mov	r3, r5
   15af8:	beq	15b40 <sav_parse_long_variable_names_record+0x1e4>
   15afc:	sub	r1, r4, #1
   15b00:	adds	r1, lr, r1
   15b04:	bcs	15b38 <sav_parse_long_variable_names_record+0x1dc>
   15b08:	ldrb	ip, [sl]
   15b0c:	mov	r2, lr
   15b10:	sub	r3, r1, r2
   15b14:	ldrb	r0, [r2, r3, asr #1]
   15b18:	add	r3, r2, r3, asr #1
   15b1c:	cmp	r0, ip
   15b20:	subhi	r1, r3, #1
   15b24:	bhi	15b30 <sav_parse_long_variable_names_record+0x1d4>
   15b28:	bcs	15d9c <sav_parse_long_variable_names_record+0x440>
   15b2c:	add	r2, r3, #1
   15b30:	cmp	r1, r2
   15b34:	bcs	15b10 <sav_parse_long_variable_names_record+0x1b4>
   15b38:	add	lr, lr, r4
   15b3c:	add	r3, r5, r4
   15b40:	ldr	r2, [sp, #80]	; 0x50
   15b44:	ldr	r1, [sp, #28]
   15b48:	add	r2, r2, r1
   15b4c:	ldrb	r5, [r2, #508]	; 0x1fc
   15b50:	cmp	r5, #0
   15b54:	beq	15bac <sav_parse_long_variable_names_record+0x250>
   15b58:	add	r0, lr, r5, lsl #1
   15b5c:	sub	r0, r0, #2
   15b60:	cmp	lr, r0
   15b64:	bhi	15ba8 <sav_parse_long_variable_names_record+0x24c>
   15b68:	ldrb	r4, [sl]
   15b6c:	mov	r1, lr
   15b70:	sub	r2, r0, r1
   15b74:	asr	r2, r2, #1
   15b78:	bic	r2, r2, #1
   15b7c:	add	ip, r1, r2
   15b80:	ldrb	r2, [r1, r2]
   15b84:	cmp	r2, r4
   15b88:	subhi	r0, ip, #2
   15b8c:	bhi	15ba0 <sav_parse_long_variable_names_record+0x244>
   15b90:	ldrb	r2, [ip, #1]
   15b94:	add	r1, ip, #2
   15b98:	cmp	r2, r4
   15b9c:	bcs	15da8 <sav_parse_long_variable_names_record+0x44c>
   15ba0:	cmp	r1, r0
   15ba4:	bls	15b70 <sav_parse_long_variable_names_record+0x214>
   15ba8:	add	r3, r3, r5
   15bac:	ldr	r2, [sp, #60]	; 0x3c
   15bb0:	add	r3, r2, r3
   15bb4:	ldrb	r3, [r3, #584]	; 0x248
   15bb8:	add	r3, r2, r3
   15bbc:	ldrb	r7, [r3, #1056]	; 0x420
   15bc0:	ldrb	r3, [r3, #980]	; 0x3d4
   15bc4:	cmp	r7, #0
   15bc8:	str	r3, [sp, #28]
   15bcc:	beq	15c60 <sav_parse_long_variable_names_record+0x304>
   15bd0:	add	r3, sp, #112	; 0x70
   15bd4:	str	r3, [sp, #44]	; 0x2c
   15bd8:	add	r3, sp, #108	; 0x6c
   15bdc:	ldrb	r9, [r2, r7]
   15be0:	str	r3, [sp, #52]	; 0x34
   15be4:	add	r3, sp, #176	; 0xb0
   15be8:	str	r3, [sp, #40]	; 0x28
   15bec:	ldr	r3, [pc, #1116]	; 16050 <sav_parse_long_variable_names_record+0x6f4>
   15bf0:	add	r7, r2, r7
   15bf4:	add	r8, sp, #96	; 0x60
   15bf8:	add	r2, r7, r9
   15bfc:	add	r3, pc, r3
   15c00:	str	r2, [sp, #20]
   15c04:	str	r3, [sp, #84]	; 0x54
   15c08:	str	sl, [sp, #32]
   15c0c:	ldr	r3, [sp, #20]
   15c10:	cmp	r7, r3
   15c14:	beq	15c58 <sav_parse_long_variable_names_record+0x2fc>
   15c18:	ldrb	r3, [r7, #1]!
   15c1c:	cmp	r3, #6
   15c20:	addls	pc, pc, r3, lsl #2
   15c24:	b	15c0c <sav_parse_long_variable_names_record+0x2b0>
   15c28:	b	15d08 <sav_parse_long_variable_names_record+0x3ac>
   15c2c:	b	15cdc <sav_parse_long_variable_names_record+0x380>
   15c30:	b	15cb4 <sav_parse_long_variable_names_record+0x358>
   15c34:	b	15c44 <sav_parse_long_variable_names_record+0x2e8>
   15c38:	b	15ca0 <sav_parse_long_variable_names_record+0x344>
   15c3c:	b	15c44 <sav_parse_long_variable_names_record+0x2e8>
   15c40:	b	15ca0 <sav_parse_long_variable_names_record+0x344>
   15c44:	ldr	r3, [sp, #32]
   15c48:	str	r3, [sp, #24]
   15c4c:	ldr	r3, [sp, #20]
   15c50:	cmp	r7, r3
   15c54:	bne	15c18 <sav_parse_long_variable_names_record+0x2bc>
   15c58:	ldr	sl, [sp, #32]
   15c5c:	ldr	r3, [sp, #28]
   15c60:	cmp	r3, #0
   15c64:	beq	15db8 <sav_parse_long_variable_names_record+0x45c>
   15c68:	ldr	r3, [sp, #48]	; 0x30
   15c6c:	add	sl, sl, #1
   15c70:	cmp	r3, sl
   15c74:	beq	15e30 <sav_parse_long_variable_names_record+0x4d4>
   15c78:	ldr	r1, [sp, #28]
   15c7c:	ldr	r0, [sp, #64]	; 0x40
   15c80:	lsl	r3, r1, #1
   15c84:	add	r2, r0, #1360	; 0x550
   15c88:	add	r1, r0, r1
   15c8c:	ldr	r0, [sp, #68]	; 0x44
   15c90:	ldrsh	r5, [r2, r3]
   15c94:	ldrb	r4, [r1, #1512]	; 0x5e8
   15c98:	ldrsh	lr, [r0, r3]
   15c9c:	b	15ae8 <sav_parse_long_variable_names_record+0x18c>
   15ca0:	ldr	r3, [sp, #32]
   15ca4:	ldr	r2, [sp, #24]
   15ca8:	sub	r3, r3, r2
   15cac:	str	r3, [sp, #36]	; 0x24
   15cb0:	b	15c0c <sav_parse_long_variable_names_record+0x2b0>
   15cb4:	ldr	r4, [sp, #36]	; 0x24
   15cb8:	ldr	r1, [sp, #24]
   15cbc:	mov	r2, r4
   15cc0:	ldr	r0, [sp, #52]	; 0x34
   15cc4:	bl	3f20 <memcpy@plt>
   15cc8:	ldr	r2, [sp, #40]	; 0x28
   15ccc:	add	r3, r2, r4
   15cd0:	mov	r2, #0
   15cd4:	strb	r2, [r3, #-68]	; 0xffffffbc
   15cd8:	b	15c0c <sav_parse_long_variable_names_record+0x2b0>
   15cdc:	ldr	r4, [sp, #36]	; 0x24
   15ce0:	ldr	r3, [sp, #44]	; 0x2c
   15ce4:	mov	r2, r4
   15ce8:	sub	r0, r3, #16
   15cec:	ldr	r1, [sp, #24]
   15cf0:	bl	3f20 <memcpy@plt>
   15cf4:	ldr	r2, [sp, #40]	; 0x28
   15cf8:	add	r3, r2, r4
   15cfc:	mov	r2, #0
   15d00:	strb	r2, [r3, #-80]	; 0xffffffb0
   15d04:	b	15c0c <sav_parse_long_variable_names_record+0x2b0>
   15d08:	ldr	r6, [sp, #76]	; 0x4c
   15d0c:	mov	sl, #0
   15d10:	cmp	r6, sl
   15d14:	bhi	15d28 <sav_parse_long_variable_names_record+0x3cc>
   15d18:	b	15d5c <sav_parse_long_variable_names_record+0x400>
   15d1c:	cmp	sl, r4
   15d20:	mov	r6, r4
   15d24:	bcs	15d5c <sav_parse_long_variable_names_record+0x400>
   15d28:	add	r4, r6, sl
   15d2c:	mov	r0, r8
   15d30:	lsr	r4, r4, #1
   15d34:	add	r5, r4, r4, lsl #2
   15d38:	add	r5, fp, r5, lsl #3
   15d3c:	mov	r1, r5
   15d40:	bl	3e00 <strcmp@plt>
   15d44:	cmp	r0, #0
   15d48:	blt	15d1c <sav_parse_long_variable_names_record+0x3c0>
   15d4c:	beq	15f3c <sav_parse_long_variable_names_record+0x5e0>
   15d50:	add	sl, r4, #1
   15d54:	cmp	r6, sl
   15d58:	bhi	15d28 <sav_parse_long_variable_names_record+0x3cc>
   15d5c:	ldr	r4, [sp, #72]	; 0x48
   15d60:	ldr	r3, [r4, #24]
   15d64:	cmp	r3, #0
   15d68:	beq	15c0c <sav_parse_long_variable_names_record+0x2b0>
   15d6c:	ldr	r5, [sp, #40]	; 0x28
   15d70:	ldr	r3, [sp, #44]	; 0x2c
   15d74:	ldr	r2, [sp, #84]	; 0x54
   15d78:	sub	r3, r3, #16
   15d7c:	mov	r1, #8192	; 0x2000
   15d80:	mov	r0, r5
   15d84:	bl	4280 <snprintf@plt>
   15d88:	ldr	r3, [r4, #24]
   15d8c:	ldr	r1, [r4, #40]	; 0x28
   15d90:	mov	r0, r5
   15d94:	blx	r3
   15d98:	b	15c0c <sav_parse_long_variable_names_record+0x2b0>
   15d9c:	sub	r3, r3, lr
   15da0:	add	r3, r5, r3
   15da4:	b	15bac <sav_parse_long_variable_names_record+0x250>
   15da8:	sub	ip, ip, lr
   15dac:	add	r3, r3, ip, asr #1
   15db0:	b	15bac <sav_parse_long_variable_names_record+0x250>
   15db4:	ldr	sl, [sp, #48]	; 0x30
   15db8:	ldr	r5, [sp, #72]	; 0x48
   15dbc:	ldr	r3, [r5, #24]
   15dc0:	cmp	r3, #0
   15dc4:	moveq	r4, #5
   15dc8:	beq	15e18 <sav_parse_long_variable_names_record+0x4bc>
   15dcc:	ldrb	r2, [sl]
   15dd0:	ldr	r1, [sp, #88]	; 0x58
   15dd4:	ldr	r0, [sp, #92]	; 0x5c
   15dd8:	sub	r3, sl, r1
   15ddc:	str	r2, [sp, #12]
   15de0:	ldr	r2, [pc, #620]	; 16054 <sav_parse_long_variable_names_record+0x6f8>
   15de4:	add	r4, sp, #176	; 0xb0
   15de8:	stm	sp, {r1, r3}
   15dec:	str	r0, [sp, #8]
   15df0:	mov	r3, r0
   15df4:	add	r2, pc, r2
   15df8:	mov	r0, r4
   15dfc:	mov	r1, #8192	; 0x2000
   15e00:	bl	4280 <snprintf@plt>
   15e04:	mov	r0, r4
   15e08:	ldr	r3, [r5, #24]
   15e0c:	ldr	r1, [r5, #40]	; 0x28
   15e10:	blx	r3
   15e14:	mov	r4, #5
   15e18:	mov	r0, fp
   15e1c:	bl	3ec0 <free@plt>
   15e20:	mov	r0, r4
   15e24:	add	sp, sp, #8320	; 0x2080
   15e28:	add	sp, sp, #52	; 0x34
   15e2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e30:	ldr	r2, [pc, #544]	; 16058 <sav_parse_long_variable_names_record+0x6fc>
   15e34:	ldr	r3, [sp, #28]
   15e38:	add	r2, pc, r2
   15e3c:	cmp	r3, #10
   15e40:	add	r3, r2, r3
   15e44:	movgt	r1, #0
   15e48:	ldrb	r3, [r3, #1132]	; 0x46c
   15e4c:	movle	r1, #1
   15e50:	str	r1, [sp, #32]
   15e54:	add	r1, r2, r3
   15e58:	ldrb	r3, [r2, r3]
   15e5c:	add	sl, r1, r3
   15e60:	add	r3, sp, #108	; 0x6c
   15e64:	add	r2, sp, #112	; 0x70
   15e68:	str	r3, [sp, #40]	; 0x28
   15e6c:	add	r3, sp, #176	; 0xb0
   15e70:	str	r2, [sp, #20]
   15e74:	str	r3, [sp, #28]
   15e78:	ldr	r2, [sp, #24]
   15e7c:	ldr	r3, [sp, #48]	; 0x30
   15e80:	add	r7, sp, #96	; 0x60
   15e84:	sub	r3, r3, r2
   15e88:	str	r3, [sp, #44]	; 0x2c
   15e8c:	ldr	r3, [pc, #456]	; 1605c <sav_parse_long_variable_names_record+0x700>
   15e90:	mov	r6, r1
   15e94:	add	r3, pc, r3
   15e98:	str	r3, [sp, #52]	; 0x34
   15e9c:	cmp	sl, r6
   15ea0:	beq	15fe8 <sav_parse_long_variable_names_record+0x68c>
   15ea4:	ldrb	r9, [r6, #1]!
   15ea8:	cmp	r9, #2
   15eac:	beq	15f88 <sav_parse_long_variable_names_record+0x62c>
   15eb0:	cmp	r9, #6
   15eb4:	beq	15f7c <sav_parse_long_variable_names_record+0x620>
   15eb8:	cmp	r9, #0
   15ebc:	ldreq	r8, [sp, #76]	; 0x4c
   15ec0:	bne	15e9c <sav_parse_long_variable_names_record+0x540>
   15ec4:	cmp	r9, r8
   15ec8:	bcs	15efc <sav_parse_long_variable_names_record+0x5a0>
   15ecc:	add	r4, r9, r8
   15ed0:	mov	r0, r7
   15ed4:	lsr	r4, r4, #1
   15ed8:	add	r5, r4, r4, lsl #2
   15edc:	add	r5, fp, r5, lsl #3
   15ee0:	mov	r1, r5
   15ee4:	bl	3e00 <strcmp@plt>
   15ee8:	cmp	r0, #0
   15eec:	movlt	r8, r4
   15ef0:	bge	15fb0 <sav_parse_long_variable_names_record+0x654>
   15ef4:	cmp	r9, r8
   15ef8:	bcc	15ecc <sav_parse_long_variable_names_record+0x570>
   15efc:	ldr	r4, [sp, #72]	; 0x48
   15f00:	ldr	r3, [r4, #24]
   15f04:	cmp	r3, #0
   15f08:	beq	15e9c <sav_parse_long_variable_names_record+0x540>
   15f0c:	ldr	r5, [sp, #28]
   15f10:	ldr	r3, [sp, #20]
   15f14:	ldr	r2, [sp, #52]	; 0x34
   15f18:	sub	r3, r3, #16
   15f1c:	mov	r1, #8192	; 0x2000
   15f20:	mov	r0, r5
   15f24:	bl	4280 <snprintf@plt>
   15f28:	ldr	r3, [r4, #24]
   15f2c:	ldr	r1, [r4, #40]	; 0x28
   15f30:	mov	r0, r5
   15f34:	blx	r3
   15f38:	b	15e9c <sav_parse_long_variable_names_record+0x540>
   15f3c:	cmp	r5, #0
   15f40:	mov	r9, r0
   15f44:	beq	15d5c <sav_parse_long_variable_names_record+0x400>
   15f48:	ldr	r3, [sp, #72]	; 0x48
   15f4c:	ldr	ip, [r5, #36]	; 0x24
   15f50:	ldr	r5, [sp, #36]	; 0x24
   15f54:	ldr	r0, [r3, #44]	; 0x2c
   15f58:	ldr	r3, [sp, #44]	; 0x2c
   15f5c:	mov	r2, r5
   15f60:	ldr	r4, [r0, ip, lsl #2]
   15f64:	sub	r1, r3, #4
   15f68:	add	r0, r4, #196	; 0xc4
   15f6c:	add	r4, r4, r5
   15f70:	bl	3f20 <memcpy@plt>
   15f74:	strb	r9, [r4, #196]	; 0xc4
   15f78:	b	15c0c <sav_parse_long_variable_names_record+0x2b0>
   15f7c:	ldr	r3, [sp, #44]	; 0x2c
   15f80:	str	r3, [sp, #36]	; 0x24
   15f84:	b	15e9c <sav_parse_long_variable_names_record+0x540>
   15f88:	ldr	r4, [sp, #36]	; 0x24
   15f8c:	ldr	r1, [sp, #24]
   15f90:	mov	r2, r4
   15f94:	ldr	r0, [sp, #40]	; 0x28
   15f98:	bl	3f20 <memcpy@plt>
   15f9c:	ldr	r2, [sp, #28]
   15fa0:	add	r3, r2, r4
   15fa4:	mov	r2, #0
   15fa8:	strb	r2, [r3, #-68]	; 0xffffffbc
   15fac:	b	15e9c <sav_parse_long_variable_names_record+0x540>
   15fb0:	beq	15ffc <sav_parse_long_variable_names_record+0x6a0>
   15fb4:	add	r9, r4, #1
   15fb8:	b	15ef4 <sav_parse_long_variable_names_record+0x598>
   15fbc:	ldr	r1, [pc, #156]	; 16060 <sav_parse_long_variable_names_record+0x704>
   15fc0:	mov	r3, #0
   15fc4:	mov	r2, #1
   15fc8:	add	r1, pc, r1
   15fcc:	str	r3, [sp, #36]	; 0x24
   15fd0:	str	r3, [sp, #24]
   15fd4:	str	r2, [sp, #32]
   15fd8:	b	15e5c <sav_parse_long_variable_names_record+0x500>
   15fdc:	mov	r0, #0
   15fe0:	str	r0, [sp, #76]	; 0x4c
   15fe4:	b	159cc <sav_parse_long_variable_names_record+0x70>
   15fe8:	ldr	r3, [sp, #32]
   15fec:	cmp	r3, #0
   15ff0:	bne	15db4 <sav_parse_long_variable_names_record+0x458>
   15ff4:	mov	r4, r3
   15ff8:	b	15e18 <sav_parse_long_variable_names_record+0x4bc>
   15ffc:	cmp	r5, #0
   16000:	str	r0, [sp, #56]	; 0x38
   16004:	beq	15efc <sav_parse_long_variable_names_record+0x5a0>
   16008:	ldr	r3, [sp, #72]	; 0x48
   1600c:	ldr	ip, [r5, #36]	; 0x24
   16010:	ldr	r5, [sp, #36]	; 0x24
   16014:	ldr	r0, [r3, #44]	; 0x2c
   16018:	ldr	r3, [sp, #20]
   1601c:	mov	r2, r5
   16020:	ldr	r4, [r0, ip, lsl #2]
   16024:	sub	r1, r3, #4
   16028:	add	r0, r4, #196	; 0xc4
   1602c:	bl	3f20 <memcpy@plt>
   16030:	add	r4, r4, r5
   16034:	ldr	r3, [sp, #56]	; 0x38
   16038:	strb	r3, [r4, #196]	; 0xc4
   1603c:	b	15e9c <sav_parse_long_variable_names_record+0x540>
   16040:	.word	0xfffffee0
   16044:	.word	0x00010eec
   16048:	.word	0x00010ed8
   1604c:	.word	0x00010eb0
   16050:	.word	0x000114f8
   16054:	.word	0x00011314
   16058:	.word	0x00010b4c
   1605c:	.word	0x00011260
   16060:	.word	0x000109bc

00016064 <sav_parse_very_long_string_record>:
   16064:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16068:	sub	sp, sp, #132	; 0x84
   1606c:	ldr	r7, [r2, #340]	; 0x154
   16070:	str	r2, [sp, #44]	; 0x2c
   16074:	cmp	r7, #0
   16078:	str	r0, [sp, #72]	; 0x48
   1607c:	str	r1, [sp, #80]	; 0x50
   16080:	ldr	r5, [r2, #44]	; 0x2c
   16084:	ble	16568 <sav_parse_very_long_string_record+0x504>
   16088:	mov	r6, #0
   1608c:	add	r7, r5, r7, lsl #2
   16090:	mov	r3, r6
   16094:	cmp	r3, #0
   16098:	add	r1, r3, #187	; 0xbb
   1609c:	ldr	r4, [r5], #4
   160a0:	beq	160b4 <sav_parse_very_long_string_record+0x50>
   160a4:	add	r0, r4, #187	; 0xbb
   160a8:	bl	3e00 <strcmp@plt>
   160ac:	cmp	r0, #0
   160b0:	beq	160b8 <sav_parse_very_long_string_record+0x54>
   160b4:	add	r6, r6, #1
   160b8:	cmp	r5, r7
   160bc:	mov	r3, r4
   160c0:	bne	16094 <sav_parse_very_long_string_record+0x30>
   160c4:	add	r4, r6, r6, lsl #2
   160c8:	ldr	r5, [sp, #80]	; 0x50
   160cc:	lsl	r4, r4, #3
   160d0:	str	r6, [sp, #40]	; 0x28
   160d4:	add	r3, r5, #1024	; 0x400
   160d8:	mov	r0, r3
   160dc:	str	r3, [sp, #84]	; 0x54
   160e0:	bl	422c <readstat_malloc@plt>
   160e4:	str	r0, [sp, #76]	; 0x4c
   160e8:	mov	r0, r4
   160ec:	bl	422c <readstat_malloc@plt>
   160f0:	ldr	r3, [sp, #44]	; 0x2c
   160f4:	ldr	r2, [sp, #72]	; 0x48
   160f8:	ldr	r6, [r3, #340]	; 0x154
   160fc:	add	r3, r2, r5
   16100:	cmp	r6, #0
   16104:	str	r3, [sp, #48]	; 0x30
   16108:	mov	r8, r0
   1610c:	ble	16184 <sav_parse_very_long_string_record+0x120>
   16110:	mov	r9, #0
   16114:	ldr	sl, [sp, #44]	; 0x2c
   16118:	mov	r4, r9
   1611c:	mov	r5, r9
   16120:	ldr	r3, [sl, #44]	; 0x2c
   16124:	add	r1, r4, #187	; 0xbb
   16128:	cmp	r4, #0
   1612c:	ldr	r4, [r3, r5, lsl #2]
   16130:	add	r7, r4, #187	; 0xbb
   16134:	beq	16148 <sav_parse_very_long_string_record+0xe4>
   16138:	mov	r0, r7
   1613c:	bl	3e00 <strcmp@plt>
   16140:	cmp	r0, #0
   16144:	beq	16178 <sav_parse_very_long_string_record+0x114>
   16148:	add	r2, r9, r9, lsl #2
   1614c:	ldr	r0, [r7]
   16150:	ldr	r1, [r7, #4]
   16154:	add	r3, r8, r2, lsl #3
   16158:	str	r0, [r8, r2, lsl #3]
   1615c:	str	r1, [r3, #4]
   16160:	ldrb	r2, [r7, #8]
   16164:	add	r9, r9, #1
   16168:	strb	r2, [r3, #8]
   1616c:	ldr	r2, [r4, #8]
   16170:	str	r2, [r3, #36]	; 0x24
   16174:	ldr	r6, [sl, #340]	; 0x154
   16178:	add	r5, r5, #1
   1617c:	cmp	r5, r6
   16180:	blt	16120 <sav_parse_very_long_string_record+0xbc>
   16184:	ldr	r3, [pc, #1004]	; 16578 <sav_parse_very_long_string_record+0x514>
   16188:	mov	r2, #40	; 0x28
   1618c:	ldr	r1, [sp, #40]	; 0x28
   16190:	add	r3, pc, r3
   16194:	mov	r0, r8
   16198:	bl	443c <qsort@plt>
   1619c:	ldr	r1, [sp, #72]	; 0x48
   161a0:	ldr	r2, [sp, #48]	; 0x30
   161a4:	cmp	r1, r2
   161a8:	beq	16490 <sav_parse_very_long_string_record+0x42c>
   161ac:	ldr	r3, [pc, #968]	; 1657c <sav_parse_very_long_string_record+0x518>
   161b0:	mov	r4, #0
   161b4:	add	r3, pc, r3
   161b8:	add	r2, r3, #1584	; 0x630
   161bc:	str	r3, [sp, #56]	; 0x38
   161c0:	add	r3, r3, #1840	; 0x730
   161c4:	str	r3, [sp, #68]	; 0x44
   161c8:	mov	r3, #1
   161cc:	str	r3, [sp, #36]	; 0x24
   161d0:	ldr	r3, [pc, #936]	; 16580 <sav_parse_very_long_string_record+0x51c>
   161d4:	mov	r5, r4
   161d8:	add	r3, pc, r3
   161dc:	str	r3, [sp, #64]	; 0x40
   161e0:	ldr	r3, [pc, #924]	; 16584 <sav_parse_very_long_string_record+0x520>
   161e4:	mov	lr, r4
   161e8:	add	r2, r2, #4
   161ec:	add	r3, pc, r3
   161f0:	str	r2, [sp, #52]	; 0x34
   161f4:	str	r4, [sp, #32]
   161f8:	str	r4, [sp, #24]
   161fc:	str	r4, [sp, #28]
   16200:	str	r1, [sp, #20]
   16204:	str	r3, [sp, #60]	; 0x3c
   16208:	ldr	r3, [sp, #52]	; 0x34
   1620c:	cmp	r4, #0
   16210:	add	lr, r3, lr
   16214:	mov	r1, r5
   16218:	beq	16264 <sav_parse_very_long_string_record+0x200>
   1621c:	sub	r1, r4, #1
   16220:	adds	r1, lr, r1
   16224:	bcs	1625c <sav_parse_very_long_string_record+0x1f8>
   16228:	ldr	r3, [sp, #20]
   1622c:	mov	r2, lr
   16230:	ldrb	ip, [r3]
   16234:	sub	r3, r1, r2
   16238:	ldrb	r0, [r2, r3, asr #1]
   1623c:	add	r3, r2, r3, asr #1
   16240:	cmp	r0, ip
   16244:	subhi	r1, r3, #1
   16248:	bhi	16254 <sav_parse_very_long_string_record+0x1f0>
   1624c:	bcs	16454 <sav_parse_very_long_string_record+0x3f0>
   16250:	add	r2, r3, #1
   16254:	cmp	r2, r1
   16258:	bls	16234 <sav_parse_very_long_string_record+0x1d0>
   1625c:	add	lr, lr, r4
   16260:	add	r1, r5, r4
   16264:	ldr	r3, [sp, #64]	; 0x40
   16268:	ldr	r2, [sp, #36]	; 0x24
   1626c:	add	r3, r3, r2
   16270:	ldrb	r5, [r3, #1708]	; 0x6ac
   16274:	cmp	r5, #0
   16278:	beq	162d4 <sav_parse_very_long_string_record+0x270>
   1627c:	add	r0, lr, r5, lsl #1
   16280:	sub	r0, r0, #2
   16284:	cmp	lr, r0
   16288:	bhi	162d0 <sav_parse_very_long_string_record+0x26c>
   1628c:	ldr	r3, [sp, #20]
   16290:	mov	r2, lr
   16294:	ldrb	r4, [r3]
   16298:	sub	r3, r0, r2
   1629c:	asr	r3, r3, #1
   162a0:	bic	r3, r3, #1
   162a4:	add	ip, r2, r3
   162a8:	ldrb	r3, [r2, r3]
   162ac:	cmp	r3, r4
   162b0:	subhi	r0, ip, #2
   162b4:	bhi	162c8 <sav_parse_very_long_string_record+0x264>
   162b8:	ldrb	r3, [ip, #1]
   162bc:	add	r2, ip, #2
   162c0:	cmp	r3, r4
   162c4:	bcs	16460 <sav_parse_very_long_string_record+0x3fc>
   162c8:	cmp	r0, r2
   162cc:	bcs	16298 <sav_parse_very_long_string_record+0x234>
   162d0:	add	r1, r1, r5
   162d4:	ldr	r2, [sp, #56]	; 0x38
   162d8:	add	r1, r2, r1
   162dc:	ldrb	r3, [r1, #1724]	; 0x6bc
   162e0:	add	r3, r2, r3
   162e4:	ldrb	r6, [r3, #1824]	; 0x720
   162e8:	ldrb	r3, [r3, #1808]	; 0x710
   162ec:	cmp	r6, #0
   162f0:	str	r3, [sp, #36]	; 0x24
   162f4:	beq	1634c <sav_parse_very_long_string_record+0x2e8>
   162f8:	ldr	r3, [sp, #68]	; 0x44
   162fc:	add	r7, sp, #92	; 0x5c
   16300:	ldrb	r9, [r3, r6]
   16304:	add	r6, r3, r6
   16308:	add	r9, r6, r9
   1630c:	cmp	r9, r6
   16310:	beq	1634c <sav_parse_very_long_string_record+0x2e8>
   16314:	ldrb	r3, [r6, #1]!
   16318:	cmp	r3, #5
   1631c:	addls	pc, pc, r3, lsl #2
   16320:	b	1630c <sav_parse_very_long_string_record+0x2a8>
   16324:	b	163f0 <sav_parse_very_long_string_record+0x38c>
   16328:	b	163c8 <sav_parse_very_long_string_record+0x364>
   1632c:	b	16388 <sav_parse_very_long_string_record+0x324>
   16330:	b	1633c <sav_parse_very_long_string_record+0x2d8>
   16334:	b	16440 <sav_parse_very_long_string_record+0x3dc>
   16338:	b	16434 <sav_parse_very_long_string_record+0x3d0>
   1633c:	ldr	r3, [sp, #20]
   16340:	cmp	r9, r6
   16344:	str	r3, [sp, #24]
   16348:	bne	16314 <sav_parse_very_long_string_record+0x2b0>
   1634c:	ldr	r2, [sp, #36]	; 0x24
   16350:	cmp	r2, #0
   16354:	beq	16494 <sav_parse_very_long_string_record+0x430>
   16358:	ldr	r3, [sp, #20]
   1635c:	ldr	r1, [sp, #48]	; 0x30
   16360:	add	r3, r3, #1
   16364:	cmp	r1, r3
   16368:	str	r3, [sp, #20]
   1636c:	beq	16558 <sav_parse_very_long_string_record+0x4f4>
   16370:	ldr	r1, [sp, #60]	; 0x3c
   16374:	add	r3, r1, r2
   16378:	ldrb	lr, [r3, #1856]	; 0x740
   1637c:	ldrb	r5, [r3, #1872]	; 0x750
   16380:	ldrb	r4, [r3, #1888]	; 0x760
   16384:	b	16208 <sav_parse_very_long_string_record+0x1a4>
   16388:	ldr	r3, [sp, #20]
   1638c:	ldrb	r3, [r3]
   16390:	cmp	r3, #0
   16394:	beq	1630c <sav_parse_very_long_string_record+0x2a8>
   16398:	sub	r3, r3, #48	; 0x30
   1639c:	ldr	r1, [pc, #484]	; 16588 <sav_parse_very_long_string_record+0x524>
   163a0:	uxtb	r3, r3
   163a4:	mvn	r2, r3
   163a8:	umull	r1, r2, r1, r2
   163ac:	ldr	r1, [sp, #28]
   163b0:	cmp	r1, r2, lsr #3
   163b4:	bhi	16524 <sav_parse_very_long_string_record+0x4c0>
   163b8:	add	r2, r1, r1, lsl #2
   163bc:	add	r3, r3, r2, lsl #1
   163c0:	str	r3, [sp, #28]
   163c4:	b	1630c <sav_parse_very_long_string_record+0x2a8>
   163c8:	ldr	r4, [sp, #32]
   163cc:	ldr	r1, [sp, #24]
   163d0:	mov	r2, r4
   163d4:	mov	r0, r7
   163d8:	bl	3f20 <memcpy@plt>
   163dc:	add	r2, sp, #128	; 0x80
   163e0:	add	r3, r2, r4
   163e4:	mov	r2, #0
   163e8:	strb	r2, [r3, #-36]	; 0xffffffdc
   163ec:	b	1630c <sav_parse_very_long_string_record+0x2a8>
   163f0:	ldr	sl, [sp, #40]	; 0x28
   163f4:	mov	fp, #0
   163f8:	cmp	fp, sl
   163fc:	bcs	1630c <sav_parse_very_long_string_record+0x2a8>
   16400:	add	r4, fp, sl
   16404:	mov	r0, r7
   16408:	lsr	r4, r4, #1
   1640c:	add	r5, r4, r4, lsl #2
   16410:	add	r5, r8, r5, lsl #3
   16414:	mov	r1, r5
   16418:	bl	3e00 <strcmp@plt>
   1641c:	cmp	r0, #0
   16420:	movlt	sl, r4
   16424:	blt	163f8 <sav_parse_very_long_string_record+0x394>
   16428:	beq	1646c <sav_parse_very_long_string_record+0x408>
   1642c:	add	fp, r4, #1
   16430:	b	163f8 <sav_parse_very_long_string_record+0x394>
   16434:	mov	r3, #0
   16438:	str	r3, [sp, #28]
   1643c:	b	1630c <sav_parse_very_long_string_record+0x2a8>
   16440:	ldr	r3, [sp, #20]
   16444:	ldr	r2, [sp, #24]
   16448:	sub	r3, r3, r2
   1644c:	str	r3, [sp, #32]
   16450:	b	1630c <sav_parse_very_long_string_record+0x2a8>
   16454:	sub	r3, r3, lr
   16458:	add	r1, r5, r3
   1645c:	b	162d4 <sav_parse_very_long_string_record+0x270>
   16460:	sub	ip, ip, lr
   16464:	add	r1, r1, ip, asr #1
   16468:	b	162d4 <sav_parse_very_long_string_record+0x270>
   1646c:	cmp	r5, #0
   16470:	beq	1630c <sav_parse_very_long_string_record+0x2a8>
   16474:	ldr	r3, [sp, #44]	; 0x2c
   16478:	ldr	r2, [r5, #36]	; 0x24
   1647c:	ldr	r3, [r3, #44]	; 0x2c
   16480:	ldr	r3, [r3, r2, lsl #2]
   16484:	ldr	r2, [sp, #28]
   16488:	str	r2, [r3, #20]
   1648c:	b	1630c <sav_parse_very_long_string_record+0x2a8>
   16490:	str	r1, [sp, #20]
   16494:	ldr	r4, [sp, #44]	; 0x2c
   16498:	ldr	r3, [r4, #24]
   1649c:	cmp	r3, #0
   164a0:	moveq	r4, #5
   164a4:	beq	164fc <sav_parse_very_long_string_record+0x498>
   164a8:	ldr	r2, [sp, #20]
   164ac:	ldr	r1, [sp, #48]	; 0x30
   164b0:	str	r2, [sp, #8]
   164b4:	sub	r3, r1, r2
   164b8:	str	r3, [sp, #4]
   164bc:	mov	r3, r2
   164c0:	ldr	r2, [sp, #80]	; 0x50
   164c4:	ldr	r5, [sp, #76]	; 0x4c
   164c8:	str	r2, [sp]
   164cc:	ldr	r2, [sp, #72]	; 0x48
   164d0:	ldr	r1, [sp, #84]	; 0x54
   164d4:	sub	r3, r3, r2
   164d8:	ldr	r2, [pc, #172]	; 1658c <sav_parse_very_long_string_record+0x528>
   164dc:	mov	r0, r5
   164e0:	add	r2, pc, r2
   164e4:	bl	4280 <snprintf@plt>
   164e8:	ldr	r3, [r4, #24]
   164ec:	ldr	r1, [r4, #40]	; 0x28
   164f0:	mov	r0, r5
   164f4:	blx	r3
   164f8:	mov	r4, #5
   164fc:	mov	r0, r8
   16500:	bl	3ec0 <free@plt>
   16504:	ldr	r3, [sp, #76]	; 0x4c
   16508:	cmp	r3, #0
   1650c:	beq	16518 <sav_parse_very_long_string_record+0x4b4>
   16510:	mov	r0, r3
   16514:	bl	3ec0 <free@plt>
   16518:	mov	r0, r4
   1651c:	add	sp, sp, #132	; 0x84
   16520:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16524:	ldr	r3, [sp, #20]
   16528:	add	r3, r3, #1
   1652c:	str	r3, [sp, #20]
   16530:	ldr	r2, [sp, #20]
   16534:	ldr	r3, [sp, #48]	; 0x30
   16538:	subs	r4, r3, r2
   1653c:	ldr	r3, [sp, #36]	; 0x24
   16540:	movne	r4, #1
   16544:	cmp	r3, #11
   16548:	orrle	r4, r4, #1
   1654c:	cmp	r4, #0
   16550:	beq	164fc <sav_parse_very_long_string_record+0x498>
   16554:	b	16494 <sav_parse_very_long_string_record+0x430>
   16558:	mov	r3, r1
   1655c:	str	r1, [sp, #20]
   16560:	mov	r2, r1
   16564:	b	16538 <sav_parse_very_long_string_record+0x4d4>
   16568:	mov	r4, #0
   1656c:	str	r4, [sp, #40]	; 0x28
   16570:	mov	r5, r1
   16574:	b	160d4 <sav_parse_very_long_string_record+0x70>
   16578:	.word	0xfffff7c0
   1657c:	.word	0x000107d0
   16580:	.word	0x000107ac
   16584:	.word	0x00010798
   16588:	.word	0xcccccccd
   1658c:	.word	0x00010c68

00016590 <sav_parse_time>:
   16590:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16594:	sub	sp, sp, #8192	; 0x2000
   16598:	sub	sp, sp, #36	; 0x24
   1659c:	add	sl, r0, r1
   165a0:	cmp	r0, sl
   165a4:	str	r0, [sp, #24]
   165a8:	str	r1, [sp, #28]
   165ac:	str	r3, [sp, #20]
   165b0:	beq	16824 <sav_parse_time+0x294>
   165b4:	ldr	r3, [pc, #640]	; 1683c <sav_parse_time+0x2ac>
   165b8:	ldr	fp, [pc, #640]	; 16840 <sav_parse_time+0x2b0>
   165bc:	add	r3, pc, r3
   165c0:	str	r3, [sp, #16]
   165c4:	ldr	r3, [pc, #632]	; 16844 <sav_parse_time+0x2b4>
   165c8:	mov	r9, #0
   165cc:	mov	r8, #1
   165d0:	add	r3, pc, r3
   165d4:	add	fp, pc, fp
   165d8:	mov	r7, r8
   165dc:	mov	r4, r9
   165e0:	mov	r6, r0
   165e4:	mov	r5, r9
   165e8:	str	r3, [sp, #12]
   165ec:	add	r3, fp, #16
   165f0:	str	r3, [sp, #8]
   165f4:	cmp	r8, #0
   165f8:	add	r5, r3, r5
   165fc:	mov	r3, r9
   16600:	beq	16648 <sav_parse_time+0xb8>
   16604:	sub	r0, r8, #1
   16608:	adds	r0, r5, r0
   1660c:	bcs	16640 <sav_parse_time+0xb0>
   16610:	ldrb	lr, [r6]
   16614:	mov	r1, r5
   16618:	sub	r3, r0, r1
   1661c:	ldrb	ip, [r1, r3, asr #1]
   16620:	add	r3, r1, r3, asr #1
   16624:	cmp	ip, lr
   16628:	subhi	r0, r3, #1
   1662c:	bhi	16638 <sav_parse_time+0xa8>
   16630:	bcs	16768 <sav_parse_time+0x1d8>
   16634:	add	r1, r3, #1
   16638:	cmp	r0, r1
   1663c:	bcs	16618 <sav_parse_time+0x88>
   16640:	add	r5, r5, r8
   16644:	add	r3, r9, r8
   16648:	ldr	r1, [sp, #16]
   1664c:	add	r7, r1, r7
   16650:	ldrb	r8, [r7, #40]	; 0x28
   16654:	cmp	r8, #0
   16658:	beq	166b0 <sav_parse_time+0x120>
   1665c:	add	ip, r5, r8, lsl #1
   16660:	sub	ip, ip, #2
   16664:	cmp	r5, ip
   16668:	bhi	166ac <sav_parse_time+0x11c>
   1666c:	ldrb	r7, [r6]
   16670:	mov	r0, r5
   16674:	sub	r1, ip, r0
   16678:	asr	r1, r1, #1
   1667c:	bic	r1, r1, #1
   16680:	add	lr, r0, r1
   16684:	ldrb	r1, [r0, r1]
   16688:	cmp	r1, r7
   1668c:	subhi	ip, lr, #2
   16690:	bhi	166a4 <sav_parse_time+0x114>
   16694:	ldrb	r1, [lr, #1]
   16698:	add	r0, lr, #2
   1669c:	cmp	r1, r7
   166a0:	bcs	16774 <sav_parse_time+0x1e4>
   166a4:	cmp	r0, ip
   166a8:	bls	16674 <sav_parse_time+0xe4>
   166ac:	add	r3, r3, r8
   166b0:	add	r3, fp, r3
   166b4:	ldrb	r1, [r3, #84]	; 0x54
   166b8:	ldrb	r7, [r3, #56]	; 0x38
   166bc:	cmp	r1, #0
   166c0:	beq	16708 <sav_parse_time+0x178>
   166c4:	ldrb	r0, [fp, r1]
   166c8:	add	r3, fp, r1
   166cc:	add	r0, r3, r0
   166d0:	cmp	r0, r3
   166d4:	beq	16708 <sav_parse_time+0x178>
   166d8:	ldrb	r1, [r3, #1]!
   166dc:	cmp	r1, #4
   166e0:	addls	pc, pc, r1, lsl #2
   166e4:	b	166d0 <sav_parse_time+0x140>
   166e8:	b	16738 <sav_parse_time+0x1a8>
   166ec:	b	166fc <sav_parse_time+0x16c>
   166f0:	b	1675c <sav_parse_time+0x1cc>
   166f4:	b	16754 <sav_parse_time+0x1c4>
   166f8:	b	1674c <sav_parse_time+0x1bc>
   166fc:	cmp	r0, r3
   16700:	mov	r4, #0
   16704:	bne	166d8 <sav_parse_time+0x148>
   16708:	cmp	r7, #0
   1670c:	beq	167c8 <sav_parse_time+0x238>
   16710:	add	r6, r6, #1
   16714:	cmp	sl, r6
   16718:	beq	16780 <sav_parse_time+0x1f0>
   1671c:	ldr	r3, [sp, #12]
   16720:	add	r3, r3, r7
   16724:	ldrb	r5, [r3, #128]	; 0x80
   16728:	ldrb	r9, [r3, #144]	; 0x90
   1672c:	ldrb	r8, [r3, #160]	; 0xa0
   16730:	ldr	r3, [sp, #8]
   16734:	b	165f4 <sav_parse_time+0x64>
   16738:	ldrb	r1, [r6]
   1673c:	add	r4, r4, r4, lsl #2
   16740:	sub	r1, r1, #48	; 0x30
   16744:	add	r4, r1, r4, lsl #1
   16748:	b	166d0 <sav_parse_time+0x140>
   1674c:	str	r4, [r2, #4]
   16750:	b	166d0 <sav_parse_time+0x140>
   16754:	str	r4, [r2, #8]
   16758:	b	166d0 <sav_parse_time+0x140>
   1675c:	ldrb	r4, [r6]
   16760:	sub	r4, r4, #48	; 0x30
   16764:	b	166d0 <sav_parse_time+0x140>
   16768:	sub	r3, r3, r5
   1676c:	add	r3, r9, r3
   16770:	b	166b0 <sav_parse_time+0x120>
   16774:	sub	r5, lr, r5
   16778:	add	r3, r3, r5, asr #1
   1677c:	b	166b0 <sav_parse_time+0x120>
   16780:	ldr	r1, [pc, #192]	; 16848 <sav_parse_time+0x2b8>
   16784:	cmp	r7, #11
   16788:	add	r1, pc, r1
   1678c:	add	r7, r1, r7
   16790:	movgt	r0, #0
   16794:	ldrb	ip, [r7, #112]	; 0x70
   16798:	movle	r0, #1
   1679c:	add	r3, r1, ip
   167a0:	ldrb	r1, [r1, ip]
   167a4:	add	r1, r3, r1
   167a8:	b	167b8 <sav_parse_time+0x228>
   167ac:	ldrb	ip, [r3, #1]!
   167b0:	cmp	ip, #5
   167b4:	streq	r4, [r2]
   167b8:	cmp	r3, r1
   167bc:	bne	167ac <sav_parse_time+0x21c>
   167c0:	cmp	r0, #0
   167c4:	beq	16818 <sav_parse_time+0x288>
   167c8:	ldr	r3, [sp, #20]
   167cc:	cmp	r3, #0
   167d0:	beq	16814 <sav_parse_time+0x284>
   167d4:	ldr	r0, [sp, #24]
   167d8:	mov	r5, r3
   167dc:	ldr	r2, [pc, #104]	; 1684c <sav_parse_time+0x2bc>
   167e0:	ldr	r3, [sp, #28]
   167e4:	add	r4, sp, #32
   167e8:	str	r0, [sp, #4]
   167ec:	str	r3, [sp]
   167f0:	mov	r1, #8192	; 0x2000
   167f4:	mov	r0, r4
   167f8:	add	r2, pc, r2
   167fc:	bl	4280 <snprintf@plt>
   16800:	add	r3, sp, #8256	; 0x2040
   16804:	add	r3, r3, #8
   16808:	mov	r0, r4
   1680c:	ldr	r1, [r3]
   16810:	blx	r5
   16814:	mov	r0, #29
   16818:	add	sp, sp, #8192	; 0x2000
   1681c:	add	sp, sp, #36	; 0x24
   16820:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16824:	ldr	r3, [pc, #36]	; 16850 <sav_parse_time+0x2c0>
   16828:	mov	r1, #0
   1682c:	add	r3, pc, r3
   16830:	mov	r4, r1
   16834:	mov	r0, #1
   16838:	b	167a4 <sav_parse_time+0x214>
   1683c:	.word	0x00010bbc
   16840:	.word	0x00010ba4
   16844:	.word	0x00010ba8
   16848:	.word	0x000109f0
   1684c:	.word	0x00010ca0
   16850:	.word	0x0001094c

00016854 <sav_parse_date>:
   16854:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16858:	sub	sp, sp, #8192	; 0x2000
   1685c:	sub	sp, sp, #44	; 0x2c
   16860:	add	r9, r0, r1
   16864:	cmp	r0, r9
   16868:	str	r0, [sp, #32]
   1686c:	str	r1, [sp, #36]	; 0x24
   16870:	str	r3, [sp, #28]
   16874:	beq	16bbc <sav_parse_date+0x368>
   16878:	ldr	r1, [pc, #888]	; 16bf8 <sav_parse_date+0x3a4>
   1687c:	ldr	r3, [pc, #888]	; 16bfc <sav_parse_date+0x3a8>
   16880:	add	r1, pc, r1
   16884:	add	r3, pc, r3
   16888:	mov	r8, #0
   1688c:	mov	r7, #1
   16890:	str	r1, [sp, #20]
   16894:	ldr	r1, [pc, #868]	; 16c00 <sav_parse_date+0x3ac>
   16898:	mov	sl, r3
   1689c:	mov	r5, r7
   168a0:	add	r3, r3, #212	; 0xd4
   168a4:	mov	fp, r8
   168a8:	mov	r6, r0
   168ac:	mov	r4, r8
   168b0:	add	r1, pc, r1
   168b4:	str	r3, [sp, #12]
   168b8:	add	r3, sl, #176	; 0xb0
   168bc:	str	r1, [sp, #16]
   168c0:	str	r3, [sp, #24]
   168c4:	ldr	r3, [sp, #12]
   168c8:	cmp	r7, #0
   168cc:	add	r4, r3, r4
   168d0:	mov	r3, r8
   168d4:	beq	1691c <sav_parse_date+0xc8>
   168d8:	sub	r0, r7, #1
   168dc:	adds	r0, r4, r0
   168e0:	bcs	16914 <sav_parse_date+0xc0>
   168e4:	ldrb	lr, [r6]
   168e8:	mov	r1, r4
   168ec:	sub	r3, r0, r1
   168f0:	ldrb	ip, [r1, r3, asr #1]
   168f4:	add	r3, r1, r3, asr #1
   168f8:	cmp	ip, lr
   168fc:	subhi	r0, r3, #1
   16900:	bhi	1690c <sav_parse_date+0xb8>
   16904:	bcs	16af4 <sav_parse_date+0x2a0>
   16908:	add	r1, r3, #1
   1690c:	cmp	r0, r1
   16910:	bcs	168ec <sav_parse_date+0x98>
   16914:	add	r4, r4, r7
   16918:	add	r3, r8, r7
   1691c:	ldr	r1, [sp, #20]
   16920:	add	r5, r1, r5
   16924:	ldrb	r7, [r5, #304]	; 0x130
   16928:	cmp	r7, #0
   1692c:	beq	16984 <sav_parse_date+0x130>
   16930:	add	ip, r4, r7, lsl #1
   16934:	sub	ip, ip, #2
   16938:	cmp	r4, ip
   1693c:	bhi	16980 <sav_parse_date+0x12c>
   16940:	ldrb	r5, [r6]
   16944:	mov	r0, r4
   16948:	sub	r1, ip, r0
   1694c:	asr	r1, r1, #1
   16950:	bic	r1, r1, #1
   16954:	add	lr, r0, r1
   16958:	ldrb	r1, [r0, r1]
   1695c:	cmp	r1, r5
   16960:	subhi	ip, lr, #2
   16964:	bhi	16978 <sav_parse_date+0x124>
   16968:	ldrb	r1, [lr, #1]
   1696c:	add	r0, lr, #2
   16970:	cmp	r1, r5
   16974:	bcs	16b00 <sav_parse_date+0x2ac>
   16978:	cmp	r0, ip
   1697c:	bls	16948 <sav_parse_date+0xf4>
   16980:	add	r3, r3, r7
   16984:	add	r3, sl, r3
   16988:	ldrb	r1, [r3, #352]	; 0x160
   1698c:	add	r1, sl, r1
   16990:	ldrb	r3, [r1, #548]	; 0x224
   16994:	ldrb	r5, [r1, #488]	; 0x1e8
   16998:	cmp	r3, #0
   1699c:	beq	16a28 <sav_parse_date+0x1d4>
   169a0:	ldr	r1, [sp, #24]
   169a4:	mov	r8, #5
   169a8:	mov	r7, #4
   169ac:	ldrb	r0, [r1, r3]
   169b0:	add	r3, r1, r3
   169b4:	mov	r4, #3
   169b8:	add	r0, r3, r0
   169bc:	mov	lr, #2
   169c0:	mov	ip, #1
   169c4:	cmp	r0, r3
   169c8:	beq	16a28 <sav_parse_date+0x1d4>
   169cc:	ldrb	r1, [r3, #1]!
   169d0:	cmp	r1, #15
   169d4:	addls	pc, pc, r1, lsl #2
   169d8:	b	169c4 <sav_parse_date+0x170>
   169dc:	b	16a54 <sav_parse_date+0x200>
   169e0:	b	169c4 <sav_parse_date+0x170>
   169e4:	b	16a1c <sav_parse_date+0x1c8>
   169e8:	b	16aec <sav_parse_date+0x298>
   169ec:	b	16ae0 <sav_parse_date+0x28c>
   169f0:	b	16ad8 <sav_parse_date+0x284>
   169f4:	b	16ad0 <sav_parse_date+0x27c>
   169f8:	b	16ac8 <sav_parse_date+0x274>
   169fc:	b	16ac0 <sav_parse_date+0x26c>
   16a00:	b	16ab8 <sav_parse_date+0x264>
   16a04:	b	16aac <sav_parse_date+0x258>
   16a08:	b	16aa0 <sav_parse_date+0x24c>
   16a0c:	b	16a94 <sav_parse_date+0x240>
   16a10:	b	16a88 <sav_parse_date+0x234>
   16a14:	b	16a7c <sav_parse_date+0x228>
   16a18:	b	16a70 <sav_parse_date+0x21c>
   16a1c:	cmp	r0, r3
   16a20:	mov	fp, #0
   16a24:	bne	169cc <sav_parse_date+0x178>
   16a28:	cmp	r5, #0
   16a2c:	beq	16b60 <sav_parse_date+0x30c>
   16a30:	add	r6, r6, #1
   16a34:	cmp	r9, r6
   16a38:	beq	16b0c <sav_parse_date+0x2b8>
   16a3c:	ldr	r3, [sp, #16]
   16a40:	add	r3, r3, r5
   16a44:	ldrb	r4, [r3, #656]	; 0x290
   16a48:	ldrb	r8, [r3, #704]	; 0x2c0
   16a4c:	ldrb	r7, [r3, #752]	; 0x2f0
   16a50:	b	168c4 <sav_parse_date+0x70>
   16a54:	ldrb	r1, [r6]
   16a58:	sub	r1, r1, #48	; 0x30
   16a5c:	uxtb	r1, r1
   16a60:	cmp	r1, #9
   16a64:	addls	fp, fp, fp, lsl #2
   16a68:	addls	fp, r1, fp, lsl #1
   16a6c:	b	169c4 <sav_parse_date+0x170>
   16a70:	mov	r1, #11
   16a74:	str	r1, [r2, #16]
   16a78:	b	169c4 <sav_parse_date+0x170>
   16a7c:	mov	r1, #10
   16a80:	str	r1, [r2, #16]
   16a84:	b	169c4 <sav_parse_date+0x170>
   16a88:	mov	r1, #9
   16a8c:	str	r1, [r2, #16]
   16a90:	b	169c4 <sav_parse_date+0x170>
   16a94:	mov	r1, #8
   16a98:	str	r1, [r2, #16]
   16a9c:	b	169c4 <sav_parse_date+0x170>
   16aa0:	mov	r1, #7
   16aa4:	str	r1, [r2, #16]
   16aa8:	b	169c4 <sav_parse_date+0x170>
   16aac:	mov	r1, #6
   16ab0:	str	r1, [r2, #16]
   16ab4:	b	169c4 <sav_parse_date+0x170>
   16ab8:	str	r8, [r2, #16]
   16abc:	b	169c4 <sav_parse_date+0x170>
   16ac0:	str	r7, [r2, #16]
   16ac4:	b	169c4 <sav_parse_date+0x170>
   16ac8:	str	r4, [r2, #16]
   16acc:	b	169c4 <sav_parse_date+0x170>
   16ad0:	str	lr, [r2, #16]
   16ad4:	b	169c4 <sav_parse_date+0x170>
   16ad8:	str	ip, [r2, #16]
   16adc:	b	169c4 <sav_parse_date+0x170>
   16ae0:	mov	r1, #0
   16ae4:	str	r1, [r2, #16]
   16ae8:	b	169c4 <sav_parse_date+0x170>
   16aec:	str	fp, [r2, #12]
   16af0:	b	169c4 <sav_parse_date+0x170>
   16af4:	sub	r3, r3, r4
   16af8:	add	r3, r8, r3
   16afc:	b	16984 <sav_parse_date+0x130>
   16b00:	sub	r4, lr, r4
   16b04:	add	r3, r3, r4, asr #1
   16b08:	b	16984 <sav_parse_date+0x130>
   16b0c:	ldr	r1, [pc, #240]	; 16c04 <sav_parse_date+0x3b0>
   16b10:	cmp	r5, #46	; 0x2e
   16b14:	add	r1, pc, r1
   16b18:	add	r5, r1, r5
   16b1c:	add	r1, r1, #176	; 0xb0
   16b20:	ldrb	ip, [r5, #608]	; 0x260
   16b24:	movgt	r0, #0
   16b28:	movle	r0, #1
   16b2c:	add	r3, r1, ip
   16b30:	ldrb	r1, [r1, ip]
   16b34:	cmp	fp, #69	; 0x45
   16b38:	addgt	r1, r3, r1
   16b3c:	bgt	16b50 <sav_parse_date+0x2fc>
   16b40:	b	16bd4 <sav_parse_date+0x380>
   16b44:	ldrb	ip, [r3, #1]!
   16b48:	cmp	ip, #1
   16b4c:	streq	fp, [r2, #20]
   16b50:	cmp	r1, r3
   16b54:	bne	16b44 <sav_parse_date+0x2f0>
   16b58:	cmp	r0, #0
   16b5c:	beq	16bb0 <sav_parse_date+0x35c>
   16b60:	ldr	r3, [sp, #28]
   16b64:	cmp	r3, #0
   16b68:	beq	16bac <sav_parse_date+0x358>
   16b6c:	ldr	r0, [sp, #32]
   16b70:	mov	r5, r3
   16b74:	ldr	r2, [pc, #140]	; 16c08 <sav_parse_date+0x3b4>
   16b78:	ldr	r3, [sp, #36]	; 0x24
   16b7c:	add	r4, sp, #40	; 0x28
   16b80:	str	r0, [sp, #4]
   16b84:	str	r3, [sp]
   16b88:	mov	r1, #8192	; 0x2000
   16b8c:	mov	r0, r4
   16b90:	add	r2, pc, r2
   16b94:	bl	4280 <snprintf@plt>
   16b98:	add	r3, sp, #8256	; 0x2040
   16b9c:	add	r3, r3, #16
   16ba0:	mov	r0, r4
   16ba4:	ldr	r1, [r3]
   16ba8:	blx	r5
   16bac:	mov	r0, #29
   16bb0:	add	sp, sp, #8192	; 0x2000
   16bb4:	add	sp, sp, #44	; 0x2c
   16bb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16bbc:	ldr	r3, [pc, #72]	; 16c0c <sav_parse_date+0x3b8>
   16bc0:	mov	r1, #0
   16bc4:	add	r3, pc, r3
   16bc8:	add	r3, r3, #176	; 0xb0
   16bcc:	mov	fp, r1
   16bd0:	mov	r0, #1
   16bd4:	add	r1, r3, r1
   16bd8:	add	fp, fp, #100	; 0x64
   16bdc:	b	16bec <sav_parse_date+0x398>
   16be0:	ldrb	ip, [r3, #1]!
   16be4:	cmp	ip, #1
   16be8:	streq	fp, [r2, #20]
   16bec:	cmp	r1, r3
   16bf0:	bne	16be0 <sav_parse_date+0x38c>
   16bf4:	b	16b58 <sav_parse_date+0x304>
   16bf8:	.word	0x000108f8
   16bfc:	.word	0x000108f4
   16c00:	.word	0x000108c8
   16c04:	.word	0x00010664
   16c08:	.word	0x00010930
   16c0c:	.word	0x000105b4

00016c10 <sav_process_row>:
   16c10:	ldr	r3, [r2, #360]	; 0x168
   16c14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16c18:	sub	sp, sp, #92	; 0x5c
   16c1c:	cmp	r3, #0
   16c20:	str	r3, [sp, #36]	; 0x24
   16c24:	bne	16e00 <sav_process_row+0x1f0>
   16c28:	cmp	r1, #0
   16c2c:	str	r1, [sp, #32]
   16c30:	mov	r5, r2
   16c34:	beq	16d64 <sav_process_row+0x154>
   16c38:	ldr	r3, [r2, #340]	; 0x154
   16c3c:	cmp	r3, #0
   16c40:	ble	16d64 <sav_process_row+0x154>
   16c44:	ldr	r3, [sp, #36]	; 0x24
   16c48:	str	r0, [sp, #20]
   16c4c:	str	r3, [sp, #28]
   16c50:	mov	r7, r3
   16c54:	mov	r8, r3
   16c58:	mov	r9, r3
   16c5c:	mov	r6, r3
   16c60:	str	r3, [sp, #24]
   16c64:	mov	fp, r3
   16c68:	add	r3, sp, #64	; 0x40
   16c6c:	str	r3, [sp, #56]	; 0x38
   16c70:	add	r3, r5, #400	; 0x190
   16c74:	str	r3, [sp, #40]	; 0x28
   16c78:	add	r3, r5, #416	; 0x1a0
   16c7c:	str	r3, [sp, #60]	; 0x3c
   16c80:	add	r3, sp, #80	; 0x50
   16c84:	add	sl, sp, #72	; 0x48
   16c88:	str	r3, [sp, #44]	; 0x2c
   16c8c:	b	16cf8 <sav_process_row+0xe8>
   16c90:	ldr	r3, [sp, #24]
   16c94:	ldr	r1, [r5, #380]	; 0x17c
   16c98:	add	r3, r3, #8
   16c9c:	cmp	r3, r1
   16ca0:	bls	16d7c <sav_process_row+0x16c>
   16ca4:	ldr	r3, [r2, #16]
   16ca8:	add	r7, r7, #1
   16cac:	cmp	r7, r3
   16cb0:	ldr	r3, [r4, #48]	; 0x30
   16cb4:	beq	16dd8 <sav_process_row+0x1c8>
   16cb8:	ldr	r2, [sp, #28]
   16cbc:	cmp	r2, r3
   16cc0:	beq	16da4 <sav_process_row+0x194>
   16cc4:	ldr	r3, [sp, #32]
   16cc8:	add	r6, r6, #8
   16ccc:	cmp	r3, r6
   16cd0:	bls	16d64 <sav_process_row+0x154>
   16cd4:	cmp	r8, r9
   16cd8:	ldr	r2, [r5, #340]	; 0x154
   16cdc:	movge	r3, r8
   16ce0:	movlt	r3, r9
   16ce4:	cmp	r2, r3
   16ce8:	ldr	r3, [sp, #20]
   16cec:	add	r3, r3, #8
   16cf0:	str	r3, [sp, #20]
   16cf4:	ble	16d64 <sav_process_row+0x154>
   16cf8:	ldr	r2, [r5, #44]	; 0x2c
   16cfc:	cmp	r7, #31
   16d00:	str	fp, [sl]
   16d04:	ldr	r4, [r2, r8, lsl #2]
   16d08:	str	fp, [sl, #4]
   16d0c:	str	fp, [sl, #12]
   16d10:	ldr	r3, [r4]
   16d14:	ldr	r2, [r2, r9, lsl #2]
   16d18:	str	r3, [sp, #80]	; 0x50
   16d1c:	bgt	16f64 <sav_process_row+0x354>
   16d20:	cmp	r3, #0
   16d24:	beq	16c90 <sav_process_row+0x80>
   16d28:	cmp	r3, #5
   16d2c:	bne	16cc4 <sav_process_row+0xb4>
   16d30:	ldr	r3, [r5, #52]	; 0x34
   16d34:	ldr	r2, [r4, #8]
   16d38:	ldr	ip, [r3, r2, lsl #2]
   16d3c:	ldr	r3, [ip, #2144]	; 0x860
   16d40:	cmp	r3, #0
   16d44:	beq	16e8c <sav_process_row+0x27c>
   16d48:	ldr	r3, [r4, #48]	; 0x30
   16d4c:	add	r6, r6, #8
   16d50:	add	r8, r8, r3
   16d54:	ldr	r3, [sp, #32]
   16d58:	add	r9, r9, #1
   16d5c:	cmp	r3, r6
   16d60:	bhi	16cd4 <sav_process_row+0xc4>
   16d64:	ldr	r3, [r5, #364]	; 0x16c
   16d68:	mov	r0, #0
   16d6c:	add	r3, r3, #1
   16d70:	str	r3, [r5, #364]	; 0x16c
   16d74:	add	sp, sp, #92	; 0x5c
   16d78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16d7c:	ldr	r0, [sp, #20]
   16d80:	ldr	r1, [r5, #376]	; 0x178
   16d84:	ldr	lr, [sp, #24]
   16d88:	ldr	ip, [r0]
   16d8c:	ldr	r0, [r0, #4]
   16d90:	str	ip, [r1, lr]
   16d94:	add	r1, r1, lr
   16d98:	str	r3, [sp, #24]
   16d9c:	str	r0, [r1, #4]
   16da0:	b	16ca4 <sav_process_row+0x94>
   16da4:	ldr	r2, [r4, #8]
   16da8:	ldr	r3, [r5, #52]	; 0x34
   16dac:	ldr	r3, [r3, r2, lsl #2]
   16db0:	ldr	r3, [r3, #2144]	; 0x860
   16db4:	cmp	r3, #0
   16db8:	beq	16e14 <sav_process_row+0x204>
   16dbc:	ldr	r3, [sp, #28]
   16dc0:	add	r8, r8, r3
   16dc4:	mov	r3, #0
   16dc8:	str	r3, [sp, #24]
   16dcc:	ldr	r3, [sp, #36]	; 0x24
   16dd0:	str	r3, [sp, #28]
   16dd4:	b	16cc4 <sav_process_row+0xb4>
   16dd8:	ldr	r2, [sp, #28]
   16ddc:	add	r9, r9, #1
   16de0:	add	r2, r2, #1
   16de4:	cmp	r2, r3
   16de8:	str	r2, [sp, #28]
   16dec:	ldrlt	r2, [sp, #24]
   16df0:	ldr	r7, [sp, #36]	; 0x24
   16df4:	sublt	r2, r2, #1
   16df8:	strlt	r2, [sp, #24]
   16dfc:	b	16cb8 <sav_process_row+0xa8>
   16e00:	sub	r3, r3, #1
   16e04:	mov	r0, #0
   16e08:	str	r3, [r2, #360]	; 0x168
   16e0c:	add	sp, sp, #92	; 0x5c
   16e10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16e14:	ldr	ip, [r5, #336]	; 0x150
   16e18:	ldr	r2, [r5, #376]	; 0x178
   16e1c:	ldr	r1, [r5, #388]	; 0x184
   16e20:	ldr	r0, [r5, #384]	; 0x180
   16e24:	ldr	r3, [sp, #24]
   16e28:	str	ip, [sp]
   16e2c:	bl	4238 <readstat_convert@plt>
   16e30:	cmp	r0, #0
   16e34:	bne	16d74 <sav_process_row+0x164>
   16e38:	ldr	r2, [sp, #44]	; 0x2c
   16e3c:	ldr	ip, [r4, #8]
   16e40:	ldr	r3, [r5, #52]	; 0x34
   16e44:	ldm	r2, {r0, r1}
   16e48:	ldr	lr, [r5, #364]	; 0x16c
   16e4c:	ldr	r3, [r3, ip, lsl #2]
   16e50:	ldr	r2, [r5, #384]	; 0x180
   16e54:	ldr	ip, [r5, #40]	; 0x28
   16e58:	str	r2, [sp, #72]	; 0x48
   16e5c:	stm	sp, {r0, r1}
   16e60:	mov	r1, r3
   16e64:	mov	r0, lr
   16e68:	ldm	sl, {r2, r3}
   16e6c:	str	ip, [sp, #8]
   16e70:	ldr	ip, [r5, #16]
   16e74:	blx	ip
   16e78:	cmp	r0, #0
   16e7c:	bne	16f5c <sav_process_row+0x34c>
   16e80:	ldr	r3, [r4, #48]	; 0x30
   16e84:	str	r3, [sp, #28]
   16e88:	b	16dbc <sav_process_row+0x1ac>
   16e8c:	ldr	r3, [sp, #20]
   16e90:	ldrb	r2, [r5, #436]	; 0x1b4
   16e94:	ldr	r0, [r3]
   16e98:	ldr	r1, [r3, #4]
   16e9c:	ldr	r3, [sp, #56]	; 0x38
   16ea0:	tst	r2, #1
   16ea4:	stmia	r3!, {r0, r1}
   16ea8:	bne	16f70 <sav_process_row+0x360>
   16eac:	vldr	d7, [sp, #64]	; 0x40
   16eb0:	vstr	d7, [sp, #48]	; 0x30
   16eb4:	ldr	r3, [sp, #40]	; 0x28
   16eb8:	ldrd	r0, [sp, #48]	; 0x30
   16ebc:	vstr	d7, [sp, #72]	; 0x48
   16ec0:	ldrd	r2, [r3, #-8]
   16ec4:	vldr	d7, [sp, #48]	; 0x30
   16ec8:	cmp	r1, r3
   16ecc:	cmpeq	r0, r2
   16ed0:	vcmp.f64	d7, d7
   16ed4:	ldrbeq	r3, [sp, #85]	; 0x55
   16ed8:	orreq	r3, r3, #1
   16edc:	strbeq	r3, [sp, #85]	; 0x55
   16ee0:	ldr	r3, [sp, #40]	; 0x28
   16ee4:	ldrd	r2, [r3]
   16ee8:	cmp	r1, r3
   16eec:	cmpeq	r0, r2
   16ef0:	ldrbeq	r3, [sp, #85]	; 0x55
   16ef4:	orreq	r3, r3, #1
   16ef8:	strbeq	r3, [sp, #85]	; 0x55
   16efc:	ldr	r3, [sp, #60]	; 0x3c
   16f00:	ldrd	r2, [r3, #-8]
   16f04:	cmp	r1, r3
   16f08:	cmpeq	r0, r2
   16f0c:	ldr	r2, [r5, #40]	; 0x28
   16f10:	ldrbeq	r3, [sp, #85]	; 0x55
   16f14:	orreq	r3, r3, #1
   16f18:	strbeq	r3, [sp, #85]	; 0x55
   16f1c:	vmrs	APSR_nzcv, fpscr
   16f20:	ldrbvs	r3, [sp, #85]	; 0x55
   16f24:	orrvs	r3, r3, #1
   16f28:	strbvs	r3, [sp, #85]	; 0x55
   16f2c:	ldr	r3, [sp, #44]	; 0x2c
   16f30:	ldm	r3, {r0, r1}
   16f34:	ldr	r3, [r5, #364]	; 0x16c
   16f38:	str	r2, [sp, #8]
   16f3c:	stm	sp, {r0, r1}
   16f40:	mov	r1, ip
   16f44:	mov	r0, r3
   16f48:	ldr	ip, [r5, #16]
   16f4c:	ldm	sl, {r2, r3}
   16f50:	blx	ip
   16f54:	cmp	r0, #0
   16f58:	beq	16d48 <sav_process_row+0x138>
   16f5c:	mov	r0, #4
   16f60:	b	16d74 <sav_process_row+0x164>
   16f64:	mov	r0, #5
   16f68:	add	sp, sp, #92	; 0x5c
   16f6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16f70:	vldr	d0, [sp, #64]	; 0x40
   16f74:	bl	4508 <byteswap_double@plt>
   16f78:	ldr	r2, [r4, #8]
   16f7c:	ldr	r3, [r5, #52]	; 0x34
   16f80:	ldr	ip, [r3, r2, lsl #2]
   16f84:	vstr	d0, [sp, #48]	; 0x30
   16f88:	vstr	d0, [sp, #64]	; 0x40
   16f8c:	vmov.f64	d7, d0
   16f90:	b	16eb4 <sav_process_row+0x2a4>

00016f94 <sav_parse_records_pass1>:
   16f94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16f98:	sub	sp, sp, #5120	; 0x1400
   16f9c:	ldr	r3, [pc, #1288]	; 174ac <sav_parse_records_pass1+0x518>
   16fa0:	sub	sp, sp, #44	; 0x2c
   16fa4:	add	r3, pc, r3
   16fa8:	str	r3, [sp, #8]
   16fac:	ldr	r3, [pc, #1276]	; 174b0 <sav_parse_records_pass1+0x51c>
   16fb0:	add	sl, sp, #40	; 0x28
   16fb4:	add	r3, pc, r3
   16fb8:	add	r5, sp, #1056	; 0x420
   16fbc:	ldr	r6, [r0, #36]	; 0x24
   16fc0:	str	r3, [sp, #12]
   16fc4:	mov	r7, r0
   16fc8:	sub	r3, sl, #12
   16fcc:	mov	fp, #4
   16fd0:	add	r5, r5, #8
   16fd4:	mov	r8, #1
   16fd8:	str	r3, [sp, #4]
   16fdc:	add	r3, sp, #20
   16fe0:	str	r3, [sp]
   16fe4:	ldr	r3, [r6, #12]
   16fe8:	ldr	r2, [r6, #20]
   16fec:	mov	r1, fp
   16ff0:	ldr	r0, [sp]
   16ff4:	blx	r3
   16ff8:	cmp	r0, #3
   16ffc:	bls	1704c <sav_parse_records_pass1+0xb8>
   17000:	ldrb	r3, [r7, #436]	; 0x1b4
   17004:	tst	r3, #1
   17008:	bne	17084 <sav_parse_records_pass1+0xf0>
   1700c:	ldr	r4, [r5, #-1044]	; 0xfffffbec
   17010:	cmp	r4, #6
   17014:	beq	1709c <sav_parse_records_pass1+0x108>
   17018:	bhi	1705c <sav_parse_records_pass1+0xc8>
   1701c:	cmp	r4, #2
   17020:	beq	1716c <sav_parse_records_pass1+0x1d8>
   17024:	cmp	r4, #3
   17028:	bne	17074 <sav_parse_records_pass1+0xe0>
   1702c:	ldr	r4, [r7, #36]	; 0x24
   17030:	mov	r1, fp
   17034:	sub	r0, sl, #16
   17038:	ldr	r3, [r4, #12]
   1703c:	ldr	r2, [r4, #20]
   17040:	blx	r3
   17044:	cmp	r0, #3
   17048:	bhi	17258 <sav_parse_records_pass1+0x2c4>
   1704c:	mov	r0, #2
   17050:	add	sp, sp, #5120	; 0x1400
   17054:	add	sp, sp, #44	; 0x2c
   17058:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1705c:	cmp	r4, #7
   17060:	beq	170f4 <sav_parse_records_pass1+0x160>
   17064:	ldr	r3, [pc, #1096]	; 174b4 <sav_parse_records_pass1+0x520>
   17068:	cmp	r4, r3
   1706c:	moveq	r0, #0
   17070:	beq	17050 <sav_parse_records_pass1+0xbc>
   17074:	mov	r0, #5
   17078:	add	sp, sp, #5120	; 0x1400
   1707c:	add	sp, sp, #44	; 0x2c
   17080:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17084:	ldr	r0, [r5, #-1044]	; 0xfffffbec
   17088:	bl	3d94 <byteswap4@plt>
   1708c:	mov	r4, r0
   17090:	cmp	r4, #6
   17094:	str	r0, [r5, #-1044]	; 0xfffffbec
   17098:	bne	17018 <sav_parse_records_pass1+0x84>
   1709c:	ldr	r4, [r7, #36]	; 0x24
   170a0:	mov	r1, fp
   170a4:	mov	r0, sl
   170a8:	ldr	r3, [r4, #12]
   170ac:	ldr	r2, [r4, #20]
   170b0:	blx	r3
   170b4:	cmp	r0, #3
   170b8:	bls	1704c <sav_parse_records_pass1+0xb8>
   170bc:	ldrb	r3, [r7, #436]	; 0x1b4
   170c0:	ldr	r0, [r5, #-1024]	; 0xfffffc00
   170c4:	tst	r3, #1
   170c8:	bne	172f4 <sav_parse_records_pass1+0x360>
   170cc:	add	r0, r0, r0, lsl #2
   170d0:	ldr	r3, [r4, #8]
   170d4:	lsl	r0, r0, #4
   170d8:	ldr	r2, [r4, #20]
   170dc:	mov	r1, r8
   170e0:	blx	r3
   170e4:	cmn	r0, #1
   170e8:	bne	16fe4 <sav_parse_records_pass1+0x50>
   170ec:	mov	r0, #15
   170f0:	b	17050 <sav_parse_records_pass1+0xbc>
   170f4:	ldr	r3, [r6, #12]
   170f8:	ldr	r2, [r6, #20]
   170fc:	mov	r1, #12
   17100:	ldr	r0, [sp, #4]
   17104:	blx	r3
   17108:	cmp	r0, #11
   1710c:	bls	1704c <sav_parse_records_pass1+0xb8>
   17110:	ldrb	r3, [r7, #436]	; 0x1b4
   17114:	tst	r3, #1
   17118:	beq	17134 <sav_parse_records_pass1+0x1a0>
   1711c:	ldr	r4, [sp, #4]
   17120:	ldr	r0, [r4]
   17124:	bl	3d94 <byteswap4@plt>
   17128:	str	r0, [r4], #4
   1712c:	cmp	sl, r4
   17130:	bne	17120 <sav_parse_records_pass1+0x18c>
   17134:	ldr	r3, [r5, #-1032]	; 0xfffffbf8
   17138:	ldr	r4, [r5, #-1028]	; 0xfffffbfc
   1713c:	ldr	r2, [r5, #-1036]	; 0xfffffbf4
   17140:	cmp	r2, #3
   17144:	mul	r4, r4, r3
   17148:	beq	171d8 <sav_parse_records_pass1+0x244>
   1714c:	mov	r0, r4
   17150:	ldr	r3, [r6, #8]
   17154:	ldr	r2, [r6, #20]
   17158:	mov	r1, r8
   1715c:	blx	r3
   17160:	cmn	r0, #1
   17164:	bne	16fe4 <sav_parse_records_pass1+0x50>
   17168:	b	170ec <sav_parse_records_pass1+0x158>
   1716c:	ldr	r9, [r7, #36]	; 0x24
   17170:	mov	r1, #28
   17174:	mov	r0, sl
   17178:	ldr	r3, [r9, #12]
   1717c:	ldr	r2, [r9, #20]
   17180:	blx	r3
   17184:	cmp	r0, #27
   17188:	bls	1704c <sav_parse_records_pass1+0xb8>
   1718c:	ldr	r3, [r5, #-1020]	; 0xfffffc04
   17190:	cmp	r3, #0
   17194:	bne	17300 <sav_parse_records_pass1+0x36c>
   17198:	ldr	r0, [r5, #-1016]	; 0xfffffc08
   1719c:	cmp	r0, #0
   171a0:	beq	16fe4 <sav_parse_records_pass1+0x50>
   171a4:	ldrb	r3, [r7, #436]	; 0x1b4
   171a8:	tst	r3, #1
   171ac:	bne	173e0 <sav_parse_records_pass1+0x44c>
   171b0:	cmp	r0, #0
   171b4:	rsblt	r0, r0, #0
   171b8:	ldr	r3, [r9, #8]
   171bc:	lsl	r0, r0, #3
   171c0:	ldr	r2, [r9, #20]
   171c4:	mov	r1, r8
   171c8:	blx	r3
   171cc:	cmn	r0, #1
   171d0:	bne	16fe4 <sav_parse_records_pass1+0x50>
   171d4:	b	170ec <sav_parse_records_pass1+0x158>
   171d8:	cmp	r4, #4096	; 0x1000
   171dc:	bhi	17074 <sav_parse_records_pass1+0xe0>
   171e0:	ldr	r3, [r6, #12]
   171e4:	ldr	r2, [r6, #20]
   171e8:	mov	r1, r4
   171ec:	mov	r0, r5
   171f0:	blx	r3
   171f4:	cmp	r4, r0
   171f8:	bhi	17074 <sav_parse_records_pass1+0xe0>
   171fc:	cmp	r4, #32
   17200:	bne	17074 <sav_parse_records_pass1+0xe0>
   17204:	ldrb	r3, [r7, #436]	; 0x1b4
   17208:	ldr	r4, [r7, #60]	; 0x3c
   1720c:	ldr	r0, [r5, #28]
   17210:	tst	r3, #1
   17214:	bne	173f0 <sav_parse_records_pass1+0x45c>
   17218:	ldr	r1, [r7, #56]	; 0x38
   1721c:	cmp	r1, #0
   17220:	beq	17404 <sav_parse_records_pass1+0x470>
   17224:	cmp	r4, #0
   17228:	beq	16fe4 <sav_parse_records_pass1+0x50>
   1722c:	mov	r0, r4
   17230:	bl	4130 <iconv_open@plt>
   17234:	cmn	r0, #1
   17238:	mov	r4, r0
   1723c:	beq	17450 <sav_parse_records_pass1+0x4bc>
   17240:	ldr	r0, [r7, #336]	; 0x150
   17244:	cmp	r0, #0
   17248:	beq	17250 <sav_parse_records_pass1+0x2bc>
   1724c:	bl	3dd0 <iconv_close@plt>
   17250:	str	r4, [r7, #336]	; 0x150
   17254:	b	16fe4 <sav_parse_records_pass1+0x50>
   17258:	ldrb	r3, [r7, #436]	; 0x1b4
   1725c:	ldr	r0, [r5, #-1040]	; 0xfffffbf0
   17260:	tst	r3, #1
   17264:	bne	17354 <sav_parse_records_pass1+0x3c0>
   17268:	cmp	r0, #0
   1726c:	beq	17360 <sav_parse_records_pass1+0x3cc>
   17270:	mov	r9, #0
   17274:	b	172c0 <sav_parse_records_pass1+0x32c>
   17278:	ldr	r3, [r4, #12]
   1727c:	ldr	r2, [r4, #20]
   17280:	blx	r3
   17284:	mov	r1, r8
   17288:	cmp	r0, #0
   1728c:	ble	1704c <sav_parse_records_pass1+0xb8>
   17290:	ldrb	r0, [r5, #-1024]	; 0xfffffc00
   17294:	ldr	r3, [r4, #8]
   17298:	ldr	r2, [r4, #20]
   1729c:	add	r0, r0, #8
   172a0:	bic	r0, r0, #7
   172a4:	sub	r0, r0, #1
   172a8:	blx	r3
   172ac:	cmn	r0, #1
   172b0:	beq	170ec <sav_parse_records_pass1+0x158>
   172b4:	ldr	r3, [r5, #-1040]	; 0xfffffbf0
   172b8:	cmp	r9, r3
   172bc:	bcs	17360 <sav_parse_records_pass1+0x3cc>
   172c0:	mov	r3, #0
   172c4:	strb	r3, [r5, #-1024]	; 0xfffffc00
   172c8:	mov	r1, r8
   172cc:	ldr	r3, [r4, #8]
   172d0:	ldr	r2, [r4, #20]
   172d4:	mov	r0, #8
   172d8:	blx	r3
   172dc:	add	r9, r9, #1
   172e0:	mov	r1, r8
   172e4:	cmn	r0, #1
   172e8:	mov	r0, sl
   172ec:	bne	17278 <sav_parse_records_pass1+0x2e4>
   172f0:	b	170ec <sav_parse_records_pass1+0x158>
   172f4:	bl	3d94 <byteswap4@plt>
   172f8:	str	r0, [r5, #-1024]	; 0xfffffc00
   172fc:	b	170cc <sav_parse_records_pass1+0x138>
   17300:	ldr	r3, [r9, #12]
   17304:	ldr	r2, [r9, #20]
   17308:	mov	r1, fp
   1730c:	ldr	r0, [sp, #4]
   17310:	blx	r3
   17314:	cmp	r0, #3
   17318:	bls	1704c <sav_parse_records_pass1+0xb8>
   1731c:	ldrb	r3, [r7, #436]	; 0x1b4
   17320:	ldr	r0, [r5, #-1036]	; 0xfffffbf4
   17324:	tst	r3, #1
   17328:	bne	173e8 <sav_parse_records_pass1+0x454>
   1732c:	add	r3, r0, #3
   17330:	str	r0, [r5, #-1036]	; 0xfffffbf4
   17334:	ldr	r2, [r9, #20]
   17338:	bic	r0, r3, #3
   1733c:	mov	r1, r8
   17340:	ldr	r3, [r9, #8]
   17344:	blx	r3
   17348:	cmn	r0, #1
   1734c:	bne	17198 <sav_parse_records_pass1+0x204>
   17350:	b	170ec <sav_parse_records_pass1+0x158>
   17354:	bl	3d94 <byteswap4@plt>
   17358:	str	r0, [r5, #-1040]	; 0xfffffbf0
   1735c:	b	17268 <sav_parse_records_pass1+0x2d4>
   17360:	ldr	r3, [r4, #12]
   17364:	ldr	r2, [r4, #20]
   17368:	mov	r1, fp
   1736c:	ldr	r0, [sp, #4]
   17370:	blx	r3
   17374:	cmp	r0, #3
   17378:	bls	1704c <sav_parse_records_pass1+0xb8>
   1737c:	ldrb	r3, [r7, #436]	; 0x1b4
   17380:	ldr	r0, [r5, #-1036]	; 0xfffffbf4
   17384:	tst	r3, #1
   17388:	bne	173f8 <sav_parse_records_pass1+0x464>
   1738c:	cmp	r0, #4
   17390:	bne	17074 <sav_parse_records_pass1+0xe0>
   17394:	ldr	r3, [r4, #12]
   17398:	ldr	r2, [r4, #20]
   1739c:	mov	r1, fp
   173a0:	mov	r0, sl
   173a4:	blx	r3
   173a8:	cmp	r0, #3
   173ac:	bls	1704c <sav_parse_records_pass1+0xb8>
   173b0:	ldrb	r3, [r7, #436]	; 0x1b4
   173b4:	tst	r3, #1
   173b8:	bne	17494 <sav_parse_records_pass1+0x500>
   173bc:	ldr	r0, [r5, #-1024]	; 0xfffffc00
   173c0:	ldr	r3, [r4, #8]
   173c4:	ldr	r2, [r4, #20]
   173c8:	lsl	r0, r0, #2
   173cc:	mov	r1, r8
   173d0:	blx	r3
   173d4:	cmn	r0, #1
   173d8:	bne	16fe4 <sav_parse_records_pass1+0x50>
   173dc:	b	170ec <sav_parse_records_pass1+0x158>
   173e0:	bl	3d94 <byteswap4@plt>
   173e4:	b	171b0 <sav_parse_records_pass1+0x21c>
   173e8:	bl	3d94 <byteswap4@plt>
   173ec:	b	1732c <sav_parse_records_pass1+0x398>
   173f0:	bl	3d94 <byteswap4@plt>
   173f4:	b	17218 <sav_parse_records_pass1+0x284>
   173f8:	bl	3d94 <byteswap4@plt>
   173fc:	str	r0, [r5, #-1036]	; 0xfffffbf4
   17400:	b	1738c <sav_parse_records_pass1+0x3f8>
   17404:	ldr	r2, [sp, #8]
   17408:	ldr	r3, [r2]
   1740c:	cmp	r0, r3
   17410:	beq	174a4 <sav_parse_records_pass1+0x510>
   17414:	mov	r3, #1
   17418:	b	17428 <sav_parse_records_pass1+0x494>
   1741c:	add	r3, r3, #1
   17420:	cmp	r3, #79	; 0x4f
   17424:	beq	17458 <sav_parse_records_pass1+0x4c4>
   17428:	ldr	r1, [r2, #36]	; 0x24
   1742c:	add	r2, r2, #36	; 0x24
   17430:	cmp	r1, r0
   17434:	bne	1741c <sav_parse_records_pass1+0x488>
   17438:	add	r3, r3, r3, lsl #3
   1743c:	ldr	r2, [sp, #12]
   17440:	add	r3, r2, r3, lsl #2
   17444:	add	r1, r3, #4
   17448:	str	r1, [r7, #56]	; 0x38
   1744c:	b	17224 <sav_parse_records_pass1+0x290>
   17450:	mov	r0, #7
   17454:	b	17050 <sav_parse_records_pass1+0xbc>
   17458:	ldr	r3, [r7, #24]
   1745c:	cmp	r3, #0
   17460:	beq	17450 <sav_parse_records_pass1+0x4bc>
   17464:	ldr	r2, [pc, #76]	; 174b8 <sav_parse_records_pass1+0x524>
   17468:	mov	r3, r0
   1746c:	add	r2, pc, r2
   17470:	mov	r1, #1024	; 0x400
   17474:	mov	r0, sl
   17478:	bl	4280 <snprintf@plt>
   1747c:	mov	r0, sl
   17480:	ldr	r3, [r7, #24]
   17484:	ldr	r1, [r7, #40]	; 0x28
   17488:	blx	r3
   1748c:	mov	r0, #7
   17490:	b	17050 <sav_parse_records_pass1+0xbc>
   17494:	ldr	r0, [r5, #-1024]	; 0xfffffc00
   17498:	bl	3d94 <byteswap4@plt>
   1749c:	str	r0, [r5, #-1024]	; 0xfffffc00
   174a0:	b	173bc <sav_parse_records_pass1+0x428>
   174a4:	mov	r3, r1
   174a8:	b	17438 <sav_parse_records_pass1+0x4a4>
   174ac:	.word	0x0002efbc
   174b0:	.word	0x0002efac
   174b4:	.word	0x000003e7
   174b8:	.word	0x0001007c

000174bc <sav_parse_timestamp>:
   174bc:	push	{r4, r5, r6, r7, lr}
   174c0:	sub	sp, sp, #60	; 0x3c
   174c4:	mov	r4, r0
   174c8:	add	r5, sp, #12
   174cc:	mov	r7, r1
   174d0:	mov	r2, #44	; 0x2c
   174d4:	mov	r1, #0
   174d8:	mov	r0, r5
   174dc:	bl	42a4 <memset@plt>
   174e0:	ldr	r2, [r4, #40]	; 0x28
   174e4:	ldr	r3, [r4, #24]
   174e8:	mvn	ip, #0
   174ec:	str	r2, [sp]
   174f0:	add	r0, r7, #101	; 0x65
   174f4:	mov	r2, r5
   174f8:	mov	r1, #8
   174fc:	str	ip, [sp, #44]	; 0x2c
   17500:	bl	3ed8 <sav_parse_time@plt>
   17504:	subs	r6, r0, #0
   17508:	beq	17518 <sav_parse_timestamp+0x5c>
   1750c:	mov	r0, r6
   17510:	add	sp, sp, #60	; 0x3c
   17514:	pop	{r4, r5, r6, r7, pc}
   17518:	ldr	r2, [r4, #40]	; 0x28
   1751c:	ldr	r3, [r4, #24]
   17520:	add	r0, r7, #92	; 0x5c
   17524:	str	r2, [sp]
   17528:	mov	r1, #9
   1752c:	mov	r2, r5
   17530:	bl	4088 <sav_parse_date@plt>
   17534:	subs	r6, r0, #0
   17538:	bne	1750c <sav_parse_timestamp+0x50>
   1753c:	mov	r0, r5
   17540:	bl	3e54 <mktime@plt>
   17544:	str	r0, [r4, #324]	; 0x144
   17548:	mov	r0, r6
   1754c:	add	sp, sp, #60	; 0x3c
   17550:	pop	{r4, r5, r6, r7, pc}

00017554 <readstat_parse_sav>:
   17554:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17558:	vpush	{d8-d11}
   1755c:	ldr	fp, [r0, #32]
   17560:	mov	r4, r0
   17564:	mov	r0, r1
   17568:	sub	sp, sp, #868	; 0x364
   1756c:	ldr	r3, [fp]
   17570:	ldr	r1, [fp, #20]
   17574:	mov	r6, r2
   17578:	blx	r3
   1757c:	cmn	r0, #1
   17580:	moveq	r9, #1
   17584:	beq	17690 <readstat_parse_sav+0x13c>
   17588:	ldr	r3, [fp, #8]
   1758c:	ldr	r2, [fp, #20]
   17590:	mov	r1, #2
   17594:	mov	r0, #0
   17598:	blx	r3
   1759c:	cmn	r0, #1
   175a0:	mov	r5, r0
   175a4:	beq	176a0 <readstat_parse_sav+0x14c>
   175a8:	mov	r1, #0
   175ac:	mov	r0, r1
   175b0:	ldr	r3, [fp, #8]
   175b4:	ldr	r2, [fp, #20]
   175b8:	blx	r3
   175bc:	cmn	r0, #1
   175c0:	beq	176a0 <readstat_parse_sav+0x14c>
   175c4:	add	r8, sp, #104	; 0x68
   175c8:	mov	r0, r8
   175cc:	ldr	r3, [fp, #12]
   175d0:	ldr	r2, [fp, #20]
   175d4:	mov	r1, #176	; 0xb0
   175d8:	blx	r3
   175dc:	cmp	r0, #175	; 0xaf
   175e0:	movls	r9, #2
   175e4:	bls	176a4 <readstat_parse_sav+0x150>
   175e8:	mov	r1, fp
   175ec:	mov	r0, r8
   175f0:	bl	4058 <sav_ctx_init@plt>
   175f4:	subs	sl, r0, #0
   175f8:	beq	177f0 <readstat_parse_sav+0x29c>
   175fc:	mov	lr, r4
   17600:	mov	ip, sl
   17604:	ldm	lr!, {r0, r1, r2, r3}
   17608:	ldr	r7, [r4, #48]	; 0x30
   1760c:	ldr	r9, [r4, #36]	; 0x24
   17610:	stmia	ip!, {r0, r1, r2, r3}
   17614:	cmp	r7, #0
   17618:	ldm	lr, {r0, r1, r2, r3}
   1761c:	ldr	lr, [r4, #40]	; 0x28
   17620:	stm	ip, {r0, r1, r2, r3}
   17624:	ldr	r2, [sl, #352]	; 0x160
   17628:	strgt	r7, [sl, #360]	; 0x168
   1762c:	cmn	r2, #1
   17630:	str	r9, [sl, #56]	; 0x38
   17634:	str	lr, [sl, #60]	; 0x3c
   17638:	str	r6, [sl, #40]	; 0x28
   1763c:	str	r5, [sl, #32]
   17640:	beq	177e0 <readstat_parse_sav+0x28c>
   17644:	ldr	r3, [sl, #360]	; 0x168
   17648:	subs	r3, r2, r3
   1764c:	strmi	r2, [sl, #360]	; 0x168
   17650:	ldr	r2, [r4, #44]	; 0x2c
   17654:	movmi	r3, #0
   17658:	cmp	r2, #0
   1765c:	cmpgt	r3, r2
   17660:	str	r3, [sl, #356]	; 0x164
   17664:	strgt	r2, [sl, #356]	; 0x164
   17668:	mov	r1, r8
   1766c:	mov	r0, sl
   17670:	bl	3df4 <sav_parse_timestamp@plt>
   17674:	subs	r9, r0, #0
   17678:	beq	176c0 <readstat_parse_sav+0x16c>
   1767c:	ldr	r3, [fp, #4]
   17680:	ldr	r0, [fp, #20]
   17684:	blx	r3
   17688:	mov	r0, sl
   1768c:	bl	3f14 <sav_ctx_free@plt>
   17690:	mov	r0, r9
   17694:	add	sp, sp, #868	; 0x364
   17698:	vpop	{d8-d11}
   1769c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   176a0:	mov	r9, #15
   176a4:	ldr	r3, [fp, #4]
   176a8:	ldr	r0, [fp, #20]
   176ac:	blx	r3
   176b0:	mov	r0, r9
   176b4:	add	sp, sp, #868	; 0x364
   176b8:	vpop	{d8-d11}
   176bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   176c0:	mov	r0, sl
   176c4:	bl	16f94 <sav_parse_records_pass1>
   176c8:	subs	r9, r0, #0
   176cc:	bne	1767c <readstat_parse_sav+0x128>
   176d0:	mov	r1, r9
   176d4:	ldr	r3, [fp, #8]
   176d8:	ldr	r2, [fp, #20]
   176dc:	mov	r0, #176	; 0xb0
   176e0:	blx	r3
   176e4:	cmn	r0, #1
   176e8:	moveq	r9, #15
   176ec:	beq	1767c <readstat_parse_sav+0x128>
   176f0:	ldr	r3, [sl, #36]	; 0x24
   176f4:	ldr	r2, [sl, #40]	; 0x28
   176f8:	ldr	r1, [sl, #28]
   176fc:	ldr	r4, [r3, #16]
   17700:	ldr	r0, [sl, #32]
   17704:	ldr	r3, [r3, #20]
   17708:	blx	r4
   1770c:	subs	r9, r0, #0
   17710:	bne	1767c <readstat_parse_sav+0x128>
   17714:	ldr	r3, [sl, #36]	; 0x24
   17718:	mov	r0, #4096	; 0x1000
   1771c:	str	r3, [sp, #24]
   17720:	bl	422c <readstat_malloc@plt>
   17724:	subs	r3, r0, #0
   17728:	beq	17ca8 <readstat_parse_sav+0x754>
   1772c:	vldr	d10, [pc, #940]	; 17ae0 <readstat_parse_sav+0x58c>
   17730:	vldr	d9, [pc, #944]	; 17ae8 <readstat_parse_sav+0x594>
   17734:	vldr	d8, [pc, #948]	; 17af0 <readstat_parse_sav+0x59c>
   17738:	mov	r2, #4096	; 0x1000
   1773c:	mov	r5, r3
   17740:	str	r2, [sp, #36]	; 0x24
   17744:	add	r2, sp, #68	; 0x44
   17748:	str	r2, [sp, #44]	; 0x2c
   1774c:	str	fp, [sp, #16]
   17750:	str	r9, [sp, #32]
   17754:	str	r8, [sp, #56]	; 0x38
   17758:	ldr	r2, [sp, #24]
   1775c:	mov	r1, #4
   17760:	ldr	r0, [sp, #44]	; 0x2c
   17764:	ldr	r3, [r2, #12]
   17768:	ldr	r2, [r2, #20]
   1776c:	blx	r3
   17770:	cmp	r0, #3
   17774:	bls	177c4 <readstat_parse_sav+0x270>
   17778:	ldrb	r3, [sl, #436]	; 0x1b4
   1777c:	tst	r3, #1
   17780:	bne	17990 <readstat_parse_sav+0x43c>
   17784:	ldr	r3, [sp, #68]	; 0x44
   17788:	cmp	r3, #6
   1778c:	beq	179a0 <readstat_parse_sav+0x44c>
   17790:	bhi	177f8 <readstat_parse_sav+0x2a4>
   17794:	cmp	r3, #2
   17798:	beq	17a5c <readstat_parse_sav+0x508>
   1779c:	cmp	r3, #3
   177a0:	bne	17ad4 <readstat_parse_sav+0x580>
   177a4:	ldr	r4, [sl, #36]	; 0x24
   177a8:	mov	r1, #4
   177ac:	add	r0, sp, #72	; 0x48
   177b0:	ldr	r3, [r4, #12]
   177b4:	ldr	r2, [r4, #20]
   177b8:	blx	r3
   177bc:	cmp	r0, #3
   177c0:	bhi	17dbc <readstat_parse_sav+0x868>
   177c4:	ldr	fp, [sp, #16]
   177c8:	mov	r3, #2
   177cc:	mov	r4, r3
   177d0:	mov	r0, r5
   177d4:	bl	3ec0 <free@plt>
   177d8:	mov	r9, r4
   177dc:	b	1767c <readstat_parse_sav+0x128>
   177e0:	ldr	r3, [r4, #44]	; 0x2c
   177e4:	cmp	r3, #0
   177e8:	strgt	r3, [sl, #356]	; 0x164
   177ec:	b	17668 <readstat_parse_sav+0x114>
   177f0:	mov	r9, #5
   177f4:	b	176a4 <readstat_parse_sav+0x150>
   177f8:	cmp	r3, #7
   177fc:	beq	17b04 <readstat_parse_sav+0x5b0>
   17800:	ldr	r2, [pc, #752]	; 17af8 <readstat_parse_sav+0x5a4>
   17804:	ldr	fp, [sp, #16]
   17808:	cmp	r3, r2
   1780c:	ldr	r9, [sp, #32]
   17810:	ldr	r8, [sp, #56]	; 0x38
   17814:	bne	17984 <readstat_parse_sav+0x430>
   17818:	ldr	r3, [sl, #36]	; 0x24
   1781c:	add	r2, sp, #536	; 0x218
   17820:	str	r2, [sp, #16]
   17824:	mov	r0, r2
   17828:	ldr	r4, [r3, #12]
   1782c:	ldr	r2, [r3, #20]
   17830:	mov	r1, #4
   17834:	blx	r4
   17838:	cmp	r0, #3
   1783c:	bls	177c8 <readstat_parse_sav+0x274>
   17840:	mov	r0, r5
   17844:	bl	3ec0 <free@plt>
   17848:	ldr	r7, [sl, #340]	; 0x154
   1784c:	mov	r4, #0
   17850:	cmp	r7, r4
   17854:	str	r4, [sl, #348]	; 0x15c
   17858:	ldrgt	r3, [sl, #44]	; 0x2c
   1785c:	movgt	r5, r4
   17860:	movgt	r2, #252	; 0xfc
   17864:	strgt	r3, [sp, #20]
   17868:	ble	178b8 <readstat_parse_sav+0x364>
   1786c:	ldr	r3, [sp, #20]
   17870:	mov	r1, r2
   17874:	ldr	r6, [r3, r5, lsl #2]
   17878:	ldr	r3, [r6, #20]
   1787c:	cmp	r3, #0
   17880:	add	r0, r3, #251	; 0xfb
   17884:	beq	17898 <readstat_parse_sav+0x344>
   17888:	str	r2, [sp, #24]
   1788c:	bl	24d94 <__udivsi3>
   17890:	ldr	r2, [sp, #24]
   17894:	str	r0, [r6, #48]	; 0x30
   17898:	ldr	r3, [r6, #48]	; 0x30
   1789c:	str	r4, [r6, #8]
   178a0:	add	r5, r5, r3
   178a4:	cmp	r5, r7
   178a8:	add	r3, r4, #1
   178ac:	mov	r4, r3
   178b0:	blt	1786c <readstat_parse_sav+0x318>
   178b4:	str	r3, [sl, #348]	; 0x15c
   178b8:	mov	r1, #4
   178bc:	ldr	r0, [sl, #348]	; 0x15c
   178c0:	bl	3fc8 <readstat_calloc@plt>
   178c4:	ldr	r4, [sl, #348]	; 0x15c
   178c8:	cmp	r4, #0
   178cc:	str	r0, [sl, #52]	; 0x34
   178d0:	bne	17bf0 <readstat_parse_sav+0x69c>
   178d4:	mov	r9, #5
   178d8:	b	1767c <readstat_parse_sav+0x128>
   178dc:	add	r3, r7, #5
   178e0:	cmp	fp, r3
   178e4:	str	r6, [r4, #52]	; 0x34
   178e8:	bcc	17978 <readstat_parse_sav+0x424>
   178ec:	ldrb	r3, [sl, #436]	; 0x1b4
   178f0:	ldr	r7, [r7, #1]
   178f4:	tst	r3, #1
   178f8:	beq	17908 <readstat_parse_sav+0x3b4>
   178fc:	mov	r0, r7
   17900:	bl	3d94 <byteswap4@plt>
   17904:	mov	r7, r0
   17908:	ldr	ip, [sp, #280]	; 0x118
   1790c:	add	r4, r4, #88	; 0x58
   17910:	add	ip, ip, #4
   17914:	str	ip, [sp, #280]	; 0x118
   17918:	mov	r8, #0
   1791c:	b	1794c <readstat_parse_sav+0x3f8>
   17920:	cmp	fp, ip
   17924:	bcc	17978 <readstat_parse_sav+0x424>
   17928:	ldr	ip, [sl, #336]	; 0x150
   1792c:	add	r4, r4, #33	; 0x21
   17930:	str	ip, [sp]
   17934:	bl	4238 <readstat_convert@plt>
   17938:	cmp	r0, #0
   1793c:	bne	18b94 <readstat_parse_sav+0x1640>
   17940:	ldr	ip, [sp, #280]	; 0x118
   17944:	add	ip, ip, r7
   17948:	str	ip, [sp, #280]	; 0x118
   1794c:	cmp	r8, r6
   17950:	mov	r2, ip
   17954:	mov	r0, r4
   17958:	mov	r3, r7
   1795c:	mov	r1, #33	; 0x21
   17960:	add	ip, ip, r7
   17964:	add	r8, r8, #1
   17968:	bcc	17920 <readstat_parse_sav+0x3cc>
   1796c:	ldr	r8, [sl, #340]	; 0x154
   17970:	cmp	r5, r8
   17974:	bne	18870 <readstat_parse_sav+0x131c>
   17978:	ldr	r3, [sp, #20]
   1797c:	ldr	fp, [sp, #16]
   17980:	mov	r5, r3
   17984:	mov	r3, #5
   17988:	mov	r4, r3
   1798c:	b	177d0 <readstat_parse_sav+0x27c>
   17990:	ldr	r0, [sp, #68]	; 0x44
   17994:	bl	3d94 <byteswap4@plt>
   17998:	str	r0, [sp, #68]	; 0x44
   1799c:	b	17784 <readstat_parse_sav+0x230>
   179a0:	ldr	r3, [sl, #4]
   179a4:	cmp	r3, #0
   179a8:	beq	186ec <readstat_parse_sav+0x1198>
   179ac:	ldr	r7, [sl, #36]	; 0x24
   179b0:	mov	r1, #4
   179b4:	add	r0, sp, #88	; 0x58
   179b8:	ldr	r3, [r7, #12]
   179bc:	ldr	r2, [r7, #20]
   179c0:	blx	r3
   179c4:	cmp	r0, #3
   179c8:	bls	177c4 <readstat_parse_sav+0x270>
   179cc:	ldrb	r3, [sl, #436]	; 0x1b4
   179d0:	tst	r3, #1
   179d4:	bne	186dc <readstat_parse_sav+0x1188>
   179d8:	mov	r4, #0
   179dc:	add	r8, sp, #280	; 0x118
   179e0:	add	r9, sp, #536	; 0x218
   179e4:	ldr	fp, [pc, #272]	; 17afc <readstat_parse_sav+0x5a8>
   179e8:	b	17a00 <readstat_parse_sav+0x4ac>
   179ec:	ldr	r3, [sl, #4]
   179f0:	ldr	r2, [sl, #40]	; 0x28
   179f4:	blx	r3
   179f8:	cmp	r0, #0
   179fc:	bne	186b4 <readstat_parse_sav+0x1160>
   17a00:	ldr	r3, [sp, #88]	; 0x58
   17a04:	mov	r1, #80	; 0x50
   17a08:	cmp	r4, r3
   17a0c:	mov	r0, r8
   17a10:	bcs	17758 <readstat_parse_sav+0x204>
   17a14:	ldr	r3, [r7, #12]
   17a18:	ldr	r2, [r7, #20]
   17a1c:	blx	r3
   17a20:	mov	r3, #80	; 0x50
   17a24:	mov	r2, r8
   17a28:	mov	r1, fp
   17a2c:	cmp	r0, #79	; 0x4f
   17a30:	mov	r0, r9
   17a34:	ble	177c4 <readstat_parse_sav+0x270>
   17a38:	ldr	ip, [sl, #336]	; 0x150
   17a3c:	str	ip, [sp]
   17a40:	bl	4238 <readstat_convert@plt>
   17a44:	mov	r1, r9
   17a48:	subs	r6, r0, #0
   17a4c:	mov	r0, r4
   17a50:	add	r4, r4, #1
   17a54:	beq	179ec <readstat_parse_sav+0x498>
   17a58:	b	17e48 <readstat_parse_sav+0x8f4>
   17a5c:	ldr	r3, [sl, #48]	; 0x30
   17a60:	ldr	r1, [sl, #340]	; 0x154
   17a64:	add	r4, sp, #536	; 0x218
   17a68:	cmp	r1, r3
   17a6c:	mov	r3, #0
   17a70:	ldr	r6, [sl, #36]	; 0x24
   17a74:	str	r3, [r4, #4]
   17a78:	str	r3, [sp, #536]	; 0x218
   17a7c:	str	r3, [r4, #8]
   17a80:	str	r3, [r4, #12]
   17a84:	str	r3, [r4, #16]
   17a88:	str	r3, [r4, #20]
   17a8c:	str	r3, [r4, #24]
   17a90:	beq	17d54 <readstat_parse_sav+0x800>
   17a94:	mov	r0, r4
   17a98:	ldr	r3, [r6, #12]
   17a9c:	ldr	r2, [r6, #20]
   17aa0:	mov	r1, #28
   17aa4:	blx	r3
   17aa8:	cmp	r0, #27
   17aac:	bhi	17cb0 <readstat_parse_sav+0x75c>
   17ab0:	mov	r3, #2
   17ab4:	ldr	fp, [sp, #16]
   17ab8:	mov	r4, r3
   17abc:	mov	r7, #0
   17ac0:	mov	r0, r7
   17ac4:	bl	4418 <spss_varinfo_free@plt>
   17ac8:	b	177d0 <readstat_parse_sav+0x27c>
   17acc:	ldr	r5, [sp, #20]
   17ad0:	beq	17758 <readstat_parse_sav+0x204>
   17ad4:	ldr	fp, [sp, #16]
   17ad8:	b	17984 <readstat_parse_sav+0x430>
   17adc:	nop			; (mov r0, r0)
   17ae0:	.word	0x00000000
   17ae4:	.word	0x7ff80000
   17ae8:	.word	0x00000000
   17aec:	.word	0xfff00000
   17af0:	.word	0x00000000
   17af4:	.word	0x7ff00000
   17af8:	.word	0x000003e7
   17afc:	.word	0x00000141
   17b00:	.word	0x00000101
   17b04:	ldr	r2, [sp, #24]
   17b08:	add	r6, sp, #76	; 0x4c
   17b0c:	mov	r0, r6
   17b10:	ldr	r3, [r2, #12]
   17b14:	mov	r1, #12
   17b18:	ldr	r2, [r2, #20]
   17b1c:	blx	r3
   17b20:	cmp	r0, #11
   17b24:	bls	177c4 <readstat_parse_sav+0x270>
   17b28:	ldrb	r3, [sl, #436]	; 0x1b4
   17b2c:	tst	r3, #1
   17b30:	beq	17b50 <readstat_parse_sav+0x5fc>
   17b34:	mov	r4, #0
   17b38:	ldr	r0, [r6, r4, lsl #2]
   17b3c:	bl	3d94 <byteswap4@plt>
   17b40:	str	r0, [r6, r4, lsl #2]
   17b44:	add	r4, r4, #1
   17b48:	cmp	r4, #3
   17b4c:	bne	17b38 <readstat_parse_sav+0x5e4>
   17b50:	ldr	r7, [sp, #80]	; 0x50
   17b54:	ldr	r6, [sp, #84]	; 0x54
   17b58:	ldr	r3, [sp, #36]	; 0x24
   17b5c:	ldr	r8, [sp, #76]	; 0x4c
   17b60:	mul	r4, r6, r7
   17b64:	cmp	r4, r3
   17b68:	bhi	17c8c <readstat_parse_sav+0x738>
   17b6c:	cmp	r4, #0
   17b70:	beq	17ad4 <readstat_parse_sav+0x580>
   17b74:	ldr	r2, [sp, #24]
   17b78:	mov	r1, r4
   17b7c:	mov	r0, r5
   17b80:	ldr	r3, [r2, #12]
   17b84:	ldr	r2, [r2, #20]
   17b88:	blx	r3
   17b8c:	cmp	r4, r0
   17b90:	bhi	17ad4 <readstat_parse_sav+0x580>
   17b94:	sub	r8, r8, #4
   17b98:	cmp	r8, #18
   17b9c:	addls	pc, pc, r8, lsl #2
   17ba0:	b	17758 <readstat_parse_sav+0x204>
   17ba4:	b	18c0c <readstat_parse_sav+0x16b8>
   17ba8:	b	17758 <readstat_parse_sav+0x204>
   17bac:	b	17758 <readstat_parse_sav+0x204>
   17bb0:	b	17758 <readstat_parse_sav+0x204>
   17bb4:	b	17758 <readstat_parse_sav+0x204>
   17bb8:	b	17758 <readstat_parse_sav+0x204>
   17bbc:	b	17758 <readstat_parse_sav+0x204>
   17bc0:	b	18ba8 <readstat_parse_sav+0x1654>
   17bc4:	b	17758 <readstat_parse_sav+0x204>
   17bc8:	b	18774 <readstat_parse_sav+0x1220>
   17bcc:	b	18758 <readstat_parse_sav+0x1204>
   17bd0:	b	17758 <readstat_parse_sav+0x204>
   17bd4:	b	17758 <readstat_parse_sav+0x204>
   17bd8:	b	17758 <readstat_parse_sav+0x204>
   17bdc:	b	17758 <readstat_parse_sav+0x204>
   17be0:	b	17758 <readstat_parse_sav+0x204>
   17be4:	b	17758 <readstat_parse_sav+0x204>
   17be8:	b	18790 <readstat_parse_sav+0x123c>
   17bec:	b	18850 <readstat_parse_sav+0x12fc>
   17bf0:	ldr	r3, [sl]
   17bf4:	cmp	r3, #0
   17bf8:	beq	18d58 <readstat_parse_sav+0x1804>
   17bfc:	mov	r2, #56	; 0x38
   17c00:	mov	r1, #0
   17c04:	ldr	r0, [sp, #16]
   17c08:	bl	42a4 <memset@plt>
   17c0c:	ldr	r0, [sl, #352]	; 0x160
   17c10:	ldr	r6, [sl, #424]	; 0x1a8
   17c14:	cmn	r0, #1
   17c18:	ldr	ip, [sl, #324]	; 0x144
   17c1c:	ldrne	r0, [sl, #356]	; 0x164
   17c20:	add	r3, sp, #544	; 0x220
   17c24:	asr	r7, r6, #31
   17c28:	ldr	lr, [sl, #336]	; 0x150
   17c2c:	asr	r1, r0, #31
   17c30:	asr	r5, r4, #31
   17c34:	strd	r6, [r3, #16]
   17c38:	add	r2, r8, #109	; 0x6d
   17c3c:	ldr	r7, [sl, #432]	; 0x1b0
   17c40:	ldr	r8, [sl, #56]	; 0x38
   17c44:	str	ip, [sp, #552]	; 0x228
   17c48:	str	ip, [sp, #556]	; 0x22c
   17c4c:	add	r6, sl, #64	; 0x40
   17c50:	ldr	ip, [sl, #428]	; 0x1ac
   17c54:	strd	r0, [r3, #-8]
   17c58:	str	lr, [sp]
   17c5c:	mov	r0, r6
   17c60:	strd	r4, [r3]
   17c64:	ldr	r1, [pc, #-364]	; 17b00 <readstat_parse_sav+0x5ac>
   17c68:	mov	r3, #64	; 0x40
   17c6c:	str	ip, [sp, #568]	; 0x238
   17c70:	str	r7, [sp, #572]	; 0x23c
   17c74:	str	r8, [sp, #584]	; 0x248
   17c78:	bl	4238 <readstat_convert@plt>
   17c7c:	cmp	r0, #0
   17c80:	beq	18d38 <readstat_parse_sav+0x17e4>
   17c84:	mov	r9, r0
   17c88:	b	1767c <readstat_parse_sav+0x128>
   17c8c:	mov	r0, r5
   17c90:	mov	r1, r4
   17c94:	bl	42e0 <readstat_realloc@plt>
   17c98:	subs	r5, r0, #0
   17c9c:	strne	r4, [sp, #36]	; 0x24
   17ca0:	bne	17b74 <readstat_parse_sav+0x620>
   17ca4:	ldr	fp, [sp, #16]
   17ca8:	mov	r9, #3
   17cac:	b	1767c <readstat_parse_sav+0x128>
   17cb0:	ldrb	r3, [sl, #436]	; 0x1b4
   17cb4:	ldr	r0, [sp, #548]	; 0x224
   17cb8:	tst	r3, #1
   17cbc:	bne	186d0 <readstat_parse_sav+0x117c>
   17cc0:	tst	r3, #1
   17cc4:	str	r0, [sp, #548]	; 0x224
   17cc8:	ldr	r0, [sp, #552]	; 0x228
   17ccc:	bne	186c4 <readstat_parse_sav+0x1170>
   17cd0:	tst	r3, #1
   17cd4:	str	r0, [sp, #552]	; 0x228
   17cd8:	ldreq	r4, [sp, #536]	; 0x218
   17cdc:	bne	183d0 <readstat_parse_sav+0xe7c>
   17ce0:	cmp	r4, #0
   17ce4:	blt	17d88 <readstat_parse_sav+0x834>
   17ce8:	mov	r1, #280	; 0x118
   17cec:	mov	r0, #1
   17cf0:	bl	3fc8 <readstat_calloc@plt>
   17cf4:	subs	r7, r0, #0
   17cf8:	beq	17d74 <readstat_parse_sav+0x820>
   17cfc:	ldr	r0, [sl, #344]	; 0x158
   17d00:	ldr	ip, [sl, #340]	; 0x154
   17d04:	mov	r3, #1
   17d08:	mvn	r2, #0
   17d0c:	mov	r1, #0
   17d10:	add	r8, sp, #556	; 0x22c
   17d14:	str	r0, [r7, #12]
   17d18:	str	r3, [r7, #16]
   17d1c:	str	r3, [r7, #48]	; 0x30
   17d20:	str	r2, [r7, #4]
   17d24:	str	ip, [r7, #8]
   17d28:	mov	r2, r8
   17d2c:	str	r1, [sp]
   17d30:	mov	r3, #8
   17d34:	mov	r1, #9
   17d38:	add	r0, r7, #187	; 0xbb
   17d3c:	bl	4238 <readstat_convert@plt>
   17d40:	subs	r6, r0, #0
   17d44:	beq	18304 <readstat_parse_sav+0xdb0>
   17d48:	ldr	fp, [sp, #16]
   17d4c:	mov	r4, r6
   17d50:	b	17ac0 <readstat_parse_sav+0x56c>
   17d54:	lsl	r3, r1, #1
   17d58:	ldr	r0, [sl, #44]	; 0x2c
   17d5c:	str	r3, [sl, #48]	; 0x30
   17d60:	lsl	r1, r1, #3
   17d64:	bl	42e0 <readstat_realloc@plt>
   17d68:	cmp	r0, #0
   17d6c:	str	r0, [sl, #44]	; 0x2c
   17d70:	bne	17a94 <readstat_parse_sav+0x540>
   17d74:	mov	r3, #3
   17d78:	ldr	fp, [sp, #16]
   17d7c:	mov	r4, r3
   17d80:	mov	r7, #0
   17d84:	b	17ac0 <readstat_parse_sav+0x56c>
   17d88:	ldr	r3, [sl, #340]	; 0x154
   17d8c:	cmp	r3, #0
   17d90:	beq	17ad4 <readstat_parse_sav+0x580>
   17d94:	ldr	r1, [sl, #44]	; 0x2c
   17d98:	sub	r3, r3, #-1073741823	; 0xc0000001
   17d9c:	ldr	r2, [sl, #344]	; 0x158
   17da0:	ldr	r1, [r1, r3, lsl #2]
   17da4:	add	r3, r2, #1
   17da8:	str	r3, [sl, #344]	; 0x158
   17dac:	ldr	r3, [r1, #16]
   17db0:	add	r3, r3, #1
   17db4:	str	r3, [r1, #16]
   17db8:	b	17758 <readstat_parse_sav+0x204>
   17dbc:	ldrb	r3, [sl, #436]	; 0x1b4
   17dc0:	tst	r3, #1
   17dc4:	bne	182dc <readstat_parse_sav+0xd88>
   17dc8:	ldr	r0, [sp, #72]	; 0x48
   17dcc:	cmp	r0, #0
   17dd0:	moveq	r8, r0
   17dd4:	bne	17f00 <readstat_parse_sav+0x9ac>
   17dd8:	ldr	r3, [r4, #12]
   17ddc:	ldr	r2, [r4, #20]
   17de0:	mov	r1, #4
   17de4:	add	r0, sp, #88	; 0x58
   17de8:	blx	r3
   17dec:	cmp	r0, #3
   17df0:	bhi	17e54 <readstat_parse_sav+0x900>
   17df4:	mov	r6, #2
   17df8:	cmp	r8, #0
   17dfc:	beq	17e48 <readstat_parse_sav+0x8f4>
   17e00:	ldr	r2, [sp, #72]	; 0x48
   17e04:	cmp	r2, #0
   17e08:	movne	r7, r8
   17e0c:	movne	r4, #0
   17e10:	beq	17e38 <readstat_parse_sav+0x8e4>
   17e14:	ldr	r3, [r7, #64]	; 0x40
   17e18:	add	r4, r4, #1
   17e1c:	subs	r0, r3, #0
   17e20:	beq	17e2c <readstat_parse_sav+0x8d8>
   17e24:	bl	3ec0 <free@plt>
   17e28:	ldr	r2, [sp, #72]	; 0x48
   17e2c:	cmp	r4, r2
   17e30:	add	r7, r7, #72	; 0x48
   17e34:	bcc	17e14 <readstat_parse_sav+0x8c0>
   17e38:	mov	r0, r8
   17e3c:	bl	3ec0 <free@plt>
   17e40:	cmp	r6, #0
   17e44:	beq	17758 <readstat_parse_sav+0x204>
   17e48:	ldr	fp, [sp, #16]
   17e4c:	mov	r4, r6
   17e50:	b	177d0 <readstat_parse_sav+0x27c>
   17e54:	ldrb	r3, [sl, #436]	; 0x1b4
   17e58:	tst	r3, #1
   17e5c:	beq	17e6c <readstat_parse_sav+0x918>
   17e60:	ldr	r0, [sp, #88]	; 0x58
   17e64:	bl	3d94 <byteswap4@plt>
   17e68:	str	r0, [sp, #88]	; 0x58
   17e6c:	ldr	r1, [sp, #88]	; 0x58
   17e70:	cmp	r1, #4
   17e74:	movne	r6, #5
   17e78:	bne	17df8 <readstat_parse_sav+0x8a4>
   17e7c:	ldr	r3, [r4, #12]
   17e80:	ldr	r2, [r4, #20]
   17e84:	add	r0, sp, #76	; 0x4c
   17e88:	blx	r3
   17e8c:	cmp	r0, #3
   17e90:	bls	17df4 <readstat_parse_sav+0x8a0>
   17e94:	ldrb	r3, [sl, #436]	; 0x1b4
   17e98:	tst	r3, #1
   17e9c:	beq	17eac <readstat_parse_sav+0x958>
   17ea0:	ldr	r0, [sp, #76]	; 0x4c
   17ea4:	bl	3d94 <byteswap4@plt>
   17ea8:	str	r0, [sp, #76]	; 0x4c
   17eac:	ldr	fp, [sp, #76]	; 0x4c
   17eb0:	cmp	fp, #0
   17eb4:	beq	17ff0 <readstat_parse_sav+0xa9c>
   17eb8:	lsl	r0, fp, #2
   17ebc:	bl	422c <readstat_malloc@plt>
   17ec0:	subs	fp, r0, #0
   17ec4:	beq	182d4 <readstat_parse_sav+0xd80>
   17ec8:	ldr	r1, [sp, #76]	; 0x4c
   17ecc:	ldr	r3, [r4, #12]
   17ed0:	ldr	r2, [r4, #20]
   17ed4:	lsl	r1, r1, #2
   17ed8:	blx	r3
   17edc:	ldr	r3, [sp, #76]	; 0x4c
   17ee0:	cmp	r0, r3, lsl #2
   17ee4:	bcs	18010 <readstat_parse_sav+0xabc>
   17ee8:	mov	r0, fp
   17eec:	bl	3ec0 <free@plt>
   17ef0:	cmp	r8, #0
   17ef4:	beq	177c4 <readstat_parse_sav+0x270>
   17ef8:	mov	r6, #2
   17efc:	b	17e00 <readstat_parse_sav+0x8ac>
   17f00:	mov	r1, #72	; 0x48
   17f04:	bl	3fc8 <readstat_calloc@plt>
   17f08:	subs	r8, r0, #0
   17f0c:	beq	182ec <readstat_parse_sav+0xd98>
   17f10:	add	r3, sp, #536	; 0x218
   17f14:	mov	r9, #0
   17f18:	mov	r7, r8
   17f1c:	str	r3, [sp, #20]
   17f20:	add	fp, sp, #280	; 0x118
   17f24:	b	17f40 <readstat_parse_sav+0x9ec>
   17f28:	ldr	ip, [sl, #336]	; 0x150
   17f2c:	add	r7, r7, #72	; 0x48
   17f30:	str	ip, [sp]
   17f34:	bl	4238 <readstat_convert@plt>
   17f38:	cmp	r0, #0
   17f3c:	bne	18178 <readstat_parse_sav+0xc24>
   17f40:	ldr	r3, [sp, #72]	; 0x48
   17f44:	mov	r1, #8
   17f48:	cmp	r9, r3
   17f4c:	mov	r0, r7
   17f50:	bcs	17dd8 <readstat_parse_sav+0x884>
   17f54:	mov	r3, #0
   17f58:	strb	r3, [sp, #536]	; 0x218
   17f5c:	ldr	r3, [r4, #12]
   17f60:	ldr	r2, [r4, #20]
   17f64:	blx	r3
   17f68:	mov	r1, #1
   17f6c:	add	r9, r9, r1
   17f70:	cmp	r0, #7
   17f74:	ldr	r0, [sp, #20]
   17f78:	ble	17ef8 <readstat_parse_sav+0x9a4>
   17f7c:	ldr	r3, [r4, #12]
   17f80:	ldr	r2, [r4, #20]
   17f84:	blx	r3
   17f88:	cmp	r0, #0
   17f8c:	mov	r0, fp
   17f90:	ble	17ef8 <readstat_parse_sav+0x9a4>
   17f94:	ldrb	r6, [sp, #536]	; 0x218
   17f98:	ldr	r3, [r4, #12]
   17f9c:	ldr	r2, [r4, #20]
   17fa0:	add	r6, r6, #8
   17fa4:	bic	r6, r6, #7
   17fa8:	sub	r6, r6, #1
   17fac:	mov	r1, r6
   17fb0:	blx	r3
   17fb4:	lsl	r1, r6, #2
   17fb8:	add	r1, r1, #1
   17fbc:	str	r1, [sp, #28]
   17fc0:	cmp	r6, r0
   17fc4:	mov	r0, r1
   17fc8:	bhi	17ef8 <readstat_parse_sav+0x9a4>
   17fcc:	bl	422c <readstat_malloc@plt>
   17fd0:	mov	r3, r6
   17fd4:	mov	r2, fp
   17fd8:	ldr	r1, [sp, #28]
   17fdc:	cmp	r0, #0
   17fe0:	str	r0, [r7, #64]	; 0x40
   17fe4:	bne	17f28 <readstat_parse_sav+0x9d4>
   17fe8:	mov	r6, #3
   17fec:	b	17e00 <readstat_parse_sav+0x8ac>
   17ff0:	ldr	r3, [r4, #12]
   17ff4:	ldr	r2, [r4, #20]
   17ff8:	mov	r1, fp
   17ffc:	mov	r0, fp
   18000:	blx	r3
   18004:	ldr	r3, [sp, #76]	; 0x4c
   18008:	cmp	r0, r3, lsl #2
   1800c:	bcc	17df4 <readstat_parse_sav+0x8a0>
   18010:	mov	r6, #0
   18014:	add	r2, sp, #536	; 0x218
   18018:	str	r6, [sp, #28]
   1801c:	str	r2, [sp, #40]	; 0x28
   18020:	cmp	r6, r3
   18024:	bcs	180f0 <readstat_parse_sav+0xb9c>
   18028:	ldr	r0, [fp, r6, lsl #2]
   1802c:	str	r0, [sp, #536]	; 0x218
   18030:	ldrb	r3, [sl, #436]	; 0x1b4
   18034:	tst	r3, #1
   18038:	beq	18044 <readstat_parse_sav+0xaf0>
   1803c:	bl	3d94 <byteswap4@plt>
   18040:	str	r0, [sp, #536]	; 0x218
   18044:	ldr	r2, [sp, #536]	; 0x218
   18048:	ldr	r3, [sl, #44]	; 0x2c
   1804c:	sub	r2, r2, #1
   18050:	str	r2, [sp, #536]	; 0x218
   18054:	ldr	r7, [sl, #340]	; 0x154
   18058:	str	r8, [sp, #20]
   1805c:	mov	r9, #0
   18060:	mov	r8, r6
   18064:	mov	r6, r5
   18068:	mov	r5, r3
   1806c:	add	r4, r9, r7
   18070:	cmp	r9, r7
   18074:	lsr	r4, r4, #1
   18078:	ldr	r0, [sp, #40]	; 0x28
   1807c:	add	r2, r5, r4, lsl #2
   18080:	mov	r1, r2
   18084:	bcs	180b0 <readstat_parse_sav+0xb5c>
   18088:	str	r2, [sp, #48]	; 0x30
   1808c:	bl	4208 <spss_varinfo_compare@plt>
   18090:	cmp	r0, #0
   18094:	blt	180a8 <readstat_parse_sav+0xb54>
   18098:	add	r9, r4, #1
   1809c:	ldr	r2, [sp, #48]	; 0x30
   180a0:	mov	r4, r7
   180a4:	beq	180c8 <readstat_parse_sav+0xb74>
   180a8:	mov	r7, r4
   180ac:	b	1806c <readstat_parse_sav+0xb18>
   180b0:	mov	r5, r6
   180b4:	mov	r6, r8
   180b8:	ldr	r8, [sp, #20]
   180bc:	ldr	r3, [sp, #76]	; 0x4c
   180c0:	add	r6, r6, #1
   180c4:	b	18020 <readstat_parse_sav+0xacc>
   180c8:	cmp	r2, #0
   180cc:	mov	r5, r6
   180d0:	ldrne	r3, [r2]
   180d4:	ldrne	r2, [sl, #368]	; 0x170
   180d8:	mov	r6, r8
   180dc:	ldrne	r1, [r3]
   180e0:	ldr	r8, [sp, #20]
   180e4:	strne	r1, [sp, #28]
   180e8:	strne	r2, [r3, #4]
   180ec:	b	180bc <readstat_parse_sav+0xb68>
   180f0:	vldr	d11, [pc, #864]	; 18458 <readstat_parse_sav+0xf04>
   180f4:	mov	r3, #0
   180f8:	str	r3, [sp, #20]
   180fc:	mov	r9, r8
   18100:	add	r3, sp, #536	; 0x218
   18104:	mov	r4, r8
   18108:	str	r3, [sp, #48]	; 0x30
   1810c:	add	r3, sl, #400	; 0x190
   18110:	str	r3, [sp, #40]	; 0x28
   18114:	ldr	r3, [sp, #72]	; 0x48
   18118:	ldr	r2, [sp, #20]
   1811c:	cmp	r2, r3
   18120:	bcs	182fc <readstat_parse_sav+0xda8>
   18124:	ldr	r3, [sp, #28]
   18128:	vstr	d11, [sp, #536]	; 0x218
   1812c:	cmp	r3, #5
   18130:	str	r3, [r4, #56]	; 0x38
   18134:	beq	1822c <readstat_parse_sav+0xcd8>
   18138:	ldr	r3, [sl, #336]	; 0x150
   1813c:	add	r7, r4, #8
   18140:	str	r3, [sp]
   18144:	mov	r0, r7
   18148:	mov	r3, #8
   1814c:	mov	r2, r4
   18150:	mov	r1, #33	; 0x21
   18154:	bl	4238 <readstat_convert@plt>
   18158:	cmp	r0, #0
   1815c:	bne	18180 <readstat_parse_sav+0xc2c>
   18160:	str	r7, [r4, #48]	; 0x30
   18164:	ldr	r3, [sp, #20]
   18168:	add	r4, r4, #72	; 0x48
   1816c:	add	r3, r3, #1
   18170:	str	r3, [sp, #20]
   18174:	b	18114 <readstat_parse_sav+0xbc0>
   18178:	mov	r6, r0
   1817c:	b	17e00 <readstat_parse_sav+0x8ac>
   18180:	mov	r6, r0
   18184:	ldr	r3, [sl, #20]
   18188:	cmp	r3, #0
   1818c:	beq	18204 <readstat_parse_sav+0xcb0>
   18190:	ldr	r2, [pc, #712]	; 18460 <readstat_parse_sav+0xf0c>
   18194:	ldr	ip, [sp, #72]	; 0x48
   18198:	add	r4, sp, #536	; 0x218
   1819c:	mov	r0, r4
   181a0:	ldr	r3, [sl, #368]	; 0x170
   181a4:	add	r2, pc, r2
   181a8:	mov	r1, #256	; 0x100
   181ac:	str	ip, [sp, #20]
   181b0:	bl	4280 <snprintf@plt>
   181b4:	mov	r7, #0
   181b8:	ldr	r1, [sp, #20]
   181bc:	add	r2, r9, #56	; 0x38
   181c0:	cmp	r1, r7
   181c4:	add	r3, r9, #48	; 0x30
   181c8:	add	r7, r7, #1
   181cc:	ble	18204 <readstat_parse_sav+0xcb0>
   181d0:	ldr	r1, [sl, #40]	; 0x28
   181d4:	add	r9, r9, #72	; 0x48
   181d8:	str	r1, [sp, #12]
   181dc:	ldr	r1, [r9, #-8]
   181e0:	str	r1, [sp, #8]
   181e4:	ldm	r2, {r0, r1}
   181e8:	stm	sp, {r0, r1}
   181ec:	mov	r0, r4
   181f0:	ldm	r3, {r2, r3}
   181f4:	ldr	r1, [sl, #20]
   181f8:	blx	r1
   181fc:	cmp	r0, #0
   18200:	beq	181b8 <readstat_parse_sav+0xc64>
   18204:	ldr	r3, [sl, #368]	; 0x170
   18208:	cmp	fp, #0
   1820c:	add	r3, r3, #1
   18210:	str	r3, [sl, #368]	; 0x170
   18214:	beq	18220 <readstat_parse_sav+0xccc>
   18218:	mov	r0, fp
   1821c:	bl	3ec0 <free@plt>
   18220:	cmp	r8, #0
   18224:	bne	17e00 <readstat_parse_sav+0x8ac>
   18228:	b	17e40 <readstat_parse_sav+0x8ec>
   1822c:	ldr	r0, [r4]
   18230:	ldr	r1, [r4, #4]
   18234:	ldr	r3, [sp, #48]	; 0x30
   18238:	stmia	r3!, {r0, r1}
   1823c:	ldrb	r3, [sl, #436]	; 0x1b4
   18240:	tst	r3, #1
   18244:	beq	18254 <readstat_parse_sav+0xd00>
   18248:	vldr	d0, [sp, #536]	; 0x218
   1824c:	bl	4508 <byteswap_double@plt>
   18250:	vstr	d0, [sp, #536]	; 0x218
   18254:	add	r7, sp, #536	; 0x218
   18258:	ldrd	r6, [r7]
   1825c:	ldr	r1, [sp, #40]	; 0x28
   18260:	strd	r6, [r4, #48]	; 0x30
   18264:	ldrd	r0, [r1, #-8]
   18268:	vmov	d7, r6, r7
   1826c:	mov	r3, r7
   18270:	cmp	r7, r1
   18274:	cmpeq	r6, r0
   18278:	vcmp.f64	d7, d7
   1827c:	ldrbeq	r1, [r4, #61]	; 0x3d
   18280:	orreq	r1, r1, #1
   18284:	strbeq	r1, [r4, #61]	; 0x3d
   18288:	ldr	r1, [sp, #40]	; 0x28
   1828c:	ldrd	r0, [r1]
   18290:	cmp	r7, r1
   18294:	cmpeq	r6, r0
   18298:	ldrbeq	r1, [r4, #61]	; 0x3d
   1829c:	orreq	r1, r1, #1
   182a0:	strbeq	r1, [r4, #61]	; 0x3d
   182a4:	add	r1, sl, #416	; 0x1a0
   182a8:	ldrd	r0, [r1, #-8]
   182ac:	cmp	r7, r1
   182b0:	cmpeq	r6, r0
   182b4:	ldrbeq	r3, [r4, #61]	; 0x3d
   182b8:	orreq	r3, r3, #1
   182bc:	strbeq	r3, [r4, #61]	; 0x3d
   182c0:	vmrs	APSR_nzcv, fpscr
   182c4:	ldrbvs	r3, [r4, #61]	; 0x3d
   182c8:	orrvs	r3, r3, #1
   182cc:	strbvs	r3, [r4, #61]	; 0x3d
   182d0:	b	18164 <readstat_parse_sav+0xc10>
   182d4:	mov	r6, #3
   182d8:	b	17df8 <readstat_parse_sav+0x8a4>
   182dc:	ldr	r0, [sp, #72]	; 0x48
   182e0:	bl	3d94 <byteswap4@plt>
   182e4:	str	r0, [sp, #72]	; 0x48
   182e8:	b	17dc8 <readstat_parse_sav+0x874>
   182ec:	ldr	fp, [sp, #16]
   182f0:	mov	r3, #3
   182f4:	mov	r4, r3
   182f8:	b	177d0 <readstat_parse_sav+0x27c>
   182fc:	ldr	r6, [sp, #32]
   18300:	b	18184 <readstat_parse_sav+0xc30>
   18304:	str	r6, [sp]
   18308:	mov	r2, r8
   1830c:	mov	r3, #8
   18310:	mov	r1, #65	; 0x41
   18314:	add	r0, r7, #196	; 0xc4
   18318:	bl	4238 <readstat_convert@plt>
   1831c:	subs	r6, r0, #0
   18320:	bne	17d48 <readstat_parse_sav+0x7f4>
   18324:	ldr	r2, [sp, #548]	; 0x224
   18328:	asr	r1, r2, #8
   1832c:	asr	r3, r2, #16
   18330:	uxtb	r1, r1
   18334:	uxtb	r3, r3
   18338:	uxtb	r2, r2
   1833c:	str	r3, [r7, #24]
   18340:	str	r1, [r7, #28]
   18344:	str	r2, [r7, #32]
   18348:	ldr	r2, [sp, #552]	; 0x228
   1834c:	asr	r1, r2, #16
   18350:	asr	r0, r2, #8
   18354:	uxtb	r1, r1
   18358:	cmp	r1, #1
   1835c:	cmpne	r3, #1
   18360:	moveq	r3, #1
   18364:	movne	r3, #0
   18368:	cmp	r4, #0
   1836c:	orrne	r3, r3, #1
   18370:	cmp	r3, #0
   18374:	moveq	r3, #5
   18378:	movne	r3, #0
   1837c:	uxtb	r0, r0
   18380:	uxtb	r2, r2
   18384:	str	r3, [r7]
   18388:	str	r1, [r7, #36]	; 0x24
   1838c:	str	r0, [r7, #40]	; 0x28
   18390:	str	r2, [r7, #44]	; 0x2c
   18394:	ldr	r3, [sp, #540]	; 0x21c
   18398:	cmp	r3, #0
   1839c:	bne	18410 <readstat_parse_sav+0xebc>
   183a0:	ldr	r0, [sp, #544]	; 0x220
   183a4:	cmp	r0, #0
   183a8:	bne	183e0 <readstat_parse_sav+0xe8c>
   183ac:	ldr	r2, [sl, #340]	; 0x154
   183b0:	ldr	r3, [sl, #344]	; 0x158
   183b4:	ldr	r0, [sl, #44]	; 0x2c
   183b8:	add	r1, r2, #1
   183bc:	add	r3, r3, #1
   183c0:	str	r7, [r0, r2, lsl #2]
   183c4:	str	r1, [sl, #340]	; 0x154
   183c8:	str	r3, [sl, #344]	; 0x158
   183cc:	b	17758 <readstat_parse_sav+0x204>
   183d0:	ldr	r0, [sp, #536]	; 0x218
   183d4:	bl	3d94 <byteswap4@plt>
   183d8:	mov	r4, r0
   183dc:	b	17ce0 <readstat_parse_sav+0x78c>
   183e0:	ldrb	r3, [sl, #436]	; 0x1b4
   183e4:	tst	r3, #1
   183e8:	beq	183f0 <readstat_parse_sav+0xe9c>
   183ec:	bl	3d94 <byteswap4@plt>
   183f0:	add	r3, r0, #3
   183f4:	cmp	r3, #6
   183f8:	str	r0, [r7, #52]	; 0x34
   183fc:	bls	18470 <readstat_parse_sav+0xf1c>
   18400:	mov	r3, #5
   18404:	ldr	fp, [sp, #16]
   18408:	mov	r4, r3
   1840c:	b	17ac0 <readstat_parse_sav+0x56c>
   18410:	ldr	r6, [sl, #36]	; 0x24
   18414:	mov	r1, #4
   18418:	add	r0, sp, #280	; 0x118
   1841c:	ldr	r3, [r6, #12]
   18420:	ldr	r2, [r6, #20]
   18424:	blx	r3
   18428:	cmp	r0, #3
   1842c:	bhi	18504 <readstat_parse_sav+0xfb0>
   18430:	mov	r3, #2
   18434:	ldr	fp, [sp, #16]
   18438:	mov	r4, r3
   1843c:	ldr	r0, [r7, #264]	; 0x108
   18440:	cmp	r0, #0
   18444:	beq	17ac0 <readstat_parse_sav+0x56c>
   18448:	bl	3ec0 <free@plt>
   1844c:	mov	r3, #0
   18450:	str	r3, [r7, #264]	; 0x108
   18454:	b	17ac0 <readstat_parse_sav+0x56c>
	...
   18460:	.word	0x0000e6d0
   18464:	.word	0x0000e0c0
   18468:	.word	0x0000da54
   1846c:	.word	0xffffdb24
   18470:	cmp	r0, #0
   18474:	ldr	r2, [r7]
   18478:	rsblt	r0, r0, #0
   1847c:	movlt	r3, #1
   18480:	movge	r3, #0
   18484:	strlt	r0, [r7, #52]	; 0x34
   18488:	cmp	r2, #5
   1848c:	str	r3, [r7, #56]	; 0x38
   18490:	beq	18604 <readstat_parse_sav+0x10b0>
   18494:	ldr	r8, [sl, #36]	; 0x24
   18498:	add	r4, r7, #88	; 0x58
   1849c:	mov	r9, #0
   184a0:	add	fp, sp, #280	; 0x118
   184a4:	ldr	r3, [r7, #52]	; 0x34
   184a8:	mov	r1, #8
   184ac:	cmp	r9, r3
   184b0:	mov	r0, fp
   184b4:	bge	183ac <readstat_parse_sav+0xe58>
   184b8:	ldr	r3, [r8, #12]
   184bc:	ldr	r2, [r8, #20]
   184c0:	blx	r3
   184c4:	add	r9, r9, #1
   184c8:	mov	r3, #8
   184cc:	mov	r2, fp
   184d0:	mov	r1, #33	; 0x21
   184d4:	cmp	r0, #7
   184d8:	mov	r0, r4
   184dc:	bls	185f4 <readstat_parse_sav+0x10a0>
   184e0:	ldr	ip, [sl, #336]	; 0x150
   184e4:	add	r4, r4, r1
   184e8:	str	ip, [sp]
   184ec:	bl	4238 <readstat_convert@plt>
   184f0:	cmp	r0, #0
   184f4:	beq	184a4 <readstat_parse_sav+0xf50>
   184f8:	ldr	fp, [sp, #16]
   184fc:	mov	r4, r0
   18500:	b	17ac0 <readstat_parse_sav+0x56c>
   18504:	ldrb	r3, [sl, #436]	; 0x1b4
   18508:	ldr	r0, [sp, #280]	; 0x118
   1850c:	tst	r3, #1
   18510:	beq	18518 <readstat_parse_sav+0xfc4>
   18514:	bl	3d94 <byteswap4@plt>
   18518:	cmp	r0, #0
   1851c:	str	r0, [sp, #280]	; 0x118
   18520:	beq	183a0 <readstat_parse_sav+0xe4c>
   18524:	add	r0, r0, #3
   18528:	bic	r9, r0, #3
   1852c:	mov	r0, r9
   18530:	bl	422c <readstat_malloc@plt>
   18534:	subs	r8, r0, #0
   18538:	beq	185e4 <readstat_parse_sav+0x1090>
   1853c:	ldr	r4, [sp, #280]	; 0x118
   18540:	lsl	r4, r4, #2
   18544:	add	r4, r4, #1
   18548:	mov	r0, r4
   1854c:	bl	422c <readstat_malloc@plt>
   18550:	cmp	r0, #0
   18554:	str	r0, [r7, #264]	; 0x108
   18558:	beq	185cc <readstat_parse_sav+0x1078>
   1855c:	ldr	r3, [r6, #12]
   18560:	ldr	r2, [r6, #20]
   18564:	mov	r1, r9
   18568:	mov	r0, r8
   1856c:	blx	r3
   18570:	cmp	r9, r0
   18574:	bls	18590 <readstat_parse_sav+0x103c>
   18578:	mov	r0, r8
   1857c:	ldr	fp, [sp, #16]
   18580:	bl	3ec0 <free@plt>
   18584:	mov	r3, #2
   18588:	mov	r4, r3
   1858c:	b	1843c <readstat_parse_sav+0xee8>
   18590:	ldr	r3, [sl, #336]	; 0x150
   18594:	mov	r1, r4
   18598:	str	r3, [sp]
   1859c:	mov	r2, r8
   185a0:	ldr	r3, [sp, #280]	; 0x118
   185a4:	ldr	r0, [r7, #264]	; 0x108
   185a8:	bl	4238 <readstat_convert@plt>
   185ac:	mov	r6, r0
   185b0:	mov	r0, r8
   185b4:	bl	3ec0 <free@plt>
   185b8:	cmp	r6, #0
   185bc:	beq	183a0 <readstat_parse_sav+0xe4c>
   185c0:	ldr	fp, [sp, #16]
   185c4:	mov	r4, r6
   185c8:	b	1843c <readstat_parse_sav+0xee8>
   185cc:	mov	r0, r8
   185d0:	ldr	fp, [sp, #16]
   185d4:	bl	3ec0 <free@plt>
   185d8:	mov	r3, #3
   185dc:	mov	r4, r3
   185e0:	b	1843c <readstat_parse_sav+0xee8>
   185e4:	mov	r3, #3
   185e8:	ldr	fp, [sp, #16]
   185ec:	mov	r4, r3
   185f0:	b	1843c <readstat_parse_sav+0xee8>
   185f4:	mov	r3, #2
   185f8:	ldr	fp, [sp, #16]
   185fc:	mov	r4, r3
   18600:	b	17ac0 <readstat_parse_sav+0x56c>
   18604:	ldr	r2, [sl, #36]	; 0x24
   18608:	ldr	r1, [r7, #52]	; 0x34
   1860c:	add	r4, r7, #64	; 0x40
   18610:	ldr	r3, [r2, #12]
   18614:	lsl	r1, r1, #3
   18618:	ldr	r2, [r2, #20]
   1861c:	mov	r0, r4
   18620:	blx	r3
   18624:	ldr	r3, [r7, #52]	; 0x34
   18628:	cmp	r0, r3, lsl #3
   1862c:	bcc	185f4 <readstat_parse_sav+0x10a0>
   18630:	mov	r8, #0
   18634:	cmp	r8, r3
   18638:	add	r6, sl, #400	; 0x190
   1863c:	add	r8, r8, #1
   18640:	bge	183ac <readstat_parse_sav+0xe58>
   18644:	ldrb	r3, [sl, #436]	; 0x1b4
   18648:	tst	r3, #1
   1864c:	beq	1865c <readstat_parse_sav+0x1108>
   18650:	vldr	d0, [r4]
   18654:	bl	4508 <byteswap_double@plt>
   18658:	vstr	d0, [r4]
   1865c:	ldr	r0, [r4]
   18660:	ldr	r1, [r4, #4]
   18664:	add	r3, sp, #280	; 0x118
   18668:	add	ip, sl, #416	; 0x1a0
   1866c:	stmia	r3!, {r0, r1}
   18670:	add	r3, sp, #288	; 0x120
   18674:	ldrd	r0, [r6, #-8]
   18678:	ldrd	r2, [r3, #-8]
   1867c:	add	r4, r4, #8
   18680:	cmp	r1, r3
   18684:	cmpeq	r0, r2
   18688:	ldrd	r0, [r6]
   1868c:	vstreq	d10, [r4, #-8]
   18690:	cmp	r3, r1
   18694:	cmpeq	r2, r0
   18698:	ldrd	r0, [ip, #-8]
   1869c:	vstreq	d9, [r4, #-8]
   186a0:	cmp	r3, r1
   186a4:	cmpeq	r2, r0
   186a8:	ldr	r3, [r7, #52]	; 0x34
   186ac:	vstreq	d8, [r4, #-8]
   186b0:	b	18634 <readstat_parse_sav+0x10e0>
   186b4:	mov	r3, #4
   186b8:	ldr	fp, [sp, #16]
   186bc:	mov	r4, r3
   186c0:	b	177d0 <readstat_parse_sav+0x27c>
   186c4:	bl	3d94 <byteswap4@plt>
   186c8:	ldrb	r3, [sl, #436]	; 0x1b4
   186cc:	b	17cd0 <readstat_parse_sav+0x77c>
   186d0:	bl	3d94 <byteswap4@plt>
   186d4:	ldrb	r3, [sl, #436]	; 0x1b4
   186d8:	b	17cc0 <readstat_parse_sav+0x76c>
   186dc:	ldr	r0, [sp, #88]	; 0x58
   186e0:	bl	3d94 <byteswap4@plt>
   186e4:	str	r0, [sp, #88]	; 0x58
   186e8:	b	179d8 <readstat_parse_sav+0x484>
   186ec:	ldr	r4, [sl, #36]	; 0x24
   186f0:	mov	r1, #4
   186f4:	add	r0, sp, #536	; 0x218
   186f8:	ldr	r3, [r4, #12]
   186fc:	ldr	r2, [r4, #20]
   18700:	blx	r3
   18704:	cmp	r0, #3
   18708:	bls	177c4 <readstat_parse_sav+0x270>
   1870c:	ldrb	r3, [sl, #436]	; 0x1b4
   18710:	tst	r3, #1
   18714:	beq	18724 <readstat_parse_sav+0x11d0>
   18718:	ldr	r0, [sp, #536]	; 0x218
   1871c:	bl	3d94 <byteswap4@plt>
   18720:	str	r0, [sp, #536]	; 0x218
   18724:	ldr	r2, [sp, #536]	; 0x218
   18728:	mov	r0, #80	; 0x50
   1872c:	ldr	r3, [r4, #8]
   18730:	mul	r0, r0, r2
   18734:	mov	r1, #1
   18738:	ldr	r2, [r4, #20]
   1873c:	blx	r3
   18740:	cmn	r0, #1
   18744:	bne	17758 <readstat_parse_sav+0x204>
   18748:	mov	r3, #15
   1874c:	ldr	fp, [sp, #16]
   18750:	mov	r4, r3
   18754:	b	177d0 <readstat_parse_sav+0x27c>
   18758:	mov	r1, r6
   1875c:	mov	r2, sl
   18760:	mov	r0, r5
   18764:	bl	42d4 <sav_parse_very_long_string_record@plt>
   18768:	subs	r6, r0, #0
   1876c:	beq	17758 <readstat_parse_sav+0x204>
   18770:	b	17e48 <readstat_parse_sav+0x8f4>
   18774:	mov	r1, r6
   18778:	mov	r2, sl
   1877c:	mov	r0, r5
   18780:	bl	41f0 <sav_parse_long_variable_names_record@plt>
   18784:	subs	r6, r0, #0
   18788:	beq	17758 <readstat_parse_sav+0x204>
   1878c:	b	17e48 <readstat_parse_sav+0x8f4>
   18790:	ldr	r3, [sl, #20]
   18794:	cmp	r3, #0
   18798:	beq	17758 <readstat_parse_sav+0x204>
   1879c:	cmp	r7, #1
   187a0:	bne	17ad4 <readstat_parse_sav+0x580>
   187a4:	add	r3, sp, #280	; 0x118
   187a8:	str	r3, [sp, #28]
   187ac:	ldr	r3, [pc, #-848]	; 18464 <readstat_parse_sav+0xf10>
   187b0:	add	r4, r5, r4
   187b4:	add	r3, pc, r3
   187b8:	str	r3, [sp, #40]	; 0x28
   187bc:	mov	r6, r5
   187c0:	add	r3, sp, #88	; 0x58
   187c4:	mov	r7, #0
   187c8:	str	r3, [sp, #48]	; 0x30
   187cc:	add	r3, sp, #96	; 0x60
   187d0:	str	r5, [sp, #72]	; 0x48
   187d4:	str	r7, [sp, #20]
   187d8:	str	r3, [sp, #52]	; 0x34
   187dc:	cmp	r4, r6
   187e0:	bls	18b48 <readstat_parse_sav+0x15f4>
   187e4:	mov	r2, #256	; 0x100
   187e8:	mov	r1, #0
   187ec:	ldr	r0, [sp, #28]
   187f0:	add	r8, sp, #536	; 0x218
   187f4:	bl	42a4 <memset@plt>
   187f8:	sub	r2, r4, r6
   187fc:	mov	r0, r8
   18800:	mov	r3, sl
   18804:	add	r1, sp, #72	; 0x48
   18808:	bl	56c4 <sav_read_pascal_string.constprop.5>
   1880c:	subs	r6, r0, #0
   18810:	bne	18b04 <readstat_parse_sav+0x15b0>
   18814:	mov	r9, r6
   18818:	ldr	fp, [sl, #340]	; 0x154
   1881c:	b	18840 <readstat_parse_sav+0x12ec>
   18820:	ldr	r3, [sl, #44]	; 0x2c
   18824:	ldr	r6, [r3, r9, lsl #2]
   18828:	add	r1, r6, #196	; 0xc4
   1882c:	bl	3e00 <strcmp@plt>
   18830:	cmp	r0, #0
   18834:	beq	188f8 <readstat_parse_sav+0x13a4>
   18838:	ldr	r3, [r6, #48]	; 0x30
   1883c:	add	r9, r9, r3
   18840:	cmp	r9, fp
   18844:	mov	r0, r8
   18848:	bcc	18820 <readstat_parse_sav+0x12cc>
   1884c:	b	1891c <readstat_parse_sav+0x13c8>
   18850:	cmp	r7, #1
   18854:	bne	17ad4 <readstat_parse_sav+0x580>
   18858:	add	r9, sp, #864	; 0x360
   1885c:	add	fp, r5, r4
   18860:	add	r3, sp, #536	; 0x218
   18864:	str	r5, [r9, #-584]!	; 0xfffffdb8
   18868:	str	r3, [sp, #28]
   1886c:	str	r5, [sp, #20]
   18870:	ldr	r2, [sp, #280]	; 0x118
   18874:	cmp	fp, r2
   18878:	bls	17acc <readstat_parse_sav+0x578>
   1887c:	sub	r2, fp, r2
   18880:	mov	r3, sl
   18884:	mov	r1, r9
   18888:	ldr	r0, [sp, #28]
   1888c:	bl	56c4 <sav_read_pascal_string.constprop.5>
   18890:	cmp	r0, #0
   18894:	bne	18b94 <readstat_parse_sav+0x1640>
   18898:	ldr	r7, [sp, #280]	; 0x118
   1889c:	cmp	fp, r7
   188a0:	beq	17978 <readstat_parse_sav+0x424>
   188a4:	add	r3, r7, #1
   188a8:	str	r3, [sp, #280]	; 0x118
   188ac:	ldrb	r6, [r7]
   188b0:	sub	r3, r6, #1
   188b4:	cmp	r3, #2
   188b8:	bhi	17978 <readstat_parse_sav+0x424>
   188bc:	mov	r5, r0
   188c0:	ldr	r8, [sl, #340]	; 0x154
   188c4:	b	188e8 <readstat_parse_sav+0x1394>
   188c8:	ldr	r3, [sl, #44]	; 0x2c
   188cc:	ldr	r4, [r3, r5, lsl #2]
   188d0:	add	r1, r4, #196	; 0xc4
   188d4:	bl	3e00 <strcmp@plt>
   188d8:	cmp	r0, #0
   188dc:	beq	178dc <readstat_parse_sav+0x388>
   188e0:	ldr	r3, [r4, #48]	; 0x30
   188e4:	add	r5, r5, r3
   188e8:	cmp	r5, r8
   188ec:	ldr	r0, [sp, #28]
   188f0:	bcc	188c8 <readstat_parse_sav+0x1374>
   188f4:	b	17970 <readstat_parse_sav+0x41c>
   188f8:	ldr	r1, [sl, #368]	; 0x170
   188fc:	ldr	r2, [sp, #40]	; 0x28
   18900:	add	r3, r1, #1
   18904:	str	r3, [sl, #368]	; 0x170
   18908:	ldr	r0, [sp, #28]
   1890c:	mov	r3, r1
   18910:	str	r1, [r6, #4]
   18914:	mov	r1, #256	; 0x100
   18918:	bl	4280 <snprintf@plt>
   1891c:	ldrb	r3, [sp, #280]	; 0x118
   18920:	cmp	r3, #0
   18924:	beq	18b50 <readstat_parse_sav+0x15fc>
   18928:	ldr	r6, [sp, #72]	; 0x48
   1892c:	add	r2, r6, #8
   18930:	mov	r3, r6
   18934:	cmp	r4, r2
   18938:	add	r6, r6, #4
   1893c:	str	r6, [sp, #72]	; 0x48
   18940:	bcc	18b50 <readstat_parse_sav+0x15fc>
   18944:	ldrb	r2, [sl, #436]	; 0x1b4
   18948:	ldr	fp, [r3, #4]
   1894c:	tst	r2, #1
   18950:	beq	18964 <readstat_parse_sav+0x1410>
   18954:	mov	r0, fp
   18958:	bl	3d94 <byteswap4@plt>
   1895c:	ldr	r6, [sp, #72]	; 0x48
   18960:	mov	fp, r0
   18964:	add	r6, r6, #4
   18968:	str	r6, [sp, #72]	; 0x48
   1896c:	mov	r2, r6
   18970:	mov	r6, r5
   18974:	mov	r5, r4
   18978:	ldr	r4, [sp, #48]	; 0x30
   1897c:	mov	r9, #0
   18980:	cmp	r9, fp
   18984:	beq	18b38 <readstat_parse_sav+0x15e4>
   18988:	add	r3, r2, #4
   1898c:	cmp	r5, r3
   18990:	bcc	18b2c <readstat_parse_sav+0x15d8>
   18994:	ldrb	r3, [sl, #436]	; 0x1b4
   18998:	ldr	r8, [r2]
   1899c:	tst	r3, #1
   189a0:	beq	189b4 <readstat_parse_sav+0x1460>
   189a4:	mov	r0, r8
   189a8:	bl	3d94 <byteswap4@plt>
   189ac:	ldr	r2, [sp, #72]	; 0x48
   189b0:	mov	r8, r0
   189b4:	lsl	r3, r8, #2
   189b8:	add	r3, r3, #1
   189bc:	add	r2, r2, #4
   189c0:	mov	r1, r3
   189c4:	ldr	r0, [sp, #20]
   189c8:	str	r3, [sp, #60]	; 0x3c
   189cc:	str	r2, [sp, #72]	; 0x48
   189d0:	bl	42e0 <readstat_realloc@plt>
   189d4:	subs	r3, r0, #0
   189d8:	str	r3, [sp, #20]
   189dc:	beq	18b64 <readstat_parse_sav+0x1610>
   189e0:	ldr	r2, [sp, #72]	; 0x48
   189e4:	add	r1, r2, r8
   189e8:	cmp	r5, r1
   189ec:	bcc	18b2c <readstat_parse_sav+0x15d8>
   189f0:	ldr	r3, [sp, #60]	; 0x3c
   189f4:	ldr	ip, [sl, #336]	; 0x150
   189f8:	mov	r1, r3
   189fc:	str	ip, [sp]
   18a00:	mov	r3, r8
   18a04:	bl	4238 <readstat_convert@plt>
   18a08:	subs	r3, r0, #0
   18a0c:	bne	18afc <readstat_parse_sav+0x15a8>
   18a10:	ldr	r2, [sp, #72]	; 0x48
   18a14:	add	r2, r2, r8
   18a18:	add	r3, r2, #4
   18a1c:	cmp	r5, r3
   18a20:	str	r2, [sp, #72]	; 0x48
   18a24:	bcc	18b2c <readstat_parse_sav+0x15d8>
   18a28:	ldrb	r3, [sl, #436]	; 0x1b4
   18a2c:	ldr	r8, [r2]
   18a30:	tst	r3, #1
   18a34:	beq	18a48 <readstat_parse_sav+0x14f4>
   18a38:	mov	r0, r8
   18a3c:	bl	3d94 <byteswap4@plt>
   18a40:	ldr	r2, [sp, #72]	; 0x48
   18a44:	mov	r8, r0
   18a48:	lsl	r3, r8, #2
   18a4c:	add	r3, r3, #1
   18a50:	add	r2, r2, #4
   18a54:	mov	r0, r7
   18a58:	mov	r1, r3
   18a5c:	str	r3, [sp, #60]	; 0x3c
   18a60:	str	r2, [sp, #72]	; 0x48
   18a64:	bl	42e0 <readstat_realloc@plt>
   18a68:	subs	r7, r0, #0
   18a6c:	beq	18b88 <readstat_parse_sav+0x1634>
   18a70:	ldr	r2, [sp, #72]	; 0x48
   18a74:	add	r1, r2, r8
   18a78:	cmp	r5, r1
   18a7c:	bcc	18b2c <readstat_parse_sav+0x15d8>
   18a80:	ldr	r3, [sp, #60]	; 0x3c
   18a84:	ldr	ip, [sl, #336]	; 0x150
   18a88:	mov	r1, r3
   18a8c:	str	ip, [sp]
   18a90:	mov	r3, r8
   18a94:	bl	4238 <readstat_convert@plt>
   18a98:	subs	r3, r0, #0
   18a9c:	bne	18afc <readstat_parse_sav+0x15a8>
   18aa0:	ldr	r2, [sp, #72]	; 0x48
   18aa4:	str	r3, [r4, #8]
   18aa8:	add	r8, r2, r8
   18aac:	ldr	r2, [sp, #52]	; 0x34
   18ab0:	str	r3, [r4, #12]
   18ab4:	str	r8, [sp, #72]	; 0x48
   18ab8:	ldm	r2, {r0, r1}
   18abc:	ldr	r2, [sp, #20]
   18ac0:	str	r2, [sp, #88]	; 0x58
   18ac4:	ldr	r2, [sl, #40]	; 0x28
   18ac8:	str	r3, [r4, #4]
   18acc:	stm	sp, {r0, r1}
   18ad0:	str	r2, [sp, #12]
   18ad4:	str	r7, [sp, #8]
   18ad8:	ldr	r0, [sp, #28]
   18adc:	ldm	r4, {r2, r3}
   18ae0:	ldr	r1, [sl, #20]
   18ae4:	blx	r1
   18ae8:	cmp	r0, #0
   18aec:	bne	18b58 <readstat_parse_sav+0x1604>
   18af0:	add	r9, r9, #1
   18af4:	ldr	r2, [sp, #72]	; 0x48
   18af8:	b	18980 <readstat_parse_sav+0x142c>
   18afc:	mov	r5, r6
   18b00:	mov	r6, r3
   18b04:	ldr	r3, [sp, #20]
   18b08:	cmp	r3, #0
   18b0c:	beq	18b18 <readstat_parse_sav+0x15c4>
   18b10:	mov	r0, r3
   18b14:	bl	3ec0 <free@plt>
   18b18:	cmp	r7, #0
   18b1c:	beq	17e40 <readstat_parse_sav+0x8ec>
   18b20:	mov	r0, r7
   18b24:	bl	3ec0 <free@plt>
   18b28:	b	17e40 <readstat_parse_sav+0x8ec>
   18b2c:	mov	r5, r6
   18b30:	mov	r6, #5
   18b34:	b	18b04 <readstat_parse_sav+0x15b0>
   18b38:	mov	r4, r5
   18b3c:	mov	r5, r6
   18b40:	mov	r6, r2
   18b44:	b	187dc <readstat_parse_sav+0x1288>
   18b48:	ldreq	r6, [sp, #32]
   18b4c:	beq	18b04 <readstat_parse_sav+0x15b0>
   18b50:	mov	r6, #5
   18b54:	b	18b04 <readstat_parse_sav+0x15b0>
   18b58:	mov	r5, r6
   18b5c:	mov	r6, #4
   18b60:	b	18b04 <readstat_parse_sav+0x15b0>
   18b64:	cmp	r7, #0
   18b68:	ldr	fp, [sp, #16]
   18b6c:	mov	r5, r6
   18b70:	beq	182f0 <readstat_parse_sav+0xd9c>
   18b74:	mov	r0, r7
   18b78:	bl	3ec0 <free@plt>
   18b7c:	mov	r3, #3
   18b80:	mov	r4, r3
   18b84:	b	177d0 <readstat_parse_sav+0x27c>
   18b88:	mov	r5, r6
   18b8c:	mov	r6, #3
   18b90:	b	18b04 <readstat_parse_sav+0x15b0>
   18b94:	ldr	r3, [sp, #20]
   18b98:	ldr	fp, [sp, #16]
   18b9c:	mov	r5, r3
   18ba0:	mov	r4, r0
   18ba4:	b	177d0 <readstat_parse_sav+0x27c>
   18ba8:	cmp	r7, #4
   18bac:	bne	17ad4 <readstat_parse_sav+0x580>
   18bb0:	lsl	r1, r6, #2
   18bb4:	ldr	r0, [sl, #328]	; 0x148
   18bb8:	bl	42e0 <readstat_realloc@plt>
   18bbc:	adds	r4, r6, #0
   18bc0:	movne	r4, #1
   18bc4:	cmp	r0, #0
   18bc8:	movne	r4, #0
   18bcc:	cmp	r4, #0
   18bd0:	str	r0, [sl, #328]	; 0x148
   18bd4:	bne	182ec <readstat_parse_sav+0xd98>
   18bd8:	str	r6, [sl, #332]	; 0x14c
   18bdc:	cmp	r4, r6
   18be0:	beq	17758 <readstat_parse_sav+0x204>
   18be4:	ldrb	r3, [sl, #436]	; 0x1b4
   18be8:	lsl	r7, r4, #2
   18bec:	ldr	r8, [sl, #328]	; 0x148
   18bf0:	tst	r3, #1
   18bf4:	ldr	r0, [r5, r4, lsl #2]
   18bf8:	beq	18c00 <readstat_parse_sav+0x16ac>
   18bfc:	bl	3d94 <byteswap4@plt>
   18c00:	add	r4, r4, #1
   18c04:	str	r0, [r8, r7]
   18c08:	b	18bdc <readstat_parse_sav+0x1688>
   18c0c:	cmp	r6, #3
   18c10:	cmpeq	r7, #8
   18c14:	bne	17ad4 <readstat_parse_sav+0x580>
   18c18:	ldrb	r0, [r5, #1]
   18c1c:	ldrb	r3, [r5, #5]
   18c20:	ldrb	r6, [r5, #2]
   18c24:	ldrb	r1, [r5]
   18c28:	ldrb	r2, [r5, #4]
   18c2c:	ldrb	lr, [r5, #6]
   18c30:	orr	r1, r1, r0, lsl #8
   18c34:	orr	r2, r2, r3, lsl #8
   18c38:	ldrb	ip, [r5, #13]
   18c3c:	orr	r9, r1, r6, lsl #16
   18c40:	orr	lr, r2, lr, lsl #16
   18c44:	ldrb	r4, [r5, #9]
   18c48:	ldrb	r1, [r5, #12]
   18c4c:	ldrb	r2, [r5, #14]
   18c50:	ldrb	r0, [r5, #10]
   18c54:	ldrb	r3, [r5, #8]
   18c58:	orr	r1, r1, ip, lsl #8
   18c5c:	orr	r2, r1, r2, lsl #16
   18c60:	orr	r3, r3, r4, lsl #8
   18c64:	ldrb	r7, [r5, #17]
   18c68:	ldrb	r8, [r5, #21]
   18c6c:	orr	fp, r3, r0, lsl #16
   18c70:	ldrb	r6, [r5, #3]
   18c74:	ldrb	r3, [r5, #18]
   18c78:	str	r2, [sp, #20]
   18c7c:	ldrb	ip, [r5, #16]
   18c80:	ldrb	r0, [r5, #20]
   18c84:	ldrb	r2, [r5, #22]
   18c88:	ldrb	r1, [r5, #7]
   18c8c:	orr	r0, r0, r8, lsl #8
   18c90:	orr	ip, ip, r7, lsl #8
   18c94:	orr	ip, ip, r3, lsl #16
   18c98:	orr	r2, r0, r2, lsl #16
   18c9c:	ldrb	r8, [r5, #11]
   18ca0:	ldrb	r7, [r5, #15]
   18ca4:	orr	r0, r9, r6, lsl #24
   18ca8:	ldrb	r4, [r5, #23]
   18cac:	ldrb	r6, [r5, #19]
   18cb0:	ldrb	r3, [sl, #436]	; 0x1b4
   18cb4:	orr	r1, lr, r1, lsl #24
   18cb8:	ldr	lr, [sp, #20]
   18cbc:	tst	r3, #1
   18cc0:	orr	r8, fp, r8, lsl #24
   18cc4:	orr	r7, lr, r7, lsl #24
   18cc8:	orr	r6, ip, r6, lsl #24
   18ccc:	orr	r4, r2, r4, lsl #24
   18cd0:	beq	18cdc <readstat_parse_sav+0x1788>
   18cd4:	bl	3d7c <byteswap8@plt>
   18cd8:	ldrb	r3, [sl, #436]	; 0x1b4
   18cdc:	add	r9, sl, #400	; 0x190
   18ce0:	tst	r3, #1
   18ce4:	stmdb	r9, {r0, r1}
   18ce8:	beq	18d04 <readstat_parse_sav+0x17b0>
   18cec:	mov	r0, r8
   18cf0:	mov	r1, r7
   18cf4:	bl	3d7c <byteswap8@plt>
   18cf8:	ldrb	r3, [sl, #436]	; 0x1b4
   18cfc:	mov	r8, r0
   18d00:	mov	r7, r1
   18d04:	add	r2, sl, #416	; 0x1a0
   18d08:	tst	r3, #1
   18d0c:	str	r8, [r2, #-8]
   18d10:	str	r7, [r2, #-4]
   18d14:	beq	18d2c <readstat_parse_sav+0x17d8>
   18d18:	mov	r0, r6
   18d1c:	mov	r1, r4
   18d20:	bl	3d7c <byteswap8@plt>
   18d24:	mov	r6, r0
   18d28:	mov	r4, r1
   18d2c:	str	r6, [sl, #400]	; 0x190
   18d30:	str	r4, [r9, #4]
   18d34:	b	17758 <readstat_parse_sav+0x204>
   18d38:	str	r6, [sp, #580]	; 0x244
   18d3c:	ldr	r3, [sl]
   18d40:	ldr	r1, [sl, #40]	; 0x28
   18d44:	ldr	r0, [sp, #16]
   18d48:	blx	r3
   18d4c:	cmp	r0, #0
   18d50:	movne	r0, #4
   18d54:	bne	17c84 <readstat_parse_sav+0x730>
   18d58:	ldr	r3, [sl, #328]	; 0x148
   18d5c:	cmp	r3, #0
   18d60:	beq	18e08 <readstat_parse_sav+0x18b4>
   18d64:	ldr	r4, [sl, #340]	; 0x154
   18d68:	ldr	r0, [sl, #332]	; 0x14c
   18d6c:	lsl	r3, r4, #1
   18d70:	cmp	r0, r3
   18d74:	beq	18d84 <readstat_parse_sav+0x1830>
   18d78:	add	r3, r3, r4
   18d7c:	cmp	r0, r3
   18d80:	bne	178d4 <readstat_parse_sav+0x380>
   18d84:	cmp	r4, #0
   18d88:	ble	18e08 <readstat_parse_sav+0x18b4>
   18d8c:	mov	r1, r4
   18d90:	bl	24fa0 <__divsi3>
   18d94:	mov	r5, #0
   18d98:	sub	r6, r0, #3
   18d9c:	clz	r6, r6
   18da0:	lsr	r6, r6, #5
   18da4:	add	r3, r6, #2
   18da8:	str	r3, [sp, #20]
   18dac:	b	18df8 <readstat_parse_sav+0x18a4>
   18db0:	ldr	r2, [sl, #328]	; 0x148
   18db4:	ldr	r3, [sl, #44]	; 0x2c
   18db8:	add	r4, r8, #1
   18dbc:	ldr	r0, [r2, r8, lsl #2]
   18dc0:	ldr	r7, [r3, r5, lsl #2]
   18dc4:	bl	43ac <spss_measure_to_readstat_measure@plt>
   18dc8:	ldr	r3, [sl, #328]	; 0x148
   18dcc:	cmp	r6, #0
   18dd0:	ldrne	r2, [r3, r4, lsl #2]
   18dd4:	addne	r4, r8, #2
   18dd8:	str	r0, [r7, #268]	; 0x10c
   18ddc:	strne	r2, [r7, #276]	; 0x114
   18de0:	ldr	r0, [r3, r4, lsl #2]
   18de4:	bl	4388 <spss_alignment_to_readstat_alignment@plt>
   18de8:	ldr	r3, [r7, #48]	; 0x30
   18dec:	ldr	r4, [sl, #340]	; 0x154
   18df0:	add	r5, r5, r3
   18df4:	str	r0, [r7, #272]	; 0x110
   18df8:	ldr	r3, [sp, #20]
   18dfc:	cmp	r5, r4
   18e00:	mul	r8, r5, r3
   18e04:	blt	18db0 <readstat_parse_sav+0x185c>
   18e08:	ldr	r3, [sl, #8]
   18e0c:	cmp	r3, #0
   18e10:	beq	18ed0 <readstat_parse_sav+0x197c>
   18e14:	mov	r5, #0
   18e18:	ldr	r3, [pc, #-2488]	; 18468 <readstat_parse_sav+0xf14>
   18e1c:	mov	r6, r5
   18e20:	add	r3, pc, r3
   18e24:	str	r3, [sp, #20]
   18e28:	ldr	r3, [sl, #340]	; 0x154
   18e2c:	mov	r1, r5
   18e30:	cmp	r6, r3
   18e34:	bge	18ed0 <readstat_parse_sav+0x197c>
   18e38:	ldr	r3, [sl, #44]	; 0x2c
   18e3c:	ldr	r2, [sl, #336]	; 0x150
   18e40:	ldr	r7, [sl, #52]	; 0x34
   18e44:	ldr	r4, [r3, r6, lsl #2]
   18e48:	mov	r0, r4
   18e4c:	ldr	r8, [r4, #8]
   18e50:	bl	4274 <spss_init_variable_for_info@plt>
   18e54:	ldr	r3, [r4, #4]
   18e58:	ldr	r2, [sp, #20]
   18e5c:	mov	r1, #256	; 0x100
   18e60:	str	r0, [r7, r8, lsl #2]
   18e64:	ldr	r7, [sp, #16]
   18e68:	mov	r0, r7
   18e6c:	bl	4280 <snprintf@plt>
   18e70:	ldr	r3, [r4, #8]
   18e74:	ldr	r2, [r4, #4]
   18e78:	ldr	r1, [sl, #52]	; 0x34
   18e7c:	cmn	r2, #1
   18e80:	mov	r0, r3
   18e84:	ldr	r1, [r1, r3, lsl #2]
   18e88:	mov	r3, r7
   18e8c:	moveq	r3, #0
   18e90:	mov	r2, r3
   18e94:	ldr	r7, [sl, #8]
   18e98:	ldr	r3, [sl, #40]	; 0x28
   18e9c:	blx	r7
   18ea0:	cmp	r0, #1
   18ea4:	beq	18f1c <readstat_parse_sav+0x19c8>
   18ea8:	cmp	r0, #2
   18eac:	addne	r5, r5, #1
   18eb0:	ldreq	r2, [r4, #8]
   18eb4:	ldreq	r3, [sl, #52]	; 0x34
   18eb8:	ldreq	r3, [r3, r2, lsl #2]
   18ebc:	moveq	r2, #1
   18ec0:	streq	r2, [r3, #2144]	; 0x860
   18ec4:	ldr	r3, [r4, #48]	; 0x30
   18ec8:	add	r6, r6, r3
   18ecc:	b	18e28 <readstat_parse_sav+0x18d4>
   18ed0:	ldr	r4, [sl, #12]
   18ed4:	cmp	r4, #0
   18ed8:	beq	18f40 <readstat_parse_sav+0x19ec>
   18edc:	ldr	r3, [sl, #372]	; 0x174
   18ee0:	cmp	r3, #0
   18ee4:	blt	18f40 <readstat_parse_sav+0x19ec>
   18ee8:	ldr	r0, [sl, #340]	; 0x154
   18eec:	sub	r2, r3, #1
   18ef0:	mov	r3, #0
   18ef4:	cmp	r3, r0
   18ef8:	bge	18f40 <readstat_parse_sav+0x19ec>
   18efc:	ldr	r1, [sl, #44]	; 0x2c
   18f00:	ldr	r1, [r1, r3, lsl #2]
   18f04:	ldr	ip, [r1, #12]
   18f08:	cmp	ip, r2
   18f0c:	beq	18f24 <readstat_parse_sav+0x19d0>
   18f10:	ldr	r1, [r1, #48]	; 0x30
   18f14:	add	r3, r3, r1
   18f18:	b	18ef4 <readstat_parse_sav+0x19a0>
   18f1c:	mov	r9, #4
   18f20:	b	1767c <readstat_parse_sav+0x128>
   18f24:	ldr	r2, [r1, #8]
   18f28:	ldr	r3, [sl, #52]	; 0x34
   18f2c:	ldr	r1, [sl, #40]	; 0x28
   18f30:	ldr	r0, [r3, r2, lsl #2]
   18f34:	blx	r4
   18f38:	cmp	r0, #0
   18f3c:	bne	18f1c <readstat_parse_sav+0x19c8>
   18f40:	ldr	r3, [sl, #16]
   18f44:	cmp	r3, #0
   18f48:	beq	1767c <readstat_parse_sav+0x128>
   18f4c:	ldr	r0, [sl, #340]	; 0x154
   18f50:	mov	r3, #0
   18f54:	mov	r4, #256	; 0x100
   18f58:	cmp	r3, r0
   18f5c:	bge	18f80 <readstat_parse_sav+0x1a2c>
   18f60:	ldr	r2, [sl, #44]	; 0x2c
   18f64:	ldr	r1, [r2, r3, lsl #2]
   18f68:	ldr	r2, [r1, #20]
   18f6c:	ldr	r1, [r1, #48]	; 0x30
   18f70:	cmp	r4, r2
   18f74:	movcc	r4, r2
   18f78:	add	r3, r3, r1
   18f7c:	b	18f58 <readstat_parse_sav+0x1a04>
   18f80:	add	r0, r4, #7
   18f84:	str	r0, [sl, #380]	; 0x17c
   18f88:	bl	422c <readstat_malloc@plt>
   18f8c:	add	r3, r4, #2
   18f90:	lsl	r3, r3, #2
   18f94:	str	r3, [sl, #388]	; 0x184
   18f98:	str	r0, [sl, #376]	; 0x178
   18f9c:	mov	r0, r3
   18fa0:	bl	422c <readstat_malloc@plt>
   18fa4:	ldr	r4, [sl, #376]	; 0x178
   18fa8:	cmp	r0, #0
   18fac:	cmpne	r4, #0
   18fb0:	str	r0, [sl, #384]	; 0x180
   18fb4:	moveq	r4, #1
   18fb8:	movne	r4, #0
   18fbc:	beq	17ca8 <readstat_parse_sav+0x754>
   18fc0:	ldr	r3, [sl, #428]	; 0x1ac
   18fc4:	cmp	r3, #1
   18fc8:	beq	190cc <readstat_parse_sav+0x1b78>
   18fcc:	cmp	r3, #2
   18fd0:	beq	190dc <readstat_parse_sav+0x1b88>
   18fd4:	ldr	r5, [sl, #344]	; 0x158
   18fd8:	ldr	r7, [sl, #36]	; 0x24
   18fdc:	lsl	r5, r5, #3
   18fe0:	mov	r0, r5
   18fe4:	bl	422c <readstat_malloc@plt>
   18fe8:	mov	r6, r0
   18fec:	ldr	r0, [sl, #360]	; 0x168
   18ff0:	cmp	r0, #0
   18ff4:	bne	1906c <readstat_parse_sav+0x1b18>
   18ff8:	ldr	r3, [sl, #356]	; 0x164
   18ffc:	cmn	r3, #1
   19000:	beq	19010 <readstat_parse_sav+0x1abc>
   19004:	ldr	r2, [sl, #364]	; 0x16c
   19008:	cmp	r3, r2
   1900c:	ble	190f4 <readstat_parse_sav+0x1ba0>
   19010:	ldr	r3, [sl, #36]	; 0x24
   19014:	ldr	r1, [sl, #28]
   19018:	ldr	r2, [sl, #40]	; 0x28
   1901c:	ldr	r4, [r3, #16]
   19020:	ldr	r0, [sl, #32]
   19024:	ldr	r3, [r3, #20]
   19028:	blx	r4
   1902c:	mov	r1, r5
   19030:	subs	r4, r0, #0
   19034:	mov	r0, r6
   19038:	bne	19090 <readstat_parse_sav+0x1b3c>
   1903c:	ldr	r2, [r7, #20]
   19040:	ldr	r3, [r7, #12]
   19044:	blx	r3
   19048:	mov	r2, sl
   1904c:	mov	r1, r5
   19050:	cmp	r5, r0
   19054:	mov	r0, r6
   19058:	bne	190f4 <readstat_parse_sav+0x1ba0>
   1905c:	bl	16c10 <sav_process_row>
   19060:	subs	r4, r0, #0
   19064:	beq	18ff8 <readstat_parse_sav+0x1aa4>
   19068:	b	19090 <readstat_parse_sav+0x1b3c>
   1906c:	mul	r0, r5, r0
   19070:	ldr	r3, [r7, #8]
   19074:	ldr	r2, [r7, #20]
   19078:	mov	r1, #1
   1907c:	blx	r3
   19080:	cmn	r0, #1
   19084:	strne	r4, [sl, #360]	; 0x168
   19088:	bne	18ff8 <readstat_parse_sav+0x1aa4>
   1908c:	mov	r4, #15
   19090:	cmp	r6, #0
   19094:	beq	19104 <readstat_parse_sav+0x1bb0>
   19098:	mov	r0, r6
   1909c:	bl	3ec0 <free@plt>
   190a0:	cmp	r4, #0
   190a4:	bne	19104 <readstat_parse_sav+0x1bb0>
   190a8:	ldr	r3, [sl, #352]	; 0x160
   190ac:	cmn	r3, #1
   190b0:	beq	1767c <readstat_parse_sav+0x128>
   190b4:	ldr	r2, [sl, #364]	; 0x16c
   190b8:	ldr	r3, [sl, #356]	; 0x164
   190bc:	cmp	r2, r3
   190c0:	movne	r9, #9
   190c4:	moveq	r9, #0
   190c8:	b	1767c <readstat_parse_sav+0x128>
   190cc:	mov	r0, sl
   190d0:	bl	5748 <sav_read_compressed_data.constprop.6>
   190d4:	mov	r4, r0
   190d8:	b	190a0 <readstat_parse_sav+0x1b4c>
   190dc:	ldr	r1, [pc, #-3192]	; 1846c <readstat_parse_sav+0xf18>
   190e0:	mov	r0, sl
   190e4:	add	r1, pc, r1
   190e8:	bl	44c0 <zsav_read_compressed_data@plt>
   190ec:	mov	r4, r0
   190f0:	b	190a0 <readstat_parse_sav+0x1b4c>
   190f4:	cmp	r6, #0
   190f8:	movne	r4, r9
   190fc:	bne	19098 <readstat_parse_sav+0x1b44>
   19100:	b	190a8 <readstat_parse_sav+0x1b54>
   19104:	mov	r9, r4
   19108:	b	1767c <readstat_parse_sav+0x128>

0001910c <sav_metadata_ok>:
   1910c:	ldr	r3, [r0, #8]
   19110:	cmp	r3, #2
   19114:	beq	19128 <sav_metadata_ok+0x1c>
   19118:	cmp	r3, #3
   1911c:	movne	r0, #24
   19120:	moveq	r0, #0
   19124:	bx	lr
   19128:	ldr	r0, [r0, #16]
   1912c:	cmp	r0, #2
   19130:	moveq	r0, #6
   19134:	movne	r0, #0
   19138:	bx	lr

0001913c <sav_write_compressed_row>:
   1913c:	push	{r4, r5, r6, lr}
   19140:	mov	r3, r0
   19144:	ldr	r5, [r0, #300]	; 0x12c
   19148:	mov	r4, r0
   1914c:	mov	r0, r5
   19150:	bl	4460 <sav_compress_row@plt>
   19154:	mov	r1, r5
   19158:	mov	r2, r0
   1915c:	mov	r0, r4
   19160:	pop	{r4, r5, r6, lr}
   19164:	b	4454 <readstat_write_bytes@plt>

00019168 <sav_write_missing_string>:
   19168:	ldr	r2, [r1, #1596]	; 0x63c
   1916c:	push	{r4, lr}
   19170:	mov	r1, #32
   19174:	bl	42a4 <memset@plt>
   19178:	mov	r0, #0
   1917c:	pop	{r4, pc}

00019180 <sav_write_missing_number>:
   19180:	push	{r4, r5}
   19184:	sub	sp, sp, #8
   19188:	add	r3, sp, #8
   1918c:	mvn	r4, #0
   19190:	mvn	r5, #1048576	; 0x100000
   19194:	mov	r2, r0
   19198:	strd	r4, [r3, #-8]!
   1919c:	ldm	r3!, {r0, r1}
   191a0:	str	r0, [r2]
   191a4:	str	r1, [r2, #4]
   191a8:	mov	r0, #0
   191ac:	add	sp, sp, #8
   191b0:	pop	{r4, r5}
   191b4:	bx	lr

000191b8 <sav_write_double>:
   191b8:	sub	sp, sp, #8
   191bc:	add	r3, sp, #8
   191c0:	mov	r2, r0
   191c4:	vstmdb	r3!, {d0}
   191c8:	ldm	r3!, {r0, r1}
   191cc:	str	r0, [r2]
   191d0:	str	r1, [r2, #4]
   191d4:	mov	r0, #0
   191d8:	add	sp, sp, #8
   191dc:	bx	lr

000191e0 <sav_write_float>:
   191e0:	vcvt.f64.f32	d0, s0
   191e4:	sub	sp, sp, #8
   191e8:	add	r3, sp, #8
   191ec:	mov	r2, r0
   191f0:	vstmdb	r3!, {d0}
   191f4:	ldm	r3!, {r0, r1}
   191f8:	str	r0, [r2]
   191fc:	str	r1, [r2, #4]
   19200:	mov	r0, #0
   19204:	add	sp, sp, #8
   19208:	bx	lr

0001920c <sav_write_int32>:
   1920c:	vmov	s15, r2
   19210:	sub	sp, sp, #8
   19214:	add	r3, sp, #8
   19218:	mov	r2, r0
   1921c:	vcvt.f64.s32	d7, s15
   19220:	vstmdb	r3!, {d7}
   19224:	ldm	r3!, {r0, r1}
   19228:	str	r0, [r2]
   1922c:	str	r1, [r2, #4]
   19230:	mov	r0, #0
   19234:	add	sp, sp, #8
   19238:	bx	lr

0001923c <sav_write_int16>:
   1923c:	vmov	s15, r2
   19240:	sub	sp, sp, #8
   19244:	add	r3, sp, #8
   19248:	mov	r2, r0
   1924c:	vcvt.f64.s32	d7, s15
   19250:	vstmdb	r3!, {d7}
   19254:	ldm	r3!, {r0, r1}
   19258:	str	r0, [r2]
   1925c:	str	r1, [r2, #4]
   19260:	mov	r0, #0
   19264:	add	sp, sp, #8
   19268:	bx	lr

0001926c <sav_write_int8>:
   1926c:	vmov	s15, r2
   19270:	sub	sp, sp, #8
   19274:	add	r3, sp, #8
   19278:	mov	r2, r0
   1927c:	vcvt.f64.s32	d7, s15
   19280:	vstmdb	r3!, {d7}
   19284:	ldm	r3!, {r0, r1}
   19288:	str	r0, [r2]
   1928c:	str	r1, [r2, #4]
   19290:	mov	r0, #0
   19294:	add	sp, sp, #8
   19298:	bx	lr

0001929c <readstat_label_set_number_short_variables>:
   1929c:	ldr	r3, [r0, #276]	; 0x114
   192a0:	push	{r4, r5, r6, lr}
   192a4:	cmp	r3, #0
   192a8:	ble	192e8 <readstat_label_set_number_short_variables+0x4c>
   192ac:	mov	r4, #0
   192b0:	mov	r5, r0
   192b4:	mov	r6, r4
   192b8:	mov	r1, r4
   192bc:	mov	r0, r5
   192c0:	bl	4448 <readstat_get_label_set_variable@plt>
   192c4:	add	r4, r4, #1
   192c8:	ldr	r3, [r0, #1596]	; 0x63c
   192cc:	cmp	r3, #8
   192d0:	ldr	r3, [r5, #276]	; 0x114
   192d4:	addls	r6, r6, #1
   192d8:	cmp	r3, r4
   192dc:	bgt	192b8 <readstat_label_set_number_short_variables+0x1c>
   192e0:	mov	r0, r6
   192e4:	pop	{r4, r5, r6, pc}
   192e8:	mov	r6, #0
   192ec:	b	192e0 <readstat_label_set_number_short_variables+0x44>

000192f0 <sav_variable_width>:
   192f0:	cmp	r0, #0
   192f4:	beq	19300 <sav_variable_width+0x10>
   192f8:	mov	r0, #8
   192fc:	bx	lr
   19300:	cmp	r1, #255	; 0xff
   19304:	bhi	1931c <sav_variable_width+0x2c>
   19308:	cmp	r1, #0
   1930c:	beq	192f8 <sav_variable_width+0x8>
   19310:	add	r0, r1, #7
   19314:	bic	r0, r0, #7
   19318:	bx	lr
   1931c:	add	r3, r1, #251	; 0xfb
   19320:	ldr	r2, [pc, #44]	; 19354 <sav_variable_width+0x64>
   19324:	lsr	r3, r3, #2
   19328:	add	r0, r1, #256	; 0x100
   1932c:	umull	r2, r3, r2, r3
   19330:	add	r0, r0, #3
   19334:	lsr	r3, r3, #3
   19338:	add	r1, r3, #16777216	; 0x1000000
   1933c:	sub	r3, r3, r3, lsl #6
   19340:	sub	r1, r1, #1
   19344:	add	r0, r0, r3, lsl #2
   19348:	bic	r0, r0, #7
   1934c:	add	r0, r0, r1, lsl #8
   19350:	bx	lr
   19354:	.word	0x20820821

00019358 <sav_write_string>:
   19358:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1935c:	mov	r4, r1
   19360:	mov	r6, r2
   19364:	mov	r1, #32
   19368:	ldr	r2, [r4, #1596]	; 0x63c
   1936c:	mov	r7, r0
   19370:	bl	42a4 <memset@plt>
   19374:	cmp	r6, #0
   19378:	beq	193c0 <sav_write_string+0x68>
   1937c:	ldrb	r0, [r6]
   19380:	cmp	r0, #0
   19384:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   19388:	mov	r0, r6
   1938c:	bl	41fc <strlen@plt>
   19390:	ldr	r3, [r4, #1596]	; 0x63c
   19394:	cmp	r0, r3
   19398:	mov	r8, r0
   1939c:	bls	193c8 <sav_write_string+0x70>
   193a0:	mov	r0, #22
   193a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   193a8:	mov	r4, #0
   193ac:	mov	r1, r4
   193b0:	mov	r2, r0
   193b4:	add	r1, r6, r1
   193b8:	add	r0, r7, r4
   193bc:	bl	3f20 <memcpy@plt>
   193c0:	mov	r0, #0
   193c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   193c8:	cmp	r0, #255	; 0xff
   193cc:	bls	193a8 <sav_write_string+0x50>
   193d0:	mov	r5, #0
   193d4:	mov	r4, r5
   193d8:	mov	r9, #255	; 0xff
   193dc:	add	r1, r6, r5
   193e0:	mov	r2, r9
   193e4:	add	r0, r7, r4
   193e8:	bl	3f20 <memcpy@plt>
   193ec:	add	r1, r5, #255	; 0xff
   193f0:	sub	r2, r8, r1
   193f4:	cmp	r2, #255	; 0xff
   193f8:	add	r4, r4, #256	; 0x100
   193fc:	mov	r5, r1
   19400:	bhi	193dc <sav_write_string+0x84>
   19404:	add	r1, r6, r1
   19408:	add	r0, r7, r4
   1940c:	bl	3f20 <memcpy@plt>
   19410:	b	193c0 <sav_write_string+0x68>

00019414 <sav_variable_ok>:
   19414:	push	{r4, r5, r6, lr}
   19418:	add	r4, r0, #8
   1941c:	mov	r5, r0
   19420:	mov	r0, r4
   19424:	bl	41fc <strlen@plt>
   19428:	cmp	r0, #64	; 0x40
   1942c:	bhi	19460 <sav_variable_ok+0x4c>
   19430:	cmp	r0, #0
   19434:	bne	19440 <sav_variable_ok+0x2c>
   19438:	mov	r0, #38	; 0x26
   1943c:	pop	{r4, r5, r6, pc}
   19440:	ldr	r1, [pc, #492]	; 19634 <sav_variable_ok+0x220>
   19444:	mov	r0, r4
   19448:	add	r1, pc, r1
   1944c:	bl	3e00 <strcmp@plt>
   19450:	cmp	r0, #0
   19454:	bne	19468 <sav_variable_ok+0x54>
   19458:	mov	r0, #27
   1945c:	pop	{r4, r5, r6, pc}
   19460:	mov	r0, #28
   19464:	pop	{r4, r5, r6, pc}
   19468:	ldr	r1, [pc, #456]	; 19638 <sav_variable_ok+0x224>
   1946c:	mov	r0, r4
   19470:	add	r1, pc, r1
   19474:	bl	3e00 <strcmp@plt>
   19478:	cmp	r0, #0
   1947c:	beq	19458 <sav_variable_ok+0x44>
   19480:	ldr	r1, [pc, #436]	; 1963c <sav_variable_ok+0x228>
   19484:	mov	r0, r4
   19488:	add	r1, pc, r1
   1948c:	bl	3e00 <strcmp@plt>
   19490:	cmp	r0, #0
   19494:	beq	19458 <sav_variable_ok+0x44>
   19498:	ldr	r1, [pc, #416]	; 19640 <sav_variable_ok+0x22c>
   1949c:	mov	r0, r4
   194a0:	add	r1, pc, r1
   194a4:	bl	3e00 <strcmp@plt>
   194a8:	cmp	r0, #0
   194ac:	beq	19458 <sav_variable_ok+0x44>
   194b0:	ldr	r1, [pc, #396]	; 19644 <sav_variable_ok+0x230>
   194b4:	mov	r0, r4
   194b8:	add	r1, pc, r1
   194bc:	bl	3e00 <strcmp@plt>
   194c0:	cmp	r0, #0
   194c4:	beq	19458 <sav_variable_ok+0x44>
   194c8:	ldr	r1, [pc, #376]	; 19648 <sav_variable_ok+0x234>
   194cc:	mov	r0, r4
   194d0:	add	r1, pc, r1
   194d4:	bl	3e00 <strcmp@plt>
   194d8:	cmp	r0, #0
   194dc:	beq	19458 <sav_variable_ok+0x44>
   194e0:	ldr	r1, [pc, #356]	; 1964c <sav_variable_ok+0x238>
   194e4:	mov	r0, r4
   194e8:	add	r1, pc, r1
   194ec:	bl	3e00 <strcmp@plt>
   194f0:	cmp	r0, #0
   194f4:	beq	19458 <sav_variable_ok+0x44>
   194f8:	ldr	r1, [pc, #336]	; 19650 <sav_variable_ok+0x23c>
   194fc:	mov	r0, r4
   19500:	add	r1, pc, r1
   19504:	bl	3e00 <strcmp@plt>
   19508:	cmp	r0, #0
   1950c:	beq	19458 <sav_variable_ok+0x44>
   19510:	ldr	r1, [pc, #316]	; 19654 <sav_variable_ok+0x240>
   19514:	mov	r0, r4
   19518:	add	r1, pc, r1
   1951c:	bl	3e00 <strcmp@plt>
   19520:	cmp	r0, #0
   19524:	beq	19458 <sav_variable_ok+0x44>
   19528:	ldr	r1, [pc, #296]	; 19658 <sav_variable_ok+0x244>
   1952c:	mov	r0, r4
   19530:	add	r1, pc, r1
   19534:	bl	3e00 <strcmp@plt>
   19538:	cmp	r0, #0
   1953c:	beq	19458 <sav_variable_ok+0x44>
   19540:	ldr	r1, [pc, #276]	; 1965c <sav_variable_ok+0x248>
   19544:	mov	r0, r4
   19548:	add	r1, pc, r1
   1954c:	bl	3e00 <strcmp@plt>
   19550:	cmp	r0, #0
   19554:	beq	19458 <sav_variable_ok+0x44>
   19558:	ldr	r1, [pc, #256]	; 19660 <sav_variable_ok+0x24c>
   1955c:	mov	r0, r4
   19560:	add	r1, pc, r1
   19564:	bl	3e00 <strcmp@plt>
   19568:	cmp	r0, #0
   1956c:	beq	19458 <sav_variable_ok+0x44>
   19570:	ldr	r1, [pc, #236]	; 19664 <sav_variable_ok+0x250>
   19574:	mov	r0, r4
   19578:	add	r1, pc, r1
   1957c:	bl	3e00 <strcmp@plt>
   19580:	cmp	r0, #0
   19584:	beq	19458 <sav_variable_ok+0x44>
   19588:	ldrb	r6, [r5, #8]
   1958c:	cmp	r6, #0
   19590:	beq	1962c <sav_variable_ok+0x218>
   19594:	cmp	r6, #32
   19598:	beq	195e8 <sav_variable_ok+0x1d4>
   1959c:	ldr	r5, [pc, #196]	; 19668 <sav_variable_ok+0x254>
   195a0:	mov	r1, r4
   195a4:	mov	r0, r6
   195a8:	mov	lr, #1
   195ac:	sub	r3, r0, #35	; 0x23
   195b0:	sub	r2, r0, #64	; 0x40
   195b4:	cmp	r0, #95	; 0x5f
   195b8:	cmpne	r2, #26
   195bc:	uxtb	r3, r3
   195c0:	movhi	r2, #1
   195c4:	movls	r2, #0
   195c8:	cmp	r3, #22
   195cc:	mov	ip, lr
   195d0:	mvnls	ip, r5, lsr r3
   195d4:	tst	ip, r2
   195d8:	sub	r0, r0, #97	; 0x61
   195dc:	beq	195f0 <sav_variable_ok+0x1dc>
   195e0:	cmp	r0, #25
   195e4:	bls	195f0 <sav_variable_ok+0x1dc>
   195e8:	mov	r0, #26
   195ec:	pop	{r4, r5, r6, pc}
   195f0:	ldrb	r0, [r1, #1]!
   195f4:	cmp	r0, #0
   195f8:	beq	1960c <sav_variable_ok+0x1f8>
   195fc:	cmp	r0, #32
   19600:	bne	195ac <sav_variable_ok+0x198>
   19604:	mov	r0, #26
   19608:	pop	{r4, r5, r6, pc}
   1960c:	sub	r3, r6, #64	; 0x40
   19610:	cmp	r3, #26
   19614:	popls	{r4, r5, r6, pc}
   19618:	sub	r0, r6, #97	; 0x61
   1961c:	cmp	r0, #25
   19620:	movhi	r0, #25
   19624:	movls	r0, #0
   19628:	pop	{r4, r5, r6, pc}
   1962c:	mov	r0, r6
   19630:	pop	{r4, r5, r6, pc}
   19634:	.word	0x0000e194
   19638:	.word	0x0000e138
   1963c:	.word	0x0000e124
   19640:	.word	0x0000e110
   19644:	.word	0x0000e0fc
   19648:	.word	0x0000e0e8
   1964c:	.word	0x0000e0d4
   19650:	.word	0x0000e0c0
   19654:	.word	0x0000e0ac
   19658:	.word	0x0000e098
   1965c:	.word	0x0000e084
   19660:	.word	0x0000e070
   19664:	.word	0x0000e05c
   19668:	.word	0x007fe803

0001966c <sav_emit_variable_records>:
   1966c:	ldr	r3, [r0, #28]
   19670:	cmp	r3, #0
   19674:	ble	1a074 <sav_emit_variable_records+0xa08>
   19678:	ldr	r3, [pc, #2648]	; 1a0d8 <sav_emit_variable_records+0xa6c>
   1967c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19680:	sub	sp, sp, #404	; 0x194
   19684:	add	r3, pc, r3
   19688:	str	r3, [sp, #44]	; 0x2c
   1968c:	ldr	r3, [pc, #2632]	; 1a0dc <sav_emit_variable_records+0xa70>
   19690:	mov	fp, r0
   19694:	add	r3, pc, r3
   19698:	str	r3, [sp, #16]
   1969c:	mov	r3, #0
   196a0:	str	r3, [sp, #32]
   196a4:	add	r3, sp, #84	; 0x54
   196a8:	str	r3, [sp, #40]	; 0x28
   196ac:	add	r3, sp, #60	; 0x3c
   196b0:	str	r1, [sp, #28]
   196b4:	str	r3, [sp, #48]	; 0x30
   196b8:	ldr	r1, [sp, #32]
   196bc:	mov	r0, fp
   196c0:	bl	437c <readstat_get_variable@plt>
   196c4:	ldr	r5, [sp, #40]	; 0x28
   196c8:	mov	ip, #2
   196cc:	ldr	r3, [sp, #28]
   196d0:	ldr	r2, [sp, #44]	; 0x2c
   196d4:	mov	r1, #9
   196d8:	str	ip, [sp, #60]	; 0x3c
   196dc:	str	r0, [sp, #24]
   196e0:	mov	r4, r0
   196e4:	mov	r0, r5
   196e8:	bl	4280 <snprintf@plt>
   196ec:	mov	r0, r5
   196f0:	bl	41fc <strlen@plt>
   196f4:	mov	r2, #4
   196f8:	ldr	r1, [sp, #48]	; 0x30
   196fc:	str	r0, [sp, #4]
   19700:	mov	r0, fp
   19704:	bl	4454 <readstat_write_bytes@plt>
   19708:	subs	r3, r0, #0
   1970c:	bne	19800 <sav_emit_variable_records+0x194>
   19710:	ldr	r2, [r4]
   19714:	add	r6, sp, #116	; 0x74
   19718:	cmp	r2, #0
   1971c:	str	r3, [sp, #116]	; 0x74
   19720:	str	r3, [r6, #4]
   19724:	str	r3, [r6, #8]
   19728:	str	r3, [r6, #12]
   1972c:	str	r3, [r6, #16]
   19730:	str	r3, [r6, #20]
   19734:	str	r3, [r6, #24]
   19738:	bne	1980c <sav_emit_variable_records+0x1a0>
   1973c:	ldr	r3, [r4, #1600]	; 0x640
   19740:	cmp	r3, #255	; 0xff
   19744:	movcs	r3, #255	; 0xff
   19748:	str	r3, [sp, #116]	; 0x74
   1974c:	ldrb	r3, [r4, #564]	; 0x234
   19750:	adds	r3, r3, #0
   19754:	movne	r3, #1
   19758:	str	r3, [sp, #120]	; 0x78
   1975c:	ldr	r0, [sp, #24]
   19760:	bl	42c8 <readstat_variable_get_storage_width@plt>
   19764:	cmp	r0, #8
   19768:	movhi	r8, #0
   1976c:	bls	198f0 <sav_emit_variable_records+0x284>
   19770:	add	r5, sp, #144	; 0x90
   19774:	mov	r1, r5
   19778:	ldr	r0, [sp, #24]
   1977c:	str	r8, [sp, #124]	; 0x7c
   19780:	bl	40f4 <spss_format_for_variable@plt>
   19784:	subs	r3, r0, #0
   19788:	bne	19800 <sav_emit_variable_records+0x194>
   1978c:	ldr	r3, [sp, #148]	; 0x94
   19790:	ldr	r0, [sp, #144]	; 0x90
   19794:	cmp	r3, #255	; 0xff
   19798:	movlt	r2, r3
   1979c:	movge	r2, #255	; 0xff
   197a0:	ldr	r3, [pc, #2360]	; 1a0e0 <sav_emit_variable_records+0xa74>
   197a4:	ldr	r1, [sp, #152]	; 0x98
   197a8:	and	r3, r3, r2, lsl #8
   197ac:	add	r2, sp, #136	; 0x88
   197b0:	orr	r1, r1, r0, lsl #16
   197b4:	str	r2, [sp, #36]	; 0x24
   197b8:	mov	r0, r2
   197bc:	ldr	r2, [sp, #4]
   197c0:	orr	r3, r3, r1
   197c4:	sub	r2, r2, #1
   197c8:	str	r3, [sp, #128]	; 0x80
   197cc:	str	r3, [sp, #132]	; 0x84
   197d0:	cmp	r2, #7
   197d4:	ldr	r3, [pc, #2312]	; 1a0e4 <sav_emit_variable_records+0xa78>
   197d8:	ldr	r2, [pc, #2308]	; 1a0e4 <sav_emit_variable_records+0xa78>
   197dc:	str	r2, [sp, #136]	; 0x88
   197e0:	str	r3, [r0, #4]
   197e4:	bls	19d7c <sav_emit_variable_records+0x710>
   197e8:	mov	r2, #28
   197ec:	mov	r1, r6
   197f0:	mov	r0, fp
   197f4:	bl	4454 <readstat_write_bytes@plt>
   197f8:	subs	r3, r0, #0
   197fc:	beq	1999c <sav_emit_variable_records+0x330>
   19800:	mov	r0, r3
   19804:	add	sp, sp, #404	; 0x194
   19808:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1980c:	str	r3, [sp]
   19810:	ldr	r3, [sp, #24]
   19814:	ldrb	r1, [r3, #564]	; 0x234
   19818:	adds	r1, r1, #0
   1981c:	movne	r1, #1
   19820:	cmp	r2, #5
   19824:	str	r1, [sp, #120]	; 0x78
   19828:	bne	1975c <sav_emit_variable_records+0xf0>
   1982c:	mov	r0, r3
   19830:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
   19834:	subs	sl, r0, #0
   19838:	ble	19d8c <sav_emit_variable_records+0x720>
   1983c:	ldr	r3, [sp]
   19840:	ldr	r4, [sp, #24]
   19844:	str	r6, [sp, #8]
   19848:	mov	r7, r3
   1984c:	mov	r8, sl
   19850:	add	r9, sp, #96	; 0x60
   19854:	add	r5, sp, #144	; 0x90
   19858:	mov	r6, sl
   1985c:	str	fp, [sp, #12]
   19860:	mov	r2, r7
   19864:	mov	r1, r4
   19868:	mov	r0, r9
   1986c:	bl	3f44 <readstat_variable_get_missing_range_lo@plt>
   19870:	mov	r2, r7
   19874:	mov	r1, r4
   19878:	mov	r0, r5
   1987c:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   19880:	ldm	r9, {r0, r1, r2, r3}
   19884:	bl	42b0 <spss_64bit_value@plt>
   19888:	add	r7, r7, #1
   1988c:	mov	sl, r0
   19890:	mov	fp, r1
   19894:	ldm	r5, {r0, r1, r2, r3}
   19898:	bl	42b0 <spss_64bit_value@plt>
   1989c:	cmp	fp, r1
   198a0:	cmpeq	sl, r0
   198a4:	movne	r3, #1
   198a8:	addne	r8, r8, #1
   198ac:	strne	r3, [sp]
   198b0:	cmp	r6, r7
   198b4:	bne	19860 <sav_emit_variable_records+0x1f4>
   198b8:	ldr	r4, [sp]
   198bc:	ldr	r6, [sp, #8]
   198c0:	cmp	r4, #0
   198c4:	ldr	fp, [sp, #12]
   198c8:	beq	198d0 <sav_emit_variable_records+0x264>
   198cc:	rsb	r8, r8, #0
   198d0:	eor	r3, r8, r8, asr #31
   198d4:	sub	r3, r3, r8, asr #31
   198d8:	cmp	r3, #3
   198dc:	ble	19770 <sav_emit_variable_records+0x104>
   198e0:	mov	r3, #31
   198e4:	mov	r0, r3
   198e8:	add	sp, sp, #404	; 0x194
   198ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   198f0:	ldr	r7, [sp, #24]
   198f4:	mov	r0, r7
   198f8:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
   198fc:	subs	sl, r0, #0
   19900:	ble	19d8c <sav_emit_variable_records+0x720>
   19904:	mov	r3, #0
   19908:	mov	r4, r3
   1990c:	mov	r8, sl
   19910:	add	r9, sp, #96	; 0x60
   19914:	add	r5, sp, #144	; 0x90
   19918:	str	r3, [sp]
   1991c:	str	r6, [sp, #8]
   19920:	mov	r2, r4
   19924:	mov	r1, r7
   19928:	mov	r0, r9
   1992c:	bl	3f44 <readstat_variable_get_missing_range_lo@plt>
   19930:	mov	r2, r4
   19934:	mov	r1, r7
   19938:	mov	r0, r5
   1993c:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   19940:	ldm	r9, {r0, r1, r2, r3}
   19944:	bl	3fb0 <readstat_string_value@plt>
   19948:	add	r4, r4, #1
   1994c:	mov	r6, r0
   19950:	ldm	r5, {r0, r1, r2, r3}
   19954:	bl	3fb0 <readstat_string_value@plt>
   19958:	cmp	r6, #0
   1995c:	cmpne	r0, #0
   19960:	mov	r1, r0
   19964:	mov	r0, r6
   19968:	beq	19980 <sav_emit_variable_records+0x314>
   1996c:	bl	3e00 <strcmp@plt>
   19970:	cmp	r0, #0
   19974:	addne	r8, r8, #1
   19978:	movne	r3, #1
   1997c:	strne	r3, [sp]
   19980:	cmp	sl, r4
   19984:	bne	19920 <sav_emit_variable_records+0x2b4>
   19988:	ldr	r3, [sp]
   1998c:	ldr	r6, [sp, #8]
   19990:	cmp	r3, #0
   19994:	bne	198cc <sav_emit_variable_records+0x260>
   19998:	b	198d0 <sav_emit_variable_records+0x264>
   1999c:	ldr	r3, [sp, #24]
   199a0:	add	r4, r3, #564	; 0x234
   199a4:	mov	r0, r4
   199a8:	bl	41fc <strlen@plt>
   199ac:	cmp	r0, #0
   199b0:	beq	19a10 <sav_emit_variable_records+0x3a4>
   199b4:	cmp	r0, #256	; 0x100
   199b8:	strls	r0, [sp, #96]	; 0x60
   199bc:	movhi	r3, #256	; 0x100
   199c0:	mov	r2, #4
   199c4:	add	r1, sp, #96	; 0x60
   199c8:	mov	r0, fp
   199cc:	strhi	r3, [sp, #96]	; 0x60
   199d0:	bl	4454 <readstat_write_bytes@plt>
   199d4:	subs	r3, r0, #0
   199d8:	bne	19800 <sav_emit_variable_records+0x194>
   199dc:	ldr	r3, [sp, #96]	; 0x60
   199e0:	mov	r1, r4
   199e4:	add	r4, r3, #3
   199e8:	bic	r4, r4, #3
   199ec:	mov	r2, r4
   199f0:	mov	r0, r5
   199f4:	bl	42bc <strncpy@plt>
   199f8:	mov	r2, r4
   199fc:	mov	r1, r5
   19a00:	mov	r0, fp
   19a04:	bl	4454 <readstat_write_bytes@plt>
   19a08:	subs	r3, r0, #0
   19a0c:	bne	19800 <sav_emit_variable_records+0x194>
   19a10:	ldr	r3, [sp, #24]
   19a14:	ldr	r3, [r3]
   19a18:	cmp	r3, #5
   19a1c:	beq	19ef0 <sav_emit_variable_records+0x884>
   19a20:	ldr	r0, [sp, #24]
   19a24:	bl	42c8 <readstat_variable_get_storage_width@plt>
   19a28:	cmp	r0, #8
   19a2c:	bls	19db0 <sav_emit_variable_records+0x744>
   19a30:	ldr	r3, [sp, #24]
   19a34:	add	sl, sp, #400	; 0x190
   19a38:	mov	r7, #4
   19a3c:	ldr	r4, [r3, #1596]	; 0x63c
   19a40:	mov	r3, #2
   19a44:	str	r3, [sl, #-304]!	; 0xfffffed0
   19a48:	lsr	r4, r4, #3
   19a4c:	sub	r4, r4, #1
   19a50:	cmp	r4, #31
   19a54:	movge	r4, #31
   19a58:	mvn	r8, #0
   19a5c:	mov	r9, #28
   19a60:	b	19ac4 <sav_emit_variable_records+0x458>
   19a64:	bl	4454 <readstat_write_bytes@plt>
   19a68:	sub	r4, r4, #1
   19a6c:	mov	r2, r9
   19a70:	mov	r1, r5
   19a74:	subs	r3, r0, #0
   19a78:	mov	r0, fp
   19a7c:	bne	19800 <sav_emit_variable_records+0x194>
   19a80:	str	r3, [r5]
   19a84:	str	r3, [r5, #4]
   19a88:	str	r3, [r5, #8]
   19a8c:	str	r3, [r5, #12]
   19a90:	str	r3, [r5, #16]
   19a94:	str	r3, [r5, #20]
   19a98:	str	r3, [r5, #24]
   19a9c:	ldr	r3, [pc, #1600]	; 1a0e4 <sav_emit_variable_records+0xa78>
   19aa0:	str	r8, [sp, #144]	; 0x90
   19aa4:	str	r3, [sp, #164]	; 0xa4
   19aa8:	str	r3, [sp, #168]	; 0xa8
   19aac:	ldr	r3, [pc, #1588]	; 1a0e8 <sav_emit_variable_records+0xa7c>
   19ab0:	str	r3, [sp, #160]	; 0xa0
   19ab4:	str	r3, [sp, #156]	; 0x9c
   19ab8:	bl	4454 <readstat_write_bytes@plt>
   19abc:	subs	r3, r0, #0
   19ac0:	bne	19800 <sav_emit_variable_records+0x194>
   19ac4:	cmp	r4, #0
   19ac8:	mov	r2, r7
   19acc:	mov	r1, sl
   19ad0:	mov	r0, fp
   19ad4:	bne	19a64 <sav_emit_variable_records+0x3f8>
   19ad8:	ldr	r2, [sp, #24]
   19adc:	ldr	r3, [r2, #1600]	; 0x640
   19ae0:	ldr	r2, [r2]
   19ae4:	cmp	r3, #255	; 0xff
   19ae8:	clz	r2, r2
   19aec:	lsr	r2, r2, #5
   19af0:	movls	r2, #0
   19af4:	cmp	r2, #0
   19af8:	beq	19d50 <sav_emit_variable_records+0x6e4>
   19afc:	add	r3, r3, #251	; 0xfb
   19b00:	ldr	r2, [pc, #1508]	; 1a0ec <sav_emit_variable_records+0xa80>
   19b04:	lsr	r3, r3, #2
   19b08:	umull	r2, r3, r2, r3
   19b0c:	lsr	r3, r3, #3
   19b10:	cmp	r3, #1
   19b14:	str	r3, [sp, #20]
   19b18:	bls	19d50 <sav_emit_variable_records+0x6e4>
   19b1c:	sub	r3, r3, #1
   19b20:	str	r3, [sp, #4]
   19b24:	ldr	r3, [sp, #28]
   19b28:	add	r9, sp, #96	; 0x60
   19b2c:	add	r3, r3, #9
   19b30:	str	r3, [sp, #8]
   19b34:	mov	r8, #1
   19b38:	mov	r3, #252	; 0xfc
   19b3c:	mov	sl, r9
   19b40:	str	r3, [sp]
   19b44:	add	r3, sp, #72	; 0x48
   19b48:	str	r3, [sp, #12]
   19b4c:	ldr	r3, [sp, #4]
   19b50:	mov	r0, #2
   19b54:	cmp	r8, r3
   19b58:	mov	ip, #0
   19b5c:	ldreq	r3, [sp, #24]
   19b60:	ldr	r2, [sp, #16]
   19b64:	mov	r1, #9
   19b68:	ldreq	r4, [r3, #1600]	; 0x640
   19b6c:	ldreq	r3, [sp]
   19b70:	str	r0, [sp, #72]	; 0x48
   19b74:	subeq	r4, r4, r3
   19b78:	mov	r0, sl
   19b7c:	ldr	r3, [sp, #8]
   19b80:	movne	r4, #255	; 0xff
   19b84:	str	ip, [r6]
   19b88:	str	ip, [r6, #4]
   19b8c:	str	ip, [r6, #8]
   19b90:	str	ip, [r6, #12]
   19b94:	str	ip, [r6, #16]
   19b98:	str	ip, [r6, #20]
   19b9c:	str	ip, [r6, #24]
   19ba0:	bl	4280 <snprintf@plt>
   19ba4:	mov	r0, sl
   19ba8:	bl	41fc <strlen@plt>
   19bac:	ldr	r3, [pc, #1340]	; 1a0f0 <sav_emit_variable_records+0xa84>
   19bb0:	ldr	r1, [sp, #12]
   19bb4:	umull	r2, r3, r3, r8
   19bb8:	lsr	r3, r3, #3
   19bbc:	add	r3, r3, r3, lsl #3
   19bc0:	sub	r3, r8, r3, lsl #2
   19bc4:	cmp	r3, #9
   19bc8:	addls	r2, sp, #400	; 0x190
   19bcc:	addhi	r2, sp, #400	; 0x190
   19bd0:	addls	r3, r3, #48	; 0x30
   19bd4:	addhi	r3, r3, #55	; 0x37
   19bd8:	addls	r2, r2, r0
   19bdc:	addhi	r2, r2, r0
   19be0:	strbls	r3, [r2, #-304]	; 0xfffffed0
   19be4:	addls	r7, r0, #1
   19be8:	addhi	r7, r0, #1
   19bec:	strbhi	r3, [r2, #-304]	; 0xfffffed0
   19bf0:	mov	r9, r0
   19bf4:	mov	r2, #4
   19bf8:	mov	r0, fp
   19bfc:	bl	4454 <readstat_write_bytes@plt>
   19c00:	subs	r3, r0, #0
   19c04:	bne	19800 <sav_emit_variable_records+0x194>
   19c08:	mov	r1, r5
   19c0c:	ldr	r0, [sp, #24]
   19c10:	str	r4, [sp, #116]	; 0x74
   19c14:	bl	40f4 <spss_format_for_variable@plt>
   19c18:	str	r4, [sp, #148]	; 0x94
   19c1c:	subs	r3, r0, #0
   19c20:	bne	19800 <sav_emit_variable_records+0x194>
   19c24:	cmp	r4, #255	; 0xff
   19c28:	ldr	r1, [sp, #144]	; 0x90
   19c2c:	movlt	r2, r4
   19c30:	movge	r2, #255	; 0xff
   19c34:	ldr	r3, [sp, #152]	; 0x98
   19c38:	ldr	r0, [pc, #1184]	; 1a0e0 <sav_emit_variable_records+0xa74>
   19c3c:	orr	r3, r3, r1, lsl #16
   19c40:	and	r2, r0, r2, lsl #8
   19c44:	orr	r3, r3, r2
   19c48:	ldr	r2, [sp, #36]	; 0x24
   19c4c:	ldr	r1, [pc, #1168]	; 1a0e4 <sav_emit_variable_records+0xa78>
   19c50:	cmp	r9, #7
   19c54:	str	r1, [r2]
   19c58:	str	r1, [r2, #4]
   19c5c:	str	r3, [sp, #128]	; 0x80
   19c60:	str	r3, [sp, #132]	; 0x84
   19c64:	bls	19d9c <sav_emit_variable_records+0x730>
   19c68:	mov	r2, #28
   19c6c:	mov	r1, r6
   19c70:	mov	r0, fp
   19c74:	bl	4454 <readstat_write_bytes@plt>
   19c78:	subs	r3, r0, #0
   19c7c:	bne	19800 <sav_emit_variable_records+0x194>
   19c80:	add	r4, r4, #7
   19c84:	mov	r3, #2
   19c88:	lsr	r4, r4, #3
   19c8c:	sub	r4, r4, #1
   19c90:	cmp	r4, #31
   19c94:	str	r6, [sp, #52]	; 0x34
   19c98:	movge	r4, #31
   19c9c:	mov	r6, r5
   19ca0:	str	r3, [sp, #84]	; 0x54
   19ca4:	mov	r7, #4
   19ca8:	mov	r9, #28
   19cac:	ldr	r5, [sp, #40]	; 0x28
   19cb0:	b	19d18 <sav_emit_variable_records+0x6ac>
   19cb4:	bl	4454 <readstat_write_bytes@plt>
   19cb8:	sub	r4, r4, #1
   19cbc:	mov	r2, r9
   19cc0:	mov	r1, r6
   19cc4:	subs	ip, r0, #0
   19cc8:	mov	r0, fp
   19ccc:	bne	19d94 <sav_emit_variable_records+0x728>
   19cd0:	ldr	r3, [pc, #1036]	; 1a0e4 <sav_emit_variable_records+0xa78>
   19cd4:	str	ip, [r6]
   19cd8:	str	ip, [r6, #4]
   19cdc:	str	ip, [r6, #8]
   19ce0:	str	ip, [r6, #12]
   19ce4:	str	ip, [r6, #16]
   19ce8:	str	ip, [r6, #20]
   19cec:	str	ip, [r6, #24]
   19cf0:	str	r3, [sp, #164]	; 0xa4
   19cf4:	str	r3, [sp, #168]	; 0xa8
   19cf8:	mvn	r3, #0
   19cfc:	str	r3, [sp, #144]	; 0x90
   19d00:	ldr	r3, [pc, #992]	; 1a0e8 <sav_emit_variable_records+0xa7c>
   19d04:	str	r3, [sp, #160]	; 0xa0
   19d08:	str	r3, [sp, #156]	; 0x9c
   19d0c:	bl	4454 <readstat_write_bytes@plt>
   19d10:	subs	ip, r0, #0
   19d14:	bne	19d94 <sav_emit_variable_records+0x728>
   19d18:	cmp	r4, #0
   19d1c:	mov	r2, r7
   19d20:	mov	r1, r5
   19d24:	mov	r0, fp
   19d28:	bne	19cb4 <sav_emit_variable_records+0x648>
   19d2c:	ldr	r3, [sp, #20]
   19d30:	add	r8, r8, #1
   19d34:	cmp	r3, r8
   19d38:	ldr	r3, [sp]
   19d3c:	mov	r5, r6
   19d40:	add	r3, r3, #252	; 0xfc
   19d44:	ldr	r6, [sp, #52]	; 0x34
   19d48:	str	r3, [sp]
   19d4c:	bne	19b4c <sav_emit_variable_records+0x4e0>
   19d50:	ldr	r2, [sp, #32]
   19d54:	ldr	r3, [fp, #28]
   19d58:	add	r2, r2, #1
   19d5c:	cmp	r3, r2
   19d60:	ldr	r3, [sp, #28]
   19d64:	str	r2, [sp, #32]
   19d68:	add	r3, r3, #15
   19d6c:	str	r3, [sp, #28]
   19d70:	bgt	196b8 <sav_emit_variable_records+0x4c>
   19d74:	mov	r3, #0
   19d78:	b	19800 <sav_emit_variable_records+0x194>
   19d7c:	ldr	r2, [sp, #4]
   19d80:	ldr	r1, [sp, #40]	; 0x28
   19d84:	bl	3f20 <memcpy@plt>
   19d88:	b	197e8 <sav_emit_variable_records+0x17c>
   19d8c:	mov	r8, sl
   19d90:	b	198d0 <sav_emit_variable_records+0x264>
   19d94:	mov	r3, ip
   19d98:	b	19800 <sav_emit_variable_records+0x194>
   19d9c:	mov	r0, r2
   19da0:	mov	r1, sl
   19da4:	mov	r2, r7
   19da8:	bl	3f20 <memcpy@plt>
   19dac:	b	19c68 <sav_emit_variable_records+0x5fc>
   19db0:	ldr	sl, [sp, #24]
   19db4:	mov	r0, sl
   19db8:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
   19dbc:	subs	r3, r0, #0
   19dc0:	str	r3, [sp, #8]
   19dc4:	ble	19a30 <sav_emit_variable_records+0x3c4>
   19dc8:	mov	r8, #0
   19dcc:	add	r9, sp, #96	; 0x60
   19dd0:	mov	r4, r3
   19dd4:	str	r6, [sp]
   19dd8:	mov	r2, r8
   19ddc:	mov	r1, sl
   19de0:	mov	r0, r9
   19de4:	bl	3f44 <readstat_variable_get_missing_range_lo@plt>
   19de8:	mov	r2, r8
   19dec:	mov	r1, sl
   19df0:	mov	r0, r5
   19df4:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   19df8:	ldm	r9, {r0, r1, r2, r3}
   19dfc:	bl	3fb0 <readstat_string_value@plt>
   19e00:	add	r8, r8, #1
   19e04:	mov	r7, r0
   19e08:	ldm	r5, {r0, r1, r2, r3}
   19e0c:	bl	3fb0 <readstat_string_value@plt>
   19e10:	cmp	r7, #0
   19e14:	cmpne	r0, #0
   19e18:	mov	r6, r0
   19e1c:	mov	r1, r0
   19e20:	mov	r0, r7
   19e24:	beq	19e34 <sav_emit_variable_records+0x7c8>
   19e28:	bl	3e00 <strcmp@plt>
   19e2c:	cmp	r0, #0
   19e30:	bne	1a090 <sav_emit_variable_records+0xa24>
   19e34:	cmp	r4, r8
   19e38:	bne	19dd8 <sav_emit_variable_records+0x76c>
   19e3c:	ldr	r6, [sp]
   19e40:	mov	r8, #0
   19e44:	str	r6, [sp, #4]
   19e48:	str	fp, [sp]
   19e4c:	mov	r7, #0
   19e50:	mov	sl, #8
   19e54:	ldr	r6, [sp, #24]
   19e58:	ldr	fp, [sp, #8]
   19e5c:	b	19e68 <sav_emit_variable_records+0x7fc>
   19e60:	cmp	fp, r7
   19e64:	beq	19ee4 <sav_emit_variable_records+0x878>
   19e68:	mov	r2, r7
   19e6c:	mov	r1, r6
   19e70:	mov	r0, r9
   19e74:	bl	3f44 <readstat_variable_get_missing_range_lo@plt>
   19e78:	mov	r2, r7
   19e7c:	mov	r1, r6
   19e80:	mov	r0, r5
   19e84:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   19e88:	ldm	r9, {r0, r1, r2, r3}
   19e8c:	bl	3fb0 <readstat_string_value@plt>
   19e90:	add	r7, r7, #1
   19e94:	mov	r4, r0
   19e98:	ldm	r5, {r0, r1, r2, r3}
   19e9c:	bl	3fb0 <readstat_string_value@plt>
   19ea0:	cmp	r4, #0
   19ea4:	cmpne	r0, #0
   19ea8:	mov	r1, r0
   19eac:	mov	r0, r4
   19eb0:	beq	19e60 <sav_emit_variable_records+0x7f4>
   19eb4:	bl	3e00 <strcmp@plt>
   19eb8:	cmp	r0, #0
   19ebc:	bne	19e60 <sav_emit_variable_records+0x7f4>
   19ec0:	mov	r1, r4
   19ec4:	mov	r2, sl
   19ec8:	ldr	r0, [sp]
   19ecc:	bl	4550 <readstat_write_space_padded_string@plt>
   19ed0:	add	r8, r8, #1
   19ed4:	cmp	r0, #0
   19ed8:	bne	1a0d0 <sav_emit_variable_records+0xa64>
   19edc:	cmp	r8, #3
   19ee0:	bne	19e60 <sav_emit_variable_records+0x7f4>
   19ee4:	ldr	r6, [sp, #4]
   19ee8:	ldr	fp, [sp]
   19eec:	b	19a30 <sav_emit_variable_records+0x3c4>
   19ef0:	ldr	r8, [sp, #24]
   19ef4:	mov	r0, r8
   19ef8:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
   19efc:	subs	r7, r0, #0
   19f00:	ble	19a30 <sav_emit_variable_records+0x3c4>
   19f04:	str	r6, [sp]
   19f08:	mov	r4, #0
   19f0c:	mov	r6, r8
   19f10:	add	r9, sp, #96	; 0x60
   19f14:	mov	r8, fp
   19f18:	b	19f24 <sav_emit_variable_records+0x8b8>
   19f1c:	cmp	r7, r4
   19f20:	beq	1a080 <sav_emit_variable_records+0xa14>
   19f24:	mov	r2, r4
   19f28:	mov	r1, r6
   19f2c:	mov	r0, r9
   19f30:	bl	3f44 <readstat_variable_get_missing_range_lo@plt>
   19f34:	mov	r2, r4
   19f38:	mov	r1, r6
   19f3c:	mov	r0, r5
   19f40:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   19f44:	ldm	r9, {r0, r1, r2, r3}
   19f48:	bl	42b0 <spss_64bit_value@plt>
   19f4c:	add	r4, r4, #1
   19f50:	mov	sl, r0
   19f54:	mov	fp, r1
   19f58:	ldm	r5, {r0, r1, r2, r3}
   19f5c:	bl	42b0 <spss_64bit_value@plt>
   19f60:	cmp	fp, r1
   19f64:	cmpeq	sl, r0
   19f68:	beq	19f1c <sav_emit_variable_records+0x8b0>
   19f6c:	ldm	r9, {r0, r1, r2, r3}
   19f70:	mov	fp, r8
   19f74:	ldr	r6, [sp]
   19f78:	bl	42b0 <spss_64bit_value@plt>
   19f7c:	add	r3, sp, #64	; 0x40
   19f80:	mov	r2, #8
   19f84:	strd	r0, [sp, #64]	; 0x40
   19f88:	mov	r1, r3
   19f8c:	mov	r0, r8
   19f90:	bl	4454 <readstat_write_bytes@plt>
   19f94:	subs	r3, r0, #0
   19f98:	bne	19800 <sav_emit_variable_records+0x194>
   19f9c:	ldm	r5, {r0, r1, r2, r3}
   19fa0:	bl	42b0 <spss_64bit_value@plt>
   19fa4:	mov	r2, #8
   19fa8:	strd	r0, [sp, #72]	; 0x48
   19fac:	add	r1, sp, #72	; 0x48
   19fb0:	mov	r0, r8
   19fb4:	bl	4454 <readstat_write_bytes@plt>
   19fb8:	subs	r3, r0, #0
   19fbc:	bne	19800 <sav_emit_variable_records+0x194>
   19fc0:	mov	sl, #2
   19fc4:	add	r8, sp, #72	; 0x48
   19fc8:	add	r3, sp, #80	; 0x50
   19fcc:	str	r8, [sp, #12]
   19fd0:	str	fp, [sp]
   19fd4:	mov	r4, #0
   19fd8:	str	r3, [sp, #8]
   19fdc:	str	r6, [sp, #4]
   19fe0:	ldr	r8, [sp, #24]
   19fe4:	mov	fp, r7
   19fe8:	b	19ff4 <sav_emit_variable_records+0x988>
   19fec:	cmp	fp, r4
   19ff0:	beq	19ee4 <sav_emit_variable_records+0x878>
   19ff4:	mov	r2, r4
   19ff8:	mov	r1, r8
   19ffc:	mov	r0, r9
   1a000:	bl	3f44 <readstat_variable_get_missing_range_lo@plt>
   1a004:	mov	r2, r4
   1a008:	mov	r1, r8
   1a00c:	mov	r0, r5
   1a010:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   1a014:	ldm	r9, {r0, r1, r2, r3}
   1a018:	bl	42b0 <spss_64bit_value@plt>
   1a01c:	add	r4, r4, #1
   1a020:	mov	r6, r0
   1a024:	mov	r7, r1
   1a028:	ldm	r5, {r0, r1, r2, r3}
   1a02c:	bl	42b0 <spss_64bit_value@plt>
   1a030:	cmp	r7, r1
   1a034:	cmpeq	r6, r0
   1a038:	bne	19fec <sav_emit_variable_records+0x980>
   1a03c:	ldm	r9, {r0, r1, r2, r3}
   1a040:	bl	42b0 <spss_64bit_value@plt>
   1a044:	ldr	r3, [sp, #8]
   1a048:	mov	r2, #8
   1a04c:	add	sl, sl, #1
   1a050:	strd	r0, [r3, #-8]
   1a054:	ldr	r1, [sp, #12]
   1a058:	ldr	r0, [sp]
   1a05c:	bl	4454 <readstat_write_bytes@plt>
   1a060:	cmp	r0, #0
   1a064:	bne	1a0d0 <sav_emit_variable_records+0xa64>
   1a068:	cmp	sl, #3
   1a06c:	bne	19fec <sav_emit_variable_records+0x980>
   1a070:	b	19ee4 <sav_emit_variable_records+0x878>
   1a074:	mov	r3, #0
   1a078:	mov	r0, r3
   1a07c:	bx	lr
   1a080:	ldr	r6, [sp]
   1a084:	mov	fp, r8
   1a088:	mov	sl, #0
   1a08c:	b	19fc4 <sav_emit_variable_records+0x958>
   1a090:	mov	r1, r7
   1a094:	mov	r2, #8
   1a098:	mov	r0, fp
   1a09c:	mov	r4, r6
   1a0a0:	ldr	r6, [sp]
   1a0a4:	bl	4550 <readstat_write_space_padded_string@plt>
   1a0a8:	subs	r3, r0, #0
   1a0ac:	bne	19800 <sav_emit_variable_records+0x194>
   1a0b0:	mov	r1, r4
   1a0b4:	mov	r2, #8
   1a0b8:	mov	r0, fp
   1a0bc:	bl	4550 <readstat_write_space_padded_string@plt>
   1a0c0:	subs	r3, r0, #0
   1a0c4:	bne	19800 <sav_emit_variable_records+0x194>
   1a0c8:	mov	r8, #2
   1a0cc:	b	19e44 <sav_emit_variable_records+0x7d8>
   1a0d0:	mov	r3, r0
   1a0d4:	b	19800 <sav_emit_variable_records+0x194>
   1a0d8:	.word	0x0000ca50
   1a0dc:	.word	0x0000ca40
   1a0e0:	.word	0x0000ffff
   1a0e4:	.word	0x20202020
   1a0e8:	.word	0x00011d01
   1a0ec:	.word	0x20820821
   1a0f0:	.word	0x38e38e39

0001a0f4 <sav_begin_data>:
   1a0f4:	ldr	r3, [r0, #308]	; 0x134
   1a0f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a0fc:	cmp	r3, #0
   1a100:	sub	sp, sp, #316	; 0x13c
   1a104:	moveq	r4, #14
   1a108:	bne	1a118 <sav_begin_data+0x24>
   1a10c:	mov	r0, r4
   1a110:	add	sp, sp, #316	; 0x13c
   1a114:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a118:	ldr	r4, [r0, #28]
   1a11c:	mov	fp, r0
   1a120:	mov	r1, #15
   1a124:	mov	r0, r4
   1a128:	bl	3d58 <calloc@plt>
   1a12c:	str	r0, [sp, #24]
   1a130:	mov	r0, r4
   1a134:	bl	4190 <ck_hash_table_init@plt>
   1a138:	ldr	r3, [fp, #28]
   1a13c:	cmp	r3, #0
   1a140:	mov	r8, r0
   1a144:	ble	1a22c <sav_begin_data+0x138>
   1a148:	ldr	r3, [pc, #4060]	; 1b12c <sav_begin_data+0x1038>
   1a14c:	mov	r5, #1
   1a150:	add	r3, pc, r3
   1a154:	str	r3, [sp, #12]
   1a158:	ldr	r3, [pc, #4048]	; 1b130 <sav_begin_data+0x103c>
   1a15c:	mov	sl, #9
   1a160:	add	r3, pc, r3
   1a164:	str	r3, [sp, #16]
   1a168:	ldr	r3, [pc, #4036]	; 1b134 <sav_begin_data+0x1040>
   1a16c:	add	r3, pc, r3
   1a170:	str	r3, [sp, #20]
   1a174:	ldr	r3, [sp, #24]
   1a178:	add	r6, r3, #9
   1a17c:	sub	r1, r5, #1
   1a180:	mov	r0, fp
   1a184:	bl	437c <readstat_get_variable@plt>
   1a188:	sub	r4, r6, #9
   1a18c:	ldr	r2, [sp, #12]
   1a190:	mov	r1, sl
   1a194:	add	r3, r0, #8
   1a198:	mov	r7, r0
   1a19c:	mov	r0, r4
   1a1a0:	bl	4280 <snprintf@plt>
   1a1a4:	ldrb	r9, [r6, #-9]
   1a1a8:	cmp	r9, #0
   1a1ac:	beq	1a1d0 <sav_begin_data+0xdc>
   1a1b0:	bl	4184 <__ctype_toupper_loc@plt>
   1a1b4:	mov	r3, r4
   1a1b8:	ldr	r2, [r0]
   1a1bc:	ldr	r2, [r2, r9, lsl #2]
   1a1c0:	strb	r2, [r3]
   1a1c4:	ldrb	r9, [r3, #1]!
   1a1c8:	cmp	r9, #0
   1a1cc:	bne	1a1b8 <sav_begin_data+0xc4>
   1a1d0:	mov	r1, r8
   1a1d4:	mov	r0, r4
   1a1d8:	bl	3fd4 <ck_str_hash_lookup@plt>
   1a1dc:	cmp	r0, #0
   1a1e0:	beq	1a4b4 <sav_begin_data+0x3c0>
   1a1e4:	mov	r3, r5
   1a1e8:	ldr	r2, [sp, #16]
   1a1ec:	mov	r1, sl
   1a1f0:	mov	r0, r4
   1a1f4:	mov	r9, r5
   1a1f8:	bl	4280 <snprintf@plt>
   1a1fc:	mov	r2, r8
   1a200:	mov	r1, r7
   1a204:	mov	r0, r4
   1a208:	bl	44f0 <ck_str_hash_insert@plt>
   1a20c:	ldr	r3, [r7, #1600]	; 0x640
   1a210:	cmp	r3, #255	; 0xff
   1a214:	bhi	1a4bc <sav_begin_data+0x3c8>
   1a218:	ldr	r3, [fp, #28]
   1a21c:	add	r5, r5, #1
   1a220:	cmp	r3, r9
   1a224:	add	r6, r6, #15
   1a228:	bgt	1a17c <sav_begin_data+0x88>
   1a22c:	mov	r0, r8
   1a230:	add	sl, sp, #136	; 0x88
   1a234:	bl	4244 <ck_hash_table_free@plt>
   1a238:	mov	r2, #176	; 0xb0
   1a23c:	mov	r1, #0
   1a240:	mov	r0, sl
   1a244:	bl	42a4 <memset@plt>
   1a248:	add	r3, sp, #312	; 0x138
   1a24c:	mov	r2, r3
   1a250:	ldr	r3, [fp, #20]
   1a254:	add	r1, sp, #88	; 0x58
   1a258:	str	r3, [r2, #-256]!	; 0xffffff00
   1a25c:	mov	r0, r2
   1a260:	mov	r4, r1
   1a264:	str	r1, [sp, #12]
   1a268:	str	r2, [sp, #16]
   1a26c:	bl	4160 <localtime@plt>
   1a270:	ldr	lr, [pc, #3776]	; 1b138 <sav_begin_data+0x1044>
   1a274:	mov	ip, r4
   1a278:	add	lr, pc, lr
   1a27c:	add	r4, sp, #60	; 0x3c
   1a280:	mov	r6, r4
   1a284:	add	r9, sp, #72	; 0x48
   1a288:	str	r4, [sp, #20]
   1a28c:	mov	r4, #0
   1a290:	str	r4, [r9, #4]
   1a294:	str	r4, [sp, #72]	; 0x48
   1a298:	strh	r4, [r9, #8]
   1a29c:	str	r4, [sp, #60]	; 0x3c
   1a2a0:	str	r4, [r6, #4]
   1a2a4:	strb	r4, [r6, #8]
   1a2a8:	mov	r5, r0
   1a2ac:	cmp	r0, #0
   1a2b0:	ldm	lr!, {r0, r1, r2, r3}
   1a2b4:	stmia	ip!, {r0, r1, r2, r3}
   1a2b8:	ldm	lr!, {r0, r1, r2, r3}
   1a2bc:	stmia	ip!, {r0, r1, r2, r3}
   1a2c0:	ldm	lr, {r0, r1, r2, r3}
   1a2c4:	stm	ip, {r0, r1, r2, r3}
   1a2c8:	beq	1a814 <sav_begin_data+0x720>
   1a2cc:	ldr	r3, [pc, #3688]	; 1b13c <sav_begin_data+0x1048>
   1a2d0:	ldr	r4, [fp, #16]
   1a2d4:	str	r3, [sp, #136]	; 0x88
   1a2d8:	cmp	r4, #2
   1a2dc:	add	r3, sp, #140	; 0x8c
   1a2e0:	mov	r0, r3
   1a2e4:	beq	1a838 <sav_begin_data+0x744>
   1a2e8:	mov	r2, #60	; 0x3c
   1a2ec:	mov	r1, #32
   1a2f0:	bl	42a4 <memset@plt>
   1a2f4:	ldr	lr, [pc, #3652]	; 1b140 <sav_begin_data+0x104c>
   1a2f8:	mov	r6, #2
   1a2fc:	add	lr, pc, lr
   1a300:	cmp	r4, #1
   1a304:	mov	ip, r0
   1a308:	ldm	lr!, {r0, r1, r2, r3}
   1a30c:	stmia	ip!, {r0, r1, r2, r3}
   1a310:	ldm	lr!, {r0, r1, r2, r3}
   1a314:	stmia	ip!, {r0, r1, r2, r3}
   1a318:	ldm	lr!, {r0, r1, r2, r3}
   1a31c:	stmia	ip!, {r0, r1, r2, r3}
   1a320:	ldm	lr, {r0, r1, r2}
   1a324:	lsr	r3, r2, #16
   1a328:	stmia	ip!, {r0, r1}
   1a32c:	strh	r2, [ip], #2
   1a330:	strb	r3, [ip]
   1a334:	str	r6, [sp, #200]	; 0xc8
   1a338:	ldr	r3, [fp, #76]	; 0x4c
   1a33c:	streq	r4, [sp, #208]	; 0xd0
   1a340:	lsr	r3, r3, #3
   1a344:	str	r3, [sp, #204]	; 0xcc
   1a348:	ldr	r3, [fp, #224]	; 0xe0
   1a34c:	cmp	r3, #0
   1a350:	beq	1a36c <sav_begin_data+0x278>
   1a354:	ldr	r3, [r3, #1592]	; 0x638
   1a358:	add	r2, r3, #7
   1a35c:	cmp	r3, #0
   1a360:	movlt	r3, r2
   1a364:	asr	r3, r3, #3
   1a368:	add	r3, r3, #1
   1a36c:	ldr	r1, [r5, #20]
   1a370:	ldr	r4, [pc, #3532]	; 1b144 <sav_begin_data+0x1050>
   1a374:	ldr	ip, [r5, #12]
   1a378:	mov	r6, #100	; 0x64
   1a37c:	umull	r0, r2, r4, r1
   1a380:	umull	lr, r0, r4, ip
   1a384:	str	r3, [sp, #212]	; 0xd4
   1a388:	lsr	r2, r2, #5
   1a38c:	ldr	lr, [sp, #12]
   1a390:	mul	r2, r6, r2
   1a394:	lsr	r3, r0, #5
   1a398:	sub	r2, r1, r2
   1a39c:	str	r2, [sp, #4]
   1a3a0:	ldr	r2, [r5, #16]
   1a3a4:	mul	r3, r6, r3
   1a3a8:	add	r2, lr, r2, lsl #2
   1a3ac:	ldr	r1, [fp, #80]	; 0x50
   1a3b0:	ldr	r0, [pc, #3472]	; 1b148 <sav_begin_data+0x1054>
   1a3b4:	str	r2, [sp]
   1a3b8:	ldr	r2, [pc, #3468]	; 1b14c <sav_begin_data+0x1058>
   1a3bc:	sub	r3, ip, r3
   1a3c0:	add	r2, pc, r2
   1a3c4:	mov	ip, #0
   1a3c8:	str	r1, [sp, #216]	; 0xd8
   1a3cc:	str	r0, [sp, #224]	; 0xe0
   1a3d0:	mov	r1, #10
   1a3d4:	mov	r0, r9
   1a3d8:	str	ip, [sp, #220]	; 0xdc
   1a3dc:	bl	4280 <snprintf@plt>
   1a3e0:	ldm	r9, {r0, r1, r2}
   1a3e4:	add	r3, sp, #228	; 0xe4
   1a3e8:	add	r7, sp, #245	; 0xf5
   1a3ec:	stmia	r3!, {r0, r1}
   1a3f0:	strb	r2, [r3]
   1a3f4:	ldr	ip, [r5]
   1a3f8:	ldr	r0, [r5, #8]
   1a3fc:	ldr	r2, [pc, #3404]	; 1b150 <sav_begin_data+0x105c>
   1a400:	umull	r3, r1, r4, ip
   1a404:	umull	lr, r3, r4, r0
   1a408:	lsr	r1, r1, #5
   1a40c:	lsr	r3, r3, #5
   1a410:	mul	r1, r6, r1
   1a414:	mul	r3, r6, r3
   1a418:	sub	r1, ip, r1
   1a41c:	str	r1, [sp, #4]
   1a420:	ldr	lr, [r5, #4]
   1a424:	sub	r3, r0, r3
   1a428:	ldr	r5, [sp, #20]
   1a42c:	umull	r0, ip, r4, lr
   1a430:	add	r2, pc, r2
   1a434:	lsr	ip, ip, #5
   1a438:	mov	r1, #9
   1a43c:	mul	ip, r6, ip
   1a440:	mov	r0, r5
   1a444:	sub	ip, lr, ip
   1a448:	str	ip, [sp]
   1a44c:	bl	4280 <snprintf@plt>
   1a450:	mov	r3, r5
   1a454:	mov	r2, #64	; 0x40
   1a458:	ldm	r3!, {r0, r1}
   1a45c:	add	r4, fp, #88	; 0x58
   1a460:	str	r0, [sp, #237]	; 0xed
   1a464:	str	r1, [sp, #241]	; 0xf1
   1a468:	mov	r0, r7
   1a46c:	mov	r1, #32
   1a470:	bl	42a4 <memset@plt>
   1a474:	mov	r0, r4
   1a478:	bl	41fc <strlen@plt>
   1a47c:	ldrb	r3, [fp, #88]	; 0x58
   1a480:	cmp	r3, #0
   1a484:	bne	1a81c <sav_begin_data+0x728>
   1a488:	mov	r2, #176	; 0xb0
   1a48c:	mov	r1, sl
   1a490:	mov	r0, fp
   1a494:	bl	4454 <readstat_write_bytes@plt>
   1a498:	subs	r4, r0, #0
   1a49c:	beq	1a4d4 <sav_begin_data+0x3e0>
   1a4a0:	ldr	r0, [sp, #24]
   1a4a4:	bl	3ec0 <free@plt>
   1a4a8:	mov	r0, r4
   1a4ac:	add	sp, sp, #316	; 0x13c
   1a4b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a4b4:	mov	r9, r5
   1a4b8:	b	1a1fc <sav_begin_data+0x108>
   1a4bc:	mov	r3, r4
   1a4c0:	ldr	r2, [sp, #20]
   1a4c4:	mov	r1, #6
   1a4c8:	mov	r0, r6
   1a4cc:	bl	4280 <snprintf@plt>
   1a4d0:	b	1a218 <sav_begin_data+0x124>
   1a4d4:	ldr	r1, [sp, #24]
   1a4d8:	mov	r0, fp
   1a4dc:	bl	1966c <sav_emit_variable_records>
   1a4e0:	subs	r4, r0, #0
   1a4e4:	bne	1a4a0 <sav_begin_data+0x3ac>
   1a4e8:	ldr	r3, [fp, #40]	; 0x28
   1a4ec:	cmp	r3, #0
   1a4f0:	ble	1a58c <sav_begin_data+0x498>
   1a4f4:	ldr	r7, [sp, #12]
   1a4f8:	add	r3, sp, #40	; 0x28
   1a4fc:	str	r4, [sp, #28]
   1a500:	str	r3, [sp, #36]	; 0x24
   1a504:	str	r9, [sp, #32]
   1a508:	ldr	r1, [sp, #28]
   1a50c:	mov	r0, fp
   1a510:	bl	4424 <readstat_get_label_set@plt>
   1a514:	ldr	r3, [r0, #276]	; 0x114
   1a518:	mov	r5, r0
   1a51c:	cmp	r3, #0
   1a520:	ble	1a570 <sav_begin_data+0x47c>
   1a524:	mov	r4, #0
   1a528:	mov	r6, r4
   1a52c:	mov	r1, r6
   1a530:	mov	r0, r5
   1a534:	bl	4448 <readstat_get_label_set_variable@plt>
   1a538:	add	r6, r6, #1
   1a53c:	ldr	r3, [r0, #1596]	; 0x63c
   1a540:	cmp	r3, #8
   1a544:	ldr	r3, [r5, #276]	; 0x114
   1a548:	addls	r4, r4, #1
   1a54c:	cmp	r6, r3
   1a550:	blt	1a52c <sav_begin_data+0x438>
   1a554:	cmp	r4, #0
   1a558:	beq	1a570 <sav_begin_data+0x47c>
   1a55c:	ldr	r3, [r5, #264]	; 0x108
   1a560:	ldr	r8, [r5]
   1a564:	cmp	r3, #0
   1a568:	str	r3, [sp, #60]	; 0x3c
   1a56c:	bne	1a89c <sav_begin_data+0x7a8>
   1a570:	ldr	r2, [sp, #28]
   1a574:	ldr	r3, [fp, #40]	; 0x28
   1a578:	add	r2, r2, #1
   1a57c:	cmp	r2, r3
   1a580:	str	r2, [sp, #28]
   1a584:	blt	1a508 <sav_begin_data+0x414>
   1a588:	ldr	r9, [sp, #32]
   1a58c:	ldr	r3, [fp, #52]	; 0x34
   1a590:	mov	r2, #6
   1a594:	cmp	r3, #0
   1a598:	str	r3, [sp, #136]	; 0x88
   1a59c:	str	r2, [sp, #88]	; 0x58
   1a5a0:	bne	1abd4 <sav_begin_data+0xae0>
   1a5a4:	ldr	r5, [pc, #2984]	; 1b154 <sav_begin_data+0x1060>
   1a5a8:	mov	r2, #20
   1a5ac:	add	r5, pc, r5
   1a5b0:	add	r3, r5, #48	; 0x30
   1a5b4:	str	r2, [sp, #136]	; 0x88
   1a5b8:	ldm	r3, {r0, r1, r2, r3}
   1a5bc:	mov	ip, #0
   1a5c0:	ldr	r4, [sp, #12]
   1a5c4:	mov	r6, #1
   1a5c8:	str	ip, [sp, #140]	; 0x8c
   1a5cc:	str	ip, [sp, #144]	; 0x90
   1a5d0:	mvn	ip, #0
   1a5d4:	stm	r4, {r0, r1, r2, r3}
   1a5d8:	str	ip, [sp, #148]	; 0x94
   1a5dc:	str	r6, [sp, #152]	; 0x98
   1a5e0:	str	r6, [sp, #156]	; 0x9c
   1a5e4:	bl	3eb4 <machine_is_little_endian@plt>
   1a5e8:	ldr	r3, [pc, #2920]	; 1b158 <sav_begin_data+0x1064>
   1a5ec:	mov	r1, r4
   1a5f0:	str	r3, [sp, #164]	; 0xa4
   1a5f4:	mov	r2, #16
   1a5f8:	cmp	r0, #0
   1a5fc:	moveq	r3, r6
   1a600:	movne	r3, #2
   1a604:	mov	r0, fp
   1a608:	str	r3, [sp, #160]	; 0xa0
   1a60c:	bl	4454 <readstat_write_bytes@plt>
   1a610:	subs	r4, r0, #0
   1a614:	bne	1a4a0 <sav_begin_data+0x3ac>
   1a618:	mov	r2, #32
   1a61c:	mov	r1, sl
   1a620:	mov	r0, fp
   1a624:	bl	4454 <readstat_write_bytes@plt>
   1a628:	subs	r4, r0, #0
   1a62c:	bne	1a4a0 <sav_begin_data+0x3ac>
   1a630:	add	r5, r5, #64	; 0x40
   1a634:	ldr	ip, [sp, #12]
   1a638:	ldm	r5, {r0, r1, r2, r3}
   1a63c:	stm	ip, {r0, r1, r2, r3}
   1a640:	mov	r2, #16
   1a644:	mov	r1, ip
   1a648:	mov	r0, fp
   1a64c:	bl	4454 <readstat_write_bytes@plt>
   1a650:	subs	r4, r0, #0
   1a654:	bne	1a4a0 <sav_begin_data+0x3ac>
   1a658:	ldr	r3, [pc, #2812]	; 1b15c <sav_begin_data+0x1068>
   1a65c:	mvn	r0, #0
   1a660:	mvn	r1, #1048576	; 0x100000
   1a664:	mvn	r2, #0
   1a668:	mvn	r4, #1
   1a66c:	mvn	r5, #1048576	; 0x100000
   1a670:	strd	r0, [sp, #136]	; 0x88
   1a674:	strd	r2, [sp, #144]	; 0x90
   1a678:	mov	r1, sl
   1a67c:	mov	r2, #24
   1a680:	mov	r0, fp
   1a684:	strd	r4, [sp, #152]	; 0x98
   1a688:	bl	4454 <readstat_write_bytes@plt>
   1a68c:	subs	r4, r0, #0
   1a690:	bne	1a4a0 <sav_begin_data+0x3ac>
   1a694:	ldr	r2, [fp, #28]
   1a698:	mov	r3, #7
   1a69c:	cmp	r2, #0
   1a6a0:	str	r3, [sp, #136]	; 0x88
   1a6a4:	mov	r2, #11
   1a6a8:	mov	r3, #4
   1a6ac:	str	r4, [sl, #12]
   1a6b0:	str	r2, [sp, #140]	; 0x8c
   1a6b4:	str	r3, [sp, #144]	; 0x90
   1a6b8:	ble	1a718 <sav_begin_data+0x624>
   1a6bc:	ldr	r5, [pc, #2716]	; 1b160 <sav_begin_data+0x106c>
   1a6c0:	mov	r7, r4
   1a6c4:	mov	r1, r7
   1a6c8:	mov	r0, fp
   1a6cc:	bl	437c <readstat_get_variable@plt>
   1a6d0:	mov	r1, r6
   1a6d4:	add	r7, r7, #1
   1a6d8:	ldr	ip, [r0, #1600]	; 0x640
   1a6dc:	ldr	r0, [r0]
   1a6e0:	add	r3, ip, #251	; 0xfb
   1a6e4:	cmp	ip, #255	; 0xff
   1a6e8:	lsr	r3, r3, #2
   1a6ec:	clz	r2, r0
   1a6f0:	lsr	r2, r2, #5
   1a6f4:	movls	r2, #0
   1a6f8:	cmp	r2, #0
   1a6fc:	umull	r2, r3, r5, r3
   1a700:	lsrne	r1, r3, #3
   1a704:	ldr	r3, [fp, #28]
   1a708:	add	r4, r4, r1
   1a70c:	cmp	r7, r3
   1a710:	blt	1a6c4 <sav_begin_data+0x5d0>
   1a714:	add	r4, r4, r4, lsl #1
   1a718:	mov	r2, #16
   1a71c:	mov	r1, sl
   1a720:	mov	r0, fp
   1a724:	str	r4, [sp, #148]	; 0x94
   1a728:	bl	4454 <readstat_write_bytes@plt>
   1a72c:	subs	r4, r0, #0
   1a730:	bne	1a4a0 <sav_begin_data+0x3ac>
   1a734:	ldr	r3, [fp, #28]
   1a738:	cmp	r3, #0
   1a73c:	ble	1ac78 <sav_begin_data+0xb84>
   1a740:	ldr	r8, [pc, #2584]	; 1b160 <sav_begin_data+0x106c>
   1a744:	mov	r6, r4
   1a748:	mov	r7, #4
   1a74c:	mov	r1, r6
   1a750:	mov	r0, fp
   1a754:	bl	437c <readstat_get_variable@plt>
   1a758:	mov	r4, r0
   1a75c:	bl	431c <readstat_variable_get_measure@plt>
   1a760:	bl	4070 <spss_measure_from_readstat_measure@plt>
   1a764:	str	r0, [sp, #60]	; 0x3c
   1a768:	mov	r0, r4
   1a76c:	bl	4220 <readstat_variable_get_display_width@plt>
   1a770:	cmp	r0, #0
   1a774:	movgt	r3, r0
   1a778:	movle	r3, #8
   1a77c:	mov	r0, r4
   1a780:	str	r3, [sp, #72]	; 0x48
   1a784:	bl	4430 <readstat_variable_get_alignment@plt>
   1a788:	bl	3e60 <spss_alignment_from_readstat_alignment@plt>
   1a78c:	ldr	r1, [r4]
   1a790:	clz	r2, r1
   1a794:	lsr	r2, r2, #5
   1a798:	str	r0, [sp, #88]	; 0x58
   1a79c:	ldr	r3, [r4, #1600]	; 0x640
   1a7a0:	cmp	r3, #255	; 0xff
   1a7a4:	movls	r2, #0
   1a7a8:	cmp	r2, #0
   1a7ac:	moveq	r5, #1
   1a7b0:	addne	r5, r3, #251	; 0xfb
   1a7b4:	lsrne	r5, r5, #2
   1a7b8:	umullne	r3, r5, r8, r5
   1a7bc:	lsrne	r5, r5, #3
   1a7c0:	subs	r5, r5, #1
   1a7c4:	mov	r2, r7
   1a7c8:	ldr	r1, [sp, #20]
   1a7cc:	mov	r0, fp
   1a7d0:	bcc	1b404 <sav_begin_data+0x1310>
   1a7d4:	bl	4454 <readstat_write_bytes@plt>
   1a7d8:	mov	r2, r7
   1a7dc:	mov	r1, r9
   1a7e0:	subs	r4, r0, #0
   1a7e4:	mov	r0, fp
   1a7e8:	bne	1a4a0 <sav_begin_data+0x3ac>
   1a7ec:	bl	4454 <readstat_write_bytes@plt>
   1a7f0:	mov	r2, r7
   1a7f4:	ldr	r1, [sp, #12]
   1a7f8:	subs	r4, r0, #0
   1a7fc:	mov	r0, fp
   1a800:	bne	1a4a0 <sav_begin_data+0x3ac>
   1a804:	bl	4454 <readstat_write_bytes@plt>
   1a808:	subs	r4, r0, #0
   1a80c:	beq	1a7c0 <sav_begin_data+0x6cc>
   1a810:	b	1a4a0 <sav_begin_data+0x3ac>
   1a814:	mov	r4, #39	; 0x27
   1a818:	b	1a4a0 <sav_begin_data+0x3ac>
   1a81c:	cmp	r0, #64	; 0x40
   1a820:	movcc	r2, r0
   1a824:	movcs	r2, #64	; 0x40
   1a828:	mov	r1, r4
   1a82c:	mov	r0, r7
   1a830:	bl	3f20 <memcpy@plt>
   1a834:	b	1a488 <sav_begin_data+0x394>
   1a838:	mov	ip, #51	; 0x33
   1a83c:	mov	r2, #60	; 0x3c
   1a840:	mov	r1, #32
   1a844:	strb	ip, [sp, #139]	; 0x8b
   1a848:	bl	42a4 <memset@plt>
   1a84c:	ldr	lr, [pc, #2320]	; 1b164 <sav_begin_data+0x1070>
   1a850:	add	lr, pc, lr
   1a854:	mov	ip, r0
   1a858:	ldm	lr!, {r0, r1, r2, r3}
   1a85c:	stmia	ip!, {r0, r1, r2, r3}
   1a860:	ldm	lr!, {r0, r1, r2, r3}
   1a864:	stmia	ip!, {r0, r1, r2, r3}
   1a868:	ldm	lr!, {r0, r1, r2, r3}
   1a86c:	stmia	ip!, {r0, r1, r2, r3}
   1a870:	ldm	lr, {r0, r1, r2}
   1a874:	lsr	r3, r2, #16
   1a878:	stmia	ip!, {r0, r1}
   1a87c:	strh	r2, [ip], #2
   1a880:	strb	r3, [ip]
   1a884:	str	r4, [sp, #200]	; 0xc8
   1a888:	ldr	r3, [fp, #76]	; 0x4c
   1a88c:	str	r4, [sp, #208]	; 0xd0
   1a890:	lsr	r3, r3, #3
   1a894:	str	r3, [sp, #204]	; 0xcc
   1a898:	b	1a348 <sav_begin_data+0x254>
   1a89c:	mov	r3, #3
   1a8a0:	mov	r2, #4
   1a8a4:	ldr	r1, [sp, #32]
   1a8a8:	mov	r0, fp
   1a8ac:	str	r3, [sp, #72]	; 0x48
   1a8b0:	bl	4454 <readstat_write_bytes@plt>
   1a8b4:	cmp	r0, #0
   1a8b8:	bne	1aae0 <sav_begin_data+0x9ec>
   1a8bc:	mov	r2, #4
   1a8c0:	ldr	r1, [sp, #20]
   1a8c4:	mov	r0, fp
   1a8c8:	bl	4454 <readstat_write_bytes@plt>
   1a8cc:	cmp	r0, #0
   1a8d0:	bne	1aae0 <sav_begin_data+0x9ec>
   1a8d4:	ldr	r3, [sp, #60]	; 0x3c
   1a8d8:	cmp	r3, #0
   1a8dc:	ble	1aae8 <sav_begin_data+0x9f4>
   1a8e0:	mov	r6, r0
   1a8e4:	b	1a9a0 <sav_begin_data+0x8ac>
   1a8e8:	ldr	r2, [r0, #20]
   1a8ec:	ldr	r3, [pc, #2164]	; 1b168 <sav_begin_data+0x1074>
   1a8f0:	cmp	r2, #8
   1a8f4:	str	r3, [r7]
   1a8f8:	str	r3, [r7, #4]
   1a8fc:	mov	r0, r7
   1a900:	movcs	r2, #8
   1a904:	ldr	r1, [r9, #16]
   1a908:	bl	3f20 <memcpy@plt>
   1a90c:	mov	r2, #8
   1a910:	mov	r1, r7
   1a914:	mov	r0, fp
   1a918:	bl	4454 <readstat_write_bytes@plt>
   1a91c:	mov	r3, #120	; 0x78
   1a920:	ldr	r4, [r9, #24]
   1a924:	strb	r3, [sp, #56]	; 0x38
   1a928:	ldr	r3, [r9, #28]
   1a92c:	mov	r2, #1
   1a930:	cmp	r3, #119	; 0x77
   1a934:	ldr	r1, [sp, #16]
   1a938:	mov	r0, fp
   1a93c:	strbls	r3, [sp, #56]	; 0x38
   1a940:	bl	4454 <readstat_write_bytes@plt>
   1a944:	cmp	r0, #0
   1a948:	bne	1aae0 <sav_begin_data+0x9ec>
   1a94c:	mov	r2, #128	; 0x80
   1a950:	mov	r1, #32
   1a954:	mov	r0, sl
   1a958:	bl	42a4 <memset@plt>
   1a95c:	ldrb	r9, [sp, #56]	; 0x38
   1a960:	mov	r1, r4
   1a964:	mov	r0, sl
   1a968:	mov	r2, r9
   1a96c:	bl	3f20 <memcpy@plt>
   1a970:	add	r3, r9, #8
   1a974:	bic	r2, r3, #7
   1a978:	sub	r2, r2, #1
   1a97c:	mov	r1, sl
   1a980:	mov	r0, fp
   1a984:	bl	4454 <readstat_write_bytes@plt>
   1a988:	cmp	r0, #0
   1a98c:	bne	1aae0 <sav_begin_data+0x9ec>
   1a990:	ldr	r3, [sp, #60]	; 0x3c
   1a994:	add	r6, r6, #1
   1a998:	cmp	r6, r3
   1a99c:	bge	1aae8 <sav_begin_data+0x9f4>
   1a9a0:	mov	r1, r6
   1a9a4:	mov	r0, r5
   1a9a8:	bl	44cc <readstat_get_value_label@plt>
   1a9ac:	cmp	r8, #0
   1a9b0:	mov	r9, r0
   1a9b4:	beq	1a8e8 <sav_begin_data+0x7f4>
   1a9b8:	cmp	r8, #5
   1a9bc:	beq	1a9e4 <sav_begin_data+0x8f0>
   1a9c0:	cmp	r8, #3
   1a9c4:	bne	1a90c <sav_begin_data+0x818>
   1a9c8:	vldr	s15, [r0, #8]
   1a9cc:	ldr	r3, [sp, #36]	; 0x24
   1a9d0:	vcvt.f64.s32	d7, s15
   1a9d4:	vstr	d7, [sp, #40]	; 0x28
   1a9d8:	ldm	r3, {r0, r1}
   1a9dc:	stm	r7, {r0, r1}
   1a9e0:	b	1a90c <sav_begin_data+0x818>
   1a9e4:	ldm	r0, {r0, r1}
   1a9e8:	stm	r7, {r0, r1}
   1a9ec:	b	1a90c <sav_begin_data+0x818>
   1a9f0:	mov	r2, #4
   1a9f4:	ldr	r1, [sp, #16]
   1a9f8:	mov	r0, fp
   1a9fc:	bl	4454 <readstat_write_bytes@plt>
   1aa00:	cmp	r0, #0
   1aa04:	bne	1aae0 <sav_begin_data+0x9ec>
   1aa08:	mov	r1, r6
   1aa0c:	ldr	r2, [sp, #56]	; 0x38
   1aa10:	mov	r0, fp
   1aa14:	bl	4454 <readstat_write_bytes@plt>
   1aa18:	cmp	r0, #0
   1aa1c:	bne	1aae0 <sav_begin_data+0x9ec>
   1aa20:	mov	r2, #1
   1aa24:	ldr	r1, [sp, #32]
   1aa28:	mov	r0, fp
   1aa2c:	bl	4454 <readstat_write_bytes@plt>
   1aa30:	cmp	r0, #0
   1aa34:	bne	1aae0 <sav_begin_data+0x9ec>
   1aa38:	mov	r3, #8
   1aa3c:	mov	r2, #4
   1aa40:	ldr	r1, [sp, #20]
   1aa44:	mov	r0, fp
   1aa48:	str	r3, [sp, #60]	; 0x3c
   1aa4c:	bl	4454 <readstat_write_bytes@plt>
   1aa50:	cmp	r0, #0
   1aa54:	bne	1aae0 <sav_begin_data+0x9ec>
   1aa58:	ldr	r4, [sp, #12]
   1aa5c:	mov	r6, r0
   1aa60:	mov	r0, r5
   1aa64:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
   1aa68:	mov	r2, r6
   1aa6c:	mov	r1, r5
   1aa70:	cmp	r6, r0
   1aa74:	mov	r0, r9
   1aa78:	bge	1b554 <sav_begin_data+0x1460>
   1aa7c:	bl	3f44 <readstat_variable_get_missing_range_lo@plt>
   1aa80:	mov	r2, r6
   1aa84:	mov	r1, r5
   1aa88:	mov	r0, r4
   1aa8c:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   1aa90:	ldm	r9, {r0, r1, r2, r3}
   1aa94:	bl	3fb0 <readstat_string_value@plt>
   1aa98:	add	r6, r6, #1
   1aa9c:	mov	r7, r0
   1aaa0:	ldm	r4, {r0, r1, r2, r3}
   1aaa4:	bl	3fb0 <readstat_string_value@plt>
   1aaa8:	cmp	r7, #0
   1aaac:	cmpne	r0, #0
   1aab0:	mov	r1, r0
   1aab4:	mov	r0, r7
   1aab8:	beq	1aa60 <sav_begin_data+0x96c>
   1aabc:	bl	3e00 <strcmp@plt>
   1aac0:	cmp	r0, #0
   1aac4:	bne	1aa60 <sav_begin_data+0x96c>
   1aac8:	mov	r1, r7
   1aacc:	ldr	r2, [sp, #60]	; 0x3c
   1aad0:	mov	r0, fp
   1aad4:	bl	4550 <readstat_write_space_padded_string@plt>
   1aad8:	cmp	r0, #0
   1aadc:	beq	1aa60 <sav_begin_data+0x96c>
   1aae0:	mov	r4, r0
   1aae4:	b	1a4a0 <sav_begin_data+0x3ac>
   1aae8:	ldr	r3, [r5, #276]	; 0x114
   1aaec:	mov	r2, #4
   1aaf0:	cmp	r3, #0
   1aaf4:	str	r2, [sp, #72]	; 0x48
   1aaf8:	mov	r6, #0
   1aafc:	ble	1ab2c <sav_begin_data+0xa38>
   1ab00:	mov	r4, r6
   1ab04:	mov	r1, r4
   1ab08:	mov	r0, r5
   1ab0c:	bl	4448 <readstat_get_label_set_variable@plt>
   1ab10:	add	r4, r4, #1
   1ab14:	ldr	r3, [r0, #1596]	; 0x63c
   1ab18:	cmp	r3, #8
   1ab1c:	ldr	r3, [r5, #276]	; 0x114
   1ab20:	addls	r6, r6, #1
   1ab24:	cmp	r4, r3
   1ab28:	blt	1ab04 <sav_begin_data+0xa10>
   1ab2c:	mov	r2, #4
   1ab30:	ldr	r1, [sp, #32]
   1ab34:	mov	r0, fp
   1ab38:	str	r6, [sp, #88]	; 0x58
   1ab3c:	bl	4454 <readstat_write_bytes@plt>
   1ab40:	cmp	r0, #0
   1ab44:	bne	1aae0 <sav_begin_data+0x9ec>
   1ab48:	mov	r2, #4
   1ab4c:	mov	r1, r7
   1ab50:	mov	r0, fp
   1ab54:	bl	4454 <readstat_write_bytes@plt>
   1ab58:	cmp	r0, #0
   1ab5c:	bne	1aae0 <sav_begin_data+0x9ec>
   1ab60:	ldr	r3, [r5, #276]	; 0x114
   1ab64:	cmp	r3, #0
   1ab68:	ble	1a570 <sav_begin_data+0x47c>
   1ab6c:	mov	r4, r0
   1ab70:	b	1ab80 <sav_begin_data+0xa8c>
   1ab74:	ldr	r3, [r5, #276]	; 0x114
   1ab78:	cmp	r4, r3
   1ab7c:	bge	1a570 <sav_begin_data+0x47c>
   1ab80:	mov	r1, r4
   1ab84:	mov	r0, r5
   1ab88:	bl	4448 <readstat_get_label_set_variable@plt>
   1ab8c:	add	r4, r4, #1
   1ab90:	ldr	r3, [r0, #1596]	; 0x63c
   1ab94:	cmp	r3, #8
   1ab98:	bhi	1ab74 <sav_begin_data+0xa80>
   1ab9c:	ldr	r3, [r0, #1592]	; 0x638
   1aba0:	mov	r2, #4
   1aba4:	cmp	r3, #0
   1aba8:	add	r1, r3, #7
   1abac:	movlt	r3, r1
   1abb0:	mov	r0, fp
   1abb4:	asr	r3, r3, #3
   1abb8:	add	r3, r3, #1
   1abbc:	mov	r1, sl
   1abc0:	str	r3, [sp, #136]	; 0x88
   1abc4:	bl	4454 <readstat_write_bytes@plt>
   1abc8:	cmp	r0, #0
   1abcc:	beq	1ab74 <sav_begin_data+0xa80>
   1abd0:	b	1aae0 <sav_begin_data+0x9ec>
   1abd4:	mov	r2, #4
   1abd8:	ldr	r1, [sp, #12]
   1abdc:	mov	r0, fp
   1abe0:	bl	4454 <readstat_write_bytes@plt>
   1abe4:	subs	r4, r0, #0
   1abe8:	bne	1a4a0 <sav_begin_data+0x3ac>
   1abec:	mov	r2, #4
   1abf0:	mov	r1, sl
   1abf4:	mov	r0, fp
   1abf8:	bl	4454 <readstat_write_bytes@plt>
   1abfc:	subs	r4, r0, #0
   1ac00:	bne	1a4a0 <sav_begin_data+0x3ac>
   1ac04:	ldr	r3, [fp, #52]	; 0x34
   1ac08:	cmp	r3, #0
   1ac0c:	movgt	r5, r4
   1ac10:	bgt	1ac44 <sav_begin_data+0xb50>
   1ac14:	b	1a5a4 <sav_begin_data+0x4b0>
   1ac18:	bl	4454 <readstat_write_bytes@plt>
   1ac1c:	rsb	r1, r4, #80	; 0x50
   1ac20:	subs	r4, r0, #0
   1ac24:	mov	r0, fp
   1ac28:	bne	1a4a0 <sav_begin_data+0x3ac>
   1ac2c:	bl	3ddc <readstat_write_spaces@plt>
   1ac30:	subs	r4, r0, #0
   1ac34:	bne	1a4a0 <sav_begin_data+0x3ac>
   1ac38:	ldr	r3, [fp, #52]	; 0x34
   1ac3c:	cmp	r5, r3
   1ac40:	bge	1a5a4 <sav_begin_data+0x4b0>
   1ac44:	ldr	r3, [fp, #48]	; 0x30
   1ac48:	ldr	r6, [r3, r5, lsl #2]
   1ac4c:	add	r5, r5, #1
   1ac50:	mov	r0, r6
   1ac54:	bl	41fc <strlen@plt>
   1ac58:	mov	r1, r6
   1ac5c:	mov	r4, r0
   1ac60:	cmp	r4, #80	; 0x50
   1ac64:	mov	r2, r0
   1ac68:	mov	r0, fp
   1ac6c:	bls	1ac18 <sav_begin_data+0xb24>
   1ac70:	mov	r4, #32
   1ac74:	b	1a4a0 <sav_begin_data+0x3ac>
   1ac78:	ldr	r3, [pc, #1260]	; 1b16c <sav_begin_data+0x1078>
   1ac7c:	add	r3, pc, r3
   1ac80:	add	r3, r3, #80	; 0x50
   1ac84:	ldm	r3, {r0, r1, r2, r3}
   1ac88:	stm	sl, {r0, r1, r2, r3}
   1ac8c:	ldr	r3, [sp, #148]	; 0x94
   1ac90:	cmp	r3, #0
   1ac94:	ble	1af7c <sav_begin_data+0xe88>
   1ac98:	sub	r3, r3, #1
   1ac9c:	mov	r2, #16
   1aca0:	mov	r1, sl
   1aca4:	mov	r0, fp
   1aca8:	str	r3, [sp, #148]	; 0x94
   1acac:	bl	4454 <readstat_write_bytes@plt>
   1acb0:	subs	r4, r0, #0
   1acb4:	bne	1a4a0 <sav_begin_data+0x3ac>
   1acb8:	ldr	r3, [fp, #28]
   1acbc:	cmp	r3, #0
   1acc0:	ble	1ae18 <sav_begin_data+0xd24>
   1acc4:	ldr	r3, [pc, #1188]	; 1b170 <sav_begin_data+0x107c>
   1acc8:	mov	r7, r4
   1accc:	add	r3, pc, r3
   1acd0:	str	r3, [sp, #28]
   1acd4:	ldr	r3, [sp, #24]
   1acd8:	mov	r8, #1
   1acdc:	mov	r4, r3
   1ace0:	mov	r1, r7
   1ace4:	mov	r0, fp
   1ace8:	bl	437c <readstat_get_variable@plt>
   1acec:	mov	r3, r4
   1acf0:	ldr	r2, [sp, #28]
   1acf4:	mov	r1, #9
   1acf8:	add	r7, r7, #1
   1acfc:	add	r4, r4, #15
   1ad00:	mov	r5, r0
   1ad04:	add	r5, r5, #8
   1ad08:	ldr	r0, [sp, #12]
   1ad0c:	bl	4280 <snprintf@plt>
   1ad10:	mov	r0, r5
   1ad14:	bl	41fc <strlen@plt>
   1ad18:	mov	r3, #61	; 0x3d
   1ad1c:	strb	r3, [sp, #60]	; 0x3c
   1ad20:	mov	r3, #9
   1ad24:	strb	r3, [sp, #72]	; 0x48
   1ad28:	subs	r6, r0, #0
   1ad2c:	beq	1ad94 <sav_begin_data+0xca0>
   1ad30:	cmp	r6, #64	; 0x40
   1ad34:	movcs	r6, #64	; 0x40
   1ad38:	cmp	r8, #0
   1ad3c:	mov	r2, #1
   1ad40:	mov	r1, r9
   1ad44:	mov	r0, fp
   1ad48:	mov	r8, #0
   1ad4c:	beq	1b530 <sav_begin_data+0x143c>
   1ad50:	ldr	r1, [sp, #12]
   1ad54:	mov	r0, fp
   1ad58:	bl	4154 <readstat_write_string@plt>
   1ad5c:	mov	r2, #1
   1ad60:	ldr	r1, [sp, #20]
   1ad64:	subs	r3, r0, #0
   1ad68:	mov	r0, fp
   1ad6c:	bne	1b53c <sav_begin_data+0x1448>
   1ad70:	bl	4454 <readstat_write_bytes@plt>
   1ad74:	mov	r2, r6
   1ad78:	mov	r1, r5
   1ad7c:	subs	r3, r0, #0
   1ad80:	mov	r0, fp
   1ad84:	bne	1b53c <sav_begin_data+0x1448>
   1ad88:	bl	4454 <readstat_write_bytes@plt>
   1ad8c:	subs	r3, r0, #0
   1ad90:	bne	1b53c <sav_begin_data+0x1448>
   1ad94:	ldr	r2, [fp, #28]
   1ad98:	cmp	r7, r2
   1ad9c:	blt	1ace0 <sav_begin_data+0xbec>
   1ada0:	ldr	r3, [pc, #972]	; 1b174 <sav_begin_data+0x1080>
   1ada4:	cmp	r2, #0
   1ada8:	add	r3, pc, r3
   1adac:	add	r3, r3, #112	; 0x70
   1adb0:	mov	r5, #0
   1adb4:	ldm	r3, {r0, r1, r2, r3}
   1adb8:	mov	ip, #9
   1adbc:	strb	r5, [sp, #60]	; 0x3c
   1adc0:	strb	ip, [sp, #61]	; 0x3d
   1adc4:	stm	sl, {r0, r1, r2, r3}
   1adc8:	ble	1ae38 <sav_begin_data+0xd44>
   1adcc:	ldr	r7, [pc, #932]	; 1b178 <sav_begin_data+0x1084>
   1add0:	ldr	r8, [pc, #932]	; 1b17c <sav_begin_data+0x1088>
   1add4:	ldr	r6, [sp, #24]
   1add8:	add	r7, pc, r7
   1addc:	add	r8, pc, r8
   1ade0:	str	ip, [sp, #28]
   1ade4:	mov	r1, r5
   1ade8:	mov	r0, fp
   1adec:	bl	437c <readstat_get_variable@plt>
   1adf0:	ldr	r3, [r0, #1600]	; 0x640
   1adf4:	mov	r4, r0
   1adf8:	cmp	r3, #255	; 0xff
   1adfc:	bhi	1b568 <sav_begin_data+0x1474>
   1ae00:	ldr	r3, [fp, #28]
   1ae04:	add	r5, r5, #1
   1ae08:	cmp	r5, r3
   1ae0c:	add	r6, r6, #15
   1ae10:	blt	1ade4 <sav_begin_data+0xcf0>
   1ae14:	b	1ae38 <sav_begin_data+0xd44>
   1ae18:	ldr	r3, [pc, #864]	; 1b180 <sav_begin_data+0x108c>
   1ae1c:	mov	ip, #9
   1ae20:	add	r3, pc, r3
   1ae24:	add	r3, r3, #112	; 0x70
   1ae28:	strb	r4, [sp, #60]	; 0x3c
   1ae2c:	ldm	r3, {r0, r1, r2, r3}
   1ae30:	strb	ip, [sp, #61]	; 0x3d
   1ae34:	stm	sl, {r0, r1, r2, r3}
   1ae38:	ldr	r3, [sp, #148]	; 0x94
   1ae3c:	cmp	r3, #0
   1ae40:	bne	1afa4 <sav_begin_data+0xeb0>
   1ae44:	ldr	r3, [pc, #824]	; 1b184 <sav_begin_data+0x1090>
   1ae48:	ldr	r2, [fp, #40]	; 0x28
   1ae4c:	add	r3, pc, r3
   1ae50:	add	r3, r3, #128	; 0x80
   1ae54:	cmp	r2, #0
   1ae58:	ldm	r3, {r0, r1, r2, r3}
   1ae5c:	movgt	r4, #0
   1ae60:	strgt	r9, [sp, #28]
   1ae64:	stm	sl, {r0, r1, r2, r3}
   1ae68:	ble	1aea0 <sav_begin_data+0xdac>
   1ae6c:	mov	r1, r4
   1ae70:	mov	r0, fp
   1ae74:	bl	4424 <readstat_get_label_set@plt>
   1ae78:	mov	r6, r0
   1ae7c:	bl	1929c <readstat_label_set_number_short_variables>
   1ae80:	ldr	r9, [r6, #276]	; 0x114
   1ae84:	cmp	r0, r9
   1ae88:	blt	1b4cc <sav_begin_data+0x13d8>
   1ae8c:	ldr	r3, [fp, #40]	; 0x28
   1ae90:	add	r4, r4, #1
   1ae94:	cmp	r4, r3
   1ae98:	blt	1ae6c <sav_begin_data+0xd78>
   1ae9c:	ldr	r9, [sp, #28]
   1aea0:	ldr	r3, [sp, #148]	; 0x94
   1aea4:	cmp	r3, #0
   1aea8:	bne	1b324 <sav_begin_data+0x1230>
   1aeac:	ldr	r3, [pc, #724]	; 1b188 <sav_begin_data+0x1094>
   1aeb0:	ldr	r2, [fp, #28]
   1aeb4:	add	r3, pc, r3
   1aeb8:	add	r3, r3, #96	; 0x60
   1aebc:	cmp	r2, #0
   1aec0:	str	r2, [sp, #28]
   1aec4:	ldm	r3, {r0, r1, r2, r3}
   1aec8:	movgt	r8, #0
   1aecc:	stm	sl, {r0, r1, r2, r3}
   1aed0:	ble	1b04c <sav_begin_data+0xf58>
   1aed4:	mov	r1, r8
   1aed8:	mov	r0, fp
   1aedc:	bl	437c <readstat_get_variable@plt>
   1aee0:	mov	r6, r0
   1aee4:	add	r0, r0, #8
   1aee8:	bl	41fc <strlen@plt>
   1aeec:	str	r0, [sp, #32]
   1aef0:	mov	r0, r6
   1aef4:	bl	42c8 <readstat_variable_get_storage_width@plt>
   1aef8:	cmp	r0, #8
   1aefc:	ble	1b03c <sav_begin_data+0xf48>
   1af00:	mov	r4, #0
   1af04:	mov	r5, r4
   1af08:	mov	r7, r8
   1af0c:	mov	r0, r6
   1af10:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
   1af14:	mov	r2, r5
   1af18:	mov	r1, r6
   1af1c:	cmp	r5, r0
   1af20:	mov	r0, r9
   1af24:	bge	1b018 <sav_begin_data+0xf24>
   1af28:	bl	3f44 <readstat_variable_get_missing_range_lo@plt>
   1af2c:	mov	r2, r5
   1af30:	mov	r1, r6
   1af34:	ldr	r0, [sp, #12]
   1af38:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   1af3c:	ldm	r9, {r0, r1, r2, r3}
   1af40:	bl	3fb0 <readstat_string_value@plt>
   1af44:	ldr	r3, [sp, #12]
   1af48:	add	r5, r5, #1
   1af4c:	mov	r8, r0
   1af50:	ldm	r3, {r0, r1, r2, r3}
   1af54:	bl	3fb0 <readstat_string_value@plt>
   1af58:	cmp	r8, #0
   1af5c:	cmpne	r0, #0
   1af60:	mov	r1, r0
   1af64:	mov	r0, r8
   1af68:	beq	1af0c <sav_begin_data+0xe18>
   1af6c:	bl	3e00 <strcmp@plt>
   1af70:	cmp	r0, #0
   1af74:	addeq	r4, r4, #1
   1af78:	b	1af0c <sav_begin_data+0xe18>
   1af7c:	ldr	r3, [pc, #520]	; 1b18c <sav_begin_data+0x1098>
   1af80:	mov	r2, #0
   1af84:	add	r3, pc, r3
   1af88:	add	r3, r3, #112	; 0x70
   1af8c:	strb	r2, [sp, #60]	; 0x3c
   1af90:	ldm	r3, {r0, r1, r2, r3}
   1af94:	mov	ip, #9
   1af98:	strb	ip, [sp, #61]	; 0x3d
   1af9c:	stm	sl, {r0, r1, r2, r3}
   1afa0:	b	1ae38 <sav_begin_data+0xd44>
   1afa4:	mov	r2, #16
   1afa8:	mov	r1, sl
   1afac:	mov	r0, fp
   1afb0:	bl	4454 <readstat_write_bytes@plt>
   1afb4:	subs	r4, r0, #0
   1afb8:	bne	1a4a0 <sav_begin_data+0x3ac>
   1afbc:	ldr	r3, [fp, #28]
   1afc0:	cmp	r3, #0
   1afc4:	ble	1ae44 <sav_begin_data+0xd50>
   1afc8:	ldr	r8, [pc, #448]	; 1b190 <sav_begin_data+0x109c>
   1afcc:	ldr	r7, [pc, #448]	; 1b194 <sav_begin_data+0x10a0>
   1afd0:	ldr	r6, [sp, #24]
   1afd4:	add	r8, pc, r8
   1afd8:	mov	r5, r4
   1afdc:	add	r7, pc, r7
   1afe0:	str	r7, [sp, #28]
   1afe4:	mov	r1, r5
   1afe8:	mov	r0, fp
   1afec:	bl	437c <readstat_get_variable@plt>
   1aff0:	add	r5, r5, #1
   1aff4:	ldr	r3, [r0, #1600]	; 0x640
   1aff8:	mov	r4, r0
   1affc:	cmp	r3, #255	; 0xff
   1b000:	bhi	1b2a4 <sav_begin_data+0x11b0>
   1b004:	ldr	r3, [fp, #28]
   1b008:	add	r6, r6, #15
   1b00c:	cmp	r5, r3
   1b010:	blt	1afe4 <sav_begin_data+0xef0>
   1b014:	b	1ae44 <sav_begin_data+0xd50>
   1b018:	cmp	r4, #0
   1b01c:	mov	r8, r7
   1b020:	beq	1b03c <sav_begin_data+0xf48>
   1b024:	ldr	r3, [sp, #148]	; 0x94
   1b028:	ldr	r2, [sp, #32]
   1b02c:	add	r3, r2, r3
   1b030:	add	r3, r3, #9
   1b034:	add	r4, r3, r4, lsl #3
   1b038:	str	r4, [sp, #148]	; 0x94
   1b03c:	ldr	r3, [sp, #28]
   1b040:	add	r8, r8, #1
   1b044:	cmp	r3, r8
   1b048:	bne	1aed4 <sav_begin_data+0xde0>
   1b04c:	ldr	r3, [sp, #148]	; 0x94
   1b050:	cmp	r3, #0
   1b054:	bne	1b1bc <sav_begin_data+0x10c8>
   1b058:	ldr	r3, [pc, #312]	; 1b198 <sav_begin_data+0x10a4>
   1b05c:	ldr	r4, [fp, #80]	; 0x50
   1b060:	add	r3, pc, r3
   1b064:	add	r3, r3, #144	; 0x90
   1b068:	asr	r5, r4, #31
   1b06c:	ldm	r3, {r0, r1, r2, r3}
   1b070:	strd	r4, [sp, #88]	; 0x58
   1b074:	mov	r4, #1
   1b078:	mov	r5, #0
   1b07c:	stm	sl, {r0, r1, r2, r3}
   1b080:	mov	r2, #16
   1b084:	mov	r1, sl
   1b088:	mov	r0, fp
   1b08c:	strd	r4, [sp, #72]	; 0x48
   1b090:	bl	4454 <readstat_write_bytes@plt>
   1b094:	subs	r4, r0, #0
   1b098:	bne	1a4a0 <sav_begin_data+0x3ac>
   1b09c:	mov	r1, r9
   1b0a0:	mov	r2, #8
   1b0a4:	mov	r0, fp
   1b0a8:	bl	4454 <readstat_write_bytes@plt>
   1b0ac:	subs	r4, r0, #0
   1b0b0:	bne	1a4a0 <sav_begin_data+0x3ac>
   1b0b4:	ldr	r1, [sp, #12]
   1b0b8:	mov	r2, #8
   1b0bc:	mov	r0, fp
   1b0c0:	bl	4454 <readstat_write_bytes@plt>
   1b0c4:	subs	r4, r0, #0
   1b0c8:	bne	1a4a0 <sav_begin_data+0x3ac>
   1b0cc:	ldr	r3, [pc, #200]	; 1b19c <sav_begin_data+0x10a8>
   1b0d0:	mov	r1, sl
   1b0d4:	mov	r2, #8
   1b0d8:	mov	r0, fp
   1b0dc:	str	r4, [sl, #4]
   1b0e0:	str	r3, [sp, #136]	; 0x88
   1b0e4:	bl	4454 <readstat_write_bytes@plt>
   1b0e8:	mov	r4, r0
   1b0ec:	ldr	r0, [sp, #24]
   1b0f0:	bl	3ec0 <free@plt>
   1b0f4:	cmp	r4, #0
   1b0f8:	bne	1a10c <sav_begin_data+0x18>
   1b0fc:	ldr	r0, [fp, #76]	; 0x4c
   1b100:	bl	3fe0 <sav_compressed_row_bound@plt>
   1b104:	ldr	r3, [fp, #16]
   1b108:	cmp	r3, #1
   1b10c:	beq	1b1b0 <sav_begin_data+0x10bc>
   1b110:	cmp	r3, #2
   1b114:	bne	1a10c <sav_begin_data+0x18>
   1b118:	ldr	r2, [fp, #4]
   1b11c:	mov	r3, r4
   1b120:	bl	40ac <zsav_ctx_init@plt>
   1b124:	str	r0, [fp, #300]	; 0x12c
   1b128:	b	1a10c <sav_begin_data+0x18>
   1b12c:	.word	0x0000d490
   1b130:	.word	0x0000d488
   1b134:	.word	0x0000d484
   1b138:	.word	0x0000d290
   1b13c:	.word	0x324c4624
   1b140:	.word	0x0000d2fc
   1b144:	.word	0x51eb851f
   1b148:	.word	0x40590000
   1b14c:	.word	0x0000d274
   1b150:	.word	0x0000c078
   1b154:	.word	0x0000cf5c
   1b158:	.word	0x0000fde9
   1b15c:	.word	0x7fefffff
   1b160:	.word	0x20820821
   1b164:	.word	0x0000cda8
   1b168:	.word	0x20202020
   1b16c:	.word	0x0000c88c
   1b170:	.word	0x0000b408
   1b174:	.word	0x0000c760
   1b178:	.word	0x0000b2fc
   1b17c:	.word	0x0000c868
   1b180:	.word	0x0000c6e8
   1b184:	.word	0x0000c6bc
   1b188:	.word	0x0000c654
   1b18c:	.word	0x0000c584
   1b190:	.word	0x0000c670
   1b194:	.word	0x0000b0f8
   1b198:	.word	0x0000c4a8
   1b19c:	.word	0x000003e7
   1b1a0:	.word	0x0000c0ec
   1b1a4:	.word	0x0000ac9c
   1b1a8:	.word	0x0a7c5ac5
   1b1ac:	.word	0x000186a0
   1b1b0:	bl	422c <readstat_malloc@plt>
   1b1b4:	str	r0, [fp, #300]	; 0x12c
   1b1b8:	b	1a10c <sav_begin_data+0x18>
   1b1bc:	mov	r2, #16
   1b1c0:	mov	r1, sl
   1b1c4:	mov	r0, fp
   1b1c8:	bl	4454 <readstat_write_bytes@plt>
   1b1cc:	subs	r4, r0, #0
   1b1d0:	bne	1a4a0 <sav_begin_data+0x3ac>
   1b1d4:	ldr	r3, [sp, #28]
   1b1d8:	cmp	r3, #0
   1b1dc:	ble	1b058 <sav_begin_data+0xf64>
   1b1e0:	ldr	r3, [sp, #16]
   1b1e4:	mov	r8, r4
   1b1e8:	sub	r3, r3, #1
   1b1ec:	str	r3, [sp, #32]
   1b1f0:	mov	r1, r8
   1b1f4:	mov	r0, fp
   1b1f8:	bl	437c <readstat_get_variable@plt>
   1b1fc:	add	r6, r0, #8
   1b200:	mov	r5, r0
   1b204:	mov	r0, r6
   1b208:	bl	41fc <strlen@plt>
   1b20c:	mov	r3, #0
   1b210:	strb	r3, [sp, #55]	; 0x37
   1b214:	str	r0, [sp, #56]	; 0x38
   1b218:	mov	r0, r5
   1b21c:	bl	42c8 <readstat_variable_get_storage_width@plt>
   1b220:	cmp	r0, #8
   1b224:	movgt	r4, #0
   1b228:	ble	1b554 <sav_begin_data+0x1460>
   1b22c:	mov	r0, r5
   1b230:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
   1b234:	mov	r2, r4
   1b238:	mov	r1, r5
   1b23c:	cmp	r4, r0
   1b240:	mov	r0, r9
   1b244:	bge	1b544 <sav_begin_data+0x1450>
   1b248:	bl	3f44 <readstat_variable_get_missing_range_lo@plt>
   1b24c:	mov	r2, r4
   1b250:	mov	r1, r5
   1b254:	ldr	r0, [sp, #12]
   1b258:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   1b25c:	ldm	r9, {r0, r1, r2, r3}
   1b260:	bl	3fb0 <readstat_string_value@plt>
   1b264:	ldr	r3, [sp, #12]
   1b268:	add	r4, r4, #1
   1b26c:	mov	r7, r0
   1b270:	ldm	r3, {r0, r1, r2, r3}
   1b274:	bl	3fb0 <readstat_string_value@plt>
   1b278:	cmp	r7, #0
   1b27c:	cmpne	r0, #0
   1b280:	mov	r1, r0
   1b284:	mov	r0, r7
   1b288:	beq	1b22c <sav_begin_data+0x1138>
   1b28c:	bl	3e00 <strcmp@plt>
   1b290:	cmp	r0, #0
   1b294:	ldrbeq	r3, [sp, #55]	; 0x37
   1b298:	addeq	r3, r3, #1
   1b29c:	strbeq	r3, [sp, #55]	; 0x37
   1b2a0:	b	1b22c <sav_begin_data+0x1138>
   1b2a4:	mov	r3, r6
   1b2a8:	ldr	r2, [sp, #28]
   1b2ac:	mov	r1, #9
   1b2b0:	mov	r0, r9
   1b2b4:	bl	4280 <snprintf@plt>
   1b2b8:	ldr	lr, [r4, #1600]	; 0x640
   1b2bc:	ldr	r0, [pc, #-284]	; 1b1a8 <sav_begin_data+0x10b4>
   1b2c0:	ldr	r7, [pc, #-284]	; 1b1ac <sav_begin_data+0x10b8>
   1b2c4:	lsr	ip, lr, #5
   1b2c8:	ldr	r4, [sp, #12]
   1b2cc:	umull	r0, ip, r0, ip
   1b2d0:	mov	r2, r8
   1b2d4:	lsr	ip, ip, #7
   1b2d8:	mov	r3, r9
   1b2dc:	mul	ip, r7, ip
   1b2e0:	mov	r1, #15
   1b2e4:	sub	ip, lr, ip
   1b2e8:	mov	r0, r4
   1b2ec:	str	ip, [sp]
   1b2f0:	bl	4280 <snprintf@plt>
   1b2f4:	mov	r1, r4
   1b2f8:	mov	r0, fp
   1b2fc:	bl	4154 <readstat_write_string@plt>
   1b300:	mov	r2, #2
   1b304:	ldr	r1, [sp, #20]
   1b308:	subs	r4, r0, #0
   1b30c:	mov	r0, fp
   1b310:	bne	1a4a0 <sav_begin_data+0x3ac>
   1b314:	bl	4454 <readstat_write_bytes@plt>
   1b318:	subs	r4, r0, #0
   1b31c:	beq	1b004 <sav_begin_data+0xf10>
   1b320:	b	1a4a0 <sav_begin_data+0x3ac>
   1b324:	mov	r2, #16
   1b328:	mov	r1, sl
   1b32c:	mov	r0, fp
   1b330:	bl	4454 <readstat_write_bytes@plt>
   1b334:	subs	r4, r0, #0
   1b338:	bne	1a4a0 <sav_begin_data+0x3ac>
   1b33c:	ldr	r3, [fp, #40]	; 0x28
   1b340:	cmp	r3, #0
   1b344:	ble	1aeac <sav_begin_data+0xdb8>
   1b348:	mov	r5, r4
   1b34c:	str	r4, [sp, #28]
   1b350:	str	sl, [sp, #32]
   1b354:	ldr	r1, [sp, #28]
   1b358:	mov	r0, fp
   1b35c:	bl	4424 <readstat_get_label_set@plt>
   1b360:	mov	r7, r0
   1b364:	bl	1929c <readstat_label_set_number_short_variables>
   1b368:	ldr	r4, [r7, #276]	; 0x114
   1b36c:	cmp	r0, r4
   1b370:	bge	1b3d4 <sav_begin_data+0x12e0>
   1b374:	ldr	r3, [r7, #264]	; 0x108
   1b378:	cmp	r4, #0
   1b37c:	str	r3, [sp, #56]	; 0x38
   1b380:	ble	1b3d4 <sav_begin_data+0x12e0>
   1b384:	mov	r6, #0
   1b388:	str	r4, [sp, #36]	; 0x24
   1b38c:	mov	r1, r6
   1b390:	mov	r0, r7
   1b394:	bl	4448 <readstat_get_label_set_variable@plt>
   1b398:	add	r8, r0, #8
   1b39c:	mov	sl, r0
   1b3a0:	mov	r0, r8
   1b3a4:	bl	41fc <strlen@plt>
   1b3a8:	str	r0, [sp, #60]	; 0x3c
   1b3ac:	mov	r0, sl
   1b3b0:	bl	42c8 <readstat_variable_get_storage_width@plt>
   1b3b4:	cmp	r0, #8
   1b3b8:	mov	r1, r0
   1b3bc:	str	r0, [sp, #72]	; 0x48
   1b3c0:	bgt	1b5e8 <sav_begin_data+0x14f4>
   1b3c4:	ldr	r3, [sp, #36]	; 0x24
   1b3c8:	add	r6, r6, #1
   1b3cc:	cmp	r3, r6
   1b3d0:	bne	1b38c <sav_begin_data+0x1298>
   1b3d4:	ldr	r2, [sp, #28]
   1b3d8:	ldr	r3, [fp, #40]	; 0x28
   1b3dc:	add	r2, r2, #1
   1b3e0:	cmp	r2, r3
   1b3e4:	str	r2, [sp, #28]
   1b3e8:	blt	1b354 <sav_begin_data+0x1260>
   1b3ec:	cmp	r5, #0
   1b3f0:	ldr	sl, [sp, #32]
   1b3f4:	beq	1aeac <sav_begin_data+0xdb8>
   1b3f8:	mov	r0, r5
   1b3fc:	bl	3ec0 <free@plt>
   1b400:	b	1aeac <sav_begin_data+0xdb8>
   1b404:	ldr	r2, [fp, #28]
   1b408:	add	r6, r6, #1
   1b40c:	cmp	r6, r2
   1b410:	blt	1a74c <sav_begin_data+0x658>
   1b414:	ldr	r3, [pc, #-636]	; 1b1a0 <sav_begin_data+0x10ac>
   1b418:	cmp	r2, #0
   1b41c:	add	r3, pc, r3
   1b420:	add	r3, r3, #80	; 0x50
   1b424:	ldm	r3, {r0, r1, r2, r3}
   1b428:	stm	sl, {r0, r1, r2, r3}
   1b42c:	ble	1ac8c <sav_begin_data+0xb98>
   1b430:	ldr	r7, [pc, #-660]	; 1b1a4 <sav_begin_data+0x10b0>
   1b434:	ldr	r5, [sp, #24]
   1b438:	add	r7, pc, r7
   1b43c:	mov	r4, #0
   1b440:	mov	r6, #9
   1b444:	mov	r1, r4
   1b448:	mov	r0, fp
   1b44c:	bl	437c <readstat_get_variable@plt>
   1b450:	mov	r3, r5
   1b454:	mov	r2, r7
   1b458:	mov	r1, r6
   1b45c:	add	r4, r4, #1
   1b460:	add	r5, r5, #15
   1b464:	mov	r8, r0
   1b468:	ldr	r0, [sp, #12]
   1b46c:	bl	4280 <snprintf@plt>
   1b470:	ldr	r0, [sp, #12]
   1b474:	bl	41fc <strlen@plt>
   1b478:	str	r0, [sp, #28]
   1b47c:	add	r0, r8, #8
   1b480:	bl	41fc <strlen@plt>
   1b484:	ldr	r2, [sp, #28]
   1b488:	cmp	r0, #0
   1b48c:	cmpne	r2, #0
   1b490:	beq	1b4b0 <sav_begin_data+0x13bc>
   1b494:	ldr	r3, [sp, #148]	; 0x94
   1b498:	add	r3, r3, #2
   1b49c:	add	r3, r3, r2
   1b4a0:	cmp	r0, #64	; 0x40
   1b4a4:	addls	r3, r3, r0
   1b4a8:	addhi	r3, r3, #64	; 0x40
   1b4ac:	str	r3, [sp, #148]	; 0x94
   1b4b0:	ldr	r2, [fp, #28]
   1b4b4:	cmp	r4, r2
   1b4b8:	blt	1b444 <sav_begin_data+0x1350>
   1b4bc:	ldr	r3, [sp, #148]	; 0x94
   1b4c0:	cmp	r3, #0
   1b4c4:	bgt	1ac98 <sav_begin_data+0xba4>
   1b4c8:	b	1ada0 <sav_begin_data+0xcac>
   1b4cc:	cmp	r9, #0
   1b4d0:	ldr	r8, [r6, #264]	; 0x108
   1b4d4:	ble	1ae8c <sav_begin_data+0xd98>
   1b4d8:	mov	r3, r8
   1b4dc:	mov	r5, #0
   1b4e0:	mov	r8, r6
   1b4e4:	mov	r6, r3
   1b4e8:	str	r4, [sp, #32]
   1b4ec:	mov	r1, r5
   1b4f0:	mov	r0, r8
   1b4f4:	bl	4448 <readstat_get_label_set_variable@plt>
   1b4f8:	mov	r4, r0
   1b4fc:	add	r0, r0, #8
   1b500:	bl	41fc <strlen@plt>
   1b504:	mov	r7, r0
   1b508:	mov	r0, r4
   1b50c:	bl	42c8 <readstat_variable_get_storage_width@plt>
   1b510:	cmp	r0, #8
   1b514:	mov	r4, r0
   1b518:	bgt	1b740 <sav_begin_data+0x164c>
   1b51c:	add	r5, r5, #1
   1b520:	cmp	r9, r5
   1b524:	bne	1b4ec <sav_begin_data+0x13f8>
   1b528:	ldr	r4, [sp, #32]
   1b52c:	b	1ae8c <sav_begin_data+0xd98>
   1b530:	bl	4454 <readstat_write_bytes@plt>
   1b534:	subs	r3, r0, #0
   1b538:	beq	1ad50 <sav_begin_data+0xc5c>
   1b53c:	mov	r4, r3
   1b540:	b	1a4a0 <sav_begin_data+0x3ac>
   1b544:	ldr	r3, [sp, #32]
   1b548:	ldrsb	r3, [r3]
   1b54c:	cmp	r3, #0
   1b550:	bne	1a9f0 <sav_begin_data+0x8fc>
   1b554:	ldr	r3, [sp, #28]
   1b558:	add	r8, r8, #1
   1b55c:	cmp	r3, r8
   1b560:	bne	1b1f0 <sav_begin_data+0x10fc>
   1b564:	b	1b058 <sav_begin_data+0xf64>
   1b568:	mov	r3, r6
   1b56c:	mov	r2, r7
   1b570:	ldr	r1, [sp, #28]
   1b574:	mov	r0, r9
   1b578:	bl	4280 <snprintf@plt>
   1b57c:	ldr	lr, [r4, #1600]	; 0x640
   1b580:	ldr	r0, [pc, #-992]	; 1b1a8 <sav_begin_data+0x10b4>
   1b584:	ldr	r4, [sp, #12]
   1b588:	lsr	ip, lr, #5
   1b58c:	mov	r3, r9
   1b590:	umull	r0, ip, r0, ip
   1b594:	ldr	r0, [pc, #-1008]	; 1b1ac <sav_begin_data+0x10b8>
   1b598:	mov	r2, r8
   1b59c:	lsr	ip, ip, #7
   1b5a0:	mov	r1, #15
   1b5a4:	mul	ip, r0, ip
   1b5a8:	mov	r0, r4
   1b5ac:	sub	ip, lr, ip
   1b5b0:	str	ip, [sp]
   1b5b4:	add	r6, r6, r1
   1b5b8:	bl	4280 <snprintf@plt>
   1b5bc:	mov	r0, r4
   1b5c0:	bl	41fc <strlen@plt>
   1b5c4:	ldr	r3, [sp, #148]	; 0x94
   1b5c8:	ldr	r2, [fp, #28]
   1b5cc:	add	r5, r5, #1
   1b5d0:	add	r3, r3, #2
   1b5d4:	cmp	r5, r2
   1b5d8:	add	r3, r3, r0
   1b5dc:	str	r3, [sp, #148]	; 0x94
   1b5e0:	blt	1ade4 <sav_begin_data+0xcf0>
   1b5e4:	b	1ae38 <sav_begin_data+0xd44>
   1b5e8:	mov	r0, r5
   1b5ec:	bl	3ff8 <realloc@plt>
   1b5f0:	ldr	r2, [sp, #72]	; 0x48
   1b5f4:	mov	r1, #32
   1b5f8:	mov	r5, r0
   1b5fc:	bl	42a4 <memset@plt>
   1b600:	mov	r2, #4
   1b604:	ldr	r1, [sp, #20]
   1b608:	mov	r0, fp
   1b60c:	bl	4454 <readstat_write_bytes@plt>
   1b610:	subs	ip, r0, #0
   1b614:	bne	1b730 <sav_begin_data+0x163c>
   1b618:	mov	r1, r8
   1b61c:	ldr	r2, [sp, #60]	; 0x3c
   1b620:	mov	r0, fp
   1b624:	bl	4454 <readstat_write_bytes@plt>
   1b628:	subs	ip, r0, #0
   1b62c:	bne	1b730 <sav_begin_data+0x163c>
   1b630:	mov	r2, #4
   1b634:	mov	r1, r9
   1b638:	mov	r0, fp
   1b63c:	bl	4454 <readstat_write_bytes@plt>
   1b640:	subs	ip, r0, #0
   1b644:	bne	1b730 <sav_begin_data+0x163c>
   1b648:	mov	r2, #4
   1b64c:	ldr	r1, [sp, #16]
   1b650:	mov	r0, fp
   1b654:	bl	4454 <readstat_write_bytes@plt>
   1b658:	subs	ip, r0, #0
   1b65c:	bne	1b730 <sav_begin_data+0x163c>
   1b660:	ldr	r3, [sp, #56]	; 0x38
   1b664:	cmp	r3, #0
   1b668:	ble	1b3c4 <sav_begin_data+0x12d0>
   1b66c:	mov	r8, ip
   1b670:	mov	r1, r8
   1b674:	mov	r0, r7
   1b678:	bl	44cc <readstat_get_value_label@plt>
   1b67c:	mov	r2, #4
   1b680:	mov	r1, r9
   1b684:	add	r8, r8, #1
   1b688:	ldr	r3, [r0, #28]
   1b68c:	ldr	sl, [r0, #20]
   1b690:	cmp	r3, #121	; 0x79
   1b694:	movlt	ip, r3
   1b698:	movge	ip, #120	; 0x78
   1b69c:	mov	r4, r0
   1b6a0:	mov	r0, fp
   1b6a4:	str	ip, [sp, #88]	; 0x58
   1b6a8:	bl	4454 <readstat_write_bytes@plt>
   1b6ac:	mov	r2, sl
   1b6b0:	subs	ip, r0, #0
   1b6b4:	mov	r0, fp
   1b6b8:	bne	1b730 <sav_begin_data+0x163c>
   1b6bc:	ldr	r1, [r4, #16]
   1b6c0:	bl	4454 <readstat_write_bytes@plt>
   1b6c4:	mov	r1, r5
   1b6c8:	subs	ip, r0, #0
   1b6cc:	mov	r0, fp
   1b6d0:	bne	1b730 <sav_begin_data+0x163c>
   1b6d4:	ldr	r3, [sp, #72]	; 0x48
   1b6d8:	cmp	sl, r3
   1b6dc:	sub	r2, r3, sl
   1b6e0:	blt	1b724 <sav_begin_data+0x1630>
   1b6e4:	mov	r2, #4
   1b6e8:	ldr	r1, [sp, #12]
   1b6ec:	mov	r0, fp
   1b6f0:	bl	4454 <readstat_write_bytes@plt>
   1b6f4:	subs	ip, r0, #0
   1b6f8:	mov	r0, fp
   1b6fc:	bne	1b730 <sav_begin_data+0x163c>
   1b700:	ldr	r1, [r4, #24]
   1b704:	ldr	r2, [sp, #88]	; 0x58
   1b708:	bl	4454 <readstat_write_bytes@plt>
   1b70c:	subs	ip, r0, #0
   1b710:	bne	1b730 <sav_begin_data+0x163c>
   1b714:	ldr	r3, [sp, #56]	; 0x38
   1b718:	cmp	r8, r3
   1b71c:	blt	1b670 <sav_begin_data+0x157c>
   1b720:	b	1b3c4 <sav_begin_data+0x12d0>
   1b724:	bl	4454 <readstat_write_bytes@plt>
   1b728:	subs	ip, r0, #0
   1b72c:	beq	1b6e4 <sav_begin_data+0x15f0>
   1b730:	mov	r0, r5
   1b734:	mov	r4, ip
   1b738:	bl	3ec0 <free@plt>
   1b73c:	b	1a4a0 <sav_begin_data+0x3ac>
   1b740:	ldr	r3, [sp, #148]	; 0x94
   1b744:	cmp	r6, #0
   1b748:	add	r3, r7, r3
   1b74c:	add	r3, r3, #12
   1b750:	str	r3, [sp, #148]	; 0x94
   1b754:	ble	1b51c <sav_begin_data+0x1428>
   1b758:	mov	r7, #0
   1b75c:	mov	r1, r7
   1b760:	mov	r0, r8
   1b764:	bl	44cc <readstat_get_value_label@plt>
   1b768:	ldr	r3, [sp, #148]	; 0x94
   1b76c:	add	r7, r7, #1
   1b770:	add	r3, r4, r3
   1b774:	add	r3, r3, #8
   1b778:	ldr	r2, [r0, #28]
   1b77c:	cmp	r2, #120	; 0x78
   1b780:	addle	r3, r3, r2
   1b784:	addgt	r3, r3, #120	; 0x78
   1b788:	cmp	r6, r7
   1b78c:	str	r3, [sp, #148]	; 0x94
   1b790:	bne	1b75c <sav_begin_data+0x1668>
   1b794:	b	1b51c <sav_begin_data+0x1428>

0001b798 <readstat_begin_writing_sav>:
   1b798:	ldr	r3, [pc, #304]	; 1b8d0 <readstat_begin_writing_sav+0x138>
   1b79c:	ldr	ip, [pc, #304]	; 1b8d4 <readstat_begin_writing_sav+0x13c>
   1b7a0:	push	{r4, r5, lr}
   1b7a4:	add	r3, pc, r3
   1b7a8:	ldr	r4, [pc, #296]	; 1b8d8 <readstat_begin_writing_sav+0x140>
   1b7ac:	ldr	lr, [pc, #296]	; 1b8dc <readstat_begin_writing_sav+0x144>
   1b7b0:	add	ip, pc, ip
   1b7b4:	str	r3, [r0, #236]	; 0xec
   1b7b8:	ldr	r3, [pc, #288]	; 1b8e0 <readstat_begin_writing_sav+0x148>
   1b7bc:	add	r4, pc, r4
   1b7c0:	add	lr, pc, lr
   1b7c4:	str	ip, [r0, #232]	; 0xe8
   1b7c8:	ldr	ip, [pc, #276]	; 1b8e4 <readstat_begin_writing_sav+0x14c>
   1b7cc:	add	r3, pc, r3
   1b7d0:	str	r4, [r0, #292]	; 0x124
   1b7d4:	str	lr, [r0, #228]	; 0xe4
   1b7d8:	ldr	r4, [pc, #264]	; 1b8e8 <readstat_begin_writing_sav+0x150>
   1b7dc:	ldr	lr, [pc, #264]	; 1b8ec <readstat_begin_writing_sav+0x154>
   1b7e0:	add	ip, pc, ip
   1b7e4:	str	r3, [r0, #252]	; 0xfc
   1b7e8:	ldr	r3, [pc, #256]	; 1b8f0 <readstat_begin_writing_sav+0x158>
   1b7ec:	add	r4, pc, r4
   1b7f0:	add	lr, pc, lr
   1b7f4:	ldr	r5, [r0, #8]
   1b7f8:	str	ip, [r0, #248]	; 0xf8
   1b7fc:	ldr	ip, [pc, #240]	; 1b8f4 <readstat_begin_writing_sav+0x15c>
   1b800:	add	r3, pc, r3
   1b804:	str	r4, [r0, #240]	; 0xf0
   1b808:	str	lr, [r0, #244]	; 0xf4
   1b80c:	ldr	r4, [pc, #228]	; 1b8f8 <readstat_begin_writing_sav+0x160>
   1b810:	ldr	lr, [pc, #228]	; 1b8fc <readstat_begin_writing_sav+0x164>
   1b814:	add	ip, pc, ip
   1b818:	cmp	r5, #3
   1b81c:	str	r3, [r0, #276]	; 0x114
   1b820:	ldr	r3, [pc, #216]	; 1b900 <readstat_begin_writing_sav+0x168>
   1b824:	add	r4, pc, r4
   1b828:	add	lr, pc, lr
   1b82c:	str	ip, [r0, #268]	; 0x10c
   1b830:	moveq	ip, #2
   1b834:	add	r3, pc, r3
   1b838:	str	r4, [r0, #256]	; 0x100
   1b83c:	str	lr, [r0, #264]	; 0x108
   1b840:	streq	ip, [r0, #16]
   1b844:	beq	1b8a4 <readstat_begin_writing_sav+0x10c>
   1b848:	cmp	r5, #0
   1b84c:	ldr	ip, [r0, #16]
   1b850:	bne	1b864 <readstat_begin_writing_sav+0xcc>
   1b854:	cmp	ip, #2
   1b858:	moveq	lr, #3
   1b85c:	movne	lr, #2
   1b860:	str	lr, [r0, #8]
   1b864:	cmp	ip, #1
   1b868:	beq	1b884 <readstat_begin_writing_sav+0xec>
   1b86c:	cmp	ip, #2
   1b870:	beq	1b8a4 <readstat_begin_writing_sav+0x10c>
   1b874:	cmp	ip, #0
   1b878:	beq	1b89c <readstat_begin_writing_sav+0x104>
   1b87c:	mov	r0, #6
   1b880:	pop	{r4, r5, pc}
   1b884:	ldr	ip, [pc, #120]	; 1b904 <readstat_begin_writing_sav+0x16c>
   1b888:	ldr	lr, [pc, #120]	; 1b908 <readstat_begin_writing_sav+0x170>
   1b88c:	add	lr, pc, lr
   1b890:	str	lr, [r0, #280]	; 0x118
   1b894:	ldr	r3, [r3, ip]
   1b898:	str	r3, [r0, #288]	; 0x120
   1b89c:	pop	{r4, r5, lr}
   1b8a0:	b	3f68 <readstat_begin_writing_file@plt>
   1b8a4:	ldr	r4, [pc, #96]	; 1b90c <readstat_begin_writing_sav+0x174>
   1b8a8:	ldr	lr, [pc, #96]	; 1b910 <readstat_begin_writing_sav+0x178>
   1b8ac:	ldr	ip, [pc, #96]	; 1b914 <readstat_begin_writing_sav+0x17c>
   1b8b0:	ldr	r4, [r3, r4]
   1b8b4:	str	r4, [r0, #280]	; 0x118
   1b8b8:	ldr	lr, [r3, lr]
   1b8bc:	str	lr, [r0, #284]	; 0x11c
   1b8c0:	ldr	r3, [r3, ip]
   1b8c4:	pop	{r4, r5, lr}
   1b8c8:	str	r3, [r0, #288]	; 0x120
   1b8cc:	b	3f68 <readstat_begin_writing_file@plt>
   1b8d0:	.word	0xffffdac0
   1b8d4:	.word	0xffffdc5c
   1b8d8:	.word	0xffffd948
   1b8dc:	.word	0xffffdb28
   1b8e0:	.word	0xffffd9e4
   1b8e4:	.word	0xffffd9f8
   1b8e8:	.word	0xffffda48
   1b8ec:	.word	0xffffda14
   1b8f0:	.word	0xffffe8ec
   1b8f4:	.word	0xffffd964
   1b8f8:	.word	0xffffdb2c
   1b8fc:	.word	0xffffd938
   1b900:	.word	0x000297c4
   1b904:	.word	0x000002d4
   1b908:	.word	0xffffd8a8
   1b90c:	.word	0x000002e0
   1b910:	.word	0x000002e8
   1b914:	.word	0x000002d0

0001b918 <spss_format>:
   1b918:	ldr	r3, [r2]
   1b91c:	cmp	r3, #41	; 0x29
   1b920:	bhi	1b98c <spss_format+0x74>
   1b924:	push	{r4, lr}
   1b928:	sub	sp, sp, #8
   1b92c:	ldr	lr, [pc, #148]	; 1b9c8 <spss_format+0xb0>
   1b930:	add	lr, pc, lr
   1b934:	ldrb	ip, [lr, r3, lsl #4]
   1b938:	cmp	ip, #0
   1b93c:	moveq	r0, ip
   1b940:	beq	1b984 <spss_format+0x6c>
   1b944:	ldr	r4, [r2, #8]
   1b948:	sub	ip, r3, #5
   1b94c:	clz	ip, ip
   1b950:	lsr	ip, ip, #5
   1b954:	cmp	r4, #0
   1b958:	orrne	ip, ip, #1
   1b95c:	cmp	ip, #0
   1b960:	ldr	r2, [r2, #4]
   1b964:	add	r3, lr, r3, lsl #4
   1b968:	bne	1b9ac <spss_format+0x94>
   1b96c:	cmp	r2, #0
   1b970:	bne	1b994 <spss_format+0x7c>
   1b974:	ldr	r2, [pc, #80]	; 1b9cc <spss_format+0xb4>
   1b978:	add	r2, pc, r2
   1b97c:	bl	4280 <snprintf@plt>
   1b980:	mov	r0, #1
   1b984:	add	sp, sp, #8
   1b988:	pop	{r4, pc}
   1b98c:	mov	r0, #0
   1b990:	bx	lr
   1b994:	str	r2, [sp]
   1b998:	ldr	r2, [pc, #48]	; 1b9d0 <spss_format+0xb8>
   1b99c:	add	r2, pc, r2
   1b9a0:	bl	4280 <snprintf@plt>
   1b9a4:	mov	r0, #1
   1b9a8:	b	1b984 <spss_format+0x6c>
   1b9ac:	stm	sp, {r2, r4}
   1b9b0:	ldr	r2, [pc, #28]	; 1b9d4 <spss_format+0xbc>
   1b9b4:	add	r2, pc, r2
   1b9b8:	bl	4280 <snprintf@plt>
   1b9bc:	mov	r0, #1
   1b9c0:	add	sp, sp, #8
   1b9c4:	pop	{r4, pc}
   1b9c8:	.word	0x0002b14c
   1b9cc:	.word	0x0000a75c
   1b9d0:	.word	0x0000aaf0
   1b9d4:	.word	0x0000aad0

0001b9d8 <spss_varinfo_compare>:
   1b9d8:	ldr	r3, [r1]
   1b9dc:	ldr	r2, [r0]
   1b9e0:	ldr	r3, [r3, #12]
   1b9e4:	cmp	r2, r3
   1b9e8:	blt	1b9f8 <spss_varinfo_compare+0x20>
   1b9ec:	movgt	r0, #1
   1b9f0:	movle	r0, #0
   1b9f4:	bx	lr
   1b9f8:	mvn	r0, #0
   1b9fc:	bx	lr

0001ba00 <spss_varinfo_free>:
   1ba00:	push	{r4, lr}
   1ba04:	subs	r4, r0, #0
   1ba08:	popeq	{r4, pc}
   1ba0c:	ldr	r0, [r4, #264]	; 0x108
   1ba10:	cmp	r0, #0
   1ba14:	beq	1ba1c <spss_varinfo_free+0x1c>
   1ba18:	bl	3ec0 <free@plt>
   1ba1c:	mov	r0, r4
   1ba20:	pop	{r4, lr}
   1ba24:	b	3ec0 <free@plt>

0001ba28 <spss_64bit_value>:
   1ba28:	push	{lr}		; (str lr, [sp, #-4]!)
   1ba2c:	sub	sp, sp, #28
   1ba30:	add	ip, sp, #8
   1ba34:	stm	ip, {r0, r1, r2, r3}
   1ba38:	ldm	ip, {r0, r1, r2, r3}
   1ba3c:	bl	41b4 <readstat_double_value@plt>
   1ba40:	vldr	d7, [pc, #96]	; 1baa8 <spss_64bit_value+0x80>
   1ba44:	vabs.f64	d6, d0
   1ba48:	vstr	d0, [sp]
   1ba4c:	vcmp.f64	d6, d7
   1ba50:	vmrs	APSR_nzcv, fpscr
   1ba54:	ble	1ba74 <spss_64bit_value+0x4c>
   1ba58:	vcmpe.f64	d0, #0.0
   1ba5c:	vmrs	APSR_nzcv, fpscr
   1ba60:	bmi	1ba8c <spss_64bit_value+0x64>
   1ba64:	mvn	r0, #0
   1ba68:	ldr	r1, [pc, #64]	; 1bab0 <spss_64bit_value+0x88>
   1ba6c:	add	sp, sp, #28
   1ba70:	pop	{pc}		; (ldr pc, [sp], #4)
   1ba74:	vcmp.f64	d0, d0
   1ba78:	vmrs	APSR_nzcv, fpscr
   1ba7c:	bvs	1ba9c <spss_64bit_value+0x74>
   1ba80:	ldrd	r0, [sp]
   1ba84:	add	sp, sp, #28
   1ba88:	pop	{pc}		; (ldr pc, [sp], #4)
   1ba8c:	mvn	r0, #1
   1ba90:	mvn	r1, #1048576	; 0x100000
   1ba94:	add	sp, sp, #28
   1ba98:	pop	{pc}		; (ldr pc, [sp], #4)
   1ba9c:	mvn	r0, #0
   1baa0:	mvn	r1, #1048576	; 0x100000
   1baa4:	b	1ba84 <spss_64bit_value+0x5c>
   1baa8:	.word	0xffffffff
   1baac:	.word	0x7fefffff
   1bab0:	.word	0x7fefffff

0001bab4 <spss_missingness_for_info>:
   1bab4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bab8:	sub	sp, sp, #620	; 0x26c
   1babc:	mov	sl, r1
   1bac0:	add	r9, sp, #96	; 0x60
   1bac4:	str	r0, [sp, #12]
   1bac8:	mov	r2, #520	; 0x208
   1bacc:	mov	r0, r9
   1bad0:	mov	r1, #0
   1bad4:	bl	42a4 <memset@plt>
   1bad8:	ldr	r5, [sl, #56]	; 0x38
   1badc:	cmp	r5, #0
   1bae0:	bne	1bc30 <spss_missingness_for_info+0x17c>
   1bae4:	ldr	r3, [sl, #52]	; 0x34
   1bae8:	cmp	r3, #0
   1baec:	str	r3, [sp, #8]
   1baf0:	ble	1bb8c <spss_missingness_for_info+0xd8>
   1baf4:	add	fp, sl, #64	; 0x40
   1baf8:	mov	r8, r9
   1bafc:	ldr	r2, [sl], #88	; 0x58
   1bb00:	add	r4, sp, #80	; 0x50
   1bb04:	add	ip, sp, #64	; 0x40
   1bb08:	mov	r7, r5
   1bb0c:	str	r2, [sp, #4]
   1bb10:	str	r3, [sp, #608]	; 0x260
   1bb14:	str	fp, [sp]
   1bb18:	ldr	r3, [sp, #4]
   1bb1c:	add	lr, r8, #16
   1bb20:	cmp	r3, #5
   1bb24:	add	r6, r9, r5, lsl #5
   1bb28:	beq	1bba8 <spss_missingness_for_info+0xf4>
   1bb2c:	str	r7, [r4, #4]
   1bb30:	str	r7, [r4, #8]
   1bb34:	str	r7, [r4, #12]
   1bb38:	str	sl, [sp, #80]	; 0x50
   1bb3c:	ldm	r4, {r0, r1, r2, r3}
   1bb40:	add	r5, r5, #1
   1bb44:	ldr	fp, [sp, #8]
   1bb48:	add	r8, r8, #32
   1bb4c:	stm	ip, {r0, r1, r2, r3}
   1bb50:	cmp	fp, r5
   1bb54:	ldrb	r3, [sp, #77]	; 0x4d
   1bb58:	ldrd	r0, [sp, #80]	; 0x50
   1bb5c:	str	r7, [sp, #72]	; 0x48
   1bb60:	bic	r3, r3, #1
   1bb64:	strb	r3, [sp, #77]	; 0x4d
   1bb68:	strd	r0, [sp, #64]	; 0x40
   1bb6c:	ldm	ip, {r0, r1, r2, r3}
   1bb70:	add	sl, sl, #33	; 0x21
   1bb74:	ldr	fp, [sp]
   1bb78:	add	fp, fp, #8
   1bb7c:	stm	lr, {r0, r1, r2, r3}
   1bb80:	str	fp, [sp]
   1bb84:	stm	r6, {r0, r1, r2, r3}
   1bb88:	bgt	1bb18 <spss_missingness_for_info+0x64>
   1bb8c:	mov	r1, r9
   1bb90:	mov	r2, #520	; 0x208
   1bb94:	ldr	r0, [sp, #12]
   1bb98:	bl	3f20 <memcpy@plt>
   1bb9c:	ldr	r0, [sp, #12]
   1bba0:	add	sp, sp, #620	; 0x26c
   1bba4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bba8:	ldr	fp, [sp]
   1bbac:	vldmia	fp!, {d7}
   1bbb0:	str	r7, [r4, #12]
   1bbb4:	lsr	r3, r7, #8
   1bbb8:	ldr	r2, [sp, #4]
   1bbbc:	vcmp.f64	d7, d7
   1bbc0:	vstr	d7, [sp, #80]	; 0x50
   1bbc4:	and	r3, r3, #254	; 0xfe
   1bbc8:	str	r2, [sp, #88]	; 0x58
   1bbcc:	vmrs	APSR_nzcv, fpscr
   1bbd0:	ldr	lr, [sp, #8]
   1bbd4:	add	r6, r9, r5, lsl #5
   1bbd8:	add	r5, r5, #1
   1bbdc:	movvs	sl, #1
   1bbe0:	movvc	sl, #0
   1bbe4:	orr	r3, sl, r3
   1bbe8:	strb	r3, [sp, #93]	; 0x5d
   1bbec:	ldm	r4, {r0, r1, r2, r3}
   1bbf0:	cmp	r5, lr
   1bbf4:	add	lr, r8, #16
   1bbf8:	add	r8, r8, #32
   1bbfc:	stm	ip, {r0, r1, r2, r3}
   1bc00:	vstr	d7, [sp, #64]	; 0x40
   1bc04:	ldrb	r3, [sp, #77]	; 0x4d
   1bc08:	ldr	r2, [sp, #4]
   1bc0c:	bic	r3, r3, #1
   1bc10:	orr	sl, sl, r3
   1bc14:	str	r2, [sp, #72]	; 0x48
   1bc18:	strb	sl, [sp, #77]	; 0x4d
   1bc1c:	ldm	ip, {r0, r1, r2, r3}
   1bc20:	stm	lr, {r0, r1, r2, r3}
   1bc24:	stm	r6, {r0, r1, r2, r3}
   1bc28:	blt	1bbac <spss_missingness_for_info+0xf8>
   1bc2c:	b	1bb8c <spss_missingness_for_info+0xd8>
   1bc30:	ldr	ip, [sl]
   1bc34:	mov	r3, #1
   1bc38:	cmp	ip, #5
   1bc3c:	str	r3, [sp, #608]	; 0x260
   1bc40:	beq	1bd30 <spss_missingness_for_info+0x27c>
   1bc44:	add	ip, sp, #80	; 0x50
   1bc48:	mov	r4, #0
   1bc4c:	add	r3, sl, #88	; 0x58
   1bc50:	str	r4, [ip, #4]
   1bc54:	str	r4, [ip, #8]
   1bc58:	str	r4, [ip, #12]
   1bc5c:	str	r3, [sp, #80]	; 0x50
   1bc60:	ldm	ip, {r0, r1, r2, r3}
   1bc64:	add	lr, sp, #32
   1bc68:	add	r5, sl, #121	; 0x79
   1bc6c:	stm	lr, {r0, r1, r2, r3}
   1bc70:	ldrb	r3, [sp, #45]	; 0x2d
   1bc74:	ldrd	r0, [sp, #80]	; 0x50
   1bc78:	str	r4, [sp, #40]	; 0x28
   1bc7c:	bic	r3, r3, #1
   1bc80:	strb	r3, [sp, #45]	; 0x2d
   1bc84:	strd	r0, [sp, #32]
   1bc88:	ldm	lr, {r0, r1, r2, r3}
   1bc8c:	add	lr, sp, #16
   1bc90:	str	r5, [sp, #80]	; 0x50
   1bc94:	ldr	r5, [sl, #52]	; 0x34
   1bc98:	stm	r9, {r0, r1, r2, r3}
   1bc9c:	cmp	r5, #3
   1bca0:	ldm	ip, {r0, r1, r2, r3}
   1bca4:	stm	lr, {r0, r1, r2, r3}
   1bca8:	ldrb	r3, [sp, #29]
   1bcac:	ldrd	r0, [sp, #80]	; 0x50
   1bcb0:	str	r4, [sp, #24]
   1bcb4:	bic	r3, r3, #1
   1bcb8:	strb	r3, [sp, #29]
   1bcbc:	strd	r0, [sp, #16]
   1bcc0:	ldm	lr, {r0, r1, r2, r3}
   1bcc4:	add	lr, sp, #112	; 0x70
   1bcc8:	stm	lr, {r0, r1, r2, r3}
   1bccc:	bne	1bb8c <spss_missingness_for_info+0xd8>
   1bcd0:	add	sl, sl, #154	; 0x9a
   1bcd4:	str	sl, [sp, #80]	; 0x50
   1bcd8:	str	r4, [ip, #4]
   1bcdc:	str	r4, [ip, #8]
   1bce0:	str	r4, [ip, #12]
   1bce4:	vldr	d7, [sp, #80]	; 0x50
   1bce8:	ldm	ip, {r0, r1, r2, r3}
   1bcec:	add	r5, sp, #48	; 0x30
   1bcf0:	mov	ip, r4
   1bcf4:	mov	lr, #2
   1bcf8:	stm	r5, {r0, r1, r2, r3}
   1bcfc:	str	lr, [sp, #608]	; 0x260
   1bd00:	ldrb	r3, [sp, #61]	; 0x3d
   1bd04:	vstr	d7, [sp, #48]	; 0x30
   1bd08:	str	ip, [sp, #56]	; 0x38
   1bd0c:	bic	r3, r3, #1
   1bd10:	orr	r4, r4, r3
   1bd14:	strb	r4, [sp, #61]	; 0x3d
   1bd18:	ldm	r5, {r0, r1, r2, r3}
   1bd1c:	add	ip, sp, #144	; 0x90
   1bd20:	stm	ip, {r0, r1, r2, r3}
   1bd24:	add	ip, sp, #128	; 0x80
   1bd28:	stm	ip, {r0, r1, r2, r3}
   1bd2c:	b	1bb8c <spss_missingness_for_info+0xd8>
   1bd30:	vldr	d6, [sl, #64]	; 0x40
   1bd34:	add	lr, sp, #80	; 0x50
   1bd38:	mov	r6, #0
   1bd3c:	str	ip, [sp, #88]	; 0x58
   1bd40:	vcmp.f64	d6, d6
   1bd44:	vstr	d6, [sp, #80]	; 0x50
   1bd48:	vldr	d7, [sl, #72]	; 0x48
   1bd4c:	str	r6, [lr, #12]
   1bd50:	vmrs	APSR_nzcv, fpscr
   1bd54:	add	r4, sp, #32
   1bd58:	vcmp.f64	d7, d7
   1bd5c:	movvs	r7, r3
   1bd60:	movvc	r7, r6
   1bd64:	strb	r7, [sp, #93]	; 0x5d
   1bd68:	ldm	lr, {r0, r1, r2, r3}
   1bd6c:	vmrs	APSR_nzcv, fpscr
   1bd70:	str	r6, [lr, #12]
   1bd74:	str	ip, [sp, #88]	; 0x58
   1bd78:	stm	r4, {r0, r1, r2, r3}
   1bd7c:	vstr	d6, [sp, #32]
   1bd80:	ldrb	r3, [sp, #45]	; 0x2d
   1bd84:	str	ip, [sp, #40]	; 0x28
   1bd88:	vstr	d7, [sp, #80]	; 0x50
   1bd8c:	bic	r3, r3, #1
   1bd90:	orr	r7, r7, r3
   1bd94:	strb	r7, [sp, #45]	; 0x2d
   1bd98:	ldm	r4, {r0, r1, r2, r3}
   1bd9c:	movvs	r5, #1
   1bda0:	movvc	r5, r6
   1bda4:	strb	r5, [sp, #93]	; 0x5d
   1bda8:	stm	r9, {r0, r1, r2, r3}
   1bdac:	add	r4, sp, #16
   1bdb0:	ldm	lr, {r0, r1, r2, r3}
   1bdb4:	ldr	r7, [sl, #52]	; 0x34
   1bdb8:	stm	r4, {r0, r1, r2, r3}
   1bdbc:	vstr	d7, [sp, #16]
   1bdc0:	ldrb	r3, [sp, #29]
   1bdc4:	str	ip, [sp, #24]
   1bdc8:	cmp	r7, #3
   1bdcc:	bic	r3, r3, #1
   1bdd0:	orr	r5, r5, r3
   1bdd4:	strb	r5, [sp, #29]
   1bdd8:	ldm	r4, {r0, r1, r2, r3}
   1bddc:	add	r4, sp, #112	; 0x70
   1bde0:	stm	r4, {r0, r1, r2, r3}
   1bde4:	bne	1bb8c <spss_missingness_for_info+0xd8>
   1bde8:	vldr	d7, [sl, #80]	; 0x50
   1bdec:	str	r6, [lr, #12]
   1bdf0:	mov	r3, #2
   1bdf4:	str	ip, [sp, #88]	; 0x58
   1bdf8:	vcmp.f64	d7, d7
   1bdfc:	vstr	d7, [sp, #80]	; 0x50
   1be00:	str	r3, [sp, #608]	; 0x260
   1be04:	add	r5, sp, #48	; 0x30
   1be08:	vmrs	APSR_nzcv, fpscr
   1be0c:	movvs	r4, #1
   1be10:	movvc	r4, #0
   1be14:	strb	r4, [sp, #93]	; 0x5d
   1be18:	ldm	lr, {r0, r1, r2, r3}
   1be1c:	stm	r5, {r0, r1, r2, r3}
   1be20:	b	1bd00 <spss_missingness_for_info+0x24c>

0001be24 <spss_init_variable_for_info>:
   1be24:	push	{r4, r5, r6, r7, lr}
   1be28:	mov	r4, r0
   1be2c:	sub	sp, sp, #532	; 0x214
   1be30:	mov	r7, r1
   1be34:	mov	r0, #1
   1be38:	ldr	r1, [pc, #208]	; 1bf10 <spss_init_variable_for_info+0xec>
   1be3c:	mov	r6, r2
   1be40:	bl	3d58 <calloc@plt>
   1be44:	ldr	r3, [r4, #20]
   1be48:	ldr	r2, [r4]
   1be4c:	cmp	r3, #0
   1be50:	ldr	r1, [r4, #8]
   1be54:	ldreq	r3, [r4, #16]
   1be58:	lsleq	r3, r3, #3
   1be5c:	str	r2, [r0]
   1be60:	ldrb	r2, [r4, #196]	; 0xc4
   1be64:	str	r3, [r0, #1596]	; 0x63c
   1be68:	str	r1, [r0, #4]
   1be6c:	cmp	r2, #0
   1be70:	str	r7, [r0, #2148]	; 0x864
   1be74:	movne	r3, #65	; 0x41
   1be78:	moveq	r3, #9
   1be7c:	addne	r2, r4, #196	; 0xc4
   1be80:	addeq	r2, r4, #187	; 0xbb
   1be84:	mov	r5, r0
   1be88:	str	r6, [sp]
   1be8c:	mov	r1, #300	; 0x12c
   1be90:	add	r0, r0, #8
   1be94:	bl	4238 <readstat_convert@plt>
   1be98:	ldr	r3, [r4, #264]	; 0x108
   1be9c:	cmp	r3, #0
   1bea0:	beq	1beb8 <spss_init_variable_for_info+0x94>
   1bea4:	ldr	r2, [pc, #104]	; 1bf14 <spss_init_variable_for_info+0xf0>
   1bea8:	mov	r1, #1024	; 0x400
   1beac:	add	r2, pc, r2
   1beb0:	add	r0, r5, #564	; 0x234
   1beb4:	bl	4280 <snprintf@plt>
   1beb8:	add	r2, r4, #24
   1bebc:	add	r6, sp, #8
   1bec0:	mov	r1, #256	; 0x100
   1bec4:	add	r0, r5, #308	; 0x134
   1bec8:	bl	440c <spss_format@plt>
   1becc:	mov	r0, r6
   1bed0:	mov	r1, r4
   1bed4:	bl	452c <spss_missingness_for_info@plt>
   1bed8:	add	r0, r5, #1600	; 0x640
   1bedc:	mov	r1, r6
   1bee0:	mov	r2, #520	; 0x208
   1bee4:	add	r0, r0, #8
   1bee8:	bl	3f20 <memcpy@plt>
   1beec:	ldr	r3, [r4, #276]	; 0x114
   1bef0:	ldr	r2, [r4, #268]	; 0x10c
   1bef4:	cmp	r3, #0
   1bef8:	mov	r0, r5
   1befc:	ldreq	r3, [r4, #28]
   1bf00:	str	r2, [r5, #2128]	; 0x850
   1bf04:	str	r3, [r5, #2136]	; 0x858
   1bf08:	add	sp, sp, #532	; 0x214
   1bf0c:	pop	{r4, r5, r6, r7, pc}
   1bf10:	.word	0x00000868
   1bf14:	.word	0x0000a228

0001bf18 <spss_measure_from_readstat_measure>:
   1bf18:	cmp	r0, #1
   1bf1c:	bxeq	lr
   1bf20:	cmp	r0, #2
   1bf24:	bxeq	lr
   1bf28:	cmp	r0, #3
   1bf2c:	moveq	r0, #3
   1bf30:	movne	r0, #0
   1bf34:	bx	lr

0001bf38 <spss_measure_to_readstat_measure>:
   1bf38:	cmp	r0, #1
   1bf3c:	bxeq	lr
   1bf40:	cmp	r0, #2
   1bf44:	bxeq	lr
   1bf48:	cmp	r0, #3
   1bf4c:	moveq	r0, #3
   1bf50:	movne	r0, #0
   1bf54:	bx	lr

0001bf58 <spss_alignment_from_readstat_alignment>:
   1bf58:	cmp	r0, #1
   1bf5c:	beq	1bf74 <spss_alignment_from_readstat_alignment+0x1c>
   1bf60:	cmp	r0, #2
   1bf64:	subne	r0, r0, #3
   1bf68:	clzne	r0, r0
   1bf6c:	lsrne	r0, r0, #5
   1bf70:	bx	lr
   1bf74:	mov	r0, #0
   1bf78:	bx	lr

0001bf7c <spss_alignment_to_readstat_alignment>:
   1bf7c:	cmp	r0, #0
   1bf80:	beq	1bf9c <spss_alignment_to_readstat_alignment+0x20>
   1bf84:	cmp	r0, #2
   1bf88:	bxeq	lr
   1bf8c:	cmp	r0, #1
   1bf90:	moveq	r0, #3
   1bf94:	movne	r0, #0
   1bf98:	bx	lr
   1bf9c:	mov	r0, #1
   1bfa0:	bx	lr

0001bfa4 <spss_format_for_variable>:
   1bfa4:	mov	r3, #0
   1bfa8:	str	r3, [r1]
   1bfac:	str	r3, [r1, #4]
   1bfb0:	str	r3, [r1, #8]
   1bfb4:	ldr	r3, [r0]
   1bfb8:	cmp	r3, #0
   1bfbc:	bne	1bfec <spss_format_for_variable+0x48>
   1bfc0:	ldr	r3, [r0, #2136]	; 0x858
   1bfc4:	mov	r2, #1
   1bfc8:	cmp	r3, #0
   1bfcc:	str	r2, [r1]
   1bfd0:	beq	1c05c <spss_format_for_variable+0xb8>
   1bfd4:	str	r3, [r1, #4]
   1bfd8:	ldrb	r3, [r0, #308]	; 0x134
   1bfdc:	cmp	r3, #0
   1bfe0:	bne	1c020 <spss_format_for_variable+0x7c>
   1bfe4:	mov	r0, #0
   1bfe8:	bx	lr
   1bfec:	ldr	r2, [r0, #2136]	; 0x858
   1bff0:	sub	r3, r3, #4
   1bff4:	cmp	r2, #0
   1bff8:	moveq	r2, #8
   1bffc:	cmp	r3, #1
   1c000:	movls	r3, #2
   1c004:	mov	ip, #5
   1c008:	strls	r3, [r1, #8]
   1c00c:	str	r2, [r1, #4]
   1c010:	str	ip, [r1]
   1c014:	ldrb	r3, [r0, #308]	; 0x134
   1c018:	cmp	r3, #0
   1c01c:	beq	1bfe4 <spss_format_for_variable+0x40>
   1c020:	push	{r4, r5, r6, lr}
   1c024:	mov	r3, #0
   1c028:	add	r5, r0, #308	; 0x134
   1c02c:	str	r3, [r1, #8]
   1c030:	mov	r0, r5
   1c034:	mov	r4, r1
   1c038:	bl	41fc <strlen@plt>
   1c03c:	mov	r2, r4
   1c040:	mov	r1, r0
   1c044:	mov	r0, r5
   1c048:	bl	3f2c <spss_parse_format@plt>
   1c04c:	cmp	r0, #0
   1c050:	beq	1c06c <spss_format_for_variable+0xc8>
   1c054:	mov	r0, #11
   1c058:	pop	{r4, r5, r6, pc}
   1c05c:	ldr	r3, [r0, #1600]	; 0x640
   1c060:	cmp	r3, #0
   1c064:	ldreq	r3, [r0, #1596]	; 0x63c
   1c068:	b	1bfd4 <spss_format_for_variable+0x30>
   1c06c:	mov	r0, #0
   1c070:	pop	{r4, r5, r6, pc}

0001c074 <spss_parse_format>:
   1c074:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c078:	add	r3, r0, r1
   1c07c:	sub	sp, sp, #20
   1c080:	cmp	r0, r3
   1c084:	str	r3, [sp]
   1c088:	beq	1c5e8 <spss_parse_format+0x574>
   1c08c:	ldr	fp, [pc, #1840]	; 1c7c4 <spss_parse_format+0x750>
   1c090:	ldr	lr, [pc, #1840]	; 1c7c8 <spss_parse_format+0x754>
   1c094:	add	fp, pc, fp
   1c098:	add	r3, fp, #1584	; 0x630
   1c09c:	add	r3, r3, #8
   1c0a0:	add	lr, pc, lr
   1c0a4:	mov	r9, #0
   1c0a8:	ldr	r1, [pc, #1820]	; 1c7cc <spss_parse_format+0x758>
   1c0ac:	str	r3, [sp, #4]
   1c0b0:	add	r3, lr, #232	; 0xe8
   1c0b4:	mov	r8, #34	; 0x22
   1c0b8:	mov	ip, #1
   1c0bc:	mov	r7, r9
   1c0c0:	mov	sl, r3
   1c0c4:	add	r1, pc, r1
   1c0c8:	str	r1, [sp, #8]
   1c0cc:	str	r9, [sp, #12]
   1c0d0:	cmp	r8, #0
   1c0d4:	add	r7, sl, r7
   1c0d8:	mov	r3, r9
   1c0dc:	beq	1c124 <spss_parse_format+0xb0>
   1c0e0:	sub	r4, r8, #1
   1c0e4:	adds	r4, r7, r4
   1c0e8:	bcs	1c11c <spss_parse_format+0xa8>
   1c0ec:	ldrb	r6, [r0]
   1c0f0:	mov	r1, r7
   1c0f4:	sub	r3, r4, r1
   1c0f8:	ldrb	r5, [r1, r3, asr #1]
   1c0fc:	add	r3, r1, r3, asr #1
   1c100:	cmp	r5, r6
   1c104:	subhi	r4, r3, #1
   1c108:	bhi	1c114 <spss_parse_format+0xa0>
   1c10c:	bcs	1c4bc <spss_parse_format+0x448>
   1c110:	add	r1, r3, #1
   1c114:	cmp	r4, r1
   1c118:	bcs	1c0f4 <spss_parse_format+0x80>
   1c11c:	add	r7, r7, r8
   1c120:	add	r3, r9, r8
   1c124:	ldr	r1, [sp, #8]
   1c128:	add	ip, r1, ip
   1c12c:	ldrb	r8, [ip, #520]	; 0x208
   1c130:	cmp	r8, #0
   1c134:	beq	1c18c <spss_parse_format+0x118>
   1c138:	add	r4, r7, r8, lsl #1
   1c13c:	sub	r4, r4, #2
   1c140:	cmp	r7, r4
   1c144:	bhi	1c188 <spss_parse_format+0x114>
   1c148:	ldrb	r6, [r0]
   1c14c:	mov	ip, r7
   1c150:	sub	r1, r4, ip
   1c154:	asr	r1, r1, #1
   1c158:	bic	r1, r1, #1
   1c15c:	add	r5, ip, r1
   1c160:	ldrb	r1, [ip, r1]
   1c164:	cmp	r1, r6
   1c168:	subhi	r4, r5, #2
   1c16c:	bhi	1c180 <spss_parse_format+0x10c>
   1c170:	ldrb	r1, [r5, #1]
   1c174:	add	ip, r5, #2
   1c178:	cmp	r1, r6
   1c17c:	bcs	1c4c8 <spss_parse_format+0x454>
   1c180:	cmp	ip, r4
   1c184:	bls	1c150 <spss_parse_format+0xdc>
   1c188:	add	r3, r3, r8
   1c18c:	add	r3, lr, r3
   1c190:	ldrb	r1, [r3, #628]	; 0x274
   1c194:	add	r1, lr, r1
   1c198:	ldrb	r3, [r1, #1124]	; 0x464
   1c19c:	ldrb	ip, [r1, #980]	; 0x3d4
   1c1a0:	cmp	r3, #0
   1c1a4:	beq	1c290 <spss_parse_format+0x21c>
   1c1a8:	ldrb	r1, [lr, r3]
   1c1ac:	add	r3, lr, r3
   1c1b0:	mov	r5, #35	; 0x23
   1c1b4:	add	r1, r3, r1
   1c1b8:	mov	r4, #34	; 0x22
   1c1bc:	mov	r8, #33	; 0x21
   1c1c0:	mov	r9, #32
   1c1c4:	cmp	r1, r3
   1c1c8:	beq	1c290 <spss_parse_format+0x21c>
   1c1cc:	ldrb	r6, [r3, #1]!
   1c1d0:	cmp	r6, #40	; 0x28
   1c1d4:	addls	pc, pc, r6, lsl #2
   1c1d8:	b	1c1c4 <spss_parse_format+0x150>
   1c1dc:	b	1c280 <spss_parse_format+0x20c>
   1c1e0:	b	1c4a0 <spss_parse_format+0x42c>
   1c1e4:	b	1c494 <spss_parse_format+0x420>
   1c1e8:	b	1c1c4 <spss_parse_format+0x150>
   1c1ec:	b	1c488 <spss_parse_format+0x414>
   1c1f0:	b	1c47c <spss_parse_format+0x408>
   1c1f4:	b	1c470 <spss_parse_format+0x3fc>
   1c1f8:	b	1c464 <spss_parse_format+0x3f0>
   1c1fc:	b	1c458 <spss_parse_format+0x3e4>
   1c200:	b	1c44c <spss_parse_format+0x3d8>
   1c204:	b	1c440 <spss_parse_format+0x3cc>
   1c208:	b	1c434 <spss_parse_format+0x3c0>
   1c20c:	b	1c428 <spss_parse_format+0x3b4>
   1c210:	b	1c41c <spss_parse_format+0x3a8>
   1c214:	b	1c410 <spss_parse_format+0x39c>
   1c218:	b	1c404 <spss_parse_format+0x390>
   1c21c:	b	1c3f8 <spss_parse_format+0x384>
   1c220:	b	1c3ec <spss_parse_format+0x378>
   1c224:	b	1c3e0 <spss_parse_format+0x36c>
   1c228:	b	1c3d0 <spss_parse_format+0x35c>
   1c22c:	b	1c3c4 <spss_parse_format+0x350>
   1c230:	b	1c3b4 <spss_parse_format+0x340>
   1c234:	b	1c3a4 <spss_parse_format+0x330>
   1c238:	b	1c394 <spss_parse_format+0x320>
   1c23c:	b	1c388 <spss_parse_format+0x314>
   1c240:	b	1c378 <spss_parse_format+0x304>
   1c244:	b	1c36c <spss_parse_format+0x2f8>
   1c248:	b	1c360 <spss_parse_format+0x2ec>
   1c24c:	b	1c354 <spss_parse_format+0x2e0>
   1c250:	b	1c348 <spss_parse_format+0x2d4>
   1c254:	b	1c33c <spss_parse_format+0x2c8>
   1c258:	b	1c32c <spss_parse_format+0x2b8>
   1c25c:	b	1c320 <spss_parse_format+0x2ac>
   1c260:	b	1c318 <spss_parse_format+0x2a4>
   1c264:	b	1c310 <spss_parse_format+0x29c>
   1c268:	b	1c308 <spss_parse_format+0x294>
   1c26c:	b	1c300 <spss_parse_format+0x28c>
   1c270:	b	1c2f4 <spss_parse_format+0x280>
   1c274:	b	1c2e8 <spss_parse_format+0x274>
   1c278:	b	1c2d8 <spss_parse_format+0x264>
   1c27c:	b	1c2c8 <spss_parse_format+0x254>
   1c280:	mov	r6, #0
   1c284:	cmp	r1, r3
   1c288:	str	r6, [sp, #12]
   1c28c:	bne	1c1cc <spss_parse_format+0x158>
   1c290:	cmp	ip, #0
   1c294:	beq	1c4dc <spss_parse_format+0x468>
   1c298:	ldr	r3, [sp]
   1c29c:	add	r0, r0, #1
   1c2a0:	cmp	r3, r0
   1c2a4:	beq	1c4e8 <spss_parse_format+0x474>
   1c2a8:	add	r4, fp, #1376	; 0x560
   1c2ac:	lsl	r3, ip, #1
   1c2b0:	add	r1, fp, ip
   1c2b4:	ldrsh	r7, [r4, r3]
   1c2b8:	ldr	r4, [sp, #4]
   1c2bc:	ldrb	r8, [r1, #1808]	; 0x710
   1c2c0:	ldrsh	r9, [r4, r3]
   1c2c4:	b	1c0d0 <spss_parse_format+0x5c>
   1c2c8:	mov	r6, #39	; 0x27
   1c2cc:	mov	r7, #10
   1c2d0:	stm	r2, {r6, r7}
   1c2d4:	b	1c1c4 <spss_parse_format+0x150>
   1c2d8:	mov	r6, #38	; 0x26
   1c2dc:	mov	r7, #10
   1c2e0:	stm	r2, {r6, r7}
   1c2e4:	b	1c1c4 <spss_parse_format+0x150>
   1c2e8:	mov	r6, #37	; 0x25
   1c2ec:	str	r6, [r2]
   1c2f0:	b	1c1c4 <spss_parse_format+0x150>
   1c2f4:	mov	r6, #36	; 0x24
   1c2f8:	str	r6, [r2]
   1c2fc:	b	1c1c4 <spss_parse_format+0x150>
   1c300:	str	r5, [r2]
   1c304:	b	1c1c4 <spss_parse_format+0x150>
   1c308:	str	r4, [r2]
   1c30c:	b	1c1c4 <spss_parse_format+0x150>
   1c310:	str	r8, [r2]
   1c314:	b	1c1c4 <spss_parse_format+0x150>
   1c318:	str	r9, [r2]
   1c31c:	b	1c1c4 <spss_parse_format+0x150>
   1c320:	mov	r6, #31
   1c324:	str	r6, [r2]
   1c328:	b	1c1c4 <spss_parse_format+0x150>
   1c32c:	mov	r6, #30
   1c330:	mov	r7, #10
   1c334:	stm	r2, {r6, r7}
   1c338:	b	1c1c4 <spss_parse_format+0x150>
   1c33c:	mov	r6, #29
   1c340:	str	r6, [r2]
   1c344:	b	1c1c4 <spss_parse_format+0x150>
   1c348:	mov	r6, #28
   1c34c:	str	r6, [r2]
   1c350:	b	1c1c4 <spss_parse_format+0x150>
   1c354:	mov	r6, #27
   1c358:	str	r6, [r2]
   1c35c:	b	1c1c4 <spss_parse_format+0x150>
   1c360:	mov	r6, #26
   1c364:	str	r6, [r2]
   1c368:	b	1c1c4 <spss_parse_format+0x150>
   1c36c:	mov	r6, #40	; 0x28
   1c370:	str	r6, [r2]
   1c374:	b	1c1c4 <spss_parse_format+0x150>
   1c378:	mov	r6, #25
   1c37c:	mov	r7, #23
   1c380:	stm	r2, {r6, r7}
   1c384:	b	1c1c4 <spss_parse_format+0x150>
   1c388:	mov	r6, #24
   1c38c:	str	r6, [r2]
   1c390:	b	1c1c4 <spss_parse_format+0x150>
   1c394:	mov	r6, #23
   1c398:	mov	r7, #10
   1c39c:	stm	r2, {r6, r7}
   1c3a0:	b	1c1c4 <spss_parse_format+0x150>
   1c3a4:	mov	r6, #41	; 0x29
   1c3a8:	mov	r7, #19
   1c3ac:	stm	r2, {r6, r7}
   1c3b0:	b	1c1c4 <spss_parse_format+0x150>
   1c3b4:	mov	r6, #22
   1c3b8:	mov	r7, #20
   1c3bc:	stm	r2, {r6, r7}
   1c3c0:	b	1c1c4 <spss_parse_format+0x150>
   1c3c4:	mov	r6, #21
   1c3c8:	str	r6, [r2]
   1c3cc:	b	1c1c4 <spss_parse_format+0x150>
   1c3d0:	mov	r6, #20
   1c3d4:	mov	r7, #11
   1c3d8:	stm	r2, {r6, r7}
   1c3dc:	b	1c1c4 <spss_parse_format+0x150>
   1c3e0:	mov	r6, #17
   1c3e4:	str	r6, [r2]
   1c3e8:	b	1c1c4 <spss_parse_format+0x150>
   1c3ec:	mov	r6, #16
   1c3f0:	str	r6, [r2]
   1c3f4:	b	1c1c4 <spss_parse_format+0x150>
   1c3f8:	mov	r6, #15
   1c3fc:	str	r6, [r2]
   1c400:	b	1c1c4 <spss_parse_format+0x150>
   1c404:	mov	r6, #12
   1c408:	str	r6, [r2]
   1c40c:	b	1c1c4 <spss_parse_format+0x150>
   1c410:	mov	r6, #11
   1c414:	str	r6, [r2]
   1c418:	b	1c1c4 <spss_parse_format+0x150>
   1c41c:	mov	r6, #10
   1c420:	str	r6, [r2]
   1c424:	b	1c1c4 <spss_parse_format+0x150>
   1c428:	mov	r6, #9
   1c42c:	str	r6, [r2]
   1c430:	b	1c1c4 <spss_parse_format+0x150>
   1c434:	mov	r6, #8
   1c438:	str	r6, [r2]
   1c43c:	b	1c1c4 <spss_parse_format+0x150>
   1c440:	mov	r6, #7
   1c444:	str	r6, [r2]
   1c448:	b	1c1c4 <spss_parse_format+0x150>
   1c44c:	mov	r6, #6
   1c450:	str	r6, [r2]
   1c454:	b	1c1c4 <spss_parse_format+0x150>
   1c458:	mov	r6, #5
   1c45c:	str	r6, [r2]
   1c460:	b	1c1c4 <spss_parse_format+0x150>
   1c464:	mov	r6, #4
   1c468:	str	r6, [r2]
   1c46c:	b	1c1c4 <spss_parse_format+0x150>
   1c470:	mov	r6, #3
   1c474:	str	r6, [r2]
   1c478:	b	1c1c4 <spss_parse_format+0x150>
   1c47c:	mov	r6, #2
   1c480:	str	r6, [r2]
   1c484:	b	1c1c4 <spss_parse_format+0x150>
   1c488:	mov	r6, #1
   1c48c:	str	r6, [r2]
   1c490:	b	1c1c4 <spss_parse_format+0x150>
   1c494:	ldr	r6, [sp, #12]
   1c498:	str	r6, [r2, #4]
   1c49c:	b	1c1c4 <spss_parse_format+0x150>
   1c4a0:	ldr	r6, [sp, #12]
   1c4a4:	ldrb	r7, [r0]
   1c4a8:	add	r6, r6, r6, lsl #2
   1c4ac:	sub	r7, r7, #48	; 0x30
   1c4b0:	add	r6, r7, r6, lsl #1
   1c4b4:	str	r6, [sp, #12]
   1c4b8:	b	1c1c4 <spss_parse_format+0x150>
   1c4bc:	sub	r3, r3, r7
   1c4c0:	add	r3, r9, r3
   1c4c4:	b	1c18c <spss_parse_format+0x118>
   1c4c8:	sub	r7, r5, r7
   1c4cc:	add	r3, r3, r7, asr #1
   1c4d0:	b	1c18c <spss_parse_format+0x118>
   1c4d4:	cmp	r0, #0
   1c4d8:	beq	1c4e0 <spss_parse_format+0x46c>
   1c4dc:	mov	r0, #5
   1c4e0:	add	sp, sp, #20
   1c4e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c4e8:	ldr	r1, [pc, #736]	; 1c7d0 <spss_parse_format+0x75c>
   1c4ec:	cmp	ip, #67	; 0x43
   1c4f0:	add	r1, pc, r1
   1c4f4:	add	ip, r1, ip
   1c4f8:	movgt	r0, #0
   1c4fc:	ldrb	ip, [ip, #1268]	; 0x4f4
   1c500:	movle	r0, #1
   1c504:	add	r3, r1, ip
   1c508:	ldrb	r1, [r1, ip]
   1c50c:	add	r1, r3, r1
   1c510:	mov	r8, #39	; 0x27
   1c514:	mov	ip, #10
   1c518:	mov	r7, #38	; 0x26
   1c51c:	mov	r6, #37	; 0x25
   1c520:	mov	r5, #36	; 0x24
   1c524:	mov	r4, #35	; 0x23
   1c528:	mov	lr, #34	; 0x22
   1c52c:	mov	fp, #33	; 0x21
   1c530:	cmp	r3, r1
   1c534:	beq	1c4d4 <spss_parse_format+0x460>
   1c538:	ldrb	r9, [r3, #1]!
   1c53c:	sub	r9, r9, #2
   1c540:	cmp	r9, #38	; 0x26
   1c544:	addls	pc, pc, r9, lsl #2
   1c548:	b	1c530 <spss_parse_format+0x4bc>
   1c54c:	b	1c608 <spss_parse_format+0x594>
   1c550:	b	1c614 <spss_parse_format+0x5a0>
   1c554:	b	1c620 <spss_parse_format+0x5ac>
   1c558:	b	1c62c <spss_parse_format+0x5b8>
   1c55c:	b	1c638 <spss_parse_format+0x5c4>
   1c560:	b	1c644 <spss_parse_format+0x5d0>
   1c564:	b	1c650 <spss_parse_format+0x5dc>
   1c568:	b	1c65c <spss_parse_format+0x5e8>
   1c56c:	b	1c668 <spss_parse_format+0x5f4>
   1c570:	b	1c674 <spss_parse_format+0x600>
   1c574:	b	1c680 <spss_parse_format+0x60c>
   1c578:	b	1c68c <spss_parse_format+0x618>
   1c57c:	b	1c694 <spss_parse_format+0x620>
   1c580:	b	1c6a0 <spss_parse_format+0x62c>
   1c584:	b	1c6ac <spss_parse_format+0x638>
   1c588:	b	1c6b8 <spss_parse_format+0x644>
   1c58c:	b	1c6c4 <spss_parse_format+0x650>
   1c590:	b	1c6d0 <spss_parse_format+0x65c>
   1c594:	b	1c6e0 <spss_parse_format+0x66c>
   1c598:	b	1c6ec <spss_parse_format+0x678>
   1c59c:	b	1c6fc <spss_parse_format+0x688>
   1c5a0:	b	1c70c <spss_parse_format+0x698>
   1c5a4:	b	1c718 <spss_parse_format+0x6a4>
   1c5a8:	b	1c724 <spss_parse_format+0x6b0>
   1c5ac:	b	1c734 <spss_parse_format+0x6c0>
   1c5b0:	b	1c740 <spss_parse_format+0x6cc>
   1c5b4:	b	1c74c <spss_parse_format+0x6d8>
   1c5b8:	b	1c758 <spss_parse_format+0x6e4>
   1c5bc:	b	1c764 <spss_parse_format+0x6f0>
   1c5c0:	b	1c770 <spss_parse_format+0x6fc>
   1c5c4:	b	1c77c <spss_parse_format+0x708>
   1c5c8:	b	1c788 <spss_parse_format+0x714>
   1c5cc:	b	1c794 <spss_parse_format+0x720>
   1c5d0:	b	1c79c <spss_parse_format+0x728>
   1c5d4:	b	1c7a4 <spss_parse_format+0x730>
   1c5d8:	b	1c7ac <spss_parse_format+0x738>
   1c5dc:	b	1c7b4 <spss_parse_format+0x740>
   1c5e0:	b	1c7bc <spss_parse_format+0x748>
   1c5e4:	b	1c600 <spss_parse_format+0x58c>
   1c5e8:	ldr	r3, [pc, #484]	; 1c7d4 <spss_parse_format+0x760>
   1c5ec:	mov	r1, #0
   1c5f0:	add	r3, pc, r3
   1c5f4:	str	r1, [sp, #12]
   1c5f8:	mov	r0, #1
   1c5fc:	b	1c50c <spss_parse_format+0x498>
   1c600:	stm	r2, {r8, ip}
   1c604:	b	1c530 <spss_parse_format+0x4bc>
   1c608:	ldr	r9, [sp, #12]
   1c60c:	str	r9, [r2, #4]
   1c610:	b	1c530 <spss_parse_format+0x4bc>
   1c614:	ldr	r9, [sp, #12]
   1c618:	str	r9, [r2, #8]
   1c61c:	b	1c530 <spss_parse_format+0x4bc>
   1c620:	mov	r9, #1
   1c624:	str	r9, [r2]
   1c628:	b	1c530 <spss_parse_format+0x4bc>
   1c62c:	mov	r9, #2
   1c630:	str	r9, [r2]
   1c634:	b	1c530 <spss_parse_format+0x4bc>
   1c638:	mov	r9, #3
   1c63c:	str	r9, [r2]
   1c640:	b	1c530 <spss_parse_format+0x4bc>
   1c644:	mov	r9, #4
   1c648:	str	r9, [r2]
   1c64c:	b	1c530 <spss_parse_format+0x4bc>
   1c650:	mov	r9, #5
   1c654:	str	r9, [r2]
   1c658:	b	1c530 <spss_parse_format+0x4bc>
   1c65c:	mov	r9, #6
   1c660:	str	r9, [r2]
   1c664:	b	1c530 <spss_parse_format+0x4bc>
   1c668:	mov	r9, #7
   1c66c:	str	r9, [r2]
   1c670:	b	1c530 <spss_parse_format+0x4bc>
   1c674:	mov	r9, #8
   1c678:	str	r9, [r2]
   1c67c:	b	1c530 <spss_parse_format+0x4bc>
   1c680:	mov	r9, #9
   1c684:	str	r9, [r2]
   1c688:	b	1c530 <spss_parse_format+0x4bc>
   1c68c:	str	ip, [r2]
   1c690:	b	1c530 <spss_parse_format+0x4bc>
   1c694:	mov	r9, #11
   1c698:	str	r9, [r2]
   1c69c:	b	1c530 <spss_parse_format+0x4bc>
   1c6a0:	mov	r9, #12
   1c6a4:	str	r9, [r2]
   1c6a8:	b	1c530 <spss_parse_format+0x4bc>
   1c6ac:	mov	r9, #15
   1c6b0:	str	r9, [r2]
   1c6b4:	b	1c530 <spss_parse_format+0x4bc>
   1c6b8:	mov	r9, #16
   1c6bc:	str	r9, [r2]
   1c6c0:	b	1c530 <spss_parse_format+0x4bc>
   1c6c4:	mov	r9, #17
   1c6c8:	str	r9, [r2]
   1c6cc:	b	1c530 <spss_parse_format+0x4bc>
   1c6d0:	mov	r9, #20
   1c6d4:	mov	sl, #11
   1c6d8:	stm	r2, {r9, sl}
   1c6dc:	b	1c530 <spss_parse_format+0x4bc>
   1c6e0:	mov	r9, #21
   1c6e4:	str	r9, [r2]
   1c6e8:	b	1c530 <spss_parse_format+0x4bc>
   1c6ec:	mov	r9, #22
   1c6f0:	mov	sl, #20
   1c6f4:	stm	r2, {r9, sl}
   1c6f8:	b	1c530 <spss_parse_format+0x4bc>
   1c6fc:	mov	r9, #41	; 0x29
   1c700:	mov	sl, #19
   1c704:	stm	r2, {r9, sl}
   1c708:	b	1c530 <spss_parse_format+0x4bc>
   1c70c:	mov	r9, #23
   1c710:	stm	r2, {r9, ip}
   1c714:	b	1c530 <spss_parse_format+0x4bc>
   1c718:	mov	r9, #24
   1c71c:	str	r9, [r2]
   1c720:	b	1c530 <spss_parse_format+0x4bc>
   1c724:	mov	r9, #25
   1c728:	mov	sl, #23
   1c72c:	stm	r2, {r9, sl}
   1c730:	b	1c530 <spss_parse_format+0x4bc>
   1c734:	mov	r9, #40	; 0x28
   1c738:	str	r9, [r2]
   1c73c:	b	1c530 <spss_parse_format+0x4bc>
   1c740:	mov	r9, #26
   1c744:	str	r9, [r2]
   1c748:	b	1c530 <spss_parse_format+0x4bc>
   1c74c:	mov	r9, #27
   1c750:	str	r9, [r2]
   1c754:	b	1c530 <spss_parse_format+0x4bc>
   1c758:	mov	r9, #28
   1c75c:	str	r9, [r2]
   1c760:	b	1c530 <spss_parse_format+0x4bc>
   1c764:	mov	r9, #29
   1c768:	str	r9, [r2]
   1c76c:	b	1c530 <spss_parse_format+0x4bc>
   1c770:	mov	r9, #30
   1c774:	stm	r2, {r9, ip}
   1c778:	b	1c530 <spss_parse_format+0x4bc>
   1c77c:	mov	r9, #31
   1c780:	str	r9, [r2]
   1c784:	b	1c530 <spss_parse_format+0x4bc>
   1c788:	mov	r9, #32
   1c78c:	str	r9, [r2]
   1c790:	b	1c530 <spss_parse_format+0x4bc>
   1c794:	str	fp, [r2]
   1c798:	b	1c530 <spss_parse_format+0x4bc>
   1c79c:	str	lr, [r2]
   1c7a0:	b	1c530 <spss_parse_format+0x4bc>
   1c7a4:	str	r4, [r2]
   1c7a8:	b	1c530 <spss_parse_format+0x4bc>
   1c7ac:	str	r5, [r2]
   1c7b0:	b	1c530 <spss_parse_format+0x4bc>
   1c7b4:	str	r6, [r2]
   1c7b8:	b	1c530 <spss_parse_format+0x4bc>
   1c7bc:	stm	r2, {r7, ip}
   1c7c0:	b	1c530 <spss_parse_format+0x4bc>
   1c7c4:	.word	0x0000b5b8
   1c7c8:	.word	0x0000b5ac
   1c7cc:	.word	0x0000b588
   1c7d0:	.word	0x0000b15c
   1c7d4:	.word	0x0000b05c

0001c7d8 <dta_ctx_alloc>:
   1c7d8:	push	{r4, lr}
   1c7dc:	mov	r1, #544	; 0x220
   1c7e0:	mov	r4, r0
   1c7e4:	mov	r0, #1
   1c7e8:	bl	3d58 <calloc@plt>
   1c7ec:	cmp	r0, #0
   1c7f0:	movne	r3, #0
   1c7f4:	strne	r4, [r0, #280]	; 0x118
   1c7f8:	strne	r3, [r0, #284]	; 0x11c
   1c7fc:	pop	{r4, pc}

0001c800 <dta_ctx_init>:
   1c800:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c804:	ldrb	r5, [sp, #36]	; 0x24
   1c808:	ldrb	r9, [sp, #32]
   1c80c:	sub	ip, r5, #104	; 0x68
   1c810:	cmp	ip, #15
   1c814:	bls	1c820 <dta_ctx_init+0x20>
   1c818:	mov	r0, #24
   1c81c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c820:	mov	r4, r0
   1c824:	mov	r6, r2
   1c828:	mov	r7, r3
   1c82c:	mov	r8, r1
   1c830:	bl	3eb4 <machine_is_little_endian@plt>
   1c834:	ldrb	r3, [r4, #192]	; 0xc0
   1c838:	cmp	r9, #2
   1c83c:	movne	r2, #2
   1c840:	moveq	r2, #1
   1c844:	bic	r3, r3, #1
   1c848:	str	r5, [r4, #144]	; 0x90
   1c84c:	str	r8, [r4, #148]	; 0x94
   1c850:	strd	r6, [r4, #152]	; 0x98
   1c854:	cmp	r0, #0
   1c858:	movne	r0, #2
   1c85c:	moveq	r0, #1
   1c860:	cmp	r9, r0
   1c864:	moveq	r9, r3
   1c868:	orrne	r9, r3, #1
   1c86c:	cmp	r8, #0
   1c870:	str	r2, [r4, #232]	; 0xe8
   1c874:	strb	r9, [r4, #192]	; 0xc0
   1c878:	bne	1cba0 <dta_ctx_init+0x3a0>
   1c87c:	ldrb	r3, [r4, #192]	; 0xc0
   1c880:	cmp	r5, #104	; 0x68
   1c884:	bic	r3, r3, #2
   1c888:	strb	r3, [r4, #192]	; 0xc0
   1c88c:	bne	1c968 <dta_ctx_init+0x168>
   1c890:	mov	r3, #7
   1c894:	str	r3, [r4, #80]	; 0x50
   1c898:	mov	r3, #0
   1c89c:	cmp	r5, #117	; 0x75
   1c8a0:	strb	r3, [r4, #20]
   1c8a4:	bne	1cac4 <dta_ctx_init+0x2c4>
   1c8a8:	mov	r3, #4
   1c8ac:	mov	r2, #1
   1c8b0:	str	r2, [r4, #8]
   1c8b4:	str	r3, [r4, #112]	; 0x70
   1c8b8:	str	r3, [r4, #116]	; 0x74
   1c8bc:	mov	r3, #4
   1c8c0:	cmp	r5, #117	; 0x75
   1c8c4:	str	r3, [r4, #92]	; 0x5c
   1c8c8:	bhi	1cbfc <dta_ctx_init+0x3fc>
   1c8cc:	mov	r3, #33	; 0x21
   1c8d0:	str	r3, [r4, #84]	; 0x54
   1c8d4:	str	r3, [r4, #76]	; 0x4c
   1c8d8:	str	r3, [r4, #96]	; 0x60
   1c8dc:	mov	r3, #81	; 0x51
   1c8e0:	mov	r1, #18
   1c8e4:	mov	r2, #4
   1c8e8:	cmp	r5, #117	; 0x75
   1c8ec:	str	r3, [r4, #4]
   1c8f0:	str	r3, [r4, #88]	; 0x58
   1c8f4:	str	r1, [r4, #16]
   1c8f8:	str	r2, [r4, #100]	; 0x64
   1c8fc:	bhi	1cbe8 <dta_ctx_init+0x3e8>
   1c900:	mov	r2, #33	; 0x21
   1c904:	mov	r3, #3
   1c908:	cmp	r5, #116	; 0x74
   1c90c:	str	r2, [r4, #104]	; 0x68
   1c910:	str	r3, [r4, #108]	; 0x6c
   1c914:	bls	1cc64 <dta_ctx_init+0x464>
   1c918:	ldrb	r3, [r4, #192]	; 0xc0
   1c91c:	mov	r2, #2
   1c920:	str	r2, [r4, #24]
   1c924:	orr	r3, r3, #4
   1c928:	strb	r3, [r4, #192]	; 0xc0
   1c92c:	ldrb	r3, [r4, #192]	; 0xc0
   1c930:	ldr	r1, [pc, #864]	; 1cc98 <dta_ctx_init+0x498>
   1c934:	ldr	lr, [pc, #864]	; 1cc9c <dta_ctx_init+0x49c>
   1c938:	orr	r3, r3, #8
   1c93c:	mvn	r0, #0
   1c940:	mov	ip, #100	; 0x64
   1c944:	mvn	r2, #-2147483621	; 0x8000001b
   1c948:	strb	r3, [r4, #192]	; 0xc0
   1c94c:	mvn	r3, #-2130706432	; 0x81000000
   1c950:	strh	lr, [r4, #194]	; 0xc2
   1c954:	strd	r0, [r4, #208]	; 0xd0
   1c958:	strb	ip, [r4, #193]	; 0xc1
   1c95c:	str	r2, [r4, #196]	; 0xc4
   1c960:	str	r3, [r4, #200]	; 0xc8
   1c964:	b	1ca50 <dta_ctx_init+0x250>
   1c968:	cmp	r5, #113	; 0x71
   1c96c:	movls	r3, #12
   1c970:	strls	r3, [r4, #80]	; 0x50
   1c974:	bls	1caf4 <dta_ctx_init+0x2f4>
   1c978:	cmp	r5, #117	; 0x75
   1c97c:	bhi	1cc24 <dta_ctx_init+0x424>
   1c980:	mov	r3, #49	; 0x31
   1c984:	cmp	r5, #116	; 0x74
   1c988:	str	r3, [r4, #80]	; 0x50
   1c98c:	bls	1caf4 <dta_ctx_init+0x2f4>
   1c990:	mov	r3, #117	; 0x75
   1c994:	cmp	r5, #117	; 0x75
   1c998:	strb	r3, [r4, #20]
   1c99c:	beq	1c8a8 <dta_ctx_init+0xa8>
   1c9a0:	mov	r3, #2
   1c9a4:	mov	r2, #6
   1c9a8:	str	r3, [r4, #8]
   1c9ac:	str	r3, [r4, #112]	; 0x70
   1c9b0:	str	r2, [r4, #116]	; 0x74
   1c9b4:	cmp	r5, #109	; 0x6d
   1c9b8:	bhi	1c8bc <dta_ctx_init+0xbc>
   1c9bc:	mov	r3, #9
   1c9c0:	cmp	r5, #107	; 0x6b
   1c9c4:	mov	r2, #2
   1c9c8:	str	r3, [r4, #84]	; 0x54
   1c9cc:	str	r3, [r4, #76]	; 0x4c
   1c9d0:	str	r3, [r4, #96]	; 0x60
   1c9d4:	str	r2, [r4, #92]	; 0x5c
   1c9d8:	movhi	r3, #81	; 0x51
   1c9dc:	bhi	1c8e0 <dta_ctx_init+0xe0>
   1c9e0:	mov	r3, #32
   1c9e4:	cmp	r5, #104	; 0x68
   1c9e8:	str	r3, [r4, #88]	; 0x58
   1c9ec:	str	r3, [r4, #4]
   1c9f0:	bne	1cc84 <dta_ctx_init+0x484>
   1c9f4:	ldrb	r3, [r4, #192]	; 0xc0
   1c9f8:	mov	r2, #2
   1c9fc:	mov	ip, #0
   1ca00:	bic	r3, r3, #4
   1ca04:	mov	r0, #12
   1ca08:	mov	r1, #1
   1ca0c:	strb	r3, [r4, #192]	; 0xc0
   1ca10:	str	ip, [r4, #16]
   1ca14:	str	r2, [r4, #100]	; 0x64
   1ca18:	str	r2, [r4, #108]	; 0x6c
   1ca1c:	str	r0, [r4, #104]	; 0x68
   1ca20:	str	r1, [r4, #24]
   1ca24:	ldr	r7, [pc, #620]	; 1cc98 <dta_ctx_init+0x498>
   1ca28:	ldr	r0, [pc, #624]	; 1cca0 <dta_ctx_init+0x4a0>
   1ca2c:	mvn	r6, #0
   1ca30:	mov	r1, #126	; 0x7e
   1ca34:	mvn	r2, #-2147483647	; 0x80000001
   1ca38:	mvn	r3, #-2130706432	; 0x81000000
   1ca3c:	strh	r0, [r4, #194]	; 0xc2
   1ca40:	strd	r6, [r4, #208]	; 0xd0
   1ca44:	strb	r1, [r4, #193]	; 0xc1
   1ca48:	str	r2, [r4, #196]	; 0xc4
   1ca4c:	str	r3, [r4, #200]	; 0xc8
   1ca50:	ldr	r3, [sp, #44]	; 0x2c
   1ca54:	cmp	r3, #0
   1ca58:	beq	1ca80 <dta_ctx_init+0x280>
   1ca5c:	ldr	r3, [sp, #40]	; 0x28
   1ca60:	cmp	r3, #0
   1ca64:	beq	1cbbc <dta_ctx_init+0x3bc>
   1ca68:	mov	r1, r3
   1ca6c:	ldr	r0, [sp, #44]	; 0x2c
   1ca70:	bl	4130 <iconv_open@plt>
   1ca74:	str	r0, [r4, #236]	; 0xec
   1ca78:	cmn	r0, #1
   1ca7c:	beq	1cc14 <dta_ctx_init+0x414>
   1ca80:	ldr	r0, [r4, #148]	; 0x94
   1ca84:	cmp	r5, #119	; 0x77
   1ca88:	add	r0, r0, #1
   1ca8c:	lslne	r0, r0, #1
   1ca90:	lsleq	r0, r0, #2
   1ca94:	str	r0, [r4, #48]	; 0x30
   1ca98:	bl	422c <readstat_malloc@plt>
   1ca9c:	cmp	r0, #0
   1caa0:	str	r0, [r4, #44]	; 0x2c
   1caa4:	beq	1cb98 <dta_ctx_init+0x398>
   1caa8:	ldr	r0, [r4, #148]	; 0x94
   1caac:	cmp	r0, #0
   1cab0:	bgt	1cb04 <dta_ctx_init+0x304>
   1cab4:	mov	r3, #1
   1cab8:	str	r3, [r4, #284]	; 0x11c
   1cabc:	mov	r0, #0
   1cac0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1cac4:	cmp	r5, #104	; 0x68
   1cac8:	bne	1c9b4 <dta_ctx_init+0x1b4>
   1cacc:	mov	r3, #9
   1cad0:	mov	r2, #32
   1cad4:	mov	r1, #0
   1cad8:	str	r1, [r4, #92]	; 0x5c
   1cadc:	str	r3, [r4, #84]	; 0x54
   1cae0:	str	r3, [r4, #76]	; 0x4c
   1cae4:	str	r3, [r4, #96]	; 0x60
   1cae8:	str	r2, [r4, #88]	; 0x58
   1caec:	str	r2, [r4, #4]
   1caf0:	b	1c9f4 <dta_ctx_init+0x1f4>
   1caf4:	cmp	r5, #110	; 0x6e
   1caf8:	movhi	r3, #111	; 0x6f
   1cafc:	movls	r3, #0
   1cb00:	b	1c89c <dta_ctx_init+0x9c>
   1cb04:	add	r1, r4, #80	; 0x50
   1cb08:	ldr	ip, [r4, #76]	; 0x4c
   1cb0c:	ldm	r1, {r1, r2, r3}
   1cb10:	mul	ip, r0, ip
   1cb14:	mul	r1, r0, r1
   1cb18:	mul	r2, r0, r2
   1cb1c:	mul	r3, r0, r3
   1cb20:	lsl	r0, r0, #1
   1cb24:	str	ip, [r4, #40]	; 0x28
   1cb28:	str	r1, [r4, #56]	; 0x38
   1cb2c:	str	r2, [r4, #64]	; 0x40
   1cb30:	str	r3, [r4, #72]	; 0x48
   1cb34:	str	r0, [r4, #32]
   1cb38:	bl	422c <readstat_malloc@plt>
   1cb3c:	cmp	r0, #0
   1cb40:	str	r0, [r4, #28]
   1cb44:	beq	1cb98 <dta_ctx_init+0x398>
   1cb48:	ldr	r0, [r4, #40]	; 0x28
   1cb4c:	bl	422c <readstat_malloc@plt>
   1cb50:	cmp	r0, #0
   1cb54:	str	r0, [r4, #36]	; 0x24
   1cb58:	beq	1cb98 <dta_ctx_init+0x398>
   1cb5c:	ldr	r0, [r4, #56]	; 0x38
   1cb60:	bl	422c <readstat_malloc@plt>
   1cb64:	cmp	r0, #0
   1cb68:	str	r0, [r4, #52]	; 0x34
   1cb6c:	beq	1cb98 <dta_ctx_init+0x398>
   1cb70:	ldr	r0, [r4, #64]	; 0x40
   1cb74:	bl	422c <readstat_malloc@plt>
   1cb78:	cmp	r0, #0
   1cb7c:	str	r0, [r4, #60]	; 0x3c
   1cb80:	beq	1cb98 <dta_ctx_init+0x398>
   1cb84:	ldr	r0, [r4, #72]	; 0x48
   1cb88:	bl	422c <readstat_malloc@plt>
   1cb8c:	cmp	r0, #0
   1cb90:	str	r0, [r4, #68]	; 0x44
   1cb94:	bne	1cab4 <dta_ctx_init+0x2b4>
   1cb98:	mov	r0, #3
   1cb9c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1cba0:	mov	r0, r8
   1cba4:	mov	r1, #4
   1cba8:	bl	3fc8 <readstat_calloc@plt>
   1cbac:	cmp	r0, #0
   1cbb0:	str	r0, [r4, #228]	; 0xe4
   1cbb4:	bne	1c87c <dta_ctx_init+0x7c>
   1cbb8:	b	1cb98 <dta_ctx_init+0x398>
   1cbbc:	cmp	r5, #117	; 0x75
   1cbc0:	bls	1cc38 <dta_ctx_init+0x438>
   1cbc4:	ldr	r6, [pc, #216]	; 1cca4 <dta_ctx_init+0x4a4>
   1cbc8:	ldr	r0, [sp, #44]	; 0x2c
   1cbcc:	add	r6, pc, r6
   1cbd0:	mov	r1, r6
   1cbd4:	bl	3e00 <strcmp@plt>
   1cbd8:	cmp	r0, #0
   1cbdc:	bne	1cc50 <dta_ctx_init+0x450>
   1cbe0:	ldr	r0, [r4, #236]	; 0xec
   1cbe4:	b	1ca78 <dta_ctx_init+0x278>
   1cbe8:	mov	r2, #129	; 0x81
   1cbec:	mov	r3, #3
   1cbf0:	str	r2, [r4, #104]	; 0x68
   1cbf4:	str	r3, [r4, #108]	; 0x6c
   1cbf8:	b	1c918 <dta_ctx_init+0x118>
   1cbfc:	mov	r3, #129	; 0x81
   1cc00:	str	r3, [r4, #84]	; 0x54
   1cc04:	str	r3, [r4, #76]	; 0x4c
   1cc08:	str	r3, [r4, #96]	; 0x60
   1cc0c:	add	r3, r3, #192	; 0xc0
   1cc10:	b	1c8e0 <dta_ctx_init+0xe0>
   1cc14:	mov	r3, #0
   1cc18:	str	r3, [r4, #236]	; 0xec
   1cc1c:	mov	r0, #7
   1cc20:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1cc24:	mov	r2, #57	; 0x39
   1cc28:	mov	r3, #117	; 0x75
   1cc2c:	str	r2, [r4, #80]	; 0x50
   1cc30:	strb	r3, [r4, #20]
   1cc34:	b	1c9a0 <dta_ctx_init+0x1a0>
   1cc38:	ldr	r1, [pc, #104]	; 1cca8 <dta_ctx_init+0x4a8>
   1cc3c:	ldr	r0, [sp, #44]	; 0x2c
   1cc40:	add	r1, pc, r1
   1cc44:	bl	4130 <iconv_open@plt>
   1cc48:	str	r0, [r4, #236]	; 0xec
   1cc4c:	b	1ca78 <dta_ctx_init+0x278>
   1cc50:	mov	r1, r6
   1cc54:	ldr	r0, [sp, #44]	; 0x2c
   1cc58:	bl	4130 <iconv_open@plt>
   1cc5c:	str	r0, [r4, #236]	; 0xec
   1cc60:	b	1ca78 <dta_ctx_init+0x278>
   1cc64:	ldrb	r3, [r4, #192]	; 0xc0
   1cc68:	mov	r2, #1
   1cc6c:	cmp	r5, #112	; 0x70
   1cc70:	bic	r3, r3, #4
   1cc74:	strb	r3, [r4, #192]	; 0xc0
   1cc78:	str	r2, [r4, #24]
   1cc7c:	bls	1ca24 <dta_ctx_init+0x224>
   1cc80:	b	1c92c <dta_ctx_init+0x12c>
   1cc84:	mov	r2, #18
   1cc88:	mov	r3, #4
   1cc8c:	str	r2, [r4, #16]
   1cc90:	str	r3, [r4, #100]	; 0x64
   1cc94:	b	1c900 <dta_ctx_init+0x100>
   1cc98:	.word	0x7fdfffff
   1cc9c:	.word	0x00007fe4
   1cca0:	.word	0x00007ffe
   1cca4:	.word	0x00009500
   1cca8:	.word	0x0000b20c

0001ccac <dta_ctx_free>:
   1ccac:	push	{r4, r5, r6, lr}
   1ccb0:	mov	r4, r0
   1ccb4:	ldr	r0, [r0, #28]
   1ccb8:	cmp	r0, #0
   1ccbc:	beq	1ccc4 <dta_ctx_free+0x18>
   1ccc0:	bl	3ec0 <free@plt>
   1ccc4:	ldr	r0, [r4, #36]	; 0x24
   1ccc8:	cmp	r0, #0
   1cccc:	beq	1ccd4 <dta_ctx_free+0x28>
   1ccd0:	bl	3ec0 <free@plt>
   1ccd4:	ldr	r0, [r4, #44]	; 0x2c
   1ccd8:	cmp	r0, #0
   1ccdc:	beq	1cce4 <dta_ctx_free+0x38>
   1cce0:	bl	3ec0 <free@plt>
   1cce4:	ldr	r0, [r4, #52]	; 0x34
   1cce8:	cmp	r0, #0
   1ccec:	beq	1ccf4 <dta_ctx_free+0x48>
   1ccf0:	bl	3ec0 <free@plt>
   1ccf4:	ldr	r0, [r4, #60]	; 0x3c
   1ccf8:	cmp	r0, #0
   1ccfc:	beq	1cd04 <dta_ctx_free+0x58>
   1cd00:	bl	3ec0 <free@plt>
   1cd04:	ldr	r0, [r4, #68]	; 0x44
   1cd08:	cmp	r0, #0
   1cd0c:	beq	1cd14 <dta_ctx_free+0x68>
   1cd10:	bl	3ec0 <free@plt>
   1cd14:	ldr	r0, [r4, #236]	; 0xec
   1cd18:	cmp	r0, #0
   1cd1c:	beq	1cd24 <dta_ctx_free+0x78>
   1cd20:	bl	3dd0 <iconv_close@plt>
   1cd24:	ldr	r0, [r4]
   1cd28:	cmp	r0, #0
   1cd2c:	beq	1cd34 <dta_ctx_free+0x88>
   1cd30:	bl	3ec0 <free@plt>
   1cd34:	ldr	r2, [r4, #228]	; 0xe4
   1cd38:	cmp	r2, #0
   1cd3c:	beq	1cd7c <dta_ctx_free+0xd0>
   1cd40:	ldr	r1, [r4, #148]	; 0x94
   1cd44:	cmp	r1, #0
   1cd48:	ble	1cd74 <dta_ctx_free+0xc8>
   1cd4c:	mov	r5, #0
   1cd50:	ldr	r3, [r2, r5, lsl #2]
   1cd54:	add	r5, r5, #1
   1cd58:	subs	r0, r3, #0
   1cd5c:	beq	1cd6c <dta_ctx_free+0xc0>
   1cd60:	bl	3ec0 <free@plt>
   1cd64:	ldr	r1, [r4, #148]	; 0x94
   1cd68:	ldr	r2, [r4, #228]	; 0xe4
   1cd6c:	cmp	r5, r1
   1cd70:	blt	1cd50 <dta_ctx_free+0xa4>
   1cd74:	mov	r0, r2
   1cd78:	bl	3ec0 <free@plt>
   1cd7c:	ldr	r0, [r4, #216]	; 0xd8
   1cd80:	cmp	r0, #0
   1cd84:	beq	1cdb8 <dta_ctx_free+0x10c>
   1cd88:	ldr	r3, [r4, #220]	; 0xdc
   1cd8c:	cmp	r3, #0
   1cd90:	beq	1cdb4 <dta_ctx_free+0x108>
   1cd94:	mov	r5, #0
   1cd98:	ldr	r0, [r0, r5, lsl #2]
   1cd9c:	bl	3ec0 <free@plt>
   1cda0:	ldr	r3, [r4, #220]	; 0xdc
   1cda4:	add	r5, r5, #1
   1cda8:	cmp	r3, r5
   1cdac:	ldr	r0, [r4, #216]	; 0xd8
   1cdb0:	bhi	1cd98 <dta_ctx_free+0xec>
   1cdb4:	bl	3ec0 <free@plt>
   1cdb8:	mov	r0, r4
   1cdbc:	pop	{r4, r5, r6, lr}
   1cdc0:	b	3ec0 <free@plt>

0001cdc4 <dta_type_info>:
   1cdc4:	ldrb	r1, [r1, #20]
   1cdc8:	cmp	r1, #111	; 0x6f
   1cdcc:	beq	1ce20 <dta_type_info+0x5c>
   1cdd0:	cmp	r1, #117	; 0x75
   1cdd4:	beq	1ce44 <dta_type_info+0x80>
   1cdd8:	cmp	r0, #126	; 0x7e
   1cddc:	bls	1ce00 <dta_type_info+0x3c>
   1cde0:	mov	ip, #0
   1cde4:	sub	r1, r0, #127	; 0x7f
   1cde8:	mov	r0, ip
   1cdec:	cmp	r2, #0
   1cdf0:	strne	r1, [r2]
   1cdf4:	cmp	r3, #0
   1cdf8:	strne	ip, [r3]
   1cdfc:	bx	lr
   1ce00:	sub	r0, r0, #98	; 0x62
   1ce04:	uxth	r0, r0
   1ce08:	cmp	r0, #10
   1ce0c:	bls	1ce80 <dta_type_info+0xbc>
   1ce10:	mov	ip, #0
   1ce14:	mov	r1, ip
   1ce18:	mov	r0, #5
   1ce1c:	b	1cdec <dta_type_info+0x28>
   1ce20:	sub	r1, r0, #251	; 0xfb
   1ce24:	cmp	r1, #4
   1ce28:	addls	pc, pc, r1, lsl #2
   1ce2c:	b	1cef0 <dta_type_info+0x12c>
   1ce30:	b	1ce70 <dta_type_info+0xac>
   1ce34:	b	1cee0 <dta_type_info+0x11c>
   1ce38:	b	1ced0 <dta_type_info+0x10c>
   1ce3c:	b	1cec0 <dta_type_info+0xfc>
   1ce40:	b	1ceb0 <dta_type_info+0xec>
   1ce44:	ldr	r1, [pc, #196]	; 1cf10 <dta_type_info+0x14c>
   1ce48:	cmp	r0, r1
   1ce4c:	beq	1cec0 <dta_type_info+0xfc>
   1ce50:	bls	1ce9c <dta_type_info+0xd8>
   1ce54:	ldr	r1, [pc, #184]	; 1cf14 <dta_type_info+0x150>
   1ce58:	cmp	r0, r1
   1ce5c:	beq	1cee0 <dta_type_info+0x11c>
   1ce60:	bcc	1ced0 <dta_type_info+0x10c>
   1ce64:	add	r1, r1, #1
   1ce68:	cmp	r0, r1
   1ce6c:	bne	1cef0 <dta_type_info+0x12c>
   1ce70:	mov	ip, #1
   1ce74:	mov	r1, ip
   1ce78:	mov	r0, #0
   1ce7c:	b	1cdec <dta_type_info+0x28>
   1ce80:	ldr	r1, [pc, #144]	; 1cf18 <dta_type_info+0x154>
   1ce84:	add	r1, pc, r1
   1ce88:	add	ip, r1, r0, lsl #2
   1ce8c:	ldr	r0, [r1, r0, lsl #2]
   1ce90:	ldr	r1, [ip, #44]	; 0x2c
   1ce94:	ldr	ip, [ip, #88]	; 0x58
   1ce98:	b	1cdec <dta_type_info+0x28>
   1ce9c:	cmp	r0, #32768	; 0x8000
   1cea0:	beq	1cf00 <dta_type_info+0x13c>
   1cea4:	sub	r1, r1, #1
   1cea8:	cmp	r0, r1
   1ceac:	bne	1cef0 <dta_type_info+0x12c>
   1ceb0:	mov	ip, #5
   1ceb4:	mov	r1, #8
   1ceb8:	mov	r0, #0
   1cebc:	b	1cdec <dta_type_info+0x28>
   1cec0:	mov	ip, #4
   1cec4:	mov	r1, ip
   1cec8:	mov	r0, #0
   1cecc:	b	1cdec <dta_type_info+0x28>
   1ced0:	mov	ip, #3
   1ced4:	mov	r1, #4
   1ced8:	mov	r0, #0
   1cedc:	b	1cdec <dta_type_info+0x28>
   1cee0:	mov	ip, #2
   1cee4:	mov	r1, ip
   1cee8:	mov	r0, #0
   1ceec:	b	1cdec <dta_type_info+0x28>
   1cef0:	mov	ip, #0
   1cef4:	mov	r1, r0
   1cef8:	mov	r0, ip
   1cefc:	b	1cdec <dta_type_info+0x28>
   1cf00:	mov	ip, #6
   1cf04:	mov	r1, #8
   1cf08:	mov	r0, #0
   1cf0c:	b	1cdec <dta_type_info+0x28>
   1cf10:	.word	0x0000fff7
   1cf14:	.word	0x0000fff9
   1cf18:	.word	0x0000af44

0001cf1c <dta_parse_timestamp>:
   1cf1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cf20:	sub	sp, sp, #1056	; 0x420
   1cf24:	sub	sp, sp, #4
   1cf28:	add	r9, r0, r1
   1cf2c:	cmp	r0, r9
   1cf30:	str	r0, [sp, #24]
   1cf34:	str	r1, [sp, #28]
   1cf38:	str	r3, [sp, #20]
   1cf3c:	beq	1d274 <dta_parse_timestamp+0x358>
   1cf40:	ldr	r3, [pc, #836]	; 1d28c <dta_parse_timestamp+0x370>
   1cf44:	ldr	sl, [pc, #836]	; 1d290 <dta_parse_timestamp+0x374>
   1cf48:	add	r3, pc, r3
   1cf4c:	str	r3, [sp, #16]
   1cf50:	ldr	r3, [pc, #828]	; 1d294 <dta_parse_timestamp+0x378>
   1cf54:	mov	fp, #0
   1cf58:	mov	r7, #1
   1cf5c:	add	r3, pc, r3
   1cf60:	add	sl, pc, sl
   1cf64:	mov	r5, r7
   1cf68:	mov	r8, fp
   1cf6c:	mov	r6, r0
   1cf70:	mov	r4, fp
   1cf74:	str	r3, [sp, #12]
   1cf78:	add	r3, sl, #40	; 0x28
   1cf7c:	str	r3, [sp, #8]
   1cf80:	cmp	r7, #0
   1cf84:	add	r4, r3, r4
   1cf88:	mov	r3, fp
   1cf8c:	beq	1cfd4 <dta_parse_timestamp+0xb8>
   1cf90:	sub	r0, r7, #1
   1cf94:	adds	r0, r4, r0
   1cf98:	bcs	1cfcc <dta_parse_timestamp+0xb0>
   1cf9c:	ldrb	lr, [r6]
   1cfa0:	mov	r1, r4
   1cfa4:	sub	r3, r0, r1
   1cfa8:	ldrb	ip, [r1, r3, asr #1]
   1cfac:	add	r3, r1, r3, asr #1
   1cfb0:	cmp	ip, lr
   1cfb4:	subhi	r0, r3, #1
   1cfb8:	bhi	1cfc4 <dta_parse_timestamp+0xa8>
   1cfbc:	bcs	1d1c0 <dta_parse_timestamp+0x2a4>
   1cfc0:	add	r1, r3, #1
   1cfc4:	cmp	r0, r1
   1cfc8:	bcs	1cfa4 <dta_parse_timestamp+0x88>
   1cfcc:	add	r4, r4, r7
   1cfd0:	add	r3, fp, r7
   1cfd4:	ldr	r1, [sp, #16]
   1cfd8:	add	r5, r1, r5
   1cfdc:	ldrb	r7, [r5, #160]	; 0xa0
   1cfe0:	cmp	r7, #0
   1cfe4:	beq	1d03c <dta_parse_timestamp+0x120>
   1cfe8:	add	ip, r4, r7, lsl #1
   1cfec:	sub	ip, ip, #2
   1cff0:	cmp	r4, ip
   1cff4:	bhi	1d038 <dta_parse_timestamp+0x11c>
   1cff8:	ldrb	r5, [r6]
   1cffc:	mov	r0, r4
   1d000:	sub	r1, ip, r0
   1d004:	asr	r1, r1, #1
   1d008:	bic	r1, r1, #1
   1d00c:	add	lr, r0, r1
   1d010:	ldrb	r1, [r0, r1]
   1d014:	cmp	r1, r5
   1d018:	subhi	ip, lr, #2
   1d01c:	bhi	1d030 <dta_parse_timestamp+0x114>
   1d020:	ldrb	r1, [lr, #1]
   1d024:	add	r0, lr, #2
   1d028:	cmp	r1, r5
   1d02c:	bcs	1d1cc <dta_parse_timestamp+0x2b0>
   1d030:	cmp	r0, ip
   1d034:	bls	1d000 <dta_parse_timestamp+0xe4>
   1d038:	add	r3, r3, r7
   1d03c:	add	r3, sl, r3
   1d040:	ldrb	r1, [r3, #208]	; 0xd0
   1d044:	add	r1, sl, r1
   1d048:	ldrb	r3, [r1, #424]	; 0x1a8
   1d04c:	ldrb	r5, [r1, #364]	; 0x16c
   1d050:	cmp	r3, #0
   1d054:	beq	1d0dc <dta_parse_timestamp+0x1c0>
   1d058:	ldrb	r0, [sl, r3]
   1d05c:	add	r3, sl, r3
   1d060:	mov	r7, #4
   1d064:	add	r0, r3, r0
   1d068:	mov	r4, #3
   1d06c:	mov	lr, #2
   1d070:	mov	ip, #1
   1d074:	cmp	r0, r3
   1d078:	beq	1d0dc <dta_parse_timestamp+0x1c0>
   1d07c:	ldrb	r1, [r3, #1]!
   1d080:	cmp	r1, #16
   1d084:	addls	pc, pc, r1, lsl #2
   1d088:	b	1d074 <dta_parse_timestamp+0x158>
   1d08c:	b	1d10c <dta_parse_timestamp+0x1f0>
   1d090:	b	1d0d0 <dta_parse_timestamp+0x1b4>
   1d094:	b	1d1b8 <dta_parse_timestamp+0x29c>
   1d098:	b	1d1ac <dta_parse_timestamp+0x290>
   1d09c:	b	1d1a4 <dta_parse_timestamp+0x288>
   1d0a0:	b	1d19c <dta_parse_timestamp+0x280>
   1d0a4:	b	1d194 <dta_parse_timestamp+0x278>
   1d0a8:	b	1d18c <dta_parse_timestamp+0x270>
   1d0ac:	b	1d180 <dta_parse_timestamp+0x264>
   1d0b0:	b	1d174 <dta_parse_timestamp+0x258>
   1d0b4:	b	1d168 <dta_parse_timestamp+0x24c>
   1d0b8:	b	1d15c <dta_parse_timestamp+0x240>
   1d0bc:	b	1d150 <dta_parse_timestamp+0x234>
   1d0c0:	b	1d144 <dta_parse_timestamp+0x228>
   1d0c4:	b	1d138 <dta_parse_timestamp+0x21c>
   1d0c8:	b	1d128 <dta_parse_timestamp+0x20c>
   1d0cc:	b	1d120 <dta_parse_timestamp+0x204>
   1d0d0:	cmp	r0, r3
   1d0d4:	mov	r8, #0
   1d0d8:	bne	1d07c <dta_parse_timestamp+0x160>
   1d0dc:	cmp	r5, #0
   1d0e0:	beq	1d220 <dta_parse_timestamp+0x304>
   1d0e4:	add	r6, r6, #1
   1d0e8:	cmp	r9, r6
   1d0ec:	beq	1d1d8 <dta_parse_timestamp+0x2bc>
   1d0f0:	ldr	r3, [sp, #12]
   1d0f4:	add	r3, r3, r5
   1d0f8:	ldrb	r4, [r3, #532]	; 0x214
   1d0fc:	ldrb	fp, [r3, #580]	; 0x244
   1d100:	ldrb	r7, [r3, #628]	; 0x274
   1d104:	ldr	r3, [sp, #8]
   1d108:	b	1cf80 <dta_parse_timestamp+0x64>
   1d10c:	ldrb	r1, [r6]
   1d110:	add	r8, r8, r8, lsl #2
   1d114:	sub	r1, r1, #48	; 0x30
   1d118:	add	r8, r1, r8, lsl #1
   1d11c:	b	1d074 <dta_parse_timestamp+0x158>
   1d120:	str	r8, [r2, #8]
   1d124:	b	1d074 <dta_parse_timestamp+0x158>
   1d128:	sub	r1, r8, #1888	; 0x760
   1d12c:	sub	r1, r1, #12
   1d130:	str	r1, [r2, #20]
   1d134:	b	1d074 <dta_parse_timestamp+0x158>
   1d138:	mov	r1, #11
   1d13c:	str	r1, [r2, #16]
   1d140:	b	1d074 <dta_parse_timestamp+0x158>
   1d144:	mov	r1, #10
   1d148:	str	r1, [r2, #16]
   1d14c:	b	1d074 <dta_parse_timestamp+0x158>
   1d150:	mov	r1, #9
   1d154:	str	r1, [r2, #16]
   1d158:	b	1d074 <dta_parse_timestamp+0x158>
   1d15c:	mov	r1, #8
   1d160:	str	r1, [r2, #16]
   1d164:	b	1d074 <dta_parse_timestamp+0x158>
   1d168:	mov	r1, #7
   1d16c:	str	r1, [r2, #16]
   1d170:	b	1d074 <dta_parse_timestamp+0x158>
   1d174:	mov	r1, #6
   1d178:	str	r1, [r2, #16]
   1d17c:	b	1d074 <dta_parse_timestamp+0x158>
   1d180:	mov	r1, #5
   1d184:	str	r1, [r2, #16]
   1d188:	b	1d074 <dta_parse_timestamp+0x158>
   1d18c:	str	r7, [r2, #16]
   1d190:	b	1d074 <dta_parse_timestamp+0x158>
   1d194:	str	r4, [r2, #16]
   1d198:	b	1d074 <dta_parse_timestamp+0x158>
   1d19c:	str	lr, [r2, #16]
   1d1a0:	b	1d074 <dta_parse_timestamp+0x158>
   1d1a4:	str	ip, [r2, #16]
   1d1a8:	b	1d074 <dta_parse_timestamp+0x158>
   1d1ac:	mov	r1, #0
   1d1b0:	str	r1, [r2, #16]
   1d1b4:	b	1d074 <dta_parse_timestamp+0x158>
   1d1b8:	str	r8, [r2, #12]
   1d1bc:	b	1d074 <dta_parse_timestamp+0x158>
   1d1c0:	sub	r3, r3, r4
   1d1c4:	add	r3, fp, r3
   1d1c8:	b	1d03c <dta_parse_timestamp+0x120>
   1d1cc:	sub	r4, lr, r4
   1d1d0:	add	r3, r3, r4, asr #1
   1d1d4:	b	1d03c <dta_parse_timestamp+0x120>
   1d1d8:	ldr	r1, [pc, #184]	; 1d298 <dta_parse_timestamp+0x37c>
   1d1dc:	cmp	r5, #43	; 0x2b
   1d1e0:	add	r1, pc, r1
   1d1e4:	add	r5, r1, r5
   1d1e8:	movgt	r0, #0
   1d1ec:	ldrb	ip, [r5, #484]	; 0x1e4
   1d1f0:	movle	r0, #1
   1d1f4:	add	r3, r1, ip
   1d1f8:	ldrb	r1, [r1, ip]
   1d1fc:	add	r1, r3, r1
   1d200:	b	1d210 <dta_parse_timestamp+0x2f4>
   1d204:	ldrb	ip, [r3, #1]!
   1d208:	cmp	ip, #17
   1d20c:	streq	r8, [r2, #4]
   1d210:	cmp	r3, r1
   1d214:	bne	1d204 <dta_parse_timestamp+0x2e8>
   1d218:	cmp	r0, #0
   1d21c:	beq	1d268 <dta_parse_timestamp+0x34c>
   1d220:	ldr	r3, [sp, #20]
   1d224:	cmp	r3, #0
   1d228:	beq	1d264 <dta_parse_timestamp+0x348>
   1d22c:	ldr	r0, [sp, #24]
   1d230:	mov	r5, r3
   1d234:	ldr	r2, [pc, #96]	; 1d29c <dta_parse_timestamp+0x380>
   1d238:	ldr	r3, [sp, #28]
   1d23c:	add	r4, sp, #32
   1d240:	str	r0, [sp, #4]
   1d244:	mov	r1, #1024	; 0x400
   1d248:	str	r3, [sp]
   1d24c:	mov	r0, r4
   1d250:	add	r2, pc, r2
   1d254:	bl	4280 <snprintf@plt>
   1d258:	ldr	r1, [sp, #1096]	; 0x448
   1d25c:	mov	r0, r4
   1d260:	blx	r5
   1d264:	mov	r0, #29
   1d268:	add	sp, sp, #1056	; 0x420
   1d26c:	add	sp, sp, #4
   1d270:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d274:	ldr	r3, [pc, #36]	; 1d2a0 <dta_parse_timestamp+0x384>
   1d278:	mov	r1, #0
   1d27c:	add	r3, pc, r3
   1d280:	mov	r8, r1
   1d284:	mov	r0, #1
   1d288:	b	1d1fc <dta_parse_timestamp+0x2e0>
   1d28c:	.word	0x0000af14
   1d290:	.word	0x0000aefc
   1d294:	.word	0x0000af00
   1d298:	.word	0x0000ac7c
   1d29c:	.word	0x0000aeb0
   1d2a0:	.word	0x0000abe0
   1d2a4:	.word	0x00000000

0001d2a8 <dta_update_progress>:
   1d2a8:	push	{r4, r6, r7, lr}
   1d2ac:	mov	r4, r0
   1d2b0:	ldrd	r6, [r0, #168]	; 0xa8
   1d2b4:	vpush	{d8}
   1d2b8:	cmp	r6, #1
   1d2bc:	sbcs	r3, r7, #0
   1d2c0:	blt	1d318 <dta_update_progress+0x70>
   1d2c4:	ldrd	r0, [r0, #184]	; 0xb8
   1d2c8:	bl	25554 <__aeabi_l2d>
   1d2cc:	vmov	d8, r0, r1
   1d2d0:	mov	r0, r6
   1d2d4:	mov	r1, r7
   1d2d8:	bl	25554 <__aeabi_l2d>
   1d2dc:	vmov	d7, r0, r1
   1d2e0:	vdiv.f64	d0, d8, d7
   1d2e4:	ldr	r3, [r4, #268]	; 0x10c
   1d2e8:	cmp	r3, #0
   1d2ec:	beq	1d30c <dta_update_progress+0x64>
   1d2f0:	ldr	r0, [r4, #276]	; 0x114
   1d2f4:	blx	r3
   1d2f8:	cmp	r0, #0
   1d2fc:	movne	r0, #4
   1d300:	beq	1d30c <dta_update_progress+0x64>
   1d304:	vpop	{d8}
   1d308:	pop	{r4, r6, r7, pc}
   1d30c:	vpop	{d8}
   1d310:	mov	r0, #0
   1d314:	pop	{r4, r6, r7, pc}
   1d318:	vldr	d0, [pc]	; 1d320 <dta_update_progress+0x78>
   1d31c:	b	1d2e4 <dta_update_progress+0x3c>
	...

0001d328 <dta_read_tag>:
   1d328:	ldr	r3, [r0, #284]	; 0x11c
   1d32c:	cmp	r3, #0
   1d330:	beq	1d340 <dta_read_tag+0x18>
   1d334:	ldrb	r3, [r0, #192]	; 0xc0
   1d338:	tst	r3, #4
   1d33c:	beq	1d388 <dta_read_tag+0x60>
   1d340:	push	{r4, r5, r6, r7, lr}
   1d344:	mov	r4, r0
   1d348:	sub	sp, sp, #260	; 0x104
   1d34c:	mov	r0, r1
   1d350:	mov	r5, r1
   1d354:	bl	41fc <strlen@plt>
   1d358:	ldr	r3, [r4, #280]	; 0x118
   1d35c:	ldr	r7, [r3, #12]
   1d360:	ldr	r2, [r3, #20]
   1d364:	mov	r6, r0
   1d368:	mov	r1, r0
   1d36c:	mov	r0, sp
   1d370:	blx	r7
   1d374:	cmp	r6, r0
   1d378:	movne	r0, #2
   1d37c:	beq	1d390 <dta_read_tag+0x68>
   1d380:	add	sp, sp, #260	; 0x104
   1d384:	pop	{r4, r5, r6, r7, pc}
   1d388:	mov	r0, #0
   1d38c:	bx	lr
   1d390:	mov	r2, r6
   1d394:	mov	r1, r5
   1d398:	mov	r0, sp
   1d39c:	bl	44fc <strncmp@plt>
   1d3a0:	cmp	r0, #0
   1d3a4:	movne	r0, #5
   1d3a8:	bne	1d380 <dta_read_tag+0x58>
   1d3ac:	mov	r0, #0
   1d3b0:	add	sp, sp, #260	; 0x104
   1d3b4:	pop	{r4, r5, r6, r7, pc}

0001d3b8 <dta_read_chunk>:
   1d3b8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d3bc:	mov	r7, r1
   1d3c0:	ldr	r1, [r0, #284]	; 0x11c
   1d3c4:	sub	sp, sp, #256	; 0x100
   1d3c8:	cmp	r1, #0
   1d3cc:	mov	r4, r0
   1d3d0:	mov	sl, r2
   1d3d4:	mov	r8, r3
   1d3d8:	ldr	r5, [r0, #280]	; 0x118
   1d3dc:	beq	1d3ec <dta_read_chunk+0x34>
   1d3e0:	ldrb	r3, [r0, #192]	; 0xc0
   1d3e4:	tst	r3, #4
   1d3e8:	beq	1d420 <dta_read_chunk+0x68>
   1d3ec:	mov	r0, r7
   1d3f0:	bl	41fc <strlen@plt>
   1d3f4:	ldr	r3, [r5, #12]
   1d3f8:	ldr	r2, [r5, #20]
   1d3fc:	mov	r6, r0
   1d400:	mov	r1, r0
   1d404:	mov	r0, sp
   1d408:	blx	r3
   1d40c:	cmp	r6, r0
   1d410:	beq	1d4a0 <dta_read_chunk+0xe8>
   1d414:	mov	r0, #2
   1d418:	add	sp, sp, #256	; 0x100
   1d41c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d420:	mov	r0, sl
   1d424:	ldr	r3, [r5, #12]
   1d428:	ldr	r2, [r5, #20]
   1d42c:	mov	r1, r8
   1d430:	blx	r3
   1d434:	cmp	r8, r0
   1d438:	bne	1d414 <dta_read_chunk+0x5c>
   1d43c:	ldr	r3, [r4, #284]	; 0x11c
   1d440:	cmp	r3, #0
   1d444:	beq	1d454 <dta_read_chunk+0x9c>
   1d448:	ldrb	r3, [r4, #192]	; 0xc0
   1d44c:	tst	r3, #4
   1d450:	beq	1d498 <dta_read_chunk+0xe0>
   1d454:	ldr	r0, [sp, #288]	; 0x120
   1d458:	bl	41fc <strlen@plt>
   1d45c:	ldr	r3, [r4, #280]	; 0x118
   1d460:	ldr	r6, [r3, #12]
   1d464:	ldr	r2, [r3, #20]
   1d468:	mov	r5, r0
   1d46c:	mov	r1, r0
   1d470:	mov	r0, sp
   1d474:	blx	r6
   1d478:	cmp	r5, r0
   1d47c:	bne	1d414 <dta_read_chunk+0x5c>
   1d480:	mov	r2, r5
   1d484:	mov	r0, sp
   1d488:	ldr	r1, [sp, #288]	; 0x120
   1d48c:	bl	44fc <strncmp@plt>
   1d490:	cmp	r0, #0
   1d494:	bne	1d4b8 <dta_read_chunk+0x100>
   1d498:	mov	r0, #0
   1d49c:	b	1d418 <dta_read_chunk+0x60>
   1d4a0:	mov	r2, r6
   1d4a4:	mov	r1, r7
   1d4a8:	mov	r0, sp
   1d4ac:	bl	44fc <strncmp@plt>
   1d4b0:	cmp	r0, #0
   1d4b4:	beq	1d420 <dta_read_chunk+0x68>
   1d4b8:	mov	r0, #5
   1d4bc:	b	1d418 <dta_read_chunk+0x60>

0001d4c0 <readstat_parse_dta>:
   1d4c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d4c4:	vpush	{d8}
   1d4c8:	ldr	r4, [r0, #32]
   1d4cc:	mov	r6, r0
   1d4d0:	mov	r0, r4
   1d4d4:	sub	sp, sp, #388	; 0x184
   1d4d8:	mov	r8, r1
   1d4dc:	mov	r7, r2
   1d4e0:	bl	455c <dta_ctx_alloc@plt>
   1d4e4:	ldr	r3, [r4]
   1d4e8:	ldr	r1, [r4, #20]
   1d4ec:	mov	r5, r0
   1d4f0:	mov	r0, r8
   1d4f4:	blx	r3
   1d4f8:	cmn	r0, #1
   1d4fc:	beq	1d554 <readstat_parse_dta+0x94>
   1d500:	add	r9, sp, #68	; 0x44
   1d504:	mov	r0, r9
   1d508:	ldr	r3, [r4, #12]
   1d50c:	ldr	r2, [r4, #20]
   1d510:	mov	r1, #4
   1d514:	blx	r3
   1d518:	cmp	r0, #4
   1d51c:	mov	sl, r0
   1d520:	movne	sl, #2
   1d524:	beq	1d55c <readstat_parse_dta+0x9c>
   1d528:	ldr	r3, [r4, #4]
   1d52c:	ldr	r0, [r4, #20]
   1d530:	blx	r3
   1d534:	cmp	r5, #0
   1d538:	beq	1d544 <readstat_parse_dta+0x84>
   1d53c:	mov	r0, r5
   1d540:	bl	3e78 <dta_ctx_free@plt>
   1d544:	mov	r0, sl
   1d548:	add	sp, sp, #388	; 0x184
   1d54c:	vpop	{d8}
   1d550:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d554:	mov	sl, #1
   1d558:	b	1d528 <readstat_parse_dta+0x68>
   1d55c:	ldr	r3, [r4, #8]
   1d560:	ldr	r2, [r4, #20]
   1d564:	mov	r1, #2
   1d568:	mov	r0, #0
   1d56c:	blx	r3
   1d570:	cmn	r0, #1
   1d574:	mov	r8, r0
   1d578:	bne	1d5e0 <readstat_parse_dta+0x120>
   1d57c:	ldr	r6, [r5, #264]	; 0x108
   1d580:	cmp	r6, #0
   1d584:	beq	1d74c <readstat_parse_dta+0x28c>
   1d588:	ldr	ip, [pc, #2560]	; 1df90 <readstat_parse_dta+0xad0>
   1d58c:	add	lr, r5, #288	; 0x120
   1d590:	add	ip, pc, ip
   1d594:	mov	sl, #15
   1d598:	ldm	ip!, {r0, r1, r2, r3}
   1d59c:	str	r0, [r5, #288]	; 0x120
   1d5a0:	str	r1, [r5, #292]	; 0x124
   1d5a4:	str	r2, [r5, #296]	; 0x128
   1d5a8:	ldm	ip!, {r0, r1, r2}
   1d5ac:	str	r3, [r5, #300]	; 0x12c
   1d5b0:	ldrh	r3, [ip]
   1d5b4:	str	r0, [r5, #304]	; 0x130
   1d5b8:	str	r1, [r5, #308]	; 0x134
   1d5bc:	mov	r0, lr
   1d5c0:	strh	r3, [lr, #28]
   1d5c4:	str	r2, [r5, #312]	; 0x138
   1d5c8:	ldr	r1, [r5, #276]	; 0x114
   1d5cc:	blx	r6
   1d5d0:	ldr	r3, [r4, #4]
   1d5d4:	ldr	r0, [r4, #20]
   1d5d8:	blx	r3
   1d5dc:	b	1d53c <readstat_parse_dta+0x7c>
   1d5e0:	mov	r1, #0
   1d5e4:	mov	r0, r1
   1d5e8:	ldr	r3, [r4, #8]
   1d5ec:	ldr	r2, [r4, #20]
   1d5f0:	blx	r3
   1d5f4:	cmn	r0, #1
   1d5f8:	beq	1d8b0 <readstat_parse_dta+0x3f0>
   1d5fc:	ldr	r1, [pc, #2448]	; 1df94 <readstat_parse_dta+0xad4>
   1d600:	mov	r2, sl
   1d604:	mov	r0, r9
   1d608:	add	r1, pc, r1
   1d60c:	bl	44fc <strncmp@plt>
   1d610:	cmp	r0, #0
   1d614:	bne	1d754 <readstat_parse_dta+0x294>
   1d618:	ldr	r3, [r5, #284]	; 0x11c
   1d61c:	cmp	r3, #0
   1d620:	beq	1d630 <readstat_parse_dta+0x170>
   1d624:	ldrb	r3, [r5, #192]	; 0xc0
   1d628:	tst	r3, #4
   1d62c:	beq	1d930 <readstat_parse_dta+0x470>
   1d630:	ldr	r3, [r5, #280]	; 0x118
   1d634:	add	fp, sp, #128	; 0x80
   1d638:	mov	r0, fp
   1d63c:	ldr	r9, [r3, #12]
   1d640:	ldr	r2, [r3, #20]
   1d644:	mov	r1, #11
   1d648:	blx	r9
   1d64c:	cmp	r0, #11
   1d650:	beq	1d904 <readstat_parse_dta+0x444>
   1d654:	mov	sl, #2
   1d658:	b	1d5d0 <readstat_parse_dta+0x110>
   1d65c:	ldr	r1, [pc, #2356]	; 1df98 <readstat_parse_dta+0xad8>
   1d660:	mov	r0, r5
   1d664:	add	r1, pc, r1
   1d668:	bl	1d328 <dta_read_tag>
   1d66c:	subs	sl, r0, #0
   1d670:	bne	1e424 <readstat_parse_dta+0xf64>
   1d674:	cmp	r8, #0
   1d678:	beq	1d684 <readstat_parse_dta+0x1c4>
   1d67c:	mov	r0, r8
   1d680:	bl	3ec0 <free@plt>
   1d684:	ldrb	r3, [r5, #192]	; 0xc0
   1d688:	ands	r0, r3, #4
   1d68c:	bne	1e650 <readstat_parse_dta+0x1190>
   1d690:	ldr	r3, [r4, #8]
   1d694:	ldr	r2, [r4, #20]
   1d698:	mov	r1, #1
   1d69c:	blx	r3
   1d6a0:	mvn	r3, #0
   1d6a4:	mvn	r2, #0
   1d6a8:	asr	r1, r0, #31
   1d6ac:	cmp	r1, r3
   1d6b0:	cmpeq	r0, r2
   1d6b4:	strd	r0, [r5, #120]	; 0x78
   1d6b8:	beq	1d74c <readstat_parse_dta+0x28c>
   1d6bc:	add	r2, r5, #152	; 0x98
   1d6c0:	ldrb	lr, [r5, #192]	; 0xc0
   1d6c4:	ldm	r2, {r2, r6, ip}
   1d6c8:	umull	r8, r9, r2, ip
   1d6cc:	mla	r9, ip, r6, r9
   1d6d0:	adds	r2, r8, r0
   1d6d4:	adc	r3, r9, r1
   1d6d8:	tst	lr, #4
   1d6dc:	strd	r2, [r5, #136]	; 0x88
   1d6e0:	bne	1e650 <readstat_parse_dta+0x1190>
   1d6e4:	ldr	r3, [r5, #256]	; 0x100
   1d6e8:	ldr	r8, [r5, #280]	; 0x118
   1d6ec:	cmp	r3, #0
   1d6f0:	beq	1e540 <readstat_parse_dta+0x1080>
   1d6f4:	ldr	r3, [r8, #8]
   1d6f8:	ldr	r2, [r8, #20]
   1d6fc:	mov	r1, #0
   1d700:	ldr	r0, [r5, #120]	; 0x78
   1d704:	blx	r3
   1d708:	cmn	r0, #1
   1d70c:	bne	1e584 <readstat_parse_dta+0x10c4>
   1d710:	ldr	r3, [r5, #264]	; 0x108
   1d714:	cmp	r3, #0
   1d718:	beq	1d74c <readstat_parse_dta+0x28c>
   1d71c:	ldrd	r2, [r5, #120]	; 0x78
   1d720:	add	r6, r5, #288	; 0x120
   1d724:	mov	r0, r6
   1d728:	strd	r2, [sp]
   1d72c:	ldr	r2, [pc, #2152]	; 1df9c <readstat_parse_dta+0xadc>
   1d730:	add	r2, pc, r2
   1d734:	mov	r1, #256	; 0x100
   1d738:	bl	4280 <snprintf@plt>
   1d73c:	mov	r0, r6
   1d740:	ldr	r3, [r5, #264]	; 0x108
   1d744:	ldr	r1, [r5, #276]	; 0x114
   1d748:	blx	r3
   1d74c:	mov	sl, #15
   1d750:	b	1d5d0 <readstat_parse_dta+0x110>
   1d754:	ldr	r3, [r5, #280]	; 0x118
   1d758:	add	fp, sp, #128	; 0x80
   1d75c:	mov	r0, fp
   1d760:	ldr	r9, [r3, #12]
   1d764:	ldr	r2, [r3, #20]
   1d768:	mov	r1, #10
   1d76c:	blx	r9
   1d770:	cmp	r0, #10
   1d774:	bne	1d654 <readstat_parse_dta+0x194>
   1d778:	ldrb	r9, [sp, #129]	; 0x81
   1d77c:	bl	3eb4 <machine_is_little_endian@plt>
   1d780:	sub	r9, r9, #2
   1d784:	clz	r9, r9
   1d788:	lsr	r9, r9, #5
   1d78c:	cmp	r9, r0
   1d790:	bne	1dc08 <readstat_parse_dta+0x748>
   1d794:	ldrh	r3, [sp, #136]	; 0x88
   1d798:	ldrh	r2, [sp, #134]	; 0x86
   1d79c:	orr	r2, r2, r3, lsl #16
   1d7a0:	lsr	r3, r2, #16
   1d7a4:	strh	r3, [sp, #136]	; 0x88
   1d7a8:	ldrb	r3, [sp, #128]	; 0x80
   1d7ac:	ldrb	ip, [sp, #129]	; 0x81
   1d7b0:	ldr	r0, [r6, #40]	; 0x28
   1d7b4:	strh	r2, [sp, #134]	; 0x86
   1d7b8:	ldrh	r1, [fp, #4]
   1d7bc:	str	r3, [sp, #4]
   1d7c0:	ldr	r3, [r6, #36]	; 0x24
   1d7c4:	str	r0, [sp, #12]
   1d7c8:	str	r3, [sp, #8]
   1d7cc:	str	ip, [sp]
   1d7d0:	mov	r3, #0
   1d7d4:	mov	r0, r5
   1d7d8:	bl	41cc <dta_ctx_init@plt>
   1d7dc:	mov	sl, r0
   1d7e0:	cmp	sl, #0
   1d7e4:	bne	1d528 <readstat_parse_dta+0x68>
   1d7e8:	mov	lr, r6
   1d7ec:	add	ip, r5, #240	; 0xf0
   1d7f0:	ldm	lr!, {r0, r1, r2, r3}
   1d7f4:	str	r7, [r5, #276]	; 0x114
   1d7f8:	str	r8, [r5, #272]	; 0x110
   1d7fc:	stmia	ip!, {r0, r1, r2, r3}
   1d800:	ldm	lr, {r0, r1, r2, r3}
   1d804:	ldr	lr, [r6, #48]	; 0x30
   1d808:	cmp	lr, #0
   1d80c:	stm	ip, {r0, r1, r2, r3}
   1d810:	ble	1dc00 <readstat_parse_dta+0x740>
   1d814:	mov	r2, lr
   1d818:	asr	r3, lr, #31
   1d81c:	strd	r2, [r5, #176]	; 0xb0
   1d820:	ldrd	r0, [r5, #152]	; 0x98
   1d824:	subs	r8, r0, r2
   1d828:	sbc	r9, r1, r3
   1d82c:	cmp	r8, #0
   1d830:	sbcs	r3, r9, #0
   1d834:	blt	1dbe8 <readstat_parse_dta+0x728>
   1d838:	ldr	r0, [r6, #44]	; 0x2c
   1d83c:	strd	r8, [r5, #168]	; 0xa8
   1d840:	cmp	r0, #0
   1d844:	ble	1d860 <readstat_parse_dta+0x3a0>
   1d848:	asr	r1, r0, #31
   1d84c:	cmp	r0, r8
   1d850:	sbcs	r3, r1, r9
   1d854:	movlt	r8, r0
   1d858:	movlt	r9, r1
   1d85c:	strdlt	r0, [r5, #168]	; 0xa8
   1d860:	cmp	r8, #1
   1d864:	sbcs	r3, r9, #0
   1d868:	blt	1f130 <readstat_parse_dta+0x1c70>
   1d86c:	ldrd	r0, [r5, #184]	; 0xb8
   1d870:	bl	25554 <__aeabi_l2d>
   1d874:	vmov	d8, r0, r1
   1d878:	mov	r0, r8
   1d87c:	mov	r1, r9
   1d880:	bl	25554 <__aeabi_l2d>
   1d884:	vmov	d7, r0, r1
   1d888:	vdiv.f64	d0, d8, d7
   1d88c:	ldr	r3, [r5, #268]	; 0x10c
   1d890:	cmp	r3, #0
   1d894:	beq	1db54 <readstat_parse_dta+0x694>
   1d898:	mov	r0, r7
   1d89c:	blx	r3
   1d8a0:	cmp	r0, #0
   1d8a4:	beq	1db54 <readstat_parse_dta+0x694>
   1d8a8:	mov	sl, #4
   1d8ac:	b	1d5d0 <readstat_parse_dta+0x110>
   1d8b0:	ldr	r6, [r5, #264]	; 0x108
   1d8b4:	cmp	r6, #0
   1d8b8:	beq	1d74c <readstat_parse_dta+0x28c>
   1d8bc:	ldr	ip, [pc, #1756]	; 1dfa0 <readstat_parse_dta+0xae0>
   1d8c0:	add	lr, r5, #288	; 0x120
   1d8c4:	add	ip, pc, ip
   1d8c8:	mov	sl, #15
   1d8cc:	ldm	ip!, {r0, r1, r2, r3}
   1d8d0:	str	r0, [r5, #288]	; 0x120
   1d8d4:	str	r1, [r5, #292]	; 0x124
   1d8d8:	str	r2, [r5, #296]	; 0x128
   1d8dc:	str	r3, [r5, #300]	; 0x12c
   1d8e0:	ldm	ip!, {r0, r1, r2, r3}
   1d8e4:	str	r0, [r5, #304]	; 0x130
   1d8e8:	str	r1, [r5, #308]	; 0x134
   1d8ec:	str	r2, [r5, #312]	; 0x138
   1d8f0:	str	r3, [r5, #316]	; 0x13c
   1d8f4:	mov	r0, lr
   1d8f8:	ldr	r1, [r5, #276]	; 0x114
   1d8fc:	blx	r6
   1d900:	b	1d5d0 <readstat_parse_dta+0x110>
   1d904:	ldr	r1, [pc, #1688]	; 1dfa4 <readstat_parse_dta+0xae4>
   1d908:	mov	r2, r0
   1d90c:	add	r1, pc, r1
   1d910:	mov	r0, fp
   1d914:	bl	44fc <strncmp@plt>
   1d918:	cmp	r0, #0
   1d91c:	bne	1d978 <readstat_parse_dta+0x4b8>
   1d920:	ldr	r3, [r5, #284]	; 0x11c
   1d924:	cmp	r3, #0
   1d928:	beq	1d93c <readstat_parse_dta+0x47c>
   1d92c:	ldrb	r3, [r5, #192]	; 0xc0
   1d930:	tst	r3, #4
   1d934:	beq	1d980 <readstat_parse_dta+0x4c0>
   1d938:	add	fp, sp, #128	; 0x80
   1d93c:	ldr	r3, [r5, #280]	; 0x118
   1d940:	mov	r1, #8
   1d944:	mov	r0, fp
   1d948:	ldr	r2, [r3, #20]
   1d94c:	ldr	r9, [r3, #12]
   1d950:	blx	r9
   1d954:	cmp	r0, #8
   1d958:	mov	r2, r0
   1d95c:	bne	1d654 <readstat_parse_dta+0x194>
   1d960:	ldr	r1, [pc, #1600]	; 1dfa8 <readstat_parse_dta+0xae8>
   1d964:	mov	r0, fp
   1d968:	add	r1, pc, r1
   1d96c:	bl	44fc <strncmp@plt>
   1d970:	cmp	r0, #0
   1d974:	beq	1d980 <readstat_parse_dta+0x4c0>
   1d978:	mov	sl, #5
   1d97c:	b	1d5d0 <readstat_parse_dta+0x110>
   1d980:	ldr	r2, [pc, #1572]	; 1dfac <readstat_parse_dta+0xaec>
   1d984:	ldr	r1, [pc, #1572]	; 1dfb0 <readstat_parse_dta+0xaf0>
   1d988:	add	r2, pc, r2
   1d98c:	str	r2, [sp]
   1d990:	mov	r3, #3
   1d994:	add	r2, sp, #72	; 0x48
   1d998:	add	r1, pc, r1
   1d99c:	mov	r0, r5
   1d9a0:	bl	1d3b8 <dta_read_chunk>
   1d9a4:	subs	sl, r0, #0
   1d9a8:	bne	1d5d0 <readstat_parse_dta+0x110>
   1d9ac:	ldrb	ip, [sp, #73]	; 0x49
   1d9b0:	ldr	r3, [pc, #1532]	; 1dfb4 <readstat_parse_dta+0xaf4>
   1d9b4:	ldr	r1, [pc, #1532]	; 1dfb8 <readstat_parse_dta+0xaf8>
   1d9b8:	str	ip, [sp, #20]
   1d9bc:	ldrb	ip, [sp, #74]	; 0x4a
   1d9c0:	add	r3, pc, r3
   1d9c4:	add	fp, sp, #88	; 0x58
   1d9c8:	str	r3, [sp]
   1d9cc:	mov	r2, fp
   1d9d0:	mov	r3, #3
   1d9d4:	add	r1, pc, r1
   1d9d8:	mov	r0, r5
   1d9dc:	ldrb	r9, [sp, #72]	; 0x48
   1d9e0:	str	ip, [sp, #28]
   1d9e4:	bl	1d3b8 <dta_read_chunk>
   1d9e8:	subs	sl, r0, #0
   1d9ec:	bne	1d5d0 <readstat_parse_dta+0x110>
   1d9f0:	ldr	r1, [pc, #1476]	; 1dfbc <readstat_parse_dta+0xafc>
   1d9f4:	mov	r2, #3
   1d9f8:	add	r1, pc, r1
   1d9fc:	mov	r0, fp
   1da00:	bl	44fc <strncmp@plt>
   1da04:	cmp	r0, #0
   1da08:	beq	1dd44 <readstat_parse_dta+0x884>
   1da0c:	ldr	r1, [pc, #1452]	; 1dfc0 <readstat_parse_dta+0xb00>
   1da10:	mov	r0, fp
   1da14:	mov	r2, #3
   1da18:	add	r1, pc, r1
   1da1c:	bl	44fc <strncmp@plt>
   1da20:	cmp	r0, #0
   1da24:	moveq	r3, #2
   1da28:	streq	r3, [sp, #24]
   1da2c:	bne	1d978 <readstat_parse_dta+0x4b8>
   1da30:	ldr	r2, [sp, #28]
   1da34:	sub	r9, r9, #48	; 0x30
   1da38:	mov	r3, #100	; 0x64
   1da3c:	sub	r2, r2, #48	; 0x30
   1da40:	mla	r2, r9, r3, r2
   1da44:	ldr	r3, [sp, #20]
   1da48:	ldr	r0, [sp, #24]
   1da4c:	sub	r1, r3, #48	; 0x30
   1da50:	mov	r3, #10
   1da54:	sub	r0, r0, #2
   1da58:	mla	r3, r1, r3, r2
   1da5c:	clz	r0, r0
   1da60:	lsr	r0, r0, #5
   1da64:	mov	r9, r0
   1da68:	uxtb	r3, r3
   1da6c:	mov	sl, r3
   1da70:	str	r0, [sp, #32]
   1da74:	str	r3, [sp, #28]
   1da78:	bl	3eb4 <machine_is_little_endian@plt>
   1da7c:	cmp	sl, #118	; 0x76
   1da80:	str	r0, [sp, #20]
   1da84:	bls	1dc98 <readstat_parse_dta+0x7d8>
   1da88:	ldr	r3, [pc, #1332]	; 1dfc4 <readstat_parse_dta+0xb04>
   1da8c:	ldr	r1, [pc, #1332]	; 1dfc8 <readstat_parse_dta+0xb08>
   1da90:	add	r3, pc, r3
   1da94:	add	fp, sp, #128	; 0x80
   1da98:	str	r3, [sp]
   1da9c:	mov	r2, fp
   1daa0:	mov	r3, #4
   1daa4:	add	r1, pc, r1
   1daa8:	mov	r0, r5
   1daac:	bl	1d3b8 <dta_read_chunk>
   1dab0:	subs	sl, r0, #0
   1dab4:	bne	1d5d0 <readstat_parse_dta+0x110>
   1dab8:	ldr	r2, [sp, #20]
   1dabc:	cmp	r9, r2
   1dac0:	ldreq	r9, [sp, #128]	; 0x80
   1dac4:	beq	1dad4 <readstat_parse_dta+0x614>
   1dac8:	ldr	r0, [sp, #128]	; 0x80
   1dacc:	bl	3d94 <byteswap4@plt>
   1dad0:	mov	r9, r0
   1dad4:	ldr	r2, [pc, #1264]	; 1dfcc <readstat_parse_dta+0xb0c>
   1dad8:	ldr	r1, [pc, #1264]	; 1dfd0 <readstat_parse_dta+0xb10>
   1dadc:	add	r2, pc, r2
   1dae0:	str	r2, [sp]
   1dae4:	mov	r3, #8
   1dae8:	mov	r2, fp
   1daec:	add	r1, pc, r1
   1daf0:	mov	r0, r5
   1daf4:	bl	1d3b8 <dta_read_chunk>
   1daf8:	subs	sl, r0, #0
   1dafc:	bne	1d5d0 <readstat_parse_dta+0x110>
   1db00:	ldr	r3, [sp, #32]
   1db04:	ldr	r2, [sp, #20]
   1db08:	cmp	r3, r2
   1db0c:	beq	1f138 <readstat_parse_dta+0x1c78>
   1db10:	ldrd	r0, [fp]
   1db14:	bl	3d7c <byteswap8@plt>
   1db18:	mov	r2, r0
   1db1c:	mov	r3, r1
   1db20:	ldr	r1, [sp, #28]
   1db24:	ldr	ip, [r6, #40]	; 0x28
   1db28:	str	r1, [sp, #4]
   1db2c:	ldr	r1, [sp, #24]
   1db30:	ldr	r0, [r6, #36]	; 0x24
   1db34:	str	r1, [sp]
   1db38:	str	r0, [sp, #8]
   1db3c:	mov	r1, r9
   1db40:	str	ip, [sp, #12]
   1db44:	mov	r0, r5
   1db48:	bl	41cc <dta_ctx_init@plt>
   1db4c:	mov	sl, r0
   1db50:	b	1d7e0 <readstat_parse_dta+0x320>
   1db54:	add	r3, sp, #88	; 0x58
   1db58:	mov	ip, r3
   1db5c:	str	r3, [sp, #20]
   1db60:	mov	r3, #0
   1db64:	mov	r1, r3
   1db68:	mov	r2, #44	; 0x2c
   1db6c:	mov	r0, fp
   1db70:	strb	r3, [sp, #67]	; 0x43
   1db74:	ldr	r8, [r5, #280]	; 0x118
   1db78:	strh	r3, [ip]
   1db7c:	bl	42a4 <memset@plt>
   1db80:	ldrb	r3, [r5, #192]	; 0xc0
   1db84:	mvn	r2, #0
   1db88:	str	r2, [sp, #160]	; 0xa0
   1db8c:	tst	r3, #4
   1db90:	ldreq	r2, [sp, #20]
   1db94:	ldreq	r3, [r5, #4]
   1db98:	strheq	r3, [r2]
   1db9c:	bne	1dc40 <readstat_parse_dta+0x780>
   1dba0:	ldr	r6, [sp, #20]
   1dba4:	ldrh	r0, [r6]
   1dba8:	add	r0, r0, #1
   1dbac:	bl	422c <readstat_malloc@plt>
   1dbb0:	subs	r9, r0, #0
   1dbb4:	beq	1dc38 <readstat_parse_dta+0x778>
   1dbb8:	ldr	r3, [r8, #12]
   1dbbc:	ldr	r2, [r8, #20]
   1dbc0:	ldrh	r1, [r6]
   1dbc4:	blx	r3
   1dbc8:	ldrh	r3, [r6]
   1dbcc:	cmp	r0, r3
   1dbd0:	mov	r2, r0
   1dbd4:	beq	1dd50 <readstat_parse_dta+0x890>
   1dbd8:	mov	sl, #2
   1dbdc:	mov	r0, r9
   1dbe0:	bl	3ec0 <free@plt>
   1dbe4:	b	1d5d0 <readstat_parse_dta+0x110>
   1dbe8:	mov	r2, #0
   1dbec:	mov	r3, #0
   1dbf0:	strd	r0, [r5, #176]	; 0xb0
   1dbf4:	strd	r2, [r5, #168]	; 0xa8
   1dbf8:	vldr	d0, [pc, #904]	; 1df88 <readstat_parse_dta+0xac8>
   1dbfc:	b	1d88c <readstat_parse_dta+0x3cc>
   1dc00:	ldrd	r2, [r5, #176]	; 0xb0
   1dc04:	b	1d820 <readstat_parse_dta+0x360>
   1dc08:	ldrh	r0, [fp, #4]
   1dc0c:	bl	3ea8 <byteswap2@plt>
   1dc10:	strh	r0, [fp, #4]
   1dc14:	ldrh	r0, [sp, #136]	; 0x88
   1dc18:	ldrh	r3, [sp, #134]	; 0x86
   1dc1c:	orr	r0, r3, r0, lsl #16
   1dc20:	bl	3d94 <byteswap4@plt>
   1dc24:	mov	r2, r0
   1dc28:	b	1d7a0 <readstat_parse_dta+0x2e0>
   1dc2c:	bl	422c <readstat_malloc@plt>
   1dc30:	subs	r6, r0, #0
   1dc34:	bne	1e5c0 <readstat_parse_dta+0x1100>
   1dc38:	mov	sl, #3
   1dc3c:	b	1d5d0 <readstat_parse_dta+0x110>
   1dc40:	ldr	r1, [pc, #908]	; 1dfd4 <readstat_parse_dta+0xb14>
   1dc44:	mov	r0, r5
   1dc48:	add	r1, pc, r1
   1dc4c:	bl	1d328 <dta_read_tag>
   1dc50:	subs	sl, r0, #0
   1dc54:	bne	1d5d0 <readstat_parse_dta+0x110>
   1dc58:	ldr	sl, [r5, #8]
   1dc5c:	cmp	sl, #2
   1dc60:	beq	1f0f0 <readstat_parse_dta+0x1c30>
   1dc64:	cmp	sl, #1
   1dc68:	bne	1dba0 <readstat_parse_dta+0x6e0>
   1dc6c:	ldr	r3, [r8, #12]
   1dc70:	ldr	r2, [r8, #20]
   1dc74:	mov	r1, sl
   1dc78:	add	r0, sp, #72	; 0x48
   1dc7c:	blx	r3
   1dc80:	cmp	r0, #1
   1dc84:	ldrbeq	r3, [sp, #72]	; 0x48
   1dc88:	ldreq	r2, [sp, #20]
   1dc8c:	strheq	r3, [r2]
   1dc90:	bne	1d654 <readstat_parse_dta+0x194>
   1dc94:	b	1dba0 <readstat_parse_dta+0x6e0>
   1dc98:	ldr	r3, [pc, #824]	; 1dfd8 <readstat_parse_dta+0xb18>
   1dc9c:	ldr	r1, [pc, #824]	; 1dfdc <readstat_parse_dta+0xb1c>
   1dca0:	add	r3, pc, r3
   1dca4:	add	fp, sp, #128	; 0x80
   1dca8:	str	r3, [sp]
   1dcac:	mov	r2, fp
   1dcb0:	mov	r3, #2
   1dcb4:	add	r1, pc, r1
   1dcb8:	mov	r0, r5
   1dcbc:	bl	1d3b8 <dta_read_chunk>
   1dcc0:	subs	sl, r0, #0
   1dcc4:	bne	1d5d0 <readstat_parse_dta+0x110>
   1dcc8:	ldr	r3, [sp, #32]
   1dccc:	ldr	r2, [sp, #20]
   1dcd0:	cmp	r3, r2
   1dcd4:	ldrheq	r9, [fp]
   1dcd8:	beq	1dce8 <readstat_parse_dta+0x828>
   1dcdc:	ldrh	r0, [fp]
   1dce0:	bl	3ea8 <byteswap2@plt>
   1dce4:	mov	r9, r0
   1dce8:	ldr	r3, [sp, #28]
   1dcec:	cmp	r3, #117	; 0x75
   1dcf0:	bhi	1dad4 <readstat_parse_dta+0x614>
   1dcf4:	ldr	r2, [pc, #740]	; 1dfe0 <readstat_parse_dta+0xb20>
   1dcf8:	ldr	r1, [pc, #740]	; 1dfe4 <readstat_parse_dta+0xb24>
   1dcfc:	add	r2, pc, r2
   1dd00:	str	r2, [sp]
   1dd04:	mov	r3, #4
   1dd08:	mov	r2, fp
   1dd0c:	add	r1, pc, r1
   1dd10:	mov	r0, r5
   1dd14:	bl	1d3b8 <dta_read_chunk>
   1dd18:	subs	sl, r0, #0
   1dd1c:	bne	1d5d0 <readstat_parse_dta+0x110>
   1dd20:	ldr	r3, [sp, #32]
   1dd24:	ldr	r2, [sp, #20]
   1dd28:	ldr	r0, [sp, #128]	; 0x80
   1dd2c:	cmp	r3, r2
   1dd30:	beq	1dd38 <readstat_parse_dta+0x878>
   1dd34:	bl	3d94 <byteswap4@plt>
   1dd38:	mov	r2, r0
   1dd3c:	mov	r3, #0
   1dd40:	b	1db20 <readstat_parse_dta+0x660>
   1dd44:	mov	r3, #1
   1dd48:	str	r3, [sp, #24]
   1dd4c:	b	1da30 <readstat_parse_dta+0x570>
   1dd50:	ldrb	r3, [r5, #192]	; 0xc0
   1dd54:	ands	r3, r3, #4
   1dd58:	movne	r3, #0
   1dd5c:	strne	r3, [sp, #24]
   1dd60:	bne	1dd84 <readstat_parse_dta+0x8c4>
   1dd64:	add	r1, r9, r0
   1dd68:	mov	r0, r9
   1dd6c:	ldrb	r1, [r1, #-1]
   1dd70:	strb	r3, [r9, r2]
   1dd74:	str	r1, [sp, #24]
   1dd78:	bl	41fc <strlen@plt>
   1dd7c:	ldr	r3, [sp, #20]
   1dd80:	strh	r0, [r3]
   1dd84:	ldr	r6, [sp, #20]
   1dd88:	ldrh	r0, [r6]
   1dd8c:	lsl	r0, r0, #2
   1dd90:	add	r0, r0, #1
   1dd94:	bl	422c <readstat_malloc@plt>
   1dd98:	cmp	r0, #0
   1dd9c:	str	r0, [r5]
   1dda0:	beq	1f0e8 <readstat_parse_dta+0x1c28>
   1dda4:	ldrh	r3, [r6]
   1dda8:	ldr	r1, [r5, #236]	; 0xec
   1ddac:	mov	r2, r9
   1ddb0:	str	r1, [sp]
   1ddb4:	lsl	r1, r3, #2
   1ddb8:	add	r1, r1, #1
   1ddbc:	bl	4238 <readstat_convert@plt>
   1ddc0:	subs	sl, r0, #0
   1ddc4:	bne	1dbdc <readstat_parse_dta+0x71c>
   1ddc8:	ldrb	r3, [r5, #192]	; 0xc0
   1ddcc:	tst	r3, #4
   1ddd0:	ldreq	r3, [r5, #16]
   1ddd4:	strbeq	r3, [sp, #67]	; 0x43
   1ddd8:	bne	1f140 <readstat_parse_dta+0x1c80>
   1dddc:	ldrb	r0, [sp, #67]	; 0x43
   1dde0:	cmp	r0, #0
   1dde4:	beq	1e108 <readstat_parse_dta+0xc48>
   1dde8:	bl	422c <readstat_malloc@plt>
   1ddec:	ldr	r3, [r8, #12]
   1ddf0:	ldr	r2, [r8, #20]
   1ddf4:	ldrb	r1, [sp, #67]	; 0x43
   1ddf8:	mov	r6, r0
   1ddfc:	blx	r3
   1de00:	ldrb	r3, [sp, #67]	; 0x43
   1de04:	cmp	r0, r3
   1de08:	beq	1e07c <readstat_parse_dta+0xbbc>
   1de0c:	mov	r0, r9
   1de10:	bl	3ec0 <free@plt>
   1de14:	cmp	r6, #0
   1de18:	movne	sl, #2
   1de1c:	beq	1d654 <readstat_parse_dta+0x194>
   1de20:	mov	r0, r6
   1de24:	bl	3ec0 <free@plt>
   1de28:	cmp	sl, #0
   1de2c:	bne	1d5d0 <readstat_parse_dta+0x110>
   1de30:	ldr	r1, [pc, #432]	; 1dfe8 <readstat_parse_dta+0xb28>
   1de34:	mov	r0, r5
   1de38:	add	r1, pc, r1
   1de3c:	bl	1d328 <dta_read_tag>
   1de40:	subs	sl, r0, #0
   1de44:	bne	1d5d0 <readstat_parse_dta+0x110>
   1de48:	ldr	r8, [r5, #240]	; 0xf0
   1de4c:	cmp	r8, #0
   1de50:	beq	1decc <readstat_parse_dta+0xa0c>
   1de54:	mov	r1, sl
   1de58:	mov	r2, #56	; 0x38
   1de5c:	mov	r0, fp
   1de60:	bl	42a4 <memset@plt>
   1de64:	ldr	r2, [r5, #144]	; 0x90
   1de68:	ldr	r9, [r5, #148]	; 0x94
   1de6c:	ldrb	r0, [sp, #180]	; 0xb4
   1de70:	mov	r1, r7
   1de74:	ldrd	r6, [r5, #168]	; 0xa8
   1de78:	ldr	r3, [r5, #12]
   1de7c:	ldr	lr, [r5, #232]	; 0xe8
   1de80:	ldr	ip, [r5]
   1de84:	strd	r6, [fp]
   1de88:	str	r3, [sp, #144]	; 0x90
   1de8c:	str	r3, [sp, #148]	; 0x94
   1de90:	bic	r0, r0, #1
   1de94:	asr	r3, r2, #31
   1de98:	mov	r6, r9
   1de9c:	asr	r7, r9, #31
   1dea0:	cmp	r2, #117	; 0x75
   1dea4:	orrgt	r0, r0, #1
   1dea8:	strb	r0, [sp, #180]	; 0xb4
   1deac:	str	lr, [sp, #164]	; 0xa4
   1deb0:	str	ip, [sp, #172]	; 0xac
   1deb4:	strd	r6, [sp, #136]	; 0x88
   1deb8:	strd	r2, [sp, #152]	; 0x98
   1debc:	mov	r0, fp
   1dec0:	blx	r8
   1dec4:	cmp	r0, #0
   1dec8:	bne	1d8a8 <readstat_parse_dta+0x3e8>
   1decc:	ldrb	r3, [r5, #192]	; 0xc0
   1ded0:	tst	r3, #4
   1ded4:	bne	1f190 <readstat_parse_dta+0x1cd0>
   1ded8:	ldr	r2, [r5, #148]	; 0x94
   1dedc:	ldr	r7, [r5, #24]
   1dee0:	cmp	r2, #0
   1dee4:	mul	r7, r7, r2
   1dee8:	beq	1e808 <readstat_parse_dta+0x1348>
   1deec:	mov	r0, r7
   1def0:	bl	422c <readstat_malloc@plt>
   1def4:	subs	r6, r0, #0
   1def8:	beq	1dc38 <readstat_parse_dta+0x778>
   1defc:	ldr	r2, [pc, #232]	; 1dfec <readstat_parse_dta+0xb2c>
   1df00:	ldr	r1, [pc, #232]	; 1dff0 <readstat_parse_dta+0xb30>
   1df04:	add	r2, pc, r2
   1df08:	str	r2, [sp]
   1df0c:	mov	r3, r7
   1df10:	mov	r2, r6
   1df14:	add	r1, pc, r1
   1df18:	mov	r0, r5
   1df1c:	bl	1d3b8 <dta_read_chunk>
   1df20:	subs	sl, r0, #0
   1df24:	beq	1e834 <readstat_parse_dta+0x1374>
   1df28:	mov	r0, r6
   1df2c:	bl	3ec0 <free@plt>
   1df30:	cmp	sl, #0
   1df34:	moveq	r6, sl
   1df38:	moveq	r7, r6
   1df3c:	bne	1d5d0 <readstat_parse_dta+0x110>
   1df40:	ldr	r0, [r5, #148]	; 0x94
   1df44:	lsl	ip, r6, #1
   1df48:	cmp	r6, r0
   1df4c:	mov	r3, r7
   1df50:	mov	r2, fp
   1df54:	mov	r1, r5
   1df58:	add	r6, r6, #1
   1df5c:	bge	1e134 <readstat_parse_dta+0xc74>
   1df60:	ldr	r0, [r5, #28]
   1df64:	ldrh	r0, [r0, ip]
   1df68:	bl	41e4 <dta_type_info@plt>
   1df6c:	cmp	r0, #0
   1df70:	bne	1e888 <readstat_parse_dta+0x13c8>
   1df74:	ldr	r3, [r5, #160]	; 0xa0
   1df78:	ldr	r2, [sp, #128]	; 0x80
   1df7c:	add	r3, r3, r2
   1df80:	str	r3, [r5, #160]	; 0xa0
   1df84:	b	1df40 <readstat_parse_dta+0xa80>
	...
   1df90:	.word	0x0000ab9c
   1df94:	.word	0x0000ab64
   1df98:	.word	0x0000aedc
   1df9c:	.word	0x0000ab90
   1dfa0:	.word	0x0000a888
   1dfa4:	.word	0x0000a868
   1dfa8:	.word	0x0000a818
   1dfac:	.word	0x0000ab94
   1dfb0:	.word	0x0000aa44
   1dfb4:	.word	0x0000a7d8
   1dfb8:	.word	0x0000a7b8
   1dfbc:	.word	0x0000a7b0
   1dfc0:	.word	0x0000a794
   1dfc4:	.word	0x0000a724
   1dfc8:	.word	0x0000a70c
   1dfcc:	.word	0x0000a6e4
   1dfd0:	.word	0x0000a6d0
   1dfd4:	.word	0x0000a580
   1dfd8:	.word	0x0000a514
   1dfdc:	.word	0x0000a4fc
   1dfe0:	.word	0x0000a4c4
   1dfe4:	.word	0x0000a4b0
   1dfe8:	.word	0x0000a3c0
   1dfec:	.word	0x0000a4f8
   1dff0:	.word	0x0000a4d4
   1dff4:	.word	0x0000a0d4
   1dff8:	.word	0x0000a144
   1dffc:	.word	0x0000a140
   1e000:	.word	0x00000868
   1e004:	.word	0x00009fdc
   1e008:	.word	0x00009fd8
   1e00c:	.word	0x00009fd4
   1e010:	.word	0x00009fd0
   1e014:	.word	0x00009fcc
   1e018:	.word	0x00009fc8
   1e01c:	.word	0x00009e50
   1e020:	.word	0x00009e08
   1e024:	.word	0x00009de8
   1e028:	.word	0x00009c9c
   1e02c:	.word	0x00009b18
   1e030:	.word	0x00009bec
   1e034:	.word	0x00009bd0
   1e038:	.word	0x000099c8
   1e03c:	.word	0x000099b4
   1e040:	.word	0x00009990
   1e044:	.word	0x0000997c
   1e048:	.word	0x0000997c
   1e04c:	.word	0x00009968
   1e050:	.word	0x00009970
   1e054:	.word	0x00009954
   1e058:	.word	0x00009970
   1e05c:	.word	0x00009954
   1e060:	.word	0x00009984
   1e064:	.word	0x00009970
   1e068:	.word	0x00009968
   1e06c:	.word	0x00007d01
   1e070:	.word	0x0001f401
   1e074:	.word	0x00009524
   1e078:	.word	0x00009500
   1e07c:	ldrb	r3, [r5, #192]	; 0xc0
   1e080:	tst	r3, #4
   1e084:	subeq	r0, r0, #1
   1e088:	strbeq	r0, [sp, #67]	; 0x43
   1e08c:	ldrb	r3, [r6]
   1e090:	cmp	r3, #0
   1e094:	beq	1e10c <readstat_parse_dta+0xc4c>
   1e098:	ldrb	r1, [sp, #67]	; 0x43
   1e09c:	ldr	r2, [sp, #24]
   1e0a0:	add	r3, r6, r1
   1e0a4:	cmp	r2, #0
   1e0a8:	ldrb	r0, [r3, #-1]
   1e0ac:	clz	r3, r0
   1e0b0:	lsr	r3, r3, #5
   1e0b4:	moveq	r3, #0
   1e0b8:	cmp	r3, #0
   1e0bc:	beq	1e0dc <readstat_parse_dta+0xc1c>
   1e0c0:	sub	r2, r1, #1
   1e0c4:	add	r0, r6, #1
   1e0c8:	mov	r1, r6
   1e0cc:	bl	3e9c <memmove@plt>
   1e0d0:	ldrb	r3, [sp, #24]
   1e0d4:	strb	r3, [r6]
   1e0d8:	ldrb	r1, [sp, #67]	; 0x43
   1e0dc:	ldr	r3, [r5, #276]	; 0x114
   1e0e0:	mov	r2, fp
   1e0e4:	str	r3, [sp]
   1e0e8:	mov	r0, r6
   1e0ec:	ldr	r3, [r5, #264]	; 0x108
   1e0f0:	bl	42ec <dta_parse_timestamp@plt>
   1e0f4:	subs	sl, r0, #0
   1e0f8:	beq	1e890 <readstat_parse_dta+0x13d0>
   1e0fc:	mov	r0, r9
   1e100:	bl	3ec0 <free@plt>
   1e104:	b	1de20 <readstat_parse_dta+0x960>
   1e108:	mov	r6, r0
   1e10c:	ldr	r1, [pc, #-288]	; 1dff4 <readstat_parse_dta+0xb34>
   1e110:	mov	r0, r5
   1e114:	add	r1, pc, r1
   1e118:	bl	1d328 <dta_read_tag>
   1e11c:	mov	sl, r0
   1e120:	mov	r0, r9
   1e124:	bl	3ec0 <free@plt>
   1e128:	cmp	r6, #0
   1e12c:	bne	1de20 <readstat_parse_dta+0x960>
   1e130:	b	1de28 <readstat_parse_dta+0x968>
   1e134:	cmp	r0, #0
   1e138:	ble	1e7f4 <readstat_parse_dta+0x1334>
   1e13c:	ldr	r3, [r5, #160]	; 0xa0
   1e140:	cmp	r3, #0
   1e144:	beq	1d978 <readstat_parse_dta+0x4b8>
   1e148:	ldr	r3, [r5, #248]	; 0xf8
   1e14c:	cmp	r3, #0
   1e150:	beq	1e2e4 <readstat_parse_dta+0xe24>
   1e154:	mov	r3, #0
   1e158:	str	r3, [sp, #24]
   1e15c:	mov	r7, r3
   1e160:	add	r3, sp, #72	; 0x48
   1e164:	str	r3, [sp, #28]
   1e168:	ldr	r3, [pc, #-376]	; 1dff8 <readstat_parse_dta+0xb38>
   1e16c:	add	r3, pc, r3
   1e170:	str	r3, [sp, #32]
   1e174:	ldr	r3, [pc, #-384]	; 1dffc <readstat_parse_dta+0xb3c>
   1e178:	add	r3, pc, r3
   1e17c:	str	r3, [sp, #36]	; 0x24
   1e180:	cmp	r7, r0
   1e184:	bge	1e2e4 <readstat_parse_dta+0xe24>
   1e188:	ldr	r1, [r5, #28]
   1e18c:	lsl	r2, r7, #1
   1e190:	ldr	r3, [sp, #20]
   1e194:	ldrh	r0, [r1, r2]
   1e198:	ldr	r2, [sp, #28]
   1e19c:	mov	r1, r5
   1e1a0:	bl	41e4 <dta_type_info@plt>
   1e1a4:	cmp	r0, #0
   1e1a8:	bne	1e888 <readstat_parse_dta+0x13c8>
   1e1ac:	ldr	r9, [sp, #88]	; 0x58
   1e1b0:	cmp	r9, #0
   1e1b4:	bne	1e2c8 <readstat_parse_dta+0xe08>
   1e1b8:	ldr	r8, [sp, #72]	; 0x48
   1e1bc:	add	r8, r8, #1
   1e1c0:	str	r8, [sp, #72]	; 0x48
   1e1c4:	ldr	r1, [pc, #-460]	; 1e000 <readstat_parse_dta+0xb40>
   1e1c8:	mov	r0, #1
   1e1cc:	ldr	sl, [r5, #228]	; 0xe4
   1e1d0:	bl	3d58 <calloc@plt>
   1e1d4:	ldr	r3, [r5, #76]	; 0x4c
   1e1d8:	ldr	r2, [r5, #36]	; 0x24
   1e1dc:	ldr	r1, [r5, #236]	; 0xec
   1e1e0:	ldr	ip, [sp, #24]
   1e1e4:	str	r1, [sp]
   1e1e8:	mla	r2, r3, r7, r2
   1e1ec:	mov	r1, #300	; 0x12c
   1e1f0:	mov	r6, r0
   1e1f4:	add	r0, r0, #8
   1e1f8:	str	r8, [r6, #1596]	; 0x63c
   1e1fc:	str	r9, [r6]
   1e200:	str	r7, [r6, #4]
   1e204:	str	ip, [r6, #2148]	; 0x864
   1e208:	bl	4238 <readstat_convert@plt>
   1e20c:	ldr	r3, [r5, #88]	; 0x58
   1e210:	ldr	r2, [r5, #68]	; 0x44
   1e214:	lsl	r8, r7, #2
   1e218:	mul	r1, r3, r7
   1e21c:	ldrb	r0, [r2, r1]
   1e220:	add	r2, r2, r1
   1e224:	cmp	r0, #0
   1e228:	beq	1e240 <readstat_parse_dta+0xd80>
   1e22c:	ldr	r1, [r5, #236]	; 0xec
   1e230:	add	r0, r6, #564	; 0x234
   1e234:	str	r1, [sp]
   1e238:	mov	r1, #1024	; 0x400
   1e23c:	bl	4238 <readstat_convert@plt>
   1e240:	ldr	r3, [r5, #80]	; 0x50
   1e244:	ldr	r0, [r5, #52]	; 0x34
   1e248:	mul	r1, r3, r7
   1e24c:	add	r2, r0, r1
   1e250:	ldrb	r1, [r0, r1]
   1e254:	cmp	r1, #0
   1e258:	bne	1e728 <readstat_parse_dta+0x1268>
   1e25c:	ldr	r0, [r5, #84]	; 0x54
   1e260:	ldr	r2, [r5, #60]	; 0x3c
   1e264:	str	r6, [sl, r8]
   1e268:	mul	r0, r0, r7
   1e26c:	ldr	r1, [r5, #228]	; 0xe4
   1e270:	ldr	r3, [r5, #276]	; 0x114
   1e274:	ldrb	ip, [r2, r0]
   1e278:	ldr	r1, [r1, r8]
   1e27c:	ldr	r6, [r5, #248]	; 0xf8
   1e280:	cmp	ip, #0
   1e284:	addne	r2, r2, r0
   1e288:	moveq	r2, #0
   1e28c:	mov	r0, r7
   1e290:	blx	r6
   1e294:	cmp	r0, #1
   1e298:	beq	1d8a8 <readstat_parse_dta+0x3e8>
   1e29c:	cmp	r0, #2
   1e2a0:	moveq	r2, #1
   1e2a4:	ldreq	r3, [r5, #228]	; 0xe4
   1e2a8:	ldrne	r3, [sp, #24]
   1e2ac:	add	r7, r7, #1
   1e2b0:	ldreq	r3, [r3, r8]
   1e2b4:	addne	r3, r3, #1
   1e2b8:	strne	r3, [sp, #24]
   1e2bc:	streq	r2, [r3, #2144]	; 0x860
   1e2c0:	ldr	r0, [r5, #148]	; 0x94
   1e2c4:	b	1e180 <readstat_parse_dta+0xcc0>
   1e2c8:	cmp	r9, #6
   1e2cc:	moveq	r9, r0
   1e2d0:	ldrne	r8, [sp, #72]	; 0x48
   1e2d4:	moveq	r8, r9
   1e2d8:	streq	r0, [sp, #88]	; 0x58
   1e2dc:	streq	r0, [sp, #72]	; 0x48
   1e2e0:	b	1e1c4 <readstat_parse_dta+0xd04>
   1e2e4:	ldr	r3, [r5, #92]	; 0x5c
   1e2e8:	ldr	r6, [r5, #280]	; 0x118
   1e2ec:	cmp	r3, #0
   1e2f0:	beq	1d684 <readstat_parse_dta+0x1c4>
   1e2f4:	ldrb	r3, [r5, #192]	; 0xc0
   1e2f8:	tst	r3, #4
   1e2fc:	beq	1e30c <readstat_parse_dta+0xe4c>
   1e300:	ldr	r1, [r5, #244]	; 0xf4
   1e304:	cmp	r1, #0
   1e308:	beq	1e770 <readstat_parse_dta+0x12b0>
   1e30c:	ldr	r1, [pc, #-784]	; 1e004 <readstat_parse_dta+0xb44>
   1e310:	mov	r0, r5
   1e314:	add	r1, pc, r1
   1e318:	bl	1d328 <dta_read_tag>
   1e31c:	subs	sl, r0, #0
   1e320:	bne	1d5d0 <readstat_parse_dta+0x110>
   1e324:	ldr	r3, [pc, #-804]	; 1e008 <readstat_parse_dta+0xb48>
   1e328:	mov	r8, sl
   1e32c:	add	r3, pc, r3
   1e330:	str	r3, [sp, #24]
   1e334:	ldr	r3, [pc, #-816]	; 1e00c <readstat_parse_dta+0xb4c>
   1e338:	add	r3, pc, r3
   1e33c:	str	r3, [sp, #28]
   1e340:	ldr	r3, [pc, #-824]	; 1e010 <readstat_parse_dta+0xb50>
   1e344:	add	r3, pc, r3
   1e348:	str	r3, [sp, #32]
   1e34c:	ldr	r3, [pc, #-832]	; 1e014 <readstat_parse_dta+0xb54>
   1e350:	add	r3, pc, r3
   1e354:	str	r3, [sp, #36]	; 0x24
   1e358:	ldr	r3, [pc, #-840]	; 1e018 <readstat_parse_dta+0xb58>
   1e35c:	add	r3, pc, r3
   1e360:	str	r3, [sp, #40]	; 0x28
   1e364:	ldrb	r3, [r5, #192]	; 0xc0
   1e368:	ldr	r2, [r6, #20]
   1e36c:	tst	r3, #4
   1e370:	ldr	r3, [r6, #12]
   1e374:	beq	1e474 <readstat_parse_dta+0xfb4>
   1e378:	mov	r1, #4
   1e37c:	mov	r0, fp
   1e380:	blx	r3
   1e384:	cmp	r0, #4
   1e388:	mov	r7, r0
   1e38c:	bne	1e488 <readstat_parse_dta+0xfc8>
   1e390:	mov	r2, r0
   1e394:	ldr	r1, [sp, #24]
   1e398:	mov	r0, fp
   1e39c:	bl	3fa4 <memcmp@plt>
   1e3a0:	cmp	r0, #0
   1e3a4:	beq	1d65c <readstat_parse_dta+0x19c>
   1e3a8:	mov	r2, r7
   1e3ac:	ldr	r1, [sp, #28]
   1e3b0:	mov	r0, fp
   1e3b4:	bl	3fa4 <memcmp@plt>
   1e3b8:	cmp	r0, #0
   1e3bc:	bne	1e46c <readstat_parse_dta+0xfac>
   1e3c0:	mov	r3, #1
   1e3c4:	strb	r3, [sp, #88]	; 0x58
   1e3c8:	ldr	sl, [r5, #92]	; 0x5c
   1e3cc:	ldr	r3, [r6, #12]
   1e3d0:	cmp	sl, #2
   1e3d4:	ldr	r2, [r6, #20]
   1e3d8:	beq	1e438 <readstat_parse_dta+0xf78>
   1e3dc:	mov	r1, #4
   1e3e0:	mov	r0, fp
   1e3e4:	blx	r3
   1e3e8:	cmp	r0, #4
   1e3ec:	bne	1e488 <readstat_parse_dta+0xfc8>
   1e3f0:	ldrb	r3, [r5, #192]	; 0xc0
   1e3f4:	tst	r3, #1
   1e3f8:	ldreq	r7, [sp, #128]	; 0x80
   1e3fc:	beq	1e40c <readstat_parse_dta+0xf4c>
   1e400:	ldr	r0, [sp, #128]	; 0x80
   1e404:	bl	3d94 <byteswap4@plt>
   1e408:	mov	r7, r0
   1e40c:	ldrb	r3, [sp, #88]	; 0x58
   1e410:	cmp	r3, #0
   1e414:	bne	1e490 <readstat_parse_dta+0xfd0>
   1e418:	cmp	r7, #0
   1e41c:	beq	1d674 <readstat_parse_dta+0x1b4>
   1e420:	mov	sl, #32
   1e424:	cmp	r8, #0
   1e428:	beq	1d5d0 <readstat_parse_dta+0x110>
   1e42c:	mov	r0, r8
   1e430:	bl	3ec0 <free@plt>
   1e434:	b	1d5d0 <readstat_parse_dta+0x110>
   1e438:	mov	r1, sl
   1e43c:	mov	r0, fp
   1e440:	blx	r3
   1e444:	cmp	r0, #2
   1e448:	bne	1e424 <readstat_parse_dta+0xf64>
   1e44c:	ldrb	r3, [r5, #192]	; 0xc0
   1e450:	tst	r3, #1
   1e454:	ldrheq	r7, [fp]
   1e458:	beq	1e40c <readstat_parse_dta+0xf4c>
   1e45c:	ldrh	r0, [fp]
   1e460:	bl	3ea8 <byteswap2@plt>
   1e464:	mov	r7, r0
   1e468:	b	1e40c <readstat_parse_dta+0xf4c>
   1e46c:	mov	sl, #5
   1e470:	b	1e424 <readstat_parse_dta+0xf64>
   1e474:	mov	r1, #1
   1e478:	ldr	r0, [sp, #20]
   1e47c:	blx	r3
   1e480:	cmp	r0, #1
   1e484:	beq	1e3c8 <readstat_parse_dta+0xf08>
   1e488:	mov	sl, #2
   1e48c:	b	1e424 <readstat_parse_dta+0xf64>
   1e490:	cmp	r7, #1048576	; 0x100000
   1e494:	cmpls	r3, #1
   1e498:	movne	r9, #1
   1e49c:	moveq	r9, #0
   1e4a0:	bne	1e420 <readstat_parse_dta+0xf60>
   1e4a4:	ldr	r3, [r5, #244]	; 0xf4
   1e4a8:	cmp	r3, #0
   1e4ac:	beq	1e4bc <readstat_parse_dta+0xffc>
   1e4b0:	ldr	r3, [r5, #96]	; 0x60
   1e4b4:	cmp	r7, r3, lsl #1
   1e4b8:	bcs	1e698 <readstat_parse_dta+0x11d8>
   1e4bc:	mov	r0, r7
   1e4c0:	ldr	r3, [r6, #8]
   1e4c4:	ldr	r2, [r6, #20]
   1e4c8:	mov	r1, #1
   1e4cc:	blx	r3
   1e4d0:	cmn	r0, #1
   1e4d4:	beq	1ea04 <readstat_parse_dta+0x1544>
   1e4d8:	ldr	r1, [sp, #40]	; 0x28
   1e4dc:	mov	r0, r5
   1e4e0:	bl	1d328 <dta_read_tag>
   1e4e4:	cmp	r0, #0
   1e4e8:	beq	1e364 <readstat_parse_dta+0xea4>
   1e4ec:	mov	sl, r0
   1e4f0:	b	1e424 <readstat_parse_dta+0xf64>
   1e4f4:	ldrd	r0, [r5, #152]	; 0x98
   1e4f8:	ldrd	r8, [r5, #176]	; 0xb0
   1e4fc:	ldr	fp, [sp, #24]
   1e500:	subs	r0, r0, r8
   1e504:	sbc	r1, r1, r9
   1e508:	cmp	r2, r0
   1e50c:	sbcs	r1, r3, r1
   1e510:	blt	1e9d8 <readstat_parse_dta+0x1518>
   1e514:	cmp	r6, #0
   1e518:	beq	1e524 <readstat_parse_dta+0x1064>
   1e51c:	mov	r0, r6
   1e520:	bl	3ec0 <free@plt>
   1e524:	ldr	r1, [pc, #-1296]	; 1e01c <readstat_parse_dta+0xb5c>
   1e528:	mov	r0, r5
   1e52c:	add	r1, pc, r1
   1e530:	bl	1d328 <dta_read_tag>
   1e534:	subs	sl, r0, #0
   1e538:	bne	1d5d0 <readstat_parse_dta+0x110>
   1e53c:	ldr	r8, [r5, #280]	; 0x118
   1e540:	ldr	r3, [r8, #8]
   1e544:	ldr	r2, [r8, #20]
   1e548:	mov	r1, #0
   1e54c:	ldr	r0, [r5, #136]	; 0x88
   1e550:	blx	r3
   1e554:	cmn	r0, #1
   1e558:	bne	1ea30 <readstat_parse_dta+0x1570>
   1e55c:	ldr	r3, [r5, #264]	; 0x108
   1e560:	cmp	r3, #0
   1e564:	beq	1d74c <readstat_parse_dta+0x28c>
   1e568:	ldrd	r2, [r5, #136]	; 0x88
   1e56c:	add	r6, r5, #288	; 0x120
   1e570:	mov	r0, r6
   1e574:	strd	r2, [sp]
   1e578:	ldr	r2, [pc, #-1376]	; 1e020 <readstat_parse_dta+0xb60>
   1e57c:	add	r2, pc, r2
   1e580:	b	1d734 <readstat_parse_dta+0x274>
   1e584:	ldr	r1, [pc, #-1384]	; 1e024 <readstat_parse_dta+0xb64>
   1e588:	mov	r0, r5
   1e58c:	add	r1, pc, r1
   1e590:	bl	1d328 <dta_read_tag>
   1e594:	subs	sl, r0, #0
   1e598:	bne	1d5d0 <readstat_parse_dta+0x110>
   1e59c:	mov	r0, r5
   1e5a0:	bl	1d2a8 <dta_update_progress>
   1e5a4:	subs	sl, r0, #0
   1e5a8:	bne	1d5d0 <readstat_parse_dta+0x110>
   1e5ac:	ldr	r0, [r5, #160]	; 0xa0
   1e5b0:	ldr	r7, [r5, #280]	; 0x118
   1e5b4:	cmp	r0, #0
   1e5b8:	moveq	r6, r0
   1e5bc:	bne	1dc2c <readstat_parse_dta+0x76c>
   1e5c0:	ldrd	r8, [r5, #176]	; 0xb0
   1e5c4:	orrs	r3, r8, r9
   1e5c8:	bne	1ea0c <readstat_parse_dta+0x154c>
   1e5cc:	mov	r8, #0
   1e5d0:	mov	r9, #0
   1e5d4:	str	fp, [sp, #24]
   1e5d8:	ldrd	r2, [r5, #168]	; 0xa8
   1e5dc:	mov	r0, r6
   1e5e0:	cmp	r8, r2
   1e5e4:	sbcs	r1, r9, r3
   1e5e8:	bge	1e4f4 <readstat_parse_dta+0x1034>
   1e5ec:	ldr	r3, [r7, #12]
   1e5f0:	ldr	r1, [r5, #160]	; 0xa0
   1e5f4:	ldr	r2, [r7, #20]
   1e5f8:	blx	r3
   1e5fc:	ldr	r3, [r5, #160]	; 0xa0
   1e600:	mov	r1, r5
   1e604:	cmp	r0, r3
   1e608:	mov	r0, r6
   1e60c:	bne	1e9c0 <readstat_parse_dta+0x1500>
   1e610:	bl	59a0 <dta_handle_row>
   1e614:	subs	sl, r0, #0
   1e618:	mov	r0, r5
   1e61c:	bne	1e9c4 <readstat_parse_dta+0x1504>
   1e620:	ldrd	r2, [r5, #184]	; 0xb8
   1e624:	adds	r8, r8, #1
   1e628:	adc	r9, r9, #0
   1e62c:	adds	sl, r2, #1
   1e630:	adc	fp, r3, #0
   1e634:	mov	r2, sl
   1e638:	mov	r3, fp
   1e63c:	strd	r2, [r5, #184]	; 0xb8
   1e640:	bl	1d2a8 <dta_update_progress>
   1e644:	subs	sl, r0, #0
   1e648:	beq	1e5d8 <readstat_parse_dta+0x1118>
   1e64c:	b	1e9c4 <readstat_parse_dta+0x1504>
   1e650:	ldr	r7, [r5, #280]	; 0x118
   1e654:	mov	r1, #0
   1e658:	ldr	r0, [r5, #128]	; 0x80
   1e65c:	ldr	r3, [r7, #8]
   1e660:	ldr	r2, [r7, #20]
   1e664:	blx	r3
   1e668:	cmn	r0, #1
   1e66c:	bne	1ee30 <readstat_parse_dta+0x1970>
   1e670:	ldr	r3, [r5, #264]	; 0x108
   1e674:	cmp	r3, #0
   1e678:	beq	1d74c <readstat_parse_dta+0x28c>
   1e67c:	ldrd	r2, [r5, #128]	; 0x80
   1e680:	add	r6, r5, #288	; 0x120
   1e684:	mov	r0, r6
   1e688:	strd	r2, [sp]
   1e68c:	ldr	r2, [pc, #-1644]	; 1e028 <readstat_parse_dta+0xb68>
   1e690:	add	r2, pc, r2
   1e694:	b	1d734 <readstat_parse_dta+0x274>
   1e698:	mov	r0, r8
   1e69c:	add	r1, r7, #1
   1e6a0:	bl	42e0 <readstat_realloc@plt>
   1e6a4:	subs	r8, r0, #0
   1e6a8:	beq	1dc38 <readstat_parse_dta+0x778>
   1e6ac:	strb	r9, [r8, r7]
   1e6b0:	mov	r1, r7
   1e6b4:	ldr	r3, [r6, #12]
   1e6b8:	ldr	r2, [r6, #20]
   1e6bc:	blx	r3
   1e6c0:	cmp	r7, r0
   1e6c4:	bne	1e488 <readstat_parse_dta+0xfc8>
   1e6c8:	mov	r2, #4
   1e6cc:	ldr	r1, [sp, #32]
   1e6d0:	mov	r0, r8
   1e6d4:	str	r9, [sp, #128]	; 0x80
   1e6d8:	bl	44fc <strncmp@plt>
   1e6dc:	cmp	r0, #0
   1e6e0:	bne	1e4d8 <readstat_parse_dta+0x1018>
   1e6e4:	ldr	r0, [r5, #96]	; 0x60
   1e6e8:	mov	r2, fp
   1e6ec:	add	r0, r8, r0
   1e6f0:	ldr	r1, [sp, #36]	; 0x24
   1e6f4:	bl	428c <__isoc99_sscanf@plt>
   1e6f8:	cmp	r0, #1
   1e6fc:	bne	1e4d8 <readstat_parse_dta+0x1018>
   1e700:	ldr	r1, [r5, #96]	; 0x60
   1e704:	ldr	r3, [r5, #244]	; 0xf4
   1e708:	ldr	r2, [r5, #276]	; 0x114
   1e70c:	add	r1, r8, r1, lsl #1
   1e710:	ldr	r0, [sp, #128]	; 0x80
   1e714:	blx	r3
   1e718:	cmp	r0, #0
   1e71c:	beq	1e4d8 <readstat_parse_dta+0x1018>
   1e720:	mov	sl, #4
   1e724:	b	1e424 <readstat_parse_dta+0xf64>
   1e728:	ldr	r1, [r5, #236]	; 0xec
   1e72c:	add	r9, r6, #308	; 0x134
   1e730:	str	r1, [sp]
   1e734:	mov	r0, r9
   1e738:	mov	r1, #256	; 0x100
   1e73c:	bl	4238 <readstat_convert@plt>
   1e740:	ldrb	r3, [r6, #308]	; 0x134
   1e744:	cmp	r3, #37	; 0x25
   1e748:	beq	1e7cc <readstat_parse_dta+0x130c>
   1e74c:	mov	r2, fp
   1e750:	ldr	r1, [sp, #32]
   1e754:	mov	r0, r9
   1e758:	bl	428c <__isoc99_sscanf@plt>
   1e75c:	cmp	r0, #1
   1e760:	bne	1e7b0 <readstat_parse_dta+0x12f0>
   1e764:	ldr	r3, [sp, #128]	; 0x80
   1e768:	str	r3, [r6, #2136]	; 0x858
   1e76c:	b	1e25c <readstat_parse_dta+0xd9c>
   1e770:	ldr	r3, [r6, #8]
   1e774:	ldr	r2, [r6, #20]
   1e778:	ldr	r0, [r5, #120]	; 0x78
   1e77c:	blx	r3
   1e780:	cmn	r0, #1
   1e784:	bne	1d684 <readstat_parse_dta+0x1c4>
   1e788:	ldr	r3, [r5, #264]	; 0x108
   1e78c:	cmp	r3, #0
   1e790:	beq	1d74c <readstat_parse_dta+0x28c>
   1e794:	ldrd	r2, [r5, #120]	; 0x78
   1e798:	add	r6, r5, #288	; 0x120
   1e79c:	mov	r0, r6
   1e7a0:	strd	r2, [sp]
   1e7a4:	ldr	r2, [pc, #-1920]	; 1e02c <readstat_parse_dta+0xb6c>
   1e7a8:	add	r2, pc, r2
   1e7ac:	b	1d734 <readstat_parse_dta+0x274>
   1e7b0:	mov	r0, r9
   1e7b4:	mov	r2, fp
   1e7b8:	ldr	r1, [sp, #36]	; 0x24
   1e7bc:	bl	428c <__isoc99_sscanf@plt>
   1e7c0:	cmp	r0, #1
   1e7c4:	bne	1e25c <readstat_parse_dta+0xd9c>
   1e7c8:	b	1e764 <readstat_parse_dta+0x12a4>
   1e7cc:	ldrb	r3, [r6, #309]	; 0x135
   1e7d0:	cmp	r3, #45	; 0x2d
   1e7d4:	moveq	r3, #1
   1e7d8:	streq	r3, [r6, #2132]	; 0x854
   1e7dc:	beq	1e74c <readstat_parse_dta+0x128c>
   1e7e0:	cmp	r3, #126	; 0x7e
   1e7e4:	moveq	r3, #2
   1e7e8:	movne	r3, #3
   1e7ec:	str	r3, [r6, #2132]	; 0x854
   1e7f0:	b	1e74c <readstat_parse_dta+0x128c>
   1e7f4:	ldrd	r2, [r5, #152]	; 0x98
   1e7f8:	cmp	r2, #1
   1e7fc:	sbcs	r3, r3, #0
   1e800:	bge	1e13c <readstat_parse_dta+0xc7c>
   1e804:	b	1e148 <readstat_parse_dta+0xc88>
   1e808:	ldr	r3, [pc, #-2016]	; 1e030 <readstat_parse_dta+0xb70>
   1e80c:	ldr	r1, [pc, #-2016]	; 1e034 <readstat_parse_dta+0xb74>
   1e810:	add	r3, pc, r3
   1e814:	str	r3, [sp]
   1e818:	add	r1, pc, r1
   1e81c:	mov	r3, r7
   1e820:	mov	r0, r5
   1e824:	bl	1d3b8 <dta_read_chunk>
   1e828:	subs	sl, r0, #0
   1e82c:	moveq	r6, sl
   1e830:	bne	1d5d0 <readstat_parse_dta+0x110>
   1e834:	ldr	r3, [r5, #24]
   1e838:	cmp	r3, #1
   1e83c:	moveq	r3, #0
   1e840:	ldreq	r2, [r5, #148]	; 0x94
   1e844:	beq	1e9a0 <readstat_parse_dta+0x14e0>
   1e848:	cmp	r3, #2
   1e84c:	beq	1e958 <readstat_parse_dta+0x1498>
   1e850:	ldr	r3, [pc, #-2080]	; 1e038 <readstat_parse_dta+0xb78>
   1e854:	ldr	r1, [pc, #-2080]	; 1e03c <readstat_parse_dta+0xb7c>
   1e858:	add	r3, pc, r3
   1e85c:	str	r3, [sp]
   1e860:	add	r1, pc, r1
   1e864:	mov	r0, r5
   1e868:	ldr	r3, [r5, #40]	; 0x28
   1e86c:	ldr	r2, [r5, #36]	; 0x24
   1e870:	bl	1d3b8 <dta_read_chunk>
   1e874:	subs	sl, r0, #0
   1e878:	beq	1e8a0 <readstat_parse_dta+0x13e0>
   1e87c:	cmp	r6, #0
   1e880:	bne	1df28 <readstat_parse_dta+0xa68>
   1e884:	b	1d5d0 <readstat_parse_dta+0x110>
   1e888:	mov	sl, r0
   1e88c:	b	1d5d0 <readstat_parse_dta+0x110>
   1e890:	mov	r0, fp
   1e894:	bl	3e54 <mktime@plt>
   1e898:	str	r0, [r5, #12]
   1e89c:	b	1e10c <readstat_parse_dta+0xc4c>
   1e8a0:	ldr	r3, [pc, #-2152]	; 1e040 <readstat_parse_dta+0xb80>
   1e8a4:	ldr	r1, [pc, #-2152]	; 1e044 <readstat_parse_dta+0xb84>
   1e8a8:	add	r3, pc, r3
   1e8ac:	str	r3, [sp]
   1e8b0:	add	r1, pc, r1
   1e8b4:	mov	r0, r5
   1e8b8:	ldr	r3, [r5, #48]	; 0x30
   1e8bc:	ldr	r2, [r5, #44]	; 0x2c
   1e8c0:	bl	1d3b8 <dta_read_chunk>
   1e8c4:	subs	sl, r0, #0
   1e8c8:	bne	1e87c <readstat_parse_dta+0x13bc>
   1e8cc:	ldr	r3, [pc, #-2188]	; 1e048 <readstat_parse_dta+0xb88>
   1e8d0:	ldr	r1, [pc, #-2188]	; 1e04c <readstat_parse_dta+0xb8c>
   1e8d4:	add	r3, pc, r3
   1e8d8:	str	r3, [sp]
   1e8dc:	add	r1, pc, r1
   1e8e0:	mov	r0, r5
   1e8e4:	ldr	r3, [r5, #56]	; 0x38
   1e8e8:	ldr	r2, [r5, #52]	; 0x34
   1e8ec:	bl	1d3b8 <dta_read_chunk>
   1e8f0:	subs	sl, r0, #0
   1e8f4:	bne	1e87c <readstat_parse_dta+0x13bc>
   1e8f8:	ldr	r3, [pc, #-2224]	; 1e050 <readstat_parse_dta+0xb90>
   1e8fc:	ldr	r1, [pc, #-2224]	; 1e054 <readstat_parse_dta+0xb94>
   1e900:	add	r3, pc, r3
   1e904:	str	r3, [sp]
   1e908:	add	r1, pc, r1
   1e90c:	mov	r0, r5
   1e910:	ldr	r3, [r5, #64]	; 0x40
   1e914:	ldr	r2, [r5, #60]	; 0x3c
   1e918:	bl	1d3b8 <dta_read_chunk>
   1e91c:	subs	sl, r0, #0
   1e920:	bne	1e87c <readstat_parse_dta+0x13bc>
   1e924:	ldr	r3, [pc, #-2260]	; 1e058 <readstat_parse_dta+0xb98>
   1e928:	ldr	r1, [pc, #-2260]	; 1e05c <readstat_parse_dta+0xb9c>
   1e92c:	add	r3, pc, r3
   1e930:	str	r3, [sp]
   1e934:	add	r1, pc, r1
   1e938:	mov	r0, r5
   1e93c:	ldr	r3, [r5, #72]	; 0x48
   1e940:	ldr	r2, [r5, #68]	; 0x44
   1e944:	bl	1d3b8 <dta_read_chunk>
   1e948:	cmp	r6, #0
   1e94c:	mov	sl, r0
   1e950:	bne	1df28 <readstat_parse_dta+0xa68>
   1e954:	b	1df30 <readstat_parse_dta+0xa70>
   1e958:	mov	r2, r7
   1e95c:	mov	r1, r6
   1e960:	ldr	r0, [r5, #28]
   1e964:	bl	3f20 <memcpy@plt>
   1e968:	ldrb	r3, [r5, #192]	; 0xc0
   1e96c:	tst	r3, #1
   1e970:	movne	r7, #0
   1e974:	beq	1e850 <readstat_parse_dta+0x1390>
   1e978:	ldr	r3, [r5, #148]	; 0x94
   1e97c:	lsl	r8, r7, #1
   1e980:	cmp	r7, r3
   1e984:	add	r7, r7, #1
   1e988:	bge	1e850 <readstat_parse_dta+0x1390>
   1e98c:	ldr	r9, [r5, #28]
   1e990:	ldrh	r0, [r9, r8]
   1e994:	bl	3ea8 <byteswap2@plt>
   1e998:	strh	r0, [r9, r8]
   1e99c:	b	1e978 <readstat_parse_dta+0x14b8>
   1e9a0:	cmp	r3, r2
   1e9a4:	lsl	r1, r3, #1
   1e9a8:	bge	1e850 <readstat_parse_dta+0x1390>
   1e9ac:	ldrb	ip, [r6, r3]
   1e9b0:	ldr	r0, [r5, #28]
   1e9b4:	add	r3, r3, #1
   1e9b8:	strh	ip, [r0, r1]
   1e9bc:	b	1e9a0 <readstat_parse_dta+0x14e0>
   1e9c0:	mov	sl, #2
   1e9c4:	cmp	r6, #0
   1e9c8:	beq	1d5d0 <readstat_parse_dta+0x110>
   1e9cc:	mov	r0, r6
   1e9d0:	bl	3ec0 <free@plt>
   1e9d4:	b	1d5d0 <readstat_parse_dta+0x110>
   1e9d8:	ldr	ip, [r5, #160]	; 0xa0
   1e9dc:	subs	r0, r0, r2
   1e9e0:	ldr	r3, [r7, #8]
   1e9e4:	mul	r0, ip, r0
   1e9e8:	ldr	r2, [r7, #20]
   1e9ec:	mov	r1, #1
   1e9f0:	blx	r3
   1e9f4:	cmn	r0, #1
   1e9f8:	bne	1e514 <readstat_parse_dta+0x1054>
   1e9fc:	mov	sl, #15
   1ea00:	b	1e9c4 <readstat_parse_dta+0x1504>
   1ea04:	mov	sl, #15
   1ea08:	b	1e424 <readstat_parse_dta+0xf64>
   1ea0c:	ldr	r1, [r5, #160]	; 0xa0
   1ea10:	ldr	r3, [r7, #8]
   1ea14:	ldr	r2, [r7, #20]
   1ea18:	mul	r0, r1, r8
   1ea1c:	mov	r1, #1
   1ea20:	blx	r3
   1ea24:	cmn	r0, #1
   1ea28:	bne	1e5cc <readstat_parse_dta+0x110c>
   1ea2c:	b	1e9fc <readstat_parse_dta+0x153c>
   1ea30:	ldr	r1, [pc, #-2520]	; 1e060 <readstat_parse_dta+0xba0>
   1ea34:	mov	r0, r5
   1ea38:	add	r1, pc, r1
   1ea3c:	bl	1d328 <dta_read_tag>
   1ea40:	subs	sl, r0, #0
   1ea44:	bne	1d5d0 <readstat_parse_dta+0x110>
   1ea48:	ldr	r3, [r5, #260]	; 0x104
   1ea4c:	cmp	r3, #0
   1ea50:	beq	1d5d0 <readstat_parse_dta+0x110>
   1ea54:	ldr	r3, [pc, #-2552]	; 1e064 <readstat_parse_dta+0xba4>
   1ea58:	ldr	r1, [r5, #100]	; 0x64
   1ea5c:	add	r3, pc, r3
   1ea60:	str	r3, [sp, #44]	; 0x2c
   1ea64:	ldr	r3, [pc, #-2564]	; 1e068 <readstat_parse_dta+0xba8>
   1ea68:	str	r4, [sp, #24]
   1ea6c:	add	r3, pc, r3
   1ea70:	mov	r4, sl
   1ea74:	str	r3, [sp, #48]	; 0x30
   1ea78:	add	r3, sp, #96	; 0x60
   1ea7c:	str	sl, [sp, #32]
   1ea80:	str	r3, [sp, #52]	; 0x34
   1ea84:	str	sl, [sp, #28]
   1ea88:	cmp	r1, #2
   1ea8c:	beq	1edf4 <readstat_parse_dta+0x1934>
   1ea90:	ldr	r1, [sp, #44]	; 0x2c
   1ea94:	mov	r0, r5
   1ea98:	bl	1d328 <dta_read_tag>
   1ea9c:	cmp	r0, #0
   1eaa0:	bne	1ec5c <readstat_parse_dta+0x179c>
   1eaa4:	ldr	r3, [r8, #12]
   1eaa8:	ldr	r2, [r8, #20]
   1eaac:	mov	r1, #4
   1eab0:	mov	r0, fp
   1eab4:	blx	r3
   1eab8:	cmp	r0, #3
   1eabc:	bls	1ec5c <readstat_parse_dta+0x179c>
   1eac0:	ldrb	r3, [r5, #192]	; 0xc0
   1eac4:	ldr	r6, [sp, #128]	; 0x80
   1eac8:	tst	r3, #1
   1eacc:	beq	1eadc <readstat_parse_dta+0x161c>
   1ead0:	mov	r0, r6
   1ead4:	bl	3d94 <byteswap4@plt>
   1ead8:	mov	r6, r0
   1eadc:	mov	r9, #0
   1eae0:	ldr	r3, [r8, #12]
   1eae4:	ldr	r2, [r8, #20]
   1eae8:	ldr	r1, [r5, #104]	; 0x68
   1eaec:	mov	r0, fp
   1eaf0:	blx	r3
   1eaf4:	ldr	r3, [r5, #104]	; 0x68
   1eaf8:	cmp	r0, r3
   1eafc:	bcc	1ec5c <readstat_parse_dta+0x179c>
   1eb00:	ldr	r3, [r8, #8]
   1eb04:	ldr	r2, [r8, #20]
   1eb08:	mov	r1, #1
   1eb0c:	ldr	r0, [r5, #108]	; 0x6c
   1eb10:	blx	r3
   1eb14:	cmn	r0, #1
   1eb18:	beq	1ec5c <readstat_parse_dta+0x179c>
   1eb1c:	mov	r0, r4
   1eb20:	mov	r1, r6
   1eb24:	bl	42e0 <readstat_realloc@plt>
   1eb28:	subs	r4, r0, #0
   1eb2c:	beq	1f058 <readstat_parse_dta+0x1b98>
   1eb30:	ldr	r3, [r8, #12]
   1eb34:	ldr	r2, [r8, #20]
   1eb38:	mov	r1, r6
   1eb3c:	blx	r3
   1eb40:	cmp	r6, r0
   1eb44:	bhi	1ec5c <readstat_parse_dta+0x179c>
   1eb48:	ldr	r1, [r5, #100]	; 0x64
   1eb4c:	cmp	r1, #2
   1eb50:	moveq	r6, #0
   1eb54:	moveq	sl, r6
   1eb58:	addeq	r7, sp, #72	; 0x48
   1eb5c:	beq	1eda0 <readstat_parse_dta+0x18e0>
   1eb60:	cmp	r6, #8
   1eb64:	bls	1ea88 <readstat_parse_dta+0x15c8>
   1eb68:	ldr	r1, [sp, #48]	; 0x30
   1eb6c:	mov	r0, r5
   1eb70:	bl	1d328 <dta_read_tag>
   1eb74:	cmp	r0, #0
   1eb78:	bne	1ec90 <readstat_parse_dta+0x17d0>
   1eb7c:	ldrb	r3, [r5, #192]	; 0xc0
   1eb80:	ldr	r9, [r4]
   1eb84:	ldr	r7, [r4, #4]
   1eb88:	tst	r3, #1
   1eb8c:	beq	1eba8 <readstat_parse_dta+0x16e8>
   1eb90:	mov	r0, r9
   1eb94:	bl	3d94 <byteswap4@plt>
   1eb98:	mov	r9, r0
   1eb9c:	mov	r0, r7
   1eba0:	bl	3d94 <byteswap4@plt>
   1eba4:	mov	r7, r0
   1eba8:	sub	r6, r6, #8
   1ebac:	cmp	r6, r7
   1ebb0:	bcc	1ec5c <readstat_parse_dta+0x179c>
   1ebb4:	sub	r6, r6, r7
   1ebb8:	cmp	r9, r6, lsr #3
   1ebbc:	bhi	1ec5c <readstat_parse_dta+0x179c>
   1ebc0:	ldr	r2, [pc, #-2908]	; 1e06c <readstat_parse_dta+0xbac>
   1ebc4:	lsl	r3, r7, #2
   1ebc8:	cmp	r7, r2
   1ebcc:	ldr	sl, [pc, #-2916]	; 1e070 <readstat_parse_dta+0xbb0>
   1ebd0:	addls	sl, r3, #1
   1ebd4:	add	r3, r9, #1
   1ebd8:	add	r2, r9, #2
   1ebdc:	lsl	r3, r3, #3
   1ebe0:	ldr	r0, [sp, #32]
   1ebe4:	mov	r1, sl
   1ebe8:	str	r3, [sp, #36]	; 0x24
   1ebec:	lsl	r9, r2, #2
   1ebf0:	bl	3ff8 <realloc@plt>
   1ebf4:	subs	r3, r0, #0
   1ebf8:	str	r3, [sp, #32]
   1ebfc:	beq	1f058 <readstat_parse_dta+0x1b98>
   1ec00:	ldrb	r3, [r5, #192]	; 0xc0
   1ec04:	add	r6, r4, #4
   1ec08:	sub	r2, r9, #4
   1ec0c:	tst	r3, #1
   1ec10:	beq	1ecb8 <readstat_parse_dta+0x17f8>
   1ec14:	mov	r3, r6
   1ec18:	add	r1, r4, r2
   1ec1c:	str	r6, [sp, #40]	; 0x28
   1ec20:	str	fp, [sp, #56]	; 0x38
   1ec24:	mov	r6, r5
   1ec28:	mov	fp, r8
   1ec2c:	mov	r5, r1
   1ec30:	mov	r8, r7
   1ec34:	mov	r7, r4
   1ec38:	mov	r4, r3
   1ec3c:	cmp	r4, r5
   1ec40:	beq	1eca0 <readstat_parse_dta+0x17e0>
   1ec44:	ldr	r0, [r4, #4]
   1ec48:	str	r2, [sp, #60]	; 0x3c
   1ec4c:	bl	3d94 <byteswap4@plt>
   1ec50:	ldr	r2, [sp, #60]	; 0x3c
   1ec54:	str	r0, [r4, #4]!
   1ec58:	b	1ec3c <readstat_parse_dta+0x177c>
   1ec5c:	mov	r3, r4
   1ec60:	ldr	sl, [sp, #28]
   1ec64:	ldr	r4, [sp, #24]
   1ec68:	cmp	r3, #0
   1ec6c:	beq	1ec78 <readstat_parse_dta+0x17b8>
   1ec70:	mov	r0, r3
   1ec74:	bl	3ec0 <free@plt>
   1ec78:	ldr	r3, [sp, #32]
   1ec7c:	cmp	r3, #0
   1ec80:	beq	1d5d0 <readstat_parse_dta+0x110>
   1ec84:	mov	r0, r3
   1ec88:	bl	3ec0 <free@plt>
   1ec8c:	b	1d5d0 <readstat_parse_dta+0x110>
   1ec90:	mov	r3, r4
   1ec94:	ldr	r4, [sp, #24]
   1ec98:	mov	sl, r0
   1ec9c:	b	1ec68 <readstat_parse_dta+0x17a8>
   1eca0:	mov	r5, r6
   1eca4:	mov	r4, r7
   1eca8:	ldr	r6, [sp, #40]	; 0x28
   1ecac:	mov	r7, r8
   1ecb0:	mov	r8, fp
   1ecb4:	ldr	fp, [sp, #56]	; 0x38
   1ecb8:	sub	r9, r9, #8
   1ecbc:	add	r3, r4, r2
   1ecc0:	str	r3, [sp, #40]	; 0x28
   1ecc4:	ldr	r3, [sp, #40]	; 0x28
   1ecc8:	mov	r1, r5
   1eccc:	cmp	r3, r6
   1ecd0:	ldr	r0, [sp, #20]
   1ecd4:	beq	1f078 <readstat_parse_dta+0x1bb8>
   1ecd8:	ldr	r3, [r6, #4]!
   1ecdc:	cmp	r7, r3
   1ece0:	add	r2, r9, r6
   1ece4:	bls	1f068 <readstat_parse_dta+0x1ba8>
   1ece8:	bl	58f0 <dta_interpret_int32_bytes>
   1ecec:	ldr	r2, [r6]
   1ecf0:	ldr	r0, [sp, #36]	; 0x24
   1ecf4:	sub	r3, r7, r2
   1ecf8:	ldr	r1, [r5, #236]	; 0xec
   1ecfc:	cmp	r3, #32000	; 0x7d00
   1ed00:	add	r2, r0, r2
   1ed04:	movcs	r3, #32000	; 0x7d00
   1ed08:	str	r1, [sp]
   1ed0c:	add	r2, r4, r2
   1ed10:	mov	r1, sl
   1ed14:	ldr	r0, [sp, #32]
   1ed18:	bl	4238 <readstat_convert@plt>
   1ed1c:	cmp	r0, #0
   1ed20:	bne	1ec90 <readstat_parse_dta+0x17d0>
   1ed24:	ldr	r3, [sp, #52]	; 0x34
   1ed28:	ldr	r2, [sp, #32]
   1ed2c:	ldm	r3, {r0, r1}
   1ed30:	ldr	r3, [r5, #276]	; 0x114
   1ed34:	str	r2, [sp, #8]
   1ed38:	str	r3, [sp, #12]
   1ed3c:	ldr	r3, [sp, #20]
   1ed40:	stm	sp, {r0, r1}
   1ed44:	mov	r0, fp
   1ed48:	ldm	r3, {r2, r3}
   1ed4c:	ldr	r1, [r5, #260]	; 0x104
   1ed50:	blx	r1
   1ed54:	cmp	r0, #0
   1ed58:	beq	1ecc4 <readstat_parse_dta+0x1804>
   1ed5c:	mov	r3, r4
   1ed60:	mov	r0, #4
   1ed64:	ldr	r4, [sp, #24]
   1ed68:	b	1ec98 <readstat_parse_dta+0x17d8>
   1ed6c:	add	r3, sp, #80	; 0x50
   1ed70:	ldr	r2, [r5, #276]	; 0x114
   1ed74:	ldm	r3, {r0, r1}
   1ed78:	ldr	r3, [sp, #20]
   1ed7c:	str	r2, [sp, #12]
   1ed80:	stm	sp, {r0, r1}
   1ed84:	str	r3, [sp, #8]
   1ed88:	mov	r0, fp
   1ed8c:	ldm	r7, {r2, r3}
   1ed90:	ldr	r1, [r5, #260]	; 0x104
   1ed94:	blx	r1
   1ed98:	cmp	r0, #0
   1ed9c:	bne	1ed5c <readstat_parse_dta+0x189c>
   1eda0:	cmp	r6, r9
   1eda4:	add	r2, r4, r6, lsl #3
   1eda8:	mov	r3, #8
   1edac:	mov	r1, #33	; 0x21
   1edb0:	ldr	r0, [sp, #20]
   1edb4:	beq	1f078 <readstat_parse_dta+0x1bb8>
   1edb8:	str	r6, [sp, #72]	; 0x48
   1edbc:	ldr	ip, [r5, #236]	; 0xec
   1edc0:	str	sl, [r7, #4]
   1edc4:	str	ip, [sp]
   1edc8:	mov	ip, #3
   1edcc:	str	sl, [r7, #12]
   1edd0:	str	ip, [sp, #80]	; 0x50
   1edd4:	bl	4238 <readstat_convert@plt>
   1edd8:	add	r6, r6, #1
   1eddc:	cmp	r0, #0
   1ede0:	bne	1ec90 <readstat_parse_dta+0x17d0>
   1ede4:	ldrb	r3, [sp, #88]	; 0x58
   1ede8:	cmp	r3, #0
   1edec:	beq	1eda0 <readstat_parse_dta+0x18e0>
   1edf0:	b	1ed6c <readstat_parse_dta+0x18ac>
   1edf4:	ldr	r3, [r8, #12]
   1edf8:	ldr	r2, [r8, #20]
   1edfc:	mov	r0, fp
   1ee00:	blx	r3
   1ee04:	cmp	r0, #1
   1ee08:	bls	1ec5c <readstat_parse_dta+0x179c>
   1ee0c:	ldrb	r3, [r5, #192]	; 0xc0
   1ee10:	ldrsh	r6, [fp]
   1ee14:	tst	r3, #1
   1ee18:	beq	1ee28 <readstat_parse_dta+0x1968>
   1ee1c:	uxth	r0, r6
   1ee20:	bl	3ea8 <byteswap2@plt>
   1ee24:	mov	r6, r0
   1ee28:	lsr	r9, r6, #3
   1ee2c:	b	1eae0 <readstat_parse_dta+0x1620>
   1ee30:	ldr	r1, [pc, #-3524]	; 1e074 <readstat_parse_dta+0xbb4>
   1ee34:	mov	r0, r5
   1ee38:	add	r1, pc, r1
   1ee3c:	bl	1d328 <dta_read_tag>
   1ee40:	subs	sl, r0, #0
   1ee44:	bne	1d5d0 <readstat_parse_dta+0x110>
   1ee48:	mov	r3, #100	; 0x64
   1ee4c:	str	r3, [r5, #224]	; 0xe0
   1ee50:	mov	r0, #400	; 0x190
   1ee54:	bl	422c <readstat_malloc@plt>
   1ee58:	ldr	r3, [pc, #-3560]	; 1e078 <readstat_parse_dta+0xbb8>
   1ee5c:	add	r8, sp, #72	; 0x48
   1ee60:	mov	r9, #3
   1ee64:	add	r3, pc, r3
   1ee68:	str	r3, [sp, #24]
   1ee6c:	str	sl, [sp, #28]
   1ee70:	str	r0, [r5, #216]	; 0xd8
   1ee74:	ldr	r3, [r7, #12]
   1ee78:	ldr	r2, [r7, #20]
   1ee7c:	mov	r1, r9
   1ee80:	mov	r0, r8
   1ee84:	blx	r3
   1ee88:	cmp	r0, #3
   1ee8c:	mov	r6, r0
   1ee90:	bne	1d654 <readstat_parse_dta+0x194>
   1ee94:	mov	r2, r9
   1ee98:	ldr	r1, [sp, #24]
   1ee9c:	mov	r0, r8
   1eea0:	bl	3fa4 <memcmp@plt>
   1eea4:	cmp	r0, #0
   1eea8:	bne	1f080 <readstat_parse_dta+0x1bc0>
   1eeac:	ldr	r3, [r5, #116]	; 0x74
   1eeb0:	cmp	r3, #4
   1eeb4:	ldr	r3, [r5, #280]	; 0x118
   1eeb8:	bhi	1efd4 <readstat_parse_dta+0x1b14>
   1eebc:	mov	r1, #13
   1eec0:	ldr	r0, [sp, #20]
   1eec4:	ldr	r6, [r3, #12]
   1eec8:	ldr	r2, [r3, #20]
   1eecc:	blx	r6
   1eed0:	cmp	r0, #13
   1eed4:	bne	1d654 <readstat_parse_dta+0x194>
   1eed8:	ldrb	r3, [r5, #192]	; 0xc0
   1eedc:	ldr	r0, [sp, #88]	; 0x58
   1eee0:	tst	r3, #1
   1eee4:	uxtheq	r0, r0
   1eee8:	beq	1eef8 <readstat_parse_dta+0x1a38>
   1eeec:	bl	3d94 <byteswap4@plt>
   1eef0:	ldrb	r3, [r5, #192]	; 0xc0
   1eef4:	uxth	r0, r0
   1eef8:	strh	r0, [fp]
   1eefc:	tst	r3, #1
   1ef00:	ldr	r0, [sp, #92]	; 0x5c
   1ef04:	beq	1ef0c <readstat_parse_dta+0x1a4c>
   1ef08:	bl	3d94 <byteswap4@plt>
   1ef0c:	ldrb	r3, [sp, #96]	; 0x60
   1ef10:	ldr	r2, [sp, #28]
   1ef14:	str	r0, [fp, #8]
   1ef18:	strb	r3, [sp, #144]	; 0x90
   1ef1c:	ldrb	r3, [r5, #192]	; 0xc0
   1ef20:	str	r2, [fp, #12]
   1ef24:	tst	r3, #1
   1ef28:	bne	1f0b8 <readstat_parse_dta+0x1bf8>
   1ef2c:	ldrb	r0, [sp, #100]	; 0x64
   1ef30:	ldr	r3, [sp, #96]	; 0x60
   1ef34:	lsl	r0, r0, #24
   1ef38:	orr	r0, r0, r3, lsr #8
   1ef3c:	ldrb	r3, [sp, #144]	; 0x90
   1ef40:	str	r0, [sp, #148]	; 0x94
   1ef44:	cmp	r3, #130	; 0x82
   1ef48:	bne	1ee74 <readstat_parse_dta+0x19b4>
   1ef4c:	ldr	r1, [r5, #220]	; 0xdc
   1ef50:	ldr	r3, [r5, #224]	; 0xe0
   1ef54:	cmp	r1, r3
   1ef58:	beq	1f21c <readstat_parse_dta+0x1d5c>
   1ef5c:	ldr	sl, [sp, #148]	; 0x94
   1ef60:	add	r0, sl, #32
   1ef64:	bl	422c <readstat_malloc@plt>
   1ef68:	subs	r6, r0, #0
   1ef6c:	beq	1dc38 <readstat_parse_dta+0x778>
   1ef70:	mov	ip, fp
   1ef74:	ldm	ip!, {r0, r1, r2, r3}
   1ef78:	str	r0, [r6]
   1ef7c:	str	r1, [r6, #4]
   1ef80:	str	r2, [r6, #8]
   1ef84:	str	r3, [r6, #12]
   1ef88:	ldm	ip!, {r0, r1, r2, r3}
   1ef8c:	str	r1, [r6, #20]
   1ef90:	str	r3, [r6, #28]
   1ef94:	str	r0, [r6, #16]
   1ef98:	str	r2, [r6, #24]
   1ef9c:	ldr	r2, [r5, #220]	; 0xdc
   1efa0:	ldr	r0, [r5, #216]	; 0xd8
   1efa4:	add	r3, r2, #1
   1efa8:	str	r3, [r5, #220]	; 0xdc
   1efac:	mov	r1, sl
   1efb0:	ldr	r3, [r7, #12]
   1efb4:	str	r6, [r0, r2, lsl #2]
   1efb8:	add	r0, r6, #24
   1efbc:	ldr	r2, [r7, #20]
   1efc0:	blx	r3
   1efc4:	ldr	r3, [r6, #20]
   1efc8:	cmp	r0, r3
   1efcc:	beq	1ee74 <readstat_parse_dta+0x19b4>
   1efd0:	b	1d654 <readstat_parse_dta+0x194>
   1efd4:	mov	r1, #17
   1efd8:	ldr	r0, [sp, #20]
   1efdc:	ldr	r6, [r3, #12]
   1efe0:	ldr	r2, [r3, #20]
   1efe4:	blx	r6
   1efe8:	cmp	r0, #17
   1efec:	bne	1d654 <readstat_parse_dta+0x194>
   1eff0:	ldrb	r3, [r5, #192]	; 0xc0
   1eff4:	ldr	r0, [sp, #88]	; 0x58
   1eff8:	tst	r3, #1
   1effc:	uxtheq	r0, r0
   1f000:	beq	1f010 <readstat_parse_dta+0x1b50>
   1f004:	bl	3d94 <byteswap4@plt>
   1f008:	ldrb	r3, [r5, #192]	; 0xc0
   1f00c:	uxth	r0, r0
   1f010:	strh	r0, [fp]
   1f014:	tst	r3, #1
   1f018:	ldr	r0, [sp, #92]	; 0x5c
   1f01c:	ldr	r1, [sp, #96]	; 0x60
   1f020:	beq	1f028 <readstat_parse_dta+0x1b68>
   1f024:	bl	3d7c <byteswap8@plt>
   1f028:	ldrb	r3, [sp, #100]	; 0x64
   1f02c:	str	r0, [fp, #8]
   1f030:	str	r1, [fp, #12]
   1f034:	strb	r3, [sp, #144]	; 0x90
   1f038:	ldrb	r3, [r5, #192]	; 0xc0
   1f03c:	tst	r3, #1
   1f040:	bne	1f0d0 <readstat_parse_dta+0x1c10>
   1f044:	ldrb	r0, [sp, #104]	; 0x68
   1f048:	ldr	r3, [sp, #100]	; 0x64
   1f04c:	lsl	r0, r0, #24
   1f050:	orr	r0, r0, r3, lsr #8
   1f054:	b	1ef3c <readstat_parse_dta+0x1a7c>
   1f058:	mov	r3, r4
   1f05c:	mov	r0, #3
   1f060:	ldr	r4, [sp, #24]
   1f064:	b	1ec98 <readstat_parse_dta+0x17d8>
   1f068:	mov	r3, r4
   1f06c:	mov	r0, #5
   1f070:	ldr	r4, [sp, #24]
   1f074:	b	1ec98 <readstat_parse_dta+0x17d8>
   1f078:	ldr	r1, [r5, #100]	; 0x64
   1f07c:	b	1ea88 <readstat_parse_dta+0x15c8>
   1f080:	ldr	r1, [pc, #448]	; 1f248 <readstat_parse_dta+0x1d88>
   1f084:	mov	r2, r6
   1f088:	mov	r0, r8
   1f08c:	add	r1, pc, r1
   1f090:	bl	3fa4 <memcmp@plt>
   1f094:	cmp	r0, #0
   1f098:	bne	1d978 <readstat_parse_dta+0x4b8>
   1f09c:	ldr	r1, [pc, #424]	; 1f24c <readstat_parse_dta+0x1d8c>
   1f0a0:	mov	r0, r5
   1f0a4:	add	r1, pc, r1
   1f0a8:	bl	1d328 <dta_read_tag>
   1f0ac:	subs	sl, r0, #0
   1f0b0:	beq	1d6e4 <readstat_parse_dta+0x224>
   1f0b4:	b	1d5d0 <readstat_parse_dta+0x110>
   1f0b8:	ldrb	r3, [sp, #100]	; 0x64
   1f0bc:	ldr	r0, [sp, #96]	; 0x60
   1f0c0:	lsl	r3, r3, #24
   1f0c4:	orr	r0, r3, r0, lsr #8
   1f0c8:	bl	3d94 <byteswap4@plt>
   1f0cc:	b	1ef3c <readstat_parse_dta+0x1a7c>
   1f0d0:	ldrb	r3, [sp, #104]	; 0x68
   1f0d4:	ldr	r0, [sp, #100]	; 0x64
   1f0d8:	lsl	r3, r3, #24
   1f0dc:	orr	r0, r3, r0, lsr #8
   1f0e0:	bl	3d94 <byteswap4@plt>
   1f0e4:	b	1ef3c <readstat_parse_dta+0x1a7c>
   1f0e8:	mov	sl, #3
   1f0ec:	b	1dbdc <readstat_parse_dta+0x71c>
   1f0f0:	ldr	r3, [r8, #12]
   1f0f4:	ldr	r2, [r8, #20]
   1f0f8:	mov	r1, sl
   1f0fc:	ldr	r0, [sp, #20]
   1f100:	blx	r3
   1f104:	cmp	r0, #2
   1f108:	bne	1d5d0 <readstat_parse_dta+0x110>
   1f10c:	ldrb	r3, [r5, #192]	; 0xc0
   1f110:	tst	r3, #1
   1f114:	ldr	r3, [sp, #20]
   1f118:	ldrh	r0, [r3]
   1f11c:	beq	1f124 <readstat_parse_dta+0x1c64>
   1f120:	bl	3ea8 <byteswap2@plt>
   1f124:	ldr	r3, [sp, #20]
   1f128:	strh	r0, [r3]
   1f12c:	b	1dba0 <readstat_parse_dta+0x6e0>
   1f130:	vldr	d0, [pc, #264]	; 1f240 <readstat_parse_dta+0x1d80>
   1f134:	b	1d88c <readstat_parse_dta+0x3cc>
   1f138:	ldm	fp, {r2, r3}
   1f13c:	b	1db20 <readstat_parse_dta+0x660>
   1f140:	ldr	r1, [pc, #264]	; 1f250 <readstat_parse_dta+0x1d90>
   1f144:	mov	r0, r5
   1f148:	add	r1, pc, r1
   1f14c:	bl	1d328 <dta_read_tag>
   1f150:	subs	sl, r0, #0
   1f154:	bne	1dbdc <readstat_parse_dta+0x71c>
   1f158:	ldr	r1, [pc, #244]	; 1f254 <readstat_parse_dta+0x1d94>
   1f15c:	mov	r0, r5
   1f160:	add	r1, pc, r1
   1f164:	bl	1d328 <dta_read_tag>
   1f168:	subs	sl, r0, #0
   1f16c:	bne	1dbdc <readstat_parse_dta+0x71c>
   1f170:	ldr	r3, [r8, #12]
   1f174:	ldr	r2, [r8, #20]
   1f178:	mov	r1, #1
   1f17c:	add	r0, sp, #67	; 0x43
   1f180:	blx	r3
   1f184:	cmp	r0, #1
   1f188:	bne	1dbd8 <readstat_parse_dta+0x718>
   1f18c:	b	1dddc <readstat_parse_dta+0x91c>
   1f190:	ldr	r2, [pc, #192]	; 1f258 <readstat_parse_dta+0x1d98>
   1f194:	ldr	r1, [pc, #192]	; 1f25c <readstat_parse_dta+0x1d9c>
   1f198:	add	r2, pc, r2
   1f19c:	str	r2, [sp]
   1f1a0:	mov	r3, #112	; 0x70
   1f1a4:	mov	r2, fp
   1f1a8:	add	r1, pc, r1
   1f1ac:	mov	r0, r5
   1f1b0:	bl	1d3b8 <dta_read_chunk>
   1f1b4:	cmp	r0, #0
   1f1b8:	bne	1f208 <readstat_parse_dta+0x1d48>
   1f1bc:	ldrb	r3, [r5, #192]	; 0xc0
   1f1c0:	ldrd	r0, [fp, #72]	; 0x48
   1f1c4:	tst	r3, #1
   1f1c8:	beq	1f1d4 <readstat_parse_dta+0x1d14>
   1f1cc:	bl	3d7c <byteswap8@plt>
   1f1d0:	ldrb	r3, [r5, #192]	; 0xc0
   1f1d4:	strd	r0, [r5, #120]	; 0x78
   1f1d8:	tst	r3, #1
   1f1dc:	ldrd	r0, [sp, #208]	; 0xd0
   1f1e0:	beq	1f1ec <readstat_parse_dta+0x1d2c>
   1f1e4:	bl	3d7c <byteswap8@plt>
   1f1e8:	ldrb	r3, [r5, #192]	; 0xc0
   1f1ec:	strd	r0, [r5, #128]	; 0x80
   1f1f0:	tst	r3, #1
   1f1f4:	ldrd	r0, [sp, #216]	; 0xd8
   1f1f8:	beq	1f200 <readstat_parse_dta+0x1d40>
   1f1fc:	bl	3d7c <byteswap8@plt>
   1f200:	strd	r0, [r5, #136]	; 0x88
   1f204:	b	1ded8 <readstat_parse_dta+0xa18>
   1f208:	ldr	r3, [r4, #4]
   1f20c:	ldr	r0, [r4, #20]
   1f210:	blx	r3
   1f214:	mov	sl, #2
   1f218:	b	1d53c <readstat_parse_dta+0x7c>
   1f21c:	lsl	r3, r1, #1
   1f220:	str	r3, [r5, #224]	; 0xe0
   1f224:	lsl	r1, r1, #3
   1f228:	ldr	r0, [r5, #216]	; 0xd8
   1f22c:	bl	42e0 <readstat_realloc@plt>
   1f230:	cmp	r0, #0
   1f234:	str	r0, [r5, #216]	; 0xd8
   1f238:	bne	1ef5c <readstat_parse_dta+0x1a9c>
   1f23c:	b	1dc38 <readstat_parse_dta+0x778>
	...
   1f248:	.word	0x000092dc
   1f24c:	.word	0x000092c8
   1f250:	.word	0x00009088
   1f254:	.word	0x0000907c
   1f258:	.word	0x00009074
   1f25c:	.word	0x0000905c

0001f260 <dta_113_write_int8>:
   1f260:	cmp	r2, #100	; 0x64
   1f264:	strble	r2, [r0]
   1f268:	movle	r0, #0
   1f26c:	movgt	r0, #20
   1f270:	bx	lr

0001f274 <dta_old_write_int8>:
   1f274:	cmp	r2, #127	; 0x7f
   1f278:	strbne	r2, [r0]
   1f27c:	movne	r0, #0
   1f280:	moveq	r0, #20
   1f284:	bx	lr

0001f288 <dta_113_write_int16>:
   1f288:	ldr	r3, [pc, #16]	; 1f2a0 <dta_113_write_int16+0x18>
   1f28c:	cmp	r2, r3
   1f290:	strhle	r2, [r0]
   1f294:	movle	r0, #0
   1f298:	movgt	r0, #20
   1f29c:	bx	lr
   1f2a0:	.word	0x00007fe4

0001f2a4 <dta_old_write_int16>:
   1f2a4:	ldr	r3, [pc, #16]	; 1f2bc <dta_old_write_int16+0x18>
   1f2a8:	cmp	r2, r3
   1f2ac:	strhne	r2, [r0]
   1f2b0:	movne	r0, #0
   1f2b4:	moveq	r0, #20
   1f2b8:	bx	lr
   1f2bc:	.word	0x00007fff

0001f2c0 <dta_113_write_int32>:
   1f2c0:	cmn	r2, #-2147483620	; 0x8000001c
   1f2c4:	strle	r2, [r0]
   1f2c8:	movle	r0, #0
   1f2cc:	movgt	r0, #20
   1f2d0:	bx	lr

0001f2d4 <dta_old_write_int32>:
   1f2d4:	cmn	r2, #-2147483647	; 0x80000001
   1f2d8:	strne	r2, [r0]
   1f2dc:	movne	r0, #0
   1f2e0:	moveq	r0, #20
   1f2e4:	bx	lr

0001f2e8 <dta_117_write_string_ref>:
   1f2e8:	cmp	r2, #0
   1f2ec:	mov	r3, r0
   1f2f0:	ldrne	r1, [r2, #8]
   1f2f4:	ldrne	r2, [r2]
   1f2f8:	movne	r0, #0
   1f2fc:	strne	r2, [r3]
   1f300:	strne	r1, [r3, #4]
   1f304:	moveq	r0, #34	; 0x22
   1f308:	bx	lr

0001f30c <dta_module_ctx_free>:
   1f30c:	b	3e78 <dta_ctx_free@plt>

0001f310 <dta_write_missing_string>:
   1f310:	ldr	r2, [r1, #1596]	; 0x63c
   1f314:	push	{r4, lr}
   1f318:	mov	r1, #0
   1f31c:	bl	42a4 <memset@plt>
   1f320:	mov	r0, #0
   1f324:	pop	{r4, pc}

0001f328 <dta_emit_header_data_label>:
   1f328:	ldrb	r3, [r1, #192]	; 0xc0
   1f32c:	push	{r4, r5, r6, r7, lr}
   1f330:	mov	r4, r1
   1f334:	tst	r3, #4
   1f338:	sub	sp, sp, #12
   1f33c:	mov	r6, r0
   1f340:	bne	1f384 <dta_emit_header_data_label+0x5c>
   1f344:	ldr	r5, [r4, #8]
   1f348:	cmp	r5, #0
   1f34c:	beq	1f3c8 <dta_emit_header_data_label+0xa0>
   1f350:	cmp	r5, #1
   1f354:	add	r7, r6, #88	; 0x58
   1f358:	beq	1f434 <dta_emit_header_data_label+0x10c>
   1f35c:	cmp	r5, #2
   1f360:	beq	1f45c <dta_emit_header_data_label+0x134>
   1f364:	mov	r1, r7
   1f368:	mov	r0, r6
   1f36c:	bl	4154 <readstat_write_string@plt>
   1f370:	subs	r5, r0, #0
   1f374:	beq	1f3a4 <dta_emit_header_data_label+0x7c>
   1f378:	mov	r0, r5
   1f37c:	add	sp, sp, #12
   1f380:	pop	{r4, r5, r6, r7, pc}
   1f384:	ldr	r1, [pc, #248]	; 1f484 <dta_emit_header_data_label+0x15c>
   1f388:	add	r1, pc, r1
   1f38c:	bl	4154 <readstat_write_string@plt>
   1f390:	subs	r5, r0, #0
   1f394:	beq	1f344 <dta_emit_header_data_label+0x1c>
   1f398:	mov	r0, r5
   1f39c:	add	sp, sp, #12
   1f3a0:	pop	{r4, r5, r6, r7, pc}
   1f3a4:	ldrb	r3, [r4, #192]	; 0xc0
   1f3a8:	tst	r3, #4
   1f3ac:	beq	1f378 <dta_emit_header_data_label+0x50>
   1f3b0:	ldr	r1, [pc, #208]	; 1f488 <dta_emit_header_data_label+0x160>
   1f3b4:	mov	r0, r6
   1f3b8:	add	r1, pc, r1
   1f3bc:	bl	4154 <readstat_write_string@plt>
   1f3c0:	mov	r5, r0
   1f3c4:	b	1f378 <dta_emit_header_data_label+0x50>
   1f3c8:	ldr	r5, [r4, #4]
   1f3cc:	mov	r0, #1
   1f3d0:	mov	r1, r5
   1f3d4:	bl	3d58 <calloc@plt>
   1f3d8:	mov	r2, r5
   1f3dc:	add	r1, r6, #88	; 0x58
   1f3e0:	mov	r7, r0
   1f3e4:	bl	42bc <strncpy@plt>
   1f3e8:	mov	r2, r5
   1f3ec:	mov	r1, r7
   1f3f0:	mov	r0, r6
   1f3f4:	bl	4454 <readstat_write_bytes@plt>
   1f3f8:	subs	r5, r0, #0
   1f3fc:	bne	1f420 <dta_emit_header_data_label+0xf8>
   1f400:	ldrb	r3, [r4, #192]	; 0xc0
   1f404:	tst	r3, #4
   1f408:	beq	1f420 <dta_emit_header_data_label+0xf8>
   1f40c:	ldr	r1, [pc, #120]	; 1f48c <dta_emit_header_data_label+0x164>
   1f410:	mov	r0, r6
   1f414:	add	r1, pc, r1
   1f418:	bl	4154 <readstat_write_string@plt>
   1f41c:	mov	r5, r0
   1f420:	mov	r0, r7
   1f424:	bl	3ec0 <free@plt>
   1f428:	mov	r0, r5
   1f42c:	add	sp, sp, #12
   1f430:	pop	{r4, r5, r6, r7, pc}
   1f434:	mov	r0, r7
   1f438:	bl	41fc <strlen@plt>
   1f43c:	add	r1, sp, #8
   1f440:	mov	r2, r5
   1f444:	strb	r0, [r1, #-2]!
   1f448:	mov	r0, r6
   1f44c:	bl	4454 <readstat_write_bytes@plt>
   1f450:	subs	r5, r0, #0
   1f454:	bne	1f378 <dta_emit_header_data_label+0x50>
   1f458:	b	1f364 <dta_emit_header_data_label+0x3c>
   1f45c:	mov	r0, r7
   1f460:	bl	41fc <strlen@plt>
   1f464:	add	r1, sp, #8
   1f468:	mov	r2, r5
   1f46c:	strh	r0, [r1, #-2]!
   1f470:	mov	r0, r6
   1f474:	bl	4454 <readstat_write_bytes@plt>
   1f478:	subs	r5, r0, #0
   1f47c:	bne	1f378 <dta_emit_header_data_label+0x50>
   1f480:	b	1f364 <dta_emit_header_data_label+0x3c>
   1f484:	.word	0x00008e40
   1f488:	.word	0x00008e18
   1f48c:	.word	0x00008dbc

0001f490 <dta_write_string>:
   1f490:	push	{r4, r5, r6, lr}
   1f494:	subs	r4, r2, #0
   1f498:	mov	r6, r0
   1f49c:	ldr	r5, [r1, #1596]	; 0x63c
   1f4a0:	beq	1f4c8 <dta_write_string+0x38>
   1f4a4:	ldrb	r3, [r4]
   1f4a8:	cmp	r3, #0
   1f4ac:	beq	1f4c8 <dta_write_string+0x38>
   1f4b0:	mov	r0, r4
   1f4b4:	bl	41fc <strlen@plt>
   1f4b8:	cmp	r5, r0
   1f4bc:	bcs	1f4e0 <dta_write_string+0x50>
   1f4c0:	mov	r0, #22
   1f4c4:	pop	{r4, r5, r6, pc}
   1f4c8:	mov	r2, r5
   1f4cc:	mov	r0, r6
   1f4d0:	mov	r1, #0
   1f4d4:	bl	42a4 <memset@plt>
   1f4d8:	mov	r0, #0
   1f4dc:	pop	{r4, r5, r6, pc}
   1f4e0:	mov	r2, r5
   1f4e4:	mov	r1, r4
   1f4e8:	mov	r0, r6
   1f4ec:	bl	42bc <strncpy@plt>
   1f4f0:	mov	r0, #0
   1f4f4:	pop	{r4, r5, r6, pc}

0001f4f8 <dta_validate_name_unreserved>:
   1f4f8:	ldr	r1, [pc, #528]	; 1f710 <dta_validate_name_unreserved+0x218>
   1f4fc:	push	{r4, lr}
   1f500:	add	r1, pc, r1
   1f504:	sub	sp, sp, #8
   1f508:	mov	r4, r0
   1f50c:	bl	3e00 <strcmp@plt>
   1f510:	cmp	r0, #0
   1f514:	bne	1f524 <dta_validate_name_unreserved+0x2c>
   1f518:	mov	r0, #27
   1f51c:	add	sp, sp, #8
   1f520:	pop	{r4, pc}
   1f524:	ldr	r1, [pc, #488]	; 1f714 <dta_validate_name_unreserved+0x21c>
   1f528:	mov	r0, r4
   1f52c:	add	r1, pc, r1
   1f530:	bl	3e00 <strcmp@plt>
   1f534:	cmp	r0, #0
   1f538:	beq	1f518 <dta_validate_name_unreserved+0x20>
   1f53c:	ldr	r1, [pc, #468]	; 1f718 <dta_validate_name_unreserved+0x220>
   1f540:	mov	r0, r4
   1f544:	add	r1, pc, r1
   1f548:	bl	3e00 <strcmp@plt>
   1f54c:	cmp	r0, #0
   1f550:	beq	1f518 <dta_validate_name_unreserved+0x20>
   1f554:	ldr	r1, [pc, #448]	; 1f71c <dta_validate_name_unreserved+0x224>
   1f558:	mov	r0, r4
   1f55c:	add	r1, pc, r1
   1f560:	bl	3e00 <strcmp@plt>
   1f564:	cmp	r0, #0
   1f568:	beq	1f518 <dta_validate_name_unreserved+0x20>
   1f56c:	ldr	r1, [pc, #428]	; 1f720 <dta_validate_name_unreserved+0x228>
   1f570:	mov	r0, r4
   1f574:	add	r1, pc, r1
   1f578:	bl	3e00 <strcmp@plt>
   1f57c:	cmp	r0, #0
   1f580:	beq	1f518 <dta_validate_name_unreserved+0x20>
   1f584:	ldr	r1, [pc, #408]	; 1f724 <dta_validate_name_unreserved+0x22c>
   1f588:	mov	r0, r4
   1f58c:	add	r1, pc, r1
   1f590:	bl	3e00 <strcmp@plt>
   1f594:	cmp	r0, #0
   1f598:	beq	1f518 <dta_validate_name_unreserved+0x20>
   1f59c:	ldr	r1, [pc, #388]	; 1f728 <dta_validate_name_unreserved+0x230>
   1f5a0:	mov	r0, r4
   1f5a4:	add	r1, pc, r1
   1f5a8:	bl	3e00 <strcmp@plt>
   1f5ac:	cmp	r0, #0
   1f5b0:	beq	1f518 <dta_validate_name_unreserved+0x20>
   1f5b4:	ldr	r1, [pc, #368]	; 1f72c <dta_validate_name_unreserved+0x234>
   1f5b8:	mov	r0, r4
   1f5bc:	add	r1, pc, r1
   1f5c0:	bl	3e00 <strcmp@plt>
   1f5c4:	cmp	r0, #0
   1f5c8:	beq	1f518 <dta_validate_name_unreserved+0x20>
   1f5cc:	ldr	r1, [pc, #348]	; 1f730 <dta_validate_name_unreserved+0x238>
   1f5d0:	mov	r0, r4
   1f5d4:	add	r1, pc, r1
   1f5d8:	bl	3e00 <strcmp@plt>
   1f5dc:	cmp	r0, #0
   1f5e0:	beq	1f518 <dta_validate_name_unreserved+0x20>
   1f5e4:	ldr	r1, [pc, #328]	; 1f734 <dta_validate_name_unreserved+0x23c>
   1f5e8:	mov	r0, r4
   1f5ec:	add	r1, pc, r1
   1f5f0:	bl	3e00 <strcmp@plt>
   1f5f4:	cmp	r0, #0
   1f5f8:	beq	1f518 <dta_validate_name_unreserved+0x20>
   1f5fc:	ldr	r1, [pc, #308]	; 1f738 <dta_validate_name_unreserved+0x240>
   1f600:	mov	r0, r4
   1f604:	add	r1, pc, r1
   1f608:	bl	3e00 <strcmp@plt>
   1f60c:	cmp	r0, #0
   1f610:	beq	1f518 <dta_validate_name_unreserved+0x20>
   1f614:	ldr	r1, [pc, #288]	; 1f73c <dta_validate_name_unreserved+0x244>
   1f618:	mov	r0, r4
   1f61c:	add	r1, pc, r1
   1f620:	bl	3e00 <strcmp@plt>
   1f624:	cmp	r0, #0
   1f628:	beq	1f518 <dta_validate_name_unreserved+0x20>
   1f62c:	ldr	r1, [pc, #268]	; 1f740 <dta_validate_name_unreserved+0x248>
   1f630:	mov	r0, r4
   1f634:	add	r1, pc, r1
   1f638:	bl	3e00 <strcmp@plt>
   1f63c:	cmp	r0, #0
   1f640:	beq	1f518 <dta_validate_name_unreserved+0x20>
   1f644:	ldr	r1, [pc, #248]	; 1f744 <dta_validate_name_unreserved+0x24c>
   1f648:	mov	r0, r4
   1f64c:	add	r1, pc, r1
   1f650:	bl	3e00 <strcmp@plt>
   1f654:	cmp	r0, #0
   1f658:	beq	1f518 <dta_validate_name_unreserved+0x20>
   1f65c:	ldr	r1, [pc, #228]	; 1f748 <dta_validate_name_unreserved+0x250>
   1f660:	mov	r0, r4
   1f664:	add	r1, pc, r1
   1f668:	bl	3e00 <strcmp@plt>
   1f66c:	cmp	r0, #0
   1f670:	beq	1f518 <dta_validate_name_unreserved+0x20>
   1f674:	ldr	r1, [pc, #208]	; 1f74c <dta_validate_name_unreserved+0x254>
   1f678:	mov	r0, r4
   1f67c:	add	r1, pc, r1
   1f680:	bl	3e00 <strcmp@plt>
   1f684:	cmp	r0, #0
   1f688:	beq	1f518 <dta_validate_name_unreserved+0x20>
   1f68c:	ldr	r1, [pc, #188]	; 1f750 <dta_validate_name_unreserved+0x258>
   1f690:	mov	r0, r4
   1f694:	add	r1, pc, r1
   1f698:	bl	3e00 <strcmp@plt>
   1f69c:	cmp	r0, #0
   1f6a0:	beq	1f518 <dta_validate_name_unreserved+0x20>
   1f6a4:	ldr	r1, [pc, #168]	; 1f754 <dta_validate_name_unreserved+0x25c>
   1f6a8:	mov	r0, r4
   1f6ac:	add	r1, pc, r1
   1f6b0:	bl	3e00 <strcmp@plt>
   1f6b4:	cmp	r0, #0
   1f6b8:	beq	1f518 <dta_validate_name_unreserved+0x20>
   1f6bc:	ldr	r1, [pc, #148]	; 1f758 <dta_validate_name_unreserved+0x260>
   1f6c0:	mov	r0, r4
   1f6c4:	add	r1, pc, r1
   1f6c8:	bl	3e00 <strcmp@plt>
   1f6cc:	cmp	r0, #0
   1f6d0:	beq	1f518 <dta_validate_name_unreserved+0x20>
   1f6d4:	ldr	r1, [pc, #128]	; 1f75c <dta_validate_name_unreserved+0x264>
   1f6d8:	mov	r0, r4
   1f6dc:	add	r1, pc, r1
   1f6e0:	bl	3e00 <strcmp@plt>
   1f6e4:	cmp	r0, #0
   1f6e8:	beq	1f518 <dta_validate_name_unreserved+0x20>
   1f6ec:	ldr	r1, [pc, #108]	; 1f760 <dta_validate_name_unreserved+0x268>
   1f6f0:	mov	r0, r4
   1f6f4:	add	r2, sp, #4
   1f6f8:	add	r1, pc, r1
   1f6fc:	bl	428c <__isoc99_sscanf@plt>
   1f700:	cmp	r0, #1
   1f704:	beq	1f518 <dta_validate_name_unreserved+0x20>
   1f708:	mov	r0, #0
   1f70c:	b	1f51c <dta_validate_name_unreserved+0x24>
   1f710:	.word	0x00008f40
   1f714:	.word	0x00008f1c
   1f718:	.word	0x00008f08
   1f71c:	.word	0x00008ef8
   1f720:	.word	0x00008ee8
   1f724:	.word	0x00008ed8
   1f728:	.word	0x00008ec8
   1f72c:	.word	0x00008eb8
   1f730:	.word	0x00008ea4
   1f734:	.word	0x00008e90
   1f738:	.word	0x00008e7c
   1f73c:	.word	0x00008e6c
   1f740:	.word	0x00008e58
   1f744:	.word	0x00008e44
   1f748:	.word	0x00008e30
   1f74c:	.word	0x00008e20
   1f750:	.word	0x00008e0c
   1f754:	.word	0x00008dfc
   1f758:	.word	0x00008dec
   1f75c:	.word	0x00008ddc
   1f760:	.word	0x00008dc8

0001f764 <dta_compare_value_labels>:
   1f764:	ldrb	r3, [r0, #12]
   1f768:	cmp	r3, #0
   1f76c:	beq	1f784 <dta_compare_value_labels+0x20>
   1f770:	ldrb	r0, [r1, #12]
   1f774:	cmp	r0, #0
   1f778:	beq	1f7a0 <dta_compare_value_labels+0x3c>
   1f77c:	sub	r0, r3, r0
   1f780:	bx	lr
   1f784:	ldrb	r3, [r1, #12]
   1f788:	cmp	r3, #0
   1f78c:	bne	1f7a8 <dta_compare_value_labels+0x44>
   1f790:	ldr	r0, [r0, #8]
   1f794:	ldr	r3, [r1, #8]
   1f798:	sub	r0, r0, r3
   1f79c:	bx	lr
   1f7a0:	mov	r0, #1
   1f7a4:	bx	lr
   1f7a8:	mvn	r0, #0
   1f7ac:	bx	lr

0001f7b0 <dta_117_variable_width>:
   1f7b0:	cmp	r0, #0
   1f7b4:	beq	1f7e4 <dta_117_variable_width+0x34>
   1f7b8:	sub	r3, r0, #5
   1f7bc:	cmp	r3, #1
   1f7c0:	bls	1f7fc <dta_117_variable_width+0x4c>
   1f7c4:	sub	r3, r0, #3
   1f7c8:	cmp	r3, #1
   1f7cc:	bls	1f804 <dta_117_variable_width+0x54>
   1f7d0:	cmp	r0, #2
   1f7d4:	subne	r0, r0, #1
   1f7d8:	clzne	r0, r0
   1f7dc:	lsrne	r0, r0, #5
   1f7e0:	bx	lr
   1f7e4:	ldr	r3, [pc, #32]	; 1f80c <dta_117_variable_width+0x5c>
   1f7e8:	sub	r2, r1, #1
   1f7ec:	cmp	r2, r3
   1f7f0:	ldr	r0, [pc, #24]	; 1f810 <dta_117_variable_width+0x60>
   1f7f4:	movls	r0, r1
   1f7f8:	bx	lr
   1f7fc:	mov	r0, #8
   1f800:	bx	lr
   1f804:	mov	r0, #4
   1f808:	bx	lr
   1f80c:	.word	0x000007fc
   1f810:	.word	0x000007fd

0001f814 <dta_metadata_ok>:
   1f814:	ldr	r3, [r0, #16]
   1f818:	cmp	r3, #0
   1f81c:	beq	1f828 <dta_metadata_ok+0x14>
   1f820:	mov	r0, #6
   1f824:	bx	lr
   1f828:	ldr	r0, [r0, #8]
   1f82c:	sub	r0, r0, #104	; 0x68
   1f830:	cmp	r0, #15
   1f834:	movhi	r0, #24
   1f838:	movls	r0, #0
   1f83c:	bx	lr

0001f840 <dta_write_chunk>:
   1f840:	ldrb	ip, [r1, #192]	; 0xc0
   1f844:	push	{r4, r5, r6, r7, r8, lr}
   1f848:	mov	r4, r1
   1f84c:	tst	ip, #4
   1f850:	mov	r6, r3
   1f854:	mov	r5, r0
   1f858:	ldr	r7, [sp, #24]
   1f85c:	ldr	r8, [sp, #28]
   1f860:	bne	1f89c <dta_write_chunk+0x5c>
   1f864:	mov	r2, r7
   1f868:	mov	r1, r6
   1f86c:	mov	r0, r5
   1f870:	bl	4454 <readstat_write_bytes@plt>
   1f874:	cmp	r0, #0
   1f878:	bne	1f898 <dta_write_chunk+0x58>
   1f87c:	ldrb	r3, [r4, #192]	; 0xc0
   1f880:	tst	r3, #4
   1f884:	popeq	{r4, r5, r6, r7, r8, pc}
   1f888:	mov	r1, r8
   1f88c:	mov	r0, r5
   1f890:	pop	{r4, r5, r6, r7, r8, lr}
   1f894:	b	4154 <readstat_write_string@plt>
   1f898:	pop	{r4, r5, r6, r7, r8, pc}
   1f89c:	mov	r1, r2
   1f8a0:	bl	4154 <readstat_write_string@plt>
   1f8a4:	cmp	r0, #0
   1f8a8:	popne	{r4, r5, r6, r7, r8, pc}
   1f8ac:	b	1f864 <dta_write_chunk+0x24>

0001f8b0 <dta_113_write_missing_tagged>:
   1f8b0:	sub	r3, r2, #97	; 0x61
   1f8b4:	mov	ip, r0
   1f8b8:	uxtb	r0, r3
   1f8bc:	cmp	r0, #25
   1f8c0:	movhi	r3, #21
   1f8c4:	bls	1f8d0 <dta_113_write_missing_tagged+0x20>
   1f8c8:	mov	r0, r3
   1f8cc:	bx	lr
   1f8d0:	ldr	r1, [r1]
   1f8d4:	cmp	r1, #1
   1f8d8:	addeq	r2, r2, #5
   1f8dc:	strbeq	r2, [ip]
   1f8e0:	moveq	r3, #0
   1f8e4:	beq	1f8c8 <dta_113_write_missing_tagged+0x18>
   1f8e8:	cmp	r1, #2
   1f8ec:	beq	1f954 <dta_113_write_missing_tagged+0xa4>
   1f8f0:	cmp	r1, #3
   1f8f4:	beq	1f968 <dta_113_write_missing_tagged+0xb8>
   1f8f8:	cmp	r1, #4
   1f8fc:	beq	1f97c <dta_113_write_missing_tagged+0xcc>
   1f900:	cmp	r1, #5
   1f904:	movne	r3, #23
   1f908:	bne	1f8c8 <dta_113_write_missing_tagged+0x18>
   1f90c:	push	{r4, r5}
   1f910:	mov	r0, #0
   1f914:	add	r5, pc, #124	; 0x7c
   1f918:	ldrd	r4, [r5]
   1f91c:	lsl	r1, r3, #8
   1f920:	sub	sp, sp, #8
   1f924:	adds	r4, r4, r0
   1f928:	adc	r5, r5, r1
   1f92c:	add	r2, sp, #8
   1f930:	mov	r3, r0
   1f934:	strd	r4, [r2, #-8]!
   1f938:	ldm	r2!, {r0, r1}
   1f93c:	str	r0, [ip]
   1f940:	str	r1, [ip, #4]
   1f944:	mov	r0, r3
   1f948:	add	sp, sp, #8
   1f94c:	pop	{r4, r5}
   1f950:	bx	lr
   1f954:	add	r2, r2, #32512	; 0x7f00
   1f958:	add	r2, r2, #133	; 0x85
   1f95c:	strh	r2, [ip]
   1f960:	mov	r3, #0
   1f964:	b	1f8c8 <dta_113_write_missing_tagged+0x18>
   1f968:	add	r2, r2, #-2147483648	; 0x80000000
   1f96c:	sub	r2, r2, #123	; 0x7b
   1f970:	str	r2, [ip]
   1f974:	mov	r3, #0
   1f978:	b	1f8c8 <dta_113_write_missing_tagged+0x18>
   1f97c:	lsl	r3, r3, #11
   1f980:	add	r3, r3, #2130706432	; 0x7f000000
   1f984:	add	r3, r3, #2048	; 0x800
   1f988:	str	r3, [ip]
   1f98c:	mov	r3, #0
   1f990:	b	1f8c8 <dta_113_write_missing_tagged+0x18>
   1f994:	nop			; (mov r0, r0)
   1f998:	.word	0x00000000
   1f99c:	.word	0x7fe00100

0001f9a0 <dta_113_write_missing_numeric>:
   1f9a0:	ldr	r3, [r1]
   1f9a4:	mov	r2, r0
   1f9a8:	cmp	r3, #1
   1f9ac:	moveq	r3, #101	; 0x65
   1f9b0:	strbeq	r3, [r0]
   1f9b4:	beq	1f9f0 <dta_113_write_missing_numeric+0x50>
   1f9b8:	cmp	r3, #2
   1f9bc:	ldrheq	r3, [pc, #96]	; 1fa24 <dta_113_write_missing_numeric+0x84>
   1f9c0:	strheq	r3, [r0]
   1f9c4:	beq	1f9f0 <dta_113_write_missing_numeric+0x50>
   1f9c8:	cmp	r3, #3
   1f9cc:	mvneq	r3, #-2147483622	; 0x8000001a
   1f9d0:	streq	r3, [r0]
   1f9d4:	beq	1f9f0 <dta_113_write_missing_numeric+0x50>
   1f9d8:	cmp	r3, #4
   1f9dc:	moveq	r3, #2130706432	; 0x7f000000
   1f9e0:	streq	r3, [r0]
   1f9e4:	beq	1f9f0 <dta_113_write_missing_numeric+0x50>
   1f9e8:	cmp	r3, #5
   1f9ec:	beq	1f9f8 <dta_113_write_missing_numeric+0x58>
   1f9f0:	mov	r0, #0
   1f9f4:	bx	lr
   1f9f8:	sub	sp, sp, #8
   1f9fc:	ldr	r1, [pc, #36]	; 1fa28 <dta_113_write_missing_numeric+0x88>
   1fa00:	add	r3, sp, #8
   1fa04:	mov	r0, #0
   1fa08:	strd	r0, [r3, #-8]!
   1fa0c:	ldm	r3!, {r0, r1}
   1fa10:	str	r0, [r2]
   1fa14:	str	r1, [r2, #4]
   1fa18:	mov	r0, #0
   1fa1c:	add	sp, sp, #8
   1fa20:	bx	lr
   1fa24:	.word	0x00007fe5
   1fa28:	.word	0x7fe00000

0001fa2c <dta_end_data>:
   1fa2c:	ldr	r3, [r0, #308]	; 0x134
   1fa30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fa34:	cmp	r3, #0
   1fa38:	sub	sp, sp, #76	; 0x4c
   1fa3c:	moveq	r5, #14
   1fa40:	bne	1fa50 <dta_end_data+0x24>
   1fa44:	mov	r0, r5
   1fa48:	add	sp, sp, #76	; 0x4c
   1fa4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fa50:	ldr	r9, [r0, #300]	; 0x12c
   1fa54:	mov	r4, r0
   1fa58:	ldrb	r3, [r9, #192]	; 0xc0
   1fa5c:	tst	r3, #4
   1fa60:	bne	1fca4 <dta_end_data+0x278>
   1fa64:	ldr	r6, [r9, #100]	; 0x64
   1fa68:	cmp	r6, #2
   1fa6c:	beq	1fdfc <dta_end_data+0x3d0>
   1fa70:	ldr	r3, [r9, #108]	; 0x6c
   1fa74:	ldr	r1, [r9, #104]	; 0x68
   1fa78:	mov	r0, #1
   1fa7c:	add	r1, r1, r3
   1fa80:	bl	3d58 <calloc@plt>
   1fa84:	ldrb	r3, [r9, #192]	; 0xc0
   1fa88:	tst	r3, #4
   1fa8c:	str	r0, [sp]
   1fa90:	bne	20024 <dta_end_data+0x5f8>
   1fa94:	ldr	r3, [r4, #40]	; 0x28
   1fa98:	cmp	r3, #0
   1fa9c:	ble	201ac <dta_end_data+0x780>
   1faa0:	ldr	r3, [pc, #1884]	; 20204 <dta_end_data+0x7d8>
   1faa4:	mov	r8, #0
   1faa8:	add	r3, pc, r3
   1faac:	str	r3, [sp, #28]
   1fab0:	ldr	r3, [pc, #1872]	; 20208 <dta_end_data+0x7dc>
   1fab4:	mov	fp, r8
   1fab8:	add	r3, pc, r3
   1fabc:	str	r3, [sp, #24]
   1fac0:	ldr	r3, [pc, #1860]	; 2020c <dta_end_data+0x7e0>
   1fac4:	str	r8, [sp, #8]
   1fac8:	add	r3, pc, r3
   1facc:	str	r3, [sp, #36]	; 0x24
   1fad0:	ldr	r3, [pc, #1848]	; 20210 <dta_end_data+0x7e4>
   1fad4:	str	r8, [sp, #12]
   1fad8:	add	r3, pc, r3
   1fadc:	str	r3, [sp, #32]
   1fae0:	add	r3, sp, #52	; 0x34
   1fae4:	str	r3, [sp, #16]
   1fae8:	str	r9, [sp, #4]
   1faec:	ldr	r1, [sp, #12]
   1faf0:	mov	r0, r4
   1faf4:	bl	4424 <readstat_get_label_set@plt>
   1faf8:	mov	r3, #0
   1fafc:	ldr	r2, [r0, #264]	; 0x108
   1fb00:	mov	r7, r0
   1fb04:	cmp	r2, r3
   1fb08:	str	r3, [sp, #48]	; 0x30
   1fb0c:	str	r2, [sp, #44]	; 0x2c
   1fb10:	ble	20194 <dta_end_data+0x768>
   1fb14:	mov	r5, r3
   1fb18:	mov	r1, r5
   1fb1c:	mov	r0, r7
   1fb20:	bl	44cc <readstat_get_value_label@plt>
   1fb24:	ldr	r3, [sp, #48]	; 0x30
   1fb28:	ldr	r2, [sp, #44]	; 0x2c
   1fb2c:	add	r5, r5, #1
   1fb30:	add	r3, r3, #1
   1fb34:	cmp	r5, r2
   1fb38:	ldr	r1, [r0, #28]
   1fb3c:	add	r3, r3, r1
   1fb40:	str	r3, [sp, #48]	; 0x30
   1fb44:	blt	1fb18 <dta_end_data+0xec>
   1fb48:	ldr	r1, [sp, #4]
   1fb4c:	ldrb	r1, [r1, #192]	; 0xc0
   1fb50:	tst	r1, #4
   1fb54:	bne	2004c <dta_end_data+0x620>
   1fb58:	add	r1, r2, #1
   1fb5c:	mov	r0, r4
   1fb60:	add	r3, r3, r1, lsl #3
   1fb64:	mov	r2, #4
   1fb68:	ldr	r1, [sp, #16]
   1fb6c:	str	r3, [sp, #52]	; 0x34
   1fb70:	bl	4454 <readstat_write_bytes@plt>
   1fb74:	ldr	r9, [sp, #4]
   1fb78:	cmp	r0, #0
   1fb7c:	bne	20018 <dta_end_data+0x5ec>
   1fb80:	ldr	r5, [r9, #104]	; 0x68
   1fb84:	ldr	r6, [sp]
   1fb88:	add	r1, r7, #4
   1fb8c:	mov	r2, r5
   1fb90:	mov	r0, r6
   1fb94:	bl	42bc <strncpy@plt>
   1fb98:	ldr	r2, [r9, #108]	; 0x6c
   1fb9c:	mov	r1, r6
   1fba0:	add	r2, r5, r2
   1fba4:	mov	r0, r4
   1fba8:	bl	4454 <readstat_write_bytes@plt>
   1fbac:	subs	r3, r0, #0
   1fbb0:	str	r3, [sp, #20]
   1fbb4:	bne	2019c <dta_end_data+0x770>
   1fbb8:	ldr	r3, [sp, #48]	; 0x30
   1fbbc:	cmp	r3, #0
   1fbc0:	bne	1fe9c <dta_end_data+0x470>
   1fbc4:	add	r6, sp, #48	; 0x30
   1fbc8:	mov	r1, r6
   1fbcc:	mov	r2, #4
   1fbd0:	mov	r0, r4
   1fbd4:	bl	4454 <readstat_write_bytes@plt>
   1fbd8:	cmp	r0, #0
   1fbdc:	bne	20014 <dta_end_data+0x5e8>
   1fbe0:	mov	r1, r6
   1fbe4:	mov	r2, #4
   1fbe8:	mov	r0, r4
   1fbec:	bl	4454 <readstat_write_bytes@plt>
   1fbf0:	cmp	r0, #0
   1fbf4:	bne	20014 <dta_end_data+0x5e8>
   1fbf8:	ldrb	r3, [r9, #192]	; 0xc0
   1fbfc:	tst	r3, #4
   1fc00:	bne	2007c <dta_end_data+0x650>
   1fc04:	ldr	r2, [sp, #12]
   1fc08:	ldr	r3, [r4, #40]	; 0x28
   1fc0c:	add	r2, r2, #1
   1fc10:	cmp	r2, r3
   1fc14:	str	r2, [sp, #12]
   1fc18:	blt	1faec <dta_end_data+0xc0>
   1fc1c:	ldr	r9, [sp, #4]
   1fc20:	mov	r6, fp
   1fc24:	ldrb	r3, [r9, #192]	; 0xc0
   1fc28:	tst	r3, #4
   1fc2c:	ldreq	r5, [sp, #20]
   1fc30:	bne	201c8 <dta_end_data+0x79c>
   1fc34:	ldr	r0, [sp, #8]
   1fc38:	cmp	r0, #0
   1fc3c:	beq	1fc44 <dta_end_data+0x218>
   1fc40:	bl	3ec0 <free@plt>
   1fc44:	cmp	r6, #0
   1fc48:	beq	1fc54 <dta_end_data+0x228>
   1fc4c:	mov	r0, r6
   1fc50:	bl	3ec0 <free@plt>
   1fc54:	cmp	r8, #0
   1fc58:	beq	1fc64 <dta_end_data+0x238>
   1fc5c:	mov	r0, r8
   1fc60:	bl	3ec0 <free@plt>
   1fc64:	ldr	r3, [sp]
   1fc68:	cmp	r3, #0
   1fc6c:	beq	1fc78 <dta_end_data+0x24c>
   1fc70:	ldr	r0, [sp]
   1fc74:	bl	3ec0 <free@plt>
   1fc78:	cmp	r5, #0
   1fc7c:	bne	1fa44 <dta_end_data+0x18>
   1fc80:	ldrb	r3, [r9, #192]	; 0xc0
   1fc84:	tst	r3, #4
   1fc88:	beq	1fa44 <dta_end_data+0x18>
   1fc8c:	ldr	r1, [pc, #1408]	; 20214 <dta_end_data+0x7e8>
   1fc90:	mov	r0, r4
   1fc94:	add	r1, pc, r1
   1fc98:	bl	4154 <readstat_write_string@plt>
   1fc9c:	mov	r5, r0
   1fca0:	b	1fa44 <dta_end_data+0x18>
   1fca4:	ldr	r1, [pc, #1388]	; 20218 <dta_end_data+0x7ec>
   1fca8:	add	r1, pc, r1
   1fcac:	bl	4154 <readstat_write_string@plt>
   1fcb0:	subs	r5, r0, #0
   1fcb4:	bne	1fa44 <dta_end_data+0x18>
   1fcb8:	ldrb	r3, [r9, #192]	; 0xc0
   1fcbc:	tst	r3, #4
   1fcc0:	beq	1fa64 <dta_end_data+0x38>
   1fcc4:	ldr	r1, [pc, #1360]	; 2021c <dta_end_data+0x7f0>
   1fcc8:	mov	r0, r4
   1fccc:	add	r1, pc, r1
   1fcd0:	bl	4154 <readstat_write_string@plt>
   1fcd4:	subs	r5, r0, #0
   1fcd8:	bne	1fa44 <dta_end_data+0x18>
   1fcdc:	ldr	r3, [r4, #64]	; 0x40
   1fce0:	cmp	r3, #0
   1fce4:	ble	201e8 <dta_end_data+0x7bc>
   1fce8:	ldr	fp, [pc, #1328]	; 20220 <dta_end_data+0x7f4>
   1fcec:	mov	r6, r5
   1fcf0:	add	fp, pc, fp
   1fcf4:	add	r7, sp, #52	; 0x34
   1fcf8:	mov	r8, #13
   1fcfc:	b	1fd84 <dta_end_data+0x358>
   1fd00:	ldr	r0, [sl]
   1fd04:	ldr	r3, [sl, #8]
   1fd08:	mvn	r2, #125	; 0x7d
   1fd0c:	ldr	ip, [sl, #12]
   1fd10:	strb	r2, [sp, #64]	; 0x40
   1fd14:	ldrb	r2, [sl, #16]
   1fd18:	ldrb	r1, [sl, #17]
   1fd1c:	str	r0, [sp, #52]	; 0x34
   1fd20:	ldrb	r0, [sl, #18]
   1fd24:	str	r3, [sp, #56]	; 0x38
   1fd28:	ldrb	r3, [sl, #19]
   1fd2c:	strb	r2, [sp, #65]	; 0x41
   1fd30:	strb	r1, [sp, #66]	; 0x42
   1fd34:	strb	r0, [sp, #67]	; 0x43
   1fd38:	mov	r2, #17
   1fd3c:	mov	r1, r7
   1fd40:	mov	r0, r4
   1fd44:	str	ip, [sp, #60]	; 0x3c
   1fd48:	strb	r3, [sp, #68]	; 0x44
   1fd4c:	bl	4454 <readstat_write_bytes@plt>
   1fd50:	mov	r5, r0
   1fd54:	cmp	r5, #0
   1fd58:	add	r1, sl, #20
   1fd5c:	mov	r0, r4
   1fd60:	add	r6, r6, #1
   1fd64:	bne	1fa44 <dta_end_data+0x18>
   1fd68:	ldr	r2, [sl, #16]
   1fd6c:	bl	4454 <readstat_write_bytes@plt>
   1fd70:	subs	r5, r0, #0
   1fd74:	bne	1fa44 <dta_end_data+0x18>
   1fd78:	ldr	r3, [r4, #64]	; 0x40
   1fd7c:	cmp	r6, r3
   1fd80:	bge	201e8 <dta_end_data+0x7bc>
   1fd84:	ldr	r3, [r4, #60]	; 0x3c
   1fd88:	mov	r1, fp
   1fd8c:	mov	r0, r4
   1fd90:	ldr	sl, [r3, r6, lsl #2]
   1fd94:	bl	4154 <readstat_write_string@plt>
   1fd98:	mov	r2, r8
   1fd9c:	mov	r1, r7
   1fda0:	subs	r5, r0, #0
   1fda4:	mov	r0, r4
   1fda8:	bne	1fa44 <dta_end_data+0x18>
   1fdac:	ldr	r3, [r9, #116]	; 0x74
   1fdb0:	cmp	r3, #4
   1fdb4:	bhi	1fd00 <dta_end_data+0x2d4>
   1fdb8:	mvn	r3, #125	; 0x7d
   1fdbc:	ldr	lr, [sl]
   1fdc0:	ldr	ip, [sl, #8]
   1fdc4:	strb	r3, [sp, #60]	; 0x3c
   1fdc8:	ldrb	r3, [sl, #16]
   1fdcc:	str	lr, [sp, #52]	; 0x34
   1fdd0:	ldrb	lr, [sl, #17]
   1fdd4:	str	ip, [sp, #56]	; 0x38
   1fdd8:	ldrb	ip, [sl, #18]
   1fddc:	strb	r3, [sp, #61]	; 0x3d
   1fde0:	ldrb	r3, [sl, #19]
   1fde4:	strb	lr, [sp, #62]	; 0x3e
   1fde8:	strb	ip, [sp, #63]	; 0x3f
   1fdec:	strb	r3, [sp, #64]	; 0x40
   1fdf0:	bl	4454 <readstat_write_bytes@plt>
   1fdf4:	mov	r5, r0
   1fdf8:	b	1fd54 <dta_end_data+0x328>
   1fdfc:	ldr	r3, [r4, #40]	; 0x28
   1fe00:	cmp	r3, #0
   1fe04:	ble	201e0 <dta_end_data+0x7b4>
   1fe08:	mov	r7, #0
   1fe0c:	str	r6, [sp, #4]
   1fe10:	mov	r8, r7
   1fe14:	add	r6, sp, #52	; 0x34
   1fe18:	add	r3, sp, #48	; 0x30
   1fe1c:	str	r3, [sp]
   1fe20:	mov	r1, r8
   1fe24:	mov	r0, r4
   1fe28:	bl	4424 <readstat_get_label_set@plt>
   1fe2c:	mov	sl, #0
   1fe30:	ldr	r3, [r0, #264]	; 0x108
   1fe34:	mov	fp, r0
   1fe38:	cmp	r3, #0
   1fe3c:	ble	20094 <dta_end_data+0x668>
   1fe40:	mov	r5, sl
   1fe44:	b	1fe68 <dta_end_data+0x43c>
   1fe48:	ldr	r3, [r0, #8]
   1fe4c:	cmp	r3, #1024	; 0x400
   1fe50:	bhi	2018c <dta_end_data+0x760>
   1fe54:	ldr	r2, [fp, #264]	; 0x108
   1fe58:	cmp	sl, r3
   1fe5c:	movlt	sl, r3
   1fe60:	cmp	r5, r2
   1fe64:	bge	20094 <dta_end_data+0x668>
   1fe68:	mov	r1, r5
   1fe6c:	mov	r0, fp
   1fe70:	bl	44cc <readstat_get_value_label@plt>
   1fe74:	add	r5, r5, #1
   1fe78:	ldrb	r3, [r0, #12]
   1fe7c:	cmp	r3, #0
   1fe80:	beq	1fe48 <dta_end_data+0x41c>
   1fe84:	mov	r5, #23
   1fe88:	cmp	r7, #0
   1fe8c:	beq	1fc78 <dta_end_data+0x24c>
   1fe90:	mov	r0, r7
   1fe94:	bl	3ec0 <free@plt>
   1fe98:	b	1fc78 <dta_end_data+0x24c>
   1fe9c:	ldr	r1, [sp, #44]	; 0x2c
   1fea0:	ldr	r0, [sp, #8]
   1fea4:	lsl	r1, r1, #2
   1fea8:	bl	3ff8 <realloc@plt>
   1feac:	ldr	r1, [sp, #44]	; 0x2c
   1feb0:	lsl	r1, r1, #2
   1feb4:	str	r0, [sp, #8]
   1feb8:	mov	r0, fp
   1febc:	bl	3ff8 <realloc@plt>
   1fec0:	ldr	r1, [sp, #48]	; 0x30
   1fec4:	mov	fp, r0
   1fec8:	mov	r0, r8
   1fecc:	bl	3ff8 <realloc@plt>
   1fed0:	ldr	r1, [sp, #24]
   1fed4:	mov	r8, r0
   1fed8:	mov	r0, r7
   1fedc:	bl	3dac <readstat_sort_label_set@plt>
   1fee0:	ldr	r3, [sp, #44]	; 0x2c
   1fee4:	cmp	r3, #0
   1fee8:	ble	1ff70 <dta_end_data+0x544>
   1feec:	ldr	r3, [sp, #8]
   1fef0:	mov	r5, #0
   1fef4:	sub	sl, r3, #4
   1fef8:	ldr	r9, [sp, #20]
   1fefc:	b	1ff3c <dta_end_data+0x510>
   1ff00:	ldr	r2, [r4, #8]
   1ff04:	cmp	r2, #112	; 0x70
   1ff08:	ble	2006c <dta_end_data+0x640>
   1ff0c:	str	r3, [fp, r9, lsl #2]
   1ff10:	mov	r2, r6
   1ff14:	add	r0, r8, r5
   1ff18:	bl	3f20 <memcpy@plt>
   1ff1c:	ldr	r3, [sp, #44]	; 0x2c
   1ff20:	add	r6, r6, r5
   1ff24:	add	r9, r9, #1
   1ff28:	cmp	r9, r3
   1ff2c:	mov	r3, #0
   1ff30:	strb	r3, [r8, r6]
   1ff34:	add	r5, r6, #1
   1ff38:	bge	1ff70 <dta_end_data+0x544>
   1ff3c:	mov	r1, r9
   1ff40:	mov	r0, r7
   1ff44:	bl	44cc <readstat_get_value_label@plt>
   1ff48:	ldr	r1, [r0, #24]
   1ff4c:	ldr	r6, [r0, #28]
   1ff50:	str	r5, [sl, #4]!
   1ff54:	ldrb	r2, [r0, #12]
   1ff58:	add	r3, r2, #-2147483648	; 0x80000000
   1ff5c:	cmp	r2, #0
   1ff60:	sub	r3, r3, #123	; 0x7b
   1ff64:	bne	1ff00 <dta_end_data+0x4d4>
   1ff68:	ldr	r3, [r0, #8]
   1ff6c:	b	1ff0c <dta_end_data+0x4e0>
   1ff70:	mov	r2, #4
   1ff74:	add	r1, sp, #44	; 0x2c
   1ff78:	mov	r0, r4
   1ff7c:	bl	4454 <readstat_write_bytes@plt>
   1ff80:	cmp	r0, #0
   1ff84:	bne	20014 <dta_end_data+0x5e8>
   1ff88:	mov	r2, #4
   1ff8c:	add	r1, sp, #48	; 0x30
   1ff90:	mov	r0, r4
   1ff94:	bl	4454 <readstat_write_bytes@plt>
   1ff98:	cmp	r0, #0
   1ff9c:	bne	20014 <dta_end_data+0x5e8>
   1ffa0:	ldr	r2, [sp, #44]	; 0x2c
   1ffa4:	ldr	r1, [sp, #8]
   1ffa8:	mov	r0, r4
   1ffac:	lsl	r2, r2, #2
   1ffb0:	bl	4454 <readstat_write_bytes@plt>
   1ffb4:	cmp	r0, #0
   1ffb8:	bne	20014 <dta_end_data+0x5e8>
   1ffbc:	ldr	r2, [sp, #44]	; 0x2c
   1ffc0:	mov	r1, fp
   1ffc4:	mov	r0, r4
   1ffc8:	lsl	r2, r2, #2
   1ffcc:	bl	4454 <readstat_write_bytes@plt>
   1ffd0:	cmp	r0, #0
   1ffd4:	bne	20014 <dta_end_data+0x5e8>
   1ffd8:	ldr	r2, [sp, #48]	; 0x30
   1ffdc:	mov	r1, r8
   1ffe0:	mov	r0, r4
   1ffe4:	bl	4454 <readstat_write_bytes@plt>
   1ffe8:	cmp	r0, #0
   1ffec:	bne	20014 <dta_end_data+0x5e8>
   1fff0:	ldr	r3, [sp, #4]
   1fff4:	ldrb	r3, [r3, #192]	; 0xc0
   1fff8:	tst	r3, #4
   1fffc:	beq	1fc04 <dta_end_data+0x1d8>
   20000:	ldr	r1, [sp, #36]	; 0x24
   20004:	mov	r0, r4
   20008:	bl	4154 <readstat_write_string@plt>
   2000c:	cmp	r0, #0
   20010:	beq	1fc04 <dta_end_data+0x1d8>
   20014:	ldr	r9, [sp, #4]
   20018:	mov	r6, fp
   2001c:	mov	r5, r0
   20020:	b	1fc34 <dta_end_data+0x208>
   20024:	ldr	r1, [pc, #504]	; 20224 <dta_end_data+0x7f8>
   20028:	mov	r0, r4
   2002c:	add	r1, pc, r1
   20030:	bl	4154 <readstat_write_string@plt>
   20034:	subs	r5, r0, #0
   20038:	beq	1fa94 <dta_end_data+0x68>
   2003c:	ldr	r3, [sp]
   20040:	cmp	r3, #0
   20044:	bne	1fc70 <dta_end_data+0x244>
   20048:	b	1fa44 <dta_end_data+0x18>
   2004c:	ldr	r1, [sp, #28]
   20050:	mov	r0, r4
   20054:	bl	4154 <readstat_write_string@plt>
   20058:	cmp	r0, #0
   2005c:	bne	20014 <dta_end_data+0x5e8>
   20060:	ldr	r2, [sp, #44]	; 0x2c
   20064:	ldr	r3, [sp, #48]	; 0x30
   20068:	b	1fb58 <dta_end_data+0x12c>
   2006c:	ldr	r9, [sp, #4]
   20070:	mov	r6, fp
   20074:	mov	r5, #23
   20078:	b	1fc34 <dta_end_data+0x208>
   2007c:	ldr	r1, [sp, #32]
   20080:	mov	r0, r4
   20084:	bl	4154 <readstat_write_string@plt>
   20088:	cmp	r0, #0
   2008c:	bne	20014 <dta_end_data+0x5e8>
   20090:	b	1fc04 <dta_end_data+0x1d8>
   20094:	add	r3, sl, #1
   20098:	ldr	r2, [sp, #4]
   2009c:	lsl	r3, r3, #3
   200a0:	ldr	r1, [sp]
   200a4:	mov	r0, r4
   200a8:	strh	r3, [sp, #48]	; 0x30
   200ac:	bl	4454 <readstat_write_bytes@plt>
   200b0:	subs	r5, r0, #0
   200b4:	bne	1fe88 <dta_end_data+0x45c>
   200b8:	str	r5, [r6]
   200bc:	str	r5, [r6, #4]
   200c0:	str	r5, [r6, #8]
   200c4:	strh	r5, [r6, #12]
   200c8:	ldr	r5, [r9, #104]	; 0x68
   200cc:	add	r1, fp, #4
   200d0:	mov	r2, r5
   200d4:	mov	r0, r6
   200d8:	bl	42bc <strncpy@plt>
   200dc:	ldr	r2, [r9, #108]	; 0x6c
   200e0:	mov	r1, r6
   200e4:	add	r2, r5, r2
   200e8:	mov	r0, r4
   200ec:	bl	4454 <readstat_write_bytes@plt>
   200f0:	subs	r5, r0, #0
   200f4:	bne	1fe88 <dta_end_data+0x45c>
   200f8:	ldrsh	sl, [sp, #48]	; 0x30
   200fc:	mov	r0, r7
   20100:	mov	r1, sl
   20104:	bl	3ff8 <realloc@plt>
   20108:	mov	r2, sl
   2010c:	mov	r1, #0
   20110:	mov	r7, r0
   20114:	bl	42a4 <memset@plt>
   20118:	ldr	r3, [fp, #264]	; 0x108
   2011c:	cmp	r3, #0
   20120:	ble	20160 <dta_end_data+0x734>
   20124:	mov	r1, r5
   20128:	mov	r0, fp
   2012c:	bl	44cc <readstat_get_value_label@plt>
   20130:	add	r5, r5, #1
   20134:	mov	r3, r0
   20138:	ldr	r2, [r0, #28]
   2013c:	ldr	r0, [r0, #8]
   20140:	cmp	r2, #8
   20144:	movcs	r2, #8
   20148:	ldr	r1, [r3, #24]
   2014c:	add	r0, r7, r0, lsl #3
   20150:	bl	3f20 <memcpy@plt>
   20154:	ldr	r3, [fp, #264]	; 0x108
   20158:	cmp	r5, r3
   2015c:	blt	20124 <dta_end_data+0x6f8>
   20160:	ldrsh	r2, [sp, #48]	; 0x30
   20164:	mov	r1, r7
   20168:	mov	r0, r4
   2016c:	bl	4454 <readstat_write_bytes@plt>
   20170:	subs	r5, r0, #0
   20174:	bne	1fe88 <dta_end_data+0x45c>
   20178:	ldr	r3, [r4, #40]	; 0x28
   2017c:	add	r8, r8, #1
   20180:	cmp	r8, r3
   20184:	blt	1fe20 <dta_end_data+0x3f4>
   20188:	b	1fe90 <dta_end_data+0x464>
   2018c:	mov	r5, #20
   20190:	b	1fe88 <dta_end_data+0x45c>
   20194:	mov	r3, #0
   20198:	b	1fb48 <dta_end_data+0x11c>
   2019c:	ldr	r9, [sp, #4]
   201a0:	mov	r6, fp
   201a4:	ldr	r5, [sp, #20]
   201a8:	b	1fc34 <dta_end_data+0x208>
   201ac:	ldrb	r3, [r9, #192]	; 0xc0
   201b0:	ands	r3, r3, #4
   201b4:	moveq	r5, r3
   201b8:	beq	1fc64 <dta_end_data+0x238>
   201bc:	mov	r8, #0
   201c0:	mov	r6, r8
   201c4:	str	r8, [sp, #8]
   201c8:	ldr	r1, [pc, #88]	; 20228 <dta_end_data+0x7fc>
   201cc:	mov	r0, r4
   201d0:	add	r1, pc, r1
   201d4:	bl	4154 <readstat_write_string@plt>
   201d8:	mov	r5, r0
   201dc:	b	1fc34 <dta_end_data+0x208>
   201e0:	mov	r5, #0
   201e4:	b	1fc80 <dta_end_data+0x254>
   201e8:	ldr	r1, [pc, #60]	; 2022c <dta_end_data+0x800>
   201ec:	mov	r0, r4
   201f0:	add	r1, pc, r1
   201f4:	bl	4154 <readstat_write_string@plt>
   201f8:	subs	r5, r0, #0
   201fc:	bne	1fa44 <dta_end_data+0x18>
   20200:	b	1fa64 <dta_end_data+0x38>
   20204:	.word	0x00008924
   20208:	.word	0xfffffca4
   2020c:	.word	0x0000890c
   20210:	.word	0x000088fc
   20214:	.word	0x00008850
   20218:	.word	0x000086d4
   2021c:	.word	0x00008690
   20220:	.word	0x00008674
   20224:	.word	0x00008390
   20228:	.word	0x00008304
   2022c:	.word	0x000082d8

00020230 <dta_118_write_string_ref>:
   20230:	cmp	r2, #0
   20234:	beq	20298 <dta_118_write_string_ref+0x68>
   20238:	ldr	r3, [r2]
   2023c:	push	{r4, r5, r6, lr}
   20240:	sub	sp, sp, #8
   20244:	ldr	r6, [r2, #8]
   20248:	ldr	r5, [r2, #12]
   2024c:	strh	r3, [r0]
   20250:	mov	r4, r0
   20254:	str	r5, [sp, #4]
   20258:	str	r6, [sp]
   2025c:	bl	3eb4 <machine_is_little_endian@plt>
   20260:	mov	r3, #0
   20264:	cmp	r0, #0
   20268:	lsleq	r5, r5, #16
   2026c:	orreq	r5, r5, r6, lsr #16
   20270:	streq	r5, [sp, #4]
   20274:	lsleq	r6, r6, #16
   20278:	ldrh	r2, [sp, #4]
   2027c:	streq	r6, [sp]
   20280:	ldr	r0, [sp]
   20284:	strh	r2, [r4, #6]
   20288:	str	r0, [r4, #2]
   2028c:	mov	r0, r3
   20290:	add	sp, sp, #8
   20294:	pop	{r4, r5, r6, pc}
   20298:	mov	r3, #34	; 0x22
   2029c:	mov	r0, r3
   202a0:	bx	lr

000202a4 <dta_emit_header_time_stamp.part.22>:
   202a4:	push	{r4, r5, r6, r7, r8, r9, lr}
   202a8:	mov	r7, r0
   202ac:	sub	sp, sp, #76	; 0x4c
   202b0:	ldr	r3, [r7, #20]
   202b4:	add	r0, sp, #72	; 0x48
   202b8:	mov	r6, r1
   202bc:	str	r3, [r0, #-52]!	; 0xffffffcc
   202c0:	bl	4160 <localtime@plt>
   202c4:	ldr	r9, [r6, #16]
   202c8:	add	r5, sp, #24
   202cc:	mov	r1, r9
   202d0:	mov	r4, r0
   202d4:	mov	r0, #1
   202d8:	bl	3d58 <calloc@plt>
   202dc:	ldr	lr, [pc, #308]	; 20418 <dta_emit_header_time_stamp.part.22+0x174>
   202e0:	mov	ip, r5
   202e4:	add	lr, pc, lr
   202e8:	cmp	r4, #0
   202ec:	moveq	r4, #39	; 0x27
   202f0:	mov	r8, r0
   202f4:	ldm	lr!, {r0, r1, r2, r3}
   202f8:	stmia	ip!, {r0, r1, r2, r3}
   202fc:	ldm	lr!, {r0, r1, r2, r3}
   20300:	stmia	ip!, {r0, r1, r2, r3}
   20304:	ldm	lr, {r0, r1, r2, r3}
   20308:	stm	ip, {r0, r1, r2, r3}
   2030c:	beq	20374 <dta_emit_header_time_stamp.part.22+0xd0>
   20310:	cmp	r8, #0
   20314:	moveq	r4, #3
   20318:	beq	20374 <dta_emit_header_time_stamp.part.22+0xd0>
   2031c:	ldr	r2, [r4, #4]
   20320:	ldr	r3, [r4, #12]
   20324:	str	r2, [sp, #12]
   20328:	ldr	r2, [r4, #8]
   2032c:	mov	r1, r9
   20330:	str	r2, [sp, #8]
   20334:	ldr	r2, [r4, #20]
   20338:	mov	r0, r8
   2033c:	add	r2, r2, #1888	; 0x760
   20340:	add	r2, r2, #12
   20344:	str	r2, [sp, #4]
   20348:	ldr	ip, [r4, #16]
   2034c:	ldr	r2, [pc, #200]	; 2041c <dta_emit_header_time_stamp.part.22+0x178>
   20350:	add	r5, r5, ip, lsl #2
   20354:	add	r2, pc, r2
   20358:	str	r5, [sp]
   2035c:	bl	4280 <snprintf@plt>
   20360:	uxtb	r0, r0
   20364:	cmp	r0, #0
   20368:	strb	r0, [sp, #19]
   2036c:	moveq	r4, #13
   20370:	bne	20388 <dta_emit_header_time_stamp.part.22+0xe4>
   20374:	mov	r0, r8
   20378:	bl	3ec0 <free@plt>
   2037c:	mov	r0, r4
   20380:	add	sp, sp, #76	; 0x4c
   20384:	pop	{r4, r5, r6, r7, r8, r9, pc}
   20388:	ldrb	r3, [r6, #192]	; 0xc0
   2038c:	tst	r3, #4
   20390:	beq	20400 <dta_emit_header_time_stamp.part.22+0x15c>
   20394:	ldr	r1, [pc, #132]	; 20420 <dta_emit_header_time_stamp.part.22+0x17c>
   20398:	mov	r0, r7
   2039c:	add	r1, pc, r1
   203a0:	bl	4154 <readstat_write_string@plt>
   203a4:	subs	r4, r0, #0
   203a8:	bne	20374 <dta_emit_header_time_stamp.part.22+0xd0>
   203ac:	mov	r2, #1
   203b0:	add	r1, sp, #19
   203b4:	mov	r0, r7
   203b8:	bl	4454 <readstat_write_bytes@plt>
   203bc:	subs	r4, r0, #0
   203c0:	bne	20374 <dta_emit_header_time_stamp.part.22+0xd0>
   203c4:	ldrb	r2, [sp, #19]
   203c8:	mov	r1, r8
   203cc:	mov	r0, r7
   203d0:	bl	4454 <readstat_write_bytes@plt>
   203d4:	subs	r4, r0, #0
   203d8:	bne	20374 <dta_emit_header_time_stamp.part.22+0xd0>
   203dc:	ldrb	r3, [r6, #192]	; 0xc0
   203e0:	tst	r3, #4
   203e4:	beq	20374 <dta_emit_header_time_stamp.part.22+0xd0>
   203e8:	ldr	r1, [pc, #52]	; 20424 <dta_emit_header_time_stamp.part.22+0x180>
   203ec:	mov	r0, r7
   203f0:	add	r1, pc, r1
   203f4:	bl	4154 <readstat_write_string@plt>
   203f8:	mov	r4, r0
   203fc:	b	20374 <dta_emit_header_time_stamp.part.22+0xd0>
   20400:	ldr	r2, [r6, #16]
   20404:	mov	r0, r7
   20408:	mov	r1, r8
   2040c:	bl	4454 <readstat_write_bytes@plt>
   20410:	mov	r4, r0
   20414:	b	20374 <dta_emit_header_time_stamp.part.22+0xd0>
   20418:	.word	0x0000812c
   2041c:	.word	0x000081a0
   20420:	.word	0x00007e40
   20424:	.word	0x00007df8

00020428 <dta_118_variable_ok>:
   20428:	push	{r4, lr}
   2042c:	bl	4364 <readstat_variable_get_name@plt>
   20430:	mov	r4, r0
   20434:	bl	41fc <strlen@plt>
   20438:	cmp	r0, #129	; 0x81
   2043c:	bls	20448 <dta_118_variable_ok+0x20>
   20440:	mov	r0, #28
   20444:	pop	{r4, pc}
   20448:	ldrb	r0, [r4]
   2044c:	cmp	r0, #0
   20450:	bne	2045c <dta_118_variable_ok+0x34>
   20454:	mov	r0, #38	; 0x26
   20458:	pop	{r4, pc}
   2045c:	mov	r1, r4
   20460:	mov	r3, r0
   20464:	bic	r2, r3, #32
   20468:	cmp	r3, #95	; 0x5f
   2046c:	sub	r2, r2, #65	; 0x41
   20470:	beq	20488 <dta_118_variable_ok+0x60>
   20474:	cmp	r2, #25
   20478:	sub	r3, r3, #48	; 0x30
   2047c:	bls	20488 <dta_118_variable_ok+0x60>
   20480:	cmp	r3, #9
   20484:	bhi	204c0 <dta_118_variable_ok+0x98>
   20488:	ldrb	r3, [r1, #1]!
   2048c:	cmp	r3, #0
   20490:	bne	20464 <dta_118_variable_ok+0x3c>
   20494:	cmp	r0, #95	; 0x5f
   20498:	beq	204b4 <dta_118_variable_ok+0x8c>
   2049c:	bic	r0, r0, #32
   204a0:	sub	r0, r0, #65	; 0x41
   204a4:	cmp	r0, #25
   204a8:	bls	204b4 <dta_118_variable_ok+0x8c>
   204ac:	mov	r0, #25
   204b0:	pop	{r4, pc}
   204b4:	mov	r0, r4
   204b8:	pop	{r4, lr}
   204bc:	b	1f4f8 <dta_validate_name_unreserved>
   204c0:	mov	r0, #26
   204c4:	pop	{r4, pc}

000204c8 <dta_111_variable_width>:
   204c8:	cmp	r0, #0
   204cc:	bne	204e4 <dta_111_variable_width+0x1c>
   204d0:	sub	r0, r1, #1
   204d4:	cmp	r0, #243	; 0xf3
   204d8:	movls	r0, r1
   204dc:	movhi	r0, #244	; 0xf4
   204e0:	bx	lr
   204e4:	cmp	r0, #5
   204e8:	beq	2050c <dta_111_variable_width+0x44>
   204ec:	sub	r3, r0, #3
   204f0:	cmp	r3, #1
   204f4:	bls	20514 <dta_111_variable_width+0x4c>
   204f8:	cmp	r0, #2
   204fc:	subne	r0, r0, #1
   20500:	clzne	r0, r0
   20504:	lsrne	r0, r0, #5
   20508:	bx	lr
   2050c:	mov	r0, #8
   20510:	bx	lr
   20514:	mov	r0, #4
   20518:	bx	lr

0002051c <dta_old_variable_width>:
   2051c:	cmp	r0, #0
   20520:	bne	20538 <dta_old_variable_width+0x1c>
   20524:	sub	r0, r1, #1
   20528:	cmp	r0, #127	; 0x7f
   2052c:	movls	r0, r1
   20530:	movhi	r0, #128	; 0x80
   20534:	bx	lr
   20538:	cmp	r0, #5
   2053c:	beq	20560 <dta_old_variable_width+0x44>
   20540:	sub	r3, r0, #3
   20544:	cmp	r3, #1
   20548:	bls	20568 <dta_old_variable_width+0x4c>
   2054c:	cmp	r0, #2
   20550:	subne	r0, r0, #1
   20554:	clzne	r0, r0
   20558:	lsrne	r0, r0, #5
   2055c:	bx	lr
   20560:	mov	r0, #8
   20564:	bx	lr
   20568:	mov	r0, #4
   2056c:	bx	lr

00020570 <dta_old_write_missing_numeric>:
   20570:	ldr	r3, [r1]
   20574:	mov	r2, r0
   20578:	cmp	r3, #1
   2057c:	moveq	r3, #127	; 0x7f
   20580:	strbeq	r3, [r0]
   20584:	beq	205c0 <dta_old_write_missing_numeric+0x50>
   20588:	cmp	r3, #2
   2058c:	ldrheq	r3, [pc, #96]	; 205f4 <dta_old_write_missing_numeric+0x84>
   20590:	strheq	r3, [r0]
   20594:	beq	205c0 <dta_old_write_missing_numeric+0x50>
   20598:	cmp	r3, #3
   2059c:	mvneq	r3, #-2147483648	; 0x80000000
   205a0:	streq	r3, [r0]
   205a4:	beq	205c0 <dta_old_write_missing_numeric+0x50>
   205a8:	cmp	r3, #4
   205ac:	moveq	r3, #2130706432	; 0x7f000000
   205b0:	streq	r3, [r0]
   205b4:	beq	205c0 <dta_old_write_missing_numeric+0x50>
   205b8:	cmp	r3, #5
   205bc:	beq	205c8 <dta_old_write_missing_numeric+0x58>
   205c0:	mov	r0, #0
   205c4:	bx	lr
   205c8:	sub	sp, sp, #8
   205cc:	ldr	r1, [pc, #36]	; 205f8 <dta_old_write_missing_numeric+0x88>
   205d0:	add	r3, sp, #8
   205d4:	mov	r0, #0
   205d8:	strd	r0, [r3, #-8]!
   205dc:	ldm	r3!, {r0, r1}
   205e0:	str	r0, [r2]
   205e4:	str	r1, [r2, #4]
   205e8:	mov	r0, #0
   205ec:	add	sp, sp, #8
   205f0:	bx	lr
   205f4:	.word	0x00007fff
   205f8:	.word	0x7fe00000

000205fc <dta_old_variable_ok>:
   205fc:	push	{r4, lr}
   20600:	bl	4364 <readstat_variable_get_name@plt>
   20604:	mov	r4, r0
   20608:	bl	41fc <strlen@plt>
   2060c:	cmp	r0, #9
   20610:	bls	2061c <dta_old_variable_ok+0x20>
   20614:	mov	r0, #28
   20618:	pop	{r4, pc}
   2061c:	ldrb	r0, [r4]
   20620:	cmp	r0, #0
   20624:	bne	20630 <dta_old_variable_ok+0x34>
   20628:	mov	r0, #38	; 0x26
   2062c:	pop	{r4, pc}
   20630:	mov	r1, r4
   20634:	mov	r3, r0
   20638:	bic	r2, r3, #32
   2063c:	cmp	r3, #95	; 0x5f
   20640:	sub	r2, r2, #65	; 0x41
   20644:	beq	2065c <dta_old_variable_ok+0x60>
   20648:	cmp	r2, #25
   2064c:	sub	r3, r3, #48	; 0x30
   20650:	bls	2065c <dta_old_variable_ok+0x60>
   20654:	cmp	r3, #9
   20658:	bhi	20694 <dta_old_variable_ok+0x98>
   2065c:	ldrb	r3, [r1, #1]!
   20660:	cmp	r3, #0
   20664:	bne	20638 <dta_old_variable_ok+0x3c>
   20668:	cmp	r0, #95	; 0x5f
   2066c:	beq	20688 <dta_old_variable_ok+0x8c>
   20670:	bic	r0, r0, #32
   20674:	sub	r0, r0, #65	; 0x41
   20678:	cmp	r0, #25
   2067c:	bls	20688 <dta_old_variable_ok+0x8c>
   20680:	mov	r0, #25
   20684:	pop	{r4, pc}
   20688:	mov	r0, r4
   2068c:	pop	{r4, lr}
   20690:	b	1f4f8 <dta_validate_name_unreserved>
   20694:	mov	r0, #26
   20698:	pop	{r4, pc}

0002069c <dta_110_variable_ok>:
   2069c:	push	{r4, lr}
   206a0:	bl	4364 <readstat_variable_get_name@plt>
   206a4:	mov	r4, r0
   206a8:	bl	41fc <strlen@plt>
   206ac:	cmp	r0, #33	; 0x21
   206b0:	bls	206bc <dta_110_variable_ok+0x20>
   206b4:	mov	r0, #28
   206b8:	pop	{r4, pc}
   206bc:	ldrb	r0, [r4]
   206c0:	cmp	r0, #0
   206c4:	bne	206d0 <dta_110_variable_ok+0x34>
   206c8:	mov	r0, #38	; 0x26
   206cc:	pop	{r4, pc}
   206d0:	mov	r1, r4
   206d4:	mov	r3, r0
   206d8:	bic	r2, r3, #32
   206dc:	cmp	r3, #95	; 0x5f
   206e0:	sub	r2, r2, #65	; 0x41
   206e4:	beq	206fc <dta_110_variable_ok+0x60>
   206e8:	cmp	r2, #25
   206ec:	sub	r3, r3, #48	; 0x30
   206f0:	bls	206fc <dta_110_variable_ok+0x60>
   206f4:	cmp	r3, #9
   206f8:	bhi	20734 <dta_110_variable_ok+0x98>
   206fc:	ldrb	r3, [r1, #1]!
   20700:	cmp	r3, #0
   20704:	bne	206d8 <dta_110_variable_ok+0x3c>
   20708:	cmp	r0, #95	; 0x5f
   2070c:	beq	20728 <dta_110_variable_ok+0x8c>
   20710:	bic	r0, r0, #32
   20714:	sub	r0, r0, #65	; 0x41
   20718:	cmp	r0, #25
   2071c:	bls	20728 <dta_110_variable_ok+0x8c>
   20720:	mov	r0, #25
   20724:	pop	{r4, pc}
   20728:	mov	r0, r4
   2072c:	pop	{r4, lr}
   20730:	b	1f4f8 <dta_validate_name_unreserved>
   20734:	mov	r0, #26
   20738:	pop	{r4, pc}

0002073c <dta_write_double>:
   2073c:	vldr	d7, [pc, #216]	; 2081c <dta_write_double+0xe0>
   20740:	vcmpe.f64	d0, d7
   20744:	vmrs	APSR_nzcv, fpscr
   20748:	ble	20758 <dta_write_double+0x1c>
   2074c:	mov	r2, #20
   20750:	mov	r0, r2
   20754:	bx	lr
   20758:	vcmp.f64	d0, d0
   2075c:	sub	sp, sp, #24
   20760:	mov	ip, r0
   20764:	vmrs	APSR_nzcv, fpscr
   20768:	bvs	20790 <dta_write_double+0x54>
   2076c:	add	r3, sp, #24
   20770:	mov	r2, #0
   20774:	vstmdb	r3!, {d0}
   20778:	ldm	r3!, {r0, r1}
   2077c:	str	r0, [ip]
   20780:	str	r1, [ip, #4]
   20784:	mov	r0, r2
   20788:	add	sp, sp, #24
   2078c:	bx	lr
   20790:	ldr	r3, [r1]
   20794:	cmp	r3, #1
   20798:	moveq	r3, #101	; 0x65
   2079c:	strbeq	r3, [r0]
   207a0:	moveq	r2, #0
   207a4:	beq	20784 <dta_write_double+0x48>
   207a8:	cmp	r3, #2
   207ac:	beq	20808 <dta_write_double+0xcc>
   207b0:	cmp	r3, #3
   207b4:	mvneq	r3, #-2147483622	; 0x8000001a
   207b8:	streq	r3, [r0]
   207bc:	moveq	r2, #0
   207c0:	beq	20784 <dta_write_double+0x48>
   207c4:	cmp	r3, #4
   207c8:	moveq	r3, #2130706432	; 0x7f000000
   207cc:	streq	r3, [r0]
   207d0:	moveq	r2, #0
   207d4:	beq	20784 <dta_write_double+0x48>
   207d8:	cmp	r3, #5
   207dc:	movne	r2, #0
   207e0:	bne	20784 <dta_write_double+0x48>
   207e4:	ldr	r1, [pc, #56]	; 20824 <dta_write_double+0xe8>
   207e8:	mov	r0, #0
   207ec:	add	r3, sp, #24
   207f0:	mov	r2, #0
   207f4:	strd	r0, [r3, #-16]!
   207f8:	ldm	r3!, {r0, r1}
   207fc:	str	r0, [ip]
   20800:	str	r1, [ip, #4]
   20804:	b	20784 <dta_write_double+0x48>
   20808:	ldrh	r3, [pc, #8]	; 20818 <dta_write_double+0xdc>
   2080c:	mov	r2, #0
   20810:	strh	r3, [r0]
   20814:	b	20784 <dta_write_double+0x48>
   20818:	.word	0x00007fe5
   2081c:	.word	0xffffffff
   20820:	.word	0x7fdfffff
   20824:	.word	0x7fe00000

00020828 <dta_write_float>:
   20828:	vldr	s15, [pc, #200]	; 208f8 <dta_write_float+0xd0>
   2082c:	vcmpe.f32	s0, s15
   20830:	vmrs	APSR_nzcv, fpscr
   20834:	movgt	r3, #20
   20838:	ble	20844 <dta_write_float+0x1c>
   2083c:	mov	r0, r3
   20840:	bx	lr
   20844:	vcmp.f32	s0, s0
   20848:	mov	r2, r0
   2084c:	vmrs	APSR_nzcv, fpscr
   20850:	vmovvc	r3, s0
   20854:	strvc	r3, [r0]
   20858:	movvc	r3, #0
   2085c:	bvc	2083c <dta_write_float+0x14>
   20860:	ldr	r3, [r1]
   20864:	cmp	r3, #1
   20868:	moveq	r3, #101	; 0x65
   2086c:	strbeq	r3, [r0]
   20870:	moveq	r3, #0
   20874:	beq	2083c <dta_write_float+0x14>
   20878:	cmp	r3, #2
   2087c:	beq	208e4 <dta_write_float+0xbc>
   20880:	cmp	r3, #3
   20884:	mvneq	r3, #-2147483622	; 0x8000001a
   20888:	streq	r3, [r0]
   2088c:	moveq	r3, #0
   20890:	beq	2083c <dta_write_float+0x14>
   20894:	cmp	r3, #4
   20898:	moveq	r3, #2130706432	; 0x7f000000
   2089c:	streq	r3, [r0]
   208a0:	moveq	r3, #0
   208a4:	beq	2083c <dta_write_float+0x14>
   208a8:	cmp	r3, #5
   208ac:	movne	r3, #0
   208b0:	bne	2083c <dta_write_float+0x14>
   208b4:	sub	sp, sp, #16
   208b8:	ldr	r1, [pc, #60]	; 208fc <dta_write_float+0xd4>
   208bc:	add	ip, sp, #16
   208c0:	mov	r0, #0
   208c4:	mov	r3, #0
   208c8:	strd	r0, [ip, #-8]!
   208cc:	ldm	ip!, {r0, r1}
   208d0:	str	r0, [r2]
   208d4:	str	r1, [r2, #4]
   208d8:	mov	r0, r3
   208dc:	add	sp, sp, #16
   208e0:	bx	lr
   208e4:	ldrh	r1, [pc, #8]	; 208f4 <dta_write_float+0xcc>
   208e8:	mov	r3, #0
   208ec:	strh	r1, [r0]
   208f0:	b	2083c <dta_write_float+0x14>
   208f4:	.word	0x00007fe5
   208f8:	.word	0x7effffff
   208fc:	.word	0x7fe00000

00020900 <dta_begin_data>:
   20900:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20904:	add	fp, sp, #32
   20908:	sub	sp, sp, #188	; 0xbc
   2090c:	ldr	r3, [r0, #308]	; 0x134
   20910:	cmp	r3, #0
   20914:	moveq	r4, #14
   20918:	bne	20928 <dta_begin_data+0x28>
   2091c:	mov	r0, r4
   20920:	sub	sp, fp, #32
   20924:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20928:	mov	r8, r0
   2092c:	mov	r0, #0
   20930:	bl	455c <dta_ctx_alloc@plt>
   20934:	ldr	r4, [r8, #80]	; 0x50
   20938:	ldr	r6, [r8, #28]
   2093c:	asr	r5, r4, #31
   20940:	mov	r9, r0
   20944:	bl	3eb4 <machine_is_little_endian@plt>
   20948:	mov	r3, #0
   2094c:	str	r3, [sp, #12]
   20950:	str	r3, [sp, #8]
   20954:	ldrb	ip, [r8, #8]
   20958:	mov	r2, r4
   2095c:	mov	r3, r5
   20960:	mov	r1, r6
   20964:	str	ip, [sp, #4]
   20968:	cmp	r0, #0
   2096c:	moveq	r0, #1
   20970:	movne	r0, #2
   20974:	str	r0, [sp]
   20978:	mov	r0, r9
   2097c:	bl	41cc <dta_ctx_init@plt>
   20980:	subs	r4, r0, #0
   20984:	beq	20994 <dta_begin_data+0x94>
   20988:	mov	r0, r9
   2098c:	bl	3e78 <dta_ctx_free@plt>
   20990:	b	2091c <dta_begin_data+0x1c>
   20994:	ldrb	r4, [r9, #192]	; 0xc0
   20998:	ands	r4, r4, #4
   2099c:	bne	20b38 <dta_begin_data+0x238>
   209a0:	ldr	r3, [r8, #8]
   209a4:	sub	r2, fp, #164	; 0xa4
   209a8:	str	r2, [fp, #-180]	; 0xffffff4c
   209ac:	str	r4, [fp, #-164]	; 0xffffff5c
   209b0:	str	r4, [fp, #-160]	; 0xffffff60
   209b4:	strb	r3, [fp, #-164]	; 0xffffff5c
   209b8:	strh	r4, [fp, #-156]	; 0xffffff64
   209bc:	bl	3eb4 <machine_is_little_endian@plt>
   209c0:	ldr	r3, [r8, #28]
   209c4:	ldrh	ip, [r8, #80]	; 0x50
   209c8:	ldrh	r1, [r8, #82]	; 0x52
   209cc:	mov	r2, #1
   209d0:	strb	r4, [fp, #-161]	; 0xffffff5f
   209d4:	strh	r3, [fp, #-160]	; 0xffffff60
   209d8:	strh	ip, [fp, #-158]	; 0xffffff62
   209dc:	strh	r1, [fp, #-156]	; 0xffffff64
   209e0:	strb	r2, [fp, #-162]	; 0xffffff5e
   209e4:	cmp	r0, #0
   209e8:	moveq	r0, r2
   209ec:	movne	r0, #2
   209f0:	cmp	r3, #32768	; 0x8000
   209f4:	strb	r0, [fp, #-163]	; 0xffffff5d
   209f8:	blt	20d00 <dta_begin_data+0x400>
   209fc:	ldrb	r4, [r9, #192]	; 0xc0
   20a00:	ands	r4, r4, #4
   20a04:	bne	20d48 <dta_begin_data+0x448>
   20a08:	ldr	r3, [r9, #148]	; 0x94
   20a0c:	cmp	r3, #0
   20a10:	ble	21590 <dta_begin_data+0xc90>
   20a14:	ldr	r7, [pc, #3916]	; 21968 <dta_begin_data+0x1068>
   20a18:	ldr	r6, [pc, #3916]	; 2196c <dta_begin_data+0x106c>
   20a1c:	ldr	r5, [pc, #3916]	; 21970 <dta_begin_data+0x1070>
   20a20:	mov	r4, #0
   20a24:	mov	sl, #251	; 0xfb
   20a28:	mov	r1, r4
   20a2c:	mov	r0, r8
   20a30:	bl	437c <readstat_get_variable@plt>
   20a34:	ldrb	r3, [r9, #20]
   20a38:	cmp	r3, #111	; 0x6f
   20a3c:	ldr	r2, [r0]
   20a40:	beq	21284 <dta_begin_data+0x984>
   20a44:	cmp	r3, #117	; 0x75
   20a48:	ldr	r3, [r0, #1596]	; 0x63c
   20a4c:	bne	20ca8 <dta_begin_data+0x3a8>
   20a50:	cmp	r2, #6
   20a54:	addls	pc, pc, r2, lsl #2
   20a58:	b	21224 <dta_begin_data+0x924>
   20a5c:	b	20a7c <dta_begin_data+0x17c>
   20a60:	b	20b08 <dta_begin_data+0x208>
   20a64:	b	20b30 <dta_begin_data+0x230>
   20a68:	b	20b28 <dta_begin_data+0x228>
   20a6c:	b	20b20 <dta_begin_data+0x220>
   20a70:	b	20b18 <dta_begin_data+0x218>
   20a74:	b	20b10 <dta_begin_data+0x210>
   20a78:	add	r3, r3, #127	; 0x7f
   20a7c:	uxth	r3, r3
   20a80:	ldr	r1, [r9, #148]	; 0x94
   20a84:	ldr	r0, [r9, #28]
   20a88:	lsl	r2, r4, #1
   20a8c:	add	r4, r4, #1
   20a90:	cmp	r4, r1
   20a94:	strh	r3, [r0, r2]
   20a98:	blt	20a28 <dta_begin_data+0x128>
   20a9c:	cmp	r1, #0
   20aa0:	ble	21590 <dta_begin_data+0xc90>
   20aa4:	mov	sl, #0
   20aa8:	mov	r5, sl
   20aac:	mov	r7, #2
   20ab0:	mov	r6, #1
   20ab4:	b	20ad0 <dta_begin_data+0x1d0>
   20ab8:	cmp	r3, #2
   20abc:	beq	21328 <dta_begin_data+0xa28>
   20ac0:	add	r5, r5, #1
   20ac4:	cmp	r1, r5
   20ac8:	add	sl, sl, #2
   20acc:	ble	21354 <dta_begin_data+0xa54>
   20ad0:	ldr	r3, [r9, #24]
   20ad4:	cmp	r3, #1
   20ad8:	bne	20ab8 <dta_begin_data+0x1b8>
   20adc:	ldr	r3, [r9, #28]
   20ae0:	mov	r2, r6
   20ae4:	ldr	r1, [fp, #-180]	; 0xffffff4c
   20ae8:	ldrh	r3, [r3, sl]
   20aec:	mov	r0, r8
   20af0:	strb	r3, [fp, #-164]	; 0xffffff5c
   20af4:	bl	4454 <readstat_write_bytes@plt>
   20af8:	cmp	r0, #0
   20afc:	bne	21588 <dta_begin_data+0xc88>
   20b00:	ldr	r1, [r9, #148]	; 0x94
   20b04:	b	20ac0 <dta_begin_data+0x1c0>
   20b08:	ldr	r3, [pc, #3684]	; 21974 <dta_begin_data+0x1074>
   20b0c:	b	20a80 <dta_begin_data+0x180>
   20b10:	mov	r3, #32768	; 0x8000
   20b14:	b	20a80 <dta_begin_data+0x180>
   20b18:	mov	r3, r7
   20b1c:	b	20a80 <dta_begin_data+0x180>
   20b20:	mov	r3, r6
   20b24:	b	20a80 <dta_begin_data+0x180>
   20b28:	mov	r3, r5
   20b2c:	b	20a80 <dta_begin_data+0x180>
   20b30:	ldr	r3, [pc, #3648]	; 21978 <dta_begin_data+0x1078>
   20b34:	b	20a80 <dta_begin_data+0x180>
   20b38:	ldr	r1, [pc, #3644]	; 2197c <dta_begin_data+0x107c>
   20b3c:	mov	r0, r8
   20b40:	add	r1, pc, r1
   20b44:	bl	4154 <readstat_write_string@plt>
   20b48:	subs	r4, r0, #0
   20b4c:	bne	20988 <dta_begin_data+0x88>
   20b50:	ldrb	r3, [r9, #192]	; 0xc0
   20b54:	tst	r3, #4
   20b58:	bne	2122c <dta_begin_data+0x92c>
   20b5c:	ldr	r2, [pc, #3612]	; 21980 <dta_begin_data+0x1080>
   20b60:	sub	r4, fp, #164	; 0xa4
   20b64:	mov	r0, r4
   20b68:	ldr	r3, [r8, #8]
   20b6c:	add	r2, pc, r2
   20b70:	mov	r1, #128	; 0x80
   20b74:	str	r4, [fp, #-180]	; 0xffffff4c
   20b78:	bl	4280 <snprintf@plt>
   20b7c:	mov	r1, r4
   20b80:	mov	r0, r8
   20b84:	bl	4154 <readstat_write_string@plt>
   20b88:	subs	r4, r0, #0
   20b8c:	bne	20988 <dta_begin_data+0x88>
   20b90:	bl	3eb4 <machine_is_little_endian@plt>
   20b94:	cmp	r0, #0
   20b98:	beq	21348 <dta_begin_data+0xa48>
   20b9c:	ldr	r3, [pc, #3552]	; 21984 <dta_begin_data+0x1084>
   20ba0:	add	r3, pc, r3
   20ba4:	ldr	r2, [pc, #3548]	; 21988 <dta_begin_data+0x1088>
   20ba8:	mov	r1, #3
   20bac:	add	r2, pc, r2
   20bb0:	mov	r0, r8
   20bb4:	stm	sp, {r1, r2}
   20bb8:	ldr	r2, [pc, #3532]	; 2198c <dta_begin_data+0x108c>
   20bbc:	mov	r1, r9
   20bc0:	add	r2, pc, r2
   20bc4:	bl	1f840 <dta_write_chunk>
   20bc8:	subs	r4, r0, #0
   20bcc:	bne	20988 <dta_begin_data+0x88>
   20bd0:	ldr	r3, [r8, #8]
   20bd4:	sub	r6, fp, #36	; 0x24
   20bd8:	cmp	r3, #118	; 0x76
   20bdc:	ldr	r3, [r8, #28]
   20be0:	ble	214f0 <dta_begin_data+0xbf0>
   20be4:	ldr	r1, [pc, #3492]	; 21990 <dta_begin_data+0x1090>
   20be8:	ldr	r2, [pc, #3492]	; 21994 <dta_begin_data+0x1094>
   20bec:	add	r1, pc, r1
   20bf0:	mov	r0, #4
   20bf4:	add	r2, pc, r2
   20bf8:	str	r3, [r6, #-136]!	; 0xffffff78
   20bfc:	stm	sp, {r0, r1}
   20c00:	mov	r3, r6
   20c04:	mov	r1, r9
   20c08:	mov	r0, r8
   20c0c:	bl	1f840 <dta_write_chunk>
   20c10:	subs	r4, r0, #0
   20c14:	bne	20988 <dta_begin_data+0x88>
   20c18:	ldr	r3, [r8, #8]
   20c1c:	cmp	r3, #117	; 0x75
   20c20:	ble	215e4 <dta_begin_data+0xce4>
   20c24:	ldr	r4, [r8, #80]	; 0x50
   20c28:	ldr	r1, [pc, #3432]	; 21998 <dta_begin_data+0x1098>
   20c2c:	ldr	r2, [pc, #3432]	; 2199c <dta_begin_data+0x109c>
   20c30:	asr	r5, r4, #31
   20c34:	add	r1, pc, r1
   20c38:	mov	r0, #8
   20c3c:	mov	r3, r6
   20c40:	add	r2, pc, r2
   20c44:	strd	r4, [fp, #-172]	; 0xffffff54
   20c48:	stm	sp, {r0, r1}
   20c4c:	mov	r1, r9
   20c50:	mov	r0, r8
   20c54:	bl	1f840 <dta_write_chunk>
   20c58:	subs	r4, r0, #0
   20c5c:	bne	20988 <dta_begin_data+0x88>
   20c60:	mov	r1, r9
   20c64:	mov	r0, r8
   20c68:	bl	1f328 <dta_emit_header_data_label>
   20c6c:	subs	r4, r0, #0
   20c70:	bne	20988 <dta_begin_data+0x88>
   20c74:	ldr	r3, [r9, #16]
   20c78:	cmp	r3, #0
   20c7c:	bne	21ae8 <dta_begin_data+0x11e8>
   20c80:	ldrb	r3, [r9, #192]	; 0xc0
   20c84:	tst	r3, #4
   20c88:	beq	20a08 <dta_begin_data+0x108>
   20c8c:	ldr	r1, [pc, #3340]	; 219a0 <dta_begin_data+0x10a0>
   20c90:	mov	r0, r8
   20c94:	add	r1, pc, r1
   20c98:	bl	4154 <readstat_write_string@plt>
   20c9c:	subs	r4, r0, #0
   20ca0:	bne	20988 <dta_begin_data+0x88>
   20ca4:	b	209fc <dta_begin_data+0xfc>
   20ca8:	cmp	r2, #6
   20cac:	addls	pc, pc, r2, lsl #2
   20cb0:	b	21224 <dta_begin_data+0x924>
   20cb4:	b	20a78 <dta_begin_data+0x178>
   20cb8:	b	20cd8 <dta_begin_data+0x3d8>
   20cbc:	b	20cf8 <dta_begin_data+0x3f8>
   20cc0:	b	20ce8 <dta_begin_data+0x3e8>
   20cc4:	b	20ce0 <dta_begin_data+0x3e0>
   20cc8:	b	20cf0 <dta_begin_data+0x3f0>
   20ccc:	b	20cd0 <dta_begin_data+0x3d0>
   20cd0:	mov	r4, #33	; 0x21
   20cd4:	b	20988 <dta_begin_data+0x88>
   20cd8:	mov	r3, #98	; 0x62
   20cdc:	b	20a80 <dta_begin_data+0x180>
   20ce0:	mov	r3, #102	; 0x66
   20ce4:	b	20a80 <dta_begin_data+0x180>
   20ce8:	mov	r3, #108	; 0x6c
   20cec:	b	20a80 <dta_begin_data+0x180>
   20cf0:	mov	r3, #100	; 0x64
   20cf4:	b	20a80 <dta_begin_data+0x180>
   20cf8:	mov	r3, #105	; 0x69
   20cfc:	b	20a80 <dta_begin_data+0x180>
   20d00:	mov	r2, #10
   20d04:	ldr	r1, [fp, #-180]	; 0xffffff4c
   20d08:	mov	r0, r8
   20d0c:	bl	4454 <readstat_write_bytes@plt>
   20d10:	cmp	r0, #0
   20d14:	bne	209fc <dta_begin_data+0xfc>
   20d18:	mov	r1, r9
   20d1c:	mov	r0, r8
   20d20:	bl	1f328 <dta_emit_header_data_label>
   20d24:	cmp	r0, #0
   20d28:	bne	209fc <dta_begin_data+0xfc>
   20d2c:	ldr	r3, [r9, #16]
   20d30:	cmp	r3, #0
   20d34:	beq	209fc <dta_begin_data+0xfc>
   20d38:	mov	r1, r9
   20d3c:	mov	r0, r8
   20d40:	bl	202a4 <dta_emit_header_time_stamp.part.22>
   20d44:	b	209fc <dta_begin_data+0xfc>
   20d48:	ldr	r3, [r9, #148]	; 0x94
   20d4c:	ldr	lr, [r9, #24]
   20d50:	ldr	r2, [r8, #4]
   20d54:	ldr	r1, [r9, #40]	; 0x28
   20d58:	mul	lr, lr, r3
   20d5c:	ldr	ip, [r9, #48]	; 0x30
   20d60:	adds	r6, r2, #123	; 0x7b
   20d64:	add	lr, lr, #33	; 0x21
   20d68:	str	r3, [fp, #-176]	; 0xffffff50
   20d6c:	mov	r3, #0
   20d70:	adc	r7, r3, #0
   20d74:	add	r5, r1, #21
   20d78:	adds	r0, r6, lr
   20d7c:	ldr	lr, [r9, #56]	; 0x38
   20d80:	adc	r1, r7, #0
   20d84:	add	ip, ip, #21
   20d88:	strd	r2, [fp, #-156]	; 0xffffff64
   20d8c:	adds	r2, r0, r5
   20d90:	adc	r3, r1, #0
   20d94:	ldr	r5, [r9, #64]	; 0x40
   20d98:	add	lr, lr, #19
   20d9c:	strd	r6, [fp, #-148]	; 0xffffff6c
   20da0:	adds	r6, r2, ip
   20da4:	adc	r7, r3, #0
   20da8:	ldr	ip, [r9, #72]	; 0x48
   20dac:	strd	r0, [fp, #-140]	; 0xffffff74
   20db0:	adds	r0, r6, lr
   20db4:	adc	r1, r7, #0
   20db8:	add	r5, r5, #39	; 0x27
   20dbc:	strd	r2, [fp, #-132]	; 0xffffff7c
   20dc0:	add	ip, ip, #35	; 0x23
   20dc4:	adds	r2, r0, r5
   20dc8:	adc	r3, r1, #0
   20dcc:	strd	r0, [fp, #-116]	; 0xffffff8c
   20dd0:	adds	r0, r2, ip
   20dd4:	adc	r1, r3, #0
   20dd8:	strd	r6, [fp, #-124]	; 0xffffff84
   20ddc:	ldr	sl, [r8, #52]	; 0x34
   20de0:	mov	r6, r0
   20de4:	mov	r7, r1
   20de8:	strd	r2, [fp, #-108]	; 0xffffff94
   20dec:	mov	r0, #0
   20df0:	mov	r3, r7
   20df4:	mov	r1, #0
   20df8:	mov	r2, r6
   20dfc:	cmp	sl, #0
   20e00:	strd	r2, [fp, #-100]	; 0xffffff9c
   20e04:	strd	r6, [fp, #-188]	; 0xffffff44
   20e08:	strd	r0, [fp, #-164]	; 0xffffff5c
   20e0c:	ldr	r3, [r8, #48]	; 0x30
   20e10:	ble	214e0 <dta_begin_data+0xbe0>
   20e14:	ldr	r1, [r9, #92]	; 0x5c
   20e18:	ldr	r2, [r9, #96]	; 0x60
   20e1c:	mov	r7, r3
   20e20:	add	r3, r1, #10
   20e24:	add	sl, r7, sl, lsl #2
   20e28:	add	r6, r3, r2, lsl #1
   20e2c:	mov	r5, #0
   20e30:	ldr	r0, [r7], #4
   20e34:	bl	41fc <strlen@plt>
   20e38:	cmp	sl, r7
   20e3c:	add	r0, r0, r6
   20e40:	add	r5, r5, r0
   20e44:	bne	20e30 <dta_begin_data+0x530>
   20e48:	ldrd	r0, [fp, #-188]	; 0xffffff44
   20e4c:	add	r2, r5, #35	; 0x23
   20e50:	adds	r0, r0, r2
   20e54:	ldr	r3, [fp, #-176]	; 0xffffff50
   20e58:	adc	r1, r1, #0
   20e5c:	cmp	r3, #0
   20e60:	strd	r0, [fp, #-188]	; 0xffffff44
   20e64:	strd	r0, [fp, #-92]	; 0xffffffa4
   20e68:	ble	21248 <dta_begin_data+0x948>
   20e6c:	mov	r4, #0
   20e70:	ldr	r7, [pc, #2812]	; 21974 <dta_begin_data+0x1074>
   20e74:	ldr	sl, [pc, #2800]	; 2196c <dta_begin_data+0x106c>
   20e78:	mov	r5, r4
   20e7c:	sub	r6, fp, #172	; 0xac
   20e80:	mov	r1, r4
   20e84:	mov	r0, r8
   20e88:	str	r5, [fp, #-172]	; 0xffffff54
   20e8c:	bl	437c <readstat_get_variable@plt>
   20e90:	ldrb	r3, [r9, #20]
   20e94:	cmp	r3, #111	; 0x6f
   20e98:	beq	211d0 <dta_begin_data+0x8d0>
   20e9c:	cmp	r3, #117	; 0x75
   20ea0:	bne	21168 <dta_begin_data+0x868>
   20ea4:	ldr	r3, [r0]
   20ea8:	ldr	r0, [r0, #1596]	; 0x63c
   20eac:	cmp	r3, #6
   20eb0:	addls	pc, pc, r3, lsl #2
   20eb4:	b	211c8 <dta_begin_data+0x8c8>
   20eb8:	b	20ed4 <dta_begin_data+0x5d4>
   20ebc:	b	210c0 <dta_begin_data+0x7c0>
   20ec0:	b	210e8 <dta_begin_data+0x7e8>
   20ec4:	b	210e0 <dta_begin_data+0x7e0>
   20ec8:	b	210d8 <dta_begin_data+0x7d8>
   20ecc:	b	210d0 <dta_begin_data+0x7d0>
   20ed0:	b	210c8 <dta_begin_data+0x7c8>
   20ed4:	uxth	r0, r0
   20ed8:	mov	r3, r5
   20edc:	mov	r2, r6
   20ee0:	mov	r1, r9
   20ee4:	bl	41e4 <dta_type_info@plt>
   20ee8:	add	r4, r4, #1
   20eec:	cmp	r0, #0
   20ef0:	ldreq	r3, [r9, #160]	; 0xa0
   20ef4:	ldreq	r2, [fp, #-172]	; 0xffffff54
   20ef8:	addeq	r3, r3, r2
   20efc:	streq	r3, [r9, #160]	; 0xa0
   20f00:	ldr	r3, [r9, #148]	; 0x94
   20f04:	cmp	r4, r3
   20f08:	blt	20e80 <dta_begin_data+0x580>
   20f0c:	ldrb	r4, [r9, #192]	; 0xc0
   20f10:	ands	r4, r4, #4
   20f14:	bne	21248 <dta_begin_data+0x948>
   20f18:	ldr	r2, [r9, #152]	; 0x98
   20f1c:	ldr	r3, [r9, #160]	; 0xa0
   20f20:	ldrd	r6, [fp, #-188]	; 0xffffff44
   20f24:	ldr	r0, [r8, #64]	; 0x40
   20f28:	mul	r3, r3, r2
   20f2c:	ldr	r2, [r8, #60]	; 0x3c
   20f30:	adds	r6, r6, r3
   20f34:	adc	r7, r7, #0
   20f38:	cmp	r0, #0
   20f3c:	strd	r6, [fp, #-84]	; 0xffffffac
   20f40:	movle	r3, r4
   20f44:	ble	21300 <dta_begin_data+0xa00>
   20f48:	mov	ip, r4
   20f4c:	ldr	r3, [r9, #116]	; 0x74
   20f50:	cmp	r3, #4
   20f54:	mov	r3, #0
   20f58:	bhi	212d8 <dta_begin_data+0x9d8>
   20f5c:	sub	lr, r2, #4
   20f60:	mov	r1, r3
   20f64:	ldr	r2, [lr, #4]!
   20f68:	add	r1, r1, #1
   20f6c:	cmp	r1, r0
   20f70:	ldr	r2, [r2, #16]
   20f74:	add	r2, r2, #16
   20f78:	add	r3, r3, r2
   20f7c:	blt	20f64 <dta_begin_data+0x664>
   20f80:	cmp	r4, #0
   20f84:	add	r3, ip, r3
   20f88:	beq	21300 <dta_begin_data+0xa00>
   20f8c:	add	r3, r3, #8
   20f90:	adds	r0, r6, r3
   20f94:	ldr	r2, [r8, #40]	; 0x28
   20f98:	adc	r1, r7, #0
   20f9c:	mov	r3, #14
   20fa0:	cmp	r2, #0
   20fa4:	strd	r0, [fp, #-188]	; 0xffffff44
   20fa8:	strd	r0, [fp, #-76]	; 0xffffffb4
   20fac:	str	r3, [fp, #-176]	; 0xffffff50
   20fb0:	ble	2112c <dta_begin_data+0x82c>
   20fb4:	mov	r7, #0
   20fb8:	mov	r1, r7
   20fbc:	mov	r0, r8
   20fc0:	bl	4424 <readstat_get_label_set@plt>
   20fc4:	mov	r4, #0
   20fc8:	ldr	r5, [r0, #264]	; 0x108
   20fcc:	mov	sl, r0
   20fd0:	cmp	r5, #0
   20fd4:	ble	21000 <dta_begin_data+0x700>
   20fd8:	mov	r6, r4
   20fdc:	mov	r1, r6
   20fe0:	mov	r0, sl
   20fe4:	bl	44cc <readstat_get_value_label@plt>
   20fe8:	add	r6, r6, #1
   20fec:	add	r4, r4, #1
   20ff0:	cmp	r5, r6
   20ff4:	ldr	r3, [r0, #28]
   20ff8:	add	r4, r4, r3
   20ffc:	bne	20fdc <dta_begin_data+0x6dc>
   21000:	ldrb	r3, [r9, #192]	; 0xc0
   21004:	tst	r3, #4
   21008:	bne	210f0 <dta_begin_data+0x7f0>
   2100c:	ldr	r2, [r9, #108]	; 0x6c
   21010:	ldr	r3, [r9, #104]	; 0x68
   21014:	ldr	r1, [fp, #-176]	; 0xffffff50
   21018:	add	r3, r3, r2
   2101c:	add	r5, r5, #1
   21020:	add	r3, r3, #4
   21024:	ldr	r2, [r8, #40]	; 0x28
   21028:	add	r7, r7, #1
   2102c:	add	r4, r4, r5, lsl #3
   21030:	add	r6, r3, r1
   21034:	add	r3, r4, r6
   21038:	cmp	r2, r7
   2103c:	str	r3, [fp, #-176]	; 0xffffff50
   21040:	bgt	20fb8 <dta_begin_data+0x6b8>
   21044:	ldrd	r2, [fp, #-188]	; 0xffffff44
   21048:	ldr	r1, [fp, #-176]	; 0xffffff50
   2104c:	adds	r2, r2, r1
   21050:	adc	r3, r3, #0
   21054:	strd	r2, [fp, #-68]	; 0xffffffbc
   21058:	strd	r2, [fp, #-60]	; 0xffffffc4
   2105c:	mov	r2, #112	; 0x70
   21060:	ldr	r1, [fp, #-180]	; 0xffffff4c
   21064:	mov	r0, r8
   21068:	bl	4454 <readstat_write_bytes@plt>
   2106c:	subs	r4, r0, #0
   21070:	bne	20988 <dta_begin_data+0x88>
   21074:	ldrb	r3, [r9, #192]	; 0xc0
   21078:	tst	r3, #4
   2107c:	beq	20a08 <dta_begin_data+0x108>
   21080:	ldr	r1, [pc, #2332]	; 219a4 <dta_begin_data+0x10a4>
   21084:	mov	r0, r8
   21088:	add	r1, pc, r1
   2108c:	bl	4154 <readstat_write_string@plt>
   21090:	subs	r4, r0, #0
   21094:	bne	20988 <dta_begin_data+0x88>
   21098:	ldrb	r3, [r9, #192]	; 0xc0
   2109c:	tst	r3, #4
   210a0:	beq	20a08 <dta_begin_data+0x108>
   210a4:	ldr	r1, [pc, #2300]	; 219a8 <dta_begin_data+0x10a8>
   210a8:	mov	r0, r8
   210ac:	add	r1, pc, r1
   210b0:	bl	4154 <readstat_write_string@plt>
   210b4:	subs	r4, r0, #0
   210b8:	bne	20988 <dta_begin_data+0x88>
   210bc:	b	20a08 <dta_begin_data+0x108>
   210c0:	mov	r0, r7
   210c4:	b	20ed8 <dta_begin_data+0x5d8>
   210c8:	mov	r0, #32768	; 0x8000
   210cc:	b	20ed8 <dta_begin_data+0x5d8>
   210d0:	ldr	r0, [pc, #2192]	; 21968 <dta_begin_data+0x1068>
   210d4:	b	20ed8 <dta_begin_data+0x5d8>
   210d8:	mov	r0, sl
   210dc:	b	20ed8 <dta_begin_data+0x5d8>
   210e0:	ldr	r0, [pc, #2184]	; 21970 <dta_begin_data+0x1070>
   210e4:	b	20ed8 <dta_begin_data+0x5d8>
   210e8:	ldr	r0, [pc, #2184]	; 21978 <dta_begin_data+0x1078>
   210ec:	b	20ed8 <dta_begin_data+0x5d8>
   210f0:	ldr	r2, [r9, #108]	; 0x6c
   210f4:	ldr	r3, [r9, #104]	; 0x68
   210f8:	ldr	r1, [fp, #-176]	; 0xffffff50
   210fc:	add	r3, r3, r2
   21100:	add	r5, r5, #1
   21104:	add	r3, r3, #9
   21108:	add	r6, r3, r1
   2110c:	ldr	r2, [r8, #40]	; 0x28
   21110:	add	r4, r4, r5, lsl #3
   21114:	add	r7, r7, #1
   21118:	add	r6, r4, r6
   2111c:	add	r3, r6, #6
   21120:	cmp	r7, r2
   21124:	str	r3, [fp, #-176]	; 0xffffff50
   21128:	blt	20fb8 <dta_begin_data+0x6b8>
   2112c:	add	r5, r3, #15
   21130:	ldrd	r2, [fp, #-188]	; 0xffffff44
   21134:	ldr	r1, [pc, #2160]	; 219ac <dta_begin_data+0x10ac>
   21138:	mov	r0, r8
   2113c:	adds	r2, r2, r5
   21140:	adc	r3, r3, #0
   21144:	adds	r4, r2, #12
   21148:	adc	r5, r3, #0
   2114c:	add	r1, pc, r1
   21150:	strd	r4, [fp, #-60]	; 0xffffffc4
   21154:	strd	r2, [fp, #-68]	; 0xffffffbc
   21158:	bl	4154 <readstat_write_string@plt>
   2115c:	subs	r4, r0, #0
   21160:	bne	20988 <dta_begin_data+0x88>
   21164:	b	2105c <dta_begin_data+0x75c>
   21168:	ldr	r2, [r0]
   2116c:	ldr	r3, [r0, #1596]	; 0x63c
   21170:	cmp	r2, #5
   21174:	addls	pc, pc, r2, lsl #2
   21178:	b	211c8 <dta_begin_data+0x8c8>
   2117c:	b	2119c <dta_begin_data+0x89c>
   21180:	b	21194 <dta_begin_data+0x894>
   21184:	b	211c0 <dta_begin_data+0x8c0>
   21188:	b	211b8 <dta_begin_data+0x8b8>
   2118c:	b	211b0 <dta_begin_data+0x8b0>
   21190:	b	211a8 <dta_begin_data+0x8a8>
   21194:	mov	r0, #98	; 0x62
   21198:	b	20ed8 <dta_begin_data+0x5d8>
   2119c:	add	r3, r3, #127	; 0x7f
   211a0:	uxth	r0, r3
   211a4:	b	20ed8 <dta_begin_data+0x5d8>
   211a8:	mov	r0, #100	; 0x64
   211ac:	b	20ed8 <dta_begin_data+0x5d8>
   211b0:	mov	r0, #102	; 0x66
   211b4:	b	20ed8 <dta_begin_data+0x5d8>
   211b8:	mov	r0, #108	; 0x6c
   211bc:	b	20ed8 <dta_begin_data+0x5d8>
   211c0:	mov	r0, #105	; 0x69
   211c4:	b	20ed8 <dta_begin_data+0x5d8>
   211c8:	mov	r0, r5
   211cc:	b	20ed8 <dta_begin_data+0x5d8>
   211d0:	ldr	r3, [r0]
   211d4:	ldr	r0, [r0, #1596]	; 0x63c
   211d8:	cmp	r3, #5
   211dc:	addls	pc, pc, r3, lsl #2
   211e0:	b	211c8 <dta_begin_data+0x8c8>
   211e4:	b	20ed4 <dta_begin_data+0x5d4>
   211e8:	b	211fc <dta_begin_data+0x8fc>
   211ec:	b	2121c <dta_begin_data+0x91c>
   211f0:	b	21214 <dta_begin_data+0x914>
   211f4:	b	2120c <dta_begin_data+0x90c>
   211f8:	b	21204 <dta_begin_data+0x904>
   211fc:	mov	r0, #251	; 0xfb
   21200:	b	20ed8 <dta_begin_data+0x5d8>
   21204:	mov	r0, #255	; 0xff
   21208:	b	20ed8 <dta_begin_data+0x5d8>
   2120c:	mov	r0, #254	; 0xfe
   21210:	b	20ed8 <dta_begin_data+0x5d8>
   21214:	mov	r0, #253	; 0xfd
   21218:	b	20ed8 <dta_begin_data+0x5d8>
   2121c:	mov	r0, #252	; 0xfc
   21220:	b	20ed8 <dta_begin_data+0x5d8>
   21224:	mov	r3, #0
   21228:	b	20a80 <dta_begin_data+0x180>
   2122c:	ldr	r1, [pc, #1916]	; 219b0 <dta_begin_data+0x10b0>
   21230:	mov	r0, r8
   21234:	add	r1, pc, r1
   21238:	bl	4154 <readstat_write_string@plt>
   2123c:	subs	r4, r0, #0
   21240:	bne	20988 <dta_begin_data+0x88>
   21244:	b	20b5c <dta_begin_data+0x25c>
   21248:	ldr	r2, [r9, #152]	; 0x98
   2124c:	ldr	r3, [r9, #160]	; 0xa0
   21250:	ldrd	r6, [fp, #-188]	; 0xffffff44
   21254:	ldr	r0, [r8, #64]	; 0x40
   21258:	mul	r3, r3, r2
   2125c:	ldr	r2, [r8, #60]	; 0x3c
   21260:	add	r3, r3, #13
   21264:	adds	r6, r6, r3
   21268:	adc	r7, r7, #0
   2126c:	cmp	r0, #0
   21270:	strd	r6, [fp, #-84]	; 0xffffffac
   21274:	movgt	ip, #7
   21278:	bgt	20f4c <dta_begin_data+0x64c>
   2127c:	mov	r3, #7
   21280:	b	20f8c <dta_begin_data+0x68c>
   21284:	ldr	r3, [r0, #1596]	; 0x63c
   21288:	cmp	r2, #6
   2128c:	addls	pc, pc, r2, lsl #2
   21290:	b	21224 <dta_begin_data+0x924>
   21294:	b	20a7c <dta_begin_data+0x17c>
   21298:	b	212b0 <dta_begin_data+0x9b0>
   2129c:	b	212d0 <dta_begin_data+0x9d0>
   212a0:	b	212c8 <dta_begin_data+0x9c8>
   212a4:	b	212c0 <dta_begin_data+0x9c0>
   212a8:	b	212b8 <dta_begin_data+0x9b8>
   212ac:	b	20cd0 <dta_begin_data+0x3d0>
   212b0:	mov	r3, sl
   212b4:	b	20a80 <dta_begin_data+0x180>
   212b8:	mov	r3, #255	; 0xff
   212bc:	b	20a80 <dta_begin_data+0x180>
   212c0:	mov	r3, #254	; 0xfe
   212c4:	b	20a80 <dta_begin_data+0x180>
   212c8:	mov	r3, #253	; 0xfd
   212cc:	b	20a80 <dta_begin_data+0x180>
   212d0:	mov	r3, #252	; 0xfc
   212d4:	b	20a80 <dta_begin_data+0x180>
   212d8:	sub	r2, r2, #4
   212dc:	mov	lr, r3
   212e0:	ldr	r1, [r2, #4]!
   212e4:	add	lr, lr, #1
   212e8:	cmp	lr, r0
   212ec:	ldr	r1, [r1, #16]
   212f0:	add	r1, r1, #20
   212f4:	add	r3, r3, r1
   212f8:	blt	212e0 <dta_begin_data+0x9e0>
   212fc:	b	20f80 <dta_begin_data+0x680>
   21300:	adds	r0, r6, r3
   21304:	ldr	r2, [r8, #40]	; 0x28
   21308:	adc	r1, r7, #0
   2130c:	mov	r3, #0
   21310:	cmp	r2, #0
   21314:	strd	r0, [fp, #-188]	; 0xffffff44
   21318:	strd	r0, [fp, #-76]	; 0xffffffb4
   2131c:	str	r3, [fp, #-176]	; 0xffffff50
   21320:	bgt	20fb4 <dta_begin_data+0x6b4>
   21324:	b	21044 <dta_begin_data+0x744>
   21328:	ldr	r3, [r9, #28]
   2132c:	mov	r2, r7
   21330:	ldr	r1, [fp, #-180]	; 0xffffff4c
   21334:	ldrh	r3, [r3, sl]
   21338:	mov	r0, r8
   2133c:	strh	r3, [fp, #-164]	; 0xffffff5c
   21340:	bl	4454 <readstat_write_bytes@plt>
   21344:	b	20af8 <dta_begin_data+0x1f8>
   21348:	ldr	r3, [pc, #1636]	; 219b4 <dta_begin_data+0x10b4>
   2134c:	add	r3, pc, r3
   21350:	b	20ba4 <dta_begin_data+0x2a4>
   21354:	ldrb	r3, [r9, #192]	; 0xc0
   21358:	tst	r3, #4
   2135c:	bne	2159c <dta_begin_data+0xc9c>
   21360:	cmp	r1, #0
   21364:	movgt	r4, #0
   21368:	ble	2139c <dta_begin_data+0xa9c>
   2136c:	mov	r1, r4
   21370:	mov	r0, r8
   21374:	bl	437c <readstat_get_variable@plt>
   21378:	ldr	r2, [r9, #76]	; 0x4c
   2137c:	ldr	r3, [r9, #36]	; 0x24
   21380:	add	r1, r0, #8
   21384:	mla	r0, r2, r4, r3
   21388:	bl	42bc <strncpy@plt>
   2138c:	ldr	r3, [r9, #148]	; 0x94
   21390:	add	r4, r4, #1
   21394:	cmp	r4, r3
   21398:	blt	2136c <dta_begin_data+0xa6c>
   2139c:	ldr	r2, [r9, #40]	; 0x28
   213a0:	ldr	r1, [r9, #36]	; 0x24
   213a4:	mov	r0, r8
   213a8:	bl	4454 <readstat_write_bytes@plt>
   213ac:	subs	r4, r0, #0
   213b0:	bne	20988 <dta_begin_data+0x88>
   213b4:	ldrb	r3, [r9, #192]	; 0xc0
   213b8:	tst	r3, #4
   213bc:	bne	21608 <dta_begin_data+0xd08>
   213c0:	ldr	r2, [r9, #48]	; 0x30
   213c4:	mov	r1, #0
   213c8:	ldr	r0, [r9, #44]	; 0x2c
   213cc:	bl	42a4 <memset@plt>
   213d0:	ldr	r2, [r9, #48]	; 0x30
   213d4:	ldr	r1, [r9, #44]	; 0x2c
   213d8:	mov	r0, r8
   213dc:	bl	4454 <readstat_write_bytes@plt>
   213e0:	subs	r4, r0, #0
   213e4:	bne	20988 <dta_begin_data+0x88>
   213e8:	ldrb	r3, [r9, #192]	; 0xc0
   213ec:	tst	r3, #4
   213f0:	bne	21a68 <dta_begin_data+0x1168>
   213f4:	ldr	r3, [r9, #148]	; 0x94
   213f8:	cmp	r3, #0
   213fc:	ble	21648 <dta_begin_data+0xd48>
   21400:	ldr	r3, [pc, #1456]	; 219b8 <dta_begin_data+0x10b8>
   21404:	ldr	r7, [pc, #1456]	; 219bc <dta_begin_data+0x10bc>
   21408:	add	r3, pc, r3
   2140c:	str	r3, [fp, #-176]	; 0xffffff50
   21410:	ldr	r3, [pc, #1448]	; 219c0 <dta_begin_data+0x10c0>
   21414:	ldr	r6, [pc, #1448]	; 219c4 <dta_begin_data+0x10c4>
   21418:	ldr	r5, [pc, #1448]	; 219c8 <dta_begin_data+0x10c8>
   2141c:	ldr	sl, [pc, #1448]	; 219cc <dta_begin_data+0x10cc>
   21420:	add	r3, pc, r3
   21424:	add	r7, pc, r7
   21428:	add	r6, pc, r6
   2142c:	add	r5, pc, r5
   21430:	add	sl, pc, sl
   21434:	str	r3, [fp, #-188]	; 0xffffff44
   21438:	mov	r4, #0
   2143c:	b	21464 <dta_begin_data+0xb64>
   21440:	ldr	r2, [r9, #80]	; 0x50
   21444:	ldr	r0, [r9, #52]	; 0x34
   21448:	add	r1, r1, #308	; 0x134
   2144c:	mla	r0, r2, r4, r0
   21450:	bl	42bc <strncpy@plt>
   21454:	ldr	r3, [r9, #148]	; 0x94
   21458:	add	r4, r4, #1
   2145c:	cmp	r4, r3
   21460:	bge	21648 <dta_begin_data+0xd48>
   21464:	mov	r1, r4
   21468:	mov	r0, r8
   2146c:	bl	437c <readstat_get_variable@plt>
   21470:	ldrb	r3, [r0, #308]	; 0x134
   21474:	mov	r1, r0
   21478:	cmp	r3, #0
   2147c:	bne	21440 <dta_begin_data+0xb40>
   21480:	ldr	r3, [r1, #2136]	; 0x858
   21484:	ldr	r0, [r0]
   21488:	str	r1, [fp, #-196]	; 0xffffff3c
   2148c:	str	r3, [fp, #-192]	; 0xffffff40
   21490:	bl	3e24 <readstat_type_class@plt>
   21494:	ldr	r3, [fp, #-192]	; 0xffffff40
   21498:	ldr	r1, [fp, #-196]	; 0xffffff3c
   2149c:	cmp	r0, #0
   214a0:	bne	2150c <dta_begin_data+0xc0c>
   214a4:	cmp	r3, #0
   214a8:	beq	21ac4 <dta_begin_data+0x11c4>
   214ac:	ldr	r2, [r1, #2132]	; 0x854
   214b0:	ldr	r0, [fp, #-180]	; 0xffffff4c
   214b4:	cmp	r2, #1
   214b8:	movne	r2, r6
   214bc:	moveq	r2, r5
   214c0:	mov	r1, r7
   214c4:	bl	43e8 <sprintf@plt>
   214c8:	ldr	r2, [r9, #80]	; 0x50
   214cc:	ldr	r0, [r9, #52]	; 0x34
   214d0:	ldr	r1, [fp, #-180]	; 0xffffff4c
   214d4:	mla	r0, r2, r4, r0
   214d8:	bl	42bc <strncpy@plt>
   214dc:	b	21454 <dta_begin_data+0xb54>
   214e0:	mov	r5, #0
   214e4:	mov	r0, r6
   214e8:	mov	r1, r7
   214ec:	b	20e4c <dta_begin_data+0x54c>
   214f0:	ldr	r1, [pc, #1240]	; 219d0 <dta_begin_data+0x10d0>
   214f4:	ldr	r2, [pc, #1240]	; 219d4 <dta_begin_data+0x10d4>
   214f8:	add	r1, pc, r1
   214fc:	mov	r0, #2
   21500:	strh	r3, [r6, #-136]!	; 0xffffff78
   21504:	add	r2, pc, r2
   21508:	b	20bfc <dta_begin_data+0x2fc>
   2150c:	cmp	r3, #0
   21510:	bne	21544 <dta_begin_data+0xc44>
   21514:	ldr	r3, [r1]
   21518:	sub	r2, r3, #1
   2151c:	cmp	r2, #1
   21520:	bls	21abc <dta_begin_data+0x11bc>
   21524:	cmp	r3, #3
   21528:	movne	r2, #103	; 0x67
   2152c:	beq	21ab4 <dta_begin_data+0x11b4>
   21530:	cmp	r3, #5
   21534:	movne	r3, #9
   21538:	moveq	r3, #10
   2153c:	cmp	r2, #103	; 0x67
   21540:	bne	214ac <dta_begin_data+0xbac>
   21544:	ldr	r2, [r1, #2132]	; 0x854
   21548:	ldr	r0, [fp, #-180]	; 0xffffff4c
   2154c:	cmp	r2, #1
   21550:	ldr	r1, [fp, #-176]	; 0xffffff50
   21554:	ldr	r2, [fp, #-188]	; 0xffffff44
   21558:	movne	r2, sl
   2155c:	bl	43e8 <sprintf@plt>
   21560:	b	214c8 <dta_begin_data+0xbc8>
   21564:	tst	r3, #4
   21568:	bne	21b1c <dta_begin_data+0x121c>
   2156c:	ldr	r1, [r9, #92]	; 0x5c
   21570:	mov	r0, r8
   21574:	add	r1, r1, #1
   21578:	bl	401c <readstat_write_zeros@plt>
   2157c:	cmp	r0, #0
   21580:	mov	sp, sl
   21584:	beq	2192c <dta_begin_data+0x102c>
   21588:	mov	r4, r0
   2158c:	b	20988 <dta_begin_data+0x88>
   21590:	ldrb	r3, [r9, #192]	; 0xc0
   21594:	tst	r3, #4
   21598:	beq	2139c <dta_begin_data+0xa9c>
   2159c:	ldr	r1, [pc, #1076]	; 219d8 <dta_begin_data+0x10d8>
   215a0:	mov	r0, r8
   215a4:	add	r1, pc, r1
   215a8:	bl	4154 <readstat_write_string@plt>
   215ac:	subs	r4, r0, #0
   215b0:	bne	20988 <dta_begin_data+0x88>
   215b4:	ldrb	r3, [r9, #192]	; 0xc0
   215b8:	tst	r3, #4
   215bc:	bne	215c8 <dta_begin_data+0xcc8>
   215c0:	ldr	r1, [r9, #148]	; 0x94
   215c4:	b	21360 <dta_begin_data+0xa60>
   215c8:	ldr	r1, [pc, #1036]	; 219dc <dta_begin_data+0x10dc>
   215cc:	mov	r0, r8
   215d0:	add	r1, pc, r1
   215d4:	bl	4154 <readstat_write_string@plt>
   215d8:	subs	r4, r0, #0
   215dc:	bne	20988 <dta_begin_data+0x88>
   215e0:	b	215c0 <dta_begin_data+0xcc0>
   215e4:	ldr	r2, [r8, #80]	; 0x50
   215e8:	ldr	r1, [pc, #1008]	; 219e0 <dta_begin_data+0x10e0>
   215ec:	str	r2, [fp, #-172]	; 0xffffff54
   215f0:	ldr	r2, [pc, #1004]	; 219e4 <dta_begin_data+0x10e4>
   215f4:	add	r1, pc, r1
   215f8:	mov	r0, #4
   215fc:	mov	r3, r6
   21600:	add	r2, pc, r2
   21604:	b	20c48 <dta_begin_data+0x348>
   21608:	ldr	r1, [pc, #984]	; 219e8 <dta_begin_data+0x10e8>
   2160c:	mov	r0, r8
   21610:	add	r1, pc, r1
   21614:	bl	4154 <readstat_write_string@plt>
   21618:	subs	r4, r0, #0
   2161c:	bne	20988 <dta_begin_data+0x88>
   21620:	ldrb	r3, [r9, #192]	; 0xc0
   21624:	tst	r3, #4
   21628:	beq	213c0 <dta_begin_data+0xac0>
   2162c:	ldr	r1, [pc, #952]	; 219ec <dta_begin_data+0x10ec>
   21630:	mov	r0, r8
   21634:	add	r1, pc, r1
   21638:	bl	4154 <readstat_write_string@plt>
   2163c:	subs	r4, r0, #0
   21640:	bne	20988 <dta_begin_data+0x88>
   21644:	b	213c0 <dta_begin_data+0xac0>
   21648:	ldr	r2, [r9, #56]	; 0x38
   2164c:	ldr	r1, [r9, #52]	; 0x34
   21650:	mov	r0, r8
   21654:	bl	4454 <readstat_write_bytes@plt>
   21658:	subs	r4, r0, #0
   2165c:	bne	20988 <dta_begin_data+0x88>
   21660:	ldrb	r3, [r9, #192]	; 0xc0
   21664:	tst	r3, #4
   21668:	bne	21b30 <dta_begin_data+0x1230>
   2166c:	mov	r4, #0
   21670:	mov	r5, r4
   21674:	b	216a0 <dta_begin_data+0xda0>
   21678:	bl	437c <readstat_get_variable@plt>
   2167c:	ldr	r2, [r9, #84]	; 0x54
   21680:	ldr	r1, [r0, #1588]	; 0x634
   21684:	ldr	r0, [r9, #60]	; 0x3c
   21688:	cmp	r1, #0
   2168c:	mla	r0, r2, r4, r0
   21690:	add	r1, r1, #4
   21694:	beq	21aa8 <dta_begin_data+0x11a8>
   21698:	bl	42bc <strncpy@plt>
   2169c:	add	r4, r4, #1
   216a0:	ldr	r3, [r9, #148]	; 0x94
   216a4:	mov	r1, r4
   216a8:	cmp	r4, r3
   216ac:	mov	r0, r8
   216b0:	blt	21678 <dta_begin_data+0xd78>
   216b4:	ldr	r2, [r9, #64]	; 0x40
   216b8:	ldr	r1, [r9, #60]	; 0x3c
   216bc:	bl	4454 <readstat_write_bytes@plt>
   216c0:	subs	r4, r0, #0
   216c4:	bne	20988 <dta_begin_data+0x88>
   216c8:	ldrb	r3, [r9, #192]	; 0xc0
   216cc:	tst	r3, #4
   216d0:	bne	21a28 <dta_begin_data+0x1128>
   216d4:	ldr	r3, [r9, #148]	; 0x94
   216d8:	cmp	r3, #0
   216dc:	movgt	r4, #0
   216e0:	ble	21714 <dta_begin_data+0xe14>
   216e4:	mov	r1, r4
   216e8:	mov	r0, r8
   216ec:	bl	437c <readstat_get_variable@plt>
   216f0:	ldr	r2, [r9, #88]	; 0x58
   216f4:	ldr	r3, [r9, #68]	; 0x44
   216f8:	add	r1, r0, #564	; 0x234
   216fc:	mla	r0, r2, r4, r3
   21700:	bl	42bc <strncpy@plt>
   21704:	ldr	r3, [r9, #148]	; 0x94
   21708:	add	r4, r4, #1
   2170c:	cmp	r4, r3
   21710:	blt	216e4 <dta_begin_data+0xde4>
   21714:	ldr	r2, [r9, #72]	; 0x48
   21718:	ldr	r1, [r9, #68]	; 0x44
   2171c:	mov	r0, r8
   21720:	bl	4454 <readstat_write_bytes@plt>
   21724:	subs	r4, r0, #0
   21728:	bne	20988 <dta_begin_data+0x88>
   2172c:	ldrb	r3, [r9, #192]	; 0xc0
   21730:	tst	r3, #4
   21734:	bne	218b8 <dta_begin_data+0xfb8>
   21738:	ldr	r3, [r9, #96]	; 0x60
   2173c:	ldr	r2, [r9, #92]	; 0x5c
   21740:	add	r3, r3, #7
   21744:	bic	r3, r3, #7
   21748:	mov	sl, sp
   2174c:	cmp	r2, #0
   21750:	sub	sp, sp, r3
   21754:	add	r7, sp, #16
   21758:	beq	21928 <dta_begin_data+0x1028>
   2175c:	ldrb	r3, [r9, #192]	; 0xc0
   21760:	tst	r3, #4
   21764:	bne	21948 <dta_begin_data+0x1048>
   21768:	ldr	r2, [pc, #640]	; 219f0 <dta_begin_data+0x10f0>
   2176c:	mov	r5, #0
   21770:	add	r2, pc, r2
   21774:	str	r2, [fp, #-188]	; 0xffffff44
   21778:	ldr	r2, [pc, #628]	; 219f4 <dta_begin_data+0x10f4>
   2177c:	add	r2, pc, r2
   21780:	str	r2, [fp, #-192]	; 0xffffff40
   21784:	ldr	r2, [pc, #620]	; 219f8 <dta_begin_data+0x10f8>
   21788:	add	r2, pc, r2
   2178c:	str	r2, [fp, #-196]	; 0xffffff3c
   21790:	ldr	r2, [pc, #612]	; 219fc <dta_begin_data+0x10fc>
   21794:	add	r2, pc, r2
   21798:	str	r2, [fp, #-200]	; 0xffffff38
   2179c:	ldr	r2, [r8, #52]	; 0x34
   217a0:	cmp	r5, r2
   217a4:	bge	21564 <dta_begin_data+0xc64>
   217a8:	tst	r3, #4
   217ac:	beq	2189c <dta_begin_data+0xf9c>
   217b0:	ldr	r1, [fp, #-188]	; 0xffffff44
   217b4:	mov	r0, r8
   217b8:	bl	4154 <readstat_write_string@plt>
   217bc:	cmp	r0, #0
   217c0:	bne	218fc <dta_begin_data+0xffc>
   217c4:	ldr	r3, [r8, #48]	; 0x30
   217c8:	lsl	r2, r5, #2
   217cc:	str	r2, [fp, #-176]	; 0xffffff50
   217d0:	ldr	r0, [r3, r5, lsl #2]
   217d4:	bl	41fc <strlen@plt>
   217d8:	ldr	r2, [r9, #92]	; 0x5c
   217dc:	cmp	r2, #2
   217e0:	mov	r6, r0
   217e4:	beq	21908 <dta_begin_data+0x1008>
   217e8:	cmp	r2, #4
   217ec:	beq	218d4 <dta_begin_data+0xfd4>
   217f0:	ldr	r3, [r9, #96]	; 0x60
   217f4:	ldr	r1, [fp, #-192]	; 0xffffff40
   217f8:	mov	r2, r3
   217fc:	mov	r0, r7
   21800:	str	r3, [fp, #-204]	; 0xffffff34
   21804:	bl	42bc <strncpy@plt>
   21808:	ldr	r3, [fp, #-204]	; 0xffffff34
   2180c:	mov	r1, r7
   21810:	mov	r2, r3
   21814:	mov	r0, r8
   21818:	bl	4454 <readstat_write_bytes@plt>
   2181c:	cmp	r0, #0
   21820:	bne	218fc <dta_begin_data+0xffc>
   21824:	add	r5, r5, #1
   21828:	mov	r3, r5
   2182c:	ldr	r2, [fp, #-196]	; 0xffffff3c
   21830:	ldr	r1, [r9, #96]	; 0x60
   21834:	mov	r0, r7
   21838:	bl	4280 <snprintf@plt>
   2183c:	ldr	r2, [r9, #96]	; 0x60
   21840:	mov	r1, r7
   21844:	mov	r0, r8
   21848:	bl	4454 <readstat_write_bytes@plt>
   2184c:	cmp	r0, #0
   21850:	bne	218fc <dta_begin_data+0xffc>
   21854:	ldr	r3, [r8, #48]	; 0x30
   21858:	ldr	r1, [fp, #-176]	; 0xffffff50
   2185c:	add	r2, r6, #1
   21860:	mov	r0, r8
   21864:	ldr	r1, [r3, r1]
   21868:	bl	4454 <readstat_write_bytes@plt>
   2186c:	cmp	r0, #0
   21870:	bne	218fc <dta_begin_data+0xffc>
   21874:	ldrb	r3, [r9, #192]	; 0xc0
   21878:	tst	r3, #4
   2187c:	beq	2179c <dta_begin_data+0xe9c>
   21880:	ldr	r1, [fp, #-200]	; 0xffffff38
   21884:	mov	r0, r8
   21888:	bl	4154 <readstat_write_string@plt>
   2188c:	cmp	r0, #0
   21890:	bne	218fc <dta_begin_data+0xffc>
   21894:	ldrb	r3, [r9, #192]	; 0xc0
   21898:	b	2179c <dta_begin_data+0xe9c>
   2189c:	mov	r3, #1
   218a0:	mov	r2, #1
   218a4:	ldr	r1, [fp, #-180]	; 0xffffff4c
   218a8:	mov	r0, r8
   218ac:	strb	r3, [fp, #-164]	; 0xffffff5c
   218b0:	bl	4454 <readstat_write_bytes@plt>
   218b4:	b	217bc <dta_begin_data+0xebc>
   218b8:	ldr	r1, [pc, #320]	; 21a00 <dta_begin_data+0x1100>
   218bc:	mov	r0, r8
   218c0:	add	r1, pc, r1
   218c4:	bl	4154 <readstat_write_string@plt>
   218c8:	cmp	r0, #0
   218cc:	beq	21738 <dta_begin_data+0xe38>
   218d0:	b	21588 <dta_begin_data+0xc88>
   218d4:	ldr	r3, [r9, #96]	; 0x60
   218d8:	mov	r2, #4
   218dc:	ldr	r1, [fp, #-180]	; 0xffffff4c
   218e0:	add	r3, r0, r3, lsl #1
   218e4:	add	r3, r3, #1
   218e8:	mov	r0, r8
   218ec:	str	r3, [fp, #-164]	; 0xffffff5c
   218f0:	bl	4454 <readstat_write_bytes@plt>
   218f4:	cmp	r0, #0
   218f8:	beq	217f0 <dta_begin_data+0xef0>
   218fc:	mov	r4, r0
   21900:	mov	sp, sl
   21904:	b	20988 <dta_begin_data+0x88>
   21908:	ldr	r3, [r9, #96]	; 0x60
   2190c:	ldr	r1, [fp, #-180]	; 0xffffff4c
   21910:	add	r3, r0, r3, lsl #1
   21914:	add	r3, r3, #1
   21918:	mov	r0, r8
   2191c:	strh	r3, [fp, #-164]	; 0xffffff5c
   21920:	bl	4454 <readstat_write_bytes@plt>
   21924:	b	218f4 <dta_begin_data+0xff4>
   21928:	mov	sp, sl
   2192c:	ldrb	r3, [r9, #192]	; 0xc0
   21930:	tst	r3, #4
   21934:	bne	21b00 <dta_begin_data+0x1200>
   21938:	mov	r0, r4
   2193c:	str	r9, [r8, #300]	; 0x12c
   21940:	sub	sp, fp, #32
   21944:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21948:	ldr	r1, [pc, #180]	; 21a04 <dta_begin_data+0x1104>
   2194c:	mov	r0, r8
   21950:	add	r1, pc, r1
   21954:	bl	4154 <readstat_write_string@plt>
   21958:	cmp	r0, #0
   2195c:	ldrbeq	r3, [r9, #192]	; 0xc0
   21960:	bne	218fc <dta_begin_data+0xffc>
   21964:	b	21768 <dta_begin_data+0xe68>
   21968:	.word	0x0000fff6
   2196c:	.word	0x0000fff7
   21970:	.word	0x0000fff8
   21974:	.word	0x0000fffa
   21978:	.word	0x0000fff9
   2197c:	.word	0x00007634
   21980:	.word	0x000079a4
   21984:	.word	0x0000760c
   21988:	.word	0x000075ec
   2198c:	.word	0x000075cc
   21990:	.word	0x000075c8
   21994:	.word	0x000075bc
   21998:	.word	0x0000758c
   2199c:	.word	0x0000757c
   219a0:	.word	0x00007564
   219a4:	.word	0x00007184
   219a8:	.word	0x0000733c
   219ac:	.word	0x000070b8
   219b0:	.word	0x00006f4c
   219b4:	.word	0x00006e5c
   219b8:	.word	0x00007120
   219bc:	.word	0x00007110
   219c0:	.word	0x000070ec
   219c4:	.word	0x00005558
   219c8:	.word	0x000070e0
   219cc:	.word	0x00005550
   219d0:	.word	0x00006cbc
   219d4:	.word	0x00006cac
   219d8:	.word	0x00006e58
   219dc:	.word	0x00006c44
   219e0:	.word	0x00006bcc
   219e4:	.word	0x00006bbc
   219e8:	.word	0x00006c10
   219ec:	.word	0x00006bf8
   219f0:	.word	0x00006b9c
   219f4:	.word	0x00006b98
   219f8:	.word	0x00006b94
   219fc:	.word	0x00006b90
   21a00:	.word	0x000069dc
   21a04:	.word	0x000069a0
   21a08:	.word	0x00006840
   21a0c:	.word	0x00006834
   21a10:	.word	0x000067c8
   21a14:	.word	0x000067b0
   21a18:	.word	0x0000686c
   21a1c:	.word	0x00006a18
   21a20:	.word	0x00006718
   21a24:	.word	0x00006700
   21a28:	ldr	r1, [pc, #-40]	; 21a08 <dta_begin_data+0x1108>
   21a2c:	mov	r0, r8
   21a30:	add	r1, pc, r1
   21a34:	bl	4154 <readstat_write_string@plt>
   21a38:	subs	r4, r0, #0
   21a3c:	bne	20988 <dta_begin_data+0x88>
   21a40:	ldrb	r3, [r9, #192]	; 0xc0
   21a44:	tst	r3, #4
   21a48:	beq	216d4 <dta_begin_data+0xdd4>
   21a4c:	ldr	r1, [pc, #-72]	; 21a0c <dta_begin_data+0x110c>
   21a50:	mov	r0, r8
   21a54:	add	r1, pc, r1
   21a58:	bl	4154 <readstat_write_string@plt>
   21a5c:	subs	r4, r0, #0
   21a60:	bne	20988 <dta_begin_data+0x88>
   21a64:	b	216d4 <dta_begin_data+0xdd4>
   21a68:	ldr	r1, [pc, #-96]	; 21a10 <dta_begin_data+0x1110>
   21a6c:	mov	r0, r8
   21a70:	add	r1, pc, r1
   21a74:	bl	4154 <readstat_write_string@plt>
   21a78:	subs	r4, r0, #0
   21a7c:	bne	20988 <dta_begin_data+0x88>
   21a80:	ldrb	r3, [r9, #192]	; 0xc0
   21a84:	tst	r3, #4
   21a88:	beq	213f4 <dta_begin_data+0xaf4>
   21a8c:	ldr	r1, [pc, #-128]	; 21a14 <dta_begin_data+0x1114>
   21a90:	mov	r0, r8
   21a94:	add	r1, pc, r1
   21a98:	bl	4154 <readstat_write_string@plt>
   21a9c:	subs	r4, r0, #0
   21aa0:	bne	20988 <dta_begin_data+0x88>
   21aa4:	b	213f4 <dta_begin_data+0xaf4>
   21aa8:	mov	r1, r5
   21aac:	bl	42a4 <memset@plt>
   21ab0:	b	2169c <dta_begin_data+0xd9c>
   21ab4:	mov	r3, #12
   21ab8:	b	21544 <dta_begin_data+0xc44>
   21abc:	mov	r3, #8
   21ac0:	b	21544 <dta_begin_data+0xc44>
   21ac4:	ldr	r3, [r1]
   21ac8:	sub	r2, r3, #1
   21acc:	cmp	r2, #1
   21ad0:	bls	21b70 <dta_begin_data+0x1270>
   21ad4:	cmp	r3, #3
   21ad8:	movne	r2, #115	; 0x73
   21adc:	bne	21530 <dta_begin_data+0xc30>
   21ae0:	mov	r3, #12
   21ae4:	b	214ac <dta_begin_data+0xbac>
   21ae8:	mov	r1, r9
   21aec:	mov	r0, r8
   21af0:	bl	202a4 <dta_emit_header_time_stamp.part.22>
   21af4:	subs	r4, r0, #0
   21af8:	bne	20988 <dta_begin_data+0x88>
   21afc:	b	20c80 <dta_begin_data+0x380>
   21b00:	ldr	r1, [pc, #-240]	; 21a18 <dta_begin_data+0x1118>
   21b04:	mov	r0, r8
   21b08:	add	r1, pc, r1
   21b0c:	bl	4154 <readstat_write_string@plt>
   21b10:	cmp	r0, #0
   21b14:	beq	21938 <dta_begin_data+0x1038>
   21b18:	b	21588 <dta_begin_data+0xc88>
   21b1c:	ldr	r1, [pc, #-264]	; 21a1c <dta_begin_data+0x111c>
   21b20:	mov	r0, r8
   21b24:	add	r1, pc, r1
   21b28:	bl	4154 <readstat_write_string@plt>
   21b2c:	b	2157c <dta_begin_data+0xc7c>
   21b30:	ldr	r1, [pc, #-280]	; 21a20 <dta_begin_data+0x1120>
   21b34:	mov	r0, r8
   21b38:	add	r1, pc, r1
   21b3c:	bl	4154 <readstat_write_string@plt>
   21b40:	subs	r4, r0, #0
   21b44:	bne	20988 <dta_begin_data+0x88>
   21b48:	ldrb	r3, [r9, #192]	; 0xc0
   21b4c:	tst	r3, #4
   21b50:	beq	2166c <dta_begin_data+0xd6c>
   21b54:	ldr	r1, [pc, #-312]	; 21a24 <dta_begin_data+0x1124>
   21b58:	mov	r0, r8
   21b5c:	add	r1, pc, r1
   21b60:	bl	4154 <readstat_write_string@plt>
   21b64:	subs	r4, r0, #0
   21b68:	bne	20988 <dta_begin_data+0x88>
   21b6c:	b	2166c <dta_begin_data+0xd6c>
   21b70:	mov	r3, #8
   21b74:	b	214ac <dta_begin_data+0xbac>

00021b78 <readstat_begin_writing_dta>:
   21b78:	ldr	r3, [r0, #8]
   21b7c:	ldr	ip, [pc, #416]	; 21d24 <readstat_begin_writing_dta+0x1ac>
   21b80:	cmp	r3, #0
   21b84:	push	{r4, r5, lr}
   21b88:	add	ip, pc, ip
   21b8c:	ldr	lr, [pc, #404]	; 21d28 <readstat_begin_writing_dta+0x1b0>
   21b90:	bne	21c60 <readstat_begin_writing_dta+0xe8>
   21b94:	mov	r3, #118	; 0x76
   21b98:	str	r3, [r0, #8]
   21b9c:	ldr	r3, [pc, #392]	; 21d2c <readstat_begin_writing_dta+0x1b4>
   21ba0:	ldr	ip, [ip, lr]
   21ba4:	add	r3, pc, r3
   21ba8:	str	r3, [r0, #228]	; 0xe4
   21bac:	str	ip, [r0, #292]	; 0x124
   21bb0:	ldr	ip, [pc, #376]	; 21d30 <readstat_begin_writing_dta+0x1b8>
   21bb4:	ldr	r3, [pc, #376]	; 21d34 <readstat_begin_writing_dta+0x1bc>
   21bb8:	add	ip, pc, ip
   21bbc:	add	r3, pc, r3
   21bc0:	str	ip, [r0, #232]	; 0xe8
   21bc4:	str	r3, [r0, #260]	; 0x104
   21bc8:	ldr	r5, [pc, #360]	; 21d38 <readstat_begin_writing_dta+0x1c0>
   21bcc:	ldr	r4, [pc, #360]	; 21d3c <readstat_begin_writing_dta+0x1c4>
   21bd0:	ldr	lr, [pc, #360]	; 21d40 <readstat_begin_writing_dta+0x1c8>
   21bd4:	ldr	ip, [pc, #360]	; 21d44 <readstat_begin_writing_dta+0x1cc>
   21bd8:	ldr	r3, [pc, #360]	; 21d48 <readstat_begin_writing_dta+0x1d0>
   21bdc:	add	r5, pc, r5
   21be0:	add	r4, pc, r4
   21be4:	add	lr, pc, lr
   21be8:	add	ip, pc, ip
   21bec:	add	r3, pc, r3
   21bf0:	str	r5, [r0, #236]	; 0xec
   21bf4:	str	r4, [r0, #240]	; 0xf0
   21bf8:	str	lr, [r0, #244]	; 0xf4
   21bfc:	str	ip, [r0, #268]	; 0x10c
   21c00:	str	r3, [r0, #272]	; 0x110
   21c04:	ldr	ip, [pc, #320]	; 21d4c <readstat_begin_writing_dta+0x1d4>
   21c08:	ldr	r3, [pc, #320]	; 21d50 <readstat_begin_writing_dta+0x1d8>
   21c0c:	add	ip, pc, ip
   21c10:	add	r3, pc, r3
   21c14:	ldr	r5, [pc, #312]	; 21d54 <readstat_begin_writing_dta+0x1dc>
   21c18:	ldr	r4, [pc, #312]	; 21d58 <readstat_begin_writing_dta+0x1e0>
   21c1c:	ldr	lr, [pc, #312]	; 21d5c <readstat_begin_writing_dta+0x1e4>
   21c20:	str	ip, [r0, #248]	; 0xf8
   21c24:	str	r3, [r0, #252]	; 0xfc
   21c28:	ldr	ip, [pc, #304]	; 21d60 <readstat_begin_writing_dta+0x1e8>
   21c2c:	ldr	r3, [pc, #304]	; 21d64 <readstat_begin_writing_dta+0x1ec>
   21c30:	add	r5, pc, r5
   21c34:	add	r4, pc, r4
   21c38:	add	lr, pc, lr
   21c3c:	add	ip, pc, ip
   21c40:	add	r3, pc, r3
   21c44:	str	r5, [r0, #256]	; 0x100
   21c48:	str	r4, [r0, #264]	; 0x108
   21c4c:	str	lr, [r0, #276]	; 0x114
   21c50:	str	ip, [r0, #284]	; 0x11c
   21c54:	str	r3, [r0, #288]	; 0x120
   21c58:	pop	{r4, r5, lr}
   21c5c:	b	3f68 <readstat_begin_writing_file@plt>
   21c60:	ldr	ip, [ip, lr]
   21c64:	cmp	r3, #116	; 0x74
   21c68:	str	ip, [r0, #292]	; 0x124
   21c6c:	bgt	21cd4 <readstat_begin_writing_dta+0x15c>
   21c70:	ldr	ip, [pc, #240]	; 21d68 <readstat_begin_writing_dta+0x1f0>
   21c74:	cmp	r3, #110	; 0x6e
   21c78:	add	ip, pc, ip
   21c7c:	bgt	21d0c <readstat_begin_writing_dta+0x194>
   21c80:	cmp	r3, #109	; 0x6d
   21c84:	str	ip, [r0, #228]	; 0xe4
   21c88:	bgt	21ce8 <readstat_begin_writing_dta+0x170>
   21c8c:	ldr	ip, [pc, #216]	; 21d6c <readstat_begin_writing_dta+0x1f4>
   21c90:	add	ip, pc, ip
   21c94:	str	ip, [r0, #232]	; 0xe8
   21c98:	cmp	r3, #112	; 0x70
   21c9c:	bgt	21bc8 <readstat_begin_writing_dta+0x50>
   21ca0:	ldr	r4, [pc, #200]	; 21d70 <readstat_begin_writing_dta+0x1f8>
   21ca4:	ldr	lr, [pc, #200]	; 21d74 <readstat_begin_writing_dta+0x1fc>
   21ca8:	ldr	ip, [pc, #200]	; 21d78 <readstat_begin_writing_dta+0x200>
   21cac:	ldr	r3, [pc, #200]	; 21d7c <readstat_begin_writing_dta+0x204>
   21cb0:	add	r4, pc, r4
   21cb4:	add	lr, pc, lr
   21cb8:	add	ip, pc, ip
   21cbc:	add	r3, pc, r3
   21cc0:	str	r4, [r0, #236]	; 0xec
   21cc4:	str	lr, [r0, #240]	; 0xf0
   21cc8:	str	ip, [r0, #244]	; 0xf4
   21ccc:	str	r3, [r0, #268]	; 0x10c
   21cd0:	b	21c04 <readstat_begin_writing_dta+0x8c>
   21cd4:	ldr	ip, [pc, #164]	; 21d80 <readstat_begin_writing_dta+0x208>
   21cd8:	cmp	r3, #117	; 0x75
   21cdc:	add	ip, pc, ip
   21ce0:	str	ip, [r0, #228]	; 0xe4
   21ce4:	bne	21bb0 <readstat_begin_writing_dta+0x38>
   21ce8:	ldr	ip, [pc, #148]	; 21d84 <readstat_begin_writing_dta+0x20c>
   21cec:	cmp	r3, #117	; 0x75
   21cf0:	add	ip, pc, ip
   21cf4:	str	ip, [r0, #232]	; 0xe8
   21cf8:	bne	21c98 <readstat_begin_writing_dta+0x120>
   21cfc:	ldr	r3, [pc, #132]	; 21d88 <readstat_begin_writing_dta+0x210>
   21d00:	add	r3, pc, r3
   21d04:	str	r3, [r0, #260]	; 0x104
   21d08:	b	21bc8 <readstat_begin_writing_dta+0x50>
   21d0c:	ldr	ip, [pc, #120]	; 21d8c <readstat_begin_writing_dta+0x214>
   21d10:	cmp	r3, #109	; 0x6d
   21d14:	add	ip, pc, ip
   21d18:	str	ip, [r0, #228]	; 0xe4
   21d1c:	ble	21c8c <readstat_begin_writing_dta+0x114>
   21d20:	b	21ce8 <readstat_begin_writing_dta+0x170>
   21d24:	.word	0x00023470
   21d28:	.word	0x000002fc
   21d2c:	.word	0xffffdc04
   21d30:	.word	0xffffe868
   21d34:	.word	0xffffe66c
   21d38:	.word	0xffffd67c
   21d3c:	.word	0xffffd6a0
   21d40:	.word	0xffffd6d4
   21d44:	.word	0xffffddb0
   21d48:	.word	0xffffdcbc
   21d4c:	.word	0xffffec14
   21d50:	.word	0xffffeb24
   21d54:	.word	0xffffd858
   21d58:	.word	0xffffd6d4
   21d5c:	.word	0xffffecc0
   21d60:	.word	0xffffdde8
   21d64:	.word	0xffffd6c4
   21d68:	.word	0xffffe89c
   21d6c:	.word	0xffffe964
   21d70:	.word	0xffffd5bc
   21d74:	.word	0xffffd5e8
   21d78:	.word	0xffffd614
   21d7c:	.word	0xffffe8ac
   21d80:	.word	0xffffdacc
   21d84:	.word	0xffffe9a4
   21d88:	.word	0xffffd5e0
   21d8c:	.word	0xffffe7ac

00021d90 <submit_value_label>:
   21d90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21d94:	sub	sp, sp, #36	; 0x24
   21d98:	ldr	r6, [r0, #20]
   21d9c:	ldrd	sl, [sp, #72]	; 0x48
   21da0:	cmp	r6, #0
   21da4:	beq	21ed0 <submit_value_label+0x140>
   21da8:	cmp	r2, #2
   21dac:	mov	r7, r0
   21db0:	mov	r8, r1
   21db4:	vmov	r0, r1, d0
   21db8:	beq	21e2c <submit_value_label+0x9c>
   21dbc:	cmp	r2, #3
   21dc0:	beq	21ed0 <submit_value_label+0x140>
   21dc4:	add	r4, sp, #16
   21dc8:	mov	r3, #0
   21dcc:	cmp	r2, #0
   21dd0:	str	r3, [r4, #4]
   21dd4:	str	r3, [sp, #16]
   21dd8:	str	r3, [r4, #8]
   21ddc:	str	r3, [r4, #12]
   21de0:	bne	21edc <submit_value_label+0x14c>
   21de4:	vstr	d0, [sp, #16]
   21de8:	mov	r3, #5
   21dec:	str	r3, [sp, #24]
   21df0:	add	r3, sp, #32
   21df4:	ldmdb	r3, {r0, r1}
   21df8:	ldr	r3, [sp, #96]	; 0x60
   21dfc:	str	r3, [sp, #12]
   21e00:	ldr	r3, [sp, #92]	; 0x5c
   21e04:	stm	sp, {r0, r1}
   21e08:	str	r3, [sp, #8]
   21e0c:	mov	r0, r8
   21e10:	ldm	r4, {r2, r3}
   21e14:	blx	r6
   21e18:	cmp	r0, #0
   21e1c:	beq	21ed0 <submit_value_label+0x140>
   21e20:	mov	r0, #4
   21e24:	add	sp, sp, #36	; 0x24
   21e28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21e2c:	ldrd	r2, [sp, #80]	; 0x50
   21e30:	cmp	r2, sl
   21e34:	sbcs	r3, r3, fp
   21e38:	blt	21ed0 <submit_value_label+0x140>
   21e3c:	add	r9, sp, #24
   21e40:	mov	r3, r8
   21e44:	add	r4, sp, #16
   21e48:	mov	r8, r7
   21e4c:	mov	r5, #0
   21e50:	mov	r7, r6
   21e54:	mov	r6, r9
   21e58:	mov	r9, r3
   21e5c:	b	21e64 <submit_value_label+0xd4>
   21e60:	ldr	r7, [r8, #20]
   21e64:	mov	r0, sl
   21e68:	mov	r1, fp
   21e6c:	str	r5, [r4]
   21e70:	str	r5, [r4, #4]
   21e74:	str	r5, [r4, #8]
   21e78:	str	r5, [r4, #12]
   21e7c:	bl	25554 <__aeabi_l2d>
   21e80:	mov	r3, #5
   21e84:	str	r3, [sp, #24]
   21e88:	ldr	r3, [sp, #96]	; 0x60
   21e8c:	str	r3, [sp, #12]
   21e90:	ldr	r3, [sp, #92]	; 0x5c
   21e94:	str	r3, [sp, #8]
   21e98:	strd	r0, [sp, #16]
   21e9c:	ldm	r6, {r0, r1}
   21ea0:	ldm	r4, {r2, r3}
   21ea4:	stm	sp, {r0, r1}
   21ea8:	mov	r0, r9
   21eac:	blx	r7
   21eb0:	cmp	r0, #0
   21eb4:	bne	21e20 <submit_value_label+0x90>
   21eb8:	ldrd	r2, [sp, #80]	; 0x50
   21ebc:	adds	sl, sl, #1
   21ec0:	adc	fp, fp, #0
   21ec4:	cmp	r2, sl
   21ec8:	sbcs	r3, r3, fp
   21ecc:	bge	21e60 <submit_value_label+0xd0>
   21ed0:	mov	r0, #0
   21ed4:	add	sp, sp, #36	; 0x24
   21ed8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21edc:	cmp	r2, #1
   21ee0:	beq	21f00 <submit_value_label+0x170>
   21ee4:	cmn	r2, #1
   21ee8:	moveq	r2, #0
   21eec:	ldreq	r3, [pc, #24]	; 21f0c <submit_value_label+0x17c>
   21ef0:	moveq	r1, #5
   21ef4:	streq	r1, [sp, #24]
   21ef8:	strdeq	r2, [sp, #16]
   21efc:	b	21df0 <submit_value_label+0x60>
   21f00:	ldr	r3, [sp, #88]	; 0x58
   21f04:	str	r3, [sp, #16]
   21f08:	b	21df0 <submit_value_label+0x60>
   21f0c:	.word	0x7ff80000

00021f10 <submit_columns>:
   21f10:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21f14:	ldr	r3, [r1, #268]	; 0x10c
   21f18:	cmp	r3, #0
   21f1c:	ble	21fec <submit_columns+0xdc>
   21f20:	mov	r5, #2208	; 0x8a0
   21f24:	ldr	r4, [r1, #276]	; 0x114
   21f28:	ldr	lr, [r1, #256]	; 0x100
   21f2c:	mul	r5, r5, r3
   21f30:	mov	r3, #0
   21f34:	ldr	ip, [r4, r3]
   21f38:	add	r3, r3, #2208	; 0x8a0
   21f3c:	cmp	ip, lr
   21f40:	addge	lr, ip, #1
   21f44:	strge	lr, [r1, #256]	; 0x100
   21f48:	cmp	r3, r5
   21f4c:	bne	21f34 <submit_columns+0x24>
   21f50:	ldr	r8, [r0, #8]
   21f54:	cmp	r8, #0
   21f58:	beq	21fec <submit_columns+0xdc>
   21f5c:	mov	r7, #0
   21f60:	mov	sl, r2
   21f64:	mov	r9, r0
   21f68:	mov	r6, r1
   21f6c:	mov	r5, r7
   21f70:	mov	fp, #2208	; 0x8a0
   21f74:	b	21f80 <submit_columns+0x70>
   21f78:	ldr	r4, [r6, #276]	; 0x114
   21f7c:	ldr	r8, [r9, #8]
   21f80:	mla	r4, fp, r5, r4
   21f84:	mov	r0, r5
   21f88:	add	r1, r4, #16
   21f8c:	ldr	r3, [r4, #16]
   21f90:	str	r5, [r4, #20]
   21f94:	cmp	r3, #0
   21f98:	str	r7, [r4, #2164]	; 0x874
   21f9c:	ldreq	r3, [r4, #8]
   21fa0:	streq	r3, [r4, #1612]	; 0x64c
   21fa4:	ldrb	r3, [r4, #2168]	; 0x878
   21fa8:	cmp	r3, #0
   21fac:	addne	r2, r4, #2160	; 0x870
   21fb0:	mov	r3, sl
   21fb4:	addne	r2, r2, #8
   21fb8:	moveq	r2, #0
   21fbc:	blx	r8
   21fc0:	cmp	r0, #2
   21fc4:	moveq	r3, #1
   21fc8:	streq	r3, [r4, #12]
   21fcc:	beq	21fdc <submit_columns+0xcc>
   21fd0:	cmp	r0, #1
   21fd4:	beq	21ff4 <submit_columns+0xe4>
   21fd8:	add	r7, r7, #1
   21fdc:	ldr	r3, [r6, #268]	; 0x10c
   21fe0:	add	r5, r5, #1
   21fe4:	cmp	r3, r5
   21fe8:	bgt	21f78 <submit_columns+0x68>
   21fec:	mov	r0, #0
   21ff0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21ff4:	mov	r0, #4
   21ff8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

00021ffc <readstat_copy>:
   21ffc:	cmp	r3, r1
   22000:	push	{r4, lr}
   22004:	mov	r4, r3
   22008:	subcs	r4, r1, #1
   2200c:	mov	r1, r2
   22010:	mov	r2, r4
   22014:	bl	3f20 <memcpy@plt>
   22018:	mov	r2, #0
   2201c:	strb	r2, [r0, r4]
   22020:	pop	{r4, pc}

00022024 <readstat_copy_lower>:
   22024:	push	{r4, r5, r6, lr}
   22028:	mov	r6, r1
   2202c:	mov	r4, r0
   22030:	bl	3e6c <readstat_copy@plt>
   22034:	cmp	r6, #0
   22038:	popeq	{r4, r5, r6, pc}
   2203c:	ldrb	r5, [r4]
   22040:	cmp	r5, #0
   22044:	popeq	{r4, r5, r6, pc}
   22048:	bl	416c <__ctype_tolower_loc@plt>
   2204c:	mov	r3, r4
   22050:	add	r1, r4, r6
   22054:	ldr	r2, [r0]
   22058:	ldr	r2, [r2, r5, lsl #2]
   2205c:	strb	r2, [r3], #1
   22060:	cmp	r1, r3
   22064:	popeq	{r4, r5, r6, pc}
   22068:	ldrb	r5, [r3]
   2206c:	cmp	r5, #0
   22070:	bne	22054 <readstat_copy_lower+0x30>
   22074:	pop	{r4, r5, r6, pc}

00022078 <readstat_copy_quoted>:
   22078:	cmp	r3, r1
   2207c:	subcs	r3, r1, #1
   22080:	cmp	r3, #0
   22084:	push	{r4, r5, r6, lr}
   22088:	beq	22114 <readstat_copy_quoted+0x9c>
   2208c:	mov	ip, r0
   22090:	mov	lr, #1
   22094:	mov	r1, #0
   22098:	mov	r6, #9
   2209c:	b	220b8 <readstat_copy_quoted+0x40>
   220a0:	add	r1, r1, #1
   220a4:	cmp	r3, r1
   220a8:	strb	r4, [ip]
   220ac:	bls	220f0 <readstat_copy_quoted+0x78>
   220b0:	add	lr, lr, #1
   220b4:	add	ip, ip, #1
   220b8:	ldrb	r4, [r2, r1]
   220bc:	sub	r5, lr, #1
   220c0:	cmp	r4, #92	; 0x5c
   220c4:	bne	220a0 <readstat_copy_quoted+0x28>
   220c8:	add	r4, r1, #1
   220cc:	cmp	r3, r4
   220d0:	bls	2210c <readstat_copy_quoted+0x94>
   220d4:	ldrb	r4, [r2, r4]
   220d8:	add	r1, r1, #2
   220dc:	cmp	r4, #116	; 0x74
   220e0:	beq	220fc <readstat_copy_quoted+0x84>
   220e4:	cmp	r3, r1
   220e8:	strb	r4, [ip]
   220ec:	bhi	220b0 <readstat_copy_quoted+0x38>
   220f0:	mov	r3, #0
   220f4:	strb	r3, [r0, lr]
   220f8:	pop	{r4, r5, r6, pc}
   220fc:	cmp	r3, r1
   22100:	strb	r6, [ip]
   22104:	bhi	220b0 <readstat_copy_quoted+0x38>
   22108:	b	220f0 <readstat_copy_quoted+0x78>
   2210c:	mov	lr, r5
   22110:	b	220f0 <readstat_copy_quoted+0x78>
   22114:	mov	lr, r3
   22118:	b	220f0 <readstat_copy_quoted+0x78>
   2211c:	andeq	r0, r0, r0

00022120 <readstat_parse_sas_commands>:
   22120:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22124:	sub	sp, sp, #2304	; 0x900
   22128:	ldr	ip, [r0, #32]
   2212c:	sub	sp, sp, #12
   22130:	mov	r4, r3
   22134:	str	r0, [sp, #60]	; 0x3c
   22138:	str	r2, [sp, #104]	; 0x68
   2213c:	mov	r0, r1
   22140:	ldr	r2, [ip]
   22144:	ldr	r1, [ip, #20]
   22148:	str	r3, [sp, #128]	; 0x80
   2214c:	blx	r2
   22150:	cmn	r0, #1
   22154:	beq	224a4 <readstat_parse_sas_commands+0x384>
   22158:	ldr	r6, [sp, #60]	; 0x3c
   2215c:	mov	r1, #2
   22160:	mov	r0, #0
   22164:	ldr	r3, [r6, #32]
   22168:	ldr	r4, [r3, #8]
   2216c:	ldr	r2, [r3, #20]
   22170:	blx	r4
   22174:	cmn	r0, #1
   22178:	mov	r4, r0
   2217c:	beq	22444 <readstat_parse_sas_commands+0x324>
   22180:	ldr	r3, [r6, #32]
   22184:	mov	r1, #0
   22188:	mov	r0, r1
   2218c:	ldr	r5, [r3, #8]
   22190:	ldr	r2, [r3, #20]
   22194:	blx	r5
   22198:	mov	r0, r4
   2219c:	bl	410c <malloc@plt>
   221a0:	ldr	r3, [r6, #32]
   221a4:	mov	r1, r4
   221a8:	add	r2, r0, r4
   221ac:	str	r2, [sp, #52]	; 0x34
   221b0:	ldr	r4, [r3, #12]
   221b4:	mov	r6, r2
   221b8:	ldr	r2, [r3, #20]
   221bc:	mov	r5, r0
   221c0:	str	r0, [sp, #132]	; 0x84
   221c4:	blx	r4
   221c8:	mov	r1, #280	; 0x118
   221cc:	mov	r0, #1
   221d0:	bl	3d58 <calloc@plt>
   221d4:	subs	r3, r0, #0
   221d8:	mov	r1, r3
   221dc:	str	r3, [sp, #32]
   221e0:	beq	22954 <readstat_parse_sas_commands+0x834>
   221e4:	mov	r3, #1
   221e8:	cmp	r5, r6
   221ec:	str	r3, [r1, #256]	; 0x100
   221f0:	beq	22868 <readstat_parse_sas_commands+0x748>
   221f4:	ldr	r3, [pc, #1012]	; 225f0 <readstat_parse_sas_commands+0x4d0>
   221f8:	ldr	r2, [pc, #1012]	; 225f4 <readstat_parse_sas_commands+0x4d4>
   221fc:	vldr	d7, [pc, #996]	; 225e8 <readstat_parse_sas_commands+0x4c8>
   22200:	add	r2, pc, r2
   22204:	add	r3, pc, r3
   22208:	mov	r1, r2
   2220c:	str	r2, [sp, #64]	; 0x40
   22210:	sub	r3, r3, #1584	; 0x630
   22214:	ldr	r2, [pc, #988]	; 225f8 <readstat_parse_sas_commands+0x4d8>
   22218:	add	r0, r1, #1680	; 0x690
   2221c:	sub	r3, r3, #4
   22220:	mov	r1, #0
   22224:	vstr	d7, [sp, #72]	; 0x48
   22228:	mov	fp, r1
   2222c:	add	r2, pc, r2
   22230:	str	r1, [sp, #48]	; 0x30
   22234:	str	r3, [sp, #56]	; 0x38
   22238:	ldr	r1, [pc, #956]	; 225fc <readstat_parse_sas_commands+0x4dc>
   2223c:	add	r3, r0, #4
   22240:	ldr	r8, [pc, #952]	; 22600 <readstat_parse_sas_commands+0x4e0>
   22244:	str	r3, [sp, #68]	; 0x44
   22248:	str	r5, [sp, #124]	; 0x7c
   2224c:	sub	r3, r2, #712	; 0x2c8
   22250:	mov	r9, r5
   22254:	mov	sl, fp
   22258:	mov	r4, #27
   2225c:	mov	r5, #5632	; 0x1600
   22260:	mov	r6, #0
   22264:	mov	r7, #0
   22268:	str	r3, [sp, #120]	; 0x78
   2226c:	mov	r3, #5
   22270:	str	fp, [sp, #88]	; 0x58
   22274:	str	fp, [sp, #84]	; 0x54
   22278:	str	fp, [sp, #36]	; 0x24
   2227c:	str	fp, [sp, #100]	; 0x64
   22280:	str	r6, [sp, #108]	; 0x6c
   22284:	str	r7, [sp, #112]	; 0x70
   22288:	str	r3, [sp, #80]	; 0x50
   2228c:	ldr	lr, [pc, #880]	; 22604 <readstat_parse_sas_commands+0x4e4>
   22290:	cmp	r4, #0
   22294:	add	lr, pc, lr
   22298:	add	lr, lr, r1
   2229c:	mov	r3, r5
   222a0:	beq	222e8 <readstat_parse_sas_commands+0x1c8>
   222a4:	sub	r1, r4, #1
   222a8:	adds	r1, lr, r1
   222ac:	bcs	222e0 <readstat_parse_sas_commands+0x1c0>
   222b0:	ldrb	ip, [r9]
   222b4:	mov	r2, lr
   222b8:	sub	r3, r1, r2
   222bc:	ldrb	r0, [r2, r3, asr #1]
   222c0:	add	r3, r2, r3, asr #1
   222c4:	cmp	r0, ip
   222c8:	subhi	r1, r3, #1
   222cc:	bhi	222d8 <readstat_parse_sas_commands+0x1b8>
   222d0:	bcs	228a4 <readstat_parse_sas_commands+0x784>
   222d4:	add	r2, r3, #1
   222d8:	cmp	r2, r1
   222dc:	bls	222b8 <readstat_parse_sas_commands+0x198>
   222e0:	add	lr, lr, r4
   222e4:	add	r3, r5, r4
   222e8:	ldr	r2, [pc, #792]	; 22608 <readstat_parse_sas_commands+0x4e8>
   222ec:	add	r2, pc, r2
   222f0:	add	r8, r2, r8
   222f4:	ldrb	r5, [r8, #-2688]	; 0xfffff580
   222f8:	cmp	r5, #0
   222fc:	beq	22354 <readstat_parse_sas_commands+0x234>
   22300:	add	r0, lr, r5, lsl #1
   22304:	sub	r0, r0, #2
   22308:	cmp	lr, r0
   2230c:	bhi	22350 <readstat_parse_sas_commands+0x230>
   22310:	ldrb	r4, [r9]
   22314:	mov	r1, lr
   22318:	sub	r2, r0, r1
   2231c:	asr	r2, r2, #1
   22320:	bic	r2, r2, #1
   22324:	add	ip, r1, r2
   22328:	ldrb	r2, [r1, r2]
   2232c:	cmp	r2, r4
   22330:	subhi	r0, ip, #2
   22334:	bhi	22348 <readstat_parse_sas_commands+0x228>
   22338:	ldrb	r2, [ip, #1]
   2233c:	add	r1, ip, #2
   22340:	cmp	r2, r4
   22344:	bcs	228b0 <readstat_parse_sas_commands+0x790>
   22348:	cmp	r1, r0
   2234c:	bls	22318 <readstat_parse_sas_commands+0x1f8>
   22350:	add	r3, r3, r5
   22354:	ldr	lr, [pc, #688]	; 2260c <readstat_parse_sas_commands+0x4ec>
   22358:	lsl	r2, r3, #1
   2235c:	add	lr, pc, lr
   22360:	add	r3, lr, r3
   22364:	ldr	r1, [sp, #56]	; 0x38
   22368:	ldrb	r4, [r3, #1724]	; 0x6bc
   2236c:	ldrsh	r8, [r1, r2]
   22370:	cmp	r4, #0
   22374:	beq	224d8 <readstat_parse_sas_commands+0x3b8>
   22378:	ldr	r3, [sp, #120]	; 0x78
   2237c:	ldrb	r5, [r3, r4]
   22380:	add	r4, r3, r4
   22384:	ldr	r3, [pc, #644]	; 22610 <readstat_parse_sas_commands+0x4f0>
   22388:	add	r5, r4, r5
   2238c:	add	r3, pc, r3
   22390:	str	r3, [sp, #92]	; 0x5c
   22394:	ldr	r3, [pc, #632]	; 22614 <readstat_parse_sas_commands+0x4f4>
   22398:	add	r3, pc, r3
   2239c:	str	r3, [sp, #96]	; 0x60
   223a0:	cmp	r4, r5
   223a4:	beq	224d8 <readstat_parse_sas_commands+0x3b8>
   223a8:	ldrb	r3, [r4, #1]!
   223ac:	cmp	r3, #34	; 0x22
   223b0:	addls	pc, pc, r3, lsl #2
   223b4:	b	223a0 <readstat_parse_sas_commands+0x280>
   223b8:	b	22528 <readstat_parse_sas_commands+0x408>
   223bc:	b	225c8 <readstat_parse_sas_commands+0x4a8>
   223c0:	b	22578 <readstat_parse_sas_commands+0x458>
   223c4:	b	22564 <readstat_parse_sas_commands+0x444>
   223c8:	b	22554 <readstat_parse_sas_commands+0x434>
   223cc:	b	2284c <readstat_parse_sas_commands+0x72c>
   223d0:	b	22840 <readstat_parse_sas_commands+0x720>
   223d4:	b	22828 <readstat_parse_sas_commands+0x708>
   223d8:	b	22810 <readstat_parse_sas_commands+0x6f0>
   223dc:	b	227f8 <readstat_parse_sas_commands+0x6d8>
   223e0:	b	227e0 <readstat_parse_sas_commands+0x6c0>
   223e4:	b	227c8 <readstat_parse_sas_commands+0x6a8>
   223e8:	b	22778 <readstat_parse_sas_commands+0x658>
   223ec:	b	22748 <readstat_parse_sas_commands+0x628>
   223f0:	b	22730 <readstat_parse_sas_commands+0x610>
   223f4:	b	2270c <readstat_parse_sas_commands+0x5ec>
   223f8:	b	226e4 <readstat_parse_sas_commands+0x5c4>
   223fc:	b	22694 <readstat_parse_sas_commands+0x574>
   22400:	b	22514 <readstat_parse_sas_commands+0x3f4>
   22404:	b	224cc <readstat_parse_sas_commands+0x3ac>
   22408:	b	22514 <readstat_parse_sas_commands+0x3f4>
   2240c:	b	224cc <readstat_parse_sas_commands+0x3ac>
   22410:	b	22534 <readstat_parse_sas_commands+0x414>
   22414:	b	22514 <readstat_parse_sas_commands+0x3f4>
   22418:	b	224cc <readstat_parse_sas_commands+0x3ac>
   2241c:	b	22658 <readstat_parse_sas_commands+0x538>
   22420:	b	2263c <readstat_parse_sas_commands+0x51c>
   22424:	b	22630 <readstat_parse_sas_commands+0x510>
   22428:	b	22624 <readstat_parse_sas_commands+0x504>
   2242c:	b	2251c <readstat_parse_sas_commands+0x3fc>
   22430:	b	2251c <readstat_parse_sas_commands+0x3fc>
   22434:	b	22548 <readstat_parse_sas_commands+0x428>
   22438:	b	22674 <readstat_parse_sas_commands+0x554>
   2243c:	b	2267c <readstat_parse_sas_commands+0x55c>
   22440:	b	22688 <readstat_parse_sas_commands+0x568>
   22444:	mov	r2, #15
   22448:	mov	r3, #0
   2244c:	str	r3, [sp, #132]	; 0x84
   22450:	str	r3, [sp, #32]
   22454:	ldr	r3, [sp, #60]	; 0x3c
   22458:	str	r2, [sp, #36]	; 0x24
   2245c:	ldr	r3, [r3, #32]
   22460:	ldr	r1, [r3, #4]
   22464:	ldr	r0, [r3, #20]
   22468:	blx	r1
   2246c:	ldr	r0, [sp, #132]	; 0x84
   22470:	bl	3ec0 <free@plt>
   22474:	ldr	r2, [sp, #36]	; 0x24
   22478:	ldr	r3, [sp, #128]	; 0x80
   2247c:	ldr	r0, [sp, #32]
   22480:	cmp	r3, #0
   22484:	strne	r2, [r3]
   22488:	bl	3fbc <readstat_schema_free@plt>
   2248c:	mov	r3, #0
   22490:	str	r3, [sp, #32]
   22494:	ldr	r0, [sp, #32]
   22498:	add	sp, sp, #2304	; 0x900
   2249c:	add	sp, sp, #12
   224a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   224a4:	cmp	r4, #0
   224a8:	beq	22948 <readstat_parse_sas_commands+0x828>
   224ac:	mov	r3, #1
   224b0:	str	r3, [r4]
   224b4:	mov	r3, #0
   224b8:	str	r3, [sp, #32]
   224bc:	ldr	r0, [sp, #32]
   224c0:	add	sp, sp, #2304	; 0x900
   224c4:	add	sp, sp, #12
   224c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   224cc:	cmp	r4, r5
   224d0:	sub	sl, r9, fp
   224d4:	bne	223a8 <readstat_parse_sas_commands+0x288>
   224d8:	cmp	r8, #0
   224dc:	beq	228dc <readstat_parse_sas_commands+0x7bc>
   224e0:	ldr	r3, [sp, #52]	; 0x34
   224e4:	add	r9, r9, #1
   224e8:	cmp	r3, r9
   224ec:	beq	22858 <readstat_parse_sas_commands+0x738>
   224f0:	ldr	r2, [sp, #64]	; 0x40
   224f4:	ldr	r0, [sp, #68]	; 0x44
   224f8:	sub	r1, r2, #512	; 0x200
   224fc:	lsl	r3, r8, #1
   22500:	add	r2, r2, r8
   22504:	ldrsh	r1, [r1, r3]
   22508:	ldrsh	r5, [r0, r3]
   2250c:	ldrb	r4, [r2, #3880]	; 0xf28
   22510:	b	2228c <readstat_parse_sas_commands+0x16c>
   22514:	mov	fp, r9
   22518:	b	223a0 <readstat_parse_sas_commands+0x280>
   2251c:	mov	r3, #1
   22520:	str	r3, [sp, #36]	; 0x24
   22524:	b	223a0 <readstat_parse_sas_commands+0x280>
   22528:	mov	r6, #0
   2252c:	mov	r7, r6
   22530:	b	223a0 <readstat_parse_sas_commands+0x280>
   22534:	ldr	r3, [sp, #100]	; 0x64
   22538:	str	r9, [sp, #124]	; 0x7c
   2253c:	add	r3, r3, #1
   22540:	str	r3, [sp, #100]	; 0x64
   22544:	b	223a0 <readstat_parse_sas_commands+0x280>
   22548:	mov	r3, #3
   2254c:	str	r3, [sp, #36]	; 0x24
   22550:	b	223a0 <readstat_parse_sas_commands+0x280>
   22554:	ldr	r3, [sp, #88]	; 0x58
   22558:	sub	r3, r6, r3
   2255c:	str	r3, [sp, #48]	; 0x30
   22560:	b	223a0 <readstat_parse_sas_commands+0x280>
   22564:	sub	r3, r6, #1
   22568:	str	r3, [sp, #88]	; 0x58
   2256c:	mov	r3, #1
   22570:	str	r3, [sp, #48]	; 0x30
   22574:	b	223a0 <readstat_parse_sas_commands+0x280>
   22578:	ldrb	r3, [r9]
   2257c:	sub	r2, r3, #48	; 0x30
   22580:	uxtb	r1, r2
   22584:	cmp	r1, #9
   22588:	bls	225a0 <readstat_parse_sas_commands+0x480>
   2258c:	sub	r2, r3, #65	; 0x41
   22590:	cmp	r2, #5
   22594:	bhi	228bc <readstat_parse_sas_commands+0x79c>
   22598:	sub	r3, r3, #55	; 0x37
   2259c:	mov	r2, r3
   225a0:	asr	r3, r2, #31
   225a4:	lsl	r1, r7, #4
   225a8:	orr	r1, r1, r6, lsr #28
   225ac:	str	r1, [sp, #44]	; 0x2c
   225b0:	lsl	r1, r6, #4
   225b4:	str	r1, [sp, #40]	; 0x28
   225b8:	ldrd	r6, [sp, #40]	; 0x28
   225bc:	adds	r6, r6, r2
   225c0:	adc	r7, r7, r3
   225c4:	b	223a0 <readstat_parse_sas_commands+0x280>
   225c8:	mov	r0, #10
   225cc:	ldrb	r1, [r9]
   225d0:	umull	r2, r3, r6, r0
   225d4:	mla	r3, r0, r7, r3
   225d8:	sub	r1, r1, #48	; 0x30
   225dc:	adds	r6, r2, r1
   225e0:	adc	r7, r3, r1, asr #31
   225e4:	b	223a0 <readstat_parse_sas_commands+0x280>
   225e8:	.word	0x00000000
   225ec:	.word	0x7ff80000
   225f0:	.word	0x00008344
   225f4:	.word	0x0000c338
   225f8:	.word	0x0000c30c
   225fc:	.word	0x00001507
   22600:	.word	0x00000446
   22604:	.word	0x000062bc
   22608:	.word	0x0000825c
   2260c:	.word	0x0000a1e4
   22610:	.word	0x0000d520
   22614:	.word	0x0000d520
   22618:	.word	0x00000445
   2261c:	.word	0x0000cfe8
   22620:	.word	0x0000cf4c
   22624:	mov	r3, #2
   22628:	str	r3, [sp, #36]	; 0x24
   2262c:	b	223a0 <readstat_parse_sas_commands+0x280>
   22630:	str	r6, [sp, #108]	; 0x6c
   22634:	str	r7, [sp, #112]	; 0x70
   22638:	b	223a0 <readstat_parse_sas_commands+0x280>
   2263c:	mov	r0, r6
   22640:	mov	r1, r7
   22644:	bl	25540 <__aeabi_ul2d>
   22648:	mov	r3, #0
   2264c:	str	r3, [sp, #36]	; 0x24
   22650:	strd	r0, [sp, #72]	; 0x48
   22654:	b	223a0 <readstat_parse_sas_commands+0x280>
   22658:	rsbs	r0, r6, #0
   2265c:	rsc	r1, r7, #0
   22660:	bl	25540 <__aeabi_ul2d>
   22664:	mov	r3, #0
   22668:	str	r3, [sp, #36]	; 0x24
   2266c:	strd	r0, [sp, #72]	; 0x48
   22670:	b	223a0 <readstat_parse_sas_commands+0x280>
   22674:	str	r6, [sp, #48]	; 0x30
   22678:	b	223a0 <readstat_parse_sas_commands+0x280>
   2267c:	sub	r3, r6, #1
   22680:	str	r3, [sp, #84]	; 0x54
   22684:	b	223a0 <readstat_parse_sas_commands+0x280>
   22688:	mov	r3, #0
   2268c:	str	r3, [sp, #84]	; 0x54
   22690:	b	223a0 <readstat_parse_sas_commands+0x280>
   22694:	ldr	r3, [sp, #104]	; 0x68
   22698:	strd	r6, [sp, #8]
   2269c:	str	r3, [sp, #24]
   226a0:	ldr	r3, [sp, #108]	; 0x6c
   226a4:	vldr	d0, [sp, #72]	; 0x48
   226a8:	str	r3, [sp]
   226ac:	ldr	r3, [sp, #112]	; 0x70
   226b0:	ldr	r2, [sp, #36]	; 0x24
   226b4:	str	r3, [sp, #4]
   226b8:	add	r3, sp, #264	; 0x108
   226bc:	str	r3, [sp, #20]
   226c0:	add	r3, sp, #232	; 0xe8
   226c4:	str	r3, [sp, #16]
   226c8:	add	r1, sp, #200	; 0xc8
   226cc:	ldr	r0, [sp, #60]	; 0x3c
   226d0:	bl	404c <submit_value_label@plt>
   226d4:	cmp	r0, #0
   226d8:	beq	223a0 <readstat_parse_sas_commands+0x280>
   226dc:	mov	r2, r0
   226e0:	b	22454 <readstat_parse_sas_commands+0x334>
   226e4:	add	r1, sp, #136	; 0x88
   226e8:	ldr	r0, [sp, #32]
   226ec:	bl	40d0 <readstat_schema_find_or_create_entry@plt>
   226f0:	mov	r3, #32
   226f4:	mov	r1, r3
   226f8:	add	r2, sp, #200	; 0xc8
   226fc:	add	r0, r0, #2160	; 0x870
   22700:	add	r0, r0, #8
   22704:	bl	3e6c <readstat_copy@plt>
   22708:	b	223a0 <readstat_parse_sas_commands+0x280>
   2270c:	add	r1, sp, #136	; 0x88
   22710:	ldr	r0, [sp, #32]
   22714:	bl	40d0 <readstat_schema_find_or_create_entry@plt>
   22718:	mov	r3, #1024	; 0x400
   2271c:	mov	r1, r3
   22720:	add	r2, sp, #264	; 0x108
   22724:	add	r0, r0, #580	; 0x244
   22728:	bl	3e6c <readstat_copy@plt>
   2272c:	b	223a0 <readstat_parse_sas_commands+0x280>
   22730:	add	r1, sp, #136	; 0x88
   22734:	ldr	r0, [sp, #32]
   22738:	bl	40d0 <readstat_schema_find_or_create_entry@plt>
   2273c:	ldr	r3, [sp, #48]	; 0x30
   22740:	str	r3, [r0, #8]
   22744:	b	223a0 <readstat_parse_sas_commands+0x280>
   22748:	add	r1, sp, #136	; 0x88
   2274c:	ldr	r0, [sp, #32]
   22750:	bl	40d0 <readstat_schema_find_or_create_entry@plt>
   22754:	ldr	r3, [sp, #80]	; 0x50
   22758:	str	r3, [r0, #16]
   2275c:	ldr	r3, [sp, #84]	; 0x54
   22760:	str	r3, [r0]
   22764:	ldr	r3, [sp, #88]	; 0x58
   22768:	str	r3, [r0, #4]
   2276c:	ldr	r3, [sp, #48]	; 0x30
   22770:	str	r3, [r0, #8]
   22774:	b	223a0 <readstat_parse_sas_commands+0x280>
   22778:	add	r3, sp, #168	; 0xa8
   2277c:	mov	r0, r3
   22780:	ldr	r1, [sp, #92]	; 0x5c
   22784:	str	r3, [sp, #116]	; 0x74
   22788:	bl	4028 <strcasecmp@plt>
   2278c:	ldr	r3, [sp, #116]	; 0x74
   22790:	ldr	r1, [sp, #96]	; 0x60
   22794:	cmp	r0, #0
   22798:	mov	r0, r3
   2279c:	ldreq	r2, [sp, #32]
   227a0:	streq	r6, [r2, #264]	; 0x108
   227a4:	bl	4028 <strcasecmp@plt>
   227a8:	cmp	r0, #0
   227ac:	bne	223a0 <readstat_parse_sas_commands+0x280>
   227b0:	orrs	r3, r6, r7
   227b4:	ldr	r2, [sp, #32]
   227b8:	ldrbeq	r3, [sp, #264]	; 0x108
   227bc:	uxtbne	r3, r6
   227c0:	strb	r3, [r2, #272]	; 0x110
   227c4:	b	223a0 <readstat_parse_sas_commands+0x280>
   227c8:	mov	r3, sl
   227cc:	mov	r2, fp
   227d0:	mov	r1, #32
   227d4:	add	r0, sp, #136	; 0x88
   227d8:	bl	43dc <readstat_copy_lower@plt>
   227dc:	b	223a0 <readstat_parse_sas_commands+0x280>
   227e0:	mov	r3, sl
   227e4:	mov	r2, fp
   227e8:	mov	r1, #32
   227ec:	add	r0, sp, #168	; 0xa8
   227f0:	bl	3e6c <readstat_copy@plt>
   227f4:	b	223a0 <readstat_parse_sas_commands+0x280>
   227f8:	mov	r3, sl
   227fc:	mov	r2, fp
   22800:	mov	r1, #32
   22804:	add	r0, sp, #232	; 0xe8
   22808:	bl	3e6c <readstat_copy@plt>
   2280c:	b	223a0 <readstat_parse_sas_commands+0x280>
   22810:	mov	r3, sl
   22814:	mov	r2, fp
   22818:	mov	r1, #32
   2281c:	add	r0, sp, #200	; 0xc8
   22820:	bl	3e6c <readstat_copy@plt>
   22824:	b	223a0 <readstat_parse_sas_commands+0x280>
   22828:	mov	r3, sl
   2282c:	mov	r2, fp
   22830:	mov	r1, #1024	; 0x400
   22834:	add	r0, sp, #264	; 0x108
   22838:	bl	3e6c <readstat_copy@plt>
   2283c:	b	223a0 <readstat_parse_sas_commands+0x280>
   22840:	mov	r3, #5
   22844:	str	r3, [sp, #80]	; 0x50
   22848:	b	223a0 <readstat_parse_sas_commands+0x280>
   2284c:	mov	r3, #0
   22850:	str	r3, [sp, #80]	; 0x50
   22854:	b	223a0 <readstat_parse_sas_commands+0x280>
   22858:	ldr	r3, [pc, #-584]	; 22618 <readstat_parse_sas_commands+0x4f8>
   2285c:	cmp	r8, r3
   22860:	ble	2295c <readstat_parse_sas_commands+0x83c>
   22864:	ldr	r1, [sp, #32]
   22868:	ldr	r4, [sp, #60]	; 0x3c
   2286c:	ldr	r2, [sp, #104]	; 0x68
   22870:	mov	r0, r4
   22874:	bl	3f38 <submit_columns@plt>
   22878:	ldr	r3, [r4, #32]
   2287c:	ldr	r1, [r3, #4]
   22880:	str	r0, [sp, #36]	; 0x24
   22884:	ldr	r0, [r3, #20]
   22888:	blx	r1
   2288c:	ldr	r0, [sp, #132]	; 0x84
   22890:	bl	3ec0 <free@plt>
   22894:	ldr	r2, [sp, #36]	; 0x24
   22898:	cmp	r2, #0
   2289c:	beq	22494 <readstat_parse_sas_commands+0x374>
   228a0:	b	22478 <readstat_parse_sas_commands+0x358>
   228a4:	sub	r3, r3, lr
   228a8:	add	r3, r5, r3
   228ac:	b	22354 <readstat_parse_sas_commands+0x234>
   228b0:	sub	lr, ip, lr
   228b4:	add	r3, r3, lr, asr #1
   228b8:	b	22354 <readstat_parse_sas_commands+0x234>
   228bc:	sub	r2, r3, #97	; 0x61
   228c0:	cmp	r2, #5
   228c4:	subls	r3, r3, #87	; 0x57
   228c8:	movls	r2, r3
   228cc:	movhi	r2, #0
   228d0:	asrls	r3, r2, #31
   228d4:	movhi	r3, r2
   228d8:	b	225a4 <readstat_parse_sas_commands+0x484>
   228dc:	ldr	r3, [sp, #52]	; 0x34
   228e0:	cmp	r9, r3
   228e4:	beq	2295c <readstat_parse_sas_commands+0x83c>
   228e8:	ldr	r3, [sp, #124]	; 0x7c
   228ec:	ldrb	r2, [r9]
   228f0:	sub	r3, r9, r3
   228f4:	add	r3, r3, #1
   228f8:	add	r4, sp, #1280	; 0x500
   228fc:	str	r3, [sp]
   22900:	str	r2, [sp, #4]
   22904:	ldr	r3, [sp, #100]	; 0x64
   22908:	ldr	r2, [pc, #-756]	; 2261c <readstat_parse_sas_commands+0x4fc>
   2290c:	add	r4, r4, #8
   22910:	add	r3, r3, #1
   22914:	mov	r0, r4
   22918:	add	r2, pc, r2
   2291c:	mov	r1, #1024	; 0x400
   22920:	bl	4280 <snprintf@plt>
   22924:	ldr	r3, [sp, #60]	; 0x3c
   22928:	ldr	r3, [r3, #24]
   2292c:	cmp	r3, #0
   22930:	beq	22940 <readstat_parse_sas_commands+0x820>
   22934:	ldr	r1, [sp, #104]	; 0x68
   22938:	mov	r0, r4
   2293c:	blx	r3
   22940:	mov	r2, #5
   22944:	b	22454 <readstat_parse_sas_commands+0x334>
   22948:	ldr	r3, [sp, #128]	; 0x80
   2294c:	str	r3, [sp, #32]
   22950:	b	22494 <readstat_parse_sas_commands+0x374>
   22954:	mov	r2, #3
   22958:	b	22454 <readstat_parse_sas_commands+0x334>
   2295c:	add	r4, sp, #1280	; 0x500
   22960:	ldr	r1, [pc, #-840]	; 22620 <readstat_parse_sas_commands+0x500>
   22964:	add	r4, r4, #8
   22968:	mov	r0, r4
   2296c:	mov	r2, #66	; 0x42
   22970:	add	r1, pc, r1
   22974:	bl	3f20 <memcpy@plt>
   22978:	b	22924 <readstat_parse_sas_commands+0x804>
   2297c:	andeq	r0, r0, r0

00022980 <readstat_parse_spss_commands>:
   22980:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22984:	sub	sp, sp, #2304	; 0x900
   22988:	ldr	ip, [r0, #32]
   2298c:	sub	sp, sp, #12
   22990:	mov	r4, r3
   22994:	str	r0, [sp, #64]	; 0x40
   22998:	str	r2, [sp, #120]	; 0x78
   2299c:	mov	r0, r1
   229a0:	ldr	r2, [ip]
   229a4:	ldr	r1, [ip, #20]
   229a8:	str	r3, [sp, #156]	; 0x9c
   229ac:	blx	r2
   229b0:	cmn	r0, #1
   229b4:	beq	22d3c <readstat_parse_spss_commands+0x3bc>
   229b8:	ldr	r6, [sp, #64]	; 0x40
   229bc:	mov	r1, #2
   229c0:	mov	r0, #0
   229c4:	ldr	r3, [r6, #32]
   229c8:	ldr	r4, [r3, #8]
   229cc:	ldr	r2, [r3, #20]
   229d0:	blx	r4
   229d4:	cmn	r0, #1
   229d8:	mov	r4, r0
   229dc:	beq	22ce8 <readstat_parse_spss_commands+0x368>
   229e0:	ldr	r3, [r6, #32]
   229e4:	mov	r1, #0
   229e8:	mov	r0, r1
   229ec:	ldr	r5, [r3, #8]
   229f0:	ldr	r2, [r3, #20]
   229f4:	blx	r5
   229f8:	mov	r0, r4
   229fc:	bl	410c <malloc@plt>
   22a00:	ldr	r3, [r6, #32]
   22a04:	mov	r1, r4
   22a08:	add	r2, r0, r4
   22a0c:	str	r2, [sp, #68]	; 0x44
   22a10:	ldr	r4, [r3, #12]
   22a14:	mov	r6, r2
   22a18:	ldr	r2, [r3, #20]
   22a1c:	mov	r5, r0
   22a20:	str	r0, [sp, #160]	; 0xa0
   22a24:	blx	r4
   22a28:	mov	r1, #280	; 0x118
   22a2c:	mov	r0, #1
   22a30:	bl	3d58 <calloc@plt>
   22a34:	subs	fp, r0, #0
   22a38:	beq	23248 <readstat_parse_spss_commands+0x8c8>
   22a3c:	mov	r3, #1
   22a40:	cmp	r5, r6
   22a44:	mov	ip, r5
   22a48:	str	r3, [fp, #256]	; 0x100
   22a4c:	beq	23220 <readstat_parse_spss_commands+0x8a0>
   22a50:	ldr	r3, [pc, #1000]	; 22e40 <readstat_parse_spss_commands+0x4c0>
   22a54:	ldr	r2, [pc, #1000]	; 22e44 <readstat_parse_spss_commands+0x4c4>
   22a58:	add	r3, pc, r3
   22a5c:	vldr	d7, [pc, #980]	; 22e38 <readstat_parse_spss_commands+0x4b8>
   22a60:	add	r2, pc, r2
   22a64:	add	r0, r3, #3824	; 0xef0
   22a68:	str	r3, [sp, #140]	; 0x8c
   22a6c:	add	r3, r3, #164	; 0xa4
   22a70:	sub	r1, r2, #2032	; 0x7f0
   22a74:	str	r3, [sp, #72]	; 0x48
   22a78:	add	r3, r0, #8
   22a7c:	mov	r4, #0
   22a80:	mov	r5, #0
   22a84:	str	r3, [sp, #76]	; 0x4c
   22a88:	sub	r3, r1, #12
   22a8c:	mov	r8, #0
   22a90:	str	r2, [sp, #80]	; 0x50
   22a94:	str	r3, [sp, #84]	; 0x54
   22a98:	ldr	r2, [pc, #936]	; 22e48 <readstat_parse_spss_commands+0x4c8>
   22a9c:	mov	r3, #5
   22aa0:	vstr	d7, [sp, #96]	; 0x60
   22aa4:	mov	r7, r8
   22aa8:	strd	r4, [sp, #32]
   22aac:	mov	r9, #628	; 0x274
   22ab0:	str	r3, [sp, #52]	; 0x34
   22ab4:	ldr	r5, [pc, #912]	; 22e4c <readstat_parse_spss_commands+0x4cc>
   22ab8:	mov	r3, fp
   22abc:	str	r8, [sp, #60]	; 0x3c
   22ac0:	str	r8, [sp, #92]	; 0x5c
   22ac4:	str	r8, [sp, #128]	; 0x80
   22ac8:	str	r8, [sp, #88]	; 0x58
   22acc:	str	r8, [sp, #124]	; 0x7c
   22ad0:	str	r8, [sp, #56]	; 0x38
   22ad4:	str	r8, [sp, #44]	; 0x2c
   22ad8:	mov	sl, r8
   22adc:	mov	r4, #27
   22ae0:	mov	r8, r9
   22ae4:	mov	lr, r2
   22ae8:	mov	r9, r7
   22aec:	mov	fp, ip
   22af0:	mov	r7, r3
   22af4:	mov	r0, #0
   22af8:	mov	r1, #0
   22afc:	str	r0, [sp, #132]	; 0x84
   22b00:	str	r1, [sp, #136]	; 0x88
   22b04:	str	ip, [sp, #164]	; 0xa4
   22b08:	ldr	r3, [sp, #72]	; 0x48
   22b0c:	cmp	r4, #0
   22b10:	add	lr, r3, lr
   22b14:	mov	r3, r5
   22b18:	beq	22b60 <readstat_parse_spss_commands+0x1e0>
   22b1c:	sub	r1, r4, #1
   22b20:	adds	r1, lr, r1
   22b24:	bcs	22b58 <readstat_parse_spss_commands+0x1d8>
   22b28:	ldrb	ip, [fp]
   22b2c:	mov	r2, lr
   22b30:	sub	r3, r1, r2
   22b34:	ldrb	r0, [r2, r3, asr #1]
   22b38:	add	r3, r2, r3, asr #1
   22b3c:	cmp	r0, ip
   22b40:	subhi	r1, r3, #1
   22b44:	bhi	22b50 <readstat_parse_spss_commands+0x1d0>
   22b48:	bcs	23120 <readstat_parse_spss_commands+0x7a0>
   22b4c:	add	r2, r3, #1
   22b50:	cmp	r2, r1
   22b54:	bls	22b30 <readstat_parse_spss_commands+0x1b0>
   22b58:	add	lr, lr, r4
   22b5c:	add	r3, r5, r4
   22b60:	ldr	r2, [pc, #744]	; 22e50 <readstat_parse_spss_commands+0x4d0>
   22b64:	add	r2, pc, r2
   22b68:	add	r2, r2, r8
   22b6c:	ldrb	r5, [r2, #3200]	; 0xc80
   22b70:	cmp	r5, #0
   22b74:	beq	22bcc <readstat_parse_spss_commands+0x24c>
   22b78:	add	r0, lr, r5, lsl #1
   22b7c:	sub	r0, r0, #2
   22b80:	cmp	lr, r0
   22b84:	bhi	22bc8 <readstat_parse_spss_commands+0x248>
   22b88:	ldrb	r4, [fp]
   22b8c:	mov	r1, lr
   22b90:	sub	r2, r0, r1
   22b94:	asr	r2, r2, #1
   22b98:	bic	r2, r2, #1
   22b9c:	add	ip, r1, r2
   22ba0:	ldrb	r2, [r1, r2]
   22ba4:	cmp	r2, r4
   22ba8:	subhi	r0, ip, #2
   22bac:	bhi	22bc0 <readstat_parse_spss_commands+0x240>
   22bb0:	ldrb	r2, [ip, #1]
   22bb4:	add	r1, ip, #2
   22bb8:	cmp	r2, r4
   22bbc:	bcs	2312c <readstat_parse_spss_commands+0x7ac>
   22bc0:	cmp	r1, r0
   22bc4:	bls	22b90 <readstat_parse_spss_commands+0x210>
   22bc8:	add	r3, r3, r5
   22bcc:	ldr	lr, [pc, #640]	; 22e54 <readstat_parse_spss_commands+0x4d4>
   22bd0:	lsl	r2, r3, #1
   22bd4:	add	lr, pc, lr
   22bd8:	add	r3, lr, r3
   22bdc:	ldr	r1, [sp, #76]	; 0x4c
   22be0:	ldrb	r4, [r3, #2220]	; 0x8ac
   22be4:	ldrsh	r8, [r1, r2]
   22be8:	cmp	r4, #0
   22bec:	beq	22d80 <readstat_parse_spss_commands+0x400>
   22bf0:	ldr	r3, [sp, #140]	; 0x8c
   22bf4:	str	r7, [sp, #48]	; 0x30
   22bf8:	ldrb	r5, [r3, r4]
   22bfc:	add	r4, r3, r4
   22c00:	ldr	r3, [pc, #592]	; 22e58 <readstat_parse_spss_commands+0x4d8>
   22c04:	add	r5, r4, r5
   22c08:	add	r3, pc, r3
   22c0c:	str	r3, [sp, #104]	; 0x68
   22c10:	ldr	r3, [pc, #580]	; 22e5c <readstat_parse_spss_commands+0x4dc>
   22c14:	add	r3, pc, r3
   22c18:	str	r3, [sp, #108]	; 0x6c
   22c1c:	ldr	r3, [pc, #572]	; 22e60 <readstat_parse_spss_commands+0x4e0>
   22c20:	add	r3, pc, r3
   22c24:	str	r3, [sp, #112]	; 0x70
   22c28:	ldr	r3, [pc, #564]	; 22e64 <readstat_parse_spss_commands+0x4e4>
   22c2c:	add	r3, pc, r3
   22c30:	str	r3, [sp, #116]	; 0x74
   22c34:	mov	r3, r8
   22c38:	mov	r8, fp
   22c3c:	mov	fp, r3
   22c40:	cmp	r5, r4
   22c44:	beq	22d70 <readstat_parse_spss_commands+0x3f0>
   22c48:	ldrb	r3, [r4, #1]!
   22c4c:	cmp	r3, #35	; 0x23
   22c50:	addls	pc, pc, r3, lsl #2
   22c54:	b	22c40 <readstat_parse_spss_commands+0x2c0>
   22c58:	b	22de0 <readstat_parse_spss_commands+0x460>
   22c5c:	b	23040 <readstat_parse_spss_commands+0x6c0>
   22c60:	b	2307c <readstat_parse_spss_commands+0x6fc>
   22c64:	b	23068 <readstat_parse_spss_commands+0x6e8>
   22c68:	b	230dc <readstat_parse_spss_commands+0x75c>
   22c6c:	b	230c4 <readstat_parse_spss_commands+0x744>
   22c70:	b	230ac <readstat_parse_spss_commands+0x72c>
   22c74:	b	23094 <readstat_parse_spss_commands+0x714>
   22c78:	b	23000 <readstat_parse_spss_commands+0x680>
   22c7c:	b	22fdc <readstat_parse_spss_commands+0x65c>
   22c80:	b	22fd4 <readstat_parse_spss_commands+0x654>
   22c84:	b	22fc4 <readstat_parse_spss_commands+0x644>
   22c88:	b	22f84 <readstat_parse_spss_commands+0x604>
   22c8c:	b	22f00 <readstat_parse_spss_commands+0x580>
   22c90:	b	22e8c <readstat_parse_spss_commands+0x50c>
   22c94:	b	22dcc <readstat_parse_spss_commands+0x44c>
   22c98:	b	22dbc <readstat_parse_spss_commands+0x43c>
   22c9c:	b	22dcc <readstat_parse_spss_commands+0x44c>
   22ca0:	b	22dbc <readstat_parse_spss_commands+0x43c>
   22ca4:	b	22df0 <readstat_parse_spss_commands+0x470>
   22ca8:	b	22dcc <readstat_parse_spss_commands+0x44c>
   22cac:	b	22dbc <readstat_parse_spss_commands+0x43c>
   22cb0:	b	22dd4 <readstat_parse_spss_commands+0x454>
   22cb4:	b	22dd4 <readstat_parse_spss_commands+0x454>
   22cb8:	b	22d60 <readstat_parse_spss_commands+0x3e0>
   22cbc:	b	22d60 <readstat_parse_spss_commands+0x3e0>
   22cc0:	b	22dd4 <readstat_parse_spss_commands+0x454>
   22cc4:	b	23030 <readstat_parse_spss_commands+0x6b0>
   22cc8:	b	22d60 <readstat_parse_spss_commands+0x3e0>
   22ccc:	b	22d60 <readstat_parse_spss_commands+0x3e0>
   22cd0:	b	230f4 <readstat_parse_spss_commands+0x774>
   22cd4:	b	23100 <readstat_parse_spss_commands+0x780>
   22cd8:	b	22e04 <readstat_parse_spss_commands+0x484>
   22cdc:	b	22e1c <readstat_parse_spss_commands+0x49c>
   22ce0:	b	22e2c <readstat_parse_spss_commands+0x4ac>
   22ce4:	b	22e80 <readstat_parse_spss_commands+0x500>
   22ce8:	mov	r3, #0
   22cec:	mov	fp, r3
   22cf0:	mov	r6, #15
   22cf4:	str	r3, [sp, #160]	; 0xa0
   22cf8:	ldr	r3, [sp, #64]	; 0x40
   22cfc:	ldr	r3, [r3, #32]
   22d00:	ldr	r2, [r3, #4]
   22d04:	ldr	r0, [r3, #20]
   22d08:	blx	r2
   22d0c:	ldr	r0, [sp, #160]	; 0xa0
   22d10:	bl	3ec0 <free@plt>
   22d14:	ldr	r3, [sp, #156]	; 0x9c
   22d18:	mov	r0, fp
   22d1c:	cmp	r3, #0
   22d20:	strne	r6, [r3]
   22d24:	bl	3fbc <readstat_schema_free@plt>
   22d28:	mov	fp, #0
   22d2c:	mov	r0, fp
   22d30:	add	sp, sp, #2304	; 0x900
   22d34:	add	sp, sp, #12
   22d38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22d3c:	cmp	r4, #0
   22d40:	beq	22d28 <readstat_parse_spss_commands+0x3a8>
   22d44:	mov	r3, #1
   22d48:	mov	fp, #0
   22d4c:	mov	r0, fp
   22d50:	str	r3, [r4]
   22d54:	add	sp, sp, #2304	; 0x900
   22d58:	add	sp, sp, #12
   22d5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22d60:	mov	r3, #5
   22d64:	cmp	r5, r4
   22d68:	str	r3, [sp, #52]	; 0x34
   22d6c:	bne	22c48 <readstat_parse_spss_commands+0x2c8>
   22d70:	mov	r3, fp
   22d74:	ldr	r7, [sp, #48]	; 0x30
   22d78:	mov	fp, r8
   22d7c:	mov	r8, r3
   22d80:	cmp	r8, #0
   22d84:	beq	23138 <readstat_parse_spss_commands+0x7b8>
   22d88:	ldr	r3, [sp, #68]	; 0x44
   22d8c:	add	fp, fp, #1
   22d90:	cmp	r3, fp
   22d94:	beq	231ac <readstat_parse_spss_commands+0x82c>
   22d98:	ldr	r1, [sp, #80]	; 0x50
   22d9c:	ldr	r0, [sp, #84]	; 0x54
   22da0:	lsl	r3, r8, #1
   22da4:	sub	r2, r1, #780	; 0x30c
   22da8:	add	r1, r1, r8
   22dac:	ldrsh	lr, [r0, r3]
   22db0:	ldrsh	r5, [r2, r3]
   22db4:	ldrb	r4, [r1, #484]	; 0x1e4
   22db8:	b	22b08 <readstat_parse_spss_commands+0x188>
   22dbc:	ldr	r3, [sp, #44]	; 0x2c
   22dc0:	sub	r3, r8, r3
   22dc4:	str	r3, [sp, #56]	; 0x38
   22dc8:	b	22c40 <readstat_parse_spss_commands+0x2c0>
   22dcc:	str	r8, [sp, #44]	; 0x2c
   22dd0:	b	22c40 <readstat_parse_spss_commands+0x2c0>
   22dd4:	mov	r3, #0
   22dd8:	str	r3, [sp, #52]	; 0x34
   22ddc:	b	22c40 <readstat_parse_spss_commands+0x2c0>
   22de0:	mov	r3, #0
   22de4:	str	r3, [sp, #32]
   22de8:	str	r3, [sp, #36]	; 0x24
   22dec:	b	22c40 <readstat_parse_spss_commands+0x2c0>
   22df0:	ldr	r3, [sp, #124]	; 0x7c
   22df4:	str	r8, [sp, #164]	; 0xa4
   22df8:	add	r3, r3, #1
   22dfc:	str	r3, [sp, #124]	; 0x7c
   22e00:	b	22c40 <readstat_parse_spss_commands+0x2c0>
   22e04:	ldrd	r0, [sp, #32]
   22e08:	bl	25540 <__aeabi_ul2d>
   22e0c:	mov	r3, #0
   22e10:	str	r3, [sp, #60]	; 0x3c
   22e14:	strd	r0, [sp, #96]	; 0x60
   22e18:	b	22c40 <readstat_parse_spss_commands+0x2c0>
   22e1c:	ldrd	r2, [sp, #32]
   22e20:	str	r2, [sp, #132]	; 0x84
   22e24:	str	r3, [sp, #136]	; 0x88
   22e28:	b	22c40 <readstat_parse_spss_commands+0x2c0>
   22e2c:	mov	r3, #2
   22e30:	str	r3, [sp, #60]	; 0x3c
   22e34:	b	22c40 <readstat_parse_spss_commands+0x2c0>
   22e38:	.word	0x00000000
   22e3c:	.word	0x7ff80000
   22e40:	.word	0x0000cee8
   22e44:	.word	0x00010ed0
   22e48:	.word	0x00000b6c
   22e4c:	.word	0x00000c64
   22e50:	.word	0x0000cddc
   22e54:	.word	0x0000ed64
   22e58:	.word	0x00003c6c
   22e5c:	.word	0x00003c60
   22e60:	.word	0x0001116c
   22e64:	.word	0x0001116c
   22e68:	.word	0x000003ff
   22e6c:	.word	0x00010c6c
   22e70:	.word	0x0001077c
   22e74:	.word	0x0000c784
   22e78:	.word	0x0000c714
   22e7c:	.word	0x00010b40
   22e80:	mov	r3, #1
   22e84:	str	r3, [sp, #60]	; 0x3c
   22e88:	b	22c40 <readstat_parse_spss_commands+0x2c0>
   22e8c:	add	r6, sp, #1280	; 0x500
   22e90:	add	r6, r6, #8
   22e94:	mov	r3, sl
   22e98:	ldr	r2, [sp, #104]	; 0x68
   22e9c:	mov	r1, #256	; 0x100
   22ea0:	mov	r0, r6
   22ea4:	bl	4280 <snprintf@plt>
   22ea8:	ldr	r3, [sp, #120]	; 0x78
   22eac:	mov	r1, r6
   22eb0:	str	r3, [sp, #24]
   22eb4:	ldrd	r2, [sp, #32]
   22eb8:	vldr	d0, [sp, #96]	; 0x60
   22ebc:	ldr	r0, [sp, #64]	; 0x40
   22ec0:	strd	r2, [sp, #8]
   22ec4:	ldr	r3, [sp, #132]	; 0x84
   22ec8:	ldr	r2, [sp, #60]	; 0x3c
   22ecc:	str	r3, [sp]
   22ed0:	ldr	r3, [sp, #136]	; 0x88
   22ed4:	str	r3, [sp, #4]
   22ed8:	add	r3, sp, #264	; 0x108
   22edc:	str	r3, [sp, #20]
   22ee0:	add	r3, sp, #232	; 0xe8
   22ee4:	str	r3, [sp, #16]
   22ee8:	bl	404c <submit_value_label@plt>
   22eec:	cmp	r0, #0
   22ef0:	beq	22c40 <readstat_parse_spss_commands+0x2c0>
   22ef4:	mov	r6, r0
   22ef8:	ldr	fp, [sp, #48]	; 0x30
   22efc:	b	22cf8 <readstat_parse_spss_commands+0x378>
   22f00:	add	r3, sp, #1280	; 0x500
   22f04:	add	r3, r3, #8
   22f08:	str	r3, [sp, #148]	; 0x94
   22f0c:	mov	r0, r3
   22f10:	ldr	r2, [sp, #108]	; 0x6c
   22f14:	mov	r3, sl
   22f18:	mov	r1, #256	; 0x100
   22f1c:	bl	4280 <snprintf@plt>
   22f20:	add	r3, sl, #1
   22f24:	cmp	r9, #0
   22f28:	str	r3, [sp, #144]	; 0x90
   22f2c:	beq	22f7c <readstat_parse_spss_commands+0x5fc>
   22f30:	str	r8, [sp, #152]	; 0x98
   22f34:	ldr	r7, [sp, #48]	; 0x30
   22f38:	ldr	r8, [sp, #148]	; 0x94
   22f3c:	mov	r6, #0
   22f40:	add	sl, sp, #168	; 0xa8
   22f44:	mov	r1, sl
   22f48:	mov	r0, r7
   22f4c:	bl	40d0 <readstat_schema_find_or_create_entry@plt>
   22f50:	add	r6, r6, #1
   22f54:	mov	r3, #256	; 0x100
   22f58:	mov	r2, r8
   22f5c:	mov	r1, #32
   22f60:	add	r0, r0, #2160	; 0x870
   22f64:	add	r0, r0, #8
   22f68:	bl	3e6c <readstat_copy@plt>
   22f6c:	cmp	r9, r6
   22f70:	bne	22f44 <readstat_parse_spss_commands+0x5c4>
   22f74:	ldr	r8, [sp, #152]	; 0x98
   22f78:	str	r7, [sp, #48]	; 0x30
   22f7c:	ldr	sl, [sp, #144]	; 0x90
   22f80:	b	22c40 <readstat_parse_spss_commands+0x2c0>
   22f84:	add	r6, sp, #200	; 0xc8
   22f88:	ldr	r1, [sp, #112]	; 0x70
   22f8c:	mov	r0, r6
   22f90:	bl	4028 <strcasecmp@plt>
   22f94:	ldr	r1, [sp, #116]	; 0x74
   22f98:	cmp	r0, #0
   22f9c:	mov	r0, r6
   22fa0:	ldreq	r2, [sp, #48]	; 0x30
   22fa4:	ldreq	r3, [sp, #32]
   22fa8:	streq	r3, [r2, #264]	; 0x108
   22fac:	bl	4028 <strcasecmp@plt>
   22fb0:	cmp	r0, #0
   22fb4:	ldrbeq	r3, [sp, #264]	; 0x108
   22fb8:	ldreq	r2, [sp, #48]	; 0x30
   22fbc:	strbeq	r3, [r2, #272]	; 0x110
   22fc0:	b	22c40 <readstat_parse_spss_commands+0x2c0>
   22fc4:	ldr	r3, [pc, #-356]	; 22e68 <readstat_parse_spss_commands+0x4e8>
   22fc8:	cmp	r9, r3
   22fcc:	addle	r9, r9, #1
   22fd0:	b	22c40 <readstat_parse_spss_commands+0x2c0>
   22fd4:	mov	r9, #0
   22fd8:	b	22c40 <readstat_parse_spss_commands+0x2c0>
   22fdc:	add	r1, sp, #168	; 0xa8
   22fe0:	ldr	r0, [sp, #48]	; 0x30
   22fe4:	bl	40d0 <readstat_schema_find_or_create_entry@plt>
   22fe8:	mov	r3, #1024	; 0x400
   22fec:	mov	r1, r3
   22ff0:	add	r2, sp, #264	; 0x108
   22ff4:	add	r0, r0, #580	; 0x244
   22ff8:	bl	3e6c <readstat_copy@plt>
   22ffc:	b	22c40 <readstat_parse_spss_commands+0x2c0>
   23000:	add	r1, sp, #168	; 0xa8
   23004:	ldr	r0, [sp, #48]	; 0x30
   23008:	bl	40d0 <readstat_schema_find_or_create_entry@plt>
   2300c:	ldr	r3, [sp, #52]	; 0x34
   23010:	str	r3, [r0, #16]
   23014:	ldr	r3, [sp, #128]	; 0x80
   23018:	str	r3, [r0]
   2301c:	ldr	r3, [sp, #88]	; 0x58
   23020:	str	r3, [r0, #4]
   23024:	ldr	r3, [sp, #92]	; 0x5c
   23028:	str	r3, [r0, #8]
   2302c:	b	22c40 <readstat_parse_spss_commands+0x2c0>
   23030:	ldr	r3, [sp, #32]
   23034:	sub	r3, r3, #1
   23038:	str	r3, [sp, #128]	; 0x80
   2303c:	b	22c40 <readstat_parse_spss_commands+0x2c0>
   23040:	ldrd	r6, [sp, #32]
   23044:	mov	r0, #10
   23048:	ldrb	r1, [r8]
   2304c:	umull	r2, r3, r6, r0
   23050:	mla	r3, r0, r7, r3
   23054:	sub	r1, r1, #48	; 0x30
   23058:	adds	r6, r2, r1
   2305c:	adc	r7, r3, r1, asr #31
   23060:	strd	r6, [sp, #32]
   23064:	b	22c40 <readstat_parse_spss_commands+0x2c0>
   23068:	ldr	r3, [sp, #32]
   2306c:	ldr	r2, [sp, #88]	; 0x58
   23070:	sub	r3, r3, r2
   23074:	str	r3, [sp, #92]	; 0x5c
   23078:	b	22c40 <readstat_parse_spss_commands+0x2c0>
   2307c:	ldr	r3, [sp, #32]
   23080:	sub	r3, r3, #1
   23084:	str	r3, [sp, #88]	; 0x58
   23088:	mov	r3, #1
   2308c:	str	r3, [sp, #92]	; 0x5c
   23090:	b	22c40 <readstat_parse_spss_commands+0x2c0>
   23094:	ldr	r3, [sp, #56]	; 0x38
   23098:	ldr	r2, [sp, #44]	; 0x2c
   2309c:	mov	r1, #32
   230a0:	add	r0, sp, #200	; 0xc8
   230a4:	bl	3e6c <readstat_copy@plt>
   230a8:	b	22c40 <readstat_parse_spss_commands+0x2c0>
   230ac:	ldr	r3, [sp, #56]	; 0x38
   230b0:	ldr	r2, [sp, #44]	; 0x2c
   230b4:	mov	r1, #32
   230b8:	add	r0, sp, #168	; 0xa8
   230bc:	bl	3e6c <readstat_copy@plt>
   230c0:	b	22c40 <readstat_parse_spss_commands+0x2c0>
   230c4:	ldr	r3, [sp, #56]	; 0x38
   230c8:	ldr	r2, [sp, #44]	; 0x2c
   230cc:	mov	r1, #32
   230d0:	add	r0, sp, #232	; 0xe8
   230d4:	bl	4034 <readstat_copy_quoted@plt>
   230d8:	b	22c40 <readstat_parse_spss_commands+0x2c0>
   230dc:	ldr	r3, [sp, #56]	; 0x38
   230e0:	ldr	r2, [sp, #44]	; 0x2c
   230e4:	mov	r1, #1024	; 0x400
   230e8:	add	r0, sp, #264	; 0x108
   230ec:	bl	4034 <readstat_copy_quoted@plt>
   230f0:	b	22c40 <readstat_parse_spss_commands+0x2c0>
   230f4:	mvn	r3, #0
   230f8:	str	r3, [sp, #60]	; 0x3c
   230fc:	b	22c40 <readstat_parse_spss_commands+0x2c0>
   23100:	ldrd	r0, [sp, #32]
   23104:	rsbs	r0, r0, #0
   23108:	rsc	r1, r1, #0
   2310c:	bl	25540 <__aeabi_ul2d>
   23110:	mov	r3, #0
   23114:	str	r3, [sp, #60]	; 0x3c
   23118:	strd	r0, [sp, #96]	; 0x60
   2311c:	b	22c40 <readstat_parse_spss_commands+0x2c0>
   23120:	sub	r3, r3, lr
   23124:	add	r3, r5, r3
   23128:	b	22bcc <readstat_parse_spss_commands+0x24c>
   2312c:	sub	lr, ip, lr
   23130:	add	r3, r3, lr, asr #1
   23134:	b	22bcc <readstat_parse_spss_commands+0x24c>
   23138:	ldr	r3, [sp, #68]	; 0x44
   2313c:	mov	sl, fp
   23140:	cmp	sl, r3
   23144:	mov	fp, r7
   23148:	beq	23250 <readstat_parse_spss_commands+0x8d0>
   2314c:	ldr	r3, [sp, #164]	; 0xa4
   23150:	ldrb	r2, [sl]
   23154:	sub	r3, sl, r3
   23158:	add	r3, r3, #1
   2315c:	add	r4, sp, #1280	; 0x500
   23160:	str	r3, [sp]
   23164:	str	r2, [sp, #4]
   23168:	ldr	r3, [sp, #124]	; 0x7c
   2316c:	ldr	r2, [pc, #-776]	; 22e6c <readstat_parse_spss_commands+0x4ec>
   23170:	add	r4, r4, #8
   23174:	add	r3, r3, #1
   23178:	mov	r0, r4
   2317c:	add	r2, pc, r2
   23180:	mov	r1, #1024	; 0x400
   23184:	bl	4280 <snprintf@plt>
   23188:	ldr	r3, [sp, #64]	; 0x40
   2318c:	ldr	r3, [r3, #24]
   23190:	cmp	r3, #0
   23194:	beq	231a4 <readstat_parse_spss_commands+0x824>
   23198:	ldr	r1, [sp, #120]	; 0x78
   2319c:	mov	r0, r4
   231a0:	blx	r3
   231a4:	mov	r6, #5
   231a8:	b	22cf8 <readstat_parse_spss_commands+0x378>
   231ac:	ldr	r3, [pc, #-836]	; 22e70 <readstat_parse_spss_commands+0x4f0>
   231b0:	ldr	r2, [pc, #-836]	; 22e74 <readstat_parse_spss_commands+0x4f4>
   231b4:	add	r3, pc, r3
   231b8:	add	r3, r3, r8
   231bc:	add	r2, pc, r2
   231c0:	ldrb	r1, [r3, #-2676]	; 0xfffff58c
   231c4:	mov	r9, r8
   231c8:	mov	fp, r7
   231cc:	add	r4, r2, r1
   231d0:	ldrb	r5, [r2, r1]
   231d4:	add	r5, r4, r5
   231d8:	add	r6, sp, #168	; 0xa8
   231dc:	cmp	r5, r4
   231e0:	beq	23270 <readstat_parse_spss_commands+0x8f0>
   231e4:	ldrb	r3, [r4, #1]!
   231e8:	cmp	r3, #8
   231ec:	bne	231dc <readstat_parse_spss_commands+0x85c>
   231f0:	mov	r1, r6
   231f4:	mov	r0, fp
   231f8:	bl	40d0 <readstat_schema_find_or_create_entry@plt>
   231fc:	ldr	r3, [sp, #52]	; 0x34
   23200:	str	r3, [r0, #16]
   23204:	ldr	r3, [sp, #128]	; 0x80
   23208:	str	r3, [r0]
   2320c:	ldr	r3, [sp, #88]	; 0x58
   23210:	str	r3, [r0, #4]
   23214:	ldr	r3, [sp, #92]	; 0x5c
   23218:	str	r3, [r0, #8]
   2321c:	b	231dc <readstat_parse_spss_commands+0x85c>
   23220:	ldr	r4, [pc, #-944]	; 22e78 <readstat_parse_spss_commands+0x4f8>
   23224:	mov	r5, #0
   23228:	mov	r3, #5
   2322c:	add	r4, pc, r4
   23230:	str	r5, [sp, #92]	; 0x5c
   23234:	str	r5, [sp, #128]	; 0x80
   23238:	str	r5, [sp, #88]	; 0x58
   2323c:	str	r3, [sp, #52]	; 0x34
   23240:	mov	r9, #628	; 0x274
   23244:	b	231d4 <readstat_parse_spss_commands+0x854>
   23248:	mov	r6, #3
   2324c:	b	22cf8 <readstat_parse_spss_commands+0x378>
   23250:	add	r4, sp, #1280	; 0x500
   23254:	ldr	r1, [pc, #-992]	; 22e7c <readstat_parse_spss_commands+0x4fc>
   23258:	add	r4, r4, #8
   2325c:	mov	r0, r4
   23260:	mov	r2, #67	; 0x43
   23264:	add	r1, pc, r1
   23268:	bl	3f20 <memcpy@plt>
   2326c:	b	23188 <readstat_parse_spss_commands+0x808>
   23270:	cmp	r9, #628	; 0x274
   23274:	blt	23250 <readstat_parse_spss_commands+0x8d0>
   23278:	ldr	r4, [sp, #64]	; 0x40
   2327c:	mov	r1, fp
   23280:	ldr	r2, [sp, #120]	; 0x78
   23284:	mov	r0, r4
   23288:	bl	3f38 <submit_columns@plt>
   2328c:	ldr	r3, [r4, #32]
   23290:	ldr	r2, [r3, #4]
   23294:	mov	r6, r0
   23298:	ldr	r0, [r3, #20]
   2329c:	blx	r2
   232a0:	ldr	r0, [sp, #160]	; 0xa0
   232a4:	bl	3ec0 <free@plt>
   232a8:	cmp	r6, #0
   232ac:	beq	22d2c <readstat_parse_spss_commands+0x3ac>
   232b0:	b	22d14 <readstat_parse_spss_commands+0x394>

000232b4 <readstat_schema_free>:
   232b4:	push	{r4, lr}
   232b8:	subs	r4, r0, #0
   232bc:	popeq	{r4, pc}
   232c0:	ldr	r0, [r4, #276]	; 0x114
   232c4:	bl	3ec0 <free@plt>
   232c8:	mov	r0, r4
   232cc:	pop	{r4, lr}
   232d0:	b	3ec0 <free@plt>

000232d4 <readstat_schema_find_or_create_entry>:
   232d4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   232d8:	mov	r9, r0
   232dc:	ldr	r7, [r0, #268]	; 0x10c
   232e0:	mov	r8, r1
   232e4:	cmp	r7, #0
   232e8:	ldr	sl, [r0, #276]	; 0x114
   232ec:	ble	23334 <readstat_schema_find_or_create_entry+0x60>
   232f0:	mov	r5, #0
   232f4:	mov	r4, sl
   232f8:	b	23304 <readstat_schema_find_or_create_entry+0x30>
   232fc:	cmp	r5, r7
   23300:	beq	23334 <readstat_schema_find_or_create_entry+0x60>
   23304:	add	r0, r4, #24
   23308:	mov	r1, r8
   2330c:	bl	3e00 <strcmp@plt>
   23310:	mov	r6, r4
   23314:	add	r5, r5, #1
   23318:	add	r4, r4, #2208	; 0x8a0
   2331c:	cmp	r0, #0
   23320:	bne	232fc <readstat_schema_find_or_create_entry+0x28>
   23324:	cmp	r6, #0
   23328:	beq	23334 <readstat_schema_find_or_create_entry+0x60>
   2332c:	mov	r0, r6
   23330:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   23334:	mov	r4, #2208	; 0x8a0
   23338:	mov	r0, sl
   2333c:	mla	r1, r7, r4, r4
   23340:	bl	3ff8 <realloc@plt>
   23344:	ldr	r6, [r9, #268]	; 0x10c
   23348:	mov	r2, r4
   2334c:	mov	r1, #0
   23350:	mla	r6, r4, r6, r0
   23354:	str	r0, [r9, #276]	; 0x114
   23358:	mov	r0, r6
   2335c:	bl	42a4 <memset@plt>
   23360:	mov	r0, r8
   23364:	bl	41fc <strlen@plt>
   23368:	mov	r2, r8
   2336c:	mov	r1, #300	; 0x12c
   23370:	mov	r3, r0
   23374:	add	r0, r6, #24
   23378:	bl	3e6c <readstat_copy@plt>
   2337c:	mov	r3, #46	; 0x2e
   23380:	strb	r3, [r6, #2200]	; 0x898
   23384:	ldr	r3, [r9, #268]	; 0x10c
   23388:	mov	r0, r6
   2338c:	add	r2, r3, #1
   23390:	str	r2, [r9, #268]	; 0x10c
   23394:	str	r3, [r6, #20]
   23398:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

0002339c <readstat_parse_stata_dictionary>:
   2339c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   233a0:	sub	sp, sp, #3312	; 0xcf0
   233a4:	ldr	ip, [r0, #32]
   233a8:	sub	sp, sp, #4
   233ac:	mov	fp, r0
   233b0:	str	r2, [sp, #56]	; 0x38
   233b4:	mov	r0, r1
   233b8:	ldr	r2, [ip]
   233bc:	ldr	r1, [ip, #20]
   233c0:	mov	r4, r3
   233c4:	str	r3, [sp, #60]	; 0x3c
   233c8:	blx	r2
   233cc:	cmn	r0, #1
   233d0:	beq	236b4 <readstat_parse_stata_dictionary+0x318>
   233d4:	ldr	r3, [fp, #32]
   233d8:	mov	r1, #2
   233dc:	mov	r0, #0
   233e0:	ldr	r4, [r3, #8]
   233e4:	ldr	r2, [r3, #20]
   233e8:	blx	r4
   233ec:	cmn	r0, #1
   233f0:	mov	r4, r0
   233f4:	beq	23664 <readstat_parse_stata_dictionary+0x2c8>
   233f8:	ldr	r3, [fp, #32]
   233fc:	mov	r1, #0
   23400:	mov	r0, r1
   23404:	ldr	r5, [r3, #8]
   23408:	ldr	r2, [r3, #20]
   2340c:	blx	r5
   23410:	mov	r0, r4
   23414:	bl	410c <malloc@plt>
   23418:	ldr	r3, [fp, #32]
   2341c:	mov	r1, r4
   23420:	add	r2, r0, r4
   23424:	str	r2, [sp, #32]
   23428:	ldr	r4, [r3, #12]
   2342c:	mov	r6, r2
   23430:	ldr	r2, [r3, #20]
   23434:	mov	r5, r0
   23438:	str	r0, [sp, #76]	; 0x4c
   2343c:	blx	r4
   23440:	mov	r1, #280	; 0x118
   23444:	mov	r0, #1
   23448:	bl	3d58 <calloc@plt>
   2344c:	subs	sl, r0, #0
   23450:	beq	23a28 <readstat_parse_stata_dictionary+0x68c>
   23454:	mov	r3, #1
   23458:	cmp	r5, r6
   2345c:	mov	r0, r5
   23460:	str	r3, [sl, #256]	; 0x100
   23464:	beq	239e8 <readstat_parse_stata_dictionary+0x64c>
   23468:	ldr	r2, [pc, #1484]	; 23a3c <readstat_parse_stata_dictionary+0x6a0>
   2346c:	ldr	r1, [pc, #1484]	; 23a40 <readstat_parse_stata_dictionary+0x6a4>
   23470:	add	r2, pc, r2
   23474:	add	r1, pc, r1
   23478:	mov	r5, #0
   2347c:	mov	ip, r1
   23480:	str	r1, [sp, #36]	; 0x24
   23484:	add	r1, r2, #2688	; 0xa80
   23488:	str	r2, [sp, #24]
   2348c:	mov	r8, r3
   23490:	add	r2, ip, #2800	; 0xaf0
   23494:	add	r3, r1, #4
   23498:	mov	r9, r5
   2349c:	mov	r1, r5
   234a0:	mov	r6, r5
   234a4:	mov	r7, r0
   234a8:	mov	r4, #4
   234ac:	str	r3, [sp, #64]	; 0x40
   234b0:	add	r3, r2, #12
   234b4:	str	r3, [sp, #40]	; 0x28
   234b8:	str	r5, [sp, #52]	; 0x34
   234bc:	str	r5, [sp, #28]
   234c0:	str	r5, [sp, #12]
   234c4:	str	r5, [sp, #8]
   234c8:	str	r5, [sp, #44]	; 0x2c
   234cc:	str	r5, [sp, #20]
   234d0:	str	r0, [sp, #72]	; 0x48
   234d4:	str	fp, [sp, #68]	; 0x44
   234d8:	ldr	lr, [pc, #1380]	; 23a44 <readstat_parse_stata_dictionary+0x6a8>
   234dc:	cmp	r4, #0
   234e0:	add	lr, pc, lr
   234e4:	add	lr, lr, r1
   234e8:	mov	r3, r5
   234ec:	beq	23534 <readstat_parse_stata_dictionary+0x198>
   234f0:	sub	r1, r4, #1
   234f4:	adds	r1, lr, r1
   234f8:	bcs	2352c <readstat_parse_stata_dictionary+0x190>
   234fc:	ldrb	ip, [r7]
   23500:	mov	r2, lr
   23504:	sub	r3, r1, r2
   23508:	ldrb	r0, [r2, r3, asr #1]
   2350c:	add	r3, r2, r3, asr #1
   23510:	cmp	r0, ip
   23514:	subhi	r1, r3, #1
   23518:	bhi	23524 <readstat_parse_stata_dictionary+0x188>
   2351c:	bcs	23940 <readstat_parse_stata_dictionary+0x5a4>
   23520:	add	r2, r3, #1
   23524:	cmp	r1, r2
   23528:	bcs	23504 <readstat_parse_stata_dictionary+0x168>
   2352c:	add	lr, lr, r4
   23530:	add	r3, r5, r4
   23534:	ldr	r2, [pc, #1292]	; 23a48 <readstat_parse_stata_dictionary+0x6ac>
   23538:	add	r2, pc, r2
   2353c:	add	r8, r2, r8
   23540:	ldrb	r5, [r8, #828]	; 0x33c
   23544:	cmp	r5, #0
   23548:	beq	235a0 <readstat_parse_stata_dictionary+0x204>
   2354c:	add	r0, lr, r5, lsl #1
   23550:	sub	r0, r0, #2
   23554:	cmp	lr, r0
   23558:	bhi	2359c <readstat_parse_stata_dictionary+0x200>
   2355c:	ldrb	r4, [r7]
   23560:	mov	r1, lr
   23564:	sub	r2, r0, r1
   23568:	asr	r2, r2, #1
   2356c:	bic	r2, r2, #1
   23570:	add	ip, r1, r2
   23574:	ldrb	r2, [r1, r2]
   23578:	cmp	r2, r4
   2357c:	subhi	r0, ip, #2
   23580:	bhi	23594 <readstat_parse_stata_dictionary+0x1f8>
   23584:	ldrb	r2, [ip, #1]
   23588:	add	r1, ip, #2
   2358c:	cmp	r2, r4
   23590:	bcs	2394c <readstat_parse_stata_dictionary+0x5b0>
   23594:	cmp	r1, r0
   23598:	bls	23564 <readstat_parse_stata_dictionary+0x1c8>
   2359c:	add	r3, r3, r5
   235a0:	ldr	r2, [sp, #24]
   235a4:	add	r3, r2, r3
   235a8:	ldrb	r4, [r3, #1840]	; 0x730
   235ac:	ldrb	r8, [r3, #988]	; 0x3dc
   235b0:	cmp	r4, #0
   235b4:	beq	236e8 <readstat_parse_stata_dictionary+0x34c>
   235b8:	ldr	r3, [sp, #64]	; 0x40
   235bc:	ldrb	r5, [r3, r4]
   235c0:	add	r4, r3, r4
   235c4:	add	r3, sp, #1104	; 0x450
   235c8:	add	r5, r4, r5
   235cc:	str	r3, [sp, #16]
   235d0:	add	r3, r3, #580	; 0x244
   235d4:	str	r3, [sp, #48]	; 0x30
   235d8:	cmp	r4, r5
   235dc:	beq	236e8 <readstat_parse_stata_dictionary+0x34c>
   235e0:	ldrb	r3, [r4, #1]!
   235e4:	cmp	r3, #28
   235e8:	addls	pc, pc, r3, lsl #2
   235ec:	b	235d8 <readstat_parse_stata_dictionary+0x23c>
   235f0:	b	23730 <readstat_parse_stata_dictionary+0x394>
   235f4:	b	23764 <readstat_parse_stata_dictionary+0x3c8>
   235f8:	b	23738 <readstat_parse_stata_dictionary+0x39c>
   235fc:	b	237f4 <readstat_parse_stata_dictionary+0x458>
   23600:	b	237dc <readstat_parse_stata_dictionary+0x440>
   23604:	b	237c0 <readstat_parse_stata_dictionary+0x424>
   23608:	b	237a8 <readstat_parse_stata_dictionary+0x40c>
   2360c:	b	23728 <readstat_parse_stata_dictionary+0x38c>
   23610:	b	236d8 <readstat_parse_stata_dictionary+0x33c>
   23614:	b	23728 <readstat_parse_stata_dictionary+0x38c>
   23618:	b	236d8 <readstat_parse_stata_dictionary+0x33c>
   2361c:	b	23728 <readstat_parse_stata_dictionary+0x38c>
   23620:	b	236d8 <readstat_parse_stata_dictionary+0x33c>
   23624:	b	2392c <readstat_parse_stata_dictionary+0x590>
   23628:	b	23924 <readstat_parse_stata_dictionary+0x588>
   2362c:	b	23918 <readstat_parse_stata_dictionary+0x57c>
   23630:	b	2390c <readstat_parse_stata_dictionary+0x570>
   23634:	b	238fc <readstat_parse_stata_dictionary+0x560>
   23638:	b	238e8 <readstat_parse_stata_dictionary+0x54c>
   2363c:	b	238e0 <readstat_parse_stata_dictionary+0x544>
   23640:	b	238d4 <readstat_parse_stata_dictionary+0x538>
   23644:	b	238c8 <readstat_parse_stata_dictionary+0x52c>
   23648:	b	238bc <readstat_parse_stata_dictionary+0x520>
   2364c:	b	238b0 <readstat_parse_stata_dictionary+0x514>
   23650:	b	238a4 <readstat_parse_stata_dictionary+0x508>
   23654:	b	23778 <readstat_parse_stata_dictionary+0x3dc>
   23658:	b	23784 <readstat_parse_stata_dictionary+0x3e8>
   2365c:	b	23794 <readstat_parse_stata_dictionary+0x3f8>
   23660:	b	2379c <readstat_parse_stata_dictionary+0x400>
   23664:	mov	r3, #0
   23668:	mov	sl, r3
   2366c:	mov	r4, #15
   23670:	str	r3, [sp, #76]	; 0x4c
   23674:	ldr	r3, [fp, #32]
   23678:	ldr	r2, [r3, #4]
   2367c:	ldr	r0, [r3, #20]
   23680:	blx	r2
   23684:	ldr	r0, [sp, #76]	; 0x4c
   23688:	bl	3ec0 <free@plt>
   2368c:	ldr	r3, [sp, #60]	; 0x3c
   23690:	mov	r0, sl
   23694:	cmp	r3, #0
   23698:	strne	r4, [r3]
   2369c:	bl	3fbc <readstat_schema_free@plt>
   236a0:	mov	sl, #0
   236a4:	mov	r0, sl
   236a8:	add	sp, sp, #3312	; 0xcf0
   236ac:	add	sp, sp, #4
   236b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   236b4:	cmp	r4, #0
   236b8:	beq	236a0 <readstat_parse_stata_dictionary+0x304>
   236bc:	mov	r3, #1
   236c0:	mov	sl, #0
   236c4:	mov	r0, sl
   236c8:	str	r3, [r4]
   236cc:	add	sp, sp, #3312	; 0xcf0
   236d0:	add	sp, sp, #4
   236d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   236d8:	sub	r3, r7, r6
   236dc:	cmp	r4, r5
   236e0:	str	r3, [sp, #8]
   236e4:	bne	235e0 <readstat_parse_stata_dictionary+0x244>
   236e8:	cmp	r8, #0
   236ec:	beq	23958 <readstat_parse_stata_dictionary+0x5bc>
   236f0:	ldr	r3, [sp, #32]
   236f4:	add	r7, r7, #1
   236f8:	cmp	r3, r7
   236fc:	beq	239c0 <readstat_parse_stata_dictionary+0x624>
   23700:	ldr	r2, [sp, #36]	; 0x24
   23704:	lsl	r3, r8, #1
   23708:	add	r1, r2, #3120	; 0xc30
   2370c:	add	r1, r1, #8
   23710:	add	r2, r2, r8
   23714:	ldrsh	r5, [r1, r3]
   23718:	ldr	r1, [sp, #40]	; 0x28
   2371c:	ldrb	r4, [r2, #3444]	; 0xd74
   23720:	ldrsh	r1, [r1, r3]
   23724:	b	234d8 <readstat_parse_stata_dictionary+0x13c>
   23728:	mov	r6, r7
   2372c:	b	235d8 <readstat_parse_stata_dictionary+0x23c>
   23730:	mov	r9, #0
   23734:	b	235d8 <readstat_parse_stata_dictionary+0x23c>
   23738:	mov	r2, #2208	; 0x8a0
   2373c:	mov	r1, #0
   23740:	ldr	r0, [sp, #16]
   23744:	bl	42a4 <memset@plt>
   23748:	mov	r2, #5
   2374c:	str	r2, [sp, #1120]	; 0x460
   23750:	ldr	r2, [sp, #20]
   23754:	mov	r3, #46	; 0x2e
   23758:	str	r2, [sp, #1124]	; 0x464
   2375c:	strb	r3, [sp, #3304]	; 0xce8
   23760:	b	235d8 <readstat_parse_stata_dictionary+0x23c>
   23764:	ldrb	r3, [r7]
   23768:	add	r9, r9, r9, lsl #2
   2376c:	sub	r3, r3, #48	; 0x30
   23770:	add	r9, r3, r9, lsl #1
   23774:	b	235d8 <readstat_parse_stata_dictionary+0x23c>
   23778:	mov	r3, #5
   2377c:	str	r3, [sp, #1120]	; 0x460
   23780:	b	235d8 <readstat_parse_stata_dictionary+0x23c>
   23784:	mov	r3, #0
   23788:	str	r3, [sp, #1120]	; 0x460
   2378c:	str	r9, [sp, #2716]	; 0xa9c
   23790:	b	235d8 <readstat_parse_stata_dictionary+0x23c>
   23794:	str	r9, [sp, #1112]	; 0x458
   23798:	b	235d8 <readstat_parse_stata_dictionary+0x23c>
   2379c:	mov	r3, #44	; 0x2c
   237a0:	strb	r3, [sp, #3304]	; 0xce8
   237a4:	b	235d8 <readstat_parse_stata_dictionary+0x23c>
   237a8:	ldr	r3, [sp, #8]
   237ac:	mov	r2, r6
   237b0:	mov	r1, #1024	; 0x400
   237b4:	ldr	r0, [sp, #48]	; 0x30
   237b8:	bl	3e6c <readstat_copy@plt>
   237bc:	b	235d8 <readstat_parse_stata_dictionary+0x23c>
   237c0:	ldr	r0, [sp, #16]
   237c4:	ldr	r3, [sp, #8]
   237c8:	mov	r2, r6
   237cc:	mov	r1, #300	; 0x12c
   237d0:	add	r0, r0, #24
   237d4:	bl	3e6c <readstat_copy@plt>
   237d8:	b	235d8 <readstat_parse_stata_dictionary+0x23c>
   237dc:	ldr	r3, [sp, #8]
   237e0:	mov	r2, r6
   237e4:	mov	r1, #255	; 0xff
   237e8:	mov	r0, sl
   237ec:	bl	3e6c <readstat_copy@plt>
   237f0:	b	235d8 <readstat_parse_stata_dictionary+0x23c>
   237f4:	ldr	r3, [sp, #68]	; 0x44
   237f8:	ldr	r2, [sp, #28]
   237fc:	ldr	r1, [sp, #12]
   23800:	ldr	fp, [r3, #8]
   23804:	ldr	r3, [sp, #1112]	; 0x458
   23808:	cmp	fp, #0
   2380c:	add	r3, r2, r3
   23810:	str	r2, [sp, #1108]	; 0x454
   23814:	str	r1, [sp, #1104]	; 0x450
   23818:	str	r3, [sp, #28]
   2381c:	beq	23854 <readstat_parse_stata_dictionary+0x4b8>
   23820:	ldr	r3, [sp, #44]	; 0x2c
   23824:	mov	r2, #0
   23828:	str	r3, [sp, #3268]	; 0xcc4
   2382c:	add	r1, sp, #1120	; 0x460
   23830:	ldr	r3, [sp, #56]	; 0x38
   23834:	ldr	r0, [sp, #20]
   23838:	blx	fp
   2383c:	cmp	r0, #1
   23840:	beq	23a30 <readstat_parse_stata_dictionary+0x694>
   23844:	cmp	r0, #2
   23848:	moveq	r3, #1
   2384c:	streq	r3, [sp, #1116]	; 0x45c
   23850:	beq	23860 <readstat_parse_stata_dictionary+0x4c4>
   23854:	ldr	r3, [sp, #44]	; 0x2c
   23858:	add	r3, r3, #1
   2385c:	str	r3, [sp, #44]	; 0x2c
   23860:	ldr	r1, [sl, #268]	; 0x10c
   23864:	mov	fp, #2208	; 0x8a0
   23868:	ldr	r0, [sl, #276]	; 0x114
   2386c:	mla	r1, r1, fp, fp
   23870:	bl	3ff8 <realloc@plt>
   23874:	ldr	r3, [sl, #268]	; 0x10c
   23878:	ldr	r1, [sp, #16]
   2387c:	add	r2, r3, #1
   23880:	str	r2, [sl, #268]	; 0x10c
   23884:	mov	r2, fp
   23888:	str	r0, [sl, #276]	; 0x114
   2388c:	mla	r0, fp, r3, r0
   23890:	ldr	r3, [sp, #20]
   23894:	add	r3, r3, #1
   23898:	str	r3, [sp, #20]
   2389c:	bl	3f20 <memcpy@plt>
   238a0:	b	235d8 <readstat_parse_stata_dictionary+0x23c>
   238a4:	mov	r3, #4
   238a8:	str	r3, [sp, #1120]	; 0x460
   238ac:	b	235d8 <readstat_parse_stata_dictionary+0x23c>
   238b0:	mov	r3, #3
   238b4:	str	r3, [sp, #1120]	; 0x460
   238b8:	b	235d8 <readstat_parse_stata_dictionary+0x23c>
   238bc:	mov	r3, #2
   238c0:	str	r3, [sp, #1120]	; 0x460
   238c4:	b	235d8 <readstat_parse_stata_dictionary+0x23c>
   238c8:	mov	r3, #1
   238cc:	str	r3, [sp, #1120]	; 0x460
   238d0:	b	235d8 <readstat_parse_stata_dictionary+0x23c>
   238d4:	sub	r3, r9, #1
   238d8:	str	r3, [sl, #264]	; 0x108
   238dc:	b	235d8 <readstat_parse_stata_dictionary+0x23c>
   238e0:	str	r9, [sl, #260]	; 0x104
   238e4:	b	235d8 <readstat_parse_stata_dictionary+0x23c>
   238e8:	ldr	r2, [sp, #12]
   238ec:	sub	r3, r9, #1
   238f0:	add	r3, r2, r3
   238f4:	str	r3, [sp, #12]
   238f8:	b	235d8 <readstat_parse_stata_dictionary+0x23c>
   238fc:	ldr	r3, [sp, #12]
   23900:	add	r3, r3, #1
   23904:	str	r3, [sp, #12]
   23908:	b	235d8 <readstat_parse_stata_dictionary+0x23c>
   2390c:	sub	r3, r9, #1
   23910:	str	r3, [sp, #28]
   23914:	b	235d8 <readstat_parse_stata_dictionary+0x23c>
   23918:	sub	r3, r9, #1
   2391c:	str	r3, [sp, #12]
   23920:	b	235d8 <readstat_parse_stata_dictionary+0x23c>
   23924:	str	r9, [sl, #256]	; 0x100
   23928:	b	235d8 <readstat_parse_stata_dictionary+0x23c>
   2392c:	ldr	r3, [sp, #52]	; 0x34
   23930:	str	r7, [sp, #72]	; 0x48
   23934:	add	r3, r3, #1
   23938:	str	r3, [sp, #52]	; 0x34
   2393c:	b	235d8 <readstat_parse_stata_dictionary+0x23c>
   23940:	sub	r3, r3, lr
   23944:	add	r3, r5, r3
   23948:	b	235a0 <readstat_parse_stata_dictionary+0x204>
   2394c:	sub	lr, ip, lr
   23950:	add	r3, r3, lr, asr #1
   23954:	b	235a0 <readstat_parse_stata_dictionary+0x204>
   23958:	ldr	r3, [sp, #32]
   2395c:	ldr	fp, [sp, #68]	; 0x44
   23960:	cmp	r7, r3
   23964:	beq	239e8 <readstat_parse_stata_dictionary+0x64c>
   23968:	ldr	r3, [sp, #72]	; 0x48
   2396c:	ldrb	r2, [r7]
   23970:	sub	r3, r7, r3
   23974:	add	r3, r3, #1
   23978:	str	r3, [sp]
   2397c:	str	r2, [sp, #4]
   23980:	ldr	r3, [sp, #52]	; 0x34
   23984:	ldr	r2, [pc, #192]	; 23a4c <readstat_parse_stata_dictionary+0x6b0>
   23988:	add	r4, sp, #80	; 0x50
   2398c:	add	r3, r3, #1
   23990:	mov	r0, r4
   23994:	add	r2, pc, r2
   23998:	mov	r1, #1024	; 0x400
   2399c:	bl	4280 <snprintf@plt>
   239a0:	ldr	r3, [fp, #24]
   239a4:	cmp	r3, #0
   239a8:	beq	239b8 <readstat_parse_stata_dictionary+0x61c>
   239ac:	ldr	r1, [sp, #56]	; 0x38
   239b0:	mov	r0, r4
   239b4:	blx	r3
   239b8:	mov	r4, #5
   239bc:	b	23674 <readstat_parse_stata_dictionary+0x2d8>
   239c0:	cmp	r8, #155	; 0x9b
   239c4:	ldr	fp, [sp, #68]	; 0x44
   239c8:	ble	239e8 <readstat_parse_stata_dictionary+0x64c>
   239cc:	ldr	r3, [fp, #32]
   239d0:	ldr	r2, [r3, #4]
   239d4:	ldr	r0, [r3, #20]
   239d8:	blx	r2
   239dc:	ldr	r0, [sp, #76]	; 0x4c
   239e0:	bl	3ec0 <free@plt>
   239e4:	b	236a4 <readstat_parse_stata_dictionary+0x308>
   239e8:	ldr	lr, [pc, #96]	; 23a50 <readstat_parse_stata_dictionary+0x6b4>
   239ec:	add	r4, sp, #80	; 0x50
   239f0:	add	lr, pc, lr
   239f4:	mov	ip, r4
   239f8:	ldm	lr!, {r0, r1, r2, r3}
   239fc:	stmia	ip!, {r0, r1, r2, r3}
   23a00:	ldm	lr!, {r0, r1, r2, r3}
   23a04:	stmia	ip!, {r0, r1, r2, r3}
   23a08:	ldm	lr!, {r0, r1, r2, r3}
   23a0c:	stmia	ip!, {r0, r1, r2, r3}
   23a10:	ldm	lr, {r0, r1, r2}
   23a14:	lsr	r3, r2, #16
   23a18:	stmia	ip!, {r0, r1}
   23a1c:	strh	r2, [ip], #2
   23a20:	strb	r3, [ip]
   23a24:	b	239a0 <readstat_parse_stata_dictionary+0x604>
   23a28:	mov	r4, #3
   23a2c:	b	23674 <readstat_parse_stata_dictionary+0x2d8>
   23a30:	ldr	fp, [sp, #68]	; 0x44
   23a34:	mov	r4, #4
   23a38:	b	23674 <readstat_parse_stata_dictionary+0x2d8>
   23a3c:	.word	0x000109b8
   23a40:	.word	0x000109b4
   23a44:	.word	0x00010948
   23a48:	.word	0x000108f0
   23a4c:	.word	0x000112e4
   23a50:	.word	0x0001124c

00023a54 <handle_value.isra.1>:
   23a54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23a58:	add	fp, sp, #32
   23a5c:	sub	sp, sp, #52	; 0x34
   23a60:	mov	sl, r3
   23a64:	ldr	r3, [fp, #8]
   23a68:	ldr	lr, [sl, #16]
   23a6c:	sub	r4, fp, #52	; 0x34
   23a70:	lsl	r7, r3, #2
   23a74:	add	ip, r7, #8
   23a78:	bic	ip, ip, #7
   23a7c:	mov	r5, #0
   23a80:	add	r3, r7, #1
   23a84:	mov	r8, r0
   23a88:	sub	sp, sp, ip
   23a8c:	mov	r0, lr
   23a90:	str	r1, [fp, #-68]	; 0xffffffbc
   23a94:	mov	r6, r2
   23a98:	str	r3, [fp, #-64]	; 0xffffffc0
   23a9c:	str	lr, [fp, #-44]	; 0xffffffd4
   23aa0:	str	r5, [r4, #4]
   23aa4:	str	r5, [r4, #12]
   23aa8:	bl	3e24 <readstat_type_class@plt>
   23aac:	add	r7, sl, #16
   23ab0:	cmp	r0, r5
   23ab4:	beq	23b44 <handle_value.isra.1+0xf0>
   23ab8:	ldr	r3, [sl, #16]
   23abc:	str	r5, [fp, #-56]	; 0xffffffc8
   23ac0:	cmp	r3, #5
   23ac4:	beq	23b8c <handle_value.isra.1+0x138>
   23ac8:	cmp	r3, #4
   23acc:	beq	23b78 <handle_value.isra.1+0x124>
   23ad0:	mov	r2, #10
   23ad4:	sub	r1, fp, #56	; 0x38
   23ad8:	ldr	r0, [fp, #4]
   23adc:	bl	3e30 <strtol@plt>
   23ae0:	mov	r3, #3
   23ae4:	str	r3, [fp, #-44]	; 0xffffffd4
   23ae8:	str	r0, [fp, #-52]	; 0xffffffcc
   23aec:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   23af0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   23af4:	ldr	r1, [fp, #4]
   23af8:	bic	r3, r3, #1
   23afc:	cmp	r2, r1
   23b00:	orreq	r3, r3, #1
   23b04:	strb	r3, [fp, #-39]	; 0xffffffd9
   23b08:	sub	r3, fp, #36	; 0x24
   23b0c:	ldmdb	r3, {r0, r1}
   23b10:	ldr	r3, [fp, #12]
   23b14:	str	r3, [sp, #8]
   23b18:	ldr	r5, [r8]
   23b1c:	stm	sp, {r0, r1}
   23b20:	mov	r1, r7
   23b24:	ldm	r4, {r2, r3}
   23b28:	mov	r0, r6
   23b2c:	blx	r5
   23b30:	cmp	r0, #1
   23b34:	moveq	r0, #4
   23b38:	movne	r0, #0
   23b3c:	sub	sp, fp, #32
   23b40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23b44:	ldr	r3, [fp, #-68]	; 0xffffffbc
   23b48:	add	r9, sp, #16
   23b4c:	str	r3, [sp]
   23b50:	ldr	r1, [fp, #-64]	; 0xffffffc0
   23b54:	ldr	r3, [fp, #8]
   23b58:	ldr	r2, [fp, #4]
   23b5c:	mov	r0, r9
   23b60:	bl	4238 <readstat_convert@plt>
   23b64:	cmp	r0, #0
   23b68:	streq	r9, [fp, #-52]	; 0xffffffcc
   23b6c:	beq	23b08 <handle_value.isra.1+0xb4>
   23b70:	sub	sp, fp, #32
   23b74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23b78:	sub	r1, fp, #56	; 0x38
   23b7c:	ldr	r0, [fp, #4]
   23b80:	bl	40c4 <strtof@plt>
   23b84:	vstr	s0, [fp, #-52]	; 0xffffffcc
   23b88:	b	23aec <handle_value.isra.1+0x98>
   23b8c:	sub	r1, fp, #56	; 0x38
   23b90:	ldr	r0, [fp, #4]
   23b94:	bl	42f8 <strtod@plt>
   23b98:	vstr	d0, [fp, #-52]	; 0xffffffcc
   23b9c:	b	23aec <handle_value.isra.1+0x98>

00023ba0 <txt_parse_fixed_width>:
   23ba0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23ba4:	sub	sp, sp, #4160	; 0x1040
   23ba8:	sub	sp, sp, #4
   23bac:	ldr	r7, [r1, #8]
   23bb0:	str	r3, [sp, #52]	; 0x34
   23bb4:	add	r3, r0, #16
   23bb8:	str	r1, [sp, #32]
   23bbc:	str	r3, [sp, #40]	; 0x28
   23bc0:	ldr	sl, [r0, #32]
   23bc4:	mov	r3, #0
   23bc8:	ldr	r1, [r7, #256]	; 0x100
   23bcc:	ldr	r9, [pc, #500]	; 23dc8 <txt_parse_fixed_width+0x228>
   23bd0:	str	r3, [sp, #28]
   23bd4:	mov	fp, r0
   23bd8:	add	r3, sp, #64	; 0x40
   23bdc:	str	r3, [sp, #16]
   23be0:	add	r3, sp, #63	; 0x3f
   23be4:	str	r2, [sp, #36]	; 0x24
   23be8:	str	r3, [sp, #48]	; 0x30
   23bec:	cmp	r1, #0
   23bf0:	ble	23d84 <txt_parse_fixed_width+0x1e4>
   23bf4:	mov	r8, #0
   23bf8:	ldr	r3, [sp, #52]	; 0x34
   23bfc:	mov	r5, r8
   23c00:	sub	r3, r3, #4
   23c04:	str	r3, [sp, #24]
   23c08:	ldr	r4, [sp, #24]
   23c0c:	add	r0, sp, #4160	; 0x1040
   23c10:	add	r0, r0, #40	; 0x28
   23c14:	ldr	r3, [sl, #12]
   23c18:	ldr	r2, [sl, #20]
   23c1c:	ldr	r1, [r4, #4]
   23c20:	ldr	r0, [r0]
   23c24:	blx	r3
   23c28:	cmp	r0, #0
   23c2c:	beq	23da4 <txt_parse_fixed_width+0x204>
   23c30:	mov	r1, r4
   23c34:	ldr	r3, [r1, #4]!
   23c38:	cmp	r3, r0
   23c3c:	str	r1, [sp, #24]
   23c40:	bhi	23dbc <txt_parse_fixed_width+0x21c>
   23c44:	ldr	r1, [r7, #268]	; 0x10c
   23c48:	cmp	r1, r5
   23c4c:	ble	23d2c <txt_parse_fixed_width+0x18c>
   23c50:	mov	r3, #2208	; 0x8a0
   23c54:	ldr	r2, [r7, #276]	; 0x114
   23c58:	mul	r4, r3, r5
   23c5c:	add	r3, r2, r4
   23c60:	ldr	r2, [r2, r4]
   23c64:	cmp	r8, r2
   23c68:	bne	23d2c <txt_parse_fixed_width+0x18c>
   23c6c:	add	r4, r4, #2208	; 0x8a0
   23c70:	str	sl, [sp, #44]	; 0x2c
   23c74:	b	23c98 <txt_parse_fixed_width+0xf8>
   23c78:	cmp	r5, r1
   23c7c:	bge	23d28 <txt_parse_fixed_width+0x188>
   23c80:	ldr	r3, [r7, #276]	; 0x114
   23c84:	add	r3, r3, r4
   23c88:	add	r4, r4, #2208	; 0x8a0
   23c8c:	ldr	r2, [r3]
   23c90:	cmp	r2, r8
   23c94:	bne	23d28 <txt_parse_fixed_width+0x188>
   23c98:	ldr	r6, [r3, #8]
   23c9c:	add	r5, r5, #1
   23ca0:	cmp	r6, r9
   23ca4:	bhi	23c78 <txt_parse_fixed_width+0xd8>
   23ca8:	ldr	r2, [fp, #16]
   23cac:	cmp	r2, #0
   23cb0:	beq	23c78 <txt_parse_fixed_width+0xd8>
   23cb4:	ldr	sl, [r3, #12]
   23cb8:	cmp	sl, #0
   23cbc:	bne	23c78 <txt_parse_fixed_width+0xd8>
   23cc0:	ldr	r1, [r3, #4]
   23cc4:	str	r3, [sp, #20]
   23cc8:	add	r3, sp, #4160	; 0x1040
   23ccc:	add	r3, r3, #40	; 0x28
   23cd0:	mov	r2, r6
   23cd4:	ldr	r3, [r3]
   23cd8:	ldr	r0, [sp, #16]
   23cdc:	add	r1, r3, r1
   23ce0:	bl	3f20 <memcpy@plt>
   23ce4:	ldr	r2, [sp, #32]
   23ce8:	ldr	ip, [sp, #16]
   23cec:	ldr	r3, [sp, #20]
   23cf0:	ldr	r1, [r2, #4]
   23cf4:	ldr	r2, [sp, #36]	; 0x24
   23cf8:	str	r6, [sp, #4]
   23cfc:	str	r2, [sp, #8]
   23d00:	str	ip, [sp]
   23d04:	ldr	r2, [sp, #28]
   23d08:	ldr	r0, [sp, #40]	; 0x28
   23d0c:	strb	sl, [ip, r6]
   23d10:	bl	23a54 <handle_value.isra.1>
   23d14:	cmp	r0, #0
   23d18:	bne	23da4 <txt_parse_fixed_width+0x204>
   23d1c:	ldr	r1, [r7, #268]	; 0x10c
   23d20:	cmp	r5, r1
   23d24:	blt	23c80 <txt_parse_fixed_width+0xe0>
   23d28:	ldr	sl, [sp, #44]	; 0x2c
   23d2c:	ldr	r3, [r7, #260]	; 0x104
   23d30:	cmp	r3, #0
   23d34:	bne	23d74 <txt_parse_fixed_width+0x1d4>
   23d38:	ldr	r2, [sp, #16]
   23d3c:	ldr	r4, [sp, #48]	; 0x30
   23d40:	mov	r6, r2
   23d44:	strb	r3, [r2, #-1]
   23d48:	b	23d58 <txt_parse_fixed_width+0x1b8>
   23d4c:	ldrb	r3, [r6, #-1]
   23d50:	cmp	r3, #10
   23d54:	beq	23d74 <txt_parse_fixed_width+0x1d4>
   23d58:	ldr	r3, [sl, #12]
   23d5c:	ldr	r2, [sl, #20]
   23d60:	mov	r1, #1
   23d64:	mov	r0, r4
   23d68:	blx	r3
   23d6c:	cmp	r0, #1
   23d70:	beq	23d4c <txt_parse_fixed_width+0x1ac>
   23d74:	ldr	r1, [r7, #256]	; 0x100
   23d78:	add	r8, r8, #1
   23d7c:	cmp	r1, r8
   23d80:	bgt	23c08 <txt_parse_fixed_width+0x68>
   23d84:	ldr	r2, [sp, #28]
   23d88:	ldr	r3, [fp, #44]	; 0x2c
   23d8c:	add	r2, r2, #1
   23d90:	cmp	r2, r3
   23d94:	str	r2, [sp, #28]
   23d98:	bne	23bec <txt_parse_fixed_width+0x4c>
   23d9c:	mov	r0, #0
   23da0:	b	23da8 <txt_parse_fixed_width+0x208>
   23da4:	ldr	r2, [sp, #28]
   23da8:	ldr	r3, [sp, #32]
   23dac:	str	r2, [r3]
   23db0:	add	sp, sp, #4160	; 0x1040
   23db4:	add	sp, sp, #4
   23db8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23dbc:	mov	r0, #2
   23dc0:	ldr	r2, [sp, #28]
   23dc4:	b	23da8 <txt_parse_fixed_width+0x208>
   23dc8:	.word	0x00000fff

00023dcc <readstat_parse_txt>:
   23dcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23dd0:	sub	sp, sp, #132	; 0x84
   23dd4:	mov	ip, r0
   23dd8:	str	r0, [sp, #24]
   23ddc:	ldr	r0, [r0, #40]	; 0x28
   23de0:	add	r8, sp, #60	; 0x3c
   23de4:	mov	r4, #0
   23de8:	cmp	r0, #0
   23dec:	str	r2, [sp, #28]
   23df0:	str	r2, [sp, #68]	; 0x44
   23df4:	mov	r5, r1
   23df8:	str	r3, [sp, #32]
   23dfc:	ldr	r7, [ip, #32]
   23e00:	str	r4, [r8, #4]
   23e04:	str	r4, [sp, #60]	; 0x3c
   23e08:	beq	23e30 <readstat_parse_txt+0x64>
   23e0c:	ldr	r1, [ip, #36]	; 0x24
   23e10:	cmp	r1, r4
   23e14:	beq	23e30 <readstat_parse_txt+0x64>
   23e18:	bl	4130 <iconv_open@plt>
   23e1c:	cmn	r0, #1
   23e20:	streq	r4, [sp, #64]	; 0x40
   23e24:	strne	r0, [sp, #64]	; 0x40
   23e28:	moveq	r4, #7
   23e2c:	beq	2403c <readstat_parse_txt+0x270>
   23e30:	mov	r0, r5
   23e34:	ldr	r3, [r7]
   23e38:	ldr	r1, [r7, #20]
   23e3c:	blx	r3
   23e40:	cmn	r0, #1
   23e44:	beq	24064 <readstat_parse_txt+0x298>
   23e48:	ldr	r6, [sp, #28]
   23e4c:	ldr	r4, [r6, #256]	; 0x100
   23e50:	lsl	r5, r4, #2
   23e54:	mov	r0, r5
   23e58:	bl	410c <malloc@plt>
   23e5c:	subs	r3, r0, #0
   23e60:	str	r3, [sp, #36]	; 0x24
   23e64:	beq	24038 <readstat_parse_txt+0x26c>
   23e68:	cmp	r4, #0
   23e6c:	ble	24224 <readstat_parse_txt+0x458>
   23e70:	ldr	r1, [r6, #260]	; 0x104
   23e74:	add	r2, r3, r5
   23e78:	str	r1, [r3], #4
   23e7c:	cmp	r2, r3
   23e80:	bne	23e78 <readstat_parse_txt+0xac>
   23e84:	ldr	r3, [sp, #28]
   23e88:	ldr	lr, [r3, #268]	; 0x10c
   23e8c:	cmp	lr, #0
   23e90:	ble	23ecc <readstat_parse_txt+0x100>
   23e94:	ldr	r2, [r3, #276]	; 0x114
   23e98:	ldr	r6, [sp, #36]	; 0x24
   23e9c:	mov	r1, #0
   23ea0:	ldm	r2, {r0, r3, r5}
   23ea4:	add	r1, r1, #1
   23ea8:	add	r2, r2, #2208	; 0x8a0
   23eac:	ldr	ip, [r6, r0, lsl #2]
   23eb0:	add	r3, r3, r5
   23eb4:	cmp	ip, r3
   23eb8:	strcc	r3, [r6, r0, lsl #2]
   23ebc:	cmp	r1, lr
   23ec0:	blt	23ea0 <readstat_parse_txt+0xd4>
   23ec4:	cmp	r4, #0
   23ec8:	ble	24234 <readstat_parse_txt+0x468>
   23ecc:	ldr	r1, [sp, #36]	; 0x24
   23ed0:	mov	r3, #0
   23ed4:	mov	r2, r3
   23ed8:	sub	r0, r1, #4
   23edc:	ldr	r1, [r0, #4]!
   23ee0:	add	r2, r2, #1
   23ee4:	cmp	r3, r1
   23ee8:	movcc	r3, r1
   23eec:	cmp	r4, r2
   23ef0:	bgt	23edc <readstat_parse_txt+0x110>
   23ef4:	add	r0, r3, #2
   23ef8:	bl	410c <malloc@plt>
   23efc:	subs	r3, r0, #0
   23f00:	str	r3, [sp, #44]	; 0x2c
   23f04:	beq	241d4 <readstat_parse_txt+0x408>
   23f08:	ldr	r3, [sp, #28]
   23f0c:	ldr	r6, [r3, #264]	; 0x108
   23f10:	cmp	r6, #1
   23f14:	ble	23f64 <readstat_parse_txt+0x198>
   23f18:	add	r4, sp, #128	; 0x80
   23f1c:	sub	r6, r6, #1
   23f20:	mov	r5, #1
   23f24:	mov	r3, #0
   23f28:	strb	r3, [r4, #-56]!	; 0xffffffc8
   23f2c:	subs	r6, r6, #1
   23f30:	bcc	23f64 <readstat_parse_txt+0x198>
   23f34:	ldr	r3, [r7, #12]
   23f38:	ldr	r2, [r7, #20]
   23f3c:	mov	r1, r5
   23f40:	mov	r0, r4
   23f44:	blx	r3
   23f48:	cmp	r0, #1
   23f4c:	bne	23f2c <readstat_parse_txt+0x160>
   23f50:	ldrb	r3, [sp, #72]	; 0x48
   23f54:	cmp	r3, #10
   23f58:	bne	23f34 <readstat_parse_txt+0x168>
   23f5c:	subs	r6, r6, #1
   23f60:	bcs	23f34 <readstat_parse_txt+0x168>
   23f64:	ldr	r3, [sp, #28]
   23f68:	ldrb	r3, [r3, #272]	; 0x110
   23f6c:	cmp	r3, #0
   23f70:	beq	2406c <readstat_parse_txt+0x2a0>
   23f74:	mov	r0, #4096	; 0x1000
   23f78:	bl	410c <malloc@plt>
   23f7c:	ldr	r3, [sp, #68]	; 0x44
   23f80:	mov	r2, #0
   23f84:	str	r2, [sp, #40]	; 0x28
   23f88:	ldr	r2, [sp, #24]
   23f8c:	str	r3, [sp, #20]
   23f90:	ldr	r3, [r3, #268]	; 0x10c
   23f94:	mov	sl, #4096	; 0x1000
   23f98:	mov	fp, #1
   23f9c:	ldr	r6, [r2, #32]
   23fa0:	add	r2, r2, #16
   23fa4:	str	r2, [sp, #48]	; 0x30
   23fa8:	str	r7, [sp, #52]	; 0x34
   23fac:	mov	r8, r0
   23fb0:	cmp	r3, #0
   23fb4:	ble	241a0 <readstat_parse_txt+0x3d4>
   23fb8:	mov	r9, #0
   23fbc:	ldr	r1, [sp, #20]
   23fc0:	sub	r3, r3, #1
   23fc4:	cmp	r3, r9
   23fc8:	ldr	r2, [r1, #276]	; 0x114
   23fcc:	mov	r3, #2208	; 0x8a0
   23fd0:	moveq	r7, #10
   23fd4:	mla	r3, r3, r9, r2
   23fd8:	movne	r2, r1
   23fdc:	mov	r4, #0
   23fe0:	ldrbne	r7, [r2, #272]	; 0x110
   23fe4:	str	r3, [sp, #16]
   23fe8:	add	r5, r8, r4
   23fec:	mov	r0, r5
   23ff0:	ldr	r3, [r6, #12]
   23ff4:	ldr	r2, [r6, #20]
   23ff8:	mov	r1, fp
   23ffc:	blx	r3
   24000:	cmp	r0, #1
   24004:	bne	2410c <readstat_parse_txt+0x340>
   24008:	ldrb	r3, [r5]
   2400c:	add	r4, r4, #1
   24010:	cmp	r3, r7
   24014:	beq	2411c <readstat_parse_txt+0x350>
   24018:	cmp	r4, sl
   2401c:	bne	23fe8 <readstat_parse_txt+0x21c>
   24020:	lsl	sl, r4, #1
   24024:	mov	r0, r8
   24028:	mov	r1, sl
   2402c:	bl	3ff8 <realloc@plt>
   24030:	mov	r8, r0
   24034:	b	23fe8 <readstat_parse_txt+0x21c>
   24038:	mov	r4, #3
   2403c:	ldr	r3, [r7, #4]
   24040:	ldr	r0, [r7, #20]
   24044:	blx	r3
   24048:	ldr	r0, [sp, #64]	; 0x40
   2404c:	cmp	r0, #0
   24050:	beq	24058 <readstat_parse_txt+0x28c>
   24054:	bl	3dd0 <iconv_close@plt>
   24058:	mov	r0, r4
   2405c:	add	sp, sp, #132	; 0x84
   24060:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24064:	mov	r4, #1
   24068:	b	2403c <readstat_parse_txt+0x270>
   2406c:	ldr	r3, [sp, #44]	; 0x2c
   24070:	mov	r1, r8
   24074:	str	r3, [sp]
   24078:	ldr	r2, [sp, #32]
   2407c:	ldr	r3, [sp, #36]	; 0x24
   24080:	ldr	r0, [sp, #24]
   24084:	bl	23ba0 <txt_parse_fixed_width>
   24088:	mov	r4, r0
   2408c:	cmp	r4, #0
   24090:	bne	240ec <readstat_parse_txt+0x320>
   24094:	ldr	r3, [sp, #24]
   24098:	ldr	r4, [r3]
   2409c:	cmp	r4, #0
   240a0:	beq	240ec <readstat_parse_txt+0x320>
   240a4:	add	r5, sp, #72	; 0x48
   240a8:	mov	r2, #56	; 0x38
   240ac:	mov	r1, #0
   240b0:	mov	r0, r5
   240b4:	bl	42a4 <memset@plt>
   240b8:	ldr	r3, [sp, #28]
   240bc:	ldr	r2, [sp, #60]	; 0x3c
   240c0:	mov	r0, r5
   240c4:	ldr	r8, [r3, #268]	; 0x10c
   240c8:	asr	r3, r2, #31
   240cc:	ldr	r1, [sp, #32]
   240d0:	asr	r9, r8, #31
   240d4:	strd	r2, [sp, #72]	; 0x48
   240d8:	strd	r8, [sp, #80]	; 0x50
   240dc:	blx	r4
   240e0:	cmp	r0, #1
   240e4:	moveq	r4, #4
   240e8:	movne	r4, #0
   240ec:	ldr	r3, [r7, #4]
   240f0:	ldr	r0, [r7, #20]
   240f4:	blx	r3
   240f8:	ldr	r0, [sp, #44]	; 0x2c
   240fc:	bl	3ec0 <free@plt>
   24100:	ldr	r0, [sp, #36]	; 0x24
   24104:	bl	3ec0 <free@plt>
   24108:	b	24048 <readstat_parse_txt+0x27c>
   2410c:	cmn	r0, #1
   24110:	beq	24208 <readstat_parse_txt+0x43c>
   24114:	cmp	r4, #0
   24118:	beq	241e8 <readstat_parse_txt+0x41c>
   2411c:	ldr	r3, [sp, #24]
   24120:	ldr	r3, [r3, #16]
   24124:	cmp	r3, #0
   24128:	beq	2418c <readstat_parse_txt+0x3c0>
   2412c:	ldr	r3, [sp, #16]
   24130:	ldr	r3, [r3, #12]
   24134:	cmp	r3, #0
   24138:	bne	2418c <readstat_parse_txt+0x3c0>
   2413c:	subs	r2, r4, #1
   24140:	moveq	r2, #0
   24144:	beq	24158 <readstat_parse_txt+0x38c>
   24148:	add	r3, r8, r2
   2414c:	ldrb	r3, [r3, #-1]
   24150:	cmp	r3, #13
   24154:	subeq	r2, r4, #2
   24158:	ldr	r0, [sp, #32]
   2415c:	mov	r3, #0
   24160:	strb	r3, [r8, r2]
   24164:	ldr	r1, [sp, #64]	; 0x40
   24168:	str	r0, [sp, #8]
   2416c:	str	r2, [sp, #4]
   24170:	ldr	r3, [sp, #16]
   24174:	str	r8, [sp]
   24178:	ldr	r2, [sp, #40]	; 0x28
   2417c:	ldr	r0, [sp, #48]	; 0x30
   24180:	bl	23a54 <handle_value.isra.1>
   24184:	cmp	r0, #0
   24188:	bne	2423c <readstat_parse_txt+0x470>
   2418c:	ldr	r3, [sp, #20]
   24190:	add	r9, r9, #1
   24194:	ldr	r3, [r3, #268]	; 0x10c
   24198:	cmp	r3, r9
   2419c:	bgt	23fbc <readstat_parse_txt+0x1f0>
   241a0:	ldr	r2, [sp, #24]
   241a4:	ldr	r1, [sp, #40]	; 0x28
   241a8:	ldr	r2, [r2, #44]	; 0x2c
   241ac:	add	r1, r1, #1
   241b0:	cmp	r1, r2
   241b4:	str	r1, [sp, #40]	; 0x28
   241b8:	bne	23fb0 <readstat_parse_txt+0x1e4>
   241bc:	cmp	r8, #0
   241c0:	ldr	r7, [sp, #52]	; 0x34
   241c4:	str	r1, [sp, #60]	; 0x3c
   241c8:	movne	r4, #0
   241cc:	bne	241fc <readstat_parse_txt+0x430>
   241d0:	b	24094 <readstat_parse_txt+0x2c8>
   241d4:	ldr	r3, [r7, #4]
   241d8:	ldr	r0, [r7, #20]
   241dc:	blx	r3
   241e0:	mov	r4, #3
   241e4:	b	24100 <readstat_parse_txt+0x334>
   241e8:	ldr	r3, [sp, #40]	; 0x28
   241ec:	cmp	r8, #0
   241f0:	ldr	r7, [sp, #52]	; 0x34
   241f4:	str	r3, [sp, #60]	; 0x3c
   241f8:	beq	24094 <readstat_parse_txt+0x2c8>
   241fc:	mov	r0, r8
   24200:	bl	3ec0 <free@plt>
   24204:	b	2408c <readstat_parse_txt+0x2c0>
   24208:	ldr	r7, [sp, #52]	; 0x34
   2420c:	mov	r4, #2
   24210:	ldr	r3, [sp, #40]	; 0x28
   24214:	cmp	r8, #0
   24218:	str	r3, [sp, #60]	; 0x3c
   2421c:	bne	241fc <readstat_parse_txt+0x430>
   24220:	b	240ec <readstat_parse_txt+0x320>
   24224:	ldr	r3, [sp, #28]
   24228:	ldr	lr, [r3, #268]	; 0x10c
   2422c:	cmp	lr, #0
   24230:	bgt	23e94 <readstat_parse_txt+0xc8>
   24234:	mov	r0, #2
   24238:	b	23ef8 <readstat_parse_txt+0x12c>
   2423c:	ldr	r7, [sp, #52]	; 0x34
   24240:	mov	r4, r0
   24244:	b	24210 <readstat_parse_txt+0x444>

00024248 <zsav_ctx_init>:
   24248:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2424c:	mov	r1, #40	; 0x28
   24250:	mov	r5, r0
   24254:	mov	r0, #1
   24258:	mov	r6, r2
   2425c:	mov	r7, r3
   24260:	bl	3d58 <calloc@plt>
   24264:	ldr	r8, [pc, #64]	; 242ac <zsav_ctx_init+0x64>
   24268:	mov	r9, #0
   2426c:	mov	r4, r0
   24270:	mov	r0, r5
   24274:	bl	410c <malloc@plt>
   24278:	mov	r3, #10
   2427c:	mov	r1, #4
   24280:	str	r3, [r4, #12]
   24284:	str	r0, [r4]
   24288:	mov	r0, r3
   2428c:	bl	3d58 <calloc@plt>
   24290:	mvn	r3, #0
   24294:	strd	r6, [r4, #24]
   24298:	strd	r8, [r4, #16]
   2429c:	str	r3, [r4, #32]
   242a0:	str	r0, [r4, #4]
   242a4:	mov	r0, r4
   242a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   242ac:	.word	0x003ff000

000242b0 <zsav_ctx_free>:
   242b0:	ldr	r3, [r0, #8]
   242b4:	push	{r4, r5, r6, lr}
   242b8:	cmp	r3, #0
   242bc:	mov	r6, r0
   242c0:	movgt	r4, #0
   242c4:	ble	242f8 <zsav_ctx_free+0x48>
   242c8:	ldr	r3, [r6, #4]
   242cc:	ldr	r5, [r3, r4, lsl #2]
   242d0:	add	r4, r4, #1
   242d4:	add	r0, r5, #8
   242d8:	bl	4310 <deflateEnd@plt>
   242dc:	ldr	r0, [r5, #64]	; 0x40
   242e0:	bl	3ec0 <free@plt>
   242e4:	mov	r0, r5
   242e8:	bl	3ec0 <free@plt>
   242ec:	ldr	r3, [r6, #8]
   242f0:	cmp	r3, r4
   242f4:	bgt	242c8 <zsav_ctx_free+0x18>
   242f8:	ldr	r0, [r6, #4]
   242fc:	bl	3ec0 <free@plt>
   24300:	ldr	r0, [r6]
   24304:	bl	3ec0 <free@plt>
   24308:	mov	r0, r6
   2430c:	pop	{r4, r5, r6, lr}
   24310:	b	3ec0 <free@plt>

00024314 <zsav_add_block>:
   24314:	push	{r4, r5, r6, r7, r8, lr}
   24318:	mov	r4, r0
   2431c:	ldr	r6, [r0, #8]
   24320:	ldr	r3, [r0, #12]
   24324:	cmp	r6, r3
   24328:	beq	24388 <zsav_add_block+0x74>
   2432c:	ldr	r8, [r0, #4]
   24330:	mov	r1, #72	; 0x48
   24334:	mov	r0, #1
   24338:	bl	3d58 <calloc@plt>
   2433c:	ldr	r2, [pc, #104]	; 243ac <zsav_add_block+0x98>
   24340:	add	r3, r6, #1
   24344:	str	r3, [r4, #8]
   24348:	add	r2, pc, r2
   2434c:	mov	r3, #56	; 0x38
   24350:	ldr	r1, [r4, #32]
   24354:	mov	r5, r0
   24358:	add	r7, r0, #8
   2435c:	mov	r0, r7
   24360:	str	r5, [r8, r6, lsl #2]
   24364:	bl	4124 <deflateInit_@plt>
   24368:	ldr	r1, [r4, #16]
   2436c:	mov	r0, r7
   24370:	bl	3e84 <deflateBound@plt>
   24374:	str	r0, [r5, #68]	; 0x44
   24378:	bl	410c <malloc@plt>
   2437c:	str	r0, [r5, #64]	; 0x40
   24380:	mov	r0, r5
   24384:	pop	{r4, r5, r6, r7, r8, pc}
   24388:	lsl	r3, r6, #1
   2438c:	ldr	r0, [r0, #4]
   24390:	lsl	r1, r6, #3
   24394:	str	r3, [r4, #12]
   24398:	bl	3ff8 <realloc@plt>
   2439c:	ldr	r6, [r4, #8]
   243a0:	mov	r8, r0
   243a4:	str	r0, [r4, #4]
   243a8:	b	24330 <zsav_add_block+0x1c>
   243ac:	.word	0x00010968

000243b0 <zsav_current_block>:
   243b0:	ldr	r3, [r0, #8]
   243b4:	cmp	r3, #0
   243b8:	subne	r3, r3, #-1073741823	; 0xc0000001
   243bc:	ldrne	r2, [r0, #4]
   243c0:	ldrne	r0, [r2, r3, lsl #2]
   243c4:	moveq	r0, r3
   243c8:	bx	lr

000243cc <zsav_compress_row>:
   243cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   243d0:	sub	sp, sp, #12
   243d4:	mov	r7, r0
   243d8:	mov	r0, r3
   243dc:	mov	r8, r3
   243e0:	mov	r6, r1
   243e4:	str	r2, [sp, #4]
   243e8:	bl	40a0 <zsav_current_block@plt>
   243ec:	subs	r4, r0, #0
   243f0:	beq	2452c <zsav_compress_row+0x160>
   243f4:	ldrd	sl, [r8, #16]
   243f8:	ldm	r4, {ip, lr}
   243fc:	mov	r3, #0
   24400:	ldr	r2, [r4, #64]	; 0x40
   24404:	subs	r0, sl, ip
   24408:	sbc	r1, fp, ip, asr #31
   2440c:	cmp	r0, r6
   24410:	sbcs	r3, r1, r3
   24414:	ldr	r3, [r4, #68]	; 0x44
   24418:	add	r2, r2, lr
   2441c:	sub	r3, r3, lr
   24420:	str	r7, [r4, #8]
   24424:	str	r6, [r4, #12]
   24428:	str	r2, [r4, #20]
   2442c:	str	r3, [r4, #24]
   24430:	bge	244dc <zsav_compress_row+0x110>
   24434:	mov	lr, #0
   24438:	b	244a4 <zsav_compress_row+0xd8>
   2443c:	ldr	ip, [r4, #24]
   24440:	ldr	r3, [r8, #16]
   24444:	ldr	r1, [r4, #12]
   24448:	ldr	r2, [r4, #68]	; 0x44
   2444c:	sub	r3, r3, r1
   24450:	sub	r2, r2, ip
   24454:	str	r3, [r4]
   24458:	str	r2, [r4, #4]
   2445c:	bl	4118 <zsav_add_block@plt>
   24460:	ldrd	sl, [r8, #16]
   24464:	mov	r3, #0
   24468:	mov	lr, r9
   2446c:	add	r9, r7, r9
   24470:	ldr	ip, [r0]
   24474:	mov	r4, r0
   24478:	subs	r0, sl, ip
   2447c:	sbc	r1, fp, ip, asr #31
   24480:	cmp	r0, r5
   24484:	sbcs	r3, r1, r3
   24488:	ldr	r3, [r4, #64]	; 0x40
   2448c:	str	r5, [r4, #12]
   24490:	str	r3, [r4, #20]
   24494:	ldr	r3, [r4, #68]	; 0x44
   24498:	str	r9, [r4, #8]
   2449c:	str	r3, [r4, #24]
   244a0:	bge	244e0 <zsav_compress_row+0x114>
   244a4:	sub	r9, sl, ip
   244a8:	str	r9, [r4, #12]
   244ac:	mov	r1, #4
   244b0:	add	r0, r4, #8
   244b4:	add	r9, r9, lr
   244b8:	bl	4040 <deflate@plt>
   244bc:	sub	r5, r6, r9
   244c0:	mov	r3, r0
   244c4:	cmp	r3, #1
   244c8:	mov	r0, r8
   244cc:	beq	2443c <zsav_compress_row+0x70>
   244d0:	mov	r0, r3
   244d4:	add	sp, sp, #12
   244d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   244dc:	mov	r5, r6
   244e0:	ldr	r3, [sp, #4]
   244e4:	add	r0, r4, #8
   244e8:	cmp	r3, #0
   244ec:	moveq	r1, r3
   244f0:	movne	r1, #4
   244f4:	bl	4040 <deflate@plt>
   244f8:	ldr	r2, [r4]
   244fc:	ldr	ip, [r4, #12]
   24500:	ldr	r1, [r4, #68]	; 0x44
   24504:	sub	r2, r2, ip
   24508:	add	r5, r2, r5
   2450c:	str	r5, [r4]
   24510:	mov	r3, r0
   24514:	ldr	r0, [r4, #24]
   24518:	sub	r2, r1, r0
   2451c:	str	r2, [r4, #4]
   24520:	mov	r0, r3
   24524:	add	sp, sp, #12
   24528:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2452c:	mov	r0, r8
   24530:	bl	4118 <zsav_add_block@plt>
   24534:	mov	r4, r0
   24538:	b	243f4 <zsav_compress_row+0x28>

0002453c <zsav_read_compressed_data>:
   2453c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24540:	sub	sp, sp, #148	; 0x94
   24544:	mov	r4, r0
   24548:	mov	r3, #0
   2454c:	add	r6, sp, #88	; 0x58
   24550:	mov	r2, #56	; 0x38
   24554:	mov	sl, r1
   24558:	mov	r0, r6
   2455c:	mov	r1, r3
   24560:	ldr	r5, [r4, #36]	; 0x24
   24564:	str	r3, [sp, #36]	; 0x24
   24568:	ldr	r7, [r4, #344]	; 0x158
   2456c:	bl	42a4 <memset@plt>
   24570:	add	r3, r4, #400	; 0x190
   24574:	ldrb	r1, [r4, #436]	; 0x1b4
   24578:	ldrd	r2, [r3, #-8]
   2457c:	add	r9, r4, #416	; 0x1a0
   24580:	ldrd	r8, [r9]
   24584:	and	r1, r1, #1
   24588:	strd	r2, [sp, #104]	; 0x68
   2458c:	str	r1, [sp, #132]	; 0x84
   24590:	ldr	r3, [r5, #12]
   24594:	ldr	r2, [r5, #20]
   24598:	mov	r1, #24
   2459c:	strd	r8, [sp, #112]	; 0x70
   245a0:	add	r0, sp, #40	; 0x28
   245a4:	blx	r3
   245a8:	cmp	r0, #23
   245ac:	bhi	245c0 <zsav_read_compressed_data+0x84>
   245b0:	mov	r7, #2
   245b4:	mov	r0, r7
   245b8:	add	sp, sp, #148	; 0x94
   245bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   245c0:	ldrb	r3, [r4, #436]	; 0x1b4
   245c4:	tst	r3, #1
   245c8:	bne	24610 <zsav_read_compressed_data+0xd4>
   245cc:	ldrd	r8, [sp, #40]	; 0x28
   245d0:	ldrd	r0, [sp, #56]	; 0x38
   245d4:	strd	r0, [sp, #56]	; 0x38
   245d8:	ldr	r3, [r5, #8]
   245dc:	mov	r1, #1
   245e0:	ldr	r2, [r5, #20]
   245e4:	mov	r0, #0
   245e8:	blx	r3
   245ec:	mov	r1, #0
   245f0:	cmp	r9, r1
   245f4:	sub	r0, r0, #24
   245f8:	cmpeq	r8, r0
   245fc:	beq	2465c <zsav_read_compressed_data+0x120>
   24600:	mov	r7, #5
   24604:	mov	r0, r7
   24608:	add	sp, sp, #148	; 0x94
   2460c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24610:	ldrd	r0, [sp, #40]	; 0x28
   24614:	bl	3d7c <byteswap8@plt>
   24618:	ldrb	r3, [r4, #436]	; 0x1b4
   2461c:	tst	r3, #1
   24620:	str	r0, [sp, #40]	; 0x28
   24624:	str	r1, [sp, #44]	; 0x2c
   24628:	moveq	r8, r0
   2462c:	moveq	r9, r1
   24630:	beq	245d0 <zsav_read_compressed_data+0x94>
   24634:	ldrd	r0, [sp, #48]	; 0x30
   24638:	bl	3d7c <byteswap8@plt>
   2463c:	ldrb	r3, [r4, #436]	; 0x1b4
   24640:	tst	r3, #1
   24644:	strd	r0, [sp, #48]	; 0x30
   24648:	beq	245cc <zsav_read_compressed_data+0x90>
   2464c:	ldrd	r0, [sp, #56]	; 0x38
   24650:	bl	3d7c <byteswap8@plt>
   24654:	ldrd	r8, [sp, #40]	; 0x28
   24658:	b	245d4 <zsav_read_compressed_data+0x98>
   2465c:	ldr	r3, [r5, #8]
   24660:	ldr	r2, [r5, #20]
   24664:	mov	r1, #0
   24668:	ldr	r0, [sp, #48]	; 0x30
   2466c:	ldrd	r8, [sp, #56]	; 0x38
   24670:	blx	r3
   24674:	cmn	r0, #1
   24678:	moveq	r7, #15
   2467c:	beq	245b4 <zsav_read_compressed_data+0x78>
   24680:	ldr	r3, [r5, #12]
   24684:	ldr	r2, [r5, #20]
   24688:	mov	r1, #24
   2468c:	add	r0, sp, #64	; 0x40
   24690:	blx	r3
   24694:	cmp	r0, #23
   24698:	bls	245b0 <zsav_read_compressed_data+0x74>
   2469c:	ldrb	r3, [r4, #436]	; 0x1b4
   246a0:	tst	r3, #1
   246a4:	bne	2474c <zsav_read_compressed_data+0x210>
   246a8:	ldr	r3, [sp, #84]	; 0x54
   246ac:	str	r3, [sp, #4]
   246b0:	subs	r0, r8, #24
   246b4:	sbc	r1, r9, #0
   246b8:	mov	r3, #0
   246bc:	mov	r2, #24
   246c0:	bl	25688 <__aeabi_uldivmod>
   246c4:	ldr	r3, [sp, #4]
   246c8:	str	r3, [sp, #84]	; 0x54
   246cc:	cmp	r3, r0
   246d0:	bne	24600 <zsav_read_compressed_data+0xc4>
   246d4:	cmp	r3, #0
   246d8:	beq	247a4 <zsav_read_compressed_data+0x268>
   246dc:	mov	r8, #24
   246e0:	mul	r8, r8, r3
   246e4:	mov	r0, r8
   246e8:	bl	422c <readstat_malloc@plt>
   246ec:	subs	r9, r0, #0
   246f0:	beq	24a34 <zsav_read_compressed_data+0x4f8>
   246f4:	mov	r1, r8
   246f8:	ldr	r3, [r5, #12]
   246fc:	ldr	r2, [r5, #20]
   24700:	blx	r3
   24704:	cmp	r8, r0
   24708:	movhi	r8, #0
   2470c:	movhi	fp, r8
   24710:	movhi	r7, #2
   24714:	bls	24970 <zsav_read_compressed_data+0x434>
   24718:	mov	r0, r9
   2471c:	bl	3ec0 <free@plt>
   24720:	cmp	fp, #0
   24724:	beq	24730 <zsav_read_compressed_data+0x1f4>
   24728:	mov	r0, fp
   2472c:	bl	3ec0 <free@plt>
   24730:	cmp	r8, #0
   24734:	beq	245b4 <zsav_read_compressed_data+0x78>
   24738:	mov	r0, r8
   2473c:	bl	3ec0 <free@plt>
   24740:	mov	r0, r7
   24744:	add	sp, sp, #148	; 0x94
   24748:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2474c:	ldrd	r0, [sp, #64]	; 0x40
   24750:	bl	3d7c <byteswap8@plt>
   24754:	ldrb	r3, [r4, #436]	; 0x1b4
   24758:	tst	r3, #1
   2475c:	strd	r0, [sp, #64]	; 0x40
   24760:	beq	246a8 <zsav_read_compressed_data+0x16c>
   24764:	ldrd	r0, [sp, #72]	; 0x48
   24768:	bl	3d7c <byteswap8@plt>
   2476c:	ldrb	r3, [r4, #436]	; 0x1b4
   24770:	tst	r3, #1
   24774:	strd	r0, [sp, #72]	; 0x48
   24778:	beq	246a8 <zsav_read_compressed_data+0x16c>
   2477c:	ldr	r0, [sp, #80]	; 0x50
   24780:	bl	3d94 <byteswap4@plt>
   24784:	ldrb	r3, [r4, #436]	; 0x1b4
   24788:	tst	r3, #1
   2478c:	str	r0, [sp, #80]	; 0x50
   24790:	beq	246a8 <zsav_read_compressed_data+0x16c>
   24794:	ldr	r0, [sp, #84]	; 0x54
   24798:	bl	3d94 <byteswap4@plt>
   2479c:	str	r0, [sp, #4]
   247a0:	b	246b0 <zsav_read_compressed_data+0x174>
   247a4:	ldr	r9, [sp, #4]
   247a8:	ldr	r3, [r5, #12]
   247ac:	ldr	r2, [r5, #20]
   247b0:	mov	r1, r9
   247b4:	mov	r0, r9
   247b8:	blx	r3
   247bc:	lsls	r3, r7, #3
   247c0:	str	r3, [sp, #20]
   247c4:	streq	r3, [sp, #8]
   247c8:	bne	24a6c <zsav_read_compressed_data+0x530>
   247cc:	mov	r3, #0
   247d0:	mov	r7, r6
   247d4:	mov	r6, r4
   247d8:	mov	r4, r9
   247dc:	str	r3, [sp, #16]
   247e0:	mov	r8, r3
   247e4:	mov	fp, r3
   247e8:	str	r3, [sp, #12]
   247ec:	add	r3, sp, #36	; 0x24
   247f0:	str	r3, [sp, #24]
   247f4:	str	r9, [sp]
   247f8:	ldr	r9, [sp, #16]
   247fc:	ldr	r2, [sp, #4]
   24800:	cmp	r9, r2
   24804:	beq	24a60 <zsav_read_compressed_data+0x524>
   24808:	ldr	r3, [r5, #8]
   2480c:	ldr	r2, [r5, #20]
   24810:	mov	r1, #0
   24814:	ldr	r0, [r4, #8]
   24818:	blx	r3
   2481c:	cmn	r0, #1
   24820:	beq	24aa8 <zsav_read_compressed_data+0x56c>
   24824:	mov	r0, fp
   24828:	ldr	r1, [r4, #20]
   2482c:	bl	42e0 <readstat_realloc@plt>
   24830:	subs	fp, r0, #0
   24834:	beq	24a9c <zsav_read_compressed_data+0x560>
   24838:	ldr	r3, [r5, #12]
   2483c:	ldr	r2, [r5, #20]
   24840:	ldr	r1, [r4, #20]
   24844:	blx	r3
   24848:	ldr	r3, [r4, #20]
   2484c:	cmp	r0, r3
   24850:	bne	24a90 <zsav_read_compressed_data+0x554>
   24854:	ldr	r3, [r4, #16]
   24858:	mov	r0, r8
   2485c:	mov	r1, r3
   24860:	str	r3, [sp, #36]	; 0x24
   24864:	bl	42e0 <readstat_realloc@plt>
   24868:	subs	r8, r0, #0
   2486c:	beq	24a9c <zsav_read_compressed_data+0x560>
   24870:	ldr	r3, [r4, #20]
   24874:	mov	r2, fp
   24878:	ldr	r1, [sp, #24]
   2487c:	bl	3f98 <uncompress@plt>
   24880:	cmp	r0, #0
   24884:	bne	24a84 <zsav_read_compressed_data+0x548>
   24888:	ldr	r3, [r4, #16]
   2488c:	ldr	r2, [sp, #36]	; 0x24
   24890:	cmp	r3, r2
   24894:	bne	24a84 <zsav_read_compressed_data+0x548>
   24898:	add	r3, r9, #1
   2489c:	mov	r1, #1
   248a0:	str	r3, [sp, #16]
   248a4:	mov	r3, #0
   248a8:	str	r1, [sp, #136]	; 0x88
   248ac:	str	r5, [sp, #28]
   248b0:	mov	r9, r4
   248b4:	ldr	r1, [sp, #12]
   248b8:	ldr	r5, [sp, #20]
   248bc:	mov	r4, r3
   248c0:	b	248f0 <zsav_read_compressed_data+0x3b4>
   248c4:	cmp	r0, #3
   248c8:	beq	24a60 <zsav_read_compressed_data+0x524>
   248cc:	ldr	r2, [r6, #356]	; 0x164
   248d0:	cmp	r2, #0
   248d4:	ble	248e4 <zsav_read_compressed_data+0x3a8>
   248d8:	ldr	ip, [r6, #364]	; 0x16c
   248dc:	cmp	r2, ip
   248e0:	beq	24a60 <zsav_read_compressed_data+0x524>
   248e4:	cmp	r0, #0
   248e8:	beq	24960 <zsav_read_compressed_data+0x424>
   248ec:	ldr	r2, [sp, #36]	; 0x24
   248f0:	ldr	r3, [sp, #8]
   248f4:	sub	r2, r2, r4
   248f8:	add	ip, r3, r1
   248fc:	add	r4, r8, r4
   24900:	sub	r1, r5, r1
   24904:	mov	r0, r7
   24908:	str	r2, [sp, #92]	; 0x5c
   2490c:	str	r4, [sp, #88]	; 0x58
   24910:	str	r1, [sp, #100]	; 0x64
   24914:	str	ip, [sp, #96]	; 0x60
   24918:	bl	4214 <sav_decompress_row@plt>
   2491c:	ldr	r0, [sp, #136]	; 0x88
   24920:	ldr	r1, [sp, #100]	; 0x64
   24924:	ldr	r2, [sp, #36]	; 0x24
   24928:	ldr	r4, [sp, #92]	; 0x5c
   2492c:	cmp	r0, #2
   24930:	sub	r1, r5, r1
   24934:	sub	r4, r2, r4
   24938:	bne	248c4 <zsav_read_compressed_data+0x388>
   2493c:	mov	r1, r5
   24940:	mov	r2, r6
   24944:	ldr	r0, [sp, #8]
   24948:	blx	sl
   2494c:	mov	r1, #0
   24950:	cmp	r0, #0
   24954:	bne	24a3c <zsav_read_compressed_data+0x500>
   24958:	ldr	r0, [sp, #136]	; 0x88
   2495c:	b	248c4 <zsav_read_compressed_data+0x388>
   24960:	str	r1, [sp, #12]
   24964:	ldr	r5, [sp, #28]
   24968:	add	r4, r9, #24
   2496c:	b	247f8 <zsav_read_compressed_data+0x2bc>
   24970:	ldr	r3, [sp, #4]
   24974:	cmp	r3, #0
   24978:	movgt	fp, r9
   2497c:	ldrbgt	r3, [r4, #436]	; 0x1b4
   24980:	movgt	r8, #0
   24984:	ble	247bc <zsav_read_compressed_data+0x280>
   24988:	tst	r3, #1
   2498c:	ldrd	r0, [fp]
   24990:	bne	249e4 <zsav_read_compressed_data+0x4a8>
   24994:	strd	r0, [fp]
   24998:	ldrb	r3, [r4, #436]	; 0x1b4
   2499c:	ldrd	r0, [fp, #8]
   249a0:	tst	r3, #1
   249a4:	bne	24a1c <zsav_read_compressed_data+0x4e0>
   249a8:	strd	r0, [fp, #8]
   249ac:	ldrb	r3, [r4, #436]	; 0x1b4
   249b0:	ldr	r0, [fp, #16]
   249b4:	tst	r3, #1
   249b8:	bne	24a14 <zsav_read_compressed_data+0x4d8>
   249bc:	str	r0, [fp, #16]
   249c0:	ldrb	r3, [r4, #436]	; 0x1b4
   249c4:	tst	r3, #1
   249c8:	bne	249ec <zsav_read_compressed_data+0x4b0>
   249cc:	ldr	r2, [sp, #4]
   249d0:	add	r8, r8, #1
   249d4:	cmp	r2, r8
   249d8:	add	fp, fp, #24
   249dc:	bne	24988 <zsav_read_compressed_data+0x44c>
   249e0:	b	247bc <zsav_read_compressed_data+0x280>
   249e4:	bl	3d7c <byteswap8@plt>
   249e8:	b	24994 <zsav_read_compressed_data+0x458>
   249ec:	ldr	r0, [fp, #20]
   249f0:	bl	3d94 <byteswap4@plt>
   249f4:	ldr	r3, [sp, #4]
   249f8:	add	r8, r8, #1
   249fc:	cmp	r3, r8
   24a00:	add	fp, fp, #24
   24a04:	str	r0, [fp, #-4]
   24a08:	beq	247bc <zsav_read_compressed_data+0x280>
   24a0c:	ldrb	r3, [r4, #436]	; 0x1b4
   24a10:	b	24988 <zsav_read_compressed_data+0x44c>
   24a14:	bl	3d94 <byteswap4@plt>
   24a18:	b	249bc <zsav_read_compressed_data+0x480>
   24a1c:	bl	3d7c <byteswap8@plt>
   24a20:	b	249a8 <zsav_read_compressed_data+0x46c>
   24a24:	cmp	r9, #0
   24a28:	movne	r8, fp
   24a2c:	movne	r7, #3
   24a30:	bne	24718 <zsav_read_compressed_data+0x1dc>
   24a34:	mov	r7, #3
   24a38:	b	245b4 <zsav_read_compressed_data+0x78>
   24a3c:	ldr	r9, [sp]
   24a40:	mov	r7, r0
   24a44:	ldr	r0, [sp, #8]
   24a48:	cmp	r0, #0
   24a4c:	beq	24a54 <zsav_read_compressed_data+0x518>
   24a50:	bl	3ec0 <free@plt>
   24a54:	cmp	r9, #0
   24a58:	bne	24718 <zsav_read_compressed_data+0x1dc>
   24a5c:	b	24720 <zsav_read_compressed_data+0x1e4>
   24a60:	ldr	r9, [sp]
   24a64:	mov	r7, #0
   24a68:	b	24a44 <zsav_read_compressed_data+0x508>
   24a6c:	ldr	r0, [sp, #20]
   24a70:	bl	422c <readstat_malloc@plt>
   24a74:	subs	fp, r0, #0
   24a78:	beq	24a24 <zsav_read_compressed_data+0x4e8>
   24a7c:	str	fp, [sp, #8]
   24a80:	b	247cc <zsav_read_compressed_data+0x290>
   24a84:	ldr	r9, [sp]
   24a88:	mov	r7, #5
   24a8c:	b	24a44 <zsav_read_compressed_data+0x508>
   24a90:	ldr	r9, [sp]
   24a94:	mov	r7, #2
   24a98:	b	24a44 <zsav_read_compressed_data+0x508>
   24a9c:	ldr	r9, [sp]
   24aa0:	mov	r7, #3
   24aa4:	b	24a44 <zsav_read_compressed_data+0x508>
   24aa8:	ldr	r9, [sp]
   24aac:	mov	r7, #15
   24ab0:	b	24a44 <zsav_read_compressed_data+0x508>

00024ab4 <zsav_write_compressed_row>:
   24ab4:	push	{r4, r5, r6, lr}
   24ab8:	mov	r3, r0
   24abc:	ldr	r5, [r0, #300]	; 0x12c
   24ac0:	mov	r4, r0
   24ac4:	ldr	r0, [r5]
   24ac8:	bl	4460 <sav_compress_row@plt>
   24acc:	ldr	r3, [r4, #84]	; 0x54
   24ad0:	ldr	r2, [r4, #80]	; 0x50
   24ad4:	add	r3, r3, #1
   24ad8:	sub	r2, r3, r2
   24adc:	mov	r3, r5
   24ae0:	clz	r2, r2
   24ae4:	lsr	r2, r2, #5
   24ae8:	mov	r1, r0
   24aec:	ldr	r0, [r5]
   24af0:	bl	44b4 <zsav_compress_row@plt>
   24af4:	cmp	r0, #1
   24af8:	movhi	r0, #13
   24afc:	movls	r0, #0
   24b00:	pop	{r4, r5, r6, pc}

00024b04 <zsav_end_data>:
   24b04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24b08:	mov	r5, r0
   24b0c:	ldr	r4, [r0, #300]	; 0x12c
   24b10:	sub	sp, sp, #60	; 0x3c
   24b14:	ldr	ip, [r4, #8]
   24b18:	ldrd	r0, [r4, #24]
   24b1c:	add	r2, ip, #1
   24b20:	add	r2, r2, r2, lsl #1
   24b24:	strd	r0, [sp, #32]
   24b28:	lsl	r2, r2, #3
   24b2c:	adds	r0, r0, #24
   24b30:	asr	r3, r2, #31
   24b34:	adc	r1, r1, #0
   24b38:	cmp	ip, #0
   24b3c:	strd	r2, [sp, #48]	; 0x30
   24b40:	ldrgt	r3, [r4, #4]
   24b44:	strd	r0, [sp, #40]	; 0x28
   24b48:	addgt	ip, r3, ip, lsl #2
   24b4c:	ble	24b6c <zsav_end_data+0x68>
   24b50:	ldr	r2, [r3], #4
   24b54:	ldr	r2, [r2, #4]
   24b58:	adds	r0, r0, r2
   24b5c:	adc	r1, r1, r2, asr #31
   24b60:	cmp	ip, r3
   24b64:	bne	24b50 <zsav_end_data+0x4c>
   24b68:	strd	r0, [sp, #40]	; 0x28
   24b6c:	add	r9, sp, #32
   24b70:	mov	r1, r9
   24b74:	mov	r2, #8
   24b78:	mov	r0, r5
   24b7c:	bl	4454 <readstat_write_bytes@plt>
   24b80:	subs	fp, r0, #0
   24b84:	beq	24b94 <zsav_end_data+0x90>
   24b88:	mov	r0, fp
   24b8c:	add	sp, sp, #60	; 0x3c
   24b90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24b94:	add	r6, sp, #40	; 0x28
   24b98:	mov	r1, r6
   24b9c:	mov	r2, #8
   24ba0:	mov	r0, r5
   24ba4:	bl	4454 <readstat_write_bytes@plt>
   24ba8:	subs	fp, r0, #0
   24bac:	bne	24b88 <zsav_end_data+0x84>
   24bb0:	add	r7, sp, #48	; 0x30
   24bb4:	mov	r1, r7
   24bb8:	mov	r2, #8
   24bbc:	mov	r0, r5
   24bc0:	bl	4454 <readstat_write_bytes@plt>
   24bc4:	subs	fp, r0, #0
   24bc8:	bne	24b88 <zsav_end_data+0x84>
   24bcc:	ldr	r2, [r4, #8]
   24bd0:	cmp	r2, #0
   24bd4:	ble	24c0c <zsav_end_data+0x108>
   24bd8:	mov	r8, fp
   24bdc:	ldr	r3, [r4, #4]
   24be0:	mov	r0, r5
   24be4:	ldr	r3, [r3, r8, lsl #2]
   24be8:	add	r8, r8, #1
   24bec:	ldr	r2, [r3, #4]
   24bf0:	ldr	r1, [r3, #64]	; 0x40
   24bf4:	bl	4454 <readstat_write_bytes@plt>
   24bf8:	cmp	r0, #0
   24bfc:	bne	24d84 <zsav_end_data+0x280>
   24c00:	ldr	r2, [r4, #8]
   24c04:	cmp	r8, r2
   24c08:	blt	24bdc <zsav_end_data+0xd8>
   24c0c:	mov	r0, #0
   24c10:	mov	r1, #0
   24c14:	mvn	fp, #0
   24c18:	strd	r0, [sp, #32]
   24c1c:	mvn	sl, #99	; 0x63
   24c20:	ldr	r3, [r4, #16]
   24c24:	str	r2, [sp, #12]
   24c28:	add	r1, sp, #24
   24c2c:	mov	r2, #8
   24c30:	mov	r0, r5
   24c34:	strd	sl, [sp, #24]
   24c38:	str	r3, [sp, #8]
   24c3c:	bl	4454 <readstat_write_bytes@plt>
   24c40:	subs	fp, r0, #0
   24c44:	bne	24b88 <zsav_end_data+0x84>
   24c48:	mov	r1, r9
   24c4c:	mov	r2, #8
   24c50:	mov	r0, r5
   24c54:	bl	4454 <readstat_write_bytes@plt>
   24c58:	subs	fp, r0, #0
   24c5c:	bne	24b88 <zsav_end_data+0x84>
   24c60:	mov	r2, #4
   24c64:	add	r1, sp, #8
   24c68:	mov	r0, r5
   24c6c:	bl	4454 <readstat_write_bytes@plt>
   24c70:	subs	fp, r0, #0
   24c74:	bne	24b88 <zsav_end_data+0x84>
   24c78:	mov	r2, #4
   24c7c:	add	r1, sp, #12
   24c80:	mov	r0, r5
   24c84:	bl	4454 <readstat_write_bytes@plt>
   24c88:	subs	fp, r0, #0
   24c8c:	bne	24b88 <zsav_end_data+0x84>
   24c90:	ldrd	r0, [r4, #24]
   24c94:	ldr	r2, [r4, #8]
   24c98:	strd	r0, [sp, #40]	; 0x28
   24c9c:	adds	r0, r0, #24
   24ca0:	adc	r1, r1, #0
   24ca4:	cmp	r2, #0
   24ca8:	strd	r0, [sp, #48]	; 0x30
   24cac:	ble	24b88 <zsav_end_data+0x84>
   24cb0:	add	r3, sp, #16
   24cb4:	str	r3, [sp]
   24cb8:	add	r3, sp, #20
   24cbc:	mov	r8, fp
   24cc0:	mov	r9, #8
   24cc4:	mov	sl, #4
   24cc8:	str	r3, [sp, #4]
   24ccc:	b	24d40 <zsav_end_data+0x23c>
   24cd0:	bl	4454 <readstat_write_bytes@plt>
   24cd4:	mov	r2, sl
   24cd8:	ldr	r1, [sp]
   24cdc:	subs	ip, r0, #0
   24ce0:	mov	r0, r5
   24ce4:	bne	24d7c <zsav_end_data+0x278>
   24ce8:	bl	4454 <readstat_write_bytes@plt>
   24cec:	mov	r2, sl
   24cf0:	ldr	r1, [sp, #4]
   24cf4:	subs	ip, r0, #0
   24cf8:	mov	r0, r5
   24cfc:	bne	24d7c <zsav_end_data+0x278>
   24d00:	bl	4454 <readstat_write_bytes@plt>
   24d04:	cmp	r0, #0
   24d08:	bne	24d84 <zsav_end_data+0x280>
   24d0c:	ldrd	r2, [sp, #40]	; 0x28
   24d10:	ldr	r1, [sp, #16]
   24d14:	ldr	r0, [r4, #8]
   24d18:	adds	r2, r2, r1
   24d1c:	adc	r3, r3, r1, asr #31
   24d20:	ldr	r1, [sp, #20]
   24d24:	strd	r2, [sp, #40]	; 0x28
   24d28:	ldrd	r2, [sp, #48]	; 0x30
   24d2c:	adds	r2, r2, r1
   24d30:	adc	r3, r3, r1, asr #31
   24d34:	cmp	r8, r0
   24d38:	strd	r2, [sp, #48]	; 0x30
   24d3c:	bge	24b88 <zsav_end_data+0x84>
   24d40:	ldr	r3, [r4, #4]
   24d44:	mov	r2, r9
   24d48:	mov	r1, r6
   24d4c:	ldr	r3, [r3, r8, lsl #2]
   24d50:	add	r8, r8, #1
   24d54:	ldm	r3, {r0, r3}
   24d58:	str	r0, [sp, #16]
   24d5c:	mov	r0, r5
   24d60:	str	r3, [sp, #20]
   24d64:	bl	4454 <readstat_write_bytes@plt>
   24d68:	mov	r2, r9
   24d6c:	mov	r1, r7
   24d70:	subs	ip, r0, #0
   24d74:	mov	r0, r5
   24d78:	beq	24cd0 <zsav_end_data+0x1cc>
   24d7c:	mov	fp, ip
   24d80:	b	24b88 <zsav_end_data+0x84>
   24d84:	mov	fp, r0
   24d88:	mov	r0, fp
   24d8c:	add	sp, sp, #60	; 0x3c
   24d90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00024d94 <__udivsi3>:
   24d94:	subs	r2, r1, #1
   24d98:	bxeq	lr
   24d9c:	bcc	24f74 <__udivsi3+0x1e0>
   24da0:	cmp	r0, r1
   24da4:	bls	24f58 <__udivsi3+0x1c4>
   24da8:	tst	r1, r2
   24dac:	beq	24f64 <__udivsi3+0x1d0>
   24db0:	clz	r3, r0
   24db4:	clz	r2, r1
   24db8:	sub	r3, r2, r3
   24dbc:	rsbs	r3, r3, #31
   24dc0:	addne	r3, r3, r3, lsl #1
   24dc4:	mov	r2, #0
   24dc8:	addne	pc, pc, r3, lsl #2
   24dcc:	nop			; (mov r0, r0)
   24dd0:	cmp	r0, r1, lsl #31
   24dd4:	adc	r2, r2, r2
   24dd8:	subcs	r0, r0, r1, lsl #31
   24ddc:	cmp	r0, r1, lsl #30
   24de0:	adc	r2, r2, r2
   24de4:	subcs	r0, r0, r1, lsl #30
   24de8:	cmp	r0, r1, lsl #29
   24dec:	adc	r2, r2, r2
   24df0:	subcs	r0, r0, r1, lsl #29
   24df4:	cmp	r0, r1, lsl #28
   24df8:	adc	r2, r2, r2
   24dfc:	subcs	r0, r0, r1, lsl #28
   24e00:	cmp	r0, r1, lsl #27
   24e04:	adc	r2, r2, r2
   24e08:	subcs	r0, r0, r1, lsl #27
   24e0c:	cmp	r0, r1, lsl #26
   24e10:	adc	r2, r2, r2
   24e14:	subcs	r0, r0, r1, lsl #26
   24e18:	cmp	r0, r1, lsl #25
   24e1c:	adc	r2, r2, r2
   24e20:	subcs	r0, r0, r1, lsl #25
   24e24:	cmp	r0, r1, lsl #24
   24e28:	adc	r2, r2, r2
   24e2c:	subcs	r0, r0, r1, lsl #24
   24e30:	cmp	r0, r1, lsl #23
   24e34:	adc	r2, r2, r2
   24e38:	subcs	r0, r0, r1, lsl #23
   24e3c:	cmp	r0, r1, lsl #22
   24e40:	adc	r2, r2, r2
   24e44:	subcs	r0, r0, r1, lsl #22
   24e48:	cmp	r0, r1, lsl #21
   24e4c:	adc	r2, r2, r2
   24e50:	subcs	r0, r0, r1, lsl #21
   24e54:	cmp	r0, r1, lsl #20
   24e58:	adc	r2, r2, r2
   24e5c:	subcs	r0, r0, r1, lsl #20
   24e60:	cmp	r0, r1, lsl #19
   24e64:	adc	r2, r2, r2
   24e68:	subcs	r0, r0, r1, lsl #19
   24e6c:	cmp	r0, r1, lsl #18
   24e70:	adc	r2, r2, r2
   24e74:	subcs	r0, r0, r1, lsl #18
   24e78:	cmp	r0, r1, lsl #17
   24e7c:	adc	r2, r2, r2
   24e80:	subcs	r0, r0, r1, lsl #17
   24e84:	cmp	r0, r1, lsl #16
   24e88:	adc	r2, r2, r2
   24e8c:	subcs	r0, r0, r1, lsl #16
   24e90:	cmp	r0, r1, lsl #15
   24e94:	adc	r2, r2, r2
   24e98:	subcs	r0, r0, r1, lsl #15
   24e9c:	cmp	r0, r1, lsl #14
   24ea0:	adc	r2, r2, r2
   24ea4:	subcs	r0, r0, r1, lsl #14
   24ea8:	cmp	r0, r1, lsl #13
   24eac:	adc	r2, r2, r2
   24eb0:	subcs	r0, r0, r1, lsl #13
   24eb4:	cmp	r0, r1, lsl #12
   24eb8:	adc	r2, r2, r2
   24ebc:	subcs	r0, r0, r1, lsl #12
   24ec0:	cmp	r0, r1, lsl #11
   24ec4:	adc	r2, r2, r2
   24ec8:	subcs	r0, r0, r1, lsl #11
   24ecc:	cmp	r0, r1, lsl #10
   24ed0:	adc	r2, r2, r2
   24ed4:	subcs	r0, r0, r1, lsl #10
   24ed8:	cmp	r0, r1, lsl #9
   24edc:	adc	r2, r2, r2
   24ee0:	subcs	r0, r0, r1, lsl #9
   24ee4:	cmp	r0, r1, lsl #8
   24ee8:	adc	r2, r2, r2
   24eec:	subcs	r0, r0, r1, lsl #8
   24ef0:	cmp	r0, r1, lsl #7
   24ef4:	adc	r2, r2, r2
   24ef8:	subcs	r0, r0, r1, lsl #7
   24efc:	cmp	r0, r1, lsl #6
   24f00:	adc	r2, r2, r2
   24f04:	subcs	r0, r0, r1, lsl #6
   24f08:	cmp	r0, r1, lsl #5
   24f0c:	adc	r2, r2, r2
   24f10:	subcs	r0, r0, r1, lsl #5
   24f14:	cmp	r0, r1, lsl #4
   24f18:	adc	r2, r2, r2
   24f1c:	subcs	r0, r0, r1, lsl #4
   24f20:	cmp	r0, r1, lsl #3
   24f24:	adc	r2, r2, r2
   24f28:	subcs	r0, r0, r1, lsl #3
   24f2c:	cmp	r0, r1, lsl #2
   24f30:	adc	r2, r2, r2
   24f34:	subcs	r0, r0, r1, lsl #2
   24f38:	cmp	r0, r1, lsl #1
   24f3c:	adc	r2, r2, r2
   24f40:	subcs	r0, r0, r1, lsl #1
   24f44:	cmp	r0, r1
   24f48:	adc	r2, r2, r2
   24f4c:	subcs	r0, r0, r1
   24f50:	mov	r0, r2
   24f54:	bx	lr
   24f58:	moveq	r0, #1
   24f5c:	movne	r0, #0
   24f60:	bx	lr
   24f64:	clz	r2, r1
   24f68:	rsb	r2, r2, #31
   24f6c:	lsr	r0, r0, r2
   24f70:	bx	lr
   24f74:	cmp	r0, #0
   24f78:	mvnne	r0, #0
   24f7c:	b	256c4 <__aeabi_idiv0>

00024f80 <__aeabi_uidivmod>:
   24f80:	cmp	r1, #0
   24f84:	beq	24f74 <__udivsi3+0x1e0>
   24f88:	push	{r0, r1, lr}
   24f8c:	bl	24d94 <__udivsi3>
   24f90:	pop	{r1, r2, lr}
   24f94:	mul	r3, r2, r0
   24f98:	sub	r1, r1, r3
   24f9c:	bx	lr

00024fa0 <__divsi3>:
   24fa0:	cmp	r1, #0
   24fa4:	beq	251b0 <.divsi3_skip_div0_test+0x208>

00024fa8 <.divsi3_skip_div0_test>:
   24fa8:	eor	ip, r0, r1
   24fac:	rsbmi	r1, r1, #0
   24fb0:	subs	r2, r1, #1
   24fb4:	beq	2517c <.divsi3_skip_div0_test+0x1d4>
   24fb8:	movs	r3, r0
   24fbc:	rsbmi	r3, r0, #0
   24fc0:	cmp	r3, r1
   24fc4:	bls	25188 <.divsi3_skip_div0_test+0x1e0>
   24fc8:	tst	r1, r2
   24fcc:	beq	25198 <.divsi3_skip_div0_test+0x1f0>
   24fd0:	clz	r2, r3
   24fd4:	clz	r0, r1
   24fd8:	sub	r2, r0, r2
   24fdc:	rsbs	r2, r2, #31
   24fe0:	addne	r2, r2, r2, lsl #1
   24fe4:	mov	r0, #0
   24fe8:	addne	pc, pc, r2, lsl #2
   24fec:	nop			; (mov r0, r0)
   24ff0:	cmp	r3, r1, lsl #31
   24ff4:	adc	r0, r0, r0
   24ff8:	subcs	r3, r3, r1, lsl #31
   24ffc:	cmp	r3, r1, lsl #30
   25000:	adc	r0, r0, r0
   25004:	subcs	r3, r3, r1, lsl #30
   25008:	cmp	r3, r1, lsl #29
   2500c:	adc	r0, r0, r0
   25010:	subcs	r3, r3, r1, lsl #29
   25014:	cmp	r3, r1, lsl #28
   25018:	adc	r0, r0, r0
   2501c:	subcs	r3, r3, r1, lsl #28
   25020:	cmp	r3, r1, lsl #27
   25024:	adc	r0, r0, r0
   25028:	subcs	r3, r3, r1, lsl #27
   2502c:	cmp	r3, r1, lsl #26
   25030:	adc	r0, r0, r0
   25034:	subcs	r3, r3, r1, lsl #26
   25038:	cmp	r3, r1, lsl #25
   2503c:	adc	r0, r0, r0
   25040:	subcs	r3, r3, r1, lsl #25
   25044:	cmp	r3, r1, lsl #24
   25048:	adc	r0, r0, r0
   2504c:	subcs	r3, r3, r1, lsl #24
   25050:	cmp	r3, r1, lsl #23
   25054:	adc	r0, r0, r0
   25058:	subcs	r3, r3, r1, lsl #23
   2505c:	cmp	r3, r1, lsl #22
   25060:	adc	r0, r0, r0
   25064:	subcs	r3, r3, r1, lsl #22
   25068:	cmp	r3, r1, lsl #21
   2506c:	adc	r0, r0, r0
   25070:	subcs	r3, r3, r1, lsl #21
   25074:	cmp	r3, r1, lsl #20
   25078:	adc	r0, r0, r0
   2507c:	subcs	r3, r3, r1, lsl #20
   25080:	cmp	r3, r1, lsl #19
   25084:	adc	r0, r0, r0
   25088:	subcs	r3, r3, r1, lsl #19
   2508c:	cmp	r3, r1, lsl #18
   25090:	adc	r0, r0, r0
   25094:	subcs	r3, r3, r1, lsl #18
   25098:	cmp	r3, r1, lsl #17
   2509c:	adc	r0, r0, r0
   250a0:	subcs	r3, r3, r1, lsl #17
   250a4:	cmp	r3, r1, lsl #16
   250a8:	adc	r0, r0, r0
   250ac:	subcs	r3, r3, r1, lsl #16
   250b0:	cmp	r3, r1, lsl #15
   250b4:	adc	r0, r0, r0
   250b8:	subcs	r3, r3, r1, lsl #15
   250bc:	cmp	r3, r1, lsl #14
   250c0:	adc	r0, r0, r0
   250c4:	subcs	r3, r3, r1, lsl #14
   250c8:	cmp	r3, r1, lsl #13
   250cc:	adc	r0, r0, r0
   250d0:	subcs	r3, r3, r1, lsl #13
   250d4:	cmp	r3, r1, lsl #12
   250d8:	adc	r0, r0, r0
   250dc:	subcs	r3, r3, r1, lsl #12
   250e0:	cmp	r3, r1, lsl #11
   250e4:	adc	r0, r0, r0
   250e8:	subcs	r3, r3, r1, lsl #11
   250ec:	cmp	r3, r1, lsl #10
   250f0:	adc	r0, r0, r0
   250f4:	subcs	r3, r3, r1, lsl #10
   250f8:	cmp	r3, r1, lsl #9
   250fc:	adc	r0, r0, r0
   25100:	subcs	r3, r3, r1, lsl #9
   25104:	cmp	r3, r1, lsl #8
   25108:	adc	r0, r0, r0
   2510c:	subcs	r3, r3, r1, lsl #8
   25110:	cmp	r3, r1, lsl #7
   25114:	adc	r0, r0, r0
   25118:	subcs	r3, r3, r1, lsl #7
   2511c:	cmp	r3, r1, lsl #6
   25120:	adc	r0, r0, r0
   25124:	subcs	r3, r3, r1, lsl #6
   25128:	cmp	r3, r1, lsl #5
   2512c:	adc	r0, r0, r0
   25130:	subcs	r3, r3, r1, lsl #5
   25134:	cmp	r3, r1, lsl #4
   25138:	adc	r0, r0, r0
   2513c:	subcs	r3, r3, r1, lsl #4
   25140:	cmp	r3, r1, lsl #3
   25144:	adc	r0, r0, r0
   25148:	subcs	r3, r3, r1, lsl #3
   2514c:	cmp	r3, r1, lsl #2
   25150:	adc	r0, r0, r0
   25154:	subcs	r3, r3, r1, lsl #2
   25158:	cmp	r3, r1, lsl #1
   2515c:	adc	r0, r0, r0
   25160:	subcs	r3, r3, r1, lsl #1
   25164:	cmp	r3, r1
   25168:	adc	r0, r0, r0
   2516c:	subcs	r3, r3, r1
   25170:	cmp	ip, #0
   25174:	rsbmi	r0, r0, #0
   25178:	bx	lr
   2517c:	teq	ip, r0
   25180:	rsbmi	r0, r0, #0
   25184:	bx	lr
   25188:	movcc	r0, #0
   2518c:	asreq	r0, ip, #31
   25190:	orreq	r0, r0, #1
   25194:	bx	lr
   25198:	clz	r2, r1
   2519c:	rsb	r2, r2, #31
   251a0:	cmp	ip, #0
   251a4:	lsr	r0, r3, r2
   251a8:	rsbmi	r0, r0, #0
   251ac:	bx	lr
   251b0:	cmp	r0, #0
   251b4:	mvngt	r0, #-2147483648	; 0x80000000
   251b8:	movlt	r0, #-2147483648	; 0x80000000
   251bc:	b	256c4 <__aeabi_idiv0>

000251c0 <__aeabi_idivmod>:
   251c0:	cmp	r1, #0
   251c4:	beq	251b0 <.divsi3_skip_div0_test+0x208>
   251c8:	push	{r0, r1, lr}
   251cc:	bl	24fa8 <.divsi3_skip_div0_test>
   251d0:	pop	{r1, r2, lr}
   251d4:	mul	r3, r2, r0
   251d8:	sub	r1, r1, r3
   251dc:	bx	lr

000251e0 <__aeabi_llsl>:
   251e0:	subs	r3, r2, #32
   251e4:	rsb	ip, r2, #32
   251e8:	lslmi	r1, r1, r2
   251ec:	lslpl	r1, r0, r3
   251f0:	orrmi	r1, r1, r0, lsr ip
   251f4:	lsl	r0, r0, r2
   251f8:	bx	lr

000251fc <__aeabi_drsub>:
   251fc:	eor	r1, r1, #-2147483648	; 0x80000000
   25200:	b	25208 <__adddf3>

00025204 <__aeabi_dsub>:
   25204:	eor	r3, r3, #-2147483648	; 0x80000000

00025208 <__adddf3>:
   25208:	push	{r4, r5, lr}
   2520c:	lsl	r4, r1, #1
   25210:	lsl	r5, r3, #1
   25214:	teq	r4, r5
   25218:	teqeq	r0, r2
   2521c:	orrsne	ip, r4, r0
   25220:	orrsne	ip, r5, r2
   25224:	mvnsne	ip, r4, asr #21
   25228:	mvnsne	ip, r5, asr #21
   2522c:	beq	25418 <__adddf3+0x210>
   25230:	lsr	r4, r4, #21
   25234:	rsbs	r5, r4, r5, lsr #21
   25238:	rsblt	r5, r5, #0
   2523c:	ble	2525c <__adddf3+0x54>
   25240:	add	r4, r4, r5
   25244:	eor	r2, r0, r2
   25248:	eor	r3, r1, r3
   2524c:	eor	r0, r2, r0
   25250:	eor	r1, r3, r1
   25254:	eor	r2, r0, r2
   25258:	eor	r3, r1, r3
   2525c:	cmp	r5, #54	; 0x36
   25260:	pophi	{r4, r5, pc}
   25264:	tst	r1, #-2147483648	; 0x80000000
   25268:	lsl	r1, r1, #12
   2526c:	mov	ip, #1048576	; 0x100000
   25270:	orr	r1, ip, r1, lsr #12
   25274:	beq	25280 <__adddf3+0x78>
   25278:	rsbs	r0, r0, #0
   2527c:	rsc	r1, r1, #0
   25280:	tst	r3, #-2147483648	; 0x80000000
   25284:	lsl	r3, r3, #12
   25288:	orr	r3, ip, r3, lsr #12
   2528c:	beq	25298 <__adddf3+0x90>
   25290:	rsbs	r2, r2, #0
   25294:	rsc	r3, r3, #0
   25298:	teq	r4, r5
   2529c:	beq	25400 <__adddf3+0x1f8>
   252a0:	sub	r4, r4, #1
   252a4:	rsbs	lr, r5, #32
   252a8:	blt	252c4 <__adddf3+0xbc>
   252ac:	lsl	ip, r2, lr
   252b0:	adds	r0, r0, r2, lsr r5
   252b4:	adc	r1, r1, #0
   252b8:	adds	r0, r0, r3, lsl lr
   252bc:	adcs	r1, r1, r3, asr r5
   252c0:	b	252e0 <__adddf3+0xd8>
   252c4:	sub	r5, r5, #32
   252c8:	add	lr, lr, #32
   252cc:	cmp	r2, #1
   252d0:	lsl	ip, r3, lr
   252d4:	orrcs	ip, ip, #2
   252d8:	adds	r0, r0, r3, asr r5
   252dc:	adcs	r1, r1, r3, asr #31
   252e0:	and	r5, r1, #-2147483648	; 0x80000000
   252e4:	bpl	252f4 <__adddf3+0xec>
   252e8:	rsbs	ip, ip, #0
   252ec:	rscs	r0, r0, #0
   252f0:	rsc	r1, r1, #0
   252f4:	cmp	r1, #1048576	; 0x100000
   252f8:	bcc	25338 <__adddf3+0x130>
   252fc:	cmp	r1, #2097152	; 0x200000
   25300:	bcc	25320 <__adddf3+0x118>
   25304:	lsrs	r1, r1, #1
   25308:	rrxs	r0, r0
   2530c:	rrx	ip, ip
   25310:	add	r4, r4, #1
   25314:	lsl	r2, r4, #21
   25318:	cmn	r2, #4194304	; 0x400000
   2531c:	bcs	25478 <__adddf3+0x270>
   25320:	cmp	ip, #-2147483648	; 0x80000000
   25324:	lsrseq	ip, r0, #1
   25328:	adcs	r0, r0, #0
   2532c:	adc	r1, r1, r4, lsl #20
   25330:	orr	r1, r1, r5
   25334:	pop	{r4, r5, pc}
   25338:	lsls	ip, ip, #1
   2533c:	adcs	r0, r0, r0
   25340:	adc	r1, r1, r1
   25344:	tst	r1, #1048576	; 0x100000
   25348:	sub	r4, r4, #1
   2534c:	bne	25320 <__adddf3+0x118>
   25350:	teq	r1, #0
   25354:	moveq	r1, r0
   25358:	moveq	r0, #0
   2535c:	clz	r3, r1
   25360:	addeq	r3, r3, #32
   25364:	sub	r3, r3, #11
   25368:	subs	r2, r3, #32
   2536c:	bge	25390 <__adddf3+0x188>
   25370:	adds	r2, r2, #12
   25374:	ble	2538c <__adddf3+0x184>
   25378:	add	ip, r2, #20
   2537c:	rsb	r2, r2, #12
   25380:	lsl	r0, r1, ip
   25384:	lsr	r1, r1, r2
   25388:	b	253a0 <__adddf3+0x198>
   2538c:	add	r2, r2, #20
   25390:	rsble	ip, r2, #32
   25394:	lsl	r1, r1, r2
   25398:	orrle	r1, r1, r0, lsr ip
   2539c:	lslle	r0, r0, r2
   253a0:	subs	r4, r4, r3
   253a4:	addge	r1, r1, r4, lsl #20
   253a8:	orrge	r1, r1, r5
   253ac:	popge	{r4, r5, pc}
   253b0:	mvn	r4, r4
   253b4:	subs	r4, r4, #31
   253b8:	bge	253f4 <__adddf3+0x1ec>
   253bc:	adds	r4, r4, #12
   253c0:	bgt	253dc <__adddf3+0x1d4>
   253c4:	add	r4, r4, #20
   253c8:	rsb	r2, r4, #32
   253cc:	lsr	r0, r0, r4
   253d0:	orr	r0, r0, r1, lsl r2
   253d4:	orr	r1, r5, r1, lsr r4
   253d8:	pop	{r4, r5, pc}
   253dc:	rsb	r4, r4, #12
   253e0:	rsb	r2, r4, #32
   253e4:	lsr	r0, r0, r2
   253e8:	orr	r0, r0, r1, lsl r4
   253ec:	mov	r1, r5
   253f0:	pop	{r4, r5, pc}
   253f4:	lsr	r0, r1, r4
   253f8:	mov	r1, r5
   253fc:	pop	{r4, r5, pc}
   25400:	teq	r4, #0
   25404:	eor	r3, r3, #1048576	; 0x100000
   25408:	eoreq	r1, r1, #1048576	; 0x100000
   2540c:	addeq	r4, r4, #1
   25410:	subne	r5, r5, #1
   25414:	b	252a0 <__adddf3+0x98>
   25418:	mvns	ip, r4, asr #21
   2541c:	mvnsne	ip, r5, asr #21
   25420:	beq	25488 <__adddf3+0x280>
   25424:	teq	r4, r5
   25428:	teqeq	r0, r2
   2542c:	beq	25440 <__adddf3+0x238>
   25430:	orrs	ip, r4, r0
   25434:	moveq	r1, r3
   25438:	moveq	r0, r2
   2543c:	pop	{r4, r5, pc}
   25440:	teq	r1, r3
   25444:	movne	r1, #0
   25448:	movne	r0, #0
   2544c:	popne	{r4, r5, pc}
   25450:	lsrs	ip, r4, #21
   25454:	bne	25468 <__adddf3+0x260>
   25458:	lsls	r0, r0, #1
   2545c:	adcs	r1, r1, r1
   25460:	orrcs	r1, r1, #-2147483648	; 0x80000000
   25464:	pop	{r4, r5, pc}
   25468:	adds	r4, r4, #4194304	; 0x400000
   2546c:	addcc	r1, r1, #1048576	; 0x100000
   25470:	popcc	{r4, r5, pc}
   25474:	and	r5, r1, #-2147483648	; 0x80000000
   25478:	orr	r1, r5, #2130706432	; 0x7f000000
   2547c:	orr	r1, r1, #15728640	; 0xf00000
   25480:	mov	r0, #0
   25484:	pop	{r4, r5, pc}
   25488:	mvns	ip, r4, asr #21
   2548c:	movne	r1, r3
   25490:	movne	r0, r2
   25494:	mvnseq	ip, r5, asr #21
   25498:	movne	r3, r1
   2549c:	movne	r2, r0
   254a0:	orrs	r4, r0, r1, lsl #12
   254a4:	orrseq	r5, r2, r3, lsl #12
   254a8:	teqeq	r1, r3
   254ac:	orrne	r1, r1, #524288	; 0x80000
   254b0:	pop	{r4, r5, pc}

000254b4 <__aeabi_ui2d>:
   254b4:	teq	r0, #0
   254b8:	moveq	r1, #0
   254bc:	bxeq	lr
   254c0:	push	{r4, r5, lr}
   254c4:	mov	r4, #1024	; 0x400
   254c8:	add	r4, r4, #50	; 0x32
   254cc:	mov	r5, #0
   254d0:	mov	r1, #0
   254d4:	b	25350 <__adddf3+0x148>

000254d8 <__aeabi_i2d>:
   254d8:	teq	r0, #0
   254dc:	moveq	r1, #0
   254e0:	bxeq	lr
   254e4:	push	{r4, r5, lr}
   254e8:	mov	r4, #1024	; 0x400
   254ec:	add	r4, r4, #50	; 0x32
   254f0:	ands	r5, r0, #-2147483648	; 0x80000000
   254f4:	rsbmi	r0, r0, #0
   254f8:	mov	r1, #0
   254fc:	b	25350 <__adddf3+0x148>

00025500 <__aeabi_f2d>:
   25500:	lsls	r2, r0, #1
   25504:	asr	r1, r2, #3
   25508:	rrx	r1, r1
   2550c:	lsl	r0, r2, #28
   25510:	andsne	r3, r2, #-16777216	; 0xff000000
   25514:	teqne	r3, #-16777216	; 0xff000000
   25518:	eorne	r1, r1, #939524096	; 0x38000000
   2551c:	bxne	lr
   25520:	teq	r2, #0
   25524:	teqne	r3, #-16777216	; 0xff000000
   25528:	bxeq	lr
   2552c:	push	{r4, r5, lr}
   25530:	mov	r4, #896	; 0x380
   25534:	and	r5, r1, #-2147483648	; 0x80000000
   25538:	bic	r1, r1, #-2147483648	; 0x80000000
   2553c:	b	25350 <__adddf3+0x148>

00025540 <__aeabi_ul2d>:
   25540:	orrs	r2, r0, r1
   25544:	bxeq	lr
   25548:	push	{r4, r5, lr}
   2554c:	mov	r5, #0
   25550:	b	25570 <__aeabi_l2d+0x1c>

00025554 <__aeabi_l2d>:
   25554:	orrs	r2, r0, r1
   25558:	bxeq	lr
   2555c:	push	{r4, r5, lr}
   25560:	ands	r5, r1, #-2147483648	; 0x80000000
   25564:	bpl	25570 <__aeabi_l2d+0x1c>
   25568:	rsbs	r0, r0, #0
   2556c:	rsc	r1, r1, #0
   25570:	mov	r4, #1024	; 0x400
   25574:	add	r4, r4, #50	; 0x32
   25578:	lsrs	ip, r1, #22
   2557c:	beq	252f4 <__adddf3+0xec>
   25580:	mov	r2, #3
   25584:	lsrs	ip, ip, #3
   25588:	addne	r2, r2, #3
   2558c:	lsrs	ip, ip, #3
   25590:	addne	r2, r2, #3
   25594:	add	r2, r2, ip, lsr #3
   25598:	rsb	r3, r2, #32
   2559c:	lsl	ip, r0, r3
   255a0:	lsr	r0, r0, r2
   255a4:	orr	r0, r0, r1, lsl r3
   255a8:	lsr	r1, r1, r2
   255ac:	add	r4, r4, r2
   255b0:	b	252f4 <__adddf3+0xec>

000255b4 <__aeabi_ldivmod>:
   255b4:	cmp	r3, #0
   255b8:	cmpeq	r2, #0
   255bc:	bne	255e0 <__aeabi_ldivmod+0x2c>
   255c0:	cmp	r1, #0
   255c4:	movlt	r1, #-2147483648	; 0x80000000
   255c8:	movlt	r0, #0
   255cc:	blt	255dc <__aeabi_ldivmod+0x28>
   255d0:	cmpeq	r0, #0
   255d4:	mvnne	r1, #-2147483648	; 0x80000000
   255d8:	mvnne	r0, #0
   255dc:	b	256c4 <__aeabi_idiv0>
   255e0:	sub	sp, sp, #8
   255e4:	push	{sp, lr}
   255e8:	cmp	r1, #0
   255ec:	blt	2560c <__aeabi_ldivmod+0x58>
   255f0:	cmp	r3, #0
   255f4:	blt	25640 <__aeabi_ldivmod+0x8c>
   255f8:	bl	25748 <__udivmoddi4>
   255fc:	ldr	lr, [sp, #4]
   25600:	add	sp, sp, #8
   25604:	pop	{r2, r3}
   25608:	bx	lr
   2560c:	rsbs	r0, r0, #0
   25610:	sbc	r1, r1, r1, lsl #1
   25614:	cmp	r3, #0
   25618:	blt	25664 <__aeabi_ldivmod+0xb0>
   2561c:	bl	25748 <__udivmoddi4>
   25620:	ldr	lr, [sp, #4]
   25624:	add	sp, sp, #8
   25628:	pop	{r2, r3}
   2562c:	rsbs	r0, r0, #0
   25630:	sbc	r1, r1, r1, lsl #1
   25634:	rsbs	r2, r2, #0
   25638:	sbc	r3, r3, r3, lsl #1
   2563c:	bx	lr
   25640:	rsbs	r2, r2, #0
   25644:	sbc	r3, r3, r3, lsl #1
   25648:	bl	25748 <__udivmoddi4>
   2564c:	ldr	lr, [sp, #4]
   25650:	add	sp, sp, #8
   25654:	pop	{r2, r3}
   25658:	rsbs	r0, r0, #0
   2565c:	sbc	r1, r1, r1, lsl #1
   25660:	bx	lr
   25664:	rsbs	r2, r2, #0
   25668:	sbc	r3, r3, r3, lsl #1
   2566c:	bl	25748 <__udivmoddi4>
   25670:	ldr	lr, [sp, #4]
   25674:	add	sp, sp, #8
   25678:	pop	{r2, r3}
   2567c:	rsbs	r2, r2, #0
   25680:	sbc	r3, r3, r3, lsl #1
   25684:	bx	lr

00025688 <__aeabi_uldivmod>:
   25688:	cmp	r3, #0
   2568c:	cmpeq	r2, #0
   25690:	bne	256a8 <__aeabi_uldivmod+0x20>
   25694:	cmp	r1, #0
   25698:	cmpeq	r0, #0
   2569c:	mvnne	r1, #0
   256a0:	mvnne	r0, #0
   256a4:	b	256c4 <__aeabi_idiv0>
   256a8:	sub	sp, sp, #8
   256ac:	push	{sp, lr}
   256b0:	bl	25748 <__udivmoddi4>
   256b4:	ldr	lr, [sp, #4]
   256b8:	add	sp, sp, #8
   256bc:	pop	{r2, r3}
   256c0:	bx	lr

000256c4 <__aeabi_idiv0>:
   256c4:	push	{r1, lr}
   256c8:	mov	r0, #8
   256cc:	bl	3d88 <raise@plt>
   256d0:	pop	{r1, pc}

000256d4 <__aeabi_d2lz>:
   256d4:	vmov	d7, r0, r1
   256d8:	vcmpe.f64	d7, #0.0
   256dc:	vmrs	APSR_nzcv, fpscr
   256e0:	bmi	256e8 <__aeabi_d2lz+0x14>
   256e4:	b	25700 <__aeabi_d2ulz>
   256e8:	push	{r4, lr}
   256ec:	eor	r1, r1, #-2147483648	; 0x80000000
   256f0:	bl	25700 <__aeabi_d2ulz>
   256f4:	rsbs	r0, r0, #0
   256f8:	rsc	r1, r1, #0
   256fc:	pop	{r4, pc}

00025700 <__aeabi_d2ulz>:
   25700:	vmov	d7, r0, r1
   25704:	vldr	d6, [pc, #44]	; 25738 <__aeabi_d2ulz+0x38>
   25708:	vldr	d5, [pc, #48]	; 25740 <__aeabi_d2ulz+0x40>
   2570c:	mov	r0, #0
   25710:	vmul.f64	d6, d7, d6
   25714:	vcvt.u32.f64	s12, d6
   25718:	vcvt.f64.u32	d4, s12
   2571c:	vmov	r1, s12
   25720:	vmls.f64	d7, d4, d5
   25724:	vcvt.u32.f64	s14, d7
   25728:	vmov	r3, s14
   2572c:	orr	r0, r0, r3
   25730:	bx	lr
   25734:	nop			; (mov r0, r0)
   25738:	.word	0x00000000
   2573c:	.word	0x3df00000
   25740:	.word	0x00000000
   25744:	.word	0x41f00000

00025748 <__udivmoddi4>:
   25748:	cmp	r1, r3
   2574c:	push	{r4, r5, r6, r7, r8, r9, lr}
   25750:	cmpeq	r0, r2
   25754:	mov	r4, r0
   25758:	mov	r5, r1
   2575c:	ldr	r9, [sp, #28]
   25760:	movcc	r0, #0
   25764:	movcc	r1, #0
   25768:	bcc	25860 <__udivmoddi4+0x118>
   2576c:	cmp	r3, #0
   25770:	clzeq	ip, r2
   25774:	clzne	ip, r3
   25778:	addeq	ip, ip, #32
   2577c:	cmp	r5, #0
   25780:	clzeq	r1, r4
   25784:	addeq	r1, r1, #32
   25788:	clzne	r1, r5
   2578c:	sub	ip, ip, r1
   25790:	sub	lr, ip, #32
   25794:	lsl	r7, r3, ip
   25798:	rsb	r8, ip, #32
   2579c:	orr	r7, r7, r2, lsl lr
   257a0:	orr	r7, r7, r2, lsr r8
   257a4:	lsl	r6, r2, ip
   257a8:	cmp	r5, r7
   257ac:	cmpeq	r4, r6
   257b0:	movcc	r0, #0
   257b4:	movcc	r1, #0
   257b8:	bcc	257d4 <__udivmoddi4+0x8c>
   257bc:	mov	r3, #1
   257c0:	subs	r4, r4, r6
   257c4:	lsl	r1, r3, lr
   257c8:	lsl	r0, r3, ip
   257cc:	orr	r1, r1, r3, lsr r8
   257d0:	sbc	r5, r5, r7
   257d4:	cmp	ip, #0
   257d8:	beq	25860 <__udivmoddi4+0x118>
   257dc:	lsrs	r3, r7, #1
   257e0:	rrx	r2, r6
   257e4:	mov	r6, ip
   257e8:	b	2580c <__udivmoddi4+0xc4>
   257ec:	subs	r4, r4, r2
   257f0:	sbc	r5, r5, r3
   257f4:	adds	r4, r4, r4
   257f8:	adc	r5, r5, r5
   257fc:	adds	r4, r4, #1
   25800:	adc	r5, r5, #0
   25804:	subs	r6, r6, #1
   25808:	beq	25828 <__udivmoddi4+0xe0>
   2580c:	cmp	r5, r3
   25810:	cmpeq	r4, r2
   25814:	bcs	257ec <__udivmoddi4+0xa4>
   25818:	adds	r4, r4, r4
   2581c:	adc	r5, r5, r5
   25820:	subs	r6, r6, #1
   25824:	bne	2580c <__udivmoddi4+0xc4>
   25828:	lsr	r6, r4, ip
   2582c:	lsr	r7, r5, ip
   25830:	orr	r6, r6, r5, lsl r8
   25834:	adds	r2, r0, r4
   25838:	orr	r6, r6, r5, lsr lr
   2583c:	adc	r3, r1, r5
   25840:	lsl	r1, r7, ip
   25844:	orr	r1, r1, r6, lsl lr
   25848:	lsl	r0, r6, ip
   2584c:	orr	r1, r1, r6, lsr r8
   25850:	subs	r0, r2, r0
   25854:	mov	r4, r6
   25858:	mov	r5, r7
   2585c:	sbc	r1, r3, r1
   25860:	cmp	r9, #0
   25864:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   25868:	strd	r4, [r9]
   2586c:	pop	{r4, r5, r6, r7, r8, r9, pc}

Disassembly of section .fini:

00025870 <_fini>:
   25870:	push	{r3, lr}
   25874:	pop	{r3, pc}
