
../repos/inetutils/src/rshd:     file format elf32-littlearm


Disassembly of section .init:

00011530 <.init>:
   11530:	push	{r3, lr}
   11534:	bl	11b5c <__assert_fail@plt+0x1d4>
   11538:	pop	{r3, pc}

Disassembly of section .plt:

0001153c <calloc@plt-0x14>:
   1153c:	push	{lr}		; (str lr, [sp, #-4]!)
   11540:	ldr	lr, [pc, #4]	; 1154c <calloc@plt-0x4>
   11544:	add	lr, pc, lr
   11548:	ldr	pc, [lr, #8]!
   1154c:			; <UNDEFINED> instruction: 0x0001cab4

00011550 <calloc@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #28, 20	; 0x1c000
   11558:	ldr	pc, [ip, #2740]!	; 0xab4

0001155c <fputs_unlocked@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #28, 20	; 0x1c000
   11564:	ldr	pc, [ip, #2732]!	; 0xaac

00011568 <raise@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #28, 20	; 0x1c000
   11570:	ldr	pc, [ip, #2724]!	; 0xaa4

00011574 <strcmp@plt>:
   11574:	add	ip, pc, #0, 12
   11578:	add	ip, ip, #28, 20	; 0x1c000
   1157c:	ldr	pc, [ip, #2716]!	; 0xa9c

00011580 <strtol@plt>:
   11580:	add	ip, pc, #0, 12
   11584:	add	ip, ip, #28, 20	; 0x1c000
   11588:	ldr	pc, [ip, #2708]!	; 0xa94

0001158c <setsockopt@plt>:
   1158c:	add	ip, pc, #0, 12
   11590:	add	ip, ip, #28, 20	; 0x1c000
   11594:	ldr	pc, [ip, #2700]!	; 0xa8c

00011598 <printf@plt>:
   11598:	add	ip, pc, #0, 12
   1159c:	add	ip, ip, #28, 20	; 0x1c000
   115a0:	ldr	pc, [ip, #2692]!	; 0xa84

000115a4 <read@plt>:
   115a4:	add	ip, pc, #0, 12
   115a8:	add	ip, ip, #28, 20	; 0x1c000
   115ac:	ldr	pc, [ip, #2684]!	; 0xa7c

000115b0 <getprotobyname@plt>:
   115b0:	add	ip, pc, #0, 12
   115b4:	add	ip, ip, #28, 20	; 0x1c000
   115b8:	ldr	pc, [ip, #2676]!	; 0xa74

000115bc <getspnam@plt>:
   115bc:	add	ip, pc, #0, 12
   115c0:	add	ip, ip, #28, 20	; 0x1c000
   115c4:	ldr	pc, [ip, #2668]!	; 0xa6c

000115c8 <memmove@plt>:
   115c8:	add	ip, pc, #0, 12
   115cc:	add	ip, ip, #28, 20	; 0x1c000
   115d0:	ldr	pc, [ip, #2660]!	; 0xa64

000115d4 <strchrnul@plt>:
   115d4:	add	ip, pc, #0, 12
   115d8:	add	ip, ip, #28, 20	; 0x1c000
   115dc:	ldr	pc, [ip, #2652]!	; 0xa5c

000115e0 <free@plt>:
   115e0:	add	ip, pc, #0, 12
   115e4:	add	ip, ip, #28, 20	; 0x1c000
   115e8:	ldr	pc, [ip, #2644]!	; 0xa54

000115ec <gai_strerror@plt>:
   115ec:	add	ip, pc, #0, 12
   115f0:	add	ip, ip, #28, 20	; 0x1c000
   115f4:	ldr	pc, [ip, #2636]!	; 0xa4c

000115f8 <strndup@plt>:
   115f8:	add	ip, pc, #0, 12
   115fc:	add	ip, ip, #28, 20	; 0x1c000
   11600:	ldr	pc, [ip, #2628]!	; 0xa44

00011604 <_exit@plt>:
   11604:	add	ip, pc, #0, 12
   11608:	add	ip, ip, #28, 20	; 0x1c000
   1160c:	ldr	pc, [ip, #2620]!	; 0xa3c

00011610 <memcpy@plt>:
   11610:	add	ip, pc, #0, 12
   11614:	add	ip, ip, #28, 20	; 0x1c000
   11618:	ldr	pc, [ip, #2612]!	; 0xa34

0001161c <signal@plt>:
   1161c:	add	ip, pc, #0, 12
   11620:	add	ip, ip, #28, 20	; 0x1c000
   11624:	ldr	pc, [ip, #2604]!	; 0xa2c

00011628 <time@plt>:
   11628:	add	ip, pc, #0, 12
   1162c:	add	ip, ip, #28, 20	; 0x1c000
   11630:	ldr	pc, [ip, #2596]!	; 0xa24

00011634 <fwrite_unlocked@plt>:
   11634:	add	ip, pc, #0, 12
   11638:	add	ip, ip, #28, 20	; 0x1c000
   1163c:	ldr	pc, [ip, #2588]!	; 0xa1c

00011640 <select@plt>:
   11640:	add	ip, pc, #0, 12
   11644:	add	ip, ip, #28, 20	; 0x1c000
   11648:	ldr	pc, [ip, #2580]!	; 0xa14

0001164c <sleep@plt>:
   1164c:	add	ip, pc, #0, 12
   11650:	add	ip, ip, #28, 20	; 0x1c000
   11654:	ldr	pc, [ip, #2572]!	; 0xa0c

00011658 <strdup@plt>:
   11658:	add	ip, pc, #0, 12
   1165c:	add	ip, ip, #28, 20	; 0x1c000
   11660:	ldr	pc, [ip, #2564]!	; 0xa04

00011664 <alarm@plt>:
   11664:	add	ip, pc, #0, 12
   11668:	add	ip, ip, #28, 20	; 0x1c000
   1166c:	ldr	pc, [ip, #2556]!	; 0x9fc

00011670 <sysconf@plt>:
   11670:	add	ip, pc, #0, 12
   11674:	add	ip, ip, #28, 20	; 0x1c000
   11678:	ldr	pc, [ip, #2548]!	; 0x9f4

0001167c <dup2@plt>:
   1167c:	add	ip, pc, #0, 12
   11680:	add	ip, ip, #28, 20	; 0x1c000
   11684:	ldr	pc, [ip, #2540]!	; 0x9ec

00011688 <realloc@plt>:
   11688:	add	ip, pc, #0, 12
   1168c:	add	ip, ip, #28, 20	; 0x1c000
   11690:	ldr	pc, [ip, #2532]!	; 0x9e4

00011694 <killpg@plt>:
   11694:	add	ip, pc, #0, 12
   11698:	add	ip, ip, #28, 20	; 0x1c000
   1169c:	ldr	pc, [ip, #2524]!	; 0x9dc

000116a0 <initgroups@plt>:
   116a0:	add	ip, pc, #0, 12
   116a4:	add	ip, ip, #28, 20	; 0x1c000
   116a8:	ldr	pc, [ip, #2516]!	; 0x9d4

000116ac <chdir@plt>:
   116ac:	add	ip, pc, #0, 12
   116b0:	add	ip, ip, #28, 20	; 0x1c000
   116b4:	ldr	pc, [ip, #2508]!	; 0x9cc

000116b8 <strcasecmp@plt>:
   116b8:	add	ip, pc, #0, 12
   116bc:	add	ip, ip, #28, 20	; 0x1c000
   116c0:	ldr	pc, [ip, #2500]!	; 0x9c4

000116c4 <funlockfile@plt>:
   116c4:	add	ip, pc, #0, 12
   116c8:	add	ip, ip, #28, 20	; 0x1c000
   116cc:	ldr	pc, [ip, #2492]!	; 0x9bc

000116d0 <perror@plt>:
   116d0:	add	ip, pc, #0, 12
   116d4:	add	ip, ip, #28, 20	; 0x1c000
   116d8:	ldr	pc, [ip, #2484]!	; 0x9b4

000116dc <fwrite@plt>:
   116dc:	add	ip, pc, #0, 12
   116e0:	add	ip, ip, #28, 20	; 0x1c000
   116e4:	ldr	pc, [ip, #2476]!	; 0x9ac

000116e8 <getsockopt@plt>:
   116e8:	add	ip, pc, #0, 12
   116ec:	add	ip, ip, #28, 20	; 0x1c000
   116f0:	ldr	pc, [ip, #2468]!	; 0x9a4

000116f4 <ioctl@plt>:
   116f4:	add	ip, pc, #0, 12
   116f8:	add	ip, ip, #28, 20	; 0x1c000
   116fc:	ldr	pc, [ip, #2460]!	; 0x99c

00011700 <error@plt>:
   11700:	add	ip, pc, #0, 12
   11704:	add	ip, ip, #28, 20	; 0x1c000
   11708:	ldr	pc, [ip, #2452]!	; 0x994

0001170c <gethostname@plt>:
   1170c:	add	ip, pc, #0, 12
   11710:	add	ip, ip, #28, 20	; 0x1c000
   11714:	ldr	pc, [ip, #2444]!	; 0x98c

00011718 <getenv@plt>:
   11718:	add	ip, pc, #0, 12
   1171c:	add	ip, ip, #28, 20	; 0x1c000
   11720:	ldr	pc, [ip, #2436]!	; 0x984

00011724 <iruserok_af@plt>:
   11724:	add	ip, pc, #0, 12
   11728:	add	ip, ip, #28, 20	; 0x1c000
   1172c:	ldr	pc, [ip, #2428]!	; 0x97c

00011730 <setgid@plt>:
   11730:	add	ip, pc, #0, 12
   11734:	add	ip, ip, #28, 20	; 0x1c000
   11738:	ldr	pc, [ip, #2420]!	; 0x974

0001173c <malloc@plt>:
   1173c:	add	ip, pc, #0, 12
   11740:	add	ip, ip, #28, 20	; 0x1c000
   11744:	ldr	pc, [ip, #2412]!	; 0x96c

00011748 <__libc_start_main@plt>:
   11748:	add	ip, pc, #0, 12
   1174c:	add	ip, ip, #28, 20	; 0x1c000
   11750:	ldr	pc, [ip, #2404]!	; 0x964

00011754 <strerror@plt>:
   11754:	add	ip, pc, #0, 12
   11758:	add	ip, ip, #28, 20	; 0x1c000
   1175c:	ldr	pc, [ip, #2396]!	; 0x95c

00011760 <__ctype_tolower_loc@plt>:
   11760:	add	ip, pc, #0, 12
   11764:	add	ip, ip, #28, 20	; 0x1c000
   11768:	ldr	pc, [ip, #2388]!	; 0x954

0001176c <__gmon_start__@plt>:
   1176c:	add	ip, pc, #0, 12
   11770:	add	ip, ip, #28, 20	; 0x1c000
   11774:	ldr	pc, [ip, #2380]!	; 0x94c

00011778 <mempcpy@plt>:
   11778:	add	ip, pc, #0, 12
   1177c:	add	ip, ip, #28, 20	; 0x1c000
   11780:	ldr	pc, [ip, #2372]!	; 0x944

00011784 <__ctype_b_loc@plt>:
   11784:	add	ip, pc, #0, 12
   11788:	add	ip, ip, #28, 20	; 0x1c000
   1178c:	ldr	pc, [ip, #2364]!	; 0x93c

00011790 <getpid@plt>:
   11790:	add	ip, pc, #0, 12
   11794:	add	ip, ip, #28, 20	; 0x1c000
   11798:	ldr	pc, [ip, #2356]!	; 0x934

0001179c <exit@plt>:
   1179c:	add	ip, pc, #0, 12
   117a0:	add	ip, ip, #28, 20	; 0x1c000
   117a4:	ldr	pc, [ip, #2348]!	; 0x92c

000117a8 <rresvport_af@plt>:
   117a8:	add	ip, pc, #0, 12
   117ac:	add	ip, ip, #28, 20	; 0x1c000
   117b0:	ldr	pc, [ip, #2340]!	; 0x924

000117b4 <strlen@plt>:
   117b4:	add	ip, pc, #0, 12
   117b8:	add	ip, ip, #28, 20	; 0x1c000
   117bc:	ldr	pc, [ip, #2332]!	; 0x91c

000117c0 <strchr@plt>:
   117c0:	add	ip, pc, #0, 12
   117c4:	add	ip, ip, #28, 20	; 0x1c000
   117c8:	ldr	pc, [ip, #2324]!	; 0x914

000117cc <getpwnam_r@plt>:
   117cc:	add	ip, pc, #0, 12
   117d0:	add	ip, ip, #28, 20	; 0x1c000
   117d4:	ldr	pc, [ip, #2316]!	; 0x90c

000117d8 <fprintf@plt>:
   117d8:	add	ip, pc, #0, 12
   117dc:	add	ip, ip, #28, 20	; 0x1c000
   117e0:	ldr	pc, [ip, #2308]!	; 0x904

000117e4 <setpwent@plt>:
   117e4:	add	ip, pc, #0, 12
   117e8:	add	ip, ip, #28, 20	; 0x1c000
   117ec:	ldr	pc, [ip, #2300]!	; 0x8fc

000117f0 <__errno_location@plt>:
   117f0:	add	ip, pc, #0, 12
   117f4:	add	ip, ip, #28, 20	; 0x1c000
   117f8:	ldr	pc, [ip, #2292]!	; 0x8f4

000117fc <strerror_r@plt>:
   117fc:	add	ip, pc, #0, 12
   11800:	add	ip, ip, #28, 20	; 0x1c000
   11804:	ldr	pc, [ip, #2284]!	; 0x8ec

00011808 <memset@plt>:
   11808:	add	ip, pc, #0, 12
   1180c:	add	ip, ip, #28, 20	; 0x1c000
   11810:	ldr	pc, [ip, #2276]!	; 0x8e4

00011814 <write@plt>:
   11814:	add	ip, pc, #0, 12
   11818:	add	ip, ip, #28, 20	; 0x1c000
   1181c:	ldr	pc, [ip, #2268]!	; 0x8dc

00011820 <difftime@plt>:
   11820:	add	ip, pc, #0, 12
   11824:	add	ip, ip, #28, 20	; 0x1c000
   11828:	ldr	pc, [ip, #2260]!	; 0x8d4

0001182c <memchr@plt>:
   1182c:	add	ip, pc, #0, 12
   11830:	add	ip, ip, #28, 20	; 0x1c000
   11834:	ldr	pc, [ip, #2252]!	; 0x8cc

00011838 <access@plt>:
   11838:	add	ip, pc, #0, 12
   1183c:	add	ip, ip, #28, 20	; 0x1c000
   11840:	ldr	pc, [ip, #2244]!	; 0x8c4

00011844 <setegid@plt>:
   11844:	add	ip, pc, #0, 12
   11848:	add	ip, ip, #28, 20	; 0x1c000
   1184c:	ldr	pc, [ip, #2236]!	; 0x8bc

00011850 <pipe@plt>:
   11850:	add	ip, pc, #0, 12
   11854:	add	ip, ip, #28, 20	; 0x1c000
   11858:	ldr	pc, [ip, #2228]!	; 0x8b4

0001185c <shutdown@plt>:
   1185c:	add	ip, pc, #0, 12
   11860:	add	ip, ip, #28, 20	; 0x1c000
   11864:	ldr	pc, [ip, #2220]!	; 0x8ac

00011868 <__overflow@plt>:
   11868:	add	ip, pc, #0, 12
   1186c:	add	ip, ip, #28, 20	; 0x1c000
   11870:	ldr	pc, [ip, #2212]!	; 0x8a4

00011874 <fork@plt>:
   11874:	add	ip, pc, #0, 12
   11878:	add	ip, ip, #28, 20	; 0x1c000
   1187c:	ldr	pc, [ip, #2204]!	; 0x89c

00011880 <getnameinfo@plt>:
   11880:	add	ip, pc, #0, 12
   11884:	add	ip, ip, #28, 20	; 0x1c000
   11888:	ldr	pc, [ip, #2196]!	; 0x894

0001188c <endpwent@plt>:
   1188c:	add	ip, pc, #0, 12
   11890:	add	ip, ip, #28, 20	; 0x1c000
   11894:	ldr	pc, [ip, #2188]!	; 0x88c

00011898 <execl@plt>:
   11898:	add	ip, pc, #0, 12
   1189c:	add	ip, ip, #28, 20	; 0x1c000
   118a0:	ldr	pc, [ip, #2180]!	; 0x884

000118a4 <strrchr@plt>:
   118a4:	add	ip, pc, #0, 12
   118a8:	add	ip, ip, #28, 20	; 0x1c000
   118ac:	ldr	pc, [ip, #2172]!	; 0x87c

000118b0 <vfprintf@plt>:
   118b0:	add	ip, pc, #0, 12
   118b4:	add	ip, ip, #28, 20	; 0x1c000
   118b8:	ldr	pc, [ip, #2164]!	; 0x874

000118bc <fputc@plt>:
   118bc:	add	ip, pc, #0, 12
   118c0:	add	ip, ip, #28, 20	; 0x1c000
   118c4:	ldr	pc, [ip, #2156]!	; 0x86c

000118c8 <syslog@plt>:
   118c8:	add	ip, pc, #0, 12
   118cc:	add	ip, ip, #28, 20	; 0x1c000
   118d0:	ldr	pc, [ip, #2148]!	; 0x864

000118d4 <setuid@plt>:
   118d4:	add	ip, pc, #0, 12
   118d8:	add	ip, ip, #28, 20	; 0x1c000
   118dc:	ldr	pc, [ip, #2140]!	; 0x85c

000118e0 <setpgid@plt>:
   118e0:	add	ip, pc, #0, 12
   118e4:	add	ip, ip, #28, 20	; 0x1c000
   118e8:	ldr	pc, [ip, #2132]!	; 0x854

000118ec <sprintf@plt>:
   118ec:	add	ip, pc, #0, 12
   118f0:	add	ip, ip, #28, 20	; 0x1c000
   118f4:	ldr	pc, [ip, #2124]!	; 0x84c

000118f8 <openlog@plt>:
   118f8:	add	ip, pc, #0, 12
   118fc:	add	ip, ip, #28, 20	; 0x1c000
   11900:	ldr	pc, [ip, #2116]!	; 0x844

00011904 <flockfile@plt>:
   11904:	add	ip, pc, #0, 12
   11908:	add	ip, ip, #28, 20	; 0x1c000
   1190c:	ldr	pc, [ip, #2108]!	; 0x83c

00011910 <vsnprintf@plt>:
   11910:	add	ip, pc, #0, 12
   11914:	add	ip, ip, #28, 20	; 0x1c000
   11918:	ldr	pc, [ip, #2100]!	; 0x834

0001191c <qsort@plt>:
   1191c:	add	ip, pc, #0, 12
   11920:	add	ip, ip, #28, 20	; 0x1c000
   11924:	ldr	pc, [ip, #2092]!	; 0x82c

00011928 <getpeername@plt>:
   11928:	add	ip, pc, #0, 12
   1192c:	add	ip, ip, #28, 20	; 0x1c000
   11930:	ldr	pc, [ip, #2084]!	; 0x824

00011934 <freeaddrinfo@plt>:
   11934:	add	ip, pc, #0, 12
   11938:	add	ip, ip, #28, 20	; 0x1c000
   1193c:	ldr	pc, [ip, #2076]!	; 0x81c

00011940 <getaddrinfo@plt>:
   11940:	add	ip, pc, #0, 12
   11944:	add	ip, ip, #28, 20	; 0x1c000
   11948:	ldr	pc, [ip, #2068]!	; 0x814

0001194c <strncat@plt>:
   1194c:	add	ip, pc, #0, 12
   11950:	add	ip, ip, #28, 20	; 0x1c000
   11954:	ldr	pc, [ip, #2060]!	; 0x80c

00011958 <strncmp@plt>:
   11958:	add	ip, pc, #0, 12
   1195c:	add	ip, ip, #28, 20	; 0x1c000
   11960:	ldr	pc, [ip, #2052]!	; 0x804

00011964 <abort@plt>:
   11964:	add	ip, pc, #0, 12
   11968:	add	ip, ip, #28, 20	; 0x1c000
   1196c:	ldr	pc, [ip, #2044]!	; 0x7fc

00011970 <close@plt>:
   11970:	add	ip, pc, #0, 12
   11974:	add	ip, ip, #28, 20	; 0x1c000
   11978:	ldr	pc, [ip, #2036]!	; 0x7f4

0001197c <connect@plt>:
   1197c:	add	ip, pc, #0, 12
   11980:	add	ip, ip, #28, 20	; 0x1c000
   11984:	ldr	pc, [ip, #2028]!	; 0x7ec

00011988 <__assert_fail@plt>:
   11988:	add	ip, pc, #0, 12
   1198c:	add	ip, ip, #28, 20	; 0x1c000
   11990:	ldr	pc, [ip, #2020]!	; 0x7e4

Disassembly of section .text:

00011994 <argp_parse@@Base-0x2120>:
   11994:	push	{r4, r5, r6, r7, r8, lr}
   11998:	sub	sp, sp, #160	; 0xa0
   1199c:	mov	r4, r0
   119a0:	mov	r8, #1
   119a4:	ldr	r0, [r1]
   119a8:	mov	r6, r1
   119ac:	str	r8, [sp, #16]
   119b0:	bl	14b68 <argp_parse@@Base+0x10b4>
   119b4:	ldr	r3, [pc, #320]	; 11afc <__assert_fail@plt+0x174>
   119b8:	ldr	r2, [pc, #320]	; 11b00 <__assert_fail@plt+0x178>
   119bc:	ldr	r1, [pc, #320]	; 11b04 <__assert_fail@plt+0x17c>
   119c0:	ldr	r0, [pc, #320]	; 11b08 <__assert_fail@plt+0x180>
   119c4:	ldr	r7, [pc, #320]	; 11b0c <__assert_fail@plt+0x184>
   119c8:	str	r2, [r3]
   119cc:	mov	r5, #0
   119d0:	bl	1495c <argp_parse@@Base+0xea8>
   119d4:	add	ip, sp, #12
   119d8:	mov	r2, r6
   119dc:	mov	r1, r4
   119e0:	mov	r3, r5
   119e4:	str	ip, [sp]
   119e8:	add	r0, r7, #608	; 0x260
   119ec:	str	r5, [sp, #4]
   119f0:	bl	13ab4 <argp_parse@@Base>
   119f4:	mov	r2, #24
   119f8:	mov	r1, #5
   119fc:	ldr	r0, [pc, #260]	; 11b08 <__assert_fail@plt+0x180>
   11a00:	bl	118f8 <openlog@plt>
   11a04:	ldr	r2, [sp, #12]
   11a08:	sub	r2, r4, r2
   11a0c:	cmp	r2, r5
   11a10:	bgt	11ae8 <__assert_fail@plt+0x160>
   11a14:	mov	r3, #128	; 0x80
   11a18:	add	r1, sp, #32
   11a1c:	add	r2, sp, #20
   11a20:	mov	r0, r5
   11a24:	str	r3, [sp, #20]
   11a28:	bl	11928 <getpeername@plt>
   11a2c:	cmp	r0, #0
   11a30:	blt	11ad4 <__assert_fail@plt+0x14c>
   11a34:	ldr	r3, [r7]
   11a38:	cmp	r3, #0
   11a3c:	bne	11a90 <__assert_fail@plt+0x108>
   11a40:	mov	ip, #1
   11a44:	mov	r3, #8
   11a48:	str	r3, [sp]
   11a4c:	mov	lr, #60	; 0x3c
   11a50:	mov	r1, ip
   11a54:	add	r3, sp, #24
   11a58:	mov	r2, #13
   11a5c:	mov	r0, #0
   11a60:	str	ip, [sp, #24]
   11a64:	str	lr, [sp, #28]
   11a68:	bl	1158c <setsockopt@plt>
   11a6c:	cmp	r0, #0
   11a70:	blt	11ac4 <__assert_fail@plt+0x13c>
   11a74:	add	r1, sp, #32
   11a78:	ldr	r2, [sp, #20]
   11a7c:	mov	r0, #0
   11a80:	bl	11fc8 <__assert_fail@plt+0x640>
   11a84:	mov	r0, #0
   11a88:	add	sp, sp, #160	; 0xa0
   11a8c:	pop	{r4, r5, r6, r7, r8, pc}
   11a90:	mov	r4, #4
   11a94:	mov	r1, r8
   11a98:	mov	r0, r5
   11a9c:	str	r4, [sp]
   11aa0:	add	r3, sp, #16
   11aa4:	mov	r2, #9
   11aa8:	bl	1158c <setsockopt@plt>
   11aac:	cmp	r0, #0
   11ab0:	bge	11a40 <__assert_fail@plt+0xb8>
   11ab4:	mov	r0, r4
   11ab8:	ldr	r1, [pc, #80]	; 11b10 <__assert_fail@plt+0x188>
   11abc:	bl	118c8 <syslog@plt>
   11ac0:	b	11a40 <__assert_fail@plt+0xb8>
   11ac4:	ldr	r1, [pc, #72]	; 11b14 <__assert_fail@plt+0x18c>
   11ac8:	mov	r0, #4
   11acc:	bl	118c8 <syslog@plt>
   11ad0:	b	11a74 <__assert_fail@plt+0xec>
   11ad4:	mov	r0, #3
   11ad8:	ldr	r1, [pc, #56]	; 11b18 <__assert_fail@plt+0x190>
   11adc:	bl	118c8 <syslog@plt>
   11ae0:	mov	r0, r8
   11ae4:	bl	11604 <_exit@plt>
   11ae8:	mov	r0, #3
   11aec:	ldr	r1, [pc, #40]	; 11b1c <__assert_fail@plt+0x194>
   11af0:	bl	118c8 <syslog@plt>
   11af4:	mov	r0, r8
   11af8:	bl	1179c <exit@plt>
   11afc:	andeq	lr, r2, r0, asr #10
   11b00:	andeq	sp, r1, r8
   11b04:	muleq	r2, r0, r4
   11b08:	andeq	sp, r1, r0, lsr #32
   11b0c:	andeq	lr, r2, r4, lsl #3
   11b10:	andeq	sp, r1, ip, asr #32
   11b14:	andeq	sp, r1, ip, rrx
   11b18:	andeq	sp, r1, ip, lsr r0
   11b1c:	andeq	sp, r1, r8, lsr #32
   11b20:	mov	fp, #0
   11b24:	mov	lr, #0
   11b28:	pop	{r1}		; (ldr r1, [sp], #4)
   11b2c:	mov	r2, sp
   11b30:	push	{r2}		; (str r2, [sp, #-4]!)
   11b34:	push	{r0}		; (str r0, [sp, #-4]!)
   11b38:	ldr	ip, [pc, #16]	; 11b50 <__assert_fail@plt+0x1c8>
   11b3c:	push	{ip}		; (str ip, [sp, #-4]!)
   11b40:	ldr	r0, [pc, #12]	; 11b54 <__assert_fail@plt+0x1cc>
   11b44:	ldr	r3, [pc, #12]	; 11b58 <__assert_fail@plt+0x1d0>
   11b48:	bl	11748 <__libc_start_main@plt>
   11b4c:	bl	11964 <abort@plt>
   11b50:	andeq	ip, r1, ip, lsl fp
   11b54:	muleq	r1, r4, r9
   11b58:			; <UNDEFINED> instruction: 0x0001cabc
   11b5c:	ldr	r3, [pc, #20]	; 11b78 <__assert_fail@plt+0x1f0>
   11b60:	ldr	r2, [pc, #20]	; 11b7c <__assert_fail@plt+0x1f4>
   11b64:	add	r3, pc, r3
   11b68:	ldr	r2, [r3, r2]
   11b6c:	cmp	r2, #0
   11b70:	bxeq	lr
   11b74:	b	1176c <__gmon_start__@plt>
   11b78:	muleq	r1, r4, r4
   11b7c:	andeq	r0, r0, r8, ror r1
   11b80:	ldr	r3, [pc, #28]	; 11ba4 <__assert_fail@plt+0x21c>
   11b84:	ldr	r0, [pc, #28]	; 11ba8 <__assert_fail@plt+0x220>
   11b88:	sub	r3, r3, r0
   11b8c:	cmp	r3, #6
   11b90:	bxls	lr
   11b94:	ldr	r3, [pc, #16]	; 11bac <__assert_fail@plt+0x224>
   11b98:	cmp	r3, #0
   11b9c:	bxeq	lr
   11ba0:	bx	r3
   11ba4:	ldrdeq	lr, [r2], -r7
   11ba8:	ldrdeq	lr, [r2], -r4
   11bac:	andeq	r0, r0, r0
   11bb0:	ldr	r1, [pc, #36]	; 11bdc <__assert_fail@plt+0x254>
   11bb4:	ldr	r0, [pc, #36]	; 11be0 <__assert_fail@plt+0x258>
   11bb8:	sub	r1, r1, r0
   11bbc:	asr	r1, r1, #2
   11bc0:	add	r1, r1, r1, lsr #31
   11bc4:	asrs	r1, r1, #1
   11bc8:	bxeq	lr
   11bcc:	ldr	r3, [pc, #16]	; 11be4 <__assert_fail@plt+0x25c>
   11bd0:	cmp	r3, #0
   11bd4:	bxeq	lr
   11bd8:	bx	r3
   11bdc:	ldrdeq	lr, [r2], -r4
   11be0:	ldrdeq	lr, [r2], -r4
   11be4:	andeq	r0, r0, r0
   11be8:	push	{r4, lr}
   11bec:	ldr	r4, [pc, #24]	; 11c0c <__assert_fail@plt+0x284>
   11bf0:	ldrb	r3, [r4]
   11bf4:	cmp	r3, #0
   11bf8:	popne	{r4, pc}
   11bfc:	bl	11b80 <__assert_fail@plt+0x1f8>
   11c00:	mov	r3, #1
   11c04:	strb	r3, [r4]
   11c08:	pop	{r4, pc}
   11c0c:	strdeq	lr, [r2], -r4
   11c10:	ldr	r0, [pc, #40]	; 11c40 <__assert_fail@plt+0x2b8>
   11c14:	ldr	r3, [r0]
   11c18:	cmp	r3, #0
   11c1c:	bne	11c24 <__assert_fail@plt+0x29c>
   11c20:	b	11bb0 <__assert_fail@plt+0x228>
   11c24:	ldr	r3, [pc, #24]	; 11c44 <__assert_fail@plt+0x2bc>
   11c28:	cmp	r3, #0
   11c2c:	beq	11c20 <__assert_fail@plt+0x298>
   11c30:	push	{r4, lr}
   11c34:	blx	r3
   11c38:	pop	{r4, lr}
   11c3c:	b	11bb0 <__assert_fail@plt+0x228>
   11c40:	andeq	sp, r2, ip, lsl #30
   11c44:	andeq	r0, r0, r0
   11c48:	sub	r0, r0, #76	; 0x4c
   11c4c:	cmp	r0, #38	; 0x26
   11c50:	ldrls	pc, [pc, r0, lsl #2]
   11c54:	b	11d58 <__assert_fail@plt+0x3d0>
   11c58:	andeq	r1, r1, r8, lsl #26
   11c5c:	andeq	r1, r1, r8, asr sp
   11c60:	andeq	r1, r1, r8, asr sp
   11c64:	andeq	r1, r1, r8, asr sp
   11c68:	andeq	r1, r1, r8, asr sp
   11c6c:	andeq	r1, r1, r8, asr sp
   11c70:	andeq	r1, r1, r8, asr sp
   11c74:	andeq	r1, r1, r8, asr sp
   11c78:	andeq	r1, r1, r8, asr sp
   11c7c:	andeq	r1, r1, r8, asr sp
   11c80:	andeq	r1, r1, r8, asr sp
   11c84:	andeq	r1, r1, r8, asr sp
   11c88:	andeq	r1, r1, r8, asr sp
   11c8c:	andeq	r1, r1, r8, asr sp
   11c90:	andeq	r1, r1, r8, asr sp
   11c94:	andeq	r1, r1, r8, asr sp
   11c98:	andeq	r1, r1, r8, asr sp
   11c9c:	andeq	r1, r1, r8, asr sp
   11ca0:	andeq	r1, r1, r8, asr sp
   11ca4:	andeq	r1, r1, r8, asr sp
   11ca8:	andeq	r1, r1, r8, asr sp
   11cac:	andeq	r1, r1, ip, lsl sp
   11cb0:	andeq	r1, r1, r8, asr sp
   11cb4:	andeq	r1, r1, r8, asr sp
   11cb8:	andeq	r1, r1, r8, asr sp
   11cbc:	andeq	r1, r1, r8, asr sp
   11cc0:	andeq	r1, r1, r8, asr sp
   11cc4:	andeq	r1, r1, r8, asr sp
   11cc8:	andeq	r1, r1, r8, asr sp
   11ccc:	andeq	r1, r1, r8, asr sp
   11cd0:	andeq	r1, r1, r8, asr sp
   11cd4:	andeq	r1, r1, r8, asr sp
   11cd8:	andeq	r1, r1, r0, lsr sp
   11cdc:	andeq	r1, r1, r8, asr sp
   11ce0:	andeq	r1, r1, r4, asr #26
   11ce4:	andeq	r1, r1, r8, asr sp
   11ce8:	andeq	r1, r1, r8, asr sp
   11cec:	andeq	r1, r1, r8, asr sp
   11cf0:	strdeq	r1, [r1], -r4
   11cf4:	ldr	r3, [pc, #100]	; 11d60 <__assert_fail@plt+0x3d8>
   11cf8:	mov	r2, #1
   11cfc:	mov	r0, #0
   11d00:	str	r2, [r3]
   11d04:	bx	lr
   11d08:	ldr	r3, [pc, #84]	; 11d64 <__assert_fail@plt+0x3dc>
   11d0c:	mov	r2, #1
   11d10:	mov	r0, #0
   11d14:	str	r2, [r3]
   11d18:	bx	lr
   11d1c:	ldr	r3, [pc, #68]	; 11d68 <__assert_fail@plt+0x3e0>
   11d20:	mov	r2, #1
   11d24:	mov	r0, #0
   11d28:	str	r2, [r3]
   11d2c:	bx	lr
   11d30:	ldr	r2, [pc, #52]	; 11d6c <__assert_fail@plt+0x3e4>
   11d34:	mov	r3, #0
   11d38:	mov	r0, r3
   11d3c:	str	r3, [r2]
   11d40:	bx	lr
   11d44:	ldr	r2, [pc, #36]	; 11d70 <__assert_fail@plt+0x3e8>
   11d48:	mov	r3, #0
   11d4c:	mov	r0, r3
   11d50:	str	r3, [r2]
   11d54:	bx	lr
   11d58:	mov	r0, #7
   11d5c:	bx	lr
   11d60:	strdeq	lr, [r2], -r8
   11d64:	andeq	lr, r2, r8, lsr r5
   11d68:	andeq	lr, r2, r4, lsr r5
   11d6c:	andeq	lr, r2, r0, ror #9
   11d70:	andeq	lr, r2, r4, lsl #3
   11d74:	push	{r0, r1, r2, r3}
   11d78:	ldr	r2, [pc, #120]	; 11df8 <__assert_fail@plt+0x470>
   11d7c:	push	{r4, r5, lr}
   11d80:	sub	sp, sp, #8192	; 0x2000
   11d84:	ldr	r2, [r2]
   11d88:	sub	sp, sp, #12
   11d8c:	cmp	r2, #0
   11d90:	add	r3, sp, #8192	; 0x2000
   11d94:	add	r2, sp, #8192	; 0x2000
   11d98:	addeq	r4, sp, #8
   11d9c:	add	r3, r3, #28
   11da0:	add	r2, r2, #24
   11da4:	moveq	r5, #1
   11da8:	addne	r4, sp, #8
   11dac:	str	r3, [sp, #4]
   11db0:	strbeq	r5, [r4], #1
   11db4:	ldr	r3, [sp, #4]
   11db8:	ldr	r2, [r2]
   11dbc:	ldr	r1, [pc, #56]	; 11dfc <__assert_fail@plt+0x474>
   11dc0:	mov	r0, r4
   11dc4:	movne	r5, #0
   11dc8:	bl	11910 <vsnprintf@plt>
   11dcc:	mov	r0, r4
   11dd0:	bl	117b4 <strlen@plt>
   11dd4:	add	r1, sp, #8
   11dd8:	add	r2, r0, r5
   11ddc:	mov	r0, #2
   11de0:	bl	11814 <write@plt>
   11de4:	add	sp, sp, #8192	; 0x2000
   11de8:	add	sp, sp, #12
   11dec:	pop	{r4, r5, lr}
   11df0:	add	sp, sp, #16
   11df4:	bx	lr
   11df8:	andeq	lr, r2, ip, lsr r5
   11dfc:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   11e00:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11e04:	mov	r9, r0
   11e08:	mov	r0, #100	; 0x64
   11e0c:	bl	16044 <argp_parse@@Base+0x2590>
   11e10:	subs	r6, r0, #0
   11e14:	movne	r4, r6
   11e18:	movne	r5, #100	; 0x64
   11e1c:	movne	r8, #1
   11e20:	movne	r7, #0
   11e24:	bne	11e38 <__assert_fail@plt+0x4b0>
   11e28:	b	11ebc <__assert_fail@plt+0x534>
   11e2c:	ldrb	r3, [r4, #-1]
   11e30:	cmp	r3, #0
   11e34:	beq	11e90 <__assert_fail@plt+0x508>
   11e38:	mov	r2, r8
   11e3c:	mov	r1, r4
   11e40:	mov	r0, r7
   11e44:	bl	115a4 <read@plt>
   11e48:	cmp	r0, #0
   11e4c:	ble	11e98 <__assert_fail@plt+0x510>
   11e50:	add	r4, r4, r0
   11e54:	add	r3, r6, r5
   11e58:	sub	r3, r3, r4
   11e5c:	cmp	r3, r5, lsr #3
   11e60:	bge	11e2c <__assert_fail@plt+0x4a4>
   11e64:	lsl	r5, r5, #1
   11e68:	mov	r0, r6
   11e6c:	mov	r1, r5
   11e70:	bl	16070 <argp_parse@@Base+0x25bc>
   11e74:	sub	r4, r4, r6
   11e78:	subs	r6, r0, #0
   11e7c:	beq	11ebc <__assert_fail@plt+0x534>
   11e80:	add	r4, r6, r4
   11e84:	ldrb	r3, [r4, #-1]
   11e88:	cmp	r3, #0
   11e8c:	bne	11e38 <__assert_fail@plt+0x4b0>
   11e90:	mov	r0, r6
   11e94:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11e98:	bne	11eb0 <__assert_fail@plt+0x528>
   11e9c:	mov	r1, r9
   11ea0:	ldr	r0, [pc, #40]	; 11ed0 <__assert_fail@plt+0x548>
   11ea4:	bl	11d74 <__assert_fail@plt+0x3ec>
   11ea8:	mov	r0, #1
   11eac:	bl	1179c <exit@plt>
   11eb0:	mov	r0, r9
   11eb4:	bl	116d0 <perror@plt>
   11eb8:	b	11ea8 <__assert_fail@plt+0x520>
   11ebc:	ldr	r0, [pc, #16]	; 11ed4 <__assert_fail@plt+0x54c>
   11ec0:	mov	r1, r9
   11ec4:	bl	11d74 <__assert_fail@plt+0x3ec>
   11ec8:	mov	r0, #1
   11ecc:	bl	1179c <exit@plt>
   11ed0:	andeq	ip, r1, r4, ror #22
   11ed4:	andeq	ip, r1, r8, asr #22
   11ed8:	push	{r4, r5, r6, lr}
   11edc:	mov	r6, r0
   11ee0:	bl	12df0 <__assert_fail@plt+0x1468>
   11ee4:	subs	r4, r0, #0
   11ee8:	beq	11fbc <__assert_fail@plt+0x634>
   11eec:	bl	117b4 <strlen@plt>
   11ef0:	mov	r5, #0
   11ef4:	adds	r0, r4, r0
   11ef8:	bcs	11f38 <__assert_fail@plt+0x5b0>
   11efc:	mov	r1, r5
   11f00:	mov	ip, #1
   11f04:	b	11f10 <__assert_fail@plt+0x588>
   11f08:	cmp	r4, r0
   11f0c:	bhi	11f38 <__assert_fail@plt+0x5b0>
   11f10:	mov	r3, r0
   11f14:	sub	r0, r0, #1
   11f18:	ldrb	r2, [r3]
   11f1c:	cmp	r2, #46	; 0x2e
   11f20:	bne	11f08 <__assert_fail@plt+0x580>
   11f24:	cmp	r1, #1
   11f28:	mov	r5, r3
   11f2c:	mov	r1, ip
   11f30:	bne	11f08 <__assert_fail@plt+0x580>
   11f34:	mov	r5, r3
   11f38:	mov	r0, r6
   11f3c:	bl	117b4 <strlen@plt>
   11f40:	adds	r0, r6, r0
   11f44:	bcs	11fb4 <__assert_fail@plt+0x62c>
   11f48:	mov	r1, #0
   11f4c:	mov	ip, r1
   11f50:	mov	lr, #1
   11f54:	b	11f60 <__assert_fail@plt+0x5d8>
   11f58:	cmp	r6, r0
   11f5c:	bhi	11f88 <__assert_fail@plt+0x600>
   11f60:	mov	r3, r0
   11f64:	sub	r0, r0, #1
   11f68:	ldrb	r2, [r3]
   11f6c:	cmp	r2, #46	; 0x2e
   11f70:	bne	11f58 <__assert_fail@plt+0x5d0>
   11f74:	cmp	ip, #1
   11f78:	mov	r1, r3
   11f7c:	mov	ip, lr
   11f80:	bne	11f58 <__assert_fail@plt+0x5d0>
   11f84:	mov	r1, r3
   11f88:	cmp	r1, #0
   11f8c:	cmpne	r5, #0
   11f90:	beq	11fb4 <__assert_fail@plt+0x62c>
   11f94:	mov	r0, r5
   11f98:	bl	116b8 <strcasecmp@plt>
   11f9c:	clz	r5, r0
   11fa0:	lsr	r5, r5, #5
   11fa4:	mov	r0, r4
   11fa8:	bl	14a30 <argp_parse@@Base+0xf7c>
   11fac:	mov	r0, r5
   11fb0:	pop	{r4, r5, r6, pc}
   11fb4:	mov	r5, #1
   11fb8:	b	11fa4 <__assert_fail@plt+0x61c>
   11fbc:	mov	r5, r4
   11fc0:	mov	r0, r5
   11fc4:	pop	{r4, r5, r6, pc}
   11fc8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11fcc:	sub	sp, sp, #11328	; 0x2c40
   11fd0:	sub	sp, sp, #4
   11fd4:	mov	r5, r0
   11fd8:	mov	r4, #1
   11fdc:	mov	r0, #70	; 0x46
   11fe0:	mov	r9, r2
   11fe4:	mov	r6, r1
   11fe8:	str	r4, [sp, #52]	; 0x34
   11fec:	bl	11670 <sysconf@plt>
   11ff0:	subs	r3, r0, #0
   11ff4:	movle	r3, #1024	; 0x400
   11ff8:	mov	r0, r3
   11ffc:	str	r3, [sp, #20]
   12000:	bl	15988 <argp_parse@@Base+0x1ed4>
   12004:	mov	r1, #0
   12008:	str	r0, [sp, #24]
   1200c:	mov	r0, #2
   12010:	bl	1161c <signal@plt>
   12014:	mov	r1, #0
   12018:	mov	r0, #3
   1201c:	bl	1161c <signal@plt>
   12020:	mov	r1, #0
   12024:	mov	r0, #15
   12028:	bl	1161c <signal@plt>
   1202c:	mov	ip, #3
   12030:	mov	r3, #8
   12034:	add	r2, sp, #100	; 0x64
   12038:	stmib	sp, {r3, ip}
   1203c:	add	r3, sp, #64	; 0x40
   12040:	str	r3, [sp]
   12044:	mov	r1, r9
   12048:	mov	r0, r6
   1204c:	mov	r3, #46	; 0x2e
   12050:	bl	11880 <getnameinfo@plt>
   12054:	subs	r8, r0, #0
   12058:	bne	12870 <__assert_fail@plt+0xee8>
   1205c:	mov	r1, r8
   12060:	mov	r2, #10
   12064:	add	r0, sp, #64	; 0x40
   12068:	bl	11580 <strtol@plt>
   1206c:	ldr	r3, [pc, #3124]	; 12ca8 <__assert_fail@plt+0x1320>
   12070:	str	r3, [sp, #276]	; 0x114
   12074:	uxth	sl, r0
   12078:	ldr	r0, [pc, #3116]	; 12cac <__assert_fail@plt+0x1324>
   1207c:	bl	115b0 <getprotobyname@plt>
   12080:	add	r3, sp, #404	; 0x194
   12084:	str	r3, [sp, #16]
   12088:	add	r3, sp, #276	; 0x114
   1208c:	mov	r2, r3
   12090:	str	r3, [sp, #32]
   12094:	ldr	r3, [sp, #16]
   12098:	cmp	r0, #0
   1209c:	ldrne	r8, [r0, #8]
   120a0:	str	r2, [sp]
   120a4:	mov	r1, r8
   120a8:	mov	r2, #4
   120ac:	mov	r0, r5
   120b0:	bl	116e8 <getsockopt@plt>
   120b4:	cmp	r0, #0
   120b8:	bne	1215c <__assert_fail@plt+0x7d4>
   120bc:	ldr	r3, [sp, #276]	; 0x114
   120c0:	cmp	r3, #0
   120c4:	beq	1215c <__assert_fail@plt+0x7d4>
   120c8:	ldr	r7, [pc, #3040]	; 12cb0 <__assert_fail@plt+0x1328>
   120cc:	ldr	r4, [sp, #16]
   120d0:	add	fp, sp, #3136	; 0xc40
   120d4:	mov	r0, fp
   120d8:	ldrb	r2, [r4]
   120dc:	mov	r1, r7
   120e0:	bl	118ec <sprintf@plt>
   120e4:	ldrb	r3, [r4]
   120e8:	add	fp, fp, #3
   120ec:	cmp	r3, #131	; 0x83
   120f0:	cmpne	r3, #137	; 0x89
   120f4:	beq	12848 <__assert_fail@plt+0xec0>
   120f8:	cmp	r3, #0
   120fc:	beq	12124 <__assert_fail@plt+0x79c>
   12100:	cmp	r3, #1
   12104:	beq	126c8 <__assert_fail@plt+0xd40>
   12108:	ldrb	r2, [r4, #1]
   1210c:	ldr	r3, [sp, #276]	; 0x114
   12110:	sub	r3, r3, r2
   12114:	cmp	r3, #0
   12118:	add	r4, r4, r2
   1211c:	str	r3, [sp, #276]	; 0x114
   12120:	bne	120d4 <__assert_fail@plt+0x74c>
   12124:	add	r3, sp, #3136	; 0xc40
   12128:	add	r2, sp, #100	; 0x64
   1212c:	ldr	r1, [pc, #2944]	; 12cb4 <__assert_fail@plt+0x132c>
   12130:	mov	r0, #5
   12134:	bl	118c8 <syslog@plt>
   12138:	ldr	r3, [sp, #276]	; 0x114
   1213c:	mov	r1, r8
   12140:	str	r3, [sp]
   12144:	mov	r2, #4
   12148:	mov	r3, #0
   1214c:	mov	r0, r5
   12150:	bl	1158c <setsockopt@plt>
   12154:	cmp	r0, #0
   12158:	bne	12b8c <__assert_fail@plt+0x1204>
   1215c:	sub	sl, sl, #512	; 0x200
   12160:	cmp	sl, #512	; 0x200
   12164:	bcs	1288c <__assert_fail@plt+0xf04>
   12168:	mov	r0, #60	; 0x3c
   1216c:	bl	11664 <alarm@plt>
   12170:	mov	r4, #0
   12174:	mov	r7, #1
   12178:	b	1218c <__assert_fail@plt+0x804>
   1217c:	add	r4, r4, r4, lsl #2
   12180:	sub	r3, r3, #48	; 0x30
   12184:	add	r3, r3, r4, lsl #1
   12188:	uxth	r4, r3
   1218c:	mov	r2, r7
   12190:	add	r1, sp, #3136	; 0xc40
   12194:	mov	r0, r5
   12198:	bl	115a4 <read@plt>
   1219c:	cmp	r0, #1
   121a0:	bne	1282c <__assert_fail@plt+0xea4>
   121a4:	ldrb	r3, [sp, #3136]	; 0xc40
   121a8:	cmp	r3, #0
   121ac:	bne	1217c <__assert_fail@plt+0x7f4>
   121b0:	mov	r8, r0
   121b4:	mov	r0, r3
   121b8:	bl	11664 <alarm@plt>
   121bc:	cmp	r4, #0
   121c0:	streq	r5, [sp, #28]
   121c4:	bne	1270c <__assert_fail@plt+0xd84>
   121c8:	cmp	r5, #0
   121cc:	bne	126e4 <__assert_fail@plt+0xd5c>
   121d0:	mov	r3, #0
   121d4:	mov	r2, #8
   121d8:	str	r2, [sp, #8]
   121dc:	str	r3, [sp, #4]
   121e0:	str	r3, [sp]
   121e4:	mov	r1, r9
   121e8:	ldr	r3, [pc, #2760]	; 12cb8 <__assert_fail@plt+0x1330>
   121ec:	ldr	r2, [sp, #16]
   121f0:	mov	r0, r6
   121f4:	bl	11880 <getnameinfo@plt>
   121f8:	cmp	r0, #0
   121fc:	beq	12550 <__assert_fail@plt+0xbc8>
   12200:	ldr	r3, [pc, #2740]	; 12cbc <__assert_fail@plt+0x1334>
   12204:	ldr	r3, [r3]
   12208:	cmp	r3, #0
   1220c:	addeq	r3, sp, #100	; 0x64
   12210:	streq	r3, [sp, #36]	; 0x24
   12214:	moveq	r5, r3
   12218:	bne	128a8 <__assert_fail@plt+0xf20>
   1221c:	ldr	r0, [pc, #2716]	; 12cc0 <__assert_fail@plt+0x1338>
   12220:	bl	11e00 <__assert_fail@plt+0x478>
   12224:	mov	fp, r0
   12228:	ldr	r0, [pc, #2708]	; 12cc4 <__assert_fail@plt+0x133c>
   1222c:	bl	11e00 <__assert_fail@plt+0x478>
   12230:	mov	r8, r0
   12234:	ldr	r0, [pc, #2700]	; 12cc8 <__assert_fail@plt+0x1340>
   12238:	bl	11e00 <__assert_fail@plt+0x478>
   1223c:	mov	r9, r0
   12240:	bl	117e4 <setpwent@plt>
   12244:	add	ip, sp, #48	; 0x30
   12248:	ldr	r3, [sp, #20]
   1224c:	ldr	r2, [sp, #24]
   12250:	add	r1, sp, #72	; 0x48
   12254:	mov	r0, r8
   12258:	str	ip, [sp]
   1225c:	bl	117cc <getpwnam_r@plt>
   12260:	subs	r7, r0, #0
   12264:	bne	128c8 <__assert_fail@plt+0xf40>
   12268:	ldr	r3, [sp, #48]	; 0x30
   1226c:	cmp	r3, #0
   12270:	beq	126a0 <__assert_fail@plt+0xd18>
   12274:	ldr	r0, [r3]
   12278:	bl	115bc <getspnam@plt>
   1227c:	subs	sl, r0, #0
   12280:	beq	128f8 <__assert_fail@plt+0xf70>
   12284:	ldr	r1, [sl, #4]
   12288:	ldrb	r3, [r1]
   1228c:	cmp	r3, #33	; 0x21
   12290:	beq	12afc <__assert_fail@plt+0x1174>
   12294:	mov	r2, #4
   12298:	ldr	r0, [pc, #2604]	; 12ccc <__assert_fail@plt+0x1344>
   1229c:	bl	11958 <strncmp@plt>
   122a0:	cmp	r0, #0
   122a4:	beq	12afc <__assert_fail@plt+0x1174>
   122a8:	add	r0, sp, #3136	; 0xc40
   122ac:	bl	11628 <time@plt>
   122b0:	ldr	r3, [sl, #28]
   122b4:	cmp	r3, #0
   122b8:	ble	122d8 <__assert_fail@plt+0x950>
   122bc:	ldr	r1, [pc, #2572]	; 12cd0 <__assert_fail@plt+0x1348>
   122c0:	ldr	r0, [sp, #3136]	; 0xc40
   122c4:	mul	r1, r1, r3
   122c8:	bl	11820 <difftime@plt>
   122cc:	vcmpe.f64	d0, #0.0
   122d0:	vmrs	APSR_nzcv, fpscr
   122d4:	bgt	12bc8 <__assert_fail@plt+0x1240>
   122d8:	ldrh	ip, [r6]
   122dc:	cmp	ip, #10
   122e0:	addeq	r0, r6, #8
   122e4:	addne	r0, r6, #4
   122e8:	cmp	r7, #0
   122ec:	bne	12b24 <__assert_fail@plt+0x119c>
   122f0:	ldr	r3, [sp, #48]	; 0x30
   122f4:	ldr	r2, [r3, #4]
   122f8:	cmp	r2, #0
   122fc:	beq	1230c <__assert_fail@plt+0x984>
   12300:	ldrb	r2, [r2]
   12304:	cmp	r2, #0
   12308:	bne	127c0 <__assert_fail@plt+0xe38>
   1230c:	ldr	r3, [r3, #8]
   12310:	cmp	r3, #0
   12314:	beq	1232c <__assert_fail@plt+0x9a4>
   12318:	mov	r1, #0
   1231c:	ldr	r0, [pc, #2480]	; 12cd4 <__assert_fail@plt+0x134c>
   12320:	bl	11838 <access@plt>
   12324:	cmp	r0, #0
   12328:	beq	12b60 <__assert_fail@plt+0x11d8>
   1232c:	mov	r2, #1
   12330:	ldr	r1, [pc, #2464]	; 12cd8 <__assert_fail@plt+0x1350>
   12334:	mov	r0, #2
   12338:	bl	11814 <write@plt>
   1233c:	cmp	r0, #0
   12340:	blt	12914 <__assert_fail@plt+0xf8c>
   12344:	ldr	r3, [pc, #2448]	; 12cdc <__assert_fail@plt+0x1354>
   12348:	cmp	r4, #0
   1234c:	mov	r4, #1
   12350:	str	r4, [r3]
   12354:	beq	123a4 <__assert_fail@plt+0xa1c>
   12358:	add	r0, sp, #56	; 0x38
   1235c:	bl	11850 <pipe@plt>
   12360:	cmp	r0, #0
   12364:	blt	12924 <__assert_fail@plt+0xf9c>
   12368:	bl	11874 <fork@plt>
   1236c:	cmn	r0, #1
   12370:	mov	r6, r0
   12374:	beq	12934 <__assert_fail@plt+0xfac>
   12378:	cmp	r0, #0
   1237c:	bne	12944 <__assert_fail@plt+0xfbc>
   12380:	ldr	r0, [sp, #28]
   12384:	bl	11970 <close@plt>
   12388:	ldr	r0, [sp, #56]	; 0x38
   1238c:	bl	11970 <close@plt>
   12390:	mov	r1, #2
   12394:	ldr	r0, [sp, #60]	; 0x3c
   12398:	bl	1167c <dup2@plt>
   1239c:	ldr	r0, [sp, #60]	; 0x3c
   123a0:	bl	11970 <close@plt>
   123a4:	bl	11790 <getpid@plt>
   123a8:	mov	r1, r0
   123ac:	mov	r0, #0
   123b0:	bl	118e0 <setpgid@plt>
   123b4:	ldr	r3, [sp, #48]	; 0x30
   123b8:	ldr	r2, [r3, #24]
   123bc:	ldr	r0, [r3, #12]
   123c0:	ldrb	r2, [r2]
   123c4:	cmp	r2, #0
   123c8:	ldreq	r2, [pc, #2320]	; 12ce0 <__assert_fail@plt+0x1358>
   123cc:	streq	r2, [r3, #24]
   123d0:	bl	11844 <setegid@plt>
   123d4:	ldr	r3, [sp, #48]	; 0x30
   123d8:	ldr	r0, [r3, #12]
   123dc:	bl	11730 <setgid@plt>
   123e0:	ldr	r3, [sp, #48]	; 0x30
   123e4:	ldr	r1, [r3, #12]
   123e8:	ldr	r0, [r3]
   123ec:	bl	116a0 <initgroups@plt>
   123f0:	ldr	r3, [sp, #48]	; 0x30
   123f4:	ldr	r0, [r3, #8]
   123f8:	bl	118d4 <setuid@plt>
   123fc:	ldr	r3, [sp, #48]	; 0x30
   12400:	ldr	r0, [r3, #20]
   12404:	bl	116ac <chdir@plt>
   12408:	cmp	r0, #0
   1240c:	blt	12770 <__assert_fail@plt+0xde8>
   12410:	ldr	r6, [sp, #48]	; 0x30
   12414:	ldr	r4, [pc, #2248]	; 12ce4 <__assert_fail@plt+0x135c>
   12418:	mov	r2, #255	; 0xff
   1241c:	ldr	r1, [r6, #20]
   12420:	sub	r0, r4, #264	; 0x108
   12424:	bl	1194c <strncat@plt>
   12428:	mov	r0, r4
   1242c:	bl	117b4 <strlen@plt>
   12430:	ldr	r3, [pc, #2224]	; 12ce8 <__assert_fail@plt+0x1360>
   12434:	add	ip, r4, r0
   12438:	mov	lr, r0
   1243c:	ldm	r3!, {r0, r1, r2}
   12440:	ldrh	r3, [r3]
   12444:	str	r0, [r4, lr]
   12448:	str	r2, [ip, #8]
   1244c:	strh	r3, [ip, #12]
   12450:	str	r1, [ip, #4]
   12454:	add	r0, r4, #20
   12458:	ldr	r1, [r6, #24]
   1245c:	mov	r2, #63	; 0x3f
   12460:	bl	1194c <strncat@plt>
   12464:	ldr	r1, [r6]
   12468:	add	r0, r4, #92	; 0x5c
   1246c:	mov	r2, #31
   12470:	bl	1194c <strncat@plt>
   12474:	ldr	r1, [r6]
   12478:	add	r0, r4, #132	; 0x84
   1247c:	mov	r2, #31
   12480:	bl	1194c <strncat@plt>
   12484:	mov	r2, #127	; 0x7f
   12488:	add	r0, r4, #176	; 0xb0
   1248c:	mov	r1, r5
   12490:	bl	1194c <strncat@plt>
   12494:	ldr	r3, [pc, #2128]	; 12cec <__assert_fail@plt+0x1364>
   12498:	ldr	r6, [r6, #24]
   1249c:	mov	r1, #47	; 0x2f
   124a0:	mov	r0, r6
   124a4:	add	r4, r4, #312	; 0x138
   124a8:	str	r4, [r3]
   124ac:	bl	118a4 <strrchr@plt>
   124b0:	cmp	r0, #0
   124b4:	addne	r6, r0, #1
   124b8:	bl	1188c <endpwent@plt>
   124bc:	ldr	r3, [pc, #2092]	; 12cf0 <__assert_fail@plt+0x1368>
   124c0:	ldr	r3, [r3]
   124c4:	cmp	r3, #0
   124c8:	bne	124dc <__assert_fail@plt+0xb54>
   124cc:	ldr	r3, [sp, #48]	; 0x30
   124d0:	ldr	r2, [r3, #8]
   124d4:	cmp	r2, #0
   124d8:	bne	124f8 <__assert_fail@plt+0xb70>
   124dc:	mov	r3, fp
   124e0:	stm	sp, {r5, r8, r9}
   124e4:	mov	r0, #38	; 0x26
   124e8:	ldr	r2, [pc, #2052]	; 12cf4 <__assert_fail@plt+0x136c>
   124ec:	ldr	r1, [pc, #2052]	; 12cf8 <__assert_fail@plt+0x1370>
   124f0:	bl	118c8 <syslog@plt>
   124f4:	ldr	r3, [sp, #48]	; 0x30
   124f8:	mov	r2, #0
   124fc:	ldr	r0, [r3, #24]
   12500:	mov	r1, r6
   12504:	mov	r3, r9
   12508:	str	r2, [sp]
   1250c:	ldr	r2, [pc, #2024]	; 12cfc <__assert_fail@plt+0x1374>
   12510:	bl	11898 <execl@plt>
   12514:	ldr	r3, [sp, #48]	; 0x30
   12518:	ldr	r1, [pc, #2016]	; 12d00 <__assert_fail@plt+0x1378>
   1251c:	mov	r0, #3
   12520:	ldr	r2, [r3]
   12524:	bl	118c8 <syslog@plt>
   12528:	bl	117f0 <__errno_location@plt>
   1252c:	ldr	r3, [sp, #48]	; 0x30
   12530:	ldr	r2, [pc, #1996]	; 12d04 <__assert_fail@plt+0x137c>
   12534:	ldr	r3, [r3, #24]
   12538:	ldr	r1, [r0]
   1253c:	mov	r0, #1
   12540:	bl	11700 <error@plt>
   12544:	add	sp, sp, #11328	; 0x2c40
   12548:	add	sp, sp, #4
   1254c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12550:	ldr	r3, [pc, #1968]	; 12d08 <__assert_fail@plt+0x1380>
   12554:	ldr	r3, [r3]
   12558:	cmp	r3, #0
   1255c:	bne	12570 <__assert_fail@plt+0xbe8>
   12560:	ldr	r0, [sp, #16]
   12564:	bl	11ed8 <__assert_fail@plt+0x550>
   12568:	cmp	r0, #0
   1256c:	beq	127ec <__assert_fail@plt+0xe64>
   12570:	ldr	r5, [sp, #32]
   12574:	mov	r2, #32
   12578:	mov	r1, #0
   1257c:	mov	r0, r5
   12580:	bl	11808 <memset@plt>
   12584:	ldrh	ip, [r6]
   12588:	add	r3, sp, #148	; 0x94
   1258c:	mov	r9, #1
   12590:	mov	r2, r5
   12594:	mov	r1, #0
   12598:	ldr	r0, [sp, #16]
   1259c:	str	ip, [sp, #280]	; 0x118
   125a0:	str	r9, [sp, #284]	; 0x11c
   125a4:	bl	11940 <getaddrinfo@plt>
   125a8:	subs	r8, r0, #0
   125ac:	bne	127f8 <__assert_fail@plt+0xe70>
   125b0:	ldr	r5, [sp, #148]	; 0x94
   125b4:	cmp	r5, #0
   125b8:	beq	12628 <__assert_fail@plt+0xca0>
   125bc:	add	r3, sp, #3136	; 0xc40
   125c0:	add	r7, r3, #4
   125c4:	mov	fp, #42	; 0x2a
   125c8:	mov	sl, #46	; 0x2e
   125cc:	mov	r2, fp
   125d0:	mov	r1, #0
   125d4:	mov	r0, r7
   125d8:	str	r8, [sp, #3136]	; 0xc40
   125dc:	bl	11808 <memset@plt>
   125e0:	ldr	r1, [r5, #16]
   125e4:	ldr	r0, [r5, #20]
   125e8:	mov	r3, sl
   125ec:	stmib	sp, {r8, r9}
   125f0:	str	r8, [sp]
   125f4:	add	r2, sp, #3136	; 0xc40
   125f8:	bl	11880 <getnameinfo@plt>
   125fc:	cmp	r0, #0
   12600:	bne	12618 <__assert_fail@plt+0xc90>
   12604:	add	r1, sp, #3136	; 0xc40
   12608:	add	r0, sp, #100	; 0x64
   1260c:	bl	11574 <strcmp@plt>
   12610:	cmp	r0, #0
   12614:	beq	12814 <__assert_fail@plt+0xe8c>
   12618:	ldr	r5, [r5, #28]
   1261c:	cmp	r5, #0
   12620:	bne	125cc <__assert_fail@plt+0xc44>
   12624:	ldr	r5, [sp, #148]	; 0x94
   12628:	mov	r0, r5
   1262c:	bl	11934 <freeaddrinfo@plt>
   12630:	add	r2, sp, #100	; 0x64
   12634:	ldr	r3, [sp, #16]
   12638:	ldr	r1, [pc, #1740]	; 12d0c <__assert_fail@plt+0x1384>
   1263c:	mov	r0, #5
   12640:	mov	r5, r2
   12644:	bl	118c8 <syslog@plt>
   12648:	ldr	r7, [pc, #1728]	; 12d10 <__assert_fail@plt+0x1388>
   1264c:	ldr	r0, [pc, #1644]	; 12cc0 <__assert_fail@plt+0x1338>
   12650:	bl	11e00 <__assert_fail@plt+0x478>
   12654:	mov	fp, r0
   12658:	ldr	r0, [pc, #1636]	; 12cc4 <__assert_fail@plt+0x133c>
   1265c:	bl	11e00 <__assert_fail@plt+0x478>
   12660:	mov	r8, r0
   12664:	ldr	r0, [pc, #1628]	; 12cc8 <__assert_fail@plt+0x1340>
   12668:	bl	11e00 <__assert_fail@plt+0x478>
   1266c:	mov	r9, r0
   12670:	bl	117e4 <setpwent@plt>
   12674:	add	ip, sp, #48	; 0x30
   12678:	ldr	r3, [sp, #20]
   1267c:	ldr	r2, [sp, #24]
   12680:	add	r1, sp, #72	; 0x48
   12684:	mov	r0, r8
   12688:	str	ip, [sp]
   1268c:	bl	117cc <getpwnam_r@plt>
   12690:	ldr	r3, [sp, #16]
   12694:	str	r3, [sp, #36]	; 0x24
   12698:	cmp	r0, #0
   1269c:	beq	12268 <__assert_fail@plt+0x8e0>
   126a0:	mov	r3, r5
   126a4:	stm	sp, {r8, r9}
   126a8:	mov	r2, fp
   126ac:	ldr	r1, [pc, #1632]	; 12d14 <__assert_fail@plt+0x138c>
   126b0:	mov	r0, #38	; 0x26
   126b4:	bl	118c8 <syslog@plt>
   126b8:	ldr	r3, [pc, #1624]	; 12d18 <__assert_fail@plt+0x1390>
   126bc:	cmp	r7, #0
   126c0:	moveq	r7, r3
   126c4:	b	128e4 <__assert_fail@plt+0xf5c>
   126c8:	ldr	r3, [sp, #276]	; 0x114
   126cc:	add	r4, r4, #1
   126d0:	sub	r3, r3, #1
   126d4:	cmp	r3, #0
   126d8:	str	r3, [sp, #276]	; 0x114
   126dc:	bne	120d4 <__assert_fail@plt+0x74c>
   126e0:	b	12124 <__assert_fail@plt+0x79c>
   126e4:	mov	r1, #0
   126e8:	mov	r0, r5
   126ec:	bl	1167c <dup2@plt>
   126f0:	mov	r1, #1
   126f4:	mov	r0, r5
   126f8:	bl	1167c <dup2@plt>
   126fc:	mov	r0, r5
   12700:	mov	r1, #2
   12704:	bl	1167c <dup2@plt>
   12708:	b	121d0 <__assert_fail@plt+0x848>
   1270c:	ldr	r3, [pc, #1544]	; 12d1c <__assert_fail@plt+0x1394>
   12710:	ldrh	r1, [r6]
   12714:	add	r0, sp, #3136	; 0xc40
   12718:	str	r3, [sp, #3136]	; 0xc40
   1271c:	bl	117a8 <rresvport_af@plt>
   12720:	subs	r3, r0, #0
   12724:	str	r3, [sp, #28]
   12728:	blt	12ba0 <__assert_fail@plt+0x1218>
   1272c:	sub	r3, r4, #512	; 0x200
   12730:	cmp	r3, #512	; 0x200
   12734:	bcs	12bb4 <__assert_fail@plt+0x122c>
   12738:	rev16	r3, r4
   1273c:	strh	r3, [r6, #2]
   12740:	mov	r2, r9
   12744:	mov	r1, r6
   12748:	ldr	r0, [sp, #28]
   1274c:	bl	1197c <connect@plt>
   12750:	cmp	r0, #0
   12754:	bge	121c8 <__assert_fail@plt+0x840>
   12758:	mov	r0, #6
   1275c:	mov	r2, r4
   12760:	ldr	r1, [pc, #1464]	; 12d20 <__assert_fail@plt+0x1398>
   12764:	bl	118c8 <syslog@plt>
   12768:	mov	r0, #1
   1276c:	bl	1179c <exit@plt>
   12770:	mov	r3, r5
   12774:	mov	r2, fp
   12778:	ldr	r1, [pc, #1444]	; 12d24 <__assert_fail@plt+0x139c>
   1277c:	mov	r0, #38	; 0x26
   12780:	stm	sp, {r8, r9}
   12784:	bl	118c8 <syslog@plt>
   12788:	ldr	r0, [pc, #1432]	; 12d28 <__assert_fail@plt+0x13a0>
   1278c:	bl	11d74 <__assert_fail@plt+0x3ec>
   12790:	ldr	r0, [pc, #1428]	; 12d2c <__assert_fail@plt+0x13a4>
   12794:	bl	116ac <chdir@plt>
   12798:	cmp	r0, #0
   1279c:	bge	12410 <__assert_fail@plt+0xa88>
   127a0:	mov	r0, #35	; 0x23
   127a4:	str	r8, [sp]
   127a8:	mov	r3, r5
   127ac:	mov	r2, fp
   127b0:	ldr	r1, [pc, #1400]	; 12d30 <__assert_fail@plt+0x13a8>
   127b4:	bl	118c8 <syslog@plt>
   127b8:	mov	r0, #1
   127bc:	bl	1179c <exit@plt>
   127c0:	ldr	r1, [r3, #8]
   127c4:	mov	r2, fp
   127c8:	clz	r1, r1
   127cc:	str	ip, [sp]
   127d0:	lsr	r1, r1, #5
   127d4:	mov	r3, r8
   127d8:	bl	11724 <iruserok_af@plt>
   127dc:	cmp	r0, #0
   127e0:	blt	12b24 <__assert_fail@plt+0x119c>
   127e4:	ldr	r3, [sp, #48]	; 0x30
   127e8:	b	1230c <__assert_fail@plt+0x984>
   127ec:	str	r0, [sp, #36]	; 0x24
   127f0:	ldr	r5, [sp, #16]
   127f4:	b	1221c <__assert_fail@plt+0x894>
   127f8:	ldr	r2, [sp, #16]
   127fc:	ldr	r1, [pc, #1328]	; 12d34 <__assert_fail@plt+0x13ac>
   12800:	mov	r0, #6
   12804:	add	r5, sp, #100	; 0x64
   12808:	bl	118c8 <syslog@plt>
   1280c:	ldr	r7, [pc, #1316]	; 12d38 <__assert_fail@plt+0x13b0>
   12810:	b	1264c <__assert_fail@plt+0xcc4>
   12814:	mov	r3, r0
   12818:	ldr	r0, [sp, #148]	; 0x94
   1281c:	mov	r7, r3
   12820:	bl	11934 <freeaddrinfo@plt>
   12824:	ldr	r5, [sp, #16]
   12828:	b	1264c <__assert_fail@plt+0xcc4>
   1282c:	cmp	r0, #0
   12830:	blt	12860 <__assert_fail@plt+0xed8>
   12834:	mov	r0, r5
   12838:	mov	r1, #2
   1283c:	bl	1185c <shutdown@plt>
   12840:	mov	r0, #1
   12844:	bl	1179c <exit@plt>
   12848:	mov	r0, #5
   1284c:	add	r2, sp, #100	; 0x64
   12850:	ldr	r1, [pc, #1252]	; 12d3c <__assert_fail@plt+0x13b4>
   12854:	bl	118c8 <syslog@plt>
   12858:	mov	r0, #1
   1285c:	bl	1179c <exit@plt>
   12860:	ldr	r1, [pc, #1240]	; 12d40 <__assert_fail@plt+0x13b8>
   12864:	mov	r0, #5
   12868:	bl	118c8 <syslog@plt>
   1286c:	b	12834 <__assert_fail@plt+0xeac>
   12870:	bl	115ec <gai_strerror@plt>
   12874:	ldr	r1, [pc, #1224]	; 12d44 <__assert_fail@plt+0x13bc>
   12878:	mov	r2, r0
   1287c:	mov	r0, #4
   12880:	bl	118c8 <syslog@plt>
   12884:	mov	r0, r4
   12888:	bl	1179c <exit@plt>
   1288c:	mov	r0, #37	; 0x25
   12890:	add	r3, sp, #64	; 0x40
   12894:	add	r2, sp, #100	; 0x64
   12898:	ldr	r1, [pc, #1192]	; 12d48 <__assert_fail@plt+0x13c0>
   1289c:	bl	118c8 <syslog@plt>
   128a0:	mov	r0, #1
   128a4:	bl	1179c <exit@plt>
   128a8:	add	r2, sp, #100	; 0x64
   128ac:	ldr	r1, [pc, #1176]	; 12d4c <__assert_fail@plt+0x13c4>
   128b0:	mov	r0, #5
   128b4:	bl	118c8 <syslog@plt>
   128b8:	ldr	r0, [pc, #1168]	; 12d50 <__assert_fail@plt+0x13c8>
   128bc:	bl	11d74 <__assert_fail@plt+0x3ec>
   128c0:	mov	r0, #1
   128c4:	bl	1179c <exit@plt>
   128c8:	stm	sp, {r8, r9}
   128cc:	mov	r3, r5
   128d0:	mov	r2, fp
   128d4:	ldr	r1, [pc, #1080]	; 12d14 <__assert_fail@plt+0x138c>
   128d8:	mov	r0, #38	; 0x26
   128dc:	bl	118c8 <syslog@plt>
   128e0:	ldr	r7, [pc, #1072]	; 12d18 <__assert_fail@plt+0x1390>
   128e4:	mov	r0, r7
   128e8:	ldr	r1, [sp, #36]	; 0x24
   128ec:	bl	11d74 <__assert_fail@plt+0x3ec>
   128f0:	mov	r0, #1
   128f4:	bl	1179c <exit@plt>
   128f8:	ldr	r1, [pc, #1108]	; 12d54 <__assert_fail@plt+0x13cc>
   128fc:	mov	r0, #35	; 0x23
   12900:	bl	118c8 <syslog@plt>
   12904:	ldr	r3, [pc, #1036]	; 12d18 <__assert_fail@plt+0x1390>
   12908:	cmp	r7, #0
   1290c:	moveq	r7, r3
   12910:	b	128e4 <__assert_fail@plt+0xf5c>
   12914:	ldr	r0, [pc, #1084]	; 12d58 <__assert_fail@plt+0x13d0>
   12918:	bl	11d74 <__assert_fail@plt+0x3ec>
   1291c:	mov	r0, #1
   12920:	bl	1179c <exit@plt>
   12924:	ldr	r0, [pc, #1072]	; 12d5c <__assert_fail@plt+0x13d4>
   12928:	bl	11d74 <__assert_fail@plt+0x3ec>
   1292c:	mov	r0, r4
   12930:	bl	1179c <exit@plt>
   12934:	ldr	r0, [pc, #1060]	; 12d60 <__assert_fail@plt+0x13d8>
   12938:	bl	11d74 <__assert_fail@plt+0x3ec>
   1293c:	mov	r0, r4
   12940:	bl	1179c <exit@plt>
   12944:	mov	r0, #0
   12948:	bl	11970 <close@plt>
   1294c:	mov	r0, r4
   12950:	bl	11970 <close@plt>
   12954:	mov	r0, #2
   12958:	bl	11970 <close@plt>
   1295c:	ldr	r0, [sp, #60]	; 0x3c
   12960:	bl	11970 <close@plt>
   12964:	mov	r2, #128	; 0x80
   12968:	mov	r1, #0
   1296c:	ldr	r0, [sp, #32]
   12970:	bl	11808 <memset@plt>
   12974:	ldr	r3, [sp, #28]
   12978:	ldr	r7, [sp, #56]	; 0x38
   1297c:	cmp	r3, #0
   12980:	asr	r2, r3, #31
   12984:	add	r5, r3, #31
   12988:	movge	r5, r3
   1298c:	lsr	r2, r2, #27
   12990:	add	r8, r3, r2
   12994:	cmp	r7, #0
   12998:	asr	r5, r5, #5
   1299c:	add	ip, r7, #31
   129a0:	and	r8, r8, #31
   129a4:	movge	ip, r7
   129a8:	add	r1, sp, #3136	; 0xc40
   129ac:	add	r5, r1, r5, lsl #2
   129b0:	sub	r2, r8, r2
   129b4:	asr	r1, r7, #31
   129b8:	asr	ip, ip, #5
   129bc:	ldr	r0, [r5, #-2860]	; 0xfffff4d4
   129c0:	lsl	r8, r4, r2
   129c4:	lsr	r1, r1, #27
   129c8:	add	r2, sp, #3136	; 0xc40
   129cc:	add	ip, r2, ip, lsl #2
   129d0:	add	r2, r7, r1
   129d4:	orr	r0, r0, r8
   129d8:	and	r2, r2, #31
   129dc:	str	r0, [r5, #-2860]	; 0xfffff4d4
   129e0:	sub	r2, r2, r1
   129e4:	ldr	r1, [ip, #-2860]	; 0xfffff4d4
   129e8:	cmp	r3, r7
   129ec:	orr	r4, r1, r4, lsl r2
   129f0:	mov	r0, r7
   129f4:	add	r2, sp, #52	; 0x34
   129f8:	ldr	r1, [pc, #868]	; 12d64 <__assert_fail@plt+0x13dc>
   129fc:	movge	r7, r3
   12a00:	str	r4, [ip, #-2860]	; 0xfffff4d4
   12a04:	bl	14b38 <argp_parse@@Base+0x1084>
   12a08:	add	r3, sp, #3136	; 0xc40
   12a0c:	sub	r3, r3, #2848	; 0xb20
   12a10:	sub	r3, r3, #12
   12a14:	add	r7, r7, #1
   12a18:	add	sl, sp, #47	; 0x2f
   12a1c:	add	fp, sp, #148	; 0x94
   12a20:	str	r3, [sp, #16]
   12a24:	mov	r9, #0
   12a28:	b	12ac4 <__assert_fail@plt+0x113c>
   12a2c:	ldr	r3, [r5, #-2988]	; 0xfffff454
   12a30:	tst	r8, r3
   12a34:	bne	12c24 <__assert_fail@plt+0x129c>
   12a38:	ldr	r1, [sp, #56]	; 0x38
   12a3c:	add	r2, sp, #3136	; 0xc40
   12a40:	cmp	r1, #0
   12a44:	add	r3, r1, #31
   12a48:	movge	r3, r1
   12a4c:	asr	r0, r1, #31
   12a50:	asr	r3, r3, #5
   12a54:	lsr	r0, r0, #27
   12a58:	add	r3, r2, r3, lsl #2
   12a5c:	add	r2, r1, r0
   12a60:	and	r2, r2, #31
   12a64:	ldr	ip, [r3, #-2988]	; 0xfffff454
   12a68:	mov	r4, #1
   12a6c:	sub	r3, r2, r0
   12a70:	ands	r3, ip, r4, lsl r3
   12a74:	bne	12bec <__assert_fail@plt+0x1264>
   12a78:	ldr	r3, [r5, #-2860]	; 0xfffff4d4
   12a7c:	tst	r8, r3
   12a80:	bne	12ac4 <__assert_fail@plt+0x113c>
   12a84:	ldr	r3, [sp, #56]	; 0x38
   12a88:	add	ip, sp, #3136	; 0xc40
   12a8c:	cmp	r3, #0
   12a90:	add	r2, r3, #31
   12a94:	movge	r2, r3
   12a98:	asr	r0, r3, #31
   12a9c:	asr	r2, r2, #5
   12aa0:	lsr	r0, r0, #27
   12aa4:	add	r2, ip, r2, lsl #2
   12aa8:	add	r3, r3, r0
   12aac:	and	r3, r3, #31
   12ab0:	mov	r1, #1
   12ab4:	ldr	r2, [r2, #-2860]	; 0xfffff4d4
   12ab8:	sub	r3, r3, r0
   12abc:	ands	r3, r2, r1, lsl r3
   12ac0:	beq	12af4 <__assert_fail@plt+0x116c>
   12ac4:	mov	r2, #128	; 0x80
   12ac8:	ldr	r1, [sp, #16]
   12acc:	mov	r0, fp
   12ad0:	bl	11610 <memcpy@plt>
   12ad4:	mov	r3, #0
   12ad8:	str	r9, [sp]
   12adc:	mov	r2, r3
   12ae0:	add	r1, sp, #148	; 0x94
   12ae4:	mov	r0, r7
   12ae8:	bl	11640 <select@plt>
   12aec:	cmp	r0, #0
   12af0:	bge	12a2c <__assert_fail@plt+0x10a4>
   12af4:	mov	r0, #0
   12af8:	bl	1179c <exit@plt>
   12afc:	stm	sp, {r8, r9}
   12b00:	mov	r3, r5
   12b04:	mov	r2, fp
   12b08:	ldr	r1, [pc, #600]	; 12d68 <__assert_fail@plt+0x13e0>
   12b0c:	mov	r0, #38	; 0x26
   12b10:	bl	118c8 <syslog@plt>
   12b14:	cmp	r7, #0
   12b18:	bne	128e4 <__assert_fail@plt+0xf5c>
   12b1c:	ldr	r7, [pc, #556]	; 12d50 <__assert_fail@plt+0x13c8>
   12b20:	b	128e4 <__assert_fail@plt+0xf5c>
   12b24:	ldr	r3, [pc, #576]	; 12d6c <__assert_fail@plt+0x13e4>
   12b28:	ldr	r3, [r3]
   12b2c:	cmp	r3, #0
   12b30:	beq	12b70 <__assert_fail@plt+0x11e8>
   12b34:	stmib	sp, {r3, r9}
   12b38:	str	r8, [sp]
   12b3c:	mov	r3, r5
   12b40:	mov	r2, fp
   12b44:	ldr	r1, [pc, #548]	; 12d70 <__assert_fail@plt+0x13e8>
   12b48:	mov	r0, #38	; 0x26
   12b4c:	bl	118c8 <syslog@plt>
   12b50:	ldr	r3, [pc, #504]	; 12d50 <__assert_fail@plt+0x13c8>
   12b54:	cmp	r7, #0
   12b58:	moveq	r7, r3
   12b5c:	b	128e4 <__assert_fail@plt+0xf5c>
   12b60:	ldr	r0, [pc, #524]	; 12d74 <__assert_fail@plt+0x13ec>
   12b64:	bl	11d74 <__assert_fail@plt+0x3ec>
   12b68:	mov	r0, #1
   12b6c:	bl	1179c <exit@plt>
   12b70:	stm	sp, {r8, r9}
   12b74:	mov	r3, r5
   12b78:	mov	r2, fp
   12b7c:	ldr	r1, [pc, #500]	; 12d78 <__assert_fail@plt+0x13f0>
   12b80:	mov	r0, #38	; 0x26
   12b84:	bl	118c8 <syslog@plt>
   12b88:	b	12b50 <__assert_fail@plt+0x11c8>
   12b8c:	mov	r0, #3
   12b90:	ldr	r1, [pc, #484]	; 12d7c <__assert_fail@plt+0x13f4>
   12b94:	bl	118c8 <syslog@plt>
   12b98:	mov	r0, #1
   12b9c:	bl	1179c <exit@plt>
   12ba0:	mov	r0, #3
   12ba4:	ldr	r1, [pc, #468]	; 12d80 <__assert_fail@plt+0x13f8>
   12ba8:	bl	118c8 <syslog@plt>
   12bac:	mov	r0, r8
   12bb0:	bl	1179c <exit@plt>
   12bb4:	mov	r0, #3
   12bb8:	ldr	r1, [pc, #452]	; 12d84 <__assert_fail@plt+0x13fc>
   12bbc:	bl	118c8 <syslog@plt>
   12bc0:	mov	r0, r8
   12bc4:	bl	1179c <exit@plt>
   12bc8:	stm	sp, {r8, r9}
   12bcc:	mov	r3, r5
   12bd0:	mov	r2, fp
   12bd4:	ldr	r1, [pc, #428]	; 12d88 <__assert_fail@plt+0x1400>
   12bd8:	mov	r0, #38	; 0x26
   12bdc:	bl	118c8 <syslog@plt>
   12be0:	cmp	r7, #0
   12be4:	bne	128e4 <__assert_fail@plt+0xf5c>
   12be8:	b	12b1c <__assert_fail@plt+0x1194>
   12bec:	str	r1, [sp, #20]
   12bf0:	bl	117f0 <__errno_location@plt>
   12bf4:	ldr	r1, [sp, #20]
   12bf8:	mov	r2, #8192	; 0x2000
   12bfc:	str	r9, [r0]
   12c00:	mov	r0, r1
   12c04:	add	r1, sp, #3136	; 0xc40
   12c08:	bl	115a4 <read@plt>
   12c0c:	subs	r2, r0, #0
   12c10:	ble	12c4c <__assert_fail@plt+0x12c4>
   12c14:	add	r1, sp, #3136	; 0xc40
   12c18:	ldr	r0, [sp, #28]
   12c1c:	bl	11814 <write@plt>
   12c20:	b	12a78 <__assert_fail@plt+0x10f0>
   12c24:	mov	r2, #1
   12c28:	mov	r1, sl
   12c2c:	ldr	r0, [sp, #28]
   12c30:	bl	115a4 <read@plt>
   12c34:	cmp	r0, #0
   12c38:	ble	12c98 <__assert_fail@plt+0x1310>
   12c3c:	ldrb	r1, [sp, #47]	; 0x2f
   12c40:	mov	r0, r6
   12c44:	bl	11694 <killpg@plt>
   12c48:	b	12a38 <__assert_fail@plt+0x10b0>
   12c4c:	mov	r1, #2
   12c50:	ldr	r0, [sp, #28]
   12c54:	bl	1185c <shutdown@plt>
   12c58:	ldr	r3, [sp, #56]	; 0x38
   12c5c:	add	r0, sp, #3136	; 0xc40
   12c60:	cmp	r3, #0
   12c64:	add	r2, r3, #31
   12c68:	movge	r2, r3
   12c6c:	asr	r1, r3, #31
   12c70:	asr	r2, r2, #5
   12c74:	lsr	r1, r1, #27
   12c78:	add	r2, r0, r2, lsl #2
   12c7c:	add	r3, r3, r1
   12c80:	and	r3, r3, #31
   12c84:	ldr	r0, [r2, #-2860]	; 0xfffff4d4
   12c88:	sub	r3, r3, r1
   12c8c:	bic	r3, r0, r4, lsl r3
   12c90:	str	r3, [r2, #-2860]	; 0xfffff4d4
   12c94:	b	12a78 <__assert_fail@plt+0x10f0>
   12c98:	ldr	r3, [r5, #-2860]	; 0xfffff4d4
   12c9c:	bic	r3, r3, r8
   12ca0:	str	r3, [r5, #-2860]	; 0xfffff4d4
   12ca4:	b	12a38 <__assert_fail@plt+0x10b0>
   12ca8:	andeq	r0, r0, sl, lsr #21
   12cac:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   12cb0:	andeq	ip, r1, r0, lsl #24
   12cb4:	andeq	ip, r1, r0, asr #24
   12cb8:	andeq	r0, r0, r1, lsl #8
   12cbc:	strdeq	lr, [r2], -r8
   12cc0:	andeq	ip, r1, r0, asr sp
   12cc4:	andeq	ip, r1, r8, asr sp
   12cc8:	andeq	ip, r1, r0, ror #26
   12ccc:	ldrdeq	ip, [r1], -r4
   12cd0:	andeq	r5, r1, r0, lsl #3
   12cd4:	muleq	r1, r8, lr
   12cd8:	andeq	ip, r1, ip, lsr #22
   12cdc:	andeq	lr, r2, ip, lsr r5
   12ce0:	andeq	ip, r1, r4, lsl #30
   12ce4:	muleq	r2, r0, r2
   12ce8:	andeq	ip, r1, r8, ror pc
   12cec:	ldrdeq	lr, [r2], -ip
   12cf0:	andeq	lr, r2, r8, lsr r5
   12cf4:	andeq	sp, r1, ip, asr #24
   12cf8:	andeq	ip, r1, r8, lsl #31
   12cfc:	andeq	ip, r1, ip, lsr #31
   12d00:			; <UNDEFINED> instruction: 0x0001cfb0
   12d04:	andeq	ip, r1, ip, asr #31
   12d08:	andeq	lr, r2, r4, lsr r5
   12d0c:	andeq	ip, r1, r0, ror #31
   12d10:	andeq	ip, r1, r4, lsr #23
   12d14:	andeq	ip, r1, r8, lsl #27
   12d18:	andeq	ip, r1, r4, asr #23
   12d1c:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   12d20:	andeq	ip, r1, r0, lsl sp
   12d24:	andeq	ip, r1, ip, lsl #30
   12d28:	andeq	ip, r1, r8, lsr pc
   12d2c:	andeq	ip, r1, r0, asr pc
   12d30:	andeq	ip, r1, r4, asr pc
   12d34:	andeq	ip, r1, ip, lsr #26
   12d38:	andeq	ip, r1, r4, ror fp
   12d3c:	andeq	ip, r1, r8, lsl #24
   12d40:	andeq	ip, r1, r4, asr #25
   12d44:	andeq	ip, r1, ip, ror #23
   12d48:	muleq	r1, ip, ip
   12d4c:	andeq	ip, r1, r8, ror #26
   12d50:	ldrdeq	ip, [r1], -r8
   12d54:			; <UNDEFINED> instruction: 0x0001cdb0
   12d58:	andeq	ip, r1, r4, asr #29
   12d5c:	ldrdeq	ip, [r1], -r8
   12d60:	andeq	ip, r1, ip, ror #29
   12d64:	andeq	r5, r0, r1, lsr #8
   12d68:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   12d6c:	strdeq	lr, [r2], -r0
   12d70:	andeq	ip, r1, r8, lsr lr
   12d74:	andeq	ip, r1, r8, lsr #29
   12d78:	andeq	ip, r1, ip, ror #28
   12d7c:	andeq	ip, r1, ip, ror ip
   12d80:	ldrdeq	ip, [r1], -r0
   12d84:	andeq	ip, r1, ip, ror #25
   12d88:	andeq	ip, r1, r8, lsl #28
   12d8c:	push	{r4, lr}
   12d90:	mov	r4, r0
   12d94:	bl	117b4 <strlen@plt>
   12d98:	adds	r3, r4, r0
   12d9c:	bcs	12de8 <__assert_fail@plt+0x1460>
   12da0:	mov	ip, #0
   12da4:	mov	r0, ip
   12da8:	mov	lr, #1
   12dac:	b	12db8 <__assert_fail@plt+0x1430>
   12db0:	cmp	r4, r3
   12db4:	bhi	12de4 <__assert_fail@plt+0x145c>
   12db8:	mov	r2, r3
   12dbc:	sub	r3, r3, #1
   12dc0:	ldrb	r1, [r2]
   12dc4:	cmp	r1, #46	; 0x2e
   12dc8:	bne	12db0 <__assert_fail@plt+0x1428>
   12dcc:	cmp	ip, #1
   12dd0:	mov	r0, r2
   12dd4:	mov	ip, lr
   12dd8:	bne	12db0 <__assert_fail@plt+0x1428>
   12ddc:	mov	r0, r2
   12de0:	pop	{r4, pc}
   12de4:	pop	{r4, pc}
   12de8:	mov	r0, #0
   12dec:	pop	{r4, pc}
   12df0:	push	{r4, r5, r6, r7, r8, r9, lr}
   12df4:	sub	sp, sp, #1088	; 0x440
   12df8:	sub	sp, sp, #4
   12dfc:	bl	117f0 <__errno_location@plt>
   12e00:	mov	r4, #0
   12e04:	mov	r6, r4
   12e08:	mov	r7, r4
   12e0c:	mov	r8, r0
   12e10:	b	12e48 <__assert_fail@plt+0x14c0>
   12e14:	bl	1170c <gethostname@plt>
   12e18:	mov	r6, r5
   12e1c:	mov	r2, r4
   12e20:	mov	r1, r7
   12e24:	subs	r9, r0, #0
   12e28:	mov	r0, r5
   12e2c:	bne	12e3c <__assert_fail@plt+0x14b4>
   12e30:	bl	1182c <memchr@plt>
   12e34:	cmp	r0, #0
   12e38:	beq	12e48 <__assert_fail@plt+0x14c0>
   12e3c:	ldr	r3, [r8]
   12e40:	cmp	r3, #36	; 0x24
   12e44:	bne	12e88 <__assert_fail@plt+0x1500>
   12e48:	add	r4, r4, #256	; 0x100
   12e4c:	mov	r1, r4
   12e50:	str	r7, [r8]
   12e54:	mov	r0, r6
   12e58:	bl	16070 <argp_parse@@Base+0x25bc>
   12e5c:	mov	r1, r4
   12e60:	subs	r5, r0, #0
   12e64:	bne	12e14 <__assert_fail@plt+0x148c>
   12e68:	mov	r3, #12
   12e6c:	mov	r0, r6
   12e70:	str	r3, [r8]
   12e74:	bl	14a30 <argp_parse@@Base+0xf7c>
   12e78:	mov	r0, r5
   12e7c:	add	sp, sp, #1088	; 0x440
   12e80:	add	sp, sp, #4
   12e84:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12e88:	cmp	r3, #0
   12e8c:	cmpne	r9, #0
   12e90:	movne	r9, #1
   12e94:	moveq	r9, #0
   12e98:	bne	12f38 <__assert_fail@plt+0x15b0>
   12e9c:	mov	r2, #32
   12ea0:	mov	r1, r9
   12ea4:	add	r0, sp, #28
   12ea8:	bl	11808 <memset@plt>
   12eac:	add	r3, sp, #24
   12eb0:	mov	ip, #2
   12eb4:	add	r2, sp, #28
   12eb8:	mov	r1, r9
   12ebc:	mov	r0, r5
   12ec0:	str	ip, [sp, #32]
   12ec4:	bl	11940 <getaddrinfo@plt>
   12ec8:	subs	r3, r0, #0
   12ecc:	bne	12e78 <__assert_fail@plt+0x14f0>
   12ed0:	ldr	r2, [sp, #24]
   12ed4:	add	r1, sp, #60	; 0x3c
   12ed8:	str	r1, [sp, #20]
   12edc:	mov	ip, #8
   12ee0:	ldr	r1, [r2, #16]
   12ee4:	ldr	r0, [r2, #20]
   12ee8:	str	r3, [sp, #4]
   12eec:	str	r3, [sp]
   12ef0:	ldr	r2, [sp, #20]
   12ef4:	str	ip, [sp, #8]
   12ef8:	ldr	r3, [pc, #72]	; 12f48 <__assert_fail@plt+0x15c0>
   12efc:	bl	11880 <getnameinfo@plt>
   12f00:	cmp	r0, #0
   12f04:	beq	12f20 <__assert_fail@plt+0x1598>
   12f08:	ldr	r0, [sp, #24]
   12f0c:	bl	11934 <freeaddrinfo@plt>
   12f10:	mov	r0, r5
   12f14:	add	sp, sp, #1088	; 0x440
   12f18:	add	sp, sp, #4
   12f1c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12f20:	mov	r0, r5
   12f24:	bl	14a30 <argp_parse@@Base+0xf7c>
   12f28:	ldr	r0, [sp, #20]
   12f2c:	bl	11658 <strdup@plt>
   12f30:	mov	r5, r0
   12f34:	b	12f08 <__assert_fail@plt+0x1580>
   12f38:	mov	r0, r5
   12f3c:	bl	14a30 <argp_parse@@Base+0xf7c>
   12f40:	mov	r5, #0
   12f44:	b	12e78 <__assert_fail@plt+0x14f0>
   12f48:	andeq	r0, r0, r1, lsl #8
   12f4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f50:	sub	sp, sp, #36	; 0x24
   12f54:	ldr	sl, [r0]
   12f58:	str	r0, [sp, #12]
   12f5c:	cmp	sl, #0
   12f60:	str	r1, [sp, #16]
   12f64:	str	r2, [sp, #20]
   12f68:	mov	r9, r3
   12f6c:	ldr	r8, [r0, #16]
   12f70:	ldr	r7, [sp, #72]	; 0x48
   12f74:	beq	13140 <__assert_fail@plt+0x17b8>
   12f78:	add	fp, sl, #24
   12f7c:	str	r8, [sp, #28]
   12f80:	str	r3, [sp, #24]
   12f84:	ldr	r4, [fp, #-20]	; 0xffffffec
   12f88:	sub	r1, fp, #24
   12f8c:	cmp	r4, #0
   12f90:	bne	12fa0 <__assert_fail@plt+0x1618>
   12f94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12f98:	cmp	r3, #0
   12f9c:	beq	13114 <__assert_fail@plt+0x178c>
   12fa0:	ldr	r3, [fp, #-12]
   12fa4:	tst	r3, #4
   12fa8:	moveq	sl, r1
   12fac:	moveq	r5, r3
   12fb0:	ldrne	r5, [sl, #12]
   12fb4:	ands	r5, r5, #8
   12fb8:	bne	130fc <__assert_fail@plt+0x1774>
   12fbc:	tst	r3, #8
   12fc0:	bne	1303c <__assert_fail@plt+0x16b4>
   12fc4:	sub	r3, r4, #1
   12fc8:	cmp	r3, #254	; 0xfe
   12fcc:	bhi	1303c <__assert_fail@plt+0x16b4>
   12fd0:	bl	11784 <__ctype_b_loc@plt>
   12fd4:	lsl	r3, r4, #1
   12fd8:	ldr	r1, [r0]
   12fdc:	ldrh	r3, [r1, r3]
   12fe0:	tst	r3, #16384	; 0x4000
   12fe4:	beq	1303c <__assert_fail@plt+0x16b4>
   12fe8:	ldr	r3, [r7, #4]
   12fec:	add	r1, r3, #1
   12ff0:	str	r1, [r7, #4]
   12ff4:	strb	r4, [r3]
   12ff8:	ldr	r3, [sl, #8]
   12ffc:	cmp	r3, #0
   13000:	beq	13030 <__assert_fail@plt+0x16a8>
   13004:	ldr	r3, [r7, #4]
   13008:	mov	r2, #58	; 0x3a
   1300c:	add	r1, r3, #1
   13010:	str	r1, [r7, #4]
   13014:	strb	r2, [r3]
   13018:	ldr	r3, [sl, #12]
   1301c:	tst	r3, #1
   13020:	ldrne	r3, [r7, #4]
   13024:	addne	r1, r3, #1
   13028:	strne	r1, [r7, #4]
   1302c:	strbne	r2, [r3]
   13030:	ldr	r3, [r7, #4]
   13034:	mov	r2, #0
   13038:	strb	r2, [r3]
   1303c:	ldr	r4, [fp, #-24]	; 0xffffffe8
   13040:	cmp	r4, #0
   13044:	beq	130fc <__assert_fail@plt+0x1774>
   13048:	ldr	r8, [r7]
   1304c:	ldr	r6, [r8, #8]
   13050:	ldr	r0, [r6]
   13054:	cmp	r0, #0
   13058:	beq	1307c <__assert_fail@plt+0x16f4>
   1305c:	mov	r9, r6
   13060:	mov	r1, r4
   13064:	bl	11574 <strcmp@plt>
   13068:	cmp	r0, #0
   1306c:	beq	13104 <__assert_fail@plt+0x177c>
   13070:	ldr	r0, [r9, #16]!
   13074:	cmp	r0, #0
   13078:	bne	13060 <__assert_fail@plt+0x16d8>
   1307c:	ldr	r3, [sl, #8]
   13080:	ldr	r1, [r7, #8]
   13084:	cmp	r3, #0
   13088:	str	r4, [r1]
   1308c:	beq	130a0 <__assert_fail@plt+0x1718>
   13090:	ldr	r3, [sl, #12]
   13094:	tst	r3, #1
   13098:	moveq	r5, #1
   1309c:	movne	r5, #2
   130a0:	str	r5, [r1, #4]
   130a4:	ldr	ip, [fp, #-20]	; 0xffffffec
   130a8:	mov	r3, #0
   130ac:	cmp	ip, r3
   130b0:	str	r3, [r1, #8]
   130b4:	ldr	r2, [sp, #24]
   130b8:	ldr	r3, [r8, #48]	; 0x30
   130bc:	ldreq	ip, [sl, #4]
   130c0:	sub	r3, r2, r3
   130c4:	bic	ip, ip, #-16777216	; 0xff000000
   130c8:	asr	r3, r3, #2
   130cc:	add	lr, r1, #16
   130d0:	rsb	r0, r3, r3, lsl #3
   130d4:	add	r0, r0, r0, lsl #6
   130d8:	add	r0, r3, r0, lsl #3
   130dc:	rsb	r0, r0, r0, lsl #15
   130e0:	add	r3, r3, r0, lsl #3
   130e4:	add	r3, r3, #1
   130e8:	add	r3, ip, r3, lsl #24
   130ec:	str	r3, [r1, #12]
   130f0:	mov	r3, #0
   130f4:	str	lr, [r7, #8]
   130f8:	str	r3, [r1, #16]
   130fc:	add	fp, fp, #24
   13100:	b	12f84 <__assert_fail@plt+0x15fc>
   13104:	sub	r6, r9, r6
   13108:	cmn	r6, #15
   1310c:	bge	130fc <__assert_fail@plt+0x1774>
   13110:	b	1307c <__assert_fail@plt+0x16f4>
   13114:	ldr	r3, [fp, #-8]
   13118:	cmp	r3, #0
   1311c:	bne	12fa0 <__assert_fail@plt+0x1618>
   13120:	ldr	r3, [fp, #-4]
   13124:	cmp	r3, #0
   13128:	bne	12fa0 <__assert_fail@plt+0x1618>
   1312c:	ldr	r3, [sp, #12]
   13130:	ldr	r8, [sp, #28]
   13134:	ldr	r9, [sp, #24]
   13138:	ldr	r3, [r3, #4]
   1313c:	b	13154 <__assert_fail@plt+0x17cc>
   13140:	ldr	r3, [r0, #4]
   13144:	cmp	r3, #0
   13148:	moveq	r0, r9
   1314c:	moveq	r9, r3
   13150:	beq	131c4 <__assert_fail@plt+0x183c>
   13154:	ldr	r2, [r7, #4]
   13158:	ldr	r1, [sp, #12]
   1315c:	str	r3, [r9]
   13160:	cmp	r8, #0
   13164:	stmib	r9, {r1, r2}
   13168:	ldr	r2, [sp, #16]
   1316c:	mov	r3, #0
   13170:	str	r2, [r9, #16]
   13174:	ldr	r2, [sp, #20]
   13178:	str	r3, [r9, #12]
   1317c:	str	r2, [r9, #20]
   13180:	str	r3, [r9, #24]
   13184:	str	r3, [r9, #32]
   13188:	str	r3, [r9, #28]
   1318c:	beq	131c0 <__assert_fail@plt+0x1838>
   13190:	ldr	r2, [r8]
   13194:	cmp	r2, r3
   13198:	beq	1320c <__assert_fail@plt+0x1884>
   1319c:	add	r3, r3, #1
   131a0:	ldr	r2, [r8, r3, lsl #4]
   131a4:	cmp	r2, #0
   131a8:	bne	1319c <__assert_fail@plt+0x1814>
   131ac:	lsl	r3, r3, #2
   131b0:	ldr	r2, [r7, #12]
   131b4:	add	r3, r2, r3
   131b8:	str	r2, [r9, #28]
   131bc:	str	r3, [r7, #12]
   131c0:	add	r0, r9, #36	; 0x24
   131c4:	cmp	r8, #0
   131c8:	beq	13204 <__assert_fail@plt+0x187c>
   131cc:	ldr	r1, [r8]
   131d0:	cmp	r1, #0
   131d4:	beq	13204 <__assert_fail@plt+0x187c>
   131d8:	mov	r2, #0
   131dc:	add	r4, r2, #1
   131e0:	mov	r3, r0
   131e4:	str	r7, [sp]
   131e8:	mov	r0, r1
   131ec:	mov	r1, r9
   131f0:	bl	12f4c <__assert_fail@plt+0x15c4>
   131f4:	ldr	r1, [r8, r4, lsl #4]
   131f8:	mov	r2, r4
   131fc:	cmp	r1, #0
   13200:	bne	131dc <__assert_fail@plt+0x1854>
   13204:	add	sp, sp, #36	; 0x24
   13208:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1320c:	mov	r3, r2
   13210:	b	131b0 <__assert_fail@plt+0x1828>
   13214:	cmp	r0, #86	; 0x56
   13218:	beq	13224 <__assert_fail@plt+0x189c>
   1321c:	mov	r0, #7
   13220:	bx	lr
   13224:	ldr	r3, [pc, #104]	; 13294 <__assert_fail@plt+0x190c>
   13228:	push	{r4, lr}
   1322c:	mov	r4, r2
   13230:	ldr	r3, [r3]
   13234:	cmp	r3, #0
   13238:	beq	1325c <__assert_fail@plt+0x18d4>
   1323c:	mov	r1, r2
   13240:	ldr	r0, [r2, #48]	; 0x30
   13244:	blx	r3
   13248:	ldr	r0, [r4, #16]
   1324c:	ands	r0, r0, #32
   13250:	beq	13290 <__assert_fail@plt+0x1908>
   13254:	mov	r0, #0
   13258:	pop	{r4, pc}
   1325c:	ldr	r3, [pc, #52]	; 13298 <__assert_fail@plt+0x1910>
   13260:	ldr	r2, [r3]
   13264:	cmp	r2, #0
   13268:	beq	1327c <__assert_fail@plt+0x18f4>
   1326c:	ldr	r1, [pc, #40]	; 1329c <__assert_fail@plt+0x1914>
   13270:	ldr	r0, [r4, #48]	; 0x30
   13274:	bl	117d8 <fprintf@plt>
   13278:	b	13248 <__assert_fail@plt+0x18c0>
   1327c:	ldr	r2, [pc, #28]	; 132a0 <__assert_fail@plt+0x1918>
   13280:	ldr	r1, [pc, #28]	; 132a4 <__assert_fail@plt+0x191c>
   13284:	mov	r0, r4
   13288:	bl	1a410 <argp_error@@Base>
   1328c:	b	13248 <__assert_fail@plt+0x18c0>
   13290:	bl	1179c <exit@plt>
   13294:	andeq	lr, r2, r0, lsl #10
   13298:	andeq	lr, r2, r4, asr #10
   1329c:	andeq	sp, r1, r0, lsr r4
   132a0:	muleq	r1, r0, r2
   132a4:			; <UNDEFINED> instruction: 0x0001d2b4
   132a8:	cmn	r0, #3
   132ac:	push	{r4, r5, lr}
   132b0:	mov	r4, r2
   132b4:	sub	sp, sp, #12
   132b8:	beq	1339c <__assert_fail@plt+0x1a14>
   132bc:	ble	1332c <__assert_fail@plt+0x19a4>
   132c0:	cmn	r0, #2
   132c4:	beq	132ec <__assert_fail@plt+0x1964>
   132c8:	cmp	r0, #63	; 0x3f
   132cc:	bne	13390 <__assert_fail@plt+0x1a08>
   132d0:	mov	r0, r4
   132d4:	ldr	r2, [pc, #236]	; 133c8 <__assert_fail@plt+0x1a40>
   132d8:	ldr	r1, [r4, #48]	; 0x30
   132dc:	bl	1a360 <argp_state_help@@Base>
   132e0:	mov	r0, #0
   132e4:	add	sp, sp, #12
   132e8:	pop	{r4, r5, pc}
   132ec:	ldr	r3, [pc, #216]	; 133cc <__assert_fail@plt+0x1a44>
   132f0:	mov	r0, r1
   132f4:	str	r1, [sp, #4]
   132f8:	str	r1, [r3]
   132fc:	bl	14984 <argp_parse@@Base+0xed0>
   13300:	ldr	r3, [r4, #16]
   13304:	ldr	r2, [pc, #196]	; 133d0 <__assert_fail@plt+0x1a48>
   13308:	and	r3, r3, #3
   1330c:	cmp	r3, #1
   13310:	ldr	r1, [sp, #4]
   13314:	str	r0, [r4, #40]	; 0x28
   13318:	str	r0, [r2]
   1331c:	beq	133b8 <__assert_fail@plt+0x1a30>
   13320:	mov	r0, #0
   13324:	add	sp, sp, #12
   13328:	pop	{r4, r5, pc}
   1332c:	cmn	r0, #4
   13330:	bne	13390 <__assert_fail@plt+0x1a08>
   13334:	cmp	r1, #0
   13338:	ldr	r0, [pc, #148]	; 133d4 <__assert_fail@plt+0x1a4c>
   1333c:	mov	r2, #10
   13340:	movne	r0, r1
   13344:	mov	r1, #0
   13348:	bl	11580 <strtol@plt>
   1334c:	ldr	r4, [pc, #132]	; 133d8 <__assert_fail@plt+0x1a50>
   13350:	str	r0, [r4]
   13354:	ldr	r3, [r4]
   13358:	cmp	r3, #0
   1335c:	sub	r3, r3, #1
   13360:	str	r3, [r4]
   13364:	ble	13320 <__assert_fail@plt+0x1998>
   13368:	mov	r5, #1
   1336c:	mov	r0, r5
   13370:	bl	1164c <sleep@plt>
   13374:	ldr	r3, [r4]
   13378:	cmp	r3, #0
   1337c:	sub	r3, r3, #1
   13380:	str	r3, [r4]
   13384:	bgt	1336c <__assert_fail@plt+0x19e4>
   13388:	mov	r0, #0
   1338c:	b	13324 <__assert_fail@plt+0x199c>
   13390:	mov	r0, #7
   13394:	add	sp, sp, #12
   13398:	pop	{r4, r5, pc}
   1339c:	mov	r0, r4
   133a0:	ldr	r2, [pc, #52]	; 133dc <__assert_fail@plt+0x1a54>
   133a4:	ldr	r1, [r4, #48]	; 0x30
   133a8:	bl	1a360 <argp_state_help@@Base>
   133ac:	mov	r0, #0
   133b0:	add	sp, sp, #12
   133b4:	pop	{r4, r5, pc}
   133b8:	ldr	r3, [r4, #8]
   133bc:	mov	r0, #0
   133c0:	str	r1, [r3]
   133c4:	b	132e4 <__assert_fail@plt+0x195c>
   133c8:	andeq	r0, r0, sl, ror r2
   133cc:	andeq	lr, r2, r4, ror #9
   133d0:	ldrdeq	lr, [r2], -r8
   133d4:			; <UNDEFINED> instruction: 0x0001d2b8
   133d8:	strdeq	lr, [r2], -ip
   133dc:	andeq	r0, r0, r1, lsl #4
   133e0:	ldr	r3, [r0]
   133e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   133e8:	cmp	r3, #0
   133ec:	sub	sp, sp, #12
   133f0:	ldr	lr, [r0, #16]
   133f4:	beq	1342c <__assert_fail@plt+0x1aa4>
   133f8:	ldr	r0, [r1, #8]
   133fc:	mov	r2, #0
   13400:	add	r0, r0, #1
   13404:	str	r0, [r1, #8]
   13408:	add	r3, r3, #24
   1340c:	ldr	r0, [r3, #-20]	; 0xffffffec
   13410:	cmp	r0, #0
   13414:	bne	13424 <__assert_fail@plt+0x1a9c>
   13418:	ldr	r0, [r3, #-24]	; 0xffffffe8
   1341c:	cmp	r0, #0
   13420:	beq	139e4 <__assert_fail@plt+0x205c>
   13424:	add	r2, r2, #1
   13428:	b	13408 <__assert_fail@plt+0x1a80>
   1342c:	ldr	r3, [r0, #4]
   13430:	cmp	r3, #0
   13434:	ldrne	r3, [r1, #8]
   13438:	addne	r3, r3, #1
   1343c:	strne	r3, [r1, #8]
   13440:	cmp	lr, #0
   13444:	beq	137d0 <__assert_fail@plt+0x1e48>
   13448:	ldr	r0, [lr]
   1344c:	cmp	r0, #0
   13450:	beq	137d0 <__assert_fail@plt+0x1e48>
   13454:	mov	r6, r1
   13458:	str	lr, [sp]
   1345c:	ldr	r2, [r0]
   13460:	ldr	r7, [r0, #16]
   13464:	cmp	r2, #0
   13468:	beq	134a0 <__assert_fail@plt+0x1b18>
   1346c:	ldr	r0, [r6, #8]
   13470:	mov	r1, #0
   13474:	add	r0, r0, #1
   13478:	str	r0, [r6, #8]
   1347c:	add	r2, r2, #24
   13480:	ldr	r0, [r2, #-20]	; 0xffffffec
   13484:	cmp	r0, #0
   13488:	bne	13498 <__assert_fail@plt+0x1b10>
   1348c:	ldr	r0, [r2, #-24]	; 0xffffffe8
   13490:	cmp	r0, #0
   13494:	beq	13a14 <__assert_fail@plt+0x208c>
   13498:	add	r1, r1, #1
   1349c:	b	1347c <__assert_fail@plt+0x1af4>
   134a0:	ldr	r2, [r0, #4]
   134a4:	cmp	r2, #0
   134a8:	ldrne	r2, [r6, #8]
   134ac:	addne	r2, r2, #1
   134b0:	strne	r2, [r6, #8]
   134b4:	cmp	r7, #0
   134b8:	beq	13a74 <__assert_fail@plt+0x20ec>
   134bc:	ldr	r1, [r7]
   134c0:	cmp	r1, #0
   134c4:	beq	13a74 <__assert_fail@plt+0x20ec>
   134c8:	str	r7, [sp, #4]
   134cc:	ldr	r2, [r1]
   134d0:	ldr	r8, [r1, #16]
   134d4:	cmp	r2, #0
   134d8:	beq	13510 <__assert_fail@plt+0x1b88>
   134dc:	ldr	r0, [r6, #8]
   134e0:	mov	r1, #0
   134e4:	add	r0, r0, #1
   134e8:	str	r0, [r6, #8]
   134ec:	add	r2, r2, #24
   134f0:	ldr	r0, [r2, #-20]	; 0xffffffec
   134f4:	cmp	r0, #0
   134f8:	bne	13508 <__assert_fail@plt+0x1b80>
   134fc:	ldr	r0, [r2, #-24]	; 0xffffffe8
   13500:	cmp	r0, #0
   13504:	beq	13a44 <__assert_fail@plt+0x20bc>
   13508:	add	r1, r1, #1
   1350c:	b	134ec <__assert_fail@plt+0x1b64>
   13510:	ldr	r2, [r1, #4]
   13514:	cmp	r2, #0
   13518:	ldrne	r2, [r6, #8]
   1351c:	addne	r2, r2, #1
   13520:	strne	r2, [r6, #8]
   13524:	cmp	r8, #0
   13528:	beq	13a7c <__assert_fail@plt+0x20f4>
   1352c:	ldr	r1, [r8]
   13530:	cmp	r1, #0
   13534:	beq	13a7c <__assert_fail@plt+0x20f4>
   13538:	ldr	r2, [r1]
   1353c:	ldr	r9, [r1, #16]
   13540:	cmp	r2, #0
   13544:	beq	1357c <__assert_fail@plt+0x1bf4>
   13548:	ldr	r0, [r6, #8]
   1354c:	mov	r1, #0
   13550:	add	r0, r0, #1
   13554:	str	r0, [r6, #8]
   13558:	add	r2, r2, #24
   1355c:	ldr	r0, [r2, #-20]	; 0xffffffec
   13560:	cmp	r0, #0
   13564:	bne	13574 <__assert_fail@plt+0x1bec>
   13568:	ldr	r0, [r2, #-24]	; 0xffffffe8
   1356c:	cmp	r0, #0
   13570:	beq	13a84 <__assert_fail@plt+0x20fc>
   13574:	add	r1, r1, #1
   13578:	b	13558 <__assert_fail@plt+0x1bd0>
   1357c:	ldr	r2, [r1, #4]
   13580:	cmp	r2, #0
   13584:	ldrne	r2, [r6, #8]
   13588:	addne	r2, r2, #1
   1358c:	strne	r2, [r6, #8]
   13590:	cmp	r9, #0
   13594:	beq	13780 <__assert_fail@plt+0x1df8>
   13598:	ldr	r1, [r9]
   1359c:	cmp	r1, #0
   135a0:	beq	13780 <__assert_fail@plt+0x1df8>
   135a4:	ldr	r2, [r1]
   135a8:	ldr	sl, [r1, #16]
   135ac:	cmp	r2, #0
   135b0:	beq	13618 <__assert_fail@plt+0x1c90>
   135b4:	ldr	r0, [r6, #8]
   135b8:	mov	r1, #0
   135bc:	add	r0, r0, #1
   135c0:	str	r0, [r6, #8]
   135c4:	b	135cc <__assert_fail@plt+0x1c44>
   135c8:	add	r1, r1, #1
   135cc:	add	r2, r2, #24
   135d0:	ldr	r0, [r2, #-20]	; 0xffffffec
   135d4:	cmp	r0, #0
   135d8:	bne	135c8 <__assert_fail@plt+0x1c40>
   135dc:	ldr	r0, [r2, #-24]	; 0xffffffe8
   135e0:	cmp	r0, #0
   135e4:	bne	135c8 <__assert_fail@plt+0x1c40>
   135e8:	ldr	r0, [r2, #-8]
   135ec:	cmp	r0, #0
   135f0:	bne	135c8 <__assert_fail@plt+0x1c40>
   135f4:	ldr	r0, [r2, #-4]
   135f8:	cmp	r0, #0
   135fc:	bne	135c8 <__assert_fail@plt+0x1c40>
   13600:	ldm	r6, {r0, r2}
   13604:	add	ip, r1, r1, lsl #1
   13608:	add	r0, r0, ip
   1360c:	add	r1, r2, r1
   13610:	stm	r6, {r0, r1}
   13614:	b	1362c <__assert_fail@plt+0x1ca4>
   13618:	ldr	r2, [r1, #4]
   1361c:	cmp	r2, #0
   13620:	ldrne	r2, [r6, #8]
   13624:	addne	r2, r2, #1
   13628:	strne	r2, [r6, #8]
   1362c:	cmp	sl, #0
   13630:	beq	139dc <__assert_fail@plt+0x2054>
   13634:	ldr	r1, [sl]
   13638:	cmp	r1, #0
   1363c:	beq	139dc <__assert_fail@plt+0x2054>
   13640:	ldr	r2, [r1]
   13644:	ldr	fp, [r1, #16]
   13648:	cmp	r2, #0
   1364c:	beq	139b4 <__assert_fail@plt+0x202c>
   13650:	ldr	r0, [r6, #8]
   13654:	mov	r1, #0
   13658:	add	r0, r0, #1
   1365c:	str	r0, [r6, #8]
   13660:	b	13668 <__assert_fail@plt+0x1ce0>
   13664:	add	r1, r1, #1
   13668:	add	r2, r2, #24
   1366c:	ldr	r0, [r2, #-20]	; 0xffffffec
   13670:	cmp	r0, #0
   13674:	bne	13664 <__assert_fail@plt+0x1cdc>
   13678:	ldr	r0, [r2, #-24]	; 0xffffffe8
   1367c:	cmp	r0, #0
   13680:	bne	13664 <__assert_fail@plt+0x1cdc>
   13684:	ldr	r0, [r2, #-8]
   13688:	cmp	r0, #0
   1368c:	bne	13664 <__assert_fail@plt+0x1cdc>
   13690:	ldr	r0, [r2, #-4]
   13694:	cmp	r0, #0
   13698:	bne	13664 <__assert_fail@plt+0x1cdc>
   1369c:	ldm	r6, {r0, r2}
   136a0:	add	ip, r1, r1, lsl #1
   136a4:	add	r0, r0, ip
   136a8:	add	r1, r2, r1
   136ac:	stm	r6, {r0, r1}
   136b0:	cmp	fp, #0
   136b4:	beq	139d4 <__assert_fail@plt+0x204c>
   136b8:	ldr	r0, [fp]
   136bc:	cmp	r0, #0
   136c0:	beq	139d4 <__assert_fail@plt+0x204c>
   136c4:	ldr	r2, [r0]
   136c8:	ldr	r5, [r0, #16]
   136cc:	cmp	r2, #0
   136d0:	beq	137d8 <__assert_fail@plt+0x1e50>
   136d4:	ldr	r0, [r6, #8]
   136d8:	mov	r1, #0
   136dc:	add	r0, r0, #1
   136e0:	str	r0, [r6, #8]
   136e4:	b	136ec <__assert_fail@plt+0x1d64>
   136e8:	add	r1, r1, #1
   136ec:	add	r2, r2, #24
   136f0:	ldr	r0, [r2, #-20]	; 0xffffffec
   136f4:	cmp	r0, #0
   136f8:	bne	136e8 <__assert_fail@plt+0x1d60>
   136fc:	ldr	r0, [r2, #-24]	; 0xffffffe8
   13700:	cmp	r0, #0
   13704:	bne	136e8 <__assert_fail@plt+0x1d60>
   13708:	ldr	r0, [r2, #-8]
   1370c:	cmp	r0, #0
   13710:	bne	136e8 <__assert_fail@plt+0x1d60>
   13714:	ldr	r0, [r2, #-4]
   13718:	cmp	r0, #0
   1371c:	bne	136e8 <__assert_fail@plt+0x1d60>
   13720:	ldm	r6, {r0, r2}
   13724:	add	ip, r1, r1, lsl #1
   13728:	cmp	r5, #0
   1372c:	add	r0, r0, ip
   13730:	add	r1, r2, r1
   13734:	stm	r6, {r0, r1}
   13738:	bne	137f4 <__assert_fail@plt+0x1e6c>
   1373c:	ldr	r1, [r6, #12]
   13740:	ldr	r0, [fp, #16]!
   13744:	add	r2, r1, #1
   13748:	cmp	r0, #0
   1374c:	str	r2, [r6, #12]
   13750:	bne	136c4 <__assert_fail@plt+0x1d3c>
   13754:	ldr	r1, [sl, #16]!
   13758:	add	r2, r2, #1
   1375c:	cmp	r1, #0
   13760:	str	r2, [r6, #12]
   13764:	bne	13640 <__assert_fail@plt+0x1cb8>
   13768:	ldr	r1, [r9, #16]!
   1376c:	add	r2, r2, #1
   13770:	cmp	r1, #0
   13774:	str	r2, [r6, #12]
   13778:	bne	135a4 <__assert_fail@plt+0x1c1c>
   1377c:	b	13784 <__assert_fail@plt+0x1dfc>
   13780:	ldr	r2, [r6, #12]
   13784:	ldr	r1, [r8, #16]!
   13788:	add	r2, r2, #1
   1378c:	cmp	r1, #0
   13790:	str	r2, [r6, #12]
   13794:	bne	13538 <__assert_fail@plt+0x1bb0>
   13798:	ldr	r3, [sp, #4]
   1379c:	add	r2, r2, #1
   137a0:	ldr	r1, [r3, #16]!
   137a4:	str	r2, [r6, #12]
   137a8:	cmp	r1, #0
   137ac:	str	r3, [sp, #4]
   137b0:	bne	134cc <__assert_fail@plt+0x1b44>
   137b4:	ldr	r3, [sp]
   137b8:	add	r2, r2, #1
   137bc:	ldr	r0, [r3, #16]!
   137c0:	str	r2, [r6, #12]
   137c4:	cmp	r0, #0
   137c8:	str	r3, [sp]
   137cc:	bne	1345c <__assert_fail@plt+0x1ad4>
   137d0:	add	sp, sp, #12
   137d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   137d8:	ldr	r2, [r0, #4]
   137dc:	cmp	r2, #0
   137e0:	ldrne	r2, [r6, #8]
   137e4:	addne	r2, r2, #1
   137e8:	strne	r2, [r6, #8]
   137ec:	cmp	r5, #0
   137f0:	beq	1373c <__assert_fail@plt+0x1db4>
   137f4:	ldr	r0, [r5]
   137f8:	cmp	r0, #0
   137fc:	beq	1373c <__assert_fail@plt+0x1db4>
   13800:	ldr	r2, [r0]
   13804:	ldr	r4, [r0, #16]
   13808:	cmp	r2, #0
   1380c:	beq	1396c <__assert_fail@plt+0x1fe4>
   13810:	ldr	r0, [r6, #8]
   13814:	mov	r1, #0
   13818:	add	r0, r0, #1
   1381c:	str	r0, [r6, #8]
   13820:	b	13828 <__assert_fail@plt+0x1ea0>
   13824:	add	r1, r1, #1
   13828:	add	r2, r2, #24
   1382c:	ldr	r0, [r2, #-20]	; 0xffffffec
   13830:	cmp	r0, #0
   13834:	bne	13824 <__assert_fail@plt+0x1e9c>
   13838:	ldr	r0, [r2, #-24]	; 0xffffffe8
   1383c:	cmp	r0, #0
   13840:	bne	13824 <__assert_fail@plt+0x1e9c>
   13844:	ldr	r0, [r2, #-8]
   13848:	cmp	r0, #0
   1384c:	bne	13824 <__assert_fail@plt+0x1e9c>
   13850:	ldr	r0, [r2, #-4]
   13854:	cmp	r0, #0
   13858:	bne	13824 <__assert_fail@plt+0x1e9c>
   1385c:	ldm	r6, {r0, r2}
   13860:	add	ip, r1, r1, lsl #1
   13864:	add	r0, r0, ip
   13868:	add	r1, r2, r1
   1386c:	stm	r6, {r0, r1}
   13870:	cmp	r4, #0
   13874:	beq	1398c <__assert_fail@plt+0x2004>
   13878:	ldr	r0, [r4]
   1387c:	cmp	r0, #0
   13880:	beq	1398c <__assert_fail@plt+0x2004>
   13884:	ldr	r1, [r0]
   13888:	ldr	r2, [r0, #16]
   1388c:	cmp	r1, #0
   13890:	beq	1399c <__assert_fail@plt+0x2014>
   13894:	ldr	ip, [r6, #8]
   13898:	mov	r0, #0
   1389c:	add	ip, ip, #1
   138a0:	str	ip, [r6, #8]
   138a4:	b	138ac <__assert_fail@plt+0x1f24>
   138a8:	add	r0, r0, #1
   138ac:	add	r1, r1, #24
   138b0:	ldr	ip, [r1, #-20]	; 0xffffffec
   138b4:	cmp	ip, #0
   138b8:	bne	138a8 <__assert_fail@plt+0x1f20>
   138bc:	ldr	ip, [r1, #-24]	; 0xffffffe8
   138c0:	cmp	ip, #0
   138c4:	bne	138a8 <__assert_fail@plt+0x1f20>
   138c8:	ldr	ip, [r1, #-8]
   138cc:	cmp	ip, #0
   138d0:	bne	138a8 <__assert_fail@plt+0x1f20>
   138d4:	ldr	ip, [r1, #-4]
   138d8:	cmp	ip, #0
   138dc:	bne	138a8 <__assert_fail@plt+0x1f20>
   138e0:	ldr	ip, [r6]
   138e4:	ldr	r1, [r6, #4]
   138e8:	add	lr, r0, r0, lsl #1
   138ec:	add	ip, ip, lr
   138f0:	add	r0, r1, r0
   138f4:	str	ip, [r6]
   138f8:	str	r0, [r6, #4]
   138fc:	cmp	r2, #0
   13900:	beq	13994 <__assert_fail@plt+0x200c>
   13904:	ldr	r0, [r2]
   13908:	cmp	r0, #0
   1390c:	beq	13994 <__assert_fail@plt+0x200c>
   13910:	mov	r7, r2
   13914:	mov	r1, r6
   13918:	bl	133e0 <__assert_fail@plt+0x1a58>
   1391c:	ldr	r1, [r6, #12]
   13920:	ldr	r0, [r7, #16]!
   13924:	add	r1, r1, #1
   13928:	cmp	r0, #0
   1392c:	str	r1, [r6, #12]
   13930:	bne	13914 <__assert_fail@plt+0x1f8c>
   13934:	ldr	r0, [r4, #16]!
   13938:	add	r1, r1, #1
   1393c:	cmp	r0, #0
   13940:	str	r1, [r6, #12]
   13944:	bne	13884 <__assert_fail@plt+0x1efc>
   13948:	ldr	r0, [r5, #16]!
   1394c:	add	r1, r1, #1
   13950:	cmp	r0, #0
   13954:	str	r1, [r6, #12]
   13958:	beq	13740 <__assert_fail@plt+0x1db8>
   1395c:	ldr	r2, [r0]
   13960:	ldr	r4, [r0, #16]
   13964:	cmp	r2, #0
   13968:	bne	13810 <__assert_fail@plt+0x1e88>
   1396c:	ldr	r2, [r0, #4]
   13970:	cmp	r2, #0
   13974:	beq	13870 <__assert_fail@plt+0x1ee8>
   13978:	ldr	r2, [r6, #8]
   1397c:	cmp	r4, #0
   13980:	add	r2, r2, #1
   13984:	str	r2, [r6, #8]
   13988:	bne	13878 <__assert_fail@plt+0x1ef0>
   1398c:	ldr	r1, [r6, #12]
   13990:	b	13948 <__assert_fail@plt+0x1fc0>
   13994:	ldr	r1, [r6, #12]
   13998:	b	13934 <__assert_fail@plt+0x1fac>
   1399c:	ldr	r1, [r0, #4]
   139a0:	cmp	r1, #0
   139a4:	ldrne	r1, [r6, #8]
   139a8:	addne	r1, r1, #1
   139ac:	strne	r1, [r6, #8]
   139b0:	b	138fc <__assert_fail@plt+0x1f74>
   139b4:	ldr	r2, [r1, #4]
   139b8:	cmp	r2, #0
   139bc:	beq	136b0 <__assert_fail@plt+0x1d28>
   139c0:	ldr	r2, [r6, #8]
   139c4:	cmp	fp, #0
   139c8:	add	r2, r2, #1
   139cc:	str	r2, [r6, #8]
   139d0:	bne	136b8 <__assert_fail@plt+0x1d30>
   139d4:	ldr	r2, [r6, #12]
   139d8:	b	13754 <__assert_fail@plt+0x1dcc>
   139dc:	ldr	r2, [r6, #12]
   139e0:	b	13768 <__assert_fail@plt+0x1de0>
   139e4:	ldr	r0, [r3, #-8]
   139e8:	cmp	r0, #0
   139ec:	bne	13424 <__assert_fail@plt+0x1a9c>
   139f0:	ldr	r0, [r3, #-4]
   139f4:	cmp	r0, #0
   139f8:	bne	13424 <__assert_fail@plt+0x1a9c>
   139fc:	ldm	r1, {r0, r3}
   13a00:	add	ip, r2, r2, lsl #1
   13a04:	add	r0, r0, ip
   13a08:	add	r2, r3, r2
   13a0c:	stm	r1, {r0, r2}
   13a10:	b	13440 <__assert_fail@plt+0x1ab8>
   13a14:	ldr	r0, [r2, #-8]
   13a18:	cmp	r0, #0
   13a1c:	bne	13498 <__assert_fail@plt+0x1b10>
   13a20:	ldr	r0, [r2, #-4]
   13a24:	cmp	r0, #0
   13a28:	bne	13498 <__assert_fail@plt+0x1b10>
   13a2c:	ldm	r6, {r0, r2}
   13a30:	add	ip, r1, r1, lsl #1
   13a34:	add	r0, r0, ip
   13a38:	add	r1, r2, r1
   13a3c:	stm	r6, {r0, r1}
   13a40:	b	134b4 <__assert_fail@plt+0x1b2c>
   13a44:	ldr	r0, [r2, #-8]
   13a48:	cmp	r0, #0
   13a4c:	bne	13508 <__assert_fail@plt+0x1b80>
   13a50:	ldr	r0, [r2, #-4]
   13a54:	cmp	r0, #0
   13a58:	bne	13508 <__assert_fail@plt+0x1b80>
   13a5c:	ldm	r6, {r0, r2}
   13a60:	add	ip, r1, r1, lsl #1
   13a64:	add	r0, r0, ip
   13a68:	add	r1, r2, r1
   13a6c:	stm	r6, {r0, r1}
   13a70:	b	13524 <__assert_fail@plt+0x1b9c>
   13a74:	ldr	r2, [r6, #12]
   13a78:	b	137b4 <__assert_fail@plt+0x1e2c>
   13a7c:	ldr	r2, [r6, #12]
   13a80:	b	13798 <__assert_fail@plt+0x1e10>
   13a84:	ldr	r0, [r2, #-8]
   13a88:	cmp	r0, #0
   13a8c:	bne	13574 <__assert_fail@plt+0x1bec>
   13a90:	ldr	r0, [r2, #-4]
   13a94:	cmp	r0, #0
   13a98:	bne	13574 <__assert_fail@plt+0x1bec>
   13a9c:	ldm	r6, {r0, r2}
   13aa0:	add	ip, r1, r1, lsl #1
   13aa4:	add	r0, r0, ip
   13aa8:	add	r1, r2, r1
   13aac:	stm	r6, {r0, r1}
   13ab0:	b	13590 <__assert_fail@plt+0x1c08>

00013ab4 <argp_parse@@Base>:
   13ab4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ab8:	add	fp, sp, #32
   13abc:	tst	r3, #1
   13ac0:	sub	sp, sp, #220	; 0xdc
   13ac4:	mov	r7, r3
   13ac8:	mov	r8, r0
   13acc:	str	r1, [fp, #-240]	; 0xffffff10
   13ad0:	str	r2, [fp, #-236]	; 0xffffff14
   13ad4:	bne	13b00 <argp_parse@@Base+0x4c>
   13ad8:	ldr	r3, [pc, #3488]	; 14880 <argp_parse@@Base+0xdcc>
   13adc:	ldr	r4, [pc, #3488]	; 14884 <argp_parse@@Base+0xdd0>
   13ae0:	ldr	r2, [r3]
   13ae4:	cmp	r2, #0
   13ae8:	ldreq	r2, [fp, #-236]	; 0xffffff14
   13aec:	ldreq	r2, [r2]
   13af0:	streq	r2, [r3]
   13af4:	ldr	r3, [r4]
   13af8:	cmp	r3, #0
   13afc:	beq	141e0 <argp_parse@@Base+0x72c>
   13b00:	ands	r3, r7, #16
   13b04:	beq	140c4 <argp_parse@@Base+0x610>
   13b08:	sub	r5, fp, #196	; 0xc4
   13b0c:	mov	r0, r5
   13b10:	mov	r2, #36	; 0x24
   13b14:	mov	r1, #0
   13b18:	bl	11808 <memset@plt>
   13b1c:	ands	r3, r7, #4
   13b20:	str	r3, [fp, #-244]	; 0xffffff0c
   13b24:	mov	r3, #0
   13b28:	moveq	r0, #1
   13b2c:	movne	r0, #0
   13b30:	cmp	r8, r3
   13b34:	str	r3, [fp, #-224]	; 0xffffff20
   13b38:	str	r3, [fp, #-220]	; 0xffffff24
   13b3c:	str	r3, [fp, #-216]	; 0xffffff28
   13b40:	str	r0, [fp, #-228]	; 0xffffff1c
   13b44:	beq	13bb8 <argp_parse@@Base+0x104>
   13b48:	ldr	r4, [r8, #16]
   13b4c:	ldr	r3, [r8]
   13b50:	cmp	r3, #0
   13b54:	movne	r2, #1
   13b58:	strne	r2, [fp, #-220]	; 0xffffff24
   13b5c:	movne	r2, #0
   13b60:	bne	13b6c <argp_parse@@Base+0xb8>
   13b64:	b	146ac <argp_parse@@Base+0xbf8>
   13b68:	add	r2, r2, #1
   13b6c:	add	r3, r3, #24
   13b70:	ldr	r1, [r3, #-20]	; 0xffffffec
   13b74:	cmp	r1, #0
   13b78:	bne	13b68 <argp_parse@@Base+0xb4>
   13b7c:	ldr	r1, [r3, #-24]	; 0xffffffe8
   13b80:	cmp	r1, #0
   13b84:	bne	13b68 <argp_parse@@Base+0xb4>
   13b88:	ldr	r1, [r3, #-8]
   13b8c:	cmp	r1, #0
   13b90:	bne	13b68 <argp_parse@@Base+0xb4>
   13b94:	ldr	r1, [r3, #-4]
   13b98:	cmp	r1, #0
   13b9c:	bne	13b68 <argp_parse@@Base+0xb4>
   13ba0:	add	r3, r2, r2, lsl #1
   13ba4:	add	r0, r3, r0
   13ba8:	str	r2, [fp, #-224]	; 0xffffff20
   13bac:	str	r0, [fp, #-228]	; 0xffffff1c
   13bb0:	mov	r6, #72	; 0x48
   13bb4:	b	146c4 <argp_parse@@Base+0xc10>
   13bb8:	mov	sl, #36	; 0x24
   13bbc:	mov	r6, sl
   13bc0:	mov	r4, r8
   13bc4:	mov	r3, #52	; 0x34
   13bc8:	str	r3, [fp, #-232]	; 0xffffff18
   13bcc:	add	r0, r3, r0
   13bd0:	add	r0, r0, #1
   13bd4:	bl	16044 <argp_parse@@Base+0x2590>
   13bd8:	cmp	r0, #0
   13bdc:	mov	r9, r0
   13be0:	str	r0, [fp, #-40]	; 0xffffffd8
   13be4:	moveq	r5, #12
   13be8:	beq	13fe4 <argp_parse@@Base+0x530>
   13bec:	mov	lr, r5
   13bf0:	mov	r3, #1
   13bf4:	str	r3, [fp, #-196]	; 0xffffff3c
   13bf8:	str	r3, [fp, #-192]	; 0xffffff40
   13bfc:	ldm	lr!, {r0, r1, r2, r3}
   13c00:	sub	ip, fp, #148	; 0x94
   13c04:	add	r5, r9, sl
   13c08:	ldr	sl, [fp, #-232]	; 0xffffff18
   13c0c:	stmia	ip!, {r0, r1, r2, r3}
   13c10:	add	r6, r9, r6
   13c14:	ldm	lr!, {r0, r1, r2, r3}
   13c18:	add	sl, r9, sl
   13c1c:	str	r6, [fp, #-104]	; 0xffffff98
   13c20:	str	r5, [fp, #-152]	; 0xffffff68
   13c24:	ldr	lr, [lr]
   13c28:	stmia	ip!, {r0, r1, r2, r3}
   13c2c:	mov	r2, r4
   13c30:	mov	r0, r6
   13c34:	mov	r1, #0
   13c38:	str	r9, [fp, #-112]	; 0xffffff90
   13c3c:	str	lr, [ip]
   13c40:	str	sl, [fp, #-156]	; 0xffffff64
   13c44:	sub	r4, fp, #160	; 0xa0
   13c48:	bl	11808 <memset@plt>
   13c4c:	tst	r7, #8
   13c50:	str	r5, [fp, #-204]	; 0xffffff34
   13c54:	str	sl, [fp, #-208]	; 0xffffff30
   13c58:	str	r6, [fp, #-200]	; 0xffffff38
   13c5c:	str	r4, [fp, #-212]	; 0xffffff2c
   13c60:	beq	14178 <argp_parse@@Base+0x6c4>
   13c64:	ldr	r2, [fp, #-232]	; 0xffffff18
   13c68:	add	sl, sl, #1
   13c6c:	mov	r3, #45	; 0x2d
   13c70:	str	sl, [fp, #-208]	; 0xffffff30
   13c74:	strb	r3, [r9, r2]
   13c78:	mov	r2, #0
   13c7c:	strb	r2, [sl]
   13c80:	ldr	r3, [fp, #-204]	; 0xffffff34
   13c84:	cmp	r8, r2
   13c88:	str	r2, [r3]
   13c8c:	str	r8, [fp, #-160]	; 0xffffff60
   13c90:	beq	141a8 <argp_parse@@Base+0x6f4>
   13c94:	sub	r1, fp, #212	; 0xd4
   13c98:	mov	r0, r8
   13c9c:	str	r1, [sp]
   13ca0:	ldr	r3, [fp, #-112]	; 0xffffff90
   13ca4:	mov	r1, r2
   13ca8:	bl	12f4c <__assert_fail@plt+0x15c4>
   13cac:	ldr	r8, [fp, #-160]	; 0xffffff60
   13cb0:	ldr	r5, [fp, #-112]	; 0xffffff90
   13cb4:	mov	r6, r0
   13cb8:	str	r0, [fp, #-108]	; 0xffffff94
   13cbc:	mov	r2, #56	; 0x38
   13cc0:	mov	r1, #0
   13cc4:	sub	r0, fp, #96	; 0x60
   13cc8:	bl	11808 <memset@plt>
   13ccc:	ldr	r2, [pc, #2996]	; 14888 <argp_parse@@Base+0xdd4>
   13cd0:	ldr	r3, [pc, #2996]	; 1488c <argp_parse@@Base+0xdd8>
   13cd4:	ldr	r0, [fp, #-240]	; 0xffffff10
   13cd8:	ldr	r1, [r2]
   13cdc:	str	r0, [fp, #-92]	; 0xffffffa4
   13ce0:	ldr	r2, [r3]
   13ce4:	ldr	r0, [fp, #-236]	; 0xffffff14
   13ce8:	mov	r3, #1
   13cec:	cmp	r5, r6
   13cf0:	str	r8, [fp, #-96]	; 0xffffffa0
   13cf4:	str	r0, [fp, #-88]	; 0xffffffa8
   13cf8:	str	r7, [fp, #-80]	; 0xffffffb0
   13cfc:	str	r4, [fp, #-44]	; 0xffffffd4
   13d00:	str	r1, [fp, #-52]	; 0xffffffcc
   13d04:	str	r2, [fp, #-48]	; 0xffffffd0
   13d08:	str	r3, [fp, #-100]	; 0xffffff9c
   13d0c:	bcc	13ff0 <argp_parse@@Base+0x53c>
   13d10:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13d14:	tst	r3, #2
   13d18:	bne	141b8 <argp_parse@@Base+0x704>
   13d1c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   13d20:	ldr	r4, [fp, #-92]	; 0xffffffa4
   13d24:	mov	r2, #1
   13d28:	str	r2, [fp, #-144]	; 0xffffff70
   13d2c:	ldr	r2, [fp, #-236]	; 0xffffff14
   13d30:	cmp	r2, r3
   13d34:	beq	14758 <argp_parse@@Base+0xca4>
   13d38:	ldr	r3, [pc, #2884]	; 14884 <argp_parse@@Base+0xdd0>
   13d3c:	ldr	r3, [r3]
   13d40:	str	r3, [fp, #-56]	; 0xffffffc8
   13d44:	ldr	r2, [fp, #-100]	; 0xffffff9c
   13d48:	ldr	r5, [fp, #-84]	; 0xffffffac
   13d4c:	ldr	sl, [pc, #2876]	; 14890 <argp_parse@@Base+0xddc>
   13d50:	mov	r0, r4
   13d54:	mov	r6, #0
   13d58:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13d5c:	cmp	r3, #0
   13d60:	beq	141f4 <argp_parse@@Base+0x740>
   13d64:	cmp	r3, r5
   13d68:	strgt	r6, [fp, #-72]	; 0xffffffb8
   13d6c:	bgt	141f4 <argp_parse@@Base+0x740>
   13d70:	cmp	r5, r0
   13d74:	blt	14590 <argp_parse@@Base+0xadc>
   13d78:	cmp	r5, r0
   13d7c:	bne	1459c <argp_parse@@Base+0xae8>
   13d80:	ldr	r6, [fp, #-112]	; 0xffffff90
   13d84:	ldr	ip, [fp, #-108]	; 0xffffff94
   13d88:	cmp	r6, ip
   13d8c:	bcs	14820 <argp_parse@@Base+0xd6c>
   13d90:	mov	r5, #0
   13d94:	add	r6, r6, #36	; 0x24
   13d98:	mov	r8, r5
   13d9c:	ldr	r7, [pc, #2800]	; 14894 <argp_parse@@Base+0xde0>
   13da0:	mov	r0, r5
   13da4:	b	13dec <argp_parse@@Base+0x338>
   13da8:	ldr	ip, [r6, #-4]
   13dac:	str	ip, [fp, #-60]	; 0xffffffc4
   13db0:	ldr	ip, [r6, #-12]
   13db4:	str	ip, [fp, #-68]	; 0xffffffbc
   13db8:	ldr	ip, [r6, #-8]
   13dbc:	str	r3, [fp, #-76]	; 0xffffffb4
   13dc0:	str	ip, [fp, #-64]	; 0xffffffc0
   13dc4:	blx	r4
   13dc8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13dcc:	str	r3, [r6, #-4]
   13dd0:	ldr	ip, [fp, #-108]	; 0xffffff94
   13dd4:	cmp	ip, r6
   13dd8:	bls	147c8 <argp_parse@@Base+0xd14>
   13ddc:	cmp	r0, #7
   13de0:	cmpne	r0, #0
   13de4:	bne	14788 <argp_parse@@Base+0xcd4>
   13de8:	add	r6, r6, #36	; 0x24
   13dec:	ldr	r3, [r6, #-24]	; 0xffffffe8
   13df0:	cmp	r3, #0
   13df4:	bne	13dd4 <argp_parse@@Base+0x320>
   13df8:	ldr	r4, [r6, #-36]	; 0xffffffdc
   13dfc:	sub	r2, fp, #96	; 0x60
   13e00:	cmp	r4, #0
   13e04:	mov	r1, r8
   13e08:	mov	r0, r7
   13e0c:	bne	13da8 <argp_parse@@Base+0x2f4>
   13e10:	cmp	ip, r6
   13e14:	mov	r0, #7
   13e18:	bhi	13de8 <argp_parse@@Base+0x334>
   13e1c:	ldr	r6, [fp, #-112]	; 0xffffff90
   13e20:	sub	r4, ip, #36	; 0x24
   13e24:	cmp	r6, r4
   13e28:	movls	r5, #7
   13e2c:	bhi	13eb4 <argp_parse@@Base+0x400>
   13e30:	cmp	r5, #7
   13e34:	cmpne	r5, #0
   13e38:	bne	1479c <argp_parse@@Base+0xce8>
   13e3c:	sub	r4, r4, #36	; 0x24
   13e40:	mov	r8, #0
   13e44:	ldr	r7, [pc, #2636]	; 14898 <argp_parse@@Base+0xde4>
   13e48:	b	13e94 <argp_parse@@Base+0x3e0>
   13e4c:	ldr	ip, [r4, #68]	; 0x44
   13e50:	ldr	lr, [r4, #48]	; 0x30
   13e54:	str	ip, [fp, #-60]	; 0xffffffc4
   13e58:	ldr	ip, [r4, #60]	; 0x3c
   13e5c:	str	ip, [fp, #-68]	; 0xffffffbc
   13e60:	ldr	ip, [r4, #64]	; 0x40
   13e64:	str	lr, [fp, #-76]	; 0xffffffb4
   13e68:	str	ip, [fp, #-64]	; 0xffffffc0
   13e6c:	blx	r3
   13e70:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13e74:	str	r3, [r4, #68]	; 0x44
   13e78:	ldr	r6, [fp, #-112]	; 0xffffff90
   13e7c:	cmp	r6, r4
   13e80:	bhi	14818 <argp_parse@@Base+0xd64>
   13e84:	cmp	r0, #7
   13e88:	cmpne	r0, #0
   13e8c:	bne	147ac <argp_parse@@Base+0xcf8>
   13e90:	sub	r4, r4, #36	; 0x24
   13e94:	ldr	r3, [r4, #36]	; 0x24
   13e98:	sub	r2, fp, #96	; 0x60
   13e9c:	cmp	r3, #0
   13ea0:	mov	r1, r8
   13ea4:	mov	r0, r7
   13ea8:	bne	13e4c <argp_parse@@Base+0x398>
   13eac:	cmp	r6, r4
   13eb0:	bls	13e90 <argp_parse@@Base+0x3dc>
   13eb4:	ldr	r3, [fp, #4]
   13eb8:	cmp	r3, #0
   13ebc:	beq	13ed8 <argp_parse@@Base+0x424>
   13ec0:	mov	r5, #0
   13ec4:	ldr	r2, [fp, #4]
   13ec8:	ldr	r3, [fp, #-84]	; 0xffffffac
   13ecc:	str	r3, [r2]
   13ed0:	cmp	r5, #0
   13ed4:	bne	147bc <argp_parse@@Base+0xd08>
   13ed8:	ldr	ip, [fp, #-108]	; 0xffffff94
   13edc:	b	145b4 <argp_parse@@Base+0xb00>
   13ee0:	ldr	r6, [fp, #-112]	; 0xffffff90
   13ee4:	mov	r5, r0
   13ee8:	ldr	ip, [fp, #-108]	; 0xffffff94
   13eec:	cmp	r6, ip
   13ef0:	mov	r4, ip
   13ef4:	subcs	r4, ip, #36	; 0x24
   13ef8:	bcs	13f68 <argp_parse@@Base+0x4b4>
   13efc:	ldr	r8, [pc, #2456]	; 1489c <argp_parse@@Base+0xde8>
   13f00:	add	r6, r6, #36	; 0x24
   13f04:	mov	r9, #0
   13f08:	ldr	r3, [r6, #-36]	; 0xffffffdc
   13f0c:	sub	r2, fp, #96	; 0x60
   13f10:	cmp	r3, #0
   13f14:	mov	r1, r9
   13f18:	mov	r0, r8
   13f1c:	mov	r7, r6
   13f20:	beq	13f54 <argp_parse@@Base+0x4a0>
   13f24:	ldr	ip, [r6, #-4]
   13f28:	ldr	lr, [r6, #-24]	; 0xffffffe8
   13f2c:	str	ip, [fp, #-60]	; 0xffffffc4
   13f30:	ldr	ip, [r6, #-12]
   13f34:	str	ip, [fp, #-68]	; 0xffffffbc
   13f38:	ldr	ip, [r6, #-8]
   13f3c:	str	lr, [fp, #-76]	; 0xffffffb4
   13f40:	str	ip, [fp, #-64]	; 0xffffffc0
   13f44:	blx	r3
   13f48:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13f4c:	str	r3, [r6, #-4]
   13f50:	ldr	r4, [fp, #-108]	; 0xffffff94
   13f54:	cmp	r7, r4
   13f58:	add	r6, r6, #36	; 0x24
   13f5c:	bcc	13f08 <argp_parse@@Base+0x454>
   13f60:	ldr	r6, [fp, #-112]	; 0xffffff90
   13f64:	sub	r4, r4, #36	; 0x24
   13f68:	cmp	r6, r4
   13f6c:	bhi	13fd4 <argp_parse@@Base+0x520>
   13f70:	ldr	r8, [pc, #2344]	; 148a0 <argp_parse@@Base+0xdec>
   13f74:	sub	r4, r4, #36	; 0x24
   13f78:	mov	r9, #0
   13f7c:	ldr	r3, [r4, #36]	; 0x24
   13f80:	sub	r2, fp, #96	; 0x60
   13f84:	cmp	r3, #0
   13f88:	mov	r1, r9
   13f8c:	mov	r0, r8
   13f90:	mov	r7, r4
   13f94:	beq	13fc8 <argp_parse@@Base+0x514>
   13f98:	ldr	ip, [r4, #68]	; 0x44
   13f9c:	ldr	lr, [r4, #48]	; 0x30
   13fa0:	str	ip, [fp, #-60]	; 0xffffffc4
   13fa4:	ldr	ip, [r4, #60]	; 0x3c
   13fa8:	str	ip, [fp, #-68]	; 0xffffffbc
   13fac:	ldr	ip, [r4, #64]	; 0x40
   13fb0:	str	lr, [fp, #-76]	; 0xffffffb4
   13fb4:	str	ip, [fp, #-64]	; 0xffffffc0
   13fb8:	blx	r3
   13fbc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13fc0:	str	r3, [r4, #68]	; 0x44
   13fc4:	ldr	r6, [fp, #-112]	; 0xffffff90
   13fc8:	cmp	r6, r7
   13fcc:	sub	r4, r4, #36	; 0x24
   13fd0:	bls	13f7c <argp_parse@@Base+0x4c8>
   13fd4:	cmp	r5, #7
   13fd8:	moveq	r5, #22
   13fdc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13fe0:	bl	14a30 <argp_parse@@Base+0xf7c>
   13fe4:	mov	r0, r5
   13fe8:	sub	sp, fp, #32
   13fec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ff0:	ldr	r3, [fp, #8]
   13ff4:	add	r4, r5, #36	; 0x24
   13ff8:	str	r3, [r5, #24]
   13ffc:	mov	r7, #0
   14000:	ldr	r6, [pc, #2204]	; 148a4 <argp_parse@@Base+0xdf0>
   14004:	b	1405c <argp_parse@@Base+0x5a8>
   14008:	ldr	r2, [r4, #-4]
   1400c:	ldr	r0, [r4, #-24]	; 0xffffffe8
   14010:	str	r2, [fp, #-60]	; 0xffffffc4
   14014:	ldr	r1, [r4, #-12]
   14018:	sub	r2, fp, #96	; 0x60
   1401c:	str	r1, [fp, #-68]	; 0xffffffbc
   14020:	ldr	ip, [r4, #-8]
   14024:	mov	r1, r7
   14028:	str	r0, [fp, #-76]	; 0xffffffb4
   1402c:	str	ip, [fp, #-64]	; 0xffffffc0
   14030:	mov	r0, r6
   14034:	blx	r3
   14038:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1403c:	str	r3, [r4, #-4]
   14040:	ldr	r3, [fp, #-108]	; 0xffffff94
   14044:	cmp	r3, r4
   14048:	bls	14854 <argp_parse@@Base+0xda0>
   1404c:	cmp	r0, #7
   14050:	cmpne	r0, #0
   14054:	bne	14198 <argp_parse@@Base+0x6e4>
   14058:	add	r4, r4, #36	; 0x24
   1405c:	ldr	r3, [r4, #-20]	; 0xffffffec
   14060:	cmp	r3, #0
   14064:	ldrne	r3, [r3, #28]
   14068:	ldrne	r2, [r4, #-16]
   1406c:	ldrne	r3, [r3, r2, lsl #2]
   14070:	strne	r3, [r4, #-12]
   14074:	ldr	r3, [r4, #-36]	; 0xffffffdc
   14078:	cmp	r3, #0
   1407c:	bne	14008 <argp_parse@@Base+0x554>
   14080:	ldr	r3, [r4, #-32]	; 0xffffffe0
   14084:	ldr	r3, [r3, #16]
   14088:	cmp	r3, #0
   1408c:	beq	140b4 <argp_parse@@Base+0x600>
   14090:	ldr	r3, [r3]
   14094:	cmp	r3, #0
   14098:	beq	140b4 <argp_parse@@Base+0x600>
   1409c:	ldr	r3, [r4, #-8]
   140a0:	ldr	r2, [r4, #-12]
   140a4:	str	r2, [r3]
   140a8:	ldr	r3, [r4, #-36]	; 0xffffffdc
   140ac:	cmp	r3, #0
   140b0:	bne	14008 <argp_parse@@Base+0x554>
   140b4:	ldr	r3, [fp, #-108]	; 0xffffff94
   140b8:	cmp	r3, r4
   140bc:	bhi	14058 <argp_parse@@Base+0x5a4>
   140c0:	b	13d10 <argp_parse@@Base+0x25c>
   140c4:	sub	sp, sp, #72	; 0x48
   140c8:	add	r4, sp, #8
   140cc:	sub	sp, sp, #40	; 0x28
   140d0:	add	r6, sp, #8
   140d4:	mov	r1, r3
   140d8:	str	r3, [r6]
   140dc:	str	r3, [r6, #4]
   140e0:	str	r3, [r6, #8]
   140e4:	str	r3, [r6, #12]
   140e8:	str	r3, [r6, #20]
   140ec:	str	r3, [r6, #24]
   140f0:	mov	r2, #64	; 0x40
   140f4:	mov	r0, r4
   140f8:	str	r4, [r6, #16]
   140fc:	bl	11808 <memset@plt>
   14100:	ldr	r2, [pc, #1952]	; 148a8 <argp_parse@@Base+0xdf4>
   14104:	cmp	r8, #0
   14108:	addne	r3, r4, #16
   1410c:	ldr	r2, [r2]
   14110:	moveq	r3, r4
   14114:	ldr	r1, [pc, #1936]	; 148ac <argp_parse@@Base+0xdf8>
   14118:	strne	r8, [r4]
   1411c:	cmp	r2, #0
   14120:	str	r1, [r3]
   14124:	beq	14770 <argp_parse@@Base+0xcbc>
   14128:	ldr	r2, [pc, #1920]	; 148b0 <argp_parse@@Base+0xdfc>
   1412c:	add	ip, r3, #32
   14130:	str	r2, [r3, #16]
   14134:	mov	r9, #0
   14138:	sub	r5, fp, #196	; 0xc4
   1413c:	mov	r1, r9
   14140:	mov	r0, r5
   14144:	mov	r2, #36	; 0x24
   14148:	str	r9, [ip]
   1414c:	bl	11808 <memset@plt>
   14150:	ands	r3, r7, #4
   14154:	moveq	r0, #1
   14158:	movne	r0, r9
   1415c:	str	r3, [fp, #-244]	; 0xffffff0c
   14160:	mov	r8, r6
   14164:	str	r9, [fp, #-224]	; 0xffffff20
   14168:	str	r9, [fp, #-220]	; 0xffffff24
   1416c:	str	r9, [fp, #-216]	; 0xffffff28
   14170:	str	r0, [fp, #-228]	; 0xffffff1c
   14174:	b	13b4c <argp_parse@@Base+0x98>
   14178:	ldr	r3, [fp, #-244]	; 0xffffff0c
   1417c:	cmp	r3, #0
   14180:	addne	r3, sl, #1
   14184:	movne	r2, #43	; 0x2b
   14188:	strbne	r2, [sl]
   1418c:	strne	r3, [fp, #-208]	; 0xffffff30
   14190:	movne	sl, r3
   14194:	b	13c78 <argp_parse@@Base+0x1c4>
   14198:	mov	r5, r0
   1419c:	mov	r0, r5
   141a0:	sub	sp, fp, #32
   141a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   141a8:	ldr	r5, [fp, #-112]	; 0xffffff90
   141ac:	mov	r6, r5
   141b0:	str	r5, [fp, #-108]	; 0xffffff94
   141b4:	b	13cbc <argp_parse@@Base+0x208>
   141b8:	tst	r3, #1
   141bc:	mov	r3, #0
   141c0:	str	r3, [fp, #-144]	; 0xffffff70
   141c4:	ldr	r4, [fp, #-92]	; 0xffffffa4
   141c8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   141cc:	subne	r3, r3, #4
   141d0:	addne	r4, r4, #1
   141d4:	strne	r3, [fp, #-88]	; 0xffffffa8
   141d8:	strne	r4, [fp, #-92]	; 0xffffffa4
   141dc:	b	13d2c <argp_parse@@Base+0x278>
   141e0:	ldr	r3, [fp, #-236]	; 0xffffff14
   141e4:	ldr	r0, [r3]
   141e8:	bl	14984 <argp_parse@@Base+0xed0>
   141ec:	str	r0, [r4]
   141f0:	b	13b00 <argp_parse@@Base+0x4c>
   141f4:	cmp	r2, #0
   141f8:	beq	13d70 <argp_parse@@Base+0x2bc>
   141fc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14200:	str	r5, [fp, #-148]	; 0xffffff6c
   14204:	ands	ip, r3, #64	; 0x40
   14208:	mvn	r3, #0
   1420c:	str	r3, [fp, #-140]	; 0xffffff74
   14210:	ldr	r2, [fp, #-156]	; 0xffffff64
   14214:	ldr	r3, [fp, #-152]	; 0xffffff68
   14218:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1421c:	beq	1453c <argp_parse@@Base+0xa88>
   14220:	sub	ip, fp, #148	; 0x94
   14224:	stm	sp, {r6, ip}
   14228:	bl	14b04 <argp_parse@@Base+0x1050>
   1422c:	ldr	r5, [fp, #-148]	; 0xffffff6c
   14230:	str	r5, [fp, #-84]	; 0xffffffac
   14234:	mov	r7, r0
   14238:	cmn	r7, #1
   1423c:	beq	1455c <argp_parse@@Base+0xaa8>
   14240:	cmp	r7, #63	; 0x3f
   14244:	beq	14660 <argp_parse@@Base+0xbac>
   14248:	cmp	r7, #1
   1424c:	beq	143a4 <argp_parse@@Base+0x8f0>
   14250:	asrs	r8, r7, #24
   14254:	bne	14300 <argp_parse@@Base+0x84c>
   14258:	mov	r1, r7
   1425c:	ldr	r0, [fp, #-156]	; 0xffffff64
   14260:	bl	117c0 <strchr@plt>
   14264:	cmp	r0, #0
   14268:	beq	14370 <argp_parse@@Base+0x8bc>
   1426c:	ldr	r4, [fp, #-112]	; 0xffffff90
   14270:	ldr	r2, [fp, #-108]	; 0xffffff94
   14274:	cmp	r4, r2
   14278:	bcc	1428c <argp_parse@@Base+0x7d8>
   1427c:	b	14370 <argp_parse@@Base+0x8bc>
   14280:	add	r4, r4, #36	; 0x24
   14284:	cmp	r4, r2
   14288:	bcs	14370 <argp_parse@@Base+0x8bc>
   1428c:	ldr	r3, [r4, #8]
   14290:	cmp	r0, r3
   14294:	bcs	14280 <argp_parse@@Base+0x7cc>
   14298:	ldr	r3, [r4]
   1429c:	cmp	r3, #0
   142a0:	beq	14370 <argp_parse@@Base+0x8bc>
   142a4:	ldr	r2, [r4, #32]
   142a8:	ldr	r0, [r4, #28]
   142ac:	ldr	ip, [r4, #24]
   142b0:	str	r2, [fp, #-60]	; 0xffffffc4
   142b4:	ldr	r2, [r4, #12]
   142b8:	ldr	r1, [fp, #-136]	; 0xffffff78
   142bc:	str	r0, [fp, #-64]	; 0xffffffc0
   142c0:	str	r2, [fp, #-76]	; 0xffffffb4
   142c4:	str	ip, [fp, #-68]	; 0xffffffbc
   142c8:	sub	r2, fp, #96	; 0x60
   142cc:	mov	r0, r7
   142d0:	blx	r3
   142d4:	mov	r8, r6
   142d8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   142dc:	str	r3, [r4, #32]
   142e0:	cmp	r0, #7
   142e4:	beq	14368 <argp_parse@@Base+0x8b4>
   142e8:	cmp	r0, #0
   142ec:	bne	13ee0 <argp_parse@@Base+0x42c>
   142f0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   142f4:	ldr	r5, [fp, #-84]	; 0xffffffac
   142f8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   142fc:	b	13d58 <argp_parse@@Base+0x2a4>
   14300:	add	r3, r8, r8, lsl #3
   14304:	ldr	r2, [fp, #-112]	; 0xffffff90
   14308:	lsl	r3, r3, #2
   1430c:	sub	r3, r3, #36	; 0x24
   14310:	add	r4, r2, r3
   14314:	ldr	r5, [r2, r3]
   14318:	ands	r3, r7, #8388608	; 0x800000
   1431c:	movne	r3, #-16777216	; 0xff000000
   14320:	cmp	r5, #0
   14324:	beq	144f4 <argp_parse@@Base+0xa40>
   14328:	ldr	r0, [r4, #32]
   1432c:	ldr	r2, [r4, #24]
   14330:	str	r0, [fp, #-60]	; 0xffffffc4
   14334:	ldr	r0, [r4, #28]
   14338:	str	r2, [fp, #-68]	; 0xffffffbc
   1433c:	ldr	r2, [r4, #12]
   14340:	str	r0, [fp, #-64]	; 0xffffffc0
   14344:	bic	r0, r7, #-16777216	; 0xff000000
   14348:	str	r2, [fp, #-76]	; 0xffffffb4
   1434c:	orr	r0, r0, r3
   14350:	ldr	r1, [fp, #-136]	; 0xffffff78
   14354:	sub	r2, fp, #96	; 0x60
   14358:	blx	r5
   1435c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14360:	str	r3, [r4, #32]
   14364:	b	142e0 <argp_parse@@Base+0x82c>
   14368:	cmp	r8, #0
   1436c:	bne	144f4 <argp_parse@@Base+0xa40>
   14370:	mov	r2, r7
   14374:	ldr	r3, [pc, #1336]	; 148b4 <argp_parse@@Base+0xe00>
   14378:	ldr	r1, [pc, #1336]	; 148b8 <argp_parse@@Base+0xe04>
   1437c:	sub	r0, fp, #96	; 0x60
   14380:	bl	1a410 <argp_error@@Base>
   14384:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14388:	mov	r2, #260	; 0x104
   1438c:	sub	r0, fp, #96	; 0x60
   14390:	bl	1a360 <argp_state_help@@Base>
   14394:	mov	r5, #7
   14398:	ldr	r6, [fp, #-112]	; 0xffffff90
   1439c:	ldr	ip, [fp, #-108]	; 0xffffff94
   143a0:	b	13eec <argp_parse@@Base+0x438>
   143a4:	ldr	r7, [fp, #-136]	; 0xffffff78
   143a8:	ldr	r3, [fp, #-112]	; 0xffffff90
   143ac:	ldr	ip, [fp, #-108]	; 0xffffff94
   143b0:	sub	r8, r5, #1
   143b4:	cmp	r3, ip
   143b8:	str	r8, [fp, #-84]	; 0xffffffac
   143bc:	bcs	144e8 <argp_parse@@Base+0xa34>
   143c0:	mov	lr, r8
   143c4:	add	r4, r3, #36	; 0x24
   143c8:	ldr	r3, [r4, #-36]	; 0xffffffdc
   143cc:	add	r5, lr, #1
   143d0:	cmp	r3, #0
   143d4:	str	r5, [fp, #-84]	; 0xffffffac
   143d8:	sub	r2, fp, #96	; 0x60
   143dc:	mov	r1, r7
   143e0:	mov	r0, r6
   143e4:	sub	r5, r4, #36	; 0x24
   143e8:	mov	r9, r4
   143ec:	streq	lr, [fp, #-84]	; 0xffffffac
   143f0:	beq	144dc <argp_parse@@Base+0xa28>
   143f4:	ldr	ip, [r4, #-4]
   143f8:	ldr	lr, [r4, #-24]	; 0xffffffe8
   143fc:	str	ip, [fp, #-60]	; 0xffffffc4
   14400:	ldr	ip, [r4, #-12]
   14404:	str	ip, [fp, #-68]	; 0xffffffbc
   14408:	ldr	ip, [r4, #-8]
   1440c:	str	lr, [fp, #-76]	; 0xffffffb4
   14410:	str	ip, [fp, #-64]	; 0xffffffc0
   14414:	blx	r3
   14418:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1441c:	str	r3, [r4, #-4]
   14420:	cmp	r0, #7
   14424:	beq	14460 <argp_parse@@Base+0x9ac>
   14428:	cmp	r0, #0
   1442c:	bne	13ee0 <argp_parse@@Base+0x42c>
   14430:	ldr	r0, [fp, #-92]	; 0xffffffa4
   14434:	ldr	r5, [fp, #-84]	; 0xffffffac
   14438:	cmp	r8, r5
   1443c:	sublt	r8, r5, r8
   14440:	ldrlt	r3, [r4, #-24]	; 0xffffffe8
   14444:	movge	r3, #1
   14448:	addlt	r8, r3, r8
   1444c:	strlt	r8, [r4, #-24]	; 0xffffffe8
   14450:	ldrlt	r2, [fp, #-100]	; 0xffffff9c
   14454:	strge	r3, [fp, #-100]	; 0xffffff9c
   14458:	movge	r2, r3
   1445c:	b	13d58 <argp_parse@@Base+0x2a4>
   14460:	ldr	lr, [fp, #-84]	; 0xffffffac
   14464:	ldr	r3, [r4, #-36]	; 0xffffffdc
   14468:	sub	lr, lr, #1
   1446c:	cmp	r3, #0
   14470:	str	lr, [fp, #-84]	; 0xffffffac
   14474:	beq	144d8 <argp_parse@@Base+0xa24>
   14478:	add	r0, r5, #24
   1447c:	ldr	r2, [r5, #12]
   14480:	ldm	r0, {r0, r1, ip}
   14484:	str	r2, [fp, #-76]	; 0xffffffb4
   14488:	sub	r2, fp, #96	; 0x60
   1448c:	str	ip, [fp, #-60]	; 0xffffffc4
   14490:	str	r0, [fp, #-68]	; 0xffffffbc
   14494:	str	r1, [fp, #-64]	; 0xffffffc0
   14498:	mov	r0, sl
   1449c:	mov	r1, r6
   144a0:	blx	r3
   144a4:	ldr	ip, [fp, #-108]	; 0xffffff94
   144a8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   144ac:	cmp	r4, ip
   144b0:	movcs	r1, #0
   144b4:	movcc	r1, #1
   144b8:	mov	r3, r4
   144bc:	str	r2, [r5, #32]
   144c0:	cmp	r0, #7
   144c4:	movne	r1, #0
   144c8:	cmp	r1, #0
   144cc:	beq	1483c <argp_parse@@Base+0xd88>
   144d0:	ldr	lr, [fp, #-84]	; 0xffffffac
   144d4:	b	143c4 <argp_parse@@Base+0x910>
   144d8:	ldr	ip, [fp, #-108]	; 0xffffff94
   144dc:	cmp	r9, ip
   144e0:	add	r4, r4, #36	; 0x24
   144e4:	bcc	143c8 <argp_parse@@Base+0x914>
   144e8:	ldr	r5, [fp, #-84]	; 0xffffffac
   144ec:	ldr	r0, [fp, #-92]	; 0xffffffa4
   144f0:	b	13d78 <argp_parse@@Base+0x2c4>
   144f4:	ldr	r3, [fp, #-152]	; 0xffffff68
   144f8:	ldr	r2, [r3, #12]
   144fc:	cmp	r7, r2
   14500:	bne	14518 <argp_parse@@Base+0xa64>
   14504:	b	1464c <argp_parse@@Base+0xb98>
   14508:	add	r3, r3, #16
   1450c:	ldr	r2, [r3, #12]
   14510:	cmp	r7, r2
   14514:	beq	1464c <argp_parse@@Base+0xb98>
   14518:	ldr	r2, [r3]
   1451c:	cmp	r2, #0
   14520:	bne	14508 <argp_parse@@Base+0xa54>
   14524:	ldr	r2, [pc, #912]	; 148bc <argp_parse@@Base+0xe08>
   14528:	ldr	r3, [pc, #900]	; 148b4 <argp_parse@@Base+0xe00>
   1452c:	ldr	r1, [pc, #908]	; 148c0 <argp_parse@@Base+0xe0c>
   14530:	sub	r0, fp, #96	; 0x60
   14534:	bl	1a410 <argp_error@@Base>
   14538:	b	14384 <argp_parse@@Base+0x8d0>
   1453c:	sub	lr, fp, #148	; 0x94
   14540:	stm	sp, {ip, lr}
   14544:	bl	14ab0 <argp_parse@@Base+0xffc>
   14548:	ldr	r5, [fp, #-148]	; 0xffffff6c
   1454c:	str	r5, [fp, #-84]	; 0xffffffac
   14550:	mov	r7, r0
   14554:	cmn	r7, #1
   14558:	bne	14240 <argp_parse@@Base+0x78c>
   1455c:	cmp	r5, #1
   14560:	str	r6, [fp, #-100]	; 0xffffff9c
   14564:	ble	14584 <argp_parse@@Base+0xad0>
   14568:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1456c:	sub	r3, r5, #-1073741823	; 0xc0000001
   14570:	ldr	r1, [pc, #844]	; 148c4 <argp_parse@@Base+0xe10>
   14574:	ldr	r0, [r2, r3, lsl #2]
   14578:	bl	11574 <strcmp@plt>
   1457c:	cmp	r0, #0
   14580:	streq	r5, [fp, #-72]	; 0xffffffb8
   14584:	ldr	r0, [fp, #-92]	; 0xffffffa4
   14588:	cmp	r5, r0
   1458c:	bge	13d78 <argp_parse@@Base+0x2c4>
   14590:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14594:	tst	r3, #4
   14598:	beq	14670 <argp_parse@@Base+0xbbc>
   1459c:	ldr	r3, [fp, #4]
   145a0:	cmp	r3, #0
   145a4:	beq	147e8 <argp_parse@@Base+0xd34>
   145a8:	ldr	r6, [fp, #-112]	; 0xffffff90
   145ac:	ldr	ip, [fp, #-108]	; 0xffffff94
   145b0:	str	r5, [r3]
   145b4:	sub	r3, ip, #36	; 0x24
   145b8:	cmp	r6, r3
   145bc:	bhi	146a4 <argp_parse@@Base+0xbf0>
   145c0:	ldr	r7, [pc, #768]	; 148c8 <argp_parse@@Base+0xe14>
   145c4:	sub	r4, ip, #72	; 0x48
   145c8:	mov	r8, #0
   145cc:	ldr	r3, [r4, #36]	; 0x24
   145d0:	sub	r2, fp, #96	; 0x60
   145d4:	cmp	r3, #0
   145d8:	mov	r1, r8
   145dc:	mov	r0, r7
   145e0:	beq	1463c <argp_parse@@Base+0xb88>
   145e4:	ldr	ip, [r4, #68]	; 0x44
   145e8:	ldr	lr, [r4, #48]	; 0x30
   145ec:	str	ip, [fp, #-60]	; 0xffffffc4
   145f0:	ldr	ip, [r4, #60]	; 0x3c
   145f4:	str	ip, [fp, #-68]	; 0xffffffbc
   145f8:	ldr	ip, [r4, #64]	; 0x40
   145fc:	str	lr, [fp, #-76]	; 0xffffffb4
   14600:	str	ip, [fp, #-64]	; 0xffffffc0
   14604:	blx	r3
   14608:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1460c:	str	r3, [r4, #68]	; 0x44
   14610:	ldr	r6, [fp, #-112]	; 0xffffff90
   14614:	cmp	r6, r4
   14618:	bhi	14684 <argp_parse@@Base+0xbd0>
   1461c:	cmp	r0, #7
   14620:	cmpne	r0, #0
   14624:	sub	r4, r4, #36	; 0x24
   14628:	beq	145cc <argp_parse@@Base+0xb18>
   1462c:	ldr	r4, [fp, #-108]	; 0xffffff94
   14630:	mov	r5, r0
   14634:	sub	r4, r4, #36	; 0x24
   14638:	b	13f68 <argp_parse@@Base+0x4b4>
   1463c:	cmp	r6, r4
   14640:	bhi	14690 <argp_parse@@Base+0xbdc>
   14644:	sub	r4, r4, #36	; 0x24
   14648:	b	145cc <argp_parse@@Base+0xb18>
   1464c:	ldr	r2, [r3]
   14650:	ldr	r3, [pc, #612]	; 148bc <argp_parse@@Base+0xe08>
   14654:	cmp	r2, #0
   14658:	moveq	r2, r3
   1465c:	b	14528 <argp_parse@@Base+0xa74>
   14660:	ldr	r3, [fp, #-140]	; 0xffffff74
   14664:	cmn	r3, #1
   14668:	bne	14384 <argp_parse@@Base+0x8d0>
   1466c:	b	14258 <argp_parse@@Base+0x7a4>
   14670:	ldr	r3, [fp, #-88]	; 0xffffffa8
   14674:	ldr	r7, [r3, r5, lsl #2]
   14678:	add	r5, r5, #1
   1467c:	str	r7, [fp, #-136]	; 0xffffff78
   14680:	b	143a8 <argp_parse@@Base+0x8f4>
   14684:	cmp	r0, #7
   14688:	mov	r5, r0
   1468c:	bne	1474c <argp_parse@@Base+0xc98>
   14690:	ldr	r4, [fp, #-108]	; 0xffffff94
   14694:	sub	r4, r4, #36	; 0x24
   14698:	cmp	r6, r4
   1469c:	movls	r5, #0
   146a0:	bls	13f70 <argp_parse@@Base+0x4bc>
   146a4:	mov	r5, #0
   146a8:	b	13fdc <argp_parse@@Base+0x528>
   146ac:	ldr	r3, [r8, #4]
   146b0:	cmp	r3, #0
   146b4:	moveq	r6, #36	; 0x24
   146b8:	movne	r6, #72	; 0x48
   146bc:	movne	r3, #1
   146c0:	strne	r3, [fp, #-220]	; 0xffffff24
   146c4:	cmp	r4, #0
   146c8:	beq	14728 <argp_parse@@Base+0xc74>
   146cc:	ldr	r0, [r4]
   146d0:	cmp	r0, #0
   146d4:	beq	14728 <argp_parse@@Base+0xc74>
   146d8:	sub	r1, fp, #228	; 0xe4
   146dc:	bl	133e0 <__assert_fail@plt+0x1a58>
   146e0:	ldr	r3, [fp, #-216]	; 0xffffff28
   146e4:	ldr	r0, [r4, #16]!
   146e8:	add	r3, r3, #1
   146ec:	cmp	r0, #0
   146f0:	str	r3, [fp, #-216]	; 0xffffff28
   146f4:	bne	146d8 <argp_parse@@Base+0xc24>
   146f8:	ldr	r6, [fp, #-220]	; 0xffffff24
   146fc:	ldr	r2, [fp, #-224]	; 0xffffff20
   14700:	add	r6, r6, #1
   14704:	lsl	r4, r3, #2
   14708:	add	r6, r6, r6, lsl #3
   1470c:	add	r3, r2, #1
   14710:	lsl	r6, r6, #2
   14714:	add	sl, r4, r6
   14718:	add	r3, sl, r3, lsl #4
   1471c:	str	r3, [fp, #-232]	; 0xffffff18
   14720:	ldr	r0, [fp, #-228]	; 0xffffff1c
   14724:	b	13bcc <argp_parse@@Base+0x118>
   14728:	ldr	r4, [fp, #-216]	; 0xffffff28
   1472c:	ldr	r3, [fp, #-224]	; 0xffffff20
   14730:	ldr	r0, [fp, #-228]	; 0xffffff1c
   14734:	lsl	r4, r4, #2
   14738:	add	r3, r3, #1
   1473c:	add	sl, r4, r6
   14740:	add	r3, sl, r3, lsl #4
   14744:	str	r3, [fp, #-232]	; 0xffffff18
   14748:	b	13bcc <argp_parse@@Base+0x118>
   1474c:	ldr	r4, [fp, #-108]	; 0xffffff94
   14750:	sub	r4, r4, #36	; 0x24
   14754:	b	13f68 <argp_parse@@Base+0x4b4>
   14758:	ldr	r0, [r2]
   1475c:	cmp	r0, #0
   14760:	beq	13d38 <argp_parse@@Base+0x284>
   14764:	bl	14984 <argp_parse@@Base+0xed0>
   14768:	str	r0, [fp, #-56]	; 0xffffffc8
   1476c:	b	13d44 <argp_parse@@Base+0x290>
   14770:	ldr	r2, [pc, #340]	; 148cc <argp_parse@@Base+0xe18>
   14774:	ldr	r2, [r2]
   14778:	cmp	r2, #0
   1477c:	addeq	ip, r3, #16
   14780:	bne	14128 <argp_parse@@Base+0x674>
   14784:	b	14134 <argp_parse@@Base+0x680>
   14788:	ldr	r6, [fp, #-112]	; 0xffffff90
   1478c:	sub	ip, ip, #36	; 0x24
   14790:	cmp	r6, ip
   14794:	mov	r5, r0
   14798:	bls	147b0 <argp_parse@@Base+0xcfc>
   1479c:	ldr	r3, [fp, #4]
   147a0:	cmp	r3, #0
   147a4:	bne	13ec4 <argp_parse@@Base+0x410>
   147a8:	b	13ed0 <argp_parse@@Base+0x41c>
   147ac:	mov	r5, r0
   147b0:	ldr	r3, [fp, #4]
   147b4:	cmp	r3, #0
   147b8:	bne	13ec4 <argp_parse@@Base+0x410>
   147bc:	cmp	r5, #7
   147c0:	bne	13ee8 <argp_parse@@Base+0x434>
   147c4:	b	14384 <argp_parse@@Base+0x8d0>
   147c8:	ldr	r6, [fp, #-112]	; 0xffffff90
   147cc:	sub	r4, ip, #36	; 0x24
   147d0:	cmp	r4, r6
   147d4:	mov	r5, r0
   147d8:	bcs	13e30 <argp_parse@@Base+0x37c>
   147dc:	cmp	r5, #7
   147e0:	beq	13eb4 <argp_parse@@Base+0x400>
   147e4:	b	1479c <argp_parse@@Base+0xce8>
   147e8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   147ec:	ldr	r1, [fp, #-52]	; 0xffffffcc
   147f0:	tst	r3, #2
   147f4:	bne	14388 <argp_parse@@Base+0x8d4>
   147f8:	cmp	r1, #0
   147fc:	beq	14388 <argp_parse@@Base+0x8d4>
   14800:	mov	r0, r1
   14804:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14808:	ldr	r1, [pc, #192]	; 148d0 <argp_parse@@Base+0xe1c>
   1480c:	bl	117d8 <fprintf@plt>
   14810:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14814:	b	14388 <argp_parse@@Base+0x8d4>
   14818:	mov	r5, r0
   1481c:	b	147dc <argp_parse@@Base+0xd28>
   14820:	sub	r4, ip, #36	; 0x24
   14824:	cmp	r6, r4
   14828:	bls	13e3c <argp_parse@@Base+0x388>
   1482c:	ldr	r3, [fp, #4]
   14830:	cmp	r3, #0
   14834:	bne	13ec0 <argp_parse@@Base+0x40c>
   14838:	b	145b4 <argp_parse@@Base+0xb00>
   1483c:	cmp	r0, #0
   14840:	bne	1486c <argp_parse@@Base+0xdb8>
   14844:	ldr	r0, [fp, #-92]	; 0xffffffa4
   14848:	mov	r5, r0
   1484c:	str	r0, [fp, #-84]	; 0xffffffac
   14850:	b	14438 <argp_parse@@Base+0x984>
   14854:	cmp	r0, #7
   14858:	mov	r5, r0
   1485c:	beq	13d10 <argp_parse@@Base+0x25c>
   14860:	cmp	r0, #0
   14864:	bne	13fe4 <argp_parse@@Base+0x530>
   14868:	b	13d10 <argp_parse@@Base+0x25c>
   1486c:	cmp	r0, #7
   14870:	mov	r5, r0
   14874:	beq	144e8 <argp_parse@@Base+0xa34>
   14878:	ldr	r6, [fp, #-112]	; 0xffffff90
   1487c:	b	13eec <argp_parse@@Base+0x438>
   14880:	andeq	lr, r2, r4, ror #9
   14884:	ldrdeq	lr, [r2], -r8
   14888:	andeq	lr, r2, r8, ror #9
   1488c:	andeq	lr, r2, ip, ror #9
   14890:	tsteq	r0, r6
   14894:	tsteq	r0, r2
   14898:	tsteq	r0, r1
   1489c:	tsteq	r0, r5
   148a0:	tsteq	r0, r7
   148a4:	tsteq	r0, r3
   148a8:	andeq	lr, r2, r4, asr #10
   148ac:	andeq	sp, r1, r8, ror r1
   148b0:	muleq	r1, r4, r1
   148b4:			; <UNDEFINED> instruction: 0x0001d1b0
   148b8:	andeq	sp, r1, r8, asr #5
   148bc:	andeq	sp, r1, r0, asr #5
   148c0:	ldrdeq	sp, [r1], -r0
   148c4:	andeq	sp, r1, r4, asr #5
   148c8:	tsteq	r0, r4
   148cc:	andeq	lr, r2, r0, lsl #10
   148d0:	ldrdeq	sp, [r1], -ip
   148d4:	cmp	r1, #0
   148d8:	beq	14918 <argp_parse@@Base+0xe64>
   148dc:	ldr	r2, [r1, #52]	; 0x34
   148e0:	ldr	r3, [r2, #48]	; 0x30
   148e4:	ldr	r1, [r2, #52]	; 0x34
   148e8:	cmp	r3, r1
   148ec:	bcs	14918 <argp_parse@@Base+0xe64>
   148f0:	ldr	r2, [r3, #4]
   148f4:	cmp	r0, r2
   148f8:	bne	1490c <argp_parse@@Base+0xe58>
   148fc:	b	14920 <argp_parse@@Base+0xe6c>
   14900:	ldr	r2, [r3, #4]
   14904:	cmp	r2, r0
   14908:	beq	14920 <argp_parse@@Base+0xe6c>
   1490c:	add	r3, r3, #36	; 0x24
   14910:	cmp	r3, r1
   14914:	bcc	14900 <argp_parse@@Base+0xe4c>
   14918:	mov	r0, #0
   1491c:	bx	lr
   14920:	ldr	r0, [r3, #24]
   14924:	bx	lr
   14928:	ldr	ip, [pc, #32]	; 14950 <argp_parse@@Base+0xe9c>
   1492c:	push	{lr}		; (str lr, [sp, #-4]!)
   14930:	sub	sp, sp, #12
   14934:	ldm	ip, {r1, ip}
   14938:	ldr	r3, [pc, #20]	; 14954 <argp_parse@@Base+0xea0>
   1493c:	ldr	r2, [pc, #20]	; 14958 <argp_parse@@Base+0xea4>
   14940:	str	ip, [sp]
   14944:	bl	14ec4 <argp_parse@@Base+0x1410>
   14948:	add	sp, sp, #12
   1494c:	pop	{pc}		; (ldr pc, [sp], #4)
   14950:	andeq	lr, r2, r4, lsl #10
   14954:	andeq	sp, r1, r4, asr #7
   14958:	ldrdeq	sp, [r1], -r4
   1495c:	ldr	r3, [pc, #20]	; 14978 <argp_parse@@Base+0xec4>
   14960:	ldr	r2, [pc, #20]	; 1497c <argp_parse@@Base+0xec8>
   14964:	ldr	ip, [pc, #20]	; 14980 <argp_parse@@Base+0xecc>
   14968:	str	r0, [r3]
   1496c:	str	ip, [r2]
   14970:	str	r1, [r3, #4]
   14974:	bx	lr
   14978:	andeq	lr, r2, r4, lsl #10
   1497c:	andeq	lr, r2, r0, lsl #10
   14980:	andeq	r4, r1, r8, lsr #18
   14984:	ldrb	r3, [r0]
   14988:	cmp	r3, #47	; 0x2f
   1498c:	bne	1499c <argp_parse@@Base+0xee8>
   14990:	ldrb	r3, [r0, #1]!
   14994:	cmp	r3, #47	; 0x2f
   14998:	beq	14990 <argp_parse@@Base+0xedc>
   1499c:	cmp	r3, #0
   149a0:	bxeq	lr
   149a4:	mov	r2, #0
   149a8:	push	{lr}		; (str lr, [sp, #-4]!)
   149ac:	mov	ip, r2
   149b0:	mov	r1, r0
   149b4:	mov	lr, #1
   149b8:	cmp	r3, #47	; 0x2f
   149bc:	moveq	r2, lr
   149c0:	beq	149d0 <argp_parse@@Base+0xf1c>
   149c4:	cmp	r2, #0
   149c8:	movne	r0, r1
   149cc:	movne	r2, ip
   149d0:	ldrb	r3, [r1, #1]!
   149d4:	cmp	r3, #0
   149d8:	bne	149b8 <argp_parse@@Base+0xf04>
   149dc:	pop	{pc}		; (ldr pc, [sp], #4)
   149e0:	push	{r4, lr}
   149e4:	mov	r4, r0
   149e8:	bl	117b4 <strlen@plt>
   149ec:	cmp	r0, #1
   149f0:	popls	{r4, pc}
   149f4:	sub	r3, r0, #1
   149f8:	add	r2, r4, r3
   149fc:	ldrb	r1, [r4, r3]
   14a00:	cmp	r1, #47	; 0x2f
   14a04:	popne	{r4, pc}
   14a08:	cmp	r3, #1
   14a0c:	beq	14a20 <argp_parse@@Base+0xf6c>
   14a10:	ldrb	r1, [r2, #-1]!
   14a14:	sub	r0, r3, #1
   14a18:	cmp	r1, #47	; 0x2f
   14a1c:	beq	14a28 <argp_parse@@Base+0xf74>
   14a20:	mov	r0, r3
   14a24:	pop	{r4, pc}
   14a28:	mov	r3, r0
   14a2c:	b	14a08 <argp_parse@@Base+0xf54>
   14a30:	push	{r4, r5, lr}
   14a34:	sub	sp, sp, #12
   14a38:	mov	r5, r0
   14a3c:	bl	117f0 <__errno_location@plt>
   14a40:	mov	r2, #0
   14a44:	mov	r4, r0
   14a48:	ldr	r3, [r0]
   14a4c:	str	r2, [r4]
   14a50:	mov	r0, r5
   14a54:	str	r3, [sp]
   14a58:	str	r3, [sp, #4]
   14a5c:	bl	115e0 <free@plt>
   14a60:	ldr	r3, [r4]
   14a64:	add	r2, sp, #8
   14a68:	cmp	r3, #0
   14a6c:	moveq	r3, #4
   14a70:	movne	r3, #0
   14a74:	add	r3, r2, r3
   14a78:	ldr	r3, [r3, #-8]
   14a7c:	str	r3, [r4]
   14a80:	add	sp, sp, #12
   14a84:	pop	{r4, r5, pc}
   14a88:	push	{lr}		; (str lr, [sp, #-4]!)
   14a8c:	sub	sp, sp, #20
   14a90:	mov	ip, #0
   14a94:	ldr	lr, [sp, #24]
   14a98:	str	ip, [sp, #8]
   14a9c:	str	lr, [sp]
   14aa0:	str	ip, [sp, #4]
   14aa4:	bl	1b300 <argp_error@@Base+0xef0>
   14aa8:	add	sp, sp, #20
   14aac:	pop	{pc}		; (ldr pc, [sp], #4)
   14ab0:	push	{r4, lr}
   14ab4:	sub	sp, sp, #16
   14ab8:	mov	ip, #0
   14abc:	ldr	r4, [sp, #24]
   14ac0:	ldr	lr, [sp, #28]
   14ac4:	str	r4, [sp]
   14ac8:	str	lr, [sp, #8]
   14acc:	str	ip, [sp, #12]
   14ad0:	str	ip, [sp, #4]
   14ad4:	bl	1ad8c <argp_error@@Base+0x97c>
   14ad8:	add	sp, sp, #16
   14adc:	pop	{r4, pc}
   14ae0:	push	{r4, lr}
   14ae4:	sub	sp, sp, #16
   14ae8:	mov	lr, #0
   14aec:	ldr	r4, [sp, #24]
   14af0:	mov	ip, #1
   14af4:	stm	sp, {r4, ip, lr}
   14af8:	bl	1b300 <argp_error@@Base+0xef0>
   14afc:	add	sp, sp, #16
   14b00:	pop	{r4, pc}
   14b04:	push	{r4, r5, lr}
   14b08:	sub	sp, sp, #20
   14b0c:	mov	lr, #0
   14b10:	ldr	r5, [sp, #32]
   14b14:	ldr	r4, [sp, #36]	; 0x24
   14b18:	mov	ip, #1
   14b1c:	str	r5, [sp]
   14b20:	str	r4, [sp, #8]
   14b24:	str	lr, [sp, #12]
   14b28:	str	ip, [sp, #4]
   14b2c:	bl	1ad8c <argp_error@@Base+0x97c>
   14b30:	add	sp, sp, #20
   14b34:	pop	{r4, r5, pc}
   14b38:	push	{r1, r2, r3}
   14b3c:	push	{lr}		; (str lr, [sp, #-4]!)
   14b40:	sub	sp, sp, #8
   14b44:	add	r3, sp, #16
   14b48:	ldr	r2, [sp, #16]
   14b4c:	ldr	r1, [sp, #12]
   14b50:	str	r3, [sp, #4]
   14b54:	bl	116f4 <ioctl@plt>
   14b58:	add	sp, sp, #8
   14b5c:	pop	{lr}		; (ldr lr, [sp], #4)
   14b60:	add	sp, sp, #12
   14b64:	bx	lr
   14b68:	push	{r4, r5, r6, lr}
   14b6c:	subs	r4, r0, #0
   14b70:	beq	14be4 <argp_parse@@Base+0x1130>
   14b74:	mov	r1, #47	; 0x2f
   14b78:	bl	118a4 <strrchr@plt>
   14b7c:	subs	r5, r0, #0
   14b80:	beq	14bd0 <argp_parse@@Base+0x111c>
   14b84:	add	r6, r5, #1
   14b88:	sub	r3, r6, r4
   14b8c:	cmp	r3, #6
   14b90:	ble	14bd0 <argp_parse@@Base+0x111c>
   14b94:	mov	r2, #7
   14b98:	ldr	r1, [pc, #96]	; 14c00 <argp_parse@@Base+0x114c>
   14b9c:	sub	r0, r5, #6
   14ba0:	bl	11958 <strncmp@plt>
   14ba4:	cmp	r0, #0
   14ba8:	bne	14bd0 <argp_parse@@Base+0x111c>
   14bac:	mov	r2, #3
   14bb0:	ldr	r1, [pc, #76]	; 14c04 <argp_parse@@Base+0x1150>
   14bb4:	mov	r0, r6
   14bb8:	bl	11958 <strncmp@plt>
   14bbc:	cmp	r0, #0
   14bc0:	movne	r4, r6
   14bc4:	ldreq	r3, [pc, #60]	; 14c08 <argp_parse@@Base+0x1154>
   14bc8:	addeq	r4, r5, #4
   14bcc:	streq	r4, [r3]
   14bd0:	ldr	r2, [pc, #52]	; 14c0c <argp_parse@@Base+0x1158>
   14bd4:	ldr	r3, [pc, #52]	; 14c10 <argp_parse@@Base+0x115c>
   14bd8:	str	r4, [r2]
   14bdc:	str	r4, [r3]
   14be0:	pop	{r4, r5, r6, pc}
   14be4:	ldr	r3, [pc, #40]	; 14c14 <argp_parse@@Base+0x1160>
   14be8:	mov	r2, #55	; 0x37
   14bec:	mov	r1, #1
   14bf0:	ldr	r3, [r3]
   14bf4:	ldr	r0, [pc, #28]	; 14c18 <argp_parse@@Base+0x1164>
   14bf8:	bl	116dc <fwrite@plt>
   14bfc:	bl	11964 <abort@plt>
   14c00:	andeq	sp, r1, ip, lsl r4
   14c04:	andeq	sp, r1, r4, lsr #8
   14c08:	ldrdeq	lr, [r2], -r8
   14c0c:	andeq	lr, r2, ip, lsl #10
   14c10:	andeq	lr, r2, r4, ror #9
   14c14:	andeq	lr, r2, r8, ror #9
   14c18:	andeq	sp, r1, r4, ror #7
   14c1c:	push	{r4, r5, r6, r7, lr}
   14c20:	sub	sp, sp, #36	; 0x24
   14c24:	cmp	r1, #0
   14c28:	mov	r4, r0
   14c2c:	ldr	r5, [sp, #56]	; 0x38
   14c30:	ldr	r6, [sp, #60]	; 0x3c
   14c34:	beq	14e74 <argp_parse@@Base+0x13c0>
   14c38:	str	r3, [sp]
   14c3c:	mov	r3, r2
   14c40:	mov	r2, r1
   14c44:	ldr	r1, [pc, #564]	; 14e80 <argp_parse@@Base+0x13cc>
   14c48:	bl	117d8 <fprintf@plt>
   14c4c:	ldr	r3, [pc, #560]	; 14e84 <argp_parse@@Base+0x13d0>
   14c50:	ldr	r2, [pc, #560]	; 14e88 <argp_parse@@Base+0x13d4>
   14c54:	ldr	r1, [pc, #560]	; 14e8c <argp_parse@@Base+0x13d8>
   14c58:	mov	r0, r4
   14c5c:	bl	117d8 <fprintf@plt>
   14c60:	mov	r1, r4
   14c64:	mov	r0, #10
   14c68:	bl	118bc <fputc@plt>
   14c6c:	ldr	r1, [pc, #540]	; 14e90 <argp_parse@@Base+0x13dc>
   14c70:	ldr	r2, [pc, #540]	; 14e94 <argp_parse@@Base+0x13e0>
   14c74:	mov	r0, r4
   14c78:	bl	117d8 <fprintf@plt>
   14c7c:	mov	r1, r4
   14c80:	mov	r0, #10
   14c84:	bl	118bc <fputc@plt>
   14c88:	cmp	r6, #9
   14c8c:	ldrls	pc, [pc, r6, lsl #2]
   14c90:	b	14cbc <argp_parse@@Base+0x1208>
   14c94:	strdeq	r4, [r1], -ip
   14c98:	andeq	r4, r1, r8, asr #26
   14c9c:	andeq	r4, r1, r0, ror #26
   14ca0:	andeq	r4, r1, r8, ror sp
   14ca4:	muleq	r1, r8, sp
   14ca8:	andeq	r4, r1, r0, asr #27
   14cac:	andeq	r4, r1, r0, ror #27
   14cb0:	andeq	r4, r1, r8, lsl #28
   14cb4:	andeq	r4, r1, r8, lsr lr
   14cb8:	andeq	r4, r1, r4, lsl #26
   14cbc:	ldr	ip, [r5, #32]
   14cc0:	ldr	r1, [r5, #28]
   14cc4:	ldm	r5, {r2, r3}
   14cc8:	ldr	r7, [r5, #24]
   14ccc:	ldr	r6, [r5, #20]
   14cd0:	str	ip, [sp, #24]
   14cd4:	ldr	lr, [r5, #16]
   14cd8:	str	r1, [sp, #20]
   14cdc:	ldr	r1, [r5, #8]
   14ce0:	ldr	ip, [r5, #12]
   14ce4:	mov	r0, r4
   14ce8:	str	r7, [sp, #16]
   14cec:	stm	sp, {r1, ip, lr}
   14cf0:	str	r6, [sp, #12]
   14cf4:	ldr	r1, [pc, #412]	; 14e98 <argp_parse@@Base+0x13e4>
   14cf8:	bl	117d8 <fprintf@plt>
   14cfc:	add	sp, sp, #36	; 0x24
   14d00:	pop	{r4, r5, r6, r7, pc}
   14d04:	ldr	ip, [r5, #32]
   14d08:	ldr	r1, [r5, #28]
   14d0c:	ldm	r5, {r2, r3}
   14d10:	ldr	r7, [r5, #24]
   14d14:	ldr	r6, [r5, #20]
   14d18:	str	ip, [sp, #24]
   14d1c:	ldr	lr, [r5, #16]
   14d20:	str	r1, [sp, #20]
   14d24:	ldr	r1, [r5, #8]
   14d28:	ldr	ip, [r5, #12]
   14d2c:	mov	r0, r4
   14d30:	str	r7, [sp, #16]
   14d34:	stm	sp, {r1, ip, lr}
   14d38:	str	r6, [sp, #12]
   14d3c:	ldr	r1, [pc, #344]	; 14e9c <argp_parse@@Base+0x13e8>
   14d40:	bl	117d8 <fprintf@plt>
   14d44:	b	14cfc <argp_parse@@Base+0x1248>
   14d48:	ldr	r2, [r5]
   14d4c:	mov	r0, r4
   14d50:	ldr	r1, [pc, #328]	; 14ea0 <argp_parse@@Base+0x13ec>
   14d54:	add	sp, sp, #36	; 0x24
   14d58:	pop	{r4, r5, r6, r7, lr}
   14d5c:	b	117d8 <fprintf@plt>
   14d60:	mov	r0, r4
   14d64:	ldm	r5, {r2, r3}
   14d68:	ldr	r1, [pc, #308]	; 14ea4 <argp_parse@@Base+0x13f0>
   14d6c:	add	sp, sp, #36	; 0x24
   14d70:	pop	{r4, r5, r6, r7, lr}
   14d74:	b	117d8 <fprintf@plt>
   14d78:	ldr	r1, [r5, #8]
   14d7c:	ldm	r5, {r2, r3}
   14d80:	mov	r0, r4
   14d84:	str	r1, [sp, #56]	; 0x38
   14d88:	ldr	r1, [pc, #280]	; 14ea8 <argp_parse@@Base+0x13f4>
   14d8c:	add	sp, sp, #36	; 0x24
   14d90:	pop	{r4, r5, r6, r7, lr}
   14d94:	b	117d8 <fprintf@plt>
   14d98:	ldr	r1, [r5, #8]
   14d9c:	ldr	ip, [r5, #12]
   14da0:	ldm	r5, {r2, r3}
   14da4:	mov	r0, r4
   14da8:	str	r1, [sp, #56]	; 0x38
   14dac:	str	ip, [sp, #60]	; 0x3c
   14db0:	ldr	r1, [pc, #244]	; 14eac <argp_parse@@Base+0x13f8>
   14db4:	add	sp, sp, #36	; 0x24
   14db8:	pop	{r4, r5, r6, r7, lr}
   14dbc:	b	117d8 <fprintf@plt>
   14dc0:	add	r1, r5, #8
   14dc4:	ldm	r5, {r2, r3}
   14dc8:	ldm	r1, {r1, ip, lr}
   14dcc:	mov	r0, r4
   14dd0:	stm	sp, {r1, ip, lr}
   14dd4:	ldr	r1, [pc, #212]	; 14eb0 <argp_parse@@Base+0x13fc>
   14dd8:	bl	117d8 <fprintf@plt>
   14ddc:	b	14cfc <argp_parse@@Base+0x1248>
   14de0:	add	r1, r5, #8
   14de4:	ldr	r6, [r5, #20]
   14de8:	ldm	r1, {r1, ip, lr}
   14dec:	mov	r0, r4
   14df0:	ldm	r5, {r2, r3}
   14df4:	str	r6, [sp, #12]
   14df8:	stm	sp, {r1, ip, lr}
   14dfc:	ldr	r1, [pc, #176]	; 14eb4 <argp_parse@@Base+0x1400>
   14e00:	bl	117d8 <fprintf@plt>
   14e04:	b	14cfc <argp_parse@@Base+0x1248>
   14e08:	add	r1, r5, #8
   14e0c:	ldr	r7, [r5, #24]
   14e10:	ldm	r1, {r1, ip, lr}
   14e14:	mov	r0, r4
   14e18:	ldr	r6, [r5, #20]
   14e1c:	ldm	r5, {r2, r3}
   14e20:	stm	sp, {r1, ip, lr}
   14e24:	str	r7, [sp, #16]
   14e28:	str	r6, [sp, #12]
   14e2c:	ldr	r1, [pc, #132]	; 14eb8 <argp_parse@@Base+0x1404>
   14e30:	bl	117d8 <fprintf@plt>
   14e34:	b	14cfc <argp_parse@@Base+0x1248>
   14e38:	ldr	r1, [r5, #28]
   14e3c:	ldm	r5, {r2, r3}
   14e40:	ldr	r7, [r5, #24]
   14e44:	ldr	r6, [r5, #20]
   14e48:	ldr	lr, [r5, #16]
   14e4c:	str	r1, [sp, #20]
   14e50:	ldr	r1, [r5, #8]
   14e54:	ldr	ip, [r5, #12]
   14e58:	mov	r0, r4
   14e5c:	str	r7, [sp, #16]
   14e60:	stm	sp, {r1, ip, lr}
   14e64:	str	r6, [sp, #12]
   14e68:	ldr	r1, [pc, #76]	; 14ebc <argp_parse@@Base+0x1408>
   14e6c:	bl	117d8 <fprintf@plt>
   14e70:	b	14cfc <argp_parse@@Base+0x1248>
   14e74:	ldr	r1, [pc, #68]	; 14ec0 <argp_parse@@Base+0x140c>
   14e78:	bl	117d8 <fprintf@plt>
   14e7c:	b	14c4c <argp_parse@@Base+0x1198>
   14e80:	andeq	sp, r1, r8, lsr #8
   14e84:	andeq	r0, r0, r6, ror #15
   14e88:	andeq	sp, r1, ip, lsr r4
   14e8c:	andeq	sp, r1, ip, lsr r7
   14e90:	andeq	sp, r1, r4, ror #8
   14e94:	andeq	sp, r1, r0, asr #8
   14e98:	andeq	sp, r1, r0, asr r6
   14e9c:	andeq	sp, r1, ip, lsl r6
   14ea0:	andeq	sp, r1, r0, lsl r5
   14ea4:	andeq	sp, r1, r0, lsr #10
   14ea8:	andeq	sp, r1, r8, lsr r5
   14eac:	andeq	sp, r1, r4, asr r5
   14eb0:	andeq	sp, r1, r4, ror r5
   14eb4:	muleq	r1, r8, r5
   14eb8:	andeq	sp, r1, r0, asr #11
   14ebc:	andeq	sp, r1, ip, ror #11
   14ec0:	andeq	sp, r1, r4, lsr r4
   14ec4:	push	{r4, r5, r6, r7, lr}
   14ec8:	sub	sp, sp, #36	; 0x24
   14ecc:	mov	r6, r0
   14ed0:	ldr	r5, [sp, #56]	; 0x38
   14ed4:	ldr	r4, [r5]
   14ed8:	cmp	r4, #0
   14edc:	beq	14ef8 <argp_parse@@Base+0x1444>
   14ee0:	mov	r0, r5
   14ee4:	mov	r4, #0
   14ee8:	ldr	ip, [r0, #4]!
   14eec:	add	r4, r4, #1
   14ef0:	cmp	ip, #0
   14ef4:	bne	14ee8 <argp_parse@@Base+0x1434>
   14ef8:	cmp	r1, #0
   14efc:	beq	15138 <argp_parse@@Base+0x1684>
   14f00:	str	r3, [sp]
   14f04:	mov	r0, r6
   14f08:	mov	r3, r2
   14f0c:	mov	r2, r1
   14f10:	ldr	r1, [pc, #560]	; 15148 <argp_parse@@Base+0x1694>
   14f14:	bl	117d8 <fprintf@plt>
   14f18:	ldr	r3, [pc, #556]	; 1514c <argp_parse@@Base+0x1698>
   14f1c:	ldr	r2, [pc, #556]	; 15150 <argp_parse@@Base+0x169c>
   14f20:	ldr	r1, [pc, #556]	; 15154 <argp_parse@@Base+0x16a0>
   14f24:	mov	r0, r6
   14f28:	bl	117d8 <fprintf@plt>
   14f2c:	mov	r1, r6
   14f30:	mov	r0, #10
   14f34:	bl	118bc <fputc@plt>
   14f38:	ldr	r1, [pc, #536]	; 15158 <argp_parse@@Base+0x16a4>
   14f3c:	ldr	r2, [pc, #536]	; 1515c <argp_parse@@Base+0x16a8>
   14f40:	mov	r0, r6
   14f44:	bl	117d8 <fprintf@plt>
   14f48:	mov	r1, r6
   14f4c:	mov	r0, #10
   14f50:	bl	118bc <fputc@plt>
   14f54:	cmp	r4, #9
   14f58:	ldrls	pc, [pc, r4, lsl #2]
   14f5c:	b	14f88 <argp_parse@@Base+0x14d4>
   14f60:	andeq	r4, r1, r8, asr #31
   14f64:	andeq	r5, r1, r4, lsl r0
   14f68:	andeq	r5, r1, ip, lsr #32
   14f6c:	andeq	r5, r1, r4, asr #32
   14f70:	andeq	r5, r1, r4, rrx
   14f74:	andeq	r5, r1, r4, lsl #1
   14f78:	andeq	r5, r1, r4, lsr #1
   14f7c:	andeq	r5, r1, ip, asr #1
   14f80:	strdeq	r5, [r1], -ip
   14f84:	ldrdeq	r4, [r1], -r0
   14f88:	ldr	ip, [r5, #32]
   14f8c:	ldr	r1, [r5, #28]
   14f90:	ldm	r5, {r2, r3}
   14f94:	ldr	r7, [r5, #24]
   14f98:	ldr	r4, [r5, #20]
   14f9c:	str	ip, [sp, #24]
   14fa0:	ldr	lr, [r5, #16]
   14fa4:	str	r1, [sp, #20]
   14fa8:	ldr	r1, [r5, #8]
   14fac:	ldr	ip, [r5, #12]
   14fb0:	mov	r0, r6
   14fb4:	str	r7, [sp, #16]
   14fb8:	stm	sp, {r1, ip, lr}
   14fbc:	str	r4, [sp, #12]
   14fc0:	ldr	r1, [pc, #408]	; 15160 <argp_parse@@Base+0x16ac>
   14fc4:	bl	117d8 <fprintf@plt>
   14fc8:	add	sp, sp, #36	; 0x24
   14fcc:	pop	{r4, r5, r6, r7, pc}
   14fd0:	ldr	ip, [r5, #32]
   14fd4:	ldr	r1, [r5, #28]
   14fd8:	ldm	r5, {r2, r3}
   14fdc:	ldr	r7, [r5, #24]
   14fe0:	ldr	r4, [r5, #20]
   14fe4:	str	ip, [sp, #24]
   14fe8:	ldr	lr, [r5, #16]
   14fec:	str	r1, [sp, #20]
   14ff0:	ldr	r1, [r5, #8]
   14ff4:	ldr	ip, [r5, #12]
   14ff8:	mov	r0, r6
   14ffc:	str	r7, [sp, #16]
   15000:	stm	sp, {r1, ip, lr}
   15004:	str	r4, [sp, #12]
   15008:	ldr	r1, [pc, #340]	; 15164 <argp_parse@@Base+0x16b0>
   1500c:	bl	117d8 <fprintf@plt>
   15010:	b	14fc8 <argp_parse@@Base+0x1514>
   15014:	ldr	r2, [r5]
   15018:	mov	r0, r6
   1501c:	ldr	r1, [pc, #324]	; 15168 <argp_parse@@Base+0x16b4>
   15020:	add	sp, sp, #36	; 0x24
   15024:	pop	{r4, r5, r6, r7, lr}
   15028:	b	117d8 <fprintf@plt>
   1502c:	mov	r0, r6
   15030:	ldm	r5, {r2, r3}
   15034:	ldr	r1, [pc, #304]	; 1516c <argp_parse@@Base+0x16b8>
   15038:	add	sp, sp, #36	; 0x24
   1503c:	pop	{r4, r5, r6, r7, lr}
   15040:	b	117d8 <fprintf@plt>
   15044:	ldr	r1, [r5, #8]
   15048:	ldm	r5, {r2, r3}
   1504c:	mov	r0, r6
   15050:	str	r1, [sp, #56]	; 0x38
   15054:	ldr	r1, [pc, #276]	; 15170 <argp_parse@@Base+0x16bc>
   15058:	add	sp, sp, #36	; 0x24
   1505c:	pop	{r4, r5, r6, r7, lr}
   15060:	b	117d8 <fprintf@plt>
   15064:	ldr	r1, [r5, #8]
   15068:	ldr	ip, [r5, #12]
   1506c:	ldm	r5, {r2, r3}
   15070:	mov	r0, r6
   15074:	stm	sp, {r1, ip}
   15078:	ldr	r1, [pc, #244]	; 15174 <argp_parse@@Base+0x16c0>
   1507c:	bl	117d8 <fprintf@plt>
   15080:	b	14fc8 <argp_parse@@Base+0x1514>
   15084:	add	r1, r5, #8
   15088:	ldm	r5, {r2, r3}
   1508c:	ldm	r1, {r1, ip, lr}
   15090:	mov	r0, r6
   15094:	stm	sp, {r1, ip, lr}
   15098:	ldr	r1, [pc, #216]	; 15178 <argp_parse@@Base+0x16c4>
   1509c:	bl	117d8 <fprintf@plt>
   150a0:	b	14fc8 <argp_parse@@Base+0x1514>
   150a4:	add	r1, r5, #8
   150a8:	ldr	r4, [r5, #20]
   150ac:	ldm	r1, {r1, ip, lr}
   150b0:	mov	r0, r6
   150b4:	ldm	r5, {r2, r3}
   150b8:	str	r4, [sp, #12]
   150bc:	stm	sp, {r1, ip, lr}
   150c0:	ldr	r1, [pc, #180]	; 1517c <argp_parse@@Base+0x16c8>
   150c4:	bl	117d8 <fprintf@plt>
   150c8:	b	14fc8 <argp_parse@@Base+0x1514>
   150cc:	add	r1, r5, #8
   150d0:	ldr	r7, [r5, #24]
   150d4:	ldm	r1, {r1, ip, lr}
   150d8:	mov	r0, r6
   150dc:	ldr	r4, [r5, #20]
   150e0:	ldm	r5, {r2, r3}
   150e4:	stm	sp, {r1, ip, lr}
   150e8:	str	r7, [sp, #16]
   150ec:	str	r4, [sp, #12]
   150f0:	ldr	r1, [pc, #136]	; 15180 <argp_parse@@Base+0x16cc>
   150f4:	bl	117d8 <fprintf@plt>
   150f8:	b	14fc8 <argp_parse@@Base+0x1514>
   150fc:	ldr	r1, [r5, #28]
   15100:	ldm	r5, {r2, r3}
   15104:	ldr	r7, [r5, #24]
   15108:	ldr	r4, [r5, #20]
   1510c:	ldr	lr, [r5, #16]
   15110:	str	r1, [sp, #20]
   15114:	ldr	r1, [r5, #8]
   15118:	ldr	ip, [r5, #12]
   1511c:	mov	r0, r6
   15120:	str	r7, [sp, #16]
   15124:	stm	sp, {r1, ip, lr}
   15128:	str	r4, [sp, #12]
   1512c:	ldr	r1, [pc, #80]	; 15184 <argp_parse@@Base+0x16d0>
   15130:	bl	117d8 <fprintf@plt>
   15134:	b	14fc8 <argp_parse@@Base+0x1514>
   15138:	ldr	r1, [pc, #72]	; 15188 <argp_parse@@Base+0x16d4>
   1513c:	mov	r0, r6
   15140:	bl	117d8 <fprintf@plt>
   15144:	b	14f18 <argp_parse@@Base+0x1464>
   15148:	andeq	sp, r1, r8, lsr #8
   1514c:	andeq	r0, r0, r6, ror #15
   15150:	andeq	sp, r1, ip, lsr r4
   15154:	andeq	sp, r1, ip, lsr r7
   15158:	andeq	sp, r1, r4, ror #8
   1515c:	andeq	sp, r1, r0, asr #8
   15160:	andeq	sp, r1, r0, asr r6
   15164:	andeq	sp, r1, ip, lsl r6
   15168:	andeq	sp, r1, r0, lsl r5
   1516c:	andeq	sp, r1, r0, lsr #10
   15170:	andeq	sp, r1, r8, lsr r5
   15174:	andeq	sp, r1, r4, asr r5
   15178:	andeq	sp, r1, r4, ror r5
   1517c:	muleq	r1, r8, r5
   15180:	andeq	sp, r1, r0, asr #11
   15184:	andeq	sp, r1, ip, ror #11
   15188:	andeq	sp, r1, r4, lsr r4
   1518c:	push	{r4, r5, r6, lr}
   15190:	sub	sp, sp, #72	; 0x48
   15194:	mov	r5, r0
   15198:	ldr	ip, [sp, #88]	; 0x58
   1519c:	ldr	r0, [ip]
   151a0:	cmp	r0, #0
   151a4:	str	r0, [sp, #32]
   151a8:	beq	154b0 <argp_parse@@Base+0x19fc>
   151ac:	ldr	r0, [ip, #4]
   151b0:	cmp	r0, #0
   151b4:	str	r0, [sp, #36]	; 0x24
   151b8:	beq	154b8 <argp_parse@@Base+0x1a04>
   151bc:	ldr	r0, [ip, #8]
   151c0:	cmp	r0, #0
   151c4:	str	r0, [sp, #40]	; 0x28
   151c8:	beq	154c0 <argp_parse@@Base+0x1a0c>
   151cc:	ldr	r0, [ip, #12]
   151d0:	cmp	r0, #0
   151d4:	str	r0, [sp, #44]	; 0x2c
   151d8:	beq	154c8 <argp_parse@@Base+0x1a14>
   151dc:	ldr	r0, [ip, #16]
   151e0:	cmp	r0, #0
   151e4:	str	r0, [sp, #48]	; 0x30
   151e8:	beq	154d0 <argp_parse@@Base+0x1a1c>
   151ec:	ldr	r0, [ip, #20]
   151f0:	cmp	r0, #0
   151f4:	str	r0, [sp, #52]	; 0x34
   151f8:	beq	154d8 <argp_parse@@Base+0x1a24>
   151fc:	ldr	r0, [ip, #24]
   15200:	cmp	r0, #0
   15204:	str	r0, [sp, #56]	; 0x38
   15208:	beq	154e0 <argp_parse@@Base+0x1a2c>
   1520c:	ldr	r0, [ip, #28]
   15210:	cmp	r0, #0
   15214:	str	r0, [sp, #60]	; 0x3c
   15218:	beq	154e8 <argp_parse@@Base+0x1a34>
   1521c:	ldr	r0, [ip, #32]
   15220:	cmp	r0, #0
   15224:	str	r0, [sp, #64]	; 0x40
   15228:	beq	154f0 <argp_parse@@Base+0x1a3c>
   1522c:	ldr	r0, [ip, #36]	; 0x24
   15230:	cmp	r0, #0
   15234:	movne	r4, #10
   15238:	moveq	r4, #9
   1523c:	cmp	r1, #0
   15240:	beq	154a0 <argp_parse@@Base+0x19ec>
   15244:	str	r3, [sp]
   15248:	mov	r0, r5
   1524c:	mov	r3, r2
   15250:	mov	r2, r1
   15254:	ldr	r1, [pc, #668]	; 154f8 <argp_parse@@Base+0x1a44>
   15258:	bl	117d8 <fprintf@plt>
   1525c:	ldr	r3, [pc, #664]	; 154fc <argp_parse@@Base+0x1a48>
   15260:	ldr	r2, [pc, #664]	; 15500 <argp_parse@@Base+0x1a4c>
   15264:	ldr	r1, [pc, #664]	; 15504 <argp_parse@@Base+0x1a50>
   15268:	mov	r0, r5
   1526c:	bl	117d8 <fprintf@plt>
   15270:	mov	r1, r5
   15274:	mov	r0, #10
   15278:	bl	118bc <fputc@plt>
   1527c:	ldr	r1, [pc, #644]	; 15508 <argp_parse@@Base+0x1a54>
   15280:	ldr	r2, [pc, #644]	; 1550c <argp_parse@@Base+0x1a58>
   15284:	mov	r0, r5
   15288:	bl	117d8 <fprintf@plt>
   1528c:	mov	r1, r5
   15290:	mov	r0, #10
   15294:	bl	118bc <fputc@plt>
   15298:	cmp	r4, #9
   1529c:	ldrls	pc, [pc, r4, lsl #2]
   152a0:	b	152cc <argp_parse@@Base+0x1818>
   152a4:	andeq	r5, r1, r0, lsl r3
   152a8:	andeq	r5, r1, r0, ror #6
   152ac:	andeq	r5, r1, r8, ror r3
   152b0:	muleq	r1, r4, r3
   152b4:			; <UNDEFINED> instruction: 0x000153b8
   152b8:	ldrdeq	r5, [r1], -ip
   152bc:	andeq	r5, r1, r0, lsl #8
   152c0:	andeq	r5, r1, ip, lsr #8
   152c4:	andeq	r5, r1, r0, ror #8
   152c8:	andeq	r5, r1, r8, lsl r3
   152cc:	ldr	ip, [sp, #64]	; 0x40
   152d0:	ldr	r1, [sp, #60]	; 0x3c
   152d4:	ldr	lr, [sp, #48]	; 0x30
   152d8:	str	ip, [sp, #24]
   152dc:	str	r1, [sp, #20]
   152e0:	ldr	ip, [sp, #44]	; 0x2c
   152e4:	ldr	r1, [sp, #40]	; 0x28
   152e8:	ldr	r6, [sp, #56]	; 0x38
   152ec:	ldr	r4, [sp, #52]	; 0x34
   152f0:	stm	sp, {r1, ip, lr}
   152f4:	mov	r0, r5
   152f8:	ldr	r3, [sp, #36]	; 0x24
   152fc:	ldr	r2, [sp, #32]
   15300:	str	r6, [sp, #16]
   15304:	str	r4, [sp, #12]
   15308:	ldr	r1, [pc, #512]	; 15510 <argp_parse@@Base+0x1a5c>
   1530c:	bl	117d8 <fprintf@plt>
   15310:	add	sp, sp, #72	; 0x48
   15314:	pop	{r4, r5, r6, pc}
   15318:	ldr	ip, [sp, #64]	; 0x40
   1531c:	ldr	r1, [sp, #60]	; 0x3c
   15320:	ldr	lr, [sp, #48]	; 0x30
   15324:	str	ip, [sp, #24]
   15328:	str	r1, [sp, #20]
   1532c:	ldr	ip, [sp, #44]	; 0x2c
   15330:	ldr	r1, [sp, #40]	; 0x28
   15334:	ldr	r6, [sp, #56]	; 0x38
   15338:	ldr	r4, [sp, #52]	; 0x34
   1533c:	stm	sp, {r1, ip, lr}
   15340:	mov	r0, r5
   15344:	ldr	r3, [sp, #36]	; 0x24
   15348:	ldr	r2, [sp, #32]
   1534c:	str	r6, [sp, #16]
   15350:	str	r4, [sp, #12]
   15354:	ldr	r1, [pc, #440]	; 15514 <argp_parse@@Base+0x1a60>
   15358:	bl	117d8 <fprintf@plt>
   1535c:	b	15310 <argp_parse@@Base+0x185c>
   15360:	mov	r0, r5
   15364:	ldr	r2, [sp, #32]
   15368:	ldr	r1, [pc, #424]	; 15518 <argp_parse@@Base+0x1a64>
   1536c:	add	sp, sp, #72	; 0x48
   15370:	pop	{r4, r5, r6, lr}
   15374:	b	117d8 <fprintf@plt>
   15378:	mov	r0, r5
   1537c:	ldr	r3, [sp, #36]	; 0x24
   15380:	ldr	r2, [sp, #32]
   15384:	ldr	r1, [pc, #400]	; 1551c <argp_parse@@Base+0x1a68>
   15388:	add	sp, sp, #72	; 0x48
   1538c:	pop	{r4, r5, r6, lr}
   15390:	b	117d8 <fprintf@plt>
   15394:	ldr	r1, [sp, #40]	; 0x28
   15398:	ldr	r3, [sp, #36]	; 0x24
   1539c:	str	r1, [sp, #88]	; 0x58
   153a0:	ldr	r2, [sp, #32]
   153a4:	mov	r0, r5
   153a8:	ldr	r1, [pc, #368]	; 15520 <argp_parse@@Base+0x1a6c>
   153ac:	add	sp, sp, #72	; 0x48
   153b0:	pop	{r4, r5, r6, lr}
   153b4:	b	117d8 <fprintf@plt>
   153b8:	ldr	r1, [sp, #40]	; 0x28
   153bc:	ldr	ip, [sp, #44]	; 0x2c
   153c0:	ldr	r3, [sp, #36]	; 0x24
   153c4:	ldr	r2, [sp, #32]
   153c8:	stm	sp, {r1, ip}
   153cc:	mov	r0, r5
   153d0:	ldr	r1, [pc, #332]	; 15524 <argp_parse@@Base+0x1a70>
   153d4:	bl	117d8 <fprintf@plt>
   153d8:	b	15310 <argp_parse@@Base+0x185c>
   153dc:	add	r1, sp, #40	; 0x28
   153e0:	ldr	r3, [sp, #36]	; 0x24
   153e4:	ldm	r1, {r1, ip, lr}
   153e8:	mov	r0, r5
   153ec:	ldr	r2, [sp, #32]
   153f0:	stm	sp, {r1, ip, lr}
   153f4:	ldr	r1, [pc, #300]	; 15528 <argp_parse@@Base+0x1a74>
   153f8:	bl	117d8 <fprintf@plt>
   153fc:	b	15310 <argp_parse@@Base+0x185c>
   15400:	add	r1, sp, #40	; 0x28
   15404:	ldr	r4, [sp, #52]	; 0x34
   15408:	ldm	r1, {r1, ip, lr}
   1540c:	mov	r0, r5
   15410:	ldr	r3, [sp, #36]	; 0x24
   15414:	ldr	r2, [sp, #32]
   15418:	stm	sp, {r1, ip, lr}
   1541c:	str	r4, [sp, #12]
   15420:	ldr	r1, [pc, #260]	; 1552c <argp_parse@@Base+0x1a78>
   15424:	bl	117d8 <fprintf@plt>
   15428:	b	15310 <argp_parse@@Base+0x185c>
   1542c:	add	r1, sp, #40	; 0x28
   15430:	ldr	r6, [sp, #56]	; 0x38
   15434:	ldm	r1, {r1, ip, lr}
   15438:	mov	r0, r5
   1543c:	ldr	r4, [sp, #52]	; 0x34
   15440:	ldr	r3, [sp, #36]	; 0x24
   15444:	stm	sp, {r1, ip, lr}
   15448:	ldr	r2, [sp, #32]
   1544c:	str	r6, [sp, #16]
   15450:	str	r4, [sp, #12]
   15454:	ldr	r1, [pc, #212]	; 15530 <argp_parse@@Base+0x1a7c>
   15458:	bl	117d8 <fprintf@plt>
   1545c:	b	15310 <argp_parse@@Base+0x185c>
   15460:	ldr	r1, [sp, #60]	; 0x3c
   15464:	ldr	lr, [sp, #48]	; 0x30
   15468:	ldr	ip, [sp, #44]	; 0x2c
   1546c:	str	r1, [sp, #20]
   15470:	ldr	r1, [sp, #40]	; 0x28
   15474:	ldr	r6, [sp, #56]	; 0x38
   15478:	ldr	r4, [sp, #52]	; 0x34
   1547c:	stm	sp, {r1, ip, lr}
   15480:	mov	r0, r5
   15484:	ldr	r3, [sp, #36]	; 0x24
   15488:	ldr	r2, [sp, #32]
   1548c:	str	r6, [sp, #16]
   15490:	str	r4, [sp, #12]
   15494:	ldr	r1, [pc, #152]	; 15534 <argp_parse@@Base+0x1a80>
   15498:	bl	117d8 <fprintf@plt>
   1549c:	b	15310 <argp_parse@@Base+0x185c>
   154a0:	ldr	r1, [pc, #144]	; 15538 <argp_parse@@Base+0x1a84>
   154a4:	mov	r0, r5
   154a8:	bl	117d8 <fprintf@plt>
   154ac:	b	1525c <argp_parse@@Base+0x17a8>
   154b0:	mov	r4, r0
   154b4:	b	1523c <argp_parse@@Base+0x1788>
   154b8:	mov	r4, #1
   154bc:	b	1523c <argp_parse@@Base+0x1788>
   154c0:	mov	r4, #2
   154c4:	b	1523c <argp_parse@@Base+0x1788>
   154c8:	mov	r4, #3
   154cc:	b	1523c <argp_parse@@Base+0x1788>
   154d0:	mov	r4, #4
   154d4:	b	1523c <argp_parse@@Base+0x1788>
   154d8:	mov	r4, #5
   154dc:	b	1523c <argp_parse@@Base+0x1788>
   154e0:	mov	r4, #6
   154e4:	b	1523c <argp_parse@@Base+0x1788>
   154e8:	mov	r4, #7
   154ec:	b	1523c <argp_parse@@Base+0x1788>
   154f0:	mov	r4, #8
   154f4:	b	1523c <argp_parse@@Base+0x1788>
   154f8:	andeq	sp, r1, r8, lsr #8
   154fc:	andeq	r0, r0, r6, ror #15
   15500:	andeq	sp, r1, ip, lsr r4
   15504:	andeq	sp, r1, ip, lsr r7
   15508:	andeq	sp, r1, r4, ror #8
   1550c:	andeq	sp, r1, r0, asr #8
   15510:	andeq	sp, r1, r0, asr r6
   15514:	andeq	sp, r1, ip, lsl r6
   15518:	andeq	sp, r1, r0, lsl r5
   1551c:	andeq	sp, r1, r0, lsr #10
   15520:	andeq	sp, r1, r8, lsr r5
   15524:	andeq	sp, r1, r4, asr r5
   15528:	andeq	sp, r1, r4, ror r5
   1552c:	muleq	r1, r8, r5
   15530:	andeq	sp, r1, r0, asr #11
   15534:	andeq	sp, r1, ip, ror #11
   15538:	andeq	sp, r1, r4, lsr r4
   1553c:	push	{r3}		; (str r3, [sp, #-4]!)
   15540:	push	{r4, r5, r6, lr}
   15544:	sub	sp, sp, #84	; 0x54
   15548:	add	ip, sp, #104	; 0x68
   1554c:	ldr	lr, [sp, #104]	; 0x68
   15550:	mov	r5, r0
   15554:	cmp	lr, #0
   15558:	str	lr, [sp, #40]	; 0x28
   1555c:	str	ip, [sp, #36]	; 0x24
   15560:	beq	15868 <argp_parse@@Base+0x1db4>
   15564:	ldr	r0, [sp, #108]	; 0x6c
   15568:	cmp	r0, #0
   1556c:	str	r0, [sp, #44]	; 0x2c
   15570:	beq	15870 <argp_parse@@Base+0x1dbc>
   15574:	ldr	r0, [sp, #112]	; 0x70
   15578:	cmp	r0, #0
   1557c:	str	r0, [sp, #48]	; 0x30
   15580:	beq	15878 <argp_parse@@Base+0x1dc4>
   15584:	ldr	r0, [sp, #116]	; 0x74
   15588:	cmp	r0, #0
   1558c:	str	r0, [sp, #52]	; 0x34
   15590:	beq	15880 <argp_parse@@Base+0x1dcc>
   15594:	ldr	r0, [sp, #120]	; 0x78
   15598:	cmp	r0, #0
   1559c:	str	r0, [sp, #56]	; 0x38
   155a0:	beq	15888 <argp_parse@@Base+0x1dd4>
   155a4:	ldr	r0, [sp, #124]	; 0x7c
   155a8:	cmp	r0, #0
   155ac:	str	r0, [sp, #60]	; 0x3c
   155b0:	beq	15890 <argp_parse@@Base+0x1ddc>
   155b4:	ldr	r0, [sp, #128]	; 0x80
   155b8:	cmp	r0, #0
   155bc:	str	r0, [sp, #64]	; 0x40
   155c0:	beq	15898 <argp_parse@@Base+0x1de4>
   155c4:	ldr	r0, [sp, #132]	; 0x84
   155c8:	cmp	r0, #0
   155cc:	str	r0, [sp, #68]	; 0x44
   155d0:	beq	158a0 <argp_parse@@Base+0x1dec>
   155d4:	ldr	r3, [sp, #136]	; 0x88
   155d8:	cmp	r3, #0
   155dc:	str	r3, [sp, #72]	; 0x48
   155e0:	beq	158a8 <argp_parse@@Base+0x1df4>
   155e4:	ldr	lr, [sp, #140]	; 0x8c
   155e8:	cmp	lr, #0
   155ec:	movne	r4, #10
   155f0:	moveq	r4, #9
   155f4:	cmp	r1, #0
   155f8:	ldr	r3, [sp, #100]	; 0x64
   155fc:	beq	15858 <argp_parse@@Base+0x1da4>
   15600:	str	r3, [sp]
   15604:	mov	r0, r5
   15608:	mov	r3, r2
   1560c:	mov	r2, r1
   15610:	ldr	r1, [pc, #664]	; 158b0 <argp_parse@@Base+0x1dfc>
   15614:	bl	117d8 <fprintf@plt>
   15618:	ldr	r3, [pc, #660]	; 158b4 <argp_parse@@Base+0x1e00>
   1561c:	ldr	r2, [pc, #660]	; 158b8 <argp_parse@@Base+0x1e04>
   15620:	ldr	r1, [pc, #660]	; 158bc <argp_parse@@Base+0x1e08>
   15624:	mov	r0, r5
   15628:	bl	117d8 <fprintf@plt>
   1562c:	mov	r1, r5
   15630:	mov	r0, #10
   15634:	bl	118bc <fputc@plt>
   15638:	ldr	r1, [pc, #640]	; 158c0 <argp_parse@@Base+0x1e0c>
   1563c:	ldr	r2, [pc, #640]	; 158c4 <argp_parse@@Base+0x1e10>
   15640:	mov	r0, r5
   15644:	bl	117d8 <fprintf@plt>
   15648:	mov	r1, r5
   1564c:	mov	r0, #10
   15650:	bl	118bc <fputc@plt>
   15654:	cmp	r4, #9
   15658:	ldrls	pc, [pc, r4, lsl #2]
   1565c:	b	15688 <argp_parse@@Base+0x1bd4>
   15660:	andeq	r5, r1, ip, asr #13
   15664:	andeq	r5, r1, r4, lsr #14
   15668:	andeq	r5, r1, r8, lsr r7
   1566c:	andeq	r5, r1, r0, asr r7
   15670:	andeq	r5, r1, r0, ror r7
   15674:	muleq	r1, r4, r7
   15678:			; <UNDEFINED> instruction: 0x000157b8
   1567c:	andeq	r5, r1, r4, ror #15
   15680:	andeq	r5, r1, r8, lsl r8
   15684:	ldrdeq	r5, [r1], -ip
   15688:	ldr	ip, [sp, #72]	; 0x48
   1568c:	ldr	r1, [sp, #68]	; 0x44
   15690:	ldr	lr, [sp, #56]	; 0x38
   15694:	str	ip, [sp, #24]
   15698:	str	r1, [sp, #20]
   1569c:	ldr	ip, [sp, #52]	; 0x34
   156a0:	ldr	r1, [sp, #48]	; 0x30
   156a4:	ldr	r6, [sp, #64]	; 0x40
   156a8:	ldr	r4, [sp, #60]	; 0x3c
   156ac:	stm	sp, {r1, ip, lr}
   156b0:	mov	r0, r5
   156b4:	ldr	r3, [sp, #44]	; 0x2c
   156b8:	ldr	r2, [sp, #40]	; 0x28
   156bc:	str	r6, [sp, #16]
   156c0:	str	r4, [sp, #12]
   156c4:	ldr	r1, [pc, #508]	; 158c8 <argp_parse@@Base+0x1e14>
   156c8:	bl	117d8 <fprintf@plt>
   156cc:	add	sp, sp, #84	; 0x54
   156d0:	pop	{r4, r5, r6, lr}
   156d4:	add	sp, sp, #4
   156d8:	bx	lr
   156dc:	ldr	ip, [sp, #72]	; 0x48
   156e0:	ldr	r1, [sp, #68]	; 0x44
   156e4:	ldr	lr, [sp, #56]	; 0x38
   156e8:	str	ip, [sp, #24]
   156ec:	str	r1, [sp, #20]
   156f0:	ldr	ip, [sp, #52]	; 0x34
   156f4:	ldr	r1, [sp, #48]	; 0x30
   156f8:	ldr	r6, [sp, #64]	; 0x40
   156fc:	ldr	r4, [sp, #60]	; 0x3c
   15700:	stm	sp, {r1, ip, lr}
   15704:	mov	r0, r5
   15708:	ldr	r3, [sp, #44]	; 0x2c
   1570c:	ldr	r2, [sp, #40]	; 0x28
   15710:	str	r6, [sp, #16]
   15714:	str	r4, [sp, #12]
   15718:	ldr	r1, [pc, #428]	; 158cc <argp_parse@@Base+0x1e18>
   1571c:	bl	117d8 <fprintf@plt>
   15720:	b	156cc <argp_parse@@Base+0x1c18>
   15724:	mov	r0, r5
   15728:	ldr	r2, [sp, #40]	; 0x28
   1572c:	ldr	r1, [pc, #412]	; 158d0 <argp_parse@@Base+0x1e1c>
   15730:	bl	117d8 <fprintf@plt>
   15734:	b	156cc <argp_parse@@Base+0x1c18>
   15738:	mov	r0, r5
   1573c:	ldr	r3, [sp, #44]	; 0x2c
   15740:	ldr	r2, [sp, #40]	; 0x28
   15744:	ldr	r1, [pc, #392]	; 158d4 <argp_parse@@Base+0x1e20>
   15748:	bl	117d8 <fprintf@plt>
   1574c:	b	156cc <argp_parse@@Base+0x1c18>
   15750:	ldr	r1, [sp, #48]	; 0x30
   15754:	ldr	r3, [sp, #44]	; 0x2c
   15758:	str	r1, [sp]
   1575c:	ldr	r2, [sp, #40]	; 0x28
   15760:	mov	r0, r5
   15764:	ldr	r1, [pc, #364]	; 158d8 <argp_parse@@Base+0x1e24>
   15768:	bl	117d8 <fprintf@plt>
   1576c:	b	156cc <argp_parse@@Base+0x1c18>
   15770:	ldr	r1, [sp, #48]	; 0x30
   15774:	ldr	ip, [sp, #52]	; 0x34
   15778:	ldr	r3, [sp, #44]	; 0x2c
   1577c:	ldr	r2, [sp, #40]	; 0x28
   15780:	stm	sp, {r1, ip}
   15784:	mov	r0, r5
   15788:	ldr	r1, [pc, #332]	; 158dc <argp_parse@@Base+0x1e28>
   1578c:	bl	117d8 <fprintf@plt>
   15790:	b	156cc <argp_parse@@Base+0x1c18>
   15794:	add	r1, sp, #48	; 0x30
   15798:	ldr	r3, [sp, #44]	; 0x2c
   1579c:	ldm	r1, {r1, ip, lr}
   157a0:	mov	r0, r5
   157a4:	ldr	r2, [sp, #40]	; 0x28
   157a8:	stm	sp, {r1, ip, lr}
   157ac:	ldr	r1, [pc, #300]	; 158e0 <argp_parse@@Base+0x1e2c>
   157b0:	bl	117d8 <fprintf@plt>
   157b4:	b	156cc <argp_parse@@Base+0x1c18>
   157b8:	add	r1, sp, #48	; 0x30
   157bc:	ldr	r4, [sp, #60]	; 0x3c
   157c0:	ldm	r1, {r1, ip, lr}
   157c4:	mov	r0, r5
   157c8:	ldr	r3, [sp, #44]	; 0x2c
   157cc:	ldr	r2, [sp, #40]	; 0x28
   157d0:	stm	sp, {r1, ip, lr}
   157d4:	str	r4, [sp, #12]
   157d8:	ldr	r1, [pc, #260]	; 158e4 <argp_parse@@Base+0x1e30>
   157dc:	bl	117d8 <fprintf@plt>
   157e0:	b	156cc <argp_parse@@Base+0x1c18>
   157e4:	add	r1, sp, #48	; 0x30
   157e8:	ldr	r6, [sp, #64]	; 0x40
   157ec:	ldm	r1, {r1, ip, lr}
   157f0:	mov	r0, r5
   157f4:	ldr	r4, [sp, #60]	; 0x3c
   157f8:	ldr	r3, [sp, #44]	; 0x2c
   157fc:	stm	sp, {r1, ip, lr}
   15800:	ldr	r2, [sp, #40]	; 0x28
   15804:	str	r6, [sp, #16]
   15808:	str	r4, [sp, #12]
   1580c:	ldr	r1, [pc, #212]	; 158e8 <argp_parse@@Base+0x1e34>
   15810:	bl	117d8 <fprintf@plt>
   15814:	b	156cc <argp_parse@@Base+0x1c18>
   15818:	ldr	r1, [sp, #68]	; 0x44
   1581c:	ldr	lr, [sp, #56]	; 0x38
   15820:	ldr	ip, [sp, #52]	; 0x34
   15824:	str	r1, [sp, #20]
   15828:	ldr	r1, [sp, #48]	; 0x30
   1582c:	ldr	r6, [sp, #64]	; 0x40
   15830:	ldr	r4, [sp, #60]	; 0x3c
   15834:	stm	sp, {r1, ip, lr}
   15838:	mov	r0, r5
   1583c:	ldr	r3, [sp, #44]	; 0x2c
   15840:	ldr	r2, [sp, #40]	; 0x28
   15844:	str	r6, [sp, #16]
   15848:	str	r4, [sp, #12]
   1584c:	ldr	r1, [pc, #152]	; 158ec <argp_parse@@Base+0x1e38>
   15850:	bl	117d8 <fprintf@plt>
   15854:	b	156cc <argp_parse@@Base+0x1c18>
   15858:	ldr	r1, [pc, #144]	; 158f0 <argp_parse@@Base+0x1e3c>
   1585c:	mov	r0, r5
   15860:	bl	117d8 <fprintf@plt>
   15864:	b	15618 <argp_parse@@Base+0x1b64>
   15868:	mov	r4, lr
   1586c:	b	155f4 <argp_parse@@Base+0x1b40>
   15870:	mov	r4, #1
   15874:	b	155f4 <argp_parse@@Base+0x1b40>
   15878:	mov	r4, #2
   1587c:	b	155f4 <argp_parse@@Base+0x1b40>
   15880:	mov	r4, #3
   15884:	b	155f4 <argp_parse@@Base+0x1b40>
   15888:	mov	r4, #4
   1588c:	b	155f4 <argp_parse@@Base+0x1b40>
   15890:	mov	r4, #5
   15894:	b	155f4 <argp_parse@@Base+0x1b40>
   15898:	mov	r4, #6
   1589c:	b	155f4 <argp_parse@@Base+0x1b40>
   158a0:	mov	r4, #7
   158a4:	b	155f4 <argp_parse@@Base+0x1b40>
   158a8:	mov	r4, #8
   158ac:	b	155f4 <argp_parse@@Base+0x1b40>
   158b0:	andeq	sp, r1, r8, lsr #8
   158b4:	andeq	r0, r0, r6, ror #15
   158b8:	andeq	sp, r1, ip, lsr r4
   158bc:	andeq	sp, r1, ip, lsr r7
   158c0:	andeq	sp, r1, r4, ror #8
   158c4:	andeq	sp, r1, r0, asr #8
   158c8:	andeq	sp, r1, r0, asr r6
   158cc:	andeq	sp, r1, ip, lsl r6
   158d0:	andeq	sp, r1, r0, lsl r5
   158d4:	andeq	sp, r1, r0, lsr #10
   158d8:	andeq	sp, r1, r8, lsr r5
   158dc:	andeq	sp, r1, r4, asr r5
   158e0:	andeq	sp, r1, r4, ror r5
   158e4:	muleq	r1, r8, r5
   158e8:	andeq	sp, r1, r0, asr #11
   158ec:	andeq	sp, r1, ip, ror #11
   158f0:	andeq	sp, r1, r4, lsr r4
   158f4:	ldr	r3, [pc, #56]	; 15934 <argp_parse@@Base+0x1e80>
   158f8:	push	{r4, lr}
   158fc:	mov	r0, #10
   15900:	ldr	r1, [r3]
   15904:	bl	118bc <fputc@plt>
   15908:	ldr	r1, [pc, #40]	; 15938 <argp_parse@@Base+0x1e84>
   1590c:	ldr	r0, [pc, #40]	; 1593c <argp_parse@@Base+0x1e88>
   15910:	bl	11598 <printf@plt>
   15914:	ldr	r1, [pc, #36]	; 15940 <argp_parse@@Base+0x1e8c>
   15918:	ldr	r2, [pc, #36]	; 15944 <argp_parse@@Base+0x1e90>
   1591c:	ldr	r0, [pc, #36]	; 15948 <argp_parse@@Base+0x1e94>
   15920:	bl	11598 <printf@plt>
   15924:	ldr	r1, [pc, #32]	; 1594c <argp_parse@@Base+0x1e98>
   15928:	ldr	r0, [pc, #32]	; 15950 <argp_parse@@Base+0x1e9c>
   1592c:	pop	{r4, lr}
   15930:	b	11598 <printf@plt>
   15934:	andeq	lr, r2, ip, ror #9
   15938:	andeq	sp, r1, ip, lsl #13
   1593c:	andeq	sp, r1, r4, lsr #13
   15940:	ldrdeq	sp, [r1], -r4
   15944:			; <UNDEFINED> instruction: 0x0001d6b8
   15948:	andeq	sp, r1, r0, ror #13
   1594c:	strdeq	sp, [r1], -r4
   15950:	andeq	sp, r1, r4, lsl r7
   15954:	push	{r4, r5, r6, lr}
   15958:	mov	r6, r0
   1595c:	mov	r5, r1
   15960:	mov	r4, r2
   15964:	bl	1bda4 <argp_error@@Base+0x1994>
   15968:	cmp	r0, #0
   1596c:	popne	{r4, r5, r6, pc}
   15970:	cmp	r6, #0
   15974:	beq	15984 <argp_parse@@Base+0x1ed0>
   15978:	cmp	r5, #0
   1597c:	cmpne	r4, #0
   15980:	popeq	{r4, r5, r6, pc}
   15984:	bl	15fd0 <argp_parse@@Base+0x251c>
   15988:	push	{r4, lr}
   1598c:	bl	16044 <argp_parse@@Base+0x2590>
   15990:	cmp	r0, #0
   15994:	popne	{r4, pc}
   15998:	bl	15fd0 <argp_parse@@Base+0x251c>
   1599c:	push	{r4, lr}
   159a0:	bl	16044 <argp_parse@@Base+0x2590>
   159a4:	cmp	r0, #0
   159a8:	popne	{r4, pc}
   159ac:	bl	15fd0 <argp_parse@@Base+0x251c>
   159b0:	push	{r4, lr}
   159b4:	bl	16044 <argp_parse@@Base+0x2590>
   159b8:	cmp	r0, #0
   159bc:	popne	{r4, pc}
   159c0:	bl	15fd0 <argp_parse@@Base+0x251c>
   159c4:	push	{r4, r5, r6, lr}
   159c8:	mov	r5, r0
   159cc:	mov	r4, r1
   159d0:	bl	16070 <argp_parse@@Base+0x25bc>
   159d4:	cmp	r0, #0
   159d8:	popne	{r4, r5, r6, pc}
   159dc:	adds	r4, r4, #0
   159e0:	movne	r4, #1
   159e4:	cmp	r5, #0
   159e8:	orreq	r4, r4, #1
   159ec:	cmp	r4, #0
   159f0:	popeq	{r4, r5, r6, pc}
   159f4:	bl	15fd0 <argp_parse@@Base+0x251c>
   159f8:	push	{r4, lr}
   159fc:	cmp	r1, #0
   15a00:	orreq	r1, r1, #1
   15a04:	bl	16070 <argp_parse@@Base+0x25bc>
   15a08:	cmp	r0, #0
   15a0c:	popne	{r4, pc}
   15a10:	bl	15fd0 <argp_parse@@Base+0x251c>
   15a14:	push	{r4, r5, r6, lr}
   15a18:	mov	r6, r0
   15a1c:	mov	r5, r1
   15a20:	mov	r4, r2
   15a24:	bl	1bda4 <argp_error@@Base+0x1994>
   15a28:	cmp	r0, #0
   15a2c:	popne	{r4, r5, r6, pc}
   15a30:	cmp	r6, #0
   15a34:	beq	15a44 <argp_parse@@Base+0x1f90>
   15a38:	cmp	r5, #0
   15a3c:	cmpne	r4, #0
   15a40:	popeq	{r4, r5, r6, pc}
   15a44:	bl	15fd0 <argp_parse@@Base+0x251c>
   15a48:	cmp	r2, #0
   15a4c:	cmpne	r1, #0
   15a50:	moveq	r2, #1
   15a54:	moveq	r1, r2
   15a58:	push	{r4, lr}
   15a5c:	bl	1bda4 <argp_error@@Base+0x1994>
   15a60:	cmp	r0, #0
   15a64:	popne	{r4, pc}
   15a68:	bl	15fd0 <argp_parse@@Base+0x251c>
   15a6c:	push	{r4, lr}
   15a70:	mov	r2, r1
   15a74:	mov	r1, r0
   15a78:	mov	r0, #0
   15a7c:	bl	1bda4 <argp_error@@Base+0x1994>
   15a80:	cmp	r0, #0
   15a84:	popne	{r4, pc}
   15a88:	bl	15fd0 <argp_parse@@Base+0x251c>
   15a8c:	cmp	r1, #0
   15a90:	cmpne	r0, #0
   15a94:	moveq	r2, #1
   15a98:	movne	r2, r1
   15a9c:	moveq	r1, r2
   15aa0:	movne	r1, r0
   15aa4:	push	{r4, lr}
   15aa8:	mov	r0, #0
   15aac:	bl	1bda4 <argp_error@@Base+0x1994>
   15ab0:	cmp	r0, #0
   15ab4:	popne	{r4, pc}
   15ab8:	bl	15fd0 <argp_parse@@Base+0x251c>
   15abc:	cmp	r0, #0
   15ac0:	push	{r4, r5, r6, lr}
   15ac4:	mov	r5, r1
   15ac8:	ldr	r4, [r1]
   15acc:	beq	15b08 <argp_parse@@Base+0x2054>
   15ad0:	lsr	r2, r4, #1
   15ad4:	add	r3, r2, #1
   15ad8:	mvn	r3, r3
   15adc:	cmp	r4, r3
   15ae0:	bhi	15b24 <argp_parse@@Base+0x2070>
   15ae4:	add	r4, r4, #1
   15ae8:	add	r4, r4, r2
   15aec:	mov	r1, r4
   15af0:	mov	r2, #1
   15af4:	bl	1bda4 <argp_error@@Base+0x1994>
   15af8:	cmp	r0, #0
   15afc:	beq	15b28 <argp_parse@@Base+0x2074>
   15b00:	str	r4, [r5]
   15b04:	pop	{r4, r5, r6, pc}
   15b08:	cmp	r4, #0
   15b0c:	moveq	r4, #64	; 0x40
   15b10:	mov	r1, r4
   15b14:	mov	r2, #1
   15b18:	bl	1bda4 <argp_error@@Base+0x1994>
   15b1c:	cmp	r0, #0
   15b20:	bne	15b00 <argp_parse@@Base+0x204c>
   15b24:	bl	15fd0 <argp_parse@@Base+0x251c>
   15b28:	cmp	r4, #0
   15b2c:	bne	15b24 <argp_parse@@Base+0x2070>
   15b30:	str	r4, [r5]
   15b34:	pop	{r4, r5, r6, pc}
   15b38:	cmp	r0, #0
   15b3c:	push	{r4, r5, r6, lr}
   15b40:	mov	r5, r1
   15b44:	ldr	r4, [r1]
   15b48:	mov	r6, r2
   15b4c:	beq	15b90 <argp_parse@@Base+0x20dc>
   15b50:	lsr	r1, r4, #1
   15b54:	add	r3, r1, #1
   15b58:	mvn	r3, r3
   15b5c:	cmp	r4, r3
   15b60:	bhi	15bc8 <argp_parse@@Base+0x2114>
   15b64:	add	r4, r4, #1
   15b68:	add	r4, r4, r1
   15b6c:	mov	r1, r4
   15b70:	bl	1bda4 <argp_error@@Base+0x1994>
   15b74:	cmp	r0, #0
   15b78:	bne	15b88 <argp_parse@@Base+0x20d4>
   15b7c:	cmp	r4, #0
   15b80:	cmpne	r6, #0
   15b84:	bne	15bc8 <argp_parse@@Base+0x2114>
   15b88:	str	r4, [r5]
   15b8c:	pop	{r4, r5, r6, pc}
   15b90:	cmp	r4, #0
   15b94:	bne	15bb0 <argp_parse@@Base+0x20fc>
   15b98:	mov	r1, r2
   15b9c:	mov	r0, #64	; 0x40
   15ba0:	bl	1c660 <argp_error@@Base+0x2250>
   15ba4:	cmp	r0, #0
   15ba8:	movne	r4, r0
   15bac:	addeq	r4, r0, #1
   15bb0:	mov	r2, r6
   15bb4:	mov	r1, r4
   15bb8:	mov	r0, #0
   15bbc:	bl	1bda4 <argp_error@@Base+0x1994>
   15bc0:	cmp	r0, #0
   15bc4:	bne	15b88 <argp_parse@@Base+0x20d4>
   15bc8:	bl	15fd0 <argp_parse@@Base+0x251c>
   15bcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15bd0:	sub	sp, sp, #12
   15bd4:	ldr	r6, [r1]
   15bd8:	mov	r8, r1
   15bdc:	mov	r9, r0
   15be0:	asrs	r4, r6, #1
   15be4:	mov	sl, r2
   15be8:	mov	fp, r3
   15bec:	ldr	r7, [sp, #48]	; 0x30
   15bf0:	bmi	15d6c <argp_parse@@Base+0x22b8>
   15bf4:	mvn	r1, #-2147483648	; 0x80000000
   15bf8:	sub	r1, r1, r4
   15bfc:	cmp	r6, r1
   15c00:	movle	r1, #0
   15c04:	movgt	r1, #1
   15c08:	mvn	r3, fp
   15c0c:	cmp	r1, #0
   15c10:	addeq	r4, r4, r6
   15c14:	mvnne	r4, #-2147483648	; 0x80000000
   15c18:	lsr	r3, r3, #31
   15c1c:	cmp	fp, r4
   15c20:	movge	r2, #0
   15c24:	andlt	r2, r3, #1
   15c28:	cmp	r2, #0
   15c2c:	beq	15d1c <argp_parse@@Base+0x2268>
   15c30:	cmp	r7, #0
   15c34:	blt	15e04 <argp_parse@@Base+0x2350>
   15c38:	bne	15dfc <argp_parse@@Base+0x2348>
   15c3c:	mov	r5, #64	; 0x40
   15c40:	mov	r1, r7
   15c44:	mov	r0, r5
   15c48:	str	r3, [sp, #4]
   15c4c:	bl	1c86c <argp_error@@Base+0x245c>
   15c50:	mov	r1, r7
   15c54:	mov	r4, r0
   15c58:	mov	r0, r5
   15c5c:	bl	1ca8c <argp_error@@Base+0x267c>
   15c60:	ldr	r3, [sp, #4]
   15c64:	sub	r5, r5, r1
   15c68:	cmp	r9, #0
   15c6c:	sub	r2, r4, r6
   15c70:	streq	r9, [r8]
   15c74:	cmp	r2, sl
   15c78:	bge	15cfc <argp_parse@@Base+0x2248>
   15c7c:	cmp	sl, #0
   15c80:	blt	15d9c <argp_parse@@Base+0x22e8>
   15c84:	cmp	r6, #0
   15c88:	blt	15ca8 <argp_parse@@Base+0x21f4>
   15c8c:	mvn	r2, #-2147483648	; 0x80000000
   15c90:	sub	r2, r2, sl
   15c94:	cmp	r6, r2
   15c98:	movle	r2, #0
   15c9c:	movgt	r2, #1
   15ca0:	cmp	r2, #0
   15ca4:	bne	15d98 <argp_parse@@Base+0x22e4>
   15ca8:	add	r6, r6, sl
   15cac:	cmp	fp, r6
   15cb0:	movge	r3, #0
   15cb4:	andlt	r3, r3, #1
   15cb8:	cmp	r3, #0
   15cbc:	mov	r4, r6
   15cc0:	bne	15d98 <argp_parse@@Base+0x22e4>
   15cc4:	cmp	r7, #0
   15cc8:	blt	15db0 <argp_parse@@Base+0x22fc>
   15ccc:	beq	15cf8 <argp_parse@@Base+0x2244>
   15cd0:	cmp	r6, #0
   15cd4:	blt	15e54 <argp_parse@@Base+0x23a0>
   15cd8:	mov	r1, r7
   15cdc:	mvn	r0, #-2147483648	; 0x80000000
   15ce0:	bl	1c86c <argp_error@@Base+0x245c>
   15ce4:	cmp	r6, r0
   15ce8:	movle	r0, #0
   15cec:	movgt	r0, #1
   15cf0:	cmp	r0, #0
   15cf4:	bne	15d98 <argp_parse@@Base+0x22e4>
   15cf8:	mul	r5, r6, r7
   15cfc:	mov	r1, r5
   15d00:	mov	r0, r9
   15d04:	bl	16070 <argp_parse@@Base+0x25bc>
   15d08:	cmp	r0, #0
   15d0c:	beq	15d80 <argp_parse@@Base+0x22cc>
   15d10:	str	r4, [r8]
   15d14:	add	sp, sp, #12
   15d18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15d1c:	cmp	r7, #0
   15d20:	blt	15ddc <argp_parse@@Base+0x2328>
   15d24:	beq	15c3c <argp_parse@@Base+0x2188>
   15d28:	cmp	r4, #0
   15d2c:	blt	15e0c <argp_parse@@Base+0x2358>
   15d30:	mov	r1, r7
   15d34:	mvn	r0, #-2147483648	; 0x80000000
   15d38:	str	r3, [sp, #4]
   15d3c:	bl	1c86c <argp_error@@Base+0x245c>
   15d40:	ldr	r3, [sp, #4]
   15d44:	cmp	r0, r4
   15d48:	movge	r0, #0
   15d4c:	movlt	r0, #1
   15d50:	cmp	r0, #0
   15d54:	mvnne	r5, #-2147483648	; 0x80000000
   15d58:	bne	15c40 <argp_parse@@Base+0x218c>
   15d5c:	mul	r5, r7, r4
   15d60:	cmp	r5, #63	; 0x3f
   15d64:	bgt	15c68 <argp_parse@@Base+0x21b4>
   15d68:	b	15c3c <argp_parse@@Base+0x2188>
   15d6c:	rsb	r1, r4, #-2147483648	; 0x80000000
   15d70:	cmp	r6, r1
   15d74:	movge	r1, #0
   15d78:	movlt	r1, #1
   15d7c:	b	15c08 <argp_parse@@Base+0x2154>
   15d80:	adds	r5, r5, #0
   15d84:	movne	r5, #1
   15d88:	cmp	r9, #0
   15d8c:	orreq	r5, r5, #1
   15d90:	cmp	r5, #0
   15d94:	beq	15d10 <argp_parse@@Base+0x225c>
   15d98:	bl	15fd0 <argp_parse@@Base+0x251c>
   15d9c:	rsb	r2, sl, #-2147483648	; 0x80000000
   15da0:	cmp	r6, r2
   15da4:	movge	r2, #0
   15da8:	movlt	r2, #1
   15dac:	b	15ca0 <argp_parse@@Base+0x21ec>
   15db0:	cmp	r6, #0
   15db4:	blt	15e38 <argp_parse@@Base+0x2384>
   15db8:	cmn	r7, #1
   15dbc:	beq	15cf8 <argp_parse@@Base+0x2244>
   15dc0:	mov	r1, r7
   15dc4:	mov	r0, #-2147483648	; 0x80000000
   15dc8:	bl	1c86c <argp_error@@Base+0x245c>
   15dcc:	cmp	r6, r0
   15dd0:	movle	r0, #0
   15dd4:	movgt	r0, #1
   15dd8:	b	15cf0 <argp_parse@@Base+0x223c>
   15ddc:	cmp	r4, #0
   15de0:	blt	15e78 <argp_parse@@Base+0x23c4>
   15de4:	cmn	r7, #1
   15de8:	beq	15d5c <argp_parse@@Base+0x22a8>
   15dec:	str	r3, [sp, #4]
   15df0:	mov	r1, r7
   15df4:	mov	r0, #-2147483648	; 0x80000000
   15df8:	b	15d3c <argp_parse@@Base+0x2288>
   15dfc:	mov	r4, fp
   15e00:	b	15d30 <argp_parse@@Base+0x227c>
   15e04:	mov	r4, fp
   15e08:	b	15de4 <argp_parse@@Base+0x2330>
   15e0c:	cmn	r4, #1
   15e10:	beq	15d5c <argp_parse@@Base+0x22a8>
   15e14:	mov	r1, r4
   15e18:	mov	r0, #-2147483648	; 0x80000000
   15e1c:	str	r3, [sp, #4]
   15e20:	bl	1c86c <argp_error@@Base+0x245c>
   15e24:	ldr	r3, [sp, #4]
   15e28:	cmp	r7, r0
   15e2c:	movle	r0, #0
   15e30:	movgt	r0, #1
   15e34:	b	15d50 <argp_parse@@Base+0x229c>
   15e38:	mov	r1, r7
   15e3c:	mvn	r0, #-2147483648	; 0x80000000
   15e40:	bl	1c86c <argp_error@@Base+0x245c>
   15e44:	cmp	r6, r0
   15e48:	movge	r0, #0
   15e4c:	movlt	r0, #1
   15e50:	b	15cf0 <argp_parse@@Base+0x223c>
   15e54:	cmn	r6, #1
   15e58:	beq	15cf8 <argp_parse@@Base+0x2244>
   15e5c:	mov	r1, r6
   15e60:	mov	r0, #-2147483648	; 0x80000000
   15e64:	bl	1c86c <argp_error@@Base+0x245c>
   15e68:	cmp	r7, r0
   15e6c:	movle	r0, #0
   15e70:	movgt	r0, #1
   15e74:	b	15cf0 <argp_parse@@Base+0x223c>
   15e78:	mov	r1, r7
   15e7c:	mvn	r0, #-2147483648	; 0x80000000
   15e80:	str	r3, [sp, #4]
   15e84:	bl	1c86c <argp_error@@Base+0x245c>
   15e88:	ldr	r3, [sp, #4]
   15e8c:	cmp	r0, r4
   15e90:	movle	r0, #0
   15e94:	movgt	r0, #1
   15e98:	b	15d50 <argp_parse@@Base+0x229c>
   15e9c:	push	{r4, lr}
   15ea0:	mov	r1, #1
   15ea4:	bl	15ffc <argp_parse@@Base+0x2548>
   15ea8:	cmp	r0, #0
   15eac:	popne	{r4, pc}
   15eb0:	bl	15fd0 <argp_parse@@Base+0x251c>
   15eb4:	push	{r4, lr}
   15eb8:	mov	r1, #1
   15ebc:	bl	15ffc <argp_parse@@Base+0x2548>
   15ec0:	cmp	r0, #0
   15ec4:	popne	{r4, pc}
   15ec8:	bl	15fd0 <argp_parse@@Base+0x251c>
   15ecc:	push	{r4, lr}
   15ed0:	bl	15ffc <argp_parse@@Base+0x2548>
   15ed4:	cmp	r0, #0
   15ed8:	popne	{r4, pc}
   15edc:	bl	15fd0 <argp_parse@@Base+0x251c>
   15ee0:	push	{r4, lr}
   15ee4:	bl	15ffc <argp_parse@@Base+0x2548>
   15ee8:	cmp	r0, #0
   15eec:	popne	{r4, pc}
   15ef0:	bl	15fd0 <argp_parse@@Base+0x251c>
   15ef4:	push	{r4, r5, r6, lr}
   15ef8:	mov	r6, r0
   15efc:	mov	r0, r1
   15f00:	mov	r4, r1
   15f04:	bl	16044 <argp_parse@@Base+0x2590>
   15f08:	subs	r5, r0, #0
   15f0c:	beq	15f24 <argp_parse@@Base+0x2470>
   15f10:	mov	r2, r4
   15f14:	mov	r1, r6
   15f18:	bl	11610 <memcpy@plt>
   15f1c:	mov	r0, r5
   15f20:	pop	{r4, r5, r6, pc}
   15f24:	bl	15fd0 <argp_parse@@Base+0x251c>
   15f28:	push	{r4, r5, r6, lr}
   15f2c:	mov	r6, r0
   15f30:	mov	r0, r1
   15f34:	mov	r4, r1
   15f38:	bl	16044 <argp_parse@@Base+0x2590>
   15f3c:	subs	r5, r0, #0
   15f40:	beq	15f58 <argp_parse@@Base+0x24a4>
   15f44:	mov	r2, r4
   15f48:	mov	r1, r6
   15f4c:	bl	11610 <memcpy@plt>
   15f50:	mov	r0, r5
   15f54:	pop	{r4, r5, r6, pc}
   15f58:	bl	15fd0 <argp_parse@@Base+0x251c>
   15f5c:	push	{r4, r5, r6, lr}
   15f60:	mov	r6, r0
   15f64:	add	r0, r1, #1
   15f68:	mov	r4, r1
   15f6c:	bl	16044 <argp_parse@@Base+0x2590>
   15f70:	subs	r5, r0, #0
   15f74:	beq	15f94 <argp_parse@@Base+0x24e0>
   15f78:	mov	r3, #0
   15f7c:	mov	r1, r6
   15f80:	strb	r3, [r5, r4]
   15f84:	mov	r2, r4
   15f88:	bl	11610 <memcpy@plt>
   15f8c:	mov	r0, r5
   15f90:	pop	{r4, r5, r6, pc}
   15f94:	bl	15fd0 <argp_parse@@Base+0x251c>
   15f98:	push	{r4, r5, r6, lr}
   15f9c:	mov	r6, r0
   15fa0:	bl	117b4 <strlen@plt>
   15fa4:	add	r4, r0, #1
   15fa8:	mov	r0, r4
   15fac:	bl	16044 <argp_parse@@Base+0x2590>
   15fb0:	subs	r5, r0, #0
   15fb4:	beq	15fcc <argp_parse@@Base+0x2518>
   15fb8:	mov	r2, r4
   15fbc:	mov	r1, r6
   15fc0:	bl	11610 <memcpy@plt>
   15fc4:	mov	r0, r5
   15fc8:	pop	{r4, r5, r6, pc}
   15fcc:	bl	15fd0 <argp_parse@@Base+0x251c>
   15fd0:	ldr	r1, [pc, #24]	; 15ff0 <argp_parse@@Base+0x253c>
   15fd4:	push	{r4, lr}
   15fd8:	ldr	r0, [r1]
   15fdc:	ldr	r3, [pc, #16]	; 15ff4 <argp_parse@@Base+0x2540>
   15fe0:	ldr	r2, [pc, #16]	; 15ff8 <argp_parse@@Base+0x2544>
   15fe4:	mov	r1, #0
   15fe8:	bl	11700 <error@plt>
   15fec:	bl	11964 <abort@plt>
   15ff0:	andeq	lr, r2, r0, asr #9
   15ff4:	andeq	sp, r1, ip, ror #14
   15ff8:			; <UNDEFINED> instruction: 0x0001d2b4
   15ffc:	cmp	r1, #0
   16000:	cmpne	r0, #0
   16004:	moveq	r1, #1
   16008:	moveq	r0, r1
   1600c:	umull	r2, r3, r0, r1
   16010:	adds	r3, r3, #0
   16014:	movne	r3, #1
   16018:	cmp	r2, #0
   1601c:	blt	1602c <argp_parse@@Base+0x2578>
   16020:	cmp	r3, #0
   16024:	bne	1602c <argp_parse@@Base+0x2578>
   16028:	b	11550 <calloc@plt>
   1602c:	push	{r4, lr}
   16030:	bl	117f0 <__errno_location@plt>
   16034:	mov	r3, #12
   16038:	str	r3, [r0]
   1603c:	mov	r0, #0
   16040:	pop	{r4, pc}
   16044:	cmp	r0, #0
   16048:	moveq	r0, #1
   1604c:	cmp	r0, #0
   16050:	blt	16058 <argp_parse@@Base+0x25a4>
   16054:	b	1173c <malloc@plt>
   16058:	push	{r4, lr}
   1605c:	bl	117f0 <__errno_location@plt>
   16060:	mov	r3, #12
   16064:	str	r3, [r0]
   16068:	mov	r0, #0
   1606c:	pop	{r4, pc}
   16070:	cmp	r0, #0
   16074:	beq	16098 <argp_parse@@Base+0x25e4>
   16078:	cmp	r1, #0
   1607c:	push	{lr}		; (str lr, [sp, #-4]!)
   16080:	sub	sp, sp, #12
   16084:	beq	160a0 <argp_parse@@Base+0x25ec>
   16088:	blt	160b8 <argp_parse@@Base+0x2604>
   1608c:	add	sp, sp, #12
   16090:	pop	{lr}		; (ldr lr, [sp], #4)
   16094:	b	11688 <realloc@plt>
   16098:	mov	r0, r1
   1609c:	b	16044 <argp_parse@@Base+0x2590>
   160a0:	str	r1, [sp, #4]
   160a4:	bl	14a30 <argp_parse@@Base+0xf7c>
   160a8:	ldr	r3, [sp, #4]
   160ac:	mov	r0, r3
   160b0:	add	sp, sp, #12
   160b4:	pop	{pc}		; (ldr pc, [sp], #4)
   160b8:	bl	117f0 <__errno_location@plt>
   160bc:	mov	r2, #12
   160c0:	mov	r3, #0
   160c4:	str	r2, [r0]
   160c8:	b	160ac <argp_parse@@Base+0x25f8>
   160cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   160d0:	mov	r7, r3
   160d4:	ldr	sl, [r0, #12]
   160d8:	sub	sp, sp, #36	; 0x24
   160dc:	ldr	r3, [r0, #16]
   160e0:	cmp	sl, #0
   160e4:	mov	fp, r0
   160e8:	mov	r6, r2
   160ec:	str	r3, [sp, #16]
   160f0:	mov	r9, r1
   160f4:	ldr	r8, [sp, #72]	; 0x48
   160f8:	ldr	r5, [sp, #76]	; 0x4c
   160fc:	beq	164cc <argp_parse@@Base+0x2a18>
   16100:	mov	r1, #11
   16104:	mov	r0, sl
   16108:	bl	117c0 <strchr@plt>
   1610c:	cmp	r6, #0
   16110:	bne	163e8 <argp_parse@@Base+0x2934>
   16114:	cmp	r0, #0
   16118:	ldr	r3, [fp, #20]
   1611c:	beq	16624 <argp_parse@@Base+0x2b70>
   16120:	cmp	r3, #0
   16124:	sub	r4, r0, sl
   16128:	beq	165bc <argp_parse@@Base+0x2b08>
   1612c:	cmp	r4, #0
   16130:	beq	1655c <argp_parse@@Base+0x2aa8>
   16134:	mov	r0, sl
   16138:	mov	r1, r4
   1613c:	bl	115f8 <strndup@plt>
   16140:	mov	r3, #1
   16144:	str	r3, [sp, #24]
   16148:	mov	sl, r0
   1614c:	adds	r3, r0, #0
   16150:	movne	r3, #1
   16154:	str	r3, [sp, #20]
   16158:	mov	r1, r9
   1615c:	mov	r0, fp
   16160:	bl	148d4 <argp_parse@@Base+0xe20>
   16164:	ldr	r3, [fp, #20]
   16168:	str	r0, [sp, #12]
   1616c:	ldr	r0, [pc, #1272]	; 1666c <argp_parse@@Base+0x2bb8>
   16170:	ldr	r2, [sp, #12]
   16174:	mov	r1, sl
   16178:	blx	r3
   1617c:	subs	r3, r0, #0
   16180:	beq	1650c <argp_parse@@Base+0x2a58>
   16184:	cmp	r7, #0
   16188:	beq	161ac <argp_parse@@Base+0x26f8>
   1618c:	ldr	r2, [r5, #28]
   16190:	ldr	r1, [r5, #32]
   16194:	cmp	r2, r1
   16198:	bcs	16514 <argp_parse@@Base+0x2a60>
   1619c:	add	r0, r2, #1
   161a0:	mov	r1, #10
   161a4:	str	r0, [r5, #28]
   161a8:	strb	r1, [r2]
   161ac:	ldr	r2, [sp, #24]
   161b0:	cmp	sl, r3
   161b4:	movne	r2, #0
   161b8:	andeq	r2, r2, #1
   161bc:	cmp	r2, #0
   161c0:	beq	1642c <argp_parse@@Base+0x2978>
   161c4:	ldr	r0, [r5, #28]
   161c8:	ldr	r1, [r5, #32]
   161cc:	add	r2, r0, r4
   161d0:	cmp	r1, r2
   161d4:	bcs	1648c <argp_parse@@Base+0x29d8>
   161d8:	mov	r1, r4
   161dc:	mov	r0, r5
   161e0:	str	r3, [sp, #24]
   161e4:	bl	1c418 <argp_error@@Base+0x2008>
   161e8:	ldr	r3, [sp, #24]
   161ec:	cmp	r0, #0
   161f0:	bne	16488 <argp_parse@@Base+0x29d4>
   161f4:	ldr	r4, [r5, #28]
   161f8:	ldr	r1, [r5, #24]
   161fc:	ldr	r2, [r5, #16]
   16200:	sub	r4, r4, r1
   16204:	cmp	r4, r2
   16208:	bhi	164b0 <argp_parse@@Base+0x29fc>
   1620c:	ldr	r2, [r5, #20]
   16210:	ldr	r1, [r5, #4]
   16214:	bic	r2, r2, r2, asr #31
   16218:	cmp	r1, r2
   1621c:	bcs	16240 <argp_parse@@Base+0x278c>
   16220:	ldr	r2, [r5, #28]
   16224:	ldr	r1, [r5, #32]
   16228:	cmp	r2, r1
   1622c:	bcs	16538 <argp_parse@@Base+0x2a84>
   16230:	add	r0, r2, #1
   16234:	mov	r1, #10
   16238:	str	r0, [r5, #28]
   1623c:	strb	r1, [r2]
   16240:	cmp	sl, r3
   16244:	moveq	r4, #1
   16248:	beq	16258 <argp_parse@@Base+0x27a4>
   1624c:	mov	r0, r3
   16250:	bl	14a30 <argp_parse@@Base+0xf7c>
   16254:	mov	r4, #1
   16258:	ldr	r3, [sp, #20]
   1625c:	cmp	r3, #0
   16260:	beq	16278 <argp_parse@@Base+0x27c4>
   16264:	ldr	r3, [fp, #20]
   16268:	cmp	r3, #0
   1626c:	beq	1635c <argp_parse@@Base+0x28a8>
   16270:	mov	r0, sl
   16274:	bl	14a30 <argp_parse@@Base+0xf7c>
   16278:	cmp	r6, #0
   1627c:	beq	1635c <argp_parse@@Base+0x28a8>
   16280:	ldr	r3, [fp, #20]
   16284:	cmp	r3, #0
   16288:	beq	1635c <argp_parse@@Base+0x28a8>
   1628c:	ldr	r2, [sp, #12]
   16290:	mov	r1, #0
   16294:	ldr	r0, [pc, #980]	; 16670 <argp_parse@@Base+0x2bbc>
   16298:	blx	r3
   1629c:	subs	sl, r0, #0
   162a0:	beq	1635c <argp_parse@@Base+0x28a8>
   162a4:	orrs	r3, r7, r4
   162a8:	beq	162cc <argp_parse@@Base+0x2818>
   162ac:	ldr	r3, [r5, #28]
   162b0:	ldr	r2, [r5, #32]
   162b4:	cmp	r3, r2
   162b8:	bcs	165f4 <argp_parse@@Base+0x2b40>
   162bc:	add	r1, r3, #1
   162c0:	mov	r2, #10
   162c4:	str	r1, [r5, #28]
   162c8:	strb	r2, [r3]
   162cc:	mov	r0, sl
   162d0:	bl	117b4 <strlen@plt>
   162d4:	subs	r4, r0, #0
   162d8:	beq	16304 <argp_parse@@Base+0x2850>
   162dc:	ldr	r0, [r5, #28]
   162e0:	ldr	r2, [r5, #32]
   162e4:	add	r3, r0, r4
   162e8:	cmp	r2, r3
   162ec:	bcs	1656c <argp_parse@@Base+0x2ab8>
   162f0:	mov	r1, r4
   162f4:	mov	r0, r5
   162f8:	bl	1c418 <argp_error@@Base+0x2008>
   162fc:	cmp	r0, #0
   16300:	bne	16568 <argp_parse@@Base+0x2ab4>
   16304:	mov	r0, sl
   16308:	bl	14a30 <argp_parse@@Base+0xf7c>
   1630c:	ldr	r3, [r5, #28]
   16310:	ldr	r1, [r5, #24]
   16314:	ldr	r2, [r5, #16]
   16318:	sub	r3, r3, r1
   1631c:	cmp	r3, r2
   16320:	bhi	16588 <argp_parse@@Base+0x2ad4>
   16324:	ldr	r3, [r5, #20]
   16328:	ldr	r2, [r5, #4]
   1632c:	bic	r3, r3, r3, asr #31
   16330:	cmp	r2, r3
   16334:	bcs	164c4 <argp_parse@@Base+0x2a10>
   16338:	ldr	r3, [r5, #28]
   1633c:	ldr	r2, [r5, #32]
   16340:	cmp	r3, r2
   16344:	bcs	165d8 <argp_parse@@Base+0x2b24>
   16348:	mov	r4, #1
   1634c:	add	r2, r3, r4
   16350:	str	r2, [r5, #28]
   16354:	mov	r2, #10
   16358:	strb	r2, [r3]
   1635c:	ldr	fp, [sp, #16]
   16360:	cmp	fp, #0
   16364:	beq	163dc <argp_parse@@Base+0x2928>
   16368:	ldr	r3, [fp]
   1636c:	cmp	r3, #0
   16370:	beq	163dc <argp_parse@@Base+0x2928>
   16374:	eor	r2, r4, #1
   16378:	and	r2, r2, #1
   1637c:	clz	sl, r8
   16380:	lsr	sl, sl, #5
   16384:	orrs	r2, sl, r2
   16388:	bne	163a4 <argp_parse@@Base+0x28f0>
   1638c:	b	16610 <argp_parse@@Base+0x2b5c>
   16390:	cmp	r4, #0
   16394:	movne	r2, sl
   16398:	orreq	r2, sl, #1
   1639c:	cmp	r2, #0
   163a0:	beq	163dc <argp_parse@@Base+0x2928>
   163a4:	orrs	r2, r7, r4
   163a8:	mov	r0, r3
   163ac:	str	r5, [sp, #4]
   163b0:	movne	r3, #1
   163b4:	moveq	r3, #0
   163b8:	str	r8, [sp]
   163bc:	mov	r2, r6
   163c0:	mov	r1, r9
   163c4:	bl	160cc <argp_parse@@Base+0x2618>
   163c8:	ldr	r3, [fp, #16]
   163cc:	add	fp, fp, #16
   163d0:	cmp	r3, #0
   163d4:	orr	r4, r4, r0
   163d8:	bne	16390 <argp_parse@@Base+0x28dc>
   163dc:	mov	r0, r4
   163e0:	add	sp, sp, #36	; 0x24
   163e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   163e8:	cmp	r0, #0
   163ec:	addne	sl, r0, #1
   163f0:	beq	165b4 <argp_parse@@Base+0x2b00>
   163f4:	ldr	r3, [fp, #20]
   163f8:	cmp	r3, #0
   163fc:	beq	16594 <argp_parse@@Base+0x2ae0>
   16400:	mov	r3, #0
   16404:	mov	r1, r9
   16408:	mov	r0, fp
   1640c:	mov	r4, r3
   16410:	str	r3, [sp, #20]
   16414:	bl	148d4 <argp_parse@@Base+0xe20>
   16418:	str	r4, [sp, #24]
   1641c:	ldr	r3, [fp, #20]
   16420:	str	r0, [sp, #12]
   16424:	ldr	r0, [pc, #584]	; 16674 <argp_parse@@Base+0x2bc0>
   16428:	b	16170 <argp_parse@@Base+0x26bc>
   1642c:	mov	r0, r3
   16430:	str	r3, [sp, #24]
   16434:	bl	117b4 <strlen@plt>
   16438:	ldr	r3, [sp, #24]
   1643c:	subs	r4, r0, #0
   16440:	beq	161f4 <argp_parse@@Base+0x2740>
   16444:	ldr	r0, [r5, #28]
   16448:	ldr	r1, [r5, #32]
   1644c:	add	r2, r0, r4
   16450:	cmp	r1, r2
   16454:	bcs	16478 <argp_parse@@Base+0x29c4>
   16458:	mov	r1, r4
   1645c:	mov	r0, r5
   16460:	str	r3, [sp, #24]
   16464:	bl	1c418 <argp_error@@Base+0x2008>
   16468:	ldr	r3, [sp, #24]
   1646c:	cmp	r0, #0
   16470:	beq	161f4 <argp_parse@@Base+0x2740>
   16474:	ldr	r0, [r5, #28]
   16478:	mov	r2, r4
   1647c:	mov	r1, r3
   16480:	str	r3, [sp, #24]
   16484:	b	16498 <argp_parse@@Base+0x29e4>
   16488:	ldr	r0, [r5, #28]
   1648c:	mov	r2, r4
   16490:	mov	r1, sl
   16494:	str	r3, [sp, #24]
   16498:	bl	11610 <memcpy@plt>
   1649c:	ldr	r2, [r5, #28]
   164a0:	ldr	r3, [sp, #24]
   164a4:	add	r4, r2, r4
   164a8:	str	r4, [r5, #28]
   164ac:	b	161f8 <argp_parse@@Base+0x2744>
   164b0:	mov	r0, r5
   164b4:	str	r3, [sp, #24]
   164b8:	bl	1be6c <argp_error@@Base+0x1a5c>
   164bc:	ldr	r3, [sp, #24]
   164c0:	b	1620c <argp_parse@@Base+0x2758>
   164c4:	mov	r4, #1
   164c8:	b	1635c <argp_parse@@Base+0x28a8>
   164cc:	ldr	r4, [r0, #20]
   164d0:	cmp	r4, #0
   164d4:	beq	1661c <argp_parse@@Base+0x2b68>
   164d8:	bl	148d4 <argp_parse@@Base+0xe20>
   164dc:	cmp	r6, #0
   164e0:	ldr	r3, [fp, #20]
   164e4:	strne	sl, [sp, #20]
   164e8:	strne	sl, [sp, #24]
   164ec:	movne	r4, sl
   164f0:	streq	r6, [sp, #20]
   164f4:	streq	r6, [sp, #24]
   164f8:	moveq	r4, r6
   164fc:	str	r0, [sp, #12]
   16500:	ldrne	r0, [pc, #364]	; 16674 <argp_parse@@Base+0x2bc0>
   16504:	ldreq	r0, [pc, #352]	; 1666c <argp_parse@@Base+0x2bb8>
   16508:	b	16170 <argp_parse@@Base+0x26bc>
   1650c:	mov	r4, r3
   16510:	b	16258 <argp_parse@@Base+0x27a4>
   16514:	mov	r1, #1
   16518:	mov	r0, r5
   1651c:	str	r3, [sp, #28]
   16520:	bl	1c418 <argp_error@@Base+0x2008>
   16524:	ldr	r3, [sp, #28]
   16528:	cmp	r0, #0
   1652c:	beq	161ac <argp_parse@@Base+0x26f8>
   16530:	ldr	r2, [r5, #28]
   16534:	b	1619c <argp_parse@@Base+0x26e8>
   16538:	mov	r1, #1
   1653c:	mov	r0, r5
   16540:	str	r3, [sp, #24]
   16544:	bl	1c418 <argp_error@@Base+0x2008>
   16548:	ldr	r3, [sp, #24]
   1654c:	cmp	r0, #0
   16550:	beq	16240 <argp_parse@@Base+0x278c>
   16554:	ldr	r2, [r5, #28]
   16558:	b	16230 <argp_parse@@Base+0x277c>
   1655c:	str	r4, [sp, #20]
   16560:	str	r4, [sp, #24]
   16564:	b	16158 <argp_parse@@Base+0x26a4>
   16568:	ldr	r0, [r5, #28]
   1656c:	mov	r2, r4
   16570:	mov	r1, sl
   16574:	bl	11610 <memcpy@plt>
   16578:	ldr	r3, [r5, #28]
   1657c:	add	r4, r3, r4
   16580:	str	r4, [r5, #28]
   16584:	b	16304 <argp_parse@@Base+0x2850>
   16588:	mov	r0, r5
   1658c:	bl	1be6c <argp_error@@Base+0x1a5c>
   16590:	b	16324 <argp_parse@@Base+0x2870>
   16594:	cmp	sl, #0
   16598:	beq	16618 <argp_parse@@Base+0x2b64>
   1659c:	str	r3, [sp, #20]
   165a0:	str	r3, [sp, #24]
   165a4:	mov	r4, r3
   165a8:	str	r3, [sp, #12]
   165ac:	mov	r3, sl
   165b0:	b	16184 <argp_parse@@Base+0x26d0>
   165b4:	mov	sl, r0
   165b8:	b	163f4 <argp_parse@@Base+0x2940>
   165bc:	adds	r3, r4, #0
   165c0:	movne	r3, #1
   165c4:	str	r3, [sp, #24]
   165c8:	str	r3, [sp, #20]
   165cc:	str	r6, [sp, #12]
   165d0:	mov	r3, sl
   165d4:	b	16184 <argp_parse@@Base+0x26d0>
   165d8:	mov	r1, #1
   165dc:	mov	r0, r5
   165e0:	bl	1c418 <argp_error@@Base+0x2008>
   165e4:	cmp	r0, #0
   165e8:	beq	164c4 <argp_parse@@Base+0x2a10>
   165ec:	ldr	r3, [r5, #28]
   165f0:	b	16348 <argp_parse@@Base+0x2894>
   165f4:	mov	r1, #1
   165f8:	mov	r0, r5
   165fc:	bl	1c418 <argp_error@@Base+0x2008>
   16600:	cmp	r0, #0
   16604:	beq	162cc <argp_parse@@Base+0x2818>
   16608:	ldr	r3, [r5, #28]
   1660c:	b	162bc <argp_parse@@Base+0x2808>
   16610:	mov	r4, #1
   16614:	b	163dc <argp_parse@@Base+0x2928>
   16618:	mov	r4, sl
   1661c:	str	r4, [sp, #12]
   16620:	b	16278 <argp_parse@@Base+0x27c4>
   16624:	cmp	r3, #0
   16628:	beq	16654 <argp_parse@@Base+0x2ba0>
   1662c:	mov	r1, r9
   16630:	mov	r0, fp
   16634:	bl	148d4 <argp_parse@@Base+0xe20>
   16638:	mov	r4, r6
   1663c:	ldr	r3, [fp, #20]
   16640:	str	r6, [sp, #20]
   16644:	str	r6, [sp, #24]
   16648:	str	r0, [sp, #12]
   1664c:	ldr	r0, [pc, #24]	; 1666c <argp_parse@@Base+0x2bb8>
   16650:	b	16170 <argp_parse@@Base+0x26bc>
   16654:	mov	r3, sl
   16658:	str	r6, [sp, #20]
   1665c:	str	r6, [sp, #24]
   16660:	mov	r4, r6
   16664:	str	r6, [sp, #12]
   16668:	b	16184 <argp_parse@@Base+0x26d0>
   1666c:	andeq	r0, r0, #1
   16670:	andeq	r0, r0, #4
   16674:	andeq	r0, r0, #2
   16678:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1667c:	sub	sp, sp, #52	; 0x34
   16680:	mov	r3, r0
   16684:	str	r0, [sp, #20]
   16688:	mov	r0, #16
   1668c:	ldr	r6, [r3, #16]
   16690:	ldr	r4, [r3]
   16694:	str	r1, [sp, #28]
   16698:	bl	16044 <argp_parse@@Base+0x2590>
   1669c:	subs	r3, r0, #0
   166a0:	str	r3, [sp, #16]
   166a4:	beq	16c94 <argp_parse@@Base+0x31e0>
   166a8:	mov	r2, r3
   166ac:	cmp	r4, #0
   166b0:	mov	r3, #0
   166b4:	str	r3, [r2, #4]
   166b8:	str	r3, [r2, #12]
   166bc:	beq	168d0 <argp_parse@@Base+0x2e1c>
   166c0:	ldr	fp, [r4, #12]
   166c4:	ands	fp, fp, #4
   166c8:	bne	16ca8 <argp_parse@@Base+0x31f4>
   166cc:	add	r5, r4, #24
   166d0:	mov	r7, r4
   166d4:	mov	r9, fp
   166d8:	mov	sl, fp
   166dc:	mov	r4, r2
   166e0:	b	16724 <argp_parse@@Base+0x2c70>
   166e4:	ldr	r3, [r5, #-12]
   166e8:	tst	r3, #4
   166ec:	addeq	r9, r9, #1
   166f0:	streq	r9, [r4, #4]
   166f4:	tst	r3, #8
   166f8:	bne	16720 <argp_parse@@Base+0x2c6c>
   166fc:	sub	r3, r8, #1
   16700:	cmp	r3, #254	; 0xfe
   16704:	bhi	16720 <argp_parse@@Base+0x2c6c>
   16708:	bl	11784 <__ctype_b_loc@plt>
   1670c:	lsl	r8, r8, #1
   16710:	ldr	r3, [r0]
   16714:	ldrh	r3, [r3, r8]
   16718:	tst	r3, #16384	; 0x4000
   1671c:	addne	sl, sl, #1
   16720:	add	r5, r5, #24
   16724:	ldr	r8, [r5, #-20]	; 0xffffffec
   16728:	cmp	r8, #0
   1672c:	bne	166e4 <argp_parse@@Base+0x2c30>
   16730:	ldr	r3, [r5, #-24]	; 0xffffffe8
   16734:	cmp	r3, #0
   16738:	bne	166e4 <argp_parse@@Base+0x2c30>
   1673c:	ldr	r3, [r5, #-8]
   16740:	cmp	r3, #0
   16744:	bne	166e4 <argp_parse@@Base+0x2c30>
   16748:	ldr	r3, [r5, #-4]
   1674c:	cmp	r3, #0
   16750:	bne	166e4 <argp_parse@@Base+0x2c30>
   16754:	rsb	r9, r9, r9, lsl #3
   16758:	mov	r4, r7
   1675c:	lsl	r0, r9, #2
   16760:	mov	r7, r3
   16764:	bl	16044 <argp_parse@@Base+0x2590>
   16768:	ldr	r5, [sp, #16]
   1676c:	str	r0, [r5]
   16770:	add	r0, sl, #1
   16774:	bl	16044 <argp_parse@@Base+0x2590>
   16778:	ldr	r8, [r5]
   1677c:	mov	r3, r5
   16780:	cmp	r0, #0
   16784:	cmpne	r8, #0
   16788:	mov	sl, r0
   1678c:	str	r0, [r3, #8]
   16790:	beq	16d50 <argp_parse@@Base+0x329c>
   16794:	ldr	r2, [sp, #16]
   16798:	ldr	r3, [pc, #1476]	; 16d64 <argp_parse@@Base+0x32b0>
   1679c:	ldr	r2, [r2, #4]
   167a0:	cmp	r2, r3
   167a4:	bhi	16d3c <argp_parse@@Base+0x3288>
   167a8:	add	r8, r8, #28
   167ac:	mov	r9, sl
   167b0:	mov	r2, fp
   167b4:	ldr	r3, [r4, #4]
   167b8:	mov	fp, sl
   167bc:	mov	sl, r8
   167c0:	ldr	r8, [sp, #28]
   167c4:	str	r6, [sp, #4]
   167c8:	cmp	r3, #0
   167cc:	bne	167dc <argp_parse@@Base+0x2d28>
   167d0:	ldr	r0, [r4]
   167d4:	cmp	r0, #0
   167d8:	beq	16cf4 <argp_parse@@Base+0x3240>
   167dc:	str	r7, [sl, #-24]	; 0xffffffe8
   167e0:	ldr	r5, [r4, #20]
   167e4:	str	r4, [sl, #-28]	; 0xffffffe4
   167e8:	cmp	r5, #0
   167ec:	str	fp, [sl, #-20]	; 0xffffffec
   167f0:	bne	16808 <argp_parse@@Base+0x2d54>
   167f4:	ldr	r0, [r4]
   167f8:	cmp	r0, #0
   167fc:	cmpeq	r3, #0
   16800:	movne	r5, r2
   16804:	beq	16d18 <argp_parse@@Base+0x3264>
   16808:	ldr	r2, [sp, #20]
   1680c:	mov	r3, r7
   16810:	str	r5, [sl, #-16]
   16814:	str	r8, [sl, #-12]
   16818:	str	r2, [sl, #-8]
   1681c:	add	r3, r3, #1
   16820:	str	r3, [sl, #-24]	; 0xffffffe8
   16824:	ldr	r3, [r4, #12]
   16828:	tst	r3, #8
   1682c:	bne	16898 <argp_parse@@Base+0x2de4>
   16830:	ldr	r6, [r4, #4]
   16834:	sub	r2, r6, #1
   16838:	cmp	r2, #254	; 0xfe
   1683c:	bhi	16898 <argp_parse@@Base+0x2de4>
   16840:	bl	11784 <__ctype_b_loc@plt>
   16844:	lsl	r2, r6, #1
   16848:	ldr	r0, [r0]
   1684c:	ldrh	r2, [r0, r2]
   16850:	tst	r2, #16384	; 0x4000
   16854:	beq	16898 <argp_parse@@Base+0x2de4>
   16858:	cmp	r9, fp
   1685c:	uxtb	r0, r6
   16860:	bcs	16890 <argp_parse@@Base+0x2ddc>
   16864:	ldrb	r3, [r9]
   16868:	cmp	r3, r0
   1686c:	movne	r3, r9
   16870:	subne	ip, fp, #1
   16874:	bne	16888 <argp_parse@@Base+0x2dd4>
   16878:	b	16898 <argp_parse@@Base+0x2de4>
   1687c:	ldrb	r2, [r3, #1]!
   16880:	cmp	r2, r0
   16884:	beq	16898 <argp_parse@@Base+0x2de4>
   16888:	cmp	ip, r3
   1688c:	bne	1687c <argp_parse@@Base+0x2dc8>
   16890:	strb	r0, [fp]
   16894:	add	fp, fp, #1
   16898:	add	r4, r4, #24
   1689c:	ldr	r3, [r4, #4]
   168a0:	cmp	r3, #0
   168a4:	bne	168b4 <argp_parse@@Base+0x2e00>
   168a8:	ldr	r2, [r4]
   168ac:	cmp	r2, #0
   168b0:	beq	16cd0 <argp_parse@@Base+0x321c>
   168b4:	ldr	r2, [r4, #12]
   168b8:	tst	r2, #4
   168bc:	beq	16ce8 <argp_parse@@Base+0x3234>
   168c0:	ldr	r3, [sl, #-24]	; 0xffffffe8
   168c4:	b	1681c <argp_parse@@Base+0x2d68>
   168c8:	ldr	r6, [sp, #4]
   168cc:	strb	r3, [fp]
   168d0:	cmp	r6, #0
   168d4:	beq	16a10 <argp_parse@@Base+0x2f5c>
   168d8:	ldr	r0, [r6]
   168dc:	cmp	r0, #0
   168e0:	beq	16a10 <argp_parse@@Base+0x2f5c>
   168e4:	add	r3, r6, #16
   168e8:	str	r3, [sp, #8]
   168ec:	ldr	r3, [sp, #16]
   168f0:	add	r3, r3, #12
   168f4:	str	r3, [sp, #44]	; 0x2c
   168f8:	ldr	r3, [sp, #8]
   168fc:	ldr	r5, [r3, #-4]
   16900:	ldr	r6, [r3, #-8]
   16904:	cmp	r5, #0
   16908:	bne	16914 <argp_parse@@Base+0x2e60>
   1690c:	cmp	r6, #0
   16910:	beq	16c68 <argp_parse@@Base+0x31b4>
   16914:	ldr	r3, [sp, #20]
   16918:	mov	r0, #28
   1691c:	ldr	r2, [r3, #16]
   16920:	ldr	r3, [sp, #8]
   16924:	sub	r3, r3, #16
   16928:	sub	r3, r3, r2
   1692c:	asr	r4, r3, #4
   16930:	bl	16044 <argp_parse@@Base+0x2590>
   16934:	subs	r1, r0, #0
   16938:	beq	1697c <argp_parse@@Base+0x2ec8>
   1693c:	ldr	r3, [sp, #28]
   16940:	ldr	r0, [sp, #16]
   16944:	cmp	r3, #0
   16948:	ldr	r2, [sp, #20]
   1694c:	str	r3, [r1, #12]
   16950:	ldrne	r3, [r3, #20]
   16954:	str	r2, [r1, #16]
   16958:	ldr	r2, [r0, #12]
   1695c:	addne	r3, r3, #1
   16960:	moveq	r3, #0
   16964:	str	r5, [r1, #8]
   16968:	str	r6, [r1]
   1696c:	str	r4, [r1, #4]
   16970:	str	r3, [r1, #20]
   16974:	str	r2, [r1, #24]
   16978:	str	r1, [r0, #12]
   1697c:	ldr	r3, [sp, #8]
   16980:	ldr	r0, [r3, #-16]
   16984:	bl	16678 <argp_parse@@Base+0x2bc4>
   16988:	ldr	r3, [sp, #16]
   1698c:	ldr	r2, [r3, #12]
   16990:	cmp	r2, #0
   16994:	mov	sl, r0
   16998:	bne	169a4 <argp_parse@@Base+0x2ef0>
   1699c:	b	16c70 <argp_parse@@Base+0x31bc>
   169a0:	mov	r2, r3
   169a4:	ldr	r3, [r2, #24]
   169a8:	cmp	r3, #0
   169ac:	bne	169a0 <argp_parse@@Base+0x2eec>
   169b0:	add	r2, r2, #24
   169b4:	ldr	r3, [sl, #4]
   169b8:	ldr	r1, [sl, #12]
   169bc:	cmp	r3, #0
   169c0:	str	r1, [r2]
   169c4:	mov	r2, #0
   169c8:	str	r2, [sl, #12]
   169cc:	beq	169f4 <argp_parse@@Base+0x2f40>
   169d0:	ldr	ip, [sp, #16]
   169d4:	ldr	r2, [ip, #4]
   169d8:	cmp	r2, #0
   169dc:	bne	16a1c <argp_parse@@Base+0x2f68>
   169e0:	ldr	r0, [sl]
   169e4:	ldr	r1, [sl, #8]
   169e8:	stm	ip, {r0, r3}
   169ec:	str	r1, [ip, #8]
   169f0:	str	r2, [sl, #4]
   169f4:	mov	r0, sl
   169f8:	bl	14a30 <argp_parse@@Base+0xf7c>
   169fc:	ldr	r3, [sp, #8]
   16a00:	ldr	r0, [r3], #16
   16a04:	cmp	r0, #0
   16a08:	str	r3, [sp, #8]
   16a0c:	bne	168fc <argp_parse@@Base+0x2e48>
   16a10:	ldr	r0, [sp, #16]
   16a14:	add	sp, sp, #52	; 0x34
   16a18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16a1c:	add	r3, r3, r2
   16a20:	str	r3, [sp, #32]
   16a24:	rsb	r0, r3, r3, lsl #3
   16a28:	lsl	r0, r0, #2
   16a2c:	bl	16044 <argp_parse@@Base+0x2590>
   16a30:	ldr	r3, [sp, #16]
   16a34:	mov	r4, r0
   16a38:	str	r0, [sp, #24]
   16a3c:	ldr	r0, [r3, #8]
   16a40:	bl	117b4 <strlen@plt>
   16a44:	mov	r5, r0
   16a48:	ldr	r0, [sl, #8]
   16a4c:	bl	117b4 <strlen@plt>
   16a50:	add	r0, r5, r0
   16a54:	add	r0, r0, #1
   16a58:	bl	16044 <argp_parse@@Base+0x2590>
   16a5c:	cmp	r4, #0
   16a60:	cmpne	r0, #0
   16a64:	mov	r7, r0
   16a68:	beq	16c80 <argp_parse@@Base+0x31cc>
   16a6c:	ldr	r3, [sp, #32]
   16a70:	ldr	r2, [pc, #748]	; 16d64 <argp_parse@@Base+0x32b0>
   16a74:	cmp	r3, r2
   16a78:	bhi	16cbc <argp_parse@@Base+0x3208>
   16a7c:	ldr	r6, [sp, #16]
   16a80:	ldr	r8, [sp, #24]
   16a84:	ldm	r6, {r3, r4}
   16a88:	mov	r0, r8
   16a8c:	rsb	r9, r4, r4, lsl #3
   16a90:	mov	r1, r3
   16a94:	lsl	r9, r9, #2
   16a98:	mov	r2, r9
   16a9c:	str	r3, [sp, #36]	; 0x24
   16aa0:	bl	11778 <mempcpy@plt>
   16aa4:	ldr	r3, [sl, #4]
   16aa8:	ldr	r1, [sl]
   16aac:	str	r3, [sp, #4]
   16ab0:	rsb	r2, r3, r3, lsl #3
   16ab4:	lsl	r2, r2, #2
   16ab8:	bl	11610 <memcpy@plt>
   16abc:	ldr	r6, [r6, #8]
   16ac0:	mov	r2, r5
   16ac4:	mov	r1, r6
   16ac8:	mov	r0, r7
   16acc:	bl	11610 <memcpy@plt>
   16ad0:	cmp	r4, #0
   16ad4:	beq	16c78 <argp_parse@@Base+0x31c4>
   16ad8:	mov	r2, r8
   16adc:	ldr	r3, [r2, #8]
   16ae0:	subs	r4, r4, #1
   16ae4:	sub	r3, r3, r6
   16ae8:	add	r3, r7, r3
   16aec:	str	r3, [r2, #8]
   16af0:	add	r2, r2, #28
   16af4:	bne	16adc <argp_parse@@Base+0x3028>
   16af8:	ldr	r3, [sp, #24]
   16afc:	add	r1, r3, r9
   16b00:	ldr	r3, [sp, #4]
   16b04:	ldr	r9, [sl, #8]
   16b08:	cmp	r3, #0
   16b0c:	add	r3, r7, r5
   16b10:	str	r3, [sp, #12]
   16b14:	beq	16c00 <argp_parse@@Base+0x314c>
   16b18:	add	fp, r1, #28
   16b1c:	sub	r8, r3, #1
   16b20:	str	sl, [sp, #40]	; 0x28
   16b24:	mov	r6, r3
   16b28:	mov	sl, r9
   16b2c:	mov	r9, fp
   16b30:	mov	fp, r8
   16b34:	ldr	r5, [r9, #-24]	; 0xffffffe8
   16b38:	str	r6, [r9, #-20]	; 0xffffffec
   16b3c:	cmp	r5, #0
   16b40:	ldr	r4, [r9, #-28]	; 0xffffffe4
   16b44:	bne	16b58 <argp_parse@@Base+0x30a4>
   16b48:	b	16be4 <argp_parse@@Base+0x3130>
   16b4c:	subs	r5, r5, #1
   16b50:	add	r4, r4, #24
   16b54:	beq	16be4 <argp_parse@@Base+0x3130>
   16b58:	ldr	r3, [r4, #12]
   16b5c:	tst	r3, #8
   16b60:	bne	16b4c <argp_parse@@Base+0x3098>
   16b64:	ldr	r8, [r4, #4]
   16b68:	sub	r3, r8, #1
   16b6c:	cmp	r3, #254	; 0xfe
   16b70:	bhi	16b4c <argp_parse@@Base+0x3098>
   16b74:	bl	11784 <__ctype_b_loc@plt>
   16b78:	lsl	r3, r8, #1
   16b7c:	ldr	r2, [r0]
   16b80:	ldrh	r3, [r2, r3]
   16b84:	tst	r3, #16384	; 0x4000
   16b88:	beq	16b4c <argp_parse@@Base+0x3098>
   16b8c:	ldrb	r1, [sl]
   16b90:	cmp	r1, r8
   16b94:	bne	16b4c <argp_parse@@Base+0x3098>
   16b98:	ldr	r3, [sp, #12]
   16b9c:	cmp	r7, r3
   16ba0:	bcs	16bcc <argp_parse@@Base+0x3118>
   16ba4:	ldrb	r3, [r7]
   16ba8:	cmp	r3, r1
   16bac:	movne	r3, r7
   16bb0:	bne	16bc4 <argp_parse@@Base+0x3110>
   16bb4:	b	16bd4 <argp_parse@@Base+0x3120>
   16bb8:	ldrb	r2, [r3, #1]!
   16bbc:	cmp	r2, r1
   16bc0:	beq	16bd4 <argp_parse@@Base+0x3120>
   16bc4:	cmp	fp, r3
   16bc8:	bne	16bb8 <argp_parse@@Base+0x3104>
   16bcc:	strb	r1, [r6]
   16bd0:	add	r6, r6, #1
   16bd4:	subs	r5, r5, #1
   16bd8:	add	sl, sl, #1
   16bdc:	add	r4, r4, #24
   16be0:	bne	16b58 <argp_parse@@Base+0x30a4>
   16be4:	ldr	r3, [sp, #4]
   16be8:	add	r9, r9, #28
   16bec:	subs	r3, r3, #1
   16bf0:	str	r3, [sp, #4]
   16bf4:	bne	16b34 <argp_parse@@Base+0x3080>
   16bf8:	ldr	sl, [sp, #40]	; 0x28
   16bfc:	mov	r3, r6
   16c00:	mov	r2, #0
   16c04:	strb	r2, [r3]
   16c08:	ldr	r0, [sp, #36]	; 0x24
   16c0c:	bl	14a30 <argp_parse@@Base+0xf7c>
   16c10:	ldr	r4, [sp, #16]
   16c14:	ldr	r0, [r4, #8]
   16c18:	bl	14a30 <argp_parse@@Base+0xf7c>
   16c1c:	ldr	r2, [sp, #24]
   16c20:	ldr	r0, [sl, #12]
   16c24:	str	r2, [r4]
   16c28:	ldr	r2, [sp, #32]
   16c2c:	cmp	r0, #0
   16c30:	stmib	r4, {r2, r7}
   16c34:	beq	16c48 <argp_parse@@Base+0x3194>
   16c38:	ldr	r4, [r0, #24]
   16c3c:	bl	14a30 <argp_parse@@Base+0xf7c>
   16c40:	subs	r0, r4, #0
   16c44:	bne	16c38 <argp_parse@@Base+0x3184>
   16c48:	ldr	r3, [sl, #4]
   16c4c:	cmp	r3, #0
   16c50:	beq	169f4 <argp_parse@@Base+0x2f40>
   16c54:	ldr	r0, [sl]
   16c58:	bl	14a30 <argp_parse@@Base+0xf7c>
   16c5c:	ldr	r0, [sl, #8]
   16c60:	bl	14a30 <argp_parse@@Base+0xf7c>
   16c64:	b	169f4 <argp_parse@@Base+0x2f40>
   16c68:	ldr	r1, [sp, #28]
   16c6c:	b	16984 <argp_parse@@Base+0x2ed0>
   16c70:	ldr	r2, [sp, #44]	; 0x2c
   16c74:	b	169b4 <argp_parse@@Base+0x2f00>
   16c78:	ldr	r1, [sp, #24]
   16c7c:	b	16b00 <argp_parse@@Base+0x304c>
   16c80:	ldr	r3, [pc, #224]	; 16d68 <argp_parse@@Base+0x32b4>
   16c84:	ldr	r2, [pc, #224]	; 16d6c <argp_parse@@Base+0x32b8>
   16c88:	ldr	r1, [pc, #224]	; 16d70 <argp_parse@@Base+0x32bc>
   16c8c:	ldr	r0, [pc, #224]	; 16d74 <argp_parse@@Base+0x32c0>
   16c90:	bl	11988 <__assert_fail@plt>
   16c94:	ldr	r3, [pc, #220]	; 16d78 <argp_parse@@Base+0x32c4>
   16c98:	ldr	r2, [pc, #220]	; 16d7c <argp_parse@@Base+0x32c8>
   16c9c:	ldr	r1, [pc, #204]	; 16d70 <argp_parse@@Base+0x32bc>
   16ca0:	ldr	r0, [pc, #216]	; 16d80 <argp_parse@@Base+0x32cc>
   16ca4:	bl	11988 <__assert_fail@plt>
   16ca8:	ldr	r3, [pc, #200]	; 16d78 <argp_parse@@Base+0x32c4>
   16cac:	mov	r2, #460	; 0x1cc
   16cb0:	ldr	r1, [pc, #184]	; 16d70 <argp_parse@@Base+0x32bc>
   16cb4:	ldr	r0, [pc, #200]	; 16d84 <argp_parse@@Base+0x32d0>
   16cb8:	bl	11988 <__assert_fail@plt>
   16cbc:	ldr	r3, [pc, #164]	; 16d68 <argp_parse@@Base+0x32b4>
   16cc0:	mov	r2, #972	; 0x3cc
   16cc4:	ldr	r1, [pc, #164]	; 16d70 <argp_parse@@Base+0x32bc>
   16cc8:	ldr	r0, [pc, #184]	; 16d88 <argp_parse@@Base+0x32d4>
   16ccc:	bl	11988 <__assert_fail@plt>
   16cd0:	ldr	r2, [r4, #16]
   16cd4:	cmp	r2, #0
   16cd8:	bne	168b4 <argp_parse@@Base+0x2e00>
   16cdc:	ldr	r2, [r4, #20]
   16ce0:	cmp	r2, #0
   16ce4:	bne	168b4 <argp_parse@@Base+0x2e00>
   16ce8:	add	sl, sl, #28
   16cec:	mov	r2, r5
   16cf0:	b	167c8 <argp_parse@@Base+0x2d14>
   16cf4:	ldr	r0, [r4, #16]
   16cf8:	cmp	r0, #0
   16cfc:	beq	16d20 <argp_parse@@Base+0x326c>
   16d00:	str	r3, [sl, #-24]	; 0xffffffe8
   16d04:	ldr	r5, [r4, #20]
   16d08:	str	r4, [sl, #-28]	; 0xffffffe4
   16d0c:	cmp	r5, #0
   16d10:	str	fp, [sl, #-20]	; 0xffffffec
   16d14:	bne	16808 <argp_parse@@Base+0x2d54>
   16d18:	add	r5, r2, #1
   16d1c:	b	16808 <argp_parse@@Base+0x2d54>
   16d20:	ldr	r5, [r4, #20]
   16d24:	cmp	r5, #0
   16d28:	beq	168c8 <argp_parse@@Base+0x2e14>
   16d2c:	str	r4, [sl, #-28]	; 0xffffffe4
   16d30:	str	r3, [sl, #-24]	; 0xffffffe8
   16d34:	str	fp, [sl, #-20]	; 0xffffffec
   16d38:	b	16808 <argp_parse@@Base+0x2d54>
   16d3c:	ldr	r3, [pc, #52]	; 16d78 <argp_parse@@Base+0x32c4>
   16d40:	mov	r2, #476	; 0x1dc
   16d44:	ldr	r1, [pc, #36]	; 16d70 <argp_parse@@Base+0x32bc>
   16d48:	ldr	r0, [pc, #60]	; 16d8c <argp_parse@@Base+0x32d8>
   16d4c:	bl	11988 <__assert_fail@plt>
   16d50:	ldr	r3, [pc, #32]	; 16d78 <argp_parse@@Base+0x32c4>
   16d54:	ldr	r2, [pc, #52]	; 16d90 <argp_parse@@Base+0x32dc>
   16d58:	ldr	r1, [pc, #16]	; 16d70 <argp_parse@@Base+0x32bc>
   16d5c:	ldr	r0, [pc, #48]	; 16d94 <argp_parse@@Base+0x32e0>
   16d60:	bl	11988 <__assert_fail@plt>
   16d64:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   16d68:	andeq	sp, r1, ip, lsl #15
   16d6c:	andeq	r0, r0, sl, asr #7
   16d70:	andeq	sp, r1, r8, lsr #16
   16d74:	andeq	sp, r1, r8, lsr #17
   16d78:	andeq	sp, r1, r0, lsl #15
   16d7c:	andeq	r0, r0, r2, asr #3
   16d80:	andeq	sp, r1, r4, lsr r8
   16d84:	andeq	sp, r1, r8, lsr r8
   16d88:	andeq	sp, r1, r4, asr #17
   16d8c:	andeq	sp, r1, ip, ror #16
   16d90:	ldrdeq	r0, [r0], -sl
   16d94:	andeq	sp, r1, r8, asr #16
   16d98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16d9c:	mov	r7, r2
   16da0:	sub	sp, sp, #28
   16da4:	mov	r4, r3
   16da8:	ldr	r3, [r7]
   16dac:	ldr	r2, [r0, #20]
   16db0:	str	r3, [sp, #20]
   16db4:	ldr	r3, [r0, #16]
   16db8:	cmp	r2, #0
   16dbc:	str	r3, [sp, #12]
   16dc0:	ldr	r3, [r0, #8]
   16dc4:	mov	r8, r1
   16dc8:	mov	r9, r3
   16dcc:	str	r3, [sp, #16]
   16dd0:	ldr	r5, [sp, #64]	; 0x40
   16dd4:	beq	1702c <argp_parse@@Base+0x3578>
   16dd8:	mov	r6, r0
   16ddc:	bl	148d4 <argp_parse@@Base+0xe20>
   16de0:	ldr	r3, [r6, #20]
   16de4:	mov	r1, r9
   16de8:	mov	r2, r0
   16dec:	ldr	r0, [pc, #640]	; 17074 <argp_parse@@Base+0x35c0>
   16df0:	blx	r3
   16df4:	mov	r3, r0
   16df8:	str	r0, [sp, #8]
   16dfc:	cmp	r3, #0
   16e00:	beq	16fcc <argp_parse@@Base+0x3518>
   16e04:	mov	r1, #10
   16e08:	mov	r0, r3
   16e0c:	bl	115d4 <strchrnul@plt>
   16e10:	ldrb	sl, [r0]
   16e14:	mov	r6, r0
   16e18:	cmp	sl, #0
   16e1c:	bne	16f64 <argp_parse@@Base+0x34b0>
   16e20:	ldr	fp, [sp, #8]
   16e24:	ldr	r3, [r5, #28]
   16e28:	ldr	r1, [r5, #24]
   16e2c:	ldr	r0, [r5, #16]
   16e30:	sub	r1, r3, r1
   16e34:	cmp	r1, r0
   16e38:	add	r9, r6, #1
   16e3c:	mov	r1, r3
   16e40:	sub	r9, r9, fp
   16e44:	bhi	16ffc <argp_parse@@Base+0x3548>
   16e48:	ldr	r0, [r5, #20]
   16e4c:	ldr	ip, [r5, #8]
   16e50:	cmp	r0, #0
   16e54:	addge	r9, r9, r0
   16e58:	cmp	r9, ip
   16e5c:	bcc	16fac <argp_parse@@Base+0x34f8>
   16e60:	ldr	r1, [r5, #32]
   16e64:	cmp	r1, r3
   16e68:	bls	17034 <argp_parse@@Base+0x3580>
   16e6c:	add	r0, r3, #1
   16e70:	mov	r1, #10
   16e74:	str	r0, [r5, #28]
   16e78:	strb	r1, [r3]
   16e7c:	ldr	r0, [r5, #28]
   16e80:	sub	r9, r6, fp
   16e84:	ldr	r1, [r5, #32]
   16e88:	add	r3, r0, r9
   16e8c:	cmp	r1, r3
   16e90:	bcs	16eac <argp_parse@@Base+0x33f8>
   16e94:	mov	r1, r9
   16e98:	mov	r0, r5
   16e9c:	bl	1c418 <argp_error@@Base+0x2008>
   16ea0:	cmp	r0, #0
   16ea4:	beq	16ec4 <argp_parse@@Base+0x3410>
   16ea8:	ldr	r0, [r5, #28]
   16eac:	mov	r2, r9
   16eb0:	mov	r1, fp
   16eb4:	bl	11610 <memcpy@plt>
   16eb8:	ldr	r3, [r5, #28]
   16ebc:	add	r9, r3, r9
   16ec0:	str	r9, [r5, #28]
   16ec4:	ldr	r3, [sp, #16]
   16ec8:	ldr	r2, [sp, #8]
   16ecc:	cmp	r3, r2
   16ed0:	beq	16edc <argp_parse@@Base+0x3428>
   16ed4:	mov	r0, r2
   16ed8:	bl	14a30 <argp_parse@@Base+0xf7c>
   16edc:	ldr	r3, [sp, #12]
   16ee0:	cmp	r3, #0
   16ee4:	beq	16f28 <argp_parse@@Base+0x3474>
   16ee8:	ldr	r2, [r3]
   16eec:	cmp	r2, #0
   16ef0:	beq	16f28 <argp_parse@@Base+0x3474>
   16ef4:	ldr	r9, [sp, #12]
   16ef8:	mov	r3, r4
   16efc:	mov	r0, r2
   16f00:	str	r5, [sp]
   16f04:	mov	r2, r7
   16f08:	mov	r1, r8
   16f0c:	bl	16d98 <argp_parse@@Base+0x32e4>
   16f10:	ldr	r2, [r9, #16]!
   16f14:	cmp	r2, #0
   16f18:	clz	r3, r0
   16f1c:	lsr	r3, r3, #5
   16f20:	bne	16efc <argp_parse@@Base+0x3448>
   16f24:	mov	r4, r3
   16f28:	cmp	r4, #0
   16f2c:	moveq	sl, #0
   16f30:	andne	sl, sl, #1
   16f34:	cmp	sl, #0
   16f38:	beq	16fec <argp_parse@@Base+0x3538>
   16f3c:	ldrb	r0, [r6]
   16f40:	cmp	r0, #0
   16f44:	bne	17010 <argp_parse@@Base+0x355c>
   16f48:	ldr	r3, [sp, #20]
   16f4c:	ldrb	r4, [r3]
   16f50:	cmp	r4, #0
   16f54:	moveq	r0, r4
   16f58:	strbne	r0, [r3]
   16f5c:	add	sp, sp, #28
   16f60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16f64:	ldr	r3, [sp, #20]
   16f68:	ldrb	r9, [r3]
   16f6c:	cmp	r9, #0
   16f70:	beq	1706c <argp_parse@@Base+0x35b8>
   16f74:	mov	sl, #0
   16f78:	add	fp, r0, #1
   16f7c:	add	sl, sl, #1
   16f80:	mov	r0, fp
   16f84:	mov	r1, #10
   16f88:	bl	115d4 <strchrnul@plt>
   16f8c:	cmp	sl, r9
   16f90:	bne	16f78 <argp_parse@@Base+0x34c4>
   16f94:	mov	r6, r0
   16f98:	ldr	r3, [r7]
   16f9c:	mov	sl, #1
   16fa0:	add	r3, r3, sl
   16fa4:	str	r3, [r7]
   16fa8:	b	16e24 <argp_parse@@Base+0x3370>
   16fac:	ldr	r0, [r5, #32]
   16fb0:	cmp	r0, r3
   16fb4:	bls	17050 <argp_parse@@Base+0x359c>
   16fb8:	add	r0, r1, #1
   16fbc:	mov	r3, #32
   16fc0:	str	r0, [r5, #28]
   16fc4:	strb	r3, [r1]
   16fc8:	b	16e7c <argp_parse@@Base+0x33c8>
   16fcc:	ldr	r3, [sp, #12]
   16fd0:	cmp	r3, #0
   16fd4:	beq	16fec <argp_parse@@Base+0x3538>
   16fd8:	ldr	r2, [r3]
   16fdc:	cmp	r2, #0
   16fe0:	ldrne	r6, [sp, #8]
   16fe4:	movne	sl, r6
   16fe8:	bne	16ef4 <argp_parse@@Base+0x3440>
   16fec:	clz	r0, r4
   16ff0:	lsr	r0, r0, #5
   16ff4:	add	sp, sp, #28
   16ff8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ffc:	mov	r0, r5
   17000:	bl	1be6c <argp_error@@Base+0x1a5c>
   17004:	ldr	r3, [r5, #28]
   17008:	mov	r1, r3
   1700c:	b	16e48 <argp_parse@@Base+0x3394>
   17010:	ldr	r2, [sp, #20]
   17014:	mov	r0, #1
   17018:	ldrb	r3, [r2]
   1701c:	add	r3, r3, r0
   17020:	strb	r3, [r2]
   17024:	add	sp, sp, #28
   17028:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1702c:	str	r3, [sp, #8]
   17030:	b	16dfc <argp_parse@@Base+0x3348>
   17034:	mov	r1, #1
   17038:	mov	r0, r5
   1703c:	bl	1c418 <argp_error@@Base+0x2008>
   17040:	cmp	r0, #0
   17044:	beq	16e7c <argp_parse@@Base+0x33c8>
   17048:	ldr	r3, [r5, #28]
   1704c:	b	16e6c <argp_parse@@Base+0x33b8>
   17050:	mov	r1, #1
   17054:	mov	r0, r5
   17058:	bl	1c418 <argp_error@@Base+0x2008>
   1705c:	cmp	r0, #0
   17060:	beq	16e7c <argp_parse@@Base+0x33c8>
   17064:	ldr	r1, [r5, #28]
   17068:	b	16fb8 <argp_parse@@Base+0x3504>
   1706c:	ldr	fp, [sp, #8]
   17070:	b	16f98 <argp_parse@@Base+0x34e4>
   17074:	andeq	r0, r0, #6
   17078:	subs	r3, r0, #0
   1707c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17080:	moveq	r0, r3
   17084:	sub	sp, sp, #52	; 0x34
   17088:	mov	r4, r1
   1708c:	beq	170a0 <argp_parse@@Base+0x35ec>
   17090:	mov	r1, #10
   17094:	bl	117c0 <strchr@plt>
   17098:	adds	r0, r0, #0
   1709c:	movne	r0, #1
   170a0:	cmp	r4, #0
   170a4:	str	r0, [sp, #20]
   170a8:	beq	173b8 <argp_parse@@Base+0x3904>
   170ac:	ldr	r3, [r4]
   170b0:	cmp	r3, #0
   170b4:	beq	173b8 <argp_parse@@Base+0x3904>
   170b8:	mov	r9, #0
   170bc:	mov	r8, #10
   170c0:	str	r4, [sp, #24]
   170c4:	ldr	r0, [r3, #8]
   170c8:	ldr	r4, [r3, #16]
   170cc:	cmp	r0, #0
   170d0:	moveq	r0, r9
   170d4:	beq	170e8 <argp_parse@@Base+0x3634>
   170d8:	mov	r1, r8
   170dc:	bl	117c0 <strchr@plt>
   170e0:	adds	r0, r0, #0
   170e4:	movne	r0, #1
   170e8:	cmp	r4, #0
   170ec:	str	r0, [sp]
   170f0:	beq	17394 <argp_parse@@Base+0x38e0>
   170f4:	ldr	r3, [r4]
   170f8:	cmp	r3, #0
   170fc:	beq	17394 <argp_parse@@Base+0x38e0>
   17100:	str	r4, [sp, #28]
   17104:	ldr	r0, [r3, #8]
   17108:	ldr	r4, [r3, #16]
   1710c:	cmp	r0, #0
   17110:	moveq	r0, r9
   17114:	beq	17128 <argp_parse@@Base+0x3674>
   17118:	mov	r1, r8
   1711c:	bl	117c0 <strchr@plt>
   17120:	adds	r0, r0, #0
   17124:	movne	r0, #1
   17128:	cmp	r4, #0
   1712c:	str	r0, [sp, #4]
   17130:	beq	17374 <argp_parse@@Base+0x38c0>
   17134:	ldr	r3, [r4]
   17138:	cmp	r3, #0
   1713c:	beq	17374 <argp_parse@@Base+0x38c0>
   17140:	str	r4, [sp, #32]
   17144:	ldr	r0, [r3, #8]
   17148:	ldr	r4, [r3, #16]
   1714c:	cmp	r0, #0
   17150:	moveq	r0, r9
   17154:	beq	17168 <argp_parse@@Base+0x36b4>
   17158:	mov	r1, r8
   1715c:	bl	117c0 <strchr@plt>
   17160:	adds	r0, r0, #0
   17164:	movne	r0, #1
   17168:	cmp	r4, #0
   1716c:	str	r0, [sp, #8]
   17170:	beq	17354 <argp_parse@@Base+0x38a0>
   17174:	ldr	r3, [r4]
   17178:	cmp	r3, #0
   1717c:	beq	17354 <argp_parse@@Base+0x38a0>
   17180:	str	r4, [sp, #36]	; 0x24
   17184:	ldr	r0, [r3, #8]
   17188:	ldr	r4, [r3, #16]
   1718c:	cmp	r0, #0
   17190:	moveq	r0, r9
   17194:	beq	171a8 <argp_parse@@Base+0x36f4>
   17198:	mov	r1, r8
   1719c:	bl	117c0 <strchr@plt>
   171a0:	adds	r0, r0, #0
   171a4:	movne	r0, #1
   171a8:	cmp	r4, #0
   171ac:	str	r0, [sp, #12]
   171b0:	beq	17330 <argp_parse@@Base+0x387c>
   171b4:	ldr	r3, [r4]
   171b8:	cmp	r3, #0
   171bc:	beq	17330 <argp_parse@@Base+0x387c>
   171c0:	str	r4, [sp, #40]	; 0x28
   171c4:	ldr	r0, [r3, #8]
   171c8:	ldr	fp, [r3, #16]
   171cc:	cmp	r0, #0
   171d0:	moveq	r0, r9
   171d4:	beq	171e8 <argp_parse@@Base+0x3734>
   171d8:	mov	r1, r8
   171dc:	bl	117c0 <strchr@plt>
   171e0:	adds	r0, r0, #0
   171e4:	movne	r0, #1
   171e8:	cmp	fp, #0
   171ec:	str	r0, [sp, #16]
   171f0:	beq	1730c <argp_parse@@Base+0x3858>
   171f4:	ldr	r3, [fp]
   171f8:	cmp	r3, #0
   171fc:	beq	1730c <argp_parse@@Base+0x3858>
   17200:	str	fp, [sp, #44]	; 0x2c
   17204:	ldr	r0, [r3, #8]
   17208:	ldr	r7, [r3, #16]
   1720c:	cmp	r0, #0
   17210:	moveq	r0, r9
   17214:	beq	17228 <argp_parse@@Base+0x3774>
   17218:	mov	r1, r8
   1721c:	bl	117c0 <strchr@plt>
   17220:	adds	r0, r0, #0
   17224:	movne	r0, #1
   17228:	cmp	r7, #0
   1722c:	mov	r6, r0
   17230:	beq	172ec <argp_parse@@Base+0x3838>
   17234:	ldr	r3, [r7]
   17238:	cmp	r3, #0
   1723c:	beq	172ec <argp_parse@@Base+0x3838>
   17240:	ldr	r0, [r3, #8]
   17244:	ldr	r5, [r3, #16]
   17248:	cmp	r0, #0
   1724c:	moveq	sl, r9
   17250:	beq	17264 <argp_parse@@Base+0x37b0>
   17254:	mov	r1, r8
   17258:	bl	117c0 <strchr@plt>
   1725c:	adds	sl, r0, #0
   17260:	movne	sl, #1
   17264:	cmp	r5, #0
   17268:	beq	172dc <argp_parse@@Base+0x3828>
   1726c:	ldr	r3, [r5]
   17270:	cmp	r3, #0
   17274:	beq	172dc <argp_parse@@Base+0x3828>
   17278:	ldr	r0, [r3, #8]
   1727c:	ldr	r4, [r3, #16]
   17280:	cmp	r0, #0
   17284:	moveq	fp, r9
   17288:	beq	1729c <argp_parse@@Base+0x37e8>
   1728c:	mov	r1, r8
   17290:	bl	117c0 <strchr@plt>
   17294:	adds	fp, r0, #0
   17298:	movne	fp, #1
   1729c:	cmp	r4, #0
   172a0:	beq	172cc <argp_parse@@Base+0x3818>
   172a4:	ldr	r3, [r4]
   172a8:	cmp	r3, #0
   172ac:	beq	172cc <argp_parse@@Base+0x3818>
   172b0:	ldr	r1, [r3, #16]
   172b4:	ldr	r0, [r3, #8]
   172b8:	bl	17078 <argp_parse@@Base+0x35c4>
   172bc:	ldr	r3, [r4, #16]!
   172c0:	cmp	r3, #0
   172c4:	add	fp, fp, r0
   172c8:	bne	172b0 <argp_parse@@Base+0x37fc>
   172cc:	ldr	r3, [r5, #16]!
   172d0:	add	sl, sl, fp
   172d4:	cmp	r3, #0
   172d8:	bne	17278 <argp_parse@@Base+0x37c4>
   172dc:	ldr	r3, [r7, #16]!
   172e0:	add	r6, r6, sl
   172e4:	cmp	r3, #0
   172e8:	bne	17240 <argp_parse@@Base+0x378c>
   172ec:	ldr	r2, [sp, #44]	; 0x2c
   172f0:	ldr	r3, [r2, #16]!
   172f4:	str	r2, [sp, #44]	; 0x2c
   172f8:	ldr	r2, [sp, #16]
   172fc:	cmp	r3, #0
   17300:	add	r2, r2, r6
   17304:	str	r2, [sp, #16]
   17308:	bne	17204 <argp_parse@@Base+0x3750>
   1730c:	ldr	r2, [sp, #40]	; 0x28
   17310:	ldr	r1, [sp, #16]
   17314:	ldr	r3, [r2, #16]!
   17318:	str	r2, [sp, #40]	; 0x28
   1731c:	ldr	r2, [sp, #12]
   17320:	cmp	r3, #0
   17324:	add	r2, r2, r1
   17328:	str	r2, [sp, #12]
   1732c:	bne	171c4 <argp_parse@@Base+0x3710>
   17330:	ldr	r2, [sp, #36]	; 0x24
   17334:	ldr	r1, [sp, #12]
   17338:	ldr	r3, [r2, #16]!
   1733c:	str	r2, [sp, #36]	; 0x24
   17340:	ldr	r2, [sp, #8]
   17344:	cmp	r3, #0
   17348:	add	r2, r2, r1
   1734c:	str	r2, [sp, #8]
   17350:	bne	17184 <argp_parse@@Base+0x36d0>
   17354:	ldr	r2, [sp, #32]
   17358:	ldr	r3, [r2, #16]!
   1735c:	str	r2, [sp, #32]
   17360:	ldmib	sp, {r1, r2}
   17364:	cmp	r3, #0
   17368:	add	r2, r2, r1
   1736c:	str	r2, [sp, #4]
   17370:	bne	17144 <argp_parse@@Base+0x3690>
   17374:	ldr	r2, [sp, #28]
   17378:	ldr	r3, [r2, #16]!
   1737c:	str	r2, [sp, #28]
   17380:	ldm	sp, {r1, r2}
   17384:	cmp	r3, #0
   17388:	add	r2, r2, r1
   1738c:	str	r2, [sp]
   17390:	bne	17104 <argp_parse@@Base+0x3650>
   17394:	ldr	r2, [sp, #24]
   17398:	ldr	r1, [sp]
   1739c:	ldr	r3, [r2, #16]!
   173a0:	str	r2, [sp, #24]
   173a4:	ldr	r2, [sp, #20]
   173a8:	cmp	r3, #0
   173ac:	add	r2, r2, r1
   173b0:	str	r2, [sp, #20]
   173b4:	bne	170c4 <argp_parse@@Base+0x3610>
   173b8:	ldr	r0, [sp, #20]
   173bc:	add	sp, sp, #52	; 0x34
   173c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   173c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   173c8:	add	fp, sp, #32
   173cc:	sub	sp, sp, #36	; 0x24
   173d0:	ldr	r3, [r0, #4]
   173d4:	cmp	r3, #0
   173d8:	str	r3, [fp, #-40]	; 0xffffffd8
   173dc:	bne	173e8 <argp_parse@@Base+0x3934>
   173e0:	sub	sp, fp, #32
   173e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   173e8:	mov	r4, r0
   173ec:	str	r0, [fp, #-60]	; 0xffffffc4
   173f0:	ldr	r0, [r0, #8]
   173f4:	str	r1, [fp, #-44]	; 0xffffffd4
   173f8:	bl	117b4 <strlen@plt>
   173fc:	ldr	r3, [r4]
   17400:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17404:	add	r3, r3, #28
   17408:	mov	r9, r3
   1740c:	str	r3, [fp, #-64]	; 0xffffffc0
   17410:	mov	sl, r9
   17414:	str	r2, [fp, #-48]	; 0xffffffd0
   17418:	add	r3, r0, #15
   1741c:	bic	r3, r3, #7
   17420:	sub	sp, sp, r3
   17424:	str	sp, [fp, #-56]	; 0xffffffc8
   17428:	str	sp, [fp, #-52]	; 0xffffffcc
   1742c:	ldr	r5, [sl, #-24]	; 0xffffffe8
   17430:	ldr	r4, [sl, #-28]	; 0xffffffe4
   17434:	cmp	r5, #0
   17438:	ldr	r9, [sl, #-20]	; 0xffffffec
   1743c:	beq	174b4 <argp_parse@@Base+0x3a00>
   17440:	mov	r8, r4
   17444:	b	17454 <argp_parse@@Base+0x39a0>
   17448:	subs	r5, r5, #1
   1744c:	add	r4, r4, #24
   17450:	beq	174b4 <argp_parse@@Base+0x3a00>
   17454:	ldr	r6, [r4, #12]
   17458:	tst	r6, #8
   1745c:	bne	17448 <argp_parse@@Base+0x3994>
   17460:	ldr	r7, [r4, #4]
   17464:	sub	r3, r7, #1
   17468:	cmp	r3, #254	; 0xfe
   1746c:	bhi	17448 <argp_parse@@Base+0x3994>
   17470:	bl	11784 <__ctype_b_loc@plt>
   17474:	lsl	r3, r7, #1
   17478:	ldr	r2, [r0]
   1747c:	ldrh	r3, [r2, r3]
   17480:	tst	r3, #16384	; 0x4000
   17484:	beq	17448 <argp_parse@@Base+0x3994>
   17488:	ldrb	r3, [r9]
   1748c:	cmp	r7, r3
   17490:	bne	17448 <argp_parse@@Base+0x3994>
   17494:	tst	r6, #4
   17498:	moveq	r8, r4
   1749c:	tst	r6, #2
   174a0:	beq	17628 <argp_parse@@Base+0x3b74>
   174a4:	subs	r5, r5, #1
   174a8:	add	r9, r9, #1
   174ac:	add	r4, r4, #24
   174b0:	bne	17454 <argp_parse@@Base+0x39a0>
   174b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   174b8:	add	sl, sl, #28
   174bc:	subs	r3, r3, #1
   174c0:	str	r3, [fp, #-48]	; 0xffffffd0
   174c4:	bne	1742c <argp_parse@@Base+0x3978>
   174c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   174cc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   174d0:	cmp	r3, r2
   174d4:	bcc	177dc <argp_parse@@Base+0x3d28>
   174d8:	ldr	r7, [fp, #-64]	; 0xffffffc0
   174dc:	ldr	r5, [r7, #-24]	; 0xffffffe8
   174e0:	ldr	r4, [r7, #-28]	; 0xffffffe4
   174e4:	cmp	r5, #0
   174e8:	ldr	r6, [r7, #-20]	; 0xffffffec
   174ec:	movne	r8, r4
   174f0:	bne	17504 <argp_parse@@Base+0x3a50>
   174f4:	b	17564 <argp_parse@@Base+0x3ab0>
   174f8:	subs	r5, r5, #1
   174fc:	add	r4, r4, #24
   17500:	beq	17564 <argp_parse@@Base+0x3ab0>
   17504:	ldr	r9, [r4, #12]
   17508:	tst	r9, #8
   1750c:	bne	174f8 <argp_parse@@Base+0x3a44>
   17510:	ldr	sl, [r4, #4]
   17514:	sub	r3, sl, #1
   17518:	cmp	r3, #254	; 0xfe
   1751c:	bhi	174f8 <argp_parse@@Base+0x3a44>
   17520:	bl	11784 <__ctype_b_loc@plt>
   17524:	lsl	r3, sl, #1
   17528:	ldr	r1, [r0]
   1752c:	ldrh	r3, [r1, r3]
   17530:	tst	r3, #16384	; 0x4000
   17534:	beq	174f8 <argp_parse@@Base+0x3a44>
   17538:	ldrb	r3, [r6]
   1753c:	cmp	sl, r3
   17540:	bne	174f8 <argp_parse@@Base+0x3a44>
   17544:	tst	r9, #4
   17548:	moveq	r8, r4
   1754c:	tst	r9, #2
   17550:	beq	17660 <argp_parse@@Base+0x3bac>
   17554:	subs	r5, r5, #1
   17558:	add	r6, r6, #1
   1755c:	add	r4, r4, #24
   17560:	bne	17504 <argp_parse@@Base+0x3a50>
   17564:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17568:	add	r7, r7, #28
   1756c:	subs	r3, r3, #1
   17570:	str	r3, [fp, #-40]	; 0xffffffd8
   17574:	bne	174dc <argp_parse@@Base+0x3a28>
   17578:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1757c:	ldm	r3, {r7, r8}
   17580:	cmp	r8, #0
   17584:	beq	173e0 <argp_parse@@Base+0x392c>
   17588:	ldr	sl, [pc, #652]	; 1781c <argp_parse@@Base+0x3d68>
   1758c:	ldr	r9, [pc, #652]	; 17820 <argp_parse@@Base+0x3d6c>
   17590:	add	r7, r7, #28
   17594:	ldr	r5, [r7, #-24]	; 0xffffffe8
   17598:	ldr	r4, [r7, #-28]	; 0xffffffe4
   1759c:	cmp	r5, #0
   175a0:	movne	r6, r4
   175a4:	bne	175b8 <argp_parse@@Base+0x3b04>
   175a8:	b	17614 <argp_parse@@Base+0x3b60>
   175ac:	subs	r5, r5, #1
   175b0:	add	r4, r4, #24
   175b4:	beq	17614 <argp_parse@@Base+0x3b60>
   175b8:	ldr	r2, [r4]
   175bc:	cmp	r2, #0
   175c0:	beq	175ac <argp_parse@@Base+0x3af8>
   175c4:	ldr	r1, [r4, #12]
   175c8:	tst	r1, #4
   175cc:	moveq	r6, r4
   175d0:	tst	r1, #2
   175d4:	bne	175ac <argp_parse@@Base+0x3af8>
   175d8:	ldr	r3, [r4, #8]
   175dc:	ldr	r0, [r6, #12]
   175e0:	cmp	r3, #0
   175e4:	orr	r1, r1, r0
   175e8:	beq	1770c <argp_parse@@Base+0x3c58>
   175ec:	tst	r1, #16
   175f0:	bne	175ac <argp_parse@@Base+0x3af8>
   175f4:	tst	r1, #1
   175f8:	movne	r1, r9
   175fc:	moveq	r1, sl
   17600:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17604:	bl	1c518 <argp_error@@Base+0x2108>
   17608:	subs	r5, r5, #1
   1760c:	add	r4, r4, #24
   17610:	bne	175b8 <argp_parse@@Base+0x3b04>
   17614:	subs	r8, r8, #1
   17618:	add	r7, r7, #28
   1761c:	bne	17594 <argp_parse@@Base+0x3ae0>
   17620:	sub	sp, fp, #32
   17624:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17628:	ldr	r3, [r4, #8]
   1762c:	cmp	r3, #0
   17630:	bne	174a4 <argp_parse@@Base+0x39f0>
   17634:	ldr	r3, [r8, #8]
   17638:	cmp	r3, #0
   1763c:	bne	174a4 <argp_parse@@Base+0x39f0>
   17640:	ldr	r3, [r8, #12]
   17644:	orr	r6, r6, r3
   17648:	tst	r6, #16
   1764c:	ldreq	r3, [fp, #-52]	; 0xffffffcc
   17650:	strbeq	r7, [r3]
   17654:	addeq	r3, r3, #1
   17658:	streq	r3, [fp, #-52]	; 0xffffffcc
   1765c:	b	174a4 <argp_parse@@Base+0x39f0>
   17660:	ldr	r3, [r4, #8]
   17664:	ldr	r1, [r8, #12]
   17668:	cmp	r3, #0
   1766c:	orr	r9, r9, r1
   17670:	beq	17768 <argp_parse@@Base+0x3cb4>
   17674:	tst	r9, #16
   17678:	bne	17554 <argp_parse@@Base+0x3aa0>
   1767c:	tst	r9, #1
   17680:	bne	17730 <argp_parse@@Base+0x3c7c>
   17684:	mov	r0, r3
   17688:	str	r3, [fp, #-48]	; 0xffffffd0
   1768c:	bl	117b4 <strlen@plt>
   17690:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17694:	ldr	r1, [r3, #28]
   17698:	ldr	r2, [r3, #24]
   1769c:	sub	r2, r1, r2
   176a0:	mov	r9, r0
   176a4:	ldr	r0, [r3, #16]
   176a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   176ac:	cmp	r2, r0
   176b0:	bhi	177c4 <argp_parse@@Base+0x3d10>
   176b4:	ldr	ip, [fp, #-44]	; 0xffffffd4
   176b8:	ldr	r2, [ip, #20]
   176bc:	ldr	r0, [ip, #8]
   176c0:	bic	r2, r2, r2, asr #31
   176c4:	add	r2, r2, #6
   176c8:	add	r2, r2, r9
   176cc:	cmp	r2, r0
   176d0:	bcc	17744 <argp_parse@@Base+0x3c90>
   176d4:	ldr	r2, [ip, #32]
   176d8:	mov	r0, ip
   176dc:	cmp	r2, r1
   176e0:	bls	17778 <argp_parse@@Base+0x3cc4>
   176e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   176e8:	add	r2, r1, #1
   176ec:	str	r2, [r0, #28]
   176f0:	mov	r2, #10
   176f4:	strb	r2, [r1]
   176f8:	ldr	r2, [r4, #4]
   176fc:	ldr	r1, [pc, #288]	; 17824 <argp_parse@@Base+0x3d70>
   17700:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17704:	bl	1c518 <argp_error@@Base+0x2108>
   17708:	b	17554 <argp_parse@@Base+0x3aa0>
   1770c:	tst	r1, #16
   17710:	bne	175ac <argp_parse@@Base+0x3af8>
   17714:	ldr	r3, [r6, #8]
   17718:	cmp	r3, #0
   1771c:	bne	175f4 <argp_parse@@Base+0x3b40>
   17720:	ldr	r1, [pc, #256]	; 17828 <argp_parse@@Base+0x3d74>
   17724:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17728:	bl	1c518 <argp_error@@Base+0x2108>
   1772c:	b	175ac <argp_parse@@Base+0x3af8>
   17730:	mov	r2, sl
   17734:	ldr	r1, [pc, #240]	; 1782c <argp_parse@@Base+0x3d78>
   17738:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1773c:	bl	1c518 <argp_error@@Base+0x2108>
   17740:	b	17554 <argp_parse@@Base+0x3aa0>
   17744:	ldr	r2, [ip, #32]
   17748:	cmp	r2, r1
   1774c:	bls	1779c <argp_parse@@Base+0x3ce8>
   17750:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17754:	add	r2, r1, #1
   17758:	str	r2, [r0, #28]
   1775c:	mov	r2, #32
   17760:	strb	r2, [r1]
   17764:	b	176f8 <argp_parse@@Base+0x3c44>
   17768:	ldr	r3, [r8, #8]
   1776c:	cmp	r3, #0
   17770:	beq	17554 <argp_parse@@Base+0x3aa0>
   17774:	b	17674 <argp_parse@@Base+0x3bc0>
   17778:	mov	r1, #1
   1777c:	str	r3, [fp, #-48]	; 0xffffffd0
   17780:	mov	r9, ip
   17784:	bl	1c418 <argp_error@@Base+0x2008>
   17788:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1778c:	cmp	r0, #0
   17790:	beq	176f8 <argp_parse@@Base+0x3c44>
   17794:	ldr	r1, [r9, #28]
   17798:	b	176e4 <argp_parse@@Base+0x3c30>
   1779c:	ldr	r9, [fp, #-44]	; 0xffffffd4
   177a0:	mov	r1, #1
   177a4:	mov	r0, r9
   177a8:	str	r3, [fp, #-48]	; 0xffffffd0
   177ac:	bl	1c418 <argp_error@@Base+0x2008>
   177b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   177b4:	cmp	r0, #0
   177b8:	beq	176f8 <argp_parse@@Base+0x3c44>
   177bc:	ldr	r1, [r9, #28]
   177c0:	b	17750 <argp_parse@@Base+0x3c9c>
   177c4:	ldr	sl, [fp, #-44]	; 0xffffffd4
   177c8:	mov	r0, sl
   177cc:	bl	1be6c <argp_error@@Base+0x1a5c>
   177d0:	ldr	r1, [sl, #28]
   177d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   177d8:	b	176b4 <argp_parse@@Base+0x3c00>
   177dc:	mov	r2, r3
   177e0:	ldrb	ip, [fp, #-48]	; 0xffffffd0
   177e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   177e8:	ldr	r1, [pc, #64]	; 17830 <argp_parse@@Base+0x3d7c>
   177ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   177f0:	strb	ip, [r3]
   177f4:	bl	1c518 <argp_error@@Base+0x2108>
   177f8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   177fc:	ldr	r3, [r2, #4]
   17800:	cmp	r3, #0
   17804:	str	r3, [fp, #-40]	; 0xffffffd8
   17808:	beq	173e0 <argp_parse@@Base+0x392c>
   1780c:	ldr	r3, [r2]
   17810:	add	r3, r3, #28
   17814:	str	r3, [fp, #-64]	; 0xffffffc0
   17818:	b	174d8 <argp_parse@@Base+0x3a24>
   1781c:	andeq	sp, r1, r8, lsr #18
   17820:	andeq	sp, r1, r8, lsl r9
   17824:	andeq	sp, r1, ip, lsl #18
   17828:	andeq	sp, r1, r4, lsr r9
   1782c:	andeq	sp, r1, r0, lsl #18
   17830:	strdeq	sp, [r1], -r8
   17834:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17838:	subs	r4, r1, #0
   1783c:	sub	sp, sp, #12
   17840:	mov	r8, r0
   17844:	mov	r7, r2
   17848:	beq	17a1c <argp_parse@@Base+0x3f68>
   1784c:	ldr	r3, [r4, #20]
   17850:	cmp	r3, #0
   17854:	beq	17a1c <argp_parse@@Base+0x3f68>
   17858:	ldr	r1, [r2, #16]
   1785c:	mov	r0, r4
   17860:	bl	148d4 <argp_parse@@Base+0xe20>
   17864:	ldr	r3, [r4, #20]
   17868:	mov	r1, r8
   1786c:	mov	r2, r0
   17870:	ldr	r0, [pc, #628]	; 17aec <argp_parse@@Base+0x4038>
   17874:	blx	r3
   17878:	mov	r6, r0
   1787c:	cmp	r6, #0
   17880:	beq	179e8 <argp_parse@@Base+0x3f34>
   17884:	ldrb	r3, [r6]
   17888:	cmp	r3, #0
   1788c:	beq	179dc <argp_parse@@Base+0x3f28>
   17890:	ldr	r3, [r7, #8]
   17894:	ldr	r3, [r3]
   17898:	cmp	r3, #0
   1789c:	beq	178c4 <argp_parse@@Base+0x3e10>
   178a0:	ldr	r4, [r7, #4]
   178a4:	ldr	r3, [r4, #28]
   178a8:	ldr	r2, [r4, #32]
   178ac:	cmp	r3, r2
   178b0:	bcs	17ad0 <argp_parse@@Base+0x401c>
   178b4:	add	r1, r3, #1
   178b8:	mov	r2, #10
   178bc:	str	r1, [r4, #28]
   178c0:	strb	r2, [r3]
   178c4:	ldr	r4, [r7, #4]
   178c8:	ldr	sl, [pc, #544]	; 17af0 <argp_parse@@Base+0x403c>
   178cc:	ldr	r3, [r4, #28]
   178d0:	ldr	r1, [r4, #24]
   178d4:	ldr	r2, [r4, #16]
   178d8:	sub	r3, r3, r1
   178dc:	cmp	r3, r2
   178e0:	ldr	r5, [sl, #24]
   178e4:	bhi	17aa8 <argp_parse@@Base+0x3ff4>
   178e8:	ldr	r3, [r4, #20]
   178ec:	mov	fp, #32
   178f0:	cmp	r3, #0
   178f4:	subge	r5, r5, r3
   178f8:	mov	r9, #1
   178fc:	cmp	r5, #0
   17900:	sub	r5, r5, #1
   17904:	ble	17930 <argp_parse@@Base+0x3e7c>
   17908:	ldr	r3, [r4, #28]
   1790c:	ldr	r2, [r4, #32]
   17910:	cmp	r3, r2
   17914:	bcs	17a00 <argp_parse@@Base+0x3f4c>
   17918:	add	r2, r3, #1
   1791c:	cmp	r5, #0
   17920:	str	r2, [r4, #28]
   17924:	sub	r5, r5, #1
   17928:	strb	fp, [r3]
   1792c:	bgt	17908 <argp_parse@@Base+0x3e54>
   17930:	ldr	r4, [r7, #4]
   17934:	ldr	r9, [sl, #24]
   17938:	ldr	r5, [r4, #28]
   1793c:	ldr	r3, [r4, #24]
   17940:	ldr	r2, [r4, #16]
   17944:	sub	r3, r5, r3
   17948:	cmp	r3, r2
   1794c:	strls	r9, [r4, #4]
   17950:	movls	fp, r4
   17954:	bhi	17a5c <argp_parse@@Base+0x3fa8>
   17958:	str	r9, [fp, #12]
   1795c:	mov	r0, r6
   17960:	bl	117b4 <strlen@plt>
   17964:	subs	r9, r0, #0
   17968:	beq	179a0 <argp_parse@@Base+0x3eec>
   1796c:	ldr	r2, [r4, #32]
   17970:	add	r3, r5, r9
   17974:	cmp	r2, r3
   17978:	bcc	17a2c <argp_parse@@Base+0x3f78>
   1797c:	mov	r2, r9
   17980:	mov	r0, r5
   17984:	mov	r1, r6
   17988:	bl	11610 <memcpy@plt>
   1798c:	ldr	r3, [r4, #28]
   17990:	add	r9, r3, r9
   17994:	str	r9, [r4, #28]
   17998:	ldr	r4, [r7, #4]
   1799c:	ldr	r5, [r4, #28]
   179a0:	ldr	r3, [r4, #24]
   179a4:	ldr	r2, [r4, #16]
   179a8:	sub	r3, r5, r3
   179ac:	cmp	r3, r2
   179b0:	movls	r9, r4
   179b4:	bhi	17a48 <argp_parse@@Base+0x3f94>
   179b8:	ldr	r2, [r9, #32]
   179bc:	mov	r3, #0
   179c0:	cmp	r2, r5
   179c4:	str	r3, [r4, #4]
   179c8:	bls	17ab4 <argp_parse@@Base+0x4000>
   179cc:	add	r2, r5, #1
   179d0:	mov	r3, #10
   179d4:	str	r2, [r9, #28]
   179d8:	strb	r3, [r5]
   179dc:	ldr	r3, [r7, #8]
   179e0:	mov	r2, #1
   179e4:	str	r2, [r3, #4]
   179e8:	cmp	r8, r6
   179ec:	beq	17a24 <argp_parse@@Base+0x3f70>
   179f0:	mov	r0, r6
   179f4:	add	sp, sp, #12
   179f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   179fc:	b	14a30 <argp_parse@@Base+0xf7c>
   17a00:	mov	r1, r9
   17a04:	mov	r0, r4
   17a08:	bl	1c418 <argp_error@@Base+0x2008>
   17a0c:	cmp	r0, #0
   17a10:	beq	178fc <argp_parse@@Base+0x3e48>
   17a14:	ldr	r3, [r4, #28]
   17a18:	b	17918 <argp_parse@@Base+0x3e64>
   17a1c:	mov	r6, r8
   17a20:	b	1787c <argp_parse@@Base+0x3dc8>
   17a24:	add	sp, sp, #12
   17a28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17a2c:	mov	r1, r9
   17a30:	mov	r0, r4
   17a34:	bl	1c418 <argp_error@@Base+0x2008>
   17a38:	cmp	r0, #0
   17a3c:	beq	17998 <argp_parse@@Base+0x3ee4>
   17a40:	ldr	r5, [r4, #28]
   17a44:	b	1797c <argp_parse@@Base+0x3ec8>
   17a48:	mov	r0, r4
   17a4c:	bl	1be6c <argp_error@@Base+0x1a5c>
   17a50:	ldr	r9, [r7, #4]
   17a54:	ldr	r5, [r9, #28]
   17a58:	b	179b8 <argp_parse@@Base+0x3f04>
   17a5c:	mov	r0, r4
   17a60:	str	r9, [sp, #4]
   17a64:	bl	1be6c <argp_error@@Base+0x1a5c>
   17a68:	ldr	fp, [r7, #4]
   17a6c:	ldr	r3, [sp, #4]
   17a70:	ldr	r9, [sl, #24]
   17a74:	ldr	r5, [fp, #28]
   17a78:	ldr	r2, [fp, #24]
   17a7c:	ldr	r1, [fp, #16]
   17a80:	sub	r2, r5, r2
   17a84:	cmp	r2, r1
   17a88:	str	r3, [r4, #4]
   17a8c:	movls	r4, fp
   17a90:	bls	17958 <argp_parse@@Base+0x3ea4>
   17a94:	mov	r0, fp
   17a98:	bl	1be6c <argp_error@@Base+0x1a5c>
   17a9c:	ldr	r4, [r7, #4]
   17aa0:	ldr	r5, [r4, #28]
   17aa4:	b	17958 <argp_parse@@Base+0x3ea4>
   17aa8:	mov	r0, r4
   17aac:	bl	1be6c <argp_error@@Base+0x1a5c>
   17ab0:	b	178e8 <argp_parse@@Base+0x3e34>
   17ab4:	mov	r1, #1
   17ab8:	mov	r0, r9
   17abc:	bl	1c418 <argp_error@@Base+0x2008>
   17ac0:	cmp	r0, #0
   17ac4:	beq	179dc <argp_parse@@Base+0x3f28>
   17ac8:	ldr	r5, [r9, #28]
   17acc:	b	179cc <argp_parse@@Base+0x3f18>
   17ad0:	mov	r1, #1
   17ad4:	mov	r0, r4
   17ad8:	bl	1c418 <argp_error@@Base+0x2008>
   17adc:	cmp	r0, #0
   17ae0:	beq	178c4 <argp_parse@@Base+0x3e10>
   17ae4:	ldr	r3, [r4, #28]
   17ae8:	b	178b4 <argp_parse@@Base+0x3e00>
   17aec:	andeq	r0, r0, #3
   17af0:	muleq	r2, r8, r4
   17af4:	ldr	r3, [r1, #12]
   17af8:	push	{r4, r5, r6, r7, r8, lr}
   17afc:	cmp	r3, #0
   17b00:	mov	r6, r1
   17b04:	mov	r5, r0
   17b08:	beq	17bf0 <argp_parse@@Base+0x413c>
   17b0c:	ldr	r3, [r1, #8]
   17b10:	ldr	r2, [r1]
   17b14:	ldr	r7, [r3]
   17b18:	ldr	r3, [r3, #4]
   17b1c:	ldr	r4, [r2, #16]
   17b20:	cmp	r3, #0
   17b24:	cmpne	r7, #0
   17b28:	beq	17b60 <argp_parse@@Base+0x40ac>
   17b2c:	ldr	r2, [r2, #12]
   17b30:	ldr	r3, [r7, #12]
   17b34:	cmp	r2, r3
   17b38:	beq	17b60 <argp_parse@@Base+0x40ac>
   17b3c:	ldr	r8, [r1, #4]
   17b40:	ldr	r3, [r8, #28]
   17b44:	ldr	r2, [r8, #32]
   17b48:	cmp	r3, r2
   17b4c:	bcs	17d28 <argp_parse@@Base+0x4274>
   17b50:	add	r1, r3, #1
   17b54:	mov	r2, #10
   17b58:	str	r1, [r8, #28]
   17b5c:	strb	r2, [r3]
   17b60:	cmp	r4, #0
   17b64:	beq	17ca4 <argp_parse@@Base+0x41f0>
   17b68:	ldr	r0, [r4]
   17b6c:	cmp	r0, #0
   17b70:	beq	17ca4 <argp_parse@@Base+0x41f0>
   17b74:	ldrb	r3, [r0]
   17b78:	cmp	r3, #0
   17b7c:	beq	17ca4 <argp_parse@@Base+0x41f0>
   17b80:	cmp	r7, #0
   17b84:	beq	17bb4 <argp_parse@@Base+0x4100>
   17b88:	ldr	r3, [r7, #16]
   17b8c:	cmp	r4, r3
   17b90:	beq	17ca4 <argp_parse@@Base+0x41f0>
   17b94:	cmp	r3, #0
   17b98:	beq	17bb4 <argp_parse@@Base+0x4100>
   17b9c:	ldr	r3, [r3, #12]
   17ba0:	cmp	r3, #0
   17ba4:	cmpne	r4, r3
   17ba8:	bne	17b9c <argp_parse@@Base+0x40e8>
   17bac:	cmp	r4, r3
   17bb0:	beq	17ca4 <argp_parse@@Base+0x41f0>
   17bb4:	ldr	r3, [r6, #4]
   17bb8:	ldr	r1, [r4, #16]
   17bbc:	mov	r2, r6
   17bc0:	ldr	r7, [r3, #12]
   17bc4:	bl	17834 <argp_parse@@Base+0x3d80>
   17bc8:	ldr	r8, [r6, #4]
   17bcc:	ldr	r3, [r8, #28]
   17bd0:	ldr	r1, [r8, #24]
   17bd4:	ldr	r2, [r8, #16]
   17bd8:	sub	r3, r3, r1
   17bdc:	cmp	r3, r2
   17be0:	movls	r4, r8
   17be4:	bhi	17d08 <argp_parse@@Base+0x4254>
   17be8:	str	r7, [r8, #12]
   17bec:	b	17cb8 <argp_parse@@Base+0x4204>
   17bf0:	ldr	r7, [r1, #4]
   17bf4:	ldr	r3, [r7, #28]
   17bf8:	ldr	r1, [r7, #32]
   17bfc:	add	r2, r3, #2
   17c00:	cmp	r1, r2
   17c04:	bcc	17c88 <argp_parse@@Base+0x41d4>
   17c08:	ldr	r2, [pc, #308]	; 17d44 <argp_parse@@Base+0x4290>
   17c0c:	ldrh	r2, [r2]
   17c10:	strh	r2, [r3]
   17c14:	ldr	r4, [r6, #4]
   17c18:	ldr	r3, [r7, #28]
   17c1c:	add	r3, r3, #2
   17c20:	str	r3, [r7, #28]
   17c24:	ldr	r1, [r4, #24]
   17c28:	ldr	r3, [r4, #28]
   17c2c:	ldr	r2, [r4, #16]
   17c30:	sub	r3, r3, r1
   17c34:	cmp	r3, r2
   17c38:	bhi	17cc8 <argp_parse@@Base+0x4214>
   17c3c:	ldr	r3, [r4, #20]
   17c40:	mov	r6, #32
   17c44:	cmp	r3, #0
   17c48:	subge	r5, r5, r3
   17c4c:	mov	r7, #1
   17c50:	cmp	r5, #0
   17c54:	sub	r5, r5, #1
   17c58:	ble	17c84 <argp_parse@@Base+0x41d0>
   17c5c:	ldr	r3, [r4, #28]
   17c60:	ldr	r2, [r4, #32]
   17c64:	cmp	r3, r2
   17c68:	bcs	17cd4 <argp_parse@@Base+0x4220>
   17c6c:	add	r2, r3, #1
   17c70:	cmp	r5, #0
   17c74:	str	r2, [r4, #28]
   17c78:	sub	r5, r5, #1
   17c7c:	strb	r6, [r3]
   17c80:	bgt	17c5c <argp_parse@@Base+0x41a8>
   17c84:	pop	{r4, r5, r6, r7, r8, pc}
   17c88:	mov	r1, #2
   17c8c:	mov	r0, r7
   17c90:	bl	1c418 <argp_error@@Base+0x2008>
   17c94:	cmp	r0, #0
   17c98:	beq	17cf0 <argp_parse@@Base+0x423c>
   17c9c:	ldr	r3, [r7, #28]
   17ca0:	b	17c08 <argp_parse@@Base+0x4154>
   17ca4:	ldr	r4, [r6, #4]
   17ca8:	ldr	r3, [r4, #28]
   17cac:	ldr	r1, [r4, #24]
   17cb0:	ldr	r2, [r4, #16]
   17cb4:	sub	r3, r3, r1
   17cb8:	mov	r1, #0
   17cbc:	cmp	r3, r2
   17cc0:	str	r1, [r6, #12]
   17cc4:	bls	17c3c <argp_parse@@Base+0x4188>
   17cc8:	mov	r0, r4
   17ccc:	bl	1be6c <argp_error@@Base+0x1a5c>
   17cd0:	b	17c3c <argp_parse@@Base+0x4188>
   17cd4:	mov	r1, r7
   17cd8:	mov	r0, r4
   17cdc:	bl	1c418 <argp_error@@Base+0x2008>
   17ce0:	cmp	r0, #0
   17ce4:	beq	17c50 <argp_parse@@Base+0x419c>
   17ce8:	ldr	r3, [r4, #28]
   17cec:	b	17c6c <argp_parse@@Base+0x41b8>
   17cf0:	ldr	r4, [r6, #4]
   17cf4:	ldr	r3, [r4, #28]
   17cf8:	ldr	r1, [r4, #24]
   17cfc:	ldr	r2, [r4, #16]
   17d00:	sub	r3, r3, r1
   17d04:	b	17c34 <argp_parse@@Base+0x4180>
   17d08:	mov	r0, r8
   17d0c:	bl	1be6c <argp_error@@Base+0x1a5c>
   17d10:	ldr	r4, [r6, #4]
   17d14:	ldr	r3, [r4, #28]
   17d18:	ldr	r1, [r4, #24]
   17d1c:	ldr	r2, [r4, #16]
   17d20:	sub	r3, r3, r1
   17d24:	b	17be8 <argp_parse@@Base+0x4134>
   17d28:	mov	r1, #1
   17d2c:	mov	r0, r8
   17d30:	bl	1c418 <argp_error@@Base+0x2008>
   17d34:	cmp	r0, #0
   17d38:	beq	17b60 <argp_parse@@Base+0x40ac>
   17d3c:	ldr	r3, [r8, #28]
   17d40:	b	17b50 <argp_parse@@Base+0x409c>
   17d44:	andeq	sp, r1, ip, lsr r9
   17d48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17d4c:	sub	sp, sp, #28
   17d50:	ldr	r6, [r0, #12]
   17d54:	ldr	r7, [r1, #12]
   17d58:	cmp	r6, r7
   17d5c:	beq	17fd4 <argp_parse@@Base+0x4520>
   17d60:	ldr	r8, [r6, #12]
   17d64:	ldr	r9, [r7, #12]
   17d68:	mov	r5, r1
   17d6c:	cmp	r8, r9
   17d70:	mov	r4, r0
   17d74:	beq	17f9c <argp_parse@@Base+0x44e8>
   17d78:	ldr	sl, [r8, #12]
   17d7c:	ldr	fp, [r9, #12]
   17d80:	cmp	sl, fp
   17d84:	beq	1803c <argp_parse@@Base+0x4588>
   17d88:	ldr	r3, [sl, #12]
   17d8c:	ldr	r2, [fp, #12]
   17d90:	cmp	r3, r2
   17d94:	beq	18070 <argp_parse@@Base+0x45bc>
   17d98:	ldr	r1, [r3, #12]
   17d9c:	ldr	r0, [r2, #12]
   17da0:	str	r1, [sp]
   17da4:	cmp	r1, r0
   17da8:	str	r0, [sp, #4]
   17dac:	beq	18008 <argp_parse@@Base+0x4554>
   17db0:	ldr	r1, [r1, #12]
   17db4:	ldr	r0, [r0, #12]
   17db8:	str	r1, [sp, #8]
   17dbc:	cmp	r1, r0
   17dc0:	str	r0, [sp, #12]
   17dc4:	beq	180a4 <argp_parse@@Base+0x45f0>
   17dc8:	ldr	r0, [r1, #12]
   17dcc:	ldr	r1, [sp, #12]
   17dd0:	ldr	r1, [r1, #12]
   17dd4:	cmp	r0, r1
   17dd8:	beq	180e4 <argp_parse@@Base+0x4630>
   17ddc:	str	r2, [sp, #20]
   17de0:	str	r3, [sp, #16]
   17de4:	bl	17d48 <argp_parse@@Base+0x4294>
   17de8:	cmp	r0, #0
   17dec:	bne	17f94 <argp_parse@@Base+0x44e0>
   17df0:	ldr	r3, [sp, #12]
   17df4:	ldr	r2, [sp, #20]
   17df8:	ldr	r1, [r3, #8]
   17dfc:	ldr	r3, [sp, #8]
   17e00:	mvn	ip, r1
   17e04:	ldr	r0, [r3, #8]
   17e08:	lsr	ip, ip, #31
   17e0c:	ldr	r3, [sp, #16]
   17e10:	cmp	ip, r0, lsr #31
   17e14:	subne	r0, r0, r1
   17e18:	subeq	r0, r1, r0
   17e1c:	cmp	r0, #0
   17e20:	bne	17f94 <argp_parse@@Base+0x44e0>
   17e24:	ldr	r1, [sp, #12]
   17e28:	ldr	r0, [sp, #8]
   17e2c:	ldr	r1, [r1, #4]
   17e30:	ldr	r0, [r0, #4]
   17e34:	sub	r0, r1, r0
   17e38:	cmp	r0, #0
   17e3c:	bne	17f94 <argp_parse@@Base+0x44e0>
   17e40:	ldr	r1, [sp, #4]
   17e44:	ldr	r0, [sp]
   17e48:	ldr	r1, [r1, #8]
   17e4c:	ldr	r0, [r0, #8]
   17e50:	mvn	ip, r1
   17e54:	lsr	ip, ip, #31
   17e58:	cmp	ip, r0, lsr #31
   17e5c:	subne	r0, r0, r1
   17e60:	subeq	r0, r1, r0
   17e64:	cmp	r0, #0
   17e68:	bne	17f94 <argp_parse@@Base+0x44e0>
   17e6c:	ldr	r1, [sp, #4]
   17e70:	ldr	r0, [sp]
   17e74:	ldr	r1, [r1, #4]
   17e78:	ldr	r0, [r0, #4]
   17e7c:	sub	r0, r1, r0
   17e80:	cmp	r0, #0
   17e84:	bne	17f94 <argp_parse@@Base+0x44e0>
   17e88:	ldr	r1, [r2, #8]
   17e8c:	ldr	r0, [r3, #8]
   17e90:	mvn	ip, r1
   17e94:	lsr	ip, ip, #31
   17e98:	cmp	ip, r0, lsr #31
   17e9c:	subne	r0, r0, r1
   17ea0:	subeq	r0, r1, r0
   17ea4:	cmp	r0, #0
   17ea8:	bne	17f94 <argp_parse@@Base+0x44e0>
   17eac:	ldr	r2, [r2, #4]
   17eb0:	ldr	r0, [r3, #4]
   17eb4:	sub	r0, r2, r0
   17eb8:	cmp	r0, #0
   17ebc:	bne	17f94 <argp_parse@@Base+0x44e0>
   17ec0:	ldr	r3, [fp, #8]
   17ec4:	ldr	r0, [sl, #8]
   17ec8:	mvn	r2, r3
   17ecc:	lsr	r2, r2, #31
   17ed0:	cmp	r2, r0, lsr #31
   17ed4:	subne	r0, r0, r3
   17ed8:	subeq	r0, r3, r0
   17edc:	cmp	r0, #0
   17ee0:	bne	17f94 <argp_parse@@Base+0x44e0>
   17ee4:	ldr	r3, [fp, #4]
   17ee8:	ldr	r0, [sl, #4]
   17eec:	sub	r0, r3, r0
   17ef0:	cmp	r0, #0
   17ef4:	bne	17f94 <argp_parse@@Base+0x44e0>
   17ef8:	ldr	r3, [r9, #8]
   17efc:	ldr	r0, [r8, #8]
   17f00:	mvn	r2, r3
   17f04:	lsr	r2, r2, #31
   17f08:	cmp	r2, r0, lsr #31
   17f0c:	subne	r0, r0, r3
   17f10:	subeq	r0, r3, r0
   17f14:	cmp	r0, #0
   17f18:	bne	17f94 <argp_parse@@Base+0x44e0>
   17f1c:	ldr	r3, [r9, #4]
   17f20:	ldr	r0, [r8, #4]
   17f24:	sub	r0, r3, r0
   17f28:	cmp	r0, #0
   17f2c:	bne	17f94 <argp_parse@@Base+0x44e0>
   17f30:	ldr	r3, [r7, #8]
   17f34:	ldr	r0, [r6, #8]
   17f38:	mvn	r2, r3
   17f3c:	lsr	r2, r2, #31
   17f40:	cmp	r2, r0, lsr #31
   17f44:	subne	r0, r0, r3
   17f48:	subeq	r0, r3, r0
   17f4c:	cmp	r0, #0
   17f50:	bne	17f94 <argp_parse@@Base+0x44e0>
   17f54:	ldr	r3, [r7, #4]
   17f58:	ldr	r0, [r6, #4]
   17f5c:	sub	r0, r3, r0
   17f60:	cmp	r0, #0
   17f64:	bne	17f94 <argp_parse@@Base+0x44e0>
   17f68:	ldr	r3, [r5, #8]
   17f6c:	ldr	r0, [r4, #8]
   17f70:	mvn	r2, r3
   17f74:	lsr	r2, r2, #31
   17f78:	cmp	r2, r0, lsr #31
   17f7c:	subne	r0, r0, r3
   17f80:	subeq	r0, r3, r0
   17f84:	cmp	r0, #0
   17f88:	ldreq	r3, [r5, #4]
   17f8c:	ldreq	r0, [r4, #4]
   17f90:	subeq	r0, r3, r0
   17f94:	add	sp, sp, #28
   17f98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17f9c:	ldr	r3, [r7, #8]
   17fa0:	ldr	r0, [r6, #8]
   17fa4:	mvn	r2, r3
   17fa8:	ldr	r1, [r7, #4]
   17fac:	lsr	r2, r2, #31
   17fb0:	cmp	r2, r0, lsr #31
   17fb4:	subne	r0, r0, r3
   17fb8:	subeq	r0, r3, r0
   17fbc:	ldr	r2, [r6, #4]
   17fc0:	cmp	r0, #0
   17fc4:	subeq	r0, r1, r2
   17fc8:	beq	17f60 <argp_parse@@Base+0x44ac>
   17fcc:	add	sp, sp, #28
   17fd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17fd4:	ldr	r2, [r1, #8]
   17fd8:	ldr	r3, [r0, #8]
   17fdc:	mvn	ip, r2
   17fe0:	ldr	lr, [r1, #4]
   17fe4:	lsr	ip, ip, #31
   17fe8:	cmp	ip, r3, lsr #31
   17fec:	ldr	r1, [r0, #4]
   17ff0:	subne	r0, r3, r2
   17ff4:	subeq	r0, r2, r3
   17ff8:	cmp	r0, #0
   17ffc:	subeq	r0, lr, r1
   18000:	add	sp, sp, #28
   18004:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18008:	ldr	r1, [r2, #8]
   1800c:	ldr	r0, [r3, #8]
   18010:	mvn	ip, r1
   18014:	ldr	r2, [r2, #4]
   18018:	lsr	ip, ip, #31
   1801c:	cmp	ip, r0, lsr #31
   18020:	subne	r0, r0, r1
   18024:	subeq	r0, r1, r0
   18028:	ldr	r3, [r3, #4]
   1802c:	cmp	r0, #0
   18030:	subeq	r0, r2, r3
   18034:	beq	17eb8 <argp_parse@@Base+0x4404>
   18038:	b	17f94 <argp_parse@@Base+0x44e0>
   1803c:	ldr	r3, [r9, #8]
   18040:	ldr	r0, [r8, #8]
   18044:	mvn	r2, r3
   18048:	ldr	r1, [r9, #4]
   1804c:	lsr	r2, r2, #31
   18050:	cmp	r2, r0, lsr #31
   18054:	subne	r0, r0, r3
   18058:	subeq	r0, r3, r0
   1805c:	ldr	r2, [r8, #4]
   18060:	cmp	r0, #0
   18064:	subeq	r0, r1, r2
   18068:	beq	17f28 <argp_parse@@Base+0x4474>
   1806c:	b	17f94 <argp_parse@@Base+0x44e0>
   18070:	ldr	r3, [fp, #8]
   18074:	ldr	r0, [sl, #8]
   18078:	mvn	r2, r3
   1807c:	ldr	r1, [fp, #4]
   18080:	lsr	r2, r2, #31
   18084:	cmp	r2, r0, lsr #31
   18088:	subne	r0, r0, r3
   1808c:	subeq	r0, r3, r0
   18090:	ldr	r2, [sl, #4]
   18094:	cmp	r0, #0
   18098:	subeq	r0, r1, r2
   1809c:	beq	17ef0 <argp_parse@@Base+0x443c>
   180a0:	b	17f94 <argp_parse@@Base+0x44e0>
   180a4:	ldr	ip, [sp, #4]
   180a8:	ldr	r1, [sp]
   180ac:	ldr	lr, [ip, #8]
   180b0:	ldr	r0, [r1, #8]
   180b4:	mvn	r1, lr
   180b8:	ldr	ip, [ip, #4]
   180bc:	lsr	r1, r1, #31
   180c0:	cmp	r1, r0, lsr #31
   180c4:	ldr	r1, [sp]
   180c8:	subne	r0, r0, lr
   180cc:	subeq	r0, lr, r0
   180d0:	ldr	r1, [r1, #4]
   180d4:	cmp	r0, #0
   180d8:	subeq	r0, ip, r1
   180dc:	beq	17e80 <argp_parse@@Base+0x43cc>
   180e0:	b	17f94 <argp_parse@@Base+0x44e0>
   180e4:	ldr	ip, [sp, #12]
   180e8:	ldr	r1, [sp, #8]
   180ec:	ldr	lr, [ip, #8]
   180f0:	ldr	r0, [r1, #8]
   180f4:	mvn	r1, lr
   180f8:	ldr	ip, [ip, #4]
   180fc:	lsr	r1, r1, #31
   18100:	cmp	r1, r0, lsr #31
   18104:	ldr	r1, [sp, #8]
   18108:	subne	r0, r0, lr
   1810c:	subeq	r0, lr, r0
   18110:	ldr	r1, [r1, #4]
   18114:	cmp	r0, #0
   18118:	subeq	r0, ip, r1
   1811c:	beq	17e38 <argp_parse@@Base+0x4384>
   18120:	b	17f94 <argp_parse@@Base+0x44e0>
   18124:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18128:	mov	r6, r1
   1812c:	ldr	r4, [r0, #16]
   18130:	sub	sp, sp, #28
   18134:	cmp	r4, #0
   18138:	movne	r2, r4
   1813c:	bne	18148 <argp_parse@@Base+0x4694>
   18140:	b	18770 <argp_parse@@Base+0x4cbc>
   18144:	mov	r2, r3
   18148:	ldr	r3, [r2, #12]
   1814c:	cmp	r3, #0
   18150:	bne	18144 <argp_parse@@Base+0x4690>
   18154:	ldr	r5, [r6, #16]
   18158:	ldr	ip, [r2, #8]
   1815c:	cmp	r5, #0
   18160:	movne	r2, r5
   18164:	bne	18170 <argp_parse@@Base+0x46bc>
   18168:	b	18784 <argp_parse@@Base+0x4cd0>
   1816c:	mov	r2, r3
   18170:	ldr	r3, [r2, #12]
   18174:	cmp	r3, #0
   18178:	bne	1816c <argp_parse@@Base+0x46b8>
   1817c:	ldr	r3, [r2, #8]
   18180:	mvn	r2, r3
   18184:	lsr	r2, r2, #31
   18188:	cmp	r2, ip, lsr #31
   1818c:	subne	r1, ip, r3
   18190:	subeq	r1, r3, ip
   18194:	cmp	r1, #0
   18198:	bne	18314 <argp_parse@@Base+0x4860>
   1819c:	adds	r1, r5, #0
   181a0:	movne	r1, #1
   181a4:	cmp	r4, #0
   181a8:	rsbeq	r1, r1, #0
   181ac:	rsbne	r1, r1, #1
   181b0:	cmp	r1, #0
   181b4:	bne	18314 <argp_parse@@Base+0x4860>
   181b8:	cmp	r4, #0
   181bc:	mov	fp, r0
   181c0:	beq	1850c <argp_parse@@Base+0x4a58>
   181c4:	ldr	r1, [r4, #20]
   181c8:	ldr	r2, [r5, #20]
   181cc:	cmp	r1, r2
   181d0:	bgt	18320 <argp_parse@@Base+0x486c>
   181d4:	bge	184b8 <argp_parse@@Base+0x4a04>
   181d8:	ldr	r5, [r5, #12]
   181dc:	ldr	r3, [r5, #20]
   181e0:	cmp	r1, r3
   181e4:	blt	181d8 <argp_parse@@Base+0x4724>
   181e8:	ldr	r6, [r4, #12]
   181ec:	ldr	r7, [r5, #12]
   181f0:	cmp	r6, r7
   181f4:	beq	189f4 <argp_parse@@Base+0x4f40>
   181f8:	ldr	r8, [r6, #12]
   181fc:	ldr	r9, [r7, #12]
   18200:	cmp	r8, r9
   18204:	beq	1892c <argp_parse@@Base+0x4e78>
   18208:	ldr	sl, [r8, #12]
   1820c:	ldr	fp, [r9, #12]
   18210:	cmp	sl, fp
   18214:	beq	18a5c <argp_parse@@Base+0x4fa8>
   18218:	ldr	r0, [sl, #12]
   1821c:	ldr	r1, [fp, #12]
   18220:	cmp	r0, r1
   18224:	beq	18b08 <argp_parse@@Base+0x5054>
   18228:	bl	17d48 <argp_parse@@Base+0x4294>
   1822c:	subs	r1, r0, #0
   18230:	bne	18314 <argp_parse@@Base+0x4860>
   18234:	ldr	r1, [fp, #8]
   18238:	ldr	r3, [sl, #8]
   1823c:	mvn	r2, r1
   18240:	lsr	r2, r2, #31
   18244:	cmp	r2, r3, lsr #31
   18248:	subne	r1, r3, r1
   1824c:	subeq	r1, r1, r3
   18250:	cmp	r1, #0
   18254:	bne	18314 <argp_parse@@Base+0x4860>
   18258:	ldr	r1, [fp, #4]
   1825c:	ldr	r3, [sl, #4]
   18260:	sub	r1, r1, r3
   18264:	cmp	r1, #0
   18268:	bne	18314 <argp_parse@@Base+0x4860>
   1826c:	ldr	r1, [r9, #8]
   18270:	ldr	r3, [r8, #8]
   18274:	mvn	r2, r1
   18278:	lsr	r2, r2, #31
   1827c:	cmp	r2, r3, lsr #31
   18280:	subne	r1, r3, r1
   18284:	subeq	r1, r1, r3
   18288:	cmp	r1, #0
   1828c:	bne	18314 <argp_parse@@Base+0x4860>
   18290:	ldr	r1, [r9, #4]
   18294:	ldr	r3, [r8, #4]
   18298:	sub	r1, r1, r3
   1829c:	cmp	r1, #0
   182a0:	bne	18314 <argp_parse@@Base+0x4860>
   182a4:	ldr	r1, [r7, #8]
   182a8:	ldr	r3, [r6, #8]
   182ac:	mvn	r2, r1
   182b0:	lsr	r2, r2, #31
   182b4:	cmp	r2, r3, lsr #31
   182b8:	subne	r1, r3, r1
   182bc:	subeq	r1, r1, r3
   182c0:	cmp	r1, #0
   182c4:	bne	18314 <argp_parse@@Base+0x4860>
   182c8:	ldr	r1, [r7, #4]
   182cc:	ldr	r3, [r6, #4]
   182d0:	sub	r1, r1, r3
   182d4:	cmp	r1, #0
   182d8:	bne	18314 <argp_parse@@Base+0x4860>
   182dc:	ldr	r1, [r5, #8]
   182e0:	ldr	r3, [r4, #8]
   182e4:	mvn	r2, r1
   182e8:	lsr	r2, r2, #31
   182ec:	cmp	r2, r3, lsr #31
   182f0:	subne	r1, r3, r1
   182f4:	subeq	r1, r1, r3
   182f8:	cmp	r1, #0
   182fc:	bne	18314 <argp_parse@@Base+0x4860>
   18300:	ldr	r1, [r5, #4]
   18304:	ldr	r3, [r4, #4]
   18308:	sub	r1, r1, r3
   1830c:	cmp	r1, #0
   18310:	mvneq	r1, #0
   18314:	mov	r0, r1
   18318:	add	sp, sp, #28
   1831c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18320:	ldr	r4, [r4, #12]
   18324:	ldr	r3, [r4, #20]
   18328:	cmp	r2, r3
   1832c:	blt	18320 <argp_parse@@Base+0x486c>
   18330:	ldr	r6, [r4, #12]
   18334:	ldr	r7, [r5, #12]
   18338:	cmp	r6, r7
   1833c:	beq	18994 <argp_parse@@Base+0x4ee0>
   18340:	ldr	r8, [r6, #12]
   18344:	ldr	r9, [r7, #12]
   18348:	cmp	r8, r9
   1834c:	beq	18a28 <argp_parse@@Base+0x4f74>
   18350:	ldr	sl, [r8, #12]
   18354:	ldr	fp, [r9, #12]
   18358:	cmp	sl, fp
   1835c:	beq	18960 <argp_parse@@Base+0x4eac>
   18360:	ldr	r3, [sl, #12]
   18364:	ldr	r2, [fp, #12]
   18368:	cmp	r3, r2
   1836c:	beq	18a90 <argp_parse@@Base+0x4fdc>
   18370:	ldr	r0, [r3, #12]
   18374:	ldr	r1, [r2, #12]
   18378:	cmp	r0, r1
   1837c:	beq	18b3c <argp_parse@@Base+0x5088>
   18380:	str	r2, [sp, #8]
   18384:	str	r3, [sp, #4]
   18388:	bl	17d48 <argp_parse@@Base+0x4294>
   1838c:	subs	r1, r0, #0
   18390:	bne	18314 <argp_parse@@Base+0x4860>
   18394:	ldr	r2, [sp, #8]
   18398:	ldr	r3, [sp, #4]
   1839c:	ldr	r0, [r2, #8]
   183a0:	ldr	r1, [r3, #8]
   183a4:	mvn	ip, r0
   183a8:	lsr	ip, ip, #31
   183ac:	cmp	ip, r1, lsr #31
   183b0:	subne	r1, r1, r0
   183b4:	subeq	r1, r0, r1
   183b8:	cmp	r1, #0
   183bc:	bne	18314 <argp_parse@@Base+0x4860>
   183c0:	ldr	r1, [r2, #4]
   183c4:	ldr	r3, [r3, #4]
   183c8:	sub	r1, r1, r3
   183cc:	cmp	r1, #0
   183d0:	bne	18314 <argp_parse@@Base+0x4860>
   183d4:	ldr	r1, [fp, #8]
   183d8:	ldr	r3, [sl, #8]
   183dc:	mvn	r2, r1
   183e0:	lsr	r2, r2, #31
   183e4:	cmp	r2, r3, lsr #31
   183e8:	subne	r1, r3, r1
   183ec:	subeq	r1, r1, r3
   183f0:	cmp	r1, #0
   183f4:	bne	18314 <argp_parse@@Base+0x4860>
   183f8:	ldr	r1, [fp, #4]
   183fc:	ldr	r3, [sl, #4]
   18400:	sub	r1, r1, r3
   18404:	cmp	r1, #0
   18408:	bne	18314 <argp_parse@@Base+0x4860>
   1840c:	ldr	r1, [r9, #8]
   18410:	ldr	r3, [r8, #8]
   18414:	mvn	r2, r1
   18418:	lsr	r2, r2, #31
   1841c:	cmp	r2, r3, lsr #31
   18420:	subne	r1, r3, r1
   18424:	subeq	r1, r1, r3
   18428:	cmp	r1, #0
   1842c:	bne	18314 <argp_parse@@Base+0x4860>
   18430:	ldr	r1, [r9, #4]
   18434:	ldr	r3, [r8, #4]
   18438:	sub	r1, r1, r3
   1843c:	cmp	r1, #0
   18440:	bne	18314 <argp_parse@@Base+0x4860>
   18444:	ldr	r1, [r7, #8]
   18448:	ldr	r3, [r6, #8]
   1844c:	mvn	r2, r1
   18450:	lsr	r2, r2, #31
   18454:	cmp	r2, r3, lsr #31
   18458:	subne	r1, r3, r1
   1845c:	subeq	r1, r1, r3
   18460:	cmp	r1, #0
   18464:	bne	18314 <argp_parse@@Base+0x4860>
   18468:	ldr	r1, [r7, #4]
   1846c:	ldr	r3, [r6, #4]
   18470:	sub	r1, r1, r3
   18474:	cmp	r1, #0
   18478:	bne	18314 <argp_parse@@Base+0x4860>
   1847c:	ldr	r1, [r5, #8]
   18480:	ldr	r3, [r4, #8]
   18484:	mvn	r2, r1
   18488:	lsr	r2, r2, #31
   1848c:	cmp	r2, r3, lsr #31
   18490:	subne	r1, r3, r1
   18494:	subeq	r1, r1, r3
   18498:	cmp	r1, #0
   1849c:	bne	18314 <argp_parse@@Base+0x4860>
   184a0:	ldr	r1, [r5, #4]
   184a4:	ldr	r3, [r4, #4]
   184a8:	sub	r1, r1, r3
   184ac:	cmp	r1, #0
   184b0:	moveq	r1, #1
   184b4:	b	18314 <argp_parse@@Base+0x4860>
   184b8:	ldr	r0, [r4, #12]
   184bc:	ldr	r1, [r5, #12]
   184c0:	cmp	r0, r1
   184c4:	beq	18ac4 <argp_parse@@Base+0x5010>
   184c8:	bl	17d48 <argp_parse@@Base+0x4294>
   184cc:	subs	r1, r0, #0
   184d0:	bne	18314 <argp_parse@@Base+0x4860>
   184d4:	ldr	r1, [r5, #8]
   184d8:	ldr	r3, [r4, #8]
   184dc:	mvn	r2, r1
   184e0:	lsr	r2, r2, #31
   184e4:	cmp	r2, r3, lsr #31
   184e8:	subne	r1, r3, r1
   184ec:	subeq	r1, r1, r3
   184f0:	cmp	r1, #0
   184f4:	bne	18314 <argp_parse@@Base+0x4860>
   184f8:	ldr	r1, [r5, #4]
   184fc:	ldr	r3, [r4, #4]
   18500:	sub	r1, r1, r3
   18504:	cmp	r1, #0
   18508:	bne	18314 <argp_parse@@Base+0x4860>
   1850c:	ldr	r1, [r6, #12]
   18510:	ldr	r3, [fp, #12]
   18514:	mvn	r2, r1
   18518:	lsr	r2, r2, #31
   1851c:	cmp	r2, r3, lsr #31
   18520:	subne	r1, r3, r1
   18524:	subeq	r1, r1, r3
   18528:	cmp	r1, #0
   1852c:	bne	18314 <argp_parse@@Base+0x4860>
   18530:	ldm	fp, {r8, r9}
   18534:	cmp	r9, #0
   18538:	beq	18b70 <argp_parse@@Base+0x50bc>
   1853c:	add	r3, r8, #24
   18540:	mov	r2, r9
   18544:	ldr	r4, [r3, #-24]	; 0xffffffe8
   18548:	cmp	r4, #0
   1854c:	beq	1855c <argp_parse@@Base+0x4aa8>
   18550:	ldr	r0, [r3, #-12]
   18554:	tst	r0, #2
   18558:	beq	1856c <argp_parse@@Base+0x4ab8>
   1855c:	subs	r2, r2, #1
   18560:	add	r3, r3, #24
   18564:	bne	18544 <argp_parse@@Base+0x4a90>
   18568:	mov	r4, r2
   1856c:	ldm	r6, {r7, sl}
   18570:	cmp	sl, #0
   18574:	beq	18b78 <argp_parse@@Base+0x50c4>
   18578:	add	r3, r7, #24
   1857c:	mov	r2, sl
   18580:	ldr	r5, [r3, #-24]	; 0xffffffe8
   18584:	cmp	r5, #0
   18588:	beq	18598 <argp_parse@@Base+0x4ae4>
   1858c:	ldr	r0, [r3, #-12]
   18590:	tst	r0, #2
   18594:	beq	185a8 <argp_parse@@Base+0x4af4>
   18598:	subs	r2, r2, #1
   1859c:	add	r3, r3, #24
   185a0:	bne	18580 <argp_parse@@Base+0x4acc>
   185a4:	mov	r5, r2
   185a8:	ldr	r3, [r8, #12]
   185ac:	tst	r3, #8
   185b0:	beq	1861c <argp_parse@@Base+0x4b68>
   185b4:	cmp	r4, #0
   185b8:	beq	1861c <argp_parse@@Base+0x4b68>
   185bc:	str	r1, [sp, #4]
   185c0:	bl	11784 <__ctype_b_loc@plt>
   185c4:	ldr	r1, [sp, #4]
   185c8:	mov	ip, r4
   185cc:	ldr	r0, [r0]
   185d0:	ldrb	r2, [ip]
   185d4:	mov	r4, ip
   185d8:	add	ip, ip, #1
   185dc:	lsl	r3, r2, #1
   185e0:	ldrh	r3, [r0, r3]
   185e4:	tst	r3, #8192	; 0x2000
   185e8:	bne	185d0 <argp_parse@@Base+0x4b1c>
   185ec:	cmp	r2, #0
   185f0:	bne	1860c <argp_parse@@Base+0x4b58>
   185f4:	b	18918 <argp_parse@@Base+0x4e64>
   185f8:	ldrb	r3, [r4, #1]!
   185fc:	cmp	r3, #0
   18600:	lsl	r3, r3, #1
   18604:	beq	18614 <argp_parse@@Base+0x4b60>
   18608:	ldrh	r3, [r0, r3]
   1860c:	tst	r3, #8
   18610:	beq	185f8 <argp_parse@@Base+0x4b44>
   18614:	cmp	r2, #45	; 0x2d
   18618:	bne	18918 <argp_parse@@Base+0x4e64>
   1861c:	ldr	r3, [r7, #12]
   18620:	tst	r3, #8
   18624:	beq	186b0 <argp_parse@@Base+0x4bfc>
   18628:	cmp	r5, #0
   1862c:	movne	r2, r1
   18630:	beq	186b0 <argp_parse@@Base+0x4bfc>
   18634:	str	r1, [sp, #8]
   18638:	str	r2, [sp, #4]
   1863c:	bl	11784 <__ctype_b_loc@plt>
   18640:	ldr	r2, [sp, #4]
   18644:	ldr	r1, [sp, #8]
   18648:	mov	r3, r5
   1864c:	ldr	ip, [r0]
   18650:	ldrb	r0, [r3]
   18654:	mov	r5, r3
   18658:	add	r3, r3, #1
   1865c:	lsl	lr, r0, #1
   18660:	ldrh	lr, [ip, lr]
   18664:	tst	lr, #8192	; 0x2000
   18668:	bne	18650 <argp_parse@@Base+0x4b9c>
   1866c:	cmp	r0, #0
   18670:	beq	1869c <argp_parse@@Base+0x4be8>
   18674:	tst	lr, #8
   18678:	beq	1868c <argp_parse@@Base+0x4bd8>
   1867c:	b	1869c <argp_parse@@Base+0x4be8>
   18680:	ldrh	r3, [ip, r3]
   18684:	tst	r3, #8
   18688:	bne	1869c <argp_parse@@Base+0x4be8>
   1868c:	ldrb	r3, [r5, #1]!
   18690:	cmp	r3, #0
   18694:	lsl	r3, r3, #1
   18698:	bne	18680 <argp_parse@@Base+0x4bcc>
   1869c:	cmp	r0, #45	; 0x2d
   186a0:	subne	r2, r2, #1
   186a4:	cmp	r2, #0
   186a8:	movne	r1, r2
   186ac:	bne	18314 <argp_parse@@Base+0x4860>
   186b0:	ldr	r3, [fp, #8]
   186b4:	cmp	r9, #0
   186b8:	mov	r2, r3
   186bc:	beq	18b80 <argp_parse@@Base+0x50cc>
   186c0:	str	r7, [sp, #16]
   186c4:	str	r6, [sp, #20]
   186c8:	mov	r3, #1
   186cc:	str	r4, [sp, #8]
   186d0:	str	r5, [sp, #12]
   186d4:	mov	r7, r1
   186d8:	mov	r6, r2
   186dc:	b	186f8 <argp_parse@@Base+0x4c44>
   186e0:	subs	r9, r9, #1
   186e4:	moveq	ip, #0
   186e8:	andne	ip, ip, #1
   186ec:	cmp	ip, #0
   186f0:	add	r8, r8, #24
   186f4:	beq	1878c <argp_parse@@Base+0x4cd8>
   186f8:	ldr	r4, [r8, #12]
   186fc:	mov	ip, r3
   18700:	ands	fp, r4, #8
   18704:	movne	fp, r7
   18708:	bne	186e0 <argp_parse@@Base+0x4c2c>
   1870c:	ldr	r5, [r8, #4]
   18710:	sub	r0, r5, #1
   18714:	cmp	r0, #254	; 0xfe
   18718:	bhi	186e0 <argp_parse@@Base+0x4c2c>
   1871c:	str	r3, [sp, #4]
   18720:	bl	11784 <__ctype_b_loc@plt>
   18724:	lsl	lr, r5, #1
   18728:	ldr	r3, [sp, #4]
   1872c:	mov	ip, r3
   18730:	ldr	r0, [r0]
   18734:	ldrh	r0, [r0, lr]
   18738:	tst	r0, #16384	; 0x4000
   1873c:	beq	186e0 <argp_parse@@Base+0x4c2c>
   18740:	ldrb	r0, [r6]
   18744:	mov	ip, r3
   18748:	cmp	r5, r0
   1874c:	bne	186e0 <argp_parse@@Base+0x4c2c>
   18750:	and	r4, r4, #10
   18754:	cmp	r4, #0
   18758:	moveq	fp, r5
   1875c:	movne	fp, #0
   18760:	add	r6, r6, #1
   18764:	movne	ip, #1
   18768:	moveq	ip, #0
   1876c:	b	186e0 <argp_parse@@Base+0x4c2c>
   18770:	ldr	r5, [r6, #16]
   18774:	ldr	ip, [r0, #12]
   18778:	cmp	r5, #0
   1877c:	movne	r2, r5
   18780:	bne	18170 <argp_parse@@Base+0x46bc>
   18784:	ldr	r3, [r6, #12]
   18788:	b	18180 <argp_parse@@Base+0x46cc>
   1878c:	mov	r3, fp
   18790:	ldr	r6, [sp, #20]
   18794:	uxtb	r3, r3
   18798:	cmp	sl, #0
   1879c:	str	fp, [sp, #4]
   187a0:	mov	r1, r7
   187a4:	ldr	r4, [sp, #8]
   187a8:	ldr	r7, [sp, #16]
   187ac:	ldr	r5, [sp, #12]
   187b0:	ldr	fp, [r6, #8]
   187b4:	str	r3, [sp, #16]
   187b8:	beq	189c8 <argp_parse@@Base+0x4f14>
   187bc:	str	r4, [sp, #8]
   187c0:	mov	r8, #1
   187c4:	str	r5, [sp, #12]
   187c8:	mov	r4, r1
   187cc:	b	187e8 <argp_parse@@Base+0x4d34>
   187d0:	subs	sl, sl, #1
   187d4:	moveq	r3, #0
   187d8:	andne	r3, r3, #1
   187dc:	cmp	r3, #0
   187e0:	add	r7, r7, #24
   187e4:	beq	18854 <argp_parse@@Base+0x4da0>
   187e8:	ldr	r6, [r7, #12]
   187ec:	mov	r3, r8
   187f0:	ands	r9, r6, #8
   187f4:	movne	r9, r4
   187f8:	bne	187d0 <argp_parse@@Base+0x4d1c>
   187fc:	ldr	r5, [r7, #4]
   18800:	sub	r0, r5, #1
   18804:	cmp	r0, #254	; 0xfe
   18808:	bhi	187d0 <argp_parse@@Base+0x4d1c>
   1880c:	bl	11784 <__ctype_b_loc@plt>
   18810:	lsl	ip, r5, #1
   18814:	mov	r3, r8
   18818:	ldr	r0, [r0]
   1881c:	ldrh	r0, [r0, ip]
   18820:	tst	r0, #16384	; 0x4000
   18824:	beq	187d0 <argp_parse@@Base+0x4d1c>
   18828:	ldrb	r0, [fp]
   1882c:	mov	r3, r8
   18830:	cmp	r5, r0
   18834:	bne	187d0 <argp_parse@@Base+0x4d1c>
   18838:	and	r6, r6, #2
   1883c:	cmp	r6, #0
   18840:	moveq	r9, r5
   18844:	add	fp, fp, #1
   18848:	movne	r3, #1
   1884c:	moveq	r3, #0
   18850:	b	187d0 <argp_parse@@Base+0x4d1c>
   18854:	mov	r1, r4
   18858:	ldmib	sp, {r3, r4}
   1885c:	ldr	r5, [sp, #12]
   18860:	uxtb	r6, r9
   18864:	cmp	r3, #0
   18868:	beq	18904 <argp_parse@@Base+0x4e50>
   1886c:	ldr	r3, [sp, #16]
   18870:	mov	r7, r3
   18874:	lsl	r8, r3, #2
   18878:	cmp	r9, #0
   1887c:	beq	189e0 <argp_parse@@Base+0x4f2c>
   18880:	lsl	sl, r6, #2
   18884:	bl	11760 <__ctype_tolower_loc@plt>
   18888:	ldr	r3, [r0]
   1888c:	ldr	r1, [r3, r8]
   18890:	ldr	r3, [r3, sl]
   18894:	subs	r1, r1, r3
   18898:	bne	18314 <argp_parse@@Base+0x4860>
   1889c:	subs	r1, r6, r7
   188a0:	bne	18314 <argp_parse@@Base+0x4860>
   188a4:	adds	r1, r9, #0
   188a8:	ldr	r3, [sp, #4]
   188ac:	movne	r1, #1
   188b0:	cmp	r3, #0
   188b4:	rsbeq	r1, r1, #0
   188b8:	rsbne	r1, r1, #1
   188bc:	cmp	r1, #0
   188c0:	bne	18314 <argp_parse@@Base+0x4860>
   188c4:	cmp	r3, #0
   188c8:	bne	18314 <argp_parse@@Base+0x4860>
   188cc:	adds	r1, r5, #0
   188d0:	movne	r1, #1
   188d4:	cmp	r4, #0
   188d8:	rsbeq	r1, r1, #0
   188dc:	rsbne	r1, r1, #1
   188e0:	cmp	r1, #0
   188e4:	bne	18314 <argp_parse@@Base+0x4860>
   188e8:	cmp	r4, #0
   188ec:	beq	18314 <argp_parse@@Base+0x4860>
   188f0:	mov	r1, r5
   188f4:	mov	r0, r4
   188f8:	add	sp, sp, #28
   188fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18900:	b	116b8 <strcasecmp@plt>
   18904:	cmp	r4, #0
   18908:	beq	18bac <argp_parse@@Base+0x50f8>
   1890c:	ldrb	r7, [r4]
   18910:	lsl	r8, r7, #2
   18914:	b	18878 <argp_parse@@Base+0x4dc4>
   18918:	ldr	r3, [r7, #12]
   1891c:	tst	r3, #8
   18920:	bne	18af8 <argp_parse@@Base+0x5044>
   18924:	mov	r1, #1
   18928:	b	18314 <argp_parse@@Base+0x4860>
   1892c:	ldr	r1, [r7, #8]
   18930:	ldr	r3, [r6, #8]
   18934:	mvn	r2, r1
   18938:	ldr	r0, [r7, #4]
   1893c:	lsr	r2, r2, #31
   18940:	cmp	r2, r3, lsr #31
   18944:	subne	r1, r3, r1
   18948:	subeq	r1, r1, r3
   1894c:	ldr	r2, [r6, #4]
   18950:	cmp	r1, #0
   18954:	subeq	r1, r0, r2
   18958:	beq	182d4 <argp_parse@@Base+0x4820>
   1895c:	b	18314 <argp_parse@@Base+0x4860>
   18960:	ldr	r1, [r9, #8]
   18964:	ldr	r3, [r8, #8]
   18968:	mvn	r2, r1
   1896c:	ldr	r0, [r9, #4]
   18970:	lsr	r2, r2, #31
   18974:	cmp	r2, r3, lsr #31
   18978:	subne	r1, r3, r1
   1897c:	subeq	r1, r1, r3
   18980:	ldr	r2, [r8, #4]
   18984:	cmp	r1, #0
   18988:	subeq	r1, r0, r2
   1898c:	beq	1843c <argp_parse@@Base+0x4988>
   18990:	b	18314 <argp_parse@@Base+0x4860>
   18994:	ldr	r1, [r5, #8]
   18998:	ldr	r3, [r4, #8]
   1899c:	mvn	r2, r1
   189a0:	ldr	r0, [r5, #4]
   189a4:	lsr	r2, r2, #31
   189a8:	cmp	r2, r3, lsr #31
   189ac:	subne	r1, r3, r1
   189b0:	subeq	r1, r1, r3
   189b4:	ldr	r2, [r4, #4]
   189b8:	cmp	r1, #0
   189bc:	subeq	r1, r0, r2
   189c0:	beq	184ac <argp_parse@@Base+0x49f8>
   189c4:	b	18314 <argp_parse@@Base+0x4860>
   189c8:	ldr	r3, [sp, #4]
   189cc:	cmp	r3, #0
   189d0:	beq	18bb8 <argp_parse@@Base+0x5104>
   189d4:	ldr	r3, [sp, #16]
   189d8:	mov	r7, r3
   189dc:	lsl	r8, r3, #2
   189e0:	cmp	r5, #0
   189e4:	beq	18b9c <argp_parse@@Base+0x50e8>
   189e8:	ldrb	r6, [r5]
   189ec:	mov	r9, r1
   189f0:	b	18880 <argp_parse@@Base+0x4dcc>
   189f4:	ldr	r1, [r5, #8]
   189f8:	ldr	r3, [r4, #8]
   189fc:	mvn	r2, r1
   18a00:	ldr	r0, [r5, #4]
   18a04:	lsr	r2, r2, #31
   18a08:	cmp	r2, r3, lsr #31
   18a0c:	subne	r1, r3, r1
   18a10:	subeq	r1, r1, r3
   18a14:	ldr	r2, [r4, #4]
   18a18:	cmp	r1, #0
   18a1c:	subeq	r1, r0, r2
   18a20:	beq	1830c <argp_parse@@Base+0x4858>
   18a24:	b	18314 <argp_parse@@Base+0x4860>
   18a28:	ldr	r1, [r7, #8]
   18a2c:	ldr	r3, [r6, #8]
   18a30:	mvn	r2, r1
   18a34:	ldr	r0, [r7, #4]
   18a38:	lsr	r2, r2, #31
   18a3c:	cmp	r2, r3, lsr #31
   18a40:	subne	r1, r3, r1
   18a44:	subeq	r1, r1, r3
   18a48:	ldr	r2, [r6, #4]
   18a4c:	cmp	r1, #0
   18a50:	subeq	r1, r0, r2
   18a54:	beq	18474 <argp_parse@@Base+0x49c0>
   18a58:	b	18314 <argp_parse@@Base+0x4860>
   18a5c:	ldr	r1, [r9, #8]
   18a60:	ldr	r3, [r8, #8]
   18a64:	mvn	r2, r1
   18a68:	ldr	r0, [r9, #4]
   18a6c:	lsr	r2, r2, #31
   18a70:	cmp	r2, r3, lsr #31
   18a74:	subne	r1, r3, r1
   18a78:	subeq	r1, r1, r3
   18a7c:	ldr	r2, [r8, #4]
   18a80:	cmp	r1, #0
   18a84:	subeq	r1, r0, r2
   18a88:	beq	1829c <argp_parse@@Base+0x47e8>
   18a8c:	b	18314 <argp_parse@@Base+0x4860>
   18a90:	ldr	r1, [fp, #8]
   18a94:	ldr	r3, [sl, #8]
   18a98:	mvn	r2, r1
   18a9c:	ldr	r0, [fp, #4]
   18aa0:	lsr	r2, r2, #31
   18aa4:	cmp	r2, r3, lsr #31
   18aa8:	subne	r1, r3, r1
   18aac:	subeq	r1, r1, r3
   18ab0:	ldr	r2, [sl, #4]
   18ab4:	cmp	r1, #0
   18ab8:	subeq	r1, r0, r2
   18abc:	beq	18404 <argp_parse@@Base+0x4950>
   18ac0:	b	18314 <argp_parse@@Base+0x4860>
   18ac4:	ldr	r1, [r5, #8]
   18ac8:	ldr	r3, [r4, #8]
   18acc:	mvn	r2, r1
   18ad0:	ldr	r0, [r5, #4]
   18ad4:	lsr	r2, r2, #31
   18ad8:	cmp	r2, r3, lsr #31
   18adc:	subne	r1, r3, r1
   18ae0:	subeq	r1, r1, r3
   18ae4:	ldr	r2, [r4, #4]
   18ae8:	cmp	r1, #0
   18aec:	subeq	r1, r0, r2
   18af0:	beq	18504 <argp_parse@@Base+0x4a50>
   18af4:	b	18314 <argp_parse@@Base+0x4860>
   18af8:	cmp	r5, #0
   18afc:	beq	18924 <argp_parse@@Base+0x4e70>
   18b00:	mov	r2, #1
   18b04:	b	18634 <argp_parse@@Base+0x4b80>
   18b08:	ldr	r1, [fp, #8]
   18b0c:	ldr	r3, [sl, #8]
   18b10:	mvn	r2, r1
   18b14:	ldr	r0, [fp, #4]
   18b18:	lsr	r2, r2, #31
   18b1c:	cmp	r2, r3, lsr #31
   18b20:	subne	r1, r3, r1
   18b24:	subeq	r1, r1, r3
   18b28:	ldr	r2, [sl, #4]
   18b2c:	cmp	r1, #0
   18b30:	subeq	r1, r0, r2
   18b34:	beq	18264 <argp_parse@@Base+0x47b0>
   18b38:	b	18314 <argp_parse@@Base+0x4860>
   18b3c:	ldr	r0, [r2, #8]
   18b40:	ldr	r1, [r3, #8]
   18b44:	mvn	ip, r0
   18b48:	ldr	r2, [r2, #4]
   18b4c:	lsr	ip, ip, #31
   18b50:	cmp	ip, r1, lsr #31
   18b54:	subne	r1, r1, r0
   18b58:	subeq	r1, r0, r1
   18b5c:	ldr	r3, [r3, #4]
   18b60:	cmp	r1, #0
   18b64:	subeq	r1, r2, r3
   18b68:	beq	183cc <argp_parse@@Base+0x4918>
   18b6c:	b	18314 <argp_parse@@Base+0x4860>
   18b70:	mov	r4, r1
   18b74:	b	1856c <argp_parse@@Base+0x4ab8>
   18b78:	mov	r5, sl
   18b7c:	b	185a8 <argp_parse@@Base+0x4af4>
   18b80:	cmp	sl, #0
   18b84:	ldr	fp, [r6, #8]
   18b88:	streq	r1, [sp, #4]
   18b8c:	beq	18bb8 <argp_parse@@Base+0x5104>
   18b90:	str	r9, [sp, #16]
   18b94:	str	r1, [sp, #4]
   18b98:	b	187bc <argp_parse@@Base+0x4d08>
   18b9c:	mov	r9, r1
   18ba0:	mov	sl, r5
   18ba4:	mov	r6, r5
   18ba8:	b	18884 <argp_parse@@Base+0x4dd0>
   18bac:	mov	r8, r4
   18bb0:	mov	r7, r4
   18bb4:	b	18878 <argp_parse@@Base+0x4dc4>
   18bb8:	cmp	r4, #0
   18bbc:	moveq	r8, r4
   18bc0:	moveq	r7, r4
   18bc4:	beq	189e0 <argp_parse@@Base+0x4f2c>
   18bc8:	mov	r9, r1
   18bcc:	mov	r6, #0
   18bd0:	b	1890c <argp_parse@@Base+0x4e58>

00018bd4 <argp_failure@@Base>:
   18bd4:	push	{r3}		; (str r3, [sp, #-4]!)
   18bd8:	push	{r4, r5, r6, r7, lr}
   18bdc:	subs	r5, r0, #0
   18be0:	sub	sp, sp, #200	; 0xc8
   18be4:	mov	r7, r1
   18be8:	mov	r6, r2
   18bec:	beq	18d3c <argp_failure@@Base+0x168>
   18bf0:	ldr	r3, [r5, #16]
   18bf4:	tst	r3, #2
   18bf8:	bne	18d2c <argp_failure@@Base+0x158>
   18bfc:	ldr	r4, [r5, #44]	; 0x2c
   18c00:	cmp	r4, #0
   18c04:	beq	18d2c <argp_failure@@Base+0x158>
   18c08:	mov	r0, r4
   18c0c:	bl	11904 <flockfile@plt>
   18c10:	ldr	r0, [r5, #40]	; 0x28
   18c14:	mov	r1, r4
   18c18:	bl	1155c <fputs_unlocked@plt>
   18c1c:	ldr	r3, [sp, #220]	; 0xdc
   18c20:	cmp	r3, #0
   18c24:	beq	18c80 <argp_failure@@Base+0xac>
   18c28:	ldr	r3, [r4, #20]
   18c2c:	ldr	r1, [r4, #24]
   18c30:	add	r2, sp, #224	; 0xe0
   18c34:	cmp	r3, r1
   18c38:	str	r2, [sp]
   18c3c:	addcc	r1, r3, #1
   18c40:	movcc	r2, #58	; 0x3a
   18c44:	strcc	r1, [r4, #20]
   18c48:	strbcc	r2, [r3]
   18c4c:	bcs	18d88 <argp_failure@@Base+0x1b4>
   18c50:	ldr	r3, [r4, #20]
   18c54:	ldr	r2, [r4, #24]
   18c58:	cmp	r3, r2
   18c5c:	addcc	r1, r3, #1
   18c60:	movcc	r2, #32
   18c64:	strcc	r1, [r4, #20]
   18c68:	strbcc	r2, [r3]
   18c6c:	bcs	18d78 <argp_failure@@Base+0x1a4>
   18c70:	ldr	r2, [sp]
   18c74:	ldr	r1, [sp, #220]	; 0xdc
   18c78:	mov	r0, r4
   18c7c:	bl	118b0 <vfprintf@plt>
   18c80:	cmp	r6, #0
   18c84:	beq	18ce8 <argp_failure@@Base+0x114>
   18c88:	ldr	r3, [r4, #20]
   18c8c:	ldr	r2, [r4, #24]
   18c90:	cmp	r3, r2
   18c94:	addcc	r1, r3, #1
   18c98:	movcc	r2, #58	; 0x3a
   18c9c:	strcc	r1, [r4, #20]
   18ca0:	strbcc	r2, [r3]
   18ca4:	bcs	18da8 <argp_failure@@Base+0x1d4>
   18ca8:	ldr	r3, [r4, #20]
   18cac:	ldr	r2, [r4, #24]
   18cb0:	cmp	r3, r2
   18cb4:	addcc	r1, r3, #1
   18cb8:	movcc	r2, #32
   18cbc:	strcc	r1, [r4, #20]
   18cc0:	strbcc	r2, [r3]
   18cc4:	bcs	18d98 <argp_failure@@Base+0x1c4>
   18cc8:	mov	r2, #200	; 0xc8
   18ccc:	mov	r1, sp
   18cd0:	mov	r0, r6
   18cd4:	bl	117fc <strerror_r@plt>
   18cd8:	cmp	r0, #0
   18cdc:	beq	18db8 <argp_failure@@Base+0x1e4>
   18ce0:	mov	r1, r4
   18ce4:	bl	1155c <fputs_unlocked@plt>
   18ce8:	ldr	r3, [r4, #20]
   18cec:	ldr	r2, [r4, #24]
   18cf0:	cmp	r3, r2
   18cf4:	addcc	r1, r3, #1
   18cf8:	movcc	r2, #10
   18cfc:	strcc	r1, [r4, #20]
   18d00:	strbcc	r2, [r3]
   18d04:	bcs	18d60 <argp_failure@@Base+0x18c>
   18d08:	mov	r0, r4
   18d0c:	bl	116c4 <funlockfile@plt>
   18d10:	cmp	r7, #0
   18d14:	beq	18d2c <argp_failure@@Base+0x158>
   18d18:	cmp	r5, #0
   18d1c:	beq	18d70 <argp_failure@@Base+0x19c>
   18d20:	ldr	r3, [r5, #16]
   18d24:	tst	r3, #32
   18d28:	beq	18d70 <argp_failure@@Base+0x19c>
   18d2c:	add	sp, sp, #200	; 0xc8
   18d30:	pop	{r4, r5, r6, r7, lr}
   18d34:	add	sp, sp, #4
   18d38:	bx	lr
   18d3c:	ldr	r3, [pc, #140]	; 18dd0 <argp_failure@@Base+0x1fc>
   18d40:	ldr	r4, [r3]
   18d44:	cmp	r4, #0
   18d48:	beq	18d2c <argp_failure@@Base+0x158>
   18d4c:	mov	r0, r4
   18d50:	bl	11904 <flockfile@plt>
   18d54:	ldr	r3, [pc, #120]	; 18dd4 <argp_failure@@Base+0x200>
   18d58:	ldr	r0, [r3]
   18d5c:	b	18c14 <argp_failure@@Base+0x40>
   18d60:	mov	r1, #10
   18d64:	mov	r0, r4
   18d68:	bl	11868 <__overflow@plt>
   18d6c:	b	18d08 <argp_failure@@Base+0x134>
   18d70:	mov	r0, r7
   18d74:	bl	1179c <exit@plt>
   18d78:	mov	r1, #32
   18d7c:	mov	r0, r4
   18d80:	bl	11868 <__overflow@plt>
   18d84:	b	18c70 <argp_failure@@Base+0x9c>
   18d88:	mov	r1, #58	; 0x3a
   18d8c:	mov	r0, r4
   18d90:	bl	11868 <__overflow@plt>
   18d94:	b	18c50 <argp_failure@@Base+0x7c>
   18d98:	mov	r1, #32
   18d9c:	mov	r0, r4
   18da0:	bl	11868 <__overflow@plt>
   18da4:	b	18cc8 <argp_failure@@Base+0xf4>
   18da8:	mov	r1, #58	; 0x3a
   18dac:	mov	r0, r4
   18db0:	bl	11868 <__overflow@plt>
   18db4:	b	18ca8 <argp_failure@@Base+0xd4>
   18db8:	mov	r0, r6
   18dbc:	bl	11754 <strerror@plt>
   18dc0:	ldr	r3, [pc, #16]	; 18dd8 <argp_failure@@Base+0x204>
   18dc4:	cmp	r0, #0
   18dc8:	moveq	r0, r3
   18dcc:	b	18ce0 <argp_failure@@Base+0x10c>
   18dd0:	andeq	lr, r2, r8, ror #9
   18dd4:	ldrdeq	lr, [r2], -r8
   18dd8:	andeq	sp, r1, r0, asr #18
   18ddc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18de0:	add	fp, sp, #32
   18de4:	cmp	r2, #0
   18de8:	sub	sp, sp, #116	; 0x74
   18dec:	str	r2, [fp, #-136]	; 0xffffff78
   18df0:	str	r0, [fp, #-116]	; 0xffffff8c
   18df4:	str	r1, [fp, #-104]	; 0xffffff98
   18df8:	str	r3, [fp, #-100]	; 0xffffff9c
   18dfc:	beq	18f20 <argp_failure@@Base+0x34c>
   18e00:	ldr	r3, [pc, #4076]	; 19df4 <argp_failure@@Base+0x1220>
   18e04:	mov	r0, r2
   18e08:	mov	r4, r3
   18e0c:	str	r3, [fp, #-96]	; 0xffffffa0
   18e10:	bl	11904 <flockfile@plt>
   18e14:	ldr	sl, [r4, #36]	; 0x24
   18e18:	cmp	sl, #0
   18e1c:	beq	19334 <argp_failure@@Base+0x760>
   18e20:	ldr	r2, [fp, #-96]	; 0xffffffa0
   18e24:	mov	r3, #0
   18e28:	mov	r1, r3
   18e2c:	ldr	r2, [r2, #32]
   18e30:	ldr	r0, [fp, #-136]	; 0xffffff78
   18e34:	bl	1bdf0 <argp_error@@Base+0x19e0>
   18e38:	subs	sl, r0, #0
   18e3c:	beq	1a150 <argp_failure@@Base+0x157c>
   18e40:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18e44:	ands	r3, r3, #11
   18e48:	streq	r3, [fp, #-108]	; 0xffffff94
   18e4c:	bne	19760 <argp_failure@@Base+0xb8c>
   18e50:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18e54:	ands	r4, r3, #3
   18e58:	bne	19888 <argp_failure@@Base+0xcb4>
   18e5c:	tst	r3, #16
   18e60:	bne	19860 <argp_failure@@Base+0xc8c>
   18e64:	tst	r3, #4
   18e68:	bne	19740 <argp_failure@@Base+0xb6c>
   18e6c:	tst	r3, #8
   18e70:	bne	18f28 <argp_failure@@Base+0x354>
   18e74:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18e78:	tst	r3, #32
   18e7c:	bne	192f0 <argp_failure@@Base+0x71c>
   18e80:	tst	r3, #64	; 0x40
   18e84:	beq	18ed0 <argp_failure@@Base+0x2fc>
   18e88:	ldr	r5, [pc, #3944]	; 19df8 <argp_failure@@Base+0x1224>
   18e8c:	ldr	r2, [r5]
   18e90:	cmp	r2, #0
   18e94:	beq	18ed0 <argp_failure@@Base+0x2fc>
   18e98:	cmp	r4, #0
   18e9c:	beq	18ec4 <argp_failure@@Base+0x2f0>
   18ea0:	ldr	r3, [sl, #28]
   18ea4:	ldr	r2, [sl, #32]
   18ea8:	cmp	r3, r2
   18eac:	bcs	1a120 <argp_failure@@Base+0x154c>
   18eb0:	add	r1, r3, #1
   18eb4:	mov	r2, #10
   18eb8:	str	r1, [sl, #28]
   18ebc:	strb	r2, [r3]
   18ec0:	ldr	r2, [r5]
   18ec4:	ldr	r1, [pc, #3888]	; 19dfc <argp_failure@@Base+0x1228>
   18ec8:	mov	r0, sl
   18ecc:	bl	1c518 <argp_error@@Base+0x2108>
   18ed0:	ldr	r0, [fp, #-136]	; 0xffffff78
   18ed4:	bl	116c4 <funlockfile@plt>
   18ed8:	ldr	r3, [fp, #-108]	; 0xffffff94
   18edc:	cmp	r3, #0
   18ee0:	beq	18f18 <argp_failure@@Base+0x344>
   18ee4:	ldr	r0, [r3, #12]
   18ee8:	cmp	r0, #0
   18eec:	beq	18f04 <argp_failure@@Base+0x330>
   18ef0:	ldr	r4, [r0, #24]
   18ef4:	bl	14a30 <argp_parse@@Base+0xf7c>
   18ef8:	subs	r0, r4, #0
   18efc:	bne	18ef0 <argp_failure@@Base+0x31c>
   18f00:	ldr	r3, [fp, #-108]	; 0xffffff94
   18f04:	ldr	r3, [r3, #4]
   18f08:	cmp	r3, #0
   18f0c:	bne	1931c <argp_failure@@Base+0x748>
   18f10:	ldr	r0, [fp, #-108]	; 0xffffff94
   18f14:	bl	14a30 <argp_parse@@Base+0xf7c>
   18f18:	mov	r0, sl
   18f1c:	bl	1c3d8 <argp_error@@Base+0x1fc8>
   18f20:	sub	sp, fp, #32
   18f24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18f28:	ldr	r3, [fp, #-108]	; 0xffffff94
   18f2c:	ldr	r3, [r3, #4]
   18f30:	cmp	r3, #0
   18f34:	str	r3, [fp, #-112]	; 0xffffff90
   18f38:	beq	18e74 <argp_failure@@Base+0x2a0>
   18f3c:	cmp	r4, #0
   18f40:	beq	1a030 <argp_failure@@Base+0x145c>
   18f44:	ldr	r3, [sl, #28]
   18f48:	ldr	r2, [sl, #32]
   18f4c:	cmp	r3, r2
   18f50:	bcs	1a29c <argp_failure@@Base+0x16c8>
   18f54:	add	r1, r3, #1
   18f58:	mov	r2, #10
   18f5c:	str	r1, [sl, #28]
   18f60:	strb	r2, [r3]
   18f64:	ldr	r3, [fp, #-108]	; 0xffffff94
   18f68:	ldr	r2, [fp, #-108]	; 0xffffff94
   18f6c:	ldr	r3, [r3, #4]
   18f70:	ldr	r8, [r2]
   18f74:	str	r3, [fp, #-112]	; 0xffffff90
   18f78:	cmp	r3, #0
   18f7c:	mov	r3, #0
   18f80:	str	r3, [fp, #-88]	; 0xffffffa8
   18f84:	str	r3, [fp, #-84]	; 0xffffffac
   18f88:	str	r3, [fp, #-80]	; 0xffffffb0
   18f8c:	beq	192e0 <argp_failure@@Base+0x70c>
   18f90:	ldr	ip, [sl, #28]
   18f94:	ldr	r3, [sl, #24]
   18f98:	ldr	lr, [sl, #16]
   18f9c:	sub	ip, ip, r3
   18fa0:	cmp	ip, lr
   18fa4:	ldr	r6, [r8]
   18fa8:	ldr	r9, [r8, #8]
   18fac:	bhi	19e90 <argp_failure@@Base+0x12bc>
   18fb0:	ldr	r3, [sl, #4]
   18fb4:	ldr	r0, [r6, #12]
   18fb8:	str	r3, [fp, #-120]	; 0xffffff88
   18fbc:	ldr	r3, [sl, #12]
   18fc0:	mov	r7, #0
   18fc4:	str	r3, [fp, #-124]	; 0xffffff84
   18fc8:	sub	r3, fp, #88	; 0x58
   18fcc:	str	r7, [sl, #4]
   18fd0:	str	r3, [fp, #-68]	; 0xffffffbc
   18fd4:	ldr	r3, [fp, #-104]	; 0xffffff98
   18fd8:	ands	r0, r0, #8
   18fdc:	mov	r2, #1
   18fe0:	str	r2, [fp, #-64]	; 0xffffffc0
   18fe4:	str	r8, [fp, #-76]	; 0xffffffb4
   18fe8:	str	sl, [fp, #-72]	; 0xffffffb8
   18fec:	str	r3, [fp, #-60]	; 0xffffffc4
   18ff0:	strne	r7, [fp, #-132]	; 0xffffff7c
   18ff4:	bne	19030 <argp_failure@@Base+0x45c>
   18ff8:	ldr	r1, [r8, #4]
   18ffc:	cmp	r1, r7
   19000:	beq	1902c <argp_failure@@Base+0x458>
   19004:	add	r2, r6, #24
   19008:	ldr	r3, [r2, #-24]	; 0xffffffe8
   1900c:	cmp	r3, #0
   19010:	beq	19020 <argp_failure@@Base+0x44c>
   19014:	ldr	r3, [r2, #-12]
   19018:	tst	r3, #2
   1901c:	beq	19ed4 <argp_failure@@Base+0x1300>
   19020:	subs	r1, r1, #1
   19024:	add	r2, r2, #24
   19028:	bne	19008 <argp_failure@@Base+0x434>
   1902c:	str	r0, [fp, #-132]	; 0xffffff7c
   19030:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19034:	cmp	ip, lr
   19038:	ldr	r4, [r3, #8]
   1903c:	bhi	19e7c <argp_failure@@Base+0x12a8>
   19040:	str	r4, [sl, #12]
   19044:	ldr	r5, [r8, #4]
   19048:	cmp	r5, #0
   1904c:	beq	190d0 <argp_failure@@Base+0x4fc>
   19050:	str	r8, [fp, #-128]	; 0xffffff80
   19054:	mov	r4, r6
   19058:	mov	r8, r9
   1905c:	b	1906c <argp_failure@@Base+0x498>
   19060:	subs	r5, r5, #1
   19064:	add	r4, r4, #24
   19068:	beq	190c4 <argp_failure@@Base+0x4f0>
   1906c:	ldr	r7, [r4, #12]
   19070:	tst	r7, #8
   19074:	bne	19060 <argp_failure@@Base+0x48c>
   19078:	ldr	r9, [r4, #4]
   1907c:	sub	r2, r9, #1
   19080:	cmp	r2, #254	; 0xfe
   19084:	bhi	19060 <argp_failure@@Base+0x48c>
   19088:	bl	11784 <__ctype_b_loc@plt>
   1908c:	lsl	r2, r9, #1
   19090:	ldr	r1, [r0]
   19094:	ldrh	r2, [r1, r2]
   19098:	tst	r2, #16384	; 0x4000
   1909c:	beq	19060 <argp_failure@@Base+0x48c>
   190a0:	ldrb	r2, [r8]
   190a4:	cmp	r9, r2
   190a8:	bne	19060 <argp_failure@@Base+0x48c>
   190ac:	tst	r7, #2
   190b0:	beq	19bf4 <argp_failure@@Base+0x1020>
   190b4:	subs	r5, r5, #1
   190b8:	add	r8, r8, #1
   190bc:	add	r4, r4, #24
   190c0:	bne	1906c <argp_failure@@Base+0x498>
   190c4:	ldr	r0, [r6, #12]
   190c8:	ldr	r8, [fp, #-128]	; 0xffffff80
   190cc:	and	r0, r0, #8
   190d0:	ldr	r3, [sl, #28]
   190d4:	ldr	r1, [sl, #24]
   190d8:	cmp	r0, #0
   190dc:	ldr	r2, [sl, #16]
   190e0:	sub	r3, r3, r1
   190e4:	beq	19b60 <argp_failure@@Base+0xf8c>
   190e8:	cmp	r3, r2
   190ec:	ldr	r3, [fp, #-96]	; 0xffffffa0
   190f0:	ldr	r4, [r3, #16]
   190f4:	bhi	19eec <argp_failure@@Base+0x1318>
   190f8:	str	r4, [sl, #12]
   190fc:	ldr	r5, [r8, #4]
   19100:	cmp	r5, #0
   19104:	addne	r4, r6, #24
   19108:	bne	1911c <argp_failure@@Base+0x548>
   1910c:	b	191ac <argp_failure@@Base+0x5d8>
   19110:	subs	r5, r5, #1
   19114:	add	r4, r4, #24
   19118:	beq	191ac <argp_failure@@Base+0x5d8>
   1911c:	ldr	r3, [r4, #-24]	; 0xffffffe8
   19120:	cmp	r3, #0
   19124:	beq	19110 <argp_failure@@Base+0x53c>
   19128:	ldr	r3, [r4, #-12]
   1912c:	tst	r3, #2
   19130:	bne	19110 <argp_failure@@Base+0x53c>
   19134:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19138:	sub	r1, fp, #76	; 0x4c
   1913c:	ldr	r0, [r3, #16]
   19140:	bl	17af4 <argp_parse@@Base+0x4040>
   19144:	ldr	r9, [r4, #-24]	; 0xffffffe8
   19148:	mov	r0, r9
   1914c:	bl	117b4 <strlen@plt>
   19150:	subs	r7, r0, #0
   19154:	beq	19110 <argp_failure@@Base+0x53c>
   19158:	ldr	r2, [sl, #28]
   1915c:	ldr	lr, [sl, #32]
   19160:	add	ip, r2, r7
   19164:	cmp	lr, ip
   19168:	mov	r1, r7
   1916c:	mov	r0, sl
   19170:	bcs	19184 <argp_failure@@Base+0x5b0>
   19174:	bl	1c418 <argp_error@@Base+0x2008>
   19178:	cmp	r0, #0
   1917c:	beq	19110 <argp_failure@@Base+0x53c>
   19180:	ldr	r2, [sl, #28]
   19184:	mov	r0, r2
   19188:	mov	r1, r9
   1918c:	mov	r2, r7
   19190:	bl	11610 <memcpy@plt>
   19194:	ldr	r2, [sl, #28]
   19198:	subs	r5, r5, #1
   1919c:	add	r3, r2, r7
   191a0:	str	r3, [sl, #28]
   191a4:	add	r4, r4, #24
   191a8:	bne	1911c <argp_failure@@Base+0x548>
   191ac:	ldr	r3, [sl, #28]
   191b0:	ldr	r1, [sl, #24]
   191b4:	ldr	r2, [sl, #16]
   191b8:	sub	r3, r3, r1
   191bc:	cmp	r3, r2
   191c0:	bhi	19db4 <argp_failure@@Base+0x11e0>
   191c4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   191c8:	mov	r3, #0
   191cc:	cmp	r2, r3
   191d0:	str	r3, [sl, #4]
   191d4:	beq	19c74 <argp_failure@@Base+0x10a0>
   191d8:	ldr	r3, [r6, #12]
   191dc:	tst	r3, #8
   191e0:	bne	1920c <argp_failure@@Base+0x638>
   191e4:	ldr	r4, [r6, #4]
   191e8:	sub	r3, r4, #1
   191ec:	cmp	r3, #254	; 0xfe
   191f0:	bhi	1920c <argp_failure@@Base+0x638>
   191f4:	bl	11784 <__ctype_b_loc@plt>
   191f8:	lsl	r4, r4, #1
   191fc:	ldr	r3, [r0]
   19200:	ldrh	r3, [r3, r4]
   19204:	tst	r3, #16384	; 0x4000
   19208:	bne	19218 <argp_failure@@Base+0x644>
   1920c:	ldr	r3, [r6]
   19210:	cmp	r3, #0
   19214:	beq	1a13c <argp_failure@@Base+0x1568>
   19218:	ldr	r3, [sl, #28]
   1921c:	ldr	r1, [sl, #24]
   19220:	ldr	r2, [sl, #16]
   19224:	sub	r3, r3, r1
   19228:	cmp	r3, r2
   1922c:	bhi	19dc0 <argp_failure@@Base+0x11ec>
   19230:	ldr	r3, [fp, #-120]	; 0xffffff88
   19234:	str	r3, [sl, #4]
   19238:	ldr	r3, [fp, #-112]	; 0xffffff90
   1923c:	add	r8, r8, #28
   19240:	subs	r3, r3, #1
   19244:	str	r3, [fp, #-112]	; 0xffffff90
   19248:	ldr	r3, [fp, #-124]	; 0xffffff84
   1924c:	str	r3, [sl, #12]
   19250:	bne	18f90 <argp_failure@@Base+0x3bc>
   19254:	ldr	r3, [fp, #-80]	; 0xffffffb0
   19258:	cmp	r3, #0
   1925c:	beq	192e0 <argp_failure@@Base+0x70c>
   19260:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19264:	ldr	r3, [r3, #4]
   19268:	cmp	r3, #0
   1926c:	beq	192e0 <argp_failure@@Base+0x70c>
   19270:	ldr	r1, [fp, #-104]	; 0xffffff98
   19274:	cmp	r1, #0
   19278:	beq	1a300 <argp_failure@@Base+0x172c>
   1927c:	ldr	r4, [r1]
   19280:	cmp	r4, #0
   19284:	beq	1a330 <argp_failure@@Base+0x175c>
   19288:	ldr	r3, [r4, #20]
   1928c:	cmp	r3, #0
   19290:	beq	1a200 <argp_failure@@Base+0x162c>
   19294:	mov	r0, r4
   19298:	bl	148d4 <argp_parse@@Base+0xe20>
   1929c:	ldr	r9, [pc, #3028]	; 19e78 <argp_failure@@Base+0x12a4>
   192a0:	ldr	r3, [r4, #20]
   192a4:	mov	r1, r9
   192a8:	mov	r2, r0
   192ac:	ldr	r0, [pc, #2892]	; 19e00 <argp_failure@@Base+0x122c>
   192b0:	blx	r3
   192b4:	subs	r4, r0, #0
   192b8:	beq	192e0 <argp_failure@@Base+0x70c>
   192bc:	ldrb	r3, [r4]
   192c0:	subs	r9, r4, r9
   192c4:	movne	r9, #1
   192c8:	cmp	r3, #0
   192cc:	bne	1a208 <argp_failure@@Base+0x1634>
   192d0:	cmp	r9, #0
   192d4:	beq	192e0 <argp_failure@@Base+0x70c>
   192d8:	mov	r0, r4
   192dc:	bl	14a30 <argp_parse@@Base+0xf7c>
   192e0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   192e4:	mov	r4, #1
   192e8:	tst	r3, #32
   192ec:	beq	18e80 <argp_failure@@Base+0x2ac>
   192f0:	mov	r3, #0
   192f4:	str	r3, [sp]
   192f8:	str	sl, [sp, #4]
   192fc:	mov	r3, r4
   19300:	ldr	r1, [fp, #-104]	; 0xffffff98
   19304:	ldr	r0, [fp, #-116]	; 0xffffff8c
   19308:	mov	r2, #1
   1930c:	bl	160cc <argp_parse@@Base+0x2618>
   19310:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19314:	orr	r4, r4, r0
   19318:	b	18e80 <argp_failure@@Base+0x2ac>
   1931c:	ldr	r4, [fp, #-108]	; 0xffffff94
   19320:	ldr	r0, [r4]
   19324:	bl	14a30 <argp_parse@@Base+0xf7c>
   19328:	ldr	r0, [r4, #8]
   1932c:	bl	14a30 <argp_parse@@Base+0xf7c>
   19330:	b	18f10 <argp_failure@@Base+0x33c>
   19334:	ldr	r0, [pc, #2760]	; 19e04 <argp_failure@@Base+0x1230>
   19338:	bl	11718 <getenv@plt>
   1933c:	ldr	lr, [fp, #-96]	; 0xffffffa0
   19340:	sub	r3, fp, #76	; 0x4c
   19344:	mov	ip, r3
   19348:	str	r3, [fp, #-112]	; 0xffffff90
   1934c:	mov	r5, r0
   19350:	ldm	lr!, {r0, r1, r2, r3}
   19354:	cmp	r5, #0
   19358:	stmia	ip!, {r0, r1, r2, r3}
   1935c:	ldm	lr!, {r0, r1, r2, r3}
   19360:	stmia	ip!, {r0, r1, r2, r3}
   19364:	ldm	lr, {r0, r1}
   19368:	stm	ip, {r0, r1}
   1936c:	beq	18e20 <argp_failure@@Base+0x24c>
   19370:	ldrb	r8, [r5]
   19374:	ldr	r9, [pc, #2700]	; 19e08 <argp_failure@@Base+0x1234>
   19378:	str	sl, [fp, #-120]	; 0xffffff88
   1937c:	cmp	r8, #0
   19380:	beq	19534 <argp_failure@@Base+0x960>
   19384:	bl	11784 <__ctype_b_loc@plt>
   19388:	mov	r7, r0
   1938c:	ldr	r0, [r0]
   19390:	b	19398 <argp_failure@@Base+0x7c4>
   19394:	ldrb	r8, [r5, #1]!
   19398:	lsl	r3, r8, #1
   1939c:	ldrh	r1, [r0, r3]
   193a0:	tst	r1, #8192	; 0x2000
   193a4:	bne	19394 <argp_failure@@Base+0x7c0>
   193a8:	ands	r2, r1, #1024	; 0x400
   193ac:	beq	1952c <argp_failure@@Base+0x958>
   193b0:	cmp	r8, #95	; 0x5f
   193b4:	cmpne	r8, #45	; 0x2d
   193b8:	lsl	r3, r1, #28
   193bc:	moveq	r6, #1
   193c0:	movne	r6, #0
   193c4:	orrs	r6, r6, r3, lsr #31
   193c8:	beq	19fd0 <argp_failure@@Base+0x13fc>
   193cc:	mov	r4, r5
   193d0:	ldrb	r3, [r4, #1]!
   193d4:	cmp	r3, #95	; 0x5f
   193d8:	cmpne	r3, #45	; 0x2d
   193dc:	lsl	r1, r3, #1
   193e0:	moveq	r2, #1
   193e4:	ldrh	r1, [r0, r1]
   193e8:	movne	r2, #0
   193ec:	lsl	ip, r1, #28
   193f0:	orrs	r2, r2, ip, lsr #31
   193f4:	bne	193d0 <argp_failure@@Base+0x7fc>
   193f8:	tst	r1, #8192	; 0x2000
   193fc:	sub	r6, r4, r5
   19400:	beq	19418 <argp_failure@@Base+0x844>
   19404:	ldrb	r3, [r4, #1]!
   19408:	lsl	r2, r3, #1
   1940c:	ldrh	r1, [r0, r2]
   19410:	tst	r1, #8192	; 0x2000
   19414:	bne	19404 <argp_failure@@Base+0x830>
   19418:	cmp	r3, #44	; 0x2c
   1941c:	cmpne	r3, #0
   19420:	beq	195b8 <argp_failure@@Base+0x9e4>
   19424:	cmp	r3, #61	; 0x3d
   19428:	beq	19b30 <argp_failure@@Base+0xf5c>
   1942c:	tst	r1, #2048	; 0x800
   19430:	bne	19aa0 <argp_failure@@Base+0xecc>
   19434:	ldr	r3, [fp, #-120]	; 0xffffff88
   19438:	mov	sl, r3
   1943c:	str	r3, [fp, #-108]	; 0xffffff94
   19440:	mov	r0, r9
   19444:	bl	117b4 <strlen@plt>
   19448:	cmp	r6, r0
   1944c:	beq	195d8 <argp_failure@@Base+0xa04>
   19450:	ldr	r0, [pc, #2484]	; 19e0c <argp_failure@@Base+0x1238>
   19454:	bl	117b4 <strlen@plt>
   19458:	cmp	r6, r0
   1945c:	mov	r7, r0
   19460:	beq	1966c <argp_failure@@Base+0xa98>
   19464:	ldr	r0, [pc, #2556]	; 19e68 <argp_failure@@Base+0x1294>
   19468:	bl	117b4 <strlen@plt>
   1946c:	cmp	r6, r0
   19470:	mov	r7, r0
   19474:	beq	19620 <argp_failure@@Base+0xa4c>
   19478:	ldr	r0, [pc, #2532]	; 19e64 <argp_failure@@Base+0x1290>
   1947c:	bl	117b4 <strlen@plt>
   19480:	cmp	r6, r0
   19484:	mov	r7, r0
   19488:	beq	1968c <argp_failure@@Base+0xab8>
   1948c:	ldr	r0, [pc, #2500]	; 19e58 <argp_failure@@Base+0x1284>
   19490:	bl	117b4 <strlen@plt>
   19494:	cmp	r6, r0
   19498:	mov	r7, r0
   1949c:	beq	196ac <argp_failure@@Base+0xad8>
   194a0:	ldr	r8, [pc, #2504]	; 19e70 <argp_failure@@Base+0x129c>
   194a4:	mov	r0, r8
   194a8:	bl	117b4 <strlen@plt>
   194ac:	cmp	r6, r0
   194b0:	mov	r7, r0
   194b4:	beq	196cc <argp_failure@@Base+0xaf8>
   194b8:	ldr	r8, [pc, #2476]	; 19e6c <argp_failure@@Base+0x1298>
   194bc:	mov	r0, r8
   194c0:	bl	117b4 <strlen@plt>
   194c4:	cmp	r6, r0
   194c8:	mov	r7, r0
   194cc:	beq	196e8 <argp_failure@@Base+0xb14>
   194d0:	ldr	r8, [pc, #2460]	; 19e74 <argp_failure@@Base+0x12a0>
   194d4:	mov	r0, r8
   194d8:	bl	117b4 <strlen@plt>
   194dc:	cmp	r6, r0
   194e0:	mov	r7, r0
   194e4:	beq	19704 <argp_failure@@Base+0xb30>
   194e8:	ldr	r8, [pc, #2336]	; 19e10 <argp_failure@@Base+0x123c>
   194ec:	mov	r0, r8
   194f0:	bl	117b4 <strlen@plt>
   194f4:	cmp	r0, r6
   194f8:	beq	19720 <argp_failure@@Base+0xb4c>
   194fc:	mov	r2, #0
   19500:	str	r5, [sp, #4]
   19504:	str	r6, [sp]
   19508:	mov	r1, r2
   1950c:	ldr	r3, [pc, #2304]	; 19e14 <argp_failure@@Base+0x1240>
   19510:	ldr	r0, [fp, #-104]	; 0xffffff98
   19514:	bl	18bd4 <argp_failure@@Base>
   19518:	ldrb	r8, [r4]
   1951c:	cmp	r8, #44	; 0x2c
   19520:	beq	19614 <argp_failure@@Base+0xa40>
   19524:	mov	r5, r4
   19528:	b	1937c <argp_failure@@Base+0x7a8>
   1952c:	cmp	r8, #0
   19530:	bne	1a0dc <argp_failure@@Base+0x1508>
   19534:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19538:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1953c:	cmp	r3, r2
   19540:	ble	1a2c0 <argp_failure@@Base+0x16ec>
   19544:	ldr	r2, [fp, #-64]	; 0xffffffc0
   19548:	cmp	r3, r2
   1954c:	ble	1a118 <argp_failure@@Base+0x1544>
   19550:	ldr	r2, [fp, #-60]	; 0xffffffc4
   19554:	cmp	r3, r2
   19558:	ble	1a0f4 <argp_failure@@Base+0x1520>
   1955c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19560:	cmp	r3, r2
   19564:	ble	1a2f8 <argp_failure@@Base+0x1724>
   19568:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1956c:	cmp	r3, r2
   19570:	ble	1a2f0 <argp_failure@@Base+0x171c>
   19574:	ldr	r2, [fp, #-48]	; 0xffffffd0
   19578:	cmp	r3, r2
   1957c:	ble	1a30c <argp_failure@@Base+0x1738>
   19580:	ldr	lr, [fp, #-112]	; 0xffffff90
   19584:	ldr	r3, [pc, #2152]	; 19df4 <argp_failure@@Base+0x1220>
   19588:	mov	r4, #1
   1958c:	mov	r5, r3
   19590:	str	r3, [fp, #-96]	; 0xffffffa0
   19594:	ldm	lr!, {r0, r1, r2, r3}
   19598:	mov	ip, r5
   1959c:	stmia	ip!, {r0, r1, r2, r3}
   195a0:	ldm	lr!, {r0, r1, r2, r3}
   195a4:	stmia	ip!, {r0, r1, r2, r3}
   195a8:	ldm	lr, {r0, r1}
   195ac:	stm	ip, {r0, r1}
   195b0:	str	r4, [r5, #36]	; 0x24
   195b4:	b	18e20 <argp_failure@@Base+0x24c>
   195b8:	cmp	r8, #110	; 0x6e
   195bc:	beq	19b00 <argp_failure@@Base+0xf2c>
   195c0:	mov	sl, #1
   195c4:	mov	r0, r9
   195c8:	str	sl, [fp, #-108]	; 0xffffff94
   195cc:	bl	117b4 <strlen@plt>
   195d0:	cmp	r6, r0
   195d4:	bne	19450 <argp_failure@@Base+0x87c>
   195d8:	mov	r2, r6
   195dc:	mov	r1, r9
   195e0:	mov	r0, r5
   195e4:	bl	11958 <strncmp@plt>
   195e8:	cmp	r0, #0
   195ec:	bne	19450 <argp_failure@@Base+0x87c>
   195f0:	mov	r8, r9
   195f4:	ldrb	r3, [r8, #15]
   195f8:	ldrb	r8, [r4]
   195fc:	sub	r2, fp, #36	; 0x24
   19600:	add	r3, r2, r3
   19604:	ldr	r2, [fp, #-108]	; 0xffffff94
   19608:	cmp	r8, #44	; 0x2c
   1960c:	str	r2, [r3, #-40]	; 0xffffffd8
   19610:	bne	19524 <argp_failure@@Base+0x950>
   19614:	ldrb	r8, [r4, #1]
   19618:	add	r4, r4, #1
   1961c:	b	19524 <argp_failure@@Base+0x950>
   19620:	mov	r2, r0
   19624:	ldr	r1, [pc, #2108]	; 19e68 <argp_failure@@Base+0x1294>
   19628:	mov	r0, r5
   1962c:	bl	11958 <strncmp@plt>
   19630:	cmp	r0, #0
   19634:	bne	19478 <argp_failure@@Base+0x8a4>
   19638:	ldr	r8, [pc, #2088]	; 19e68 <argp_failure@@Base+0x1294>
   1963c:	cmp	sl, #0
   19640:	beq	195f4 <argp_failure@@Base+0xa20>
   19644:	ldrb	r2, [r8, #14]
   19648:	cmp	r2, #0
   1964c:	bne	195f4 <argp_failure@@Base+0xa20>
   19650:	str	r5, [sp, #4]
   19654:	str	r7, [sp]
   19658:	ldr	r3, [pc, #1976]	; 19e18 <argp_failure@@Base+0x1244>
   1965c:	mov	r1, r2
   19660:	ldr	r0, [fp, #-104]	; 0xffffff98
   19664:	bl	18bd4 <argp_failure@@Base>
   19668:	b	19518 <argp_failure@@Base+0x944>
   1966c:	mov	r2, r0
   19670:	ldr	r1, [pc, #1940]	; 19e0c <argp_failure@@Base+0x1238>
   19674:	mov	r0, r5
   19678:	bl	11958 <strncmp@plt>
   1967c:	cmp	r0, #0
   19680:	bne	19464 <argp_failure@@Base+0x890>
   19684:	ldr	r8, [pc, #1920]	; 19e0c <argp_failure@@Base+0x1238>
   19688:	b	1963c <argp_failure@@Base+0xa68>
   1968c:	mov	r2, r0
   19690:	ldr	r1, [pc, #1996]	; 19e64 <argp_failure@@Base+0x1290>
   19694:	mov	r0, r5
   19698:	bl	11958 <strncmp@plt>
   1969c:	cmp	r0, #0
   196a0:	bne	1948c <argp_failure@@Base+0x8b8>
   196a4:	ldr	r8, [pc, #1976]	; 19e64 <argp_failure@@Base+0x1290>
   196a8:	b	1963c <argp_failure@@Base+0xa68>
   196ac:	mov	r2, r0
   196b0:	ldr	r1, [pc, #1952]	; 19e58 <argp_failure@@Base+0x1284>
   196b4:	mov	r0, r5
   196b8:	bl	11958 <strncmp@plt>
   196bc:	cmp	r0, #0
   196c0:	bne	194a0 <argp_failure@@Base+0x8cc>
   196c4:	ldr	r8, [pc, #1932]	; 19e58 <argp_failure@@Base+0x1284>
   196c8:	b	1963c <argp_failure@@Base+0xa68>
   196cc:	mov	r2, r0
   196d0:	mov	r1, r8
   196d4:	mov	r0, r5
   196d8:	bl	11958 <strncmp@plt>
   196dc:	cmp	r0, #0
   196e0:	bne	194b8 <argp_failure@@Base+0x8e4>
   196e4:	b	1963c <argp_failure@@Base+0xa68>
   196e8:	mov	r2, r0
   196ec:	mov	r1, r8
   196f0:	mov	r0, r5
   196f4:	bl	11958 <strncmp@plt>
   196f8:	cmp	r0, #0
   196fc:	bne	194d0 <argp_failure@@Base+0x8fc>
   19700:	b	1963c <argp_failure@@Base+0xa68>
   19704:	mov	r2, r0
   19708:	mov	r1, r8
   1970c:	mov	r0, r5
   19710:	bl	11958 <strncmp@plt>
   19714:	cmp	r0, #0
   19718:	bne	194e8 <argp_failure@@Base+0x914>
   1971c:	b	1963c <argp_failure@@Base+0xa68>
   19720:	mov	r2, r6
   19724:	mov	r1, r8
   19728:	mov	r0, r5
   1972c:	bl	11958 <strncmp@plt>
   19730:	cmp	r0, #0
   19734:	moveq	r7, r6
   19738:	bne	194fc <argp_failure@@Base+0x928>
   1973c:	b	1963c <argp_failure@@Base+0xa68>
   19740:	ldr	r3, [fp, #4]
   19744:	ldr	r1, [pc, #1744]	; 19e1c <argp_failure@@Base+0x1248>
   19748:	mov	r2, r3
   1974c:	mov	r0, sl
   19750:	bl	1c518 <argp_error@@Base+0x2108>
   19754:	mov	r4, #1
   19758:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1975c:	b	18e6c <argp_failure@@Base+0x298>
   19760:	mov	r1, #0
   19764:	ldr	r0, [fp, #-116]	; 0xffffff8c
   19768:	bl	16678 <argp_parse@@Base+0x2bc4>
   1976c:	ldr	r2, [r0, #4]
   19770:	ldr	r3, [r0]
   19774:	cmp	r2, #0
   19778:	str	r0, [fp, #-108]	; 0xffffff94
   1977c:	str	r2, [fp, #-120]	; 0xffffff88
   19780:	str	r3, [fp, #-112]	; 0xffffff90
   19784:	sub	r6, r2, #1
   19788:	beq	18e50 <argp_failure@@Base+0x27c>
   1978c:	ldr	r5, [pc, #1676]	; 19e20 <argp_failure@@Base+0x124c>
   19790:	mov	r8, r6
   19794:	mov	r7, r3
   19798:	ldm	r7, {r4, r9}
   1979c:	cmp	r9, #0
   197a0:	sub	r9, r9, #1
   197a4:	beq	197e4 <argp_failure@@Base+0xc10>
   197a8:	add	r4, r4, #24
   197ac:	ldr	r3, [r4, #-24]	; 0xffffffe8
   197b0:	mov	r1, r5
   197b4:	subs	r0, r3, #0
   197b8:	sub	r9, r9, #1
   197bc:	beq	197d8 <argp_failure@@Base+0xc04>
   197c0:	ldr	r3, [r4, #-12]
   197c4:	tst	r3, #2
   197c8:	bne	197d8 <argp_failure@@Base+0xc04>
   197cc:	bl	11574 <strcmp@plt>
   197d0:	cmp	r0, #0
   197d4:	beq	19f78 <argp_failure@@Base+0x13a4>
   197d8:	cmn	r9, #1
   197dc:	add	r4, r4, #24
   197e0:	bne	197ac <argp_failure@@Base+0xbd8>
   197e4:	sub	r8, r8, #1
   197e8:	cmn	r8, #1
   197ec:	add	r7, r7, #28
   197f0:	bne	19798 <argp_failure@@Base+0xbc4>
   197f4:	ldr	r7, [fp, #-112]	; 0xffffff90
   197f8:	ldr	r9, [pc, #1572]	; 19e24 <argp_failure@@Base+0x1250>
   197fc:	ldm	r7, {r4, r5}
   19800:	cmp	r5, #0
   19804:	sub	r5, r5, #1
   19808:	beq	19848 <argp_failure@@Base+0xc74>
   1980c:	add	r4, r4, #24
   19810:	ldr	r3, [r4, #-24]	; 0xffffffe8
   19814:	mov	r1, r9
   19818:	subs	r0, r3, #0
   1981c:	sub	r5, r5, #1
   19820:	beq	1983c <argp_failure@@Base+0xc68>
   19824:	ldr	r3, [r4, #-12]
   19828:	tst	r3, #2
   1982c:	bne	1983c <argp_failure@@Base+0xc68>
   19830:	bl	11574 <strcmp@plt>
   19834:	cmp	r0, #0
   19838:	beq	19f30 <argp_failure@@Base+0x135c>
   1983c:	cmn	r5, #1
   19840:	add	r4, r4, #24
   19844:	bne	19810 <argp_failure@@Base+0xc3c>
   19848:	cmp	r6, #0
   1984c:	add	r7, r7, #28
   19850:	sub	r6, r6, #1
   19854:	bne	197fc <argp_failure@@Base+0xc28>
   19858:	ldr	r1, [fp, #-120]	; 0xffffff88
   1985c:	b	19f48 <argp_failure@@Base+0x1374>
   19860:	mov	r2, #1
   19864:	mov	r3, #0
   19868:	stm	sp, {r2, sl}
   1986c:	ldr	r1, [fp, #-104]	; 0xffffff98
   19870:	mov	r2, r3
   19874:	ldr	r0, [fp, #-116]	; 0xffffff8c
   19878:	bl	160cc <argp_parse@@Base+0x2618>
   1987c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19880:	orr	r4, r4, r0
   19884:	b	18e64 <argp_failure@@Base+0x290>
   19888:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1988c:	mov	r4, #1
   19890:	ldr	r8, [pc, #1424]	; 19e28 <argp_failure@@Base+0x1254>
   19894:	ldr	r1, [r3, #16]
   19898:	ldr	r0, [r3, #8]
   1989c:	bl	17078 <argp_parse@@Base+0x35c4>
   198a0:	mov	r1, #0
   198a4:	mov	r6, r4
   198a8:	add	r3, r0, #14
   198ac:	bic	r3, r3, #7
   198b0:	sub	sp, sp, r3
   198b4:	add	r7, sp, #8
   198b8:	mov	r2, r0
   198bc:	mov	r0, r7
   198c0:	bl	11808 <memset@plt>
   198c4:	sub	r3, fp, #76	; 0x4c
   198c8:	str	r3, [fp, #-112]	; 0xffffff90
   198cc:	str	r7, [fp, #-120]	; 0xffffff88
   198d0:	ldr	r5, [fp, #-96]	; 0xffffffa0
   198d4:	b	199f4 <argp_failure@@Base+0xe20>
   198d8:	cmp	r4, #0
   198dc:	ldr	r3, [fp, #-120]	; 0xffffff88
   198e0:	ldr	r7, [sl, #12]
   198e4:	ldrne	r2, [pc, #1344]	; 19e2c <argp_failure@@Base+0x1258>
   198e8:	str	r9, [sl, #12]
   198ec:	ldreq	r2, [pc, #1340]	; 19e30 <argp_failure@@Base+0x125c>
   198f0:	str	r3, [fp, #-76]	; 0xffffffb4
   198f4:	mov	r1, r8
   198f8:	ldr	r3, [fp, #4]
   198fc:	mov	r0, sl
   19900:	bl	1c518 <argp_error@@Base+0x2108>
   19904:	ldr	r3, [sl, #28]
   19908:	ldr	r1, [sl, #24]
   1990c:	ldr	r2, [sl, #16]
   19910:	sub	r3, r3, r1
   19914:	cmp	r3, r2
   19918:	ldr	r9, [r5, #28]
   1991c:	bhi	19a6c <argp_failure@@Base+0xe98>
   19920:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19924:	ldr	r4, [sl, #4]
   19928:	tst	r3, #2
   1992c:	str	r9, [sl, #4]
   19930:	beq	19a78 <argp_failure@@Base+0xea4>
   19934:	ldr	r3, [fp, #-108]	; 0xffffff94
   19938:	ldr	r3, [r3, #4]
   1993c:	cmp	r3, #0
   19940:	beq	19990 <argp_failure@@Base+0xdbc>
   19944:	ldr	ip, [sl, #28]
   19948:	ldr	r2, [sl, #32]
   1994c:	add	r3, ip, #12
   19950:	cmp	r2, r3
   19954:	bcs	19970 <argp_failure@@Base+0xd9c>
   19958:	mov	r1, #12
   1995c:	mov	r0, sl
   19960:	bl	1c418 <argp_error@@Base+0x2008>
   19964:	cmp	r0, #0
   19968:	beq	19990 <argp_failure@@Base+0xdbc>
   1996c:	ldr	ip, [sl, #28]
   19970:	ldr	r3, [pc, #1212]	; 19e34 <argp_failure@@Base+0x1260>
   19974:	ldm	r3!, {r0, r1, r2}
   19978:	str	r0, [ip]
   1997c:	str	r1, [ip, #4]
   19980:	str	r2, [ip, #8]
   19984:	ldr	r3, [sl, #28]
   19988:	add	r3, r3, #12
   1998c:	str	r3, [sl, #28]
   19990:	mov	r3, r6
   19994:	ldr	r1, [fp, #-104]	; 0xffffff98
   19998:	str	sl, [sp]
   1999c:	ldr	r2, [fp, #-112]	; 0xffffff90
   199a0:	ldr	r0, [fp, #-116]	; 0xffffff8c
   199a4:	bl	16d98 <argp_parse@@Base+0x32e4>
   199a8:	ldr	r3, [sl, #28]
   199ac:	ldr	r1, [sl, #24]
   199b0:	sub	r1, r3, r1
   199b4:	mov	r9, r0
   199b8:	ldr	r0, [sl, #16]
   199bc:	cmp	r1, r0
   199c0:	strls	r7, [sl, #12]
   199c4:	bhi	19a38 <argp_failure@@Base+0xe64>
   199c8:	ldr	r1, [sl, #32]
   199cc:	str	r4, [sl, #4]
   199d0:	cmp	r1, r3
   199d4:	bls	19a1c <argp_failure@@Base+0xe48>
   199d8:	add	r1, r3, #1
   199dc:	mov	r2, #10
   199e0:	str	r1, [sl, #28]
   199e4:	strb	r2, [r3]
   199e8:	cmp	r9, #0
   199ec:	mov	r4, #0
   199f0:	beq	19a94 <argp_failure@@Base+0xec0>
   199f4:	ldr	r3, [sl, #28]
   199f8:	ldr	r1, [sl, #24]
   199fc:	ldr	r2, [sl, #16]
   19a00:	sub	r3, r3, r1
   19a04:	cmp	r3, r2
   19a08:	ldr	r9, [r5, #28]
   19a0c:	bls	198d8 <argp_failure@@Base+0xd04>
   19a10:	mov	r0, sl
   19a14:	bl	1be6c <argp_error@@Base+0x1a5c>
   19a18:	b	198d8 <argp_failure@@Base+0xd04>
   19a1c:	mov	r1, r6
   19a20:	mov	r0, sl
   19a24:	bl	1c418 <argp_error@@Base+0x2008>
   19a28:	cmp	r0, #0
   19a2c:	beq	199e8 <argp_failure@@Base+0xe14>
   19a30:	ldr	r3, [sl, #28]
   19a34:	b	199d8 <argp_failure@@Base+0xe04>
   19a38:	mov	r0, sl
   19a3c:	bl	1be6c <argp_error@@Base+0x1a5c>
   19a40:	ldr	r3, [sl, #28]
   19a44:	ldr	r1, [sl, #24]
   19a48:	ldr	r0, [sl, #16]
   19a4c:	sub	r1, r3, r1
   19a50:	cmp	r1, r0
   19a54:	str	r7, [sl, #12]
   19a58:	bls	199c8 <argp_failure@@Base+0xdf4>
   19a5c:	mov	r0, sl
   19a60:	bl	1be6c <argp_error@@Base+0x1a5c>
   19a64:	ldr	r3, [sl, #28]
   19a68:	b	199c8 <argp_failure@@Base+0xdf4>
   19a6c:	mov	r0, sl
   19a70:	bl	1be6c <argp_error@@Base+0x1a5c>
   19a74:	b	19920 <argp_failure@@Base+0xd4c>
   19a78:	mov	r1, sl
   19a7c:	ldr	r0, [fp, #-108]	; 0xffffff94
   19a80:	bl	173c4 <argp_parse@@Base+0x3910>
   19a84:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19a88:	orr	r3, r3, #2
   19a8c:	str	r3, [fp, #-100]	; 0xffffff9c
   19a90:	b	19990 <argp_failure@@Base+0xdbc>
   19a94:	mov	r4, #1
   19a98:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19a9c:	b	18e5c <argp_failure@@Base+0x288>
   19aa0:	mov	r2, #10
   19aa4:	mov	r1, #0
   19aa8:	mov	r0, r4
   19aac:	bl	11580 <strtol@plt>
   19ab0:	ldrb	r3, [r4]
   19ab4:	ldr	r2, [r7]
   19ab8:	lsl	r3, r3, #1
   19abc:	ldrh	r3, [r2, r3]
   19ac0:	tst	r3, #2048	; 0x800
   19ac4:	str	r0, [fp, #-108]	; 0xffffff94
   19ac8:	beq	19af0 <argp_failure@@Base+0xf1c>
   19acc:	ldrb	r3, [r4, #1]!
   19ad0:	lsl	r3, r3, #1
   19ad4:	ldrh	r3, [r2, r3]
   19ad8:	tst	r3, #2048	; 0x800
   19adc:	bne	19acc <argp_failure@@Base+0xef8>
   19ae0:	b	19af0 <argp_failure@@Base+0xf1c>
   19ae4:	ldrb	r3, [r4, #1]!
   19ae8:	lsl	r3, r3, #1
   19aec:	ldrh	r3, [r2, r3]
   19af0:	tst	r3, #8192	; 0x2000
   19af4:	bne	19ae4 <argp_failure@@Base+0xf10>
   19af8:	ldr	sl, [fp, #-120]	; 0xffffff88
   19afc:	b	19440 <argp_failure@@Base+0x86c>
   19b00:	ldrb	r3, [r5, #1]
   19b04:	cmp	r3, #111	; 0x6f
   19b08:	bne	195c0 <argp_failure@@Base+0x9ec>
   19b0c:	ldrb	r3, [r5, #2]
   19b10:	cmp	r3, #45	; 0x2d
   19b14:	bne	195c0 <argp_failure@@Base+0x9ec>
   19b18:	ldr	r3, [fp, #-120]	; 0xffffff88
   19b1c:	add	r5, r5, #3
   19b20:	sub	r6, r6, #3
   19b24:	str	r3, [fp, #-108]	; 0xffffff94
   19b28:	mov	sl, #1
   19b2c:	b	19440 <argp_failure@@Base+0x86c>
   19b30:	ldrb	r3, [r4, #1]
   19b34:	add	r4, r4, #1
   19b38:	lsl	r3, r3, #1
   19b3c:	ldrh	r1, [r0, r3]
   19b40:	tst	r1, #8192	; 0x2000
   19b44:	beq	1942c <argp_failure@@Base+0x858>
   19b48:	ldrb	r3, [r4, #1]!
   19b4c:	lsl	r3, r3, #1
   19b50:	ldrh	r1, [r0, r3]
   19b54:	tst	r1, #8192	; 0x2000
   19b58:	bne	19b48 <argp_failure@@Base+0xf74>
   19b5c:	b	1942c <argp_failure@@Base+0x858>
   19b60:	cmp	r3, r2
   19b64:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19b68:	ldr	r4, [r3, #12]
   19b6c:	bhi	19ee0 <argp_failure@@Base+0x130c>
   19b70:	str	r4, [sl, #12]
   19b74:	ldr	r5, [r8, #4]
   19b78:	cmp	r5, #0
   19b7c:	beq	191ac <argp_failure@@Base+0x5d8>
   19b80:	add	r4, r6, #24
   19b84:	ldr	r7, [fp, #-96]	; 0xffffffa0
   19b88:	b	19b98 <argp_failure@@Base+0xfc4>
   19b8c:	subs	r5, r5, #1
   19b90:	add	r4, r4, #24
   19b94:	beq	191ac <argp_failure@@Base+0x5d8>
   19b98:	ldr	r3, [r4, #-24]	; 0xffffffe8
   19b9c:	cmp	r3, #0
   19ba0:	beq	19b8c <argp_failure@@Base+0xfb8>
   19ba4:	ldr	r3, [r4, #-12]
   19ba8:	tst	r3, #2
   19bac:	bne	19b8c <argp_failure@@Base+0xfb8>
   19bb0:	sub	r1, fp, #76	; 0x4c
   19bb4:	ldr	r0, [r7, #12]
   19bb8:	bl	17af4 <argp_parse@@Base+0x4040>
   19bbc:	ldr	r2, [r4, #-24]	; 0xffffffe8
   19bc0:	ldr	r1, [pc, #624]	; 19e38 <argp_failure@@Base+0x1264>
   19bc4:	mov	r0, sl
   19bc8:	bl	1c518 <argp_error@@Base+0x2108>
   19bcc:	ldr	r3, [r6, #8]
   19bd0:	ldr	r1, [pc, #612]	; 19e3c <argp_failure@@Base+0x1268>
   19bd4:	subs	r2, r3, #0
   19bd8:	mov	r0, sl
   19bdc:	beq	19b8c <argp_failure@@Base+0xfb8>
   19be0:	ldr	ip, [r6, #12]
   19be4:	tst	ip, #1
   19be8:	ldrne	r1, [pc, #592]	; 19e40 <argp_failure@@Base+0x126c>
   19bec:	bl	1c518 <argp_error@@Base+0x2108>
   19bf0:	b	19b8c <argp_failure@@Base+0xfb8>
   19bf4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19bf8:	sub	r1, fp, #76	; 0x4c
   19bfc:	ldr	r0, [r3, #8]
   19c00:	bl	17af4 <argp_parse@@Base+0x4040>
   19c04:	ldr	r2, [sl, #28]
   19c08:	ldr	r1, [sl, #32]
   19c0c:	cmp	r2, r1
   19c10:	bcs	19f14 <argp_failure@@Base+0x1340>
   19c14:	add	r1, r2, #1
   19c18:	mov	r3, #45	; 0x2d
   19c1c:	str	r1, [sl, #28]
   19c20:	strb	r3, [r2]
   19c24:	ldr	r2, [sl, #28]
   19c28:	ldr	r1, [sl, #32]
   19c2c:	ldrb	r7, [r8]
   19c30:	cmp	r2, r1
   19c34:	bcs	19ef8 <argp_failure@@Base+0x1324>
   19c38:	add	r1, r2, #1
   19c3c:	str	r1, [sl, #28]
   19c40:	strb	r7, [r2]
   19c44:	ldr	r3, [fp, #-132]	; 0xffffff7c
   19c48:	cmp	r3, #0
   19c4c:	beq	19eac <argp_failure@@Base+0x12d8>
   19c50:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19c54:	ldr	r2, [r3]
   19c58:	cmp	r2, #0
   19c5c:	bne	19eac <argp_failure@@Base+0x12d8>
   19c60:	ldr	r2, [r6, #8]
   19c64:	cmp	r2, #0
   19c68:	movne	r3, #1
   19c6c:	strne	r3, [fp, #-80]	; 0xffffffb0
   19c70:	b	190b4 <argp_failure@@Base+0x4e0>
   19c74:	ldr	r5, [r8, #20]
   19c78:	ldr	r9, [r6, #16]
   19c7c:	cmp	r5, #0
   19c80:	beq	19f9c <argp_failure@@Base+0x13c8>
   19c84:	ldr	r3, [r5, #20]
   19c88:	cmp	r3, #0
   19c8c:	beq	19f9c <argp_failure@@Base+0x13c8>
   19c90:	ldr	r1, [fp, #-104]	; 0xffffff98
   19c94:	mov	r0, r5
   19c98:	ldr	r4, [r6, #4]
   19c9c:	bl	148d4 <argp_parse@@Base+0xe20>
   19ca0:	ldr	r3, [r5, #20]
   19ca4:	mov	r1, r9
   19ca8:	mov	r2, r0
   19cac:	mov	r0, r4
   19cb0:	blx	r3
   19cb4:	mov	r4, r0
   19cb8:	cmp	r4, #0
   19cbc:	beq	19d70 <argp_failure@@Base+0x119c>
   19cc0:	ldrb	r3, [r4]
   19cc4:	cmp	r3, #0
   19cc8:	beq	19d60 <argp_failure@@Base+0x118c>
   19ccc:	ldr	r3, [sl, #28]
   19cd0:	ldr	r2, [sl, #24]
   19cd4:	ldr	r1, [sl, #16]
   19cd8:	sub	r2, r3, r2
   19cdc:	cmp	r2, r1
   19ce0:	bhi	1a068 <argp_failure@@Base+0x1494>
   19ce4:	ldr	r6, [sl, #20]
   19ce8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19cec:	bic	r6, r6, r6, asr #31
   19cf0:	ldr	r5, [r2, #20]
   19cf4:	mov	r7, r5
   19cf8:	str	r5, [sl, #4]
   19cfc:	add	r2, r5, #3
   19d00:	cmp	r2, r6
   19d04:	str	r7, [sl, #12]
   19d08:	bcs	19fdc <argp_failure@@Base+0x1408>
   19d0c:	ldr	r2, [sl, #32]
   19d10:	cmp	r2, r3
   19d14:	bls	1a1e4 <argp_failure@@Base+0x1610>
   19d18:	add	r1, r3, #1
   19d1c:	mov	r2, #10
   19d20:	str	r1, [sl, #28]
   19d24:	strb	r2, [r3]
   19d28:	mov	r0, r4
   19d2c:	bl	117b4 <strlen@plt>
   19d30:	subs	r5, r0, #0
   19d34:	beq	19d60 <argp_failure@@Base+0x118c>
   19d38:	ldr	r0, [sl, #28]
   19d3c:	ldr	r2, [sl, #32]
   19d40:	add	r3, r0, r5
   19d44:	cmp	r2, r3
   19d48:	bcs	1a04c <argp_failure@@Base+0x1478>
   19d4c:	mov	r1, r5
   19d50:	mov	r0, sl
   19d54:	bl	1c418 <argp_error@@Base+0x2008>
   19d58:	cmp	r0, #0
   19d5c:	bne	1a048 <argp_failure@@Base+0x1474>
   19d60:	cmp	r9, r4
   19d64:	beq	19d70 <argp_failure@@Base+0x119c>
   19d68:	mov	r0, r4
   19d6c:	bl	14a30 <argp_parse@@Base+0xf7c>
   19d70:	ldr	r3, [sl, #28]
   19d74:	ldr	r2, [sl, #24]
   19d78:	ldr	r1, [sl, #16]
   19d7c:	sub	r2, r3, r2
   19d80:	cmp	r2, r1
   19d84:	bhi	19fc0 <argp_failure@@Base+0x13ec>
   19d88:	ldr	r1, [sl, #32]
   19d8c:	mov	r2, #0
   19d90:	cmp	r1, r3
   19d94:	str	r2, [sl, #4]
   19d98:	bls	19fa4 <argp_failure@@Base+0x13d0>
   19d9c:	add	r1, r3, #1
   19da0:	mov	r2, #10
   19da4:	str	r1, [sl, #28]
   19da8:	strb	r2, [r3]
   19dac:	str	r8, [fp, #-88]	; 0xffffffa8
   19db0:	b	19218 <argp_failure@@Base+0x644>
   19db4:	mov	r0, sl
   19db8:	bl	1be6c <argp_error@@Base+0x1a5c>
   19dbc:	b	191c4 <argp_failure@@Base+0x5f0>
   19dc0:	mov	r0, sl
   19dc4:	bl	1be6c <argp_error@@Base+0x1a5c>
   19dc8:	ldr	r2, [fp, #-120]	; 0xffffff88
   19dcc:	ldr	r3, [sl, #28]
   19dd0:	ldr	r1, [sl, #24]
   19dd4:	str	r2, [sl, #4]
   19dd8:	ldr	r2, [sl, #16]
   19ddc:	sub	r3, r3, r1
   19de0:	cmp	r3, r2
   19de4:	bls	19238 <argp_failure@@Base+0x664>
   19de8:	mov	r0, sl
   19dec:	bl	1be6c <argp_error@@Base+0x1a5c>
   19df0:	b	19238 <argp_failure@@Base+0x664>
   19df4:	muleq	r2, r8, r4
   19df8:	andeq	lr, r2, r0, asr #10
   19dfc:	andeq	sp, r1, r0, lsl fp
   19e00:	andeq	r0, r0, #5
   19e04:	andeq	sp, r1, ip, asr #19
   19e08:	muleq	r1, r8, r7
   19e0c:	andeq	sp, r1, r8, lsr #15
   19e10:	andeq	sp, r1, r8, lsl r8
   19e14:	andeq	sp, r1, ip, lsl #20
   19e18:	ldrdeq	sp, [r1], -ip
   19e1c:			; <UNDEFINED> instruction: 0x0001dab8
   19e20:	andeq	sp, r1, ip, lsl r3
   19e24:	strdeq	sp, [r1], -ip
   19e28:	muleq	r1, r8, sl
   19e2c:	muleq	r1, r0, sl
   19e30:	andeq	sp, r1, r0, lsr #21
   19e34:	andeq	sp, r1, r8, lsr #21
   19e38:	strdeq	sp, [r1], -r8
   19e3c:	andeq	sp, r1, r8, lsl #22
   19e40:	andeq	sp, r1, r0, lsl #22
   19e44:	strdeq	sp, [r1], -r0
   19e48:	andeq	sp, r1, ip, asr #5
   19e4c:	andeq	r8, r1, r4, lsr #2
   19e50:	andeq	sp, r1, ip, lsl #22
   19e54:	andeq	sp, r1, r4, lsr sl
   19e58:	ldrdeq	sp, [r1], -r8
   19e5c:	andeq	sp, r1, r8, lsl #21
   19e60:	andeq	sp, r1, r4, asr sl
   19e64:	andeq	sp, r1, r8, asr #15
   19e68:			; <UNDEFINED> instruction: 0x0001d7b8
   19e6c:	strdeq	sp, [r1], -r8
   19e70:	andeq	sp, r1, r8, ror #15
   19e74:	andeq	sp, r1, r8, lsl #16
   19e78:	andeq	sp, r1, r8, asr r9
   19e7c:	mov	r0, sl
   19e80:	bl	1be6c <argp_error@@Base+0x1a5c>
   19e84:	ldr	r0, [r6, #12]
   19e88:	and	r0, r0, #8
   19e8c:	b	19040 <argp_failure@@Base+0x46c>
   19e90:	mov	r0, sl
   19e94:	bl	1be6c <argp_error@@Base+0x1a5c>
   19e98:	ldr	ip, [sl, #28]
   19e9c:	ldr	r2, [sl, #24]
   19ea0:	ldr	lr, [sl, #16]
   19ea4:	sub	ip, ip, r2
   19ea8:	b	18fb0 <argp_failure@@Base+0x3dc>
   19eac:	ldr	r2, [r6, #8]
   19eb0:	cmp	r2, #0
   19eb4:	beq	190b4 <argp_failure@@Base+0x4e0>
   19eb8:	ldr	r1, [r6, #12]
   19ebc:	mov	r0, sl
   19ec0:	tst	r1, #1
   19ec4:	ldrne	r1, [pc, #-136]	; 19e44 <argp_failure@@Base+0x1270>
   19ec8:	ldreq	r1, [pc, #-136]	; 19e48 <argp_failure@@Base+0x1274>
   19ecc:	bl	1c518 <argp_error@@Base+0x2108>
   19ed0:	b	190b4 <argp_failure@@Base+0x4e0>
   19ed4:	mov	r3, #1
   19ed8:	str	r3, [fp, #-132]	; 0xffffff7c
   19edc:	b	19030 <argp_failure@@Base+0x45c>
   19ee0:	mov	r0, sl
   19ee4:	bl	1be6c <argp_error@@Base+0x1a5c>
   19ee8:	b	19b70 <argp_failure@@Base+0xf9c>
   19eec:	mov	r0, sl
   19ef0:	bl	1be6c <argp_error@@Base+0x1a5c>
   19ef4:	b	190f8 <argp_failure@@Base+0x524>
   19ef8:	mov	r1, #1
   19efc:	mov	r0, sl
   19f00:	bl	1c418 <argp_error@@Base+0x2008>
   19f04:	cmp	r0, #0
   19f08:	beq	19c44 <argp_failure@@Base+0x1070>
   19f0c:	ldr	r2, [sl, #28]
   19f10:	b	19c38 <argp_failure@@Base+0x1064>
   19f14:	mov	r1, #1
   19f18:	mov	r0, sl
   19f1c:	bl	1c418 <argp_error@@Base+0x2008>
   19f20:	cmp	r0, #0
   19f24:	beq	19c24 <argp_failure@@Base+0x1050>
   19f28:	ldr	r2, [sl, #28]
   19f2c:	b	19c14 <argp_failure@@Base+0x1040>
   19f30:	mvn	r3, #0
   19f34:	str	r3, [r7, #12]
   19f38:	ldr	r3, [fp, #-108]	; 0xffffff94
   19f3c:	ldr	r1, [r3, #4]
   19f40:	cmp	r1, #0
   19f44:	beq	18e50 <argp_failure@@Base+0x27c>
   19f48:	ldr	r2, [fp, #-112]	; 0xffffff90
   19f4c:	mov	r3, #0
   19f50:	str	r3, [r2, #24]
   19f54:	add	r3, r3, #1
   19f58:	cmp	r3, r1
   19f5c:	add	r2, r2, #28
   19f60:	bcc	19f50 <argp_failure@@Base+0x137c>
   19f64:	ldr	r0, [fp, #-112]	; 0xffffff90
   19f68:	ldr	r3, [pc, #-292]	; 19e4c <argp_failure@@Base+0x1278>
   19f6c:	mov	r2, #28
   19f70:	bl	1191c <qsort@plt>
   19f74:	b	18e50 <argp_failure@@Base+0x27c>
   19f78:	mvn	r3, #0
   19f7c:	str	r3, [r7, #12]
   19f80:	ldr	r3, [fp, #-108]	; 0xffffff94
   19f84:	ldr	r3, [r3, #4]
   19f88:	cmp	r3, #0
   19f8c:	str	r3, [fp, #-120]	; 0xffffff88
   19f90:	sub	r6, r3, #1
   19f94:	bne	197f4 <argp_failure@@Base+0xc20>
   19f98:	b	18e50 <argp_failure@@Base+0x27c>
   19f9c:	mov	r4, r9
   19fa0:	b	19cb8 <argp_failure@@Base+0x10e4>
   19fa4:	mov	r1, #1
   19fa8:	mov	r0, sl
   19fac:	bl	1c418 <argp_error@@Base+0x2008>
   19fb0:	cmp	r0, #0
   19fb4:	beq	19dac <argp_failure@@Base+0x11d8>
   19fb8:	ldr	r3, [sl, #28]
   19fbc:	b	19d9c <argp_failure@@Base+0x11c8>
   19fc0:	mov	r0, sl
   19fc4:	bl	1be6c <argp_error@@Base+0x1a5c>
   19fc8:	ldr	r3, [sl, #28]
   19fcc:	b	19d88 <argp_failure@@Base+0x11b4>
   19fd0:	mov	r3, r8
   19fd4:	mov	r4, r5
   19fd8:	b	19418 <argp_failure@@Base+0x844>
   19fdc:	cmp	r5, r6
   19fe0:	bhi	1a15c <argp_failure@@Base+0x1588>
   19fe4:	ldr	r1, [sl, #32]
   19fe8:	add	r2, r3, #3
   19fec:	cmp	r1, r2
   19ff0:	bcs	1a00c <argp_failure@@Base+0x1438>
   19ff4:	mov	r1, #3
   19ff8:	mov	r0, sl
   19ffc:	bl	1c418 <argp_error@@Base+0x2008>
   1a000:	cmp	r0, #0
   1a004:	beq	19d28 <argp_failure@@Base+0x1154>
   1a008:	ldr	r3, [sl, #28]
   1a00c:	ldr	r2, [pc, #-452]	; 19e50 <argp_failure@@Base+0x127c>
   1a010:	ldrh	r1, [r2]
   1a014:	ldrb	r2, [r2, #2]
   1a018:	strh	r1, [r3]
   1a01c:	strb	r2, [r3, #2]
   1a020:	ldr	r3, [sl, #28]
   1a024:	add	r3, r3, #3
   1a028:	str	r3, [sl, #28]
   1a02c:	b	19d28 <argp_failure@@Base+0x1154>
   1a030:	ldr	r3, [fp, #-108]	; 0xffffff94
   1a034:	ldr	r8, [r3]
   1a038:	str	r4, [fp, #-88]	; 0xffffffa8
   1a03c:	str	r4, [fp, #-84]	; 0xffffffac
   1a040:	str	r4, [fp, #-80]	; 0xffffffb0
   1a044:	b	18f90 <argp_failure@@Base+0x3bc>
   1a048:	ldr	r0, [sl, #28]
   1a04c:	mov	r2, r5
   1a050:	mov	r1, r4
   1a054:	bl	11610 <memcpy@plt>
   1a058:	ldr	r3, [sl, #28]
   1a05c:	add	r5, r3, r5
   1a060:	str	r5, [sl, #28]
   1a064:	b	19d60 <argp_failure@@Base+0x118c>
   1a068:	mov	r0, sl
   1a06c:	bl	1be6c <argp_error@@Base+0x1a5c>
   1a070:	ldr	r3, [sl, #28]
   1a074:	ldr	r2, [sl, #24]
   1a078:	ldr	r1, [sl, #16]
   1a07c:	ldr	r6, [sl, #20]
   1a080:	ldr	r7, [fp, #-96]	; 0xffffffa0
   1a084:	sub	r2, r3, r2
   1a088:	cmp	r2, r1
   1a08c:	bic	r6, r6, r6, asr #31
   1a090:	ldr	r5, [r7, #20]
   1a094:	bls	19cf4 <argp_failure@@Base+0x1120>
   1a098:	mov	r0, sl
   1a09c:	bl	1be6c <argp_error@@Base+0x1a5c>
   1a0a0:	ldr	r3, [sl, #28]
   1a0a4:	ldr	r2, [sl, #24]
   1a0a8:	ldr	r1, [sl, #16]
   1a0ac:	sub	r2, r3, r2
   1a0b0:	str	r5, [sl, #4]
   1a0b4:	mov	r5, r7
   1a0b8:	ldr	r7, [r7, #20]
   1a0bc:	cmp	r2, r1
   1a0c0:	movls	r5, r7
   1a0c4:	bls	19cfc <argp_failure@@Base+0x1128>
   1a0c8:	mov	r0, sl
   1a0cc:	bl	1be6c <argp_error@@Base+0x1a5c>
   1a0d0:	ldr	r5, [r5, #20]
   1a0d4:	ldr	r3, [sl, #28]
   1a0d8:	b	19cfc <argp_failure@@Base+0x1128>
   1a0dc:	str	r5, [sp]
   1a0e0:	ldr	r3, [pc, #-660]	; 19e54 <argp_failure@@Base+0x1280>
   1a0e4:	mov	r1, r2
   1a0e8:	ldr	r0, [fp, #-104]	; 0xffffff98
   1a0ec:	bl	18bd4 <argp_failure@@Base>
   1a0f0:	b	19534 <argp_failure@@Base+0x960>
   1a0f4:	ldr	r3, [pc, #-676]	; 19e58 <argp_failure@@Base+0x1284>
   1a0f8:	ldr	r1, [pc, #-676]	; 19e5c <argp_failure@@Base+0x1288>
   1a0fc:	mov	r2, #0
   1a100:	ldr	r0, [fp, #-104]	; 0xffffff98
   1a104:	stm	sp, {r1, r3}
   1a108:	mov	r1, r2
   1a10c:	ldr	r3, [pc, #-692]	; 19e60 <argp_failure@@Base+0x128c>
   1a110:	bl	18bd4 <argp_failure@@Base>
   1a114:	b	18e20 <argp_failure@@Base+0x24c>
   1a118:	ldr	r3, [pc, #-700]	; 19e64 <argp_failure@@Base+0x1290>
   1a11c:	b	1a0f8 <argp_failure@@Base+0x1524>
   1a120:	mov	r1, #1
   1a124:	mov	r0, sl
   1a128:	bl	1c418 <argp_error@@Base+0x2008>
   1a12c:	cmp	r0, #0
   1a130:	beq	18ec0 <argp_failure@@Base+0x2ec>
   1a134:	ldr	r3, [sl, #28]
   1a138:	b	18eb0 <argp_failure@@Base+0x2dc>
   1a13c:	ldr	r0, [r6, #16]
   1a140:	sub	r2, fp, #76	; 0x4c
   1a144:	ldr	r1, [r8, #20]
   1a148:	bl	17834 <argp_parse@@Base+0x3d80>
   1a14c:	b	19dac <argp_failure@@Base+0x11d8>
   1a150:	ldr	r0, [fp, #-136]	; 0xffffff78
   1a154:	bl	116c4 <funlockfile@plt>
   1a158:	b	18f20 <argp_failure@@Base+0x34c>
   1a15c:	ldr	r2, [sl, #24]
   1a160:	ldr	r1, [sl, #16]
   1a164:	sub	r3, r3, r2
   1a168:	cmp	r3, r1
   1a16c:	bhi	1a2e4 <argp_failure@@Base+0x1710>
   1a170:	ldr	r3, [sl, #20]
   1a174:	mov	r6, #32
   1a178:	cmp	r3, #0
   1a17c:	subge	r5, r5, r3
   1a180:	mov	r7, #1
   1a184:	cmp	r5, #0
   1a188:	sub	r5, r5, #1
   1a18c:	ble	19d28 <argp_failure@@Base+0x1154>
   1a190:	ldr	r3, [sl, #28]
   1a194:	ldr	r2, [sl, #32]
   1a198:	cmp	r3, r2
   1a19c:	bcs	1a1c8 <argp_failure@@Base+0x15f4>
   1a1a0:	add	r2, r3, #1
   1a1a4:	cmp	r5, #0
   1a1a8:	str	r2, [sl, #28]
   1a1ac:	sub	r5, r5, #1
   1a1b0:	strb	r6, [r3]
   1a1b4:	ble	19d28 <argp_failure@@Base+0x1154>
   1a1b8:	ldr	r3, [sl, #28]
   1a1bc:	ldr	r2, [sl, #32]
   1a1c0:	cmp	r3, r2
   1a1c4:	bcc	1a1a0 <argp_failure@@Base+0x15cc>
   1a1c8:	mov	r1, r7
   1a1cc:	mov	r0, sl
   1a1d0:	bl	1c418 <argp_error@@Base+0x2008>
   1a1d4:	cmp	r0, #0
   1a1d8:	beq	1a184 <argp_failure@@Base+0x15b0>
   1a1dc:	ldr	r3, [sl, #28]
   1a1e0:	b	1a1a0 <argp_failure@@Base+0x15cc>
   1a1e4:	mov	r1, #1
   1a1e8:	mov	r0, sl
   1a1ec:	bl	1c418 <argp_error@@Base+0x2008>
   1a1f0:	cmp	r0, #0
   1a1f4:	beq	19d28 <argp_failure@@Base+0x1154>
   1a1f8:	ldr	r3, [sl, #28]
   1a1fc:	b	19d18 <argp_failure@@Base+0x1144>
   1a200:	ldr	r4, [pc, #-912]	; 19e78 <argp_failure@@Base+0x12a4>
   1a204:	ldr	r9, [fp, #-112]	; 0xffffff90
   1a208:	ldr	r3, [sl, #28]
   1a20c:	ldr	r2, [sl, #32]
   1a210:	cmp	r3, r2
   1a214:	bcs	1a2c8 <argp_failure@@Base+0x16f4>
   1a218:	add	r1, r3, #1
   1a21c:	mov	r2, #10
   1a220:	str	r1, [sl, #28]
   1a224:	strb	r2, [r3]
   1a228:	mov	r0, r4
   1a22c:	bl	117b4 <strlen@plt>
   1a230:	subs	r6, r0, #0
   1a234:	beq	1a2b8 <argp_failure@@Base+0x16e4>
   1a238:	ldr	r0, [sl, #28]
   1a23c:	ldr	r2, [sl, #32]
   1a240:	add	r3, r0, r6
   1a244:	cmp	r2, r3
   1a248:	bcs	1a264 <argp_failure@@Base+0x1690>
   1a24c:	mov	r1, r6
   1a250:	mov	r0, sl
   1a254:	bl	1c418 <argp_error@@Base+0x2008>
   1a258:	cmp	r0, #0
   1a25c:	beq	1a2b8 <argp_failure@@Base+0x16e4>
   1a260:	ldr	r0, [sl, #28]
   1a264:	mov	r2, r6
   1a268:	mov	r1, r4
   1a26c:	bl	11610 <memcpy@plt>
   1a270:	ldr	r3, [sl, #28]
   1a274:	add	r3, r3, r6
   1a278:	str	r3, [sl, #28]
   1a27c:	ldr	r2, [sl, #32]
   1a280:	cmp	r2, r3
   1a284:	bls	1a314 <argp_failure@@Base+0x1740>
   1a288:	add	r1, r3, #1
   1a28c:	mov	r2, #10
   1a290:	str	r1, [sl, #28]
   1a294:	strb	r2, [r3]
   1a298:	b	192d0 <argp_failure@@Base+0x6fc>
   1a29c:	mov	r1, #1
   1a2a0:	mov	r0, sl
   1a2a4:	bl	1c418 <argp_error@@Base+0x2008>
   1a2a8:	cmp	r0, #0
   1a2ac:	beq	18f64 <argp_failure@@Base+0x390>
   1a2b0:	ldr	r3, [sl, #28]
   1a2b4:	b	18f54 <argp_failure@@Base+0x380>
   1a2b8:	ldr	r3, [sl, #28]
   1a2bc:	b	1a27c <argp_failure@@Base+0x16a8>
   1a2c0:	ldr	r3, [pc, #-1120]	; 19e68 <argp_failure@@Base+0x1294>
   1a2c4:	b	1a0f8 <argp_failure@@Base+0x1524>
   1a2c8:	mov	r1, #1
   1a2cc:	mov	r0, sl
   1a2d0:	bl	1c418 <argp_error@@Base+0x2008>
   1a2d4:	cmp	r0, #0
   1a2d8:	beq	1a228 <argp_failure@@Base+0x1654>
   1a2dc:	ldr	r3, [sl, #28]
   1a2e0:	b	1a218 <argp_failure@@Base+0x1644>
   1a2e4:	mov	r0, sl
   1a2e8:	bl	1be6c <argp_error@@Base+0x1a5c>
   1a2ec:	b	1a170 <argp_failure@@Base+0x159c>
   1a2f0:	ldr	r3, [pc, #-1164]	; 19e6c <argp_failure@@Base+0x1298>
   1a2f4:	b	1a0f8 <argp_failure@@Base+0x1524>
   1a2f8:	ldr	r3, [pc, #-1168]	; 19e70 <argp_failure@@Base+0x129c>
   1a2fc:	b	1a0f8 <argp_failure@@Base+0x1524>
   1a300:	mov	r9, r1
   1a304:	ldr	r4, [pc, #-1172]	; 19e78 <argp_failure@@Base+0x12a4>
   1a308:	b	1a208 <argp_failure@@Base+0x1634>
   1a30c:	ldr	r3, [pc, #-1184]	; 19e74 <argp_failure@@Base+0x12a0>
   1a310:	b	1a0f8 <argp_failure@@Base+0x1524>
   1a314:	mov	r1, #1
   1a318:	mov	r0, sl
   1a31c:	bl	1c418 <argp_error@@Base+0x2008>
   1a320:	cmp	r0, #0
   1a324:	beq	192d0 <argp_failure@@Base+0x6fc>
   1a328:	ldr	r3, [sl, #28]
   1a32c:	b	1a288 <argp_failure@@Base+0x16b4>
   1a330:	ldr	r9, [fp, #-112]	; 0xffffff90
   1a334:	ldr	r4, [pc, #-1220]	; 19e78 <argp_failure@@Base+0x12a4>
   1a338:	b	1a208 <argp_failure@@Base+0x1634>

0001a33c <argp_help@@Base>:
   1a33c:	push	{lr}		; (str lr, [sp, #-4]!)
   1a340:	sub	sp, sp, #12
   1a344:	str	r3, [sp]
   1a348:	mov	r3, r2
   1a34c:	mov	r2, r1
   1a350:	mov	r1, #0
   1a354:	bl	18ddc <argp_failure@@Base+0x208>
   1a358:	add	sp, sp, #12
   1a35c:	pop	{pc}		; (ldr pc, [sp], #4)

0001a360 <argp_state_help@@Base>:
   1a360:	push	{r4, r5, lr}
   1a364:	subs	r4, r0, #0
   1a368:	sub	sp, sp, #12
   1a36c:	mov	r5, r2
   1a370:	beq	1a3d0 <argp_state_help@@Base+0x70>
   1a374:	ldr	r3, [r4, #16]
   1a378:	tst	r3, #2
   1a37c:	bne	1a3c8 <argp_state_help@@Base+0x68>
   1a380:	cmp	r1, #0
   1a384:	beq	1a3c8 <argp_state_help@@Base+0x68>
   1a388:	tst	r3, #64	; 0x40
   1a38c:	ldr	r3, [r4, #40]	; 0x28
   1a390:	orrne	r5, r5, #128	; 0x80
   1a394:	ldr	r0, [r4]
   1a398:	mov	r2, r1
   1a39c:	str	r3, [sp]
   1a3a0:	mov	r1, r4
   1a3a4:	mov	r3, r5
   1a3a8:	bl	18ddc <argp_failure@@Base+0x208>
   1a3ac:	ldr	r3, [r4, #16]
   1a3b0:	tst	r3, #32
   1a3b4:	bne	1a3c8 <argp_state_help@@Base+0x68>
   1a3b8:	ands	r0, r5, #256	; 0x100
   1a3bc:	bne	1a3fc <argp_state_help@@Base+0x9c>
   1a3c0:	tst	r5, #512	; 0x200
   1a3c4:	bne	1a3f8 <argp_state_help@@Base+0x98>
   1a3c8:	add	sp, sp, #12
   1a3cc:	pop	{r4, r5, pc}
   1a3d0:	cmp	r1, #0
   1a3d4:	beq	1a3c8 <argp_state_help@@Base+0x68>
   1a3d8:	ldr	r3, [pc, #40]	; 1a408 <argp_state_help@@Base+0xa8>
   1a3dc:	mov	r2, r1
   1a3e0:	mov	r1, r4
   1a3e4:	ldr	ip, [r3]
   1a3e8:	mov	r3, r5
   1a3ec:	str	ip, [sp]
   1a3f0:	bl	18ddc <argp_failure@@Base+0x208>
   1a3f4:	b	1a3b8 <argp_state_help@@Base+0x58>
   1a3f8:	bl	1179c <exit@plt>
   1a3fc:	ldr	r3, [pc, #8]	; 1a40c <argp_state_help@@Base+0xac>
   1a400:	ldr	r0, [r3]
   1a404:	bl	1179c <exit@plt>
   1a408:	ldrdeq	lr, [r2], -r8
   1a40c:	ldrdeq	lr, [r2], -r0

0001a410 <argp_error@@Base>:
   1a410:	push	{r1, r2, r3}
   1a414:	push	{r4, r5, lr}
   1a418:	subs	r5, r0, #0
   1a41c:	sub	sp, sp, #16
   1a420:	beq	1a530 <argp_error@@Base+0x120>
   1a424:	ldr	r3, [r5, #16]
   1a428:	tst	r3, #2
   1a42c:	bne	1a520 <argp_error@@Base+0x110>
   1a430:	ldr	r4, [r5, #44]	; 0x2c
   1a434:	cmp	r4, #0
   1a438:	beq	1a520 <argp_error@@Base+0x110>
   1a43c:	mov	r0, r4
   1a440:	bl	11904 <flockfile@plt>
   1a444:	ldr	r0, [r5, #40]	; 0x28
   1a448:	add	r3, sp, #32
   1a44c:	str	r3, [sp, #12]
   1a450:	mov	r1, r4
   1a454:	bl	1155c <fputs_unlocked@plt>
   1a458:	ldr	r3, [r4, #20]
   1a45c:	ldr	r2, [r4, #24]
   1a460:	cmp	r3, r2
   1a464:	addcc	r1, r3, #1
   1a468:	movcc	r2, #58	; 0x3a
   1a46c:	strcc	r1, [r4, #20]
   1a470:	strbcc	r2, [r3]
   1a474:	bcs	1a55c <argp_error@@Base+0x14c>
   1a478:	ldr	r3, [r4, #20]
   1a47c:	ldr	r2, [r4, #24]
   1a480:	cmp	r3, r2
   1a484:	addcc	r1, r3, #1
   1a488:	movcc	r2, #32
   1a48c:	strcc	r1, [r4, #20]
   1a490:	strbcc	r2, [r3]
   1a494:	bcs	1a57c <argp_error@@Base+0x16c>
   1a498:	ldr	r1, [sp, #28]
   1a49c:	ldr	r2, [sp, #12]
   1a4a0:	mov	r0, r4
   1a4a4:	bl	118b0 <vfprintf@plt>
   1a4a8:	ldr	r3, [r4, #20]
   1a4ac:	ldr	r2, [r4, #24]
   1a4b0:	cmp	r3, r2
   1a4b4:	addcc	r1, r3, #1
   1a4b8:	movcc	r2, #10
   1a4bc:	strcc	r1, [r4, #20]
   1a4c0:	strbcc	r2, [r3]
   1a4c4:	bcs	1a56c <argp_error@@Base+0x15c>
   1a4c8:	cmp	r5, #0
   1a4cc:	beq	1a58c <argp_error@@Base+0x17c>
   1a4d0:	ldr	r3, [r5, #16]
   1a4d4:	tst	r3, #2
   1a4d8:	bne	1a518 <argp_error@@Base+0x108>
   1a4dc:	ldr	r2, [r5, #40]	; 0x28
   1a4e0:	tst	r3, #64	; 0x40
   1a4e4:	moveq	r3, #260	; 0x104
   1a4e8:	movne	r3, #388	; 0x184
   1a4ec:	ldr	r0, [r5]
   1a4f0:	mov	r1, r5
   1a4f4:	str	r2, [sp]
   1a4f8:	mov	r2, r4
   1a4fc:	bl	18ddc <argp_failure@@Base+0x208>
   1a500:	ldr	r3, [r5, #16]
   1a504:	tst	r3, #32
   1a508:	bne	1a518 <argp_error@@Base+0x108>
   1a50c:	ldr	r3, [pc, #156]	; 1a5b0 <argp_error@@Base+0x1a0>
   1a510:	ldr	r0, [r3]
   1a514:	bl	1179c <exit@plt>
   1a518:	mov	r0, r4
   1a51c:	bl	116c4 <funlockfile@plt>
   1a520:	add	sp, sp, #16
   1a524:	pop	{r4, r5, lr}
   1a528:	add	sp, sp, #12
   1a52c:	bx	lr
   1a530:	ldr	r3, [pc, #124]	; 1a5b4 <argp_error@@Base+0x1a4>
   1a534:	ldr	r4, [r3]
   1a538:	cmp	r4, #0
   1a53c:	beq	1a520 <argp_error@@Base+0x110>
   1a540:	mov	r0, r4
   1a544:	bl	11904 <flockfile@plt>
   1a548:	ldr	r2, [pc, #104]	; 1a5b8 <argp_error@@Base+0x1a8>
   1a54c:	add	r3, sp, #32
   1a550:	str	r3, [sp, #12]
   1a554:	ldr	r0, [r2]
   1a558:	b	1a450 <argp_error@@Base+0x40>
   1a55c:	mov	r1, #58	; 0x3a
   1a560:	mov	r0, r4
   1a564:	bl	11868 <__overflow@plt>
   1a568:	b	1a478 <argp_error@@Base+0x68>
   1a56c:	mov	r1, #10
   1a570:	mov	r0, r4
   1a574:	bl	11868 <__overflow@plt>
   1a578:	b	1a4c8 <argp_error@@Base+0xb8>
   1a57c:	mov	r1, #32
   1a580:	mov	r0, r4
   1a584:	bl	11868 <__overflow@plt>
   1a588:	b	1a498 <argp_error@@Base+0x88>
   1a58c:	ldr	r1, [pc, #36]	; 1a5b8 <argp_error@@Base+0x1a8>
   1a590:	mov	r2, r4
   1a594:	mov	r3, #260	; 0x104
   1a598:	ldr	r0, [r1]
   1a59c:	mov	r1, r5
   1a5a0:	str	r0, [sp]
   1a5a4:	mov	r0, r5
   1a5a8:	bl	18ddc <argp_failure@@Base+0x208>
   1a5ac:	b	1a50c <argp_error@@Base+0xfc>
   1a5b0:	ldrdeq	lr, [r2], -r0
   1a5b4:	andeq	lr, r2, r8, ror #9
   1a5b8:	ldrdeq	lr, [r2], -r8
   1a5bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a5c0:	ldr	r4, [r1, #32]
   1a5c4:	ldr	r8, [r1, #28]
   1a5c8:	ldr	r7, [r1]
   1a5cc:	add	r6, r0, r4, lsl #2
   1a5d0:	mov	r2, r8
   1a5d4:	mov	r5, r7
   1a5d8:	cmp	r5, r4
   1a5dc:	movle	r3, #0
   1a5e0:	movgt	r3, #1
   1a5e4:	cmp	r2, r4
   1a5e8:	movge	r3, #0
   1a5ec:	cmp	r3, #0
   1a5f0:	beq	1a664 <argp_error@@Base+0x254>
   1a5f4:	sub	r3, r5, r4
   1a5f8:	sub	sl, r4, r2
   1a5fc:	cmp	r3, sl
   1a600:	ble	1a634 <argp_error@@Base+0x224>
   1a604:	sub	r5, r5, sl
   1a608:	add	sl, sl, r2
   1a60c:	add	ip, r0, r5, lsl #2
   1a610:	add	sl, r0, sl, lsl #2
   1a614:	add	r3, r0, r2, lsl #2
   1a618:	ldr	r9, [ip]
   1a61c:	ldr	lr, [r3]
   1a620:	str	r9, [r3], #4
   1a624:	cmp	r3, sl
   1a628:	str	lr, [ip], #4
   1a62c:	bne	1a618 <argp_error@@Base+0x208>
   1a630:	b	1a5d8 <argp_error@@Base+0x1c8>
   1a634:	add	sl, r3, r2
   1a638:	add	r3, r0, r2, lsl #2
   1a63c:	add	r9, r0, sl, lsl #2
   1a640:	mov	r2, r6
   1a644:	ldr	lr, [r2]
   1a648:	ldr	ip, [r3]
   1a64c:	str	lr, [r3], #4
   1a650:	cmp	r9, r3
   1a654:	str	ip, [r2], #4
   1a658:	bne	1a644 <argp_error@@Base+0x234>
   1a65c:	mov	r2, sl
   1a660:	b	1a5d8 <argp_error@@Base+0x1c8>
   1a664:	sub	r4, r7, r4
   1a668:	add	r8, r4, r8
   1a66c:	str	r8, [r1, #28]
   1a670:	str	r7, [r1, #32]
   1a674:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a678:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a67c:	sub	sp, sp, #52	; 0x34
   1a680:	str	r1, [sp, #24]
   1a684:	ldr	r1, [sp, #96]	; 0x60
   1a688:	str	r0, [sp, #28]
   1a68c:	str	r2, [sp, #32]
   1a690:	ldr	r8, [r1, #20]
   1a694:	str	r3, [sp, #12]
   1a698:	mov	r7, r8
   1a69c:	ldrb	r5, [r8]
   1a6a0:	cmp	r5, #61	; 0x3d
   1a6a4:	cmpne	r5, #0
   1a6a8:	movne	r5, #1
   1a6ac:	moveq	r5, #0
   1a6b0:	beq	1a6cc <argp_error@@Base+0x2bc>
   1a6b4:	ldrb	r3, [r7, #1]!
   1a6b8:	cmp	r3, #0
   1a6bc:	cmpne	r3, #61	; 0x3d
   1a6c0:	bne	1a6b4 <argp_error@@Base+0x2a4>
   1a6c4:	ldr	r3, [sp, #12]
   1a6c8:	sub	r5, r7, r8
   1a6cc:	ldr	sl, [r3]
   1a6d0:	cmp	sl, #0
   1a6d4:	beq	1aaac <argp_error@@Base+0x69c>
   1a6d8:	mov	fp, r3
   1a6dc:	mov	r4, sl
   1a6e0:	mov	r6, #0
   1a6e4:	str	r3, [sp, #20]
   1a6e8:	mov	r2, r5
   1a6ec:	mov	r1, r8
   1a6f0:	mov	r0, r4
   1a6f4:	bl	11958 <strncmp@plt>
   1a6f8:	mov	r9, fp
   1a6fc:	cmp	r0, #0
   1a700:	mov	r0, r4
   1a704:	bne	1a714 <argp_error@@Base+0x304>
   1a708:	bl	117b4 <strlen@plt>
   1a70c:	cmp	r0, r5
   1a710:	beq	1a7d4 <argp_error@@Base+0x3c4>
   1a714:	ldr	r4, [fp, #16]!
   1a718:	add	r6, r6, #1
   1a71c:	cmp	r4, #0
   1a720:	bne	1a6e8 <argp_error@@Base+0x2d8>
   1a724:	ldr	r3, [sp, #100]	; 0x64
   1a728:	cmp	r3, #0
   1a72c:	ldr	r3, [sp, #92]	; 0x5c
   1a730:	beq	1a878 <argp_error@@Base+0x468>
   1a734:	cmp	r3, #0
   1a738:	bne	1a990 <argp_error@@Base+0x580>
   1a73c:	mov	fp, r3
   1a740:	mov	r0, sl
   1a744:	ldr	r4, [sp, #12]
   1a748:	ldr	sl, [sp, #96]	; 0x60
   1a74c:	mov	r9, fp
   1a750:	mov	r1, r8
   1a754:	str	r3, [sp, #16]
   1a758:	str	r3, [sp, #44]	; 0x2c
   1a75c:	mvn	r3, #0
   1a760:	str	r3, [sp, #40]	; 0x28
   1a764:	str	fp, [sp, #36]	; 0x24
   1a768:	mov	r2, r5
   1a76c:	bl	11958 <strncmp@plt>
   1a770:	cmp	r0, #0
   1a774:	bne	1a7b0 <argp_error@@Base+0x3a0>
   1a778:	cmp	r9, #0
   1a77c:	beq	1ace4 <argp_error@@Base+0x8d4>
   1a780:	ldr	r2, [r9, #4]
   1a784:	ldr	r3, [r4, #4]
   1a788:	cmp	r2, r3
   1a78c:	beq	1ad40 <argp_error@@Base+0x930>
   1a790:	ldr	r3, [sp, #16]
   1a794:	cmp	r3, #0
   1a798:	bne	1a7b0 <argp_error@@Base+0x3a0>
   1a79c:	ldr	r3, [sp, #36]	; 0x24
   1a7a0:	cmp	r3, #0
   1a7a4:	beq	1ac1c <argp_error@@Base+0x80c>
   1a7a8:	mov	r2, #1
   1a7ac:	strb	r2, [r3, fp]
   1a7b0:	ldr	r0, [r4, #16]!
   1a7b4:	add	fp, fp, #1
   1a7b8:	cmp	r0, #0
   1a7bc:	beq	1a8ec <argp_error@@Base+0x4dc>
   1a7c0:	ldr	r1, [sl, #20]
   1a7c4:	b	1a768 <argp_error@@Base+0x358>
   1a7c8:	cmp	r9, #0
   1a7cc:	beq	1aaac <argp_error@@Base+0x69c>
   1a7d0:	ldr	r6, [sp, #40]	; 0x28
   1a7d4:	ldr	r3, [sp, #96]	; 0x60
   1a7d8:	ldr	r0, [sp, #96]	; 0x60
   1a7dc:	mov	r1, #0
   1a7e0:	ldr	r2, [r3]
   1a7e4:	str	r1, [r0, #20]
   1a7e8:	add	r3, r2, #1
   1a7ec:	str	r3, [r0]
   1a7f0:	ldrb	r1, [r7]
   1a7f4:	cmp	r1, #0
   1a7f8:	bne	1a838 <argp_error@@Base+0x428>
   1a7fc:	ldr	r1, [r9, #4]
   1a800:	cmp	r1, #1
   1a804:	beq	1ab1c <argp_error@@Base+0x70c>
   1a808:	ldr	r3, [sp, #88]	; 0x58
   1a80c:	ldr	r2, [r9, #8]
   1a810:	cmp	r3, #0
   1a814:	strne	r6, [r3]
   1a818:	cmp	r2, #0
   1a81c:	movne	r3, #0
   1a820:	ldreq	r3, [r9, #12]
   1a824:	ldrne	r1, [r9, #12]
   1a828:	strne	r1, [r2]
   1a82c:	mov	r0, r3
   1a830:	add	sp, sp, #52	; 0x34
   1a834:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a838:	ldr	r3, [r9, #4]
   1a83c:	cmp	r3, #0
   1a840:	movne	r3, r0
   1a844:	addne	r7, r7, #1
   1a848:	strne	r7, [r3, #12]
   1a84c:	bne	1a808 <argp_error@@Base+0x3f8>
   1a850:	ldr	r3, [sp, #100]	; 0x64
   1a854:	cmp	r3, #0
   1a858:	bne	1aa74 <argp_error@@Base+0x664>
   1a85c:	ldr	r1, [sp, #96]	; 0x60
   1a860:	ldr	r2, [r9, #12]
   1a864:	mov	r3, #63	; 0x3f
   1a868:	str	r2, [r1, #8]
   1a86c:	mov	r0, r3
   1a870:	add	sp, sp, #52	; 0x34
   1a874:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a878:	cmp	r3, #0
   1a87c:	bne	1aa0c <argp_error@@Base+0x5fc>
   1a880:	mov	fp, r3
   1a884:	ldr	r4, [sp, #12]
   1a888:	mov	r9, fp
   1a88c:	mov	r0, sl
   1a890:	str	r3, [sp, #16]
   1a894:	mvn	r3, #0
   1a898:	str	r3, [sp, #40]	; 0x28
   1a89c:	mov	r2, r5
   1a8a0:	mov	r1, r8
   1a8a4:	bl	11958 <strncmp@plt>
   1a8a8:	cmp	r0, #0
   1a8ac:	bne	1a8d0 <argp_error@@Base+0x4c0>
   1a8b0:	cmp	r9, #0
   1a8b4:	beq	1acd8 <argp_error@@Base+0x8c8>
   1a8b8:	ldr	r2, [r9, #4]
   1a8bc:	ldr	r3, [r4, #4]
   1a8c0:	cmp	r2, r3
   1a8c4:	beq	1ad14 <argp_error@@Base+0x904>
   1a8c8:	mov	r3, #1
   1a8cc:	str	r3, [sp, #16]
   1a8d0:	ldr	r0, [r4, #16]!
   1a8d4:	add	fp, fp, #1
   1a8d8:	cmp	r0, #0
   1a8dc:	bne	1a89c <argp_error@@Base+0x48c>
   1a8e0:	ldr	r3, [sp, #92]	; 0x5c
   1a8e4:	str	r0, [sp, #36]	; 0x24
   1a8e8:	str	r3, [sp, #44]	; 0x2c
   1a8ec:	ldr	r2, [sp, #36]	; 0x24
   1a8f0:	ldr	r3, [sp, #16]
   1a8f4:	cmp	r3, #0
   1a8f8:	cmpeq	r2, #0
   1a8fc:	beq	1a7c8 <argp_error@@Base+0x3b8>
   1a900:	ldr	r2, [sp, #100]	; 0x64
   1a904:	cmp	r2, #0
   1a908:	beq	1ab6c <argp_error@@Base+0x75c>
   1a90c:	cmp	r3, #0
   1a910:	bne	1ab44 <argp_error@@Base+0x734>
   1a914:	ldr	r5, [pc, #1108]	; 1ad70 <argp_error@@Base+0x960>
   1a918:	ldr	r3, [sp, #36]	; 0x24
   1a91c:	ldr	r7, [pc, #1104]	; 1ad74 <argp_error@@Base+0x964>
   1a920:	ldr	r0, [r5]
   1a924:	add	r6, r3, r6
   1a928:	mov	r4, r3
   1a92c:	bl	11904 <flockfile@plt>
   1a930:	ldr	r3, [sp, #24]
   1a934:	ldr	r0, [r5]
   1a938:	ldr	r1, [pc, #1080]	; 1ad78 <argp_error@@Base+0x968>
   1a93c:	ldr	r2, [r3]
   1a940:	ldr	r3, [sp, #96]	; 0x60
   1a944:	ldr	r3, [r3, #20]
   1a948:	str	r3, [sp]
   1a94c:	ldr	r3, [sp, #104]	; 0x68
   1a950:	bl	117d8 <fprintf@plt>
   1a954:	ldr	r8, [sp, #16]
   1a958:	ldr	r9, [sp, #12]
   1a95c:	b	1a96c <argp_error@@Base+0x55c>
   1a960:	cmp	r4, r6
   1a964:	add	r8, r8, #1
   1a968:	beq	1acfc <argp_error@@Base+0x8ec>
   1a96c:	ldrb	r3, [r4], #1
   1a970:	cmp	r3, #0
   1a974:	beq	1a960 <argp_error@@Base+0x550>
   1a978:	ldr	r3, [r9, r8, lsl #4]
   1a97c:	ldr	r2, [sp, #104]	; 0x68
   1a980:	mov	r1, r7
   1a984:	ldr	r0, [r5]
   1a988:	bl	117d8 <fprintf@plt>
   1a98c:	b	1a960 <argp_error@@Base+0x550>
   1a990:	mov	r9, r4
   1a994:	str	r4, [sp, #16]
   1a998:	str	r4, [sp, #44]	; 0x2c
   1a99c:	str	r4, [sp, #36]	; 0x24
   1a9a0:	mov	r1, r8
   1a9a4:	mov	r0, sl
   1a9a8:	mov	r8, r4
   1a9ac:	ldr	sl, [sp, #20]
   1a9b0:	ldr	r4, [sp, #96]	; 0x60
   1a9b4:	mov	fp, #1
   1a9b8:	mvn	r3, #0
   1a9bc:	str	r3, [sp, #40]	; 0x28
   1a9c0:	mov	r2, r5
   1a9c4:	bl	11958 <strncmp@plt>
   1a9c8:	cmp	r0, #0
   1a9cc:	bne	1a9f4 <argp_error@@Base+0x5e4>
   1a9d0:	cmp	r9, #0
   1a9d4:	beq	1acf0 <argp_error@@Base+0x8e0>
   1a9d8:	ldr	r3, [sp, #16]
   1a9dc:	cmp	r3, #0
   1a9e0:	bne	1a9f4 <argp_error@@Base+0x5e4>
   1a9e4:	ldr	r3, [sp, #36]	; 0x24
   1a9e8:	cmp	r3, #0
   1a9ec:	beq	1ac60 <argp_error@@Base+0x850>
   1a9f0:	strb	fp, [r3, r8]
   1a9f4:	ldr	r0, [sl, #16]!
   1a9f8:	add	r8, r8, #1
   1a9fc:	cmp	r0, #0
   1aa00:	beq	1a8ec <argp_error@@Base+0x4dc>
   1aa04:	ldr	r1, [r4, #20]
   1aa08:	b	1a9c0 <argp_error@@Base+0x5b0>
   1aa0c:	ldr	r3, [sp, #100]	; 0x64
   1aa10:	mov	r0, sl
   1aa14:	mov	r4, r3
   1aa18:	ldr	sl, [sp, #20]
   1aa1c:	mov	r9, r4
   1aa20:	str	r3, [sp, #16]
   1aa24:	mvn	r3, #0
   1aa28:	str	r3, [sp, #40]	; 0x28
   1aa2c:	mov	r2, r5
   1aa30:	mov	r1, r8
   1aa34:	bl	11958 <strncmp@plt>
   1aa38:	cmp	r0, #0
   1aa3c:	bne	1aa54 <argp_error@@Base+0x644>
   1aa40:	cmp	r9, #0
   1aa44:	moveq	r9, sl
   1aa48:	movne	r3, #1
   1aa4c:	strne	r3, [sp, #16]
   1aa50:	streq	r4, [sp, #40]	; 0x28
   1aa54:	ldr	r0, [sl, #16]!
   1aa58:	add	r4, r4, #1
   1aa5c:	cmp	r0, #0
   1aa60:	bne	1aa2c <argp_error@@Base+0x61c>
   1aa64:	ldr	r3, [sp, #100]	; 0x64
   1aa68:	str	r0, [sp, #36]	; 0x24
   1aa6c:	str	r3, [sp, #44]	; 0x2c
   1aa70:	b	1a8ec <argp_error@@Base+0x4dc>
   1aa74:	ldr	r3, [sp, #24]
   1aa78:	ldr	r1, [pc, #752]	; 1ad70 <argp_error@@Base+0x960>
   1aa7c:	ldr	r2, [r3]
   1aa80:	ldr	r3, [r9]
   1aa84:	ldr	r0, [r1]
   1aa88:	str	r3, [sp]
   1aa8c:	ldr	r1, [pc, #744]	; 1ad7c <argp_error@@Base+0x96c>
   1aa90:	ldr	r3, [sp, #104]	; 0x68
   1aa94:	bl	117d8 <fprintf@plt>
   1aa98:	ldr	r1, [sp, #96]	; 0x60
   1aa9c:	ldr	r2, [r9, #12]
   1aaa0:	mov	r3, #63	; 0x3f
   1aaa4:	str	r2, [r1, #8]
   1aaa8:	b	1a86c <argp_error@@Base+0x45c>
   1aaac:	ldr	r3, [sp, #92]	; 0x5c
   1aab0:	cmp	r3, #0
   1aab4:	bne	1ac98 <argp_error@@Base+0x888>
   1aab8:	ldr	r3, [sp, #100]	; 0x64
   1aabc:	cmp	r3, #0
   1aac0:	beq	1aaec <argp_error@@Base+0x6dc>
   1aac4:	ldr	r3, [sp, #24]
   1aac8:	ldr	r1, [pc, #672]	; 1ad70 <argp_error@@Base+0x960>
   1aacc:	ldr	r2, [r3]
   1aad0:	ldr	r3, [sp, #96]	; 0x60
   1aad4:	ldr	r0, [r1]
   1aad8:	ldr	r1, [pc, #672]	; 1ad80 <argp_error@@Base+0x970>
   1aadc:	ldr	r3, [r3, #20]
   1aae0:	str	r3, [sp]
   1aae4:	ldr	r3, [sp, #104]	; 0x68
   1aae8:	bl	117d8 <fprintf@plt>
   1aaec:	ldr	r3, [sp, #96]	; 0x60
   1aaf0:	ldr	r1, [sp, #96]	; 0x60
   1aaf4:	mov	r2, #0
   1aaf8:	ldr	r3, [r3]
   1aafc:	str	r2, [r1, #20]
   1ab00:	add	r3, r3, #1
   1ab04:	str	r3, [r1]
   1ab08:	mov	r3, #63	; 0x3f
   1ab0c:	mov	r0, r3
   1ab10:	str	r2, [r1, #8]
   1ab14:	add	sp, sp, #52	; 0x34
   1ab18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ab1c:	ldr	r1, [sp, #28]
   1ab20:	cmp	r3, r1
   1ab24:	bge	1abc4 <argp_error@@Base+0x7b4>
   1ab28:	ldr	r1, [sp, #24]
   1ab2c:	add	r2, r2, #2
   1ab30:	ldr	r3, [r1, r3, lsl #2]
   1ab34:	ldr	r1, [sp, #96]	; 0x60
   1ab38:	str	r3, [r1, #12]
   1ab3c:	str	r2, [r1]
   1ab40:	b	1a808 <argp_error@@Base+0x3f8>
   1ab44:	ldr	r3, [sp, #24]
   1ab48:	ldr	r1, [pc, #544]	; 1ad70 <argp_error@@Base+0x960>
   1ab4c:	ldr	r2, [r3]
   1ab50:	ldr	r3, [sp, #96]	; 0x60
   1ab54:	ldr	r0, [r1]
   1ab58:	ldr	r1, [pc, #548]	; 1ad84 <argp_error@@Base+0x974>
   1ab5c:	ldr	r3, [r3, #20]
   1ab60:	str	r3, [sp]
   1ab64:	ldr	r3, [sp, #104]	; 0x68
   1ab68:	bl	117d8 <fprintf@plt>
   1ab6c:	ldr	r3, [sp, #44]	; 0x2c
   1ab70:	cmp	r3, #0
   1ab74:	beq	1ab80 <argp_error@@Base+0x770>
   1ab78:	ldr	r0, [sp, #36]	; 0x24
   1ab7c:	bl	14a30 <argp_parse@@Base+0xf7c>
   1ab80:	ldr	r3, [sp, #96]	; 0x60
   1ab84:	ldr	r4, [r3, #20]
   1ab88:	mov	r0, r4
   1ab8c:	bl	117b4 <strlen@plt>
   1ab90:	ldr	r3, [sp, #96]	; 0x60
   1ab94:	ldr	r1, [sp, #96]	; 0x60
   1ab98:	mov	r2, #0
   1ab9c:	ldr	r3, [r3]
   1aba0:	str	r2, [r1, #8]
   1aba4:	add	r3, r3, #1
   1aba8:	str	r3, [r1]
   1abac:	mov	r3, #63	; 0x3f
   1abb0:	add	r0, r4, r0
   1abb4:	str	r0, [r1, #20]
   1abb8:	mov	r0, r3
   1abbc:	add	sp, sp, #52	; 0x34
   1abc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1abc4:	ldr	r3, [sp, #100]	; 0x64
   1abc8:	cmp	r3, #0
   1abcc:	bne	1abf4 <argp_error@@Base+0x7e4>
   1abd0:	ldr	r2, [sp, #96]	; 0x60
   1abd4:	ldr	r3, [r9, #12]
   1abd8:	str	r3, [r2, #8]
   1abdc:	ldr	r3, [sp, #32]
   1abe0:	ldrb	r3, [r3]
   1abe4:	cmp	r3, #58	; 0x3a
   1abe8:	movne	r3, #63	; 0x3f
   1abec:	moveq	r3, #58	; 0x3a
   1abf0:	b	1a82c <argp_error@@Base+0x41c>
   1abf4:	ldr	r3, [sp, #24]
   1abf8:	ldr	r1, [pc, #368]	; 1ad70 <argp_error@@Base+0x960>
   1abfc:	ldr	r2, [r3]
   1ac00:	ldr	r3, [r9]
   1ac04:	ldr	r0, [r1]
   1ac08:	str	r3, [sp]
   1ac0c:	ldr	r1, [pc, #372]	; 1ad88 <argp_error@@Base+0x978>
   1ac10:	ldr	r3, [sp, #104]	; 0x68
   1ac14:	bl	117d8 <fprintf@plt>
   1ac18:	b	1abd0 <argp_error@@Base+0x7c0>
   1ac1c:	mov	r0, r6
   1ac20:	bl	16044 <argp_parse@@Base+0x2590>
   1ac24:	subs	r3, r0, #0
   1ac28:	mov	r8, r3
   1ac2c:	str	r3, [sp, #36]	; 0x24
   1ac30:	mov	r3, #1
   1ac34:	streq	r3, [sp, #16]
   1ac38:	beq	1a7b0 <argp_error@@Base+0x3a0>
   1ac3c:	mov	r2, r6
   1ac40:	mov	r1, #0
   1ac44:	str	r3, [sp, #44]	; 0x2c
   1ac48:	bl	11808 <memset@plt>
   1ac4c:	ldr	r2, [sp, #40]	; 0x28
   1ac50:	mov	r1, #1
   1ac54:	ldr	r3, [sp, #36]	; 0x24
   1ac58:	strb	r1, [r8, r2]
   1ac5c:	b	1a7a8 <argp_error@@Base+0x398>
   1ac60:	mov	r0, r6
   1ac64:	bl	16044 <argp_parse@@Base+0x2590>
   1ac68:	subs	r3, r0, #0
   1ac6c:	str	r3, [sp, #36]	; 0x24
   1ac70:	beq	1ad64 <argp_error@@Base+0x954>
   1ac74:	mov	r2, r6
   1ac78:	mov	r1, #0
   1ac7c:	bl	11808 <memset@plt>
   1ac80:	mov	r2, #1
   1ac84:	str	r2, [sp, #44]	; 0x2c
   1ac88:	ldr	r3, [sp, #36]	; 0x24
   1ac8c:	ldr	r2, [sp, #40]	; 0x28
   1ac90:	strb	fp, [r3, r2]
   1ac94:	b	1a9f0 <argp_error@@Base+0x5e0>
   1ac98:	ldr	r3, [sp, #96]	; 0x60
   1ac9c:	ldr	r2, [sp, #24]
   1aca0:	ldr	r3, [r3]
   1aca4:	ldr	r3, [r2, r3, lsl #2]
   1aca8:	ldrb	r3, [r3, #1]
   1acac:	cmp	r3, #45	; 0x2d
   1acb0:	beq	1aab8 <argp_error@@Base+0x6a8>
   1acb4:	ldr	r3, [sp, #96]	; 0x60
   1acb8:	ldr	r0, [sp, #32]
   1acbc:	ldr	r3, [r3, #20]
   1acc0:	ldrb	r1, [r3]
   1acc4:	bl	117c0 <strchr@plt>
   1acc8:	cmp	r0, #0
   1accc:	beq	1aab8 <argp_error@@Base+0x6a8>
   1acd0:	mvn	r3, #0
   1acd4:	b	1a82c <argp_error@@Base+0x41c>
   1acd8:	str	fp, [sp, #40]	; 0x28
   1acdc:	mov	r9, r4
   1ace0:	b	1a8d0 <argp_error@@Base+0x4c0>
   1ace4:	str	fp, [sp, #40]	; 0x28
   1ace8:	mov	r9, r4
   1acec:	b	1a7b0 <argp_error@@Base+0x3a0>
   1acf0:	str	r8, [sp, #40]	; 0x28
   1acf4:	mov	r9, sl
   1acf8:	b	1a9f4 <argp_error@@Base+0x5e4>
   1acfc:	ldr	r1, [r5]
   1ad00:	mov	r0, #10
   1ad04:	bl	118bc <fputc@plt>
   1ad08:	ldr	r0, [r5]
   1ad0c:	bl	116c4 <funlockfile@plt>
   1ad10:	b	1ab6c <argp_error@@Base+0x75c>
   1ad14:	ldr	r2, [r9, #8]
   1ad18:	ldr	r3, [r4, #8]
   1ad1c:	cmp	r2, r3
   1ad20:	bne	1a8c8 <argp_error@@Base+0x4b8>
   1ad24:	ldr	r2, [r9, #12]
   1ad28:	ldr	r3, [r4, #12]
   1ad2c:	ldr	r1, [sp, #16]
   1ad30:	cmp	r2, r3
   1ad34:	movne	r1, #1
   1ad38:	str	r1, [sp, #16]
   1ad3c:	b	1a8d0 <argp_error@@Base+0x4c0>
   1ad40:	ldr	r2, [r9, #8]
   1ad44:	ldr	r3, [r4, #8]
   1ad48:	cmp	r2, r3
   1ad4c:	bne	1a790 <argp_error@@Base+0x380>
   1ad50:	ldr	r2, [r9, #12]
   1ad54:	ldr	r3, [r4, #12]
   1ad58:	cmp	r2, r3
   1ad5c:	bne	1a790 <argp_error@@Base+0x380>
   1ad60:	b	1a7b0 <argp_error@@Base+0x3a0>
   1ad64:	mov	r3, #1
   1ad68:	str	r3, [sp, #16]
   1ad6c:	b	1a9f4 <argp_error@@Base+0x5e4>
   1ad70:	andeq	lr, r2, r8, ror #9
   1ad74:	andeq	sp, r1, r4, ror fp
   1ad78:	andeq	sp, r1, r4, asr #22
   1ad7c:	muleq	r1, ip, fp
   1ad80:	andeq	sp, r1, ip, ror fp
   1ad84:	andeq	sp, r1, r4, lsr #22
   1ad88:	andeq	sp, r1, ip, asr #23
   1ad8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ad90:	sub	sp, sp, #36	; 0x24
   1ad94:	subs	r6, r0, #0
   1ad98:	ldr	r4, [sp, #80]	; 0x50
   1ad9c:	ldr	r8, [r4, #4]
   1ada0:	ble	1af74 <argp_error@@Base+0xb64>
   1ada4:	mov	sl, r3
   1ada8:	ldr	r3, [r4]
   1adac:	mov	r7, r2
   1adb0:	mov	r2, #0
   1adb4:	cmp	r3, r2
   1adb8:	mov	r9, r1
   1adbc:	str	r2, [r4, #12]
   1adc0:	beq	1affc <argp_error@@Base+0xbec>
   1adc4:	ldr	r2, [r4, #16]
   1adc8:	cmp	r2, #0
   1adcc:	bne	1af80 <argp_error@@Base+0xb70>
   1add0:	mov	r5, #0
   1add4:	str	r3, [r4, #32]
   1add8:	str	r3, [r4, #28]
   1addc:	str	r5, [r4, #20]
   1ade0:	ldrb	r3, [r7]
   1ade4:	cmp	r3, #45	; 0x2d
   1ade8:	moveq	r3, #2
   1adec:	addeq	r7, r7, #1
   1adf0:	streq	r3, [r4, #24]
   1adf4:	beq	1ae1c <argp_error@@Base+0xa0c>
   1adf8:	cmp	r3, #43	; 0x2b
   1adfc:	streq	r5, [r4, #24]
   1ae00:	addeq	r7, r7, #1
   1ae04:	beq	1ae1c <argp_error@@Base+0xa0c>
   1ae08:	ldr	r3, [sp, #84]	; 0x54
   1ae0c:	cmp	r3, #0
   1ae10:	beq	1b08c <argp_error@@Base+0xc7c>
   1ae14:	mov	r3, #0
   1ae18:	str	r3, [r4, #24]
   1ae1c:	mov	r3, #1
   1ae20:	str	r3, [r4, #16]
   1ae24:	ldrb	r3, [r7]
   1ae28:	cmp	r3, #58	; 0x3a
   1ae2c:	moveq	r8, #0
   1ae30:	cmp	r5, #0
   1ae34:	beq	1aedc <argp_error@@Base+0xacc>
   1ae38:	ldrb	r3, [r5]
   1ae3c:	cmp	r3, #0
   1ae40:	beq	1aedc <argp_error@@Base+0xacc>
   1ae44:	add	r3, r5, #1
   1ae48:	str	r3, [r4, #20]
   1ae4c:	ldrb	fp, [r5]
   1ae50:	mov	r0, r7
   1ae54:	str	r3, [sp, #28]
   1ae58:	mov	r1, fp
   1ae5c:	bl	117c0 <strchr@plt>
   1ae60:	ldrb	r1, [r5, #1]
   1ae64:	ldr	r3, [sp, #28]
   1ae68:	cmp	r1, #0
   1ae6c:	ldreq	r1, [r4]
   1ae70:	addeq	r1, r1, #1
   1ae74:	streq	r1, [r4]
   1ae78:	sub	r1, fp, #58	; 0x3a
   1ae7c:	mov	r2, r0
   1ae80:	cmp	r2, #0
   1ae84:	cmpne	r1, #1
   1ae88:	mov	r0, fp
   1ae8c:	bls	1afcc <argp_error@@Base+0xbbc>
   1ae90:	ldrb	r1, [r2]
   1ae94:	cmp	r1, #87	; 0x57
   1ae98:	ldrb	r1, [r2, #1]
   1ae9c:	beq	1b118 <argp_error@@Base+0xd08>
   1aea0:	cmp	r1, #58	; 0x3a
   1aea4:	bne	1afc4 <argp_error@@Base+0xbb4>
   1aea8:	ldrb	r2, [r2, #2]
   1aeac:	cmp	r2, #58	; 0x3a
   1aeb0:	ldrb	r2, [r5, #1]
   1aeb4:	beq	1b210 <argp_error@@Base+0xe00>
   1aeb8:	cmp	r2, #0
   1aebc:	beq	1b1f0 <argp_error@@Base+0xde0>
   1aec0:	ldr	r2, [r4]
   1aec4:	str	r3, [r4, #12]
   1aec8:	add	r3, r2, #1
   1aecc:	str	r3, [r4]
   1aed0:	mov	r3, #0
   1aed4:	str	r3, [r4, #20]
   1aed8:	b	1afc4 <argp_error@@Base+0xbb4>
   1aedc:	ldr	fp, [r4]
   1aee0:	ldr	r3, [r4, #32]
   1aee4:	ldr	r2, [r4, #28]
   1aee8:	cmp	r3, fp
   1aeec:	ldr	r3, [r4, #24]
   1aef0:	strgt	fp, [r4, #32]
   1aef4:	cmp	fp, r2
   1aef8:	movlt	r2, fp
   1aefc:	strlt	fp, [r4, #28]
   1af00:	cmp	r3, #1
   1af04:	beq	1b00c <argp_error@@Base+0xbfc>
   1af08:	cmp	r6, fp
   1af0c:	beq	1b074 <argp_error@@Base+0xc64>
   1af10:	ldr	r3, [pc, #972]	; 1b2e4 <argp_error@@Base+0xed4>
   1af14:	ldr	r5, [r9, fp, lsl #2]
   1af18:	mov	r1, r3
   1af1c:	mov	r0, r5
   1af20:	str	r3, [sp, #28]
   1af24:	bl	11574 <strcmp@plt>
   1af28:	ldr	r3, [sp, #28]
   1af2c:	cmp	r0, #0
   1af30:	bne	1af9c <argp_error@@Base+0xb8c>
   1af34:	ldr	r3, [r4, #28]
   1af38:	ldr	r2, [r4, #32]
   1af3c:	add	fp, fp, #1
   1af40:	cmp	r3, r2
   1af44:	str	fp, [r4]
   1af48:	beq	1b10c <argp_error@@Base+0xcfc>
   1af4c:	cmp	fp, r2
   1af50:	beq	1af64 <argp_error@@Base+0xb54>
   1af54:	mov	r0, r9
   1af58:	mov	r1, r4
   1af5c:	bl	1a5bc <argp_error@@Base+0x1ac>
   1af60:	ldr	r3, [r4, #28]
   1af64:	cmp	r6, r3
   1af68:	str	r6, [r4]
   1af6c:	str	r6, [r4, #32]
   1af70:	strne	r3, [r4]
   1af74:	mvn	r0, #0
   1af78:	add	sp, sp, #36	; 0x24
   1af7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1af80:	ldrb	r3, [r7]
   1af84:	ldr	r5, [r4, #20]
   1af88:	sub	r2, r3, #43	; 0x2b
   1af8c:	tst	r2, #253	; 0xfd
   1af90:	ldrbeq	r3, [r7, #1]
   1af94:	addeq	r7, r7, #1
   1af98:	b	1ae28 <argp_error@@Base+0xa18>
   1af9c:	ldrb	r2, [r5]
   1afa0:	cmp	r2, #45	; 0x2d
   1afa4:	beq	1b0c0 <argp_error@@Base+0xcb0>
   1afa8:	ldr	r3, [r4, #24]
   1afac:	cmp	r3, #0
   1afb0:	beq	1af74 <argp_error@@Base+0xb64>
   1afb4:	mov	r0, #1
   1afb8:	add	fp, fp, #1
   1afbc:	str	fp, [r4]
   1afc0:	str	r5, [r4, #12]
   1afc4:	add	sp, sp, #36	; 0x24
   1afc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1afcc:	cmp	r8, #0
   1afd0:	beq	1afec <argp_error@@Base+0xbdc>
   1afd4:	ldr	r1, [pc, #780]	; 1b2e8 <argp_error@@Base+0xed8>
   1afd8:	ldr	r2, [r9]
   1afdc:	mov	r3, fp
   1afe0:	ldr	r0, [r1]
   1afe4:	ldr	r1, [pc, #768]	; 1b2ec <argp_error@@Base+0xedc>
   1afe8:	bl	117d8 <fprintf@plt>
   1afec:	mov	r0, #63	; 0x3f
   1aff0:	str	fp, [r4, #8]
   1aff4:	add	sp, sp, #36	; 0x24
   1aff8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1affc:	mov	r2, #1
   1b000:	mov	r3, r2
   1b004:	str	r2, [r4]
   1b008:	b	1add0 <argp_error@@Base+0x9c0>
   1b00c:	ldr	r3, [r4, #32]
   1b010:	cmp	r3, r2
   1b014:	beq	1b18c <argp_error@@Base+0xd7c>
   1b018:	cmp	fp, r3
   1b01c:	beq	1b030 <argp_error@@Base+0xc20>
   1b020:	mov	r1, r4
   1b024:	mov	r0, r9
   1b028:	bl	1a5bc <argp_error@@Base+0x1ac>
   1b02c:	ldr	r3, [r4]
   1b030:	cmp	r6, r3
   1b034:	addgt	r1, r9, r3, lsl #2
   1b038:	bgt	1b050 <argp_error@@Base+0xc40>
   1b03c:	b	1b06c <argp_error@@Base+0xc5c>
   1b040:	add	r3, r3, #1
   1b044:	cmp	r6, r3
   1b048:	str	r3, [r4]
   1b04c:	beq	1b0ac <argp_error@@Base+0xc9c>
   1b050:	ldr	r2, [r1], #4
   1b054:	ldrb	r0, [r2]
   1b058:	cmp	r0, #45	; 0x2d
   1b05c:	bne	1b040 <argp_error@@Base+0xc30>
   1b060:	ldrb	r2, [r2, #1]
   1b064:	cmp	r2, #0
   1b068:	beq	1b040 <argp_error@@Base+0xc30>
   1b06c:	mov	fp, r3
   1b070:	b	1b0b0 <argp_error@@Base+0xca0>
   1b074:	ldr	r3, [r4, #28]
   1b078:	ldr	r6, [r4, #32]
   1b07c:	mvn	r0, #0
   1b080:	cmp	r6, r3
   1b084:	strne	r3, [r4]
   1b088:	b	1af78 <argp_error@@Base+0xb68>
   1b08c:	ldr	r0, [pc, #604]	; 1b2f0 <argp_error@@Base+0xee0>
   1b090:	bl	11718 <getenv@plt>
   1b094:	ldr	r5, [r4, #20]
   1b098:	cmp	r0, #0
   1b09c:	bne	1ae14 <argp_error@@Base+0xa04>
   1b0a0:	mov	r3, #1
   1b0a4:	str	r3, [r4, #24]
   1b0a8:	b	1ae1c <argp_error@@Base+0xa0c>
   1b0ac:	mov	fp, r6
   1b0b0:	cmp	r6, fp
   1b0b4:	str	fp, [r4, #32]
   1b0b8:	bne	1af10 <argp_error@@Base+0xb00>
   1b0bc:	b	1b074 <argp_error@@Base+0xc64>
   1b0c0:	ldrb	r1, [r5, #1]
   1b0c4:	cmp	r1, #0
   1b0c8:	beq	1afa8 <argp_error@@Base+0xb98>
   1b0cc:	cmp	sl, #0
   1b0d0:	beq	1b104 <argp_error@@Base+0xcf4>
   1b0d4:	cmp	r1, #45	; 0x2d
   1b0d8:	beq	1b234 <argp_error@@Base+0xe24>
   1b0dc:	ldr	r3, [sp, #76]	; 0x4c
   1b0e0:	cmp	r3, #0
   1b0e4:	beq	1b104 <argp_error@@Base+0xcf4>
   1b0e8:	ldrb	r3, [r5, #2]
   1b0ec:	cmp	r3, #0
   1b0f0:	bne	1b1a0 <argp_error@@Base+0xd90>
   1b0f4:	mov	r0, r7
   1b0f8:	bl	117c0 <strchr@plt>
   1b0fc:	cmp	r0, #0
   1b100:	beq	1b1a0 <argp_error@@Base+0xd90>
   1b104:	add	r5, r5, #1
   1b108:	b	1ae44 <argp_error@@Base+0xa34>
   1b10c:	mov	r3, fp
   1b110:	str	fp, [r4, #28]
   1b114:	b	1af64 <argp_error@@Base+0xb54>
   1b118:	adds	ip, sl, #0
   1b11c:	movne	ip, #1
   1b120:	cmp	r1, #59	; 0x3b
   1b124:	movne	ip, #0
   1b128:	cmp	ip, #0
   1b12c:	beq	1aea0 <argp_error@@Base+0xa90>
   1b130:	ldrb	r2, [r5, #1]
   1b134:	cmp	r2, #0
   1b138:	bne	1b14c <argp_error@@Base+0xd3c>
   1b13c:	ldr	r3, [r4]
   1b140:	cmp	r6, r3
   1b144:	ldrne	r3, [r9, r3, lsl #2]
   1b148:	beq	1b290 <argp_error@@Base+0xe80>
   1b14c:	str	r3, [r4, #20]
   1b150:	ldr	lr, [pc, #412]	; 1b2f4 <argp_error@@Base+0xee4>
   1b154:	ldr	r3, [sp, #72]	; 0x48
   1b158:	mov	ip, #0
   1b15c:	str	r3, [sp]
   1b160:	str	r8, [sp, #12]
   1b164:	str	r4, [sp, #8]
   1b168:	str	lr, [sp, #16]
   1b16c:	mov	r3, sl
   1b170:	str	ip, [r4, #12]
   1b174:	mov	r2, r7
   1b178:	mov	r1, r9
   1b17c:	mov	r0, r6
   1b180:	str	ip, [sp, #4]
   1b184:	bl	1a678 <argp_error@@Base+0x268>
   1b188:	b	1afc4 <argp_error@@Base+0xbb4>
   1b18c:	cmp	fp, r2
   1b190:	strne	fp, [r4, #28]
   1b194:	movne	r3, fp
   1b198:	moveq	r3, r2
   1b19c:	b	1b030 <argp_error@@Base+0xc20>
   1b1a0:	ldr	r2, [sp, #76]	; 0x4c
   1b1a4:	add	r5, r5, #1
   1b1a8:	str	r5, [r4, #20]
   1b1ac:	ldr	r3, [pc, #324]	; 1b2f8 <argp_error@@Base+0xee8>
   1b1b0:	str	r2, [sp, #4]
   1b1b4:	ldr	r2, [sp, #72]	; 0x48
   1b1b8:	str	r3, [sp, #16]
   1b1bc:	str	r2, [sp]
   1b1c0:	str	r8, [sp, #12]
   1b1c4:	str	r4, [sp, #8]
   1b1c8:	mov	r3, sl
   1b1cc:	mov	r2, r7
   1b1d0:	mov	r1, r9
   1b1d4:	mov	r0, r6
   1b1d8:	bl	1a678 <argp_error@@Base+0x268>
   1b1dc:	cmn	r0, #1
   1b1e0:	bne	1afc4 <argp_error@@Base+0xbb4>
   1b1e4:	ldr	r3, [r4]
   1b1e8:	ldr	r5, [r9, r3, lsl #2]
   1b1ec:	b	1b104 <argp_error@@Base+0xcf4>
   1b1f0:	ldr	r3, [r4]
   1b1f4:	cmp	r6, r3
   1b1f8:	beq	1b270 <argp_error@@Base+0xe60>
   1b1fc:	ldr	r2, [r9, r3, lsl #2]
   1b200:	add	r3, r3, #1
   1b204:	str	r2, [r4, #12]
   1b208:	str	r3, [r4]
   1b20c:	b	1aed0 <argp_error@@Base+0xac0>
   1b210:	cmp	r2, #0
   1b214:	moveq	r3, r2
   1b218:	ldrne	r2, [r4]
   1b21c:	str	r3, [r4, #12]
   1b220:	addne	r2, r2, #1
   1b224:	strne	r2, [r4]
   1b228:	mov	r2, #0
   1b22c:	str	r2, [r4, #20]
   1b230:	b	1afc4 <argp_error@@Base+0xbb4>
   1b234:	add	r5, r5, #2
   1b238:	str	r5, [r4, #20]
   1b23c:	str	r3, [sp, #16]
   1b240:	ldr	r3, [sp, #76]	; 0x4c
   1b244:	str	r8, [sp, #12]
   1b248:	str	r3, [sp, #4]
   1b24c:	ldr	r3, [sp, #72]	; 0x48
   1b250:	str	r4, [sp, #8]
   1b254:	str	r3, [sp]
   1b258:	mov	r2, r7
   1b25c:	mov	r3, sl
   1b260:	mov	r1, r9
   1b264:	mov	r0, r6
   1b268:	bl	1a678 <argp_error@@Base+0x268>
   1b26c:	b	1afc4 <argp_error@@Base+0xbb4>
   1b270:	cmp	r8, #0
   1b274:	bne	1b2c8 <argp_error@@Base+0xeb8>
   1b278:	str	fp, [r4, #8]
   1b27c:	ldrb	r0, [r7]
   1b280:	cmp	r0, #58	; 0x3a
   1b284:	movne	r0, #63	; 0x3f
   1b288:	moveq	r0, #58	; 0x3a
   1b28c:	b	1aed0 <argp_error@@Base+0xac0>
   1b290:	cmp	r8, #0
   1b294:	beq	1b2b0 <argp_error@@Base+0xea0>
   1b298:	ldr	r1, [pc, #72]	; 1b2e8 <argp_error@@Base+0xed8>
   1b29c:	ldr	r2, [r9]
   1b2a0:	mov	r3, fp
   1b2a4:	ldr	r0, [r1]
   1b2a8:	ldr	r1, [pc, #76]	; 1b2fc <argp_error@@Base+0xeec>
   1b2ac:	bl	117d8 <fprintf@plt>
   1b2b0:	str	fp, [r4, #8]
   1b2b4:	ldrb	r0, [r7]
   1b2b8:	cmp	r0, #58	; 0x3a
   1b2bc:	movne	r0, #63	; 0x3f
   1b2c0:	moveq	r0, #58	; 0x3a
   1b2c4:	b	1afc4 <argp_error@@Base+0xbb4>
   1b2c8:	ldr	r1, [pc, #24]	; 1b2e8 <argp_error@@Base+0xed8>
   1b2cc:	ldr	r2, [r9]
   1b2d0:	mov	r3, fp
   1b2d4:	ldr	r0, [r1]
   1b2d8:	ldr	r1, [pc, #28]	; 1b2fc <argp_error@@Base+0xeec>
   1b2dc:	bl	117d8 <fprintf@plt>
   1b2e0:	b	1b278 <argp_error@@Base+0xe68>
   1b2e4:	andeq	sp, r1, r4, asr #5
   1b2e8:	andeq	lr, r2, r8, ror #9
   1b2ec:	andeq	sp, r1, r8, lsl #24
   1b2f0:	strdeq	sp, [r1], -r4
   1b2f4:	andeq	sp, r1, r0, asr ip
   1b2f8:	andeq	sp, r1, r4, lsl #24
   1b2fc:	andeq	sp, r1, r4, lsr #24
   1b300:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b304:	sub	sp, sp, #44	; 0x2c
   1b308:	ldr	r7, [pc, #1572]	; 1b934 <argp_error@@Base+0x1524>
   1b30c:	ldr	r4, [pc, #1572]	; 1b938 <argp_error@@Base+0x1528>
   1b310:	subs	r6, r0, #0
   1b314:	ldm	r7, {r5, sl}
   1b318:	str	r1, [sp, #32]
   1b31c:	str	r3, [sp, #36]	; 0x24
   1b320:	stm	r4, {r5, sl}
   1b324:	ble	1b4d0 <argp_error@@Base+0x10c0>
   1b328:	mov	r3, #0
   1b32c:	cmp	r5, #0
   1b330:	mov	fp, r2
   1b334:	str	r3, [r4, #12]
   1b338:	beq	1b58c <argp_error@@Base+0x117c>
   1b33c:	ldr	r3, [r4, #16]
   1b340:	cmp	r3, #0
   1b344:	bne	1b4e8 <argp_error@@Base+0x10d8>
   1b348:	mov	r3, #0
   1b34c:	str	r5, [r4, #32]
   1b350:	str	r5, [r4, #28]
   1b354:	str	r3, [r4, #20]
   1b358:	ldrb	r2, [fp]
   1b35c:	cmp	r2, #45	; 0x2d
   1b360:	beq	1b63c <argp_error@@Base+0x122c>
   1b364:	cmp	r2, #43	; 0x2b
   1b368:	streq	r3, [r4, #24]
   1b36c:	addeq	fp, fp, #1
   1b370:	moveq	r5, r3
   1b374:	beq	1b390 <argp_error@@Base+0xf80>
   1b378:	ldr	r2, [sp, #88]	; 0x58
   1b37c:	cmp	r2, #0
   1b380:	movne	r5, r3
   1b384:	beq	1b61c <argp_error@@Base+0x120c>
   1b388:	mov	r3, #0
   1b38c:	str	r3, [r4, #24]
   1b390:	mov	r3, #1
   1b394:	str	r3, [r4, #16]
   1b398:	ldrb	r3, [fp]
   1b39c:	cmp	r3, #58	; 0x3a
   1b3a0:	moveq	sl, #0
   1b3a4:	cmp	r5, #0
   1b3a8:	beq	1b42c <argp_error@@Base+0x101c>
   1b3ac:	ldrb	r3, [r5]
   1b3b0:	cmp	r3, #0
   1b3b4:	beq	1b42c <argp_error@@Base+0x101c>
   1b3b8:	add	r9, r5, #1
   1b3bc:	str	r9, [r4, #20]
   1b3c0:	ldrb	r8, [r5]
   1b3c4:	mov	r0, fp
   1b3c8:	mov	r1, r8
   1b3cc:	bl	117c0 <strchr@plt>
   1b3d0:	ldrb	r3, [r5, #1]
   1b3d4:	str	r8, [sp, #28]
   1b3d8:	cmp	r3, #0
   1b3dc:	ldreq	r3, [r4]
   1b3e0:	addeq	r3, r3, #1
   1b3e4:	streq	r3, [r4]
   1b3e8:	sub	r3, r8, #58	; 0x3a
   1b3ec:	cmp	r0, #0
   1b3f0:	cmpne	r3, #1
   1b3f4:	bls	1b550 <argp_error@@Base+0x1140>
   1b3f8:	ldrb	r3, [r0]
   1b3fc:	cmp	r3, #87	; 0x57
   1b400:	ldrb	r3, [r0, #1]
   1b404:	beq	1b6c4 <argp_error@@Base+0x12b4>
   1b408:	cmp	r3, #58	; 0x3a
   1b40c:	beq	1b768 <argp_error@@Base+0x1358>
   1b410:	ldr	r3, [r4, #8]
   1b414:	mov	r0, r8
   1b418:	ldr	r9, [r4, #12]
   1b41c:	ldr	r5, [r4]
   1b420:	str	r3, [sp, #28]
   1b424:	mov	r2, r3
   1b428:	b	1b538 <argp_error@@Base+0x1128>
   1b42c:	ldr	r5, [r4]
   1b430:	ldr	r8, [r4, #32]
   1b434:	ldr	r3, [r4, #28]
   1b438:	cmp	r8, r5
   1b43c:	ldr	r2, [r4, #24]
   1b440:	movgt	r8, r5
   1b444:	strgt	r5, [r4, #32]
   1b448:	cmp	r5, r3
   1b44c:	movlt	r3, r5
   1b450:	strlt	r5, [r4, #28]
   1b454:	cmp	r2, #1
   1b458:	beq	1b59c <argp_error@@Base+0x118c>
   1b45c:	cmp	r6, r5
   1b460:	beq	1b604 <argp_error@@Base+0x11f4>
   1b464:	ldr	r3, [sp, #32]
   1b468:	ldr	r9, [r3, r5, lsl #2]
   1b46c:	ldr	r3, [pc, #1224]	; 1b93c <argp_error@@Base+0x152c>
   1b470:	mov	r0, r9
   1b474:	mov	r1, r3
   1b478:	str	r3, [sp, #28]
   1b47c:	bl	11574 <strcmp@plt>
   1b480:	ldr	r3, [sp, #28]
   1b484:	cmp	r0, #0
   1b488:	bne	1b504 <argp_error@@Base+0x10f4>
   1b48c:	add	r3, r5, #1
   1b490:	ldr	r5, [r4, #28]
   1b494:	str	r3, [r4]
   1b498:	cmp	r5, r8
   1b49c:	beq	1b6b8 <argp_error@@Base+0x12a8>
   1b4a0:	cmp	r3, r8
   1b4a4:	beq	1b4b8 <argp_error@@Base+0x10a8>
   1b4a8:	ldr	r0, [sp, #32]
   1b4ac:	ldr	r1, [pc, #1156]	; 1b938 <argp_error@@Base+0x1528>
   1b4b0:	bl	1a5bc <argp_error@@Base+0x1ac>
   1b4b4:	ldr	r5, [r4, #28]
   1b4b8:	mov	r8, r6
   1b4bc:	cmp	r8, r5
   1b4c0:	str	r6, [r4, #32]
   1b4c4:	str	r6, [r4]
   1b4c8:	moveq	r5, r6
   1b4cc:	bne	1b614 <argp_error@@Base+0x1204>
   1b4d0:	ldr	r3, [r4, #8]
   1b4d4:	ldr	r9, [r4, #12]
   1b4d8:	str	r3, [sp, #28]
   1b4dc:	mvn	r0, #0
   1b4e0:	mov	r2, r3
   1b4e4:	b	1b538 <argp_error@@Base+0x1128>
   1b4e8:	ldrb	r3, [r2]
   1b4ec:	ldr	r5, [r4, #20]
   1b4f0:	sub	r2, r3, #43	; 0x2b
   1b4f4:	tst	r2, #253	; 0xfd
   1b4f8:	ldrbeq	r3, [fp, #1]
   1b4fc:	addeq	fp, fp, #1
   1b500:	b	1b39c <argp_error@@Base+0xf8c>
   1b504:	ldrb	r2, [r9]
   1b508:	cmp	r2, #45	; 0x2d
   1b50c:	beq	1b668 <argp_error@@Base+0x1258>
   1b510:	ldr	r3, [r4, #24]
   1b514:	cmp	r3, #0
   1b518:	beq	1b4d0 <argp_error@@Base+0x10c0>
   1b51c:	ldr	r3, [r4, #8]
   1b520:	mov	r0, #1
   1b524:	mov	r2, r3
   1b528:	add	r5, r5, #1
   1b52c:	str	r5, [r4]
   1b530:	str	r9, [r4, #12]
   1b534:	str	r3, [sp, #28]
   1b538:	ldr	r3, [pc, #1024]	; 1b940 <argp_error@@Base+0x1530>
   1b53c:	str	r5, [r7]
   1b540:	str	r2, [r7, #8]
   1b544:	str	r9, [r3]
   1b548:	add	sp, sp, #44	; 0x2c
   1b54c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b550:	cmp	sl, #0
   1b554:	beq	1b574 <argp_error@@Base+0x1164>
   1b558:	ldr	r1, [pc, #996]	; 1b944 <argp_error@@Base+0x1534>
   1b55c:	ldr	r3, [sp, #32]
   1b560:	ldr	r0, [r1]
   1b564:	ldr	r2, [r3]
   1b568:	ldr	r1, [pc, #984]	; 1b948 <argp_error@@Base+0x1538>
   1b56c:	mov	r3, r8
   1b570:	bl	117d8 <fprintf@plt>
   1b574:	str	r8, [r4, #8]
   1b578:	ldr	r5, [r4]
   1b57c:	ldr	r9, [r4, #12]
   1b580:	mov	r0, #63	; 0x3f
   1b584:	ldr	r2, [sp, #28]
   1b588:	b	1b538 <argp_error@@Base+0x1128>
   1b58c:	mov	r3, #1
   1b590:	mov	r5, r3
   1b594:	str	r3, [r4]
   1b598:	b	1b348 <argp_error@@Base+0xf38>
   1b59c:	cmp	r8, r3
   1b5a0:	beq	1b758 <argp_error@@Base+0x1348>
   1b5a4:	cmp	r5, r8
   1b5a8:	beq	1b5bc <argp_error@@Base+0x11ac>
   1b5ac:	ldr	r1, [pc, #900]	; 1b938 <argp_error@@Base+0x1528>
   1b5b0:	ldr	r0, [sp, #32]
   1b5b4:	bl	1a5bc <argp_error@@Base+0x1ac>
   1b5b8:	ldr	r8, [r4]
   1b5bc:	cmp	r6, r8
   1b5c0:	ldrgt	r3, [sp, #32]
   1b5c4:	addgt	r2, r3, r8, lsl #2
   1b5c8:	bgt	1b5e0 <argp_error@@Base+0x11d0>
   1b5cc:	b	1b5fc <argp_error@@Base+0x11ec>
   1b5d0:	add	r8, r8, #1
   1b5d4:	cmp	r6, r8
   1b5d8:	str	r8, [r4]
   1b5dc:	beq	1b650 <argp_error@@Base+0x1240>
   1b5e0:	ldr	r3, [r2], #4
   1b5e4:	ldrb	r1, [r3]
   1b5e8:	cmp	r1, #45	; 0x2d
   1b5ec:	bne	1b5d0 <argp_error@@Base+0x11c0>
   1b5f0:	ldrb	r3, [r3, #1]
   1b5f4:	cmp	r3, #0
   1b5f8:	beq	1b5d0 <argp_error@@Base+0x11c0>
   1b5fc:	mov	r5, r8
   1b600:	b	1b654 <argp_error@@Base+0x1244>
   1b604:	ldr	r5, [r4, #28]
   1b608:	cmp	r8, r5
   1b60c:	moveq	r5, r6
   1b610:	beq	1b4d0 <argp_error@@Base+0x10c0>
   1b614:	str	r5, [r4]
   1b618:	b	1b4d0 <argp_error@@Base+0x10c0>
   1b61c:	ldr	r0, [pc, #808]	; 1b94c <argp_error@@Base+0x153c>
   1b620:	bl	11718 <getenv@plt>
   1b624:	ldr	r5, [r4, #20]
   1b628:	cmp	r0, #0
   1b62c:	bne	1b388 <argp_error@@Base+0xf78>
   1b630:	mov	r3, #1
   1b634:	str	r3, [r4, #24]
   1b638:	b	1b390 <argp_error@@Base+0xf80>
   1b63c:	mov	r2, #2
   1b640:	add	fp, fp, #1
   1b644:	mov	r5, r3
   1b648:	str	r2, [r4, #24]
   1b64c:	b	1b390 <argp_error@@Base+0xf80>
   1b650:	mov	r5, r6
   1b654:	cmp	r6, r5
   1b658:	mov	r8, r5
   1b65c:	str	r5, [r4, #32]
   1b660:	bne	1b464 <argp_error@@Base+0x1054>
   1b664:	b	1b604 <argp_error@@Base+0x11f4>
   1b668:	ldrb	r1, [r9, #1]
   1b66c:	cmp	r1, #0
   1b670:	beq	1b510 <argp_error@@Base+0x1100>
   1b674:	ldr	r2, [sp, #36]	; 0x24
   1b678:	cmp	r2, #0
   1b67c:	beq	1b6b0 <argp_error@@Base+0x12a0>
   1b680:	cmp	r1, #45	; 0x2d
   1b684:	beq	1b864 <argp_error@@Base+0x1454>
   1b688:	ldr	r3, [sp, #84]	; 0x54
   1b68c:	cmp	r3, #0
   1b690:	beq	1b6b0 <argp_error@@Base+0x12a0>
   1b694:	ldrb	r3, [r9, #2]
   1b698:	cmp	r3, #0
   1b69c:	bne	1b7ac <argp_error@@Base+0x139c>
   1b6a0:	mov	r0, fp
   1b6a4:	bl	117c0 <strchr@plt>
   1b6a8:	cmp	r0, #0
   1b6ac:	beq	1b7ac <argp_error@@Base+0x139c>
   1b6b0:	add	r5, r9, #1
   1b6b4:	b	1b3b8 <argp_error@@Base+0xfa8>
   1b6b8:	mov	r5, r3
   1b6bc:	str	r3, [r4, #28]
   1b6c0:	b	1b4b8 <argp_error@@Base+0x10a8>
   1b6c4:	ldr	r1, [sp, #36]	; 0x24
   1b6c8:	sub	r2, r3, #59	; 0x3b
   1b6cc:	cmp	r1, #0
   1b6d0:	clz	r2, r2
   1b6d4:	lsr	r2, r2, #5
   1b6d8:	moveq	r2, #0
   1b6dc:	cmp	r2, #0
   1b6e0:	beq	1b408 <argp_error@@Base+0xff8>
   1b6e4:	ldrb	r3, [r5, #1]
   1b6e8:	cmp	r3, #0
   1b6ec:	bne	1b704 <argp_error@@Base+0x12f4>
   1b6f0:	ldr	r3, [r4]
   1b6f4:	cmp	r6, r3
   1b6f8:	beq	1b8cc <argp_error@@Base+0x14bc>
   1b6fc:	ldr	r2, [sp, #32]
   1b700:	ldr	r9, [r2, r3, lsl #2]
   1b704:	ldr	r3, [sp, #80]	; 0x50
   1b708:	ldr	r1, [sp, #32]
   1b70c:	str	r3, [sp]
   1b710:	ldr	r3, [sp, #36]	; 0x24
   1b714:	ldr	lr, [pc, #564]	; 1b950 <argp_error@@Base+0x1540>
   1b718:	mov	r2, fp
   1b71c:	mov	r0, r6
   1b720:	mov	ip, #0
   1b724:	str	sl, [sp, #12]
   1b728:	str	r4, [sp, #8]
   1b72c:	str	lr, [sp, #16]
   1b730:	str	ip, [sp, #4]
   1b734:	str	r9, [r4, #20]
   1b738:	str	ip, [r4, #12]
   1b73c:	bl	1a678 <argp_error@@Base+0x268>
   1b740:	ldr	r3, [r4, #8]
   1b744:	ldr	r5, [r4]
   1b748:	ldr	r9, [r4, #12]
   1b74c:	str	r3, [sp, #28]
   1b750:	mov	r2, r3
   1b754:	b	1b538 <argp_error@@Base+0x1128>
   1b758:	cmp	r5, r8
   1b75c:	movne	r8, r5
   1b760:	strne	r5, [r4, #28]
   1b764:	b	1b5bc <argp_error@@Base+0x11ac>
   1b768:	ldrb	r3, [r0, #2]
   1b76c:	cmp	r3, #58	; 0x3a
   1b770:	ldrb	r3, [r5, #1]
   1b774:	beq	1b82c <argp_error@@Base+0x141c>
   1b778:	cmp	r3, #0
   1b77c:	ldr	r5, [r4]
   1b780:	beq	1b800 <argp_error@@Base+0x13f0>
   1b784:	ldr	r3, [r4, #8]
   1b788:	mov	r0, r8
   1b78c:	add	r5, r5, #1
   1b790:	str	r9, [r4, #12]
   1b794:	str	r5, [r4]
   1b798:	str	r3, [sp, #28]
   1b79c:	mov	r3, #0
   1b7a0:	str	r3, [r4, #20]
   1b7a4:	ldr	r2, [sp, #28]
   1b7a8:	b	1b538 <argp_error@@Base+0x1128>
   1b7ac:	ldr	r2, [sp, #84]	; 0x54
   1b7b0:	ldr	r3, [pc, #412]	; 1b954 <argp_error@@Base+0x1544>
   1b7b4:	str	r2, [sp, #4]
   1b7b8:	ldr	r2, [sp, #80]	; 0x50
   1b7bc:	str	r3, [sp, #16]
   1b7c0:	str	r2, [sp]
   1b7c4:	add	r9, r9, #1
   1b7c8:	str	sl, [sp, #12]
   1b7cc:	str	r4, [sp, #8]
   1b7d0:	ldr	r3, [sp, #36]	; 0x24
   1b7d4:	mov	r2, fp
   1b7d8:	ldr	r1, [sp, #32]
   1b7dc:	mov	r0, r6
   1b7e0:	str	r9, [r4, #20]
   1b7e4:	bl	1a678 <argp_error@@Base+0x268>
   1b7e8:	cmn	r0, #1
   1b7ec:	bne	1b740 <argp_error@@Base+0x1330>
   1b7f0:	ldr	r3, [r4]
   1b7f4:	ldr	r2, [sp, #32]
   1b7f8:	ldr	r9, [r2, r3, lsl #2]
   1b7fc:	b	1b6b0 <argp_error@@Base+0x12a0>
   1b800:	cmp	r6, r5
   1b804:	beq	1b89c <argp_error@@Base+0x148c>
   1b808:	ldr	r3, [r4, #8]
   1b80c:	mov	r0, r8
   1b810:	str	r3, [sp, #28]
   1b814:	ldr	r3, [sp, #32]
   1b818:	ldr	r9, [r3, r5, lsl #2]
   1b81c:	add	r5, r5, #1
   1b820:	str	r9, [r4, #12]
   1b824:	str	r5, [r4]
   1b828:	b	1b79c <argp_error@@Base+0x138c>
   1b82c:	cmp	r3, #0
   1b830:	moveq	r9, r3
   1b834:	ldrne	r5, [r4]
   1b838:	mov	r3, #0
   1b83c:	str	r3, [r4, #20]
   1b840:	ldr	r3, [r4, #8]
   1b844:	addne	r5, r5, #1
   1b848:	ldreq	r5, [r4]
   1b84c:	strne	r5, [r4]
   1b850:	str	r9, [r4, #12]
   1b854:	mov	r0, r8
   1b858:	str	r3, [sp, #28]
   1b85c:	mov	r2, r3
   1b860:	b	1b538 <argp_error@@Base+0x1128>
   1b864:	str	r3, [sp, #16]
   1b868:	ldr	r3, [sp, #84]	; 0x54
   1b86c:	add	r9, r9, #2
   1b870:	str	r3, [sp, #4]
   1b874:	ldr	r3, [sp, #80]	; 0x50
   1b878:	str	sl, [sp, #12]
   1b87c:	str	r3, [sp]
   1b880:	str	r4, [sp, #8]
   1b884:	mov	r3, r2
   1b888:	ldr	r1, [sp, #32]
   1b88c:	mov	r2, fp
   1b890:	mov	r0, r6
   1b894:	str	r9, [r4, #20]
   1b898:	b	1b73c <argp_error@@Base+0x132c>
   1b89c:	cmp	sl, #0
   1b8a0:	bne	1b914 <argp_error@@Base+0x1504>
   1b8a4:	str	r8, [r4, #8]
   1b8a8:	ldrb	r8, [fp]
   1b8ac:	cmp	r8, #58	; 0x3a
   1b8b0:	moveq	r0, r8
   1b8b4:	ldreq	r5, [r4]
   1b8b8:	ldreq	r9, [r4, #12]
   1b8bc:	ldrne	r5, [r4]
   1b8c0:	ldrne	r9, [r4, #12]
   1b8c4:	movne	r0, #63	; 0x3f
   1b8c8:	b	1b79c <argp_error@@Base+0x138c>
   1b8cc:	cmp	sl, #0
   1b8d0:	beq	1b8f0 <argp_error@@Base+0x14e0>
   1b8d4:	ldr	r1, [pc, #104]	; 1b944 <argp_error@@Base+0x1534>
   1b8d8:	ldr	r3, [sp, #32]
   1b8dc:	ldr	r0, [r1]
   1b8e0:	ldr	r2, [r3]
   1b8e4:	ldr	r1, [pc, #108]	; 1b958 <argp_error@@Base+0x1548>
   1b8e8:	mov	r3, r8
   1b8ec:	bl	117d8 <fprintf@plt>
   1b8f0:	str	r8, [r4, #8]
   1b8f4:	ldrb	r8, [fp]
   1b8f8:	ldr	r5, [r4]
   1b8fc:	ldr	r9, [r4, #12]
   1b900:	cmp	r8, #58	; 0x3a
   1b904:	movne	r0, #63	; 0x3f
   1b908:	moveq	r0, #58	; 0x3a
   1b90c:	ldr	r2, [sp, #28]
   1b910:	b	1b538 <argp_error@@Base+0x1128>
   1b914:	ldr	r3, [sp, #32]
   1b918:	ldr	r1, [pc, #36]	; 1b944 <argp_error@@Base+0x1534>
   1b91c:	ldr	r2, [r3]
   1b920:	ldr	r0, [r1]
   1b924:	mov	r3, r8
   1b928:	ldr	r1, [pc, #40]	; 1b958 <argp_error@@Base+0x1548>
   1b92c:	bl	117d8 <fprintf@plt>
   1b930:	b	1b8a4 <argp_error@@Base+0x1494>
   1b934:	andeq	lr, r2, r4, asr #9
   1b938:	andeq	lr, r2, r0, lsl r5
   1b93c:	andeq	sp, r1, r4, asr #5
   1b940:	andeq	lr, r2, r8, asr #10
   1b944:	andeq	lr, r2, r8, ror #9
   1b948:	andeq	sp, r1, r8, lsl #24
   1b94c:	strdeq	sp, [r1], -r4
   1b950:	andeq	sp, r1, r0, asr ip
   1b954:	andeq	sp, r1, r4, lsl #24
   1b958:	andeq	sp, r1, r4, lsr #24
   1b95c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b960:	sub	sp, sp, #20
   1b964:	ldr	r7, [pc, #1052]	; 1bd88 <argp_error@@Base+0x1978>
   1b968:	ldr	r4, [pc, #1052]	; 1bd8c <argp_error@@Base+0x197c>
   1b96c:	subs	r6, r0, #0
   1b970:	ldr	r5, [r7]
   1b974:	ldr	r3, [r7, #4]
   1b978:	str	r1, [sp, #4]
   1b97c:	str	r5, [r4]
   1b980:	str	r3, [r4, #4]
   1b984:	ble	1bc5c <argp_error@@Base+0x184c>
   1b988:	mov	sl, r2
   1b98c:	cmp	r5, #0
   1b990:	mov	r2, #0
   1b994:	str	r2, [r4, #12]
   1b998:	beq	1ba44 <argp_error@@Base+0x1634>
   1b99c:	ldr	r2, [r4, #16]
   1b9a0:	cmp	r2, #0
   1b9a4:	beq	1ba50 <argp_error@@Base+0x1640>
   1b9a8:	ldrb	r2, [sl]
   1b9ac:	sub	r1, r2, #43	; 0x2b
   1b9b0:	tst	r1, #253	; 0xfd
   1b9b4:	ldrbeq	r2, [sl, #1]
   1b9b8:	addeq	sl, sl, #1
   1b9bc:	cmp	r2, #58	; 0x3a
   1b9c0:	ldr	r2, [r4, #20]
   1b9c4:	moveq	r3, #0
   1b9c8:	cmp	r2, #0
   1b9cc:	beq	1baa4 <argp_error@@Base+0x1694>
   1b9d0:	ldrb	r1, [r2]
   1b9d4:	cmp	r1, #0
   1b9d8:	beq	1baa4 <argp_error@@Base+0x1694>
   1b9dc:	add	r9, r2, #1
   1b9e0:	str	r9, [r4, #20]
   1b9e4:	ldrb	r8, [r2]
   1b9e8:	mov	r0, sl
   1b9ec:	str	r3, [sp, #12]
   1b9f0:	mov	r1, r8
   1b9f4:	str	r2, [sp, #8]
   1b9f8:	bl	117c0 <strchr@plt>
   1b9fc:	ldr	r2, [sp, #8]
   1ba00:	mov	fp, r8
   1ba04:	ldr	r3, [sp, #12]
   1ba08:	ldrb	r1, [r2, #1]
   1ba0c:	cmp	r1, #0
   1ba10:	addeq	r5, r5, #1
   1ba14:	sub	r1, r8, #58	; 0x3a
   1ba18:	streq	r5, [r4]
   1ba1c:	cmp	r0, #0
   1ba20:	cmpne	r1, #1
   1ba24:	bls	1bb90 <argp_error@@Base+0x1780>
   1ba28:	ldrb	r1, [r0, #1]
   1ba2c:	cmp	r1, #58	; 0x3a
   1ba30:	beq	1bc9c <argp_error@@Base+0x188c>
   1ba34:	mov	r0, r8
   1ba38:	ldr	r9, [r4, #12]
   1ba3c:	ldr	fp, [r4, #8]
   1ba40:	b	1bb78 <argp_error@@Base+0x1768>
   1ba44:	mov	r2, #1
   1ba48:	mov	r5, r2
   1ba4c:	str	r2, [r4]
   1ba50:	mov	r2, #0
   1ba54:	str	r5, [r4, #32]
   1ba58:	str	r5, [r4, #28]
   1ba5c:	str	r2, [r4, #20]
   1ba60:	ldrb	r1, [sl]
   1ba64:	cmp	r1, #45	; 0x2d
   1ba68:	moveq	r1, #2
   1ba6c:	addeq	sl, sl, #1
   1ba70:	streq	r1, [r4, #24]
   1ba74:	beq	1ba90 <argp_error@@Base+0x1680>
   1ba78:	cmp	r1, #43	; 0x2b
   1ba7c:	addeq	sl, sl, #1
   1ba80:	moveq	r1, r2
   1ba84:	movne	r1, r2
   1ba88:	streq	r2, [r4, #24]
   1ba8c:	strne	r2, [r4, #24]
   1ba90:	mov	r2, #1
   1ba94:	str	r2, [r4, #16]
   1ba98:	ldrb	r2, [sl]
   1ba9c:	cmp	r2, #58	; 0x3a
   1baa0:	beq	1bbc8 <argp_error@@Base+0x17b8>
   1baa4:	add	r1, r4, #24
   1baa8:	ldm	r1, {r1, r2, r8}
   1baac:	cmp	r8, r5
   1bab0:	movgt	r8, r5
   1bab4:	strgt	r5, [r4, #32]
   1bab8:	cmp	r5, r2
   1babc:	movlt	r2, r5
   1bac0:	strlt	r5, [r4, #28]
   1bac4:	cmp	r1, #1
   1bac8:	beq	1bbdc <argp_error@@Base+0x17cc>
   1bacc:	cmp	r6, r5
   1bad0:	str	r3, [sp, #8]
   1bad4:	beq	1bc4c <argp_error@@Base+0x183c>
   1bad8:	ldr	fp, [sp, #4]
   1badc:	ldr	r1, [pc, #684]	; 1bd90 <argp_error@@Base+0x1980>
   1bae0:	ldr	r9, [fp, r5, lsl #2]
   1bae4:	mov	r0, r9
   1bae8:	bl	11574 <strcmp@plt>
   1baec:	ldr	r3, [sp, #8]
   1baf0:	cmp	r0, #0
   1baf4:	bne	1bb4c <argp_error@@Base+0x173c>
   1baf8:	add	r3, r5, #1
   1bafc:	ldr	r5, [r4, #28]
   1bb00:	str	r3, [r4]
   1bb04:	cmp	r5, r8
   1bb08:	beq	1bc90 <argp_error@@Base+0x1880>
   1bb0c:	cmp	r3, r8
   1bb10:	beq	1bb24 <argp_error@@Base+0x1714>
   1bb14:	mov	r0, fp
   1bb18:	ldr	r1, [pc, #620]	; 1bd8c <argp_error@@Base+0x197c>
   1bb1c:	bl	1a5bc <argp_error@@Base+0x1ac>
   1bb20:	ldr	r5, [r4, #28]
   1bb24:	mov	r8, r6
   1bb28:	cmp	r8, r5
   1bb2c:	str	r6, [r4, #32]
   1bb30:	str	r6, [r4]
   1bb34:	beq	1bc58 <argp_error@@Base+0x1848>
   1bb38:	str	r5, [r4]
   1bb3c:	ldr	r9, [r4, #12]
   1bb40:	ldr	fp, [r4, #8]
   1bb44:	mvn	r0, #0
   1bb48:	b	1bb78 <argp_error@@Base+0x1768>
   1bb4c:	ldrb	r2, [r9]
   1bb50:	cmp	r2, #45	; 0x2d
   1bb54:	beq	1bc7c <argp_error@@Base+0x186c>
   1bb58:	ldr	r3, [r4, #24]
   1bb5c:	cmp	r3, #0
   1bb60:	beq	1bc5c <argp_error@@Base+0x184c>
   1bb64:	ldr	fp, [r4, #8]
   1bb68:	mov	r0, #1
   1bb6c:	add	r5, r5, #1
   1bb70:	str	r5, [r4]
   1bb74:	str	r9, [r4, #12]
   1bb78:	ldr	r3, [pc, #532]	; 1bd94 <argp_error@@Base+0x1984>
   1bb7c:	str	r5, [r7]
   1bb80:	str	fp, [r7, #8]
   1bb84:	str	r9, [r3]
   1bb88:	add	sp, sp, #20
   1bb8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bb90:	cmp	r3, #0
   1bb94:	beq	1bbb8 <argp_error@@Base+0x17a8>
   1bb98:	ldr	r3, [sp, #4]
   1bb9c:	ldr	r1, [pc, #500]	; 1bd98 <argp_error@@Base+0x1988>
   1bba0:	ldr	r2, [r3]
   1bba4:	ldr	r0, [r1]
   1bba8:	mov	r3, r8
   1bbac:	ldr	r1, [pc, #488]	; 1bd9c <argp_error@@Base+0x198c>
   1bbb0:	bl	117d8 <fprintf@plt>
   1bbb4:	ldr	r5, [r4]
   1bbb8:	str	r8, [r4, #8]
   1bbbc:	ldr	r9, [r4, #12]
   1bbc0:	mov	r0, #63	; 0x3f
   1bbc4:	b	1bb78 <argp_error@@Base+0x1768>
   1bbc8:	cmp	r1, #1
   1bbcc:	mov	r8, r5
   1bbd0:	mov	r2, r5
   1bbd4:	mov	r3, #0
   1bbd8:	bne	1bacc <argp_error@@Base+0x16bc>
   1bbdc:	cmp	r2, r8
   1bbe0:	beq	1bcd4 <argp_error@@Base+0x18c4>
   1bbe4:	cmp	r5, r8
   1bbe8:	beq	1bc04 <argp_error@@Base+0x17f4>
   1bbec:	ldr	r1, [pc, #408]	; 1bd8c <argp_error@@Base+0x197c>
   1bbf0:	ldr	r0, [sp, #4]
   1bbf4:	str	r3, [sp, #8]
   1bbf8:	bl	1a5bc <argp_error@@Base+0x1ac>
   1bbfc:	ldr	r8, [r4]
   1bc00:	ldr	r3, [sp, #8]
   1bc04:	cmp	r6, r8
   1bc08:	ldrgt	r2, [sp, #4]
   1bc0c:	addgt	r1, r2, r8, lsl #2
   1bc10:	bgt	1bc28 <argp_error@@Base+0x1818>
   1bc14:	b	1bc44 <argp_error@@Base+0x1834>
   1bc18:	add	r8, r8, #1
   1bc1c:	cmp	r6, r8
   1bc20:	str	r8, [r4]
   1bc24:	beq	1bc6c <argp_error@@Base+0x185c>
   1bc28:	ldr	r2, [r1], #4
   1bc2c:	ldrb	r0, [r2]
   1bc30:	cmp	r0, #45	; 0x2d
   1bc34:	bne	1bc18 <argp_error@@Base+0x1808>
   1bc38:	ldrb	r2, [r2, #1]
   1bc3c:	cmp	r2, #0
   1bc40:	beq	1bc18 <argp_error@@Base+0x1808>
   1bc44:	mov	r5, r8
   1bc48:	b	1bc70 <argp_error@@Base+0x1860>
   1bc4c:	ldr	r5, [r4, #28]
   1bc50:	cmp	r8, r5
   1bc54:	bne	1bb38 <argp_error@@Base+0x1728>
   1bc58:	mov	r5, r6
   1bc5c:	ldr	r9, [r4, #12]
   1bc60:	ldr	fp, [r4, #8]
   1bc64:	mvn	r0, #0
   1bc68:	b	1bb78 <argp_error@@Base+0x1768>
   1bc6c:	mov	r5, r6
   1bc70:	mov	r8, r5
   1bc74:	str	r5, [r4, #32]
   1bc78:	b	1bacc <argp_error@@Base+0x16bc>
   1bc7c:	ldrb	r2, [r9, #1]
   1bc80:	cmp	r2, #0
   1bc84:	beq	1bb58 <argp_error@@Base+0x1748>
   1bc88:	add	r2, r9, #1
   1bc8c:	b	1b9dc <argp_error@@Base+0x15cc>
   1bc90:	mov	r5, r3
   1bc94:	str	r3, [r4, #28]
   1bc98:	b	1bb24 <argp_error@@Base+0x1714>
   1bc9c:	ldrb	r1, [r0, #2]
   1bca0:	cmp	r1, #58	; 0x3a
   1bca4:	beq	1bd10 <argp_error@@Base+0x1900>
   1bca8:	ldrb	r2, [r2, #1]
   1bcac:	cmp	r2, #0
   1bcb0:	beq	1bce4 <argp_error@@Base+0x18d4>
   1bcb4:	ldr	fp, [r4, #8]
   1bcb8:	mov	r0, r8
   1bcbc:	add	r5, r5, #1
   1bcc0:	str	r5, [r4]
   1bcc4:	str	r9, [r4, #12]
   1bcc8:	mov	r3, #0
   1bccc:	str	r3, [r4, #20]
   1bcd0:	b	1bb78 <argp_error@@Base+0x1768>
   1bcd4:	cmp	r5, r8
   1bcd8:	movne	r8, r5
   1bcdc:	strne	r5, [r4, #28]
   1bce0:	b	1bc04 <argp_error@@Base+0x17f4>
   1bce4:	cmp	r6, r5
   1bce8:	beq	1bd3c <argp_error@@Base+0x192c>
   1bcec:	ldr	r2, [sp, #4]
   1bcf0:	add	r3, r5, #1
   1bcf4:	ldr	fp, [r4, #8]
   1bcf8:	ldr	r9, [r2, r5, lsl #2]
   1bcfc:	mov	r0, r8
   1bd00:	mov	r5, r3
   1bd04:	str	r9, [r4, #12]
   1bd08:	str	r3, [r4]
   1bd0c:	b	1bcc8 <argp_error@@Base+0x18b8>
   1bd10:	ldrb	r3, [r2, #1]
   1bd14:	mov	r0, r8
   1bd18:	ldr	fp, [r4, #8]
   1bd1c:	cmp	r3, #0
   1bd20:	moveq	r9, r3
   1bd24:	addne	r5, r5, #1
   1bd28:	mov	r3, #0
   1bd2c:	strne	r5, [r4]
   1bd30:	str	r9, [r4, #12]
   1bd34:	str	r3, [r4, #20]
   1bd38:	b	1bb78 <argp_error@@Base+0x1768>
   1bd3c:	cmp	r3, #0
   1bd40:	beq	1bd64 <argp_error@@Base+0x1954>
   1bd44:	ldr	r3, [sp, #4]
   1bd48:	ldr	r1, [pc, #72]	; 1bd98 <argp_error@@Base+0x1988>
   1bd4c:	ldr	r2, [r3]
   1bd50:	ldr	r0, [r1]
   1bd54:	mov	r3, r8
   1bd58:	ldr	r1, [pc, #64]	; 1bda0 <argp_error@@Base+0x1990>
   1bd5c:	bl	117d8 <fprintf@plt>
   1bd60:	ldr	r6, [r4]
   1bd64:	str	r8, [r4, #8]
   1bd68:	ldrb	r8, [sl]
   1bd6c:	mov	r5, r6
   1bd70:	cmp	r8, #58	; 0x3a
   1bd74:	moveq	r0, r8
   1bd78:	ldreq	r9, [r4, #12]
   1bd7c:	ldrne	r9, [r4, #12]
   1bd80:	movne	r0, #63	; 0x3f
   1bd84:	b	1bcc8 <argp_error@@Base+0x18b8>
   1bd88:	andeq	lr, r2, r4, asr #9
   1bd8c:	andeq	lr, r2, r0, lsl r5
   1bd90:	andeq	sp, r1, r4, asr #5
   1bd94:	andeq	lr, r2, r8, asr #10
   1bd98:	andeq	lr, r2, r8, ror #9
   1bd9c:	andeq	sp, r1, r8, lsl #24
   1bda0:	andeq	sp, r1, r4, lsr #24
   1bda4:	push	{r4, r5, r6, lr}
   1bda8:	subs	r4, r2, #0
   1bdac:	mov	r6, r0
   1bdb0:	mov	r5, r1
   1bdb4:	beq	1bde0 <argp_error@@Base+0x19d0>
   1bdb8:	mov	r1, r4
   1bdbc:	mvn	r0, #0
   1bdc0:	bl	1c660 <argp_error@@Base+0x2250>
   1bdc4:	cmp	r0, r5
   1bdc8:	bcs	1bde0 <argp_error@@Base+0x19d0>
   1bdcc:	bl	117f0 <__errno_location@plt>
   1bdd0:	mov	r3, #12
   1bdd4:	str	r3, [r0]
   1bdd8:	mov	r0, #0
   1bddc:	pop	{r4, r5, r6, pc}
   1bde0:	mul	r1, r5, r4
   1bde4:	mov	r0, r6
   1bde8:	pop	{r4, r5, r6, lr}
   1bdec:	b	16070 <argp_parse@@Base+0x25bc>
   1bdf0:	push	{r4, r5, r6, r7, r8, lr}
   1bdf4:	mov	r8, r0
   1bdf8:	mov	r0, #36	; 0x24
   1bdfc:	mov	r7, r1
   1be00:	mov	r6, r2
   1be04:	mov	r5, r3
   1be08:	bl	16044 <argp_parse@@Base+0x2590>
   1be0c:	subs	r4, r0, #0
   1be10:	beq	1be54 <argp_error@@Base+0x1a44>
   1be14:	mov	r0, #0
   1be18:	str	r5, [r4, #12]
   1be1c:	str	r0, [r4, #20]
   1be20:	str	r0, [r4, #16]
   1be24:	str	r8, [r4]
   1be28:	str	r7, [r4, #4]
   1be2c:	str	r6, [r4, #8]
   1be30:	mov	r0, #200	; 0xc8
   1be34:	bl	16044 <argp_parse@@Base+0x2590>
   1be38:	cmp	r0, #0
   1be3c:	addne	r3, r0, #200	; 0xc8
   1be40:	mov	r5, r0
   1be44:	str	r0, [r4, #24]
   1be48:	strne	r0, [r4, #28]
   1be4c:	strne	r3, [r4, #32]
   1be50:	beq	1be5c <argp_error@@Base+0x1a4c>
   1be54:	mov	r0, r4
   1be58:	pop	{r4, r5, r6, r7, r8, pc}
   1be5c:	mov	r0, r4
   1be60:	bl	14a30 <argp_parse@@Base+0xf7c>
   1be64:	mov	r4, r5
   1be68:	b	1be54 <argp_error@@Base+0x1a44>
   1be6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1be70:	mov	r7, r0
   1be74:	ldr	r4, [r0, #24]
   1be78:	ldr	r3, [r0, #16]
   1be7c:	ldr	r9, [r0, #28]
   1be80:	sub	sp, sp, #12
   1be84:	add	r4, r4, r3
   1be88:	mov	sl, #32
   1be8c:	cmp	r4, r9
   1be90:	bcs	1bf64 <argp_error@@Base+0x1b54>
   1be94:	ldr	r8, [r7, #20]
   1be98:	cmp	r8, #0
   1be9c:	bne	1bf08 <argp_error@@Base+0x1af8>
   1bea0:	ldr	r5, [r7, #4]
   1bea4:	cmp	r5, #0
   1bea8:	beq	1c1d8 <argp_error@@Base+0x1dc8>
   1beac:	ldr	r2, [r7, #32]
   1beb0:	add	r3, r9, r5
   1beb4:	cmp	r2, r3
   1beb8:	bls	1bed0 <argp_error@@Base+0x1ac0>
   1bebc:	b	1c300 <argp_error@@Base+0x1ef0>
   1bec0:	cmp	r5, r8
   1bec4:	str	r1, [r0, #20]
   1bec8:	strb	sl, [r3]
   1becc:	beq	1befc <argp_error@@Base+0x1aec>
   1bed0:	ldr	r0, [r7]
   1bed4:	add	r8, r8, #1
   1bed8:	ldr	r3, [r0, #20]
   1bedc:	ldr	r2, [r0, #24]
   1bee0:	add	r1, r3, #1
   1bee4:	cmp	r3, r2
   1bee8:	bcc	1bec0 <argp_error@@Base+0x1ab0>
   1beec:	mov	r1, sl
   1bef0:	bl	11868 <__overflow@plt>
   1bef4:	cmp	r5, r8
   1bef8:	bne	1bed0 <argp_error@@Base+0x1ac0>
   1befc:	ldr	r9, [r7, #28]
   1bf00:	mov	r8, r5
   1bf04:	str	r5, [r7, #20]
   1bf08:	sub	fp, r9, r4
   1bf0c:	mov	r2, fp
   1bf10:	mov	r1, #10
   1bf14:	mov	r0, r4
   1bf18:	bl	1182c <memchr@plt>
   1bf1c:	cmp	r8, #0
   1bf20:	movlt	r8, #0
   1bf24:	movlt	r3, r8
   1bf28:	mov	r5, r0
   1bf2c:	strlt	r3, [r7, #20]
   1bf30:	cmp	r5, #0
   1bf34:	beq	1c1f8 <argp_error@@Base+0x1de8>
   1bf38:	sub	r2, r5, r4
   1bf3c:	ldr	r3, [r7, #8]
   1bf40:	add	r2, r2, r8
   1bf44:	cmp	r2, r3
   1bf48:	bge	1bf78 <argp_error@@Base+0x1b68>
   1bf4c:	ldr	r9, [r7, #28]
   1bf50:	add	r4, r5, #1
   1bf54:	mov	r3, #0
   1bf58:	cmp	r4, r9
   1bf5c:	str	r3, [r7, #20]
   1bf60:	bcc	1be94 <argp_error@@Base+0x1a84>
   1bf64:	ldr	r3, [r7, #24]
   1bf68:	sub	r9, r9, r3
   1bf6c:	str	r9, [r7, #16]
   1bf70:	add	sp, sp, #12
   1bf74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bf78:	ldr	r2, [r7, #12]
   1bf7c:	sub	r6, r3, #1
   1bf80:	cmp	r2, #0
   1bf84:	str	r2, [sp, #4]
   1bf88:	blt	1c2b0 <argp_error@@Base+0x1ea0>
   1bf8c:	add	r6, r6, #1
   1bf90:	sub	r8, r6, r8
   1bf94:	adds	r8, r4, r8
   1bf98:	bcs	1c230 <argp_error@@Base+0x1e20>
   1bf9c:	bl	11784 <__ctype_b_loc@plt>
   1bfa0:	mov	r3, r8
   1bfa4:	ldr	r0, [r0]
   1bfa8:	b	1bfb4 <argp_error@@Base+0x1ba4>
   1bfac:	cmp	r3, r4
   1bfb0:	bcc	1c234 <argp_error@@Base+0x1e24>
   1bfb4:	mov	r1, r3
   1bfb8:	sub	r3, r3, #1
   1bfbc:	ldrb	r2, [r1]
   1bfc0:	mov	r6, r3
   1bfc4:	lsl	r2, r2, #1
   1bfc8:	ldrh	r2, [r0, r2]
   1bfcc:	tst	r2, #1
   1bfd0:	beq	1bfac <argp_error@@Base+0x1b9c>
   1bfd4:	add	r6, r1, #1
   1bfd8:	cmp	r6, r4
   1bfdc:	bls	1c248 <argp_error@@Base+0x1e38>
   1bfe0:	cmp	r4, r1
   1bfe4:	bhi	1c240 <argp_error@@Base+0x1e30>
   1bfe8:	mov	r1, r3
   1bfec:	sub	r8, r4, #1
   1bff0:	b	1c00c <argp_error@@Base+0x1bfc>
   1bff4:	ldrb	r3, [r1]
   1bff8:	sub	r1, r1, #1
   1bffc:	lsl	r3, r3, #1
   1c000:	ldrh	r3, [r0, r3]
   1c004:	tst	r3, #1
   1c008:	beq	1c338 <argp_error@@Base+0x1f28>
   1c00c:	cmp	r8, r1
   1c010:	mov	r2, r1
   1c014:	bne	1bff4 <argp_error@@Base+0x1be4>
   1c018:	add	r8, r8, #1
   1c01c:	add	r3, fp, #1
   1c020:	add	r3, r4, r3
   1c024:	cmp	r6, r3
   1c028:	beq	1c108 <argp_error@@Base+0x1cf8>
   1c02c:	add	r5, r8, #1
   1c030:	ldr	r3, [sp, #4]
   1c034:	sub	r1, r6, r5
   1c038:	cmp	r1, r3
   1c03c:	bge	1c124 <argp_error@@Base+0x1d14>
   1c040:	cmp	r6, r9
   1c044:	bcs	1c11c <argp_error@@Base+0x1d0c>
   1c048:	ldr	r3, [r7, #32]
   1c04c:	ldr	r2, [sp, #4]
   1c050:	sub	r3, r3, r9
   1c054:	add	r0, r2, #1
   1c058:	cmp	r3, r0
   1c05c:	bgt	1c368 <argp_error@@Base+0x1f58>
   1c060:	ldr	r0, [r7, #24]
   1c064:	cmp	r8, r0
   1c068:	bls	1c07c <argp_error@@Base+0x1c6c>
   1c06c:	sub	r2, r8, r0
   1c070:	ldr	r3, [r7]
   1c074:	mov	r1, #1
   1c078:	bl	11634 <fwrite_unlocked@plt>
   1c07c:	ldr	r0, [r7]
   1c080:	ldr	r2, [r0, #24]
   1c084:	ldr	r3, [r0, #20]
   1c088:	cmp	r3, r2
   1c08c:	addcc	r2, r3, #1
   1c090:	strcc	r2, [r0, #20]
   1c094:	movcc	r2, #10
   1c098:	strbcc	r2, [r3]
   1c09c:	bcs	1c3a8 <argp_error@@Base+0x1f98>
   1c0a0:	ldr	r5, [r7, #24]
   1c0a4:	sub	r4, r4, r5
   1c0a8:	sub	r1, r6, r5
   1c0ac:	add	fp, fp, r4
   1c0b0:	mov	r9, r1
   1c0b4:	mov	r2, r5
   1c0b8:	ldr	r3, [r7, #12]
   1c0bc:	cmp	r3, r1
   1c0c0:	bgt	1c140 <argp_error@@Base+0x1d30>
   1c0c4:	cmp	r3, #0
   1c0c8:	mov	r4, r5
   1c0cc:	ble	1c0e4 <argp_error@@Base+0x1cd4>
   1c0d0:	strb	sl, [r4], #1
   1c0d4:	ldr	r3, [r7, #12]
   1c0d8:	sub	r1, r4, r5
   1c0dc:	cmp	r1, r3
   1c0e0:	blt	1c0d0 <argp_error@@Base+0x1cc0>
   1c0e4:	cmp	r4, r6
   1c0e8:	bcc	1c1bc <argp_error@@Base+0x1dac>
   1c0ec:	sub	r9, fp, r9
   1c0f0:	cmp	r3, #0
   1c0f4:	add	r9, r4, r9
   1c0f8:	mvneq	r3, #0
   1c0fc:	str	r9, [r7, #28]
   1c100:	str	r3, [r7, #20]
   1c104:	b	1be8c <argp_error@@Base+0x1a7c>
   1c108:	ldr	r3, [r7, #32]
   1c10c:	ldr	r2, [sp, #4]
   1c110:	sub	r3, r3, r8
   1c114:	cmp	r3, r2
   1c118:	ble	1c040 <argp_error@@Base+0x1c30>
   1c11c:	add	r5, r8, #1
   1c120:	sub	r1, r6, r5
   1c124:	mov	r3, #10
   1c128:	strb	r3, [r8]
   1c12c:	ldr	r3, [r7, #12]
   1c130:	sub	r9, r6, r4
   1c134:	cmp	r3, r1
   1c138:	mov	r2, r4
   1c13c:	ble	1c0c4 <argp_error@@Base+0x1cb4>
   1c140:	add	r1, fp, #1
   1c144:	add	r1, r2, r1
   1c148:	cmp	r6, r1
   1c14c:	beq	1c354 <argp_error@@Base+0x1f44>
   1c150:	cmp	r3, #0
   1c154:	ble	1c1b0 <argp_error@@Base+0x1da0>
   1c158:	mov	r4, #0
   1c15c:	mov	r8, r2
   1c160:	b	1c17c <argp_error@@Base+0x1d6c>
   1c164:	str	ip, [r0, #20]
   1c168:	strb	sl, [r3]
   1c16c:	ldr	r3, [r7, #12]
   1c170:	add	r4, r4, #1
   1c174:	cmp	r3, r4
   1c178:	ble	1c1ac <argp_error@@Base+0x1d9c>
   1c17c:	ldr	r0, [r7]
   1c180:	ldr	r3, [r0, #20]
   1c184:	ldr	r1, [r0, #24]
   1c188:	add	ip, r3, #1
   1c18c:	cmp	r3, r1
   1c190:	bcc	1c164 <argp_error@@Base+0x1d54>
   1c194:	mov	r1, sl
   1c198:	bl	11868 <__overflow@plt>
   1c19c:	ldr	r3, [r7, #12]
   1c1a0:	add	r4, r4, #1
   1c1a4:	cmp	r3, r4
   1c1a8:	bgt	1c17c <argp_error@@Base+0x1d6c>
   1c1ac:	mov	r2, r8
   1c1b0:	mov	r4, r5
   1c1b4:	cmp	r4, r6
   1c1b8:	bcs	1c0ec <argp_error@@Base+0x1cdc>
   1c1bc:	add	r2, r2, fp
   1c1c0:	sub	r2, r2, r6
   1c1c4:	mov	r1, r6
   1c1c8:	mov	r0, r4
   1c1cc:	bl	115c8 <memmove@plt>
   1c1d0:	ldr	r3, [r7, #12]
   1c1d4:	b	1c0ec <argp_error@@Base+0x1cdc>
   1c1d8:	sub	fp, r9, r4
   1c1dc:	mov	r2, fp
   1c1e0:	mov	r1, #10
   1c1e4:	mov	r0, r4
   1c1e8:	bl	1182c <memchr@plt>
   1c1ec:	mov	r5, r0
   1c1f0:	cmp	r5, #0
   1c1f4:	bne	1bf38 <argp_error@@Base+0x1b28>
   1c1f8:	ldr	r6, [r7, #8]
   1c1fc:	add	r3, fp, r8
   1c200:	cmp	r3, r6
   1c204:	bcc	1c3cc <argp_error@@Base+0x1fbc>
   1c208:	ldr	r2, [r7, #12]
   1c20c:	sub	r6, r6, #1
   1c210:	cmp	r2, #0
   1c214:	str	r2, [sp, #4]
   1c218:	blt	1c3b8 <argp_error@@Base+0x1fa8>
   1c21c:	add	r6, r6, #1
   1c220:	sub	r8, r6, r8
   1c224:	adds	r8, r4, r8
   1c228:	mov	r5, r9
   1c22c:	bcc	1bf9c <argp_error@@Base+0x1b8c>
   1c230:	mov	r6, r8
   1c234:	add	r6, r6, #1
   1c238:	cmp	r4, r6
   1c23c:	bcs	1c248 <argp_error@@Base+0x1e38>
   1c240:	mov	r8, r6
   1c244:	b	1c01c <argp_error@@Base+0x1c0c>
   1c248:	cmp	r8, r5
   1c24c:	bcs	1c284 <argp_error@@Base+0x1e74>
   1c250:	add	r6, r8, #1
   1c254:	b	1c278 <argp_error@@Base+0x1e68>
   1c258:	bl	11784 <__ctype_b_loc@plt>
   1c25c:	ldrb	r3, [r6]
   1c260:	add	r6, r6, #1
   1c264:	lsl	r3, r3, #1
   1c268:	ldr	r2, [r0]
   1c26c:	ldrh	r3, [r2, r3]
   1c270:	tst	r3, #1
   1c274:	bne	1c294 <argp_error@@Base+0x1e84>
   1c278:	cmp	r6, r5
   1c27c:	mov	r8, r6
   1c280:	bne	1c258 <argp_error@@Base+0x1e48>
   1c284:	cmp	r8, r5
   1c288:	beq	1c340 <argp_error@@Base+0x1f30>
   1c28c:	bl	11784 <__ctype_b_loc@plt>
   1c290:	ldr	r2, [r0]
   1c294:	mov	r6, r8
   1c298:	ldrb	r3, [r6, #1]!
   1c29c:	lsl	r3, r3, #1
   1c2a0:	ldrh	r3, [r2, r3]
   1c2a4:	tst	r3, #1
   1c2a8:	bne	1c298 <argp_error@@Base+0x1e88>
   1c2ac:	b	1c01c <argp_error@@Base+0x1c0c>
   1c2b0:	cmp	r9, r5
   1c2b4:	str	r3, [sp, #4]
   1c2b8:	bls	1c3b4 <argp_error@@Base+0x1fa4>
   1c2bc:	sub	r0, r6, r8
   1c2c0:	sub	r2, r9, r5
   1c2c4:	add	r0, r4, r0
   1c2c8:	mov	r1, r5
   1c2cc:	bl	115c8 <memmove@plt>
   1c2d0:	ldr	r2, [r7, #20]
   1c2d4:	ldr	r9, [r7, #28]
   1c2d8:	sub	r6, r6, r2
   1c2dc:	add	r6, r4, r6
   1c2e0:	mov	r3, #0
   1c2e4:	sub	r5, r6, r5
   1c2e8:	str	r3, [r7, #20]
   1c2ec:	ldr	r3, [sp, #4]
   1c2f0:	sub	r9, r9, r5
   1c2f4:	add	r4, r4, r3
   1c2f8:	str	r9, [r7, #28]
   1c2fc:	b	1be8c <argp_error@@Base+0x1a7c>
   1c300:	add	r6, r4, r5
   1c304:	sub	r2, r9, r4
   1c308:	mov	r1, r4
   1c30c:	mov	r0, r6
   1c310:	bl	115c8 <memmove@plt>
   1c314:	ldr	r3, [r7, #28]
   1c318:	mov	r0, r4
   1c31c:	add	r3, r3, r5
   1c320:	str	r3, [r7, #28]
   1c324:	mov	r2, r5
   1c328:	mov	r1, sl
   1c32c:	mov	r4, r6
   1c330:	bl	11808 <memset@plt>
   1c334:	b	1befc <argp_error@@Base+0x1aec>
   1c338:	add	r8, r2, #1
   1c33c:	b	1c01c <argp_error@@Base+0x1c0c>
   1c340:	mov	r3, #0
   1c344:	str	r3, [r7, #20]
   1c348:	add	r4, r8, #1
   1c34c:	ldr	r9, [r7, #28]
   1c350:	b	1be8c <argp_error@@Base+0x1a7c>
   1c354:	ldr	r1, [r7, #32]
   1c358:	sub	r1, r1, r6
   1c35c:	cmp	r3, r1
   1c360:	ble	1c0c4 <argp_error@@Base+0x1cb4>
   1c364:	b	1c150 <argp_error@@Base+0x1d40>
   1c368:	sub	r9, r9, r6
   1c36c:	mov	r1, r6
   1c370:	mov	r2, r9
   1c374:	add	r0, r8, r0
   1c378:	bl	115c8 <memmove@plt>
   1c37c:	ldr	r1, [r7, #12]
   1c380:	mov	r3, #10
   1c384:	add	r6, r1, #1
   1c388:	add	r6, r8, r6
   1c38c:	add	r9, r6, r9
   1c390:	sub	fp, r9, r4
   1c394:	add	r5, r8, #1
   1c398:	strb	r3, [r8]
   1c39c:	sub	r9, r6, r4
   1c3a0:	mov	r2, r4
   1c3a4:	b	1c0b8 <argp_error@@Base+0x1ca8>
   1c3a8:	mov	r1, #10
   1c3ac:	bl	11868 <__overflow@plt>
   1c3b0:	b	1c0a0 <argp_error@@Base+0x1c90>
   1c3b4:	add	r3, r8, fp
   1c3b8:	sub	r6, r6, r3
   1c3bc:	add	r9, r9, r6
   1c3c0:	str	r9, [r7, #28]
   1c3c4:	str	r3, [r7, #20]
   1c3c8:	b	1bf64 <argp_error@@Base+0x1b54>
   1c3cc:	str	r3, [r7, #20]
   1c3d0:	ldr	r9, [r7, #28]
   1c3d4:	b	1bf64 <argp_error@@Base+0x1b54>
   1c3d8:	push	{r4, lr}
   1c3dc:	mov	r4, r0
   1c3e0:	bl	1be6c <argp_error@@Base+0x1a5c>
   1c3e4:	ldr	r2, [r4, #28]
   1c3e8:	ldr	r0, [r4, #24]
   1c3ec:	cmp	r2, r0
   1c3f0:	bls	1c408 <argp_error@@Base+0x1ff8>
   1c3f4:	sub	r2, r2, r0
   1c3f8:	ldr	r3, [r4]
   1c3fc:	mov	r1, #1
   1c400:	bl	11634 <fwrite_unlocked@plt>
   1c404:	ldr	r0, [r4, #24]
   1c408:	bl	14a30 <argp_parse@@Base+0xf7c>
   1c40c:	mov	r0, r4
   1c410:	pop	{r4, lr}
   1c414:	b	14a30 <argp_parse@@Base+0xf7c>
   1c418:	ldr	r3, [r0, #32]
   1c41c:	ldr	r2, [r0, #28]
   1c420:	sub	r3, r3, r2
   1c424:	cmp	r3, r1
   1c428:	bcc	1c438 <argp_error@@Base+0x2028>
   1c42c:	mov	r3, #1
   1c430:	mov	r0, r3
   1c434:	bx	lr
   1c438:	push	{r4, r5, r6, lr}
   1c43c:	mov	r4, r0
   1c440:	mov	r5, r1
   1c444:	bl	1be6c <argp_error@@Base+0x1a5c>
   1c448:	ldr	r3, [r4, #24]
   1c44c:	ldr	r2, [r4, #28]
   1c450:	mov	r0, r3
   1c454:	sub	r2, r2, r3
   1c458:	mov	r1, #1
   1c45c:	ldr	r3, [r4]
   1c460:	bl	11634 <fwrite_unlocked@plt>
   1c464:	ldr	r2, [r4, #28]
   1c468:	ldr	r3, [r4, #24]
   1c46c:	sub	r1, r2, r3
   1c470:	cmp	r0, r1
   1c474:	bne	1c4bc <argp_error@@Base+0x20ac>
   1c478:	ldr	r1, [r4, #32]
   1c47c:	mov	r2, #0
   1c480:	sub	r1, r1, r3
   1c484:	cmp	r5, r1
   1c488:	str	r3, [r4, #28]
   1c48c:	str	r2, [r4, #16]
   1c490:	bls	1c4b0 <argp_error@@Base+0x20a0>
   1c494:	adds	r5, r5, r1
   1c498:	bcc	1c4ec <argp_error@@Base+0x20dc>
   1c49c:	bl	117f0 <__errno_location@plt>
   1c4a0:	mov	r2, #12
   1c4a4:	mov	r3, #0
   1c4a8:	str	r2, [r0]
   1c4ac:	b	1c4b4 <argp_error@@Base+0x20a4>
   1c4b0:	mov	r3, #1
   1c4b4:	mov	r0, r3
   1c4b8:	pop	{r4, r5, r6, pc}
   1c4bc:	ldr	r1, [r4, #16]
   1c4c0:	sub	r2, r2, r0
   1c4c4:	sub	r1, r1, r0
   1c4c8:	str	r2, [r4, #28]
   1c4cc:	str	r1, [r4, #16]
   1c4d0:	sub	r2, r2, r3
   1c4d4:	add	r1, r3, r0
   1c4d8:	mov	r0, r3
   1c4dc:	bl	115c8 <memmove@plt>
   1c4e0:	mov	r3, #0
   1c4e4:	mov	r0, r3
   1c4e8:	pop	{r4, r5, r6, pc}
   1c4ec:	mov	r0, r3
   1c4f0:	mov	r1, r5
   1c4f4:	bl	16070 <argp_parse@@Base+0x25bc>
   1c4f8:	cmp	r0, #0
   1c4fc:	beq	1c49c <argp_error@@Base+0x208c>
   1c500:	add	r5, r0, r5
   1c504:	mov	r3, #1
   1c508:	str	r5, [r4, #32]
   1c50c:	str	r0, [r4, #24]
   1c510:	str	r0, [r4, #28]
   1c514:	b	1c4b4 <argp_error@@Base+0x20a4>
   1c518:	push	{r1, r2, r3}
   1c51c:	push	{r4, r5, r6, r7, r8, r9, lr}
   1c520:	sub	sp, sp, #8
   1c524:	mov	r5, r0
   1c528:	ldr	r7, [sp, #36]	; 0x24
   1c52c:	mov	r4, #150	; 0x96
   1c530:	mov	r8, #1
   1c534:	mov	r9, #0
   1c538:	add	r6, sp, #40	; 0x28
   1c53c:	ldr	r1, [r5, #32]
   1c540:	ldr	r0, [r5, #28]
   1c544:	sub	r3, r1, r0
   1c548:	cmp	r4, r3
   1c54c:	bhi	1c594 <argp_error@@Base+0x2184>
   1c550:	sub	r4, r1, r0
   1c554:	mov	r1, r4
   1c558:	mov	r3, r6
   1c55c:	mov	r2, r7
   1c560:	str	r6, [sp, #4]
   1c564:	bl	11910 <vsnprintf@plt>
   1c568:	cmp	r4, r0
   1c56c:	bls	1c58c <argp_error@@Base+0x217c>
   1c570:	ldr	r3, [r5, #28]
   1c574:	add	r3, r3, r0
   1c578:	str	r3, [r5, #28]
   1c57c:	add	sp, sp, #8
   1c580:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1c584:	add	sp, sp, #12
   1c588:	bx	lr
   1c58c:	add	r4, r0, #1
   1c590:	b	1c53c <argp_error@@Base+0x212c>
   1c594:	mov	r0, r5
   1c598:	bl	1be6c <argp_error@@Base+0x1a5c>
   1c59c:	ldr	r3, [r5, #24]
   1c5a0:	ldr	r2, [r5, #28]
   1c5a4:	mov	r0, r3
   1c5a8:	sub	r2, r2, r3
   1c5ac:	mov	r1, r8
   1c5b0:	ldr	r3, [r5]
   1c5b4:	bl	11634 <fwrite_unlocked@plt>
   1c5b8:	ldr	r2, [r5, #28]
   1c5bc:	ldr	r3, [r5, #24]
   1c5c0:	sub	r1, r2, r3
   1c5c4:	cmp	r0, r1
   1c5c8:	bne	1c610 <argp_error@@Base+0x2200>
   1c5cc:	ldr	r1, [r5, #32]
   1c5d0:	str	r3, [r5, #28]
   1c5d4:	sub	r0, r1, r3
   1c5d8:	cmp	r4, r0
   1c5dc:	str	r9, [r5, #16]
   1c5e0:	movls	r0, r3
   1c5e4:	bls	1c550 <argp_error@@Base+0x2140>
   1c5e8:	adds	r4, r4, r0
   1c5ec:	bcc	1c638 <argp_error@@Base+0x2228>
   1c5f0:	bl	117f0 <__errno_location@plt>
   1c5f4:	mov	r3, #12
   1c5f8:	str	r3, [r0]
   1c5fc:	mvn	r0, #0
   1c600:	add	sp, sp, #8
   1c604:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1c608:	add	sp, sp, #12
   1c60c:	bx	lr
   1c610:	ldr	r1, [r5, #16]
   1c614:	sub	r2, r2, r0
   1c618:	sub	r1, r1, r0
   1c61c:	str	r2, [r5, #28]
   1c620:	str	r1, [r5, #16]
   1c624:	sub	r2, r2, r3
   1c628:	add	r1, r3, r0
   1c62c:	mov	r0, r3
   1c630:	bl	115c8 <memmove@plt>
   1c634:	b	1c5fc <argp_error@@Base+0x21ec>
   1c638:	mov	r1, r4
   1c63c:	mov	r0, r3
   1c640:	bl	16070 <argp_parse@@Base+0x25bc>
   1c644:	cmp	r0, #0
   1c648:	add	r1, r0, r4
   1c64c:	beq	1c5f0 <argp_error@@Base+0x21e0>
   1c650:	str	r0, [r5, #24]
   1c654:	str	r1, [r5, #32]
   1c658:	str	r0, [r5, #28]
   1c65c:	b	1c550 <argp_error@@Base+0x2140>
   1c660:	subs	r2, r1, #1
   1c664:	bxeq	lr
   1c668:	bcc	1c840 <argp_error@@Base+0x2430>
   1c66c:	cmp	r0, r1
   1c670:	bls	1c824 <argp_error@@Base+0x2414>
   1c674:	tst	r1, r2
   1c678:	beq	1c830 <argp_error@@Base+0x2420>
   1c67c:	clz	r3, r0
   1c680:	clz	r2, r1
   1c684:	sub	r3, r2, r3
   1c688:	rsbs	r3, r3, #31
   1c68c:	addne	r3, r3, r3, lsl #1
   1c690:	mov	r2, #0
   1c694:	addne	pc, pc, r3, lsl #2
   1c698:	nop			; (mov r0, r0)
   1c69c:	cmp	r0, r1, lsl #31
   1c6a0:	adc	r2, r2, r2
   1c6a4:	subcs	r0, r0, r1, lsl #31
   1c6a8:	cmp	r0, r1, lsl #30
   1c6ac:	adc	r2, r2, r2
   1c6b0:	subcs	r0, r0, r1, lsl #30
   1c6b4:	cmp	r0, r1, lsl #29
   1c6b8:	adc	r2, r2, r2
   1c6bc:	subcs	r0, r0, r1, lsl #29
   1c6c0:	cmp	r0, r1, lsl #28
   1c6c4:	adc	r2, r2, r2
   1c6c8:	subcs	r0, r0, r1, lsl #28
   1c6cc:	cmp	r0, r1, lsl #27
   1c6d0:	adc	r2, r2, r2
   1c6d4:	subcs	r0, r0, r1, lsl #27
   1c6d8:	cmp	r0, r1, lsl #26
   1c6dc:	adc	r2, r2, r2
   1c6e0:	subcs	r0, r0, r1, lsl #26
   1c6e4:	cmp	r0, r1, lsl #25
   1c6e8:	adc	r2, r2, r2
   1c6ec:	subcs	r0, r0, r1, lsl #25
   1c6f0:	cmp	r0, r1, lsl #24
   1c6f4:	adc	r2, r2, r2
   1c6f8:	subcs	r0, r0, r1, lsl #24
   1c6fc:	cmp	r0, r1, lsl #23
   1c700:	adc	r2, r2, r2
   1c704:	subcs	r0, r0, r1, lsl #23
   1c708:	cmp	r0, r1, lsl #22
   1c70c:	adc	r2, r2, r2
   1c710:	subcs	r0, r0, r1, lsl #22
   1c714:	cmp	r0, r1, lsl #21
   1c718:	adc	r2, r2, r2
   1c71c:	subcs	r0, r0, r1, lsl #21
   1c720:	cmp	r0, r1, lsl #20
   1c724:	adc	r2, r2, r2
   1c728:	subcs	r0, r0, r1, lsl #20
   1c72c:	cmp	r0, r1, lsl #19
   1c730:	adc	r2, r2, r2
   1c734:	subcs	r0, r0, r1, lsl #19
   1c738:	cmp	r0, r1, lsl #18
   1c73c:	adc	r2, r2, r2
   1c740:	subcs	r0, r0, r1, lsl #18
   1c744:	cmp	r0, r1, lsl #17
   1c748:	adc	r2, r2, r2
   1c74c:	subcs	r0, r0, r1, lsl #17
   1c750:	cmp	r0, r1, lsl #16
   1c754:	adc	r2, r2, r2
   1c758:	subcs	r0, r0, r1, lsl #16
   1c75c:	cmp	r0, r1, lsl #15
   1c760:	adc	r2, r2, r2
   1c764:	subcs	r0, r0, r1, lsl #15
   1c768:	cmp	r0, r1, lsl #14
   1c76c:	adc	r2, r2, r2
   1c770:	subcs	r0, r0, r1, lsl #14
   1c774:	cmp	r0, r1, lsl #13
   1c778:	adc	r2, r2, r2
   1c77c:	subcs	r0, r0, r1, lsl #13
   1c780:	cmp	r0, r1, lsl #12
   1c784:	adc	r2, r2, r2
   1c788:	subcs	r0, r0, r1, lsl #12
   1c78c:	cmp	r0, r1, lsl #11
   1c790:	adc	r2, r2, r2
   1c794:	subcs	r0, r0, r1, lsl #11
   1c798:	cmp	r0, r1, lsl #10
   1c79c:	adc	r2, r2, r2
   1c7a0:	subcs	r0, r0, r1, lsl #10
   1c7a4:	cmp	r0, r1, lsl #9
   1c7a8:	adc	r2, r2, r2
   1c7ac:	subcs	r0, r0, r1, lsl #9
   1c7b0:	cmp	r0, r1, lsl #8
   1c7b4:	adc	r2, r2, r2
   1c7b8:	subcs	r0, r0, r1, lsl #8
   1c7bc:	cmp	r0, r1, lsl #7
   1c7c0:	adc	r2, r2, r2
   1c7c4:	subcs	r0, r0, r1, lsl #7
   1c7c8:	cmp	r0, r1, lsl #6
   1c7cc:	adc	r2, r2, r2
   1c7d0:	subcs	r0, r0, r1, lsl #6
   1c7d4:	cmp	r0, r1, lsl #5
   1c7d8:	adc	r2, r2, r2
   1c7dc:	subcs	r0, r0, r1, lsl #5
   1c7e0:	cmp	r0, r1, lsl #4
   1c7e4:	adc	r2, r2, r2
   1c7e8:	subcs	r0, r0, r1, lsl #4
   1c7ec:	cmp	r0, r1, lsl #3
   1c7f0:	adc	r2, r2, r2
   1c7f4:	subcs	r0, r0, r1, lsl #3
   1c7f8:	cmp	r0, r1, lsl #2
   1c7fc:	adc	r2, r2, r2
   1c800:	subcs	r0, r0, r1, lsl #2
   1c804:	cmp	r0, r1, lsl #1
   1c808:	adc	r2, r2, r2
   1c80c:	subcs	r0, r0, r1, lsl #1
   1c810:	cmp	r0, r1
   1c814:	adc	r2, r2, r2
   1c818:	subcs	r0, r0, r1
   1c81c:	mov	r0, r2
   1c820:	bx	lr
   1c824:	moveq	r0, #1
   1c828:	movne	r0, #0
   1c82c:	bx	lr
   1c830:	clz	r2, r1
   1c834:	rsb	r2, r2, #31
   1c838:	lsr	r0, r0, r2
   1c83c:	bx	lr
   1c840:	cmp	r0, #0
   1c844:	mvnne	r0, #0
   1c848:	b	1caac <argp_error@@Base+0x269c>
   1c84c:	cmp	r1, #0
   1c850:	beq	1c840 <argp_error@@Base+0x2430>
   1c854:	push	{r0, r1, lr}
   1c858:	bl	1c660 <argp_error@@Base+0x2250>
   1c85c:	pop	{r1, r2, lr}
   1c860:	mul	r3, r2, r0
   1c864:	sub	r1, r1, r3
   1c868:	bx	lr
   1c86c:	cmp	r1, #0
   1c870:	beq	1ca7c <argp_error@@Base+0x266c>
   1c874:	eor	ip, r0, r1
   1c878:	rsbmi	r1, r1, #0
   1c87c:	subs	r2, r1, #1
   1c880:	beq	1ca48 <argp_error@@Base+0x2638>
   1c884:	movs	r3, r0
   1c888:	rsbmi	r3, r0, #0
   1c88c:	cmp	r3, r1
   1c890:	bls	1ca54 <argp_error@@Base+0x2644>
   1c894:	tst	r1, r2
   1c898:	beq	1ca64 <argp_error@@Base+0x2654>
   1c89c:	clz	r2, r3
   1c8a0:	clz	r0, r1
   1c8a4:	sub	r2, r0, r2
   1c8a8:	rsbs	r2, r2, #31
   1c8ac:	addne	r2, r2, r2, lsl #1
   1c8b0:	mov	r0, #0
   1c8b4:	addne	pc, pc, r2, lsl #2
   1c8b8:	nop			; (mov r0, r0)
   1c8bc:	cmp	r3, r1, lsl #31
   1c8c0:	adc	r0, r0, r0
   1c8c4:	subcs	r3, r3, r1, lsl #31
   1c8c8:	cmp	r3, r1, lsl #30
   1c8cc:	adc	r0, r0, r0
   1c8d0:	subcs	r3, r3, r1, lsl #30
   1c8d4:	cmp	r3, r1, lsl #29
   1c8d8:	adc	r0, r0, r0
   1c8dc:	subcs	r3, r3, r1, lsl #29
   1c8e0:	cmp	r3, r1, lsl #28
   1c8e4:	adc	r0, r0, r0
   1c8e8:	subcs	r3, r3, r1, lsl #28
   1c8ec:	cmp	r3, r1, lsl #27
   1c8f0:	adc	r0, r0, r0
   1c8f4:	subcs	r3, r3, r1, lsl #27
   1c8f8:	cmp	r3, r1, lsl #26
   1c8fc:	adc	r0, r0, r0
   1c900:	subcs	r3, r3, r1, lsl #26
   1c904:	cmp	r3, r1, lsl #25
   1c908:	adc	r0, r0, r0
   1c90c:	subcs	r3, r3, r1, lsl #25
   1c910:	cmp	r3, r1, lsl #24
   1c914:	adc	r0, r0, r0
   1c918:	subcs	r3, r3, r1, lsl #24
   1c91c:	cmp	r3, r1, lsl #23
   1c920:	adc	r0, r0, r0
   1c924:	subcs	r3, r3, r1, lsl #23
   1c928:	cmp	r3, r1, lsl #22
   1c92c:	adc	r0, r0, r0
   1c930:	subcs	r3, r3, r1, lsl #22
   1c934:	cmp	r3, r1, lsl #21
   1c938:	adc	r0, r0, r0
   1c93c:	subcs	r3, r3, r1, lsl #21
   1c940:	cmp	r3, r1, lsl #20
   1c944:	adc	r0, r0, r0
   1c948:	subcs	r3, r3, r1, lsl #20
   1c94c:	cmp	r3, r1, lsl #19
   1c950:	adc	r0, r0, r0
   1c954:	subcs	r3, r3, r1, lsl #19
   1c958:	cmp	r3, r1, lsl #18
   1c95c:	adc	r0, r0, r0
   1c960:	subcs	r3, r3, r1, lsl #18
   1c964:	cmp	r3, r1, lsl #17
   1c968:	adc	r0, r0, r0
   1c96c:	subcs	r3, r3, r1, lsl #17
   1c970:	cmp	r3, r1, lsl #16
   1c974:	adc	r0, r0, r0
   1c978:	subcs	r3, r3, r1, lsl #16
   1c97c:	cmp	r3, r1, lsl #15
   1c980:	adc	r0, r0, r0
   1c984:	subcs	r3, r3, r1, lsl #15
   1c988:	cmp	r3, r1, lsl #14
   1c98c:	adc	r0, r0, r0
   1c990:	subcs	r3, r3, r1, lsl #14
   1c994:	cmp	r3, r1, lsl #13
   1c998:	adc	r0, r0, r0
   1c99c:	subcs	r3, r3, r1, lsl #13
   1c9a0:	cmp	r3, r1, lsl #12
   1c9a4:	adc	r0, r0, r0
   1c9a8:	subcs	r3, r3, r1, lsl #12
   1c9ac:	cmp	r3, r1, lsl #11
   1c9b0:	adc	r0, r0, r0
   1c9b4:	subcs	r3, r3, r1, lsl #11
   1c9b8:	cmp	r3, r1, lsl #10
   1c9bc:	adc	r0, r0, r0
   1c9c0:	subcs	r3, r3, r1, lsl #10
   1c9c4:	cmp	r3, r1, lsl #9
   1c9c8:	adc	r0, r0, r0
   1c9cc:	subcs	r3, r3, r1, lsl #9
   1c9d0:	cmp	r3, r1, lsl #8
   1c9d4:	adc	r0, r0, r0
   1c9d8:	subcs	r3, r3, r1, lsl #8
   1c9dc:	cmp	r3, r1, lsl #7
   1c9e0:	adc	r0, r0, r0
   1c9e4:	subcs	r3, r3, r1, lsl #7
   1c9e8:	cmp	r3, r1, lsl #6
   1c9ec:	adc	r0, r0, r0
   1c9f0:	subcs	r3, r3, r1, lsl #6
   1c9f4:	cmp	r3, r1, lsl #5
   1c9f8:	adc	r0, r0, r0
   1c9fc:	subcs	r3, r3, r1, lsl #5
   1ca00:	cmp	r3, r1, lsl #4
   1ca04:	adc	r0, r0, r0
   1ca08:	subcs	r3, r3, r1, lsl #4
   1ca0c:	cmp	r3, r1, lsl #3
   1ca10:	adc	r0, r0, r0
   1ca14:	subcs	r3, r3, r1, lsl #3
   1ca18:	cmp	r3, r1, lsl #2
   1ca1c:	adc	r0, r0, r0
   1ca20:	subcs	r3, r3, r1, lsl #2
   1ca24:	cmp	r3, r1, lsl #1
   1ca28:	adc	r0, r0, r0
   1ca2c:	subcs	r3, r3, r1, lsl #1
   1ca30:	cmp	r3, r1
   1ca34:	adc	r0, r0, r0
   1ca38:	subcs	r3, r3, r1
   1ca3c:	cmp	ip, #0
   1ca40:	rsbmi	r0, r0, #0
   1ca44:	bx	lr
   1ca48:	teq	ip, r0
   1ca4c:	rsbmi	r0, r0, #0
   1ca50:	bx	lr
   1ca54:	movcc	r0, #0
   1ca58:	asreq	r0, ip, #31
   1ca5c:	orreq	r0, r0, #1
   1ca60:	bx	lr
   1ca64:	clz	r2, r1
   1ca68:	rsb	r2, r2, #31
   1ca6c:	cmp	ip, #0
   1ca70:	lsr	r0, r3, r2
   1ca74:	rsbmi	r0, r0, #0
   1ca78:	bx	lr
   1ca7c:	cmp	r0, #0
   1ca80:	mvngt	r0, #-2147483648	; 0x80000000
   1ca84:	movlt	r0, #-2147483648	; 0x80000000
   1ca88:	b	1caac <argp_error@@Base+0x269c>
   1ca8c:	cmp	r1, #0
   1ca90:	beq	1ca7c <argp_error@@Base+0x266c>
   1ca94:	push	{r0, r1, lr}
   1ca98:	bl	1c874 <argp_error@@Base+0x2464>
   1ca9c:	pop	{r1, r2, lr}
   1caa0:	mul	r3, r2, r0
   1caa4:	sub	r1, r1, r3
   1caa8:	bx	lr
   1caac:	push	{r1, lr}
   1cab0:	mov	r0, #8
   1cab4:	bl	11568 <raise@plt>
   1cab8:	pop	{r1, pc}
   1cabc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1cac0:	mov	r7, r0
   1cac4:	ldr	r6, [pc, #72]	; 1cb14 <argp_error@@Base+0x2704>
   1cac8:	ldr	r5, [pc, #72]	; 1cb18 <argp_error@@Base+0x2708>
   1cacc:	add	r6, pc, r6
   1cad0:	add	r5, pc, r5
   1cad4:	sub	r6, r6, r5
   1cad8:	mov	r8, r1
   1cadc:	mov	r9, r2
   1cae0:	bl	11530 <calloc@plt-0x20>
   1cae4:	asrs	r6, r6, #2
   1cae8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1caec:	mov	r4, #0
   1caf0:	add	r4, r4, #1
   1caf4:	ldr	r3, [r5], #4
   1caf8:	mov	r2, r9
   1cafc:	mov	r1, r8
   1cb00:	mov	r0, r7
   1cb04:	blx	r3
   1cb08:	cmp	r6, r4
   1cb0c:	bne	1caf0 <argp_error@@Base+0x26e0>
   1cb10:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1cb14:	andeq	r1, r1, r4, lsr r4
   1cb18:	andeq	r1, r1, ip, lsr #8
   1cb1c:	bx	lr

Disassembly of section .fini:

0001cb20 <.fini>:
   1cb20:	push	{r3, lr}
   1cb24:	pop	{r3, pc}
